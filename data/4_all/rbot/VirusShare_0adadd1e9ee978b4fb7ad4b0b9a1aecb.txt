and
fcmovb
xchg
xchg
popa
fmul
leave
or
add
sbb
sub
sub
push
movsb
push
pop
add
or
inc
add
lret
mov
jmp
ja
pop
call
arpl
cltd
mov
lea
mov
aam
mov
push
or
and
push
sub
test
sbb
push
xor
leave
or
mov
out
into
outsl
loopne
cmp
sbb
insl
mov
bound
push
jne
dec
aas
addl
dec
cmp
dec
and
pop
sub
sti
popf
lods
pop
fldcw
dec
movsb
inc
fdivr
ret
lret
lea
mov
mov
std
xchg
popa
push
dec
mov
mov
add
int3
sbb
out
add
movsl
and
and
xchg
je
cmpsl
sti
jbe
jbe
push
mov
adc
lret
stos
ljmp
test
pushf
movsb
xchg
inc
xor
roll
dec
mov
pop
shrb
in
jge
inc
popa
fucomi
insl
cmpsl
imulb
ret
repz
ret
imull
fldl
and
sub
test
pop
pop
mov
jecxz
mov
cmp
stc
jnp
mov
mov
adc
shl
xchg
add
and
int
popf
push
popa
sub
push
divl
pop
out
scas
jb
and
jge
popa
into
push
mov
sub
fnstsw
ds
lcall
xor
sbb
daa
mov
roll
adc
cmp
lahf
jmp
rolb
sub
push
andl
fimuls
adc
roll
fstpt
rcrb
sub
cmpsl
cld
add
outsl
sub
inc
pop
pop
in
jg
cwtl
add
loopne
push
daa
popa
nop
mov
sbb
pop
mov
mov
call
movsl
adc
pop
jae
aas
fmull
dec
dec
sbb
lahf
push
pop
dec
sbb
les
push
pushf
daa
hlt
insb
or
frstor
or
out
outsb
movb
addr16
ret
push
cli
adc
push
lds
inc
push
and
shlb
jg
and
ficomps
addr16
and
std
inc
es
mov
arpl
jno
out
scas
cli
jg
arpl
fildl
and
xchg
lret
xor
sbb
in
loop
addr16
fstpl
dec
jg
sub
testb
dec
neg
pop
fildll
fildll
jge
jge
std
in
cmp
add
fwait
mov
insb
pop
rolb
negl
mov
adc
dec
mov
inc
shlb
in
rorb
pop
popf
into
int3
outsb
pop
sbb
movl
pop
pop
sub
and
int3
mov
addr16
mov
popa
fistl
xor
mov
nop
add
jo
sbb
test
stos
cmpsl
ss
inc
icebp
pusha
adc
inc
sahf
pop
adc
outsl
lock
loope
and
sub
add
dec
dec
jecxz
lea
xor
cmpsb
fcoml
out
out
aaa
jnp
adc
push
mov
in
into
test
push
imull
adc
imul
lcall
mov
lahf
test
rcr
pop
popa
bnd
xchg
adc
mov
adcl
jg
test
sub
fwait
and
jecxz
nop
and
nop
or
or
lret
push
mov
push
pushf
cmpsb
mov
and
lods
sub
xor
in
rcr
popf
xchg
lods
orb
test
jne
shlb
mov
stc
in
cltd
mov
je
mov
xchg
andnps
mov
add
fdivl
and
lods
xor
lret
fs
pop
int
sbb
or
loop
and
std
mov
loop
cmp
js
adc
jle
xlat
rolb
daa
int
sbb
adcb
mov
pop
dec
loop
mov
outsl
mov
xchg
inc
mov
push
mov
fisubrs
into
stos
imul
pop
cli
sbb
outsl
inc
movsl
add
faddl
push
sbbl
and
mov
std
sbb
jecxz
or
aaa
add
dec
sub
cld
lds
xor
dec
notb
sub
out
js
inc
fcoms
dec
fbstp
fmuls
mov
xor
sahf
push
mov
aaa
rorb
sti
add
ja
xchg
sbb
and
push
sub
push
repz
stos
lret
aas
aam
inc
pop
xor
mov
adc
xchg
add
pop
cmp
incb
jnp
pusha
inc
xchg
adc
rcr
xchg
xorl
sahf
cs
push
mov
ja
test
sbb
and
ret
add
mov
inc
jb
jnp
mov
add
adc
inc
push
pop
fucom
sub
enter
ss
in
add
pop
and
or
mov
adc
or
add
scas
pushf
mov
adc
add
sbb
popf
mov
hlt
pop
negb
aaa
inc
outsl
imul
imul
xor
or
fnstenv
pop
pop
jbe
ds
inc
inc
push
push
and
into
nop
cli
mov
mov
xor
ljmp
sub
imul
mov
add
jae
ret
insb
fiadds
popa
test
pop
mov
mov
jns
fstpt
ret
fisubl
jg
cmp
mov
sbb
mov
jp
nop
addr16
pop
dec
xchg
sbb
ja
je
xchg
aas
or
push
jecxz
loop
test
mov
push
js
xchg
pop
popa
and
mov
ja
and
or
sbb
enter
sbb
or
aaa
sahf
shl
out
insb
out
ret
mov
fsubs
mov
or
mov
inc
lock
jne
mov
pop
insl
pop
add
das
aas
movsl
add
fsubr
std
std
xlat
imul
test
mov
dec
pop
cmp
inc
add
psrlq
movl
jbe
scas
xchg
add
mov
lea
pop
sbb
cmc
cmp
icebp
clc
push
scas
mov
rolb
int
inc
imul
cmp
fxch
cs
shl
rclb
lea
mov
jbe
mov
jmp
jmp
sahf
outsb
xchg
gs
lret
out
sub
das
aam
adc
or
aaa
pop
and
stos
mov
cmp
adc
out
stos
mov
add
fisubs
cmpsb
pushf
js
sarb
push
cltd
sub
addr16
xor
std
adc
lret
dec
pop
mov
adc
jne
aad
ds
pop
je
sub
pop
aad
jg
push
mov
lods
lcall
dec
mov
mov
and
push
andl
sbb
in
pusha
inc
decl
bound
dec
orl
fsubs
cmp
jno
and
inc
out
ljmp
add
mov
mov
sahf
aas
push
cli
mov
repz
pushf
mov
mov
mov
scas
jae
jnp
push
inc
dec
pop
xchg
jb
js
enter
mov
xchg
addr16
push
jnp
cmpsb
je
add
mov
pop
or
inc
ret
ret
mov
adc
xorl
xchg
loope
add
lret
movsl
adc
hlt
call
enter
cmp
jl
pop
outsl
icebp
sarl
cmpsb
fstpt
xchg
out
cmp
inc
xchg
cmp
adc
pop
xlat
xchg
setae
mov
dec
dec
lods
into
dec
xchg
jmp
shlb
call
lcall
lcall
loop
out
pop
cli
adc
and
rcrl
out
outsl
and
pop
movsl
push
xchg
sub
addr16
mov
mov
push
cltd
mov
popa
pushf
insb
pop
adc
test
jbe
scas
pusha
in
rorl
sbb
ret
mov
fsubrs
push
test
rclb
js
pop
sbb
pop
fsub
inc
mov
movsl
xchg
xor
stc
rorl
jp
mov
decb
xchg
fildll
mov
in
jmp
aaa
test
or
ficoms
testl
push
iret
dec
push
sub
adc
fdiv
dec
mov
cmp
push
mov
cld
in
out
loope
inc
mov
test
outsb
mov
insb
mov
push
pop
out
or
sbb
sub
xchg
lds
loope
sub
jle
in
pushf
cltd
stos
pop
add
out
std
sbb
or
cwtl
jge
lea
mov
mov
push
jmp
clc
test
mov
xchg
or
sub
repnz
push
and
call
das
pop
in
adc
adc
jnp
jb
popa
push
je
icebp
mov
xchg
decb
hlt
and
sti
data16
sbb
addr16
pop
adc
inc
adc
stos
cmp
sbb
leave
ds
xchg
sbb
popa
push
xor
inc
inc
xchg
in
pop
aas
add
push
adcl
sub
inc
xchg
out
mov
push
out
push
jo
cmpsb
push
insb
dec
or
aam
nop
xchg
sbb
pop
scas
ds
es
mov
fwait
xchg
lahf
outsb
mov
fwait
aas
repnz
ss
sti
arpl
arpl
jmp
aad
mov
cmpsw
pop
loop
dec
lods
sub
or
pop
ret
pop
lcall
inc
movsl
pop
cwtl
jns
sar
int
xchg
scas
mov
fcompl
sar
lcall
inc
insl
jo
lcall
mov
leave
std
rorb
mov
out
lods
bound
cmpsb
push
popa
inc
cmp
inc
jl
cmc
xchg
cmp
fwait
enter
push
or
mov
into
std
sbb
add
cmc
movl
lea
jle
lcall
hlt
jns
sub
mov
cmp
pop
scas
mov
arpl
fistpl
mov
fisttpll
dec
imul
mov
pop
xlat
jle
int3
jg
jae
enter
cmp
pop
cmp
xchg
push
cmp
andps
sub
outsl
or
push
adc
data16
subl
sub
add
adc
jb
pop
mov
popf
in
mov
popa
xor
data16
jle
ss
jo
ret
outsl
mov
mov
push
push
push
insl
add
shrl
aad
aaa
xchg
jge
roll
sbb
dec
or
test
loope
arpl
mov
ds
aam
xchg
loopne
test
scas
repnz
cmpxchg
dec
push
pop
call
loope
rcll
adc
xor
das
jae
lahf
jmp
or
stos
pop
push
pop
iret
cwtl
cmp
jge
enter
mov
imul
jo
add
aaa
sub
pushf
mov
add
ficoms
cltd
and
jne
xchg
jp
je
cld
jb
mov
mov
rcl
inc
bnd
cmp
mov
pop
or
adc
jl
je
xor
push
ret
repz
movsb
out
loop
lods
cmc
test
push
mov
lret
mov
scas
mov
or
sbb
mov
mov
add
out
push
cld
and
push
aam
xchg
stc
mov
lahf
movsb
cmpsb
xchg
jns,pn
mov
xchg
dec
mov
mov
dec
test
movsb
mov
loopne
ljmp
shl
mov
in
ja
out
inc
cli
sbb
ror
loope
lods
cmpsl
dec
xchg
push
sub
test
je
arpl
pop
cltd
movsl
mov
out
popa
rcrb
mov
mov
xchg
arpl
sahf
in
cmpsl
add
and
mov
jo
mov
push
xlat
inc
or
cmp
xchg
fs
pop
fisubl
pop
jg
and
out
enter
sub
shlb
pop
mov
aad
into
xchg
pop
pop
daa
je
lds
push
fnstsw
sbbl
ret
sbb
cs
adc
mov
sbb
cwtl
mov
aaa
mov
pop
mov
in
in
mov
mov
push
sub
aaa
pushf
cs
out
cmp
push
in
cld
fsubs
ds
xchg
nop
push
jb
cmc
xor
and
lret
fidivs
icebp
mov
jp
jge
sbb
mov
jne
shl
pop
jmp
mov
jno
pop
sub
lds
cmp
pop
out
inc
mov
iret
jno
sub
enter
jnp
cmp
xchg
jns
jmp
movsl
movsl
ja
xor
out
cmpsb
out
mov
xchg
xor
arpl
add
mov
xchg
push
sbb
pop
ds
aam
ret
out
js
insb
dec
lcall
lcall
js
inc
cmp
sti
in
cmp
cmp
les
andl
pop
mov
sti
fs
mov
jne
push
rolb
cmpsl
outsb
mov
nop
sbb
in
testb
xlat
movl
mov
ja
cmp
add
xor
sbb
mov
push
mov
adc
cwtl
bound
ljmp
xchg
sbb
popf
es
imul
jp
loopne
cmp
push
jmp
fldl
fidivrl
ljmp
cmc
mov
mov
mov
jmp
xchg
call
mov
ret
fadd
scas
outsb
pop
add
das
int3
popf
rcl
inc
pop
inc
xor
cltd
in
lods
hlt
dec
int3
dec
and
push
mov
stc
xchg
push
push
imul
jp
jae
fistl
shlb
inc
mov
push
sub
push
sub
jne
mov
sub
sub
icebp
shlb
int
mov
sti
sti
inc
dec
sbb
dec
ret
outsl
orl
xor
sbb
and
and
sub
jnp
jp
repnz
int
xor
adcl
push
cmp
dec
mov
ljmp
mul
fs
pop
andb
pop
push
dec
sbbl
int
cmp
sahf
jp
ficoml
test
xchg
out
mov
stos
in
adc
xchg
sbb
out
push
mov
xchg
outsb
outsb
inc
mov
add
inc
jecxz
adc
arpl
cltd
and
outsb
sub
scas
stos
push
jne
mov
sub
es
lods
adc
dec
xchg
popf
mov
js
push
fists
push
xlat
xor
xor
pop
aam
mov
ret
sbb
pop
mov
rcrb
subl
xor
adc
lods
je
mov
pop
lea
leave
cmpsl
pop
call
pop
jmp
mov
mov
cmp
cld
pop
test
call
push
sbb
sbb
loop
jecxz
inc
jmp
dec
fildll
leave
rol
jecxz
jnp
cltd
imul
cmp
fbstp
fisttpl
in
cltd
jb
fs
xchg
mov
inc
ja
insb
leave
test
fadds
jns
add
mov
xor
loop
jmp
xor
cmpsb
sbb
je
sub
mov
orb
mov
out
xlat
test
lods
sarl
lret
xchg
int3
dec
jbe
xchg
stos
mov
pushl
push
add
sub
iret
bound
lock
shr
lahf
jo
fdivr
adc
je
push
jnp
inc
rcrl
sahf
sub
adc
into
xchg
adc
and
xchg
xchg
jno
inc
cmp
lods
push
stos
cmp
mov
pushf
popf
das
dec
sar
in
and
rolb
jb
push
call
mov
dec
in
jg
addb
sbb
lock
fadds
fwait
cmpsb
mov
jno
insl
fbstp
out
aaa
pop
dec
xlat
xor
cmp
fstpt
cmc
push
mov
mov
rcrl
cmp
xchg
add
test
mov
lcall
bound
test
mov
jb
mov
imul
js
sub
iret
lds
cs
test
ret
mov
or
xchg
or
xchg
movsl
xor
xchg
shll
sub
push
sbb
ffree
lret
push
pop
in
and
mov
push
mov
mov
xchg
shll
hlt
int
in
cmp
rcrl
pop
xor
mov
leave
arpl
dec
stos
lods
cs
xor
lahf
or
xchg
fs
mov
jnp
sub
mov
imul
inc
lock
and
dec
daa
and
fbstp
cmp
mov
icebp
and
mov
ficompl
xchg
repnz
pop
andl
pusha
or
lcall
add
lea
mov
mov
in
not
idiv
bound
cli
pop
add
sub
push
in
inc
cmp
adc
cli
icebp
cmpsl
stos
aaa
sbb
xor
cmp
nop
fisubrl
cmpsb
or
shrl
out
shl
repz
sub
mov
mov
idivb
cli
movsb
mov
cmp
ds
push
push
fidivrl
ret
scas
daa
dec
lea
mov
rcr
mov
fwait
or
mov
add
cmc
jle
ficoms
jns
out
xor
call
loope
fidivl
jnp
jnp
push
jo
in
and
push
pop
push
jo
inc
jbe
mov
fstpt
lods
cld
rcl
lea
imul
cmp
cmp
fimuls
jbe
sbb
xchg
repz
sub
bound
insb
mov
jnp
fsubs
xor
sbb
inc
mov
xor
cs
sti
adc
fsts
xchg
jnp
in
push
jmp
pop
scas
movb
mov
sbb
inc
rol
fsubl
stc
mov
rcrb
jle
lds
imul
mov
jmp
test
rcll
lds
sti
push
stos
pop
dec
push
pop
push
idivl
xor
jb
sbb
ds
push
jg
aam
dec
mov
clc
dec
lods
dec
loop
add
xchg
sbb
or
jns
imul
scas
std
or
and
pop
sarb
pop
sbb
xchg
push
cmp
add
into
pushf
sub
hlt
in
aam
nop
lahf
pop
dec
pop
aad
std
add
jo
loope
mov
jns
fwait
sub
sbb
cmp
inc
mov
inc
loopne
test
scas
hlt
and
lret
pop
imul
inc
or
sbb
loopne
lods
nop
inc
cmpsb
ds
jle
lret
sar
scas
xorb
jecxz
cmpxchg
jno
add
xchg
xchg
je
int
xorb
and
cltd
lret
sti
pop
and
lds
popf
lahf
aam
or
jecxz
push
pop
jmp
pop
sbb
stos
lret
out
jle
dec
xchg
push
lret
in
adc
movsl
cmp
push
add
fstpl
mov
cmp
jge
sub
dec
pop
push
std
arpl
and
sahf
push
les
mov
ljmp
dec
into
aam
scas
jle
mov
push
push
lret
add
jae
push
sahf
or
push
xor
mov
std
in
pop
push
out
dec
jp
pusha
scas
or
aam
aam
cmc
mov
scas
outsb
adc
shlb
xchg
sub
jmp
in
aad
pop
cmp
adc
add
mov
jg
pop
insl
xor
fidivrl
ljmp
lea
mov
js
enter
adc
stos
inc
inc
inc
lds
into
test
or
jp
push
cmp
jle
jne
mov
or
scas
adc
insb
je
cmp
ret
movb
cmpsl
pop
inc
ret
mov
scas
cmp
sub
xor
rcll
std
fsubrs
vpunpckhqdq
jo
cs
dec
push
add
pop
add
pop
call
call
lock
stos
dec
add
pop
std
ljmp
subl
ret
lds
cmp
movl
cmpsb
sub
fmuls
pop
add
mov
xchg
push
inc
dec
insb
js
push
movsl
scas
fwait
push
mov
jg
jb
sahf
mov
icebp
rcll
adc
out
ret
cli
push
imul
out
int
mov
add
mov
popa
push
enter
test
sub
xchg
sarl
and
fildll
cmpsb
push
pop
push
push
add
sub
cmpsl
sahf
cs
scas
add
mov
lea
mov
mov
lahf
or
sub
inc
push
sbb
subb
or
repnz
and
xor
pop
js
stc
mov
jle
insb
shr
dec
xor
jno
out
daa
and
xchg
mov
repz
arpl
ljmp
jg
mov
sbb
ret
jnp
jecxz
arpl
jmp
lock
push
pushf
cmpsb
push
lods
and
cmp
std
add
or
dec
fs
shlb
adc
and
pop
das
mov
mov
call
test
inc
fstl
int3
cwtl
mov
fldenv
arpl
icebp
or
sbb
adc
outsl
sub
lds
test
xchg
xlat
push
or
mov
push
imul
fbstp
iret
ljmp
sub
dec
mov
lea
mov
and
mov
pop
sahf
sbb
mov
es
fbstp
xor
pop
adc
jns
imul
xor
jne
push
mov
mov
lds
divb
mov
iret
inc
loopne
pusha
or
sahf
pop
xchg
sbb
mov
aad
inc
in
cmp
iret
fldcw
call
jle
pop
js
mov
add
pop
xchg
shlb
cmp
push
test
les
xchg
ret
cmp
arpl
push
aaa
nop
ss
xor
rorl
icebp
jecxz
int
iret
or
das
rcll
sub
push
pop
leave
pop
add
xchg
movsl
iret
rcll
dec
ja
stc
jp
ret
xor
pop
jmp
dec
test
jecxz
xor
xchg
sbb
ret
subb
inc
cld
inc
mov
mov
scas
shl
xchg
test
jge
cmp
out
das
imul
jae
andb
outsl
ja
and
jmp
mov
out
or
jb
sub
divl
inc
bound
adc
js
jb
and
mov
out
cltd
daa
fldenv
xchg
pop
arpl
mov
and
addr16
push
addb
adc
loop
cli
pop
in
or
sub
pop
lret
call
add
inc
pop
add
out
std
jecxz
shl
mov
in
popa
roll
push
lcall
mov
std
add
push
jle
mov
push
test
sub
ret
mov
mov
enter
sbb
cmp
xchg
adc
mov
jne
push
in
jecxz
jg
shl
push
inc
rcr
out
orb
or
shlb
add
mov
in
loop
inc
test
fwait
cwtl
inc
lret
xor
push
out
xchg
or
inc
mov
in
jno
popl
jns
loopne
xchg
and
jnp
adc
movl
cmp
adcb
lahf
pop
cmp
daa
add
je
dec
lds
rcr
push
mov
jge
out
hlt
imul
js
jo
push
mov
std
push
rcll
add
jl
scas
cli
sub
shl
dec
xchg
xchg
imul
mov
stos
add
movsb
ret
call
popa
cmp
or
lock
in
cmpsl
add
mov
idivl
cs
xchg
push
mov
push
cmp
sbb
mov
xchg
lock
mov
imul
push
jmp
arpl
popf
mov
xor
push
pop
cmpsl
xchg
cli
rolb
and
cmp
icebp
dec
subb
jg
negb
lcall
rcrb
adc
inc
fldt
es
orl
insb
addb
pop
ss
mov
add
xchg
xchg
adc
ss
pop
fildl
clc
test
les
imul
arpl
dec
add
adc
mov
stos
cmpsl
outsl
push
jnp
loop
dec
aad
repnz
mov
pop
jg
sbb
fidivrl
mov
jns
test
sahf
lcall
push
pop
fs
out
js
mov
cli
aas
test
mov
fmul
dec
outsb
stos
lret
jae
or
xchg
cs
push
inc
sub
test
pusha
add
test
rcrb
scas
pcmpeqw
inc
stos
int3
mov
subb
sub
mov
jae
not
in
pushf
jle
out
sub
fwait
ret
out
add
adc
js
adc
pop
xchg
mov
xlat
lea
js
les
adc
mov
jle
stos
test
fidivrl
mov
ljmp
adc
popa
sbb
imul
orb
dec
inc
sarl
mov
cmp
mov
pusha
and
fsubr
stos
mov
mov
test
cmp
mov
push
sbb
xchg
cmc
adc
aad
jecxz
and
xchg
lods
cmpsb
test
adc
jp
inc
mov
push
ss
lahf
enter
sti
repnz
fs
push
sub
or
mov
sub
inc
mov
dec
or
pop
rorb
dec
mov
add
sub
lcall
bound
sbb
xchg
sub
out
hlt
call
movsb
test
mov
jne
xchg
enter
ljmp
std
inc
jle
scas
or
stc
lods
sub
les
and
call
sub
xor
jp
iret
xchg
scas
jp
cld
dec
push
adc
notl
aas
in
cmpsb
iret
mov
movsl
sub
pushf
mov
sbb
mov
and
cmp
dec
aad
daa
movsl
push
std
loope
std
cltd
fcmove
inc
or
cld
adc
push
fistps
insl
jno
sbb
add
xor
or
enter
aas
subb
sub
cmpsl
mov
inc
cmpl
xchg
and
shrl
and
add
je
pop
popl
jae
jb
aaa
in
sbb
es
jmp
pop
ret
clc
lret
je
aad
jmp
sbb
test
jle
mov
insb
out
pop
cwtl
jmp
bound
xchg
inc
inc
popa
adcl
push
xor
push
sub
inc
pop
mov
fs
push
insl
and
cs
dec
push
shl
shl
int
xchg
loope
push
lahf
push
jo
cmpsl
xor
ds
sbb
sahf
ficoml
jae
mov
sub
mov
roll
sub
in
test
movb
lds
sub
mov
jg
clc
push
fisttpll
sbb
es
in
cld
jecxz
out
mov
shlb
test
mov
mov
mov
add
pushf
rcll
push
call
and
sbb
pop
imul
jmpw
fstpl
lret
jo
cmc
mov
jmp
scas
add
insl
add
cmp
scas
lcall
fwait
orb
outsl
into
adc
lahf
dec
adc
and
push
mov
mov
es
xchg
stos
lahf
jp
insl
xchg
out
push
cwtl
pop
insb
int
jp
stc
jmp
dec
mov
nop
xchg
dec
in
dec
orl
insb
mov
xchg
push
bound
int
rolb
xor
mov
adc
push
sub
mov
dec
xchg
aad
adc
mov
out
add
mov
lods
or
pop
int
cmp
push
pop
ret
xchg
cmp
sbb
lods
cmp
fdivrl
or
pop
rol
inc
push
adc
add
movsl
pusha
sub
dec
fnsetpm(287
sub
lret
or
add
cmp
cli
pop
aaa
cmp
loopne
add
inc
addl
rclb
add
dec
and
jle
push
loopne
and
sub
test
inc
test
sub
inc
cmp
aad
sbb
mov
push
mov
adc
loop
frstor
mov
and
mulb
adc
add
mov
int
push
mov
dec
clc
mov
jns
add
xor
push
and
das
lea
push
ja
repz
pop
adcl
xor
sti
cmpb
lret
lret
aas
sub
jb
add
dec
clc
push
xlat
rorl
test
lcall
mov
or
mov
add
aad
mov
jne
stos
lods
scas
pop
mov
and
push
add
sbb
stos
sub
xchg
imul
push
fbld
or
adc
pop
push
stos
sub
dec
shl
add
sub
mov
pop
adc
sbb
lahf
lahf
xchg
lds
jp
adc
stos
in
out
push
daa
push
inc
dec
inc
clc
lahf
mov
push
mov
scas
jb
ljmp
pop
mov
mov
ds
cmpsl
mov
movsb
mov
fistl
jle
jmp
scas
mov
jne
or
xlat
mov
push
popf
sub
mov
loope
repz
cltd
pusha
mov
or
cmp
daa
sub
call
lahf
sbb
mov
pop
je
sub
lods
ret
data16
cmp
jbe
mov
pushf
arpl
repz
dec
mov
daa
loopne,pt
sub
in
or
mov
inc
inc
into
pop
mov
dec
inc
mov
push
aad
jle
mov
jbe
pop
inc
xchg
loope
or
inc
lods
add
jle
outsl
mov
fildll
push
popf
pop
pop
push
scas
mov
dec
shr
jmp
sti
clc
daa
in
add
mov
fstl
add
aaa
xchg
cmp
divl
aad
and
jno
fwait
and
jl
jae
test
pop
fsubrl
xor
mov
mov
pop
adc
stos
insl
mov
add
in
fsubrl
pop
mov
notb
fdivrs
or
in
mov
xchg
sbb
dec
push
cmpsb
rol
jmp
repz
test
cs
xor
add
push
lret
nop
cld
fstps
pop
cld
addr16
xchg
xor
mov
mov
leave
cwtl
push
mov
shll
rorl
pop
inc
jmp
imul
jle
mov
jns
out
into
daa
add
dec
into
add
cld
je
dec
mov
adc
lock
jg
loop
mov
out
cwtl
or
clc
fwait
add
pop
shll
icebp
inc
cmp
insb
cvtpi2ps
idiv
mov
lcall
stos
aad
or
mov
push
push
test
pusha
addr16
popa
sbb
movsl
les
out
sbb
mov
call
xor
call
pop
mov
cmp
cmc
loope
adc
cwtl
inc
data16
mov
mov
scas
pop
lret
loope
jle
ds
sbb
ret
out
mov
movsl
xchg
jg
gs
fsub
mov
cmp
je
fldenv
pushf
gs
dec
xor
inc
mov
push
cmp
lahf
sarb
rol
mov
lahf
cwtl
jmp
xchg
repz
push
dec
adc
mov
sub
dec
sub
jl
stos
push
fists
aam
and
stc
addl
mov
shll
out
xchg
ffreep
lret
xchg
test
push
stos
xchg
ret
or
test
push
scas
dec
add
mov
ror
mov
scas
pop
mov
adcl
ficomps
or
stos
inc
pop
jl
dec
scas
push
push
dec
in
mov
jns
stc
mov
sbb
rcr
sbb
and
fists
loop
std
dec
xor
mov
cli
jp
mov
jge
inc
xchg
pop
dec
push
jbe
mov
not
fcmovne
test
push
arpl
ror
repnz
mov
movb
ret
lahf
fwait
enter
pop
loop
test
mov
adcl
inc
data16
dec
push
and
lods
push
pop
jno
daa
pop
sbb
js
and
cmp
adc
es
gs
xchg
jge
rorl
in
fdivl
into
cmp
movsb
pusha
and
ret
ljmp
in
mov
push
pop
jae
mov
pop
adc
mov
mov
pop
mov
data16
mov
or
mov
mov
fdivrs
jbe
pop
nop
push
outsl
into
or
jmp
or
les
repz
pop
jne
loope,pn
in
and
adc
cld
and
and
mov
dec
je
push
xchg
push
aaa
inc
push
cmpsl
sarl
pop
sub
in
jno
ds
mov
push
or
lret
shrl
cmp
sti
arpl
out
and
sub
cltd
and
inc
dec
add
test
mov
jp
stos
pop
lahf
fiadds
cmpl
pop
aam
sbb
cltd
shl
into
stos
test
xchg
inc
mov
xchg
xor
pop
lret
imul
mov
psubq
sub
stos
out
sub
stos
repnz
mov
and
xchg
fidivrs
cmp
cmp
push
movsb
insb
adc
lods
dec
mov
pop
pop
int3
push
push
hlt
dec
mov
inc
jge
test
xchg
fstpt
test
mov
pop
xlat
sbb
adc
fadds
dec
inc
lahf
or
cmp
pop
jnp
inc
jae
sbb
ja
mov
mov
inc
iret
lods
push
sahf
sub
xchg
mov
fwait
leave
sub
gs
xchg
push
jp
inc
enter
outsb
mov
mov
dec
cmp
jp
xor
inc
jno
cli
ss
sti
sub
movl
add
mov
xor
mov
imulb
and
imul
jp
imul
xchg
fsts
mov
cmpsb
cmp
cli
repz
add
and
push
push
fwait
lods
mov
xchg
scas
add
xchg
and
jg
mov
and
sub
in
iret
xor
push
dec
cwtl
in
push
lret
sub
and
ret
int
cmp
bound
ret
movsb
xchg
in
jge
pop
mov
test
mov
jecxz
pop
sbb
pop
lret
xchg
ja
mov
push
cmp
or
push
push
push
pop
sahf
call
adcl
or
or
out
stc
or
stos
ficompl
in
movsl
aaa
dec
and
mov
es
jge
bnd
xor
gs
xorb
insl
cli
dec
xchg
sti
subl
inc
mov
fwait
cltd
leave
out
dec
iret
adcl
push
test
xor
out
and
push
int3
xlat
xchg
pop
or
cmpl
dec
or
dec
add
cmpb
push
adc
and
sub
dec
int
adc
sti
sbbl
adc
adc
adc
push
jl
call
sub
sbb
jns
mov
jo
add
dec
xor
pop
mov
cwtl
inc
das
stos
inc
lahf
add
popf
fldcw
xor
fdiv
mov
outsl
pop
add
loopne
push
mov
fists
push
popf
sbb
sahf
aad
sub
inc
ljmp
or
mov
scas
jp
int3
dec
cwtl
inc
aam
loopne
iret
and
rorb
je
inc
xchg
mov
gs
and
cmp
pmullw
pushf
loop
dec
add
and
inc
lea
sub
pop
insl
pop
cmp
int3
adc
repz
adc
ret
jg
mov
adc
jp
xor
dec
jno
cmp
mov
test
xchg
mov
cld
lock
cmp
xchg
fstps
push
push
adc
xchg
adc
stos
aaa
aam
mov
xchg
test
sub
inc
cmpsl
inc
xchg
inc
xchg
in
aaa
mov
xchg
cltd
inc
cmp
mov
jno
or
repnz
push
adc
test
mov
aas
fildll
sbb
jg
in
je
repnz
adc
inc
nop
std
and
fwait
jg,pt
pop
aas
fcmovne
jl
mov
add
lds
cli
inc
jge
jo
pop
js
mov
fisubrl
sahf
push
lods
fistl
sub
jmp
jl
data16
loopne
push
xor
push
fcomp
adc
and
jnp
or
shll
cmp
in
subl
adc
icebp
rcl
push
insl
outsb
adc
daa
cmp
lret
ljmp
scas
cmc
out
adc
pop
pop
daa
sti
test
lahf
mov
xlat
xchg
fst
lock
scas
or
cli
sub
jnp
gs
ror
push
jl
and
pushf
xchg
sub
bound
sahf
inc
push
popa
xlat
scas
mov
dec
jne
mov
dec
cmp
push
jb
in
pop
lret
jns
jg
xlat
add
in
push
iret
pop
sbb
mov
fld1
jge
das
ja
fcomip
pop
addr16
push
add
or
cmpl
fldt
sbb
xor
xchg
mov
pop
aam
scas
inc
and
pop
jae
jecxz
sub
out
xchg
imul
cmc
ds
xchg
imul
loop
repz
outsb
mov
inc
pop
and
xor
lret
popa
jbe
ja
cltd
data16
sarb
mov
outsb
stc
cmp
fiaddl
or
outsl
sahf
insb
aad
les
outsl
xlat
iret
push
adc
cmpsb
cmpsl
xchg
push
filds
push
test
stc
mov
mov
add
cmp
jns,pt
fs
xchg
add
or
mov
movsl
sub
inc
repz
mov
dec
mov
mov
lea
pop
push
xor
scas
aam
mov
sbb
cmp
pop
jb
jne
xor
sbb
push
out
xchg
insb
mov
mov
push
cmp
adc
cmp
dec
jmp
and
fmull
nop
repz
call
rcll
jns
xchg
jecxz
sahf
cmp
sub
inc
lcall
mov
jge
and
jnp
cmp
cmova
imul
das
imul
repnz
xchg
cmp
push
jns
aad
cmp
iret
movsb
push
dec
into
arpl
push
mov
mov
in
fbld
or
xchg
dec
mov
xor
dec
nop
in
pop
or
and
pop
dec
cmp
jl
movsb
mov
or
or
lahf
xor
dec
mov
adc
mov
mov
jae
jae
xchg
adc
test
ds
cmpsb
xchg
filds
pop
daa
or
push
or
cmp
sub
and
push
xchg
xchg
fbstp
arpl
push
jne
jo
lock
and
pop
push
sub
fisttps
mov
mov
xchg
cmpsl
mov
mov
push
jo
and
xor
jbe
inc
cmc
mov
movsl
sti
jge
pop
push
faddl
dec
aad
cmc
inc
ds
pop
push
inc
shll
inc
push
repz
movsl
pop
inc
js
fsubs
push
push
int
hlt
dec
pusha
jb
dec
imul
call
mov
xlat
jmp
mov
fsubr
pop
js
in
inc
push
test
ljmp
lret
adc
adc
cmpsl
loope
push
jg
or
clc
lahf
test
sub
frstor
nop
mov
xchg
ja
sbb
sarl
pop
les
mov
pusha
test
aas
adc
popf
shlb
lock
push
test
fwait
sbb
or
push
mov
andb
cld
push
push
cmp
fadd
aad
sbb
loop
push
fstpl
js
xlat
ret
and
aaa
adc
fnstsw
jno
aas
aas
jge
icebp
cmc
pop
pop
jg
push
addr16
aaa
push
scas
popa
xchg
or
or
jb
dec
xor
cwtl
jmp
movsb
or
push
mov
xor
push
inc
mov
clc
lods
mov
dec
not
dec
mov
xchg
sub
inc
jbe
subl
nop
cld
cmp
imul
adc
cld
out
mov
sbbl
mov
loope
lods
inc
fstl
mov
fldt
lret
mov
xor
div
mov
outsl
adc
sub
or
out
mov
add
mov
xlat
inc
mov
and
jle
rclb
call
pop
cld
aam
add
mov
pop
das
xchg
cmp
push
mov
lods
jne
inc
dec
pop
daa
shll
dec
push
stos
pop
push
pop
jne
push
test
outsl
add
xor
cmp
daa
ror
inc
movsb
int
jns
mov
mov
mov
out
fdivr
mov
sti
scas
aas
out
mov
dec
shrl
ret
rep
pop
cs
test
xor
pop
sub
mov
nop
ja
mov
bound
gs
into
mov
pop
ficoml
dec
pop
jge
sub
ja
dec
pushf
mov
cs
popf
cmp
sti
jle
sti
dec
jmp
inc
cmpsb
fucomip
adc
nop
lds
movsl
adc
jmp
aas
adc
xor
je
push
mov
ja
cmp
das
lds
or
and
inc
inc
fwait
pop
andl
cmpsb
ljmp
std
dec
shll
jp
aam
mov
outsl
popf
daa
mov
hlt
imul
sbb
add
cmovae
aas
sahf
pop
cld
and
jns
repnz
int
out
pop
xchg
mov
cs
cmp
or
test
mov
xchg
add
or
xor
adc
jo
stc
rorl
in
inc
cmpsb
xchg
or
or
jbe
out
aaa
push
stc
jb
insl
shlb
or
movsl
add
stos
sbb
test
addb
mov
mov
mov
mov
insl
pop
mov
inc
enter
xor
rorb
sahf
xchg
cmp
rcrl
mov
mov
fiadds
repz
push
jmp
fistl
cli
mov
int3
jb
mov
sub
jg
lods
sub
mov
push
adc
jno
test
mov
nop
push
push
lret
xor
cs
mov
stos
lcall
sub
psrad
pop
lods
scas
sbb
xchg
nop
stc
jmp
jns
jecxz
test
mov
jp
pop
stos
faddl
inc
mov
push
sbb
and
mov
in
adcb
data16
test
popa
ds
cltd
pop
adc
or
mov
cmpsl
loope
xor
fs
aam
mov
cmp
pusha
inc
lds
fwait
pop
mov
xor
in
pop
pop
mov
ret
test
jg
pop
sbb
dec
add
inc
xchg
jl
mov
push
cwtl
or
cmovg
sbb
push
nop
sahf
push
lds
push
icebp
push
je
mov
add
lods
sbb
nop
sbb
shlb
fnstenv
xchg
or
cli
sahf
pop
int3
stc
in
fcomps
dec
in
cltd
push
jno
outsb
test
icebp
dec
cli
int
jns
cwtl
inc
aad
mov
jns
dec
add
sbbb
mov
sarl
lods
mov
xchg
push
and
add
loopne
inc
lods
inc
adc
fcomps
mov
sbb
push
ja
pop
jbe
fisttps
stos
lock
push
and
das
repnz
rorl
das
dec
fs
inc
outsl
dec
jo
rorl
sbb
inc
add
adc
sub
sti
add
cs
mov
outsl
pop
mov
data16
lahf
mov
outsb
or
or
pop
lock
inc
test
dec
xor
test
mov
mov
dec
mov
pusha
aam
dec
in
jle
shrb
jne
push
loopne
xchg
dec
sbbl
call
pop
loopne
xchg
add
cmp
jno
fsubs
mov
shrl
pop
dec
loopne
cmpsb
push
cld
push
push
jno
jae
pusha
or
add
xchg
rolb
jo
dec
test
aas
test
inc
jl
outsl
mov
and
xorl
inc
loop
lahf
push
outsb
mov
sahf
xchg
sub
enter
dec
orb
out
or
xchg
add
cli
arpl
lds
popa
hlt
mov
cmpsl
or
mov
gs
jg
mov
fdivrl
addr16
mov
pop
pusha
rclb
aas
xchg
pushf
pop
inc
sbb
or
rorl
loop
cmpb
das
cmpsl
sub
ret
les
adc
xor
aad
mov
es
cltd
inc
xor
adc
imulb
and
fs
jg
mov
add
outsl
mov
roll
push
inc
out
fsubrl
sbb
loopne
xchg
pop
push
xor
fdivrl
push
scas
loopne
inc
imul
push
dec
pop
in
inc
sbb
repz
pop
dec
jb
cld
outsb
mov
dec
rcrl
rol
mov
int3
ret
lock
hlt
push
jbe
clc
and
xchg
jb
mov
mov
xor
ret
mov
lea
lret
and
cmp
stc
add
sahf
dec
lret
outsl
mov
filds
imul
addb
lds
add
outsb
xchg
and
adc
jb
in
rorl
jmp
sahf
js
insb
and
push
and
icebp
std
shr
arpl
fsubrl
jo
add
mov
or
xor
pop
cli
insl
xchg
jne
jp
popa
es
int
stos
mov
stc
cmp
sbb
aad
sub
mov
mov
insl
std
inc
outsb
add
in
sub
lret
sbb
fisttpll
dec
sub
xchg
ret
mov
sarb
cmp
repz
adcb
mov
jle
xor
sub
push
xor
or
faddl
sahf
xchg
mov
repnz
andl
push
push
sbb
stos
inc
leave
ucomiss
or
test
test
into
push
sub
shll
aaa
mov
aam
repz
sbb
dec
mov
pop
hlt
shrl
outsl
pop
xor
ss
loope
ret
ret
jle
mov
into
pop
mov
lret
ja
inc
adc
in
sbb
push
mov
xchg
adc
jmp
mov
stos
scas
or
sti
es
xchg
sbbl
addl
rcr
es
je
movsb
mov
or
icebp
xor
stos
das
jns
cmp
cmp
cmp
imul
jae
pop
add
pop
push
shl
ret
xlat
stos
mov
lcall
outsb
clc
hlt
clc
cmp
jb
ret
ljmp
imull
inc
fsubrs
js
movsb
enter
xor
hlt
sbb
dec
pop
subl
push
and
stc
pushf
sbb
jb
inc
in
fwait
ret
push
xchg
ss
cwtl
pop
pop
lods
fldenv
fdivrs
cmp
pop
fistpll
lret
add
add
mov
rclb
sbb
jmp
push
sbbl
movsb
cltd
push
pop
decb
out
sbb
aaa
das
sbb
xchg
adc
push
xchg
cmpsb
stos
in
stos
mov
repnz
cld
mov
mov
fists
adcl
dec
lods
jle
out
loope
or
scas
adc
dec
lds
push
jae
mov
push
push
push
push
mov
pop
adc
xor
pop
cmc
mov
lds
sbb
adc
mov
notb
adc
sbb
xor
out
push
mov
xchg
add
mov
sti
sub
adcb
fisttpl
stc
outsb
and
iret
mov
mov
mov
lret
mov
xchg
in
mov
sbb
fbld
mov
or
jle
sub
aad
xlat
lds
xor
xchg
cmpsl
and
or
leave
jo
mov
cs
imul
jg
cwtl
pop
cmp
iret
ss
add
je
add
push
cmpsb
sub
or
out
mov
ret
add
push
icebp
jns
jbe
jp
outsb
xchg
outsb
cwtl
rcr
push
lcall
addr16
jne
stos
cmpl
jo
hlt
pop
ret
insl
cmpb
add
mov
add
jmp
dec
mov
xchg
popf
sti
sub
sahf
jbe
jecxz
inc
push
sahf
pop
insl
out
dec
sbb
sub
sti
cmpsb
add
xchg
xlat
outsl
xchg
cmp
fstpt
and
daa
mov
sbb
push
push
sar
pusha
imul
loop
lock
fdiv
mov
and
inc
sbb
cmpl
push
loop
repz
push
bound
jmp
mov
in
sbb
sbb
mov
insl
or
std
ficoml
test
arpl
hlt
dec
shlb
inc
mov
add
push
mov
fstp
fidivs
ror
dec
nop
and
int3
movsl
adc
dec
jmp
push
cmp
gs
fwait
testb
push
pop
cld
lea
push
inc
xor
std
or
push
push
xchg
roll
repz
jle
ss
les
mov
insl
push
out
mov
xchg
cld
jge
sti
push
ds
shrl
int
popa
in
jbe
push
cmpsl
popa
cld
or
push
ljmp
mov
out
sbb
inc
insl
mov
shlb
stos
cmp
push
in
cld
leave
stos
rol
popf
pop
jns
cmp
sbb
fldl
push
nop
xchg
sbb
movsl
insb
imul
push
adc
xchg
mov
add
pop
add
xchg
adcb
int3
test
mov
lret
pop
adc
and
lock
push
cmp
ljmp
out
cmp
cmp
xor
ret
scas
xchg
repz
out
and
cmpsb
cmp
xor
jp
andl
push
imul
repz
or
in
not
push
jo
xchg
xor
jmp
aam
and
and
cwtl
out
int3
adc
add
dec
adc
mov
jbe
loop
mov
test
das
out
sbb
mov
push
scas
dec
outsl
and
andl
jnp
data16
or
mov
iret
pop
into
movsl
sahf
std
mov
jns
mov
jl
adc
sub
jbe
inc
cs
jae
rcll
mov
inc
leave
cli
xchg
in
daa
xor
loop
xor
inc
mov
mov
data16
std
adc
out
or
nop
mov
imul
cmpsb
fs
stos
jge
shll
das
pop
xchg
test
inc
fnstcw
cmp
lahf
js
or
popf
mov
insl
push
sahf
adc
add
inc
add
imul
pusha
jb
pusha
cmp
mov
add
popa
stc
add
aam
add
push
mov
aas
test
mov
sbb
movsb
stos
lret
int
rcrl
rol
imul
lea
jno
cltd
jns
jp
pop
loope
loopne
push
nop
sbb
jle
cld
xor
leave
jmp
mov
and
and
loop
outsb
sbb
xchg
adc
test
shll
aaa
arpl
insl
xor
mov
push
int
aad
movsl
or
mov
aas
insl
sbb
cld
xchg
dec
inc
sbb
in
add
sbb
dec
mov
insb
jecxz
jg
data16
lcall
js
xlat
aad
adc
pushf
and
dec
add
cld
enter
stc
lahf
mov
and
and
jne
xchg
neg
inc
mov
and
jmp
add
add
jns
test
push
rcrb
stc
mov
jns
or
xor
jns
mov
dec
mov
and
into
push
mov
or
adc
js
inc
fsub
out
pop
cmp
or
cmp
cmpsl
jbe
faddp
divl
sbb
push
mov
xchg
inc
add
stos
ss
cli
adc
loopne
lea
pop
jns
pop
fstl
or
in
les
inc
iret
repz
add
lahf
call
icebp
push
lret
add
fsts
lods
pop
mov
add
in
shrl
jmp
xor
mov
loopne
fcmovu
int3
xor
push
movsb
mov
xchg
sub
js
test
adc
jns
push
cmpl
xor
sbb
cmp
sub
icebp
cmpsb
pop
cltd
lcall
cli
movsb
repz
stc
es
adc
lahf
adc
out
inc
adcl
rcr
pop
mov
sbb
push
cld
xchg
mov
add
sarl
idiv
xlat
stos
cmp
push
aas
dec
push
sbb
stos
clc
hlt
inc
add
dec
mov
jmp
cs
lea
addr16
xor
in
test
rclb
cmc
jae
cmp
mov
mov
xor
cmp
lea
sub
xchg
sar
or
scas
inc
jge
pop
popa
insb
mov
pop
xchg
adc
pop
rcrl
add
xlat
into
mov
mov
in
sahf
and
mov
add
mov
pop
and
add
push
sbb
mov
sub
bound
or
fsubl
in
xor
jo
bound
rcll
out
rclb
les
push
clc
out
mov
xor
mov
clc
pop
jb
sub
jne
mov
mov
aam
mov
popa
fwait
int3
test
inc
cmp
sahf
scas
mov
out
xor
js
rcll
iret
sarl
xor
or
inc
insl
gs
fidivrs
mov
pop
sub
shrb
mov
mov
push
out
xchg
sbb
push
insb
mov
lret
int
int
scas
test
jmp
push
inc
dec
sarb
dec
pop
jle
pop
outsl
jle
stos
enter
int
in
push
xor
les
sub
int
insl
cmp
imul
mov
testb
in
stos
int
int
inc
push
and
stos
sarl
cli
icebp
out
xor
fisttpl
aas
fisttps
mov
or
shlb
and
leave
insl
dec
loop
fwait
jecxz
dec
movsb
dec
jmp
lock
shl
insl
jge
inc
and
jo
fmul
stos
addr16
mov
sub
test
mov
jp
add
push
cmp
add
xchg
call
pop
les
incl
ret
or
push
ljmp
pop
jno
mov
xor
jecxz
dec
in
push
popa
xor
into
int3
aad
fsubrs
or
inc
test
push
scas
sub
mov
jno
xchg
add
cld
jo
inc
jb
push
sbb
std
cli
add
lock
idivl
jae
out
add
mov
sbb
jle
in
mov
mov
fiaddl
push
xchg
jle
sbb
pop
lret
popa
cmpsb
jecxz
push
add
ret
push
and
mov
sub
cmp
mov
mov
imul
fmull
int
pop
pop
inc
jne
stos
mov
lea
ret
into
clc
insb
insl
inc
sub
cmp
sti
xchg
push
lods
xchg
jecxz
aaa
mov
icebp
jge
out
lods
sar
cmp
les
in
sarl
push
mov
ds
scas
nop
clc
shll
sbb
xchg
testl
sti
aam
movsl
mov
push
test
loope
mov
xchg
jnp
inc
arpl
int3
mov
mov
cmp
lock
xchg
les
test
xor
adcb
mov
repz
dec
fbld
or
lea
and
sub
mov
scas
nop
pop
sbb
clc
loope
jg
addr16
stos
sarl
scas
lcall
cmp
sbb
aad
adc
loop
sub
xor
add
mov
or
loope
lea
sub
add
hlt
cmp
and
fucomi
imul
mov
xor
imul
jmp
enter
stos
shrb
mov
daa
pop
xchg
jle
dec
imul
jmp
lret
in
aam
inc
sub
xchg
icebp
xorl
jne
adc
xor
daa
xchg
les
loopne
xorb
insl
dec
mov
dec
incl
sahf
xor
lods
add
pop
inc
push
pusha
in
jle
dec
js
jl
pusha
push
cwtl
adc
mov
mov
insb
dec
dec
or
lods
cmp
int
xor
mov
out
dec
sahf
pushf
int3
xor
daa
popa
mov
inc
aaa
jae
ja
loopne
stos
xchg
jo
mov
ret
push
cmc
es
jbe
jl
out
pop
lret
in
daa
ret
repz
out
or
rolb
sbb
js
movsl
cs
in
or
dec
xor
aaa
jle
scas
insl
popa
ljmp
and
xor
or
daa
pop
rcll
or
lods
mov
out
jno
push
mov
cmp
popa
sbb
cs
insb
or
cld
scas
shll
or
mov
sti
inc
fdivs
push
xchg
inc
leave
testl
test
imul
add
outsl
out
sbb
fcoms
mov
mov
dec
out
cld
inc
mov
insl
lret
cmp
sub
js
cld
incb
in
test
cwtl
movsl
fucomp
push
test
fidivrs
jns
shll
mov
jle
inc
lahf
rorb
pop
orb
dec
lahf
xchg
dec
mov
cmp
mov
fistpl
jg
lods
cmpsb
insl
jg
dec
sbb
jmp
addr16
das
imul
jo
pop
push
ss
in
push
xor
rcrl
es
mov
int3
sbb
pop
add
out
inc
ljmp
push
sahf
dec
mov
and
push
xchg
mov
insb
jmp
rol
aad
or
jge
pop
dec
cmpsb
jmp
jge
jecxz
cs
stos
pop
sbb
rsqrtps
pop
aad
fmulp
cmc
jns
adc
int3
or
in
insb
lea
scas
mov
xchg
pusha
cmpsl
aaa
ja
cwtl
sub
cltd
cli
fstps
pop
push
jle
or
into
aas
sbb
xchg
cs
mov
pop
rcr
mov
in
lcall
dec
push
dec
mov
rorl
cmpsb
mov
lret
xor
and
cli
iret
lret
fidivrs
mov
inc
rcrl
stos
cs
icebp
loope
jo
mov
jne
xor
pop
push
out
jg
jne
dec
sarl
dec
dec
add
sbb
negl
arpl
out
push
test
xor
pop
lahf
pop
lahf
sbb
sahf
rep
movsb
jl
out
jne
cltd
adc
ret
mov
sub
sarb
dec
repz
push
mov
pusha
icebp
in
sbb
pop
and
dec
test
jmp
imul
repnz
ficompl
adc
dec
mov
push
popf
cld
shrb
dec
push
pop
sub
mov
jne
scas
push
inc
push
out
cmpsb
repnz
and
xchg
call
mov
cmp
inc
mov
jmp
cmp
lods
push
sbb
sbb
push
xor
xchg
shrl
push
inc
repz
xor
jbe
testb
or
into
lret
cmp
mov
test
es
mov
and
inc
adc
test
pop
push
mov
fsubrs
std
push
mov
pop
insb
rorb
push
jg
inc
data16
insl
push
dec
push
add
mov
out
aas
mov
fildl
je
jnp
iret
pop
mov
lock
sbbb
enter
andl
xor
in
js
mov
call
mov
mov
pop
imul
pop
test
add
dec
sbb
jl
rcll
mov
xor
dec
fucomip
test
sarb
push
pusha
lock
ret
cmp
iret
xchg
mov
jmp
mov
sbb
sti
in
xchg
fcoml
or
sub
jne
fcoms
dec
inc
xchg
rorb
sub
loope
jmp
andl
add
aad
je
add
call
aad
mov
pop
mov
pop
pop
or
mov
jne
push
fistpl
sbb
ficompl
mov
imul
fsubrs
push
sub
jecxz
dec
cmpb
dec
cmp
cs
fdiv
mov
pop
stos
movsl
cmp
icebp
lea
nop
xor
fstps
lcall
cmc
inc
and
sbb
stc
pop
repz
filds
int3
cmp
cltd
xchg
cmp
sub
lret
xchg
mov
and
pop
mov
je
les
movsl
sub
mov
push
scas
mov
mov
outsl
jns
mov
jns
js
and
lahf
mov
add
ret
arpl
mov
jecxz
xor
mov
dec
fisubrs
inc
dec
in
or
push
int3
sub
outsb
int3
sbb
pop
inc
jge
call
pop
lcall
scas
data16
addr16
popaw
jecxz
fsubrs
sbb
out
sahf
sbb
cmp
repnz
xor
mov
and
xchg
pusha
fwait
movsl
jle
push
out
mov
or
shrb
push
call
cs
fadd
cmpsl
pop
push
cmp
test
outsb
inc
jl
imul
out
hlt
add
cmp
mov
out
lea
sub
movsb
mov
add
or
enter
jecxz
xchg
data16
rorb
ret
push
test
and
mov
stc
fdivr
fs
icebp
jnp
dec
adc
clc
mov
shll
pop
cmp
and
jge
lcall
and
pop
cmp
pop
stos
in
fisttpll
jne
sbb
sub
je
sbb
xchg
dec
jecxz
ffree
mov
aaa
arpl
mov
mov
lret
mov
dec
inc
in
rcll
push
inc
cmpsb
push
fcomps
into
push
fistpll
xlat
sub
xchg
test
mov
xor
push
sbb
decl
icebp
shr
das
iret
shr
jle
sbb
stc
das
inc
dec
out
mov
add
sbb
daa
dec
jg
cmpsb
xchg
je
pop
pusha
popf
or
lret
adc
sbb
das
jmp
popf
enter
inc
pop
lahf
jecxz
and
xchg
popa
inc
cltd
sub
or
pop
outsl
addr16
imull
stos
jecxz
jns
mov
add
out
xchg
cbtw
mov
or
not
in
mov
std
iret
mov
adc
test
and
xor
adc
push
rcr
ret
xor
sarl
fldl
gs
jbe
push
sbb
cmpsl
cmp
and
shrl
js
or
add
aad
cli
xchg
push
adc
cmp
pinsrw
icebp
int3
inc
sub
shlb
mov
icebp
inc
mov
jns
add
pop
shrb
mov
notl
sbb
cld
repz
mov
dec
inc
mov
jle
mov
loope
cmc
rcrl
dec
stos
sub
xorb
call
insb
mov
shll
repnz
cmp
jno
push
and
lret
and
or
lahf
fcomps
sbb
popf
jo
fcomp
xor
or
inc
stc
cltd
add
push
mov
inc
ja
fsubrs
sub
adc
movsb
mov
and
fstl
shrb
repnz
in
jbe
pop
xor
or
mov
mov
lods
pop
cmp
out
inc
pop
mov
jle
in
aam
mov
inc
xorl
cmpsb
jbe
stc
test
sub
jge
es
cmp
cld
push
sti
mov
xor
outsl
cmp
or
insb
scas
sbb
clc
jmp
pop
sub
ss
loope
mov
push
subb
cmp
pop
cmp
add
outsl
and
mov
inc
add
fsubrs
hlt
scas
add
enter
addr16
mov
dec
push
push
jne
push
dec
jmp
iret
mov
fmulp
leave
cli
xchg
loop
jmp
das
adc
in
jbe
cli
cmovp
mov
push
dec
mov
rcrb
sbbb
aaa
push
sub
lods
add
out
lret
sub
pop
push
push
cmp
in
cmc
int
xchg
shlb
into
mov
adc
jns
out
inc
sbb
hlt
mov
fs
scas
xchg
mov
xchg
cmp
ret
sahf
mov
fildll
out
adc
inc
push
fwait
jno
lods
sub
repz
mov
ss
stc
mov
enter
dec
and
dec
shll
or
and
fs
cmpb
fs
orb
nop
enter
add
daa
dec
loop
dec
jmp
icebp
mov
add
fwait
addr16
pop
dec
jge
add
dec
sub
fdivrs
mov
or
push
pop
stos
dec
filds
jbe
inc
cmpsl
cmp
fidivs
test
insb
adc
ds
scas
int3
xchg
inc
mov
xor
cltd
mov
enter
lcall
sub
hlt
movsb
pop
sbb
int
fldenv
fwait
jg
push
mov
and
aam
fucomp
dec
mov
cmp
ja
xchg
mov
out
mov
pop
push
insb
insl
inc
shlb
mov
jno
and
test
pop
fcomps
outsb
enter
and
jno
xchg
cs
sub
stc
das
jecxz
in
lret
and
sbb
jp
gs
adc
add
and
xor
fbstp
mov
adc
jnp
adc
lods
orl
inc
xor
pop
adc
push
jmp
and
inc
inc
hlt
cmpsb
and
dec
popa
mov
inc
leave
ss
or
rcr
insl
mov
and
xchg
add
xchg
imul
idivb
mov
popa
fimuls
mov
mov
xchg
int
xor
rcll
push
lret
pop
pusha
sub
pusha
jl
add
fistpl
leave
fwait
sub
repz
xchg
mov
insl
mov
pop
sub
mov
xlat
sbb
test
es
test
mov
xchg
enter
ljmp
imul
push
push
lahf
xchg
add
dec
xor
stc
and
pop
cmpb
pop
hlt
jnp
xchg
sbb
int
lea
cmpsb
out
mov
pop
push
movsl
mov
cltd
jecxz
insb
lret
and
and
ficoml
xchg
dec
mov
into
shlb
leave
jp
fs
and
lods
cmp
and
test
dec
mov
sub
out
push
pop
ss
push
cmpsb
sub
push
mov
pop
ds
call
add
es
sbb
dec
adc
dec
insl
shrb
or
push
cmpl
fldenv
xchg
dec
daa
dec
test
subb
adcl
ss
lds
lods
out
jbe
or
xchg
pop
out
dec
pop
out
sub
inc
mov
mov
mov
sti
or
pop
pop
inc
mov
xchg
cmp
mov
cmpsb
mov
shr
and
jecxz
jno
sub
jmp
inc
sub
movsl
add
or
ficoms
lcall
shrb
sub
push
pop
pop
lcall
push
roll
cltd
push
ret
loopne
pop
sbb
leave
sub
or
mov
xchg
test
mov
sti
cs
daa
mov
xor
leave
xchg
ss
mov
push
fldcw
or
insb
ljmp
pop
cmpsl
sbb
sbb
sbb
outsb
sub
popf
adc
out
push
bound
int3
dec
mov
insl
mov
jecxz
pop
in
shl
mov
rorb
xor
or
dec
jge
je
pop
rcll
mov
sbb
dec
out
loopne
daa
pop
aas
arpl
leave
inc
sub
push
ss
ror
sbb
xchg
and
daa
into
rclb
and
push
dec
andl
or
mov
jne
shl
fs
cmp
and
lahf
sub
pop
xchg
cmp
mov
dec
inc
enter
and
add
lcall
fistpl
adc
push
or
pop
lret
dec
xor
insb
lods
int3
xorl
push
jge
lcall
xor
in
fs
mov
aas
jne
pop
pop
daa
sub
fisttps
dec
icebp
rol
sbb
cmp
fwait
shll
fwait
insb
mov
sbb
and
addr16
mov
jmp
in
out
mov
mov
pusha
inc
lcall
cli
leave
cmp
jbe
add
inc
pop
and
ss
push
dec
or
pop
pop
sbb
out
adc
jecxz
jno
scas
mov
pop
in
gs
jmp
cmp
imul
rcr
in
cmpsl
pop
xchg
cmpsl
fs
aas
jne
std
fs
adc
push
cmp
cmp
scas
aad
data16
movsl
shll
js
pop
and
jno
lods
push
mov
pop
movsb
sbb
int
sbb
cli
repnz
lock
stos
mov
stc
jp
pop
adc
adc
mov
jge
pusha
dec
rclb
add
nop
lahf
xor
or
sbb
jg
dec
aas
add
in
jnp
jns
inc
je
adc
daa
jb
jp
rcrb
pusha
or
adc
xchg
jno
xor
test
fnsave
call
push
popf
sub
jmp
daa
repz
jp
jp
inc
jne
adc
lahf
scas
fcoms
lock
mov
dec
cs
jp
rcrb
in
js
inc
jle
pusha
dec
lea
cmp
repz
je
daa
fdiv
add
movsl
or
mov
lahf
shl
or
mov
push
lcall
sti
bound
mov
cltd
shrl
pop
add
mov
lea
stc
insl
dec
cli
add
sbb
sbb
add
jae
sahf
cltd
ret
bnd
push
dec
inc
icebp
repnz
stos
test
dec
test
out
lods
clc
out
lcall
sbb
mov
insb
mov
mov
test
pop
mov
lea
sub
cmp
push
lock
and
insl
js
loopne
stc
mov
scas
cmp
leave
faddl
push
cmpsb
pop
sub
fwait
icebp
lret
dec
push
jb
fsubrs
loope
jmp
lock
cmpsb
dec
int
or
ret
jge
fwait
sub
or
into
jmp
jecxz
cmp
fs
cmp
cld
outsb
inc
int
mov
xchg
cmpsl
mov
cmp
movsl
in
xchg
imul
fimuls
dec
les
test
pushf
push
mov
adc
pop
dec
popf
std
mov
test
or
aam
bound
les
inc
shrl
loop
xor
mov
and
leave
sub
clc
sbb
mov
es
test
dec
rolb
mov
je
cmp
mov
adc
in
jnp
mov
mov
testl
push
fucomi
jo
fmull
filds
push
mov
in
pop
xchg
push
movsl
sbb
add
movsb
insb
or
mov
inc
lcall
pop
mov
sbb
out
xchg
lods
and
mov
mov
gs
hlt
aam
xor
lock
pushf
mov
xchg
daa
sub
adc
arpl
sbb
xchg
std
mov
out
inc
int
fs
sub
jno
cli
or
fwait
dec
lods
jno
sub
fists
test
movsb
xchg
pop
mov
imul
icebp
je,pt
addr16
or
adc
les
and
divb
lods
out
lods
inc
lret
test
call
lds
mov
arpl
sub
lret
push
xchg
mov
test
mov
mov
jmp
ret
sbb
aad
mov
xor
fisubrs
lea
jno
jnp
testl
pop
push
into
jle
repz
pop
and
inc
xlat
int3
push
mov
inc
add
aam
sub
sbb
enter
ds
mov
sbb
xor
cld
or
outsl
in
mov
out
mov
push
mov
mov
ja
push
add
arpl
jmp
popa
lock
add
outsb
idivl
cwtl
xor
or
jle
pop
decb
adc
rcrl
jg
sbb
pop
add
ret
jle
inc
cld
enter
orb
sahf
pop
cmpsb
sub
cmpl
pop
sbb
dec
push
push
out
xchg
cmp
mov
push
mov
int3
add
push
cmp
push
hlt
std
xchg
out
es
add
push
das
cmp
icebp
and
test
scas
mov
pop
lods
mov
das
js
mov
fsubp
nop
out
iret
push
enter
or
and
or
jns
add
sub
mov
pusha
fcmovnu
mov
das
mov
cwtl
mov
mov
mov
mov
mov
rcrb
loopne
pop
fidivrl
xor
mov
push
cltd
test
jo
clc
xor
adc
pop
xchg
stos
scas
mov
scas
mov
mov
inc
fidivrl
mov
mov
adc
adc
cmovl
push
outsb
aam
mov
sub
adc
inc
pop
aaa
shll
cmc
fistpll
sar
rcrl
adc
push
lods
cmp
mov
leave
arpl
or
pop
shll
aaa
fiadds
mov
adc
cmp
xor
inc
jns
mov
pop
mov
sbb
cmp
fincstp
sbb
or
pusha
lock
xor
sub
int3
gs
movsb
mov
sub
cmp
pop
jle
imul
dec
pop
push
inc
sarb
dec
addl
adc
movl
sbb
pop
in
xlat
push
test
sbb
add
shl
or
cmp
dec
lods
icebp
mov
dec
fnsave
and
movsl
xor
fstl
cmp
xor
push
lahf
fildl
lcall
cld
push
sti
test
cltd
fs
sbb
int3
loope
add
inc
repz
imul
push
inc
mov
and
dec
cmp
test
jg
sbb
jb
fisubrl
sub
dec
mov
push
jo
inc
add
push
sbb
adc
pop
mov
and
jns
push
jcxz
xor
pop
icebp
add
ror
iret
xor
inc
repnz
fisubl
pop
rorb
push
cmp
jmp
dec
fcmovu
ds
inc
xchg
mov
and
aas
dec
xchg
rorl
rcrb
cmpb
insb
outsl
mov
pop
leave
jle
aas
mov
pop
pop
insl
push
clc
ret
incb
scas
pop
mulb
push
jg
and
ret
fdivs
sbb
cltd
lods
cs
test
loope
xor
je
cmpsl
fwait
test
in
test
and
dec
rcr
fs
sbb
clc
int
shll
dec
jg
pop
inc
adc
lods
and
imul
push
scas
movsl
lock
lods
lcall
lret
or
sbb
mov
xlat
adc
sub
mov
popf
cmpsl
mov
adc
adc
and
icebp
sbb
xor
imul
dec
rorl
xor
clc
lea
clc
arpl
decb
pop
sti
pusha
mov
or
imul
iret
or
mov
insb
push
sub
dec
adc
aas
in
aad
dec
or
cmp
lds
cltd
scas
and
in
cmp
shlb
mov
adc
stos
fiaddl
add
mov
or
add
repnz
pusha
xor
dec
push
in
lahf
sub
mov
cmpsl
fnstsw
xor
xchg
in
or
mov
jb
xlat
add
pushf
outsl
mov
sti
jecxz
movsl
adc
cwtl
enterw
dec
inc
pop
js
rolb
fistl
testl
and
xchg
inc
loop
push
cmpb
jp
ds
insl
sub
pop
fsubs
or
fimull
repz
sbbb
push
mulps
xchg
sub
push
jne
mov
data16
pop
nop
jo
jmp
ss
xor
inc
rclb
lds
xchg
in
mov
testl
cmp
in
mov
xchg
mov
jp
aaa
push
imul
mov
and
bound
lds
mov
mov
sub
xor
lock
cmp
mov
cvtdq2pd
clc
jae
lods
shl
pusha
xlat
das
sahf
pop
mov
stos
gs
int
adc
scas
and
xor
cmp
out
sbb
fstpt
out
divb
xchg
daa
mov
stos
fcmovb
add
sbb
mov
sbb
jmp
aam
mov
cmp
mov
pop
sbb
lret
clc
xchg
cmpsl
aad
inc
movsl
test
cmp
sahf
pop
sbb
and
mov
add
shl
stc
adc
jl
mov
dec
mov
or
xchg
popa
stos
jecxz
repnz
jne
mov
imul
outsb
mov
pop
adc
fs
imul
sub
lea
jecxz
xchg
jne
je
adc
fadds
pushf
test
repz
repnz
jmp
push
inc
xor
testl
mov
dec
ret
push
into
out
sbbl
xorl
sbb
sub
roll
out
stos
push
xchg
pop
pop
aam
shl
iret
mov
fwait
mov
jb,pt
lods
cmp
lahf
les
inc
rolb
mull
adcl
rorb
js
pop
mov
das
mov
push
dec
imul
inc
sub
call
mov
repnz
jl
out
js
push
mov
mov
dec
ja
adc
jecxz
push
ljmp
push
jno
xorb
scas
inc
sti
mov
idivb
shll
enter
call
sbb
lcall
cwtl
pop
mov
jp
nop
movsb
adc
jecxz
out
mov
sbb
push
stos
aad
adc
xor
jne
jge
and
push
cwtl
push
or
daa
or
adc
pop
sub
sub
cltd
jmp
cld
push
push
mov
xor
lahf
testl
cmp
hlt
test
pop
mulb
cmc
aaa
pop
xchg
mov
sub
inc
cmp
cmp
scas
mov
sub
gs
pushf
sub
xorb
movsl
inc
jo
repnz
xlat
jne
sti
pop
adc
in
ret
cmp
pop
ret
sub
sbb
mov
nop
push
fsubr
test
fwait
sbb
ds
ljmp
adcb
push
pop
cmpb
dec
pop
sub
loopne
mov
dec
lcall
push
iret
lock
dec
jo
loop
test
sbb
sbb
adc
sub
gs
push
nopl
mov
xchg
add
push
sub
ret
add
lea
fmuls
xor
movsl
inc
fbstp
mov
push
add
adc
lret
imul
aaa
jae
mov
inc
push
pop
push
pop
lock
aad
cmp
cmp
or
in
mov
iret
mull
jmp
mov
test
out
push
pushf
into
cmp
xchg
jno
vcmpsd
fbstp
fstp
pop
out
xor
sbb
clc
loope
aas
dec
std
dec
jp
or
jg
sub
xchg
and
mov
mov
ss
mov
insl
je
push
fwait
and
or
enter
adc
repz
inc
adc
xchg
dec
stos
add
push
test
dec
cmp
sti
pop
push
inc
notb
mov
mov
sub
mov
loope
jmp
jae
dec
and
jmp
faddp
pop
lahf
and
stc
cltd
movsb
cld
push
andl
js
xor
shll
mov
jb
out
lods
or
andb
dec
inc
rol
sbb
mov
aaa
and
jbe
ja
and
loope
mov
adc
jmp
je
in
mov
cmc
ds
jge
mov
jmp
or
xchg
ret
sbb
sarb
les
inc
stos
jl
xor
fistpll
xchg
ja
rcrl
ficompl
sub
sar
js
push
sbb
add
pop
add
sub
lods
testl
inc
pop
push
jb
xchg
rcr
xchg
lods
scas
dec
xor
rorb
pop
test
pop
lds
pop
xlat
mov
mov
adc
lcall
or
pop
mov
and
shlb
mov
inc
rolb
in
jg
outsb
xor
sbb
and
test
orl
lcall
jp
aas
add
das
out
inc
mov
stc
pusha
cli
add
mov
pop
add
faddl
adc
mov
std
push
in
lea
push
out
pop
xchg
stos
push
dec
idivb
cmp
std
cmp
mov
stos
cld
ja
pop
rorl
stos
xchg
inc
cmp
push
fistl
out
cmpsl
fwait
cmpl
pop
call
lahf
ja
repz
push
les
int
lea
add
jecxz
pushl
jp
sub
ror
xchg
ret
xchg
jmp
sti
adc
adc
insl
fldenv
mov
in
or
pop
andb
loope
mov
cmp
shll
cwtl
fstp
push
pop
jno
loop
push
jg
inc
or
sub
mov
orl
dec
cli
xor
sbb
mov
movsl
scas
mov
stc
push
inc
ret
jge
sbb
sub
dec
mov
movsl
xchg
icebp
sbb
dec
sbb
sbb
jge
push
mov
ds
out
cmpsl
adc
and
jge
sub
lds
xchg
xchg
stos
insl
cltd
xor
mov
and
dec
cld
in
add
bound
lcall
scas
add
and
add
scas
sti
jl
dec
lods
idivl
fsubrl
and
inc
movsb
out
cld
push
lods
icebp
adc
or
fwait
call
call
mov
test
push
xchg
lods
sub
xor
cmp
jno
into
insb
xchg
ret
lds
iret
out
or
data16
or
stos
mov
sub
xchg
out
in
dec
fs
sarb
outsb
mov
mov
or
lods
or
or
cld
pop
add
sbb
mov
or
mov
aaa
mov
stos
lret
xlat
arpl
cmp
outsb
and
lcall
mov
add
iret
mov
push
ljmp
aaa
mov
dec
push
mov
fucomp
in
fstpl
in
pop
mov
cmp
mov
test
xlat
xchg
mov
lods
cmc
cli
lret
gs
jg
xchg
aaa
xor
testb
data16
in
jecxz
inc
cmp
out
aaa
inc
test
mov
mov
scas
mov
roll
push
inc
jp
sub
push
push
push
outsb
mov
adc
ja
insl
mov
sbb
mov
insl
mov
and
jo
in
mov
add
push
pop
int
insb
fs
mov
mov
inc
add
pushf
mov
data16
leave
mov
int3
push
popa
push
mov
xor
sbb
pop
pop
push
dec
sbb
movsb
sub
mov
sub
fdivl
daa
aas
mov
sbb
repz
jle
jns
fistps
fistpll
jnp
stos
xchg
cmp
clc
push
xchg
ja
xchg
iret
cs
jmp
iret
cs
pop
xor
arpl
xor
jle
fistl
mov
pop
nop
push
pop
outsb
aas
push
xlat
shll
push
push
cltd
jne
xchg
jnp
ret
and
push
data16
sub
pop
rcr
mov
movhps
pop
cmp
add
repz
xchg
pop
and
fadds
mov
dec
xchg
pop
sti
xchg
shll
mov
mov
mov
nop
xchg
xchg
sub
rcr
into
xchg
jo
cltd
sub
mov
ds
arpl
mov
mov
jge
rcl
adc
adc
xor
jecxz
jp
cli
std
jg
inc
sbb
adcl
mov
in
xchg
sbb
mov
div
mov
and
push
loop
iret
fs
jbe
lea
sbb
testb
cmc
inc
pop
xor
ds
es
cmp
clc
mov
jno
fistpl
icebp
stc
or
out
jmp
fldcw
jno
xchg
mov
fidivs
mov
sub
imulb
insb
xchg
das
negb
rolb
int
jl
mov
stc
addr16
sbb
mov
sub
mov
sbb
test
xchg
cmp
aaa
imul
outsb
xlat
pop
in
nop
jmp
inc
mov
pop
jno
ret
stos
cmp
jge
fwait
mov
pop
dec
pop
test
sahf
push
lock
push
and
sub
xlat
sub
adc
cld
sarb
inc
add
scas
xchg
cmp
pop
adc
rorl
jge
and
push
mov
loop
fs
aad
mov
dec
wrmsr
mov
push
lahf
test
jle
cmp
xor
mov
mov
out
adc
cmp
sub
xor
pop
int3
mov
dec
lods
inc
lea
lds
cld
or
jbe
sub
mov
ret
daa
push
sbb
xor
hlt
add
jo
and
xchg
or
lods
movsb
mov
xchg
mov
das
pop
outsl
or
movsl
aad
xor
cld
jl
adc
sub
and
adcb
movsbl
roll
mov
jmp
mov
loop
insl
fcoms
dec
gs
addr16
icebp
sti
lds
dec
aas
mov
ljmp
pushf
jb
les
test
sbb
xchg
aaa
sti
lcall
imul
test
je
mov
dec
adc
sti
incl
jbe
daa
add
adc
xchg
inc
mov
xlat
mov
xchg
mov
add
in
or
pop
dec
fnop
xchg
pushf
push
cmc
or
jg
shl
push
sub
adc
call
dec
popf
int
inc
dec
jge
or
mov
ret
jg
les
mov
and
jb
or
lret
dec
mov
lds
jge
xchg
lock
les
mov
adc
adc
inc
jbe
ljmp
nop
dec
and
cwtl
mov
xor
imul
sarb
or
testl
cli
test
adc
xor
lret
push
sbb
pop
mov
or
inc
icebp
imul
sub
pushf
out
filds
das
in
cli
popf
loope
xchg
mov
dec
cltd
in
sbb
inc
jecxz
out
xor
push
popa
ret
test
xorb
rclb
das
add
xor
cmp
ret
stos
jno
in
jno
clc
incb
sub
lods
jp
shll
jg
mov
xlat
pop
cwtl
loop
cmpsl
fidivl
cli
aam
xor
repz
jo
jle
cmp
daa
fmulp
fidivrl
enter
fildl
lea
cs
sub
ret
loope
rclb
icebp
bound
fsub
jl
lock
or
push
lret
sbb
decb
lea
rcr
test
into
sbb
inc
push
dec
xchg
repnz
mov
cmp
lcall
xor
pop
mov
int
cmp
jg
lahf
repnz
ds
xchg
or
mov
xchg
mov
jbe
pxor
xor
leave
ss
mov
add
hlt
das
mov
fldcw
push
ljmp
lahf
das
jb
add
mov
xchg
adc
mov
mov
cmp
in
adc
xchg
test
cmp
jae
popa
aaa
bound
ja
mov
pop
jge
pop
in
fidivrs
popa
jae
and
test
dec
pop
fdivrp
out
mov
pop
sti
push
dec
pusha
lea
cltd
gs
in
movb
jb
mov
pop
inc
and
jno
imul
imul
and
fsubr
cwtl
mov
and
adc
mov
aad
mov
in
mov
lret
xor
loope
loope
fsubrs
add
mov
outsl
dec
mov
mov
push
das
repnz
fistpll
rol
pop
rorb
rcr
jmp
ret
fcompl
xchg
insb
push
dec
cmp
cmp
xor
mov
push
pusha
pop
xor
mov
sbb
adc
dec
enter
cltd
shll
rol
mov
les
fcmovne
sbb
or
scas
push
pushf
test
pop
pop
lock
dec
adc
sub
push
out
sbb
mov
sub
icebp
jge
leave
int
jno
js
data16
aaa
push
negl
ss
xchg
inc
aad
or
fiadds
inc
mov
xchg
aad
test
sbb
test
xchg
inc
and
es
and
sub
daa
aas
test
jbe
push
ja
sbb
fs
je
pop
mov
jno
mov
outsb
in
int3
pop
dec
stos
adc
mov
xor
sbbl
xchg
aam
add
icebp
fidivrs
repnz
mov
add
dec
loop
test
loop
sbb
mov
and
int
jmp
cld
int
add
shr
stos
mov
adcb
push
push
cwtl
jge
cli
pop
cwtl
and
xchg
sub
mov
fidivl
ja
lret
and
int
cmp
jmp
push
insb
fwait
inc
insb
in
or
push
cmpb
xor
scas
mov
stc
pop
dec
jne
orl
ljmp
sub
in
lods
cmp
in
pop
lods
outsb
les
mov
notl
cli
sbb
lret
fsubr
mov
jecxz
mov
sub
mov
lds
shlb
jns
xchg
xor
or
mov
mov
mov
adc
pop
imul
pop
add
inc
and
fisubrs
xor
or
in
dec
or
mov
gs
jno
push
dec
gs
jnp
fimuls
das
out
ja
and
mov
adc
pop
mov
mov
aaa
cltd
push
sahf
loop
mov
daa
xor
stos
mov
scas
sub
cmpsl
adc
dec
pop
gs
mov
sub
int3
fucom
add
sub
push
pop
add
das
sbb
hlt
pop
fs
push
add
jmp
fs
fldenv
and
cmp
inc
xor
jge
mov
dec
outsl
mov
and
idivb
xchg
daa
aam
add
push
ds
mov
filds
bound
and
mov
in
insb
or
loope
mov
pop
or
ljmp
data16
jnp
xchg
pop
and
sub
daa
add
lds
xchg
cmp
inc
mov
and
push
movl
mov
and
adc
xor
push
decl
jo
jmp
sbb
lret
push
cmp
das
pop
sub
pop
and
int
call
push
or
mov
test
jmp
test
mov
fisttpll
xor
push
jecxz
sub
mov
loopne
loope
or
cld
lods
jno
dec
xor
add
stos
stc
lret
cmp
ret
popa
into
jg
outsb
jb
add
dec
aas
aam
iret
movsl
push
ret
jae
imul
sahf
jg
inc
cs
xor
mov
and
push
aam
loopne
inc
inc
pop
cmpsb
ljmp
out
mov
lods
shlb
mov
push
aaa
inc
aaa
fdivs
inc
test
int
sbbl
daa
icebp
xchg
es
pop
enter
int3
std
pop
push
popa
cmp
leave
les
dec
popf
push
int
mov
test
dec
jge
xchg
xlat
adc
jb
sub
dec
mov
out
push
jb
cs
cmp
js
sahf
dec
insl
mov
inc
adc
push
mov
rol
loopne
enter
and
cmp
dec
pop
loope
push
leave
adc
xchg
mov
xchg
jp
fs
mov
sahf
push
mov
ss
sbb
jmp
ljmp
adc
iret
imul
sbb
fistps
dec
xchg
shrl
push
scas
mov
mov
jle
dec
jecxz
insl
and
sti
roll
and
lcall
xlat
pop
push
jge
xchg
cmp
add
adc
test
in
into
sbb
or
mov
inc
xchg
mov
pop
scas
and
sub
xor
in
test
dec
popf
fsts
loop
fdivrs
sarl
movsb
cli
and
mov
adc
hlt
iret
imul
out
mov
or
mov
data16
daa
andl
leave
inc
xor
xchg
mov
insb
cmc
movsl
ds
loopne
pop
movb
xchg
bound
mov
dec
dec
lahf
aaa
jle
add
rcrl
add
aam
jne
xchg
mov
jl
mov
cmp
sub
out
adc
sti
lea
mov
aad
adcl
mov
in
lea
addr16
jge
fnstenv
imul
xor
enter
orb
hlt
mov
ret
sbb
movsb
pop
sbb
pop
mov
popa
ja
mov
mov
loop
push
aam
xor
scas
movsl
adc
pop
lods
mov
cmc
add
jne
pop
fdivl
pop
push
cmpsl
rorl
out
pop
add
push
mov
daa
xlat
test
js
std
adc
leave
push
and
adc
sbb
rcrl
lret
and
dec
aad
push
push
mov
jp
fdivs
jmp
hlt
aam
pop
out
xor
popa
push
lods
sbb
pop
out
push
adc
gs
add
dec
mov
movsl
das
cmp
call
and
mov
out
icebp
repnz
xchg
and
in
inc
jno
stos
add
pop
and
push
mov
inc
push
and
mov
push
push
inc
shrb
fisubs
fwait
loope
xchg
xor
xchg
xchg
jbe
int
xor
cmpsl
cmp
loopne
clc
loop
ljmp
notl
in
push
jae
ret
ja
sarl
lret
pop
filds
js
inc
aas
lock
dec
mov
ss
xor
sahf
jle
xor
std
push
loop
fsubr
inc
push
jge
mov
and
adc
std
mov
out
shr
jae
dec
xchg
and
jns
sarb
mov
xor
and
pop
sub
stos
fwait
movsb
and
jmp
mov
out
xchg
ret
or
std
adc
repnz
mov
mov
fdivs
mov
push
mov
xorb
insl
cltd
adc
cmpsb
inc
push
mov
xlat
mov
pop
cmp
jp
setno
stos
inc
out
mov
les
pop
int
mov
cmp
cltd
inc
mov
in
pop
add
jmp
sub
mov
cmp
xor
inc
enter
adc
pop
bound
lods
xlat
js
jno
cmpsl
repz
dec
rcrl
cmc
sub
std
fistps
test
sti
cmp
mov
push
cli
mov
jnp
sarl
std
pop
jb
or
js
pop
xor
in
inc
jne
and
icebp
adc
in
cmpsb
sub
cmp
xor
jecxz
aad
or
jbe
add
push
sbb
lret
loopne
mov
nop
or
scas
xor
data16
lods
jecxz
and
bound
sahf
mov
xlat
xchg
jl
inc
fsubs
adc
test
push
jmp
ljmp
xchg
loopne
pop
cmp
in
stos
or
xchg
jne
lret
sbb
movl
imul
in
pop
mov
push
mov
cmpsl
dec
mov
jmp
lcall
data16
dec
mov
pop
mov
jae
jbe
arpl
push
lahf
adc
xor
js
and
lea
insb
mov
daa
fsubrl
es
loopne
pop
rorb
ret
push
pop
adc
aad
sbb
xor
sti
arpl
add
push
stos
mov
cmp
mov
cld
pop
aam
aaa
xor
dec
jno
hlt
push
inc
mov
fnsave
shll
pop
shrb
out
xchg
dec
jge
roll
enter
cmp
pop
sbb
sub
lea
and
cs
mov
dec
mov
loop
ret
mov
in
imull
mov
mov
push
xor
aaa
xchg
loop
mov
fidivs
test
mov
test
ficomps
shll
sub
clc
ljmp
pop
inc
nop
movsl
mov
jmp
dec
in
in
lods
cmpsl
sub
in
ljmp
mull
inc
mov
or
loope
rolb
xor
inc
repz
sbb
popa
sub
jecxz
mov
jl
inc
repnz
pop
push
adc
dec
test
mov
in
imul
xlat
aas
imul
push
lds
repnz
cwtl
ror
int
ja
pop
dec
call
sahf
xchg
adc
lahf
pop
and
cwtl
out
jp
mov
rorl
testb
jl
and
add
aam
fucomip
sub
fistps
lret
sbb
mov
mov
je
icebp
xlat
ss
nop
mov
mov
cwtl
jecxz
jp
std
xor
mov
xor
mov
mov
loop
and
jge
cmp
mov
dec
das
inc
dec
jno
pushf
jecxz
data16
adc
int3
jmp
push
addr16
out
sbb
cmpsl
pop
sub
daa
sub
incb
bound
lret
pop
xchg
inc
sbbl
mov
daa
pop
into
lret
jmp
sbb
xchg
xchg
mov
dec
cmp
outsb
es
mov
cmc
fstpl
cmp
scas
cmp
lret
inc
xor
in
xor
xor
loop
lcall
in
mov
shlb
or
add
push
push
sub
scas
shll
jmp
daa
mov
and
fsts
sbb
push
cld
in
nop
pop
pop
cmp
inc
mov
mov
push
aad
and
shlb
lods
imul
and
push
lcall
lds
shrl
jle
lock
add
push
cmp
mov
add
movsb
adc
notl
xor
push
xor
es
loope
inc
test
pushf
es
daa
adc
sub
mov
pop
ss
cmp
test
xchg
mov
fstpl
rorb
call
aaa
mov
push
call
mov
push
lahf
lds
inc
jmp
loop
dec
mov
inc
dec
jnp
fstp
leave
lret
mov
ja
inc
mov
sbb
repnz
clc
dec
outsl
ja
fsubrs
addb
push
fwait
arpl
jo
and
mov
stos
loopne
es
stc
lds
mulb
adc
and
pop
adc
pop
or
mov
or
test
dec
mov
mov
in
xor
inc
lcall
dec
std
inc
je
rorb
push
nop
jno
dec
js
mov
lahf
sbb
mov
test
mov
cmpsl
adc
popf
dec
mov
nop
in
push
cmp
xchg
leave
lock
mov
adc
xchg
test
inc
cmp
jne,pn
inc
insb
dec
movsb
dec
mov
jmp
out
sbb
xchg
ret
xchg
sbb
adc
inc
xchg
addr16
inc
in
popa
into
movsb
pop
push
fists
mov
movsb
pop
stc
aam
imul
push
mov
mov
jne
out
mov
xor
inc
xchg
push
aaa
mov
dec
jo
mov
movsb
push
or
sti
fcoms
jge
adc
adc
push
lahf
inc
mov
inc
and
xor
fpatan
scas
into
jns
dec
les
and
es
mov
sub
shll
and
push
mov
dec
loopne
or
incb
aam
adc
push
lahf
push
mov
rol
sub
jmp
daa
mov
or
mov
or
je
lret
mov
or
sub
adc
dec
cwtl
adc
and
test
dec
adc
bound
nop
je
inc
popf
push
ds
xor
xor
cld
flds
cltd
pop
test
shll
pop
std
add
xchg
stc
xor
mov
or
enter
insb
mov
mov
mov
jbe
adc
add
inc
cmpsl
sbbb
xor
add
rclb
sbbb
shlb
adc
inc
imul
cwtl
xchg
shlb
cmpsb
mov
adc
inc
xchg
sub
lret
or
add
sub
push
jl
add
or
push
bound
add
daa
push
rcrl
loope
fucomip
adc
add
mov
sbb
add
es
or
test
jno
pusha
add
xchg
daa
dec
bound
sahf
stos
test
and
sahf
rclb
inc
mov
or
outsb
pop
pop
inc
sub
xchg
mov
in
es
add
pop
sub
jp
repnz
jp
popf
sub
test
imul
mov
clc
aad
dec
stos
lret
push
or
shl
idivb
pop
mov
fadd
jle
adc
sub
notb
bound
cmp
xchg
orb
dec
sbb
xchg
mov
add
adc
sbb
adc
sub
mov
add
push
lcall
fsubs
loop
or
xchg
push
and
mov
add
in
shll
daa
bound
xchg
sub
aas
add
sub
hlt
shlb
lods
push
pop
iret
stos
or
sub
test
dec
jg
push
pop
outsb
mov
imul
cmp
lods
or
pop
cs
clc
mov
pusha
adc
mov
mov
jmp
lahf
dec
rorl
test
cmp
xchg
in
daa
or
pop
xor
dec
xchg
pop
sub
ss
and
sbb
xchg
lret
and
addr16
xchg
test
pop
inc
cmpsb
add
or
cli
popa
ret
sub
lea
mov
or
pusha
xor
jmp
adc
mov
mov
lea
xchg
mov
insl
lcall
pop
mov
cmp
shrl
repz
daa
xchg
aaa
xchg
xchg
cmpsb
lds
xchg
inc
ja
sbb
jno
mov
sub
imul
adc
sbb
inc
jns
sbb
push
loope
pusha
outsb
aad
dec
cmpl
aaa
int
inc
rol
insl
push
scas
dec
shll
adc
sbb
mov
push
leave
sub
cmpsl
inc
int3
pop
ljmp
sbb
pop
shlb
adc
shrb
imul
sbb
cmpsb
inc
lret
subl
and
ss
out
insl
decl
mov
insl
sub
add
xor
mov
sbb
pop
add
mov
xor
adc
aad
mov
mov
jl
sti
inc
icebp
push
imul
int3
jp
frstor
arpl
test
les
mov
fmuls
pushf
sti
sbb
shlb
loop
movsl
stos
push
mov
in
and
sub
mov
add
inc
xchg
mov
lcall
mov
add
movsb
mov
xor
and
mov
daa
xchg
pop
iret
lcall
je
push
iret
fcompl
cmp
push
inc
leave
fisttpll
jmp
sarl
stos
aas
mov
aam
adc
adc
repnz
ret
xlat
jp
pop
pop
out
push
jge
inc
sbbb
xchg
adc
add
push
and
test
pop
test
and
adc
push
adc
stc
fs
mov
fsubs
fcmovne
pop
and
dec
lds
ret
push
mov
mov
in
dec
mov
cmp
call
mov
shll
push
lods
mov
stos
mov
int3
push
mov
sub
push
adc
test
shl
je
push
icebp
mov
adc
and
ficomps
out
cmp
std
shrl
sub
dec
pop
adc
xchg
mov
xor
ss
or
mov
mov
jbe
xor
mov
ret
mov
mov
mul
pop
adc
push
inc
mov
dec
mov
lock
icebp
mov
sbb
mov
test
adc
add
cmpsb
pop
mov
sbb
or
sub
inc
lret
sti
jle
push
adc
push
and
jp
or
mov
mov
push
adc
outsb
sub
ss
aad
out
mov
cmovbe
xchg
iret
das
xor
sub
lea
push
cmp
inc
int3
clc
jmp
stos
mov
mov
inc
or
out
inc
fdivs
and
add
mov
fistps
out
mov
mov
jg
aaa
outsb
pop
mov
mov
outsb
dec
bound
adc
cmpsl
mov
inc
das
mov
mov
dec
sbb
pop
mov
jo
cmc
jg
cmp
mov
pop
fs
sti
into
icebp
mov
mov
sub
mov
shr
sbb
aam
in
add
cmc
or
lods
sub
jl
pusha
sub
xchg
shlb
aam
jl
test
repnz
mov
outsb
test
push
ss
or
mov
add
mov
rclb
or
shlb
mov
mov
jp
sbb
inc
or
xor
add
add
xor
jne
sbb
xchg
movsl
add
dec
sbb
dec
add
dec
sbb
imul
aaa
fisttps
repnz
push
ss
inc
dec
and
subb
mov
dec
sbb
outsl
dec
inc
jns
sbb
or
js
sbb
push
or
adc
sbb
pop
ds
xor
fdivs
xor
out
test
lods
and
xor
push
xabort
mov
outsl
add
in
mov
xchg
movb
push
fstl
scas
add
leave
jbe
sbb
push
or
outsb
cmc
inc
jp
call
adc
lea
jnp
int
arpl
mov
cld
sbb
insb
jg
sub
gs
xor
leave
insl
sbb
mov
sbb
and
outsb
shlb
xchg
jmp
test
pop
xchg
repnz
shll
lock
fldcw
addb
mov
js
adc
add
inc
mov
sbb
mov
bound
fdiv
lea
les
push
lcall
fiaddl
add
xor
mov
inc
sub
lea
ja
xor
push
jno
xor
and
stc
nop
cmpsb
daa
add
fsubl
movsb
push
lock
outsb
xchg
movsl
add
add
jb
gs
xor
inc
xchg
add
sbb
xchg
movsb
add
adc
nop
subb
stos
dec
int
shrl
inc
outsl
mov
bound
push
stc
xchg
aaa
mov
in
or
les
sub
xchg
js
scas
xchg
mov
mov
rcl
lea
mov
pop
or
jno
sar
aas
lahf
push
mov
fstpl
add
inc
xchg
and
dec
aam
adc
jle
jne
mov
xchg
and
rorl
cmp
mov
lahf
popa
jecxz
xor
dec
mov
and
dec
adcl
stos
aam
les
aas
cltd
jbe
lods
fwait
or
negb
in
xchg
shrl
adc
negb
call
push
push
lds
jnp
or
inc
jae
test
bound
mov
loopne
stos
data16
or
test
lock
mov
mov
inc
sti
jae
int3
test
popf
cmp
jle
test
mov
and
pop
pop
mov
ret
mov
mov
add
push
adc
mov
sbb
push
insb
out
pop
or
push
add
mov
lock
mov
cmpb
mov
imul
jge
sbb
fs
stos
pop
out
in
push
shrb
jp
je
insb
fucomp
jg
cmp
pop
subb
rcl
push
inc
inc
shrb
jle
jno
xor
mov
aas
insl
dec
sub
xor
inc
dec
pop
xor
mov
dec
test
rcrl
sbb
and
pop
or
jno
mov
mov
xchg
xlat
or
testb
repnz
adc
jecxz
mov
mov
mov
or
adc
pop
test
repnz
enter
mov
idiv
mov
out
daa
cmp
sbb
jmp
movsl
fildll
test
rol
popa
jnp
call
hlt
pop
lock
add
sbb
out
xor
mov
sahf
fs
adc
jae
mov
mov
push
imul
push
ss
ret
fnstcw
loope
xlat
scas
xor
inc
mov
aas
xor
jno
test
movsb
cmpsb
push
add
leave
loope
and
lods
ja
jb
imul
push
sub
and
sbb
popaw
mov
pmaxsw
fadd
mov
shl
cli
scas
push
mov
xchg
mov
rclb
xchg
jg
ja
or
push
leave
cmp
dec
fidivrs
and
push
aad
sti
dec
jp
and
sub
mov
mov
inc
cmc
in
loopne
pop
clc
inc
and
cmp
test
ret
enter
stc
sbb
cmp
pusha
mov
sbb
fimuls
sbb
out
loope
mov
mov
sub
xchg
push
loope
mov
dec
add
addr16
sahf
xchg
cmp
daa
fidivrs
pop
and
cmc
lods
pop
inc
pop
jle
adc
les
mul
push
mov
aaa
int3
imul
ds
adc
into
jecxz
nop
mov
std
or
fstpl
outsb
out
mov
fldcw
jmp
loop
pop
inc
scas
pop
mov
adc
pop
jp
sbb
insl
scas
push
sti
lea
adc
psubusb
test
push
ss
test
mov
stc
mov
adc
mov
and
pusha
and
std
addr16
xor
idivb
stc
mov
rorb
push
iret
cmc
add
cmpsb
fs
in
xlat
jne
gs
lahf
mov
xchg
push
into
jns
enter
addr16
xchg
je
xlat
sahf
into
lahf
pop
aad
jno
pop
push
nop
sbb
cmp
dec
rorl
repz
scas
mov
or
mov
in
jge
fsubrl
mov
out
call
jmp
add
in
cli
jp
xchg
arpl
dec
outsb
adc
push
es
lods
in
push
jl
nop
jge
cmc
loopne
sti
outsl
jb
repz
mov
sarb
popf
fidivrl
pop
je
push
out
mov
sbb
movsl
lds
xor
dec
mov
stc
repnz
icebp
lods
push
mov
lock
jl
push
mov
stos
jne
int3
push
jns
call
push
movsl
or
rcrb
out
cmp
enter
fdiv
pusha
jle
cmp
js
je
jns
jns
mov
je
bound
or
outsb
leave
adc
rorl
aam
jno,pn
xchg
popa
pop
jno
pop
xchg
dec
dec
ds
es
stos
lcall
divl
pop
rclw
jns
xlat
ljmp
imul
jl
xchg
push
sbb
sub
data16
or
push
cmpsl
nop
sahf
push
jne
loopne
add
add
xchg
out
dec
gs
or
inc
push
in
test
xchg
adc
sub
das
mov
mov
pop
xor
imul
test
lock
ds
enter
std
arpl
mov
adc
sub
mov
add
lods
in
movsl
ss
mov
sahf
inc
sbb
xor
fstpt
lret
xchg
jmp
fadds
sub
cmp
mov
mov
adc
cltd
jb
xor
je
xchg
xchg
jmp
pop
xchg
test
xchg
incb
pop
fldcw
pop
das
mov
dec
fs
out
and
repnz
cli
leave
sbb
mov
jle
or
adc
ja
cwtl
insl
fwait
jne
cmp
neg
pop
mov
mov
mov
mov
ret
scas
jne
sbb
adc
jmp
mov
sbb
frstor
lods
ret
aaa
fwait
xor
cmp
push
xor
stos
or
sbb
push
in
in
lock
jle
xor
inc
xor
imul
test
mov
mov
pop
call
iret
repnz
fnsave
lahf
iret
fldt
xchg
lahf
lret
add
pop
fdiv
test
xor
negl
cmp
cmp
xor
mov
out
and
push
in
push
sub
jle
sarb
pop
push
cmc
jnp,pn
push
mov
nop
cmp
mov
add
xchg
rcrb
subl
pop
inc
lods
adc
icebp
leave
stc
jecxz
hlt
pop
mov
mov
or
data16
fcomps
dec
push
cmpsl
vcvtps2pd
cmpsl
rcr
inc
xchg
mov
pop
fcoms
aaa
push
test
xlat
sti
push
sub
negl
pop
ljmp
in
test
cmpl
inc
and
jb
fdivr
mov
pop
in
lret
xor
mov
dec
das
fsubrs
xchg
mov
and
sahf
xor
out
out
pop
ficompl
xchg
scas
cmp
arpl
loopne
in
aaa
shlb
loopne
cli
addr16
incb
mov
repnz
imul
fwait
shlb
clc
pop
pop
sbb
enter
sbb
sti
stos
shl
lret
xor
xor
stos
lea
jns
add
cmp
pop
jbe
cmp
cli
fidivrs
in
mov
xor
xchg
or
mov
cmp
stos
repz
negl
pop
or
notb
inc
inc
xor
mov
xor
daa
mov
add
dec
lea
out
cltd
xor
sbb
lock
les
nop
loopne
call
sti
jns
mov
nop
inc
test
je
rorl
push
inc
mov
mov
mov
push
imull
stos
sbb
rorl
out
mov
lea
lcall
nop
data16
fidivrl
ror
test
mov
cs
sub
dec
add
adc
pop
call
shrb
es
jge
mov
shl
sub
mov
inc
repz
outsl
imul
testl
jns
inc
call
out
cmpsl
cli
adc
cmc
popa
in
repnz
xchg
mov
push
fsub
ds
pop
andl
push
rclb
arpl
jne
mov
sbb
jl
push
adc
inc
xlat
cmp
push
ljmp
push
aam
call
mov
mov
negb
je
jge
dec
or
and
notb
les
push
xor
repz
inc
adc
ss
jae
jno
jle
dec
cmc
fwait
mov
and
sbb
pop
mov
push
pop
push
adc
mov
int
mov
movsb
push
adc
repnz
add
jle
clc
xchg
mov
xor
pop
scas
jns
daa
scas
mov
sbb
das
shll
jnp
push
mov
idiv
sbb
pop
cmp
enter
cld
xchg
jecxz
in
in
pop
sbb
cmp
out
jmp
adc
cmpsl
cwtl
notb
xchg
fcmovb
int
es
dec
inc
fwait
out
xor
fmul
loop
sub
lods
test
shll
mov
mov
repz
jae
clc
mov
mov
mov
pop
int
mov
scas
mov
ret
cmp
and
xor
aad
sub
jecxz
cmp
icebp
test
adc
sub
adc
dec
fwait
js
dec
cld
mov
inc
in
sub
les
jge
jge
xchg
inc
fsubl
jb
pop
leave
xchg
xchg
mov
and
cmpb
sub
adc
out
or
imul
mov
icebp
leave
fisubl
pop
jb
push
shrb
jp
stos
push
int
ret
lods
add
sbb
lret
inc
ret
cltd
les
imulb
pop
mov
mov
in
aad
or
sahf
xchg
mov
ljmp
gs
jbe
addr16
test
call
cltd
mov
pushf
loop
daa
dec
pop
dec
test
sbb
aaa
mov
lods
xchg
or
sbb
pushf
lret
stos
iret
call
cmp
mov
aaa
mov
adc
jo
lea
mov
stc
jbe
and
mov
pushl
add
mov
out
fldt
scas
js
push
cmp
imul
jecxz
mov
xchg
jnp
fldenv
outsl
push
cmp
xlat
adc
mov
imul
pop
dec
adc
in
outsl
dec
push
les
lahf
pop
scas
adc
ffree
test
push
jo
mov
ret
cmpsl
leave
aas
cmc
mov
fs
insl
dec
leave
mov
leave
xchg
mov
pop
test
push
add
in
cmp
enter
pop
dec
sbb
mov
jae
aam
loop
push
enter
mov
stos
dec
adc
fidivrl
in
fildll
ret
pop
cmpsb
dec
mov
cmpsl
xor
je
mov
roll
ss
dec
jbe
push
stos
sahf
jecxz
cld
gs
jecxz
mov
dec
mov
mov
mov
push
mov
sti
xlat
mov
jecxz
popf
adc
lahf
push
cwtl
cmp
push
push
sbb
imul
sub
pushf
inc
iret
inc
cld
jmp
jns
outsb
inc
ja
movsl
pop
mov
jle
call
mov
je
bound
lods
cmp
mov
jae
dec
sbb
pop
js
jne
jne
lret
jecxz
mov
fst
jae
cs
outsb
outsb
add
inc
mov
mov
popf
shrl
adc
jecxz
orl
mov
mulb
cmp
lahf
dec
mov
incb
xorb
in
adc
popf
cmpb
mov
daa
push
mov
sarb
insl
mov
int
sbb
ret
fstpt
sbb
int
jne
sti
pop
insl
aad
inc
aam
pop
push
imulb
stos
repnz
in
push
mov
sbb
xor
nop
push
mov
adc
jl
outsb
cld
pop
push
xor
bound
push
sbbl
insb
mov
movsl
jnp
fadds
push
mov
outsb
notl
sahf
xchg
popa
xor
sub
movsl
icebp
out
jl
xor
jecxz
cltd
or
inc
add
hlt
and
icebp
repz
movsb
vpmaxub
push
movsb
loopne
adc
and
fcmovnb
enter
xchg
cld
scas
fmul
pop
mov
and
popf
stos
cmp
push
mov
xchg
orl
adc
int
loopne
insl
inc
mov
into
das
push
xor
shl
nop
sti
jnp
ljmp
dec
sbb
push
into
into
jno
mov
pop
push
mov
mov
pop
jbe
pushl
icebp
cmp
pop
jbe
pop
sti
sbb
loopne
pop
add
loope
xor
mov
scas
lods
xchg
rcr
pop
sub
inc
scas
js
push
mov
mov
push
scas
mov
inc
insb
cmp
dec
add
test
xlat
int3
jmp
popa
and
das
sub
and
cmp
xchg
cmp
repz
fs
mov
jnp
mov
ret
loop
lods
scas
loop
xchg
in
cwtl
xchg
pop
fimuls
iret
test
lea
xor
adc
add
insb
sub
and
shll
push
jne
pop
out
mov
sbb
inc
xchg
mov
cmpsb
imul
or
jae
mov
scas
cmp
ficoml
mov
mov
ds
cmp
sbb
popf
daa
lret
cmp
hlt
lock
xchg
fdivl
ljmp
ja
loopne
push
push
xor
sub
sti
stc
mov
fsubp
iret
adc
sahf
and
jbe
push
les
int
dec
bound
incl
mov
mov
jmp
cmp
inc
mov
jbe
cmp
loop
lds
fsubrs
sub
adc
pusha
lds
icebp
lret
dec
xor
push
cwtl
cmp
std
jns
jae
add
fsub
xor
shlb
cmp
sbb
fimuls
dec
xchg
jno
jae
scas
and
lahf
mov
test
movsb
adc
std
xchg
lret
stos
jns
divl
adc
pop
cmp
shrl
lds
cld
jo
sar
fs
int3
in
cmp
sub
adc
pop
lea
and
jle
mov
xor
pushl
pusha
sub
pushf
mov
test
add
out
add
jae
insl
pop
stc
jns
jno
mov
pop
inc
outsl
add
stos
jp
and
dec
pushf
mov
xorl
inc
fwait
loopne
movsb
outsl
imul
sahf
and
divb
push
daa
lret
cli
hlt
mov
pop
mov
lcall
add
call
add
fstpt
shl
jmp
mov
call
mov
lds
std
js
pop
xchg
icebp
inc
icebp
cli
std
bound
xlat
mov
es
cmc
insl
jle
cs
or
rcll
push
fmuls
ret
rcll
xor
je
mov
jno
xchg
es
jp
int3
mov
lret
jg
flds
int
int3
es
out
lret
and
clc
lret
jmp
mov
inc
into
cmp
lock
jl
mov
out
sbb
dec
outsb
push
pushf
cmc
add
movsb
xchg
and
lahf
not
das
loope
inc
fidivrs
push
sub
pop
mov
add
xchg
push
push
push
rclb
shl
mov
jl
lea
push
or
sarb
and
pop
sahf
dec
inc
xchg
arpl
cmpl
mov
or
sbb
xchg
scas
cltd
inc
xchg
dec
addr16
cli
int
mov
or
add
clc
mov
enter
rcll
pop
fwait
int
fsts
mov
mov
sbb
imul
mov
sub
sahf
aaa
addr16
ss
dec
add
adc
mov
jae
aaa
aam
call
fisubs
sbb
pop
pushf
rorl
pop
mov
dec
test
outsb
sub
dec
mov
js
in
mov
sub
int
push
push
mov
cwtl
jae
lahf
mov
cmp
sub
out
and
pushf
orb
cli
stos
push
mul
pop
in
cld
push
and
inc
or
xor
jnp
cmp
dec
cwtl
dec
jne
iret
or
mov
pusha
gs
je
pusha
adc
mov
xchg
jecxz
outsl
sub
sbb
les
fstps
outsb
std
lcall
sub
mov
ret
mov
xlat
cmpsb
cmp
dec
adc
out
pop
jmp
pop
and
or
div
cmp
cmp
clc
push
inc
repnz
lret
inc
out
sahf
call
loope
add
adc
dec
adc
add
add
fdivrl
fwait
add
int3
int
sbb
sub
and
xor
fs
inc
movsb
inc
outsb
movsl
jbe
jge
cld
cmpsb
jecxz
pusha
jge
pop
js
ja
push
or
mov
mov
xchg
jns
sbb
imul
inc
adc
ljmp
jecxz
mov
ljmp
mov
xchg
mov
int3
and
cmp
jns
xor
xor
add
and
or
xor
add
dec
dec
adc
adc
mov
push
or
cltd
jbe
loope
sub
lods
add
shrb
adc
inc
enter
push
jne
or
scas
lret
xchg
lods
push
xor
ds
out
stc
int3
leave
and
outsb
in
mov
into
stc
mov
fbld
out
jbe
dec
jecxz
enter
movsb
into
je
mov
movups
dec
xchg
add
push
pushf
dec
mov
fcomi
int
mov
pop
adc
cmp
push
mov
push
imul
test
jg
ljmp
dec
ljmp
in
jg
cmp
hlt
jmp
and
sti
sbb
jbe
clc
lret
jg
jecxz
dec
fisubs
and
mov
inc
outsl
mov
mov
movl
in
outsb
cli
icebp
mov
js
out
call
cmp
into
aas
pop
pushf
jge
and
push
lret
inc
nop
out
aas
cld
jo
xlat
jmp
out
cmp
jmp
inc
outsb
and
shl
aas
mov
mov
xor
cmp
mov
or
and
xor
mov
pop
cmp
lods
fs
call
int
mov
std
inc
cmpsl
addl
clc
pop
pop
sti
jmp
pushl
mov
jg
pusha
out
int
cmp
mov
sahf
outsb
push
push
scas
test
fimull
jp
out
or
inc
iret
mov
xchg
arpl
sub
scas
and
pop
push
mov
push
xchg
xor
jb
pop
test
fiaddl
push
xchg
int
sbb
shl
push
push
pop
dec
cs
jge
or
jecxz
and
push
pop
iret
adc
mov
adc
jg
mov
in
jb
aad
push
or
scas
nop
xor
jne
shll
imulb
xor
cli
jnp
sub
das
in
adc
jo
xlat
fsubp
imul
and
nop
loopne
jo
popf
xchg
inc
dec
adc
jns
inc
xchg
repz
shlb
pop
mov
insl
les
push
jns
movsb
dec
sbb
add
inc
sbb
lds
or
outsb
inc
sub
shl
dec
jbe
sub
mov
cmp
jo
mov
and
pop
cmpsb
stos
mov
dec
push
pop
out
cmp
jg
mov
insb
cmp
xchg
ljmp
nop
mov
adc
xor
xchg
cmp
cmp
fnstenv
sbb
je
cmp
popf
sbb
ss
cltd
bound
enter
dec
or
repz
cmp
repz
nop
stos
cli
shl
dec
out
xor
xor
in
popa
daa
dec
mov
mov
dec
lods
stos
repnz
add
and
jne
fisubl
es
out
dec
inc
std
xchg
bnd
lret
sbb
inc
dec
mov
pop
clc
enter
je
fwait
push
inc
add
int3
ss
sarb
mov
popa
inc
aam
jnp
sbb
add
call
movsl
pop
sbb
lret
mov
push
cmp
push
lea
sbb
lea
mov
mov
mov
out
je
mov
bound
test
push
clc
loopne
xor
insb
push
aaa
xchg
sbb
ds
sbb
mov
push
cmpb
movsb
outsl
icebp
rcl
dec
cwtl
ja
pop
js
jb
fisubrl
insb
sbb
fidivrl
nop
std
jne
aam
in
test
lods
xor
jmp
adc
mov
lcall
mov
mov
jns
adc
stc
out
dec
mov
push
insl
das
mov
insl
lea
sub
jl
daa
mov
les
fwait
shrb
cmp
cmp
or
nop
adc
mov
mov
sub
xor
cld
and
jnp
add
js
ret
jnp
adc
testb
lock
mov
and
fistpll
and
decl
xor
or
bound
sub
dec
add
clc
sbb
mov
enter
xor
ret
out
adc
cmc
jns
fcompl
pop
clc
int
inc
jl
cmp
lret
fwait
xor
fidivs
cli
rcll
pop
inc
mov
ret
cld
jg
pushf
jecxz
jne
jl
std
sar
daa
xchg
xor
cmc
sti
jb
xor
mov
cli
enter
xlat
movsb
dec
shrl
mov
pusha
outsb
lcall
andl
out
push
lea
adc
cmpsb
sarl
mov
cmpsl
arpl
xor
ja
mov
gs
push
sahf
or
sahf
stos
xchg
test
sub
xor
movsl
push
lods
das
leave
or
dec
or
lock
imul
loopne
pop
or
es
jae
vunpckhps
and
xchg
push
sub
mov
inc
mov
cs
adc
lods
cltd
dec
jmp
mov
cmpsl
out
mov
sbb
add
out
outsb
jb
jp
in
add
mov
dec
add
int
or
insl
xlat
pop
stc
enter
jae
popf
mov
cld
lret
cs
jmp
sarb
xor
sbb
aaa
inc
mov
xor
cmpb
fdivrp
loope
imul
ret
adc
clc
mov
or
popa
xchg
cmp
fmul
outsb
std
xlat
inc
shlb
shl
sarl
loope
jmp
push
test
and
fistpl
fdivrs
mov
jmp
cmp
aas
imul
insb
js
fnstcw
mov
mov
stos
mov
jp
in
es
lea
inc
or
pop
pop
stos
fld
and
call
outsl
mov
inc
jp
push
clc
xor
xor
pop
gs
iret
rorl
dec
arpl
cld
outsl
mov
loopne
data16
jae
in
ljmp
sub
call
lods
lret
cwtl
mov
mov
or
jmp
cli
sbb
or
push
and
sub
mov
lret
pop
ss
aad
sub
mov
pop
jnp
loopne
sub
inc
insl
mov
ljmp
dec
xchg
inc
test
dec
sbb
cmc
ss
cld
mov
gs
movl
lds
inc
in
mov
lea
sbb
ja
les
jbe
mov
push
sub
xchg
mov
inc
mov
xor
ret
push
loopne
push
in
fsubrl
movsb
scas
ja
dec
cld
jle
cmp
in
adc
lock
mov
jecxz
imull
mov
cmc
mov
cmp
clc
pop
popa
jne
fs
jnp
addb
mov
iret
adc
or
mov
out
cmpsl
dec
pop
mov
xor
out
inc
loopne
mov
xor
or
pushf
mov
shr
imul
jo
push
fistps
rorb
cld
out
sarl
adc
out
xchg
inc
adc
clc
pop
adc
fistl
sahf
scas
cmp
sahf
gs
xor
pushf
dec
rcrb
outsl
xor
adc
push
fs
pop
cli
loop
idivl
mov
jo
push
scas
gs
inc
js
je
fsubl
rclb
in
push
cmp
jle
xchg
jnp
test
pop
daa
pop
xor
jp
xchg
or
mov
mov
ret
jbe
inc
dec
sub
ret
mov
icebp
subl
push
out
lds
mov
mov
inc
cs
mov
fidivl
sub
setge
jns
mov
sbb
mov
xor
cmpsb
rolb
stos
xor
cmp
rorl
into
xchg
nop
adc
sub
mov
xchg
jp
jmp
fildll
fisubrl
push
std
js
cmp
and
adc
pop
cmp
jge
cmp
inc
mov
or
fists
pop
in
aas
push
iret
xchg
push
sub
fstpt
punpckhbw
sub
fadds
shlb
mov
xchg
cltd
add
and
ret
or
orb
ret
dec
lods
pop
or
call
jae
sub
xor
push
loop
pusha
dec
shld
xchg
adc
mov
out
or
mov
shll
push
dec
movsl
jmp
enter
push
addr16
orb
push
out
out
add
sbb
inc
sbbb
jmp
adc
add
xchg
cmp
pop
add
xchg
add
sbb
mov
push
movsb
push
cwtl
sti
mov
out
shl
mov
or
mov
xor
mov
testb
notb
xor
adc
or
ss
jecxz
add
inc
mov
jns
clc
mov
jl
push
adc
pop
or
popa
mov
jle
outsl
jl
loopne
cmp
jmp
subl
call
or
mov
sahf
lea
pop
mov
xor
and
adc
and
mov
in
sbbb
popa
sahf
fisubrl
jmp
imul
sub
sub
es
adc
or
hlt
outsl
fs
and
popl
jbe
push
fmuls
xchg
pusha
icebp
jmp
js
push
xlat
xor
stos
jle
aad
sub
xchg
cs
jecxz
mov
and
ret
lds
mov
fidivl
stos
ljmp
scas
inc
pop
fstl
push
fidivl
ds
mov
or
test
in
lds
xor
push
jne
add
stc
mov
mov
ret
shll
loopne
pop
xchg
lcall
mov
mov
mov
lcall
dec
add
seto
enter
test
or
gs
sbb
movsl
iret
cmc
cwtl
aaa
daa
inc
jo
sbb
pop
fst
xchg
jae
lret
push
popf
sti
dec
cmpsl
ficoms
and
pop
dec
mov
pop
test
inc
out
or
dec
push
lret
mov
mov
popa
xlat
xor
xchg
xchg
inc
mov
jmp
outsl
scas
cmp
jb
cltd
sti
inc
sbb
inc
test
cmp
xchg
in
mov
sarb
and
pop
stos
mov
iret
andl
jl
jo
stos
mov
mov
es
push
idiv
jecxz
sbb
dec
jbe
cmpsb
scas
enter
dec
push
lret
mov
sub
sbb
xorb
xchg
les
into
daa
ds
in
pushf
inc
mov
xor
mov
repz
mov
jb
fiaddl
mov
fsubs
inc
adc
xchg
bsr
inc
xchg
sub
cmp
adc
and
adc
in
inc
arpl
push
psraw
es
pop
inc
xchg
xchg
sbb
fldenv
cmp
mov
das
out
cmp
sub
mov
cltd
xor
cwtl
int
jg
adc
out
cmpsb
and
sub
sbb
jecxz
insl
push
xor
dec
sarb
fadds
cmp
loopne
test
jb
ja
push
or
pop
rorb
repz
and
sahf
sahf
jp,pt
gs
mov
xor
xlat
into
sarb
sarl
mov
cmpb
mov
aad
loop
out
pop
popf
jge
inc
push
dec
and
rcll
mov
mov
out
fdivs
jbe
dec
fwait
es
xchg
or
fsubrs
jmp
aam
adc
fidivrl
loopne
jae
sub
fwait
mov
cmpsb
adcl
fdivs
xchg
xor
outsb
hlt
dec
insl
adc
fldl
lret
fnstcw
add
and
sub
mov
inc
sbb
dec
frstor
sbb
inc
out
mov
mov
add
fimull
insl
stos
sahf
pop
scas
and
loop
test
cmp
sbb
mov
stos
fildl
inc
mov
in
pusha
sbb
add
add
dec
lret
outsl
dec
into
andl
jecxz
inc
test
lret
push
or
pop
test
mov
fnsave
lea
shrl
adc
xchg
mov
sbb
dec
pop
lea
and
jnp
mov
aam
add
lds
loop
daa
int3
push
xchg
je
xchg
aas
dec
push
test
rcrl
dec
dec
inc
add
mov
adc
hlt
arpl
sbb
cmp
lret
push
push
mov
pop
mov
fnstcw
out
and
jae
lock
mov
and
addb
adc
lds
les
xor
filds
arpl
push
scas
push
push
dec
ja
cs
gs
mov
pop
nop
push
loop
push
daa
lock
mov
icebp
fistps
mov
xchg
movd
mov
test
or
pop
inc
cmp
lcall
popa
loop
pop
or
lds
xchg
cmp
xchg
xchg
into
add
push
push
jecxz
out
mov
rorb
push
lods
ljmp
sbb
jb
inc
or
pop
out
mov
or
add
xor
sub
mov
push
jns
call
adc
push
jns
and
mov
pop
aad
mov
scas
cmpsl
push
dec
insb
fistps
push
fldcw
mov
outsb
insb
cmc
mov
stos
daa
sbb
dec
mov
rclb
sbb
push
fs
mov
fistpll
xor
xchg
mov
popw
lods
int
sahf
pop
mov
jg
rorl
sti
mov
jns
mov
sbb
add
or
movsl
mov
rcrb
xchg
jb
testl
cld
fidivs
inc
fcompl
jge
lret
scas
mov
xor
push
mov
sbb
lahf
int
scas
or
mov
rorb
cs
hlt
je
inc
jle
sahf
sub
shr
ret
clc
stos
loope
lds
movsl
inc
xor
addr16
inc
jbe
inc
jae
add
stos
imul
in
xchg
sbbl
mov
mov
test
popa
mov
daa
movb
sbb
fucomp
add
ja
cwtl
cmp
mov
sbb
sub
sbb
mov
cmp
cmp
pop
fstps
or
pop
clc
cmp
dec
jl
jno
xor
jns
push
pop
mov
xchg
in
dec
mov
mov
mov
pop
push
and
pop
mov
test
in
push
jecxz
aam
loopne
es
cmpl
daa
testb
pop
pop
rorb
jecxz
and
jbe
dec
aad
jns
std
enter
xor
adcl
xchg
aaa
popf
mov
pop
xlat
cli
addr16
mov
and
mov
add
pop
push
push
jb
scas
pop
xor
insl
sbb
jp
int3
sbb
add
fstl
out
jb
mov
data16
mov
lcall
jle
lret
out
out
jbe
pop
mov
pop
pop
lods
loop
jne
mov
lahf
ret
pop
xor
xchg
scas
push
push
in
mov
mov
popa
cmpsb
push
dec
pop
outsl
inc
inc
mov
inc
and
dec
xlat
out
scas
lcall
scas
mov
inc
call
in
or
mov
inc
loopne
add
dec
insl
popa
repnz
xchg
fsubrs
out
clc
lcall
mov
xchg
in
inc
mov
inc
cmpsl
push
pop
pop
sbb
and
bound
cmp
test
lahf
jo
jp
or
fbstp
popa
loopne
or
mov
mov
mov
std
jnp
push
cmc
xchg
cmp
inc
sti
call
rcr
jno
fiadds
clc
jl
xchg
cmp
sti
mov
js
out
lea
mov
push
xchg
mov
xchg
cmpsl
xchg
ja
outsb
sub
imul
and
iret
rolb
aas
dec
inc
sub
jge
mov
mov
jb
xor
and
popa
pop
sar
mov
fcompl
insb
shl
or
pusha
sub
xchg
outsb
dec
mulb
das
jg
insb
fnstenv
icebp
fs
fidivrs
or
dec
pop
paddusb
push
xlat
stc
mov
jge
mov
out
cmp
fnstenv
pushf
lods
xor
or
cld
or
addr16
sub
fsubrl
xchg
dec
bound
rolb
sbb
movsb
jmp
add
sub
lret
mov
loopne
mov
lods
sub
mov
adc
loope
cltd
enter
lret
mov
ret
das
pop
popf
pushf
daa
gs
test
push
lods
aaa
ret
arpl
lds
dec
cwtl
mov
mov
sbb
das
or
jmp
hlt
fs
cmc
mov
sub
call
fmul
mov
jbe
pop
aad
test
xor
shr
or
iret
add
add
scas
cmp
and
push
out
mov
popa
add
push
ljmp
mov
xchg
in
ficoms
insb
loope
inc
xor
xchg
push
cmpl
popf
test
pop
inc
sub
insb
shll
push
ret
mov
lret
stc
stos
test
pop
mov
xor
inc
xchg
cs
ss
xchg
sub
testb
pushf
test
lret
push
push
fimuls
add
mov
add
sbb
dec
pop
mov
adc
ds
mov
pop
jns
mov
inc
or
mov
es
mov
xchg
ss
lret
mov
outsb
inc
in
jl
and
or
fidivrs
arpl
push
lret
dec
adc
sub
ja
mov
mov
xchg
add
into
xchg
lret
mov
ja
je
insl
sbb
and
hlt
adc
xchg
rcrb
and
xchg
pop
cmpsb
inc
push
sub
in
enter
xchg
push
mov
jb
in
mov
dec
dec
in
ds
mov
inc
cmp
xor
fidivl
insb
sbb
sbb
xchg
lods
fisubs
jge,pn
push
out
idiv
sti
in
mov
pop
cmp
fs
push
fadds
jae,pt
cmp
imul
dec
push
or
nop
sub
shrb
ret
and
inc
bound
scas
or
pop
xchg
sbb
mov
add
imul
xchg
addb
jp
xchg
pop
test
dec
dec
sbb
cmp
mov
lret
std
cmp
cmc
in
inc
fcmove
movsl
inc
in
or
clc
pushf
inc
sbb
adc
dec
push
fisubs
mov
push
mov
xorl
lret
rcrb
jnp
inc
fsubrl
pop
aas
test
loop
mov
dec
dec
jae
push
out
addr16
mov
icebp
pop
mov
add
adc
fidivl
xchg
out
pop
nop
loopne
cmpsb
aaa
adc
jo
scas
mov
fisttpl
xor
xor
icebp
stos
test
js
enter
fwait
aas
xchg
push
xchg
cmp
call
movsb
mov
cmovns
test
mov
jle
movsb
mov
arpl
hlt
je
fidivrs
dec
jge
lods
lahf
test
testb
mov
rclb
dec
xchg
call
cli
dec
add
shll
cmpsb
sti
sbb
iret
rclb
cmovs
loop
out
js
clc
jp
in
rclb
mov
jne
rolb
pop
mov
push
je
add
shr
aam
pusha
cld
fs
iret
mov
mov
push
or
jg
ljmp
pop
sahf
negb
cmp
xchg
lods
sbb
stc
test
mov
push
and
jp
je
fwait
sti
pop
push
sbb
push
aaa
inc
or
mov
mov
inc
pop
ss
loope
jbe
aaa
mov
pop
jge
mov
mov
imul
cmc
cmp
fnstenv
jnp
shr
add
shlb
rclb
nop
and
iret
fs
mov
dec
scas
stos
xor
mov
ret
enter
add
push
inc
or
das
pop
psubw
pop
in
fsubrs
xchg
sub
loope
dec
sub
shl
push
mov
test
das
cmp
add
lods
push
rorb
fsubrs
add
outsb
fsubs
mov
gs
sub
mov
je,pn
inc
out
in
call
adc
lods
out
dec
jmp
pushf
ficomps
mov
jmp
or
dec
push
out
inc
sbb
add
test
add
inc
sbb
jns
and
mov
imul
adc
dec
mov
jo
lds
pop
cmp
std
ret
addr16
sub
sbb
decl
mov
mov
cld
push
or
loope
loopne
jbe
mov
and
test
mov
pop
or
sahf
lret
xchg
nop
loop
out
jbe
xchg
sub
das
fwait
push
fimull
leave
or
in
sbb
xor
mov
fisubl
je
stos
scas
in
adc
jp
inc
scas
mov
add
adcb
push
adc
or
negb
mov
xor
arpl
int
add
and
and
pop
insl
sbb
dec
mov
pop
aaa
push
lods
cs
loop
test
testl
pop
into
push
gs
sub
sub
or
adc
and
pop
fistps
orl
call
in
and
lahf
sub
jns
orb
fldt
xchg
sub
test
mov
jnp
scas
jp
inc
pop
xchg
and
jecxz
inc
adc
not
add
nop
adc
adcb
jmp
mov
xchg
cmp
adc
fidivs
in
repz
xchg
lret
push
dec
js
sub
fldl
test
cmpsb
sbb
call
push
rol
push
inc
loop
xor
adc
stc
and
and
pop
cmovbe
push
outsl
xchg
loop
jge
fwait
sbb
jle
cmp
popa
pop
lret
lods
call
enter
loop
stos
mov
loope
dec
pop
leave
mov
and
fcoml
ret
rep
xor
adc
aam
or
mov
scas
std
mov
dec
stos
in
mov
scas
mov
sbb
pop
in
clc
repz
ds
out
adc
mov
jb
loopne
aam
xchg
xchg
ja
shr
xchg
jle
ds
icebp
pop
int
dec
adc
lock
leave
cmp
adc
and
jp
sbb
das
insb
rorb
mov
hlt
inc
imulb
sub
push
xchg
mov
sbb
ljmp
cmp
fstps
xchg
scas
fs
push
jb
sbb
or
mov
ss
es
jmp
xchg
iret
pop
pop
popf
push
lcall
add
pop
pop
mov
out
outsl
adc
sub
daa
cld
mov
cld
dec
xchg
cmp
dec
xchg
popa
fadds
add
jbe
iret
pop
xor
push
rcr
test
mov
adc
out
sbbl
pop
int3
dec
outsb
adc
andb
pop
iret
mov
fsubrs
dec
fprem1
pop
mov
dec
ja
das
mov
mov
adc
add
mov
pop
mov
sarb
sbb
ss
test
inc
sub
gs
mov
xchg
mov
aaa
jmp
sub
jp,pn
loope
jbe
imul
sbb
ret
pop
mov
mov
or
addb
jmp
pop
popa
push
cli
add
and
fldt
sub
lret
mov
push
cs
addr16
add
xchg
or
sub
stos
aam
fistpl
je
shl
inc
aam
cmp
dec
lods
in
inc
xchg
bound
dec
cmp
addr16
push
and
scas
mov
stos
dec
popf
outsl
sub
jge
or
mov
pushf
dec
adc
xchg
dec
lods
push
sub
xchg
and
out
mov
cli
arpl
insb
adc
in
cmp
jno
xchg
shr
and
jno
or
arpl
pop
into
jg
sbb
cmp
andl
mov
outsb
mov
negb
into
fsubl
imul
dec
lock
pop
shr
mov
mov
and
push
mov
das
mov
sub
mov
call
shll
sahf
int
lea
and
push
pusha
adc
inc
stos
aam
adc
das
ret
xchg
pop
nop
and
addr16
int3
sbb
add
pop
pop
mov
mov
inc
imul
pop
dec
pop
aas
fildl
cmp
sbb
mov
das
out
callw
pop
pop
xchg
ds
jmp
adc
inc
adc
push
xorb
push
es
inc
pop
cmpsb
mov
in
or
mov
jne
adc
out
xor
inc
add
das
push
mov
cmp
cmp
loop
popa
dec
repnz
pop
cmp
sbb
in
in
jmp
mov
or
in
icebp
xchg
pop
outsl
mov
aad
fildl
adc
adc
jle
jb
aam
jno
sub
sub
jge
fs
int3
mov
les
aaa
pop
enter
xor
lret
xchg
out
imul
pop
ljmp
and
push
js
lods
sub
arpl
dec
sarb
faddl
int3
test
mov
jae
add
cmp
rorb
push
cmpsb
addb
loopne
inc
or
jle
pop
cli
ja
and
ret
mov
push
in
jbe
mov
xchg
mov
out
repnz
ds
sbb
sbb
fstpt
clc
addl
add
loope
cmp
addb
pop
fs
and
inc
jae
pop
dec
cmp
inc
call
or
mov
pop
push
insb
push
addl
ficoms
test
pop
dec
mov
loope
stc
mov
aas
int
dec
cmp
call
loope
inc
cmp
add
mov
cmpsl
push
mov
cmc
ljmp
repnz
xchg
jns
xor
pop
stc
jmp
shl
pop
and
enter
mov
lret
cmpsb
pop
cs
scas
ljmp
xor
out
jle
sub
subl
cwtl
cmp
cmp
sbb
cmpsl
push
stos
dec
pop
ret
and
xor
inc
mov
repz
mov
out
test
sub
cld
push
mov
jl
push
sub
sub
aas
sbb
rorl
xchg
pop
push
lea
xchg
lea
inc
jae
jae
jbe
jp
mov
or
dec
xchg
out
out
push
cmpsb
cmpsl
pop
cli
push
xchg
inc
and
add
xor
push
mov
mov
push
mov
iret
cli
aad
pop
cmp
pand
jle
call
mov
and
fucom
adc
mov
xor
fiadds
pop
mov
cmp
jb
jmp
lock
sub
sub
bnd
mov
pop
mov
leave
imul
les
cmp
and
xlat
jp
mov
std
lahf
dec
cmpsb
xor
jns
and
mov
dec
icebp
shll
nop
push
pop
ffreep
xor
push
mov
jp
dec
testb
adc
mov
sbb
mov
loopne
ja
enter
lock
mov
ljmpw
inc
shll
pop
movsl
or
xor
pop
add
xchg
push
ret
sbb
sub
in
and
imul
insb
shl
and
or
adc
inc
sub
dec
scas
mov
inc
outsl
xor
push
je
push
lret
push
in
pushf
fwait
push
push
hlt
mov
and
inc
jp
jno,pn
cmpb
ljmp
icebp
or
jp
fadd
and
jne
shld
jecxz
mov
cmc
insl
mov
mov
xchg
mov
cmpsb
xchg
inc
out
test
aad
jnp
cmp
sub
inc
nop
mov
addb
dec
leave
mov
adc
and
scas
sub
rclb
jnp
fisubrl
inc
cmp
jae
jb
scas
jp
mov
cmp
les
cmp
sub
mov
cmp
js
repz
and
insb
push
cmp
or
bound
mov
cmpsb
fldt
testl
js
push
mov
mov
lods
out
test
imul
out
mul
pop
jo
sub
or
lock
inc
cmpl
inc
xor
mov
sub
test
jmp
adc
mov
xor
test
mov
sbb
cmc
dec
dec
pop
lret
mov
hlt
or
sub
cmp
xor
pop
pop
aaa
lds
movsb
lcall
cmp
pop
pop
test
pop
jmp
es
sbb
mov
insl
fnstcw
andb
rcrb
out
hlt
cmp
jae
cld
add
lret
scas
pop
fwait
sbb
outsl
cmpsb
jno
dec
lgs
popa
sub
jb
mov
repnz
dec
fnsave
pop
mov
imul
daa
stos
push
iret
push
push
push
jp
pop
stos
or
mov
push
fstl
lock
mov
pop
ds
rcrb
sti
filds
xchg
mov
inc
sahf
add
mov
negb
jmp
jb
mov
cmp
pop
lret
and
testl
jg
mov
in
dec
out
inc
ds
cwtl
jnp
iret
out
cmp
stc
push
imul
pxor
jecxz
out
mov
jns
add
jno
pushf
mov
enter
arpl
fwait
gs
inc
adc
pop
inc
jg
and
fcomi
cltd
mov
cmp
jmp
xchg
jb
mov
cs
xor
int3
inc
mov
dec
das
test
xor
std
cmp
jle
push
mov
test
pop
jae
fcoms
cmp
lret
sbbl
pop
jecxz
sbb
xchg
sub
push
jg
xchg
add
cltd
jb
xchg
jo
xlat
pop
out
mov
xlat
inc
jg
jmp
jle
dec
in
movsb
repz
push
into
jp
and
push
je
xor
pusha
lea
repnz
pop
dec
push
lods
mov
adc
dec
jle
adc
inc
mov
and
stos
cmp
out
add
mov
xchg
ror
pop
sbb
push
mov
jmp
imul
pop
mov
ret
adc
push
lcall
scas
mov
adc
lea
inc
icebp
orl
mov
xor
repnz
es
inc
xchg
int
sti
repnz
orl
pop
push
icebp
add
js
loop
sbb
dec
mov
ret
mov
mov
jne
xchg
mov
add
scas
add
xchg
int3
icebp
push
fsts
sarl
pop
pop
lcall
push
or
mulb
divl
add
std
xor
or
fcmovu
test
enter
cmp
ss
add
mov
lds
aaa
push
out
in
add
rorb
jecxz
adc
shll
mov
movsb
notb
movsl
inc
and
sbbb
lods
or
repnz
dec
test
cmp
rcrl
inc
or
mov
ja
add
push
std
dec
dec
shlb
mov
out
push
fdiv
or
incl
test
or
fcomps
out
xor
fstl
push
inc
scas
and
lock
sub
scas
add
rcrl
dec
leave
sbb
push
in
mov
cmc
mov
cmp
iret
lock
inc
sbb
cmp
outsl
loopne
mov
sbb
mov
leave
movsb
in
add
sahf
sbb
pop
out
push
mov
jnp
std
jno
cmp
sub
mov
insb
ret
shufps
lahf
sub
jle
cmpsl
xchg
test
cmp
js
mov
push
push
leave
jne
ret
add
xchg
dec
or
into
pop
xor
int
mov
sti
mov
fmuls
mov
jae
pop
aas
shlb
mov
fisubl
or
andb
push
inc
loop
aaa
mov
cs
ljmp
xchg
ljmp
or
pop
fbstp
data16
sahf
roll
push
xorb
push
adc
popf
out
mov
fldl
dec
andb
call
push
cmpsb
les
popf
jbe
jl
adc
dec
push
lock
mov
xchg
jle
stos
hlt
stos
xlat
cmc
out
jecxz
cwtl
ds
inc
cmc
cld
or
cmc
nop
pop
pop
out
ja
lret
icebp
jb
lcall
cs
lods
das
push
inc
fiadds
push
bound
insl
rcl
or
jns
aad
lret
xor
clc
lock
cli
adc
or
xor
pop
cwtl
adc
xchg
sbb
and
lds
fdivrl
ret
pusha
pop
in
fidivs
jmp
push
stc
mov
insb
mov
sbb
mov
dec
jnp
cmpb
inc
jecxz
cmp
and
push
out
push
popl
icebp
mov
push
push
sbb
push
cltd
test
pop
and
out
jp
jbe
loope
push
sbb
in
mov
push
jecxz
push
scas
mov
xchg
sarb
push
dec
fwait
pop
in
pop
xor
jmp
push
int3
jg
pusha
lcall
jecxz
dec
or
inc
aaa
jl
iret
shrl
jae
jl
movsl
push
inc
std
addr16
cwtl
jns
inc
cmc
inc
iret
pop
popa
cmpsl
xchg
test
dec
leave
popa
stos
repnz
mov
mov
pop
scas
loope
test
jb
stos
daa
mov
cmp
insb
cmpb
pop
mov
xchg
scas
mov
popl
jge
out
rcr
mov
or
adc
repnz
push
push
data16
sti
or
loopne
pop
popa
jns
fadds
lcall
xchg
jbe
mov
loope
insl
add
push
ret
sarl
test
pop
loop
pop
lret
jae
sbb
add
sbb
adc
sti
popl
sbb
pop
inc
sbb
sti
cmp
mov
aaa
testl
sub
cmp
out
xor
or
in
rcl
out
sbb
test
mov
mov
jno
mull
pushf
pop
push
repz
out
push
mov
push
jge
jle
add
ss
popf
fisubl
enter
sub
flds
xchg
aad
cmp
add
xchg
cmpsb
je
or
push
fisubrs
xchg
jg
xor
in
xlat
aas
lods
or
inc
out
push
sti
or
repz
mov
cmp
out
mov
insl
int3
adc
pop
shl
loop
add
out
cmpl
add
xchg
pop
push
or
sub
inc
dec
shrl
das
dec
dec
aam
int3
sbb
xor
add
jl
in
lods
ret
xchg
dec
adc
mov
push
jecxz
sti
mov
lock
cli
fiadds
int
in
movb
add
loop
add
stc
bound
inc
pop
dec
inc
rcrb
lret
jge
cwtl
xor
shlb
hlt
pushf
cmc
mov
in
iret
fiadds
xchg
scas
jno
xor
jno
fiadds
fcoms
lea
movsb
idiv
les
sahf
testl
add
fisttps
bound
sbb
mov
loopne
int
jmp
inc
mov
mov
mov
cmpb
iret
jns
insl
ljmp
fidivl
mov
mov
dec
pop
mov
roll
or
or
je
push
ficoms
aam
jecxz
push
inc
or
adc
jmp
add
inc
je
jl
and
pop
push
pop
add
fiadds
inc
pop
call
aad
mov
mov
mov
lret
mov
mov
xor
mov
cmp
into
int
call
add
xchg
push
xlat
mov
shll
and
sbbw
fsubrs
loope,pt
xchg
sbb
jmp
out
or
nop
int
cmpsb
pop
jp
cmp
lcall
mov
jp
cmp
movsl
movsl
push
loop
fdivl
pop
orl
int3
sbb
xor
and
loop
add
cmp
out
pop
popa
xchg
cmp
arpl
in
aaa
add
lahf
loope
lret
mov
mov
or
pop
push
lret
adc
rcrl
sbb
shlb
rorl
cmp
add
imul
pusha
repz
pop
xor
pop
add
ljmp
inc
pusha
loopne
mov
mov
jp
fs
aam
add
insb
or
dec
repnz
inc
push
push
or
jle
mov
inc
gs
jb
enter
insb
add
dec
out
mov
cld
pop
push
fsubrl
inc
lds
hlt
push
jne
add
push
ret
or
add
lret
sbb
aad
fs
hlt
stos
sbb
aam
dec
mov
cmovnp
addl
mov
aas
mov
push
call
xchg
inc
sub
lods
push
xlat
add
or
fsts
mov
xor
insb
gs
jne
int3
add
imul
sub
push
pop
push
test
lret
adc
xchg
jbe
jno
add
push
call
cmp
sub
ja
rolb
sti
dec
xchg
xchg
aad
rolb
mov
pushf
xchg
enter
shr
movsb
push
js
stos
outsb
dec
jmp
xor
cmc
push
testl
out
add
js
inc
int3
outsb
cmp
jns
or
pop
lock
sub
jne
movsl
imul
ds
inc
xchg
out
mov
dec
sub
cmp
pop
mov
and
cmp
fistpll
and
dec
dec
stos
cmpsl
mov
lods
pop
clc
jp
rcrb
mov
push
shl
and
js
mov
mov
jnp
mov
je
jbe
adc
movsb
in
sub
pushf
and
shrl
lahf
test
scas
and
jne
jecxz
aaa
loope
cmp
push
and
jbe
pop
int3
ds
mov
cmpsb
push
jo,pt
ds
aad
cmpsb
push
xchg
js
nop
add
and
stc
test
push
popf
mov
adc
fadds
jmp
jl
inc
add
pop
mov
inc
call
sub
adc
ljmp
pop
test
out
sysret
loope
or
and
mov
push
mov
wbinvd
pop
pop
fwait
cld
in
pop
cld
into
add
ja
test
jmp
mov
or
xor
js
jns
les
sbb
insl
xor
mov
pop
xor
pop
jne
popa
sub
push
fnstsw
cmpsb
popf
lods
jg
pop
lret
mov
xor
dec
lods
gs
movsl
es
and
xchg
mov
je
mov
adc
les
ja
or
jo
orl
jae
push
dec
push
or
pop
pop
dec
mov
fs
mov
insl
loopne
ret
ret
fs
inc
mov
scas
movsb
cwtl
ds
fbstp
cmpsl
pop
push
adc
std
fs
sbb
test
call
adc
out
aad
jle
mov
mov
pop
and
push
aam
das
aas
push
adc
cmpsb
inc
mov
jb
addr16
push
outsb
push
and
test
addr16
fs
stos
and
mov
lds
test
movsl
cmp
xchg
hlt
adc
xchg
adc
fadds
cmp
xor
ss
shlb
ja
adc
and
fwait
bts
adc
pop
mov
ss
dec
inc
lret
arpl
mul
mov
andl
cltd
ljmp
imul
outsl
inc
iret
adc
movsl
jb
xchg
fmul
sahf
jge
xor
or
push
jmp
xlat
loop
inc
jg
pop
jno
pop
stc
xchg
out
gs
inc
adc
in
rorl
test
xor
cmp
mov
fisubs
scas
aam
out
loop
add
jne
mov
frstor
jne
and
xorl
cmpl
adc
add
sbb
push
mov
mov
dec
jae
in
dec
stos
sti
aam
andb
int
repz
pop
sub
popf
sbb
sbbl
fidivs
call
mov
fisubs
ret
int
push
push
repnz
stos
das
cmc
inc
cwtl
out
sti
adc
and
js
push
imul
push
push
sti
and
push
sbb
push
sub
ljmp
push
pusha
cmp
and
out
add
pop
es
or
mov
pop
lods
pusha
movsl
pop
push
mov
or
das
dec
std
sub
lea
scas
or
hlt
xchg
addb
and
ret
jnp
shr
or
mov
sub
mov
js
push
cmp
mov
call
imul
test
arpl
or
jg
bound
dec
int
hlt
jb
jecxz
xchg
sbb
cmc
mov
faddl
xchg
or
xchg
push
xchg
fldcw
xor
sub
adc
xchg
and
out
mov
fnsave
orl
outsl
mov
fisttpll
outsb
cmpsb
fwait
push
push
into
and
dec
pop
aas
out
fbstp
cmp
out
jno
ljmp
popf
aaa
insb
lahf
inc
daa
cmpsl
sbb
jnp
mov
or
std
adc
or
pop
stos
mov
xchg
mov
jecxz
sub
test
dec
mov
leave
cld
subl
add
sbb
inc
push
scas
scas
aad
les
arpl
or
mov
sub
arpl
mov
nop
xchg
push
push
lret
add
push
xchg
outsl
sbb
les
aad
sbb
push
lods
mov
pop
shlb
pop
push
inc
insl
loop
sbbl
xchg
or
sti
dec
xchg
lcall
jg
sbb
xlat
sub
or
push
imul
pop
test
popa
pop
mov
mov
inc
icebp
scas
pop
add
jmp
xor
pop
xlat
push
xor
mov
daa
test
jnp
divb
and
rolb
mov
idivb
push
mov
or
fdivrs
mov
mov
sti
jo
mov
fiadds
test
movsb
icebp
scas
add
shl
sti
mov
mov
mov
mov
jno
out
sub
or
test
adcb
cmp
mov
cli
in
push
imul
jl
inc
sbb
pop
xlat
add
cmp
stos
daa
stc
test
call
inc
aaa
fistpll
fistpll
cltd
jne
add
aam
stc
aam
loopne
decb
rclb
xor
daa
test
fidivrs
jmp
xor
xchg
dec
inc
fs
shlb
adc
or
adc
xchg
add
bound
dec
jnp
pop
out
shll
cmp
rolb
dec
leave
sub
out
mov
clc
cmp
rclb
and
test
imul
sub
mov
sbb
jg
and
outsb
out
out
lahf
jns
idivl
not
out
jge
sti
cmp
jle
sbb
and
mov
inc
movsb
jne
mov
sub
mov
dec
call
stc
outsb
push
out
pop
jl
lods
daa
jno
mov
stc
outsb
xchg
out
cs
jmp
and
adc
and
push
fimull
ud0
fldt
cmp
push
out
mov
fcmovnbe
in
loopne
lock
cmp
rcrb
iret
push
iret
stc
ss
mov
fdivr
jp
repnz
mov
arpl
ret
lcall
mov
push
paddq
mov
lar
das
lret
pop
sub
xchg
cmp
loope
inc
enter
add
lods
insl
scas
gs
jecxz
mov
mov
mov
xor
xor
push
adc
pop
push
stc
add
sub
ja
int
cwtl
popf
stos
fdivl
repnz
mov
popa
mov
mov
mov
cmp
jmp
cmc
das
adc
or
hlt
pushf
adc
fisubrl
mov
in
jns
testb
lcall
add
push
mov
or
pop
mov
push
mov
mov
mov
out
or
scas
scas
jae
stos
rorl
or
or
test
inc
imul
push
in
mov
jnp
popa
push
fildll
pop
inc
cmpsl
mov
jl
sub
or
leave
loopne
out
xor
repz
push
cmp
pop
mov
push
pop
ljmp
dec
dec
sbb
out
loopne
ljmp
iret
mov
out
pop
shlb
outsb
jmp
cltd
sbb
aam
adc
or
aas
jl
data16
test
adc
jle
xchg
sbb
std
icebp
scas
repnz
jbe
sbb
or
push
sub
sub
mov
jns
fsubrs
cmp
sub
pusha
add
add
in
inc
stos
jae
xchg
iret
cld
cwtl
test
leave
sub
ss
lock
sbb
pop
in
les
adcl
pop
aad
outsl
xchg
mov
movsb
mov
rolb
test
push
mov
push
int
xor
pusha
movsl
pushf
xchg
push
sbb
lock
mov
out
ret
and
xchg
xor
and
mov
leave
push
push
into
out
bnd
push
mov
addr16
outsb
ja
mov
dec
xor
mov
push
stc
imul
jmp
fwait
pop
mov
dec
jnp
lods
scas
scas
mov
pop
adc
movsl
fs
mov
pop
leave
les
push
cmp
mov
shll
cmpl
push
rcrl
inc
mov
jae
ds
movsl
in
aam
test
dec
mov
mov
enter
xchg
pop
pop
cwtl
sbb
mov
xor
sbb
les
negb
and
in
arpl
inc
dec
lea
pop
inc
lahf
sbb
xor
aas
sbb
in
jle
addr16
lret
in
and
mov
xor
jae
in
push
setnp
mov
je
popf
sbb
daa
sbb
ja
cmpsb
mov
sbb
nop
push
push
jge
adcl
iret
mov
push
mov
mov
lahf
int
push
fsubs
ss
sbb
sahf
test
jnp
mov
cmpsb
movsb
dec
ret
repz
sbb
xchg
jne
push
loopne
aaa
fs
xor
and
lea
outsl
faddl
mov
dec
adc
mov
mov
cmc
mov
out
jecxz
stos
inc
cmp
mov
loopne
clc
loop
fsubs
popf
dec
xchg
and
sbb
aas
test
mov
xor
pop
inc
xor
and
adc
inc
ficomps
rcrb
or
lods
and
mov
lahf
nop
jns
arpl
out
pop
lcall
hlt
add
leave
mov
loop
loop
mov
pop
sub
push
aad
ret
decb
fisubrl
insb
loope
aaa
push
xchg
std
cmc
sbb
xchg
std
cmc
sbb
push
push
sar
fists
fwait
push
mov
mov
mov
push
stos
xor
fimull
in
add
dec
shll
int
mov
xor
push
sbb
stos
lods
cli
cmpsl
out
mov
push
jmp
ret
mov
jl
in
sub
adc
enter
pop
fisubrs
sub
pop
xchg
mov
mov
dec
outsb
lcall
pop
push
insl
ret
and
sbb
jle
add
push
ficomps
cwtl
aas
mov
push
out
inc
dec
cmp
popa
pop
xchg
inc
xlat
jb
pop
popf
add
pusha
cltd
mov
rcrb
lret
push
jno
pop
xchg
adc
fisubs
imul
stos
je
inc
push
lea
mov
mov
mov
mov
pop
es
iret
or
cmpsb
mov
out
dec
mov
mov
lea
inc
sub
jo
pop
jcxz
jb
xlat
pusha
pop
xchg
clc
out
int3
ret
bound
ds
popa
rorb
outsl
js
mov
call
pop
incl
add
iret
mov
mov
pop
and
stos
outsl
jno
pop
sbbb
push
adc
fnstsw
or
inc
lahf
cmp
lods
lcall
sarl
outsl
sub
orl
cmp
leave
int3
sbb
fsub
add
ret
sub
mov
ss
jp
leave
jecxz
xchg
outsb
into
stos
daa
and
js
enter
into
xlat
inc
cmpsb
and
xor
sti
rorl
out
inc
test
xor
movsl
pushf
mov
test
mov
cmp
push
or
mov
addb
cmpsl
jnp
scas
insb
mov
fisubrl
push
sti
add
pop
sub
popa
xlat
xlat
or
inc
mov
jne
xchg
iret
aas
jmp
shr
dec
mov
xchg
jbe
test
push
and
ret
cmp
mov
push
cmp
dec
cmp
dec
insl
orl
or
mov
stos
cmp
jae
aad
cmp
xlat
mov
add
scas
sahf
fsubrs
push
cltd
ficompl
in
pop
cmp
outsl
in
mov
jecxz
jnp
push
data16
xor
roll
aad
dec
cmp
push
mov
ja
test
mov
je
aad
je
add
rcrl
scas
repz
push
adc
loop
add
clc
cmp
push
mov
clc
icebp
jge
aas
hlt
js
out
int3
in
scas
sbb
icebp
test
mov
lea
jae
movhps
xchg
pop
rorl
aas
into
pxor
arpl
jecxz
lea
or
xchg
pop
cld
adc
sbb
cmp
jge
mov
jle
sar
out
fadds
loop
xchg
and
jg
lahf
cli
js
lahf
fisubrs
xchg
insl
stc
add
xchg
aas
stc
mov
xor
call
sti
insl
aas
loope
div
jg
pop
icebp
hlt
ds
loopne
sar
jmp
lock
sbb
int3
jno,pn
xchg
sbb
getsec
cli
adcl
or
fmull
call
pushf
sbb
jge
pop
gs
cmp
and
mov
xor
jmp
mov
push
mov
test
repnz
adc
push
negb
push
into
xor
scas
cmpsl
xor
insl
hlt
jecxz
ret
pusha
lds
pop
cmpl
rcl
mov
push
add
or
adc
inc
arpl
add
xor
lds
not
ror
les
sbbb
mov
xchg
jbe
popa
cmp
cmp
out
icebp
cwtl
dec
mov
jecxz
js
inc
pop
subl
cmp
mov
mov
popa
sarb
jbe
and
movsb
or
jp
je
jmp
mov
jge
aam
testl
and
mov
data16
ror
in
jno
mov
jmp
add
cmpsl
jge
mull
mov
mov
ret
dec
ljmp
sbb
mov
dec
mov
jmp
jo
sti
jne
cs
push
mov
out
xchg
mov
movsl
lcall
push
into
gs
sub
jecxz
xor
lahf
mov
out
fistpll
inc
or
loop
bound
int3
loop
test
cmp
in
pop
xor
popa
cmp
fdivs
mov
cmp
pop
sbb
push
inc
pusha
xlat
enter
gs
fsubl
push
mov
inc
pop
push
sahf
inc
orb
mov
inc
insl
out
push
mov
out
sub
mov
out
or
icebp
xor
ret
cli
shll
or
lret
ss
aaa
jns
js
bound
test
clc
or
int3
movl
mov
pop
icebp
adc
xor
adc
test
lcall
loope
bound
fiaddl
push
iret
outsl
imul
inc
and
xchg
xchg
ret
out
adc
xor
jl
dec
inc
out
cli
jl
lds
xchg
xor
push
mov
inc
inc
push
aad
mov
xchg
cmp
add
std
dec
fsubs
in
dec
push
pop
add
adc
loope
fistps
scas
sbb
push
sbb
mov
fldcw
scas
mov
sub
mov
inc
call
xor
rcrb
in
xor
loopne
insl
gs
in
decl
pop
mov
scas
in
in
andl
call
cld
sahf
adc
pop
enter
ret
push
inc
mov
bound
sbb
jecxz
inc
insl
jge
das
jae
cmp
test
and
dec
stc
dec
push
mov
out
mov
push
mov
mov
and
xlat
pop
pcmpeqw
cli
cmpl
lahf
into
mov
scas
pusha
sbb
outsb
dec
or
adc
add
ficompl
mov
add
bound
imul
sub
out
jge
inc
cmpsb
jno
daa
adc
stc
mov
xchg
std
aad
roll
sub
lods
aam
pop
aas
mov
cwtl
imul
sbb
dec
or
arpl
imul
or
add
mov
lret
adc
mov
xchg
sbb
sub
xlat
pop
add
inc
push
popf
stc
jp
stc
clc
scas
lods
xchg
mov
pop
inc
and
int3
xor
and
lahf
inc
adc
jmp
inc
inc
into
push
sbb
ja
add
cltd
mov
adc
adc
lods
cmp
lea
pop
jmp
fisttps
or
cmpb
push
gs
mov
pop
leave
xor
inc
sub
xor
inc
or
sub
sahf
sbb
adc
jg
inc
sbb
lea
dec
add
outsb
fs
ret
stos
pop
hlt
adc
icebp
ss
cmp
dec
jbe
inc
les
jo
cmpsb
dec
das
pop
test
inc
negl
inc
cwtl
mov
push
mov
add
mov
dec
jo
out
inc
das
ss
adc
out
inc
aad
sbb
lcall
jmp
pop
push
rorb
pop
movsl
fmull
leave
jbe
scas
incl
daa
sbb
pop
imul
dec
push
dec
jp
lcall
jnp
dec
mov
jecxz
dec
mov
jp
leave
and
ljmp
shl
adc
sti
cmp
rorl
fcoml
xor
mov
cmp
dec
pop
dec
jo
mov
dec
icebp
and
inc
mov
push
jge
cmpb
add
dec
push
cmp
jg
leave
sub
pop
test
xor
xor
andb
enter
movsl
xor
xchg
cli
mov
sbb
loop
jnp
insl
lds
in
or
and
add
mov
cs
imul
cmpb
lods
add
or
adc
scas
inc
mov
pusha
add
mov
clc
cmp
xor
pop
mov
push
nop
pop
lret
out
es
rol
popf
xchg
or
aad
insb
fs
cmpsb
cmp
pop
iret
insl
mov
sbb
sub
scas
insb
fstl
or
lods
xor
xchg
jg
dec
leave
stos
stos
std
arpl
mov
add
sti
lea
xor
and
inc
mov
pop
out
cmp
shlb
mov
lods
mov
cwtl
jns
repnz
push
xor
jnp
je
cs
push
push
cmp
imul
fs
movsl
pop
pop
das
ficomps
imul
cmp
insl
mov
dec
call
idivl
or
das
jg
inc
adc
movsb
or
repz
sub
dec
js
fldz
ret
mov
aas
jmp
inc
sbb
add
in
xor
mov
adc
pop
sub
out
xchg
mov
fists
cli
dec
xchg
mov
push
out
rcll
insl
mov
fdivrs
mov
and
loope,pt
mov
inc
divl
xlat
mov
adcl
fnstenvs
jmp
mov
mov
pop
insl
movsl
jo
or
shrb
xchg
xor
mov
out
sbb
stc
bound
les
in
inc
loopne
mov
xchg
xchg
lock
mov
add
scas
inc
insb
cld
add
bnd
push
cltd
jns
jbe
imul
stc
sbb
xchg
repnz
ja
pop
cltd
jp
mov
pusha
lcall
int3
int
pop
daa
ss
pop
xchg
insl
lds
test
fisttps
ficomps
jno
ds
cmc
mov
mov
pop
push
sti
stos
int
shl
inc
fldenv
mov
jl
jnp
adc
out
mov
stos
sub
subl
pusha
sbb
js
cltd
test
es
loope
fwait
lods
fdivrs
lds
loope
cli
out
divl
hlt
jnp
jnp
xchg
loope
test
test
negb
dec
sub
fsubp
sti
sub
test
push
mov
aaa
aam
pushf
adc
dec
ss
cld
insl
es
dec
scas
dec
xor
mov
xchg
mov
jno
clc
mov
roll
es
dec
sahf
dec
shrb
jb
mov
mov
sbb
es
cmpsl
clc
scas
mov
mov
dec
movsl
mov
mov
jecxz
fcmovne
inc
mov
jmp
clc
pop
cli
adc
cmp
mov
or
and
adcb
pop
out
xchg
pop
or
call
mov
dec
popa
add
xor
jmp
movsb
mov
iret
rorb
jg
vmread
sbb
and
sbb
icebp
fnstcw
jno
mov
sti
inc
in
dec
jbe
js
add
mov
and
daa
mov
xchg
sub
or
mov
add
push
push
testl
fldl
ljmp
nop
sub
jno
fiadds
pop
or
inc
cmp
stos
call
leave
sub
cmpl
dec
xchg
fiadds
pop
lock
mov
pop
pop
daa
cli
ret
xor
mov
jns
mov
aad
mov
test
xchg
fnstcw
push
cmp
xchg
imul
adc
jmp
sbb
ret
jmp
stos
xchg
out
pop
mov
shld
test
adc
inc
stos
lds
xchg
and
mov
inc
add
ret
popw
dec
cmp
jb
mov
sub
insb
rcrb
inc
movsb
mov
sarl
sub
in
jg,pt
stos
dec
or
or
jp
pushf
adc
cmp
jp
repnz
add
pop
push
dec
cld
jmp
mov
add
cld
push
stos
add
test
dec
mov
xor
imul
cmp
sahf
push
shr
icebp
jo
in
inc
mov
mulb
cld
imul
inc
fwait
mov
fidivs
mov
sbb
popa
push
dec
test
out
push
or
push
sbb
das
imul
xchg
xor
xchg
adc
insl
icebp
jbe
push
ja
imul
negb
adc
fcomps
loopne
xchg
cmp
enter
or
push
hlt
push
enter
sbb
pop
lret
sub
adc
xor
fcompl
mov
cli
cmpsb
pop
jle
push
mov
inc
pop
imul
test
xlat
lock
xchg
mov
cmp
inc
add
jb
repnz
inc
cli
test
and
daa
shrl
popl
adc
inc
xchg
repz
das
xlat
mov
or
sub
out
scas
and
push
or
ret
test
pop
icebp
mov
xchg
filds
xor
je
mov
jge
mov
aas
mov
dec
les
test
add
or
je
pop
popa
pop
outsb
push
jo
xchg
lods
fadd
sub
fxch
inc
fldcw
add
insl
imul
inc
dec
sub
inc
stc
push
mov
inc
mov
aam
std
repnz
jo
in
call
jno,pn
jge
push
pop
out
cmp
jecxz
fisubl
roll
aaa
sbb
sarb
stos
int3
pop
test
push
mov
jne
mov
cmpb
mov
lahf
inc
push
mov
out
shlb
das
minps
jne
push
mov
pusha
adc
adc
aam
mov
dec
push
sbb
repz
dec
and
iret
xor
dec
cmpl
addr16
imul
jmp
outsl
bound
push
push
dec
inc
jle
or
ss
addl
ljmp
nop
pop
int
jnp
mov
mov
push
push
nop
scas
mov
adc
jl
add
sbb
and
or
or
sbb
fcomps
push
mov
push
lock
cs
push
jne
jo
cmpsb
fs
cmp
mov
gs
es
mov
mov
push
pop
adc
pop
mull
mov
scas
xchg
or
jns
pop
nop
insl
repz
pop
iret
fdivl
adc
push
adc
ja
add
jnp
popf
out
fadds
jae
sbb
les
fucomi
sub
pushl
cmpsl
neg
xor
movsl
shl
fisubrs
sbb
inc
sub
mov
cmp
xor
adc
movsb
jbe
addr16
push
ret
pop
sbb
jl
lea
mov
or
inc
gs
add
loope
cmpsl
sub
ljmp
sbb
and
lahf
fisttps
mov
stos
inc
data16
in
add
mov
and
pop
shll
adc
jne
cmp
xor
lahf
loope
cmc
aad
out
test
mov
cltd
repz
pop
mov
cltd
sti
test
xchg
ret
repz
sbb
aas
and
rcll
stos
or
lahf
adc
mov
iret
push
or
xlat
andl
dec
cmpb
push
cwtl
repz
dec
inc
xchg
test
and
push
fmull
pop
cmp
aad
iret
stc
jo
mov
mov
xor
cli
aas
faddl
call
dec
in
test
stos
and
cmp
sbb
pop
xchg
adcb
mov
and
cmp
add
xorb
xchg
dec
sub
and
mov
mov
and
xchg
fcmovbe
iret
aaa
pop
dec
sbb
mov
push
or
xor
and
mov
adc
adc
loop
xor
in
lret
jae
mov
outsb
insb
ds
popa
imul
enter
push
xlat
out
fldt
cmp
adc
cmp
or
rcl
cmpsb
jo
rcl
adc
fbstp
jo
cwtl
divb
filds
dec
nop
jnp
push
lret
lret
sub
aad
imul
and
adc
fcomps
test
and
mov
sub
cmpsb
xor
adc
hlt
xor
lods
mov
lds
and
pushf
cltd
and
cltd
push
pop
sub
push
in
scas
or
and
xor
jl
push
xchg
inc
js
sub
scas
pop
shld
inc
xchg
adc
dec
lea
mov
in
cwtl
enter
adc
out
push
pushf
movsl
add
mov
ljmp
movsb
sub
add
or
cmp
push
or
and
mov
cmpsl
nop
test
push
loopne
jg
faddl
pop
std
fldenv
jns
out
repz
enter
sbb
jbe
out
inc
insb
jle
push
insb
rolb
adc
mov
jmp
das
hlt
sub
mov
loopne
jle
stos
add
xchg
sub
jnp
xor
rolb
mov
stc
inc
xor
fwait
mov
dec
in
jmp
movsl
loopne
nop
xchg
shld
xchg
cmpsl
jmp
pop
nop
repnz
outsb
add
std
mov
push
fstpt
dec
sub
mov
pop
push
add
push
insl
mov
call
mov
arpl
sub
inc
dec
loop
mov
aaa
add
xchg
jg
cmp
xchg
aad
inc
jg
xor
je
jbe
lds
ss
scas
pop
cld
adc
clc
or
ret
or
sahf
pop
add
insl
xchg
mov
jl
inc
call
xchg
aaa
or
lret
lods
xor
icebp
jecxz
fwait
adc
test
sub
mov
ja
cmp
mov
pop
rcr
fcomi
insb
jecxz
mov
adc
xor
dec
cwtl
into
mov
add
lods
inc
arpl
and
pop
int3
out
arpl
je
out
lea
cwtl
sbb
xor
push
fwait
mov
sub
outsb
pop
mov
dec
jge
arpl
adc
adc
mov
mov
cltd
cmp
jmp
lds
subb
or
pop
clc
les
mov
add
add
stos
movsl
shrb
rcrb
mov
lds
sub
jg
or
jp
xchg
fsts
and
add
pusha
sbb
aam
and
int3
sub
fsubrl
ret
push
push
enter
scas
rcrb
into
cmp
or
inc
aaa
mov
orb
and
mov
movsb
stos
dec
mov
mov
jg
push
in
mov
shrl
push
scas
testl
fisubl
testb
test
addr16
cmp
pop
add
outsb
fildll
cld
mov
ficoms
push
lods
mov
xlat
mov
test
cmp
rorl
xchg
dec
daa
ret
and
ds
xchg
jmp
sbb
adc
fwait
add
push
or
jmp
cwtl
jb
mov
or
cmp
dec
dec
sbb
pop
in
lcall
jns
aaa
adc
cli
push
push
push
cmp
pop
or
mov
or
testl
mov
xlat
pop
jo
stc
cmp
cmp
pop
ret
popa
sti
and
cmp
jnp
jmp
sub
jns
cli
or
dec
ret
pop
out
jmp
push
push
outsl
xchg
add
test
clc
ds
jns
scas
or
insb
js
ret
roll
mov
shlb
lret
or
jmp
cmp
jmp
or
iret
out
test
mov
cmp
xchg
pop
sahf
cmp
push
jne
mov
adc
inc
or
xchg
sbb
jne
into
hlt
push
adc
popa
inc
mov
or
sbb
xor
cltd
xchg
ret
sub
mov
jle
bnd
push
popf
cmpsl
nop
xchg
mov
cmpsl
pop
leave
mov
mov
dec
fldl
adc
shr
sub
cmc
push
cmp
xchg
sub
popf
mov
divb
pop
sub
mov
jo
cwtl
inc
or
jmp
repnz
popl
cmc
mov
xchg
clc
sub
fisttpl
fdiv
fwait
popf
sbb
pop
push
and
fnsave
outsb
mov
and
outsl
lret
cld
stos
adc
loope
xor
ljmp
popf
fistpl
divb
arpl
push
cli
pop
mov
mov
ret
push
clc
fs
addr16
ja
cmp
push
xor
sbbb
mov
jo
xor
adc
mov
loope
ret
in
mov
xchg
xor
xchg
jo
lea
mov
jge
pop
mov
ret
fidivl
stos
inc
rorl
bound
loopne
sub
adc
push
pop
cmpsb
inc
push
jb
cmpsl
dec
add
outsb
stos
fistl
mov
add
push
or
inc
xchg
icebp
pop
jae
mov
push
js
int
out
push
xchg
xchg
rorl
xchg
inc
dec
movsl
push
jle
add
pop
nop
addr16
insl
cltd
daa
push
call
fiadds
or
mov
xchg
aas
push
cwtl
dec
clc
mov
test
stc
in
mov
dec
jge
push
daa
loop
dec
out
call
jge
inc
ljmp
adc
push
jns
dec
dec
lahf
clc
pop
iret
ja
sub
mov
xor
pushf
mov
adc
lcall
mov
and
hlt
inc
adc
aaa
add
fdivr
cli
sbb
pop
bound
jg
dec
enter
std
test
lret
les
cwtl
sbb
sbb
mul
mov
pusha
jns
cmc
lds
mov
divb
mov
sub
sbb
gs
popa
int
mov
lcall
sub
out
or
clc
sbb
pop
movsl
xor
sub
lock
and
pop
outsb
inc
fwait
imul
inc
xchg
pop
scas
sub
aad
stc
and
dec
pop
xor
leave
in
jl
xchg
adc
add
mov
cltd
daa
inc
rorb
mov
add
add
test
push
sub
ds
pushf
push
inc
ss
sbb
mov
and
xor
insl
out
lock
xor
hlt
dec
add
fcmove
jb
in
xchg
add
sbb
push
je
jge
aad
scas
stos
out
mov
mov
call
popf
pop
sbb
out
jg
pop
aam
nop
jmp
div
lcall
sbb
pusha
jge
fistl
sub
push
jb
cwtl
xor
cmp
cmp
cmp
sbb
jne
and
in
in
sub
jmp
leave
or
cld
std
ret
in
mov
or
cmp
sahf
inc
repnz
sbb
xor
aam
dec
or
jb
fsubrl
ret
test
push
jmp
aaa
popa
xchg
add
loop
ja
loop
fcmovnu
lcall
cmp
jo
lret
into
mov
flds
push
sahf
or
jb
or
xor
sub
outsl
loope
jg
pop
data16
pop
test
xlat
push
or
add
fs
xor
aad
adcb
mov
dec
mov
add
ljmp
xchg
mov
sub
xorl
sub
xor
push
xorb
fsubrp
lods
scas
sub
lahf
mov
fistps
fildl
sub
push
xchg
je
cmp
imul
inc
iret
js
fcoml
inc
add
les
in
mov
cmpsl
xchg
outsb
jmp
rorl
enter
lahf
sbb
push
bound
push
rorl
add
filds
inc
arpl
jo
mov
into
pop
loop
inc
adc
cmp
fcomps
or
adc
dec
fldl
jp
pop
inc
mov
fcmovne
inc
mov
sbb
dec
out
and
dec
mov
mov
loope
push
or
pop
mov
dec
and
bound
js
aas
push
andb
insb
adc
jne
sbb
mov
aas
nop
sbb
andl
sti
xchg
std
icebp
push
pop
test
lss
mov
mov
mov
daa
insl
fcoml
xor
mov
xor
ret
insl
stc
aas
jle
lret
cmp
mov
xchg
jbe
mov
xor
xchg
pop
mov
push
sbb
mov
mov
inc
popa
outsb
inc
mov
orb
mov
pop
cs
test
addr16
sbb
push
add
sbb
ret
mov
cwtl
repnz
mov
into
inc
lods
addr16
jo
ret
mov
inc
push
push
loop
inc
shll
push
ja
jg
pop
sub
dec
data16
cmp
push
inc
jg
fisttps
cmp
and
lds
or
and
pop
rclb
sahf
jle
or
jp
dec
mov
mov
xchg
decb
je
dec
xlat
scas
pop
mov
scas
jns
aaa
xchg
ljmp
pop
outsl
xor
mov
insb
mov
mov
pushf
sub
mov
mov
dec
data16
push
mov
xchg
xor
mov
loop
adc
loopne
daa
adc
jge
imul
push
sahf
inc
ss
sbb
jae
push
push
xorb
and
lret
dec
insl
pop
mov
ljmp
in
cmp
ljmp
mov
imul
scas
test
jle
comiss
out
sub
and
lret
in
lret
scas
cmpsb
mov
lret
fidivrs
cmp
cmc
sbb
scas
fnstenv
nop
pop
pop
jnp
jl
jnp
rcr
or
ja
sub
mov
sahf
loopne
fsubrs
fistl
cmp
and
mov
hlt
popl
jp
fistpll
call
xor
sti
test
lods
loope
sti
ret
inc
cmp
sahf
mov
loope
sbb
aam
cmp
insb
into
pop
jge
icebp
cmpsl
lea
stc
fwait
in
insb
jae
sahf
imul
mov
adcb
xchg
shlb
mov
push
rol
push
mov
rcrb
ficomps
mov
inc
add
inc
adcl
mov
lea
cmpsl
inc
adc
xchg
jne
sbb
jmp
xchg
ljmp
insl
pushf
fldcw
push
pop
ret
les
sar
adc
ficoms
clc
shrb
jp
and
and
ja
mov
data16
inc
pop
aas
clc
inc
das
loop
adc
out
iret
cmp
mov
push
movsl
scas
popa
mov
jb
adc
xor
mov
jbe
inc
adc
sub
push
rolb
aas
adc
sub
push
add
fistpl
movsb
lcall
je
fdiv
pop
and
lahf
push
sub
dec
or
sub
cmp
ret
xor
mov
hlt
mov
loope
hlt
aaa
push
mov
leave
dec
loop
or
and
subb
mov
scas
cmpsb
dec
shll
pusha
push
xchg
inc
call
cmp
cmpsl
lods
xlat
setbe
movsl
cltd
js
pop
loop
ret
or
aas
cwtl
imul
push
pop
inc
shlb
out
cmp
int3
sub
jmp
flds
arpl
punpckhwd
push
negb
xchg
sbb
icebp
shll
cmc
ljmp
jmp
lds
sbb
mov
in
jl
sbb
in
fucomp
mov
dec
and
test
pop
dec
icebp
push
or
push
inc
rorl
xchg
ss
cmp
das
mov
fcoml
fldcw
loopne
in
in
hlt
jns
push
jl
js
loope
xchg
cmpsb
mov
add
lahf
mov
sahf
mov
arpl
sti
push
mov
lahf
imul
addl
out
cmpsl
inc
leave
pop
insl
mov
sub
pop
push
cmp
sub
mov
xchg
sub
push
ds
inc
fs
add
push
sti
dec
cmpb
cmpsl
insb
out
call
and
andb
pop
fimuls
mov
les
add
enter
xor
insb
mov
push
xlat
icebp
dec
leave
loopne
pop
cmpsb
and
lods
pushf
les
lds
or
test
sub
push
adc
sbb
repnz
mov
mov
push
movsb
test
aam
daa
push
jmp
push
dec
push
adc
iret
aaa
mov
sbb
inc
cmp
loope
and
ds
imul
lret
ljmp
add
xchg
and
jg
fdivs
jb
and
add
push
nop
dec
xor
mov
in
lahf
pop
push
jl
rol
mov
test
mov
sbb
xchg
push
add
cmp
adcl
call
push
add
js
clc
mov
dec
test
lret
jmp
mov
lret
pop
sub
cwtl
and
adc
test
aam
iret
pop
ss
aaa
xlat
dec
sarb
xchg
pop
bound
inc
sub
lods
lods
in
fwait
cltd
jbe
adc
push
icebp
ja
cmp
xchg
push
mov
fistpl
aam
scas
sub
jmp
scas
pop
and
movsb
lret
pop
ret
js
or
cld
pop
imul
clc
shlb
mov
inc
add
push
and
xor
out
xchg
and
cld
or
sub
sbb
jo
xor
jle
repnz
cmc
into
xlat
pushf
jae
mov
mov
rcr
push
fists
repnz
stos
stos
or
add
aam
jns
and
rclb
cmpsb
rolb
pop
add
das
test
loope
mov
mov
das
cmpsb
jbe
xor
rcrb
pushf
scas
mov
push
push
inc
mov
adc
outsl
push
inc
fwait
test
xchg
dec
cld
cmp
add
aam
mov
in
mov
in
pop
pop
xchg
sahf
test
loopne
clc
push
pop
jg
jnp
test
mov
cmp
mov
lea
test
cmp
insl
dec
sub
pop
push
icebp
fistpll
xchg
inc
pop
inc
sahf
xlat
sahf
cli
mov
lods
mov
fstl
mov
mov
mov
icebp
mov
mov
push
mov
enter
cmc
pushf
push
enter
mov
lods
and
push
sub
push
aam
rclb
lret
cli
scas
pop
mov
jns
xchg
mov
add
lods
bound
test
add
cmc
bound
div
xor
fcmovnbe
cmc
test
in
cli
int3
movsl
lock
sub
jp
shlb
add
mov
inc
pop
cmp
lds
rol
jbe
mov
inc
push
push
loopne
or
test
mov
cltd
out
cli
and
adc
imul
pop
out
out
imul
add
lods
mov
jo
cmp
push
mov
xchg
and
inc
sti
push
xorb
lods
mov
sarl
loop
int3
xlat
push
xchg
mov
mov
lret
pop
jbe
xchg
jae
psubsw
icebp
fidivrs
aad
lods
cmp
add
mov
and
dec
mov
stos
cmp
xchg
addr16
jb
pop
imul
dec
ror
xchg
stos
out
lcall
push
cmp
pop
shll
into
into
decl
popa
and
mov
mov
call
push
lahf
fdivs
test
cmp
add
and
dec
out
or
jge
lahf
pop
cmpsb
mov
ficompl
aaa
and
mov
cmc
jae
add
cmp
sbb
and
jmp
lods
inc
mov
iret
adc
cli
jns
ljmp
into
testl
loopne
js
popf
cmpsl
dec
loopne
xlat
fmull
repz
ljmp
push
cmp
xchg
mov
mov
sub
iret
sbb
jnp
and
adc
cld
cltd
mov
les
xchg
xor
push
addr16
sub
stos
jne
mov
dec
inc
lahf
mov
ret
xor
or
mov
rcrl
adc
aad
xor
adc
xchg
insb
subl
xor
inc
push
fstpt
mov
sbb
iret
cmp
or
sub
push
mov
sbb
shrb
test
push
cmp
sub
shlb
fstpt
or
xor
mov
fcompl
lock
sub
sub
fwait
dec
mov
in
inc
mov
mov
dec
pop
mov
sbb
pushf
mov
pop
xor
sbb
sarb
pop
push
add
sub
add
fwait
sbb
das
jbe
loopne
fcomi
mov
push
in
xchg
shl
add
dec
jge
popf
out
in
test
aam
pusha
shl
daa
ret
push
pushf
xorl
mov
inc
addb
sub
pop
rcr
daa
test
pop
mov
insb
inc
jbe
out
push
loope
cmp
lcall
or
ficoml
into
cmpl
sub
fnstcw
insl
xchg
cmp
flds
jmp
dec
pop
test
fcompl
mov
jge
or
mov
mov
sbb
jge
insl
jp
or
push
insb
fwait
hlt
cwtl
outsb
loop
imul
movsb
fsubs
push
subl
cmp
insl
ss
jl
push
xchg
gs
call
pusha
stc
sub
cmp
push
fsincos
movsb
pop
pop
fdivs
mov
xchg
leave
outsl
call
cltd
mov
sti
aaa
adc
mov
ss
sbb
or
fldl
add
insl
test
out
sbb
dec
pop
fcompl
jge
outsb
mov
adc
rolb
es
inc
lret
cmp
andl
add
mov
mov
insl
testl
dec
mov
jno
jge
mov
es
add
andl
fwait
fstl
addr16
stos
jns
sti
or
mov
das
cmc
dec
dec
lahf
pop
fnstcw
push
inc
rclb
jno
jae
mov
pop
push
fs
inc
ss
dec
js
cmp
std
inc
loope
mov
out
iret
je
push
push
mov
inc
jle
sub
xlat
lods
testl
fwait
xorl
in
or
cli
xchg
push
add
push
ror
cli
mov
sub
inc
addl
pop
jae
jbe
aaa
shrl
daa
mov
cmpsl
into
cmp
call
in
lods
sub
and
imul
test
dec
push
into
mov
stos
push
mov
sub
adc
enter
push
test
xchg
mov
mov
lcall
in
cmp
aas
inc
lret
arpl
push
or
inc
sub
mov
push
push
or
scas
cmp
lock
pop
jnp
scas
push
lods
inc
lock
movzwl
pop
sbb
fdiv
jg
adc
jne
int3
xchg
jne
call
inc
fbld
inc
sub
dec
and
inc
adc
inc
sub
test
cmc
cmp
divb
iret
fmulp
pop
fstpt
outsl
add
ss
pop
and
iret
cmp
push
into
ret
push
mov
pop
loopne
push
pusha
ret
xlat
sub
and
jnp
in
dec
mov
sbb
lret
add
in
std
ret
or
and
push
cmpsl
and
push
iret
sbb
push
mov
lcall
add
push
jle
movsb
fdivp
fistpll
pushw
js
mov
push
xor
lock
xor
add
or
jb
aaa
lods
jno
xchg
add
inc
mov
cld
fsts
jo
pop
mov
adcb
mov
pop
cld
call
outsb
mov
cmpsb
lret
sub
jo
mov
outsl
sbb
sahf
dec
ret
dec
loopne
leave
out
cmp
jg
mov
inc
sub
push
sbb
push
inc
sbb
sbb
adc
dec
repz
les
cmp
mov
adc
xchg
scas
adc
cmp
and
fwait
xchg
adc
icebp
fs
mov
daa
test
jmp
and
pop
imul
inc
cmp
repz
faddl
adc
test
cmpsl
mov
xor
dec
clc
dec
inc
mov
in
hlt
decl
xchg
arpl
sbbl
repz
sub
aaa
dec
sub
add
jne
and
imul
inc
dec
cmp
xchg
rcrl
add
jbe
mov
cmp
je
call
cli
jbe
shlb
out
inc
jae
pop
mov
sub
shrl
push
pusha
imul
jnp
adc
cmpsb
stc
add
cmpsl
and
mov
outsl
sub
and
and
loop
jne
inc
mov
inc
fwait
jecxz
sub
jge
ret
dec
inc
xor
add
cmp
jno
mov
push
es
pop
cmpsl
and
or
rcrb
inc
jmp
xor
leave
inc
out
ljmp
xlat
cmp
aaa
enter
leave
data16
fs
dec
jmp
cmp
fcmovbe
push
std
out
xchg
aas
subl
sbb
jg
lock
out
jl
ret
data16
enter
pop
movsl
dec
pop
dec
sahf
dec
das
xchg
and
jg
cmc
mov
xchg
lcall
mov
mov
stos
lods
sub
lret
inc
jno
inc
pop
xchg
fistpl
mov
push
ret
sub
xor
mul
mov
dec
ficomps
xchg
enter
mov
sarb
adc
addb
mov
add
dec
cmpl
shll
push
fidivrs
negb
fnstcw
pusha
sbb
fdivl
mov
cmpsb
iret
shlb
pop
daa
cmp
out
cmp
or
iret
aad
adc
adc
repnz
and
test
lahf
lret
xchg
inc
mov
test
jg
ja
decl
lock
add
out
pushf
mov
pop
and
faddl
ret
jb
push
std
fistps
jmp
mov
and
fsts
and
cs
xlat
mov
adc
add
in
pushf
mov
loop
sahf
mul
mov
pop
xchg
leave
ret
mov
pop
sub
mov
jge
addr16
sahf
mov
adcb
js
ss
sarb
sbb
or
test
test
jp
xchg
xchg
push
mov
cltd
es
add
or
mov
add
inc
pop
cmp
int
and
cmp
es
xchg
fnstenv
dec
ja
mov
jl
cmc
cmp
rcrl
pop
adc
xchg
inc
add
sbb
mov
pop
sub
and
idiv
pushl
inc
pop
outsl
jnp
mov
ja
neg
mul
jnp
jbe
dec
sbb
push
js
bnd
push
push
add
inc
or
pushf
loopne
imul
sub
popf
adc
clc
scas
mov
jnp
into
ret
pop
or
xchg
cmp
fadds
sub
subl
cltd
ljmp
dec
or
adc
lock
sub
mov
sub
lahf
popa
aas
pop
ret
pop
inc
xor
rolb
icebp
fwait
xchg
fldpi
sahf
outsb
inc
mov
xorb
idiv
nop
inc
sahf
sarb
or
mov
addl
dec
inc
scas
mov
mov
fnstenv
mov
xchg
sub
call
add
test
cmp
jge
xlat
inc
jnp
or
repnz
dec
sbb
mov
lock
call
mov
test
dec
fisttps
cmpsl
enter
jno
and
ret
fisubl
xor
jp
and
stos
pop
mov
cmp
add
jo
push
loopne
daa
sub
mov
sbb
subl
arpl
daa
push
into
xlat
pop
mov
in
jb
mov
bound
aas
test
mov
mov
je
push
data16
add
or
in
and
and
je
imul
js
arpl
jno
cmp
sbb
sub
xor
ficompl
sti
pusha
xor
pop
lods
imul
pop
inc
pop
jl
test
push
inc
or
xchg
jl
lcall
jg
loop
arpl
nop
cld
jg
es
cmp
dec
dec
scas
shl
icebp
stc
add
push
enter
daa
xor
jmp
out
push
scas
inc
xchg
fisubs
push
repnz
pop
popf
pop
rcrb
daa
xchg
std
pop
es
xor
mov
mov
xor
aaa
aam
push
call
adc
inc
push
push
lcall
sub
jp
fwait
push
ljmp
daa
mov
cmc
pop
popa
repnz
xchg
lret
lret
std
dec
adc
mov
jge
dec
push
push
and
inc
pop
inc
dec
test
data16
in
and
shlb
push
cmp
sbb
imul
fsubr
in
adc
sub
mov
pop
jge
scas
inc
push
mov
int
pop
js
popf
dec
and
lcall
pop
jns
jbe
repnz
bnd
out
lahf
cmp
pop
jge
stc
and
or
mov
adc
rcrb
stos
daa
and
fldenv
jge
jp
xor
imull
repz
fnstsw
mov
sub
outsl
int
lds
lock
pop
cmp
rolb
add
inc
sbb
cmp
jb
sub
js
out
enter
jo
adc
jl
push
push
hlt
cmpsb
filds
xor
divb
mov
push
stc
int
sbb
std
xchg
gs
cmp
sub
push
das
xchg
aam
jg
jp
xchg
pop
das
imul
cld
mov
lods
lock
mov
push
fnsave
out
push
inc
lea
xchg
insl
cmc
lods
sub
stos
jns
rolb
imul
mov
push
daa
xchg
or
fstpt
mov
stc
into
mov
aaa
in
hlt
pop
jne
mov
xor
sbb
pop
aas
lea
roll
lcall
xor
jmp
xchg
outsl
and
dec
stos
fidivl
popl
mov
mov
arpl
ja
mov
sti
push
mov
mov
push
mov
sbb
ds
add
popa
xlat
in
movsbl
rcrl
mov
ss
lock
pop
lods
das
out
insb
xor
jo
pushf
test
pop
or
push
mov
pop
push
bound
cmc
jb
bound
sbb
mov
sbb
add
std
mov
jns
mov
push
ficoms
sub
push
int3
push
stos
dec
in
dec
dec
test
xchg
sbb
movsl
mov
mov
test
jl
jmp
ret
mov
push
fsubrs
int
leave
lcall
mov
insl
or
mov
inc
mov
dec
xor
enter
shrl
in
mov
fiaddl
outsb
push
push
xor
mov
sbbl
add
ror
xchg
loope
into
inc
and
mov
pop
pop
push
mov
clc
push
push
pop
movl
and
xor
cmpb
pusha
pop
test
mov
xlat
aam
stos
xor
cmp
sahf
fldcw
das
pop
pushf
fldcw
lcall
flds
movsl
and
shrb
mov
mov
jo
rcl
insb
out
pop
adc
push
loop
mov
insb
xor
sub
cmp
cmp
xor
inc
test
adc
dec
or
test
aas
jge
insb
sbb
inc
testl
and
or
in
sub
aaa
pop
bound
push
mov
xchg
jecxz
imulb
nop
inc
jae
loop
push
hlt
xchg
inc
or
std
divl
mov
add
test
shll
rcrl
ss
adc
fimuls
outsb
mov
mov
jno
cs
mov
inc
mov
movsl
mov
xchg
inc
inc
mov
imull
imul
sbb
sub
loope
popf
mov
aad
inc
fstps
pushf
addr16
iret
pop
pop
mov
sub
lods
lret
xor
mov
int
cmp
addr16
xor
arpl
push
push
sbb
add
push
fs
or
aas
icebp
out
ja
xchg
inc
outsb
and
in
xor
shll
xor
in
xor
sbb
stos
js
inc
push
or
ja
jmp
pop
repnz
add
lea
adc
js
push
and
ficomps
inc
xchg
xchg
mov
pop
jmp
into
fisubrl
dec
add
adc
ret
mov
cmpl
lods
iret
lcall
rclb
leave
fmuls
or
cltd
inc
aad
push
movsl
flds
sahf
fidivl
repz
cwtl
dec
int
ret
je
cli
fcompp
jae
loopne
xor
dec
jp
mov
cmp
shlb
mov
cmpsb
jbe
adc
subl
rcr
mov
or
xor
mov
mov
push
jo
in
xlat
and
jbe
stos
lahf
sub
in
aam
data16
filds
xor
jmp
sahf
mov
or
and
scas
dec
mov
add
inc
outsb
scas
icebp
mov
sbb
pop
scas
push
inc
or
bound
in
mov
jne
mov
ds
push
test
dec
inc
fsubl
pop
sbb
add
inc
les
js
insl
or
subb
dec
xor
fadd
popa
lret
sub
push
sar
sbb
into
jge
pop
fisttpll
ja
movnti
push
mov
in
push
xor
andl
add
xor
cli
cmc
lahf
mov
sbb
fucomip
clc
mov
cmpsb
pop
int
mov
cmp
jne
or
scas
in
cmp
xchg
stos
sub
cmp
sbb
mov
push
cli
pop
mov
xor
pop
pop
jbe
dec
sbbb
push
pop
xor
in
sbb
xor
xor
leave
sub
push
mov
int
fistpl
jge,pt
mov
mul
dec
data16
push
sub
sbb
fs
adc
adc
stos
cli
and
jg
jle
jae
inc
lock
jge
fwait
xor
pop
insb
fidivrl
psrlw
les
imul
add
inc
aaa
aas
xor
popf
leave
jns
cmp
sahf
sbb
sub
push
data16
lret
lahf
push
xchg
sub
mov
scas
add
sub
inc
fildl
pop
mov
xchg
push
jae
pop
mov
mov
sbb
mov
push
out
fldcw
jecxz
gs
rclb
ret
and
sub
dec
adc
push
aas
rorl
fnstcw
stos
jge
popf
cs
or
lret
shlb
xchg
jge
pop
popa
pop
push
data16
inc
fdivs
sub
sub
adcb
and
bound
xchg
or
push
xchg
fidivrs
test
dec
dec
shrl
sti
xchg
sub
jmp
mov
aad
xchg
shlb
jg
sbb
lahf
add
mov
aad
jnp
add
stc
or
adc
mov
leave
lods
lret
nop
shrl
nop
push
data16
dec
jae
jne
mov
pop
inc
xchg
lods
test
popf
sti
fwait
jmp
cld
pop
jecxz
iret
insl
cmp
lcall
or
xchg
cmp
testb
jnp
and
pop
mov
pop
cmpsb
in
dec
lcall
arpl
fildll
xchg
mov
sub
leave
fisubs
or
push
pop
push
mov
dec
sbb
mov
fsubrs
pop
insl
jns
mov
cli
pusha
mov
mov
mov
cmp
or
or
test
ret
aaa
sub
mov
adc
ss
mov
sbb
popf
enter
cltd
out
push
mov
je
add
xchg
rcrb
pop
mov
lods
scas
mov
stos
movsl
cmp
mov
push
test
jae
mov
jge
mov
pop
jnp
loope
idivl
xchg
or
ljmp
jns
test
dec
sub
mov
ret
push
lods
out
das
jne
jae
scas
ficoms
pop
xor
sbb
sub
xchg
mov
inc
out
cmp
int
cmp
jbe
scas
bnd
sub
pop
pop
and
jbe
pushf
push
loop
xor
rcrl
inc
add
jmp
shll
mov
lods
and
cmpsl
sub
or
mov
out
dec
pop
dec
add
dec
leave
test
roll
vpshufd
cs
dec
rcl
add
in
out
ficomps
vmptrst
mov
or
sub
sub
pop
sbb
push
jnp
mov
loopne,pn
ret
or
dec
es
xchg
dec
int
xchg
in
push
addr16
fcmovu
stc
and
test
repnz
insl
inc
icebp
mov
cmpsl
ds
lcall
out
cmp
cmc
repz
xchg
jno
sub
sub
test
ret
hlt
js
mov
fnstsw
psllw
movsb
sub
aad
negb
jno
lods
popf
mov
scas
ret
adc
ficoml
cs
jl
mov
daa
mov
adc
mov
jno
lahf
rorb
sbb
mov
insb
and
ficoms
pop
or
jno
push
dec
roll
add
jb
lret
imul
cmp
xchg
mov
lret
lea
rcll
push
jbe
ds
pop
cmpsl
add
push
dec
and
ret
push
or
xchg
movsb
ficoms
add
or
xor
cmp
dec
outsl
out
pop
popf
daa
js
sbb
xchg
and
inc
dec
movsb
fldcw
das
xchg
daa
js
aas
xchg
daa
jns
xchg
push
lods
aad
rcrb
xor
arpl
lock
dec
es
ljmp
adc
lods
and
lods
addr16
dec
int3
sti
notb
mov
iret
hlt
adc
pop
ret
sbb
and
pop
enter
jmp
mov
lods
and
inc
aad
push
scas
out
scas
xchg
sbb
fisubrs
aaa
and
js
mov
xor
xlat
cmp
pushf
pop
mov
xlat
dec
inc
dec
add
cmpsl
xor
loop
ja
sbb
repz
push
cmp
mov
pop
push
lds
sahf
cmp
bound
xor
sub
stc
cwtl
insl
lret
push
jbe
mov
push
cmp
add
cwtl
mov
xchg
pusha
lret
dec
ljmp
xchg
mov
dec
outsb
sub
xchg
jne
xor
es
in
repz
inc
and
mov
push
adc
xchg
lods
outsb
inc
pop
outsb
jmp
sub
scas
ljmp
pop
pop
outsl
pop
fsubs
or
sub
pop
lcall
outsb
mov
xchg
cmp
jecxz
fadds
add
outsb
sar
leave
je
or
ss
mov
loop
xlat
mov
ljmp
dec
mov
sub
repz
clc
dec
push
lret
sbb
outsb
mov
jg
dec
adc
cwtl
push
out
clc
sub
xor
push
outsl
stos
rorl
scas
push
xchg
cmp
arpl
adc
xor
pop
pusha
cmpsl
popa
aaa
andl
and
pop
pop
xchg
push
mov
pop
fidivl
ja
test
enter
sub
daa
aad
dec
sub
enter
shl
shll
push
xchg
add
dec
lds
test
popa
imull
int
dec
dec
add
pop
out
add
rcll
mov
rorl
mov
fbld
adc
adc
icebp
test
cmpsl
leave
mov
xor
cmc
out
ljmp
scas
pop
pop
mov
call
xchg
in
out
repnz
mov
sub
jns
mov
mov
pushf
mov
cwtl
jnp
mov
icebp
push
sti
mov
scas
jl
mov
stos
aad
fists
jle
testl
mov
fistpl
shlb
stos
ret
adc
cmp
rcrb
dec
fcoms
add
mov
inc
push
jecxz
cltd
int
gs
xor
mov
and
and
rclb
cltd
out
push
jbe
sbb
outsl
fucom
mov
divl
stos
fdiv
push
mov
add
inc
bound
dec
leave
call
xchg
pushl
test
mov
jmp
scas
movl
fisttpll
jmp
scas
mov
lret
pushf
fldcw
fnstenv
inc
dec
jae
adc
outsb
mov
pmaddwd
cld
cmp
push
fwait
push
xor
iret
sbb
lret
push
or
jge
out
jae
insb
js
out
sub
hlt
inc
pop
faddl
push
cmp
xchg
repnz
pop
dec
push
outsl
iret
notb
mov
bound
sub
insl
xor
pop
sub
stos
adc
aam
in
push
lcall
jge
popa
hlt
pop
jbe
jb
sbb
sbb
lahf
testl
insb
jl
xchg
jecxz
in
lods
push
jmp
in
loopne
jle
out
imul
notl
adc
push
mov
shl
jnp
xchg
dec
add
mov
xor
sbb
jecxz
cwtl
or
ljmp
jne
in
data16
mov
adc
test
fs
cmpsl
xchg
enter
leave
sahf
push
test
stc
cs
fwait
and
inc
xor
and
add
rcrl
ds
mov
cmp
add
xchg
repnz
mov
sbb
sub
out
xchg
xchg
outsl
dec
cmpsb
inc
jbe
dec
xor
mov
inc
movl
inc
les
ljmp
and
lods
lds
jns,pt
xor
stos
dec
xor
jae
jg
mov
or
rcrb
adc
inc
pop
test
jne
testb
repz
xchg
mov
sti
adc
loope
fmull
cmp
repz
add
mov
fidivs
mov
pop
jb
repz
jnp
xchg
cli
sub
inc
daa
shlb
push
mov
jno
inc
adc
in
fstps
ds
enter
sub
mov
sbb
dec
and
sbb
sub
adc
mov
js
pop
mov
jbe
mov
rcrl
pop
dec
fwait
leave
mov
jmp
adc
mov
fsubrp
sti
cli
push
mov
cltd
rorb
add
pusha
movsl
test
sub
mov
inc
ljmp
loop
lea
std
sbb
cli
push
mov
subb
sub
ds
xchg
pop
fildl
inc
sub
cli
aaa
cmp
movsl
fsubl
mov
and
in
daa
sub
mov
or
mov
into
cs
orb
and
cmp
fs
xlat
fidivs
mov
mov
loop
shlb
and
imul
gs
xor
sbb
push
test
sbb
adc
shll
leave
jne
fs
lock
jb
insl
add
insl
xchg
mov
add
out
bound
fildll
add
sub
jecxz
xchg
jns
shrb
mov
enter
jge
ficompl
adc
addr16
ljmp
ficoms
add
sub
fsubrs
je
subb
mov
pop
jbe
mov
insb
dec
mov
in
adc
ja
push
ja
je
in
fcomi
mov
jp
push
pop
jnp
fdiv
jg
insl
push
scas
and
or
fisubrs
pop
xchg
sbb
imul
pop
pop
dec
adc
add
in
add
aas
dec
nop
fs
stos
jl
loopne
cld
push
in
fcoml
outsl
leave
and
daa
xor
push
jmp
cmp
imul
sbb
push
sub
mov
xorl
dec
mov
adc
sub
mov
and
adc
jbe
push
pushf
imul
je
lcall
xlat
repnz
aam
imul
mov
ret
nop
mov
out
adcl
and
jb
scas
daa
xor
test
xchg
xor
or
mov
push
popw
mov
xor
imul
outsb
shll
push
jbe
lds
jmp
adc
jb
mov
mov
inc
or
inc
aam
pop
cmpsl
dec
pop
xchg
cli
inc
pop
mov
xchg
mov
or
cwtl
daa
pop
mov
jmp
fidivs
add
repnz
mov
sub
cltd
mov
sbb
icebp
and
das
repnz
push
ret
inc
lcall
loop
fwait
sub
popl
cld
out
mov
mov
mov
mov
inc
and
mov
test
jbe
bound
fistl
mov
ljmp
lods
ja
inc
sahf
cmpl
dec
mov
cs
loope
lcall
fcoms
out
gs
sbb
cmp
repz
out
cmp
mov
cli
cmpsb
stc
cmp
outsb
xor
xor
mov
fsts
xchg
push
pop
fst
mov
fldt
enter
sub
insl
lcall
lahf
push
fs
loope
dec
loope
mov
xchg
mov
mov
out
sbb
popf
xchg
mov
in
popa
xchg
and
xor
lea
idivb
iret
or
stos
cld
test
ficoml
add
ret
sbb
adc
and
cmp
test
data16
jecxz
fwait
aam
mov
imul
popa
rorl
pop
rorl
or
dec
mov
sub
xor
push
bound
sbb
sbb
jne
outsb
lock
adc
pop
push
repnz
out
mov
jnp
stos
lahf
ret
lock
outsl
inc
jae
xchg
fstpt
xchg
cmpsb
lea
dec
aam
fnstcw
or
and
pusha
das
movsl
mov
push
add
pop
je
arpl
mov
jge
lahf
cmp
ret
sarb
jnp
test
stc
outsb
outsl
std
rol
lret
cmp
add
lock
les
jnp
and
xchg
push
mov
add
aaa
loopne
jno
and
mov
call
mov
pop
vfrczsd
xor
push
cmp
push
fimuls
lcall
cmpsl
sub
iret
stos
pop
push
aaa
aad
dec
es
pop
es
dec
pop
jmp
pop
mov
data16
sbb
mov
lods
in
fisttps
subl
adc
cmp
lret
sub
mov
inc
rcr
inc
jne
test
jp
cmpsl
inc
bound
add
mov
sbb
adc
leave
sub
sbbl
lea
je
sahf
inc
dec
inc
cmpsl
cmp
adc
xchg
add
push
loop
out
inc
inc
push
push
inc
push
jmp
push
pop
dec
dec
sti
paddd
jg
inc
nop
jmp
lcall
subl
movl
popa
mov
ljmp
sub
mov
std
dec
stos
out
dec
push
leave
dec
fildl
xchg
lret
mov
loope
cmpsl
mov
pop
inc
pop
data16
ret
pop
inc
ficompl
push
je
mov
aas
imul
mov
jb
test
push
sub
mov
inc
xor
push
repnz
lods
cmp
pop
cwtl
icebp
mov
aam
jae
mov
add
mov
bound
adc
stos
adc
sub
ljmp
lret
pop
push
leave
scas
sbb
loopne
orl
mov
dec
sbb
pop
inc
dec
adc
dec
stos
scas
push
mov
pop
into
in
xchg
les
sub
js
enter
faddl
scas
imul
cmc
lahf
sub
insl
addr16
lret
pop
rcl
inc
cmp
inc
dec
lret
ljmp
and
push
xchg
cmp
sbb
mov
jo
ds
sti
xor
fdivl
mov
cs
mov
pop
mov
xchg
xor
int
mov
lock
mov
jge
lock
mov
and
sbb
jb
mov
mov
pushl
and
or
cmp
jl
cmpsl
leave
xchg
stos
inc
mov
xchg
stos
in
adcl
fxch
or
dec
mov
mov
enter
push
jo
lret
push
sbb
xchg
es
sub
push
stc
hlt
inc
jno
and
xchg
jbe
loope
cmp
and
inc
jno
jge
jl
repz
fisubs
jbe
ret
sbb
jno
js
mov
lahf
loopne
xchg
push
inc
jbe
hlt
iret
inc
aam
pop
fs
mov
xor
xchg
push
in
jmp
in
jae
jb
fnstenv
jae
bound
dec
js
fsub
mov
sbb
mov
jp
imulb
pusha
cld
int
dec
lcall
push
jbe
ret
jbe
out
sub
js
push
xlat
adc
xor
insl
xchg
dec
push
push
sub
fsubl
sub
outsb
addr16
dec
xlat
int3
cmp
andb
jae
lea
loopne
fs
fcoms
enter
in
sub
cmp
adc
insb
movsl
dec
aad
mov
jg
add
or
pop
jb
xchg
push
call
jp
inc
push
jne
xor
mov
pop
sub
lods
xchg
xchg
sbb
sbb
mov
mov
daa
adc
adcb
mov
mov
jae
sub
enter
jp
push
xchg
cmc
add
aad
rcrb
mov
mov
sub
bound
pop
cmp
cmp
adc
inc
xchg
lcall
inc
push
add
shlb
inc
pop
mov
mov
insl
call
idivb
mov
xcrypt-ofb
cmpsl
out
or
pop
sub
add
jb
repz
push
pusha
or
addl
push
fistpl
and
xor
xchg
shlb
in
mov
shlb
out
sbb
call
ljmp
rep
aas
jbe
imul
stos
negb
and
push
cmp
lret
das
movsl
push
out
fiadds
das
rolb
clc
imul
arpl
inc
push
mov
push
cmpb
lods
push
aas
cmp
inc
rcrl
aam
into
ja
jmp
incl
popf
mov
sbb
add
enter
or
mov
int
mov
inc
pop
push
xor
scas
jb
lea
pop
mov
jecxz
cmp
xlat
lock
in
dec
cmp
push
aad
push
jo
cwtl
jnp
add
mov
pop
mov
insb
add
or
adc
sbb
negl
addr16
inc
cmp
in
dec
jle
inc
loope
push
out
pop
sahf
jae
arpl
jns
pop
jb
cmpsl
mov
adc
repnz
add
insl
pop
arpl
lea
dec
or
fs
and
xchg
sarb
subb
pop
mov
and
cmc
pop
dec
mov
xor
mov
ljmp
stos
shll
stos
call
gs
mov
inc
dec
imul
adc
pop
xchg
cli
mov
pop
fsubl
sbb
cmp
add
xchg
pop
bound
push
pushf
loope
jne
sti
icebp
repz
jb
sub
in
sbb
mulb
push
cmp
fisttpll
lds
fs
and
cmp
hlt
xchg
nop
or
out
inc
xchg
mov
push
shrb
jp
rcrb
dec
jns
sti
fwait
aam
ret
jmp
jl
dec
imulb
sbb
shll
out
sbb
lods
mov
mov
mov
add
pop
aam
inc
sbb
mov
cmp
and
mov
add
inc
dec
mov
cmp
insb
ret
mov
into
push
dec
mov
lret
fbld
gs
mov
cmpsl
into
and
out
pop
xchg
xchg
mov
pop
dec
push
xchg
jp
js
call
out
adc
xor
cs
push
cld
jmp
ds
jno,pt
cmc
mov
rorb
push
xor
push
notb
pop
push
nop
sbb
jg
scas
jg
cwtl
lret
cmp
adc
jo
lahf
aad
es
dec
mov
pusha
mov
push
hlt
mov
addl
or
arpl
notb
jnp
sbb
insl
loop
js
jge
lock
das
rcrb
cmp
sbb
ret
clc
inc
rorl
mov
and
jp
adc
loope
pop
add
aam
ljmp
enter
bnd
in
ljmp
add
addb
daa
ret
push
mov
and
outsl
jne
daa
ja
cs
dec
lret
mov
mov
shrb
fcom
lcall
mov
clc
xor
xchg
add
xchg
xchg
shll
jnp
sub
outsb
js
mov
push
mov
cmpsl
adc
popa
or
outsb
mov
in
inc
aam
mov
push
mov
sbb
sub
dec
icebp
sarl
scas
push
and
or
in
rcl
adc
je
dec
or
rcrl
sbb
test
inc
lods
icebp
push
call
xlat
shlb
pop
flds
mov
pop
imulb
scas
push
or
xorl
mov
pop
cmp
loop
xlat
ret
push
movsl
gs
cmpsb
dec
sbb
fiadds
pop
int3
movsb
in
mov
cmp
jge
xor
loop
cmpsb
fmull
adc
sbb
test
cltd
lahf
aam
pop
out
sbb
adc
lods
jne
iret
aad
lods
in
movb
xor
gs
push
xchg
dec
icebp
xor
es
add
inc
stos
cli
aaa
cmp
out
imul
mov
icebp
pop
cli
imull
das
stos
sub
xchg
mov
cld
sbb
adc
std
imul
test
dec
sub
clc
adc
filds
aas
lods
inc
sbb
push
ljmp
cmp
push
addr16
gs
test
test
pop
mov
mov
sub
push
rolb
shlb
mov
imul
jg
out
out
and
mov
pop
or
cmc
icebp
dec
out
and
jl
adc
stos
and
in
dec
test
push
nopl
pop
dec
mov
movsb
daa
xchg
pusha
sbb
push
mov
call
xor
mov
aam
push
sahf
call
or
sbb
orb
imul
imul
inc
mov
ret
lea
fstpt
pop
push
mov
mov
js
sbb
cld
aad
or
push
ljmp
fprem1
test
das
jb
jecxz
mov
and
pushf
mov
lods
popa
fbld
cwtl
and
jmp
mov
out
jne
out
int
dec
dec
aam
cmp
test
mov
or
push
sub
fildll
sbb
mov
xchg
in
test
dec
mov
jne
outsb
mov
mov
rorl
jnp
mov
outsb
test
add
dec
xchg
pop
mov
mov
push
push
nop
mov
loope
pop
push
cmpsb
xor
xchg
or
cmpsl
lahf
stos
pop
loopne
pusha
ljmp
xchg
rclb
movl
pushf
in
mov
or
addr16
pushf
jne
sub
xchg
mov
pop
js
ss
hlt
sbb
fbstp
jecxz
mov
or
and
add
mov
into
adc
hlt
cmp
mov
push
mov
les
cmpb
pop
mov
xlat
jb
cwtl
mov
mov
cmp
pop
in
dec
dec
bound
xchg
outsl
cmc
mov
pop
in
sub
pop
test
insl
cmp
fnstenv
xchg
jmp
shlb
scas
add
cmp
das
lret
mov
mov
sahf
sbb
mov
or
sub
jae
dec
je
xchg
fadds
cmp
add
cmpb
xchg
jle
push
and
sub
mov
add
jg
dec
and
iret
xor
imul
sbb
inc
and
mov
jnp
cmova
leave
jmp
or
hlt
xchg
lds
sub
std
jge
mov
jo
stos
mov
pop
mov
sbb
out
int
imul
sub
or
stos
add
xchg
xchg
jmp
or
ja
mov
fisubl
ss
add
xor
cli
jecxz
lcall
dec
push
sbb
jbe
jl
sub
std
scas
mov
mov
adc
in
and
mov
inc
push
or
popf
jnp
movsl
add
ljmp
fsubs
stos
fmul
cmovae
mov
jp
and
lret
mov
adc
xchg
lock
inc
inc
nop
xor
aaa
lcall
mov
nop
pusha
ret
sahf
mov
shll
in
in
cld
inc
sbb
fsubrs
xor
sbb
ss
enter
xchg
push
test
negb
mov
shrl
jl
push
sbb
fwait
mov
lds
int
fsubp
push
aam
pop
adc
adc
cltd
gs
ljmp
out
movsl
gs
bound
ljmp
sub
scas
push
jno
push
pop
hlt
dec
in
add
jbe
sbb
mov
xor
xchg
sbbb
addl
jg
and
test
incl
jns
aaa
cmp
nop
cmp
lret
or
mov
mov
cmp
cld
notb
adc
aas
push
cmp
push
or
inc
and
pushf
aaa
sbb
mov
fs
lret
push
mov
rclb
imulb
in
sub
arpl
adc
jbe
lods
mov
mov
shlb
mov
mov
push
fwait
inc
stos
jnp
int
test
and
mull
push
mov
xchg
or
jle
add
sahf
adc
mov
or
pop
sub
and
inc
cld
adc
dec
cltd
out
xor
lcall
repnz
push
xor
in
or
jo
js
pushf
cmp
cli
aas
ds
or
cmp
push
inc
jp
lea
dec
mov
xchg
jno
jle
arpl
shld
lcall
xor
imul
cmp
call
dec
cmp
xchg
sbb
cmp
or
dec
shll
fnsave
aas
rorb
xchg
jb
fisubs
inc
rcrb
das
jge
out
lock
das
add
dec
insl
out
mov
flds
pop
leave
sarb
xor
popf
and
cmpsl
and
loopne,pn
add
stos
sub
in
or
sar
sar
std
shll
rclb
xchg
mov
push
pusha
clc
mov
mov
loopne
cmp
mov
or
mov
out
insb
inc
lahf
aaa
mov
test
cmp
sbb
adc
push
jo
or
mov
push
cli
fwait
idivb
mov
lret
mov
xchg
xor
mov
xchg
cmpsl
insb
pushf
in
pusha
aas
pushf
push
pop
jnp
pop
mov
adc
inc
mov
jecxz
xchg
ret
or
push
in
xchg
sbb
sti
cmp
dec
cmp
shl
push
rorl
xchg
dec
cmpsl
mov
aam
sahf
int3
mov
jne
rcr
ret
sbb
sub
fidivl
sarl
js
inc
icebp
mov
add
flds
lods
je
and
mov
out
sahf
and
test
int3
in
and
pop
mov
rcrb
or
inc
in
mov
movsb
rorl
mov
es
test
dec
push
loope
push
je
movl
push
loope
insb
pop
popf
clc
aas
pop
loopne
sbb
pop
int
jno
sub
xor
and
bound
scas
push
test
mov
pop
mov
sub
jne
shrb
in
push
jle
dec
dec
add
lahf
loope
mov
pop
fwait
jl
mov
sub
add
mov
jle
ficompl
outsb
xor
ret
jo
aad
inc
insb
adc
cmp
push
bound
mov
inc
fistpll
or
inc
leave
adc
bound
gs
rcr
addb
mov
mov
cmc
stos
pop
and
ss
and
fmul
sarb
pop
sub
or
xor
sub
outsb
jge
xchg
jmp
roll
mov
mov
repz
add
xchg
add
push
xor
push
mov
sahf
imul
shrb
mov
in
imul
and
and
int3
push
mov
xchg
ret
sub
test
add
jp
dec
push
mov
push
mov
icebp
dec
mov
dec
nop
sbb
fsub
mov
push
es
sub
cmpl
iret
pop
or
push
or
mov
fwait
inc
mov
out
fcoms
or
shl
sbb
add
loop
cmp
sub
push
stc
ljmp
aad
xchg
inc
xchg
lret
xor
xor
mov
jae
lods
mov
or
jg
mov
fidivs
leave
je
and
xor
cmp
lods
test
ret
jns
adc
scas
inc
mov
call
fdivs
adc
xchg
jbe
inc
lea
std
jl
mov
cmp
int3
mov
sbb
popf
xchg
jmp
insb
xlat
push
pushf
xorl
mov
push
xchg
rcll
jne
ficoml
pop
das
pop
fwait
cmpsb
jne
xor
inc
mov
dec
xchg
out
sbb
test
mov
loope
cmpsl
cmp
lods
fs
notb
mov
fwait
sub
sub
fcompl
dec
cmpb
fstpt
add
cmpsl
pop
and
in
mov
mov
insl
fistpl
dec
pop
or
testl
fistpl
stos
leave
push
in
push
aam
fnsave
inc
dec
popf
jge
in
jmp
lret
gs
cmp
mov
inc
into
push
cmp
mov
addb
lods
stos
dec
data16
daa
inc
sbb
outsl
testl
scas
mov
imul
adc
jge
jle
or
add
es
mov
xchg
pop
and
sub
cmp
mov
mov
xchg
jecxz
xchg
sbb
faddl
cmp
lea
mov
and
mov
push
mov
fwait
sub
fsubrl
popf
jge
cltd
aaa
push
es
pop
jb
jmp
insb
rorb
and
add
in
jle
inc
pushf
inc
inc
inc
push
stos
mov
js
jmp
lock
or
sub
int3
std
adc
cmp
sbb
pop
jge
movnti
xor
out
int3
ds
jg
mov
jge
inc
mov
add
dec
repz
or
aaa
shlb
mov
inc
mov
jae
ret
out
movsl
add
pop
sbb
mov
cld
push
mov
ret
xor
aam
test
mov
jge
mov
fsubl
filds
andb
cli
insb
das
jge
mov
adc
int3
fnstcw
sub
fstpt
call
cmpsl
xlat
dec
xchg
fs
aas
cmp
insl
inc
shl
test
add
jnp
rolb
sub
rclb
xchg
or
rcl
pop
jmp
test
adc
loop
fiaddl
stos
push
xchg
xor
mov
cmp
jne
xor
push
jns
movsb
jg
sahf
popa
stc
addr16
lret
cmp
into
push
inc
xchg
nop
inc
inc
cld
out
push
out
push
inc
jns
jecxz
jl
mov
cli
pop
mov
mov
pushf
lret
push
scas
rorb
cmp
xor
adc
int
dec
lret
cwtl
fsubrl
jecxz
sbb
mov
cmp
orl
fdiv
das
fbstp
icebp
mov
jge
sub
pop
sub
movsb
out
push
mov
adc
pop
cli
lret
aas
jg
sbb
fcmovbe
cmpsl
cli
add
stos
lcall
add
js
mov
insb
dec
xor
movsb
cmpsl
mov
push
and
cmpsb
xchg
xchg
push
lahf
call
lock
popa
xchg
mov
cmp
and
repz
sub
mov
xor
jne
js
jne
jge
inc
push
push
aam
mov
fistpll
add
mov
and
ljmp
setge
rolb
or
lods
pop
fstl
or
popl
mov
out
sbb
mov
cwtl
mov
lret
outsl
push
xchg
aad
dec
push
cmp
dec
jns
js
push
outsl
adc
xchg
out
cmp
popf
fwait
int
std
fidivrs
ja
sbb
stos
jns
xchg
les
cltd
dec
or
test
sti
cltd
data16
xchg
adcl
in
xchg
pop
aam
jl
movsb
push
ss
hlt
int
adc
push
pop
int
adc
inc
jne
loopne
pop
popl
push
in
sub
pop
fxch
fldl
loop
xchg
xchg
enter
add
andb
and
push
and
scas
arpl
iret
xor
push
pop
inc
aas
cmpb
pop
dec
push
arpl
push
cmp
pop
mov
popa
mov
cltd
pop
inc
pop
icebp
repnz
rolb
add
mov
int3
stc
add
fwait
add
push
xor
ficoms
shl
pop
or
lahf
test
js
ret
popl
dec
mov
fadds
out
lcall
inc
inc
adc
rclb
cmp
jno
jecxz
mov
test
mov
outsb
imul
fildll
jecxz
outsl
stos
sub
inc
ljmp
out
insw
push
sti
add
loopne
cmpsl
mov
lahf
aam
data16
out
hlt
xlat
fcmovnbe
xlat
loopne
fcomip
mov
xor
mov
adc
imul
ret
mov
pusha
inc
or
cs
sub
jae
mov
mov
lcall
loop
push
sub
push
fld
dec
dec
sbb
ss
push
xlat
mov
pop
xchg
out
dec
bound
ljmp
jbe
mov
out
mov
mov
aad
mov
pop
addr16
jbe
sbb
sbbb
push
pop
je
or
ljmp
mov
pop
push
lods
movsl
push
jmp
mov
pop
pusha
mov
je
mov
movsb
sub
out
push
imul
push
inc
cmc
ret
mov
sub
pop
pop
cmpsb
xor
je
mov
mov
push
inc
mov
mov
and
out
aam
push
push
mov
adc
push
out
leave
xor
sub
xorl
cmpsl
mov
lret
rolb
cwtl
inc
pop
adc
mov
insl
and
push
jbe
or
jo
subl
push
cli
popa
cmpsb
jns
mov
loop
jnp
lods
mov
jmp
push
inc
rorl
add
xor
mov
sub
aaa
inc
popa
xchg
negb
and
addps
sub
lods
arpl
push
movsl
push
inc
in
in
dec
test
or
fsubrp
mov
xor
imull
fdiv
enter
stc
jge
jg
cwtl
sub
mov
mov
fdivrl
outsl
in
ret
jnp
xchg
jns
stos
pusha
idivl
xchg
mov
push
test
std
test
mov
cmp
cmp
inc
mov
sbb
ror
je
pop
loop
lds
xor
stos
cmp
jge
sbb
popf
lea
mov
jo
cmc
and
and
mov
mov
fstpl
mov
dec
stos
sub
cmp
les
dec
ss
cmc
stos
daa
sahf
mov
scas
mov
adc
dec
pop
iret
add
mov
daa
sub
sbb
sub
test
int
jnp
mov
sti
dec
xor
push
mov
mov
pop
mov
sbb
je
mov
loope
pop
jne
arpl
mov
sbb
sub
mov
incl
aam
adc
ficoml
popf
xchg
lock
jbe
ret
test
scas
test
mov
ljmp
mov
pop
sbb
ficompl
aaa
push
out
sar
mov
jo
pop
jo
xlat
xchg
ds
push
mov
fbld
iret
jo
icebp
or
mov
sbb
fcompl
imul
out
or
movsl
sub
popa
loope
fmull
testl
and
and
mov
les
xchg
ret
movsb
or
and
inc
xor
fs
jb
ss
ror
inc
insb
fsubrs
mov
pop
aad
push
scas
adc
shl
sub
xchg
roll
sbb
push
pushf
cmp
add
idiv
in
fldl
pop
out
idivl
jle
jge
divl
fs
aad
in
xor
cmp
mov
das
add
into
or
mov
das
insb
xor
repz
sti
dec
add
push
dec
loopne
jbe
sahf
ja
mov
mov
dec
fsubrl
inc
jg
lods
lods
into
sbb
cmp
pcmpeqd
hlt
cmpsb
inc
stos
push
jl
test
shrl
loop
imul
mov
in
jge
fbstp
loope
fwait
movsb
mov
jae
mov
mov
pop
out
shll
push
stos
or
out
xchg
adc
sub
lods
cltd
mov
addl
cmp
ja
data16
rclb
out
adc
pop
sub
fdivrs
lds
fidivrs
xchg
shrl
int
lods
pop
jl
push
pop
es
mov
sub
cld
leave
fucomp
into
cltd
fwait
rcrl
insl
repz
mov
mov
or
mov
fistpl
push
mov
and
jns
pop
lret
mov
sbb
fiaddl
or
repz
clc
sbb
ret
movsb
arpl
adc
fimuls
daa
insb
jns
jmp
sub
xlat
inc
fldl
insb
cmp
fimuls
and
jl
mov
jp
add
jno
mov
das
cld
or
dec
shl
jo
aaa
sbb
sub
jmp
sub
push
cwtl
sub
push
test
ret
jae
cmc
mov
sub
clc
push
cmp
jmp
in
pop
mov
out
nop
push
aaa
insl
sub
data16
jns
mov
jl
in
add
push
cmpsb
add
sbb
or
mov
ret
or
pushf
add
negl
jb
test
ror
out
int3
aad
in
xor
addr16
xor
movsl
push
loope
and
push
iret
fisttpll
sub
pop
bound
stos
or
ss
mov
inc
fiaddl
fstpl
jg
xchg
test
lret
add
aam
pop
mov
push
int3
idivl
sbb
into
and
mov
divl
dec
test
ds
popa
loopne
ss
outsl
jb
fdivl
mov
push
std
fisttps
push
mov
in
std
add
cli
inc
test
ret
jae
mov
cs
push
push
dec
jp
lcall
test
mov
or
jb
scas
rorb
into
pop
mov
and
jo
ljmp
out
cmp
add
mov
jmp
add
jne
and
fldenv
movhps
fs
scas
iret
mov
adc
scas
fnsave
sbb
push
adc
pop
and
sahf
lret
mov
and
pusha
in
sbb
into
aam
push
icebp
sub
bound
mov
push
pop
or
icebp
cmp
and
push
leave
les
push
lods
mov
addr16
mov
inc
inc
jne
je
sub
pushl
xchg
or
fldenv
mull
test
or
pop
dec
push
mov
pop
sbb
inc
xchg
loop
xchg
or
jb
test
mov
mov
xor
test
pop
iret
shrl
cmp
pop
daa
push
xor
outsb
out
pop
mov
out
mov
fstpt
xchg
popf
adc
insb
in
addl
jnp
mov
cli
ljmp
sbb
lods
cmpsb
and
test
rcrl
jbe
cli
ret
cld
dec
jns
xchg
mov
mov
mov
cltd
sbb
sbb
cltd
adc
or
inc
jle
fsqrt
out
fldenv
divb
dec
cld
xor
xor
xor
dec
mov
xchg
xchg
mov
popa
sbb
mov
jp
test
mov
mov
mov
xor
ss
loope
dec
addl
sub
mov
cs
je
and
jb
pop
jecxz
pop
fmulp
shrb
movsl
mov
in
clc
loopne
mov
icebp
lods
cld
lcall
ret
or
enter
sub
mov
test
sbb
add
xchg
mov
mov
mov
popa
xchg
pop
push
stc
fstpt
stos
xchg
mov
or
mov
popf
xchg
aad
gs
es
add
xchg
ds
cmp
pop
icebp
pop
mov
mov
int3
pop
or
cmpsl
sub
adc
xor
lcall
jge
dec
inc
imul
aam
std
inc
jno
out
mov
mov
mov
pop
jge
in
sub
popf
inc
jmp
or
adc
xchg
jno
pop
xchg
addb
fs
xchg
lods
xchg
jle
shrb
out
mov
cmpsl
push
xorl
and
out
pop
in
test
lods
cmpsl
sub
xchg
aaa
ljmp
xchg
es
in
sti
loope
sbb
cmp
pop
movsb
mov
sub
push
xchg
pop
data16
push
pop
mov
rol
push
pop
popl
loopne
ds
call
pop
add
dec
stos
popf
adc
ret
add
adc
mov
dec
pop
xor
arpl
or
pop
out
pop
popa
test
lret
pop
jno
jae
xchg
sbb
and
mov
xor
mov
lret
cmpsl
daa
fists
scas
or
or
cwtl
add
cmp
jb
pop
add
inc
push
js
adc
inc
mov
cs
add
xchg
imul
xor
pushf
mov
mov
ret
sarl
jp
mov
nop
sahf
dec
or
outsl
lods
xor
mov
and
cwtl
sbb
or
divb
ljmp
clc
mov
sub
fdivrs
clc
inc
jmp
adc
sbb
cmp
out
test
call
and
and
mov
add
sar
aas
adc
enter
fdivrs
sub
add
outsb
movsb
aaa
pop
fmuls
mov
enter
sub
insw
in
adc
test
stos
jb
add
test
nop
icebp
out
or
dec
jb
out
ljmp
and
in
insb
add
insb
or
popf
or
dec
repnz
ficompl
sub
in
lods
push
mov
adc
sub
dec
aam
mov
jne
je
leave
stos
push
jns
out
outsl
push
test
sarl
popf
mov
inc
push
mov
push
mov
pop
or
xchg
xchg
jl
cmp
mov
fsubs
cmpsb
and
cmp
jb
into
push
ss
je
pop
jbe
rol
ret
shrb
mov
and
push
aaa
push
data16
aad
xchg
adc
pop
sbb
cmp
sub
loope
sub
or
inc
ja
je
jle
mov
xchg
shlb
xor
or
sbb
cli
mov
dec
push
in
repnz
inc
out
daa
int
cmc
add
jl
addl
inc
jo
addr16
push
les
lods
fwait
cmpsb
xor
mov
adc
jg
xor
pop
and
aam
ss
add
inc
shr
movaps
fwait
shlb
mov
fcmovu
popf
sbb
shl
inc
mov
push
test
jns
arpl
pop
test
pushf
mov
lahf
sub
cmp
and
xchg
pop
inc
mov
mov
push
int
cmp
das
add
imul
jle,pn
inc
sbb
mov
in
inc
std
bound
jp
icebp
in
xchg
bound
and
lock
dec
cmp
lcall
jmp
sarb
cli
inc
call
mov
xchg
mov
mov
jns
outsb
clc
stos
lret
loope
cmpsl
push
cwtl
mov
inc
fcomps
xorl
cmpsl
sbb
push
cmpsl
into
pop
cmp
das
xchg
sahf
hlt
push
aad
inc
vandnps
and
stos
sarl
sbb
aas
ret
ffree
leave
fidivrs
jbe
out
pop
or
jne
push
sbb
int3
xor
mul
or
jo
mov
outsl
lcall
fs
push
mov
fadds
mov
mov
xor
pop
xchg
cli
mov
das
stos
pop
push
je
add
icebp
stc
ljmp
jne
test
and
jo
sbb
jecxz
loope
mov
xchg
adc
inc
pop
adc
repnz
rorl
add
out
iret
jo
xlat
inc
fwait
adc
or
jmp
dec
lcall
popf
sbb
stos
inc
iret
imul
into
les
pop
mov
push
movsb
cmp
cmp
add
mov
fdivrl
or
jle
movsb
inc
lret
jae
inc
shll
cli
adc
dec
mov
cld
stc
cmp
mov
cmpsb
sbb
aam
mov
and
xor
jbe
dec
icebp
mov
inc
mov
jmp
ret
mov
push
bnd
push
mov
cld
mov
test
and
rcll
nop
loop
jno
xor
call
xchg
daa
stc
inc
in
fucom
cmpsl
pop
add
or
add
sbb
pop
push
fdiv
jnp
mov
cmpsl
cmpsl
test
sbb
inc
or
jmp
fstpl
cs
popf
rorl
notl
adc
mov
mov
sub
cmc
xchg
stos
hlt
jge
outsb
cmc
cs
sarl
xor
jb
adc
cmp
stc
or
xchg
jl
rcr
mov
ficompl
mov
insl
aam
adc
xor
rclb
movsl
lea
out
std
dec
mov
pop
lret
int3
mov
mov
jl
daa
cld
mov
inc
dec
cmpsb
dec
aas
fisubs
cwtl
rolb
scas
xor
or
int
cld
rcr
and
push
outsb
sti
mov
cmp
xchg
arpl
in
pop
mov
mov
out
xchg
dec
push
sub
mov
sbb
cmc
push
leave
cwtl
imul
mov
aad
loop
lea
sub
inc
sub
cld
repnz
mov
fnstsw
push
cmpsb
cmc
xchg
mov
sbb
dec
adc
sub
mov
jae
and
paddusb
lock
sets
mov
out
fisubl
stos
subl
xchg
xchg
imul
ret
neg
push
cmp
setbe
pop
cmp
ret
mov
or
stc
inc
out
sbb
and
cmp
fbld
scas
cwtl
pop
imull
insl
jl
and
inc
divl
xchg
pop
mov
pop
jne
jno
pop
and
shrb
scas
cld
add
stc
sarb
xor
aad
lea
dec
adc
fs
push
sbb
sub
mov
push
push
insl
in
je
or
dec
mov
dec
scas
int
pop
jge
jmp
shr
push
jo
and
jp
or
lea
imul
notl
push
jno
lds
cmp
loopne
dec
in
fstps
cmp
data16
add
ss
jb
xchg
cmp
inc
je
and
ficomps
fstl
pop
sub
adc
fs
add
cmpsb
cmp
mov
inc
cmp
mov
push
ss
xchg
xchg
sub
ret
fs
scas
pop
cmp
inc
and
sbb
and
push
aam
mov
push
in
add
add
jl
xor
inc
adc
orl
push
movsl
das
or
adc
push
mov
rep
mov
aaa
and
sbb
rcrb
push
xor
addr16
sti
outsl
dec
xchg
mov
cmpsb
or
cmp
or
add
in
or
nop
popf
je
jbe
cltd
sub
inc
dec
mov
add
dec
es
adc
push
pop
push
fmull
es
pop
test
mov
ljmp
leave
cld
inc
pop
in
outsb
std
add
sbb
loopne
test
int
daa
stos
push
lea
mov
mov
xor
cmp
sub
fisubrs
mov
push
ds
fcoms
lods
cmp
lea
cmp
loope
lea
mov
jno
cmpsb
inc
data16
and
dec
lcall
pop
fstl
cmp
dec
mov
test
and
xchg
sbb
out
leave
icebp
enter
lret
repnz
adc
andl
and
shl
mov
imul
pop
mov
mov
scas
pop
cs
test
test
movl
in
cmpsl
sbb
jo
imul
sbb
and
ret
sbb
jmp
leave
mov
insl
pop
test
push
adc
push
push
outsb
sbb
mov
sub
loope
cwtl
xchg
shl
popf
or
inc
fnstcw
mov
jo
fbld
lods
or
or
cmpsb
dec
mov
sbb
push
rorb
jmp
out
dec
stos
fwait
sbb
inc
cmp
push
out
addr16
xor
mov
pop
sub
dec
pop
xor
fstps
xor
in
iret
mov
push
je
outsl
cs
and
ror
outsb
xchg
jmp
push
sbb
sbb
sarb
push
adc
pop
sti
enter
mov
pop
outsb
scas
lcall
xor
xchg
push
fs
adc
xorb
dec
ss
stos
push
push
jb
xor
fldcw
jp
loopne
and
test
cli
ret
jmp
fwait
push
inc
in
loop
or
mov
mov
ss
jb
jbe
addl
iret
insl
ja
push
adc
lahf
ljmp
loope
es
movsb
sbbb
clc
sbb
ds
pop
pop
sub
insb
or
mov
mov
lock
xchg
and
inc
shlb
ljmp
out
call
dec
sbb
xchg
pop
dec
adc
pop
or
add
and
cmp
dec
mov
scas
xor
push
lahf
pop
jne
cmp
insb
js
fbld
mov
mov
ds
mov
adc
add
lock
pop
fstl
xchg
xchg
lds
in
cmpsl
pop
sub
scas
icebp
push
ljmp
mov
mov
cli
mov
mov
xchg
dec
out
jae
push
pop
dec
push
lea
cmpl
pop
mov
loopne
lea
nop
push
mov
cmpsb
inc
jns
mov
or
jge
sub
mov
ret
inc
jp
loop
xchg
int3
mov
cmp
pop
xchg
out
xchg
jne
into
add
cmpsb
sub
mov
ficoml
andl
pop
dec
mov
lds
cmp
pop
fldt
add
flds
jns
mov
imul
cmpsb
and
push
xchg
dec
lock
addr16
fcmovnu
fisubs
bound
test
mov
mov
sbb
push
mov
adc
fwait
outsb
fistl
cld
add
lea
jecxz
es
cmpsb
mov
sbb
jp
sub
cmp
add
stc
scas
push
cltd
and
xor
pop
jns
xor
fwait
adc
aaa
mov
mov
add
in
mov
adc
stc
cmp
subb
movsb
xchg
lahf
je
xchg
inc
dec
sahf
xlat
iret
sub
pop
popa
mov
push
mov
aam
ffreep
jge
lds
and
pusha
out
adc
pop
int
dec
xor
fisttps
mov
fcmovnbe
push
xchg
jg
daa
xor
out
lret
aas
fildll
cli
inc
ljmp
mov
fisttpll
add
mov
add
cmp
mov
pop
ja
dec
push
mov
lods
mov
sub
add
das
push
dec
add
push
add
mov
in
ss
repz
dec
jp
and
repnz
xor
dec
push
xchg
lret
xchg
cmpsb
fildl
packsswb
pop
cmp
cld
scas
mov
lcall
jmp
sub
mov
add
ljmp
mov
mov
inc
push
gs
andb
in
fs
dec
aad
jecxz
push
fbld
repz
add
dec
jle
cmp
pop
inc
pop
lret
in
dec
xchg
mov
ret
xchg
mov
pusha
push
cld
divb
xchg
stos
rcrb
out
pop
arpl
cmc
and
test
jns
push
je
in
loope
out
xchg
xlat
push
and
loopne
stos
fnstcw
jns
push
sbb
test
inc
sbb
push
push
stos
aad
or
ret
into
nop
les
das
xor
add
out
cmc
mov
int
fsubl
inc
sub
ror
sbb
cmc
and
repnz
inc
mov
fcomps
mov
outsb
fstpl
mov
xchg
pop
popf
bnd
out
push
pop
or
cld
fsts
pop
popa
sub
outsb
int3
fs
jmp
call
scas
sbb
and
imul
mov
adc
push
setp
fsub
mov
xlat
add
add
ret
cmp
cmp
mov
add
lock
rclb
push
cmp
stos
pop
or
loope
notl
jo
sub
out
int3
inc
inc
jns
aad
loopne
aad
lahf
add
mov
sub
or
pop
loope
cltd
ss
ja
fisubrl
hlt
sub
pusha
dec
add
jb
xor
pop
ret
xchg
flds
add
ds
dec
sbb
aad
and
lods
or
mov
pushl
mov
mov
in
mov
adc
std
jne
movsl
sbb
mov
mov
lods
test
xor
add
mov
roll
sub
mov
push
adc
xchg
add
add
lcall
mov
adc
es
out
dec
push
jo
aam
push
add
ffree
xlat
data16
push
mov
je
adc
mov
mov
xchg
sub
jbe
cmc
js
sub
scas
aam
addb
adc
xchg
mov
sub
mov
pop
in
aas
insb
mov
lahf
shrl
xchg
push
ja
daa
adc
fldenv
jge
sbb
loopne
sbb
pop
mov
fsubp
daa
fstpt
xlat
adc
pop
push
inc
sbbb
loopne
add
adc
lcall
mov
cmp
jp
sbb
push
and
push
adc
movsb
mov
lcall
sub
jp
sti
sbb
jbe
hlt
dec
jne
scas
add
inc
pop
cli
cmpsb
je
enter
movsl
jb
fld
sbb
cmp
decl
xor
push
fidivrs
inc
xchg
enter
enter
ret
adc
lcall
mov
mov
enter
shrb
jmp
lret
call
push
mov
imul
add
das
mov
dec
mov
cmp
lcall
aaa
rol
ja
out
xor
mov
fmulp
cmp
mov
jle
out
push
fsubrs
mov
shl
push
jb
popa
cmp
lds
shlb
icebp
pop
dec
aam
inc
mov
loop
pop
pop
rcrb
dec
mov
cmpsl
sbb
mov
loope
test
ja
rolb
pop
jp,pn
into
popa
cmpsb
mov
xchg
jo
mov
pop
sbb
dec
loope
fmull
xchg
cli
fcoms
or
test
sub
dec
mov
decl
scas
mov
jl
scas
mov
testl
fwait
mov
jge
ret
fs
push
lock
inc
daa
les
jmp
jl
idivl
push
lcall
dec
jmp
add
fsubr
or
xchg
push
int
adc
mov
xchg
dec
std
in
jbe
arpl
dec
xchg
lcall
lds
imul
mov
btr
idiv
jle
jg
xlat
ret
lods
dec
cmp
and
push
aam
mov
push
test
and
push
in
int3
xchg
out
idivl
test
stos
lea
movsl
push
adc
pop
push
pop
push
inc
inc
push
sub
movsl
mov
cltd
test
out
jnp
gs
fisttps
sti
jge
adc
jb
mov
push
adc
out
pop
adc
add
sbbl
gs
and
sbbl
cmp
imul
je
xor
dec
sbb
add
add
add
enter
mov
rolb
push
push
aam
adc
xor
push
add
add
jl
push
stos
pop
push
push
int3
sbb
jle
popa
test
pop
mov
cmp
add
add
adcl
fdivrs
jle
in
ja
dec
sbb
lds
test
and
mov
in
dec
jo
or
or
dec
push
fs
ds
xor
shl
wrmsr
mov
and
inc
or
aam
loop
mov
cmp
shl
cmc
add
sub
pop
add
cltd
test
push
add
and
orl
lea
adc
les
mov
adc
lock
imul
cmp
frndint
fs
sbb
mov
es
bound
sahf
jb
push
fs
iret
idivl
aas
and
clc
repnz
std
out
mov
stc
jne
xlat
outsl
fstp
insl
pop
fnstsw
cmp
lret
pop
push
fisttps
les
jnp
imul
fistpl
cmpsl
sarl
stc
mov
pop
inc
jmp
pushf
aad
mov
pop
ja
arpl
clc
push
pop
cs
cld
jb
scas
stos
insb
mov
fwait
leave
push
cmp
divb
ja
mov
or
out
mov
fwait
inc
nop
in
fninit
outsl
pop
push
iret
sbb
sti
ss
dec
lcall
jmp
fdivp
and
push
fucom
xlat
pushf
mov
jle
mov
test
loope
cmp
or
or
sub
ja
shl
mov
popa
imul
xor
sbb
mov
lods
sti
imul
ficompl
std
fucom
dec
mov
rcll
mov
cmp
xchg
adc
jo
lcall
in
jecxz
jne,pn
dec
push
and
adc
stos
mov
jl
cmpsb
xchg
hlt
push
jmp
hlt
mov
mov
in
jnp
lods
inc
pop
mov
in
out
jp
mov
js
sbb
fmuls
adc
repz
mov
jp
sahf
pop
in
fcoms
cmp
dec
outsl
leave
mov
popa
das
pop
iret
cmp
les
outsb
rcll
pushf
lods
outsl
pop
icebp
push
pop
jns
pushf
out
mov
ror
pusha
js
xchg
cltd
fbld
xor
push
notl
mov
icebp
fsubrs
cwtl
jmp
sbb
fmull
lea
scas
out
scas
mov
dec
jl
enter
aam
lods
mov
xchg
mov
sahf
mov
fnstsw
mov
mov
mov
call
cli
sbb
mov
loop
add
fisubrs
jne
pop
jae
ja
sbb
scas
add
mov
jle
mov
mov
pop
iret
mov
cmpsl
outsl
das
bound
sbb
insb
fdivl
lcall
icebp
jno
cmp
jne
fmul
mov
ja
in
or
xorl
mov
lret
arpl
mov
cmpsl
fnstenv
cli
jg
mov
jbe
or
pop
or
xchg
dec
out
mov
sbb
int3
icebp
pop
and
call
stc
cmp
ljmp
rcl
jg
xlat
imul
call
or
lods
notl
mov
aad
daa
fdivr
es
fs
adc
jge
gs
pop
xor
xchg
cmpsb
sar
cmc
popa
mov
mov
not
pop
ja
cli
sbb
jbe
pop
sub
mov
ror
xor
sbb
arpl
sbb
int3
scas
stos
insl
rcr
aaa
jnp
fbld
inc
imul
shrl
sbb
lcall
mov
mov
fnstsw
cld
addr16
or
jbe
sbb
bound
idiv
fwait
mov
mul
in
jl
lret
or
jno
cmp
lret
jecxz
jecxz
jg
jge
adc
call
pop
jmp
ficompl
mov
jl
inc
jne
and
xchg
mov
shl
hlt
jl
cmc
mov
out
mov
aad
js
dec
xchg
arpl
shrl
pushf
ficoml
mull
cmp
jle
ljmp
cmp
xor
fnstsw
adc
shlb
jbe
xchg
push
ja
xchg
in
push
mov
repz
pop
xlat
mov
fdivl
xor
mov
mov
mov
xchg
stos
dec
testb
out
mov
sarl
mov
decl
pop
fnsave
lahf
mov
mov
push
sarb
in
fisttpl
mov
adc
add
xchg
xor
mov
xchg
or
fwait
cmp
mov
sub
bound
xor
les
xor
adc
cmc
inc
cli
and
xchg
ljmp
xor
pop
enter
loopne
adcb
mov
xchg
sbb
push
mov
xor
dec
mov
inc
daa
fwait
imul
addr16
xchg
add
add
mov
inc
loopne
lret
aam
sub
mov
sub
xchg
jecxz
push
test
dec
mov
loop
movsb
cmp
sbb
pop
xchg
stc
call
cltd
sbb
es
add
data16
sub
es
fcmovnb
pop
popa
sbb
outsl
xchg
cmpsl
and
push
adc
insl
sub
popa
sti
inc
xchg
outsb
push
out
rorl
cmpsl
daa
add
mov
scas
lret
into
icebp
pushf
cld
jecxz
lods
xor
add
mov
xchg
fistl
outsl
jge
mov
outsb
or
divb
push
or
fwait
mov
mov
hlt
inc
mov
fistpl
je
jnp
push
loopne
mov
scas
clc
sbb
enter
sub
es
scas
sub
xchg
repnz
push
imul
xor
bound
or
xchg
or
xor
add
sub
rcrl
pop
lea
mull
repnz
out
les
popf
add
pop
push
adc
mov
out
inc
out
icebp
sbb
pop
adc
mov
fimuls
out
std
aaa
pop
icebp
fistpll
dec
jmp
cmp
out
or
iret
push
sub
sbb
push
inc
mov
cmpsl
sbbl
cmovnp
xor
popf
fisttps
mov
pop
call
jnp
xchg
mov
mov
lods
shrl
test
movsl
push
arpl
jne
faddp
js
jmp
push
inc
fildll
divl
in
mov
call
inc
daa
mov
movsb
mov
xor
ret
mov
pop
or
cmp
lcall
add
pavgb
sti
or
lcall
out
xchg
cmp
pop
adc
in
rolb
cs
pop
xchg
cmp
inc
inc
jl
fcomps
test
out
data16
imul
rcrl
mov
mov
xor
add
or
ret
jmp
pusha
and
mov
sbb
subl
outsl
out
inc
push
mov
addr16
repnz
addr16
int3
rolb
xor
jmp
push
out
push
repnz
xor
hlt
fmuls
mov
call
push
insb
push
inc
mov
jmp
out
and
cmp
sti
out
rcll
inc
mov
enter
xchg
xor
jmp
fsts
xchg
and
fists
icebp
call
sbb
jns
sbbb
aad
mov
pop
lcall
add
xor
push
cmp
outsb
enter
aad
push
xchg
repnz
sub
test
sub
sbb
sub
and
aad
repz
and
and
xchg
jb
ret
cmc
pop
mov
dec
in
rorb
adc
dec
in
push
jbe
pop
sub
cmp
cmpb
in
ja
and
add
in
cli
mov
and
test
mov
inc
decb
pushf
ja
sbb
xlat
jns
mov
test
iret
outsb
icebp
filds
outsl
xor
mov
out
push
pop
js
imul
test
in
pop
stc
cmp
sar
shl
fidivl
arpl
mov
xchg
loope
in
mov
int3
lret
decl
into
or
pusha
jmp
sbb
decl
in
sbb
repz
sti
xchg
mov
pop
xor
movsb
pop
cmp
push
iret
repz
pop
mov
iret
mov
cwtl
hlt
xlat
sub
cltd
bswap
scas
mov
push
out
and
movsb
clc
test
jnp
cltd
jg
clc
lret
out
mov
scas
mov
pop
outsb
iret
mov
sar
or
mov
pop
ret
mov
mov
adc
and
or
cs
ror
rolb
ret
lock
jp
lret
or
loope
clc
nop
pop
dec
fwait
xchg
sub
push
dec
fxch
adc
data16
jns
fisubs
cld
mov
and
inc
rolb
and
push
and
or
and
dec
mov
push
clc
movsb
push
xor
inc
push
push
and
inc
mov
data16
fsubl
mov
and
push
mov
adc
push
pop
inc
mov
push
addl
push
stos
and
rep
jmp
insb
cmpsl
sbb
mov
xor
dec
adc
leave
mov
adc
lods
aad
subb
icebp
jmp
sub
xor
push
mov
sub
dec
out
xchg
pop
test
xchg
bound
fnstenv
mov
shrl
flds
adc
push
mov
lea
movsl
push
shrb
sbb
xchg
out
push
sub
cmc
and
sub
ljmp
mov
fstl
push
jno
push
ljmp
adc
in
push
inc
dec
jns
mov
cmp
mov
sbb
mov
and
mov
xor
dec
rol
daa
xlat
dec
push
dec
stos
cmp
cmp
ret
ja
push
sbb
sbbl
test
sbb
mov
pop
adc
leave
jbe
sub
mov
xor
call
test
sub
pop
mov
fldenv
jb
cmp
shll
notl
lcall
gs
shlb
lds
mov
add
test
push
sbb
push
pop
mov
push
in
adc
scas
xchg
js
pop
sbb
pop
cmp
xchg
imul
dec
repnz
mov
fsubr
scas
jb
adc
xor
xchg
xchg
sub
mov
cli
xchg
jbe
add
test
mov
push
out
not
popf
cli
xchg
push
push
scas
lcall
repnz
mov
sub
inc
add
popf
push
into
repnz
or
lock
outsb
cmc
icebp
in
dec
fwait
pop
and
loope
dec
lock
data16
leave
test
mov
test
addr16
inc
mov
fwait
adc
jae
and
outsl
adc
lea
ror
push
dec
dec
mov
mov
dec
lcall
add
cmp
int3
jp
je
sub
xchg
cltd
jno
imul
dec
xor
sub
xchg
adc
icebp
inc
jns
inc
xchg
sub
jne
mov
scas
push
and
mov
pop
dec
and
inc
stos
and
je
inc
test
addr16
cmpsl
lock
pop
add
clc
push
hlt
adc
imul
repnz
xchg
pop
cmp
pop
in
jb
push
shll
dec
sub
negl
cmc
push
add
leave
jnp
push
push
lret
sbb
out
mov
mov
jmp
stos
pop
cwtl
push
lcall
jns
scas
sub
jns
xchg
lret
sub
xchg
jne
inc
push
fcmove
dec
fcompl
test
sub
pop
mov
ret
xor
and
cmpsl
into
cmp
mov
add
mov
cli
push
call
adc
adc
std
in
jmp
inc
test
bswap
cmp
mov
jb
adc
insb
inc
adc
mov
stos
aad
imul
rorb
pop
lods
popa
xchg
mov
xor
adc
sbb
and
mov
ljmp
scas
and
jbe
add
add
arpl
test
cmp
mov
cmp
cmc
pop
lcall
sar
ljmp
mov
out
sti
lods
imul
fdivl
and
add
int
test
imul
pop
pop
out
push
or
mov
push
mov
xchg
out
repnz
xchg
arpl
pop
sbb
leave
frstor
dec
mov
push
fcoms
insb
sbb
mov
sti
idiv
std
out
push
test
cmp
jae
sub
jb
gs
mov
int3
mov
mov
adc
mov
in
cmp
paddusw
icebp
aas
popa
cmp
aas
sbb
sarb
inc
ficomps
fistpll
cli
or
out
lret
imul
pop
xchg
shr
jmp
mov
pop
js
sub
repz
xor
push
outsb
xor
pop
outsb
xor
negl
mov
xchg
icebp
xor
mov
in
pushf
shl
push
cmp
jne
inc
out
in
repnz
mov
cmp
mov
out
negl
adc
mov
mov
insl
in
dec
popf
mov
insl
scas
xor
push
cmp
mov
cld
lods
mov
mov
add
icebp
sti
pop
fstl
ja
mov
out
ja
pop
mov
fcompl
or
dec
push
outsl
jns
fstpt
loopne
das
xor
pop
jle
repz
repz
ficoml
push
insb
sti
jns
stos
decb
mov
clc
fucomi
jnp
mov
popf
icebp
notb
fldl
fildl
cmpsb
mov
mov
insl
cmp
cmp
in
in
pop
ds
cmp
mov
pop
imul
dec
cmp
loope
xchg
jae
sbb
cmp
repnz
sbb
test
jns
cmp
or
mov
insl
xchg
jne
jge
imul
hlt
in
mov
ss
jns
inc
mov
insl
hlt
fidivrl
popf
movsb
cmp
sub
cmp
pop
cs
xchg
fwait
out
push
and
add
int3
repz
fcoml
ja
jp
mov
cld
push
fmull
out
jno
in
into
fistpll
sbb
pop
xchg
clc
cmp
jecxz
sbb
mov
repnz
xchg
lret
mov
lahf
hlt
jne
sub
stc
cli
mov
push
add
std
sahf
ss
mov
mov
cs
mov
ljmp
jo
mov
jne
cltd
call
jmp
jp
in
icebp
jne
imulb
sub
inc
dec
std
xlat
pop
mull
jp
ret
jbe
dec
mov
lods
aaa
stc
xor
insb
pop
movsb
mov
lods
mov
adc
lods
les
daa
adc
pop
movsl
and
push
xor
mov
ds
and
arpl
sti
push
cmp
dec
adc
dec
push
cmp
test
xor
bound
xchg
mov
pop
hlt
add
xchg
mov
jae
aam
mov
add
mov
scas
sbb
clc
iret
lods
inc
add
dec
leave
fs
jmp
xchg
sbb
cmp
jg
pushf
add
div
ret
out
jmp
mov
notl
mull
cmp
xchg
out
js
add
leave
pop
aas
push
jno
mov
js
mov
inc
mov
mov
cmp
lods
mov
mov
inc
aas
fwait
adc
mov
fs
aaa
sbb
sbb
pop
push
lock
cltd
ljmp
fisubrs
aas
mov
add
jmp
sbb
testl
pop
mov
mov
fsub
daa
repz
out
aaa
cltd
xchg
faddl
cmp
pop
lcall
rol
mov
mov
jle
cmovg
notl
mov
lret
iret
mov
std
in
sti
mov
in
out
aaa
popf
nop
jge
xchg
les
mov
movzbl
xchg
fcomps
lret
stos
iret
icebp
insb
dec
pop
mov
dec
outsl
in
pop
cmc
add
jo
out
divb
pop
adc
dec
jg
mov
jae
insb
push
std
std
popf
addr16
xchg
stc
fldl
scas
std
rcl
into
pop
mov
rclb
out
dec
jbe
cli
ret
cwtl
mov
aas
xor
ja
clc
pop
fnsave
hlt
mov
fs
pop
xchg
mov
jae
sbb
into
loopne
jle
or
ds
dec
lcall
xchg
out
cwtl
cltd
movsl
stos
cld
loope
idiv
loop
mov
jle
xlat
div
cs
stc
pop
in
add
sbb
ret
mov
in
and
test
int
fwait
add
daa
mul
and
inc
cltd
jnp
dec
das
ds
jnp
sahf
insb
xchg
fsubs
lock
ljmp
cmpsb
jg
test
std
jno
xor
mov
hlt
addr16
insl
cmp
cmpsb
lcall
jno
lock
enter
shll
cs
aaa
xor
mov
pushf
je
adc
nop
push
ja
pop
sbb
outsl
je
jbe
adc
jl
dec
ja
and
in
jle
or
popa
leave
repz
std
out
sti
into
lahf
negl
loope
repz
xchg
pusha
jne
mov
sti
shl
repnz
out
jmp
pop
pop
repz
fisttpl
out
ljmp
in
aas
pop
out
jns
fiadds
in
inc
fildll
rolb
fbstp
pop
ja
pop
cmpsb
ficomps
dec
pop
cmpsl
fidivl
ret
add
mov
aam
aaa
mov
mov
cld
mov
mov
cli
test
rorb
rorl
enter
lods
cmp
bnd
cld
cmp
aam
mov
jnp
push
mov
fisubrl
push
in
negl
mov
jmp
leave
repnz
add
cli
cmp
insl
cmp
or
clc
ret
out
xchg
pop
ja
adc
aaa
jnp
jmp
mov
outsb
mov
xchg
pop
jnp
jge
add
in
aaa
pop
out
fnstenvs
lret
mov
cmpl
incl
movsb
stc
lahf
sbb
imul
cmp
mov
repz
sar
cmp
in
sti
outsb
ror
insl
mov
mov
jns
jmp
fsubrp
cmc
ja
loope
clc
pop
fcmove
mov
push
xchg
jle
aad
stc
mov
ss
aas
xchg
lock
and
inc
pop
in
push
and
mov
push
mov
pop
test
stos
xor
pop
outsl
jnp
loop
les
xchg
pop
test
dec
adc
test
xchg
and
inc
and
loop
and
or
sub
insl
addr16
fldt
notl
mov
jle
stc
sub
push
ljmp
bound
test
mov
mov
cld
icebp
or
push
or
call
adc
dec
push
adc
test
or
and
mov
push
xchg
aad
fadd
out
bts
mov
cmp
mov
jbe
movsl
fstpl
mov
fs
mov
clc
push
ds
adc
pop
mov
pop
mov
mov
push
sarl
test
or
ja
or
mov
out
lock
shll
ja
arpl
jge
jecxz
cltd
aad
push
mov
jbe
mov
loope
and
pushf
cwtl
cmp
jb
pop
je
inc
pop
out
mov
mov
lahf
mov
add
pop
std
cltd
pop
mov
mov
icebp
cmpsb
loopne
dec
push
cmp
cmp
pushf
test
or
in
mov
sub
fnsave
aad
pop
call
out
daa
push
pushf
mov
cmp
pusha
cmp
mov
mov
push
mov
pop
adc
jns
mov
neg
xchg
mov
dec
inc
inc
mov
ds
int3
sbb
pop
popf
out
rol
mov
pop
or
int3
out
sbb
aam
nop
je
js
fwait
imull
jl
mov
jne
call
adc
ds
jmp
xchg
jmp
cmpsb
clc
loopne
add
pushf
imul
sahf
fwait
cli
pop
cld
lahf
insl
ficomps
cmc
mov
dec
cli
mov
adc
push
jl
dec
fisttpll
mov
xchg
ficomps
daa
das
push
jno
push
sbb
xchg
xchg
aaa
mov
inc
cmp
mov
pop
inc
iret
xor
idivb
fdivrs
popf
mov
scas
out
cmp
and
pop
mov
push
testb
push
flds
test
adc
divl
mov
aas
mov
and
pcmpeqw
xchg
inc
and
lds
scas
call
inc
jbe
xchg
push
add
shl
cmp
loopne
popf
out
cld
adc
ss
std
add
not
call
mov
iret
jg
pop
imul
ret
cmc
jl
leave
jmp
nop
mov
pop
sahf
mov
push
test
stos
pop
lret
pop
mov
sbb
leave
xor
adc
arpl
adc
and
sarb
jns
jae
jns
aas
fcmovnu
pushf
xchg
aad
test
cmp
std
cmp
test
sub
pop
jnp
aaa
std
out
sbb
testl
loope
out
jo
push
or
in
imul
add
mov
jmp
repz
paddw
imul
mov
fs
mov
ss
test
jge
cmp
in
sub
dec
dec
repnz
pop
pop
cltd
std
add
cmpsl
test
aad
stos
push
jmp
cmc
jne
and
hlt
xchg
ficompl
popf
or
dec
movsl
push
shlb
jp
push
and
push
ds
inc
lret
leave
pop
pop
fdivrl
pop
push
shll
jns
out
jnp
inc
lds
xorl
outsb
daa
mov
jle
pop
jae
nop
loope
jnp
cmc
cwtl
call
repz
enter
aam
cmpsl
daa
mov
push
lock
dec
xor
mov
mov
jle,pn
andb
sti
mov
ffreep
jle
decl
jne
nop
xchg
js
jecxz
cmp
psrad
outsl
in
jne
jnp
aas
scas
jns
cmp
mov
mov
out
jo
leave
inc
std
shlb
cmp
imul
adc
sub
iret
pop
fildll
mov
mov
xchg
lock
sub
sbb
and
sbb
ret
pop
sbb
pop
cmp
negb
mov
jge
fsub
out
jp
jbe
out
imul
xchg
and
mov
pop
push
in
lds
stos
pop
std
aam
jge
xlat
adc
stos
jmp
pop
jge
jmp
stos
sub
int
sub
out
dec
repz
push
sti
and
pop
lods
lret
movsb
stc
negl
mov
hlt
cmp
sub
lcall
icebp
xor
pop
adc
cld
pop
idiv
scas
sbb
inc
sbb
push
out
mov
and
xor
cmc
mull
pop
and
jb
jmp
lds
jne
jge
popa
xchg
outsb
sbb
mov
mov
xor
repnz
inc
ljmp
push
notl
aas
test
das
mov
ds
testl
call
loope
loope
xchg
icebp
dec
daa
lcall
aas
pop
mov
lea
jg
sarl
call
aad
sub
jb
and
inc
mov
or
cmpsl
stos
sbb
aam
rcrb
scas
dec
inc
jb
push
add
psubd
and
dec
fisubl
shll
jae
or
jge,pt
xor
adc
sbbb
cmpsb
adc
lds
enter
lcall
out
shl
sti
adc
cmp
dec
fnsave
clc
mov
sbb
popf
jle
es
xor
outsl
lret
xor
cmp
sbb
leave
mov
out
ds
jle
mov
push
dec
in
sbb
sti
jae
mov
dec
add
pop
mov
cmp
jl
mov
mov
fwait
xchg
in
cmp
pop
pop
pop
or
dec
into
movsl
mov
mov
inc
dec
mov
mov
aaa
mov
lcall
loopne
push
popa
leave
mov
sbb
fisttps
jl
pop
pop
jbe
fcomp
clc
sbb
fdivl
xlat
add
jnp
daa
sbb
mov
fnstenv
in
int
fcmovnb
inc
lock
cwtl
out
scas
cmp
sbb
imul
cmp
pop
jp
test
iret
sbb
push
fsubrl
or
jnp
push
flds
inc
aas
icebp
dec
pop
mov
sti
dec
mov
mul
aas
out
lret
pop
test
ja
cmp
push
mov
inc
iret
add
dec
mov
daa
lcall
aas
cmpsl
jne
ja
sub
paddsb
lds
icebp
mov
push
sub
inc
mul
aas
out
lret
add
ficompl
cmp
push
sub
out
jnp
inc
in
jnp
xchg
mov
xchg
jmp
out
test
mov
cld
pop
nop
cmpsl
testb
psubusw
test
mov
mov
sub
mov
push
testb
jl
enter
popf
mov
sar
test
cmpsl
stc
pop
das
mov
fmull
in
sti
inc
scas
add
movsl
shld
sti
xchg
push
in
push
jge
test
xchg
pop
mov
push
jnp
clc
sti
adc
pmuludq
cmc
mov
mov
mov
fsubrs
mov
rcrb
xchg
jg
enter
sub
sbb
mov
repnz
push
in
jecxz
cmc
rolb
sub
pop
lock
xor
movups
fcomi
in
rsqrtps
incl
jg
sub
pop
jecxz
pop
xchg
sti
xor
pop
lret
add
call
cli
mov
out
sarb
mov
lret
inc
test
int
mov
lock
arpl
jp
pop
mov
hlt
mov
mov
cmpb
negl
imul
std
sahf
ret
xlat
insb
and
imul
into
in
and
sar
inc
popa
sub
imul
sahf
mov
in
std
outsb
mov
lret
dec
out
jne
sar
idivb
lret
dec
cld
outsb
mov
jl
jmp
jne
sar
outsl
xlat
lret
dec
cli
out
mov
xchg
lahf
hlt
mov
jge
seta
cmp
data16
xor
xor
cmp
xor
test
std
outsb
in
mov
sarb
cli
and
sarl
mov
popl
out
xsha256
cmpsb
nop
lods
push
ffreep
inc
or
sbb
pop
into
or
xchg
jne
dec
mov
pop
xchg
mov
arpl
push
mov
xchg
leave
shll
dec
test
dec
and
mov
notl
pop
int
inc
mov
sub
cmpsb
fsub
mov
out
dec
out
dec
out
dec
out
dec
loop
ja
test
into
sub
jae
test
loop
jl
and
jl
and
jl
and
inc
hlt
cmp
mov
lret
js
fdivrs
imul
insb
pop
cmp
mov
divb
rcr
fdivrs
imul
insb
pop
cmp
mov
divb
rcr
fcomps
imul
insb
dec
cmp
mov
divb
lahf
push
inc
mov
and
subb
fisttpll
sub
fwait
jno
fwait
divb
subb
outsl
cmp
adc
out
jno
mov
adc
stc
in
inc
stc
faddl
int3
inc
stc
mov
hlt
pop
test
jns
outsl
popf
xchg
fldcw
jmp
aad
sub
sarb
lods
cmp
jne
dec
into
sbb
sbb
shlb
cmp
sbb
sbb
sbb
sub
js
sbb
xchg
sbb
or
jae
sahf
outsl
or
imul
outsb
mov
loopne
insb
cmp
xchg
ret
xchg
jmp
loopne
repz
jae
aad
jb
cmpsl
mov
mov
into
data16
mov
mov
cmp
mov
mov
insl
popa
and
in
bound
nop
jns
mov
push
xchg
inc
stc
and
ljmp
lock
xor
insl
int
jp
cmp
xlat
inc
jae
gs
push
scas
roll
movsb
jns
adc
pop
xor
push
shlb
jne
fsts
call
inc
ds
or
arpl
stc
pop
or
mov
push
mov
and
mov
jge
iret
dec
int
push
pop
sub
fisttps
jns
lahf
or
mov
arpl
mov
adc
ljmp
pop
ljmp
arpl
ja
adc
fmulp
out
out
jno
cmp
lods
scas
fstpt
or
ficomps
outsb
es
push
fucomi
stc
loope
shl
outsl
sub
jg
lret
mov
sbbb
jne
pop
lret
shr
ss
addr16
push
divl
fildl
shl
xor
push
negl
fstl
dec
movsl
mov
scas
xor
scas
out
xor
mov
jnp
iret
mov
in
mov
lahf
lea
pop
imul
jle
in
clc
std
mov
ljmp
out
mov
sahf
jbe
jae
fiadds
ret
lret
fdivrs
movsl
xchg
out
mov
into
insb
ds
pop
addr16
fcmove
jo
rcrl
fwait
xor
jge
popf
jae
fildll
fwait
shrb
xchg
ljmp
outsb
out
push
notl
shll
lcall
mov
hlt
pop
mov
pop
gs
dec
cmpsl
aad
fiaddl
out
mov
xchg
shl
out
mov
fnstcw
mov
cld
iret
aas
lds
xchg
jle
scas
enter
outsl
lds
mov
notl
mov
mov
cmc
stc
aas
adcl
aaa
mov
mov
das
sub
mov
scas
dec
mov
sbb
stos
mov
mov
sbb
cwtl
jp
sbb
cmp
pop
inc
je
pop
cmp
mov
add
and
sbb
inc
adc
das
jns
add
adc
and
jle
or
and
ja
call
mov
nop
lods
mov
repz
push
enter
subb
xchg
jp
test
and
cmp
in
sub
or
add
jge
mov
and
ds
sub
mov
daa
movsl
stos
xchg
xchg
lret
mov
mov
push
jmp
daa
push
outsb
mov
fs
shrb
inc
lret
push
dec
les
andl
mov
cmpsb
dec
xor
or
and
sahf
test
and
dec
jmp
pop
lods
push
subb
pop
insb
adc
mov
fwait
or
sti
aaa
sbb
roll
incb
ret
cmpsl
or
xor
xor
dec
xlat
mov
dec
imul
mov
mov
jl
and
inc
iret
mov
leave
daa
loop
cmpsb
mov
add
sbb
and
or
cmp
mov
mov
mov
out
pop
cmp
mov
jmp
cmp
xchg
mov
mov
and
lock
loopne
xchg
mov
mov
adc
das
rcrb
mov
mov
orl
ficompl
add
out
inc
out
popa
xor
mov
enter
xchg
fst
sbb
idivl
ret
mulb
leave
mov
push
or
aas
outsb
nop
out
cmpsl
mov
in
in
dec
pop
pop
xor
pop
mul
xchg
mov
andb
test
push
das
enter
sti
push
xchg
mov
pop
cmp
and
cld
ds
pop
mov
jnp
test
sbb
push
sti
push
out
out
jae
clc
std
lds
fisubrs
jge
sti
mov
mov
das
enter
fcomp
dec
das
fstpl
mov
mov
cwtl
pop
repz
call
out
sti
jns
mulb
scas
cwtl
pop
mov
jbe
sarl
movzbl
xchg
fisubs
jno
xor
clc
jecxz
cmp
inc
repnz
out
mov
jl
leave
cwtl
cld
pop
in
ret
out
mov
jge
cmove
retw
out
sub
xor
adc
sub
add
jbe
jnp
sti
fmuls
cli
pop
test
mov
dec
jae
jle
sub
movsb
push
mov
mov
fildll
and
jle
xor
dec
inc
or
mov
stos
lock
dec
loope
or
lret
xchg
cmpsb
in
jno
mov
xchg
xlat
mov
pop
stos
or
insb
adc
andl
stos
in
and
jnp
push
sub
lods
test
rcr
xchg
xor
dec
ret
add
loopne
aam
xor
mov
iret
lahf
cmp
dec
cli
test
shl
adc
xorb
sti
jbe
rcrl
clc
jbe
mov
push
mov
jnp
and
and
pop
scas
pop
jo
lods
ja
sub
shlb
and
dec
adc
inc
inc
dec
mov
fnstenv
mov
rorl
inc
jmp
sbbb
mov
push
sub
cmpsb
sahf
aas
pop
sub
cmp
loop
aam
push
in
jmp
cs
sti
jne
sub
mov
pop
and
loope
pop
ss
xchg
dec
lods
inc
cmp
push
pop
add
jo
lods
inc
pop
xchg
push
pop
lods
cmc
add
repnz
ds
je
mov
insb
sub
sub
push
movsl
test
jo
nop
push
adc
in
adc
gs
hlt
stos
pop
add
out
in
mov
sub
out
lods
adc
jne
xchg
jnp
sub
mov
out
sbb
push
fnsave
pop
cmpsb
jge
in
mov
stc
stos
in
rcrl
cli
stos
in
loopne
adc
mov
rorl
shlb
sub
mov
or
bound
lock
lods
pop
cmc
imul
test
sbb
mov
shlb
das
sbb
int
lret
scas
loopne
cmp
ljmp
insl
shll
leave
stos
dec
adc
inc
lret
pop
test
xor
push
cwtl
out
xor
xchg
mov
or
add
fnstenv
dec
out
jmp
jae
push
dec
movsb
inc
mov
in
es
shlb
sti
out
jbe
inc
dec
mov
mov
insl
sti
xor
movsl
je
inc
or
call
movsl
aad
adc
mov
test
into
sbb
sub
idivl
fcoml
out
rolb
add
jnp,pt
push
add
es
pop
cli
cs
cmp
inc
fwait
cmp
inc
bound
movsl
stc
lods
stc
xchg
adc
mov
mov
lahf
movsb
dec
and
pop
xor
push
cmp
and
out
and
jo
add
mov
mov
jnp
std
push
and
sbb
ljmp
or
pop
adc
mov
xchg
into
cmpsb
nop
or
and
pop
int3
test
xchg
or
leave
and
imul
shlb
push
pop
cmp
pusha
add
ss
add
push
add
shr
sbb
bound
mov
enter
mov
test
hlt
gs
push
shl
rcr
test
mov
xchg
inc
cli
insb
mov
out
test
pop
cmpb
push
xchg
or
xchg
xchg
xchg
test
fdiv
push
push
stos
pop
sbb
adc
pop
mov
arpl
and
inc
xchg
lret
push
daa
mov
faddl
cs
notb
adc
loope
sub
cmp
dec
dec
aad
or
lret
adc
loope
mov
out
mov
xor
mov
xchg
inc
sub
ds
js
jns
shl
aad
stos
push
mov
sub
xchg
shlb
jle
cmp
aas
shlb
sbb
rcll
pusha
arpl
mov
mov
push
sbb
lcall
rcrl
dec
and
loopne
add
call
andl
push
push
jae,pn
mov
push
imul
or
cmp
gs
addr16
dec
lods
xchg
sub
imull
or
stos
movsb
xor
sahf
mov
push
adc
stc
push
aad
xchg
outsb
aad
add
rcll
fadds
sub
and
mov
dec
lret
enter
jbe
es
dec
sub
and
cmpb
cmpsl
cmp
ret
adc
or
outsb
or
outsl
xchg
push
out
shll
data16
popa
xlat
aaa
repz
inc
and
xor
sub
xor
mov
test
test
push
jb
jb
dec
and
xor
out
cmc
push
mov
cmc
push
out
adc
jbe
cmp
movsl
in
mov
and
push
adc
pop
mov
inc
pop
les
jne
and
sbb
cmp
stc
push
and
sbb
ret
dec
push
pop
adc
aaa
push
add
dec
ror
fmul
imul
pop
or
mov
add
or
sbbl
in
in
dec
mov
sub
ljmp
jg
mov
lret
jo
pop
mov
sbb
movsb
lock
aas
clc
sbbl
cmp
jl
jecxz
push
inc
enter
imul
and
dec
int
ret
pop
add
pop
xor
mov
xchg
push
mov
mov
mov
cli
mov
movnti
adc
inc
fsts
mov
inc
dec
pop
xchg
cmc
dec
fists
aas
jns
fs
ret
subl
jb
and
jg
add
adc
jne
push
inc
push
stc
xchg
rorl
pushf
and
sub
fs
adc
call
ljmp
dec
popa
mov
jmp
pop
or
nop
mov
cmp
push
mov
ret
cmpsl
data16
fmull
sbb
dec
mov
fwait
inc
jle
inc
jl
push
jle
gs
cmp
hlt
ret
sbbl
add
cld
xchg
icebp
xchg
movq
adcl
add
push
adc
mov
roll
lret
test
push
je
or
xchg
or
in
sub
pusha
dec
shrl
push
dec
inc
push
fwait
stos
cs
pop
call
aad
cmp
popf
pushf
clc
ljmp
adc
ljmp
mov
push
test
test
and
fdivl
rclb
mov
xchg
dec
cmp
add
inc
xchg
ss
lods
bound
ficoms
mov
lret
imul
adc
aam
mov
movsb
test
mov
inc
push
loopne
movsb
sbb
lds
addl
sbb
or
orl
vsubsd
ss
dec
pop
push
les
cli
sub
fcomps
jg
jp,pn
pop
gs
jecxz
push
ja
into
or
mov
adc
jg
out
cli
xor
daa
popf
ja
fdivp
sti
cs
xchg
cli
mov
out
in
jecxz
jbe
sub
cmpsb
out
daa
fdiv
les
sub
pop
jge
xor
stos
jns
sti
fildll
out
jmp
xchg
xlat
jne
dec
cmpsb
cli
lcall
dec
fistps
jge
dec
sbb
xor
jo
in
ret
inc
cmp
and
jo
jecxz
dec
ljmp
push
shrb
shr
arpl
xchg
inc
xchg
insl
mov
adc
lock
pop
mov
jae
jo
sbb
jmp
ret
jns
rol
lods
es
jo
div
xchg
mov
loop
es
jb
xchg
or
cmp
jbe
test
jo
xchg
pop
test
fsub
jno
in
dec
sbb
das
or
movsl
hlt
push
push
sbb
fisubrs
sub
subl
cmp
mov
mov
mov
loop
jo
push
cmp
mov
in
or
jle
cmp
addr16
shlb
fistl
shrb
out
adc
test
inc
adc
cmp
sbb
cltd
js
mov
jo
pop
mov
xchg
scas
cmp
je
cs
xchg
enter
cmp
xor
sub
nop
lret
out
sbb
fcomi
dec
or
jle
or
out
pop
loop
inc
sbb
jns
mov
push
rorb
iret
adc
sub
pusha
sahf
mov
mov
in
cmp
mov
xor
fcoml
mov
push
adc
gs
inc
dec
ret
nop
add
movsb
dec
dec
xor
adc
sbb
mov
in
imul
icebp
dec
mov
movsl
sbb
js
dec
cmp
inc
fsubrs
cmp
cmc
mov
dec
dec
stc
sub
cmp
xchg
jp
cmp
push
stos
sub
rcr
movl
jmp
mov
dec
sub
stc
int
clc
lret
jne
jno
shrl
inc
cmp
push
pop
jo
test
sub
mov
icebp
push
cmp
mov
xor
add
and
adc
push
push
jns
cs
jmp
sub
ficomps
ficoml
hlt
in
stc
push
cmp
outsb
push
mov
mov
cwtl
mov
call
pop
cmpsl
mov
fstpl
xchg
mov
adc
pop
mov
or
jmp
and
test
push
push
mov
notb
mov
pop
add
or
jbe
test
lahf
cmp
jmp
jne
sub
call
pusha
aam
sbb
inc
or
pop
aas
inc
inc
cmp
pop
push
xchg
xor
cltd
test
pop
lods
jbe
cmpsb
out
inc
pop
sti
and
cmpsb
mov
jecxz
cmp
mov
in
xchg
and
std
fstps
fcmovne
mov
cli
aam
cmp
lods
scas
jmp
dec
scas
sub
push
pop
rol
iret
test
movsl
cmpsb
ljmp
aas
cmp
out
xchg
mov
andb
xchg
enter
adc
outsl
out
push
mov
jne
xor
hlt
or
xchg
jno
pop
popa
and
in
div
imul
xchg
xchg
pop
ja
cld
mov
aam
fs
in
xor
hlt
scas
or
fsubrs
mov
add
nop
call
cmp
in
sub
xchg
and
out
sub
cli
jge
aaa
popf
sbbl
outsl
pusha
aam
outsl
cmpsb
mov
pop
lods
dec
xor
push
psubsw
out
mov
lret
pop
mov
adc
int3
or
test
xor
imul
or
les
lret
jl
sbb
cmp
pusha
nop
xor
bound
call
icebp
shrl
jl
out
dec
push
dec
xor
int
fwait
mov
loopne
cmp
sar
sti
jae
jecxz
loopne
mov
repz
andl
imul
out
out
inc
jl
cmp
xchg
cmp
stos
mov
dec
dec
push
cmp
add
iret
mov
out
insb
pop
hlt
jno
mov
ljmp
dec
inc
xlat
mov
pop
mov
sbb
sub
adc
xlat
mov
in
pop
mov
fadds
jno
in
cmp
mov
iret
mov
out
lahf
inc
sbb
push
jge
jne
jge
sub
stc
sub
ja
cli
pop
mov
call
test
inc
test
xchg
mov
repz
cli
sub
pusha
sahf
insb
filds
mov
push
pushf
int3
adc
fwait
jmp
jecxz
psrlq
adc
mov
js
idivb
pop
daa
sti
out
jle
mov
adc
ret
xorl
cli
cmp
lods
lret
fadd
adc
jno
cltd
andb
push
mov
dec
sarl
push
adc
rcll
cwtl
lret
sbb
cmp
mov
jp
cmpsb
rolb
pop
push
push
pop
cwtl
and
inc
xchg
lret
sarl
scas
int3
pop
imul
dec
mov
adc
subb
and
xor
or
andb
jo
push
pop
bound
aas
jne
notl
std
mov
dec
ret
add
andb
fimuls
mov
dec
into
movswl
mov
ss
int3
adc
imul
add
andb
and
xchg
cmpsb
sub
xor
inc
push
sbb
clc
add
fs
ds
lahf
aad
cmpsb
insl
push
addl
cld
sar
push
mov
push
repnz
mov
rcll
js
insb
mov
rol
push
outsl
lods
jp
xchg
test
aaa
pop
mov
sbb
sbb
sub
jp
aad
fists
mov
shll
pop
push
pop
push
dec
mov
ds
std
mov
mov
sub
mov
dec
pop
mov
stos
add
hlt
push
and
rcl
inc
mov
rcrl
pop
pop
push
cli
fidivrl
mov
dec
mov
out
les
aad
sub
testl
push
pop
unpckhps
aad
sub
cltd
ss
push
adc
daa
or
push
lcall
push
imul
xor
lea
fisubrl
jns
jno
aad
jbe
loope
test
xchg
mov
in
sbb
test
repnz
dec
arpl
or
push
dec
js
repnz
xchg
add
inc
in
mov
ljmp
pop
xchg
mov
push
adc
fldenv
mov
push
mov
in
cmp
call
xor
pop
push
push
adc
lea
push
mov
jmp
mov
sub
addb
sub
das
and
mov
xlat
pop
inc
lods
repnz
pop
mov
inc
add
cwtl
dec
pop
xor
or
arpl
mov
push
xchg
dec
cli
inc
mov
xor
lret
adcb
loope
mov
sahf
jge
out
lret
sub
sarl
test
popf
push
cmp
pop
out
push
sbb
mov
shlb
dec
nop
test
push
cmp
adc
inc
dec
test
xor
lret
and
push
addr16
jle
icebp
aad
gs
mov
fisubrs
fs
les
lcall
adc
push
xchg
xor
lods
push
sbb
xchg
loope
mov
callw
jp
or
mov
xor
add
push
mov
stos
adc
push
jecxz
xor
shlb
ljmp
mov
or
lods
push
lock
fwait
inc
add
lcall
jbe
jne
cld
test
push
or
and
or
es
imul
push
lret
xor
rolb
push
inc
jae
ror
push
fsubl
mov
loopne
int
ret
pop
pop
cltd
cs
add
lea
fwait
adc
and
and
out
fwait
push
and
pushf
or
clc
popf
xor
iret
push
loopne
push
sbb
xor
and
mov
inc
adc
addr16
mov
mov
sub
adc
xlat
inc
inc
bound
lock
insb
xor
push
or
jne
cmp
movsl
or
mov
mov
cmp
xchg
push
sti
and
xlat
push
and
mov
sbb
inc
movsb
fmuls
ret
push
push
or
das
fwait
rcl
rcrb
dec
mov
adc
outsb
bnd
adc
or
and
dec
mov
add
loop
push
or
mov
xchg
xor
into
mov
push
mov
sbb
arpl
es
xor
pop
push
cmp
inc
xor
lock
push
popa
pop
adcb
int
jmp
roll
pushf
mov
rcrb
inc
in
pop
adc
loope
fldt
sub
xor
std
pop
je
and
out
ret
pusha
lret
xchg
int3
push
outsl
mov
inc
adcl
jne
sub
repnz
add
mov
aad
int3
lret
notl
mov
arpl
insb
repz
jnp
push
pushf
cli
adc
and
xchg
pop
mov
push
cs
mov
add
add
push
or
and
pop
dec
sbb
sub
inc
sub
mov
ret
movb
aaa
int3
sub
add
mov
mov
or
xchg
mov
push
adc
stos
adc
cltd
dec
insb
add
jge
mov
loope
cmp
xor
mov
xor
push
cltd
sub
in
inc
and
xchg
push
mov
test
mov
dec
mov
mov
arpl
push
addr16
lods
mov
sub
mov
inc
or
inc
loop
add
rorb
mov
popa
fldenv
movsl
or
lcall
pop
loopne
add
icebp
adc
add
shrb
imul
ret
in
dec
dec
or
push
or
adc
add
sub
inc
pop
dec
jg
adc
xchg
push
stos
xchg
icebp
mov
fisttps
mov
jo
jae
iret
xchg
shlw
insb
dec
or
shll
adc
testl
sbb
push
icebp
shll
pop
jo
dec
pop
xor
popf
popf
add
dec
into
lahf
inc
or
and
cmp
add
mov
lea
mov
adc
push
cld
lods
in
jmp
scas
dec
and
adc
in
adc
lret
gs
or
sbb
inc
mov
pop
dec
cmp
xchg
out
mov
jp
imull
jo
mov
inc
out
or
cltd
test
xchg
xchg
xor
jne
fsub
jne
sbb
lss
jno
pop
pop
punpckldq
xor
dec
and
aaa
mov
push
jne
je
dec
shl
mov
mov
fdivl
cli
js
add
sub
jb
lret
adc
xchg
sub
inc
mov
icebp
fwait
mov
cwtl
insb
nop
xor
lods
pusha
push
in
test
mov
cs
loopne
or
loopne
mov
sub
lods
in
lahf
ss
aaa
xchg
dec
inc
pop
mov
inc
nop
pop
es
mov
pop
sub
ret
and
push
stos
dec
mov
adc
lcall
mov
aaa
out
xor
push
or
mov
rcll
xor
data16
clc
dec
leave
push
adc
daa
or
adc
test
test
cs
lods
sub
and
mov
mov
sub
int
dec
fs
cmp
pop
mov
test
mov
or
sahf
rolb
leave
movsl
loop
mov
adc
fimull
popf
arpl
mov
loop
rcrl
je
into
imul
sbb
mov
pushf
pusha
ret
imul
stc
adc
sbb
pop
xchg
inc
jmp
sahf
fs
imul
push
in
int
sbb
mov
xchg
and
pusha
or
out
ss
cmp
lea
cmp
inc
lock
lock
jecxz
sbb
in
dec
pop
rcl
and
mov
sub
in
in
gs
test
sub
and
sub
pop
xorl
push
jge
dec
mov
pop
xchg
sbb
lock
in
inc
cmp
and
fs
and
in
cmpl
xchg
imul
jl
pop
cwtl
imul
dec
or
push
dec
jno
insl
mov
push
jns
mov
push
js
test
in
sub
pusha
imul
fsubrs
ss
pusha
gs
lock
dec
iret
mov
mov
aaa
and
push
or
jmp
cmpsb
dec
xchg
icebp
xchg
mov
lods
into
xor
mov
sbbb
fwait
in
test
aas
pop
add
mov
pop
push
push
and
js
mov
repnz
sbb
sub
loope
or
sbb
xor
and
insb
pop
pop
xchg
push
mov
mov
and
push
and
movsb
and
addl
and
pop
movsb
or
sbb
jae
or
xor
insb
dec
cwtl
xchg
pop
and
sub
cwtl
popa
inc
lock
and
sbb
inc
daa
xchg
add
and
mov
ret
and
inc
mov
push
outsb
in
push
cmpsb
push
or
sub
pop
movsl
sub
xor
or
mov
push
nop
call
lods
mov
nop
or
add
pop
aad
dec
adc
rcll
and
aam
push
mov
es
test
jb
cmp
mov
mov
ss
xor
icebp
add
xor
js
rorl
cmpsl
ret
add
insb
pushw
jecxz
dec
out
imul
xchg
jno
int3
adc
fucom
outsb
ret
fcomps
loop
lods
xorl
xor
daa
push
das
adcl
bound
pop
jnp
inc
gs
jnp
fdivrs
lods
mov
sbb
adc
addr16
cmp
cmpsl
mov
and
cmp
cmp
or
sub
inc
cmp
aaa
add
add
mov
inc
add
rolb
xor
or
outsb
jno
pop
sbb
add
fldl
jle
cmp
sbb
mov
sbb
movl
lahf
sub
jl
movsb
cmp
sbb
int
mov
mov
sub
mov
test
mov
popf
rol
push
movsb
mov
movsl
mov
aaa
and
test
shll
jmp
pop
pop
fstpl
out
fxch
scas
mov
dec
mov
dec
mov
ds
mov
rorb
jmp
cmc
adc
cmp
dec
jns
add
or
add
xor
add
add
add
shlb
add
rorb
or
add
inc
push
out
mov
mov
sub
fistpll
sarb
out
pop
jp
mov
jb
dec
outsb
sub
ja
aaa
leave
mov
sahf
mov
lcall
sub
add
or
stc
xchg
ljmp
inc
loop
jmp
or
sub
dec
pop
dec
mov
sbb
sbb
popa
mov
pop
movsl
mov
pop
mov
out
jl
add
cmpsb
jo
push
fdiv
mov
and
sub
repnz
pop
dec
shl
stos
ror
addr16
mov
pop
xchg
fcomi
and
push
rclb
mov
pushl
sub
add
add
add
cmp
dec
cmp
lock
add
add
shrl
jge
cld
enter
pusha
notb
and
stos
cmovns
sahf
or
sbb
call
cmp
ja
lods
psrlq
mov
jl
loopne
and
and
add
or
ljmp
jo
add
adc
std
pop
lret
cmp
enter
mov
jl
add
in
mov
sar
mov
push
sarb
xor
call
push
iret
pop
xchg
push
inc
sub
ljmp
call
aas
add
clc
cmp
or
push
dec
mov
scas
push
hlt
adc
aaa
into
vmread
fdivrs
xor
push
call
pop
cmp
jecxz
rolb
shld
pushl
xchg
cli
add
cmp
add
pop
cmpsb
push
fdivs
add
sbb
add
add
jle
lock
push
fildll
add
sub
or
add
add
jp
mov
loope
test
jecxz
scas
cmpps
pop
js
loopne
push
test
inc
in
and
adc
lock
lods
jae
push
lock
sub
add
ds
shll
push
dec
sub
ret
ljmp
jge
cld
loopne
cmp
pop
lods
andps
cwtl
cmp
or
pop
cmp
ja
clc
aas
ljmp
lock
pop
mov
push
sbb
repnz
enter
lock
arpl
int3
bswap
punpckhbw
sarb
ds
cmp
cvtps2pi
pop
and
cli
xchg
pop
in
mov
pusha
push
mov
push
jp
repz
sbb
pop
orb
adc
pop
loopne
inc
in
sbb
loop
stos
cmovl
xorb
mov
push
pop
pop
xor
rcr
mov
psubw
sysret
in
mov
pusha
push
mov
push
jp
hlt
add
push
shlb
and
sbb
cmc
mov
loopne
inc
in
sbb
scas
cmpps
or
sbb
scas
push
clc
pop
inc
pop
stos
shlb
push
lock
add
inc
ljmp
sbb
aad
push
mov
sar
addr16
in
adc
loope
filds
movsb
sbb
add
cmp
lock
add
js
sbb
xor
sub
xor
add
xor
dec
cmp
scas
push
clc
adc
xor
aas
and
sbb
shl
mov
mov
or
pop
shl
jmp
mov
push
sarb
ds
cmp
andl
xor
rolb
dec
cmp
ja
out
add
pushl
sarb
sar
ljmp
insb
add
add
push
inc
sub
sar
fdivs
mov
cmp
pusha
hlt
inc
mov
mov
int
sbb
add
loopne
and
sbb
jl
call
cmc
sar
ljmp
xor
je
xchg
or
out
xor
arpl
pop
pop
sbbb
cmp
push
mov
mov
cmp
ja
cli
and
pop
ljmp
aas
and
loopne
inc
out
je
loopne
or
jns
xor
add
xchg
in
loopne
shr
fildl
mov
pop
pop
test
mov
test
rcl
xor
jo
add
inc
clc
jg
sub
jnp
testl
clc
sub
or
xor
pop
and
add
sarb
jp
aas
xor
add
sub
push
call
push
mov
cmp
cwtl
cmp
inc
jmp
pop
stos
cmovl
xorb
mov
pusha
call
out
xor
pop
loopne
shl
in
add
pop
stos
cmovl
cmpb
fiaddl
xchg
or
pop
cmp
js
out
inc
pop
sbb
pop
push
mov
rcll
fs
es
mov
pop
rcrl
hlt
push
xchg
or
testb
addr16
in
and
cmc
fistpll
shr
lods
xchg
pop
push
mov
pop
adc
nop
pop
sbb
mov
mov
shrl
loopne
dec
xlat
xor
cmp
stos
lods
adc
ret
cmp
pushf
loope
jne
shrl
daa
or
sub
cs
imul
sbb
bound
mov
mov
inc
imul
imul
jmp
and
pop
pushf
mov
cmpsb
outsl
push
xchg
cmpsb
aad
cmp
ss
lahf
cmp
pop
xchg
sbb
cmp
xor
and
sahf
movsb
and
pop
xchg
pop
inc
fistl
aad
shrb
aam
inc
imulb
jae
loop,pt
out
cmp
aaa
push
call
leave
dec
push
popf
sbb
shrl
pop
arpl
jne
push
outsl
cmp
lahf
dec
inc
jbe
mov
je
out
adc
jmp
or
cmp
imul
test
cmp
inc
fs
push
dec
shlb
ss
lcall
add
lcall
or
ja
cmp
popf
cmpsb
ret
addr16
xchg
jecxz
push
stos
sbb
mov
rcll
dec
pop
sub
jg
gs
jb
ja
xor
outsb
push
and
mov
fnstcw
scas
push
dec
sbb
je
xchg
sbbb
mov
lds
xchg
jno
mov
cmpsl
lods
aaa
sbb
push
dec
xor
cmp
and
xlat
push
ret
lcall
and
and
aam
sbbb
lea
and
xor
rcrl
into
cmpsl
push
lret
fisttps
mov
xor
pop
mov
fidivl
adc
cmpsl
sub
shl
sbb
sub
push
pushf
mov
inc
mov
mov
mov
sbb
jo
xor
sub
sub
shll
jne
out
lcall
xor
mov
xor
std
fadd
sub
and
cmp
push
pop
imul
or
adc
aaa
mov
int3
arpl
sbb
pop
insl
xor
and
outsb
gs
push
out
enter
pushf
fnstcw
push
pop
test
popa
in
bound
imul
lea
jb
mov
js
fwait
push
adc
sub
rclb
cmp
cmpsb
fwait
and
lcall
adc
sbb
lea
mov
push
sbb
push
stc
jecxz
sbb
shr
popa
cmp
fadd
cmpsl
push
push
cmpsl
shlb
mov
or
je
int3
jecxz
cmp
mov
mov
cmp
fs
out
mov
addb
je
dec
jb
bound
cmp
rolb
dec
sub
notb
stos
scas
xchg
or
mov
fcoml
iret
push
mov
push
push
push
push
stos
and
mov
and
xor
or
cmp
and
sub
dec
push
shrw
test
push
outsl
dec
mov
stc
js
cld
negb
sub
cmp
adc
xchg
mov
push
jg
dec
int
loope
xchg
rclb
popa
mov
negb
adc
jge
mov
cs
ss
pop
push
xor
mov
adc
push
cmp
psrlq
insb
lahf
aas
sub
leave
pop
mov
mov
push
sbb
lret
xlat
jmp
rcl
test
xor
in
pushf
mov
mov
pop
sub
mov
sub
insb
mov
cmpsl
sub
fidivl
xchg
dec
lea
sub
test
and
cli
mov
inc
mov
sbb
jg
arpl
xor
inc
pop
dec
mov
inc
jnp
jne
jno
adc
call
or
cmpsl
sbb
xor
rolb
stos
mov
xchg
xor
jns
and
push
sbb
jb
push
outsb
sub
mov
cmpsl
sub
push
insl
mov
and
mov
adc
push
mov
adc
insl
pop
scas
inc
lret
fwait
push
inc
inc
and
es
bound
sbb
std
sbb
mov
xchg
dec
data16
repz
add
inc
xor
cmp
imul
pop
loop
mov
bound
push
jb
mov
xor
fwait
pop
ljmp
ja
aas
push
cmp
pop
mov
mov
pop
xchg
mov
lea
rclb
cmp
and
xlat
fcom
push
punpckldq
mov
js
cmpsl
jne
xchg
dec
push
inc
jne
test
cwtl
push
push
adc
stos
pop
jbe
xchg
insb
bound
sub
cvtpi2ps
inc
insl
push
lcall
push
xchg
stc
cld
test
cmp
jp
cwtl
push
stos
push
lret
mov
jmp
push
je
push
sbb
jmp
fsubs
jno
mov
stos
cmp
mov
in
cmpsb
scas
out
pushf
mov
cmp
dec
push
lds
repnz
stos
mov
leave
pop
out
jno
sub
popf
sub
int3
mov
adc
loop
ss
mov
lcall
push
imul
std
daa
ja
ja
decl
mov
mov
insb
sarl
fsts
jecxz
inc
mov
xchg
pop
push
adc
mov
xchg
enter
into
sahf
movsl
adcl
mov
fwait
push
scas
mov
push
enter
mov
es
ljmp
shrb
je
inc
fldl
sbb
cmp
call
cwtl
rcrl
cmp
mov
rcr
test
xchg
mov
mov
mov
int3
lcall
ss
sbb
cmp
lods
push
add
xchg
call
jbe
sub
cmp
pop
bound
mov
inc
push
sub
xor
sub
icebp
call
sub
movsl
loop
inc
test
or
add
xchg
and
call
jp
mov
xchg
mov
jb
sub
or
cltd
cmp
hlt
adc
mov
mov
sub
dec
mov
lods
test
cmp
mov
mov
das
insb
inc
fldl
mov
cmp
sub
sub
jecxz
std
cmp
mov
rcrl
xchg
pop
loope
cs
push
cltd
test
addr16
mov
push
in
or
push
ds
add
aad
mov
inc
sbb
stos
mov
hlt
sub
xchg
ds
push
loop
stos
or
cmp
lods
mov
cmp
or
xchg
fimull
test
cmp
push
xchg
mov
lds
lods
xchg
jge
pop
inc
inc
out
shlb
jo
push
lret
cld
xor
sbb
or
cmpsb
in
lcall
push
in
jl
mov
xchg
sbb
pop
les
mov
push
sbb
pop
cli
inc
xchg
call
push
leave
aam
fimuls
pop
push
dec
push
jb
and
xor
jmp
in
popa
lcall
imul
test
push
inc
test
lea
pushf
stc
into
mov
daa
in
push
push
or
push
test
int
or
mov
push
sbb
cmp
xchg
repz
popa
out
jne
xor
out
dec
adc
dec
xchg
shrl
push
jb
in
gs
mov
inc
test
jl
je
repz
jo
jp
and
jl
mov
test
jmp
les
je
fwait
mov
iret
push
daa
and
xor
andl
rep
xor
sbb
xchg
jmp
mov
andl
cs
fwait
push
jne
stc
sbb
jmp
mov
xor
pop
mov
pop
and
dec
loope
enter
sbb
les
pop
cltd
jae
fwait
xchg
sub
stc
psrad
inc
inc
addb
push
sub
aam
gs
repz
cmp
mov
push
in
cmp
mov
insb
inc
or
mov
jnp
pop
movsl
daa
lea
outsb
jns
lock
jecxz
popa
push
jmp
push
mov
push
sub
xor
je
js
ja
adc
push
mov
outsb
xchg
sbb
out
in
insb
or
je
dec
int3
int3
xchg
jne
push
dec
testb
movl
int
pusha
pushf
adc
sub
jo
mov
push
push
sub
jecxz
pushf
outsb
push
pop
xchg
arpl
pop
insl
test
pop
push
push
dec
lods
cmp
adc
pop
rorl
inc
xchg
sub
int
gs
xchg
and
imul
jns
fisubl
sysenter
cmp
comiss
push
mov
sbb
and
in
sbb
xor
mov
in
dec
pop
mov
jno
das
sub
lret
inc
pop
shlb
push
sbb
mov
les
cmc
repnz
test
sbbb
jo
inc
sub
push
add
mov
mov
xchg
mov
and
pop
ljmp
inc
push
xor
sub
jge
cmp
lods
jecxz
insl
sbb
lret
inc
shll
mov
in
fisttpll
push
out
mov
mov
pop
dec
sbb
data16
or
inc
data16
mov
or
push
cmpl
mov
repz
mov
ss
or
popa
sub
mov
xchg
ret
fsubrp
in
int3
rcl
popf
in
cmpsb
xchg
imul
jb
adc
push
lea
mov
xor
adc
sub
lods
mov
imul
cmp
inc
mov
movsl
dec
inc
ds
push
push
mov
test
fs
jno
cmp
xor
jae
aad
test
inc
lods
adc
repz
adc
dec
push
aam
popa
pushf
cmpsb
cwtl
rcll
lret
or
negb
sub
xchg
leave
in
or
add
xchg
movsb
stc
adc
xor
cwtl
icebp
jecxz
pop
icebp
shr
push
cltd
mov
or
jl
push
mov
and
in
fisttpll
mov
fistl
in
sbb
pop
mov
push
rcrl
ljmp
dec
push
xchg
insl
jb
mov
shrb
push
push
mov
fwait
cwtl
lret
jmp
sub
orl
stc
stc
es
mov
fisubrl
ds
mov
and
push
in
insl
fsubp
xchg
xorps
mov
jne
push
ljmp
push
insl
lea
in
jae
push
sub
pop
test
cmc
jb
cmpsl
xchg
cmpsl
xchg
add
fdivrs
ret
adc
adc
sbb
int3
movsl
les
stos
sahf
je
xchg
jecxz
stc
insb
or
mov
subl
clc
andps
hlt
adc
pop
xchg
sti
mulps
push
repnz
mov
gs
mov
ja
mov
xor
iret
xchg
push
fwait
aaa
push
bnd
enter
bound
lds
lea
cld
cwtl
movsl
ljmp
sub
mov
jle
sub
sub
mov
loop
cmc
jno
repz
lods
push
jmp
xchg
nop
testb
push
sti
xor
adc
test
mov
sub
mov
bound
jno
cli
fsubs
js
pushl
sub
mov
lds
int3
lds
cli
mov
scas
mov
lcall
cmpsb
sub
push
cld
sub
clc
fsubs
leave
mov
loop
leave
lds
jmp
xchg
loop
xchg
in
xchg
cld
fsubs
push
adc
xor
ljmp
push
xchg
xchg
jne
cmpsb
sub
sub
repnz
or
stc
insl
cld
push
repnz
adc
or
sub
js
cld
push
cld
sub
clc
fsubs
iret
outsl
loop
loope
xchg
sti
xlat
pop
xchg
sti
mov
jb
shr
pop
and
hlt
or
xchg
fwait
call
jle
js
mov
or
ljmp
add
lret
arpl
add
mov
fistl
icebp
sbb
pop
jae
in
or
out
adc
data16
mov
iret
fstl
jmp
loopne
pop
inc
xlat
add
mov
lret
push
scas
inc
jnp
jnp
out
lock
inc
lea
jmp
xlat
iret
pop
xchg
lea
pop
cmp
and
inc
dec
xchg
fnstsw
xor
sub
aad
leave
pop
push
xor
ja
cmp
call
pop
jb
mov
jnp
sub
cli
lahf
or
jecxz
int
aas
out
out
jmp
lret
push
push
xchg
test
sbb
pop
inc
fs
std
enter
pop
mov
cli
jmp
jp
neg
mov
xchg
and
hlt
cmpsl
test
jmp
jle
int
scas
adc
aad
and
mov
sbb
loopne
jbe
aas
jns
js
pop
cld
xlat
notl
sbb
and
aaa
add
lods
movsl
jmp
aas
pop
mov
std
mov
xchg
and
adc
dec
fidivs
popa
sbb
pop
jmp
fs
cli
gs
sub
lods
add
popa
gs
lock
aaa
mov
cli
jg
sub
fildl
dec
cmp
and
add
pop
xchg
mov
pop
call
rolb
xchg
push
cmpb
and
icebp
push
mov
clc
sar
call
ret
rolb
sbb
call
mov
pcmpeqb
cwtl
cmp
push
pop
lods
rclb
mov
mov
push
mov
cmp
and
mov
je
sbb
and
cmc
push
mov
xchg
mov
cwtl
jb,pn
loopne
inc
call
out
jae
xchg
mov
inc
add
mov
pop
das
fiadds
adc
lahf
sbb
pop
cld
pop
dec
pop
psllw
sub
jge
pop
fistpll
sub
punpcklbw
mov
sbbb
cmp
jl
in
jg
lahf
mov
js
loopne
sub
je
rcrl
pop
xor
cmpb
rcr
pmullw
sbb
mov
pop
in
mov
jo
sbb
ds
fwait
repz
lahf
dec
jge
add
cmpl
sub
add
adcl
pop
js
mov
aad
cli
add
shr
repz
pop
mov
push
fdivrs
loopne
cmp
add
pop
mov
js
sarl
add
rolb
cmp
push
pop
jle
lock
inc
pop
psrad
psrld
rorb
into
bswap
pcmpeqb
fdivrs
pop
loop
pop
cmc
fistps
test
and
fldl
xlat
loop
xlat
pop
jbe
adc
je
adc
lahf
xchg
ds
enter
add
cmp
clc
jg
lock
jle
jnp
test
mov
cld
xor
call
fstps
xchg
jp
test
insl
jecxz
lahf
mov
loope
xor
mov
lea
int
and
stc
mov
pop
push
add
insb
mov
dec
jne
out
sub
ja
sbb
lods
ret
pop
xchg
iret
addr16
fcmovbe
pop
push
in
fisubrs
cwtl
jge
inc
outsl
rcll
scas
scas
xchg
xchg
cltd
lcall
mov
test
sbb
int
pop
sub
loope
lret
daa
test
aad
lahf
push
je
push
xchg
mov
data16
inc
fcmovbe
fcmovb
insb
sbb
mov
mov
and
jb
in
mov
int
xor
pusha
sbb
data16
aam
adcb
js
fcmovnbe
mov
mov
pop
xor
das
fidivs
cmc
xchg
stos
fstps
pop
jno
es
dec
mov
sbb
adc
test
mov
cmpsb
mov
mov
and
sbb
in
fnstcw
mov
out
mov
shrd
mov
divl
lahf
pop
fstp
lods
adc
out
je
fdivrl
repz
cld
sar
repnz
pop
in
stos
xor
popl
pop
imul
bound
ret
or
dec
roll
mov
push
sti
enter
rcr
dec
jmp
push
or
sbbl
test
sti
xlat
and
rorb
push
in
repnz
idivl
push
cmp
pop
xor
fbstp
jo
neg
test
pop
testl
sub
xchg
pop
gs
popf
enter
in
mov
cs
inc
fadds
mov
push
xor
push
mov
ret
sub
aad
lea
xchg
aam
pop
jl
out
mov
jg
fdivrs
stos
jmp
loopne
mov
dec
adc
inc
pop
xor
mov
lock
or
lret
fiadds
jmp
or
movsb
sub
sbb
popa
mov
xor
sarl
jb
jmp
stc
mov
add
cmp
pop
pop
mov
jb
xor
imul
call
xor
insl
xchg
icebp
jmp
repnz
loopne
or
es
mov
xchg
mov
mov
pop
adc
mov
xor
dec
pop
aas
xor
pop
das
xor
xor
movsl
pop
movsl
decb
jmp
push
shll
retw
xlat
and
mov
or
hlt
fdiv
scas
and
in
in
mov
fs
cmp
lods
pop
sbb
push
in
xchg
test
repnz
fidivl
mov
out
std
sti
mov
xchg
loop
jge
or
sbb
jl
leave
sahf
rorb
shlb
fnstenv
push
ss
or
outsb
int
xchg
in
pop
jl
imul
inc
mov
mov
sti
dec
jmp
xchg
jg
add
aad
out
cmp
xchg
mov
fistpl
test
xchg
scas
sti
imull
addl
mov
sub
jnp
cmc
cmc
idivb
outsl
fimuls
insb
test
in
loop
sbb
fsubl
pop
or
cli
sti
jl
out
out
out
and
mov
pop
out
or
mov
out
insb
test
lret
test
xchg
es
imul
push
jae
mov
popa
shlb
nop
pop
mov
lock
das
jle
loope
pop
outsb
les
ret
push
add
or
fwait
jg
and
sbb
xor
mov
lret
mov
xchg
lcall
mov
cltd
xchg
dec
push
pop
sub
cmp
mov
xchg
lahf
test
lahf
or
pop
adc
shrb
add
dec
mov
imul
inc
dec
ror
fsubrl
rolb
jb
xor
pop
sbb
sub
mov
aad
jno
or
rcll
pusha
xor
loopne
jg
jns
push
inc
xchg
arpl
xchg
cmc
mov
int
fs
test
or
fsubrl
in
in
mov
sbb
sbb
sub
lea
xlat
jle
ret
pop
arpl
push
and
subb
jno
inc
adc
in
sbb
jg
gs
jecxz
push
icebp
loop
pop
jmp
xchg
push
movsb
scas
movsb
mov
mov
sub
sbb
and
ret
mov
in
xchg
xchg
mov
sub
jno
ds
push
lcall
xchg
jecxz
xchg
repnz
mov
fists
std
xchg
jle
add
ljmp
mov
outsl
xchg
mov
mov
mov
mov
into
jecxz
mov
mov
dec
test
push
jne
pop
lcall
out
insl
cmp
fidivrl
ja
mov
mov
fs
insb
mov
add
pop
push
scas
cs
push
dec
push
or
jmp
pop
xchg
pop
xchg
xchg
xor
js
mov
dec
out
push
imul
add
add
xchg
cmp
outsb
add
icebp
inc
pop
aas
mov
push
and
dec
sbb
cmp
mov
mov
mov
and
jno
dec
fistpll
int
jns
aaa
decb
mov
and
push
jo
leave
mov
pop
aam
hlt
sub
xchg
sbb
mov
lahf
pop
pop
cld
or
add
je
stos
and
fisttpl
add
xchg
push
mov
push
jge
mov
push
insl
fnstcw
dec
aad
fistl
mov
push
mov
cs
xchg
xchg
xchg
scas
cwtl
adc
mov
aas
adc
loope
push
test
mov
xor
ret
sub
pop
fidivs
shlb
push
push
adc
pushf
ljmp
sub
mov
mov
fdivs
inc
inc
sub
mov
or
mov
pop
mov
lret
cmc
and
cmp
popa
cmpsl
lcall
stos
ljmp
ja
sti
insl
sub
dec
enter
rcrb
jns
dec
cmpsb
popf
arpl
mov
loop
pop
mov
ret
fstps
mov
mov
ss
sub
adc
fidivrs
push
iret
or
push
cmp
jmp
push
pop
clc
out
idivb
es
and
add
mov
ret
femms
daa
inc
divl
mov
clc
nop
hlt
sub
xor
dec
insl
push
sub
xchg
mov
mov
xchg
sub
lahf
js
insb
jle,pt
add
subl
dec
roll
pop
clc
arpl
in
mov
int
neg
cmp
sbb
add
out
clc
xchg
xor
mov
jnp
push
mov
hlt
dec
push
popf
sub
js
sub
mov
jo
jle
js
cmp
cmc
scas
lahf
rclb
outsb
cld
push
xchg
pusha
push
fs
stc
in
mov
ret
sub
repnz
cwtl
push
insl
daa
sbb
orl
sbb
stos
insl
mov
xchg
movsl
xor
sbb
pusha
xchg
ds
push
inc
dec
cltd
jecxz
out
push
sbb
sbb
dec
loopne
repz
test
push
sub
xchg
iret
daa
adc
cmpsb
iret
in
pop
cs
icebp
cwtl
add
mov
xor
jg
xor
pop
fbld
cli
mov
jo
pop
and
sub
mov
into
jae
lods
xlat
aas
imul
repz
or
xorl
xchg
xor
fidivrs
cmp
push
ficoms
jno
mov
aaa
adc
shlb
iret
scas
jb
addr16
xlat
mov
lea
addr16
leave
aam
int3
popf
cmp
ds
mov
cli
iret
adc
mov
inc
stos
or
and
cmp
adc
call
shl
xchg
or
xchg
xor
bound
add
aaa
stos
out
dec
shrb
iret
mov
cmp
sub
lcall
fcmovne
das
dec
std
cwtl
xchg
pop
push
or
mov
lock
pop
jae
push
pushl
inc
or
jp
mov
mov
popa
inc
ficoml
jp
push
loop
dec
mov
xchg
sti
rorl
pop
mov
pop
jmp
jno
lahf
sbbl
das
jnp
adc
dec
inc
pop
lock
xlat
sub
imul
movsb
cmp
xchg
lcall
mov
pop
pop
dec
lcall
xlat
or
cmp
mov
push
cmp
pop
inc
mull
fst
subb
push
bnd
adc
fimull
push
leave
mov
clc
mov
or
xlat
lods
pop
adc
push
jne
sahf
mov
in
jnp
cmp
scas
mov
scas
jg
imul
xchg
push
icebp
mov
mov
movsl
mov
mov
xchg
xchg
xlat
cmp
ja
insl
insb
jne
cli
mov
jle
cmp
jnp
fiaddl
out
imul
shlb
xchg
sub
lods
jp
pop
enter
cltd
mov
daa
push
out
adc
stos
out
ljmp
push
and
xor
ficoml
jnp
push
cli
fistpl
in
scas
repz
xchg
sbb
sti
out
mov
lds
add
por
pop
xchg
js
mov
int3
mov
jmp
scas
outsb
mov
fucom
imulb
stos
jg
jb
push
out
jnp
and
lahf
cwtl
and
ss
cmp
inc
mov
int3
jge
xor
stc
push
call
mulb
arpl
icebp
lret
xchg
sub
cmp
je
lds
in
movsb
dec
sub
xchg
fwait
cltd
mov
mov
stos
cmc
mov
ljmp
gs
jns
mov
push
mov
mov
jle
bound
shll
dec
adc
push
fimuls
push
cmp
into
jb
mov
shll
rcrl
dec
jp
push
pop
adc
lret
lret
ss
mov
sbb
mov
xor
out
push
sub
mov
dec
push
lods
std
jecxz
out
xchg
jge
aam
push
mov
outsb
popf
pushf
test
xorl
outsb
addr16
rcl
add
mov
cmpsl
shl
ljmp
loopne
or
in
arpl
in
lods
mov
inc
test
jb
out
insb
push
xor
bnd
cmp
jle
mov
dec
loop
add
out
pop
dec
sahf
aad
push
dec
and
adcb
xchg
insl
int3
daa
jb
int
push
sbb
stc
gs
outsl
push
js
mov
jb
ret
pop
icebp
cmp
pop
push
jp
xchg
xchg
out
xchg
jecxz
xor
mov
jnp
xor
mov
jno
jno
lea
aaa
inc
pop
cli
imul
cmp
repnz
in
dec
mov
mov
loope
xor
jl
insb
sbb
dec
sub
jge
rcrl
cmc
mov
popa
je
sahf
xchg
cli
push
dec
push
fildl
or
stos
xchg
dec
and
adc
push
sti
pop
fsubs
push
mov
mov
or
ja
rorl
ja
hlt
call
dec
pop
sar
scas
and
jl
ss
mov
sbb
mov
fwait
lock
pop
fmuls
push
and
mov
sarl
push
jne
js
aas
and
xor
mov
stos
mov
shll
loopne
push
mov
movb
push
stos
mov
xchg
and
mov
pop
inc
cmpsl
rclb
inc
imul
cltd
push
dec
lock
rcl
movsl
cmp
movsl
mov
data16
jae
mov
sbb
loop
jge
or
pop
xor
cmpsl
in
adc
rcl
sub
lds
out
std
add
test
xchg
push
jecxz
jp
aad
ficomps
and
fldpi
inc
or
ret
iret
rcll
out
jg
or
repnz
sti
jns
aas
or
and
imul
xchg
xchg
xchg
std
pop
insl
dec
popf
dec
cmpsb
pop
repz
mov
decl
pop
jne
aad
pop
mov
jns
push
iret
dec
jne
ret
add
orl
xor
stos
and
fwait
sbb
mov
les
sbb
scas
popf
rcll
mov
dec
aas
popf
jg
aam
xchg
stos
mov
aaa
cmp
sub
repnz
in
fsts
jl
scas
mov
adc
cwtl
pop
repnz
testl
or
mov
loopne
aas
sbb
call
test
xchg
orb
nop
mov
scas
out
fs
jg
mov
outsb
and
mov
sti
ljmp
or
aaa
and
and
out
int3
xchg
in
leave
mov
xchg
rcll
loop
and
push
cmp
aas
or
pop
pmullw
mov
jmp
clc
jbe
cltd
pop
mov
int
rcrl
roll
cmc
icebp
jns
in
cld
jns
jns
dec
push
hlt
adc
addr16
stos
pop
dec
call
jecxz
jp
mov
dec
sub
pop
xchg
dec
daa
pop
popa
sahf
push
cs
in
es
or
xchg
xlat
fdivrl
movb
jp
jae
out
rclb
lahf
push
inc
mov
sbb
pop
imul
mov
sbb
call
stc
pushf
int3
lahf
cmp
pop
add
sub
sub
jp
adc
dec
daa
hlt
out
push
mov
mov
xchg
repz
mov
mov
out
pushf
dec
insl
out
and
or
lods
je
mov
scas
jnp
push
int3
mov
cwtl
rolb
sub
scas
into
sub
loop
fdivs
ds
rorb
xchg
and
cmpsl
out
or
inc
xor
ret
adc
test
adc
gs
xchg
push
inc
fisubl
repz
mov
add
call
adc
xchg
fs
out
jbe
loopne
dec
mov
in
fwait
lret
leave
adc
insb
mov
jge
gs
popl
ret
lods
lods
js
fildl
fs
sub
cmpb
or
pop
es
cmpsl
mov
adc
cmp
lods
push
popf
out
sub
or
sbb
mov
sbb
idivb
nop
movsl
rcrb
in
cmp
xchg
push
push
push
js
push
pop
mov
xor
add
int3
push
sarb
sbb
adc
gs
mov
loope
dec
loope
dec
xchg
fsubrs
dec
in
int3
lret
xor
cmpsl
cs
icebp
fs
nop
mov
mov
out
cmp
outsb
mov
cmpsb
minps
pop
inc
pop
cmpsb
push
jae
scas
sbb
lds
jle
pop
add
push
icebp
fwait
sub
dec
scas
inc
mov
mov
xor
jnp
pop
mov
cmp
mov
xlat
jb
or
fdivs
addr16
jle
gs
outsl
xor
std
adc
dec
repnz
mov
push
fstp
adc
pushf
pop
lods
insb
lea
fnstcw
in
mov
clc
insb
xchg
in
pop
and
std
fwait
out
mov
cmp
ret
out
cmp
jbe
enter
adc
push
jbe
adc
cmpsl
xor
rorb
std
ret
clc
sub
gs
and
pop
sti
dec
pop
mov
xchg
test
push
sub
or
daa
fdivrs
scas
pop
jecxz
mov
pop
std
cmp
mov
daa
insb
sub
fs
pushf
int3
ljmp
fstl
mov
test
jmp
das
js
mov
dec
dec
aaa
scas
pop
push
lcall
sbb
out
pslld
flds
and
jmp
xchg
jae
dec
nop
fdivrl
jle
icebp
dec
ret
sarl
jmp
sub
rolb
push
clc
sti
test
jl,pt
lock
fstps
movsb
dec
nop
add
cmp
pop
test
cmc
mov
mov
insb
xchg
mov
xchg
xchg
push
push
mov
leave
inc
es
popf
xchg
pop
mov
or
fldcw
decb
mov
sub
hlt
shrb
sbb
in
jmp
outsl
jo
ds
inc
mov
jg
mov
stos
ljmp
popa
popf
mov
int3
cmp
ss
es
mov
xor
repz
adcb
mov
stos
inc
xorl
dec
arpl
adc
mov
mov
stc
cltd
scas
cmp
or
add
pop
pop
pop
cmpl
cmp
in
dec
xchg
ss
mov
adc
inc
mov
mov
xor
jbe
push
xor
sti
sbb
cmp
jae
jge
insl
jmp
gs
int3
clc
xchg
mov
repz
testl
out
jle
aam
push
pop
ljmp
in
fldcw
insb
xchg
pop
xor
push
js
jo
mov
cli
les
ret
xchg
xchg
cmp
ror
adc
adc
pop
fisubl
into
adc
pop
out
pop
ds
fsubrs
xchg
push
stos
in
mov
xor
aas
scas
std
repnz
out
mov
dec
pop
mov
imul
lock
inc
call
or
sub
imul
out
enter
xchg
js
iret
std
jmp
jecxz
int
out
fnstenv
mov
dec
shr
inc
aam
mov
imul
fsub
mov
pop
mov
test
jno
lahf
inc
add
or
adc
ss
add
syscall
outsl
pop
test
pop
out
push
jne
mov
xor
or
lahf
jns
cld
into
push
iretw
fwait
int3
cli
pop
dec
dec
outsl
decl
and
xchg
scas
nop
enter
scas
ret
shrl
movsl
outsb
in
push
xchg
xlat
add
jns
adc
lahf
xchg
inc
jne
repz
cld
pushf
popf
sbb
push
lods
cmp
jle
xlat
jmp
xor
xchg
lahf
inc
push
sti
cmp
sti
cmpsb
ret
daa
and
sub
into
adc
xchg
xlat
loope
push
xor
clc
enter
xor
mov
stc
stos
jg
cmpsb
int3
mov
fidivrs
daa
jbe
dec
mov
es
jmp
cmc
mov
jp
and
int3
fwait
or
jecxz
cld
insb
imul
into
lahf
out
mov
jnp
cmp
cmc
mov
mov
dec
inc
int3
mov
jne
cli
imul
dec
jnp
inc
das
xchg
popf
dec
jnp
cmp
lret
mov
out
sub
fadd
xor
sub
sti
mov
dec
xchg
push
incl
gs
jns
ja
jns
and
pop
mov
fst
stos
jmp
mov
ja
ljmp
fxch
cmp
pop
roll
xchg
or
rcll
pusha
out
cld
push
jp
aas
frstor
mov
and
fists
mov
mov
lods
adc
add
mov
icebp
faddl
lcall
jle
out
bound
loop
or
lds
movsb
jle
cmpsl
cld
fistpl
stc
mov
xlat
out
call
mov
add
filds
inc
jge
jp
jnp
das
cmpsb
fldenv
in
sbb
lock
pop
pop
jle
stc
pop
sar
dec
lret
lcall
lret
push
or
mov
shrl
ja
pushf
lahf
xchg
cmp
xchg
sub
jge
out
sbb
xor
mov
jb
outsb
ljmp
dec
jp
sahf
stos
jg
xchg
xchg
aam
testb
fmuls
mov
or
out
mov
mov
and
push
hlt
das
pop
sar
faddl
pop
or
out
xchg
in
pop
lods
push
mov
sahf
sbb
cmp
aam
push
sbb
add
loope
add
scas
sete
xor
inc
fisttps
loopne
ret
fimull
pusha
cmp
sbb
out
mov
inc
loope
jo
rcr
loopne
pop
out
fs
adc
ret
fisttpll
jo
mov
sbb
pop
cmp
sbb
clc
jns
int
add
xchg
and
pop
js
dec
div
push
decl
rcrb
jnp
in
xchg
nop
cmc
ret
aam
enter
popa
or
out
mov
inc
loope
add
lock
sti
sbb
loope
xchg
in
xchg
shlb
cmp
rorb
sbb
loopne
jle
lock
mov
sbb
int3
pop
and
pop
mov
push
aad
dec
cmp
fmuls
test
xchg
add
inc
xchg
out
ret
jle
loopne
ds
mov
cmp
pop
lods
push
mov
pusha
fisttpl
loope
xchg
inc
loope
add
lock
sbb
xor
xchg
andps
xor
adc
inc
lret
or
js
les
adc
add
loope
add
pushf
ds
clc
and
js
sub
jp
jmp
or
test
xchg
xor
les
adc
add
shr
add
fdivs
or
jo
inc
loop
jl
sub
jp
jmp
pop
cmp
aam
push
inc
loope
jo
add
loopne
jg
bound
mov
lock
mov
mov
push
cmp
xor
adc
mov
lds
and
cmp
add
fsubrs
mov
rcrb
ja
mov
mov
push
cmp
sbb
push
push
pusha
icebp
inc
mov
into
push
add
mov
and
jl
out
pop
jo
popa
fimull
pusha
cmp
push
js
or
jl
mov
or
sbb
out
ret
mov
repz
out
mov
adc
ret
mov
fmuls
pop
cmp
sbb
push
push
add
jo
add
loopne
bt
lds
sub
xchg
fimull
pusha
cmp
sbb
out
nop
push
loope
jo
loope
or
jmp
xchg
cmp
pop
mov
fimull
pusha
cmp
push
js
or
xor
mov
sub
sbbb
xchg
xchg
cmpsl
mov
les
clc
ja
mov
mov
push
cmp
sbb
push
push
add
xchg
jle
lock
mov
ret
out
xchg
ds
clc
sbb
loopne
popa
in
pop
scas
push
mov
subl
push
and
cmp
add
shrl
icebp
pop
rcrb
jnp
out
pop
mov
enter
pop
cmp
or
jl
rcl
push
sbb
add
rcr
pop
shrl
jecxz
test
sbb
push
mov
cmp
or
cmp
rorb
sbb
loopne
cld
aaa
shl
pop
lock
inc
jecxz
test
push
sarb
jmp
test
nop
jbe
lods
sbb
push
push
and
unpcklps
add
mov
lock
mov
lock
mov
mov
push
cmp
ss
pop
cmp
bnd
dec
xor
mov
sub
test
rol
clc
outsl
sub
pop
mov
and
test
push
sarb
jmp
cmpsb
sbb
ss
pop
cmp
bnd
dec
xor
mov
and
sbbb
inc
lock
gs
pop
and
pop
mov
mov
mov
sub
insl
test
repz
inc
mov
loope
jle
lock
add
stc
or
cmp
cmp
cmovl
pop
wrmsr
xor
inc
cmp
and
xchg
jge
lret
pusha
stc
add
cmp
push
enter
pop
movsb
push
cmpb
xor
rorl
xor
ret
push
or
jle
loopne
and
lods
ds
clc
ret
loope
js
sbb
cmc
adc
dec
cmp
imul
add
xchg
jle
lock
mov
sub
inc
loop
jl
shl
add
punpckhbw
cmovl
and
xchg
imul
mov
lds
sbb
add
loope
pop
shll
in
mov
adc
sbb
sarb
ljmp
or
in
xor
add
jo
rcr
loopne
and
xor
and
mov
add
sbb
insb
cmp
cmovs
popa
or
out
xchg
sbb
jecxz
mov
loope
jo
add
loopne
cpuid
rcrl
pop
sbb
pop
insb
cmp
xchg
shlb
pop
wrmsr
xor
loop
or
lock
cmpl
push
popa
repz
pop
adc
pop
jo
popa
in
pop
mov
mov
sub
out
inc
xlat
wrmsr
xor
mov
and
sbbb
cmpsb
add
clc
ret
loope
je
shl
pop
cmp
sbb
jns
mov
xchg
loopne
cld
cmp
mov
ret
out
nop
ds
inc
fimuls
loopne
ret
mov
enter
pop
movsb
push
xorb
xor
rorb
sub
ret
push
or
filds
jp
loopne
xor
mov
and
pop
mov
push
aad
dec
cmp
imul
add
xchg
cmp
sbb
xcrypt-ecb
cmpsl
dec
lock
inc
loop
cmpb
push
mov
sub
adc
inc
dec
xor
lds
and
sbbb
dec
xchg
pop
sub
pop
mov
mov
sarb
xchg
jmp
fsubrs
cwtl
sbb
inc
mov
into
push
add
mov
seto
and
add
push
loopne
ret
mov
sarb
xchg
or
cmp
rorb
sbb
into
push
add
mov
jo
and
mov
add
cmpl
andps
ss
pop
cmp
bnd
dec
xor
mov
loope
jle
lock
hlt
push
fdivrs
pop
rcrb
jbe
fimull
pop
cmp
cmp
mov
loope
push
mov
mov
addl
ret
adc
out
xchg
ds
inc
fisttps
loopne
popa
in
xchg
shlb
sysenter
xor
inc
cmp
loop
adc
inc
pushf
sbb
filds
out
xchg
pop
cmp
xchg
push
clc
ja
mov
mov
push
cmp
fstl
aad
mov
leave
jg
xchg
iret
xchg
sbb
scas
mov
fdivrs
xchg
clc
pop
sbb
fmuls
rcl
cltd
cmc
pop
ret
test
xor
subb
jo
mov
paddb
inc
adc
cmp
popa
ljmp
xor
orl
xchg
xchg
aaa
ror
push
xchg
rcrl
sbb
sub
xchg
sbb
enter
adc
fdivrs
in
shrb
imul
xor
mov
sahf
pop
stos
and
or
aas
mov
push
movsb
or
jmp
add
inc
mov
mov
pop
mov
cmp
shrb
xor
dec
or
out
pop
adc
jge
cwtl
xor
inc
or
fisubrl
sti
xchg
lahf
clc
stc
pop
or
test
lret
sbb
ret
scas
add
xor
mov
dec
addr16
nop
scas
jns
cmpsb
mov
out
push
xlat
push
ss
pop
in
out
dec
arpl
scas
fisttpl
push
mov
sbb
adc
scas
call
in
push
pop
stc
and
push
jnp,pn
mov
lds
lods
mov
in
imul
rorl
xchg
in
inc
repnz
jno
mov
jg
in
xchg
lret
pop
push
pushl
xchg
test
stos
pop
cmp
xlat
pop
jbe
lods
dec
enter
xchg
xlat
inc
jl
cmp
arpl
xor
inc
leave
gs
cld
jb
in
imul
jge
and
cmp
push
aas
enter
jnp
pop
dec
sbb
xchg
fstpl
sbb
push
lcall
adc
xchg
leave
and
dec
jecxz
addr16
add
push
push
hlt
fidivl
xchg
fcoms
insl
push
cli
fsubl
pop
or
or
dec
adc
aam
std
lret
test
lcall
das
mov
mov
ljmp
mov
mov
push
icebp
pop
xchg
adc
out
dec
repnz
xor
les
dec
jp
cmp
jmp
add
aaa
insl
jle
shll
xor
and
mov
pop
jge
xlat
sarb
lods
xchg
pop
pop
mov
jmp
int
outsb
ret
out
cmpsl
aaa
cmc
pop
cmp
jbe
xchg
and
test
out
scas
push
jbe
xor
xor
fs
inc
shrb
aam
fisttpll
jg
fbld
int
sbb
push
xor
cwtl
cs
and
mov
add
insb
mov
data16
sub
popa
sub
xchg
les
sub
test
xchg
lret
int
leave
sbb
rorb
sub
xchg
cmpsb
out
decl
inc
mov
lods
ret
adc
mov
mov
and
sbb
loopne
mov
les
inc
mov
push
jo
sub
test
aam
loopne
js
movsb
lcall
sti
lods
jnp
jl
sbb
push
scas
std
or
addb
sub
leave
pushf
push
push
cmp
fildl
xchg
movsb
pop
sbb
and
pop
push
addr16
mov
fwait
mov
and
inc
das
mov
in
push
mov
xchg
cmc
ret
and
es
and
mov
dec
inc
lret
mov
mov
dec
sub
sub
inc
cltd
movsb
add
xor
popf
cwtl
adc
jp
or
jo
mov
lods
push
jno
mov
fcomps
sahf
cmpsl
add
push
sbb
in
pushf
push
pop
dec
and
or
sub
mov
adc
pop
or
push
cmpsb
shl
bound
jne
cmp
mov
sti
insl
sahf
inc
stos
repnz
xchg
dec
jp
and
call
mov
adc
std
fiaddl
es
sbb
testb
pop
outsb
jmp
lods
mov
neg
pop
jne
fwait
mov
fisttpl
mov
mov
ja
pushf
pop
and
ja
pop
push
rorl
jmp
test
popa
shrl
and
pop
out
orb
fcmovu
sub
xor
inc
and
out
jmp
mov
stos
cmpsb
inc
mov
jo
mov
lcall
and
hlt
xchg
rep
mov
insb
mov
push
jnp
mov
enter
test
dec
pop
push
outsb
pushf
sarb
sbb
push
fwait
sbb
cmpsb
cld
push
cmp
pop
cmp
mov
fnstsw
mov
sbb
fnsave
pop
pop
mov
fstps
inc
movsb
jg
sbb
lds
dec
or
add
mov
mov
and
pop
xlat
outsl
inc
push
out
imul
xlat
mov
mov
push
mov
das
out
push
repnz
mov
jae
data16
adc
inc
dec
movsb
daa
mov
rcr
mov
add
insb
shll
addr16
lret
ds
mov
rclb
fmulp
xchg
ror
clc
adc
cld
leave
sub
cmc
pop
inc
cmpsb
mov
pop
mov
fisttpl
fisttpl
xor
pop
xor
jmp
jp
out
dec
sub
mov
ret
repnz
pop
mov
in
cmp
xor
xchg
nop
and
scas
sub
stos
and
add
fnstsw
and
movsb
addr16
pop
jne
sub
jo
fdivl
cmc
in
movsl
xor
xchg
push
push
or
inc
or
leave
jmp
arpl
cli
lock
sbb
into
mov
pop
mov
dec
int
and
jbe
je
stc
and
int3
mov
adc
xor
push
imul
adc
in
xor
cmc
movsl
mov
cli
ja
sub
pop
sbb
xor
test
sub
fstpl
nop
adc
aad
sub
pop
mov
ljmp
mov
jb
je
test
loopne
scas
cmp
mov
xchg
jecxz
sub
mov
aam
in
cs
dec
mov
cmp
mov
imul
jmp
adc
mov
jmp
scas
xor
lods
aad
ss
lahf
movsb
ffreep
sub
jge
sbb
mov
jbe
mov
cmp
push
lret
pusha
pop
xchg
hlt
xor
or
jecxz
and
xchg
and
mov
in
push
test
mov
shlb
fdivl
outsl
in
sahf
mov
mov
push
inc
ljmp
jb
adc
push
mov
imul
mov
loop
lret
scas
sub
adc
mov
outsl
add
mov
pusha
adc
je
sahf
pop
pushf
repz
fldt
dec
cs
jnp
jne
jno
xchg
outsl
cmp
outsb
lods
xor
jne
inc
aas
cmp
cmp
dec
ds
out
fisubrl
xchg
popa
rcrl
lcall
xchg
leave
jns
dec
or
inc
addr16
and
imul
addr16
and
or
xchg
pop
and
xchg
xlat
je
and
pop
les
adc
leave
insl
dec
mov
lea
mov
and
xchg
rorl
xchg
pop
enter
or
pop
push
rcll
jns
je
mov
xor
mov
jno
mov
mov
push
jecxz
lds
aam
movsl
lcall
fisttpll
call
or
dec
or
cmp
insb
stos
xchg
pop
jae
lahf
push
add
test
pop
mov
mov
test
cmp
fistps
ss
xor
mov
sbb
lret
lods
cmp
pop
cli
test
movsb
enterw
movsl
push
xor
out
movsb
and
mov
pop
xchg
cmp
cltd
cltd
aad
into
mov
push
iret
lret
mov
jecxz
mov
push
bound
sbb
jne
or
loopne
fucomp
movsb
mov
pop
cmp
jbe
and
std
xor
js
xchg
addr16
adc
xlat
or
xchg
adc
aad
xchg
push
mov
insb
mov
and
addr16
mov
movsl
dec
jnp
cmp
fsts
dec
pop
in
ret
lahf
into
pop
out
je
into
adc
pushf
and
mov
insb
loop
outsb
xor
jo
dec
test
daa
pop
cld
sbb
ret
into
add
leave
push
imul
adc
ljmp
out
fdivrp
and
cld
xchg
and
or
idivl
mov
fidivrs
pop
je
fmull
push
repz
pop
int
mov
xor
or
in
mov
inc
push
mov
push
aad
push
jno
ljmp
fadds
lods
mov
aas
ss
push
sub
mov
xor
push
adc
dec
pop
push
shlw
jbe
inc
lods
or
pusha
mov
fs
xchg
pop
movsb
call
jg
dec
inc
lds
stos
int
insb
je
bound
in
xchg
lcall
insl
xchg
jp
scas
and
mov
ret
lcall
jl
out
stos
leave
shll
xchg
or
mov
pop
mov
imul
out
push
dec
xchg
mov
mov
xchg
aas
repz
jle
in
mov
out
mov
sbb
fisubrs
xchg
dec
jns
stos
sub
mulb
dec
icebp
scas
dec
out
out
cmp
test
jae
mov
adc
in
enter
mov
imul
fcomp
fs
iret
sub
les
jno
fmuls
or
int3
cmp
jl
mov
jge
dec
fst
sahf
fs
push
xchg
xchg
dec
sbb
fs
sbb
and
mov
cmp
dec
ds
dec
rolb
lret
sbb
mov
mov
enter
cwtl
adc
dec
xchg
dec
setl
inc
push
ret
xchg
cmp
lods
pop
pop
fadd
je
pop
mov
pop
mov
jl
aaa
scas
fldt
mov
sbb
ljmp
loop,pn
data16
in
xor
imul
mov
jno
ficomps
adc
fwait
cmp
fldenv
aaa
je
inc
je
in
adc
sbb
mov
sbb
dec
rclb
mov
test
lock
insl
mov
and
sbb
add
jbe
out
les
out
in
fldt
notb
outsb
stos
popa
icebp
sbb
pop
aaa
aam
jl
bound
jns
pop
mov
and
mov
cmp
test
jg
jno
shrl
jle
leave
sbb
out
jbe
into
jb
mov
shll
xchg
xchg
jb
mov
lret
mov
jne
dec
pop
dec
repnz
mov
pop
add
lea
sbb
in
dec
pusha
lret
rcll
iret
adc
outsb
mov
push
scas
push
loop
mov
and
in
mov
xchg
stos
repnz
insb
adc
sub
mov
movl
mov
adc
sbb
imul
inc
lcall
and
xchg
inc
add
test
test
lods
mov
stos
inc
dec
xor
mov
das
and
jns
add
dec
int3
call
push
pop
stos
into
std
sub
aam
push
gs
mov
and
test
jecxz
sbb
jno
jno
mov
cmc
xlat
cmp
fildll
cltd
mov
repz
mov
xchg
es
jb
pusha
push
sub
mov
insb
xlat
test
inc
inc
stc
mov
in
mov
pop
insb
fwait
iret
lea
and
xchg
testl
xchg
fistps
subl
push
inc
xchg
pusha
sti
adc
pop
dec
adc
push
lock
mov
cmp
dec
jno
stos
rorl
xchg
jae
cmp
addr16
lods
jl
pop
insb
clc
out
repnz
loope
mov
xchg
mov
lea
and
arpl
xchg
inc
push
mov
sbb
pop
pop
fsub
mov
mov
in
xor
dec
mov
insl
je
mov
rorl
in
push
mov
scas
rorl
sub
and
shll
out
clc
out
popa
pop
inc
pushf
adc
out
shrl
push
or
mov
inc
or
rorl
jno
jno
mov
sahf
jnp
inc
jecxz
inc
out
in
pop
jnp
jnp
pop
push
enter
dec
mov
xor
ss
push
sub
fnsave
mov
stos
fwait
ljmp
pop
test
scas
test
pop
push
jp
sub
into
sbb
idivl
lret
dec
imul
popf
ja
insl
jle
xchg
sub
add
fcoml
inc
clc
clc
xor
popa
fdivl
repz
pusha
mov
fs
jmp
mov
or
lea
mov
inc
lea
orb
lahf
cld
test
hlt
dec
fcoml
lret
push
mov
pop
or
cmp
fwait
arpl
cs
push
and
gs
cli
stos
outsl
xchg
fstps
mov
xchg
les
pop
xor
push
and
jmp
dec
xchg
sbb
sub
push
or
aad
cmpsb
jns
xchg
popf
mov
in
cmpsl
sub
adc
inc
jbe
rorb
mov
sbb
mov
and
pop
dec
mov
inc
movsb
xchg
dec
stc
and
int3
xchg
and
dec
push
jns
shrl
repnz
stc
xor
xchg
sbb
mov
outsb
je
xor
loop
test
xchg
xchg
jae
in
pop
sub
inc
xor
xchg
jae
xchg
mov
xchg
sti
mov
jle
mov
or
push
and
mov
repz
push
fisttpll
iret
inc
push
insb
into
orb
and
test
cltd
xchg
sbb
add
out
mov
pop
aaa
inc
and
hlt
sbb
cmp
push
mov
sbb
mov
push
mov
xor
jb
inc
add
nop
sub
and
and
pop
cmp
push
cmpl
je
ss
cmp
xor
pop
push
imul
das
dec
cmp
push
mov
ss
mov
sarb
ja
testb
call
pop
in
mov
lods
jo
pop
push
sarl
popf
call
lods
push
mov
push
ljmp
mov
jp
cmp
lea
xlat
dec
out
mov
movsb
jp
leave
gs
mov
and
sbb
shrb
sub
nop
push
sbb
add
imul
push
pop
testb
adc
lea
and
inc
xchg
js
enter
ja
sub
fs
adc
in
aam
sbb
sbb
lds
leave
pushf
lea
in
jae
in
mov
loopne
imul
adc
loop
pop
shll
enter
jp
xor
in
in
shlb
rcrl
mov
inc
sbb
sub
sbb
fists
cmp
and
idivl
and
jnp
rcrl
jae
nop
mov
mov
xor
inc
fdivr
adc
jbe
scas
xchg
push
pop
dec
or
pop
int
jp
mov
xchg
mov
inc
xchg
loop
dec
xchg
rorb
jge
cmp
mov
outsb
pop
cmp
pop
insl
push
shll
scas
xchg
sbb
int3
cmc
les
and
jbe
in
lods
es
repz
xor
and
fisubl
ret
xchg
xor
mov
mov
inc
adc
inc
fs
push
jmp
push
or
jo
inc
lret
mov
movsb
stc
add
les
push
cmc
mov
xchg
cmp
cmp
mov
out
pop
sub
push
xlat
push
jno
jbe
shrl
ljmp
mov
push
fdiv
pop
stos
jl
xchg
movsb
fldcw
cmp
repnz
js
mov
out
in
sbb
inc
lea
push
sbb
push
dec
sbb
dec
adc
scas
or
mov
pop
sti
es
enter
jae
mov
mov
xor
push
jecxz
ss
ret
xchg
fsubl
movsb
fisubrl
inc
bound
adc
lock
inc
lods
cmp
xlat
popf
and
shrl
mov
xor
loop
dec
negb
jg
mov
adc
pop
xor
icebp
dec
and
leave
outsb
cmp
aad
adc
dec
mov
data16
out
shll
jne
jno
sub
insl
data16
jns
and
add
fdivrp
loopne
push
out
imul
mov
push
mov
test
pop
daa
pop
je
test
fimull
popf
jecxz
sub
xor
mov
fs
dec
popf
cmp
stos
cwtl
dec
jle
sbb
xor
mov
mov
in
loopne
jmp
insl
fisttpl
ds
dec
xor
adc
jp
add
mov
fidivrl
cwtl
in
enter
lret
enter
xchg
outsl
cs
roll
loopne
daa
push
adcl
popf
sbb
xchg
xlat
cmp
add
fisttpl
lret
or
aad
xor
daa
pop
or
aas
jp
fnstcw
scas
jb
mov
fstl
in
fwait
dec
in
push
cmpsl
dec
sbb
sub
gs
cwtl
mov
mov
arpl
cmp
lret
dec
aas
mov
data16
bound
mov
and
or
sub
and
fcmove
cmp
and
pop
arpl
xchg
pop
pop
pop
daa
movsb
mov
push
mov
hlt
fadd
inc
sbb
into
mov
sub
inc
fdivs
pushf
sbb
jg
pop
cmpsl
dec
jp
adc
dec
mov
enter
sbbl
out
mov
sahf
jl
imul
lahf
lods
out
iret
in
jno
or
jb
movsl
enter
mov
mov
test
jmp
pop
cmp
rcll
stc
push
inc
repz
mov
pop
sbb
inc
bound
jno
mov
pop
imul
dec
aad
divl
dec
and
xchg
in
fcompl
out
push
jecxz
arpl
jecxz
push
iret
sbb
jge
das
mov
and
mov
fdiv
inc
test
daa
ret
mov
iret
adc
lea
cmp
cmp
mov
or
mov
sub
push
mov
leave
pop
jge
arpl
sbb
mov
repz
mov
aas
fdivp
mov
or
repnz
das
cmp
jge
aas
xlat
js
rcl
clc
test
clc
shll
cs
movsb
popaw
and
rcrb
sub
jne
scas
cld
es
jl
sti
dec
aas
ror
dec
cmp
fs
enter
jae
inc
int3
jp
or
cmp
inc
sbb
sbb
jns
jns
xchg
push
stc
cmp
insb
orb
mov
jle
addr16
popa
jle
mov
or
test
sub
test
xchg
testb
loope
mov
xlat
out
adc
hlt
out
jae
dec
fdivl
in
mov
repz
push
mov
aam
cmc
fcomip
push
imul
fcmove
jae
cmp
lea
mov
jmp
mov
mov
adc
dec
or
jne
dec
repnz
aas
push
dec
sbb
iret
call
ljmp
repz
sbb
sbb
sahf
shrl
push
sub
movsb
mov
loopne
fimull
aas
xor
jg
inc
push
adc
sub
imul
int3
enter
xor
aas
std
in
and
jg
xchg
aas
lds
dec
mov
dec
mov
stos
dec
fmuls
add
cmp
pop
mov
adc
xchg
xor
push
call
xchg
daa
or
inc
pop
sbb
add
fistpl
fldl2t
cli
lods
gs
adc
jmp
loop
fnsave
outsb
dec
out
pop
iret
inc
push
mov
pop
dec
add
push
jb
adc
mov
mov
and
leave
jg
fdivr
aad
ret
cld
cwtl
sub
repz
jmp
inc
mov
hlt
jle
jbe
test
icebp
jl
das
lret
icebp
jle
stc
mov
lret
repnz
mov
in
mov
jnp
jg
lahf
scas
cmc
jg
sahf
loope
aas
in
jecxz
imul
fcmovnu
lea
mov
cmp
sbb
daa
out
arpl
cmp
mov
jg
mov
cli
mov
stc
js
ror
pop
xchg
idiv
out
pop
cli
lds
in
outsb
inc
int3
xchg
mov
jge
mov
dec
cmc
std
out
xchg
dec
fdivp
jg
push
push
fwait
cli
gs
es
xchg
clc
inc
lcall
testl
pop
jg
in
and
mov
pop
psubb
xchg
out
repnz
das
mov
out
je
aas
mov
fcomip
incl
aad
lock
out
jae
scas
mov
stc
adc
pop
hlt
std
fsubrp
dec
mov
cli
sbb
xchg
clc
sahf
int3
push
fwait
inc
and
lea
cmpsl
dec
dec
jmp
xchg
fucomp
cmc
repnz
mov
call
jae
mov
lret
test
mov
cs
jg
xchg
pop
inc
scas
out
imulb
inc
push
pop
dec
pop
decb
js
mov
idivl
mov
inc
movsb
mov
btc
fdivrl
jns
push
dec
mov
gs
std
dec
mov
out
outsl
loopne
xrelease
stos
aaa
jg
movsl
or
push
jbe
add
jg
jno
mov
dec
fs
xor
loopne
pop
ss
cmpsl
xchg
lahf
xchg
mov
cs
pop
add
idivb
xchg
out
xlat
loope
clc
mov
out
loope
xor
jb
fsts
lret
rclb
inc
aas
rcrl
mov
xor
in
push
test
in
insb
and
shll
jno
sbb
mov
fdivrl
andb
stos
xor
push
pop
dec
popa
jo
daa
test
add
sub
ficoms
stc
push
in
lcall
addr16
lahf
cmp
les
stc
aad
push
pop
adc
jl
stc
xor
mov
sbb
fisubrl
scas
aas
in
dec
jnp
jle
shrl
lock
jl
mov
pop
jne
sub
inc
mov
dec
mov
adc
inc
dec
aad
or
mov
inc
cmpb
sbb
adc
pop
inc
fidivrs
aad
adc
cmp
and
pop
adc
test
jmp
inc
test
fstpt
gs
push
insb
lods
fisubrl
jg
insl
cmp
iret
jnp
mov
into
mov
dec
out
cmp
mov
mov
sbb
jne,pn
sbb
xchg
imul
std
jle
jecxz
push
xchg
mulb
clc
jg
outsb
and
jge
pop
clc
cmpsb
call
jecxz
lcall
out
or
hlt
inc
jle
sarl
dec
loopne
dec
fdivrp
lea
jb
in
clc
sahf
and
aam
dec
outsb
push
adc
out
jns
or
or
repnz
pushf
mov
out
ljmp
dec
mov
ja
lahf
dec
outsb
lahf
clc
mov
cli
mov
mov
jg
jae
inc
repnz
mov
mov
ret
cmp
shll
pop
test
incb
pop
sbb
scas
xor
pop
jecxz
std
scas
scas
inc
jg
cmc
out
jle
dec
adc
in
dec
add
dec
mov
jo
pop
je
imul
jmp
or
test
mov
sar
in
idivl
stos
repz
sbb
sub
sti
inc
add
push
inc
xchg
add
add
adc
out
frstor
adc
fs
fmuls
add
adc
out
or
xor
push
xchg
adc
add
xorl
push
pusha
roll
lods
inc
adc
fcomi
loopne
out
jmp
into
in
in
jmp
adc
mov
idiv
xlat
lcall
push
ljmp
inc
push
testb
inc
dec
mov
outsb
aaa
cmp
into
cltd
cmpsl
aaa
cmp
stos
fistps
add
inc
sub
outsl
in
fimull
sub
movsl
pop
adc
pop
mov
out
jecxz
mov
sub
in
out
icebp
clc
leave
mov
cli
insb
pusha
negb
lods
cmp
outsl
mov
mov
pinsrw
rorb
mov
fistpll
xchg
ja
cli
aas
cld
std
std
lods
sub
and
push
das
mov
jg
and
xchg
sub
inc
inc
pop
mov
lea
pop
insb
cwtl
pusha
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
js
stos
jae
adc
andb
cmpb
cmp
sbb
fildl
mov
pusha
pop
xchg
add
add
sar
jns
aas
xchg
or
sbb
rcrb
pop
push
into
pop
out
sbbl
add
shl
jno
insl
inc
jo
insb
shlb
and
push
dec
or
dec
pop
in
mov
add
xor
xchg
lcall
xchg
loope
aam
adc
or
or
mov
out
lds
dec
mov
fadds
inc
loop
mov
js
lods
nop
pop
push
jp
mov
arpl
ljmp
mov
and
out
inc
sub
sbb
cmp
out
sbb
cmp
jns
ljmp
inc
dec
mov
push
pop
test
push
dec
ret
outsl
push
ds
xor
jecxz
shl
repz
and
pop
das
lahf
sbb
pop
cmp
and
mov
shlb
sbb
clc
bound
mov
cwtl
xchg
in
jl
inc
sbb
jecxz
pop
sbb
clc
std
in
lret
pop
jl
movsl
icebp
mov
sub
fidivs
loop
call
push
mov
sarb
enter
in
mov
vmovaps
jne
pusha
jl
jg
pop
aaa
jno
add
mov
je,pt
push
mov
inc
inc
or
jle
pop
clc
test
pop
cs
adc
jl
stos
mov
std
pop
sbb
scas
into
jle
or
mov
inc
inc
sti
movsl
jle
loopne
sbb
sub
int3
push
int3
fmuls
jle
ss
aas
sbb
pop
jg
mov
lods
ja
jp
fstl
out
xchg
imul
je
mov
mov
jp
inc
push
cli
push
sub
add
add
mov
popf
pop
aam
in
push
jle
xor
repz
mov
sbb
adc
mov
push
jbe
ja
js
lret
jne
dec
push
popa
push
xbegin
mov
out
cmp
aaa
jle
inc
push
fistpll
mov
ljmp
lods
imul
insl
jae
cmp
mov
dec
cmp
push
adc
sbbb
movsb
sahf
movsl
stos
repnz
mov
lret
inc
mov
inc
xor
sub
dec
lret
inc
push
mov
adc
dec
rcrb
repnz
lods
aad
popf
pop
mov
aad
bswap
ja
pop
lds
mov
cmp
lcall
mov
in
repz
mov
das
mov
cmp
das
daa
cli
sbb
rorl
lods
cli
gs
cmp
push
adc
cmp
pop
ljmp
jge
mov
dec
frstor
inc
pop
cmc
push
xchg
mov
test
pop
stc
fdivs
lss
insl
leave
jge
xchg
pop
add
mov
dec
push
sbb
mov
cmp
push
mov
fisubrs
stos
add
jne
cmp
fcoms
xor
loopne
xor
xor
stos
stos
not
enter
mov
mov
mov
addr16
inc
cwtl
mov
or
inc
hlt
cmp
or
cmp
mov
mov
xlat
aas
mov
jmp
dec
xchg
fcomi
cli
into
mov
jle
popa
jb
movaps
jae
jp
xchg
cli
pop
push
pop
mov
mov
lret
pop
sub
jns
inc
sub
xor
mov
xchg
movsb
xchg
div
pop
or
insl
jnp,pn
jle
xor
insl
call
sbb
inc
ret
out
jnp
xchg
lods
pop
cmp
mov
pushf
movsl
jnp
sbb
test
jae
movsb
lea
xchg
andl
mov
out
aaa
or
push
aad
jmp
add
xchg
addl
repz
pop
fidivrs
mov
push
push
push
daa
mov
cli
mov
push
imul
inc
jbe
out
mov
jne
imul
inc
sub
fildl
out
stos
sub
ljmp
cmpsb
popf
inc
movsb
fwait
xlat
rorl
mov
outsl
stos
mov
sub
xchg
outsb
es
imul
mov
or
ret
loope
roll
xchg
adc
pusha
mov
mov
es
ds
or
adc
inc
inc
inc
inc
jle
mov
stos
adc
inc
inc
imul
in
ret
cmp
mov
nop
rolb
add
inc
xchg
or
scas
sbb
jbe
.byte
