push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
movl
mov
movl
mov
push
call
mov
add
push
call
mov
add
push
call
mov
add
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
mov
mov
push
call
call
mov
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
jns
xchg
mov
filds
enter
inc
into
cltd
aas
inc
shll
arpl
mov
dec
cmpsl
lret
push
imul
arpl
mov
dec
cmpsl
lret
fmuls
push
jmp
jmp
jmp
call
jns
fldenv
gs
dec
adc
repnz
aas
dec
cli
dec
xor
insl
fxam
das
mov
fildll
stos
hlt
fwait
stos
inc
out
inc
cs
mov
stos
inc
jo
push
pop
sbb
push
pop
cwtl
lahf
mov
mov
jne
xor
negb
or
or
lods
pop
cmp
movsb
sub
mov
cmpsb
fisttps
adc
in
sbb
cmpps
sub
int3
or
fwait
outsb
xchg
or
add
dec
mov
xchg
out
push
lcall
sbb
inc
mov
shrb
mov
pop
pop
lods
push
outsl
in
xchg
sti
lahf
sub
gs
xchg
js
clc
lods
lcall
mov
jecxz
and
ljmp
es
insl
dec
pop
mov
and
sbb
inc
and
lods
fwait
divl
dec
movsl
sbb
xor
inc
inc
cmpsl
or
ja
lock
add
or
push
ret
xor
loope
stos
pop
lahf
out
enter
leave
adc
loope
push
jmp
mov
pop
mov
sbb
mov
inc
sub
loop
mov
push
pushf
adc
jp
test
lock
inc
pop
sarb
push
mov
or
jge
inc
push
test
add
and
push
dec
pop
into
mov
cli
cmpsl
popf
xchg
outsl
sbb
pop
jb
and
xor
imul
mov
mov
sbbb
jmp
mov
out
call
mov
cmpsl
les
iret
xchg
or
sbb
out
push
push
push
stos
mov
pop
sarb
movsl
xchg
into
daa
bound
add
ret
das
jmp
jbe
sub
lret
cmp
scas
inc
push
or
pop
rorb
repz
add
adc
add
sub
lock
ss
push
mov
sbb
cmp
or
cmp
dec
jns
adc
dec
pop
xchg
dec
sahf
aad
imul
add
enter
test
mov
out
aaa
xchg
fcoml
insb
sbbb
addr16
sar
dec
jne
cs
leave
gs
push
xchg
clc
or
iret
dec
loopne
xor
jecxz
pop
icebp
pop
jge
flds
data16
sbb
adc
mov
dec
mov
lds
push
dec
xchg
imul
test
sub
jle
mov
adc
cmp
aaa
rorl
or
mov
xchg
and
pop
roll
add
es
or
inc
in
xchg
aad
sub
fsubrl
ret
mov
movsb
mov
jo
mov
jae
add
iret
call
inc
iret
xor
mov
cld
jbe
mov
outsl
dec
imul
sbb
sub
rolb
andl
xor
jae
popa
in
xor
insb
imul
xlat
push
aas
loope
fwait
jno
outsl
inc
lea
add
mov
ja
addr16
inc
or
push
ret
mov
sbb
lcall
jmp
dec
inc
gs
push
mov
pop
xor
insb
sub
es
mov
sub
cmp
push
loope
addr16
shrl
push
push
cli
adc
pushf
mov
push
stos
leave
stos
cmp
movsb
jne
aam
push
push
lahf
mov
xchg
jg
insl
in
fisttpll
mov
cmp
sbb
imul
insb
divps
add
nop
int
sub
frstor
jecxz
mov
icebp
or
clc
fprem1
test
mov
cmp
ds
mov
sbb
xchg
repnz
jns
sub
sub
std
js
adc
and
inc
add
adc
dec
mov
mov
fmul
addr16
jns
xchg
cltd
stc
test
xor
mov
cltd
xchg
xlat
jmp
push
lcall
cs
movsb
loop
jp
pop
xlat
pop
dec
mov
xor
pop
push
jp
popa
sbb
mov
dec
xor
lcall
outsb
out
cli
and
add
mov
sti
mov
adc
lods
push
sub
cmp
cmpsl
int
popa
cmp
mov
xor
inc
xor
icebp
imul
cmp
roll
mov
das
jmp
je
mov
cmpb
cwtl
and
sbb
cmpsb
or
les
adc
jle
pop
or
test
repnz
nop
lods
adc
sbb
push
push
push
dec
mov
mov
push
mov
adc
cmpsb
je
nop
clc
or
or
and
mov
in
pop
xor
pop
cmp
xchg
sarl
jge
mov
dec
mov
lds
add
dec
mov
xor
rcrb
jecxz
sbb
sti
dec
xor
std
ds
outsb
lock
jp
test
push
cmp
aas
xor
pop
test
pushf
jle
mov
shl
iret
cmp
popf
orl
ret
pop
out
mov
stos
dec
leave
add
js
dec
mov
push
fisttpll
and
and
lock
add
addb
into
js
mov
int
adc
cmp
or
dec
adc
andb
nop
inc
push
addr16
cmp
cmc
jb
ret
out
jbe
jmp
mov
sahf
je
dec
sub
out
xor
mov
jae
sar
sti
pop
sub
inc
cltd
add
movsl
jp
adc
mov
sub
mov
fbstp
pop
in
nop
or
lods
int3
xchg
xchg
dec
inc
in
or
mov
jl
mov
push
add
add
cmp
pop
mov
dec
mov
test
and
pop
adc
out
push
pusha
imul
insb
fnstcw
mov
loop
jb
xchg
and
out
mov
jl
pop
loope,pt
das
repnz
pusha
adc
int3
mov
push
and
movl
sub
sbb
popf
xchg
cli
add
cld
lock
imull
outsb
xor
push
lods
sbb
xor
ja
fdivrs
cwtl
andb
imul
and
test
or
add
test
gs
add
push
jnp
repnz
fiadds
mov
adcb
pop
jnp
je
data16
cmpsb
and
inc
stos
cli
cmp
mov
pop
jbe
lock
es
cs
push
stc
push
fsubl
or
sbbb
pop
shl
add
adc
inc
lods
adc
lock
imul
pop
lods
orb
imul
sahf
mov
ljmp
outsb
int
test
fwait
out
push
sti
mov
stos
jmp
pop
out
mov
test
mov
sub
call
dec
push
cwtl
ret
mov
jne
jmp
out
test
xor
push
into
fwait
sbbb
leave
mov
xchg
mov
jnp
iret
popf
bound
cmp
daa
mov
repnz
mov
rcrb
idivl
jl
out
imul
sbb
cmp
jmp
loopne
gs
push
hlt
inc
xlat
dec
sbb
sbb
sub
hlt
fwait
out
lock
fisubl
adcl
mov
insb
cli
loope
mov
adc
aam
int
or
push
sub
mov
out
fldcw
outsl
outsl
sbb
jge
hlt
ljmp
sbb
outsb
cmp
mov
into
loop
int3
sub
mov
mov
or
fsubrl
inc
pusha
cmp
clc
jns
insl
test
mov
stos
in
and
add
ds
xor
imul
lea
into
sub
fldt
or
ret
inc
jg
cmp
sbb
or
push
xor
ss
iret
cmpsl
and
push
pusha
rcrl
sbb
loopne
movsl
jno
or
lods
pop
movsl
push
xor
loopne
pop
xchg
sub
adc
mov
jp
icebp
lret
jno
cmpsl
filds
stos
mov
xorb
push
imul
pusha
sub
push
jmp
mov
pushf
int3
push
lahf
aam
pop
repnz
push
rorl
sub
cmpsl
ret
adc
in
cs
gs
cmpsl
int3
xor
adc
sbb
jae
into
lret
mov
push
popa
loopne
popa
hlt
imul
jo
jns
jp
jmp
xchg
mov
mov
inc
mov
pusha
stos
out
sub
or
mov
je
jns
jne
jno
mov
pop
dec
sub
mov
sub
sub
sub
push
push
call
out
adc
addr16
outsb
fnstsw
loopne
xchg
test
ret
int3
pop
cmpsl
xchg
mov
sarb
mov
jnp
or
push
lds
cmp
cmp
cmp
or
mov
gs
inc
mov
sti
popf
stos
and
pop
adc
hlt
lret
mov
mov
shlb
mov
pop
jmp
ficompl
pop
mov
stc
lret
icebp
jge
outsb
xchg
cmp
and
adc
jno
call
fmull
jb
loop
repz
mov
lods
sub
stos
and
mov
inc
sti
xchg
jnp
pop
cmp
adc
cmpsb
mov
adc
push
xchg
popa
sbb
jmp
test
fdivl
cmp
daa
push
mov
testl
loopne
bound
cmpsb
pop
rcl
or
cld
mov
mov
cltd
mov
xchg
out
sahf
add
push
mov
ret
int3
fcoml
sub
popa
int3
outsb
dec
ja
movb
inc
push
aas
xchg
sbb
xchg
adc
pop
pop
dec
in
dec
sbb
jecxz
or
cs
or
pop
cltd
or
xor
mov
push
in
sbb
xchg
mov
inc
js
fcmovu
fisttps
seto
sub
push
push
stos
std
subb
add
pop
push
stos
cmpsb
addl
out
shll
shrl
das
lahf
add
mov
js
outsb
mov
inc
or
inc
daa
stos
fldt
sub
repnz
daa
scas
cmc
test
sti
mov
cwtl
sbb
test
jo
mov
shl
adcb
add
out
inc
fwait
dec
clc
inc
roll
daa
mov
fadd
imul
insb
mov
fwait
sti
cmp
inc
pop
lea
push
adc
sub
roll
sahf
clc
mov
imul
insb
cmp
bound
or
jo
jl
sti
mov
xchg
add
and
lock
add
and
jge
xor
lahf
not
imul
pusha
lret
or
jbe
inc
movsl
xlat
xor
decl
mov
std
mov
xor
and
into
mov
out
movsl
add
mov
mov
lret
push
je
lret
aam
sbb
pop
jmp
outsl
sub
mov
fwait
mov
mov
arpl
insl
movb
bnd
fbld
out
mov
cmp
cmp
orb
imul
adc
cmp
sahf
cwtl
sbb
in
in
dec
jl
arpl
cmpsl
mov
sbb
test
mov
idivb
adc
in
out
outsb
pop
xchg
aad
mov
out
in
outsl
or
xor
push
cld
arpl
movsl
sub
cmp
mov
jp
cmc
xor
fiaddl
test
pop
test
popa
repnz
pop
repnz
sbb
add
in
int3
adc
pushf
pop
mov
pusha
mov
test
cwtl
and
dec
push
mov
mov
jns
ds
or
test
lock
imul
mov
push
cmp
stos
int
nop
add
or
cld
xlat
movsl
out
jecxz
jp
adc
gs
mov
outsb
iret
adc
in
cs
mov
clc
or
orb
cmp
or
inc
test
adc
int3
add
cld
jb
sbb
xor
pop
pusha
jg
dec
stc
mov
xchg
out
cmp
xchg
adc
xchg
mov
inc
aad
mov
push
les
dec
inc
cwtl
mov
xchg
lods
out
cmpsb
popf
add
ss
push
js
pop
imul
and
lret
pop
test
pop
cmc
lea
call
ja
xor
or
dec
cmpsb
ret
cltd
test
out
jecxz
loop
xor
scas
dec
movsl
ficoml
ja
fidivs
call
ret
int3
mov
inc
push
fstp
repnz
std
lds
push
push
ss
es
jne
pusha
mov
imul
repnz
jmp
cmp
int
push
rcrl
sbb
std
popa
test
popa
mov
and
xchg
jo
pop
add
mov
dec
insl
aaa
sub
cmpsl
rcrb
jecxz
test
rcrb
pop
adc
or
and
movsl
cli
inc
mov
lock
mov
dec
jl
xchg
sub
pop
xchg
addb
pop
jns
or
xchg
jg
addl
mov
notb
lret
mov
out
fldenv
push
std
dec
insb
out
pop
sub
push
fwait
cmp
fs
sub
cmp
subl
in
xor
repnz
inc
mov
and
pop
xchg
cli
adc
out
pop
add
out
mov
adc
mov
sbb
mov
popa
int
enter
dec
push
mov
movsl
into
ret
mov
push
add
adc
cmp
push
cli
lret
xor
sbbb
or
in
inc
push
jg
cmp
mov
mov
ljmp
sbb
and
mov
jns
cltd
imull
push
pushf
xchg
out
xor
jae
inc
and
lret
pxor
fs
xlat
xchg
and
mov
push
imul
stos
inc
xchg
dec
sahf
and
test
fs
and
inc
cmp
cmp
adc
dec
in
mov
fstps
adc
push
dec
pop
dec
sbb
sarl
fcmove
fcompl
scas
dec
lods
test
and
daa
aaa
inc
ret
sub
adc
in
push
lret
icebp
lods
adc
cmp
and
es
dec
cmp
jae
push
jp
mov
dec
clc
hlt
add
in
dec
shrl
jbe
enter
sub
and
fildll
push
add
fadd
add
mov
lret
add
js
jnp
add
xchg
mov
adc
das
imul
sub
add
sbb
pop
scas
enter
addr16
lret
gs
punpckhdq
xchg
inc
sbb
xor
ret
fstpt
imul
sti
cwtl
or
jg
xlat
mov
out
jmp
lahf
sub
test
or
push
sbb
push
filds
xor
gs
jnp
xorl
xor
dec
mov
jp
pop
xor
mov
xchg
mov
mov
inc
pop
xchg
iret
jmp
icebp
dec
cmp
fcomp
mov
test
adc
enter
and
sub
sbb
cmp
push
adc
bound
enter
xchg
inc
gs
stos
int
fwait
test
sti
fildl
mov
mov
call
jns
add
mov
jge
mov
add
popf
inc
insl
xor
cmp
inc
dec
jg
adc
fiadds
sub
pop
push
fdivrp
nop
mov
push
cmpsb
push
xor
push
inc
gs
fwait
incl
fs
push
adc
and
orb
jmp
rolb
jae
mull
aas
cmp
mov
cld
sub
mov
mov
and
fdivrl
xchg
shll
mov
inc
jle
sahf
or
daa
mov
add
lcall
xor
dec
pushf
bound
repz
inc
mov
cmpsl
or
cmpsb
cmpb
jmp
adc
hlt
lds
add
scas
sarb
shll
add
jne
xor
out
or
in
jle
cmp
lea
test
mov
fildll
or
sbbb
inc
icebp
icebp
cmpsl
ljmp
jle
aaa
pusha
sub
out
xor
sbb
int3
mov
mov
sbb
push
shrl
push
xchg
push
push
mov
lods
sbb
shl
insl
add
repnz
mull
scas
bound
imul
add
ja
add
inc
sub
outsb
fisttps
lods
push
cmpsb
mov
add
mov
inc
cmovo
icebp
mov
in
ss
outsl
jle
addr16
es
jecxz
xchg
andl
or
and
sbb
push
adc
ror
adc
nop
inc
dec
mov
mov
jo
insb
xchg
push
js
lock
shl
adc
push
jo
xchg
mov
jo
push
lock
jmp
add
cmpsb
adc
into
jmp
into
jg
sbb
nop
dec
sub
cld
or
in
dec
ret
imul
add
mov
lods
mov
pop
cltd
dec
or
lret
das
subb
iret
lret
hlt
test
lds
aam
cmp
mov
cmc
pusha
stos
outsb
mov
cltd
and
outsl
xchg
xchg
pop
push
push
add
aad
jae
inc
mov
mov
sbb
call
loopne
insl
cltd
push
loope
aas
mov
xor
mov
aaa
pop
cmpsl
fwait
sub
dec
push
add
lahf
adc
movsb
pop
pop
fstps
sub
mov
sarb
mov
loop
sbb
fldenv
pop
push
mov
mov
test
mov
lods
or
pop
outsl
lcall
pusha
popa
dec
repz
jl
dec
test
call
mov
les
or
jecxz
mov
xchg
jp
mov
int
pop
cmp
in
imul
push
arpl
test
sbb
push
imul
mov
mov
gs
sub
test
cwtl
mov
xor
mov
mov
add
jo
test
out
mov
sub
sub
insb
cmp
ss
mov
xchg
and
xchg
cltd
loop
ret
sahf
in
stos
ljmp
push
std
cmpsb
icebp
lcall
or
or
int3
stos
sub
and
fdivrs
push
imulb
or
jbe,pt
and
ss
imul
xor
xlat
out
add
mov
pop
cwtl
arpl
and
loope
or
in
sub
cmp
inc
jno
in
incl
xor
push
test
shrl
xor
mov
push
sarb
outsb
jmp
lahf
or
movl
jecxz
inc
mov
insl
push
push
pop
fs
adc
cmpsl
jp
cmc
mov
inc
lods
js
mov
sbb
ret
xlat
and
iret
mov
push
pusha
stos
ljmp
in
cmp
fs
stos
or
sarb
push
xchg
int3
mov
jg
adc
negl
jns
aaa
rcr
xchg
insb
pop
decl
sub
lahf
lds
push
push
sarb
movsb
mov
xchg
push
xchg
and
arpl
add
repnz
mov
xor
sahf
sub
mov
cmp
ret
sbb
aam
mov
adcl
jmp
popa
push
sti
cmpsl
cmpb
xchg
mov
fsubrp
gs
loopne
sbbl
sbb
dec
movsb
mov
or
arpl
mov
sbb
mov
lods
test
fadd
xchg
mov
dec
scas
inc
add
push
movsb
jnp
or
or
xlat
pushf
pop
add
add
aaa
or
inc
out
cmpsb
enter
xor
bound
mov
push
sub
adc
xchg
mov
or
pop
lahf
adc
add
inc
push
sbb
xchg
test
ljmp
pop
das
push
bnd
cld
roll
inc
arpl
xchg
mov
xchg
lds
test
and
and
in
xor
mov
and
push
jp
mov
ror
jb
insl
test
mov
inc
sub
fwait
inc
push
xchg
mov
xchg
lret
scas
dec
aaa
outsb
pop
notb
xchg
push
movq
inc
dec
fidivs
pop
mov
rcl
sub
adc
je
test
movsl
lock
imul
or
adc
subb
repz
mov
lahf
cmpsl
or
sub
ret
mov
sbb
push
or
mov
inc
and
rcl
inc
imul
adc
cmp
mov
js
mov
gs
and
cld
sbb
sub
adc
xlat
mov
sub
mov
mov
and
js
jbe
add
aad
and
mov
jb
rorl
xchg
mov
pusha
insw
dec
leave
push
lret
fdivl
cli
imul
and
mov
adc
mov
mov
adc
lret
push
sub
mov
cmp
ss
decl
dec
add
test
mov
jno
fiadds
aas
inc
adc
in
shll
jae
mov
push
lcall
ficoms
testb
pop
or
in
sub
add
cmc
pop
dec
js
sbb
pop
lahf
xor
loopne
push
mov
inc
mov
mov
and
call
sub
add
imul
cmp
sub
cwtl
mov
and
arpl
andl
cld
xchg
lcall
dec
pop
insl
int3
xchg
push
xchg
mov
cltd
xor
movsl
and
add
lods
push
jl
pop
rolb
inc
fildll
push
test
mov
or
inc
cmpsl
mov
call
mov
sub
sub
push
mov
sub
pusha
dec
pop
push
fildl
mov
nop
or
nop
hlt
pop
push
jno
mov
and
jb
jmp
sbb
enter
scas
aas
mov
es
sar
cmpl
divb
mov
push
pusha
leave
cmp
sub
jb
pop
popf
or
divl
in
loopne
mov
fwait
cli
xorb
xchg
scas
dec
lret
pop
fcmove
stc
or
cmp
sahf
or
dec
adc
pop
jno
cmpsb
hlt
scas
aaa
scas
mov
aam
sbb
sub
insl
pop
test
xchg
mov
pop
mov
xor
lret
sub
call
sbb
dec
pusha
mov
lods
adc
paddusb
enter
jl
adc
mov
fadds
repz
jl
pop
cmc
add
push
mov
int3
xor
testl
dec
insl
mov
pusha
imul
pop
push
add
pop
mov
mov
add
pop
popf
jg
mov
pop
pop
cmp
lret
fidivl
js
jb
fs
std
test
jecxz
dec
add
adc
aas
push
lock
out
jae
sub
pop
inc
mov
lock
shlb
mov
insb
pusha
jno
xchg
mov
push
arpl
icebp
outsb
aam
xchg
jno
cmp
pop
adc
xor
mov
or
ret
or
cmp
fnsave
and
and
push
adc
dec
cmpsl
mov
and
aam
jne
xchg
out
ret
mov
xchg
lret
ja
or
dec
pop
dec
mov
aaa
into
call
sbb
xlat
jl
jns
fs
dec
loope
jmp
adc
lods
scas
lret
mov
jge
les
dec
mov
scas
je
sub
jle
lock
or
test
or
lcall
fistpll
fsubr
or
inc
in
pop
mov
push
fs
lret
jnp
movl
push
lret
in
std
jne
popf
mov
xor
jge
out
rcll
jae
dec
mov
add
nop
lea
push
dec
add
popa
mov
mov
or
in
flds
mov
sub
ljmp
rclb
adc
dec
pop
aad
sbb
shrl
dec
lcall
xorb
add
mov
jne
pop
push
stc
xor
stos
push
movsl
test
rolb
mov
aas
mov
lods
jns
clc
call
cld
mov
mov
sahf
sub
sub
cmp
xchg
mov
mov
stc
test
and
jb
jns
xchg
xor
mov
icebp
inc
inc
mov
std
push
popf
aam
fnstenv
mov
xorb
std
add
dec
cltd
sbb
pop
outsl
and
jae
lret
aad
add
movl
lahf
and
outsl
dec
fwait
repnz
xchg
into
lods
push
mov
fisubl
cltd
jb
packssdw
jns
xchg
xchg
jle
sbb
sbb
sub
clc
out
shr
push
jb
dec
jns
pop
cmp
and
out
inc
cwtl
lods
mov
repnz
jae
and
mov
cmp
popf
pop
sub
insl
mov
outsb
ret
add
into
pop
xor
jge
sub
mov
mov
and
jns
pop
mov
jle,pn
sbb
jecxz
or
mov
xchg
mul
pop
leave
ja
jmp
xor
fwait
or
jl
addr16
push
mov
cwtl
lret
hlt
sub
ffree
push
scas
dec
xchg
pushl
lcall
popa
mov
xchg
cmp
mov
fmul
in
shrb
dec
xor
in
cmp
or
bound
jns
fs
loop
int
dec
stos
sub
mov
or
cmpsb
cmp
inc
xor
pop
lds
lods
inc
je
xor
inc
mov
push
lret
add
fmull
mov
pop
push
push
push
push
andb
mov
pop
das
mov
popa
push
pusha
add
test
xor
stos
add
lods
faddp
xlat
out
add
pop
mov
and
dec
stc
cmp
lods
jnp
jmp
ja
xchg
xchg
in
mov
mov
aas
mov
pusha
xor
das
in
sbb
mov
ds
cmp
movsb
jb
jno
dec
in
inc
push
sub
ret
addl
cmp
iret
in
mov
nop
lea
add
xchg
std
xchg
movsb
mov
dec
xchg
cmp
bound
cld
imul
rcrb
les
lea
add
xlat
mov
adc
adc
test
xlat
push
test
mov
sub
lret
stc
call
clc
aam
cmp
push
sbb
push
aam
rorl
ret
xchg
jge
push
lret
mov
jb
inc
cmpsb
nop
mov
xchg
adc
mov
cmp
adc
mov
mov
fbstp
mov
jo
jge
inc
shlb
and
pusha
push
int
das
ret
in
jns
ret
and
shl
insb
cmp
add
and
dec
cld
xor
xor
add
dec
in
in
rclb
add
mov
in
dec
sbb
mov
lods
idiv
adc
idiv
mov
add
cli
test
push
xor
into
mov
ljmp
mov
insl
mov
jmp
test
sbb
cwtl
xlat
mov
test
xchg
xor
pop
mov
nop
jns
loop
scas
aas
js
mov
and
inc
cmp
rcrb
out
std
pop
jmp
pop
mov
sub
inc
push
lds
gs
andl
pop
xchg
scas
dec
sbb
and
andw
cmp
pop
fdivrs
add
inc
adcl
shrb
jae
cli
jmp
push
jne
push
outsb
mov
mov
clc
loopne
aaa
shl
iret
shrl
xor
jo
adc
push
into
and
in
sub
das
mov
mov
lock
pop
sti
imul
lret
ds
xchg
mov
xchg
sub
movsl
mov
mov
test
outsb
stos
xor
jmp
mov
or
or
stos
adc
mov
sets
popa
dec
or
into
test
loopne
stc
in
mov
mov
or
jmp
rorl
les
in
xchg
cmp
adc
icebp
pop
mov
and
sub
arpl
push
sub
add
sbb
and
es
sub
loopne
mov
mov
pop
pop
dec
mov
dec
loopne
pop
jl
lods
iret
cmp
inc
mov
mov
negl
pop
jecxz
js
sub
cwtl
repz
jl
push
subl
pop
in
push
sahf
push
xchg
xchg
lret
dec
xlat
movsl
cmp
push
cmpsb
nop
jmp
or
les
adc
add
and
xlat
mov
sub
loop
movsb
mov
aas
movsl
imull
jae
sub
jp
out
sub
push
into
repnz
push
cmpsl
orl
xchg
push
mov
cli
data16
js
cmp
in
mov
jbe
ret
inc
pop
pushf
dec
push
cltd
sbb
cmp
add
ds
shlb
mov
ds
xchg
stos
stc
popa
test
jbe
jns
or
jae
xchg
lock
outsl
das
xor
xchg
fdivrl
jae
mov
test
cmp
movsb
cmp
dec
mov
and
xlat
sbb
ret
std
jnp
jmp
xchg
lea
add
rolb
fsubs
pop
pop
xchg
cmp
inc
xor
stos
out
jl
push
jg
dec
pop
imul
jcxz
stc
jl
and
sub
ss
cmp
jnp
adcl
gs
mov
sbb
pushf
sub
inc
mov
push
notb
or
mov
hlt
jl
mov
lret
pop
sub
cli
mov
adc
cli
push
loopne
sti
repz
cmp
or
mov
xchg
xor
gs
sbb
inc
pushf
or
mov
icebp
mov
enter
jl
ret
out
sar
or
scas
adc
js
add
fisttps
sub
xchg
aas
cmp
xchg
mov
xchg
jns
cmp
lret
mov
cmp
or
pop
xchg
inc
insb
inc
push
popf
fidivl
fdivs
ss
mov
scas
or
mov
cmp
cs
push
cmp
xor
dec
int3
jg
sbb
mov
shr
outsb
push
sbb
and
cmp
dec
inc
pop
push
imul
pop
punpckhdq
enter
lahf
test
pop
xchg
ss
imul
pop
cmpsb
push
or
jb
stos
test
arpl
aas
and
lock
dec
loope
in
and
iret
sbb
adc
rorb
std
movsb
cmpb
mov
movsl
adc
push
add
push
add
cmc
xchg
mov
in
loope
rclb
and
nop
xorb
stos
jp
cmp
icebp
adc
mov
fstps
push
lahf
ficoml
fldcw
pop
inc
or
loop
ljmp
dec
xchg
sbb
inc
xchg
fmull
or
or
roll
pop
inc
ret
cmp
mov
cmpsb
add
add
iret
cmc
stc
sbb
push
or
int
je
out
scas
psubb
jae
sbb
mov
add
xor
push
cmp
out
and
pop
push
push
test
sbb
scas
imul
aam
mov
or
push
int3
mov
mov
xchg
dec
mov
push
sbb
xchg
and
mov
mov
shlb
out
out
daa
dec
inc
das
sub
dec
ds
jge
int
std
incb
jo
cs
push
push
sti
push
cmpsl
dec
push
lcall
cmp
mov
mov
push
jecxz
push
clc
dec
loope
sbb
push
cmp
sbb
xchg
cmp
test
cmp
sub
rclb
in
aam
add
cmpsb
ljmp
xchg
icebp
sti
test
test
push
mov
mov
mov
stc
and
add
jl
std
movsl
inc
and
jmp
lods
jbe
lods
daa
mov
ja,pt
in
cmp
dec
mov
sar
add
outsl
push
iret
inc
cltd
sbb
fadd
daa
iret
shlb
test
push
jmp
fisttps
pop
add
sub
mov
push
stos
lods
int3
aas
fisttps
pop
sbb
xor
iret
fisubl
fidivrl
mov
cwtl
ja
jg
push
pop
adc
pop
jns
aas
js
aad
inc
push
sbb
lds
pop
add
into
lds
pop
and
movsb
das
test
cli
sub
or
sbb
jno
jmp
test
and
or
insw
std
lods
addl
adc
or
and
cmp
cmp
mov
cmpsl
or
aad
test
jbe
mov
test
ror
and
lock
cwtl
sarb
lret
popa
cmp
aad
loopne
es
rcr
orl
ss
pop
int
inc
rcrl
ucomiss
in
xor
jecxz
push
ret
cltd
outsb
inc
stos
jmp
cmp
add
in
repz
lret
jo
mov
mov
pop
push
inc
imul
stos
sbb
into
pushl
std
ja
out
ja
inc
out
sbb
data16
xor
cmp
adc
dec
mov
sahf
les
sub
data16
pop
mov
aas
clc
es
enter
cwtl
sub
jne
jb
xor
cmp
or
lods
pushf
notb
cmp
adc
punpcklwd
cmpsl
mov
xor
filds
push
stc
and
imul
test
jl
js
push
andb
lahf
xchg
push
bnd
jno
daa
iret
fs
xchg
jbe
fstpl
xor
cmp
push
into
sbb
pop
mov
aad
xor
outsl
sub
pop
aas
or
adc
inc
aad
pop
daa
xchg
adc
testb
addl
and
pop
and
ja
adc
sbb
imul
xchg
scas
push
js
sub
add
mov
xor
jl
or
push
jp
xchg
push
sub
enter
imul
mov
add
in
pop
lcall
cmp
imul
into
sub
pop
flds
mov
mov
jle
daa
and
mov
or
push
shll
ret
cmp
gs
pop
cmp
cs
sbb
ss
sbb
inc
arpl
sahf
push
dec
cmpb
mov
sahf
das
lret
sbb
dec
dec
enter
iret
mov
ror
push
js
dec
popf
daa
lds
mov
sti
and
mov
leave
leave
jmp
into
push
xor
ds
sbb
xor
into
ds
hlt
das
adc
jmp
jecxz
push
xchg
ret
pop
bound
mov
sahf
lods
adc
test
iret
jg
inc
jne
mov
ja
jg
cmovns
sub
mov
push
and
lods
xchg
testb
or
jge
mov
out
sahf
pop
pop
xchg
xchg
pop
inc
loop
pushf
les
fidivrs
nop
loope
pop
loop
cmpsl
add
into
subb
lret
push
sbbl
pop
cmp
in
insl
xorb
inc
movsb
mov
js
aam
dec
in
rolb
out
cli
xor
cmp
fnsave
sub
inc
cmpsb
pmaxsw
push
jne
cmp
lret
sbb
cmpsl
push
lret
int3
adc
rcrl
pop
xchg
push
sbb
sub
into
stos
xchg
mov
mulb
cmp
arpl
inc
push
jecxz
ret
mov
xchg
jne
sbb
lock
icebp
add
mov
mov
jg
cmpsb
dec
sub
rcrb
push
fistl
lcall
and
adcb
bound
aaa
stc
add
imul
call
scas
ficoms
imul
mov
movsl
sbb
lahf
and
jbe
xchg
sbb
lock
std
test
notl
mov
and
clc
mov
aam
inc
je
dec
js
and
and
jnp
jnp
into
in
jmp
cld
xor
int
dec
cmp
popa
pop
pop
adc
sub
xlat
popf
lods
aas
mov
shrl
nop
sub
adc
stc
push
hlt
mov
das
insb
outsb
dec
outsb
out
push
gs
inc
jp
sbb
ret
scas
or
push
les
jb
jge
sahf
xchg
fsts
xor
xchg
cmp
out
xchg
inc
sub
in
ret
fs
xor
dec
cwtl
mov
mov
jns
mov
gs
dec
lods
cwtl
pop
jb
test
mov
cwtl
xchg
popf
loopne
insb
mov
cmp
or
pop
outsb
lret
jp
dec
imul
into
mov
out
bswap
sbb
cmp
jmp
mov
mov
jmp
mov
add
scas
inc
or
xor
mov
das
pushf
xor
push
out
jne
repz
push
pop
dec
xor
mov
inc
mov
dec
adc
xor
fdecstp
cmpb
jbe
cmp
dec
cmp
dec
push
jmp
stc
imul
lahf
xchg
pop
mov
mov
insl
add
mov
aad
jmp
push
xor
out
insb
sbb
jnp
lret
das
jmp
xchg
out
in
xor
repz
and
adc
add
call
pop
mov
outsl
inc
mov
cli
test
testb
je
xor
mov
js
mov
mov
mov
mov
fwait
in
pop
pop
int3
xchg
mov
mov
mov
ret
cld
faddl
jo
xor
icebp
nop
adc
je
and
fst
add
imul
xchg
lret
or
pop
or
xchg
jne
test
lods
loop
ds
push
push
popf
jmp
pop
dec
lods
jge
in
call
jg
or
push
out
inc
xchg
mov
mov
dec
inc
add
pop
xchg
shll
xrelease
add
cld
inc
pushf
pop
aaa
fwait
mov
pushf
inc
pop
cmc
in
stos
stos
xchg
out
scas
xor
int3
inc
sarl
loope
pop
mov
lcall
cmp
stc
js
shrl
cmp
jbe
xchg
popf
repnz
sarl
imul
jno
pop
enter
adc
pop
jl
xlat
ss
fstps
xchg
sahf
push
or
add
push
and
and
push
push
xor
mov
je
dec
push
sbb
xor
aam
xor
insl
lock
dec
mov
fs
xchg
and
lods
mov
pop
inc
shll
jge
cwtl
enter
stos
leave
push
imul
add
cs
sub
mov
outsl
cs
xchg
or
or
cmp
sbb
and
dec
das
ret
jge
add
enter
roll
sbb
sbb
lahf
mov
jmp
into
inc
and
test
push
cmc
imul
and
pminub
lret
inc
imul
je
pop
mov
cltd
or
popa
mov
push
mov
jo
rcll
ja
cmp
orl
cmp
sbb
add
xchg
sbb
inc
cmp
mov
xchg
in
push
add
test
push
fxch
mov
imul
push
gs
hlt
into
sbb
cmp
cmc
aam
fildl
jnp
aam
fbld
cmp
pop
in
pop
lock
mov
mov
mov
iret
or
or
popf
pop
mov
lret
hlt
cmp
adc
outsl
xchg
sub
in
push
xchg
or
mov
into
popa
pop
jge
mov
in
mov
cmc
jns
in
xchg
loope
push
xchg
call
mov
shrb
mov
push
or
sbb
sub
and
outsl
or
es
int
jl
and
push
inc
xchg
mov
sub
outsb
push
pop
push
popa
jbe
mov
sub
pop
repz
pop
mov
mov
jg
push
mov
xor
xlat
mov
cli
xchg
xchg
out
push
in
push
jmp
pushf
mov
sbbl
js
xchg
inc
jno
iret
ds
lret
test
cmc
xchg
sbb
iret
sbb
jp
cmp
xor
fwait
mov
add
and
sub
fdivrl
packsswb
adc
dec
add
fwait
xchg
or
bound
jnp
mov
adc
mov
repz
mov
adc
sarl
and
sbb
andl
loope
lock
mov
negl
mov
cmp
cmp
cs
cmp
js
dec
adcl
jecxz
fnsave
dec
repnz
push
and
cmp
in
rclb
divl
mov
push
mov
test
sarl
pop
cmpsb
rorl
and
jmp
sub
ret
repz
pop
mov
cli
cld
in
pop
sbb
and
jae
cli
outsl
mov
xchg
xchg
mov
fmull
pop
fdiv
movb
stc
je
faddl
aas
ljmp
fistpl
cmpsl
add
hlt
cmpsl
sub
push
jmp
or
dec
cmpsl
inc
or
cs
test
ds
xchg
in
sub
mov
out
inc
in
mov
mov
aaa
sub
int
cld
bound
xchg
xchg
mov
std
xchg
pop
sbbl
sbb
push
xchg
jge
or
add
add
sbb
lret
add
js
jmp
xor
mov
incl
in
pusha
aaa
or
out
stos
add
add
mov
ja
xlat
or
and
mov
lret
les
daa
daa
mov
cmp
ja
xor
push
ja
jne
fstpl
repnz
pop
jbe
xchg
repz
push
outsb
pop
cwtl
ss
data16
or
scas
sub
xlat
pop
xchg
push
dec
xor
mov
mov
stc
mov
lret
out
ss
les
ja
jbe
adc
xchg
sbb
lahf
scas
dec
pop
adc
lahf
test
jne
pop
nop
mov
je
jg
mov
dec
out
aad
ficomps
pop
add
or
pop
cmpsb
xor
xor
push
xchg
lret
mov
jle
xchg
in
scas
jl
repnz
jb
adc
push
mov
xchg
dec
lods
mov
pop
fsqrt
xchg
out
mov
xchg
xor
movsl
jne
pop
sbb
rcrl
push
imul
xchg
add
pushf
inc
std
xchg
cmp
push
mov
mov
lods
dec
and
mov
aaa
jnp
jp
loop
cmp
imul
stos
dec
enter
out
xlat
jns
outsb
and
or
push
dec
add
mov
push
fcompp
lea
bound
iret
dec
subps
push
jmp
aas
frstor
push
xchg
cmp
mov
shlb
sbb
cmp
jb
adc
mov
in
gs
jg
das
sti
adc
dec
pop
mov
add
mov
xor
xchg
lret
xor
iret
jne
and
sbb
jp
sti
addr16
les
and
lcall
aam
aas
mov
rcrb
rorl
mov
bound
mov
lea
lods
jne
loope
pusha
sbb
pop
popf
adc
mov
mov
ret
inc
jle
bound
mov
mov
xorl
cwtl
nop
sub
jne,pt
cmp
ret
les
ret
and
repz
test
test
lret
vmovdqu
mov
push
lcall
and
pop
inc
sbb
mov
dec
or
subl
imul
xchg
test
jno
mov
fildll
lods
lahf
int
cmp
inc
jl
mov
notb
inc
stos
insl
jbe
pavgb
mov
pop
inc
jmp
mov
lea
add
fadds
jl
xchg
subb
loop
les
fnstsw
adc
aam
mov
daa
or
imul
add
movsb
divl
cs
imulb
inc
push
inc
dec
ljmpw
imul
lret
cmpsl
adc
ds
mov
mov
xchg
test
lret
push
dec
inc
lret
mulb
jp
sarl
lahf
and
das
test
fdivr
dec
dec
test
ss
scas
out
jmp
push
mov
and
jecxz
or
aad
mov
mov
xor
mov
je
jo
xchg
and
sarb
ret
jns
mov
sbb
mov
call
mov
sub
or
clc
mov
sub
push
sbb
mov
and
aaa
jecxz
cmp
inc
add
or
fdivr
xlat
sub
movsl
imul
jecxz
jmp
jnp
aam
bound
sbb
lods
xchg
insl
lods
scas
mov
add
fidivrs
fdivr
xorb
shr
fwait
xor
lods
jg
or
fnstcw
cs
insl
cs
mov
xor
mov
lea
and
or
lea
out
sbb
outsb
out
adc
aam
and
xchg
mov
lds
imulb
sub
jmp
xor
mov
mov
mov
lods
and
adc
fbld
cwtl
or
fidivrs
imul
or
and
shlb
jnp
jle
sbb
das
push
inc
pop
xor
mov
add
stos
mov
jmp
sub
cmpsl
inc
or
adcl
mov
add
mov
mov
mov
dec
int3
mov
lock
dec
xor
mov
sub
stos
loop
mov
sbb
lret
push
dec
scas
jns
test
cld
mov
shl
rorb
fistpl
add
lahf
mov
pop
jmp
add
nop
mov
sarl
sub
loopne
test
in
aam
ret
call
sbb
jne
jg
fistps
sarl
ret
aas
mov
lahf
or
pop
nop
dec
and
nop
gs
lds
sti
pop
mov
in
fsubrl
jl
jnp
add
jl
decb
push
jne
jbe
sbb
or
sub
pop
xor
xchg
and
push
sub
insl
inc
mov
and
mov
mov
int
addb
stos
cwtl
pop
and
mov
leave
lods
pop
cmp
sub
sub
test
test
adc
xchg
adc
mov
pop
js
jmp
xchg
sub
xchg
mov
cltd
shll
and
arpl
cmpl
sub
mov
xor
mov
and
aas
addr16
inc
popa
in
and
pop
enter
mov
in
mov
cmpb
rcll
xchg
mov
lock
add
push
cs
jg
inc
mov
ret
adc
pop
xchg
negl
hlt
xchg
ds
sbb
sub
mov
sub
add
push
push
inc
and
mov
repz
ret
inc
mov
inc
jbe
and
pushf
pop
mov
add
inc
mov
push
fidivrl
dec
lock
leave
rcrl
popf
push
push
sub
jge
int3
gs
popa
shrl
movb
adc
pop
inc
loope
sub
insl
mov
fbld
add
aas
cmp
popf
fs
lea
ret
inc
outsl
xlat
cmp
mov
out
mov
jmp
cmp
insl
jne
dec
xchg
in
int3
cld
pusha
mov
add
push
cmc
adc
inc
jp
ljmp
out
pop
inc
xchg
sbb
ss
cwtl
push
lret
mov
adc
inc
add
sahf
int
inc
lret
in
test
fisttpll
push
mov
mov
adc
in
push
adc
jbe
ret
xor
rcr
inc
daa
pushf
xor
outsb
into
jl
push
or
repnz
mov
imull
test
icebp
adc
mov
mov
lret
inc
fdivl
es
push
ror
mov
add
mov
push
popa
mov
mov
dec
adc
orb
sub
xchg
mov
cmpsb
cmp
dec
push
movsb
sarl
mov
addb
fnsave
add
or
bound
imul
push
inc
fs
mov
hlt
andl
sti
adc
xor
test
pop
into
shll
das
movsl
or
and
in
ret
sbb
adc
cmp
mov
pusha
mov
adc
adc
adc
fiadds
idivb
gs
hlt
dec
das
dec
pop
sahf
shr
loope
and
outsl
repz
arpl
out
in
pop
enter
push
pop
ret
outsl
mov
dec
dec
add
mov
aam
or
clc
jl
and
jb
bndstx
push
mov
fsts
test
push
js
outsl
add
fldt
mov
sahf
adc
mov
shll
pop
rcr
pusha
subb
xchg
pop
dec
jne
jae
xchg
xorl
test
xor
mov
cmp
hlt
cmp
hlt
inc
testb
inc
repz
adc
push
cmp
in
jbe
sbb
call
ljmp
inc
loope
insl
call
cmp
pop
divb
push
sub
imul
mov
rorl
aam
imul
inc
mov
xchg
jp
and
push
loop
push
jg
scas
aaa
lods
fisubrl
mov
cmpb
les
subb
dec
push
jecxz
inc
mov
cmc
jne
icebp
sub
and
out
iret
out
sub
jne
sbb
push
int3
aas
into
mov
fimuls
hlt
pop
sub
dec
imul
or
pop
cli
sbb
sbb
dec
fcoml
cmpsb
push
mov
pop
out
jno
sub
stc
test
mov
mov
repz
mov
dec
cmp
stc
movsb
mov
xorb
imul
dec
pop
mov
sarl
mov
addr16
div
add
and
xchg
sbb
call
push
mov
fstps
fidivrl
jb
aam
and
movsl
cli
mov
xchg
lahf
push
clc
xchg
mov
sub
inc
jecxz
das
bound
cmp
stc
lds
and
movsl
orl
mov
negl
mov
cmp
add
bnd
outsb
insb
jb
pop
scas
hlt
mov
mov
jae
loopne
xchg
add
test
aaa
pop
push
sahf
imul
ret
jmp
pop
jnp
and
inc
test
xchg
cs
mov
pushf
push
pop
inc
jecxz
add
hlt
push
jbe
mov
lret
xor
jae
roll
pop
es
mov
adc
pop
test
pop
lret
call
push
mov
jp
bound
nop
lods
and
pushf
xor
mov
adc
sarl
add
mov
sti
stos
and
ret
fildl
xchg
xchg
popf
roll
and
fnstenv
cs
cmp
mov
ss
fsts
mov
out
daa
xor
mov
cmp
and
jnp
xor
aam
enter
cmpsb
loope
push
ss
sbb
aam
jle
pushf
outsl
jns
pop
pop
or
aaa
scas
outsl
aas
sub
push
loope
mov
leave
add
cld
inc
mov
sub
addb
aam
jnp
repnz
jnp
jno
xor
xchg
lea
sbb
sbb
lock
inc
xor
mov
jle
jne
arpl
repz
ret
ret
cltd
inc
aaa
jnp
inc
sub
dec
and
notl
jno
outsl
mov
mov
cli
loope
lds
add
add
js
test
inc
pushf
push
ja
pop
pop
div
fnstenv
adc
fidivrs
jae
mov
lret
and
lcall
xchg
in
jnp
repnz
mov
lret
xchg
loope
nop
aaa
je
adc
test
mov
aas
xor
sub
outsl
push
ret
ret
scas
stos
xchg
imul
push
cli
pop
xchg
jp
dec
push
sub
fyl2x
mov
dec
mov
shll
stos
or
push
push
mov
jnp
push
xchg
dec
dec
xor
ret
mov
fcmovnu
add
arpl
dec
add
out
call
lret
call
int
rcl
dec
lods
xchg
mov
mov
push
and
pop
aad
jns
lret
jo
lock
inc
in
sbb
and
jle
adc
pop
fdivr
sbb
push
lret
movsl
scas
fistps
jmp
popf
stos
push
out
loop
push
jbe
push
pushf
les
ss
in
dec
leave
pop
mov
adc
aaa
lea
das
cmpl
mov
aaa
test
sbb
push
dec
jmp
ds
jle
outsl
in
adc
inc
test
addr16
mov
push
lea
add
dec
std
loopne
pop
inc
inc
pop
dec
test
addr16
mov
rcr
mov
daa
or
xlat
scas
stos
cmpsb
adc
dec
insb
pusha
dec
xor
popf
bound
and
lret
fldl
xchg
in
das
mov
and
int
or
cmp
pop
push
or
or
and
shr
push
out
push
push
ss
rcll
push
push
fnsetpm(287
xchg
cli
arpl
adc
inc
ret
pop
add
pop
push
cs
insb
dec
sbb
push
into
pop
out
push
push
aas
test
pop
pop
rol
xorl
pop
push
push
dec
mov
ss
push
or
inc
dec
icebp
adc
jns
jmp
mov
cltd
sbb
dec
cmp
jge
sbb
loop
imul
outsb
clc
orb
adc
addr16
adc
push
mov
daa
cmp
mov
and
jns
test
mov
add
imul
mov
adc
das
mov
jmp
daa
lea
aad
int
xor
or
xchg
xchg
mov
mov
mov
xlat
adc
push
adc
shlw
ret
jg
ss
mov
adc
mov
stos
cmp
cltd
loop
add
mov
push
shl
jb
repz
pop
inc
jo
cmp
insl
adc
mov
enter
dec
popa
or
cmpsb
adc
loopne
lret
popf
icebp
mov
pop
in
js
adc
dec
adc
bnd
sub
ljmp
repnz
fdivrl
sub
rorl
repnz
mov
lods
arpl
and
xchg
xchg
cmp
out
mov
jbe
adc
shll
rclb
and
ja
or
xchg
dec
fst
xlat
pop
cmp
idivl
lods
mov
addr16
pushf
stos
fldl
hlt
inc
fucompp
mov
xor
xchg
sbb
push
leave
sar
aas
seta
cmc
daa
int
sbbb
pop
jo
ret
pop
sbb
shll
jnp
and
mov
aam
inc
cmp
rorb
push
push
in
stos
mov
data16
and
inc
call
push
mov
arpl
test
movsb
lret
mov
mov
and
xor
repnz
jg
inc
les
fs
inc
push
mov
push
xor
out
es
imul
cltd
jns
scas
inc
and
and
dec
jge
pop
and
lahf
mov
sti
push
fwait
lds
xchg
outsb
adc
mov
jb
mov
ljmp
pushf
xchg
clc
sbb
or
mov
les
pop
es
lea
push
add
mov
xchg
nop
mov
jecxz
fildll
int3
mov
rcl
shlb
aad
es
or
cld
scas
pop
arpl
xor
dec
js
int
pop
jnp
adc
and
xlat
jle
xor
mov
add
loope
or
xchg
into
orl
call
or
jp
push
aaa
andb
enter
xchg
out
daa
loop
call
push
mov
jns
pop
xchg
dec
imul
bound
sub
mov
mov
push
sub
das
scas
mov
xchg
or
push
pop
mov
inc
jg
lahf
xchg
xchg
mov
jmp
pop
xor
shll
addr16
daa
dec
dec
or
mov
cmp
adc
lods
enter
adc
es
hlt
sub
int3
stc
xor
data16
push
pop
rorl
decb
cltd
sub
orb
sub
fstps
aad
fnstsw
lods
adc
sbb
xchg
pop
cmp
jb
sbb
dec
dec
imul
or
out
ret
scas
sbb
mov
fs
dec
sub
sti
fdiv
aas
out
ljmp
jg
sbb
jbe
pusha
mov
movsl
bound
dec
arpl
shr
mov
mov
int
and
mov
fdivs
pop
xor
xor
push
shll
xchg
xlat
sahf
mov
adc
clc
mov
pop
push
pop
push
out
pusha
pop
jns
or
ja
test
outsb
cmpsl
push
sbb
push
mov
mov
mov
stc
add
shlb
lock
cmpsw
adc
jbe
cmp
out
jb
mov
mov
and
fcomi
push
movsl
mov
jbe
jge
in
std
pop
and
jmp
and
in
fdiv
sbb
jmp
inc
in
sar
inc
dec
repz
aad
mov
neg
push
jge
pushf
xchg
hlt
pushf
cmc
aam
aaa
push
imul
bound
or
lods
neg
xlat
or
les
push
insl
push
adc
pop
mov
jl
lock
nop
mov
mov
sti
mov
inc
xchg
popa
ret
stc
xor
fwait
cmc
jmp
jl
cmpsb
outsb
push
mov
mov
and
addr16
in
popf
jb
sahf
jp
imul
sbbb
andb
sub
jnp
lsl
rcrl
sarb
mov
pop
cmp
int
jne
idivb
and
jno
adc
movsb
adc
mov
push
popf
xchg
leave
adc
mov
lret
mov
scas
ret
cmp
lahf
jge
ret
nop
mov
add
mov
lock
addr16
dec
sub
or
nop
adc
push
xchg
mov
xchg
fsubs
into
shl
cwtl
mov
shl
xchg
mov
xchg
sbb
iret
xor
clc
mull
out
dec
pop
out
enter
jecxz
xchg
mov
out
dec
mov
add
or
lret
pusha
jo
sar
inc
push
pop
lret
push
mov
fldt
push
pop
cmp
out
repz
loope
mov
push
mov
cld
pop
dec
loope
push
popf
jp
inc
dec
pushf
mov
push
flds
loopne
inc
insb
xchg
adc
sub
sub
inc
pop
xchg
cwtl
mov
push
popf
fucomp
mov
dec
shll
pop
sub
icebp
lock
jmp
stos
dec
pop
sub
mov
xor
inc
xchg
outsb
xchg
mov
test
and
aaa
lds
lds
sub
cltd
lret
mov
lret
or
nop
mov
lcall
mov
testl
pop
xchg
mov
and
mov
fdivs
shlb
call
filds
push
mov
pop
popf
cli
sub
out
cmp
jo
call
or
xlat
fsubl
das
sbb
cmp
jp
jge
ja
in
dec
adcl
mov
gs
cmp
xchg
and
cmc
inc
std
cmpsb
push
mov
aas
sub
push
iret
mov
mov
clc
cltd
mov
mov
into
jg
pop
rcll
xor
xchg
pushf
sbb
cmp
int
enter
cmp
cmp
repnz
ficoml
or
mov
pop
sti
or
mov
icebp
loop
push
out
data16
add
lcall
push
imul
xchg
inc
test
outsl
rorb
mov
rcll
xchg
ret
inc
mov
icebp
push
add
scas
dec
negl
mov
mov
and
and
test
inc
mov
and
mov
or
xor
mov
data16
jbe
das
cltd
push
fdiv
into
popf
push
cmpsb
aad
rolb
rcrb
in
aam
in
dec
or
shr
xchg
xor
outsb
jmp
sub
pop
scas
pop
das
fdivr
pop
fmulp
cmp
cwtl
cmp
fistl
stos
aaa
push
insb
test
dec
jle
fiaddl
loop
push
jg
mov
mov
aas
lods
dec
sbb
das
sahf
ljmp
mov
mov
sub
loopne
fadds
xchg
inc
stos
int3
jmp
jae
jne
lcall
clc
sahf
insl
adc
loope
dec
mov
sbb
and
fildl
dec
mov
adc
je
push
inc
nop
fnstcw
lret
xchg
add
ja
shr
xor
popa
ds
cmp
sub
mov
dec
fwait
cmp
hlt
jle
iret
sbb
test
dec
add
cmp
jge
xchg
cld
mov
xchg
mov
fsubs
pushf
jnp
lahf
cmc
out
mov
repz
and
mov
in
insl
fdiv
xor
loop
dec
and
bsf
pushf
mov
pop
sar
stc
cmp
mov
push
mov
or
mov
mov
adc
fdiv
sbb
je
sbb
iret
sbb
add
test
add
iret
jl
push
pusha
std
push
test
test
test
gs
mov
jbe,pt
adc
daa
stc
xchg
je
js
add
ja
in
push
adc
jno
xor
and
loop
xor
dec
lods
add
scas
dec
xor
mov
cmp
ret
outsl
and
pop
stos
xchg
or
sbb
insl
mov
mov
xchg
lea
jno
mov
jg
je
cmpsb
fisubl
out
xchg
or
pusha
fnstcw
outsl
mov
int
mov
sbb
xor
pusha
inc
popa
clc
add
add
sbb
cmp
in
sub
scas
lahf
adc
lret
cmc
enter
shrb
xchg
cltd
and
xchg
imul
xor
insb
out
addr16
pop
aad
mov
ss
icebp
out
add
jbe
std
lcall
mov
loop
lods
ja
loopne
or
aam
js
leave
pop
das
fidivs
mov
mov
push
out
aaa
lock
leave
dec
fucom
leave
mov
out
testb
sti
inc
push
and
icebp
dec
inc
dec
jmp
push
xchg
adc
ret
xchg
fwait
lods
arpl
cmpsb
sbb
sarl
cwtl
psubd
loopne
inc
out
pop
ret
mov
pushf
in
das
pop
cmovs
pop
or
push
andb
lea
movsb
loopne
and
out
leave
cmp
fdivs
into
mov
aam
sub
cltd
mov
in
or
ss
adc
sbb
push
xchg
popa
sahf
jb
push
mov
jmp
mov
sbb
pop
pop
pop
mov
mov
xlat
mov
stc
popa
arpl
gs
mov
sbb
pop
sbb
dec
dec
push
inc
pop
mov
jo
pop
push
cmp
orl
movsb
cmp
inc
pop
test
ret
and
lea
cli
adc
sub
lods
dec
sub
fcomip
movsl
jmp
in
xorl
jge
dec
and
jo
popa
sbb
stc
mov
adc
and
push
cmpsl
sarl
pushf
ret
mov
fcmovb
jns
inc
xor
fcom
loop
mov
sbb
bound
adc
out
shll
or
in
shlb
add
frstor
loope
jno
fs
xchg
pushf
add
and
bound
test
lods
imul
xchg
cmpsl
repnz
xlat
repz
mov
pop
idivb
pushf
sub
scas
fsubl
jge
gs
add
xchg
sub
or
pop
dec
repnz
and
jae
lea
sar
xchg
shlb
and
test
enter
iret
xchg
xchg
mov
xor
pop
push
cltd
inc
insl
insb
and
jp
adc
pop
jbe
jne
leave
jae
popf
mov
inc
insb
in
jnp
insl
jp
mov
xchg
adc
mov
or
pop
sti
mov
fstl
add
in
imul
or
cmp
xchg
mov
add
call
in
pop
mov
mov
aaa
pop
stos
mov
rclb
jecxz
popf
mov
push
sbb
cmp
cmc
adcl
in
dec
addl
lret
mov
mov
cmpsl
mov
and
cmp
xchg
sbb
mov
stos
and
jle
mov
cmpsb
loope
das
push
sub
pop
mov
fwait
sti
cmpsb
mov
xorl
jb
aas
or
adc
leave
push
mov
mov
decl
adc
fldt
ds
dec
jo
sbb
inc
or
dec
push
in
push
es
xor
jl
xor
xchg
dec
js
shlb
lea
cmovl
sbb
shll
add
pop
inc
lcall
rcll
stc
pop
xchg
jp
lea
sbb
push
dec
push
aad
sub
int3
mov
pop
lds
call
lea
and
clc
pop
jne
lds
mov
mov
test
out
iret
stos
cltd
push
add
sahf
aas
push
jecxz
push
xchg
shlb
or
jge
sub
fdivr
ret
movsl
push
mov
dec
pop
xchg
scas
mov
enter
or
cmp
mov
test
sub
ss
and
cmp
ss
ret
mov
push
or
xchg
xchg
jge
enter
pop
mov
and
sub
mov
dec
cmpsl
addr16
dec
scas
inc
push
cmpsl
jge
pushf
into
in
int
or
cmp
or
xchg
cmp
fwait
sub
add
mov
test
sub
push
test
mov
xor
popf
ret
popa
stos
add
loop
aaa
push
mov
mov
leave
lahf
fimull
xchg
imul
imul
jecxz,pn
loopne
lcall
ficoms
test
and
hlt
add
mov
xchg
inc
imul
mov
hlt
mov
xor
cmp
mov
and
cmp
jp
and
aas
test
xchg
sbb
pop
in
int3
or
mov
and
mov
jno
add
push
lret
or
movsb
in
leave
fdivp
jp
sub
mov
push
sub
inc
ss
pop
fs
pusha
mov
pop
ret
pop
or
mov
lret
fisubl
xor
adc
dec
popf
xor
pusha
cmp
and
scas
sub
popa
and
mov
adc
lret
pop
cwtl
stos
xor
mov
test
fwait
push
xchg
and
fwait
lods
push
test
fcmovnu
lahf
push
and
push
lock
sbb
adc
mov
jns
pop
mov
mov
add
push
xor
out
data16
inc
data16
jp
xor
sti
xor
imul
push
notl
jle
mov
fmuls
add
das
inc
jne
push
dec
mov
mov
jp
outsl
inc
mov
les
leave
rcr
ljmp
mov
xchg
adc
notl
jecxz
mov
cmp
stc
sub
cmpsl
out
xor
test
mov
add
push
sub
movsl
movsl
mov
jp
push
sub
rol
movsb
mov
shlb
push
lods
push
mov
dec
push
imul
das
in
push
nop
cmp
movsb
inc
cwtl
ljmp
lcall
mov
cwtl
fdivrl
adc
sub
lret
out
push
fldcw
jmp
cwtl
pop
fucomp
cmpsb
int
lahf
fidivl
adc
push
xchg
dec
imul
fwait
push
mov
pop
sub
scas
jg
jbe
out
shl
mov
aaa
test
int3
mov
or
inc
aaa
jnp
in
shll
inc
push
jmp
ljmp
iret
mov
or
fdivrs
cmp
xchg
std
loope
in
sub
aaa
push
out
mov
arpl
adc
adc
stos
divl
xor
fstpl
pushf
fdivs
mov
ds
test
sub
pop
ret
and
mov
add
cwtl
stc
int3
jmp
and
mov
jge
inc
je
fwait
inc
shll
test
sahf
std
push
loop
push
and
test
ds
cmp
inc
adc
movsl
sub
fwait
loopne
jae
leave
jl
fdivrl
stos
hlt
addr16
out
cmp
mov
xchg
adc
cmp
popa
mov
push
push
rclb
lahf
cmp
repz
popa
push
loopne
adcb
push
pop
fcoml
fdivrp
sar
mov
jno
and
stc
fs
sub
fs
loop
jae
ljmp
push
jae
inc
insl
push
lea
and
pop
js
xchg
es
sub
xor
lret
sub
and
jb
jle
les
dec
xor
xor
or
inc
jb
int3
xor
mov
adc
sbb
adc
mov
rorl
imul
mov
ficompl
loopne
adc
cmpsw
in
lret
call
out
mov
xor
jne
out
fs
and
xor
inc
insl
popf
loope
push
lock
jmp
pusha
push
subb
inc
cmp
aad
fwait
or
roll
arpl
push
push
lret
fs
mov
shr
mov
pop
mov
inc
sbb
cltd
insb
mov
aaa
dec
fidivs
inc
jg
pop
mov
xchg
sar
mov
movsb
sbb
je
dec
and
mov
and
jp
or
sub
imul
mov
lock
jle
jmp
mov
inc
or
or
ljmp
leave
ret
rcr
fmul
mov
notl
xchg
xchg
xchg
pushf
and
loope
fwait
xor
lea
xor
push
xlat
ljmp
jnp
fldcw
popf
cltd
and
lock
push
jns
in
fwait
je
push
or
push
pop
int
mov
add
xor
fdivrl
arpl
mov
enter
fistpll
mov
xchg
or
scas
nop
sbb
dec
popa
ss
repnz
cmp
loop
mov
cmp
aam
sub
mov
divl
jne
push
jg
aad
adc
lret
das
adc
jbe
hlt
aam
inc
dec
xchg
xor
notl
jo
dec
mov
pop
fs
test
add
movsl
sbb
jb
call
or
pop
rcrl
cmp
mov
sarl
mov
xchg
js
scas
jae
popa
xchg
int
inc
out
mov
lahf
push
call
dec
cmc
dec
xor
cmpsb
adc
inc
dec
inc
sbb
or
pop
adc
insl
pop
sbb
es
push
in
cmp
outsb
inc
xchg
idivl
dec
aad
xlat
in
or
sahf
rclb
lock
or
aaa
inc
mov
int3
xchg
ja
mov
stos
movsb
pop
shrb
adcb
and
jge
call
dec
out
sahf
cmp
out
sub
notl
call
pop
push
add
aam
movl
arpl
fstl
pop
pcmpeqd
jle
ljmp
fnstenv
mov
push
pusha
xchg
pushf
inc
lret
fildl
xchg
sarl
jmp
jnp
bnd
or
pop
aam
stos
or
fcoms
mov
aaa
aam
dec
fsubr
jl
imull
jns
ja
gs
in
mov
mov
mov
adc
sub
xchg
fsubp
and
ds
sbb
test
mov
out
pop
pushf
pop
or
add
adc
ja
std
fs
push
jns
ret
or
sub
and
mov
mov
xchg
repz
add
xor
out
and
mov
or
and
mov
pop
add
ss
sbb
adc
das
push
fstl
xor
lret
push
push
scas
dec
into
jbe
jne
dec
pop
mov
push
popf
pop
xchg
stc
add
gs
xchg
xchg
add
movsl
add
inc
jmp
jb
rclb
push
pushf
push
aaa
test
or
mov
insl
add
popf
xchg
sti
xlat
stos
jmp
xchg
les
xchg
xchg
repnz
or
std
mov
mov
int
sub
bnd
adc
int3
lret
mov
mov
iret
aad
lahf
add
in
in
add
sti
aas
mov
add
hlt
addr16
emms
pop
cmp
test
and
fimuls
test
mov
push
call
mov
push
insl
dec
test
ss
pop
inc
bound
sbb
xlat
inc
cs
out
aaa
jb
jmp
out
pop
sbb
dec
pusha
mov
lds
jne
test
lds
jge
test
dec
pushf
pop
pop
roll
adc
push
outsl
push
lahf
dec
ret
f2xm1
call
mull
dec
xchg
or
lret
scas
add
rcr
fildll
pop
loop
push
push
mov
mov
mov
cmpsl
call
dec
frstor
lahf
mov
mov
adc
cmpsl
adc
and
movsl
je
inc
fnstsw
pop
mov
mov
icebp
outsl
jnp
mull
hlt
subl
or
mov
xor
dec
sbb
fwait
mov
cmp
orb
mov
dec
jne
pop
xchg
lcall
pop
into
in
jo
lcall
xchg
rcrl
jbe
cmp
inc
das
aas
adc
mov
pop
sbb
sbb
insb
out
ret
outsl
xor
test
mov
adc
aad
cli
sbb
scas
out
mov
lea
or
pop
or
rorb
adc
or
jns
sarb
rcrl
adc
dec
mov
jnp
sub
adc
out
push
int
ss
rorb
xchg
mov
iret
ret
mov
jmp
mov
test
inc
gs
outsl
imul
std
in
ljmp
fucom
inc
pop
mov
clc
and
jge
adc
jne
fisttps
pop
loopne
nop
outsb
add
rcll
inc
nop
js
into
ret
ljmp
pop
xchg
ds
mov
adc
into
jo
jl
dec
mov
sub
mov
les
imul
mov
icebp
jbe
push
xor
test
call
sub
daa
xlat
arpl
ljmp
add
xlat
ljmp
cmc
imul
cmc
inc
aam
int
into
loope
sbb
xchg
mov
mov
ja
sbb
xchg
lea
loope
lds
mov
in
push
and
push
push
bound
sub
cmp
lahf
and
lcall
ja
inc
dec
push
hlt
or
cmp
jge
mov
pop
jmp
mov
aaa
mov
int
dec
or
adc
push
xor
push
mov
mov
sub
repz
scas
xor
sbb
imul
sbb
std
mov
out
out
and
adc
cwtl
popa
xor
push
pop
or
xlat
jno
push
addr16
xchg
lds
hlt
inc
sub
mov
stos
adc
mov
push
jmp
pop
push
sub
aaa
sahf
leave
mov
jg
push
xor
enter
adc
jecxz
mov
cwtl
pop
push
lahf
out
mov
and
mov
push
xchg
in
cs
jecxz
cmpsl
cmp
and
mov
jb
dec
or
sub
fsubrl
push
pop
outsl
addr16
jp
loopne
stos
mov
and
add
dec
add
mull
mov
jns
subl
push
push
add
loope
mov
jo
mov
xchg
loope
sbb
dec
lahf
xor
std
int
in
out
mov
and
leave
mov
es
adc
scas
mov
scas
jge
decl
mov
mov
or
stc
cmpsb
test
idivb
mov
sub
xchg
jecxz
insl
fmul
or
jle
pusha
mov
out
out
xlat
icebp
mov
fsubs
pusha
mov
lods
pushf
sub
fwait
xor
shrl
cmpsl
xchg
cmp
sahf
dec
jo
cwtl
js
popa
lret
push
nop
push
pop
fistl
cmpl
push
ret
js
sbbl
pop
dec
shl
mov
inc
xor
xchg
pop
cmp
pop
iret
mov
push
inc
push
daa
and
sahf
insb
int3
xor
cmp
pop
dec
adc
outsb
ret
cltd
mov
xchg
subl
int3
rorl
mov
or
shlb
mov
cmp
or
shrl
pop
scas
adcb
jnp
stos
imul
ss
jne
repz
dec
sbb
push
mov
repnz
aad
test
pushl
mov
mov
icebp
inc
test
leave
mov
adc
jbe
ja
loop
cmp
jbe
ja
cmp
and
or
mov
leave
jmp
push
adc
add
sub
inc
out
inc
xor
scas
call
xchg
push
and
xchg
arpl
mov
sbb
add
fnstsw
mov
scas
pusha
pusha
cmc
fisubs
aad
rcr
cmp
jle
or
js
or
mov
xor
xchg
ss
mov
addr16
xor
add
sbb
push
inc
orl
int3
inc
jge
dec
jge
jl
aas
sbb
mov
cmp
and
sub
inc
jle
mov
sbb
clc
jo
loope
push
testb
dec
and
jp
daa
cwtl
inc
jno
and
lods
nop
pusha
stos
adc
outsl
jecxz
das
mov
pop
push
lods
lret
xor
jmp
mov
fmull
mov
rcrb
adc
cli
xchg
stc
fs
gs
push
and
sub
jmp
mov
lret
sub
jns
out
jo
push
dec
sbb
cmc
in
dec
test
pusha
mov
xorb
mov
ljmp
cmp
or
sub
inc
inc
add
shlb
imul
test
testb
lret
adc
sub
paddq
adc
enter
popf
adc
sub
cli
xchg
sub
mov
iret
jbe
lea
ret
sub
inc
push
std
jo
dec
push
sbb
lds
fisttpl
popf
cmc
or
pop
add
nop
cs
mov
shl
pop
lret
dec
lahf
andb
movq
fistpl
in
das
repz
adc
lret
sahf
in
into
dec
les
cmp
scas
cmp
add
push
jo
fstpl
imul
ds
fcmovnu
jmp
nop
or
rcl
lret
outsl
dec
aam
xchg
clc
sub
jg
dec
js
ret
sub
imull
cmpsl
xchg
inc
ret
sbb
ss
dec
xchg
cmp
sub
pop
cwtl
andb
jp
xor
mov
stos
cltd
arpl
mov
jno
lds
xor
add
add
jg
xor
adc
into
jb
stos
imul
or
stc
xorb
push
aaa
add
test
jnp
pop
sub
xlat
rclb
jle
js
cmp
cmp
fs
imul
mov
roll
inc
shlb
add
stos
xchg
adc
pop
mov
xchg
cmpl
jmp
daa
add
jns
or
sub
insb
shlb
xor
scas
jg
lock
iret
orl
push
pop
and
test
daa
mov
mov
adc
daa
cmp
out
popa
bound
lock
jnp
ljmp
test
cmpsb
sahf
xlat
pop
aad
lret
dec
cs
insb
das
push
sbb
push
out
std
icebp
movsl
jg
add
in
lods
lods
sarb
mov
insl
icebp
fistpl
adcb
ds
gs
sub
pop
and
mov
add
mov
test
icebp
and
sbbb
mov
dec
rorb
dec
mov
add
jnp
shlb
sub
inc
jl
sti
adc
sbb
push
jae
xchg
add
adc
sbb
inc
lret
in
cmp
fstl
dec
sbb
loope
out
mov
mov
mov
lods
fimuls
inc
fdivs
cmc
push
ret
inc
adc
sbbl
jb
cmpsb
add
push
push
push
mov
push
and
push
sbb
jnp
dec
lds
iret
outsb
inc
inc
fldcw
or
cs
jle
ss
sub
jp
shlb
push
sbbl
rorl
pop
std
jae
adc
imul
repz
adc
xor
fisttps
sub
jno
fldenv
pop
lods
dec
pusha
cmpb
jae
stc
icebp
rol
add
add
int
dec
pop
bound
cwtl
jl
sub
add
dec
cmp
pop
pop
sub
orb
pushl
lret
cmp
nop
push
out
sbb
ret
push
push
push
cmp
xchg
arpl
loop
iret
fcomp
shlb
xchg
insb
push
insl
repnz
imul
jne
push
xchg
push
cmc
mov
fmuls
lcall
testb
daa
jbe
inc
mov
and
ret
sub
mov
push
cld
mov
xchg
xor
leave
push
mov
lcall
pop
adc
sbbl
out
ret
lock
icebp
ss
call
mov
mov
cmp
fadds
ljmp
push
and
pop
push
aaa
lods
mov
mov
and
lahf
in
subb
add
cmp
jl
stos
mov
in
mov
in
add
cmp
mov
xor
mov
push
fdivs
jmp
dec
xchg
xchg
sbb
sub
push
adc
or
sbb
addb
dec
mov
aas
jmp
add
test
std
sbb
mov
fistl
subl
lret
push
xor
push
add
stc
sub
pop
sarb
add
rorb
or
push
mov
jae
jbe
movsb
ds
inc
in
aad
sub
add
fs
mov
aam
ret
cmpb
cli
lcall
mov
jmp
jae
push
outsb
dec
and
cmp
adc
sahf
sub
jne
je
aam
out
out
dec
xchg
push
or
xchg
adc
loop
push
mov
mov
and
lahf
push
stc
push
in
ret
in
inc
sbb
mov
or
leave
xchg
xor
mov
rcrl
mov
mov
ljmp
mov
test
mov
adcb
in
lods
jl
sub
bound
aad
push
mov
mov
or
lds
sbb
sbb
repnz
mov
mov
and
pop
xchg
jecxz
and
outsb
pop
cmp
int3
inc
lea
dec
fdivrl
sub
ds
nop
mov
dec
dec
lahf
adc
sub
jg
and
imul
stc
pop
mov
adcl
jl
movl
repnz
popa
mov
mov
sub
in
pop
fisttps
fbld
adc
xchg
and
popf
xor
inc
ss
dec
les
mov
fs
loop
mov
lret
mov
mov
sbb
dec
pop
push
imul
mov
sub
orps
aaa
fistpll
imul
pop
sti
shlb
mov
xchg
cmp
push
push
stos
int3
fsubl
inc
aad
das
bound
inc
cmp
repz
movsb
sbb
in
cmp
aad
dec
imul
or
pop
negl
inc
sbb
add
enter
push
push
mov
push
pop
aas
out
les
insb
dec
aas
repnz
add
sbb
jns
cmpsb
repnz
mov
jg
mov
sub
mov
pushf
enter
sbbl
rcrb
pop
pop
lcall
pop
out
cmc
js
xchg
fs
mov
xor
in
add
fisubrs
mov
push
ja
pop
cmp
jmp
cmp
inc
lods
dec
push
loopne
std
movsl
je
mov
sub
clc
jle
push
ljmp
stc
lea
or
aaa
sti
xlat
imul
pop
sub
pushf
lret
pop
arpl
mov
ljmp
cmpsl
lret
cmp
mov
andb
xchg
bound
mov
cmp
pop
sub
pop
fcos
loope
or
push
cmp
push
push
xchg
fsin
push
cmp
jl
jg
roll
arpl
xlat
cld
xchg
inc
inc
ja
insl
clc
dec
xchg
ljmp
sub
lahf
or
popa
into
rolb
ss
icebp
mov
cld
push
test
repnz
inc
lods
pop
enter
fwait
and
stc
fcomp
out
sti
mov
in
mov
jge
pop
in
adc
mov
xchg
das
mov
adc
ret
dec
rol
test
push
pop
out
and
in
cmpsl
sub
ljmp
jecxz
push
xchg
xor
ja
mov
icebp
ret
lret
in
inc
rcrl
pop
adc
pop
xor
pop
dec
iret
repnz
push
fs
cmpsb
mov
mov
mov
call
daa
outsb
gs
xor
sahf
test
jecxz
mov
sbb
jnp
outsl
loop
sarb
pusha
js
outsb
insb
and
and
ret
push
dec
adc
jnp
in
movsb
loop
and
xlat
adc
push
cmpsl
sub
stc
out
divl
mov
xor
cwtl
jp
mov
jge
cs
loop
dec
mov
ljmp
pop
rclb
je
in
or
mov
push
sbb
aam
test
out
inc
movsb
clc
adc
add
mov
inc
call
loopne
sub
sbb
pop
or
out
sub
pop
lret
lea
test
pop
fwait
inc
and
xor
cmpsb
mov
mov
iret
adc
ljmp
add
das
idivl
xor
dec
dec
je
push
outsb
test
in
lds
xchg
mov
sbb
fmuls
fwait
pop
scas
mov
hlt
cmc
shr
bound
adc
repz
and
jle
inc
lret
and
jno
gs
push
mov
or
mov
out
push
mov
push
les
adc
ret
mov
sbb
pop
in
sub
jge
loope
jno
aad
mov
es
setg
movsb
jo
pop
fnstsw
mov
inc
xor
adc
fdivs
arpl
iret
xchg
push
sub
testl
xor
daa
xchg
out
xchg
adc
test
daa
or
xchg
ret
add
or
mov
test
sbb
ud1
sti
ficompl
adc
andl
in
insl
aas
fisubl
or
jae
std
jg
nop
fildll
inc
mov
xlat
pop
cli
test
adc
scas
lods
pop
jmp
push
repnz
mov
lock
daa
call
incb
pcmpeqb
push
in
push
lods
push
cmp
or
push
jge
lods
or
push
or
dec
fistpl
outsb
cmp
out
nop
pop
pushf
dec
movsb
ret
lds
cmp
in
cmpsb
fsubp
test
pop
arpl
mov
inc
inc
imul
pop
aad
fimuls
fwait
mov
jb
pop
stos
cmp
stos
mov
jmp
popa
mov
lahf
das
lods
dec
inc
fmull
js
xor
es
jns
inc
xor
sti
adc
out
lea
in
in
sub
mov
mov
xchg
jb
divb
popf
fcomp
push
movl
stos
jmp
add
jbe
ljmp
addr16
loopne
icebp
ss
push
jp
inc
ja
jne
int
cmp
fcomps
xchg
fstl
lret
or
jae
xchg
and
mov
cmpb
sbb
push
jne
test
mov
mov
inc
inc
jno
or
xor
cmp
jbe
sub
sbb
mov
daa
xlat
inc
lods
dec
je
sbb
pop
stos
pop
adc
imul
cli
add
mov
pop
repz
ss
loop
sub
out
lret
mov
ss
mov
jno
cld
inc
mul
inc
inc
sahf
lods
call
pop
sbb
add
mov
in
sbb
out
cmpl
push
jb
inc
mov
lods
in
jbe
ja
sbb
pushf
fistpll
sbb
jecxz
mov
fbld
out
in
scas
push
push
push
js
pushf
lret
rclb
xlat
push
jns
test
jno
xchg
mov
cltd
xor
sub
pop
movsl
mov
xchg
enter
xor
neg
sub
add
inc
or
adcl
movsb
sbb
ja
mov
test
and
icebp
xchg
data16
cmp
outsb
loopne
cltd
pop
add
pop
pop
adc
in
push
loopne
push
testl
and
xchg
push
and
stos
popa
pop
sbb
sub
fstpt
test
test
addr16
ss
mov
xor
pop
sub
lods
pusha
bound
lods
jle
push
loope
lret
data16
push
imul
ja
mov
sbb
fimull
and
mov
cmp
mov
mov
in
stc
cltd
ja
aas
call
adc
loop
sub
fwait
cli
icebp
jns
push
cli
inc
cli
cltd
lds
mov
in
cmp
sti
sbb
jns
pop
cmpsb
inc
jp
jbe
cmp
adc
push
stc
add
adc
sahf
sbb
adc
test
xchg
in
and
ja
repz
sub
fs
push
rcrb
scas
int3
outsb
jnp
frstor
cmpsl
sbb
pop
push
and
add
push
sti
inc
xchg
mov
sub
es
push
and
outsb
sbb
sub
push
popf
sub
insb
insl
push
dec
sbb
pop
xchg
mov
adc
mov
cmpsl
jnp
popf
inc
push
sbb
leave
mov
aas
jo
inc
sbb
mov
add
pop
push
scas
mov
mov
jnp
fld
add
xchg
es
jnp
dec
jb
push
xor
ds
fstpl
push
mov
pusha
dec
adc
inc
inc
jno
fwait
jecxz
sbb
mov
dec
mov
cmpsb
cmp
sub
hlt
in
sbb
ja
adc
push
jg
fistps
mov
and
mov
sub
fstpt
and
pop
andl
xchg
sbb
pop
dec
inc
testl
out
push
push
mov
mov
ret
pop
mov
scas
sbb
or
xchg
inc
mov
cmp
or
jbe
xor
mov
fsubrs
or
mov
xchg
addb
pop
push
sbb
dec
pop
in
arpl
les
mov
xchg
jne
pop
xor
add
sahf
mov
test
out
mov
cli
decb
mov
jmp
mov
insl
mov
cmpsl
leave
mov
mov
push
jp
xor
push
outsb
sbb
xor
xor
ud2
pushl
xor
loop
int3
sbb
int3
fisubl
cmp
sbb
and
xor
loop
fstpt
mov
sbb
pop
out
in
andl
inc
addb
inc
push
push
stos
cmc
xchg
call
fcompl
jns
mov
add
jmp
ret
xor
sbb
arpl
fstpt
lret
inc
push
das
or
xlat
fldcw
xchg
movb
push
push
push
xor
stc
lret
jns
xorb
test
mov
sbb
add
cmp
ja
inc
jle
subl
push
test
jbe
rorb
xchg
sti
mov
xchg
mov
pop
pushf
loopne
cmpsb
push
push
xor
mov
out
sbb
inc
xchg
adc
repz
and
sub
ds
xor
pop
lea
test
or
jae
inc
jle
and
xor
mov
arpl
push
cs
repnz
repnz
jecxz
cmp
test
decl
inc
pop
mov
rcrl
inc
push
shl
lds
or
clc
xchg
pushf
and
ss
add
inc
push
sub
sahf
xchg
arpl
dec
pop
add
mov
sbb
lret
jmp
pop
push
xor
push
sbb
sbb
mov
jo
push
or
imul
outsl
or
jg
lcall
pop
jle
lods
mov
addr16
loope
ds
or
xor
adc
dec
jecxz
test
and
lods
test
test
pop
jne
mov
jb
jnp
shlb
add
adc
push
daa
or
imul
xchg
pop
or
test
mov
or
movsl
cmovb
cs
sub
xchg
mov
pop
stos
sbb
fwait
pop
mov
inc
icebp
ss
movsl
adc
shr
add
lods
sub
test
mov
xlat
jp
cltd
push
push
pop
mov
pushf
fstps
pop
rclb
and
and
int3
xchg
inc
xchg
roll
inc
cld
sub
dec
add
jl
inc
cld
sbb
dec
add
jae
inc
cld
cld
push
dec
add
push
inc
cld
in
push
dec
add
popa
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
cmpl
je
push
push
call
push
pushl
pushl
push
call
push
call
push
call
xor
leave
ret
lret
mov
dec
add
mov
dec
add
mov
dec
add
mov
dec
add
.byte
dec
