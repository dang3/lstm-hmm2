dec
pop
test
int
scas
sbb
push
in
shlb
cmp
dec
shll
add
iret
cmc
jecxz
sahf
nop
cmpl
rorb
pushf
dec
pusha
movsb
adc
sub
xchg
or
mov
popf
cmp
lds
cmp
dec
mov
lret
mov
sub
das
roll
clc
inc
or
adc
sbb
and
sub
xor
cmp
pop
add
fld
std
sahf
push
cmp
roll
lock
scas
mov
scas
cmpsl
outsb
adc
jns
inc
test
lret
pop
in
cmp
lret
mov
xchg
stos
push
push
out
lods
leave
adc
xor
or
call
xchg
add
mov
mov
fildl
test
adc
dec
xchg
call
jb
lahf
dec
jns
jae
add
les
sahf
mov
out
dec
outsl
pop
ret
push
pop
jns
andl
outsb
jle
mov
out
fcmove
dec
sar
aas
adc
or
rorl
outsb
je
outsb
fbstp
xor
fdivr
in
repnz
and
iret
out
pushf
push
or
icebp
mov
jno
call
and
scas
arpl
sub
aas
mov
andl
pop
add
imul
add
inc
test
fnstenv
idivl
test
pop
shl
insb
icebp
insl
dec
test
mov
cld
pop
addr16
sub
inc
xchg
xchg
rorl
pushf
pushf
add
cmp
daa
jle
daa
mov
and
lods
xchg
ret
cmp
inc
mov
stos
sub
xor
lods
imul
pop
loope
and
cltd
loop
xor
ds
cmp
mov
nop
push
sub
jge
call
push
mov
add
or
push
adc
mov
adc
and
xor
inc
shrb
mov
lret
jl
mov
sbb
cmc
jns
pusha
call
ret
cmp
pop
push
xor
scas
pop
add
in
fstps
jae
outsl
push
jmp
adc
xchg
xchg
shrl
xor
aad
jnp
cmp
jae
xchg
mov
mov
push
decl
mov
fcmovnb
hlt
cmp
movsl
and
shlb
cld
inc
pop
xlat
outsw
bnd
repnz
leave
xorb
and
lahf
and
movsl
into
dec
faddp
cmp
jae
arpl
into
out
xchg
aaa
into
out
sarl
shrl
fadd
mov
push
out
or
jno
test
lds
pop
jbe
gs
mov
pop
out
xor
or
pop
mov
jge
pop
test
push
out
sub
dec
rolb
jbe
icebp
mov
mov
and
inc
pop
loop
aas
fstps
in
mov
adc
inc
aaa
repz
push
ja
icebp
daa
inc
scas
cs
xchg
dec
aas
dec
jns
lret
scas
js
clc
dec
shl
bound
jb
jle
or
jae
mov
cmp
and
clc
cmp
mov
pop
mov
cwtl
or
pop
imul
fwait
add
out
dec
test
sbb
pop
fcmovnb
or
mov
xor
mov
lret
mov
sahf
aas
loope
loop
xor
cmpsb
outsl
mov
cs
leave
out
pushf
pop
fldt
clc
adc
jb
leave
out
mov
fs
lods
jnp
outsb
scas
jmp
shrb
jne
add
add
adc
mov
inc
or
or
mov
xchg
notl
cli
loope
sub
mov
and
fstl
stc
and
mov
inc
lret
fwait
mov
dec
repz
mov
jmp
add
and
push
scas
pop
add
mov
dec
ret
jp
or
cmc
popa
movsl
xor
dec
xor
je
mov
shr
jne
es
mov
push
xchg
or
inc
cmp
inc
dec
lahf
stc
dec
aad
add
setbe
out
xchg
add
lock
in
mov
fdiv
int
mov
xor
push
jae
push
cmp
xchg
push
pop
fists
or
pop
xchg
out
mov
dec
xchg
add
out
dec
cld
sti
mov
aam
adc
mov
dec
es
lahf
outsb
movsl
inc
adc
lret
jns
lods
pop
xor
shrb
or
mov
jmp
dec
shlb
xlat
mov
inc
fldcw
mov
test
push
push
repz
icebp
sbb
bound
and
mov
scas
pop
mov
test
lahf
leave
insb
pop
fistpll
mov
adc
leave
adc
stos
scas
add
scas
xor
mov
sbb
dec
mov
scas
imul
or
mov
inc
cmp
movsb
sbb
movsb
into
les
call
nop
repz
nop
gs
gs
cltd
gs
xchg
insl
xchg
xchg
add
add
jbe
inc
jbe
inc
jbe
sbb
or
mov
mov
mov
fistl
jne
popf
pop
mov
sarl
fwait
mov
cmp
jecxz
push
psllw
stos
and
les
mov
jb
mov
daa
repnz
and
gs
iret
std
test
std
pop
cmpsb
das
mov
mov
mov
imul
jns
push
std
mov
shl
push
ds
push
inc
mov
pop
ficompl
in
lea
or
je
cld
rcrl
mov
dec
repnz
adc
ja,pn
sub
push
cmp
fucom
fsubs
sar
jle
push
push
pop
pop
jns
push
push
add
pop
nop
mov
xchg
jg
push
or
pop
push
pop
jp
push
push
test
pop
pop
shl
stc
test
mov
jne
push
sub
pop
push
push
pop
pop
je
sub
test
test
stc
and
jae
push
or
pop
push
push
pop
pop
ror
sub
and
clc
jmp
jmp
call
clc
push
push
pop
pop
pop
clc
js
xor
xor
push
or
pop
push
mov
pop
clc
nop
push
add
mov
pop
push
call
ret
mov
aad
xlat
loop
sbb
sbb
jne
cmp
pusha
mov
mov
pop
mov
cld
ja
sub
push
or
pop
cmp
rol
push
add
push
pop
pop
push
push
add
pop
pop
nop
push
sub
pop
jl
test
cmc
lea
mov
cmc
test
jne
jmp
jg
xor
push
jne
cmp
pop
push
mov
add
pop
stc
rol
xor
xor
jnp
jbe
xor
push
call
inc
pop
cmpsl
lods
scas
sub
pop
fsubr
or
jp
sub
lds
mov
fildll
sbb
xor
les
push
xchg
pop
push
pop
xchg
pop
add
push
movzbl
rol
jno
jno
test
cmc
stc
stc
loop
pop
jb
test
push
call
add
aad
lds
add
imul
ret
push
int
es
adc
imul
and
mov
pop
pop
dec
jne
push
jg
test
pop
add
cmp
nop
push
call
sub
lods
push
shrb
rclb
fwait
nop
inc
or
xchg
shrb
xlat
sbb
adc
addr16
daa
mov
es
sbb
pop
pusha
arpl
scas
mov
mov
bound
mov
and
mov
mov
sti
cmp
data16
sbb
in
jle
pop
add
jb
mov
cmp
mov
jo
push
xchg
lds
pop
jmp
jmp
jmp
push
mov
mov
adc
lods
loopne
dec
int3
cs
ret
push
mov
mov
sahf
sbb
and
sbb
and
stos
mov
or
or
jg
call
andps
mov
cld
sub
lea
cld
pop
cmp
jp
sar
into
mov
mov
test
inc
in
push
push
and
pop
test
xor
in
xor
dec
jmp
dec
and
push
and
xor
cvtps2pi
xchg
nop
out
xchg
into
ds
iret
dec
or
push
sbb
lds
sub
sub
fwait
bound
das
sarl
shrb
js
sub
xor
mov
std
movsb
sbb
jp
adc
jl
dec
xor
push
pop
jne
or
mov
xchg
enter
in
add
fdivrl
or
adc
cmpsb
adc
jno
stos
mov
mov
or
test
aas
cmc
mov
addr16
shlb
lock
loope
jae
int
mov
arpl
in
mov
dec
pop
mov
bound
xor
mov
bound
std
xor
in
mov
stc
mov
ljmp
inc
xchg
mov
adc
insl
shlb
insl
dec
dec
lcall
mov
dec
xor
push
cmp
cmp
ja
mov
push
cli
aaa
btr
cmpsl
out
icebp
or
in
cmpsb
shrb
shll
push
cmp
inc
outsb
fiaddl
or
push
xchg
imul
mov
imul
jp
push
test
inc
mov
dec
lea
nop
and
inc
bound
les
lds
jno
or
out
rdpmc
xorl
dec
and
dec
and
push
dec
add
and
in
out
lods
jmp
in
jo
lock
or
test
popl
jno
or
in
mov
jno
push
jne
in
mov
jno
add
in
xchg
jno
add
pop
push
gs
push
subl
into
xchg
call
add
or
xor
pop
inc
xchg
pop
dec
cli
and
xor
xrelease
in
inc
clc
dec
inc
mov
dec
mov
add
dec
outsb
pop
dec
and
and
jo
or
or
movsb
js
nop
outsb
fcoml
dec
mov
push
sbb
dec
and
pop
sbb
pop
cmp
bound
das
pop
cmp
mov
inc
shrl
pop
stc
jmp
mov
ss
call
adc
fs
outsb
inc
push
repnz
pop
cmc
inc
add
inc
add
int3
out
jmp
jne
shlb
mov
mov
fisttps
loop
mov
scas
lea
outsb
lahf
mov
jl
pop
adcl
mov
mov
enter
xchg
lret
mov
iret
adc
xchg
adc
cwtl
adc
imul
jb
lea
pop
jbe
inc
inc
mov
pop
inc
xchg
mov
push
and
outsb
dec
lock
or
adc
dec
xor
push
xor
mov
and
btr
adc
ja
xor
test
out
repz
ss
nop
cmp
inc
hlt
flds
xchg
inc
xchg
push
xchg
imul
outsb
push
insb
ja
and
push
cs
push
mov
lea
nop
xor
inc
call
dec
lds
test
xor
loope
dec
and
dec
and
push
rolb
push
mov
mov
xorl
test
lea
jno
xchg
je
in
adc
lock
je
in
adc
jno
mov
ja
jno
mov
or
in
jo
lock
xchg
or
push
jmp
push
sub
test
in
xchg
lcall
rolb
bound
push
idiv
xor
and
stc
and
xchg
mov
lea
push
dec
mov
xchg
dec
hlt
pop
dec
and
push
and
es
stos
push
sub
nop
mov
xchg
into
dec
xchg
iret
dec
adc
push
sbb
shll
sub
sub
repnz
mov
jne
push
sub
jo
pop
in
pop
nop
mov
daa
xor
cmp
movsb
arpl
mov
lock
addr16
arpl
orb
xor
mov
mov
filds
sbb
fwait
xchg
push
nop
aam
sbb
out
std
dec
adc
loope
xchg
push
mov
pushl
push
jg
lret
sub
jnp
dec
enter
jmp
xchg
fimull
jmp
pop
je
mov
mov
js
adc
mov
jmp
jecxz
ljmp
outsl
cwtl
adc
insl
fistl
adc
mov
filds
mov
dec
sub
in
mov
mov
adc
sbb
pop
mov
arpl
les
mov
in
imul
cs
xchg
sub
punpckhwd
push
ja
scas
hlt
adc
dec
imul
xor
in
fstpt
or
or
sti
push
mov
mov
in
dec
stos
jp
scas
test
mov
jae
jmp
xchg
jnp
dec
mov
test
xchg
pusha
cmc
int
mov
add
addr16
and
addr16
adc
in
xchg
xchg
pop
adc
pause
xchg
mov
hlt
scas
icebp
mov
shlb
pop
test
adc
ret
mov
nop
add
xor
xor
jle
jb
mov
frstor
ss
pop
outsb
lea
mov
dec
mov
mov
mov
xchg
or
xor
or
add
pop
xor
rcll
xor
sub
insl
pop
fstpt
cmpsl
sbb
popa
mov
xor
fidivrs
push
pushf
sbb
adc
jne
arpl
jp,pn
jl
adc
add
outsl
lock
in
push
xchg
call
nop
ljmp
dec
std
call
rorl
mov
jbe
inc
adc
pop
fwait
adc
push
fs
jmp
sahf
sbb
cmp
ret
sti
adc
inc
and
int3
cmp
cmp
xor
bound
sbb
jne
aad
stc
sbb
cmpsb
push
popa
stc
jne
inc
add
loop
fldenv
jle
fneni(8087
cld
outsl
dec
addb
pop
cmpsb
sbb
cmp
popa
iret
cmc
pop
aaa
mov
push
lret
icebp
fcompl
mov
adc
iret
xchg
mov
loop
hlt
xadd
out
pop
mov
rcr
cmp
adc
mov
or
and
fadds
out
imul
movsb
js
movsl
jbe
lea
mov
loope
hlt
and
push
rcll
hlt
cld
lods
lds
or
test
push
and
incb
pop
or
add
in
dec
in
mov
es
jnp
leave
outsb
daa
push
xor
repnz
xchg
sbb
jo
push
jae
mov
add
cmpsb
out
jo
sub
mov
mov
pop
xchg
lds
mov
sbb
sbb
pusha
cmp
shll
jb
xchg
jnp
ret
xchg
sub
in
bound
test
int3
clc
mov
loope
hlt
leave
inc
pop
or
fnsave
pop
dec
sbbl
or
ljmp
push
test
test
icebp
push
sbb
xor
dec
and
out
cmp
insl
mov
pop
test
pushf
mov
lret
mov
enter
aas
or
jo
jmp
mov
push
out
jg
loope
mov
call
jg
xor
lret
iret
jbe
mov
movsb
jne
lahf
xchg
xor
jbe
mov
fs
arpl
nop
dec
dec
jmp
popa
sbb
dec
js
ss
mov
cmp
and
shll
mov
ss
jg
fwait
adc
xchg
inc
loop
adc
jb
mov
lock
or
add
add
fwait
push
mov
push
or
outsb
dec
pminsw
fnstenv
mov
ret
jecxz
pop
lret
pop
pop
fstl
fs
cmp
jge
shrl
pop
btr
mov
ss
sbb
xor
jne
xor
lret
cmp
dec
add
jns
enter
imul
xchg
in
in
lret
add
mov
cld
push
ret
stos
imul
cmpsl
jb
sbb
jecxz
sub
and
loopne
push
hlt
jbe
mov
icebp
int3
mulb
xor
mov
scas
jnp
cmc
add
les
xor
nop
int3
jns
xor
mov
divb
add
xchg
mov
in
pop
nop
insl
push
imul
hlt
inc
adc
pop
out
sahf
test
cmp
ror
dec
stos
cmpsl
push
xchg
lcall
adc
cmpsl
pop
mov
cltd
mov
inc
sbb
or
stos
in
xchg
pop
and
dec
dec
jl
inc
adc
sbbb
push
movsb
mov
popf
les
or
enter
sub
and
rcr
movsb
test
dec
in
mov
jle
ja
pop
jae
mov
rclb
xor
xor
adc
leave
lods
sbb
and
enter
push
or
pusha
insb
hlt
loope
outsb
sbb
stos
in
mov
push
dec
adc
outsb
add
push
ljmp
pushf
mov
andb
out
pcmpgtb
adc
pushf
dec
xor
xchg
adc
jge
add
push
mov
or
or
enter
andb
fdivs
aas
jle
mov
push
mov
fdivr
or
or
mov
jb
outsb
shl
bound
pop
sub
icebp
pop
fs
or
iret
leave
mov
xor
pop
push
adc
out
in
jnp
in
or
addl
data16
sbb
xor
push
and
dec
fmul
push
sub
insb
aad
xchg
ret
lock
cmc
inc
movb
pop
popf
cmpsl
xchg
push
jecxz
cmpsb
leave
xor
es
inc
adc
or
in
mov
rcrl
int
test
stc
cmpsb
add
sarl
in
mov
stos
ss
cmc
insl
push
imul
test
imul
pop
aam
pop
lea
gs
xor
and
in
jo
sbb
mov
in
sbb
arpl
mov
lea
push
add
pop
push
cmpl
dec
mov
adc
pop
out
push
or
shrl
fcmovne
xor
hlt
stos
dec
idivb
and
and
sub
or
dec
das
mov
jns
jnp
iret
int3
call
push
push
daa
jmp
xlat
ljmp
stos
in
xor
insb
fadds
ds
mov
sub
enter
dec
adc
dec
shlb
pop
adc
outsb
mov
nop
or
inc
jnp
inc
adc
mov
popa
outsl
into
sahf
testl
adc
mov
lods
add
shlb
ss
mov
jo
jge
mov
lea
lret
dec
ret
lea
enter
push
ds
orl
push
sbb
mov
mov
mov
mov
mov
push
and
in
les
loop
lea
je
mov
mov
mov
xor
mov
getsec
inc
cltd
dec
sbb
adc
int3
sbb
jp
pop
mov
cmp
sub
push
adc
sub
xchg
fs
out
cmp
aad
in
and
xchg
mov
cmp
js
xor
leave
adc
fildll
popa
lret
sbb
sub
mov
mov
in
repnz
ret
sub
bswap
sub
fildl
ja
mov
fisttpll
test
arpl
sbb
jmp
sub
fcmovnu
lea
flds
jge
aam
mov
clc
lock
jno
ljmp
sbb
jb
imul
adc
jno
push
fstl
mov
into
loop
iret
mov
add
xor
lock
lahf
loop
popa
and
jg
inc
sbb
sub
fmul
mov
sub
jle
fdiv
popa
xchg
sub
mov
lret
nop
push
cmp
xor
test
push
push
loope
aas
negb
sub
mov
dec
mov
je
mov
mov
aad
pop
out
popf
repz
aad
pop
mov
fmull
mov
out
adc
jg
fucomi
popf
popf
nop
or
add
pop
add
push
dec
jp
xor
leave
jns
xchg
in
dec
in
and
jmp
ficomps
mov
and
insl
pop
dec
adc
mov
test
cld
xchg
sbb
mov
rolb
leave
into
add
and
enter
xchg
push
push
sbb
xlat
test
xor
jns
in
testb
loopne
lea
imul
jp
jl
mov
mov
movsb
push
jo
mov
roll
mov
push
movsb
sbb
mov
idivl
arpl
gs
mov
int
movsl
pop
mov
pop
lret
lcall
mov
out
mov
sub
subl
ds
scas
insl
mov
cmp
jae
pop
gs
sub
mov
inc
les
mov
or
faddl
mov
mov
int3
pop
scas
adc
sahf
push
and
int
ds
shll
sbb
pop
sbb
stc
or
repnz
lock
stc
adc
mov
out
in
cmp
push
shr
rcll
cmp
je
movsb
lock
adc
sub
aaa
jmp
ds
jne
push
lahf
int3
or
ror
adc
and
aad
dec
cwtl
int
mov
mov
jge
mov
loopne
add
cmp
gs
fsubs
inc
lods
out
push
aas
mov
cmc
sarb
fsubrl
mov
nop
outsb
xor
scas
push
daa
cmc
nop
lods
mov
fsubs
pop
or
movsl
fcmovnbe
lds
lea
lcall
sub
leave
insb
flds
ss
dec
pop
xchg
leave
lcall
xchg
push
add
sbb
lock
pop
fisubrs
add
pusha
fs
xor
sbb
shlb
jnp
xor
xchg
dec
into
insl
inc
push
icebp
cmp
ret
in
rcrl
popf
lret
mov
pop
push
test
add
daa
push
adc
ret
fwait
incl
xchg
data16
imul
adc
leave
jae
jge
popa
xchg
in
mov
push
sub
cmpsl
hlt
mov
xchg
pushf
lret
fwait
insl
lret
rorl
jo
xor
dec
push
fwait
sub
mov
mov
push
mov
icebp
cmp
inc
sub
fidivs
out
pop
jmp
leave
sub
cs
insb
sarl
mov
and
xchg
sti
mov
mov
mov
ja
cmpl
dec
fistpll
hlt
pop
cmp
xchg
mov
pop
lcall
mov
stos
sub
add
push
push
or
movsl
add
xor
jnp
jb
fs
sub
mov
jl
inc
jl
cmc
cmp
mov
jl
inc
jl
sti
dec
add
jl
call
adc
xor
jle
xorl
cmp
adc
fidivl
cmp
add
sarl
jl
jnp
ds
cwtl
repz
add
xor
cmp
fisttpll
mov
roll
or
xlat
jne
inc
pop
mov
fbstp
or
les
pop
les
call
jle
or
scas
xchg
jle
icebp
fadds
stos
out
mov
fbstp
sahf
mov
aad
movsl
rorl
aaa
adc
into
sub
lret
scas
sti
ljmp
fwait
out
push
or
jmp
mov
push
xor
int
cmpsb
negb
fimull
arpl
out
fildll
mov
fwait
ds
mov
mov
movb
movsb
sahf
dec
sbb
inc
xor
iret
and
dec
clc
mov
mov
mov
clc
test
mov
lock
xchg
jns
adc
push
test
pop
enter
push
and
cs
sub
fidivs
sbb
cmp
cs
mov
push
cmp
cmp
dec
or
pop
mov
sub
xor
push
out
pop
mov
aas
leave
sub
push
aam
and
les
mov
arpl
cmp
pop
in
lods
cmp
outsl
mov
or
jp
dec
cmp
lret
mov
cmp
mov
ret
int
xchg
sbb
mov
jp
fcoms
stos
ljmp
mov
test
lcall
mov
cmp
test
jno
cmp
imul
cwtl
mov
mov
addr16
jnp
jnp
cld
mov
mov
adc
sahf
scas
mov
lret
loopne
xor
sbb
push
jb
jmp
cmc
into
in
mov
into
or
dec
into
push
jbe
push
stos
push
jbe
xor
cmp
push
mov
testl
mov
add
sbb
pop
xor
inc
aad
dec
mov
scas
or
mov
xlat
xchg
pusha
aam
loop
dec
xlat
pusha
sub
int
mov
mov
jmp
xchg
icebp
stos
inc
in
out
cs
loop
xchg
or
push
fcmovne
pop
pop
mov
mov
jp
cs
fstpl
push
jp
adc
and
arpl
and
mov
or
mov
pop
add
jg
inc
sbb
int
push
inc
push
lret
pop
xchg
inc
mov
sarl
sbb
jne
push
addl
lea
sarl
xchg
jp
mov
push
lods
xchg
clc
mov
ret
cs
mov
pop
int3
sbbl
xchg
inc
int3
push
cmp
inc
ret
add
out
lds
into
outsl
push
adc
shll
mov
aad
xchg
ror
movsl
dec
insl
out
or
sbb
xchg
xlat
jne
roll
pop
test
mov
add
pop
cld
fidivrs
add
and
push
cmp
mov
or
cmp
push
je
repnz
lods
jp
shlb
test
sub
cmpsb
roll
insb
adc
dec
repz
loopne
aaa
add
mov
jge
test
arpl
sti
push
das
jno
aas
sti
or
or
pusha
hlt
cmpsl
rorl
sarl
movsb
mov
cltd
test
jo
addr16
fidivl
dec
cmp
xor
and
jo
or
and
fisubrl
xchg
sbb
imul
fmull
daa
and
mov
outsl
cmp
mov
cmpsl
push
jne
dec
push
daa
in
pop
inc
pop
ds
aaa
cmp
cli
mov
xchg
jle
cmp
cs
arpl
into
leave
xor
cltd
sbb
inc
cld
mov
and
icebp
in
jg
fwait
mov
add
sbb
sbb
pop
or
ret
jb
mov
jne
and
inc
popa
inc
fisubrs
mov
aas
pop
push
inc
dec
call
mov
or
ret
cld
inc
ja
xor
in
jecxz
and
jo
push
xor
push
xchg
fcoml
inc
into
int3
in
jne
dec
mov
mov
xchg
or
add
fisubrs
dec
int
and
sub
cld
mov
mov
dec
xor
mov
xor
popa
les
adc
mov
repnz
popl
mov
push
pop
int3
sbb
shl
mov
mov
enter
imul
push
cwtl
push
or
fisubrs
xchg
sub
xchg
cwtl
ret
mov
movl
fildll
roll
xchg
add
pop
lods
add
int3
cmp
add
mov
dec
nop
pop
mov
xchg
mov
add
add
dec
sbb
sbb
xchg
mov
cmpsb
sahf
inc
jl
xlat
js
scas
push
popaw
jmp
jl
scas
js
mov
mov
jl
sarl
mov
clc
sub
test
aam
and
fdivs
push
das
push
aad
ljmp
xchg
jmp
in
xor
cwtl
popa
dec
fcmovne
xor
mov
ja
ljmp
adc
push
mov
push
sbb
movsl
mov
mov
fstpt
sbb
and
loop
jns
jle
xor
shll
loope
mov
push
or
call
cmp
cmpsb
cmp
sbb
inc
mov
add
pop
sub
fidivs
sbb
iret
dec
and
popa
jecxz
aad
dec
adc
outsl
scas
pusha
nop
in
dec
mov
xchg
jne
clc
pusha
roll
dec
xchg
lret
and
mov
je
sahf
pop
fdivrp
pop
push
jmp
stos
push
pop
pop
in
pop
aaa
movsb
jbe
jmp
cld
adc
sub
mov
dec
aad
and
pop
dec
rol
xor
fxam
pop
ds
xchg
in
sbb
call
ret
mov
mov
xchg
test
pop
js
xchg
inc
fistl
mov
dec
test
repnz
mov
nop
data16
pop
scas
and
int3
sbb
cmp
push
cmc
mov
xchg
fcomi
mov
xchg
pusha
sbb
pop
cs
jbe
pop
xor
lds
sub
xchg
inc
outsb
xchg
mov
sbb
sahf
pushf
jae
xchg
mov
outsb
test
sbb
jno
mov
and
push
sub
std
sbb
dec
mov
cmc
int3
jl
fsubs
fildl
fiadds
stos
jp
inc
mov
jne
jne
sbb
mov
or
jo
push
add
in
jo
outsl
aad
scas
nop
aam
popa
xor
xor
test
pop
adc
js
xor
les
jb
lret
shlb
ss
jnp
inc
mov
call
nop
add
sar
das
vpsrlw
lock
dec
icebp
loope
decb
pop
daa
mov
cmpsb
mov
test
xchg
orl
mov
jns
xchg
mov
outsb
rcll
jnp
sub
scas
or
imul
pusha
and
shlb
out
fdivrl
mov
fstpt
call
inc
push
mov
pop
push
and
jmp
mov
outsb
enter
call
add
adc
jg
lret
push
jne
lret
sti
daa
add
adc
ljmp
fstl
push
cmp
rorl
fiaddl
cmp
push
cmp
push
and
xchg
dec
orl
leave
ds
dec
or
pop
out
and
ss
jbe
iret
fdivr
int
and
test
cmp
or
fisubs
fdivrl
cmp
ret
inc
push
dec
aaa
lret
jae
mov
jb
xor
pop
mov
xchg
sub
inc
out
lea
idivb
mov
jb
out
xchg
imul
fdivrl
jl
push
xchg
imul
jmp
or
ss
fwait
imul
stos
jb
xlat
das
aad
jbe
and
xchg
cli
mov
in
scas
or
adc
lods
jno
fildl
fldl
push
insb
cmc
aad
add
mov
or
call
sbb
sbb
sbb
or
sub
sbb
push
sbb
lahf
sub
cmp
ret
shrl
sub
sub
scas
inc
mov
push
pop
push
int3
inc
iret
movsl
jae
loop
mov
bound
lahf
inc
inc
imul
jb
cld
and
jg
jecxz
fdivp
pushf
mov
cld
lock
pop
loopne
inc
mov
mov
ret
sub
or
mov
aad
cmpsl
rol
in
icebp
push
daa
bound
push
sbb
pop
sbb
mulb
mov
addl
es
mov
pusha
test
xor
hlt
adc
xchg
add
ljmp
out
lcall
out
xor
ret
cli
add
inc
cmp
and
dec
mov
js
and
jae
jae
inc
dec
xchg
pop
mov
jbe
data16
out
xor
sarb
sbbb
push
add
push
push
pop
fistpll
inc
mov
lds
sbbl
push
adc
jae
test
test
rcrb
fbld
jns
mov
cld
test
lret
mov
shlb
icebp
inc
xor
aas
sarl
dec
lret
xchg
repz
xchg
pop
dec
insl
cmp
mov
das
dec
ljmp
sbb
push
iret
shrl
cwtl
push
lds
repnz
imul
push
cli
jae
fisttps
lock
lret
cmp
cmp
int
dec
dec
enter
mov
lea
jg
scas
mov
out
add
cld
fimuls
xor
ret
add
idivb
sti
js
jno
pusha
in
or
jg
std
mov
test
shrb
insb
lock
sub
and
insl
hlt
out
jmp
dec
adc
cld
xchg
stc
xchg
stos
ficoms
pop
push
mov
lods
jnp
cmp
jmp
inc
lea
and
jge
ljmp
push
pop
icebp
add
sub
mov
in
mov
fadds
or
inc
shrl
clc
mov
lds
inc
push
sub
pop
iret
dec
loop
shlb
loope
repnz
mov
mov
inc
add
jge
test
fwait
sbb
sbb
hlt
outsl
iret
mov
cmpsb
mov
popf
cli
popf
adc
pop
jnp
jecxz
test
or
inc
pop
js
popa
sti
in
xor
xor
pop
addr16
pusha
push
out
sti
dec
loopne
mov
out
mov
hlt
pop
into
xchg
push
xor
dec
ja
push
jbe
sbb
les
cmp
clc
sub
shrl
lret
mov
mov
jp
add
lcall
sub
scas
mov
in
icebp
sti
mov
mov
mov
into
or
and
inc
es
nop
jno
push
enter
hlt
rcrl
movsl
push
mov
add
inc
mov
pop
cli
fnsave
imul
imul
cs
fsts
cmpsb
sub
add
xchg
mov
dec
fldl
fnstsw
daa
iret
addb
test
mov
mov
push
cmpsb
cmp
pop
mov
push
pop
add
dec
sbb
add
jg
repz
add
popa
hlt
sub
imulb
sbb
aam
inc
into
in
jo
insb
mov
pushf
loopne
loopne
or
jne
jno
sbb
ret
in
and
mov
adc
loopne
lock
cmpsl
push
xlat
mov
inc
faddp
cmp
add
test
addr16
push
testb
mov
pop
in
fsincos
cwtl
subb
xchg
mov
push
cmpsb
lods
jnp
and
mov
pop
inc
add
and
jg
push
lds
mov
dec
xlat
sub
pop
lds
jns
jb
loop
das
jmp
dec
adc
xchg
dec
and
fwait
xor
jmp
sub
adc
xchg
mov
and
lcall
xchg
repnz
dec
cmp
in
test
xor
sbb
pop
jno
es
pusha
in
in
repz
push
cs
pop
sbb
fs
add
aaa
dec
addr16
jmp
outsb
clc
sbbb
aaa
repnz
push
cld
cld
in
add
push
mov
dec
shrl
mov
dec
push
cmc
mov
sbb
cmovne
je
dec
add
leave
lcall
sub
fsubrs
add
dec
mov
mov
dec
lret
cmpsl
lret
repnz
fldcw
add
pop
xor
lods
stos
out
cmp
pop
popf
mov
out
inc
out
xor
push
xlat
inc
into
shrb
jmp
jns
xchg
mov
inc
xchg
push
insb
out
insb
adc
into
sbb
push
or
mov
xor
icebp
fmull
mov
mov
dec
shll
and
add
scas
cmp
clc
push
stos
jns
test
push
loopne
push
add
js
sbb
out
jo
sub
fs
out
das
add
enter
sub
repz
dec
popf
xchg
jnp
pusha
cli
and
scas
xchg
jnp
loop
lock
xchg
out
push
stc
pop
dec
push
adc
fistl
lods
jnp
push
jp
add
xor
stos
lret
mov
xlat
hlt
or
arpl
scas
jne
in
jbe
test
push
sbb
pop
aaa
insl
fs
into
or
and
dec
dec
or
adc
rolb
inc
lods
sarb
outsl
push
cmp
stc
nop
hlt
push
dec
push
daa
int
insl
mov
lea
lds
outsl
adc
sbb
xor
pop
and
push
mov
pop
loop
jb
ror
mov
fwait
jno
inc
sub
ljmp
xchg
add
call
xor
ljmp
lea
arpl
and
fiadds
and
pushf
mov
xchg
fldt
ljmp
mov
add
arpl
insl
sarl
add
jns
test
jns
push
adc
jbe
xchg
jns
stc
adc
lret
popl
testl
inc
in
jl
mov
jmp
xchg
negl
xchg
push
imul
divb
sbb
fldcw
test
xchg
sbb
pop
jecxz
dec
adc
mov
mull
and
push
and
dec
add
push
lahf
idivb
aad
data16
add
in
jbe
shll
inc
test
push
out
int3
xchg
ja
xor
sbb
in
mov
test
or
popl
cld
int3
jl
and
sahf
inc
jg
jecxz
icebp
fldl
test
xchg
push
lea
push
loopne
rolb
push
js
push
aam
sarl
jo
sub
or
jl
mov
jl
mov
jecxz
add
mov
mov
inc
ljmp
dec
adc
in
lret
and
xchg
aaa
mov
dec
cmp
xchg
cwtl
into
jg
rorb
xchg
and
nop
in
lock
mov
fidivrs
add
mov
mov
xchg
xorl
or
movsb
inc
dec
fistpll
outsl
xchg
jl
ss
jae
cmp
inc
xor
sub
and
ret
inc
xchg
ljmp
repz
scas
push
push
add
sub
mov
in
jmp
xchg
push
sub
je
repnz
ret
cmp
cli
pushf
sbb
pop
sbb
sbb
mov
sbb
filds
jbe
out
fnsave
ljmp
sub
pop
xchg
je
xor
pop
cmc
push
jb
jp
mov
ret
and
xchg
lahf
mov
xchg
loop
movsb
cmp
repnz
push
jmp
outsl
jmp
mov
xor
jecxz
jnp
ffreep
les
repnz
dec
insl
or
outsb
and
add
cmp
stos
stc
or
jp
xchg
ret
in
insb
pop
jle
pop
out
jp
fbstp
bound
xchg
push
sbb
mov
sub
cs
push
icebp
xor
pop
add
lret
push
dec
push
ror
inc
xchg
push
ss
xchg
add
inc
scas
jae
add
repz
clc
jb
inc
les
inc
mov
push
and
jge
cmp
popa
or
fucom
mov
aad
fmull
sub
lock
in
jae
data16
mov
lods
mov
xor
insb
test
xchg
mov
stc
mov
push
shlb
mov
fs
adc
lret
mov
fidivs
xchg
mov
sbb
push
xchg
out
mov
aaa
fnstcw
xor
pop
call
shl
insb
nop
mov
adc
popf
inc
rolb
mov
dec
in
sbb
stos
pop
mov
xor
insb
sub
jp
rorl
jne
dec
xor
ss
or
sbb
xor
scas
sbb
frstor
jo
fsubrs
push
shrl
sub
sahf
mov
lret
lcall
jne
ljmp
mov
sub
jmp
rolb
pop
shlb
pop
jecxz
and
and
xor
enter
lods
negl
push
xor
orl
test
jmp
adc
sub
adc
pop
mov
sbb
lcall
fcmovnb
ds
aam
jle
or
into
jmp
push
or
jb
aad
or
loope
xor
cmp
outsl
jne
adc
pop
dec
negb
and
push
inc
scas
ret
mov
or
mov
cmp
jecxz
mov
and
mov
mov
das
invd
jecxz
adc
outsl
xchg
mov
jne
imul
cs
popf
sub
fimuls
ja
lea
push
pop
or
lret
or
or
pop
scas
cmp
cmp
push
cwtl
dec
xor
cli
inc
jb
push
and
out
cld
bound
cltd
shll
ljmp
or
pop
cmp
push
outsb
aad
clc
push
inc
sarl
add
mov
insb
sbb
mov
pusha
scas
jo
mov
sub
std
sub
in
or
in
sbb
xchg
mov
test
jb
movsl
inc
fucomp
jnp
repz
add
ljmp
gs
or
jmp
mov
add
mov
add
testb
mov
push
lds
and
inc
repz
loop
sbb
xchg
cmp
sub
into
cs
insb
dec
mov
repnz
lret
xor
pusha
out
in
lock
xor
pop
out
cmp
adc
pop
fs
add
scas
js
outsl
push
mov
sub
jecxz
mov
mov
sahf
cmpsl
jb
xchg
mov
or
fldt
les
jae
xchg
push
or
addl
insb
push
cld
cmp
adc
adc
mov
test
inc
imul
lea
pop
push
in
sti
pop
nop
in
scas
pop
mov
mov
jns
imul
push
ret
dec
dec
and
fldenv
cmp
stos
sbb
lret
pop
add
push
rcrb
loop
btr
aam
cmp
fstps
call
push
std
cwtl
lret
ss
cli
xchg
inc
ret
or
cmp
xchg
adc
mov
xchg
mov
and
rol
add
movsl
addr16
fidivrs
aas
inc
iret
in
or
sbb
and
sbb
pop
inc
daa
imul
aas
jae
inc
fwait
push
mov
cmp
xchg
mov
sbb
imul
xchg
test
cmpb
adc
push
sub
imul
imul
repnz
rcrb
mov
data16
outsl
lea
pop
and
cmc
gs
mov
adc
paddusw
adc
leave
xor
lret
xor
mov
push
pop
mov
jne
test
lds
ja
pop
inc
xchg
cmpsb
outsb
xchg
iret
dec
insb
clc
fstpl
xchg
inc
mov
xchg
xor
iret
xor
and
in
pop
popa
ss
jmp
aad
fcomi
icebp
loope
or
pop
test
into
lods
fwait
sbbl
test
jb
fs
sti
mov
cmpsl
mov
mov
pop
inc
cmp
in
fiadds
mov
loop
adc
les
jae
jns
mov
lds
xchg
dec
adc
jle
pushf
pop
int
test
aas
clc
cld
movb
add
sbb
mov
sbb
popa
push
in
popf
out
test
or
out
dec
sub
inc
xchg
mov
mov
fcoml
in
pop
repnz
mov
dec
xor
mov
mov
imul
iret
xor
jae
dec
cli
sub
hlt
jecxz
lods
imul
push
adc
lret
adc
aam
mov
add
rcll
push
out
inc
xor
mov
push
lea
xchg
mov
add
cmp
or
adc
andl
lds
pop
outsb
push
cmp
fsubp
dec
in
sbbl
inc
stc
shr
xchg
add
mov
test
out
test
cltd
out
push
xorb
jne
adc
pop
out
cmp
xor
ret
cmc
sub
dec
in
test
jg
push
incb
cmp
mov
aam
push
cltd
scas
aam
push
or
adc
jo
in
imul
repnz
nop
jmp
xor
stos
stos
out
fbstp
lods
mov
mov
fimull
dec
sahf
enter
daa
lds
stos
inc
jl
inc
outsb
sahf
dec
packsswb
jae
add
and
ss
and
ja
es
push
mov
das
jns
push
xlat
push
ret
mov
enter
xor
fbld
mov
std
sbb
or
add
call
in
insb
dec
insl
pop
cmp
adc
in
lret
movsl
stos
jl
sbb
pop
out
in
xchg
mov
sbb
sub
call
mov
jp
pop
mov
inc
cmp
fcomi
push
and
int3
cmp
lret
adc
jmp
addl
test
mov
pinsrw
js
addb
test
loope
dec
insl
mov
push
dec
jp
push
ja
lret
mov
xor
xor
add
mov
rol
push
cmp
cmp
sbb
mov
lret
fwait
icebp
add
out
cmpsb
stos
adc
xchg
xchg
das
pop
jo
cmp
aam
stc
inc
scas
outsb
loope
rcl
sbbl
add
xorb
mov
je
sbbb
enter
div
sbb
idivb
mov
dec
std
andb
sub
mov
std
sbb
imul
subb
adc
mov
xorb
push
jno
aaa
ds
mov
rcrl
inc
jo
out
xchg
pop
dec
shr
hlt
test
jbe
sbb
push
sbb
add
dec
movhps
jmp
int
or
loop
out
and
in
mov
addl
push
cmp
test
int
adc
xchg
mov
dec
sub
cld
shlb
push
mov
cmpsl
unpcklps
push
nop
lret
fdivs
inc
xlat
sub
dec
mov
fcmove
xor
rolb
enter
das
paddusb
fsts
push
sub
imul
mov
imul
sub
stc
pop
mov
push
mov
cmp
jge
loopne
jnp
sbb
push
push
and
cltd
scas
or
xchg
jle
cmc
cmpsl
jae
imul
icebp
jg
mov
data16
cmp
lods
cmp
sahf
aas
cmpl
int3
mov
sub
in
xlat
mov
imul
fwait
jl
mov
push
jbe
jns
dec
cmpb
dec
fcompl
pop
lcall
xchg
sbb
stc
scas
repz
inc
push
mov
mov
pop
add
sbb
xor
xchg
sub
xor
sub
pop
stc
dec
mov
mov
lock
scas
adc
arpl
addr16
push
in
mov
push
sbb
xlat
pop
xor
into
and
cmp
lods
add
mov
or
add
in
add
xchg
xorl
jo
jp
mov
dec
mov
test
test
out
or
mov
jmp
adc
xchg
cld
pop
cmp
imul
and
in
ret
adc
jo
in
orl
test
nop
adc
std
imul
xor
in
xorl
dec
pushf
xorl
jnp
pop
adc
push
fwait
idivb
xor
cmc
in
popa
push
aam
inc
pop
or
add
pop
ror
pop
ja
and
int
mov
out
movsb
inc
add
xchg
nop
inc
or
adc
shl
in
inc
push
daa
cmc
bound
and
out
xor
int3
into
push
imul
cmp
out
ss
mov
leave
arpl
sub
lods
mov
repnz
mov
add
mov
xor
insl
and
pop
xor
inc
jnp
xor
fwait
sbb
push
mov
fisttps
push
sub
pop
jb
xchg
out
arpl
sbbl
and
cwtl
hlt
js
insl
jg
shlb
xor
xchg
xlat
xor
ss
lcall
aas
popf
sti
je
cwtl
orb
addl
scas
xchg
mov
xchg
cmp
int3
icebp
mov
add
xor
jecxz
lods
fst
pop
push
or
aas
dec
lret
dec
add
aas
pusha
xor
add
xor
sbb
repnz
ja
mov
mov
dec
fildll
mov
sbb
gs
clc
int3
loop
mov
mov
scas
scas
arpl
adc
cmp
xor
add
xlat
mov
jno
ja
mov
and
icebp
mov
sbb
std
outsb
scas
mov
push
add
push
loope
push
leave
in
pop
xor
and
add
sub
mov
insl
jmp
call
in
sbbl
adc
mov
xchg
aam
cmp
push
inc
cwtl
jnp
inc
push
in
popf
adc
xorl
fwait
jb
mov
jno
mov
add
inc
rclb
neg
mov
scas
int
adc
and
nop
xchg
je
inc
pop
jne
ja
mov
ffreep
fucomi
outsb
ja
imul
and
xchg
adc
add
int3
dec
mov
mov
xor
pop
dec
popf
jecxz
jg
shrl
push
lds
xor
xchg
cmpsl
fcoms
fwait
mov
add
into
push
adc
mov
jo
pop
loop
sbb
js
insb
cmp
shrb
inc
jle
mov
jb
and
or
mov
mov
mov
aaa
bound
and
xor
mov
std
adc
xchg
jecxz
jb
int
pushf
aad
clc
adc
aam
and
xchg
adc
jmp
lea
xchg
jbe
sub
mov
popa
sti
xchg
sub
mov
jmp
jnp
mov
lret
lds
aad
lret
xchg
mov
pop
mov
dec
dec
lret
mov
jbe
add
stos
out
inc
shlb
mov
mov
or
xor
xchg
and
fs
push
push
and
popf
xchg
pushf
movsl
push
adc
xchg
push
mov
dec
jb
and
xor
mov
out
dec
and
out
mov
ds
xchg
mov
les
inc
push
mov
and
cmpsb
sbb
in
jo
mov
leave
out
push
pusha
fildll
pop
xchg
xchg
movsb
inc
cmp
cltd
inc
sbb
sbb
adc
ret
out
jl
arpl
jne
imul
lret
sahf
or
daa
jbe
cld
pushf
or
mov
pop
mov
or
lods
pop
pop
jmp
std
arpl
mov
pop
jge
movsl
pop
xor
and
rcr
cltd
in
out
outsb
mov
inc
into
pushf
into
nop
inc
ds
sub
inc
cmp
push
mov
sub
or
jb
mov
xrstor
shrb
cmp
sub
fimull
pusha
and
xchg
push
mov
push
xlat
enter
in
jmp
repz
inc
or
add
enter
in
xlat
ret
ret
cmp
stos
ret
gs
sbbb
je
inc
sub
stc
fisttpl
imul
es
and
cmpsl
sbb
notb
hlt
and
fistpl
hlt
aaa
push
adcb
pop
dec
scas
insb
or
fdivrp
stos
mov
ds
adc
sub
jns
in
xchg
ret
xchg
js
ja
jg
pushw
add
jne
add
push
lahf
xchg
mov
lcall
lret
pop
push
pop
jbe
mov
lods
ljmp
jb
ss
icebp
dec
sbb
mov
jb
xor
cmp
shll
pop
rcrb
dec
mov
adc
cmp
lcall
sbb
in
repnz
lret
xchg
imul
lret
pusha
int
and
add
test
dec
inc
add
dec
mov
cld
xchg
sub
jnp
loop
insb
popa
inc
enter
jecxz
fisubs
mov
lods
loop
sbb
insl
and
mov
call
xchg
xor
aam
movsl
xchg
xchg
adc
ds
inc
cli
or
insl
cltd
fiaddl
jl
cmp
and
mov
addb
pop
mov
ds
mov
jl
jle
mov
test
pop
or
nop
into
push
pop
inc
addb
xchg
lock
sbb
popa
xlat
adcl
call
or
lret
dec
push
mov
std
sub
ret
and
in
or
add
xchg
sbb
imul
pop
mov
fwait
iret
xor
jae
in
sbb
sub
adc
insl
sub
xor
fcompl
mov
fcompl
lock
xor
add
call
xchg
xchg
enter
mov
push
insl
and
hlt
adc
lods
dec
adc
xor
fiaddl
push
out
pop
jle
add
hlt
jno
dec
pop
mov
jg
push
or
ret
and
lret
push
dec
xchg
jns
out
jne
sbb
cmpsb
ss
test
inc
inc
jae
jle
push
or
repnz
sub
and
mov
dec
push
ja
xorb
xchg
mov
icebp
jecxz
adc
xchg
xchg
cmc
xchg
push
sbb
jnp
xor
inc
movsb
arpl
jb
cs
leave
mov
nop
xor
jp
out
lcall
stc
xor
inc
cwtl
sub
sbb
xor
jl
and
scas
addl
lds
hlt
xchg
mov
mov
repnz
leave
add
lock
std
scas
jbe
or
sbb
mov
inc
pop
jno
add
bnd
cmc
lret
sbb
clc
push
test
mov
sbb
cmpsb
adc
outsl
insb
outsb
xchg
lods
lods
fstl
sbb
pop
and
dec
or
add
js
sahf
add
addr16
sub
pop
or
outsb
push
inc
fwait
mov
bound
in
push
pop
jnp
mov
jp
fisttps
xchg
xchg
sbb
push
fstpt
adc
xchg
inc
outsb
xor
lds
xchg
jno
leave
fsts
fwait
add
stos
push
stc
mov
iret
lods
xor
jecxz
out
ret
mov
leave
shrb
inc
mov
xor
outsl
shr
jmp
mov
popf
fxtract
sbb
lcall
lcall
dec
add
fsubr
lret
mov
inc
bound
stc
mov
iret
push
negb
and
in
out
sti
jp
cmp
nop
dec
outsl
insl
cmp
aas
orb
cltd
and
push
test
mov
mov
imul
lea
jl
adcl
jg
jecxz
or
leave
js
arpl
mov
inc
jmp
mov
pushf
pop
in
ss
lret
mov
pop
mov
mov
inc
aaa
pop
add
sbb
lods
lret
and
sbb
leave
sub
test
adc
xor
push
loopne
out
dec
pushf
sub
xchg
sbb
movb
scas
or
movsb
xchg
mov
xor
push
mov
arpl
dec
xor
push
inc
cmp
mov
repz
out
add
test
adc
jnp
push
jo
mov
push
and
jl
test
adc
mov
lds
mov
paddw
int3
pop
jno
mov
inc
shlb
or
inc
mov
ja
and
test
js
jo
pop
jp
cwtl
aam
lret
xchg
in
jo
daa
push
rclb
dec
sub
ss
test
cmp
push
lds
push
ljmp
ficompl
sub
mov
and
jbe
push
pop
jbe
sbbb
mov
or
push
inc
inc
xorb
sub
push
stc
cmp
mov
xor
cmp
push
add
dec
repnz
jae
add
aad
add
lcall
adc
insl
and
loope
xor
stos
inc
add
shl
mov
jg
out
jmp
push
jmp
aaa
jmp
mov
and
cli
call
jo
ret
dec
add
adc
in
lret
mov
int3
loop
jno
pushf
mov
in
dec
pop
jo
scas
inc
xchg
insl
jp
xorb
push
cld
cmp
jp
xchg
jns
imul
xchg
dec
ret
lret
jmp
sbb
push
das
fcomi
je
nop
add
mov
xchg
jbe
outsb
fisttpl
std
enter
jo
dec
jb
pusha
insl
inc
popf
xchg
mov
pushf
sbb
clc
lret
cmovle
movl
dec
scas
dec
inc
pop
scas
ljmp
aad
jecxz
add
in
mov
mov
das
adc
lret
mov
enter
pusha
int3
ret
aaa
sbb
pop
jae
sub
lret
in
daa
mov
pop
mov
inc
or
jge
test
clc
bound
jnp
mov
fstpt
int3
xchg
and
rorl
ds
ds
adc
push
jbe
dec
lods
mov
arpl
test
mov
sbb
jge
inc
sub
aaa
sbb
jl
cwtl
xor
inc
xchg
std
dec
loop
jl
aaa
out
out
dec
or
jl
mov
xchg
in
xchg
cmp
stc
inc
sbb
cmp
insb
mov
shrl
test
sarl
inc
cmp
lcall
xchg
mull
push
cmpsl
pop
cs
add
out
mov
cmp
in
dec
pushf
dec
int
dec
mov
add
lds
adc
jns
or
add
stos
and
cmp
out
das
pop
jecxz
and
shr
or
jb
dec
js
or
xor
and
adc
xor
aaa
mov
xchg
push
mov
sbb
insl
xchg
add
xor
mov
cmp
mov
stos
mov
sti
and
das
dec
cmc
sub
inc
aaa
pop
nop
dec
arpl
lahf
das
movsb
call
dec
fmull
cld
cmp
imul
test
nop
ja
jmp
mov
jno
jne
or
jbe
xchg
or
jae
mov
lods
mov
jnp
ss
ja
outsb
lret
mov
cmp
shll
mov
mov
inc
jae
sub
notl
test
out
dec
sbb
cwtl
xor
mov
fcmovnbe
xor
lret
and
imul
xchg
jnp
out
adc
addr16
aad
pop
lahf
popf
mov
imul
dec
push
mov
jne
dec
sbb
test
sbb
movsb
push
sbb
mov
fnstcw
adc
and
lcall
pop
push
jbe
dec
or
sbbl
mov
cmpsl
mov
jnp
enter
stos
sbb
jnp
xor
cmc
mov
loop
in
ret
dec
or
add
pop
outsl
and
sbb
stos
test
outsl
fucomi
in
test
pop
aas
cltd
inc
lahf
mov
add
jns
xor
mov
or
bts
jbe
and
lret
xor
in
pop
daa
and
lret
fucomip
mov
repz
push
sahf
pop
iret
cltd
xor
call
loop
inc
sub
aad
popf
mov
rcll
lods
scas
sti
leave
xor
and
mov
cmp
call
sub
pop
xor
test
sub
xchg
mov
hlt
ljmp
pop
loop
ljmp
sti
test
stos
ficoms
sub
xlat
fs
mov
fstl
mov
or
stos
rcl
or
push
pop
and
pop
jmp
and
push
in
pop
push
cmp
hlt
cmp
fisttpl
adc
fdivrl
outsb
sti
call
mov
call
lock
int3
xchg
in
arpl
push
xchg
jg
leave
xchg
iret
jbe
and
call
dec
or
add
mov
paddd
mov
mov
push
lret
out
push
mov
mov
xor
sbb
les
shll
sbb
sbb
ss
sub
lahf
sub
xor
cs
adc
push
stos
jae
dec
lea
jmp
dec
mov
cmp
push
jmp
xor
stos
sub
hlt
inc
xorl
stos
jnp
push
mov
xchg
stos
pop
jl
push
add
xchg
sti
pop
sub
cmp
xchg
outsb
xor
icebp
in
call
sub
lds
push
mov
push
mov
insl
cmp
rorb
push
cmp
lahf
int3
fiaddl
dec
mov
xor
xchg
lahf
sub
add
xchg
sbb
push
push
fiadds
out
lret
outsl
cmp
icebp
jecxz
sbb
lods
iret
cmpb
cmp
fildll
sub
js
mov
fimuls
lcall
push
mov
fstpl
aad
xor
push
sbb
std
dec
mov
into
xor
sub
cmpsl
pop
dec
iret
stos
xchg
xor
shrl
inc
mov
jecxz
outsb
fs
je
lcall
jmp
adc
mov
mov
sbb
arpl
jnp
imul
push
into
sub
sbb
and
inc
imul
xor
jge
and
dec
add
test
adc
stos
xlat
adc
mov
cltd
les
das
cmovne
je
push
jae
or
idiv
mov
imul
xchg
pusha
mov
outsl
mov
call
inc
pusha
and
mov
mov
cli
mov
cmp
push
shlb
shrb
in
inc
xlat
pop
dec
xchg
dec
sbb
and
int
sbb
and
je
mov
xor
dec
xchg
enter
cmp
sub
out
sbb
ficomps
ljmp
cwtl
lret
pcmpgtb
es
les
mov
jge
flds
xchg
adc
add
adc
cmp
sbbl
in
scas
js
jo
insb
hlt
pop
xor
int
mov
inc
shr
sub
pop
or
sbb
or
mov
push
mov
test
push
mov
mov
xchg
sbb
dec
test
call
adc
mov
int
lahf
test
test
or
mov
and
inc
xor
xorb
and
test
pushf
fbstp
call
dec
ret
push
ja
leave
fwait
push
in
xlat
push
xor
cmp
sar
and
pop
iret
cmc
and
movsb
arpl
shr
jp
out
es
pop
iret
xor
adcl
jecxz
pop
ljmp
or
jmp
mov
mov
sbb
sbb
hlt
jno
add
subb
mov
push
jecxz
and
or
cmp
fs
mov
dec
stos
call
mov
mov
or
inc
call
dec
jne
jge
mov
jp
rclb
aad
xor
push
jbe
mov
loope
ret
popf
push
inc
int3
inc
mov
test
es
dec
xchg
lret
gs
and
shrl
mov
imulb
or
or
pop
shll
scas
stos
push
test
pop
xchg
fxch
iret
jb
sub
and
lret
dec
mov
stos
sub
jae
xchg
jmp
or
xchg
test
sbb
shrb
dec
xor
ljmp
test
inc
xchg
cmp
iret
lret
imul
inc
fildl
add
or
in
jge
sbbl
push
shrl
lret
xor
dec
mov
in
shlb
dec
les
jns
xor
add
ficoml
loopne
jecxz
push
in
jo
imul
push
rcrl
add
fucomi
inc
pop
jmp
push
into
and
daa
add
cmp
xor
lahf
and
adc
pop
mov
fcmove
mov
imul
xchg
or
test
in
xchg
add
pushf
or
pop
into
or
inc
sub
in
insb
pop
aad
mov
and
mov
ja
push
int3
insl
ret
jae
mov
insl
xchg
mov
insb
sbb
fwait
and
add
outsl
stc
lahf
imul
nop
push
xlat
adc
pop
sbb
inc
das
mov
clc
call
jo
in
mov
loope
jnp
int3
push
loopne
mov
lock
sbbl
fdivrs
fstpt
mov
mov
push
push
cmp
jmp
mov
fnstenv
dec
mov
xor
sti
int
jmp
pop
andl
adc
mov
mov
mov
scas
sub
and
fists
mov
insb
dec
adcb
mov
movsb
inc
jbe
sub
pop
movsl
fsts
mov
arpl
jle
pushl
lea
movsl
out
xlat
fnstcw
das
imul
mov
fisubl
les
stos
cwtl
sub
sbb
ds
xchg
cmp
in
cwtl
cmp
or
fs
mov
fs
jno
enter
cmp
imul
ficompl
fstpt
fadds
mov
mov
aad
frstor
movsl
sub
inc
jge
es
jnp
shl
dec
call
push
loope
adc
outsl
loop
subl
xchg
lret
push
inc
cmp
sub
cli
test
aaa
pop
fs
jmp
adcl
int3
loopne
push
xor
jno
inc
fbstp
inc
jno
xchg
pop
jno
xor
pushl
aam
xor
mov
xor
mov
jne
test
mov
rorl
mov
mov
cmp
add
call
sub
sbb
ljmp
sbb
mov
inc
test
loop
jbe
ss
sub
popa
mov
adc
shlb
xor
push
loop
pop
sbb
mov
adc
js
ss
jge
adc
lods
mov
mov
loop
mov
or
xchg
push
int3
cli
pop
jecxz
into
mov
rorb
inc
jns
flds
cld
fs
jl
flds
cmp
repz
int
jmp
add
mov
aam
mov
pop
imulb
inc
jmp
xor
out
ret
adc
mov
dec
xchg
adc
clc
je
dec
enter
cltd
jbe
and
xchg
and
and
nop
add
scas
call
in
mov
loopne
cmp
pop
rolb
inc
xor
mov
pmaxsw
cli
mov
aaa
sbb
sti
stc
jno
stc
mov
sbb
add
gs
shlb
adc
aaa
jns
test
cmp
imul
shl
aas
adc
mov
push
adc
mov
bnd
lock
mov
sub
inc
pushl
jl
insl
or
mov
push
cmp
add
jne
dec
jmp
jae
sub
cmpsb
mov
jl
fwait
xchg
pop
xor
sbb
pushl
adc
sub
and
jo
add
adc
jge
mov
mov
popf
jbe
gs
xor
popa
movsb
mov
cmp
and
push
imul
add
pushl
aad
xor
scas
xor
fnclex
imul
icebp
add
dec
je
mov
scas
xor
cmp
dec
stos
or
cmpsb
add
mov
cmp
loopne
jle
or
lret
scas
loop
stos
fadd
pushf
adc
out
fisubrl
and
iret
fidivl
xlat
shlb
push
sbb
movsb
xor
xor
adc
lods
stc
ljmp
outsb
xchg
arpl
and
cli
ror
push
cmpb
mov
fidivs
in
push
push
aaa
sub
loope
adc
jb
arpl
or
mov
xlat
pop
mov
dec
push
inc
xchg
inc
mov
push
aas
lds
es
mov
cmpsb
pop
push
xchg
addr16
imul
cmp
ljmp
enter
lcall
push
es
es
loop
and
cwtl
sub
pop
aad
jle
jecxz
mov
aad
rcrl
mov
xor
and
lock
test
sbb
pop
in
mov
es
pop
call
sbb
dec
int3
les
pop
mov
imul
mov
adc
lods
outsb
enter
movsl
fisubrs
push
or
fisubrl
aas
repnz
xor
mov
dec
and
aas
dec
and
xchg
push
and
add
movsb
je
scas
sub
xchg
in
in
push
rep
mov
add
cwtl
mov
adc
xor
fwait
mov
mov
fmuls
jbe
mov
movsb
scas
pop
sti
push
add
xchg
mov
pop
lds
in
mov
xor
aad
imul
aaa
cmp
iret
sbb
or
jmp
aaa
sbb
push
icebp
loope
loop
inc
das
imul
test
pop
xlat
enter
fsubl
scas
jmp
push
vpmacsdql
xchg
inc
cmp
inc
outsb
sahf
arpl
dec
mov
ds
or
fs
daa
dec
nop
or
pop
scas
lds
push
fcmove
or
lods
ds
call
or
mov
aam
leave
fbstp
add
inc
adc
sub
gs
sbb
arpl
aas
pop
movsb
sub
mov
push
std
or
jne
jnp
sub
cld
pop
in
lret
push
push
shl
in
shld
cltd
adc
ss
and
mov
lock
mov
or
xor
jmp
shr
iret
mov
in
xlat
outsl
xor
inc
in
aas
sbb
leave
ja
loop
test
shrb
push
scas
call
cwtl
mov
icebp
mov
dec
push
jnp
sarl
mov
int3
stos
inc
mov
pop
es
ljmp
out
mov
mov
jg
sbb
sti
lock
xor
add
int3
aaa
hlt
add
insl
dec
nop
daa
xor
xchg
arpl
mov
push
mov
sti
jb
mov
fdivl
jecxz
das
sarb
cs
cmp
xor
repz
add
jl
xor
cld
jne
insb
sub
jae
mov
mov
mov
das
daa
xor
mov
pop
out
push
push
xor
adc
addr16
xchg
adc
xor
inc
cmp
lods
andl
sbb
imul
sbb
jge
or
mov
inc
adc
push
mov
inc
das
std
test
les
iret
xchg
imulb
cwtl
test
cmpsl
int
das
ss
pop
fucomip
fldl
ljmp
adc
jle
dec
pop
mov
dec
mov
inc
sbb
and
jl
js
lds
lods
push
mov
imul
sbbl
inc
inc
sbb
test
out
imul
pushf
insb
sub
sbb
mov
xor
mov
or
enter
or
sbb
outsb
loop
jnp
xor
mov
cmp
xor
int3
dec
fisubl
xorb
mov
add
bound
sub
icebp
in
es
jno
push
pop
xchg
ss
xor
mov
mov
or
push
mov
xor
int
fwait
jecxz
iret
jmp
cwtl
or
jne
mov
cmpb
ja
pop
inc
les
int
and
rcl
dec
mov
outsb
mov
mov
or
jo
cmpl
movsl
mov
inc
cmpsl
sub
repz
aas
pusha
rcrl
pop
lcall
scas
sub
clc
cmp
push
mov
xor
out
and
sub
jmp
fisttps
cmp
jp
or
or
cmp
ljmp
les
test
sti
adc
enter
leave
inc
cmp
jmp
stos
cs
dec
arpl
nop
pop
rorl
or
std
flds
sbb
in
jae
sub
test
aam
lods
lret
xor
adc
jne
gs
xor
sub
pusha
xor
add
pop
fcmovne
test
in
mov
jno
add
and
jb
and
cwtl
pop
xor
push
dec
imull
inc
sbb
jecxz
sbb
lds
movsb
add
stos
mov
es
daa
or
or
or
sub
jge
and
dec
shll
data16
out
sbb
lods
sub
jo
sbb
mov
iret
xor
sub
or
jae
sub
insl
out
xorl
jne
aaa
xchg
jnp
adc
rclb
cli
lcall
cmpsl
ja
sbb
js
jb
pop
mov
push
dec
xchg
dec
inc
mov
jo
inc
adc
dec
push
sub
mov
mov
sbb
lea
mov
cmp
lcall
out
mov
loope
hlt
inc
push
mov
xchg
aam
inc
shr
push
xor
divl
jns
fisubl
and
loopne
inc
lret
jmp
mov
arpl
lods
or
and
fnstcw
lret
add
mov
pop
shll
shl
and
out
lahf
fcmovne
nop
push
sub
rcrl
lods
inc
sti
js
xchg
push
add
xchg
jl
xchg
arpl
jl
xchg
insl
or
adc
shll
out
and
gs
sub
mov
or
push
arpl
jnp
scas
je
xor
addr16
mov
xchg
push
fsubrp
cmp
out
loop
jecxz
pushw
xchg
add
mov
xor
push
mov
mov
addl
mov
popa
test
mov
jnp
xadd
inc
adcb
adc
test
repz
inc
push
nop
xor
add
call
mov
push
pop
divb
sbb
test
hlt
bound
jnp
inc
in
mov
out
cmpsb
mov
sbb
push
jecxz
mov
movsl
outsl
imul
push
inc
mov
push
fstpl
sub
xorb
push
repz
jp
push
and
stos
push
int3
aad
xchg
jecxz
pusha
loopne
movsb
xor
xor
jae
std
arpl
adc
sub
sub
aam
mov
xor
mov
or
mov
test
sarb
sti
pop
push
mov
dec
lea
jge
pop
dec
jae
scas
push
pop
call
mov
icebp
xlat
out
leave
enter
icebp
xchg
lds
pushf
ret
roll
or
testb
aaa
or
or
mov
mov
fidivrl
xlat
fidivrl
xor
xchg
pop
dec
or
addl
lret
add
mov
jb
mov
testb
sbb
icebp
ja
lahf
ljmpw
xor
and
sti
mov
test
mov
cmp
xchg
mov
push
inc
sbb
jmp
mov
lea
pop
xor
inc
push
pushf
ret
and
leave
cmp
lock
mov
imul
dec
enter
push
add
out
push
rcrb
jp
inc
mov
aaa
in
xor
push
roll
std
insb
push
mov
jno
clc
cmp
decl
add
notb
sahf
xchg
fcompl
in
sbb
jno
or
int3
or
je
lds
fnsave
jge
pop
pop
fwait
add
push
adc
or
mov
push
xor
cwtl
into
mov
mov
pop
daa
leave
in
jecxz
data16
or
scas
add
pop
or
mov
sbb
dec
adc
scas
mov
fistpll
add
cmp
sti
xor
stos
enter
or
pop
inc
add
mov
or
aas
mov
outsl
stc
negl
cmp
fimuls
rclb
out
loope
repz
mov
mov
xor
xchg
cs
add
xor
dec
or
ss
mov
out
ljmp
sbb
iret
dec
ss
sbbl
dec
jmp
jne
jge
data16
icebp
mov
add
js
sbb
add
mov
fucomp
push
jns
cwtl
pop
or
jne
ret
inc
mov
nop
lds
push
adc
lret
and
lcall
stos
mov
inc
faddl
xor
std
dec
mov
icebp
int3
stc
pop
call
sub
xchg
sub
and
das
sbb
movsb
imul
cmp
inc
lret
jge
out
subl
ret
and
ljmp
dec
push
push
fisttpll
add
sub
movsl
aad
fidivrs
xorb
int
adc
pop
stos
and
rcrl
dec
and
add
or
adc
rcrl
push
jne
push
jmp
icebp
incl
and
mov
mov
mov
fnsave
outsl
or
jmp
cltd
fisubrs
jg
mov
mov
test
dec
fucomi
jo
and
and
xor
cmpsl
and
fcmovb
rclb
jnp
add
mov
cmpl
or
jae
rorb
fsubp
push
cmp
ja
jb
lods
mov
dec
stc
dec
pop
out
movsl
mov
pop
push
add
cmp
shrl
arpl
cmp
jno
mov
adc
sti
inc
inc
sub
add
adc
pop
xor
xlat
xor
pusha
daa
xchg
enter
jp
mov
push
pop
test
jl
leave
divl
xor
es
in
bound
fwait
iret
pushf
xchg
xchg
xchg
shlb
lods
iret
adc
xchg
jne,pt
mov
pop
in
cmp
iret
fdivrp
pop
pop
push
std
cmp
jae
mov
imul
fcmovnu
sahf
stc
loope
or
mov
xchg
and
or
inc
xor
inc
imul
aaa
int
in
popf
adc
lock
push
cld
lea
out
mov
out
or
dec
xchg
push
xchg
shl
mov
inc
in
pop
dec
or
jo
or
pop
int
sarl
mov
or
mull
mov
jge
pop
dec
mov
pop
in
xchg
pop
shrb
pop
mov
xor
sub
xchg
pop
cmp
xor
loop
adc
add
cltd
cmp
sahf
rolb
xchg
into
in
adc
movsb
adcl
jp
mov
pop
jbe
imull
inc
scas
orb
mov
dec
xor
jmp
or
and
cmpsl
shrb
jmp
push
push
daa
xchg
fcoml
out
adc
sbb
jns
test
push
mov
mov
popa
imul
lcall
push
push
mov
cmp
inc
loopne
mov
int3
jns
mov
lahf
loope
jg
pop
test
and
add
sti
or
daa
cli
mov
jae
int3
or
push
inc
movsb
icebp
cld
stc
mov
daa
loopne
int3
jno
test
clc
std
pop
mov
mov
dec
jp
mov
push
movsb
and
cmp
push
ja
dec
pop
xchg
dec
movsl
jo
int3
out
dec
push
fiaddl
icebp
fdivrs
xchg
cmp
sbb
inc
mov
outsb
pop
das
pop
sub
xlat
rcrl
iret
jb
mov
pop
jo
shlb
enter
adc
mov
in
xchg
add
rclb
mov
leave
mov
pop
into
mov
int
mov
shrb
mov
or
pop
lret
in
stos
js
cmc
fwait
aam
lods
mov
mov
mov
dec
jmp
bound
dec
std
or
adc
cmp
adc
xchg
inc
mov
dec
shlb
in
push
pusha
sti
jne
mov
sahf
imul
jbe
test
mov
pop
xchg
mov
xchg
loope
sub
enter
std
es
push
cmp
xor
jmp
jge
push
jmp
add
jge
lock
pop
sub
mov
fidivrl
out
mov
fs
dec
aas
leave
loopne,pt
inc
test
iret
imul
dec
test
mov
push
mov
mov
cld
push
leave
mov
push
rcrb
jb
push
divl
add
and
cmp
mov
push
mov
popf
mov
pop
adc
jg
daa
mov
and
arpl
sub
popa
clc
cmp
pop
mov
add
cli
test
enter
add
push
add
mov
jl
jmp
cmp
mov
icebp
mov
dec
jae
test
test
lods
cmpsl
test
es
jnp
jmp
pop
adc
inc
addr16
add
pop
and
negb
and
mov
xor
stos
test
dec
pop
shll
int
rcll
xchg
adc
cltd
imul
xchg
scas
in
enter
mov
lds
mov
lret
xor
lcall
inc
loope
push
inc
inc
xchg
adc
iret
mov
fimuls
stc
ss
loope
jl
and
jns
test
pushf
or
mov
pop
shlb
and
add
jne
aaa
sti
outsb
fstps
sti
fadds
loopne
mov
or
jle
jne
divb
orl
dec
add
icebp
jmp
ret
push
movsb
mov
xor
jl
cld
inc
push
into
jns
xchg
insb
lret
add
stc
out
pushf
ja
bound
das
cmp
pop
insb
rcrb
jbe
outsb
adc
sbb
mov
movsl
ret
data16
pop
btrl
xchg
ret
pop
test
pop
pop
andb
or
fimuls
mov
mov
sub
adc
cmpl
addb
ret
xchg
adc
xchg
pop
jo
jo
subb
data16
loop
ret
jp
lock
mov
or
repz
or
test
es
scas
mov
imul
loop
cmpl
test
xor
popf
push
and
imul
stc
repz
jno
adc
repnz
jb
lds
and
add
mov
jl
push
in
repz
cld
les
daa
inc
insl
inc
push
or
cmc
test
outsb
sbb
ret
adc
daa
mov
jp
ds
dec
adc
xchg
stos
or
mov
loope
dec
jbe
out
push
push
js
sbb
hlt
rcl
inc
rol
adc
cmc
push
mov
cmpb
cmp
call
dec
jns
sti
dec
jecxz
sub
lahf
pop
stos
xlat
iret
iret
mov
inc
sub
push
sub
leave
lret
jmp
xor
aad
or
movsl
xchg
push
outsl
icebp
xor
aas
arpl
xor
sar
mov
mov
jne
ds
jo
fwait
repz
loope
shll
push
pop
fdivp
and
aam
mov
icebp
jbe
inc
pop
test
jge
lods
xchg
add
fstpl
aam
test
out
roll
int3
xchg
adc
add
mov
cmp
or
sbb
das
add
adc
inc
and
push
mov
or
mov
inc
je
dec
xor
mov
pop
fcomp
mov
out
push
fs
repz
mov
cmp
inc
mov
int
cmp
sub
fisttpll
loopne
sub
lods
rcll
sub
sub
mov
mov
fwait
aas
adcb
rcll
jns
lret
jmp
fst
cltd
and
xor
cs
popa
aas
mov
mov
fisttpl
jmp
popf
push
or
in
call
jge
mov
decb
les
push
sbb
outsl
mov
push
add
aaa
jno
in
stc
jo
lods
insl
or
aaa
jno
call
and
or
lea
and
scas
lods
jno
jmp
push
or
xlat
arpl
xor
dec
orl
jnp
push
dec
lock
push
pushf
hlt
ds
adc
cmpsl
movsl
mov
cmp
jae
out
repz
push
sbb
mov
lods
or
sbb
cmp
push
mov
pop
ljmp
sbb
pop
call
ds
push
sub
jbe
pop
mov
ss
and
adc
or
adc
sti
push
xchg
loope
repnz
inc
sti
cli
pop
cmp
sbb
push
jbe
inc
push
mov
and
push
or
dec
int3
lods
aad
pop
or
add
ret
cmc
pop
call
mov
outsb
ljmp
icebp
std
test
test
mov
loop
push
add
pop
push
incb
divl
mov
ja
in
mov
inc
xchg
cs
cmpsl
mov
cmpsb
pop
jle
xchg
sbb
and
pop
add
pop
retw
and
andb
push
jns
int3
dec
and
ds
mov
movsl
fxam
or
xor
fistps
cmpb
loopne
inc
leave
ret
scas
add
pop
fst
pop
xlat
iret
dec
xchg
sub
sub
jmp
xchg
mov
loope
cwtl
inc
jle
sub
or
lret
gs
lods
jmp
and
repz
mov
sahf
arpl
imul
testl
mov
push
xor
ds
cmc
call
popa
adc
into
ja
push
test
jnp
dec
lcall
sub
and
pop
xlat
cli
push
jno
jnp
loopne
push
add
ja
std
xor
jno
lcall
cwtl
pop
enter
ficoml
sub
shlb
jl
test
cmp
aaa
cwtl
mov
jb
fdivs
jno
and
xor
inc
or
inc
lds
loopne
dec
or
addr16
pop
jmp
mov
ret
ja
inc
pop
cmp
pop
in
mov
jle
mov
stc
or
mov
into
nop
pusha
sub
mov
cltd
mov
pmulhw
add
push
adc
dec
ljmp
lods
nop
push
jae
aad
outsl
mov
pop
scas
in
mov
xor
int
and
lcall
cli
adc
sub
lods
add
inc
test
mov
xor
movl
pusha
push
pop
test
imul
xor
sbb
jnp
in
or
inc
push
int
jmp
dec
shlb
movsl
add
xor
mov
outsb
inc
pop
lret
cmp
mov
jecxz
movsb
shll
fistps
and
fisubrl
lock
icebp
cmp
pop
sbb
lret
pop
mov
inc
loopne
pop
addb
lret
mov
pop
fsubrl
xor
dec
les
shrl
xchg
add
sub
imul
mov
test
mov
stc
mov
test
fiadds
xor
cmp
cmp
mov
xor
bswap
sub
mov
add
outsb
xchg
cld
xor
das
xor
lods
fimuls
imul
hlt
push
pop
mov
adc
pop
mov
push
or
fs
mov
xor
lahf
mov
movsl
mov
hlt
mov
in
add
cmovnp
mov
add
push
mov
ficoms
lock
mov
push
cli
add
xor
gs
sbb
or
je
ljmp
andb
outsb
sahf
mov
sub
pop
gs
pop
mov
decb
out
int
dec
scas
lock
jno
pop
inc
jno
iret
mov
push
jae
xchg
jb
jne
inc
lahf
sub
add
cmp
lcall
sar
pop
cmp
int
xor
rcrl
pushf
pop
adc
std
pop
push
roll
jo
data16
lods
xchg
mul
jae
xchg
sbb
movsb
outsl
add
aaa
incb
cld
lods
call
dec
imul
mov
jmp
and
push
jnp
jg
cmp
cmp
xor
add
je
and
cmpl
fildl
and
cmp
nop
mov
or
int
ljmp
aaa
and
mov
pop
lret
icebp
dec
leave
xor
sti
xor
popa
dec
xchg
into
out
sub
rcr
mov
shlb
jbe
inc
out
sub
stos
popa
mov
xchg
jle
sub
ret
cmp
ja
mov
jle
jae
into
or
pop
xchg
jo
cmc
inc
orb
jle
cmp
into
hlt
push
int
stos
push
mov
js
fnsave
add
test
jmp
jbe
dec
ja
jmp
mov
fnstsw
in
scas
sub
mov
aad
sub
test
jle
mov
adc
pop
aam
ficomps
jo
pop
jno
fbld
pop
push
push
sbbb
sub
in
jo
jp
inc
lcall
sub
push
or
cmpsl
lock
push
fnstenv
jg
mov
in
xlat
enter
fsubrl
adc
xchg
into
xchg
dec
mov
jae
jl
dec
push
mov
ss
cmp
lods
out
xor
pop
cmp
add
xor
xor
aad
shrb
inc
cs
cmp
pusha
aas
scas
adc
ss
aas
nop
add
mov
ds
adc
sub
push
pop
cmc
jae
repnz
addr16
cli
std
push
adc
jne
shl
es
lret
xor
adc
lods
sub
stos
xchg
or
fwait
scas
fiaddl
fcompl
sti
cmc
adc
sahf
add
sub
mov
xchg
int3
sbb
idiv
ds
adc
adc
aam
ss
into
mov
mov
pushf
outsb
loop
rorb
gs
adc
cli
divb
mov
cld
imul
jbe
xor
push
inc
mov
pop
sbb
inc
sub
jecxz
es
repz
and
inc
fwait
out
in
sub
aaa
xor
fninit
xor
push
mov
add
add
mov
ja
inc
or
push
adcb
cmp
and
test
test
je
stos
xor
dec
xor
cmp
sbb
add
xor
test
and
push
xchg
movsb
cmpl
popf
nop
or
and
shlb
in
mov
and
xchg
test
mov
loope
rcr
jl
or
in
sub
cld
icebp
cld
in
pop
test
lods
or
cmpsb
aaa
push
test
add
adc
sub
orb
in
dec
mov
iret
xchg
inc
lds
push
mov
mov
idiv
xchg
fwait
out
and
loop
sbb
icebp
add
mov
aad
xor
mov
dec
adc
mov
push
pop
xchg
mov
pop
lahf
adc
ret
ret
iret
jo
push
sbb
fwait
jbe
adc
xchg
and
stos
add
shrb
addr16
pop
lahf
les
dec
cmc
mov
inc
pop
aaa
jmp
cmpsb
push
int
xor
add
jmp
scas
nop
push
test
data16
ret
rclb
insl
int3
push
xor
pop
loope
push
mov
jb
push
pusha
xor
faddl
cwtl
in
dec
cmp
repz
dec
lahf
jge
push
push
push
fldcw
vmwrite
inc
pop
es
test
mov
dec
inc
aam
mov
in
popa
iret
adc
jmp
dec
arpl
inc
pop
mov
adc
cltd
mov
sbb
mov
mov
push
mov
xchg
xor
pop
mov
ret
ss
fs
sub
mov
adc
in
lahf
insl
mov
shll
in
push
and
hlt
jbe
mov
xlat
inc
lock
es
push
xor
push
sub
insb
mov
out
fidivl
fs
push
xchg
or
popf
lock
mulb
jecxz
int
popa
push
ret
mov
sub
jnp
jbe
push
hlt
or
rol
mov
hlt
arpl
sub
xchg
fcomps
mov
in
push
cmc
and
in
xor
lods
jno
fcom
fisttps
test
sub
jo
jnp
imul
into
sub
icebp
mov
sub
loope
scas
aas
pop
mov
int
in
push
mov
mov
sbb
push
xor
or
jne
lock
jbe
xor
repnz
xchg
jmp
enter
push
and
mov
aaa
in
test
jb
cli
pop
dec
test
ds
les
push
xlat
adc
sub
lds
jl
jmp
push
and
shrb
roll
inc
bound
popf
pop
dec
iret
xor
lret
push
pop
es
pop
hlt
adc
decb
pop
mov
icebp
xor
orl
sbb
sbb
dec
mov
xor
pop
inc
pusha
out
sbb
mov
push
push
test
cwtl
ja
mov
push
jge
ljmp
xchg
cmp
or
xor
mov
fstpt
jnp
das
pop
call
push
push
or
std
sti
pop
aaa
call
rorl
xchg
les
cmp
xlat
out
mov
lds
stos
enter
les
adc
lret
fsubs
mov
push
lret
icebp
fsts
out
loopne
mov
jl
jmp
or
sbb
and
stc
ret
fs
adc
loopne
sub
sbbb
xchg
filds
imul
mov
jl
xchg
jle
add
rolb
inc
adc
add
dec
xor
push
mov
xor
mov
nop
aas
sub
enter
cltd
mov
dec
xor
jbe
or
and
and
arpl
arpl
pop
dec
mov
imul
push
or
add
fdivs
adc
outsl
in
jo
fcomps
push
fcomps
inc
sub
jge
mov
xor
mov
add
mov
icebp
or
adc
and
add
jne
push
add
push
test
ror
into
mov
clc
cmc
std
lock
inc
test
mov
outsb
fildl
mov
stos
fstpl
lods
negl
mov
sbb
or
xor
daa
inc
test
pusha
rolb
into
ss
mov
adc
mov
add
psubq
mov
push
and
fwait
aad
push
sbb
jecxz
pop
in
icebp
mov
pop
les
and
stos
and
dec
mov
jnp
jmp
stc
jl
pop
sub
and
adc
dec
imul
aad
push
mov
jmp
cs
out
repz
cmpsl
sbb
mov
jns
cmp
and
fdivrl
sub
dec
sub
mov
sti
push
push
mov
jne
add
add
mov
xor
stos
mov
or
pop
dec
mov
rcr
mov
mov
mov
dec
add
iret
imul
dec
push
push
lret
sbb
imul
inc
mov
xor
lret
push
test
pushf
subb
int
sahf
repnz
sbb
aas
popa
jecxz
sbb
sub
mov
fstps
mov
test
test
nop
adc
sbb
jae
inc
mov
in
std
pop
addr16
jl
or
xchg
xchg
adc
pop
hlt
pop
ret
mov
push
ljmp
pop
sub
xchg
jno
shlb
fisttpll
and
out
push
xor
lcall
mov
jecxz
dec
mov
and
cmp
inc
aad
sahf
mov
pusha
into
dec
pop
movb
jecxz
push
dec
imul
shll
ffreep
nop
out
mov
fwait
xor
ffreep
loope
ljmp
popa
sub
jg
sub
mov
sub
bound
jmp
inc
stos
std
pop
fdivrs
ja
leave
dec
fistpll
xchg
mov
adc
mov
lret
mov
aas
in
inc
sti
add
popf
or
gs
inc
mov
in
repz
cs
aaa
push
jae
jle
pop
ja
jbe
add
pop
mov
dec
rclb
imul
xchg
push
imul
shr
xlat
popa
push
movsl
jmp
rcrb
filds
fwait
add
andb
add
js
sbb
push
insl
pop
mov
lock
int3
pop
cmpsb
imul
xor
lods
mov
outsb
xor
mov
push
dec
sbb
mov
mov
das
jnp
std
repnz
aaa
sub
std
inc
arpl
push
fldt
js
xchg
sahf
or
fsubl
imul
int3
or
lret
lcall
stc
test
jbe
out
and
jge
jecxz
les
int
call
bound
dec
push
mov
sbbb
cmp
clc
push
sbb
sub
fisubrl
jl
rolb
xor
pop
mov
rorl
sub
jge
test
cs
mov
jecxz
mov
mov
mov
subb
pop
mov
inc
push
mov
xor
inc
jp
jb
push
mov
pop
fisttpll
or
or
pop
xor
mov
pop
fimull
movsb
pusha
pop
push
pop
adc
mov
sbb
out
loop
jecxz,pn
jp
inc
arpl
cli
mov
test
mov
sbb
pop
xorl
pop
cmp
dec
cmp
adc
out
jns
lods
repnz
adc
rorb
movsb
std
dec
mov
ss
jnp
loopne
jg
mov
add
sbb
sbb
add
pop
int
mov
mov
sbb
jb
out
in
mov
add
mov
mov
sub
and
or
xchg
dec
jg
jge
cmpb
dec
std
loop
jmp
mov
int3
lds
jmp
pusha
cmc
rclb
dec
dec
sti
out
lods
hlt
push
sub
scas
jne
pushfw
push
out
pop
or
aam
add
and
adc
adc
scas
fmull
ljmp
pushf
push
mov
inc
inc
inc
mov
test
mov
sbb
mov
jecxz
xchg
insl
rclb
mov
sub
lods
pop
dec
xchg
into
lods
xchg
mov
sbb
repz
rcr
in
adc
loopne
dec
xor
xchg
push
dec
dec
sub
xchg
jecxz
push
or
or
dec
add
adc
xor
fst
popf
adc
xor
push
jge
xor
test
lods
jo
sbb
xchg
insl
cmp
mov
gs
add
push
and
outsb
enter
addl
outsl
mov
in
add
push
adc
cmpl
loop
xor
cwtl
popa
mov
cwtl
xor
mov
fmuls
dec
shll
inc
mov
int
insl
aaa
push
sbb
dec
rolb
mov
inc
cmp
jecxz
inc
or
cmp
add
mov
mov
pop
cmp
and
sub
pop
add
dec
adc
sbb
lcall
mov
std
leave
mov
fsubrp
jmp
jmp
inc
or
arpl
sbb
adc
pusha
and
in
daa
out
add
in
sub
dec
dec
ds
or
jbe
lea
in
and
push
fdivr
jecxz
jae
sbb
inc
jl
jle
push
push
cmp
pop
sub
roll
inc
lods
data16
mov
dec
mov
jle
mov
daa
adc
es
jb
mov
mov
adc
dec
ret
push
jo
dec
lcall
pop
push
mov
jle
test
sbb
xor
sbb
sbb
add
cmp
stc
cmp
mov
dec
mov
and
mov
sub
sub
jecxz
addb
cmpsb
das
inc
sub
xor
cmp
xchg
gs
push
stc
cmp
xor
jae
adc
push
jno
shlb
leave
popa
sub
jns
xor
test
push
jne
mov
push
xchg
sub
loope
aas
mov
mov
xor
sub
insl
in
jo
push
inc
or
insb
in
repz
fcmovbe
mov
cmc
push
xor
je
andl
mov
dec
mov
out
push
insl
xchg
mov
pop
push
mov
push
test
pop
inc
test
jns
lcall
fwait
jno
adc
lods
pop
insb
imul
lret
dec
mov
flds
cmc
pop
stos
jno
lahf
fcomps
mov
xor
daa
aaa
and
sub
jl
mov
lods
push
lods
nop
imulb
lahf
mov
inc
cmp
adc
xchg
mov
fcomps
enter
pop
pop
add
lock
mov
repnz
jg
pop
xchg
shl
push
popf
lods
or
mov
mov
inc
cmpsl
out
inc
add
in
call
xor
jmp
xchg
es
push
pop
adc
mov
xor
sbbl
add
sahf
sbb
in
xchg
push
in
pop
mov
cmp
inc
jge
cmp
test
jp
les
je
push
ds
popa
rcl
pop
insb
sub
mov
push
and
sub
es
testb
das
mov
loop
addr16
inc
cmp
lds
pop
shl
pop
maskmovq
divl
mov
in
in
xor
lret
pop
push
pop
pop
xlat
int
xchg
push
imul
pop
in
xlat
inc
xchg
mov
mov
int
cmp
fsubl
ret
call
stos
dec
loop
test
inc
les
lods
or
jp
jb
shl
xor
fmuls
sti
dec
daa
adc
lcall
cmc
mov
xor
loopne
sbb
cwtl
push
sahf
nop
test
sbb
das
mov
add
insl
mov
cmpl
fs
out
test
stos
push
xor
mov
push
pop
push
pop
insl
mov
rolb
sbb
mov
mov
addr16
bound
fcoml
cmpsb
sub
jg
mov
hlt
jecxz
andl
sub
in
mov
inc
dec
jne
icebp
popa
notl
or
notb
into
cli
sub
sbb
test
pop
adc
fcompl
jno
cmp
cmpsl
mov
iret
inc
jbe
pop
idivl
fsubrl
and
sbb
ljmp
adc
nop
jmp
nop
push
pop
shlb
dec
mov
lds
rcl
cli
mov
mov
xor
movsl
cltd
jmp
js
pop
inc
dec
leave
pusha
adc
adc
je
push
and
sahf
les
jle
inc
icebp
push
add
jmp
rol
mov
aaa
std
rep
cmp
add
aam
gs
xchg
sbb
decb
cld
lss
div
mov
gs
daa
addr16
sub
cmpsb
dec
or
jae
sbb
dec
stc
push
dec
fs
mov
aaa
gs
in
mov
xchg
pop
lret
icebp
cmp
data16
je
icebp
enter
shll
int
test
mov
xor
pusha
pop
xlat
adc
int
lea
inc
mov
sti
cltd
pop
pop
cltd
ja
jno
mov
cmp
pop
stos
jae
mov
jecxz
mov
and
repz
pushf
lods
dec
sbb
int3
mov
ficompl
inc
inc
or
mov
mov
loopne
mov
push
push
pop
pop
js
and
cmc
out
sub
jl
xchg
adc
pop
popf
nop
popa
out
adc
and
xor
xorb
adc
or
lcall
or
mov
cmp
mov
sub
mov
mov
or
ret
sbb
dec
sub
or
add
lea
ljmp
mov
xchg
or
push
dec
sub
mov
or
jbe
jns
pop
fwait
ret
mov
subb
jp
loop
sbb
sub
pushf
xchg
sub
ret
mov
ds
add
int3
push
xchg
inc
adc
fldl
adc
aam
cld
fs
outsb
fwait
sub
inc
lea
js
pop
ljmp
insl
adc
das
xor
cmpsl
mov
and
mov
clc
rcl
jle
push
xor
in
add
fwait
sbb
jnp
jge
xchg
cmp
rol
mov
imul
dec
loope
cmp
sarb
int3
push
inc
aas
mov
sub
push
fs
push
mov
jns
mov
sbb
movsb
cmp
xor
and
fcmovbe
ret
fsub
jge
nop
mov
add
icebp
mov
lahf
dec
pop
scas
mov
mov
adcl
push
test
or
mov
cmp
rolb
xor
addl
jb
addr16
fbstp
xchg
sub
jle
add
jecxz
pop
xchg
mov
out
and
inc
jl
or
shll
pushf
lcall
aam
sub
and
and
xor
pop
dec
sahf
xor
jg
dec
xorl
pop
xor
push
rol
fisttpll
shlb
mov
jl
jle
scas
arpl
push
mov
jnp
mov
aam
inc
imul
mov
popf
jmp
test
xchg
jno
fiaddl
add
rcrb
cmp
inc
imul
mov
cltd
pop
or
jl
addb
imull
pop
cltd
cmp
mov
daa
loope
pop
into
push
push
ret
cmpsb
inc
lret
fcomi
cld
hlt
sbb
fisttpll
ja
test
sahf
dec
scas
loop
mov
cmpsl
mov
imul
inc
pop
lds
pop
mov
lahf
adc
cmc
xor
jnp
jne
out
nop
pop
pop
adc
sbb
cld
adc
mov
push
mov
cmp
popa
mov
cmp
out
xor
out
mov
add
or
pop
xchg
add
push
mul
push
ret
jl
bound
adc
and
push
pop
inc
sub
jmp
xchg
shrl
xor
dec
sub
arpl
xor
push
outsb
bnd
lcall
push
int
imul
jno
aas
jnp
outsb
push
test
ret
mov
adc
dec
jo
lds
push
mov
jno
rcr
jg
push
cwtl
push
push
jge
or
and
mov
push
shll
pop
test
ss
push
ds
push
stos
sbb
adc
pop
mov
pop
imul
test
cmpl
test
xor
xor
mov
push
lods
test
jo
jae
outsb
or
fwait
mov
xchg
into
push
jbe
sbb
cld
mov
lahf
test
out
dec
and
in
jmp
sbb
out
xor
jg
add
sbbl
xchg
xor
call
xchg
cwtl
clc
add
cmpsb
mov
xchg
clc
adc
jno
and
fldt
stos
aas
and
mov
lahf
add
pop
push
inc
xchg
ror
sti
xchg
mov
nop
mov
js
cmpsl
test
push
iret
mov
fiadds
dec
jge
hlt
or
mov
ret
addr16
lods
mov
shll
mov
push
xchg
dec
sti
repz
daa
sub
icebp
mov
pop
cmp
xor
pop
insb
cwtl
cmp
jmp
push
mov
mov
mov
push
sahf
popf
jo
or
out
add
in
or
fnsave
xchg
xchg
add
int3
ror
cmpsl
ja
mov
mov
jle
data16
xchg
out
mov
or
push
in
dec
scas
jl
arpl
jns
jmp
xchg
xchg
push
push
cmpsl
push
scas
push
es
bound
mov
and
rclb
enter
xor
mov
adc
push
jle
shlb
adc
std
mov
and
int
push
xor
sar
pop
adc
jbe
pusha
aam
xor
dec
mov
das
xchg
lret
int
fdivrp
movsb
sarb
call
js
sub
jl
popl
cmpsb
xchg
clc
inc
xchg
arpl
jmp
lods
out
test
xor
push
int
ss
add
clc
xor
cmp
inc
fisttps
jecxz
pop
test
ret
out
mov
xchg
push
dec
shr
test
cmp
out
adc
test
or
sbb
loop
enter
xor
repnz
xchg
cmp
jnp
or
xchg
jno
stos
sub
xchg
xchg
cwtl
jl
fidivs
push
das
lods
jo
ds
fs
orb
iret
jl
add
adc
adc
mov
rcrl
xor
repnz
sub
xor
sub
or
cli
sub
lds
jle
cmc
sbb
stos
mov
dec
xor
and
scas
add
scas
push
xchg
inc
sub
push
mov
mov
ror
fmul
fisubl
jbe
add
jb
out
rcrb
lret
ret
xor
sbb
adc
or
in
out
mov
stos
xchg
sub
mov
push
mov
mov
scas
mov
daa
clc
fildll
jo
mov
push
decl
push
xchg
mov
hlt
push
add
mov
jae
jmp
imul
push
jb
or
push
lods
push
push
std
aas
push
jl
jne
push
jne
movsb
push
mov
and
ret
mov
lret
xchg
mov
or
pushf
pop
lret
das
jno
mov
xor
sbb
divb
dec
xor
insl
je
inc
ja
xlat
pop
push
rcrb
mov
or
lahf
inc
xlat
clc
std
sbb
icebp
cs
xor
lret
adc
dec
xchg
fst
aam
mov
lock
add
addr16
les
jmp
xor
jns
aas
mov
das
mulb
mov
xor
lods
mov
xchg
jg
fnstcw
out
mov
inc
test
add
sub
jg
inc
jo
aas
push
xor
xchg
repz
add
xor
je
lock
push
push
jo
out
jne
out
test
stos
mov
lods
jo
ds
not
orb
iret
add
dec
pushl
shlb
jg
inc
out
lahf
insl
decl
mov
hlt
out
or
cld
in
lahf
mov
xor
pop
in
insb
xor
mov
pop
or
dec
ds
int3
pop
or
sub
aaa
test
into
dec
add
mov
inc
jbe
mov
add
dec
mov
inc
cltd
inc
and
push
cmp
mov
dec
dec
gs
sbb
mov
inc
xchg
jge
jle
jne
adc
add
outsl
js
rcrl
lret
add
push
stc
pop
or
std
or
dec
and
jns
mov
arpl
fnstenv
lea
pop
ljmp
mov
orl
adc
call
lret
adc
pop
mov
data16
fildl
lods
and
pavgb
jle
jp
mov
mov
or
xchg
stos
notb
inc
xlat
shl
dec
ja
mov
cmp
and
and
shr
sbb
adc
lock
mul
inc
pop
xchg
cs
out
mov
xchg
mov
mov
stc
inc
sbb
outsl
imul
sbb
xchg
in
mov
mov
test
jo
enter
insl
leave
push
jae
cmp
adc
dec
in
int3
inc
jns
xor
test
imul
fdivrl
mov
lea
sub
jl
int3
punpckhwd
xchg
adc
cmc
fildll
imul
pushf
push
and
pop
push
push
xchg
adc
bts
mov
test
shrb
push
push
test
add
addr16
sub
cmpsl
aad
imul
add
std
daa
and
imul
out
sbb
leave
sbb
xor
je
ljmp
dec
sti
pop
cmp
sbb
movl
insb
pushw
shrl
xchg
outsb
into
movl
scas
loop
leave
stos
jae
cld
xlat
mov
mov
ss
movsl
adc
push
push
push
call
fstpt
je
push
ret
xchg
jmp
adc
nop
fdivr
outsb
pushf
dec
in
rcr
mov
dec
stos
pop
add
das
ret
xchg
call
incb
stos
jmp
rcrb
adc
cmp
lods
pop
mov
jb
std
clc
roll
leave
mov
jne
call
dec
loopne
mov
cmp
dec
fcomp
lret
pop
sbbl
dec
imul
adc
or
push
mov
jb
mov
js
lret
cmp
mov
ja
out
jbe
fmull
push
dec
bound
fmul
pop
push
shl
into
call
pusha
lret
lcall
push
xor
cmp
mov
xchg
jmp
inc
sbb
or
push
cmc
outsb
test
arpl
sub
and
or
sub
movsb
lock
cld
mov
js
fbstp
push
xchg
lret
xchg
dec
adc
lahf
loope
inc
mov
push
pop
inc
movsl
arpl
scas
or
push
test
jl
in
mov
sbb
rcr
adc
mov
pop
push
in
or
and
cvtps2pi
xchg
mov
push
push
test
cltd
fs
or
mov
jno
imul
cld
test
aam
sub
cmc
push
cmpsb
insl
push
mov
add
es
test
pop
or
dec
lds
add
call
sub
jb
and
xor
arpl
fiadds
dec
lock
adc
mov
mov
iret
sub
insl
lret
mov
mov
cmp
xchg
fcomi
dec
idivb
loopne
adc
inc
adc
push
mov
into
aam
cmpsl
jno
mov
loop
leave
loope
mov
insl
pop
fwait
mov
in
shrl
sarb
rcl
push
dec
aad
xchg
pop
lahf
popf
cmp
popa
leave
jae
enter
cmp
and
jmp
add
jno
fisttpl
js
jl
shrb
cli
pop
fucomi
pop
jns
xor
mov
fcmovb
mov
add
and
insl
stos
icebp
popf
push
stc
inc
outsb
cwtl
mov
test
test
jmp
adc
dec
std
dec
arpl
mov
push
imul
xchg
dec
rcll
push
call
push
in
aam
cmpsb
lods
add
pop
pop
dec
lds
xchg
leave
fsubrl
sub
adc
mov
mov
or
mov
int
movsb
jns
inc
cmp
mov
lahf
cmp
jle
mov
pop
push
pop
insl
push
jge
cs
sub
add
xor
add
imul
pusha
xchg
gs
popa
xchg
push
int3
dec
adc
fcmovbe
xchg
enter
dec
cmp
into
addr16
mov
adc
sbb
sub
int
mov
jge
add
mov
push
lret
or
lds
xchg
scas
incb
xchg
jmp
scas
xchg
hlt
jne
jno
pop
rcll
lock
xchg
mov
adc
mov
test
std
adc
xor
outsl
ret
clc
sub
stos
test
imul
lret
xor
cld
cwtl
mov
dec
xor
or
and
xchg
or
push
xor
cmpb
pop
dec
gs
dec
lret
enter
xchg
mov
dec
leave
lea
into
sbb
xor
sbb
inc
xchg
stc
mov
pop
xor
pop
lods
shrl
in
scas
xlat
xor
mov
mov
popa
fisubs
mov
jge
in
adc
test
inc
fiaddl
fdivs
and
cmp
stos
int3
push
aad
ss
aas
repz
xor
mov
mov
ffreep
push
push
sahf
mov
test
jmp
adc
xchg
cld
cmp
jg
pop
lods
adc
ret
mov
test
jmp
lds
loopne
xchg
nopl
mov
addr16
cmp
js
jp
mov
xchg
pop
add
mov
lds
cmp
int3
inc
cmpb
adc
pop
pand
lock
sbb
bound
lock
rcrl
inc
popf
sahf
pop
mov
popa
sub
jne
mov
lods
mov
in
cli
repz
ret
dec
mov
test
ret
lret
jae
inc
push
test
enter
mov
out
inc
sbb
mov
out
ret
ret
popa
dec
movsl
pusha
push
jne
add
adc
mov
sbb
dec
mov
mov
pushf
lret
js
push
sbb
sti
loop
mov
pop
adc
in
icebp
and
jnp
xor
xchg
rorl
rcrl
mov
mov
mov
push
int3
push
jmp
insl
push
push
into
addr16
fisubrl
sbb
or
jp
mov
mov
cmc
push
icebp
in
scas
dec
enter
test
ret
adc
repz
fisttpl
pop
xor
bnd
xor
enter
dec
xor
and
fs
ja
xor
pop
mov
mov
bound
inc
cmp
pushf
mov
xchg
nop
sub
jnp
ret
enter
dec
popf
push
adc
rorb
ss
sub
xlat
inc
pop
push
mov
rcrl
xlat
mov
ret
lret
subps
add
pop
jb
add
mov
nop
fsts
psrld
shll
sub
add
das
xchg
out
loopne
push
adcl
int3
pop
cld
cmc
aam
fildll
jmp
ret
adc
call
icebp
xchg
xchg
mov
push
js
mov
repz
sub
push
sti
xchg
cmp
stos
insl
lea
repnz
push
ja
rcrb
xlat
mov
lds
test
in
notb
cwtl
mov
into
or
int
out
xor
inc
mov
movntq
mov
xchg
loope
andb
xchg
stos
imul
or
cmp
jl
mov
shl
xchg
fs
addr16
mov
mov
or
jp
xor
bound
mov
enter
add
add
imul
push
lds
mov
xor
scas
xor
pop
hlt
jbe
jnp
repz
inc
jno
mov
add
mov
in
pop
and
push
mov
push
shll
rclb
xchg
add
rorb
dec
cmpsl
test
or
fnsave
xchg
add
add
cwtl
and
stos
jo
xchg
popa
ret
gs
jb
push
popa
xor
lds
pop
aad
jmp
mov
je
pop
stos
or
mov
shrb
dec
or
dec
scas
dec
fidivl
js
adc
push
stos
aam
jecxz
mov
test
dec
aad
mov
mov
into
leave
loope
pop
xor
sbb
popa
pop
adc
add
mov
jns
adc
push
subl
dec
mov
xorb
movsl
jne
mov
enter
push
push
jns
cld
adc
stos
addl
and
jno
aas
jg
pop
jmp
pop
add
add
xchg
xchg
gs
stos
add
aad
testl
fcomps
int3
sahf
repz
bound
outsl
jae
outsl
xchg
cld
inc
cmp
sbb
iret
mov
push
and
scas
pop
jmp
or
cvtps2pi
dec
mov
pop
dec
mov
and
push
dec
cli
or
flds
adc
push
sbbb
sub
sbb
test
jbe
cmp
call
mov
insb
mov
mov
pusha
adcb
cwtl
sub
xor
sbb
and
mov
aam
addl
ret
and
mov
add
mov
xchg
and
push
enter
push
dec
jge
stos
test
pop
adc
xor
in
sub
push
test
icebp
xchg
rorb
in
adc
rorl
test
test
inc
inc
ds
jg
xor
test
xchg
add
mov
xor
xlat
paddsw
add
bound
ja
lds
dec
pop
daa
add
mov
jmp
loop
enter
out
in
outsl
ds
addl
loop
test
into
loope
mov
or
stc
inc
pop
push
pop
sub
aas
daa
jecxz
jo
or
imul
divb
and
adc
xchg
jmp
movsb
lcall
sub
into
jns
pop
jns
cmp
mov
lds
gs
mov
addb
mov
arpl
divb
add
call
dec
clc
xor
add
andnps
cmpl
fmul
jle
xor
fmuls
push
jmp
or
jg
add
mov
mov
xchg
sub
xlat
es
fstl
stc
xchg
ret
xchg
repnz
adcl
xor
cmpsb
aad
mov
gs
xchg
pusha
lret
icebp
insl
add
xchg
dec
repnz
lret
push
cli
cltd
cmp
sti
lock
inc
push
mov
imul
push
pop
mov
ret
int3
dec
hlt
mov
ja
or
jb
popf
int
xlat
lods
out
xor
imul
cmpsb
sub
and
pop
bound
int3
adc
dec
and
inc
and
stos
sbb
jnp
insb
xchg
dec
adc
xor
push
push
push
je
stos
aam
xchg
daa
adc
mov
jb
push
jae
and
mov
cmc
outsl
mov
les
sbb
mov
aaa
fistl
add
xor
mov
into
adc
int3
or
std
xchg
jb
fldenv
test
jne
nop
insl
inc
xor
dec
fld1
push
lret
mov
cmc
mov
jmp
stc
repz
jecxz
inc
inc
cli
cmp
and
test
push
movsl
loop
or
sub
dec
mov
sub
ss
jmp
xchg
dec
aad
sub
repz
pop
ss
inc
ja
leave
adc
pusha
cmp
arpl
and
mov
scas
or
sti
mov
pop
xor
dec
ss
inc
push
in
or
pop
es
pop
jae
fwait
dec
jo
aaa
push
mov
cld
pop
jle
jp
hlt
loope
jge
incb
cmp
scas
mov
mov
inc
cmpsb
jl
jmp
inc
popa
adc
adc
insb
add
inc
or
jb
push
cmp
cmpsl
adc
fcoml
jne
mov
movl
lret
jo
into
lret
push
mov
sub
xchg
jo
sbb
dec
mov
das
dec
xor
nop
imul
out
je
std
enter
ret
sbb
xchg
inc
popa
fs
xchg
adc
aad
mov
jbe
or
test
sbb
pop
out
aam
xlat
or
mov
lods
cmc
divb
xor
out
xor
push
cwtl
add
cltd
mov
and
xchg
mov
mov
xchg
sbb
aas
jnp
fidivl
nop
or
andl
mov
push
or
pop
insb
dec
xor
scas
cmpsl
or
int3
cmp
push
or
cltd
pop
xor
xor
adc
jg
sbb
cltd
int3
aaa
cmp
cltd
add
or
outsl
jmp
movsb
data16
fisttpll
je
cltd
mov
enter
dec
push
js
pop
pop
mov
mov
sub
add
outsl
jp
scas
adc
outsl
aas
inc
stc
mov
shrl
xchg
sub
xlat
mov
aas
ret
sbb
cli
mov
call
ret
add
xor
cli
xlat
sbb
jno
pop
outsb
stos
ret
scas
fnstcw
pop
lds
add
roll
fisubs
in
and
cmp
jb
sbb
dec
jae
mov
fsub
je
in
in
fwait
dec
push
andb
xor
cmp
nop
adc
scas
mov
out
xlat
jmp
arpl
mov
jne
sahf
push
sbb
jl
cld
test
out
insl
jno
fisubrs
data16
add
xchg
mov
xlat
sbb
mov
iret
gs
repz
pop
mov
sbb
push
cmp
sbb
adc
ror
int
sub
das
out
fucom
adc
lock
xlat
adc
and
xor
lcall
add
dec
jbe
fninit
dec
test
ss
mov
stc
scas
xor
loop
cmc
adc
sbb
test
out
fmull
and
adc
jb
scas
sbb
lahf
inc
std
cs
aad
jp
push
ss
cmc
or
mov
or
jo
pusha
cmc
add
mov
outsb
mov
movsl
jo
das
xchg
mov
fs
jo
iret
sbb
cmpsl
push
test
cmp
adc
shlb
cmpsl
test
in
jnp
inc
leave
xor
into
lds
mov
push
imull
push
sbb
rorl
mov
sub
mov
adc
inc
xor
inc
or
dec
lods
sarl
dec
pop
xor
xchg
xchg
xor
dec
jnp
dec
scas
sahf
rolb
jecxz
adc
push
inc
aam
sbb
int
sbb
in
lahf
cmp
call
sbb
sub
iret
leave
leave
inc
filds
xchg
jg
pop
push
or
push
or
add
subl
push
dec
or
adc
add
xor
or
stos
fwait
shrl
push
gs
xor
mov
and
or
lods
mov
push
jl
pop
xor
inc
push
mov
xchg
mov
sahf
sub
mov
inc
push
leave
push
cmp
mov
sti
or
std
xor
add
outsb
xchg
mov
push
mov
cmp
sbb
cld
mov
mov
adc
pop
mov
ret
dec
push
add
fucomi
pop
sbb
test
int
movsb
addr16
xchg
inc
adc
cmp
cmp
insb
popa
fsubl
pop
pop
mov
nop
dec
fmull
mov
insb
shrb
adc
mov
fs
and
xor
sbb
test
jno
fidivrl
hlt
adc
out
pop
adc
mov
jp
sbb
test
sbb
out
fidivs
sbb
jge
jne
sub
push
jl
aas
jnp
movsl
inc
test
inc
dec
dec
jle
lods
out
in
shll
cmc
repz
rorb
adc
xor
xor
and
lds
in
mov
mov
dec
dec
adc
sub
test
jnp
inc
adc
loopne
inc
mov
pop
mov
insb
adc
test
mov
sub
and
fsub
pop
sahf
or
xchg
cmpsl
iret
outsb
mov
xchg
fmulp
daa
outsl
test
xor
inc
add
insl
sti
inc
or
mov
jle
inc
ret
movsb
movsb
in
aam
dec
aad
fildll
fcoms
adc
aaa
jmp
nop
cmc
push
push
test
cmp
push
repnz
roll
call
je
xor
fisubs
jp
jnp
push
aaa
pushf
and
sub
out
lea
dec
lea
push
push
cmpsb
pushl
stc
sub
jbe
push
dec
cmp
stc
sbb
mov
ret
mov
vminsd
lcall
decb
aas
cmpb
and
aaa
jmp
fiaddl
sti
sbb
aad
ret
mov
pusha
lret
jmp
inc
iret
sahf
divb
dec
sbb
sbb
nop
addr16
fmull
jecxz
sub
sbb
clc
cmp
cmp
shlb
scas
lahf
aaa
add
out
pop
jl
xchg
aas
lods
cltd
ljmp
loopne
rcl
mov
insb
dec
xor
xor
jb
mov
fwait
movsb
mov
std
mov
or
pop
sbb
mov
cmpl
mov
pop
sub
dec
push
xchg
push
xchg
and
rcrl
sub
xor
adc
inc
lods
jnp
dec
push
xor
mov
in
mov
push
mov
test
cmp
jmp
jl
add
out
pop
gs
cmp
mov
xor
dec
jl
dec
jns
jmp
cmc
add
mov
adc
and
cld
push
mov
call
jle
xchg
add
adc
or
test
lret
test
pop
mov
cmpsb
testl
inc
push
sbb
sti
cmp
dec
into
sbb
xlat
pop
mov
mov
cltd
xchg
aad
lds
call
into
sahf
push
mov
jge
leave
stos
xor
dec
dec
adc
xchg
loope
jp
and
repnz
adcb
jb
insl
nop
mov
cli
xor
daa
repz
rcll
or
mov
aam
pop
dec
jle
pop
sahf
orb
xchg
add
pop
jle
dec
add
mov
dec
hlt
das
sub
xchg
xchg
or
or
ucomiss
xchg
add
out
mov
pop
popf
cmp
fldt
std
push
mov
sbb
loop
arpl
mulb
push
lods
dec
outsb
mov
xchg
shll
xchg
pop
mov
mov
imul
in
rorl
cmc
inc
adc
fdivrs
bound
pop
rorl
adc
sub
into
fildll
lods
test
push
shlb
adc
stc
rolb
pop
enter
js
shlb
adc
jl
add
pop
pop
repz
adc
jl
call
iret
test
aad
in
xor
rcrl
cmp
sbb
test
int3
jno
and
and
adc
sub
cmpb
cmp
xchg
push
test
xchg
int
or
sub
iret
int
mov
add
add
mov
aas
inc
sub
push
in
je
shll
cmpsl
fisttps
leave
mov
sarl
xchg
andl
lods
iret
rcrb
sub
shll
pop
sub
xchg
or
mov
es
cld
into
loope
les
scas
fucomi
cmc
mov
stos
sub
popf
push
inc
mov
mov
pop
cmp
xchg
mov
jmp
lcall
cmp
out
xor
and
rclb
popa
dec
lods
xor
mov
sti
out
push
cs
jl
and
sbb
dec
cmc
out
push
inc
adc
ds
xor
call
push
testb
call
das
lock
cmpsb
adc
and
jno
adc
jb
in
loopne
xchg
cs
fcomps
in
test
xchg
mov
cmpsb
xor
dec
and
mov
push
lret
mov
ljmp
sbb
mov
pop
jmp
mov
cli
lahf
ret
dec
xchg
mov
cmp
dec
add
dec
xor
xor
fimull
jg
ret
insb
xor
mov
push
mov
arpl
xchg
jg
out
icebp
lret
jno
enter
in
mov
fwait
lea
push
test
xor
imul
fistpl
cmp
cmpsl
xorb
and
dec
lret
jne
inc
push
jp
cmp
pop
add
xor
test
js
jno
inc
int
adc
cwtl
cli
outsl
inc
mov
add
fidivl
adc
adc
push
jno
fcmovu
adc
shld
jge
sarl
mov
mov
xor
ja
mov
and
decb
cld
adc
mov
cmp
dec
popf
dec
mov
int
or
jns
sub
in
jmp
and
nop
call
enter
scas
cmpsl
in
arpl
mov
xchg
cli
mov
xor
mov
orl
iret
cmp
xchg
sahf
jmp
jmp
jno
cltd
aas
or
icebp
cmovg
aas
jge
sub
and
imul
push
aaa
popf
mov
test
adc
mov
adc
xorb
inc
jmp
fsts
push
xchg
jge
and
jmp
fldenv
add
xchg
mov
cmp
gs
sub
inc
mov
jecxz
and
or
pusha
xabort
push
jne
int3
xor
sbb
or
cli
xchg
mov
push
int
nop
cs
dec
shrl
and
push
cmp
mov
mov
lret
jmp
in
inc
les
aaa
fbstp
mov
scas
dec
sbb
push
daa
call
cmp
dec
shlb
pop
sahf
aaa
add
fisubrs
inc
popw
xor
fisttpll
mov
dec
cmpsl
xchg
fnstsw
push
add
aaa
add
and
adc
inc
sub
xchg
jecxz
xor
push
repnz
jns
bound
and
sub
stos
jae
test
sbb
cmpsb
stos
lds
xchg
movsl
fs
sbb
jle
scas
or
cwtl
adc
dec
push
fnsave
lods
xor
mov
pop
mov
pop
cld
cwtl
adc
add
ljmp
push
sbb
cmp
js
iret
aam
ljmp
mov
int
xor
cmpsl
mov
pusha
pop
unpckhps
xchg
mov
pop
mov
mov
sbb
hlt
insl
push
xchg
dec
mov
es
out
dec
push
push
xchg
mov
jb
mov
mov
jp
shlb
dec
sub
frstor
clc
xor
push
cmc
je
into
add
aaa
mov
jmp
jmp
sbb
xor
jno
xchg
mov
or
insl
fists
call
jne
popf
popf
loope
ja
jne
mov
mov
xchg
fwait
aaa
or
cld
add
cmp
mov
cmp
inc
loopne
xorl
dec
jecxz
push
in
adc
ret
mov
push
rol
outsb
in
shll
lods
jo
xchg
sub
add
push
add
call
popf
stos
fstpl
mov
mov
mov
add
shrl
adc
shlb
lcall
dec
les
sbb
jmp
out
sbb
fldl
and
push
sub
leave
out
test
fildll
shlb
rorl
in
pop
dec
xchg
mov
lcall
cmp
leave
leave
mov
push
bnd
test
push
lock
fidivrl
hlt
sub
in
jo
adc
mov
cmp
and
stos
pop
push
cmp
fcoms
bound
std
inc
lods
pop
xor
jl
adc
dec
inc
xchg
xor
adc
dec
push
cltd
movsb
xchg
lds
cwtl
adc
lret
sub
in
adc
stos
stos
test
mov
test
iret
adc
rcrl
in
lret
ljmp
stc
xchg
stc
sti
sub
jne
or
iret
incl
cltd
inc
mov
cmpsb
int3
xor
inc
fiadds
cmp
pusha
shrl
shrl
cld
aas
sub
dec
pop
push
cli
dec
mov
push
dec
ret
add
stc
lss
shl
nop
mov
add
das
stos
dec
data16
jb
xor
or
iret
cmovnp
rcrb
adc
aaa
or
jl
mov
fs
jbe
xchg
xor
aas
sbb
repz
mov
out
add
xor
xor
fsts
pop
sub
es
fnstcw
scas
inc
mov
inc
inc
add
xchg
js
aaa
jbe
dec
jmp
movsl
or
xor
xorb
push
mov
sbb
jle
xor
and
jns,pt
loop
cltd
sti
mov
nop
iret
test
jp
rsm
dec
xchg
mov
dec
iret
add
fistpll
xor
int
push
mov
popa
addb
cmp
stc
xlat
icebp
push
push
imul
movsb
push
inc
mov
jo
cwtl
mov
pop
sahf
mov
cmp
dec
mov
fidivl
into
rcrb
cmp
rorb
sub
mov
mov
icebp
pushf
outsb
xchg
cmp
cmp
scas
insl
push
stos
fnsave
stos
jae
mov
lret
lods
fstpt
das
fidivrs
hlt
arpl
arpl
pop
or
or
lods
gs
mov
repnz
xchg
mov
neg
scas
test
and
mov
add
jle
jle
scas
insb
insl
cwtl
in
repz
cld
push
adc
jnp
xchg
sub
inc
cmp
sbb
push
aam
xor
fnstenv
fiaddl
push
iret
jnp
in
pop
insl
loope
andl
mov
mul
rdtsc
fmuls
mov
icebp
mov
andnps
and
mov
in
dec
mov
dec
scas
cs
fdivp
popa
push
subl
jp
mov
and
out
loope
repz
fmuls
out
cmp
lds
pop
mov
and
ror
sub
jns
out
fcoml
fnsave
aam
jmp
jl
push
push
adc
jbe
lahf
lods
or
xchg
outsb
icebp
and
inc
jno
jne
pop
or
cmp
mov
repz
ljmp
inc
and
push
aaa
push
add
lods
pmullw
arpl
xchg
pusha
ret
xor
js
imul
insb
inc
aad
pop
imul
jno
in
push
sar
adc
add
pop
cmp
jno
leave
cmp
or
ret
cwtl
hlt
rclb
js
or
and
divb
loopne
inc
xchg
mov
sbb
pop
fdiv
pop
popf
pop
push
leave
lret
xor
push
xchg
js
dec
push
gs
cmpsl
and
outsb
fwait
or
insl
cmp
inc
mov
hlt
inc
xor
call
lret
and
ss
nop
xchg
dec
xchg
xchg
stc
mov
jae
ret
xor
in
pushf
push
xor
push
jno
mov
fidivs
cmp
xor
leave
or
or
push
add
imul
ret
mov
les
test
je
dec
in
pop
mov
fisttpl
repnz
in
ret
ljmp
jl
inc
jnp
push
lret
repnz
ljmp
clc
outsb
inc
xor
xchg
mov
xor
jp
mov
mov
fistpll
xor
ret
jp
fldenv
in
cmc
sbb
mov
orb
jne
jne
add
jecxz
jo
lods
hlt
sub
push
inc
pop
xor
jecxz
mov
test
imul
mov
inc
or
arpl
sbb
mov
xor
xchg
jne
inc
xchg
push
and
xor
arpl
jecxz
jmp
sbb
add
aam
fs
mov
in
stos
mov
pop
movsb
popa
xchg
loop
pushf
fsubl
xor
mov
neg
push
jae
lods
xlat
fsubrp
ss
ss
dec
aas
in
mov
lret
cmpb
mov
mov
pop
jb
jo
call
mov
xchg
jae
xor
cwtl
xchg
lahf
clc
lea
mov
aas
dec
xchg
lock
or
shl
add
jno
adc
sub
loopne
lock
iret
pop
mov
out
and
or
xchg
dec
jmp
adc
push
in
add
out
dec
adc
stc
dec
les
mov
out
xchg
fmull
jmp
ds
mov
add
int
insb
and
add
ljmp
js
cld
test
lea
pop
xchg
push
movsl
jns
fidivrs
test
repz
sahf
int3
jl
xchg
jl
shll
jge
fiaddl
jmp
and
jno
inc
mov
and
movsl
orl
mov
cmpl
in
sbb
and
std
jle
mov
insb
repz
in
sub
dec
or
pusha
lret
jno
add
sub
loopne
xchg
lret
pop
mov
cmp
into
cmpsl
test
cmp
popa
popf
scas
add
std
cwtl
leave
xchg
popa
push
lods
jne
int3
addr16
xchg
aam
jne
decb
jbe
es
leave
push
push
mov
pop
dec
pop
dec
aaa
cmpb
dec
aam
mov
xchg
orb
cmc
pop
outsb
xor
lahf
daa
add
adc
movsl
jbe
pop
cli
mov
cs
hlt
or
sub
stos
je
pusha
xchg
sub
or
fsubrl
sub
or
or
sbb
outsl
cltd
sub
repnz
cmp
mov
test
fsubl
cmpsb
xchg
clc
sahf
sub
sbb
cwtl
lcall
daa
pusha
pushf
or
push
in
or
fwait
push
adc
jle
movsb
imul
loopne
rep
mov
imul
and
adc
jno
in
mov
mov
jb
sub
add
lahf
aas
sbb
je
scas
lods
push
jo
push
movsb
fldenv
sbb
add
dec
push
dec
outsb
jmp
mov
ror
movsb
and
daa
xor
cmp
imul
lods
mov
sbb
orl
les
push
leave
sub
testl
jmp
push
mov
cmpb
push
stc
jp
loope
add
lret
adc
push
xchg
cli
xor
inc
add
scas
inc
mov
test
fistl
repnz
leave
repnz
push
pop
lds
cmc
cmpsb
adc
jl
lret
insb
out
sahf
adc
inc
ficompl
xchg
in
xchg
ret
jmp
and
xor
lcall
loopne
sbb
sbb
les
lret
adc
adc
sti
xor
in
lcall
call
push
inc
lock
mov
paddb
sub
pusha
fadd
adc
push
xlat
dec
dec
outsb
lds
cmpsb
pusha
or
mov
out
push
shll
or
cmp
inc
or
stos
sub
adc
lea
adc
sbb
dec
adc
outsl
pop
pop
adc
mov
adc
jns
xor
pop
add
adc
xchg
mov
sbb
loop
inc
in
xor
cmp
mov
loop
fs
inc
or
das
mov
imul
rorb
and
lods
mov
gs
xchg
popf
mov
jns
xchg
stc
js
jle
hlt
jmp
mov
mov
sbbb
aam
ljmp
out
jp
jmp
lahf
lock
mov
cs
aaa
cwtl
and
fidivl
int3
add
or
pop
and
add
lds
mov
in
fs
or
cli
aam
sub
frstor
sub
lret
mov
es
out
add
ds
ja
mov
jo
imul
sbb
lock
fnsave
aad
mov
add
add
int3
pop
minps
nop
mov
aas
bound
enter
push
inc
cmp
sub
mov
addr16
mov
loopne
adc
and
add
es
or
cli
pop
paddsw
loop
mov
xchg
jge
mov
adc
adc
jl
push
insb
imul
je
xchg
mov
in
in
xor
in
test
jo
inc
hlt
setge
rclb
mov
xchg
dec
dec
jo
mov
fdivp
ljmp
mov
fdivp
sub
nop
fwait
add
popa
add
mov
mov
dec
pop
cwtl
lret
sub
mov
dec
scas
shl
lcall
sbb
outsl
ret
scas
xlat
xchg
xor
mov
push
scas
xor
fisubl
jp
lds
pop
jae
sbb
jp
popf
xchg
sbb
or
xor
addr16
jmp
jecxz
xchg
rorl
jmp
cmp
xchg
mov
xchg
ret
test
jns
add
dec
or
xor
in
cli
in
mov
sti
add
fcomip
aaa
mov
iret
fwait
stos
aaa
push
jo
js
popf
push
push
sti
int
repz
int
scas
lock
xchg
leave
and
aaa
testl
sbb
xor
scas
and
lea
cwtl
dec
and
mov
fnstcw
out
mov
insl
mov
out
xchg
mov
repnz
push
lret
mov
scas
fldenv
dec
dec
lods
cmp
adc
lock
mov
mov
sbb
and
lret
jp
imul
cs
inc
into
sahf
mov
inc
xchg
cli
sbb
xchg
sub
scas
movsl
out
mov
add
imul
inc
bound
sub
mov
mov
int
jno
xor
mov
lcall
mov
test
pop
fwait
cltd
sbb
fs
repz
cwtl
outsl
mov
in
adc
lea
or
push
mov
xchg
jg
inc
adc
jge
jl
sbb
scas
jo
dec
int
adc
cmpsl
test
adc
les
jl
jp
push
lcall
nop
fistpll
pop
mulw
sub
scas
jne
add
jbe
and
lds
mov
cwtl
push
xlat
enter
fcompl
aad
pop
ret
jne
les
int3
rcrb
dec
cmp
scas
loop
cmp
sahf
jno
mov
sarb
pop
insb
push
gs
jae
negb
inc
jbe
adc
scas
jno
in
push
out
jnp
insb
out
mov
jb
inc
into
inc
add
jge
jmp
test
ja
stos
rcr
ljmp
ffreep
loop
or
in
mov
add
jmp
std
jae
in
inc
push
cmpl
dec
pop
lret
outsb
inc
repz
fwait
push
les
int3
ret
ret
in
outsl
in
jmp
outsb
push
mov
nop
shlb
cltd
aam
mov
mov
inc
mov
cmp
or
xchg
mov
mov
jno
addr16
in
adc
or
push
jg
add
jmp
int3
sbb
aam
insb
mov
lods
mov
int3
out
sahf
iret
sbb
rep
aas
adc
lcall
inc
loopne
repz
imul
setbe
les
in
adc
jae
or
jo
js
jo
lret
in
mov
and
cld
sub
arpl
jmp
cli
arpl
push
pop
xor
pop
aas
jne,pt
add
loop
dec
xor
add
mov
mov
outsl
push
dec
aas
jnp
xchg
js
insb
aaa
mov
lret
sub
insl
jne
leave
sub
repnz
mov
mov
fcoml
add
outsb
int
xor
jl
cmp
outsl
lds
xor
sbb
adc
inc
pop
inc
xchg
xor
xor
ret
add
fsubr
mov
mov
adc
scas
shlb
or
xor
xor
repz
fisttpll
mov
mov
fneni(8087
rolb
mov
sub
sub
lret
xchg
xor
ret
inc
inc
push
fmuls
cli
sarl
xchg
arpl
fidivrl
xchg
or
cld
push
aad
addr16
cld
adc
push
aaa
cltd
adc
jmp
mov
fs
sub
outsl
cltd
pusha
add
add
inc
pop
pop
sub
mov
jmp
dec
xor
jle
pop
sahf
adc
push
cmp
add
aam
jmp
hlt
push
test
mov
imul
jle
mov
mov
mov
jle
add
jecxz
cltd
imull
sahf
xchg
jb
push
mov
jmp
xor
in
pushf
pop
lret
in
mov
jmp
popf
and
and
pop
dec
popf
pop
shr
and
adc
dec
xor
mov
xchg
aaa
cmp
xchg
pop
push
repz
psubusw
cmpsb
xor
aam
add
xchg
dec
xchg
rorl
xlat
add
sub
adc
push
and
push
sub
mov
xchg
test
inc
daa
pop
aam
push
roll
jne
xor
and
or
icebp
mov
mov
pusha
in
rorb
sbb
lahf
xor
aam
or
pop
fidivs
add
roll
mov
stc
fdivl
std
dec
icebp
cmc
jnp
sbb
xchg
aaa
fs
push
push
test
enter
ds
jle
test
sbb
push
push
jnp
mov
jbe
ret
jmp
mov
mov
aad
addr16
sub
cmpsl
loope
std
lock
cmpsb
mov
mov
xchg
addr16
and
pop
jmp
imul
sub
adc
lods
scas
mov
fistpl
mov
lods
sbb
sbbb
xchg
iret
mov
mov
sbb
lea
outsl
rorl
adc
mov
sahf
rep
sbb
mov
adc
pop
pop
leave
shll
fwait
xchg
insl
xchg
mov
adc
pop
loope
mov
dec
orb
adc
xor
sub
movl
test
clc
add
adc
pop
pop
out
popf
jecxz
dec
shl
das
jnp
and
add
das
rolb
mov
das
jb
xchg
cmp
daa
lock
or
mov
ja
fwait
push
movsb
push
lret
mov
out
sbb
cmp
cmpsb
std
div
in
lret
push
mov
inc
mov
shlb
mov
js
gs
js
xchg
xchg
loopne
mov
rcll
jbe
add
mov
inc
xor
push
hlt
push
and
xor
sub
lods
lahf
test
fs
outsl
mov
mov
pushf
scas
mov
jne
repz
enter
icebp
into
lahf
or
outsl
xor
outsb
adc
inc
mov
sbb
mov
sbbl
std
pop
xor
jl
cmpb
mov
popf
jl
test
scas
add
sub
mov
inc
das
rcll
adc
sub
mov
fisttpll
out
out
les
fcmove
ja
or
aaa
adc
les
jb
gs
cmp
xchg
call
in
and
and
lods
add
into
incb
les
and
xor
mov
gs
test
dec
inc
loop
cmp
jl
mov
fidivrl
outsl
sarl
mov
imul
mov
mov
dec
popf
and
insb
add
add
std
jp
and
pop
pop
sbb
pop
popf
in
out
push
jo
stos
jbe
bound
cmpsl
add
sbb
aas
insb
stc
dec
or
pop
test
testb
jns
adc
cwtl
adc
mov
adc
and
js
mov
popf
rcrb
arpl
xchg
cmp
push
add
lcall
dec
or
mov
int3
ret
push
dec
or
rdtsc
stos
aaa
or
popa
insl
and
or
and
call
mov
xor
mov
adc
add
loope
int
lret
out
mov
sbb
cli
leave
pop
mov
cwtl
xor
push
mov
popa
aaa
mov
mov
mov
icebp
in
add
scas
out
push
out
cmp
enter
inc
xchg
inc
jp
mov
push
stos
cmp
pop
pop
mov
js
and
pop
and
pop
mov
or
mov
xor
test
sbbb
repz
cld
enter
jnp
scas
jo
adcb
je
test
sub
pop
pop
gs
nop
inc
cmp
pop
sbb
arpl
stos
inc
addr16
sbb
repnz
pop
jo
test
loope
pcmpeqd
sbb
and
inc
psadbw
imull
lock
mov
or
mov
loope
mov
add
cmp
ss
or
push
cld
leave
movsb
sub
push
scas
inc
cmc
pushf
mov
xor
push
push
and
fdivrs
add
dec
clc
loop
cmp
adc
iret
pop
push
fildll
pop
mov
and
mov
xchg
or
jl
push
push
adc
stos
mov
outsb
push
xlat
fucomp
push
dec
stos
data16
in
xlat
call
xor
sub
or
fidivs
dec
in
jle
lods
add
ss
fsts
icebp
adc
push
or
mov
and
add
mov
inc
movl
mov
in
mov
pop
push
sbb
dec
push
push
dec
out
cs
jge,pn
testb
add
xlat
adc
jmp
insb
and
daa
movsl
xchg
xor
fcompl
lcall
stc
mov
mov
mov
push
or
arpl
mov
sbb
mov
cld
imul
fdiv
std
lods
pusha
cwtl
lret
mov
xchg
inc
lret
mov
xor
stos
fwait
loope
xchg
pop
out
into
cwtl
loopne
and
icebp
movsl
scas
cli
int3
subl
sahf
fst
sub
pop
cmpsl
sahf
dec
test
mov
and
adc
mulb
cld
jno
pushf
jae
jnp
insl
ss
xchg
push
test
dec
test
jle
repnz
xchg
dec
pop
sub
mov
mov
inc
mov
jno
sahf
push
adc
in
or
mov
ljmp
xchg
repz
mov
dec
xchg
and
in
jne
jae
jge
mov
pmuludq
mov
and
fmuls
test
imul
aaa
loop
xor
iret
inc
lahf
push
push
sbb
nop
div
mov
mov
rclb
shrb
mov
out
pop
push
mov
mov
mov
inc
xlat
push
lock
adc
or
cmp
mov
or
or
pop
sbb
icebp
ficomps
jne
repnz
out
pop
adc
hlt
cltd
test
movsb
aaa
stc
lods
or
mov
ss
xchg
in
icebp
or
xchg
push
add
push
jge
sbb
mov
dec
dec
xchg
int3
mov
dec
mov
into
xchg
push
jne
fs
ljmp
hlt
lret
push
aaa
test
int
cmpsl
sbb
mov
inc
repnz
repnz
repz
loopnew
daa
jp
cld
xchg
cmp
xchg
dec
pushf
out
pop
and
dec
xor
mov
inc
mov
or
push
in
clc
out
pop
sub
or
sarb
aad
jne
faddp
adc
ret
mov
in
xchg
repnz
add
es
add
or
xchg
shrl
insl
sahf
dec
cmpl
stos
add
xchg
addb
fistpl
or
jns
mov
dec
shll
pusha
add
push
fadd
pop
fcom
dec
aas
mov
nop
shl
push
xlat
xchg
cs
cmp
test
fsubr
jo
cmpl
stos
pop
adc
push
nop
jno
mov
jns
adc
adc
outsl
sub
jle
gs
push
push
jp
pop
push
jne
repnz
iret
jnp
sbb
movsl
dec
stos
pushl
and
xchg
add
jne
testl
or
mov
mov
or
lret
insl
stc
fwait
movsl
mov
pop
insb
daa
cmpsl
iret
insb
fwait
int3
test
push
push
scas
pop
cmp
xchg
xor
bnd
cwtl
xor
loope
movsb
subb
es
cmp
mov
movsl
push
test
jmp
jbe
pusha
cmp
mov
jge
enter
lret
adc
loopne
out
outsb
jns
add
jl
xor
clc
adc
dec
push
push
xor
cmp
and
out
mov
daa
or
pop
jb
ja
popf
mov
pop
mov
mov
outsb
cli
movsb
loop
sbb
shrb
cli
adcb
nop
dec
addb
add
adc
lret
mov
push
lcall
out
pop
xchg
in
stos
sub
sub
jne
aam
or
xor
push
mov
mov
gs
int3
insb
inc
sbb
repz
sbb
xchg
mov
pop
inc
int
orl
shrb
mov
pop
and
loopne
out
in
fisubrl
sub
fidivrl
mov
mov
imul
xchg
inc
mov
cltd
sub
scas
out
inc
clc
stc
dec
jp
loopne
hlt
clc
sbb
pop
xchg
mov
mov
fidivl
add
stos
pop
xchg
lretw
jae
xor
mov
cmp
xchg
sub
mov
sub
mov
sub
std
sbb
jl
jecxz
pusha
cmc
rcrb
mov
rcr
xchg
jmp
loope
jnp
lock
sub
xlat
push
add
div
test
imul
add
push
mov
stc
push
add
rep
mov
jmp
stc
cmp
shr
sub
sahf
pop
loop
hlt
movb
scas
mov
js
cmpsl
dec
sbb
sub
and
dec
fstpt
fidivl
into
mov
push
mov
int3
or
in
sbb
lahf
push
scas
sbb
je
divb
lahf
lret
call
rcr
fwait
inc
inc
sub
mov
xor
fildll
lock
dec
sti
mov
cltd
leave
pop
or
shll
testb
cld
add
xchg
lret
cmp
imul
mov
adc
jne
mov
jae
loope
push
outsb
mov
pop
outsb
sub
out
dec
xchg
lock
push
mov
insl
daa
xor
cld
xchg
pop
mov
icebp
add
out
icebp
outsb
test
xor
and
mov
sub
push
push
inc
lret
pop
xchg
out
lods
sahf
sub
adc
mov
mov
andb
jmp
and
mov
enter
int
daa
roll
xorl
add
mov
mov
add
rcl
lock
andl
pop
mov
inc
ret
inc
inc
jnp
lret
mov
xchg
bound
pop
dec
adc
adc
cmpsl
divb
pop
sbb
cmc
or
mov
cmp
pop
mov
mov
fldenv
cmpl
cmc
pop
cmp
add
add
cld
or
jb
cmpsb
xor
test
ss
addr16
int
adc
dec
pop
xchg
into
cmp
cld
es
xchg
ja
sarb
cmpb
mov
mov
leave
and
xor
sbb
xchg
mov
pop
add
mov
jne
xor
mov
mov
insb
xchg
dec
js
les
mov
jmp
xchg
in
ficoms
fwait
cs
ret
popl
xor
add
fucomi
int3
mov
adc
dec
ffree
testb
cmp
inc
daa
or
jl
fs
loopne
dec
jne
mov
add
fbld
cld
test
das
stos
mov
lcall
dec
in
aas
inc
cld
js
in
xchg
nop
ret
cmovnp
jne
push
pushf
insb
xorb
repz
and
test
push
int
mov
jmp
xor
mov
and
pop
mov
shrb
sbb
testl
sbb
insb
stos
fiadds
or
dec
cs
and
sub
push
inc
xchg
mov
xor
in
xchg
xchg
aad
dec
pop
in
stc
pop
xchg
mov
enter
mov
aam
jae
adc
enter
push
inc
xchg
imul
mov
adc
jl
or
push
xchg
shll
js
stos
adc
and
in
cmpsb
lock
xor
adc
lret
or
or
mov
lea
mov
gs
mov
mov
push
xchg
sbb
pop
mov
xchg
and
push
fisubl
shrl
adc
int
das
jnp
shrb
xchg
mov
aas
xor
pop
fmull
pop
stos
sub
jne
gs
push
jo
cmp
mov
cmpsb
fildl
fisubl
jge
or
pusha
mov
sti
cmp
rcrb
test
push
fcmovnb
cmp
lcall
dec
and
call
and
pusha
iret
fdivs
mov
jmp
aaa
nop
mov
loopew
push
ret
nop
jp
repnz
rolb
int3
mov
cli
pop
inc
push
insl
int3
outsl
aas
xor
notb
sbbl
sub
shll
cs
push
jae
or
arpl
lahf
xor
fimuls
xlat
mov
cmpsb
pop
out
jne
cmp
jbe
iret
inc
outsb
inc
mov
push
fwait
xchg
jns
adc
inc
in
pop
leave
or
popf
mov
call
jecxz
xchg
xchg
inc
leave
adc
aam
cmp
xchg
sbb
mov
pop
pop
cmp
pop
inc
mov
inc
es
sbb
mov
mov
mov
inc
int
sbb
clc
cmpsb
xchg
mov
inc
int3
pop
push
mov
shlb
out
mov
xchg
sub
mov
sub
inc
lea
inc
pop
mov
xchg
gs
xor
jne
inc
ficompl
jl
pop
je
rcrl
shlb
and
push
call
jno
rcr
or
in
sub
inc
xchg
aam
outsl
jns
test
add
fs
or
scas
pop
push
shrb
add
dec
movsb
adc
sub
subb
negl
shrb
push
push
sahf
mov
xchg
pusha
iret
into
addr16
mov
fsubr
mov
int
lret
push
gs
jnp
lods
cmp
push
and
ret
les
mov
xchg
push
ds
js
sbb
outsl
and
bound
sbb
lea
scas
push
sbb
xor
stos
fldt
sub
adc
fadd
movsl
sbb
packuswb
popf
jmp
adc
fisttpl
xchg
mov
jle
xchg
or
mov
mov
test
add
flds
call
push
rolb
pop
mov
movsl
imul
sub
xor
fsts
imul
inc
loop
loop
adc
add
out
mov
mov
xor
xchg
jns
outsl
pop
shr
in
xlat
cmp
insl
jl
fisubrs
mov
sbb
sbb
popf
inc
add
jnp
imul
ja
cmp
mov
stos
ljmp
lret
in
int3
and
jecxz
adc
sti
push
hlt
pop
dec
xchg
add
add
repz
or
or
shlb
pushf
jbe
and
sub
hlt
mov
out
in
out
das
ja
in
std
nop
mov
cli
push
gs
test
mov
jb
mov
repz
xchg
or
cmp
dec
mov
and
mov
movsl
mov
or
gs
cld
jge
fcomps
movsl
sub
pop
lahf
sbbb
imul
and
mov
add
and
jo
dec
hlt
inc
inc
mov
xchg
xor
std
leave
call
insb
aad
pop
in
repz
enter
mov
xor
pop
jecxz
push
fidivl
mov
dec
rorb
out
sub
cwtl
into
ljmp
in
inc
cmpsl
fcoms
pop
aaa
jbe
pop
xor
xor
dec
fistpll
xchg
pop
inc
das
scas
outsl
lds
xchg
insb
and
adc
dec
mov
dec
add
mov
mov
cmp
lock
psrlw
aam
pop
xor
xchg
sbb
push
pusha
iret
jmp
or
push
int
xchg
pop
jmp
fs
push
inc
fsts
inc
fcomi
ss
stos
fsubs
clc
cli
inc
mov
sbb
adc
ror
inc
shlb
lea
les
ret
jbe
flds
inc
sbb
inc
adc
sbb
test
inc
sbb
fucomp
sub
loop
outsb
jnp
pop
push
xchg
dec
outsl
pop
out
xchg
inc
bound
mov
movsl
arpl
mov
jne
or
xor
bound
js
mov
scas
out
cwtl
das
push
cmp
repnz
dec
icebp
sti
inc
sbb
pop
pop
mov
outsl
fs
mov
cmpsb
popl
icebp
jno
test
inc
and
mov
push
hlt
insb
xchg
push
cmp
xor
sub
aam
mov
lahf
push
cmp
or
cld
test
hlt
cmc
jae
inc
and
mov
gs
mov
movsl
mov
xchg
movsl
mov
push
mov
cmpsb
fs
shl
loopne
add
ret
inc
mov
and
sbb
sbb
test
xchg
and
sbb
sar
loop
sbbl
mov
cmp
aas
or
sarb
aad
push
xor
outsl
stos
cmp
mov
mov
mov
gs
adc
xor
sub
adc
setl
mov
jmp
mov
xchg
and
jne
sbb
cmp
mov
cs
out
nop
jp
loopne
andb
or
jg
or
iret
adc
jecxz
mov
mov
xchg
rorl
mov
add
mov
pop
adc
pop
xchg
pushf
ret
fildll
ss
in
sub
and
xor
out
xor
test
mov
sarb
fiadds
xchg
dec
imul
popf
mov
lea
jle
adc
cmpsl
jb
add
inc
adc
int3
cmp
fadds
push
cmp
sub
push
insb
adc
and
push
jecxz
add
inc
add
popf
mov
jns
xchg
arpl
sub
insl
push
stc
insl
dec
jecxz
cmc
rclb
in
mov
clc
lret
or
and
xor
adc
pop
pop
sub
push
insb
cmp
cmp
mul
rcr
or
and
sub
push
adc
scas
mov
jl
mov
je
sub
adc
shll
nop
pop
fstpt
pushf
and
sbb
rcrb
cmp
scas
push
xor
idivl
popf
ds
popa
gs
xor
stos
sti
test
sbb
jne
movsl
and
adc
jno
cmp
cmp
add
in
lds
je
ror
push
sahf
movsl
adc
cmp
mov
adc
mov
scas
jle
pop
cs
and
jnp
and
push
lcall
out
ret
and
fnsave
sbb
add
dec
mov
dec
jno
mov
inc
mov
mov
call
rcl
and
test
in
jo
and
sahf
pop
scas
add
fdivr
orl
and
dec
setp
pop
movsb
xor
aad
testb
inc
jne
leave
mov
mov
jmp
sub
jmp
aad
push
test
adc
ljmp
out
pop
in
int3
test
mov
push
jbe
xchg
mov
scas
ljmp
stos
jno
mov
int3
cmp
leave
inc
jle
insl
cmpsl
hlt
scas
aam
std
insb
ljmp
dec
jns
mov
daa
out
cld
mov
cmp
pop
loopne
pop
lret
dec
daa
sbbb
pop
inc
or
or
xchg
rol
xchg
and
std
insl
out
inc
int3
int
lcall
inc
lret
lret
into
mov
push
xor
std
xlat
pop
dec
sbb
mov
push
int
xor
fs
pop
leave
sub
lock
mov
mov
sub
mov
ljmp
cmpsl
cltd
xorl
mov
fbstp
aad
pop
or
ret
cmp
ret
mov
xor
jl
mov
dec
inc
cmpsb
mov
outsb
ret
lret
cld
mov
out
pop
sbb
arpl
outsb
fsts
cmp
mov
aas
punpckhwd
adc
mov
or
and
sbbl
in
test
cmp
icebp
push
fdivl
lahf
daa
cmp
stos
test
and
test
and
es
movsb
add
sbb
xor
jae
fmuls
fisubrs
fs
inc
clc
jae
data16
mov
pusha
sub
pop
sahf
pop
pop
mov
inc
dec
and
out
popa
nop
xchg
or
fnstsw
outsl
cmp
and
jmp
xor
or
daa
pop
pop
add
jmp
cmpb
mov
jne
mov
aad
out
or
pusha
iret
or
mov
add
enter
ret
jmp
rcll
sbb
inc
mov
inc
fsub
jmp
pop
xor
inc
lock
pop
mov
xchg
lods
loope
pop
pop
loope
push
pop
mov
fs
adc
cmpsb
test
xchg
test
adc
mov
fs
pusha
mov
push
cmp
push
sbb
ret
mov
jle
add
and
out
aam
cs
jne
xlat
mov
sahf
dec
loope
test
in
lcall
jb
jb
insb
bound
inc
mov
mov
stc
jnp
dec
mov
fs
inc
jge
dec
out
or
sarl
negb
lods
mov
int
cmp
in
pop
insl
xchg
lret
xor
pmuludq
enter
jl
jmp
aad
mov
xchg
jl
mov
cld
loop
sub
pinsrw
xor
xor
or
sbb
jae
mov
xchg
inc
jecxz
repz
pop
cmp
pop
mov
das
push
dec
or
data16
pop
sbb
adc
pusha
xlat
mov
jl
push
pop
lcall
cmpsl
cmc
roll
mov
mov
add
inc
ret
cmp
lods
cmpsb
adc
fcomps
mov
xor
mov
mov
adcl
in
sbb
mov
push
dec
ret
mov
mov
ja
add
and
out
pop
movsb
add
add
jge
jmp
fdivrp
mov
jbe
inc
xchg
inc
mov
dec
pop
mov
ror
fdivr
mov
test
mov
pop
outsb
xor
cmp
lcall
mov
or
mov
push
jno
out
sbb
mov
nop
pop
call
lods
call
jp
dec
sbb
fistpll
cmpsl
in
lcall
adc
fwait
xchg
and
test
test
cs
xor
pop
ljmp
xor
or
daa
ret
mov
cli
adc
fists
arpl
cmp
jae
shll
cmp
jmp
xorl
subl
orb
or
lock
call
pop
shr
daa
xor
fistl
and
test
lea
idivb
mov
adc
jmp
mov
outsl
call
test
loope
and
xor
imul
imul
adc
loop
fstpt
mov
aad
int
ds
fdivrs
pusha
and
xor
mov
xchg
xchg
sub
push
cli
dec
scas
stos
cmp
aad
xor
push
inc
mov
xchg
pop
sub
xor
movsl
cmp
push
cmc
xor
repz
mov
mov
loop
jle
aam
and
fisttpl
dec
fimull
and
stos
jle
dec
mov
dec
icebp
dec
pop
pop
inc
aam
sahf
notl
push
mov
jnp
into
push
les
mov
in
jo
stos
jno
inc
into
fs
aad
mov
and
stos
cmp
les
cwtl
and
jo
sbb
fbld
xchg
mov
mov
fidivrl
sbb
jnp
inc
std
inc
mov
sub
or
ja
mov
and
dec
div
add
jmp
lret
xor
sbb
cs
jp
cmpsl
adc
arpl
pop
mov
cmpsl
push
cs
fwait
xchg
xchg
dec
in
pop
aaa
pop
scas
sbb
mov
shl
mov
shlb
xor
imul
xchg
adc
fcoms
add
xchg
jecxz
test
mov
inc
or
mov
add
aas
cmpsl
cmp
leave
push
add
adc
inc
xor
add
mov
fcmovnbe
out
mov
mov
jbe
sahf
arpl
std
std
ss
call
dec
mov
pop
std
cmp
bound
mov
pop
roll
test
pop
lds
dec
mov
jae
das
xlat
addr16
leave
adc
rcrb
lods
call
mov
dec
or
sbb
lret
je
mov
lcall
int
jno
orl
dec
mov
gs
dec
aas
outsb
or
stc
mov
xor
xor
and
xchg
arpl
mov
inc
jne
sub
cltd
cmp
daa
push
call
cmp
lret
cmpsl
je
push
enter
sbb
xchg
gs
mov
ss
out
jnp
lds
jl
pop
je
or
lahf
sub
jecxz
sbb
js
cmpsl
mov
sbbl
adc
lock
mov
fs
add
flds
xchg
clc
clc
lea
inc
call
jmp
test
aam
adc
xchg
sub
lahf
pop
pushl
inc
dec
wrmsr
fidivrs
out
mov
mov
jbe
aam
add
out
inc
pop
sub
mov
cs
dec
mov
test
adc
into
push
sbb
mov
dec
aam
pushf
and
jecxz
jno
cmpsb
adc
mov
rcl
icebp
xor
push
roll
pop
aad
push
jnp
popa
unpcklps
and
mov
or
ljmp
mov
outsl
test
or
sarb
dec
xchg
add
xor
inc
mov
cs
push
jns
repz
dec
pop
adc
add
das
fcomps
jg
xchg
fsubp
cltd
xchg
mov
jns
cmp
xor
out
cmpsl
inc
icebp
xchg
xor
mov
and
push
fs
and
ja
bswap
push
jne
jl
jbe
lret
mov
mov
adc
lods
xlat
enter
xchg
mov
mov
cmp
test
pushf
outsl
and
inc
xor
xor
data16
xor
or
into
mov
mov
stc
sbb
dec
das
lret
mov
enter
push
xor
sub
add
call
cld
xchg
test
dec
ret
in
fbld
in
popa
inc
push
stc
hlt
enter
cmp
cltd
jo
inc
inc
loopne
fiaddl
cmpl
test
fistl
out
mov
push
sub
jge
cs
xchg
mov
cmpsl
adc
sub
loope
jl
sbb
jo
sub
adc
jnp
aam
test
lds
cwtl
pop
inc
test
mov
iret
pop
pop
scas
jg
and
adc
pusha
mov
pop
push
outsb
pop
or
jl
inc
aam
pop
adc
addr16
pop
leave
fwait
les
cmpb
jg
pusha
cmpsl
mov
cmovno
scas
mov
mov
add
enter
fsub
lods
mov
jl
jb
les
sbb
jecxz
daa
and
mov
repnz
shl
aas
cmpsl
movb
xor
test
sbb
cmp
mov
es
cmp
push
jg
aam
pusha
jmp
add
cmp
lds
add
add
xor
mov
inc
dec
dec
sub
arpl
pop
mov
push
clc
daa
or
arpl
dec
ljmp
int3
xchg
cmpsl
push
jle
cmp
mov
popa
xor
xchg
fsts
fnstsw
lcall
and
mov
jmp
mov
push
nop
fimuls
add
jmp
add
movsb
out
adc
pop
dec
icebp
insl
jecxz
cmpsb
or
cmp
cmc
fsubl
out
jb
sbb
or
std
mov
mov
sbb
sbb
sarl
pop
pop
mov
stc
in
jle
xchg
inc
jecxz
xchg
cmpsl
mov
mov
or
jns
adc
pop
daa
jbe
fwait
or
adc
or
xabort
xor
int3
and
xor
sbb
sub
stos
mov
enter
mov
data16
inc
sub
daa
mov
push
mov
jbe
mov
mov
mov
dec
hlt
ja
mov
inc
popl
lea
in
mov
jno
bound
pusha
in
out
add
mov
inc
push
nop
and
into
push
inc
sub
into
inc
nop
mov
outsb
mov
xor
push
xor
fisttpll
fsubp
lcall
int3
enter
push
inc
dec
sbb
pop
adc
scas
xor
cmp
hlt
pop
push
pop
adc
lods
nop
or
xor
inc
lret
and
movsb
in
in
inc
idiv
pop
mov
mov
xor
paddb
push
mov
push
xor
jb
inc
js
addr16
inc
or
pop
call
sahf
xchg
push
addr16
push
inc
repnz
ss
jne
mull
mov
jne
lock
daa
loop
pop
in
push
rcrw
mov
stc
test
pusha
hlt
mov
outsl
mov
fcomip
in
jle
mov
mov
stc
xchg
imul
inc
gs
and
or
mov
bnd
push
sbb
pop
aaa
jge
lods
or
jne
into
mov
in
cmp
push
xchg
pop
cmpsb
and
lret
push
fildl
cmpsb
inc
dec
or
or
mov
pop
mov
pop
testb
jno
lret
icebp
push
out
add
loope
mov
add
sbb
or
lds
sahf
xchg
xor
outsb
popa
xlat
inc
shrb
imul
ds
lods
cmovb
sbb
fldt
gs
mov
mov
and
aaa
push
scas
mov
inc
jnp
push
push
sbbb
mov
lock
fimull
mov
ljmp
icebp
clc
add
jno
cltd
bnd
dec
add
push
in
jo
cltd
add
inc
test
xchg
addr16
idiv
push
xor
mov
daa
jno
adc
mov
pop
cmp
mov
je
loop
sub
add
jb
pop
frstor
mov
dec
rcr
sahf
dec
or
loope
xchg
outsb
sbb
sub
and
lods
mov
jl
pop
dec
les
add
pop
sahf
xor
and
and
movsb
addl
cmp
jne
sbb
jp
pop
cmc
call
xor
aaa
fnstsw
jns
ljmp
movsl
fs
cmp
dec
mov
repnz
mov
shr
int3
cmp
ss
mov
inc
sub
jb
in
mov
sub
and
repz
or
mov
jmp
ljmp
xorb
add
repnz
adc
pusha
imul
popa
roll
enter
sbb
lahf
imul
mov
mov
cmp
pop
dec
xor
jnp
lods
mov
lods
les
in
setb
jne
leave
lret
sub
mov
fdivs
pop
jae
fwait
roll
jg
dec
sbb
mov
mov
xchg
inc
int
out
jmp
lret
mov
push
imull
mov
pop
sbb
out
or
and
push
xchg
jns
mov
les
jecxz
jbe
fnstsw
ficoml
pop
clc
jno
mov
jne
movsb
push
xor
shlb
fldt
aaa
icebp
sar
rclb
xchg
ljmp
cwtl
mov
inc
mov
sahf
call
scas
jns
jmp
mov
jnp
es
repnz
loopne
add
adc
or
lods
jge
mov
test
sar
jno
ljmp
lods
mov
pop
imul
xlat
push
adc
jae
stc
mov
or
mov
jbe
ret
mov
addr16
dec
test
inc
mov
pop
into
pushf
cmp
and
movsl
push
icebp
lds
pop
les
mov
dec
adc
pushf
mov
cmp
and
mov
arpl
insb
inc
fs
into
sbb
pop
lods
pusha
pop
aad
call
rorl
sbb
loope
xor
repz
std
std
jno
adc
mov
leave
nop
mov
push
sub
inc
lahf
xorb
pushf
xor
je
dec
out
sbbl
mov
lods
in
jg
fwait
cmc
dec
cmpsl
xchg
jecxz
jg
push
cmp
fidivs
sahf
mov
cld
xchg
adc
imul
sub
fdivrp
jecxz
in
xlat
les
jo
sub
inc
mov
jg
idivb
sub
add
mov
fnsetpm(287
pop
mov
sub
in
nop
arpl
mov
bnd
out
pop
push
mov
and
push
cli
or
popf
inc
int
cli
mov
xlat
xor
mov
sub
jg
pop
scas
imul
out
vpminsb
les
sti
ret
sbb
push
jo
push
mov
or
lret
outsl
jl
shlb
rclb
or
sbb
ja
es
dec
mov
loopne
add
aas
scas
add
insb
jno
mov
ficoms
jecxz
aam
repnz
jmp
mov
insb
sub
mov
mov
jle
add
jno
mov
insl
mov
push
in
repz
jno
imull
in
imulb
and
jo
stos
push
repz
test
mov
imul
lret
add
leave
mov
ficompl
cld
inc
cmpsl
orb
xchg
add
movsl
sbb
inc
pop
or
sub
push
test
shlb
xor
or
mov
loope
jmp
or
imul
das
cmp
xchg
mov
push
iret
fdivs
xor
pop
mov
shll
aam
mov
xchg
clc
mov
fwait
sbb
or
cmpl
mov
push
das
mov
and
mov
cmpsl
ffreep
cwtl
mov
mov
mov
mov
outsl
inc
pop
jmp
fs
lahf
lods
dec
push
daa
xor
decb
insb
xor
cmp
dec
shll
sti
xor
push
add
in
movsl
cmpsb
cld
orb
ret
jne
mov
sub
jle
push
and
push
xchg
insl
or
or
test
or
jge
mov
ja
icebp
mov
loopne
in
test
mov
out
push
data16
pop
lea
adc
dec
xchg
push
xor
sub
add
lahf
mov
dec
pop
sub
rorb
push
inc
and
bound
hlt
jb
in
jo
pop
dec
xchg
sub
ret
shll
rep
xor
pop
adc
jp
or
sti
out
aam
mov
lret
std
jno
xchg
jle
jp
add
add
push
outsl
flds
sub
jo
stos
sbb
lods
add
outsb
out
cltd
clc
lcall
sti
push
mov
adc
adc
cmp
test
push
shl
pop
push
dec
cmp
mov
fidivl
add
js
inc
cmpsl
orb
mov
mov
xchg
and
shll
push
pop
jecxz
mov
pop
mov
stc
add
nop
dec
xchg
sti
into
shlb
dec
out
mov
sahf
fdivs
fmuls
sbb
sahf
jne
lods
xor
iret
mov
sbb
inc
pop
inc
mov
pusha
add
je
or
adc
mov
fs
in
add
mov
or
add
stos
xchg
adc
mov
fildl
sarb
out
cmp
stc
dec
cmp
jnp
clc
push
es
fsts
incl
sti
jp
pop
rorl
scas
aas
xchg
sub
sub
cmpsb
cmp
pop
out
push
mov
callw
bound
mov
pop
mov
ja
xor
shlb
inc
sub
and
add
sbb
in
in
in
dec
sbbl
sbb
jg
int3
out
dec
testb
dec
lock
movsb
xor
gs
mov
xor
out
xchg
cmovb
mov
adc
pop
mov
pusha
sbb
xchg
jns
cmp
imul
frstor
push
leave
mov
mov
adc
les
popa
adc
or
jl
xchg
and
mov
test
inc
pop
add
dec
clc
xchg
xchg
push
cmp
dec
scas
fisubl
add
mov
out
in
push
rorb
imul
in
mov
adc
mov
icebp
push
movb
adc
push
pop
test
pop
fsubrl
out
inc
mov
insb
iret
shll
add
cmpsl
push
push
popf
or
fdivrs
mov
pop
ljmp
inc
xor
fsubrp
jbe
stos
std
out
stos
jne
or
jbe
lret
dec
shrb
dec
js
cmc
call
pop
jb
fsubl
loope
das
xor
outsl
les
mov
je
sbb
mov
stos
fnsetpm(287
add
push
lahf
and
jp
hlt
cmpsl
in
pusha
gs
mov
mov
add
adc
pop
cwtl
xchg
rcrl
jmp
rorb
in
xor
xlat
ret
inc
add
xchg
jne
pop
sub
mov
add
and
sbb
fwait
push
cmc
lods
jae
test
ret
dec
inc
jne
addr16
pop
rcrl
xor
mov
xor
dec
dec
adc
inc
fistpll
push
in
jge
insb
data16
and
inc
mov
rcrb
inc
rorl
or
aam
jmp
sahf
cmp
inc
in
dec
icebp
dec
out
lret
xchg
and
pop
xchg
add
cmp
mov
movsl
aaa
iret
or
inc
dec
sub
dec
pop
or
xor
dec
add
addr16
adc
sub
out
in
imul
fwait
jle
in
jle
cmp
jbe
xor
popa
mov
aaa
movsb
dec
cmp
and
inc
fwait
test
dec
lret
hlt
mov
xorl
mov
adc
fmul
shrl
dec
out
sbb
push
ret
sub
xor
in
jo
xlat
jno
sbb
fs
xchg
xchg
push
orb
test
pop
inc
mov
bound
in
je
icebp
mov
mov
or
jg
pop
push
pop
in
mov
rcrb
sbb
xchg
sbb
imul
xor
pop
testb
fimuls
std
mov
jne
stos
movsl
repz
insb
jmp
pop
dec
repz
pop
scas
fiaddl
fdiv
lods
movsb
jecxz
mov
mov
fsts
mov
pop
mov
int
fwait
btr
fmuls
in
xchg
data16
mov
cmpsl
mov
xchg
sub
add
sahf
xor
dec
sub
inc
xor
xchg
push
fwait
mov
mov
sti
and
mov
sub
imul
xor
mov
pop
cli
aas
in
mov
or
lds
pushf
fsubs
mov
sti
jmp
imul
andl
xchg
xchg
mov
push
fnstcw
jne
mov
imul
fwait
jmp
cmp
pop
jae
in
jne
mov
out
js
in
inc
cmp
sbb
call
or
sbb
lret
jmp
add
incl
addb
mov
jmp
xor
xor
rclb
mov
testb
xor
dec
mov
jae
sub
fcomps
xor
jp
adc
sub
enter
inc
popa
add
lret
cmpps
fs
loopne
mov
aas
sbb
std
movsl
pop
jnp
jb
fldenv
out
ret
dec
insb
gs
push
in
sub
pop
mov
test
test
ss
jg
mov
test
lods
cmp
jno
daa
mov
xor
clc
test
push
push
sbb
int
mov
iret
push
daa
push
xor
jge
sti
push
out
mov
gs
mov
testb
jp
int
xchg
or
pop
and
dec
nop
lods
mov
pop
and
or
push
shrl
scas
lods
int3
xchg
rclb
dec
xchg
pop
pop
ja
lods
fwait
sub
adc
push
lret
and
lahf
sub
inc
dec
rcl
push
pusha
aad
mov
push
lahf
and
nop
test
in
enter
xor
sbb
dec
stos
mov
outsl
or
lret
aas
mov
mov
je
int
faddl
dec
mov
aam
pop
ret
scas
fldcw
scas
rcrb
scas
or
jle
sbb
dec
enter
sbb
rcll
inc
push
jb
adc
cltd
xor
pop
movsb
in
rcll
loopne
or
loopne
sbb
cli
nop
sbb
arpl
mov
loop
js
jo
stos
frstor
fcoml
mov
or
mov
and
mov
lds
push
jbe
gs
mov
popa
adc
xor
sbb
arpl
test
mov
stc
xchg
xchg
repz
jp
cmp
cs
jne
push
ja
mov
test
into
fidivl
shll
adc
movsb
ljmp
cmp
mov
mov
mov
jl
or
adc
push
rcrb
jne
ud1
adc
pop
cmp
test
pop
fs
imul
xchg
in
adc
in
sbb
jns
push
mov
loop
adc
jno
jg
inc
iret
mov
pop
xor
mov
pop
imul
or
comiss
int
mov
mov
cmp
add
ret
dec
not
test
add
pop
and
dec
jle
loopne
and
xchg
in
sub
push
mov
shl
aaa
mov
sbb
fstps
je
cmpsb
cwtl
lret
mov
das
lods
ret
lea
into
aas
decl
lods
hlt
aad
ret
stc
pop
lahf
inc
out
mov
pusha
mov
mov
call
and
mov
sbb
lret
jp
inc
jnp
mov
xor
jns
lock
rcrl
call
xor
int3
mov
and
adc
add
test
je
mov
call
lret
jl
sbb
pop
lret
std
xor
add
popa
adc
dec
lcall
add
push
xchg
mov
push
adc
cld
aas
ja
or
fwait
dec
inc
mov
or
dec
in
push
mov
mov
and
push
dec
orb
dec
xor
fldenv
cli
or
xor
mov
dec
push
mov
xchg
fbstp
push
in
mov
mov
push
pushf
lcall
ret
pop
gs
push
mov
pop
mov
scas
repz
lds
push
aad
test
cmpsl
movsl
xor
out
lret
sub
push
fcmove
add
mov
lds
xorl
out
push
leave
loopne
xchg
mov
add
dec
jl
nop
loope
repz
lock
out
mov
xor
pop
cmc
inc
adc
lods
add
inc
jnp
test
scas
jo
jle
or
push
jo
ljmp
xchg
cs
mov
aam
xor
fldpi
ljmp
dec
pop
fs
mov
stc
and
ja
sbb
negb
or
arpl
ja
xor
lcall
and
sbb
cmpl
lods
sti
cli
lds
mov
sahf
rcr
push
xchg
pop
push
test
sbb
in
dec
roll
daa
fs
lds
and
cltd
call
pop
fsubrl
inc
icebp
dec
mov
dec
dec
rcll
adc
out
stos
push
jmp
lock
cltd
xchg
call
or
inc
mov
and
sbb
sub
test
stos
fldenv
std
xchg
xor
and
add
mov
push
cmpsl
jp
push
jle
fs
mov
mov
loopne
sahf
cmp
jne
cmp
movsbl
insb
incl
out
lock
lret
adcl
inc
arpl
pop
pop
or
pop
mov
sbb
and
jo
das
sti
mov
xor
cld
lock
pop
ja
loop
sbb
hlt
ds
pop
ret
cmp
outsb
fsqrt
sub
int3
and
adcb
fiaddl
sbb
mov
sbb
cmp
fs
clc
addr16
pop
jno
cmp
adc
push
arpl
cmp
dec
sbb
out
mov
mov
stos
adc
iret
in
dec
mov
fisubrs
andl
inc
lea
subl
xor
push
mov
ljmp
add
inc
lea
sbb
fisttpll
test
ret
into
add
pushf
add
dec
jecxz
es
mov
iret
add
push
pop
sub
test
push
adc
mov
adc
insl
add
movsl
mov
shrb
jbe
cmpsl
iret
jb
ds
lahf
sub
push
repz
xchg
mov
inc
push
jmp
cmp
loopne
je
cmp
dec
sub
scas
xlat
and
call
iret
xor
pop
jae
jp
sbb
mov
gs
jecxz
jnp
shrl
mov
cmpsl
out
mov
test
aad
adc
es
mov
push
push
fbld
and
jae
dec
stos
fisubrs
push
push
sbb
sbb
daa
pusha
xor
inc
test
jecxz
rcll
lret
aam
into
cmp
inc
repz
push
fistl
add
rcrb
add
std
sub
xchg
xchg
stos
stos
jb
addr16
cmp
jb
dec
or
stos
sbb
lret
or
cld
mov
inc
std
ja
ds
and
les
outsb
iret
jge
mov
in
addr16
mov
xor
das
clc
sub
push
lock
cmp
in
movsb
xchg
mov
lahf
clc
inc
xchg
aad
jb
mov
mov
gs
inc
pop
mov
cmp
inc
insb
jns
jo
fisubl
scas
fisubl
adc
and
dec
sbb
push
add
lea
outsl
test
jbe
in
jb
mov
mov
add
jo
nop
addl
shrl
popa
jmp
outsb
in
adc
pop
ret
jae
out
sbb
aam
sbb
xor
or
pop
sti
jbe
jnp
cld
or
and
or
stos
loopne
adc
jmp
add
js
cmpsb
add
fcomi
mov
int3
inc
in
aam
in
or
int3
dec
bound
mov
and
jb
push
je
and
sub
mov
les
imul
cs
gs
lcall
xchg
and
sarb
push
adc
addr16
cwtl
pop
sbb
outsb
icebp
stos
gs
out
pop
xor
mov
sub
repz
pop
inc
cs
adc
in
and
div
xchg
lods
cmc
aad
jmp
shll
jmp
xor
mov
mov
jo
sub
insb
fwait
dec
rorl
push
mov
sbb
lock
lds
aad
mov
jbe
fisttps
inc
xchg
mov
fisttpll
leave
push
cmp
lock
sub
push
jnp
dec
scas
inc
pop
pop
inc
jbe
rolb
pop
mov
js,pt
pop
enter
cltd
pop
ja
sbb
xor
lds
cmpl
push
mov
stos
push
mov
cmp
mov
int
jae
scas
jae
xlat
sub
sbb
fidivrs
mov
add
adc
xor
jle
dec
cmpsl
je
faddl
imul
test
sbb
sbb
sub
mov
das
adc
xor
ja
sarb
movsl
adc
cmp
hlt
fcmovnb
jnp
xchg
fsubrl
cmp
rcl
mov
mov
stos
push
ficomps
push
es
orl
das
mov
and
addr16
addr16
aad
cmp
lret
mov
mov
rcrb
pop
inc
cmp
out
pop
fdivs
mov
mov
push
hlt
jl
insb
and
int
cmp
addr16
mov
arpl
nop
je
jmp
fisubl
pop
mov
sub
rolb
cld
iret
test
loope
call
leave
push
ret
leave
into
xchg
mov
xchg
dec
cli
ljmp
sbb
outsl
icebp
icebp
mov
sub
push
add
fsub
dec
xor
fcmovb
addr16
ljmp
es
lods
push
jae
sub
stc
pop
pushf
xor
xor
mov
pop
dec
std
jp
mov
sub
push
sub
xor
pushf
nop
xor
xchg
push
cltd
mov
adc
sbb
icebp
cmpsl
clc
or
add
rclb
aaa
fst
jbe
xchg
std
movsb
xchg
mov
les
push
push
inc
test
imul
xor
adc
pop
js
jbe
inc
bsf
scas
mov
int
xor
sub
xor
dec
lret
cmpl
test
ficompl
sub
mov
pushf
stc
sub
inc
adc
sbb
icebp
out
cmp
jp
xchg
repnz
dec
dec
xchg
xlat
sbb
jl
jp
shll
jbe
test
iret
and
jae
dec
jnp
into
inc
data16
add
mov
add
ret
jae
mov
add
into
aas
lea
roll
inc
mov
jge
int
push
cmc
mov
xor
inc
sub
jno
jl
scas
add
test
add
xor
mov
int
or
cmp
lock
push
movsb
jo
inc
xorb
fcmovb
mov
inc
je
dec
sbb
xchg
shl
add
loop
das
daa
rorl
jmp
jns
cmp
iret
push
pop
and
cwtl
mov
rcl
js
int
mov
movsl
loope
dec
cmp
arpl
inc
mov
xor
and
mov
es
xor
inc
cltd
push
icebp
jecxz
dec
mov
add
jb
jl
cmp
clc
out
test
fmuls
xor
call
pop
lahf
mov
sahf
pop
xor
and
jl
nop
xchg
mov
in
dec
jmp
jg
cmpl
aaa
adc
cmp
shr
mov
arpl
cmp
aad
ljmp
arpl
shr
arpl
mov
jo
push
pop
dec
add
inc
aad
fidivs
cmpsb
movsb
insb
dec
lds
mov
and
jo
dec
test
cmovb
and
sar
pop
dec
adc
dec
sbb
divb
push
pusha
loop
mov
imul
pop
jecxz
int3
push
inc
lock
aaa
push
lods
lods
pop
xchg
mov
cs
js
insl
test
push
scas
or
cmpsb
lret
adc
mov
jg
lds
fidivs
jmp
shll
jmp
call
cvtps2pd
push
and
push
fimuls
imul
test
int
inc
mov
lea
or
das
mov
aam
inc
scas
xchg
jbe
aam
cmp
jmp
push
push
in
lret
ja
sub
gs
sbb
xchg
push
cmp
adc
popa
lret
int
fs
mov
inc
fisubrl
fwait
dec
pop
and
enter
fnsave
bnd
jecxz
pop
fldcw
push
stc
cmp
test
fwait
add
pop
adc
or
mov
cmp
mov
popf
sub
lahf
into
jg
push
sbb
in
ret
xchg
xchg
push
jae
adc
fs
xchg
mov
mov
cwtl
dec
sbb
mov
add
fstps
jne
push
push
out
sub
int
in
stos
data16
xlat
leave
out
lods
das
dec
pop
enter
sti
icebp
mov
push
popa
xchg
and
add
mov
dec
sbb
aas
mov
jbe
aam
pop
sbb
cwtl
push
shll
cmp
push
pusha
adcb
call
ret
out
sarl
jbe
stos
stos
push
cli
insb
dec
xchg
mov
test
adc
xchg
xor
sbb
dec
pop
xchg
mov
addb
pop
jno
and
addr16
dec
cwtl
mov
jo
sbb
push
rclb
fdivs
mov
push
jge
test
jns
jmp
xorl
rcll
xor
test
mov
push
push
or
jg
and
add
addl
fdivs
idiv
jge
lea
adc
cmpsb
ret
test
mov
dec
fidivrs
mov
fs
mov
push
adc
and
test
jbe
jo
test
cwtl
dec
cmp
sbb
fs
cwtl
js
pop
push
scas
clc
add
sbb
in
stc
push
mov
adc
cmp
pop
test
and
xor
inc
pop
data16
int3
prefetch
add
xor
and
sbb
int3
loop
mov
lds
pop
out
addb
and
inc
dec
or
jle
and
push
and
ret
cmpsb
push
out
lods
loop
pusha
add
jns
repz
jp
iret
ficoml
repz
jge
out
xchg
jecxz
inc
aas
xchg
and
stos
mov
push
adc
add
mov
and
push
shll
push
call
mov
sub
xchg
inc
and
loopne
push
filds
loopne
xchg
jp
lods
lds
arpl
bound
cld
sub
insl
cmpsb
xorl
inc
mov
mov
pop
bound
xor
les
xchg
mov
dec
ja
jno
mov
aas
mov
call
repnz
ss
sub
dec
and
and
pop
or
fldenv
dec
jle
add
shll
scas
jns
sbb
mov
out
xchg
mov
insb
mov
nop
pushf
add
lods
dec
repz
lret
aas
mov
jmp
mov
aad
and
sub
inc
inc
jle
in
mov
out
and
sbbl
push
pop
stc
xor
outsl
mov
or
sub
orl
ss
stos
adc
mov
or
mov
xor
sub
call
add
stos
jg
dec
lds
jo
in
rolb
and
mov
test
int
jl
inc
fs
in
push
push
xchg
mov
push
test
shll
addl
out
xchg
lcall
stos
jno
push
mov
mov
adc
inc
mov
adc
movsl
je
in
call
jge,pt
lods
and
push
pop
inc
push
adc
mov
adc
cmpsb
js
dec
int3
out
inc
sahf
xor
cmp
jmp
sub
sbb
cmp
ret
dec
mov
sub
nop
push
lahf
mov
pop
shll
dec
xor
mov
fwait
jnp
shrb
jp
aad
popa
pop
or
popf
movsb
das
std
mov
test
or
fbstp
outsb
adc
adc
lods
mov
push
cmpsb
enter
lods
adc
shl
xorl
add
shr
cld
rcll
cmp
loop
popa
pop
lods
lret
push
mov
mov
xor
xchg
sub
jbe
push
cmp
icebp
pop
and
push
or
push
mov
push
push
sbb
cs
nop
lea
imul
and
lcall
mov
xchg
xor
fstpt
add
add
mov
or
cs
sbb
sub
cli
sub
inc
sub
mov
test
mov
sbb
jo
jg
pop
sbb
adc
mov
mov
in
not
xor
fnstsw
movsl
cmp
dec
and
push
cmpsb
ret
test
mov
or
jns
mov
repz
leave
mov
add
idivl
in
push
dec
in
sbb
xor
inc
xor
cmpsb
cmp
ror
push
jo
int
inc
ret
test
pop
push
lods
rorl
inc
mov
nop
xchg
into
sub
ds
and
xor
int
jo
jg
and
sub
mov
stos
xor
add
or
pusha
dec
dec
sub
jmp
rcl
cld
stos
int3
xchg
push
sbb
in
pop
iret
mov
inc
scas
or
sti
pop
daa
lods
or
mov
pop
ret
cli
and
mov
outsl
pop
loope
jae
loop
ljmp
cld
xchg
fadd
inc
adc
fs
stos
mov
mov
cltd
xchg
pop
mov
add
fxch
push
jne
js
out
sub
jbe
outsb
in
stos
xchg
and
xlat
pop
call
enter
clc
icebp
xor
imul
and
or
adcb
frstor
scas
dec
in
and
dec
or
add
dec
dec
adc
lods
call
push
mov
stos
cmpsl
icebp
xchg
popf
push
int
ds
mov
mov
into
shrb
cmp
and
out
jne
sbb
pop
int
and
jno
sbb
sbb
sub
out
fistps
mov
fsts
xchg
mov
out
rcll
mov
inc
push
sub
inc
xor
mov
and
xlat
push
or
mov
out
add
js
mov
jmp
sar
adc
out
mov
lds
jmp
xor
mov
arpl
movsl
in
incb
mov
dec
cmpsb
fisubrs
pushf
adc
enter
ret
neg
enter
adc
mov
test
push
adc
sbb
pop
xchg
nop
stos
mov
scas
jbe
test
ret
pop
inc
fs
shr
adc
jnp
jg
test
out
cmpsl
inc
rol
adc
mov
cltd
call
xor
dec
mov
xor
mov
adc
movsl
add
lock
push
mov
inc
push
sbb
push
mov
dec
lcall
cmp
pusha
outsb
lea
inc
jbe
adc
call
dec
inc
mov
mov
and
adc
lods
push
gs
out
loopne
jg
loop
movsb
jae
xor
cwtl
jne
xchg
je
jmp
mov
mov
or
pop
sub
rorb
pop
jmp
call
cmp
sbb
pop
cwtl
mov
push
mov
adc
lcall
mov
imul
loopne
cli
data16
loopne
pop
jmp
sarb
std
mov
outsb
ja
insl
xchg
jae
and
ret
roll
call
mov
xor
movsb
jmp
ret
hlt
dec
jg
jecxz
jne
xchg
mov
and
pop
or
cs
into
enter
gs
dec
dec
mov
gs
bound
add
shrb
mov
cmp
in
push
shll
xchg
dec
les
fnstenv
jne
es
inc
push
and
rcr
hlt
loope
mov
xor
imul
xchg
xor
test
xchg
andb
adc
inc
call
sbb
or
xchg
sub
mov
jl
and
push
jb
xor
adc
ds
sbb
or
sbb
xor
dec
xor
movsb
pushf
cmp
rorl
jo
mov
test
jb
xor
lds
test
aad
pop
push
sub
xor
push
popf
adc
addr16
xorl
js
ss
dec
ret
inc
lods
fdivl
xor
add
fs
sub
mov
xchg
bound
lds
jns
popa
dec
and
pushf
in
or
out
mov
mov
imul
cld
xchg
dec
test
cltd
pop
cltd
xor
aad
js
icebp
pop
ss
cmp
daa
xchg
sub
sbb
xchg
mov
mov
sti
ss
iret
aam
push
neg
pusha
sbb
mov
outsl
test
iret
ret
or
data16
dec
call
scas
negb
xlat
dec
scas
push
xlat
stc
sbb
sub
fwait
sub
pop
incb
push
dec
or
add
cmpsb
hlt
lds
xor
inc
jnp
sbb
loope
adc
cmp
fsubrs
push
xchg
in
mov
cmp
pusha
cmp
scas
imul
mov
dec
xchg
pop
xchg
daa
pop
cmp
repz
insl
dec
sub
mov
jp
dec
dec
inc
stos
imul
mov
mov
push
scas
jmp
push
mov
cmp
inc
mov
in
xlat
int3
xchg
xor
jne
aaa
add
add
xchg
scas
push
imul
aad
jge
jg
jbe
pop
push
icebp
sub
mov
ficomps
xorl
inc
sarb
daa
xchg
fwait
jo
pop
xchg
xchg
lods
mov
or
popa
lds
rcll
cmp
lods
adc
jl
push
jnp
and
push
bound
mov
dec
fs
mov
push
adc
pop
icebp
or
pop
xchg
nop
mov
shlb
jl
test
ret
xchg
lods
inc
inc
mov
fnstcw
aas
arpl
xchg
js
addr16
push
inc
je
mov
sub
mov
mov
mov
xor
cmc
out
or
andl
sbb
test
sub
clc
scas
clc
push
rolb
dec
daa
repz
daa
mov
sub
mov
cmp
mov
dec
fisttps
rcrb
je
fidivl
xor
or
into
mov
jg
pop
fidivrs
xor
or
cmp
push
mov
sbb
and
xchg
enter
inc
lret
fists
or
push
dec
jns
aas
pushf
fdivrl
in
lods
dec
sbb
stos
fsubp
push
pushf
mov
out
pop
hlt
cmp
addl
cmp
dec
mov
xchg
loop
nop
jnp
jle
push
fildl
fnsave
aaa
data16
aad
leave
jb
and
add
or
push
add
aad
js
or
dec
in
insb
dec
nop
xchg
xor
xchg
dec
xor
or
mov
inc
aas
adc
std
jnp
mov
cmp
insb
jge
xor
scas
f2xm1
add
xchg
xor
scas
jb
fcmovnu
ss
ja
add
ljmp
shlb
xchg
cmc
cwtl
lret
repz
in
jecxz
jb
lcall
out
iret
add
inc
jecxz
dec
dec
jno
lret
dec
arpl
and
adc
dec
dec
pop
jb
mov
push
stos
xor
rclb
mov
in
test
xchg
mov
gs
push
xor
imul
negb
paddsw
push
xchg
xor
mov
cwtl
mov
cmp
cmp
or
sbb
xlat
xor
dec
lods
test
popa
mov
cmpsb
add
in
inc
and
iret
add
pusha
pushl
sub
mov
xchg
jbe
pop
rcr
and
in
out
mov
aam
add
das
mov
ss
jnp
xchg
or
outsl
lds
cmpb
mov
cwtl
shll
aas
cmp
daa
daa
xchg
jge
leave
cmpb
daa
dec
jle
ds
dec
stc
iret
pop
dec
sbb
ja
fistps
outsb
mov
xchg
ret
das
xor
fisubs
arpl
sbb
sub
iret
push
adc
inc
add
adc
int3
lret
notb
aas
xlat
sbb
fcompp
outsl
test
lcall
cmpsb
mov
and
mov
and
push
scas
rcll
jg
sbb
ret
add
xchg
test
adc
xor
xor
and
push
out
or
cmp
pop
and
outsb
int
dec
dec
or
cmp
push
jae
xchg
push
xor
mov
incb
icebp
cmpsb
movsl
aaa
icebp
in
loopne
je
push
in
iret
scas
rcrl
sti
jne
xchg
ljmp
test
das
mov
ljmp
std
pushf
xorb
aas
insb
inc
arpl
xor
addr16
bound
hlt
enter
fdivl
dec
mov
mov
mov
lods
sub
jbe
outsl
push
fcomi
inc
movsb
dec
scas
inc
jmp
pop
mov
addl
in
icebp
mov
lock
jno
cs
pop
xchg
add
push
adc
xchg
nop
mov
jg
test
scas
jo
rcrb
in
pusha
jno
and
sbb
mov
inc
addr16
leave
inc
je
pop
mov
xchg
cli
or
aaa
mov
pushf
iret
inc
fldcw
xchg
mov
mov
js
addr16
addr16
and
add
ss
dec
sub
mov
loopne
mov
addr16
sub
repz
mov
movsb
bound
call
xchg
stc
iret
sub
repz
xor
sub
ss
rclb
adc
outsl
outsl
push
mov
out
and
divb
jae
xchg
sub
mov
jns
shll
sub
test
imul
out
mov
lods
stc
das
mov
sub
adc
lret
test
icebp
adc
adcl
push
jg
loopne
lret
xchg
inc
nop
incb
les
push
push
mov
hlt
mov
mov
inc
sub
jae
mov
jbe
mov
inc
sti
sbb
sbb
js
mov
dec
scas
mov
ret
cmp
inc
popl
and
outsl
mov
pushf
dec
mov
mov
push
jae
or
lea
in
ror
jge
leave
ret
mov
xchg
inc
cmc
sub
mulb
xor
gs
ret
adc
fsubrl
fsts
xor
aad
push
clc
sbbl
js
iret
add
xor
xchg
sub
aam
xchg
sahf
aaa
outsl
push
dec
dec
push
lcall
push
inc
int
mov
push
out
jg
jnp
lahf
lods
scas
jo
or
hlt
incb
jno
mov
jmp
data16
in
mov
nop
les
stc
add
cmp
adcl
adc
or
jbe
cmp
xor
pop
test
sub
into
in
test
mov
loope
xor
lret
xchg
fdivl
aaa
in
sub
int3
adc
push
dec
insl
jle
stos
jmp
and
or
in
or
aad
or
mov
xchg
int3
lods
pop
dec
jb
mov
sbb
push
mov
lcall
cld
iret
xor
or
sets
pusha
jae
adc
sub
inc
sbb
mov
xor
jo
dec
dec
mov
aaa
xchg
mov
or
jnp
call
mov
sahf
and
andb
scas
iret
es
cmpsl
push
jae
and
out
jp
jmp
jmp
stc
loop
xchg
cwtl
dec
mov
jae
ss
push
mov
std
push
out
lret
pop
fcmovne
ret
test
outsb
sti
cmp
jns
mov
mov
aaa
jbe
and
testb
int
push
sbb
insl
jle
xchg
jge
adc
cld
pop
lret
xor
jmp
gs
popa
or
js
mov
inc
push
ljmp
add
push
or
mov
loop
jmp
popa
hlt
add
int
xchg
pop
jbe
dec
jbe
hlt
push
add
dec
fimull
xor
jb
movsb
stos
inc
sub
mov
lods
cwtl
btcl
leave
rorl
pop
aam
mov
iret
pop
outsb
mov
pusha
jo
and
stos
inc
xchg
mov
and
and
xchg
popa
lock
adc
jbe
icebp
in
inc
or
hlt
add
lret
mov
dec
inc
rcpps
scas
jo
xor
mov
aam
mov
jno
cmp
and
sahf
pop
test
loopne
jl
adc
fsubl
andl
push
notb
addr16
cli
cltd
lret
cmovne
adc
jmp
mov
mov
fistpl
hlt
jl
cmpsb
and
paddb
dec
testb
fs
sbb
mov
sbb
es
xor
pop
adc
aas
cwtl
pop
pusha
stc
iret
adc
push
push
inc
sbb
sbb
sarl
fwait
icebp
sbb
dec
mov
shlb
or
mov
and
or
lock
mov
mov
lds
xchg
push
data16
or
push
jae
and
out
lock
jmp
jmp
and
xchg
es
mov
stc
xchg
imul
std
mov
aad
popf
fcmovne
ret
and
jo
adc
jns
mov
mov
ss
mov
testl
jecxz
and
ficoms
or
sbbb
mov
fldenv
imul
jnp
jbe
mov
sub
push
ljmp
add
push
or
loop
push
and
add
add
pop
out
mov
jne
dec
cld
xor
push
adcl
dec
fimull
mov
stos
inc
sub
mov
lods
ss
rorl
jecxz
inc
mov
iret
inc
outsb
or
push
notl
jae
in
add
sub
mov
pop
mov
jle
adc
or
icebp
in
push
mov
xchg
pusha
in
scas
add
jo
dec
mov
adc
in
jge
mov
repnz
test
cvtdq2ps
mov
lods
movsb
and
outsb
push
mov
nop
inc
fisttps
add
call
push
mov
and
loope
std
or
testl
sbb
pop
inc
insl
lahf
dec
cmpsb
xchg
pusha
and
test
xchg
sub
rcl
mov
sbb
pop
and
dec
xor
pop
cltd
cmp
push
daa
rclb
int3
sub
cmp
mov
cmpsb
mov
sub
mov
xchg
inc
and
cmp
adc
fimuls
mov
sbb
lock
sub
mov
mov
mov
popf
push
xor
je
pop
mov
push
dec
scas
cli
mov
push
xchg
push
call
mov
mov
pushf
out
nopl
in
mov
adc
inc
pop
lock
cmp
aas
jge
mov
lret
iret
mov
stos
push
imul
fistl
jne
fnclex
adc
push
jae
push
mov
loopne
scas
mov
push
add
outsb
sub
mov
out
icebp
int
dec
mov
push
xor
push
jecxz
mov
clc
mov
pusha
mov
into
loopne
cmpsb
adc
movsl
pop
bound
daa
lret
xchg
dec
jb
sub
nop
lret
imul
int
jecxz
add
or
shrl
rclb
test
stos
cmp
test
into
or
je
cmp
mov
inc
dec
mov
push
mov
imul
in
pop
insl
push
mov
ret
call
movsb
jb
divb
call
fnstenv
jno
out
jle
cmpb
js
xor
jne
mov
dec
push
out
out
into
stos
test
sbb
mov
jmp
xor
jb
xchg
add
fistl
into
jns
mov
dec
push
or
cmp
push
mov
and
jl
lea
cmp
cmp
cs
adc
mov
hlt
ror
sub
notb
mov
pop
mov
adc
cmp
mov
adc
outsl
pop
inc
int3
dec
or
sub
mov
adc
into
adc
mov
and
jno
std
call
sub
pushf
in
daa
daa
enter
and
dec
das
and
dec
arpl
ret
jmp
nop
and
jbe
cs
loopne
pop
jmp
repz
pusha
insb
jl
fiadds
add
leave
mov
cmp
mov
sub
adc
movb
xor
mov
fisubs
xlat
movb
bound
not
fisttpl
pusha
insb
or
jp
jb
mov
mov
xchg
cmpsb
repnz
pop
icebp
sti
jle
mov
lods
pusha
cmp
hlt
out
mov
add
cmp
call
fimuls
push
mov
das
xchg
leave
sub
push
mov
mov
jnp
mov
loop
cmp
and
pushf
adc
rcll
test
cwtl
jne
jns
cmp
sub
inc
popf
cld
dec
dec
jge
mov
add
shll
repnz
icebp
hlt
insl
push
dec
dec
adc
xchg
adc
mov
sti
and
lea
or
insb
test
imul
popf
insb
stc
cli
clc
add
sbb
push
not
jnp
bswap
add
pop
mov
rcl
icebp
test
jecxz
jl
cltd
mov
jp
jp
cwtl
push
inc
lahf
fdivp
sarl
fiadds
clc
fimuls
cmp
mov
scas
mov
pop
dec
mov
xchg
fbstp
hlt
fldt
ret
cmp
lods
or
jns
jge
sub
dec
mov
insl
sub
into
sbb
mov
and
das
fiaddl
lahf
inc
es
sub
cmp
popa
loope
cmc
xor
and
xchg
or
adc
mov
ljmp
outsb
xchg
in
xor
dec
cwtl
cli
or
dec
adc
fwait
cmpsl
inc
xor
xlat
inc
cltd
sbb
lcall
aaa
jno
add
jb
push
push
jge
arpl
cmp
inc
insl
push
inc
xor
movsb
xor
nop
pop
mov
popf
jnp
xor
add
mov
cmp
jp
dec
inc
add
or
dec
test
jae
pop
dec
and
jg
mov
daa
add
cld
add
xor
mov
dec
lock
cwtl
movsb
xor
jmp
sbb
repz
xchg
xor
aad
pop
add
push
into
push
aas
jbe
call
add
cmc
sub
cmp
mov
cmp
sub
imul
and
sti
xor
mov
xlat
popa
lds
jne
and
jmp
and
icebp
notb
pop
push
or
jo
imul
jae
sbb
adc
push
dec
mov
js
xchg
jp
orl
push
fs
idivb
xchg
in
or
imul
fcmovbe
push
push
arpl
add
sub
movsl
out
sbb
xchg
iret
insl
shlb
cld
div
and
stos
lock
dec
lahf
adc
inc
xor
sub
pop
dec
sahf
pop
mov
aad
or
mov
dec
adc
sbb
push
xchg
aam
loopne
cs
lcall
pop
mov
xor
shlb
out
mov
cld
sbb
iret
pop
push
into
and
push
je
push
dec
hlt
ljmp
outsb
jecxz
pop
jno
xor
push
loop
inc
outsb
popa
outsb
add
mov
mov
jbe
mov
jmp
aas
lock
and
movsl
mov
inc
fcompp
dec
movsb
in
ss
xchg
shl
push
dec
pop
icebp
xchg
inc
jmp
daa
imul
mov
outsb
adc
adc
adc
imul
mov
jbe
sub
xchg
repnz
movsb
mov
xor
out
neg
and
rorb
jae
push
or
fsubs
and
cmp
jg
xorb
ljmp
arpl
add
clc
loope
jns
les
int
ss
xchg
or
mov
jo
xchg
out
test
and
and
push
ficomps
mov
fbstp
adc
sbb
dec
mov
insb
jle
pop
addl
dec
and
andb
ds
cmp
das
xchg
unpckhps
sbb
push
stos
mov
adc
sub
cld
push
hlt
iret
jnp
lret
les
push
dec
mov
std
sub
std
das
inc
mov
jnp
popa
mov
pop
cmpsl
and
pop
data16
pop
cmpsl
sub
inc
in
aad
jmp
hlt
or
jae
dec
cmp
dec
loop
loopne
int
xchg
mov
and
out
lret
insl
inc
jno
dec
jno
push
xorl
mov
in
and
scas
xchg
or
cmp
repnz
xchg
cmp
xor
sub
loop
adc
test
mov
lahf
ret
leave
jo
test
imull
loopne
enter
jmp
fdiv
push
xor
cwtl
out
and
lahf
or
inc
fldl
add
xor
leave
xor
int3
jne
push
lretw
mov
and
xchg
jae
and
xchg
sub
ja
inc
or
je
dec
pop
fadds
add
iret
fcmove
jmp
xchg
mov
xchg
inc
fiaddl
jmp
xchg
cmp
adc
cltd
inc
add
dec
pop
jecxz
cmp
inc
fimull
dec
in
cmpsb
or
lea
pop
and
loopne
cmp
sbbb
or
push
xor
in
push
movsb
push
not
cld
add
aas
ror
mov
sub
mov
push
dec
mov
in
je
rclb
xlat
pushf
sti
adc
jmp
xlat
push
aad
nop
pop
fdivs
mov
lds
push
cmpsb
out
cmp
lea
jbe
and
or
inc
iret
rdmsr
addb
sar
inc
xchg
jl
lret
leave
inc
lds
dec
roll
aas
fsubrl
lods
mov
mov
inc
adc
push
xor
mov
jo
dec
jo
fwait
leave
icebp
loopne
cmp
and
mov
xor
xchg
in
in
xchg
or
fwait
push
cmp
sbb
aam
int
and
lahf
sub
outsl
mov
pushf
int3
cmpl
pop
fcmove
roll
sti
and
mov
ret
cmp
dec
jne
ss
pusha
or
lods
imul
mov
mov
add
popa
or
jle
dec
lds
icebp
dec
aad
popa
mov
mov
push
clc
cmpsl
daa
fldt
push
cmpsb
push
fisubrl
ja
aaa
cmp
pop
lods
or
push
push
adc
dec
leave
add
fdivrl
cmc
inc
aas
pop
inc
lahf
cld
rcrl
xchg
mov
outsl
icebp
jmp
popa
aas
in
mov
jns
and
insb
stc
subl
aam
outsl
sbb
les
fcomp
movsb
or
repnz
dec
add
xchg
jae
adc
xchg
iret
idivl
adc
enter
jo
les
adc
dec
or
cmpsl
fcoms
mov
outsb
jle
jae
je
mov
int3
cmp
icebp
add
and
sbb
dec
cmpb
iret
fldt
push
xor
cmp
pusha
stc
pop
mov
mov
dec
repnz
std
push
mov
loopne
cwtl
cltd
and
xor
movsb
mov
cmp
in
rclb
cmp
ss
addr16
push
cmp
hlt
pop
xchg
push
sbb
or
negb
jge
mov
sub
pop
aas
movsb
lods
pop
lea
jo
cmp
sbb
fimuls
lds
loope
arpl
mov
imul
dec
dec
jge
out
decl
adcb
xor
in
jnp
add
fldl
aam
push
shlb
add
fidivrl
std
in
movsb
dec
test
fptan
jno
rcrb
shr
inc
fnsave
call
test
notb
xorb
fnstcw
movsb
mov
pop
mov
sbb
adc
iret
xchg
mov
sbb
dec
xor
mulb
cmp
dec
mov
cmp
pop
mov
cmpb
inc
jmp
sbb
xor
call
cmp
sbbb
cmp
lock
fdivrl
mov
jle
or
pop
xor
ss
pusha
cmp
xlat
push
mov
int
incb
out
pop
lahf
pop
fdiv
jae
or
pop
out
cmc
fidivrs
cli
adc
data16
fs
or
jbe
outsl
cltd
cmpsb
sbb
add
icebp
leave
call
ss
cmp
pop
adc
shld
mov
repz
fnstenv
xchg
cs
push
gs
inc
ja
iret
out
jecxz
das
sbb
xchg
xchg
jecxz
mov
adc
into
cmp
cmp
pop
dec
shrl
loop
insb
or
loopne
push
int3
inc
mov
outsl
xchg
fidivrs
sub
mov
dec
or
inc
sub
jb
stc
mov
cmp
mov
inc
xchg
dec
mov
pop
lcall
stos
imul
gs
std
xchg
pop
sbb
mov
xchg
das
rcrl
scas
in
jbe
jl
fistpll
sub
in
pop
pop
lea
push
stc
sub
stc
ret
in
int
or
dec
mov
mov
xor
cld
inc
inc
sub
pop
bound
aam
push
push
mov
cltd
out
sbb
inc
stos
out
in
iret
dec
adc
xchg
xor
and
xchg
or
icebp
loopne
cmp
mov
nop
popa
bound
and
in
aam
dec
dec
in
jo
xor
scas
popa
lret
and
test
pop
cmp
mov
xchg
les
stos
sub
stc
xchg
mull
fidivrl
xchg
and
mov
cwtl
arpl
movsl
mov
faddl
popa
jmp
push
sub
fimull
outsl
mov
push
dec
mov
insb
fstps
push
dec
mov
andb
int
mov
aad
pusha
lcall
push
addr16
push
mov
pop
call
mov
test
push
pushf
into
or
cmpb
add
call
outsl
sbb
jle
lds
aas
fisubs
mov
mov
aam
fsubrs
sbb
lahf
dec
inc
repnz
out
sub
mov
cmp
push
arpl
fs
push
lahf
xor
sbb
or
ja
cld
popf
and
mov
fbld
lret
leave
popf
jnp
sti
xlat
mov
lods
dec
enter
sbb
shll
cmp
xor
sahf
nop
xor
fcomps
aaa
mov
or
dec
adc
lahf
xchg
shr
mov
gs
sbb
outsb
stc
cmp
push
jno
xor
mov
ficomps
movsl
push
sbb
xchg
sbb
mov
fcmovbe
push
adc
add
fbstp
mov
sbb
or
ror
testb
mov
xor
add
loopne
push
mov
push
arpl
mov
add
mov
mov
je
cmpsb
fcmovne
xor
sub
lods
out
sbb
call
push
mov
cmp
inc
stos
inc
in
sti
stc
mov
sub
hlt
jecxz
idivl
push
iret
mov
enter
sub
scas
iret
jo
push
jne
push
loopne
xchg
cld
jecxz
pop
xchg
inc
sbb
lds
hlt
adc
sub
and
jmp
sub
sbb
pushf
sbb
push
mov
xchg
stos
sbb
arpl
xchg
rclb
pop
push
jno
jns
adc
mov
jnp
dec
xchg
test
pusha
aaa
daa
ja
and
xor
or
int
sbb
mov
jmp
mov
and
mov
pop
jp
cmp
add
rcrb
pushf
mov
push
push
loopne
call
mov
inc
jmp
outsb
lea
jbe
and
mov
and
adc
push
mov
call
xchg
push
cmpsb
xor
out
pop
enter
mov
repz
pop
popf
iret
jae
cmp
test
mov
mov
test
sub
push
cmp
stos
push
push
and
add
sub
or
push
xchg
rcrb
pop
cmp
push
cmp
pop
shll
loopne
iret
mov
mull
cmpsl
mov
xor
test
cmpsl
shlb
pop
cmc
cmpl
push
lods
xor
xor
push
outsl
xchg
push
push
loop
cmpsl
shll
jbe
jne
cltd
push
mov
daa
pop
mov
insl
imul
movsl
or
inc
inc
sbb
inc
outsb
sti
mov
aaa
mov
enter
push
sbb
mov
loop
mov
inc
add
push
and
adc
lret
push
fidivl
ret
loopne
stc
mov
cmc
test
das
arpl
add
movsb
mov
icebp
call
das
mov
add
jnp
cmp
fs
dec
jbe
fisubrs
rcll
notl
insb
jo
inc
iret
cmpsb
mov
hlt
in
ret
aaa
out
je
aad
push
jecxz
or
inc
push
clc
shl
mov
cmpsb
movsl
loopne
int
mov
mov
adc
cmp
out
mov
hlt
add
xor
pop
pusha
cmp
rcrl
mov
outsb
scas
push
shlb
aad
xor
stc
jp
adc
sub
out
decl
adc
pusha
xchg
push
sbb
dec
popf
into
mov
add
xchg
imul
xchg
add
push
outsb
push
push
jg
insb
inc
mov
cli
rorb
in
lds
cmp
dec
pop
mov
sti
daa
mov
pop
in
push
jmp
das
bound
in
outsb
lea
out
dec
add
push
push
xorl
hlt
jle
rol
xchg
xchg
cmp
dec
pop
inc
js
push
jnp
mov
adc
push
insl
mov
add
rol
stc
sti
js
mov
fists
push
adc
jp
jns
xchg
leave
jge
mov
mov
fwait
data16
xor
icebp
push
jg
dec
sbb
xor
into
push
mov
xchg
enter
lret
inc
cmpsl
jns
pop
lds
mov
inc
cmpsb
push
call
xchg
mov
rorl
pop
daa
and
test
jb
xor
or
cmp
jns
loopne
sbb
xor
imul
sbb
pusha
inc
mov
jl
inc
adc
ss
outsb
mov
lds
dec
and
imul
add
movb
mov
adc
dec
fsubrs
mov
push
mov
push
mov
lods
sbb
std
xchg
add
cli
or
push
jg
sbbl
mov
cltd
ret
ret
and
and
mov
cli
jne
xchg
mov
or
stos
xor
mov
xor
popa
imul
push
dec
call
jnp
dec
aam
mov
mov
push
iret
jge
daa
pop
adc
and
repnz
mov
test
add
sahf
dec
ficompl
das
jmp
lret
lret
popa
pop
pop
push
insb
pop
pop
push
mov
pop
ljmp
inc
add
int3
popf
outsl
fstpl
or
movsb
adc
push
out
das
leave
insb
orb
icebp
std
dec
hlt
pop
out
sbb
push
subl
jbe
fs
xorb
push
mov
out
int
jnp
cs
xchg
lods
mov
adc
fcmovnbe
xchg
pop
movsb
aaa
sbb
lods
inc
mov
mov
xchg
sub
and
sub
jns
or
xchg
jle
cmpsb
nop
sub
lret
push
cwtl
jo
mov
dec
push
in
inc
int3
or
jno
ja
out
sub
mov
lcallw
xor
popf
add
shlb
test
push
cs
mov
add
cmp
loope
rolb
lock
sub
jbe
and
mov
and
cli
in
lret
gs
jo
mov
mov
repz
hlt
int
cmp
xchg
xchg
dec
cwtl
add
cmp
in
fstl
fwait
out
sbb
imul
mov
add
mov
cltd
mov
int3
jnp
lret
ret
add
inc
arpl
ret
mov
mov
jns
ret
mov
jno
repz
xlat
sub
push
push
shll
push
sbbl
in
sti
dec
xchg
mov
push
push
pop
or
mulb
inc
jb
lock
arpl
das
scas
mov
test
lea
dec
rorl
mov
or
stc
sbb
cmp
pop
hlt
ror
not
aas
mov
outsb
add
xchg
xor
daa
andb
iret
push
sub
pop
movsl
lret
add
xchg
in
pop
int3
jns
fadds
fcmove
adc
pop
in
xorb
jge
jmp
fs
cmp
arpl
pushf
xor
pop
xchg
rclb
mov
js
cmc
data16
out
in
adc
pushf
stos
and
jno
xchg
fnsave
push
mov
lcall
lds
push
mov
cld
mov
sub
adc
lds
in
push
push
sub
pop
test
mov
or
jp
mov
inc
popf
ret
inc
scas
mov
inc
sub
xchg
addr16
xchg
fmuls
je
jecxz
sarl
in
or
push
xor
dec
push
pop
stc
xor
push
shlb
dec
mov
push
inc
sbb
mov
add
jmp
sub
mov
mov
movsb
dec
stos
call
nop
and
jge
adc
xchg
pop
mov
pop
fs
cmp
cmp
or
adc
cmp
xchg
hlt
fcoms
inc
dec
mov
add
sbb
xchg
in
xchg
mov
je
out
or
imul
inc
mov
cmpl
push
adc
mov
into
test
and
inc
in
dec
rcrb
lods
pop
test
inc
and
dec
mov
movsb
stos
inc
ljmp
mov
mov
pop
mov
inc
lahf
out
jg
push
pop
jno
and
faddl
shl
in
xchg
xor
addb
rorl
mov
cmpxchg
out
jae
mov
jne
imul
aas
mov
outsl
add
sub
sbb
xor
push
sub
shlb
jg
sbb
xor
mov
adc
mov
xorb
jge
jmp
mov
outsb
mov
iret
xchg
sbb
mov
out
push
pop
adc
pop
mov
bnd
data16
out
addr16
mov
cmpsb
pushf
stos
mov
xchg
fnsave
insl
popf
mov
cltd
mov
cltd
inc
pop
jno
into
mov
cld
mov
sub
pop
in
adc
lds
jnp
lea
fcoml
out
fldcw
mov
mov
fwait
lret
cld
pop
or
mov
imul
stos
push
cmp
mov
cmp
es
xchg
lds
arpl
mov
fs
push
inc
sbb
mov
nop
hlt
sbb
sbb
pop
push
icebp
negb
jae
xor
add
stos
cmp
loop
gs
aad
mov
mov
pop
jae
or
inc
pop
cmpsb
stos
in
orb
xorl
ja
arpl
dec
ret
or
mov
out
iret
sub
inc
cmpsb
je
call
sbb
jle
out
and
mov
xor
xor
test
sub
add
addr16
jo
push
jmp
mov
lea
es
pop
lods
fstpt
mov
sbb
dec
imul
popf
je
xlat
mov
add
add
inc
out
mov
dec
jb
mov
paddb
pop
mov
inc
mov
adc
push
and
xchg
mov
imul
sbb
mov
sub
cli
out
jns
or
aas
mov
outsl
add
clc
add
jmp
std
div
or
insb
or
xorl
mov
or
stos
xchg
cltd
popa
pop
jmp
adc
sub
jle
mov
sub
or
popf
adc
std
in
in
int
jle
popa
and
fisttps
mov
cwtl
insl
push
jp
scas
pop
adc
jmp
xlat
xchg
imul
fistpll
scas
cmp
push
lds
dec
add
dec
add
mov
loopne
push
and
adc
addr16
adcb
push
aaa
pop
stos
push
lock
xorw
and
icebp
mov
fisttpl
fisttps
mov
pop
mov
lcall
or
mov
push
xor
mov
xchg
repz
aaa
loop
lods
or
stos
mov
std
imul
sarl
in
xor
mov
xchg
loopne
mov
scas
lock
adc
into
xor
enter
or
mov
inc
int3
pop
scas
or
sbb
mov
iret
jl
mov
aas
sub
popf
out
add
cmp
neg
int3
xchg
call
movsl
cmpl
adc
lea
xlat
testb
sub
adc
inc
adc
int
sub
iret
test
pusha
insl
jne
push
lret
cmp
xor
mov
mov
test
mov
test
cltd
loop
cmp
into
add
stos
mov
frstor
repz
xchg
dec
jne
adc
add
movsl
mov
ficomps
fsub
and
xchg
sbb
xchg
flds
adc
inc
cmc
cwtl
xchg
mov
mov
aam
in
out
loope
out
xor
sub
sub
xchg
or
or
cli
sarb
sub
push
call
adc
mov
fwait
ss
out
xchg
sbb
adc
push
sbb
out
shlb
push
xchg
add
daa
xor
dec
and
adc
push
lods
ljmp
aaa
mov
lea
out
push
mov
lret
idivl
fcmovbe
add
sarl
inc
and
mov
mov
mov
outsl
sub
push
push
lods
adc
push
xchg
testl
jae
and
int
xchg
adc
fwait
adc
outsl
dec
cmp
mov
repz
pusha
cmc
push
cmp
ljmp
mov
sbb
fwait
int
scas
xor
pushl
sarl
cmpsb
cmp
movsl
or
dec
cmp
ss
jl
scas
dec
push
imul
popf
xlat
push
jp
ja
data16
push
jbe
icebp
outsb
mov
mov
mov
and
dec
sbb
lret
test
cmp
into
xor
repz
dec
and
jecxz
ds
sub
jne
mov
sbb
inc
dec
out
pop
pop
gs
inc
loop
out
lods
jno
pop
dec
js
push
inc
in
jg
add
xlat
mov
adc
in
jo
sub
jl
inc
in
sbb
xor
push
lods
cmp
lods
sub
daa
mov
mov
scas
sbb
mov
cmp
jmp
pop
cmp
imulb
or
out
iret
loop
rclb
out
mov
and
movsl
scas
add
and
int
pop
in
inc
dec
mov
jmp
rclb
mov
mov
fimuls
lret
rorl
mov
iret
inc
mov
imul
in
aas
iret
fcomps
outsl
mov
aaa
adc
sahf
jo
mov
jl
xchg
fs
cmp
jns
sbb
sub
inc
call
mov
lea
sti
imul
adc
or
test
jmp
jb
fwait
add
pop
mov
dec
add
lods
hlt
ret
test
pop
sahf
mov
xchg
lods
out
jb
xor
adc
leave
ds
nop
jecxz
xchg
mov
push
adc
lods
mov
pop
int
fildl
adc
ffreep
addb
addr16
inc
fsubl
dec
or
mov
sbb
hlt
mov
sbb
data16
dec
mov
loop
mov
inc
cmpsb
imul
rcrl
mov
lret
inc
ret
js
imul
stc
xor
sbbb
pushf
mov
mov
adc
pop
pop
gs
dec
xor
sub
leave
sub
dec
lds
inc
int3
imul
fisubrs
jno
in
adc
jecxz
push
idivb
in
inc
int3
out
lcall
add
je
jo
push
jge
sbb
in
jo
and
outsl
movsb
into
jnp
insl
or
jl
sbb
in
out
lods
cld
push
mov
jnp
mov
push
add
pushf
pop
xor
push
jg
jmp
into
mov
inc
addr16
fsubs
jl
shrl
frstor
xchg
iret
inc
dec
sbb
xor
shll
dec
std
jp
or
lret
and
and
leave
imul
mov
add
in
out
loope
pusha
push
mov
mov
lds
xchg
or
push
lret
ja
push
lahf
icebp
adc
ss
xor
lcall
jno
repnz
popa
xchg
jb
rorb
or
adc
popa
mov
clc
jae
ror
add
daa
jmp
pushf
ficoms
lahf
and
sub
or
jae
jb
mov
dec
xor
es
subb
push
xor
ficoms
clc
std
nop
xor
push
ds
jno
mov
dec
jae
fdivs
add
insl
sbb
xchg
xchg
je
inc
frstor
cwtl
xchg
jmp
mov
ror
mov
div
mov
mov
lret
push
cmp
hlt
les
sub
push
dec
push
sbb
lret
movsl
xor
js
in
inc
dec
bound
in
mov
repnz
pop
aad
sbb
push
add
inc
adcl
xchg
xchg
xor
mov
and
int3
dec
inc
mov
mov
fdivs
repz
fucomp
ja
xchg
dec
push
sahf
notb
and
push
and
shll
mov
es
loopne
es
aas
xchg
jae
popa
in
outsl
adc
clc
xor
js
cmp
jl
in
out
mov
mov
imul
test
cmp
outsb
adc
mov
and
call
sahf
iret
inc
sbb
mov
into
inc
mov
jl
or
xor
mov
dec
dec
push
sub
mov
js
call
insb
out
fdivl
out
subb
movsl
inc
ret
outsl
lea
mov
ret
scas
loop
pop
insl
cmp
sbb
pop
into
push
rolb
out
lret
jns
lcall
adc
adc
cmp
jno
add
dec
jmp
cld
jmp
and
addr16
and
jp
cmp
pusha
cmp
call
int
pop
stos
add
push
addl
outsb
pop
lcall
xchg
clc
xchg
xchg
pop
mov
mov
ficoml
div
imul
pop
xchg
lds
cmp
jle
xlat
lea
cmpsl
push
les
fcomi
cmpsl
mov
or
mov
aas
ret
add
cmp
push
ljmp
sub
xchg
inc
push
mov
push
xchg
xchg
adc
repnz
cmp
sbb
mov
jge
in
into
gs
jo
sbb
stos
sbb
inc
pop
out
push
add
adc
sbb
xor
add
and
xchg
lret
pop
test
xchg
int3
inc
jns
cmp
pop
push
fmul
mov
cmc
add
inc
dec
and
sbb
fcoms
xor
aad
ljmp
dec
movsl
or
popl
iret
test
mov
push
add
in
fcoms
adc
push
mov
pop
mov
jl
xor
in
jmp
mov
push
mov
data16
stos
sbb
cmp
inc
dec
test
aaa
inc
in
repnz
adc
lret
xor
cld
jne
push
loope
cld
jp
psubusw
mov
loopne
subl
jnp
mov
inc
in
leave
dec
sbb
test
shlb
fisttpl
xor
add
adc
cmova
and
cwtl
movsb
pop
mov
dec
clc
pop
ficompl
imul
jns
mov
adc
pop
sbb
fs
jl
jmp
add
lcall
ljmp
call
cmp
dec
inc
inc
mov
xor
dec
insb
jp
adc
and
rcrl
jp
icebp
and
enter
pushf
mov
decl
lahf
and
add
fdivrl
mov
adc
adc
inc
out
dec
imull
sahf
adc
pop
imul
ds
mov
rorb
sub
mov
inc
int
adc
pop
lods
fcompl
jle
js
ja
dec
sbbb
icebp
mov
pushf
and
xor
inc
mov
jns
lea
into
lods
int
les
sbb
mov
bndldx
stc
outsl
sub
sub
or
adc
sub
sub
insl
adc
mov
jle
out
fstpl
out
ljmp
cmp
inc
dec
mov
sub
imul
nop
test
cltd
cmp
inc
jne
cmp
jne
push
jbe
fildll
adcl
clc
sbb
jmp
pushf
in
jne
xchg
test
pushf
lret
aaa
inc
fs
pusha
and
in
loop
cmp
imul
test
out
xchg
push
mov
rclb
in
push
jl
int
mov
or
call
xchg
into
xchg
or
jb
aaa
in
shll
cmp
dec
xor
cmc
jns
pop
xchg
inc
xlat
enter
fcoml
lods
jae
loop
test
mov
test
or
jae
sbb
into
imul
mov
insl
jne
jg
adc
jns
cmp
fcmovb
sub
xor
addr16
addr16
repnz
fwait
pop
adc
nop
push
lret
cmp
push
mov
mov
call
lea
jp
lcall
xor
pop
lcall
xchg
push
push
ror
bound
fistps
xchg
pushf
mov
push
aas
cmp
idivl
cmp
mov
push
mov
xchg
or
xlat
inc
das
inc
mov
ljmp
sahf
sti
leave
js
add
inc
mov
sub
push
mov
repz
lret
sub
lret
cmp
or
aas
popl
repnz
xor
cmp
inc
mov
xor
cmp
or
es
cs
decb
sub
mov
sbb
push
fisubrl
xchg
push
mov
sbb
mov
iret
sbb
lret
adc
aam
rcrb
cmp
xor
cmp
push
pop
in
mov
adc
pop
mov
addr16
scas
add
hlt
add
sbb
jb
lock
cwtl
mov
mov
mov
movsb
stc
sbbb
jge
stos
inc
jecxz
enter
sub
arpl
sarl
push
dec
data16
out
jl
cmpsb
add
mov
sti
lods
xchg
and
pop
test
aad
add
test
push
push
into
jmp
or
mov
lods
int3
or
sub
test
xchg
mov
cmp
and
mov
mov
mov
push
ret
mov
iret
mov
outsl
ss
add
ja
cmp
dec
or
sbb
xlat
add
jb
data16
mov
ret
outsl
jb
lcall
mov
and
out
mov
xorb
sbb
fs
xchg
stos
jns
sarl
daa
daa
mov
pop
adc
pushf
movsl
adc
ret
je
mov
je
pop
adc
and
sti
xchg
aam
dec
mov
and
jo
jmp
sub
xchg
cmpsb
rol
xchg
dec
jns
imul
jns
add
mov
test
rorl
mov
dec
clc
int
fninit
int
mov
jns
imul
push
adcb
xchg
cmpsb
lods
sti
out
xchg
cmp
inc
inc
push
movsl
jge
dec
fstps
repnz
cmp
jno
loopne
xchg
popf
daa
mov
shl
sub
daa
cmp
leave
rcrl
in
pop
mov
imul
ljmp
inc
xlat
mov
xchg
mov
std
push
add
mov
lea
leave
nop
hlt
push
or
sbb
decl
repz
das
fisttpll
jl
hlt
leave
dec
and
xor
jae
push
add
ret
dec
std
or
lods
lods
mov
mov
jno
shrl
xchg
add
jno
hlt
stos
jb
jle
xchg
push
cmp
clc
movb
out
sbb
inc
fs
pop
push
mov
out
cmpsl
pop
shrl
add
cmpsb
mov
add
dec
imul
mov
jne
adc
push
inc
ljmp
pop
mov
call
add
fs
and
push
mov
imull
mov
out
jne
add
daa
ret
mov
out
lahf
inc
rorl
aaa
movsl
and
mov
div
out
pop
fsubl
add
ss
cmp
adc
lcall
outsb
cmc
and
mov
std
mov
xor
push
jecxz
add
mov
push
xchg
es
js
fildll
xchg
subb
mov
loop
sub
jmp
test
pop
fisubrs
or
push
aam
out
adc
mov
pop
ret
stos
sti
cli
adc
inc
ljmp
and
into
jbe
addr16
cld
paddd
sarl
outsl
jg
loopne
mov
shrl
mov
inc
lret
int3
xor
lret
and
out
xchg
aas
jecxz
mov
pop
lcall
cmc
scas
jno
inc
jns
mov
data16
sbbb
in
xchg
ja
or
ret
and
xchg
movlps
sbb
mov
mov
daa
jnp
aas
xchg
push
jns
rorb
jb
and
dec
mov
shr
and
into
cwtl
jl
jge
adc
mov
fimull
and
push
or
xchg
test
in
dec
addl
push
clc
mov
mov
fmuls
inc
xchg
push
cmp
jle
fwait
adc
mov
cs
mov
lods
jno
adc
pop
cmp
mov
mov
mov
leave
mov
or
xor
imul
xchg
jne
and
jbe
inc
ret
inc
pop
jmp
or
xor
arpl
hlt
aaa
mov
test
aam
jo
pop
jge
es
xor
ss
daa
test
imul
jg
inc
dec
xor
daa
add
aad
stc
call
or
pop
xor
mov
adc
and
pop
sub
inc
scas
xchg
ret
adc
sub
call
xchg
movsl
mov
xlat
fdivrl
in
lea
push
nop
arpl
jae
or
fimuls
sbb
xchg
in
sub
test
std
sub
cld
mov
sub
xchg
push
test
mov
pop
lret
inc
xor
xchg
lea
ror
pop
rorl
cmpb
jns
adc
mov
adc
dec
insl
fldt
ret
pop
dec
xchg
pop
mov
cmpsl
xor
mov
mov
nop
push
cs
mov
mov
out
daa
or
ret
lods
xor
jbe
and
pop
cs
ss
addl
cs
cmc
loopne
iret
scas
push
cmp
xchg
std
xorb
data16
adc
cmpsb
push
push
ret
pop
xchg
and
mov
inc
add
mov
hlt
iret
jl
in
andl
mov
and
test
inc
test
sbb
sti
aam
adc
hlt
ret
not
jnp
lea
out
sbb
imul
sub
mov
repnz
gs
xor
push
inc
dec
outsl
movl
lods
scas
vaddps
xchg
sub
movsw
movsb
fs
dec
lcall
int
mov
fisttpll
push
sub
xlat
cs
push
jnp
or
std
loope
fisubrl
mov
jmp
fisttpl
dec
mov
movsb
and
jmp
cli
rorb
add
xchg
inc
cmp
daa
xor
imul
jg
inc
pop
xor
adc
cmp
stos
outsl
pop
inc
push
call
sbb
sbb
data16
jne
push
and
pop
fsubrs
jmp
ljmp
std
rcll
aas
sub
sub
mov
lods
lea
lock
int
jp
mov
and
mov
fs
je
and
das
jl
sub
movsb
ret
sbb
add
inc
xchg
test
xchg
xor
fisubrl
insl
loop
jns
ja
icebp
in
das
push
adcb
add
pop
imull
inc
mov
fnstsw
lods
lock
adc
adc
mov
add
data16
inc
enter
mov
cmc
push
mov
jae
lock
popf
lret
and
arpl
pop
int
sub
das
push
pop
or
jno
sbb
or
jo
es
mov
test
lret
xchg
ret
mov
mov
movsb
jno
push
test
movsb
sti
repnz
insb
dec
aas
push
xor
scas
rcrb
lret
cli
add
xor
pop
jl
out
andl
mov
sbb
clc
fisubrl
into
cmp
sbb
mov
test
fmull
adc
mov
jno
jne
icebp
mov
push
rcll
and
mov
inc
out
jo
and
iret
jp
jnp
loop
call
inc
pop
push
mov
push
push
cmpsw
push
imul
jp
je
cwtl
xor
pop
outsl
fmul
push
out
pop
or
inc
jbe
jge
xchg
or
add
mov
mov
test
adc
push
imulb
shll
adc
lahf
xor
mov
or
xchg
bound
push
mov
mov
inc
jle
ret
cmp
xchg
push
je
xchg
sbb
fistpll
xchg
push
ss
jns
call
int
or
add
outsl
push
mov
lods
inc
pop
cmp
out
sbb
int3
jb
push
mov
andb
lret
test
ret
fs
and
push
add
xlat
mov
mov
bound
cld
lods
shlb
xchg
fldenv
xor
inc
xchg
aas
adc
xchg
push
xchg
dec
sbb
outsb
push
jmp
adc
xchg
mov
fnstcw
fdivp
xor
and
cli
dec
or
fdivrp
icebp
mov
or
fcoml
outsl
cmp
insl
stc
xor
xorl
pusha
sbb
cmp
sub
and
adc
mov
outsb
out
ret
out
and
shrl
sti
ljmp
aas
lret
xor
fstp
insl
add
fistps
mov
hlt
test
or
int
sub
movsb
or
sarb
pop
jno
jp
xchg
push
stos
scas
fisubrs
adc
mov
jecxz
push
jo
sti
daa
aam
mov
shr
push
pop
mov
pop
dec
mov
adc
call
mov
hlt
and
push
push
inc
push
or
pop
push
outsl
adc
into
inc
in
jbe
lahf
mov
nop
pop
sbb
cwtl
inc
and
jecxz
or
cld
cld
or
test
mov
fisubs
hlt
call
js
bound
xor
hlt
cmp
outsb
lds
shrb
int3
dec
iret
dec
in
cmpb
sub
scas
pop
fldcw
jnp
cmp
sub
mov
mov
sbb
adc
add
sbb
icebp
cmc
fwait
outsb
or
test
dec
mov
ja
pop
lret
add
notl
add
and
pop
jnp
fisubrl
int
add
mov
test
mov
sub
jmp
jb
pop
xchg
xchg
push
lods
cwtl
inc
shrb
rclb
cmp
in
push
inc
adc
or
loopne
jg
lahf
je
rcr
test
inc
inc
xchg
cmp
fstpl
and
or
pop
leave
dec
mov
frstor
mov
mov
inc
or
xchg
sbb
sarb
mov
mov
aas
mov
ss
cmpsl
stc
jge
xchg
xor
xchg
clc
mov
ds
lods
push
cwtl
shrb
adc
cld
mov
push
mov
lret
frstor
jne
mov
xor
sbb
es
add
mov
int3
sbb
mov
mov
movsl
jp
loopne
xchg
mov
ror
mov
pextrw
sbb
push
adc
ret
shll
in
pop
mov
dec
jne
rcl
adc
or
jl
ds
insb
sbb
in
std
scas
nop
xchg
jnp
fisubrs
movsb
outsl
rcll
sbb
add
test
jne
push
add
loopne
insb
cmpsl
inc
daa
xchg
scas
imulb
outsl
pop
dec
mov
push
jne
std
insb
lds
mov
push
into
inc
xor
fcoml
or
aaa
fisttpl
sub
or
add
or
pop
loopne
stos
pop
loopne
mov
out
jbe
repz
out
aas
aaa
mov
pop
cmc
mov
jle
leave
fnstsw
xchg
jae
jle
dec
jmp
push
mov
loopne
ljmp
movsb
dec
inc
pop
mov
in
sbbl
lcall
xchg
std
insb
loope
pushf
dec
jmp
push
push
or
jge
dec
rolb
out
ucomiss
dec
fwait
mov
push
movlps
into
scas
xor
xor
in
push
sahf
adc
cmp
pop
mov
mov
ja
lds
aam
ret
jbe
ja
mov
arpl
add
push
fs
into
loopne
xor
and
jmp
ret
mov
icebp
in
scas
xchg
add
xor
cmp
lock
arpl
ror
subl
sbb
roll
xchg
aam
xchg
jb
jle
aas
addr16
xchg
mov
dec
ja
movsb
xorl
inc
lea
loop
xchg
sub
and
fs
push
push
cli
adc
cli
cmp
mov
lahf
mov
stc
in
jns
loop
lahf
inc
test
in
dec
dec
aad
and
in
dec
hlt
sbb
jno
fnstsw
int3
or
ds
js
icebp
jno
outsl
and
stc
push
fisubrs
pop
pop
sub
cwtl
mov
jno
insb
and
imul
jo
jmp
sbbl
notb
aam
mov
shrb
cwtl
mov
int
fadds
xor
push
jne
mov
leave
add
pop
fstps
and
out
ss
mov
or
lret
nop
inc
fsts
aad
push
dec
movsb
mov
popa
insb
dec
push
stos
in
xor
cmp
sahf
das
movsl
inc
addr16
or
xor
in
xor
pop
cmp
ffreep
lret
push
adc
xchg
and
jmp
insl
movsl
adc
scas
aas
cltd
xchg
out
sub
aas
sbb
call
sti
pop
movsb
mov
inc
mov
addr16
pop
cwtl
pop
outsb
xor
push
fs
cwtl
mov
pushw
and
xor
mov
and
ret
test
jmp
lock
cmp
das
lcall
inc
mov
ljmp
sti
dec
pop
adc
jbe
mov
add
and
pop
sub
out
sub
push
dec
in
je
out
popa
cmp
out
mov
mov
mov
shll
fildll
xor
pop
js
push
adc
mov
mov
divb
or
mov
cltd
jae
andb
sbbl
fisubrl
push
push
fimuls
cmpsb
mov
loope
lret
fldl
push
aam
mov
mov
xchg
les
je
int
or
std
aas
sub
xor
decb
jmp
push
cli
push
bound
scas
stc
mov
add
jno
cmpsl
clc
push
pop
jnp
test
sbb
cmpsl
shlb
cmp
je
fcmovb
movsl
stc
mov
mov
cmp
and
adc
inc
xor
push
stos
test
in
cld
in
test
jno
insl
lar
iret
jl
add
cwtl
xchg
pop
scas
mov
je
je
sti
mov
sub
xor
mov
xor
js
pusha
stc
outsl
add
lret
inc
insb
ljmp
pusha
and
dec
insb
or
movsb
and
movsb
sti
cmp
mov
lods
dec
jnp
xor
jmp
das
pop
lret
sbb
iret
pop
fdivs
and
pop
cmpsb
adc
jecxz
adc
iret
lahf
lcall
test
push
call
mov
jle
xchg
pop
pop
pushf
jp
testl
xchg
jno
xchg
push
pop
sbbb
repnz
pop
push
jns
inc
add
xchg
push
aas
psubb
cmpsb
mov
xchg
fdivrl
lods
pop
adc
repz
jle
pop
inc
aaa
ljmp
int3
dec
push
push
inc
ror
inc
push
and
or
xor
xchg
xlat
add
and
lods
dec
mov
dec
mov
mov
leave
cltd
xchg
dec
push
mov
sbb
ja
and
mov
pop
enter
vmread
lret
call
fisubrl
xchg
sar
inc
jmp
das
xchg
mov
dec
fimull
sahf
out
jb
clc
scas
push
out
mov
cmp
inc
dec
xchg
cmpl
push
rclb
xor
and
rorb
inc
test
push
mov
jo
jmp
mov
aam
inc
xor
jo
bound
sub
ret
out
jno
lods
dec
jp
push
mov
test
inc
andl
cs
inc
sub
pop
jl
jo
xor
fidivrl
push
inc
adc
rcll
xor
xchg
addr16
jbe
ret
sbb
cli
pop
bnd
outsl
sahf
lret
mov
sbb
xchg
sub
pushf
leave
mov
popa
inc
arpl
xor
jno
loope
cmc
sub
mov
mov
or
xor
fs
xor
sbb
popa
mov
pop
xor
rorb
jmp
mov
je
fnstenv
fwait
jnp
cmp
icebp
notl
inc
jno
adc
jno
pop
xor
jbe
scas
adc
int3
ss
out
push
addps
jae
dec
inc
jmp
dec
pusha
xchg
call
add
cmp
cmp
cwtl
lret
leave
inc
xchg
lret
xchg
les
test
rclb
xchg
aaa
dec
lock
or
mov
jo
jne
loope
clc
or
daa
lret
les
add
test
jle
pop
lods
mov
fmuls
dec
cmp
push
test
push
adc
aas
repz
add
mov
lock
sbb
flds
das
jmp
xor
aas
push
mov
fimull
push
mov
mov
add
sub
cmpsl
stos
jo
iret
les
out
aam
pop
cs
mov
adcb
adc
cmc
cmpsl
xchg
xchg
int
aad
xchg
mov
stos
cld
push
in
stos
imulb
lret
addr16
and
xchg
sbb
in
pushf
std
add
dec
cmpsb
jno
mov
add
mov
sbb
xor
push
roll
js
xor
sbb
stos
popa
or
mov
dec
pop
ror
outsb
push
push
adc
lds
ljmp
fisubl
adc
js
cmpsl
xor
ja
jle
pop
inc
lods
mov
push
fcompl
les
mov
pop
dec
add
cmp
dec
and
jmp
mov
jae
imul
arpl
mov
xor
or
dec
loope
ja
inc
xchg
xchg
aaa
pusha
mov
pusha
inc
mov
lahf
ds
dec
mov
jmp
xor
xchg
inc
outsl
icebp
cli
movsb
adc
push
insl
push
inc
pop
xor
sub
test
and
jmp
in
sti
pop
insl
aam
and
stos
lahf
addr16
sbb
push
int3
xchg
das
or
inc
cmp
fwait
add
adc
mov
push
mov
aam
add
push
sbb
sarl
lods
inc
or
jmp
pop
test
jb
sub
into
pop
repnz
pop
mov
xorb
shrb
push
jmp
xor
test
xlat
adc
xor
cmp
into
loopne
mov
insb
adc
das
fwait
not
aaa
dec
mov
push
mov
jo
jnp
add
mov
inc
lret
mov
fists
xchg
leave
lods
push
pop
push
xor
xchg
out
in
lods
cmp
xchg
flds
jnp
inc
cmp
repz
cmc
mov
inc
inc
loope
dec
and
std
push
notb
pop
into
test
dec
push
popa
imul
ljmp
mov
and
cs
in
fs
jecxz
mov
test
mov
pop
mov
mov
ret
mov
xorl
scas
jo
and
rcl
add
fmull
pop
push
lret
push
div
jnp
push
mov
add
mov
sbb
adc
fmuls
rcrl
mov
pop
pop
cs
subb
insl
dec
popf
adc
jp
mov
andl
sarl
lds
or
out
outsb
xor
cmp
push
negl
push
jno
es
scas
fld
cmp
cmp
test
inc
iret
shrb
aad
ja
lcall
pop
lahf
iret
adc
idivl
ss
add
lahf
shl
out
fwait
int
in
jmp
out
push
add
inc
or
ss
in
pop
xor
inc
add
pop
sbb
mov
push
xor
and
or
sti
pushf
xor
and
aas
jnp
xor
xor
jb
mov
loopne
or
jecxz
mov
mov
add
sub
int
xchg
sbb
int
idivl
mov
or
mov
or
fisttpll
mov
enter
xchg
sub
mov
dec
lret
clc
lret
lea
mov
lea
dec
fadd
pop
out
imul
ljmp
push
cmc
mov
out
inc
and
insb
xchg
scas
mov
inc
sub
or
addl
pop
sarl
test
ja
lea
add
es
repnz
xor
sbb
fidivrl
add
fnstcw
inc
mov
sub
sbb
cmp
xchg
test
inc
gs
loopne
mov
clc
push
add
lods
inc
cltd
jnp
push
inc
imull
lret
adc
int
ljmp
stc
icebp
out
aam
adc
mov
jne
outsl
int
pop
mov
lahf
cli
leave
jae
fisttpll
aaa
push
loopne
fcomip
arpl
cmp
dec
icebp
lcall
popa
adc
push
pop
pop
lret
pop
iret
cmp
mov
mov
push
cmp
fimuls
cwtl
mov
int
push
jne
pop
mov
or
cmpsl
in
les
call
imul
loope
leave
xchg
adc
jmp
iret
xor
shrb
std
out
sub
lock
mov
je
insb
jle
push
movsb
in
and
call
ja
aam
movl
mov
pop
and
mov
dec
xor
push
ret
test
in
mov
adc
push
ficomps
cwtl
jno
inc
lock
push
inc
mov
adc
xlat
xchg
push
xor
cmp
stos
dec
es
insl
ds
fwait
dec
movsb
jl
mov
jne
and
cmp
or
movsb
stc
enter
in
iret
sub
stos
cltd
push
xor
lret
mov
lea
jmp
or
and
fstpl
rcr
mov
out
ret
or
stc
js
cmp
inc
das
cld
fcoml
mov
imul
fimull
push
divl
nop
iret
mov
filds
decb
inc
pop
cli
xor
popf
imul
lahf
mov
sbb
and
stos
xor
test
pop
lock
push
adcb
test
pop
mov
and
xor
adc
test
jnp
xchg
mov
std
add
cmp
loop
adc
push
aas
les
aad
cmp
xor
lret
sub
cld
sub
push
pop
lret
or
ss
push
mov
and
jge
sub
jne
mov
add
push
stos
aad
mov
cmp
jne
jg
mov
sbb
and
push
daa
cmp
fisttps
cwtl
lds
lods
add
frstor
rcrb
scas
mov
das
xor
ja
lahf
out
lret
loope
sbb
cmp
adc
call
xchg
mov
sarl
ret
and
test
mov
sti
imul
xor
adc
cli
sti
mov
in
and
push
outsb
enter
sub
das
aas
add
into
jle
cmp
adc
or
cltd
lock
or
cmp
adc
mov
shll
jo
dec
test
stos
fstpl
mov
int
fidivl
ret
mov
mov
iret
movsb
lods
in
mov
mov
mov
ret
hlt
dec
int3
inc
push
int
xchg
sbb
mov
jmp
cs
mov
xor
sub
out
sti
pop
cmp
sub
aad
jnp
in
lahf
clc
add
lods
repnz
cwtl
push
lea
ret
outsl
popf
rcl
mov
mov
xchg
int
and
dec
sbb
mov
out
fiaddl
mov
dec
xchg
imul
add
mov
sub
xlat
punpckhwd
adc
test
or
inc
pop
jno
lahf
jno
mov
out
xchg
mov
cmp
jo
sbb
movsb
aas
xlat
push
pop
adc
push
and
mov
daa
mov
xor
or
push
push
call
ljmp
pop
loop
mov
inc
test
shr
dec
enter
and
and
insb
insb
inc
add
xor
sub
xchg
orb
xchg
push
das
in
hlt
adc
pop
push
xchg
jle
pop
adc
stos
xlat
stos
jg
out
movsb
arpl
shr
jp
pushf
sbb
xor
iret
or
xor
out
lret
dec
cmp
dec
sbb
js
jg
mov
mov
jmp
daa
sbb
subb
pop
push
xor
std
inc
sub
mov
adc
lods
dec
cmp
pop
orl
inc
les
jne
pop
cs
sub
xchg
popa
lret
mov
je
in
or
stos
aad
adc
push
mov
dec
lret
int3
add
mov
fdecstp
mov
test
pop
mov
jae
xchg
leave
xchg
cmp
add
das
dec
fldl
ljmp
sbb
push
icebp
mov
xchg
xor
mov
sbb
sbb
arpl
lret
jp
push
add
sbb
sarl
pushf
out
push
xchg
xchg
sbb
popf
inc
stos
repnz
addr16
jg
cmc
icebp
push
mov
mov
lods
imull
aam
hlt
dec
mov
adc
xor
and
stos
outsl
shll
pop
inc
insl
into
rcrb
pop
jo
cli
sub
xchg
pop
icebp
addr16
adc
sbb
test
movsb
insb
idivb
in
std
popa
jmp
jl
js
insb
ja
in
std
or
pop
xor
in
repz
stos
test
loop
pusha
push
icebp
push
jl
imul
fwait
test
mov
or
jae
jne
frstor
pop
lret
xchg
repz
add
in
xchg
sti
mov
xchg
mov
leave
add
or
not
cmp
subl
lock
push
mov
mov
jmp
mov
aas
jne
fmulp
ja
xchg
lods
lods
repz
into
lahf
xor
sbb
shrb
jmp
adc
pop
pusha
cwtl
and
mov
stos
jo
cmpsb
cmp
xchg
inc
add
pop
cmpsb
jnp
cltd
mov
inc
add
cmp
pop
mov
lods
dec
jmp
fsubs
jmp
and
xchg
cmpsl
inc
orb
int3
xor
nop
scas
adc
or
jnp
sbb
pop
xor
sbb
or
ds
mov
add
cmp
and
pop
lods
inc
mov
dec
or
movsl
cmp
pop
mov
stos
mov
test
dec
stc
dec
rol
in
jmp
int
fwait
loopne
shll
movsl
in
xchg
outsb
scas
mov
and
dec
xor
xor
subl
mov
test
adc
rorb
pop
fildll
lds
mov
mov
cmp
push
and
lret
add
fisttpl
mov
adc
mov
add
sbb
pop
mov
popf
aam
xorl
jo
addr16
adc
jle
xchg
cmpsl
jno
ror
mov
sarb
cwtl
mov
add
fsubs
adc
pusha
pop
push
fadds
movl
ljmp
add
xor
rolb
mulb
push
hlt
cmpsl
xor
pop
inc
mov
cmpsb
add
lods
mov
mov
xor
xor
jne
and
jg
inc
sbb
into
outsl
jae
dec
ffreep
push
loop
outsb
loope
call
frstor
mov
shrd
into
jno
and
pop
xchg
imul
arpl
push
leave
mov
scas
adc
jae
adc
mov
in
pop
fimull
pusha
push
or
call
shlb
mov
cmp
and
inc
icebp
push
jae
popf
cmp
movsl
mov
lock
mov
sbb
push
jle
inc
repz
cld
aad
jle
mov
xor
cmp
in
push
mov
mov
jne
dec
out
dec
mov
jbe
lcall
out
pop
stos
fstp
iret
fisubrl
and
pop
jp
inc
gs
dec
xor
mov
sbb
fmulp
adc
push
pop
adc
mov
xor
dec
sbb
and
jb
mov
pop
in
lret
inc
enter
or
out
mov
sbb
in
repnz
loopne
ret
add
lret
popf
mov
lret
daa
mov
fistpll
fdivr
dec
mov
sub
jbe
call
iret
pusha
add
fildl
jbe
mov
xchg
mov
add
push
mov
sbb
pop
mov
and
adc
jle
stc
jne
fcom
add
ret
in
jo
data16
fldl
push
or
fisttpl
addr16
stc
movsl
lods
fadds
push
lea
daa
or
xchg
cmp
sbb
call
mov
or
jnp
es
fisttpll
add
mov
jl
or
adc
mov
and
and
pop
inc
ljmp
nop
subl
ret
scas
loop
iret
sub
push
test
cmp
xchg
fcoms
inc
movzwl
iret
sub
cmp
pop
jmp
dec
and
stos
stos
into
ss
in
pop
es
pop
hlt
cmp
decl
and
dec
stos
mov
cmpsl
int
xchg
sti
pop
sub
sarb
inc
sahf
dec
mov
push
pop
in
push
or
push
mov
sub
ljmp
mov
aam
loope
xchg
inc
imul
repz
cmp
call
imul
jge
push
push
ss
mov
mov
fwait
lods
pop
sub
mov
jo
push
arpl
fsubrl
pop
and
inc
and
push
fs
dec
lcallw
sub
ljmp
mov
mov
sub
xchg
lock
in
pop
ret
bound
pop
fnstsw
sbb
jae
insb
push
ret
popa
push
adc
push
cmc
aad
xchg
cld
into
jmp
insb
mov
fildl
pop
add
ret
add
mov
sub
scas
mov
popf
jl
arpl
mov
mov
test
stos
jb
lcall
enter
jae
pop
fistpll
outsb
mov
enter
stos
add
adc
xchg
push
scas
and
inc
loopne
mov
cld
push
inc
sarl
xor
std
notb
cmpb
adc
jns
sbb
jno
int
mov
pop
adc
enter
mov
xchg
ds
xchg
pop
roll
xor
xchg
into
sbb
ret
mulb
fcom
test
rolb
xchg
adcb
push
mov
enter
jnp
fwait
or
lcall
test
je
cmp
adc
xchg
mov
mov
adc
xor
dec
test
adc
pusha
iret
sbb
pop
fsubl
jecxz
add
fs
pop
adc
or
xor
or
add
add
popf
int
xchg
or
out
aam
cltd
mov
jae
lahf
aaa
rclb
xchg
into
fwait
in
xlat
fmuls
scas
cmp
xchg
mov
add
leave
dec
std
mov
inc
cmp
jnp
and
cwtl
stc
mov
push
aaa
and
sub
xor
xlat
dec
arpl
sub
sbb
jae
lods
push
les
xchg
add
and
pop
mov
mov
xor
fdivrp
sub
inc
mov
jmp
icebp
cmpsl
push
push
fadds
jns
xchg
sbb
cmp
in
lret
lcall
fisttpll
andb
lret
shr
aam
sub
lds
lahf
cmp
pop
rcl
shl
jb
sbb
jbe
out
mov
pop
cli
les
lock
push
mov
mov
cmpsb
lea
test
int3
arpl
xchg
repz
cs
lcall
jl
stos
add
popa
shlb
loopne
push
ja
add
mov
jmp
mov
sbbl
adc
jmp
cmpsl
test
imul
cli
xor
test
cmpsb
mov
or
jl
int3
inc
addr16
fsubs
jnp
dec
add
gs
lret
sub
shl
movsb
shrb
pop
add
mov
es
inc
add
push
and
aas
insb
dec
out
leave
aas
outsl
jne
sub
fdivrs
scas
test
mul
fsubs
push
shld
mov
sub
inc
pop
sbb
pop
cmpsl
insb
xorl
xor
fidivl
pop
mov
xor
jmp
test
xchg
sahf
xchg
ljmp
and
sti
les
push
sbbb
popf
mov
mov
out
mov
aas
pop
in
and
xchg
mov
loope
lods
jae
insl
gs
jne
arpl
or
jb
call
inc
lods
leave
ficompl
imul
jle
lock
int3
mov
stos
add
push
and
mov
dec
loopne
nop
arpl
iret
aas
jae
sbb
jae
pop
cmp
scas
test
xor
fsts
mov
mov
xchg
jo
dec
jb
lds
cmc
push
movsb
out
inc
xor
pop
jbe
ret
cmp
xchg
sbb
adc
xor
outsb
push
fwait
push
cmc
jo
outsl
xchg
mov
ja
insb
xchg
movsb
and
push
out
pop
ds
imul
out
inc
jmp
or
scas
jae
pop
push
mov
mov
daa
into
or
inc
or
adc
push
jns
neg
inc
dec
jg
xchg
popf
and
incl
xor
mov
jbe
hlt
jne
push
adc
outsl
gs
sub
mov
cmp
mov
cwtl
or
sub
jp
sub
push
and
pop
adc
cmp
or
and
sbb
sbb
test
vfmsub231ss
push
fstl
dec
or
mov
cmp
jp
or
addr16
adc
pmulhuw
sbb
ficoml
insl
push
fdivs
pop
add
hlt
les
pusha
cmpsb
push
push
shlb
pusha
hlt
lret
daa
hlt
cwtl
mov
inc
mov
push
xchg
das
ljmp
pop
movsl
sbb
or
inc
inc
lods
cmpsl
iret
jg
ret
ficoms
pop
inc
sbb
inc
jmp
sbb
enter
dec
outsb
insb
popf
lret
add
fdivrl
and
add
mov
sbb
sub
ret
shrb
lret
lea
adc
and
xor
pusha
lea
add
ss
cwtl
call
pop
and
mov
shlb
push
je
lret
xchg
shr
mov
push
dec
hlt
push
jne
aaa
mov
sub
inc
fdivrs
ret
push
inc
lds
mov
jae
adc
insl
dec
push
in
sbbb
mov
mov
ret
stos
cld
call
mov
mov
push
out
insl
dec
dec
and
sbb
fsubs
mov
jae
sbb
mov
jg
sub
mov
mov
cmp
mov
pop
in
ja
mov
push
sub
imul
hlt
lea
lret
mov
ficoml
filds
xchg
mov
mov
jne
jle
sbb
xor
dec
jge
ja
pop
sub
add
or
movsl
jbe
or
std
sbb
inc
jo
or
adc
sahf
add
adc
mov
jl
out
cli
push
aaa
fidivrl
cmc
mov
negl
aas
cmc
inc
jnp
or
cwtl
dec
outsl
mov
jnp
mov
pop
mov
add
push
in
test
sub
xchg
cmp
add
loop
dec
cwtl
into
es
xor
inc
ficomps
out
addl
imul
popf
sarl
xchg
fisttps
dec
test
sub
cmp
stos
outsl
and
outsb
xor
sub
fstpl
in
sti
mov
fcmovnu
std
xchg
rcrb
push
jae
pop
jbe
xchg
pop
cld
lock
xor
jmp
adc
jmp
xchg
enter
popf
sub
inc
mov
mov
inc
pop
inc
xlat
push
ret
cmp
movsb
push
sahf
insb
imul
lahf
jb
stc
inc
pushf
mov
dec
pop
jl
cltd
call
dec
mov
lcall
divb
dec
dec
dec
idiv
lods
jb
scas
xor
adc
dec
adc
mov
jge
ja
cs
scas
pop
ret
mov
xor
stos
fstl
xchg
cmp
pop
add
pop
mov
pop
sbb
dec
icebp
imul
mov
aas
ljmp
cli
jns
rcrb
adc
gs
frstor
add
adc
shr
sub
xchg
insb
je
push
pop
lock
in
mov
clc
cmp
sti
fisubl
stos
mov
rclb
les
lret
dec
xor
lret
orl
ret
mov
or
jne
cmpsb
inc
test
mov
mov
aam
ret
in
jo
fs
adc
in
repnz
outsb
pop
and
lret
and
nop
mov
jl
add
nop
mov
jl
or
xchg
inc
ret
test
cmpsl
push
mov
mov
push
and
xor
push
frstor
sbb
add
dec
lret
imul
xchg
insl
pop
aam
and
enter
ljmp
outsl
sbb
adc
dec
mov
mov
mov
fsubs
pushf
xchg
or
mov
pop
iret
sub
popf
call
ss
lods
test
xchg
jmp
cwtl
cld
or
fs
aaa
sbb
je
aad
rcrb
lds
or
mov
mov
inc
jp
jo
pop
in
and
adc
js
stos
mov
dec
mov
pushf
mov
mov
orl
lret
loop
lret
cmp
jp
dec
push
inc
movsb
inc
jle
ds
adc
jmp
xchg
aaa
dec
adc
add
adc
ret
lret
push
jae
lret
xchg
mov
test
scas
fnstsw
sub
mov
popf
popa
not
add
adc
loopne
mov
in
push
jecxz
sahf
inc
into
icebp
outsb
mov
mov
dec
sbb
stos
insl
mov
data16
sbb
mov
addr16
fadds
add
mov
push
rorb
xchg
retw
shl
jmp
mov
sti
cmp
mov
sbb
loope
test
mov
rolb
mov
testb
ja
imul
inc
sahf
and
mov
leave
mov
movsb
popf
fildl
sbb
mov
mov
jnp
add
scas
and
mov
stos
adc
mov
add
hlt
push
mov
insb
lds
in
repz
cld
cltd
je
int3
inc
jne
jnp
cltd
jecxz
fldt
adc
pop
aas
pop
insl
dec
test
adc
xor
push
fisttpl
mov
sbb
fimuls
cmpsl
nop
mov
psraw
adc
inc
xchg
jmp
popa
dec
mov
sub
nop
mov
sub
jb
js
xchg
mov
aaa
xor
mov
xchg
daa
mov
cmp
into
dec
mov
cmpsb
jo
iret
inc
pushf
jge
cmpsl
fistpl
lahf
xor
xlat
jne
negl
leave
mov
bound
mov
pop
outsl
test
movsb
xor
das
lds
or
pop
adc
mov
fwait
movsl
std
hlt
ret
jbe
cs
mov
pop
icebp
inc
mov
insl
xchg
daa
or
jb
xchg
sbb
sbb
mov
xor
lret
dec
std
sub
xchg
push
xchg
lret
inc
rorb
add
push
jmp
jo
cmp
mov
pop
cmp
lret
lock
cmp
mov
cmpsb
inc
bound
xchg
mov
jbe
dec
mov
xor
inc
mov
or
insb
xor
xor
test
inc
cmp
xchg
mov
pop
in
lret
stc
iret
jecxz
pop
into
mov
int
and
jns
inc
imul
cmp
mov
jecxz
dec
and
out
mov
ret
gs
xor
sub
jbe
ds
loopne
cld
mov
adc
ret
mov
leave
leave
cltd
popl
fildl
outsl
stos
mov
repz
int
ret
sbb
lahf
pop
and
orl
inc
sar
mov
jl
in
jmp
jnp
lock
insb
jnp
jp
test
and
mov
jge
add
sarb
das
mov
sub
or
mov
add
add
nop
daa
dec
aaa
into
mov
sbb
lsl
popf
stos
and
lods
fisttpll
movsb
jbe
adc
pop
mov
rcll
and
es
fcom
fnsave
das
fsubs
loop
lds
pop
insb
iret
lds
jae
add
fdivl
outsl
xorl
mov
jmp
ds
jl
xchg
icebp
cmp
cwtl
aas
test
in
es
pop
xor
orb
enter
inc
rcll
pop
push
jae
mov
mov
das
bound
clc
gs
or
lea
push
int3
push
xchg
fwait
cld
cmp
fnstenv
ficoml
xchg
fs
mov
push
push
cmp
arpl
jmp
cwtl
scas
loop
cmpsl
cmp
inc
test
xor
repnz
stos
fucom
addl
sub
in
and
dec
dec
cltd
lret
hlt
mov
sbb
loopne
lret
data16
sbb
cmp
mov
xchg
mov
movsl
in
pop
push
cs
adcb
sub
nop
sbb
mov
inc
xor
or
mov
cwtl
dec
imul
or
xlat
aas
xor
xor
push
loopne
jae
cmp
sbb
pop
add
jl
in
dec
push
mov
cwtl
rolb
lods
jnp
and
jbe,pt
mul
gs
cmp
push
stos
nop
ja
jbe
add
add
pop
sbb
pusha
mov
push
xchg
icebp
mov
mov
int
or
sahf
and
jo
faddl
cmpsb
pusha
mov
xor
mov
pop
imulb
xor
jae
jmp
and
sbb
sbb
jnp
dec
add
inc
clc
lret
aam
or
loopne
adc
dec
pop
shl
test
out
jbe
andl
hlt
mov
jno
scas
nop
and
xchg
cmp
adc
add
fisubl
mov
jecxz
shlb
loope
test
hlt
outsl
pop
int3
pop
lahf
insb
pop
ss
mov
pop
pop
popa
loope
adc
mov
cmp
ret
sub
stos
jmp
fcoml
int3
and
adc
adc
daa
sahf
fistps
mov
pop
outsl
jne
sub
mov
mov
pop
cmpsb
lea
call
or
int3
dec
std
push
xlat
xchg
mov
aad
int3
mov
cmp
out
xor
adc
mov
lea
in
ret
int3
imul
xor
and
addr16
pop
sub
hlt
idivl
repnz
cli
jns
sbb
dec
out
pop
andb
imul
xchg
add
jg
lock
loopne
lea
push
mov
subl
mov
sbb
into
out
icebp
insl
jecxz
loope
cmpsl
aad
out
lock
cmpsl
lods
xlat
push
cmp
ja
xor
push
mov
or
dec
arpl
mov
sub
cmp
cli
lret
or
orl
int3
daa
lret
dec
dec
mov
aas
inc
cmp
jne
imul
icebp
int3
push
popa
lcall
lret
imul
jnp
imul
sub
test
add
out
in
jo
pop
jge
mov
cmp
jno
stc
lock
and
push
fwait
int3
idivl
jmp
jae
or
mov
adc
fmulp
sub
jns
push
jne
mov
cmp
jecxz
and
in
and
aad
push
inc
jl
add
mov
xor
cmp
adc
repnz
fsubrs
sbb
fsubs
add
sub
mov
adc
add
hlt
push
loop
xchg
out
in
xchg
ret
xor
fwait
addl
fwait
pop
lods
ja
xchg
pop
mov
stos
xor
call
icebp
cmp
sub
lret
push
in
fwait
cmp
fbld
jle
fxch
lret
or
shll
jns
push
test
scas
in
out
lea
mov
xchg
ror
aam
addl
xchg
sub
xlat
sbb
add
jne
test
int
cmp
cmp
add
or
roll
cli
faddl
adc
xchg
or
fmul
jne
gs
out
cmp
repnz
int3
inc
jp
outsb
cmp
lock
adc
into
lret
sbb
push
mov
fisttpl
ret
cmp
aas
adc
jecxz
xchg
shlb
in
push
push
cltd
xlat
push
fmulp
mov
dec
push
stos
int3
mov
icebp
inc
mov
jae
push
int3
xor
call
dec
push
inc
mov
mov
add
sub
daa
push
test
xor
mov
in
int
mov
push
jnp
loop
push
jmp
xchg
in
repnz
ss
sub
push
push
mov
popa
lds
cmc
fnstsw
jle
test
xchg
fnsave
cmpsb
xchg
pop
push
out
jo
test
or
xor
push
mov
pop
mov
cmp
pop
or
pop
lret
jne
sub
jbe
adc
mov
call
cld
push
pop
cmpsb
sub
hlt
rorl
inc
and
outsl
shrb
add
daa
adc
adc
insb
push
mov
push
lock
out
outsb
loopne
stos
jo
inc
push
or
mov
lods
enter
scas
into
leave
fists
je
sbb
jl
jne
fs
mov
je
push
mov
out
sti
xchg
push
mov
fmull
xor
mov
lret
loopne
adc
pusha
sub
sbb
scas
mov
je
sub
mov
into
inc
jge
js
int
xorl
xchg
add
xchg
xchg
in
cmp
xor
scas
cwtl
std
add
jne
cmp
notl
les
arpl
out
sub
push
pusha
inc
test
push
mov
fsubs
and
in
jb
dec
mov
fistps
decb
rorb
lret
icebp
icebp
push
mov
js
dec
movsl
xor
inc
jmp
ss
ljmp
sbb
out
mov
cmp
imul
repz
mov
fsubs
ds
mov
gs
cmp
dec
inc
cs
mov
rorl
jecxz
sbb
and
test
and
cmp
rcrb
inc
jne
jb
push
push
movsb
imul
or
jno
test
in
pop
inc
adc
loop
xor
xchg
cltd
inc
aad
test
adc
jno
je
cli
pop
and
imul
sub
xor
push
xchg
sub
dec
mov
cmp
cwtl
cmovg
mov
out
or
in
sahf
push
loopne
and
rcl
mov
pop
or
mov
push
cmpsb
dec
mov
hlt
popa
sub
and
dec
adc
daa
cmc
dec
das
pop
subb
mov
lcall
addl
movsb
out
scas
shlb
mov
jg
call
orl
ss
xchg
lret
inc
jecxz
les
mov
xchg
bound
xchg
test
subb
test
mov
dec
inc
data16
aaa
fstps
jecxz
fbstp
stos
or
cmc
or
sub
dec
jge
pop
xchg
lock
call
repnz
in
jae
pop
sahf
daa
jae
scas
jns
shlb
mov
shr
test
std
sbb
xchg
popa
movsb
leave
jg
decl
fdivl
xor
mov
mov
jmp
mov
lret
mov
cli
mov
add
movsb
inc
std
jmp
adc
inc
in
push
push
adc
scas
xchg
negl
sbb
sbb
cmc
pusha
inc
xchg
cmp
insl
xorl
xor
push
push
insb
xchg
movsl
rorl
pushf
in
jbe
xchg
xor
jbe
imul
mov
jb
xchg
push
lret
sbb
adc
mov
out
add
popa
je
lret
xor
or
mov
rcrb
cli
cmpsl
scas
mov
mov
jge
add
mov
adc
sti
inc
rolb
cmp
test
cltd
fcmove
pop
aam
bound
adc
lret
cwtl
jl
push
mov
int3
dec
xor
jno
adc
loop
addr16
std
outsl
dec
popa
inc
xor
into
sti
jg
ds
xor
mov
repz
inc
pcmpgtw
and
pop
imul
out
jmp
inc
xchg
fdiv
adc
int
lds
je
daa
movsb
aaa
iret
dec
mov
jmp
xchg
pusha
lods
fsubs
clc
push
shl
daa
jmp
subps
hlt
scas
push
mov
inc
sti
iret
pop
mov
ds
inc
cltd
push
mov
jmp
bound
ror
push
nop
push
pop
jbe
rorb
xor
call
loop
xchg
pushf
leave
or
lds
in
imul
cmp
push
pop
gs
cmp
jae
or
xchg
jle
cmp
dec
xchg
jge
mov
dec
std
jl
shll
jbe
in
jnp
jmp
or
jns
hlt
test
aaa
xchg
jnp
pop
push
leave
stos
fldl
xchg
inc
sub
dec
in
cs
hlt
push
jecxz
fdivp
sbb
inc
xchg
lret
xchg
aam
mov
mov
in
cmp
lea
dec
cmpsb
shlb
fstp
mov
leave
sub
mov
jnp
jmp
xchg
into
jo
cmp
outsl
push
out
daa
ds
imul
push
gs
jae
xor
xor
or
hlt
and
inc
pop
cmpsl
cli
mov
dec
and
mov
xchg
pop
vorpd
or
sbb
sbb
xchg
std
pop
inc
fs
push
arpl
add
dec
sbb
pop
sub
popl
movsl
sub
jl
in
sub
sbb
test
int3
adc
cmp
or
rclb
rcrl
push
repz
inc
jp
cmp
push
shr
int
out
jne
jo
fisttpll
and
jne
out
repnz
fisubrs
cmpsb
out
mov
pop
mov
roll
mov
outsl
mov
in
sbb
lahf
mov
inc
mov
iret
stos
mov
add
and
pop
orl
orb
lahf
jbe
pop
dec
xor
mov
cmp
fwait
dec
push
test
data16
popa
xor
jbe
inc
pop
mov
pop
js
clc
xor
xchg
and
adc
inc
jo
adc
or
pushf
mov
sbb
data16
pop
or
outsb
jbe
ljmp
inc
push
lods
xchg
add
xor
mov
in
xchg
adc
in
jg
cld
cmp
cmp
icebp
int3
decb
xor
pandn
je
mov
out
xchg
xchg
mov
loop
mov
pop
repnz
shl
ja
adc
add
cwtl
lret
into
cs
pop
sbb
pop
pushf
fimuls
or
cld
sbb
in
dec
adc
inc
mov
sbb
in
js
lds
xor
xchg
loop
andl
jmp
mov
jbe
lods
shll
sbb
out
test
cmp
cmp
lret
call
mov
mov
push
gs
and
fcmovb
inc
pop
mov
jne
nop
add
test
or
push
jge
aas
lods
xor
pop
mov
adc
mov
add
pop
hlt
xchg
adc
jnp
pushf
jo
fwait
dec
pop
hlt
xchg
adc
jnp
xorb
hlt
mov
jl
lods
add
adc
lods
stos
push
cmpsb
jns
cmp
cld
clc
test
mov
xor
cmp
fsts
xchg
int
fwait
and
aad
pop
sbbl
sbb
cmp
pop
jl
mov
sub
push
mov
divb
hlt
or
in
popa
fcmovnb
leave
mov
push
mov
lret
subl
loop
xchg
pop
ror
fidivrs
das
movsb
mov
psubusb
sub
jle
mov
lods
inc
lahf
xor
pop
leave
inc
and
shrb
xchg
sub
sahf
push
pop
xchg
ja
negb
lea
stos
notb
das
cmp
xchg
ficompl
out
xchg
mov
jmp
sbb
dec
jmp
pop
xchg
inc
popf
call
mov
imul
xchg
mov
lret
loopne
sub
std
scas
push
dec
adc
mov
leave
jb
mov
fldcw
pop
test
fldenv
cwtl
cmp
mov
jle
jb
inc
mov
sti
gs
movsb
inc
mov
mov
ss
data16
dec
mov
mov
push
lock
in
dec
cmpb
adc
jge
lds
cli
stos
xchg
inc
imul
mov
imul
xor
dec
cmp
aam
cmp
int
clc
fists
das
pop
les
pushf
mov
mov
dec
int
xor
pop
xchg
xchg
leave
loopne
jne
push
imul
sahf
icebp
inc
jbe
pop
add
fcoms
das
das
hlt
jecxz
fistpll
out
scas
jo
sub
imul
mov
xor
int
scas
ret
fadd
das
enter
xor
rcll
cmpsl
jecxz
stc
test
imul
mull
xor
cmp
add
shr
daa
or
jge
inc
dec
push
subl
jne
fisttpl
dec
orb
sbb
inc
lahf
and
cmpsb
sub
and
adc
cwtl
pop
bound
xchg
int3
idiv
inc
jle
or
fildl
xlat
pop
cmp
test
fistpll
dec
loopne
xor
lods
jle
dec
jp
push
pusha
mov
sbb
mov
into
leave
inc
filds
lds
jmp
cmp
shlb
in
fcmovu
and
xlat
daa
jnp
add
mov
insl
push
inc
pop
xor
test
fistl
dec
js
in
mov
nop
pushf
stos
dec
inc
lods
mov
xlat
or
les
jb
jl
test
rcll
fmulp
fiaddl
aas
shll
push
es
add
pop
jbe
push
fsubl
leave
mov
push
xchg
loopne
jne
dec
pmaxub
mov
iret
fldl
vshufpd
cmp
std
fdivrl
sbb
adc
popf
adc
lds
lret
sti
lods
fdiv
xchg
pop
cmp
push
xor
and
inc
fiaddl
in
arpl
imul
mov
rcrl
andb
pop
cmpsb
lret
lods
sub
pop
pop
sub
pop
cli
jne
sub
dec
call
xchg
push
pop
shr
add
xor
cs
fsts
fistpll
int
roll
xor
dec
push
and
arpl
or
mov
add
in
jp
sub
insl
push
sbb
adc
push
jmp
mov
in
test
ret
jnp
cltd
addr16
lds
fsub
jnp
push
cli
inc
xor
ret
dec
mov
fnsave
mov
lea
std
in
ds
or
int
jl
insl
push
inc
repz
mov
pop
or
adc
cmpsl
nop
dec
das
psraw
leave
inc
inc
dec
mov
jae
inc
movsl
dec
mov
lock
sarl
xor
xchg
repz
mov
test
or
fadds
mov
sarl
add
in
aam
aad
pop
daa
call
fmul
xor
leave
sbb
jl
dec
push
adc
bound
fwait
dec
fwait
out
sub
sbb
mov
mov
dec
pop
movsb
cmp
mov
mov
xchg
into
pop
xchg
pop
cmp
ffreep
lds
out
mov
fbld
pop
mov
mov
ja
jge
mov
sarb
xchg
dec
jb
outsl
mov
and
xor
test
nop
xchg
clc
nop
xor
test
add
js
or
dec
lds
inc
daa
lods
mov
faddl
adc
push
mov
pop
lds
mov
addr16
sbb
scas
pop
xor
jb
out
pushl
into
loopne
push
popa
cmpl
mov
jae
insb
push
adc
add
xchg
sub
in
jl
cmc
test
sbb
mov
inc
mov
dec
inc
repnz
inc
dec
add
mov
jl
lods
das
or
idivl
sub
sub
jbe
sti
jne
xor
sbb
int3
inc
jl
add
ficompl
pop
in
insb
xchg
icebp
loopne
mov
xchg
and
mov
in
cwtl
push
mov
icebp
loopne
ds
das
sbb
adc
jmp
push
or
sub
repz
je
cmp
cwtl
jmp
shll
lcall
je
mov
cmp
test
pop
mov
or
pop
mov
outsl
push
sti
lret
jb
rorl
jne
cmp
mov
pop
mov
movsb
cld
sarl
subl
jl
dec
mov
push
in
push
jo
lods
or
or
icebp
aas
sub
test
cmp
push
pop
sbb
in
jp
adc
jne
fwait
xchg
push
adc
aas
sbb
add
ljmp
xor
jno
dec
jnp
scas
and
mov
stos
loope
pop
out
shlb
jae
fsubr
fs
hlt
or
lods
pop
adcl
pop
imul
push
sub
or
dec
or
jmp
fistpll
sbb
mov
sub
inc
add
mov
jbe
xor
fnstsw
imul
dec
sub
les
sbb
mov
adc
mov
pop
imul
fsubl
icebp
dec
mov
sahf
insl
je
sbb
push
mov
and
and
push
mov
mov
xor
insb
push
data16
ret
out
xchg
mov
jmp
xlat
push
mov
fwait
mov
dec
aas
out
cmpsb
sarb
or
xorl
sbb
adc
testl
notl
popa
cmpb
or
shll
mov
mov
mov
ficoms
pslld
and
adc
jp
orl
sbb
into
test
dec
lahf
call
cmc
push
push
lods
xlat
fisubs
inc
add
out
dec
jo
andl
xchg
dec
cltd
popa
aas
add
lahf
cwtl
and
hlt
jo
sbb
adc
iret
mov
inc
cmp
loopne
jmp
ret
inc
scas
sahf
push
aam
icebp
and
pushf
mov
sbb
mov
subl
mulb
mov
adc
cmp
out
mov
sbb
ja
and
testl
mov
jmp
data16
xchg
movsb
pop
push
out
jecxz
dec
adc
adc
addr16
xchg
inc
lock
lea
ret
sbb
xchg
mov
mov
sub
adc
test
mov
dec
and
data16
dec
adc
imul
xchg
arpl
xchg
cwtl
sub
ds
xor
add
fimuls
or
and
lahf
test
pop
xor
repnz
popf
sbb
test
add
mov
mov
dec
dec
scas
filds
mov
in
sub
xor
ds
mov
mov
sub
push
push
and
push
mov
out
xchg
push
pop
or
inc
adc
xchg
pcmpgtw
out
arpl
sti
push
mov
lret
xor
xor
inc
mov
mov
inc
cmp
cmp
jp
and
lds
outsb
add
adc
mov
adc
in
enter
call
loope
popa
push
cwtl
sbb
and
inc
loope
mov
mov
nop
popa
dec
cwtl
sbb
dec
loope
mov
jne
cltd
es
iret
fwait
adc
sub
test
push
imul
xor
es
jnp
jns,pt
cmpsl
inc
dec
lahf
mov
dec
and
fidivs
inc
btc
cwtl
pop
fimuls
mov
stos
xor
enter
fcompl
cmpsb
outsl
imul
rcr
sbb
cmp
lea
jge
daa
lods
out
test
xlat
and
mov
fs
stos
scas
mov
xor
imul
bound
sub
push
cltd
leave
jmp
sbb
xchg
or
jmp
and
into
sub
xchg
sbb
ficomps
pop
xor
push
sbb
lea
dec
adc
mov
pop
or
xchg
in
pop
push
push
xchg
arpl
cld
ss
mov
ret
cmp
mov
push
cmpsl
xor
sbb
shr
pop
mov
fldt
inc
dec
shrl
add
mov
sbb
aaa
xor
clc
sbb
lea
sbb
xchg
xchg
and
xchg
xor
jmp
test
fwait
nop
cltd
lret
pop
cmp
dec
ret
nop
sbb
mov
clc
push
pusha
js
insl
cs
sub
mov
sub
insb
pop
dec
test
movsb
xchg
pop
xor
jp
add
jge
cmp
and
rcr
mov
jae
jmp
sti
push
cmp
repnz
or
xchg
pop
xor
les
in
jbe
xor
cmpsb
pop
mov
inc
push
jne
xchg
pop
int
add
xchg
add
push
sub
sbb
mov
dec
adc
push
mov
adc
mov
mov
pop
in
jo
sbb
jl
loop
pop
push
adc
mov
in
sub
sbb
es
xchg
rcll
mov
cmpsl
test
int
out
leave
pop
add
pop
adc
int
lods
cwtl
inc
sub
xchg
and
fidivs
xor
inc
ret
nop
xor
call
dec
mov
or
fadds
hlt
rcll
fisttps
outsl
xchg
fsubrs
xchg
xlat
mov
push
sbb
adc
sub
popf
sbb
lds
dec
insb
iret
add
cmpsl
je
shr
cmp
hlt
ror
push
cmpsb
and
adc
out
lahf
xchg
fnstcw
jmp
mov
inc
aaa
out
nop
jb
xor
rcr
cmp
adc
dec
sub
pop
adcb
jb
sti
loop
or
inc
push
dec
movb
lods
add
lcall
pop
sbb
ficompl
cmp
cld
sub
cld
cmp
mov
iret
movb
mov
ror
in
xchg
mov
xchg
nop
jo
jle
lret
test
decb
pop
lret
fistl
jns
scas
ds
out
sub
test
inc
out
gs
ss
lret
pop
mov
pop
xor
inc
int3
adc
icebp
dec
stos
jle
cmpsb
popf
mov
testl
xchg
int
adc
lret
leave
filds
cmpl
add
imul
adc
pop
pusha
imul
xadd
xor
lea
hlt
push
fbstp
mov
push
inc
iret
aad
or
mov
fists
fisttpl
fildl
aas
das
mov
add
dec
icebp
mov
jns
out
iret
mov
mov
cwtl
aam
sbb
adc
cmp
jnp
mov
inc
xor
jo
inc
push
sbb
cltd
insl
pusha
sbb
jnp
push
dec
adc
adc
push
paddsb
inc
jle
rorb
xchg
popa
push
pop
pop
adc
testb
jae
jb
add
pop
xchg
mov
push
pop
sarb
mov
xor
scas
mov
scas
mov
push
jno
jnp
lret
push
clc
ljmp
fsubs
cltd
cmc
dec
rcrb
jmp
or
fimuls
cmp
call
sbb
out
push
ss
mov
lea
je
stos
aas
or
cli
push
outsl
sbb
fcomip
aas
repnz
vmulps
insl
ds
pop
xor
and
fiadds
loopne
inc
sub
out
xchg
sbb
clc
mov
push
xor
movsb
cmpsl
ret
xor
pop
push
add
mov
mov
adc
pop
jle
xlat
push
mov
mov
sahf
test
dec
popa
cmp
inc
add
or
and
into
loopne
call
sbb
lea
lock
dec
cmpsl
push
clc
seta
stc
dec
mov
dec
push
dec
mov
ds
rclb
jae
shrl
mov
adc
mov
addl
xchg
xchg
mov
ret
mov
add
cmp
add
push
mov
add
xor
hlt
mov
hlt
xor
sbb
in
xchg
scas
jnp
das
add
push
jne
cmp
insl
push
outsb
jnp
and
mov
aad
in
cmp
push
push
out
xchg
in
jo
adc
xor
jecxz
outsl
loop
add
es
adc
lret
lods
sub
test
aaa
jmp
jns
std
pop
or
mov
adcl
jne
in
int
cld
pop
xchg
fsubrp
pop
dec
mov
lock
or
inc
xchg
insb
ret
jo
sarb
insl
xchg
ljmp
int3
push
fsubl
addr16
sub
pop
out
pushf
adc
cwtl
cmp
loop
js
mov
out
cmpsb
adc
rcl
sbb
adc
jecxz
fwait
mov
and
xor
pop
or
fwait
and
lock
push
rcrb
aas
xor
leave
cmpl
insb
inc
lock
sub
add
mov
sub
loope
jae
mov
mov
jmp
jbe
xchg
xor
xor
mov
shr
in
adc
lds
mov
mov
dec
fidivrl
xchg
out
xlat
out
je
sub
xor
repnz
or
jo
push
lret
shrb
aaa
inc
sub
xor
mov
add
push
xor
and
mov
cltd
mov
add
addl
mov
xchg
push
mov
mov
pop
or
add
xchg
subb
fcomp
call
xor
dec
sub
sub
xor
dec
into
ret
insb
outsb
and
int3
jecxz
mov
push
or
stos
shll
jne
test
dec
xchg
or
fcoms
push
jo
dec
push
inc
in
sbb
sbb
sub
lcall
jmp
sbb
sbb
pusha
cmc
outsl
pusha
mov
test
incb
or
sbb
fists
rol
or
shll
xchg
daa
dec
add
and
pop
sbb
inc
sbb
addr16
int
or
idiv
add
movsl
outsl
dec
sbb
mov
outsb
jl
lods
mov
dec
lods
and
cmp
loopne
cmp
sbb
push
aad
cmpsl
dec
jecxz
imull
push
das
dec
push
mov
jb
inc
lods
sub
mov
iret
adc
and
cltd
xchg
sub
fwait
xor
push
scas
inc
sbb
scas
sti
pop
jns
pop
dec
sub
inc
adc
adc
cmp
mov
jge
mov
psubsb
test
das
outsl
push
arpl
cs
mov
pop
cld
das
roll
ds
ljmp
dec
inc
lds
addr16
bound
in
repnz
cmp
leave
xorb
dec
add
bound
stos
into
stos
leave
stos
jne
sub
popf
sub
fnstenv
jl
loopne
and
cmp
mov
shlb
mov
cmpsb
das
xlat
arpl
push
sub
mov
push
test
or
pop
gs
mov
jmp
shl
fdivr
xchg
push
sahf
push
sub
jg
cmc
push
xchg
pop
insb
sbb
and
jb
fdivl
lods
shr
mov
int3
push
outsl
push
imul
pop
xchg
fldl
fucomi
repnz
mov
mov
pop
pusha
dec
fstpl
jl
sbb
adc
outsb
fmulp
sub
inc
clc
cld
stos
inc
pushf
jl
and
fiaddl
test
mov
cmp
sarl
jl
repz
ficoms
push
fsubl
repnz
addr16
in
xor
jns
ljmp
ficoml
fdiv
mov
inc
cmp
jbe
push
ss
lret
int
mov
sub
jmp
rcl
mov
mov
clc
ret
and
push
and
push
lea
ret
cmpsl
loop
stos
cmc
cwtl
jmp
daa
fnstsw
lds
imul
shlb
inc
xor
fwait
or
shrl
cmp
leave
mov
xor
testb
es
outsb
push
add
fistpll
lret
mov
pop
sti
pop
gs
rclb
xor
shll
stos
pop
xor
stc
loopne
out
gs
jle
mov
jge
mov
leave
push
xchg
sub
stos
inc
cld
rolb
dec
test
movl
in
add
push
idivl
imul
lret
sub
loop
int
fwait
mov
ret
mov
stos
ffree
mov
test
rcrl
cltd
pop
cli
mov
out
mov
filds
push
popf
pop
mov
icebp
popf
and
pop
pop
fmuls
xor
fcmovb
xor
or
inc
test
pop
sub
mov
into
js
imul
fldlg2
mov
xchg
mov
clc
aad
mov
or
nop
cs
test
pushf
and
dec
bound
pushf
sbb
or
push
pop
test
popf
fmull
int3
xchg
mov
nop
dec
mov
push
movb
sbb
xchg
jmp
jnp
imul
jo
adc
gs
aam
nop
in
jo
push
jge
hlt
jmp
adc
negl
add
hlt
or
sarb
mov
gs
lcall
pop
xchg
in
aam
js
test
lds
xor
push
mov
stos
int
xor
xor
dec
mov
insl
das
data16
lahf
lret
cs
out
mov
in
pusha
mov
mov
jl
stos
and
imulb
icebp
push
sub
mov
les
dec
jge
pop
xchg
mov
sti
fmuls
mov
jbe
mov
lahf
jno
add
sbb
ds
mov
mov
lret
call
xchg
adc
mov
pop
inc
out
shlb
sti
mov
scas
gs
xor
sbb
and
shlb
adc
test
push
fadd
push
cmp
mov
sbb
jle
or
aaa
in
or
scas
add
xchg
mov
ret
push
or
sahf
in
xchg
inc
push
fwait
or
mov
xor
push
and
fs
mov
shr
rol
pop
and
std
push
js
jno
mov
test
aas
mov
ljmp
mov
and
test
arpl
aaa
xchg
dec
call
inc
dec
mov
movsb
and
jmp
cs
mov
and
and
hlt
ja
insb
lods
adc
xchg
sub
sbb
or
xor
cli
push
and
imul
call
pop
jne
fsubrl
hlt
fisubs
into
aad
mov
mov
xchg
repz
std
xchg
shlb
imul
sbb
push
dec
mov
cmp
cwtl
pop
cmpsb
and
insb
and
in
sub
adc
in
jge
call
subl
xchg
cld
push
pop
in
jnp
daa
lds
ficompl
xchg
xor
imul
and
rol
test
test
add
push
mov
lahf
mov
pause
mov
jns
lock
or
out
mov
push
mov
and
subb
push
subl
push
xor
xor
cmp
lock
int
xchg
xchg
aaa
nop
pop
pusha
mov
and
xchg
rolb
inc
push
jae
repnz
ljmp
fwait
inc
ret
dec
cmp
call
jns
repz
insl
mov
jnp
mov
cs
mov
pop
jbe
into
ss
mov
addr16
sbb
idiv
fisubs
adcl
sbb
imul
mov
inc
insl
push
iret
jo
inc
std
aaa
hlt
jge
pop
fcoml
fwait
mov
ret
mull
sub
push
fsubrs
rclb
out
mov
lahf
int3
fxch
or
mov
pop
mov
pop
adc
ljmp
frstor
mov
insl
mov
call
rcl
loope
pop
mov
psrlq
pop
add
mov
xchg
push
test
mov
push
cld
aam
fwait
in
mov
jecxz
pop
insb
jp
data16
cs
bound
mov
dec
mov
repz
pop
repnz
test
scas
aaa
fcomps
xchg
in
dec
icebp
dec
pop
test
sbb
bound
ss
jo
adc
mov
nop
popa
xchg
cltd
flds
sub
cltd
ror
xor
rclb
rcll
les
jb
dec
mov
xchg
jno
sub
xchg
fwait
lock
xor
js
ds
fwait
xor
xor
sbb
dec
pusha
scas
jne
cmp
jbe
data16
sub
jno
pop
sub
in
movsl
into
es
ret
cmpsb
jns
fdiv
xchg
and
shlb
jne
xor
cmp
outsl
leave
daa
pop
pusha
iret
dec
mov
adc
rolb
xchg
cmp
lcall
loop
xchg
cld
pop
subps
adc
sbb
aaa
pusha
iret
das
mov
outsl
dec
adc
popf
jle
xchg
rcrb
loopne
rcrb
sti
pop
jmp
add
andl
in
andb
ret
scas
cs
mov
arpl
xor
btr
cmp
rcr
add
ljmp
sub
jg
pop
xor
sbb
mov
pop
out
sub
mov
aam
aaa
mov
sahf
jmp
add
xchg
xchg
movsl
cmpsl
lods
cltd
dec
cwtl
dec
fs
mov
push
repnz
ss
xor
jp
arpl
movsb
jmp
xchg
loope
add
add
call
xlat
arpl
cltd
addr16
das
cwtl
add
divb
into
cmp
sti
or
xchg
push
mov
xchg
adc
stc
xchg
jne
xchg
mov
dec
sub
test
cmp
imul
pop
pop
jmp
and
sbb
cwtl
and
push
jmp
movsb
in
add
pop
das
mov
mov
sahf
push
hlt
cmp
in
test
out
jo
push
leave
out
jbe
test
repnz
pop
jbe
jl
outsl
mov
jne
jno
adc
lahf
adc
lds
jnp
pop
push
push
mov
lock
orl
inc
jp
cmp
xchg
int3
clc
out
imul
and
mov
jbe
sbb
rclb
mov
fidivs
add
shlb
mov
cmp
arpl
es
jbe
cmp
add
pop
fdivrs
mov
in
mov
loop
lcall
ljmp
aas
pusha
iret
mov
push
leave
jae
pop
xor
pushf
adc
push
mov
push
xchg
inc
fwait
in
cmp
in
or
or
pusha
sub
sti
add
stos
int3
add
xor
jmp
dec
or
dec
adc
and
sbb
cmp
push
pop
dec
fmuls
jg
lods
lods
idiv
cmpsb
movsl
cld
jae
lret
cmp
pop
dec
outsb
fistpll
and
fidivs
arpl
loopne
aaa
adc
ret
sarl
loop
sbb
in
mov
stos
push
jns
imul
test
rcrl
mov
repnz
dec
cli
mov
or
movsb
jp
cli
imul
jnp
jecxz
insl
push
icebp
cltd
and
loope
in
fisubs
push
daa
mov
dec
nop
jecxz
fisubs
mov
and
or
xchg
sub
xchg
mov
loopne
add
sub
ja
inc
test
push
jno
rorb
pop
mov
lret
les
and
dec
xchg
push
sbb
ficompl
jl
push
pop
pop
outsl
mov
aam
nop
jnp
xor
stos
mov
push
rcrb
into
mov
add
scas
adc
pop
mov
fdivrp
cmp
adc
adc
test
rcll
scas
adc
jl
out
fs
in
cwtl
clc
and
flds
xchg
jbe
aam
leave
add
inc
arpl
add
mov
jae
push
or
sahf
and
dec
addr16
lds
movsl
dec
out
out
sarb
scas
adc
mov
movsl
jecxz
ret
dec
roll
fdivrs
and
sub
push
push
lahf
std
out
pop
inc
jle
orb
sbb
jle
sub
sarb
mov
pop
pop
cmp
sub
icebp
inc
xor
push
pop
and
jmp
cmp
inc
or
es
outsl
sbb
rol
push
insl
jl
stos
lods
arpl
outsl
xor
lret
loope
jp
out
push
fnstsw
cwtl
imul
xor
fwait
in
add
jle
jne
scas
std
push
stc
cmp
ret
and
sbb
leave
xor
mov
out
push
cltd
push
xchg
cltd
push
mov
and
dec
cmpsb
mov
imul
jae
cs
xchg
jb
fstl
sets
mov
dec
cmp
mov
push
movsb
addr16
lahf
lods
lock
les
out
es
and
in
pop
insl
mov
jb
sbb
pusha
clc
mov
fisubrs
repnz
ljmp
imul
rcll
jge
std
mov
lea
sub
into
les
fstl
xor
and
or
lea
hlt
mov
rcl
nop
sub
jb
in
shrb
stos
scas
adc
jmp
fists
sub
repnz
adcl
push
jl
pushf
in
insl
aam
or
xlat
jno
mov
add
add
adc
cwtl
push
hlt
xchg
mov
mov
jle
mov
fistl
mov
cwtl
sbb
mov
leave
sbb
maxps
jbe
loopnew
cmpsb
fmuls
insl
inc
in
movsl
mov
mov
inc
pushf
or
arpl
outsl
dec
sub
sbb
adc
dec
jl
mov
mov
cwtl
mov
loop
cmp
rorb
fsubs
and
iret
sub
cs
iret
out
scas
in
cwtl
fsubrs
call
mov
fwait
xchg
div
or
add
mov
call
jne
sbb
or
sbb
in
and
pop
iret
add
fs
ljmp
jbe
mov
xor
les
xlat
jmp
or
push
rcr
add
xchg
inc
sub
mov
push
sub
lock
inc
mov
pop
std
and
jbe
jnp
add
lahf
pop
push
movsb
call
add
xchg
xlat
jle
sub
jmp
in
dec
or
add
cmc
xor
scas
mov
cld
add
scas
ja
and
add
pusha
mov
nop
mov
scas
orb
fcomps
rcr
lret
jg
mov
out
les
out
outsb
push
mov
mov
push
out
cmpsb
gs
xor
stos
ret
mov
mov
or
xor
adc
ds
add
loope
lds
inc
inc
xor
lret
test
mov
jno
cwtl
xchg
add
cltd
adc
jnp
sub
sub
popf
rclb
aam
les
lock
adc
mov
hlt
xchg
jno
icebp
inc
ds
gs
cmp
jl
add
es
inc
iret
lcall
test
pop
or
or
cmp
lock
test
adc
mov
into
push
fcomps
push
mov
pushl
hlt
and
cmp
out
nop
mov
jge
cmpsl
mov
scas
loop
xor
lods
xchg
call
pop
mov
inc
pop
fwait
dec
xor
fidivrl
mov
test
adc
jb
push
and
mov
outsl
shll
lret
xchg
sbb
subl
mov
mov
call
inc
and
pop
add
jae
lods
andb
add
jle
out
imul
push
cmpb
outsb
imul
notl
push
shrb
mov
popa
xchg
in
lea
pushf
and
imul
lods
les
jp
pushl
scas
inc
call
bnd
insl
mov
dec
es
mov
mov
push
mov
fildl
mov
icebp
dec
jp
test
jno,pn
fcompl
push
sarb
mov
sbb
sub
arpl
jbe,pn
xchg
sub
mov
dec
addl
pop
push
ja
lods
loop
pop
pushf
jg
or
mov
fbstp
and
rclb
mov
dec
and
lcall
cmp
test
scas
jnp
xor
stos
mov
add
dec
xchg
movsl
xorl
sub
out
mov
sbbl
in
add
scas
mov
push
shl
lods
in
adc
add
ljmp
fcomps
mov
cli
mov
test
pop
pop
jb
jp
or
aad
add
test
adc
pop
push
test
insb
fildl
dec
les
sarb
jne
cmc
into
repnz
jnp
stc
push
sub
xchg
outsl
hlt
jp
out
jle
pop
int
inc
pop
sub
outsl
rcr
stos
sub
xor
pusha
negb
fldt
mov
dec
xchg
pop
shlb
mov
and
das
inc
ja
or
mov
sub
popa
adc
adc
mov
jecxz
jmp
hlt
nop
mov
xchg
addr16
mov
push
imul
add
adc
mov
loopne,pn
in
xchg
adc
ret
sti
or
jb
pop
xchg
sarb
dec
jle
cli
push
orl
xchg
in
cmp
xchg
and
ret
xor
jmp
or
and
jns
sbb
push
mov
pop
imul
mov
inc
shrb
dec
jno
in
divl
lods
inc
mov
push
ficomps
lret
sub
fiaddl
sbb
into
shlb
xor
out
cs
mov
pop
and
mov
pop
sbb
lods
jns
pop
in
and
pop
emms
adc
or
adc
add
fwait
push
lret
and
pop
fldl
daa
hlt
imul
mov
fs
int
mov
lret
enter
or
fsubl
mov
inc
add
repnz
sbb
mov
cmc
js
mov
add
xor
subl
sbb
aad
cwtl
and
jno
sbb
add
int3
xchg
add
repz
daa
scas
push
cmpsl
push
add
loope
sbb
push
mulb
xchg
xorl
lea
add
clc
test
sbbl
pop
mov
or
inc
scas
addr16
jae
sbb
in
addr16
mov
push
dec
rorl
sub
inc
insb
cmc
repz
lods
ss
roll
test
clc
call
shlb
es
cwtl
mov
xchg
mov
fsincos
testl
fcoms
sbb
push
mov
pop
mov
and
mov
arpl
lret
nop
fwait
ljmp
sti
mov
lock
push
jmp
xor
cltd
in
or
fbld
or
gs
xor
lahf
fcoml
aad
jle
or
std
or
mov
adc
lcall
pop
jb
xlat
xor
imul
inc
jne
add
dec
jbe
mov
mov
mov
insl
cmp
lcall
adc
pop
daa
mulb
push
mov
pop
inc
push
inc
xchg
aas
lret
icebp
out
cs
mov
in
pop
out
push
or
xchg
popa
push
pusha
xchg
je
cs
push
sub
and
jnp
dec
xchg
push
pusha
out
adc
mov
lock
adc
cmp
test
rorb
xor
fst
jp
fistps
ds
mov
pusha
inc
dec
jo
repz
aaa
push
jl
daa
jmp
fldt
test
jno
push
add
movsb
push
or
stos
mov
pop
mov
cli
mov
imul
pop
pop
sub
out
jmp
push
adc
cmp
xchg
jnp
int3
adc
mov
cmp
mov
add
xor
mov
mov
outsl
sub
xchg
fisttpll
loope
cmp
or
inc
jmp
fisttps
jae
mov
iret
jbe
hlt
xchg
ss
loope
sub
and
nop
adc
adc
in
mov
dec
lods
je
cwtl
lods
or
fcoms
xor
insl
jne
out
mov
mov
dec
jae
ret
inc
negl
aam
adc
pop
mov
mov
adc
into
jg
push
jl
popf
cmp
sti
mov
ret
or
inc
lock
test
mov
stos
cmp
out
scas
cmp
pop
int
aas
or
inc
jmp
fadds
dec
in
push
mov
cmp
insb
rcrl
jns
popa
xor
imul
pop
dec
dec
cmpsb
aas
jl
cmc
xchg
adc
inc
jne
adcl
xorl
and
test
or
xchg
push
push
jb
sub
xchg
sub
cmpsl
adc
nop
lock
fadd
pop
xor
outsl
sbb
adc
mov
inc
pop
pop
sbb
flds
sbb
mov
xchg
out
je
lret
push
sub
mov
push
aaa
push
xchg
in
cmpl
jmp
ja
xor
jecxz
fcmovne
jno
jae
lods
in
sub
xor
mov
pop
ljmp
aaa
inc
int
push
push
fwait
stos
add
shll
mov
fsubrs
mov
cmp
sbb
clc
dec
call
mov
rcrb
sub
push
clc
jno
mov
adc
stos
inc
in
subl
stc
xchg
shrb
aas
loope
adc
in
std
mov
inc
cmp
stos
mov
push
jl
js
mov
mov
decl
dec
xchg
xor
xchg
imulb
pop
scas
xor
and
xor
xor
std
es
scas
in
add
or
jmp
leave
pop
shrl
cs
xor
xchg
sahf
add
or
stc
aad
cwtl
or
ja
pop
xchg
pop
mov
xchg
daa
push
cmp
xchg
push
sub
xor
ret
je
mov
push
jmp
and
sub
adc
je
outsb
push
ljmp
imul
movsb
stos
das
mov
int
mov
sarb
ret
fs
jae
pop
push
push
jbe
arpl
cmc
ss
cmpsl
call
dec
sbb
mov
cmp
push
jae
out
imul
cltd
xchg
cld
mov
dec
int3
xor
mov
mov
mov
js
mov
mov
sub
jge
sbb
dec
call
repnz
insl
mov
dec
es
mov
mov
jae
mov
enter
and
fs
push
negl
mov
int
mov
pusha
xor
cs
pop
adc
add
and
xchg
sub
mov
repz
mov
adc
sub
fwait
insb
lret
dec
popa
fnsave
fldenv
dec
leave
das
mov
fs
xorl
test
leave
loopne
gs
repnz
mov
mov
or
inc
rcrl
or
jae
into
mov
mov
mov
jnp
inc
xlat
pop
cmc
scas
outsb
mov
es
mov
push
rcr
inc
xor
mov
sub
sbb
dec
xlat
mov
push
test
cwtl
mov
jo
rcrl
gs
sahf
cli
sub
pusha
lods
lcall
je
pop
div
or
jnp
lock
push
mov
sub
fcompl
clc
pop
mov
out
xor
or
mov
movsl
rclb
jmp
jo
adc
scas
or
das
int3
inc
mov
add
dec
jg
iret
push
fisubrs
ljmp
popa
pop
lahf
lret
js
mov
inc
test
xchg
mov
cld
cmp
cmpsb
mov
push
sub
mov
idivb
dec
pop
test
int
mov
xchg
es
jns
in
and
xor
xor
adc
mov
sbb
test
mov
dec
std
mov
push
mov
sub
xor
js
std
pop
in
xor
push
cmpsl
cmp
int3
xor
stos
int
mov
xor
sub
pop
mov
aam
sar
pop
fnsave
pop
sbb
mov
dec
fs
mov
leave
dec
mov
ljmp
push
xor
ds
push
pop
mov
dec
jae
mov
std
push
mov
in
testb
das
mov
mov
inc
sbb
xor
movsb
and
sub
mov
repz
mov
or
xor
and
xor
mov
popf
push
cmp
dec
jmp
les
call
pusha
add
ss
jg
test
inc
push
push
pop
sti
mov
rcll
cmpl
jo
adc
punpckhwd
adc
dec
ljmp
mov
sub
mov
fnsave
mov
repnz
fs
xor
rcl
adc
mov
sbb
mov
movsb
addr16
std
sub
leave
xlat
and
jmp
cld
fsubp
jmp
lret
xor
loope
inc
jecxz
adc
mov
popa
sub
sbb
adc
and
jp
rorl
lods
ds
or
mov
cs
lock
and
inc
nop
iret
movsb
push
fcmovnu
call
arpl
mov
jmp
xor
out
icebp
xchg
lea
or
xchg
shl
hlt
sub
pushf
dec
sahf
fs
roll
fcmovbe
xor
dec
and
and
push
jae
cmp
addr16
rcl
mov
dec
xorl
jp
cmp
fists
scas
lods
lds
aad
sarb
or
push
les
inc
mov
not
pop
shr
jbe
cmc
cs
xchg
aad
lret
and
add
pusha
imul
mov
mov
aaa
mov
sub
cmp
test
cmpsl
push
inc
test
loope
jne
or
cli
add
mov
sub
pop
mov
pop
test
addr16
xchg
out
lahf
pushf
sub
pop
ds
jns
imul
pop
lahf
shrb
jg
jae
inc
pop
mov
xor
mov
cmpsl
cmpsl
push
dec
jg
mov
incl
and
stos
jg
test
sbb
ljmp
in
stc
std
pop
cmp
xchg
fsts
sub
push
push
test
dec
mov
mov
mov
dec
pop
rclb
adc
sub
push
ss
rcll
inc
or
jl
add
iret
pop
push
std
loop
dec
mov
aad
cmp
lahf
jne
push
mov
rorl
inc
inc
pop
enter
or
dec
jp
sbb
or
es
sbb
int
xor
lea
mov
lds
test
mov
xor
imulb
add
pushf
sbb
shll
mov
sub
jmp
pusha
and
mov
xchg
lods
outsl
icebp
rorl
jmp
fwait
lret
cmpl
xor
jg
hlt
stos
sbb
inc
cwtl
pop
bound
dec
aaa
push
mov
cs
arpl
mov
xchg
rcll
jle
ret
adc
xchg
lret
lods
into
addr16
adc
adc
xor
ljmp
dec
fisttpll
jne
out
jo
jae,pn
push
sbb
lds
popa
push
movsb
mov
jp
push
xchg
xchg
sbb
pusha
dec
jo
or
mov
mov
rol
sbb
pop
pop
xor
aaa
mov
ss
insl
mov
pop
mov
test
mov
or
sub
clc
sbb
ds
or
mov
loope
mov
ret
call
aam
and
push
cmp
push
push
and
daa
dec
jge
push
aas
push
dec
rclb
sarb
jbe
push
jmp
adc
jge
jle
mov
sbb
push
nop
cld
push
insl
jecxz
adc
iret
dec
ficompl
repnz
into
call
jo
adc
aam
int3
in
jo
leave
repnz
adc
ja
imull
jl
jg
cmp
fcomps
cwtl
addr16
adc
rcll
xor
inc
cmp
mov
movsl
dec
repz
aad
mov
lods
je
hlt
repz
jle
sub
dec
insb
lds
mov
dec
dec
jb
cwtl
ret
or
fdivr
jne
cmp
xor
jns
sti
orb
jge
movsl
or
fldcw
mov
push
adc
xor
dec
scas
outsl
icebp
push
dec
sbb
sbb
imul
cmp
popf
popf
push
fnstenv
sub
adc
sahf
pop
in
inc
and
sti
sbb
push
pop
inc
mov
dec
fwait
mov
ljmp
in
imul
add
jg
in
cmp
adcb
push
repnz
and
dec
je
sub
add
int
and
in
loop
lea
or
das
dec
push
fdiv
pop
xor
push
adc
fbstp
ja
mov
push
dec
dec
fcmovne
das
adc
xor
cmp
sarl
fcmovnu
sbb
lock
add
xchg
sub
push
test
push
int
mov
xchg
fldt
mov
cmp
xor
push
int3
ret
fiaddl
inc
cwtl
repz
fsts
xorl
lret
dec
push
int
and
pop
arpl
stos
jae
shll
xchg
push
jbe
inc
cltd
mov
jnp
inc
iret
mov
sbb
inc
pop
cltd
add
adc
or
xchg
jge
dec
out
in
xchg
iret
loope
loopne
cli
push
or
jnp
xor
push
jmp
mov
in
and
dec
jo
sub
sbbb
and
and
aaa
dec
int3
fnstenv
add
lods
nop
dec
or
xor
add
sbb
bsr
jmp
inc
mov
xchg
call
pop
adc
jns
sub
arpl
or
cmp
jbe
inc
push
inc
xor
lret
scas
loop
sbb
sarb
cmpsl
pop
cmp
jg
adc
adc
aad
mov
inc
lahf
inc
adc
or
mov
fwait
es
cltd
sub
scas
in
outsb
inc
pop
ss
fs
clc
sbb
loopne
add
insb
dec
loope
jne
inc
lock
lret
mov
popf
jnp
popa
mov
and
call
daa
push
inc
arpl
movl
sub
xor
pop
fldl
jle
add
jmp
sub
adc
pop
ss
pextrw
dec
jne
mov
ljmp
arpl
xlat
adc
fbld
in
inc
mov
mov
xor
sbb
test
movsb
jmp
gs
add
cmp
dec
loop
sbb
aad
in
lea
insl
fcmovnb
sub
jns
adc
out
sbb
xchg
call
dec
lahf
cwtl
xchg
sbb
xchg
cmp
mov
mov
shlb
movsb
arpl
fwait
cmp
orl
std
pop
push
in
fnstenv
cmp
addr16
mov
repz
mov
mov
jno
cmp
lahf
adc
or
decl
test
mov
cltd
fistps
outsl
xchg
sub
push
call
in
jnp
lret
inc
adc
mov
mov
pcmpeqb
idivb
andl
pop
ds
divb
fiadds
ds
in
or
cli
into
fildl
pop
dec
pop
cltd
in
jmp
cld
into
out
sbb
arpl
dec
sub
sub
xchg
rcll
stos
jno
cmp
mov
fsubs
push
ljmp
stos
mov
xor
cs
call
imul
sub
popa
ficomps
enter
adc
fs
cmp
nop
push
scas
xchg
xchg
rcr
sub
mov
call
mov
ljmp
dec
bound
push
rcl
adcb
leave
mov
push
mov
pushf
mov
sbbl
fidivs
mov
mov
cld
frstor
subl
adc
ret
dec
xor
gs
push
dec
push
aaa
pop
jmp
int3
dec
aas
pop
dec
rorl
push
jb
add
lods
adc
loope
fstp
outsl
mov
pop
xchg
inc
jmp
xchg
inc
scas
dec
insl
stc
jne
cs
pop
fdivrp
cmp
inc
mov
ficomps
sub
out
push
inc
inc
stos
sbb
pusha
xchg
xchg
sub
sub
das
sub
pop
jecxz
scas
leave
fisubrs
sub
mov
push
test
mov
jl
or
cmc
or
mov
xchg
and
xor
mov
and
data16
fs
and
push
dec
rorb
loop
push
adc
push
movsb
arpl
push
sar
jle
clc
mov
outsl
sbb
xor
fsts
lcall
jb
and
add
test
and
and
fwait
add
fnstsw
add
sub
lock
jo
or
push
push
sarl
adc
jl
jge
xor
cmpsl
cmp
add
add
ss
or
rcrl
or
sbb
jl
mov
movsb
lods
mov
stos
movsl
lods
pxor
mov
loop
jo
sub
fisttps
and
mov
enter
sbb
pop
jecxz
sub
nop
mov
icebp
pop
and
leave
xchg
pop
mov
inc
jnp
inc
fsubrl
cwtl
scas
mov
xchg
adc
pop
rcrb
pushf
xchg
pop
fs
cmp
nop
push
adc
xchg
rclb
int3
mov
call
mov
inc
mov
cmpsb
pop
in
rolb
cmpsl
dec
and
sbb
les
pop
xchg
inc
insl
pop
adc
and
push
mov
pop
cld
cmp
pop
jae
dec
xchg
imul
test
repnz
out
lcall
xor
leave
shl
xor
jl
mov
cmpsl
push
add
mov
adcl
or
lock
cmp
gs
push
and
into
xchg
inc
movsb
cltd
push
lahf
mov
xchg
test
pop
mov
dec
pop
pop
daa
inc
and
cmc
leave
insb
or
xchg
sbb
mov
leave
sub
xchg
mov
mov
mov
imul
mov
es
shrb
adc
mov
test
jo
das
xor
lods
icebp
sub
xchg
dec
inc
leave
ja
xor
sbb
mov
cmp
imul
mov
loope
mov
aam
mov
jle
or
or
outsl
pushl
add
sub
in
jnp
mov
jo
xlat
sub
adc
lea
aaa
pop
jbe
adc
mov
mov
mov
jo
aam
rcll
test
test
test
ret
pop
add
ret
iret
jmp
mov
and
into
gs
push
out
fldl
cmp
jbe
in
das
int3
mov
dec
pop
popa
mov
mov
add
and
mov
iret
xor
les
xchg
mov
nop
outsb
xor
ficompl
bound
fsts
mov
mov
inc
aam
ror
jno
xor
jle
pusha
or
lret
mov
cltd
sub
js
add
lahf
loope
dec
fwait
xchg
sub
or
jge
push
xchg
cmc
xor
lret
and
sbbl
inc
adc
xor
xor
or
mov
cs
arpl
dec
mov
lds
cmpsl
int3
lods
imul
dec
jmp
shll
pop
lock
add
xchg
shrb
in
push
pop
popa
mov
ss
dec
xor
sbb
jbe
lods
inc
mov
pop
or
jbe
jge
add
pop
lods
push
aam
push
addr16
pop
push
mov
inc
cs
pop
in
mov
push
ret
scas
mov
mov
dec
popf
inc
pop
inc
cmpsl
push
mov
in
pop
pusha
xchg
cmp
lret
push
sub
xor
jnp
js
push
insl
out
adc
mov
mov
sti
or
imul
test
mov
cwtl
pop
fucomip
sub
xor
sbb
jecxz
loope
int
imul
or
adc
scas
and
test
imul
adc
lea
aas
stc
xchg
test
mov
fnstenv
aam
clc
test
jo
aam
nop
or
sbb
add
shll
jge
repz
jno
es
push
test
push
mov
sub
xchg
cmpsl
add
nop
call
cmp
jnp
divl
mov
frstor
jnp
add
jle
pop
mov
out
insl
pop
hlt
movsl
mov
dec
enter
fsubl
pop
dec
sub
push
mov
xchg
pushf
adc
fwait
jbe
mov
nop
in
inc
push
loop
int
mov
mov
xor
and
ror
sub
int3
mov
pop
inc
xchg
fildl
lds
adc
fisubrs
fdivs
aam
sub
cli
nop
jb
mov
jo
push
lods
jnp
pop
xor
or
mov
xchg
sahf
adc
jmp
adc
scas
jg
jae
enter
shl
es
jg
fwait
push
sti
loopne
adc
imul
or
cmp
adc
leave
xor
jns
adc
xchg
jl
movsl
popl
ss
inc
jne
adc
jae
mov
add
lds
stos
fldl
inc
xchg
cmpl
int
int
jmp
dec
xor
insb
xchg
jae
sub
push
mov
mov
nop
jl
into
mov
push
in
dec
or
leave
xchg
cli
les
cmp
insb
cmp
hlt
sub
push
sub
insb
leave
add
notb
pop
add
push
pop
lret
cltd
jge
xchg
mov
fistpll
sub
lcall
adc
and
xchg
das
sbb
pop
aad
push
jbe
lahf
jbe
cmpsb
aad
fs
adc
cmpsl
sub
mov
fs
and
cmc
sub
jl
stc
mov
sub
push
ljmp
fistl
iret
or
mov
and
sub
or
push
arpl
adc
jb
xor
cmpsb
add
sub
jne
clc
int
out
push
lcall
ja
mov
sbb
add
aad
xor
arpl
pop
push
cmc
pop
inc
lret
and
cmp
scas
mov
xor
lahf
mov
xchg
into
movsb
mov
scas
loop
jne
fcom
inc
iret
cmp
push
je
imul
shlb
movsl
push
mov
pop
cmp
pop
scas
cmp
je
ror
push
pop
jmp
sub
das
lcall
sub
nop
push
xchg
test
pop
push
sti
imul
insl
or
stos
inc
lock
xchg
mov
mov
in
mov
sub
pop
mov
jae
mov
mov
clc
mov
sbb
mov
xor
dec
std
outsl
mov
sahf
int3
push
je
xchg
jne
mov
leave
in
jnp
sti
mov
mov
dec
xchg
pop
push
adc
mov
testl
mov
push
test
shl
cmp
insb
add
out
xchg
repnz
cltd
push
mov
or
xor
push
pop
clc
aam
cmp
add
int3
and
bound
sub
mov
insl
mov
jns
sbb
outsb
pusha
mov
mov
call
jo
pop
lds
pop
push
push
and
xchg
aad
arpl
jbe
repz
mov
adc
icebp
lret
test
and
sub
movsl
gs
mov
dec
sbb
jecxz
clc
or
or
mov
mov
xchg
iret
push
out
adc
push
jmp
or
and
jnp
jnp
in
jo
push
ss
jnp
or
mov
lea
inc
jb
jl
movsl
add
imul
sub
into
sti
jnp
mov
or
test
into
jnp
cmp
xor
inc
and
push
inc
xchg
imulb
xchg
sbb
pop
rcll
jg
call
sub
sbb
or
lcall
sbb
cmp
cmpsl
mov
mov
test
push
push
xchg
pushf
sbb
js
std
cmp
pop
xchg
push
mov
call
insl
mov
xor
mov
pop
das
leave
jmp
push
je
jb
jl
lock
xchg
outsl
icebp
loope
ja
mov
lret
addl
adc
stos
ja
sbb
repnz
adc
sbb
cs
lods
pop
lods
or
or
sub
mov
dec
jmp
lods
push
xorl
hlt
mov
imul
xchg
rcll
pop
mov
xchg
adc
jmp
cs
bndldx
je,pt
push
rcrb
loopne
or
mov
mov
mov
jns
repnz
push
sti
pop
rcll
movsb
lret
mov
inc
pushf
add
push
jbe
lret
data16
dec
dec
mov
sub
adc
lods
mov
xor
xor
lea
std
mov
xor
xchg
pop
loopne
jmp
adc
lock
daa
add
test
repz
fcmovu
lret
cmp
fimuls
movb
outsb
andl
xor
add
mov
insl
mov
add
wbinvd
cmp
xchg
sbb
jnp
xlat
scas
push
rcll
cmpsl
cld
in
jnp
sub
jmp
out
jnp
or
jae
add
add
imul
cmp
out
out
jnp
stos
mov
jae
in
popf
sar
cwtl
or
push
mov
jne
cmpsb
or
xor
lea
mov
ret
sbb
stos
adc
inc
lds
mov
push
outsb
dec
pop
jb
addr16
fdiv
mov
shr
push
inc
or
lds
icebp
xchg
into
jmp
dec
fistpl
enter
sti
cmp
das
stos
mov
lods
shlb
mov
mov
iret
or
ds
shlb
adc
push
push
jmp
dec
jmp
jne
fwait
xchg
adc
fcmovu
ret
icebp
or
add
xchg
xor
push
mov
into
ljmp
icebp
mulb
push
sbb
sbb
lret
mov
fs
fmuls
movsl
ljmp
dec
xor
std
and
lcall
cltd
imul
adc
call
sub
pop
idivl
ja
in
cmp
into
xlat
mov
sahf
mov
out
call
mov
mov
fcoms
push
and
cmc
cmpsl
inc
imul
xor
adcl
lret
icebp
add
xchg
lock
loope
mov
inc
inc
les
push
mov
adcl
mov
test
xor
mov
push
xchg
mov
sbb
fmull
jb
jae
pop
lahf
mov
shrb
fildll
out
jno
push
pushf
repz
jl,pn
jns
cs
push
int3
pop
jno
decb
fsts
sbb
movsl
sbb
insl
push
pop
jp
adc
jae
jl
cmp
adc
lret
xchg
in
adc
cmp
mov
jl
movb
adc
jl
fwait
add
mov
out
stos
and
sbb
inc
into
or
push
paddusw
je
sub
cwtl
mov
shll
test
scas
jge
daa
mov
jae
nop
add
imul
mulb
fdivl
adc
pop
orl
lds
xchg
inc
push
ljmp
mov
fcmovbe
jge
adc
dec
cmp
cmp
xlat
stos
sbb
into
iret
stos
and
leave
sbb
cs
xor
mov
leave
mov
pop
adc
jbe
cmp
push
cmp
add
and
xor
xor
sub
jno
fwait
push
xchg
adcl
call
sub
data16
sbbl
dec
std
push
in
xchg
adc
pop
loope
cltd
and
lret
mov
pop
mov
sti
lods
adc
pop
jbe
sbb
jae
push
mov
lret
and
jl
roll
or
test
push
jnp
lret
shrl
jne
movsb
or
push
cmp
mov
pop
insl
je
insl
pop
aam
shrl
and
lret
mov
std
sub
sub
add
outsl
imul
add
jecxz
xor
push
repz
mov
sub
adc
rol
inc
les
pushf
fs
jmp
orl
iret
in
loopne
pushl
sub
fs
popf
fisttpll
or
mov
test
scas
jo
jge
jecxz
jnp
add
loope
sbb
mov
xor
fstl
jle
out
push
in
sub
and
jo
je
lret
sbb
addr16
data16
xchg
lock
test
ja
test
in
jl
mov
insl
call
fdivs
jno
stc
mov
jp
cs
sub
lret
data16
add
pop
push
mull
fsubrl
ret
lea
add
mov
xor
cmp
jne
daa
mov
push
pop
cmp
mov
jb
xor
push
sbb
cmp
mov
ror
jne
sbb
in
cld
cmc
test
loope
sub
nop
jb
popf
and
sub
imul
mov
jmp
xchg
nop
dec
in
push
data16
xor
mov
aam
jmp
jg
decl
xor
dec
adc
dec
mov
xor
cmp
inc
or
adc
out
addr16
dec
push
push
mov
jne
dec
loop
js
jae
ljmp
inc
pop
pop
inc
push
or
fstl
call
mov
cli
mov
adc
movsb
out
data16
or
push
push
sbbl
aas
es
dec
data16
xor
nop
test
shlb
xchg
lret
leave
bound
pushf
xchg
pop
mov
lret
dec
pop
pop
ret
xchg
loop
jecxz
mov
add
imul
cmc
mov
aam
lods
out
sub
sub
inc
data16
popf
repz
into
int
dec
cmp
fstp
and
dec
jmp
cmp
push
popa
mov
jbe
je
ljmp
test
mov
loopne
repnz
imul
sti
pop
cmpsl
cwtl
je
je
out
lds
loope
jnp
insb
inc
jne
push
arpl
push
test
and
jo
jl
or
inc
xor
out
add
xor
aas
dec
and
jle
dec
movsl
push
jno
inc
jns
xorl
adc
dec
and
fdiv
jnp
not
pop
inc
push
pop
mov
pushf
leave
and
sbb
mov
mov
pop
fdivrs
mov
fdivr
mov
jge
shlb
jmp
test
pusha
iret
cmp
xor
mov
and
or
aaa
and
push
push
loopne
pop
ficomps
js
call
lock
mov
jl
setns
pop
inc
dec
and
sub
mov
mov
jae
clc
push
pop
jle
shl
hlt
jae
dec
aas
and
jb
mov
xor
adc
in
push
lea
pop
pop
dec
or
xor
lods
jns
cmp
dec
pop
cmp
dec
or
out
lds
imul
pop
xchg
iret
ja
push
dec
xorl
pop
arpl
mov
jl
mov
nop
leave
sub
jb
jb
les
in
insb
cmp
mov
fs
sub
daa
sbb
test
enter
dec
push
inc
stos
cmp
icebp
inc
xor
xlat
sahf
xor
lock
rolb
mov
fldt
dec
pop
ror
fmuls
jbe
leave
mov
insb
arpl
dec
inc
adcl
push
test
dec
test
mov
sbb
aaa
addr16
jb
push
jl
mov
adc
test
leave
jno
adc
stos
test
xor
mov
inc
out
xor
imul
stos
mov
daa
cmp
inc
xchg
jnp
addl
into
mov
adc
push
aad
mull
push
or
xor
iret
pushf
outsb
xor
mov
xchg
fistpl
mov
mov
push
and
push
xchg
lret
rcrl
sub
dec
add
adc
icebp
pusha
iret
lock
repnz
jmp
sbb
movsb
jbe
out
jmp
std
nop
push
test
jo
in
push
dec
add
ja
cmp
repnz
push
inc
in
repz
pop
push
filds
xor
push
cmp
jb
insl
ret
jb
ljmp
dec
xor
mov
ljmp
lret
push
cmpsl
dec
jg
mov
int3
mov
sub
cmpsl
adc
push
xchg
or
pop
js
in
daa
sub
out
std
popa
ret
jns
and
nop
inc
stos
frstor
rolb
addr16
inc
popf
es
xor
pusha
mov
jecxz
movsb
inc
mov
ror
fsubrs
push
js,pt
inc
sbb
add
push
jmp
ret
outsb
push
mov
cs
mov
imul
cli
loop
xchg
rcrl
dec
mov
sub
insb
stc
lahf
js
adc
psraw
dec
mov
fistpll
incb
push
cmpsb
cmp
add
mov
jl
or
dec
in
and
add
and
add
fwait
mov
data16
sub
sbb
xchg
and
push
mov
add
sbb
paddsb
js
cmc
call
dec
jnp
in
ficomps
inc
jne
jl
out
adc
and
pop
shlb
push
adc
jl
or
mov
iret
pop
in
out
addr16
or
mull
mov
jbe
orb
andl
cmp
clc
out
enter
fcompl
pop
psadbw
test
pushf
iret
inc
inc
adc
popf
outsb
cmpsb
stos
mov
adc
stos
adc
mov
aaa
jno
das
mov
dec
imul
lret
adc
pusha
push
add
iret
push
into
cmpl
jmp
data16
dec
dec
jl
adc
fs
test
sbb
mov
mov
mov
cmp
ss
adc
dec
push
push
adcl
fmulp
fwait
xchg
scas
xor
pop
jecxz
hlt
rclb
lahf
jo
cmp
mov
std
push
push
jmp
pop
cmp
jecxz
shlb
int3
xor
shll
xchg
sbb
dec
or
jo
jne
fadd
or
daa
dec
into
xchg
test
lret
push
fldenv
insl
daa
cli
inc
mov
cmp
cltd
popa
push
es
cmc
test
daa
jns
inc
js
push
mov
into
fisttpll
lds
push
sbb
dec
dec
daa
cmpb
test
leave
sub
sub
dec
xchg
mov
loope
push
jle
mov
and
clc
xchg
inc
lea
mov
mov
or
lret
and
and
incb
or
cmp
push
add
jl
xchg
xchg
iret
inc
inc
sbb
xchg
loopne
mov
mov
stos
shlb
sub
mov
inc
adc
pop
push
insb
movsl
push
and
sub
or
notb
test
or
scas
jmp
jnp
xchg
movsb
inc
jo
mov
push
push
icebp
jnp
imul
test
sbb
jbe
sbb
mov
bswap
jecxz
int
out
or
mov
inc
pxor
add
mov
pop
mov
ja
pop
pop
into
mov
ljmp
lret
mov
and
add
fsubs
scas
loop
imul
cmpsb
les
mov
inc
paddsb
xor
or
call
cs
pop
fcmovnbe
xor
mov
xor
pop
mov
mov
daa
daa
mov
loope
inc
add
fstpl
mov
int3
jne
mov
inc
jb
in
xchg
push
and
scas
aaa
lret
lods
aad
int
out
mov
dec
jmp
pop
dec
jmp
ljmp
inc
push
loope
xor
cmp
xchg
std
fimull
jnp
mov
mov
jg
or
push
and
push
lods
fidivs
lock
mov
add
or
pusha
push
mov
pop
pop
mov
xlat
movsb
xor
movsb
insb
int3
int3
push
faddl
rorb
xor
cmpsl
ds
pop
fwait
sbb
xlat
push
fidivrs
pop
imul
test
inc
mov
sbb
xorb
aad
ret
scas
mov
mov
xchg
xor
test
shll
lret
jecxz
mov
aam
fistpll
mov
scas
or
int
dec
mov
pop
test
cmpsl
cmp
dec
jnp
pop
gs
sub
dec
push
fbld
pop
mov
rclb
fildll
mov
mov
lock
jbe
aaa
sbb
adc
enter
mov
or
ljmp
or
test
jb
ds
add
xor
xlat
loop
pop
movsl
arpl
jae
sbb
fidivrs
inc
pcmpeqd
push
xchg
jno
push
pop
inc
jno
call
adcl
jae
inc
hlt
cmpsl
pop
movsl
inc
pop
cmp
in
xor
imul
sahf
test
mov
mov
mov
mov
lret
xor
and
repz
pusha
in
pusha
dec
mov
inc
mov
outsl
sub
jecxz
gs
outsb
adc
mov
pop
cmc
mov
add
fsubrl
aas
mov
sub
test
cmp
xchg
adc
ds
lock
cmpsb
mov
pop
adc
pushf
mov
sbb
push
dec
pop
cmc
cmp
loop
add
mov
shrl
xor
jne
jl
push
xlat
add
scas
sbb
push
pop
jle
jle
lock
clc
in
sub
add
pop
fldl
xor
insl
loope
out
xor
mov
pop
mov
jecxz
pushf
lods
push
das
or
lahf
inc
int3
inc
stos
inc
add
fwait
cmp
ja
in
dec
bnd
or
rorb
xchg
sbb
pushf
adc
es
push
add
lea
xchg
insb
rolb
lods
jae
subb
jbe
pop
repnz
ret
xor
roll
inc
or
lret
inc
arpl
xadd
imul
xor
adc
imul
or
mov
and
shll
and
in
jo
mov
add
pop
data16
stc
ja
jl
mov
adc
jnp
jl
rclb
mov
loopne
test
xor
dec
mov
cwtl
or
adc
add
jp
push
xchg
decl
jno
mov
das
inc
and
inc
lock
sbb
fnstcw
cmp
stc
or
mov
and
aad
shl
cmp
mov
jno
loopne
add
movsb
jmp
mov
fs
mov
cli
pusha
jbe
iret
sarb
sbb
sub
push
loope
xchg
aaa
int
pusha
pusha
iret
mov
repnz
nop
jle
filds
loop
std
or
insb
push
and
pop
xor
imulb
jl
daa
js
pop
in
sub
or
pop
push
xchg
push
push
inc
sbb
inc
lea
das
insb
arpl
enter
mov
jle
adcb
adc
les
das
pop
mov
jno
shlb
into
xor
aas
mov
add
jge
xorb
rcr
sub
orl
sahf
fstpt
lods
rcr
cmp
jae
and
mov
pop
mov
int
movsl
int
fcoms
movsb
xor
data16
orb
pop
lahf
sbb
mov
mov
inc
pusha
adc
jle
mov
lods
out
push
shll
inc
dec
and
out
push
std
xchg
sub
out
jb
inc
jno
das
push
mov
insb
ret
dec
das
push
add
cmp
js
adc
shlb
mov
into
and
lahf
repz
sub
loope,pn
scas
or
lods
jnp
adc
stos
popa
sbb
pop
cmp
fldcw
insl
aaa
jl
shr
in
aas
pop
in
sbb
jno
and
mov
subl
nop
xchg
jne
std
lds
xchg
insb
cs
pop
in
repz
test
push
cmc
fistpll
movsl
lcall
mov
adc
ret
or
fidivrl
sub
in
repz
mov
push
imul
push
int
test
std
push
mov
ss
pop
je
sub
adc
bound
test
inc
pop
dec
fs
sahf
mov
lret
add
pop
cmp
and
das
or
clc
test
stos
push
xchg
mov
dec
stc
cmp
cmp
pop
rcrb
ljmp
mov
leave
jmp
mov
fwait
into
outsl
icebp
sub
hlt
or
and
xor
js
jecxz
mov
dec
mov
jae
pop
movsb
sbb
lods
mov
or
iret
xlat
arpl
mov
jmp
jo
jle
push
mov
cmp
out
mov
out
cwtl
shr
pop
jnp
dec
push
push
xchg
enter
repnz
push
jne
mov
pushf
fwait
lret
and
cld
push
add
inc
fisubrs
insl
les
test
test
add
mov
and
pop
xor
pop
dec
int3
cmp
pushf
mov
movsl
xor
jae
int
out
cmp
das
sbb
sub
mov
fimuls
scas
sarl
cmp
mov
xchg
push
cmp
jbe
in
jp
jo
fmul
fists
inc
mov
loopne
or
dec
mov
sub
or
loope
fldt
mov
cmp
mov
jge
push
adc
add
pop
in
sti
dec
ret
mov
xor
loope
and
or
popl
fstl
repz
aas
cs
jo
or
aam
jnp
sbb
sbb
sub
fisubrl
lret
jb
mov
dec
dec
adc
dec
aas
idiv
cwtl
sti
insb
mov
jg
jl
ficomps
cmp
inc
lods
je
lock
fidivrl
call
inc
or
or
iret
and
and
adc
outsb
xor
xor
and
popa
cwtl
arpl
ss
mov
mov
cmp
shlb
cmpsb
jle
dec
mov
aad
lea
lahf
cs
xor
mov
sahf
dec
xor
inc
mov
sub
jo
scas
push
arpl
mulb
add
pop
or
cmp
xor
push
dec
in
push
cwtl
mov
mov
cs
movsb
repnz
and
lds
pop
jp
mov
fidivs
pop
mov
dec
mov
fidivs
dec
mov
dec
cmp
mov
dec
test
adc
int3
lods
push
push
adcb
in
in
xor
stc
pushf
jne
pop
lds
mov
bound
xor
fcmovnbe
cmp
imul
push
vphsubbw
add
inc
jmp
movsb
inc
jne
mov
dec
push
insl
push
sub
fxam
add
inc
pusha
jg
pusha
js
sbb
dec
jg
pop
xor
xor
js
push
out
fsts
mov
xor
pop
sahf
mov
xchg
fst
push
jae
jb
mov
fmul
fildll
sub
adc
lods
fcmovnu
les
bound
push
xorl
mov
out
fisubs
or
sbbl
pop
and
fcomp
sbb
fnstsw
jnp
dec
jbe
outsl
adc
test
lret
xorl
adc
shl
jnp
mov
js
imul
loope
ret
ret
mov
adc
adcl
or
shll
add
push
mov
into
gs
into
inc
mov
lcall
in
sqrtps
sbb
mov
xor
sub
fistpll
jg
dec
xor
cmp
sub
shll
mov
outsl
and
aam
pop
aam
fistpl
xor
xchg
cmp
pop
cmp
clc
mov
inc
sbb
xor
xchg
aad
testb
xor
div
sub
arpl
jmp
cmp
push
scas
adc
jbe
push
outsb
fucomi
jecxz
test
or
jne
fiaddl
aam
jge
clc
cli
incl
adc
push
pop
lea
mov
inc
out
ret
xor
push
pop
cmp
sub
mov
sbb
andl
mov
fistps
sahf
decl
fs
cmp
pop
fcoms
loope
sub
push
shr
mov
inc
imul
bound
js
les
dec
fdivs
js
xchg
mov
out
jge
call
and
enter
xor
xor
sbb
push
sti
ret
icebp
rcrl
dec
sbb
ljmp
or
pop
and
es
ficomps
cld
sub
sub
xchg
push
test
sub
sti
sub
push
setbe
mov
jl
mov
jne
inc
test
fistpll
jle
lods
mov
sbb
xor
sti
cmp
mov
pop
or
andl
in
enter
adc
flds
add
popa
add
imul
outsb
push
or
or
sub
ret
enter
shl
adc
lret
hlt
add
mov
xor
push
mov
xor
jb
insb
cwtl
out
gs
and
jo
mov
jbe
loop
mov
or
dec
mov
mov
test
rolb
cmpsb
adc
sbb
pop
jp
cli
dec
push
xchg
mov
lds
stos
pop
mov
ja
stos
jnp
xor
rorl
call
iret
rol
addb
jmp
pop
xchg
push
movsb
push
jmp
mov
or
enter
ret
shlb
pusha
out
and
stos
int3
scas
pop
gs
es
pop
mov
mov
aad
scas
rcrl
or
pushf
xor
cmp
dec
xor
loop
xchg
movb
jp
add
mov
xchg
adc
les
fnstsw
popf
dec
push
int
xchg
mov
mov
push
inc
mov
and
test
mov
outsb
xchg
pop
and
pop
pop
jl
stos
xor
mov
test
push
add
mov
ds
inc
sbb
sbb
xor
lods
fstpt
adc
pusha
cmp
mov
aaa
and
xchg
sub
fs
inc
mov
mov
fcoms
pop
fs
dec
xor
pushf
idivl
clc
and
hlt
lahf
fldt
pop
pop
mov
or
mov
jne
inc
addr16
test
fcompl
jmp
jmp
in
sub
xchg
jo
fildll
push
push
add
in
sbb
jnp
repnz
mov
fadd
jnp
adc
push
xchg
inc
mov
sti
lds
lods
jns
shl
stos
test
push
push
imul
or
fld
xchg
xor
test
imul
or
xor
movsb
out
inc
fisttpll
ljmp
cmpl
mov
aad
or
jae
add
or
ds
and
xor
cmp
xchg
outsb
xor
outsl
xor
int
fwait
loop
bound
mov
xor
lahf
or
shr
stos
mov
gs
call
mov
pusha
iret
dec
mov
leave
mov
push
std
lods
jmp
push
pop
loopne
mov
xorl
fs
jle
and
outsb
mov
lahf
mov
push
sub
lea
int
push
dec
xlat
fstpt
dec
fiaddl
inc
sbb
mov
andl
push
push
xchg
lret
pop
cmpsb
dec
push
pop
and
cwtl
fcmovne
fsubrs
lds
cmpsb
cs
popf
sar
mov
mov
mov
fiadds
push
mov
lods
ficoms
pusha
adc
iret
xchg
inc
js
dec
inc
dec
pop
pushf
pop
sahf
or
gs
or
cwtl
fidivrl
pop
das
enter
fs
adc
adc
imul
push
mov
adc
xor
ret
push
int3
push
out
insb
xchg
out
test
sti
popl
fidivs
adcb
add
pop
dec
imul
lret
scas
xchg
cmpsb
arpl
and
sbb
or
mov
cmp
dec
int
pop
int
lock
jl
fs
mov
loop
xlat
lret
or
adc
in
dec
sbb
add
adc
mov
jnp
dec
in
sub
iret
or
fiadds
jnp
ss
cmc
mov
mov
je
cmp
mov
push
ret
into
pop
aam
sbb
push
in
adc
mov
jmp
sub
or
int
dec
jle
dec
xorl
pop
lock
add
addl
cld
movsl
dec
and
sbb
shr
and
mov
inc
sub
outsb
xor
sub
sbb
je
fsubr
fnsave
les
jge
dec
jmp
add
pop
in
pusha
xor
mov
mov
jmp
sub
mov
mov
and
sti
loop
sti
pop
out
jmp
push
or
data16
sub
sbb
arpl
adc
insl
pop
fs
enter
mov
mov
mov
jle
es
cld
in
mov
inc
mov
pop
cmp
pop
imul
loope
aad
sub
sbb
xchg
adc
or
xlat
stos
testb
enter
jns
ficompl
fstp
out
xchg
mov
int3
dec
test
repnz
and
lret
out
pop
ror
mov
mov
add
insl
mov
mov
nop
pop
es
pop
lcall
and
push
and
sub
sub
ret
add
cld
sub
or
imul
lock
pop
pop
inc
lret
mov
cld
adc
int
int3
test
push
inc
sti
jmp
xor
push
pop
dec
and
mull
stos
adc
pop
jecxz
adc
lahf
xchg
lahf
adc
insb
or
iret
inc
dec
test
mov
cwtl
aad
push
mov
test
adc
cwtl
test
cmpsb
or
jmp
adc
ss
adc
je
mov
ss
mov
xchg
inc
cmpsb
jne
je
adc
es
mov
add
dec
jge
xor
je
mov
xor
inc
inc
cwtl
leave
arpl
mov
ja
ror
jo
mov
fcoml
imul
hlt
inc
xlat
xor
cmp
nop
repnz
dec
dec
es
int3
push
addr16
xchg
adc
loop
out
dec
xchg
fstpt
add
sbb
add
xchg
mov
pusha
sbb
sbb
enter
test
jmp
sahf
cld
adc
push
mov
xchg
push
out
ja
fidivs
in
sbb
adc
xor
shrb
daa
ds
pop
in
fisttpll
mov
mov
mov
stos
jne
cmp
xor
xchg
xchg
add
pop
jle
xor
subb
imul
sub
lds
shr
cmp
fmuls
add
lods
les
xlat
es
aas
mov
out
cmpb
cli
lcall
pop
cmpsb
int3
dec
xor
and
rcrb
popf
inc
cmp
cmp
push
scas
lret
pop
sub
xorl
arpl
and
jl
pop
in
lret
cmp
in
adc
insb
inc
xchg
rcrl
pop
xchg
loopne
inc
lds
xchg
subb
sub
pop
inc
shrd
inc
sub
fists
pop
pop
les
das
adc
jl
jns
jmp
pop
rorb
loop
or
je
scas
sar
adc
adc
jl
fnstenv
lods
xchg
push
shll
in
add
stos
testb
int3
xchg
push
sarl
inc
xchg
insl
push
xchg
dec
or
imul
imulb
push
pop
in
and
jb
out
je
and
cwtl
xlat
shll
into
or
jno
bound
mov
test
xor
inc
mov
pop
hlt
pop
mov
movsl
stc
aas
xchg
mov
push
sbb
sarl
dec
inc
aam
mov
cmpsl
mov
cltd
mov
jle
xor
fwait
fwait
inc
aad
sub
rcrb
mov
jo
sub
dec
dec
xchg
mov
adc
mov
jmp
mov
mov
les
dec
xchg
aas
and
dec
lods
jl
pop
mov
xor
pop
cltd
jmp
cmp
pop
in
push
aaa
sbb
push
and
arpl
mov
cmpsl
sahf
adc
push
cwtl
and
xor
out
dec
std
sti
mov
inc
push
ds
dec
xchg
dec
pushf
roll
je
popa
sub
mov
push
pop
imull
mov
adc
test
mov
enter
dec
mov
lea
cmp
les
test
outsl
mov
adc
jl
nop
cmp
cmp
lret
push
xor
lret
pop
dec
xchg
and
rorb
or
in
xor
and
xchg
fsubl
cmp
add
stc
xchg
fwait
push
rolb
or
insl
lea
stc
push
stos
mov
into
out
cmpsl
xchg
xchg
xlat
jb
lods
rcrb
arpl
fimull
xor
mov
adc
loop
pavgw
mov
mov
out
sti
cmp
es
cmc
push
jnp
jl
dec
push
scas
popa
repz
ficompl
lock
sahf
test
aaa
pop
push
aad
test
mov
sahf
sub
push
rolb
test
subl
lds
imul
cmpsb
xor
scas
xchg
push
mov
dec
ss
and
sarb
dec
movsl
add
inc
lds
cmp
movsl
mov
inc
enter
fsub
repnz
or
sub
xchg
push
xlat
adc
imul
xor
bound
cmc
xchg
imul
rcl
gs
cmpsl
cld
cmp
rcrl
pop
into
dec
push
cltd
repnz
sbb
leave
into
mov
or
mov
fwait
sub
dec
xchg
sub
int3
pop
push
bnd
lds
add
aas
jg
icebp
mov
mov
in
rol
in
imul
and
jl
xchg
inc
aam
mov
xor
jle
push
xor
std
frndint
jnp
pusha
ret
cli
inc
mov
xchg
stc
in
cmp
jbe
cmpsb
or
cmp
jne
push
ds
fimuls
call
mov
aam
sub
jnp
xor
outsl
dec
ret
imul
mov
sub
and
outsl
movsb
inc
xor
lret
icebp
mov
cld
fisubl
inc
ret
mov
or
push
xchg
scas
adc
xchg
mov
push
xor
xchg
cmp
scas
add
ja
cmpl
push
mov
jae
push
pop
fucomip
xor
sub
inc
dec
and
ss
popa
mov
jmp
sar
push
test
stos
repnz
loope
adc
movsb
sub
inc
cmpb
pcmpgtd
or
imul
idivl
clc
mov
sbbl
imul
mov
xor
in
cwtl
fwait
jecxz
pop
loopne
and
cmp
pop
push
adc
or
lahf
mov
adc
repz
into
fwait
push
mov
dec
push
mov
dec
or
repnz
inc
aad
dec
xor
fnsave
mov
cmovge
jae
or
pop
sarl
rolb
outsl
jnp
jns
outsb
sub
push
insl
sarb
sbb
xlat
sub
arpl
cld
xchg
rclb
xchg
mov
mov
scas
push
loop
call
iret
pushf
leave
fstps
testl
out
jmp
add
push
push
mov
push
dec
ja
sti
cmp
pop
jge
scas
mov
jg
sub
loope
repz
cmpsl
and
in
and
sti
sub
mov
in
mov
sbb
addl
cmpl
sbb
push
fcomi
xor
shll
mov
ds
jns
sbb
test
push
jne
push
jne
lds
ja
loope
ss
pop
sbb
xchg
sahf
and
mov
mov
ret
or
pusha
pop
movsb
xor
cmp
or
mov
daa
xor
mov
jb
es
mov
nop
xchg
dec
xchg
out
adc
cwtl
mov
cld
inc
push
add
xchg
mov
xchg
stos
aad
xchg
roll
xor
pop
je
jns
stc
push
out
xchg
jae
lock
fists
dec
fs
scas
mov
adc
imul
std
orl
loopne
jne
incl
stos
xlat
push
or
adc
aas
sub
icebp
add
adc
push
push
sub
inc
clc
pop
sbb
mov
sub
xchg
in
jl
clc
icebp
loopne
test
mov
push
test
add
in
jo
push
xor
jmp
lcall
sub
or
iret
sti
loopne
cwtl
inc
imul
mov
lret
mov
dec
xor
stos
ret
hlt
xchg
and
imul
fildll
lret
pop
sti
test
xchg
or
dec
shrb
cwtl
cmp
loop
mov
inc
mov
ror
cmp
shufps
pop
ret
fistps
add
dec
push
leave
lds
jmp
movsl
les
dec
pop
fwait
xchg
mov
push
xchg
add
inc
sti
push
jb
pop
notl
insl
cmp
push
pop
insl
repz
addr16
rcrb
add
push
sub
arpl
xchg
jb
mov
imul
mov
dec
jmp
mov
xor
movsl
mov
adc
insl
push
inc
scas
push
jne
push
jne
inc
dec
mov
loope
xor
pop
sbb
mov
lahf
jmp
outsb
jae
stos
int
mov
or
mov
and
movsb
jg
jecxz
and
xor
xlat
dec
push
ja
pop
xor
lea
into
pop
or
and
jl
das
jno,pn
xor
jmp
adc
leave
sub
popf
shrb
rorb
xchg
std
call
repz
jl
test
shlb
jg
fistpll
dec
and
sub
pop
jp
xchg
daa
cmpb
aaa
mov
sbb
cmp
inc
ja
push
das
test
pop
and
outsl
push
jo
jnp
call
jl
add
das
jle
or
push
jge
push
pop
jns
clc
les
xor
std
or
stos
nop
clc
jnp
sub
cmpsl
xor
outsl
pop
adc
add
stos
test
insb
jg
adc
ljmp
add
iret
loop
add
cmp
push
jnp
mov
nopl
repz
pop
lcall
enter
mov
loope
shll
pop
mov
jbe
rcll
fdivs
pop
sbb
inc
movsb
rorb
sub
xor
rolb
bound
xor
rolb
aas
call
cs
lret
loop
mov
jno
jmp
arpl
cmpsb
lcall
mov
mov
jns
sti
js
sti
ret
pushf
jno
pop
int3
es
lock
mov
mov
data16
in
rclb
pop
push
js
jmp
fs
into
dec
jmp
mov
jle
or
inc
imul
repnz
xor
sarl
cmpsl
sahf
shr
sub
jns
int3
in
xor
jge
and
testb
mov
test
or
jns
mov
dec
sub
jns
call
mov
xchg
mov
mov
or
inc
and
stc
int
mov
mov
into
mov
notb
jnp
orl
push
pop
cwtl
or
shrl
sub
pop
mov
sub
lret
cmp
imul
ljmp
xor
mov
mov
dec
fcmovnb
mov
aas
into
jl
dec
inc
inc
rcrl
jnp
inc
add
cli
xor
movsl
ljmp
fdivrl
mov
jge
imul
test
and
cmc
cmpsl
inc
mov
lods
das
mov
in
fwait
movsl
or
scas
xor
jnp
jae
xchg
pop
xor
add
outsb
in
jo
mov
test
insb
jg
mov
push
sbb
stos
or
stc
dec
ret
cwtl
cmp
into
mov
dec
or
sahf
mov
xor
add
sbbl
pop
fisttpll
or
xchg
cmpsb
sub
xchg
sub
inc
cmp
lret
fldt
or
outsb
leave
daa
je
lcall
mov
fdivrl
jle
xchg
std
pop
sbb
movsl
in
jmp
cmp
push
enter
cmpl
std
or
popa
hlt
pop
jp
cmp
sub
cld
mov
lea
fnsave
jmp
add
jle
fbld
mov
add
cmp
mov
int3
cmp
dec
sub
lds
pop
cld
adc
test
add
xchg
loopne
ja
mov
xor
loope
xchg
out
or
insl
cmpsl
sbb
inc
xchg
inc
fs
cmc
pop
stos
lds
mov
cmp
xor
mov
fisubrl
pminub
mov
dec
pop
xchg
cmpsb
and
or
push
pop
jp
pop
push
pop
pop
sti
scas
push
shrb
test
aad
lea
int3
xchg
xchg
es
sbbb
or
xlat
sub
das
jae
mulb
filds
mov
cmp
insl
enter
stos
cmc
push
or
dec
mov
and
push
cmp
inc
add
ficoml
jbe
pop
aad
push
loope
ss
mov
test
jl
stos
aas
adc
jo
loope
cmp
shl
jnp
lods
lock
add
xor
push
insb
test
cld
jge
rcrl
fwait
sub
adc
shrb
test
test
inc
xor
dec
cmpsl
push
jo
add
imul
inc
push
xor
lcall
cmp
xchg
cltd
jns
out
dec
mov
sarb
add
xor
or
and
or
lock
push
loopne
int3
jp
jle
xchg
xor
lahf
dec
and
sbb
mov
xor
mov
jmp
push
mov
xchg
push
cmc
xchg
setb
and
jno
bound
cmp
sti
and
adc
jae
fwait
push
cwtl
mov
mov
jb
add
and
inc
pop
fcomps
inc
lds
aaa
inc
xor
cmpsl
push
mov
int3
aad
or
adc
xchg
push
icebp
mov
xchg
push
aad
jne
sbb
adc
xchg
lret
mov
xchg
mov
inc
adc
in
call
in
jl
mov
and
mov
push
and
movsb
loop
sarb
cmovbe
insb
cli
mov
getsec
icebp
ds
daa
jno
mov
jp
data16
outsb
push
daa
test
lret
mov
pushl
test
add
push
outsb
scas
xlat
xchg
pop
cmp
xchg
add
push
sahf
jno
or
movsb
jno
dec
ss
ffree
mov
gs
push
mov
aam
push
or
sbb
inc
and
ror
out
jbe
fistpl
insb
mov
adc
inc
std
stc
outsl
jmp
mov
jno
cmp
test
adc
adc
insb
lds
sbb
repz
cli
cmc
mov
in
mov
lea
pop
mov
push
jl
pop
add
adcl
cmc
add
cmpsb
orb
call
lods
add
mov
loope
pop
dec
xorb
loope
mov
lods
outsl
cmpsb
xchg
mov
hlt
jl
mov
cmp
xor
out
sti
and
scas
or
pop
daa
lret
popf
icebp
inc
aaa
lock
cmp
les
mov
or
and
insl
inc
je
mov
xlat
jmp
test
fwait
jnp
sbb
mov
xchg
xor
xchg
aam
orb
cmpb
es
adc
mov
pop
add
fmulp
sbb
jnp
sbb
xchg
iret
dec
inc
bnd
ja
jle
out
cwtl
sbb
sbb
and
ret
lcall
xchg
or
jmp
sahf
sbb
adc
loope
loopne
xchg
lret
mov
xchg
outsl
push
leave
lods
fstl
xchg
mov
pop
inc
popf
or
into
loop
add
push
int3
out
lret
mov
adc
daa
jne
inc
push
inc
or
mov
insb
shlb
mov
out
sbb
das
lfence
sub
sahf
into
sahf
mov
repz
hlt
imul
ror
mov
movsb
push
lods
sarb
dec
js
pop
mulb
mov
dec
cmp
xchg
and
fsubs
int3
jge
mov
mov
pusha
adc
sbb
add
dec
in
jno
rorl
sti
cwtl
lds
imul
sbb
imul
decb
adc
jle
mov
jl
pop
frstor
jl
sbb
pushf
call
mov
jle
aaa
adc
cmpsb
fimuls
fisubs
rcr
mov
test
fimull
xlat
insb
cmpsb
mov
dec
push
je
mov
pushf
and
popa
movswl
inc
lret
scas
loop
mov
mov
xorb
xor
call
call
xor
xorb
sbb
aad
pop
rcl
subb
mov
add
lds
repnz
jg
sub
dec
sub
mov
cmp
insb
mov
sub
mov
lock
lods
ja
adc
jle
stos
sbb
push
shrb
push
sub
mov
add
in
cltd
movsb
xchg
and
pop
jne
fwait
stos
sbb
stc
jbe
int
push
nop
sub
add
mov
test
xchg
pop
and
xor
lds
imul
adc
addr16
adc
imul
xor
mov
fstpt
push
push
jbe
mov
and
xchg
adc
imul
jnp
xchg
pop
xchg
xchg
ret
mov
adc
stos
daa
fimull
push
push
jae
fmul
xchg
enter
cmp
add
cmp
inc
cwtl
jno
ja
out
ficoml
fcom
ds
and
inc
lea
cmp
int
in
in
inc
mov
popa
mov
push
pop
rcrb
imul
in
jo
fxtract
inc
add
pusha
in
mov
data16
in
mov
add
ljmp
dec
call
mov
std
add
push
push
in
outsb
adc
jl
in
jae
add
andb
ljmp
sub
mov
int
jnp
mov
insl
fsubrs
pop
shl
repnz
mov
scas
jecxz
cmpsl
inc
dec
aas
cmp
in
adc
cmp
xor
xchg
push
jecxz
dec
fcoms
ds
or
fcoms
mov
pushf
mov
mov
mov
lods
mov
and
cltd
xchg
imul
or
clc
in
xor
stos
jp
lea
les
rcll
lods
xor
sbb
jp
pop
in
pop
inc
pop
sbb
push
fs
push
xchg
and
pop
adc
idivl
imul
inc
xchg
ret
mov
cmp
out
adc
hlt
sbb
in
pop
cmpsl
adc
push
lods
push
jne
pop
jne
outsl
jns
ja
stc
cmp
cld
jecxz
out
hlt
pop
lds
sbb
pop
push
xchg
sbb
sub
or
jl
and
push
fs
lods
in
or
mov
cmp
add
ss
mov
mov
das
movsl
adc
clc
leave
sub
mov
xchg
sbb
flds
sbb
cld
aad
scas
call
std
push
jecxz
imul
ljmp
inc
mov
test
sub
mov
xchg
gs
aas
jg
adcl
push
sbb
cmp
jno
je
mov
mov
jle
push
mov
mov
pushf
jg
ljmp
cld
push
cmp
jnp
inc
decl
fidivrl
in
hlt
fwait
push
in
std
mov
push
insb
daa
js
in
sub
or
mov
xchg
call
mov
or
mov
jecxz
adc
es
add
adc
loope
nop
into
imul
js
mov
push
mov
mov
push
into
mov
popf
mov
dec
ret
movsl
sahf
xchg
and
xor
pop
mov
test
outsl
add
icebp
xor
and
repz
mov
and
mov
sub
aad
mov
mov
iret
sbb
leave
mov
push
sub
and
fwait
xchg
aas
jb
push
and
test
xor
push
test
xlat
shl
mov
lret
movsl
into
and
flds
jmp
imul
xchg
das
lds
jmp
mov
jmp
pop
into
and
sub
cmp
shrl
in
and
push
lea
add
adc
dec
dec
dec
in
xchg
mov
stos
frstor
sbb
mov
inc
cwtl
repz
aad
mov
pop
cmp
cmp
adc
ret
test
dec
or
sbb
dec
mov
aas
mov
sti
imul
mov
sbb
push
pop
mov
and
ss
mov
add
xchg
sub
xchg
xchg
cmc
shr
sti
push
add
imul
push
aad
xchg
inc
fsubrl
fbld
jle
push
or
adc
pop
jmp
jbe
mov
jle
xchg
add
fcmovnu
mov
in
test
mov
inc
pusha
cmc
mov
mov
push
ficoms
pusha
cmc
fwait
ret
inc
in
je
lcall
fcoml
or
stos
adc
adc
int
xor
ds
rcrl
ljmp
mov
jnp
aam
lcall
in
into
inc
add
add
jbe
push
out
stc
loop
xor
lock
fsubl
out
movsb
fdiv
mov
popa
sarl
jb
dec
sarl
cmpsl
and
outsl
fdivl
cmpsl
add
push
sbb
in
sbbb
das
icebp
pusha
mov
rclb
lcall
ja
jle
xor
pop
leave
cltd
xchg
add
iret
loopne
testl
push
imul
insl
clc
jecxz
inc
jns
xor
cmpsb
negl
mov
and
and
addb
jae
push
icebp
adc
sbb
mov
dec
dec
cld
cmpsb
sub
mov
and
cmp
inc
rcll
cmpsb
imul
mov
adc
rclb
jge
cmovbe
mov
test
mov
test
mov
lcall
sbb
adc
xor
lds
adc
and
sub
mov
mov
lahf
orl
pop
dec
sbb
loopne
je
icebp
mov
dec
cmp
pop
test
sub
negb
imul
mov
cmp
cmc
pop
notl
push
stos
mov
push
jae
xor
jo
sub
testl
arpl
hlt
cli
push
lret
mov
int
fld
orl
and
sbb
mov
or
adc
ljmp
rorl
fnstenv
jg
into
pop
mov
push
push
in
sbb
jo
popf
add
in
fbld
daa
lret
push
lcall
shrb
mov
imul
sub
in
cmc
in
jo
inc
xchg
add
sbb
stos
push
cld
xchg
movsl
mov
nop
xor
es
push
sub
cmpsl
ds
xor
push
dec
jae
sub
frstor
inc
jge
mov
or
cmc
call
jg
mov
jne
and
in
dec
aam
sbb
cmp
inc
cmc
xor
mov
loopne
scas
loop
sbb
fsubs
mov
push
jmp
mov
inc
inc
jno
inc
xor
js
mov
pusha
inc
addr16
and
dec
cwtl
cld
jmp
adc
pop
stos
in
sub
sub
out
or
xchg
pop
mov
fidivs
mov
lea
bswap
inc
mov
jno
stos
loope
mov
pop
pop
jmp
inc
jp
adc
or
cwtl
mul
lcall
sub
ss
fidivrs
xor
jne
jle
in
ljmp
fcomps
repnz
dec
sbb
fstl
mov
or
mov
scas
imul
loop
mov
dec
pop
mov
in
inc
bound
mov
xor
aam
xchg
xchg
xchg
jge
imul
pop
bound
mov
pop
in
jne
xchg
mov
jnp
xchg
mov
xchg
push
ret
or
pop
jae
sub
dec
inc
push
mov
cwtl
ret
into
push
test
int3
jns
cmpsb
mov
mov
shlb
cld
mov
fisttpl
add
sbb
repz
ffree
ja
sub
xchg
mov
jnp
jno
adc
add
and
hlt
pop
into
cld
jnp
pop
add
push
mov
test
pushf
dec
orl
push
cmp
movsb
call
xor
inc
ja
gs
xchg
ljmp
cmp
jno
int
jns
je
jbe
add
test
jecxz
mov
rcrb
sbb
pop
or
push
arpl
loope
subb
pushf
sub
inc
scas
or
cmp
mov
cwtl
mov
addr16
ljmp
cmovl
cwtl
mov
push
scas
sahf
aad
and
divl
push
nop
xchg
xchg
leave
mov
mov
cmpsb
xor
pop
dec
sub
rorl
mov
call
mov
xor
das
dec
xlat
dec
in
mov
in
movsb
fildll
aad
and
and
fcmovbe
mov
and
cmp
and
add
cmpsl
decl
mov
inc
xor
sbb
jo
shlb
mov
addl
je
add
sbb
and
add
mov
or
lret
or
pop
xor
shlb
rcll
pop
in
xor
mov
insw
stc
cwtl
cs
cmp
cwtl
cmp
or
sub
inc
cmp
xchg
imul
insb
bound
and
movsb
pushf
loopne
es
xor
sar
mov
push
adc
testb
orl
mov
mov
je
xchg
jb
stos
adc
out
sbb
mov
stc
add
sti
out
les
xchg
or
adc
inc
adc
xchg
mov
insb
lret
fs
pop
ja
pop
and
pusha
sti
mov
imul
lea
or
xchg
and
add
outsb
jb
mov
sbb
and
mov
lret
int
pop
inc
out
outsb
push
jb
mov
fistps
ss
jnp
jmp
dec
sub
xchg
xchg
jmp
loop
outsb
jle
mov
shr
cs
and
cmp
scas
fisttpl
lock
fisttps
ss
ss
dec
xchg
call
dec
aas
outsb
mov
lcall
mov
sub
arpl
xchg
xor
push
pop
pop
mov
xlat
mov
shlb
leave
lahf
mov
sahf
pop
aas
inc
mov
imul
aaa
into
adc
lds
aaa
int3
ret
sbb
inc
push
imul
and
mov
and
testl
inc
in
mov
push
dec
add
in
fmuls
pop
xchg
mov
lcall
dec
mov
aam
fildll
jno
pop
mov
bound
mov
and
xchg
jo
lret
aad
lds
inc
dec
popf
add
fwait
xchg
mov
xor
scas
dec
ss
sub
int
jbe
out
sub
pop
leave
xchg
fwait
scas
mov
fdivrl
xor
mov
popl
jns
ljmp
pop
aad
or
sbb
jle
add
dec
lea
or
imull
das
adc
xor
add
dec
in
jo
and
inc
pop
and
in
shll
icebp
cld
push
popa
loope
inc
xor
push
jmp
cwtl
mov
inc
mov
jecxz
pop
rorb
xor
add
mov
jae
cmp
fidivs
outsl
sbb
es
add
mov
ret
fimuls
iret
fstpl
imul
hlt
mov
cmpsl
sub
push
sbb
dec
mov
cwtl
out
sub
pushf
mov
sarb
das
int
shlb
adc
inc
ja
icebp
lahf
xor
stos
ss
or
cmpsl
adc
cmpsl
and
dec
xlat
pop
imul
loopne
movsb
lock
mov
imul
jp
adc
test
and
mov
fs
cmc
push
std
xchg
sub
jl
mov
xorl
in
xchg
dec
insb
cmp
sti
insl
mov
sahf
xor
fnstsw
addr16
sbb
out
fsts
mov
pop
lea
imul
sbb
mov
xchg
je
or
xchg
mov
out
mov
add
stc
popf
repnz
dec
rorl
cmpsl
mov
movsb
sub
sti
and
aam
cmpsb
sub
xor
mov
aas
outsb
dec
sbb
out
pop
mov
pushf
leave
sub
cwtl
jp
inc
mov
xchg
sub
sahf
xchg
mov
mov
movsb
fldcw
xor
pop
fsubp
in
sarb
cmc
pop
inc
out
stos
repz
fxch
push
pop
push
dec
and
fisubl
sbb
fdivs
stos
jbe
mov
mov
pushf
jp
in
ds
adc
push
cmp
inc
adc
daa
orl
or
adc
mov
jg
pushf
aas
test
jmp
sbb
daa
adcl
inc
fs
stos
mov
or
test
test
cmpl
adc
cli
xchg
xchg
or
ss
cwtl
into
cmp
cmp
ficoms
outsb
movsl
mov
jg
int
pop
inc
jns
shlb
mov
loope
fdivp
add
or
inc
in
lods
xchg
fsts
movsb
jo
scas
hlt
jns
cmp
mov
mov
icebp
xor
jp
add
call
ficomps
pop
mov
out
popa
xor
das
mov
lret
jmp
lods
adc
push
push
ljmp
or
xchg
stc
jge
push
jbe
push
or
dec
mov
pusha
push
leave
adc
pop
es
push
jae
insb
add
mov
arpl
shll
add
rorb
aam
inc
add
mov
mov
sub
mov
cmpsb
xor
orl
enter
addr16
sti
xor
jb
mov
push
xlat
push
and
dec
cmp
or
test
dec
mov
cmp
mov
inc
repz
sahf
mov
mov
mov
in
ret
cmp
mov
mov
mov
fstl
cs
inc
cmpl
or
jae
call
cmp
adc
adc
push
data16
push
addr16
push
mov
in
mov
and
nop
push
loopne
jnp
or
mov
stos
sbb
ss
mov
movb
nop
xchg
jl
push
xchg
jnp
bound
inc
es
hlt
and
jnp
mov
std
jg
daa
enter
js
lea
xchg
mov
push
in
sti
je
cmp
out
push
and
shrb
cwtl
cwtl
sti
andl
orl
sahf
nop
push
and
jmp
jecxz
ljmp
sub
call
sub
jo
test
push
dec
hlt
sarl
pop
sbb
ds
outsb
xor
scas
cmp
and
fsubrs
xor
test
inc
iret
or
push
arpl
sub
pop
popa
adc
lahf
xchg
fstpl
fwait
pop
fs
insb
xor
mov
sbb
sbb
cmp
clc
xchg
mov
push
dec
mov
jle
push
lea
out
jecxz,pt
andl
xchg
insl
and
cmp
sub
dec
das
iret
push
pop
pusha
les
or
adc
je
in
imulb
repnz
jns
into
xchg
xchg
icebp
bound
insl
xlat
pop
test
leave
icebp
mov
popf
movsl
cmp
cmp
xor
ret
dec
cmp
mov
xor
mov
and
jne
mov
cmp
cwtl
mov
pop
push
push
xlat
push
ds
loopne
mov
pop
dec
push
mov
push
aam
xchg
sbb
jle
sbb
in
test
pop
aad
andb
out
test
ficompl
add
and
pushf
es
pop
jnp
inc
sahf
push
shrl
xchg
add
jmp
bound
cmc
xchg
or
cmp
js
mov
jl
jl
fs
test
ja
jno
or
or
jmp
push
iret
xchg
dec
xor
ljmp
int
aad
ss
or
test
loop
lahf
cmc
xchg
pop
inc
ficompl
xor
sbb
ljmp
sub
sub
cmpl
movsl
pop
lret
fistl
jl
dec
lods
xchg
sahf
or
mov
push
ss
pop
test
adc
arpl
cmp
mov
jmp
add
jmp
fcom
and
and
xor
clc
push
adc
loop
gs
mov
repz
mov
and
insb
lods
mov
arpl
mov
arpl
call
cli
inc
scas
cwtl
pop
imul
xor
add
int
pop
int
dec
pop
sbbb
leave
mov
and
push
jbe
lods
xor
fwait
push
mov
lahf
sub
fstl
sbb
sub
push
sbb
cmp
push
pushl
fistps
mov
sub
bound
mov
rorb
in
repnz
pop
mov
sub
insb
mov
push
pop
mov
imul
sahf
mov
sahf
popa
mov
aas
add
and
clc
std
push
mov
movsl
jne
fistpll
ja
cmp
hlt
into
shlb
inc
rolb
sub
in
cmp
ljmp
inc
fidivs
in
mov
jnp
xchg
mov
xchg
int
and
in
xor
jnp
xchg
je
shr
cmpsl
int
test
mov
adc
gs
fwait
xor
test
stos
ds
stos
jl
mov
jbe
push
iret
pop
cmp
cwtl
cltd
dec
imul
int
dec
sub
xor
test
inc
xlat
jbe
punpckhdq
ss
and
mov
clc
outsl
cmpsl
mov
mov
xchg
mov
add
arpl
inc
les
push
sbb
push
fdivl
mov
rcl
in
and
ja
les
mov
aaa
lcall
push
sub
pop
rcll
pusha
dec
jg,pn
dec
jno
call
mov
inc
jle
leave
adc
xchg
xor
xchg
in
pop
cld
les
pop
sbb
std
pop
xlat
xor
adc
dec
in
sub
lods
stc
push
push
xchg
daa
sbb
aam
dec
mov
les
rol
mov
inc
pop
push
pinsrw
repz
loopne
mov
sti
or
rcrl
jmp
pop
iret
lret
pushf
jmp
ret
cld
inc
mov
xchg
loop
insl
jecxz
xchg
dec
pop
out
mov
je
js
cmp
bnd
xor
fdivrs
popa
cld
iret
test
popa
test
loop
xor
xchg
cmp
or
push
into
xchg
push
mov
mov
ror
xchg
push
and
bound
inc
jb
outsl
mov
and
ja
pushf
adc
sbb
fs
xchg
mov
or
rorb
jl
cltd
jl
cli
adc
xchg
xor
iret
push
jecxz
mov
xchg
sub
cwtl
pop
xchg
outsb
add
call
test
scas
scas
jo
inc
in
xor
enter
add
and
in
dec
dec
xchg
outsb
stc
arpl
adc
or
sub
inc
loop
xchg
and
pop
jl
sub
xor
xchg
addr16
pop
jo
or
aas
jne
pop
jg
pinsrw
jecxz
adc
mov
push
pop
xor
into
fisubs
sub
stos
mov
sub
fmul
lods
adc
sbb
je
xor
fidivrl
and
stos
mov
frstor
gs
shl
fucomp
jmp
in
cmpsb
push
mov
loopne
jp
int
test
adcl
leave
mov
xchg
push
jmp
add
jl
xor
call
dec
mov
sbb
nop
shlb
fildll
pop
or
push
mov
cmp
push
xchg
adc
mov
sub
jle
mov
mov
xorb
fnstcw
mov
xor
movsb
xor
int3
movsl
sub
dec
mov
sbb
and
test
fstps
mov
loope
add
das
jmp
jb
ljmp
add
repnz
sbb
fimuls
and
fisttps
ret
inc
mov
sbb
aam
repz
push
sbb
sub
into
les
in
fists
mov
scas
cmp
adc
adc
pop
dec
push
jle
movsb
comiss
push
test
or
ret
pop
sbb
imul
shr
hlt
sbb
cmp
in
and
aaa
lods
lret
push
or
mov
rorb
negl
je
sub
scas
shlb
test
cmp
div
adc
xchg
rcll
or
jp
add
mov
in
pop
push
or
sub
adcl
andb
repnz
mov
and
gs
lcall
xor
daa
mov
in
jmp
pop
ror
subps
and
test
cltd
mov
in
push
dec
or
jne
adc
lret
shll
sub
jnp
mov
cmpsl
and
out
xor
nop
data16
shll
outsb
jnp
loope
mov
stos
lods
jecxz
pop
fnstenv
sbb
inc
movsb
popf
dec
push
rorl
sar
cmp
gs
or
pop
xchg
pop
pusha
iret
inc
sbb
and
dec
adcl
or
xchg
in
sbb
aas
cli
and
arpl
jle
jp
fwait
sub
mov
pop
and
popl
cmp
fcomps
scas
pusha
add
out
call
pminub
clc
jl
lods
les
popf
rcl
lret
in
mov
ret
int3
cwtl
shlb
test
jbe
movsb
stos
divb
push
stos
inc
or
sub
popa
pop
dec
xor
popa
insl
push
lods
xchg
cmp
test
mov
addr16
cwtl
aaa
dec
mov
mov
inc
fs
xchg
push
mov
hlt
pop
popa
pop
inc
mov
out
inc
nop
fcom
outsl
lcall
cmpsb
sub
arpl
and
sub
arpl
imul
fisubrs
test
jbe
loope
fbstp
cmp
mov
mov
sti
inc
push
dec
outsl
sbb
pop
dec
fwait
xchg
and
test
stos
push
sbb
mov
jl
adc
je
jo
int3
push
push
in
stc
and
push
xor
aas
lea
pushf
add
cwtl
sub
jno
dec
xchg
cltd
mov
call
xor
sarb
xor
sub
jle
push
fsubs
outsl
mov
jmp
and
xor
ja
push
inc
inc
jecxz
in
and
cli
and
add
mov
shlb
pop
enter
in
and
imul
push
ret
cmpsb
roll
ljmp
adc
sbb
sbb
pop
mov
cmp
daa
mov
dec
negb
xchg
cmp
imul
lds
stos
mov
adc
in
adc
and
leave
and
fstpt
add
cld
jo
shr
xor
lea
dec
dec
dec
mov
pop
cmp
out
js
mov
outsl
aad
push
push
dec
cmp
xorl
sub
xchg
mov
xlat
int
adc
orl
jmp
fbstp
call
mov
std
add
xchg
xchg
in
pop
insb
push
mov
insl
cli
scas
insl
mov
cmpsb
test
mov
jmp
pop
inc
pop
mov
push
pushf
mov
and
xor
adc
adc
int3
ss
lahf
popa
xchg
ret
pslld
lods
or
stc
test
adc
sti
cli
aaa
arpl
add
mov
jbe
jne
xchg
enter
jmp
or
and
xchg
xor
cmp
cmp
or
inc
adc
out
inc
jl
dec
add
fucomi
stos
push
mov
fstpt
shlb
jle
jl
ja
ret
orl
sbb
adc
jle
mov
xchg
push
add
xchg
test
icebp
nop
incl
mov
adc
jmp
lods
test
ljmp
inc
mov
jb
pop
movsb
jmp
lahf
in
push
or
or
jg
or
shl
mov
inc
vsqrtps
dec
mov
mov
outsb
pop
ss
lock
popf
mov
std
xor
loope
cmp
pushf
adc
daa
dec
mov
jb
sub
mov
mov
jae
fcmove
leave
jb
pop
enter
cmp
pop
mov
addr16
icebp
in
xor
mov
inc
jbe
inc
popa
lds
mov
jbe
sub
das
inc
mov
mov
pop
xchg
flds
jae
dec
mov
pop
fcoml
mov
jp
dec
mov
sub
out
push
cmp
clc
adc
test
add
push
or
and
repz
sub
ror
sbb
mov
push
aad
ja
pop
sbbl
addr16
fwait
sub
xchg
repnz
xchg
push
jno
sub
push
call
sbb
cli
fimull
dec
lock
xor
inc
in
cmp
cmp
fdivrp
lcall
mov
cltd
push
scas
sub
add
imul
scas
pop
sub
lods
cmc
jbe
hlt
sti
xchg
and
jmp
jno
dec
vshufps
das
fsubs
add
ret
int
adcl
and
pop
enter
jge
fimull
jne
fcoml
add
mov
orb
sub
adc
and
imul
mov
test
xor
add
fists
pop
xor
mov
cmp
aam
mov
xchg
mov
in
movsb
aas
jp
nop
mov
iret
addr16
int
out
insb
fldl
stc
adc
xchg
loop
mov
xchg
mov
or
mov
sub
iret
cmpsl
mov
shr
leave
test
leave
xor
cmp
loope
pop
xchg
and
mov
jge
cmp
xor
das
iret
or
shrl
iret
adc
xlat
xor
test
cmp
jp
push
add
popa
mov
lcall
ror
add
pop
stc
outsb
or
jne
ja
dec
outsb
test
add
xchg
js
in
and
and
sbbl
lea
iret
insb
dec
jmp
cs
jle
cs
and
mov
jo
push
push
jb
mov
shll
sbb
sti
loopne
mov
jne
mov
mov
out
std
test
add
jae
cmp
call
mov
incb
add
push
mov
es
mov
jno
movsb
inc
es
xchg
mov
ja
mov
mov
das
jp
cs
and
dec
xchg
jae
cmp
xchg
aas
push
repz
xor
pop
lret
inc
test
fbld
insl
enter
dec
movsl
xchg
cmp
add
jno
or
push
or
push
repnz
adc
int
push
dec
and
arpl
dec
add
enter
jp
lods
ret
mov
testb
and
sub
outsb
jle
cld
cltd
lock
jo
hlt
xor
cmp
mov
lock
rorb
push
bsr
out
popa
insl
ret
adc
out
js
test
mov
loop
into
aaa
sbb
mov
mov
divb
into
in
dec
stc
or
inc
notb
add
mov
jbe
ja
add
push
mov
pop
add
das
sbb
or
sub
sarb
scas
gs
nop
mov
adc
fsub
xor
sub
jmp
xor
fistpl
adc
push
xor
shr
sub
movsb
jb
pusha
xor
aam
cli
sar
ss
add
xchg
sbb
jne
push
dec
add
mov
into
leave
nop
popa
dec
sub
xor
push
pop
in
out
mov
and
mov
jmp
and
les
das
fadds
jbe
shr
inc
sahf
xorl
lock
mov
lcall
xchg
sahf
sub
pusha
push
mov
push
iret
mov
push
dec
inc
push
inc
cmpsl
adc
sti
mov
int
fstpl
je
call
pop
arpl
mov
data16
add
fidivl
mov
xchg
dec
int3
lock
mov
gs
or
jne
in
jp
das
and
ss
cwtl
shrl
fiadds
pop
test
pop
ds
pop
ja
inc
test
cmc
int3
pushf
push
addl
sar
push
push
mov
addr16
xchg
out
dec
mov
lods
sub
arpl
or
sub
push
mov
jle
test
sub
cmp
iret
jne
add
sbb
inc
push
sub
jno
mov
subb
xchg
in
pop
lahf
adc
mov
jl
popa
mov
xor
sti
xchg
repz
punpcklbw
addl
cmpsl
outsb
lfs
imul
adc
fildll
test
loop
xchg
pop
lock
xchg
inc
je
sbb
sahf
jb
mov
test
push
mov
inc
mov
rol
repnz
cmp
enter
fcompl
fiaddl
sarl
les
rolb
dec
lods
loop
mov
mov
xchg
dec
and
stos
mov
fisubl
or
cmp
lods
mov
sub
pop
stos
call
push
es
inc
xchg
in
mov
xchg
adc
or
fwait
ds
or
inc
xor
cmp
pop
pop
sub
mov
testb
filds
cs
inc
shr
and
jbe
loope
push
aad
and
aaa
mov
aas
shll
dec
jmp
xor
pop
mov
cli
loope
mov
cmp
jae
inc
jge
aam
adc
xlat
jbe
rcrb
ja
lds
test
and
fadds
mov
jb
js
add
inc
fsubl
movsb
addl
pusha
out
int3
hlt
adc
icebp
ljmp
out
fidivrl
xor
nop
ds
xor
cs
xchg
ret
jns
mov
out
or
xchg
sub
push
mov
sahf
xchg
es
jno
outsb
idiv
les
xchg
shlb
jae
pushf
loope
and
stos
and
mov
mov
mov
ja
jl
mov
stos
sub
fisubrs
push
mov
fs
sbb
jmp
push
ljmp
in
xchg
jp
push
lock
or
and
adc
xchg
adc
add
or
or
or
adc
icebp
fstpl
aaa
ja
cmpsl
or
test
loope
xchg
pop
add
lock
add
in
iret
jnp
into
test
or
repz
xchg
rol
cmpsb
pusha
cmp
dec
pop
nop
or
hlt
sbb
and
and
xchg
xchg
pop
test
fnstcw
scas
loop
jmp
daa
inc
jmp
xchg
cmp
cmp
jg
sbb
iret
sub
sahf
cmp
enter
cmp
sarb
sbb
sbb
and
xchg
repnz
inc
stc
xadd
sub
jp
xor
sbb
mov
shl
push
pop
sti
shr
and
sub
push
lcall
fwait
adc
movsl
push
ret
call
xor
icebp
dec
std
lea
cmp
icebp
xchg
out
and
adc
popa
push
popf
or
leave
fxtract
mov
xchg
movsb
or
add
jns
andb
add
ss
dec
or
jl
mov
scas
or
pop
xchg
test
inc
mov
lret
fwait
pushf
fidivl
xor
xor
lahf
cs
hlt
or
incb
push
loope
push
xchg
ja
stc
imul
xchg
insb
xor
fwait
addr16
test
popf
xchg
cwtl
xor
call
fidivrs
mov
mov
int
xchg
xor
mov
and
loope
add
push
loope
mov
enter
jbe
in
mov
and
mov
outsb
or
xchg
sti
jl
nop
subl
mov
adc
push
add
add
out
push
imul
inc
or
cmp
or
mov
into
pop
repnz
mov
femms
xor
repnz
fisubs
cmp
mov
clts
in
jl
mov
push
dec
std
std
rcrl
aaa
jns
cmc
pop
scas
insl
movsl
pushf
outsb
sarl
cmp
mov
add
nop
cmp
loopne
sar
pop
data16
test
cmp
xor
inc
ficoml
jns
add
ficomps
jb
xor
jns
data16
enter
inc
pushl
sub
icebp
mov
mov
add
xchg
pop
pop
stos
jae
xor
adc
mov
sub
and
add
mov
aam
add
mov
cmp
pop
add
dec
ja
ret
jbe
push
aaa
imul
int3
ret
pushf
test
in
push
adc
out
and
jmp
aaa
mov
jae
js
inc
push
adc
into
xor
pop
and
mov
nop
mov
mull
or
addr16
pop
enter
sbb
mov
call
cwtl
dec
mov
pop
lock
inc
sbb
std
mov
bound
orb
xchg
xor
xchg
test
mov
mov
arpl
out
xchg
mov
xchg
rcll
or
mov
lret
mov
sahf
and
arpl
adc
jge
inc
shll
jl
cmpsl
cmp
mov
mov
in
in
sbb
flds
add
add
push
imul
lahf
add
jge
fisubrl
sahf
lret
ja
push
mov
stos
add
push
std
icebp
adc
fwait
repnz
scas
test
ljmp
aad
loop
addl
xor
repz
xor
jp
and
or
inc
or
jp
lock
shll
mov
lret
arpl
sbb
mov
sbb
out
sub
or
std
sub
xchg
outsb
xor
add
pop
rcr
push
xor
lods
inc
dec
fisubl
mov
jp
mov
ror
sub
dec
call
or
sub
add
popa
je
sbb
adc
push
mov
xchg
xor
test
add
xchg
lea
and
rcrl
sub
shr
and
stc
ds
ror
pop
out
dec
pop
fs
or
jl
pop
test
les
push
mov
xor
push
shr
loope
adc
fs
xchg
data16
icebp
adcb
lods
mov
dec
jbe
je
xlat
ficoml
lods
insl
inc
aam
mov
es
push
xor
sarb
inc
daa
or
mov
ljmp
sbb
outsl
pop
out
scas
cmp
pusha
ss
mov
int
mov
insb
icebp
fwait
insb
jg
cmp
aad
or
addr16
imul
ljmp
and
pop
fcompl
sbb
inc
inc
mov
mov
inc
inc
xlat
mov
iret
shlb
mov
and
outsb
dec
mov
dec
xor
test
jl
aas
in
and
dec
in
sbb
adcl
repnz
orl
in
add
jae
push
imul
mov
sbb
lods
test
lea
fiaddl
outsl
add
pop
loop
ja
into
pop
sbb
jb
scas
js
xchg
dec
cwtl
sti
out
lock
jp
mov
ror
mov
pop
ja
pop
outsb
xchg
push
dec
pop
sub
or
fisubrl
cmp
cmp
and
inc
and
in
mov
es
mov
call
cli
jp
das
lods
and
xchg
sub
data16
pop
sub
ss
ficoml
movsl
in
lods
fistpl
add
adc
push
jnp
inc
roll
jp
call
sub
jbe
mov
out
or
push
pop
push
mov
jg
outsb
mov
or
push
add
or
faddp
cld
sahf
xlat
pop
xorb
lcall
push
ds
loope
inc
call
out
lret
imul
ljmp
js
add
or
rorl
xlat
pop
inc
fstl
fnstsw
sbb
sub
into
lret
insl
rcrb
fdiv
icebp
sbb
xor
test
icebp
in
cld
rdpmc
jbe
xor
pop
outsb
nop
jecxz
xchg
shrl
pop
add
pop
mov
sub
lsl
out
jb
add
push
dec
xchg
xorb
cmp
jnp
mov
inc
popa
push
pop
stc
andl
xchg
ror
sub
jecxz
pop
pop
shrb
test
idivb
gs
lea
sti
outsl
xchg
mov
lcall
fwait
push
sbb
or
push
jl
push
repnz
xor
xor
jmp
lock
xor
nop
rorl
or
mov
adc
test
or
repz
sbb
and
in
push
mov
adcb
mov
add
lcall
stos
xchg
test
testb
enter
cmp
mov
sub
add
sbb
adc
jb
dec
movsb
mov
xor
frstor
inc
dec
aaa
mov
xlat
shll
push
jnp
fnstsw
in
add
icebp
xchg
aaa
adc
xor
lock
out
in
test
aas
loope
and
sbb
jno
xor
scas
pop
addr16
aam
mov
and
xchg
das
icebp
mov
clc
sub
in
push
mov
jecxz
mov
xor
push
jmp
aas
cmp
jle
dec
rorb
or
movsl
fnstcw
jp
push
sarl
lcall
ljmp
push
add
sti
fsubrs
inc
out
add
push
fsubl
insl
push
fisubs
add
mov
xor
xchg
dec
lcall
mov
notb
inc
es
mov
testb
cmpsl
pop
mov
aad
push
cmp
pop
mov
mov
sub
enter
mov
aas
mov
sbb
divl
push
test
aad
mov
out
jae
call
sub
test
stos
je
xchg
ss
push
inc
sub
cmpsl
je
or
addr16
dec
push
mov
stos
inc
add
flds
clc
or
fistpl
lcall
popl
sub
adc
cmpl
in
adc
ret
adc
loopne
sbb
jo
xor
shl
pop
mov
jl
adc
adc
and
adc
orl
iret
jl
popl
in
lods
push
out
je
jnp
and
jmp
stos
or
int
in
fidivrl
and
adc
xor
and
dec
jp
popaw
pop
callw
jmp
inc
lds
scas
xchg
mov
insl
sahf
das
or
scas
fcoms
loop
aam
xor
gs
je
dec
imul
push
inc
js
lahf
inc
xor
sub
fcoms
cmc
sub
lahf
pop
and
jne
hlt
mov
push
adc
pop
pusha
inc
fmul
out
push
in
dec
sahf
xor
gs
movsb
js
pusha
push
clc
lods
int3
add
or
in
jge
repz
xchg
lret
mov
add
fs
dec
pop
test
xlat
xchg
insl
pop
sahf
xorl
gs
sbb
push
cmc
jnp
ds
xor
int3
push
xchg
mov
lods
jne
movsb
repnz
test
inc
xchg
insb
lods
loop
push
mov
shrl
mov
inc
cmp
lds
xchg
mov
inc
andb
sarb
icebp
dec
jbe
cmp
lds
into
mov
mov
mov
das
jl
fildl
push
adcb
sub
mov
jecxz
adc
testb
push
mov
insb
sarb
test
fstpl
lret
mov
mov
and
cmp
jle
mov
mov
dec
je
sub
add
dec
and
adcb
andb
sbb
mov
pusha
push
jl
movsb
pop
adc
roll
jl
loope
loope
and
jl
xchg
sbb
call
jl
in
repz
or
mov
bound
mov
push
fwait
push
imul
push
cmp
fsubr
out
xor
decb
andl
jne
in
mov
pop
insb
or
dec
scas
push
fdiv
sbb
insb
sarl
popa
leave
outsl
stos
std
mov
push
pushf
cmovo
pop
mov
pop
fsubl
shlb
dec
xor
jle
xchg
xchg
jg
call
xor
movsl
leave
jmp
mov
or
cltd
sub
in
sbb
push
ds
jns
out
jle
sbb
xorb
dec
mov
decb
insl
aas
and
fbld
lret
push
arpl
popa
nop
mov
icebp
les
cmp
jne
stos
push
shrl
mov
inc
mov
xor
fistpll
push
and
sbb
js
jne
test
or
pop
xchg
insl
jns
aaa
inc
xlat
cmpsb
cs
fstl
sti
test
mov
jl
and
das
repnz
mov
mov
mov
inc
xchg
pop
dec
mov
and
pop
mov
mov
sbb
lds
sub
xor
sub
shlb
add
leave
pushf
aam
xor
mov
icebp
cmc
cmpsl
add
nop
shlb
sbb
adc
into
incl
mov
adc
jl
inc
inc
int
sub
jnp
push
add
les
jbe
adc
sbb
add
aas
repz
fildl
jl
cs
popl
cli
push
or
mov
adc
lods
stc
ss
mov
push
shlb
mov
jno
lods
out
pop
fcompl
imull
push
lods
and
mov
add
jecxz
cmpsl
cwtl
into
frstpm(287
mov
ficoms
cmpsl
fsub
push
punpcklbw
js
inc
fwait
xchg
push
push
xor
xor
dec
add
mov
mov
sbb
dec
movsl
xor
out
lret
scas
loop
pop
cwtl
xor
mov
stos
inc
shlb
inc
or
shrl
test
divl
lds
ficompl
popa
pop
in
xchg
sti
loope
in
mov
sti
pop
mov
xor
xor
and
mov
cwtl
sbb
and
dec
jns
cmp
push
out
lea
loope
inc
ja
ret
mov
dec
lret
mov
lds
dec
push
imul
jmp
push
scas
jne
incl
or
mov
pushf
adc
mov
lahf
mov
mov
xchg
rol
mov
push
pop
mov
mov
clc
xchg
xchg
ljmp
out
sbb
andb
mov
imul
lods
mov
insb
insb
pop
add
or
test
loop
dec
xor
repnz
inc
xor
xchg
mov
mov
aas
cmovl
enter
sub
xadd
pushf
les
lods
in
fisubs
cwtl
jge
push
push
out
jns
fs
xor
addr16
cmp
cs
inc
test
cmp
pushf
fisttpl
mull
adc
dec
and
in
sti
jae
jb
jbe
mov
aad
rcr
out
pop
inc
mov
inc
mov
adc
and
test
sbb
and
out
adc
xchg
add
jle
inc
fdivs
int3
hlt
call
dec
or
or
pop
cmpsl
xchg
add
xor
or
or
jnp
jmp
and
frstor
cmpsl
stos
into
insl
pusha
hlt
dec
push
fldcw
cmp
lods
popf
push
sub
out
jo
in
insl
mov
movsl
sbb
int
inc
xchg
mov
pop
push
cmp
mov
repnz
jbe
aad
xchg
data16
dec
insl
mov
movsb
cmp
cmp
repz
mov
test
cmp
rcrl
lret
inc
inc
xchg
pop
fcom
nop
scas
leave
in
loopne
gs
pusha
lret
test
sti
ret
in
clc
int
ret
xchg
or
adc
stos
and
lods
es
add
mov
loopne
js
daa
sbb
jae
xor
jno
loop
push
add
icebp
movb
neg
loopne
int
pop
loopne
das
in
cmp
mov
lods
pop
add
int
imul
sbb
mov
jns
outsl
inc
mov
stc
and
mov
leave
enter
stos
xor
stos
add
int3
inc
lret
loopne
xchg
sarl
dec
jg
jno
lret
in
je
jge
jnp
adc
cwtl
jne
fcomps
das
inc
test
push
xor
xor
or
cmp
mov
cmc
imulb
iret
pop
pusha
mov
cltd
js
int
jg
cmp
jmp
dec
stc
xor
in
lods
push
cmpsl
fisubl
push
fwait
inc
inc
fs
xor
test
in
cmp
or
sub
mov
int
xor
clc
cmc
dec
dec
jo
jp,pn
pop
xchg
loopne
and
fistps
les
insl
sarl
imul
imul
adcl
fsubs
jbe
shrb
shrb
rcrl
cltd
sub
adc
xchg
mov
je
adc
je
cmp
test
add
insl
imul
in
mov
cmp
subl
push
xchg
jmp
lods
mov
js
addr16
mov
sahf
lock
jmp
enter
adc
mov
mov
xor
sub
mov
mov
mov
subb
mov
push
les
push
std
lahf
push
pop
adc
cli
xchg
bound
inc
cmc
dec
add
jle
mov
jo
and
fisubrl
add
aam
stc
in
mov
ret
pop
das
cmp
pop
inc
push
ljmp
pusha
mov
imul
xorb
fwait
xchg
pop
push
sbbb
insb
jae
mov
add
mov
xchg
gs
push
lahf
out
jp
cwtl
dec
adc
xchg
dec
push
inc
fstl
loop
dec
cmp
mov
divl
and
ja
mov
les
sbb
jns
repz
jl
cli
stc
out
scas
adc
lods
jnp
push
add
xor
dec
mov
out
push
insb
test
fistpl
xchg
notb
dec
or
add
cmp
jo
mov
in
jb
adc
cmc
out
jo
push
lods
jl
outsl
movsl
test
mov
push
cmpsl
adc
cmc
in
sbb
cmp
lahf
push
fisttps
push
jns,pn
sti
std
cmp
mov
jns
into
aas
gs
sbbl
xor
add
popa
ss
pop
out
push
je
mov
es
dec
dec
or
push
hlt
rcr
push
or
push
push
nop
into
outsb
call
sbb
mov
cmc
pop
out
pop
fadds
xchg
mov
mov
xor
add
push
test
jae
call
inc
fidivs
inc
inc
cltd
push
jmp
push
lret
in
xchg
push
adc
cs
test
or
adc
std
sbb
ja
fstpt
fistpll
lcall
movl
jmp
jns
or
addr16
testb
jbe
aaa
ds
cmpsl
ja
imul
push
push
xchg
out
icebp
inc
adc
sbb
ret
mov
sti
icebp
xor
outsb
or
mov
stos
fstl
cltd
dec
int3
test
mov
mov
daa
jle
dec
xor
pop
jns
dec
xor
int3
loop
xor
xor
push
cmpsl
aas
inc
dec
pop
imul
pop
cmp
xor
pop
in
lods
popa
xor
imul
notrack
cmp
ds
mov
fstps
stc
lock
shlb
fwait
adc
jae
jae
xchg
insb
jbe
stc
vlddqu
xor
adc
mov
loop
int
lea
mov
push
dec
adc
pop
push
scas
mov
or
sbb
pushf
xchg
jnp
enter
xchg
jb
mul
lahf
jmp
sti
or
loope
mov
sti
fdivrs
or
andb
inc
testl
xor
aaa
and
test
cmp
xchg
adc
negb
cwtl
push
jns
rcl
dec
adc
and
test
xlat
xchg
mov
inc
jge
stos
xor
mov
xor
daa
paddq
inc
jle
hlt
fcomip
sbb
mov
subl
call
cld
sbb
jnp
lods
fldt
sbb
js
call
push
push
sub
jbe
das
gs
lahf
mov
leave
cmp
inc
jmp
push
jno
out
mov
sahf
xchg
int3
stos
out
sahf
push
push
rolb
pop
repnz
insl
mov
dec
inc
lock
xchg
adc
and
and
into
jb
ss
negl
rcl
or
jnp
fidivrl
cli
jno
cld
mov
or
lock
mov
stos
shr
add
xchg
inc
cltd
push
sahf
push
loope
jne
sbb
pop
pop
adc
or
add
mov
je
jns
enter
jns
adc
dec
or
repnz
cmp
mov
movsl
inc
shlb
mov
cmc
mov
cmp
ret
sbb
into
stos
push
out
mov
pusha
inc
push
xchg
xor
test
mov
push
inc
add
and
mov
pop
add
out
xchg
push
jno
push
out
fdiv
pop
lods
into
ret
in
pop
loopne
mov
and
xchg
insb
dec
xor
push
dec
scas
pusha
xor
in
int
fstps
lcall
cld
int3
in
mov
insb
loop
or
sub
jb
xchg
dec
push
shr
mov
mov
inc
repnz
dec
mov
mov
inc
div
shlb
inc
hlt
sub
mov
mov
rcll
push
insb
ja
in
mov
xchg
jbe
xor
shlb
cmp
into
jae
mov
and
imul
pop
and
mov
ret
mov
add
pop
inc
cmpsl
popf
shll
or
outsl
jl
inc
cmc
aas
outsl
sbb
push
iret
cmpsl
ret
and
loop
adc
cmpsl
movsb
lahf
frstor
ljmp
lret
out
movsl
sub
outsb
in
test
ja
mov
xor
cmp
cltd
pop
xchg
jmp
leave
lahf
loope
arpl
repz
push
jne
add
into
movsl
mov
test
inc
mov
jbe
push
ffreep
out
mov
fs
cmp
jb
lods
add
push
int
lahf
popa
or
xchg
int
cmp
mov
andps
mov
pop
ret
jne
dec
cmpsb
outsl
in
pop
jl
sysret
arpl
adc
pop
add
shl
mov
push
lods
or
insl
push
loop
lret
fisttpl
mov
jne
or
sbb
jmp
or
insl
push
mov
xor
insb
mov
or
sbb
shlb
pop
in
mov
mov
cmpsb
test
cld
inc
stos
fadds
bound
popf
push
das
cli
jne
mov
sti
xchg
test
add
cltd
fsub
push
xor
mov
mov
hlt
sbb
outsb
daa
mov
repnz
es
fildll
inc
add
andl
xchg
jnp
mov
xor
dec
jne
adc
lea
fnsave
xchg
imul
std
jb
jno
xchg
sub
mov
sub
jae
push
cmp
jne
push
push
neg
sar
and
test
scas
iret
xchg
fiadds
popa
ret
imul
loope
jns
lock
pop
xchg
cld
and
push
fsubrl
add
ret
lea
bound
leave
test
cmp
imul
xchg
mov
push
and
iret
push
mov
xor
sbb
faddp
shrb
iret
imul
iret
mov
mov
inc
cmpsl
cmc
cmp
sub
pushf
inc
out
lds
scas
lds
xor
add
call
mov
cmp
in
sub
lcall
lods
mov
imul
cmpsl
lcall
jnp
fs
add
mov
xchg
subb
ror
and
adc
ret
cmp
push
mov
movb
add
fs
test
add
xchg
fsubs
mov
jno
stc
mov
repnz
mov
sub
movsb
adc
fimuls
pop
inc
mov
inc
orl
sbb
int
pusha
xor
das
rclb
xor
into
push
sbb
mov
mov
xchg
out
mov
lahf
movsl
xchg
ss
add
push
pop
add
mov
mov
mov
icebp
xor
int3
inc
cmp
dec
jl
testb
add
jnp
idivb
pusha
sub
les
jnp
filds
mov
dec
jo
adc
add
push
lret
clc
pop
lahf
dec
hlt
jg
or
mov
mov
call
adc
dec
jo
test
daa
test
xor
divl
int3
xchg
rclb
in
addr16
mov
test
mov
xchg
mov
inc
xor
sbb
lahf
hlt
or
jo
cmp
insb
aam
add
mov
sbb
mov
mov
out
sbb
das
inc
jbe
xor
out
jge
call
dec
cmpsl
and
subl
out
push
addr16
fwait
mov
fwait
jnp
into
sub
xchg
or
dec
pop
popf
and
adc
pop
mov
mov
jbe
mov
in
push
dec
adc
dec
xchg
push
cs
cltd
push
jae
iret
clc
xchg
scas
add
xchg
jne
cmp
xlat
es
dec
cli
dec
ja
frstor
lods
push
js
insl
pop
mov
inc
loope
ss
shll
push
jge
rclb
mov
popf
arpl
icebp
mov
mov
pop
sbbb
fwait
popf
fsubs
insl
imul
mov
xchg
insl
lds
adc
pop
mov
pusha
ror
icebp
mov
outsb
dec
sbb
mov
int
andb
cmp
cmp
pop
lds
mov
inc
mov
insb
push
jbe
leave
sbb
sbb
arpl
lock
sahf
popf
mov
incb
adc
push
sub
outsl
mov
mov
test
mov
out
popf
dec
or
inc
add
imul
pop
repnz
test
in
and
adc
xlat
pop
mov
jl
or
mov
int
jl
or
mov
inc
std
data16
mov
jmp
int3
pop
in
cmc
pusha
push
push
dec
jo
and
in
mov
fcmovu
jmp
add
push
add
inc
xlat
push
mov
cmp
test
cmc
cs
dec
mov
leave
subl
fstps
mov
enter
fmull
cwtl
cmpsl
or
add
rcrb
sti
into
repz
scas
or
pop
daa
adc
sub
jmp
xchg
sbb
or
dec
push
sub
fwait
cmc
and
and
cmp
xor
xchg
mov
xlat
adc
push
dec
mov
push
pushf
add
jbe
leave
xchg
inc
xor
fdiv
add
push
pop
aam
lret
clc
imul
ljmp
insb
mov
jns
jae
ss
sbb
enter
ret
dec
xchg
mov
fidivl
sbb
dec
pop
lcall
xor
out
mov
or
and
mov
loop
xchg
mov
call
pop
jb
mov
repnz
fbstp
leave
fildll
cmpsb
inc
mov
fnsave
inc
xor
sbb
lahf
push
jae
loop
icebp
imul
sub
adc
sub
filds
xchg
mov
adc
xchg
in
std
mov
adc
push
icebp
pop
insb
test
push
aad
aad
adc
mov
cltd
in
or
pop
jp
je
dec
sub
sbb
insb
push
add
insb
jg
jbe
mov
push
inc
pushf
jns
mov
andb
xchg
inc
rol
in
push
mov
stc
ljmp
loopne
sbbb
movsb
or
inc
loope
loopne
jge
les
test
in
xor
scas
test
push
repnz
into
and
xor
cmp
lret
clc
leave
xchg
je
adc
push
push
outsl
mov
mov
repz
inc
xor
jecxz
decb
cmc
cmp
mov
pop
xor
or
test
das
popa
or
mov
jno
xchg
push
ljmp
xchg
xchg
or
data16
dec
dec
inc
dec
sbb
pusha
mov
stos
fadds
movsl
jmp
mov
movsb
fildll
iret
add
mov
cmp
mov
jmp
movsl
sbb
cmpb
shl
in
xor
sub
add
int3
clc
xchg
mov
in
sbb
pop
jge
dec
add
fldlg2
xchg
lock
out
xor
mov
push
fnstcw
ret
dec
pop
scas
outsb
ss
add
cs
lret
pop
in
out
sbb
imul
mov
in
aam
mov
xchg
sbb
push
fwait
imul
and
sub
loopne
adc
or
mov
cmpsl
adc
loopne
or
mov
push
xor
lret
mov
adc
out
dec
inc
out
fwait
mov
test
sbb
dec
cmp
dec
int3
mov
dec
sbb
xchg
xchg
les
fldt
sub
lahf
cmp
imul
or
in
loop
adc
mov
out
add
and
lahf
gs
dec
mov
loope
enter
mov
sti
inc
fdivrl
outsl
lret
mov
mull
repnz
jno
cld
jnp
push
ret
mov
adc
pop
add
fucompp
mov
add
sub
jo
jno
pop
hlt
je
imul
jbe
jno
pop
hlt
or
adc
mov
jl
sub
adc
inc
jge
mov
int3
fstl
into
mov
call
nop
enter
add
sbb
add
sbb
xchg
arpl
and
add
xlat
sbb
add
pop
mov
cmp
cmp
rorb
les
xor
lds
sbb
sbb
lods
jb
dec
bound
jl
and
sar
push
or
jnp
fucom
xchg
outsl
and
lret
mov
mov
dec
loopne
in
shl
fwait
sub
sbb
or
stc
bnd
push
jb
mov
outsl
test
popf
hlt
or
popa
inc
cmp
xchg
xor
stos
enter
shrb
or
mov
xchg
shrl
cmp
push
imul
repz
in
pop
aas
adc
dec
adc
jmp
lret
aaa
rorb
mov
xor
test
les
cltd
or
aas
test
cmc
sub
mov
mov
mov
rcr
inc
push
stos
repnz
mov
pop
mov
icebp
mov
xorl
push
leave
sbb
xchg
sbb
out
inc
push
pop
sub
inc
shll
pop
cmp
push
pop
lods
nop
pop
out
aad
jns
push
cmc
pop
xchg
inc
add
lea
enter
mov
inc
xlat
mov
cmp
dec
xor
mov
dec
jl
mov
inc
repnz
mov
test
and
dec
and
test
cwtl
and
outsb
push
lock
inc
shl
push
sub
or
outsb
add
xchg
stos
adc
in
imul
xor
imul
cmp
mov
jmp
and
in
and
xchg
adc
cmpsl
stos
xorl
aaa
mov
add
addr16
adcb
or
dec
and
push
loope
add
dec
add
push
aad
fldt
mov
xor
jecxz
aad
jmp
jge
inc
cmc
repnz
adc
sbb
pusha
dec
xchg
outsb
sub
in
sbb
test
cmp
ror
jge
sbb
outsl
lret
xor
lds
out
into
ficoml
stos
data16
popf
mov
icebp
sub
xchg
lret
xor
mov
lcall
mov
mov
and
and
test
mov
and
xchg
jmp
insb
mov
jnp
push
fnsave
stos
sub
cld
xor
out
cmp
aam
jno
rolb
negl
mov
mov
dec
and
jns
ljmp
rorl
icebp
mov
ror
fmuls
adc
or
cmpsl
nop
das
fstl
sub
hlt
mov
mov
add
insl
pushf
mov
cld
pop
add
add
lret
comiss
sbb
movsl
xor
aad
sbb
dec
out
mov
leave
push
nop
sti
test
in
jle
xchg
sub
outsl
mov
push
test
jl
in
push
ret
add
adc
int
mov
lea
inc
mov
jns
ds
mov
add
lret
jl
or
or
push
mov
cmp
mov
icebp
xchg
jnp
popf
inc
in
fwait
inc
in
int3
daa
xchg
or
jmp
test
xchg
popl
fimuls
outsl
push
mov
add
loopne
sub
hlt
test
lods
sbb
push
mov
xor
inc
iret
jl
loopne
cwtl
ret
adcb
arpl
inc
sub
pop
or
jge
adc
jbe
and
pusha
icebp
mov
lods
popa
popa
fdivl
and
jae
sbb
or
or
cmp
mov
pop
mov
scas
push
sbb
sarb
adc
fs
push
and
add
mov
sbb
sbb
icebp
sarb
fnstcw
mov
and
jmp
call
jmp
xor
jno
inc
mov
sbb
mov
mov
xor
aaa
mov
and
daa
es
fucomi
pop
orl
fs
mov
dec
xor
mov
les
jle
mov
push
inc
int3
cld
xchg
push
mov
iret
and
jo
mov
xchg
add
in
push
jge
aaa
dec
pop
dec
shll
xor
adc
loope
clc
ret
cld
lea
push
sub
out
and
je
pop
rcr
xor
ds
add
jmp
fs
loopne
push
fstps
mov
and
xchg
bound
enter
ds
stos
inc
xlat
pushf
dec
push
jno
outsb
xchg
mov
or
add
ljmp
ficomps
jae
test
in
lds
sarl
rcl
cli
int
fstp
push
xchg
dec
jl
sbb
test
stos
ret
and
cmp
cmpsl
hlt
sbb
das
pop
jns
adc
dec
sbb
or
push
mov
and
push
jg
lea
cmc
mov
or
in
jle
and
insb
idivb
push
pusha
cmc
inc
xchg
mov
sub
jl
daa
ss
cli
xor
int
std
cwtl
cmp
pop
into
cmpsb
aad
lret
xchg
arpl
bound
ret
sahf
jns
push
sbb
insl
fidivrs
ret
test
push
pushf
leave
inc
scas
sysexit
push
in
popf
pop
sbb
push
pop
mov
sbb
sub
inc
xor
pop
loopne
jmp
xor
dec
out
push
ljmp
pop
lahf
add
pop
xor
and
cmc
divl
adc
adc
in
lods
in
test
icebp
push
shll
dec
test
sub
push
out
jb
addr16
dec
ja
sub
jecxz
sub
sbb
stos
loop
xchg
xorb
in
filds
pop
dec
cld
cmp
dec
xchg
xchg
sar
fists
dec
jp
pop
cmp
add
xor
mov
int3
popa
push
cmpsb
pop
ja
inc
jns
cmp
cmc
mov
push
negl
dec
push
loope
sbb
sti
push
and
mov
scas
daa
xchg
pop
add
jmp
test
pop
fcmovne
mov
in
xor
xor
inc
in
and
rcr
in
sub
pop
ds
mov
pop
lods
pop
mov
lds
pop
mov
aad
stos
xchg
mov
jno
xchg
ljmp
or
mov
inc
into
mov
les
sbb
repnz
lock
sub
cmp
les
je
add
push
out
pop
test
out
or
xchg
add
in
cli
addb
nop
adc
mov
jne
jmp
std
inc
in
std
popl
imul
test
add
add
xchg
or
cmpsl
test
daa
push
jl
cmp
sub
mov
mov
adcl
cmpsb
ss
test
push
fldl
pop
pcmpeqd
fwait
inc
fs
sub
add
cmp
das
jmp
or
dec
and
movsb
daa
xchg
or
xchg
out
cmp
inc
cmp
mov
iret
int3
add
xor
repnz
ja
lods
lods
sbb
add
aam
inc
jg
dec
nop
iret
sub
xchg
es
dec
das
pop
ljmp
mov
jmp
cmp
xor
and
mov
adc
mov
mov
insl
xchg
mov
mov
pop
pop
add
and
hlt
insb
lret
and
add
cmp
push
imul
hlt
movsl
decl
xchg
leave
cld
cmp
dec
iret
xchg
lea
cmp
out
lret
add
outsb
in
test
push
lea
fs
or
test
sarb
clc
out
scas
fnstsw
pop
xchg
adc
ss
nop
mov
cs
lret
dec
or
sbb
add
pop
pop
adcl
ljmp
data16
aas
push
lcall
outsb
xchg
xchg
inc
xchg
shlb
push
add
cmc
ss
or
test
push
xchg
mov
push
dec
xor
out
mov
jbe
mov
xor
xor
dec
jne
bound
cmp
ljmp
or
mov
sub
adc
aaa
sbb
ret
xchg
or
out
icebp
add
sti
adc
roll
iret
lods
insl
jno
adc
mov
jo
lods
xchg
inc
icebp
add
xchg
mov
push
jae
bound
xor
jnp
in
lcall
into
scas
xor
jecxz
or
and
push
or
cli
psllw
cmc
mov
insl
das
adc
mov
mov
jmp
jl
sbb
cmp
xor
imul
cmp
and
int3
or
xor
pop
out
lods
and
call
fstpl
int
dec
push
lahf
xchg
or
popf
loope
outsl
fwait
xchg
sbb
jbe
ds
jb
repz
sti
std
test
dec
int
mov
lret
xchg
add
xchg
push
cs
movsb
push
jae
xor
fadds
jecxz
inc
xchg
xor
jne
xor
addl
adc
decl
popa
dec
push
jecxz
std
adc
and
in
and
xlat
jg
mov
orl
or
mov
test
clc
inc
leave
pop
mov
loopne
xchg
adc
insb
push
mov
insl
dec
push
inc
adc
xor
inc
shll
dec
int
xchg
je
dec
adc
cli
lds
jg
imul
sbb
pusha
nop
lds
loopne
into
scas
xor
pop
jae
mov
jge
insb
cmp
adc
js
shrl
mov
xchg
xchg
ja
sub
pop
decb
xor
arpl
add
hlt
push
and
jl
aam
in
sbb
mov
and
push
popa
loope
fiadds
push
in
jno
iret
mov
adc
lret
xor
adc
mov
imul
sub
shl
add
hlt
cmp
inc
cmp
cmpl
loopne
aaa
pusha
xor
jnp
lods
push
mov
sub
jl
ret
xor
mov
dec
andb
jmp
loop
xor
fimull
jb
cmp
push
dec
fimull
mov
cmp
or
push
or
popa
loopne
dec
pushf
int
or
leave
ret
cmp
inc
or
pop
fstpl
xor
aam
daa
fstl
sub
loope
xor
movsl
test
jp
mov
pusha
imul
mov
dec
cmp
pusha
and
cltd
subl
dec
ret
sub
xor
jno
sti
loopne
call
pop
or
fwait
xchg
xor
sub
mov
pop
call
mov
cwtl
cmp
pop
push
mov
ss
xchg
jl
int
add
loop
push
sar
stc
sarl
and
xor
cli
pop
xchg
cmp
outsb
jb
dec
ljmp
cmc
mov
decb
jns
dec
adc
sub
sub
xchg
adc
mov
gs
scas
xor
imul
inc
int3
fs
hlt
xor
pop
add
cltd
test
outsb
into
lcall
fabs
pop
out
jecxz
xchg
fs
loope
leave
xchg
add
mov
cld
cmp
xchg
and
adc
insl
xor
fs
or
push
dec
mov
push
dec
sub
jno
and
xchg
dec
inc
lahf
aad
dec
into
sub
xorl
movsb
cld
mov
add
pusha
ljmp
xchg
negl
ficoml
hlt
adc
sti
add
fisubl
jl
add
xor
data16
xchg
insb
jno
push
dec
pop
ljmp
mov
es
in
jo
insb
cli
testb
adc
test
mov
stos
insl
mov
in
pop
sub
push
jb
mulb
cmp
jnp
leave
pcmpeqd
xor
rcrb
xchg
jmp
pop
je
or
rorb
divb
jbe
cmp
fldcw
into
cmp
dec
scas
or
jmp
jae
push
cmpsl
sarl
push
paddq
scas
dec
in
sub
push
jecxz
fdivl
cmc
sbb
ljmp
dec
cwtd
movsl
jmp
fcmovb
jmp
pop
imul
sub
hlt
hlt
and
push
add
cwtl
js
xor
mov
and
aad
call
dec
cmp
and
repnz
hlt
repz
push
jbe
cmp
xor
or
xchg
or
or
xchg
adc
pop
jmp
jne
or
cli
or
shrb
cmp
mov
xchg
pop
pop
mov
adc
dec
xchg
jne
inc
rep
mov
lods
mov
sti
xor
dec
inc
cmp
dec
sbb
int
cmp
pop
xor
icebp
fs
pop
or
sub
pop
xchg
xor
adc
xchg
mov
add
ja
xchg
push
sub
inc
les
push
enter
dec
jne
fildl
push
jo
hlt
or
in
imul
mov
add
repz
mov
sub
inc
cmpsb
jp
or
stc
std
lods
fmuls
dec
inc
std
adc
fcmovu
adc
ret
in
sub
mov
mov
jo
loop
xchg
adc
test
push
pop
sbbl
jmp
sub
xchg
loop
xchg
divb
xor
stos
jecxz
mov
jne
jl
jecxz
in
cmp
outsb
in
enter
fsubl
pop
hlt
cmpsl
sub
aad
outsl
nop
inc
or
mov
dec
fucomip
mov
xchg
lret
dec
mov
fldt
sub
and
lret
mov
mov
bound
jo
jno
cmp
lahf
cmpsl
jmp
jmp
sbb
and
std
pop
push
mov
dec
mov
dec
sbb
push
cmc
das
xchg
push
fucomp
and
mov
dec
cmpsb
or
jmp
arpl
cwtl
sbb
push
lea
rcr
jns
cmpsl
add
add
lea
popa
inc
xchg
or
insl
cmp
or
adc
sbb
sbb
jne
adc
add
ss
ljmp
repnz
fisttpll
pop
xchg
sbb
in
and
sbb
popf
lret
out
test
movsb
inc
jle
leave
adc
clc
dec
mov
sbb
shll
pusha
adc
sbb
daa
mov
sbb
push
hlt
test
push
mov
insl
insb
pusha
xchg
push
stos
ljmp
cmc
xchg
cmpsb
stos
jae
pop
or
hlt
lret
pop
fdivrl
mov
aaa
sti
int
lret
mov
iret
inc
dec
aaa
fldt
push
and
add
and
push
dec
out
aas
loope
sbb
cld
pusha
cmc
into
xchg
mov
mov
and
je
femms
imul
or
adc
add
lahf
xchg
iret
lock
mov
mov
andb
sub
into
jo
or
sbb
pop
jmp
inc
or
push
pop
and
jo
jne
ss
mov
into
dec
jmp
mov
aaa
inc
cmpsb
xor
jb
adcl
mov
fmuls
into
xchg
or
stos
arpl
or
mov
das
popa
mov
xor
lret
cmp
xchg
mov
shrb
nop
xchg
roll
jmp
stos
adc
ds
call
stc
jmp
in
mov
repnz
and
xlat
iret
sbb
and
pop
jae
cmpsl
or
outsl
hlt
arpl
adc
cmp
mov
test
sbb
xchg
test
cmp
cmp
and
outsb
sahf
sub
fcomi
push
adc
lock
or
icebp
mov
mov
ret
mov
stos
push
nop
pop
cmpsl
pop
xchg
sbb
cmp
mov
aam
lret
sbb
dec
fdivrs
push
cmp
xlat
lret
pop
ljmp
fdivl
out
aas
loope
sbb
pusha
adc
out
xor
dec
cmp
add
mov
xchg
cmp
imul
loope
out
adc
or
push
pushf
or
xchg
cmp
sub
lcall
enter
shlb
idivb
orb
int3
divb
jnp
push
add
dec
sub
pusha
xchg
sbb
call
cli
mov
xchg
push
arpl
std
adc
outsb
adc
mov
shl
hlt
out
popa
adc
mov
fcoml
adc
mov
fists
mov
std
push
xchg
and
inc
movl
xchg
orl
rol
fldl
pop
pcmpeqd
mov
mov
outsb
pop
xor
xlat
dec
dec
in
inc
cmpsb
fwait
pop
pop
hlt
jl
fdivrs
lds
insl
xor
ja
mov
rcl
lods
xor
ja
fwait
lods
sbb
cmp
adc
lahf
ds
aam
mov
add
call
mov
jmp
cmp
xor
or
xchg
outsl
jmp
sbb
push
outsl
add
add
cmp
sbb
or
jne
xchg
roll
adc
pop
push
mov
jb
mov
frstor
jle
lds
xlat
add
add
cld
jb
jbe
push
shr
int
pushf
push
jmp
aaa
jnp
mov
mov
lahf
pop
mov
jb
or
ja
sar
jns
or
aaa
mulb
dec
adc
mov
pop
das
push
es
xchg
xor
fisubl
dec
enter
adc
mov
into
clc
ficompl
cmp
in
jmp
scas
je
dec
pop
aad
test
xchg
xchg
clc
sbb
aaa
jmp
stos
jb
mov
jg
ja
stos
mov
sub
mov
sub
xchg
enter
les
xor
add
add
add
push
lahf
or
jl
loopne
mov
cmp
test
mov
jecxz
test
mov
jno
push
jecxz
fs
je
jo
das
ljmp
dec
sub
das
jno
xchg
stos
jg
pop
xor
shll
arpl
stos
aas
mov
pop
into
fdivp
mov
and
adc
add
sub
andl
cmc
decb
jbe
in
mov
dec
inc
pop
je
call
cmp
sbb
jp
fcmovnb
hlt
rol
jp
dec
addr16
mov
mov
movsb
dec
push
sbb
lea
mov
and
fcom
shlb
mov
dec
test
ja
dec
pushf
xor
inc
pop
ss
mov
dec
dec
hlt
push
adc
mov
cmc
out
icebp
push
jg
mov
stc
add
xor
mov
leave
sbb
out
jb
adc
fldt
dec
mov
mov
shl
cmpsb
xor
andl
pop
pop
inc
fsts
aaa
rcl
clc
aas
test
stos
out
push
xchg
sub
aad
inc
out
jge
mov
mov
pop
add
je
ja
cmpsl
outsb
inc
sub
mov
stos
fnstsw
jg
mov
dec
repnz
jbe
lret
mov
push
push
inc
gs
int3
mov
js
out
pusha
loop
mov
out
lock
xor
lods
cmp
test
push
sub
shll
gs
push
imul
sub
aam
mov
jo
push
daa
cmpb
dec
dec
add
mov
add
testb
shll
in
push
mov
and
mov
outsb
es
arpl
inc
push
mov
add
repz
add
movsl
out
cmc
stc
mov
pop
jae
mov
inc
in
cwtl
mov
gs
in
rcr
xor
repnz
fwait
push
push
pop
pop
adc
adc
add
jb
ljmp
movl
test
mov
jle
mov
fdivr
addr16
cmc
pop
les
lock
mov
or
out
or
mov
and
rorl
movsb
lret
xor
mov
mov
sub
mov
cmpsb
pop
cmp
jnp
pop
mov
das
inc
mov
ljmp
jb
mov
divl
mov
sti
dec
xchg
imul
in
dec
in
sbb
icebp
aas
clc
rol
pop
or
add
push
cmc
cld
xor
cltd
and
sti
aad
adc
lods
aad
inc
push
xlat
jmp
adc
pop
int
outsl
loope
xchg
jge
pop
push
pop
les
ja
jp
call
sub
iret
shll
push
sar
aas
or
xchg
sbb
push
xchg
mov
popf
lretw
xchg
out
mov
dec
into
in
mov
test
push
mov
sub
sub
push
mov
pop
xor
mov
sbb
daa
int3
iret
push
sub
icebp
jecxz
mov
mov
mov
jmp
mov
adc
jmp
push
cs
mov
nop
mov
shl
fsubr
ljmp
das
je
outsb
sbb
push
mov
xchg
push
inc
nop
psubw
jl
stos
cwtl
dec
pusha
int3
shll
in
cmp
push
adc
fiadds
mov
scas
scas
add
add
mov
adc
hlt
sti
adc
ljmp
insl
sub
out
in
inc
adc
xchg
or
dec
test
outsl
and
sub
movsl
adc
add
sbbl
mov
fcmovbe
pop
sub
scas
jle
sub
mov
dec
mov
ja,pt
fwait
mov
sbb
mov
push
xorps
mov
lahf
sti
mov
cvttps2pi
pop
into
push
ret
cmpb
mov
int3
sub
stos
push
cmp
adc
jmp
pop
shll
int3
push
sub
sub
lds
ret
and
movsb
daa
adc
mov
xchg
and
pusha
iret
jge
pop
jnp
push
outsl
fldl
aam
or
and
scas
icebp
aas
imulb
dec
insl
aas
mov
call
gs
jne
or
lret
push
mov
sbb
fildll
and
mov
in
mov
adc
cmpsl
xorl
imul
cmp
iret
cld
shlb
les
adc
sbb
mull
sar
aad
jb
inc
jnp
inc
fisttpl
testb
xchg
rolb
xchg
push
into
or
insl
push
inc
imul
dec
mov
leavew
add
xchg
cmpsb
inc
loopne
mov
push
enter
cmpsb
arpl
or
inc
mov
ss
inc
xor
dec
aaa
mov
mov
stc
mov
push
inc
loop
xchg
test
shrl
xchg
inc
cltd
xchg
fcmovnbe
mov
jae
andl
xor
lds
popf
inc
scas
cmc
dec
inc
ja
mov
cmp
imul
and
lods
and
popf
add
mov
in
mov
add
adc
mov
add
cmp
push
mov
mov
adc
scas
sub
and
call
jno
imul
roll
in
jo
scas
hlt
push
adc
mov
jl
sub
addl
shlb
in
mov
jae
push
or
mov
aaa
push
fcomi
or
sbb
mov
inc
adc
push
sbb
movsl
in
fisttpl
pop
xchg
lret
lahf
or
dec
test
mov
hlt
push
xor
mov
loop
dec
xor
or
ja
mov
push
xor
xor
push
inc
lods
push
mov
call
cmp
test
test
push
leave
jmp
jp
jmp
sbb
fwait
ds
cmpsl
jge
cli
imul
sahf
leave
jg
sbb
xor
mov
loopne
fsubrs
sub
push
leavew
negb
fnop
call
dec
bound
cmpsb
cld
sar
xchg
fiadds
push
and
cmpsb
cmp
xor
push
add
mov
out
jmp
in
and
decb
mov
clc
xchg
inc
cmpsl
int
popa
xchg
lret
and
les
aam
dec
jo
inc
mov
cmp
jmp
lret
insb
insl
out
mov
mov
mov
in
das
out
lcall
push
negl
ss
mov
add
xchg
ret
or
xchg
pop
lock
rclb
inc
mov
sbb
loope,pn
insb
test
enter
xchg
fsts
dec
jo
es
inc
les
cwtl
das
inc
cmc
inc
data16
pop
sbbl
xor
jecxz
sbb
inc
adc
int
pop
or
pop
cli
sbb
xor
mov
xor
add
imul
in
fidivl
ret
in
inc
jge
adc
push
movl
push
jmp
dec
add
std
inc
enter
mov
test
ret
sub
imul
es
dec
xor
inc
mov
fcompl
or
push
or
movl
inc
fnstenv
dec
std
jecxz
sbb
arpl
fdivl
jns
pusha
hlt
jne
xchg
shlb
pop
pop
or
or
les
mov
es
daa
mov
sub
xor
push
jl
push
lock
shl
dec
jmp
rep
xchg
loop
xchg
nop
mov
sbb
ss
jmp
xchg
aam
in
lahf
and
sbb
sbb
mov
test
jg
test
negl
xor
or
out
jl
push
ficoml
dec
stos
and
bound
std
sbb
fcompl
lcall
lods
pop
xchg
mov
subb
sahf
sbbl
or
sbb
pop
adc
push
sbbl
inc
xchg
dec
xor
loop
leave
or
fdivrs
pop
pushf
test
and
call
add
fnstsw
dec
dec
cmpsl
inc
lds
outsb
jnp
and
mov
rcrl
loopne
xor
lods
push
aam
add
xor
jge
pop
lods
mov
inc
xchg
jmp
cmp
aam
push
push
loop
mov
jbe
icebp
repnz
cmp
or
add
add
add
add
ficomps
inc
mov
cmpsl
fldl
push
icebp
cld
mov
roll
mov
fisubs
adc
mov
iret
push
ret
adc
mov
sti
pop
addr16
lret
inc
xchg
adc
fldcw
cmp
pusha
mov
testb
jecxz
dec
jecxz
pop
aas
in
jmp
gs
ffree
adc
shll
push
add
mull
lock
mov
push
lock
push
es
out
pop
cmp
leave
cmp
mov
fld
sub
ja
xor
ljmp
shlb
mov
inc
mov
jg
fadds
movsb
and
sub
mov
dec
cmpsb
mov
sub
pushf
cmp
pushf
lahf
xchg
sbb
cmp
sbb
inc
pop
pop
inc
inc
sbb
call
in
xlat
in
inc
popa
mov
inc
popf
xor
pusha
jg
or
pop
inc
xor
icebp
and
das
push
push
jns
push
stos
movsb
in
jg
dec
xchg
cmp
sbb
hlt
dec
sbb
mov
pop
and
push
xchg
add
xchg
int3
jnp
sarl
insl
cmp
sbb
mov
pop
dec
jnp
adc
lret
add
test
fldenv
insl
int
pushf
inc
mov
je
fmull
sarb
pop
inc
das
test
test
inc
pop
jmp
in
lods
outsb
xchg
pop
mov
xor
dec
dec
out
in
pop
mov
xchg
dec
push
xor
jmp
imul
xchg
jp
pop
imul
leave
negb
cmp
mov
dec
and
dec
dec
mov
xchg
ret
ret
jp
jnp
jmp
faddp
jne
mov
add
mov
lock
jo
cmpsl
add
adc
jne
js
push
cltd
and
adc
or
sbb
clc
mov
add
inc
adc
jecxz
sub
mov
jno
mov
inc
adc
rcrb
mov
jne
testl
cmpsl
inc
inc
and
mulb
std
xor
cmp
enter
xchg
cmp
outsb
sbb
outsl
xchg
mov
or
xchg
mov
xorb
mov
mov
mov
stc
mov
gs
push
ffree
fidivs
mov
pushf
fnstcw
mov
aaa
je
iret
jo
shr
ss
adc
ret
sbb
mov
mov
ds
popa
xchg
pushf
aas
push
dec
mov
bnd
cltd
jmp
push
mov
sub
mov
enter
mov
stc
pushf
xchg
push
roll
stos
test
jp
sets
lea
repz
pop
jno
jmp
push
mov
dec
pusha
hlt
sbb
mov
pop
test
mov
addr16
ljmp
sti
adc
in
popl
aas
cs
repz
cwtl
inc
lret
add
enter
jns
popa
subb
nop
mov
xchg
cmp
arpl
pop
cmpsb
sub
adc
dec
shrl
cmp
sarl
push
mov
add
jle
ss
sub
dec
sbb
xchg
pushf
push
fwait
mov
mov
scas
xor
enter
ljmp
cmc
or
icebp
sbb
pusha
test
xchg
add
clc
jo
inc
leave
sbb
int
mov
xchg
sub
sbb
mov
popa
nop
sbbl
mov
aad
movsb
cmp
or
cmpsb
fbstp
add
add
addr16
iret
imul
mov
daa
dec
and
stos
enter
push
mov
sub
dec
shlb
xorb
adc
push
pop
and
dec
xchg
stos
fisubrs
daa
cmpsl
dec
mov
movsl
xchg
hlt
inc
std
mov
in
jle
aad
xor
mov
mov
adc
test
inc
mov
ret
rclb
ret
ljmp
test
movsb
call
lock
dec
cmp
pop
outsl
mov
int3
rclb
cmc
jecxz
js
add
jmp
insl
add
arpl
in
push
adc
mov
nop
popf
jecxz
outsl
pop
adc
movsl
mov
les
cmp
sti
fs
lds
jb
or
jge
inc
fs
jbe
scas
je
jb
or
dec
lret
dec
shr
test
jns
adc
and
loope
dec
movsl
mov
cmp
rol
jl
adc
cmp
adc
cmp
fs
das
in
push
icebp
push
sti
or
lock
sbb
add
xor
xlat
adc
repnz
xchg
dec
hlt
loope
cli
ret
insb
cmpl
stos
jo
jle
clc
int
jg
or
int
clc
jne
test
hlt
in
jae
jecxz
rcl
sahf
adc
stos
xchg
sbb
fcomip
and
add
scas
fidivs
jns
cltd
icebp
xchg
push
sbb
push
mov
sar
and
lods
mov
aaa
ss
loopne
decl
dec
xor
lods
or
stc
cmp
jb
daa
std
jle
fcmovbe
lock
adc
xchg
hlt
add
mov
adc
mov
xor
adc
mov
test
in
or
outsb
and
movsl
jmp
sub
mov
icebp
and
pop
adc
inc
adc
sbb
sbb
push
and
fadd
scas
adc
and
iret
jl
dec
andl
inc
ret
arpl
xor
pusha
gs
jp
clc
insl
int3
test
push
add
das
mov
fs
cmpsb
imul
dec
push
test
mov
lds
xchg
push
lea
jge
sbb
insl
mov
rcr
out
pushf
mov
push
mull
shl
movsb
sti
and
jae
aad
rcr
mov
loopne
hlt
fwait
loopne
lret
ret
lret
ret
or
sub
int
and
adc
adc
test
inc
std
pop
mov
sub
mov
insb
out
mov
iret
pop
and
adc
adc
pop
filds
std
cmp
xchg
jge
shrb
leave
add
addb
pusha
icebp
adc
xor
subb
mov
sub
js
push
jge
push
push
add
push
pop
and
out
mov
inc
lock
icebp
mov
adc
movsb
test
inc
jno
mov
mov
aas
mov
cmp
es
rcll
xchg
xor
loopne
rol
add
add
sub
pop
mov
jne,pn
and
pop
push
mov
jae
out
bound
faddl
enter
mov
push
repz
xchg
dec
movsb
adc
mov
push
jb
insl
pop
test
in
test
mov
sti
vmovntpd
sarl
repnz
imul
xchg
cltd
mov
push
jl
rcrb
sbbl
in
into
lret
scas
jo
push
xor
fcoml
push
sti
sti
adc
xor
ror
lret
mov
aad
mov
cmp
mov
cmp
fistpll
jge
add
dec
inc
leave
mov
inc
cmpsl
inc
mov
ret
sub
flds
rcll
nop
clc
ds
int
or
mov
fnsave
fsub
mov
sbb
in
jnp
aas
test
jbe
ja
sub
pop
lods
xchg
adc
filds
lcall
jmp
sahf
and
add
scas
inc
and
scas
lods
sub
mov
xor
int3
std
fiaddl
out
mov
fucomi
rcr
adc
xchg
pusha
inc
ficomps
lea
push
sbb
pop
xchg
pop
nop
lods
mov
cli
mov
sub
add
pop
jl
jns
mov
fdivl
out
mov
ret
sub
or
imul
sub
push
test
or
test
dec
ss
mov
lret
xchg
test
fbstp
subb
xchg
inc
cmp
ss
int3
pop
jnp
mov
push
jne
pop
dec
jmp
bnd
xor
std
ja
add
lds
jecxz
xchg
out
or
pop
pop
jg
xor
sahf
data16
outsb
adc
jnp
shrb
lret
stos
enter
mov
das
mov
push
ret
testl
dec
jo
lret
fisubrs
mov
cmpsl
lods
xchg
testb
inc
adc
negb
sub
cld
mov
xor
or
into
and
jno
pop
outsl
inc
mov
ljmp
stos
sahf
cmpsl
call
ljmp
xchg
push
insl
push
xchg
loope
add
into
jmp
dec
inc
mov
cmpsb
js
adc
or
mov
loope
sbb
scas
xchg
sbb
mov
inc
add
outsb
or
jo
mov
cwtl
pop
pusha
mov
xor
std
push
pop
mov
or
pminsw
mov
xchg
into
xchg
lret
lods
pop
cwtl
jmp
push
dec
pushf
enter
and
rcrb
cwtl
or
dec
aam
pushf
jae
adc
push
popf
movl
scas
xchg
in
jp
add
mov
test
xor
xchg
outsl
inc
loopne
add
adc
xor
push
sti
out
mov
adc
pop
dec
shrl
mov
fs
stc
je
notb
xchg
or
cld
mov
cli
jae
mov
push
or
cmp
lret
stc
add
sbb
ss
jg
sti
sbb
insb
sbb
leave
push
decw
push
shl
mov
mov
sub
cs
cmp
mov
insb
inc
sub
jno
xchg
pop
pop
xorb
mov
mov
std
int
pusha
ret
or
shrl
xor
cli
stos
outsb
das
into
adc
xor
scas
xor
lds
bound
push
mov
jecxz
cltd
cld
dec
rorl
mov
into
aam
cwtl
data16
sbb
fadd
cli
in
inc
ror
mov
mov
fwait
orl
test
mov
adc
add
lods
mov
out
in
add
out
pusha
ret
testl
loope
insl
pop
popa
jne
repz
lret
jl
pop
std
addr16
cmp
sbbl
sub
jno
add
arpl
cmp
jno
adc
mov
ds
ljmp
je
pop
mov
adc
test
in
aam
pop
mov
add
dec
and
int
dec
mov
sub
rorb
ficoml
loopne
addb
mov
push
jecxz
vpinsrw
int
or
roll
repz
fildl
pop
cli
scas
pop
dec
or
in
add
and
adc
push
je
daa
sbb
xlat
inc
push
test
cld
ja
mov
stos
pushf
mov
jecxz
outsb
jb
jmp
decl
ret
lret
dec
push
push
arpl
or
imul
js
aam
push
xchg
hlt
xchg
xchg
stc
pop
ja
fmulp
xor
into
push
fbstp
or
add
add
cmpsb
xchg
outsb
xchg
mov
sbb
jnp
dec
aas
addr16
push
lea
clc
into
lret
inc
pushf
mov
add
lds
lea
adc
rclb
daa
add
cwtl
out
lahf
sbb
cli
dec
cmc
mov
lods
xor
mov
lahf
mov
or
dec
pop
fidivrl
adc
sti
cmpsl
in
ljmp
xchg
and
or
fisubs
scas
ret
or
push
sbb
pop
cld
jmp
mov
push
aas
sahf
jbe
jp
insb
and
vpshlb
dec
cmp
cmp
cwtl
dec
inc
fldl
hlt
inc
jns
insl
adc
sti
inc
adc
pop
push
dec
push
loop
cmp
dec
aad
mov
sub
ljmp
das
xor
lcall
std
adc
dec
jmp
ja
jmp
jl
adc
mov
jl
sbb
jl
fwait
add
adc
mov
add
mov
lret
pop
mov
lahf
dec
dec
xor
push
iret
mov
mov
inc
xor
daa
lods
fcmovu
pop
xchg
in
mov
cmpsb
mov
fnstenv
sub
push
jns
lcall
cmp
xchg
jo
scas
insl
sti
dec
xchg
cmp
js
orb
and
nop
arpl
mov
insb
daa
xor
leave
add
or
mov
push
imul
aad
inc
xor
nop
pop
clc
adc
mov
cmp
sub
in
dec
ja
mov
xor
orb
or
sub
cmp
mov
test
jmp
jecxz
jp
test
in
stc
jmp
dec
jge
xor
out
nop
addr16
iret
cmpsb
cld
mov
lret
mov
push
dec
loope
xor
xchg
addr16
ds
lret
add
sbb
mov
jo
inc
mov
lea
hlt
mov
test
inc
pop
dec
nop
push
mov
or
ss
stc
jb
js
sarb
int
push
jns
mov
jp
roll
adc
mov
jecxz
xchg
adc
lret
xor
or
dec
push
int
xchg
lret
scas
rorl
push
insl
xchg
int
in
ljmp
add
or
and
lods
fcoms
push
sbb
add
fwait
enter
test
sti
mov
jo
add
pushf
push
jge
pop
add
mov
inc
xchg
pop
test
sahf
or
xor
push
outsl
addl
push
mov
subb
addr16
jle
mov
cmc
insb
addr16
jnp
in
jo
fs
in
xchg
mov
aas
xchg
imul
aam
enter
and
cmp
xchg
cmp
or
sbb
fdivrl
adc
fidivrs
inc
faddl
inc
lds
jecxz
jge
sbb
ret
andl
pop
mov
ljmp
and
sub
cmpl
je
js
jne
add
shll
imul
fcmovb
lcall
cltd
out
pop
xor
jb
nop
loop
cmpsb
jecxz
call
leave
cltd
xor
out
rorb
adc
and
push
and
inc
addr16
xor
sbb
or
enter
mov
push
mov
fistpll
lods
out
dec
std
ret
mov
jbe
jg
dec
stos
icebp
mov
leave
push
enter
mov
addr16
je
xchg
mov
jle
inc
or
dec
int3
ret
push
jmp
sbb
inc
repz
pop
xchg
sbb
es
sub
sbb
adc
pop
jecxz
mov
mov
add
cwtl
aad
add
loop
mov
or
loop
aaa
push
test
xor
inc
or
jo
cmp
sub
mov
pushf
imul
es
and
divl
loop
jo
cmc
arpl
fstl
add
xchg
mov
ja
movsb
neg
or
cmp
pop
xor
hlt
fisttpl
lds
faddl
rclb
push
movsl
idivl
ficoml
jmp
jbe
int
insb
hlt
jmp
mov
aam
outsl
mov
fbstp
mov
test
movsl
add
push
insl
or
push
cmpsl
and
pushf
imul
mov
cmp
mov
gs
xchg
pop
ficoml
or
inc
lahf
inc
adc
mov
hlt
cld
mov
mov
mov
push
in
ja
sbb
jns
jno
int3
je
iret
dec
popf
je
cmp
es
lcall
sbb
jge
and
push
mov
dec
push
or
jne
mov
pop
cmc
out
movsl
xchg
daa
pop
fistl
insb
movsb
sub
scas
daa
jecxz
inc
sub
jno
cmp
arpl
fiadds
adc
fcomps
imul
fs
test
mov
lods
xchg
mov
loopne
shll
xchg
loope
scas
inc
mov
cwtl
stos
loop
xchg
scas
sbb
and
ja
mov
pop
and
sub
add
cmc
cmpsl
xlat
push
ds
pop
push
cmp
sbb
data16
loop
movsb
popa
fistps
enter
mov
lods
enter
and
or
pop
cmc
add
pop
int
inc
lods
es
or
hlt
mov
fwait
mov
fisttps
or
sarl
add
mov
repnz
cmp
int3
sbb
pop
stos
outsl
sbb
loopne
iret
push
or
mov
jle
mov
out
imul
pusha
mov
ja
stos
movsl
mov
in
xchg
push
in
add
push
int
mov
imul
loopne
mov
mov
notb
mov
aad
ds
mov
shrb
sbb
aaa
pop
imul
pop
inc
popa
mov
mov
iret
mov
fdivl
iret
cmp
inc
lods
insb
outsl
mov
fnsave
mul
xchg
mov
je
cwtl
add
out
addr16
imul
mov
push
cmp
inc
cwtl
push
jns
cld
rolb
int3
jbe
into
jg
sar
in
mulb
sub
push
clc
sbb
out
mov
in
push
sbb
fisttpl
sbb
mov
sarb
outsl
mov
jecxz
xor
inc
push
imul
iret
dec
cmc
mov
xor
jmp
mov
pop
jecxz
daa
mov
scas
jae
mov
call
arpl
insb
cs
xchg
push
popa
push
xchg
jge
addr16
mov
in
xor
mov
aas
mov
inc
fwait
mov
std
lret
int3
push
cmpsb
dec
mov
jcxz
add
aad
jp
sbb
mov
inc
roll
or
iret
pop
insb
or
add
clc
mov
push
jno
and
ret
clc
or
or
push
je
mov
jmp
hlt
popa
xchg
fdivs
jae
pop
mov
inc
add
add
adc
stos
mov
test
xchg
dec
xor
inc
lret
movsb
fimuls
fnstcw
cmc
sbb
sar
fwait
test
dec
cmp
mov
pop
xor
adc
push
sub
ds
xchg
inc
outsl
xchg
ret
xor
imul
imul
loope
pop
jae
xor
add
test
negb
and
gs
fisubrl
push
mull
dec
in
les
cmp
and
adc
mov
push
push
jnp
adcl
repnz
lcall
addl
adc
xorl
negl
push
adc
mov
icebp
out
ja
mov
mov
stos
and
mov
or
cmp
call
pop
sbb
into
mov
repz
push
and
sbb
je
xchg
cmpl
ljmp
sbb
sbb
mov
pop
push
and
test
cmp
sti
mov
dec
and
mov
pop
inc
fldt
inc
jne
or
push
push
xchg
sub
psubw
xor
shr
sub
fistpl
fisubs
mov
dec
popa
pop
mov
lods
lods
sub
andb
imul
cmpsb
lods
test
xchg
xor
mov
test
sti
pop
sbb
fbstp
lret
int
adc
adc
adc
shll
lea
jmp
push
or
daa
add
sar
loop
and
inc
xchg
inc
mov
dec
dec
popfw
je
jge
hlt
jmp
lahf
lea
mov
push
mov
rcl
mov
and
or
adc
lcall
add
out
mov
shlb
mov
fs
cmp
cmpb
lea
jne
pop
mov
mov
cmp
cmp
call
jae
xor
pop
mov
cltd
outsb
fcomps
test
push
dec
test
lea
add
mov
pop
in
push
movsb
stc
jl
mov
add
jne
push
xacquire
cltd
mov
inc
sub
mov
mov
cmp
outsb
add
andl
pusha
popf
xor
test
icebp
sbb
jbe
pop
mov
out
mov
pop
cmc
sub
adc
lahf
push
mov
mov
mov
xor
mov
lret
addr16
hlt
push
aaa
addr16
pushf
icebp
jne
test
insb
fstpt
xchg
aaa
mov
ja
mov
mov
mov
mov
and
adcb
in
dec
loopne
les
pop
jnp
sbb
lcall
jecxz
xchg
arpl
adc
jecxz
aad
xchg
nop
sbb
sbb
in
loope
sbb
add
xor
cld
loopne
pop
dec
out
adc
jns
xchg
imul
inc
jbe
adc
mov
lock
fsts
or
loope
clc
push
jb
lret
rcrl
jmp
xchg
bound
dec
add
add
dec
inc
adc
cwtl
pusha
inc
in
stos
leave
mov
jb
pushl
push
mov
cmc
es
shl
dec
dec
dec
adc
inc
ret
mov
xor
clc
pop
dec
ret
int3
subl
int3
pushf
shll
addr16
pop
ss
cs
fmull
lcall
sbb
gs
lret
das
wrmsr
cmpsb
lods
arpl
or
jmp
jl
ret
dec
jg
add
sub
and
popa
pop
sub
hlt
sti
push
adc
add
cwtl
pop
xchg
ret
aas
xlat
dec
in
cmpl
dec
cmp
cltd
std
cmp
fs
rcl
push
inc
inc
enter
popa
add
mov
or
xlat
xor
lds
adcl
insb
xor
jne
mov
inc
add
out
cltd
xor
das
cmp
les
sbb
ljmp
push
cmp
xlat
pop
pop
sub
jbe
int3
ret
or
testb
ss
cmp
xchg
xchg
out
fsubr
cwtl
mulb
dec
lcall
popa
movsl
xor
aad
pop
sub
mov
xchg
pop
mov
fisttpl
mov
addb
in
pop
stc
fsub
mov
mov
shlb
sub
push
dec
push
mov
outsb
mov
jle
xlat
fldt
mov
pop
push
adcl
cltd
dec
xchg
mov
inc
add
sbb
stc
sbb
inc
call
shl
push
rorb
repz
int3
jne
xchg
jp
jmp
pusha
cmpl
and
mov
add
sbb
jns
addb
mov
inc
cwtl
sub
jb
das
outsb
inc
push
mov
mov
sbb
sbb
sub
push
lret
leave
lds
mov
mov
repnz
jle
mov
and
sti
xchg
loop
lret
sbb
fwait
push
xchg
scas
lret
mov
lret
shll
lea
add
push
aam
lret
jge
jge
jo
xchg
dec
xor
xchg
adcb
inc
in
movsb
les
jns
adc
and
ja
inc
arpl
xchg
and
xor
aad
xor
cs
pop
hlt
mov
xor
xchg
mov
cmpsl
dec
imul
sub
adc
xor
fisubl
jl
stos
fsubl
inc
jecxz
mov
dec
jns
jb
clc
ss
jmp
jbe
dec
jge
push
sub
inc
notb
push
jl
dec
mov
mulb
rcrb
dec
adc
push
dec
clc
imul
xchg
test
in
out
fwait
lods
loope
test
loopne
repnz
mov
jmp
in
repz
pusha
jle
mov
sub
add
jg
sbb
or
jb
aaa
idivw
fisubs
pushl
mov
or
cmp
test
mov
imul
pop
push
mov
xor
jg
sub
cmp
xor
xchg
cmp
out
pushf
and
adc
scas
dec
shl
push
mov
mov
nop
into
int3
mov
pop
xchg
les
in
pop
push
dec
cwtl
or
xor
cmp
push
test
insl
cs
cs
jle
sbb
clc
xchg
aas
lods
fbstp
xchg
pop
dec
push
push
das
mov
pop
fisttps
add
cli
sahf
mov
aas
add
adcb
lret
sbb
sahf
and
ljmp
cmpsl
mov
daa
stc
xor
jmp
sbb
out
call
mov
in
pop
ret
jge
enter
xchg
cmp
jg
mov
mov
or
push
jns
add
je
daa
cld
or
xchg
cmp
lret
ret
push
ret
scas
lcall
lods
cs
xchg
mov
sahf
cmp
cmp
add
fsubrs
mov
loop
sbb
int
js
test
push
pushf
sub
in
cmpsb
xchg
js
sub
inc
push
mov
inc
or
nop
mov
test
loopne
popa
cwtl
bound
into
decl
jno
ljmp
test
fwait
push
movsb
icebp
iret
pop
jl
inc
cmpsl
rcrl
insl
stc
or
add
addr16
enter
pop
dec
sub
in
jg
aam
andb
in
xor
lret
nop
cld
mov
fwait
in
loopne
inc
dec
clc
cltd
dec
dec
ljmp
mov
pop
cli
ja
mov
jo
inc
pop
fmul
pop
xor
add
mov
arpl
jbe
jne
lret
movsb
lret
xor
xchg
or
xor
ja
mov
pushf
jne
popf
jge
mov
test
imul
pop
cmp
dec
xor
jmp
es
loopne
cmpb
in
mov
cs
frstor
sbb
cmc
mov
je
daa
add
xchg
jmp
cwtl
mov
out
jns
hlt
outsl
loope
xchg
mov
xchg
jecxz
fisubrs
out
xchg
jno
xchg
lods
out
in
outsl
pop
sbb
jp
mov
add
out
mov
je
xor
mov
mov
pushf
jle
xchg
sub
inc
adc
inc
or
mov
btr
enter
mov
add
mov
xchg
insb
iret
and
stos
adc
mov
xchg
aad
arpl
xchg
cwtl
mov
pop
xorb
jne
dec
adc
xchg
sbb
add
jmp
lahf
pop
and
push
xor
or
lods
mov
decl
xor
jmp
xor
mov
fsubl
fisubl
gs
and
popf
and
enter
test
sub
pop
mov
stos
aam
xor
mov
xchg
insl
popa
sahf
inc
mov
push
and
pop
repz
test
repnz
dec
out
lret
inc
icebp
push
or
or
rcrb
pop
add
test
icebp
add
push
pop
stc
sub
push
std
in
stc
insb
lock
dec
clc
cltd
pop
sbbl
in
sub
jle
sub
or
and
in
jg
aad
sbbl
shrl
leave
jno
pop
outsb
fsubp
adc
mov
add
add
xlat
popf
push
jl
dec
inc
sar
into
jmp
xor
fsubs
push
mov
push
lock
jae
rorl
jae
hlt
mov
cmp
test
add
pop
std
push
and
dec
fisttpll
adc
push
cmp
fisubs
mov
ja
sti
mov
xor
fadds
and
lcall
shlb
xchg
ficoml
iret
loopne
fisubrl
repnz
jmp
fistps
jle
ja
loopne
fisubs
xchg
mov
in
sub
dec
xchg
int3
xchg
mov
stos
mov
fbstp
stos
or
test
xchg
pop
in
mov
btr
adc
pop
inc
int3
mov
mov
adcl
cltd
xor
mov
xlat
cmp
mov
inc
ret
push
sub
jb
in
cld
push
out
ja
jne
add
les
cs
gs
jne
loopne
or
in
mov
cli
adc
or
adc
pop
jl,pt
mov
push
cltd
inc
out
jne
add
or
dec
idivl
sti
mov
shrb
sub
mov
adc
jbe
clc
jbe
xor
pop
push
aad
adc
inc
xor
inc
add
and
cmp
or
or
add
push
mov
shll
and
jge
cld
cmc
dec
jge
loopne
mov
rcll
lock
cmpsb
sbb
sub
xchg
shll
sub
xor
cltd
mov
aas
adc
cmc
outsl
outsl
mov
and
outsl
in
add
mov
into
xchg
xchg
mov
movsl
pop
inc
adc
mov
mov
or
cmpsl
clc
cmpsb
push
test
xor
fidivrs
test
std
stos
call
mov
jmp
or
fmull
arpl
pop
pop
mov
les
sbbb
sub
push
sbb
dec
adc
xchg
data16
jg
cmp
addr16
ret
filds
pop
adc
mov
and
shlb
cld
shr
adc
inc
sbb
add
xchg
xchg
inc
scas
mov
xor
test
les
add
add
mov
lret
lcall
adc
xor
mov
jmp
mov
mov
inc
jo
or
jle
pop
adc
mov
mov
cmp
cmp
ret
xchg
outsb
addr16
adc
sbb
rorl
jl
mov
jae
lods
test
in
xchg
cmp
sub
xchg
insl
adc
xchg
mov
cmp
or
aad
rcll
cmp
lcall
sbbl
data16
int
lret
shlb
lret
xlat
xchg
sub
add
inc
mov
pop
cwtl
add
jns
add
in
mov
adc
call
jnp
enter
mov
add
test
das
arpl
in
dec
and
fisttpl
xchg
mov
mov
addr16
cwtl
mov
imul
test
fadds
cmp
scas
notb
adc
xorl
outsl
xchg
lret
mov
push
leave
in
test
mov
leave
and
fiaddl
dec
shll
sub
push
mov
or
ss
addr16
fisubl
ds
or
push
dec
ljmp
into
mov
or
test
push
enter
jns
mov
ret
dec
jl
insb
and
mov
sbb
loope
scas
xor
xor
in
or
inc
push
stc
jbe
stos
jns
in
jmp
fstl
xchg
push
enter
jbe
cltd
nopl
jle
lret
cmpsl
lahf
pop
pop
into
xchg
fwait
lods
leave
pusha
adc
cmpb
lcall
or
add
adc
jp
inc
mov
hlt
mov
shrl
or
push
lcall
scas
or
mov
jp
jl
dec
pop
rcrb
mov
push
hlt
bound
dec
jecxz
dec
popf
adc
dec
les
outsb
insl
sti
aaa
adcl
mov
cltd
lcall
je
mov
test
ljmp
jp
insl
pop
cmp
inc
ljmp
imul
rcrl
mov
outsl
cs
dec
xchg
sar
mov
movsl
jns
sub
fidivrs
insb
lea
sub
in
push
in
adc
cmp
repnz
mov
inc
stos
dec
dec
xchg
mov
out
xchg
fst
call
das
and
in
dec
out
xchg
les
paddq
adc
adc
xchg
sete
or
xor
int3
loop
and
adc
lods
psubw
dec
inc
lea
pop
and
mov
rcll
mov
cltd
pop
jno
mov
cwtl
dec
les
imul
jmp
repnz
in
repz
jns
xor
sub
mov
ja
cmpsb
pusha
push
stos
sub
fcoml
lret
repnz
push
or
into
jl
mov
xor
and
cmpl
mov
mov
pusha
mull
jmp
popf
xchg
jno
mov
mov
scas
xchg
popf
mov
or
shll
jne
mov
roll
fdivrl
psubq
cmpsb
or
cmp
push
out
add
out
jno
ds
sarb
fsubrs
das
int3
inc
test
mov
mov
mov
xor
ret
in
lea
sub
or
jnp
out
adc
dec
jge
int
jle
mov
in
mov
iret
pop
fisubrl
dec
testl
and
xchg
pop
and
hlt
ss
xor
push
xor
xor
push
loope
xchg
inc
inc
rol
jns
mov
movsl
push
dec
rcl
adc
pop
push
push
sti
hlt
jge
mov
xchg
cli
inc
or
xor
icebp
jno
jno,pn
into
cmp
sub
in
mov
inc
fstl
lds
mov
cwtl
cmp
mov
icebp
sub
movsl
pop
imul
push
imul
movsb
ljmp
stos
jne
mov
inc
lcall
push
iret
xchg
insb
lret
inc
jno
mov
lcall
jbe
lret
dec
addl
lret
adcb
sti
rorl
jbe
or
jno
xlat
mov
jne
stos
ja
mov
test
loopne
in
fcoms
sub
add
jae
jecxz
mov
int
jg
mov
ret
pop
pop
xor
xorl
lods
repz
push
jle
dec
jl
test
sarl
push
ret
push
push
xchg
and
xchg
enter
or
test
adc
je
leave
cmp
mov
push
push
adcb
xchg
mov
mov
cmc
mov
imul
rorb
push
lea
js
ret
jge
or
push
scas
sub
mov
in
mov
inc
push
hlt
lret
ret
lahf
nop
and
rcl
stc
sub
pop
mov
xlat
call
mov
pushf
je
out
dec
int3
adc
xchg
aam
repnz
js
loope
pop
std
jmp
adcb
cmp
popa
adc
int
std
xlat
pushf
mov
pop
adc
xchg
inc
mov
lret
mov
mov
adc
outsb
pop
pop
mov
mov
jp
push
int
inc
jae
add
mov
shr
inc
push
xor
out
popf
adc
scas
insl
mov
shrb
push
adc
insl
mov
dec
shrl
nop
add
iret
jb
cmp
push
fisubl
lds
insl
vhsubpd
outsb
xor
mov
cmp
inc
mov
call
pop
jecxz
xchg
daa
leave
mov
aam
icebp
push
inc
rcrb
push
movsl
cmp
into
leave
scas
cmpl
dec
jo
push
lea
icebp
pop
fisubrl
adc
out
fimull
lea
inc
icebp
shrb
std
xchg
pop
jns
add
lods
add
out
xor
daa
push
dec
or
aas
and
and
mov
xchg
push
daa
je
aam
lods
mov
out
in
mov
fistl
test
push
mov
test
xor
repz
in
jo
xchg
add
xor
pop
jmp
cmc
gs
arpl
dec
dec
sub
pop
adc
fsubrl
push
pop
push
adc
enter
mov
clc
inc
inc
add
sti
sub
mulb
cmpb
out
idivl
lea
sti
inc
mov
repnz
add
sub
or
pop
mov
add
xchg
sbb
lea
into
addb
sbb
jnp
mov
inc
je
int3
pop
inc
aad
mov
or
stos
das
iret
or
addr16
pop
push
outsl
fimull
int3
mov
scas
mov
push
fiaddl
xchg
sub
sbb
repnz
or
push
sti
mov
call
in
push
out
dec
add
lcall
imul
loop
pop
sbbl
cmpsb
sarl
push
dec
test
test
cmp
mov
pop
push
ja
popf
iret
std
or
xchg
insb
mov
or
hlt
mov
pop
add
stos
and
lds
xchg
adc
mov
dec
paddsb
dec
mov
sub
cmp
sub
inc
and
dec
sbb
fsubl
push
pop
mov
xor
imul
leave
push
adcl
xor
push
inc
sti
xchg
adcb
mov
mov
and
jle
pop
xchg
jmp
dec
and
clc
in
into
fbld
mov
fsub
push
mov
jl
push
jne
outsb
test
adc
cmp
insb
mov
push
or
mov
sbb
push
movsl
or
jl
sbbb
orl
in
hlt
addr16
xor
sub
xchg
mov
push
mov
sub
int
sbbl
cmp
push
push
xor
jge
push
xor
jmp
inc
mov
sbb
or
imulb
and
mov
pop
imul
leave
mov
imul
scas
mov
mov
out
mov
lods
sub
dec
cmp
dec
xor
aas
and
cmpb
mov
mov
dec
add
insb
lahf
in
jae
sbb
lcall
into
pop
frstor
aam
inc
xlat
loop
inc
mov
adc
cmp
mov
je
stos
and
xchg
add
loopne
add
xor
and
and
notb
pop
addr16
xor
shlb
gs
std
fwait
xor
xor
and
xor
sub
rol
lahf
clc
mov
pushf
rorb
mov
jmp
push
cwtl
shlb
loope
inc
and
lcall
stc
sub
shlb
pushl
les
sbb
add
ss
cmc
pop
mov
scas
movsb
push
pmaddwd
mov
movsb
pop
cmp
xchg
push
icebp
dec
push
scas
mov
in
pop
jmp
das
sub
adc
lret
fsubrs
aas
mov
lds
icebp
lahf
and
dec
dec
scas
lds
push
lods
test
int
dec
dec
cmpsl
mov
jl
sub
xchg
push
adc
not
mov
negl
mov
cmp
imul
xchg
test
jbe
xor
enter
push
lcall
xchg
xchg
jg
mov
and
cld
xor
jg
push
enter
je
pop
pop
or
sbb
dec
push
daa
add
xchg
pop
mov
test
adc
inc
cwtl
and
mov
lcallw
and
jb
mov
lcall
adc
jbe
pop
lea
sub
or
lcall
push
pop
repz
lret
rcr
cmc
enter
cltd
dec
iret
inc
mov
in
mov
cmc
jl
inc
sbb
xchg
inc
das
iret
out
pop
mov
in
scas
lods
sbbl
and
ds
mov
push
jmp
xor
pop
add
outsb
jno
xor
data16
jne
inc
fldt
sub
int
and
inc
lock
mov
mov
out
mov
xchg
mov
xlat
stc
mov
lods
lcall
and
aaa
stos
mov
in
xchg
mov
rorb
iret
add
and
jg
pop
scas
inc
sub
imul
sub
decl
add
inc
xchg
loope
pop
or
les
insl
insl
and
dec
ljmp
jmp
and
adc
xor
cmp
mov
xor
lods
jl
rcrl
out
cmp
push
jne
cmp
int
data16
pop
xor
push
addb
pop
push
add
xchg
push
add
stos
mov
pop
mov
leave
mov
fisttps
std
pop
push
outsb
xchg
dec
imul
scas
jmp
les
cld
rep
insl
daa
sti
inc
repnz
dec
sbb
or
dec
push
inc
dec
imul
xor
mov
mov
mov
in
enter
clc
fwait
je
mov
in
shl
in
pop
int3
nop
rorl
adc
or
dec
mov
in
jo
lahf
cli
arpl
scas
dec
leave
repz
add
fistps
mov
ffree
gs
outsl
jle
lret
or
jcxz
arpl
push
xlat
repnz
cmpsl
movsl
mulb
inc
xor
sbb
mov
out
adcl
sub
inc
jo
dec
cmpb
iret
jp
rolb
sbb
iret
ret
push
dec
lock
adc
dec
shlb
cmp
cmp
push
mov
seta
sub
sbbl
pusha
jo
leave
inc
ret
shl
dec
ljmp
mov
cmp
sbbl
jae
fwait
int3
shlb
xor
cmpsl
mov
xor
cmp
sti
mov
add
test
in
into
lea
pop
adc
mov
inc
into
in
jle
jns
xchg
std
cmpsl
mov
xchg
sub
xchg
shlb
dec
adc
leave
imul
gs
call
outsl
push
subb
and
ja
fs
sbb
mov
push
mov
test
xchg
mov
and
mov
lock
fsub
inc
lret
or
inc
lret
inc
push
inc
in
bound
sub
and
and
imul
hlt
es
push
movsl
and
pop
adc
lods
inc
lods
outsb
daa
dec
sbb
popa
sarl
imul
negb
mov
gs
sbb
ja
stos
jae
sub
divb
movsb
pusha
add
stos
xorl
mov
mov
rcrl
xor
xor
out
xchg
test
adc
lods
in
ret
or
push
icebp
or
and
in
jns
and
cmpb
inc
mov
xor
add
outsb
ret
sub
gs
add
cmpsl
sbb
adc
movsl
pop
inc
xchg
pushf
loopne
push
dec
ret
xchg
add
aad
xor
outsl
sarl
inc
sub
dec
mov
stc
cltd
mov
add
lea
pop
mov
out
mov
jno
daa
sbbl
mov
adc
fidivrl
pop
mov
pop
pop
adc
aaa
nop
pop
push
mov
pushf
ficomps
int
sub
pop
test
rcll
lods
sub
ret
push
cmc
out
push
mov
cmp
pop
sub
xchg
xchg
lock
cmpsl
fmuls
arpl
stos
loopne
mov
xlat
and
mov
sub
sbb
xchg
jnp
movsb
ja
pop
enter
lds
sbb
or
pop
mov
test
aas
xchg
dec
add
sub
mov
outsl
int3
insb
imul
xchg
adc
rorb
cmc
testb
and
int
cmp
into
mov
xchg
sbb
es
cmp
lods
adc
fsubs
or
jnp
mov
mov
pop
popa
test
shlb
pop
jno
dec
mov
pop
stc
jnp
dec
xor
jmp
sbb
cli
scas
outsl
nop
cmpsb
fcoml
pop
mov
cli
push
mov
dec
insb
out
push
sub
mov
mov
sbb
or
mov
mov
or
hlt
cmpsb
push
push
xor
sub
bound
jns
pop
or
addl
mov
imul
mov
insl
test
in
cmp
pop
sub
test
sub
and
push
add
or
dec
loop
call
rclb
xor
pop
add
cmp
scas
sbb
sahf
pop
movsb
repnz
pop
gs
and
dec
rolb
icebp
dec
push
stos
dec
or
add
cmp
and
ss
cli
cmp
scas
jge
outsl
pcmpeqd
dec
add
cmp
jge
rorl
push
push
inc
xor
jl
clc
sub
call
hlt
mov
push
and
fs
gs
iret
sub
xor
pop
mov
movsl
mov
push
push
mov
xchg
arpl
out
ficomps
es
push
add
jl
stos
rcrb
loop
cwtl
or
sti
shrb
jns
jl
repz
xchg
into
cs
in
push
mov
jnp
enter
rorl
insb
jle
adc
pop
call
sbb
jle
mov
jbe
mov
sbb
xchg
cs
repnz
fs
xor
jge
mov
test
mov
stc
lea
cmpsb
aaa
sub
testl
int3
ret
jb
cmp
leave
cwtl
in
enter
movl
mov
and
push
iret
in
jge
in
into
daa
addr16
fnstsw
sbb
mul
pop
inc
mov
arpl
das
ss
loopne
adc
xchg
imul
pop
push
mov
jge
mov
jb
and
adc
ret
dec
adc
adc
jne
aam
test
pop
adc
and
sbbb
int
xor
inc
push
sub
cli
aaa
push
and
add
vpmulhuw
insb
into
jb
mov
aaa
cmpsl
jle
add
sub
out
std
imul
sub
jmp
adc
and
fsubp
sub
jns
test
cmp
cmp
xchg
shrb
cmp
push
add
mov
and
or
cltd
cmp
sub
adc
lock
cli
inc
inc
mov
sub
adc
pop
dec
mov
icebp
sub
jg
andb
jno
or
ret
movsb
lret
leave
flds
xor
fcmovnbe
mov
aad
incl
daa
cmpsb
jns
xor
ret
dec
sub
ret
or
jl
push
or
adc
popa
in
jbe
in
movsl
and
bound
xor
sahf
pop
push
cmp
push
xchg
dec
je
pop
fistpll
push
lcall
mov
loope
call
inc
mov
fldl
icebp
cmp
xor
push
mov
stos
mov
int3
cmp
lods
lea
adc
dec
pop
mov
add
mov
add
dec
iret
xor
enter
pop
test
lock
inc
dec
scas
inc
out
cmp
inc
imul
jno
ror
xor
lods
push
bound
mov
out
outsl
inc
dec
fistpll
shr
pop
xchg
jnp
dec
push
pop
sub
leave
fisubs
push
loop
add
add
addr16
ss
xlat
jbe
jl
inc
mov
cmp
xor
jp
ljmp
dec
faddl
inc
jbe
xor
xor
cmp
sbb
imul
fcomps
out
cmpsb
insb
push
or
in
or
addr16
gs
pop
inc
jg
lcall
std
pop
jno
xchg
push
aad
insl
xor
hlt
es
jno
jmp
icebp
addr16
push
mov
mov
stos
std
push
jo
pop
jno
pop
lahf
push
push
mov
mov
add
add
jmp
outsb
popa
pusha
je
aaa
cwtl
lahf
jge
jo
je
xlat
shl
or
dec
inc
push
clc
inc
adc
out
cwtl
dec
mov
test
sarl
and
ret
int3
jmp
shrl
push
cwtl
and
adc
mov
icebp
incl
sub
pop
sbb
dec
lret
iret
xchg
icebp
lret
cmp
pop
sub
adc
lahf
int3
arpl
sahf
cmpsb
lahf
fsubl
jb
xor
lods
jecxz
ret
andb
mov
aas
cmp
sub
mov
cmp
and
nop
mov
xchg
jle
xchg
sbb
popa
mov
jb
fadds
fsubrp
or
jb
xor
subb
shll
push
insb
xor
lcall
sti
sahf
test
iret
jle
pop
xchg
or
jnp
mov
and
pusha
sti
mov
sbb
outsl
dec
ds
sbb
cmp
lds
sti
popf
cwtl
repnz
mov
arpl
in
idivb
jge
sub
fiadds
test
add
cmp
cmp
mov
lea
fmuls
lret
mov
sbb
dec
outsl
pop
nop
sti
cwtl
nop
mov
shl
push
imul
push
mov
cmp
and
call
pop
sbb
les
push
scas
inc
sub
dec
test
inc
mov
mov
cmp
hlt
sbb
cmp
das
pusha
pop
pop
push
mov
test
fisubl
xchg
gs
scas
pusha
add
imul
in
inc
add
or
inc
mov
jp
xrelease
xchg
addr16
sub
pop
cli
das
jb
jo
popf
loop
pop
mov
or
jp
mov
lret
cltd
in
adc
mov
stos
imul
mov
jne
es
dec
icebp
jb
arpl
mov
test
inc
test
add
in
jnp
lds
aam
xor
add
js
rcr
mov
stos
mov
jle
dec
xor
stos
lock
push
repnz
xorl
rep
adc
scas
rol
data16
mov
adc
ljmp
mov
outsl
icebp
xor
mov
jno
cs
enter
int3
rclb
jl
popf
sub
pop
das
outsb
push
adc
or
fnsave
mov
xchg
leave
gs
mov
pop
mov
sbb
inc
or
push
insb
out
mov
ror
dec
cmp
xor
inc
or
int3
cmp
lahf
push
sbb
stos
insb
loopne
inc
pop
sbb
add
cmp
sbb
add
jge
cmpb
push
test
or
adc
fstpl
or
add
xor
mov
fistpl
xchg
shlb
add
cmp
push
cmpb
mov
clc
lret
dec
mov
lcall
scas
xchg
ljmp
push
pop
inc
jmp
sbb
lcall
add
mov
dec
inc
ret
movsl
jnp
mov
mov
fiadds
jg
and
ret
lock
test
fcoms
popa
add
cmp
xchg
std
insb
mov
repnz
ja
push
mov
inc
push
or
jno
popa
or
rorl
je
sahf
sbb
cmpsb
in
add
push
shrl
mov
jg
xchg
ficoms
cmpsb
cmp
pop
inc
xchg
mov
pop
cli
mov
addl
into
int
jmp
lods
loopne
jb
mov
dec
adc
mov
call
xchg
jbe
mov
mov
sub
fcmovnbe
add
cltd
fs
fs
inc
and
nop
push
xchg
pop
xor
cmpsl
mov
mov
scas
inc
mov
das
fistpl
arpl
std
adc
xchg
es
lret
and
adc
inc
popf
and
jo
sbb
imul
out
add
push
lcall
pop
mov
cmpsb
jecxz
push
rcll
cld
xlat
push
aam
repz
dec
push
ja
jb
mov
xchg
setl
repnz
xor
xchg
mov
daa
pop
call
stos
das
hlt
xchg
leave
or
xchg
mov
or
or
lcall
inc
adc
adc
mov
ret
dec
scas
mov
mov
shll
mov
outsb
das
dec
fstpl
cmp
cmpsl
out
jp
xor
sub
sub
hlt
xor
fwait
movsl
jl
pop
and
sbb
push
cmc
movsl
in
outsl
ljmp
ret
pop
sub
pushf
cld
lods
arpl
add
cmpsl
xlat
aad
lds
std
jne
fcompl
clc
push
mov
mov
test
pop
add
int3
mov
rorb
les
btr
in
addr16
ds
neg
jbe
and
addr16
add
cltd
push
push
add
int
lcall
das
sub
repz
into
call
cld
sub
cli
push
jns
xchg
es
xor
jae
aaa
mov
cltd
and
fisubs
pop
push
jno
ficomps
cmpsl
dec
sbb
clc
jb
sbb
inc
mov
pause
out
insb
push
fdivrl
xlat
jmp
lock
test
mov
mov
movsl
adc
mov
sbb
neg
jge
cli
xor
lcall
iret
adc
dec
dec
fnstsw
sbb
je
stos
adc
nop
test
imul
or
jbe
lahf
or
pop
jecxz
cmpb
aaa
adc
jo
mov
jle
sbb
pop
and
popa
xor
push
push
lret
pop
iret
and
in
inc
mov
mov
mov
sub
pop
mov
outsb
and
push
add
dec
lods
pop
int3
in
jo
fs
test
daa
xchg
pushf
call
mov
clc
dec
and
into
enter
sbb
mov
xor
xchg
mov
popf
cwtl
addl
jbe
mov
add
add
andb
jb
xor
adc
fwait
out
clc
add
movsb
addb
pop
push
and
jbe
loop
dec
add
inc
push
jecxz
out
or
jp
gs
insl
jl
pop
imul
sbb
loope
sarl
jle
push
xchg
or
sbb
mov
cs
pop
fucom
pop
inc
xchg
popf
jle
and
pop
cld
fmulp
or
gs
clc
xor
out
dec
arpl
dec
dec
sti
mov
or
add
push
push
enter
jp
xchg
ret
xor
mov
and
ret
ja
fwait
testb
jp
imul
cmc
and
pop
mov
jb
inc
orl
add
mov
jge
scas
popf
push
std
out
in
lock
test
or
sbb
fcomps
lcall
sbb
ret
pop
cmp
jb
cmp
sti
mov
sbb
shrl
xlat
lds
addl
jno
cs
imul
cmp
jle
pop
mov
mov
data16
out
pop
scas
nop
mov
cmp
jle
push
nop
xor
pop
mov
lret
fmulp
mov
ret
cs
sahf
rol
pop
mov
adc
into
nop
into
mov
out
pop
xchg
jmp
adc
xchg
aas
adc
js
out
mov
into
ror
mov
int
mov
adc
sub
jne
sub
in
enter
rorb
xlat
mov
cmpsl
fmull
push
pop
pop
mov
jo
std
mov
or
mov
lret
loope
pop
xor
negb
or
inc
dec
fists
jno
rcll
mov
jl
jg
sbb
mov
mov
into
daa
jbe
jae
xlat
cs
mov
mov
fs
gs
xchg
or
je
shlb
pop
sub
out
and
push
mov
jp
in
pop
out
mov
xchg
popa
jg
push
rorl
aas
push
mov
cltd
dec
lods
xchg
pop
je
xchg
filds
dec
sub
xor
xlat
push
dec
ljmp
xorb
cmp
fmull
mov
addb
xchg
xor
jmp
sahf
add
sti
les
cmp
repnz
out
faddl
bound
movsb
xor
add
mov
mov
clc
xchg
xchg
xchg
out
lea
rolb
pop
cmpsl
mov
rorl
stos
xchg
in
das
dec
insl
sub
jb
sub
adc
lcall
push
jge
xchg
pop
rcll
mov
or
mov
cmpsb
decl
add
mov
arpl
sub
push
ljmp
dec
adc
or
push
mov
cmp
sbb
dec
ud2
sub
ja
mov
shlb
jae
testl
mov
daa
fucomip
imul
sbb
icebp
iret
mov
icebp
xchg
sahf
xlat
sbb
stos
xor
pop
xor
cltd
push
push
sbb
xlat
xchg
sub
pop
and
cmpb
test
andb
push
add
subb
clc
fstpt
pop
call
les
adc
adcb
mov
das
mov
dec
lods
mov
cs
pop
loopne
push
push
pop
orl
ja
or
push
jle
popf
pushf
mov
pop
movsl
outsb
gs
xchg
cltd
in
mov
or
mov
addr16
mov
sarl
cmpb
push
lret
push
out
gs
xchg
cmp
jne
push
int
xchg
cmp
pop
pop
mov
pushf
fbstp
jp
jnp
mov
loope
or
mov
nop
pop
sarl
das
insb
leave
sub
mov
daa
or
stos
test
xchg
std
mov
out
sub
aaa
insb
dec
enter
nop
jmp
pushf
pop
enter
int
add
cmp
dec
int
ss
movsb
js
arpl
cmp
sarl
lds
inc
jns
aad
xchg
test
lea
test
fucomp
fcmovb
enter
push
sub
cmp
dec
daa
hlt
sti
insl
jl
mov
int
cld
mov
in
icebp
es
addl
in
jo
dec
mov
test
mov
mov
test
mov
nop
rcrb
cmp
xor
cmp
jb,pt
pushf
mulb
aaa
pop
sub
xchg
rorb
mov
dec
mov
popa
fstps
aad
les
lret
sbb
sahf
mov
shl
arpl
sahf
lods
inc
iret
dec
push
mov
push
xlat
xchg
test
movsb
das
lret
iret
sub
out
je
or
cmp
dec
cmp
mov
xchg
in
hlt
lods
lret
loopne
cmp
fdivrp
add
outsb
call
lock
dec
push
sub
and
or
sbb
xchg
cld
mov
push
lock
sbb
jle
mov
sbb
pop
add
adc
mov
lret
and
mov
cmpsl
add
js
insb
data16
pusha
inc
mov
addr16
mov
frstor
dec
lods
dec
add
bound
or
cmp
outsb
mov
xor
mov
imul
push
sbb
inc
cmp
cmp
pop
push
fildl
mov
push
out
cmpsl
push
mov
js
adc
push
loopne
mov
adc
xor
inc
inc
subl
and
sti
aad
push
mov
mov
cmp
mov
aam
mov
or
cmc
jae
xchg
cmp
add
les
ret
outsb
movsb
mov
test
or
mov
subl
lahf
push
xor
test
or
stos
out
mov
push
jns
mov
sub
loopw
xchg
mov
push
sub
cmp
pop
mov
jl
imul
sahf
roll
pushf
ss
lret
cmp
xchg
shlb
idivb
hlt
adc
dec
movsl
add
or
or
jg
mov
add
mov
arpl
mull
pusha
mov
xchg
and
mov
dec
test
add
cmp
stos
pop
push
sbb
pusha
rcl
pop
movsb
das
int3
rcrb
sub
mov
movsb
xlat
icebp
fdivrl
test
aaa
cltd
jo
dec
xchg
push
jg
pusha
dec
cmp
mov
fs
add
cmpsb
sub
sar
push
jne
aaa
std
filds
popa
stc
add
mov
flds
int3
insb
rorl
mov
mov
or
push
int3
in
cld
xchg
xchg
adc
mov
inc
and
arpl
fldenv
sbb
hlt
adc
or
jp
lcall
int
addb
mov
push
std
push
push
int3
push
out
retw
inc
inc
pop
dec
std
stos
adc
push
or
adc
xchg
clc
pop
sub
xor
xchg
xchg
shll
ds
ja
jecxz
adc
pop
jp
pop
adc
xchg
std
pushf
fmull
test
mov
sub
stos
pop
rol
mov
sub
fiadds
adcb
push
fdivr
test
sahf
das
subb
das
imul
push
orl
aam
loope
cli
in
mov
es
outsb
mov
ret
leave
push
icebp
iret
and
jp
sar
in
addr16
xchg
test
sub
lret
xchg
insl
adc
sub
iret
mov
xchg
fst
jbe
push
xor
scas
fldl
je
pop
repnz
fisttpl
scas
sbb
pop
imul
push
movsbl
mov
or
scas
or
cmpsl
mov
adc
push
mov
jo
fwait
imulb
je
jae
test
xor
mov
push
mov
mov
sbb
dec
mov
lea
stc
sbb
in
lods
outsb
int3
and
daa
popa
sbb
aas
outsl
xor
xchg
pop
add
dec
xor
xchg
jns
sub
notl
xchg
xchg
pop
fisttps
jae
xchg
jae
push
popf
dec
inc
cld
ret
sbb
out
jmp
push
pop
xor
dec
add
pop
add
shr
cltd
lock
jbe
xchg
dec
mov
adc
pop
arpl
rcll
xchg
cmp
mov
mov
ss
adc
gs
jl
xor
icebp
iret
inc
sub
cmp
cwtl
loope
jne
in
testb
jge
jb
stos
mov
add
mov
ja
fists
scas
nop
aam
mov
sbb
dec
js
movb
insb
mov
push
js
cwtl
test
mov
clc
test
add
clc
dec
out
sub
aam
pop
inc
sub
dec
pop
mov
xchg
and
push
data16
pop
fistl
fld
xor
push
out
xor
mov
aad
sub
cmp
nop
xor
inc
cwtl
jg
mov
push
pop
xor
cs
ret
aam
push
xchg
pop
adc
jge
jb
cld
ret
pop
in
ds
add
jo
and
mov
inc
outsl
insl
fisubrs
xchg
inc
jo
adc
adc
dec
test
push
pusha
mov
bound
fincstp
loop
add
bnd
xor
xchg
adc
mov
adc
inc
push
cld
add
xor
cs
je
sbb
in
test
iret
mov
push
cmc
testb
lock
xorl
call
mov
les
ret
mov
sub
aaa
sub
rclb
out
sub
xchg
fnstsw
scas
sbb
adc
dec
pop
dec
rcl
les
dec
or
xchg
iretw
cmc
mov
daa
jnp
lahf
or
cltd
pop
fsts
sub
out
xchg
cmc
pusha
in
mov
jno
mov
pop
dec
or
ss
stos
mov
and
in
xchg
or
pop
int3
dec
mov
fwait
cmp
adc
out
les
sbb
lods
xlat
pushf
mov
adc
cmc
jle
std
inc
cmp
cs
cwtl
mov
inc
mov
popf
dec
and
cld
icebp
dec
jno
mov
xchg
jno
cltd
lods
push
adcl
pop
loop
xor
imul
dec
je
push
and
stos
pop
sub
xor
mov
rol
mov
nop
jle
repz
outsl
cli
sahf
jno
js,pn
mov
pop
mov
add
xchg
lods
dec
int
fucomip
xchg
and
aaa
outsl
loop
pop
cmpsl
retw
mov
into
pop
inc
dec
inc
and
and
fsubl
das
call
jle
nop
mov
pop
xor
xchg
outsl
in
in
mov
jge
jecxz
push
shll
mov
inc
push
insl
lret
in
sti
aas
frstor
movsl
jnp
imul
cli
jge
jne
and
pop
adc
in
in
cmc
in
js
mov
jmp
stc
adcb
addr16
adc
mov
scas
adc
pushf
push
std
rcr
adc
repnz
dec
push
sub
add
sbb
into
mov
jb
and
pop
imul
fwait
adcl
lret
dec
lds
sub
clc
fwait
cmp
mov
into
or
gs
incl
and
xorb
inc
pop
add
add
and
fmuls
jo
cmp
dec
push
mov
jl
adc
jg
cmp
pop
divl
daa
adc
adc
sbb
xor
adc
xor
pop
push
sti
popf
lret
aam
push
dec
mov
mov
pop
inc
stos
cmpsb
aam
push
push
push
insl
test
out
inc
cs
movsb
ljmp
jb
mov
adc
cmp
addr16
dec
arpl
data16
dec
cli
add
xchg
inc
cmp
adc
frstor
add
jge
sub
mov
pop
or
and
test
xchg
sbb
movsb
cmp
out
movb
mov
xor
mov
pop
mov
push
mov
xor
lea
sbb
ftst
xor
icebp
ljmp
add
mov
nop
push
in
pop
fdivp
jmp
fs
sbb
mov
ds
cmp
xchg
push
mov
jo
cmp
xor
cmc
repz
or
jae
mov
orb
lret
pop
xchg
dec
int
sub
scas
push
out
andl
cmpsb
and
icebp
or
jno
sub
add
in
jo
popf
add
sub
push
push
adc
repz
aaa
add
outsl
dec
out
bound
mov
inc
sub
xlat
insb
mov
loope
push
pop
leave
jns
cmp
xchg
xor
pop
or
cwtl
add
divb
pop
fsubrp
lock
mov
pusha
insl
cmpsb
jne
loopne
test
test
sub
mov
bswap
lret
fdiv
push
sub
sub
mov
jnp
mov
mov
jb
int3
push
mov
lods
sbb
outsl
pop
movsl
nop
xchg
cmp
dec
adc
mov
lcall
pop
arpl
stc
ljmp
inc
adc
mov
movsb
sbb
jae
rolb
aas
fcoml
push
or
mov
jmp
mov
ds
clc
sti
sub
scas
scas
shrb
xchg
add
mov
sahf
adc
xor
sub
decl
add
xchg
xchg
nop
iret
mov
cmp
sbb
pusha
push
aad
mov
push
add
mov
push
arpl
lods
cmp
mov
loop
pop
in
iret
insl
cmp
push
mov
sub
repz
cltd
or
sbb
xor
xchg
push
pop
dec
sahf
aas
out
inc
ja
or
and
in
adc
fisubrs
clc
inc
jnp
call
push
cmp
jmp
lods
push
adc
mov
fnstsw
lock
aas
xor
mov
shr
subb
icebp
es
dec
fwait
inc
jmp
or
inc
add
xchg
sbb
push
imul
test
outsb
adc
in
push
inc
xor
call
dec
inc
out
jl
iret
mov
and
roll
cwtl
inc
pop
jno
movsl
outsl
vpackssdw
add
push
sub
loop
jp
aaa
add
push
daa
in
mov
mov
into
or
ss
popl
dec
push
add
sbb
sbb
mov
rcll
in
aam
in
sbb
xchg
stos
dec
fwait
lahf
popf
sub
call
out
lea
mov
mov
sbb
mov
outsb
mov
das
stos
test
call
inc
es
inc
nop
arpl
insb
sub
push
dec
dec
cmp
lret
js
cmpsl
inc
dec
inc
gs
stc
out
and
sub
xchg
out
mov
test
add
out
les
jp
clc
sbb
dec
in
push
stc
clc
xor
add
rcll
pop
dec
cmpsl
fbld
imul
mov
xrelease
xchg
jp
or
or
pop
lock
sub
jl
gs
loop
xor
cmp
adc
mov
lcall
mov
or
filds
add
ja
push
rcl
pop
push
mov
rolb
imul
xor
mov
mov
scas
jne
mov
add
ja
pop
xor
adc
repnz
xor
in
pop
shlb
ss
insl
jne
mov
les
bound
ds
lock
add
call
dec
push
sar
aad
xorl
and
cmpsl
js
call
int3
jge
mov
pop
lcall
aad
ficompl
sbb
rolb
adcl
in
mov
push
jbe
xor
adc
fildll
mov
scas
jecxz
xchg
out
jo
xchg
xor
xor
stc
out
mov
addr16
shll
jl
dec
cltd
jle
leave
dec
lods
aad
fsubp
nop
inc
test
fs
xchg
inc
in
jecxz
mov
leave
inc
fwait
push
subb
lds
stos
int
pop
test
imul
mov
lods
into
out
in
xchg
lods
adc
push
sub
mov
and
jne
outsl
pcmpeqb
dec
and
or
push
sbb
pop
jnp
je
inc
stc
pop
xchg
pop
push
rorl
jge
lahf
xchg
pop
lahf
ret
cmpsl
mov
test
popa
jb
cmp
fwait
arpl
xchg
mov
sbbl
fisttps
in
loop
insb
pusha
lret
nop
cltd
mov
cltd
mov
fndisi(8087
xchg
mov
mov
sub
mov
fwait
cmp
xlat
cmc
popf
cmc
les
movsb
inc
xchg
adc
std
mov
dec
rcl
aaa
fwait
adc
mov
xchg
sub
jns
rclb
lock
sbb
sbb
jb
or
cld
sbbl
xchg
push
add
mov
push
in
mov
mov
dec
ds
xchg
insl
orl
mov
dec
mov
test
xlat
mov
adc
xchg
xor
or
push
frstor
sub
movsl
dec
xor
cmp
lods
popf
add
adc
xchg
outsb
xchg
xor
pmaxub
push
add
mov
jle
es
push
mov
dec
lret
jg
and
imul
lods
and
call
push
jp
movsb
mov
cmp
loopne
icebp
sbb
nop
int
in
cmp
mov
popf
jo
dec
aas
movsb
and
fadds
sub
add
jne
push
dec
push
lods
mov
jl
sub
mov
pop
ss
call
in
and
pop
push
fidivl
nop
add
into
mov
jmp
add
xor
stc
cmpsb
pmuludq
in
fmulp
repz
test
lods
stos
test
imulb
fdivl
rorl
pop
mov
test
aaa
jns
cltd
cmp
jbe
clc
into
iret
inc
int
arpl
pop
int
cvtps2pd
pop
and
addb
iret
loope
or
xchg
pop
sbb
push
ljmp
sbb
shr
adc
xchg
mov
dec
mov
aas
addb
adc
fs
mov
mov
cwtl
xor
cwtl
pop
popa
cli
and
sbb
pop
xchg
jbe
dec
ficomps
dec
data16
div
sub
jbe
fdivrp
add
mov
xchg
mov
scas
into
push
std
xchg
fs
gs
test
setge
filds
sti
sbbl
mov
adc
sti
aad
mov
stos
cmp
jge
adcb
xchg
insw
push
les
dec
jbe
or
lret
ja
lock
dec
out
ret
cmp
push
cmp
testb
pop
out
dec
sub
xchg
pop
fcompp
std
or
mov
xor
jp
inc
aaa
lods
sbb
jne
out
mov
in
ffreep
arpl
das
aad
adc
xchg
bndstx
aaa
repnz
fs
add
pop
xchg
fldcw
jne
mov
push
loopne
add
or
sti
leave
mov
adc
orb
loop
stc
sub
out
stc
cmpsl
pop
cli
decb
idivb
cmp
popf
or
imul
rorb
cmp
lea
push
adc
mov
adc
imul
shrb
ja
sub
push
xlat
orb
xchg
lock
call
lock
xchg
push
mov
or
lds
inc
les
xchg
pop
inc
xchg
push
inc
addr16
xchg
jg
movsb
aaa
rclb
bound
mov
or
stos
into
jno
nop
inc
jg
stos
les
mov
test
jl
push
and
mov
mov
dec
mov
stc
je
and
leave
jmp
bound
or
cld
cmp
aaa
pusha
repnz
xchg
cmp
pop
sarb
or
imul
idivb
adc
adc
repnz
adc
repz
xor
pop
inc
lea
xor
mov
add
adc
xor
push
inc
xor
dec
mov
add
jb
aaa
loop
push
lret
mov
ficoml
dec
imul
mov
or
add
icebp
xor
xor
pusha
mov
jmp
pop
and
imul
sbb
imul
xor
push
pop
sbbl
xchg
push
jae
or
es
xor
out
mov
les
xor
pop
cld
mov
add
xchg
repz
rolb
xchg
adc
push
jb
ffreep
push
fdivs
fsubrp
add
mov
in
addl
test
lods
add
and
adc
lods
jl
xor
scas
cwtl
jae
xor
inc
stos
arpl
xor
adc
lret
test
push
push
cli
mov
pop
push
mov
fiadds
mov
lock
lret
decl
pop
out
addr16
adc
imulb
adc
pop
or
mov
push
mov
jns
insb
movsl
push
and
sub
enter
and
bound
clc
je
outsl
xchg
iret
sti
movsb
dec
sbb
stos
js
inc
jle
popl
mov
pushf
mov
mov
xchg
aas
test
pop
cmp
cmp
xchg
jecxz
push
push
jecxz
push
test
outsb
mov
sub
dec
mov
movsl
inc
scas
inc
call
sub
jne
repz
lock
adc
inc
repnz
repnz
inc
jae
testb
stos
repz
into
xor
push
jecxz
push
hlt
mov
inc
sbb
mov
sarl
add
pop
cmp
pop
pushf
idiv
into
sarb
dec
jnp
arpl
push
mov
outsl
fisttpll
and
repnz
mov
add
push
and
mov
xor
lds
cmp
shl
mov
in
xor
jns
jp
cmp
pop
out
nop
fmulp
jbe
int
push
or
jo
pusha
fidivs
dec
pushf
lret
push
loope
test
jle
mov
jle
iret
jns
push
sub
pop
jmp
and
inc
xor
std
ret
das
rep
sarb
fmulp
jle
aad
into
mov
fidivrs
add
pushf
add
test
movsb
xchg
xchg
fmull
in
sbb
jl
jnp
cltd
inc
adc
popf
push
xchg
jno
adc
adc
das
jno
dec
sub
adc
jno
add
cltd
popa
push
pop
mov
outsl
adcb
and
test
add
mov
ss
mov
adcl
xor
mov
jge
mov
dec
jp
lret
ja
shlb
aam
adc
mov
sub
push
mov
mov
sub
mov
push
xchg
xchg
popa
xchg
mov
jl
inc
xor
pop
jne
iret
jecxz
fsubs
inc
rol
xchg
pusha
pop
jmp
push
or
pop
nop
dec
mov
or
es
je
jmp
test
dec
inc
lret
push
lea
fdiv
pushf
dec
bound
mov
adc
repz
or
cwtl
stc
scas
cmpsl
or
rolb
dec
adc
mov
xorl
sub
xchg
jae
sbb
popa
stos
imul
data16
xchg
add
roll
dec
hlt
lock
cmp
pushf
lret
push
addr16
ficoms
call
stos
xor
inc
mov
enter
jno
pop
sbb
imul
pop
push
dec
inc
sbb
mov
test
pop
js
mov
out
mov
gs
movsl
push
push
lock
rcrb
mov
ss
push
pop
loop
leavew
mov
test
mov
adc
pop
icebp
test
call
loope
lcall
adc
fcmovne
lret
aam
jo
push
test
xchg
lods
scas
std
mov
into
push
mov
mov
fdivr
fs
inc
xchg
sbb
imul
adc
in
dec
cwtl
jl
push
sarb
ss
push
push
jl
push
jb
cmp
sub
mov
cld
lods
adc
sbb
push
push
cmp
lods
rolb
into
int3
xchg
into
ret
fimuls
and
cld
dec
nop
or
and
mov
clc
leave
jns
pop
shrb
mov
adc
lret
pop
dec
dec
jae
fldt
jbe
aam
xor
dec
adc
pusha
loop
loope
adc
out
mov
xchg
adc
jecxz
inc
mov
movq
incl
or
or
xchg
xchg
pusha
dec
test
mov
and
xchg
clc
aas
and
call
jb
call
xchg
jmp
je
gs
imul
iret
push
lret
mov
adc
push
jb
or
push
mov
push
sarl
jns
sbb
movsb
jb
push
add
pusha
sub
pop
pop
sahf
and
or
outsb
fiaddl
cwtl
outsl
push
push
movsl
fnstcw
loope
cmp
test
jge
lea
frstor
pop
out
pop
xchg
cmpsb
movd
scas
or
sbb
popf
ds
add
sbb
mov
pop
arpl
out
fwait
jo
sbbl
or
shlb
mov
mov
pushf
adc
enter
shrl
jmp
mov
jns
dec
add
das
xor
popf
sub
sub
sub
mov
mov
test
jmp
xchg
imul
add
rorl
pop
pop
sbb
and
jle
sti
aas
cwtl
pushf
xchg
and
cmp
mov
mov
mov
mov
scas
outsl
dec
or
adcl
jecxz
out
xchg
push
stos
sub
mov
out
into
out
fidivrl
xchg
andl
outsl
nop
loop
mov
lcall
fdivl
mov
enter
icebp
cmpsb
mov
adc
cmp
aad
cld
gs
sub
cld
mov
and
xor
filds
fldl
jnp
push
push
jno
pop
jnp
aad
cs
test
mov
cmp
or
sbb
xchg
ss
mov
iret
lods
dec
jge
mov
insb
sub
jmp
mov
jge
xor
lods
lock
imul
psubsw
xorl
sub
or
movsl
test
mov
xor
bound
cltd
out
or
pop
cmp
and
outsl
fstps
pop
int
mov
pushf
dec
xchg
inc
and
out
aad
mov
fmul
inc
cmpsb
xchg
cmpsb
in
scas
out
outsb
or
lock
sti
adc
and
mov
sbb
call
lret
lcall
std
lret
jbe
rcrl
test
jb
js
push
pop
mov
mov
xor
dec
mov
test
int
pop
data16
mov
or
int
stos
push
out
dec
xor
insl
sbb
cmp
sarl
in
push
mov
stos
out
stc
cmp
adc
pop
mov
and
cmc
out
jnp
lret
xor
pop
mov
jne
mov
push
jns
fildl
pop
scas
xor
subl
jae
mov
sbb
and
pop
roll
adc
stos
xchg
mov
cmc
hlt
sub
jae
fucomi
addr16
cmpsb
call
or
add
mov
and
mov
inc
outsl
fisubrl
mov
mov
ss
sbb
sub
push
icebp
mov
cmp
mov
decl
jo
pusha
cmp
jle
add
pop
test
jns
inc
iret
sub
mov
ficompl
dec
xchg
movsl
pop
adc
pushf
mov
aam
shll
sub
mov
lret
inc
ja
jecxz
stos
push
andb
sub
sub
sbb
mov
dec
jle
inc
sub
cltd
call
fmuls
mov
mov
inc
fmuls
cltd
or
push
inc
sub
dec
dec
jmp
repnz
and
cltd
cmc
pop
dec
test
adc
fmul
mov
call
mov
enter
and
mov
add
xchg
xchg
and
cwtl
xor
icebp
cmp
ret
add
dec
and
js
mov
cmp
mov
push
pop
addl
jne
xchg
jmp
jg
or
xchg
insb
lret
mov
fwait
int3
sub
inc
add
jo
mov
jb
and
pop
popa
sbb
lcall
stc
icebp
mov
rorl
scas
mov
imul
jmp
xchg
lea
data16
daa
insb
test
dec
mov
neg
popa
mov
jmp
cmpsl
test
jg
and
inc
insl
jl
lret
jno
jl
nop
mov
cmpsl
cmp
dec
stos
fimuls
sub
scas
std
mov
cld
pop
popf
decl
push
mul
add
adc
ds
jl
sbb
jl
sbb
scas
add
mov
jmp
add
movsl
sub
xchg
int
xchg
add
jb
inc
inc
not
xchg
insb
mov
jp
fwait
cwtl
jno
popf
xor
lcall
xor
fsubrs
das
lods
xchg
test
fcoms
mov
imul
or
in
rcr
xchg
sbb
shll
mov
jecxz
es
rorb
xchg
leave
pop
xchg
cmp
out
rcr
cmp
sub
xchg
jg
jnp,pn
adc
push
bound
mov
adc
int
add
mov
outsb
icebp
imul
xchg
jecxz
inc
add
movsb
cmp
xor
fld1
mov
aas
inc
pop
jle
fmuls
stc
add
clc
xchg
test
arpl
jmp
mov
dec
push
inc
mov
inc
insl
cmp
sbb
stc
lret
add
cmovnp
pop
and
shlb
adc
jmp
stos
push
jg
int
ret
jg
add
dec
shll
pusha
mov
cli
in
bound
inc
push
aam
xchg
lods
test
xchg
cld
dec
das
mov
aaa
jg
jo
adc
xchg
lock
lea
inc
push
mov
std
pop
cwtl
or
add
lret
shr
xchg
inc
mov
dec
adc
xchg
push
mov
mov
dec
mov
ss
les
shll
and
mov
xor
pop
mov
cmpsl
insl
add
mov
cltd
pop
sti
cmp
dec
pop
mov
loopne
std
loop
pop
jp
jbe
data16
push
adc
or
mov
incb
loop
and
int3
mov
sub
mov
mov
sbb
sub
push
inc
clc
nop
jb
pop
cmp
inc
cltd
sbb
nop
fldt
sbb
mov
imul
aam
jl
into
in
leave
mov
movsl
lods
loopne
fisubrs
fldl
cmc
inc
cmp
xor
push
cmp
sbb
cmp
pop
iret
repnz
pop
or
in
cmp
sub
test
sahf
or
fcom
or
mov
jne
mov
or
xchg
inc
cltd
movsb
dec
int3
pop
sbb
cmp
mov
adc
adc
out
adc
inc
pop
adc
push
cmpsb
pop
imul
sub
mov
int
mov
mov
fwait
push
add
cmp
nop
aaa
dec
lahf
inc
stos
xlat
inc
daa
shrl
lock
iret
data16
repnz
push
pop
orb
mov
or
rol
ljmp
mov
xchg
inc
xchg
data16
jle
std
or
mov
jb
pop
mov
rclb
jecxz
movsb
push
push
stc
popa
push
sub
fs
dec
pop
lea
sbb
addb
sbb
mov
sbb
mov
mov
cmp
pop
mov
jbe
sbb
adc
mov
or
movsl
aad
addr16
fistpll
fld
fsubrl
dec
bound
xchg
lods
cwtl
stos
xchg
test
test
push
sub
popf
incl
ficoml
add
adc
and
cwtl
das
lret
inc
in
dec
jbe
lods
cmp
cwtl
loopne
mov
xchg
push
es
push
mov
popa
push
add
ret
sub
adcb
inc
adc
jg
jb
sti
mov
aaa
insl
mov
or
rorb
push
imul
outsl
cltd
dec
andb
call
loopne
adc
int3
ljmp
das
mov
push
push
sub
pop
and
cmp
mov
icebp
jb
mov
iret
es
neg
int
insb
stos
fsub
test
std
adc
push
inc
xor
push
jmp
movsb
inc
sbb
and
or
sarl
add
rclb
aaa
sbb
cmpsl
adc
sbb
lock
mov
test
sub
fidivl
lods
inc
arpl
fwait
push
lret
sub
sub
jmp
imul
inc
ja
jo
iret
ja
mov
popa
cmp
pop
xchg
icebp
aam
addb
mov
stos
adc
push
mov
fstpl
xchg
lret
sub
add
sub
dec
sahf
sbb
int
mov
popa
fucomp
fisubs
or
out
leave
inc
push
nop
jg
iret
cmpsb
lahf
mov
iret
mov
fiaddl
cmp
jp
ret
sti
adc
in
jne
mov
dec
lea
mov
lea
pop
pop
scas
push
lret
scas
mov
insl
add
nop
es
iret
dec
repz
loop
mov
pop
cmpsb
mov
mov
clc
testl
cmp
gs
nop
shll
vunpcklps
les
cli
mov
push
jne
sub
push
cmc
mov
jp
xchg
notb
divl
xor
cmpsl
sbb
inc
lret
push
xor
sbb
cmp
iret
daa
or
lock
xor
rorb
and
cmp
add
xchg
pusha
popa
xchg
outsl
or
mov
and
loope
in
and
out
cltd
out
add
pop
sub
sub
test
std
pop
into
in
xlat
mov
inc
icebp
mov
xor
lods
fwait
jbe
ss
cmp
mov
test
xlat
mov
push
push
cmp
mov
mov
or
int
mov
mov
sbb
aam
ljmp
dec
outsl
test
cmp
pop
jge
jge
jns
pop
mov
pop
shll
lock
mov
adc
nop
repnz
dec
icebp
imul
andb
decl
xor
sub
iret
sub
jp
lahf
or
xchg
mov
xor
sbb
mov
leave
jmp
ds
mov
jl
inc
leave
sub
les
and
iret
or
mov
jmp
mov
repz
jecxz
push
in
jp
jp
scas
xchg
mov
out
pop
inc
or
mov
into
cmc
add
adc
xchg
adc
push
mov
jbe
ds
nop
mov
add
aaa
data16
in
testb
js
xchg
fdivrl
inc
xor
insl
push
outsb
pop
jne
iret
dec
int
cmpsl
lret
pop
or
mov
pop
out
mov
ss
cmp
push
xor
scas
sub
mov
push
xchg
sar
fwait
inc
pop
xor
dec
mov
inc
mov
mov
pop
les
fucomp
jno
imul
dec
shll
fidivl
addr16
cmp
roll
fstps
pop
xor
loopne
push
outsb
or
fwait
pop
stc
or
push
jmp
mov
fmuls
mov
and
sbb
cltd
mov
cmp
jge
into
inc
in
cmp
lahf
je
pop
add
outsl
ret
aad
adc
xchg
mov
inc
and
aad
into
shlb
or
push
xlat
xchg
andl
dec
sbb
out
inc
adc
and
lret
lock
testb
lcall
inc
pop
pusha
push
sarb
and
mov
icebp
rcr
lds
cmc
xchg
jae
inc
push
pop
imul
inc
cmpb
pop
sarb
cmp
iret
repz
mov
mov
push
movsl
imul
pop
or
addr16
lahf
movsb
inc
mov
sbb
sbb
dec
push
rolb
inc
iret
popf
cmp
mov
dec
xorb
push
ror
sbb
dec
scas
and
test
aam
jmp
mov
lds
mov
xlat
xlat
mov
ret
adc
fidivl
xchg
xchg
fnstenv
leave
xchg
sar
out
mov
aas
adc
mov
jns
or
push
and
movsl
shll
jle
mov
push
jmp
push
and
jecxz
xchg
add
pusha
leave
cli
stos
test
rcrl
rorl
xchg
rolb
clc
inc
arpl
pop
enter
pop
pop
es
in
push
push
mov
xchg
les
mov
cmp
dec
or
test
xor
mov
test
cmp
xchg
sti
add
xor
inc
cmp
add
sbb
and
adc
xchg
insb
and
or
rcrb
rol
dec
scas
mov
cmp
pusha
push
mov
lahf
in
or
cwtl
loopne
movsb
insb
add
mov
into
add
lret
and
xor
mov
dec
jne
repnz
ljmp
sub
cmp
add
adc
incb
push
fstpl
mov
mov
mov
fbstp
jp
stc
xchg
out
scas
mov
lea
jne
jne
xor
mov
iret
inc
cmpsl
xchg
sub
cltd
mov
int
rclb
dec
fimull
push
popf
sti
mov
mov
lcall
scas
mov
pop
int3
imul
xchg
jne
pop
lahf
xchg
xchg
cmp
sbb
xchg
int
jmp
mov
insb
std
jne
outsb
enter
push
movsl
cmc
jg
mov
jno
aam
jmp
dec
mov
add
fsts
test
sbb
test
jo
test
xlat
into
stos
imul
push
stos
lret
xchg
mov
ret
inc
bound
mov
mov
je
loope
adc
pop
cmc
outsl
xor
add
cld
js
jle
and
negb
cmpsl
nop
pop
call
xor
pop
jnp
ret
pop
dec
fldenv
int3
adc
fs
sbb
inc
mov
icebp
xchg
clc
cmc
out
xchg
in
jmp
fdivrs
int
and
popa
sarl
shrl
sbb
sbb
loope
jae
xchg
push
mov
inc
insb
and
out
fldenv
fnstsw
clc
cmp
jmp
outsl
xchg
and
subl
lret
cmp
dec
push
loope
mov
es
out
test
fcmove
pop
push
or
xchg
ljmp
jp
sbbb
jle
dec
rolb
sti
fnstcw
jg
mov
hlt
jg
lods
xor
imul
cmp
mov
rclb
mov
addl
and
aas
and
dec
mov
fildl
inc
and
xor
into
in
adc
idivb
xchg
push
incb
test
int3
in
sub
stc
xchg
loopne
pop
repz
and
incl
ror
leave
or
mov
or
add
jbe
sub
insl
enter
dec
adc
xchg
adc
lcall
fimull
js
fwait
scas
mov
push
addr16
or
jmp
push
sbb
pusha
push
test
jne
test
pop
xor
or
mov
insl
dec
int
mov
sti
xchg
sub
sbb
mov
dec
int
sub
ss
adc
or
js
mov
flds
xchg
gs
or
leave
push
outsb
xchg
roll
clc
sbb
lahf
adc
sub
add
push
popa
or
mov
insl
test
stos
mov
fwait
insl
mov
cmpsb
dec
mov
mov
ret
sub
shlb
outsb
pop
mov
movsl
ror
test
data16
outsl
mov
mov
into
jo
imul
adc
adc
push
xchg
inc
dec
divb
mov
cld
xchg
adc
mov
jle
or
lahf
xlat
js
das
xor
std
push
dec
bound
push
adc
imull
scas
cmpxchg
xchg
inc
mov
fiadds
or
sub
jg
add
mov
std
sti
imulb
subl
lods
mov
adc
and
out
gs
add
inc
les
pop
xor
mov
jae
sub
in
dec
inc
mov
mov
cmpsl
into
imul
je
repnz
mov
lods
inc
shll
jg
cs
pop
lahf
adc
inc
aaa
and
xchg
shl
movsb
andb
aad
xor
cmpsl
outsl
or
fisubl
mov
insl
cmpsb
enter
shrd
insb
push
cmp
aaa
in
scas
shrb
cmovae
mov
mov
jae
insb
inc
pop
lock
cmpsl
sub
lea
aad
and
add
shrl
insb
cmc
sbb
adc
sub
fmull
jne
outsb
jae
in
jb
jp
jnp
leave
push
pop
mov
mov
push
lds
pop
shl
cmp
addr16
ljmp
mov
leave
mov
data16
mov
sub
es
sahf
rorb
das
pop
subl
dec
add
lahf
adc
out
push
mov
jne
pop
loop
dec
push
pop
lea
jmp
ds
das
insl
subl
leave
insb
xchg
jl
js
xchg
aas
inc
mov
adc
pop
add
mov
gs
mov
loopne
insb
push
lret
jne
int
in
and
inc
pop
pop
cmpsb
push
sbb
loop
pop
push
jg
push
mov
arpl
sub
hlt
push
mov
push
xor
in
mov
push
lds
dec
pop
scas
jg
repnz
cmp
inc
insl
imull
push
and
test
pop
xor
lea
cmp
fsubs
es
cltd
sub
jl
fucom
popa
sbb
sbb
imul
adc
cmp
sbbb
or
sti
test
fcmovb
jne
add
adc
sti
pop
inc
cld
pop
cld
pop
addr16
adc
push
push
lock
ljmp
xor
or
into
or
jl
push
and
mov
scas
xlat
out
fldt
inc
mov
cmp
add
push
jae
aam
hlt
and
test
imul
cmpsb
imul
insl
add
pop
daa
aam
push
ss
xchg
inc
cmpsb
cmp
loope
mov
in
xchg
lods
jo
sub
lahf
loop
lahf
test
ja
xchg
pushl
outsl
ffreep
mov
adc
xchg
fucomp
sub
out
test
xchg
dec
inc
pop
inc
sub
mov
loopne
adc
adc
adc
jecxz
xlat
aas
das
je
add
jae
in
fwait
aaa
cmp
adc
sbb
mov
push
arpl
adc
jae
ret
push
aam
pop
das
sahf
adc
cmc
jae
push
xor
jmp
outsl
jbe,pn
sub
inc
or
sbb
out
fcoml
xchg
mov
cmp
fsubs
push
insl
loope
or
jns
inc
arpl
mov
ds
xor
mov
inc
xor
jge
cmp
into
leave
push
fiadds
mov
sub
xor
xchg
mov
sahf
es
dec
insb
test
sub
in
jg
xor
and
mov
nop
jo
les
add
ficoml
fldcw
and
dec
and
sub
add
xchg
in
sbb
lahf
nop
in
push
scas
jecxz
mov
loopne
xor
adc
mov
shl
out
sbb
rclb
test
cltd
mov
in
sub
shr
in
xchg
in
cwtl
pop
mov
ss
fbstp
and
mov
pushl
fsubrl
cmp
or
out
dec
and
adc
jmp
or
jae
loope
in
sub
mov
and
loopne
test
jmp
hlt
xchg
sub
add
mov
in
icebp
fstpl
stc
sbb
sahf
jbe
pop
xorl
lahf
adc
cmp
inc
out
xchg
out
ljmp
test
xchg
ss
repnz
popa
xor
and
jmp
fndisi(8087
push
add
pop
pop
popf
xor
repnz
cmc
xor
and
out
out
mov
scas
push
mov
mov
add
add
mov
and
in
negl
lcall
iret
inc
jbe
ret
mov
pushf
push
xor
aaa
mov
sub
mov
incb
mov
cmp
xchg
and
inc
cmp
loope
mov
dec
mov
cmc
into
int
sbb
call
pop
push
mov
cmp
xor
fs
sbb
jmp
lods
ds
xchg
cmpl
adc
in
movsb
add
inc
inc
cmpl
add
mov
push
out
xor
inc
xor
or
sarl
push
mov
cld
jecxz
divl
js
mov
jecxz
cmp
test
sbbl
dec
and
inc
cmp
push
shll
or
mulb
out
mov
ds
nop
mov
mul
mov
push
inc
xchg
shll
scas
jo
mov
icebp
scas
cmpsb
or
bound
mov
loopne
int3
nop
jae
hlt
inc
xchg
push
dec
in
sbb
xchg
out
sar
rcl
scas
sbb
jae
mov
mov
mov
pop
cmp
adc
adc
testl
or
dec
test
sbb
inc
mov
clc
test
lahf
push
les
pushl
xchg
xchg
hlt
pop
mov
imul
inc
les
push
fstpt
sbb
and
in
int
add
cmp
out
int3
jecxz
daa
pop
sub
aad
ds
pushf
imul
fdivs
outsl
leave
xchg
jl
lcall
xlat
jb
cmpsl
adc
mov
lock
jb
xor
add
and
sti
push
jg
pop
mov
pop
mov
adc
mov
xor
addr16
loope
lret
sti
fcmovnb
flds
in
jo
aaa
cmp
jae
cltd
pop
jno
decl
stos
dec
lret
scas
or
ljmp
push
mov
cwtd
and
test
mov
add
iret
sub
xchg
pop
test
in
ss
sub
mov
sub
and
or
in
mov
xchg
pop
cmp
lret
aas
cmp
aaa
or
das
int
in
imul
mov
int3
sub
shll
cli
xor
add
sbb
loopne
in
xchg
imul
lret
mov
push
push
inc
xor
clc
push
dec
lret
add
sbb
les
dec
or
or
or
loopne
jecxz
sub
idiv
and
ret
add
cmp
inc
inc
ret
loope
repz
pand
enter
xor
jno
in
les
jo
ljmp
icebp
inc
scas
jo
ljmp
sahf
inc
scas
jo
ud0
adc
fnstcw
psllw
adc
sbb
shll
jns
rcll
lods
or
or
popf
lods
lret
mov
pop
dec
jp
mov
pop
cmp
rcr
lret
outsb
lds
test
into
and
dec
and
inc
mov
jp
pop
mov
je
mov
enter
das
mov
push
stc
sti
xor
leave
aaa
pushf
jns
sahf
push
inc
sti
push
stos
ss
xor
lods
popa
jecxz
rol
sub
clc
push
pop
pop
call
lret
scas
iret
testb
cmc
pop
fsubs
out
and
ds
jae
shll
daa
cmp
lock
push
adc
lods
subb
ret
push
clc
lock
bound
aam
inc
rolb
sub
cmp
push
xchg
imul
push
mov
popa
xor
inc
cs
mov
out
subl
xchg
dec
dec
mov
scas
mov
mov
adc
popa
popa
stos
dec
ljmp
mov
adc
add
mov
lods
push
aas
inc
cwtl
jb
adc
adc
fs
xchg
mov
cmp
adc
jg
mov
dec
jbe
mov
fldl
les
add
xor
xor
dec
jbe
cmp
in
stos
loop
jo
gs
xchg
dec
lock
icebp
xchg
lods
push
lds
or
and
decl
mov
paddd
cmpsl
cmpsb
arpl
cld
subl
adc
sbb
push
and
iret
or
sbb
jo
call
adc
adc
fstl
inc
pop
andb
jbe
cmp
insl
dec
js
sahf
cmc
test
mov
or
and
lret
rorl
adc
or
jne
and
iret
aaa
jae
insl
fsts
std
cltd
fdivrl
not
in
push
sbb
cltd
dec
stos
into
mov
jle
xor
xlat
sub
cmpsl
mov
fistl
lea
iret
jo
inc
inc
push
adc
mov
in
xchg
movsl
cmp
jb
ds
dec
push
in
sbb
sti
pop
dec
mov
enter
jbe
fcmovnu
pop
repnz
adc
jno
stos
cltd
mov
mov
jns
sbb
fwait
xor
add
pushf
nop
mov
mov
out
mov
outsl
ljmp
pusha
lock
push
adc
incl
lret
pusha
cmp
push
jecxz
or
or
insl
pop
dec
pop
or
inc
insb
jmp
repz
xchg
dec
fmull
out
lret
in
rcrb
inc
imul
or
push
mov
sbb
jb
mov
imul
inc
and
push
push
mov
cmpsb
cmp
aam
in
fbstp
xchg
ret
pop
lret
push
int
adc
dec
fwait
cmpsl
push
fcoms
or
std
lock
xchg
rcll
mov
jl
or
fidivl
or
stos
in
out
lret
mov
and
hlt
in
adc
sbbl
inc
lret
ret
out
push
not
imul
add
sbb
jl
mov
push
pushf
or
loop
ja
inc
inc
jl
punpckhbw
xor
add
lahf
dec
jno
xor
cs
leave
mov
addr16
stos
mov
sub
outsl
add
mov
std
mov
adc
push
xchg
jne
int
loope
jl
shrb
fsubrl
notb
pushf
fnsave
mov
dec
push
jbe
lea
imul
call
test
das
or
pop
js
dec
std
dec
push
pop
outsl
stos
fmul
sahf
adc
fisubrl
xchg
gs
stos
xchg
int3
jl
cmp
pop
dec
lret
jnp
push
in
xchg
sbb
mov
adc
sbb
cmpsl
iret
inc
mov
aaa
andb
outsb
js
and
or
lods
ret
adc
pop
loop
xor
orl
adc
sbb
push
xchg
mov
fistpl
imul
mov
xor
push
add
xor
sarl
jg
cli
jmp
xor
adc
repz
mov
xchg
call
dec
add
add
inc
push
pop
xor
dec
ds
out
mov
mov
js
mov
mov
stos
inc
xchg
pop
mov
mov
jp
cmp
in
adc
mov
inc
pop
rcrb
inc
rorl
push
push
add
ss
push
icebp
push
dec
dec
sub
dec
xor
xor
scas
push
icebp
push
mov
out
xor
imul
in
jp
les
pop
and
sbb
xor
xor
cmp
add
inc
mov
mov
mov
mov
pop
enter
popa
in
jo
iret
mov
test
mov
xchg
lsl
in
add
in
aaa
in
cmp
mov
dec
int3
add
lret
mov
mov
adc
mov
es
xor
lret
hlt
subl
inc
adc
fdecstp
and
jg
mov
dec
popa
jnp
out
dec
dec
pop
cmp
cmp
dec
cmp
hlt
fisubrs
hlt
jmp
jmp
shl
fdivr
dec
std
xlat
and
out
dec
loop
icebp
std
gs
test
cs
pop
imul
into
movsb
or
pop
iret
sub
scas
rclb
xor
cmp
add
inc
inc
push
jnp
fadd
inc
cld
push
jmp
jmp
and
lret
shl
lock
ret
loop
adc
gs
adc
mov
sub
lods
loop
test
fildl
ja
rorl
leave
jge
stc
cmc
push
call
cmp
aad
xchg
inc
dec
idivl
sub
sub
and
mov
js
ds
pop
mov
xchg
and
push
or
jecxz
repnz
pop
lret
or
mov
loopne
mov
mov
push
jg
jg
dec
int
jae
pop
pop
mov
repz
addr16
pop
movsb
inc
repnz
cmp
mov
and
cs
movsl
lar
jbe
mov
push
jne
adc
hlt
mov
test
push
mov
mov
loop
or
fwait
hlt
adc
push
mov
in
xlat
imul
and
test
or
mov
cs
jmp
add
xchg
sub
cmpsb
sub
ja
adc
notb
mov
sahf
push
ret
inc
adc
mov
inc
mov
andl
jl
dec
sub
cmp
or
cli
outsl
addr16
loopne
in
testb
xor
fucomp
iret
jae
jne
in
push
push
into
push
push
xor
test
sbb
mov
xor
jp
cwtl
add
push
negb
mov
xor
cli
mov
mov
scas
fisubl
xchg
cmp
inc
lret
fs
fdiv
fstp
enter
sub
push
int
pusha
test
jnp
mov
out
shll
pusha
shr
incl
cmpsl
sbb
mov
iret
or
pop
cld
jmp
sbb
pop
popa
cmpsb
pop
arpl
leave
inc
and
lahf
pusha
jg
lahf
and
sbb
imul
dec
mov
call
sbb
fstpl
jae
insb
jle
loope
fcoml
nop
mov
lahf
xor
jl
popf
or
push
popf
cli
icebp
out
mov
js
dec
fiaddl
push
test
add
lods
rol
pop
xor
ret
ds
cmp
cwtl
jns
es
lret
in
jmp
mov
sbb
stc
js
mov
lret
xchg
movsl
push
dec
call
and
es
sub
lret
adc
mov
movsb
jmp
mov
leave
push
jo
loopne
rorl
es
xorl
sarb
xor
push
fidivs
aas
inc
or
pushf
push
mov
les
xchg
push
fistl
pop
scas
or
mov
jbe
and
rolb
mov
or
test
je
inc
adc
jo
cmc
and
push
setle
cld
mov
icebp
loopne
loopne
jno
mov
sub
dec
adc
call
add
jns
add
out
sbb
inc
mov
and
es
jge
dec
push
push
and
mov
and
and
cmp
or
sbb
ret
xor
out
mulb
notb
in
cmp
push
mov
xor
cmp
push
cmpsb
and
subl
push
or
lods
ds
cld
leave
adc
and
inc
mov
push
push
inc
repnz
negl
pop
stos
cli
movsb
push
mov
cltd
subl
pushf
arpl
cmp
mov
ficomps
jmp
add
adc
inc
nop
bnd
jl
movsl
int
add
xchg
inc
imul
xor
jno
popa
pop
adc
rcrl
cmp
test
xchg
aam
mov
imul
fsubl
mov
divb
shlb
sbb
xchg
lret
fbstp
jae
xor
das
in
pop
shl
fidivrl
call
pop
sti
in
jo
icebp
ljmpw
or
fmuls
rcr
daa
mov
test
mov
adc
mov
push
push
and
jg
lock
loop
test
push
fnstenv
or
je
sbb
cmp
roll
sub
lcall
lret
pop
lret
mov
fwait
xchg
and
xor
or
das
sbb
fs
pop
out
insl
out
mov
test
jo
xchg
test
aas
repnz
mov
adc
ret
lods
scas
mov
test
shr
addb
mov
xor
mov
mov
or
inc
inc
inc
out
sub
in
mov
loope
pop
sub
pop
mov
pushl
sub
mov
popf
add
mov
cs
xchg
rcrb
imulb
cmp
mov
pop
outsl
or
jmp
in
inc
ret
mov
sti
mov
inc
jecxz
jb
repnz
cmp
lret
gs
dec
dec
faddl
testb
mov
lret
out
sti
pop
sub
dec
cmc
cmc
sub
cmp
lods
dec
push
loope
pop
xchg
xlat
cmp
rcrb
test
pop
fmuls
es
enter
xchg
test
xor
sti
int
movsl
jo
outsb
inc
dec
and
sbb
lret
dec
pop
xchg
mov
loope
clc
dec
int
mov
adc
mov
aas
fsubr
and
test
clc
mov
pop
cmpsl
pop
adc
call
xor
fnsave
xchg
es
push
jp
leave
mov
daa
mov
adc
sahf
sarb
push
in
jne
addr16
aaa
fdivl
ja
inc
hlt
lds
popf
vmovlhps
fsubr
mov
add
jne
sbb
rcrl
mov
xorb
aad
jo
sbb
mov
mov
icebp
dec
mov
inc
mov
out
iret
dec
mov
mov
enter
xchg
xchg
jno
adc
bound
sub
jns
test
imul
adc
jns
push
enter
mov
iret
cmp
cmp
mov
add
jl
sub
rcl
mov
test
jbe
data16
and
mov
mov
cmp
pushf
pop
or
mov
negb
shll
lods
add
inc
cltd
jnp
mov
jl
mov
gs
add
sub
or
mov
imul
jl
es
pminub
xor
stc
shrb
cmp
xor
xor
add
xchg
icebp
loopne
xchg
cmp
mov
in
xlat
pop
decb
pop
int
ret
sbb
imul
icebp
sub
mov
mov
and
push
cmpsl
bound
and
sub
bound
lcall
jl
cmc
inc
arpl
inc
std
cmp
cmp
cmp
sbb
xor
std
dec
inc
ds
jo
js
ret
xchg
out
mov
xchg
add
std
js
adc
iret
jmp
ja
stc
pusha
mov
mov
enter
mov
mov
repnz
add
fdivrp
movsb
shll
imul
xchg
flds
lea
nop
dec
and
aam
repz
add
dec
fs
pop
imul
insl
sbb
and
pusha
out
add
or
cmp
sub
nop
cmp
push
mov
iret
push
inc
stc
xchg
pop
xor
push
push
rcll
xchg
xchg
add
in
xor
cmp
pushf
sub
faddl
loop
pop
xchg
and
sbbl
mov
cmp
addr16
jns
popaw
repnz
adc
rolb
xor
jl
test
int3
jle
fmuls
sahf
aam
mov
mov
in
pop
sbb
clc
inc
outsl
int
add
mov
push
dec
push
sub
push
mov
fs
pop
or
addr16
dec
ljmp
sub
in
dec
mov
mov
insl
pcmpeqw
pop
dec
popf
and
and
mov
scas
mov
aas
rcr
jbe
mov
cwtl
into
pop
ret
push
push
jge
test
xchg
lds
inc
xchg
out
cmpl
mov
fisttpll
loop
and
mov
or
je
pushf
xchg
pop
inc
xchg
ret
sub
outsl
add
pop
pop
cwtl
loop
mov
or
pop
std
cmp
jge
mov
jb
mov
nop
out
test
cltd
mov
push
adc
lods
sbb
inc
insl
outsb
out
pop
shll
sbb
jmp
jns
lcall
inc
out
pop
mov
pop
stos
adc
mov
scas
dec
lods
xchg
mov
lahf
rolb
mov
daa
orl
ljmp
push
fidivs
xchg
fcoml
sbb
mulb
scas
cmpsl
in
or
cmpsl
jb
jmp
inc
xchg
lcall
add
sbbb
sahf
dec
repnz
es
jno
and
xor
aas
cli
js
pop
mov
test
xor
mov
test
mov
jmp
sub
adc
push
inc
into
xchg
push
and
in
mul
lds
add
push
mov
inc
out
mov
mov
out
movsb
stos
mov
inc
xchg
div
xchg
pop
fwait
add
dec
pop
fiaddl
int
pop
or
and
and
into
iret
test
hlt
in
jbe
out
mov
sbb
ret
cs
imul
jl
and
aad
outsb
pop
or
inc
daa
shll
pushf
add
mov
jb
mov
lret
imul
adc
jno
xor
outsl
pushf
lret
imul
cmp
fisttps
jl
call
cmpsl
ss
add
push
testl
js
subb
xchg
pop
imul
inc
gs
xor
and
pop
and
cmp
test
cmp
dec
and
movsl
cli
cmc
sbb
fimuls
stos
cmp
xchg
int
mov
shlb
cmpsl
fistpll
popa
dec
nop
xchg
adc
sub
imul
out
push
sbb
insl
clc
mov
adc
or
lret
adc
test
push
mov
icebp
push
aad
cmp
mov
and
fiadds
sbb
pop
xor
cld
xor
mov
adc
cmc
mov
imul
sub
cmp
ror
pop
aam
xor
popl
arpl
pop
mov
mov
mov
pop
pushf
push
divb
cmp
dec
test
xchg
adc
fdivl
pusha
mov
negl
lock
loopne
ficomps
xchg
pusha
jo
cmp
enter
adc
mov
stc
cmp
sbb
mov
mov
arpl
cmp
int
ds
stos
mov
xor
mov
dec
enter
xor
adcb
xor
ret
cmp
and
fcmovu
repnz
mov
xchg
jmp
push
fcoml
push
mov
mov
jo
cmp
xchg
stos
sub
daa
jns
or
xor
xor
movsb
xor
mov
sbb
mov
push
dec
sahf
jle
pop
adc
mov
sbb
incl
pop
add
xor
loope
mov
dec
inc
push
xor
lret
aam
sbb
es
mov
xchg
and
lret
sub
mov
cmp
pop
test
mov
push
add
inc
xchg
xor
sub
mov
mov
int
fcompl
inc
lds
jp
orl
loopne
outsl
pop
std
xchg
mov
fiadds
push
int
dec
lret
loope
xor
adc
pop
daa
rcr
mov
sbbb
jb
and
mov
jno
jmp
fsubrl
lods
mov
mov
das
sbb
xchg
add
aaa
xlat
xor
cmp
icebp
stos
enter
ret
mov
adc
or
iret
scas
addr16
out
cmp
pop
xchg
pop
fwait
stos
ljmp
out
fwait
aas
test
in
sub
pushf
js
ja
dec
rcrb
sub
cld
cwtl
jg
cmp
jae
leave
lock
repz
lods
in
cmp
xchg
push
mov
and
les
jno
clc
jno
xor
fcmovb
sti
mov
push
pop
adc
lods
leave
imul
adc
ret
in
orb
jne
ret
sti
push
xor
stc
add
adc
or
mov
pusha
sub
out
sub
inc
into
mov
rcrl
loopne
incb
ljmp
jo
in
icebp
push
push
push
test
mov
jge
sub
inc
repnz
xlat
jns
ffree
leave
filds
or
fsubl
inc
pop
sbb
les
or
gs
leave
mov
jns
or
adc
sbb
sbb
add
pop
push
mov
clc
loop
pop
lods
rol
ja
andl
frstor
inc
ja
cmpl
xchg
xor
or
sub
pop
sub
mov
inc
shrl
push
test
push
stos
shrb
inc
movsl
push
and
loope
add
mov
fstpt
add
cmpsl
inc
jmp
pop
testl
imul
fistps
enter
push
mov
mov
or
dec
cmp
pop
jmp
jge
mov
adc
mov
cwtl
mov
ret
push
lret
dec
inc
popf
gs
mov
mov
stc
xchg
setg
push
sub
dec
ja
sbb
popf
notb
xchg
shl
inc
cli
mov
inc
jbe
leave
dec
jmp
push
push
nop
or
add
push
add
xor
sub
lods
mov
xchg
push
dec
mov
icebp
insl
mov
push
out
repz
jg
pop
fsts
xlat
sbb
add
xlat
sbbb
out
mov
mov
stos
jmp
or
mov
ljmp
outsb
mov
test
subl
and
jne
cmp
cmp
or
jbe
sub
fimuls
clc
jg
out
pop
add
inc
adc
sub
fcmovu
rolb
mov
lret
cmp
rorb
jg
pop
js
lea
mov
out
test
xor
lds
jmp
mov
push
adc
enter
mov
jg
pop
int3
inc
sbb
dec
inc
call
fildl
jne
dec
add
scas
iret
fsubrp
and
lods
xorb
jo
sub
fwait
xchg
cli
adc
mov
lret
rorl
inc
jle
jg
sub
pop
addr16
xchg
or
outsl
cmp
es
mov
fwait
pusha
lret
pop
rcrl
lods
push
push
mov
pop
xor
out
add
shlb
mov
inc
cli
setnp
xor
or
xor
cmp
sub
mov
or
stc
or
jbe
jp
cwtl
sub
dec
sub
popf
cmpsl
lret
sbb
ljmp
add
cmp
js
fidivrl
outsl
in
call
enter
sbb
sahf
fs
xchg
mov
mov
mov
cld
aas
mov
data16
fnsave
xchg
sub
or
test
test
mov
inc
jae
xchg
mov
mov
popf
adc
leave
lcall
dec
ja
int
das
pop
or
xchg
xor
lahf
sub
xchg
mov
xchg
popf
inc
cmpsb
les
out
dec
jle
and
lea
mov
and
cmp
loop
ds
sub
jl
lods
cmp
pop
imul
xor
sbb
pop
outsl
clc
sub
daa
pop
sbb
and
fisubrl
repz
push
xchg
xor
cmp
mov
and
data16
jmp
mov
das
jb
add
insl
adc
hlt
add
lret
lods
add
sbb
xor
enter
movsb
loop
mov
push
insl
inc
mov
scas
movsl
sub
mov
mov
xor
cli
push
mov
gs
nop
mov
or
popa
jne
movsb
inc
shl
std
xchg
call
inc
push
push
add
or
push
add
and
rorl
mov
cld
or
mov
push
daa
xor
and
mov
cmp
arpl
loopne
out
divl
xchg
out
dec
pop
adc
mov
cmpsl
dec
mov
add
pop
sarb
shl
aaa
les
push
push
adc
andb
mov
mov
push
mov
in
fistps
clc
dec
xchg
rcrl
ljmp
icebp
fisubrs
sbb
mov
movsl
outsl
lahf
sub
jle
jns
add
inc
dec
leave
ja
adc
add
jecxz
dec
fadds
push
mov
data16
jbe
pop
in
mov
xchg
fildll
es
jno
push
insb
fdivrs
in
out
insl
and
out
movsb
mov
icebp
push
xor
push
addr16
aad
popa
ret
lcallw
repz
test
add
mov
aaa
jo
mov
icebp
lret
pusha
cmpsb
daa
hlt
pop
stos
sub
mov
enter
push
arpl
and
cmp
sub
or
out
inc
pop
mov
dec
push
cmc
sbbb
loope
xlat
das
out
mov
int
aaa
xchg
xor
xchg
enter
and
push
std
jno
push
stc
mov
cmp
je
rcrl
sbb
adc
mov
setae
shlb
scas
pop
cmp
in
jo
fistps
sahf
mov
lahf
push
and
loopne
add
jb
fisubl
rcrl
out
jo
lds
pop
pushf
aam
or
inc
jno
subb
fs
cwtl
dec
ja
andl
inc
jno
mov
jmp
jbe
aad
xchg
mov
out
push
pop
push
imulb
fstps
incb
daa
mov
xorl
push
fistpl
loope
int3
xor
lret
out
sbb
ljmp
cmc
dec
sub
test
pop
int
push
pop
xor
js
jecxz
xchg
aam
lret
lods
xor
adc
and
cmpsb
add
shlb
mov
int
das
mov
push
call
pop
cmp
sub
xorb
lcall
popl
clc
outsb
ror
inc
cld
popf
sbb
mov
ss
js
sub
popa
cwtl
enter
jge
stos
mov
dec
push
xchg
inc
adc
fimuls
sbb
int3
cli
out
cmp
pop
mov
jp
cmp
lahf
insl
out
push
ret
xlat
ljmp
push
pop
fs
push
movsl
jp
les
push
sub
mov
pop
data16
movsb
xchg
scas
sbb
imul
or
fistps
sub
or
xor
mov
or
jo
mov
inc
cmpl
shll
mov
and
sub
mov
gs
aad
adc
sub
xchg
and
sub
jne
cmp
mov
jae
and
lahf
jno
in
sbb
pop
mov
mov
mov
vorps
nop
mov
fisttpl
jns
add
mov
mov
cwtl
shl
dec
push
jg
adc
jmp
enter
cmp
jo
inc
inc
jne
cmc
addr16
fucomi
push
orl
mov
add
mov
sbb
rorl
add
push
mov
mov
lret
sub
and
es
push
fnstenv
mov
jmp
pop
imull
push
mov
adc
push
mov
or
add
lods
mov
sub
fucom
enter
inc
inc
pop
cs
into
adc
lods
inc
xor
mov
adc
push
and
sub
cmpsl
sbb
inc
xor
negl
shlb
xchg
imul
inc
in
mov
mov
xchg
inc
aas
int
movsb
dec
mov
scas
add
push
out
sub
cld
clc
addr16
icebp
dec
fwait
or
push
xchg
cmp
add
cld
add
inc
aas
mov
sbb
pop
dec
data16
cmpsl
lds
xchg
or
adc
into
push
cwtl
fisttps
ret
sti
test
jmp
xor
insl
enter
dec
fsubl
adc
jle
lret
movsb
jae
pushf
cld
and
repz
add
jecxz
sti
or
xor
push
outsb
movsl
das
mov
lcall
in
cmp
sub
mov
push
jae
pop
and
stos
out
icebp
push
scas
pop
shrl
rcrb
push
in
pop
jae
mov
fisttpl
or
ret
push
fs
mov
lock
cmp
cmp
dec
out
adc
jl
lret
in
pop
cmpsl
addl
in
pop
scas
jo
stc
xor
xor
stc
xor
jno
scas
jo
iret
popf
add
or
or
cli
dec
shll
in
add
jo
inc
jno
mov
insb
adc
sub
sub
sbb
sbb
loopne
xchg
xchg
and
inc
js
sbb
dec
mov
je
addr16
mov
iret
stos
daa
add
pop
cmc
adc
rcrl
pusha
cmp
daa
jle
outsl
mov
in
inc
fldl
adc
xor
push
inc
jnp
test
cwtl
xlat
jge
fidivs
das
iret
lret
mov
sub
inc
add
cltd
outsl
lahf
or
ss
xorb
xchg
jp
adc
imul
aam
cmp
inc
cmp
leave
mov
popf
stos
fcoms
sbb
fcmovnb
cltd
ljmp
stos
mov
xchg
inc
into
aas
mov
lahf
pop
or
lret
adc
or
fmuls
mov
add
pusha
fwait
sub
pop
dec
jle
data16
sub
jle
lcall
shlb
add
sub
jb
xor
out
ret
movsb
das
inc
in
xlat
sbb
fdivrs
loopne
insl
enter
adc
inc
push
lcall
push
jl
jmp
ja
xor
cld
or
mov
mov
xchg
and
mov
aas
aam
aaa
and
outsl
cli
enter
movsb
jb
add
out
jle
push
lods
xor
test
aas
std
out
mov
inc
aam
cmp
cltd
mov
fcmovu
orb
les
sbb
mov
bound
jno
mov
xchg
push
jge
push
mov
mov
mov
mov
movsl
adc
adc
xchg
mov
push
into
addb
test
into
pop
inc
negb
cmpsl
in
add
insl
imul
and
and
xor
lahf
in
pop
push
addl
jp
adc
xchg
push
or
adc
sti
addr16
xchg
jae
ds
je
mov
loop
aas
cmp
rorl
ret
aad
sti
xchg
loopne
rol
mov
int
mov
and
mov
data16
mov
add
mov
inc
cs
jns
mov
js
inc
mov
add
xor
int3
jnp
cmp
jmp
mov
mov
lock
mov
ja
lea
jno
out
inc
mov
cmpsl
fcomip
loope
or
jo
adc
popf
aaa
fst
pop
push
frstor
sub
mov
dec
pop
test
mov
sbb
or
xor
mov
jae
outsl
bound
int3
xchg
or
add
aas
xchg
pop
push
xlat
loopne
sar
push
xor
mov
lea
inc
add
fstl
push
xchg
daa
in
insl
cmp
or
adc
inc
mov
xchg
fistps
aaa
rcl
xor
or
lock
xor
inc
shll
cmp
sub
ficoml
cmp
dec
jno
popa
pusha
mov
rcll
xchg
push
fcmovnb
and
xchg
push
xor
pop
dec
dec
inc
and
ljmp
mov
adc
sbb
das
stos
xchg
push
ds
inc
mov
add
inc
rcrb
push
lods
jbe
lods
mov
pop
adc
outsb
clc
pop
sbb
xor
mov
lods
sbb
mov
xchg
in
call
lret
sahf
inc
cmp
adc
mov
fistpll
in
adc
add
movb
pop
xor
pusha
dec
sub
xor
push
sub
call
pop
mov
push
rcrb
adc
lods
mov
mull
les
xchg
mov
test
shr
xor
cwtl
stc
pop
cmp
or
insb
in
sbb
pusha
sub
fs
or
jmp
dec
push
and
frstor
jle
mov
mov
push
xor
cmp
mov
pop
imul
aas
cltd
fisttpl
call
call
fwait
xchg
or
je
mov
mov
mov
inc
adc
roll
ror
push
adc
pop
rcll
test
dec
fwait
push
test
iret
icebp
int3
xor
dec
lock
or
mov
clc
cld
inc
push
push
cmp
sbb
ret
cmp
push
pushf
adc
movsb
call
adc
jo
pop
xchg
xorb
dec
jo
inc
frstor
and
in
into
loopne
movsb
cmp
repnz
js
pop
push
mov
push
jl
cmp
mov
add
dec
andb
or
inc
lret
cmp
std
leave
push
push
in
mov
add
dec
shr
push
das
fnsave
stos
cmpb
xor
les
add
xchg
jb
jno
test
fbstp
cmp
add
mov
mov
dec
ucomiss
inc
or
push
push
or
lods
mov
pop
pop
and
xor
gs
mov
add
addr16
add
shll
xor
imul
cld
inc
in
inc
xchg
orb
mov
ja
dec
iret
xor
pop
pop
in
add
std
jmp
jb
in
outsb
cmpsb
inc
cmp
push
lret
int3
scas
les
mov
loopne
pop
or
out
inc
mov
push
push
mov
xor
adc
addr16
pop
lock
roll
sbb
cwtl
in
xchg
lret
jns
loop
lods
fbstp
mov
push
pop
movsb
pop
insl
in
xor
mov
stos
pop
sarl
pop
xor
pop
inc
push
dec
iret
leave
pop
stc
imul
dec
ljmp
loope
jbe
in
outsb
cmpsb
push
cmp
push
xorb
mov
pop
mov
mov
sbb
cli
push
pop
data16
andb
cli
lret
mov
mov
sub
lret
bound
clc
ja
mov
sbb
cmp
stc
dec
sub
push
jl
enter
nop
inc
xchg
sbb
jo
add
mov
repnz
fcoml
xor
stos
dec
xor
dec
jge
js
push
leave
test
lret
or
es
out
icebp
out
mov
call
pop
loopne
fwait
cmpsb
in
add
mov
dec
cmp
push
xchg
shl
bound
pop
xchg
sahf
fildl
xchg
sub
pop
ret
hlt
cs
lret
mov
sbb
sub
movsl
repnz
cli
jae
or
xchg
out
jne
sbb
test
mov
mov
repz
lahf
sahf
inc
fwait
and
mov
adcl
pop
mov
es
and
js
mov
xor
es
js
push
jge
loop
push
and
in
dec
repnz
hlt
push
pushf
movb
xchg
lcall
jns
pop
insl
mov
pop
sub
loop
insb
pop
dec
sbb
das
sub
test
push
or
inc
out
iret
cli
fdiv
or
lea
mov
cwtl
inc
addb
out
mulb
ja
mov
cmp
ret
cmc
and
and
push
sbb
sbb
movsb
mov
shl
inc
xchg
sub
add
jecxz
fcompp
sarl
fs
adc
pop
sub
psrlq
xchg
shlb
jb
leave
fnstcw
push
mov
jmp
cmp
cmp
jle
out
cmp
pop
adc
in
xchg
lea
push
repnz
gs
sub
or
shl
shr
aaa
cmp
and
inc
pop
xchg
mov
inc
mov
out
pop
dec
lret
pushf
in
pop
pop
cmp
or
dec
psubw
lret
dec
les
fimuls
out
ret
push
sbb
xor
lret
xor
or
mov
xor
cmp
test
jae
mov
test
loope
aaa
dec
pop
fsubr
ret
xor
pop
xor
jae,pt
lea
icebp
pop
lahf
or
fnstcw
loopne
sbb
dec
xor
rcll
jae
mov
stc
sub
dec
outsb
std
es
int
aas
and
lret
xchg
insb
rclb
and
pop
and
loope
and
dec
lods
and
decb
xor
adc
or
cmp
inc
sbb
sbb
pop
jae
popa
sbb
aas
pop
lods
and
xchg
push
adc
gs
and
negl
fcomp
stos
sbbl
mov
jbe
jo
dec
and
movl
inc
push
lods
cmc
dec
pop
filds
sub
cli
insb
and
fiadds
psrad
push
xor
fnstenv
loop
or
xchg
adc
std
fwait
int3
mov
das
jmp
stos
out
mov
and
jbe
add
movsl
cmp
jg
mov
pop
mov
or
sub
xchg
inc
mov
sub
lods
xchg
sub
mov
hlt
push
pop
std
mov
js
jl
ret
sub
inc
jg,pn
xor
or
xchg
sti
jmp
lret
test
fwait
sbb
push
test
mov
xor
sbb
lods
dec
shr
jnp
cmovs
mov
push
int3
sti
repz
xlat
mov
fsubrl
and
aam
push
cmovge
sbb
fildl
aad
shlb
sub
lret
xchg
mov
mov
jbe
jle
out
jp
clc
rclb
in
icebp
inc
jne
or
ja
cltd
test
jl
test
rcrl
and
pop
stc
jbe
cmpb
inc
cltd
in
or
xor
inc
pushf
pop
lret
add
dec
mov
jmp
cmp
int3
mov
adc
mov
sbb
shrl
inc
loope
push
push
fcmovne
or
out
xchg
sub
iret
loop
shr
stc
cs
mov
push
push
adc
cmp
call
push
imul
out
mov
jmp
jne
cmp
jb
pop
lcall
jl
xorb
dec
adc
fs
inc
stos
rcll
adc
push
in
cmpsl
mov
daa
xor
add
jae
jl
jne
jmp
loope
mov
mov
add
sub
inc
clc
test
fisubrl
faddl
cltd
mov
fwait
push
or
imul
jmp
std
or
xlat
xor
xchg
xchg
adc
push
loop
stos
rorl
xchg
icebp
repz
lock
cmp
outsb
pop
fs
lcall
dec
sub
lret
inc
fldln2
and
vpmulhuw
repnz
rcl
negl
and
pop
andb
mov
stos
pop
inc
es
ss
mov
sti
cmpsb
in
cmp
cwtl
pmaxub
add
dec
cmpsb
sub
fucomip
data16
loop
jmp
fs
xchg
jmp
and
sbb
scas
push
shlb
pop
sub
xchg
and
inc
lock
stos
out
dec
repz
xchg
and
fstl
out
cld
cmp
or
or
mov
mov
aam
mov
nop
xchg
lods
jg
lret
dec
push
inc
add
loopne
push
jne
aam
enter
rcrb
inc
adc
clc
dec
shll
mov
cmpsb
loope
dec
ret
ret
dec
cmpsl
ret
or
popa
dec
xor
les
fbld
push
cmp
mov
call
pusha
pushf
jg
xorl
movsl
xchg
pop
out
jmp
and
inc
xchg
pop
push
cmc
or
xchg
sbb
adcl
add
xorb
fdivrp
push
sahf
mov
ljmp
xchg
gs
inc
mov
fdivrl
popa
xchg
dec
xorl
xchg
push
jg
and
xchg
push
repz
dec
or
int3
add
pop
jl
and
mov
xchg
jo
loope
subl
rorl
les
outsl
xor
add
aaa
jns
sub
cmpl
push
push
cmpsl
push
push
mov
add
bound
stos
sbb
ficoml
in
movsl
lock
je
xor
adc
push
rorl
push
inc
mov
pop
mov
xchg
call
dec
sbb
mov
sbb
dec
les
add
or
jle
mov
test
test
push
inc
rorl
xor
pop
test
jg
push
and
push
ljmp
mov
repnz
xor
nop
mov
or
xor
jg
sbb
xchg
inc
add
loope
pop
inc
and
mov
jns
ror
mov
pop
outsb
gs
push
cmc
push
lds
jbe
jae
and
divl
mov
or
xorb
enter
shll
lret
sahf
mov
dec
divl
ja
xor
jmp
jne
jbe
xor
fstp
inc
xchg
ret
xlat
and
cs
cmp
and
or
out
pop
mov
jp
xor
ds
push
inc
and
aaa
sub
loopne
loopne
cmp
shl
test
jp
ret
mov
inc
inc
fsubp
inc
mov
mov
mov
xchg
xchg
ds
add
fistpll
mov
out
dec
add
jp
aas
in
cmp
int
jle
add
ds
sbb
pop
int
inc
fcmovb
xchg
jp
lret
mov
mov
cs
lock
and
jbe
in
sub
aaa
scas
jo
mov
or
rcl
fbstp
clc
xor
gs
pop
das
fdivrs
or
arpl
stc
dec
leave
adc
mov
jl
add
pop
data16
mov
cmp
ret
in
dec
nop
xor
arpl
inc
jno
jge
mov
aad
mov
lret
ss
or
mov
and
xchg
xor
xchg
sarb
mov
sbb
dec
es
mov
jg
adc
jne
stc
out
jo
in
push
push
ret
movsl
and
daa
ret
nop
and
jmp
pop
sti
imul
mov
push
mov
into
or
or
pop
ret
outsb
ret
ss
cmp
add
mov
aas
loopne
fdivrs
fwait
mov
xchg
loopne
dec
bound
jge
xor
jmp
dec
repz
pop
mov
call
push
push
add
mov
jne
xorb
xor
pop
loopne
sbb
data16
xchg
call
test
mov
jb
xor
les
push
xchg
movhps
pop
push
jge
add
mov
out
adc
jbe
sub
shlb
sub
iret
or
jae
add
mov
popf
pop
in
stc
sbb
ffree
xor
xor
leave
push
clc
test
pop
stos
subb
lret
test
add
test
push
gs
mov
sbb
push
mov
or
push
std
js
dec
cld
push
inc
les
mov
pop
add
pop
mov
push
mov
popf
and
mov
rclb
jo
and
or
mov
fstl
dec
out
repnz
stos
push
jb
jl
sbb
mov
pop
dec
je
dec
push
in
xor
cld
mov
mov
mov
test
mov
roll
jl
mov
cwtl
pop
mov
mov
lods
adc
pop
cmp
or
in
cmp
pop
aas
jbe
rorb
cwtl
movsl
pop
shrb
add
les
mov
push
in
pop
sub
jg,pt
nop
pop
sbb
dec
shlb
sbb
jge
daa
pop
dec
jp
cmp
cmp
mov
sub
sub
idivl
push
push
xor
xorl
push
mov
pop
addr16
ss
xor
shl
lea
setae
pop
push
call
jne
and
out
mov
fistpll
xor
rcr
mov
out
mov
scas
add
xorl
rclb
adc
xchg
lret
aam
lret
cmp
nop
adc
sbb
adc
sbb
jb
nop
lds
xchg
push
and
jne
dec
xchg
xor
jbe
cmovle
dec
xor
push
ss
lods
jae
mov
xchg
clc
ss
add
mov
xchg
mov
xchg
repnz
sub
jo
rolb
shll
bnd
inc
xor
inc
xchg
cmp
push
or
fists
push
mov
and
push
hlt
or
inc
mov
xor
and
sahf
inc
vshufpd
cli
push
xor
push
dec
xor
jb
pusha
cltd
cld
push
pop
mov
mov
dec
xor
xor
xchg
add
out
jo
shll
and
out
jo
shlb
in
sub
sbb
jae
fisubrs
in
sub
shlb
xor
cmp
jo
shlb
jp
push
push
cmc
dec
push
push
std
inc
push
sbb
or
outsb
roll
lods
mov
xor
jl
hlt
and
repnz
mov
sub
mov
push
pop
dec
rcrb
push
and
add
or
lods
cs
nop
mov
adc
dec
sub
push
sbb
xchg
andl
das
fnstsw
iret
or
sub
shrb
pop
jge
adc
xor
add
ss
xor
pushf
jp
adc
xchg
push
fs
xchg
data16
cmp
sahf
xor
aas
mov
pusha
push
call
dec
enter
in
je
je
mov
fistpll
stos
in
scas
mov
sub
mov
sbb
adc
mov
and
movl
sbb
cmp
push
nop
adc
out
or
mov
mov
jb
add
mov
neg
inc
push
sbb
push
mov
enter
aas
mov
or
mov
mov
pop
cmp
or
scas
mov
les
push
out
test
cld
pop
loop
jo
mov
std
mov
dec
jp
or
ljmp
mov
popa
pusha
pop
fmuls
inc
xchg
into
je
aad
movb
cmp
mov
sahf
rcr
lahf
fisubs
sbb
mov
loope
and
jge
inc
xchg
bound
inc
mov
push
popf
mov
out
jns
cmp
mov
and
mov
fidivl
add
xchg
mov
jnp
mov
dec
pop
xor
test
inc
daa
mov
scas
push
icebp
into
test
setns
lahf
and
sbb
movb
scas
cmpsb
rcll
imul
out
jne
lahf
dec
mov
lret
test
mov
bound
addb
pop
insl
lcall
push
xchg
aaa
inc
push
sub
sbb
push
pop
stos
and
cwtl
shll
sar
jns
push
mov
sub
mov
mov
push
repnz
popf
push
cmpsl
rcr
push
repnz
fnstcw
pop
pop
js
lcall
add
notl
out
pop
fisubl
push
xchg
out
ljmp
mov
jg
cltd
out
stos
and
jns
leave
jl
jbe
repnz
xchg
dec
dec
hlt
mov
pop
je
mov
adc
jecxz
fsubl
pop
test
fldl
sbb
sbb
push
push
push
jge
adc
pop
jae
fimull
ss
shll
mov
pop
movsb
jecxz
add
cltd
push
add
out
popa
orl
pop
bound
mov
lea
jg
out
fs
sbb
in
or
add
imul
adc
dec
ret
inc
test
lock
aad
adcb
insb
loopne
mov
fbstp
test
and
out
inc
adc
vpcmpeqq
add
inc
into
mov
test
ret
cmp
jno
push
loope
dec
dec
xor
inc
or
adc
nop
add
xor
sbb
gs
scas
ss
movsb
je
in
sbb
push
es
sbb
mov
lods
mov
aam
daa
xor
scas
pop
lret
xchg
aas
dec
xchg
rcrl
pop
or
sbb
jmp
pop
stc
push
mov
rolb
and
jmp
dec
fisttps
add
xor
dec
mov
loop
sub
push
jl
pop
outsl
sbb
movsb
cltd
into
cmp
mov
jnp
cwtl
out
aam
jbe
push
jmp
push
cli
fnstcw
ret
jl
lods
inc
cmp
pop
adc
inc
int
xchg
mov
push
and
or
adc
icebp
aas
lahf
xor
inc
clc
mov
dec
lods
movsl
outsl
sarl
push
lret
adc
das
sub
pcmpeqw
outsb
lods
mov
cmp
sti
popf
lods
mov
jnp
stos
sub
ja
xchg
popa
cmpsl
test
and
jo
movhps
sarb
lock
push
sbb
pushf
imul
cmp
cmp
lods
mov
lock
bound
jecxz
ja
sbb
push
adcb
and
or
xchg
lret
jno
dec
pop
mov
lods
xrelease
pop
mov
prefetchwt1
loop
in
xlat
sbb
xchg
or
sub
adc
leave
test
or
arpl
sbb
xchg
xor
clc
adc
lods
inc
mov
rcll
mov
mov
test
xor
fdivl
adc
ja
aam
roll
aaa
cmp
add
movsl
hlt
popa
sbb
ret
mov
pop
push
mov
test
cmp
in
mov
mov
jo
dec
add
cs
in
jo
cmp
and
fsubr
ja
cmp
in
in
cmpsb
aam
jo
cmp
sub
mov
jno
adc
out
sbb
loopne
ret
rorb
cltd
pop
add
push
sub
sti
arpl
sbb
push
ss
je
mov
fildl
ficoml
pop
stos
sbb
mov
dec
insl
es
jl
cmp
mov
mov
mov
outsl
jo
js
loope
daa
pop
sub
or
jnp
iret
sub
sub
push
daa
scas
pop
push
xor
faddl
jmp
cmc
call
outsb
mov
xchg
push
movsb
xor
add
in
pushf
sbb
dec
mov
mov
cmc
shll
mov
xor
clc
mov
mov
sbbl
jo
mov
pop
xchg
jp
cmpsb
stc
aam
rcll
imul
sub
mov
pop
jcxz
or
or
sbb
leave
mov
dec
flds
mulb
pop
jo
push
add
dec
fldenv
sub
cmp
pop
push
mov
xor
cs
add
pop
addr16
jp
sub
mov
xor
out
std
sbb
inc
pop
mov
dec
push
and
mov
les
mov
push
dec
add
mov
sbb
adc
pop
xchg
add
mov
add
mov
mov
bound
popa
jns
sarl
imul
and
inc
sbb
dec
repz
jne
push
dec
jns
mov
imul
push
pop
dec
adc
mov
hlt
mov
pop
pop
or
lods
out
loop
cmp
loope
movsb
mov
pop
aam
jo
or
ljmp
adc
push
adc
movsb
scas
jae
and
cmp
cmp
push
lret
out
push
mov
xchg
add
insl
lods
push
xor
jp
cld
or
xor
add
mov
repz
enter
stos
dec
and
adc
pop
jns
add
cs
mov
mov
out
stc
xchg
mov
outsl
inc
jns
ja
inc
xor
sahf
fdivl
push
mov
sbb
adc
cmp
add
pop
scas
mov
adc
push
ja
cmpsb
jb
test
cmpsb
add
test
sti
aas
es
and
pushl
fwait
cmp
mov
shlb
loope
iret
jnp
xchg
data16
or
lods
mov
lret
rclb
sbb
insb
data16
pop
add
xchg
mov
shlb
and
sub
mov
movsb
sbb
scas
push
dec
adc
es
lahf
ds
sbb
pop
mov
and
es
xchg
push
pusha
clc
jb
dec
xchg
mov
cmp
pop
leave
ljmp
movsb
popf
inc
cs
outsl
xlat
lods
cmp
xor
pop
push
xchg
pop
icebp
mov
add
vpackssdw
je
std
adc
decb
in
scas
add
cmc
and
jbe
mov
mov
lods
pop
aad
pop
scas
std
sub
dec
and
adc
incb
cmp
xor
inc
in
in
lock
xchg
mov
push
nop
lods
sbb
mov
mov
xor
sbb
in
mov
scas
jo
dec
pop
into
or
test
lds
shr
jo
pop
pop
lds
mov
pushf
add
leave
cltd
mov
cltd
pop
mov
mov
cmp
cmpsl
push
sub
or
mov
mov
insl
je
push
and
inc
pop
out
xchg
and
xor
pop
jecxz
sub
ret
fstsw
stos
rorl
cmpb
sub
js
mov
lds
pop
loope
dec
aad
add
out
sbb
mov
pop
data16
push
jbe
xor
mov
sub
xlat
push
pusha
xchg
stos
fnsave
xchg
jb
pop
jg
jmp
dec
push
adc
stos
push
movsl
fwait
fwait
xchg
add
hlt
outsb
mov
dec
mov
inc
call
mov
sbb
mov
fbld
sbb
mov
lock
mov
shl
adc
mov
shll
in
xchg
xor
xchg
lret
dec
adc
cmp
bnd
xchg
popf
xchg
xchg
adc
xchg
mov
jo,pn
add
mov
sub
xchg
test
and
fcoms
insl
sbb
dec
or
jl
dec
xor
insl
ss
imul
pop
in
push
stos
outsb
or
mov
in
out
in
fdivs
in
insb
out
fcom
xor
add
inc
mov
jle
push
or
xlat
push
lods
push
je
das
sub
mov
dec
mov
xor
and
push
inc
call
jnp
or
mov
xorl
dec
and
jbe
sub
cld
push
dec
mov
mov
out
adc
xchg
push
cmp
jo
shll
es
sub
test
jae
divl
sub
inc
int3
jae
stos
xor
jo
int3
jae
movsl
xor
jo
int3
jae
sbb
push
push
mov
push
cmpsl
push
push
xorl
int3
pushl
addr16
mov
xor
adc
hlt
and
and
mov
mov
inc
jb
inc
mov
fs
cmovs
test
dec
and
insb
and
sub
or
test
nop
xor
xchg
into
out
int3
dec
xor
push
sbb
cmpsl
lahf
and
cmp
cmp
stc
jnp
iret
in
int
in
in
sub
test
xchg
popf
xor
sbb
xor
mov
push
adc
xchg
push
adcb
icebp
test
repz
mov
jl
call
or
iret
jne
out
je
jo
mov
fildll
fildll
xlat
lods
or
sti
mov
sbb
fwait
xor
mov
dec
add
add
xor
shlb
inc
addr16
adc
jmp
sbb
xchg
xchg
lea
adc
or
mov
mov
or
cmpsb
and
mov
xchg
shll
cwtl
cmp
inc
iret
inc
sub
shrl
dec
mov
popf
pop
pop
mov
call
pop
pop
xor
cmp
in
add
call
aaa
xchg
push
push
nop
add
es
or
fbstp
jbe
mov
negb
imul
xor
test
data16
or
mov
push
gs
xor
pop
ljmp
adc
mov
aaa
xor
scas
mov
pop
cmpsl
in
jo
cmp
loop
test
jno
push
rol
sahf
stos
stos
sbb
and
aam
mov
sbb
out
cwtl
adcl
daa
pop
xchg
int
pop
mov
or
rolb
push
pop
cmp
xor
mov
and
xchg
sbb
inc
ljmp
adcb
cmp
shrb
inc
jge
xor
repz
add
mov
mov
mov
and
pop
fsubrl
flds
cmp
les
mov
adc
jle
sbb
in
jmp
andb
or
ljmp
or
mov
icebp
lock
jbe
sti
insl
mov
aas
mov
sbb
sbb
pop
rcll
mov
pop
cs
enter
xlat
mov
bound
xchg
mov
shl
lods
gs
mov
stos
lock
bswap
push
nop
scas
dec
test
pop
popa
pusha
loop
clc
push
or
jbe
mov
mov
std
movsl
mov
adc
movsl
es
adc
push
or
adc
std
mov
pop
cmp
aas
sub
popf
push
pop
cmp
fsubrs
iret
jmp
jge
ret
push
mov
pop
cmc
mov
movsl
pop
mov
push
in
andl
mov
lahf
and
aad
sub
aad
sub
lds
test
icebp
and
nop
das
mov
movsb
lret
push
sbb
dec
sub
or
mov
cmc
mov
cmp
push
sbbb
push
in
cmp
cwtl
and
adc
lahf
and
push
mov
out
pushf
mov
jno
dec
mov
mov
in
mov
mov
jno
push
mov
mov
in
cmpsl
shl
lea
xchg
test
mov
and
shlb
stos
into
call
pop
push
add
push
test
int
dec
dec
aaa
pop
lock
jno
in
data16
repz
mov
fucomip
xchg
mov
sbb
js
jb
sub
popf
pop
mov
scas
fcomps
pop
js
fidivrl
sub
insl
pop
sub
lods
outsl
js,pn
pop
mov
stos
push
iret
or
lahf
xor
pop
jo
jmp
jo
mov
outsb
add
nop
dec
push
and
popa
test
xchg
pop
mov
int3
lock
sarl
jmp
aaa
or
loopne
enter
adc
into
fdivrl
mov
inc
or
and
fnstsw
popa
jae
pop
xor
fisubl
in
cmp
clc
jmp
fdivs
xchg
jp
xor
mov
in
xor
sub
daa
fistl
mov
fs
into
inc
cmp
or
mov
arpl
mov
repz
ss
das
ljmp
jne
sbbw
fimull
sub
in
xchg
sbb
jp
sbbb
sub
jl
lahf
imul
movsl
sbb
push
ficoml
rorb
lds
iret
inc
xlat
push
lcall
mov
divb
inc
cmp
inc
in
shl
cmp
shll
pop
std
push
mov
cmp
sti
inc
in
xchg
xchg
sahf
addl
pusha
push
out
lahf
mov
sub
mov
ret
out
mov
push
sbb
out
mov
push
adc
or
cmp
andl
fwait
gs
jb
sub
adc
jp
mov
mov
xchg
dec
in
dec
xchg
or
cltd
stc
std
ds
inc
and
rcrl
lret
sub
xchg
fwait
pusha
jns
adc
ret
xor
jp
xchg
leave
jbe
lea
mov
imul
dec
cmp
jne
cmp
leave
dec
arpl
xor
dec
sti
pop
sub
in
jns
cli
clc
xor
inc
or
adc
test
loope
jnp
sbb
add
xchg
cmp
gs
inc
xchg
pop
popf
mov
pop
push
adc
inc
cmpsl
popa
lret
fbstp
dec
fsubr
jb
loop
xchg
mov
icebp
test
ficoms
gs
add
mov
mov
dec
mov
pop
popa
idivl
int
jbe
jae
inc
lock
jl
jecxz
mov
mov
shlb
mov
hlt
movsl
out
repnz
mov
gs
and
sub
and
dec
sub
iret
inc
cmp
imulb
leave
and
fistps
cmp
test
xor
test
gs
pop
mov
in
andl
mov
and
std
or
loope
aad
frstor
jbe
mov
idiv
mov
sbb
mov
mov
movsl
lret
push
push
lahf
pop
push
lock
sub
or
mov
repnz
add
pusha
push
mov
in
cmp
mov
push
in
clc
pop
insb
jo
xor
adc
subb
xor
negb
ljmp
test
movsl
cltd
adc
jnp
out
xchg
fldl
xor
pop
add
mov
ljmp
cmp
mov
jmp
jno
xchg
mov
cmp
xor
out
cs
insb
adc
mov
test
sbb
lahf
lcall
aaa
test
pop
call
daa
leave
cmp
hlt
dec
and
jg
insl
sub
or
adc
stos
int3
fwait
mov
jae
clc
jae
insb
pop
push
aaa
bound
sub
dec
aas
ret
dec
push
inc
ja
inc
arpl
add
jl
in
addr16
in
sub
ja
jo
jle
jnp
xchg
adc
sub
pop
cs
mov
push
scas
test
mov
ret
outsb
adc
test
adc
mov
sub
lock
clc
enter
faddl
inc
pop
xorl
popf
lds
xchg
gs
sti
and
enter
outsb
pop
jge
jb
out
jg
or
adc
daa
jecxz
mov
movsl
cli
xor
inc
test
mov
inc
or
dec
or
jo
dec
cmpsl
aad
jge
in
sbb
stos
fidivl
cmp
fadds
push
inc
jl
out
imul
xchg
gs
je
inc
pop
xchg
repz
push
call
out
inc
mov
ret
filds
push
xorl
push
and
push
mov
movsb
mov
fidivl
xor
insl
inc
xchg
les
jmp
or
imul
dec
aad
dec
and
xchg
and
ljmp
mov
in
xor
push
cmp
xchg
in
jo
cmp
cmpl
jo
cmp
cmpb
jo
cmp
jge
sub
shr
jo
cmp
jp
push
push
std
mov
push
and
or
ror
decl
add
dec
xor
imul
jle
and
outsl
lock
inc
mov
xchg
mov
jnp
pop
dec
call
lcall
push
lds
xchg
nop
cmpsb
adc
dec
or
sbb
lds
pop
xchg
je
cmp
push
shl
mov
into
mov
mov
pop
lahf
fistpl
add
push
push
cmpsl
mov
gs
xchg
out
je
fs
jle
es
sbb
inc
movsl
push
das
insl
and
push
test
mov
pop
dec
sbb
inc
mov
in
sarb
pop
or
mov
mov
mov
shll
lcall
outsl
into
mov
sbb
sub
pop
adc
lret
sbb
lret
cmp
push
mov
xchg
pusha
xchg
adc
adc
push
push
adc
mov
dec
mov
mov
dec
cmp
and
pop
pop
xchg
cmpsb
jl
jp
sbb
adc
dec
push
xchg
xor
and
scas
insb
call
xchg
jge
pop
cmpsb
jl
jecxz
shll
fidivrl
jle
ljmp
ja
dec
mov
leave
and
jp
jg
dec
stc
std
in
in
push
out
push
or
fwait
or
int
imul
jge
and
mov
adc
pinsrw
imul
cmc
push
jae
ret
in
bound
sub
fwait
and
xlat
mov
jl
xchg
jb
ja
leave
sbb
dec
push
loop
inc
sbb
pop
sbb
sub
sbb
or
push
popa
and
push
jne
scas
inc
scas
ss
sbb
push
gs
repz
popf
fnstsw
lods
xchg
pop
iret
xchg
mov
dec
add
push
mov
hlt
aad
int
jns
push
mov
adcl
ja
test
and
jns
adc
dec
movsb
cmpsb
xchg
dec
cmpsl
mov
mov
mov
pop
dec
int
jl
das
sub
fs
leave
enter
repnz
xchg
xchg
std
sub
add
cli
sbb
cltd
push
gs
out
fdivrs
stc
mov
das
das
and
icebp
push
mov
inc
add
mov
sub
int3
out
xor
jne
sbb
mov
mov
fisttps
sub
mov
fwait
mov
call
push
adcl
incb
mov
xchg
ficoms
xchg
lret
mov
sbb
adc
xchg
adc
loope
mov
mov
jb
pop
mov
inc
xchg
xchg
rcll
push
mov
insl
dec
lock
or
xor
lcall
std
cmpsl
mov
push
addb
in
jmp
xor
xor
pushl
stos
lock
add
push
loopne
xor
cmpsl
mov
push
dec
mov
push
cld
in
out
mov
or
iret
mov
fnstenv
inc
andl
mov
test
add
pop
out
mov
iret
dec
and
repnz
xchg
pop
xchg
movsb
es
call
in
xor
test
xor
push
sbb
out
mov
cmp
orl
in
jo
cmp
mov
in
jo
cmp
mov
in
jo
cmp
xchg
push
push
jmp
push
sub
or
xchg
bound
xor
lcall
jo
xchg
ljmp
inc
jle
inc
mov
inc
mov
test
jle
int
dec
addr16
outsl
or
push
sub
xchg
js
nop
mov
xchg
into
dec
dec
adc
push
sbb
shrl
pop
sahf
jae
cmp
test
iret
mov
iret
sub
pop
lahf
movsb
arpl
sbb
adc
adcb
pusha
adc
mov
outsb
mov
icebp
aas
loope
inc
add
mov
mov
call
jne
sbb
cmp
mov
fisttps
pop
fildll
dec
clc
mov
xlat
andb
xor
arpl
sub
lret
sub
lret
cmp
sub
xchg
adc
adc
outsb
jb
in
mov
aam
xchg
mov
and
lahf
and
outsb
insl
dec
jbe
dec
or
lcall
pop
sahf
sbbb
cmpsl
mov
push
push
orb
jg
mov
pop
jmp
xor
xor
in
jle
sarb
shll
push
adc
jp
inc
xchg
sbb
push
aad
aad
stos
and
adc
ret
mov
push
mov
mov
jp
mov
adc
outsb
insb
inc
les
out
jl
jle
pop
xchg
and
adc
dec
addr16
dec
and
xchg
and
or
mov
and
lret
loope
mov
adc
in
jo
dec
push
hlt
insl
shr
xor
sbbb
sbb
in
cwtl
iret
in
jo
push
xor
fdiv
xor
filds
pop
sbb
in
xchg
iret
in
jo
dec
push
and
sarl
cmp
call
cmp
jb
into
in
insl
ja
popf
and
pop
fcomps
adc
lock
lock
jae
outsl
mov
fdivrp
std
sbb
shlb
and
and
sub
jg
adc
in
or
negl
mov
mov
sbb
mov
xor
cmp
iret
pop
ljmp
add
cmp
fadds
sbb
mov
cmp
push
and
add
add
and
adcl
mov
fdivr
fiaddl
decb
sub
shll
cmc
xor
in
mov
mov
out
jmp
bound
add
or
mov
xchg
mov
loope
cmp
mov
adc
mul
adc
hlt
aad
mov
aam
shlb
push
sbb
jmp
mov
gs
xlat
test
insl
inc
xchg
or
xor
cltd
xor
xor
pop
mov
lret
push
pop
jl
mov
pop
mov
jecxz
xorb
in
jge
ror
adc
enter
lahf
sub
or
je
xlat
inc
rcl
push
fildll
pop
mov
push
cltd
mov
xchg
push
pushf
sahf
push
cmp
push
mov
mov
dec
vpackuswb
out
push
push
add
jo
mov
movups
int3
push
pusha
rol
orl
dec
and
mov
push
je
pop
mov
mov
in
jae
lret
mov
xchg
cmp
sahf
mov
in
jo
cmp
mov
iret
in
jo
cmp
cwtl
mov
in
jo
cmp
mov
iret
in
jo
sub
pop
jo
fstpl
sbb
shlb
into
jmp
add
dec
xor
testb
lock
insl
lock
mov
xchg
mov
dec
pop
movsl
dec
and
and
loop
or
push
sub
sahf
ja
adc
fmul
dec
loopne
push
sbb
js
daa
pop
stos
jb
cmp
cmp
jmp
jnp
sub
jne
lahf
mov
lahf
jbe
jmp
ss
ss
adcl
cmp
outsb
xchg
scas
outsb
icebp
and
icebp
aas
in
cmp
inc
lds
call
jne
sbb
inc
shll
inc
pop
fildll
adc
fcomps
push
ds
push
andl
xor
or
xchg
aas
movsb
push
jmp
push
xor
add
adc
mov
xchg
cmpsl
pop
xchg
adc
mov
pop
mov
aad
mov
mov
inc
xchg
mov
and
sahf
and
insl
insl
dec
cmpb
dec
cmpsb
pop
dec
xor
cltd
xor
stos
jg
mov
mov
xor
adc
mov
xchg
jg
sub
xor
je
rolb
sbb
and
inc
xchg
mov
aad
mov
push
pop
lods
jp
jmp
xchg
push
mov
mov
lods
mov
xor
push
rcll
xchg
xlat
nop
les
mov
inc
cmp
repz
dec
and
mov
push
bound
mov
mov
in
fdivl
in
pop
iret
in
jo
aaa
jno
inc
mov
mov
and
sub
into
in
jo
aaa
jno
push
mov
in
jo
aaa
jno
fstpt
ss
jno
sub
push
cld
addr16
addb
push
out
aas
jne
jbe
loop
dec
xor
mov
testb
and
sbb
mov
mov
aad
mov
cmpb
mov
dec
and
outsb
or
ja
nop
inc
adc
dec
cmpsb
sbb
jecxz
sbb
pop
xor
cmp
test
ja
dec
jp
sub
or
pop
adc
lahf
xor
ljmp
cmp
adc
sbb
outsb
sbb
cmp
add
mov
pop
sub
jecxz
add
int
jmp
shlb
sbbb
cvtpi2ps
cli
xlat
mov
out
push
enter
mov
mov
int3
addl
cld
ss
xchg
dec
icebp
xchg
adc
cmp
lea
movsb
adc
loopne
mov
aad
mov
mov
inc
xchg
xchg
rcrl
push
out
mov
cmp
or
xor
cwtl
xor
xor
mov
cmp
push
lahf
jle
mov
pop
mov
jmp
in
leave
xor
mov
dec
xor
out
xchg
inc
dec
and
xchg
ljmp
aad
mov
push
imul
cmc
and
inc
ficoms
repnz
mov
movsb
mov
out
mov
nop
sti
aad
jnp
push
fwait
lahf
lahf
pushf
mov
inc
in
adc
imul
outsb
sahf
ljmp
js
sbb
sbb
inc
jne
fisubl
jl
shlb
adc
jl
scas
cmpsl
loope
aaa
sub
jl
pop
jl
lods
cmpsl
loope
xor
adc
jl
test
sub
jl
pop
jl
cmpsb
cmpsl
loope
push
sub
mov
mov
xchg
xor
pop
xchg
pop
pop
outsl
mov
mov
sub
mov
shlb
sbb
sbb
push
inc
aad
call
cmpsl
pop
dec
push
movsb
adc
sti
xchg
and
mov
inc
sub
push
outsl
lds
pop
xlat
lcall
cmp
dec
out
outsl
inc
xchg
cmp
push
cmp
dec
and
xchg
cmp
arpl
loopne
mov
inc
push
daa
push
lods
loope
mov
pop
outsb
mov
clc
jo
popf
pop
das
imul
es
cld
incb
jo
pop
jbe
lods
and
subb
dec
mov
dec
cmp
data16
mov
jbe
xchg
icebp
adc
add
xchg
insl
imul
in
addl
lods
popf
xchg
add
sbb
sbb
inc
loop
insb
sub
shlb
rclb
push
inc
ret
mov
or
std
fcomps
daa
fcomps
and
fisubs
out
lret
sub
xor
movsb
sahf
mov
sahf
and
enter
insl
jne
test
jne
add
cmpsb
inc
mov
mov
add
dec
cli
inc
jge
inc
clc
push
stc
out
and
add
push
add
pop
dec
sbb
xor
cmp
mov
out
mov
push
cli
aad
loope
push
fwait
add
mov
pop
fnstenv
outsb
sbb
xor
jne
inc
jne
inc
mov
in
jo
ss
and
in
jo
ss
std
lods
push
cli
mov
in
jo
ss
sub
in
jo
ss
out
sub
int
ss
out
fisttpll
inc
push
dec
pop
andl
into
pushl
dec
xor
mov
idivb
mulb
test
lock
outsl
lock
mov
aam
mov
mov
and
xchg
inc
les
mov
nop
push
setno
call
inc
pop
sbb
adc
sub
jno
cmp
cmp
sti
adc
add
in
jae
aaa
inc
sbb
lahf
xor
bound
ss
adcb
scas
mov
outsb
pop
gs
push
mov
inc
add
iret
dec
mov
mov
int
cmc
push
jbe
sbb
adc
sbb
lods
mov
cmc
mov
xchg
in
push
nop
call
sbbl
jmp
jle
or
adc
push
push
adc
xchg
xchg
cmp
adc
adc
or
jb
cmpb
jle
xchg
clc
sahf
and
mov
insl
inc
insb
insl
dec
adc
or
xor
xchg
xor
cmp
pop
decl
add
fs
mov
pop
mov
push
std
in
fwait
das
xor
or
in
pop
das
shll
sbb
mov
inc
fsubs
inc
xchg
mov
fsubrl
jae
aad
mov
imul
rcll
scas
mov
xor
iret
jg
inc
or
inc
les
mov
or
push
or
sahf
push
xor
pop
int
and
xchg
and
pop
outsb
push
aam
push
mov
shl
adcl
in
mov
in
cmp
dec
out
sub
jnp
push
mov
mov
sub
int
jo
ss
mov
sub
int
jo
ss
lods
mov
in
jo
ss
stos
mov
push
push
pop
push
adcl
or
int
cmp
add
dec
xor
negb
mulb
out
and
stos
jnp
mov
cmc
inc
mov
roll
cmp
mov
dec
and
xchg
and
cli
insb
or
push
sub
mov
lds
outsl
fcmove
dec
cmp
push
sbb
lods
data16
pop
jo
cmp
cmpsl
cmp
jno
mov
inc
aaa
sbb
inc
fnsave
lahf
cli
pusha
scas
xor
cli
fmuls
adc
lods
mov
outsb
lods
lods
outsb
icebp
cld
mov
aas
add
lret
aam
call
jne
push
jbe
adc
in
inc
add
adc
repnz
fildll
lods
cmc
mov
and
mov
es
push
cmp
lret
or
add
or
mov
xchg
lret
int
fdivrl
cltd
sbb
pop
xlat
push
loop
out
xor
xchg
xchg
ficoms
mov
shll
or
xchg
xchg
iret
push
and
lea
insl
add
dec
or
mov
dec
cmp
jge
mov
in
sub
push
mov
push
mov
jle
in
and
xor
push
jnp
rcr
mov
cmp
inc
push
rorl
push
faddl
mov
push
cmp
xchg
push
fxch
pop
mov
push
inc
clc
xor
in
fistpll
jg
les
mov
push
xor
stos
int3
dec
and
xchg
and
subb
es
or
cmc
shlb
in
push
int
jo
xor
mov
mov
fnsave
xor
mov
int3
fnsave
xor
mov
mov
fnsave
xor
in
in
aad
in
jo
xor
pop
push
jg
fwait
lcall
scas
into
xchg
int3
into
decl
or
push
dec
xor
mov
testb
and
aaa
imul
pop
cmp
mov
mov
dec
scas
mov
or
sub
push
jl
jg
loope
add
aam
mov
mov
sti
push
adc
bound
and
or
loop
push
push
and
mov
outsl
push
mov
push
fimull
and
jne
xchg
push
pop
cmp
adc
push
and
and
jbe
sub
jg
inc
dec
int3
inc
lods
pop
or
xor
out
sti
out
leave
scas
push
lcall
jmp
fdivrp
nop
fdivp
push
les
hlt
inc
lret
cmp
adc
push
rorl
ficoml
push
xchg
ret
push
rolb
sbb
push
pop
fwait
push
iret
ficomps
iret
aaa
pop
xchg
aaa
int
dec
add
iret
int3
ret
push
add
push
addr16
fldenv
pop
sub
das
aam
or
adc
jno
shlb
or
loope
jbe
inc
jno
cmc
cmp
insb
adc
mov
loop
ja
popf
aas
mov
jo
pop
jae
test
xchg
add
or
das
nop
cmp
nop
sub
cli
hlt
xor
adc
adc
cltd
adc
aas
fcmove
jno
nop
jno
xor
add
add
bound
ja
adc
scas
aas
or
mov
and
popa
mov
inc
add
int3
pushf
fcmovne
mov
daa
imul
clc
mov
movb
test
cli
cld
test
adc
stc
cld
test
adc
xor
cld
cld
test
or
push
repz
push
adc
adc
adc
pop
fcmovb
mov
mov
xlat
or
je
insl
aas
mov
mov
addr16
das
mov
movsl
jge
add
xchg
add
add
cmc
lods
repnz
popa
out
push
shll
inc
sub
sahf
push
imul
aas
pushf
mov
add
pop
fstpl
inc
and
mov
sbb
jl
dec
push
mov
push
outsl
push
xchg
sub
jne
mov
jae
popf
cmp
cwtl
sbb
lcall
and
cld
jmp
mov
push
jg
inc
int
lods
movsl
or
or
mov
dec
gs
sbb
sti
add
enter
xchg
push
lret
push
sti
push
andl
sti
xor
shlb
and
lea
cmp
ret
jns
add
push
sbb
mov
inc
bound
std
jo
sub
pop
push
mov
mov
push
sub
xlat
mov
push
inc
xchg
lods
ret
ret
and
cmp
cld
push
enter
movsl
push
xor
mov
stos
adc
jecxz
fwait
mov
rcll
bound
addr16
adcl
push
push
or
pop
arpl
mov
inc
dec
mov
add
and
mov
xor
std
cli
in
out
sbb
lods
das
mov
mov
sahf
inc
dec
inc
sub
js
add
movsb
out
pop
cli
push
sbb
in
mov
in
scas
pop
in
rcll
sub
test
pop
fmuls
inc
push
jp
jbe
xor
in
es
movsl
std
xchg
jno
push
mov
adc
sub
movsl
fbstp
and
jl
nop
ficomps
cltd
aam
mov
pushf
bound
pop
fmuls
add
rcrb
and
xlat
jp
ret
push
icebp
in
cld
dec
rol
test
adc
adc
mov
cmpsb
push
pop
mov
or
mov
test
lret
xchg
loope
jns
cmp
pop
and
xchg
sbbb
not
mul
pop
xchg
mov
movsb
xlat
inc
sub
jecxz
pop
inc
add
in
cmp
lock
push
add
mov
or
jl
mov
test
push
adcb
cli
add
cmpsl
fistpll
mov
out
and
mov
cmp
into
lock
std
jbe
dec
add
sub
and
out
sub
fwait
push
mov
sahf
ficoml
lods
adc
jle
dec
fpatan
lahf
cmp
cwtl
lret
subl
jno
dec
xor
mov
xlat
mov
add
or
xchg
mov
into
loopne
lods
dec
mov
xchg
jno
insl
sar
iret
push
fidivl
into
dec
push
into
stc
push
sub
jecxz
xchg
mov
mov
sarb
loope
xchg
ja,pt
aas
icebp
mov
dec
mov
mov
outsb
popa
stc
mov
in
mov
xchg
nop
xor
data16
rcl
xchg
fcompl
hlt
sub
add
mov
es
xchg
push
mov
pshufw
sub
jns
les
xor
sbb
cmp
outsb
jne
lret
in
jo
xor
push
xor
into
scas
cmp
in
jo
sub
dec
enter
dec
lret
in
jo
xor
add
jl
dec
lret
in
jo
push
jno
xchg
sti
jae
add
add
jne
jbe
js
les
add
push
sub
add
add
hlt
jbe
push
inc
lahf
mov
shr
addl
aad
xlat
and
lds
add
dec
and
adc
aad
mov
ds
sbb
sbb
adc
fisubrl
popf
sbb
je
push
das
iret
rep
enter
sub
xchg
lahf
loopne
lahf
xor
out
enter
adc
adcb
pop
add
outsb
lds
icebp
aas
sbb
out
add
mov
jg
je
adc
xor
push
ljmp
mov
repz
pop
jecxz
push
push
cli
popa
andl
enter
stc
xor
jo
cmc
xchg
xchg
push
scas
lret
push
cmp
or
loop
xor
lcall
inc
sub
jo
sbb
xchg
int
and
fwait
and
shll
push
dec
xor
xchg
xor
fidivrl
mov
in
adc
dec
test
imul
sub
in
mov
shll
push
xor
nop
push
mov
xchg
adc
imul
jecxz
xchg
push
lock
or
mov
xor
add
add
xchg
pushf
les
or
mov
orl
ljmp
mov
into
fsubp
test
mov
cmp
lahf
jo
xor
fs
int3
jo
xor
push
lret
xor
subl
in
in
cmpsb
lret
ret
xor
jnp
mov
dec
int3
jo
xor
js
push
push
lret
lcall
dec
into
into
mov
lret
fimull
xor
xor
mov
cmp
rorb
flds
fdivrs
add
and
push
sub
push
add
gs
nop
inc
or
into
cmp
xchg
dec
lahf
adc
cmp
xchg
sbb
push
popa
cmp
cmp
lahf
subb
xchg
sub
or
pop
lahf
xor
xor
fidivl
adc
jne
adc
push
fs
movsb
fs
stos
pusha
icebp
mov
inc
add
xchg
call
ss
int
sbb
mov
movsl
jmp
fildll
or
mov
push
mov
cmpw
add
sbb
lret
ljmp
adc
test
xchg
pop
pop
xchg
adc
aam
mov
shll
cmpsb
mov
inc
xchg
int
and
cmp
dec
or
add
imul
mov
or
or
in
cli
in
pop
cmp
cmc
lock
sarb
sub
xor
mov
iret
jns
lods
xchg
addb
stos
or
inc
and
inc
loope
cmp
mov
push
pop
lret
nop
popf
mov
shll
mov
mov
xor
xchg
mov
or
adc
cli
mov
jns
dec
sub
dec
and
cwtl
clc
cli
arpl
sub
pushf
mov
inc
shl
cmpl
in
aad
in
jo
addr16
jecxz
out
pop
in
in
jo
cmpb
mov
in
adc
mov
adc
sub
lret
jns
jno
jno
sub
lret
out
aas
jno
into
mov
push
mov
sahf
push
sbb
or
lret
cmc
add
test
fnsave
inc
js
and
cmp
lock
mov
rolb
pop
mov
dec
cmp
dec
and
xchg
and
push
push
sub
push
sub
fidivl
nop
sti
or
dec
pop
adc
sbb
pop
out
pop
cmp
movsb
cmp
and
das
iret
pushl
sub
jo
lahf
in
pop
lahf
xor
in
ss
ja
adc
or
adc
pop
adc
rcrb
outsb
shrb
icebp
aas
push
mov
mov
int3
mov
inc
cmp
lods
mov
adc
stos
lds
mov
cmp
rclb
inc
push
push
pop
mov
mov
rolb
std
iret
pop
icebp
xlat
xchg
lods
mov
mov
lret
cmp
ja
adc
lret
adc
mov
mov
inc
xchg
xchg
and
and
push
add
dec
loop
dec
cld
cmpsb
xchg
xor
out
pop
mov
icebp
imull
cmovle
mov
push
mov
scas
stc
in
inc
sub
in
js
rol
sub
xor
push
sub
inc
ret
xchg
and
pushf
push
fnstcw
aad
mov
push
pop
scas
jbe
ljmp
mov
xor
arpl
mov
dec
les
or
fsqrt
jb
mov
dec
scas
leave
dec
and
and
les
push
lahf
inc
push
mov
mov
int3
iret
in
add
in
pop
lret
clc
xor
popa
mov
in
jecxz
in
jo
xor
pop
mov
in
loope
in
jo
xor
rcrb
in
fmul
in
jo
xor
push
mov
in
fcmove
in
jo
lcall
xlat
cltd
push
push
mov
pushf
or
popa
mov
out
add
inc
xor
xor
ja
and
jle
mov
rolb
mov
fidivs
lods
stc
sub
cli
dec
lds
ja
push
sbb
mov
andl
jp
js
lahf
arpl
pop
insb
insl
pop
cmp
cmp
stos
jg
iret
rcrb
sbb
xor
jb
add
pop
mov
push
push
insl
popa
sbb
jne
add
fmuls
orl
xchg
inc
pop
std
mov
jb
sbb
mov
cmp
clc
cs
fucompp
gs
enter
xchg
loop
xchg
lock
xchg
loopne,pn
addr16
mov
add
loop
xchg
push
pop
mov
ret
adc
adc
adcl
imul
mov
shlb
mov
mov
into
inc
xchg
int3
push
and
push
dec
or
dec
and
sub
xor
or
xor
jno
leave
push
sbb
push
jge
pop
push
jae
fadd
inc
lcall
mov
lock
out
or
jns
lock
and
enter
aas
mov
cmc
push
inc
cmp
push
vunpckhps
sbb
mov
mov
inc
push
mov
dec
adc
cmpsb
and
sbb
sub
add
scas
cmp
fisubrs
fidivs
inc
xor
mov
push
test
xchg
leave
add
pop
add
ret
in
cmovs
insb
jl
xchg
cmpl
test
ljmp
mov
lock
out
inc
pushf
lahf
adc
inc
jl
cs
push
jp
adc
loop
xor
mov
cmp
sub
inc
mov
pop
lcall
and
lahf
aas
mov
and
jmp
cmpsb
stos
aaa
sahf
inc
repz
cli
and
mov
insl
pop
sbb
add
ss
loop,pn
sahf
into
dec
sub
sbb
and
imul
sub
sahf
roll
cmp
dec
daa
repnz
cmp
jae
cmp
lds
or
add
adc
pusha
jns,pt
mov
outsb
scas
movb
sub
icebp
aas
inc
push
inc
add
xchg
cmp
dec
call
jne
aaa
add
push
test
push
xor
mov
aam
mov
xor
ss
lods
dec
or
aam
cld
xchg
sub
sub
xchg
nop
stc
jmp
mov
dec
ja
adcl
lret
ss
ss
inc
pop
mov
iret
jb
pop
mov
sbb
pop
call
sqrtps
push
or
xchg
adc
jge
arpl
mov
aaa
inc
negb
sarb
xchg
aam
xchg
fisubrl
and
jp
mov
mov
in
sub
mov
lock
mov
and
xor
add
xchg
push
mov
mov
out
cmpsl
sbb
dec
fnstsw
sti
mov
xor
adc
mov
add
ret
out
mov
mov
xor
mov
inc
orl
dec
and
ljmp
fisubl
and
cmpb
test
pop
test
add
sbb
in
mov
lahf
sub
sbb
in
test
js
mov
leave
cwtl
lea
mov
icebp
pop
mov
jo
push
push
jbe
xchg
jbe
jecxz
push
push
mov
and
into
idiv
push
lcall
add
jne
popf
sub
inc
cltd
mov
pop
push
test
or
and
inc
mov
mov
add
inc
mov
and
fwait
daa
inc
or
adc
insb
jno
nop
cmpsl
inc
jbe
mov
out
adc
push
pop
pop
cmp
jnp
mov
pop
arpl
adc
dec
outsb
lods
pushf
xchg
add
sarb
mov
es
push
push
outsb
outsb
push
cltd
pop
pop
mov
icebp
aas
mov
jno
fs
sub
push
inc
ja
sarl
int3
xor
xchg
xor
and
lods
and
mov
movsl
mov
jg
ret
das
mov
popa
hlt
mov
xchg
xor
or
scas
jne
lods
pop
mov
in
jecxz
jbe
push
inc
ficoml
mov
push
fisubs
movsl
pop
loope
xorl
mov
arpl
adc
add
sub
call
xor
inc
or
pop
mov
mov
pop
push
mov
dec
mov
add
in
xchg
mov
dec
inc
subb
jae
shll
les
js
sub
int3
mov
pop
push
xchg
in
aad
sub
xchg
shr
xlat
push
stos
stos
jae
cmpsl
xchg
cmpl
sub
mov
int3
insl
les
imul
pop
mov
add
es
cmc
imul
fs
imul
ljmp
pop
lock
xchg
movsl
sbbb
or
mov
dec
ljmp
pushf
out
sarb
mov
test
repnz
repnz
sbb
orl
pop
sbb
xchg
cmp
or
jle
inc
mov
repnz
push
je
adc
and
push
xchg
ss
scas
or
ss
push
fistps
aad
xchg
orl
aaa
negl
sbb
inc
push
pop
outsl
stos
pushf
add
data16
dec
xor
mov
bound
pop
fisubs
or
mov
add
and
jnp
pop
or
stos
outsb
pop
lahf
out
inc
roll
fnstcw
ds
stos
es
fdivr
cwtl
adc
inc
imul
dec
push
rolb
sbb
notb
stos
movsl
xchg
outsl
jns
test
jnp
nop
xchg
sub
push
jbe
sub
xchg
pop
sub
jp
jno
xchg
rclb
jl,pn
int
jbe
or
popf
jae
pop
mov
and
jmp
into
iret
fwait
mov
push
and
dec
sbb
fisubrl
and
jae
mov
pop
mov
pop
push
adc
test
movsb
pop
fwait
rorb
xchg
dec
ds
xchg
pop
addr16
das
or
cmp
sbb
jle
cmp
fsubr
mov
pop
mov
jecxz
xor
mov
enter
mov
mov
push
xlat
push
icebp
add
xor
out
xor
mov
xlat
dec
pop
xorb
mov
mov
cltd
push
xchg
adc
enter
or
mov
dec
push
int
icebp
pop
test
push
push
mov
ficomps
push
mov
mov
mov
pop
xchg
insl
fldcw
loope
cmp
into
mov
fists
inc
cwtl
or
sub
fcoms
and
xchg
mov
cmovbe
mov
jge
cmpsb
lock
pop
push
mov
mov
pop
inc
xchg
pop
dec
icebp
lahf
inc
push
aad
jl
sub
add
push
fsubr
xchg
mov
outsb
mov
push
movsl
dec
mov
pop
jnp
cmp
sti
in
arpl
mov
outsl
mov
fisttpll
in
mov
shrb
mov
ss
daa
sbb
rcll
lret
xorl
shlb
jp
adc
aaa
pusha
inc
add
pop
mov
icebp
aas
mov
inc
sub
sub
test
push
jl
xlat
push
pop
test
xor
mov
cli
rcrb
enterw
fldt
mov
daa
mov
xor
mov
js
mov
fisttpl
adc
adcb
divb
divl
scas
adc
mov
dec
mov
inc
mov
inc
xchg
test
and
xchg
and
insw
dec
or
dec
or
adcb
inc
xchg
xor
test
mov
out
inc
push
in
ja
adc
fimull
jecxz
xor
adc
in
pop
sub
xor
cld
jns
inc
jmp
inc
xchg
fcmovnb
shrl
xlat
push
mov
sbb
xchg
fadds
repnz
xchg
push
lcall
inc
js
xor
lods
js
inc
push
fs
les
mov
or
or
loope
xor
xchg
test
and
lea
bound
push
cmp
push
mov
out
pop
rolb
xchg
stos
fldl
xor
mov
in
add
jno
sti
mov
in
jle
in
jo
xor
cmp
in
jo
xor
cmc
mov
in
sbb
sbbl
mov
xor
cli
data16
push
sbbl
into
pop
into
incl
addr16
stos
xor
gs
and
sbb
repnz
int
mov
ljmp
pusha
popf
or
cld
adc
inc
or
pop
dec
sub
outsl
lds
mov
into
dec
adcb
sbb
filds
or
cmp
mov
das
iret
je
mov
pop
mov
inc
hlt
arpl
jmp
test
adc
adc
sbb
notb
outsb
cmc
cmpsl
outsb
icebp
ret
mov
aas
lea
iret
addl
dec
call
jne
jns
xchg
aad
into
adc
pop
xchg
sub
clc
movsl
and
adc
mov
fbstp
addl
inc
movl
fxch
cmp
cli
adcl
inc
pop
push
mov
int
mov
mov
int3
inc
xchg
push
add
push
and
xchg
and
pop
sub
or
push
push
dec
xor
hlt
push
cmp
sbb
sti
push
je
pop
imul
mov
push
mov
xor
xor
lcall
xor
subb
out
inc
xchg
xchg
aad
lret
mov
jnp
pop
jbe
lods
xor
jb
pushl
adc
push
mov
mov
iret
xor
xor
inc
fisubl
lds
or
addr16
jb
lods
jne
dec
rol
dec
and
lea
test
lcall
cltd
les
sub
sbb
jno
test
jo
xor
mov
sub
cli
lods
jo
xor
jle
sub
in
jo
inc
adc
or
mov
lret
movb
dec
andb
xchg
push
push
fstpl
or
into
decl
adc
addr16
popf
jno
ljmp
lock
lock
inc
sub
int
mov
mov
cwtl
or
pushf
dec
and
nop
and
enter
popf
dec
sub
test
nop
movsb
or
dec
aas
pop
adc
ret
pusha
daa
pop
nop
push
cmp
rcll
iret
jl
iret
test
inc
sub
cmp
pop
lahf
xor
je
adc
jns
adc
push
adc
hlt
inc
outsb
push
std
cs
lret
aas
shll
add
addl
and
dec
adc
pop
std
fs
push
fildll
cmp
mov
out
mov
jae
push
adcl
hlt
add
push
inc
xchg
adc
scas
dec
mov
jp
jno
inc
hlt
pushl
xchg
adc
adc
pusha
int
mov
mov
inc
mov
xchg
xchg
fistl
and
xchg
and
gs
dec
imul
dec
xor
xchg
jg
icebp
sbb
jne
mov
push
clc
jbe
mov
push
mov
dec
mul
xor
sub
in
ss
cmpsl
add
or
inc
insb
sbb
jg
icebp
pop
jne
push
lods
xchg
pop
lods
jbe
cltd
mov
push
mov
cltd
mov
iret
xor
mov
or
mov
test
outsl
pop
or
in
dec
xor
pop
dec
and
mov
outsb
addr16
push
dec
inc
push
mov
cltd
mov
ja
in
stos
sub
mov
mov
in
in
jo
das
jno
pop
mov
in
mov
in
jo
das
jno
out
movsb
fldenv
ljmp
icebp
mov
sub
add
imul
lret
mov
aas
pop
jl
sbb
cli
jbe
pop
in
roll
ljmp
xor
xchg
int
inc
sub
scas
pop
mov
adc
in
mov
dec
loop
add
xor
xchg
pop
sub
int3
pop
xor
repz
aam
lea
popf
cmp
sbbl
dec
aad
dec
sub
sarl
xor
data16
pop
sub
xchg
fsubs
sbb
xchg
shrb
mov
mov
int3
jb
imul
lahf
cmp
outsl
je
test
xchg
bound
inc
mov
push
mov
lods
mov
xlat
mov
mov
mov
shll
sub
insl
mov
insl
mov
test
jnp
scas
insb
enter
bound
hlt
pandn
add
or
inc
fcmovb
dec
bound
dec
arpl
inc
cmpsb
pushf
in
cmp
pop
rcrl
xor
jp
and
xchg
popl
cmc
aad
les
cmp
lods
xchg
xchg
iret
lret
push
stos
fisttpl
stos
pop
sbb
fwait
ret
or
jl
cmp
sbb
pop
loope
cmp
sub
bound
xchg
or
xchg
das
mov
cmp
mov
lcall
out
aad
jbe
mov
in
mov
xor
pop
push
push
jg
inc
and
roll
dec
jae
adc
mov
mov
cmp
mov
xor
lret
lret
xchg
fbld
stos
test
add
dec
adc
stc
vcmpss
in
jo
jl
ret
mov
add
add
int3
sub
and
sub
adc
and
mull
icebp
lcall
lea
cmp
add
mov
cmp
lret
xchg
sti
fcoms
adc
flds
rcl
sbb
xor
add
or
and
mov
leave
cmp
loopne
dec
push
add
adc
dec
cmp
dec
sub
rorl
test
add
jb
push
js
cwtl
jns
adc
dec
xor
xor
into
and
add
jbe
sbb
aam
xchg
mov
sahf
push
jmp
jbe
mov
enter
test
jne
add
arpl
jne
fcoms
lods
mov
lret
xchg
mov
jp
xchg
ss
jns
repnz
mov
and
aaa
jmp
pop
jnp
movsb
push
loop
add
imul
xchg
ret
inc
mov
stos
mov
mov
cli
xor
scas
pusha
jmp
out
imul
loopne
add
xchg
stos
pop
sub
cmp
inc
sub
pop
mov
ret
aad
push
push
push
es
movsb
sbb
or
or
leave
lock
dec
mov
idivb
imulb
or
mov
fiaddl
out
dec
loopne
push
push
fmuls
xchg
mov
shll
push
icebp
stos
push
add
adc
and
mov
sbb
adc
sub
fs
rorb
cwtl
jae
repz
xchg
or
fwait
xor
test
out
test
ret
int3
xor
int3
sbb
jae
lock
dec
adc
jge
in
mov
jge
ret
mov
sbb
dec
push
mull
lock
icebp
mov
push
aad
add
outsl
shll
out
aaa
or
in
mov
clc
cs
hlt
or
pop
add
add
adc
mov
inc
pop
clc
and
jg
mov
fnstcw
pusha
or
aas
inc
push
jmp
sub
and
test
pushl
stos
mov
cmp
xor
jae
in
inc
cmp
pop
cmp
or
pop
leave
pop
dec
or
add
sub
ljmp
or
mov
ja
inc
sbb
jge
adc
outsb
push
addl
popf
aam
push
push
insl
and
in
int
je
neg
pop
call
loope
pop
nop
xorb
in
sbb
lods
mov
lcall
mov
mov
and
pushf
outsl
mov
and
lret
negl
push
push
lret
sbb
pop
push
xchg
adc
adc
repnz
jb
push
mov
pop
dec
add
pop
dec
adc
popa
xchg
and
cmp
cs
clc
scas
dec
lea
mov
or
pop
push
inc
sbb
jns
jo
scas
inc
dec
mov
pusha
lock
les
gs
cmpsb
rolb
cmp
xchg
inc
cld
pop
inc
adc
mov
push
cli
sub
addl
jbe
jg
rclb
cli
adc
xor
loope
and
and
cmpsb
push
push
les
xchg
lods
sub
fbld
add
or
hlt
or
movsb
addr16
jl
mov
mov
sti
cmpsb
addl
jo
add
sbbl
jo
jno,pn
cltd
mov
in
sbb
in
jo
dec
pop
ljmp
mov
sbb
loop
bound
jno
in
ss
icebp
and
nop
loopne
subl
scas
mov
jb
das
inc
addr16
rcll
add
sahf
cmc
pop
rcl
lret
inc
lds
in
hlt
sarl
scas
loop
js
add
ret
mov
fnsave
mov
jg
xor
push
mov
adc
cmp
lock
inc
adcb
or
push
or
scas
pop
lahf
xor
adcl
rorl
jge
xor
icebp
sub
add
test
push
scas
popa
nop
filds
int3
xor
or
rolb
adc
mov
jmp
in
mov
xchg
mov
cmp
jae
outsl
and
fsubrp
scas
lahf
push
repnz
dec
and
clc
lret
popa
mov
dec
jbe
xor
xlat
cmp
jl
mov
out
sbb
fwait
sar
mov
repnz
cmp
fwait
add
xchg
and
arpl
repnz
dec
or
sahf
outsb
cvtps2pd
inc
xor
add
cltd
stc
fadds
xchg
adc
sbb
in
cmp
les
in
and
dec
jae
rcr
jbe
jp
dec
or
pushw
mov
out
mov
add
lds
jp
add
push
in
add
cltd
lret
int3
mov
push
adc
sub
mov
add
roll
xor
dec
lods
daa
inc
scas
std
and
xchg
push
popa
aas
push
or
aad
in
mov
in
sbb
sub
subl
jo
outsl
xor
mov
sub
subl
jo
outsl
xor
pushf
in
jo
sub
push
xlat
test
ficoml
into
jl
into
ljmp
inc
addr16
ljmp
mov
popa
lock
arpl
mov
mov
lret
inc
xor
repz
and
push
and
and
or
dec
sub
inc
sub
nop
stos
inc
ror
xchg
nop
lea
sbb
arpl
fimuls
sub
das
cltd
cmp
jo
sub
sub
fldcw
pop
hlt
sbb
xor
mov
jne
cmp
adc
push
adc
sbb
out
insl
in
icebp
sub
aas
sub
addb
inc
call
cmc
mov
hlt
loope
pop
mov
fildll
fucomi
mov
push
repnz
jb
push
subl
repnz
jl
xchg
xorb
lret
sub
mov
mov
push
xchg
xchg
dec
jmp
into
jb
cmc
xor
pop
leave
inc
xchg
xchg
stc
adc
sbb
cs
push
scas
dec
or
sub
mov
mov
pop
pop
inc
pop
mov
cmp
xor
xchg
je
mov
dec
mov
int
cmpsb
xor
adc
stos
dec
cmpsb
rorb
shll
movsb
jbe
ror
add
mov
sub
gs
aad
cmp
imul
mov
push
xor
adc
int
and
and
pusha
inc
inc
in
xchg
jns
dec
xor
jno
shll
dec
test
and
mov
or
mov
stos
lret
lret
dec
es
mov
adc
sbb
in
pop
clc
scas
jo
sub
sub
in
lock
xor
xchg
ljmp
sbbl
in
lock
push
xor
test
push
sub
push
addl
into
add
into
jg
xor
and
fs
jb
push
jb
and
ss
sahf
lock
leave
inc
loopne
add
popf
stos
pop
dec
or
and
mov
push
nop
enter
pusha
ror
dec
sub
push
popf
scas
test
arpl
pop
sbb
das
repz
iret
iret
outsl
iret
test
adc
outsb
fdivl
cmpsl
fbstp
ss
adc
jbe
xchg
mov
fs
and
popf
sub
aas
divl
inc
add
addb
jge
int3
sbb
jne
xor
mov
fbld
push
fildll
push
daa
out
mov
fmul
fwait
xchg
fdivs
sbb
push
subl
repnz
jnp
xchg
jp
xchg
lret
ds
lret
cmp
insb
inc
push
xchg
pop
adc
adc
push
mov
lret
clc
mov
rclb
add
imul
and
bound
mov
dec
dec
pop
jp
xor
mov
pop
mov
mov
inc
dec
mov
jns
in
les
in
jb
rorb
es
les
inc
mov
adcl
call
xlat
lahf
xor
push
lret
mov
xchg
mov
int3
xor
sbb
push
push
lret
mov
or
dec
xor
adc
mov
mov
mov
lret
leave
in
and
in
leave
icebp
scas
jo
sbb
adcl
scas
jo
sub
add
test
in
dec
imulb
adcl
jo
sub
add
test
in
dec
imulb
push
sahf
test
push
in
cmpsb
adc
xchg
or
ret
into
pushl
xor
neg
adc
adc
and
insb
pop
xchg
ds
jecxz
outsb
scas
aaa
nop
cld
in
xlat
adcb
gs
aas
inc
sbb
add
jg
and
stos
dec
or
out
ror
dec
sti
imul
rorb
push
cmp
aaa
push
aaa
sti
dec
getsec
adc
daa
sbb
add
addr16
jae
push
fs
inc
mov
pop
jo
pop
adc
add
insl
push
sbb
dec
roll
xchg
adc
xchg
inc
push
pop
cs
jg
call
bound
sbb
fadd
jp
xchg
adc
out
mov
loop
jmp
fwait
jecxz
std
out
shlb
jg
jecxz
repz
out
fnstsw
mov
outsb
jae
mov
cld
jg
mov
repz
out
mov
push
sbb
cmpsl
es
in
push
pusha
test
push
dec
sub
js
in
sub
adc
loop
cmp
jnp
jp
rorb
stc
xor
jmp
jge
jp
fbstp
lret
xchg
mov
fs
mov
sbb
neg
in
dec
jo
dec
xchg
push
fsubs
aas
clc
mov
pop
xor
mov
les
cli
in
cs
xor
sub
gs
shlb
loop
adc
push
out
mov
mov
scas
je
in
out
mov
mov
xor
sbb
lahf
sub
inc
adc
lret
lea
cs
add
xor
in
jo
inc
add
ret
aad
in
bound
aas
test
out
cs
in
jo
inc
pop
daa
and
ja
xor
je
shlb
push
add
jo
xor
leave
push
subb
inc
mov
push
lahf
out
jae
or
leave
inc
mov
ljmp
ja
sub
inc
loop
jp
pop
jns
in
sbb
xchg
sub
cld
insb
ror
dec
gs
imul
inc
sub
lods
shrl
pop
outsb
mov
cld
push
sub
cs
jp
cmpsl
cmp
adc
mov
push
jns
pop
gs
add
mov
or
outsb
icebp
test
push
xor
sub
cmpsb
xor
mov
sbb
adc
jg
push
cmp
mov
jo
lods
sub
mov
jg
push
jbe
repz
push
cs
xchg
aad
lock
dec
pop
pop
pusha
cmp
jl
sarl
popa
jecxz
cmp
jb
push
shl
vpmadcsswd
jae
mov
add
add
or
lret
sub
push
aas
loopne
das
xlat
negl
jl
adc
int3
sub
xchg
daa
mov
popa
lods
sbb
xchg
fwait
and
xor
pop
pop
notb
std
jbe
std
pop
mov
push
movsb
mov
mov
in
sbb
stos
shl
mov
out
inc
call
add
in
sbb
in
and
jle
pop
in
inc
mov
mov
jmp
rolb
lea
sbb
mul
mov
call
test
data16
mov
cmc
out
mov
mov
pop
mov
ret
out
lods
push
lahf
pop
push
icebp
inc
ret
fbld
mov
fldln2
mov
adc
dec
rcll
ficompl
jbe
cmpsb
data16
xchg
or
lods
test
mov
jb
push
jp
push
pop
rolb
into
sbb
xorl
test
push
mov
nop
ficompl
cltd
push
stc
ljmp
xor
inc
or
jp
idivl
imul
or
mov
loopne
cmp
lcall
jle
adc
dec
adc
js
or
sub
or
sub
push
cmp
xor
xchg
jo
jo
and
push
adc
popa
cmp
sbb
sbb
fsubr
popf
pop
ljmp
enter
mov
lods
jnp
rclb
cmpsl
push
incl
fsubrp
xchg
ljmp
mov
icebp
push
adcl
mov
mov
bound
jmp
cmpsb
mov
xor
and
push
push
xchg
push
stos
stos
bound
out
out
mov
inc
and
mov
inc
call
pop
dec
pop
jg
and
sbb
sub
pop
imul
cmp
push
or
push
jl
dec
and
lds
xchg
inc
stc
popa
jae
xchg
xor
pop
mov
and
les
test
cmpsl
adc
cmpsl
or
push
or
std
adc
loope
aas
rclb
ss
push
dec
and
jae
jg
push
ljmp
and
cmpl
cmp
int
fwait
inc
pop
mov
nop
push
xor
xchg
jno
movsb
mov
call
dec
push
lds
cmpsl
mov
fucom
sahf
das
mov
adc
dec
add
fldcw
mov
insl
push
icebp
xchg
cld
xrelease
int3
cmp
pop
push
add
frstor
and
ja
sbb
in
sbb
into
call
pop
adc
xchg
inc
add
dec
sahf
pop
inc
shl
adc
jmp
or
pop
fdivr
ror
jns
dec
ljmp
and
fs
stc
sbb
mov
lods
in
xor
cs
jb
nop
sub
push
mov
sbb
or
mov
cmc
or
add
mov
lahf
xor
mov
inc
xor
inc
jno
xor
mov
cmp
dec
not
sbb
dec
jno
inc
ret
lea
inc
in
cmp
dec
cmc
into
jle
test
jge
lods
lret
fsubrs
mov
xlat
fs
xchg
push
orl
lahf
fisubs
insl
test
shrl
mov
push
jns
data16
sub
cmc
cmpsl
jnp
jo
in
sbb
out
xor
cmpsl
xor
push
cmp
cmpsb
mov
dec
fs
inc
dec
xchg
adc
cmp
out
or
fwait
pop
add
in
pop
jnp
adc
icebp
fdivp
inc
divl
push
in
aas
rolb
push
test
add
mov
push
push
mov
je
inc
in
and
or
cltd
add
dec
cwtl
jg
pop
es
push
shlb
movsl
push
mov
stos
inc
inc
test
sub
stos
jmp
jo
inc
jne
jae
sub
into
or
popf
add
and
ficomps
jge
in
fisubl
testl
inc
scas
sub
lods
adcl
inc
push
int3
xor
icebp
lea
sub
adc
in
mov
sahf
adc
pop
fcomi
subl
add
ja
rcrb
adc
leave
adc
int
loop
orb
push
jns
adc
and
push
xchg
lods
outsl
mulb
xor
push
xchg
test
jno
sub
mov
out
cmp
int
sub
in
and
insl
pop
sub
pop
mov
add
cmpsl
lods
outsl
mov
outsb
pop
lret
pop
pop
ret
sbb
cmp
pop
xor
add
stos
sbb
lods
sub
insb
inc
jb
inc
push
lock
push
addb
jl
adc
add
adc
insl
cmp
sbb
shr
popf
pop
negb
imul
enter
mov
dec
dec
cmp
mov
test
cmpb
iret
adc
in
mov
mov
jne
cmp
fmull
aad
clc
andl
insl
pusha
in
cld
xchg
scas
push
int3
jnp
jg
pop
cmp
sub
cli
xor
clc
mov
jb
cmpsl
adc
out
sar
and
testl
xor
shl
push
push
add
add
and
es
pop
jbe
push
xor
pop
call
je
aam
jl
pop
aas
xchg
mov
stc
dec
inc
xchg
mov
and
xor
mov
xor
sti
cmpsl
or
push
mov
cmpsl
or
stos
rolb
xor
mov
int
add
bound
inc
cmp
mov
inc
lret
icebp
xchg
or
dec
pop
mov
inc
xchg
push
push
lcall
repnz
push
xor
inc
testb
pop
add
mov
mov
add
out
into
test
sub
out
out
sub
pop
pop
loop
repnz
and
add
ds
xor
lods
bound
inc
mov
mov
gs
in
push
or
lret
push
cmp
lock
xor
and
subb
xor
ret
into
cmp
in
push
inc
into
bound
push
and
mov
outsb
movsb
mov
imul
loopne
pushl
jo,pt
out
out
outsl
inc
jg
jo
mov
mov
js
mov
outsl
sub
movl
stc
pop
scas
mov
push
arpl
es
jnp
xor
add
ret
xchg
dec
insb
dec
xor
cmp
mov
scas
push
sarb
shrl
mul
xor
pop
lcall
shr
sub
sub
stos
mov
jmp
inc
push
xchg
sarl
rcll
fwait
sub
mov
lret
and
pop
jp
pop
ja
in
mov
mov
in
push
fbld
in
data16
jmp
nop
mov
push
dec
aam
dec
movsl
push
and
mov
popa
sub
stos
add
fmul
fidivl
movsl
test
and
arpl
div
in
fs
push
xchg
pop
push
xchg
mov
addr16
mov
cmc
popa
xor
dec
stc
mov
mov
xchg
jnp
sbb
loopne
testb
imul
push
and
imul
hlt
mov
inc
inc
and
jnp
orl
das
push
xchg
push
fwait
ljmp
fisttpl
call
andl
int3
and
pop
add
xor
out
mov
sbb
in
movsl
mov
pop
icebp
sub
out
int3
fwait
movsl
sbb
xlat
fbld
mov
adc
out
and
mov
movsb
data16
xchg
or
scas
mov
xor
adc
cwtl
int3
dec
les
mov
and
adc
dec
clc
and
sub
mov
fmul
adc
cmp
repz
clc
adc
pop
and
mov
add
lcall
push
sbb
sub
sub
or
push
pop
out
push
jg
sbb
mov
push
or
lahf
xor
lock
and
inc
jg
insl
ss
sbb
pusha
sbb
add
sbb
or
fildll
imul
add
push
fwait
adc
pop
int
mov
adc
mov
mov
sbb
xchg
jmp
out
aam
mov
fs
add
fisttpll
ret
and
lcall
push
popa
in
mov
dec
dec
mov
xor
jne
lock
dec
scas
or
test
daa
cmc
mov
cmpsb
xor
repnz
push
dec
pop
cmp
pop
int
jns
in
sub
das
push
ja
xor
sbb
cmc
faddl
sbbl
add
mov
and
xchg
outsb
xchg
xchg
push
loope
push
aad
cmp
mov
mov
sbb
mov
mov
inc
shrb
in
mov
jbe
lret
adc
loope
sub
enter
inc
push
out
dec
and
and
jl
cwtl
inc
jp
or
repz
sub
ljmp
jmp
mov
dec
insl
aaa
in
not
lods
and
subl
xchg
mov
inc
pop
in
lods
sub
mov
sbb
mov
mov
jno
cltd
enter
scas
mov
dec
add
xchg
sti
loop
and
mov
adc
xor
in
cmp
push
andl
out
jne
scas
fwait
aaa
push
or
dec
xor
mov
jp
and
lahf
xor
and
in
nop
mov
push
in
ja
out
add
outsl
inc
nop
xor
stos
push
in
in
mov
je
jmp
push
aas
lea
ja
scas
fidivs
pop
jbe
iret
scas
add
pop
test
jb
xor
pushf
ss
jae
scas
pop
inc
cmp
gs
pushf
sbb
scas
add
movsb
cmp
or
sarl
or
inc
and
shll
shl
and
jne
or
fcomi
loope
jne
xor
cmpsl
cmp
jecxz
fwait
jmp
fstpl
mov
jnp
fwait
jae
cmp
rcl
and
stos
ss
xchg
mov
xchg
mov
xor
push
adc
jg
test
jl
mov
clc
pop
fldcw
out
jl
loop,pn
push
out
ss
jge
jns
popa
cs
dec
push
ffree
and
bound
ds
lret
xor
sbb
int
xchg
mov
dec
adc
out
sub
xchg
stc
mov
xchg
sbb
xchg
mov
push
mov
idivb
cli
pusha
xchg
testb
decb
repz
dec
cmpsb
cmp
adc
ds
pop
mov
mov
test
pop
inc
jns
inc
aaa
xor
ljmp
dec
jno
jb
jmp
lahf
cmp
fwait
lods
inc
lea
call
std
pop
xchg
mov
nop
andl
push
addb
xor
test
repnz
xor
jnp
mov
rorb
mov
jo
insb
xor
or
mov
inc
adc
cmp
daa
ja
idivl
and
loope
rorb
arpl
sbb
pop
jle
pop
cwtl
mov
inc
dec
xchg
cmp
test
adc
nop
scas
xor
xor
dec
ret
sub
add
dec
scas
cmp
nop
and
imul
sbb
jmp
dec
cs
push
sub
dec
inc
les
lahf
mov
sub
add
sbb
test
push
rcrl
jbe
push
jno
push
jle
fs
lcall
lea
popa
inc
adc
xchg
and
jbe
pop
mul
push
repz
lcall
fsubr
jnp
loop
shrb
jns
into
popa
repz
call
add
pusha
mov
cmp
dec
loope
push
jb
adc
mov
dec
mov
jecxz
pop
out
out
lret
cld
ljmp
xor
dec
or
cmp
mov
popa
jecxz
imul
movsl
inc
or
mov
es
orl
rcll
add
fcmovnbe
insl
in
and
inc
jle
mov
and
loopne
sbb
push
sbb
adc
loope
jbe
sub
faddl
into
sbbl
fmul
mov
adc
add
push
pcmpgtw
cmp
push
mov
adc
pop
and
or
int3
movsb
push
fisubrs
rclb
jle
fidivs
cwtl
fbld
stos
fcmove
ss
ret
mov
pop
or
int
shr
and
pop
add
call
test
adc
test
sub
sti
mov
adc
and
push
cld
aaa
out
mulb
mov
sub
xchg
push
adc
movsb
adcb
or
xchg
idivb
stc
dec
sub
lds
xor
mov
add
ja
je
push
or
addr16
das
inc
mov
ja
xchg
into
repz
push
sbb
insl
adc
sbb
sbb
gs
dec
fwait
outsb
or
mov
jno
mov
cli
adc
xor
inc
jb
mov
cmp
mov
cmpsb
fs
jle
jo
and
sub
inc
and
subl
cmp
cmp
nop
cld
adcl
mov
xor
xchg
add
fidivrs
xlat
and
inc
pop
out
mov
mov
push
dec
cmp
adc
scas
xor
sub
mov
cmp
pavgb
fwait
mov
inc
pop
mov
add
cmpsb
les
insb
jbe
aaa
outsb
test
cmp
out
aas
lret
lret
pushf
push
mov
adc
push
pusha
shlb
int3
pop
dec
and
in
sub
je
push
or
sub
mov
out
adc
btc
or
dec
ret
out
dec
fsubs
jbe
movsb
jbe
stos
lock
stos
and
dec
xchg
mov
mov
dec
inc
test
ss
stos
add
xchg
push
add
call
and
imulb
into
pop
push
into
pop
aas
in
cmc
mov
mov
int
add
mov
and
ljmp
push
dec
mov
or
pop
faddl
add
lret
sahf
leave
add
or
cmp
icebp
test
dec
sub
jle
and
cld
and
mov
mov
or
xor
cwtl
insl
testb
imul
out
and
out
aam
jg
cmp
and
into
push
ljmp
in
add
inc
in
test
sahf
sub
je
out
daa
pop
mov
or
and
dec
adc
add
nop
pop
jae
cld
push
sub
gs
lahf
daa
adc
jle
mov
mov
pop
js
movsl
cmp
adc
and
sbb
dec
sahf
fimuls
das
jae
pop
dec
mov
jl
int
je
aas
in
push
loope
inc
jmp
sub
xor
clc
dec
jmp
xlat
in
xchg
xlat
je
mov
roll
addr16
in
add
mov
mov
js
xlat
cwtl
push
mov
sbb
outsb
sbb
loope
outsb
repz
mov
frstor
stos
sbb
in
and
mov
cmpsb
icebp
aas
test
xor
sbb
arpl
roll
push
push
hlt
out
cmp
in
adc
push
or
cmp
lret
xchg
mov
fidivs
and
xchg
dec
shl
mov
stos
inc
cmp
jmp
push
fs
idivb
data16
xor
shr
mov
sbbl
sbb
loope
in
mov
in
push
out
dec
repnz
dec
sub
cwtl
adc
call
inc
jmp
inc
stos
daa
push
sahf
cmp
notl
es
jl
cmp
push
xchg
sbb
mov
aam
lret
in
cmpsb
mov
aas
xor
sub
mov
and
cmp
daa
jno
mov
shrb
out
add
push
sbb
xor
loope
icebp
and
sarb
adc
add
shll
testb
jo
push
push
mov
stc
add
out
xchg
sti
and
adc
dec
dec
inc
cmp
insb
pop
pop
mov
jb
testb
push
sbb
dec
sub
test
sub
push
dec
push
push
inc
scas
popa
add
pop
out
push
rorl
fstpt
xor
and
add
inc
jns
bound
out
outsb
icebp
jnp
mov
jno
inc
add
sub
call
cmp
inc
cmp
cwtl
mov
adc
fwait
pop
xchg
sub
xchg
lods
repz
mov
cmp
xorb
jno
loope
fisttps
stc
pop
sbb
in
out
mov
pusha
mov
push
cli
xchg
sub
jge
out
dec
push
cmpsb
push
cltd
mov
cli
js
mov
aad
push
xchg
xchg
insb
jle
arpl
push
add
or
sub
xchg
xor
xor
dec
jae
mov
adcl
rcll
dec
dec
fnstsw
mov
cltd
mov
add
mov
mov
pop
mov
push
push
and
pusha
lea
loope
pop
mov
fwait
sbb
cld
inc
daa
adc
jbe
jge
adc
into
push
mov
xchg
mov
shl
ss
pop
inc
les
inc
mov
xchg
and
pusha
lods
adc
and
fiadds
jbe
pop
and
cwtl
adc
in
shrl
in
jno
in
jo
daa
jno
stos
sub
mov
jno
jae
sub
mov
jno
shrb
popa
lods
bnd
movsb
cmpsb
add
and
and
pop
push
adc
xor
in
mov
into
loop
fistpll
inc
add
push
rolb
dec
test
xchg
inc
dec
sahf
or
jg
adc
inc
mov
dec
test
sub
aaa
push
mov
push
mov
sub
in
sub
adc
mov
dec
mov
mov
popa
fdivrl
inc
jle
adc
push
clc
pop
pop
loope
inc
mov
cmc
sub
cvtps2pi
test
in
adc
inc
pop
shrb
adc
inc
and
sub
sbb
std
add
add
xor
fisttpl
mov
jns
cmp
dec
jmp
ja
xchg
sub
ret
loop
sub
xchg
test
mov
mov
inc
sar
push
xorl
fcomps
clc
and
mov
dec
pusha
push
dec
xchg
adc
cmp
add
mov
aam
cmp
push
cmc
jae
fwait
or
shlb
fs
push
and
scas
sub
shrl
filds
loop
lahf
in
fnstsw
mov
jp
lds
test
jns
xchg
xor
mov
jne
ss
mov
test
adc
lret
dec
aaa
lods
sbb
loope
sbb
jecxz
ret
cld
in
cmp
xchg
in
pop
add
sbb
pop
pop
inc
les
xchg
pop
popa
decb
xor
jne
mov
imul
push
mov
jo
push
jae
push
mov
mov
xchg
out
insb
loope
xlat
leave
adcl
jnp
mov
in
xor
lret
lahf
mov
pop
xchg
into
push
out
push
loopne
fdiv
mov
leave
int3
adc
push
adc
xchg
icebp
xchg
pop
mov
jo
adc
mov
jmp
aas
cmp
js
pop
nop
or
clc
popf
stos
orb
decb
push
adc
pop
xchg
xor
lock
sub
nop
aad
aad
ror
sub
imulb
add
or
sub
add
xchg
cld
lds
in
mov
jns
sti
js
dec
ds
cmp
cmp
jge
jae
iret
add
out
or
or
pop
xchg
mov
mov
pop
inc
jp
push
jle
sbb
add
xor
in
orl
jp
mov
dec
enter
mov
rol
fcmovnbe
pusha
and
cli
iret
fnstenv
lods
mov
or
pop
aad
push
and
inc
shrl
mov
lret
mov
icebp
mov
mov
xor
sbb
push
jo
pusha
pusha
jl
mov
stos
sbb
out
adc
sub
lods
insl
cmc
ds
xor
in
inc
or
insb
pusha
inc
nop
aam
push
jecxz
outsb
push
arpl
in
ds
loopne
pop
fisubs
add
xor
int3
xor
out
addb
enter
mov
jbe
adc
rorl
in
hlt
setle
dec
mov
shlb
pop
or
dec
mov
ret
mov
insl
in
adc
outsb
popf
xchg
mov
or
mov
pop
loope
fdivrs
and
data16
into
sub
sbb
lea
jp
test
cmpsl
xchg
dec
jo
pop
fiadds
mov
jmp
pop
mov
cwtl
mov
and
cmpsl
jge
jne
icebp
or
icebp
xchg
xor
jl
cmp
loopne
cltd
xchg
scas
pop
pusha
push
add
nop
jae
xchg
mov
xor
test
mov
pop
jg
add
cmp
cwtl
sbb
rcrb
xor
ljmp
push
fildll
aad
add
ja
div
add
xor
xchg
jecxz
mov
lods
inc
mov
adc
xor
and
sbb
xor
add
ljmp
jae
inc
xor
mov
in
adc
xchg
cmp
das
dec
fs
sbb
xor
pop
push
cmp
ret
push
mov
push
push
sbbb
pop
inc
sarb
jbe
out
jg
loope
lods
decb
stos
or
sbb
xchg
popf
lods
lret
outsl
bnd
subl
shlb
test
pop
mov
and
stos
push
in
adc
imul
and
jle
into
adc
push
xchg
mov
in
jmp
cmpsb
movsb
push
cmpsb
and
fisubs
push
in
sti
dec
pop
repz
push
shl
and
xor
pop
cmp
adc
stos
or
jae
mov
pop
cmpsb
sub
dec
adc
xchg
and
inc
cmpb
mov
outsb
jl
movsb
sbb
test
jae
push
out
mov
imul
shl
shl
test
out
mov
inc
gs
andb
mov
pop
mov
aas
mov
imul
stos
mov
stos
sub
sbb
fs
enter
push
cld
fxch
cli
and
jge
sbb
pop
xchg
mov
mov
mov
mov
lret
sub
xlat
mov
xchg
and
lret
out
stos
push
mov
push
imul
aas
out
add
mov
daa
inc
push
stos
pop
add
rcrb
sbb
add
rorl
mov
fldcw
jo
pusha
xchg
dec
and
ja
jb
add
jne
or
inc
and
stos
loop
repnz
inc
adc
or
arpl
sub
pop
test
imul
and
xor
sbb
jle
cli
inc
pop
jmp
push
push
pop
or
inc
fs
inc
mov
fisubrs
adc
push
in
push
mov
enter
addb
xchg
fstpl
lcall
lods
mov
sbb
es
jno
mov
scas
repnz
lds
mov
xchg
mov
mov
test
movsb
bound
lret
jmp
stc
inc
fs
add
mov
mov
xchg
mov
jle
jae
jg
adc
adc
dec
rorb
pop
jb
add
popf
ret
sub
fstp
lods
test
mov
xor
xor
xlat
lret
and
out
cwtl
mov
popa
ljmp
add
loope
sahf
mov
xchg
daa
gs
push
pop
mov
xor
push
cwtl
adc
pop
xchg
or
data16
cmpb
xor
pop
pop
jge
repnz
mov
and
mov
mov
mov
test
xchg
shr
lods
insl
push
shrb
and
cmpsb
lahf
ds
and
dec
pushf
mov
mov
xor
ja
lds
out
movsl
es
jbe
jae
fidivl
and
jbe
mov
into
ljmp
and
pop
cmp
stos
lods
pop
les
sbb
fbld
or
jg
and
mov
fmull
cld
pop
or
insl
sub
mov
xchg
scas
mov
jmp
add
aas
adc
imul
mov
stos
sbb
stos
push
adc
lock
and
mov
out
mov
sbb
sub
xchg
arpl
mov
xchg
fs
repnz
add
sbb
andl
inc
mov
inc
loope
inc
jecxz
cmp
mov
ficompl
mov
pop
lods
aam
scas
inc
or
push
mov
bswap
adc
xchg
pop
stos
cmc
sub
imull
and
bound
pop
test
outsb
icebp
xor
push
lds
scas
pop
mov
jmp
jl
mov
pop
cltd
addb
clc
fsubrl
lock
push
shrl
ret
inc
or
jnp
push
sub
adc
cmc
or
fists
neg
jp
push
xor
xlat
mov
mov
push
jns
adc
pop
push
hlt
xor
imul
sub
das
jmp
lret
scas
or
push
in
scas
mov
xlat
push
cwtl
fdivl
and
and
jnp
and
pop
fnstcw
fmuls
add
and
add
lods
cmp
lods
push
test
into
clc
and
xor
sbb
std
lret
sarb
movl
int3
mov
rcrb
insl
and
out
xchg
movsb
xor
add
sarb
and
push
pop
sti
sbb
fcoms
jbe
cld
jbe
and
loop
or
data16
xchg
cmp
pop
sbb
add
push
push
pop
or
mov
movsb
and
std
jp
add
inc
mov
gs
dec
and
jnp
pushl
test
dec
adc
fisubl
pop
pop
cmp
add
aaa
dec
inc
mov
pop
jg
inc
mov
inc
daa
arpl
inc
xor
or
push
jge
or
mov
or
addr16
sub
inc
dec
outsl
xlat
sub
sub
xchg
pop
dec
or
dec
cmpsl
pop
sub
imul
push
pushf
jbe
int
shll
mov
scas
lret
leave
clc
mov
lret
mov
sarl
mov
cmc
ret
aam
adc
and
repnz
movl
aas
sbb
pop
adc
mov
and
push
test
lret
cli
daa
sub
push
inc
notl
outsl
push
sbb
sub
daa
mov
jle
jg
and
sbb
aad
notl
jnp
add
pop
mov
push
jno
loopne
fcomip
mov
xor
movsl
testl
push
push
pusha
scas
inc
cmc
and
arpl
lods
orb
nop
mov
leave
sbb
enter
jno
cmp
push
jg
and
mov
sbb
pop
sbb
push
mov
fwait
aam
inc
add
rclb
pcmpeqd
loop
fldt
push
int
mov
int3
push
inc
sub
shl
test
adc
int
cwtl
cmp
sbbl
inc
adc
std
in
int3
jno
sbbl
lock
xor
ret
insl
cmp
push
dec
stos
jbe
sbb
or
mov
push
call
lcall
add
or
cli
mov
jne
adc
xchg
add
int3
in
dec
cld
nop
dec
and
test
or
sub
lcall
into
pop
enter
push
push
sbb
fsts
cmpsb
pop
pop
cmp
jl
loop
iret
jb
push
imul
dec
lahf
xor
nop
add
push
dec
adc
dec
adc
jecxz
outsb
lret
lods
loopne
icebp
fs
sbb
call
daa
pop
sub
jbe
add
call
ljmp
stos
ficoms
rcll
mov
pop
lock
mov
shlb
cmpl
mov
stos
fstpl
sbb
xchg
sbb
xchg
lret
imul
dec
je
dec
xchg
mov
int3
adc
jbe
jb
stos
sahf
aad
sarl
xchg
sti
imul
and
mulb
dec
jle
dec
or
stc
add
test
loopne
push
mov
enter
push
sub
mov
daa
fcmovnbe
insb
add
imul
add
or
lea
out
orb
push
mov
andb
sub
lods
xchg
push
fmul
push
mov
lea
iret
imul
inc
push
inc
les
les
test
or
add
orl
dec
pop
mov
and
test
adc
aaa
lea
xor
test
sbb
jno
and
in
jo
and
sbb
mov
jno
das
test
in
test
in
jo
and
pop
test
in
lcall
push
and
push
or
push
cmpl
dec
mov
add
ss
and
mulb
push
pop
lock
daa
mov
roll
jl
call
mov
test
and
sub
inc
sub
adc
nop
jo
nop
into
fadd
into
data16
xchg
pop
add
cmp
jo
iret
inc
iretw
sub
pusha
pop
lahf
xor
sbb
xor
cmpsb
addr16
insl
adc
pusha
pop
push
es
dec
fs
movsw
icebp
aas
sub
xorb
ds
popf
add
int
in
jbe
lahf
lods
mov
fistps
lods
mov
loop
fwait
out
fwait
mov
shlb
les
mov
add
sarb
xchg
repnz
xchg
cltd
mov
lret
cmp
in
je
xchg
pop
dec
xchg
adc
lret
adc
jg
mov
shlb
test
inc
xchg
xchg
and
mov
insl
arpl
dec
jno
dec
or
sub
in
test
imul
xchg
mov
inc
xchg
push
mov
inc
mov
test
in
in
xor
mov
sbb
xor
hlt
insb
inc
js
inc
xchg
test
xchg
cmp
lret
arpl
imul
lods
xchg
sub
pop
lea
push
imul
cld
push
inc
mov
or
or
enter
scas
push
dec
inc
inc
andb
pop
push
mov
push
mov
mov
rolb
test
mov
and
ret
in
sub
jno
mov
mov
jno
mov
mov
jno
fisubl
in
jo
and
lcall
push
mov
push
subl
into
add
add
ss
popf
xor
pushw
sub
mov
les
mov
rolb
jl
call
or
and
cmpsb
pop
or
inc
sub
cmpsb
vshufps
into
pop
into
dec
xchg
add
sbb
fs
pop
cmp
outsl
das
iret
in
gs
sub
add
pop
lahf
mov
aad
ss
addr16
insb
adc
rorl
sahf
dec
outsb
lds
icebp
aas
cmc
daa
inc
pop
ja
add
les
call
jne
add
dec
lods
mov
fbld
dec
fildll
sub
mov
or
mov
push
jmp
xorl
sub
xchg
js
xchg
lret
jb
lret
cmp
je,pt
fldt
lret
adc
out
shlb
test
or
hlt
jbe
push
pop
mov
and
pop
insl
je
mov
or
xor
test
mov
pop
xchg
out
xor
movsl
push
mov
inc
mov
insl
jmp
xor
inc
push
shll
sub
mov
xchg
ja,pn
push
leave
push
mov
cmpl
push
and
out
xchg
push
xchg
leave
push
mov
ret
mov
outsb
sbb
jnp
or
inc
xor
jnp
dec
and
jg
dec
or
push
rclb
in
loopne
test
jl
mov
fdivrs
scas
repnz
jno
jb
shlb
popa
cmp
in
test
aas
sarb
xorl
and
add
push
push
clc
rcrl
rcl
fadd
ret
into
mov
mov
add
and
xor
add
lock
pop
lock
iret
or
inc
jmp
ds
mov
mov
dec
and
insl
dec
sub
punpckhbw
outsb
sti
nop
into
mov
pop
push
inc
mov
push
daa
pop
sbb
fdivrs
xor
xchg
sbb
add
pop
lahf
gs
insl
sub
xor
imul
adc
pusha
dec
adc
jg
and
ja
outsb
stos
and
mov
add
jne
call
inc
inc
int
mov
and
mov
adc
repz
xchg
out
dec
lods
xlat
lods
lods
rcl
ret
loope
mov
mov
push
xorl
out
mov
cld
xchg
lret
ret
pop
popl
ds
jae
xchg
pop
dec
xchg
adc
lret
adc
or
jb
jle
mov
mov
xchg
mov
and
pop
insl
dec
jo
dec
or
xor
dec
add
xorl
push
mov
jb
xor
mov
inc
mov
repz
xor
cli
addr16
adc
roll
movb
mov
inc
ja
inc
xchg
xchg
push
leave
push
outsl
mov
imul
lods
xchg
push
dec
leave
push
mov
sub
xor
add
and
push
inc
repz
ds
cli
or
xchg
inc
xor
aaa
mov
and
push
pop
push
lock
scas
mov
adcl
fldt
and
fisubl
in
jo
and
scas
cmpsb
sub
mov
jno
xchg
cmpsb
sub
mov
jno
test
mov
jno
cmpsb
cmpsb
push
jns
mov
or
xchg
inc
testb
xorb
fstpt
or
xchg
pushf
jb
mov
inc
xlat
gs
jnp
call
dec
dec
and
lock
movsb
cmp
add
mov
dec
mov
addr16
ss
idivl
ja
je
dec
out
xchg
cmp
fcomps
scas
inc
stos
popa
dec
aaa
cmp
jns
stos
cmp
or
data16
or
cmp
add
lret
push
jne
call
out
lods
add
inc
pop
shrb
ja
mov
mov
cld
xchg
mov
ficoms
mov
jno
pop
lds
loop
cmc
fcom
popa
jno
add
imul
movsl
scas
push
jo
adc
and
xlat
and
jo
stos
jge
jge
mov
out
ds
int
add
iret
and
push
in
pop
jno
cld
add
cmp
mov
inc
or
sub
push
or
pop
xor
mov
mov
adc
das
mov
sub
push
addb
xchg
mov
pop
outsb
push
mov
stc
jle
idivb
xchg
push
mov
out
scas
add
rclb
out
lret
mov
adc
push
test
dec
aad
and
sbb
mov
sbb
pop
jne
push
loopne
push
in
daa
mov
dec
and
xor
fnstsw
cmp
sub
loopne
lret
mov
cwtl
jb
mov
mov
shr
adc
lods
jo
push
add
cld
fldl
repz
imull
and
push
testb
dec
cmpsb
push
push
xabort
cmp
in
es
into
cli
insl
jae
fs
adc
push
inc
cltd
repnz
cwtl
dec
adc
add
mov
ret
scas
inc
ljmp
in
inc
jns
cmp
xor
sub
pop
movzbl
sub
into
dec
hlt
data16
xchg
imull
adc
sub
cmp
dec
push
notb
subl
adc
mov
push
xchg
sub
sub
lahf
xor
inc
arpl
add
push
jns
sbb
sub
sub
outsb
icebp
xor
test
inc
xor
adc
sbb
jg
mov
out
stos
mov
sahf
les
popf
fiadds
leave
test
rcrl
lret
jae
lret
daa
in
dec
aam
out
out
hlt
push
mov
bound
mov
adc
sub
jbe
scas
jg
fldcw
add
lret
ret
in
inc
cmp
sub
aaa
js
cmp
mov
insl
pop
xor
cmp
daa
jle
xor
sub
sbb
fcomps
lcall
mov
push
lds
arpl
or
fisttps
out
jne
mov
xor
adc
int3
or
mov
pusha
cmpsb
push
mov
icebp
mov
adc
add
sub
notb
cmpsb
and
add
jmp
inc
sub
dec
and
mov
push
xchg
outsb
inc
loop
push
loopne
xor
and
adc
push
fwait
push
aaa
fwait
and
clc
in
sub
lock
mov
push
adc
jmp
cwtl
adc
clc
lret
pop
fistpl
xor
negl
inc
add
rcl
imull
add
and
aad
cmp
and
and
sbb
mov
adc
push
adc
cmc
pop
xchg
inc
adc
test
adc
and
shlb
les
lock
sub
sub
testb
pop
or
push
inc
lods
rolb
cld
into
adc
jo
jle
loope
daa
lcall
push
mov
pop
das
outsb
or
mov
mov
jae
pop
pop
lahf
mov
jmp
shlb
push
jns
push
adc
sub
adc
aam
or
arpl
test
sub
sbb
scas
pop
pushf
mov
repz
mov
jle
adc
push
lods
jge
mov
test
and
fdivl
out
xorl
fisubrs
out
xor
jecxz
sti
xchg
lret
daa
scas
movsl
pop
push
outsl
adc
inc
xchg
adc
mov
mov
lret
arpl
das
call
stos
into
cmp
jnp
and
cmp
cmp
shrb
jl
dec
scas
das
sub
in
inc
xor
push
xlat
pop
mov
inc
push
pop
pop
insl
mov
adcb
aas
adc
shl
dec
nop
jbe
pusha
push
mov
icebp
pop
add
and
fisttps
fdivl
cmpsl
push
incb
call
stos
xchg
push
mov
int3
enter
push
push
repz
add
testb
push
inc
xor
cmpl
ret
aam
inc
xchg
cmp
decl
mov
std
cs
mov
into
xlat
sub
jo
inc
sbb
mov
and
add
shrb
cmpl
lods
ret
in
jo
inc
sbb
mov
rorb
push
jg
daa
adc
lds
icebp
in
xlat
shr
stos
sahf
mov
decl
inc
push
push
and
push
xchg
mulb
aaa
pop
inc
xchg
dec
xor
xor
sub
mov
mov
jp
cmp
shr
or
rolb
cld
ds
pop
aas
sub
pop
adc
lea
cmp
xor
daa
pop
pop
sub
dec
popa
out
add
imul
jbe
xor
int3
xor
ljmp
pop
push
xor
pusha
jnp
dec
adc
jns
adc
push
rcll
pop
inc
call
inc
dec
test
jg
adc
jbe
mov
filds
jmp
mov
mov
jp
scas
cmp
fmuls
mov
les
mov
scas
fwait
leave
lret
cmp
adc
jecxz
and
push
and
adc
jae
aas
jmp
paddw
rcll
in
es
pop
dec
in
dec
cmp
inc
les
push
add
and
repnz
push
xor
push
call
inc
imul
push
mov
xor
mov
mov
push
mov
push
cmpb
popa
push
xchg
movsb
push
movsl
and
sahf
adc
cs
stos
pop
loop
mov
sub
xchg
stc
adc
sub
loope
xor
hlt
jne
shlb
or
adc
push
mov
push
rolb
sub
sub
gs
jl
cltd
sbb
cmp
test
int3
popf
jbe
in
or
lea
inc
sbb
in
or
cwtl
xor
in
lret
testb
dec
push
addl
mov
je,pn
sti
mov
sub
rcrb
daa
ss
push
loop
pop
push
repnz
insl
out
cli
popf
push
mov
fisttps
inc
popf
repz
xchg
pop
adc
lock
cmp
sub
fildll
sarl
sub
inc
je
push
outsl
dec
ss
jecxz
sub
test
mov
mov
sub
push
sbb
jnp
pop
or
xchg
cmp
pop
push
js
addl
sub
lds
sti
mov
icebp
push
cmpsb
movsl
jno
add
pop
jo
or
test
jno
ret
outsb
mov
or
jne
inc
add
push
arpl
jle
add
arpl
repnz
shll
adc
pop
xor
out
imulb
mov
js
sub
mov
rcl
fs
mov
pop
mov
std
xchg
imulb
pop
lcall
mov
lds
mov
ss
add
dec
and
pop
adc
pop
mov
jmp
pop
mov
or
fcmovbe
and
or
and
pop
sbb
lret
out
ficoml
xchg
jb
jae
push
xlat
xlat
xchg
inc
inc
sbb
in
pop
mov
push
dec
push
scas
cmp
inc
loop
cs
pop
loopne
mov
aad
mov
stc
and
mov
sti
xor
in
inc
mov
and
xor
clc
cwtl
outsl
push
xor
xor
cli
fidivrl
rcrl
xchg
mov
push
aad
pop
shrb
mov
stc
lock
cwtl
imul
sbb
xor
rolb
arpl
out
xor
lea
mov
lods
push
cmpsb
mov
mov
jo
jnp
loopne
xchg
lods
mov
jbe
and
imul
mov
mov
or
dec
adc
enter
and
pop
push
ret
jbe
xchg
in
add
and
shll
aam
pop
mov
and
and
bound
pop
dec
lods
cmp
mov
stos
ss
into
dec
xchg
outsl
and
xor
cmp
cmp
mov
adc
cmp
mov
and
inc
sub
pop
and
adc
imul
and
add
sets
les
pusha
pop
jae
call
pop
jle
pop
jno
sbb
lds
mov
mov
mov
fisubs
jp
mov
mov
add
subb
sbb
stos
movsb
scas
pop
popf
fiadds
mov
xchg
sbb
jecxz
pop
mov
out
or
adc
into
shr
test
jae
push
add
ss
test
cmp
push
leave
and
sbb
jb
and
xor
in
xor
outsl
ljmp
test
push
sbb
out
xor
push
mov
lret
mov
inc
inc
push
inc
adc
fdivs
push
mov
mov
inc
insl
adc
rcrl
sarb
mov
jecxz
out
inc
cmp
pop
dec
loopne
inc
inc
or
stos
jp
mov
pop
shrb
adc
inc
cmpsb
cmp
sbb
push
ja
xor
pop
mov
in
stc
andb
call
int3
repz
leave
inc
dec
adc
mov
out
xor
cwtl
push
dec
cmp
and
and
int3
add
scas
mov
inc
insb
push
sub
out
cmp
mov
push
pop
jno
xchg
adc
in
adc
das
mov
push
loop
into
add
lcall
mov
xor
bnd
cmp
mulb
sbb
lock
mov
hlt
and
mov
adc
call
out
and
ljmp
pop
push
outsl
lds
xor
nop
cmc
notl
cmp
outsl
and
daa
push
aas
dec
sub
nop
cmp
jno
pop
mov
mov
pop
pop
lahf
mov
mov
movhps
in
push
jne
mov
loop
subl
aas
imul
call
mov
lcall
bound
fildll
jmp
mov
xor
sbb
movsb
das
jae
call
xchg
ret
xchg
imul
cld
lods
add
cmp
roll
jl
adc
pushf
add
pop
shl
and
pusha
mov
sti
popf
and
jnp
cmp
insl
leave
mov
fs
xchg
adc
pop
mov
addl
mov
fcoml
xor
inc
adcb
jnp
or
ss
push
add
out
push
mov
mov
sbb
andl
mov
lods
lods
xor
fstl
arpl
push
fdivrl
mov
push
dec
dec
push
out
orl
sub
mov
push
mov
adc
mov
jb
fadds
out
shl
subb
sbb
jns
out
stos
fmull
loopne
lock
roll
mov
sbb
aad
xor
stos
push
push
loope
xor
rol
mov
or
adc
cltd
cmpsb
push
dec
decl
dec
lahf
and
xchg
push
dec
out
imul
nop
andl
call
inc
imul
sbb
mov
push
cmp
dec
mov
cmp
cmp
cmp
cmp
inc
lret
dec
dec
mov
add
cmp
add
push
pop
shll
ss
push
xor
or
jno
aaa
daa
or
cmp
dec
xchg
movl
lea
push
popf
mov
dec
lcall
lds
lods
jb
pushl
mov
inc
ss
mov
lds
mov
sti
mov
scas
inc
test
dec
mov
jmp
test
sbb
xchg
popa
jecxz
lock
pusha
stos
enter
dec
fsts
movsb
mov
std
xor
shll
into
sbb
jae
xlat
daa
add
in
add
sbb
xor
sbb
or
sub
inc
les
sbb
das
fisubl
jmp
push
xchg
inc
jp
cmp
mov
adc
es
mov
xchg
arpl
test
das
sub
mov
mov
mov
push
lods
incl
push
movsb
and
pop
jl
push
push
cli
add
cmp
test
xor
xor
inc
sarb
push
call
cmp
out
cmpsl
jmp
outsl
xlat
mov
in
loopne
mov
ret
jbe
mov
adc
cwtl
push
adc
lock
in
cwtl
inc
fisttpll
jmp
and
sub
ds
mov
movl
push
or
stc
xor
push
out
ljmp
jbe
add
adc
pop
xchg
adc
push
push
test
push
lock
gs
adc
enter
insl
es
sub
sbb
inc
aaa
addr16
lahf
adc
jno
loop
repz
and
in
pop
dec
and
aas
xorb
push
xchg
std
sbb
pop
cmpsb
fs
pop
xchg
popa
pop
aaa
repz
sub
pop
test
pusha
cltd
adc
adc
mov
sbb
inc
ret
xchg
pop
push
inc
xor
adc
enter
test
rcll
lret
hlt
jbe
cmp
inc
mov
mov
out
inc
shr
xchg
sub
shll
xorl
mov
mov
add
lock
cmp
push
push
addr16
mov
pusha
stos
sub
fistps
lret
jne
xor
pop
adc
jae
shll
inc
loopne
push
popf
and
and
pop
insb
and
pop
inc
orb
xlat
mov
mov
cs
pop
mov
outsb
adc
stos
jns
pop
sbb
pop
mov
ljmp
push
lods
pmaddwd
mov
pop
push
mov
aas
pusha
jmp
mov
adc
int
inc
jle
dec
and
jno
mov
test
gs
es
adc
loop
ljmp
push
and
cwtl
cmp
cmp
adc
test
mov
or
lcall
shl
popf
sahf
fstpl
loopne
lock
enter
xchg
imul
xchg
les
out
and
xchg
aad
adc
and
jmp
jbe
lock
lock
or
hlt
mov
dec
sbb
mov
popf
dec
notl
lock
shrb
daa
fisubs
mov
push
nop
enter
mov
cmp
gs
call
jge
mov
cmp
dec
lods
test
cmp
into
and
push
js
push
out
dec
pop
fiaddl
iret
lods
inc
out
or
je
addr16
jae,pt
cs
adc
mov
pop
jp
inc
inc
jge
and
adc
or
in
rcrl
inc
pusha
jbe
push
insl
fwait
repnz
lcall
mov
testb
aaa
lret
jmp
lods
ret
xor
lods
insb
lods
jmp
xlat
scas
loop
push
subl
xchg
and
insl
mov
inc
scas
loope
fsub
mov
jmp
sbb
inc
xor
sbb
jle
push
aaa
fwait
add
fcmovnbe
in
jp
sahf
gs
xchg
pop
xchg
stc
push
jbe
mov
pop
sub
loop
push
push
adc
inc
jnp
inc
aaa
frstor
mov
cmp
or
lds
leave
roll
pop
shll
in
add
xor
mov
daa
das
repnz
adc
dec
jns
dec
xchg
call
or
lret
mov
mov
stos
in
lods
xchg
push
push
cmpsl
inc
add
and
es
das
jbe
or
mov
adc
push
xchg
cmp
call
xor
es
dec
xor
xorl
sarl
daa
push
pushf
shr
sahf
push
ret
test
cmp
in
lea
rcl
push
cmpsl
cmp
movsb
movb
jo
push
xor
mov
xchg
cltd
add
outsl
pop
xor
mov
push
adcl
lcall
lea
pop
add
repnz
test
adc
add
add
fcoml
mov
jecxz
test
push
out
xchg
arpl
out
dec
and
pop
and
jne
dec
mov
push
notb
cmp
int3
out
jp
dec
sub
fidivl
cmp
dec
inc
dec
sbb
push
bts
cmpsl
pop
pop
lahf
push
daa
in
pop
sahf
mov
pop
addr16
xor
inc
adc
stos
sub
add
jmp
gs
mov
push
fwait
mov
fcompl
adc
popa
stos
dec
cmpxchg
mov
xchg
lods
cmpb
shlb
ret
pop
out
adc
out
ret
xchg
inc
loop
xor
mov
xchg
out
repz
push
callw
mov
daa
xchg
adc
clc
push
ljmp
and
mov
hlt
xor
negl
dec
and
insl
dec
lcall
cmp
pop
cmp
pop
push
jnp
aaa
pop
mov
and
pop
xor
pop
mov
in
mov
jp
sub
test
push
and
xor
mov
out
adc
add
fs
imul
cmpsl
xchg
push
push
stos
cmp
dec
jmp
and
inc
aaa
ljmp
jg
aam
popa
push
cmp
sbb
out
and
jbe
add
mov
repz
xor
ffreep
pushf
mov
inc
jns
lea
xchg
cltd
add
add
xchg
mov
push
insl
xor
sub
mov
jne
add
rcl
sahf
add
mov
lret
fisttps
push
dec
xorl
xchg
leave
adc
lea
pushf
cltd
fwait
mov
sbb
inc
lahf
mov
dec
lds
lahf
or
test
testl
xchg
adc
lea
cmp
mov
pop
inc
fs
inc
out
pop
inc
in
and
stos
into
insl
scas
out
cmp
out
cmp
sub
cmp
dec
fildl
iret
int
stos
or
mov
xor
repnz
cld
pop
push
mov
inc
xor
add
loopne
jp
inc
inc
outsb
sub
pop
scas
add
gs
jno
notl
scas
xor
cltd
push
lret
jb
jp
bnd
test
in
pop
mov
mov
cwtl
scas
popa
mov
out
fistpll
rol
imul
out
sub
lret
cmp
jl
pusha
out
sub
ja
lods
pusha
stos
mov
filds
test
lret
lret
mov
hlt
ss
mov
dec
es
jmp
jns
or
adc
pop
inc
sub
or
fldl
pop
loop
dec
cs
mov
xchg
pop
notb
xor
data16
cs
push
mov
adc
loope
adc
adc
adc
add
adc
out
aaa
loopne
jecxz
push
or
pop
push
ss
inc
les
mov
inc
mov
inc
ljmp
push
inc
lcall
cmp
xor
loope
inc
leave
xchg
ljmp
sbbl
iret
in
cwtl
paddusb
in
xchg
xor
pop
xchg
mov
loope
sbb
fisubl
mov
jae
repz
out
push
fisttpll
and
leave
cmp
xor
push
adcl
cmc
cmpsl
aaa
out
nop
repnz
inc
xchg
in
add
xchg
push
or
test
xor
loopne
push
movsb
inc
scas
xlat
xor
adc
enter
insl
cs
sub
sbb
pop
aaa
sub
dec
inc
mov
cmp
into
divb
cs
aas
inc
jle
xor
cmp
push
add
jp
mov
js
aaa
jae
or
lahf
xor
adc
jp
or
jnp
pusha
inc
xchg
sub
add
negb
jo
add
cmp
mov
lahf
xchg
push
or
xor
cmpsl
bound
andl
clc
mov
cmp
jns
stc
push
arpl
mov
or
mov
mov
jmp
cmp
cld
or
lock
out
mov
gs
sub
pop
mov
and
cmp
jmp
mov
and
sub
and
and
clc
or
outsb
sub
outsb
push
mov
dec
pop
mov
dec
rcll
sub
dec
lds
sub
add
mov
mov
gs
mov
dec
mov
mov
cmc
sbb
sbb
lock
loopne
imul
js
jl
or
sbb
inc
or
inc
out
inc
loope
out
and
pop
push
xchg
sub
lds
jae
mov
push
jnp
adc
in
ljmp
gs
andl
iret
mov
inc
inc
dec
mov
xchg
xlat
int3
add
cmp
out
sbb
loopne
mov
sbbl
pop
and
push
ret
xor
out
push
add
int
orb
lea
and
add
pop
cwtl
addl
xchg
pop
cmp
and
inc
mov
and
arpl
loope
dec
mov
and
std
push
inc
mov
movl
dec
sbb
clc
adc
push
out
dec
dec
movsl
or
mov
hlt
cltd
pop
aaa
dec
ss
mov
and
je
pop
pop
push
push
decl
jge
repz
or
or
push
std
or
mov
xchg
push
stos
push
xor
sbb
mov
pop
xlat
int
lock
mov
dec
jle
loop
test
out
insl
pushf
mov
push
rclb
cltd
leave
repnz
cltd
inc
fimull
xchg
sahf
lret
mov
jle
mov
cmp
adc
push
mov
insl
leave
jb
xchg
xor
leave
cwtl
add
stc
int3
adc
cmpsb
sti
popa
insl
imulb
cs
xor
or
mov
or
pop
lods
sbb
mov
flds
jl
push
pusha
xchg
lret
addb
xor
dec
subb
xor
je
mov
or
jo
push
mov
lods
or
jo
pop
out
mov
cs
loop
stc
enter
push
and
sub
adc
inc
into
inc
pand
jnp
xor
js
decb
xor
cmpsl
js
in
in
rorl
fisubrs
xchg
adc
imul
ret
mov
je
out
int3
loop
jmp
mov
std
sbb
outsb
shl
repz
mov
lahf
sub
rcrl
ss
push
pop
jecxz
and
test
sti
pop
test
xchg
in
mov
xor
inc
test
add
lock
and
and
fnstsw
call
or
cmp
push
js
aaa
pop
dec
in
push
pop
lds
std
loop
outsl
fmuls
outsb
pop
sub
aas
push
ja
pop
add
das
iret
jo
popf
data16
js
jge
in
adc
inc
inc
lods
cmp
jns
or
inc
daa
cmp
and
hlt
orb
daa
and
sbb
mov
fwait
test
lret
sti
jne
pop
es
mov
ret
pushf
stos
adc
loopne
out
shl
mov
lret
jbe
push
orl
outsb
test
pop
test
lret
pushf
lret
cmp
sahf
insb
adc
subl
jb
mov
mov
mov
xchg
ljmp
andb
sbb
insl
dec
ljmp
dec
xor
and
adc
pop
mov
sbb
bound
mov
sbb
mov
adc
in
pusha
in
in
adc
xor
mov
mov
xchg
mov
push
shrl
cltd
aad
pop
add
jbe
mov
cld
jl
std
push
sub
push
mov
xor
mov
and
sub
icebp
repnz
outsl
cmp
xorl
dec
and
push
dec
xchg
xchg
cmp
mov
mov
subl
in
mov
jb
orl
jo
sbb
mov
sbbb
jb
addl
in
jo
sbb
sbbl
pop
jg
pop
push
sbbb
push
in
push
sub
or
mov
pop
xor
div
pop
mulb
mov
outsl
pushf
out
ja
inc
js
inc
mov
je
call
out
xchg
out
dec
fs
gs
cmp
lods
pause
into
inc
mov
and
pop
jae
lret
dec
daa
pop
cwtl
push
pop
cmp
addr16
iret
mov
mov
pop
inc
pop
pop
lahf
sahf
inc
lahf
xor
pop
ss
inc
js
shrb
test
outsb
adcl
aas
fistpl
inc
add
inc
gs
ficomps
int3
outsb
push
int
push
sti
jne
xor
mov
fbstp
insl
mov
mov
mov
out
leave
mov
cld
loopne
subl
mov
add
push
xor
xchg
pop
cmc
xchg
lret
and
lret
cmp
push
add
xchg
xchg
inc
xchg
adc
adc
push
test
xor
fisubrl
push
xchg
mov
and
andl
dec
dec
mov
or
xor
jl
pop
cwtl
bound
jge
mov
jnp
or
mov
cmp
in
loope
xor
adc
in
pusha
in
dec
xor
xor
inc
je
inc
xchg
adc
xchg
push
shrl
mov
sbb
seta
mov
rcll
test
mov
and
dec
inc
les
les
ja
or
cmc
cmp
addl
loop
adc
ja
jbe
push
push
sub
mov
test
test
test
or
sbb
adc
in
jo
inc
adc
jnp
sub
mov
jo
sbb
or
sub
mov
jo
daa
adc
jge
sub
mov
jo
sbb
push
lahf
push
push
mov
aaa
negb
in
or
mov
lcall
sub
xor
inc
js
push
ss
and
push
push
lock
push
mov
mov
mov
jae
call
add
dec
and
and
push
push
or
cmp
or
into
dec
xchg
cld
dec
sbb
push
dec
daa
pop
push
push
pop
cmp
comiss
aaa
pop
iret
sub
pop
lahf
and
lahf
xor
jecxz
push
cwtl
pop
ss
fs
sub
inc
outsb
or
cwtl
pop
popa
pop
inc
add
insl
add
xor
call
jne
cli
jne
addb
fisttps
or
mov
dec
mov
jb
loopne
sbbl
filds
xchg
xor
xchg
cld
scas
test
lret
cmp
stos
imul
sbb
adc
ret
dec
fs
out
mov
mov
inc
dec
mov
xchg
xchg
mov
and
dec
or
push
insl
dec
negb
or
xor
jnp
pop
and
xor
add
xor
xchg
mov
cmp
xor
pop
subl
xor
inc
cli
add
mov
shrl
cwtl
aad
sub
imul
movsb
xchg
push
push
ljmp
adc
and
dec
inc
fnstenv
or
fisubs
jnp
xor
out
dec
and
ja
cld
push
push
in
ja
in
scas
orl
cmp
test
xchg
mov
jo
sbb
mov
mov
jo
sbb
xchg
sahf
sub
mov
jo
sbb
test
ljmp
sbb
sahf
sub
mov
jo
sbb
mov
cmp
jno
push
xor
or
mov
lcall
cld
jmp
dec
push
push
cwtl
xchg
xor
pop
mulb
enter
mov
mov
leave
sub
sbb
mov
lea
dec
and
jp
or
push
or
sbb
cwtl
pop
lds
push
mov
dec
sbb
in
fs
aas
xlat
cmp
push
lods
mov
das
jecxz
das
iret
mov
cld
sub
imul
fldcw
pop
xchg
int3
xor
push
pop
ss
arpl
mov
adc
stos
gs
cld
stc
pop
lahf
ficomps
inc
add
insl
add
mov
call
adc
xchg
sbb
inc
mov
adc
adc
fildll
jne
jns
jmp
push
or
push
sbbl
scas
mov
sar
jno
jns
mov
push
xchg
lret
cs
lret
cmp
xor
xchg
fwait
outsb
stc
adc
adc
je
jb
ljmp
xchg
dec
ljmp
andb
scas
dec
insl
dec
jl
dec
or
lcall
pop
movsb
popa
pop
mov
scas
out
push
or
push
mov
push
pop
loopne
xor
adc
in
pop
in
jg
shll
es
scas
inc
addb
xchg
and
push
shrb
xchg
aad
mov
imul
mov
push
mov
orl
popa
and
imul
xor
cmp
addl
dec
insl
mov
and
push
pop
incb
sub
xor
mov
cmpl
lahf
or
sbb
push
sahf
sub
mov
jo
sbb
sbb
lahf
or
sbb
sbb
in
jo
sbb
adc
xchg
lahf
or
sbb
adc
push
push
ja
push
cmpl
into
inc
xchg
mov
data16
sub
xor
xchg
xor
test
and
and
xor
ret
stos
inc
or
mov
adc
dec
and
jae
sub
cmp
ds
into
xlat
mov
or
std
jl
daa
pop
dec
daa
pop
sub
xor
das
iret
or
mov
cld
sub
xlat
push
pop
lahf
xor
sbb
pop
ss
adc
sbb
fs
inc
outsb
adc
fwait
icebp
aas
insb
push
inc
add
add
pop
pop
enter
in
cmp
int
adc
adc
iret
insb
lcall
fmuls
or
push
mov
push
xor
scas
mov
jno
add
mov
repz
lret
mov
lret
cmp
xlat
push
adc
cld
rcll
jge
mov
mov
mov
adc
stc
inc
xchg
push
and
and
dec
insl
dec
jb
xor
sbb
sub
ljmp
mov
cmpsl
push
shrl
lock
jbe
in
xor
pop
in
push
ja
sbb
xchg
pop
mov
push
add
cmpsb
insl
xchg
push
shrb
xchg
aad
aaa
add
mov
mov
push
mov
xor
in
pusha
jo
popa
and
sbb
or
pop
xor
push
lds
sbb
push
dec
popf
popa
mov
ret
test
je
jge
mov
jge
scas
test
in
jo
dec
and
call
mov
jo
dec
and
xlat
fcmovnb
mov
nop
test
mov
push
js
aas
std
stc
jg
imul
xor
cmp
into
pushl
lods
sub
mov
test
test
hlt
jne
mov
and
gs
sub
dec
push
pushf
enter
cmp
inc
iret
pop
pop
mov
sub
addr16
in
push
or
rcl
mov
push
cltd
es
push
xor
test
dec
xor
aaa
jb
lret
out
dec
pop
popf
or
repz
or
lds
pop
push
push
inc
sar
add
jne
pop
xor
adc
aam
pusha
dec
mov
add
repnz
or
xchg
push
or
enter
repnz
int
vpextrb
fbld
fildll
xlat
lret
mov
pop
enter
fists
subl
mov
neg
add
adc
adc
pop
imul
icebp
les
jl
loope
mov
jecxz
pop
clc
fadd
mov
subb
xchg
adc
aas
xor
push
dec
push
sarl
data16
cmp
icebp
push
cs
les
pop
js
inc
pop
mov
lret
jge
dec
imul
cmp
push
jge
sbb
cmp
in
fsubrs
push
dec
cwtl
adc
das
loop
sub
psrad
push
mov
out
pop
adc
aam
lock
out
inc
movsb
mov
and
outsl
out
inc
cmpsl
pusha
mov
sbb
xorl
push
fwait
sub
adc
or
sub
mov
add
xor
imul
xor
sahf
adc
push
repnz
mov
shlb
in
push
out
fildll
fsubrs
insb
out
cmp
iret
and
adc
in
repz
mov
add
dec
out
mov
sub
cmp
in
es
sub
shrb
aas
cli
in
cs
or
or
push
pop
mov
cmp
xchg
add
mov
dec
jae
add
sbb
push
jp
sbb
pop
mov
sbb
js
pusha
paddsb
lret
xor
and
jne
out
push
adc
int3
push
fs
int3
daa
outsb
inc
sbb
icebp
movsb
test
add
jne
call
dec
cwtl
mov
je
mov
push
inc
push
filds
xchg
mov
pop
iret
fwait
movsb
xor
mov
dec
icebp
push
push
push
xorl
push
inc
sub
lret
test
mov
push
ja
xchg
lret
mov
adc
dec
push
mov
leave
jb
cmp
lret
inc
cmpsl
aas
add
xchg
cmp
and
hlt
popa
insl
hlt
lds
dec
mov
decl
xchg
mov
xor
bnd
cmpsb
jmp
mov
cmp
push
repnz
mov
mov
in
push
cmpsb
xor
lcall
push
lcall
mov
xchg
inc
mov
xchg
sahf
out
push
xor
aad
sbb
sub
sbb
push
dec
xor
mov
ja
scas
ljmp
adc
xchg
leave
jp
xor
jno
adc
and
and
jmp
mov
mov
lret
aas
cmpsb
sbb
in
sub
xor
pop
and
xor
pusha
and
xor
imul
shr
and
xor
push
adc
cmc
adc
adc
or
into
push
and
mov
xor
mul
aam
and
stos
popa
lock
les
inc
jl
push
mov
clc
repz
fimuls
and
lock
or
dec
sub
mov
xchg
int3
xor
or
jecxz
pop
daa
imul
pop
fistpl
das
xchg
in
insb
iret
mov
mov
xchg
jae
pop
xor
push
lahf
xchg
lret
fdivl
out
jae
jbe
jne
bnd
push
movsb
mov
outsb
mov
adc
add
jecxz
call
dec
fwait
mov
jo
mov
rolb
and
fistps
fwait
sahf
xor
mov
dec
icebp
push
mov
adcl
push
inc
mov
jp
lret
cmp
cmp
cmp
push
xchg
shll
push
mov
leave
jb
cmp
lret
inc
and
jecxz
push
mov
popa
insl
sahf
shrl
xchg
cwtl
dec
or
rcll
inc
sbb
pop
pop
mov
stos
test
and
push
mov
push
fstl
jns
push
mov
pop
in
clc
jbe
pop
sub
mov
xchg
inc
sbb
push
roll
mov
mov
std
adc
mov
sarl
cld
lock
rcrb
in
and
and
cmpsl
sbb
or
lea
jbe
push
ljmp
dec
and
add
lea
adc
loopne
mov
popa
call
inc
std
and
push
mov
cwtl
adc
std
lock
rol
adc
pop
jno
push
std
testl
dec
std
lock
iret
lahf
add
pop
jno
dec
and
fimuls
push
xor
repz
jecxz
into
fstpl
xor
pop
xchg
cmc
xor
lahf
pop
sub
mov
je
and
call
icebp
ljmp
adc
push
inc
test
xor
mov
lret
xchg
cmp
jp
daa
pop
and
sub
cmp
fs
iret
and
out
push
pop
lahf
sub
cld
pop
inc
mov
push
jl
or
cmp
push
add
inc
decl
orb
icebp
aas
jmp
imul
dec
lcall
xchg
add
mov
lods
mov
fildll
mov
repnz
mov
call
jbe
filds
out
imul
xchg
lock
scas
mov
pop
div
cmp
hlt
push
ds
adc
jbe
out
out
jle
sbb
mov
xor
imulb
push
push
fidivrs
dec
cmpb
and
sub
push
sbb
cmp
or
inc
pop
pop
mov
daa
sbbl
push
dec
in
movsl
xchg
shlb
mov
jns
pop
loopne
add
cs
inc
xchg
leave
add
adc
push
push
cld
mov
jbe
cli
sbb
das
xlat
cmp
sbb
pushl
rcrb
add
daa
inc
les
mov
lock
pop
adcl
dec
and
sbb
push
cmp
daa
cli
sub
mov
mov
cmpl
cwtl
sbb
jo
sbb
loopne
dec
rcrb
shl
testl
shr
in
dec
lret
mov
bound
in
pop
iret
test
pop
jno
shr
and
jnp
cmp
sbb
mov
callw
inc
frndint
xor
inc
xor
dec
mov
xchg
mov
lock
mov
mov
push
fsts
jp
and
and
outsb
and
aad
sub
enter
fsubr
nop
into
inc
mov
jnp
stc
dec
sbb
sti
inc
daa
pop
cli
popa
outsb
or
mov
das
xor
pop
iret
sub
leave
sbb
jne
pop
lahf
pushl
add
incl
push
jnp
ss
push
daa
and
or
pop
lea
outsb
cmpb
or
add
pop
aaa
fsubr
sbb
int3
scas
and
inc
mov
jne
push
xchg
xchg
es
adc
or
in
lahf
cmpsl
or
jne
mov
sbb
and
aad
ret
faddl
dec
dec
mov
mov
ror
outsl
xchg
dec
pusha
and
xchg
mov
out
in
shlb
sbb
mov
aad
sti
jns
cli
and
mov
xchg
jmp
movsl
shlb
imul
dec
cmc
sub
cmpsb
push
cmp
pop
lods
cmp
xor
push
mov
dec
les
adc
in
cmp
and
push
mov
divb
imul
mov
mov
aad
push
cmc
mov
xchg
push
mov
repz
aaa
push
xor
sub
leave
xchg
push
push
inc
out
orl
and
sbb
aam
lcall
in
mov
ficoml
orl
jo
pop
and
in
mov
hlt
cwtl
int3
cmp
mov
lea
cmp
sub
in
xor
pusha
inc
lods
or
adcb
pushl
cmp
push
xor
rorl
stc
lret
jp
or
jl
fidivrl
xchg
dec
pop
bound
ss
lock
ret
negl
mov
shlb
stos
movd
xor
out
sti
adc
jecxz
cltd
sarl
xor
sbb
add
add
fs
push
xor
js
and
es
inc
push
mov
adc
addr16
sub
add
mov
mov
hlt
cwtl
dec
loop
sbb
call
insl
jbe
sbb
sub
idivl
lods
fiadds
cmc
jecxz
in
hlt
rcl
xchg
daa
sub
scas
bnd
hlt
dec
fdivs
mov
xchg
cmp
scas
nop
xchg
fiadds
jle
cmp
scas
gs
jb
xlat
push
jmp
jno
pop
mov
int
pop
cmc
cmc
aaa
mov
and
insb
dec
insl
push
mov
or
pop
push
pop
pop
dec
or
or
popa
sbbl
push
insl
ret
xchg
pop
push
xchg
sarb
or
xor
pslld
xor
or
and
shrb
popf
dec
cmpsb
movsl
movsb
cmc
pop
jnp
dec
add
pop
loope
add
mov
pusha
jo
add
outsb
sub
or
movlps
sub
adc
lcall
cmp
mov
mov
sbb
lea
jo
out
lods
mov
cwtl
pop
addr16
lock
pushf
pop
aas
outsb
adc
out
jmp
in
jo
data16
lahf
mov
lahf
jge
xor
pop
mov
and
or
and
stos
das
cmpsl
into
ljmp
mov
adc
mov
mulb
mov
jno
iret
jne
gs
xor
fldcw
dec
and
fs
sub
sub
push
inc
stos
enter
sbbb
dec
adc
outsb
imul
jle
mov
push
dec
xor
push
mov
xchg
jae
fiaddl
xor
push
pop
mov
jne
mov
add
pop
pushf
imul
data16
dec
arpl
fdivs
mov
xchg
pop
lahf
mov
sbb
in
shlb
jmp
push
out
rcrl
xchg
jo
mov
in
xor
ret
aam
aad
cmp
std
mov
aad
cmc
jo
lret
cmp
cmp
sbb
pusha
xchg
jg
dec
pop
jecxz
ret
mov
aas
out
mov
jb
pusha
loopne
sbb
inc
jno
dec
or
stc
cmp
sbb
and
adc
cmpsb
cmp
fst
jmp
pop
push
dec
jle,pt
rcll
mov
push
xor
xor
sub
push
pop
inc
xchg
pop
mov
fsts
xchg
push
in
and
cmpsl
lahf
add
notb
mov
loopne
mov
and
xchg
inc
dec
cmp
mov
mov
add
push
bndstx
subl
pop
jae
mov
and
stc
or
out
xchg
fwait
mov
cmp
sbb
loopne
icebp
mov
out
cs
negb
enter
lcallw
in
jo
jl
in
lcall
mov
lcall
cli
mov
out
stos
int3
mov
pop
insb
pop
inc
push
and
pop
xchg
xchg
cs
push
sbb
fsubl
cmp
imul
cld
outsb
mov
sbb
sbb
jo
sbb
cld
sub
or
adc
movsb
sub
into
in
cmp
jmp
xlat
pop
jl
adc
lods
xor
jle
pop
stos
sbb
push
dec
mov
js
dec
inc
xchg
pop
sub
lahf
adc
lods
inc
mov
xor
imul
push
shll
jnp
and
sbb
mov
or
call
adc
jle
mov
out
pop
fcomps
lods
and
repnz
in
jb
scas
jle
mov
in
sbb
jae
mov
mov
inc
pushf
xchg
lret
mov
movsl
pop
ficomps
push
aam
popa
scas
xor
jbe
les
adc
push
scas
leave
jmp
adc
les
out
clc
dec
test
or
adc
and
dec
xor
pop
cmp
mov
insb
adc
je
cmp
pop
add
sbb
jno
adcl
xchg
pop
test
rorb
cs
lds
push
adc
bnd
inc
push
mov
xchg
mov
in
pop
fldl
inc
aam
push
mov
lahf
xchg
push
adc
aaa
mov
and
push
cmp
pop
dec
sbbl
jno
ss
xor
int
inc
mov
xor
and
mov
xchg
es
push
mov
out
fbld
stos
enter
xor
test
dec
popa
sbb
mov
out
je
sahf
add
addr16
mov
jg
in
jo
inc
xor
test
mov
add
data16
cmpsb
mov
and
dec
mov
cmpsb
stos
push
add
dec
push
or
stos
push
ficoms
fisttps
add
and
mov
jnp
sub
mov
mov
cmp
lods
add
push
fbstp
arpl
dec
addr16
sub
adc
mov
mov
xchg
lods
cmp
cwtl
and
jb
or
cmp
sbb
cmp
adc
stc
push
iret
sub
add
mov
movsl
adc
cmp
jge
cmp
iret
pop
add
ljmp
push
and
test
rcl
or
jne
xchg
jne
push
sti
jnp
scas
jno
push
cmp
stos
in
jecxz
lds
mov
jp
mov
repnz
lds
push
test
test
xchg
scas
adc
xchg
dec
popa
add
mov
push
icebp
sub
push
cmp
pusha
dec
fidivs
call
mov
xor
dec
outsb
push
lret
push
daa
add
dec
mov
adc
cmp
mov
adc
xor
mov
jp
sbbl
inc
or
movsb
xor
mov
pusha
dec
notl
push
dec
rorb
sbb
xor
insb
xchg
jae
sub
sbb
sub
gs
sub
mov
mov
dec
pop
xor
in
das
inc
stc
jno
in
mov
test
mov
sub
cwtl
push
xchg
js
in
ds
lea
xor
icebp
and
xchg
leave
adc
cmp
paddusw
addl
in
xor
mov
push
xchg
cs
and
xor
and
fsts
out
lcall
sub
insb
pusha
scas
ja
test
push
sarb
cmp
sub
fsubl
nop
stos
add
jne
fpatan
aas
dec
aaa
mov
xor
xor
ret
xchg
sub
cmp
pop
jb
mov
sub
push
call
inc
mov
pop
fldcw
pop
jo
js
or
lahf
xor
mov
mov
or
cmp
bound
push
jo
xor
or
xor
repz
push
and
or
mov
ja
sbb
icebp
adcl
addr16
add
loopne
mov
out
mov
call
lods
mov
out
test
cmc
fnstenv
int3
shlb
stc
addr16
inc
mov
or
mov
into
xchg
lret
cmp
mov
push
cli
jl
aam
in
sbbl
push
inc
fwait
push
out
ret
call
xor
lret
pop
call
and
sbb
jo
insl
dec
push
mulb
and
xor
jge
and
popa
cltd
sbb
xlat
push
sbb
or
jmp
inc
add
rolb
xor
fwait
das
in
xor
push
cltd
popf
xor
push
push
mov
test
mov
sbb
sbb
mov
sti
repnz
shll
lock
push
ds
adc
std
cs
aaa
or
jns
inc
push
ljmp
jne
iret
dec
pop
mov
push
sbb
dec
nop
and
insb
push
xor
fwait
sbb
ljmp
in
jo
jb
addl
adcb
fstp
test
xor
out
mov
mov
add
jno
mov
fldt
das
jnp
aas
mov
je
ja
das
xor
and
sbb
ljmp
idiv
data16
add
cli
push
negb
dec
lods
out
imul
ret
adc
cmc
cmc
xor
and
aas
inc
pop
add
jg
sub
lcall
mov
cwtl
mov
adc
or
inc
daa
pop
mov
push
jge
sarl
inc
imul
ljmp
pop
test
pop
pop
pop
cmp
pusha
sahf
das
jno
lahf
pop
xor
stos
dec
or
test
aas
je
adc
xor
les
lods
mov
les
xlat
bound
mov
cmpsb
cmp
test
inc
mov
jae
ficoml
adcl
int
add
dec
mov
hlt
pushf
aam
xor
icebp
pop
insl
sarl
adc
push
movl
jg
dec
dec
out
das
xchg
mov
aad
out
push
imul
cmp
and
sub
sbb
int3
cmp
aad
cmc
fcoml
mov
aaa
xor
fisubrs
mov
pop
xchg
pop
ja
ljmp
inc
mov
addr16
inc
out
jp
and
enter
iret
out
push
xlat
fdivrl
adc
cmc
pop
out
mov
insb
mov
cmp
pop
mov
inc
inc
dec
data16
aaa
inc
aad
mov
stos
lahf
or
sbb
xlat
scas
jl
dec
cmc
cmp
cs
lahf
mov
push
pop
pop
cli
in
gs
out
in
add
xchg
xchg
jge
cmpl
mov
fistpl
loopne
mov
push
frstor
addl
in
in
xor
sbb
fcmovne
mov
rcrb
aaa
aas
mov
insl
jbe
or
mov
mov
push
js
pop
add
xor
xchg
sbb
lret
xchg
movsb
aas
scas
ss
gs
cltd
insb
mov
cmp
sub
fistpll
inc
shlb
jo
ja
push
gs
and
test
ret
mov
hlt
xor
outsl
jle
push
jae
sarb
add
add
jl
fisttpll
pop
mov
xor
pop
push
push
push
ficompl
in
cmp
adcl
jno
cmp
jo
pop
xor
ljmp
sbb
xchg
out
in
xor
outsb
xchg
sbb
jle
dec
mov
cmp
addl
loopne
rorl
test
push
in
test
mov
popa
int
insl
test
add
mov
fcoml
pop
jg
adc
lock
scas
cmp
les
es
cmp
popf
ljmp
fisttpl
xchg
xchg
imul
cmp
mov
inc
and
dec
adc
add
pushf
and
xchg
or
jbe
mov
jle
ss
in
mov
sub
cs
cmpsl
cmp
add
stos
cmp
mov
push
cwtl
or
lea
mov
out
enter
add
push
sbb
es
les
push
subb
xor
cmpl
mov
dec
int
gs
adc
add
out
sub
sub
test
lock
mov
jo
sub
movsb
test
sub
lods
sbb
enter
or
adcb
out
negl
aas
jbe
cmp
adc
xor
add
mov
cmp
mov
lods
pop
cmp
popf
movsl
adc
int
lods
fsubrs
ret
add
nop
int
mov
and
adc
sub
or
lods
loopne
mov
hlt
sahf
cltd
into
dec
dec
xchg
fcoms
push
or
sub
in
cmp
push
add
mov
inc
icebp
add
mov
pop
sbb
push
arpl
jne
bound
push
xchg
sbb
add
loope
dec
dec
cmp
insl
flds
imul
dec
cwtl
mov
mov
jne
iret
inc
push
add
out
movsl
ja
incb
mov
arpl
mov
out
pop
in
shlb
scas
imul
cmp
cmc
fldcw
adc
daa
push
lds
xorl
pop
mov
std
in
das
add
add
pop
inc
push
and
and
sub
inc
sub
push
mov
dec
adc
xchg
sub
aad
in
inc
bound
imul
adc
mov
stc
xchg
push
xor
cmp
test
xor
adc
pop
mov
scas
lret
add
add
dec
adc
jae
std
xor
fsubl
inc
pop
sti
push
mov
push
dec
cvtdq2ps
inc
xchg
add
xchg
dec
mov
sub
push
push
loop
js
sub
push
push
lahf
mov
dec
insb
test
mov
or
in
ss
and
das
lods
mov
adc
sbb
mov
sbb
addr16
insb
xchg
sub
ljmp
xor
mov
adc
add
ja
jmp
and
into
test
cmpsl
mov
gs
fsubs
test
outsl
int
inc
cltd
or
stos
ss
fsts
divb
aas
hlt
or
push
cmpsb
push
dec
sub
sub
incb
jmp
push
lds
jle
pushf
or
add
push
xchg
xor
aaa
adc
jle
out
dec
pop
iret
ss
test
lods
pop
jmp
push
pop
lahf
fistpll
pusha
and
insb
push
inc
jmp
jno
jecxz
ja
sbb
sbb
stos
sbb
pop
mov
jp
adc
jecxz
lcall
xchg
add
data16
ja
mov
lcall
mov
out
lods
fnsave
clc
ja
mov
fsubrs
lahf
test
test
or
mov
mov
sub
add
jmp
pop
stos
pop
and
sbb
mov
cmpsb
inc
lock
rcrb
mov
inc
iret
or
in
push
and
or
jp
dec
xor
cmp
and
in
adc
lret
adc
mov
jp
aas
outsl
fidivl
push
xlat
lret
cmp
in
xchg
mov
lds
pusha
sahf
inc
mov
sub
mov
sub
lcall
repz
xor
sahf
jl
xor
cld
jno
cli
pusha
add
es
aaa
mov
sub
push
out
cmp
dec
and
pop
inc
mov
dec
push
push
dec
cmp
data16
andb
sub
icebp
lahf
xchg
test
push
repz
xchg
sub
out
and
sub
nop
in
test
int3
int3
sbb
popa
add
adcb
ret
pop
xor
mov
mov
sbb
ja
aas
test
daa
ja
push
cmp
cmp
push
or
data16
inc
adc
mov
sbb
lahf
int3
sub
lock
and
add
lea
and
jae
or
dec
jne
jle
cwtl
ret
cmc
popa
lret
cld
mov
pop
xchg
jb
add
pusha
insl
sub
loope
dec
imul
outsb
and
cmp
jbe
imul
xor
xor
inc
orl
fwait
test
cwtl
push
and
xor
mov
or
dec
popf
into
push
sahf
mov
adc
adcl
ja
neg
and
jmp
sbb
mov
jae
jle
xorl
inc
or
scas
negl
push
jge
dec
adc
mov
repz
mov
ror
add
data16
jae
ret
and
sbb
add
xchg
dec
or
dec
adc
push
sub
sub
jg
push
and
xlat
lds
xchg
fidivrl
adc
mov
divb
add
mov
aam
mov
in
dec
bound
add
and
cltd
xor
inc
adc
push
fmuls
and
or
xor
leave
pop
push
adc
icebp
xchg
daa
inc
cmp
mov
xchg
addr16
mov
mov
pop
call
adc
subb
pop
cmp
repnz
mov
and
xor
lds
sub
push
orl
adc
push
mov
cmp
jl
addl
mov
cmp
push
inc
adc
push
xchg
and
ficoms
aad
mov
into
and
pop
loopne
cmp
iret
jb
or
pusha
jg
aaa
pop
or
lret
pop
fisubrl
cmp
leave
bound
sub
pop
loope
dec
inc
mov
je
pop
ljmp
sti
scas
adc
js
adc
scas
jnp
jne
push
jge
sbb
dec
add
out
dec
mov
pop
and
lcall
mov
sbb
in
hlt
out
mov
push
mov
stc
pop
mov
fwait
mov
scas
mov
sahf
movsb
js
bound
mov
pushf
mov
mov
test
adc
fwait
cltd
pop
adcb
loope
cld
jg
fisubrs
stos
clc
dec
stos
pop
pusha
xchg
sub
mov
loope
enter
dec
xchg
xchg
imul
xor
jb
orb
out
outsb
push
and
push
jnp
ss
add
int
scas
push
jge
jbe
mov
jbe
mov
xchg
push
mov
or
sbb
rclb
insb
shll
xor
xchg
pop
and
dec
xchg
scas
loop
or
sahf
sbb
add
adc
xorb
or
inc
pop
ret
xlat
xor
jp
sub
aaa
pop
fs
push
pop
out
add
dec
xor
dec
and
add
xor
pop
add
test
adc
andl
jl
roll
mov
adc
outsb
loop
xor
sbbb
jno
xchg
cld
icebp
popl
js
loopne
clc
out
and
inc
sub
fcom
xor
pop
sbb
jbe
adc
icebp
mov
in
pushf
adc
in
xchg
or
fiaddl
push
imul
pop
jno
imul
inc
mov
cmp
mov
inc
sub
outsl
outsl
push
push
js
dec
or
xor
push
ljmp
ret
scas
jne
sbb
add
jne
cmp
and
pop
mov
inc
mov
push
loopne
aaa
fnstenv
repz
addr16
pop
stos
es
jne
das
xor
insl
pop
jp
lcall
xchg
sub
fstpl
ss
pop
and
pop
dec
loop
or
jne
mov
loope
mov
jbe
pop
mov
aad
mov
xchg
lock
jecxz
mov
push
adc
cmc
mov
jecxz
dec
adc
mov
xchg
mov
jmp
fbld
xor
cmp
mov
pop
out
xchg
lret
jb
or
lock
adc
out
aas
insb
iret
jae
and
or
add
mov
sub
sub
cltd
ss
jnp
sub
scas
das
jmp
pop
orl
sub
popa
rclb
mov
outsb
adc
or
xor
jecxz
mov
xchg
out
xchg
push
fiadds
mov
sbb
leave
cmp
inc
mov
cmp
sub
clc
adc
aam
dec
push
das
inc
mov
ss
or
xor
je
shr
insb
mov
push
pop
push
add
popf
push
and
in
ret
in
dec
fs
stos
xchg
sub
cmp
int3
out
orl
and
cmc
jecxz
sahf
sub
test
jb
adc
movsb
loope
daa
xor
mov
rcrl
xchg
push
push
jb
push
push
mov
ss
in
mov
inc
cs
inc
out
in
nop
cltd
cmp
lock
pop
xlat
jg
call
fistps
pop
push
or
pop
pop
stos
mov
nop
test
stos
xchg
paddq
jo
sub
sbb
repz
push
dec
mov
daa
mov
je
outsb
cmp
in
inc
inc
jne
or
mov
adc
dec
adc
repnz
add
call
add
cmp
test
call
sbb
lahf
sbb
pop
lcall
gs
lods
mov
test
leave
dec
lock
mov
xchg
push
fwait
mov
cmc
ficoms
fsubrs
cmc
jbe
jle
cmpsb
icebp
lretw
mov
push
mov
jne
and
into
or
jg
lea
sbb
adc
out
lods
xor
lods
inc
xchg
jmp
jno
dec
add
iret
data16
sbb
ds
notl
inc
jbe
pop
cs
cmp
mov
in
ja
mov
pop
ret
xchg
xor
fists
shrb
xchg
dec
and
mov
and
outsl
ss
xchg
jns
incl
pandn
mov
ljmp
inc
in
aas
std
fld1
sarb
jmp
pop
lds
nop
inc
enter
adc
xor
inc
xchg
jb
mov
sub
push
push
movsl
cmp
mov
or
in
daa
mov
push
lea
mov
lret
test
jle
out
sub
int3
pop
lahf
sub
outsb
stc
ljmp
jno,pt
pop
aam
mov
xchg
adc
ja
sub
sahf
add
adc
sub
push
cmp
or
out
sub
mov
nop
lcall
push
jle
push
lcall
add
jl,pt
int3
dec
js
xor
scas
inc
mov
outsl
mov
sbb
and
popa
jno
or
xor
dec
gs
push
and
out
andb
cltd
outsl
jle
adc
sub
jle
add
push
pcmpeqw
xchg
jo
mov
dec
repz
lahf
dec
cmp
pop
xchg
push
ss
sbb
pop
outsl
push
pop
dec
inc
jmp
rorl
xor
jo
pop
dec
mov
mov
mov
ja
mov
lods
mov
jecxz
lahf
cmp
mov
and
mov
shll
call
insl
adc
jb
loope
mov
nop
mov
cmp
fadds
pusha
out
aaa
xchg
adc
subb
and
sbb
fbstp
in
lret
mov
mov
hlt
aas
pop
out
cmp
jae
xor
jl
or
dec
or
and
dec
xor
add
je
pop
mov
sbb
and
xchg
test
jnp
xchg
xorb
xchg
movsw
pop
fcompl
inc
mov
pop
mov
pusha
fiadds
mov
scas
mov
pop
loope
push
loopne
call
and
cmp
in
push
cmp
push
push
aaa
aaa
push
jg
jg
mov
mov
adc
out
sbb
dec
xchg
xchg
and
push
mov
es
lods
jns
in
fsts
mov
cmpsl
in
jo
inc
aaa
xlat
leave
mov
sbb
je
idiv
mov
cwtl
ja
cwtl
push
pop
jne
cmc
cmc
out
cwtl
jnp
mov
inc
cmp
out
out
sahf
sub
pop
push
rol
adc
jbe
push
and
xchg
sbb
mov
dec
and
loop
inc
xchg
push
mulb
mov
push
cmp
cmp
popa
mov
in
in
sub
cmp
sbb
add
daa
jns
pop
dec
mov
sub
stos
das
shl
outsl
jge
cmp
sbb
and
jo
dec
pop
cmp
cmc
dec
pop
loope
das
iret
shll
mov
popa
sub
pop
lahf
repz
jle
inc
outsb
push
push
int
js
aad
pusha
or
repz
cmpb
xor
adc
pop
lea
jnp
push
movb
mov
nop
push
jg
out
fdivrl
mov
sub
neg
mov
xlat
js
mov
mov
daa
lcall
out
cwtl
sti
stos
inc
fdiv
sbb
pop
or
xchg
adc
aam
in
pushf
pop
stc
pop
add
pop
cli
call
ret
xchg
hlt
and
daa
dec
nop
jbe
insl
testl
or
xchg
ss
outsb
fcoms
pop
pop
adc
aaa
out
cltd
push
ret
scas
push
jle
jns
fucomip
pop
mov
push
nop
test
stos
popa
or
lock
pop
push
nop
adc
sub
mov
mov
sub
dec
in
or
hlt
mov
xor
clc
les
lods
mov
out
pop
repz
push
dec
mov
insl
inc
les
or
js
out
xor
xor
cmp
dec
and
sub
rorl
mov
test
in
enter
sub
andb
push
cmc
pop
and
cli
mov
jo
dec
cmp
mov
out
pop
and
cld
xchg
out
mov
sahf
add
clc
es
pop
and
adcl
xchg
cmp
xchg
test
stos
jbe
divb
and
aaa
xchg
test
dec
into
sub
rcrb
aad
sub
push
dec
add
inc
add
or
dec
pop
movsb
inc
lds
mov
mov
sbb
push
and
outsb
cmp
push
je
add
cmp
arpl
das
js
pop
push
cli
inc
jle
push
or
or
pop
xor
push
pop
cmp
outsb
ss
roll
icebp
aas
push
push
sub
call
cltd
arpl
cltd
mov
adc
lods
jge
ret
jbe
out
pop
add
ljmp
jp
aad
add
lret
roll
xchg
dec
add
out
mov
push
sbb
jb
pop
sbb
into
es
xor
mov
pusha
cmp
and
ds
fnsave
add
imul
roll
sbb
pop
and
push
inc
xor
aaa
cltd
insb
adc
push
push
mov
pusha
frstor
aam
jecxz
in
call
push
in
insb
js
pop
aad
push
les
inc
jo
xor
rorb
sbb
jmp
add
loop
cmc
pop
cltd
xchg
push
adc
pop
pop
fnsave
adc
sbb
bound
mov
push
test
inc
movsl
add
mov
cwtl
aad
inc
sbb
push
rolb
inc
push
xchg
push
push
mov
or
mov
in
sbb
cmpsl
fdivr
mov
out
loope
test
arpl
cli
imull
adc
adc
out
xchg
sub
idivb
mov
jo
mov
pusha
push
and
repnz
cmp
ds
fimuls
mov
or
adc
push
mulb
mov
mov
loopne
clc
sub
iret
and
push
dec
faddl
bound
and
outsl
and
mov
jo
in
and
out
sub
mov
xor
sbb
pop
fidivrs
xor
cmpb
mov
imul
xchg
jnp
cmp
gs
xchg
jnp
inc
fwait
sti
push
sbb
push
push
pop
rorl
addr16
popf
jae
or
xchg
mov
stos
lret
fs
adc
test
imulb
addb
and
adcb
jnp
insl
push
icebp
test
into
mov
jbe
fistpll
mov
xorl
ret
jmp
mov
sbb
fsubl
fs
fcomps
repz
pusha
jecxz
push
in
and
cmc
in
and
mov
mov
leave
push
and
jle
adc
loop
inc
mov
adc
inc
ds
xor
lret
loopne
xchg
or
aas
jle
ljmp
xor
push
mov
xchg
rcl
inc
mov
push
addl
testb
mov
cld
pop
or
sti
in
aad
aad
push
cli
fsin
cld
push
cmpsl
fnstenv
mov
ret
scas
push
and
push
or
in
addr16
outsl
push
inc
in
jno
imull
add
sbb
loop
fisubs
push
push
xor
pop
push
test
icebp
repnz
mov
jo
inc
les
mov
sbb
imul
popa
push
orl
mov
les
out
pop
into
mov
sbb
outsl
add
cli
and
mov
cmp
out
in
or
stos
fistps
jmp
dec
xor
pop
xchg
std
test
add
pop
add
stos
add
sub
enter
cmp
dec
adc
sub
sub
add
dec
cmp
cmp
mov
popa
stos
lock
sbb
and
or
push
repz
sysret
xor
sub
mov
pop
xchg
jne,pt
dec
cmp
push
iret
ss
adc
bound
dec
push
push
pop
or
and
lret
inc
mov
pop
push
jg
pusha
fsts
mov
xchg
popf
add
mov
lahf
push
mov
jbe
xchg
mov
int
fwait
test
js
cmpsb
push
in
jmp
mov
sbb
ret
dec
mov
nop
sti
aam
push
sti
sahf
pop
dec
cli
gs
jl
ret
adc
dec
int
out
out
sub
pop
inc
les
mov
dec
push
pop
push
push
push
jb
lret
aas
sbb
insl
adc
xor
pop
push
pop
mov
adc
or
xor
fstl
repnz
daa
popa
xchg
movsl
daa
mov
das
push
mov
notb
jp
jmp
lock
jo
sbb
inc
imull
fmuls
repnz
push
mov
sub
pop
inc
sub
push
dec
push
inc
inc
les
fsubrl
inc
pushf
daa
xor
mov
and
imul
jl
push
mov
add
fistpll
fcmovb
sbbl
imul
cld
in
pop
lahf
sub
insl
sbb
mov
lahf
ret
pop
cmp
mov
sbbl
imul
int3
cld
in
and
jno
sti
and
sbb
xor
andl
xchg
inc
les
or
jl
or
cmp
dec
mov
and
cmpsl
imulb
roll
stc
sub
inc
add
rcrb
cs
fists
xchg
sub
mov
sub
lcall
lods
and
sub
jno
daa
sahf
dec
inc
sub
dec
pop
cmp
cs
mov
xchg
mov
pop
lahf
xchg
pop
pop
lods
shlb
inc
xor
mov
jnp
leave
xor
and
hlt
icebp
aas
scas
ja
jno
add
call
loop
mov
mov
mov
inc
subb
fildll
add
mov
jne
jns
aam
subl
mov
push
mov
mov
in
and
cmp
sub
adc
inc
addr16
xor
cmp
inc
rol
or
hlt
inc
xchg
sarl
popf
je
insl
mov
decb
mov
inc
and
sbb
mov
sub
addr16
xchg
push
push
xor
call
aam
xor
jnp
or
outsl
mov
mov
out
cs
inc
push
cld
sbb
fiadds
jbe
into
es
sti
cld
cmp
cld
inc
fcmovb
inc
and
inc
inc
les
pop
stos
sub
mov
sub
in
cmp
lret
cmp
cs
xchg
lret
sbb
push
ss
cmp
imul
mov
into
in
mov
jmp
add
cwtl
pop
mov
rol
imulb
andl
int3
mov
sbb
sub
rorl
pop
out
pushf
scas
movsb
in
jo
inc
ds
xchg
push
push
out
xor
adc
into
loop
test
pop
imul
div
adcb
dec
subb
lock
inc
or
or
in
mov
pop
out
sub
adc
push
ljmp
outsl
push
jg
cwtl
xor
lds
mov
into
dec
lds
outsb
push
sbb
daa
pop
sbb
adc
sub
jb
jp
scas
xor
dec
outsb
test
sahf
jbe,pt
xor
in
push
inc
mov
inc
lcall
cmp
pushw
inc
inc
pop
dec
pop
mov
icebp
aas
fadds
inc
dec
xor
mov
add
test
fstps
jbe
lods
jl
nop
push
lods
xchg
cmp
cwtl
clc
mov
in
mov
mov
sub
jmp
in
cmp
inc
mov
mov
mov
pop
jo
sub
mov
pop
out
jae
aas
stos
testb
bound
mov
inc
xchg
jp
movl
ss
dec
or
adc
sub
dec
fmull
cmp
je
pop
jne
push
pop
mov
sub
push
mov
dec
rclb
lahf
push
xor
movsl
cmp
mov
push
shll
movsb
and
iret
add
push
rorl
mov
arpl
push
sub
pmulhw
cmp
jmp
test
sbb
gs
xor
xor
in
xor
dec
inc
or
mov
dec
pop
sbb
pop
sbb
outsl
ds
mov
test
in
cmp
lret
cltd
add
and
loope
loopne
push
aam
adc
mov
sub
sahf
sub
insb
cmp
repnz
xorl
cmp
lock
test
sbbb
fs
jae
std
cmp
adc
and
jno
and
ss
out
cmp
xchg
psubd
insb
cmpb
jp
ja
sahf
call
dec
mov
mov
ret
sub
pop
dec
sub
inc
pop
lcall
fildll
es
pushf
sub
dec
xor
mov
add
mov
subps
hlt
mov
jae
mov
test
insl
add
and
cmp
outsb
fucomp
or
insl
and
out
or
call
shrl
sbb
lahf
xor
daa
lret
cwtl
sub
xor
enter
adc
cmc
aad
xchg
mov
iret
enter
cmp
cmp
xchg
decb
scas
push
je
push
adc
xchg
ljmp
clc
xor
jb
fsts
cli
jp
cli
inc
xlat
fisubrl
loop
or
cmp
pop
dec
or
inc
insl
dec
mov
push
sub
dec
push
pop
loop
aas
xchg
stos
jnp
xor
jecxz
push
arpl
repnz
mov
or
es
xor
fcomip
test
pop
cmp
mov
test
ret
mov
mov
inc
shl
push
enter
cmp
sub
inc
pushf
daa
push
sub
and
test
push
mov
push
gs
xor
and
cmpl
int
lea
push
push
push
mov
mov
loopne
lods
in
cmpsb
ja
cmpl
pop
lds
clc
out
mov
js
loop
in
int3
mov
sub
mov
xchg
cltd
sub
loop
mov
cltd
ret
inc
and
jb
push
insl
psadbw
and
hlt
sbb
mov
stos
into
popf
add
dec
or
loop
xchg
sbb
push
inc
pushf
pop
xor
imul
inc
mov
sub
mov
rcrl
imul
push
sub
sub
xor
bound
push
xorb
stos
subb
dec
pop
inc
adc
sub
dec
cmp
pop
inc
cmp
out
adc
out
add
or
mov
xchg
pop
aaa
lahf
xor
test
insl
mov
jg
adc
pop
push
adc
sub
add
bound
fs
enter
in
or
pop
add
cwtl
dec
aad
jle
int3
inc
mov
mov
jmp
mov
mov
mov
and
mov
int
pop
test
adcb
pop
inc
stos
xor
imul
clc
sti
adc
in
cmc
loope
pop
into
das
hlt
scas
adc
jbe
stos
push
push
inc
js
addr16
pop
lea
add
dec
popw
je
dec
or
jne
jb
fadds
mov
push
dec
push
xchg
nop
imul
xor
loopne
adc
jae
and
mov
mov
orl
sub
outsl
lods
mov
clc
pop
pop
loopne
and
xor
and
jo
mov
or
adc
das
clc
or
or
push
lea
les
push
push
mov
dec
mov
ja
cmpsb
ficomps
int3
xchg
test
push
lock
sub
cwtl
push
cmp
jecxz
jmp
and
mov
add
scas
loop
int3
jg
mov
and
out
loopne
sub
lahf
adc
mov
dec
insl
or
sbb
arpl
scas
mov
or
aas
adc
hlt
or
or
bswap
das
jns
fldcw
xlat
jg
xchg
or
pop
dec
push
inc
ja
push
push
pusha
push
xor
or
dec
dec
mov
orb
push
leave
outsl
jnp
push
jno
popa
sbb
jle
mov
dec
pop
jns
pop
cmpsb
xchg
sub
gs
imul
or
and
subl
fs
or
stc
loopne
lods
ss
pop
push
jo
push
mov
fwait
mov
lcall
pusha
ss
lods
daa
push
mov
adc
decl
xchg
jne
and
lcall
data16
into
faddl
in
jnp
pop
jbe
sub
test
xchg
xor
push
adc
adc
pop
test
loope
xor
xchg
xor
mov
dec
jns
push
or
mov
cmpsl
and
into
sub
xor
sub
rclb
mov
sahf
popf
adc
dec
jae
mov
fs
mov
cmp
xor
arpl
lods
sahf
ljmp
lahf
or
mulb
aad
xchg
sbb
and
sub
aam
aad
push
rorl
push
mov
jbe
xor
cwtl
push
and
imul
stos
lret
push
test
mov
js
sbb
out
mov
push
inc
xchg
mov
es
xor
xor
mov
fcoms
ret
in
jo
ds
andl
mov
ret
movsl
push
cmpsl
jns
out
or
mov
add
jecxz
andb
push
divb
mov
cld
stc
test
and
jb
push
cmc
aaa
add
test
or
xchg
push
push
and
dec
xchg
idiv
pop
mov
aad
popa
lret
add
jmp
add
cmp
lret
and
jbe
cmc
xor
or
or
sub
hlt
dec
mov
mov
xchg
test
jno
pop
outsb
inc
push
sbb
cmp
xor
fs
pop
das
iret
aas
pop
mov
lret
pop
sbb
dec
pop
lahf
push
lods
xor
mov
add
das
sbb
inc
push
addr16
popa
inc
imul
mov
rcrl
push
cmp
and
int3
push
aaa
clc
jne
faddl
fucomi
pop
mov
inc
shlb
push
test
fsubr
mov
mov
in
cwtl
pop
shlb
mov
mov
jae
rcll
rorb
jmp
cmp
loope
adc
addr16
stos
enter
inc
fstl
mul
in
and
mov
call
test
repnz
or
cmp
sub
fimuls
outsb
pop
inc
daa
push
jbe
adc
aaa
cmp
rcrb
push
jl
aas
cs
imul
rclb
popa
sbbb
mov
in
lock
outsb
xor
inc
xchg
or
das
xchg
fcmovnbe
out
dec
and
push
out
mov
and
shlb
jmp
enter
cmp
and
inc
xchg
fs
lahf
outsb
lods
dec
jp
or
cmp
popa
mov
push
jno
in
xchg
test
out
jo
andl
and
jo
rclb
add
stos
std
mov
adc
xor
test
sub
lock
es
mov
imul
cmp
fwait
mov
adc
pop
cmp
or
cmp
push
pop
out
dec
subb
shlb
adc
xor
sub
popf
add
adc
xor
ret
enter
insl
inc
sbb
inc
jg
es
lds
fnstenv
sub
imul
and
pop
xchg
adc
sub
xchg
sub
rorb
pop
fstpt
aam
push
cmp
inc
jnp
daa
pusha
jne
inc
xor
test
adc
mov
lods
xchg
dec
push
jg
andl
into
or
int3
out
inc
xorb
rcll
pop
stc
int
inc
loope
mov
pop
mov
out
cld
out
push
stos
fwait
mov
xlat
cmp
test
int
cld
incl
ljmp
enter
or
sahf
pop
xor
pusha
aad
inc
stos
cmp
push
cmp
jns
test
jns
das
hlt
sbb
movsb
xlat
cmp
and
shrb
mov
or
jnp
and
jnp
mov
lret
adc
ss
push
xchg
fnstcw
sbb
ds
mov
mov
cmp
xchg
add
and
dec
mov
sub
outsl
cmpsl
adc
xchg
in
xor
pop
movsl
push
repnz
adc
and
insb
or
loopne
sub
inc
inc
in
loop
out
imul
add
shrl
xor
sahf
cmc
test
test
cwtl
int3
cmp
insl
sbb
js
out
mov
es
shll
loop
cwtl
mov
js
mov
lock
pop
out
jno
adc
iret
mov
mov
std
cmp
cmc
push
and
ret
add
icebp
xchg
adc
cmpsl
faddp
stos
sar
sahf
lcall
mov
enter
and
pop
adc
sbb
fmull
lcall
push
add
das
movsb
hlt
push
ret
cmc
mov
cli
shrb
sub
daa
int3
imul
xor
insb
iret
ds
mov
sbb
dec
je
and
dec
push
in
pop
cmp
adc
jno
cmp
jno
es
push
dec
cmp
sbb
call
outsb
add
or
cmpsl
xor
mov
in
daa
js
adc
and
int3
jbe
mov
mov
pop
mov
arpl
loop
mov
repnz
cltd
sarl
mov
out
fbstp
mov
add
popf
dec
mov
fbstp
pop
dec
jl
xor
adc
sarb
inc
in
sbb
push
loopne
in
sub
aam
cmpsb
ret
sub
cmp
sahf
jae
xchg
insl
dec
flds
inc
shrl
or
push
pop
sub
or
or
int
sbb
js
xchg
jns
xlat
shl
xor
dec
in
aas
add
xor
in
xchg
inc
and
xchg
push
mov
aad
mov
push
mov
add
or
xchg
push
jp
push
mov
jne
out
cmp
inc
les
arpl
or
or
mov
aas
mulb
pop
shll
and
addr16
inc
inc
push
jnp
pop
mov
cmpsl
in
jle
test
fsubl
xor
sbb
jo
lock
add
jo
lock
pop
pop
scas
jo
lock
je
scas
jo
lock
je
push
inc
mov
aas
adc
into
enter
mov
and
or
testb
popa
lock
mov
dec
hlt
leave
inc
bound
mov
lcall
int3
mov
and
mov
outsl
lds
sbb
into
ret
dec
sub
or
fsts
pop
fidivrl
jp
xor
mov
sub
adc
push
lahf
or
fdivl
sub
mov
adc
stos
push
adc
leave
push
fs
daa
outsb
adc
icebp
cwtl
je
aas
popf
testl
call
push
std
mov
adc
mov
push
cmp
sub
pushf
stos
lods
add
mov
xor
fwait
xor
mov
inc
icebp
push
jbe
push
adcl
add
fadds
mov
mov
jle
xchg
lods
push
xchg
aas
adc
push
mov
leave
jb
push
xor
mov
test
adc
mov
enter
jge
or
mov
or
pop
mov
cli
xor
and
data16
dec
mov
fdiv
in
daa
cmpsb
xor
jno
jle
cmpsb
sarb
sbb
andb
xchg
scas
test
push
inc
sub
xchg
jle
push
lds
xchg
push
rclb
inc
adc
xor
pop
ja
imul
rcll
adc
jno
sarl
and
xchg
addr16
in
mov
mov
lret
push
cmpsb
orl
in
pop
push
scas
jo
cld
xor
andnps
xorl
scas
jo
cld
xor
dec
push
scas
jo
cld
xor
dec
push
scas
jo
cld
xor
jnp
push
mov
adcl
mov
call
jb
repnz
popa
lock
mov
sahf
clc
leave
inc
inc
push
push
mov
xchg
repz
cmp
pusha
or
sub
fsubrl
cmpb
into
int3
pop
lea
pop
or
jecxz
pop
daa
sbb
fs
shlb
das
cpuid
insb
iret
adc
push
xchg
mov
lahf
test
xor
dec
jae
lcall
adc
lds
or
daa
outsb
pop
jne
icebp
out
jg
aas
cli
add
test
stos
int3
pop
icebp
mov
push
mov
mov
push
fists
pushf
stos
cmpsl
psubsb
pop
fdivs
insb
cmp
sbbl
repnz
cmp
test
jle
mov
mov
adc
inc
push
mov
push
xor
test
scas
lds
push
adc
mov
popa
insl
outsb
int3
cs
inc
jns
or
cwtl
fmuls
pop
nop
mov
cli
xor
mov
lock
and
in
mov
xchg
xor
nop
mov
add
or
aad
jne
push
cmpsl
ja
xchg
inc
popa
rclb
inc
adc
xor
pop
ja
andl
xchg
dec
adc
xor
mov
or
xchg
addr16
xchg
mov
push
cld
ljmp
xchg
push
cmpsb
xorl
in
push
push
scas
jo
clc
xor
stc
push
scas
jo
clc
xor
adc
jo
clc
xor
add
jo
clc
xor
sub
jo
clc
xor
jl
push
push
adcl
data16
pop
push
jmp
mov
xor
jae
imulb
jecxz
lock
mov
aam
leave
inc
add
mov
xchg
repz
cld
xchg
and
mov
sub
fsubrs
bound
ror
into
pop
lea
sbb
jns
fs
mov
sbb
das
add
mov
and
pop
mov
ret
fdivl
loope
jae
jo
jne
hlt
mov
push
fs
daa
outsb
xor
fs
stc
loope
add
mov
call
fs
jne
push
mov
stos
push
push
fucomip
rcrb
daa
iret
fwait
sbb
fdivs
push
and
and
ret
jb
add
inc
push
lock
test
mov
lcall
adc
pop
push
mov
leave
jb
dec
xor
decl
xchg
mov
push
daa
dec
adc
hlt
sahf
popa
insl
mov
or
mov
dec
dec
push
or
pop
mov
pop
cltd
cli
xor
jo
sub
lock
and
in
mov
xchg
xor
pop
mov
add
ret
inc
sub
cmp
sbb
jbe
push
rclb
pop
adc
xor
inc
ja
sarl
les
mov
xor
lds
cmp
or
mov
push
lods
mov
mov
lahf
lret
dec
cmpsb
orl
aas
dec
scas
jo
in
xorl
shr
jb
jo
in
addl
in
in
jb
jo
in
subl
in
sbb
jo
in
addl
scas
jo
in
push
mov
adcl
lahf
adc
into
push
jae
jmp
mov
xor
outsl
jb
scas
mov
popa
lock
mov
loopne
inc
or
push
mov
repz
out
push
and
test
xchg
rorl
xchg
lret
outsl
lds
xchg
sub
dec
or
or
filds
fs
pushf
test
cmp
jp
ja
insb
iret
push
mov
push
popf
lods
push
lahf
sub
fdivl
repz
jae
bound
push
adc
fistl
adc
daa
outsb
pop
imul
out
add
lret
stos
int3
out
mov
add
mov
fcoms
lds
das
and
fwait
repnz
fdivs
or
push
adcl
ja
add
daa
inc
cmp
test
mov
mov
xchg
mov
xchg
in
ret
mov
leave
jb
dec
xor
int
add
cmp
and
test
mov
arpl
or
pop
ret
or
pop
je
sbb
jg
jo
adc
dec
mov
ret
lock
cmpsb
xor
call
cmpsb
shr
call
jbe
pop
mov
add
icebp
inc
sub
aaa
outsl
xchg
push
xchg
xchg
in
jnp
push
repnz
adc
xor
inc
ja
in
mov
push
les
mov
xor
into
jno
add
or
mov
pop
test
adc
in
dec
cmpsb
xorl
in
sub
loopne
andl
shr
ja
jo
loopne
addl
in
shlb
jo
loopne
andl
in
divl
jo
loopne
sbbl
scas
jo
loopne
push
mov
xchg
setnp
into
jl
lcall
data16
and
out
jb
push
movsl
mov
es
popa
lock
mov
in
leave
inc
or
mov
xchg
call
nop
xchg
push
and
fmuls
mov
mov
ror
ss
lea
or
pop
daa
dec
fisubs
movsb
sbb
das
sbb
lods
mov
pop
or
pop
jmp
push
lahf
xor
fdivl
lds
ss
stos
jne
adc
push
fs
daa
outsb
adc
mov
test
mov
stos
int3
adc
mov
push
mov
pop
push
ffreep
enter
sbb
mov
dec
fdivs
out
sub
cld
aam
mov
jp
add
sub
adc
test
aam
mov
mov
adc
push
push
mov
leave
jb
inc
xor
daa
inc
add
cmove
and
fldt
dec
push
insl
or
cmp
or
pop
mov
sbb
lods
xor
repnz
dec
mov
int3
lock
sub
in
test
shlb
or
and
xchg
ss
sub
add
push
push
popa
xor
push
add
mov
xchg
iret
xor
inc
ja
sub
push
les
xchg
add
ret
jno
jno
rorb
or
andl
or
adc
in
inc
cmpsb
addl
jo
in
xor
jp
jo
in
xor
movsb
jp
jo
in
xor
mov
in
xor
fidivrs
jo
in
xor
push
adc
fstl
ror
jge
ljmp
xor
mov
push
fidivs
inc
rolb
pushf
xor
in
sbb
xchg
push
and
pusha
or
lds
adc
xchg
insb
dec
lea
or
sti
mov
jp
jecxz
insb
iret
subl
push
lahf
jb
fdivl
mov
ss
jne
dec
mov
adc
int
fs
popf
sub
aas
jnp
add
std
stos
int3
shl
mov
or
mov
mov
iret
pushf
stos
pop
sbb
mov
iret
fwait
mov
fdivs
aam
push
subl
jle
add
cs
repnz
ljmp
adc
mov
adc
iret
leave
jb
inc
xor
add
mov
adc
push
popa
insl
sbb
cs
loopne
or
in
leave
or
pop
fsubrl
cli
xor
xor
dec
mov
enter
das
cmpsb
xor
loope
in
lods
cmpsb
shrb
xchg
xor
clc
mov
inc
mov
add
mov
sub
outsl
gs
push
inc
arpl
push
xor
mov
xchg
iret
xor
inc
ja
cmp
fildl
les
addb
mov
jno
dec
lods
rorb
or
fistpll
mov
xchg
lret
inc
cmpsb
cmpl
scas
jo
out
addl
shr
inc
scas
jo
fdivs
sbbl
shr
inc
scas
jo
fdivs
cmpl
shr
inc
scas
jo
fdivs
adcl
in
loopne
scas
jo
fdivs
push
jp
adc
mov
push
daa
lods
adc
into
xor
in
ss
xor
jb
sub
mov
push
into
popa
lock
mov
leave
inc
lret
mov
mov
sbb
stos
push
and
pusha
or
clc
outsl
xchg
pop
jne
dec
push
aaa
or
or
pop
mov
cmpsl
jp
jmp
xchg
mov
test
pop
sub
fdivl
andl
je
push
adc
icebp
push
mov
mov
mov
adc
add
test
adc
stos
int3
int3
fmull
mov
pop
arpl
jle
pushf
stos
adc
sbb
fwait
fs
mov
imul
mov
in
ret
inc
repnz
adc
and
test
adc
cmp
out
test
arpl
adc
leave
jb
jns
mov
lret
inc
movd
xchg
push
daa
jl
and
insl
or
cs
loop
or
cli
hlt
or
pop
out
xchg
sbb
leave
or
mov
hlt
lock
adc
in
nop
cmpsb
shlb
xchg
xor
add
xchg
incb
sub
and
push
rcrl
xchg
pop
dec
rclb
jb
mov
xor
jnp
and
xchg
arpl
out
roll
dec
xor
jno
mov
rorb
or
mov
mov
mov
lret
js
sub
in
cmp
jo
fdivl
subl
shr
inc
scas
jo
fdivl
orl
scas
jo
fdivl
xor
shr
inc
scas
jo
fdivl
subl
shr
inc
scas
jo
fdivl
push
inc
push
adc
mov
push
lds
ror
inc
decl
xor
jl
jb
add
popa
lock
ror
inc
mov
mov
sbb
test
pusha
or
dec
sub
ljmp
add
xchg
cmp
lea
xor
stos
in
fs
lock
sbb
das
lahf
mov
xchg
mov
loop
push
jne
push
lahf
mov
fdivl
mov
xchg
jne
mov
push
fs
daa
outsb
mov
mov
xor
add
stos
int3
cmpsb
fisttpl
mov
je
push
fbld
and
mov
jle
mov
insb
icebp
push
mov
ret
inc
repnz
les
imul
xchg
test
adc
push
mov
hlt
leave
jb
jl
mov
push
lret
inc
sub
xchg
add
push
js
and
mov
insl
push
in
dec
test
or
and
or
pop
xor
sbb
adc
jo
js
dec
mov
lock
adc
jb
inc
xchg
cmpsb
shlb
daa
xchg
xor
dec
mov
xchg
cmp
shrb
jne
aad
pop
xchg
push
pop
pop
xor
push
push
jp
mov
cmpsl
iret
xor
jno
and
arpl
in
push
les
or
dec
bnd
xchg
or
jmp
adc
in
je
sbb
shr
dec
scas
jo
shll
adcl
in
fisttpll
jo
shll
xorl
shr
dec
scas
jo
shll
subl
shr
dec
scas
jo
shll
addl
shr
dec
scas
jo
shlb
push
out
pop
adc
mov
adc
into
test
jmp
ds
xor
popf
mov
mov
popa
lock
mov
push
fmul
inc
mov
mov
mov
call
and
pusha
or
dec
sub
rep
lds
nop
xchg
into
jl
dec
insb
cmp
pop
daa
mov
xchg
sbb
das
lea
mov
call
xchg
push
lahf
mov
fdivl
movsl
insb
jae
xor
jne
mov
push
adc
sti
push
fs
daa
outsb
jge
sub
aas
xor
mov
je
stos
int3
mov
xor
mov
push
push
fbld
sub
iret
fwait
xorb
js
icebp
push
sbbb
andl
repnz
enter
xor
lret
fs
cmp
push
adcl
stc
adc
mov
stc
leave
jb
ja
mov
pop
lret
inc
aas
jbe
xchg
lds
je
and
mov
cs
mov
mov
dec
push
repz
pop
ss
cmp
cltd
dec
mov
repz
sbb
in
cwtl
cmpsb
rclb
cmp
inc
pushf
xchg
inc
ds
xchg
push
mov
push
jg
aad
push
xchg
push
or
inc
rclb
jle
mov
mov
ja
sub
push
les
push
dec
xor
divb
std
cwtl
rorb
or
mov
fsubr
mov
mov
jo
or
shr
dec
scas
jo
aam
addl
fisttps
jo
aam
andl
scas
jo
aam
sbbl
shr
dec
scas
jo
aam
cmp
shr
dec
scas
jo
aam
push
rcrb
push
inc
mov
adc
into
fimull
pushl
cmp
mov
imul
cwtl
mov
int3
frstor
mov
mov
inc
fmul
inc
insb
jb
mov
mov
call
and
pusha
or
outsl
lds
xchg
aam
lea
cmp
push
out
pop
fcoms
jp
mov
cltd
mov
idivb
push
sbb
loope
xor
fwait
jne
sbbb
fs
cld
daa
outsb
fwait
lods
sub
aas
jecxz
add
int
int3
sahf
rorl
mov
xor
push
cld
pushf
stos
mov
adc
fdivs
movsb
sbb
addl
sbb
xchg
int3
test
jo
mov
jp
push
adc
add
adc
jo
jb
mov
iret
sub
clc
hlt
push
and
add
and
das
insb
lods
adc
push
pop
push
pop
aaa
mov
adc
xor
push
sub
fneni(8087
push
lret
mov
inc
mov
shlb
inc
and
xchg
inc
aas
out
rep
push
mov
cmpsb
sbb
subb
out
cli
int
repnz
out
into
aaa
mov
les
mov
pop
aaa
cmpsl
xor
scas
or
mov
xor
pop
stc
dec
and
add
adc
push
push
js
in
dec
outsl
mov
ror
xchg
jmp
mov
in
inc
repnz
and
insl
out
out
sbbb
push
out
mov
adc
imul
in
in
shl
cmp
arpl
out
jo
sub
repz
add
cmp
in
push
push
and
add
into
and
mov
mov
inc
jne
xor
xlat
and
test
orb
shll
aad
xor
es
and
or
inc
pop
dec
sub
dec
sub
sti
cmp
nop
into
test
mov
sbb
cmp
daa
pop
jo
cmp
sbb
xor
dec
mov
arpl
pop
lahf
jnp
cli
push
jl
inc
pop
lds
pop
adc
es
pop
sub
add
icebp
aaa
out
cwtl
dec
sbb
pop
add
outsl
jne
mov
mov
mov
mov
inc
mov
push
nop
lret
test
fwait
lret
shr
sbb
mov
cmc
mov
inc
gs
sbb
xchg
mov
scas
lret
cmp
shlb
xchg
je
stc
pusha
nop
lods
adc
xchg
shll
cmp
in
and
xor
push
dec
cli
cmp
add
xor
insl
dec
test
add
push
inc
dec
xor
add
dec
sub
lret
mov
pusha
jmp
dec
mov
mov
mov
lahf
inc
xchg
mov
in
push
lahf
movsl
push
fsubr
xor
xor
cmp
jl
add
sbb
inc
notb
in
or
pop
jg
push
dec
dec
dec
and
pop
sub
ja
or
aad
pop
fnstcw
cli
daa
gs
push
inc
nop
add
push
mov
std
rcrb
in
ret
mov
and
sti
in
jo
fs
in
jne
adcb
mov
adc
push
or
ljmp
fs
testb
push
dec
ja
push
sar
ss
push
push
lods
sbb
scas
mov
out
and
push
into
jg
notb
test
bound
rcll
gs
cmp
rolb
jno
faddl
push
or
nop
pop
dec
push
cmp
sub
push
dec
test
xchg
test
mov
jbe
cmp
daa
mov
aas
ret
cmp
add
test
iret
xchg
xor
pop
or
das
lahf
xor
les
push
cmp
mov
adc
out
pop
jnp
icebp
dec
add
mov
cwtl
pop
fwait
pusha
xor
sbb
int3
jb
or
in
mov
xchg
aam
fisttps
mov
in
xchg
in
les
imul
push
inc
mov
xorl
and
xchg
es
scas
ss
lret
cmp
pop
and
xchg
std
inc
out
adc
inc
clc
add
rcrl
mov
iret
xor
shr
and
dec
or
ljmp
cld
dec
and
data16
clc
and
aad
add
inc
ret
push
inc
and
loope
ficoml
pop
xchg
pop
mov
xchg
rcl
xchg
mov
jo
mov
out
cmp
fldt
mov
mov
jbe
jmp
notl
ret
aas
out
mov
movsb
xor
andl
jge
mov
inc
jle
inc
loop
dec
orl
sub
popa
and
ficomps
daa
add
outsb
mov
mov
sub
stc
sbbl
ficompl
adc
push
in
sub
clc
test
dec
out
in
idiv
fwait
push
mov
jno
dec
call
lahf
jo
gs
push
leave
or
cmp
push
and
subb
aam
mov
data16
push
pop
neg
sub
sahf
sbb
lock
imul
das
fld1
dec
cmc
xor
in
sbb
inc
outsb
push
dec
outsb
pop
aas
and
xor
dec
sti
xchg
cmp
daa
ss
dec
pop
popa
dec
xor
add
das
and
mov
inc
out
pop
mov
cli
inc
and
cmp
jno
sub
adc
add
dec
or
add
xchg
aas
es
jo
push
add
pop
push
int
mov
out
lret
into
jge
fmuls
leave
je
int3
mov
sar
fsubp
mov
push
lds
out
fisttps
cltd
mov
sub
xchg
stos
stos
cld
cmpsl
rcr
scas
push
in
cmp
lock
inc
idivb
lods
adc
arpl
push
movsl
aaa
jmp
and
daa
sub
and
ss
add
inc
insl
outsl
dec
or
in
fs
push
sub
add
popa
cmp
fbstp
shlb
outsb
movsl
push
jp
cs
xlat
jbe
mov
mov
mov
in
cmp
mov
mov
pop
lcall
inc
fisttps
mov
insb
cltd
or
setae
fidivs
cmp
aas
loop
outsb
mov
sub
sub
test
mov
fmull
xor
push
pop
out
sub
and
popa
and
inc
dec
xchg
ss
addr16
mov
les
add
in
jo
je
ljmp
lea
into
mov
add
xor
loop
inc
sahf
jo
imul
jmp
in
jo
imul
mov
jo
and
pop
add
mov
popa
mov
xor
adc
jo
lcall
push
popf
in
jne
xor
mov
fisttpll
pop
push
and
and
mov
dec
pop
vcvtsd2si
mov
jge
es
add
mov
dec
pop
cmp
push
das
iret
subb
dec
test
sub
sub
fildll
lahf
xor
fstl
inc
xor
adc
es
mov
inc
adc
sarb
icebp
mov
sub
ds
stos
jns
mov
and
jnp
mov
mov
repnz
in
or
int
fsubrl
mov
dec
mov
xorl
jge
mov
lret
adc
mov
adc
cmp
hlt
adc
les
or
mov
leave
pop
sti
xchg
out
inc
mov
and
cmp
movsl
add
mov
pop
sub
test
mov
push
push
js
xor
jmp
ds
add
outsl
and
mov
dec
rclb
jns
xor
sbb
test
adcb
inc
movl
or
mov
call
xchg
push
popf
ret
addl
push
inc
fistl
mov
xor
or
mov
push
jmp
dec
orl
daa
dec
mov
push
inc
pop
nop
push
and
ljmp
or
in
lds
in
jle
mov
cmpsb
add
popa
in
out
shr
in
jo
data16
inc
out
in
loope
cltd
adc
add
lret
jo
pusha
sbb
inc
jmp
sahf
int
test
pusha
sbb
out
push
cli
or
and
add
icebp
mov
into
cmpsb
mov
xchg
lcall
pop
pop
test
sahf
dec
adc
xchg
push
pop
xchg
sti
push
pop
mov
ret
fildll
call
clc
sbb
dec
in
and
and
dec
inc
lods
xor
nop
add
mov
js
or
jno
daa
pop
insl
pop
ss
xor
ds
iret
add
cmpsl
dec
subb
mov
inc
lahf
xor
push
inc
enter
dec
dec
adc
push
dec
insl
or
jp
sbb
shrb
jo
and
cmpl
mov
fsubs
shrb
stos
dec
xchg
fsubr
jmp
ret
sti
rcl
icebp
test
call
dec
stc
shll
add
out
test
lret
fwait
int
pop
std
xchg
cwtl
xor
out
adc
jle
incb
pop
rcrb
test
sub
adcb
fs
xor
insl
sbb
and
testb
outsl
das
dec
inc
and
fs
insb
xor
mov
dec
shlb
push
hlt
aas
imul
dec
xchg
stc
leave
in
iret
mov
mov
cld
shlb
mov
inc
dec
cwtl
inc
xchg
call
stos
push
daa
out
mov
adc
jg
xchg
adc
fsts
and
jmp
and
aaa
inc
les
test
pop
fwait
and
xorl
dec
and
or
sbb
push
movsb
jge
in
stos
push
mov
ja
mov
aaa
popl
sbb
jp
sub
loopne
push
cmc
adcb
out
cmp
add
fucomi
sub
lcall
std
loop
test
in
jo
data16
movl
xor
jnp
test
data16
push
leave
or
push
mulb
mov
push
fstp
scas
push
aaa
movsb
mov
leave
cwtl
ret
dec
dec
adc
or
dec
sub
ljmp
into
and
mov
sbb
nop
pop
push
aas
test
xor
lahf
adc
das
iret
and
inc
mov
and
lret
xor
rclb
sub
adc
cmp
mov
adc
loopne
or
scas
icebp
xchg
push
pop
or
fldenv
mov
int3
lret
add
jnp
rcll
fbld
ret
outsl
ret
push
repnz
pusha
mov
push
js
jg
pop
inc
loopne
lds
addr16
push
xchg
fisubrl
cmpsl
cmp
and
popa
xchg
xchg
inc
loop
in
adc
stc
rcrl
out
and
sahf
inc
xchg
ljmp
add
add
int3
in
and
lea
dec
nop
dec
daa
inc
in
add
xchg
and
lret
xor
sub
shlb
das
cmpsb
xchg
cltd
pop
adcb
iret
xchg
shlb
dec
dec
inc
lock
sub
out
stc
lds
mov
addl
std
cmp
add
pop
and
push
aaa
les
ds
lret
xor
inc
testl
cltd
dec
and
cmp
xlat
inc
fwait
cmp
jnp
mov
in
in
mov
sbbl
add
outsb
loop
subl
add
pop
xchg
sbb
arpl
subl
sbb
in
jo
addr16
pop
xchg
adc
vrsqrt28ps
push
or
lock
into
enter
mov
nop
or
push
xor
push
test
and
and
bound
jmp
cmp
mov
ret
loope
and
sbb
dec
arpl
or
pop
jge
cmp
lds
mov
sub
mov
jb
gs
sub
pop
xor
dec
out
es
mov
or
notb
lahf
xor
inc
inc
mov
push
jae
dec
adc
or
push
pop
pop
outsb
sbb
loope
xchg
push
in
imul
test
outsb
pushf
movsl
and
int3
jne
sbbb
out
jae
mov
mov
push
pop
loop
rorl
aam
jns
enter
dec
in
fmull
aam
in
add
nop
jns
stc
jno
hlt
lret
test
cmpsl
pop
rcll
hlt
ds
cli
popa
sbb
adc
jg
jb
shr
xor
sti
and
loope
out
aaa
and
or
dec
insl
imulb
gs
push
cmp
fs
add
sbb
pop
cmp
xor
std
cmp
inc
push
rorb
mov
mov
in
push
mov
lea
mov
inc
andb
and
adc
test
mov
push
jmp
jbe
pop
sbb
xor
repnz
das
les
loop
insb
mov
test
pop
es
cmp
ss
les
mov
dec
lods
js
into
and
andl
dec
and
xor
inc
cmp
push
dec
js
out
mov
in
in
mov
in
in
lock
in
jo
gs
movsl
xchg
add
repz
cltd
sub
add
in
cwtl
adc
arpl
jmp
xchg
adc
mov
add
inc
insb
or
lock
xchg
das
xchg
mov
cli
adc
xor
fs
and
pop
lock
and
fcoms
pop
dec
push
arpl
or
gs
mov
and
jecxz
mov
into
xor
mov
xor
imul
pop
pop
sahf
pop
sub
mov
pop
das
inc
cs
stos
addb
test
adc
mov
aad
push
das
sub
adc
ds
sub
or
xchg
notb
jbe
sub
call
ret
mov
int3
or
int
mov
inc
fildll
or
out
fisttpll
rcll
jns
gs
sub
mov
test
stos
and
xchg
lret
cmp
xor
sub
clc
dec
pop
mov
lock
jg
out
std
popf
inc
xchg
hlt
ss
push
push
or
pop
insl
dec
in
daa
jg
sbb
movsb
or
xor
or
das
mov
jo
xor
sub
mov
dec
fiaddl
sti
xor
sub
cli
shlb
and
movsb
inc
loope
and
aas
and
add
test
aad
out
mov
mov
sbb
or
add
mov
shll
insl
sbb
inc
test
inc
and
pop
and
loop
gs
dec
dec
pop
out
sub
dec
aam
daa
dec
jmp
push
nop
cmp
sub
in
les
out
and
in
jo
push
sub
icebp
sbb
xchg
add
jecxz
sahf
test
sbbl
jno
or
testl
xchg
mov
ds
icebp
mov
shl
jmp
jo
pop
sub
pop
idiv
and
push
aaa
lock
cli
ss
aas
fldl
fldcw
and
pop
inc
push
cmovl
pop
and
into
dec
lds
sbb
sti
push
dec
pop
sbb
pop
xor
cmp
fsubrs
scas
sub
xchg
ja
negl
xor
jns
mov
sub
or
or
or
or
aam
push
gs
popa
xchg
call
sbb
or
mov
sarb
daa
fildll
mov
fwait
mov
rcl
ja
stos
push
sbbl
movb
xorl
lods
lret
mov
les
adc
dec
jp
in
repz
incb
repnz
mov
cld
xor
jmp
call
push
loope
inc
sbb
aaa
insl
dec
arpl
cmp
or
xor
and
pop
add
cmp
cmp
popa
into
xor
repz
dec
fisttpll
fwait
inc
xchg
mov
in
jl
mov
mov
jg
xor
mov
test
aad
push
cmpsl
sbb
sbb
sbb
hlt
cmp
out
insb
test
mov
or
push
sub
pop
push
jg
and
push
aaa
cmpsl
fs
or
jns
fildl
in
xchg
xor
cmp
pop
and
jns
nop
and
aaa
out
push
in
decl
mov
pusha
pop
out
jmp
adcb
push
out
andl
in
jo
pusha
sbb
in
add
adcb
fs
cmpsb
test
add
in
cmp
inc
pop
xor
ds
imul
and
jmp
jne
pop
mov
daa
xchg
inc
imul
mov
inc
icebp
jmp
leave
push
pop
mov
mov
cmp
pop
add
inc
dec
bound
or
push
mov
mov
shll
sbb
outsb
push
dec
cmp
adc
je
dec
mov
cmpsl
orb
dec
jp
subl
xor
sbb
dec
jne
das
data16
pop
pusha
pop
test
js
icebp
pop
testb
in
and
sbb
int3
decb
adc
xor
jno
rclb
filds
push
mov
mov
mov
repnz
hlt
mov
xor
push
sbbl
xchg
mov
outsl
test
xchg
out
mov
scas
or
mov
adc
sti
adc
pusha
stc
das
sub
out
push
call
inc
xchg
in
mov
push
pop
sub
in
or
mov
daa
xor
or
fmull
mov
xchg
mov
push
mov
dec
xchg
imulb
xchg
add
in
sti
nop
mov
mov
hlt
xorl
xor
cmpsl
push
pop
push
mov
jbe
adc
testb
cmp
push
imul
cmp
inc
loopne
sub
divl
inc
xorl
out
dec
jmp
cmp
into
cmp
push
fdivrs
loope
push
in
hlt
sub
stc
sub
icebp
mov
subb
sbb
loop
mov
in
jo
gs
cmp
lahf
add
mov
addl
add
add
in
lea
sbb
das
test
addl
xor
into
cld
repnz
pushf
mov
jno
push
and
xor
lock
dec
jecxz
push
lock
push
and
popa
repz
push
pushl
aad
aaa
shr
pop
pop
aaa
aaa
rcrl
dec
and
add
repz
jns
outsl
pop
sub
sbb
stos
sti
adc
mov
sbb
lock
inc
xor
cmp
daa
adc
dec
das
iret
aaa
and
pop
inc
pop
jne
push
inc
xor
shlb
ss
xor
push
sub
jno
adc
add
push
outsb
icebp
xlat
negl
insb
and
push
je
int3
jae
mov
jb
push
mov
lret
shll
cltd
push
mov
mov
in
call
repz
jg
test
loopne
push
lock
add
stos
je
mov
xchg
arpl
cmp
xchg
xor
ss
xchg
adc
jl
mov
mov
icebp
sbb
leave
loop
inc
repz
lds
out
and
push
and
or
or
jno
and
xor
and
imul
ficompl
int
push
subl
fsub
push
test
xor
mov
stc
shlb
mov
mov
xchg
xchg
cmp
add
cmpsl
push
rclb
mov
pop
mov
adc
out
aas
push
shll
lock
sub
jns
and
inc
fmuls
xor
jbe
divl
out
dec
xchg
dec
and
xor
lea
push
mov
jnp
stc
xchg
pop
jmp
cmp
xor
stc
sub
incb
adcl
xorb
sbb
stos
in
in
pop
incb
sbbl
in
jo
push
sub
repnz
sbb
add
fwait
loope
and
jle
cmp
pop
push
out
into
jge
mov
out
or
adc
lcall
push
pushf
loop
jno
inc
cmp
les
pop
mov
lcall
and
inc
gs
pop
or
jnp
lds
mov
into
ffreep
mov
sbb
je
inc
sub
cmp
mov
cmp
jb
iret
sub
dec
pop
lahf
movsl
dec
repnz
mov
xor
sub
adc
mov
dec
adc
imul
inc
add
xor
popf
jle
mov
ljmp
jnp
aad
fists
inc
mov
mov
fsubrp
hlt
xor
repnz
mov
pop
cmpsl
je
add
mov
loope
imul
adc
stos
cld
iret
mov
lret
cmp
test
dec
fistpll
repnz
aam
adc
rcrl
cs
inc
xchg
out
xor
and
pop
add
jle
xor
scas
inc
cmp
adc
sub
test
lret
int3
xor
sbb
pusha
fsubs
mov
xor
xor
xorl
test
sub
cs
add
mov
sbb
repnz
mov
in
push
xor
pop
dec
adc
inc
repnz
and
lea
xor
ret
in
and
cmp
xchg
mov
nop
push
ljmp
in
in
icebp
add
sub
in
adc
bound
sbb
mul
test
pushl
adc
xchg
in
jo
xchg
push
ljmp
lea
pop
jecxz
and
mov
or
cmpsl
xlat
idivl
data16
push
inc
or
and
jo
xchg
push
xor
es
sub
xchg
pop
mov
pop
or
cmp
pusha
and
out
inc
jnp
jnp
sub
sub
in
mov
mov
lods
xchg
and
adc
rcll
es
aaa
pop
adc
push
pop
enter
iret
aaa
stos
push
jl
sub
push
push
outsb
lahf
cmp
call
mov
sub
adc
dec
adc
inc
add
sbb
aas
stc
imul
pop
ss
enter
sub
sbb
outsl
sti
mov
movsl
mov
mov
add
mov
mov
stos
jp
orl
shlb
lods
cli
push
mov
mov
jge
push
adc
sub
dec
in
adc
out
jb
cld
ljmp
clc
cmp
cmp
in
push
push
adc
sub
xor
push
and
data16
outsb
inc
pop
mov
sbb
push
outsl
movsb
and
mov
inc
lret
lods
in
test
xchg
rolb
popf
mov
scas
sub
and
xor
push
mov
jge
push
mov
push
loopne
mov
jmp
sub
pop
push
ljmp
dec
sub
xor
popa
cmp
xor
sub
cmp
xchg
dec
and
cmp
and
push
outsb
je
in
push
in
in
stc
xor
clc
sub
xrelease
in
sahf
push
lock
notl
in
addl
jo
stos
loop
mov
xchg
in
jo
sahf
pop
call
sub
lcall
adcl
pop
and
orl
mov
outsb
loope
data16
inc
test
pop
cwtl
dec
inc
mulb
push
push
sahf
mov
clc
aaa
mov
pop
mov
xchg
sbb
dec
and
push
insb
pop
push
jge
jb
sub
mov
mov
into
call
test
sbb
daa
xor
pop
mov
add
inc
aas
das
iret
inc
and
pop
jmp
pop
in
mov
push
pop
outsb
inc
ss
sub
push
pusha
fs
or
mov
or
jg
sub
shlb
ja
dec
jbe
test
in
push
leave
jecxz
ret
cmp
mov
mov
fucomip
jmp
add
mov
pop
mov
subl
xchg
mov
jl
addr16
into
fsts
dec
cmp
data16
xchg
push
xchg
adc
inc
out
les
daa
dec
mull
push
stos
ljmp
lea
push
xchg
pop
dec
xor
adc
lcall
xor
sub
xchg
dec
leave
lahf
mov
xor
pop
cmp
cwtl
mov
mov
xchg
xchg
divl
xchg
push
lret
dec
adc
jbe
adc
negl
cmpsb
push
mov
jmp
and
inc
and
cmp
xor
ja
notl
cld
and
xchg
mov
push
jmp
cmp
test
in
repnz
push
clc
sub
incl
subl
loope
sahf
sti
in
jo
xchg
adc
push
in
lock
test
xchg
jo
das
out
sahf
mov
cwtl
jo
fwait
pop
icebp
add
sub
lock
or
push
push
mov
sbb
lea
icebp
mov
mov
lea
pop
jl
xor
sbb
mov
or
lock
insb
jecxz
sbb
cs
and
xor
dec
mov
push
insb
dec
out
jb
mov
lds
dec
mov
sbb
filds
pop
cmp
sub
jmp
cmp
ds
mov
into
xchg
inc
jle
adc
in
lahf
xor
ret
dec
push
hlt
inc
ss
cmp
in
push
jae
adc
outsb
and
xchg
repz
jno
ja
aaa
push
lret
test
push
fbstp
push
cli
lret
ja
mov
fildll
in
mov
mov
mov
cwtl
mov
sti
popf
dec
repz
adc
imul
cmpsb
sti
cmp
xchg
lret
inc
fisubrl
jge
sbb
adc
or
jb
scas
dec
stc
adc
jmp
xor
lcall
push
loope
and
or
in
push
pop
dec
adc
cmp
sub
push
dec
adc
sub
pop
mov
test
push
movsb
sub
ds
mov
jae
mov
xor
dec
sub
movsl
inc
popa
adcb
movsl
sub
inc
xchg
mov
cld
sbb
lret
or
notl
or
icebp
jp
xchg
vpaddw
leave
add
xor
negl
mov
pop
and
pop
mov
xor
xor
push
mov
push
xchg
cmp
adc
dec
or
xchg
out
testl
out
addb
call
out
mov
hlt
xorb
sbb
addl
adc
sahf
out
sub
hlt
cwtl
adc
scas
jecxz
and
inc
push
push
or
and
xor
hlt
mov
data16
xchg
negb
lcall
push
pushf
ljmp
xor
js
mov
scas
sbb
and
sbb
add
inc
push
xor
dec
cmpsl
xchg
push
mov
mov
je
or
inc
das
daa
pop
inc
dec
sub
cmp
jp
pop
stos
push
iret
sub
pop
jle
push
insl
incb
sub
dec
jp
ss
cmp
jl
adc
test
sbb
jg
xchg
pop
and
add
and
js
int3
xchg
xchg
mov
fsubrs
jnp
aad
fbstp
lock
mov
shl
incb
clc
fsts
mov
and
out
ret
mov
scas
imul
fcoms
push
xor
addr16
mov
ret
push
inc
in
mov
loopne
and
pop
xor
ss
xchg
push
and
inc
add
or
pop
cmp
aas
je
mov
pop
xor
inc
xor
lret
aad
or
xor
sub
jl
test
in
mov
push
ss
xor
aam
xchg
mov
lret
mov
cwtl
mov
loopne
xor
push
in
push
jae
mov
jbe
adc
xchg
push
push
lret
xor
xor
repnz
inc
sub
inc
xchg
pop
aaa
mov
fwait
mov
xor
lods
out
and
xor
lahf
mov
fwait
push
cld
pusha
ds
jecxz
lock
cmc
xchg
jg
cli
in
xor
sahf
sbb
push
cmpl
in
addb
xorl
out
fwait
xchg
out
sbb
jo
xor
in
cwtl
cli
xchg
pop
or
jo
xor
std
xorl
adc
ss
or
push
xchg
add
into
nop
mov
xchg
outsb
mov
pushw
je
inc
or
pop
mulb
push
xchg
outsb
xor
mov
fs
adc
xor
orb
pop
dec
cwtl
mov
mov
push
pop
loopne
sub
ds
test
jmp
mov
and
sbb
xor
push
cmp
subl
iret
sub
test
pop
push
cmp
jmp
mov
ss
daa
pop
jne
xor
xchg
and
add
adc
lahf
test
addr16
call
xor
daa
int
hlt
shll
mov
fists
sahf
enter
mov
mov
fdivl
ret
push
addl
jo
ret
mov
mov
lret
push
mov
adc
pusha
loop
loopne
sbb
pusha
in
lods
push
adc
jb
mov
sti
inc
idivl
call
and
push
insl
dec
sbb
es
pop
or
pop
and
pop
pop
ret
aam
push
fdivs
aad
pop
ja
inc
push
mov
jle
andl
divb
in
and
xor
mov
and
push
rcrl
mov
rclb
add
int3
repnz
push
cmp
int3
or
xor
out
pop
pop
lret
inc
adc
aaa
mov
cmpsl
fs
mov
subl
ds
cmp
pop
and
daa
pop
mov
pop
jp
mov
mov
call
adcl
in
icebp
sub
test
xchg
add
test
sbbb
popl
cmpl
test
out
std
jo
mov
in
adc
xorl
sbb
cmp
fs
push
sbb
cmp
sub
in
into
sbb
mov
xchg
jg
pop
popa
or
and
imul
pop
pushf
in
insb
fs
scas
cmc
sub
jmp
mov
mov
cmp
pop
add
and
xor
xor
sub
jo
mov
arpl
mov
outsl
aam
sbb
xor
pop
cmp
pop
dec
sub
sub
jnp
cmp
lahf
push
inc
cld
push
shlb
lds
push
jns
es
jb
adc
mov
sbb
icebp
add
jno
imul
add
pop
jge
int3
mov
test
rclb
adc
pusha
mov
push
mov
jmp
stos
mov
aam
repnz
jmp
mov
xor
call
add
stos
jo
icebp
addr16
mov
mov
adc
es
pusha
push
hlt
popa
mov
dec
jecxz
mov
jmp
sub
jmp
cmc
cmp
cmp
and
pop
add
xchg
push
and
pop
or
inc
mov
cmp
mov
gs
push
aaa
sub
rolb
stos
test
xchg
inc
in
sub
flds
inc
stos
subl
jmp
loope
andb
or
rcrb
bnd
hlt
and
inc
gs
push
inc
xor
push
ss
daa
les
test
js
imul
sub
push
mov
push
push
mov
pop
sti
xchg
xchg
jmp
andl
xor
in
jo
pushf
add
out
loop
lea
jo
pushf
add
cli
in
out
inc
cmc
sahf
sbb
mov
ret
loopne
subb
jo
pushf
add
add
in
subb
add
cmp
and
mov
andl
cmpsl
decl
push
and
pop
jmp
and
test
pop
lock
popa
cli
sub
sti
shll
mov
cmp
sub
lcall
or
jne
vminpd
into
jge
mov
js
or
xor
pop
xor
outsb
cmp
xchg
sub
lret
sub
mov
pop
lahf
ficompl
push
test
push
data16
adc
jecxz
jne
or
outsb
aas
add
aas
xchg
je
jbe
xor
lea
mov
mov
lods
lret
adc
inc
push
lods
iret
adc
stos
mov
loop
addr16
mov
jp
mov
orl
add
jge
xchg
sbb
mov
jl
dec
adc
add
push
jecxz
sbb
loope
lret
imull
xchg
repz
xchg
adc
sti
push
add
add
dec
or
jmp
dec
xor
sub
xor
xor
cmpsl
xor
mov
push
mov
cmpxchg
in
xor
bound
inc
sub
and
outsl
cmp
push
mov
push
fwait
xchg
loopne
or
xor
repz
inc
enter
and
movsl
daa
cmp
gs
or
lods
je
out
inc
orl
ds
fldcw
and
xor
daa
and
and
and
in
notb
in
inc
sti
cltd
adc
xchg
jo
dec
out
testl
fs
in
into
cld
lahf
add
cld
jo
inc
out
icebp
mov
std
in
jo
xchg
add
pusha
ljmp
jmp
sbb
rorl
add
subl
in
movsl
add
mov
data16
pusha
or
ja
divb
cs
push
pop
imul
xor
mov
in
sahf
clc
es
push
mov
inc
adc
dec
and
xor
and
or
je
stos
imul
outsb
mov
test
sbb
sub
pop
pop
pop
xor
sbb
das
adc
aas
iret
sub
outsl
lods
pop
jp
pop
dec
lock
data16
pop
push
xchg
inc
ss
sub
dec
inc
jno
arpl
outsb
inc
sbb
xchg
cmp
aas
sbb
jle
cmp
cmpl
fnstsw
mov
mov
dec
mov
xchg
out
stos
mov
pushf
fwait
mov
shll
mov
in
xorl
cld
jl
xchg
pushf
mov
lret
cmp
leave
sub
xchg
push
dec
out
test
jge
add
mov
lock
cmp
mov
icebp
and
xor
ljmp
push
pop
add
sbb
sbb
push
pop
or
inc
mov
push
jno,pt
xor
std
push
xor
inc
pusha
repz
popa
sbb
xchg
pop
push
xchg
les
in
mov
mov
mov
mov
xor
icebp
jge
setae
add
sbbb
cld
pop
sbb
dec
lret
addr16
push
or
xor
add
dec
sub
xor
xor
jle
out
shrl
idivb
test
dec
xchg
xchg
inc
lahf
cmp
add
mov
cltd
loop
stc
xchg
in
jo
cltd
sbb
div
sub
testb
loopne
sub
testb
mov
test
lret
in
mov
mov
cltd
adc
hlt
adcb
push
xor
xchg
cmp
in
xchg
into
lcall
sahf
or
addr16
adc
xchg
mulb
andb
xor
mov
sahf
lock
ljmp
out
adc
dec
and
push
addr16
into
push
mov
xlat
mov
into
dec
push
mov
insl
push
mov
daa
pop
fcoml
dec
enter
lahf
sub
fcoms
inc
leave
fisubrs
pop
or
jmp
dec
repz
cld
lret
inc
ss
and
inc
adc
out
inc
pushw
jecxz
or
mov
icebp
lcall
add
jbe,pn
aad
xchg
adc
icebp
jnp
mov
fisttps
leave
sbb
cli
jp
in
rcrl
fs
inc
sti
rclb
nop
mov
cmpsl
mov
mov
es
stos
dec
sarb
push
and
decb
clc
push
in
testb
cmpl
push
and
push
insl
dec
xor
and
jp
icebp
gs
xor
cmp
aaa
pushl
pop
mov
movsb
push
push
inc
and
push
imul
sbb
xor
insb
and
xor
jnp
mov
xchg
pop
sub
pop
loop
push
xchg
add
jbe
add
push
cmc
fstpt
jmp
shl
inc
dec
mov
dec
cmp
das
inc
les
sub
bsf
mov
sub
cmp
dec
and
sub
mov
push
or
loop
jmp
in
stc
xchg
xchg
adc
sbb
imul
add
xchg
add
jo
sub
loopne
sbb
lcall
aam
mov
dec
repnz
repz
in
jo
xchg
add
jg
push
push
into
or
ds
or
xorl
into
fbstp
adc
jbe
idivb
cs
push
daa
imul
dec
pop
xchg
sti
push
xchg
cld
ss
inc
mov
cmp
xchg
push
sub
pop
and
sbb
sbb
pop
mov
stos
sub
fisttpll
xchg
xor
inc
inc
cmp
pop
cmp
pop
add
iret
jl
mov
jno
push
pop
lahf
imul
jns
push
inc
stc
pop
inc
adc
sub
inc
dec
js
jno
outsb
dec
pop
add
es
sub
lcall
cmpsl
mov
int3
jne
mov
ret
rolb
out
fildll
cmpsb
mov
not
or
mov
leave
movsl
jns
lock
xorl
stc
cltd
mov
lret
cmp
ret
and
pusha
inc
hlt
jle
mov
loope
xchg
adc
push
mov
cmc
and
or
push
and
pop
add
xor
lods
cmp
arpl
dec
jnp
cmp
pop
sbb
cmp
mov
ja
xor
mov
pop
mov
out
in
int
xor
lea
shlb
xor
inc
pop
mov
shr
adc
cmc
jle
cmc
cmp
sbb
mov
divb
mov
inc
enter
push
sbb
dec
and
mov
stos
insb
and
inc
scas
out
in
cmp
jbe
incb
xor
push
sbb
push
mov
arpl
in
shrl
ss
jo
lret
in
jno
scas
jo
add
adc
shr
test
jo
fbstp
fildl
in
pop
mov
jo
mov
sub
ret
sub
jo
leave
sub
adc
xor
or
inc
sbb
mov
loopne
dec
mov
add
lock
inc
and
mov
push
lock
lods
int3
push
add
sbb
out
ss
imul
mov
inc
js
push
outsb
inc
shrb
mov
in
aad
add
mov
sbb
or
js
std
pop
dec
jle
push
xor
sbb
int3
xor
out
mov
scas
pop
sub
or
push
fsub
ja
insl
cmpsl
lea
inc
dec
push
xor
popa
xor
or
push
add
mov
das
mov
mov
outsb
inc
mov
jle
test
andb
xor
xorb
dec
mov
mov
jmp
fsubrp
cmp
jae
add
rclb
xchg
lret
addr16
xchg
sub
mov
cli
jl
inc
sub
mov
jmp
adc
push
test
in
sub
mull
mov
push
clc
push
popa
mov
adc
sub
pop
sub
outsb
leave
imul
dec
adc
or
cld
sbb
pop
popa
jl
jl
in
jne
xchg
pop
mov
pop
in
adc
push
push
xor
push
cs
rcrb
cmc
xchg
pop
cmc
sbb
xchg
jno
push
mov
in
repnz
push
mov
enter
bound
adc
mov
sti
mov
inc
jne
push
imull
loopne
push
loop
add
cmp
loopne
ficomps
dec
jb
push
mov
lock
insl
sti
popl
adc
cltd
aam
in
jo
test
mov
mov
adc
xchg
adc
int3
into
loope
push
xchg
mov
icebp
mov
clc
lahf
add
adcl
push
jge
shlb
adc
mov
fsubr
fwait
ret
scas
sahf
add
push
xor
shrl
add
lods
and
mov
xor
add
out
nop
mov
xor
and
xor
dec
outsl
jb
sub
push
lds
mov
mov
pushf
cld
add
sub
or
push
ss
inc
cmp
or
add
insb
pop
cmc
jne
pop
clc
push
xor
jbe
jne
nop
push
jo
push
sub
pop
push
jnp
jge
add
push
sbb
pop
add
inc
stos
pop
inc
lods
xchg
cmp
lahf
sbb
jmp
shll
lds
push
mov
leave
pushf
mov
xlat
jb
mov
mov
sub
lahf
jo
aad
mov
xchg
mov
mov
addr16
xor
decb
mov
leave
jae
das
cmp
sti
xor
jmp
repnz
sub
push
sbb
inc
add
dec
jbe
pop
es
imul
pop
imul
cli
inc
cmp
outsb
add
jne
icebp
sub
fadd
sahf
scas
xchg
push
cld
xchg
mov
nop
mov
int
inc
mov
sub
adc
mov
add
sti
addr16
push
repnz
into
add
jmp
inc
sbb
add
gs
push
jl
cltd
shll
outsb
mov
push
lods
pop
jno
sahf
pop
in
nop
cld
sub
addr16
and
push
xor
push
mov
sbb
xchg
mov
sub
mov
repz
sbb
mov
popl
ficoml
or
jo
ljmp
mov
rclb
pop
out
mov
cwtl
pop
push
cltd
add
decl
ss
add
xor
xor
push
lock
ja
cmpsl
nop
pop
cld
mov
or
push
xchg
bound
sbb
aas
pop
xchg
mov
scas
lds
rcr
or
jae
nop
scas
push
xor
dec
fstpt
pop
outsb
lea
dec
jecxz
inc
mov
xchg
sbb
and
out
pop
or
inc
lea
push
xor
pop
pop
jbe
sbb
pop
mov
pop
addr16
nop
add
inc
fcmovnb
inc
or
add
jo
insl
adc
sahf
jae
sub
push
dec
mov
adc
imul
lea
popf
test
ss
xlat
data16
jnp
inc
or
into
out
pop
cltd
mov
dec
movsb
mov
push
sti
pop
pop
mov
insl
push
mov
addr16
sahf
jbe
or
mov
scas
pusha
shlb
xor
cmp
rcrl
das
lods
sub
jb
cli
push
test
push
mov
or
mov
test
push
add
inc
aas
sub
mov
push
push
and
xor
faddl
test
sub
repz
push
xor
or
sbb
dec
das
lret
cmp
insl
mov
stos
xchg
fidivl
pop
sbb
mov
iret
sbb
jbe
mov
push
mov
cmpb
dec
lret
dec
or
cs
dec
test
and
sti
ret
ret
sha256msg2
or
cmp
or
xchg
jae
lods
sbb
inc
jl
xlat
xor
repz
std
cmc
jne
movsl
push
adc
inc
out
add
daa
imul
sub
negb
out
push
ljmp
stc
sbb
imul
popa
gs
orl
pushl
repnz
repnz
shlb
jge
outsl
jnp
mov
rclb
in
cwtl
andb
sbb
cltd
fwait
mov
mov
or
dec
arpl
push
scas
xor
and
sbb
push
cmp
cmp
add
movntps
pop
mov
dec
fsubrl
pop
mov
pop
fmull
ja
insl
adc
push
push
jo
aaa
jnp
cmp
push
pop
add
add
add
sbb
jbe
and
in
shrb
mov
lret
cld
adcb
fninit
cmc
fdivr
clc
sti
fdivl
int
in
xchg
push
mov
stos
ret
fisubrl
out
push
jecxz
cmpsb
mov
scas
shrb
lods
adc
inc
icebp
daa
xlat
mov
iret
add
add
add
and
inc
sbb
sbb
nopl
sbb
jb
jg
dec
outsl
cmp
cltd
ds
jnp
fs
xchg
push
jl
out
adc
out
daa
cmp
xchg
test
xchg
or
pop
xor
mov
sub
push
andnps
sbb
jne
or
popf
jne
xchg
push
rcr
adc
push
inc
int
inc
icebp
push
dec
adc
inc
and
inc
sub
ja
outsl
sbb
dec
push
out
mov
out
jo
sub
cmp
push
fidivrs
inc
fidivs
jae
jecxz
mov
js
mov
test
decb
jmp
sbb
adcl
pop
outsb
nop
cmp
pushf
push
out
pop
mov
sub
in
inc
mov
push
and
mov
pop
inc
stc
jo
sbb
ja
add
jbe
add
addl
mov
jg
stos
cmp
inc
mov
mov
adc
lods
cmpsl
mov
gs
stc
xor
push
jle
int
cmp
sub
jp
dec
xchg
pop
pusha
jno
aaa
or
mov
mov
sub
sub
push
pop
push
je
adc
or
sbb
or
pop
ljmp
imul
jae
in
inc
mov
xchg
lock
pop
pop
xchg
js
xor
dec
pop
sbb
adc
xchg
mov
ficoms
and
gs
push
popf
mov
pop
mov
sub
cwtl
xor
fdivrl
imul
lods
dec
lret
mov
fistpll
mov
add
cmp
mul
aam
xor
xchg
in
mov
xchg
out
icebp
inc
pusha
mov
data16
addr16
jbe
jp
cld
pop
mov
sbb
inc
lret
scas
and
scas
push
clc
std
cmp
add
inc
push
push
orl
outsb
sbb
sub
jmp
mov
jp
xchg
shlb
mov
dec
xchg
pop
orb
vpmaxsw
shlb
jbe
cwtl
inc
fimull
jecxz
jmp
sbb
adc
jbe
nop
rolb
test
jmp
dec
lret
gs
gs
inc
sub
sbbl
out
pushl
push
lahf
ret
pop
fwait
and
jg
adc
and
xchg
mov
xor
jo
addr16
mov
mov
push
out
fsub
adcb
mov
loopne
sbb
lahf
cltd
sti
adcl
dec
mov
out
sbb
sbb
xor
pop
icebp
mov
lcall
xor
jb
incl
push
pop
dec
sar
cmp
or
out
push
mov
push
sbb
ljmp
dec
jns
vmread
fs
cmpsb
push
push
mov
je
mov
xchg
cmc
mov
outsl
sahf
das
push
fs
inc
cmp
fcoml
insb
lahf
cmp
out
insb
and
inc
gs
adc
cli
inc
adc
pop
jno
outsb
xor
xor
pop
inc
add
dec
xchg
mov
clc
aas
add
insb
nop
pop
adc
int3
inc
mov
dec
andb
pusha
mov
push
lret
enter
loopne
lret
icebp
xchg
inc
xchg
sahf
xor
loop
movsb
ret
mov
aam
inc
xchg
out
push
std
mov
mov
mov
jbe
imul
jle
addr16
push
fimull
mov
test
pop
sti
imul
rolb
iret
imul
jb
add
pop
daa
js
xor
outsb
popa
push
sbb
sub
mov
adc
jno
or
insl
frstpm(287
xor
movsl
ja
mov
lock
mov
mov
inc
mov
lods
and
push
or
jbe
push
out
sub
lock
sub
jbe
adc
mov
add
and
jge
imul
push
mov
push
cmpsb
popl
lods
dec
jle
cmp
decb
imul
stc
sub
enter
mov
push
sub
add
mov
loop
gs
pop
sbbl
int3
add
xchg
add
fstps
lods
int3
pop
stos
mov
nop
add
fcomps
stos
lahf
adc
mov
rclb
push
bound
push
add
ds
cmpsl
jo
stos
fistpll
inc
inc
cmpsl
add
dec
xchg
inc
rclb
xchg
dec
and
fcmovnb
adc
lds
and
lds
dec
jg
add
pop
or
pop
pusha
sti
pusha
inc
mov
inc
mov
into
and
xchg
sbb
inc
jle
pop
jle
mov
xor
mov
mov
popa
cli
cmpsb
or
xor
push
jnp
mov
xor
aad
inc
add
or
shrl
xchg
push
jg
pop
addr16
imul
movsl
test
into
mov
cwtl
dec
enter
ret
push
dec
out
ljmp
inc
cwtl
fwait
mov
cmpsl
mov
xor
xorl
aaa
xchg
xchg
and
mov
pop
dec
adc
mov
push
enter
jb
xchg
cwtl
lret
jne
xchg
dec
sbbb
push
and
scas
adc
xchg
or
insb
dec
xor
pop
xor
outsl
lcall
pop
pop
shl
ss
push
mov
xor
mov
xor
lahf
sahf
aas
jae
lock
inc
inc
inc
stos
loope
xchg
dec
dec
xchg
push
sahf
push
test
push
xchg
xlat
adcl
xchg
loop
xor
idivl
and
sub
mov
or
pop
xor
xchg
mov
cmpsb
stos
and
lods
das
push
xor
push
mov
xchg
add
add
in
inc
in
jo
divl
dec
jl
in
lret
mov
jo
or
inc
jl
in
mov
dec
mov
divl
adc
in
xchg
push
mov
div
das
pop
push
cmpsb
mov
ret
jo
divl
cmp
push
push
mov
mov
pop
inc
cwtl
or
lock
add
fcos
data16
add
xor
cmp
and
add
sbb
rorb
adc
gs
push
cwtl
call
andb
pop
add
lods
sub
push
or
push
shlb
dec
ljmp
daa
cmpsl
sub
inc
xor
dec
imul
iret
jge
fildll
jb
cmp
adc
xor
mov
dec
cmp
adc
pop
nop
les
loopne
mov
jns
aas
xchg
das
add
dec
adc
out
imul
mov
hlt
mov
cltd
lods
adc
lds
stos
mov
mov
fwait
lret
xchg
lcall
mov
xorb
mov
xlat
xchg
or
test
pop
mov
mov
xchg
push
push
xchg
adc
adc
es
jo
cwtl
jge
inc
adcl
push
dec
xchg
push
and
sub
pop
or
jo
dec
xor
pop
xor
push
aas
pop
mov
pop
les
push
mov
sbb
xor
cmp
shrb
lock
int3
inc
inc
xor
inc
xchg
rorb
push
sahf
push
mov
push
lret
jae
xchg
pop
adcl
xor
xchg
xor
jge
and
sub
movmskps
or
iret
or
mov
xor
sbb
push
and
xor
push
or
push
mov
pusha
mov
cmp
in
leave
mov
jo
divl
into
jnp
in
push
mov
jo
divl
lret
jnp
in
dec
mov
jo
divl
enter
dec
mov
jo
divl
lds
in
dec
mov
jo
divl
ret
push
inc
pop
push
push
daa
bound
sub
into
sub
jmp
or
into
jno
divb
mulb
incb
and
ret
mov
cli
mov
xchg
inc
mov
push
mov
ret
je
dec
xor
xor
or
or
adc
lds
jle
mov
rorb
sbb
repnz
fsubs
adc
das
call
cmp
sub
fldcw
pop
xchg
lahf
loopne
lahf
xor
test
ss
inc
adc
jmp
push
outsb
lds
icebp
adc
icebp
aas
sbb
dec
add
in
push
call
jne
xlat
jne
jbe
mov
fisttps
fildll
test
fwait
mov
cmpsb
mov
ds
xorl
push
or
xchg
lret
mov
cmp
xchg
xlat
sbb
adc
stos
xchg
jb
and
inc
pop
xchg
inc
xchg
xchg
nop
push
and
pop
and
sub
dec
mov
dec
or
pop
dec
xor
pop
xor
fidivrl
pop
mov
in
xor
inc
ds
mov
sbb
xor
lock
push
in
mov
shlb
push
inc
inc
mov
inc
xchg
push
dec
xchg
push
popf
push
adc
push
push
jae
xchg
jecxz
xchg
push
lock
push
mov
mov
xchg
xor
add
and
sub
xchg
dec
les
mov
push
xor
mov
push
and
mov
or
imul
rcll
in
dec
mov
jo
divb
push
jnp
in
xlat
in
jo
divb
push
jnp
in
aam
in
jo
divb
dec
jnp
in
rorl
jo
dec
jnp
in
into
in
jo
divb
dec
jnp
push
lret
pop
push
push
lods
popa
push
xorl
into
fcmovu
jmp
or
push
jno
idivb
add
lock
sub
mov
mov
xchg
inc
mov
dec
mov
dec
je
dec
mov
dec
and
sub
sub
push
lds
or
into
dec
fmuls
adc
daa
xchg
daa
daa
pop
pusha
xor
imul
iret
jns
iret
sub
sub
or
and
fidivrl
ss
inc
adc
outsl
push
adc
dec
push
outsb
dec
outsb
outsb
icebp
lcall
add
dec
add
jb
call
jne
xlat
jne
cld
jg
adc
fildll
or
fwait
mov
movsl
mov
les
mov
mov
or
xchg
rcll
cmp
in
inc
adc
xor
mov
xchg
jb
cmpsb
jl
inc
lea
xchg
nop
push
and
sub
dec
cmp
or
pop
pop
dec
xor
pop
xor
pusha
ds
mov
imul
push
enter
inc
sbb
xor
cmp
sarb
out
shlb
fdivrs
inc
cmp
inc
xchg
fmull
push
popf
push
xchg
je
push
xlat
jb
xchg
imul
mov
xchg
xor
mov
and
sub
sbb
or
into
or
mov
cmp
dec
sub
and
ds
push
sbb
push
mov
pop
mov
inc
xchg
in
jp
sub
in
jo
divb
fidivrl
in
pop
in
jo
divb
xlat
jp
in
pop
in
jo
divb
aam
sub
in
jo
divb
sarl
in
push
in
jo
divb
into
jp
push
push
pop
push
push
xor
xorl
or
into
jmp
jmp
or
fidivl
testb
and
add
lock
sub
mov
stc
mov
xchg
inc
mov
dec
mov
iret
jae
dec
cmp
dec
and
push
and
push
sub
sub
fidivl
nop
into
xchg
lcall
cltd
pop
sbb
pop
out
pop
cmp
cmp
and
cmp
sub
fsubrs
pop
xchg
xor
lahf
in
and
ss
cmp
adc
aas
adc
cmc
sbb
outsb
shrl
icebp
and
aas
sub
aas
add
dec
add
clc
or
int3
jne
jne
cmpb
sub
stos
mov
xchg
fwait
mov
movsl
mov
dec
mov
xorl
pop
or
xchg
lods
rclb
cmp
jb
adc
mov
sbb
jb
sub
mov
xchg
inc
xchg
dec
xchg
push
and
insl
dec
mov
push
or
xor
push
xor
out
pop
mov
icebp
ret
dec
cmp
mov
mov
out
xor
jbe
in
shr
xor
pop
aas
inc
ret
xchg
bound
push
pushf
push
sbb
fisubrs
pop
jb
xchg
out
jg
push
cld
pushf
push
mov
pusha
mov
xchg
xor
and
sub
mov
int
xor
xor
scas
mov
call
inc
sub
push
mov
mov
int
in
add
sub
in
jo
cmc
jo
pusha
jp
in
jecxz
in
jo
cmc
jo
pop
jp
in
loopne
in
jo
cmc
jo
pop
jp
in
fisttpll
adcl
in
fimull
push
push
jp
push
xlat
pop
push
push
mov
pop
or
mov
jmp
xlat
jmp
or
pusha
jo
test
mulb
nop
jmp
lock
sub
mov
mov
xchg
inc
mov
dec
mov
push
jae
dec
ret
and
sub
sub
adc
lds
lds
sbb
dec
sbb
lahf
es
pop
insb
xor
jne
cmp
stos
inc
das
iret
test
iret
sub
sub
sbb
pop
lahf
jb
lahf
xor
xor
out
ss
aas
adc
jnp
adc
pop
sbb
outsb
icebp
cmpsb
ja
aas
scas
cli
aas
add
dec
add
jle
call
jne
jne
or
adc
sbb
stos
dec
call
mov
ret
push
sarb
xorl
loop
xchg
xor
xchg
lret
negb
cmp
xchg
imul
jb
xchg
jb
mov
mov
xchg
inc
xchg
push
and
sub
inc
jbe
or
push
push
xor
insb
cmp
mov
push
aam
push
mov
pop
mov
daa
mov
xor
cld
cmp
rolb
shlb
in
inc
dec
filds
call
pushf
push
mov
fisubrs
jecxz
jbe
jne
xchg
push
sbbb
pusha
xchg
xor
xchg
cmp
inc
les
dec
les
dec
int
xor
adc
orl
orl
dec
and
push
and
dec
sub
push
mov
pop
mov
push
xchg
in
xchg
sub
mov
jo
cmc
jo
out
sub
mov
jo
cmc
jo
jecxz
sub
mov
jo
cmc
jo
loopne
sub
mov
jo
cmc
jo
fnstsw
in
pusha
mov
jo
cmc
jo
fidivrl
push
pop
pop
push
push
aas
pusha
push
addl
into
inc
mov
ljmp
data16
addr16
outsl
xor
dec
cmp
and
jmp
lock
lock
mov
xchg
inc
mov
dec
mov
dec
dec
bound
aaa
push
and
sub
sub
adc
push
into
nop
into
sahf
cltd
into
dec
push
pop
sbb
pop
repnz
pop
cmp
cmp
xor
iret
or
iret
sub
fsubrs
pop
lahf
xor
lahf
clc
pop
lahf
xor
cmpsl
xor
insb
cmp
adc
ds
add
outsb
sub
icebp
aas
xor
dec
add
add
call
jne
aad
mov
ss
adc
bound
fildll
popf
mov
fwait
push
movsb
mov
push
mov
xorl
push
iret
xchg
lret
jl
lret
cmp
jle
adc
les
mov
xchg
jb
cmp
inc
pop
xchg
inc
xchg
xchg
mov
xor
cld
sub
lret
or
out
adc
xor
repnz
mov
std
shll
pop
cmp
mov
push
mov
lods
mov
xor
cmpb
ror
in
shlb
push
inc
into
fiadds
outsb
dec
xchg
push
fwait
push
sub
push
imul
push
or
xor
xchg
xor
sbb
inc
les
int3
or
dec
adc
adcl
dec
and
push
and
shrb
push
stos
push
push
mov
xchg
in
or
sub
mov
jo
cmc
jo
insb
jns
in
out
mov
jo
cmc
jo
imul
jo
hlt
jo
data16
in
jmp
hlt
jo
arpl
in
out
in
jo
hlt
jo
pusha
jns
push
jecxz
push
push
lds
or
or
mov
push
jmp
or
insb
outsl
xor
sarb
mulb
pushf
and
pusha
sub
mov
xchg
inc
mov
dec
mov
popa
jb
dec
into
popa
dec
and
sub
sub
adc
mov
nop
into
and
into
dec
out
dec
sbb
stos
and
pop
cmp
inc
das
iret
xchg
aaa
iret
sub
xor
lahf
jle
lahf
xor
xor
repnz
adc
ds
xchg
fs
outsb
arpl
mov
icebp
aas
mov
dec
add
mov
int3
dec
lock
jne
aad
mov
mov
sbb
stos
push
out
mov
mov
fwait
out
xchg
fwait
mov
mov
push
xor
mov
out
or
xchg
ds
xchg
lret
add
cmp
xchg
jne
xchg
adc
adc
dec
xchg
jb
mov
nop
inc
xchg
mov
mov
and
sub
push
jne
or
je
dec
xor
push
xor
js
pop
mov
add
push
loopne
push
mov
push
mov
xor
xor
or
in
push
in
shlb
lock
inc
xchg
hlt
dec
xchg
push
fwait
push
scas
jb
push
out
jo
xchg
cmpl
mov
xchg
xor
mov
sub
xor
or
or
aad
xor
inc
mov
xchg
push
and
push
sub
push
xor
push
mov
pop
mov
pop
xchg
in
xchg
in
sub
mov
jo
hlt
jo
bnd
in
jne
in
jo
hlt
jo
out
js
in
jb
in
jo
hlt
jo
in
js
in
outsl
mov
jo
hlt
jo
jmp
mov
jo
hlt
jo
out
push
push
imul
orl
into
dec
mov
js
jmp
pop
addr16
outsb
xor
pop
cmp
and
and
out
lock
clc
mov
xchg
inc
mov
dec
mov
out
pop
dec
push
popa
dec
and
and
sub
sub
adc
adc
nop
into
stos
cwtl
into
dec
je
dec
sbb
xor
pop
cmp
cmp
cmp
aaa
iret
sub
sub
stos
xor
lahf
add
lahf
xor
cmpsb
xor
js
ss
ds
or
sbb
imul
jbe
aas
inc
stc
aas
add
inc
add
adc
int3
aam
int3
jne
aam
mov
inc
stos
adc
outsb
sbb
stos
fucom
stos
mov
xchg
fwait
mov
mov
push
cmpl
mov
inc
mov
xchg
into
xchg
lret
mov
cmp
xchg
sti
sbb
mov
mov
xchg
jb
inc
jp
inc
sub
xchg
lea
cmp
and
sub
je
or
cli
adc
xor
push
xor
cmp
jecxz
mov
push
cmp
mov
adc
in
pop
in
xor
mov
in
fldlg2
shlb
jbe
inc
fcmovu
inc
xchg
jp
xchg
push
lcall
or
push
xchg
pop
jle
push
adc
push
mov
pop
mov
xchg
xor
daa
cmp
inc
into
daa
inc
les
lret
or
pop
adc
andl
dec
and
push
and
fsubrl
push
mov
push
mov
nop
in
sbb
sub
mov
jo
hlt
jo
js
sub
mov
jo
hlt
jo
jne
sub
mov
jo
hlt
jo
jb
sub
mov
jo
hlt
jo
outsl
js
in
repnz
jo
hlt
jo
insb
js
push
out
pop
push
push
rcrl
adc
or
mov
aad
dec
pop
xor
xor
fidivrs
mulb
test
and
insb
sub
mov
xchg
inc
mov
dec
mov
insl
jno
dec
fisubl
and
push
and
mov
adc
cwtl
int3
nop
into
xor
dec
sbb
mov
daa
pop
test
pop
cmp
inc
das
iret
popf
ss
sub
xor
lahf
mov
lahf
xor
xor
aaa
ss
cmp
adc
jo
outsb
outsl
imul
jne
aas
xbegin
add
xchg
or
int3
pop
out
int3
jne
aam
mov
enter
hlt
sbb
stos
arpl
stos
mov
mov
fwait
cli
xchg
fwait
mov
mov
push
cmp
mov
cli
or
xchg
dec
into
xchg
lret
push
popf
lret
cmp
adc
xchg
sbbl
adc
push
xchg
jb
lret
inc
mov
inc
xchg
inc
xchg
lea
ret
insl
mov
insl
dec
pop
je
or
adcb
inc
push
xor
test
pop
mov
pop
xor
in
cmp
mov
adc
in
jecxz
xor
adc
in
pop
in
shlb
cld
cmp
inc
pusha
fldl
add
push
lcall
xchg
fsubrl
sti
outsl
jbe
lea
push
lcall
xor
xchg
xor
lods
cmp
inc
push
daa
inc
les
dec
les
arpl
or
loope
xor
dec
mov
popf
push
and
bound
push
cmp
push
mov
nop
in
sahf
in
sub
mov
jo
repz
ja
in
orl
sub
mov
jo
repz
clc
ja
in
jnp
in
jo
repz
cmc
ja
in
js
in
jo
repz
bnd
push
jne
push
push
push
pop
push
sbbl
into
pop
mov
incl
addr16
insl
xor
fs
and
std
and
repnz
mov
mov
nop
inc
mov
dec
mov
repz
dec
pusha
pusha
dec
and
and
inc
sub
sub
adc
push
int3
nop
into
mov
into
dec
adc
sbb
cmp
cs
cmp
cmp
dec
inc
das
iret
and
iret
sub
sub
mov
pop
lahf
adc
lahf
xor
movsl
xor
test
ss
cmp
adc
negb
outsb
cmc
push
icebp
inc
jne
aas
dec
clc
aas
add
inc
add
sbb
call
jne
shll
cmpsb
jl
adc
adc
jp
fildll
mov
mov
pusha
mov
push
addl
add
orb
xchg
ror
xchg
lret
xchg
pushf
lret
cmp
xchg
inc
adc
fcompl
mov
nop
jb
push
jns
inc
aaa
popl
dec
inc
xchg
lea
dec
pop
and
sub
loop
dec
or
push
adc
xor
push
xor
or
pop
mov
adc
cmp
mov
adc
in
mov
xor
lcall
xor
cmpb
out
inc
xchg
xchg
push
cltd
push
inc
jno
push
subl
push
and
mov
xchg
xor
xor
and
es
lds
or
lret
adc
subl
dec
and
push
and
call
add
mov
in
and
sub
mov
jo
repz
test
in
pop
mov
jo
repz
xorl
jo
repz
jle
sub
mov
jo
repz
jnp
sub
mov
jo
repz
js
push
push
sti
pop
push
push
fstpl
and
or
mov
decl
aad
push
push
xor
imul
aaa
mulb
mov
and
js
lock
nop
inc
mov
dec
mov
jns
pop
dec
out
dec
and
push
and
enter
popf
adc
movsb
lret
nop
into
cmp
into
dec
push
aad
sbb
ret
and
pop
nop
sub
cmp
iret
aas
das
iret
test
aad
pop
cmp
sbb
xor
or
ss
cmp
adc
sbb
jl
outsb
jnp
outsb
icebp
lret
aas
shl
aas
add
inc
add
mov
out
int3
jne
shll
sub
mov
filds
sbb
stos
outsl
in
mov
mov
fwait
push
xchg
fwait
mov
mov
push
orl
xchg
movl
int
lret
sbb
adc
adc
bound
mov
nop
jb
js
inc
mov
inc
xchg
mov
into
pop
and
sub
push
dec
or
xor
push
xor
nop
cmp
jne
mov
push
clc
cmp
mov
adc
in
mov
xor
and
in
imul
xor
or
inc
insb
faddl
or
xchg
push
cltd
push
jo
push
pop
outsl
jbe
cltd
jl
push
cmpsb
cltd
push
mov
pop
mov
xchg
xor
mov
es
les
les
outsl
lret
in
adc
xorl
orl
dec
and
dec
and
outsb
sub
push
dec
add
mov
pop
mov
ja
in
stos
jmp
in
add
bnd
or
in
lea
jo
pop
ja
in
mov
jo
add
sub
mov
jo
bnd
add
in
test
jo
jbe
push
sbbl
andl
into
fs
call
add
xor
jo
mulb
cmp
and
daa
lock
testb
mov
call
insb
pop
dec
and
and
dec
sub
sub
adc
sub
nop
into
ret
dec
mov
dec
sbb
dec
and
pop
push
sub
cmp
push
aas
das
iret
das
xor
sub
ret
das
pop
lahf
sbb
lahf
xor
movsl
xor
nop
ss
cmp
adc
sbb
add
outsb
add
icebp
push
je
aas
pop
idivl
add
inc
add
sub
call
jne
shlb
mov
mov
filds
in
mov
mov
fwait
mov
mov
jp
push
adcl
mov
mov
xchg
fmul
xchg
lret
mov
sarl
xchg
adc
xchg
adc
lcall
out
jb
pop
js
inc
inc
mov
pop
inc
xchg
mov
push
pop
and
sub
out
jb
or
adc
dec
xor
push
xor
push
cmp
sti
pusha
mov
push
jle
push
mov
adc
xor
xor
cmpsb
aaa
in
icebp
ljmp
mov
inc
repnz
xchg
inc
xchg
push
cwtl
push
dec
jo
push
lea
xchg
pop
jl
push
sub
push
mov
mov
xchg
xor
aas
cmp
inc
out
inc
rorl
or
leave
or
jae
xor
fisttps
and
hlt
sub
push
into
add
cmpsl
pop
mov
std
mov
xorl
sub
mov
jo
bnd
nop
jbe
in
adc
jo
lea
in
adc
jo
mov
in
or
bnd
xchg
in
or
jo
test
push
pop
pop
push
push
jmp
pop
or
mov
call
aam
pushaw
add
xor
divb
mulb
sar
lock
lock
popl
adc
mov
test
dec
repnz
dec
and
push
and
aam
or
adc
mov
nop
into
dec
xchg
into
dec
adc
dec
sbb
iret
and
pop
pushf
sub
cmp
ds
iret
mov
iret
sub
das
pop
lahf
mov
movsb
xor
push
ss
cmp
stos
sbb
mov
outsb
xchg
icebp
jae
aas
fcomip
aas
add
inc
add
scas
or
int3
jb
int3
jne
shlb
cmp
adc
cmpsl
adc
or
fildll
inc
mov
fwait
adc
mov
add
xorl
adc
xchg
int3
xchg
lret
es
lret
cmp
sub
xchg
cltd
sbb
mov
sbb
mov
ja
inc
leave
lea
fiadds
push
xchg
mov
ficompl
insl
cmpsb
daa
insl
dec
je
dec
or
cwtl
adc
pop
push
xor
pushf
cmp
andl
push
add
push
mov
adc
xor
ljmp
ja
shlb
adc
inc
js
inc
xchg
sbb
push
cwtl
push
shrl
push
adc
xchg
movsl
jnp
push
mov
push
mov
pop
mov
xchg
xor
lds
and
and
les
jnp
or
stc
adc
cmpl
orl
dec
and
dec
and
jp
push
push
add
sub
mov
xorl
in
jo
icebp
jo
push
jbe
in
cltd
mov
jo
icebp
jo
adc
in
xchg
mov
jo
icebp
jo
adc
in
xchg
mov
jo
icebp
jo
or
mov
jo
icebp
jo
or
push
lea
push
outsl
pop
push
xorl
into
jo
into
lcall
xor
idivb
and
and
or
lock
inc
mov
dec
mov
or
dec
js
dec
and
and
pop
sub
sub
adc
ss
into
xchg
into
dec
cwtl
rorl
aad
sbb
pop
and
cmp
arpl
das
popa
ds
iret
cmp
sub
aam
pop
iret
cs
lahf
sub
xor
xor
adc
xor
adc
push
sbb
imul
idivb
add
inc
add
xor
call
jne
shll
mov
cmpsl
adc
xchg
pop
fildll
int
mov
js
mov
xchg
xorl
cwtl
pop
xchg
call
lcall
scas
inc
adc
hlt
cltd
adc
repnz
push
lea
fs
xchg
mov
pusha
pop
and
daa
insl
dec
cli
jno
or
push
adc
loop
xor
and
pop
mov
sub
cmp
mov
adc
xor
ss
std
jmp
xor
inc
fiaddl
sahf
inc
xchg
push
cwtl
push
pop
outsl
aad
das
fisubrl
cltd
insl
jbe
sub
push
cmp
mov
xchg
xor
dec
cmp
inc
repnz
fisttpll
or
leave
or
jg
xor
jmp
dec
and
dec
and
add
push
fiaddl
push
mov
mov
cmpl
in
xchg
mov
jo
icebp
jo
pushf
jne
in
pop
mov
jo
icebp
jo
cltd
jne
in
sbb
in
jo
icebp
jo
xchg
jne
in
sbb
jo
xchg
jne
in
push
mov
jo
icebp
jo
nop
jne
push
adc
push
cmc
pop
push
cmp
or
xchg
jmp
sar
data16
add
xor
mulb
int3
cli
and
nop
lock
mov
and
call
pop
dec
and
push
and
loopne
or
xor
nop
mov
xchg
into
dec
push
rorl
pop
push
sbb
pop
test
pop
cmp
cmp
iret
sub
cs
lahf
scas
sbb
and
adc
mov
adc
xchg
sbb
push
icebp
aas
jmp
aas
add
inc
add
mov
in
int3
jne
shll
inc
jp
adc
cmpsb
adc
sbb
fildll
push
mov
fwait
push
xchg
fwait
mov
lahf
mov
or
push
andl
test
push
pop
xchg
outsb
lret
xchg
lret
xor
cmp
xchg
movsl
pop
xchg
adc
adc
js
jb
out
jbe
inc
aad
inc
xchg
inc
xchg
mov
out
and
es
dec
xorb
lret
dec
movsb
adc
push
cmp
lea
xor
cmp
mov
adc
xor
ljmp
sub
xor
and
inc
test
inc
xchg
and
xchg
push
xchg
push
fildll
push
pop
insl
jbe
mov
xchg
push
mov
pop
mov
nop
xor
sarl
and
and
les
les
xchg
or
add
orl
dec
and
dec
and
xchg
push
pusha
add
cmp
in
in
ret
in
sbb
lock
and
in
movsl
xchg
jo
lock
pop
jne
in
mov
lock
sbb
sub
xchg
jo
lock
sbb
in
pushf
xchg
jo
lock
push
jne
push
cltd
push
push
push
jnp
push
cmpl
into
jl
into
ljmp
add
and
testb
and
push
lock
mov
mov
cmpsb
dec
mov
pop
outsb
pop
dec
test
and
and
data16
or
cvttps2pi
and
lds
ficoml
sbb
popa
and
pop
sub
aaa
bound
das
insl
cmp
iret
sub
sub
fldt
lahf
xor
mov
ss
cmp
cmp
sbb
push
icebp
aas
jno
aas
add
inc
add
inc
or
int3
add
int3
jne
shlb
lret
adc
adc
sahf
push
fildll
fldcw
fwait
mov
lahf
mov
xchg
mov
subl
mov
movsb
push
xchg
hlt
lret
mov
iret
cmp
xchg
sub
xchg
adc
cltd
adc
decb
mov
mov
jo
xchg
mov
insb
push
and
es
dec
push
jno
or
sub
dec
xor
push
xor
cmp
adc
xor
mov
push
mov
adc
xor
xor
shlb
cmpsb
cmp
inc
or
inc
xchg
stos
inc
xchg
push
xchg
push
outsb
aad
cmp
push
xchg
aaa
jp
push
inc
xchg
push
mov
mov
nop
xor
push
cmp
inc
and
jmp
enter
rdmsr
adc
orl
dec
and
dec
and
or
push
out
push
mov
in
dec
jmp
in
jo
lock
test
sub
xchg
jo
lock
movsl
je
in
sub
jo
mov
xchg
jo
lock
lahf
je
in
and
jo
pushf
je
push
pop
push
push
push
add
addl
into
add
jmp
add
test
xor
push
xor
and
pushf
and
mov
lea
sub
mov
popf
insl
pop
dec
or
and
push
and
in
or
push
sub
test
lds
pusha
xchg
into
dec
sub
dec
sbb
out
daa
pop
mov
pop
cmp
cmp
iret
int
iret
sub
shrb
pop
popa
sub
lahf
xor
xor
adc
cmp
ret
pop
adc
mov
outsb
icebp
out
jno
aas
div
aas
add
inc
add
movb
int3
mov
int3
jne
shlb
push
jns
adc
movsl
adc
and
fildll
pop
scas
mov
or
push
subl
test
sub
xchg
jp
xchg
lret
ds
lret
cmp
inc
inc
adc
xchg
mov
lea
cli
jne
inc
loope
inc
xchg
inc
xchg
mov
repnz
and
and
dec
or
mov
dec
xor
push
xor
mov
pop
mov
mov
aaa
push
mov
adc
xor
jmp
in
inc
aam
sub
inc
nop
flds
xor
cltd
xchg
push
jmp
aad
rcr
jbe
insb
jbe
mov
xchg
push
mov
pop
mov
xor
fnsave
and
and
outsl
dec
les
xchg
or
adc
xor
jge
dec
and
dec
and
xchg
daa
push
insb
add
inc
pop
mov
fwait
mov
or
sub
xchg
jo
out
jo
je,pn
in
mov
in
jo
out
jo
sub
scas
xchg
jo
out
jo
sub
stos
xchg
jo
out
jo
and
xchg
jo
out
jo
and
movsl
push
push
push
xchg
orl
into
pushl
xor
notb
and
and
mov
lea
mov
mov
and
dec
nop
pop
dec
and
and
jb
or
push
sub
cs
lds
out
into
dec
mov
dec
sbb
insl
and
pop
cmp
pop
cmp
cmp
jns
das
iret
push
xor
sub
sub
out
pop
lahf
inc
sbb
ss
ss
cmp
dec
pop
adc
es
outsb
and
jno
aas
jge
aas
add
inc
add
dec
pop
call
jne
iret
jne
js
adc
adc
stos
adc
stos
mov
scas
mov
nop
sahf
mov
sahf
mov
xorl
add
mov
xchg
add
xchg
lret
les
cmp
xchg
aaa
push
xchg
adc
adc
or
mov
mov
jl
xchg
mov
js
and
and
dec
or
adc
cli
push
xor
cmp
pop
mov
inc
mov
push
mov
adc
xor
xor
rclb
shll
inc
push
flds
mov
xchg
push
xchg
push
jno
aad
inc
fsubrs
mov
jbe
inc
jns
push
push
xchg
push
mov
xor
xor
arpl
and
and
cmc
inc
les
sbb
or
xchg
push
xor
add
and
sbb
push
repnz
lret
pop
mov
and
in
scas
xchg
jo
out
jo
mov
sub
xchg
jo
out
jo
mov
sub
xchg
jo
out
jo
scas
jae
in
xor
jo
stos
jae
in
cs
jo
out
jo
test
push
push
sub
push
cmc
push
adc
jbe
jmp
add
mov
xor
sbb
and
clc
and
lods
and
mov
repnz
mov
xor
insb
pop
dec
pop
pop
dec
and
push
and
hlt
and
sub
mov
nop
into
pusha
xchg
into
dec
cmp
dec
sbb
clc
pop
daa
pop
enter
lds
das
jmp
xor
sub
shrl
pop
bound
lahf
les
lahf
xor
xor
adc
cmp
fstl
adc
mov
data16
icebp
aas
push
hlt
aas
add
inc
add
rolb
call
jne
iret
jne
pop
js
adc
movsl
adc
pusha
adc
stos
mov
scas
mov
inc
sahf
mov
sub
xorl
cmp
leave
xchg
lret
inc
cwtl
lret
cmp
insb
inc
adc
mov
mov
mov
add
inc
sti
mov
addb
mov
push
and
and
and
dec
sbb
or
aas
cmovle
push
xor
inc
ss
mov
pop
mov
push
mov
adc
xor
xor
sarb
out
xor
lahf
cmp
inc
xchg
fadds
mov
push
xchg
push
cmp
iret
xlat
push
xchg
ret
push
into
xchg
push
mov
pop
mov
xchg
sub
int
inc
lret
testl
adc
rorl
or
sti
data16
sahf
es
push
jge
push
dec
pop
pop
mov
cmpsl
mov
add
subl
in
jo
out
jo
lods
jae
sub
test
jo
out
jo
mov
test
jo
out
jo
mov
test
jo
out
jo
mov
test
jo
out
jo
mov
push
push
push
xchg
pop
push
addl
orl
test
inc
sar
cbtw
add
xor
mulb
clc
and
es
mov
mov
mov
mov
insb
pop
dec
adc
and
hlt
jle
or
or
nop
pop
nop
into
repnz
into
dec
mov
mov
daa
pop
sbb
sbb
inc
pusha
cmp
mov
insl
iret
push
xor
sub
imul
sub
lahf
lods
icebp
fnsave
sub
je
inc
cmp
fsin
push
and
outsb
push
mov
cwtl
jo
aas
mov
inc
add
pop
out
stos
int3
push
ljmp
stc
ja
adc
inc
push
fildll
push
jmp
fwait
in
fnstenv
loop
push
cmpl
mov
or
test
clc
jo
cmp
sarb
adc
sbb
mov
mov
mov
jae
inc
xchg
mov
test
insl
push
and
dec
pop
outsl
dec
or
inc
cmovle
push
xor
inc
ss
mov
push
mov
push
mov
adc
xor
xor
shlb
out
xor
mov
fadds
ret
push
xchg
push
jge
aad
push
xlat
push
xchg
dec
js
push
pop
xchg
push
mov
mov
mov
outsl
and
and
add
or
or
orl
dec
and
dec
and
and
push
call
xlat
push
mov
sub
out
in
mov
out
jo
shlb
inc
test
jo
out
jo
mov
test
jo
out
jo
mov
test
jo
out
jo
mov
sub
test
jo
out
jo
mov
push
push
aaa
push
push
push
sbb
sbbl
into
sbb
jmp
add
shrb
es
and
mull
lock
lock
icebp
mov
mov
inc
inc
mov
mov
pop
dec
and
and
dec
and
add
or
or
lds
js
into
dec
inc
rorb
jg
sbb
pop
int3
sub
aad
cmp
or
das
iret
in
iret
sub
shrb
pop
jns
pop
lahf
rcrb
lahf
xor
xor
adc
aaa
adc
fistl
outsb
mov
outsb
icebp
push
jo
aas
psllq
add
inc
add
fiadds
int3
jne
into
jne
push
movsb
adc
cmp
fildll
ja
mov
and
push
addl
mov
adc
xchg
xchg
enter
xchg
lret
cmp
pop
aas
adc
sahf
xchg
adc
pushf
mov
adc
stc
mov
push
inc
xchg
xchg
or
insl
and
movsb
outsb
dec
or
enter
mov
pop
int3
xor
mov
push
xor
push
mov
btr
xchg
in
xor
shlb
shlb
inc
test
inc
xchg
dec
inc
xchg
push
xchg
push
add
push
xchg
aad
xchg
push
loop
push
mov
push
mov
lea
cmc
xor
inc
les
lds
xor
or
orl
dec
and
dec
and
sub
add
push
push
mov
xchg
mov
sbbl
in
jo
in
jo
mov
jl
cltd
xlat
mov
addl
in
movb
inc
jb
in
ret
test
jo
in
jo
cmp
test
jo
in
jo
cmp
push
mov
pop
push
andl
into
lcall
xor
xor
lods
xor
and
and
cmp
lock
inc
xor
mov
cmp
dec
test
dec
and
and
sub
or
lds
lds
bound
or
jp
fsubs
pop
pop
cmp
xchg
cmp
iret
xchg
iret
xor
pusha
shrb
pop
ljmp
pop
lahf
cmpsl
out
iret
pop
mov
ss
aaa
adc
sbb
outsb
mov
icebp
pop
outsl
icebp
aas
data16
add
inc
add
push
add
int3
callw
iretw
jne
adc
adc
clc
adc
stos
push
lods
mov
sbb
mov
gs
cmpl
xorl
test
xchg
je
xchg
lret
fcoml
cmp
xchg
dec
mov
push
and
adc
and
enter
inc
jg
inc
xchg
push
and
mov
dec
or
push
int
je
dec
xor
push
xor
stos
jae
mov
push
xor
mov
xor
mov
nop
sub
aad
pop
sarl
inc
xor
lea
cmc
inc
and
test
std
rcr
hlt
pop
rorl
mov
ret
popf
mov
jecxz
cmp
and
test
stc
fs
faddl
mov
out
aam
add
adc
push
jg
into
pop
lds
movsb
test
mov
dec
fisttps
sbb
xor
pop
xor
cs
pusha
add
add
sub
jl
dec
movsb
jo
lcall
cmp
xlat
std
negl
hlt
adc
cmp
add
mov
lea
rorl
pop
add
aad
movsl
jg
adc
jl
dec
mov
das
mov
stos
test
cmc
lret
adc
push
insb
mov
mov
or
mov
sbb
sbb
mov
daa
shr
xchg
adc
xchg
cmc
sub
pop
and
and
insb
shrl
fisttps
inc
xchg
lcall
xchg
loop
jno
aam
add
in
adc
inc
ljmp
pop
add
mov
out
add
addb
popf
aad
aaa
jmp
mov
sub
sub
dec
mov
loopne
jp
dec
and
sub
push
dec
movsl
or
push
cmp
ja
push
das
or
hlt
inc
mov
fists
mov
stos
mov
int3
rcl
and
idivb
scas
aad
jg
pop
add
adc
mov
call
cld
or
mov
lods
or
xor
sub
dec
clc
mov
movsl
fiaddl
ficoml
dec
jno
mov
fstl
hlt
jb
aaa
sbb
fidivs
cmp
loopne
ss
xchg
mov
add
lcall
sub
out
lods
inc
xor
out
enter
ss
xor
mov
imul
fs
xorb
lea
jmp
sbb
pusha
pop
mov
in
inc
xor
imul
loope
ret
jge
xchg
daa
sbb
push
hlt
jno
std
test
ds
out
sub
out
jo
dec
jno
in
rolb
jo
dec
jno
in
iret
sub
loope
jo
dec
jno
in
int3
sub
fsubrp
jo
inc
jno
push
leave
push
push
push
stos
push
push
subl
into
fmul
jmp
add
push
addr16
mov
mulb
lock
and
mov
mov
mov
inc
mov
inc
push
dec
mov
dec
and
and
sub
or
jb
nop
into
or
dec
sbb
xchg
sbb
pop
cmp
cmp
popf
cmp
iret
ja
iret
sub
pop
or
pop
lahf
fs
lahf
xor
xor
fdivs
ss
ss
insl
adc
fs
adc
outsb
dec
outsb
icebp
cwtl
outsb
icebp
aas
mov
inc
add
jo
call
jne
int
mov
mov
adc
stos
cmp
lods
mov
mov
mov
ret
sbb
xorl
xchg
and
xchg
lret
call
lret
cmp
xchg
pop
adc
mov
mov
movsb
jb
inc
mov
xchg
xchg
pushf
push
and
and
ss
dec
or
pop
or
xor
pop
xor
mov
imul
mov
sbb
xor
out
xor
sarb
in
xor
xor
inc
xchg
fiaddl
push
xchg
push
xchg
push
push
jg
push
outsb
mov
pop
mov
mov
les
or
push
cwtl
addl
sub
push
add
push
add
push
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
