clc
pop
stc
cmc
frstor
sti
mov
jl
mov
ljmp
aad
fwait
je
mov
ret
in
lea
dec
pop
xor
push
rcrl
xor
stc
shl
push
loope
dec
add
jbe
cmc
andl
push
xor
mov
lock
addr16
lret
push
cmp
pop
popa
xor
jbe
aam
add
sbb
xchg
in
repz
jmp
pop
adc
jb
add
pop
and
push
hlt
mov
loope
cmp
scas
out
xor
js
push
jbe
push
lea
push
das
lds
adc
xchg
add
xor
push
insl
mov
call
inc
jmp
imul
and
adc
adc
xor
loope
aas
xchg
shrb
xor
cmpb
lds
push
push
adc
mov
aad
in
push
mov
js
and
pop
mov
sbb
inc
dec
insl
push
sub
adc
sbb
add
xchg
push
mov
daa
aad
in
rcll
adc
addr16
popa
out
outsb
xchg
jg
das
or
push
iret
aam
mov
and
int
jb
inc
mov
out
mov
jns
inc
fisttps
push
cmc
mov
xchg
aas
jmp
dec
in
mov
pop
cs
mov
inc
inc
xchg
cmp
cs
stc
aas
adc
test
or
rcrb
sti
ret
sub
aaa
outsb
loope
mov
in
inc
pushf
ficoms
fwait
push
fists
jne
lea
fidivs
mov
mov
add
add
jg
and
lret
test
movsb
mov
cli
leave
inc
jg
imul
cld
mov
pop
into
iret
inc
outsl
xchg
mov
or
xor
fcomi
pop
sub
repnz
cmp
loop
pop
cmp
pop
jmp
std
stos
xchg
mov
add
xor
mov
arpl
cmp
divl
movsl
cmp
sbbb
fdivr
outsb
out
pop
and
sbb
call
pop
movsl
repz
test
or
ja
fs
testl
mov
jp
fidivs
sbb
xor
mov
add
repnz
ja
xchg
test
add
int
ljmp
je
int
jecxz
dec
mov
cld
stos
jp
pop
add
jns
ljmp
out
or
jecxz
addb
push
int
fimull
out
arpl
pop
popf
jle
dec
pushf
data16
mov
dec
xchg
jno
imull
jmp
lret
pop
std
or
sub
insl
outsb
fisubrs
movsb
scas
test
mov
ds
xchg
lock
xchg
stos
cmp
dec
nop
dec
mov
inc
aad
scas
outsb
movsl
xor
lods
mov
xchg
fwait
lret
fcompl
jle
jb
or
setae
ror
call
addr16
out
stos
jae
imul
xchg
xor
pop
iret
clc
lea
fnsave
andl
lods
fidivs
adc
out
lret
mov
dec
outsb
aad
stos
or
cmp
mov
andb
js
add
jmp
movsb
repz
int
sub
and
stos
push
pushf
in
aaa
cmp
push
outsb
pop
icebp
lock
loope
lock
out
lea
inc
add
lret
jae
and
imul
pop
push
push
adc
movsb
cli
cmc
add
push
inc
push
adc
mov
mul
into
ljmp
lds
sub
and
xor
lea
inc
xchg
jmp
leave
and
fwait
push
xchg
notl
test
repnz
aaa
daa
stc
mov
fisubs
ret
and
jl
iret
lret
hlt
mov
imul
adc
xlat
jge
fsts
test
mov
sti
xlat
cltd
mov
jge
mov
nop
int3
rcrb
hlt
mov
inc
pop
insl
out
dec
xchg
scas
push
xor
jmp
pop
outsb
mov
push
aaa
cwtl
xchg
out
mov
loope
dec
adc
mov
scas
faddp
mov
add
adc
jns
mov
xchg
adc
es
jle
mov
cltd
fiadds
push
inc
inc
push
push
mov
inc
je
jmp
aad
int3
testb
add
adc
or
aaa
or
or
movsb
jmp
loop
scas
int
testb
and
pop
popa
pop
add
adc
adc
dec
pop
inc
imul
adc
xchg
or
mov
out
jne
sbb
or
loop
adcb
inc
xchg
sti
pop
xchg
fsubrl
sub
out
push
sbb
jno
push
jp
mov
xor
xor
loope
scas
jmp
mov
pop
and
jne
adc
popa
pop
sarl
int
andl
jg
fadds
mov
ljmp
repnz
bound
sub
or
inc
ret
mov
cmc
mov
push
or
out
push
xchg
xchg
mov
repnz
push
in
fadds
or
sub
xor
jecxz
and
mov
xchg
hlt
or
adc
mov
sbb
adc
jb
in
mov
xchg
mov
and
mov
cmp
sbb
dec
xlat
pop
add
add
or
das
inc
popa
push
xchg
inc
xor
mov
dec
das
cmpsl
shl
mov
rcl
add
mov
jbe
cli
icebp
push
dec
sub
das
mov
cmp
add
ss
jb
fidivrl
dec
push
push
incb
xchg
xor
sbb
or
push
adc
test
push
xchg
shl
push
insb
push
inc
jne
jno
jae
sub
inc
testb
pop
scas
or
push
mov
stos
adc
dec
add
xor
adc
in
inc
cltd
sbb
ds
xchg
out
scas
mov
dec
add
cmc
mov
arpl
in
lahf
mov
fldcw
pop
jl
incb
sbb
adc
add
arpl
xchg
mov
mov
add
or
sub
fcmovnbe
cmp
aam
rolb
clc
lret
mov
xchg
jae
pop
mov
lahf
out
xchg
loop
clc
cmpsl
jbe
dec
adc
lahf
push
outsb
fadds
xchg
test
cli
rclb
cmp
idiv
cmp
xchg
pop
adc
cmpb
rol
test
mov
mov
int
and
std
xlat
inc
xor
cmpsl
aaa
jle
push
xchg
andb
sub
lret
adcl
mov
xchg
mov
xchg
aam
dec
std
cmp
jle
sbb
jge
mov
lds
sbb
lods
repz
filds
xor
movsl
lods
cmp
sub
add
in
jg
cwtl
imulb
xchg
or
xchg
popa
jge
jno
dec
mov
pop
mov
push
lcall
cmpsl
mov
mov
scas
ja
popl
dec
and
xchg
adc
jge
mov
insl
mov
pop
pop
dec
icebp
cld
mov
lret
sbb
mov
test
xchg
sbb
mov
je
lds
mov
lcall
andb
aam
jle
fistpl
sub
arpl
int
jle
and
sti
xchg
mov
inc
fcmove
ficoms
mov
push
lods
jge
repnz
leave
sbb
je
rorb
pop
push
push
dec
adc
popf
cmp
out
shlb
push
xchg
cmp
mov
out
jo
notb
ret
popf
xor
test
cmpsl
xchg
dec
cltd
jecxz
cmp
insl
sbb
fcmovne
inc
cmp
iret
sbbl
addr16
ret
xlat
adc
mov
pop
cmp
addr16
bound
pusha
add
sbb
dec
xchg
mov
xchg
push
mov
in
divb
jnp
xor
cmp
shrb
xlat
sbb
les
and
fisubrl
ja
mov
cmpsl
sbb
add
repz
dec
jecxz
jle
sub
cmp
mov
fsts
pop
mov
push
inc
std
aam
push
and
jnp
mov
sbb
mov
xor
dec
dec
pop
loopne
jl
adc
pusha
fistpll
les
data16
pop
inc
icebp
mov
js
xchg
jns
adc
cmp
add
test
popf
cmp
ret
test
xchg
and
daa
xchg
gs
mov
sub
and
scas
add
fdivr
scas
sti
push
bound
push
lock
pop
std
cmp
addr16
inc
shll
pop
ret
insb
push
jg
mov
shr
ret
mov
sar
push
mov
insb
add
sbb
sub
adc
fiadds
push
js
add
shll
das
mov
sbb
jnp
aaa
or
add
gs
insl
imulb
jns
push
icebp
mov
pop
stos
mov
call
xor
ret
cld
and
rcr
dec
insl
sbb
adcb
sub
mov
sbb
enter
nop
push
cmp
data16
adc
lods
cmc
push
dec
stc
stc
ret
pusha
sbb
lahf
std
adc
adc
add
xchg
test
dec
dec
or
xor
dec
sub
rcll
enter
and
mov
sub
movsl
mov
test
mov
or
add
push
fstpt
adc
jnp
movsb
or
add
and
hlt
push
js
jge
lahf
sarb
test
inc
and
jnp
pop
mov
in
adc
out
vcvttsd2si
jbe
dec
repz
popa
sti
xchg
push
out
ret
lods
cmpsb
lcall
bound
xchg
insl
rolb
cltd
mov
inc
rcrb
outsb
jb
mov
divl
pop
fcmovb
insb
inc
sub
sub
cmp
mov
add
or
xor
subl
push
sbbb
test
xchg
cmp
adc
inc
jo
dec
sti
loopne
ss
lock
fs
js
mov
addps
orb
vpmaxub
add
stos
and
pop
pop
mov
lods
sub
add
subl
adc
jbe
and
test
into
fsts
xchg
cmp
lret
fstp
mov
xor
xchg
fs
bnd
add
jne
in
aas
roll
inc
in
xchg
jmp
clc
jb
rclb
je
jge
sbb
mov
jecxz
mov
imul
sub
and
cmp
mov
repnz
popa
jne
jmp
mov
fldt
iret
pop
shll
mov
sbb
mov
sarl
jecxz
mov
mov
clc
add
sub
in
cmp
stc
loope
leave
push
shr
sbb
imul
mov
mov
test
dec
lea
out
jo
mov
add
cmp
or
dec
jne
xchg
das
fwait
bound
cmp
and
cmp
in
out
pop
mov
popf
inc
push
xchg
bound
incb
lock
mov
lret
sbb
clc
aad
xchg
inc
jbe
ds
push
mov
pop
icebp
xor
fsubl
aas
adc
sbb
inc
push
int3
loope
in
sub
hlt
pop
mov
jno
test
fdivp
and
mov
out
addr16
push
aas
jns
lcall
test
incb
inc
fsubrp
xor
jecxz
xor
jg
sbb
adc
xchg
outsb
stos
imul
push
push
or
jmp
fsubr
sbb
fcompl
inc
lods
mov
ret
jg
outsb
xchg
clc
and
and
das
and
sbb
loop
xchg
and
pop
es
mov
aam
mov
pop
adc
adc
insb
ja
mov
pushf
adcb
ss
and
inc
add
mov
xchg
cwtl
push
imul
inc
roll
lret
sar
ret
xchg
das
add
xchg
stc
xor
gs
sbb
push
and
push
andl
inc
jecxz
push
stos
push
das
subb
xor
xchg
sub
jmp
xor
nop
cmp
or
xor
inc
dec
loope
fisttpll
jp
push
pop
lea
xor
mov
sahf
aam
int3
imul
inc
push
enter
ds
adc
pop
push
dec
mov
cltd
adc
test
dec
adc
inc
fs
mov
mov
icebp
inc
mov
add
test
es
aad
test
xorl
cwtl
outsb
or
nop
add
mov
pop
jmp
in
ja
jecxz
mov
add
out
sbb
imul
jg
je
pop
int3
in
mov
in
sub
clc
movsb
sbb
pop
dec
outsl
pop
fcomps
addb
stos
mov
add
out
stc
je
adc
in
mov
fildll
into
sbb
mov
and
mov
roll
jno
mov
and
sub
pop
xor
dec
fs
sub
sub
ja
sub
xlat
iret
or
fwait
dec
pop
xchg
push
mov
mov
cs
leave
in
xchg
sub
or
cmp
stos
add
dec
sbb
cmp
sbb
add
pop
dec
rcll
repz
pop
jge
mov
loopne
imul
into
mov
inc
cli
pop
push
ret
and
test
dec
out
out
aas
int
add
je
negl
rcll
mov
out
cltd
icebp
mov
ja
clc
add
cmpsb
and
push
dec
aas
inc
stos
jge
jle
mov
stc
dec
cmp
in
mov
addr16
dec
mov
loop
ljmp
dec
dec
add
xor
adc
mov
xchg
adcb
in
imul
pop
pop
dec
jo
mov
pop
and
in
xchg
pop
cmp
lea
cmp
call
sub
repz
cmpsb
int
bound
pop
and
outsb
fcmovbe
les
cmp
inc
pop
fcmovnb
movsb
out
shr
bound
mov
xchg
filds
jmp
xchg
xor
in
shrl
test
stos
xor
adc
orb
jg
inc
jo
add
outsl
xchg
jb
fcomps
jle
push
dec
dec
pop
xor
mov
push
adc
mov
test
add
pusha
jge
sub
test
dec
call
mov
leave
xchg
lods
aas
mov
lcall
nop
in
jae
movsb
mov
enter
lds
or
adc
pop
xchg
fldcw
js
jbe
add
je
cmp
jl
movl
aas
lea
push
push
sahf
cld
mov
cs
pop
sbb
mov
cmp
cmp
mov
sahf
cmp
fdivrl
and
dec
pop
outsl
cbtw
pop
adc
pop
or
rcrb
insl
sub
mov
inc
dec
fnstsw
inc
cs
jne
push
pop
and
loopne
aaa
xor
fistpll
jp
mov
fwait
mov
mulb
sub
daa
jbe
xchg
stc
pop
mov
fisubrl
xchg
in
pop
adc
fs
xchg
adc
and
xchg
mov
lea
sub
loop
mov
int3
rolb
pop
xchg
div
out
das
js
adc
int
jo
out
add
cmp
mov
add
mov
lods
xchg
xor
mov
outsb
sbb
sub
ret
mov
test
inc
cmp
inc
test
cmp
test
in
movsb
out
and
ret
es
sahf
or
add
imul
mov
jp
aam
fwait
sbbb
ror
jbe
aas
in
sarl
push
add
jl
or
jo
je
stc
push
jle
pop
dec
aam
gs
mov
sbb
xor
sub
in
sahf
pop
adc
mov
adc
fld1
adc
jne
mov
ds
ja
mov
pop
sub
sti
shrl
or
push
jnp
mov
xchg
cld
push
xor
outsb
ds
imul
xor
testl
mov
jmp
into
popa
in
sbb
scas
adc
inc
lock
mov
gs
stos
mov
insb
sahf
mov
les
inc
xchg
cmp
and
push
sbb
add
push
or
xor
pusha
test
or
js
mov
fiaddl
jo
push
adcb
inc
and
jo
or
dec
out
mov
test
cli
mov
mov
mov
and
jo
div
pop
xchg
lds
shrl
lret
mov
cwtl
pushl
in
cmc
loop
pop
movsl
ret
inc
outsb
leave
daa
adc
mov
add
pop
or
adc
mov
ss
and
stc
xor
jmp
mov
shr
pop
pop
mov
cli
inc
xor
inc
aad
hlt
aaa
outsl
cs
inc
xchg
outsl
dec
jmp
xchg
cli
xor
pop
or
addl
mov
hlt
fdivr
jmp
ljmp
mov
and
popa
mov
scas
fwait
rcrl
pushf
movsb
lods
push
mov
and
hlt
push
stos
gs
adc
jnp
in
dec
std
loopne
dec
scas
pusha
jae
movsl
aad
decl
cmp
icebp
loopne
icebp
inc
out
inc
adc
xor
aas
stc
fs
push
sarl
out
pop
and
add
or
inc
movsb
out
lods
and
lret
aaa
lods
adc
loop
rorl
add
add
fdivl
stos
cmp
jmp
jg
sbb
mov
mov
rcrb
push
shlb
jo
out
dec
popa
call
jne
imul
outsb
dec
pusha
inc
and
jmp
mov
push
mov
in
pop
gs
pushf
jmp
cmc
imul
adc
push
push
xor
icebp
flds
movb
leave
insl
ljmp
js
pop
sub
cmp
std
gs
sbb
aaa
adcb
imul
fistl
fldenv
sahf
xchg
pop
rclb
pop
mov
stc
stc
cmp
mov
stos
fs
es
pusha
add
lock
sub
loop
push
cmp
adc
les
add
mov
imul
jmp
movsb
pop
push
xchg
inc
pusha
notb
divb
dec
scas
mov
cmovb
aaa
scas
clc
testb
mov
xor
sahf
ja
out
cs
enter
ret
jg
out
fnstcw
or
xchg
inc
pop
mov
dec
daa
mov
add
int3
bound
sub
jbe
popa
call
jl
mov
or
cmc
sbb
out
xor
adc
movsb
adc
mov
sbbl
xchg
mov
incl
or
adc
adc
movsl
leave
sahf
dec
or
jmp
dec
out
cmp
mov
sbb
dec
push
iret
jnp
data16
inc
in
sub
insb
jl
aas
mov
ljmp
add
ja
sti
call
push
pop
ljmp
cmc
add
add
rclb
mov
or
mov
test
push
js
and
and
jb
or
movsb
jb
sahf
jno
inc
cmpsb
out
xchg
rcl
and
fcomps
icebp
mov
adc
pop
popf
and
add
mov
in
ja
mov
mov
cmp
dec
and
daa
fdivs
pushf
ja
lahf
adc
mov
sub
cmp
cltd
pop
jns
dec
xor
ljmp
pusha
dec
mov
int
inc
aas
test
cmc
xor
cli
or
and
sahf
les
dec
sbb
mov
movsl
or
fstps
pop
fiaddl
mov
iret
pop
sub
jmp
rorb
sbb
lock
hlt
inc
enter
xor
lret
fildl
fs
push
jo
js
out
xchg
out
aad
lods
outsb
dec
push
std
lret
out
xchg
fistpl
sbb
jnp
sub
out
push
adc
mov
push
jno
pop
inc
pusha
rol
stos
mov
filds
jmp
jbe
mov
sub
ljmp
mov
adc
ret
mov
loop
xchg
dec
jle
sub
pop
mov
jnp
xchg
inc
loope
lret
xor
ret
sbb
push
jecxz
inc
cmp
hlt
add
addr16
mov
scas
mov
jl
lret
aad
lock
and
iret
pop
out
cmp
sbb
cmpsl
lods
addb
or
and
pop
xchg
arpl
xchg
pop
push
xor
pop
and
mov
xor
inc
aad
popl
cld
mov
es
pop
lods
loope
mov
dec
hlt
mov
or
push
loope
in
mul
cmp
in
int
sarl
les
leave
sbb
mov
cmc
js
int
sub
push
xchg
mov
and
iret
hlt
xor
xchg
xor
scas
mov
loope
cmc
sbb
cmc
pop
pop
daa
fwait
adc
repz
sahf
push
mov
push
inc
push
sahf
test
and
mov
cltd
daa
mov
jle
cmp
std
pushf
mov
stos
mov
pop
fnstcw
enter
cmovno
push
int3
xrelease
js
sbb
pop
mov
scas
inc
bound
jl
push
fidivl
mov
adc
sbb
push
push
loopne,pt
or
dec
fs
pop
or
pop
jle
hlt
add
repz
and
aam
push
lock
out
stos
movsl
int
mov
jg
loopne
imul
inc
inc
and
nop
hlt
cli
daa
cmp
sbb
fstps
xchg
xchg
fisubrs
adc
and
add
lret
sbb
mov
lcall
aad
push
pop
inc
movsb
lock
notb
aad
or
leave
inc
mov
imul
scas
push
adc
cmp
sahf
imul
scas
outsl
jbe
jnp
dec
out
leave
pop
mov
add
xchg
pop
adcl
outsl
scas
lcall
xchg
sub
sub
mov
and
pop
xor
mov
out
pop
jg
cmp
mov
or
inc
or
sbb
xor
cmp
sahf
sbb
and
daa
mov
or
ljmp
cs
and
shlb
mov
sbb
ret
add
cmp
lock
push
aaa
cwtl
mov
pop
fcoms
adc
jb
lds
cmpsb
cmp
push
dec
std
add
mov
or
sbbb
out
and
sbb
imul
lods
mov
rol
fisttpl
mov
cmp
stos
and
inc
add
fisubrl
push
cli
sub
or
mov
sub
sbb
imull
xor
or
gs
mov
lahf
js
push
xor
int3
xor
mov
and
iret
inc
fs
pop
mov
aam
sbb
out
loop
fadds
movsb
dec
pop
je
cmp
inc
sbb
adc
les
dec
mov
jb
jo
leave
sbb
jb
fldt
mov
xchg
dec
push
into
push
ret
xchg
cs
push
fstps
sbb
pop
inc
cld
mov
pushw
cmp
pop
pop
adc
inc
mov
xchg
sbb
sbb
ds
dec
popf
int
outsb
ja
hlt
stc
or
pop
adc
lods
mov
std
imul
aad
popf
jp
and
mov
int3
aaa
mov
fstl
cmp
pop
outsb
or
rcrl
pop
inc
arpl
and
aam
loop
inc
dec
int
jo
shrb
div
test
push
divl
sbb
push
cmp
loop
mov
and
repz
mov
push
mov
or
inc
jno
sub
cli
inc
push
test
push
xchg
nop
enter
sub
mov
bound
loopne
adc
adc
in
pop
pusha
sahf
push
lret
and
xchg
out
cld
pop
jg
test
data16
stos
int3
mov
jg
enter
rcrl
cmpsl
jl
dec
call
push
test
aaa
adc
int
int3
std
mov
sarl
xor
in
push
cltd
cmpsb
xlat
aad
add
sahf
push
lahf
and
loope
lea
xor
xchg
xchg
sbb
lret
mov
test
cltd
mov
out
outsb
enter
cli
insb
outsb
loop
xchg
test
clc
cmc
pop
bound
dec
cs
cld
in
mov
xlat
mov
mov
push
sub
xchg
lahf
dec
jge
mov
or
mov
orb
xor
loopne
xchg
fdivrp
fnstcw
pop
jecxz
stos
repnz
cmpsl
outsb
cmp
sti
xor
inc
cmp
cltd
fs
std
cld
std
cmpsl
lock
lea
or
xchg
push
push
mov
mov
gs
mov
mov
adc
daa
jnp
mov
fld
scas
repz
cmpsl
cmp
push
sbb
scas
icebp
test
pop
push
ret
jmp
sbb
pop
cmp
pop
loop
movsb
and
lea
std
push
data16
jp
mov
je
mov
cmp
xchg
add
mov
inc
xchg
xor
movsb
xor
outsl
mov
movsb
int3
ja
jle
or
in
cs
iret
or
dec
lods
in
cmp
in
pusha
sbb
pop
jmp
cmp
mov
stc
mov
pushf
or
sets
push
xor
mov
pop
daa
cmp
sub
cmp
sub
scas
addr16
aad
mov
cmc
sbb
popf
pusha
xchg
sahf
mov
jno
mov
xchg
pusha
jmp
call
mov
jmp
mov
ss
shll
loop
sub
stc
jae
out
sahf
pushf
jne
jbe
mov
push
sbb
in
pop
sub
dec
and
repz
xor
jg
es
mov
add
enter
fs
and
xchg
pop
sub
aas
mov
lcall
popa
movsl
mov
pop
push
push
lea
pop
sub
sbb
insl
jne
das
sub
dec
je
add
dec
jg
push
js
push
and
mov
inc
sbb
xor
in
adc
mov
inc
call
cltd
cltd
aaa
and
aam
scas
ret
icebp
int3
fs
in
filds
in
lcall
push
or
outsl
cmp
test
push
outsb
fldcw
mov
leave
ds
pop
fcom
insb
lods
out
add
mov
cmp
ljmp
dec
lods
xchg
cmp
lock
lods
pop
enter
frstor
loop
ss
mov
sub
cmp
adc
sub
enter
or
sub
movsb
pop
dec
jmp
jecxz
pushf
dec
lods
out
rcrb
lea
aam
lret
xor
test
movsb
sbb
or
inc
das
fiadds
aad
bound
jp
xor
push
cmp
pop
cmp
iret
pop
sbb
or
out
mov
jae
xor
nop
mov
pusha
fisttps
sub
cmp
scas
jmp
inc
inc
jge
pop
mov
lds
inc
lahf
popl
pop
outsl
adc
xchg
mov
lods
dec
inc
inc
mov
adc
loopne
subl
mov
gs
adc
dec
pushf
idivl
xchg
pop
in
lcall
add
sbb
xchg
movsl
push
inc
inc
test
aaa
sub
push
push
jno
push
add
and
sahf
mov
mov
or
stos
mov
xchg
shr
mov
fisubs
xchg
stos
xchg
fstpl
push
pushf
lods
int3
lret
or
pop
xchg
pop
idivb
fidivrl
sub
psubusb
mov
fidivs
std
or
mov
mov
and
xchg
sbb
cmp
into
xor
cwtl
jecxz
xor
mov
fisubrs
daa
push
push
sahf
and
fcomps
sub
xor
or
in
push
mov
inc
xchg
dec
mov
and
dec
pop
fsubs
in
je
push
push
dec
cld
std
sub
adc
fbld
out
icebp
add
xchg
sti
lahf
ret
add
aad
std
enter
xchg
cmp
scas
xor
jl
pop
ljmp
nop
xor
mov
cmp
add
enter
adc
imul
fistpl
adc
sub
mov
fwait
mov
mov
nop
and
cmp
mov
addr16
popf
xlat
and
stos
inc
sbb
push
xchg
mov
scas
adcb
insl
mov
je
lea
mov
jnp
sub
cwtl
inc
lock
cltd
loope
adc
lock
dec
aam
mov
mov
push
pop
dec
cmpsl
lret
inc
xor
xchg
and
into
sub
std
lret
fistpl
jnp
pop
movsb
mov
dec
xchg
push
jo
fsubrl
lods
loope
lods
sub
sti
lock
icebp
repnz
mov
lock
aaa
pusha
dec
ffreep
xorb
mov
sbb
pop
aad
fcomi
inc
push
push
mov
add
ret
jbe
mov
or
pop
cmc
imul
leave
jns
aad
ret
mov
xchg
sub
outsb
js
mov
push
mov
int3
dec
xor
fstpt
inc
sub
xchg
icebp
mov
or
sub
pop
cmp
dec
repz
push
mov
adc
mov
insl
dec
cld
push
add
add
mov
xor
rcl
shlb
test
repz
and
jmp
mov
shlb
icebp
cmpsb
imul
lods
dec
sbb
or
or
sub
xchg
fs
fwait
frstor
push
shrl
insb
dec
fstpl
mov
pusha
dec
test
icebp
out
cltd
or
push
jmp
in
sbbb
fwait
pusha
sbbb
mov
std
dec
sti
and
mov
stos
lock
adc
fcoms
pop
sti
insl
xchg
out
fisubs
mov
xchg
adc
pop
add
xor
jns
divb
mov
insl
push
insb
in
or
fstpl
cmp
adc
push
jo
cmp
mov
xchg
andl
enter
ret
addl
ficoms
mov
flds
fldl
xor
sub
xor
and
jmp
mov
into
sbb
add
iret
subl
ret
or
fidivrs
scas
dec
data16
test
pop
cmp
add
scas
fimull
leave
jle
add
xchg
movsl
xor
fadd
jno
sbb
xchg
in
rorb
ds
cwtl
ds
fwait
push
test
ljmp
inc
inc
lcall
mov
rclb
adc
jo
push
cmp
fbstp
sbb
test
cli
lret
cli
int3
lea
leave
mov
in
inc
mov
aaa
jbe
xor
sbb
sub
xchg
cmp
sbb
daa
add
mov
pop
sbb
push
dec
jae
sbb
pop
cmp
pop
adc
inc
sbb
or
pop
ja
jecxz
pop
adc
cmp
incl
ds
imul
pop
and
out
pop
push
xor
jne
notb
lods
sub
icebp
repnz
lods
jne
inc
adc
loopew
jnp
std
pop
cmp
add
add
ds
cmp
inc
cmp
mov
inc
ret
or
rcrl
pushf
mov
je
popf
sbb
int
sbb
lods
jno
adc
cli
fiaddl
out
mov
sbb
out
push
cmpl
inc
mov
xor
stos
idiv
lds
insl
cmp
jmp
add
pop
test
rcl
movsl
mov
fs
mov
int3
aas
xchg
pusha
push
and
push
outsb
int3
sti
xor
loope
cli
clc
pop
cld
adc
ret
negb
pop
inc
lcall
mov
popf
mov
fimuls
cld
xchg
lahf
cmc
insb
xchg
jns
push
xchg
in
pop
jnp
cli
lret
addr16
mov
fldt
mov
iret
ds
inc
inc
clc
shlb
or
jl
or
push
into
in
xchg
das
insl
mov
cmp
pop
mov
jns
sarl
in
pop
push
jb
in
movsl
in
daa
sar
call
in
push
shrb
gs
xchg
mov
xchg
push
negl
and
or
sub
inc
adc
jo
mov
mov
cwtl
mov
test
lea
inc
cmp
pop
jg
dec
xor
cmp
sub
clc
mov
dec
adc
sahf
jbe
iret
and
cmpb
add
dec
adc
or
add
dec
lret
aaa
and
fxch
mov
cmp
ror
push
push
mov
jecxz
xchg
lcall
mov
lcall
mov
sub
pop
and
leave
lea
lods
aaa
mov
ds
test
arpl
and
popf
negl
call
lods
jmp
sbb
out
js
sbb
popa
push
das
dec
and
xor
xchg
and
push
imulb
lcall
inc
add
xacquire
jns
xchg
inc
sub
mov
fwait
les
dec
ss
lahf
lods
jge
movsl
add
xor
cwtl
repz
push
push
xchg
rcrl
xor
jnp
sub
loope
mov
mov
leave
loop
jb
xchg
rcrb
inc
out
sub
jecxz
jl
xor
pop
sub
testb
stos
xchg
insb
ja
sti
inc
cmp
mov
jae
sbb
sbb
pop
sub
fistpl
stos
cld
icebp
icebp
mov
dec
or
rcrl
push
mov
pop
stc
cwtl
jle
roll
jl
cmp
fs
aad
loop
mov
stc
rorl
aad
push
xchg
pop
mov
pop
add
in
push
pop
mov
loop
dec
cmp
adc
jmp
xchg
shl
cld
or
xchg
loopne
fadds
es
dec
or
sub
mov
test
inc
pusha
sbb
fidivrl
inc
ss
sbb
and
dec
jae
sbb
aad
out
xchg
test
push
lds
push
fdivs
dec
xor
cld
cwtl
xor
nop
in
cmp
mov
inc
mov
inc
mov
hlt
out
xor
adc
mov
out
lahf
xor
stos
xor
xchg
jae
inc
outsl
push
out
adc
scas
dec
cmp
or
jnp
push
loope
or
pop
lcall
addb
jno
push
mov
jnp
int3
add
enter
pop
les
cmp
insb
in
loope
mov
outsb
gs
jne
addb
cs
jne
xor
insb
xchg
xchg
xlat
or
cmp
xor
popf
mov
add
ret
arpl
leave
xchg
addr16
fs
sbbl
mov
mov
stos
xchg
in
clc
lea
in
and
outsl
mov
inc
aam
call
in
popf
push
sbb
outsl
push
outsb
xor
or
push
mov
dec
ljmp
test
cmpsl
addb
mov
repz
inc
pop
mov
outsl
inc
jo
adc
add
popa
lods
imul
iret
mov
xor
jb
aas
xchg
xlat
mov
inc
adc
mov
adc
stc
test
ja
arpl
shl
call
or
pop
cmp
xchg
scas
mov
fwait
mov
and
jge
rolb
fcoms
or
out
es
jo
and
loope
addr16
pop
add
sahf
dec
or
addr16
imul
fidivrs
rcr
xor
scas
cmp
mov
shll
roll
pushl
cmp
decl
fcmovnb
jbe
test
jbe
mov
cmpsb
adc
insl
dec
and
rolb
mov
mov
dec
frstor
pop
test
filds
mov
push
dec
sbb
pop
adc
fadds
outsb
mov
sub
lds
enter
and
inc
rclb
outsl
test
pop
sbb
sub
push
cmp
mov
push
insb
push
adc
testl
rolb
push
rclb
jecxz
rolb
pushf
add
jle
shll
sub
jbe
ret
adc
push
test
pop
dec
mov
inc
sub
rcll
sbb
lahf
or
sub
pop
pop
jbe
scas
out
cltd
in
imul
adc
incl
clc
adc
pop
xchg
sbb
ret
lcall
es
pop
push
fwait
xchg
iret
sbb
inc
pop
adcb
repnz
nop
test
in
xor
mov
bound
inc
or
push
movsl
subb
cltd
or
test
push
inc
gs
and
lahf
pusha
addb
aaa
test
xchg
enter
xchg
fsub
into
cli
xlat
jo
xchg
les
sarl
jle
xchg
mov
mov
ret
xor
mov
mov
adc
cmp
scas
stos
pop
add
jb
mov
jne
xor
mov
loopne
xor
adc
ret
js
push
xor
fsts
fildll
mov
jnp
xorl
test
jmp
mov
cmpsb
dec
and
xor
jg
sub
inc
cmpsb
mov
loop
jne
mov
add
aas
test
mov
mov
dec
pop
cmp
lret
jl
popa
inc
sbbl
xchg
sarl
sbb
push
lds
jl
add
sbb
mov
or
hlt
adc
pop
or
int3
adc
dec
cld
hlt
adc
sbb
imul
mov
mov
or
fadds
in
lcall
ds
popf
insb
push
cli
insl
ja
inc
jae
xchg
and
push
dec
pushf
mov
jle
sub
jg
xchg
jne
dec
pop
mov
movsb
sbb
mov
imul
out
cwtl
and
inc
xor
cmp
stos
incl
loopnew
jle
cmp
fdivrs
inc
bound
add
mov
rcll
mov
shl
fdivr
rolb
push
cs
rcrb
shlb
lods
cli
mov
mov
dec
gs
adc
xchg
jb
mov
aas
pop
adcl
sub
push
js
popf
mov
mov
test
adc
xchg
push
pop
xchg
pop
push
cmpsb
add
mov
xor
mov
mov
cmp
push
ret
movsl
add
les
pop
jns
xlat
mov
or
repz
xor
fdivrl
adc
xchg
out
mov
clc
adc
xchg
mov
push
sbb
nop
stos
idiv
mov
int
cmp
mov
in
cmp
adcl
fwait
scas
int3
fdivs
mov
fdivs
xchg
cwtl
lret
mov
push
leave
and
mov
inc
fwait
out
loope
and
jb
mov
cmp
sub
pop
imul
sub
imul
insl
and
fwait
xor
jecxz
pop
popf
push
mov
cmp
mov
inc
call
push
cs
mov
xor
add
mov
or
mov
mov
and
rcll
mov
cmpsb
pop
sub
inc
pop
sahf
add
inc
ret
mov
jae
dec
sbb
sub
or
jmp
int3
mov
jo
xor
jnp
or
jp
out
xlat
sbb
imul
adc
test
push
fdivr
pop
xor
scas
add
shl
push
sahf
pop
cmp
jns,pn
jle
inc
repz
jg
dec
dec
int
sbb
mov
xchg
sahf
lret
xchg
lds
mov
xchg
sbb
sub
cmp
push
inc
adc
jg
xchg
adc
cmpsb
xlat
aad
jge
insl
adc
aas
mov
pushf
in
pop
push
or
mov
pop
lret
hlt
xor
mov
adcb
orl
shll
out
in
ficoml
or
push
xor
and
jp
and
pop
movsb
adc
lds
ret
xchg
repnz
xchg
xor
loopne
pop
test
mov
lods
xchg
loop
in
imul
leave
cld
notb
nop
in
repnz
cmp
bound
xor
fidivl
out
aam
test
loope
push
sub
or
imul
inc
mov
xor
sbb
adc
hlt
add
outsl
push
out
loopne
mov
sub
adc
insb
add
les
orb
sbb
jmp
adcb
lret
into
popl
sbb
push
dec
repnz
outsb
jp
adc
stc
test
rclb
sub
push
xchg
mov
aad
add
mov
add
jae
clc
iret
fnstenv
jg
push
push
mov
push
sub
cmp
push
mov
dec
test
data16
push
cmp
mov
dec
jne
fcmovnu
pop
leave
adc
pop
xlat
adc
pop
pop
cmpsb
jge
adc
cmc
ljmp
daa
test
pop
js
leave
bound
mov
inc
push
outsb
push
sub
pushf
ljmp
cmp
lock
pop
xor
sarl
lret
cmc
pop
lret
or
adc
rorb
jb
stos
pop
or
dec
jp
outsl
loop
test
jecxz
inc
loope
and
mov
xchg
cld
lret
movsl
xchg
push
outsl
push
push
rorl
push
xor
mov
jmp
stos
rclb
mov
pop
rcrb
pop
sti
push
jge
inc
rcll
movsb
in
mov
incb
xchg
mov
push
scas
cmp
pushl
sahf
addr16
inc
mov
popa
sub
aas
cltd
enter
push
inc
inc
sbb
jno
or
ja
add
xor
ror
mov
js
mov
inc
and
pop
sbbb
jno
dec
jge
sub
xor
jl
push
aaa
sbb
insl
or
aaa
sarb
in
repnz
hlt
ficoml
pop
or
push
pop
pop
shl
or
inc
repz
jle
adc
and
enter
mov
sub
push
xchg
cs
jns
mov
push
icebp
hlt
and
sub
adc
hlt
xchg
inc
cwtl
cmp
imul
inc
add
in
or
lret
fldt
repz
stos
fcomi
scas
lret
test
add
repz
dec
insb
mov
push
test
pop
cld
rep
jmp
dec
test
cmp
in
push
out
pop
scas
jg
jl
cs
fsubs
test
imul
fnstcw
out
shll
gs
aas
cs
hlt
cmp
inc
mov
rorb
and
xchg
mov
mov
jg
sbb
push
loopne
xchg
pop
movsb
add
ds
imul
scas
aam
push
sub
add
pop
cmpl
ret
lds
pop
mov
insl
mov
les
mov
jle
and
lods
sub
scas
loope
inc
add
ljmp
mov
pop
mov
dec
out
sub
lods
arpl
repnz
sbb
cmp
rclb
aad
jp
pushf
or
fwait
cmpsl
pop
gs
jno
cmp
push
pop
cmp
jmp
jmp
decb
test
pop
test
sar
ljmp
push
fildl
adc
xor
iret
out
mov
lock
sub
in
cmp
fldt
pop
fdivrl
pop
xchg
lret
xor
push
dec
cmp
mov
sub
mov
push
pop
cli
dec
sbb
loop
push
mov
dec
fcmovnb
xchg
mov
mov
fdivrs
mov
int3
pop
popf
dec
add
pop
loope
repnz
mov
push
pop
xchg
mov
pop
bound
out
push
repz
ret
push
into
jecxz
push
add
mov
in
push
js
and
bound
jnp
decb
aam
scas
enter
mov
cwtl
stos
hlt
inc
insb
push
mov
pop
jbe
cmp
adc
jo
xor
mov
mov
in
mov
dec
push
aam
sarb
jle
and
inc
or
dec
xor
lea
and
xchg
stos
dec
jo
cmp
and
sbb
sub
cltd
divb
add
std
dec
inc
sahf
into
mov
xchg
jmp
lahf
xor
sbb
faddl
mov
sarb
jle
les
push
sub
or
xor
mov
out
enter
in
scas
push
inc
xor
mov
leave
or
adc
mov
int3
orb
je
xor
mov
icebp
sbb
add
pop
dec
cmp
in
loopne
push
push
and
pop
xchg
popa
inc
xor
out
cmpsb
stos
mov
data16
or
outsb
cmp
mov
or
inc
outsb
jecxz
out
sub
push
and
sub
fucomi
fwait
mov
insb
sbb
std
sub
test
insl
add
and
cmp
cmp
dec
and
lods
out
xor
lds
push
aaa
addb
lods
xlat
cmp
lcall
or
fsubr
movsl
stc
cmp
add
xchg
std
out
push
out
adc
arpl
xchg
es
jecxz
outsl
repz
cmp
and
and
out
cmpsb
mov
push
mov
pop
jo
mov
xchg
andl
lret
pop
fcmovnb
in
xchg
fwait
mov
fwait
add
repz
imull
or
insl
sarb
and
or
xor
imul
les
or
cmc
repz
adc
repnz
add
mov
int3
xor
lcall
dec
jno
pusha
and
mov
mov
in
sbb
push
lcall
and
sbb
sub
movsl
add
outsb
jns
mov
adc
push
scas
mov
cmpsb
imul
pop
dec
imul
jae
in
fwait
pop
mov
lods
xor
icebp
aas
mov
lahf
loopne
xor
mov
aam
inc
dec
jmp
push
dec
rclb
stc
ss
aad
mov
and
loope
pusha
mov
mov
rorb
push
loope
pop
rolb
cld
sbb
mov
aas
push
ds
mov
push
repz
cmp
inc
pop
loope
jl
jge
xor
dec
sarb
add
dec
jns
xor
xor
lock
ret
sub
lret
xor
std
stos
mov
push
in
cmp
sub
out
mov
pusha
xchg
cmpb
fnstsw
inc
loop
es
fwait
jg
repnz
push
or
push
out
dec
rorb
hlt
es
in
stos
mov
sahf
inc
stos
cmpsl
incl
data16
int3
mov
sbb
loop
lahf
xor
adc
cli
rorb
ds
cmp
shr
int3
repz
test
or
sbb
add
hlt
adc
cwtd
mov
ja
inc
pop
fists
jbe
scas
outsl
int3
dec
in
xchg
movsb
sub
orl
cli
cmp
ljmp
or
mov
xchg
cmp
fldenv
fisttps
dec
out
in
outsl
sar
pop
ret
pop
pop
out
or
pop
hlt
rcl
mov
or
mov
ljmp
inc
ror
addr16
inc
jbe
leave
mov
xlat
outsl
sub
mov
dec
idiv
das
daa
movsb
adc
cld
cld
fldenv
clc
test
data16
sbb
cld
std
std
dec
dec
fcmovnb
adc
mov
mov
mov
out
aam
mov
inc
push
and
jo
pop
push
gs
sub
cmp
int
mov
pop
sahf
xchg
outsb
enter
and
in
dec
test
aad
out
std
dec
clc
fs
sub
js
test
dec
or
in
xor
bound
pop
cwtl
cwtl
aad
sbb
jmp
xchg
aas
ljmp
pushl
clc
and
lods
xchg
cmp
inc
fcmovne
aas
push
fwait
mov
repz
bound
jne
inc
dec
jp
cmp
imul
fwait
daa
aam
push
jns
emms
jmp
sub
stc
rorb
and
jmp
dec
sbbl
push
clc
lcall
rcrb
pop
push
out
sbb
decl
push
daa
and
adc
xor
push
ja
clts
pusha
rorb
out
or
subl
int3
and
in
lret
in
cwtl
cmp
inc
inc
pop
test
or
cmp
das
mov
push
pop
ljmp
shrl
mov
mov
cltd
add
subb
ss
loopne
jbe
mov
cmc
cld
inc
inc
mov
mov
rcll
jnp
sub
gs
in
mov
outsl
clc
iret
mov
cltd
ret
mov
movsb
clc
dec
xchg
test
scas
ror
cmpsb
inc
dec
insl
cmpsb
pop
outsl
inc
inc
dec
stos
sbb
jge
pop
xchg
jo
xor
push
fnstenv
imull
ret
mov
shr
out
lds
xor
mov
out
sub
sub
fcoms
int3
cwtl
inc
std
mov
inc
xchg
adc
cmp
xor
mov
repz
add
in
adc
xor
add
push
cmp
std
jbe
cli
ja
add
cwtl
fdiv
xor
loope
pop
inc
mov
and
mov
imul
movsl
add
pop
add
fsts
and
les
cmp
sbb
jmp
cmp
mov
movsl
sub
rcll
adc
jae
xchg
and
jge
adc
xor
xor
pop
dec
push
mov
popa
aam
fwait
and
mov
mov
cwtl
lods
xchg
push
xor
flds
cmp
mov
sub
outsl
adc
fprem1
mov
call
add
or
addr16
out
push
sysenter
or
cltd
sbb
mov
xor
fcoml
mov
pop
cmp
fcmovnu
pop
cld
xchg
bound
test
ret
out
sbb
lret
std
pushf
rclb
repz
push
andps
sbb
insb
ret
sub
addr16
lods
sbb
leave
fstl
inc
jnp
pop
mov
push
sbb
push
int3
fsub
jmp
cmp
test
jmp
sub
cmpsl
movsb
mov
sbbl
repz
bound
clc
call
out
add
imul
or
lret
test
sarb
call
es
mov
and
imul
test
mov
mov
cmpsb
rdtsc
pop
repz
jnp
test
cmp
add
cmpsl
sub
ja
inc
jmp
fcoms
nop
mov
cld
imul
xor
sbb
imul
in
xchg
and
dec
inc
adc
push
dec
fwait
in
xor
andb
sub
xor
and
mov
scas
mov
or
fwait
mov
stos
packuswb
mov
prefetchw
decl
test
inc
cwtl
adc
imul
xchg
and
hlt
add
fwait
in
loop
sub
pop
xchg
or
movsb
mov
lcall
shrb
push
imul
sbb
imul
jb
adc
movsb
adc
pop
or
lea
lods
jl
sbb
or
rolb
mov
and
sub
inc
loopne
lods
cmpsb
mov
inc
lods
mov
inc
mov
dec
jg
jns
xor
cmpsb
xor
sti
ljmp
mov
xor
pop
rol
imul
pop
enter
cmp
and
cmpsl
hlt
cmp
xlat
sbbb
push
push
sbb
push
sub
stos
aad
ljmp
mov
lcall
or
cmpsl
sbb
ret
pop
cmp
sbb
int
inc
aam
or
imul
or
shlb
rclb
ds
sub
scas
in
jge
popa
cld
sbb
pop
add
into
std
sbb
gs
lret
xor
and
ljmp
loop
stos
into
add
add
ljmp
test
movsl
jae
mov
mov
popf
xchg
bound
mov
fwait
mov
imul
mov
mov
inc
popa
ds
xor
call
sub
bound
push
in
int
fimull
mov
sbb
daa
cld
sbb
lahf
add
in
les
and
inc
cmc
fmuls
sbb
out
iret
pop
or
enter
cli
sbb
mov
mov
mov
xor
imulb
mov
mov
lret
std
lret
fdivrl
or
fadd
cmc
jns
rcr
inc
test
cmp
cmp
inc
dec
mov
mov
jp
mov
push
cmpsl
cmp
xchg
testb
sti
jmp
movsb
or
dec
movsb
sub
push
xchg
sbb
mov
push
sub
mov
sbb
add
add
clc
add
push
jns
xor
insb
push
nop
pop
loope
mov
or
loope
jg
andb
and
xor
xor
ret
mov
push
or
in
outsb
insl
jg
pop
adc
nop
lahf
sbb
cs
sbb
aaa
xlat
test
fdivr
mov
xor
iret
or
imul
mov
mov
in
xchg
stos
rolb
fcompl
xor
fs
xor
add
jle
cmc
popf
cmp
cmpsb
hlt
loopne
add
fists
in
cmpsl
ja
push
int
in
stos
jmp
sarb
arpl
addr16
jp
lcall
movhps
dec
iret
and
into
cmpsb
sub
mov
dec
jno
inc
mov
xchg
repnz
pusha
xorb
sahf
mul
out
fs
dec
lods
movsl
dec
mov
or
mov
ja
pop
jnp
into
mov
cmp
movsl
add
ss
and
outsl
and
imul
push
adc
inc
ja
sbb
jmp
jno
arpl
enter
mov
leave
push
xchg
pop
cmp
stos
pop
movl
cmp
xchg
sbb
mov
push
out
mov
aas
lea
nop
lea
mov
pop
cmp
inc
mov
ja
and
pop
push
aam
cmc
jle
cld
pop
or
jae
sbb
jnp
cli
int3
jae
mov
jle
or
mov
cmp
dec
call
out
pop
pop
ret
add
inc
cmpsl
mov
stc
and
xor
mov
mov
adc
ss
xor
out
lret
mov
roll
push
push
dec
mov
xchg
inc
stc
in
mov
mov
pop
sub
push
pop
cmp
ss
mov
pop
mov
adc
test
js
xchg
scas
jmp
and
insb
mov
shrb
popf
mov
jge
mov
mov
and
outsl
popf
std
sbb
mov
popl
push
ficoms
nop
mov
ss
je
lock
xchg
xor
in
call
popf
enter
inc
lock
xor
popf
aad
mov
cmp
popf
lods
xor
sbb
add
cmc
cmp
add
sub
stc
jae
pop
adc
xchg
int
jl
sub
push
pushl
pop
jle
bound
push
push
push
imul
cmp
lods
xor
push
in
inc
push
lahf
xchg
mov
rorb
xchg
and
int
sub
cli
fldenv
push
jmp
lock
cmp
pop
and
cmc
pusha
inc
mov
movsl
out
xor
imul
outsl
movsl
xchg
fisttps
aam
lcall
jge
xor
es
dec
sbb
gs
and
mov
fstpt
scas
mov
test
dec
xor
pop
xchg
jae
mov
pop
dec
subps
nop
sbb
add
xor
cmpsb
jno
icebp
sub
insl
data16
pop
fists
dec
test
pop
iret
in
fidivrl
xor
and
addb
xchg
xor
in
fsubs
cmp
jle
push
sti
in
jle
ret
sar
mov
mov
inc
dec
sahf
lds
fdivrs
test
notb
sti
pop
jg
ret
add
adc
loope
into
mov
stc
test
mov
js,pn
lret
xchg
sub
mov
inc
jbe
jo
mov
inc
or
dec
sub
not
sub
jne
out
enter
inc
mov
or
jp
pop
and
mov
sti
push
sbb
decl
pop
inc
push
test
push
xor
daa
cwtl
jae
jne
and
dec
movl
call
mov
cmp
cltd
xor
out
in
inc
int
ldmxcsr
cs
xchg
js
lods
in
xor
sub
mov
insl
mov
adc
mov
repz
sub
hlt
sbb
or
mov
test
push
xchg
repnz
mov
adc
loope
add
inc
pop
and
mov
jbe
adc
sub
add
ljmp
or
cs
adc
jo
repz
mov
test
adc
mov
adc
std
or
dec
xor
fs
je
outsb
loopne
mov
sub
pop
es
jecxz
fldcw
cmp
jmp
inc
mov
dec
and
mov
push
pop
mov
pop
addb
imul
fadds
mov
fidivl
out
les
adc
icebp
mov
xor
dec
mov
or
fs
sub
mov
cmp
xchg
jle
mov
or
aam
lahf
adc
ret
insl
adc
pop
lahf
repnz
xchg
movlps
jp
jl
dec
and
pop
add
and
cmp
add
aas
insb
stos
adc
pushf
dec
adc
stos
or
add
out
inc
mov
scas
stc
mov
push
out
clc
xchg
add
insl
or
push
add
mov
dec
push
mov
es
xor
shl
loopne
outsl
loop
sbbb
out
iret
out
adc
jno
xchg
cmp
dec
jp
cltd
xchg
and
sti
mov
stos
cmpsb
sub
xchg
and
cltd
mov
int3
je
mov
xlat
pop
sarl
and
push
cmp
pop
stos
pushl
push
cmp
je
xor
movsb
mov
scas
push
cmp
mov
hlt
push
lahf
fdivrs
outsb
xor
fsubrl
or
dec
xchg
repnz
movsb
andl
outsl
or
pop
adc
cmpb
sbb
cwtl
lea
ljmp
sbb
out
fstl
push
jge
inc
jl
or
bound
xor
sarl
push
cmpl
icebp
mov
dec
lds
push
imul
cmp
and
pushf
xor
insb
mov
mov
xor
aam
inc
std
jns
loopne
outsb
xor
loop
ja
mov
out
xor
sti
into
daa
and
mov
mov
jle
shll
jb
and
and
lods
data16
cli
adc
mov
mov
leave
call
nop
int
inc
sub
inc
jo
push
andb
xor
sbb
test
es
sbb
sub
mov
imul
push
movsl
adc
cmp
sti
push
xchg
jo
aam
ret
sub
mov
jg
cli
cmp
cmc
lcall
xor
cmp
cmp
jmp
jno
lds
sti
push
and
jge
jp
loopne
xor
stos
aas
test
add
push
cmp
ja
push
cmp
ret
push
xor
add
clc
pop
push
add
test
jecxz
jecxz
mov
add
mov
sbbl
inc
adc
lea
cltd
cmp
insb
mov
lods
mov
imul
xor
ret
jge
mov
enter
inc
pop
dec
cmp
sbb
jge
int
cld
jb
in
jecxz
pop
scas
cmp
ret
cmpsl
push
mov
addr16
dec
xchg
and
cmp
xchg
test
ret
das
shrb
mov
sbb
les
loop
xchg
xchg
imull
rorl
imul
inc
loopne
inc
mov
mov
cmp
inc
push
push
xor
or
sub
mov
arpl
dec
mov
pop
add
leave
in
push
jbe
and
insb
xor
mov
push
jecxz
js
xchg
cmp
jle
es
push
aam
fwait
mov
pusha
daa
std
popa
sub
mov
aaa
push
lods
pop
fisttpll
popf
lods
sahf
ret
inc
xor
xor
fisttpl
adc
pop
pushf
mov
fs
and
pop
popf
and
dec
and
mov
push
and
jno
dec
jl
inc
mov
loop
inc
shll
loope
inc
xor
rorl
dec
mov
and
testl
adc
inc
scas
push
or
inc
js
aam
mov
sub
mov
xchg
mov
in
shll
sbb
mov
stos
stos
inc
xor
and
test
cld
mov
aad
test
in
cmc
xchg
imul
inc
pop
push
imul
xchg
clc
aam
aad
mov
cmp
mov
adc
ljmp
jmp
movsb
fdivl
outsl
fs
out
fbstp
or
ret
shl
fsubrl
mov
notb
and
in
shrb
mov
insl
xor
mov
mov
gs
inc
mov
lods
fwait
push
or
pop
sahf
daa
addr16
fildl
cmp
adc
scas
lock
ret
sbb
js
or
jmp
ret
or
jb
hlt
mov
or
jp
jbe
pop
sub
lods
sbbb
outsb
loopne
dec
xchg
mov
push
imul
push
aas
addr16
mov
or
push
aas
sahf
dec
stc
test
push
inc
mov
adc
mov
mov
shll
xlat
xchg
lcall
cmp
insl
je
cmp
rorb
mov
dec
xor
sti
jp
cs
mov
sbb
dec
fistpl
add
jne
ret
cmp
repnz
and
jl
aaa
mov
fldenv
inc
xchg
outsb
test
jb
push
xchg
jmp
inc
jns
jmp
inc
fldt
jo
or
aam
or
mov
sub
xorl
gs
xorb
cs
cltd
gs
es
pop
sub
and
sub
add
les
and
sbb
or
lahf
repz
push
xchg
cmp
and
loopne
lea
and
fs
int
int3
ret
cltd
dec
mov
jl
push
push
pop
cmpsl
mov
stos
push
enter
xchg
inc
loope
imul
int3
pop
leave
imul
add
daa
jno
pop
cmpl
rclb
pop
jnp
fcomps
incb
cmp
or
pusha
mov
push
cmpsb
add
and
jb
push
cltd
cmc
js
jne
das
xor
dec
pusha
jbe
gs
aad
icebp
push
lret
push
imulb
adc
push
test
pushf
mov
sub
lock
cmc
mov
mov
popa
mov
adc
and
pusha
stc
jbe
mov
ljmp
lret
inc
push
fnstenv
xchg
xor
push
adc
in
shl
cwtl
sahf
lods
stos
push
add
fstpt
push
aaa
lds
into
mov
lea
fdivr
enter
mov
mov
aam
pusha
mov
mov
sbb
sub
pop
stos
inc
je
and
mov
or
xchg
xchg
adc
out
add
adc
loope
and
sbb
mov
fs
sahf
fbld
xchg
inc
push
inc
aas
rclb
pop
inc
aas
int3
pop
addb
jmp
shrl
adc
mov
xorb
pop
sbb
sbb
test
outsl
out
repnz
ja
test
xor
add
cld
xorb
inc
test
dec
adc
int3
fidivs
inc
je
call
ret
aam
int
ret
pop
test
dec
jae
pop
sub
mull
je
add
rcll
mov
enter
je
jecxz
aaa
rclb
mov
cs
push
leave
dec
fildl
fwait
mov
pop
dec
mov
movsl
xchg
jb
sub
hlt
or
popa
cltd
lea
shlb
insb
addr16
mov
lret
and
notb
bnd
repz
add
pusha
cmpsl
push
adc
cmp
add
into
jg
cmpsl
flds
pop
das
sub
test
and
adc
pop
sbb
or
loope
pop
jmp
dec
and
cmpsb
adc
daa
out
sub
shrl
in
cmp
in
inc
rorb
push
sbb
lahf
adc
mov
fisttps
cmpsl
mov
cmp
into
add
orb
paddusb
xchg
or
adc
dec
outsb
repnz
mov
leave
aam
and
push
sub
mov
mov
aam
xchg
cmpl
jmp
sbb
bound
in
popl
jns
adc
adc
and
lods
mov
loop
mov
scas
cli
into
int3
cmpsl
xor
lods
mov
and
rolb
xor
push
cmc
xchg
ds
or
xchg
rolb
sbb
mov
lret
cmp
mov
sub
inc
fidivrs
jg
jae
insl
xchg
dec
mov
cmpl
cmp
repz
cmp
sahf
movsl
cmp
roll
pop
mov
xlat
jmp
in
or
rorb
lea
fsubrs
pop
rclb
gs
pop
fldl
repnz
pop
jp
mov
in
std
in
popf
insb
stos
push
and
hlt
ds
adc
xchg
mov
sbb
dec
nop
jecxz
outsl
adcb
repz
in
test
data16
std
add
sub
jnp
mov
or
adc
jp
mov
add
mov
in
std
dec
or
loop
cwtl
mov
jmp
push
sub
mov
inc
fnstsw
jmp
and
or
jle
popf
cmp
sahf
and
push
in
sahf
and
data16
sahf
and
es
pop
leave
pop
jo
enter
jne
outsl
xor
add
or
add
pop
mov
jp
mov
aam
inc
mov
adc
movsl
jge
lods
dec
scas
insl
and
outsb
lret
imul
xor
outsb
adc
leave
lahf
call
pop
sbb
sub
cmpsl
or
mov
push
fucom
mov
sbb
movsl
pop
imul
scas
vpaddq
loopne
xor
add
mov
testl
sti
fwait
hlt
pop
lea
sbb
sub
imul
loop
and
pusha
cs
xchg
pop
enter
or
inc
mov
and
out
xor
movsl
loopne
mov
out
cmp
filds
mov
adc
xor
mov
sarl
outsl
je
cs
or
negl
sub
push
inc
or
test
incl
jo
leave
sar
aaa
ret
jbe
in
pop
repz
add
lds
inc
sbb
daa
fmuls
mov
ss
and
xchg
mov
loop
dec
cwtl
je
inc
sub
out
mov
aas
fdivp
cmp
or
or
push
inc
fisttpll
pop
frstor
addl
xor
sti
lods
ret
fistps
mov
repz
and
negl
std
loopne
js
adc
xor
test
imul
test
xchg
jnp
das
jbe
cmp
out
jo
divb
add
mov
or
cmpsb
sbbb
popa
in
cmp
pop
xor
popl
int3
and
cmpsb
outsl
jo
sub
mov
mov
test
cmc
sbb
lret
outsl
push
and
pop
mov
cld
adc
sbb
mov
push
adc
pushf
xor
xor
push
popa
and
pop
pop
sahf
sbb
test
cmp
insb
xchg
adc
stos
test
aam
sbb
rcrl
xchg
mov
or
fwait
cmpsb
loop
xchg
js
dec
data16
ja
popa
sbb
shr
gs
dec
xchg
xchg
fs
inc
cmpsl
arpl
push
cmp
les
adc
hlt
mov
loopne
aaa
je
mov
pop
es
insb
cmp
mov
xor
rcrl
dec
adc
int
or
sub
fdivrp
or
scas
push
add
jl
sub
mulb
scas
sub
out
imul
jb
aaa
jge
push
rcrb
mov
xchg
mov
mov
cmp
subl
int
fcmovbe
outsb
inc
xor
cmp
lods
pushf
pusha
mov
shrb
mov
addr16
xorl
and
fsubr
sbb
cmpsb
adc
ljmp
mov
iret
scas
clc
test
push
ds
sahf
adc
shll
push
inc
sahf
jne
call
sahf
adc
out
sub
push
adc
push
adcl
inc
jne
int3
mov
stc
xchg
jecxz
adc
mov
mov
popf
js
pop
popa
dec
push
pop
dec
cmp
sbb
xchg
sbb
in
ja
dec
test
cltd
outsb
sub
dec
pop
push
sbb
gs
fwait
out
xor
adcb
lods
aaa
addr16
inc
adc
or
mov
stc
addr16
sti
pusha
sbb
and
in
mov
jo
aam
add
push
mov
xchg
cld
jno
aad
scas
enter
cmp
addr16
movsl
mov
mov
or
and
in
lret
popa
insb
fs
jl
movsb
mov
shll
adc
push
dec
ret
xor
cwtl
fisttps
cltd
sti
adc
xacquire
aad
pushf
sbb
test
mov
cwtl
pusha
push
out
xchg
es
sbbb
push
cld
jecxz
sahf
cmpsb
iret
mov
sbb
std
or
adc
gs
mov
daa
loop
addr16
lods
test
push
pushf
leave
or
jle
inc
stos
fdiv
mov
dec
out
lret
adc
or
imulb
fwait
sbb
pop
rclb
fnstsw
cmc
xchg
stos
cld
jmp
ss
cmp
cmp
andl
cmpsl
lods
mov
mov
xchg
mov
aam
pop
outsl
mov
scas
or
and
lret
rcl
or
js
mov
and
xor
mov
and
imull
stos
jno
mov
jae
mov
mov
mov
lds
inc
test
cmpsb
fdivl
push
or
fildll
shrl
adc
loopne
stc
push
daa
mov
cmpsl
and
pushf
push
jp
xchg
pushf
mov
aad
shl
mov
pop
lods
shrb
sub
mov
mov
movsb
sub
jbe
push
into
lds
out
enter
cmp
mov
dec
inc
aad
push
mov
inc
cmp
push
clc
lods
aaa
push
enter
xor
pop
push
and
test
pushf
movsb
test
mov
xor
icebp
or
mul
push
and
inc
jb
dec
in
stos
adc
fdivrp
jmp
or
mov
imul
repnz
lods
fdivl
adc
sbb
andl
lret
pop
fbstp
push
mov
jle
mov
push
ret
rclb
subl
mov
pushf
sahf
lds
mov
pop
gs
cmp
sub
mov
jp
popa
sub
cltd
push
dec
inc
xchg
xchg
mov
mov
mov
push
ret
inc
or
testb
lahf
cmp
mov
add
adcl
shrb
and
xchg
shll
fwait
or
in
and
or
paddsb
aad
sub
jl
out
mov
cmc
int3
or
mov
cmp
mov
push
push
pop
xchg
pop
mov
xchg
in
mov
sub
xchg
pusha
pop
bound
leave
jbe
sbb
jns
pushf
push
test
lds
xchg
jo,pt
stc
add
xchg
rcll
or
sar
les
jo
jb
add
pop
jmp
fnstcw
pop
mov
stc
outsb
inc
mov
push
test
mov
sbb
inc
imull
ja
sti
or
aaa
xor
inc
je
out
push
push
jmp
int3
jg
dec
js
cmp
cli
xor
jecxz
xchg
and
fwait
sbb
pop
mov
cmpb
adc
mov
mov
or
leave
scas
adc
push
inc
lods
dec
jmp
mov
imul
and
mov
or
jmp
lret
push
les
test
cld
jae
sub
fcomp
cmp
mov
inc
imul
clc
mov
insb
push
adc
daa
mov
cwtl
les
push
or
lea
add
push
and
es
dec
shll
jo
loop
adc
pusha
in
cmp
shll
fnstsw
xorl
adc
add
call
arpl
mov
enter
and
scas
out
pushf
adc
sbb
das
mov
pop
lcall
fstps
int3
daa
or
push
sti
rclb
movsb
and
mov
xchg
jl
faddl
movsl
mov
jae
stc
int
mov
cmp
lcall
xchg
loopne
adc
call
popa
jb
cmpsb
xor
push
and
and
mov
push
adc
jo
mov
jle
in
pop
xchg
mov
sbb
fwait
sbb
mov
pop
out
test
loope
out
mov
ja
rorb
lods
stos
add
test
cmc
cmp
lds
ss
fisttps
mov
cmpsl
inc
push
lcall
and
and
int
dec
insl
xor
inc
cld
jecxz
jmp
stos
movsl
stc
lret
push
aas
xor
xor
aaa
loopne
fs
sbb
cmp
mov
dec
cmc
cmpsb
mov
imul
movsb
xor
and
xchg
fsub
subl
nop
movsb
int
fistpl
push
cmpsb
jle
jge
lret
in
cmp
out
add
jl
fldl
ret
mov
dec
lahf
fiaddl
fnstsw
fs
add
mov
leave
in
dec
sub
jl
inc
mov
nopl
je
sub
push
mov
arpl
add
push
sbb
pusha
imul
pop
dec
ds
adc
add
popf
jle
jno
rorl
outsl
jno
test
rorb
dec
cmp
stos
mov
cmp
sbb
ret
negb
pop
lcall
in
mov
xchg
cmpsl
jae
xor
dec
dec
jp
push
and
push
adc
xorb
cltd
inc
xor
hlt
int
inc
xchg
sbb
int
mov
pop
mov
or
push
and
test
movsl
sub
mov
outsb
addr16
popf
pop
loopne
xorl
mov
sahf
dec
mov
xchg
add
push
lahf
and
fisttpll
jle
jb
jmp
or
aam
xchg
ljmp
aad
fcmovu
push
sahf
add
or
xchg
jo
test
xchg
mov
inc
push
addr16
push
sub
push
fwait
cmp
imul
inc
leave
cmc
and
leave
pop
inc
inc
sti
sbb
jb
jno
insb
adc
pop
push
insb
mov
fs
insl
test
gs
mov
stc
xor
aad
xchg
rorl
jecxz
xchg
mov
cmp
divb
cmp
test
sub
xorl
cmpb
xlat
and
fistpll
xchg
or
daa
jae
xor
inc
dec
adc
push
mov
popa
repnz
outsb
mov
mov
cmpsb
mov
adcb
push
push
gs
pop
inc
ss
aad
jno
or
arpl
dec
imul
or
cld
fiaddl
fcomp
sbb
loopne
sbb
rcr
xor
xchg
or
daa
pop
sbb
ficoms
sub
fwait
sbb
aad
jns
out
inc
idiv
pop
pop
push
pop
cld
xacquire
aam
pop
shll
in
cli
divb
scas
mov
sbb
and
xchg
movsb
pop
xor
imul
cltd
xor
push
adc
pop
out
xor
pushf
subl
pushf
repz
in
mov
out
push
push
popl
repnz
pop
xchg
insl
pop
popf
icebp
sbbb
icebp
scas
sbb
inc
cmp
clc
lock
enter
sbb
jnp
shll
out
cmp
insb
xchg
add
daa
or
int
fcom
jne
sbb
adc
or
aaa
xor
jl
jae
shl
sbb
inc
mov
push
mov
pusha
dec
scas
je
xchg
add
push
cmp
dec
and
sub
and
scas
leave
cmp
jge
mov
inc
mov
inc
cld
aad
int
cli
mov
in
repz
js
lcall
cli
push
dec
in
hlt
in
sbb
stos
out
ds
and
mov
shl
test
aaa
push
push
jp
jl
sbb
and
add
sbb
aam
scas
pop
sub
repz
in
sbb
loopne
cli
pop
mov
in
xor
push
lret
pusha
lea
dec
xor
cs
mov
fneni(8087
repz
push
cwtl
lret
push
ret
leave
pop
ljmp
movsb
aaa
sub
ret
inc
fdivrl
aad
sbb
xor
es
imul
pop
dec
cmp
pop
xor
jg
scas
mov
scas
pushf
dec
add
lods
or
ficomps
jp
sarl
add
cmc
pop
dec
push
jnp
cld
cli
push
addr16
mov
jle
in
shl
dec
cmc
lcall
sbb
int
push
sub
inc
sbb
sbb
or
notl
add
je
call
stc
lods
hlt
test
jl
std
cltd
inc
xchg
mov
xor
fld
push
test
ret
mov
add
add
and
mov
imul
lock
pop
xchg
je
stos
or
push
xchg
xchg
shll
pop
lock
jp
sub
pusha
fwait
push
aam
pop
hlt
cltd
sub
lock
ljmp
xor
mov
cwtl
inc
ret
and
out
rcrl
fs
outsb
insl
inc
loop
adcb
repnz
out
dec
mov
jg
push
ljmp
cmp
xchg
scas
das
scas
imulb
pop
pushf
adc
sbb
mov
mov
fs
pop
mov
daa
fs
shrl
jp
rorb
mov
es
nop
lret
mov
jae
adc
xor
into
mov
adc
sub
scas
outsb
pop
jl
pop
sub
call
ficomps
fdivrp
push
leave
xor
aam
pushf
neg
bound
push
jmp
sahf
mov
or
dec
test
addr16
sub
or
addb
fbld
and
in
js
push
into
xor
in
test
inc
test
pop
outsl
pusha
in
fwait
jp
fidivrs
cs
hlt
sbb
push
jne
jle
jmp
push
sbb
add
lea
xor
mov
test
loop
cmp
repz
dec
fwait
repnz
sbb
cwtl
xlat
xchg
sahf
imul
mov
imul
insb
out
stc
adc
mov
sti
mov
imul
leave
int3
cmc
inc
or
jne
out
shl
sbb
inc
dec
and
inc
movsb
loope
push
jle
dec
sbb
jle
call
repnz
pop
adc
and
fsts
adc
jne
out
ret
rcrl
inc
xchg
mov
lahf
push
imul
sub
mov
repnz
int3
mov
adc
mov
iret
xor
pop
cmp
adc
sbb
loop
lret
lods
push
sbb
mov
ljmp
xchg
mov
and
or
pop
or
jbe
sahf
js
and
push
inc
addl
movsl
pop
out
push
push
enter
bound
call
mov
cwtl
mov
push
push
aaa
out
fstps
jecxz
pop
or
sbb
push
je
icebp
pop
nop
sbb
push
mov
cmpsb
insl
or
and
rcll
mov
lea
jmp
gs
scas
fcmovnu
xchg
pop
sbb
cmp
aaa
ficomps
enter
pop
scas
dec
push
xchg
fmuls
pop
mov
dec
xor
push
sub
jo
fstp
mov
dec
dec
int3
sub
loope
adc
in
mov
jns
push
jle
xor
xchg
pop
sub
mov
xchg
fcompl
je
cmpsb
addr16
fdivl
and
popf
push
mov
add
js
scas
out
mov
or
inc
sub
push
aam
fcoml
push
nop
pushf
push
and
pop
pop
movsl
cmp
sbb
dec
testl
mov
jmp
loope
adc
push
dec
shrb
ljmp
and
mov
push
cmp
gs
es
rorl
pop
aas
imul
movsl
mov
sahf
movsb
cmc
mov
nop
pop
jne
pop
fldenv
out
and
out
test
pop
fldt
lcall
sbb
call
popa
and
js
imul
jmp
jno
adc
mov
std
test
mov
add
xor
pop
imul
pop
jg
xchg
and
jl
aas
rep
fdivs
sub
inc
cwtl
inc
mov
adc
fstl
cmp
out
les
stos
inc
imul
cmp
cmpsl
dec
sub
in
lret
add
inc
test
hlt
cmp
ja
cwtl
and
inc
pusha
fistps
xorb
gs
dec
and
mov
or
mov
fwait
mov
adc
or
cmp
das
pop
fimuls
sarb
jp
mov
daa
jno
insl
out
mov
dec
jp
mov
cmc
mov
rcll
das
cmc
or
stos
mov
ds
fcoms
push
push
sbb
ja
push
push
hlt
inc
dec
push
dec
jb
in
gs
or
data16
mov
in
add
icebp
jmp
xor
mov
sub
popf
add
scas
fdivrl
leave
popf
sbb
test
jg
xor
hlt
subb
xchg
mov
packssdw
push
xlat
sbb
orl
fiadds
in
aam
fcomip
shlb
or
jmp
mov
pop
aad
insl
dec
mov
fnstcw
ror
clc
cltd
aas
cmpsb
xor
xor
or
dec
jge,pn
push
or
cltd
je
xchg
pop
mov
inc
pop
int3
arpl
xchg
xor
mov
divb
mov
andl
sub
mov
push
xchg
or
cmp
js
sbb
or
das
cli
divb
int
pop
mov
in
add
pop
and
mov
sbb
test
cmp
mov
notl
and
xor
int
ret
mov
sti
push
inc
lret
test
pop
shrl
hlt
jl
push
or
mov
sub
ret
jg
add
sarb
add
iret
fmul
xor
pop
popf
mov
ja
pop
repnz
enter
lock
into
inc
pop
pop
test
nop
int3
lock
xor
adc
xor
or
outsl
fldt
push
sahf
sub
jo
pop
mov
sti
sbb
xor
sbb
lds
jmp
aam
mov
push
push
dec
push
sub
mov
sub
mov
jnp
shll
fwait
push
cltd
push
push
std
mov
mov
sub
mov
pushf
fucomp
add
minps
xor
bound
pop
xor
jg
test
lret
mov
stc
lea
pop
xchg
in
sbb
pop
xchg
insl
push
cmp
lahf
in
clc
adc
xchg
sahf
testl
out
xchg
aaa
push
jg
pop
cmpsl
add
not
in
adc
leave
pop
rcrl
jecxz
fadd
mov
push
cmp
jbe
mov
or
push
mov
fildl
add
pop
leave
mov
mov
mull
push
sub
sub
das
test
aad
imul
test
stos
stos
in
push
jp
aad
pop
loope
idiv
inc
mov
imul
pop
add
fwait
jg
dec
testl
lret
mov
xchg
pushf
lcall
bound
sub
xor
mov
sbb
repz
and
mov
das
jmp
testb
dec
adc
cmp
xchg
bound
inc
push
pusha
call
lds
xchg
adc
ljmp
mov
inc
les
add
mov
or
inc
jge
lds
pop
pushf
xor
pushl
leave
daa
sub
sub
in
out
in
fnstenv
cwtl
iret
mov
movsb
jg
data16
mov
xchg
jp
dec
inc
ljmp
mov
aas
sub
xor
xlat
or
sub
fwait
ss
mov
sub
jb
mov
push
std
jecxz
add
add
jg
sahf
adc
jo
push
addr16
or
dec
js
mov
push
xchg
call
adc
les
fstpt
daa
aaa
insl
inc
les
adc
add
lcall
cmp
adc
adc
ja
mov
sub
add
test
call
ja
cs
scas
add
mov
ss
aaa
push
xor
push
sbb
les
orl
out
les
stc
stc
sub
or
mov
sarl
fidivrs
and
rclb
es
inc
out
mov
or
lret
mov
clc
leave
mov
inc
ret
lods
and
orl
mov
sub
cli
xor
xor
mov
jbe
enter
lods
cli
jecxz
xchg
repz
mov
mov
mov
cmp
adc
lea
cmp
sbb
or
push
push
mov
push
or
test
cwtl
ficoml
bound
out
adcl
sbb
jle
and
ret
je
cmp
negb
stc
rolb
mov
mov
pop
sub
xorb
push
or
push
push
push
mov
clc
sarl
xor
xchg
int
out
ljmp
xor
push
or
shll
xorb
outsb
inc
sbb
repnz
lds
insl
cmp
lock
mov
sbb
add
and
adcl
pop
jl
in
shrl
stos
mov
lds
shll
mov
enter
xchg
fadds
movsl
lods
xchg
popa
push
mov
mov
lcall
mov
dec
test
inc
cmp
xchg
ds
cmpsl
out
mov
out
stos
jmp
cltd
dec
rorb
add
test
pop
jnp
cmp
adc
add
xor
xchg
iret
sub
sti
jl
sbb
cwtl
push
mov
or
mov
mov
pusha
dec
in
jo
mov
cmc
jp
mov
shr
pop
mov
mov
jp
ss
cld
arpl
add
add
xchg
pop
sub
push
mov
ljmp
mov
adc
cs
daa
imul
sbb
js
popl
icebp
ret
nop
lds
stos
push
xor
lahf
mov
dec
sbb
lahf
xlat
add
adc
lret
mov
xor
pusha
mov
dec
je
cwtl
lcall
push
popa
popa
std
push
cmp
cmp
call
pop
mov
arpl
popa
adc
lock
call
mov
add
mov
sub
pop
stc
add
push
imul
not
neg
aaa
push
mov
jne
aaa
mov
jmp
mov
jmp
dec
inc
dec
and
roll
cmp
call
mov
insl
pop
inc
sbb
sbb
out
dec
loope
push
lock
xchg
lret
dec
fsubrs
fs
ss
test
adcb
xchg
cld
xor
inc
in
dec
ret
xor
loop
in
and
fcoms
rorb
push
call
ds
cltd
push
aam
je
nop
add
test
jo
incl
cwtl
daa
adc
xorb
mov
xchg
dec
pop
es
pop
aad
test
jne
scas
int3
add
popf
xchg
in
not
test
fldt
imul
cmpsb
cmpsb
or
std
sbb
popa
xlat
push
cld
bound
ss
add
std
mov
jl
pop
sbbl
sbb
jne
out
inc
sti
mov
xchg
js
iret
mov
nop
sub
lea
cmpsl
gs
sbb
leave
imull
push
lahf
dec
out
pop
jle
cwtl
jb
jb
and
idiv
cmc
push
jg
cmpsb
cmp
jmp
andb
ret
enter
insb
push
outsl
lret
xchg
sbb
or
sbbl
aad
aas
out
ficomps
inc
push
pop
test
pushf
lea
mov
loopne
ljmp
mov
and
daa
push
cmp
mov
mov
xor
cmc
jecxz
jb
mov
mov
mov
xchg
or
sarb
pop
stc
pop
inc
jns
sahf
jp
out
test
mov
ror
int
lret
out
jns
fcompl
gs
andl
xchg
cmpsb
xor
dec
sbb
sub
mov
add
or
xlat
loop
lret
js
lock
out
pop
fwait
enter
lods
cmpsl
push
shlb
sbb
sbb
cwtl
push
mov
cmpsb
ss
aam
test
adc
or
mov
test
flds
and
fs
in
jle
xor
pop
mov
das
roll
jge
xchg
hlt
inc
cmp
xor
popa
clc
mov
cmpsl
xchg
pop
fiadds
loopne
stos
sbb
pop
int3
enter
mov
jo
add
sub
and
insl
mov
cld
imul
stos
pop
shlb
icebp
gs
mov
jge
pop
test
jb
cmp
sahf
insl
pop
xchg
add
fsts
call
xchg
out
cmp
push
xchg
sub
hlt
sarb
mov
and
mov
nop
adcb
jae
jns
or
fs
mov
sub
or
push
inc
sbb
test
push
and
dec
sbb
cld
jg
push
sub
lods
and
jno
cmp
decl
xor
out
movsl
popf
sub
push
pop
ret
jbe
xor
fwait
inc
push
mov
aad
mov
cwtl
mov
xchg
jp
adc
movb
inc
add
int3
xor
nop
dec
push
loopne
loopne
fsts
pop
jge
and
pusha
mov
push
jge
stos
add
push
jns
aaa
shrb
or
aad
ds
les
stos
sub
sbb
mov
adc
movsl
push
mov
or
inc
mov
popa
sbb
sbb
je
sbb
mov
test
adc
jg
fsubs
xchg
sbb
mov
and
jb
cld
int
or
arpl
cli
and
test
pop
sbb
xchg
lret
add
daa
or
loop
pop
in
mov
aam
cmp
dec
pushf
xchg
fidivrs
xchg
shll
rorl
aad
out
stos
aaa
into
pop
out
dec
or
lret
dec
pop
mov
sahf
pop
sub
js
call
ds
push
pop
outsb
faddp
xchg
cmc
jbe
lds
lods
cmp
cmpsb
xchg
dec
jmp
and
push
aad
fmulp
pusha
add
xchg
inc
xchg
in
add
cmp
data16
sar
daa
adc
lods
push
sbb
push
mov
push
mov
cmp
mov
add
adc
arpl
sbb
and
push
push
xchg
adc
mov
jne
mov
push
cmp
out
mov
fimull
fcomp
add
dec
adc
aad
cld
and
add
sub
out
mov
inc
and
and
insb
ljmp
xlat
test
dec
dec
clc
pop
movsl
sbb
sbb
loopne
mov
and
cltd
shlb
rcr
push
mov
mov
bound
jbe
stos
sti
and
arpl
cmc
dec
pop
mov
loope
lea
jnp
mov
mov
push
sub
and
cmp
cmp
mov
mov
or
dec
in
mov
xor
and
add
lods
inc
cmp
movhps
cmpsl
and
test
mov
test
pop
imul
pop
jno
pop
xchg
mov
in
jae
or
mov
adc
loop
xlat
fisttpll
mov
mov
or
out
test
jmp
push
push
xor
lret
in
push
cmpsl
add
xlat
and
sbb
cmp
rcl
bound
and
cmc
adc
ljmp
dec
jle
push
sbb
loop
movsb
mov
xchg
insb
xor
xchg
test
jb
inc
mov
inc
ljmp
flds
push
pop
loop
push
push
call
adc
pop
in
mov
sub
mov
cmp
call
shll
add
cmp
leave
test
xchg
and
xchg
leave
push
xor
inc
sbb
mov
or
jle
movsl
push
loop
rcrb
stos
pop
sub
and
pop
add
cmpsb
sub
shrb
in
loopne
sub
leave
or
insb
xchg
sub
mov
or
xchg
lods
mov
and
test
xor
les
push
lea
pop
mov
stos
inc
push
hlt
orl
push
jecxz
leave
cld
mov
dec
dec
ss
int
sub
repz
gs
gs
pop
out
push
jg
in
mov
mov
sbb
sahf
adc
mov
clc
inc
adc
add
nop
addr16
mov
dec
cmp
push
movsl
pop
sbb
adc
push
insl
sahf
pushf
mov
fwait
rorl
jne
jle
outsl
aas
call
lock
dec
shrb
and
nop
scas
flds
or
movsb
xlat
jbe
pop
jecxz
dec
mov
pop
mov
xchg
mov
aam
jbe
stc
aam
cld
or
mov
push
insl
daa
test
xor
das
jo
lret
in
idivl
jp
cmpsl
vpunpcklqdq
cli
jo
add
popf
pop
xchg
xlat
das
or
xchg
xor
dec
inc
inc
push
dec
aad
xchg
mov
arpl
add
in
sbb
fistps
fstps
int3
mov
mov
jg
xor
inc
jle
lods
mov
scas
fsubp
popa
xor
movsb
cli
xor
and
fmul
scas
adc
add
mov
shrl
insl
mov
pop
scas
in
dec
loope
inc
pop
repnz
cmpsb
xor
xor
je
shrb
fmul
push
jae
or
rep
xchg
jne
or
sbb
sub
inc
fsubl
bnd
jb
bound
mov
mov
adc
lods
clc
fsubl
cmpsb
aaa
ficompl
gs
pop
in
fimuls
test
gs
lcall
cmp
aaa
cmpsb
or
scas
sbb
inc
jge
sbb
inc
cmpsb
gs
lret
fnsave
sarl
imul
pusha
stc
lds
bound
daa
pop
inc
insl
lea
sub
mov
cmp
mov
push
cmp
pop
std
in
into
dec
xor
xchg
gs
ljmp
xor
jl
and
or
cli
inc
sbb
ja
das
dec
lods
jmp
mov
mov
ja
pop
cmp
sbb
push
push
cmc
imul
mov
pop
and
imul
mov
iret
dec
xchg
jle
ljmp
sahf
sub
mov
cli
dec
inc
into
mov
mov
adc
mov
movsl
ja
mov
stos
insl
inc
test
sub
add
sar
jae
popa
pop
lret
lcall
pop
mov
pop
sub
cltd
data16
je
out
mov
jp
sarb
pop
insb
jmp
xor
imul
xadd
mov
cmp
repz
push
aas
add
call
in
mov
mov
lea
loope
mov
xor
inc
pop
xchg
lcall
jl
leave
xor
sub
jmp
mov
sbbl
fimuls
aad
mov
lcall
sub
jae
gs
ret
fcoml
cmp
data16
adc
pop
inc
xor
sti
jmp
mov
jmp
loope
mov
fidivs
mov
cmc
mov
add
decl
mov
shlb
subb
mov
popa
mov
and
mov
jo
addl
mov
xchg
xchg
push
pop
mov
mov
xor
xchg
mov
aam
xor
xorl
and
lock
jbe
int3
test
adc
mov
int
inc
test
out
movl
repz
mov
mov
pusha
cmp
ja
das
dec
lods
mov
cld
ret
cmp
mov
jo
inc
cmp
inc
lea
adc
or
inc
mov
cmp
pop
paddsw
dec
pop
or
xchg
imul
test
dec
pop
fcomip
adc
adc
imul
pop
or
jl
loop,pn
xor
push
lds
dec
shlb
mov
shrl
popa
pop
inc
mov
lock
bound
cmp
lods
mov
adc
sub
add
inc
inc
inc
push
push
dec
adc
push
and
jbe
imul
scas
jmp
jae
or
add
dec
xchg
repz
in
hlt
cltd
hlt
or
stos
gs
xchg
jbe
mov
mov
shlb
lahf
arpl
jo
imulb
sub
adc
add
cmp
inc
xchg
and
dec
das
rolb
cmp
out
jne
jp
cmp
pop
mov
sub
mov
iret
cmp
mov
fdiv
call
xchg
in
fnstenv
mov
data16
push
mov
adcl
adc
int
adc
jecxz
dec
fxch
sub
sbb
filds
jg
fimuls
shll
nop
sub
jbe
orl
xchg
sub
jo
adc
les
jbe
gs
ljmp
hlt
fisubs
mov
mov
insl
and
dec
xor
mov
mov
pop
ficoms
jle
roll
dec
loope
lea
arpl
inc
enter
jmp
mov
jne
and
pop
mov
inc
cmp
repz
aas
test
mov
lret
fdivr
xchg
adc
or
inc
or
ljmp
aaa
stos
jmp
xchg
pusha
fdivl
cli
fdivl
insb
insb
clc
jg
push
xchg
out
jmp
push
dec
push
jmp
mov
outsb
adc
fldt
push
dec
lcall
push
outsb
les
mov
inc
xchg
sub
lret
lds
pop
fdivrs
fwait
pushf
push
mov
int3
repz
and
out
scas
out
aas
std
pop
xor
cld
add
adc
jmp
sahf
out
lock
mov
cmovo
cld
daa
mov
cmp
pop
sbb
outsb
jmp
test
repnz
inc
ljmp
sub
lret
xor
cmp
imul
jle
ja
in
mov
subl
mov
mov
mov
dec
daa
and
hlt
hlt
push
enter
xchg
sub
push
adc
mov
out
add
out
cmp
hlt
xchg
push
or
gs
adc
jecxz
push
loopne
and
cmp
or
mov
pop
xchg
inc
stc
aaa
lret
xor
adc
fmul
test
pop
fnstcw
dec
or
mov
lret
vmptrst
lret
inc
or
fcmovne
push
xchg
xchg
in
lock
and
jg
in
mov
in
xor
das
xchg
sub
sub
xchg
mov
and
xor
xor
daa
aam
out
fwait
mov
iret
aas
push
dec
mov
cltd
cmp
inc
mov
dec
push
in
and
jp
or
mov
xor
inc
mov
orl
imul
jmp
pop
mov
shlb
clc
in
fdivrl
mov
loopne
jmp
inc
jg
lret
lea
lahf
or
or
add
push
loopne
ret
clc
sahf
fcmovnu
sti
add
sbb
push
rcrb
shl
test
xchg
rol
imul
add
pop
leave
xor
adc
sbb
dec
dec
in
xchg
mov
aam
inc
xor
fdivl
sti
jno
shll
push
iret
bnd
les
dec
fcomps
mov
loopne
icebp
aam
sbb
xchg
cld
loope
fs
mov
stos
add
nop
xchg
mov
std
popf
dec
mov
pop
push
xor
ja
mov
aad
sti
dec
dec
push
add
adc
roll
push
add
pop
adc
fsubrs
adc
add
and
movsb
mov
mov
mov
jbe
mov
xor
mov
or
ja
sbbb
outsb
hlt
cmp
leave
adc
jb
adc
xor
inc
subb
xchg
and
or
mov
lock
leave
jae
es
xchg
mov
loope
pusha
lds
sub
xor
lret
test
pop
int3
sub
enter
dec
out
and
fnstenv
ss
mov
jns
aaa
cltd
inc
loop
lea
lret
mov
dec
inc
leave
push
jle
sub
pop
and
push
add
adc
mov
es
test
add
xchg
sbb
push
repz
xchg
xchg
and
andl
mov
sarb
negb
pop
das
cmp
ret
outsb
stos
testb
add
inc
pop
inc
insl
clc
ss
cmp
push
inc
roll
loop
flds
xchg
xchg
dec
mov
jae
fstps
mov
int
inc
jns
sub
mov
dec
xor
sub
pop
push
into
cmp
cmc
and
cmp
add
loope
sub
adc
jne
xchg
loope
loopne
or
cwtl
inc
scas
inc
jae
out
shlb
dec
lcall
xor
seta
in
cmpsb
sbb
call
jmp
es
mov
or
pop
jae
pop
cmpl
in
sub
ret
or
cmp
adc
jmp
mov
cmpl
xchg
inc
mov
jecxz
cld
push
das
gs
inc
cmp
pop
fsubrs
mov
inc
imul
nop
sahf
cld
test
jne
and
dec
ljmp
out
xor
push
fiaddl
jo
sbb
insb
repz
rol
movsb
mov
sbb
mov
sub
cs
lods
mov
filds
sti
sub
call
out
lock
out
mov
jmp
sbb
rclb
adc
ljmp
nop
mov
outsl
aaa
jne
and
push
push
dec
mov
pop
mov
and
cmp
in
clc
mov
hlt
and
pop
js
jg
sbb
push
sub
aam
int3
push
scas
mov
ds
sbb
in
sub
or
adc
pop
lret
les
and
pop
push
pop
and
jecxz
negb
jge
mov
fsubl
dec
inc
dec
pop
lods
pop
sbb
and
lock
repnz
mov
pop
or
mov
push
sarl
mov
mov
or
inc
inc
jbe
fidivs
sub
and
lods
jmp
xchg
add
fs
sbb
and
mov
pop
fstl
imul
fisttps
or
in
in
shrb
mov
and
in
mov
lods
cmpb
xor
jne
and
gs
pop
clc
fists
jl
xlat
and
rcr
adc
xlat
jle
rol
xchg
test
inc
cmp
add
adc
jle
add
ds
adc
xlat
push
aad
fcmovne
mov
or
lea
repnz
and
mov
jle
aad
push
ffree
xchg
add
test
scas
jno
lahf
dec
sbb
push
mov
sub
fcmovnbe
xor
ret
inc
inc
mov
cmc
xor
inc
mov
mov
mov
jp
divl
cmp
or
mov
and
push
ljmp
jge
cmp
nop
lea
lret
sbb
test
mov
xor
pop
pop
mov
test
cmc
sub
mov
je
stc
iret
jo
fnstenv
fnsave
arpl
movsb
fldcw
test
outsl
mov
in
inc
xor
shlb
jecxz,pt
cltd
lcall
cld
push
fildl
scas
adc
or
test
xchg
cmpsl
pop
mov
adc
aam
sbb
push
movsb
and
or
das
scas
xchg
push
mov
int3
pusha
fxch
repz
jle
xor
insl
test
leave
sub
clc
mov
sub
mov
push
sbb
and
aad
repnz
and
pop
jle
xchg
and
adc
aaa
fs
sti
pushf
xchg
push
sub
or
cld
shrb
sbbl
sub
or
fisubrl
pop
aas
mov
cmp
push
rolb
mov
loope
push
stc
ljmp
xor
jns
notl
lcall
add
xor
add
mov
sub
cld
addr16
test
add
mov
aaa
jne
leave
leave
dec
fwait
aas
jo
int3
or
jle
pushf
shll
loopne
cmp
pop
xchg
aaa
mov
mov
imul
mov
mov
inc
mov
loopw
pop
adc
lcall
lcall
dec
push
xor
and
dec
jb
and
adc
pop
addr16
xor
movsb
cmp
adc
imul
loopne
lea
and
jl
jecxz
pusha
fsubl
push
pop
mov
push
lcall
inc
int
cltd
aas
aam
push
cmp
sub
cmp
or
xchg
mov
lret
sub
loope
insb
enter
sbbl
in
push
shrl
sub
popl
loope
or
sub
shlb
and
sbb
lods
push
sub
std
push
jns
cwtl
outsb
rcpps
mov
aaa
les
mov
stos
mov
and
in
mov
sti
xlat
fsubp
xlat
ds
push
mov
sub
xor
xor
pop
loope
or
ret
adc
mov
or
cmpb
adcb
xchg
add
gs
test
xchg
mov
xor
and
std
shrl
jo
fdivrs
lahf
xor
repnz
mov
lods
jg
sub
fidivrl
cmp
fdivrs
rorl
mov
js
pop
cmp
dec
rcrl
pop
fs
mov
mov
test
push
les
and
test
dec
or
hlt
jmp
sub
ds
test
pusha
or
out
loopne
notl
mov
ror
in
xchg
in
xor
ret
adc
push
ljmp
std
fnstsw
outsb
mov
mov
outsb
sti
dec
mov
in
jl
test
jnp
jle
adc
fdivr
push
jb
popf
hlt
or
or
push
push
sbb
jno
lret
inc
mov
test
sub
mulb
mov
shr
clc
jl
js
fwait
xchg
dec
lock
out
sbb
dec
icebp
js
gs
adc
xchg
gs
mov
pop
mov
or
pop
xchg
lret
ret
cmp
clc
in
popa
cld
test
repnz
adc
iret
push
les
or
imul
out
fiaddl
push
push
ficoms
rorb
cmp
cltd
pop
sbb
pop
mov
mov
aaa
insb
adc
ret
push
jg
ja
pop
push
ret
sub
xchg
mov
pop
ret
add
inc
xchg
mov
push
out
imul
pop
jne
in
pop
jl
inc
test
gs
lea
jge
leave
imul
push
xor
mov
cld
orb
es
movsl
xchg
popf
sub
push
outsl
fistpl
cltd
add
mov
push
dec
hlt
cmp
push
mov
sbb
cld
cmp
jecxz
es
xlat
cmp
mov
dec
ja
test
dec
lahf
es
sub
int
cmp
neg
imul
les
mov
and
jnp
mov
js
outsl
imul
ljmp
mov
scas
nop
adc
imul
incl
push
push
iret
popa
out
add
dec
outsl
fists
pop
fstl
in
push
inc
jne
ret
jmp
sbb
mov
daa
test
shrl
in
mov
pop
adc
in
gs
jns
cwtl
es
mov
cld
andb
sub
rcl
lea
fadds
clc
dec
push
adc
jo
sub
out
pusha
lret
adc
adc
xchg
out
jbe,pn
inc
dec
jns
mov
add
sub
adc
fmulp
pop
repz
jno
hlt
test
add
dec
jg
aas
push
mov
mov
mov
aaa
xor
outsb
fisubs
aam
sbb
cvtps2pi
adc
or
push
sbb
jne
dec
sub
pushf
sbb
enter
push
cltd
or
fwait
ljmp
mov
push
testl
sbb
cmp
mov
jo
jmp
jmp
out
mov
pop
jne
xlat
jno
stos
adc
and
xor
ds
lahf
movb
cmpsl
cmp
cmp
loopne
aam
push
and
mov
popf
mov
adc
cmc
pusha
fisttpl
cmp
cmp
sarl
inc
or
ja
pop
mov
sub
subb
xor
imul
mov
cmp
push
insb
loop
insl
pop
insb
scas
int
lds
fwait
movsl
loop
cwtl
outsl
mov
lahf
mov
lret
adc
pop
jl
mov
sub
icebp
fcomi
addr16
mov
push
push
subb
aam
dec
mov
xchg
cmpsl
push
cwtl
dec
cmp
aad
mov
mov
cmpsb
in
mov
and
leave
icebp
adcl
cmp
out
adc
mov
lcall
mov
in
pushf
fsts
loopne
mov
adcl
dec
loopne
push
pushl
bound
cmpsb
notb
cli
enter
adc
add
pop
cmpsb
sbb
adc
insl
xchg
and
dec
mov
jo
int
push
les
dec
mov
aas
cld
pop
xor
sbb
loopne
add
dec
and
mov
inc
cld
and
jge
xchg
shlb
jnp
and
jb
stc
mov
lods
inc
mov
fisttps
mov
sti
cmp
popa
pop
and
push
inc
imul
mov
inc
inc
and
mov
pop
mov
imul
pop
cmpsb
insl
outsb
cmpsb
bnd
lock
leave
inc
xchg
aas
dec
cvtps2pi
inc
jp
jbe
outsb
sbb
pop
mov
lock
jmp
dec
fs
ficoml
loope
and
sub
jecxz
push
sbb
ror
dec
adcl
mov
pushf
sub
orb
sti
in
jle
adc
std
loopne
xchg
push
mov
movsb
add
shll
jecxz
jecxz
popf
repnz
test
mov
out
xor
xchg
ljmp
std
inc
xchg
dec
mov
sbb
jns
mov
stos
cmpsb
dec
imul
jg
xor
mov
aam
or
ljmp
jae
add
int3
mov
jmp
adc
add
cmp
push
xor
insb
xchg
lret
movsb
adc
cmp
lret
fwait
mov
xchg
mov
addr16
push
sahf
movsb
call
mov
xchg
idivb
cltd
cli
insb
xchg
lods
addr16
es
out
sbb
shlb
mov
mov
pop
lea
outsb
push
stc
xchg
bound
sbb
lea
jbe
xor
enter
jge
fdivrl
cli
adc
mov
shl
pop
fs
mov
xchg
sahf
stos
mov
mov
test
pop
mov
movsb
push
test
push
enter
dec
adc
fsubs
std
xor
dec
xchg
inc
test
mov
loop
in
cmpsb
add
pop
xor
stos
inc
push
out
sbb
aas
pop
imul
pop
fstpl
arpl
imul
xor
jl
scas
sbb
pusha
out
or
int
clc
mov
ja
mov
hlt
pop
addr16
icebp
and
ljmp
xchg
sub
adc
jnp
mov
aad
sbb
cltd
in
pop
cmpsl
fistps
push
pop
leave
and
pop
and
repnz
outsl
lcall
enter
sub
divb
push
lock
lods
push
xchg
testb
jge
jns
mov
pop
xor
testb
icebp
inc
jmp
std
popf
iret
je
push
adcb
mulb
xchg
std
sbb
mov
pop
mov
mov
movsl
mov
cmp
mov
jp
xor
mov
das
ljmp
mov
adc
fcos
notb
aaa
add
cltd
jmp
mov
adc
lock
fnclex
call
test
sub
int3
push
fs
dec
jmp
ds
and
sbb
sub
add
pop
rcl
das
cmpsl
gs
add
xchg
es
lret
cmp
ss
jmp
aad
sarb
aam
jno
xor
imul
jmp
mov
add
jne
inc
sbb
fs
sub
es
mov
std
mov
add
stc
dec
mov
cmp
mov
pop
nop
mov
scas
xor
jmp
popa
lods
push
lea
push
add
mov
sbb
stos
adc
add
out
rcrl
push
loopne
pop
dec
xchg
add
mov
lcall
or
inc
dec
pop
push
mov
or
adc
movsb
add
out
cmp
mov
sub
push
mov
lods
mov
adc
clc
pop
mov
fidivl
or
cltd
es
push
stos
jmp
push
and
mov
fldt
cmpsl
jo
sub
pop
lds
mov
jne
jmp
sti
inc
mov
adc
inc
aas
xchg
xor
inc
lret
mov
push
sti
adcb
lret
push
incl
lahf
shrb
cld
adc
mov
push
mov
shr
call
xor
push
sub
add
jl
sbb
lock
mov
xor
pop
icebp
adc
aaa
inc
adc
fucomp
and
popa
pop
das
jb
jae
test
adc
sub
cli
lret
dec
test
xchg
inc
scas
push
jge
xchg
add
xor
test
scas
mov
sub
je
scas
in
xor
push
fyl2xp1
adc
dec
repz
jbe
stos
push
mov
sub
mov
es
dec
ss
aas
aad
cmpsb
mov
and
adc
iret
out
mull
mov
insl
fiaddl
pop
mov
shl
jg
rcrb
call
sub
lcall
outsb
mov
mov
push
stc
add
sub
insb
adc
mov
jge
shll
push
imull
dec
or
push
insb
and
dec
insl
sbb
add
push
lret
mov
imul
pop
push
loop
mov
shll
ds
dec
imul
mov
mov
mov
aas
pop
lock
jecxz
stos
mov
sbb
xor
lods
test
in
push
sarb
push
adc
pop
lock
cmp
or
cmpsl
mov
dec
adc
mov
mov
mov
repnz
aaa
push
sub
xor
leave
fwait
mov
out
inc
mov
pusha
xor
lahf
cmpsb
pop
stos
sti
or
sbb
and
dec
inc
test
pmovmskb
xor
dec
arpl
mov
loope
sub
call
sub
out
jae
pushl
push
mov
out
mov
outsl
or
bound
testl
xchg
mov
stos
add
scas
call
scas
mov
add
andl
jp
ret
flds
jl
sub
jge
push
scas
xor
imul
or
inc
sahf
cmp
data16
dec
js
inc
ljmp
insl
cmp
rorb
dec
js
push
add
xchg
test
es
hlt
push
push
clc
sub
pusha
push
jmp
test
out
fisubrl
jp
inc
xor
ss
mov
je
adc
adc
fidivl
xor
sub
inc
and
aaa
lret
jl
or
mov
add
jnp
cmp
lret
dec
fnstenv
leave
cmp
push
mov
out
insb
movd
scas
sub
decb
add
or
push
leave
loop
idivl
in
das
sbb
cmpl
fwait
lods
lahf
jne
sub
pop
call
add
sub
adc
sub
mov
lea
fwait
cmp
xor
push
arpl
pop
mov
insb
mov
jne
lahf
mov
add
lret
fs
jge
repnz
sub
xchg
aam
inc
mov
lcall
mov
subl
stos
or
push
xor
mov
dec
jecxz
rorb
cmp
movsb
inc
cmpsl
lods
add
or
test
jecxz
fcomp
adc
mov
jge
cs
int3
das
mov
and
mov
ja
hlt
sar
enter
out
mov
sub
mov
lea
and
shll
test
pop
cmp
xor
mov
and
shrl
data16
adc
addr16
notb
out
sub
pop
les
xchg
std
mov
pop
aad
ja
adc
vpunpckhbw
loop
and
or
mov
and
jge
or
xchg
pop
mov
add
fimuls
popf
bound
or
in
mov
test
ljmp
sub
add
jge
dec
sbb
call
sub
mov
push
movsb
scas
xor
cmpsb
cmp
cmc
xchg
cs
scas
xlat
test
cs
in
xor
inc
and
sahf
mov
flds
imul
cmp
add
adc
jge
insl
test
cmpsb
mov
movsl
lea
jge
pop
mov
mov
xor
pusha
mov
and
pop
xchg
add
pop
inc
push
jl
dec
mov
xchg
sbb
int
cmp
pushf
sbb
sub
popa
mul
rcrl
xchg
insb
pushf
jno
std
pop
lcall
std
adc
pop
mov
sahf
incb
outsb
daa
cmp
stos
cmp
sbb
push
in
adc
fcomps
or
dec
push
leave
lea
jecxz
lea
mov
idivl
xchg
pop
dec
out
xchg
dec
enter
repnz
mov
lods
or
pop
sub
clc
clc
mov
xchg
movsb
ret
imul
mov
pusha
and
and
jmp
mov
in
lea
xchg
jle
xchg
inc
jno
sub
mov
and
push
jne
pop
push
in
or
ret
xchg
ror
pop
std
cmp
movl
ret
dec
imul
and
jno
bnd
pop
sub
pop
cmp
fwait
test
mov
insl
mov
and
repz
outsl
idivl
dec
movsl
cwtl
andl
cwtd
aas
mov
std
sub
xor
inc
push
sbb
sub
ja
xor
sti
adc
jg
imul
dec
mov
loop
or
mov
mov
pop
and
addb
push
xchg
subb
ljmp
aas
aad
xor
pop
push
sbb
xchg
add
sbb
jp
push
scas
jae
cmp
std
pop
sub
and
sub
or
enter
xor
fxch
test
test
outsb
push
mov
cs
ljmp
inc
xor
xor
pop
sub
mov
lds
add
shll
mov
jle
pop
nop
or
jb
jle
cmp
into
fstl
xor
pop
out
aam
jmp
xchg
push
xor
rcll
pop
mov
imul
call
aad
xchg
push
sub
xor
mov
out
loopne
lcall
pop
xchg
mov
inc
sub
mov
aam
sbb
or
mov
decb
or
dec
sarb
or
mov
sub
shrb
cmp
add
mov
push
lds
add
pusha
xchg
inc
sbb
fisubrl
in
clc
lods
push
push
or
mov
push
and
das
cmpsb
dec
xchg
out
cmpsl
ret
jbe
sbb
fidivl
lcall
xchg
outsl
sub
mov
test
mov
hlt
and
cmp
and
adc
loope
or
mov
or
jge
dec
enter
push
ds
into
aad
test
inc
arpl
insb
pcmpeqw
dec
hlt
add
xchg
stc
shl
stos
ror
xor
cmp
int3
lods
hlt
or
sbb
mov
rorb
xchg
stos
jmp
insb
push
sub
iret
push
add
add
and
daa
push
ljmp
push
xor
or
fldl
pushl
push
fstpt
ljmp
add
sbb
push
andl
repnz
jge
or
fldcw
sub
jge,pn
popf
fisubrl
mov
and
adc
pop
es
jne
push
cmp
ret
in
imul
pushl
stos
sbb
out
cwtl
rcr
ret
std
pop
scas
test
mov
xchg
dec
mov
loopne
ss
sub
enterw
cmp
mov
ds
mov
clc
fstl
int
dec
lcall
cld
cmp
sbb
movsl
repz
in
fdiv
cmc
jo
fsubp
pop
mov
pop
mov
stos
test
inc
cmpsb
les
cmp
jae
clc
mov
outsb
and
cmp
nop
push
stos
sbb
je
outsb
les
cwtl
inc
xor
adc
movsl
push
cmp
enter
lds
xchg
ljmp
out
mov
insl
call
sbb
dec
lret
cmc
lahf
movsb
xchg
pop
test
icebp
push
rclb
sti
mov
push
lock
dec
inc
jo
mov
jecxz
les
push
out
mov
mov
xor
test
arpl
testb
xchg
lcall
inc
stos
arpl
sbb
scas
sbb
imul
roll
out
test
mov
cmp
ljmp
sarl
shl
fsub
pop
cld
dec
adc
insb
mov
ret
in
fiadds
xor
sahf
adc
std
jno
jmp
imul
mov
aad
movsb
adc
loopne
in
or
pop
je
sbb
ret
ret
test
adc
push
stos
dec
jmp
sarb
mov
pop
xchg
aam
mov
or
xchg
jo
pop
pop
jp
add
xchg
sbb
dec
imul
cmpsb
or
lret
fidivrs
ljmp
and
xchg
sbb
loop
ret
jecxz
nop
xor
sub
sbb
mov
jecxz
adc
lock
xchg
push
pusha
orl
pop
rolb
sbb
test
pop
mov
xor
orl
xor
push
lods
push
bound
xor
clc
in
movsl
fs
lret
outsb
stc
push
push
cwtl
sti
outsl
jmp
aad
jns
inc
stos
pop
cmc
xor
jae
add
sbb
or
fsubl
in
aas
jle
pop
inc
out
leave
fwait
stos
push
jo
mov
xchg
xor
sub
aam
test
rcrb
mov
add
nop
enter
fiadds
inc
stc
jne
jle
cli
fstpt
mov
shll
ds
cmp
je
mov
xor
and
jo
jno
and
cmc
outsb
add
cmpb
sbb
push
sbb
xchg
xlat
enter
out
jecxz
inc
cmpsb
pop
sub
adc
aas
mov
mov
mov
cmp
jo
cmp
shll
int3
xchg
lcall
mov
leave
movsb
jb
xchg
pop
jg
fwait
cmpsb
insl
out
and
hlt
add
stos
xor
fcmovnb
mov
popf
mov
add
popf
adc
aad
jnp
test
in
sub
adcl
fldcw
jo
mov
lea
add
xchg
mov
scas
cld
pop
xchg
jge
jae
cmp
jb
movsl
div
add
les
outsl
cmc
xor
pop
jl
mov
pop
lcall
dec
pop
test
insl
rorl
dec
sub
push
inc
loop
xor
aad
out
movsl
jo
mov
xchg
ficompl
pop
cltd
mov
ljmp
lret
inc
adc
jbe
shlb
ret
push
cmp
lea
and
loop
inc
stos
xchg
frstor
out
pop
out
xchg
or
inc
adc
cwtd
push
or
lds
push
cmp
std
out
shll
arpl
jb
xchg
insb
adc
mov
sbbb
call
cmp
mov
rcl
xor
dec
cmp
int
sbb
mov
lods
test
sbb
xchg
out
jmp
dec
adc
andl
test
stos
std
lretw
lods
add
int3
std
idivb
dec
xchg
fildll
add
movsb
dec
dec
loop
push
std
xchg
and
jge
push
xchg
add
imul
adc
dec
cs
pusha
outsl
cmpb
pop
jno
push
imul
mov
push
xlat
mov
xchg
imul
and
lahf
les
or
out
fdivr
int
jecxz
call
sub
dec
ja
sbb
test
mov
out
imul
rorl
push
je
and
movsb
pop
mov
cmp
or
sbb
outsb
sbb
pop
ds
push
sbb
imul
add
mov
in
cwtl
adc
cmp
inc
or
cltd
xchg
mov
pop
daa
adc
jb
stc
add
xchg
sub
cs
loop
cmp
add
sbb
and
cmp
jae
sbb
and
test
je
xor
shll
enter
cs
test
fs
aas
add
adc
xchg
aam
and
call
sub
xchg
popa
pop
sub
pop
mov
or
in
and
jle
lea
out
repz
data16
adc
shrb
cmp
cld
scas
mov
jnp
cmp
clc
iret
sbb
jge
xor
int3
stc
dec
lcall
mov
dec
mov
pop
sbb
adcb
into
mov
xorl
inc
jp
mov
decl
push
and
push
xor
inc
inc
xor
and
jnp
jl
cld
adcl
xor
jp
aas
js
sbb
mov
jns
dec
mov
inc
push
push
jle
push
lea
les
jbe
test
mov
adc
push
or
push
stos
rcr
push
std
jmp
cmp
sbb
andl
sub
fcmovnb
cli
mov
pusha
leave
out
sahf
les
dec
cmp
leave
add
push
dec
pop
mov
sub
cmpsb
js
jg
and
pop
or
movsb
mov
enter
in
mov
adc
andb
sbb
mov
leave
jecxz
lcall
lds
mov
enter
frstor
mov
mov
dec
sbb
mov
cmp
cmpb
mov
adc
faddl
cmp
or
dec
out
lahf
mov
outsb
test
pop
repnz
inc
les
xchg
push
sub
and
dec
adcb
enter
scas
rorl
or
cld
pop
insb
xor
fimull
hlt
lds
jbe
in
jmp
jb
inc
insb
jns
xchg
das
arpl
imul
push
cli
cmpb
inc
xchg
adc
decl
lock
dec
fwait
xlat
cmp
loopne
dec
stos
dec
or
pop
pop
xor
popa
inc
xchg
push
mov
out
loop
test
jnp
or
nop
mov
pop
aas
sbb
movsl
repnz
xor
pop
loop
pop
mov
clc
cmp
inc
and
lcall
aas
inc
arpl
out
sub
cltd
es
hlt
sub
data16
sub
sti
lods
sbbl
aaa
mov
mov
xchg
lods
xor
pop
jnp
insl
dec
sub
inc
test
cmpsl
mov
addr16
icebp
xchg
ljmp
jns
mov
pop
test
mov
fsts
ljmp
pop
pop
popa
or
and
daa
xor
mov
adc
int
push
mov
push
dec
imul
outsl
out
push
jecxz
pop
scas
out
sbb
sbb
loopne
loope
fs
adc
sbb
imul
push
or
jecxz
or
cmp
add
loop
stc
std
adcl
jns
mov
and
xor
lds
sbbl
lea
fwait
sbb
stc
push
insb
ret
cmp
mov
pop
stos
movsb
inc
sub
ljmp
xchg
fsubl
sub
mov
add
xchg
fcomip
push
sbb
cmpsl
cli
das
or
xor
or
popf
cmp
dec
cld
lret
xchg
add
icebp
pop
fmull
add
xor
ljmp
jnp
push
mov
in
cmc
and
cld
sahf
adc
arpl
mov
dec
mov
mov
inc
aas
push
xchg
adc
jle
hlt
pop
jbe
ret
pop
pop
fcoms
push
jg
xchg
xchg
ds
lock
mov
cmpsl
aam
xchg
pop
add
mov
push
xchg
jae
push
fs
fnstcw
adc
sti
sbb
lret
outsl
push
dec
mov
fwait
sbb
mov
outsl
sbb
adc
sbb
leave
cli
xchg
out
mov
and
dec
push
pop
stc
xchg
xchg
rorb
loopne
add
inc
xchg
mov
mov
lock
aas
mov
xchg
sbb
rcr
pop
sub
add
daa
sub
mov
mov
sarb
jg
adcb
push
inc
gs
mov
jbe
xor
mov
lret
lcall
ficomps
pop
push
sub
shll
aas
es
lret
dec
pushf
fsubr
data16
sbb
pop
lcall
lahf
ffreep
mov
scas
imul
xor
or
mov
jp
iret
push
jnp
cmp
push
dec
cwtl
subl
adc
mov
outsl
mov
pop
push
arpl
inc
cmpsl
idiv
inc
lret
out
pushf
test
inc
push
and
add
mov
adc
aam
pushf
fldenv
rclb
out
divb
mov
push
dec
ljmp
and
mul
aaa
mov
daa
adc
fdivl
and
es
push
fs
lret
jl
ds
ret
shl
xor
jecxz
aad
lcall
out
inc
insl
dec
test
rorl
popf
or
fidivl
mov
pop
shl
iret
je
mov
lods
aas
scas
in
inc
nop
xchg
stc
dec
je
or
mov
inc
dec
mov
push
mov
dec
int
push
and
jecxz
mov
addr16
mov
pop
mov
mov
inc
subb
lods
hlt
addr16
jle
xor
scas
fnstenv
pop
add
das
int
lds
jb
daa
xchg
dec
fsub
sub
imul
push
or
dec
jg
les
mov
addr16
adc
movsl
in
adc
jbe
stc
lret
push
push
xchg
xchg
xor
popa
sbb
pop
mov
sub
adc
xor
nop
cmp
mov
loop
mov
addl
lds
stos
jmp
and
sub
data16
mov
scas
in
pop
push
xchg
jl
xor
inc
mov
lock
jle
popa
mov
mov
loop
cmpsl
inc
adc
lds
sbb
inc
sub
jae
inc
sbb
dec
enter
and
cmp
cmp
les
outsl
jns
dec
arpl
dec
fnclex
ja
fs
andl
imul
mov
icebp
inc
in
inc
or
fwait
pop
jo
xor
or
push
int3
mov
js
jecxz
mov
movsl
inc
push
jg
movsl
popf
adc
push
cmp
sti
and
and
sti
sbb
repz
lcall
iret
jns
sub
dec
imul
xchg
lcall
outsb
mov
xor
xchg
mov
data16
xchg
add
sub
cmc
xchg
lock
pop
and
popf
mov
inc
jnp
stc
sbb
rcl
cli
or
mov
int3
in
xor
push
in
es
cltd
push
add
sbb
sub
pop
cmpsb
or
dec
jnp
cmp
fimull
sub
cwtl
cmp
fldcw
and
in
outsl
mov
xlat
shll
nop
lret
sahf
pop
cmp
dec
and
imul
sti
cmovnp
orb
aam
jg
push
push
jnp
aaa
in
pop
inc
cli
cmp
sub
sub
dec
shl
mov
outsb
sub
adc
pop
in
into
lea
add
in
adcl
in
repnz
fisubrs
jge
lret
cmc
cs
add
mov
push
jnp
arpl
cmpsb
dec
add
arpl
xor
test
gs
mov
jb
std
push
mov
push
shll
or
mov
push
and
lds
jge
push
repnz
adc
fwait
pop
es
push
out
test
xchg
repz
sbb
sub
add
sub
imul
xchg
push
pop
and
mov
mov
and
sub
jmp
repnz
cs
call
lcall
jbe
imul
and
sub
sub
fimuls
cmp
dec
hlt
stc
stos
lds
xchg
xchg
sub
test
adc
hlt
nop
sti
aad
ss
push
enter
push
sub
mov
lea
push
pop
push
cmpsl
push
pop
andl
dec
gs
xor
mov
rorb
lods
mov
sbb
jbe
inc
jle
test
mov
sub
lret
out
mov
push
push
or
stc
sbb
std
pop
mov
adc
mov
in
pusha
add
sub
gs
loopne
lock
push
repnz
add
pop
clc
in
push
dec
adc
cmp
xchg
sahf
adcb
negb
inc
mov
add
xchg
rorb
aas
es
enter
mov
lock
ljmp
push
xchg
mov
lcall
and
cmc
push
push
test
pop
xor
mov
xchg
fwait
cmp
add
pop
xor
cmp
gs
jp
cld
cmp
xchg
inc
inc
mov
loop
mov
or
cltd
cltd
and
fdivl
sahf
adc
inc
xchg
cmp
lock
adc
push
dec
cmp
cmpsb
daa
xor
mov
xor
in
stos
pcmpeqd
jmp
cld
dec
xor
sbb
imul
mov
push
das
add
hlt
outsb
dec
pop
es
bnd
add
andl
jnp
jbe
dec
popa
jne
aam
ror
inc
loop
mov
or
sarl
push
test
jae
ss
movsb
outsl
push
inc
in
fdivr
adc
inc
lods
fnstenv
test
mov
push
dec
jns
test
mov
and
cmp
je
lea
pop
jle
dec
fcmovbe
mov
mov
dec
cmpsb
out
icebp
ss
call
into
mov
orb
adc
sar
lock
jge
xor
hlt
jl
mov
dec
or
loop
outsl
pop
fidivrl
movsb
sub
push
ds
cld
neg
xchg
or
or
je
ret
fcmovu
insl
and
in
push
cmpsl
xor
jg
mov
sbb
in
gs
cmpsl
scas
mov
push
outsb
or
aad
xor
xor
lea
cmp
mov
push
xlat
loope
or
mov
xchg
xor
xchg
push
add
xchg
add
cmp
pop
je
and
sub
dec
sbb
jbe
mov
cwtl
pop
aad
xchg
adc
xchg
pop
cmp
sti
shl
subb
insb
adc
and
and
dec
mov
loope
adc
cmp
aad
imul
leave
jo
mov
inc
mov
fdivs
jge
in
mov
rorl
mov
mov
cwtl
xchg
lret
rclb
mov
inc
orb
dec
ret
push
lds
cmpsb
push
insb
and
lock
mov
in
push
leave
mov
movsb
pusha
mov
push
lock
mov
rorb
outsb
jle
imul
sub
scas
scas
sbb
mov
lcall
dec
sar
dec
pop
cltd
scas
insl
in
cmp
aaa
adc
sub
push
movsb
mov
fisttps
in
cwtl
xchg
mov
pop
fistps
dec
test
test
sahf
or
nop
jmp
add
xchg
aad
notb
pop
imul
sbb
dec
pop
jl
mov
or
xchg
add
lock
and
stos
jecxz
cmp
or
std
pop
stos
mov
add
dec
adc
mov
stc
add
push
shll
xchg
pop
sub
mov
stc
xor
fildl
mov
or
insl
sbb
inc
xchg
gs
xor
pop
dec
inc
jg
dec
add
in
aas
mov
fistpl
repz
in
push
ljmp
mov
sub
popa
shll
lods
fstpt
cmp
jmp
iret
and
jge
movsb
gs
shrl
orb
sbb
movsl
xchg
lahf
call
add
fistps
push
scas
xchg
aad
inc
xor
mov
mov
mov
pop
lret
and
mov
js
mov
inc
clc
and
add
mov
mov
and
out
jne
cs
dec
daa
jg
jecxz
jnp
push
mov
clc
pop
inc
aaa
inc
xchg
ret
cmpsl
lret
lret
sbb
lds
sub
jp
hlt
xor
adc
mov
xor
dec
cmpsl
pop
push
inc
clc
jbe
mov
mov
mov
add
push
mov
rcl
cmp
inc
test
lahf
jns
push
mov
adc
sub
xchg
jge
or
fsqrt
lods
and
les
push
pop
jl
pop
mov
mov
mov
mov
int3
shlb
jge
call
rorb
addr16
jno
lds
push
scas
int3
push
in
cmp
out
mov
mov
pop
push
cmp
push
test
mov
ret
jecxz
xor
sti
in
pop
sti
fimull
aam
fistl
shlb
insb
push
cltd
sbb
shlb
test
idiv
mov
stos
in
movsb
pop
sbb
ja
pushaw
cmpsl
movlps
jo
ret
inc
fstpt
movsb
adc
jp
test
sahf
gs
orl
test
jle
lods
push
dec
adc
mov
mov
push
pop
mov
mov
xchg
lds
ja
fsts
xor
scas
xchg
leave
mov
pop
cmp
icebp
insl
xor
dec
sbbl
fs
jmp
mov
stc
xor
addr16
xor
push
adc
xchg
or
shr
ret
int3
push
loope
cmp
sub
leave
inc
jbe
ja
jmp
nop
fcmovb
in
loop
inc
ljmp
roll
mov
mov
test
xchg
lea
sub
lds
notl
test
push
push
xor
stos
aam
inc
es
cmp
push
ja
inc
movsl
cli
out
push
mov
data16
jle
add
subl
loop
mov
fldenv
sti
adcb
ret
push
dec
push
jo
jnp
iret
jb
cli
enter
pop
out
pop
sbb
popa
xor
xorl
xor
cmp
cmc
mov
mov
enter
pop
negl
sbb
daa
mov
mov
insb
and
or
fldl
inc
out
enter
cmp
test
pop
aam
cli
test
dec
stc
adc
inc
inc
clc
xor
cmp
xor
jo
bnd
pop
inc
insl
mov
sbb
adc
push
mov
dec
testb
movsb
pop
repnz
add
cmp
push
dec
cmp
je
pushf
cmpsl
das
pushf
loopne
and
lret
jle
sub
push
les
repz
ss
xor
and
cmp
cmp
movsb
lods
jg
adc
leave
ret
mov
ljmp
fisttpll
adc
ja
dec
dec
dec
push
fsts
insb
inc
out
mov
or
add
testl
mov
out
fisubrs
cmp
push
lret
popa
mov
int
push
lcall
xchg
pop
mov
dec
bound
lods
jnp
xchg
push
cmpsb
sub
adc
repz
sub
loopne
adc
lret
loope
in
sarb
xchg
stc
popw
les
mov
jns
fsubrs
mov
sahf
mov
and
fmuls
shll
cld
out
std
mov
pop
pop
fwait
xor
cwtl
mov
jmp
cmp
sub
push
sbb
mov
inc
rcrb
xchg
shrb
outsb
jno
das
push
pop
jae
jno
dec
dec
stos
jmp
aaa
add
bound
adc
std
mov
inc
xorb
inc
mov
inc
mov
imul
ljmp
jl
cmpsb
int3
xchg
and
hlt
sbb
or
lea
adc
and
sbb
scas
stos
ds
xchg
insb
nop
movsl
xorl
sub
scas
push
pop
jle
add
test
mov
jb
pushf
cli
cwtl
rcrl
mov
in
pushf
jo
imul
lds
sub
inc
ljmp
jecxz
cltd
push
mov
lods
pop
sbb
pop
rolb
lret
add
inc
lock
scas
into
out
lret
rcrl
aad
rolb
jae
int3
mov
mov
jbe
dec
icebp
stos
inc
pop
jb
jae
imul
sbb
out
xor
movsl
add
gs
push
popf
rcll
xlat
scas
call
test
scas
mov
daa
pushf
push
cwtl
sbbl
mov
xor
stos
outsb
xlat
dec
fs
int
dec
push
loopne
adc
aas
cld
mov
mov
cmp
dec
sti
pop
jae
cmp
pop
or
loope
mov
cltd
xor
fimuls
pop
jns
fsubs
lods
fwait
lods
pop
fnstcw
insl
dec
or
sub
in
pushf
sub
lea
outsl
mov
pop
mov
imul
dec
decb
out
sbb
add
push
dec
jl
or
call
dec
lss
inc
ljmp
or
push
stos
push
push
ja
inc
das
lea
rol
push
test
dec
hlt
mov
cmp
mov
fstp
cmp
adc
inc
out
mov
mov
decb
jge
rcll
sbb
sbb
hlt
mov
inc
push
sbb
insb
test
and
xchg
xchg
bound
push
ljmp
lea
jecxz
cld
int
mov
inc
push
int
sahf
ret
mov
add
pop
cmpsb
mov
insb
adc
and
lds
mov
xchg
hlt
pop
mov
dec
nop
daa
push
into
ljmp
cmp
popl
push
repz
mov
in
frstor
ret
pop
xor
mov
std
xchg
push
sub
out
dec
jp
fsubr
ss
push
and
cmp
mov
mov
test
push
into
out
imul
inc
test
imul
sub
sbbb
push
mov
push
sarl
jmp
and
jo
ljmp
gs
scas
shlb
jbe
fcmovbe
movl
push
mov
mov
cmp
adc
or
fwait
adc
and
jmp
add
lret
mov
pop
in
in
gs
and
inc
and
or
xchg
lret
mov
ja
nop
loop
aas
cli
jae
dec
mov
sti
cmp
sti
out
ss
and
lcall
cmc
popf
mov
sarb
inc
mov
lds
dec
push
lods
int
and
gs
xchg
decl
ficomps
jae
dec
stos
cltd
loop
les
shl
mov
js
jecxz
sub
adc
scas
loop
out
pop
mov
mov
cmp
mov
pusha
int3
insb
hlt
pop
pusha
scas
push
xchg
leave
movsb
imul
fimuls
xor
sbb
sahf
faddl
ror
lock
dec
sub
les
adc
push
mov
repnz
test
mov
inc
cld
int3
mov
test
lahf
cmp
stos
adc
mov
int3
js
stc
cwtl
aas
cmp
scas
jae
push
fs
fisttpll
lret
iret
les
jbe
and
push
lahf
xchg
unpckhps
pop
movsb
es
mov
std
xchg
sarl
loop
inc
sub
mov
pop
push
outsb
cltd
sub
test
and
jne
adcl
into
jg
add
pop
sub
repz
pop
imul
adc
test
add
dec
fisubs
jne
sarb
cli
shrl
test
icebp
mov
push
ror
in
add
lret
ret
add
repz
xchg
sbbb
add
xchg
jmp
or
jno
hlt
mov
sbbb
daa
add
stc
or
pop
leave
inc
test
xor
add
mov
jl
mov
lret
out
imul
cmp
fisubrs
repnz
insl
rorl
sbb
mov
scas
test
or
outsl
ficoms
in
mov
lods
test
inc
jmp
mov
jmp
in
and
sub
mov
jle
jmp
xlat
xor
enter
inc
addr16
or
or
ficoml
cmp
icebp
icebp
cld
xchg
iret
pop
mov
sub
inc
lods
mov
cli
push
sarb
cmpsl
and
sub
repnz
jl
sub
inc
sub
mov
add
xchg
lods
in
push
mov
and
mov
adc
sbb
mov
loopne
xor
int
pop
call
push
ds
pop
inc
aas
adc
shlb
loop
ficoml
js
into
fldcw
adc
imul
out
and
int3
cld
mov
div
pop
cmp
aas
push
test
ret
scas
je
mov
test
pusha
pop
fcompp
xor
jge
and
and
push
pop
out
lods
sarb
mov
nop
clc
sahf
out
insb
and
inc
inc
pop
es
pop
shl
int
fdivrs
mov
loope
in
jmp
and
mov
push
cmc
inc
lret
fcomip
push
in
pop
sbb
stc
mov
in
pop
leave
mov
shll
scas
les
mov
mov
or
mov
add
mov
inc
rcrb
cmovs
out
push
adc
jo
sbb
lods
xchg
std
sbb
xor
jae
mov
sbb
jle
lock
xchg
and
mov
insb
pop
dec
out
inc
jle
es
push
popf
mov
fsubs
sbb
call
pop
xor
pop
push
rolb
das
sub
cld
loopne
pusha
jne
fists
popa
dec
adc
ds
addr16
cmc
mov
sbb
popl
leave
aas
bnd
pusha
or
inc
in
mov
mov
mov
push
fnstsw
inc
dec
mov
mov
arpl
mov
repz
xchg
jg
jp
mov
sbb
pop
lds
or
and
or
cmp
pop
inc
aas
repz
xor
cmp
lret
mov
add
mov
iret
aas
mov
lret
clc
imul
lock
pop
sbb
imul
mov
incb
mov
adc
nop
and
repz
fadds
push
add
add
in
pop
dec
fmull
mov
inc
stos
out
xor
movhps
or
jnp
and
sbb
mov
loop
nop
nop
inc
cmp
je
mov
xchg
pop
and
and
mov
xor
mov
out
in
mov
mov
fs
mov
lock
cli
aam
mov
mov
inc
in
out
adc
push
test
xchg
ret
mov
jl
out
dec
popf
repz
fistpll
mov
aam
xchg
enter
and
mov
cli
xchg
sahf
pop
xor
mov
lock
push
movsl
cltd
cmpsb
mov
mov
sbb
sbb
loopne
mov
jns
ljmp
imul
fwait
mov
pop
push
cltd
in
add
pushf
pop
jl
jb
adc
into
or
testb
pushf
xor
fwait
push
sub
add
jae
add
mov
in
sbb
cmp
fnstenv
sti
or
mov
mov
ret
je
inc
add
cmp
pop
adc
movl
sti
mov
mov
mov
push
rcrb
movsb
shrb
pop
popf
ljmp
sub
sub
pop
inc
jno
popa
sub
and
enter
add
push
push
lea
jns
std
jecxz
jbe
jge
or
in
in
test
cs
mov
ds
xchg
jae
dec
cltd
inc
pop
push
aad
mov
jns
mov
ja
or
inc
mov
lods
mov
and
sti
mov
xchg
sbb
test
test
test
loope
dec
ja
push
or
sahf
lds
pop
jmp
dec
xlat
adc
dec
add
jl
aam
aaa
cmp
imul
cli
cmp
scas
icebp
loope
fcoml
movsl
test
sub
mov
xchg
mov
sub
es
mov
lods
cld
fcmovu
les
ds
clc
inc
xchg
sub
imul
popa
xchg
pusha
in
jo
sbb
testb
adc
cmc
adc
or
lahf
xchg
cmc
pop
jmp
out
ds
push
xor
call
mov
jle
push
test
out
pop
xor
mov
popf
dec
je
mov
sub
mov
xchg
pop
repnz
xorb
adc
repz
cli
jmp
js
mov
and
xor
jp
inc
mov
cmp
mov
je
mov
xor
adc
dec
mov
sbb
and
jle
pop
cmpl
call
stos
mov
ljmp
adc
fstp
mov
and
inc
jae
push
sub
rcrl
inc
push
inc
inc
movsb
loopne
out
xchg
and
sahf
mov
pop
add
fs
and
rorb
scas
or
lods
jb
inc
jge
aad
mov
cli
xchg
push
scas
push
aad
xchg
push
mov
inc
push
sbb
adc
xchg
or
adc
ljmp
loopne
ud1
loop
test
mov
fsubrl
sti
inc
jo
xchg
fimuls
sub
ds
pop
pop
pop
sahf
dec
mov
inc
inc
int
and
pop
aad
xchg
insl
scas
into
sbb
xor
mov
jp
fsubrl
cwtl
cmp
adc
shll
sbb
cmp
mov
cli
adc
xchg
or
cmp
xchg
pop
add
jbe
xor
pop
roll
sbbb
inc
cmp
push
les
xchg
dec
push
sbb
cltd
dec
mov
in
loopne
lods
add
add
jle
dec
lods
push
push
adc
aam
lds
sbb
mov
inc
in
mov
cmp
les
xor
adc
adc
mov
cltd
lods
lds
in
es
lret
fwait
jbe
mov
dec
sbbb
cli
push
bound
in
cwtl
dec
lods
das
aam
lahf
push
jne
loop
xchg
and
mov
jmp
fsub
bound
push
aaa
or
subb
popa
daa
test
pop
sbb
sbb
mov
out
xchg
lock
std
adc
jp
aam
jg
shr
adc
call
imul
fnstcw
or
cwtl
in
push
subb
jge
dec
cmp
rcl
jg
outsl
imul
subb
xchg
inc
rol
jns
xchg
mov
in
mov
inc
cmp
gs
out
jb
mov
cmp
xchg
or
cs
push
xor
and
add
insl
iret
adc
inc
out
pop
aaa
shrb
xchg
subl
add
jb
fildll
pop
aad
mov
sbb
xchg
push
out
inc
sub
and
mov
cmp
mov
jae
and
dec
cmp
in
fists
das
xor
scas
pop
inc
inc
or
adc
sub
or
mov
xor
or
or
lret
fdivrs
jmp
push
cltd
cmp
sub
or
xor
push
push
or
dec
mov
notb
mov
rcl
jo
or
sbb
insb
int3
sub
gs
jp
xchg
add
les
lea
enter
or
sub
inc
lods
pop
cmpsl
loopne
mov
sub
stos
mov
cld
jecxz
pop
adc
mov
sub
test
xchg
fdivrs
sub
cld
xchg
mov
mov
dec
aaa
xor
push
mov
leave
fwait
cli
and
daa
test
fimull
inc
sbb
sbb
bound
cmc
ja
mov
insb
sub
jne
mov
pop
pop
inc
push
pop
jnp
push
sub
cmc
into
jb
push
mov
add
lods
rcll
fs
out
fistps
or
cltd
cmp
push
pop
dec
cltd
push
aam
addr16
sbb
xlat
pusha
pop
stos
inc
jg
dec
inc
iret
dec
mov
add
mov
jmp
sub
sbb
test
mov
test
jno
neg
xchg
jns
mov
aad
lods
inc
cmpsb
jmp
dec
fldcw
leave
dec
es
mov
sbb
ljmp
lods
xor
jb
mov
push
xchg
fwait
mov
and
cli
or
shll
sarb
xchg
xor
test
leave
int
push
dec
int3
or
pop
rorl
mov
xchg
test
pop
or
movsb
adc
stos
lcall
xchg
scas
sub
pop
pop
fwait
shlb
mov
jns
push
push
mov
cmpsb
aad
cmp
lahf
sbb
push
xchg
xchg
mov
and
inc
adcb
mov
aas
lods
js
je
arpl
jp
jecxz
mov
and
std
xchg
cwtl
dec
jne
xchg
mov
gs
xor
popa
sbbb
test
xchg
add
cmp
stos
je
inc
cld
movsb
enter
scas
loop
clc
cmp
pop
jae
mov
dec
and
cmpsb
xchg
loopne
and
leave
aas
inc
push
jl
mov
cs
xchg
out
in
in
cmp
mov
pushf
ss
fiadds
cld
lea
and
push
notl
dec
cmp
mov
test
jo
or
call
mov
fmull
sahf
jnp
jl
fmull
insl
testl
push
sbb
dec
xchg
in
ja
roll
dec
and
inc
sahf
mov
lods
cmp
out
xchg
mov
shll
outsl
adc
xor
pop
pop
adc
enter
dec
cmp
cwtl
inc
push
in
mov
cmc
sbb
fdivp
pusha
imul
rclb
add
fwait
pop
xchg
inc
test
mov
aas
inc
sub
fimuls
mov
lods
jge
pop
pusha
aaa
mov
jns
shlb
push
jno
dec
lcall
fsubrs
js
mov
mov
sbb
js
pop
loope,pn
ss
fcoml
inc
call
popa
clc
fisttpll
inc
mov
rclb
out
testb
adc
mov
test
xor
jne
inc
pop
or
ds
xchg
adc
outsb
aas
int
dec
stc
xor
jp
adc
scas
sbb
int
sbb
mov
add
cltd
shll
push
and
cmpsb
mov
mov
scas
rorl
insl
in
mov
cmp
dec
jbe
gs
fmuls
cmp
jns
daa
sub
mov
sahf
xchg
and
mov
ret
mov
pop
mov
lock
ret
xadd
test
lret
mov
test
or
testl
mov
cmp
mov
nop
aam
cwtl
mov
cli
shrb
pop
imul
lods
mov
inc
cmp
xchg
ret
push
out
xor
adc
push
out
clc
or
and
push
data16
test
or
out
xor
dec
mov
jno
loope
or
shlb
sti
leave
pop
xchg
int3
pminub
js
aaa
jns
stos
jmp
push
in
pop
push
fwait
jne
sbb
in
add
fistpll
test
push
ljmp
pop
enter
pop
inc
xor
inc
loopne
xor
mov
xor
mov
popf
push
lods
testl
iret
dec
xor
jb
inc
inc
xchg
lret
and
sahf
lcall
test
xchg
mov
pop
ljmp
aam
outsl
pop
pop
xchg
popf
mov
mov
xchg
in
push
lea
rclb
pop
adc
push
pop
movsl
inc
push
jmp
out
test
push
loope
int3
jg
inc
test
sbb
dec
sbb
clc
setb
idivl
and
into
test
bnd
add
inc
mov
jno
push
sub
pop
add
mov
or
and
test
movsb
outsb
std
gs
into
push
pop
pop
pop
cli
add
dec
pop
push
aam
sub
test
xor
and
out
ja
push
lods
clc
cmpsb
push
mov
jg
lahf
jb
xlat
hlt
sub
dec
into
mov
ljmp
xchg
movsb
add
pop
cmpsl
dec
sbb
clc
mov
scas
dec
fisttpll
fdivrl
xor
fsubs
sahf
orb
xlat
add
and
xor
inc
adc
aam
fwait
je,pt
pop
push
xor
push
jnp
jb
and
xor
add
add
push
mov
sbb
xchg
fwait
push
ljmp
in
cmp
mov
lods
mov
mov
push
ret
pushf
push
icebp
fwait
jns
adc
js
lret
lcall
or
jmp
pop
in
pop
push
push
inc
test
sub
mov
mov
loope
leave
bound
cmp
xchg
inc
mov
xchg
rcr
outsl
daa
or
fnstenv
arpl
cmp
pop
aam
mov
xchg
jo
mov
pop
xor
mov
fs
out
loope
sti
or
ljmp
adc
decl
js
cmp
dec
pop
stos
daa
push
mov
rolb
mov
imul
xchg
mov
xchg
les
adc
std
movsb
push
aam
mov
mov
mov
sbb
mov
std
out
imul
mov
lret
testl
lret
mov
sub
inc
and
sub
mov
xor
mov
sbb
movsb
pop
cld
in
out
movsl
mov
jl
cltd
push
in
xchg
pop
in
push
or
in
cmp
dec
leave
imul
mov
or
jmp
in
dec
pop
mov
mov
das
sbb
add
mov
addr16
push
call
subl
mov
scas
int
or
cmp
ret
test
hlt
scas
mov
sub
jb
stc
fisubs
shlb
sbb
lods
lahf
fld1
xor
outsl
xchg
adc
ffree
jo
pop
scas
inc
repz
das
lds
adc
ds
sub
loop
sbb
shrl
comiss
outsb
jno
mov
cmp
psubb
xchg
outsl
hlt
adc
addr16
sub
mov
lods
test
mov
and
popf
dec
fsubr
movsl
xchg
inc
gs
adc
jl
mov
fsubl
sub
sti
sub
movsb
mov
xchg
and
daa
addr16
inc
mov
into
jp
bound
test
rcrl
inc
dec
add
sbb
cmc
fisttpll
test
loope
add
jge
aad
decl
in
popl
out
int
adc
in
push
adc
fnstsw
adc
cmp
and
mov
inc
xor
outsb
fldenv
mov
cmp
repz
mov
cs
outsl
sub
testb
cli
insb
mov
outsb
mov
test
shl
loop
jno
stos
cmp
jns
pop
test
xchg
and
adc
cld
inc
aas
popa
int3
or
imul
fnstenv
dec
mulb
mov
mov
xor
gs
lds
test
sub
in
test
clc
or
add
in
lock
xchg
cltd
jmp
mov
in
cmp
push
mov
cltd
inc
stos
mov
lock
mov
mov
mov
ljmp
std
cmp
cltd
sbb
jnp
jl
sbb
std
dec
lcall
dec
cmpsl
in
inc
mov
cmc
cwtl
jecxz
in
movsb
in
fcmovbe
repz
lahf
add
lock
popa
jmp
pop
cli
adc
data16
imul
push
incb
punpcklwd
lcall
pushf
adc
dec
rcll
jle
adc
adc
fwait
imul
daa
lods
movsl
fcmovbe
pop
repnz
repnz
dec
adc
sbb
cmpsb
fiadds
xor
jae
mov
xor
fsubp
mov
mull
dec
push
adc
jg
pop
pop
or
dec
pop
in
sti
cmp
in
stos
sub
and
insb
xchg
pop
jns
ret
mov
push
jno
bound
je
fs
fdivr
pop
test
dec
push
or
sub
mov
out
adc
fwait
int3
add
adc
push
cld
out
test
mov
jp
and
mov
sti
pop
mov
sub
loope
adc
push
jo
adc
cmp
arpl
das
mov
mov
xor
jb
andl
add
adc
xor
pop
dec
lret
dec
sub
mov
sub
inc
dec
push
in
push
lahf
push
aam
dec
loope
cmp
mov
or
in
pop
out
inc
inc
inc
xchg
cli
jb
add
xchg
sub
sub
xor
and
aas
enter
xor
cltd
and
lret
int3
pop
mov
cs
cmp
inc
cmp
pop
iret
pushl
stc
out
repz
sub
into
enter
fld
ss
mov
lock
xor
ja
xchg
sbb
jmp
stos
xchg
push
jge
xchg
and
push
add
sub
pusha
hlt
ds
stos
mov
mov
jnp
scas
sbb
imulb
lods
lea
push
scas
ds
mov
mov
sub
dec
and
add
xchg
lea
outsb
leave
cmp
or
or
adc
test
cmp
mov
mov
xor
ja
and
in
cmp
xor
dec
cmp
push
inc
xchg
in
ljmp
loop
mov
cltd
xadd
loope
adc
jb
mov
cs
mov
outsb
xor
repnz
ljmp
ss
jl
clc
int3
dec
jb
push
andl
scas
aas
in
das
lcall
xchg
pop
fdivrs
xchg
add
mov
cmc
mov
sbb
sub
outsl
out
xor
push
or
adc
cmpsb
mov
add
push
insb
inc
int3
xchg
jl
lock
loop
popf
js
or
aad
cwtl
xchg
sbb
add
lret
mov
cmc
xchg
lea
dec
push
lahf
sbb
mov
aaa
sub
jmp
xchg
mov
int
xor
ds
xchg
data16
popf
mov
and
inc
adc
stos
jnp
adc
and
nop
fwait
add
pop
cmp
aad
repz
nop
ds
mov
mov
aad
pop
imul
loop
ficoml
dec
xchg
roll
push
sti
dec
popl
lods
sub
add
out
shl
cmp
xlat
loopne
sbb
pop
add
mov
mov
test
jle
shlb
sub
dec
dec
mov
xor
mov
dec
inc
test
shrb
dec
les
mov
inc
lea
push
shrb
fidivrl
xor
cld
mov
cmp
inc
dec
lahf
push
in
and
xchg
je
xorb
fnstcw
fwait
dec
xor
jp
and
jp
sar
fisubs
ret
sub
mov
in
pusha
add
sub
popf
pusha
clc
out
out
add
popf
testl
xchg
lahf
rol
and
sbb
loop,pt
xor
xchg
repnz
out
popf
adc
xchg
sbb
cmpb
push
xor
push
les
ljmp
or
mov
imul
addr16
or
push
mov
mov
pop
and
adc
cmp
ror
mov
adc
mov
lahf
aad
or
les
dec
stos
and
into
pop
xlat
call
aas
jnp
insb
push
pop
pop
jno
cmp
stos
call
jmp
push
mov
fnsave
cmpsl
scas
test
gs
push
cld
outsl
fdivp
add
mov
or
sbb
fdivrl
ljmp
iret
push
mov
and
mov
xchg
or
ja
xchg
adc
repz
pop
les
je
shll
xchg
sbbb
or
out
js
sahf
pop
lods
mov
inc
enter
xchg
inc
adc
sub
ffreep
sbb
mov
adc
pop
mov
repz
adcb
hlt
nop
fidivs
push
or
sbb
mov
xchg
cwtl
jae
jg
mov
mov
cmc
test
outsb
imul
jnp
aas
xchg
or
xchg
insb
aam
mov
or
sub
cmpsb
ljmp
in
push
fsubrl
pop
call
rolb
jo
push
repz
testb
jns
rol
mov
sub
subb
add
jp
repz
loopne
bound
cltd
dec
adc
int
push
cmp
rorl
push
sub
sar
and
mov
scas
ljmp
and
jl
bound
or
pushf
xor
pop
mov
xor
bound
sti
iret
in
or
addr16
test
mov
mov
pop
pop
fwait
mov
cmc
sub
clc
push
fmuls
insl
add
clc
int3
mov
pop
lret
dec
pop
sub
flds
xor
push
mov
inc
xor
popa
popf
cmp
mov
dec
push
cwtl
sbb
pop
cmp
scas
jp
lea
mov
jecxz
pushf
push
imul
js
in
and
repnz
jle
cs
push
popf
mov
pop
inc
sbb
mov
lods
aam
aad
and
pusha
mov
jge
and
pop
enter
cmp
test
xor
mov
mov
popf
fiadds
add
fnstsw
ret
out
enter
xchg
cli
arpl
mov
dec
mov
sub
dec
xor
test
outsb
xor
neg
repnz
xor
mov
sub
mov
adc
jle
dec
cwtl
sarb
jno
nop
dec
push
lahf
sbb
jp
in
decl
cld
inc
stc
enter
arpl
les
xchg
add
mov
mov
loop
icebp
sub
mov
xchg
ret
and
lret
pop
ljmp
mov
jmp
push
cmp
adc
sub
cltd
dec
add
dec
subl
fwait
addr16
adc
fs
dec
add
jecxz
push
shr
cmp
mov
inc
rcrl
jae
sub
shr
dec
test
jp
fsubs
sub
decl
ret
cwtl
idivb
inc
cmp
jnp
loope
mov
pushl
rcr
jns
add
mov
pop
das
fbstp
or
pushf
xor
add
int3
lea
cmp
test
fcomps
mov
push
loopne
xchg
dec
pop
mov
cmp
std
xor
sub
sbb
popf
popf
nop
int
mov
adc
gs
jl
dec
or
fsubs
jo
cmp
lods
jmp
int3
add
leave
cmp
adc
sbb
fidivrl
mov
movb
push
popa
ljmp
sub
aaa
push
pop
mov
mov
daa
mov
cmpsb
push
in
shr
mov
mov
fsubrl
test
or
cmp
xlat
fidivl
inc
sub
push
xchg
adc
jno
and
das
fidivs
or
sub
pop
leave
or
fwait
aam
lea
push
mov
inc
xor
hlt
ss
and
cmpsb
adc
inc
mov
add
or
test
sub
mov
sbb
xchg
ficoml
ds
fcomps
scas
movsl
js
clc
div
test
jg
and
out
int3
mov
push
sbb
sbb
push
and
lods
jp
adc
pusha
inc
dec
mov
clc
mov
push
jns
test
call
xor
or
mov
scas
dec
jne
add
addr16
fnstenv
or
lock
push
lret
loop
lahf
mov
mov
jle
jno
imul
xor
scas
sti
outsl
and
call
movsb
jnp
ljmp
cmpsb
imul
sbb
pop
push
std
addb
sub
cs
jns
imul
jmp
or
push
in
insb
mov
das
fcmovnb
in
adc
out
and
in
mov
mov
push
shrl
scas
and
icebp
iret
stc
inc
je
add
out
out
pop
fisubrs
mov
push
call
push
das
xorb
adc
test
mov
xchg
push
lea
jmp
mov
xchg
dec
movsl
mul
inc
sti
out
adcl
push
ja
xor
lcall
push
inc
xchg
mov
jg
fwait
gs
adc
push
jb
cld
aas
inc
shr
fisubrl
xchg
dec
addb
lret
rol
sbb
jbe
dec
inc
fwait
je
adc
mov
fistps
test
mov
clc
push
jg
add
cmp
adc
inc
jle
shlb
mov
lods
xlat
xchg
add
in
lods
xchg
sub
push
lret
jno
in
mov
sub
insl
sti
pop
push
dec
sbb
out
lret
jecxz
bound
roll
push
fimuls
xor
mov
gs
adc
sbb
lcall
popa
jns
mov
dec
and
lret
push
int3
outsb
and
pop
rclb
aam
fldl
add
jmp
or
xor
shl
sub
and
pop
aam
add
jno
pop
aas
xchg
sbb
out
fdivrs
fcmovnu
push
movl
cmpsb
mov
push
and
fwait
mov
test
adc
leave
ss
mov
lahf
adc
xchg
mov
out
fisubrl
pop
sbb
je
xchg
dec
push
out
andl
rep
sub
xchg
dec
notb
cmp
push
mov
popa
mov
int
addb
and
xor
int3
test
mov
mov
mov
imul
pop
jle
enter
hlt
jl
movsl
in
dec
or
in
in
pop
mov
jae
fsubrs
leave
adc
adc
pop
mov
les
mov
pop
movsb
icebp
cmpsl
mov
or
sbb
mov
or
push
mov
fcoms
data16
add
sbb
scas
hlt
inc
mov
aas
or
int3
test
ja
and
cwtl
pop
adc
aaa
add
test
scas
sbb
shlb
movsb
test
dec
push
cmp
ss
es
sahf
inc
inc
push
inc
cmp
out
mov
xchg
sbb
and
push
mov
sahf
jg
loope
mov
or
pop
dec
dec
sub
add
xor
andb
testb
jle
outsb
cltd
add
dec
insl
jp
aad
adc
loopne
xchg
je
not
adc
lahf
and
cld
cmp
cld
push
clc
pop
dec
pushf
pop
fwait
mov
shrl
out
sbb
cs
inc
dec
cmp
mov
das
cmp
xor
add
pop
adc
xor
push
add
test
mov
dec
mov
pop
pushf
leave
pop
inc
inc
scas
dec
jns
mov
pop
cld
pop
mov
and
outsb
negl
movsb
shlb
mov
mov
leave
add
fcmove
jle
push
sbb
sub
cmp
xor
ror
fadd
lods
cltd
movsl
jnp
xchg
adc
dec
dec
pop
or
lea
inc
adc
jo
cmpsl
repz
leave
pop
scas
ret
test
in
push
push
pushl
jmp
xchg
xor
cmp
dec
or
jg
mov
hlt
cmpsl
movsl
dec
push
aam
xchg
cmp
test
xchg
out
bound
pop
in
nop
lret
sub
sbb
and
cmc
jno
and
dec
stc
aaa
fwait
sti
lds
or
mov
jnp
cs
jecxz
dec
out
adc
mov
mov
pop
fnsave
or
int3
adc
movsb
adc
mov
add
sbbb
pushf
pop
xor
aad
addr16
lea
js
xor
pop
pop
divb
xor
cmp
adc
mov
sub
pushf
push
dec
aaa
inc
mov
adc
cmp
dec
push
neg
xor
and
cmc
cmp
xor
inc
or
dec
addr16
inc
mov
lods
rorb
test
xor
cli
das
mov
sbb
call
clc
sub
mov
into
scas
in
ljmp
lea
cmp
icebp
pusha
xchg
add
jg
adc
movl
fucom
movl
sub
adc
add
stos
inc
and
data16
jns
int3
pop
shlb
mov
or
lea
inc
and
gs
lret
mov
dec
data16
mov
ja
iret
mov
and
sbb
sub
fcomip
cwtl
xor
dec
inc
jmp
xchg
rcrl
mov
mov
xor
out
cmpsl
subl
add
push
xor
iret
pop
hlt
test
mov
sahf
dec
inc
jg
add
mov
or
jo
repnz
fs
fbld
cmp
cmp
call
decb
js
cmpsl
dec
push
cli
cltd
sbb
in
mov
mov
fs
outsl
xor
out
dec
xor
pop
mov
stos
or
mov
mov
mov
test
sub
cld
fwait
insl
jge
jg
ret
pop
or
dec
jns
orl
xor
xlat
in
push
call
hlt
mov
fdivrs
scas
push
dec
and
daa
jle
and
xor
pop
dec
mov
jp
sub
pop
scas
aad
fwait
or
cmpsl
ljmp
jp
shll
pop
inc
xchg
enter
iret
cmc
cwtl
sub
pop
pop
loope
or
push
aam
dec
mov
cmp
into
push
mov
imul
xor
inc
push
or
mov
hlt
jns
add
insb
pushf
mov
bound
push
shll
loop
pop
nop
push
hlt
fs
xchg
push
dec
test
shufps
cmc
lcall
and
sbb
inc
inc
mov
adc
cmpsb
cli
pop
arpl
xchg
mov
push
push
add
repnz
mov
das
test
aas
pop
or
jnp
push
sub
sub
push
mov
xor
xchg
add
test
jle
push
adc
sub
jmp
inc
dec
xor
mov
push
mov
shl
faddl
lds
xor
sub
xor
jne
inc
or
sub
jno
les
pop
push
and
loop
adc
jno
lret
sub
mov
in
shlb
ljmp
mov
dec
jg
push
insb
test
fadds
xchg
leave
jge
mov
mov
ja
cmpsb
jecxz
mov
lahf
pusha
pop
sbb
mov
fbld
and
and
jbe
mov
aam
push
call
mov
lahf
arpl
dec
xor
shrl
mov
shll
and
fstpl
aad
cld
cltd
mov
adc
pop
addr16
adc
shl
xor
adc
inc
mulb
rcrb
stos
sbb
cli
push
sbb
mov
gs
inc
leave
mov
mov
mov
xor
std
sub
mov
lahf
push
mov
icebp
mov
stc
ret
xor
lea
inc
push
xor
fucom
je
mov
push
mov
mov
sbb
mov
scas
in
dec
movsl
loop
outsl
out
mov
push
mov
daa
xor
scas
cli
sub
add
mov
xor
pop
fcmove
pop
cmpsb
sbb
mov
jbe
cmp
rol
mov
push
mov
cmp
push
and
ret
sub
outsl
imul
jo
fst
jno
jp
hlt
mov
out
cwtl
imul
les
mov
lahf
in
adc
jno
insl
push
pop
cmp
sub
or
push
lds
test
sub
lds
mov
jns
or
popf
mov
mov
xorl
push
mov
mov
adc
inc
fstpt
mov
push
es
cmp
sbb
xor
ss
stc
mov
clc
add
and
loop
push
jmp
inc
stc
rcr
inc
or
lret
mov
clc
test
mov
jle
mov
cmp
cmp
xor
add
and
aam
mov
dec
iret
shl
dec
adc
pop
out
int
and
ljmp
push
call
lahf
dec
xlat
call
mov
sbb
cmp
std
or
in
jp
add
and
cmpsl
sub
mov
js
pop
push
dec
adc
lret
ret
mov
cmpsb
and
dec
outsl
cli
jae
sbb
jge
sbb
push
icebp
std
push
fimuls
pusha
gs
mov
in
mov
cwtl
and
stc
scas
int3
cmp
inc
les
cmpsb
repnz
jecxz
jle
push
test
jo
lods
ret
fsubrl
mov
push
or
in
mov
das
out
dec
insb
sahf
mov
push
adc
cmpsb
pop
into
ret
pusha
mov
jecxz
insb
notl
mov
orb
in
shlb
and
aaa
ficoms
sbb
arpl
fcompp
cli
aam
xchg
aas
mulb
xor
sub
fwait
mov
fwait
loop
and
je
js
sbb
jno
je
jb
push
js
pop
mov
sbb
cmpsb
jp
mov
xor
jg
cmpsl
and
inc
rolb
mov
popa
push
cmp
mov
dec
andb
add
and
xchg
xchg
sbb
sbb
inc
xor
mov
out
xchg
aam
xchg
notl
fcoml
add
rolb
in
mov
je
scas
mov
pop
and
notb
add
movsl
add
repnz
lods
or
mov
push
jle
add
push
cmp
cltd
cmp
push
sub
fidivs
movsl
into
sahf
sbb
in
or
ret
mov
sub
mov
leavew
test
cmp
into
aad
rorb
jae
int3
test
mov
mov
add
stos
push
adc
popf
and
mov
rolb
cmpb
mov
mov
roll
dec
pop
fldt
aas
push
push
or
jmp
inc
mov
ret
mov
cmp
loope
jg
xlat
cltd
nop
stc
jg
jge
xchg
mov
scas
adc
cltd
adc
xchg
mov
adc
fwait
insb
pop
in
jg
arpl
xchg
sub
cmc
out
jle
idivl
xorl
mov
dec
sub
fisttps
push
sub
jno
aas
mov
cmp
pop
insb
mov
cmp
stos
cmp
mov
push
or
xor
aaa
adc
xchg
test
jns
inc
loope
push
insl
jp
lea
movsb
js
mov
sub
mov
adc
mov
movsb
xor
push
fwait
mov
notl
repz
mov
mov
mov
sub
push
cmp
pmaddwd
lret
mov
in
leave
mov
pop
xchg
cmp
mov
js
xchg
clc
test
in
mov
adc
inc
in
loopne
out
pop
mov
xchg
scas
test
pop
or
xchg
cld
scas
mov
lret
dec
xchg
call
orl
mov
and
push
jae
pop
mov
clc
mov
daa
mov
jmp
add
dec
push
dec
icebp
xor
cld
test
vpunpcklwd
inc
shll
popf
and
push
push
ds
mov
outsb
push
pop
test
popa
shll
lods
or
xlat
dec
mov
jge
add
xchg
out
ss
enter
jge
and
adc
ret
sbb
data16
xor
push
mov
into
pop
daa
inc
fwait
jp
cmp
dec
in
scas
cmpsl
aaa
js
ja
jns
aas
outsl
lods
or
mov
imul
jecxz
icebp
cmp
loope
fildl
cwtl
mov
and
xchg
movsl
rorl
jnp
mov
push
sub
movsb
mov
cwtl
ja
in
pop
cmc
xchg
inc
outsl
xchg
in
and
icebp
loope
arpl
jns
xchg
pop
mov
imulb
outsl
cmc
lods
push
jo
jno
movsl
adc
adc
fbstp
push
in
rcll
dec
mov
jmp
mov
pop
mov
inc
ss
andb
fstpl
cmp
fcmovb
and
push
pop
push
popf
mov
jle
mov
add
mov
lock
shrb
add
pop
pop
xor
jmp
je
jle
hlt
lcall
jle
xchg
push
aad
scas
test
pop
js
mov
les
jb
mov
dec
mov
sbb
hlt
mov
mulb
xchg
mov
or
ds
enter
fs
nop
popf
cs
lret
inc
iret
xchg
push
ds
mov
pop
push
push
xlat
dec
scas
mov
mov
stos
mov
aaa
data16
aas
and
mov
mov
mov
adc
cli
and
stos
inc
mov
dec
js
or
pushw
std
mov
test
jge
pop
pop
mov
push
mov
add
adc
dec
pushf
cmpsl
test
data16
jge
fists
or
xchg
dec
aas
xchg
xor
xor
cmpsb
adc
adc
pusha
push
fbstp
xchg
cwtl
les
js
jbe
sub
aad
mov
pop
out
aaa
and
jo
pop
cmp
popf
clc
in
popf
pop
inc
adc
popf
and
dec
movq
mov
add
and
xchg
dec
testl
pushf
outsb
aaa
pop
rcll
test
repnz
adc
push
mov
mov
cmp
inc
pop
pop
lret
aas
insb
mov
movsb
mov
mov
mov
lds
scas
push
sbb
imul
push
les
xor
push
orl
sub
and
mov
imul
lods
and
lahf
or
stc
xor
and
ljmp
call
mov
mov
ja
or
lahf
adc
repnz
xchg
pop
and
and
jmp
fcoms
fcoml
arpl
aaa
sbb
pushf
mov
mov
cmpsb
jp
ror
mov
push
inc
mov
add
ds
add
outsl
les
jl
mov
push
mov
int3
jnp
and
mov
dec
cmovs
lcall
rcrl
inc
divl
popf
loop
mov
jbe
dec
xlat
inc
mov
loopne
mov
ljmp
jecxz
dec
sti
cld
shr
cmp
cmpsl
popf
mov
xchg
fildl
dec
outsl
fwait
or
scas
xor
dec
outsl
cli
dec
mov
pop
dec
jmp
ret
mov
aaa
pusha
inc
sub
mov
in
out
inc
push
and
push
repnz
xchg
ds
mov
mov
dec
xor
sar
push
in
bound
lahf
mov
fs
push
adc
clc
mov
xorl
lods
ja
hlt
in
sub
mov
dec
dec
mov
pop
add
fs
add
xchg
ja
add
inc
jp
mov
xlat
popa
adc
imul
sbb
cmpsl
inc
jle
sbb
lret
insb
cmp
maskmovq
divl
lods
xchg
jne
loope
jne
or
ret
out
adc
jbe
sbb
jp
test
adc
in
lods
adc
aas
test
adc
xchg
shrl
lea
add
xor
pop
mov
cmpsb
sbb
or
or
or
decl
cs
jne
ss
sbb
mov
or
and
roll
movl
mov
mov
xchg
negb
push
or
mov
ds
test
add
adc
push
repz
push
jg
jl
scas
pop
in
enter
jecxz
jl
jg
divb
adc
lock
fsubrl
imul
cmp
clc
and
mov
mov
imul
pop
aaa
cmp
cmpsl
xor
mov
adc
pop
mov
bound
adc
pop
pop
push
aad
xchg
nop
lret
mov
mov
dec
and
push
lods
stos
adc
popw
dec
das
ss
ficompl
xchg
xchg
imul
loopne
mov
mov
sub
cmp
push
or
js
mov
and
push
inc
pop
in
mov
sub
icebp
popa
frstor
cld
add
pop
or
jle
adcb
test
dec
cmp
cltd
dec
js
mov
andb
inc
adc
in
add
dec
lahf
mov
rcll
aam
mov
movsb
mov
dec
push
imul
shll
xor
pop
mov
addb
mov
pusha
mov
leave
xchg
dec
out
mov
inc
stos
add
daa
push
or
push
fnstcw
sbb
xchg
repz
lret
invd
push
ret
hlt
push
ljmp
imul
popa
loopne
dec
dec
enter
sub
xor
push
mov
popa
or
pop
xor
adc
inc
mov
fisubl
daa
scas
pop
daa
pop
sub
push
xchg
inc
das
cmp
mov
imul
xchg
pop
imul
loop
mov
push
fwait
orl
xor
out
les
sbb
mov
mov
mov
push
mov
mulps
leave
or
jnp
xor
mov
enter
and
push
adcb
roll
mov
add
mov
adc
insb
popf
adc
in
adc
cld
mov
sub
mov
mov
repz
fisubrl
push
pop
pop
jp
mov
insl
sbb
adc
out
mov
in
push
xchg
sbb
lret
xchg
iret
pop
outsl
cli
lds
push
fdivrl
fcoml
nop
sahf
sbbb
outsl
imul
cs
data16
inc
es
xchg
push
sbb
add
cmp
lock
push
mov
js
push
insb
cld
out
sub
aaa
clc
imul
mov
push
test
subb
push
push
mov
pop
push
ja
ljmp
adc
cltd
dec
inc
inc
push
call
sbb
cmp
adc
rcll
ljmp
fcomps
adc
in
pop
cwtl
mov
jl
shrl
mov
jb
popf
jns
cld
mov
enter
js
add
cwtl
cmp
xlat
fs
lahf
mulb
push
add
jbe
es
cld
shll
mov
or
adc
iret
in
dec
insl
movsl
mov
pop
adc
and
imul
scas
scas
jo
cmpsl
pop
lcall
out
inc
jmp
cld
fwait
fs
or
pop
and
push
pop
jmp
ja
sub
bound
dec
push
mov
jo
mov
inc
ret
stos
pushf
in
jnp
pop
dec
popa
dec
cmc
das
arpl
adc
pop
lahf
mov
lea
xchg
dec
lahf
xor
mov
test
mov
mov
fcomps
shlb
mov
xchg
push
mov
xchg
fildll
xor
add
sub
xorb
xchg
lret
into
dec
movsb
pop
aam
outsb
loope
xor
lods
sbb
mov
movsl
xlat
push
sbb
dec
jnp
fwait
pop
push
repnz
cmpl
cmp
scas
push
mov
jne
in
mov
and
sbb
aas
mov
jo
push
mov
mov
mov
test
sbbl
push
pop
imul
shll
mov
or
outsb
fidivl
or
lret
push
nop
movsb
in
stos
cmpb
and
and
sbb
mov
xor
add
fstpl
stos
stc
data16
in
mov
jg
push
pop
mov
jp
jecxz
std
inc
sbbl
mov
adc
repnz
hlt
mov
stos
xlat
push
leave
push
xorb
iret
sub
ret
dec
adc
lock
ficoms
aam
or
cmp
shrl
sbb
inc
xor
stc
sbb
pop
cmp
push
arpl
nop
jb
into
mov
adc
mov
pop
cmp
or
jae
popf
push
test
dec
mov
lea
dec
orl
jl
jle
xor
ror
and
testb
daa
mov
push
cwtl
mov
cltd
stc
pop
stc
sbb
inc
out
fs
xor
and
mov
mov
sbb
xchg
push
or
js
aam
xor
push
imul
movsb
dec
in
fcomp
loop
les
mov
push
xor
out
adc
ret
dec
fimull
adc
push
pop
sbbb
call
push
sub
mov
push
xchg
idiv
adc
fstl
rcl
adc
mov
adc
lods
adc
idivb
mov
rorb
lods
push
pop
rcll
fnstsw
jo
clc
aad
outsl
sub
cmp
jno
and
push
pop
push
fists
cltd
mov
fisubrs
idivl
out
std
add
mov
jp
jnp
mov
cmpsl
repnz
sbb
dec
push
adc
inc
sub
mov
ret
imul
out
and
rcr
iret
outsl
dec
inc
mov
push
notb
ljmp
adc
lcall
push
xor
fldt
push
adc
xchg
push
ficompl
jnp
or
jo
test
xor
sub
add
xchg
sub
push
push
inc
mov
cmpsb
pop
lea
jg
movsb
mov
inc
sbbb
jno
push
in
cmc
imul
into
in
jge
push
negl
push
push
or
xlat
add
gs
pusha
xor
mov
loop
je
or
rcll
dec
or
jl
jb
cmp
rol
inc
out
pop
fists
movsb
testb
jge
imul
mov
imul
cmc
lahf
leave
inc
push
fmulp
mov
inc
inc
test
jae
mov
cmc
pop
int3
pop
aam
mov
int
arpl
popf
outsb
xlat
call
xchg
push
pop
movups
jmp
rolb
add
adc
dec
push
push
movsb
inc
push
das
xchg
jl
xlat
mov
xorb
jnp
mov
push
mov
popf
ret
cwtl
inc
nop
jbe,pn
mov
adc
lock
add
jns
dec
insb
jle
dec
adc
add
mov
dec
icebp
sub
arpl
bound
movsb
push
xchg
mov
and
mov
arpl
aas
add
sbb
jb
sub
xor
add
je
add
xchg
inc
and
xchg
sbb
mov
push
mov
mov
out
ja
fsubrp
xor
pop
pop
dec
mulb
xchg
pusha
fistps
sbb
push
pop
into
mov
in
add
pop
sbb
lret
scas
and
inc
push
jnp
mov
jae
mov
cmp
hlt
add
cmp
sahf
add
mov
dec
adc
xchg
fcompl
cmp
jecxz
inc
add
jmp
ss
pop
inc
jae
iret
xorb
push
stc
push
inc
ss
push
pop
aad
ljmp
mov
ficoms
mov
or
jge
push
in
jnp
jecxz
outsl
inc
ror
je
cld
cmp
adc
scas
jle
cmp
out
mov
fcomps
scas
sub
or
sti
sub
inc
jg
daa
mov
inc
push
xchg
dec
adc
inc
jne
je
and
aas
out
push
push
lods
mov
add
rorb
xchg
push
or
add
mov
sbb
push
fucomi
lds
add
push
aaa
mov
push
aas
inc
into
stos
icebp
adc
out
add
les
cmp
cld
jbe
xchg
and
rcll
sub
or
pop
aad
test
sbb
daa
lcall
push
rcll
sub
fldz
inc
das
fstpl
out
mov
sbb
pop
int3
mov
and
cmp
imul
mov
push
fsubrs
mov
shll
add
pop
adc
sbb
or
out
ficoml
leave
push
in
add
or
jo
adc
cli
dec
xor
add
jb
sub
mov
push
test
and
cltd
jg
jge
push
cmp
mov
pop
mov
gs
jmp
lods
daa
xor
sub
hlt
scas
lret
pop
adc
xor
pop
or
xchg
stos
insb
stos
sub
cmp
xchg
mov
add
fistps
jg
cmpsl
cmp
inc
arpl
cmp
add
and
add
xor
xor
sbb
outsb
pop
es
dec
fstpl
dec
sub
shrb
loopne
cmp
mov
lods
xchg
movsb
jl
jl
aas
push
xchg
pop
movl
push
or
fmull
fdivs
push
lahf
cmp
lock
xchg
sub
push
sub
mov
mov
ljmp
mov
jl
add
dec
shrl
data16
xchg
pop
and
dec
test
fsubrp
sbb
int3
add
mov
adc
jmp
mov
dec
pop
xor
testl
adc
push
push
xor
cltd
mov
sub
shlb
inc
inc
stos
aam
sbb
mov
pop
enter
xor
hlt
adc
cltd
aam
mov
cmpsl
or
subb
and
ja
shr
cs
xchg
stc
sbb
outsb
mov
test
pop
pop
sbb
add
adc
fcoms
xor
xor
mov
jle
push
dec
jmp
leave
jle
in
loopne
add
jne
lret
pop
xor
outsl
pop
in
imulb
int
movsb
in
jge
mov
movsb
xchg
shrl
pop
call
mov
gs
sub
clc
dec
jg
in
mov
dec
lret
and
lods
movb
je
sbb
fs
and
and
dec
jp
outsl
add
mov
xlat
lods
xorl
outsb
ljmp
push
push
test
pop
les
mov
and
xchg
scas
stc
rol
inc
xor
call
pushf
mov
mov
jae
and
out
jle,pt
rcll
in
loop
cmp
sub
push
push
adc
mov
cli
gs
imul
jne
jge
ret
icebp
in
pop
lahf
mov
sarl
ja
ret
popf
mov
nop
ret
pop
cs
mov
lret
mov
lret
cltd
fdivs
cmp
scas
and
jns
clc
inc
hlt
mov
pop
jne
iret
and
fldcw
pop
or
and
mov
adc
faddp
pop
mov
cli
fisubrl
divl
mov
lea
push
xor
das
push
jp
xor
pop
fwait
pop
shll
push
testb
dec
or
inc
lods
pop
pop
sbb
pop
dec
jge
lods
idivl
xchg
ljmp
inc
shrl
add
push
cmpsb
clc
push
lret
loop
dec
out
cmp
cld
and
adc
jb
cmovge
adc
sub
pop
ret
mov
mov
sbb
dec
ret
add
cmp
cmpsl
sub
icebp
popa
test
popa
lds
xchg
stos
pop
dec
and
add
pop
addr16
cltd
rclb
lods
add
add
repnz
mov
mov
xor
jg
mov
mov
scas
neg
aam
push
movsb
jl
fiadds
or
out
addl
inc
cmp
dec
xor
or
mov
cmp
mov
imul
rorb
add
or
gs
push
mov
sub
imul
inc
mov
push
pop
rolb
aas
fmuls
mov
in
sarb
mov
add
add
mov
adc
lea
fists
lods
jne
hlt
mov
adc
and
and
xchg
push
mov
add
mov
pop
mov
xor
jmp
movsl
pop
or
mov
and
adc
cmc
addr16
or
pop
sub
and
sahf
or
xchg
ret
pmulhw
punpcklbw
add
push
inc
push
sbb
add
shlb
and
movsb
jmp
sbb
xchg
pop
mov
cld
mov
add
nop
jg
shll
test
xor
in
imul
pusha
cmp
sbb
push
xchg
test
mov
mov
pushl
leave
std
xorb
sti
mov
addl
ljmp
add
fs
loop
test
jecxz
fsubs
mov
or
or
imul
sub
subb
mov
es
push
iret
sub
mov
lea
sub
push
lock
mov
dec
outsb
inc
xlat
divb
pop
inc
insb
mov
iret
shlb
jge
movsl
decb
fidivrs
mov
xor
mov
aad
dec
lret
dec
and
push
mov
push
sub
pushf
and
xchg
insb
and
das
inc
fisubrs
jp
xor
jae
sbb
mov
cltd
adc
mov
stos
pop
xor
aam
mov
pushf
xchg
add
imul
lahf
scas
sub
shlb
notl
repnz
arpl
leave
loope
orl
scas
sub
pop
in
clc
or
out
jmp
xchg
repz
test
pop
jl
mov
or
rcrb
rcll
inc
pop
bnd
pop
jp
and
mov
imul
movsb
addl
mov
jo
pop
cmpsb
and
fnsave
clc
mov
add
cwtl
push
mov
xor
mov
ficoml
jg
or
push
aad
and
repz
sbb
jle
loopne
fists
pusha
testb
xchg
dec
xor
push
xor
or
mov
mov
stc
stos
aaa
mov
mov
sub
and
cld
cli
fimuls
inc
dec
pop
mov
xor
pop
lahf
pop
pop
cmp
cli
stos
orb
das
clc
add
mov
xchg
add
pop
lret
mov
xor
inc
in
push
jg
addl
imul
movsb
sbb
jne
insl
xchg
pop
pop
pop
lret
cmp
xchg
add
cmpsl
movsl
stc
xor
xchg
mov
adc
jl
std
in
into
testb
lea
xchg
adc
fisubl
cmp
out
out
add
pop
out
scas
mov
fs
fbstp
lret
nop
sbb
cmp
xor
adc
pop
xorb
lods
mov
das
xor
push
sub
insl
jle
push
push
mov
lock
xchg
popf
push
add
in
mov
jp
jmp
stos
sub
sbb
adc
subb
cltd
into
rcll
xchg
xchg
outsb
cmc
mov
fidivs
notl
mov
xlat
mov
pop
pop
jnp
push
sbb
hlt
loope
jno
dec
lock
jbe
add
or
dec
adcb
sub
imul
or
scas
push
imul
stos
inc
mov
pop
add
cmp
pop
adc
test
dec
and
adc
clc
cld
out
out
mov
movswl
imul
mov
push
cmpl
enter
ja
dec
mov
je
in
jle
inc
cs
stos
cmp
lret
sub
push
ficoms
push
sub
adc
mov
add
sub
or
stos
push
cltd
popa
or
jmp
or
fdivs
sub
test
cmp
enter
test
pop
subb
sub
clc
push
lret
insb
mov
outsl
dec
or
mov
xlat
and
push
gs
jg
push
mov
cmp
es
cmc
mov
aas
lret
adc
loop
mov
jnp
push
xchg
cwtl
jge,pn
and
out
inc
sub
and
mov
loopne
inc
leave
dec
push
xchg
or
out
dec
cmpsl
xchg
es
lcall
addl
and
daa
cmpsb
push
repnz
mov
push
pop
adc
push
ljmp
push
lds
movl
stos
icebp
push
cmc
xchg
mov
xchg
jnp
test
pop
fyl2xp1
loop
lds
fnstenv
pop
out
sahf
scas
add
in
inc
testl
outsl
sub
inc
add
mov
ret
loope
sbb
cmp
sarb
dec
rolb
addb
or
cmpsb
pop
scas
inc
pop
nop
in
clc
pop
out
dec
test
ret
fldenv
xchg
jmp
cmp
adcl
add
xchg
scas
mov
push
xlat
sub
fyl2x
xchg
pop
lret
sbb
out
mov
sub
out
xchg
sub
pop
xchg
flds
xchg
mov
jae,pt
sub
cmc
rcll
sub
sbb
push
push
inc
in
dec
pop
pop
fwait
outsl
adc
dec
pop
mov
push
sti
or
test
insl
scas
jne
fadd
and
pop
out
adc
shlb
jns
icebp
hlt
cmp
jg
ret
mov
int3
icebp
test
addb
dec
add
xor
ficomps
cmpsl
xchg
xchg
jae
mov
mov
loop
push
ret
aas
fmul
idivl
data16
jg
addr16
xor
ret
lds
shlb
mov
push
idiv
cli
adc
fwait
mov
xor
outsb
aam
mov
lahf
cmc
repz
adc
cmp
idivb
pop
outsl
cli
in
xor
testl
sub
inc
test
ss
lret
cmp
icebp
jb
pop
sub
push
in
or
sbb
lea
stos
or
jl
mov
cwtl
push
adc
fisubs
call
mov
pop
fwait
inc
mov
and
repz
push
mov
pop
popa
imull
or
pop
sti
adc
add
lret
stc
lds
adc
cmp
and
mov
push
idiv
mov
movsb
imul
stos
and
out
xlat
scas
notl
fcoms
inc
mov
inc
jecxz
push
and
cmp
aam
out
xor
in
inc
xor
add
outsl
inc
or
test
and
inc
inc
sbb
stos
test
jne
cmpsl
or
in
rclb
lahf
lret
cli
lock
dec
jbe
in
jge
not
cli
jnp
and
push
lods
lret
xchg
inc
mov
in
or
aam
scas
xor
xor
subl
and
sub
jg
xlat
or
add
out
js
mov
xchg
add
mov
pop
popa
insb
jb
or
mov
inc
pop
cmp
sahf
test
xor
int
fldcw
add
aas
or
fsubrs
out
pop
hlt
xchg
ror
sub
mov
xchg
pop
sub
stos
rolb
xor
and
fucomi
dec
xlat
decl
rcl
cmpb
xchg
fistl
orb
mov
icebp
sub
jno
mov
mov
cmp
jae
outsb
add
push
xorb
sub
fst
mov
gs
adc
add
cmp
and
insb
int
mov
repnz
mov
jecxz
dec
repz
jmp
or
ljmp
popf
les
jo
push
push
inc
fsub
inc
dec
repnz
xchg
inc
jge
inc
ret
cwtl
test
outsb
enter
adc
pop
cmp
sahf
or
int3
outsl
into
shll
and
inc
push
and
leave
shlb
into
xchg
sub
mov
leave
hlt
add
and
push
and
pop
hlt
pop
out
scas
arpl
jno
dec
aaa
inc
dec
insl
lea
pop
lods
jae
inc
jbe
mov
adc
scas
ret
fwait
hlt
repz
aaa
lods
fisttpll
or
cld
loope
jo
lock
add
push
lcall
xchg
adc
imul
cmp
push
in
leave
adc
mov
mov
sub
cli
notl
cmc
jno
and
add
pop
lods
mov
subb
repnz
pop
lods
xor
xchg
loopne
cmc
in
mov
jp
push
adc
scas
lret
xchg
fisttps
sub
std
cli
dec
aaa
or
sub
jnp
xchg
bound
pop
shlb
repnz
cmp
dec
mov
inc
pop
sub
or
fldcw
test
mov
sbb
jg
cwtl
fldt
push
out
lods
pop
or
shl
ficoml
in
push
jo
inc
jne
int
cwtl
jle
cmp
push
cmp
dec
shrb
cli
das
xor
xchg
popf
mov
test
cmp
jae
xor
or
push
jl
adc
add
in
jns
iret
iret
loop
xlat
imul
sub
sbbb
lret
dec
jns
push
ljmp
stos
in
je
sbb
int
shl
lds
dec
adc
int3
and
cmp
and
jl
inc
cs
jo
push
push
mull
jg
jg
and
popa
fwait
insb
lcall
xchg
das
or
or
xchg
pop
xor
cmp
ss
mov
pop
xor
je
mov
push
mov
jae
add
dec
push
mov
push
sub
mov
mov
or
mov
cmp
movsb
icebp
testb
lahf
mov
adc
rcll
adc
mov
pop
das
enter
sbb
repz
or
xor
cmp
xchg
cmp
inc
es
sbb
sub
enter
fimuls
mov
adc
mov
lds
sbb
sbb
add
cmp
push
cmc
sub
add
mov
jnp
popa
bound
sbb
mov
cmpsl
inc
ss
jp
push
xchg
jne
mov
mov
cmc
mov
cli
inc
lods
push
push
testb
adc
js
and
dec
rclb
lret
scas
enter
inc
or
pop
pusha
push
add
test
jb
int
mov
sub
ja
cmp
jl
mov
xchg
scas
inc
mov
jle
inc
cmc
mov
shlb
lret
mov
in
test
push
frstor
fsub
pusha
xchg
jl
adc
lahf
shr
into
jp
arpl
and
mov
lds
leave
movd
adc
lock
lret
je
and
push
push
add
and
cwtl
fistpll
test
pop
pop
mov
out
mov
lods
insl
ljmp
or
sbb
adc
fsubrs
jns
xchg
and
idivb
sti
js
test
jnp
and
inc
and
in
leave
push
xlat
cmp
cmp
push
add
rclb
leave
cmp
mov
rorl
push
mov
sub
loopne
adc
pop
inc
dec
loopne
adc
cltd
lahf
out
jbe
mov
inc
pushf
pop
mov
xor
aas
inc
fwait
sub
mov
cmc
add
vmovhpd
rcrl
xchg
enter
sub
lock
clc
xor
daa
push
inc
or
mov
lcall
insl
adc
shl
iret
pop
sub
jge
xor
sbb
sub
push
mov
mov
jle
ret
mov
mov
fsubp
test
inc
shll
test
mov
gs
clc
lret
jp
dec
sbb
push
loopne
jb
clc
mov
and
jae
loopne
imull
push
cwtl
lahf
xlat
mov
or
nop
in
xor
movsl
pop
xor
cmp
cli
xchg
stc
dec
das
out
or
xor
adc
cmpsb
mov
and
rcrl
mov
xor
fnsave
adc
sub
mov
das
and
fbstp
hlt
test
adc
fnstenv
out
ret
lods
sbb
mov
cld
and
xor
mov
inc
mov
stos
adc
jle
pushf
shrl
mov
adc
mov
cmp
lahf
sbb
sub
cli
cmp
cmp
push
mov
outsb
xchg
addr16
jno
cmp
inc
sbb
dec
shll
js
jecxz
stos
dec
clc
daa
clc
jle
jbe
sbb
jmp
std
cmp
jae
push
cltd
xor
push
inc
xor
lods
out
sub
int
mov
test
mov
and
mov
daa
push
lock
bound
aaa
xor
jle
notl
pop
call
in
xor
push
inc
arpl
add
mov
inc
xchg
jp,pt
icebp
pop
cltd
pop
lret
gs
jmp
je
and
cwtl
sub
rorb
mov
adc
jne
adc
jl
ds
pop
inc
lea
popf
les
pop
sbb
adc
xchg
mov
fmull
sbb
cmp
push
xor
icebp
adc
pop
test
flds
aaa
xor
insl
fcmovnb
and
mov
jae
pop
xor
mov
pop
cli
arpl
cmp
push
mov
cld
lods
jge
jl
out
icebp
pop
fnsave
lock
scas
or
scas
pop
pop
cmc
mov
loopne
push
nop
loope
cmp
gs
test
rorb
dec
jmp
mov
incb
leave
xor
negb
mov
xor
je
inc
lea
mov
jo
in
jmp
insb
xchg
adc
mov
dec
xchg
push
out
push
push
stos
mov
push
xchg
cmc
push
test
sti
push
and
bnd
imul
adc
xor
add
push
sbb
xchg
mov
jp
ret
test
mov
xchg
jae
push
mov
push
dec
push
dec
mov
shrl
iret
mov
xor
test
add
aam
mov
stos
ret
inc
into
lods
pop
push
fsubs
outsb
out
xchg
xchg
or
mov
cwtl
xchg
cmpsb
sub
std
addb
lods
adc
lret
aas
int
mov
cs
mov
and
dec
incb
adc
ds
cld
pop
pushf
imul
cmp
mov
lock
pop
pop
jmp
test
ja
push
xchg
mov
cmpsb
jns
dec
cmpb
fwait
sahf
addr16
xor
mov
in
in
dec
cs
movsl
stos
incl
movsb
sub
test
test
out
xchg
add
lods
jmp
pop
inc
fistl
cmpsb
fldl
scas
ret
rclb
sbb
adc
call
pop
xor
jg
into
stos
xor
xor
adc
or
test
pusha
lret
mov
not
sub
adc
call
cmc
out
into
adcl
movsl
in
dec
inc
popf
jnp
adc
pushf
jne
cmp
in
stos
sbb
ds
adc
pop
jle
add
fs
inc
out
dec
and
mov
test
add
xchg
pop
inc
sbb
dec
sub
stc
rcrl
push
fdivl
imul
xor
int3
fdivl
lret
cmpsb
lock
out
xlat
pop
stos
xor
push
ds
fistpl
cmp
les
ljmp
sub
mov
inc
and
and
roll
leave
jnp
and
rcll
jmp
mov
mov
flds
imul
fists
sub
fcompl
sub
add
pop
lcall
mov
clc
pop
xor
scas
cmp
stos
add
lahf
add
movsb
mov
xchg
add
mov
in
inc
xor
push
push
mov
mov
lock
add
jne
mov
sub
pop
ret
xchg
push
mov
adc
lcall
and
and
add
rcll
adc
iret
out
dec
jp
imul
in
pop
mov
push
push
push
mov
jo
enter
mov
mov
push
dec
lods
inc
add
in
or
fldenv
test
js
int3
mov
jl
iret
mov
sahf
nop
outsl
mov
jnp
rolb
sahf
test
cmpsb
lret
or
dec
inc
scas
xchg
adcb
cltd
mov
adc
ljmp
outsl
mov
lds
xchg
xchg
inc
pop
out
lahf
mov
mov
clc
lea
mov
mov
stc
int
push
push
aam
loopne
mov
push
cmp
ret
xchg
add
jp
test
cmp
sub
call
dec
push
js
stc
enter
cld
rcll
bswap
ds
add
and
push
dec
repz
mov
js
jo
imul
test
lock
add
xchg
arpl
adc
les
pop
es
or
dec
jns
popa
mov
pushf
sbb
cltd
inc
jb
lret
dec
xchg
cmpl
sbb
push
mov
lret
sub
pop
jnp
pushf
mov
cmpsl
add
fiaddl
js
pop
sbb
stos
vunpcklps
dec
mov
jns
cwtl
movsb
sub
scas
mov
je
movb
push
icebp
mov
lret
xchg
pop
dec
adc
rcrl
dec
lcall
mov
cmp
mov
cmc
xchg
adc
subl
scas
xor
shll
cmp
cmp
cmp
jg
sbb
dec
rclb
push
jne
lods
mov
jg
jo
mov
pop
xchg
push
shlb
in
pop
cmp
xlat
cmpb
jo
out
int3
cmpsb
xlat
or
int3
sti
imul
clc
mov
out
out
es
mov
aaa
or
sbb
and
fdiv
in
in
js
mov
mov
test
hlt
sub
lahf
mov
dec
sub
xchg
int3
adc
ja
sub
sarl
sub
inc
mov
xchg
mov
mov
add
dec
xchg
cwtl
int
fldcw
inc
pop
sub
mov
insl
adc
sbb
leave
add
rcrl
outsl
sbb
push
lret
faddp
in
mov
inc
adc
pop
into
scas
mov
shlb
dec
cmp
in
mov
push
jle
inc
scas
mov
in
ja
lds
ss
sbb
repnz
aas
loope
fistl
aad
jo
inc
push
loope
xchg
pushf
imul
cmp
shrl
mov
cmp
push
and
cmpsl
push
mov
daa
inc
sbb
sub
or
daa
cmp
adc
or
mov
lds
xchg
xor
imul
outsb
add
pop
pop
jmp
push
inc
xchg
pop
aaa
daa
call
xchg
xor
lock
and
push
stos
push
lret
xlat
xchg
jno
add
push
cld
pushf
loopne
xchg
xchg
cmp
mov
push
lret
xor
xchg
fisubs
sub
inc
pop
mov
push
xor
mov
push
sbb
or
arpl
xchg
movsl
mov
inc
sbb
in
mov
movsb
mov
cli
adc
mov
jnp
xlat
lcall
mov
cmp
push
push
pop
aaa
mov
dec
jmp
mov
inc
cmp
sahf
push
mov
cwtl
dec
jo
sahf
pop
lret
adc
sub
in
ret
mov
jnp
ficompl
je
and
pop
outsb
cmp
ljmp
pop
out
je
adcb
aas
pop
cld
or
jnp
adc
shll
cltd
pop
sub
notb
cmp
inc
xor
call
jl
mov
es
pushf
lock
mov
and
mov
lods
mov
test
pop
arpl
leave
pushf
inc
mov
push
mov
jp
aas
xchg
pop
filds
cmp
lret
add
xor
and
sahf
fs
jno
jge
lret
imul
mov
add
pop
data16
mov
and
call
lods
dec
aam
iret
sbb
jmp
popf
out
lods
add
lods
push
push
sub
cmpsl
call
xor
push
loop
xorb
cmp
repnz
fnstcw
test
cs
fstps
pop
stos
aam
shlb
fnstsw
mov
cmp
mov
fwait
add
inc
shll
add
and
push
sbb
dec
mov
pop
inc
dec
or
inc
xchg
inc
lea
fnsave
cmp
movsl
rcrl
inc
icebp
cmc
cmpsb
faddp
shll
inc
xor
xchg
mov
fucomi
stos
mov
pop
movsl
mov
pop
jle
adc
sub
sbb
repz
adc
jg
dec
aad
and
mov
and
aad
sbb
inc
insl
xchg
scas
mov
montmul
cmpsb
xchg
cmpl
movsb
mov
mov
cmp
idivl
pop
fisubl
dec
fs
sub
sti
sbb
xchg
outsb
or
mov
jb
mov
mov
les
ss
adc
pop
and
jecxz
push
movsb
push
cmp
jns
jbe
aam
push
jecxz
sbb
dec
jb,pt
mov
sbbl
fmuls
cmpsb
adc
or
in
fcomps
pop
outsl
jno
sbb
mov
mov
stos
cld
movsb
or
ds
xor
insb
dec
lock
movsb
dec
loope
pop
mov
idiv
inc
imul
call
ja
lahf
adc
out
popf
xor
stc
idivb
ss
push
xor
push
sub
adc
add
imul
adc
cli
dec
jmp
sbb
aaa
push
sbbl
pop
rolb
adc
or
jno
mov
in
pop
jnp
xchg
inc
inc
xor
jbe
dec
adc
test
js
xor
into
fstpt
mov
or
out
in
dec
icebp
xchg
add
and
fwait
mov
xor
and
popf
dec
sbb
decl
mov
imul
dec
scas
outsb
and
movsb
fcompl
jmp
mov
es
jne
and
or
scas
jmp
jnp
mov
mov
mov
aaa
mov
loop
insb
arpl
and
jne
and
mov
fs
lahf
push
jge
repz
imul
jle
add
stos
xchg
sub
fwait
loope
in
xchg
insb
fidivs
mov
insl
mov
sbbb
lahf
mov
xor
sbb
and
pop
popl
adc
lahf
cmp
pop
dec
sub
pushf
test
popa
gs
iret
mov
push
js
les
mov
cmpsl
dec
rcrb
inc
div
std
xor
cmc
pop
shrl
test
mov
pop
lea
dec
divb
pusha
ja
inc
sbb
xchg
data16
push
adc
or
imul
das
dec
xor
sti
push
xor
daa
and
inc
pop
repnz
outsb
out
mov
xor
xor
or
hlt
xor
jno
push
jle
xchg
sbb
dec
xchg
xchg
enter
ret
cltd
adc
fsub
or
repz
cmpb
pushfw
leave
pusha
pusha
nop
inc
add
mov
loop
cmp
cwtl
stos
movsb
fwait
in
out
scas
enter
je
push
mov
jle
or
out
je
add
rcll
sub
push
pop
push
dec
jns
fcompl
mov
inc
cmp
or
fwait
push
dec
jge
mov
call
mov
out
sbb
sbb
pop
dec
add
jo
xor
repnz
sarb
sbb
cmpsl
rcl
aam
sbb
mov
dec
fstl
call
pop
rcll
sahf
test
mov
adc
mov
and
es
push
in
mov
pop
data16
testb
cmp
mov
sbb
push
bound
ret
stc
mov
repz
push
xor
sti
cs
fidivrl
dec
ret
jne
adc
xor
movsl
cmp
push
push
orl
pop
into
mov
mov
lret
sbb
sub
outsb
lea
mulb
add
insb
xchg
inc
dec
imul
xchg
cltd
lea
mov
xor
call
and
icebp
ljmp
negb
fistpll
enter
jo
push
and
push
xchg
xchg
leave
sub
dec
add
jnp
imul
dec
mov
pop
inc
adc
mov
mov
rcrb
jp
test
add
mov
jbe
push
insl
jbe
jmp
sub
sub
push
inc
xor
sti
mov
int
test
lcall
push
xchg
add
fsubrl
inc
add
roll
mov
or
ljmp
xor
gs
add
cltd
or
cmp
lahf
dec
daa
dec
fstpl
adc
mov
jae
push
scas
cmpsb
and
outsb
mov
aam
popa
jnp
icebp
fiaddl
popf
adc
cwtl
lods
adc
rcrl
push
cmp
pop
movsl
xchg
and
sub
out
sbb
js
xchg
movsb
jbe
cs
sbb
int3
sub
pmovmskb
out
or
leave
repz
in
lods
in
or
xor
lret
lods
xor
jmp
mov
movsb
sbb
cltd
push
and
adc
sbb
mov
ss
leave
sbb
sbbl
sbb
xor
xchg
cmp
pop
mov
xchg
mov
adc
outsb
jle
adc
repnz
call
mov
std
xchg
mov
fadds
jle
add
add
in
jnp
fneni(8087
push
or
iret
cmc
out
test
icebp
or
xchg
mov
lods
shlb
adcb
jne
outsl
mov
out
adc
in
adc
jo
add
fstpt
inc
aad
stos
xor
xor
scas
add
push
ja
std
icebp
mov
call
jno
popf
and
movsb
jo
mov
jne
jge
cs
xor
test
sbb
mov
lret
mov
sub
push
add
xchg
pop
into
cmpsb
out
test
xchg
mov
mov
jl
clc
jg
imul
mov
push
dec
int3
lahf
loop
sub
inc
sbb
adc
mov
pop
sbb
sbb
stos
fstps
sti
xor
pop
loope
pop
pop
stos
sub
dec
inc
sahf
inc
pop
aad
insl
xlat
aad
pop
outsb
xchg
imul
incb
add
adc
test
push
jle
pop
and
repnz
mov
mov
cmp
fwait
in
lret
and
dec
add
mov
or
out
cwtl
adc
nop
insb
imul
push
and
adc
and
cmp
sarb
mov
dec
jne
stos
xchg
or
cli
aam
pop
pop
sub
push
jne
xchg
mov
mov
mov
xor
adc
mov
sub
xchg
aas
jns
cli
jnp
hlt
mov
jmp
cltd
cmpsb
add
stc
push
jmp
dec
jbe
stos
or
push
cmpl
adc
mov
inc
xchg
cltd
lds
cmpsw
sarl
dec
mov
clc
ja
mov
jbe
pop
pop
loop
cmp
negb
xchg
jmp
jge
jle
jg
stos
mov
test
ljmp
cs
mov
movlps
xchg
inc
sbb
pop
shlb
movsl
popf
mov
imul
inc
or
mov
movsb
stc
pop
mov
ds
fstpt
movq
mov
sub
cltd
mov
stos
mov
xor
pop
sub
jnp
orl
pop
dec
adc
jl
jbe
lock
xorl
cwtl
shrl
mov
mov
out
xchg
sbb
cs
mov
icebp
sbb
xchg
idivl
xchg
test
ja
push
lahf
sub
adc
inc
neg
rdtsc
adc
xchg
cmpsl
in
aaa
jle
hlt
add
mov
pusha
mov
stc
jle
ror
jl
add
dec
aas
jl
pop
push
fmull
jp
push
jns
xor
jle
repz
push
dec
inc
ret
mov
test
addb
mov
dec
ds
in
iret
inc
mov
sub
enter
push
mov
cmp
aaa
xor
mov
inc
jae
adc
cmpsb
das
xchg
xchg
cmp
aaa
scas
into
lret
cmp
arpl
mov
mov
and
and
jle
sbb
enter
addr16
jb
int
outsl
lret
xor
popa
lret
lds
push
sub
stc
sbb
cmpsl
pop
cmpsl
mov
leave
jmp
retw
jmp
gs
cli
fistps
addr16
cmc
inc
push
into
movsb
flds
fbld
dec
cli
fs
adc
insl
sahf
xor
cli
call
notl
mov
inc
jecxz
fildl
jb
test
jo
cmpb
fistpl
aam
inc
push
xchg
sahf
fldt
sbbl
xchg
or
pop
and
and
mov
pop
imul
xor
rcl
or
dec
pop
xor
ds
and
cmp
dec
mov
rcl
mov
out
mov
mov
jle
pop
imul
rolb
or
mov
test
and
fwait
dec
and
dec
rcrb
xchg
idivb
cld
cmp
loopne
ficompl
in
stos
lods
inc
pop
out
or
mov
cmc
arpl
es
insb
dec
pop
pop
jo
loopne
mov
fnsave
inc
push
jle
mov
ss
cmp
sbb
mov
dec
lock
jbe
xchg
fmull
cmp
fwait
xor
xchg
inc
push
sbb
jge
test
insb
lds
popa
cwtl
int3
fs
repnz
fs
aam
scas
dec
loope
das
xor
inc
inc
dec
cs
inc
mov
pop
mov
dec
and
cmp
in
sub
push
stos
mov
push
addr16
and
adc
lock
test
and
movups
pusha
sbb
pop
jle
jb
shrl
pushf
xchg
pandn
insb
fbld
insb
loope
fimull
in
sarb
jmp
bound
aam
aad
bound
dec
psubusb
and
or
sbb
jmp
sub
sti
sbb
fisubl
pop
push
sti
push
jbe
std
dec
mov
xlat
lock
xor
sub
and
push
push
ret
aam
adc
lods
jge
push
mov
xchg
inc
inc
mov
pop
mov
or
mov
test
add
dec
lret
dec
xor
stos
xor
mov
in
cmpsl
iret
shld
in
mov
or
add
ss
push
lock
insl
sub
jg
pextrw
jbe
ret
cmp
lret
push
push
xor
cli
daa
out
sbb
push
cmp
xchg
mov
mov
mov
mov
push
pop
or
pop
and
aam
ja
nop
ljmp
sbb
dec
lds
mov
aam
mov
and
ljmp
ja
xchg
gs
pop
or
xor
lods
adc
cmp
clc
push
push
xchg
out
pusha
lret
inc
mov
inc
clc
int
pop
loope
push
ja
xchg
ljmp
scas
mull
and
xor
sti
les
pop
xchg
adc
inc
mov
pop
mov
ja
inc
insb
test
xor
adc
lea
adc
jne
dec
call
jmp
adc
scas
nop
arpl
jg
mov
std
cmp
dec
in
pop
fcomps
jne
push
out
arpl
fistpl
xchg
jbe
loopne
adc
lea
idivb
adc
cmp
leave
inc
fs
aad
inc
inc
add
movsb
cltd
sbb
mov
mov
adc
mov
out
daa
jae
mov
push
gs
or
mov
stos
scas
cmc
lods
and
das
stc
mov
subb
icebp
xor
xor
pminsw
sbb
xchg
aas
stos
pop
add
mov
mov
ss
mov
sbb
sti
mov
jne
mov
or
dec
insb
and
imul
cli
dec
hlt
dec
inc
repz
lds
fistpll
pop
dec
repz
or
out
bound
mov
or
cmp
ret
and
mov
jg
mov
adc
and
out
popf
add
sbb
rolb
stos
mov
cmc
add
and
in
lret
or
cli
xchg
mov
add
sbb
jne,pt
lcall
cli
lret
xor
and
adc
mov
push
fmull
dec
arpl
mov
arpl
sub
stc
sub
sub
mov
fwait
in
repnz
or
nop
inc
ja
mov
bound
dec
js
shlb
iret
je
sub
mov
xor
xor
stos
inc
int
mov
adcb
out
and
cmp
pop
sbb
xchg
mov
pop
stc
inc
fisubrl
or
loope
dec
mov
addr16
lods
lahf
jne
aam
jne
sbb
leave
mov
and
sti
pop
rcr
das
out
or
jbe
mov
mov
mov
fs
push
enter
nop
xchg
and
jecxz
cld
pusha
loopne
or
hlt
inc
xchg
xor
cli
leave
xchg
jbe
add
jb
outsb
leave
jge
jge
mov
daa
add
outsl
ds
in
jb
inc
mov
arpl
call
adcl
movsb
push
pop
mov
jge
pop
rclb
stos
test
adc
lock
flds
sub
or
and
test
sub
cmp
daa
cmpsb
sbb
xchg
test
das
ret
rclb
test
in
je
dec
mov
lods
cld
stc
in
dec
sub
js
testb
mov
shll
popf
xor
pushf
test
lea
pop
shrl
imul
cmp
lret
xchg
mov
mov
adc
clc
in
in
sahf
xlat
js
add
decb
popf
je
push
add
mov
fnstenv
out
sbb
pop
fbstp
push
pop
repnz
or
push
xor
lcall
lods
add
insb
insb
jns
stos
in
push
daa
jne
pop
add
fdivrs
pop
test
pop
push
mov
inc
loope
push
cmp
cmp
jp
xor
adc
mov
and
cli
stc
sub
xchg
xor
aad
xor
dec
cmpsl
jecxz
cmp
xchg
pop
rcrl
stos
push
xchg
cmp
pop
dec
cmc
xor
xchg
pop
in
adc
and
out
sub
mov
fisttps
fcomps
and
shr
mov
rcrl
outsb
xchg
mov
inc
or
dec
xchg
mov
loop
shll
incl
cmpsl
sub
xor
xchg
mov
or
mov
push
and
mov
mov
cmp
movl
inc
mov
inc
stc
roll
inc
fistpl
inc
jecxz
addr16
mov
lret
movsl
inc
cmc
xchg
fbld
mov
jo
mov
push
fmuls
push
std
jne
mov
push
mov
addr16
scas
cmp
mov
aad
rcrb
ret
in
enter
mov
enter
sub
cmpsb
rcrl
mov
ret
cmpsb
push
push
arpl
dec
and
dec
hlt
pop
add
pmaxsw
adc
mov
sub
adc
add
or
lock
shrb
inc
inc
arpl
adc
fsubrl
movsl
ret
sar
les
arpl
fwait
sub
push
sarl
sbb
fs
rcrl
xor
arpl
sbb
add
inc
repnz
ds
pop
stos
adc
imul
pusha
out
out
imul
adc
lods
add
fisttpl
ljmp
repnz
sub
mov
icebp
das
and
ja
and
lret
movsl
call
or
pusha
leave
and
loop
sub
out
sti
fildll
mov
in
ret
data16
or
fidivl
neg
xor
xchg
scas
fldenv
sub
cwtl
nop
pop
mov
jl
mov
jp
repnz
imul
cltd
pop
jecxz
insl
pop
test
sti
xor
xchg
mov
pop
jmp
aad
or
movsb
mov
in
add
sbb
xor
sub
lret
mov
mov
in
and
icebp
nopl
movsb
std
pushf
xchg
fbstp
cmp
sbb
mov
cmp
rorb
imul
adc
loope
dec
xlat
loopne
lea
adc
mov
xor
jnp
clc
or
and
mov
inc
insb
pop
out
jo
and
adc
dec
mov
mov
cmp
popf
jecxz
cmpb
pop
icebp
repnz
mov
pop
fldt
xchg
nop
pushf
andb
bound
sbb
xchg
inc
aas
cld
cltd
popf
pop
xor
xchg
lea
pop
sub
or
or
fsubs
sbb
loopne
adc
mov
es
jne
cmpl
pop
stos
xchg
push
lahf
pop
lock
rorl
out
mov
rcr
pop
js
jbe
push
inc
jecxz
ret
add
popa
xchg
es
int
or
inc
jmp
jae
pop
int
xchg
or
call
icebp
dec
js
lret
lea
cmp
bound
popa
ret
sbb
inc
insl
gs
push
fs
mov
jbe
xchg
dec
pusha
adc
test
jp
xlat
ljmp
sub
test
or
mov
lods
addl
je
cmpsl
mov
inc
mov
shll
mov
jae
push
nop
mov
ljmp
add
jp
xlat
cmc
sub
fwait
test
cmp
adc
iret
fcomi
mov
jno
idiv
addb
lods
xchg
je
or
mov
or
repz
cmp
aaa
dec
cmp
xor
pop
jmp
movsb
push
pop
dec
mov
mov
icebp
iret
push
inc
aad
or
inc
inc
in
insb
fisubrs
push
inc
mov
sbb
in
mov
data16
xor
test
sbbb
ljmp
cwtl
lods
sub
in
scas
lcall
jle
aad
or
icebp
inc
mov
out
lods
iret
and
push
scas
pushf
sbb
aas
mov
int
addl
dec
test
sub
mov
sbb
dec
mov
push
imul
ja
cmpsb
je
ss
xchg
stos
out
ja
push
aaa
leave
push
mov
pop
sbb
and
hlt
std
sbb
add
cmp
jo
mov
xchg
pop
push
scas
mov
mov
add
shll
pop
out
in
mov
sbbl
jo
sti
cmp
mov
xor
addr16
clc
pop
je
in
pop
pop
lds
sahf
out
push
fcompl
push
adc
mov
in
insb
packssdw
outsl
cmp
jle
into
movsl
lods
scas
lcall
in
inc
imul
or
stos
jge
out
lods
mov
jmp
testb
js
fnstcw
xor
jecxz
cmp
mov
or
push
insb
repz
or
adc
popf
mulb
js
sub
test
outsb
jne
xchg
or
ror
or
lock
mov
ja
or
sbb
imul
ficoms
mov
inc
scas
cli
out
inc
pop
sub
sbb
dec
lds
inc
sbb
daa
fs
sbb
clc
push
mov
adc
js
popa
inc
push
inc
push
pop
xor
push
fsubrp
stos
js
push
testl
add
xchg
and
pop
sbb
mov
mov
jmp
push
pop
push
adc
adc
xchg
call
in
xor
les
dec
jnp
adc
inc
xchg
out
adc
mov
push
add
shlb
and
idivb
stc
sar
jp
scas
or
xor
pop
ret
imul
stos
add
adc
fsub
mov
xor
and
mov
jecxz
mov
pop
cld
mov
xor
or
mov
sub
inc
dec
adc
jp
push
xchg
nop
dec
leave
scas
jno
repz
xchg
aaa
cmpb
divb
add
sbb
rorb
insb
and
mov
pop
fs
mov
add
lock
inc
divb
js
daa
cmp
xchg
imul
call
mov
js
test
scas
push
insl
ss
fbld
jmp
xor
dec
mov
inc
jbe
jbe
push
pop
xchg
fcoml
into
pop
cmpsb
inc
and
rcrl
cltd
fstps
xor
mov
repz
inc
icebp
fsub
pop
pop
ljmp
fisubl
xlat
lods
orb
pop
mov
inc
lods
icebp
frstor
push
push
jge
push
cmp
cmc
add
inc
pop
or
flds
call
mov
jl
mov
in
sbb
push
lret
lret
lea
inc
mov
and
sbb
mov
rcrl
sarb
mov
lret
adc
outsl
push
xor
push
xchg
cmp
imul
ficomps
data16
lahf
dec
jns
or
repz
xorl
sbb
mov
cmp
xor
xchg
aam
mov
clc
mov
xchg
mov
mov
and
push
rcrl
push
out
shlb
adc
and
push
xor
and
std
add
insb
stc
mov
pop
js
mov
pop
lcall
jb
out
outsb
leave
jno
rorb
xor
lea
xchg
test
fbstp
xor
out
movsb
loop
cmc
push
pop
mov
imul
mov
mov
add
sbb
push
cmpsb
lahf
jle
lods
pop
pop
mov
push
mov
fisubs
bound
xor
xor
push
or
dec
rolb
mov
adc
imul
xchg
call
out
and
xor
sub
or
pop
push
sti
in
mov
dec
xchg
dec
mov
mov
pop
xchg
jo
mov
in
pusha
lcall
out
pop
mov
adc
fwait
daa
adc
ja
fstpl
cld
mov
fst
cmp
mov
adc
cmpsl
and
mov
incl
and
adc
sbb
jmp
leave
sahf
lea
subl
std
sub
pop
loope
cmpsb
sbb
xchg
inc
repnz
nop
or
cld
int
mov
dec
jmp
cmp
stos
xchg
ss
in
test
in
sti
pop
push
mov
lcall
adc
pushf
insb
jo
data16
es
push
add
test
icebp
insb
push
std
xbegin
arpl
pop
inc
mov
push
sub
sti
aad
inc
sub
sub
ret
pop
xchg
mov
sbb
mov
fists
pop
divl
sbb
sub
sbb
fistpll
xchg
sti
enter
dec
cmp
arpl
enter
mov
and
dec
loopne
xchg
jns
jecxz
push
popf
lcall
cmp
xchg
das
sub
jne
xor
dec
pop
pop
mov
sbb
data16
addr16
push
or
cld
daa
sub
out
imul
and
dec
push
or
cmp
adc
pushf
into
push
sbb
int
divb
mov
insl
mov
addb
xchg
shll
ljmp
out
pop
fwait
imul
clc
mov
xor
sbbb
sahf
lret
push
outsl
lahf
xor
out
cmc
inc
js
dec
add
xor
decl
repnz
pop
pop
push
enter
hlt
outsl
cli
sbb
sub
adc
popf
dec
ret
popa
pop
add
add
jle
repnz
or
lcall
lods
xchg
scas
jmp
pop
iret
and
mov
mov
mov
mov
push
ljmp
dec
mov
scas
stc
mov
xlat
xor
jg
and
push
or
adc
repnz
sub
mov
frstor
adcl
test
std
fmul
pop
int3
jbe
repnz
push
stc
les
call
sub
mov
add
gs
add
das
jae
outsb
imul
xchg
push
add
and
push
or
aaa
jns
in
xchg
pushf
pop
jg
mov
sahf
outsl
push
test
add
movsb
lods
int3
and
lret
xchg
jge
imul
jnp
inc
jl
adc
xchg
mov
push
sbbl
xchg
and
repnz
push
cmp
mov
scas
inc
fmul
lea
push
cs
jae
aaa
lods
mov
in
dec
fcmovbe
ficomps
in
call
jae
fwait
pop
xor
stos
int3
sbb
push
std
push
js
test
jg
dec
jle,pt
test
mov
push
sbb
sti
add
pop
and
iret
mov
hlt
jle
pop
popa
ja
in
repnz
xchg
mov
xchg
inc
jnp
add
imul
test
sti
sti
push
add
imul
dec
pop
push
jge
mov
out
rcl
mov
xor
mov
cmpb
cwtl
aad
mov
xor
repz
jmp
lcall
push
cmpsb
stos
das
loopne
jg
clc
xchg
adc
stos
andb
cmpsb
mov
cmpsb
subl
cmp
sbb
xchg
std
mov
ja
pop
jl
xchg
scas
sub
call
in
xor
lcall
pop
lcall
cmp
jle
sarl
arpl
mov
and
inc
push
xor
mov
adc
push
mov
inc
leave
xor
out
cmp
hlt
pusha
stos
les
fwait
out
xchg
inc
shrb
and
mov
pop
cmp
ds
jbe
test
call
push
faddl
xor
sbb
stos
shlb
movsl
repnz
imul
je
fdivp
push
pusha
scas
jle
push
scas
or
xor
and
xchg
cmp
mov
int
punpckhdq
push
arpl
xor
mov
lods
dec
orl
or
std
fistl
in
xchg
inc
xchg
insb
adc
les
pop
out
decb
and
call
icebp
mov
push
mov
call
icebp
testb
rclb
push
adc
inc
je
xor
mov
or
add
inc
dec
pop
mov
jbe
daa
pop
push
push
cmc
pop
cltd
xlat
dec
or
sub
and
adc
lds
rorb
add
es
jg
sbb
gs
cmp
icebp
mov
ret
sbb
cld
inc
jecxz
xor
movsb
add
xchg
fwait
sub
xchg
mov
and
adc
pop
lock
adc
arpl
mov
pop
adc
push
push
inc
xchg
xchg
fidivrs
ret
imul
and
mov
shll
mov
fisubl
ret
cmp
fldt
xchg
xchg
out
mov
pop
mov
pushf
jg
ret
sbb
push
xchg
dec
das
subl
frstor
xchg
leave
jae
jmp
inc
pop
inc
sarl
xor
lock
pop
std
push
mov
lahf
mov
aas
fs
js
jmp
leave
imul
iret
and
sub
test
in
jae
cmp
hlt
outsb
lock
ljmp
out
daa
xchg
je
jbe
pop
sti
stc
dec
dec
lods
mov
cmp
or
add
cld
adc
fists
xlat
aas
jae
mov
mov
cmpsl
xchg
andl
inc
jmp
in
xchg
push
and
int3
fidivrl
in
dec
add
dec
jp
sub
adc
inc
cmpsl
or
gs
in
pop
stos
je
dec
add
mov
dec
std
sbb
