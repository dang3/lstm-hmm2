push
sbb
in
cmpl
pop
call
push
push
add
fucomi
and
cmpl
jno
jo
pusha
add
push
mov
push
push
add
fmuls
cld
adc
adc
repz
push
daa
adc
dec
dec
sub
movb
sbb
jle
pcmpeqw
pushl
jle
bound
push
push
fwait
aas
hlt
xor
jp
jne
adc
or
xor
mov
xchg
or
sarb
lods
lret
push
inc
xor
test
rcrb
mov
decl
fcoml
dec
pop
push
mov
jl
jmp
push
bound
add
sub
repz
mov
mov
sbb
ja
das
add
clc
decl
test
pop
push
shl
addb
je
xor
and
subl
cwtl
psubsb
mov
push
push
push
in
sbb
push
mov
mov
sbb
mov
or
inc
jb
mov
stos
cld
popf
mov
sbb
add
adc
mov
inc
idivb
sti
push
push
jne
add
clc
sbb
add
shr
mov
fs
pop
fimuls
adc
std
xchg
or
sub
and
les
mov
sub
cld
lds
jge
ja
outsl
inc
dec
xchg
mov
or
mov
xor
add
ret
mov
add
movsl
fs
add
push
pusha
fs
mov
adc
push
testb
sbb
add
xchg
cmp
mov
dec
push
or
gs
out
testb
aaa
das
mov
mov
aam
ret
sub
xor
mov
cmp
je
sub
imul
test
adc
sub
xchg
out
arpl
add
jae
popa
inc
clc
or
cmp
or
pop
inc
js
clc
xchg
pop
pusha
cs
jne
xchg
sub
in
xor
or
pop
clc
mov
adc
ficomps
mov
orl
clc
jecxz
adc
dec
leave
gs
aam
or
mov
mov
sub
xor
sbb
int3
test
push
pop
pop
fs
enter
gs
pop
mov
cld
add
call
inc
mulps
xor
xor
jno
lock
dec
loopne
or
and
das
or
add
insl
call
and
ret
shr
and
clc
inc
mov
cmp
mov
mov
in
and
dec
hlt
pusha
inc
or
sub
nop
clc
sahf
mov
or
add
int
sub
ja
mov
adc
mov
dec
imul
mov
aas
adc
mov
add
jne
popf
outsl
notl
mov
add
lret
call
adc
out
push
push
loope
adc
adc
push
and
lods
fildll
test
test
loopne
cmpl
mov
aaa
mov
sbb
test
addb
cmpsl
fdivrs
sbb
pop
pop
mov
mov
pusha
inc
imul
mov
xchg
push
std
push
fmuls
push
imul
outsb
loopne
mov
or
test
out
fisttps
call
fs
or
dec
lock
repnz
xchg
ljmp
push
xor
and
cmpsl
mov
xchg
mov
mov
rorb
mov
in
xor
test
and
push
out
aam
and
push
push
sbb
sub
enter
cmp
cmp
jge
dec
lret
lds
cld
adc
and
sub
mov
ret
pop
sub
aam
xor
push
push
int3
mov
adc
addr16
sub
mov
dec
pop
ds
push
mov
pusha
or
mov
icebp
add
pop
insb
xor
push
lock
rol
cwtl
jnp
adc
and
ret
test
mov
sarb
cmp
xlat
push
fwait
ret
subw
and
test
push
scas
xchg
jmp
push
jle
sub
jmp
push
mov
push
iret
nop
insb
and
push
repnz
mov
movsl
nop
jle
aam
orb
inc
insb
inc
fdivs
sbb
mov
add
mov
jmp
jge
mov
je
mov
aas
stos
insb
push
lock
jmp
adc
or
and
mov
lret
xchg
push
lret
je
adc
adc
or
add
aas
call
out
mov
lea
inc
insb
add
jbe
test
jnp
nop
testb
pop
loopne
xor
pusha
in
xorb
and
inc
mov
call
aas
mov
adc
jno
mov
cmpsb
push
add
dec
mov
imul
stos
and
clc
es
int
cltd
es
loopne
sbb
inc
addb
adc
shrl
push
push
or
mov
hlt
fstps
decb
in
jno
enter
les
push
xchg
xor
push
les
mov
pop
and
adc
push
push
btc
nop
insb
cmc
into
inc
mov
les
push
xor
andl
jne
cmp
and
insl
cmpl
mov
jb
nop
sub
inc
int3
fwait
adc
pop
push
dec
dec
pop
and
inc
cmp
je
lods
rcrb
fs
adc
nop
and
testl
adc
ret
jne
imul
push
cmpsb
and
fs
mov
add
mov
sbb
jnp
sbb
cmp
mov
adc
stc
pop
rcrl
jg
rclb
pop
adc
adc
add
xor
fwait
cmc
jmp
dec
pushf
cmp
movsb
xor
test
fs
nop
imul
stc
pop
test
adc
xor
jge
sub
imul
and
cmp
xchg
push
sub
push
add
dec
fdivs
xchg
std
mov
or
mov
dec
shll
out
push
cli
sub
movsl
adc
inc
cld
shrb
je
jmp
ljmp
jmp
and
cld
je
in
aam
fnstsw
out
add
int3
rcl
and
jbe
add
and
lods
mov
sbb
ss
pop
pop
aam
mov
adc
dec
dec
lcall
fistpl
lcall
xor
call
es
pop
jo
subl
sub
addb
push
movsb
test
popf
arpl
jno
cld
inc
cld
or
testl
mov
sub
test
sahf
or
push
call
xchg
jae
push
enter
inc
popf
or
inc
add
call
pop
mov
cld
cvtdq2ps
inc
add
push
add
xor
fwait
inc
xchg
add
lea
push
dec
push
pushf
pop
push
inc
cltd
sbb
enter
push
test
mov
add
mov
adc
dec
xchg
dec
or
xchg
mov
mov
cmp
ret
push
loop
or
inc
adc
pop
xchg
sub
cmp
jge
adc
or
and
adc
mov
inc
bnd
movsb
mov
bound
sub
push
pop
xchg
cmp
push
push
pop
lahf
mov
ljmp
push
sub
jno
pop
push
fs
dec
push
mov
pop
jne
dec
push
and
xor
sub
inc
pop
popa
dec
sbb
and
sbb
js
xor
clc
sub
int
or
inc
cmp
je
inc
sub
int
packsswb
mov
in
adc
lret
cmp
jb
ds
cmp
test
push
mov
loop
add
repnz
push
jne
push
pushl
stos
test
add
dec
push
mov
bound
imul
jno
jne
dec
outsb
fnsave
or
ret
or
es
sbb
mov
and
sar
or
inc
cmp
inc
daa
cmp
movlps
pop
push
inc
enter
fs
inc
je
push
adc
cmpb
adc
fs
aam
movsb
ret
pop
or
dec
mov
lods
ss
sbb
lcall
je
push
push
jbe
push
jb
in
movsb
dec
in
insb
cmpsb
leave
dec
in
xchg
and
or
pop
add
idivb
jne
push
clc
push
xchg
in
nop
call
enter
add
pushl
nop
pop
mov
push
mov
popa
idivb
sahf
les
movhps
jecxz
or
test
jge
and
sbb
inc
jl
dec
pushf
xchg
or
lods
imul
dec
loopne
out
or
or
inc
push
adc
or
sbb
jb
fcmovnb
lea
nop
mov
dec
ljmp
je
mov
decb
nop
lret
or
ret
test
out
imul
cmpl
adc
cltd
sub
add
adc
js
cmp
addb
test
sbb
or
jo
data16
divb
pop
push
les
push
or
je
or
cld
pop
mov
add
or
or
sbb
int
sbb
push
adc
ljmp
inc
mov
xor
push
loope
sub
test
sub
mov
pusha
sbb
xchg
fwait
and
sti
push
push
push
and
jge
imul
xchg
dec
push
xor
push
clc
ret
shll
add
out
add
lea
add
push
xchg
sbb
lret
inc
inc
int3
jle
push
and
rorl
dec
fldcw
inc
fidivl
jne
or
sbb
aas
sbb
aaa
aad
stos
fldcw
cltd
cs
xor
xor
cmp
adcb
pop
pop
je
push
lea
push
push
popf
or
scas
icebp
xchg
xor
inc
pusha
inc
and
repz
adc
rcrl
mov
cmp
mov
cld
pop
adc
or
enter
jl
and
sub
adc
or
jmp
lcall
cmp
add
cwtl
mov
mov
xor
jmp
mov
or
mov
dec
adc
mov
popa
stos
jmp
mov
cmpsb
orb
add
adc
push
xchg
xor
sarb
push
fsubrp
inc
adcl
cmpb
fdivl
and
mov
mov
and
pop
jmp
icebp
and
call
shl
mov
add
or
inc
jmp
sub
outsl
adc
hlt
dec
sub
daa
xorl
adc
add
cmc
adc
mov
mov
dec
dec
lods
adc
sbb
orb
and
and
in
sub
sub
mov
push
jno
cmp
inc
dec
sbb
sub
pop
repnz
lret
call
int3
sbb
imul
cli
adc
mov
cld
lods
leave
lea
dec
cld
addb
lret
push
push
push
adc
dec
pop
sbb
test
and
stc
in
jns
dec
out
cmpsl
dec
ss
sub
jno
adc
stc
cmp
add
pop
dec
push
cmc
scas
push
insb
push
mov
in
mov
add
inc
push
arpl
pop
pushf
and
sar
enter
push
add
push
rolb
adc
ds
xchg
pop
adc
xor
adc
sbb
push
dec
inc
ds
jbe
push
lods
ret
jb
fs
jbe
test
mov
xchg
add
cmp
jnp
add
test
adc
mov
cld
dec
push
jo
add
imul
test
adc
lret
pushf
psubusb
test
cwtl
in
inc
movsl
sub
in
mov
sbb
outsl
or
mov
xor
in
sbbl
fildll
adc
push
ljmp
dec
sbb
and
and
and
jne
jmp
pop
call
mov
dec
je
xor
adc
test
mov
pop
jnp
inc
int3
push
lret
movsl
imul
inc
dec
and
sbb
int
adc
outsb
sbb
pop
dec
xchg
clc
icebp
pop
hlt
push
je
jns
out
vpor
jmp
dec
in
xchg
or
adc
or
sahf
and
lea
inc
hlt
cmp
add
jge
mov
mov
dec
sbb
je
or
enter
lock
xor
mov
adc
loop
mov
adc
xchg
xorb
dec
ret
add
not
pop
ret
in
push
fistpl
fdivl
sbb
shlb
mov
pop
or
lock
inc
ret
push
call
lock
inc
data16
push
loopne
inc
xor
decl
xchg
or
inc
or
je
dec
push
ja
fisttps
test
fcmovnbe
add
pop
sbb
cs
add
clc
push
pop
sbb
adc
mov
leave
push
or
and
lret
dec
or
or
int
or
or
iret
and
sarb
or
daa
or
sub
rcrl
aam
or
push
or
sub
fcomps
or
invd
fimull
inc
or
push
or
add
ficoms
filds
push
and
and
and
and
and
and
sub
sub
or
dec
or
cmp
in
adc
out
inc
or
pop
or
aaa
or
sbb
repz
or
sub
cmc
sbb
adcb
pop
mov
pop
movsb
push
cmpl
dec
js
adc
push
xor
sar
adc
pop
mov
add
shll
push
test
idivb
jne
add
pop
mov
mov
push
out
sbb
idivb
and
cmp
icebp
jb
xchg
dec
mov
mov
cmp
mov
pop
es
and
and
mov
cmp
inc
adcl
jb
and
jge
mov
dec
adc
clc
lock
shlb
fs
xor
sbb
cld
test
movsbl
rcll
push
sahf
shl
push
inc
cmp
xchg
cmp
mov
cwtl
in
mov
dec
push
in
insl
dec
inc
xor
jge
movsl
lods
test
cmp
call
push
adc
icebp
jbe
or
subb
les
and
fidivrs
incl
or
dec
and
push
pop
aad
push
pop
fists
aaa
pop
mov
cmp
and
sbb
shlb
adc
scas
dec
adcb
cld
imul
or
or
jecxz
call
int
adc
scas
inc
adc
push
mov
xor
enter
mov
insl
push
mov
icebp
jmp
or
inc
push
sbb
and
mov
mov
in
lret
cld
and
xchg
in
and
adc
xor
inc
loopne
insl
lret
adc
repnz
dec
adc
mov
fs
and
adc
pop
test
and
mov
or
inc
adc
std
sbb
mov
adc
xlat
or
xchg
test
adc
mov
adc
lods
inc
sub
sahf
cmp
or
push
mov
int3
inc
inc
and
fmuls
dec
test
and
adc
and
fs
shlb
dec
adc
push
dec
shrb
icebp
int3
shlb
pop
inc
es
jp
jmp
sti
adc
mov
std
inc
fnstenv
dec
in
push
jle
loop
xchg
bound
dec
cmp
scas
adc
or
or
pop
dec
mov
cmp
dec
dec
repz
mov
mov
push
inc
xlat
inc
ret
test
out
jae
xchg
aad
call
push
inc
xor
in
mov
test
sub
xchg
inc
xchg
or
mov
inc
and
push
or
test
mov
cmp
mov
pop
or
jbe
and
mov
dec
ficoml
scas
mov
roll
and
je
fiaddl
test
stc
insl
xchg
movsb
jp
mov
or
repnz
cmp
pop
subb
push
scas
inc
je
mov
or
xchg
mov
adc
pop
les
mov
mov
inc
stc
cmpb
dec
pop
rcrb
dec
dec
mov
add
mov
push
adc
inc
mov
das
aaa
lock
xor
dec
out
jno
xchg
aas
mov
pop
inc
xchg
clc
and
push
hlt
push
das
push
xor
xchg
mov
das
pop
in
in
push
loopne
popf
pop
aas
and
jmp
mov
jl
cmp
arpl
roll
enter
jmp
ficoms
add
lods
cmpsl
add
call
mov
sub
xor
nop
rol
test
sub
je
mov
sbb
and
je
push
movsb
and
mov
or
adc
mov
pop
and
xchg
adc
inc
mov
outsl
call
sub
mov
ds
ficoml
cmp
or
inc
add
xor
sar
push
jg
rcrl
mov
jo
dec
icebp
jge
jle
jne
sbb
inc
mov
bound
fisttpl
aam
js
push
dec
jne
push
and
fcompl
sbb
jnp
repnz
mov
jns
mov
or
rclb
clc
rcrb
xor
movb
mov
adc
test
jne
push
pop
jmp
or
mov
inc
stc
or
inc
mov
cmp
inc
loop
jbe
dec
push
shlb
cltd
jnp
or
daa
push
adc
movsb
lods
pop
mov
into
xchg
jecxz
insb
sub
mov
xor
fwait
in
cli
mov
cs
int
cmp
addr16
shrb
dec
add
push
adc
fcoml
xor
inc
faddl
xchg
cwtl
pop
xchg
jle
aas
and
jne
jb
xchg
and
and
lods
inc
inc
push
and
fs
dec
mov
mov
es
mov
outsl
jo
call
or
out
sub
mov
add
es
mov
cmp
mov
or
mov
dec
lcall
neg
push
push
int
adc
loopne
cld
dec
sub
sbb
test
cltd
cs
xor
add
and
pop
imul
cmp
sub
inc
mov
mov
sub
adc
loope
sbb
lret
and
rcrl
cld
and
sbb
cmp
dec
dec
aam
mov
aad
xchg
out
es
dec
adc
je
sub
or
mov
lock
aam
pop
sbbb
inc
ret
and
mov
pop
call
gs
inc
movsl
ret
mov
lahf
xchg
fs
aam
std
adc
mov
stos
cwtl
push
inc
adcb
mov
sub
sti
mov
inc
inc
adc
jns
adc
popa
inc
sub
jne
xor
test
inc
push
cltd
pop
or
pushf
xchg
mov
push
push
mov
loopne
pop
dec
movsl
lret
push
sub
dec
push
sbb
or
fs
push
and
xor
adc
dec
test
call
pop
jp
je
push
inc
and
mov
jge
clc
shlb
pop
push
inc
push
xchg
nop
add
movsb
inc
xchg
popa
sbb
push
inc
or
push
pusha
es
and
dec
aas
adc
mov
in
xor
and
imulb
in
pop
cmp
lcall
sub
jp
dec
mov
inc
dec
orb
jne
orb
andl
or
pop
je
mov
jnp
push
or
mov
xchg
cmp
nop
ss
xor
movsl
add
cmp
add
adcb
jno
xchg
inc
push
ficoml
lods
ja
push
pop
hlt
std
or
push
add
sub
push
les
test
adc
aas
hlt
xchg
pop
or
jno
mov
mov
mov
jecxz
aaa
fisubl
add
aad
push
mov
bswap
mov
mov
cwtl
stos
sbb
mov
flds
or
inc
in
adc
cltd
jo
dec
push
pop
imul
es
xor
jmp
dec
or
dec
push
out
sbb
jge
sbb
pop
xchg
cmp
inc
mov
lods
mov
sub
pop
pop
fidivrs
sub
cmp
or
sbb
xor
or
sbb
dec
mov
adcb
push
in
movzwl
cltd
mov
stc
push
dec
sbb
js
xor
inc
sub
xchg
adc
inc
cmpsw
je
dec
push
adc
inc
data16
or
cwtl
pop
test
add
adc
push
das
insb
sbb
or
cmp
in
sub
push
cltd
cli
repz
mov
int
sbb
sbb
and
adc
loopne
jbe
xchg
pop
pop
cmp
shll
push
xor
sub
inc
sub
aas
dec
adc
xchg
jl
xchg
rorb
ss
pusha
adc
push
xor
or
sub
je
in
jmp
cpuid
xlat
push
mov
aas
pop
sti
or
mov
jo
mov
push
pop
jmp
add
xor
jb
faddp
insb
sub
dec
das
xchg
sbb
sub
and
andl
add
outsl
sbb
jmp
cmp
cmpsl
sti
fiaddl
fs
mov
add
adc
add
or
sub
int
inc
or
clc
or
cmpsb
pushf
stc
sbb
pop
jecxz
and
xor
push
inc
jns
mov
pusha
mov
cmp
inc
and
rolb
in
and
inc
adc
cmp
sub
and
sub
fs
adc
sub
loope
dec
out
dec
xor
push
push
bound
and
adc
loop
or
add
mov
cmpsb
shlb
add
leave
jl
scas
call
ja
dec
sbb
pop
stc
cmp
clc
fsubrl
and
es
xor
sub
test
xchg
ret
pop
jmp
jne
inc
dec
cli
add
xor
clc
sbb
dec
gs
in
cld
pop
popf
pushf
push
jp
jmp
mov
shll
or
add
mov
lock
stc
push
faddl
jno
in
jae
pop
adc
push
mov
or
sbb
add
xchg
sub
jle
xor
cld
aaa
jle
icebp
jge
cmp
cld
sbb
mov
inc
xor
mov
les
in
push
mov
cmp
cmp
hlt
lods
mov
adc
cmpsl
or
push
mov
pop
xor
test
xchg
sbb
dec
add
movl
adc
jle
push
sti
jae
nop
cmpsb
cmp
arpl
xchg
push
hlt
in
jp
push
cmp
in
jge
adc
cmp
adc
mov
mov
shr
dec
push
dec
fistpll
int
mov
and
add
push
ja
and
pop
sub
adc
sbb
sbb
dec
pop
sahf
sbb
mov
push
je
push
jge
and
cmp
pop
loope
fisubrs
lock
inc
dec
xor
fwait
xor
icebp
adc
stc
mov
inc
inc
mov
stos
push
call
xchg
add
jecxz
call
adc
inc
fldl
sti
sub
nop
cmpsb
enter
mov
xor
add
inc
jne
xchg
je
lahf
jge
or
add
test
push
or
adc
test
and
and
pop
dec
dec
push
jle
int
test
inc
fldl
js
jg
mov
push
mov
push
mov
mov
adc
mov
mov
adc
xchg
mov
inc
or
and
dec
lret
jmp
and
dec
call
fcomps
pop
fmuls
mov
jl
inc
pop
rcll
sbb
sbb
push
sub
mov
push
cltd
xor
sub
or
add
shrb
pop
hlt
adc
dec
in
icebp
push
test
mov
sub
mov
ss
mov
mov
pop
mov
das
icebp
out
pusha
int3
mov
add
leave
in
testb
jle
mov
xor
inc
cmp
and
pop
test
add
call
scas
push
call
sub
rcll
push
cs
test
aaa
rclb
or
pop
mov
addb
loopne
or
hlt
adc
or
push
mov
nop
testb
push
sub
jmp
pusha
outsb
pop
mov
mov
inc
dec
lea
sarb
jae
andb
je
push
and
mov
sub
and
push
sbb
wbinvd
push
mov
gs
dec
push
in
fs
fcompl
aam
int3
test
mov
repnz
or
adc
sbb
mov
adc
lock
jle
mov
loop
enter
mov
push
pop
fucomp
idiv
daa
rep
push
testl
and
dec
bound
dec
dec
movsb
out
jge
mov
insb
push
and
sahf
mov
xor
push
hlt
sbb
xor
fstps
in
add
lret
nop
cltd
sbb
orb
frstor
and
sbb
push
pop
inc
adc
xor
push
rcrb
sub
call
and
idivl
xor
or
add
sub
adc
inc
xor
or
sub
pusha
mov
insl
and
add
popa
dec
lea
cmp
rorb
sub
inc
sub
cmpb
call
cmp
push
xchg
sub
mov
push
sub
mov
lret
push
das
xchg
add
sahf
les
std
xor
and
and
retw
sbb
push
xor
fmul
in
je
ljmp
jmp
popf
jmp
lea
jo
xchg
call
out
push
aad
adc
pop
lock
push
and
test
jecxz
push
outsb
daa
fsubr
cmp
inc
cmp
es
pop
jmp
adc
pop
popa
xor
dec
xor
fsubl
cltd
sub
aam
add
sbb
movsl
mov
lahf
test
push
mov
cmp
subl
add
in
and
mov
sub
adc
jecxz
bound
std
and
scas
xor
test
sub
sbb
push
push
dec
cs
dec
and
adc
and
cli
add
adc
cmp
outsl
mov
mov
aaa
push
sub
lock
mov
fs
icebp
les
adc
cmpb
xor
sbb
sbb
cli
std
and
inc
cli
and
daa
cmp
lods
jle
jne
stc
mov
std
adc
xor
ss
pop
lea
adc
dec
rcrl
in
bound
xor
das
cltd
sahf
pop
sbb
ds
punpckldq
rorb
xchg
cld
or
sbb
into
push
mov
cmp
mov
dec
repnz
mov
popa
mov
pop
adc
pop
cmpb
adc
in
pop
add
cs
pop
in
and
mov
int
std
inc
cmp
push
dec
mov
sub
inc
sbb
js
mov
aad
pop
lea
sbb
or
pushf
mov
test
sti
or
jl
shll
and
les
sub
mov
and
cltd
push
push
dec
mov
mov
rorl
out
xchg
leave
es
lea
adc
mov
cmp
sbb
mov
jo
je
cmp
test
adc
and
cmp
call
pop
je
inc
fs
jo
or
insb
cmpsb
std
or
push
daa
push
mov
std
xor
out
movsl
add
mov
and
mov
xor
xor
or
xchg
in
ret
sbb
mov
sbb
xchg
and
mov
or
jns
lea
hlt
mov
add
cld
mov
pop
cwtl
sbb
sbb
add
cmpl
aam
sub
dec
and
psrlw
add
dec
inc
test
add
insb
pushf
pop
pop
push
xchg
or
js
pop
and
mov
adc
insb
cmp
mov
sub
and
push
into
loop
sub
jmp
xchg
test
or
fs
xor
test
call
test
es
sarl
inc
pop
xorb
insb
jp
mov
fs
xor
add
push
jl
push
jge
push
ja
mov
outsl
cmp
sub
inc
jns
dec
push
js
xchg
adc
pop
xchg
jmp
xchg
ljmp
lea
sbb
pop
mov
push
sub
dec
inc
xor
sbb
cmc
add
sub
je
xor
inc
jge
ds
loopne
adc
add
push
fs
adc
and
jae
fwait
pop
hlt
stos
cmp
pusha
jae
daa
lea
mov
and
jo
pop
adc
popa
data16
add
xor
mov
dec
nop
clc
inc
xor
add
scas
push
mov
ret
or
xor
imul
mov
mov
jbe
pop
dec
rcll
orl
rcl
loope
call
gs
nop
ret
mov
inc
inc
and
inc
pop
mov
out
sub
sbb
jb
popf
cmpsb
fsubp
jmp
test
mov
loope
bound
inc
dec
add
push
in
mov
aam
jmp
dec
jo
or
mov
push
jne
jp
nop
mov
pushfw
push
hlt
dec
mov
mov
lea
movsl
arpl
lock
pop
jg
sbb
dec
dec
or
push
jp
mov
sbbb
inc
out
sbb
adc
leave
shll
jmp
clc
mov
push
dec
jg
sub
pop
mov
test
pusha
cmpsl
ret
dec
adc
sbb
call
je
jle
aas
dec
lock
sarl
jb
lret
dec
daa
insl
jb
les
add
xchg
and
call
adc
sbbb
xchg
push
shr
and
push
mov
sbb
daa
cmp
xor
sub
aad
in
add
lea
hlt
push
cmp
or
shl
in
fiadds
hlt
pop
mov
adc
pushf
push
cltd
pop
push
xchg
call
mov
mov
xchg
pushf
es
fcomps
lea
jl
outsb
inc
aam
aad
xor
pop
dec
in
daa
loopne
cmp
sbb
add
rclb
popa
xlat
enter
andl
dec
lock
pusha
cs
sub
inc
sub
xchg
rolb
pop
adc
and
mov
push
fdivs
out
pushf
subb
xor
scas
sub
in
std
or
shrl
mov
jne
call
pushf
inc
inc
pop
cmpb
inc
cld
lahf
jle
lds
mov
push
pop
sbb
shlb
flds
ja
fs
push
push
cmp
fmuls
popa
popf
xor
call
pop
jl
nop
dec
mov
inc
xchg
mov
or
mov
andb
add
mov
leave
lret
je
push
sbb
test
xchg
adc
xchg
mov
outsl
lds
in
mov
push
mov
ds
push
lods
popa
int3
in
call
rcl
hlt
mov
sub
xor
jbe
cwtl
dec
in
cwtl
push
jbe
cmp
mov
or
push
mov
cli
and
fcompl
xor
jge
jle
or
cmp
jb
push
xor
push
in
adc
pop
mov
or
sbb
push
inc
and
sbb
fisttpl
repz
mov
loop
je
loop
lds
cld
mov
add
push
call
fwait
mov
jle
mov
jbe
dec
ds
sbb
push
loop
sub
ss
dec
adc
mov
jl
pop
pop
mov
adc
add
mov
mov
mov
pop
dec
inc
cmpl
test
mov
loopne
cmp
rcl
jmp
out
in
fidivrs
imull
jmp
push
mov
push
jne
cld
jp
cmpsb
loope
das
xchg
test
pop
inc
jl
daa
xchg
jo
adc
push
jne
pop
fcomps
loopne
sti
js
adc
sub
outsl
ja
lret
dec
xor
sbb
adc
imul
xchg
mov
pop
jp
or
rorb
push
test
and
sbb
dec
out
popa
shl
dec
inc
rorl
call
xor
cmp
add
xchg
lcall
add
fistps
mov
lret
inc
mov
or
xor
push
cwtl
lret
insb
and
gs
sti
or
pop
and
adc
adcb
test
sub
shr
test
or
shl
add
add
je
rorl
rcrl
xor
or
mov
jo
addl
inc
jmp
push
mov
dec
gs
inc
push
or
dec
xchg
les
sahf
ja
dec
cmc
sub
push
popa
decl
mov
add
cld
in
xchg
cmpsl
mov
adc
or
push
mov
enter
pop
pop
insb
jns
sahf
push
cmp
jbe
pop
mov
notl
mov
mov
jle
imul
mov
adc
and
aam
out
cmp
je
mov
rcll
inc
mov
pop
xchg
ret
jg
cmpsb
add
rol
movl
or
int
jl
pop
xchg
das
sbb
adc
fsubs
adc
sub
and
shl
loop
call
mov
fbstp
fcoms
mov
mov
insb
mov
xor
mov
and
add
xchg
adc
movsb
sbb
mov
xchg
mov
push
nop
sub
and
leave
insl
movups
or
cld
nop
cmp
mov
mov
adc
adc
jne
incl
sbb
je
call
call
outsb
sahf
push
orb
les
jne
repz
mov
call
int
and
inc
and
pop
addr16
bound
call
pop
ficoms
lea
and
sbb
pusha
jno
adc
daa
pop
push
and
jge
pop
push
dec
cmp
or
dec
add
xchg
xchg
cwtl
sub
and
shlb
test
adc
movsl
push
sub
sub
push
and
mov
pop
sbb
sub
mov
adc
mov
insl
insb
push
ss
xor
std
mov
test
cmp
add
call
cmp
or
mov
jmp
cmc
jle
and
and
mov
loope
inc
inc
shll
es
hlt
imul
mov
mov
in
push
aas
mov
xchg
imul
out
es
nop
mov
out
inc
push
inc
pusha
repnz
jge
call
add
inc
enter
push
push
or
ds
imul
xchg
mov
mov
es
pop
inc
and
mov
test
inc
push
pop
mov
call
ljmp
hlt
and
push
inc
dec
stos
pop
push
pop
cwtl
or
cmp
adc
pop
out
cmp
mov
sbb
jne
pop
inc
and
dec
popa
mov
sub
adc
or
test
jle
jl
aas
ret
add
xlat
test
or
or
jl
xor
pop
ret
or
jno
shlb
test
fs
dec
xor
add
add
add
adc
dec
or
aam
shl
or
fdivrs
sbb
xchg
loopne
xchg
cld
push
cmp
loopne
or
idivl
jnp
test
xchg
xchg
jle
xor
aas
js
jo
push
xchg
incl
pop
repnz
mov
nop
jo
test
dec
push
data16
adcl
and
pushf
pop
in
xor
xchg
cmpb
jge
adc
push
test
push
jge
add
btc
addb
inc
orl
dec
ret
jle
test
les
inc
jmp
adc
xor
jne
mulb
and
push
mov
pop
jmp
pushf
cmc
leave
jns
mov
outsl
sbbl
cwtl
stc
or
lods
or
and
shrb
xor
cmp
cmp
pop
cmp
inc
cld
xchg
mov
call
and
push
mov
dec
push
or
aad
and
adc
das
and
or
leave
ja
sbb
dec
loop
leave
adc
push
mov
jl
or
and
cltd
inc
pop
jp
mov
cmp
sbb
lea
sub
test
xchg
push
lret
fs
push
mov
adc
dec
orl
jl
xchg
dec
fs
and
push
and
xchg
dec
pop
dec
sbb
add
mov
xor
jne
dec
sbb
iret
cmpsl
jno
mov
adc
popl
jbe
push
cmp
inc
loope
jb
orb
adc
or
mov
jle
xchg
push
push
adc
mov
jmp
push
test
jle
inc
mov
jg
mov
pop
call
xor
mov
and
repnz
mov
push
pop
and
inc
dec
lahf
cmp
stos
or
pop
jmp
inc
xchg
divl
mov
inc
jnp
sbb
jo
fildll
xchg
inc
push
adc
and
orl
sub
inc
pusha
and
xchg
or
jno
test
out
add
or
jnp
test
or
into
in
xor
mov
and
mov
fdivrs
push
sub
adc
push
clc
fs
adc
and
cmp
push
and
adc
aaa
test
xor
and
test
jbe
sbb
subb
sub
daa
iret
jle
and
and
or
mov
and
push
inc
push
sbb
nop
movsw
xchg
rcrb
call
sbb
mov
push
cmp
aad
xor
push
jbe
test
inc
push
or
fs
pop
adc
push
je
cmp
js
xchg
clc
jo
testl
pop
xor
and
imul
adc
adc
mov
xchg
mov
cmpsb
push
or
movsb
xor
dec
sbb
loope
rolb
inc
lcall
xor
inc
pop
das
push
dec
jnp
and
or
pop
lea
lahf
xor
pushf
stc
fs
lret
repnz
adc
mov
shll
and
push
push
mov
in
dec
mov
add
dec
sbb
cwtl
sub
mov
push
sbb
sub
aad
mov
or
xchg
sub
inc
xchg
or
cmp
sbb
daa
pusha
jo,pt
mov
mov
pop
mov
inc
jl
pop
je
pop
and
cld
push
imul
jmp
xchg
inc
fbld
xchg
repz
sbb
or
jmp
dec
cld
push
repz
xor
nop
jae
push
lods
adc
xchg
or
dec
pop
xchg
or
mov
and
sub
xorl
dec
int3
and
xor
pusha
aam
or
adc
cli
mov
push
sub
leave
push
cli
pop
mov
xchg
jl
movsb
adc
push
jne
lds
cmp
call
popf
roll
arpl
lock
inc
add
add
mov
dec
stc
mov
pop
adcl
loopne
faddl
push
xchg
cwtl
movsb
mov
xchg
jnp
sub
sbbb
jae
pop
pop
mov
shr
or
push
loope
test
das
pushf
xor
xor
push
mov
inc
rclb
dec
lds
xor
adc
sub
fdivs
xchg
mov
sbb
test
jmp
sub
fadds
add
mov
bound
sub
xor
pushf
daa
test
imul
cmp
cmc
inc
cmp
push
mov
xchg
add
ljmp
clc
test
imul
rorl
xchg
fdivl
fcomps
hlt
sysenter
xchg
jae
pop
jmp
pop
mov
sbb
out
inc
pop
jle
adc
push
cmpsb
mov
mov
popf
pop
mov
mov
add
inc
cmp
shrb
sbb
xor
push
inc
cmc
lea
sbb
fldl
or
mov
sar
jns
or
mov
sbb
dec
test
mov
or
popa
jl
and
dec
mov
jmp
dec
and
mov
pop
jbe
push
rorl
xor
bound
adc
dec
test
stos
xchg
xor
pop
int3
add
cmpsb
xor
adc
sbb
leave
xor
push
int
daa
or
bound
and
xchg
daa
sub
jb
aaa
stos
or
jbe
rcll
jns
nop
out
aam
negb
sbb
pop
adc
sbb
sbb
push
nop
cwtl
adc
stos
sub
push
dec
cltd
lds
inc
test
adc
sub
mov
or
jne
or
lds
jb
cmp
insl
dec
mov
cld
mov
imul
dec
loop
test
negl
xor
xor
mov
int3
mov
lods
enter
stc
sbb
and
adc
mov
xchg
je
mov
call
lock
shll
call
inc
jl
dec
sub
pop
movl
and
call
dec
mov
andl
adc
and
pop
xor
cmp
push
aas
daa
pop
push
inc
xor
xchg
in
mov
inc
ss
mov
daa
push
loop
dec
or
mov
pushf
daa
push
and
xor
jge
mov
or
sbb
pop
test
push
mov
gs
lahf
sub
or
sub
test
pop
and
mov
mov
test
adc
outsb
or
or
sbb
pop
movsl
or
iret
xor
adc
shr
cmp
inc
push
test
or
fprem
aaa
lods
daa
lock
popf
inc
cmp
fisttpll
jl
mov
das
push
and
or
pop
pop
cmpsb
adc
mov
sbb
call
insl
push
fbld
arpl
or
adc
jno
sti
pop
bound
adc
inc
adc
and
cmc
xor
sbb
adc
addl
lea
jmp
mov
das
mov
sbb
or
repz
call
lock
jb
mov
push
jg
sbb
test
mov
and
inc
in
dec
mov
pop
dec
or
je
leave
xchg
mov
jmp
jo
sbbb
in
add
inc
mov
mov
je
cmp
mov
data16
adc
push
pop
nop
and
iret
dec
gs
mov
test
sbbb
pop
or
jo
test
pop
bswap
cmp
rcr
imul
push
mov
nop
jno
push
sub
in
cld
pop
push
sbb
xor
xor
andl
rclb
imul
enter
mov
jnp
push
es
fstpl
nop
add
pusha
aam
fs
in
xor
mov
lret
subb
addr16
cltd
pop
in
adcl
push
test
cmp
mov
xchg
or
and
mov
in
mov
add
bound
lock
cwtl
scas
cwtl
add
dec
cli
test
shll
sub
stos
and
push
mov
pop
adc
je
cmp
push
test
int3
mov
sub
adc
dec
cld
push
outsl
push
add
test
or
call
or
push
mov
jno
clc
push
or
sub
lcall
ret
test
repz
call
cmp
xchg
stos
test
cmp
sub
jns
sbb
and
cmp
inc
gs
inc
push
lds
jl
pop
xchg
out
out
sbb
sbb
aas
pop
or
test
data16
sub
iret
add
je
scas
shr
cmp
jns
clc
dec
sbb
inc
jno
cltd
cltd
lea
or
or
cmpsl
xchg
mov
adc
cld
mov
mov
mov
shll
mov
add
mov
popf
push
xor
cmpsl
sub
mov
or
test
lcall
mov
pop
test
push
mov
pop
loope
in
sarb
fs
xchg
fisubrl
or
dec
out
cltd
ss
addl
mov
out
and
cmpsb
iret
outsb
adc
aas
loopne
mov
clc
fwait
adc
pop
and
imul
push
popf
mov
adc
xchg
push
inc
mov
inc
sub
xchg
loope
test
or
xchg
mov
dec
loope
mov
inc
jbe
push
jl
adc
loope
adc
jbe
mov
jno
push
jge
cld
adc
icebp
sub
ds
push
cmp
cmovbe
push
jbe
push
adc
push
mov
adc
dec
mov
adc
leave
jae
pop
mov
push
push
les
insb
push
jns
push
jb
jmp
cld
daa
and
aam
mov
je
add
push
rcll
pop
mov
adc
adc
test
fdivrs
xchg
cmpsb
adc
adc
pop
sub
loopne
fcoml
cmp
push
xchg
stc
orb
mov
stos
pusha
inc
sbb
fstpt
or
and
es
sbb
push
push
push
cmpsb
push
adc
loope
cltd
dec
or
insb
adc
ljmp
pushf
shl
xor
pop
xorl
mov
test
cld
adc
pushf
cmp
imul
push
je
psrad
xchg
sahf
bound
pop
in
mov
and
inc
shld
ljmp
add
mov
pop
pop
sub
leave
fsubrl
xor
adcb
push
lea
nop
push
cld
je
push
push
pop
shlb
movlps
push
pop
call
stc
mov
loop
xchg
les
sub
mov
stos
pavgw
mov
ja
and
or
pop
test
jne
mov
pop
cmpsl
add
shrb
inc
call
cmp
into
nop
pop
mov
sti
mov
lret
iret
idivb
jmp
fsubl
dec
push
imulb
les
and
pop
inc
mov
in
push
inc
mov
sub
xor
and
pop
mov
loopne
lock
incb
cmp
lss
or
in
dec
or
je
push
adc
or
nop
movsl
push
sub
sub
pop
pop
test
hlt
xor
call
int
orb
inc
adc
lock
les
dec
dec
push
and
pop
push
mov
and
lea
mov
push
movsb
je
push
sub
out
push
xchg
sub
mov
test
push
xchg
add
jmp
hlt
dec
xor
xchg
pop
ljmp
inc
inc
mov
mov
popf
test
lret
sub
das
out
sub
or
mov
xchg
and
repz
lcall
fidivrl
xlat
and
mov
sbb
adc
or
mov
and
add
aam
mov
sbb
inc
dec
xchg
dec
push
add
and
and
clc
mov
shl
pop
out
adc
fidivl
nop
inc
push
outsl
pop
and
pop
adc
daa
inc
scas
sub
mov
push
or
mov
mov
pop
mov
adc
andb
dec
lcall
bound
inc
adc
adc
sub
or
adc
or
sub
cmp
sbb
lods
adc
stos
gs
jmp
cmc
test
sub
outsl
lret
cmp
jbe
xchg
xor
cmp
enter
dec
divl
add
adc
cmc
lcall
test
adc
add
dec
mov
dec
dec
lcall
add
test
jne
ret
call
or
inc
ja
adc
jmp
pop
mov
or
sbb
pop
xchg
pop
and
cmp
pop
mov
pop
or
pop
pop
or
ss
mov
sub
call
bound
add
ds
mov
cwtl
or
les
or
add
lock
push
ja
xchg
and
cld
and
xchg
in
sahf
adcl
std
mov
adc
pop
cmpsl
push
jne
addb
push
cs
lcall
lds
push
xor
sbb
sbb
lahf
dec
adc
mov
mov
or
jae
add
pusha
test
mov
push
rorb
dec
into
jl
sbb
das
push
lds
adc
add
or
adc
xchg
fnstenv
push
nop
sub
inc
adc
pushw
dec
or
adc
mov
or
lods
sarl
jge
adc
mov
jne
in
cmp
hlt
call
mov
lock
test
push
xchg
push
adc
xchg
cmp
loope
fnstenv
mov
lds
jmp
dec
xchg
fwait
shl
lds
sar
imul
pop
dec
call
inc
add
add
inc
push
mov
and
lock
or
inc
jmp
std
xchg
pop
les
push
call
ja
js
pushf
enter
add
movsl
jge
sub
inc
mov
cmp
xor
inc
call
and
shrb
cmp
fmull
lds
mov
pop
and
xchg
jo
loope
lods
push
popa
lea
stos
decb
sarb
dec
inc
insb
add
call
sbb
cmp
sub
mov
in
hlt
and
jmp
xchg
push
pop
sbb
mov
xchg
insb
mov
xchg
cmp
add
and
or
push
es
add
mov
out
js,pn
mov
mov
jns
push
dec
sbb
xchg
loope
pop
das
pop
cmc
jle
pop
mov
adc
adc
test
imull
mov
cmpl
cmp
in
and
and
xor
and
xor
dec
and
dec
or
xor
mov
ja
mov
jnp
push
rorb
jp
or
inc
test
pop
push
loop
add
jecxz
icebp
popl
sub
cwtl
jo
std
xchg
xchg
jno
out
or
add
and
add
jmp
xor
mov
add
add
jg
mov
pop
enter
dec
orb
fistpll
jmp
push
in
cmp
test
test
mov
leave
mov
mov
inc
push
pushf
call
cmp
push
mov
sub
push
aad
outsb
aaa
and
xchg
std
sbb
xor
loope
inc
or
and
js
in
mov
adc
cwtl
movsb
and
test
adc
ficompl
clc
sbb
xchg
and
xchg
jl
lock
or
shlb
jge
lods
sbb
pop
jge
cmp
cmpl
inc
adc
sub
adc
mov
pop
lock
adc
inc
mov
enter
jle
orl
cmp
in
sub
cmpb
clc
shr
dec
adc
pop
sub
fs
leave
dec
add
push
pop
dec
mov
xchg
fs
xchg
test
les
or
inc
mov
mov
mov
test
pushf
adc
pusha
test
les
mov
and
xchg
sub
push
rorb
sbb
js
sbb
sbb
pop
jmp
xchg
sub
or
push
dec
mov
and
imul
outsb
lock
loopne
xor
sbb
cmp
les
mov
sahf
dec
and
loopne
mov
cmp
adc
fs
movsb
sbb
notb
fwait
xor
nop
int3
iret
shl
fsubl
aad
dec
or
xor
nop
or
lock
sub
or
xor
shl
iret
rclb
cld
out
loop
mov
in
inc
lock
sahf
shlb
js
dec
cltd
filds
aas
cmpsl
mov
insb
shrl
enter
inc
mov
dec
xor
cltd
mov
or
mov
fs
jo
les
mov
adc
mov
scas
hlt
clc
mov
adcl
incb
and
add
adc
sub
or
loope
jo
push
out
mov
loop
add
add
xor
loop
or
cltd
sbb
or
sub
mov
adc
push
mov
bound
in
sbb
cld
mov
bound
xchg
cmpb
xor
test
inc
sub
mov
clc
mov
xor
or
mov
adc
mov
aaa
jbe
cpuid
xchg
mov
xor
or
movsb
or
mov
mov
jle
xchg
ja
fbld
xor
inc
fs
addr16
add
inc
inc
lahf
adc
push
and
mov
or
xchg
or
xchg
aad
or
push
cmp
movsb
or
xor
xchg
movsl
xchg
cltd
xchg
lea
xchg
cwtl
adc
int3
mov
and
mov
pop
add
mov
mov
mov
push
les
hlt
pop
adc
jmp
lret
sub
adc
dec
movl
dec
push
das
rorl
or
fcoms
cwtl
and
sbb
sbb
inc
dec
and
and
and
mov
or
mov
jbe
cmp
jno
xor
rclb
addr16
and
lret
and
add
popa
jo
sbb
push
xor
add
in
call
int3
mov
xchg
sbb
mov
pop
add
push
dec
mov
pop
je
pop
fbld
jo
mov
sbb
rcl
jge
in
jg
test
and
inc
in
mov
in
xor
adc
xchg
test
nop
lock
dec
or
insb
and
or
or
int3
dec
daa
and
inc
fsubl
xor
call
adc
mov
cmp
adc
enter
xor
mov
fs
xor
dec
fisubs
ds
push
xchg
mov
push
mov
rorb
mov
mov
or
movsb
xor
push
test
in
xor
mov
adc
jb
movsb
test
arpl
cmp
and
dec
mov
inc
inc
pop
or
addr16
adc
rorb
mov
ljmp
pop
in
xor
outsb
mov
xchg
adc
mov
mov
xchg
cmp
lock
cmp
mov
or
adc
mov
mov
shr
rcrb
xchg
xor
dec
inc
les
sarb
faddl
lret
lods
cmp
jmp
pop
xor
push
adc
nop
dec
fsubrs
add
push
inc
jmp
add
push
push
mov
or
in
jg
pop
and
xorl
sbb
mov
adc
insb
jno
or
jge
jo
rcrb
push
and
nop
jl
insb
sbb
sbbb
cmp
loope
mov
and
nop
lods
mov
and
inc
jns
cwtl
in
cmp
xchg
mov
adc
mov
xor
adc
adc
push
mov
and
in
xchg
mov
mov
and
test
mov
cmp
loopne
adc
out
nop
loop
sbb
fs
xchg
cmp
repnz
adc
mov
push
xor
sahf
insl
xchg
push
jmp
mov
fidivl
pusha
sub
push
cmp
call
out
test
pop
out
pop
xchg
or
and
inc
sub
stc
push
adc
ljmp
or
repz
sbb
xor
jmp
js
imul
je
xor
test
mov
test
xor
mov
and
add
fnsave
push
pop
dec
sbb
rolb
cmpsl
les
sub
rorb
or
jle
popf
rcrb
xchg
cmp
jge
out
enter
addr16
sub
adc
cli
or
je
or
sbb
inc
cmp
jl
xor
ret
inc
jle
cmp
xor
jg
aad
in
je
adc
jge
mov
fildl
cmp
cmp
sarb
xorb
pop
test
js
fnstcw
faddl
lea
mov
mov
lea
stc
stos
pop
jl
or
fistpll
adc
scas
adc
add
fisttpl
inc
mov
add
idivl
pop
ss
cmp
add
jmp
mov
cmp
pop
jl
test
jg
shrb
lods
repz
pusha
clc
adc
lcall
mov
test
mov
nop
repnz
lods
add
hlt
out
dec
push
adc
insl
dec
ffree
dec
mov
jmp
xchg
ret
sti
test
mov
push
or
push
push
jnp
xchg
jecxz
or
mov
sub
jno
push
hlt
push
dec
mov
into
pop
sub
add
lds
dec
dec
adc
adc
pop
push
jnp
sub
xchg
mov
shll
dec
dec
push
or
mov
dec
add
xchg
subl
sub
cmp
std
aas
int
nop
sub
push
sbb
pop
xor
or
aam
lahf
icebp
pop
and
dec
lea
aam
or
sbb
and
push
dec
push
and
nop
push
test
and
pop
inc
mov
leave
rcrb
add
xchg
sbb
add
mov
pop
stos
push
lods
mov
xchg
xor
dec
iret
push
sub
jae
push
pop
mov
je
cli
or
lods
imul
cmp
mov
push
and
andl
orl
push
out
xor
or
leave
jb
out
sbb
dec
or
adc
or
lea
in
push
mov
inc
lcall
cltd
fnsave
cltd
fcmovnu
adc
xor
rorl
jecxz
and
ficoms
les
mov
inc
jns
adc
outsb
or
add
cmpsl
insl
push
xchg
adc
ss
push
shl
pusha
pop
pop
pop
into
add
ror
adc
daa
insb
mov
inc
sbb
lahf
push
sti
test
pop
inc
and
dec
push
call
call
jae
ja
xchg
jne
jne
sti
fsubrl
stc
test
sar
out
int3
xchg
addb
add
dec
hlt
mov
xor
cmpl
mov
pop
push
je
test
jne
das
or
scas
std
lds
test
into
sbb
mov
mov
inc
gs
mov
shlb
inc
mov
xchg
gs
pop
or
lock
mov
or
pop
push
leave
and
xor
or
fwait
in
dec
inc
sbb
cwtl
and
scas
jecxz
mov
aam
daa
cld
cltd
bound
xchg
dec
scas
popa
xor
push
imul
xchg
adc
push
addr16
mov
mov
sub
adc
fldcw
or
loop
and
scas
xchg
push
push
gs
push
add
pusha
add
imul
or
movsb
rcrl
stos
pop
mov
movsl
pop
call
mov
pop
out
ret
sbbl
jne
inc
outsb
in
xor
add
push
les
sub
cwtl
adc
pop
inc
pop
ret
shll
dec
fnstenv
or
mov
test
and
imulb
push
push
and
mov
xor
jp
stc
pop
ret
xor
pop
push
jb
push
adc
adcl
jno
add
or
jl
xor
stos
adc
addr16
jg
pop
shl
sbb
add
adc
int3
jne
jmp
push
pop
sub
in
sbb
add
subl
lea
jmp
out
add
sar
mov
lret
add
jle
ss
cmp
loopne
pop
sub
notl
clc
mov
gs
pop
pop
imul
icebp
push
push
push
cmpsb
inc
and
sarb
mov
cli
pop
cld
inc
jo
and
xchg
xchg
xor
push
mov
jg
lods
insb
call
add
push
icebp
jmp
popaw
shlb
xor
insl
leave
cs
cld
and
pop
or
mov
jmp
sbb
js
sbbl
lea
ret
pop
xchg
pop
cltd
lock
push
inc
mov
pop
pop
sub
push
call
pop
push
push
test
and
mov
call
xchg
call
adc
and
sbbb
inc
aad
data16
xchg
fsubr
and
std
dec
lds
dec
or
or
lock
xor
mov
or
cld
jo
testl
cmpsb
pop
mov
or
cmovs
sbb
incl
mov
test
test
and
lock
imul
jae
mov
mov
or
adc
adc
pop
jmp
sub
xchg
and
cltd
insb
fs
bnd
rorb
push
cmp
lods
sub
inc
bound
inc
lock
mov
jno
jge
inc
adc
mov
mov
sbb
push
test
cld
sub
je
pusha
stos
imul
cltd
pmullw
adc
dec
push
sbb
ds
push
inc
and
hlt
adc
and
mov
lret
bound
mov
arpl
es
loopne
repnz
push
push
adc
mov
lahf
dec
sahf
dec
cmpsl
mov
cld
cwtl
js
icebp
dec
pop
sbb
lahf
jmp
call
cld
inc
add
in
push
icebp
cmpsb
xchg
pop
or
xor
lret
bound
cli
movsb
jnp
out
cs
and
gs
push
jno
mov
dec
ss
ret
insb
push
dec
lock
cld
adc
jo
fcmovnbe
inc
mov
sub
push
loope
mov
and
pop
sti
xor
push
ss
test
xor
test
dec
addr16
mov
in
cli
add
lods
sub
add
pop
daa
dec
add
push
lods
jb
popf
stc
inc
sub
mov
lock
std
push
out
dec
bound
xchg
pop
inc
adc
xchg
mov
std
dec
sub
data16
xchg
fadd
imul
leave
push
xchg
xchg
je
xchg
adc
add
notb
icebp
fsubs
adc
lods
push
add
jne
mov
cmp
lret
sbb
sahf
cmp
pop
mov
divl
pop
jns
mov
cmp
jne
movl
out
push
das
push
fwait
loop
or
xor
shll
incl
sarl
call
aad
pop
xor
push
and
inc
jl
and
pushf
lsl
push
in
addr16
insb
lahf
sbb
movsl
stos
sbb
es
test
push
xor
jmp
into
jo
pushf
repnz
es
dec
xchg
repz
adc
movsb
sub
je
push
and
test
adc
mov
ret
cld
xorb
xor
shll
cld
mov
fstps
das
and
sub
addl
es
xor
call
mov
dec
add
loopne
add
cmp
fdivr
into
scas
and
test
push
clc
push
enter
fsubr
lahf
call
stos
sbb
cmp
outsl
bound
mov
xor
mov
xchg
pop
lds
sub
mov
lea
aaa
jmp
xor
mov
addl
push
pop
jmp
pop
add
dec
out
cmpsl
movsb
repz
fistpll
movsb
jge
sbbl
xor
popf
mov
clc
insb
dec
dec
jbe
sbb
rol
jmp
lock
cld
lret
add
movsb
push
test
cwtl
sar
add
or
xchg
mov
sub
add
packuswb
add
inc
icebp
enter
repnz
inc
add
addl
movsl
jne
inc
rolb
inc
inc
mov
in
or
or
call
pop
cmp
jb
cmc
dec
sub
cltd
cs
adc
gs
popa
adc
stc
push
in
adc
or
cmp
dec
repnz
hlt
push
in
testl
mov
cltd
inc
subb
mov
ss
dec
mov
jo
aad
jp
test
xorb
sbb
add
leave
push
ja
mov
mov
pop
insb
pop
fisttps
add
dec
jecxz
sbb
sbb
adc
adc
sub
sub
push
call
push
sub
or
push
test
push
sbb
dec
add
bound
hlt
add
pop
inc
pop
sahf
ds
inc
push
cmp
pop
movsl
mov
andb
jmp
loope
sbb
mov
pop
stos
xchg
sar
mov
out
fisubs
or
add
jb
jl
adc
or
mov
inc
or
jecxz
or
mov
or
dec
nop
test
rorb
inc
fs
and
loopne
push
mov
pop
in
xchg
and
dec
cld
mov
bound
fcoml
pop
add
shrl
lods
das
jp
dec
or
out
sbb
or
xor
daa
sbb
jns
daa
add
push
jne
dec
mov
mov
test
pop
daa
fisubs
dec
add
sbb
push
subl
push
bound
sbb
adc
icebp
or
mov
movsb
enter
or
add
popf
mov
addb
cmp
and
in
sbb
adc
imul
xorb
jae
in
cld
into
lret
push
sarb
call
xchg
ss
punpckhdq
and
aad
pop
lcall
mov
push
aad
xchg
mov
pop
imul
lods
or
sbb
fidivrs
movsl
adc
lret
jne
pop
jge
lea
ret
insl
mov
adc
repz
inc
sbb
jl
test
push
in
outsb
js
stc
sub
add
ja
ret
xchg
pop
jbe
pop
jbe
push
mov
stos
mov
cwtl
lock
mov
xchg
jns
aas
rclb
mov
adc
imul
or
jge
test
xor
inc
es
jmp
adc
outsb
popl
add
jae
pop
sub
adc
loope
add
scas
lahf
dec
push
dec
sbb
cmpsb
xchg
sub
sbb
jmp
scas
test
inc
adc
mov
xchg
push
lock
xor
push
daa
push
scas
mov
push
mov
and
add
mov
and
dec
pop
ret
repnz
mov
imul
push
js
popa
notb
mov
adc
lock
push
cmp
add
or
jge
mov
sub
mov
cltd
pop
inc
dec
test
dec
xchg
int
jnp
sbb
pop
sbb
inc
shll
push
push
aas
sub
pop
popf
and
ret
and
mov
mov
sub
xchg
test
incl
jle
pop
loope
pop
pushf
adc
fs
cmpsb
mov
dec
testb
sbb
inc
push
push
cmp
pop
out
es
pop
cmp
or
jne
push
and
sbb
shll
adc
xchg
cmp
in
or
js
clc
ljmp
inc
push
sbb
inc
add
add
mov
lea
sbb
sbb
sbb
mov
inc
stos
sbb
test
test
iret
int
vmptrld
enter
push
cmc
lea
add
pop
test
push
add
push
pushf
stos
into
xchg
pop
data16
test
icebp
sbb
mov
rcll
fs
and
cmp
test
loopne
push
addb
jge
mov
push
mov
jmp
lods
push
outsl
and
data16
enter
or
in
movsb
mov
jmp
inc
and
push
je
ss
sbb
push
pop
enter
pop
mov
push
pop
daa
dec
cltd
mov
repnz
ljmp
aaa
inc
lock
lods
fisttpl
push
mov
popa
lds
or
and
insl
jbe
add
sub
hlt
std
xchg
or
mov
iret
aad
sub
mov
xor
ja
xchg
dec
in
dec
xchg
inc
xor
and
dec
hlt
add
jge
or
psubsb
hlt
enter
adc
xchg
dec
mov
and
shll
jmp
or
adc
xor
cmp
push
add
call
mov
or
jnp
ljmp
adc
es
adc
fs
test
mov
pop
add
ja
call
and
xchg
and
add
push
ljmp
int3
in
pop
leave
and
adc
sbb
lcall
les
ret
and
xor
xchg
data16
inc
adc
xchg
and
sbb
test
or
shl
inc
mov
push
mov
or
imulb
inc
in
mov
push
lods
aam
push
adc
dec
cmp
push
push
lods
sbb
jmp
sbb
mov
lods
insl
sub
cmp
mov
jno
or
adc
xor
sbb
sub
bound
in
push
pop
scas
push
or
push
push
in
xchg
sub
xor
repz
divl
or
mov
push
daa
jg
sub
jecxz
movsl
jmp
sbb
cltd
push
adc
enter
adc
mov
dec
xor
sub
add
pop
pop
inc
mov
add
jp
or
rorl
adc
mov
xchg
lahf
or
ja
pcmpeqb
enter
cmp
int3
push
and
push
clc
adc
or
test
test
or
pop
icebp
push
xlat
or
adc
and
adc
adc
ret
or
push
nop
mov
and
pop
adc
sbb
out
je
scas
sbb
cmpsb
pushf
test
and
out
pusha
mov
pop
mov
js
mov
mov
insl
je
lea
mov
aam
stc
adc
in
movsb
mov
sbb
jmp
in
xor
clc
sbb
comiss
movl
lea
fiaddl
pop
sbb
add
arpl
in
and
in
xchg
add
test
shr
adc
push
push
xchg
sbb
mov
ret
addr16
fildll
orl
dec
jne
jl
pop
call
add
add
add
aad
mov
add
push
or
mov
sti
cwtl
movsb
es
jne
loope
daa
mull
push
dec
pop
out
jno
mov
mov
xor
or
mov
jne
lods
dec
das
xor
or
mov
cmp
test
inc
data16
js
mov
or
xor
cmp
xor
sub
push
aas
adc
mov
stos
xorl
sub
mov
aas
test
aas
pushf
inc
aas
nop
inc
and
addb
push
jbe
jp
scas
push
cli
sub
jl
cld
xchg
loopne
lahf
bound
and
jl
sub
mov
out
xor
inc
mov
aam
clc
cs
sbb
or
fcom
pushf
mov
mov
lret
testl
movl
inc
xchg
jne
push
push
adc
add
out
arpl
sub
aam
in
inc
and
mov
adc
and
and
sbb
push
push
lods
or
out
test
in
test
xor
mov
push
push
push
inc
cmp
push
lods
push
pusha
pop
ret
mov
nop
sub
sbb
and
push
push
mov
sbb
fdivp
mov
cmp
jl
xlat
testb
mov
sbb
arpl
push
mov
sbb
cwtl
jmp
das
mov
push
pushl
cmp
wbinvd
pop
pop
pop
jmp
cmc
andb
or
test
push
sub
les
jge
sbb
push
add
pop
mov
sub
add
fsts
lock
out
outsb
jg
lods
push
or
xchg
mov
fwait
pop
push
inc
insl
in
repz
dec
or
stc
push
lods
sub
push
cmpsl
dec
cltd
pop
add
aas
clc
push
adc
push
lret
mov
or
je
call
jl
imulb
pop
xchg
hlt
mov
inc
mov
mov
enter
lock
movb
pop
xor
or
dec
mov
inc
sbb
push
shl
and
imulb
test
scas
xchg
sbb
fidivs
pop
sti
dec
sahf
push
xor
pop
roll
cmp
aam
adc
dec
loop
mov
adc
ret
popa
loop
popa
adc
movsl
arpl
ret
cwtl
mov
aas
aam
mov
pop
pop
adc
xor
inc
int3
xor
pushf
lds
dec
add
pop
insl
lods
sbb
push
fiadds
xchg
cmp
lret
ds
adc
or
je
ja
testb
push
aaa
cmp
pushf
sbb
sub
bound
cmp
mov
mov
jp
cvttps2pi
add
pusha
sub
push
mov
loop
les
fcompl
popa
int
pop
inc
or
push
cmp
insl
jp
daa
cld
xor
sbb
bound
movsb
inc
and
and
sbb
nop
setae
mov
xor
mov
in
lahf
repnz
xchg
sahf
xchg
or
test
xchg
mov
faddl
cli
imul
and
and
xchg
out
adc
imul
addr16
int3
cmp
lahf
mov
jbe
inc
adc
or
call
fs
repz
neg
xor
xor
fsubrs
inc
pop
sbb
int3
inc
mov
adc
sbb
decl
cmc
and
and
pop
inc
sub
popf
enter
push
or
xchg
jb
mov
test
mov
sub
jae
inc
adc
sub
xchg
pop
mov
adc
mov
nop
std
adc
push
fsubs
adc
leave
jns
adc
int3
xor
adc
jno
sbb
xchg
mov
sbb
xchg
lret
jle
sbb
mov
sub
mov
sub
adc
sub
pop
xor
xchg
cmpsl
or
sbb
xchg
mov
sub
and
fs
out
leave
ds
nop
js
les
icebp
pop
pop
push
cmp
push
xor
and
enter
pop
mov
mov
dec
adc
inc
sbb
xchg
mov
and
jmp
sub
mov
enter
cmp
call
xor
fs
clc
push
mov
push
xor
cli
xchg
pusha
sub
fsubp
and
pusha
fdivs
clc
test
in
cmp
or
sub
inc
inc
add
mov
je
cmp
mov
cmp
or
adc
mov
pop
jno
adc
aam
cmpsl
cld
cmp
xorb
push
es
lcall
test
inc
enter
or
add
and
inc
cmp
jb
jmp
jb
test
int
movsl
jae
pop
xor
jno
push
xchg
and
or
imul
xchg
cmp
add
rol
cwtl
jb
test
je
pop
enter
mov
pop
test
pop
or
clc
jnp
int3
mov
inc
iret
or
dec
xor
xor
and
xor
jne
loopne
jmp
popa
adc
inc
leave
sub
push
inc
mov
mov
enter
ret
je
sub
sbb
or
test
mov
mov
jle
lods
ja
in
bound
jo
mov
xor
lods
ja
xor
test
jne
inc
xchg
push
xor
sub
cwtl
add
bnd
aaa
sub
into
notb
lods
pop
or
lock
and
sbb
cmp
cld
dec
mov
pop
adc
lret
es
loope
and
cli
jge
mov
pop
xchg
les
inc
mov
clc
mov
sti
dec
pop
cld
cli
bound
fsub
loope
jp
nop
xchg
movsl
fnsave
push
mov
add
xor
push
xor
jecxz
or
pusha
lcall
call
push
sub
push
sbb
cmc
pop
push
mov
mov
mov
cmp
icebp
jge
test
in
jecxz
push
imul
dec
aad
inc
sub
sub
inc
in
cli
pop
scas
ret
je
adc
adc
ljmp
lock
xor
inc
xorl
or
and
jne
aaa
push
movd
or
and
shlb
cmp
pop
push
cmc
out
push
xchg
jae
xchg
sbb
mov
iret
push
cmc
pop
imul
stc
addl
leave
je
jmp
mov
iret
test
or
daa
inc
jge
pop
je
inc
or
out
sbb
xor
xchg
or
adc
das
js
or
call
es
push
adc
mov
rcl
mov
mov
out
jo
mov
aas
mov
sbb
pop
lahf
rclb
and
mov
dec
add
jnp
xchg
lcall
iret
movsb
mov
nop
arpl
jbe,pt
lea
pop
popf
adc
add
cmp
jb
icebp
xor
pop
mov
pop
gs
dec
adc
xchg
pop
pop
and
loopne
xchg
push
movzbl
repz
and
repnz
lcall
lods
enter
ret
ja
es
shl
stc
add
add
lea
shr
inc
inc
loope
fsubrp
or
out
push
mov
add
inc
lea
push
add
push
outsl
add
shlb
orl
fistps
and
mov
and
scas
clc
adc
sbb
in
xchg
jg
mov
add
inc
sbb
aas
pusha
or
pusha
sub
add
mov
sub
stc
lcall
mov
jo
lret
mov
inc
mov
and
stc
movsl
inc
call
xor
hlt
xchg
fmul
nop
sub
push
jne
mov
sbbb
mov
mov
fs
xor
inc
pop
pop
cmp
stos
and
aam
sbb
mov
mov
pop
xchg
sbb
xor
addr16
scas
add
cltd
mov
jmp
or
mov
jmp
add
pop
mov
pop
inc
leave
rol
mov
jmp
jle
js
cmp
insl
adc
sub
mov
jle
mov
ds
les
and
push
dec
je
scas
rcrb
jl
fimull
test
adc
scas
adc
mov
int3
inc
mov
mov
inc
enter
inc
add
and
lret
aaa
cmp
and
es
enter
mov
pop
dec
jno
add
aaa
mov
movl
int3
fisttps
or
mov
xor
add
or
rorb
inc
adc
sarl
jg
jg
inc
test
mov
dec
fdivl
call
mov
stc
inc
push
cmp
push
test
xchg
inc
repnz
stos
adc
loop
js
push
shrb
mov
mov
mov
int3
mov
int
lds
adc
and
jl
out
inc
sbb
or
jae
or
inc
test
enter
push
sub
mov
xor
lret
lods
pop
add
je
mov
mov
cmp
jg
stos
mov
les
aaa
in
sub
sarb
daa
mov
les
mov
push
mov
es
jnp
cmp
push
mov
pop
lret
xchg
push
and
and
or
fsts
xor
dec
push
clc
add
cli
inc
cmp
sbb
fstps
push
pop
xchg
mov
pop
inc
jmp
push
sbb
pop
xor
movsb
mov
or
sbb
push
out
sbb
adc
dec
and
addr16
xor
int
ljmp
mov
scas
inc
xchg
sbb
push
or
rorb
sarb
pop
fs
pop
cmp
sbb
mov
mov
inc
dec
inc
sbb
std
in
fwait
mov
popfw
icebp
mov
mov
push
mov
xorl
daa
add
fsubr
in
ret
dec
sarl
mov
cld
repnz
test
sub
in
xor
sub
mov
es
dec
or
stos
movsl
inc
adc
sbb
xchg
inc
lret
and
movb
xor
sbb
push
cmpsl
adc
aam
xor
cld
and
and
and
mov
and
adc
and
adc
cmp
sbb
pushf
es
insb
adc
lods
cli
ret
adc
dec
dec
leave
push
loop
cmp
bound
xor
or
push
inc
xchg
pop
inc
sub
adcb
push
xor
shr
xchg
and
jmp
xchg
push
and
dec
mov
sbb
jne
push
daa
jmp
movsb
imul
inc
add
and
es
and
shrb
pop
int
adc
sbb
fdiv
in
or
test
loopne
mov
fs
adc
sbb
or
jne
pop
push
push
movsb
push
aam
mov
enter
lock
mov
xlat
roll
mull
and
xor
mov
in
push
sub
std
cmp
inc
aad
jecxz
notb
push
and
pusha
adc
movb
jecxz
mov
jno
mov
ret
push
jle
lret
and
sub
inc
notb
insb
rolb
negl
jne
das
fisubs
sub
rorb
or
imul
dec
cld
jo
add
pop
mov
jl
jne
out
sub
rolb
lahf
or
sbb
stos
cmp
les
call
mov
pop
inc
inc
sbbb
jmp
inc
xchg
jns
jmp
pop
pop
mov
sub
push
push
cmp
dec
jae
repnz
or
push
ja
imul
and
mov
sub
mov
xor
or
mov
push
xchg
push
int
pop
hlt
sub
icebp
sub
repz
mov
sub
push
es
out
mov
cs
fimuls
test
jmp
xor
ret
add
dec
psubq
out
test
and
jge
cmp
jae
jne
jmp
xor
push
push
addr16
subb
pop
gs
sbb
insb
push
int
lea
sub
call
adc
addr16
mov
cmc
push
lds
je
and
sbb
sbb
mov
and
in
and
clc
mov
cmpb
mov
lock
popa
inc
outsb
inc
pop
jmp
add
jg
or
adc
mov
and
sbb
mov
lods
ljmp
cld
aaa
xchg
cld
int3
lret
sub
pop
dec
es
psubsw
and
js
sub
xchg
hlt
inc
add
add
add
push
xor
or
dec
cld
mov
adc
pop
push
out
test
stc
pop
psubd
push
xchg
and
inc
adc
mov
fs
inc
adc
andb
ret
lock
jne
xor
test
std
mov
xor
outsb
inc
movl
mov
mov
push
add
mov
idivb
jg
sub
push
pop
mov
or
cmc
mov
test
adc
cmp
adc
mov
hlt
in
jmp
cld
and
clc
xchg
popa
sub
mov
xor
cmp
push
lcall
sub
dec
adc
repnz
lcall
xchg
cmc
fsubl
repnz
push
ss
and
xchg
sub
jmp
les
pusha
mov
mov
mov
xchg
out
adc
in
jno
lea
mov
imul
adc
int3
test
mov
push
gs
mov
sub
movsl
mov
inc
enter
inc
jne
fdivr
push
loopne
or
cwtl
push
cmpl
add
mov
es
sub
mov
fprem
push
fwait
xchg
cmp
xor
inc
and
pop
or
icebp
pop
enter
add
cmc
outsb
rcll
je
adc
ret
jne
insb
xor
sbb
sub
movsb
adc
inc
or
xchg
popa
lcall
push
inc
mov
sbb
push
jb
jns
cmp
cmp
ljmp
xlat
imul
sbb
or
xchg
gs
pop
mov
jo
lods
xchg
sbb
insb
aaa
sub
xchg
jle
add
dec
test
inc
shl
jae
js
sub
dec
and
lahf
outsb
adc
sub
jg
mov
das
lods
pop
jne
les
mov
xor
aas
mov
cltd
shrb
adc
and
dec
cmp
pop
cld
and
cmp
cmp
nop
xchg
inc
adcb
push
loop
adc
pop
cwtl
xchg
sub
out
gs
pop
mov
dec
es
test
das
je
decl
adc
or
mov
jl
fcompl
sub
je
mov
call
scas
les
nop
in
pop
je
push
xchg
add
cmp
dec
sbb
imul
lock
popa
mov
repnz
push
in
hlt
imul
or
dec
ljmp
addl
pop
nop
jo
movl
mov
adc
mov
pushf
stos
scas
fs
adc
int3
mov
mov
sahf
push
outsl
loop
add
jg
mov
insl
add
mov
jne
mov
out
adc
call
pop
and
aas
es
sub
call
enter
dec
inc
mov
loop
ss
hlt
mov
int
jbe
andb
and
sbb
rorb
xchg
out
and
add
or
jge
inc
jae
call
movsl
adc
cwtl
and
and
add
pop
mov
pop
push
mov
out
call
adc
or
pop
cli
adc
jne
idivb
sub
push
jecxz
mov
pusha
jae
cmp
dec
jge
hlt
lcall
cmp
jbe
and
mov
je
sbb
clc
sbb
inc
scas
inc
mov
fdivs
jo
adcb
mov
sub
test
cmc
pop
pmulhw
call
push
pop
push
call
jle
xor
add
jmp
jmp
dec
mov
sub
lcall
push
aaa
les
pop
dec
inc
xor
mov
cmp
aaa
je
or
inc
sub
mov
ret
fdivrs
push
test
sar
adc
stc
or
mov
hlt
pop
or
or
jns
and
pop
pop
add
mov
orl
and
shll
mov
enter
hlt
and
jge
imul
push
or
adcb
jg
int
or
pop
jmp
lea
daa
call
movsl
add
sub
xchg
nop
test
push
sub
aaa
push
enter
call
and
addb
push
fmuls
xor
ficoml
mov
shll
adc
mov
cmp
jo
inc
test
cmp
xor
cld
mov
sub
hlt
mov
mov
or
mov
xor
pop
cmpb
jne
inc
pop
add
jo
movb
dec
pop
movsl
mov
es
push
add
dec
jns
cmp
lahf
push
sub
and
das
dec
add
cmpb
in
xor
mov
sbb
pop
ja
ja
scas
ret
and
xchg
inc
adc
sbb
mov
xchg
push
lds
mov
jbe
push
call
maxps
dec
daa
sbb
bound
pop
push
mov
push
pop
lcall
lods
inc
scas
faddl
out
andl
loopne
fnstenv
mov
sbb
sbb
push
fs
call
subl
shrb
and
call
jmp
adc
lea
jae
dec
inc
inc
mov
push
or
xchg
push
push
xchg
adcb
mov
stos
xor
add
add
decl
lock
fnstsw
mov
adc
shl
lea
test
cmp
je
push
push
inc
scas
dec
sbb
sub
sub
imul
xor
loopne
push
call
adc
enter
mov
sbb
mov
and
push
test
add
arpl
sbb
notb
sub
push
cmp
adc
push
mov
js
shlb
xchg
pop
dec
loope
clc
cmpsl
fwait
mov
sub
bound
nop
adc
mov
mov
and
shll
movb
call
inc
in
lret
pusha
push
repz
pop
test
jne
xchg
fmull
in
jb
lret
test
push
xchg
adc
imulb
mov
jo
cmp
fnstenv
or
inc
add
add
std
add
mov
in
push
imul
scas
or
push
adc
jle
add
in
shl
cmp
and
push
push
add
xor
fistps
sub
xchg
dec
test
push
addr16
mov
and
test
mov
in
mov
dec
mov
aam
pushf
inc
mov
xchg
mov
push
imul
loopne
scas
sbb
adc
push
js
std
arpl
pop
and
aaa
outsb
mov
xor
imul
sub
inc
imul
not
std
xor
mov
xchg
xor
dec
jmp
inc
cld
adc
mov
je
and
add
inc
loop
and
or
shr
mov
int3
mov
scas
mov
mov
and
adc
mov
test
jge,pn
ljmp
stos
out
mov
dec
jae
mov
mov
pop
aam
pop
jbe
cltd
add
pushl
pop
inc
adc
dec
pop
add
enter
and
cmp
insb
notl
sub
nop
fs
xor
test
cli
das
mov
aas
test
dec
clc
dec
cmp
dec
adc
jbe
jo
xor
hlt
and
cld
cmp
daa
and
stc
mov
sub
mov
push
dec
mov
adc
inc
nop
outsb
hlt
xchg
scas
sbb
or
lea
dec
js
xor
aam
popa
mov
and
or
cld
adc
shll
sub
add
sub
sub
cltd
pop
cmpsb
pop
stc
sbb
sbb
mov
rclb
lahf
rorb
repz
xchg
add
sub
add
mov
jecxz
dec
mov
jo
jle
nop
scas
test
push
inc
jo
aas
and
mov
jmp
imul
fmull
inc
cmp
fldt
adc
inc
push
and
fdivr
inc
je
lock
add
mov
adc
nop
jns
test
cli
adc
pushf
gs
loope
add
lock
out
xor
clc
sbb
cmpsb
mov
dec
into
adc
adc
scas
mov
lods
add
call
xor
loope
pop
mov
inc
cmpsb
test
mov
test
cmpsl
ds
mull
push
sub
cmpb
mov
pop
test
lret
inc
jg
inc
dec
dec
cmp
fmull
push
movsl
adc
mov
clc
lea
mov
cmp
dec
movhps
pop
jg
aas
and
or
jne
dec
gs
das
and
and
lods
adc
gs
arpl
xor
enter
push
inc
xor
cmp
pop
pushl
clc
popf
or
aam
test
mov
inc
mov
aaa
arpl
dec
mov
fistl
dec
lods
hlt
in
cmp
push
xchg
inc
sub
movsb
dec
or
jmp
or
add
push
pushl
mov
fstpl
cld
or
jb
insl
les
mov
adc
jmp
fmuls
adc
sbb
jb
lods
cmp
and
mov
cmp
and
push
xor
hlt
std
sbb
cld
test
addl
mov
xorl
arpl
orl
fisubs
mov
jg
fs
mov
and
aam
call
je
xorl
cmp
sub
sbb
jmp
adc
fsubrl
dec
push
mov
mov
add
mov
xchg
cvtps2pi
add
inc
rcll
loopne
movsb
mov
lods
and
jl
cwtl
xchg
sub
push
mov
push
xor
jno
push
mov
pop
pusha
or
in
out
test
in
lods
push
cld
ja
cld
and
je
push
movsl
cmp
or
sub
add
dec
stos
dec
jb
dec
adc
add
movsl
xor
mov
fsubr
add
subb
movsb
adc
lods
jae
xor
mov
push
adc
enter
mov
scas
in
xchg
adc
bound
xor
or
mov
data16
call
les
mov
xor
push
adc
and
lods
sbb
ljmp
sub
pop
xorb
mov
adc
lcall
aam
dec
ljmp
mov
xchg
adc
popf
mov
movsb
and
adc
xlat
cmp
sbb
mov
or
or
jle
sub
sub
in
lret
mov
adc
std
mov
xchg
jmp
adc
add
cld
pop
add
mov
xor
call
cwtl
sub
test
inc
cmp
fs
dec
pop
mov
dec
mov
fnsave
in
xor
imul
adc
cmp
and
push
push
stos
jno
xchg
jns
mov
test
pop
dec
int3
xchg
and
popa
mov
push
call
mov
push
xchg
inc
stc
out
adc
cmp
add
pop
hlt
nop
mov
add
adcb
adcl
test
pop
push
xor
push
ss
mov
pop
and
jp
cld
adc
cmpsl
test
and
andb
mov
inc
test
int
mov
mov
mov
les
rolb
aam
jns
and
and
fmull
loopne
inc
dec
std
and
in
adc
or
and
inc
and
js
adc
and
cmpsb
les
clc
adc
sbb
xor
pop
sub
or
and
jne
mov
or
test
mov
out
test
inc
and
sbb
addb
sub
push
adc
ficoms
sub
nop
adc
and
mov
and
push
dec
or
inc
bound
in
or
movsl
push
dec
cmovns
mov
push
cmp
or
and
sub
push
push
adc
enter
sub
dec
adc
sbb
jne
scas
mov
dec
pop
stos
or
test
enter
and
push
inc
imul
or
adc
aam
popa
nop
in
push
movsb
sub
sbb
test
add
inc
sbb
xchg
test
xchg
pop
mov
sbb
rclb
cmp
sbb
ficoml
inc
jp
dec
adc
sbb
and
sbb
or
shlb
jmp
lock
pop
push
or
test
enter
xchg
sub
inc
sbb
sub
stos
mov
sbb
mov
mov
std
mov
int3
sbb
loop
fwait
or
into
sbb
jno
out
cltd
adc
sub
push
inc
pushf
jp
and
movsb
mov
adc
mov
sbb
inc
dec
and
adc
or
inc
mov
xor
fisttpl
and
nop
xchg
mov
pop
repnz
test
and
adc
mov
test
enter
and
inc
sub
hlt
adc
jne
mov
fcoml
or
js
mov
cs
sbb
test
and
fs
xor
pop
nop
mov
rcrb
aam
inc
stos
les
xchg
or
xchg
nop
cld
mov
inc
mov
dec
enter
mov
sbb
or
nop
or
sbb
sub
and
sbb
add
inc
out
mov
lods
adc
sarl
loop
nop
add
xor
or
ss
inc
xchg
shrb
and
mov
dec
pushf
adc
mov
push
fsubrs
add
lods
sti
ja
inc
loopne
in
mov
xor
in
notb
dec
cwtl
mov
mov
push
jo
xchg
sbb
inc
adcb
jl
cwtl
and
dec
cmp
sbb
mov
push
jmp
clc
mov
pop
test
mov
adc
popf
xor
add
jo
jnp
pushf
xchg
nop
ret
xchg
mov
pop
push
xchg
mov
repnz
push
pusha
or
jae
sub
enter
arpl
bound
pop
and
fdivr
xchg
test
jmp
lahf
add
mov
and
movsb
aaa
mov
rclb
dec
test
nop
adcb
jmp
cld
xchg
ds
movsb
push
outsl
sub
repnz
sahf
mov
imul
cmp
xchg
pop
sbb
sbb
fst
std
out
sbb
movups
outsb
enter
cmp
js
jl
fwait
test
jbe
inc
xorb
xchg
push
and
mov
mov
pusha
sbb
xchg
mov
mov
inc
xor
adc
and
xchg
and
inc
xor
mov
or
inc
mov
adc
or
test
mov
or
lods
mov
aas
inc
psadbw
add
js
push
and
mov
movsb
sbb
and
dec
loop
jno
nop
pushf
dec
testl
jnp
call
call
sbb
insb
cs
xor
inc
lock
in
pop
cmc
popa
dec
cltd
ret
test
out
or
xlat
aaa
sar
or
inc
xchg
sahf
loope
adc
lock
and
nop
adc
cmp
push
sub
adc
xchg
addr16
inc
sbb
dec
loop
imul
dec
and
cs
fwait
les
ret
mov
shlb
cwtl
dec
pop
add
rol
in
cmp
loop
xchg
aam
push
mov
sub
adc
and
mov
test
inc
sahf
cmpsl
fsts
movsb
cs
pop
push
inc
outsb
push
inc
push
daa
push
dec
nop
dec
sub
loop
movsb
xor
cmp
dec
push
mov
lods
bound
inc
xor
sbb
mov
xchg
test
add
insl
mov
and
std
adc
lods
cltd
popa
jne
pop
inc
stos
test
jb
inc
sbb
push
inc
aad
cmp
enter
mov
daa
icebp
iret
imul
shl
cmpsb
imul
insl
and
cmp
movsb
fs
xchg
sub
cmp
sti
or
xchg
mov
nop
int3
lret
pop
jecxz
cmpsl
in
fs
adc
and
push
adc
cmp
push
and
xchg
lcall
add
mov
mov
xchg
inc
dec
sub
negl
test
test
rcr
fidivrs
pop
xchg
insl
adc
aaa
and
mov
mov
or
xchg
aaa
mov
sbb
cltd
call
enter
inc
jo
jp
or
or
negl
inc
je
cmp
jecxz
inc
adc
jl
pop
xchg
and
mov
xchg
aam
mov
cli
sbb
adcl
scas
cmp
mov
inc
and
inc
mov
arpl
or
and
adc
mov
xchg
sub
stos
sub
inc
inc
sbb
in
inc
adc
dec
push
dec
adc
sub
jg
les
sub
arpl
inc
call
mov
stos
jle
scas
xchg
mov
adc
ret
xchg
jl
nop
xchg
enter
sub
xchg
and
sub
les
inc
or
adc
dec
mov
push
imul
or
test
les
daa
sbb
xchg
adc
ss
adc
mov
add
clc
test
enter
lea
sub
inc
add
mov
popf
mov
sbb
mov
cmpsl
cmp
mov
call
imul
push
into
sub
mov
das
js
rep
jns
xchg
insb
sbb
das
mov
lds
xchg
das
pop
test
jno
adc
push
ljmp
scas
imul
imul
mov
lea
inc
and
push
jl
push
and
sub
sbb
gs
enter
inc
jmp
stos
inc
movhps
jecxz
icebp
xchg
mov
arpl
lidtl
je
jmp
call
add
lea
and
push
inc
pop
dec
cld
push
loop
adc
and
sti
xor
pmulhw
adc
das
pop
inc
xor
xchg
insb
jmp
xor
add
and
and
jg
sbb
and
test
das
jge
xor
mov
cmp
ljmp
test
mov
jno
add
jg
cmp
jp
dec
xor
insb
cmp
push
out
mov
lea
in
adc
jne
or
shrb
mov
xorb
jne
icebp
cmp
das
and
add
sub
xchg
xor
cmp
popf
push
cmc
adc
js
xchg
or
andb
mov
mov
outsl
jo
sti
cltd
jmp
testb
lods
lret
shll
popa
sbb
or
mov
sbbb
add
cmp
pop
push
adc
icebp
cmp
hlt
loopne
in
mov
sbb
jmp
hlt
mov
cwtl
jl
inc
insl
insb
or
or
jo
sahf
fs
push
and
push
mov
jge
xorb
fsubr
dec
add
inc
cmp
inc
icebp
loop
adc
add
sub
loopne,pt
test
int3
data16
hlt
insl
sbb
jne
ficompl
repz
in
sbb
rep
mov
lret
or
roll
movsb
cltd
dec
rclb
ret
repz
es
dec
dec
xor
sub
xchg
mov
xor
sbb
aas
ret
xchg
aaa
loop
mov
xlat
xchg
jl
fdiv
sub
inc
repz
inc
js
hlt
test
aad
sub
arpl
js
test
jle
xlat
or
sub
push
and
hlt
or
ficomps
jne
call
pop
jmp
push
and
push
aad
addr16
sub
lods
inc
pop
sub
cld
or
insb
inc
and
inc
sbb
rclb
jo
mov
fs
mov
les
sbb
lods
aam
jle
sub
mov
ss
dec
shrl
cmp
mov
shll
push
sbb
sbb
xchg
mov
push
sub
out
pop
clc
cmp
jge
mov
ds
jecxz
aad
xchg
mov
adc
stos
cld
or
xlat
subl
push
sbb
xchg
sbb
xchg
sbb
lret
fmuls
jbe
enter
push
mov
test
in
jae
scas
sub
inc
dec
or
push
xorl
dec
test
push
add
adcl
test
sub
insl
mov
daa
aad
lods
sar
sbb
repnz
mov
add
push
es
xor
inc
inc
jmp
push
test
jl
cmp
cltd
inc
xchg
xlat
lcall
xor
add
rcl
pop
in
bound
and
fimuls
js
data16
jmp
sbb
or
popf
ret
add
inc
or
call
jp
out
inc
sbb
test
stos
lds
push
and
jns
adc
cld
ret
nop
and
inc
push
jno
test
xor
sbb
adc
sahf
jmp
or
es
cli
and
push
jle
popf
sbbl
testb
and
mov
popa
xor
or
adc
mov
sub
stc
inc
je
xor
loope
push
sub
jl
mov
cmp
mov
add
lods
cmpsb
and
cmc
jmp
jnp
or
cmc
iret
and
idivb
and
cmp
or
sbbb
sbb
pop
ja
hlt
imulb
inc
cmc
or
push
inc
jnp
ds
lods
pop
inc
mov
xlat
cmpsb
push
mov
bound
dec
mov
or
loopne
adc
jbe
in
les
mov
inc
sti
cmp
jo
inc
sub
xchg
xorb
pop
inc
xchg
xor
push
push
xchg
add
jbe
jne
xchg
loopne
inc
ds
inc
mov
jb
and
xchg
dec
data16
das
rorb
jae
and
orb
xchg
aam
bound
imul
inc
pusha
ds
jle
and
pop
sub
dec
daa
insl
jne
xor
mov
fnstcw
gs
xor
xor
popa
sub
push
pop
jmp
xchg
pop
fs
push
inc
outsl
sbb
and
or
enter
mov
lret
pop
std
or
cmp
adc
xor
mov
or
test
xor
pop
adc
adc
mov
jmp
int
or
xor
mov
pop
adc
and
dec
adc
or
pop
cmp
or
jmp
pusha
lahf
dec
mov
xchg
push
es
movsb
test
push
int3
pop
sti
sub
enter
xchg
dec
inc
fs
mov
adcl
jle
adc
sub
add
or
enter
push
mov
test
and
ror
jp
jo
bound
sar
loop
hlt
andb
xchg
inc
sub
mov
cmp
pop
xchg
sti
sub
inc
mov
mov
fidivs
sub
sbb
jae
pop
out
test
cli
inc
xor
push
dec
es
dec
sub
ret
and
mov
sub
mov
jne
adc
or
sbb
jl
jge
sbb
inc
inc
push
and
enter
pop
lea
xlat
add
js
mov
inc
jl
or
jmp
push
or
pop
adc
mov
pop
cmpsl
push
adc
loop
jmp
lods
push
mov
xchg
or
test
dec
in
mov
xlat
mov
or
scas
and
loop
push
pop
adc
inc
and
push
inc
mov
dec
adc
mov
cmp
and
orl
inc
nop
mov
notb
lret
or
loopne
mov
inc
mov
leave
mov
and
xchg
and
movsb
xchg
and
repz
lods
or
xchg
popa
adc
push
cmp
or
test
adc
mov
dec
xor
xor
mov
into
enter
mov
test
enter
and
adc
sbb
inc
xchg
pop
test
jo
popa
cmp
test
and
push
inc
fsubs
int3
cmp
addl
jae
and
inc
rol
jl
bound
adc
je
mov
test
enter
daa
mov
mov
and
add
adc
adc
test
dec
xor
sbb
test
cmc
sub
dec
adc
or
ficoms
sub
inc
test
aam
sub
inc
mov
outsb
or
mov
mov
call
lds
cmp
push
rclb
sarl
xchg
pop
pop
ret
sub
test
mov
cld
sub
and
les
and
js
sbb
jo
std
les
add
push
cwtl
adc
xchg
mov
nop
cwtl
mov
lret
decb
and
push
xchg
inc
cmp
mov
cmp
cmp
pop
mov
or
push
or
sub
or
ja
add
insb
push
inc
push
ds
shr
xlat
std
push
mov
pop
mov
pop
mov
xchg
repz
fdivrs
ljmp
outsb
dec
shrl
mov
inc
jmpw
or
adc
inc
cmp
and
adc
inc
lock
cmp
lcall
jno
call
test
mov
inc
lock
fs
cltd
mov
pushf
fcmovnb
jl
mov
sbb
popa
adc
pop
pusha
shr
sbb
pop
jmp
or
clc
sub
or
inc
jge
test
inc
jle
test
inc
xchg
jne
inc
sbb
inc
imul
cld
icebp
popa
ja
adc
or
inc
bound
jne
ljmp
test
adc
sbb
xchg
mov
jmp
fs
jl
and
add
adc
nop
test
mov
adc
cltd
push
aad
xlat
or
frstor
xchg
scas
adc
shrb
jne
mov
dec
and
inc
or
call
clc
cmpsl
lret
je
movsl
or
fimull
pop
mov
xchg
sub
or
fwait
adc
sti
mov
insb
adc
and
dec
aaa
jmp
mov
inc
adc
xchg
insb
jno
dec
pop
test
jmp
inc
push
call
or
inc
insb
and
add
and
or
pop
ficoms
adc
mov
push
jmp
xchg
out
sub
xor
sbb
xchg
test
dec
pop
and
jmp
and
movsb
adc
movups
and
test
jnp
out
xchg
pop
xchg
pcmpeqd
adc
loopne
adc
push
sahf
cli
inc
movsb
and
or
mov
inc
dec
adc
mov
inc
fdivs
into
movsl
adc
cmp
xchg
inc
jb
and
mov
test
inc
test
and
pop
loope
pushf
xchg
rcpps
jp
jne
and
sub
lods
xchg
lds
sub
inc
and
jno
filds
add
loop
sub
les
sub
xor
pop
popf
imul
test
sub
inc
and
mov
stos
loop
lahf
and
sub
inc
and
sbb
mov
cmc
and
lds
movsl
movsb
inc
sub
push
aaa
inc
and
cltd
pop
aam
xor
mov
sbb
mov
sbb
or
out
js
add
test
les
rorl
outsl
nop
js
stos
pop
sbb
addb
and
sbbl
mov
sbb
test
rcrl
or
mov
and
or
inc
bnd
and
fistpl
sbb
test
enter
and
mov
xchg
mov
sbb
xchg
test
enter
mov
sbb
adc
and
xor
cmp
sbb
into
ja
mov
sbb
test
cmc
jbe
pop
jb
adc
or
in
mov
sub
mov
and
adc
or
nop
xorb
inc
imul
movsl
push
lock
inc
push
push
and
ret
mov
adc
cltd
mov
pop
sub
and
adc
xor
nop
adc
ret
adc
inc
test
test
lods
enter
sub
mov
or
test
and
cmp
dec
rcrl
mov
cld
jae
in
xor
adc
shrl
invd
mov
ret
cmpsb
cmpsl
ret
pop
push
pop
add
mov
fsubp
mov
push
adc
es
js
stc
or
insb
mov
jg
push
sub
aas
movzbl
pop
mov
adc
call
fisubs
dec
outsb
sbb
cmp
mov
sbb
push
repz
cmpsb
and
push
push
sub
bound
lds
in
inc
mov
les
add
das
and
push
in
and
sbb
jae
xchg
pushf
mov
add
dec
cmpsl
and
sub
inc
or
mov
cmp
or
inc
jae
into
or
fcoms
xlat
or
mov
lock
pop
mov
mov
and
shlb
ret
inc
mov
sbbb
or
and
inc
imul
test
mov
cmp
sbb
test
enter
stos
and
sub
inc
add
jb
cmp
xor
inc
and
push
and
adc
mov
inc
stos
lcall
adc
aaa
std
xchg
dec
mov
inc
in
ss
fimuls
daa
in
repz
lcall
int3
lret
fists
jl
jbe
fldl
inc
mov
sbb
stos
lcall
xchg
out
xor
clc
cs
addr16
in
lock
das
repnz
mov
xchg
jmp
mov
adc
xchg
mov
sbbb
loopne
add
js
mov
into
fwait
pop
push
lods
and
jo
out
repnz
inc
jo
push
pop
dec
inc
sbb
sub
push
nop
adc
out
and
adc
adc
popa
fs
lods
adc
or
xchg
add
mov
sub
cmp
push
cmpsb
mov
fbstp
ljmp
push
pcmpgtw
push
insl
adc
sub
movsl
std
sbb
pop
and
push
les
push
pop
int3
jnp
push
or
movsl
push
clc
outsl
mov
das
inc
mov
push
stc
jmp
or
dec
out
insl
mov
incl
adc
cwtl
mov
fs
and
dec
in
std
mov
fldenv
lock
inc
and
push
mov
sub
test
pop
cmp
and
addr16
cmp
int
push
lret
or
in
sbb
push
mov
roll
mov
leave
pop
repnz
xchg
mov
les
mov
or
jmp
int3
movsl
mov
incl
arpl
jne
jmp
iret
push
enter
mov
sbb
rcrb
push
jmp
mov
repz
int
or
stos
add
sub
sbb
in
and
call
std
outsb
sbb
es
sub
inc
jb
jo
add
fdiv
adc
mov
fs
inc
mov
dec
sahf
or
adc
pop
mov
hlt
jbe
bound
setne
and
loopne
mov
insl
insl
jns
pop
jbe
sub
pop
in
movsl
add
mov
pop
mov
mov
jns
push
paddsb
sahf
adcl
outsb
loop
add
adc
mulb
faddl
in
dec
mov
lcall
sub
stos
cltd
inc
cmpsl
gs
pusha
xor
jo
scas
adcl
jb
mov
push
mul
arpl
and
push
adc
jecxz
dec
add
push
adc
in
add
mov
pop
aas
xchg
push
dec
jo
ds
pop
pop
outsl
adc
lods
pusha
xchg
popf
rcrb
stos
test
mov
and
and
fs
loop
adc
fs
outsb
adc
mov
inc
out
jmp
mov
jmp
fmul
mov
shrl
call
mov
jg
cs
push
cmp
adc
nop
or
xchg
cmp
and
aaa
shlb
xchg
adc
loop
add
adc
and
movsb
test
push
adc
push
pop
mov
lods
out
mov
add
pop
cmp
jle
jne
sbb
sub
daa
arpl
ret
adc
jmp
stos
outsl
outsb
movsb
push
sub
fnstenv
xor
push
sub
cld
xor
add
or
pop
dec
or
cmp
adc
shll
lea
pop
enter
mov
or
inc
adc
orl
mov
and
ljmp
rcr
mov
or
inc
das
pushl
jne
jmp
sbb
jnp
lcall
test
push
and
arpl
test
cmp
adc
or
dec
xor
mov
push
add
leave
lock
hlt
cmp
inc
jae
xchg
inc
xchg
jmp
sbb
sbb
push
and
in
stos
enter
and
pop
outsb
mov
cmp
int3
xchg
dec
outsl
rcl
mov
inc
cmp
mov
test
loopne
int
add
int3
cmp
sahf
inc
imul
ds
stc
ja
div
push
adc
arpl
dec
jge
dec
xor
sbb
add
popa
sub
add
iret
sbb
mov
jle
lock
gs
and
shlb
push
inc
cmp
movsbl
add
push
into
out
dec
ljmp
jg
mov
push
cmp
cmp
adc
xor
adc
push
jo
jno
je
js
sub
jnp
loopne
mov
addb
and
push
icebp
fildll
push
adc
mov
popf
inc
aaa
cmp
sub
mov
inc
lea
les
mov
or
xchg
sbb
push
dec
les
call
gs
add
push
sub
test
sub
inc
stc
or
sbb
and
into
dec
test
dec
cli
xchg
sub
push
pop
imul
sbb
cwtl
inc
fdivrs
jle
jbe
dec
adc
test
adc
add
push
adc
xor
or
push
xchg
xchg
call
jns
cmpsl
adcb
imul
cmc
cld
mov
pavgw
cmp
and
mov
lds
cwtl
pop
dec
in
call
test
lods
jne
xchg
testl
or
sub
push
add
dec
or
mov
cli
push
adc
jo
in
lods
into
icebp
sbb
repz
sbb
fisttpl
inc
jg
invd
fstpt
fadds
imul
sbb
cmpsl
jno
bound
pop
out
loop
pop
adc
jmp
icebp
fildll
imul
sub
inc
pop
cld
adc
sti
xchg
mov
pop
lahf
xchg
and
test
test
dec
mov
xor
cmpsl
adc
sub
test
sti
and
xchg
xchg
inc
cmpsl
test
mov
adc
subl
shr
iret
mov
pop
pop
xor
mov
dec
cmp
jge
mov
inc
insb
cmp
rcrb
gs
shrb
dec
nop
rolb
cwtl
mov
cmpsb
adc
rsqrtps
and
inc
in
sub
inc
in
adc
xor
or
aam
in
sub
inc
pop
or
xor
jge
pop
jmp
lods
insb
mov
and
or
pop
adc
cmpsl
xor
mov
dec
sub
aaa
sbb
jmp
mov
movsl
adc
dec
cmpsl
outsl
push
inc
out
or
sub
mov
mov
pop
out
fs
jo
cmpsb
repz
and
adc
or
loope
xor
js
or
inc
pop
test
loop
xchg
js
test
cmp
test
xchg
inc
in
dec
in
inc
push
push
clc
adc
in
cld
aam
pop
mov
jo
and
or
xor
je
pop
jo
adc
inc
inc
les
and
mov
pop
bound
pop
adcb
in
xor
std
or
dec
into
in
xor
mov
xor
cmpsb
jno
mov
sbb
test
adc
pop
mov
mov
adc
sbb
mov
mov
mov
adc
inc
fucomp
cmp
lock
push
pop
dec
jno
or
or
lods
inc
or
ljmp
lock
xchg
xchg
fs
xor
ret
pop
push
popa
out
push
sti
xchg
hlt
clc
cmp
xlat
fcom
xchg
ja
and
dec
cld
cmc
mov
cld
xchg
movsl
bnd
dec
popa
cmp
in
fdiv
clc
test
jo
lock
clc
jno
or
jecxz
mov
test
cli
push
and
mov
push
xor
xchg
mov
adc
loop
jne
xor
or
push
and
jmp
xor
outsb
xchg
and
sar
daa
sbb
mov
test
incl
pop
mov
push
adc
das
pusha
xchg
insb
test
sbb
lods
shll
mov
push
test
pop
cmp
adc
mov
movsb
in
sbb
inc
mov
pop
movsb
inc
in
mov
adc
mov
xchg
add
loop
out
xchg
and
cld
lahf
xor
ds
xchg
clc
push
stos
sbb
pop
insb
loopne
adc
jne
lahf
or
adc
stos
cmp
loop
popl
mov
fcmovu
lret
jb,pn
dec
mov
and
mov
sbbl
or
mov
test
xlat
inc
xor
sbb
stos
push
std
stc
sub
ds
pop
adc
mov
xchg
stos
mov
pop
jne
jo
or
pop
cli
push
push
imul
pop
inc
mov
jns
dec
shrl
fs
lods
insb
jle
test
icebp
push
mov
mov
loop
cltd
mov
enter
dec
int3
push
mov
jnp
js
and
aad
lods
jnp
mov
adc
pop
cmp
mov
fmull
fadds
repz
hlt
lea
pop
mov
cmp
xor
adc
inc
push
cmp
int3
push
shrl
jnp
jle
sbb
add
repnz
pop
mov
or
and
sub
inc
jmp
push
inc
cwtl
mov
xlat
inc
cmpsl
adc
int
pop
sub
dec
mov
pop
mov
xchg
in
adc
sub
xor
push
movsb
sub
sbb
or
es
xchg
dec
data16
mov
cmc
pop
inc
pop
rol
mov
imul
push
fwait
movsl
int3
outsl
shrb
pop
push
push
pop
sub
sbb
bound
or
call
inc
dec
xchg
or
jecxz
lcall
incb
jge
inc
adc
into
int3
pushf
mov
jecxz
dec
test
mov
xchg
and
adc
je
inc
sub
cmp
pop
iret
decl
sub
imul
pop
lods
mov
xchg
fs
mov
or
scas
lcall
mov
push
adc
lret
loope
mov
dec
dec
push
orb
mov
lret
or
sub
mov
mov
jno
xchg
movaps
jno
jg
push
push
sub
loope
enter
sub
inc
imul
dec
out
adc
cmp
nop
pop
sbb
add
mov
inc
adc
push
fisubl
and
mov
mov
dec
scas
cmpsb
inc
jmp
push
cmpsb
sub
inc
push
and
stos
lret
mov
mov
cltd
jnp
and
mov
adc
and
mov
adc
imul
lea
xorb
inc
lret
cmp
xor
fwait
mov
jb
sub
dec
mov
lahf
mov
cmc
add
push
shlb
mov
sub
ljmp
fimull
xor
push
or
enter
mov
mov
je
jns
push
and
mov
push
push
ds
push
and
mov
ds
fldt
addb
sbb
cmc
or
add
gs
push
inc
inc
xchg
lret
xor
mov
fidivrl
sub
mov
lahf
sahf
push
lock
push
xchg
cltd
push
mov
test
and
ss
negl
lds
xor
xchg
jae
cwtl
mov
inc
jne
sbb
mov
pop
xchg
fdivrs
test
pusha
push
popf
arpl
sub
mov
cmp
add
mov
mov
daa
inc
xchg
mov
and
push
imulb
sub
or
lods
clc
mov
sbb
or
add
cmpsb
xchg
inc
mov
cmp
js
int
in
das
cmpsl
cld
daa
data16
insb
push
mov
pop
les
repz
out
call
repz
aam
loop
cltd
mov
popa
inc
lock
sbb
test
push
push
and
out
fsubl
jge
sahf
jae
lds
push
fisubl
leave
sub
imulb
or
movsb
lret
dec
mov
rorb
xchg
inc
or
jg
stc
xchg
ret
adc
xor
sahf
nop
mov
jmp
jp
push
and
aam
lds
lods
xchg
ret
xchg
inc
addr16
mov
xchg
rorl
or
dec
sub
out
icebp
pop
dec
push
mov
inc
sub
stos
or
ret
pop
jg
addr16
mov
test
xor
inc
mov
ja
test
cmpsb
push
pop
test
int
sub
push
adc
mov
cmp
xor
dec
push
lock
push
bound
adc
pop
test
inc
call
mov
inc
or
ja
push
sub
ja
jne
nop
mov
dec
sti
push
inc
xchg
lock
test
and
in
inc
int
inc
ljmp
adc
dec
xchg
sbb
and
jge
lret
out
xchg
mov
adc
sub
push
stc
jle
adc
push
inc
mov
cmp
out
push
jo
xchg
pop
jo
xchg
loopne
jae
fwait
or
test
data16
dec
push
adc
iret
adc
push
daa
cld
imul
add
mov
mov
gs
cld
arpl
sti
xchg
or
inc
adc
enter
les
dec
aas
mov
daa
jnp
outsl
pop
mov
xchg
jae
cld
popa
pop
insl
xchg
sub
xor
add
sbb
ret
cmp
push
mov
and
xlat
cld
mov
adc
dec
lea
cmp
dec
push
xorl
dec
mov
or
xchg
js
xor
lret
jno
outsb
push
inc
aam
adc
mov
sub
sbb
inc
jp
push
xchg
cmp
and
push
mov
add
hlt
adc
xor
or
aam
jmp
decb
in
dec
push
aas
dec
pusha
inc
jmp
into
in
jmp
jg
dec
pop
popf
dec
cmp
je
xchg
sub
fildl
sub
mov
mov
ljmp
dec
mov
mov
mov
mov
xchg
adc
pop
push
popa
jmp
rorl
decl
adc
pop
adc
iret
aam
and
mov
loop
xchg
adc
push
test
dec
sbb
jmp
push
cmpsb
jb
sbb
or
cmpsb
or
test
fisttps
enter
mov
push
push
sbb
aam
xorb
adc
mov
sub
xchg
mov
sbbl
cmp
out
cmp
mov
lahf
jp
out
addl
and
xlat
arpl
imul
rclb
jg
call
repnz
push
test
push
xchg
mov
js
adc
int
pcmpeqw
es
vpshaw
jno
jg
xor
xchg
xor
mov
jmp
nop
cmpsb
sbb
in
inc
push
inc
pushf
jmp
scas
push
sub
and
mov
stc
jmp
add
and
repz
jno
dec
fcmovb
inc
pusha
cmp
les
lcall
adc
or
addl
adc
mov
imul
jmp
jne
push
adc
sub
jb
fs
jb
sub
inc
add
mov
pop
inc
add
rcl
mov
cmp
mov
xchg
push
sub
test
or
sub
push
sbb
fcomp
or
repnz
or
lock
xchg
sub
popa
add
idivl
cli
ret
ss
dec
mov
shlb
sahf
pop
jbe
and
inc
jne
enter
xchg
les
data16
push
jbe
push
or
repnz
or
pop
les
fstl
push
stos
cwtl
mov
daa
fisttpll
jae
outsb
xor
setnp
or
or
roll
adc
sub
dec
incl
je
mov
les
mov
fiadds
inc
mov
in
pop
mov
lods
or
inc
sar
adc
cmp
pop
enter
xchg
std
sbb
push
push
fidivrs
pop
xor
inc
stos
jmp
and
call
and
orb
bnd
or
add
lret
call
pop
inc
or
cmpsl
dec
mov
rclb
xor
inc
or
cmpsb
movsb
lea
xor
xor
movsl
sbb
mov
add
dec
jp
or
mov
les
sub
adc
push
int3
cmp
test
pop
scas
xchg
in
pop
lods
cld
out
inc
popf
xchg
fcmove
mov
sub
jbe
inc
mov
dec
mov
daa
test
jl
cmp
pop
xor
scas
rorb
mov
int3
mov
rorb
mov
inc
push
adc
sahf
in
and
or
mov
pop
xchg
mov
mov
cld
call
jmp
adc
lds
inc
jb
pop
test
jp
mov
cmpsl
push
push
dec
je
mov
dec
push
sub
ss
cmpl
adc
jl
or
test
adc
jl
xchg
andb
lret
xchg
fsubr
push
pop
sub
cmp
sbb
enter
adc
inc
sub
sti
push
inc
shrb
enter
out
and
add
jo
mov
push
push
mov
add
sub
or
jno
cmp
pop
imul
mov
mov
mov
loope
xor
je
mov
lock
inc
push
push
mov
inc
jbe
lds
jmp
js
fstpl
test
inc
scas
enter
or
jno
push
sbb
call
ret
enter
cmc
pop
mov
or
aad
push
mov
hlt
std
loop
adc
test
mov
sub
sub
fs
outsl
xor
or
add
xor
popa
mov
gs
pusha
push
add
lods
jae
inc
cmp
inc
ja
pop
addr16
pushf
xor
mov
sbb
lret
fsubl
imul
push
sbb
mov
and
sub
inc
sbb
dec
mov
outsb
mov
inc
adc
arpl
lock
mov
cmp
movsb
inc
les
cld
xor
sub
mov
fstp
test
js
push
fistps
mov
mov
in
cmp
cwtl
jle
push
mov
mov
lock
xchg
sbb
dec
scas
xor
xlat
lods
xor
or
clc
mov
lock
in
loopne
mov
xor
push
rorb
mov
adc
xchg
enter
adc
inc
mov
ret
jge
out
sbb
mov
push
int3
fsts
mov
jb
nop
pop
les
ret
mov
cbtw
pop
mov
cmp
lret
adc
or
mov
clc
cmp
xor
xlat
cmp
fstps
fs
inc
je
push
mov
test
repnz
addr16
cmc
in
leave
ror
xor
xor
fsubl
adc
dec
rclb
shrb
aaa
xchg
mov
lods
adc
les
push
push
jge
or
test
movsl
loope
jmp
fnstsw
mov
add
cmp
mov
dec
inc
mov
loop
jl,pn
lret
pop
cmpsl
inc
rcrl
and
cmp
push
push
jecxz
pop
fs
mov
popf
sbb
adc
mov
xchg
lock
je
xor
jmp
push
mov
jecxz
ret
sub
mov
sub
adc
test
and
mov
and
mov
and
add
adc
inc
adc
es
pop
push
jnp
jl
outsb
loopne
les
int
or
xor
mov
mov
pop
mov
into
and
push
and
cmpsb
int
rcrl
int
int3
shll
or
or
jmp
push
fs
scas
push
push
cmovo
adcl
jmp
inc
in
and
xorb
mov
or
xor
pop
inc
fisubrs
mov
and
push
inc
orb
or
pop
and
dec
ds
aam
push
pop
and
mov
adc
popf
test
push
dec
cld
rclb
test
add
and
std
and
push
loopne
cli
xchg
push
dec
rol
push
inc
loopne
sbb
and
int3
inc
pop
fists
aam
cmc
xor
cli
sub
fidivrs
gs
pop
sbb
mov
scas
call
pop
mov
cli
xor
bnd
popa
push
pop
xor
fdivrl
xor
jp
mov
ficoms
cld
dec
or
mov
vfrczpd
push
push
mov
pop
sbb
inc
ljmp
loopne
push
push
sbb
mov
filds
lock
ficoms
add
clc
jmp
pop
loopne
push
jg
fsts
push
pop
cmpsl
push
push
mov
jge
into
sarb
inc
call
and
loopne
adc
jge
xchg
stos
inc
push
or
mov
push
inc
and
enter
adc
cmp
js
mov
adc
mov
or
xchg
les
and
mov
stos
push
mov
xchg
dec
jge
sub
aaa
sub
jle
rclb
push
mov
outsl
mov
mov
fs
popa
in
faddl
mov
ljmp
and
movsl
inc
cwtl
mov
sete
inc
mov
cmp
fisttpll
xor
mov
push
push
call
push
inc
das
cmp
jle
call
or
call
xor
stos
sub
mov
jmp
adc
cmp
pop
xor
or
mov
in
in
repnz
push
xor
ret
inc
cmpsl
cmp
mov
arpl
inc
jl
outsl
and
and
stc
sbb
mov
inc
cmp
roll
orb
xchg
jl
jnp
add
in
push
daa
push
clc
push
incb
mov
repnz
pop
jl
push
xchg
adc
test
xchg
pop
nop
push
lea
lret
sub
repnz
push
cmp
and
push
push
gs
clc
roll
movsl
js
fadds
orb
xchg
mov
adc
pushf
cmpsb
dec
and
ds
and
push
je
shll
shl
add
push
mov
adc
adc
and
nop
ljmp
clc
fisttps
mov
lock
test
pop
jnp
jnp
inc
lods
jmp
dec
cmp
mov
or
xor
mov
jg
cli
and
mov
sbb
shlb
je
les
dec
jl
ret
cmpl
cmp
mov
pop
cmp
push
sbb
popf
jns
dec
add
add
fs
jmp
mov
cltd
mov
add
push
movsb
sub
sbb
mov
adc
and
hlt
mov
insb
push
push
xor
or
xchg
cmp
clc
add
pop
jbe
dec
test
adc
daa
js
jns
or
push
adc
test
mov
inc
jmp
dec
adc
push
sbb
dec
xor
icebp
xchg
neg
pop
popf
push
addr16
jmp
mov
push
cmp
push
popl
or
lret
jb
sarb
sbb
xchg
xchg
adc
xchg
add
pop
pop
ret
jne
xchg
std
inc
mov
sub
mov
fs
sbb
jecxz
and
cmp
iret
es
jmp
mov
jae
fs
or
xchg
add
cmp
popa
subl
stos
mov
adc
sbb
dec
jl
add
push
cli
mov
xchg
push
sub
cmp
sub
xor
cmpsb
mov
adc
add
push
mov
in
or
and
movl
mov
cli
inc
inc
fmuls
xor
push
js
fsub
sub
sub
xor
mov
mov
inc
mov
imul
push
jo
dec
jo
adc
add
enter
jnp
dec
imull
mov
cmc
mov
movsb
and
shlb
push
fbld
ret
xor
add
sub
inc
xor
in
cmp
inc
call
sub
xchg
xor
je
call
add
cmp
pushf
xor
and
adc
xchg
or
insl
push
push
jne
stc
pop
ret
and
iret
mov
test
movsb
ja
push
mov
or
mov
cmp
mov
lcall
in
pop
sub
inc
mov
rol
or
push
adc
adc
jg
xor
adc
jne
push
adc
insb
int3
mov
int3
inc
mov
aas
and
inc
mov
lods
daa
inc
inc
scas
fmuls
adc
cmpsb
cltd
mov
jl
mov
popf
fs
imul
cwtl
pop
and
mov
pop
cmpsl
int
insb
pusha
inc
aad
arpl
fs
nop
push
in
adc
push
stos
into
ror
aad
mov
je
mov
cmpsl
add
mov
mov
jo
test
push
and
inc
jne
pop
mov
jl
out
sub
inc
cmp
adc
mov
push
and
es
jmp
clc
enter
or
clc
or
jl
and
pop
jne
push
icebp
jnp
add
push
or
pusha
fistps
and
or
sub
lods
aaa
or
in
xchg
inc
sub
add
sub
addl
jge
fcomps
test
test
stos
adc
push
shrb
pop
sbb
jne
pop
lock
mov
pop
xchg
fistpll
daa
add
or
and
add
int
adc
shll
bound
mov
sti
les
mov
xor
or
inc
sub
dec
push
lds
sub
loopne
dec
inc
sub
loopne
loope
xor
inc
push
enter
xor
hlt
pushf
lods
pushf
mov
and
andb
mov
push
ficoms
adc
pop
mov
mov
adc
push
aam
in
jo
ljmp
gs
enter
and
sub
es
xor
inc
xor
adcl
mov
sub
add
adc
mov
clc
mov
aam
es
xlat
xor
and
fs
sub
stos
mov
cmpsb
or
add
sysenter
gs
pop
mov
out
sbb
mov
sub
enter
insb
sti
inc
rcrb
inc
into
insl
ret
fs
xchg
xor
sub
inc
les
dec
lret
nop
jge
sub
pop
adc
negb
sbb
mov
mov
lock
xchg
loopne
loop
stc
mov
sbbl
mov
and
loope
cld
push
call
mov
inc
dec
adc
xor
mov
jg
enter
sub
inc
insl
xchg
lock
pop
adc
inc
xchg
andl
call
add
push
or
lock
call
push
sub
ret
je
dec
out
filds
stos
push
adc
mov
mov
jmp
inc
rclb
dec
push
xor
or
mov
lret
push
scas
mov
inc
shll
push
sbb
push
or
cmc
jmp
pop
push
sbb
dec
inc
sub
adc
dec
adc
nop
push
mov
add
clc
loop
negl
mov
shl
cmp
add
push
cmp
push
jle
push
push
out
and
inc
jecxz
or
add
push
inc
and
and
cmp
inc
add
adc
push
jne
xchg
hlt
inc
mov
pop
repnz
ret
inc
and
int
inc
push
push
cmpl
pop
aas
mov
and
xorl
and
inc
mov
push
add
insl
push
adc
or
inc
add
push
lods
inc
mov
pop
sub
addps
mov
and
ret
fstpl
xchg
pop
or
cmp
xchg
insl
add
add
test
aad
lods
nop
push
mov
add
push
mov
push
fmull
or
movl
in
icebp
push
jle
push
aad
xchg
dec
icebp
lds
push
sti
outsl
lcall
hlt
sub
je
test
mov
out
jmp
and
test
pop
push
int
inc
cld
ret
xor
fdivl
mov
xchg
mov
xor
add
ljmp
dec
add
lods
cmp
xchg
or
mov
mov
or
inc
cmp
jne
mov
jb
lock
mov
mov
scas
jle
xchg
rcrl
jl
enter
lods
cmp
inc
aam
mov
add
je
gs
inc
inc
and
incl
fsub
adc
scas
adc
fs
xchg
lea
adc
dec
enter
mov
shl
cmp
mov
stos
push
jg
dec
mov
js
mov
jmp
sti
out
mov
inc
insb
and
insl
inc
pop
outsb
mov
jo
add
push
push
jmp
xor
mov
rcrb
dec
jne
fwait
sbb
pop
mov
mov
es
jge
adc
sub
push
lea
pop
xchg
jle
xor
mov
cwtl
cmp
je
xor
jmp
sbb
push
popa
add
out
adc
mov
push
jg
dec
out
bound
sub
push
inc
sub
enter
test
sbb
jmp
xchg
outsl
cmp
das
adc
mov
add
jnp
sub
mov
mov
clc
lea
mov
and
add
in
adc
shlb
sub
push
push
mov
dec
sub
outsl
xor
punpckhdq
add
push
pop
rcll
sub
add
and
outsb
xchg
pop
mov
xchg
and
aaa
push
orl
lods
dec
leave
sti
xchg
arpl
fdivrl
adc
sbb
cmpsl
xchg
call
ja
push
test
testb
push
cltd
xor
pop
bound
xor
push
add
fwait
lods
xor
pusha
push
loopne
mov
fcomps
fistpll
dec
add
pop
pop
pop
pop
mov
leave
jne
inc
mov
sar
push
add
lea
stos
adc
jo
fwait
sub
or
cmp
jne
inc
mov
push
mov
add
mov
shr
cmp
dec
or
dec
adc
add
push
call
mov
push
mov
add
sbb
rcrl
jbe
push
mov
xor
xchg
inc
or
inc
pop
ds
or
in
mov
push
push
or
insb
lods
adc
mov
or
cwtl
cmc
adc
sub
stos
xchg
and
and
or
adc
jbe
xor
jg
add
xor
mov
adc
repnz
mov
and
arpl
pop
lcall
mov
mov
ljmp
jb
xor
sub
bound
fs
out
mov
push
lret
push
push
mov
or
fwait
pop
add
scas
roll
call
pop
aad
sti
or
roll
icebp
aad
stc
xor
scas
and
pop
jnp
and
mov
mov
push
jne
shl
jne
mov
cmpb
pop
and
mov
shlb
adcb
jg
in
sbb
fdivrs
pop
sbb
push
scas
cmp
cmp
xchg
sub
gs
push
mov
dec
mov
repz
lds
std
test
mov
mov
add
pop
lock
mov
out
add
lods
fdivl
mov
or
cli
and
add
inc
sbb
xchg
sbb
xor
jo
mov
and
or
popf
cmp
push
movsl
mov
lcall
mov
fs
movsl
dec
add
push
outsb
jg
stos
push
jle
loop
sub
aam
imul
or
rol
loop
jo
add
out
add
cmovg
aam
or
addr16
lods
sbb
push
jle
jns
imul
bound
push
pushf
xchg
pushf
sbb
pop
and
andl
cmpsb
sarl
dec
jmp
test
adc
pop
pop
pop
sbb
jg
push
mov
repnz
dec
cli
push
xchg
je
push
cmp
call
rolb
call
jmp
daa
add
call
out
push
adc
mov
inc
lcall
cmpsl
aad
add
stos
xchg
lea
dec
or
cmp
xchg
test
je
jle
jbe
or
mov
test
push
out
jb
repz
jnp
out
aad
add
lret
push
std
insb
leave
adc
sub
xor
sbb
sbb
dec
ds
test
pop
inc
rorb
sbb
push
push
inc
pop
pop
daa
and
mov
icebp
aam
loop
and
pop
addr16
lahf
roll
fwait
call
cld
rol
ja
and
cmp
in
adc
fbld
outsl
es
add
in
push
fdivl
push
cmp
cmc
icebp
cmpsl
xchg
fidivrl
adc
push
or
dec
add
push
push
out
mov
push
cmp
pop
mov
mov
and
pop
lahf
push
push
xor
push
add
sub
mov
push
lcall
jge
xor
dec
push
jg
xor
fildl
mov
sbb
adc
adc
rclb
shlb
adc
in
mov
test
push
clc
jbe
leave
and
imull
decl
std
rcr
sub
repnz
sub
lret
sbbl
add
cld
test
adc
pop
int3
pop
sub
in
in
xor
sahf
sub
and
fildl
jge
push
fadds
sbb
jg
xor
testb
inc
jp
fld1
xchg
push
jl
pop
hlt
call
movsl
sbb
stos
faddl
xchg
inc
rolb
dec
dec
xchg
addr16
xchg
iret
dec
inc
jnp
xor
and
cltd
hlt
mov
clc
xchg
or
push
or
push
js
int3
mov
rclb
fdivs
aam
and
pushf
add
or
and
test
xor
mov
adc
xor
cwtl
or
inc
test
and
inc
aam
lock
hlt
xor
clc
or
call
inc
leave
adc
jmp
xor
and
push
lea
sbb
shr
and
mov
stos
add
push
adc
cmp
sti
mov
or
jmp
cmp
shll
out
adc
and
rcr
rorl
repnz
bound
shlb
iret
adc
fs
xlat
es
add
sbb
cltd
add
dec
inc
inc
dec
in
xchg
adc
push
xor
mull
push
mov
out
mov
mov
jmp
imul
adc
or
jb
dec
xor
mov
cmp
adc
jo
pop
ljmp
and
adc
sbb
in
xchg
in
jo
mov
sbb
out
sti
or
adcl
cwtl
pop
jle
stc
mov
ja
inc
imul
mov
pop
and
js
test
mov
jo
sub
das
test
mov
and
dec
push
adc
adc
pop
and
dec
cmp
pushf
cmp
or
fdivp
push
inc
cmp
dec
cmp
dec
push
pusha
pop
jle
les
sub
xchg
sbb
pop
and
xor
xor
addr16
call
pop
cmp
add
pop
iret
cmp
adc
xlat
fcoms
je
cmp
stc
inc
inc
push
xor
add
jg
enter
and
push
test
test
pop
test
push
push
loope
iret
add
add
add
pop
cmp
es
pop
movsb
inc
mov
nop
cmp
push
push
mov
std
push
pushl
dec
adc
dec
push
sub
iret
adc
dec
and
enter
inc
inc
or
sub
ret
mov
mov
enter
dec
fs
sbb
jo
push
leave
pop
call
and
inc
inc
pusha
fs
push
icebp
sbb
jo
test
test
cmovnp
nop
sbb
lods
scas
mov
daa
mov
cmp
sub
inc
and
sub
push
xchg
ret
mulb
test
push
xor
les
push
adc
stc
lcall
fcomps
mov
dec
push
ss
in
in
stos
adc
hlt
add
sti
xor
jae
or
adc
adc
sbb
add
fs
mov
and
js
pusha
mov
inc
push
loopne
push
pop
fimull
pop
filds
sub
push
sbb
or
test
and
ja
shll
cmp
imul
add
sbb
push
add
in
pop
ja
jb
push
cmp
jae
push
lret
ja
adc
mov
and
inc
xor
sub
and
adc
mov
xchg
sbb
add
xchg
cld
sub
add
roll
ret
adc
dec
xchg
pop
cmp
xchg
xchg
fs
xor
cmp
or
cmc
adc
lods
nop
pop
leave
push
mov
xchg
dec
les
and
into
enter
jmp
lods
dec
or
cmovbe
shlb
aaa
push
xchg
push
sub
xchg
and
aam
and
add
inc
fsubs
adc
add
fmull
push
or
pop
mov
insb
cmp
cmp
adc
movsb
adc
mov
popf
pop
std
mov
testb
lea
push
mov
mov
xor
dec
xchg
push
dec
mov
ja
sarb
ja
inc
movsl
push
lods
es
dec
mov
hlt
mov
sub
leave
out
fsubr
inc
jae
jno
mov
sti
pop
push
popf
pop
lds
or
pushf
pop
push
gs
sub
sbb
or
scas
mov
cmp
sbb
pop
cltd
xor
adc
ret
call
adc
mov
or
loopne
push
sub
movsl
sbb
jle
or
xlat
dec
adc
lds
mov
test
lods
push
inc
test
dec
push
mov
inc
shr
or
enter
aaa
addr16
hlt
nop
in
push
pusha
js
call
mov
adc
jo
xor
cmpsb
mov
loopne
jbe
jae
cmp
cmp
jne
push
sbb
jnp
jo
adc
inc
call
jb
imul
fs
push
jmp
inc
push
ja
outsl
out
aaa
dec
sbb
xchg
rolb
and
fidivrl
or
or
insl
xchg
rcll
shll
add
in
insb
add
xor
jno
inc
add
daa
push
lods
xchg
mov
jns
cwtl
aam
jge
sahf
add
divl
adc
out
and
inc
jo
repnz
jmp
adc
ret
add
add
notb
and
jne
imul
mov
jl
xor
and
rorl
adc
mov
sbb
scas
push
movl
dec
inc
and
xor
cli
inc
adc
jmp
movsb
dec
negb
movsb
int3
popa
dec
or
dec
repnz
or
adc
pop
push
je
push
call
sarl
add
and
je
push
nop
adc
pushl
dec
mov
int3
mov
faddp
sbb
sub
dec
pusha
xchg
jg
outsb
jge
das
push
mov
into
dec
cmp
int3
adc
xlat
mov
or
dec
das
bound
mov
imul
clc
xor
dec
push
or
jmp
in
xor
adc
and
sti
xchg
lahf
fs
inc
mov
fisttpll
push
ficoml
adc
rclb
xor
or
ret
inc
sbb
dec
sbb
mov
in
pop
adc
adc
jp
decb
shll
dec
or
mov
imul
fdivr
and
and
bound
adc
daa
das
adc
sub
jmp
out
mov
and
popf
cld
pop
and
jl
inc
jl
out
cmp
test
adc
ret
psraw
push
add
lea
call
or
sub
js
daa
fstl
les
shrl
bound
mov
and
jmp
dec
test
out
mulb
movsb
test
xchg
aad
mov
imul
scas
mov
xchg
aad
nop
jns
dec
in
cmp
stc
push
mov
push
sub
jb
mov
sbb
test
pop
sbb
aas
mov
xchg
mov
test
push
mov
adcb
cmp
test
in
inc
cwtl
mov
das
adc
inc
xchg
aad
rclb
into
icebp
push
js
dec
sub
pop
repnz
add
lret
adc
leave
orl
dec
dec
stos
pusha
aam
jne
cmpsl
out
and
xor
ret
test
adc
or
test
sub
push
add
js
pushf
mov
cmp
aaa
or
clc
jle
lret
repnz
add
shlb
cwtl
in
call
pop
pop
jle
inc
cld
notl
jl
loope
mov
mov
inc
add
sbb
add
repz
or
call
add
add
and
and
and
cmp
scas
dec
repz
mov
hlt
das
inc
adc
push
daa
adc
jb
dec
fldl
jle
push
loope
ret
dec
add
add
cmp
and
jmp
xchg
notl
inc
addr16
sub
adc
inc
test
mov
adc
mov
mov
andl
xor
add
fwait
inc
mov
out
cmp
inc
push
stos
stos
lret
push
shlb
es
or
shr
inc
or
push
add
loopne
sbb
adc
push
sub
dec
iret
call
call
shl
dec
inc
push
jae
push
inc
fists
cmp
lds
mov
jmp
inc
cmp
xchg
adc
lea
push
mov
cmpb
mov
jl
in
cmp
adc
jg
xor
mov
jmp
mov
loop
xchg
mov
out
leave
hlt
jp
fsts
syscall
and
cmp
add
dec
push
mov
mov
ja
or
icebp
and
arpl
and
andl
enter
mov
and
andb
scas
loopne
ret
popf
int
imul
jne
pusha
or
inc
lret
loope
mov
ja
mov
sub
out
aam
ror
xchg
mov
cmp
sbb
sub
cwtl
shrb
sbb
or
ja
jge
testl
and
dec
adc
movsl
xlat
ret
or
fistl
jle
ss
mov
jge
sub
roll
xor
cmp
je
add
enter
testl
xor
push
jp
andl
sahf
dec
mov
or
repnz
mov
dec
test
lock
mov
pop
pop
ret
mov
psubsb
stos
aas
popa
inc
jle
lods
add
mov
pop
push
xor
jne
dec
adc
test
orb
sbb
pop
je,pt
pop
filds
push
push
call
loopne
cld
movsb
dec
inc
inc
les
imul
mov
push
and
xchg
add
add
rorb
push
and
imul
and
pop
ret
mov
jmp
nop
adc
jb
lock
xchg
dec
xchg
sbb
into
decl
sbb
ret
inc
lods
pop
adc
push
sbb
enter
mov
fisttps
mov
sbb
push
lock
inc
test
adc
lock
xor
sbb
pop
mov
dec
adc
das
pop
push
adc
pop
gs
sbb
js
aam
pop
in
xchg
stos
add
mov
test
test
add
into
push
xchg
push
loopne
call
movsb
and
cmpsl
push
inc
in
pop
xor
sbb
sbb
fs
sub
adc
xor
mov
xor
dec
add
or
inc
pop
dec
push
cmp
pop
jo
enter
mov
sbb
pop
dec
mov
lods
jbe
inc
jbe
out
test
daa
pop
jae
add
jne
inc
push
lcall
loope
push
jbe
aas
leave
loop
xchg
aaa
push
fcoms
inc
xor
int3
adc
xor
daa
pop
adcb
out
repnz
je
push
push
jno
out
fdivrl
mov
push
insb
mov
sub
imul
adc
test
imul
mov
pop
sub
sbb
adc
dec
mov
pop
dec
push
or
sub
jg
out
popf
mov
scas
hlt
ljmp
xor
or
xor
test
es
cmp
scas
or
pushf
pop
gs
push
jg
mov
loop
scas
pop
std
inc
jmp
aam
sahf
rclb
adc
stc
sub
or
shlb
dec
cmp
mov
cmc
arpl
jmp
sub
aad
cmp
call
jmp
fwait
push
sub
rclb
adc
mov
inc
inc
mov
sub
dec
movsb
jmp
mov
xchg
push
repnz
adc
fs
loopne
or
mov
fstps
or
xor
pop
jne
push
inc
or
sub
or
mov
cmp
insb
cmp
sub
addr16
loopne
lea
mov
add
cmp
jge
cmp
je
sbb
adc
mov
mov
cmp
jl
call
mov
mov
repz
push
sbb
pop
pushf
xchg
add
stos
lcall
enter
stc
cmp
mov
push
incl
mov
cmpsb
dec
xlat
push
cwtl
cmp
jmp
mov
adc
adc
adc
dec
push
mov
cmp
popf
mov
sub
mov
div
shrb
adc
shll
adc
mov
jb
or
cld
test
cmpl
sbb
mov
or
sbb
mov
and
xor
sarb
or
and
lret
cmp
shll
or
stc
add
and
and
add
nop
or
or
adc
adc
sbb
xchg
and
sub
sub
xor
xor
cmp
xchg
and
enter
xor
or
xchg
and
enter
xor
or
xchg
and
nop
xor
inc
mov
enter
enter
xor
inc
enter
ror
aam
fdivs
fcompl
loopne
in
inc
call
enter
xor
sbb
or
nop
adc
sbb
and
and
sub
jno
xchg
shlb
pop
mov
inc
or
cld
lods
xchg
push
add
mov
sbb
test
cmp
pop
mov
rcl
xor
xor
cmp
pop
add
xorl
and
and
arpl
iret
sub
jmp
popf
or
push
or
rclb
adc
dec
dec
mov
fld
jmp
and
rol
cmp
vpshlb
and
in
cmp
and
sub
mov
jne
clc
cvtdq2ps
add
or
data16
adc
adc
inc
add
inc
enter
enter
inc
jg
xor
or
test
test
adc
inc
data16
xor
or
xor
bound
int3
xchg
add
and
outsb
mov
cmp
jne
push
rcrl
lret
or
call
dec
adc
or
pop
mov
bndldx
mov
dec
inc
in
jg
rol
adc
or
sbb
mov
daa
sbb
adc
sbb
mov
xor
sub
pusha
or
push
and
ljmp
pop
clc
jns
sarb
add
sahf
adc
xorl
movsb
mov
adc
push
inc
cltd
call
or
inc
jae
adc
enter
or
lock
test
push
or
sbb
or
mov
stos
or
rorl
sbb
inc
insb
nop
xorb
push
and
jb
and
jne
push
sbbb
daa
mov
fs
dec
pop
push
leave
sub
popa
and
push
daa
push
ds
aaa
es
test
je
lods
inc
enter
adc
ljmp
outsl
testb
in
sub
push
sbb
xchg
jmp
pop
inc
push
adc
add
and
shlb
movsb
fs
lds
ja
pop
xchg
lahf
jp
mov
jg
hlt
or
push
jmp
mov
pop
cmp
clc
jb
adc
lret
test
sub
jnp
inc
or
add
or
loopne
icebp
enter
inc
jp
push
lea
aas
nop
adc
call
push
xor
jl
mov
dec
mov
test
out
hlt
lret
scas
adc
mov
push
pop
int3
test
cs
int3
and
push
aaa
cmp
movups
or
adc
clc
test
call
sbb
xor
call
jmp
and
jmp
and
call
push
cld
or
clc
push
cmpsl
mov
inc
inc
or
mov
pop
cmp
sub
dec
adc
stos
adc
mov
xor
cmp
test
and
or
mov
enter
js
lcall
sub
int3
jnp
push
xchg
insb
sub
faddl
nop
aas
fchs
movsb
out
and
and
xchg
mov
mov
mov
lods
sbb
push
in
fdivrs
dec
sub
mov
out
xchg
mov
dec
mov
insb
je
xchg
and
adc
adc
pop
and
shlb
pop
and
shlb
pop
and
rorb
sub
fmuls
adc
push
mov
hlt
push
adc
mov
sub
sub
xlat
and
sub
std
inc
adcb
shll
push
inc
add
adc
mov
and
inc
mov
add
xor
push
jb
and
fistpll
xor
decl
insb
sbb
sbb
adc
sub
inc
mov
test
sbb
xchg
addr16
mov
lahf
push
push
dec
sub
and
nop
adc
lahf
sub
jmp
pop
mov
sahf
and
rorl
inc
adc
and
adc
addl
incb
inc
dec
std
pop
cld
sbb
or
adc
xor
mov
sub
cli
push
push
xor
es
and
sub
xchg
lods
loop
not
loope
loopne
add
adc
sub
pop
movsb
mov
je
rep
sub
sub
ljmp
dec
cmp
push
neg
add
ds
test
ret
push
ret
sub
add
mov
sbb
loope
and
push
xor
or
ret
cmp
add
or
sti
es
adc
lcall
sbb
adc
add
movsb
es
inc
rorb
cmp
sbb
loopne
add
je
mov
mov
ds
out
jg
imul
add
fmull
mov
push
dec
push
mov
and
fs
popa
xchg
js
shlb
outsl
rolb
nop
xor
ficompl
movsb
jo
push
cmp
test
and
or
gs
lahf
adc
inc
es
les
lahf
bound
movb
or
adc
or
adc
mov
test
gs
lcall
inc
les
test
cmc
adcl
aas
out
adc
ret
xorb
call
cld
or
mov
imul
and
mov
and
sub
lret
in
pop
lds
push
push
jbe
shll
or
call
fs
outsb
cwtl
cmp
testb
pop
pop
lcall
add
or
movzbl
nop
cld
adc
xchg
ret
sbb
jae
or
jmp
dec
mov
dec
adc
lock
and
jb
dec
xchg
sub
cs
pop
pusha
xor
jne
loope
or
or
xchg
pop
mov
call
pop
incl
jl
fisubrl
popa
mulb
and
imul
add
movsl
dec
inc
jmp
dec
clc
daa
sub
xchg
sbb
fisttps
jmp
into
sub
push
call
shrb
cltd
popl
xchg
cmp
sub
push
sbb
in
cmp
enter
lock
mov
cmp
jl
stos
sub
dec
aaa
enter
dec
pop
mov
ret
sahf
repnz
cltd
add
adc
mov
ljmp
sbb
add
or
push
fstps
sbb
mov
add
mov
push
dec
mov
mov
sub
inc
xor
ss
sbb
mov
gs
push
loope
mov
das
orl
fs
hlt
std
test
call
xor
xor
xchg
adc
adcb
sbb
sub
xor
inc
call
or
xor
and
in
sbb
push
and
dec
popa
jmp
cmpsb
mov
fisubs
jo
in
lcall
incb
push
xor
and
mov
ds
add
or
cmp
ss
in
ret
repz
and
mov
add
nop
les
jae
stos
xor
jmp
rclb
inc
or
enter
sbb
adc
or
fmul
adc
jp
inc
and
and
enter
adc
and
je
sub
push
add
dec
scas
and
pusha
xchg
and
test
stos
andb
popa
or
mov
xlat
mov
lock
mov
loopne
fdivs
add
or
ja
int3
fwait
and
stc
divb
es
in
push
add
and
mov
loope
stc
add
cmp
add
xor
insb
xor
sub
loopne
push
sahf
les
or
sub
inc
es
or
add
and
push
cmpsb
pop
lcall
mov
xor
sbb
mov
adc
or
mov
mov
mov
add
bound
mov
or
mov
sub
test
addl
jbe
mov
or
loope
or
pusha
or
xlat
mov
adc
mov
adc
daa
mov
or
rcrb
adc
inc
sbb
test
cmp
dec
mov
mov
mov
and
dec
cmpb
push
add
inc
inc
outsl
dec
sbb
or
nop
mov
aas
push
rcr
cmc
mov
add
mov
imul
push
cltd
fmul
clc
jl
sti
popf
insb
jno
cld
stos
lret
sub
adcl
fwait
add
sahf
xchg
jae
cwtl
xchg
lea
scas
movsb
ds
out
rcll
inc
mov
imul
inc
sbb
sub
lods
adcb
pop
pop
adc
movsb
hlt
mov
scas
insl
add
pop
cli
mov
jmp
dec
sbb
cs
mov
jg
call
dec
mov
das
or
jo
outsb
xchg
in
xchg
in
sub
shlb
sub
xchg
loop
insl
out
mov
and
and
fnclex
mov
outsl
push
lret
fstps
inc
cmp
dec
das
pop
clc
mov
and
test
inc
and
adc
and
mov
orb
test
push
mov
insb
mov
adc
cmpb
xchg
adc
insb
mov
rcll
and
xchg
js
sahf
into
xchg
dec
cmp
sub
jne
mov
or
stos
js
mov
outsb
and
sub
mov
arpl
mov
imul
sub
mov
hlt
cmp
sub
cmp
dec
and
orb
pop
movsl
mov
push
and
movsb
lds
mov
or
dec
mov
or
in
adc
dec
and
jb
and
cmp
sub
xor
fs
or
cmp
dec
sub
sahf
cld
les
dec
icebp
inc
aaa
adc
iret
notb
sbb
and
es
or
inc
in
repnz
jne
das
push
add
cmp
movsb
xchg
inc
jmp
je
xchg
ss
mov
leave
push
push
sbb
or
jmp
cmpl
and
pop
inc
jae
dec
add
js
inc
stc
or
xchg
mov
mov
jns
sbb
dec
outsb
aad
push
xlat
shll
push
add
adc
les
pop
add
jmp
adc
divb
int3
mov
mov
sbb
rcrl
mov
inc
mov
jo
popa
jno
inc
pop
mov
mov
pushf
mov
fdivr
xchg
subb
rolb
inc
lahf
mov
das
dec
push
or
cs
xor
dec
add
and
das
xchg
mov
add
cmpsb
sub
xchg
daa
mov
iret
loope
mov
sahf
mov
cmp
and
push
xor
cmp
inc
addr16
jmp
pushf
aas
mov
pop
xor
and
xor
jne
jns
adc
sub
insb
cmpsl
jecxz
aas
addr16
subb
out
add
je
or
inc
popl
in
pop
sbb
add
add
adc
clc
sbb
mov
dec
es
mov
inc
leave
and
add
add
and
cmc
dec
mov
inc
adc
mov
cwtl
ds
push
push
jns
push
push
subl
lds
mov
movsb
ja
cmpsb
gs
jno
mov
test
gs
inc
xchg
cld
and
fadd
inc
shrl
cld
popf
sub
push
lret
mov
sub
inc
outsb
or
jne
lcall
test
jge
fucom
and
xchg
repnz
out
xor
pause
add
movsb
dec
cld
cmp
pop
add
add
jae
andl
mov
insb
ja
pop
add
jmp
dec
jns
jb
adc
daa
adc
xor
and
adc
adc
mov
lcall
jmp
nop
sub
inc
adc
and
mov
xor
pop
and
fs
ss
mov
adc
mov
jl
lock
jo
add
arpl
in
fistpll
lcall
pop
mov
les
add
cs
and
les
dec
adc
test
inc
es
mov
jp
fsts
sbb
xchg
adc
or
fs
push
jns
movsl
cltd
fldl
cmp
adc
dec
mov
lret
mov
mov
lret
movsb
mov
adc
cltd
sub
adc
push
je
mov
jmp
adcl
inc
adc
xor
int3
mov
push
wbinvd
sbb
and
stc
popa
xor
xlat
sahf
sbb
sar
mov
cwtl
sub
xchg
add
jo
out
nop
test
xchg
gs
fiaddl
out
xlat
and
repz
adc
cmp
je
daa
add
shl
push
test
aas
and
xchg
pushf
sub
mov
test
rorb
mov
icebp
dec
sahf
aam
orl
popf
scas
or
in
adc
xchg
ljmp
push
into
or
ja
lock
test
pusha
inc
xchg
push
push
cmp
repnz
ss
aaa
ss
and
adc
adc
jmp
add
xor
in
test
or
jne
and
push
sar
enter
scas
mov
ss
and
xchg
xor
sbb
add
shl
test
pop
xchg
jp
in
movsb
into
inc
jle
sbb
std
jmp
inc
jge
sub
fucom
push
aam
push
xor
xchg
xlat
jb
mov
testl
mov
inc
pop
jne
push
jno
push
mov
aam
insb
dec
push
adc
pop
mov
dec
xchg
push
mov
dec
adc
sub
pusha
and
mov
lcall
cld
push
inc
xlat
subb
cltd
or
in
or
xchg
shlb
sub
fs
je
sub
es
xor
mov
xchg
sbb
es
cwtl
rcrl
xor
push
adc
xchg
add
jo
mov
inc
xchg
dec
lcall
lcall
leave
rorb
add
inc
jmp
ret
adc
cli
out
adc
adc
bt
pop
mov
mull
and
jmp
scas
mov
mov
adc
xor
es
push
or
aaa
add
xor
into
xchg
mov
insb
xchg
dec
inc
imul
stc
xor
ss
mov
lret
and
push
adc
bound
push
push
es
and
cmp
fisttpl
and
ljmp
mov
addr16
cli
pop
xchg
popa
imul
xchg
adc
loop
inc
popf
jns
or
inc
add
nop
push
sbb
adc
mov
mov
mov
inc
sub
push
pop
outsl
sub
add
bound
dec
and
sub
nop
fxch
fimull
or
xchg
ss
xchg
push
cmp
and
dec
loopne
jns
jns
lea
sbb
adc
jl
dec
and
je
aas
lcall
adc
in
or
cmp
cltd
or
or
adc
jbe
inc
or
sbb
or
int3
and
sub
inc
xchg
lods
sarl
test
sbb
jne
jl
xchg
paddd
sahf
andb
jp
xchg
mov
lds
shlb
jne
dec
sarb
pop
jmp
cmp
mov
cs
lret
cwtl
push
add
cmp
movl
lds
sarl
push
sub
mov
mov
cmc
add
jl
xchg
mov
mov
daa
fcmovne
cld
or
pusha
dec
mov
adc
sub
sbb
pusha
pop
pop
push
push
loop
pop
xor
push
incl
xor
je
push
sub
scas
popf
fwait
inc
loope
xor
divb
stc
push
nop
or
cmp
outsb
jmp
sub
cmp
push
push
sbb
int3
jo
in
out
fwait
stc
sub
and
lods
sub
cld
sbb
mov
stos
repnz
and
rorb
lea
sbb
rorl
add
or
add
sub
dec
insl
fidivrl
sub
inc
je
imul
dec
xor
or
movsl
mov
adc
mov
sub
adc
outsl
shlb
or
and
adc
sub
adc
push
cmc
aaa
insl
cmp
lret
js
pop
loopne
xor
hlt
xchg
mov
cmp
sbb
test
sub
sbb
sbb
sbb
leave
rclb
andl
pushf
and
sub
pop
sbb
cmpsl
mov
sub
or
adc
jo
push
mov
rcrl
and
or
xchg
sbb
sar
xor
mov
or
rorb
or
mov
cmp
push
sbb
shl
call
or
xor
adc
push
cmp
jne
xor
mov
sub
push
jmp
jns
inc
outsb
inc
mov
rcll
push
pop
mov
jmp
test
bound
pop
jg
dec
lock
insl
das
addb
push
sub
cmovne
gs
adc
jge
pop
cmp
enter
push
mov
cmp
stc
jge
pushf
xor
inc
and
mov
dec
aas
adc
dec
xor
and
xor
and
push
aas
mov
mov
adc
or
fs
imul
inc
les
ror
jp
pop
jnp
cwtl
lods
movb
jne
xchg
mov
push
rorl
lahf
push
insl
pop
fnsave
into
inc
pop
lret
scas
shrl
jns
add
xor
fs
dec
adc
jne
enter
adc
je
aaa
pop
xor
mov
mov
pushf
mov
mov
aas
fs
xchg
stos
cs
outsl
cmp
add
int3
mov
xchg
imul
shlb
enter
push
sbb
mov
and
movsb
rcll
fs
xor
test
jo
inc
mov
into
shlb
nop
lcall
adc
push
jbe
inc
inc
enter
repz
adc
add
insl
mov
lods
outsl
mov
jo
cmp
out
xchg
pop
int
cmpsl
mov
cmp
and
dec
mov
push
mov
test
test
cmp
xchg
loopne
mov
inc
ljmp
aas
mov
dec
inc
ret
sbb
mov
mov
or
jbe
mov
out
jg
dec
in
add
into
dec
mov
das
les
stos
jne
xlat
xlat
add
xor
lea
adc
mov
pop
dec
das
dec
inc
testb
cmp
adc
es
cmc
idivl
shlb
sbb
push
dec
pop
add
flds
cld
pop
fldl
xchg
data16
mov
xchg
hlt
adc
ret
data16
popa
pop
push
movsl
fcmovnb
leave
jbe
jp
sar
xor
jne
nop
xchg
and
xchg
imul
adc
and
add
imul
jmp
daa
clc
or
inc
iret
sub
mov
jns
lret
inc
push
pop
mov
leave
lds
call
inc
jne
xchg
inc
jnp
xor
mov
sub
adc
or
inc
dec
sbb
xchg
lods
icebp
inc
add
adc
or
loop
xchg
or
sbb
dec
inc
sti
or
xor
addl
mov
adc
adc
jl
in
jmp
dec
stc
cmp
shl
nop
pop
lods
loop
mov
mov
push
inc
cs
add
push
in
sbb
inc
mov
lret
or
adc
es
xor
ds
stos
pop
pop
jns
in
test
or
xchg
adc
cmpsl
das
lock
iret
std
dec
movsl
add
jmp
xchg
dec
hlt
test
shlb
stos
and
cmp
pushf
pop
fdivr
add
adc
hlt
lock
nop
add
ja
cmp
loopne
test
and
mov
jmp
jnp
xor
ss
add
int
lret
ret
pop
adc
popf
int3
pop
lahf
insb
movsb
and
sahf
xor
xchg
lret
dec
insb
mov
loop
clc
lock
sub
dec
cmp
jge
movsb
enter
or
xchg
fs
stos
push
repz
mov
test
insl
push
adc
and
xchg
and
test
mov
scas
pop
mov
mov
mov
xchg
cmp
stos
in
and
jge
outsb
mov
and
sub
sbb
sbb
in
loop
int3
xor
inc
inc
cmp
aad
rclb
in
push
clc
xor
rcrb
xor
ret
fiadds
shll
jge
and
shlb
out
pusha
hlt
add
adc
cli
add
dec
dec
mov
data16
dec
inc
es
cmc
mov
add
clc
dec
add
shl
mov
adc
daa
fmul
scas
push
pop
mov
mov
mov
ss
lret
scas
fimull
es
or
and
es
test
mov
pop
sub
fidivrl
sub
popa
aaa
movsl
push
pop
adc
sarl
shrb
adcb
out
mov
cmpsb
mov
pop
mov
and
push
mov
or
fadd
loopne
push
mov
sub
mov
fptan
iret
push
test
jne
or
push
mov
rcrl
adc
rorl
jp
dec
sti
enter
mov
cli
stc
subl
iret
pop
pop
push
and
sbb
pop
or
lcall
and
aas
icebp
lcall
cmp
je
mov
xchg
loope
loope
imul
out
or
daa
adc
and
jmp
mov
jo
pop
std
cld
and
mov
cmp
add
imul
fwait
dec
cmp
nop
cmp
les
dec
cmp
lret
into
push
in
mov
push
orb
jbe
pop
roll
leave
sub
pop
pop
icebp
jnp
add
sbb
xor
sti
push
cld
add
mov
aam
push
in
icebp
adc
mov
adc
mov
xor
loopne
dec
dec
fcompl
cmc
adc
mov
sbb
sub
int3
mov
jl
or
dec
or
mov
jmp
int
pop
push
not
cwtl
mov
push
loopne
mov
or
pop
xor
outsl
cmp
cmpsl
mulb
negl
sbb
cmp
movsb
pop
ret
lahf
or
or
hlt
test
jg
psubsw
add
and
loopne
mov
insl
sbb
lahf
dec
fldt
inc
fucomip
stos
pusha
outsl
mov
jmp
lea
sbb
mov
outsl
sub
adc
xor
cltd
push
push
adc
push
jo
aaa
test
or
xchg
and
or
out
lcall
push
inc
dec
and
inc
mov
loope
push
iret
jmp
hlt
dec
sbb
add
inc
lods
lods
aad
dec
loopne
adc
in
scas
movsl
dec
mov
loop
mov
lock
call
imul
repnz
or
jge
dec
cs
and
mov
cmpb
xchg
pop
hlt
insl
divb
xchg
push
jno
or
mov
mov
jp
out
dec
adc
lcall
cmp
inc
add
adc
pop
loop
push
mov
jns
das
adc
mov
rclb
test
jmp
dec
sub
push
imul
jno
mov
add
scas
jae
sub
addr16
dec
lods
dec
shrl
push
or
dec
push
or
sbb
jp
and
jmp
fsubp
pop
cltd
leave
pusha
out
cltd
mov
mov
imul
push
js
fnsave
sbb
jne
ret
xlat
mov
jns
xchg
pop
aam
or
dec
cmp
hlt
sub
lret
arpl
and
jmp
fndisi(8087
jb
and
sbb
notb
or
jmp
test
mov
or
call
pop
adc
stos
add
xchg
pop
jns
andl
push
je
or
jmp
pop
mov
lods
rorl
inc
aam
testb
inc
push
jns
sbb
jmp
add
cld
lret
push
or
cs
cmc
data16
ljmp
insb
out
outsb
in
pop
jo
lret
gs
fsubs
stos
fistl
mov
or
movb
or
or
push
bound
aas
xchg
sub
lock
jno
in
aaa
nop
hlt
popf
popa
les
call
fsubrs
xor
in
or
mov
ss
daa
xor
lock
add
ret
pop
mov
sub
pop
adc
sahf
cwtl
out
sub
mov
jae
pop
cmp
out
movsbl
push
shrl
xchg
sti
sub
or
xchg
fsubs
pop
mov
mov
jns
adc
mov
lea
inc
or
cmp
lcall
xchg
or
or
and
and
ret
push
or
fmuls
adc
and
loope
rcrl
aaa
mov
ret
push
mov
xor
mov
sub
jo
roll
std
inc
rclb
insb
mov
dec
mov
push
jno
je
shrb
dec
and
jl
shlb
test
xchg
mov
push
repz
adc
repnz
mov
xor
xor
cmp
add
cld
and
adc
call
xchg
or
inc
add
dec
push
sbb
adc
leave
jne
adc
sbb
xchg
icebp
jbe
adc
push
pop
adc
or
add
jmp
sbb
and
shr
in
call
or
mov
dec
adc
inc
pop
out
pop
sbb
cmp
or
psllw
sub
xor
es
fcmovne
adc
fimull
cmp
cmp
sub
push
push
push
push
sub
jmp
xor
xchg
sub
cltd
mov
pop
sbb
xchg
sbb
stos
fsubs
adc
mov
sub
fldenv
xchg
and
fs
pop
adcl
add
lcall
xchg
js
mov
das
fwait
mov
je
iret
pmaxub
mov
ret
pusha
and
pop
cmp
aam
dec
mov
ss
pop
pop
lods
adc
inc
jo
cli
popa
jl
sbb
pusha
push
push
and
mov
test
addr16
jno
or
jns
adc
repnz
dec
mov
lds
dec
movsb
cmp
mov
add
leave
ss
xor
call
inc
shrb
jbe
int3
jmp
sbb
pushf
ret
outsb
mov
and
loopne
in
jb
jmp
popa
ds
push
call
adc
pop
fdivs
cmp
je
aas
stos
js
int
jmp
dec
loopne
push
scas
push
or
xor
dec
push
and
pop
scas
jb
dec
fsub
call
rep
and
inc
lret
daa
cmp
dec
in
lea
mov
add
addl
pop
out
mov
pop
icebp
push
xor
rcrl
jmp
sbb
and
pop
push
xor
aad
je
iret
pop
arpl
push
jb
push
sbb
adc
pop
xchg
jne
outsl
adc
pop
mov
fs
aas
and
add
xchg
sbb
add
std
pop
pop
or
pop
nop
stc
add
and
pop
out
or
pop
test
dec
jo
aas
repnz
or
inc
pop
enter
pmaxub
pop
pusha
enter
sbb
adc
pop
pop
adc
xor
xchg
call
push
adc
push
inc
push
test
or
pop
push
or
pop
in
push
mov
cmp
das
lret
and
and
pop
pop
add
jge
leave
sahf
cmp
add
push
push
jg
push
cmpsb
lock
sub
out
test
je
std
cmp
cmp
mov
and
std
mov
fs
cmp
rorb
sub
insb
pushf
hlt
dec
xchg
dec
in
cmp
fsubrp
add
jns
fstps
mov
xor
rol
jg
jo
into
dec
adc
shlb
sbb
and
jmp
or
ret
jne
fldcw
test
push
leave
mov
pop
shll
dec
das
dec
add
pop
repnz
or
rcrb
test
inc
add
cmp
jne
call
dec
mov
push
and
inc
pop
cmp
jne
lock
sti
out
arpl
adc
inc
push
call
out
addl
push
les
pop
daa
xchg
dec
out
push
out
adc
inc
or
out
int
jmp
sbb
xchg
inc
test
mov
jne
cmp
jne
out
sbb
out
repnz
loope
push
gs
push
cmp
fisubrl
lret
dec
repz
pop
add
cmp
adc
clc
outsl
js
push
xchg
call
mov
pop
add
push
outsb
scas
push
push
movzbl
mov
push
pop
jmp
cmp
out
out
sub
les
adc
cmp
outsl
inc
jmp
movsbl
clc
cli
adc
enter
fdivrs
mov
imul
dec
add
sub
mov
jl
jge
and
and
adc
mov
and
mov
addr16
jmp
adc
movsb
inc
dec
xor
rorb
lea
mov
js
or
jne
pop
xor
xchg
or
shll
call
stos
sub
xor
fs
and
test
in
jp
jnp
add
sbb
xchg
dec
out
or
lock
jmp
dec
es
push
xor
xor
adc
or
xor
movsb
push
daa
sub
clc
sahf
sub
aaa
inc
jb
pop
pop
enter
jb
push
mov
xchg
call
adc
adc
mov
cmovl
shrl
int
ljmp
or
outsl
jmp
cli
mov
lret
mov
push
and
jmp
push
adc
adc
mov
sub
das
loope
test
or
js
daa
xorb
add
inc
popa
daa
mov
xor
mov
cmp
pop
mov
inc
push
adc
test
cmp
leave
jg
cld
inc
cld
sbb
neg
test
sahf
and
add
xor
cld
jmp
popa
push
lock
and
scas
dec
push
sahf
cmp
test
mov
and
sub
aam
fidivl
cmp
call
fdivr
out
mov
das
xchg
cmp
mov
jp
mov
or
sti
xchg
or
ljmp
cmp
jle
mov
je
pop
cmp
inc
jge
rcrb
js
bound
ja
es
leave
adc
and
jg
and
adc
pop
scas
sub
push
in
movsb
sahf
das
shl
inc
repz
mov
push
test
int3
push
pop
gs
pop
xor
scas
das
dec
test
cmpsl
mov
jmp
enterw
inc
dec
dec
mov
xchg
clc
dec
mov
cli
or
stos
rolb
stc
xchg
cli
mov
adc
clc
es
and
sub
xlat
add
mov
stos
movsl
cmp
sub
mov
inc
fs
mov
gs
pop
mov
pusha
loop
int
std
or
or
pusha
mov
mov
popl
pop
and
das
inc
gs
cmp
fnstcw
mov
or
mov
je
mov
bound
pop
repz
jle
jg
or
adc
adc
enter
jae
xor
xor
or
test
cli
rolb
pusha
or
push
jl
and
repz
add
sahf
xchg
push
lock
int3
cltd
ret
push
cs
jnp
mov
or
pop
mov
mov
dec
or
test
das
or
add
or
and
test
sahf
repnz
pop
fldz
ret
aad
sbb
adc
js
push
and
push
pop
daa
dec
jns
dec
xor
sub
je
or
icebp
push
mov
mov
xor
xor
push
xchg
pop
cmpsl
push
add
and
push
dec
xor
push
xchg
pop
xchg
es
sbb
pop
or
arpl
aam
jo
loopne
adc
fists
sbbb
inc
cmp
adc
push
xor
cmc
test
arpl
int3
mov
pop
movb
dec
jmp
jns
and
and
out
mov
pusha
in
dec
movsl
scas
sti
jp
fcomip
int
mov
orb
dec
fwait
loopne
testb
xor
and
fwait
mov
sbb
loope
lea
push
andl
sbb
cmp
pop
lock
ror
pushf
and
cld
js
dec
adc
hlt
mov
lea
sub
cmpsb
mov
sbb
xchg
and
cld
inc
sbb
pop
mov
push
adc
mov
pushf
in
push
ret
shl
add
xor
jmp
rclb
mov
or
mov
pushf
or
xchg
shll
dec
outsl
int3
cmp
hlt
xchg
insl
clc
int
fmuls
jno
ds
push
sbb
rcrb
adc
loopne
mov
xchg
ss
je
cmpb
dec
jmp
outsl
mov
sbb
jns
aad
jo
push
cld
sbb
mov
inc
and
dec
jecxz
pop
push
push
push
fs
push
inc
adc
pop
push
dec
sbb
mov
or
shlb
xchg
test
sub
fbld
push
adc
and
mov
stos
pop
std
mov
mov
jo
imul
pop
xchg
loope
jl
icebp
jp
lods
jne
call
pusha
dec
adc
cmp
mov
cmp
xorl
int
mov
fimuls
lock
mov
sbb
xor
cmp
ja
add
divl
pop
adc
lret
mov
xchg
or
add
inc
jle
push
call
mov
outsl
adc
jb
mov
sbb
clc
xor
addb
and
push
mov
inc
push
mov
out
inc
bound
or
xor
les
scas
dec
add
call
mov
sbb
xchg
adc
cmp
test
jne
ret
dec
jmp
push
cli
push
shll
movsb
xlat
lods
imul
push
cmc
and
adc
mov
fists
movzwl
bound
add
jg
daa
fiaddl
push
push
mov
aam
loopne
pop
pusha
adc
cmp
testb
lea
mov
mov
mov
xor
jl
adc
adc
add
inc
outsl
call
jmp
popl
lea
and
jns
imul
fcoml
cmp
repnz
mov
idivb
jmp
xor
enter
push
inc
cmc
add
pop
pop
out
pop
push
pop
fs
pop
inc
cmpsb
jbe
insb
push
lea
daa
push
ret
shl
or
sarl
rorl
loop
and
dec
or
mov
shr
cld
inc
shll
enter
shlb
enter
mov
in
std
rorl
or
adc
or
xchg
xor
test
shrl
negl
les
lods
xor
rorb
clc
sub
cmp
jne
cwtl
rcl
and
andps
inc
insb
je
jl
rcr
mov
test
or
aam
cmc
pop
shlb
shrb
adc
cwtl
add
lea
mov
in
dec
clc
and
nop
and
leave
add
push
xor
dec
hlt
out
cmp
xorb
movsl
je
aam
inc
mov
push
inc
daa
mov
out
dec
xor
cmc
and
jge
bnd
mov
jns
xor
mov
cmc
adc
ret
test
xchg
scas
gs
test
movzwl
cmp
inc
add
fmuls
pop
sub
clc
popf
mov
xlat
dec
sub
je
inc
sarl
mov
push
sbb
popf
jno
dec
pop
jle
or
pop
inc
mov
inc
les
clc
xchg
add
je
stos
jns
jae
sarb
lahf
xchg
jae
dec
xacquire
testl
pop
jb
push
gs
int
jmp
jns
or
in
jmp
sbbb
push
mov
push
ja
mov
rcr
adc
add
stc
iret
dec
fsubrl
and
or
in
cltd
jp
or
call
pop
sub
mov
dec
jmp
lea
mov
cmpsl
jno
and
push
sub
cs
out
imul
and
dec
push
imul
or
dec
sub
les
leave
or
sti
sti
pop
mov
mov
and
dec
cmp
pop
enter
ljmp
pop
jmp
out
pop
loopne
or
and
jle
pop
jg
cld
and
push
jo
sbb
and
or
call
iret
push
dec
and
andb
popl
or
add
call
rorb
jo
jge
lock
ja
sahf
cmp
mov
addb
xchg
push
mov
lea
cmp
stc
and
adc
jne
fwait
test
add
mov
inc
mov
mov
inc
rolb
xor
jmp
mov
or
sbb
test
or
daa
call
jmp
iret
push
adc
ret
cmp
adc
lret
mov
and
mov
sbb
setno
rol
call
hlt
lods
pop
neg
sbb
jmp
cmp
sbb
add
fstp
insb
xchg
add
pop
push
leave
xor
mov
clc
call
jns
pop
stos
and
ljmp
loopne
sub
push
dec
mov
sbb
xchg
add
add
lret
loopne
push
xchg
pop
nop
ds
popa
mov
xlat
stos
jns
sub
pop
insl
rorb
dec
movsb
inc
xchg
push
jb
ss
mov
jns
cli
pop
cmp
xor
adc
xlat
inc
xor
pop
loopew
iret
fucom
xchg
xor
cmpsl
xor
sub
sbb
lahf
inc
or
mov
or
lcall
xor
push
pop
jne
inc
hlt
jmp
pop
push
and
mov
and
adc
lock
jne
push
or
outsb
outsb
dec
sbb
rep
xchg
call
pop
jb
dec
fmul
mov
inc
in
or
adc
and
test
cmp
test
adc
inc
movsl
ret
stc
lcall
call
and
lret
jmp
aad
jae
clc
add
add
and
adc
cmp
jmp
aad
jmp
shrl
xor
sbb
xchg
aad
clc
add
cs
repnz
xchg
push
push
cld
lea
ret
and
cmp
jl
nop
adc
dec
aad
and
xchg
lcall
daa
ja
push
rolb
pop
hlt
sub
lock
addr16
sbb
fucom
scas
nop
cs
sahf
andb
ljmp
adc
adc
xchg
mov
pop
test
scas
dec
scas
dec
jmp
xchg
cwtl
push
adc
daa
xchg
xor
inc
mov
sub
xchg
jne
repz
mov
inc
pushl
leave
cmp
ja
pusha
push
add
add
rorl
leave
bound
pop
xor
sbb
outsb
xor
sbb
push
das
sahf
pusha
mov
inc
xchg
mov
pop
loop
les
pop
das
sahf
icebp
dec
ret
pop
adc
inc
adc
test
adc
lahf
movsl
fabs
jno
or
test
or
pop
out
fildl
or
fidivs
dec
clc
les
sbb
mov
nop
popf
lds
mov
or
inc
jo
and
cmp
xchg
mov
sbb
into
sub
mov
sbb
add
das
stc
jbe
push
cmpsl
and
mov
fucom
das
lds
xor
jne,pn
xor
inc
in
add
mov
test
in
hlt
xchg
add
sbb
and
les
push
mov
mov
mov
jmp
adc
jle
xchg
daa
sahf
xchg
mov
cmp
add
jne
or
inc
sbb
imul
std
out
test
adc
scas
insb
and
inc
sub
mov
lahf
pop
movsb
push
test
inc
jae
outsb
nop
int3
jbe
mov
sbb
jbe
insl
sub
test
mov
cwtl
or
pop
adc
lahf
jp
inc
jg
push
inc
adcl
inc
pop
adc
lret
xchg
mov
mov
push
add
or
leave
add
daa
and
out
out
loop
add
test
sbb
dec
lds
loope
inc
jge
negb
mov
mov
fistps
xchg
aam
adc
fldt
xlat
mov
or
mov
jno
mulb
inc
dec
pushf
repz
je
or
or
and
inc
mov
mov
ds
test
test
aad
and
xchg
mov
cwtl
mov
dec
mov
xchg
shlb
int3
or
push
inc
mov
pusha
aam
jmp
mov
mov
leave
or
stos
mov
mov
inc
cmp
fists
pusha
inc
and
mov
xchg
add
lahf
adc
daa
add
xchg
push
in
jge
sub
inc
mov
adc
xchg
xchg
fdecstp
mov
mov
push
sub
mov
pop
dec
pop
or
pop
add
add
sub
fs
repnz
sbb
movsl
jae
movsl
cmpl
rorb
add
cld
jnp
pop
push
ja
xor
push
out
leave
mov
push
aas
shl
jmp
inc
mov
insb
es
adc
mov
mov
mov
popf
push
dec
pop
lds
adc
mov
bound
inc
adc
ds
mov
or
fs
stos
sbb
enter
inc
adc
lock
xchg
xor
dec
dec
aaa
clc
aad
and
adc
push
adc
add
mov
cwtl
adc
and
pop
add
imul
mov
outsl
clc
push
nop
adc
add
or
inc
add
and
sub
jne
mov
bound
or
inc
mov
out
pushaw
das
adc
sub
es
push
mov
or
inc
adc
ljmp
mov
fwait
pop
cmp
daa
push
sbb
ljmp
jle
xchg
sbb
mov
jmp
enter
mov
addr16
cli
add
add
and
add
and
stc
test
into
inc
adc
pusha
xchg
mov
xchg
adc
mov
mov
xrelease
jmp
das
popf
js
in
push
or
push
sub
cmc
nop
jae
je
adc
mov
xor
jo
orl
pop
pop
outsb
adc
test
or
jmp
lea
pop
and
dec
jle
stc
pop
in
pop
ds
mov
add
and
mov
sbb
inc
adc
lods
inc
mov
or
mov
mov
xor
test
mov
shrl
pusha
add
push
jbe,pt
pop
mov
ja
or
repnz
or
movzbl
adcl
mov
lea
orl
dec
icebp
pop
or
dec
xchg
aas
lds
xchg
add
fsub
xor
rcrl
outsb
mov
mov
jmp
aam
dec
out
fwait
mov
dec
pushf
scas
xor
loope
outsl
sub
rclb
das
or
mov
test
push
mov
dec
sbb
or
repnz
rcpps
mov
enter
dec
and
jnp
leave
add
push
bound
inc
or
or
mov
mov
sub
loop
repnz
and
sub
adc
mov
neg
mov
shrb
or
popa
shrb
or
pusha
stc
or
sbb
push
lea
sub
nop
shlb
pop
daa
add
dec
repnz
xchg
xor
xor
jmp
push
xchg
or
cmp
or
xchg
fs
adc
adc
dec
lret
in
enter
jne
pop
loop
inc
add
xor
sbb
pop
arpl
invd
xor
pop
xor
pop
sbb
loop
jg
loop
jmp
cs
je
xor
cmp
xchg
adc
in
and
jne
push
test
js
or
cmp
mov
jp
and
cmp
fmul
push
out
stos
rclb
jmp
pushl
push
sub
inc
movsb
or
push
xor
push
jge
xchg
xchg
dec
xrelease
and
and
aam
adc
sbb
mov
or
pop
hlt
lcall
seto
cld
loopne
mov
faddl
ds
shrl
mov
or
adc
jg
push
adc
dec
mov
mov
jmp
xor
xor
data16
mov
lea
pop
mov
cmp
dec
repz
inc
adc
jmp
lret
dec
stos
stc
in
xchg
xor
inc
aaa
cld
and
movswl
push
cltd
sub
sar
pop
xchg
dec
cmp
test
fsubr
mov
adc
dec
lds
dec
mov
jg
xchg
movsb
mov
outsb
xlat
xor
insl
call
in
lcall
mov
ss
jmp
enter
cltd
icebp
mov
faddl
dec
dec
mov
mov
lods
inc
pop
icebp
adc
rorl
adc
leave
push
mov
mov
push
stc
cmpsb
inc
pop
pop
movsb
or
pop
push
mov
push
push
or
push
out
mov
pop
mov
push
lea
jmp
loope
or
in
add
xchg
sub
add
or
push
mov
inc
mov
outsb
xor
out
pop
nop
mov
inc
dec
push
lret
gs
test
cs
xchg
or
cmpsl
jmp
inc
pcmpeqw
xchg
sbb
add
adc
aam
pop
or
mov
addb
xlat
dec
mov
add
sub
lods
jno
and
dec
mov
ja
rol
mov
push
inc
clc
cli
dec
dec
dec
nop
jae
and
rclb
mov
and
lahf
outsl
xchg
xor
dec
adc
into
adcb
adc
inc
hlt
xor
push
sub
and
push
sbb
mov
popf
xchg
sub
add
pop
jmp
sub
jmp
inc
dec
cli
int3
sbb
push
jno
and
rorb
nop
lret
pop
mov
daa
lahf
sbb
adc
or
adc
xor
shlb
push
push
push
adc
bound
dec
adc
or
or
call
and
push
mov
test
jmp
outsb
int
imul
jl
add
xor
lret
fs
aas
scas
inc
inc
sbb
and
sbb
xor
cltd
sbb
or
shlb
inc
pop
inc
xchg
and
and
addb
sti
adc
sub
adc
add
jl
sub
jmp
sbb
es
pushf
leave
jo
xchg
sbbb
mov
cld
and
adc
lcall
and
mov
xchg
mov
lods
out
lds
test
loopne
push
inc
push
and
cltd
push
push
popa
stos
pop
adc
inc
in
std
rclb
mov
push
push
inc
js
call
mov
cmp
inc
sub
pop
jle
inc
xor
cltd
push
mov
mov
jns
inc
jmp
pop
sub
enter
dec
jp
inc
add
xor
cld
mov
jae
mov
push
in
mov
mov
dec
jae
dec
inc
cmp
add
in
xchg
leave
sub
inc
faddl
adc
or
inc
and
call
testb
xor
mov
jne
xorb
jmp
xchg
sbb
push
push
call
nop
sbb
stos
adc
sahf
push
push
and
mov
dec
add
xorb
roll
sbb
xchg
mov
adc
dec
lcall
faddl
insb
adc
push
cmp
and
sub
adc
inc
movsb
inc
push
or
mov
add
mov
test
mov
nop
or
xchg
jmp
mov
and
or
push
ret
rcr
pop
sbb
and
cltd
dec
movsb
and
cmp
sbb
xchg
addl
and
das
xor
dec
fnstenv
sub
sub
inc
bound
jo
inc
push
or
or
mov
dec
mov
sbb
and
movsl
scas
mov
and
add
add
or
arpl
xchg
adc
or
add
add
cmp
mov
aam
or
adc
push
xor
jmp
adc
lods
adc
or
add
adc
sti
add
jo
push
pop
cmp
icebp
or
or
or
clc
or
or
or
cmp
adc
aas
push
lock
das
adc
adc
js
sbb
xor
dec
mov
lret
cld
dec
scas
loop
adc
imul
out
ljmp
xchg
and
adc
add
out
or
dec
mov
cmc
scas
das
rcrl
aas
mov
les
inc
jns
add
adc
loopne
popa
inc
adc
add
cmp
sub
xor
or
mov
mov
xchg
scas
je
sub
mov
push
adc
inc
add
mov
fst
cmp
inc
shlb
jne
and
inc
jbe
inc
cwtl
inc
call
sti
sahf
rcrb
jl
or
in
imul
shll
aas
inc
aam
scas
sub
adc
inc
and
or
push
dec
aam
imul
pusha
test
mov
enter
push
or
inc
jl
mov
insl
aas
shll
push
mov
and
xor
push
mov
dec
sub
xchg
andb
enter
stc
je
mov
add
call
js
add
shll
mov
sub
push
inc
ficoml
mov
push
dec
or
or
jg
fbstp
out
movswl
or
rcll
jne
addr16
call
inc
rorb
pop
popa
inc
jne
cs
adc
inc
xor
xor
xor
push
punpcklbw
cmpb
xchg
and
mull
cwtl
inc
or
adc
movsb
loop
adc
pop
loopne
jmp
jb
shrb
push
je
sub
sbb
sti
xor
add
sti
fisttpll
push
adc
adc
jg
and
sub
dec
das
inc
mov
cmp
adc
loop
test
push
dec
pop
icebp
cmpl
mov
in
movsb
fucom
and
dec
orl
xchg
ss
inc
xchg
or
jle
in
or
call
inc
pop
fdivl
fildll
cmpb
lea
cmp
mov
hlt
ja
inc
sbb
and
movsb
data16
leave
sbb
inc
push
hlt
and
lea
and
mov
or
test
lods
adcl
inc
aas
and
lds
push
pop
inc
mov
push
push
and
out
mov
xchg
adc
push
push
pushf
adc
popa
jnp
addb
add
sbb
push
push
int3
and
push
call
xor
push
or
call
lcall
mov
mov
aaa
pop
dec
jmp
or
dec
sarl
jp
cmp
inc
mov
adc
dec
mov
out
sub
xor
bound
dec
xor
xor
push
inc
lea
push
push
jle
xchg
lea
btc
adc
xor
fistps
cwtl
mov
push
push
sbb
inc
lahf
and
fwait
push
rcl
dec
in
and
xchg
or
sbb
cld
xor
lds
and
testb
pop
and
add
cmpsb
dec
mov
xchg
addr16
push
lea
mov
mov
xchg
dec
jmp
bound
mov
xor
add
lods
jbe
mov
sbb
sbb
daa
jmp
inc
gs
data16
cmp
out
inc
call
xor
ss
push
test
call
lahf
push
daa
xor
popf
cld
mov
jge
icebp
loop
dec
ljmp
push
les
push
push
mov
mov
loopne
out
into
test
ret
test
and
shl
loop
inc
adc
dec
push
fsubp
loopne
jmp
hlt
insb
gs
mov
xlat
dec
push
mov
ret
adc
push
repz
enter
cmp
sub
call
arpl
in
imull
movsl
std
adc
push
push
stc
or
lock
sbb
dec
xchg
sbb
push
mov
mov
mov
inc
jbe
in
mov
dec
fistps
es
push
subb
in
xchg
loope
cmp
enter
inc
daa
imul
mov
inc
xchg
rorl
loopne
popf
mov
adc
lods
and
cmc
and
pop
adc
xchg
mov
and
ds
inc
aam
mov
sbb
or
shlb
adc
out
inc
int3
orb
add
enter
cmp
xchg
outsl
les
js
inc
enter
rclb
js
sbb
outsl
mov
jmp
push
jp
imul
rorb
les
adc
inc
sbb
jb
enter
adcb
mov
mov
mov
push
hlt
inc
es
out
or
lods
rcll
adc
call
mov
xlat
sbb
jne
testb
pop
iret
mov
loopne
imull
jge
jnp
andb
mov
mov
pop
push
add
jne
call
gs
push
add
mov
and
je,pn
or
lods
scas
fsubrs
call
shrb
jae
adc
das
sti
lds
pop
mov
push
mov
je
mov
insl
push
add
push
popf
stc
or
push
nop
int
lods
adc
cli
mov
lock
or
xchg
movsb
bound
sub
cmp
pushw
mov
cmp
and
xchg
dec
sub
push
or
mov
incl
arpl
pop
loopne
test
and
dec
dec
stc
test
enter
pusha
je
adc
adc
hlt
pusha
jmp
in
sahf
call
lcall
add
cmp
xchg
cmp
mov
sbb
add
inc
dec
sahf
loopne
cmp
cmpl
add
popa
push
call
mov
aam
fs
rorb
loop
jle
sub
sub
nop
pop
outsl
sbb
cmp
pop
imul
add
gs
fadd
hlt
sbb
lcall
dec
sub
jge
fwait
loope
xor
aaa
xchg
adc
icebp
ljmp
sbb
adc
push
jnp
inc
xor
inc
push
int3
cmp
sbb
mov
xchg
flds
dec
jns
bound
or
adc
sbb
push
jne
xor
inc
std
nop
repnz
add
lods
inc
test
fcmovnbe
pop
ds
enter
mov
shlb
rolb
add
repnz
pop
dec
jle
mov
push
shlb
and
jg
jp
sbb
and
xchg
mov
sub
int
dec
and
nop
sbb
lahf
xor
movb
adc
push
fsub
add
push
push
xchg
stos
dec
push
mov
xchg
adc
test
cmpsb
aad
nop
inc
xor
lahf
adc
lea
icebp
xchg
sub
cmp
dec
mov
nop
push
cltd
inc
inc
pop
inc
sub
xchg
cltd
pop
addl
adc
inc
stos
sbb
xchg
or
outsl
cmp
mov
inc
out
insb
cmp
mov
out
clc
inc
out
fwait
shlb
adc
adc
add
ret
adc
and
add
mov
or
mov
push
daa
mov
data16
push
pop
or
mov
push
cltd
or
adc
jmp
cld
inc
adc
sub
and
mov
xchg
and
or
cmc
lcall
mov
cmpl
push
mov
jmp
fwait
cld
jge
ss
mov
dec
mov
into
xor
sub
loop
jnp
dec
int3
int3
dec
daa
sub
jmp
xor
sbb
xor
loope
fdivl
dec
stos
or
xor
lods
inc
imul
adc
sahf
popa
pusha
pop
jne
xor
test
shr
fs
mov
pop
xor
xchg
push
sbb
and
and
cmp
mov
adc
lock
in
or
adc
fidivl
or
and
fidivrl
xor
leave
bnd
cmp
iret
and
aad
call
dec
or
xor
add
push
je
xor
inc
jne
mov
or
dec
push
xchg
in
xor
xor
outsb
je
aas
or
jnp
and
lea
fsubl
push
adc
pop
sbb
rorl
mov
and
cmp
mov
push
sbb
or
ror
arpl
ret
inc
push
sbb
sti
sbb
mov
or
and
add
cmpsb
lea
sub
cmp
jle
and
xchg
push
bound
fnstenv
dec
add
push
sarb
cli
inc
and
insb
shll
pop
jbe
push
jbe
mov
sbb
push
and
dec
out
adc
sub
mov
jae
mov
or
lcall
test
or
popf
into
std
dec
inc
test
mov
insl
add
jae
xchg
mov
mov
cwtl
mov
test
jmp
pop
add
mov
movsl
add
fsts
mov
pop
mov
scas
xorb
movb
mov
xor
pop
mull
rcrb
dec
cwtl
stos
daa
jmp
sbb
jne
adc
dec
stos
mov
add
mov
push
stos
into
sbb
xchg
jmp
push
sbb
icebp
cli
insb
scas
mov
inc
or
orl
jg
std
shll
ljmp
jge
push
xchg
jmp
lea
jecxz
fldt
jns
fildll
and
jmp
or
inc
mov
push
fstpt
sarl
stc
pop
jnp
stos
jno
sub
jmp
xchg
dec
push
add
sub
xchg
push
xchg
push
fisubs
lods
inc
mov
mov
out
les
incb
or
je
mov
jbe,pt
lods
jns
xchg
push
cwtl
movsb
repz
or
mov
pop
add
aas
pop
inc
jae
sbb
dec
or
jne
lcall
lea
int
push
fldl
fs
jg
movsb
push
lahf
sti
mov
icebp
inc
inc
fidivrl
inc
mov
dec
loop
sbb
or
adc
push
je
test
push
call
or
sbb
pop
sbb
hlt
inc
les
sbb
adc
das
mov
fidivs
stos
mov
mov
and
adc
and
and
push
cmp
inc
or
inc
cmp
cmp
lods
je
fsub
daa
and
inc
sbb
rorl
or
shll
xchg
cmp
pop
jmp
std
test
and
or
push
mov
cltd
push
and
or
popf
push
jmp
imul
imul
bound
xchg
in
or
sarb
stc
or
outsb
fisttpl
sub
adc
dec
xchg
arpl
clc
push
sub
sahf
jns
mov
shrb
xor
push
mov
inc
fdivrl
jmp
cwtl
or
je
dec
or
je
sub
mov
into
or
outsl
or
inc
fcompl
add
inc
mov
xchg
xor
daa
pop
stos
push
dec
push
sbbb
dec
in
push
push
xor
dec
imul
mov
in
or
bound
rorb
mov
push
or
icebp
push
and
dec
scas
jb
test
sub
mov
call
mov
jbe
xchg
push
inc
sbb
imul
les
fisttps
jne
xlat
cmp
and
jmp
sahf
sbb
push
xor
add
das
and
xor
sbb
aas
enter
out
pop
insl
or
dec
lret
repz
call
xorb
enter
adcb
mov
sub
sbb
es
movsb
cmp
pop
sbb
aad
adc
stos
and
jmp
push
out
and
loop
pop
dec
sahf
sub
sub
add
jb
cmp
ret
pop
mov
mov
mov
shl
mov
mov
popw
cmp
pop
fwait
mov
scas
and
sbb
xchg
push
jne
jmp
sbb
inc
push
in
add
aaa
shl
sarb
or
push
gs
xor
xchg
das
sub
or
pop
je
movsb
push
sub
inc
push
sbb
xchg
lock
popa
lahf
js
mov
xchg
inc
xchg
mov
or
cltd
dec
stos
or
pop
mov
fcoms
mov
cmc
add
es
or
mov
fstps
sub
mov
lea
enter
adc
movb
xchg
push
outsl
xchg
cmp
and
imul
pop
and
orl
insl
adc
cmpsl
test
lcall
inc
xchg
push
repnz
jbe
jp
xor
or
popf
test
lret
mov
sub
sub
ljmp
inc
and
adc
adc
and
ja
jne
fimull
sbbb
gs
and
inc
test
cli
and
mov
push
out
icebp
mov
dec
arpl
adc
pushf
loopne
dec
add
les
sahf
sub
lods
negb
in
mov
test
test
sbb
pop
adc
mov
pop
or
rorb
popa
and
sbb
xchg
add
shlb
xor
sub
dec
test
inc
decb
pop
shrl
jo
in
or
and
and
cmp
push
je
and
arpl
aas
dec
orb
or
jp
add
sub
adc
and
mov
jmp
or
jle
out
push
or
addr16
inc
xor
dec
cmp
mov
ja
cmp
adc
xchg
repnz
inc
adc
add
mov
out
xchg
jmp
push
lods
mov
jne
xchg
mov
mov
add
adc
test
or
js
cmp
cs
and
pop
push
or
aas
in
add
xor
dec
in
loopne
mov
or
loopne
movsl
dec
clc
icebp
lret
jp
dec
movsb
test
cmp
inc
add
fs
sbb
enter
jl
add
push
inc
add
rclb
and
add
or
arpl
movsb
ds
adc
dec
adc
out
or
adc
adc
or
and
arpl
adc
in
add
add
add
dec
add
add
push
pop
push
dec
or
outsl
cmpsb
lea
cld
jmp
sub
pop
pop
mov
mov
mov
decl
fbstp
adc
add
jmp
and
int3
and
mov
lods
adc
jg
xchg
adc
mov
orb
outsl
adc
call
push
popf
dec
rcl
int3
dec
or
shrb
xlat
mov
call
push
imul
jmp
imul
insb
mov
add
and
push
outsb
mov
dec
inc
mov
pop
pop
test
mov
push
popa
xchg
inc
push
in
bound
lahf
jns
inc
or
inc
andl
adc
inc
mov
sbb
adc
sar
setae
push
rcrl
popa
adc
mov
hlt
popf
shll
and
add
int
add
and
je
dec
mov
sub
ds
bound
call
sbb
xor
adc
out
mov
test
shl
mov
fs
pop
pop
movsb
stos
dec
xlat
adc
xor
cmpl
sbb
scas
adc
les
sub
sbb
adc
fidivrl
push
lods
test
mov
iret
sti
push
imul
repz
test
adc
push
jnp
mov
xor
jecxz
repnz
insl
and
fs
pop
jns
inc
aam
lods
xchg
mov
sub
dec
inc
testb
inc
sbbl
mov
subl
fdivl
jne
scas
inc
lock
fcompl
or
jae
leave
xchg
out
iret
call
pop
shll
mov
adc
dec
jmp
pushf
bound
adc
adc
add
pop
jecxz
divb
dec
fs
inc
sub
adc
xchg
add
sbb
int
loop
in
lds
jge
gs
out
xchg
enter
ljmp
jno
xor
cmp
cmp
jns
cmp
cld
xchg
mov
dec
jns
daa
mov
inc
fisttpll
adc
adc
das
fs
jl
cmpsb
xlat
xchg
sub
pop
mov
enter
xor
les
repnz
or
add
sbbb
add
adc
sbb
subl
mov
mov
in
fs
lret
adc
xchg
pop
das
add
into
add
push
rcr
jmp
daa
mov
add
lds
fdivs
sbb
jmp
data16
jl
lahf
xorb
insl
out
pop
jmp
adc
add
in
ljmp
dec
in
out
jns
mov
mov
or
fsub
jmp
fldcw
dec
js
add
sti
gs
sub
xchg
test
sub
or
fstpt
pop
js
leave
jne
fcoml
fmul
in
sub
add
inc
sub
or
and
scas
and
ds
xor
std
inc
cmp
push
and
cld
lods
adc
clc
jle
inc
inc
sub
pop
sub
and
dec
test
mov
pop
nop
insl
sbb
rorl
ss
and
cmp
xchg
call
rol
adc
imul
in
popf
push
outsl
test
mov
aas
cmpsb
ss
js
mov
sbb
and
ds
adc
xchg
add
xor
push
iret
stos
hlt
nop
imul
xorb
push
push
inc
sub
push
push
sbb
test
adc
push
repnz
stc
test
jnp
arpl
inc
inc
and
and
es
and
and
lea
adc
mov
mov
aam
mov
sub
xchg
lds
sbb
sbb
cmp
dec
lahf
insb
scas
test
sbb
mull
or
push
and
jb
sub
mov
decb
xchg
or
fdivrl
push
mov
cmc
nop
cmp
test
inc
dec
mov
sub
add
push
xor
sbb
mov
lods
mov
je
dec
jge
fwait
sahf
push
push
mov
sub
daa
push
das
jle
test
sbb
push
dec
test
push
pop
ret
mov
dec
mov
sti
stos
push
inc
dec
and
inc
mov
cmp
sub
sbb
movsl
loopne
lahf
cmpsb
hlt
add
or
pusha
aas
push
dec
jecxz
js
or
sbb
pop
dec
push
mov
fsts
in
mov
dec
stos
cmpsl
or
xchg
xor
rdtsc
mov
hlt
imul
inc
hlt
xor
pushf
out
and
push
je
adc
mov
js
jmp
and
call
lcall
ljmp
inc
and
pop
jae
add
dec
sbb
test
call
pop
sub
xor
adc
add
cmp
push
les
pop
pop
inc
add
jmp
sbb
mov
int3
mov
and
mov
pop
sub
jne
cmp
jmp
loop
loope
pop
movsb
jo
pop
mov
pop
sbb
pop
xor
ficompl
add
leave
add
call
pushf
xchg
and
push
stos
jb
add
adc
push
mov
or
push
aad
mov
mov
inc
movzwl
adc
adc
lret
mov
dec
fs
mov
xchg
or
mov
push
dec
push
mov
lds
lret
hlt
or
xchg
cmp
nop
mov
rcrb
loop
lea
and
insl
je
dec
cmp
inc
xchg
xor
clc
mov
jge
adc
aam
or
mov
push
shll
movsb
sub
jmp
inc
jns
xor
stc
mov
xlat
lea
ljmp
loope
je
adc
jge
pop
adc
add
push
add
mov
shlb
stos
in
and
enter
repnz
pop
fwait
sub
aam
sub
push
popa
sub
push
mov
imul
xor
xlat
mov
out
inc
fstl
dec
mov
mov
adc
insl
push
lea
sbb
adcl
imul
inc
jecxz
and
xor
nop
cld
les
std
xchg
jo
cmp
cs
fistps
push
sbb
pop
or
push
xchg
adc
dec
stc
add
movb
rcr
insl
clc
out
mov
jle
mov
push
cmp
aam
push
dec
pushf
inc
sub
jno
jl
pop
lds
sbb
notb
call
leave
pop
pop
int3
clc
dec
cs
push
movb
sbb
push
and
cld
jmp
pop
mov
nop
mov
out
sub
testb
pop
pop
inc
stc
data16
cmpsb
dec
inc
lods
les
sbb
data16
jg
inc
mov
inc
add
push
mov
popf
push
loopne
mov
sarb
jmp
push
push
call
cvtps2pi
clc
rolb
sbb
shll
cli
push
sub
or
adc
ss
je
in
dec
sbb
xchg
fsubrl
adc
imul
xor
inc
into
jg
jb
dec
mov
mov
jmp
push
sub
ret
gs
cmpsb
push
ja
xchg
test
mov
in
pop
jmp
and
mov
jg
inc
mov
jl
xchg
fnstsw
pusha
dec
pop
adc
cld
sub
hlt
test
mov
push
sub
dec
lret
scas
push
and
daa
sarl
cmpsl
dec
nop
shlb
popf
repz
push
push
and
ja
xor
add
mov
ret
sub
mull
imull
ret
adc
mov
pop
xchg
mov
sbb
push
fisubrl
inc
fnsave
xlat
xchg
mov
add
div
dec
jne
and
mov
dec
idiv
je
push
jne
sbb
jmp
push
pusha
jns
test
add
pop
push
js
ljmp
sti
xor
mov
cs
add
jne
adc
jae
imul
popa
sub
sbb
adc
rcl
into
mov
cmp
subb
pusha
iret
push
add
cmp
jle
dec
shl
mov
inc
loop
call
rorb
test
in
xchg
dec
inc
adc
sbb
adcb
out
mov
mov
mov
cmp
movsb
movsb
sub
push
cli
lret
or
pop
leave
mov
orl
stos
daa
pop
xchg
loopne
dec
cmpsb
push
mov
leave
push
rclb
push
mov
cld
lods
scas
pusha
push
rclb
xchg
dec
test
and
pop
mov
cmp
push
jne
inc
mov
inc
xor
sbb
clc
mov
mov
push
je
subl
test
mov
add
aad
shll
ljmp
movl
xor
in
lock
scas
loop
hlt
jns
dec
inc
je
inc
pop
je
aad
fistps
push
lcall
loopne
and
xchg
push
rol
popa
bound
jmp
addr16
ja
lcall
lds
jnp
enter
pop
push
out
xor
push
nop
addr16
lahf
shll
aas
in
xor
jmp
sti
add
sbb
call
fstps
mov
push
daa
lods
xchg
aad
or
or
adc
cmc
mov
pop
mov
pop
mov
out
cld
add
pusha
ss
xchg
es
data16
aam
mov
dec
std
push
dec
ss
test
rolb
lds
mov
pop
xchg
je
loope
push
clc
mov
and
xchg
adc
pusha
stos
fwait
sub
lahf
testb
out
mov
xchg
jmp
mov
addr16
push
inc
xor
pop
dec
jge
jl
push
mov
testl
and
mov
jb
and
jae
jnp
dec
mov
je
lea
add
arpl
push
loopne
adc
arpl
pop
sub
xor
dec
push
call
cltd
cmp
or
outsl
les
xor
int
or
call
jnp
sbb
xor
jmp
mov
bound
push
subb
push
pop
imul
and
jbe
arpl
push
and
sbb
dec
and
mov
ffreep
push
sub
lret
notb
mov
inc
or
adc
pop
dec
stc
pop
movsb
out
mov
lahf
and
sarl
mov
int3
xchg
popa
dec
icebp
cmp
inc
movsl
mov
aad
stos
imul
or
hlt
daa
ret
inc
pop
popf
cld
xchg
xchg
xor
pop
xor
push
gs
je
test
ret
loop
cmp
sbb
and
js
imul
das
lret
pop
pusha
sbb
cmp
loopne
enter
inc
xor
pop
pop
or
fisttps
test
sbb
ficoml
mov
mov
in
lret
or
or
in
nop
loopne
sbb
rolb
cs
fdivr
cmpsb
sahf
and
xor
push
mov
inc
push
loopne
adc
adc
adc
enter
xchg
es
sub
jo
push
and
xor
or
jns
adc
int3
jmp
mov
dec
dec
dec
lods
inc
push
and
loopne
xchg
mov
push
enter
rcll
jb
call
add
adc
or
je
xchg
pop
jb
test
cld
push
push
out
insb
cmp
iret
and
mov
mov
push
lds
mov
add
cmp
sub
jne
daa
scas
mov
mov
shlb
sub
cld
sub
inc
inc
sbb
shlb
dec
xchg
cld
jmp
out
in
sbb
fmuls
xchg
test
mov
dec
adc
xor
add
lods
das
movsb
lret
pop
dec
and
les
test
cmp
ja
stc
cmpsb
testl
and
ja
daa
pop
test
inc
popa
mov
idivl
lahf
xor
test
jle
push
adc
stc
sub
lahf
add
cltd
add
add
and
sub
je
or
mov
pop
je
stos
inc
shlb
clc
shrb
int3
inc
cmp
imul
call
adc
mov
ja
sahf
clc
dec
sti
imul
out
loopne
js
sbb
fistps
dec
push
jnp
les
sub
das
inc
dec
push
xchg
xor
adc
cmc
mov
jne
enter
add
cmp
das
push
push
test
mov
mov
jmp
popf
rclb
mov
push
ret
dec
cmp
push
sub
and
lock
dec
adc
mov
int3
xchg
movsb
scas
mov
xchg
sub
mov
cld
shl
xchg
inc
mov
lods
cmpsl
or
out
lea
and
movsl
push
not
sub
das
and
adc
imul
adc
jmp
pusha
adc
mov
enter
mov
xchg
adc
sbb
push
mov
mov
pop
jo
xchg
pop
dec
inc
popa
pusha
jne
and
jbe
sub
daa
xchg
inc
mov
dec
adc
push
push
mov
popa
loope
inc
add
addr16
lods
fiaddl
nop
inc
xchg
in
and
dec
xor
and
mov
adc
fs
push
pop
add
cli
icebp
adc
mov
adc
es
push
add
jg
in
cmp
in
and
sub
iret
hlt
mov
jb
stos
jae
mov
jmp
in
inc
adc
roll
mov
jl
bound
dec
jge
repnz
ljmp
orb
call
dec
rolb
loopne
imul
imull
and
or
roll
push
push
mov
cmp
repz
pop
sub
cs
ja
xor
shr
shlb
in
sub
imul
aam
sbb
mov
pop
stc
movsb
mov
fs
data16
mov
jae
mov
les
test
int3
add
mov
repnz
test
cld
shll
jne
out
aas
jbe
cmpsb
or
cmpsb
cli
cwtl
xchg
inc
or
cmp
push
rclb
pop
push
mov
ljmp
mov
ret
lods
lret
lock
push
stos
idivb
daa
dec
add
fcomp
daa
cmp
mov
adc
and
sbb
lret
ret
mov
pusha
aam
adc
rclb
xchg
enter
mov
nop
std
mov
push
rolb
adc
push
repnz
adc
xchg
sbb
add
sub
mov
lcall
dec
jmp
cmp
xor
movsb
int3
out
or
and
stc
add
gs
enter
and
dec
push
sbb
sub
in
adc
mov
xor
push
jo
arpl
movsb
insw
mov
dec
je
push
fldenv
lret
adc
dec
call
and
dec
sbbb
out
aas
nop
shl
enter
rolb
sarb
sub
sbb
push
mov
outsb
shlb
stc
pop
leave
dec
in
mov
adc
push
sbb
and
and
xor
fmuls
fisttpll
jge
pop
adc
int
dec
and
ss
test
cltd
rolb
push
loope
mov
ror
mov
cmp
cld
adc
enter
bound
call
jge
or
jecxz
loope
addr16
pop
mov
mov
cs
push
adc
or
mov
and
test
inc
cld
fcoms
scas
sbb
cmp
push
cmp
adc
mov
mov
push
or
jge
cld
mov
subb
dec
mov
or
sub
mov
adc
test
sbb
mov
sub
scas
push
out
add
cmp
push
jl
or
adc
loope
xchg
adc
adc
js
push
mov
push
nop
inc
lret
call
movsl
test
push
das
jle
add
pop
cmp
dec
pop
mov
imul
adc
add
jbe
jne
mov
adc
pop
mov
inc
mov
mov
adc
push
lret
hlt
pop
leave
adc
fnstsw
out
or
and
sahf
in
or
jbe
adc
xor
loope
inc
test
shlb
add
jae
push
or
push
rorb
inc
addl
dec
daa
arpl
aam
dec
jbe
daa
push
fbld
aas
cmp
xchg
xchg
icebp
inc
push
xchg
ret
rclb
shrl
in
mov
orb
popf
fdivl
jo
loop
jne
dec
insb
mov
and
fildll
add
lret
mov
adcb
add
add
mov
mov
cmp
and
hlt
fsubrs
add
dec
pop
and
fsubr
dec
mov
or
mov
pop
jle
and
fnstcw
push
push
inc
orl
fs
aad
stos
movsb
mov
jmp
xchg
adc
mov
add
adc
push
xor
cmp
push
enter
and
icebp
dec
out
or
mov
pusha
jecxz
sub
ret
add
cli
enter
out
jl
enter
lahf
push
pop
cmp
hlt
sbb
mov
popf
inc
push
add
push
xchg
pop
push
dec
js
ja
jnp
clc
push
fdivs
and
ds
inc
mov
repnz
adc
inc
dec
jnp
adc
imul
mov
rcrb
adc
xchg
popf
ret
nop
rclb
mov
sub
and
sarl
inc
xor
ss
aam
decb
sub
stos
inc
and
sbb
jbe,pt
or
sbb
push
sbb
mov
inc
sbb
pop
mov
ficomps
mov
inc
push
mov
xor
or
jns
push
jmp
repnz
scas
pop
in
imul
xchg
xor
add
pop
xchg
mov
cmp
or
adc
outsl
sub
and
sbb
xchg
imul
aam
pop
es
dec
cld
and
mov
dec
mov
xchg
and
aaa
aas
mov
xlat
imull
and
dec
or
pop
insb
xchg
imul
jne
lock
in
adc
leave
adc
mov
jp
test
neg
outsl
ljmp
cmp
ret
or
inc
pusha
push
popf
xor
cmpb
adc
xor
and
and
or
fimull
clc
ljmp
sub
xlat
inc
icebp
xor
test
in
xchg
dec
cmp
mov
int
repnz
xor
loopne
shll
mov
sub
mov
xchg
fsubr
out
fsubrl
loopne
xchg
in
fidivrs
sbb
inc
and
idivb
repz
adc
add
xchg
dec
and
adc
lods
ret
adc
mov
add
dec
push
aad
sub
shl
xchg
pop
cmp
dec
inc
or
cmp
subb
push
int
cmp
push
cmp
sub
inc
es
and
movups
jae
xor
adc
jno
push
hlt
movsl
mov
xchg
push
fldenv
or
sbb
cmp
pop
push
repnz
loopne
inc
nop
xchg
cltd
nop
sbb
dec
aas
xchg
mov
imul
cmp
dec
or
inc
pop
or
fadd
adc
leave
jg
mov
lret
pop
aas
and
in
sub
push
inc
in
into
sbb
das
movsl
call
pop
rcrb
mov
adc
dec
xlat
cli
lock
xchg
dec
push
js
movsb
aam
test
and
mov
jae
adc
cmp
push
daa
rcrl
jnp
mov
cmp
pop
call
mov
jae
hlt
add
sub
setno
and
or
mov
je
clc
nop
push
pop
cmp
and
cmpsb
pop
cmpsl
mov
inc
adc
cmp
dec
lock
inc
shlb
mov
lock
mov
cmp
add
rdtsc
hlt
mov
mov
pop
dec
repz
movsb
push
sbb
mov
outsb
enter
iret
sub
shrl
jns
cmpsl
clc
jbe
clc
push
inc
pop
gs
out
inc
pop
in
test
sti
lret
sbb
enter
sub
lret
loop
jo
in
jne
lock
testl
movsb
mov
and
rorl
inc
inc
adc
mov
rclb
imul
jbe
mov
cwtl
fdivrs
xchg
dec
daa
add
sub
addr16
leave
jno
iret
xchg
mov
sbb
xor
mov
dec
ret
add
or
in
pop
mov
ret
dec
mov
unpckhps
pop
cld
sbb
jg
rorb
pop
iret
adc
aam
sub
pop
mov
fcomps
mov
push
inc
cld
scas
jl
push
xchg
adc
inc
pop
mov
mov
mov
jle
scas
inc
mov
les
mov
mov
rcrl
xor
inc
xor
pop
push
adc
adc
adc
lret
inc
xor
and
mov
iret
dec
push
mov
test
out
add
dec
adc
adc
mov
xchg
rorb
jg
lea
cmp
mov
lods
pusha
cld
loope
mov
loop
pop
jl
fstps
xchg
pop
es
popa
inc
mov
mov
mov
movsb
jge
cltd
push
mov
in
mov
fidivs
and
sbb
push
and
push
pop
test
pop
testl
push
inc
jge
adc
test
sub
mov
mov
add
lahf
lock
rcll
test
add
mov
adc
orl
xchg
test
and
mov
jl
sahf
cmp
movsl
sti
adc
mov
mov
mov
mov
mov
cmpl
je
cli
and
dec
in
sbb
les
and
out
pop
lods
adc
adc
testb
mov
out
push
adc
insb
pop
enter
fcomi
xor
stc
inc
flds
push
and
movsl
adc
cld
cmp
or
daa
jl
cmp
rclb
subb
mov
inc
xchg
push
fadds
jmp
cltd
adc
adc
adc
mov
adc
mov
inc
or
imul
test
rcrb
or
and
dec
aam
cmp
and
add
js
jge
mov
pop
add
xor
xor
inc
jo
push
out
and
xor
mov
mov
adc
push
or
out
and
scas
lret
mov
lods
cmc
and
pop
xchg
cmp
adc
cmp
sbb
xrelease
cmc
movsb
mov
sti
aaa
leave
out
add
gs
and
iret
push
imul
imul
xor
mov
sbb
push
mov
dec
push
mov
adc
repnz
popf
leave
stos
fisttpll
mov
adc
dec
shr
jo
lret
daa
imul
inc
ds
pushf
cld
into
xor
mov
push
sub
jge
lret
add
jecxz
les
jns
push
sti
push
enter
pop
add
mov
test
out
or
icebp
cmp
jmp
pop
ret
and
jne
fucomi
jo
xchg
outsb
push
sub
and
mov
sbb
push
sahf
in
rcl
sti
sub
cmp
push
or
push
call
in
mov
sub
cmp
lds
test
or
test
sbb
jmp
fwait
int
mov
or
inc
test
sub
lods
mov
dec
lret
es
and
jmp
test
adc
or
stos
imul
stos
jo
call
or
add
call
inc
subl
and
mov
push
or
iret
push
adc
iret
cmp
push
lret
ja
roll
mov
sub
mov
push
ficoml
aas
dec
xor
mov
or
divb
xor
sbb
push
popf
push
mov
push
shl
xor
xchg
shlb
add
jmp
fsubs
dec
and
stc
add
imul
push
add
and
sti
adc
sbb
shlb
push
loope
movl
dec
push
fcoms
les
jp
popf
dec
subb
test
dec
int3
add
mov
sar
adc
xlat
addb
xlat
fs
inc
imul
imul
mov
mov
xor
cmpsb
jo
and
cmp
nop
loopne
or
lods
jae
and
fidivl
mov
xor
std
loopne
into
or
push
or
aas
add
pop
outsl
push
call
insl
lcall
mov
popa
inc
or
loopne
jle
xor
sbbb
mov
adc
ljmp
incl
mov
mov
shlb
push
push
bound
scas
xor
clc
test
push
push
mov
sbb
arpl
dec
sbb
and
cmp
pop
pushf
lret
inc
push
stos
in
lods
nop
mov
out
sub
out
in
and
jl
bnd
pop
dec
movsb
aad
inc
sti
pop
std
pop
mov
pusha
fidivrl
pop
bound
sbb
jno
popl
xor
or
xor
inc
push
insb
mov
mov
jmp
cs
idiv
push
or
ja
sti
xlat
outsb
add
outsb
in
mov
jo
cmp
jle
push
or
call
adc
inc
xor
cld
mov
pop
aam
aam
aam
dec
stos
bound
pop
xchg
adc
jecxz
adc
adc
mov
das
xchg
dec
lcall
repz
imul
lcall
cltd
or
cwtl
adc
adc
dec
or
mov
loopne
push
in
pop
inc
mov
sub
js
or
inc
clc
jne
ret
jmp
xchg
lahf
cmovs
data16
pop
mov
adc
leave
and
mov
jne
mov
roll
scas
into
rclb
dec
lea
ret
push
push
xchg
fmull
shlb
mov
xchg
mov
jl
mov
adc
cmp
nop
and
jecxz
pop
inc
fstp
pusha
cmpsb
sub
cmp
dec
das
js
or
cmc
adc
leave
cli
mov
scas
lcall
pop
sub
cld
clc
jle
pop
sub
pushl
ret
xlat
mov
xorl
dec
add
push
rcrb
hlt
push
mov
xchg
je
and
cwtl
mov
cmpsl
das
mov
out
mov
push
lds
dec
cmp
mov
lods
daa
jno
xchg
add
jo
fidivrl
xchg
pusha
lret
lcall
in
ds
push
shlb
fs
push
add
sahf
arpl
in
in
and
adc
mov
icebp
push
mov
push
std
push
push
mov
push
push
ja
push
pop
decl
ds
adc
ja
or
sbb
cmpsb
jae
std
mov
xor
push
lds
adc
jne
push
dec
adc
pushl
or
mov
adc
test
mov
adc
incl
sbb
lret
or
push
inc
or
sbb
jp
jb
mov
in
adc
jg
adc
or
cwtl
popf
mov
iret
xor
ret
mov
out
loop
andb
dec
out
xchg
sbb
scas
mulb
je
sahf
inc
push
insb
test
jno
inc
mov
jne
jns
ds
bound
xor
push
add
adc
xor
jl
adc
lods
add
fisubs
add
add
jmp
jle
scas
pop
stos
and
sahf
mov
inc
lahf
stc
pop
cmp
xchg
jp
fisttps
scas
cmpl
out
jge
dec
ja
sti
sarl
arpl
inc
bound
ss
or
lcall
add
xchg
or
outsl
scas
ficoms
mov
and
push
dec
cmp
ljmp
mov
aaa
xchg
cltd
jns
roll
adc
xlat
xor
adc
jge
inc
sbb
mov
daa
nop
adc
xchg
cmp
in
jns
out
clc
push
mov
imul
cmc
mov
fsts
or
and
xor
inc
lods
pop
cmp
dec
inc
push
mov
hlt
adc
dec
insb
inc
ret
out
mov
daa
dec
stos
lret
fisttps
mov
adc
jle
lock
dec
or
repz
cmp
or
popa
cld
add
xlat
dec
ds
popa
out
inc
pop
jmp
or
and
and
adc
mov
and
popf
add
add
xor
add
push
xchg
or
shlb
push
aad
lock
scas
lret
pushf
or
aad
or
mov
lock
roll
jle
or
xchg
dec
mul
pop
insl
lret
xchg
in
lea
lret
sti
add
pop
mov
cmp
add
inc
sub
inc
dec
xchg
mov
jmp
pushf
in
inc
pop
push
cmp
mov
inc
bound
mov
lahf
insb
mov
scas
and
shlb
xchg
call
sbb
add
nop
dec
lret
rolb
xchg
xchg
test
or
jno
inc
cmp
cmp
es
iret
push
stos
popf
clc
xchg
adc
sbb
jmp
cmp
repz
repnz
xor
add
call
testl
lcall
jge
sbb
ja
leave
jmp
cwtl
rclb
cmp
inc
rorl
cs
mov
xlat
into
pop
subb
mov
pop
repnz
add
dec
mov
and
add
jne
repz
add
push
popf
imul
mov
mov
mov
in
mov
jbe
push
adc
out
dec
lcall
div
mov
les
and
rcll
aam
push
cli
out
adc
cmpsl
out
dec
in
add
inc
out
int
pop
jne
cmp
test
add
xchg
add
imul
test
add
hlt
pop
push
mov
or
mov
ret
cmp
inc
leave
fsts
mov
jmp
cmp
scas
pop
adc
mov
test
push
mov
mov
pop
push
outsl
and
adcl
rcl
int3
cwtl
adc
jne
jnp
and
jne
adc
sub
add
cmp
or
out
jb
or
ljmp
popf
jbe
push
jbe
mov
hlt
push
ljmp
adc
and
sbb
lock
fnstcw
lods
add
je
push
jmp
mov
lcall
arpl
sti
gs
rorl
sbb
adc
hlt
popa
adc
movb
cmp
sub
dec
mov
jg
call
sub
push
xchg
mov
mov
pop
out
shrl
cli
and
add
mov
cmc
inc
push
pop
call
loopne
pop
subb
sub
in
leave
das
cmp
ret
mov
gs
pusha
lods
mov
jo
flds
ljmp
jbe
mov
mov
mov
xchg
sub
sub
xor
testb
or
adc
push
les
jnp
je
pushf
fstpt
je
add
js
inc
adc
dec
stos
xor
negl
in
in
adc
mov
adcl
sub
lcall
outsl
icebp
add
cmp
sbb
test
inc
push
arpl
jae
cmc
push
push
inc
scas
xchg
xlat
insl
test
adc
or
mov
daa
mov
bound
sub
and
adc
test
mov
pop
sbb
inc
lcall
jge
dec
mov
dec
lods
in
xor
call
aaa
mov
ja
add
sub
cmp
jge
jmp
adc
aaa
roll
pop
test
jb
iret
jns
xor
jbe
xchg
jnp
jp
inc
adc
or
loope
mov
fistl
je
movsb
or
lret
dec
cld
and
mov
inc
pop
leave
add
mov
sub
loopne
cld
test
inc
pop
in
xor
cmp
test
sub
inc
pop
inc
sbb
inc
fcmove
or
or
les
xor
cwtl
xchg
imul
push
or
jb
jo
mov
xchg
fidivl
adc
xor
add
and
rolb
repz
sbb
jne
insb
dec
push
insl
repz
call
sbb
lock
inc
sub
cmp
cmp
push
push
mov
push
movsl
cmc
mov
xor
push
push
faddl
push
push
pusha
dec
cld
loop
add
adcb
mov
les
daa
or
dec
repz
jg
popf
mov
push
mov
mov
push
sbb
inc
dec
push
jmp
stc
xlat
and
insl
andb
push
xor
jge
fisttpl
pop
xor
push
fiaddl
fs
adc
xchg
in
das
inc
aad
imul
xchg
xchg
and
shlb
jbe
movsb
push
rolb
fld
cmp
test
jmp
cmp
dec
jns
or
jae
gs
pop
in
fdivr
sub
test
or
sti
shlb
pusha
pop
pop
je
cmpsb
ljmp
lcall
cld
mov
xor
add
mov
xor
out
mov
pop
mov
int3
xchg
fwait
rclb
sbb
and
dec
cmp
xchg
imul
xor
in
sub
adcl
and
ja
not
mov
push
or
arpl
jnp
inc
and
sbb
mov
fwait
inc
mov
shlb
mov
rolb
test
add
or
sarl
or
fstl
pop
jne
xor
mov
pop
push
mov
mov
jno
mov
shlb
stc
je
add
push
push
sbb
pminub
rolb
lret
cld
inc
push
gs
and
inc
jge
inc
pop
jg
mov
inc
mov
adc
fndisi(8087
into
jle
cmp
pop
ss
and
sub
cltd
mov
leave
mov
pop
inc
fcomp
lock
inc
dec
push
sbb
iret
mov
cmp
mov
sti
insb
insb
lret
sub
mov
test
inc
frstor
xchg
add
outsl
inc
sarb
mov
adcl
cmc
les
sub
call
xchg
adc
sahf
loopne
and
dec
jecxz
and
lahf
xchg
adc
cmp
sub
mov
cmpb
sbb
cwtl
jne
xchg
enter
and
pop
into
adc
xor
les
jnp
sub
addl
lcall
push
pop
inc
or
cmp
mov
mov
sub
nop
push
cmpsb
xchg
xchg
xchg
daa
mov
push
push
mov
mov
outsb
jns
sarb
lret
leave
adc
or
cmc
test
cmp
jge
inc
rclb
clc
outsl
shrb
jg
shll
arpl
adc
lcall
or
jl
pop
ret
or
enter
push
dec
loopne
jp
les
cmp
imul
cmc
push
sub
icebp
adc
fdivs
test
xor
syscall
pushf
ret
ret
jb
mov
clc
xor
cld
jl
clc
icebp
adc
sbb
sub
jnp
pop
mov
das
jmp
test
ret
mov
and
loope
movb
insb
push
andb
daa
sar
dec
negb
faddp
mov
popa
or
mov
adc
jmp
inc
data16
push
sbb
lock
daa
shr
sbb
pop
gs
jge
lcall
pusha
mov
xor
pop
popf
fnstenv
mov
pop
mov
cmpsl
ljmp
addr16
pop
mov
fdivl
mov
push
nop
test
repz
and
or
jg
xchg
or
and
ds
rclb
nop
xchg
dec
enter
push
jmpw
lock
sub
movsb
xlat
adc
push
cmp
push
cmp
ret
and
clc
test
popf
xchg
jae
and
add
movsb
mov
inc
test
mov
xchg
mov
or
xchg
mov
test
and
mov
dec
push
xor
jle
rol
movsb
jae
pop
push
dec
mov
lea
jmp
loop
gs
xor
leave
xorl
fstl
aaa
and
dec
lea
pop
mov
clc
jle
mov
jmp
jne
aad
inc
push
mov
and
mov
stos
dec
adc
movsb
pop
dec
add
outsb
mov
mov
inc
adc
pop
pop
add
inc
push
mov
jo
mov
adc
dec
or
adc
pusha
push
inc
and
jg
or
cltd
pop
mov
ret
leave
xchg
xor
cltd
jl
cli
adc
and
sub
jne
xor
xor
push
ficoml
cmp
sub
push
cmp
adc
jecxz
shl
sub
cli
xchg
je
rolb
ret
push
dec
sub
and
cmp
or
push
ds
push
dec
cmp
adc
add
dec
cld
lret
pop
sub
xchg
and
push
or
jne
rorb
or
sbb
call
sub
pop
mov
pusha
aam
inc
in
sub
fidivl
fst
xor
iret
repnz
add
dec
sbb
daa
fstpl
popa
fdivrl
cli
ror
aam
inc
sub
pop
mov
mov
dec
xchg
inc
fdivr
inc
adc
std
sub
sbb
mov
mov
std
xchg
leave
mov
mov
adc
jmp
sbb
add
xor
xor
sbb
dec
imul
xchg
mov
lahf
leave
in
and
out
xchg
inc
mov
rclb
inc
xchg
mov
jns
inc
lods
aaa
push
or
rorb
shlb
add
push
cmpsl
ss
pop
movsb
mov
xchg
mov
les
les
sbb
and
cmc
lods
mov
shll
mov
call
xchg
popl
xchg
cld
mov
jb
gs
enter
jle
cld
sub
fmul
pushf
mov
shlb
cwtl
xor
jo
mov
mov
mov
and
pop
daa
inc
cli
stc
jb
and
rorb
cs
cmp
sub
and
mov
xchg
int3
inc
cli
movsb
jmp
and
sub
int
pop
repnz
lods
and
pop
and
adc
inc
mov
mov
cmp
int3
and
enter
sbb
fsubrl
loop
push
xchg
lock
ja
bound
popf
inc
jle
add
icebp
mov
dec
mov
arpl
sarl
xchg
mov
cmp
or
inc
jp
mov
push
pop
scas
mov
push
in
mov
dec
int
mov
sub
and
mov
cmp
lods
and
push
nop
cmp
push
pop
xchg
dec
and
call
push
xchg
adc
add
sub
lods
std
mov
add
jnp
adc
stos
mov
mov
sub
das
jge
dec
or
cmp
nop
dec
and
push
cmp
mov
lret
push
dec
loope
cmp
rcl
scas
fcoml
into
or
dec
xchg
mov
jbe
dec
movsl
push
or
js
push
jne
je
push
mov
cmp
mov
mov
sbb
sub
or
mov
stc
push
mov
adc
and
dec
loopne
loope
loop
adc
jg
in
and
inc
out
mov
adc
and
out
push
jmp
data16
pop
in
or
mov
adc
and
dec
repz
test
test
lods
adc
scas
xchg
hlt
or
mov
adc
and
dec
cli
sar
adc
pop
aad
or
xchg
xlat
and
inc
mov
sbbb
pop
out
push
xor
mov
add
sub
mov
xchg
or
cmp
sub
sbb
ljmp
je
or
inc
push
sbb
mov
add
lret
xor
and
add
jmp
call
sub
or
popa
sub
sub
sahf
add
dec
xor
xchg
xchg
pop
sub
adc
ret
int
push
pop
outsb
sahf
mov
mov
shlb
mul
adc
enter
jo
imul
call
lcall
and
enter
xchg
pusha
outsl
jmp
mov
add
dec
sbb
mov
into
inc
inc
inc
cli
or
rolb
enter
mov
adc
or
loope
js
xor
jae
cmp
or
into
dec
or
inc
nop
sbb
sbb
adc
into
mov
push
inc
lcall
into
mov
dec
xor
into
stos
xor
add
add
clc
pop
shlb
ds
addr16
jp
xor
pop
lea
inc
sub
inc
aas
jmp
pushf
and
and
pop
pop
lea
inc
jmp
mov
xchg
jnp
test
popf
push
mov
es
push
push
sarb
cmp
popf
and
vprotw
enter
jnp
sbb
icebp
mov
clc
int3
lahf
shl
pop
iret
pinsrw
cmc
inc
into
repz
fiaddl
enter
iret
out
into
outsb
jbe
push
lock
xor
stc
pop
dec
addr16
xor
std
jle
mov
fucom
jp
push
or
ja
adc
and
enter
ror
jle
mov
inc
add
repnz
xor
int3
or
in
lret
icebp
les
sbb
fdivrs
insl
test
call
test
loope
mov
adc
jb
mov
test
sbb
mov
adc
enter
inc
sbbl
and
and
mov
mov
adc
and
ret
inc
stc
mov
add
add
mov
pop
or
or
mov
mov
lods
mov
lcall
add
push
push
cmp
xor
popf
negb
sub
je
push
mov
or
mov
fs
mov
call
mov
and
jbe
pop
and
xchg
sub
adc
fs
jne
add
pop
pop
leave
ret
aas
cmp
int
dec
lock
lock
in
cmp
movaps
and
notb
out
jmp
and
jl
and
add
mov
test
sar
rorl
adc
dec
push
jecxz
lock
inc
inc
push
test
push
mov
movsb
jle
or
add
jmp
push
xchg
adc
sbb
push
jne
jmp
fdivl
push
xchg
mov
or
jmp
fmull
xchg
mov
lock
movsl
sub
jg
call
jmp
test
and
in
out
jle
inc
push
sub
inc
rorb
call
hlt
add
sub
lahf
imulb
std
mov
or
adc
xchg
push
rclb
xor
cld
and
clc
jmp
call
js
iret
mov
and
scas
clc
insb
mov
aas
mov
xchg
loope
popa
xor
xchg
sub
dec
pop
sbb
ljmp
dec
and
loopne
xchg
ja
sbb
mov
pop
push
sub
lret
mov
cli
and
adc
xchg
ficompl
loopne
je
cmpl
loopne
dec
jne
test
inc
push
pusha
push
mov
out
fmuls
push
and
repnz
gs
lods
dec
or
imull
les
jl
jmp
jl
cmpsl
imul
mov
call
and
sub
jo
jl
aad
push
sub
cld
std
and
adc
movsb
ret
pop
xchg
lods
cmp
adc
sbb
fisubrs
js
lea
push
inc
es
and
fcomip
jmp
out
xchg
push
lock
mov
mov
or
jl
adc
stc
add
jns
or
mov
je
adc
ss
loopne
sbb
jae
push
fwait
test
pop
lock
movsb
or
test
push
jp
xchg
and
dec
scas
aam
movsb
dec
cld
xchg
outsb
test
adc
outsb
cmp
int3
xchg
hlt
lahf
bnd
lock
pop
inc
adc
jae
ds
pop
jecxz
mov
add
andl
xchg
pop
incl
lret
pop
cmc
dec
jp
outsb
cwtl
adc
int
call
jmp
cmp
mov
sbb
and
or
por
loopne
cmp
jo
fsubl
sub
popf
push
cmp
ret
ds
not
xchg
or
add
out
add
ret
out
sbb
adc
mov
adc
in
cmp
sub
push
cld
incl
mov
push
repz
sbb
and
aaa
xor
leave
jne
sub
iret
call
lret
mov
shlb
in
pop
inc
shr
insl
xor
cmp
sub
jle
cmp
mov
mov
imul
and
mov
sbb
add
adc
inc
leave
hlt
add
xchg
mov
adc
jl
in
rcll
jg
jp
jp
pop
add
loopne
sti
leave
or
cmc
and
xor
aam
adc
dec
jp
xchg
clc
in
jmp
xchg
mov
inc
sub
push
aas
jo
xor
aad
and
add
jmp
mov
add
jnp
in
cmp
cld
xchg
out
int3
js
dec
mov
xorb
arpl
add
lcall
pop
das
adc
scas
mov
out
out
jne
xchg
in
jne
cli
jg
insb
adc
push
dec
repz
andl
jne
and
push
jno
sbb
daa
shl
movsl
lods
out
cmpl
and
sbb
dec
jne
popa
popf
repnz
lds
jle
leave
popa
test
mov
daa
lcall
sub
dec
loopne
push
lahf
pop
push
or
je
pop
imul
and
adc
sub
pop
aam
mov
jg
and
pusha
daa
jmp
sub
push
xchg
sbb
aad
dec
xlat
dec
mov
push
divl
jge
mov
jo
rorb
in
js
xchg
je
aam
mov
mov
fsubrl
dec
and
clc
cmpl
sbb
push
movl
loope
repz
xchg
cld
in
je
sbb
push
mov
adc
inc
mov
xor
int
xchg
es
push
pop
and
sti
dec
add
cmp
fnstcw
xchg
inc
sbb
and
or
gs
cmp
pop
sbb
pushf
fmull
call
aam
pop
and
stc
enter
sbb
cltd
adc
data16
ret
xor
aaa
std
clc
xchg
push
jae
imul
enter
dec
jl
and
pushf
notb
js
sbb
xor
out
pop
xor
push
gs
xchg
jb
mov
xchg
sub
cmp
sar
int
and
push
inc
add
pop
jne
mov
popf
jns
adc
loopne
les
jg
sbb
pusha
loop
jae
inc
sub
dec
sbb
cmp
lods
adc
inc
fs
or
sbb
popa
push
movsl
jg
lds
mov
aad
mov
xchg
mov
push
es
jae
dec
push
rorb
loop
daa
loopne
xlat
inc
in
jno
test
and
mov
mov
inc
inc
cmp
adc
dec
and
mov
sub
cmp
out
jecxz
jp
bsf
rorl
rclb
pusha
jb
push
mov
push
jns
or
idiv
out
mov
dec
movsb
pusha
rcrl
jle
dec
testb
dec
repz
das
cmpl
adc
and
or
adcb
leave
jno
test
and
cwtl
and
jmp
inc
orb
or
jb
fiaddl
pop
push
mov
mov
and
xlat
sub
movsl
push
push
adc
arpl
and
adc
add
jge
test
pop
ss
xchg
xchg
adc
loopne
movsl
or
leave
scas
adc
mov
int
addr16
dec
and
xor
out
movb
sbb
mov
and
call
push
ljmp
outsl
dec
sbb
sub
les
sub
mov
enter
outsb
sub
push
xor
ja
gs
dec
or
lahf
push
xlat
and
int
cmp
test
and
mov
jae
push
and
out
sub
push
fdivs
ret
shll
mov
mov
or
daa
sub
rorl
enter
or
push
jno
fs
sub
fisubs
loop
xchg
jae
out
inc
inc
mov
pop
and
sbb
push
mov
dec
jmp
jmp
movzbl
push
mov
or
cld
push
mov
or
mov
dec
dec
xor
jle
or
xchg
mov
and
cli
dec
int
pop
shll
fsubr
test
arpl
setne
jb
lahf
iret
loopne
sub
cltd
call
call
mov
in
int
sub
repz
cwtl
fwait
out
test
test
arpl
inc
call
bnd
lahf
push
test
outsl
jne
mull
jae
out
or
test
pop
xor
mov
cmp
subb
rorl
mov
xor
xchg
test
mov
jnp
aam
scas
je
adc
fyl2xp1
das
or
and
rclb
dec
enter
mov
sub
andb
std
repz
aas
or
dec
dec
ljmp
sahf
xchg
enter
inc
lock
dec
sub
jmp
leave
test
add
faddl
das
or
mov
aad
push
push
andl
sarb
mov
notb
jmp
xchg
cmp
cltd
mov
cmp
dec
popa
cmp
cmpsb
push
cld
or
bound
ds
mov
jl
adc
adc
cmp
iret
clc
cmp
nop
icebp
sub
adc
in
sbb
lcall
call
push
jge
repz
mov
mov
data16
inc
add
dec
cmp
stos
mov
inc
xchg
pop
in
sub
cmp
add
xchg
or
sbb
jne
les
mov
dec
call
inc
cmpb
aas
xor
rolb
xchg
das
daa
daa
adc
cmp
or
mov
insl
sti
inc
or
dec
or
std
push
or
mov
test
test
mov
and
loop
lds
cltd
ja
hlt
dec
imul
stos
sub
repnz
jge
rclb
shrb
mov
cmp
mov
mov
or
jecxz
pop
popa
sub
cmp
add
out
sub
leave
ret
shlb
pop
rorl
add
jbe
pusha
push
scas
call
insb
aam
aam
xor
mov
jo
sti
sub
pop
inc
mul
jne
loop
inc
nop
enter
js
and
inc
sub
cmpsl
fdivr
shll
mov
jge
jo
jmp
shlb
rcll
out
mov
dec
test
shl
fwait
cmp
icebp
push
mov
shrb
test
sub
shrl
inc
pop
mov
and
dec
and
adc
int
mov
sbb
mov
inc
inc
xchg
cmp
cmp
push
cld
mov
push
lods
and
rorb
out
adc
jg
sub
push
sub
or
pop
imul
cmp
stc
cmp
movsl
in
into
std
pop
dec
mov
push
push
icebp
les
in
ds
cmp
subb
in
pop
xchg
lcall
sub
jl
mov
mov
xchg
stc
arpl
mov
jbe
sbb
emms
cli
scas
rcrl
xor
adc
out
push
mov
xchg
dec
fidivl
adc
mov
call
adc
mov
push
movsb
imul
sbb
sbb
cmc
addr16
shrb
and
mov
iret
jnp
or
cmp
adc
dec
push
aam
ret
inc
adc
fisubrs
repz
loop
outsl
test
mov
and
adc
enter
aas
adc
lock
push
or
imul
imul
push
dec
pusha
jmp
jnp
jne
pop
dec
dec
repnz
dec
fsubrl
adc
dec
clc
test
or
jne
int3
xor
inc
bound
loopne
xorl
or
test
repz
loop
xchg
mov
into
xchg
repz
inc
pop
movsl
inc
aas
dec
lods
mov
shrb
cmp
or
lcall
dec
enter
push
or
and
fisttpl
fldenv
ljmp
sub
push
mov
xor
inc
scas
fsubrs
mov
jl
inc
adc
or
hlt
xchg
jbe
sbb
loopne
rolw
push
js
add
fnstcw
gs
lock
mov
ficoml
mov
or
dec
popf
add
jne
pop
xchg
pusha
scas
mov
xlat
mov
clc
daa
jne
pop
test
and
push
rcrb
test
adc
in
int3
lea
jne
adc
hlt
mov
std
adc
mov
test
jne
cmp
lods
jg
lods
pop
mov
push
lock
pop
incb
fsubp
mov
mov
mov
clc
add
lahf
dec
inc
imul
bound
cmp
scas
xor
xor
sbb
xchg
icebp
adc
enter
loop
jecxz
mov
iret
imul
mov
pop
xchg
enter
lods
lret
xchg
or
xchg
jne
xchg
ss
daa
adc
dec
xchg
loopne
push
push
pop
dec
shll
mov
cmp
ja
fistps
push
xchg
bound
inc
stos
adcb
sahf
xchg
mov
cmp
jmp
dec
mov
sub
push
jns
mov
xchg
xchg
sbb
push
sub
test
int3
inc
adc
shr
jl
inc
push
outsb
xchg
test
dec
pop
fsubs
xorl
mov
lods
les
push
arpl
sbb
inc
pop
fisubrs
inc
mov
inc
cmp
nop
cmp
mov
out
mov
ja
mov
addb
enter
cmp
test
and
and
and
popa
addb
mov
mov
imul
and
pop
adc
and
add
inc
dec
ret
cmp
jae
mov
ljmp
fsave
push
push
pop
mov
mov
jmp
hlt
cmpsl
sub
sub
adcb
sub
lods
cld
cld
inc
aas
nopl
fbstp
aas
adc
sbb
xchg
ret
sbb
or
mov
pop
or
push
mov
sub
mov
aam
jno
add
pop
into
sbb
sbb
dec
and
fwait
andnps
xor
and
rorb
dec
push
out
cmp
and
fsubr
cli
mov
jp
lahf
and
sbb
add
mov
push
mov
rol
push
test
and
lea
hlt
sti
sub
mov
or
lea
inc
sbb
nop
xchg
dec
inc
jb
and
ja
add
adc
xchg
mov
and
iret
mov
clc
std
adc
mov
inc
es
fwait
sbb
sub
cmp
pop
push
inc
cld
rorl
dec
push
decl
inc
leave
dec
scas
out
inc
adc
sti
cmpsl
iret
mov
pop
mov
or
or
xor
rdtsc
loopne
subl
xorb
cmp
aaa
dec
xor
push
sar
shll
sbb
aaa
mov
nop
mov
aaa
mov
push
inc
dec
jp
in
xchg
cmp
xchg
and
xchg
addr16
cmp
dec
enter
lret
or
push
cmpl
pop
ficompl
pushf
jne
adc
push
cmp
or
xor
jmp
out
sub
adc
mov
dec
test
and
in
or
push
movsb
cmp
popa
inc
and
sbb
and
ror
call
adc
mov
cmpb
stos
mov
inc
cs
push
std
call
imul
addb
fisttpl
cli
je
loop
or
call
sbb
leave
dec
jne
mov
adc
xchg
push
shr
ficoms
push
adc
hlt
test
jg
fs
ljmp
scas
sub
ja
cmpsl
push
in
daa
ja
ret
add
or
inc
nop
test
in
xchg
ret
subl
test
loope
cmp
mov
and
jb
push
sub
push
ret
subl
push
and
inc
xchg
xchg
mov
cmc
inc
mov
mov
xchg
std
shlb
or
bound
outsl
pop
push
lahf
mov
pop
and
jbe
fwait
xor
add
mov
xor
rorb
xchg
jg
ja
repnz
inc
cmp
sub
hlt
call
jecxz
xchg
fbld
lods
inc
mov
cmp
cld
das
xchg
ret
loopne
rolb
movsb
fwait
cmpb
and
iret
repnz
in
movsb
shl
pop
mov
addl
sbb
fneni(8087
sub
outsl
jge
call
push
adc
or
mov
inc
inc
in
aam
aaa
std
and
mov
test
jne
nop
testb
sub
mov
and
ds
sub
add
pop
add
int
fidivl
mov
je
test
out
mov
subb
push
xchg
sti
leave
xchg
or
enter
jmp
xlat
mov
in
das
in
pop
fcomps
arpl
insl
cld
push
sbb
or
mov
jb
jmp
rorl
int3
pop
add
hlt
sti
int
outsb
mov
cmp
jne
dec
js
jge
inc
push
call
aam
jmp
push
jmp
fldz
fyl2x
shll
sub
fnstcw
std
sub
adc
rcr
loopne
xorb
test
cltd
cli
neg
jno
leave
je
and
addb
sub
cmp
jmp
mov
cli
daa
lret
insl
stc
cmp
mov
adc
gs
decl
mov
dec
and
add
mov
mulb
jmp
test
add
xchg
out
fcoml
pop
popf
pop
int
mov
jg
pop
test
pop
or
pop
out
int
mov
dec
add
push
jge
mov
insb
icebp
adc
or
or
pop
js
imul
dec
add
inc
jnp
shlb
les
mov
xor
mov
sub
jmp
cmpl
out
iret
pop
rcll
sub
xchg
pop
adc
inc
pop
test
dec
dec
xchg
pop
dec
dec
xchg
test
in
and
mov
adc
arpl
push
push
or
mov
add
pop
mov
pop
mov
push
scas
aam
sbb
hlt
mov
xchg
dec
xchg
rclb
sub
outsb
mov
or
stos
and
inc
adc
leave
push
mov
add
mov
adc
or
enter
or
jmp
pushf
je
imulb
shrl
addl
push
mov
popf
cltd
adc
or
shll
mov
and
adc
sub
daa
fbld
out
pop
xchg
xchg
lret
lds
jmp
push
dec
test
and
push
push
adc
and
loop
xor
push
pop
imul
mov
loopne
out
and
inc
adc
jl
mov
dec
xor
xchg
scas
sub
out
cmp
leave
testb
push
stc
nop
nop
ror
jne
cmp
into
fmuls
lea
or
add
mov
xor
mov
pop
xchg
andl
fcmovbe
rorl
arpl
add
jnp
cmpb
decb
xchg
mov
pusha
push
jp
push
mov
add
and
or
inc
aam
or
add
jmp
cli
xor
hlt
push
mov
incl
jmp
add
sarl
outsl
icebp
hlt
ds
gs
xchg
and
cmc
add
mov
push
shll
push
iret
int3
mov
les
push
mov
push
loopne
cltd
ja
sbb
inc
test
test
shl
inc
xorl
push
push
push
xchg
cmc
mov
mov
dec
sbb
lock
lea
jne
or
fs
aad
lods
jbe
lods
push
pop
mov
sub
mov
mov
movsb
repz
push
sbb
add
int
cs
pop
push
sahf
pop
test
xlat
scas
popf
sub
jno
add
pop
xor
xlat
push
je
fldl
js
jmp
mov
bound
cmp
or
repz
sub
xlat
adc
mov
gs
outsl
and
and
repz
or
or
or
outsb
test
dec
pop
pop
clc
xchg
inc
decl
icebp
push
dec
ljmp
jp
mov
fists
dec
pop
repnz
pop
dec
push
addl
add
mov
push
icebp
mov
fwait
push
xchg
lods
cltd
ss
pop
jne
jae
xlat
jb
loope
jl
pop
adc
pop
jg
dec
adc
cmp
and
popf
stc
insb
dec
inc
arpl
popf
ljmp
shr
pop
and
and
and
or
movsb
push
or
pop
and
mov
mov
int3
mov
sub
and
sbb
jbe
or
jns
xchg
or
push
rorl
push
inc
adc
cwtl
sub
adc
stos
sub
mov
jnp
cmp
adc
cli
mov
sub
push
xchg
icebp
xor
push
inc
lea
jno
lcall
dec
test
ret
std
test
or
adc
and
lock
sbb
cmp
call
mov
movsb
push
mov
mov
data16
add
rolb
call
push
xchg
push
inc
hlt
mov
dec
push
mov
ss
fsts
adc
mov
fcoms
sar
mov
xchg
icebp
fsubrl
pop
mov
mov
mov
push
add
ret
jp
in
or
ja
outsb
push
or
dec
dec
xchg
jns
dec
push
repnz
push
orl
rcl
nop
dec
cmpsb
leave
lret
add
mov
xchg
inc
test
cmp
jne
xchg
jne
mov
or
adc
xor
fbld
mov
xchg
repnz
in
inc
out
mov
mov
bound
out
jmp
push
lea
or
mov
adc
aam
and
jno
sub
enter
add
call
and
add
shl
mov
xchg
add
lods
xor
pushf
adc
repnz
mov
jae
and
inc
imul
jne
in
mov
or
insl
sbb
mov
addb
ljmp
in
inc
mov
xchg
imul
add
movsb
and
jg
cltd
sbb
outsb
mov
and
leave
arpl
lea
push
repz
dec
ret
cmp
pusha
jg
or
pop
jge
movsl
hlt
inc
mov
or
mov
lahf
pop
xor
and
andl
dec
dec
adc
lea
mov
xchg
lret
sbb
xchg
mov
push
movsb
lcall
add
aaa
or
les
cmp
scas
cld
ja
adc
jns
jp
sbb
sbb
push
enter
xor
pop
and
in
sbb
lods
shll
insb
or
push
dec
add
or
ffreep
aad
cmpsl
sarb
push
mov
hlt
xchg
dec
mov
jmp
aam
jp
or
in
inc
mov
fcompl
dec
jmp
xchg
stos
adc
imul
imul
dec
test
push
cmp
enter
lods
push
xlat
adc
and
dec
stos
push
out
cs
lahf
movq
enter
jmp
sbb
cmp
jne
adc
sbb
mov
jmp
mov
inc
loop
cli
add
sbb
mov
add
int
mov
and
ljmp
push
scas
dec
and
xor
inc
and
adc
mov
jmp
xchg
mov
adc
imul
xor
inc
jns
cmp
pusha
pop
stos
pop
push
jns
mov
icebp
lds
add
jae
xchg
clc
pop
pop
mov
pop
jns
mov
lret
pop
sarl
add
mov
adc
movl
push
cmp
add
push
adc
jo
jne
dec
xor
push
in
dec
sub
dec
dec
adc
insb
movsb
and
or
or
in
and
dec
ljmp
adc
sub
adc
inc
sub
mov
rcrb
testl
imul
aas
je
adc
and
adc
inc
and
and
jp
rcll
inc
mov
push
inc
inc
ret
mov
insl
sub
int
adc
ja
rcrb
and
jb
out
xchg
pop
mov
shlb
test
and
push
mov
mov
add
lods
in
aaa
cmc
xchg
pop
movswl
mov
jbe
pop
sub
movsb
pop
xchg
orb
add
imul
ljmp
popa
mov
inc
in
sbb
mov
xchg
movsb
adc
mov
mov
xor
fdivrl
jg
push
xor
adc
lcall
lock
rclb
ret
cltd
and
or
rcll
cmp
ret
or
and
cmp
xlat
pushf
mov
or
movsl
fcomp
mov
add
push
fwait
paddq
xchg
mov
dec
lcall
outsb
push
cs
lods
shll
das
xor
fildl
jmp
lahf
push
cmpsb
sub
shl
test
xor
shl
or
add
mov
mov
jg
fstp
inc
push
lds
and
pop
add
sbb
std
mov
adc
mov
push
mov
pop
adcb
pop
test
in
push
mov
fstl
add
sti
mov
lea
repz
xchg
sub
test
adc
loop
cmp
dec
and
jle
mov
pop
add
add
xchg
dec
daa
shll
push
cltd
push
sub
push
aad
sti
out
daa
aam
mov
push
push
mov
insl
lock
push
inc
inc
mov
mov
or
sub
insb
pop
cmpsb
out
adc
jmp
scas
mulb
mov
ljmp
mov
xchg
stos
push
sahf
repnz
mov
sub
and
clc
pop
or
fimuls
jbe
push
fwait
adc
xor
adc
xchg
xor
and
add
decl
imull
test
push
cmpsl
testl
pop
jb
int3
repz
dec
and
imul
pop
mov
stos
frstor
fucom
pop
cmp
fiaddl
cmp
pusha
adc
pop
xor
adc
push
ljmp
inc
dec
mov
xorl
aas
std
sub
in
dec
cld
and
xor
sub
leave
bound
mov
rclb
scas
je
jmp
xor
or
cmpsb
pop
inc
or
push
jb
js
xchg
scas
scas
xchg
adc
mulb
push
xchg
jne
push
adc
mov
and
adc
add
adc
add
je
or
or
imul
ficoml
call
shrl
push
testl
loopne
jge
cmc
sbb
push
out
push
mov
pop
mov
call
xor
cmpsl
sub
xchg
mov
dec
xlat
das
icebp
test
fidivrl
adc
ja
or
bound
and
mov
sbb
push
mov
or
push
loope
je
ja
in
pushf
adc
mov
orl
and
jno
cmpsl
xor
pop
ret
iret
mov
mov
or
loop
xlat
jp
adc
xor
jae
mov
inc
popa
jne
push
aad
rorl
adc
adc
ds
mov
xor
add
sbb
mov
inc
aaa
xor
mov
test
popa
or
jns
inc
into
add
loopne
cmp
inc
das
mov
xchg
inc
add
add
jne
scas
hlt
inc
or
fidivrs
mov
stc
cld
cmp
or
dec
push
cmp
pushf
das
nop
lret
cmp
test
call
in
stos
test
dec
iret
pusha
xor
dec
mov
shrl
lret
cmpsb
pusha
daa
aad
adc
push
ss
outsl
inc
mov
fmull
pop
adcb
andl
and
jo
sbbl
mov
mov
jns
icebp
pop
enter
ret
adc
clc
inc
mov
loopne
call
aam
mov
inc
hlt
sti
out
lret
aam
fdivrs
mov
jle
dec
mov
cmp
mov
rclb
cmpsl
mov
adc
xchg
shr
into
dec
repnz
cmc
sub
mov
dec
rclb
sbb
xor
jl
shll
pushf
cs
mov
dec
addb
sbb
inc
mov
xchg
adc
es
insb
imul
jns
push
adc
adc
out
xor
dec
adcb
or
xchg
or
or
pop
and
cmp
inc
and
and
jns
mov
jge
lds
jne
inc
loopne
gs
call
adc
push
push
outsb
das
loopne
fs
in
dec
or
adc
sbb
leave
lret
sbb
dec
faddl
pop
lods
cmp
std
xchg
mov
daa
mov
rolb
outsl
and
push
inc
and
mov
xor
push
jno
push
ja
imul
mov
lods
xlat
test
fdivr
add
cwtl
shr
dec
sub
and
xchg
push
jo
mov
pop
push
lock
jnp
add
fisubs
dec
dec
pop
ja
je
push
mov
mov
cmp
adc
push
add
and
adc
inc
adc
jl
adc
stos
jle
mov
adc
push
and
push
push
nop
sbb
sub
mov
lea
jg
adc
pop
adc
stos
inc
dec
dec
push
pop
std
filds
cs
pop
inc
leave
and
adc
mov
shll
xchg
icebp
push
ret
leave
pop
ljmp
test
fs
sbb
push
push
mov
push
stos
xlat
in
and
repz
mov
push
pushf
sub
pop
sub
orb
sar
fnstenv
sub
cld
mov
adc
add
push
sbb
and
stos
pushf
testb
sub
inc
lea
data16
sbb
frstor
rorb
dec
or
xchg
dec
dec
mov
lcall
outsb
mov
mov
cmp
jl
orb
std
mov
push
outsl
mulb
aaa
jb
or
lock
clc
push
inc
inc
js
cmp
xchg
in
bound
inc
or
cltd
in
stos
xchg
jle
mov
jne
fistpll
cmp
xor
or
test
shld
ret
ret
mov
jg
cmp
outsl
adc
dec
push
and
rorl
dec
fsubs
xchg
ret
jge
push
movsb
pop
or
jl
fidivrl
sbb
daa
xor
pop
mov
sbb
xchg
repz
jg
dec
mov
and
mov
das
je
std
xor
jg
push
mov
jmp
movsl
adc
ret
in
jne
adc
mov
lock
add
cmp
adc
scas
cmpsb
cmp
mov
fs
add
xor
and
pusha
mov
fcomps
movsb
adc
call
pop
fnstcw
and
mov
decl
mov
jecxz
mov
loopne
xor
lret
cwtl
cltd
in
cmp
in
aad
xor
push
push
pushf
scas
sub
cwtl
inc
stos
mov
stos
sbb
repz
inc
push
nop
shrl
loope
sbb
adc
push
sbb
jae
popa
xlat
inc
add
dec
sbb
sbb
mov
bound
fcoml
rep
cmp
xor
out
pop
sub
sbb
iret
jo
inc
mov
sub
mov
push
mov
or
std
dec
sub
iret
xor
imul
jb
or
and
fsubl
rorl
mov
push
sbb
je
jno
push
xchg
add
das
nop
lea
cmp
repnz
jnp
out
lods
cmp
jl
mov
call
popa
int3
push
fs
and
xchg
cmp
jno
gs
dec
vsqrtps
fst
jo
mov
adc
push
fisubrl
addr16
mov
and
aam
enter
lods
mov
aam
cltd
pop
mov
lret
add
lock
hlt
call
movsl
jmp
popa
pop
jae
das
lea
jle
movsl
adc
adc
dec
nop
sbb
mov
xor
mull
fmuls
mov
test
int
xchg
enter
scas
je
dec
jbe
fstl
test
xlat
ss
adc
lods
daa
insb
add
insb
push
add
cmp
sbb
mov
pop
fwait
push
subb
cld
dec
pop
cmpsl
add
xor
sbb
cmp
jb
sub
and
pop
mov
and
inc
cmpsb
mov
pop
xor
mov
fcompl
pop
aaa
les
lea
xor
pusha
loop
lahf
pop
mov
lahf
push
mov
mov
scas
negl
call
xchg
dec
and
mov
or
movsl
xor
sub
mov
push
inc
pop
jp
inc
mov
outsl
pop
or
movsb
mov
sahf
pop
adc
fs
sub
push
push
mov
js
sub
xchg
ret
xchg
or
cld
insl
lds
pop
mov
ja
adc
push
or
jmp
ss
in
jne
aam
les
ja
xor
ss
mov
test
leave
jg
sub
in
rorl
inc
push
fwait
xchg
dec
push
aaa
and
pushf
jmp
xchg
stos
bnd
movsl
out
push
xor
jg
aaa
sbb
sbb
imul
or
adc
test
enter
sbb
loopne
shlb
daa
push
test
jns
mov
xchg
daa
loopnew
push
push
adc
loop
cwtl
shlb
and
push
xchg
outsb
xchg
adc
sbb
shlb
pop
or
inc
dec
les
push
sbb
lcall
movl
jnp
fucomip
dec
adcb
or
jmp
std
les
outsb
lret
xchg
in
adc
jne
stos
cmpsl
fiadds
dec
mov
pop
mov
popf
pop
rorb
xor
das
jmp
mov
push
adc
push
sub
sbb
or
and
mov
ljmp
jmp
lock
dec
sub
aas
sub
stc
je
je
xor
out
jmp
je
jmp
clc
push
or
xchg
push
or
bound
jne
ret
imul
and
jmp
pop
pop
push
sub
and
nop
push
test
incb
xor
in
push
rcll
shr
mov
or
bound
mov
mov
jmp
lahf
pop
mov
lock
xchg
int3
cmpsl
icebp
das
fsub
jmp
test
push
sbb
adc
imul
hlt
jmp
insl
mov
cmp
add
sbb
jmp
xor
addr16
add
movsb
dec
sub
sub
inc
and
jl
and
add
cmpsl
iret
je
jp
inc
inc
inc
test
out
add
cltd
mov
xchg
cld
mov
test
mov
cmp
mov
fs
cmp
test
test
pop
inc
jge
and
movsl
out
mov
call
pop
cmp
or
or
and
call
jmp
mov
daa
sbb
cmp
dec
sbb
and
add
je
mov
flds
popf
shrl
adc
mov
add
fcoms
sub
xchg
in
xor
push
xchg
jle
push
movsb
push
mov
in
jge
pop
jle
sub
adc
lcall
jl
cmp
clc
xor
jle
movsb
loopne
jo
addb
jmp
sub
and
jmp
add
aas
cltd
and
ret
pop
adc
mov
scas
add
neg
lds
xor
loopne
adc
leave
cmpsb
in
enter
incb
lret
push
in
add
addr16
xchg
dec
mov
scas
test
xor
add
cmpb
dec
testl
cmp
push
sbb
pop
js
push
cmpb
mov
jp
mov
dec
out
mov
rclb
xor
push
pop
xor
adc
and
popf
sbbb
es
insl
and
inc
jge
int
stos
pop
rcll
add
add
add
pop
out
ljmp
xsha1
cmpsb
or
push
inc
adc
movsb
push
or
adc
or
mov
adc
dec
cmp
flds
xor
negb
xor
int
repnz
dec
icebp
or
mov
and
out
adc
jmp
adc
mov
outsl
push
jno
imul
test
mov
or
cmp
fstp
sub
das
sti
jne
jmp
aam
push
xor
scas
aam
jmp
inc
es
mov
mov
movsl
sbb
jmp
popf
sub
adc
xor
sub
fdivs
and
lds
orl
mov
sti
mov
jbe
movsb
inc
sub
push
xchg
hlt
jmp
into
xchg
cmpsl
sub
adc
hlt
gs
sbb
and
xor
jnp
and
jb
std
sti
rolb
fcomps
xchg
cwtl
mov
lcall
mov
push
rol
out
fst
daa
cs
lahf
inc
scas
sbb
fs
out
orb
mov
mov
xchg
or
scas
inc
cmp
mov
and
dec
cwtl
pop
mov
adc
ret
push
ja
bound
mov
mov
push
push
inc
ret
push
push
or
les
xchg
inc
enter
lret
rcr
sahf
fcoml
mov
lods
and
dec
out
repnz
mul
notb
xchg
xchg
stos
sub
mov
mov
jle
sub
xchg
pushf
mov
mov
fstps
lahf
dec
sub
or
mov
jnp
or
lea
mov
lods
mov
mov
inc
mov
xlat
and
inc
rclb
cmp
sbb
dec
xor
mov
push
pop
pusha
mov
fldpi
cmp
jmp
jp
test
inc
mov
xchg
mov
sub
outsb
int
sbb
push
pop
stc
jl
clc
jno
loopne
inc
pop
xchg
xor
outsl
in
adc
pop
std
add
in
add
inc
aaa
faddl
sti
sbb
ss
and
daa
lahf
or
add
xchg
jns
ds
or
stos
xchg
mov
adc
sub
mov
in
add
ja
mov
aas
das
inc
bnd
sbb
jmp
or
inc
jmp
pushfw
pop
cmp
mov
dec
aas
fldenv
xchg
inc
jmp
fs
xor
jns
add
and
xchg
dec
pop
xor
sbb
add
or
arpl
jge
imul
jne
jns
test
aas
bound
push
jne
jns
test
sbb
mov
jo
arpl
push
jmp
adc
call
in
mov
mov
push
insb
and
add
dec
add
push
mov
nop
cwtl
ret
or
pushf
or
repz
dec
jge
cmp
xchg
dec
pop
and
mov
mov
sub
cltd
sbb
jbe
pop
push
mov
imul
sub
dec
mov
js
test
in
xchg
mov
std
push
pop
popa
imul
dec
faddl
adc
push
sti
stc
rorl
je
call
daa
jne
jmp
mov
lret
mov
in
mov
add
push
and
ds
mov
fsubrl
and
mov
fcoml
nop
mov
inc
cmpsl
leave
bound
xchg
xor
xchg
push
aad
lods
mov
xlat
gs
sar
cmpsl
inc
int
ss
cwtl
adc
test
in
aaa
andb
pop
mov
aaa
sbb
sub
popf
jg
fstl
in
sbb
jmp
lea
sbbl
and
push
sbb
enter
cmp
or
icebp
add
sbb
and
add
add
or
fdivl
or
and
dec
pop
xlat
push
enter
sub
loopne
in
mov
cmc
test
inc
and
je
dec
hlt
cmc
or
xchg
aad
push
popf
rcrl
pop
pop
mov
divl
and
pop
and
push
push
add
jle
adc
and
xchg
xor
adc
call
pop
js
adcl
sbb
cmc
pop
add
repz
in
xor
aad
adc
call
push
pusha
bound
add
xor
sbb
adc
or
fst
iret
and
xor
or
mov
imul
adc
rcrb
xor
sbb
jb
adc
dec
cmp
and
sub
inc
pop
push
inc
and
mov
repnz
jb
pop
nop
sub
sub
inc
xor
mov
repnz
das
jb
pop
nop
sbb
xor
inc
sbb
test
cmp
inc
in
das
and
inc
and
jns
add
adc
enter
adc
mov
dec
sbb
test
push
or
mov
and
and
cmp
enter
and
pusha
add
cmp
enter
enter
push
gs
add
cmp
or
jo
cmp
mov
mov
bnd
cmp
jle
nop
jl
cmp
call
xor
cmp
aas
in
das
and
fs
inc
nop
and
mov
xchg
xchg
and
mov
repnz
sbb
sbb
test
mov
andl
and
pop
nop
test
push
and
and
call
fwait
cmc
stc
sub
sar
mov
sbb
or
hlt
fs
stc
cmp
dec
add
test
shlb
rep
sub
xor
adc
mov
sbb
lahf
xor
xchg
fs
mov
add
insb
and
insl
sbb
dec
sub
sbb
sub
dec
enter
mov
add
insb
sbb
sbb
and
inc
pop
enter
xchg
roll
in
sbb
inc
and
xchg
dec
xor
ret
fs
or
ss
push
nop
lea
pop
or
pusha
add
inc
fs
lea
insb
or
fnstenv
sbb
inc
je
ss
js
inc
xchg
mov
xchg
jns
arpl
dec
add
xchg
loop
test
inc
mov
mov
nop
mov
xchg
fsts
ret
and
cwtl
xor
inc
pushf
and
mov
movsb
and
fs
or
xlat
sahf
adc
adc
out
jno
cmp
or
je
insl
push
fmulp
lea
fmulp
imul
jae
mov
pop
out
add
jp
cmp
add
cltd
mov
xor
outsb
dec
mov
jl
inc
cwtl
mov
das
jne
in
negb
pop
mov
inc
mov
sbb
push
outsb
rcrl
jne
movsl
fbld
sub
lahf
add
iret
in
adc
movzwl
lods
adc
xchg
push
inc
loope
pop
fmuls
adc
jmp
pop
pop
nop
or
adc
and
cmpsb
in
sub
fbld
loope
xchg
inc
les
push
push
mov
fcomip
push
push
sub
movl
mov
mov
inc
dec
adc
adc
push
outsb
adc
adc
cmp
jg
cmp
dec
inc
add
cmp
xor
and
es
mov
cmpsb
adc
adc
fsubp
push
adc
xchg
loop
jmp
arpl
cli
cmpsb
and
cmp
xor
or
inc
andl
sub
fs
nop
adc
mov
cltd
adc
jns
xchg
mov
mov
fadd
lahf
imul
pop
aas
call
and
imul
inc
and
cmp
xchg
and
jmp
or
xor
mov
xchg
hlt
xchg
cld
push
pop
xchg
adc
jne
and
pop
aam
pusha
cmpsl
fwait
jg
fisttps
cmp
je
fs
repnz
mov
cmp
jno
jns
flds
adc
enter
inc
or
inc
loop
adc
xor
cmpsb
hlt
pop
sub
das
enter
add
loopne
jmp
add
test
sub
xchg
add
fld
mov
add
mov
jle
pop
jne
dec
or
andl
sbb
test
jo
add
adc
xchg
stos
mov
push
rorb
adc
ror
and
jns
lods
adc
push
sbb
test
sbb
pop
in
das
and
sbb
in
sbb
mov
pop
pop
inc
and
mov
repnz
aaa
add
mov
sbb
push
sbb
test
sub
jecxz
bound
test
sub
das
and
inc
push
and
cmp
pop
xchg
push
push
inc
xor
dec
bound
lea
and
dec
push
inc
sbb
loope
sbb
nop
mov
xchg
gs
jne
mov
or
fbstp
pop
cmp
xchg
mov
or
popf
mov
mov
lds
scas
loope
add
pop
push
or
push
cmp
push
or
data16
mov
sub
and
out
out
add
push
ds
adc
cmp
or
rcll
push
lcall
cmp
or
rcrl
add
adc
testl
testb
and
jnp
aam
and
and
mov
pop
cmp
jo
fadds
xchg
mov
inc
lock
push
mov
movq
adc
and
add
imul
call
mov
add
push
popf
jle
lea
outsb
cld
mov
call
and
inc
add
nop
imul
pop
aas
aam
dec
repz
adc
popf
pop
mov
fst
in
in
adcl
rclb
lret
or
mov
aas
cmpsb
mov
clc
adc
fcompl
push
and
andl
jle
sbb
mov
add
loop
mov
imul
sub
cmp
cmp
sarl
adc
jg
sbb
add
push
lods
loopne
mov
jnp
ret
fcoml
int3
xchg
and
lret
int3
push
inc
jne
mov
insb
aam
or
lea
sbb
fidivrs
push
jns
popl
mov
lods
jne
cmp
mov
lahf
pop
ds
adc
pop
cmp
in
and
loop
mov
test
cs
icebp
in
and
popa
pop
or
mov
jl
push
ja
jg
or
sbb
mov
push
mov
call
test
mov
movsl
mov
iret
rorb
out
xor
adc
shll
clc
dec
nop
xor
and
add
in
or
xor
stos
add
and
icebp
mov
xor
jmp
push
push
sbb
add
add
mov
and
and
clc
sti
inc
push
in
int
push
dec
or
or
lea
dec
dec
aad
pusha
or
test
negl
add
mov
idiv
sbb
adc
es
rorl
or
leave
decl
fnstcw
inc
mov
push
push
dec
or
pop
adc
inc
or
push
fmull
ret
cli
int
inc
loop
stos
sbb
mov
xchg
addr16
mov
xchg
dec
dec
jge
addl
push
jne
outsl
lock
inc
inc
inc
jne
cmp
cmp
cltd
cmp
mov
and
cmp
add
aad
and
adc
shl
jmp
mov
cmp
movsb
pop
stos
sub
bound
cld
push
jns
pcmpeqw
sub
or
fs
mov
leave
stos
xor
push
xor
push
and
and
and
push
mov
or
hlt
or
sbb
dec
add
pop
lea
xchg
add
adc
out
pushf
sub
jmp
test
inc
and
pop
loope
push
push
lea
ss
aas
pop
mov
inc
adc
dec
and
sbb
andb
mov
aaa
rolb
in
xor
lahf
in
movsl
cmc
adc
jg
sahf
testl
scas
xor
mov
dec
nop
sbb
mov
loop
cmpb
push
fbstp
jle
es
jo
andl
push
rcll
in
push
sbb
int
sub
rorb
pushf
xchg
adc
out
nop
xchg
inc
cmpsl
pop
mov
jb
ficoms
jmp
data16
clc
stos
adc
rolb
mov
clc
aam
or
sahf
lods
cld
ja
loop
scas
or
or
sub
add
adc
xlat
mov
mov
adc
inc
add
jbe
push
mov
pop
imul
lods
pop
out
jns
xor
mov
lea
orb
cld
movsl
fists
and
stos
and
mov
inc
add
inc
ret
cwtl
cs
cmp
mov
inc
mov
or
movsl
pop
add
pop
sbb
pop
inc
push
loope
add
inc
or
push
pop
pop
jne
cs
dec
orb
hlt
sbb
and
and
les
bound
adc
mov
or
lret
cmp
add
mov
sub
or
sti
cmp
pop
addl
jmp
rorb
lret
loope
flds
cltd
pop
add
aad
rcr
jbe
cli
push
jle
repz
dec
lods
pop
in
push
adc
dec
sub
enter
push
cmp
add
mov
or
sbb
adc
movsl
mov
jmp
push
inc
pop
or
outsb
shl
call
mov
xor
push
adc
mov
lds
sub
push
or
in
dec
fwait
adc
add
movsb
sub
jb
add
hlt
mov
adc
mov
pop
sub
loope
mov
mov
sbb
sbb
test
jl
sti
fdivl
enter
or
test
rol
adc
or
jne
mov
and
test
add
and
jl
and
enter
lcall
or
dec
xchg
iret
inc
cmp
pop
lock
add
gs
add
mov
adc
icebp
jmp
or
adc
aad
adc
fwait
mov
mov
mov
mov
pop
push
popf
loop
dec
cmp
xchg
xchg
inc
dec
add
xchg
sub
les
loopne
dec
les
add
movsb
dec
fldenv
les
adc
mov
shrl
lret
push
stos
push
das
mov
push
mov
and
or
cmp
inc
cmp
cmp
ud2
sahf
mov
jge
faddl
mov
mov
das
pop
loopne
or
leave
daa
frstor
rorb
sbb
dec
mov
negl
insb
mov
cmp
and
mov
xchg
rol
jo
dec
push
adc
adc
or
rorl
in
add
add
xor
fisubl
out
xor
xchg
sub
daa
cmp
add
or
imul
out
aad
aas
clc
in
dec
ljmp
cld
pop
mov
ja
cmp
popl
movsb
or
adc
mov
or
add
lds
xchg
pop
xchg
add
mov
addr16
push
out
ss
add
add
dec
adc
loope
jmp
cs
movsb
mov
adc
adc
adc
push
xorl
jno
xorl
shl
andb
add
cmp
and
mov
xor
mov
jge
mov
xor
pushf
push
push
or
add
js
pop
and
and
dec
stc
rcrl
popa
sub
cltd
sub
test
and
orb
jae
dec
out
mov
pop
mov
sti
sbb
call
jb
adc
jne
xorb
rcrb
ja
es
xchg
daa
mov
adc
enter
jl
sbb
cli
adc
or
rcrb
daa
mov
or
sbb
push
inc
jl
mov
inc
jg
mov
adc
rol
adc
cli
mov
lcall
xorb
clc
mov
dec
arpl
jle
and
jp
sbb
test
xchg
movsl
int
xlat
cmp
lods
mov
jg
lock
daa
pop
push
lcall
nop
sbb
jo
inc
push
pop
dec
pop
cwtl
and
push
and
or
mov
mov
pop
jmp
lahf
push
or
clc
hlt
movsb
xchg
lahf
pop
or
sub
pop
stos
sub
shlb
pop
sub
push
ret
adc
into
push
sub
xor
jmp
mov
or
sub
inc
mov
push
enter
fwait
sub
rcrb
sbb
mov
or
lahf
fcmovnbe
push
outsl
cmp
in
xchg
mov
mov
out
mov
mov
jl
pop
and
fadds
iret
shlb
aam
js
adc
je
sub
lcall
and
adc
cmpl
movl
and
and
aam
jne
sbb
test
xor
out
mov
push
fstl
adc
push
movb
popa
pop
xchg
enter
cmp
loope
or
jmp
mov
hlt
movsl
and
test
lds
fsubs
or
mov
or
add
cld
cmp
cmc
add
pop
ja
jl
mov
push
das
jo
pop
or
jae
pusha
adc
sub
lea
cmp
cltd
jbe
jns
add
cwtl
adc
in
adc
es
inc
out
xor
lret
test
loopne
mov
ret
mov
mov
cmp
or
aam
cmpb
jnp
mov
out
test
cmpsb
sbb
and
nop
jmp
stos
xchg
pop
nop
popa
repnz
dec
lret
aas
pop
adc
pop
stos
cmp
xchg
jo
mov
jne
je
aad
jno
call
pop
xor
cmp
enter
pop
cmp
test
mov
xor
sub
pushf
inc
adc
lods
inc
jmp
jo
adc
mov
and
push
call
fldl
mov
dec
adc
movsb
cli
sahf
clc
push
push
shl
adc
mov
adc
test
add
hlt
dec
mov
loope
hlt
sbb
insl
adc
mov
outsb
mov
and
mov
pusha
push
call
inc
jns
daa
inc
out
addr16
call
xor
push
mov
dec
ljmp
sti
fisttpll
out
push
lea
hlt
add
mov
adc
repnz
inc
std
xor
pop
sub
add
pusha
rcrb
or
outsl
mov
pop
mov
dec
mov
lret
sbb
and
out
daa
je
neg
pop
gs
movsb
out
jg
aam
xchg
sti
imul
hlt
mov
hlt
popf
arpl
inc
sahf
arpl
ret
xchg
jmp
clc
call
push
jne
fwait
push
mov
or
pop
daa
clc
pop
aad
loopne
icebp
loope
mov
loope
imul
cmpsl
ret
dec
pop
jae
cltd
push
or
mov
cmp
add
push
mov
stc
sbb
stc
cmc
dec
push
jnp
adc
jge
jbe
jge
adc
inc
inc
sbb
inc
ss
mov
pushf
lret
rcrb
test
outsl
repnz
das
jg
out
mov
movsw
out
es
mov
sbb
jmp
and
in
push
pushf
sub
addr16
adc
mov
into
pop
xchg
or
adc
xchg
sbb
pusha
xor
cli
jge
orb
je
pop
push
mov
loope
inc
xor
cmc
jo
decl
ljmp
rorb
dec
test
and
add
subl
jp
ljmp
xchg
cltd
popa
push
add
adc
and
xchg
pop
out
xor
xor
mov
aad
ficoms
jne
push
inc
mov
adc
and
sub
fwait
push
and
pop
sbb
stos
sub
inc
jmp
push
jno
hlt
and
add
hlt
inc
xchg
in
sbb
mov
inc
xor
movsl
pop
inc
dec
and
imul
cld
jge
xchg
push
je
roll
pop
call
rcr
sbb
or
push
cmc
in
adc
jg
sub
movsl
fiadds
ret
dec
dec
enter
xchg
push
sub
shrb
jecxz
div
gs
push
sbbb
scas
aas
add
call
movsl
lret
mov
arpl
loop
pop
ret
cld
test
mov
dec
mov
jae
inc
in
testl
and
outsl
mov
adc
or
imul
jmp
mov
and
cli
arpl
lea
sub
lea
push
cld
outsl
scas
dec
xchg
mov
push
and
pop
lea
cmc
or
sub
lods
pop
adc
dec
dec
push
and
and
push
pusha
ljmp
std
das
mov
pop
movsb
and
mov
and
jo
xchg
mov
sbb
xchg
xchg
in
fiaddl
and
or
xchg
adc
jp
sahf
mov
gs
xor
mov
xchg
push
lea
cmc
mov
adcl
adc
das
push
decb
in
and
or
add
adc
sbb
xor
inc
inc
xchg
daa
shlb
test
out
jns
jmp
sub
cmp
push
ds
xor
and
inc
or
push
cli
sub
cmp
cltd
sbb
jns
mov
dec
rolb
adc
xchg
adc
incl
push
lret
jae
popf
mov
or
lds
je
orl
pop
dec
jmp
or
add
add
push
mov
test
inc
sub
inc
adc
mov
push
lret
lret
mov
test
inc
lret
dec
in
jle
lods
daa
aad
mov
test
cli
loopne
sbb
push
inc
mov
pop
dec
cmpsb
pop
adc
and
and
xchg
pop
fsubs
rclb
test
jnp
movsb
cmp
add
fisubs
and
push
je
mov
adc
cmp
idivl
adc
mov
shrb
push
jo
aad
dec
sub
ud2
jmp
movl
adc
cmpsb
sub
dec
popf
lcall
rcll
sub
mov
dec
sub
mov
xchg
aam
cmp
movsl
cld
adc
and
pop
sub
pop
xor
xchg
mov
sub
enter
cmp
enter
call
or
int3
adc
sbb
or
xchg
rorl
mov
icebp
sbb
aad
push
loop
jns
and
xorb
repz
pushf
mov
adc
popa
sar
push
gs
mov
and
stos
lea
jmp
cwtl
mov
cmp
mov
shl
sub
roll
stos
cmpsl
or
cmp
fcmovnu
sbb
jmp
push
clc
dec
call
or
negl
push
clc
xchg
mov
dec
and
jmp
pop
sbb
shlb
lret
xchg
dec
sub
loopne
leave
inc
lcall
js
lods
pop
pop
cmp
in
jle
or
in
xchg
es
lahf
fs
or
jo
notl
add
icebp
add
lods
mov
mov
movsl
popf
mov
sub
into
hlt
adc
mov
lcall
std
stos
lret
gs
imul
and
jne
jbe
jp
sti
mov
pop
mov
test
adc
jae
lods
inc
cmpsl
int3
cld
xchg
je
hlt
xchg
sub
enter
mov
dec
jmp
aam
sub
sub
stos
xchg
mov
je
jp
mov
sub
xor
cmp
cmp
jge
data16
and
inc
add
insl
inc
mov
fnclex
and
push
adc
mov
pop
or
daa
movsb
cmp
jmp
fcmovb
fbld
clc
add
mov
scas
push
xchg
jo
dec
pop
and
fcmovb
fwait
mov
mov
sub
je
fninit
xchg
inc
mov
int3
iret
add
xor
or
das
pop
lcall
sub
stc
outsb
call
dec
jb
repnz
sub
ljmp
aaa
cmp
rcrb
sub
and
push
inc
add
and
or
daa
adc
rorl
je
daa
jae
ds
xor
inc
or
cs
adc
and
cmp
adc
xlat
lock
movsb
dec
jo
test
sbb
loope
fs
lahf
fidivrs
add
dec
jg
cmp
ljmp
jno
adc
adc
jge
jmp
orl
add
mov
add
or
cld
aas
cmpsl
pop
jns
xchg
add
fmull
and
add
dec
dec
cli
es
sub
enter
add
mov
push
bswap
shrb
aas
nop
add
adc
inc
add
inc
pop
test
add
mov
add
hlt
ja
cwtl
or
les
inc
daa
jmp
adc
adc
fidivl
jne
and
add
add
sbb
add
wrmsr
and
cmpsb
or
imul
pop
adc
mov
inc
add
nop
mov
and
xchg
add
sarb
xor
sbb
aam
fsts
into
stos
xchg
stos
dec
jecxz
cltd
jbe
add
mov
repnz
push
cmpb
mov
aaa
inc
mov
push
pop
scas
pop
mov
shl
mov
mov
mov
sbb
jmp
shlb
popf
std
xchg
lds
xor
xor
aam
dec
stc
cmp
fbstp
inc
nop
call
dec
nop
xchg
pop
mov
adc
jne
imul
xchg
jns
mov
mov
jo
jl
mov
and
inc
push
add
filds
inc
jmp
and
sbb
jl
push
xlat
lds
jge
sub
cmp
jp
xchg
cmp
dec
adc
inc
mov
in
lret
adc
in
inc
pop
ds
daa
xlat
lea
jge
das
jb
adc
rclb
sub
aas
fs
mov
cmpsl
mov
jmp
int
inc
cltd
psllw
inc
jnp
lock
cs
jae
xor
dec
insb
in
cs
out
adc
mov
repnz
add
inc
pop
mov
cmc
mov
mov
mov
sbb
push
mov
dec
push
adc
cmc
mov
dec
cmp
insb
fimull
mov
dec
xor
and
xchg
in
inc
jb
test
inc
or
mov
sub
sub
dec
movsb
fnstcw
gs
repnz
test
cmp
rcrb
dec
dec
jne
mov
or
cld
ret
pop
mov
shll
or
cli
dec
or
jmp
les
or
and
push
push
push
xor
inc
in
and
adc
add
hlt
testl
cmp
and
imulb
dec
sbb
orb
and
cmpsl
hlt
test
and
and
fiaddl
cld
imul
push
add
sub
mov
jge
pop
inc
call
ret
mov
data16
dec
add
gs
loop
movsb
rclb
inc
cmpsb
ja
es
mov
sbb
aas
cld
jno
gs
push
leave
movsb
sub
mov
inc
test
leave
jl
fdiv
outsl
adc
test
and
adc
adc
dec
push
mov
divl
lods
mov
roll
inc
mov
xchg
test
scas
in
aad
sub
mov
aad
stc
scas
adc
push
jg
add
xorl
inc
sub
cli
dec
das
add
shrl
iret
xor
popf
cmpl
xor
adc
or
dec
push
inc
sub
mov
push
stos
dec
mov
jns
shrl
dec
and
imul
add
xchg
subb
and
hlt
push
cli
xchg
xlat
cltd
cli
xor
cmp
js
or
cmp
xchg
xchg
mov
mov
or
lock
ss
aaa
push
and
nop
jle
setp
sbb
push
in
or
sub
jo
xchg
xchg
fildll
sbb
xor
xchg
ds
enter
inc
enter
sbb
fcomps
hlt
mov
xchg
sti
xor
movb
jle
arpl
outsl
xor
mov
ficomps
insb
enter
mov
mov
dec
test
mov
dec
jl
icebp
inc
adc
fidivl
ffreep
jo
aam
cmp
iret
inc
call
mov
cmc
sbb
xor
push
daa
sahf
dec
dec
jmp
jl
imul
push
gs
jne
in
sbb
push
mov
lret
aam
jb
lcall
and
jle
aam
fcomps
xchg
inc
arpl
add
ss
push
sub
dec
loop
les
mov
xor
mov
je
stos
or
mov
jno
mov
jp
fistl
cs
inc
fimull
out
loop
or
stc
add
cmp
push
adc
in
jmp
xor
loop
nop
cltd
imul
decb
cltd
and
jns
incl
xchg
dec
pop
dec
and
dec
pop
enter
shll
pop
and
cmp
imul
mov
sbb
add
jno
sub
lret
sbb
fistl
jmp
addr16
in
and
cmpsb
hlt
mov
xchg
ljmp
ds
pop
fwait
out
pop
popa
mov
cltd
stos
or
shll
loop
shll
jp
or
pusha
sub
and
and
stc
lock
daa
sub
leave
aam
push
stos
mov
mov
push
bound
rol
xor
test
push
cmp
and
pop
push
test
dec
out
dec
mov
outsl
dec
or
stc
aam
push
inc
and
mov
iret
push
lods
je
nop
call
dec
int3
sti
gs
lret
xchg
pop
in
mov
int
sub
aad
mov
mov
and
jne
mov
sbb
or
int
imul
and
mov
fsubr
adc
stos
or
add
inc
les
es
jne
bound
jge
cmpsb
sub
jns
data16
pop
sahf
mov
fldenv
inc
movsb
inc
adc
fsubr
jo
daa
inc
test
inc
cmp
shrb
add
push
sub
aad
dec
pop
mov
adc
stc
insb
adc
sub
or
push
inc
rcrl
in
scas
sub
fmuls
xlat
jno
je
outsb
and
loopne
pushf
xchg
aas
mov
inc
jne
into
shrb
jg
arpl
or
adc
adc
rclb
dec
add
aam
gs
push
inc
stos
fists
push
pop
inc
cmp
cmp
cmpsl
pop
in
lahf
jmp
jmp
pop
mov
in
adc
adc
push
in
dec
ret
test
push
stos
inc
int3
adc
adc
mov
fnstsw
pop
clc
adc
outsl
mov
test
das
cmp
cmpsb
xchg
std
das
adc
je
and
pop
call
movsb
leave
cmc
data16
inc
adc
jo
mov
pusha
rolb
mov
je
or
fldcw
dec
loope
inc
or
cwtl
test
jecxz
jo
rol
push
out
loope
in
lock
imul
and
nop
sub
test
push
and
dec
sbb
dec
push
add
jne
mov
outsl
incb
sbb
inc
mov
sbb
and
mov
fwait
das
jl
sub
enter
in
inc
pxor
dec
mov
sbbb
adc
adc
jbe
loope
mov
mov
or
jmp
cli
or
sbb
dec
or
adc
jecxz
ret
popf
lock
dec
and
enter
inc
jg
add
mov
pusha
das
push
push
mov
lcall
sub
xchg
inc
test
or
and
inc
xor
sub
sbb
sbb
push
pop
mov
mov
sbb
mov
or
or
cmp
adc
or
cmc
pop
imul
je
gs
shll
ljmp
les
call
xchg
and
test
dec
adc
adc
shrl
mov
cmp
inc
and
test
loopne
adc
fiaddl
inc
js
out
or
nop
ja
add
pop
xchg
inc
mov
mov
loope
jg
rcr
outsl
dec
and
dec
inc
push
push
sub
sti
or
pop
insb
mov
frstor
std
ds
and
call
in
push
cmp
add
stos
inc
testl
pop
push
jo
jle
sar
cltd
lea
push
push
or
inc
cmp
dec
adc
xor
add
hlt
sbbl
adcl
dec
mov
jmp
mov
fiaddl
stos
xor
add
adc
xor
loop
cld
je
and
cmp
mov
xchg
rcpps
dec
fucom
outsb
xor
pop
push
andl
mov
cmc
and
cmc
and
adc
and
add
sar
nop
cwtl
xchg
sbb
xor
loop
je
inc
adc
inc
pop
push
pusha
popf
push
dec
adc
lret
pusha
in
shl
dec
rdpmc
testb
dec
sbb
fdivrl
mov
fs
push
call
lea
call
add
push
mov
and
ljmp
leave
sub
add
bound
out
xchg
lret
shll
add
les
sti
ds
shr
pop
push
and
call
sbb
scas
aaa
mov
sub
pop
xlat
adc
inc
inc
dec
adc
pop
repz
movsb
or
jmp
push
jno
or
and
xchg
insb
dec
mov
stos
sbb
add
and
add
xor
dec
or
xor
push
add
push
rorb
xor
sbb
add
jb
stos
add
sbb
and
sbb
push
mov
sub
outsb
pop
or
and
jnp
mov
leave
fbld
lods
movsl
in
ljmp
cld
xchg
dec
imull
jmp
cmc
test
xchg
jb
add
test
shll
xor
xchg
sbb
cs
adc
cmp
and
or
mov
sbb
scas
je
dec
adc
or
enter
adc
fstpl
sub
inc
xchg
xor
adc
inc
mov
adc
mov
fsubr
or
add
loope
jg
sahf
jg
or
inc
ds
mov
in
and
cmp
or
jmp
dec
inc
mov
popa
enter
int3
lods
adcl
sar
faddl
mov
andb
mov
mov
mul
jne
adc
dec
dec
sub
or
push
mov
pop
xor
inc
mov
adc
repnz
or
int3
mov
loope
push
jp
ret
sub
lock
or
or
push
mov
dec
xor
pop
adc
mov
cmp
lds
mov
insb
ja
push
dec
das
inc
aas
idivl
test
mov
mov
jmp
testl
push
pop
das
dec
jb
push
mov
inc
mov
mov
and
stos
xchg
dec
dec
pop
or
dec
mov
inc
xchg
sub
enter
int3
add
call
mov
and
pop
arpl
push
call
out
xchg
push
cwtl
negl
dec
xorb
dec
push
pop
lahf
fdivrl
xchg
adc
xchg
dec
adc
out
ja
fs
xchg
inc
hlt
and
out
and
and
sub
xchg
or
lcall
jmp
xchg
xor
fildl
lods
les
push
mov
and
sar
fs
xor
jle
adc
mov
jmp
pop
call
and
repz
sbb
int
rcrb
int3
dec
jecxz
lds
pop
jmp
dec
aam
dec
out
into
jo
and
mull
push
add
imul
lds
das
fisttpl
dec
daa
add
sti
pushf
add
inc
cmc
jmp
dec
pushl
add
push
sbb
test
cltd
push
or
push
lock
add
movsl
in
inc
clc
mov
movswl
xor
xlat
testl
test
add
jmp
add
gs
in
pusha
in
mov
and
loopne
or
vandnps
imul
imul
das
icebp
cmp
or
mov
mov
inc
ljmp
test
mov
clc
push
cmp
mov
push
mov
lds
nop
cmp
loop
xchg
testl
and
je
sbb
icebp
jp
jnp
sbbb
or
xchg
out
or
mov
lcall
imul
or
addr16
enter
addr16
pop
cmpsb
mov
jne
dec
cltd
mov
or
ficoml
leave
xor
adc
out
ds
aad
mov
or
ds
push
inc
mov
fmull
imul
mov
call
out
pop
in
rorb
dec
mov
adc
ss
add
or
aam
dec
xchg
and
dec
push
mov
lret
scas
fs
cmp
adc
cmp
fldt
pop
hlt
pop
fwait
jae
adc
test
pop
lods
xchg
jl
sbb
jp
sub
inc
cmpsb
pop
mov
adc
fldz
in
or
icebp
fstp
inc
inc
and
fldpi
stos
and
rol
add
push
mov
pop
inc
js
cmp
dec
sub
popf
mov
out
fldenv
push
mov
jl
or
sbb
movsb
loop
mov
cmpsb
pop
xchg
in
enter
aas
push
add
jne
test
or
add
add
pop
mov
jl
push
mov
or
loope
mov
add
sub
cmpl
xchg
sub
adc
popa
rorb
mov
icebp
ja
aam
repz
sub
xor
test
jl
adc
adc
pop
imul
ljmp
mov
push
aam
fs
adc
push
or
adc
push
mov
mov
leave
cmc
outsb
inc
les
fdivl
mov
andl
push
pushf
jmp
lods
sub
adc
add
hlt
pop
sar
and
or
call
jmp
and
sub
xor
xlat
sbb
cmp
sbb
adc
cmp
test
ss
cmc
inc
jb
push
inc
adc
add
push
push
xchg
pop
packssdw
cmp
sub
add
cmpsl
sub
dec
sbb
leave
cmp
into
add
sub
mov
and
mov
nop
aam
pop
sub
adc
and
adc
or
lea
jle
xchg
mov
addl
dec
push
cld
push
mov
icebp
mov
push
adc
aas
xchg
or
mov
xor
in
push
addl
inc
or
push
or
pop
subl
or
push
mov
stos
fdivrl
xchg
inc
and
mov
negb
jns
adc
pop
cmp
pcmpeqw
das
test
jle
leave
add
xchg
sub
sahf
push
loope
das
cmp
aaa
push
mov
fcmovb
fwait
push
jp
push
adc
pusha
flds
sbb
add
loopne
mov
adc
aas
ficomps
hlt
mov
enter
dec
cli
ja
pushf
mov
push
sub
imul
mov
nop
xchg
sub
xchg
scas
pop
int
sbb
jg
or
push
dec
cmp
jne
inc
adcl
shlb
xor
lods
popa
push
fildll
lods
loope
sub
enter
movsl
decb
mov
push
movsb
xor
mov
mov
push
je
aas
ret
and
dec
mov
or
sub
repnz
xchg
fdivr
fnsave
and
jno
push
or
adc
mov
test
popf
rcll
movsl
ljmp
pop
cmp
adc
jno
mov
dec
push
adc
test
adc
aaa
ret
xor
and
pop
add
in
and
jb
xor
add
sub
jmp
dec
repz
mov
or
nop
adc
icebp
cmp
cmpsl
mov
in
jb
push
inc
push
xchg
push
cltd
mov
in
dec
xor
mov
push
mov
push
mov
add
int3
mov
rsqrtps
and
or
jp
nop
sub
in
cmp
clc
lds
sbb
lds
jl
ja
sbb
test
mov
lret
out
fxch
add
jle
pop
xor
sti
cwtl
lods
movsb
lds
jmp
cmp
insb
mov
jle
xor
and
xchg
arpl
xor
sub
add
and
cmp
leave
call
mov
lods
movsl
mov
mov
sbb
xchg
adc
sub
pushf
dec
jge
lds
push
js
pop
add
cmp
or
and
cld
inc
push
cmp
daa
scas
je
mov
and
pop
add
nop
inc
add
sahf
rcrb
add
xor
xor
push
xchg
lea
test
mov
jmp
inc
addr16
add
cmp
jnp
loopne
sar
add
sub
enter
add
lea
inc
push
repz
es
fstps
mov
aad
sub
ret
imul
add
mov
pop
dec
inc
sbb
lret
or
pop
in
adc
and
leave
cld
cmp
inc
mov
pushf
aas
ret
xorb
jle
push
enter
adcb
fs
loop
out
push
xor
inc
scas
lods
push
pop
in
push
pop
mov
and
xor
add
xchg
fnstenv
and
mov
dec
sub
add
push
sub
rcll
imul
xor
sub
jno
scas
stc
add
cmp
mov
dec
xor
dec
nop
or
inc
push
and
push
mov
je
cmpsb
xor
or
sub
jl
inc
or
adc
lods
sub
fsubl
js
push
jle
sahf
add
push
popf
lock
adc
mov
mov
pop
dec
cmp
shr
inc
cmp
loop
add
add
xchg
dec
cmp
sbb
push
jns
pop
pop
pop
leave
sub
into
orl
hlt
mov
or
loope
clc
das
out
and
loop
xchg
pushl
push
dec
xchg
or
push
scas
cmp
call
inc
adc
lods
in
out
cmpsb
cwtl
loope
stos
cmpsb
fbld
jp
dec
mov
jnp
call
frstor
or
mov
xchg
push
daa
cmp
xchg
call
pop
shrl
adc
lcall
arpl
mov
es
pop
aam
scas
lods
sti
mov
daa
adc
push
shr
mov
or
adc
cli
add
adc
lods
insb
and
mov
mov
xor
jg
pushl
mov
jle
popa
mov
adc
fsubrs
sbb
fcompl
andb
add
jp
and
rolb
or
add
push
mov
mov
pop
and
neg
imul
or
and
imul
or
mov
int3
in
and
idiv
popf
outsl
add
inc
mov
aas
mov
jp
cmp
dec
mov
mov
outsl
xor
lds
lock
mov
lret
jnp
jg
bound
jo
mov
sub
mov
push
and
leave
shl
adc
ret
test
adc
xchg
jbe
jle
call
popl
dec
jmp
sub
jp
pop
add
adc
jno
mov
add
mov
or
fs
sbb
or
lds
aad
inc
or
int
push
sbb
inc
cltd
pop
ljmp
and
cmc
jo
jp
icebp
das
xchg
rcll
dec
adc
jnp
jmp
lods
adc
rcrl
lock
sub
sub
xor
aam
loopne
lea
push
call
imul
push
xchg
hlt
cmp
jns
int3
std
pusha
call
fdivp
push
push
call
pushf
es
jae
adc
jae
je
sbb
das
jns
cmpsb
mov
add
loop
sub
in
pusha
stos
jle
or
cwtl
xchg
push
call
adc
subb
fcoms
andb
subb
or
fsubr
mov
push
test
rdtsc
ja
push
mov
or
and
les
cmovl
loope
mov
mov
call
cmp
adc
out
xchg
mov
adc
hlt
mov
je
rorb
imul
mov
insl
loop
fs
push
push
sbb
dec
aas
cmp
add
inc
es
dec
mov
cmpsl
lcall
pop
sbb
and
out
and
ret
dec
mov
xor
loopne
test
icebp
or
out
leave
sbb
pop
add
dec
jae
cmp
or
or
mov
lcall
insl
and
sub
push
outsl
mov
adc
int3
cmp
xchg
add
and
and
inc
sarb
shlb
dec
xor
bsr
adc
jge
inc
or
xchg
push
cmpsb
push
inc
add
movb
or
stos
adc
jb
gs
loop
lds
add
aad
iret
pop
xchg
call
clc
subb
push
push
adc
xchg
xchg
mov
jne
repz
adc
pusha
inc
imul
andl
test
adcb
das
adc
imul
lret
dec
inc
cmc
jnp
stos
mov
push
mov
rcrl
pop
in
sbb
flds
iret
pop
jbe
stos
mov
xchg
sub
scas
fdivs
push
shlb
or
bnd
sbb
push
in
cmp
lods
xchg
insl
jmp
adc
pop
je
leave
adc
xor
mov
std
and
loop
out
psubsw
or
dec
sbb
push
lods
imul
lcall
xchg
xor
ljmp
push
daa
or
enter
ljmp
js
in
test
or
and
enter
icebp
jns
in
and
nop
xor
out
mov
inc
xchg
or
daa
popf
dec
jns
call
shlb
pop
adc
mov
push
out
divb
cmp
push
or
mov
dec
xor
enter
and
add
or
lea
and
fwait
xchg
sbb
jl
adc
mov
inc
add
inc
test
jne
and
add
rcr
inc
and
jmp
mov
mov
mov
sbb
and
nop
pop
add
dec
iret
ljmp
adc
jge
jmp
mov
movsl
push
add
stc
or
dec
daa
jg
pushf
shrb
and
mov
push
nop
sti
jg
movsb
or
push
cmp
cmp
and
mov
pop
gs
adc
xchg
push
push
mov
pop
push
and
inc
mov
sub
push
cmpsb
in
push
roll
enter
aaa
imul
or
repnz
and
mov
xor
roll
insl
mov
xor
sub
sub
or
ljmp
pop
push
imull
mov
dec
lods
dec
cld
popa
mov
scas
popf
add
jecxz
aam
comiss
les
popa
add
lods
add
stos
mov
fwait
popf
incb
push
cwtl
insb
xor
adc
call
dec
cmp
sub
loopne
xchg
push
inc
das
xor
out
mov
xor
std
push
testl
xor
shrb
bound
hlt
out
repz
out
dec
cmpsl
movsb
sub
push
or
xchg
in
mov
cmp
inc
inc
or
rcll
andl
mov
pop
mov
ret
cmp
stc
repz
mov
or
mov
jae
aaa
enter
push
lcall
pop
std
pop
xchg
sub
mov
in
scas
pop
dec
in
jae
mov
push
cmp
xchg
sbb
inc
pusha
jbe
xchg
or
stc
push
mov
push
xlat
repnz
push
call
mov
imul
aaa
or
call
push
adc
js
iret
jecxz
int3
pop
in
movsl
dec
mov
fstps
dec
jmp
jmp
scas
movsb
cmp
sbb
pop
xchg
lahf
aas
loope
jl
inc
popf
pop
cs
jb
stc
popf
movsl
fucomip
xchg
adc
call
or
adc
jbe
jge
mov
cmp
call
ds
cmpsb
mov
inc
ljmp
xchg
loopne
stos
jne
test
daa
cli
pop
jno
daa
popa
pop
aam
adc
loopne
xor
jne
rclb
idiv
dec
cmpl
das
std
cmp
std
xchg
js
add
pusha
sbb
cmovb
int
test
xchg
repz
loopne
inc
and
mov
int3
sbb
sub
jne
mov
sub
loope
mull
adc
mov
adc
inc
outsl
push
scas
dec
in
mov
pop
lods
dec
jmp
mov
mov
cld
and
pop
adc
and
dec
daa
fdivr
mov
or
push
cmp
fldenv
xchg
dec
inc
andb
push
lret
je
sub
je
mov
add
enter
shl
cmp
pop
fs
cli
dec
push
push
xor
or
mov
xlat
push
mov
inc
cmc
mov
jo
mov
or
mov
adc
adc
imul
and
insb
and
insl
data16
dec
dec
outsl
cmp
shll
pop
loopne
faddl
add
cld
jnp
inc
xchg
xlat
mov
mov
add
add
push
flds
push
stos
jl
or
cmp
jno
jmp
inc
mov
aam
push
rclb
sbb
xlat
lods
test
add
stos
test
cmpsl
aas
movsb
jne
or
push
add
popaw
dec
in
jg
push
mov
fadds
movsb
adc
or
lcall
inc
adc
loope
int3
xchg
or
and
inc
ret
les
and
inc
leave
lret
lret
dec
aas
test
cmp
faddl
adc
mov
das
mov
inc
mov
mov
mov
push
sbbb
add
adc
and
lock
outsl
mov
xor
imul
push
dec
inc
pop
inc
cmp
xor
or
add
mov
cli
sub
sub
ds
push
add
sub
xor
inc
and
inc
or
pusha
jnp
incb
pop
push
bound
bnd
ret
add
dec
shlb
sub
lea
push
inc
xchg
fs
xor
adc
rcll
nop
xor
fcom
xor
and
and
and
dec
and
out
push
xchg
adc
sar
jb
mov
or
test
shr
sbb
push
movsb
sbb
scas
shrb
mov
sbb
push
cwtl
daa
xor
xor
stc
cli
out
hlt
loop
fs
ljmp
sub
push
rolb
cmp
or
mov
stc
mov
lret
ja
cld
aaa
iret
sbb
je
test
mov
xchg
sub
cmp
mov
aaa
push
inc
dec
and
pusha
icebp
sarb
stos
mov
test
dec
push
add
push
repnz
xchg
cmp
adc
jp
test
ret
lods
mov
push
adc
mov
xchg
scas
out
outsl
bound
or
add
test
push
lock
jecxz
pop
mov
neg
ja
push
gs
push
aas
or
jo
jle
and
xchg
pop
xchg
jnp
jecxz
popa
and
push
lods
or
sbb
adc
sbb
rorl
push
int3
xor
push
adc
movsb
sbb
fs
mov
hlt
iret
cli
popa
jnp
inc
rcll
cltd
xchg
out
rol
inc
fadds
xchg
mov
mov
cmp
adc
adc
fnop
les
add
insb
push
scas
add
add
mov
cmp
popl
inc
mov
jmp
shlb
jb
sub
xor
xchg
aad
sub
es
dec
ret
mov
sub
sub
ret
bnd
inc
popa
fists
pop
ljmp
xchg
xor
adc
clc
pop
jmp
ret
aad
loopne
pop
nop
or
cmc
pop
dec
rcrb
cmp
movsb
aas
cltd
call
mov
xorl
jae
cmp
jns
test
movsb
sbb
ljmp
mov
fcmovnbe
ret
jecxz
dec
jmp
adc
push
jbe
repnz
enter
ja
cmp
xor
cli
ret
cmc
cmp
das
mov
inc
dec
or
xor
and
mov
icebp
and
sbb
jmp
sbbb
loop
sub
cmp
pushf
sub
inc
lods
mov
lods
or
pop
sbb
inc
add
imul
add
mov
iret
or
das
pop
inc
dec
in
adcb
and
and
or
pop
mov
push
push
ficompl
push
push
mov
push
push
xlat
leave
push
and
pop
jmp
or
jg
decb
testb
inc
movsb
lret
xor
mov
jmp
pop
jnp
nop
lcall
fcoms
add
mov
jp
rcr
add
sbb
insl
xchg
cld
jp
enter
dec
loopne
push
mov
adc
mov
or
inc
sbb
lods
popa
jmp
jle
into
cmp
loopne
cmp
sti
lea
add
std
xchg
sub
shl
nop
pusha
and
or
fimull
jne
ret
out
cmp
inc
sbb
jg
in
jmp
xor
sbb
xchg
push
sbb
scas
out
loope
aam
loop
adc
ljmp
jne
loopne
or
inc
or
and
es
rolb
je
daa
mov
and
mov
fdivl
add
fs
adc
les
pop
inc
ljmp
mov
or
push
inc
jbe
dec
ljmp
jo
cmpsb
test
ficompl
test
sub
dec
mov
cmp
loope
movsl
std
ja
clc
gs
or
xchg
cmp
lods
or
add
jmp
push
dec
fldenv
push
cmp
lods
xor
pushf
cli
add
loopne
dec
xchg
inc
inc
in
mov
mov
and
nop
out
inc
dec
or
out
xor
inc
fiaddl
xor
inc
call
inc
cmp
and
inc
sarb
cltd
push
loope
imul
lock
pop
mov
call
lock
jle
and
shrl
hlt
ja
pop
adc
in
or
and
ret
shll
add
in
nop
mov
pop
or
in
push
shr
es
aaa
bound
ja
jns
sub
aas
stc
rcll
cltd
scas
or
ljmp
sbb
stc
and
pop
sbb
lret
pop
rclb
add
aad
jge
jmp
cli
fisttps
addb
mov
ret
fdivr
xchg
dec
int3
dec
sub
test
jne
enter
jbe
ljmp
dec
pop
les
mov
lea
fsubs
mov
or
rorb
cmp
push
dec
negl
daa
mov
inc
les
adc
dec
jl
jecxz
in
jl
add
push
mov
jns
sbb
stc
cmp
sbb
pop
xor
repnz
jle
add
scas
mov
adc
lea
data16
call
adc
rcrl
add
jg
push
int
inc
or
ljmp
mov
movsb
pop
dec
dec
ficoms
jmp
mov
cmc
repnz
pop
add
jg
jp
dec
mov
ljmp
pop
aas
pop
dec
dec
arpl
mov
xor
loop
mov
aas
jl
pusha
mov
add
loop
mov
fnsave
dec
shl
inc
and
or
das
popf
in
xchg
ja
lock
push
push
jmp
mov
mov
sub
mov
xchg
das
in
pop
pop
aam
mov
nop
sbb
clc
mov
mov
push
xchg
into
scas
outsb
adc
in
in
mov
ljmp
or
addr16
cltd
mov
loop
sahf
enter
sbb
cmpsb
cld
pop
and
test
lock
hlt
es
xorb
jae
jns
xchg
add
and
push
pop
lret
inc
mov
stc
ja
pop
movl
fsts
test
and
xchg
hlt
out
cwtl
pusha
inc
bound
inc
pusha
pop
mov
mov
and
aad
jg
fmull
int
push
insb
sbb
pushf
and
mov
jmp
push
push
lds
in
mov
or
mov
insl
aas
and
push
pop
lret
xor
push
inc
sub
enter
jae
dec
push
xor
mov
hlt
pop
and
clc
push
nop
lahf
dec
adc
lcall
and
call
popf
pop
dec
mov
data16
imul
ljmp
mov
cmp
sbb
inc
jg
mov
push
in
js
jnp
testb
jge
xor
mov
call
icebp
mov
mov
pop
adc
lret
mov
cltd
xor
xor
jle
mov
cmp
and
cli
and
in
inc
gs
mov
sbb
rcll
out
pushf
ss
and
sbb
cwtl
mov
adc
add
mov
adc
clc
idiv
adc
fcoml
je
cmpsb
dec
inc
cmp
hlt
jo
jmp
mov
pop
jnp
and
int3
cmp
test
adc
pushw
xor
cmpsl
das
pop
int3
or
cmp
cmp
jle
fcomps
adc
ljmp
imull
or
xchg
loopne
test
aas
sub
mov
fisubl
push
test
pusha
out
call
push
cmp
jle
or
add
addr16
inc
cmpsb
mov
jne
add
push
in
cltd
pop
test
daa
jg
loope
sub
cmp
and
and
or
inc
add
int3
pop
or
sub
xchg
sbb
movsb
xor
cmp
loope
push
and
in
add
std
mov
in
stos
loop
mov
mov
out
lret
push
enter
in
repnz
pop
clc
push
mov
adc
movsb
gs
jge
mov
sub
rclb
adc
std
and
pop
and
and
and
pusha
out
pop
leave
cmpsb
loope
push
pop
std
mov
adc
xchg
movsb
dec
sar
xor
jne
pop
dec
push
mov
xchg
test
or
test
mov
gs
idiv
adc
pop
adc
outsl
rorb
cs
cmpb
mov
cli
adc
vpaddq
insl
dec
mov
dec
mov
fiaddl
xchg
jge
js
xor
les
popf
popa
das
hlt
ljmp
sub
rolb
and
mov
xorb
clc
shlb
cs
sti
fs
dec
dec
test
fisubs
out
stc
cmp
in
jns
inc
push
imul
mov
or
adc
call
push
add
ljmp
cmp
pop
jo,pt
push
call
xchg
divl
stos
mov
dec
mov
dec
aaa
mov
ljmp
enter
mov
int
imul
mov
jne
cmp
inc
repnz
mov
ficompl
mov
test
mov
or
bound
fildl
stos
into
push
adc
mov
aam
sbb
hlt
lret
push
or
dec
out
into
cltd
inc
xor
aam
rolb
or
jne
push
sbb
sub
mov
inc
shll
push
dec
cld
mov
adc
xlat
lods
dec
js
xor
or
sub
jno
jne
dec
cmpsb
in
test
mov
sub
adc
push
adc
pop
aad
mov
adc
pop
inc
arpl
and
inc
out
mov
adc
add
leave
lods
cmp
test
sub
in
or
lods
push
lock
clc
jb
in
push
je
daa
pop
jno
mov
sbb
sub
or
add
inc
xor
mov
out
setne
and
aaa
xor
xchg
in
adc
jae
add
add
mov
push
scas
loope
add
xchg
sub
inc
inc
fnsave
popa
add
sbb
je
cmp
icebp
push
push
scas
lret
push
cmpsb
aas
and
lods
add
add
insb
sub
adc
clc
fwait
xchg
and
pop
sar
jnp
in
cmpsl
adc
pushf
mov
jo
jge
shr
cmc
dec
fisttpll
leave
adc
adc
lcall
push
loopne
lea
and
mull
pop
pop
push
sub
add
push
call
daa
push
or
pop
xchg
mov
xchg
add
push
jbe
icebp
std
notl
dec
push
push
adc
mov
sbb
daa
jnp
mov
inc
cmp
inc
and
jmp
imul
lds
clc
jae
mov
sub
pop
adc
mulb
arpl
leave
pop
stc
lods
inc
data16
rclb
mov
and
xor
xchg
xor
mov
cmpsb
push
push
ret
mov
jmp
xchg
or
dec
dec
cmc
adc
test
jmp
or
xor
dec
or
xchg
and
cmp
cmp
xor
sub
sub
xchg
sbb
jmp
mov
notb
lods
push
add
movsl
daa
inc
dec
scas
scas
es
int3
add
push
flds
inc
xor
or
xchg
pusha
and
cmpsb
test
in
sbb
add
xlat
mov
cmp
lock
mov
add
in
inc
dec
pop
ret
cmp
or
adc
std
out
push
rcll
and
push
mov
inc
call
mov
or
add
cmp
scas
mov
mov
or
mov
jp
sarb
adc
cmp
pop
inc
jae
xchg
xor
cltd
adc
or
mov
inc
inc
cmc
imul
inc
push
ret
xchg
incb
xor
repnz
inc
repz
fcomip
movsb
nop
jle
hlt
adc
sbb
inc
inc
in
fmull
jmp
test
xor
incb
loop
popf
andb
mov
sbb
and
fs
xor
xchg
and
fs
or
xchg
and
nop
aam
fsubs
loopne
in
call
lock
hlt
enter
aaa
add
and
or
xchg
sub
jo
insb
xchg
and
enter
xor
or
xchg
and
enter
xor
pop
les
movsl
insl
outsl
mov
lds
sub
sub
leave
scas
sbb
jecxz
jnp
clc
pop
jg
dec
fdivr
xor
pop
xchg
and
adc
in
and
push
or
sahf
loope
jo
in
adc
aaa
mov
dec
inc
add
or
mov
push
xor
adc
or
pop
test
fs
cmpsl
ja
ds
cmp
jo
sub
clc
dec
int3
inc
adc
mov
ljmp
cltd
add
bound
mov
enter
lret
jbe
sub
mov
jb
xor
jmp
out
test
stos
mov
adc
pop
mov
mov
mov
stc
xor
jo
inc
add
xor
or
xorl
push
jmp
xor
cmpsl
insb
mov
flds
cmp
shl
lods
fidivrl
gs
mov
xchg
mov
adc
and
push
leave
fst
dec
lea
jbe
je
push
stos
aam
mov
imul
bound
xor
punpckldq
icebp
dec
cmp
lock
or
xchg
addl
add
shll
repz
lock
sub
jo
ficomps
adc
dec
push
lds
pusha
nop
lock
call
adc
and
adc
cld
int
pusha
repnz
enter
cmp
mov
mov
mov
mov
lcall
inc
mov
adcb
or
push
jp
rcrl
xadd
mov
jo
cmp
lds
push
or
in
mov
scas
mov
nop
xor
xor
xor
sbbb
arpl
pusha
pop
or
mov
jo
test
mov
pop
sarb
addl
data16
arpl
fstpl
movsl
adc
cli
pop
jg
or
shlb
inc
xor
fldcw
adc
pop
lcall
fisubs
addr16
pop
fmulp
jmp
jno
jns
pop
jge
push
out
sub
dec
add
inc
inc
sub
xor
pop
lea
jl
leave
aad
repnz
push
push
scas
xor
xchg
icebp
adc
push
push
inc
enter
rol
js
lods
xchg
lods
sbb
mov
cmp
mov
gs
lock
xor
in
repz
cmpsb
repz
lahf
jmp
or
ljmp
data16
push
mov
sub
jg
inc
dec
jne
loopne
push
add
add
mov
jl
test
aaa
dec
or
loopne
xor
loopne
rorb
xor
adc
jmp
lods
push
or
std
mul
mov
movsl
xlat
inc
lcall
aam
push
jg
in
mov
pop
gs
adc
and
lods
pop
adc
mov
mov
into
loop
loope
in
or
in
into
loop
fsts
in
jle
das
push
or
and
mov
int3
mov
popf
std
xcrypt-cbc
cmpsl
nop
lret
xlat
cwtl
cs
fs
outsb
and
cmp
test
mov
sub
les
add
adc
and
and
add
in
jae
mov
mov
mov
in
pusha
lcall
inc
icebp
std
test
fldl
ja
mov
mov
mov
mov
add
mov
jo
pop
cmp
imul
and
jns
mov
xor
and
mov
lods
push
negl
jbe
fiaddl
data16
pop
jmp
cmp
adc
fstl
jg
mov
sub
shlb
fucom
or
call
rcl
dec
imul
sub
nop
cltd
fsts
mov
enter
rorb
addb
sbb
and
jne
in
les
sbb
or
inc
insl
das
fcomp
pop
leave
sub
stos
dec
adc
testl
cmp
add
push
rcrb
sbb
mov
mov
push
out
sbb
dec
cmc
mov
in
jno
pop
inc
cltd
mov
mov
inc
or
add
cli
add
push
cwtl
shll
loope
dec
in
xor
out
bound
inc
dec
mov
xor
and
test
mov
add
pushf
lods
loop
aam
int3
sbb
inc
mov
lea
or
loop
pop
jle
jae
hlt
cmpsb
cmp
imul
mov
mov
sbb
push
lea
sub
test
or
dec
ss
dec
sub
sbb
adc
or
aaa
ja
or
add
outsb
cld
cmp
sarb
in
sbb
mov
stos
inc
in
pop
jmp
adc
add
jmp
jl
pop
or
test
jmp
mov
ja
test
adc
imul
sbb
xchg
clc
or
push
push
mov
mov
mov
inc
out
cmp
jmp
sbb
adc
incl
and
daa
push
mov
cld
and
sbb
adc
mov
clc
mov
out
xor
sbb
push
add
rorb
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
gs
jb
arpl
fs
jae
add
add
push
add
push
add
rorb
add
add
add
addb
add
js
push
add
add
xor
xor
fs
insb
add
pusha
call
pop
lea
lea
lea
dec
movb
lea
sub
mov
mov
add
movzwl
add
jmp
testl
je
mov
add
pusha
mov
lea
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
add
sbb
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
xor
inc
call
adc
call
jb
ret
mov
popa
sub
shr
push
xchg
rep
pop
add
dec
or
jne
lea
jmp
mov
add
push
call
push
mov
or
jne
mov
add
add
jmp
rol
shr
jae
movzwl
jmp
add
lea
push
push
push
call
stos
pop
add
mov
test
jne
pop
add
mov
test
jne
lea
mov
or
je
add
jmp
lea
add
xor
xor
mov
shld
cmp
jne
and
add
add
add
inc
inc
cmp
jne
mov
test
jne
popa
jmp
add
jne
mov
inc
adc
ret
