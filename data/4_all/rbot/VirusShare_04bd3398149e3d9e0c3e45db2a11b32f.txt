in
test
or
pop
sbb
stos
repnz
add
test
pop
inc
rorl
add
adc
in
add
cmp
or
xchg
fwait
test
xor
mov
loop
in
rclb
inc
sarb
push
inc
pop
adc
xchg
ret
rcr
mov
inc
les
inc
push
fisubs
out
out
sbb
cmp
cmp
loope
mov
mov
mov
faddl
mov
and
test
aad
ret
stos
push
dec
lret
sbb
sub
jbe
mov
ss
int
pop
mov
push
sub
or
cwtl
in
and
sahf
xor
jecxz
pushf
sbb
mov
lock
lock
jne
mov
ret
rcl
push
adc
ret
cmpsb
mov
dec
lret
stos
inc
in
stos
gs
loop
movsb
jmp
lret
fucomp
add
dec
popf
lret
fistps
insb
sbb
hlt
mov
lret
imul
test
cmpsb
fistpl
test
dec
push
xchg
mov
pusha
pop
into
mov
fucomi
repnz
push
jae
lret
hlt
and
cmp
push
and
mov
mov
xor
push
cmc
or
les
xchg
xchg
pop
xchg
int3
push
mov
xchg
lock
sarb
inc
jmp
xchg
adc
inc
test
into
es
aam
push
adc
cmpb
jmp
lret
cltd
flds
shll
call
aam
jb
adc
pop
lret
aam
mov
fists
test
sbb
dec
adc
repnz
jnp
stc
testl
fwait
into
jmp
mov
pop
ret
dec
sbb
mov
sbb
cli
stos
cmpsl
int
fs
scas
dec
scas
pop
rcr
mov
add
cmp
mov
xchg
add
mov
movsl
or
sbb
mov
pop
pushf
xor
cmp
xlat
push
jno
cmc
mov
faddl
repz
nop
xchg
filds
mov
push
sarb
sub
mov
jge
pop
inc
xchg
int
dec
sarb
pop
mov
adc
xchg
and
mov
mov
cmovae
call
push
fidivs
xor
push
and
jle
inc
loop
mov
dec
outsl
dec
fidivl
enter
push
adc
mov
sbbl
add
cmpb
pop
ficompl
pop
es
cmp
cwtl
sbbb
inc
sbb
dec
cmpsl
or
mov
cwtl
or
outsl
sub
cmp
cli
sub
aaa
imul
cmpl
jmp
ja
in
lret
sbb
daa
sub
daa
mov
mov
pop
xor
add
pop
mov
fldl
pop
gs
xchg
pop
loop
adc
jp
js
loopne
repnz
popl
adc
into
test
xor
addr16
fwait
cmp
mov
aam
sub
push
jns
fcom
pop
xchg
pop
jbe
sti
mov
xchg
sbb
pusha
mov
sbb
push
addr16
or
sarb
xor
mov
pop
sahf
dec
sub
cmpl
int3
inc
pop
lods
dec
or
loopne
iret
xlat
jmp
test
or
loopne
daa
mov
lock
ss
sbb
popa
mov
test
cmp
push
test
lret
ljmp
sahf
cmp
repnz
dec
pop
les
jbe
cmp
daa
je
cmp
lret
ret
rcrl
lret
or
dec
cmpsl
ds
fistl
cmp
cmpsb
fstp
push
int3
xor
inc
push
mov
mov
push
test
ss
das
loopne
push
scas
xlat
in
pop
inc
loop
scas
out
mov
rol
sub
fcompl
out
push
cmpsb
shrl
push
fidivrl
fistps
or
jae
stos
mov
stc
out
mov
fisubs
popf
cmp
je
sbb
ret
dec
push
dec
mov
pop
pop
test
jbe
mov
popf
inc
inc
mov
cwtl
fcmovnb
add
sbb
ds
aas
notl
xor
mov
outsl
ret
popa
mov
cmp
mov
mov
into
dec
cmpb
adc
subl
ficompl
jno
les
mov
jb
lcall
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
stos
repnz
add
test
pop
inc
rorl
add
adc
mov
jmp
ret
ficoms
jle
scas
fcompl
and
xchg
mov
add
shlb
push
inc
pop
sti
push
dec
mov
sbb
jge
inc
push
fisubs
add
fidivrl
push
pop
cld
inc
and
pop
jb
fwait
in
mov
fucomi
push
adc
adc
inc
inc
mov
shrb
cmp
inc
js
or
lret
adcl
inc
lcall
popf
divb
fstl
rcl
adc
jnp
mov
add
push
bnd
pop
int
inc
pop
adc
insl
cwtl
ret
dec
test
jns
or
lds
mov
mov
sbb
sbb
fidivl
push
dec
shll
jno
dec
push
jg
mov
outsb
stc
fs
or
xchg
aad
pop
inc
shll
jne
gs
mov
fnstsw
jecxz
mov
loopne
jne
jo
and
stc
xchg
les
lahf
testl
cltd
lds
repz
cwtl
xor
pushl
mov
fwait
jmp
mov
out
shr
mov
jge
imul
leave
sub
cmp
jg
sti
xor
pop
decb
jb
out
adc
addb
inc
mov
pop
xchg
inc
mov
cmp
cs
sarl
cmp
lcall
xchg
rcrb
aas
push
repz
or
and
jns
popf
dec
pushf
cmp
adc
ss
sbb
rcrb
mov
insb
fs
vfnmadd213ps
mov
int3
and
xchg
enter
jae
fistl
repz
jo
fnstenv
lds
jl
dec
sub
add
inc
sub
mov
xchg
jl
rorl
test
fistpl
mov
push
mov
jp
xor
ffree
div
std
cld
mov
fs
rcrb
adc
pop
arpl
dec
add
add
pop
push
cmpsb
stc
xor
fidivrl
adc
mov
mov
test
fs
sti
mov
jno
xchg
dec
inc
xor
inc
xor
mov
fisubrs
aam
jb
xchg
mov
imul
ret
inc
mov
pop
cmp
movsl
push
jmp
loopne
aam
negl
inc
add
ret
jmp
divl
pop
adc
cmp
pusha
dec
add
or
inc
pop
repnz
dec
cmp
push
mulb
inc
inc
xchg
out
les
sub
lods
pop
inc
mov
shl
mov
leave
mov
gs
cmp
insl
mov
lock
in
addb
ficompl
outsl
divb
jno
mov
movsb
push
aad
xor
push
dec
les
jmp
test
push
fbstp
stos
or
roll
repz
mov
mov
dec
addr16
int
dec
mov
ss
xchg
imul
stos
repnz
xchg
sbb
addr16
xchg
push
into
jns
pusha
jb
sti
cmc
mov
sub
daa
xchg
dec
xorl
es
cmpb
mov
mov
sbb
fdivl
call
les
xor
jg
mov
addb
jmp
xor
sahf
add
lret
inc
xchg
jo
push
adc
mov
and
loop
sbb
orb
adc
xor
sbb
sub
cwtl
mov
jae
sub
cmpsl
popf
lret
add
adc
test
jo
in
ljmp
pop
sub
jp
lcall
pop
mov
lret
int
lcall
in
ret
push
xchg
out
fcmovnb
popa
jae
sarb
add
or
sbb
les
mov
or
les
xchg
xchg
push
mov
or
dec
mov
or
mov
mov
sahf
pop
jne
xchg
push
adc
or
fsubs
loopne
in
sub
cmp
loop
cmc
enter
popf
push
adc
dec
mov
mov
sahf
or
test
outsb
pop
aam
mov
in
lea
pop
rcr
cmp
lahf
rcl
or
js
sub
jecxz
test
jno
sub
mov
imulb
push
mov
std
push
xchg
les
xchg
ljmp
iret
push
cmp
lods
fcoms
movsl
test
nop
std
dec
xchg
adc
sub
xchg
push
mov
xlat
xchg
jle
cltd
lds
jnp
mov
movsl
cwtl
jge
jmp
pop
mov
cld
or
sub
xchg
inc
mov
dec
adc
pop
adc
pop
stos
aam
mov
jnp
inc
push
mov
or
mov
enter
inc
popa
lcall
faddp
loop
push
fisubs
gs
adc
in
adc
push
push
fwait
dec
dec
ds
push
inc
mov
sbb
test
jns
push
in
outsb
adc
repz
loop
scas
icebp
cmp
incb
ret
scas
add
andl
push
rorl
jmp
neg
in
movsl
ret
sbb
cmpsl
xchg
lcall
dec
sbb
push
xor
mov
xor
push
lcall
repz
pop
or
adc
mov
or
dec
mov
pop
xchg
lret
pop
pop
jae
push
cmp
pop
jnp
enter
sub
pop
xchg
pop
jno
and
adc
xor
idivl
add
arpl
push
inc
inc
lea
xchg
loopne
test
push
jmp
mov
stos
sub
cmpsb
fcomp
jg
cmpsb
jnp
enter
or
fwait
mov
push
or
movsb
hlt
xor
cmc
sub
mov
leave
das
loopne
pause
sub
ret
pop
stos
jns
test
rcpps
mov
addr16
aas
decb
adc
js
popf
rcrb
add
adc
lret
lds
movb
ret
sbb
adc
sub
mov
lds
jge
push
in
stos
dec
pop
out
cmp
les
jl
lcall
inc
cmp
inc
lret
cmc
add
cmp
shrl
jl
fistpl
lcall
mov
fstl
out
scas
std
fabs
cmp
fwait
sbb
sti
sub
test
jo
cs
or
sarb
jns
dec
mov
repz
out
jp
mov
rclb
les
fwait
pop
test
push
out
mov
fwait
lea
mov
add
test
or
adcl
dec
sub
in
cmc
fsubrl
mov
repz
cmp
arpl
int
fbld
out
push
mov
in
xchg
xorb
mov
inc
mov
add
lds
ror
inc
sbb
pop
ss
push
imulb
stos
mov
outsl
and
les
call
mov
pop
dec
scas
xor
jge
jp
lods
sbb
cli
int3
mov
mov
pop
outsb
fsts
pop
pop
add
sub
stos
ja
shlb
fistpl
popf
fcompl
jbe
scas
xor
sub
jl
cmp
inc
fwait
leave
cmc
xor
adc
mov
mov
dec
mov
push
stc
addr16
addr16
fwait
mov
aam
lcall
mov
sub
cmp
jae
gs
outsl
cmpsl
fcmovne
out
shlb
loop
push
dec
add
inc
hlt
xchg
imul
pop
push
and
daa
enter
push
decl
adc
inc
stos
shrb
cmp
jae
divl
shl
mov
repnz
adc
jne
leave
add
add
cmpsl
mov
enter
push
inc
stc
fisttps
lret
push
sub
rorb
sbb
jae
inc
adc
adc
cld
or
xchg
or
xchg
cmp
shrl
push
mov
jb
mov
sub
inc
int
xor
xchg
jnp
xor
lods
pushl
loope
js
dec
in
idivl
roll
test
cmp
jp
stc
fisubrl
xor
fistl
mov
cmp
mov
outsl
push
pop
std
sbb
mov
mov
xchg
fdiv
jl
sub
mov
lods
out
push
cmp
inc
pop
aam
sbb
into
pop
stos
les
push
mov
inc
xor
lds
ds
mov
movsl
xchg
inc
add
aad
add
mov
or
or
cmpsb
jno
fsubs
es
mov
xor
orl
fldl
rcrb
push
jae
mov
into
xor
rcrl
push
cmp
les
pushf
cmp
add
xchg
add
jl
fstpt
stc
scas
jle
imul
jecxz
lods
fdiv
mov
pusha
jp
movsb
cmp
in
mov
pop
ret
sbb
adc
push
clc
add
mov
rcrl
or
es
rcr
and
popa
aam
push
cmpsb
xlat
sub
mov
xor
insl
scas
add
jmp
jns
sbb
aam
test
dec
inc
mov
cmp
cwtl
pop
inc
mov
dec
xchg
lret
cltd
sbb
pop
xor
mov
add
lea
popf
jae
add
dec
pop
lds
cmp
test
dec
aaa
add
add
mov
sbb
or
and
or
pmuludq
icebp
imulb
xor
popf
dec
cmc
push
push
test
cmp
cld
and
xchg
movsb
dec
clc
and
jae
mov
into
ss
rcr
xchg
cmp
push
cmp
shrb
jp
xchg
or
xchg
sbb
xchg
fsts
movsl
fcoml
or
adc
cmpsl
rcrb
mov
in
jg
fbstp
arpl
jecxz
arpl
iret
rcrl
or
push
pop
mov
cmp
mov
rclb
scas
mov
xchg
insl
lsl
fidivrs
call
and
das
xchg
enter
pushl
xlat
sub
movsb
jne
out
enter
std
ret
push
xchg
mov
adc
test
lcall
into
out
sarl
mov
in
xchg
lods
add
mov
add
or
ret
xchg
int3
addr16
imulb
fisubrs
mov
cpuid
push
lods
and
mov
leave
pop
dec
aas
mov
sbb
pusha
cmp
sar
xor
cwtl
adc
sub
fdivl
push
stos
shll
push
mov
jae
mov
in
push
mov
jge
push
cmp
ljmp
ss
in
jl
aas
add
add
inc
loop,pt
jo
rcrb
dec
add
cli
out
push
push
lods
xlat
push
int
sbb
ja
fistps
movsb
jnp
imul
iret
sbb
pushf
aam
aaa
es
hlt
xor
aas
adc
cmp
xchg
pop
pop
daa
adc
lret
adc
mov
das
xor
mov
fidivl
jne
inc
inc
xor
fidivs
mov
xor
gs
pop
dec
aaa
adc
mov
loopne
sub
cld
or
inc
mov
xchg
mov
dec
sbb
test
push
lds
add
pushf
test
jmp
shl
sub
movsl
test
adc
xchg
or
cs
rorl
dec
dec
adc
into
lods
decb
movsb
cmp
xor
jmp
mov
push
repz
push
mov
js
rclb
shlb
ja
es
adc
or
dec
inc
mov
les
fdivl
cltd
jne
mov
rorl
imul
gs
adc
cmp
leave
xchg
cmp
jecxz
jne
dec
movsb
xchg
stos
mov
cmc
xor
pop
das
or
push
add
div
jae
cmp
add
clc
cmp
dec
lahf
lret
hlt
mov
inc
test
add
and
mov
divb
aad
inc
add
arpl
les
cmp
repnz
stc
push
test
cld
sub
std
mov
mov
int
leave
push
dec
pop
mov
outsb
push
cld
nop
imul
shll
push
mov
jb
xor
sti
mov
cmp
inc
test
add
repz
dec
cmc
xor
sub
or
mov
dec
mov
enter
inc
pushf
pop
mov
push
fsubs
push
call
push
push
test
push
push
data16
mov
fwait
dec
inc
xchg
pop
pop
mov
mov
hlt
je
test
out
aad
movb
lret
imul
mov
les
inc
inc
mov
stos
fldt
xchg
push
push
int
inc
ds
cmpsb
notl
in
dec
dec
add
test
cltd
pop
movsl
rcrl
cltd
cmp
movsl
ret
xchg
int3
addr16
xor
cmp
mov
movsb
jmp
push
idiv
fs
mov
sbb
jno
mov
insl
sbbl
fistl
cmp
ja
mov
sahf
jns
andb
adc
lret
jge
andl
push
mov
ret
rolb
xchg
mov
js
jns
pop
and
leave
aam
imul
xchg
and
fdivl
lcall
push
mov
outsl
push
or
std
and
je
test
mov
jl
adc
dec
sbbb
loope
mov
sti
gs
or
sbb
fidivrl
push
sahf
xchg
imul
ficoms
xchg
iret
sarl
sbb
pop
and
fcmovne
dec
sbb
adc
std
pop
dec
andb
insl
cmpsl
ret
or
push
sbb
test
movsb
push
cld
mov
aas
int3
dec
lock
cmp
adc
dec
adc
xchg
test
mov
idivb
add
dec
cltd
and
std
mov
pop
scas
dec
jns
push
pop
jmp
xchg
dec
sbb
scas
dec
call
and
in
mov
ss
adc
push
mov
adc
es
mov
xor
dec
xor
pushf
outsb
add
cmpsb
xchg
xor
stos
mov
push
in
bswap
test
mov
push
pop
out
inc
sbb
and
inc
inc
add
xor
xchg
lret
insl
rorb
popf
mov
wbinvd
mov
ret
mov
popf
idivl
repz
cmpsl
std
mov
incl
add
in
cmp
dec
lock
push
xor
nop
pop
lret
mov
cmpsl
mov
clc
xor
std
mov
scas
dec
sbb
push
lahf
lcall
daa
sti
xor
mov
mov
in
mov
cli
or
mov
iret
xlat
lcall
ja
inc
gs
add
and
movsb
push
add
push
jno
shll
lret
int
loope
lds
rcrl
and
add
add
loop
mov
hlt
js
jns
stc
int
je
ljmp
je
xlat
cltd
xchg
and
and
fs
mov
jecxz
shlb
xchg
insl
sahf
add
std
inc
fscale
dec
inc
xor
loopne
enter
or
hlt
jl
into
mov
sbb
loopne
cmc
mov
pop
das
or
dec
add
lret
gs
fisttpll
call
jne
test
lahf
lret
jecxz
add
add
test
hlt
sub
add
sbbb
sub
sbbl
push
dec
jb
sbb
xchg
dec
xor
mov
mov
mov
pushf
dec
pop
pop
nop
insb
sbb
xchg
cld
ss
xchg
insl
cwtl
popa
xor
mov
pop
scas
dec
push
xchg
outsb
sbb
mov
jp
lahf
ficomps
xchg
jg
add
cwtl
or
aas
adc
ret
jle
adc
sbb
js
pop
cwtl
inc
cwtl
in
xor
icebp
inc
push
test
test
fsubs
jno
in
sub
pop
mov
sti
xor
push
icebp
dec
add
addl
mov
stc
and
inc
jne
or
rcrb
pop
push
mov
dec
add
in
and
shrd
cmp
and
sar
loopne
test
lahf
lret
jecxz
add
jnp,pn
leave
or
dec
inc
pop
repnz
insl
cwtl
mov
dec
mov
dec
xchg
dec
and
rorb
add
lods
push
test
pop
and
xlat
sahf
mov
cld
sub
mov
test
shlb
rol
cmp
mov
xor
cltd
test
dec
movsl
sub
pop
cld
bnd
cwtl
out
xor
jmp
mov
pop
xchg
cs
sbb
outsl
cmpsl
xlat
popf
dec
stc
andl
adc
dec
xor
xor
rclb
repz
mov
in
sub
test
push
mov
xor
mov
push
add
xchg
hlt
jb
jl
adc
rcpps
loop
lea
cmpb
pop
stos
shlb
inc
mov
popf
or
add
sbb
fsubs
xor
hlt
mov
shl
xor
xchg
lock
mov
outsl
xor
sbbl
je
push
dec
jb
mov
add
sub
xchg
cli
xor
mov
cli
je
aad
push
cmp
dec
mov
lcall
aam
mov
fbld
jne
inc
sub
mov
movsb
push
fs
mov
inc
pusha
sahf
rcrb
dec
bnd
popf
jecxz
neg
add
out
adc
inc
mov
clc
je
in
pushl
sbbl
aam
jns
dec
xor
imul
cmp
add
enter
mov
mov
and
call
add
xor
hlt
push
or
movsl
int
imul
popa
dec
mov
jbe
push
inc
mov
cltd
call
push
repz
sbb
add
pop
inc
or
jns
lahf
sbbl
ret
repnz
adc
mov
js
push
stos
cmp
dec
jb
mov
push
es
push
fiaddl
jae
jns
inc
and
sbb
inc
imul
jno
dec
ret
push
xchg
mov
dec
lret
insl
scas
push
cmp
les
sbb
roll
push
mov
sbb
loope
jno
sarl
and
sub
add
js,pt
or
inc
cmc
out
mov
insb
xor
xor
inc
pop
popf
out
jbe
cmp
xchg
imul
inc
lcall
test
fwait
mov
mov
or
or
xchg
fxtract
insb
aaa
lret
push
or
mov
dec
inc
xor
add
jp
xorl
adc
popf
movsl
pop
in
push
pop
adc
sbb
test
mov
in
or
repnz
jo
test
rorb
sbb
or
pop
stos
push
lods
xchg
sub
adc
fisubrs
sbb
stos
mov
xor
int
arpl
jo
test
jae
les
xchg
fisttpl
push
mov
xor
xor
aaa
pushf
add
ja
and
adc
dec
and
popf
scas
leave
loop
adc
fildl
and
xlat
add
mov
in
mov
repnz
jecxz
das
lock
mov
jmp
popf
loopne
mov
fdiv
dec
push
and
sbb
xchg
enter
jl
and
and
mov
mov
in
xlat
or
cmp
loop
xchg
repz
aam
xorl
mov
pop
pop
or
repnz
push
dec
aaa
add
ljmp
and
nop
addr16
add
xchg
int3
sbb
add
adc
fisttps
aaa
test
jge
pop
sbb
push
dec
rcl
adc
pop
adc
test
xchg
mov
dec
and
scas
xlat
stos
lds
push
lret
jge
mov
jle
fcoml
jbe
xchg
xor
scas
shr
bnd
into
scas
cmp
andl
pusha
and
add
or
add
ja
or
mov
fwait
xor
push
sub
fstl
fiadds
jb
fwait
outsl
push
ret
cmpsl
lret
out
cltd
int3
pop
sub
or
jne
dec
cmp
jmp
mov
shlb
ljmp
repz
pushf
dec
pop
movsl
pop
call
fucomip
icebp
clc
sti
mov
out
lds
adc
popa
mov
add
sbbb
or
nop
xlat
dec
pop
dec
arpl
aam
sbb
scas
mov
fldl
xor
movb
jmp
les
xchg
xor
inc
pop
xchg
xchg
xchg
xchg
add
addr16
rcrl
push
adc
mov
fucomi
repnz
lret
ds
mov
in
jge
arpl
rolb
popl
enter
test
xor
call
push
fdivrs
insl
out
fwait
pop
mov
gs
out
push
aad
xchg
mov
jle
or
es
cwtl
dec
or
roll
out
pop
ret
cmp
stc
mov
arpl
int3
lea
mov
in
xrelease
fistps
aaa
rcrb
mov
cmp
adc
popa
push
sbb
fs
test
xchg
xlat
stos
mov
pop
stos
mov
pop
pop
fs
mov
cmpl
stc
dec
data16
mov
and
test
adc
push
inc
inc
push
stos
jge
sub
pop
xchg
or
sub
in
lcall
jnp
xor
pop
test
mov
xor
in
stc
subl
cmp
cwtl
dec
cmp
cwtl
clc
outsl
jmp
jns
dec
and
popa
clc
pop
and
or
push
pop
xchg
jae
cld
pop
cmpsb
fcomp
add
cmp
outsl
push
int3
sbb
clc
cmp
push
pop
sub
push
pop
jb
dec
mov
shrb
nop
lcall
test
mov
rclb
mov
sbb
mov
loop
stc
mov
lock
adc
arpl
sbb
add
ret
push
sbb
in
imulb
and
mov
cmp
aaa
imul
dec
mov
jno
fldcw
loopne
movsl
jno
inc
cmp
cld
dec
das
xchg
lret
mov
es
outsl
xchg
add
sub
jecxz
fisttpll
adc
not
push
inc
in
shr
pop
cld
repnz
int
and
stc
popa
std
push
push
pop
jmp
xor
jge
xchg
iret
xchg
inc
cwtl
inc
icebp
adc
mov
rclb
in
mov
push
gs
mov
mov
std
loopne
xor
push
adc
sub
inc
inc
leave
sbb
or
les
out
rcr
jnp
xchg
out
push
sub
mov
sti
scas
lret
in
repz
add
cmp
mov
cld
sti
mov
es
add
mov
cmp
mov
mov
test
jno
dec
mov
dec
pushf
dec
and
inc
lods
push
and
leave
fiaddl
mov
sahf
pop
stc
dec
cmp
je
fstps
aam
cmp
dec
inc
sbb
ret
fcmovnbe
lcall
xor
xchg
pop
add
sbb
scas
pop
insb
jbe
lods
sahf
jg
fisubl
test
cmp
mov
sti
ret
andl
andl
inc
pop
jecxz
incb
test
dec
cmpsb
mov
fwait
cmp
xchg
and
mov
and
xchg
pop
out
mov
pop
fsubl
xor
mov
int3
pop
sub
pushf
dec
inc
hlt
je
xchg
push
jmp
mov
push
inc
mov
ffree
pop
push
push
cmp
lcall
adc
jne
inc
add
pop
adc
in
stc
mov
hlt
mov
shrl
add
or
aad
inc
sbb
sbbb
popa
fwait
orl
in
sbb
les
leave
mov
cmp
xchg
lahf
pop
in
mov
imul
je
fcomi
cmp
fidivrl
xchg
dec
data16
stos
jne
dec
xchg
cmp
fstpt
pop
scas
jb
push
cli
icebp
xchg
jmp
popf
fstl
jnp
add
scas
ds
fidivrl
scas
add
dec
jl
cmp
js
or
inc
sbb
test
dec
mov
pop
dec
and
pop
xor
bound
mov
cli
jae
push
jne
in
xor
cmp
daa
pop
sahf
fdivs
jecxz
sub
sahf
cmp
push
or
xchg
test
push
adc
xchg
pop
xchg
enter
cmc
xor
and
cmc
pop
adc
cld
icebp
mov
aam
test
jecxz
mov
lret
hlt
mov
adc
arpl
sbb
mov
or
ret
or
cwtl
lret
aad
or
pop
xor
jno
test
fucomp
pop
test
dec
push
dec
adc
dec
sub
movb
mov
fisttpl
pop
xchg
dec
imul
xchg
fcoms
stos
nop
test
inc
cmp
sbbl
mov
inc
imul
jecxz
fwait
popf
xchg
fsubl
xor
test
pop
negl
mov
call
je
add
dec
and
mov
cltd
movsb
jp
cwtl
inc
js
imul
or
cmp
pop
cmp
fldl
xchg
mov
sbb
add
mov
dec
dec
mov
ret
incb
shrb
dec
mov
out
add
int
fsubrs
and
fnsetpm(287
sbb
clc
lds
cld
add
mov
sbb
sbb
push
aas
repnz
ret
jp
cwtl
pmuludq
add
stos
mov
inc
mov
lds
pop
movsb
push
test
scas
mov
shl
fs
out
mov
lods
xchg
lret
or
mov
test
or
lret
cli
inc
sub
mov
test
stc
lods
jle
mov
in
push
test
jmp
pushf
sahf
ret
js
pop
movsl
cs
jmp
xor
fdivrs
adc
inc
sarb
pop
pop
sbb
rcrl
js
sbb
mov
sbb
imul
mov
scas
pop
xor
mov
xlat
pop
imul
mov
int3
pop
sub
push
adc
xchg
xchg
jmp
adc
jmp
cwtl
and
cmc
pop
pop
dec
popa
mov
mov
imul
sar
imul
mov
mov
nop
push
inc
sbb
inc
aas
repnz
push
int
inc
sbb
sarb
rorl
stc
and
sahf
xor
scas
mov
ffree
stc
test
scas
pushf
repz
ljmp
push
sub
cld
jo
and
add
imul
push
cs
cld
xchg
sahf
jb
push
ret
mov
dec
enter
pop
xorl
popf
scas
leave
bound
and
fisubl
mov
idiv
add
adcl
data16
fists
out
push
mov
ret
push
incb
stos
cmp
sbb
mov
mov
xchg
fwait
inc
insb
aaa
and
scas
icebp
loope
add
mov
in
cmpl
rorb
or
add
stos
xor
int3
bound
lods
call
ja
or
test
sbb
outsl
cltd
xor
aad
dec
pop
xor
clc
mov
xor
or
inc
das
jno
jp
aad
stos
mov
pop
test
push
xor
inc
sbb
stos
aaa
lret
fucomp
insl
cmp
rcrl
nop
sbb
mov
nop
test
push
cmp
lret
add
movsl
and
scas
ja
test
dec
mov
mov
lds
pop
mov
pop
lcall
xchg
cwtl
fists
das
xchg
in
repz
addb
mov
inc
mov
stc
sbb
inc
lahf
pop
inc
jp
cwtl
fildll
leave
aad
jns
shlb
or
cmp
out
inc
lea
inc
popl
enter
dec
imul
jns
mov
push
xchg
mov
sbb
in
and
cmpl
mov
lds
add
jo,pn
pop
xchg
inc
movsl
xchg
sub
pushf
cltd
push
mov
and
mov
sbb
imul
jge
les
push
cli
sub
mov
push
icebp
fisttpl
add
int
lock
or
in
dec
bound
sub
fnsave
les
pop
lcall
inc
sub
sbb
xchg
xchg
sahf
mov
and
push
leave
aad
sarl
lods
xchg
pushf
fists
jl
sub
add
adc
iret
es
mov
out
test
fwait
xor
aam
fsubl
sub
xchg
ds
mov
push
lds
fsubr
rcll
ret
pusha
ds
jecxz
mov
sub
fwait
int
imul
in
jne
test
fbstp
test
ss
cmp
imul
loop
scas
fcmovnu
lcall
js
sahf
rcrb
rcrl
imulb
mov
xlat
sbb
rcrb
sbb
test
push
test
pop
pop
stc
xor
in
dec
decb
add
push
lret
sbb
stos
ret
dec
mov
ret
pop
jns
ret
add
or
push
xchg
push
add
sub
pushf
push
xor
cld
cmpsl
or
xchg
xchg
mov
cld
cli
repz
mov
pop
sub
fcomi
jecxz
popl
xchg
rcr
and
mov
das
adc
insb
std
xchg
fsubl
sti
sub
inc
fnsave
pop
push
ret
xor
repnz
test
fmull
sub
aam
loop
fadds
int3
sub
push
pop
pop
mov
pop
adc
lods
cmp
mov
pop
xchg
clts
loop
mov
pop
shrb
rcrb
mov
mov
lds
out
popa
lcall
and
cltd
lret
lcall
sbb
test
lods
stos
push
icebp
arpl
lds
sbb
jo
and
add
dec
adc
or
dec
mov
jle
pop
lds
jl
sbb
cld
mov
cmp
loop
xchg
fstl
or
cmp
loop
insb
mov
sbb
sub
lods
push
imull
fsubr
push
xchg
insl
mov
popf
rol
jne
pushf
sub
sbbl
imull
cmpl
mov
add
cmp
fadds
add
jl
push
xchg
popa
mov
out
xor
fldl
pop
jmp
clc
sti
inc
lahf
divl
rcrl
inc
fcomip
lcall
test
jno
jl
adc
dec
hlt
dec
adc
aaa
push
aaa
dec
fsubr
stos
test
push
sub
out
int3
repnz
in
mov
cmpsl
xchg
push
nop
jg
xchg
dec
mov
fwait
test
pushf
sti
pop
sub
movsb
push
mov
sbb
push
xor
fnstenv
push
loope
stc
jg
enter
push
xchg
add
aam
and
popl
lret
jp
xchg
push
and
pop
ja
mov
pop
mov
insl
fildll
mov
fdivl
iret
sbb
pusha
out
fdivs
mov
test
fisubs
jmp
fstpt
and
or
ret
jbe
repz
mov
pop
pop
inc
inc
mov
mov
jne
pop
dec
aaa
lds
cwtl
push
mov
cld
or
sbbb
pop
dec
dec
xchg
dec
and
jne
xchg
ss
test
xlat
test
sahf
jne
pop
sbb
test
adc
mov
xor
pushf
dec
pop
mov
mov
inc
movsl
out
xchg
lds
pop
push
xchg
repz
inc
mov
stc
pop
add
push
mov
mov
cmp
bound
aaa
js
js
adc
push
loopne
mov
push
xor
push
cli
xlat
sahf
or
dec
popf
icebp
iret
dec
push
leave
imul
inc
loopne
inc
std
pop
fldcw
cmp
pop
out
enter
int
sub
adc
hlt
jl
jbe
mov
out
mov
adc
inc
dec
sahf
dec
mov
mov
push
sub
jae
mov
pop
divl
iret
pusha
or
jge
inc
inc
mov
ficoms
imul
cmc
loopne
or
sbb
and
adcb
xor
ds
outsl
mov
jle
push
int3
and
shrb
jae
imul
xor
and
movsl
mov
imul
push
xor
push
push
imul
fwait
lods
mov
rcrl
inc
push
icebp
scas
fnstenv
mov
fimuls
add
pop
nop
out
add
arpl
iret
addl
mov
mov
add
add
movsl
mov
xchg
mov
sbb
jo
ret
shr
jb
cmp
bound
sbb
mov
loopne
aad
dec
int
out
dec
test
pop
dec
daa
adc
sbb
pushl
into
loopne
shrb
inc
mov
mov
mov
out
repz
fisttps
pusha
xor
jnp
mov
aaa
mov
pop
dec
mov
pop
xchg
jg
pop
push
xor
int3
addr16
add
add
mov
push
sbb
inc
push
movsb
dec
out
pop
fldt
mov
sub
push
pop
rclb
push
and
fistps
mov
push
jmp
nop
sbb
and
cmpsl
dec
pop
pop
sahf
mov
sub
ret
push
fucomi
loope
repz
dec
xchg
inc
idiv
and
sbb
rcll
dec
fidivl
fucomp
or
push
stc
ret
push
sbb
mov
pop
inc
pop
lods
xlat
sub
mov
lahf
cmpsl
ret
out
cmp
fwait
lea
shlb
cltd
push
hlt
call
pop
mov
push
mov
mov
jmp
ffree
pop
loop
xchg
sti
mov
icebp
out
divb
inc
add
pop
adc
mull
fidivrl
mov
aam
or
sub
hlt
and
mov
sti
xchg
daa
leave
fsubrl
jae
inc
sbb
jg
sbb
stos
xor
inc
inc
mov
mov
fucomp
movsb
cmp
popf
lret
add
sub
inc
sbb
fucomi
lret
test
lret
jno
mov
adc
mov
sbb
ficoms
jle
xor
aas
iret
loop
xchg
mov
inc
aam
fdivrs
fidivrs
jge
sbb
data16
push
mov
push
push
jmp
or
lahf
cmpsl
jge
call
fcomi
pop
popa
dec
mov
cltd
int3
pop
fsubrp
inc
dec
mov
xchg
xor
and
mov
inc
ja
mov
sub
xor
pop
adc
movsl
mov
fcmovnbe
imul
rorl
iret
sbb
mov
mov
xchg
les
add
insb
push
pushf
mov
negb
nop
psadbw
xchg
adc
stos
lods
arpl
xor
push
fists
mov
clc
test
dec
mov
lret
push
sbb
ret
or
mov
or
stos
push
mov
inc
ret
loope
cmpsl
fstl
cld
scas
push
pop
icebp
sbb
xor
les
and
add
jecxz
and
cwtl
clc
dec
shlb
lcall
rcrl
mov
mov
cltd
insl
push
or
enter
outsl
push
int3
aad
jne
dec
inc
adc
sbb
add
add
in
rcll
mov
dec
ret
pop
cmc
sbb
fwait
pop
cmpsl
fisubl
mov
or
repz
ds
jecxz
mov
shlb
mov
add
leave
fcompl
mov
push
sahf
cwtl
icebp
mov
xor
test
or
cmp
cli
movb
test
inc
cmp
nop
cwtl
adc
jno
je
add
mov
mov
mov
or
pop
rcll
pushf
adc
mov
shll
das
ret
or
jle
scas
fdivr
pop
js
cmp
pop
jae
in
sub
push
fisttpl
dec
mov
or
and
repnz
aad
inc
movsb
xlat
jmp
mov
mov
les
cmpsl
fcomi
cmp
cltd
jge
inc
lds
lea
and
adc
enter
mov
add
in
pop
add
sbb
add
pop
adc
inc
stos
shrb
and
mov
sbb
rcrb
adc
inc
cmp
aad
inc
in
fldcw
xchg
sub
popf
fsubl
dec
mov
and
lds
cli
lret
push
in
stos
jae
adc
rcrb
pop
in
jmp
pop
lock
test
inc
cmp
leave
or
dec
roll
test
adc
sub
dec
lds
addb
xchg
sbb
push
je
leave
ret
loope
cmp
xchg
rolb
sub
decl
jnp
inc
push
mov
xchg
sbb
dec
mov
int
ljmp
push
ret
fld1
jb
outsb
add
xchg
fxch
mov
hlt
xchg
das
jns
add
mov
shr
dec
cmpb
pop
lcall
rorb
inc
sahf
pop
loope
call
cmc
test
mov
leave
ret
pop
jb
pop
mov
out
movl
add
sbbl
mov
lock
outsb
adc
sub
jno
xchg
repnz
sub
mov
shr
xor
push
sbb
leave
dec
and
aam
sub
fs
sbb
dec
outsb
test
sub
pop
pop
jne
fwait
lods
movb
lods
inc
inc
mov
test
xchg
or
popf
scas
inc
inc
mov
cmc
arpl
repz
and
and
add
sub
push
test
adc
imul
jmp
or
fisttpll
inc
test
mov
sti
xor
popa
rcrb
mov
int3
xchg
jns
es
je
seto
ret
push
dec
mov
inc
cmpb
sbb
shr
repz
xor
mov
xor
xchg
iret
sbb
lock
movsb
push
aad
fnsave
pop
rorb
insl
nop
ret
inc
les
in
sbb
inc
cmpsb
xchg
adc
test
ja
add
inc
inc
mov
stc
or
ljmp
shll
or
jge
sbb
mov
sbb
orb
xchg
add
pop
jae
mov
fcoml
sbb
push
imul
dec
bound
pop
dec
ljmp
sbb
sar
mov
xchg
or
mov
call
enter
sub
sbb
aad
push
mov
rclb
jp
mov
out
or
dec
cwtl
cmp
lea
or
xor
ds
in
sbb
mov
call
imul
or
aad
pop
imul
add
imul
jne
and
ds
mov
mov
fldenv
mov
mov
ror
mov
icebp
cli
pop
out
call
push
sahf
clc
mov
xor
call
mov
lahf
sbb
sbb
push
cmp
ret
jo
test
dec
sbb
lods
popf
popa
mov
leave
xchg
fcmove
xchg
pushf
mov
adc
pop
js
pop
push
adc
gs
mov
mov
mov
jno
add
dec
mov
xchg
push
pop
adc
stc
xor
push
mov
and
push
fisubl
jmp
or
stos
xor
into
fadd
pop
fsubl
jae
cwtl
jno
popf
add
add
add
imul
cltd
outsl
mov
dec
adc
or
or
mov
pop
test
or
mov
or
mov
lock
xchg
adc
jo
aad
dec
rorb
push
adc
stos
repnz
scas
inc
std
stos
dec
sbb
test
dec
lret
fucomp
fwait
lock
clc
test
fwait
loopne
xor
push
cwtl
nop
sbb
loope
fdivl
xchg
adc
add
sub
ljmp
pop
pushf
add
roll
and
mov
cmc
mov
les
cmp
jb
pop
add
add
adc
sub
data16
dec
aas
stc
xor
bswap
push
cmp
in
or
xor
cmp
lret
pop
fdivrs
jnp
int3
jno
xchg
push
adc
inc
sub
loope,pn
jl
dec
mov
sbb
mov
fistps
insl
or
inc
lcall
adc
push
sahf
jecxz
mov
or
clc
cmp
mov
xrelease
add
rcrl
mov
hlt
mov
mov
and
int
sbb
iret
stos
repz
sahf
clc
mov
ja
repz
gs
dec
add
sbb
ljmp
clc
mov
movsb
push
test
or
adc
xchg
lret
add
dec
sbb
push
push
adc
dec
mov
or
or
insb
xor
int3
cmpsl
sbb
jmp
adc
inc
mov
orb
cmpl
int
sub
popf
lret
inc
mov
push
in
or
adc
imul
mov
ds
call
aad
xchg
mov
cltd
daa
xchg
inc
inc
mov
cwtl
fld
es
addr16
add
cmc
mov
pop
cmp
push
and
inc
call
call
mov
lods
fsubp
aas
repz
clc
sti
pop
push
rolb
idiv
outsl
inc
sbb
into
mov
ret
mov
mov
jg,pn
pop
and
mov
imul
inc
inc
inc
lods
cmpsl
adc
dec
sbb
in
and
call
fs
icebp
or
in
sbb
ret
add
adc
mov
lock
std
xor
dec
sbb
mov
cltd
lods
jle
test
cmc
outsl
push
iret
pop
test
cmp
icebp
leave
sbb
popa
push
pop
incl
xchg
lods
pusha
adc
add
iret
mov
lock
xor
ret
lret
fidivs
fdivr
cmp
clc
in
xchg
xchg
enter
push
adc
inc
sub
inc
xchg
push
test
shr
lret
sbbl
inc
shll
and
xor
call
pop
sbb
ljmp
xchg
inc
mov
xchg
xchg
outsl
sbb
cmp
std
rolb
test
repnz
fwait
test
cwtl
lret
inc
sub
xchg
cmp
fst
mov
push
inc
cmpsl
test
push
xchg
cmp
jae
aas
lock
fmul
arpl
dec
pop
sbb
cmp
lret
or
nop
mov
push
sub
lock
enter
push
xor
cmc
popa
mov
lret
mov
lret
sub
js
push
cwtl
add
jle
sbb
sbb
hlt
aam
pop
mov
fists
add
das
jge
adc
jae
sub
enter
mov
cmp
call
xchg
mov
jge
mov
jge
pop
xor
inc
mov
pop
pop
pop
dec
ss
mov
shrb
pop
mov
into
inc
sub
push
jne
arpl
pop
stos
imul
cltd
push
pop
loopne
cld
and
ds
movsb
and
lret
in
inc
rcll
jmp
adc
stos
sbb
dec
inc
push
stos
jbe
cmpsl
sbb
jbe
ljmp
dec
push
xchg
xlat
stos
mov
pop
mov
push
adc
sub
cwtl
pop
mov
popf
jmpw
fistpll
push
sahf
stos
inc
add
or
aam
sub
ret
cwtl
aam
stos
enter
scas
or
jge
cmpsb
adc
lds
and
inc
ret
xchg
sbb
pop
xor
sub
loop
andl
out
sbb
xchg
adc
mov
adc
lock
mov
fsubr
fsubs
fidivs
jmp
insl
lahf
scas
pop
ds
xorl
mov
sbb
push
xchg
inc
orb
or
mov
cwtl
xchg
sub
jbe
int
jg
pop
adc
call
pop
loopne
dec
scas
iret
fisttps
test
into
add
lock
push
xor
inc
ret
inc
or
add
insb
push
pushf
mov
sub
js
mov
lret
pop
and
push
sbb
test
lcall
or
pop
fnstenv
jno
shll
dec
mov
daa
or
lcall
lcall
pop
cmp
lods
cmp
mov
rcrb
std
mov
fwait
leave
insl
jne
ds
adc
adc
ffreep
mov
fdiv
aam
cld
fbld
sbb
jl
cwtl
jmpw
or
sbb
xor
enter
mov
dec
sbb
enter
rcll
ret
add
sbb
fwait
icebp
mov
xor
loop
inc
imul
ret
mov
pop
jo
call
mov
mov
cwtl
test
iret
fwait
cmp
inc
hlt
pop
divb
jl
shl
int3
pop
out
mov
ret
lds
popa
fwait
aad
jnp
pop
sub
mov
and
aam
push
mov
sbb
xor
lret
xor
pop
fnstenv
jno
cld
cmp
outsb
push
loop
daa
or
cmpl
ljmp
adc
call
lods
jle
cltd
shll
xchg
fcoml
repz
jp
pop
loope
jge
subl
or
rcr
cmp
or
test
call
fstpt
or
mov
std
mov
aam
int
inc
xor
out
jne
repz
cmp
es
in
test
enter
cmc
enter
xchg
push
adc
mov
mov
jae,pt
shr
repz
sbb
mov
sub
cld
aas
in
and
icebp
mov
cli
mov
cwtl
mov
sbb
stc
pop
into
out
leave
ja
loopne
lret
movsl
mov
ja
and
add
ljmp
lods
imul
stc
fs
in
and
lret
shlb
sbb
xor
pop
aad
imul
sbb
sbb
shrb
jns
push
pushf
add
xor
in
cwtl
and
push
sar
add
popl
addr16
rcll
or
pop
jecxz
xor
inc
insl
out
imul
outsb
fnsave
jg
xlat
adc
mov
es
aam
sbb
lcall
cltd
sahf
inc
and
xor
sub
popf
fistl
adcb
pop
add
lods
and
adc
mov
ret
sti
jns
inc
sbb
add
mov
gs
lcall
cmp
leave
sarb
imul
dec
pop
inc
stos
push
insb
rcll
and
movsb
mov
js
popa
cs
pop
pop
es
nop
les
rolb
and
nop
xchg
mov
scas
fs
lcall
pop
jno
lds
pop
and
jmp
mov
popf
fists
pop
mov
stc
and
sbb
and
pop
mov
sub
ficoml
dec
aam
adcl
test
rcl
mov
repnz
mov
ljmp
bound
andb
loop
push
popa
andl
femms
lds
les
cltd
sahf
popa
sbbl
sub
int3
inc
pop
add
addr16
sbb
imul
pusha
xor
mov
inc
or
fs
mov
or
xor
ret
mov
push
out
testb
adc
sub
test
push
lret
mov
imul
xchg
fucom
jmp
pop
xor
inc
mov
mov
jo
test
sahf
popa
movsl
adc
jl
fistl
cmpsb
dec
movsb
aad
xor
xor
cltd
idivb
addr16
dec
scas
movsl
fdivl
push
xchg
add
clc
mov
adc
mov
xchg
adc
data16
push
cltd
and
xor
inc
jge
imul
stos
cmp
call
sti
xor
jns
mov
fidivrs
dec
push
or
cmpsb
gs
mov
sbb
cmpsl
pop
push
int3
sbb
in
xor
mov
repz
sti
pop
push
ret
inc
jnp
xchg
sbbb
mov
jo
push
adc
test
inc
test
and
iret
xor
mov
and
jns
lds
mov
fwait
pop
jnp
mov
js
in
push
pushf
pop
or
jo
xchg
adc
inc
inc
movsl
sbb
sbbb
jns
mov
sarl
jp
sub
jno
cmc
mov
fcompl
sti
and
jmp
loop
xchg
adc
nop/reserved
jns
sub
pop
icebp
addr16
aam
sti
stc
xorb
adcl
imul
rcr
das
pop
and
les
xchg
xchg
lahf
out
int3
and
cmp
sbb
cmpl
mov
push
inc
fwait
lret
insl
or
leave
jae
add
fcompl
cwtl
movsl
pop
and
daa
cld
rol
pop
cmp
pop
push
jg
js
xor
lock
or
xor
hlt
daa
push
or
add
add
jg
stos
mov
in
sub
add
sbb
inc
mov
addr16
int3
jmp
push
jp
jmp
adc
ret
mov
xchg
add
mov
mov
test
mov
fcoml
jbe
cmp
xor
adc
pusha
push
jg
pushf
jne
jle
fimuls
inc
sarb
js
fistl
push
xorl
ljmp
fcos
xchg
xchg
pop
dec
loope
adc
xchg
xchg
incb
movsl
cli
xor
rclb
gs
out
cmovge
popf
xchg
mov
stc
or
cmpsb
aam
mov
lret
sub
cltd
add
or
jns
les
jns
pop
mov
test
fwait
mov
jmp
push
pmaxsw
adc
lds
mov
add
ret
mov
sbbl
dec
sbb
xlat
or
test
leave
test
cs
cli
cmpl
ljmp
sbbb
adc
addb
sub
dec
dec
outsb
stos
push
fcoms
jnp
inc
pop
mov
pushf
imul
lret
fildl
repz
loop
inc
mov
pop
jb
add
test
sub
and
sbb
sbb
movsb
jp
mov
push
loope
push
fidivl
test
xor
lods
mov
jnp
clc
jno
jecxz
mov
ror
adc
jmp
dec
addr16
lret
sbb
or
imul
push
call
push
test
sbb
jmp
cmp
fists
iret
ret
sahf
repz
outsb
xor
loop
mov
imul
adc
fsubl
pmuludq
sbb
lahf
inc
adc
test
cwtl
xor
mov
popf
mov
mov
mov
or
jo
xor
push
sbb
adc
loop
lock
sbb
stos
push
push
pushf
shr
sbb
sub
dec
jg
sbb
dec
xchg
cwtl
add
mov
or
mov
mov
xchg
cmc
mov
sbb
ret
sbbb
into
clc
xor
std
jb
xchg
mov
int3
pop
and
mov
dec
inc
mov
inc
pop
lahf
mov
sub
xchg
repz
and
shrb
movsl
pop
call
fucomip
hlt
cmp
fists
iret
int3
sub
loop
loopne
popf
sbb
ret
mov
adc
lret
cmp
mov
mov
sbb
stos
push
cli
mov
pop
mov
mov
xchg
jmp
jno
xchg
out
arpl
test
gs
sbb
stos
nop
negl
or
inc
xchg
push
xor
and
pop
sbbb
cmp
xor
inc
sbb
scas
jg
leave
cwtl
sbb
lret
test
lcall
or
sbb
arpl
dec
xchg
lock
cmp
or
inc
insl
xchg
popf
mov
mov
cltd
inc
push
push
sbb
ret
adc
or
mov
cmpb
sbb
es
push
mov
stos
pop
aad
dec
cmpb
or
lret
add
mov
add
jl
adc
mov
call
fucomip
hlt
cmp
fists
iret
int3
xlat
hlt
movsl
ret
aaa
lods
dec
test
adc
mov
mov
push
jno
dec
xchg
jo
imul
jne
les
sbb
mov
shlb
xchg
lods
sbb
mov
lcall
lret
rcr
jae
add
xchg
enter
in
inc
cmp
adc
cmp
cmp
les
cmp
or
mov
fmull
fwait
scas
dec
push
lds
ss
adcl
mov
test
mov
test
sbb
mov
inc
xchg
jmp
cld
hlt
adc
mov
inc
popf
push
jo
sbb
ret
sti
xor
cmpsl
sti
repz
mov
adc
andl
and
aaa
outsb
fisubrs
sbb
xlat
adc
int
mov
repz
mov
imul
ds
and
push
adc
xor
jns
mov
imulb
and
shlb
lock
pushf
sbb
call
xor
shll
cmc
insb
in
push
and
sahf
les
inc
mov
test
mov
adc
push
cmp
and
or
xor
and
jp
rorl
xchg
out
leave
dec
mov
mov
mov
mov
popf
adc
jmp
popf
in
addr16
scas
fbstp
into
mov
inc
jl
dec
xchg
sar
sub
rol
and
fmuls
xorb
xchg
cmpsb
or
push
jo
out
add
out
sub
cmpsl
sti
repz
inc
je
push
andl
and
aaa
pop
fisubrs
sbb
xlat
adc
int
ja
xor
mov
call
push
sahf
rorl
push
dec
fld
sti
mov
imul
lret
pop
movsb
xor
or
xchg
or
mov
fwait
addl
rcrb
cli
push
dec
sbb
xlat
or
push
pop
lods
leave
test
sub
arpl
scas
sbb
mov
jo
clc
inc
and
fdivl
sub
lcall
push
aaa
xchg
stos
jge
jns
adc
icebp
mov
bound
shr
sbb
cmc
in
mov
leave
loop
in
nop
xchg
sbb
mov
jecxz
add
dec
mov
pop
repnz
out
mov
add
push
or
inc
insl
xchg
imul
xchg
stos
jmp
xabort
mov
fadd
cltd
enter
rcll
dec
or
in
dec
fisttps
addl
mov
push
call
int
aas
lea
movb
cld
jecxz
mov
mov
in
clc
outsl
cltd
les
sub
enter
add
dec
cltd
nop
daa
lcall
rcrb
mov
movsb
fisubl
movsb
fldcw
fucomp
je
push
lret
into
lret
test
sbb
jno
test
xchg
lret
or
xchg
or
mov
ret
xor
pop
cmpsl
pop
pusha
ja
lods
loopne
and
jmp
popf
in
adc
bnd
lods
das
fbstp
sub
add
add
ljmp
dec
mov
jmp
aam
xor
adc
fs
xchg
and
mov
xchg
in
cmovae
push
jecxz
aad
jb
sbb
mov
jmp
mov
add
or
sub
mov
sbb
adc
int
mov
repz
mov
imul
push
dec
pushf
iret
sti
mov
imul
add
fidivl
add
mov
divb
nop
jecxz
mov
pushf
dec
and
ror
sbb
mov
pop
iret
xchg
cmpsl
inc
scas
mov
sti
stos
pusha
std
fisttps
lret
xchg
add
xchg
sbb
sbb
popa
add
jge
or
lock
out
dec
cmp
push
out
leave
jne
sbb
ljmp
adc
rorb
mov
add
dec
mov
out
push
xchg
push
cmp
mov
push
or
lret
jae
mov
test
mov
loope
dec
mov
push
gs
adc
clc
xor
enter
rcll
dec
add
orl
mov
enter
lods
cmpb
mov
inc
sub
xor
mov
sub
and
cmpsl
and
imul
inc
adc
repz
cmp
mov
pop
sbb
std
dec
dec
jle
aad
xor
sbb
jecxz
sbb
mov
test
cwtl
mov
aaa
stos
xchg
pop
ljmp
jmp
popf
ljmp
or
inc
push
pop
xchg
sub
or
adc
xchg
fsts
test
addr16
lods
push
pop
scas
test
mov
cld
loop
adc
xchg
mov
lret
sub
clc
xor
push
pop
repnz
out
mov
or
movsl
cli
jg
inc
insl
xchg
adc
and
fcoms
popf
out
push
ret
lret
cmp
test
push
push
cmpsl
jns
mov
test
sub
adc
jb
mov
pop
push
mov
les
mov
ret
arpl
inc
repz
negl
iret
sbb
mov
cltd
xor
std
pop
dec
jp
int
repz
sti
jne
xor
test
jecxz
sbb
incl
push
test
cwtl
mov
aaa
stos
xchg
test
stos
lahf
popf
stos
mov
jae
cli
jo
mov
or
mov
push
sbb
in
add
mov
xor
rcl
cwtl
pushf
xchg
sbb
jecxz
fwait
cmpsb
enter
pusha
jle
scas
pop
icebp
leave
arpl
cld
repnz
out
daa
rcrb
sbb
mov
or
push
or
lret
js
adc
jmp
movsb
jp
enter
adc
call
add
rcll
dec
add
dec
lcall
enter
int
pop
movsb
popf
out
mov
mov
lcall
adc
aad
mov
jns
into
clc
rep
ret
sahf
repz
pop
and
test
lock
sub
in
dec
stos
push
testb
iret
repnz
stc
xor
shl
pop
mov
test
push
in
or
xchg
fmuls
push
lret
into
ljmp
sbb
jno
test
xchg
sub
or
cmp
scas
xor
dec
movsl
xchg
mov
pushf
ret
shr
js
pop
push
xchg
inc
fwait
imul
incw
or
lcall
lea
mov
xchg
fmuls
movsl
cli
jg
inc
insl
xchg
adc
in
and
xor
and
cmp
movsb
loop
leave
sbb
cmc
enter
int3
push
push
xchg
stos
out
sub
adc
jo
mov
pop
push
mov
ret
mov
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
pusha
push
repnz
pop
icebp
addr16
sub
jg
repnz
xchg
out
jl
mov
pop
stos
push
insb
fcmovne
sbb
dec
mov
into
lcall
mov
fbstp
mov
or
mov
push
sbb
pop
xchg
or
cmp
inc
lcall
pusha
mov
rolb
jnp
cltd
sub
mov
iret
js
mov
aaa
cld
repnz
mov
rcrb
add
shlb
mov
movsb
xor
dec
mov
fnstenv
sti
jmp
xchg
imul
xchg
stos
jmp
or
lret
xor
loopne
fstps
mov
enter
mov
xchg
stos
in
adc
enter
mov
add
insl
sub
ret
aas
add
fimull
test
cmp
mov
xchg
cmc
pop
pop
iret
adc
mov
cltd
xor
std
clc
inc
pop
adc
mov
fs
icebp
mov
dec
push
or
mov
sahf
pop
iret
xchg
inc
scas
mov
sti
fisubl
fbstp
hlt
repz
ljmp
inc
cmp
lds
push
pop
push
stos
rcrb
xor
mov
adc
xchg
shll
loopne
and
jmp
popf
in
pop
and
js
lods
das
fbstp
shlb
or
sbb
inc
jns
dec
nop
lock
mov
cltd
xor
hlt
inc
jge
sbb
inc
mov
cltd
inc
js
sbb
inc
sti
mov
ret
mov
inc
inc
mov
or
ds
xchg
fwait
cmp
shrb
in
cmc
mov
sbb
pop
pop
and
test
fildl
les
fstl
dec
mov
dec
js
fisttps
mov
jp
add
cmp
mov
popf
or
fsubrl
pop
int
sbb
iret
push
notl
sbb
sub
push
lahf
push
lret
push
dec
push
dec
fmuls
fucomp
jmp
movsl
push
jl
sbb
and
dec
imul
jge
dec
fmuls
mov
jbe
sbb
pop
pop
pushf
ret
ljmp
jnp
scas
popa
lods
pop
jo
cmpsl
pushf
inc
fwait
leave
in
and
inc
or
push
inc
shlb
add
jge
xchg
sub
sahf
sahf
loopne
fsubs
cmp
inc
and
es
repz
dec
jmp
pusha
xchg
out
mov
fsubs
loopne
ljmp
xchg
inc
pop
scas
mov
sub
cmp
out
mov
call
push
sahf
rorl
cmc
lret
push
adc
mov
dec
sbb
jns
mov
lock
pop
mov
jbe
adc
lret
lock
pushf
sbb
call
xor
shll
aaa
insb
push
test
mov
sbb
int
dec
mov
mov
fiaddl
xor
cmp
and
daa
or
lods
aaa
aaa
fisubrl
pushf
mov
jns
push
jb
lods
rcrl
mov
mov
xor
push
pushf
rorb
mov
pop
jo
cmpsl
cmp
loope
inc
add
add
push
sbb
inc
jns
dec
nop
lock
cmp
sbb
fcmovu
mov
xchg
xor
test
cmpsb
jnp
clc
jno
jecxz
cmp
andb
dec
mov
shrb
mov
out
aad
pop
lret
push
pusha
pop
pop
mov
les
mov
arpl
lds
push
dec
adc
clc
stc
lcall
pop
cmpsl
ret
mov
mov
push
scas
data16
cmp
sbb
iret
cltd
notl
sbb
test
push
in
xor
stc
mov
xchg
fdivrs
mov
sbb
leave
pop
sbb
dec
lcall
or
orb
inc
sub
lods
jle
mov
fidivs
test
loop
xchg
loop
iret
repnz
imul
mov
subl
ljmp
mov
pop
repnz
out
mov
pop
xor
out
pusha
ret
fstpt
push
fsubs
stos
cmp
jb
pop
mov
mov
shl
enter
inc
cs
mov
je
cmp
dec
ja
adc
ret
lea
out
int3
add
mov
incl
push
sahf
rorl
daa
lds
push
xchg
lods
lahf
lret
in
iret
rcrl
mov
ffree
xor
add
lods
movsl
sbbb
aas
adc
mov
cmpl
mov
inc
mov
stc
lcall
stos
insb
lods
ljmp
fucom
leave
mov
aas
and
call
test
fsubrl
rorl
xchg
out
leave
jns
sbb
sub
popf
adc
fimull
mov
dec
pushf
push
mov
out
push
mov
cmp
gs
sbb
mov
mov
adc
mov
and
inc
or
addr16
mov
and
std
bound
pop
addr16
mov
ret
cmp
inc
inc
mov
lods
inc
ds
xchg
fwait
cmp
int
gs
das
in
cmc
xor
mov
sub
inc
cmpb
into
popf
sub
int
mov
jns
into
std
repz
mov
je
pop
and
test
lock
insb
mov
sbb
leave
jae
lret
movsl
ret
insb
test
pop
inc
incl
adc
push
in
mov
jae
mov
arpl
and
inc
rorb
fmuls
jp
or
in
ficoml
mov
imul
cltd
pushf
sti
add
dec
add
sub
mov
lahf
lahf
adc
pusha
hlt
sbb
mov
and
js
mov
mov
jge
dec
incl
stos
sbb
fisubl
cmp
inc
in
in
cmovae
fsubs
xor
push
and
andl
sub
sub
mov
stos
push
dec
mov
std
int
mov
repz
mov
imul
imul
inc
addr16
repz
cmp
mov
out
leave
pop
cmp
add
cmp
out
adc
cltd
mov
rorb
push
pop
int
sbb
iret
stc
notl
sbb
test
push
in
xor
rcll
addr16
sbb
in
or
inc
push
retw
pop
scas
aam
scas
ja
les
xchg
lcall
into
lods
jle
mov
sbb
xor
xor
insl
mov
xor
andl
xchg
cmp
sub
rol
and
fcomps
xchg
sbb
dec
inc
adc
data16
jae
loopne
faddl
ret
mov
jmp
lret
gs
movsb
or
sub
sbb
mov
dec
pop
enter
mov
add
insl
sub
ret
pop
add
cmp
test
cmp
mov
xchg
jo
adc
or
mov
cltd
xor
std
enter
sarb
fs
out
mov
mov
push
xlat
lret
sbb
inc
lahf
push
std
ds
movb
mov
arpl
lds
xchg
cmpsl
jae
les
xchg
fisttpl
sahf
imul
leave
adc
mov
or
popf
adc
rorb
jge
inc
pop
dec
rcll
fimuls
sti
out
push
loopne
sbb
lds
push
mov
mov
xchg
and
and
push
mov
xchg
cmpsb
dec
jmp
jo
out
loop
sti
sub
cmpsl
sti
repz
and
adc
andl
test
ljmp
cmp
fdivp
imull
pop
mov
orl
in
call
rclb
dec
push
adcb
adc
jnp
mov
sub
imul
scas
pusha
lea
sbb
jecxz
cli
rorl
dec
iret
or
push
jge
leave
test
out
lahf
popf
stos
mov
jae
ljmp
push
mov
lret
addb
test
pop
sahf
xchg
fistl
fiaddl
jae
mov
cltd
shrl
cmpsl
dec
push
fucomi
cmc
mov
cld
repnz
jg
imul
push
mov
mov
in
add
push
sti
sbb
rcr
mov
out
data16
mov
test
in
xchg
jmp
ret
xchg
and
sahf
or
cmp
fnsave
out
sbb
aaa
and
mov
dec
dec
mov
cltd
sahf
mov
mov
fsubp
movsl
mov
xor
repz
imul
push
xchg
push
jle
xlat
xor
repnz
sbb
inc
mov
inc
sub
push
pop
adc
leave
cmp
test
fistpl
sbb
sub
lods
jmp
push
jmp
scas
sbb
mov
repnz
adc
sub
dec
push
sahf
pop
out
sbb
add
out
test
pop
cmpsl
pop
js
enter
test
sbb
leave
es
pop
fists
adc
add
arpl
rclb
mov
cwtl
inc
mov
stc
jmp
sbb
mov
and
mov
add
out
xor
fsubl
ret
jg
adc
mov
mov
aaa
dec
fisubrs
sbb
xlat
adc
int
ja
xor
mov
call
push
sahf
rorl
jne
push
adc
mov
jns
mov
mov
sbb
mov
adc
dec
xchg
jo
scas
mov
sbbb
jne
clc
aad
incl
cmpsl
adc
sbb
mov
test
mov
mov
mov
xchg
xchg
in
push
sbb
sbb
ljmp
imul
jge
dec
mov
pusha
cmp
dec
sbb
cmp
mov
pusha
xchg
lods
inc
pop
lcall
mov
in
mov
leave
loop
in
nop
xchg
sbb
ljmp
mov
pop
repnz
out
mov
or
pusha
orl
insl
xchg
imul
inc
pop
xchg
pop
cltd
inc
outsb
push
sbb
ret
or
pop
out
leave
cmpb
sbb
icebp
cmc
mov
xchg
nop
fwait
cmp
aam
in
jmp
loop
mov
aad
jae
repz
dec
call
lahf
mov
mov
mov
cmp
cmp
cltd
sub
adc
sbb
add
leave
lds
dec
and
cltd
push
divb
nop
xlat
dec
sub
and
test
nop
es
test
sub
mov
or
jo
inc
inc
xchg
aad
nop
pop
dec
push
cmpb
std
cld
pop
mov
lds
int3
pushf
xchg
sbb
in
adc
ret
scas
scas
pop
icebp
leave
es
pushf
fists
adc
mov
dec
xchg
shl
mov
jmp
sbb
mov
sbb
jmp
movsb
jp
mov
xchg
call
and
rcll
dec
add
dec
lcall
enter
std
cmpb
lahf
cmpb
inc
sub
xor
mov
arpl
xchg
rolb
ret
loopne
mov
push
cmc
lret
daa
stc
ds
scas
lock
loop
cmp
lock
leave
sarb
imul
mov
sbb
pop
test
dec
sub
push
lahf
push
lret
sbb
popf
fldt
jmp
xchg
push
xor
bound
test
lret
or
mov
push
sub
mov
jbe
jb
lods
jecxz
xor
push
pushf
rorb
mov
outsl
jg
leave
push
nop
and
inc
xchg
cli
stc
and
sbb
add
sbb
mov
dec
mov
ljmp
xor
xrelease
dec
jo
adc
cmp
frstor
out
sbb
inc
cltd
jmp
and
mov
inc
dec
mov
ret
add
xchg
push
hlt
dec
addr16
dec
fpatan
jmp
dec
adc
cmp
jne
popa
or
idivb
jno
mov
push
jnp
repnz
push
testb
imul
mov
pop
icebp
dec
or
sub
jg
repnz
shr
or
mov
cwtl
pop
stos
push
insb
fcmovne
sbb
dec
adcb
lcall
mov
fbstp
pop
jno
inc
fmuls
fmuls
pop
das
or
adc
add
fistpll
push
inc
lcall
pusha
fildl
aam
sbb
ret
scas
cs
icebp
leave
in
mov
push
icebp
xor
jo
mov
sub
add
inc
mov
dec
shlb
adc
mov
in
cmpsb
enter
aaa
sbb
out
push
ret
lret
xor
loopne
fstps
mov
enter
mov
xchg
stos
sbb
enter
mov
add
insl
sub
xor
mov
mov
call
loope
pop
mov
repz
cmp
movsl
ret
ret
out
pop
test
rcrl
test
or
ljmp
sbb
jno
lahf
inc
bound
push
test
cwtl
mov
aaa
stos
push
cmc
fcmovne
jmp
xor
sti
stos
rcr
loopne
and
les
sbb
shrb
or
mov
push
sub
mov
jbe
sbbb
xchg
sbb
add
mov
mov
iret
jg
leave
push
nop
jb
scas
inc
xchg
repnz
and
sbb
add
mov
add
jge
xchg
and
jno
push
fisubs
cmp
cli
xor
cmp
enter
into
jmp
popa
xchg
out
pop
and
mov
enter
fisubrs
sbb
xlat
adc
int
ja
xor
mov
call
push
sahf
rorl
mov
push
adc
jne
dec
sbb
jns
mov
add
mov
aam
sbb
mov
testb
cmp
shll
clc
mov
sbb
pop
test
dec
sub
push
lahf
push
sub
xchg
out
and
repz
fnstenv
jno
jl
or
xlat
and
push
dec
lcall
loopne
xchg
stos
jge
jns
adc
imul
je
mov
movsb
mov
fucom
cmp
mov
loop
in
nop
xchg
sbb
mov
inc
std
dec
leave
popf
mov
dec
mov
xchg
lock
xor
or
inc
insl
xchg
popf
mov
mov
cltd
inc
pop
push
pop
pop
fs
repz
mov
inc
inc
mov
sbb
imul
imul
fsubp
stos
pop
push
mov
shr
xor
pop
loopne
aas
into
sbb
mov
lock
inc
sbb
loope
fs
sbbl
pop
leave
sbb
lret
movsl
ret
insb
test
push
sbb
test
push
in
xor
fnstenv
popf
lret
mov
sub
data16
scas
ja
add
or
adc
jae
lods
pusha
lret
add
jecxz
fwait
out
adc
ret
scas
cs
icebp
leave
es
sbb
adc
mov
loopne
andl
xchg
rclb
aas
or
mov
stc
jmp
sbb
mov
and
mov
jecxz
sti
xor
fsubl
mov
adc
cmp
xor
xchg
test
cli
cltd
movsb
push
sahf
mov
jmp
gs
pop
sbbl
sub
fistl
dec
pop
out
ljmp
sti
pop
es
rcr
repz
sbb
pop
sub
mov
and
and
mov
inc
stos
pushf
adc
mov
testl
push
lret
divl
lret
xor
mov
sbb
in
push
sbb
sbb
and
imul
arpl
rolb
pop
int
push
jbe
sub
jno
push
addl
shlb
lret
out
stos
jnp
jg
scas
loope
pusha
sar
orl
fdivs
sub
out
dec
shlb
sbb
pop
xor
popf
push
mov
inc
mov
mov
xor
cmpsl
in
popa
outsb
mov
adc
cmp
xor
push
int
xor
cltd
sahf
sub
jnp
mov
xchg
repz
adc
push
insb
in
jmp
pop
movsl
dec
call
mov
test
push
lock
imul
sbb
ret
mov
adc
lret
cmp
cltd
nop
loop
rorb
and
ror
sbb
in
xlat
mov
inc
and
inc
push
rcr
dec
pop
lret
pop
imul
inc
xchg
adc
xchg
adc
cmp
push
outsl
les
cmp
or
mov
fmull
fwait
scas
dec
push
xchg
loop
iret
nop
stos
inc
fwait
imul
dec
cmpl
mov
rorl
dec
aam
xchg
xchg
call
insl
xchg
popf
mov
mov
cltd
inc
push
push
cwtl
outsl
movnti
imul
ds
cmc
insb
dec
cmp
imul
fsubp
xchg
fisttpll
or
jg
dec
call
sbb
test
lahf
lds
add
mov
roll
sub
nop
mov
lret
lds
dec
push
hlt
mov
fisttpl
sbb
or
mov
sbb
mov
popf
int3
stc
mov
clc
mov
or
and
add
adcb
sbb
jne
gs
jmp
jl
xor
jp
mov
inc
mov
fstl
pop
daa
cmp
cmpsl
negl
leave
es
pop
fists
fisttpl
mov
dec
xchg
add
jb
mov
rol
and
lret
dec
notb
push
fisubs
xchg
imul
cmp
or
mov
jmp
lret
cmp
loopne
fstps
out
scas
enter
dec
push
push
xchg
stos
in
mov
xor
xor
pop
push
mov
push
mov
dec
stos
aam
sti
stos
mov
jnp
mov
push
lcall
mov
aam
mov
add
and
insl
movsl
ret
insb
xlat
jmp
shll
push
insb
loop
clc
stos
add
ja
sbb
mov
ret
mov
xchg
mov
mov
sub
test
inc
scas
ja
add
or
daa
fsts
lods
lds
jmp
ret
pushf
sahf
xchg
fwait
pop
jo
and
sti
inc
inc
icebp
and
mov
mov
shlb
or
push
and
inc
jo
and
sbb
pop
inc
xchg
adc
enter
ret
mov
jmp
pusha
xchg
and
int3
pop
and
mov
dec
dec
mov
inc
adc
mov
sub
ret
dec
add
ret
mov
pop
test
cmp
mov
mov
jmp
cld
repnz
sub
pop
add
mov
adc
add
nop
or
mov
jbe
xor
into
adc
fisttpl
dec
fisttps
cwtl
mov
test
leave
test
cld
mov
push
xchg
js
add
pop
lret
rcr
in
inc
fmuls
push
cmp
jge
lock
push
sbb
sub
jne
inc
push
lret
stos
xchg
fimull
fisubrl
pop
jb
lods
fmulp
dec
mov
sti
push
dec
pop
push
popa
mov
ficoms
mov
scas
jg
mov
xor
push
out
repnz
pop
xchg
xchg
pop
mov
mov
lock
add
or
mov
mov
cltd
inc
cltd
mov
mov
jecxz
bound
cmpb
xor
faddl
xchg
xchg
fwait
out
cmp
fisubs
enter
jmp
gs
filds
aam
neg
adc
inc
mov
and
dec
int
lock
mov
sbb
repnz
popf
imul
pop
lock
mov
movsl
cltd
inc
adc
xor
mov
notl
sbb
gs
dec
sub
push
lahf
push
sub
adc
cmc
mov
jns
sti
mov
shll
lret
daa
sbb
shrb
nop
jbe
cld
xchg
cmp
xor
cvtpi2ps
mov
add
inc
mov
loope
dec
lea
jge
int3
scas
rcrb
ss
xlat
fdiv
sti
sub
pop
lcall
mov
cmpsl
mov
xor
ror
negb
mov
in
andl
enter
insl
or
mov
fldenv
mov
fs
xchg
enter
aam
sub
ret
and
testl
mov
mov
in
mov
pop
pop
dec
pop
dec
pushf
jecxz
mov
imul
shl
push
icebp
ret
sbb
inc
pop
adc
cs
jg
lods
push
sbb
rcrb
cli
pop
xor
inc
adc
dec
add
cli
mov
cmp
xor
nop
cwtl
nop
sbb
sbb
out
jge
das
or
imul
in
cmpsb
xchg
stos
jge
imul
in
dec
jne
adc
adc
jg
leave
push
nop
in
scas
inc
xchg
ret
sub
pop
mull
jecxz
sbb
mov
dec
mov
ljmp
xor
adc
and
mov
xchg
in
cmovae
fisubs
xor
push
and
addl
mov
adc
mov
rol
pushf
in
sahf
dec
movsb
adc
fsts
imul
lods
pop
call
lahf
mov
mov
mov
cmp
outsb
insb
add
sub
jmp
leave
lds
dec
sbbb
xor
mov
pop
inc
incl
clc
mov
je
pop
iret
sbb
mov
int
jae
rorb
lret
pop
imul
inc
les
out
nop
cmc
add
adc
dec
push
dec
mov
xchg
sbb
fiadds
xor
sub
mov
fldcw
icebp
sbb
pop
bound
cmp
or
push
mov
rcll
dec
roll
pop
and
pop
ret
loope
fwait
xor
push
sub
cmpsb
fidivl
test
gs
xchg
test
lds
fnsave
xchg
out
lcall
loopne
ljmp
xchg
inc
pop
add
aad
imul
jp
popa
pop
mov
pop
in
cmp
mov
clc
sti
pop
es
rcr
repz
sbb
pop
sub
mov
repnz
dec
mov
ss
sbb
iret
mov
nop
loop
les
pop
test
push
in
dec
push
dec
shrl
xchg
or
jl
pop
sbb
js
mov
das
or
push
out
xchg
filds
sub
lods
pusha
sti
xchg
lcall
movsb
mov
cld
loop
dec
cmpb
fdiv
sbb
or
inc
add
sbb
mov
pop
dec
shlb
adc
mov
add
push
mov
cmpsl
push
fisubrs
and
adc
andl
test
fsubr
mov
sbbl
push
mov
ret
lcall
mov
movsl
sti
and
out
jae
mov
jecxz
push
xchg
mov
jbe
add
mov
pushf
or
incb
push
hlt
mov
fldt
adc
adc
adc
ja
loope
popa
test
imul
scas
push
xchg
xor
pop
lock
data16
scas
ja
inc
xchg
jl
xor
punpckhdq
lock
movb
loope
fstl
pop
daa
rolb
jno
in
mov
jp
xor
rcl
add
sbb
out
es
or
mov
xor
ror
negb
mov
loope
cmpsl
sbb
push
gs
insl
cmovae
leave
add
lret
jge
out
dec
out
xchg
dec
xorl
adc
enter
mov
add
insl
sub
ret
lcall
mov
movsl
sti
and
imul
lahf
lret
in
rol
dec
mov
fwait
push
hlt
mov
pop
add
or
sub
nop
jg
repnz
aas
mov
add
test
mov
fcmovne
sbb
dec
mov
ficomps
dec
cs
fbstp
and
add
sbb
xchg
fmuls
pop
das
or
xchg
out
xchg
fistpll
dec
inc
lcall
pusha
jecxz
ret
fwait
xchg
adc
ret
scas
cs
icebp
leave
in
mov
jp
addr16
rclb
andl
addr16
test
and
and
inc
or
jge
sbb
inc
mov
cltd
inc
jb
push
outsl
push
ret
sbb
daa
out
leave
cmpb
sbb
dec
cmc
dec
dec
inc
xchg
jmp
cmpsb
sti
outsb
imul
fsubp
movsl
mov
int
cmp
jg
dec
call
cmp
test
nop
jl
lahf
lds
add
mov
mov
fwait
nop
sub
add
lret
lds
dec
ss
push
lock
fisttpl
seto
dec
sub
ret
sbb
lahf
sub
mov
scas
movl
adc
jmp
lret
xchg
push
fsts
pop
inc
push
cmpsl
and
sub
jecxz
sub
mov
aad
mov
add
inc
mov
add
sub
push
xchg
test
xchg
dec
call
mov
or
mov
xor
ror
testb
or
xchg
sbb
andl
enter
adc
clc
xor
enter
rcll
dec
or
in
dec
mov
addl
mov
sub
fldl
repz
jne
jae
cld
mov
imul
in
jmp
jecxz
movsl
mov
mov
and
or
aad
cmp
xchg
jo
mov
xor
jne
clc
pop
push
mov
mov
pop
scas
imul
jns
sbb
ficompl
mov
test
mov
adc
cmp
rcl
cltd
pushf
xchg
sbb
mov
push
mov
xor
jecxz
js
xchg
cmpsl
enter
in
and
add
dec
mov
test
adc
lds
xchg
adc
jp
mov
shlb
movsb
inc
add
ljmp
fnstcw
mov
mov
cwtl
push
subb
sub
mov
daa
sub
mov
int
js
push
dec
mov
xor
pop
mov
xorl
into
pop
movsl
pop
loopne
call
rclb
mov
lcall
adc
jnp
mov
clc
add
std
mov
adc
lret
repz
push
jl
xor
test
jecxz
cli
xlat
xor
jb
mov
inc
aam
mov
add
cli
or
sbb
dec
popf
ljmp
addb
add
addb
sub
dec
push
outsb
shrb
mov
xor
add
add
xor
scas
mov
lahf
jecxz
cld
repnz
and
rcrb
add
mov
ret
and
inc
mov
jo
dec
and
inc
or
push
pop
add
lahf
outsl
aas
add
outsl
or
or
and
mov
sbbb
sbb
xor
in
inc
push
xchg
nop
fwait
cmp
int
gs
das
in
jmp
gs
pop
sbbl
into
dec
adc
loopne
mov
and
jb
mov
mov
cmp
outsb
inc
add
sub
adc
sbb
add
leave
lds
dec
sbbb
xor
mov
pop
inc
incl
clc
mov
mov
cmp
mov
jns
dec
pop
lret
pop
imul
inc
xchg
push
in
inc
pop
xchg
adc
cmp
cmp
stos
jecxz
sub
mov
aad
mov
add
dec
fsts
addr16
scas
rcrb
ss
fdiv
sbb
mov
sbb
mov
mov
and
pop
xchg
mov
xchg
cmc
xchg
xchg
sbb
inc
mov
jecxz
inc
and
cmpsb
pop
repz
dec
xlat
push
flds
mov
out
adc
mov
test
jb
adc
imul
out
pop
flds
and
arpl
mov
loopne
pop
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
xchg
push
repnz
pop
icebp
and
nop
jg
bnd
icebp
ss
js
das
mov
inc
mov
stc
lret
xchg
scas
sbb
mov
lcall
dec
rcr
jae
add
lret
ret
cmp
add
lret
stos
xchg
fimull
sbb
pop
sbbb
cmp
xor
inc
sbb
scas
popa
mov
jg
adc
popa
xchg
cwtl
add
mov
in
mov
pop
and
clc
adc
xchg
cmc
xchg
xchg
sbb
push
inc
sbb
or
xor
into
clc
xor
mov
gs
movsb
sti
sub
sbb
or
jne
and
sub
rcr
mov
jae
popf
repz
mov
imul
out
jle
adc
jmp
in
imul
sbb
ret
mov
adc
lret
cmp
test
pop
pushf
dec
and
ror
sbb
sub
lods
jmp
sub
sbb
arpl
test
xor
xchg
mov
push
cmp
sub
dec
push
mov
shrl
fsts
mov
scas
inc
sbb
scas
popa
dec
inc
cli
adc
jg
adc
pusha
xchg
cwtl
add
inc
sarl
mov
pop
pop
and
mov
mov
rcrl
push
in
xchg
jmp
ret
push
insl
fstpt
mov
fldenv
pop
loop
adc
add
jecxz
enter
or
fimull
popf
lea
movsb
popf
out
mov
mov
lcall
xlat
stos
pop
std
shrb
xor
pop
push
iret
ss
fdivrl
movlhps
mov
out
pushf
pop
dec
shlb
cli
sub
inc
sbb
nop
cmpl
lahf
sbb
dec
sbb
lahf
sub
xchg
stos
lahf
fisttpll
test
or
andb
dec
int
mov
push
test
mov
mov
mov
mov
mov
or
sbb
fucomi
cmc
mov
pushf
repnz
pop
push
xchg
push
push
mov
mov
xor
inc
mov
xor
fsubs
sbb
adc
mov
fs
and
xor
aam
cmp
movsb
mov
out
cmp
push
and
sarb
xlat
adc
int
ja
xor
mov
call
push
sahf
rorl
mov
jns
roll
in
iret
rcrl
cmovp
or
add
inc
mov
icebp
sti
jecxz
sbb
mov
test
cwtl
mov
aaa
stos
xchg
pop
ljmp
jmp
popf
ljmp
sbbb
xor
sub
dec
push
sahf
adc
jae
xor
shrl
dec
push
les
scas
sahf
adc
pop
or
xor
inc
cwtl
faddl
mov
andl
fcompl
sbb
xchg
xchg
cwtl
rcr
or
inc
stc
repnz
movsl
ret
jb
xor
cmpsl
dec
pop
fimull
cmp
mov
out
adc
adc
icebp
and
popa
mov
sahf
ret
bound
pop
cmc
xor
pop
cmp
cmp
popa
push
mov
shll
jp
aas
in
mov
jnp
mov
adc
sub
faddp
mov
push
iret
dec
testl
rorl
dec
push
lahf
push
sub
xchg
inc
xchg
in
pop
mov
mov
fnstenv
jno
jl
or
out
pop
dec
fdivl
sub
lcall
loopne
xchg
stos
jge
jns
adc
icebp
mov
fisubrl
sbb
jmp
scas
inc
fsubrl
clc
jo
arpl
rcll
clc
jb
mov
rol
sub
lret
inc
xor
bound
test
stos
icebp
mov
dec
adc
inc
pop
dec
shlb
psubw
call
sbb
outsb
inc
mov
mov
test
sub
xchg
push
inc
mov
ret
dec
jg
shlb
mov
in
call
fchs
lcall
dec
xchg
jecxz
repz
sahf
div
jmp
sbb
loopne
enter
add
rcrl
movsl
ljmp
movsb
ret
sbb
push
stos
mov
jnp
inc
in
xlat
xor
stos
loope
xor
xor
push
xchg
lock
xchg
xchg
in
inc
sbb
adc
out
sub
fisubl
dec
outsl
les
xchg
sbb
add
add
push
insb
mov
iret
js
jle
scas
pop
adc
shlb
or
add
dec
js
add
cwtl
shrl
mov
rcrl
cmp
xchg
mov
mov
mov
and
movsl
pop
xchg
sbb
cli
in
push
inc
mov
cmpsl
data16
jp
out
and
andl
test
int3
out
mov
sbbl
or
aas
stos
shrl
mov
sbb
mov
repz
cmp
lock
pushf
sbb
ret
mov
adc
lret
cmp
test
mov
sbb
mov
pop
add
fisttps
or
aaa
mov
insl
in
mov
pop
sub
les
xchg
or
subb
leave
xchg
fwait
adc
loopne
cmp
or
or
dec
push
cmpsb
js
dec
jg
scas
pushl
popa
cmp
jb
js
in
addb
xor
adc
sub
mov
push
xchg
imul
push
or
dec
pop
adc
rcl
movsb
dec
cmpsb
inc
test
inc
mov
or
in
bound
addl
mov
inc
mov
ret
out
mov
push
jne
pop
std
mov
adc
mov
loopne
jmp
mov
sbb
mov
inc
cmp
add
rcrl
test
or
enter
dec
pushf
inc
stos
cwtl
adc
mov
cmc
add
jne
sahf
les
cmpsb
inc
mov
test
mov
ja
cmpsl
jae
inc
push
cmp
and
enter
and
jp
rorl
xchg
out
leave
dec
jbe
jb
lods
rcrl
push
push
pushf
shr
adc
loopne
jb
enter
pusha
repnz
and
add
or
and
xor
adc
jb
js
xchg
sub
cmp
aam
sbb
notl
pop
stos
cmp
jb
pop
mov
mov
shlb
inc
cs
mov
test
sub
cmp
ret
sbb
sahf
dec
movsb
adc
fsts
imul
lods
pop
call
lahf
mov
mov
mov
cmp
outsb
push
add
sub
call
leave
lds
dec
push
divb
nop
xlat
dec
sub
ret
push
lret
clc
test
popf
int3
stc
mov
in
sti
or
sahf
je
mov
sub
adc
sbb
jmp
idivl
dec
mov
jecxz
or
mov
aad
mov
add
dec
loope
and
xchg
jmp
lahf
adc
pusha
lock
mov
adc
or
xor
dec
adc
xchg
cmc
xchg
xchg
sbb
pusha
mov
jecxz
inc
and
cmpsb
pop
repz
mov
xchg
mov
out
cltd
hlt
mov
daa
sub
mov
push
dec
mov
insb
int
mov
repz
mov
imul
in
imul
inc
addr16
repz
cmp
push
and
popf
sbb
ret
mov
adc
lret
cmp
mov
fstps
sbb
sub
push
lahf
cmp
lods
fldcw
ret
mov
mov
add
test
inc
addb
add
addb
sub
dec
push
sahf
adc
jae
xor
shrl
test
scas
mov
lahf
jecxz
enter
adc
bound
sub
mov
adcb
and
dec
xor
dec
mov
fnstenv
mov
xchg
sbb
addl
movsb
jp
mov
pop
jnp
enter
cmpsb
inc
test
jb
inc
mov
jecxz
and
es
imul
and
xchg
jle
mov
das
sbb
mov
add
adc
lret
popa
push
mov
shll
jp
aas
in
mov
jnp
mov
adc
sub
cmp
and
iret
aas
int
mov
test
push
test
cwtl
mov
aaa
stos
xchg
inc
sbb
mov
lcall
lret
rcr
jae
mov
or
mov
push
sbb
add
scas
shll
aad
pushf
xchg
sbb
and
enter
pusha
jle
scas
pop
icebp
leave
in
mov
fdivp
xor
sbb
mov
sub
add
inc
mov
dec
shlb
adc
mov
or
fwait
sub
daa
lahf
xlat
cltd
into
clc
xor
cmpsl
pop
push
xchg
jnp
rcl
adc
adcl
push
xchg
cmc
pop
push
enter
mov
das
cli
cmc
hlt
imul
pusha
mov
lret
popa
push
mov
pop
std
cmp
mov
clc
sti
pop
es
rcr
repz
mov
inc
mov
sbb
insl
movsl
decb
mov
inc
stos
cwtl
adc
mov
sbb
dec
push
lret
push
cmpsl
fildll
stc
mov
sub
imul
jae
rorl
sbb
test
mov
pop
xchg
lock
pop
mov
lds
ljmp
sbb
loope
dec
loope
and
jmp
repnz
fstps
loop
add
or
mov
jae
mov
mov
and
insb
mov
xor
adc
xor
dec
mov
dec
nop
inc
and
movsl
pop
repz
fcmovu
push
lds
leave
shl
hlt
sbb
sbbl
add
mov
rolb
pushf
sub
repz
out
ss
mov
loopne
pop
daa
setae
jecxz
or
fsubrp
dec
in
clc
out
cltd
aaa
test
sub
lret
ret
sbb
dec
stc
adc
lret
repz
inc
hlt
push
sbb
mov
adc
inc
std
xlat
xor
or
xchg
fsubrs
push
lret
into
sub
adc
insb
inc
cmpsl
and
xchg
add
jo
push
mov
aam
inc
xchg
fsts
fld
sub
sub
sahf
xchg
fwait
inc
das
adc
jmp
mov
andl
add
push
call
xchg
sbb
mov
and
movsl
xchg
pop
fstl
pop
fisubs
xchg
pop
fsubl
mov
add
xchg
enter
aam
sub
fidivl
lret
and
imul
adc
jmp
adc
dec
adcl
cmp
mov
clc
sti
pop
es
rcr
repz
mov
sbb
add
mov
and
iret
mov
inc
mov
test
jge
push
dec
sbb
movsl
fildll
stc
mov
out
sti
dec
into
mov
in
pop
mov
jp
xchg
lret
rcll
dec
xor
dec
cmp
adc
and
ret
mov
fs
lods
loopne
and
or
dec
jae
mov
out
push
xchg
sbb
mov
sub
inc
mov
test
and
and
inc
or
movsl
addr16
mov
lahf
outsl
aas
add
popl
dec
orb
lods
or
in
bound
or
cltd
sahf
ret
ljmp
cmp
mov
repz
push
mov
shll
jp
aas
in
mov
xor
sub
fwait
add
sub
nop
or
add
lret
lds
dec
xchg
out
and
popf
fmull
repnz
stos
mov
jnp
inc
in
xlat
xor
add
xchg
fmuls
push
lret
rcr
test
dec
mov
push
cmp
and
sub
test
xchg
stos
stos
rorl
xchg
out
leave
popa
mov
mov
mov
jnp
shr
rcrl
sub
dec
addr16
js
lods
scas
fbstp
sub
add
add
ljmp
dec
mov
xchg
and
and
push
mov
inc
insl
xchg
les
mov
fwait
adc
dec
mov
mov
dec
les
cmpb
jno
sbb
push
push
outsb
mov
cmc
clc
pop
mov
cmc
mov
add
bound
into
inc
mov
icebp
icebp
dec
stos
pop
out
cmp
mov
clc
sti
pop
es
rcr
repz
mov
inc
mov
sbb
insl
movsl
ret
mov
sbbl
dec
sbb
xlat
or
test
leave
test
scas
cli
pop
cmpl
ljmp
or
mov
xor
xchg
add
xchg
movsl
sbb
outsb
pop
mov
mov
lods
pusha
jae
mul
adc
add
pop
icebp
leave
outsl
mov
loopne
andl
xchg
cmp
sub
rol
and
lret
sub
pop
xchg
fistpll
stos
icebp
mov
dec
adc
enter
or
inc
mov
add
sbbl
add
mov
push
dec
mov
ret
pop
inc
mov
push
jne
pop
jecxz
cmp
sbb
adc
mov
loopne
jmp
mov
clc
out
cltd
adc
pop
sub
enter
test
hlt
mov
fwait
or
cwtl
lret
inc
sub
jge
test
lods
iret
and
cld
mov
test
fcmovnu
ljmp
into
ret
xchg
adc
adc
insb
inc
cmpsl
and
xchg
add
jo
push
mov
aad
inc
xchg
fsts
stc
push
imul
inc
pop
scas
shlb
aaa
xchg
cld
loop
xor
push
jno
adc
sbb
cwtl
add
mov
gs
in
inc
mov
out
dec
aam
inc
fisttps
adc
mov
movd
adc
rcl
popa
int
inc
test
jp
inc
mov
sbb
sub
gs
sub
sub
mov
fsubr
push
and
rcrb
mov
inc
test
fildl
les
fstl
dec
mov
in
jmp
jecxz
movsl
mov
out
loop
cmp
lock
cmpsl
push
sarb
imul
mov
pop
movsb
fisubl
ja
inc
push
sar
aad
fbld
shlb
push
repz
ljmp
inc
cmp
inc
dec
push
xchg
add
shrb
fcmovne
xchg
fwait
adc
loopne
cmp
or
cltd
fmull
jnp
dec
push
xchg
inc
fwait
imul
data16
cwtl
add
or
inc
mov
rcll
xchg
mov
insl
xchg
adc
mov
or
fld1
jne
popf
out
push
ret
lret
jne
cmpsl
movsb
dec
pop
sub
sbb
lods
stos
in
push
adc
enter
mov
add
insl
sub
ret
sahf
or
les
pop
mov
arpl
lds
popa
inc
mov
mov
imul
inc
sbb
test
lcall
push
xchg
push
hlt
xor
lret
rorl
dec
add
mov
sbb
dec
sbb
jp
pop
sbb
cli
les
les
push
add
xchg
stos
lds
jne
push
sbb
fistl
out
dec
adc
push
cli
mov
push
pushl
mov
xchg
lahf
push
mov
clc
jb
movsl
loop
xor
xchg
cwtl
in
xchg
sub
mov
xchg
sbb
push
pop
cmpsb
mov
fcmovbe
or
sbb
jp
xchg
push
movsb
fcoml
ds
dec
mov
cwtl
sahf
inc
inc
dec
inc
mov
cltd
sahf
out
and
in
cmc
xor
in
lea
iret
roll
mov
inc
sahf
sub
xchg
pop
push
dec
enter
pop
adc
ret
inc
and
aas
add
inc
pop
adc
cmp
fnstenv
rorl
fst
pop
test
in
pop
test
aaa
dec
push
in
cmpsl
push
lea
lret
pop
clc
sub
xchg
lret
shrb
retw
mov
cltd
or
push
mov
fcomi
add
mov
lods
js
xchg
jb
mov
jno
aad
ret
push
add
cmp
mov
or
sarb
jo
fwait
add
arpl
setbe
or
push
lret
and
jg
stc
mov
xor
push
aas
fwait
lret
in
mov
mov
rcr
call
xlat
mov
jecxz
inc
xchg
adc
inc
push
xchg
inc
lahf
notl
icebp
je
push
cs
jne
dec
test
dec
icebp
int3
sbb
lods
adc
mov
push
mov
enter
sti
inc
in
or
xchg
cmp
dec
pushf
mov
pop
push
xor
stc
add
cmp
sub
ret
xchg
pop
xor
loop
gs
adc
dec
push
add
arpl
jb
arpl
jl
pop
sbb
xchg
test
pop
iret
push
adc
cmp
mov
les
mov
stos
push
dec
mov
js
lds
xor
mov
fnsave
inc
and
fdiv
repz
std
shrb
mov
dec
mov
mov
out
ficoml
sti
xor
shl
lret
fs
inc
cmp
stos
cmp
repz
movq
ret
xchg
dec
arpl
out
inc
push
xchg
inc
dec
mov
bound
sub
loopne
xchg
lods
outsl
inc
adc
add
lcall
adc
inc
sbb
and
and
lret
mov
xor
bound
push
sub
mov
pop
mov
push
pcmpgtw
xlat
push
or
mov
sub
ret
xchg
pop
xor
loop
gs
inc
cmp
dec
stos
mov
inc
js
cli
into
push
sarl
mov
sub
mov
xchg
lods
push
stos
std
andb
mov
mov
cmp
aam
inc
cmp
mov
cld
loop
inc
fdivs
lcall
or
add
jmp
pop
andl
fsubl
aad
push
xchg
dec
mov
push
lods
shrb
aas
fisttpll
jnp
sahf
jae
iret
lahf
icebp
cwtl
ret
leave
rorb
rclb
add
in
push
inc
test
mov
std
mov
xlat
jge
fsubs
sub
lcall
mov
lods
dec
adcl
hlt
test
sahf
adc
jecxz
popf
fwait
add
jo
pop
adc
repnz
add
lods
cmpsb
pop
sub
inc
clc
lds
lock
xchg
jle
sahf
sbb
ficomps
sub
lahf
cmp
imul
fcoms
inc
out
subl
ret
fisubrs
jmp
dec
ja
enter
lods
adc
xor
aas
mov
lret
icebp
sbb
js
push
sarb
xor
mov
inc
sarb
je
or
inc
xor
pop
or
add
inc
mov
aad
repz
stos
jmp
mov
mov
lods
mov
out
and
mov
out
hlt
add
pop
rorl
pop
mov
inc
test
lods
xor
push
add
mov
mov
mov
das
xlat
add
mov
dec
scas
mov
stos
push
aas
pop
out
pop
sub
jbe
sub
push
sbb
mov
jmp
aam
sub
push
test
sbb
out
mov
int
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
jl
or
cwtl
lock
movsl
xchg
mov
data16
ds
jle
mov
pop
inc
pop
push
fdivr
push
into
scas
jg
fyl2x
xor
lret
testl
xchg
nop
cltd
cmp
or
and
scas
cmc
out
jo
lret
repnz
je
pop
adc
jl
cmp
mov
pop
inc
sarl
push
scas
std
int3
inc
aas
repnz
out
sub
mov
mov
out
or
mov
xchg
add
leave
pop
pop
flds
jo
sub
insb
adc
out
paddq
mov
cmp
mov
inc
push
lock
xor
xor
ret
aad
shlb
add
mov
cmp
sbb
fs
dec
mov
push
sub
movsb
mov
ds
movb
js
pop
fisttpll
add
inc
cmp
adc
inc
cmc
mov
les
jne
out
fwait
xchg
dec
jns
enter
pop
push
fcoml
xor
sub
dec
pop
jo
sub
cmpxchg
jmp
cld
mov
fcmovbe
xor
out
das
dec
mov
sub
xchg
jbe
popf
jns
dec
call
scas
dec
ja
popf
jp
lea
mov
xor
fwait
loop
vaddsubps
mov
enter
cmp
repnz
or
int
push
adc
push
in
mov
add
test
bound
jns
ss
sti
cmp
call
adc
jae
mov
cltd
sub
adc
aas
add
lods
cmpsb
sbbb
dec
mov
xchg
or
add
gs
testl
lret
dec
inc
xorb
adc
dec
movsl
push
leave
or
cmp
pop
xor
sub
dec
add
mov
rcrb
jnp
leave
pop
mov
ficoms
xchg
ljmp
test
rcrb
cmc
popa
cmp
mov
stos
mov
cmp
aam
fistpl
pop
mov
enterw
mov
cmpsb
cmpsl
ret
cmpsw
insb
lock
jns
ja
jb
dec
fnstsw
int3
pop
sub
rolb
xor
leave
or
cmp
mulb
fldl
sub
movsl
pop
adc
pop
pop
shrl
or
add
in
mov
sub
jl
scas
roll
fcomps
je
and
add
inc
mov
shll
adc
test
push
jp
movsb
dec
sbb
scas
mov
fldl
mov
add
std
xor
pop
fprem
dec
divb
jl
add
push
push
add
and
fs
and
nop
dec
fs
nop
mov
jbe
test
cwtl
pop
mov
test
repz
cmp
push
enter
sub
push
leave
hlt
inc
test
jo
imul
adc
enter
test
leave
push
fidivrl
push
sbb
dec
vpshuflw
mov
int3
inc
cmp
adc
add
dec
cltd
push
es
dec
mov
mov
sub
popf
negl
mov
mov
mul
loopne
ret
loopne
pmullw
dec
dec
inc
lahf
lret
jecxz
mov
mov
jae
aaa
add
sbb
cmp
cs
mov
jo
lret
test
scas
je
leave
dec
addr16
out
lahf
push
xor
bound
dec
jbe
jmp
mov
in
movsb
mov
jecxz
xor
xchg
dec
stos
mov
lds
stos
int3
or
jl
rorl
cmpsb
lods
adcl
sub
ret
mov
fcomps
cs
movsb
cmc
xchg
sub
js
es
add
adc
clc
xor
mov
adc
dec
aam
stc
mov
xchg
inc
mov
jnp
out
cmpsl
mov
lret
pop
repz
aam
and
scas
xchg
sub
mov
hlt
addb
aas
ret
lret
mov
imul
mov
out
mov
arpl
jg
data16
fsubl
jae
jecxz
jbe
cmc
mov
mov
or
ja
push
pop
mov
sahf
imul
jmp
loop
fsubrl
push
dec
dec
pop
mov
rcrb
pop
jne
push
sahf
loope
lret
xor
in
jmp
std
xor
hlt
inc
jne
inc
xchg
mov
mov
mov
fucompp
xchg
outsl
or
movsb
std
ljmp
hlt
jle
jp
add
jno
sub
int
les
and
push
dec
mov
adc
jmp
mov
mov
sub
xchg
jbe
popf
je
cmp
movsl
ret
lock
test
fidivrs
push
lret
mov
cmc
fcomi
lods
testl
pushf
pop
mov
and
or
adc
xor
adc
leave
addr16
aad
jno
xor
inc
insb
sub
int3
repnz
popf
sbbl
push
cmp
or
outsl
aam
dec
sbb
inc
sub
pop
lret
icebp
lcall
jg
mov
sahf
sbb
cld
mov
ror
jmp
dec
ds
je
aam
jl
ret
add
cmp
and
add
pop
ret
cli
movsl
mov
pop
mov
cmp
mov
cld
or
out
push
inc
fwait
inc
and
rcrb
add
inc
dec
je
jge
leave
cmpsl
jl
xlat
mov
inc
jecxz
call
stos
lea
mov
bound
lahf
js
fldl
lods
sti
xor
lahf
cli
cwtl
add
test
daa
inc
rol
insb
sbb
out
jne
cmp
add
add
fsts
inc
pop
cmp
leave
sti
int
fadds
mov
pop
jno
add
hlt
push
pop
xchg
fldl
lcall
or
mov
and
push
insl
movsl
ret
insb
test
out
mov
test
popa
in
jg
push
dec
pop
cmp
dec
and
adc
inc
cmp
dec
movsb
jecxz
arpl
cwtl
adc
pop
dec
inc
sbb
je
sub
addr16
sahf
out
scas
push
and
into
add
push
lahf
pop
pop
mov
movsb
fsubrl
add
inc
arpl
in
mov
cmc
jge
addr16
rcrl
and
cmp
mov
loopne
aaa
sbb
stos
xor
xchg
clc
sub
and
jmp
push
lds
jg
jnp
out
xor
sbb
call
add
pop
and
daa
hlt
xor
and
xor
imul
lcall
adc
push
add
sub
fisttpl
pop
add
idivb
or
aam
push
add
dec
xchg
push
mov
xor
xor
and
daa
lods
movsb
aam
jno
pop
cmp
mov
adc
inc
aas
push
mov
ret
sub
int3
push
and
mov
cmpl
add
add
add
or
pop
cmp
jecxz
adc
mov
lds
xchg
add
inc
fsubs
lcall
push
add
test
sub
js
cmp
pop
xchg
sbb
gs
mov
push
jmp
inc
push
sub
cwtl
inc
and
call
pop
jle
lds
out
rorl
int3
jecxz
mov
iret
mov
movsb
aad
nop
adc
jg
inc
push
mov
and
test
ds
in
xchg
jns
push
xchg
xor
insl
push
sbb
jnp
fimull
dec
xchg
addr16
xchg
or
adc
sub
pop
cmc
adc
mov
add
loope
dec
adc
ret
mov
jb
lret
adc
movsb
repz
loopne
sbb
icebp
aas
jecxz
call
mov
push
push
daa
scas
inc
push
rep
aam
xor
enter
pop
push
notb
add
enter
rcrb
into
cmc
cwtl
fwait
and
lock
scas
addps
xchg
dec
lock
jl
addr16
sub
jo
inc
int
shlb
pop
xchg
pop
xchg
mov
pusha
jo
ret
shl
push
outsb
negl
xor
mov
dec
push
aaa
adc
inc
or
mov
adc
and
push
inc
push
xorl
in
push
inc
movsl
cltd
lret
mov
addr16
mov
xlat
test
mov
xchg
xchg
mov
xor
dec
in
test
movsl
xor
push
int3
sub
imul
lahf
cmp
test
lret
sub
mov
lods
lret
sub
and
mov
lret
fimull
lods
outsb
xor
lock
les
jg
aad
shll
pop
shr
adc
iret
pop
cmpb
inc
fs
jp
and
scas
push
inc
clc
or
fildl
bound
adc
or
push
out
push
in
cmp
repnz
enter
cld
mov
jns
jmp
lods
divl
stc
into
add
je
sbb
xchg
fabs
mov
mov
mov
dec
data16
mov
loopne
mov
mov
movsl
repz
xor
mov
or
std
fwait
js
dec
or
pop
adc
mov
and
bnd
fldcw
lret
loopne
ret
sbb
test
sbb
inc
mov
lds
cli
xor
and
sbb
xchg
enter
loopne
sbb
pushf
mov
adc
iret
insb
rcrb
pop
sub
out
pop
loop
dec
xorl
mov
push
es
dec
push
sarl
xchg
testl
and
clc
icebp
jle
scas
leave
test
cltd
scas
push
pushf
add
popl
mov
ds
je
out
dec
mov
call
popa
sahf
mov
xchg
mov
cmpsb
jno
test
xchg
and
rorb
add
inc
mov
out
mov
int
dec
add
inc
jbe
dec
je
mov
jb
test
and
ret
es
repnz
enter
jle
insl
and
rol
pop
inc
add
imul
xchg
cld
jg
cmpsl
xlat
cmc
push
ret
cmp
mov
insl
aad
insl
ficomps
fildl
pop
and
dec
jp
mov
dec
pop
adc
loop
lds
sbb
loop
pop
imul
fists
jl
or
or
pop
push
stos
inc
pop
dec
scas
fists
pop
gs
lods
pop
adc
pop
cwtl
jle
xor
js
in
jge
push
xlat
pushf
adc
and
cwtl
test
add
jno
mov
fistl
push
push
inc
push
test
in
xchg
jmp
lea
mov
ret
fldenv
inc
xchg
adc
pushf
fwait
ss
cmp
and
into
nop
and
addl
dec
add
arpl
daa
mov
and
push
push
sbb
xchg
shll
popa
shrl
push
cmp
roll
cmpsl
push
or
xorb
into
push
mov
insl
aad
or
push
inc
stos
lods
push
imul
out
lods
js
lahf
dec
inc
pop
int3
stc
dec
push
out
stos
jb
lret
shll
aam
addl
add
dec
sbb
gs
fisttpll
jbe
pop
jp
cmpsl
sbb
leave
pushf
lds
xchg
bound
jne
loop
in
nop
xchg
mov
out
mov
inc
popl
mov
push
xchg
dec
and
push
lods
shrb
jg
lahf
sti
xlat
fmull
pop
outsb
iret
lahf
icebp
es
clc
pop
int3
rcrl
adc
popf
or
rorb
pop
add
mov
sbb
sub
mov
push
jmp
call
or
and
loopne
and
mov
sbb
ds
add
pushf
cld
ds
sti
or
or
mov
test
popa
icebp
loope
inc
pushf
mov
mov
inc
test
push
aam
sbb
push
test
jae
pop
xchg
les
add
jp
les
adc
pop
xchg
cwtl
adc
stos
jge
pop
sbb
sbb
adc
lds
aam
and
ficomps
fbstp
pop
idivb
cmpsl
sub
sub
push
stos
cmp
popf
push
xchg
lods
out
cmp
out
jecxz
adc
scas
xor
and
add
cmpsl
mov
jg
repz
jns
outsb
out
fucomi
xchg
les
xchg
inc
jno
sub
add
xchg
mov
pop
xor
ret
inc
push
mov
dec
call
fadds
sahf
ja
or
xor
adc
ret
ficoms
mov
sub
shll
inc
popf
mov
icebp
mov
inc
sbb
push
mov
dec
cmp
mov
jnp
inc
in
lods
dec
sbb
pusha
mov
out
stos
sbb
movsb
pop
imul
lods
push
outsl
xchg
bound
in
ss
shlb
sub
data16
insl
jbe
lahf
enter
lods
xchg
das
cmpsl
int3
push
mov
sub
aad
and
ljmp
cmp
das
push
roll
add
daa
dec
lock
jg
xchg
movsl
out
movsl
fbstp
repz
and
iret
cmp
repz
xor
fisubs
jge
movl
faddl
jb
mov
mov
ret
dec
sbb
jo
mov
sub
in
int
add
lahf
stos
or
movsl
lret
sbb
jns
pushf
rcrb
mov
or
aaa
dec
sbb
mov
cmpsl
mov
in
xchg
lahf
xor
dec
icebp
mov
imul
movsl
mov
ja
lds
fimull
les
and
mov
ret
cmp
add
addb
pop
stos
xchg
jne
insl
push
pop
xchg
sub
subl
ficompl
ficoms
inc
fiaddl
call
pop
and
andb
cmove
xchg
sub
test
arpl
xchg
xchg
pop
inc
fsub
xchg
xchg
test
dec
push
loop
jmp
int
popf
mov
pusha
lret
mov
jne
cltd
pop
insl
test
fdiv
dec
push
and
cmp
xor
int3
pushf
hlt
test
cmc
clc
jnp
popf
xchg
push
adc
idivl
rcrl
sbb
xor
out
xchg
sbb
pop
in
xchg
pop
xchg
into
popa
mov
repz
fcoml
das
out
dec
mov
or
mov
rclb
mov
add
xlat
stos
mov
or
mov
iret
pushf
ret
adc
inc
jb
dec
mov
lret
paddd
xor
adc
shl
mov
jp
stc
jg
aad
pop
cltd
enter
imul
push
and
mov
jb
sahf
pop
mov
cmpxchg
in
das
test
xor
arpl
das
push
roll
ficoms
repz
imul
cs
xchg
mov
scas
xchg
sbbl
pop
push
shrl
cli
pushf
xchg
daa
sbb
arpl
fcmovne
cmp
movsb
jecxz
and
aaa
jb
dec
mov
stos
pusha
popa
mov
cmp
xor
push
in
push
add
bound
push
inc
push
push
pop
mov
or
lahf
ret
adc
adc
xchg
push
daa
sub
into
mov
aam
dec
and
adc
fdivrl
pop
mov
popf
insl
movsb
xchg
test
push
aam
sbb
push
movl
les
add
jp
les
adc
pop
xchg
cwtl
inc
inc
stos
jge
pop
sbb
sbb
adc
lds
aam
and
ds
push
fbstp
pop
idivb
cmpsl
sub
sub
push
lods
inc
jo
add
lds
xchg
cwtl
cwtl
popf
jmp
dec
std
adc
daa
push
int
jecxz
jnp
sbb
jl
mov
fwait
xor
dec
into
les
and
rolb
xchg
loope
dec
addl
ret
jl
push
popf
xchg
push
sbb
jno
iret
sbb
adc
xchg
cltd
mov
ljmp
xchg
rcrb
mov
jp
lods
outsb
inc
or
add
insb
mov
pop
mov
push
sahf
movsl
and
push
cwtl
out
pop
pop
js
cli
mov
pop
push
fldenv
frstor
imul
inc
std
cmpsl
icebp
or
in
sbb
repnz
jl
inc
sbbl
or
sub
shlb
mull
mov
push
push
jno
xor
cld
loop
add
lock
shlb
add
ret
mov
push
or
aam
xor
push
sbb
mov
dec
fsubl
cmp
in
cltd
add
cld
scas
loopne
pushl
mov
or
cmpl
mov
inc
aas
sub
mov
sbb
add
shlb
mov
fwait
mov
mov
lods
pushl
rorb
pop
std
inc
pop
dec
push
popa
cmpsl
mov
enter
inc
pushf
loop
sbb
sbb
cmpsl
and
pusha
testb
stos
nop
adc
jnp
jne
mov
xchg
pop
pushf
in
frstor
jns
xchg
mov
pop
adc
and
in
test
ret
jb
movsl
or
gs
mov
pop
jge
inc
add
lret
xchg
jnp
dec
push
jno
mov
orl
xor
pop
cld
loop
xchg
jle
rclb
add
test
adc
jo
mov
adc
into
cmp
xor
or
xlat
cmp
jb
sbb
push
neg
hlt
or
aas
cmpb
push
cltd
or
in
mov
xchg
xchg
jmp
sbb
and
push
push
mov
decl
push
mov
pop
loopne
cli
mov
mov
mov
mov
rcrb
sub
pop
sbb
loop
enter
add
dec
lods
rcrb
clc
mov
ret
test
in
sub
mov
dec
push
lret
xchg
mov
mov
andl
cwtl
fs
test
pop
sbb
idivl
xchg
loop
stos
jbe
mov
add
pushf
rcl
cltd
pop
movsl
inc
sbb
repnz
push
cmp
leave
xchg
arpl
mov
inc
orl
test
or
adc
dec
add
adc
jo
fisubl
push
lret
mov
adc
mov
pushf
fcmovb
inc
mov
test
or
cwtl
push
mov
in
neg
mov
fdivs
stos
push
leave
sahf
xchg
std
aaa
clc
mulb
mov
cmpsl
mov
inc
mov
fcomps
cmp
mov
add
xor
es
imul
dec
pop
xor
std
pop
sbb
ror
xlat
addr16
leave
lahf
push
fwait
push
sahf
out
sbb
cld
mov
sub
jecxz
inc
call
add
les
jge
mov
subb
jae
mov
mov
jg
xchg
cmp
shrb
mov
jae
out
mov
fdiv
ret
cmpsl
inc
add
xchg
aas
bound
aas
jb
jae
adcl
push
mov
dec
or
and
xchg
aas
shlb
add
adc
mov
pop
fxch
push
call
jle
mov
fstpl
pop
lcall
dec
mov
imul
mov
call
pop
inc
fnstenv
mov
mov
mov
fistps
push
and
jecxz
and
enter
sbb
sbb
cltd
orb
mov
sbb
mov
jp
or
fst
addr16
or
jo
call
dec
fbstp
pop
scas
les
pop
shrb
cmp
mov
jo
in
cmpsl
jae
lds
xchg
mov
arpl
fdivrs
lods
jl
push
pop
pusha
arpl
cmp
and
scas
je
test
add
out
adc
sbbl
cmp
test
dec
shlb
cltd
movsl
icebp
jno
ja
xchg
inc
add
test
push
ret
adc
and
inc
pop
dec
or
mov
mov
loop
out
and
shlb
in
imul
call
dec
rcrb
fisubl
push
mov
rcr
jno
out
lcall
mov
clc
daa
testb
mov
mov
xor
xor
ret
ret
adc
aas
add
pop
mov
or
aam
cmp
out
lods
mov
stos
and
sub
in
fbld
dec
inc
fbstp
mov
xchg
stos
clc
cmpsl
pop
or
into
sbb
jnp
sahf
ficoml
push
les
pop
xor
mov
lock
les
jg
pop
std
jnp
adc
test
push
cmp
and
scas
jge
push
js
pop
push
sub
or
lret
jae
dec
daa
dec
in
or
pop
xor
add
xorb
ret
xchg
lahf
loop
sub
mov
dec
rcrl
push
jne
inc
push
into
or
dec
adc
xchg
inc
scas
and
sbb
mov
xor
sub
fimuls
xor
out
out
sbb
daa
out
stos
mov
sbbl
pop
pop
mov
repz
jns
in
fwait
lahf
pop
jmp
repnz
mov
sbb
sbb
mov
mov
push
aad
adc
and
sub
mov
cmp
rcrb
jp
fldenv
mov
add
mov
cltd
inc
std
cmpsl
pop
or
into
sbb
jmp
insb
add
inc
or
pop
mov
sub
outsl
mov
insl
or
sub
outsl
jno
movsb
jne
cmp
xchg
mov
mov
inc
add
in
hlt
lret
jp
jmp
add
jg
fsubs
jb
dec
add
add
test
jmp
cmp
call
int3
repz
mov
mov
jecxz
sbb
cmpb
arpl
mov
int
push
sbb
or
jecxz
mov
leave
lock
jae
loopne
cli
and
in
repz
pop
dec
rcrl
cmpsb
daa
mov
adc
sbb
or
mov
int
xchg
inc
sahf
clc
mov
xor
lret
adc
sbb
fisubrl
jge
rcrb
jge
stc
mov
lods
dec
xor
jecxz
stc
subl
scas
pop
or
inc
pop
mov
mov
inc
insb
sbb
pushf
rcrb
nop
ficoms
ret
int3
scas
insb
sbb
js
fdivs
icebp
leave
test
addr16
adc
jp
and
sub
xor
movsb
cmp
mov
adc
pop
inc
pop
fs
cld
fcmovu
movsb
jno
dec
gs
lahf
in
push
add
fnsave
icebp
in
scas
inc
add
popf
jmp
enter
ret
je
bnd
movsl
mov
xchg
jmp
sbb
add
jae
test
xchg
js
mov
mov
int
jmp
in
scas
jae
pop
out
loope
sub
jecxz
sbb
pop
fwait
js
cmpsl
movsb
or
dec
xor
pushf
xchg
pop
sahf
clc
mov
fisttps
test
sbbl
xchg
cld
mov
mov
push
cmc
fcmovne
pop
push
pop
jmp
data16
mov
fiaddl
inc
sbb
shlb
inc
addb
sbb
iret
pushf
ror
popf
cmpsl
add
sub
fdiv
dec
cmp
out
clc
adc
shlb
or
les
adc
xchg
cmp
loopne
test
and
fs
int3
fcmovu
movsb
js
imul
inc
cmp
fldenv
loopne
fisubs
jge
rcrl
or
insl
mov
xchg
push
dec
mov
pushf
mov
lock
hlt
dec
rorb
fsubrs
mulb
mov
push
iret
adc
fnstenv
or
jecxz
inc
sahf
jecxz
pop
or
lock
stos
xchg
adcb
loopne
push
lea
push
fldt
stos
mov
fwait
push
lahf
out
sbb
cld
mov
jmp
iret
popf
push
jns
out
shrb
mov
cmp
cli
or
lret
int3
adc
pop
cmp
fidivrs
or
out
mov
fdiv
mov
xor
xchg
dec
int3
sbb
rclb
aam
push
pop
mov
push
lahf
outsl
or
adc
mov
adc
and
sub
fisubs
xor
popf
jo
pop
out
adc
imul
pop
mov
jns
mov
pop
pop
adc
mov
dec
call
jne
mov
jae
mov
mov
jno
dec
add
jecxz
xchg
popf
sbb
xchg
imul
adc
mov
add
fmull
mov
mov
fwait
dec
mov
dec
out
scas
jecxz
stos
xor
dec
push
ficomps
pop
jns
mov
mov
in
popf
push
imul
jb
rcrb
cwtl
cwtl
out
stos
divb
testl
ljmp
arpl
adc
pop
pusha
jnp
mov
pop
inc
scas
je
stos
cmp
les
or
gs
dec
dec
add
xor
or
outsb
cmp
jmp
movsl
imul
int3
mov
xor
xchg
mov
mov
out
jmp
jmp
pop
out
add
loop
jbe
call
inc
dec
fisubs
mov
popf
neg
sbb
cwtl
sahf
rcll
or
jp
pop
mov
imul
cmc
lret
xchg
aaa
or
ss
adc
mov
add
movsl
cltd
sbb
adc
ror
imul
mov
pop
mov
scas
cli
mov
xchg
push
shll
mov
adc
dec
rcrl
mov
jnp
cmpsb
cli
nop
sbb
mov
mov
pop
ja
ret
rcrl
lods
cmc
xor
mull
fdivrl
movl
enter
js
inc
mov
out
jmp
mov
dec
dec
add
dec
pop
xor
push
cmpsb
mov
bswap
popf
push
sbb
scas
pop
shl
fsubl
cmp
enter
enter
pop
adc
adc
xor
scas
mov
sub
sbb
cmpsl
mov
ja
test
shrb
sub
dec
pop
addr16
xor
ljmp
fstpl
add
fdivp
inc
ret
dec
push
lahf
pop
bound
xlat
cltd
jl
mov
jbe
jb
lgs
aad
imul
xor
aad
lret
fchs
shll
xchg
lods
lds
imul
ds
xor
xor
hlt
pop
stos
jne
inc
push
pop
lcall
dec
mov
sub
test
jle
lods
cld
fisttpl
push
sbb
mov
mov
aad
mov
cld
loop
stc
pop
test
sarl
add
add
mov
int3
insl
xchg
mov
pop
xchg
inc
add
mov
adc
push
dec
fnsave
sbb
out
js
sbb
mov
enter
gs
in
sti
push
adc
xchg
aas
sti
and
lods
xchg
ss
jecxz
mov
sbb
fld
cmp
mov
loopne
pop
into
dec
fbld
jmp
jl
or
mov
xchg
pop
adc
mov
mov
adc
aad
jge
test
testb
pusha
mov
jbe
shll
leave
cmpl
inc
lock
xchg
jmp
and
jo
ret
ror
inc
shlb
in
mov
aam
mov
inc
sbb
mov
pop
xor
enter
scas
std
push
ret
fwait
add
mov
inc
and
add
cmp
stos
roll
mov
add
pop
xor
movsb
jno
or
lahf
inc
pop
dec
dec
fnsave
mov
fnstsw
ret
xchg
sti
gs
cwtl
push
sub
mov
fdivs
cmpsb
fs
dec
pop
adc
adc
jnp
push
mov
ret
sarl
in
sbb
daa
stc
sbb
out
mov
lock
pop
dec
pop
out
push
je
es
lds
or
pop
xor
jno
mov
add
rcrl
pop
in
mov
sub
mov
push
cmc
inc
or
arpl
xchg
in
add
xchg
movsl
sbb
mov
cmp
jae
stos
stc
adc
dec
test
push
stos
out
sti
xor
push
fidivs
jge
cmp
sbb
cltd
enter
movsl
cld
xchg
fwait
add
mov
or
xor
sbb
sbb
aam
repnz
adc
push
push
jge
stos
sub
cld
xchg
mov
cmp
fsubs
pop
lret
mov
add
adc
inc
jge
jg
dec
ret
imul
adc
int3
mov
jnp
ret
dec
pop
mov
insl
mov
cltd
sahf
insl
mov
mov
call
jne
movsl
cmc
negl
iret
xchg
mov
test
ret
inc
fwait
jecxz
pop
out
pushf
or
mov
pop
in
cltd
adcb
lods
dec
fsubl
mov
hlt
sub
xchg
lahf
push
adc
mov
xor
rcrl
pop
call
adc
jb
mov
mov
cmp
jecxz
jmp
adc
stos
pop
or
jl
arpl
xchg
fists
pop
lret
push
cld
push
pusha
fidivl
insl
scas
jns
inc
xlat
popf
fisttpl
mov
mov
or
aam
sti
fisttpll
or
cwtl
test
lock
movsl
icebp
xor
gs
jmp
or
mov
scas
ret
inc
mov
rclb
xchg
xor
imulb
dec
mov
cmpsb
out
jnp
dec
inc
pop
mov
mov
je
cwtl
divl
ror
rcr
jne
into
lcall
mov
clc
clc
mov
in
inc
sbb
adc
jno
mov
add
fsubl
mov
pop
lods
mov
dec
pop
dec
dec
lcall
in
push
add
fbstp
xor
and
xchg
iret
xchg
cld
arpl
dec
addr16
repz
test
adc
push
jl
repz
add
xchg
inc
leave
and
mov
std
adc
iret
call
in
xchg
jb
push
cmp
sbb
push
pop
fwait
stc
sub
xor
or
clc
movsl
clc
fisttps
sub
pop
sbb
fsubl
jne
out
pop
push
push
std
bound
jg
pop
inc
mov
sbb
sub
mov
popa
and
xchg
lret
sahf
rorl
adc
test
jae
orl
in
fwait
lahf
in
stc
adc
lock
ret
mov
sub
jbe
gs
mov
sbb
nop
ds
popa
insl
movsl
movsl
xchg
imul
push
xchg
out
pop
pop
push
lcall
mov
frstor
imul
inc
std
cmpsl
icebp
or
xchg
sbb
repnz
mov
rorb
xchg
int
cli
daa
sub
shlb
xlat
mov
and
xchg
push
push
xor
cld
loop
add
or
jg
mov
add
ret
mov
push
or
aam
fucomi
xor
push
sbb
mov
xchg
sbb
push
fsubl
cmp
mov
cltd
add
aam
loopne
pushl
dec
mov
jecxz
sbb
cmpl
mov
inc
aas
jp
dec
mov
sbb
add
mov
insb
inc
stos
mov
lods
pushl
int
fdivp
pop
std
add
dec
push
jnp
mov
enter
inc
test
pushf
sbb
sbb
adc
loopne
pusha
testb
ret
dec
sbb
adc
jnp
jne
mov
xchg
pop
xchg
in
frstor
jns
adc
mov
pop
and
mov
popf
adc
in
lods
ljmp
or
or
cmp
imul
fwait
lret
xchg
cli
out
push
jno
mov
insl
lea
xor
pop
cld
loop
xchg
cmp
popf
inc
orl
mov
rcll
not
mov
adc
into
cmp
xor
or
fidivrl
mov
sahf
leave
jb
sbb
push
neg
rorb
aas
rcll
enter
sub
sub
push
dec
jle
push
xchg
mov
incl
jp
mov
pop
loopne
cli
mov
out
scas
mov
mov
enter
fstpl
sbb
cmpsl
cmp
iret
imul
dec
pop
xor
pushf
insb
cmp
stos
clc
mov
mov
ret
test
in
test
mov
or
lret
xchg
mov
mov
andl
cwtl
lods
ljmp
inc
jae
xchg
inc
fisubl
stos
jbe
cli
xchg
mov
inc
sbb
repnz
push
call
mov
mov
inc
orl
mov
or
adc
dec
add
or
and
adc
dec
jo
fisubl
push
lret
mov
adc
out
cmovae
pushf
fcmove
inc
mov
pop
or
xchg
sti
popa
mov
cwtl
push
mov
in
neg
subb
aaa
das
inc
leave
sahf
xchg
std
aaa
stos
hlt
movsl
repz
pop
imul
inc
mov
fcomps
mov
out
sub
stos
mov
jnp
test
adc
pop
xor
std
sbb
dec
push
clc
add
xlat
addr16
leave
lahf
push
fwait
push
stos
sahf
sbb
cld
mov
jns
jecxz
inc
call
add
les
jge
mov
xchg
mov
jae
lods
stc
adc
movsl
mov
jg
mov
mov
cmp
lods
jne
jmp
push
add
bnd
cmpsl
inc
add
xchg
mov
les
fstl
pop
push
mov
inc
add
and
xchg
adc
add
adc
xchg
pop
fxch
push
call
jle
movsb
in
sub
push
adc
lcall
dec
mov
imul
mov
call
pop
inc
mov
mov
mov
fistps
push
dec
jecxz
roll
sbb
sbb
loop
data16
inc
inc
mov
jmp
adc
or
sbb
push
inc
dec
fbstp
pop
mov
jns
fcmovb
test
dec
cmp
mov
jo
in
jae
lds
xchg
mov
arpl
fsubs
bound
arpl
call
je
mov
cmp
sbb
test
xchg
sub
test
dec
shlb
cltd
movsl
icebp
jno
ja
xchg
inc
add
lea
push
ret
adc
shlb
inc
pop
lea
test
sbb
mov
loop
out
jl
shlb
in
imul
fwait
adc
dec
rcrb
fisubrl
push
mov
rcr
jno
out
lcall
mov
clc
daa
out
lahf
pop
stc
sbb
lock
xor
ss
adc
aas
add
hlt
sarb
or
aam
sbb
mov
gs
stos
and
test
in
fbld
les
jae
mov
test
or
into
sbb
jnp
lods
cli
nop
sbb
cwtl
nop
rol
stos
outsb
repz
aaa
insb
lock
les
aas
add
pop
std
jnp
adc
cmpsl
sbb
leave
pushf
lds
xchg
bound
in
nop
xchg
mov
das
pop
mov
es
push
mov
push
iret
xlat
hlt
jbe
aas
cwtl
fsubl
sbb
xchg
rorl
gs
inc
pushf
mov
jg
repz
jns
popf
addr16
sbb
pop
inc
insl
hlt
xor
xchg
shl
data16
sbb
mov
xchg
jle
push
insl
or
sahf
xchg
rcll
dec
adc
out
dec
mov
pop
out
xchg
mov
mov
aaa
or
movl
add
test
inc
mov
jns
cmpb
xor
stos
xchg
testb
aad
sbb
stc
ud1
fildll
pushf
imul
gs
and
into
hlt
mov
roll
shl
je
out
xor
sub
dec
stos
inc
in
sub
push
jmp
sbb
pusha
mov
mov
cmp
pop
cld
loop
add
andl
sarb
mull
into
sbb
movsl
cli
jg
in
jbe
imul
pop
fstl
pop
mov
imulb
gs
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
jecxz
cmp
mov
aam
xorb
dec
rorb
mov
js
shlb
pusha
or
mov
cmp
and
jl
jp
push
fs
xor
ficoml
stos
inc
test
shll
stos
fstps
push
mov
stos
in
sbb
push
clc
mov
xor
fisttpll
frstor
mov
xchg
pop
in
dec
insb
or
mov
xchg
lret
rcll
sbb
fisubrl
adc
or
icebp
in
add
inc
mov
fstl
cld
int3
mov
mov
jmp
dec
lret
and
pusha
xor
rorl
dec
and
mov
orb
fwait
cs
xchg
mov
imul
pop
outsl
dec
call
scas
inc
popa
mov
mov
sbb
shr
bound
inc
sbb
bound
and
es
adc
enter
pop
mov
subb
pop
dec
adc
lock
js
mov
stc
nop
rclb
rolb
repnz
test
test
in
xor
ret
push
and
rclb
inc
mov
sub
mov
cltd
mov
insl
aad
insl
ficomps
fldcw
stos
lea
mov
fbld
loope
push
lods
cli
fwait
lret
je
add
enter
mov
mov
and
test
dec
mov
dec
jne
enter
add
leave
jae
pop
es
dec
pop
movsb
sub
fsubrs
sahf
push
cmp
enter
xchg
cmp
in
imul
rol
dec
jae
xor
jno
lret
and
mov
lret
jae
loope
pop
fdivrl
dec
pop
outsl
or
test
pusha
mov
cltd
push
fucomp
adc
mov
xor
sbb
push
daa
lea
or
xor
test
and
push
sahf
cmp
xor
and
clc
push
aam
lahf
iret
jecxz
push
dec
iret
fistl
testl
dec
fdivs
sbb
pop
insl
xor
test
icebp
mov
mov
stos
es
mov
push
adc
ret
xor
jae
pop
imul
inc
sub
sub
add
data16
ss
stos
mov
push
outsl
push
sbb
and
pop
mov
popf
jbe
loope
movsb
fstl
fdivrl
mov
push
cltd
jg
mov
jo
loop
add
dec
inc
add
subl
dec
std
adc
les
inc
movsb
push
rcrl
jb
mov
ret
icebp
cld
mov
out
inc
and
jg
cwtl
mov
test
lods
divl
stc
into
add
and
rorb
ss
lock
or
or
outsb
add
add
negb
dec
cmpsl
rcr
adc
adc
in
pushl
add
repz
ds
std
loope
sbb
and
mov
repnz
lock
cmpsl
jg
mov
sbb
fs
icebp
mov
movsb
lds
nop
lds
clc
mov
loop
lcall
int3
stc
inc
push
cld
sub
xor
icebp
icebp
or
cmp
mov
cli
and
mov
dec
xorl
mov
xchg
sbb
and
inc
in
cmpsb
ret
mov
adc
pop
xor
mov
cs
setb
lret
in
imul
mov
xchg
jg
sub
mov
pop
xchg
lcall
push
jmp
fnsave
xchg
push
xabort
mov
add
ja
bound
test
leave
addb
fwait
xchg
les
cltd
sahf
sub
ret
sbbb
push
test
lcall
mov
scas
faddl
inc
mov
adc
outsb
jbe
loope
jecxz
mov
mov
jae
icebp
xchg
jle
sbb
adcb
cs
mov
xor
ret
scas
arpl
hlt
in
lods
jae
ds
inc
out
xor
into
jae
lret
test
nop
std
pop
mov
or
pop
mov
mov
rcll
push
rcl
fistpl
fwait
pushw
add
mov
inc
and
cmp
xchg
and
in
sbb
add
or
aas
and
mov
adc
test
fistpll
mov
mov
adc
jb
fwait
dec
popf
ja
hlt
repz
gs
inc
xchg
adc
jbe
movsb
out
jnp
add
mov
sbb
adc
cmpb
fwait
cwtl
movsl
inc
jmp
xor
stos
add
jp
push
sub
divl
cwtl
roll
addr16
dec
jecxz
mov
test
dec
mov
pop
in
int3
inc
call
inc
pop
stos
push
test
xchg
dec
sbb
mov
push
mov
and
jbe
lods
adc
pusha
or
shlb
sub
mov
mov
mov
xchg
mov
in
mov
push
fisubrl
les
jno
insb
loop
mov
mov
inc
fstl
pop
fprem1
jmp
psubq
out
cmp
in
pop
lret
fwait
adc
dec
sub
fisubl
pop
sarb
ret
jp
gs
out
call
popf
xchg
mov
testb
jecxz
and
jb
dec
sbb
fdivs
ret
orb
sub
xor
fistl
inc
sahf
cmp
repz
push
cld
leave
inc
lahf
lret
jecxz
jmp
or
jl
pop
add
int
movb
leave
movsl
mov
test
shl
xchg
mov
mov
push
lods
orl
sub
mov
call
adcl
cmp
mov
xchg
add
jp
sub
movsb
sub
sbb
jle
cmpsl
or
inc
xor
adc
jnp
jg
xor
mov
inc
lret
xchg
mov
or
add
dec
addr16
mov
sub
jne
inc
xor
in
ret
push
icebp
aas
dec
mov
clc
adc
clc
lea
inc
cltd
lret
cwtl
add
test
push
popa
mov
xorl
subb
jmp
test
test
push
xchg
rcrl
pop
xor
add
mov
adc
xor
shrb
pop
push
lock
sub
std
popa
int
and
hlt
imul
sbbb
divb
fst
fisttps
aad
test
mov
mov
stc
inc
repz
adc
jae
arpl
lds
pop
adc
push
mov
ficoml
add
pop
stos
fsts
in
int3
mov
popf
imul
mov
jmp
mov
and
push
and
pop
jle
scas
adc
frndint
xor
out
xor
into
or
xor
or
jnp
out
mov
out
lock
xor
and
lods
dec
jae
fdivrp
jb
sub
adc
xor
lods
iret
lret
testb
andl
test
xor
add
and
xchg
jmp
sbb
cmp
add
fsts
inc
pop
cmp
leave
sti
int
fadds
mov
pop
jno
add
hlt
push
pop
xchg
fldl
lcall
or
mov
and
adc
movsl
ret
insb
test
incl
fisttps
sub
mov
add
loope
dec
adc
and
adc
cmp
xor
dec
inc
sub
sub
or
je
sbb
mov
sub
pop
push
jne
insl
jle
mov
hlt
mov
xchg
push
es
test
pop
and
mov
imull
arpl
lds
sti
ret
or
add
cmc
ror
rclb
fwait
dec
xchg
jo
fld1
stc
add
pop
test
test
add
popa
stos
lods
icebp
sbb
icebp
jnp
sahf
sti
lahf
lods
call
adc
jp
gs
add
in
rcl
dec
sub
sub
and
cmp
pop
in
adc
and
xchg
lods
lcall
and
ljmp
shll
add
add
cmp
lods
xchg
jbe
add
int
sbb
cmpb
push
pop
dec
dec
pushf
movsb
rorl
push
sub
mov
push
and
bound
imul
jns
loope
pop
in
outsb
mov
in
jg,pn
xchg
xchg
sub
movsb
xor
inc
xchg
js
push
inc
jmp
mov
in
scas
aas
test
xchg
adc
mov
outsb
fmull
push
divl
mov
imul
push
add
out
out
xchg
adc
fstp
movsl
icebp
xor
jnp
xchg
std
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
pop
out
enter
lret
mov
xchg
dec
xorl
lret
fsubrs
sbb
or
int3
adc
inc
mov
int
clc
mov
add
cwtl
aad
into
scas
xchg
xchg
leave
cmp
mov
popf
sbb
push
int3
in
add
daa
insb
push
sub
push
mov
push
in
or
push
fists
push
aaa
mov
imul
mov
jae
lret
sahf
jns
loope
pop
pop
mov
push
or
sub
nop
mov
xchg
add
jmp
lahf
fistps
inc
shrl
mov
xchg
jne
jns
inc
adc
arpl
pop
stc
add
adc
test
dec
mov
lds
xor
push
xrelease
daa
mov
jo
mov
fnsave
stc
mov
int3
into
sbb
aad
dec
movsl
dec
or
xor
seto
pushl
rcrl
repnz
insl
movb
and
sub
inc
roll
push
add
mov
and
daa
add
test
push
leave
cmpsl
inc
or
lahf
cld
pop
leave
cmp
xchg
divb
and
push
push
lret
pop
stos
inc
in
lods
cmp
inc
cmpl
in
cmp
div
xchg
push
jg
sub
add
test
and
clc
mov
movsl
sarl
and
mov
pop
mov
push
inc
sbb
rclb
in
and
jns
das
push
imul
dec
sbb
xchg
cmpb
jg
or
shll
push
icebp
add
aad
xchg
or
inc
into
pop
xor
scas
hlt
fidivs
sbb
inc
lret
loop
fcomip
ss
add
lods
xchg
mov
cmpsl
mov
out
mov
imul
push
adc
push
jns
inc
pop
lods
dec
adc
cld
and
cmc
xchg
pop
pop
dec
adc
mov
sti
add
imul
lods
int3
and
imul
ret
aaa
lahf
lret
adc
push
div
test
das
cmpsl
movsb
leave
test
push
adc
cmp
in
dec
mov
aam
or
jg
shlb
sub
pushw
inc
fimull
pop
push
lea
ss
repz
inc
jb
sahf
pop
and
sub
mov
jecxz
or
pop
std
and
fdivrp
push
mov
pop
je
ror
or
xchg
pop
push
mov
sti
xor
mov
push
sbb
dec
vpshuflw
mov
int3
inc
cmp
adc
add
dec
cltd
push
es
dec
mov
mov
sbb
popf
negl
mov
mov
cmc
loopne
ret
loopne
dec
xchg
xchg
mov
push
xchg
sahf
xor
and
push
insl
sbb
mov
jle
sbb
data16
sbb
lahf
mov
cmp
push
rclb
lea
mov
adc
inc
aas
lea
xor
rolb
mov
mov
movsb
in
jg,pn
cmp
imul
loope
leave
and
adc
mov
test
dec
pushf
loop
cs
fucomi
das
jns
jno,pn
insb
repnz
mov
mov
int3
pop
push
mov
sbb
insb
fwait
adc
add
pop
xchg
mov
pop
aam
lret
fwait
adc
dec
and
fisubl
pop
sarb
ret
jp
gs
out
call
popf
xchg
mov
negb
test
push
and
jb
dec
sbb
fdivs
ret
orb
scas
adc
fistl
inc
sahf
cmp
fbld
stos
iret
mov
add
stc
loop
mov
aas
pop
dec
inc
arpl
add
mov
xor
lret
movsl
mov
loop
cld
adcb
pop
dec
mov
dec
sbb
outsl
push
inc
mov
xor
dec
ret
jno
mulb
push
ret
insb
mov
xor
xchg
dec
iret
jae
lds
cmp
or
jl
rorl
cmpsb
lods
adcl
sub
ret
mov
sbb
cs
movsb
cmc
xchg
sub
js
es
add
adc
clc
xor
mov
adc
dec
aam
stc
mov
test
inc
cmpsl
lock
test
add
jns
push
lret
mov
cmc
fcomi
lods
testl
in
test
ret
test
shlb
iret
or
mov
setne
sbb
push
inc
push
pop
movsl
pop
mov
and
daa
lds
push
sub
push
xor
ret
mov
stos
or
pop
cmpsl
push
icebp
nop
into
mov
insb
push
sub
dec
dec
xchg
dec
push
in
ficoms
fcomi
call
mov
add
sbb
nop
fnsave
lret
cs
roll
arpl
sahf
xchg
test
sbbb
jo
push
xchg
or
stc
sub
fisubrl
orl
inc
adc
fistpl
ret
inc
cmp
xor
jbe
pusha
mov
xchg
inc
or
orb
mov
std
fdivrl
xchg
jg
out
daa
add
leave
xchg
xor
or
push
adc
stos
sub
cmp
in
pop
in
mov
aaa
inc
mov
scas
std
int3
inc
aas
pop
xor
push
push
les
mov
or
xor
and
sbb
movsl
repz
inc
cmpl
inc
ret
push
sbb
sar
sbb
jbe
add
scas
jo
leave
mov
dec
mov
pushf
sbb
mov
pop
mov
push
sahf
ret
pop
pop
adc
mov
mov
test
leave
pop
sbb
sub
add
into
pop
xor
jge
call
outsl
test
loop
lcall
pop
fidivs
imul
out
fldcw
pop
cltd
enter
lods
mov
mov
arpl
jo
sub
push
xchg
xchg
dec
aam
pop
mov
inc
roll
fsubr
das
dec
iret
mull
xchg
xchg
mov
inc
pushf
out
sbb
jae
pushf
sub
divl
pop
jmp
js
enter
aaa
jo
repnz
pop
shrl
loop
je
sbb
cmpb
adc
aad
inc
ret
fcom
test
shll
out
mov
pop
jns
pop
lcall
aam
lock
je
ds
cmp
repnz
mov
mov
mov
sub
in
xor
test
xchg
sub
inc
mov
imul
pop
push
ja
lods
mov
popf
div
call
fnstenv
mov
lds
xchg
sub
addr16
insl
pop
fwait
enter
mov
call
test
dec
dec
lret
mov
popf
push
push
sub
aas
js
jnp
inc
orl
test
or
popf
fistpl
mov
rcll
inc
mov
push
fidivrs
xlat
sbb
lret
and
sbb
jnp
popf
cmc
insl
pop
mov
stc
test
addr16
mov
adc
ds
and
adc
fsubr
fstpt
sahf
dec
dec
add
inc
rcll
push
test
adc
iret
rol
out
jno
pop
in
xchg
fistl
sbb
lock
push
out
dec
mov
or
repnz
dec
cmpb
lret
movsl
shl
xchg
and
mov
rcrb
aas
test
mov
cld
mov
mov
push
cmc
fcmovnu
mov
imull
fs
xchg
daa
push
push
jl
lret
rcrl
mov
xor
mov
leave
xchg
inc
mov
push
into
fmull
inc
sbb
cmp
enter
call
cli
icebp
sbb
xchg
xor
adc
ljmp
mov
orl
das
aad
pop
outsl
dec
push
sti
inc
sub
jae
pushf
loop
shll
lahf
cmpsl
repz
in
aaa
ljmp
jae
iret
rol
mov
enter
lea
or
and
or
call
jge
lret
arpl
pop
movsl
pop
mov
and
daa
lds
push
push
loopne
inc
jge
pop
mov
mov
repz
std
popa
int
and
hlt
imul
into
stc
shr
adc
ret
cltd
mov
call
lock
pop
cli
stos
jb
pop
inc
aam
dec
sbb
xor
pop
pop
mov
inc
cmp
sbb
push
sub
fnstenv
add
or
sbb
pop
mov
out
in
ret
das
lds
xchg
bnd
orl
pop
pop
notl
out
mov
popf
push
cmp
mov
mov
xor
xchg
xor
lret
push
xchg
lahf
jnp
out
xchg
push
mov
adc
lods
sti
push
outsb
jecxz
fisubl
loopne
or
mov
dec
dec
mov
sbb
jb
mov
xor
call
rcrl
mov
into
fwait
sbb
pop
dec
sbb
scas
call
and
sub
or
mov
aad
inc
sub
rcrb
sbb
lahf
push
pop
mov
mov
sbb
push
repz
mov
stc
jnp
sahf
pop
xchg
iret
icebp
icebp
fsub
jbe
lods
cs
mov
inc
testl
push
push
iret
jne
jne
dec
adc
mov
lds
sbb
jbe
lods
adc
fsubl
ja
lea
push
imul
ror
lcall
pop
dec
movups
add
xor
or
psraw
test
and
mov
jne
insl
cmovl
pop
or
cmpsb
jnp
fcomp
outsb
dec
push
add
and
mov
test
arpl
xor
imul
adc
and
sti
lods
adc
dec
push
adc
mov
push
ja
fldt
pop
jno
decl
out
mov
sbb
orl
push
sub
js
movsl
and
xor
test
lret
inc
in
dec
lea
mov
std
xor
imul
fisttpl
or
aad
push
rcll
movsl
inc
bound
inc
sbb
adc
xor
mov
mov
test
pop
pop
add
push
pop
and
xchg
pop
and
clc
dec
popf
jno
lahf
jbe
mov
pop
shrb
push
adc
in
rorb
sbbl
dec
mov
into
inc
dec
and
lea
mov
xchg
pop
fcmovu
and
xchg
pop
push
out
int3
fwait
nop
xchg
xor
gs
rcll
inc
add
bound
je
test
cld
or
inc
push
daa
jne
jnp
xchg
dec
fstl
sbb
fwait
shlb
dec
add
sti
mov
mov
mov
adc
push
aam
ss
mov
cmpl
mov
insl
cmc
or
outsb
xor
and
ss
int
ljmp
jle
lcall
lahf
popf
push
jns
outsb
shrb
into
ss
mov
ja
aad
cmp
rorl
stos
mov
sbb
mov
into
aam
inc
cmp
mov
cld
loop
inc
fdivs
lcall
or
add
jmp
inc
and
out
add
push
ja
lcall
cmpsb
scas
divb
jp
pop
pop
push
jne
sbb
mov
pop
cs
jae
cwtl
xor
add
and
test
rcrb
xchg
orl
shrl
pop
sbb
cmpsl
and
sub
enter
popa
push
fwait
int3
out
daa
inc
test
dec
jecxz
sbbl
hlt
mov
mov
adc
lret
rorl
in
lods
stos
cmp
jmp
pop
fisubl
rdpmc
fbstp
mov
in
in
inc
fmuls
inc
lcall
pop
dec
jge
icebp
loopne
mov
adc
aad
mov
lods
js
inc
shrl
cltd
mov
xchg
push
pop
mov
inc
in
sti
pop
lahf
push
push
jo
inc
lcall
push
pop
int
or
fsubs
pop
jmp
sub
push
mov
push
sahf
cmpsb
test
xchg
xchg
test
mov
inc
ljmp
subl
cs
repz
fs
add
je
cmp
dec
pop
xchg
cltd
jl
out
jne
pop
mov
mov
add
inc
sub
repz
fistpll
subl
jecxz
and
mov
jecxz
lcall
les
insl
movsl
rcll
loop
inc
in
test
mov
lds
pushf
cmp
mov
or
sbbl
inc
les
push
push
ja
nop
test
repz
lea
sbb
pop
pusha
jle
das
pop
icebp
sbb
cmp
fcmovne
loop
add
sub
addl
mull
lret
stc
dec
movsb
dec
push
test
push
cmp
lock
lds
out
cmpsb
enter
inc
ret
fldl2e
scas
cmp
jns,pt
outsb
repz
cwtl
add
inc
and
xorl
std
cmpl
decb
inc
sbb
adc
mov
cld
xchg
adc
xor
push
jle
inc
lahf
or
mov
adc
ret
sbb
inc
and
cmpsl
aad
jl
test
popf
pop
inc
fldenv
xchg
jb
dec
push
bound
push
lds
mov
and
mov
jl
jp
inc
pop
fnstenv
jno
cld
cmp
jae
les
les
sbb
adc
lcall
pop
mov
xchg
mov
pop
iret
xchg
xchg
icebp
jo
sbb
xchg
int3
jo
clc
repz
scas
das
adc
pop
out
syscall
rorl
fwait
cs
push
sbb
jecxz
or
shrb
dec
loopne
repz
in
lods
clc
adc
clc
int3
pop
into
xor
enter
push
adc
shrb
add
ficoml
popa
dec
sbb
cs
dec
popa
pop
mov
jg
outsl
mov
rclb
mov
sbb
mov
jns
roll
shll
jae
mov
cltd
je
cmovg
data16
mov
mov
insl
mov
jne
pop
test
adc
sbb
mov
and
lahf
push
pop
and
adc
inc
ds
movsb
ret
xor
dec
inc
mov
lods
push
xchg
mov
bound
dec
mov
push
mov
les
push
sbb
lcall
insl
movsb
push
shrb
sub
inc
cmpsb
xchg
aas
scas
shrb
movzwl
outsb
jno
mov
bnd
inc
cwtl
inc
and
push
out
pop
cmpsl
mov
xor
xchg
push
fisubrl
xchg
fisttpl
js
out
dec
mov
loopne
jns
dec
ret
push
repz
lahf
in
jnp
lods
gs
sbb
mov
xchg
cmp
popa
dec
pop
mov
sbb
jae
nop
and
xchg
inc
gs
sbb
cli
mov
imul
out
or
and
cmp
push
inc
sbb
shrb
push
outsb
outsb
aaa
dec
or
in
cltd
xorl
fdivrs
mov
push
mov
je
xchg
ja
jmp
stos
ret
call
cmp
int3
es
mov
repnz
cmp
adc
les
adc
lock
movsl
sub
pop
cld
and
fstps
cwtl
xchg
pusha
or
sti
fstps
sub
inc
fwait
or
push
rcll
dec
std
adc
les
xchg
sub
push
adc
test
sub
inc
into
cmpsb
iret
shlb
mov
jns
fisttpll
jno
jecxz
shrb
leave
mov
adc
add
invd
andl
nop
xor
or
movsb
adc
jmp
shr
jb
xchg
jmp
lods
dec
adc
cld
and
mov
xchg
cmc
mov
dec
adc
mov
sti
add
imul
lods
int3
and
pop
inc
insl
movsl
ret
aaa
lahf
lret
adc
push
div
test
das
cmpsl
movsb
leave
test
push
adc
cmp
in
dec
push
jge
cmp
aam
or
or
inc
out
in
scas
sub
jne
insl
jle
mov
hlt
mov
xchg
push
es
test
pop
and
mov
imull
arpl
lds
sti
loop
push
repz
cmpb
pop
jmp
out
cmp
push
call
stos
push
sub
scas
mov
fisubs
mov
loope
pop
cmp
adc
mov
pushf
and
cmp
fisubrs
fsts
in
or
faddp
pop
test
push
xchg
cmp
or
inc
mov
inc
add
xor
out
push
rcr
or
mov
or
sub
js
clc
sub
int
inc
jmp
rcrb
rcrb
jne
mov
in
dec
sub
out
cmc
sub
pop
je
fistpll
ds
jecxz
les
lock
insl
mov
xchg
int3
js
rcrb
sbb
sub
insl
jle
mov
xor
das
movsl
jbe
sub
imul
outsl
xor
push
xchg
cmp
dec
fwait
hlt
jl
inc
sarb
or
shlb
jb
mov
stc
xor
or
xor
cmp
add
pop
popf
xor
fdivs
add
mov
imulb
sub
push
push
jp
dec
mov
and
dec
and
xlat
leave
jnp
sahf
adc
add
push
inc
mov
mov
inc
negl
xor
xor
mov
add
outsl
hlt
jmp
decb
push
mov
xchg
pop
enter
int3
inc
push
cltd
mov
lods
daa
mov
hlt
rolb
les
mov
jmp
sub
cmc
or
pop
or
push
repz
push
cld
imul
ficoml
outsl
shlb
cmp
cmpsl
pop
insb
sbb
xor
inc
xor
mov
int3
scas
inc
fs
jnp
and
cwtl
hlt
inc
sarb
jne
or
add
push
mov
add
out
aam
push
jae
jbe
test
pusha
pop
iret
sti
xchg
jne
fsts
jno
vmulpd
or
or
mov
dec
dec
mov
sbb
jb
mov
xor
call
rcrl
mov
into
fwait
sbb
pop
dec
sbb
scas
call
and
sub
or
mov
aad
inc
sub
rcrb
sbb
jmp
push
push
test
sbb
in
dec
out
imul
mov
cmp
negl
fwait
mov
sarb
enter
js
or
out
test
and
outsl
or
cmp
mov
call
in
mov
scas
jmp
sub
dec
in
popf
sbb
xchg
arpl
jmp
mov
mul
in
mov
les
jg
xchg
push
sahf
cmpsb
test
xchg
xchg
test
mov
inc
ljmp
subl
das
sahf
repz
fs
add
je
cmp
dec
pop
xchg
cltd
je
out
jne
pop
mov
mov
add
inc
sub
repz
std
mov
subl
jecxz
and
adc
je
or
or
push
stos
data16
push
mov
jb
ljmp
cmp
xor
and
jecxz
js
lahf
dec
inc
xchg
lcall
lahf
popf
push
jns
outsb
shrb
into
ss
mov
ja
aad
cmp
rorl
stos
mov
sbb
mov
into
aam
inc
cmp
mov
cld
loop
inc
fdivrs
mov
loope
cmp
pop
inc
sbb
cmpsb
xchg
lods
out
cmp
out
mov
inc
pop
test
loope
dec
popf
pusha
es
dec
mov
cs
repz
jns
outsb
out
sti
cmpsl
dec
cli
and
rolb
push
jbe
xor
inc
pop
inc
iret
movsb
sbb
mov
mov
ljmp
repz
add
fstl
inc
ret
push
sbb
sar
sbb
jbe
add
scas
jo
leave
mov
dec
scas
or
xor
jno
pop
mov
push
sahf
ret
pop
pop
adc
mov
mov
test
leave
pop
sbb
sub
add
into
pop
xor
pop
daa
mov
lods
push
outsl
test
ljmp
shl
out
fwait
push
xlat
mov
stos
sub
rolb
jae
and
jae
in
scas
ret
mov
jmp
je
out
jno
insb
out
pop
mov
pop
xor
out
das
dec
lock
jl
das
dec
iret
shl
negl
imul
adc
push
or
mov
loopne
pop
lods
jnp
sbb
cmp
lea
into
orb
push
jns
xor
add
mov
nop
xchg
xlat
mov
pop
dec
pop
jno
iret
sbb
leave
cmp
ljmp
loopne,pt
iret
jl
in
xchg
pop
rcrl
mov
sub
out
mov
cmp
fnstenv
int
js
rcrb
sub
das
pop
aaa
stos
push
insb
ror
sbb
inc
lahf
mov
and
lods
push
imul
push
rorb
push
aas
test
sbb
out
out
sub
mov
push
mov
in
loop
rol
fs
xchg
es
dec
dec
test
mov
imulb
int
ja
fisubl
xor
cmp
mov
pop
jb
add
inc
cmpl
fists
mov
call
repz
inc
insl
out
popf
pop
adc
fsubs
pop
mov
fnsave
mov
je
or
aaa
imul
and
hlt
cwtl
adc
dec
rcrl
idivl
shr
or
ret
inc
mov
push
or
test
fidivl
scas
aaa
sbbl
hlt
mov
mov
adc
lret
rorl
in
lods
stos
cmp
jmp
pop
fisubl
dec
xor
jae
mov
in
in
inc
fmuls
inc
lcall
pop
dec
jge
fnstsw
add
jp
rorl
stos
fistl
jge
xlat
scas
dec
fwait
lods
hlt
dec
in
fbstp
jb
sahf
pop
mov
mov
pop
xchg
movsb
pop
out
lock
jle
scas
pop
out
ret
mov
adc
adc
movsl
out
cmp
scas
dec
cmc
or
jns
jl
xor
cmp
jle
in
jns
fwait
lea
mov
dec
mov
cwtl
cmp
addr16
mov
iret
or
aam
stos
dec
fldt
and
sbb
push
arpl
mov
cmp
push
inc
add
mov
lcall
les
shll
mov
push
mov
inc
ret
inc
xchg
outsb
xor
int
pop
loop
test
sbb
test
rep
pop
sbbl
out
fwait
mov
push
dec
in
clc
popa
mov
pop
or
xor
lret
jnp
jbe
mov
inc
push
push
jbe
lods
ret
aad
mov
add
inc
mov
leave
pop
jnp
push
xchg
pop
sbb
lret
adc
iret
inc
sbb
scas
sbb
push
imul
cmp
cwtl
hlt
jle
imul
ja
clc
jno
cmpsl
sti
clc
popa
jge
outsl
push
mov
and
loopne
orb
inc
pop
popf
sar
stos
test
imul
mov
push
xchg
bound
add
mov
dec
clc
jb
mov
test
push
ss
inc
cs
ljmp
add
rcrl
in
xorb
lods
jno
cltd
and
push
dec
pop
inc
inc
adcl
fcmove
mov
lret
sar
out
jnp
adc
shll
inc
shlb
add
push
inc
push
aam
adc
xchg
into
jns
add
jb
sub
and
mulb
sbb
in
fildl
aaa
pop
mov
pop
mov
pop
sub
scas
jbe
mov
pop
stos
rcll
inc
mov
in
push
aam
ret
inc
gs
imul
cmp
enter
insl
add
aam
adc
cwtl
xchg
and
gs
inc
push
xchg
nop
adc
daa
adc
adc
sub
pop
daa
push
mov
pop
mov
rolb
sti
push
sbb
cld
cmpsl
adc
dec
roll
inc
push
adc
push
dec
aad
les
mov
outsb
xor
scas
popa
lods
fldt
ljmp
ret
xchg
out
mov
fildll
push
sahf
jns
loope
pop
lods
push
jge
and
push
pop
bound
jg
out
out
out
inc
xor
push
mov
mov
int
or
lcall
xchg
sbb
add
sbb
sbb
enter
int
and
fcmovbe
cmp
mov
pop
and
adc
cmp
and
xor
xchg
jg
enter
and
xor
gs
sarb
call
adc
addr16
add
test
lret
jo
sbb
sbb
arpl
and
ja
es
js
and
push
inc
push
call
add
cld
test
popa
push
push
fsts
cwtl
mov
sub
mov
xchg
xor
fs
outsb
xor
push
xor
lea
aaa
insb
scas
dec
sub
mov
frstor
xchg
inc
jno
push
in
movsb
mov
ret
fdivl
ficoml
lds
inc
lret
or
jl
rorl
cmpsb
lods
adcl
sub
ret
mov
mov
lods
cs
movsb
cmc
xchg
sub
js
es
add
adc
clc
xor
mov
adc
dec
aam
stc
mov
test
cmpsb
test
or
adc
imul
pop
dec
test
std
test
lret
pop
mov
mov
xchg
sbbl
sub
rcrl
add
push
fwait
and
cmp
or
inc
mov
inc
add
pop
add
jo
cmpsl
mov
jbe
push
mov
sub
mov
xchg
mov
xchg
scas
pop
mov
aaa
sub
add
push
adc
sub
in
jne
pop
pop
cmp
ret
or
test
sbb
ja
in
ss
shlb
sub
xchg
stos
inc
lcall
mov
xor
aad
inc
jb
loopne
sahf
mov
clc
dec
pop
bound
add
ja
dec
dec
daa
add
icebp
push
or
xchg
aas
and
je
mov
fcoms
jbe
fnstsw
mov
lret
xchg
ret
add
bound
cwtl
add
dec
xchg
jo
and
bound
xchg
fistpl
hlt
inc
or
push
nop
shll
fldcw
leave
inc
rcl
stos
inc
test
jle
incl
inc
orl
inc
lods
enter
push
mov
hlt
mov
mov
sbb
lret
rorl
in
lods
stos
cmp
jmp
pop
fisubl
mov
fbstp
mov
in
in
inc
fmuls
inc
lcall
pop
dec
jge
mov
adc
aad
mov
lods
js
inc
shrl
cltd
fistl
mov
xchg
push
pop
mov
inc
in
cmp
dec
push
push
jo
inc
lcall
push
pop
int
or
fsubs
pop
cmp
sbb
push
sahf
cmpsb
test
xchg
xchg
test
mov
inc
ljmp
subl
sub
hlt
in
jb
add
je
cmp
dec
pop
xchg
cltd
add
pop
mov
mov
add
mov
jmp
clc
int
shlb
mov
addr16
rcll
inc
and
test
cmp
dec
or
cmp
push
aam
mov
movsb
mov
cmpsb
ret
outsb
xor
and
ss
int
inc
jno
and
sub
flds
fisubs
pop
push
scas
adc
dec
add
cwtl
mov
or
xchg
addb
mov
fsubrl
rorl
test
xchg
ficompl
cmp
fsubrs
xor
mov
lock
ret
jge
dec
mov
fists
pop
mov
rolb
lods
push
rcrl
repnz
test
stc
add
pushf
xchg
sub
cltd
pop
xchg
imul
xor
inc
and
aas
int
pop
clc
jb
xor
out
mov
and
mov
lds
and
sub
fstp
les
repz
ret
and
fcmovu
movsl
mov
je
imul
bound
jmp
mov
push
icebp
cmpsl
test
mov
or
cmp
inc
dec
hlt
xor
int
imul
mov
lret
imul
mov
movsl
test
mov
aad
filds
or
in
dec
and
or
js
sbb
cmpsb
sub
sub
std
std
inc
jnp
push
push
inc
jle
mov
cmp
fs
xor
sbb
popf
scas
inc
fstl
jnp
sub
or
inc
int3
cmpsl
inc
test
push
lret
cmc
ret
fisttpl
dec
and
push
std
int
and
mov
jp
fidivrs
jnp
sti
push
jne
inc
pop
iret
add
rcll
inc
inc
fidivrs
fpatan
leave
sbb
add
movsb
jne
mov
daa
popa
mov
cltd
sahf
inc
sub
pop
sub
jbe
ficoms
or
jg
outsl
mov
out
mov
and
mov
repnz
mov
in
mov
imul
or
mov
lahf
dec
and
push
in
adc
stos
push
fists
push
xor
push
lea
push
lret
imul
push
jne
call
popa
xchg
dec
mov
or
dec
sub
repz
push
cmpsl
fistpl
mov
jbe
das
mov
push
outsb
loope
jge
or
mov
mov
inc
out
ljmp
adc
or
data16
xchg
loope
iret
cmpsl
jecxz
fsubs
mov
mov
xchg
xchg
ds
xor
addl
out
rcr
xchg
outsb
add
sbb
adc
pop
dec
adc
imul
test
cs
sbb
in
lock
popa
shrl
push
cmp
or
outsl
aam
sub
insb
push
imul
in
insl
ficomps
fldcw
fists
push
aaa
mov
dec
pop
adc
jno
fildll
cltd
int
dec
inc
fidivrl
mov
pop
and
xorl
in
dec
push
xchg
adc
mov
pop
jno
lds
mov
lret
lahf
xchg
fsts
mov
dec
mov
sbbl
xchg
pop
adc
jg
add
and
add
or
incl
sbb
push
dec
jp
mov
xlat
sbb
lret
and
fidivrs
jnp
sbb
andl
add
test
add
xor
xchg
and
jo
pop
nop
les
cld
shlb
iret
cli
mov
adc
and
push
inc
push
pop
add
mov
lcall
push
pop
add
push
and
adc
push
mov
mov
ret
pop
xchg
mov
inc
xchg
jbe
pop
inc
mov
mov
fldt
ljmp
movsl
leave
pushf
imul
dec
inc
sbb
nop
mov
or
imul
inc
adc
mov
lret
jnp
mov
shl
cmpsl
fsubr
adc
mov
and
push
sbb
mov
sub
or
repnz
lret
mov
or
mov
js
mov
pop
xor
jg
test
mov
test
ljmp
mov
ret
loope
sbb
loop
add
lahf
sti
cwtl
inc
data16
add
xchg
subb
or
and
or
mov
mov
jb
add
mov
dec
pop
ret
fs
fwait
aaa
ja
xchg
jbe
mov
rcr
or
lcall
or
mov
adc
js
clc
sub
int
inc
jmp
rcrb
rcrb
jne
mov
in
dec
sub
out
cmc
sub
pop
je
fnstsw
ds
loopne
xor
xor
xchg
mov
sbb
adc
stos
stos
pop
stos
xchg
push
pop
loop
inc
pop
mov
shlb
dec
arpl
xchg
mov
pop
iret
xchg
fs
sbb
push
xchg
int3
jo
daa
rorl
dec
and
mov
inc
lock
fnsave
cmp
xchg
ja
mov
mov
std
push
lret
mov
push
sbb
push
push
mov
iret
shrb
sbbl
das
xchg
enter
jns
hlt
jl
out
jg
fdivs
mov
imul
sbb
xor
clc
adc
add
incb
mov
cmp
lea
jbe
push
mov
cmp
dec
mov
mov
lahf
dec
and
push
in
outsb
xor
and
push
mov
hlt
and
ror
mov
dec
push
cmp
in
imul
fsub
jbe
lods
push
outsl
sbb
sub
sub
mov
das
mov
sti
mov
in
mov
fcom
ss
rorl
add
inc
arpl
adc
push
aas
pop
sub
sbb
fwait
sub
add
jmp
movsl
fists
outsl
addr16
xor
cli
pop
lods
scas
jecxz
jae
dec
inc
test
fidivrs
fildll
mov
mov
mov
jae
and
packssdw
push
jo
insl
das
fidivl
adc
addr16
mov
ret
mov
scas
push
xchg
adc
aaa
call
ljmp
fdivp
sub
fists
rolb
rcrb
hlt
scas
lock
or
fs
icebp
mov
movsb
lds
nop
lds
clc
mov
loop
cmp
scas
movl
in
mov
outsb
mov
pop
sub
inc
sbb
mov
fcoms
and
dec
aam
jne
and
sub
lods
xchg
int3
mov
pop
xor
sahf
fsubs
jbe
lods
adc
fcompl
lods
add
mov
cmp
das
push
roll
scas
dec
repz
ljmp
mov
int
imul
mov
pushf
mov
sahf
fsubs
ja
xchg
pop
push
out
int3
fwait
nop
xchg
xor
gs
rcll
inc
add
bound
je
test
cld
or
inc
push
daa
jne
jnp
xchg
dec
fstl
sbb
fwait
shlb
inc
add
fidivl
sbb
mov
jbe
orl
jmp
lods
outsb
sbb
and
and
push
scas
cmp
jno
cmpsl
aaa
push
lea
mov
in
imul
movsb
shll
lock
inc
sub
int3
adc
cs
stos
push
repnz
xchg
xchg
and
fcoml
xchg
into
push
mov
xchg
fucom
inc
and
mov
xchg
cmp
bnd
popf
jno
insb
rcrb
mov
scas
xor
into
cld
xor
insb
cmpsl
imul
gs
fidivl
pop
lods
fs
lcall
mov
dec
sbb
push
or
jb
sbb
mov
sbb
sub
es
je
seto
pop
xchg
cltd
int3
add
pop
sbb
sbb
les
cmpb
sti
stos
inc
sahf
cli
pushf
imul
mov
hlt
mov
aaa
out
mov
jne
dec
je
add
mul
cmp
xorl
fdivrs
cld
xchg
test
mov
sub
xor
repz
jle
mov
lret
jp
sub
or
pop
mov
cs
stos
dec
addl
je
mov
rorl
test
xchg
cmp
cmp
fdivs
mov
mov
lock
ret
jge
dec
mov
fists
pop
mov
rolb
lods
push
rcrl
repnz
test
stc
add
pushf
xchg
sub
cltd
pop
xchg
imul
xor
inc
and
aas
int
fs
mul
jle
mov
cwtl
inc
data16
or
jb
leave
data16
daa
ss
stos
jae
nop
and
push
or
mov
adc
movb
and
int3
inc
lds
cltd
arpl
imul
enter
repnz
jo
mov
cmpb
push
aas
lds
inc
rcrb
sbb
inc
mov
adc
stos
jb
dec
repz
pop
test
lret
cmp
jae
lahf
hlt
in
push
xchg
movb
ret
movsl
jge
xchg
add
das
or
xchg
dec
pop
stos
pop
bnd
xchg
lods
scas
push
and
sub
es
test
mov
aad
pop
dec
jno
dec
fstpl
mov
scas
pop
out
ret
cld
jae
cld
sbb
sbb
jae
dec
jmp
xchg
pop
out
or
int
sbb
mov
xchg
sbb
aad
cmpsl
into
call
inc
cmp
jne
fwait
push
loopne
adc
inc
inc
mov
mov
cmp
and
add
sbb
clc
movsb
cmp
outsl
ja
add
sub
std
fstl
add
popf
mov
dec
lds
adc
pop
aad
ret
outsb
ja
cmc
pushf
inc
xchg
and
movsl
mov
test
shl
xchg
mov
mov
pop
dec
push
cld
mov
mov
push
cmc
fcmovnu
mov
imull
fs
xchg
daa
push
push
jl
lret
rcrl
mov
xor
mov
leave
xchg
inc
mov
push
into
fmull
inc
sbb
cmp
enter
call
cli
icebp
sbb
xchg
js
mov
mov
repz
push
xchg
lods
cmp
loopne
xchg
pop
jae
pop
stc
insl
stos
test
out
cmpsl
mov
jg
jae
xchg
xor
dec
mov
push
jo
stos
loope
lea
repnz
leave
inc
xor
popf
inc
aaa
mov
int
add
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
mov
out
inc
mov
and
mov
dec
dec
xchg
jle
add
mov
dec
lods
jg
leave
gs
xchg
movsb
leave
pop
testb
xor
ljmp
push
out
fwait
mov
push
dec
in
clc
popa
mov
in
and
jmp
lret
data16
ljmp
call
pop
xor
sahf
fcoms
jae
or
inc
arpl
lea
repz
ds
jo
and
popl
leave
jnp
or
test
aam
sahf
cmpsb
sub
mov
fists
out
cmp
sbb
sti
mov
in
and
aas
lahf
es
dec
loope
pop
sbb
decb
and
in
push
or
sub
mov
inc
inc
push
add
call
mov
sbb
mov
mov
addb
add
sbb
mov
jmp
lret
outsl
test
push
stos
mov
push
iret
lods
leave
push
sbb
xor
mov
adc
dec
adc
std
mov
add
scas
fsubr
adc
sub
and
xchg
fimull
mov
loop
cli
icebp
xchg
jmp
lcall
xchg
pusha
or
sti
fstps
mov
sub
js
stos
lods
or
lock
jae
fdivp
xor
sub
adc
pop
ja
nop
xchg
mov
lahf
xchg
mov
aaa
xor
scas
into
movsl
xor
mov
and
push
orb
je
dec
jle
nop
push
rol
test
or
sbb
xchg
add
and
test
arpl
call
inc
movsb
jle
ljmp
cmp
jecxz
inc
mov
rolb
gs
rcrb
repnz
icebp
mov
int
inc
sbb
push
mov
lock
mov
jnp
in
idivb
or
push
xchg
ss
outsl
mov
std
fistpll
stc
mov
mov
test
in
andb
mov
fcomps
mov
negl
bound
adc
push
jb
shrb
stos
adc
pop
and
mov
out
mov
push
roll
scas
inc
or
pop
mov
icebp
or
out
les
out
dec
mov
insl
jmp
mov
aad
fldcw
xchg
ds
out
hlt
or
sbbb
hlt
test
cmc
clc
jnp
xchg
push
cwtl
sbbb
cmp
cmpb
test
imull
pop
loopne
mov
push
cmc
sbb
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
fmull
cwtl
dec
xlat
mov
and
scas
arpl
mov
jne
adc
cmp
push
xor
div
pop
addr16
dec
dec
test
lahf
or
xchg
cmp
xchg
stos
ja
add
out
and
sub
es
test
mov
into
inc
ja
adc
xor
jl
pop
out
ret
cld
jae
cld
out
daa
add
mov
pop
cld
mov
inc
mov
dec
insb
mov
inc
loopne
imul
pop
out
inc
inc
push
adc
aam
and
scas
xchg
sub
inc
mov
inc
lock
lahf
out
jno
les
jno
dec
jmp
sub
pop
mov
rolb
jle
ljmp
cwtl
lret
xor
push
fwait
mov
adc
cli
add
and
hlt
mov
rorl
or
sub
aas
outsb
xor
stos
dec
in
ficoml
jmp
mov
jmp
in
fisttps
mov
xchg
lds
sub
into
push
sarl
mov
cmp
sbb
cltd
jo
test
jl
or
push
inc
lcall
sub
es
fs
lahf
jo
fists
xchg
push
insb
mulb
int3
sti
or
fadds
sbb
adc
rorb
orl
ffree
dec
aam
stc
lock
add
mov
popf
push
stc
arpl
or
and
out
cmp
mov
iret
insl
mov
sbb
sbb
dec
es
xor
xchg
sub
cs
dec
popa
pop
and
jg
pop
adc
call
lds
jge
xor
or
inc
add
mov
mov
stos
adc
outsl
mov
xor
insb
xor
lret
mov
in
addr16
push
cli
add
mov
mov
flds
inc
ds
inc
ret
jnp
imul
nop
insb
shlb
insl
or
xchg
mov
xchg
adc
data16
pop
mov
ficoms
jbe
scas
fcmovbe
iret
push
inc
cmp
cmc
and
adc
jecxz
and
mov
andl
rcr
adc
sti
and
mov
mov
mov
jae
inc
in
in
test
mov
jb
inc
cltd
inc
in
cmp
sub
pushf
ret
sbb
std
sub
xor
shrl
pop
sbb
xchg
inc
push
fwait
jp
mov
or
sarl
add
sbb
orl
shrl
jmp
decb
aad
push
arpl
push
lds
ficomps
fcomi
call
sub
jecxz
jge
loopne
int
jae
mov
xor
dec
shrb
insb
rcrb
mov
jno,pn
sub
movsbl
sub
in
xchg
aas
cmpsb
int3
sub
lods
mov
jae
data16
pop
test
mov
or
btc
and
dec
fwait
ljmpw
pop
jb
add
inc
cmpl
fists
mov
call
repz
inc
insl
out
popf
pop
adc
fsubs
pop
mov
fnsave
mov
je
or
aaa
imul
and
hlt
cwtl
adc
dec
xchg
popa
add
xor
add
out
int3
pusha
adc
jl
inc
mov
xor
and
daa
adc
xorb
mov
stos
sbb
data16
mov
aad
insl
and
adc
and
lods
fcmovnb
inc
pop
jno
pop
cmp
mov
rcl
mov
fists
inc
popf
lret
push
push
jbe
lods
push
outsl
sbbl
pushf
mov
xchg
xor
ja
shlb
dec
cmpsl
jle
pop
cmpsl
push
insb
lea
scas
shrb
ret
mov
sbb
xor
push
add
nop
cwtl
pop
cwtl
add
les
mov
mov
adc
dec
inc
adcl
mov
push
fmulp
mov
ret
addr16
xlat
sbb
xchg
push
and
les
inc
inc
mov
mov
jmp
and
dec
mov
out
mov
shlb
xlat
dec
fistpll
inc
mov
mov
arpl
cld
popf
ret
punpckhbw
loop
inc
or
pop
test
or
loope
notb
test
loop
stos
mov
imull
stos
jnp
stos
ret
fcoms
adc
and
ror
mov
lret
xchg
mov
in
lret
cmp
subb
pop
imul
and
push
pop
jmp
movsl
push
fbstp
inc
add
ret
adc
and
or
cmpsl
push
pop
jno
in
mov
cltd
mov
and
sub
push
fisttpl
adc
repnz
xchg
out
mov
xchg
cwtl
inc
stos
adc
fidivrl
jp
pop
hlt
mov
out
inc
add
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
jle
nop
lds
sub
adc
insb
pop
sbb
push
inc
push
pop
cltd
subl
xchg
in
mov
push
sbb
daa
adc
mov
jle
sbb
data16
pop
mov
mov
push
stos
lods
scas
imul
pushf
mov
xchg
clc
jbe
pop
jp
arpl
rorb
mov
jno,pn
or
xor
xchg
enter
arpl
push
cmp
dec
mov
int
or
lcall
xchg
sbb
add
sbb
sbb
enter
int
and
fcmovbe
cmp
mov
pop
and
adc
cmp
and
xor
xchg
cmp
enter
and
xor
gs
inc
add
inc
js
mov
out
cmp
dec
inc
int3
pop
cmpsl
adc
cmp
pop
loopne
les
fdivrl
jge
jl
xor
dec
push
inc
push
pop
push
test
xchg
xor
popa
ret
repz
add
loop
rcl
daa
adc
cmp
mov
jmp
cmp
insb
push
sub
push
mov
mov
xchg
test
push
stos
lea
ljmp
cmp
adc
jmp
ret
xor
add
xchg
xchg
pop
cmc
add
pushf
pop
pop
xchg
xlat
fistl
pop
inc
aaa
push
jae
mov
jno
jb
cmp
adc
les
pushf
jne
jle
fimuls
inc
shlb
aad
adc
cld
dec
cmp
or
dec
cli
je
inc
xchg
out
jb
fsub
inc
jb
test
mov
call
cmpl
test
pusha
leave
adc
inc
roll
xor
mov
popf
das
jnp
sbb
in
out
mov
mov
mov
ljmp
stos
mov
pushf
scas
cmp
or
out
out
cmp
adc
lods
sbb
in
sbb
lock
xor
xor
ret
aad
shlb
add
mov
cmp
sbb
fs
mov
test
scas
movsb
mov
ds
movb
js
pop
fisttpll
add
inc
cmp
adc
enter
insl
or
xchg
add
test
pop
push
mov
aad
negb
roll
in
mov
das
sub
out
ljmp
cmp
das
push
roll
dec
pusha
das
out
rorb
cmc
jl
das
dec
xor
cmpl
scas
dec
mov
pop
scas
mov
lods
dec
fsts
daa
pop
mov
arpl
sahf
sub
adc
jg
fwait
jb
out
lahf
stc
cwtl
shll
or
add
lds
mov
stos
ror
jecxz
push
mov
rcll
idivl
xor
int
rcrl
pop
xor
add
call
fistpl
leave
sub
push
mov
adc
shl
ss
push
sti
cmpl
scas
mov
vmovntps
ficomps
pop
push
stos
test
hlt
int
aam
sub
mov
loop
and
mov
je
or
jne
sub
ret
mov
idivl
int3
and
inc
push
mov
pop
mov
jbe
xorl
and
pop
rclb
inc
jge
inc
insb
out
fwait
mov
test
bound
mov
into
iret
cmp
cs
push
pop
lcall
shlb
mov
pusha
add
mov
inc
jl
xchg
add
fadd
pop
loop
mov
inc
iret
fs
insb
addb
lcall
lret
dec
mov
lea
inc
ret
sahf
rcr
jne
into
lcall
iret
sbb
sbb
ds
lock
mov
aad
fsubrs
sbb
sbb
aas
and
or
xor
sarl
leave
test
cwtl
xor
aaa
jns
in
cmp
sahf
mov
lods
shlb
imul
xchg
ret
rorb
mov
pop
jnp
int
jns
mov
mov
push
sahf
out
rolb
mov
xor
push
arpl
nop
jns
ss
sti
fcmovnu
mov
popf
push
push
stc
and
data16
sbb
cmp
jb
mov
stc
xor
or
test
cltd
cmp
jmp
or
jg
pop
popf
xor
fdivs
add
mov
negb
sub
push
push
jp
dec
mov
jbe
xchg
mov
jp
nop
push
decl
shll
push
dec
push
sbb
aam
jmp
popa
shrl
loop
les
stos
cmp
icebp
mov
daa
push
mov
mov
insb
push
fsubrs
data16
sbb
outsb
xor
and
daa
lods
movsb
aam
jno
pop
cmp
mov
adc
inc
aas
adc
mov
sbb
adc
inc
adc
pop
inc
or
mov
push
mov
sbb
mov
mov
jl
arpl
stos
fists
pop
out
adc
adc
mov
imul
loope
jg
enter
fs
lods
push
arpl
dec
mov
and
adc
aas
mov
pop
jae
inc
insl
in
fstl
cltd
sbb
insb
lock
stc
mov
int
jno
jecxz
fcoms
mov
nop
fcoms
add
invd
xor
pop
dec
sbb
pop
adc
lret
cld
pop
int
fucomi
repz
outsb
iret
xchg
mov
xchg
fists
add
jmp
fs
mov
mov
fildl
je
mov
xor
dec
sbb
rcrb
sub
mov
insb
sarl
incl
stc
arpl
sub
mov
dec
push
lret
pop
xor
test
or
mov
jge
scas
xchg
iret
jmp
aam
jne
insl
pop
fwait
enter
movsb
stos
push
xchg
int3
imul
cmp
imul
bound
pop
jae
loop
jmp
add
mov
ret
fcoms
mov
nop
mov
out
lock
mov
mov
lret
pushf
jb
sti
fucomip
andl
popf
scas
inc
sarl
push
scas
std
int3
inc
aas
ret
mov
push
push
les
movsl
mov
mov
ljmp
fistl
inc
mov
fstps
pop
movsl
imul
pop
lds
add
mov
adc
inc
ret
sbb
inc
pop
repnz
loop
adc
push
pop
leave
jb
cld
rcr
push
jge
sub
cmp
sbb
lahf
jne
pusha
xor
mov
sti
cli
pusha
std
movsl
dec
push
test
fwait
mov
rclb
jle
push
inc
sbb
mov
js
out
cltd
sahf
stos
scas
push
mov
xchg
lea
mov
sahf
pop
and
test
out
jo
jecxz
pop
mov
fcom
xor
out
das
dec
lock
lods
mov
fs
push
mov
out
jae
pushf
sub
shl
test
jnp
sahf
sub
adc
jg
lahf
cmp
hlt
repz
pshufw
repnz
aam
mov
push
imul
in
pop
int
rclb
sub
repz
lods
out
dec
pusha
xor
aam
aaa
test
mov
hlt
test
cmp
dec
or
cmp
push
aam
and
movsb
mov
cs
cmpsb
ret
outsb
xor
ret
scas
arpl
lds
in
push
int
fwait
hlt
xor
leave
jecxz
bound
ss
outsb
test
add
and
and
push
cmp
pop
sub
outsb
add
dec
rolb
jb
fsts
xchg
push
test
es
rcrb
push
xchg
shll
leave
bnd
mov
test
bound
mov
into
iret
cmp
cs
push
pop
lcall
shlb
mov
pusha
add
mov
inc
jl
xchg
add
fadd
pop
loop
mov
inc
int
lods
repnz
xor
mov
jnp
fldcw
xor
cmpsb
dec
rcrb
pop
jno
iret
sbb
leave
sbb
ljmp
loopne,pt
iret
jl
in
xchg
pop
rcrl
mov
sub
out
mov
cmp
fnstenv
int
js
rcrb
sub
test
insb
ror
sbb
inc
lahf
mov
lret
frstor
jmp
push
dec
aad
imul
into
inc
mov
inc
dec
jg
shlb
lret
rclb
mov
fwait
cmpsb
imul
repz
jno
in
mov
mov
jbe
in
test
xlat
pop
mov
pop
out
push
mov
sub
movsb
or
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmc
xor
cmc
jnp
testb
stos
mov
and
call
push
mov
xchg
dec
xorl
inc
xor
imul
inc
fcomps
mov
mov
mov
push
call
bound
push
pop
add
jmp
roll
aam
sub
mov
in
xor
test
ficomps
xchg
mov
push
aaa
mov
dec
scas
mov
fucomp
mov
xlat
push
mov
mov
and
jae
shll
inc
lcall
stos
jbe
lret
mov
xchg
pop
xor
adc
inc
fdivl
jecxz
fistps
adcb
loop
in
dec
and
aam
mov
sbb
push
rclb
in
or
pop
sub
mov
cmp
and
push
test
cmpsb
mov
pop
ret
push
data16
repz
in
es
fs
fcmovb
mov
mov
dec
add
mov
clc
addr16
lahf
jg
dec
push
sahf
sub
mov
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
repnz
mov
aad
inc
sub
xor
lahf
add
push
inc
aad
jle
inc
lahf
push
lock
lods
push
mov
je
fxch
push
test
fistps
les
cwtl
repz
fwait
addb
aad
fisubrl
scas
inc
push
mov
add
and
push
dec
jae
jo
mov
lods
inc
add
inc
cmp
lods
lret
sti
add
inc
arpl
in
mov
cmc
jge
cmpsb
or
rcrl
and
cmp
mov
loopne
aaa
sbb
stos
xor
xchg
sub
and
jmp
push
lds
jg
jnp
out
xor
sbb
call
add
pop
and
daa
hlt
xor
and
int
adc
xchg
pop
pop
lcall
xor
fsubl
sub
push
xor
inc
jmp
push
stos
cmp
roll
dec
jmp
decb
xlat
xor
xchg
xchg
mov
cmpsb
shlb
movsl
push
push
push
rclb
lea
cmp
mov
xor
mov
inc
adc
fadds
sub
mov
rorb
sarl
stos
cmc
fisubrl
sahf
aam
jne
insl
push
pop
xchg
enter
inc
mov
movsb
popf
call
and
test
jge
inc
addr16
hlt
lea
les
add
cs
mov
inc
jp
ror
fmuls
in
dec
cmp
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
in
inc
mov
cmpb
xchg
es
and
shrl
ret
dec
sbb
jo
mov
lcall
lods
dec
pop
mov
filds
inc
jb
call
push
cmove
int
push
pop
add
dec
repz
daa
jne
mov
push
push
adc
push
inc
pop
fbstp
sbb
sub
lret
mov
jmp
push
icebp
add
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
mov
cmpsl
and
sub
jle
fcoml
jbe
fmull
jp
scas
repnz
cmc
or
add
lret
test
mov
mov
dec
lock
lods
mov
fs
dec
cwtl
push
mov
out
jno
push
add
xchg
int3
sbb
dec
incl
jns
lret
sbb
setp
xor
lods
divl
stc
into
add
xchg
mov
ss
mov
ljmp
fdivs
cmpl
adc
push
mov
mov
leave
mov
lea
pop
ljmp
and
jl
pop
adc
xor
sbb
fs
add
sbb
clc
jl
push
pop
lret
mov
lret
sar
xor
pop
jp
adc
add
xchg
dec
pop
in
enter
add
movl
push
nop
insb
and
push
cmpsl
push
gs
jmp
aas
mov
mov
push
ret
scas
inc
and
sub
mov
faddl
xchg
push
js
ret
dec
cmpsl
imul
pop
es
adc
cmp
dec
xor
mov
push
pop
pop
imul
add
mov
xchg
push
test
cmovae
gs
cmp
push
and
dec
dec
mov
xor
or
rcrb
pop
push
test
movsl
outsl
push
dec
cwtl
jo
fdiv
aaa
sub
sbb
shrl
mov
inc
test
sbb
ljmp
in
push
xor
jmp
jp
mov
in
rcrb
sbb
daa
push
pop
dec
mov
adc
lret
jle
fs
cmpsl
dec
out
pop
rcrl
mov
add
loopne
xor
pop
rcl
xchg
mov
lods
inc
pusha
xor
pop
mov
dec
fidivs
sbb
test
add
inc
pushf
cmp
loop
push
sub
xor
jo
jle
scas
pop
out
cld
jb
dec
sbb
add
imul
sahf
lret
jg
scas
mov
out
jb
fsubrl
jbe
out
cmpsl
inc
lret
adc
pop
mov
dec
mov
mov
jo
push
pop
sub
out
hlt
add
pop
ror
arpl
pop
sub
mov
sahf
add
xor
add
jnp
pop
jno
xlat
xlat
faddp
ret
ret
xor
xchg
loop
inc
mov
sbb
xlat
inc
aad
imul
lret
repz
xchg
jle
add
mov
dec
lods
jg
leave
gs
xchg
movsb
leave
pop
testb
xor
ljmp
push
out
fwait
mov
push
dec
in
clc
popa
mov
in
and
xchg
jmp
call
scas
push
adc
insl
pop
loope
push
adc
adc
orb
jecxz
pop
and
in
add
pushf
add
adc
cs
xchg
mov
je
ror
dec
rclb
mov
fbstp
loopne
outsb
imul
sbb
inc
test
daa
dec
out
jno
pop
fisttpl
dec
cltd
leave
mov
mov
adc
mov
rcll
mov
sub
or
lods
lods
inc
pop
cmp
pop
loopne
mov
cmp
dec
adc
clc
lds
cld
outsb
ss
jo
or
pushf
sbb
mov
cltd
xchg
and
mov
test
rorb
ss
xchg
scas
pusha
lods
pop
imul
popf
push
ja
pop
imul
lods
or
fsubl
mov
shlb
lcall
popa
or
xchg
push
es
inc
jb
loopne
pop
jo
sub
btr
outsl
mov
lock
insl
mov
js
inc
int3
or
adc
jo
mov
inc
dec
aam
stc
lock
add
or
popf
push
stc
arpl
or
and
out
cmp
mov
iret
insl
mov
sbb
sbb
dec
es
xor
xchg
sub
cs
dec
popa
pop
stos
or
jg
pop
adc
call
ret
loopne
jl
mov
mov
mov
in
push
movsb
sbb
cmp
xor
popl
into
cld
sub
xchg
das
pop
mov
push
adc
stos
mov
nop
scas
push
test
int
inc
fbstp
outsl
aas
sub
jo
fldt
std
dec
les
test
rcrb
pop
bound
stos
sub
wrmsr
sub
lret
jnp
lret
pop
inc
mov
jb
aaa
or
mov
dec
mov
mov
imulb
lea
addr16
fimull
lahf
adc
clc
les
mov
inc
xor
fdivs
add
push
test
xchg
adc
data16
mov
popf
push
stos
icebp
mov
ret
cmpsb
mov
fcmovbe
or
mov
xlat
pop
adc
inc
cmp
sbb
inc
out
ret
fs
lock
stos
cmovne
mov
xor
dec
rolb
or
loope
sbb
xlat
pusha
mov
popa
and
es
test
popa
jecxz
loopne
sbb
in
aaa
stos
add
dec
mov
add
int
jg
adc
rcrb
clc
mov
push
mov
push
adc
sub
scas
push
cmc
mov
mov
mov
std
cmpsl
jae
test
rclb
inc
mov
popa
mov
jl
or
cwtl
lock
movsl
xchg
mov
add
cmp
push
inc
sbb
das
fildl
mov
clc
jo
mov
cmpl
add
xcrypt-ctr
cmpsl
fadd
xor
inc
and
shrb
stos
push
shll
pop
dec
add
mov
fwait
mov
mov
js
loopne,pn
rcll
or
and
es
mov
push
loop
xchg
ds
push
dec
mov
popf
negl
mov
out
les
inc
cmp
or
imul
jecxz
add
scas
xchg
cmc
lret
in
pop
add
ljmp
lods
jmp
cmp
fnstenv
xchg
xor
std
dec
clc
xchg
xchg
shlb
sub
cmp
or
pop
call
imul
movsb
cs
adc
xor
cs
stos
push
or
shl
je
fisubrs
cmpsb
dec
sub
sub
popa
or
xchg
int3
jmp
scas
aas
test
xchg
in
cmpxchg
out
jno
insb
out
pop
mov
scas
paddw
add
pop
pop
pusha
sub
ror
jecxz
inc
mov
es
mov
pop
and
xchg
imul
add
ret
ret
fldenv
mov
inc
lods
out
std
into
add
and
rorb
add
mov
or
je
out
loope
mov
ret
cmp
or
push
push
push
lds
sbb
mov
orl
mov
test
cmp
pop
lret
cmp
mov
dec
sbb
xchg
cltd
jno
cltd
xchg
and
mov
test
cli
pop
jge
pop
mov
sub
lods
and
out
push
inc
ds
mov
insl
aam
inc
stos
adc
push
cmpsb
test
shlb
stc
punpckhwd
dec
in
dec
pop
sahf
mull
dec
in
les
fistps
inc
pop
dec
rcrb
jno
orl
sbb
inc
inc
loope
stc
loope
js
test
jl
jge
xor
jle
stos
aam
imul
push
mov
jl
cmpsb
xchg
sub
mov
rcll
cmpsb
call
xchg
pop
cwtl
out
cwtl
je
enter
rcll
ret
inc
push
jb
adc
mov
sbb
bound
ret
adc
and
cmp
adc
popf
je
pop
adc
mov
mov
sbb
sbb
xor
rorb
pop
dec
dec
sbb
xchg
out
push
mov
sbb
loop
mov
dec
pop
stos
dec
popa
ljmp
push
pop
push
pop
inc
jle
movsb
inc
add
cmc
mov
hlt
dec
inc
sub
sub
add
dec
inc
popa
jg
out
insl
dec
mov
cwtl
push
and
dec
subl
jae
in
mov
fdiv
test
xchg
jo
rcl
lahf
xchg
inc
aam
clc
xor
mov
adc
and
leave
stc
mov
movsl
inc
push
mov
or
in
jg
fsubs
std
cmp
clc
les
cmp
enter
dec
sbb
sub
dec
push
aam
iret
mov
stc
les
fwait
dec
shlb
imul
pop
cmpsl
pusha
mov
mov
in
mov
je
add
inc
jnp
pushf
out
cmp
adc
push
imul
lds
inc
inc
xchg
mov
pop
dec
sbb
lods
xor
rcrb
jne
cmc
fwait
inc
cs
inc
popf
gs
xlat
xchg
cmpsl
mov
and
xlat
cli
aad
xchg
add
jle
mov
sub
push
popa
fsts
movsl
fstl
cld
test
mov
dec
shll
pop
push
fmuls
fstps
popa
sbb
in
mov
adc
nop
std
pop
test
dec
mov
fnstenv
pop
repnz
repnz
test
jnp
je
sub
adc
jl
jns
outsb
mull
or
les
daa
and
add
cltd
mov
movsb
iret
out
xor
aas
mov
mov
cs
fwait
loopne
test
rolb
js
in
dec
jo
push
lcall
adc
cld
sub
adc
insl
jecxz
and
sbb
and
push
push
hlt
mov
mov
adc
lret
rorl
in
lods
stos
cmp
jmp
pop
fisubl
or
fbstp
mov
in
in
inc
fmuls
inc
lcall
pop
dec
jge
repz
mov
adc
mov
mov
push
cmp
xchg
stos
sbb
aas
scas
shrb
movzwl
outsb
or
leave
loop
arpl
jne
ret
jnp
scas
inc
repz
push
fisubrl
xchg
add
jg
daa
daa
pop
cmp
movsb
jbe
xor
and
mov
xor
pop
in
jnp
sbb
andb
add
pusha
cmp
data16
inc
addr16
xor
mov
int
push
and
add
mov
and
push
inc
push
push
push
lds
or
sahf
add
ret
mov
hlt
xor
stos
jns
sub
sbb
inc
jbe
xor
out
mov
mov
sub
push
add
inc
push
push
int
ljmp
and
call
iret
imul
xchg
xchg
mov
mov
lds
xchg
xor
push
mov
les
lcall
pop
jno
lds
jge
inc
cmpb
fsts
mov
dec
mov
sbbl
xchg
pop
adc
jg
add
and
add
or
incl
sbb
push
dec
jp
mov
xlat
sbb
lret
and
fidivrs
jnp
sbb
andb
add
pusha
cmp
data16
inc
sbb
push
or
push
iret
hlt
aam
stos
dec
sbb
adc
and
push
inc
push
push
cltd
shr
movsb
ret
es
repnz
enter
jle
insl
andl
adc
popa
sahf
cli
jecxz
cmc
add
popa
outsb
into
push
or
cmp
mov
test
hlt
jge
lods
jae
popf
jnp
inc
loop
cmp
and
fmuls
pop
sbb
or
addb
dec
jo
dec
dec
pop
pop
push
dec
fs
cwtl
push
mov
lods
xchg
push
es
sbb
aas
stos
jmp
iret
test
inc
xchg
in
fwait
and
cs
rorl
cs
fadds
mov
inc
pop
dec
lret
inc
inc
pusha
test
fwait
lods
sbb
cld
xor
scas
push
add
cwtl
ds
mov
inc
mov
shl
rcll
addl
push
pop
inc
mov
pushf
cmp
rolb
mov
sbb
sub
test
cmc
xor
movsb
sbb
pop
inc
add
mov
and
push
dec
cmp
and
jmp
cmpsb
insb
inc
sbb
in
ja
mov
add
adc
push
insl
xchg
push
mov
outsb
xor
and
jge
imul
pop
push
jne
fisubrs
push
sahf
jge
loopne
jp
rorb
enter
cwtl
rorb
inc
shl
ficoml
mov
xchg
stos
inc
lcall
imul
dec
jmp
cltd
rol
popa
lods
lds
xchg
cld
add
loope
pop
inc
add
xchg
jecxz
sbbl
cmp
es
cld
dec
cmc
sbbl
and
adc
aas
mov
aaa
stos
lds
cmp
xchg
jnp
enter
mov
jmp
and
es
fdivs
dec
pop
add
stos
out
stos
lcall
cmp
rol
xchg
adc
adc
leave
pop
pop
flds
jo
sub
insb
adc
out
iret
dec
aas
sbb
inc
jg
hlt
loop
inc
sbb
iret
adc
sbb
sub
pop
cwtl
jl
imul
inc
xchg
lods
hlt
xchg
sub
vandnps
push
aaa
pop
push
lods
push
sub
lods
mov
call
adcl
cmp
mov
xchg
add
stc
push
sub
movsb
sub
sbb
jle
cmpsl
or
inc
xor
adc
jnp
jg
xor
mov
inc
leave
xchg
adc
cmpl
xlat
mov
aad
insl
mov
sub
mov
dec
mov
fisubrs
stc
add
fidivrs
lahf
sub
out
xor
sbb
add
jecxz
cmp
cmpsl
adc
mov
mov
sbb
jb
mov
xor
call
rcrl
mov
into
fwait
sbb
pop
dec
sbb
scas
call
and
sub
or
mov
aad
inc
sub
rcrb
sbb
jmp
push
push
test
sbb
dec
mov
pop
push
mov
in
daa
push
jle
mov
inc
nop
insb
shlb
movsl
out
stc
xchg
scas
push
mov
dec
outsl
sub
test
add
sub
fstpt
loopne
adc
dec
mov
mov
aad
adc
pop
dec
decb
std
jb
jmp
std
xchg
and
data16
mov
popf
push
stos
icebp
mov
fdivl
popa
pop
cmp
call
add
enter
rorb
dec
adc
cmp
and
nop
and
andl
push
xchg
or
push
pop
lods
arpl
call
mov
stc
adc
inc
ret
shrb
in
out
mov
adc
orb
and
jmp
add
out
xchg
push
mov
dec
push
in
int3
inc
push
cltd
mov
icebp
sub
push
in
dec
push
test
jae
pop
xchg
les
add
jp
les
adc
pop
xchg
cwtl
adc
stos
jge
pop
sbb
sbb
adc
lds
aam
and
cmp
lods
fbstp
push
aas
cmpsl
sub
sub
lods
inc
pop
or
pop
lock
jl
xor
jge
jge
outsl
jg
cmc
dec
mov
scas
push
rcll
xchg
and
std
js
cs
icebp
in
jns
popf
outsl
fs
add
les
das
outsb
add
rcll
adc
lret
rcl
ficoms
or
adc
leave
in
ljmp
dec
adcl
hlt
test
sahf
adc
jecxz
popf
fwait
add
jo
pop
adc
repnz
add
lods
cmpsb
pop
sub
inc
clc
lds
lock
xchg
jle
sahf
sbb
ficomps
sub
lahf
cmp
mov
mov
test
dec
push
push
dec
gs
jno
push
mov
test
sub
sarb
out
movsb
clc
dec
add
test
jmp
sub
mov
out
scas
inc
fwait
xor
bnd
jle
pop
sbbl
ds
scas
dec
repz
and
push
call
pop
dec
aam
stc
lock
int3
lds
or
and
out
cmp
mov
iret
insl
mov
sbb
dec
es
xor
xchg
sub
cs
dec
popa
pop
ret
mov
pop
adc
call
cmp
pushl
cli
pushf
jmp
clc
sti
imul
inc
daa
jne
xchg
test
or
outsl
mov
icebp
pushf
jle
inc
scas
push
xor
mov
mov
aad
mov
stos
mov
or
scas
bound
cmc
cli
and
aam
stc
dec
push
out
stos
jb
lret
aad
add
aam
addl
add
dec
sbb
gs
fisttpll
jbe
pop
jp
cmpsl
sbb
leave
pushf
lds
xchg
bound
jne
loop
in
nop
xchg
mov
das
pop
mov
es
push
icebp
das
push
xor
mov
mov
fnstcw
cmp
jbe
jnp
out
cmpsl
jp
fiaddl
mov
addr16
into
add
xor
xchg
inc
jno
sub
add
xchg
mov
pop
xor
xchg
mov
cmp
cmp
call
hlt
movsl
repz
jne
les
cmpl
sbb
imul
mov
adc
mov
and
bnd
fldcw
lret
loopne
ret
sbb
popf
fcompl
inc
mov
lds
cli
xor
and
sbb
xchg
enter
loopne
sbb
pushf
mov
adc
iret
insb
rcrb
pop
sub
loope
jmp
enter
fsts
xchg
push
mov
aas
test
xchg
adc
pop
mov
pop
mov
pop
sub
pop
cld
repz
out
das
in
rorl
mov
fsubl
addr16
shrb
pop
jae
inc
and
cmpb
xchg
fldl
add
out
enter
push
hlt
enter
movsl
inc
sbb
xchg
cmp
movsb
cmp
stc
inc
jp
pop
cs
jbe
mov
jns
pop
lcall
and
sbb
add
mov
inc
roll
push
jbe
push
or
sbb
dec
es
clc
sub
ficomps
shll
fistl
lea
sub
jb
fstl
movsb
shll
lock
inc
sub
sub
inc
pop
jecxz
mov
dec
sub
cmpsb
dec
sub
cmpsl
pop
pop
mov
push
stos
push
push
jmp
jae
fisttps
in
out
jns
inc
add
mov
ficoms
mov
clc
dec
xor
and
adc
mov
inc
int
jns
cli
jle
fwait
sub
sbb
repz
mov
jmp
and
es
fdivs
jle
push
popa
mov
call
ja
fistpl
hlt
xchg
inc
in
push
addb
pop
add
xchg
lods
loopne
mov
pop
jle
incl
inc
addl
adc
stos
add
inc
mov
and
push
xchg
sub
pop
mov
insl
imul
cli
push
scas
jnp
stos
inc
in
test
mov
lds
pushf
cmp
mov
or
sbbl
inc
les
push
push
ja
nop
test
repz
lea
pop
pusha
jle
das
pop
icebp
sbb
cmp
fs
loop
out
lods
shrb
das
jo
sbb
je
jge
leave
cmpsl
js
fcomip
jbe
mov
jo
pop
sub
adc
cli
mov
mov
sub
ljmp
outsb
mull
xlat
mov
rolb
dec
xchg
icebp
loopnew
mov
loop
enter
mov
jecxz
mov
pop
daa
fwait
jge
lret
cmp
mov
lcall
mov
add
loop
dec
cmp
hlt
movsl
mov
jg
add
mov
int
inc
sub
cmp
lret
stc
and
sarl
mov
sub
and
fs
pop
add
decl
cmpsl
push
fwait
mov
shlb
aam
mov
inc
sub
outsl
pop
mov
bound
into
or
xchg
stos
enter
arpl
mov
fucomp
loope
sarl
pop
cld
loop
add
roll
mov
sarb
mull
into
sbb
movsl
cli
jg
in
jbe
imul
pop
fstl
pop
mov
imulb
gs
cltd
pop
adc
cmpb
je
test
loope
and
arpl
es
inc
mov
idivl
inc
lret
dec
inc
inc
lahf
sub
push
movl
push
outsb
je
add
outsl
hlt
jmp
decb
push
insb
jne
inc
mov
bound
add
imulb
push
inc
add
lds
inc
in
das
repnz
rcrb
test
les
jno
dec
inc
add
adc
dec
jge
mov
jp
pop
test
sbb
or
sarl
shl
jecxz
fwait
cmpsb
mov
mov
cld
or
sbb
loop
push
xor
inc
pop
sub
or
ds
inc
and
add
or
xor
je
pop
mov
je
jp
scas
mov
out
in
js
cmp
xchg
mov
test
inc
orl
cwtl
inc
data16
test
mov
incb
push
adc
je
or
int
push
dec
in
or
sub
xchg
sbb
daa
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
repnz
mov
aad
inc
sub
xor
lahf
add
push
inc
aad
jle
inc
lahf
push
lock
mov
jl
iret
push
test
fistps
les
mov
xchg
push
pop
bound
insl
xchg
cmp
imul
push
rorb
enter
inc
scas
enter
xchg
test
shr
fisttpl
popf
scas
inc
and
sub
loope
popl
mov
and
inc
cwtl
add
xchg
adc
mov
and
dec
add
int3
mov
in
pop
insb
jbe
jg
sti
xor
jnp
clc
les
push
adc
mov
je
sbb
add
daa
jmp
fisubs
or
xlat
mov
xor
lock
sub
jl
in
loopne
ret
jmp
push
pop
xor
lock
lret
addb
imul
nop
xlat
mov
stos
xchg
scas
xchg
adc
or
mov
pop
es
mov
int
cmc
fnsave
lret
xchg
jnp
test
nop
sbb
leave
or
pop
push
outsb
shlb
lret
jns
dec
fsts
push
pop
lret
cmp
jge
adc
mov
das
jb
xchg
cmc
xor
cmp
mov
fdivs
sti
adc
push
rol
icebp
mov
or
lds
mov
scas
out
mov
mov
mov
leave
adc
xor
lods
iret
xor
into
orb
or
and
mov
aad
addb
fcompl
pop
ret
mov
cwtl
movsl
sub
movsb
popf
divb
fstl
test
clc
cmp
lds
add
sub
fs
sbb
xchg
sbb
mov
mov
dec
sbb
push
shrl
inc
test
scas
pushf
and
adc
cmp
xor
xchg
push
decl
or
inc
dec
fsub
mov
in
pop
call
aad
stos
and
ljmp
movsb
lret
aas
mov
loope
sarl
aas
cld
loop
add
roll
mov
sarb
mull
into
sbb
movsl
cli
jg
in
jbe
imul
pop
fstl
pop
mov
imulb
gs
cltd
pop
adc
mov
cmp
test
loope
and
arpl
es
inc
mov
adc
pushf
pop
mov
call
push
add
mov
les
xor
push
cmp
roll
xorb
out
push
push
inc
int
test
or
and
mov
test
popa
in
jg
push
dec
pop
cmp
dec
and
adc
inc
cmp
dec
movsb
jecxz
arpl
cwtl
adc
mov
mov
gs
sub
addr16
sahf
out
ss
outsl
dec
dec
push
adc
sbb
scas
cmpsl
bound
mov
loop
push
xor
data16
rcr
pusha
inc
dec
je
jge
leave
xchg
mov
mov
push
jno
dec
cli
inc
test
push
mov
lods
inc
mov
inc
cs
ss
in
cltd
xor
mov
repz
popf
ljmp
add
test
xlat
loop
xor
rcll
add
xor
mov
stc
aas
roll
popf
scas
xchg
cmp
rol
sub
mov
cltd
mov
fsts
inc
pop
lret
movsl
mov
jg
adc
mov
adc
sbb
mov
popf
jmp
mov
or
jl
daa
dec
inc
or
cld
xor
and
fisubl
pop
outsl
les
jmp
lods
movb
frstor
ret
lea
jmp
jg
out
jno
mov
int
stc
loope
push
roll
scas
push
repz
imul
xor
cmp
out
jae
jp
scas
push
rcrl
xchg
and
std
xlat
int
adc
jg
lahf
dec
xchg
lock
stc
cwtl
rcrl
pop
jbe
shr
sub
or
pop
inc
popa
sub
adc
or
repnz
pop
movsl
pop
loopne
in
shrl
sbb
in
mov
mov
leave
adc
sub
lea
jg
or
and
js
pop
adc
pop
xor
test
fs
add
sbb
clc
jl
push
pop
lret
mov
lret
sar
xor
pop
jp
jge
pop
out
mov
mov
or
std
inc
ret
loopne
pop
mov
scas
shlb
sub
es
pop
jb
sahf
fdivrs
movzbl
cs
lret
sbb
sbb
ret
xchg
subl
mov
sti
dec
mov
cli
push
xor
lds
push
ret
adc
push
loop
dec
sub
xchg
mov
push
adc
pop
xor
mov
push
push
jb,pt
push
mov
and
pop
lcall
scas
inc
lahf
jle
dec
call
in
out
add
mov
sub
jmp
cmovge
lcall
stc
cmpsl
cmp
pop
mov
lds
repnz
jae
cmc
imul
pop
arpl
pop
and
movsb
call
inc
subb
dec
mov
scas
pop
push
gs
shlb
or
adc
aad
movsl
dec
test
fmuls
push
xchg
aam
xor
dec
popa
push
ret
rclb
dec
mov
adc
cltd
dec
bound
jno
aaa
jecxz
scas
add
jns
les
rclb
aam
dec
test
dec
fidivrl
cmp
jmp
cld
rclb
mov
mov
lahf
outsl
aas
andl
les
lds
fsub
addr16
add
sbbl
or
cmpb
mov
inc
dec
sahf
es
sbb
pop
xor
int
sarl
ret
xchg
add
mov
add
loope
and
inc
dec
out
inc
rcrb
lret
add
sbb
mov
jmp
lret
adc
subl
movsl
sub
ljmp
out
decb
shrb
std
pop
mov
push
test
jb
movsl
or
mov
mov
rcll
push
rcl
fistpl
fwait
pushw
pop
cmc
mov
inc
and
cmp
xchg
and
in
sbb
add
or
aas
and
mov
cmp
push
imul
addr16
hlt
mov
mov
outsb
jmp
aad
outsb
test
ss
push
andl
mov
shrl
mov
leave
addr16
aad
jno
xor
inc
insb
sub
xchg
push
pop
popf
xchg
push
mov
rclb
sub
dec
aam
dec
cmpl
pop
mov
lret
fsts
dec
mov
mov
mov
movsb
pop
imul
sbb
xchg
inc
inc
xchg
or
or
test
shrl
push
mov
jne
xlat
add
arpl
les
xchg
jg
push
fcompl
and
pop
rcrb
pop
mov
mov
imul
jecxz
mov
cwtl
jp
jge
pushf
mull
jo
pop
shrb
pop
adc
mov
mov
popf
call
inc
lret
gs
inc
cmc
aas
xchg
sub
dec
cmp
add
mov
sbb
jb
and
xor
call
rcrl
mov
into
fwait
sbb
pop
dec
sbb
scas
call
and
sub
or
mov
aad
inc
sub
rcrb
sbb
jmp
lods
sbb
test
cmpsl
and
movsb
push
repnz
cmpsl
aas
dec
int3
or
mov
mov
fisubrl
imul
jne
insl
bound
cmp
call
mov
std
pop
mov
popf
enter
js
outsl
sti
nop
adc
es
clc
mov
add
dec
test
dec
je
cmpsl
pushf
repnz
and
ja
aas
call
jp
mov
cmovae
pop
cwtl
jne
cmpsb
jnp
fdivs
cltd
push
adc
fnsave
imul
lock
shll
cmpl
es
mov
inc
cld
inc
add
mov
arpl
orb
into
jo
cli
test
cli
arpl
cwtl
push
and
rcrl
add
mov
mov
cltd
andb
sbbb
mov
and
push
leave
pop
inc
add
mov
ja
inc
fnstsw
jle
jge
jnp
dec
sub
cli
jno
inc
fcom
mov
jl
sbb
or
dec
pop
pop
aam
add
push
add
push
pop
and
mov
inc
shr
sbb
pop
cli
xchg
adc
cmpsb
xchg
pop
lahf
mov
dec
roll
dec
push
adc
rorb
cmc
jge
mov
divl
out
jae
popf
add
sti
stos
xor
test
jge
adc
jg
lahf
lods
xlat
lret
cmpsl
leave
cltd
and
rolb
ss
push
andl
push
push
and
add
mov
out
int3
ret
xchg
test
aam
lahf
pop
push
iret
inc
fistpll
pop
mov
adc
sahf
mov
adc
mov
shlb
mov
cwtl
sbb
test
mov
jns
pop
jb
movsb
mov
stos
jecxz
push
xchg
or
fucom
cli
mov
mov
or
test
and
adc
jns
imul
lds
fwait
fwait
and
in
inc
rorb
jae
pop
xor
sahf
fdivrs
mov
push
or
inc
lret
inc
sarb
js
js
inc
orl
mov
in
dec
les
rcll
inc
mov
push
fidivrs
xlat
sbb
lret
and
sbb
jnp
popf
cmc
insl
pop
mov
stc
test
addr16
mov
adc
ds
and
or
js
aaa
adc
jo
xchg
test
sbb
push
sbb
adc
aas
out
scas
test
pop
dec
lock
sub
inc
sbbl
inc
push
mov
sub
lret
fsubl
xor
xchg
mov
adc
ret
mov
into
sahf
scas
mov
ljmp
mov
pop
and
jmp
stc
into
inc
mov
cltd
adc
push
addb
xor
repnz
mov
or
pushf
sarb
pop
jl
pusha
test
ficoms
jg
mov
mov
inc
or
es
or
push
lret
clc
aaa
jge
push
dec
mov
sahf
dec
dec
aam
inc
addr16
int
mov
mov
fcom
push
fdivrs
ja
mov
lahf
jne
js
call
cmpsb
inc
cltd
pop
lds
orl
inc
es
or
arpl
shrb
pop
cmpsb
dec
cmc
sbb
mov
mov
ljmp
repz
test
fstl
inc
ret
push
sbb
sar
sbb
jbe
add
scas
jo
leave
mov
dec
mov
mov
pop
mov
push
sahf
ret
pop
pop
adc
mov
mov
test
leave
pop
sbb
sub
or
out
jle
adc
dec
inc
sub
sub
or
stos
fs
orb
dec
pop
sbb
jp
jns
dec
lds
fwait
enter
lods
xchg
mov
pop
negb
call
add
jp
ljmp
sahf
inc
xchg
dec
scas
jecxz
cmove
xchg
sub
test
arpl
xchg
xchg
pop
inc
fsub
xchg
xchg
test
dec
push
loop
jmp
int
popf
mov
pusha
lret
mov
jne
cltd
pop
insl
test
fdiv
dec
push
and
cmp
xor
int3
pushf
hlt
test
cmc
clc
jnp
popf
xchg
push
adc
nop
add
in
push
inc
mov
cld
xchg
adc
es
test
scas
loope
leave
ss
xchg
dec
rorb
adc
push
jmp
imul
jbe
into
push
mov
mov
outsl
test
push
stos
mov
cmp
sahf
xor
and
and
adc
inc
mov
xor
dec
ret
sub
mov
cs
dec
repnz
mov
mov
fwait
adc
enter
dec
cmc
and
jno
lds
xchg
adc
mov
sbb
dec
movsl
ret
pop
outsb
rcl
pinsrw
dec
mov
or
add
inc
mov
aad
inc
aaa
fbld
cmpsl
icebp
iret
movsl
mov
imulb
xorb
jae
pushf
fwait
cli
and
xchg
inc
mov
adc
inc
or
stos
mov
nop
cmp
or
inc
mov
je
fnsave
or
adc
lret
movsb
ret
add
and
std
popa
repz
push
outsb
je
add
add
in
push
push
xchg
xchg
push
xorl
or
mov
lcall
mov
mov
mov
jne
push
sahf
loope
lret
xor
jmp
clc
lahf
shll
xchg
add
mov
add
jle
mov
sub
push
popa
fsts
movsl
fstl
cld
test
mov
dec
shll
pop
push
fcomps
fstps
popa
sbb
in
mov
adc
nop
fstpl
test
dec
mov
fnstenv
pop
sarb
jb
adc
pop
scas
sbb
fisttps
lods
divl
stc
adc
rolb
ss
push
andl
pop
je
and
rcrl
cmpsl
pop
or
flds
leave
inc
rcl
lods
les
filds
xchg
xchg
adc
sbb
popa
shrl
test
rclb
out
inc
mov
dec
sbb
inc
push
loop
adc
jbe
and
stos
mov
ja
notl
sub
mov
add
in
add
push
ja
pop
imul
fsubs
cmp
bound
xor
addb
xchg
inc
mov
mov
sti
mov
xor
sub
es
inc
mov
mov
cmpsb
in
mov
insl
fisttps
push
push
imul
ljmp
push
xlat
mov
outsb
shr
adcl
cmp
cmpsl
adc
pop
je
pop
push
out
mov
xor
iret
jp
popf
call
rorb
inc
xchg
xchg
or
ffreep
mov
test
out
dec
cmp
fldcw
push
dec
mov
popf
sbb
daa
divl
ljmp
jnp
adc
jno
or
pop
mov
inc
cmp
xlat
in
ja
push
testb
or
popf
adc
mov
fst
dec
sub
and
loope
jne
mov
pusha
testb
push
sahf
jg
pusha
jbe
jae
orb
xchg
shll
cmpsl
jbe
mov
cmpsb
dec
sub
stos
les
aam
add
das
mov
movsb
fsubrl
popf
popa
jne
fisttpl
lret
bound
inc
sarb
js
fidivl
dec
test
or
popf
fistpl
mov
rcll
inc
mov
push
fidivrs
xlat
sbb
and
sbb
jnp
popf
cmc
insl
pop
mov
stc
test
addr16
mov
adc
ds
and
add
pop
xor
pop
sbb
xor
cs
daa
jo
push
sbb
add
fs
popa
shrl
push
cmp
or
aam
icebp
nop
jle
xchg
lahf
cmc
gs
sbb
fwait
aam
sub
repnz
stos
scas
popa
lods
fldt
sbb
mov
fwait
xlat
push
movsb
shll
lock
inc
outsb
xchg
xor
divb
inc
movl
mov
sbb
mov
dec
push
jl
arpl
scas
fists
pop
out
adc
adc
mov
imul
loope
jg
enter
pop
imul
lods
push
arpl
dec
mov
and
adc
aas
mov
pop
jae
inc
insl
in
sbb
inc
add
pop
ljmp
lods
out
repz
sub
pushf
add
fwait
ret
mov
cmc
test
scas
xchg
add
sti
mov
popa
push
test
sahf
pop
loopne
cld
cmp
mov
push
sbb
out
mov
test
sbb
add
add
rcrl
cld
xchg
not
sbb
sarb
in
ret
pop
jbe
mov
mov
repz
and
mov
in
fisttps
mov
xchg
fdiv
ja
adc
pop
xchg
test
gs
mov
pusha
shl
je
mov
addr16
fnop
inc
sbb
lods
mov
mov
in
scas
aas
test
insb
scas
in
mov
out
inc
insb
out
pop
mov
push
rorl
repz
out
das
add
mov
lcall
test
out
jae
pushf
mov
jnp
mov
loope
jmp
filds
dec
mov
jne
sbb
xchg
arpl
popa
mov
mov
jl
push
or
jns
decb
lret
mov
cmp
mov
lods
dec
adcl
hlt
test
sahf
adc
jecxz
popf
fwait
add
jo
pop
adc
repnz
add
lods
cmpsb
pop
sub
inc
clc
lds
lock
xchg
jle
sahf
sbb
ficomps
sub
lahf
cmp
mov
orl
sbb
rorb
mov
sbb
testl
je
sub
out
fldcw
dec
xorl
subb
int3
jmp
scas
bound
xchg
mov
mov
repz
out
rol
popa
scas
push
repz
and
fmul
or
outsl
cmp
pop
repz
xor
leave
scas
jmp
or
mov
push
cltd
clc
bound
cmpsl
or
test
pusha
mov
mov
pop
add
mov
sbb
lds
push
pop
xchg
push
popa
push
test
sahf
lcall
divb
out
mov
test
sbb
add
add
rcrl
cld
xchg
lret
rcrb
leave
sarb
in
ret
pop
jbe
mov
mov
repz
and
mov
in
fisttps
mov
xchg
mov
mov
mov
jp
fs
pop
xchg
test
add
jmp
int
jmp
mov
rolb
jb
dec
ds
repz
test
pop
mov
in
mov
test
pop
mov
push
roll
fsubr
das
dec
mov
sub
xchg
jbe
popf
scas
mov
out
jae
pushf
lret
push
rcll
popf
lods
push
jae
fidivrs
sahf
sub
adc
jg
pushf
mov
pop
sarl
or
les
xlat
or
adcl
cltd
jns
test
jle
sbb
xor
mov
xor
decl
add
inc
sbb
jno
jecxz
movsl
mov
fcom
and
roll
jb
popf
pushf
daa
and
int
dec
mov
dec
gs
jg
mov
xor
imul
fsubrl
sub
mov
fisubrs
push
sahf
jge
loopne
sbb
loop
cwtl
in
jg,pt
shl
je
sub
out
cltd
insl
jle
popf
enter
lods
sahf
das
movsl
int3
ljmp
mov
in
mov
lret
inc
sbb
aas
inc
mov
adc
inc
push
sbb
or
inc
jl
mov
pop
fistl
adc
test
jae
push
jne
sbb
pop
lahf
call
mov
movsl
jne
dec
inc
adc
dec
les
push
hlt
xor
and
gs
add
fisubs
fsubrl
in
cmc
mov
pop
push
inc
mov
mov
call
dec
pusha
xor
aam
aaa
test
dec
jecxz
and
je
sbbl
inc
icebp
xchg
jle
sbb
adcb
inc
ret
jp
addr16
dec
pusha
ret
inc
push
repnz
xchg
lcall
lahf
popf
push
jns
outsb
shrb
into
ss
mov
ja
aad
cmp
rorl
stos
mov
sbb
mov
into
aam
inc
cmp
mov
cld
loop
inc
fdivrs
mov
loope
cmp
pop
inc
sbb
rcr
rclb
mov
fbstp
loopne
outsb
imul
es
je
pop
adc
test
and
jl
cmp
insb
enter
inc
lods
mov
mov
add
lock
mov
loop
mov
pop
mov
add
loop
ret
jle
mov
pushf
scas
cmp
or
out
out
cmp
adc
lods
mov
xlat
cmp
sbb
stos
dec
les
mov
int3
lahf
push
sti
cmpl
dec
mov
pmuludq
hlt
jns
fst
addr16
rcrl
lds
jg
mov
sbb
out
pop
clc
test
dec
sub
daa
sbb
ret
cld
xor
lods
fisttpl
mov
les
lea
fisttpll
jbe
xor
jbe
pusha
mov
pop
sti
out
dec
hlt
dec
pop
mov
pusha
rorl
pop
mov
cmc
jl
das
dec
or
jl
loopne
call
push
shrl
mov
jnp
sahf
sub
ljmp
mov
jb
out
test
test
addl
sub
loop
push
mov
sbb
adc
mov
mov
test
into
lahf
add
mov
xor
cmpb
cmp
sahf
xlat
xor
mov
cltd
mov
nop
xor
popa
push
sbb
fs
push
sub
stos
mov
inc
movsl
icebp
sbb
ljmp
jae
idivl
sti
dec
sbb
out
jmp
enter
dec
sbb
push
in
pop
dec
xchg
jmp
stos
jge
dec
xor
inc
sbb
or
aaa
jg
mov
push
push
cmp
fwait
sbb
sti
and
hlt
inc
aam
gs
push
sub
mov
cld
or
data16
xchg
loope
iret
cmpsl
jecxz
fsubs
mov
mov
xchg
xchg
ds
mov
pop
mov
dec
cmpsl
dec
mov
pushf
inc
addr16
xor
seto
sahf
imul
aam
dec
mov
sbb
push
push
push
lds
sbb
push
negl
call
fidivl
out
mov
sbb
loopne
iret
cmpsl
mov
data16
sbb
ljmp
mov
shr
push
popf
mov
scas
xchg
xlat
xchg
lcall
lahf
popf
push
jns
in
shrb
into
ss
mov
ja
aad
cmp
rorl
stos
mov
sbb
mov
into
aam
inc
cmp
mov
cld
loop
inc
fdivrs
lcall
or
add
jmp
filds
xchg
mul
xchg
jmp
out
addr16
scas
scas
mov
push
call
push
iret
lock
jnp
xchg
mov
xlat
ja
pop
into
sbb
bound
fwait
jmp
bound
rorb
push
pushf
add
shrb
dec
push
xchg
add
inc
jmp
add
sahf
pop
add
xchg
push
in
or
pusha
mov
arpl
rorb
test
popa
jecxz
loopne
xor
pop
stos
jns
sub
int
inc
adc
dec
lahf
rcrl
fwait
ret
dec
lret
cltd
adc
stos
repnz
sbb
lahf
jne
xchg
xor
mov
sti
cli
int
jbe
or
data16
icebp
call
test
sahf
jle
inc
outsb
cmpsb
sub
lcall
gs
mov
adc
sahf
roll
in
mov
dec
sub
icebp
inc
dec
aam
pop
mov
out
outsl
or
clc
cmc
inc
in
out
das
dec
cmpsl
cmp
or
idivl
test
mov
sub
in
sti
jnp
xor
lcall
lcall
loope
loope
xorl
inc
sbb
nop
test
pop
mov
insl
test
cltd
sahf
or
pop
push
test
sbb
stos
cmp
ss
mov
mov
pop
pop
inc
pop
adc
loopne
out
mov
scas
push
or
add
adc
lret
mov
cwtl
sti
sbb
xor
mov
xor
test
stos
push
adc
mov
mov
fistpl
stc
jnp
sahf
pop
xchg
iret
loope
pop
roll
inc
jno
xchg
in
push
jg
shl
je
sub
loopne
mov
sub
test
movsb
ljmp
icebp
sbb
dec
in
int
mov
scas
adc
adc
pop
int
or
pop
pop
je
sbb
pop
push
inc
out
sub
xchg
inc
add
test
int3
inc
rcrb
js
mov
addr16
mov
cwtl
stc
add
mov
out
ret
xchg
mov
ret
push
xchg
sti
mov
fildl
mov
mov
push
sub
call
sti
mov
sbb
in
popf
sbb
sbb
or
ret
daa
inc
addr16
mov
orb
mov
xor
scas
lods
fisubl
sub
pop
int3
jge
push
fwait
xlat
mulb
adc
and
jg
and
ja
in
subl
imul
aam
jne
insl
outsb
pop
cltd
enter
pop
push
bnd
in
scas
aas
test
sub
cmpxchg
out
push
pop
jecxz
or
fcompl
sub
mov
shlb
repnz
or
jl
xorl
lahf
fcoml
mov
add
pop
cmp
gs
cltd
pop
adc
cmpb
lods
inc
test
jns
pop
int3
inc
and
hlt
dec
adc
popa
xchg
add
xor
and
pop
jno
repz
ret
loopne
inc
test
cltd
xor
mov
xchg
into
ja
addr16
fcoml
out
dec
out
cwtl
in
push
paddd
negl
fnstenv
ficoms
fcmovnbe
and
xor
mov
jnp
loopne
fucomp
jae
mov
inc
loopne
pop
movsl
lret
dec
orl
sub
jno
or
dec
dec
pop
jb
mov
or
jnp
leave
cltd
jbe
js
int3
scas
std
stc
dec
es
jg
xchg
test
cmc
ljmp
adc
jg
add
and
fwait
and
xchg
jne
pop
ret
inc
lods
xlat
xchg
mov
jle
pop
sbb
fcoms
jmp
add
arpl
data16
out
jno
jae
pop
xor
jmp
int
mov
xorl
shlb
bound
mov
sub
push
test
jl
fbstp
hlt
sbb
push
ret
popa
shrl
push
cmp
sub
mov
decb
aad
push
sub
push
xor
push
lds
or
movsl
dec
and
and
mov
mov
negl
xchg
mov
rcrl
pop
pop
pop
cmp
inc
mov
mov
movsb
xchg
sub
pop
lcall
ss
xchg
clc
xor
sub
filds
xchg
xlat
test
xor
bound
das
push
sub
adc
jae
loopne
in
rorl
mov
mov
push
mov
shlb
xchg
aam
daa
pop
mov
ss
mov
test
xchg
fistpl
les
push
rorl
test
insl
lea
cmp
or
inc
roll
cmp
bound
movsb
cmpsb
call
imul
mov
cltd
lret
inc
mov
aaa
scas
stc
aaa
push
sub
mov
out
mov
aaa
pop
dec
dec
fimuls
loopne
mov
je
or
ffreep
test
mov
and
pop
fcmovne
push
add
decb
add
or
jmp
js
scas
mov
xchg
sub
add
pop
push
add
and
xor
addr16
push
js
adc
fsts
jg
sbb
enter
mov
dec
std
arpl
fwait
adc
add
sahf
xchg
mov
inc
cwtl
les
sbb
xchg
fisubrs
out
mov
mov
stc
adc
mov
mov
inc
cmpsl
leave
stc
and
rolb
ss
bound
push
adc
dec
es
push
imul
rcrl
jns
push
test
xor
int
rcrl
pop
xor
add
xchg
xchg
jg
pop
add
sbb
jns
adc
xorb
lods
dec
push
icebp
nop
jle
sbb
outsl
and
adc
outsb
aaa
mov
in
test
mov
lds
pushf
cmp
mov
or
sbbl
inc
les
push
push
ja
nop
test
repz
lea
aas
pop
pusha
jle
das
pop
icebp
sbb
cmp
andl
mov
repnz
js
sahf
sar
stos
ljmp
push
jbe
rol
out
das
sbb
les
pushf
cmp
fadd
fsubs
ja
xchg
pop
push
out
int3
fwait
nop
xchg
xor
gs
rcll
inc
add
bound
je
test
cld
or
inc
push
daa
jne
jnp
xchg
dec
fstl
sbb
fwait
shlb
push
or
mov
das
pusha
test
shrb
or
push
jno
fstl
cmc
lcall
stc
popf
pop
push
shl
jae
imul
mov
and
adc
inc
cmp
mov
pop
incb
shl
pop
test
sbb
mov
pop
stos
ja
mov
cmpsl
pop
scas
mov
leave
cli
sarl
call
sbb
sahf
pop
mov
repz
cmp
pop
gs
mov
pop
scas
loope
cmp
mov
shll
cs
push
or
idivl
pushf
dec
cmp
jae
pushf
sub
ja
popf
dec
push
enter
xor
jg
lahf
lods
xlat
xor
into
add
cmp
hlt
xor
xchg
addb
leave
shl
mov
pop
dec
inc
outsl
nop
cs
lret
jno
push
xchg
in
je
loopne
pmullw
xchg
icebp
aas
out
scas
test
pop
dec
rolb
out
inc
jmp
leave
cmpsl
inc
add
shll
in
out
lret
imul
push
pop
adc
mov
imul
out
lret
mov
dec
imul
lds
cmp
sbb
lcall
stos
jbe
stos
test
xor
adc
inc
fdivl
jecxz
fistps
adcb
loop
in
dec
and
aam
mov
sbb
push
rclb
sti
repnz
pop
sub
mov
mov
nop
cmpsl
jbe
int3
mov
test
xchg
fistpl
inc
mov
push
inc
dec
push
cli
mov
insb
je
scas
jge
fs
sub
mov
xor
cmpsb
cli
repz
rcrl
jae
add
inc
scas
loope
xor
mov
outsb
fs
add
vpshufbitqmb
cmp
pop
xor
dec
mov
sbb
clc
leave
test
ljmp
sbb
test
cmp
pop
dec
sbb
and
fcoms
xchg
out
inc
push
sbb
fwait
xor
rcr
jne
test
adc
adc
sub
mov
xor
push
pushf
cmp
sbb
push
bnd
insl
test
fwait
jmp
sbb
rorl
scas
jbe
cltd
imul
cmpsl
cwtl
jg
jge
pushf
out
and
jae
cld
sub
divb
popf
lods
dec
jae
mov
enter
pop
mov
gs
lods
loope
xchg
or
fildl
push
sbb
jp
mov
insl
mov
cltd
sahf
or
pop
push
test
sbb
stos
cmp
ss
mov
mov
pop
pop
inc
pop
adc
nop
adc
fistpl
push
or
add
adc
lret
mov
cwtl
ficompl
xor
mov
xor
test
adc
ljmp
fcmovnu
push
jno
mov
ljmp
movsl
sub
jecxz
push
stos
or
push
dec
out
sub
cmpsl
jmp
or
shlb
sub
and
dec
jb
sahf
ficoms
imull
inc
stos
int
cltd
out
push
stc
xor
je
stc
or
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmc
xor
cmc
jnp
testb
stos
mov
and
call
lds
mov
sbb
and
adc
jmp
loop
sbb
lods
adc
and
push
dec
push
pop
mov
out
sbb
xchg
pusha
mov
xor
sbb
daa
add
test
or
stos
ds
hlt
movsb
dec
ja
push
xchg
fnstenv
pop
mov
test
sahf
sarb
jne
rcrb
aaa
xlat
xchg
sbb
mov
xchg
repz
sub
icebp
add
cmp
sbb
cltd
jo
test
decb
fwait
add
jge
jns
push
sbb
add
movsb
pop
lret
cmp
jge
or
dec
je
bound
fwait
inc
and
roll
bound
sbb
bound
pop
cmpsb
xchg
lods
out
cmp
out
std
adc
js
mov
fs
jnp
or
lock
mov
jne
sbb
mov
addr16
fcmovb
loope
orb
ds
mov
sbb
sub
push
dec
mov
lcall
mov
mov
popf
je
mov
in
mov
cmpsb
push
pop
add
push
cwtl
xor
out
ja
int
mov
sbb
jge
orb
xor
cltd
and
mov
push
mov
enter
dec
push
mov
insl
movsl
imul
mov
adc
inc
mov
cmp
and
into
outsl
xchg
sub
cmpsb
not
out
jmp
xchg
hlt
pushf
dec
mov
int
or
pushf
rcrb
mov
xchg
sbb
add
sbb
sbb
enter
int
and
fcmovbe
cmp
sbb
cmp
and
xor
xchg
pushf
sub
and
xor
gs
lock
call
jmp
inc
or
gs
pop
cmp
mov
xor
dec
test
ss
nop
inc
fs
call
insb
lcall
repnz
gs
push
add
and
inc
movsl
cltd
lret
mov
pop
adc
sbb
rorb
cltd
ret
push
jnp
fistl
lret
lds
push
jns
cmp
lcall
ret
mov
aaa
jle
xchg
je
mov
pop
or
mov
xchg
add
mov
xchg
into
imul
fwait
sub
arpl
ljmp
iret
in
repz
insb
pop
mov
jb
mov
mov
fprem1
jmp
imul
dec
iret
shl
ja
std
pushf
out
out
jb
fsubrl
mov
push
jecxz
dec
cwtl
jge
aaa
sarl
lahf
leave
repnz
arpl
out
fxch
lds
sbb
arpl
shl
mov
pop
dec
inc
dec
fmull
mov
addr16
test
sbb
cld
stos
divb
pop
pop
dec
adc
mov
sti
add
imul
lods
int3
and
xor
movsl
ret
aaa
lahf
lret
adc
push
div
test
das
cmpsl
movsb
leave
test
push
adc
cmp
in
dec
mov
add
insl
dec
mov
repnz
sub
dec
flds
ja
into
add
das
mov
lret
jb
loopne
pop
arpl
les
sti
inc
out
push
stc
xor
je
fbld
inc
xchg
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmc
xor
cmc
jnp
testb
stos
mov
and
call
inc
mov
xchg
dec
xorl
cmp
fisubrs
adc
xorl
push
test
cs
arpl
test
mov
int
rcrb
push
inc
sti
mov
arpl
mov
cld
pop
outsl
push
push
or
mov
ljmp
jno
or
push
test
faddp
sub
loop
sbb
mov
and
call
imul
mov
add
add
inc
sbb
out
lcall
mov
lcall
and
dec
fsubrl
movsb
mov
jle
mov
cld
stc
inc
es
or
xlat
cmp
insl
shlb
inc
icebp
or
dec
or
mov
dec
pop
call
xchg
scas
out
mov
js
std
jecxz
inc
divb
sbb
fildll
mov
jo
add
and
push
shll
cs
lock
dec
jg
add
clc
rcrb
pop
jno
das
sbb
leave
lock
lods
pop
sbb
loopne
iret
jl
in
xchg
pop
rcrl
mov
sub
out
mov
cmp
fnstenv
int
js
rcrb
sub
lods
pop
aaa
stos
push
insb
ror
sbb
inc
lahf
mov
jne
dec
fwait
inc
cs
lock
sbbl
ljmp
pop
xchg
je
mov
dec
sbb
jno
enter
imul
push
and
mov
jb
sahf
pop
mov
cmpxchg
in
das
test
xor
arpl
das
push
roll
inc
sbb
add
imul
cs
xchg
mov
scas
mov
out
dec
mov
jae
pushf
bound
into
pop
test
inc
sbbl
es
push
lock
rclb
test
fwait
push
adc
push
dec
mov
rcll
mov
sub
or
lods
lods
inc
pop
pop
cld
pop
loopne
mov
cmp
dec
adc
clc
lds
cld
outsb
ss
jo
or
pushf
sbb
mov
cltd
xchg
and
cmpsl
mov
push
and
cmp
jne
jmp
pop
pop
loope
lcall
stc
movsb
push
sahf
jno
jecxz
fsubrs
cs
stos
adc
add
xchg
xchg
and
xchg
popa
xor
ljmp
sub
test
fucomp
inc
icebp
sbb
js
push
sarb
xor
mov
inc
sarb
je
or
inc
xor
pop
or
add
inc
mov
aad
repz
stos
jmp
mov
mov
lods
mov
out
and
mov
daa
push
lock
mov
addr16
imul
rcrl
or
or
or
loope
sbb
cmp
mov
popa
notl
data16
fdivp
mov
or
xor
outsb
fs
add
bound
in
mov
and
inc
mov
insb
in
jbe
fwait
ds
push
inc
in
mov
cmp
dec
mov
jne
push
mov
or
lods
cmp
rcrl
xchg
popf
pop
sbb
hlt
cmp
ret
int
inc
and
inc
jns
dec
rcr
xchg
mov
xchg
sbb
sub
inc
pop
lcall
cmp
cmpl
leave
loop
jl
inc
dec
out
nop
dec
and
mov
addb
mov
rorb
out
cmp
sbb
scas
scas
scas
jmp
dec
lods
out
popf
cmpsl
ret
rol
bound
pop
addl
pop
inc
xor
mov
dec
outsb
or
and
push
dec
push
xchg
push
mov
jp
mov
fxch
mov
outsb
or
adc
into
pop
mov
test
cmc
lret
inc
adc
lock
lock
adc
inc
inc
sbb
add
add
gs
ret
sub
leave
rcrb
dec
sbbb
clc
jge
xchg
mov
stc
and
shr
sub
mov
cmc
fisttpl
or
fistps
jl
sbb
mov
xchg
test
or
and
movsb
xchg
sub
push
loop
inc
push
mov
xchg
adc
and
inc
nop
mov
sub
sbb
lahf
data16
jl
scas
mov
and
or
xlat
or
lret
lock
jge
dec
mov
js
dec
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
in
inc
mov
cmpb
xchg
es
and
shrl
ret
dec
sbb
jo
mov
lcall
xor
lahf
adc
jecxz
inc
jge
pop
fcomps
adc
cmp
daa
sub
call
fidivl
rol
fimuls
push
out
jo
dec
inc
popf
mov
sub
sbb
jne
addr16
flds
cld
test
insl
add
adc
add
daa
pop
ret
fsts
push
subl
je
mov
xchg
mov
pop
xchg
cmp
mov
cmpl
mov
outsl
aad
stos
call
cmc
jg
out
xor
into
lock
dec
das
push
iret
lret
add
inc
call
xor
and
cmp
out
mov
js
cs
repnz
jns
outsb
ret
lahf
cli
cwtl
add
test
add
sbb
and
cwtl
push
and
andl
and
xchg
push
pop
stc
dec
call
jne
pusha
add
in
mov
mov
adc
and
jns
popf
rcrb
sbb
sbb
fnstsw
jno
xchg
ss
adc
adc
xor
rorl
or
mov
jo
ljmp
popf
lret
mov
data16
push
push
xchg
or
stc
sub
fisubrl
orl
inc
adc
fistpl
mov
leave
jnp
dec
xchg
adc
scas
xor
sbb
leave
or
mov
pop
jmp
iret
lcall
stc
js
inc
es
xchg
xchg
and
jmp
inc
insl
xchg
popf
pop
adc
fsubs
pop
mov
gs
pop
xlat
xchg
stc
es
iret
out
aam
leave
ss
mov
add
mov
dec
adc
adc
xchg
or
out
push
test
or
push
dec
adc
js
fdivp
mov
or
xor
outsb
push
inc
test
outsl
aam
sub
mov
xchg
push
into
push
mov
insl
aad
or
push
inc
lahf
and
and
mov
or
scas
mov
negl
xlat
add
mov
test
xchg
jbe
lods
push
outsl
xchg
bound
in
ss
shlb
lcall
popa
or
xchg
push
es
inc
mov
sahf
pop
and
iret
test
ds
push
pop
mov
and
cld
mov
xor
adc
xchg
jmp
pop
dec
adc
ds
push
out
add
mov
jae
pushf
sub
adc
fadds
mov
iret
push
xor
cmpsb
in
testl
xchg
rclb
into
sbb
mov
xchg
lea
rcl
fsts
jnp
mov
pop
loopne
mov
sbb
or
mov
in
inc
rcrl
add
loop
cmp
mov
inc
int
js
cmp
pop
popa
inc
das
jno
jp
jl
sbb
inc
cmp
lcall
dec
add
pop
arpl
lahf
shll
xchg
add
mov
inc
shlb
sub
jne
sahf
out
or
imul
push
insb
test
scas
jmp
and
enter
popa
add
cld
sbb
xor
mov
ficoml
dec
sarb
inc
jmp
or
pop
jge
movsb
jp
cwtl
cld
jle
insl
sbb
mov
daa
jbe
xchg
jne
jecxz
inc
popf
fcomps
and
xchg
test
imul
lcall
adc
push
add
sub
fisttpl
pop
add
and
outsl
lds
mov
jle
xchg
push
mov
insl
aad
insl
ficomps
shll
popa
lods
fldt
ljmp
push
sub
pushf
imul
jno
jecxz
out
pop
adc
pop
cmpsl
lret
dec
sbb
or
imul
scas
aam
jne
insl
push
pop
dec
shlb
sbb
push
xchg
je
aad
mov
cmp
clc
jo
shlb
inc
xor
fdivs
add
push
test
xchg
adc
data16
mov
popf
push
stos
icebp
mov
ret
cmpsb
mov
fcmovbe
or
mov
xlat
pop
adc
inc
cmp
sbb
inc
idivb
adc
addr16
inc
test
lods
xor
push
add
jno
lds
andl
add
enter
adc
cld
sub
push
fwait
mov
lcall
inc
inc
xchg
cmpsl
xchg
leave
fsubrl
cltd
mov
mov
lret
cli
push
scas
jnp
stos
ret
fcoms
adc
and
ror
mov
lret
xchg
mov
in
lret
cmp
subb
pop
imul
and
push
pop
jmp
movsl
push
shll
add
ret
adc
and
or
cmpsl
push
pop
jno
in
mov
cli
mov
and
sub
push
fisttpl
adc
repnz
xchg
out
mov
stos
adc
fidivrl
jp
pop
lock
xchg
mov
lahf
jb
xor
fisttpll
jno
jecxz
fcoms
add
andb
shrl
insb
dec
sbb
and
push
das
ljmp
jmp
inc
jecxz
iret
xchg
mov
xchg
xchg
sub
cmp
lock
xor
xor
ret
aad
shlb
add
mov
cmp
sbb
fs
mov
test
scas
movsb
mov
ds
movb
js
pop
fisttpll
add
inc
cmp
adc
inc
out
inc
shlb
sub
imul
sub
add
mov
cmc
sub
es
test
fisubs
imulb
jmp
xchg
das
ljmp
sarb
jmp
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmc
xor
cmc
jnp
testb
stos
mov
and
call
xchg
mov
sbb
and
inc
xor
imul
inc
mov
pop
pop
mov
xor
dec
arpl
orb
aam
aaa
imul
cmc
mov
cmp
arpl
leave
cmpsl
inc
icebp
xchg
add
and
lds
lds
and
jb
mov
iret
lods
leave
push
sbb
sub
mov
dec
pop
dec
adc
std
mov
add
scas
fsubr
adc
sub
and
xchg
fimull
mov
loop
cli
icebp
xchg
jmp
lcall
xchg
pusha
or
sti
fstps
mov
sub
xchg
push
xor
aaa
dec
lock
cmp
hlt
jbe
inc
fmuls
pop
jae
inc
pop
dec
aaa
xor
lods
inc
jae
fidivrs
fisubrs
adc
jle
fnclex
outsb
out
fldt
inc
icebp
or
or
outsb
add
fadd
popa
or
push
dec
mov
popf
stc
add
mov
or
ljmp
jnp
adc
jno
or
pop
mov
inc
cmp
xlat
in
ja
push
testb
or
popf
adc
mov
fst
dec
sub
and
loope
jne
mov
pusha
testb
push
sahf
jg
pusha
jbe
jae
orb
xchg
shll
cmpsl
jbe
mov
cmpsb
dec
sub
jge
dec
and
add
das
mov
jecxz
sub
mov
fisttpl
adc
clc
orb
repz
xor
fdivs
add
push
test
xchg
adc
data16
mov
popf
push
stos
icebp
mov
ret
cmpsb
mov
fcmovbe
or
mov
xlat
pop
adc
inc
cmp
sbb
inc
hlt
aas
adc
fdiv
stos
into
lcall
enter
push
dec
push
push
sbb
dec
mov
adc
pop
popf
subl
mov
cmp
out
inc
sbb
cmpsl
push
icebp
nop
add
movsb
insb
push
sub
push
mov
insl
aad
insl
and
mov
popa
lods
cmp
cmp
adc
jno
mov
adc
push
test
adc
jecxz
push
scas
xchg
je
sub
cs
lods
mov
scas
aam
cmc
mov
jbe
cmpsl
jne
dec
int3
sbb
btc
and
jbe
in
sbb
inc
inc
loope
stc
loope
js
mov
cmp
xchg
xchg
jg
sub
rcl
jb
cmp
pop
xchg
lcall
push
jmp
fnsave
xchg
push
xabort
mov
add
ja
bound
test
leave
addb
fwait
xchg
les
cltd
sahf
sub
ret
sbbb
push
test
lcall
mov
int3
mov
imul
test
scas
xchg
mov
arpl
dec
mov
icebp
daa
lcall
es
xchg
mov
aad
insl
and
adc
and
aaa
push
lea
lahf
aad
and
adc
inc
aas
adc
dec
inc
sub
sub
mov
cs
cmp
mov
aam
xor
in
dec
push
xchg
adc
mov
ret
pop
mov
lods
inc
in
xchg
aas
cmpsb
shrb
sub
movsbl
sub
sub
mov
js
dec
je
push
xor
push
and
adc
mov
icebp
push
fdivrs
pop
pop
imul
add
mov
xchg
push
test
cmovae
gs
cmp
push
and
dec
dec
mov
xor
or
rcrb
pop
push
test
jne
mov
call
pop
mov
pop
mov
in
xor
dec
jnp
repz
pop
sub
les
popa
stos
int
sub
pushf
dec
and
adc
and
mov
insl
movsl
imul
push
mov
scas
iret
subl
jbe
arpl
aaa
jl
lcall
xchg
xchg
pop
cmc
add
pushf
pop
pop
xchg
xlat
fistl
pop
inc
aaa
push
jae
mov
jno
jb
cmp
dec
adc
les
pushf
jne
jle
fimuls
inc
shlb
aad
adc
cld
dec
cmp
or
dec
cli
je
pusha
xchg
out
jb
fsubrl
sarl
lods
inc
mov
lret
pop
jae
fs
cmpsl
xor
rorb
test
popa
inc
imul
jmp
shll
mov
ret
inc
test
adc
inc
ret
push
sahf
sub
mov
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
repnz
mov
aad
inc
sub
xor
lahf
add
push
inc
aad
jle
inc
lahf
push
lock
cs
mov
je
fxch
push
test
fistps
jg
xchg
dec
xor
pop
jae
sbb
pop
xlat
mov
cmpsb
dec
mov
and
enter
mov
test
clc
aam
or
jl
xchg
out
into
cmpxchg
out
sub
inc
clc
das
push
roll
fcompl
es
imul
stc
fildll
shl
idivl
pushf
dec
ds
jae
pushf
nop
pop
mov
shl
inc
lods
push
jae
fidivrs
popf
xor
fwait
loop
vaddsubps
sbbl
sub
imul
jg
clc
pop
mov
es
inc
mov
adc
and
aas
shl
repz
push
ret
lods
movl
in
cmp
test
out
cmp
les
aad
stos
das
lret
jno
pop
faddl
xchg
mov
sbb
fbstp
push
push
test
pop
sahf
in
cmp
sub
aaa
jns
outsb
cmpsb
jne
xor
xor
jbe
pop
xchg
nop
mov
sbb
pop
add
push
std
fsubrl
mov
push
push
dec
xlat
jnp
xchg
inc
inc
sbb
inc
cltd
lds
jl
call
je
leave
lret
cmp
xor
adc
rolb
sub
xchg
xchg
pop
inc
mov
add
jge
xchg
cmc
mov
addl
mov
pop
xchg
cltd
movsl
add
jno
lea
sbb
enter
stos
outsb
add
lock
ja
adc
jns
std
dec
lcall
addr16
aam
repz
dec
push
sahf
xor
pop
push
iret
inc
lcall
pop
mov
sbb
popf
mov
adc
mov
nop
shlb
adc
mov
dec
cwtl
popf
sbb
xor
pop
pop
jb
movsb
mov
stos
jecxz
push
pushf
or
fucom
cli
mov
mov
lds
or
xchg
imul
inc
rolb
popa
add
out
cmpsb
dec
mov
jne
jbe
mov
adc
xorl
out
and
outsb
adc
jb
ljmp
xchg
cs
int3
push
lret
and
inc
mov
fdivs
fistl
roll
mov
jge
xchg
sub
clc
rclb
test
mov
push
gs
pop
xchg
jnp
call
mov
movsl
jne
dec
inc
adc
dec
les
push
hlt
xor
and
gs
add
fisubs
fsubrl
in
cmc
mov
add
mov
shr
repz
xchg
pop
out
xchg
fistpl
sti
push
cld
inc
or
adc
push
das
xchg
leave
arpl
cwtl
dec
and
add
jbe
lea
jno
jle
push
test
push
stos
lods
scas
imul
lcall
loop
cmp
dec
movb
ljmp
mov
mov
cmp
xchg
pop
cmc
add
pushf
pop
pop
xchg
xlat
fistl
pop
inc
aaa
push
jae
mov
jno
jb
cmp
dec
adc
les
pushf
jne
jle
fimuls
inc
shlb
aad
adc
cld
dec
cmp
or
dec
cli
je
dec
push
adc
movsb
test
mov
cmp
js
pop
inc
outsb
negl
xor
jno
sbb
fidivl
push
cmpsl
leave
sub
loop
inc
jge
mov
repnz
dec
pop
stos
and
mov
jmp
sub
push
xor
or
aad
out
sbb
mov
cltd
andb
sbbb
mov
and
push
leave
pop
inc
add
mov
ja
inc
fnstsw
jle
jge
jnp
dec
sub
ljmp
lods
push
fmuls
xchg
test
and
test
test
stos
ja
lahf
push
scas
push
jns
push
ret
mov
pop
inc
dec
je
aas
lods
jle
scas
jns
aam
clc
dec
sbb
jecxz
sbbl
cmpl
add
cld
jecxz
das
pop
and
in
mov
adc
xlat
sub
in
imul
stos
cmp
call
data16
sub
mov
cmpb
xchg
es
and
shrl
ret
dec
sbb
xchg
mov
pop
adc
push
lods
dec
pop
mov
filds
inc
jb
call
rol
sub
mov
mov
or
cvtps2pi
jae
sbb
popf
clc
mov
xor
fisttpll
frstor
mov
xchg
pop
in
dec
insb
or
rcll
sbb
fisubrl
adc
or
xlat
in
add
inc
mov
fstl
cld
dec
int3
sbb
mulps
and
mov
das
out
and
aaa
sub
in
sbb
lock
mov
rclb
dec
xlat
inc
call
divps
sti
dec
popf
sub
jnp
sahf
lret
xchg
test
icebp
in
mov
stc
xor
into
add
lret
data16
repz
in
jle
nop
lds
dec
mov
jecxz
xchg
insb
pop
sbb
mov
and
add
pop
inc
sub
repnz
xor
incl
add
je
dec
mov
sbb
aam
adc
xlat
cwtl
lret
movsl
dec
je
imul
negb
test
vaddpd
ret
mov
je
flds
cmp
inc
in
ror
cmp
insl
dec
xor
pop
push
xor
jp
sub
push
mov
les
shrb
push
jmp
ja
in
lds
mov
mov
mov
cmp
fisubl
fildll
repz
inc
aam
lret
fwait
adc
dec
fcompl
movsb
pop
push
scas
fcomp
pop
sarb
ret
jp
gs
out
call
popf
xchg
mov
testb
test
push
and
jb
dec
sbb
fdivs
ret
orb
das
adc
fistl
inc
sahf
cmp
fbld
stos
rcll
mov
and
daa
and
mov
call
sbb
jmp
movsb
add
ds
cmc
imul
test
push
stos
test
sub
lds
in
push
int
fwait
hlt
xor
leave
jecxz
jno
or
mov
push
in
xor
shlb
sub
and
and
fisttps
sub
fcoms
pop
fiadds
clc
mov
jecxz
popa
cli
loopew
popl
fwait
fwait
and
inc
cwtl
add
xchg
adc
mov
and
dec
add
int3
daa
lahf
jae
inc
in
pop
insb
jbe
jg
sti
xor
jnp
clc
les
push
adc
mov
je
sbb
add
daa
jmp
fisubs
loop
mov
movsb
mov
inc
push
add
in
call
mov
cmp
mov
and
mov
sub
je
in
lock
push
xchg
mov
int
jnp
and
out
lods
jmp
into
and
movb
mov
jmp
ljmp
aad
ret
daa
or
push
mov
leave
xchg
fwait
adc
sub
test
dec
repz
es
lret
sti
sub
btr
lods
test
lret
xor
inc
scas
pop
push
lret
fiadds
filds
lock
das
loopne
incl
js
lock
xchg
xchg
cltd
xor
out
sub
lret
jae
loope
pop
fdivrl
dec
pop
outsl
or
test
pusha
mov
cltd
push
fucom
adc
mov
xor
sbb
push
daa
lea
or
xor
dec
push
push
push
sahf
cmp
xor
and
clc
push
aam
out
push
cmp
add
enter
decb
push
dec
rol
into
push
mov
inc
xorb
mov
lods
sbb
mov
rorl
cmpsl
push
sahf
jbe
and
lods
adc
fsubl
ja
in
xor
mov
push
push
push
mov
jne
dec
scas
push
dec
in
dec
scas
popf
adc
scas
hlt
mov
aad
mov
sub
or
add
jecxz
out
xchg
adc
cmpsl
js
lds
pop
xor
inc
jmpw
or
sbb
mov
leave
mov
ret
mov
mov
pop
jle
adc
jecxz
mov
enter
shlb
xchg
outsb
xor
xchg
dec
and
push
push
push
imul
arpl
mov
and
in
out
rclb
ds
lahf
lret
in
addr16
mov
aaa
fisubl
lds
pop
xor
pushf
or
lds
push
cld
stos
jb
mov
mov
adc
mov
mov
jno
adc
movsb
bound
xchg
add
cmp
sub
movsb
sub
mov
mov
leave
iret
lcall
cltd
lods
inc
movsb
into
fsubrl
shr
jo
sbb
xchg
int3
pusha
xor
rorl
mulb
cwtl
scas
push
push
orl
hlt
cmc
rcrb
insl
xchg
inc
adc
adc
rcrb
repz
jb
xchg
std
fwait
mov
cmpsb
aam
cltd
add
subb
mov
xor
out
es
mov
push
loop
xchg
ds
push
dec
mov
popf
negl
mov
out
les
inc
cmp
or
imul
jecxz
add
stos
xchg
cmc
lret
in
pop
add
ljmp
xchg
mov
sbb
loop
mov
dec
pop
stos
dec
popa
ljmp
push
sub
push
jae
pop
imul
out
ljmp
insb
shlb
movsl
out
stc
xchg
scas
push
mov
pop
and
lret
pushf
rcrb
lods
ficoms
sbb
sbb
enter
int
and
fcmovbe
cmp
insl
shlb
pop
and
adc
cmp
and
xor
xchg
push
sub
and
xor
gs
sarb
call
adc
adc
xchg
and
jno
jle
dec
lret
mov
andl
pop
push
call
lret
arpl
sbb
push
sbb
xchg
rcr
push
xor
push
cmp
sub
mov
decb
aad
push
sub
push
xor
push
lds
or
movsl
dec
and
and
mov
sbb
rcrb
dec
jmp
adc
mov
mov
cmc
add
jl
or
cwtl
lock
movsl
xchg
mov
data16
ds
jle
mov
pop
inc
pop
push
fdiv
push
into
scas
jg
fyl2x
xor
ror
adc
addl
mull
mov
pop
sub
mov
dec
xor
push
lods
shrb
fnstcw
out
mov
sti
xlat
shl
mov
jno
jo
push
dec
jl
outsb
addl
sub
sub
mov
aad
mov
dec
adc
mov
mov
sbbl
int3
loop
lods
imul
and
into
add
ficompl
hlt
testb
mov
fisubrl
out
adc
test
fs
and
mov
jne
cmpsl
loope
lret
cmp
cltd
popa
pushf
xor
adc
mov
sub
stos
dec
repnz
mov
faddp
dec
cmpsb
into
sub
stos
mov
push
dec
subl
xchg
mov
fsubrl
jg
mov
jo
loop
add
dec
inc
add
subl
dec
std
adc
les
inc
movsb
push
rcrl
jb
mov
ret
icebp
cld
mov
mov
stc
insl
lahf
outsl
aas
adcl
int3
clc
data16
bound
jbe
xchg
xchg
aas
sub
mov
lock
mov
adc
fdivl
push
sbb
leave
bound
mov
add
add
mov
sbb
xchg
xchg
jmp
popa
rcrl
sbb
daa
adc
sbb
xor
in
jns
aad
push
sub
push
mov
mov
rorl
pop
test
push
stos
lea
ljmp
movsl
leave
mov
imul
inc
xchg
dec
mov
adc
push
addb
push
inc
lcall
sub
es
test
pop
scas
inc
fucomi
in
mov
pop
xchg
movsb
pop
outsl
lock
jle
scas
pop
out
ret
cld
jae
cld
out
daa
dec
iret
jge
xchg
pop
mov
ror
ret
adc
in
decl
inc
lret
cmpsb
shll
fidivrs
out
pop
lea
fwait
inc
jbe
mov
mov
bnd
rolb
push
push
movsb
dec
jmp
xchg
std
sbb
and
or
mov
push
mov
popf
and
test
xlat
jmp
call
mov
cmp
and
sbb
jae
inc
mov
sti
jae
fistpll
xchg
addr16
cltd
loop
les
mov
cli
ficompl
enter
push
call
jne
fs
fbld
addb
imul
aas
mov
popf
daa
pop
dec
les
ljmp
fisubl
pop
add
sar
cmp
add
cmp
jle
jbe
lods
inc
in
sarl
sti
iret
js
jle
xor
pushf
cli
lret
mov
pop
pop
inc
jg
out
aaa
dec
lock
cmp
sbb
mov
adc
loope
les
jp
fisubrs
adc
mov
pop
hlt
repz
sbb
pop
inc
dec
and
xchg
and
add
out
call
jmp
loop
sbb
stos
adc
and
push
dec
int
mov
jae
sbb
inc
hlt
sbb
and
test
repz
push
outsb
je
add
dec
jne
sub
ja
fs
jmp
inc
mov
xor
xor
jg
sbb
push
shrl
jge
out
cmp
enter
and
mov
fsubs
sub
add
cli
xor
fcmovne
fcoms
mov
fwait
cmpsb
imul
lret
test
jno
in
mov
mov
jae
or
inc
arpl
lea
fwait
add
jecxz
sti
iret
xchg
scas
sar
sbb
pop
or
xchg
fstpl
xchg
stos
inc
mov
jp
jge
dec
shlb
mov
inc
lret
popf
outsl
mov
int3
pop
into
mov
repz
push
adc
shrb
add
ficoml
popa
dec
sbb
cs
dec
popa
pop
orl
outsl
mov
rclb
mov
sbb
mov
jns
roll
inc
jno
jecxz
movsl
mov
cltd
je
dec
dec
mov
or
addr16
mov
call
cmpsb
repnz
adc
push
push
stos
popf
pop
dec
or
rcrb
adc
inc
aas
adc
dec
inc
cs
xor
repnz
cs
stos
push
repnz
sub
mov
adc
xchg
and
sub
sbb
in
scas
mov
mov
xchg
cmpxchg
out
jno
and
cld
mov
lcall
bound
sbbl
ror
add
cmc
inc
clc
dec
and
scas
xchg
scas
out
cmp
rorl
pop
add
insb
lods
jnp
sahf
xchg
adc
pop
fwait
pop
inc
mov
push
push
jb,pt
push
mov
and
pop
lcall
scas
inc
lahf
popf
fmull
xor
aam
push
dec
adc
hlt
push
sub
jmp
cmovge
lcall
stc
movsl
cmp
movsl
mov
cmpl
lret
movsl
mov
cmovp
nop
sub
push
inc
loop
aad
adc
xchg
insb
dec
mov
insl
jo
pop
fnsave
cmpsb
loop
mov
xchg
inc
mov
or
ds
push
dec
add
rol
or
inc
inc
mov
pop
jno
lds
jge
inc
cmpb
fsts
mov
dec
mov
sbbl
xchg
pop
adc
mov
xor
add
or
incl
sbb
push
dec
jp
mov
xlat
sbb
lret
and
fidivrs
jnp
sbb
andb
add
pop
pusha
gs
mov
xor
insb
inc
sbb
fs
nop
and
push
or
mov
mov
jo
lret
loop
jmp
es
push
cwtl
lahf
bound
jo
insl
test
push
pop
stos
gs
add
and
hlt
mov
rorl
or
sub
aas
outsb
xor
stos
dec
in
ficoml
jmp
mov
pop
clc
in
fisttps
mov
xchg
lds
sub
into
push
sarl
mov
cmp
sbb
cltd
jo
test
jl
or
push
inc
lcall
rcll
fadds
mov
outsl
ret
btr
xchg
popf
push
mov
fsub
inc
ret
addl
call
push
jbe
adc
dec
mov
adc
enter
xor
mov
rcrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
cltd
push
fucom
adc
mov
xor
sbb
push
daa
lea
or
xor
cmp
repz
and
push
sahf
cmp
xor
and
clc
push
aam
lahf
mov
lock
nop
pcmpeqb
xlat
inc
aad
outsl
dec
sbb
sub
push
or
cld
adcb
pop
dec
mov
mov
sbb
outsl
push
inc
mov
xor
dec
ret
jno
mulb
push
ret
andl
cmpsl
jns
gs
mov
jne
xor
imul
and
mov
push
jb
sbb
js
push
shlb
inc
sarb
je
or
inc
xor
pop
or
add
inc
mov
aad
repz
stos
jmp
mov
mov
lods
mov
out
and
mov
shlb
mov
xlat
xchg
dec
and
push
scas
push
test
call
iret
iret
shll
add
jae
and
mov
popa
jmp
add
xlat
aad
mov
subl
xor
mov
lret
sarb
jne
mov
mov
popa
xchg
mov
xchg
flds
pop
xchg
shll
sub
xchg
cli
pop
or
mov
xchg
movsl
add
jge
imul
inc
std
mov
add
pop
cmpsl
pop
insb
ja
xor
xor
fnstcw
js
pusha
xchg
mov
push
inc
xor
rorl
dec
and
mov
orb
fwait
cs
xchg
mov
imul
pop
outsl
dec
call
scas
inc
popa
mov
mov
sbb
shr
iret
testl
les
lock
cmc
xor
cmc
lds
mov
sbb
mov
loope
insl
or
xor
mov
xor
aas
idivb
cmp
adc
jne
sub
mov
imul
mov
adc
mov
and
jl
or
push
pop
bound
sub
and
xor
dec
sbb
fnstsw
cwtl
adc
movsb
ret
xor
dec
inc
sub
sub
add
stos
inc
repnz
sub
shrl
push
and
sub
es
inc
jb
sahf
pop
and
sub
and
test
xor
bound
das
push
roll
dec
inc
je
mull
mov
rcrb
xchg
xchg
or
fwait
out
pop
jae
inc
and
cmpb
xchg
fldl
add
out
enter
push
hlt
enter
movsl
inc
sbb
xchg
cmp
movsb
cmp
stc
inc
jp
pop
cs
jbe
mov
and
shl
jmp
stc
jae
inc
ret
rolb
jecxz
movl
aad
insl
mov
rcr
adc
es
repnz
and
movsb
mov
cmp
dec
push
dec
sar
movsb
xchg
or
test
pop
mov
xor
test
ss
mov
xchg
cmp
jae
mov
cs
test
nop
cmp
loop
inc
xchg
sets
cwtl
mov
js
lds
movb
lds
bnd
insl
test
lret
cmp
clc
mov
mov
jg
sbb
and
imul
stc
mov
cmp
fs
fs
pop
aad
pop
pop
pop
stos
jecxz
lods
fidivl
imul
push
fsubl
jne
stc
mov
dec
fwait
mov
pop
add
push
pop
icebp
mov
dec
sbb
mov
lea
out
int3
add
ret
mov
pop
jo
mov
sti
push
cld
iret
or
adc
mov
js
mov
sbb
lock
mov
fstpt
out
clc
xchg
push
xchg
mov
push
xchg
shrl
sub
ljmp
or
inc
jns
loope
lret
aam
dec
arpl
out
jmp
or
jo
in
leave
jae
lds
sbb
lcall
pop
push
int3
xor
fldl
mov
xchg
dec
and
add
repz
xchg
pop
xchg
fimuls
or
or
add
leave
fsubrs
fildll
mov
inc
cwtl
dec
lods
push
out
movsl
ret
fmul
pop
mov
lahf
cmpsl
mov
fwait
lea
push
test
out
adc
sub
push
pop
inc
test
insb
push
xor
cs
aam
xor
push
jne
les
pop
mov
pop
add
adc
ret
push
adc
fidivs
cmpsl
jecxz
push
lods
sub
mov
filds
inc
or
sub
cmp
outsb
insl
movsl
aam
mov
push
fst
dec
pop
inc
les
mov
ja
push
in
mov
push
sub
lcall
jl
orl
pop
push
mov
mov
inc
inc
lea
fwait
push
xchg
imul
sbb
cmp
xchg
mov
mov
rcrb
dec
jmp
pop
mov
popl
mov
mov
into
adc
inc
push
sub
mov
jl
cmp
cmp
in
jne
jb
int3
pop
add
pop
je
pop
xchg
mov
inc
cmp
fstpt
sahf
dec
dec
sub
ljmp
cld
mov
shlb
push
mov
push
ret
or
imul
cmc
loopne
imul
add
pop
xor
testb
mov
xor
cmp
leave
test
cli
stos
repnz
mov
push
and
enter
xor
popf
mov
sub
test
std
dec
jge
shll
inc
pop
inc
sbb
jl
scas
mov
test
add
inc
pushf
sub
iret
cltd
xor
pop
repz
xor
faddl
xchg
jl
addl
add
push
mov
xlat
xor
test
insl
out
movsb
inc
sbb
cmpsl
ret
out
xchg
cmp
lret
insb
xor
mov
cwtl
push
sub
lret
and
and
xchg
cltd
clc
or
mov
sbb
ljmp
repz
adc
test
mov
jno
inc
je
in
lahf
pop
cmpsb
pop
push
sub
dec
push
adc
add
rcrl
sbb
inc
pop
cmp
mov
imul
pop
mov
push
push
clc
xor
scas
or
push
mov
mov
ljmp
imul
mov
stos
sbb
cld
push
iret
fcmovbe
loop
inc
sbb
jge
shrl
or
jmp
enter
pop
cmc
xchg
fwait
insb
push
dec
test
cmp
pop
sub
iret
and
lea
or
clc
mov
mov
ds
mov
sub
sub
lahf
jle
int3
test
fdivrl
mov
cs
or
or
xchg
fcoms
lret
mov
clc
sub
aad
into
pop
stos
cmp
aaa
in
movsl
divb
loop
ja
enter
fisttpl
pop
cmp
sbb
lcall
test
xor
push
lock
jp
sbb
add
test
lcall
push
gs
push
xor
mov
jge
jae
jge
movb
in
jmp
roll
imul
les
lret
add
stos
or
pop
cmp
stos
sub
sub
inc
push
js
adc
call
scas
inc
fwait
push
shlb
jge
andl
xchg
xor
mov
jo
and
je
mov
out
xor
int
out
cmpsl
ret
fincstp
clc
clc
sbb
jb
xchg
lock
ret
or
rcll
add
or
xor
push
dec
xchg
sbb
mov
jns
ss
and
icebp
cmp
cmpsb
neg
out
rolb
mov
movsl
mov
aas
mov
daa
jbe
mov
inc
cltd
push
push
cmpsb
add
jno
les
mov
arpl
std
fldenv
xor
jae
mov
in
mov
rcl
cmp
inc
pop
or
aaa
mov
mov
dec
dec
imul
xor
jp
mov
jnp
xchg
add
movsb
cmpsl
mov
mov
cmp
jo
jb
dec
nop
sub
or
cmp
sbb
add
sub
push
mov
clc
loop
movsl
ret
mov
mov
lahf
pop
xchg
fcomip
jb
fwait
outsl
push
ret
xchg
imul
jb
or
addb
in
mov
push
xchg
jle
push
dec
test
rorb
jns
outsb
in
movsl
sbb
lahf
push
adc
adc
movsl
inc
sbb
sbb
pusha
mov
sbb
adc
ret
cmpsb
sub
sarb
sbb
mov
push
sbb
imul
stc
jnp
jns
pop
sbb
push
xchg
popf
daa
sbb
jae
or
xchg
jp
inc
test
outsl
sub
lods
lds
jl
sbb
pop
into
mov
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
aam
andl
mov
mov
and
xchg
jp
or
test
sub
mov
out
mov
gs
std
mov
mov
xor
test
push
or
add
xor
pop
pop
mov
fwait
cmp
and
int
pop
test
xor
jl
fucomip
sbb
aas
call
hlt
mov
inc
xor
pop
mov
add
gs
aad
jo
push
aad
sbb
rcrb
adc
sub
jne
test
clc
in
fisttps
mov
test
rorl
rcll
popf
jle
inc
push
xchg
sbb
pop
mov
leave
xchg
fwait
adc
mov
push
cmp
sbb
scas
in
pop
mov
stos
loope
xchg
adc
xorl
mov
add
insb
aas
ja
push
lods
inc
cwtl
dec
lods
push
loope
movsl
ret
fcomp
push
mov
lahf
cmpsl
jnp
enter
insl
mov
loopne
loopne
je
cmp
dec
mov
push
adc
jmp
inc
rcl
push
xor
mov
fwait
sbb
arpl
int3
inc
pop
in
mov
mov
pop
xor
call
hlt
cld
or
out
or
inc
pop
xchg
mov
ret
mov
and
mov
sbb
push
add
lds
int3
mov
ja
inc
fs
pop
add
call
push
sub
lahf
xchg
xor
xchg
mov
mul
lods
adc
xchg
loopne
mov
adc
loop
cli
icebp
xchg
jmp
mov
aad
pusha
mov
jmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
dec
xchg
dec
mov
insl
adc
cld
push
sub
mov
pop
fisubs
fcomps
outsl
das
sbb
out
clc
hlt
and
and
push
xchg
enter
aam
cmp
fisubrs
das
pop
xlat
adc
ret
jmp
mov
filds
mov
aad
mov
loopne
rorl
ds
daa
idiv
popf
xor
popa
mov
ss
sbb
test
sub
mov
mov
and
int
ret
popf
mov
fcompl
mov
cli
mov
cmp
pop
lret
jmp
les
xor
and
add
call
xor
or
imul
adc
dec
and
fcomi
js
fstps
pop
scas
xchg
ja
addl
add
push
aas
insl
cwtl
dec
and
xor
test
insl
repz
movsb
inc
sbb
movsl
sti
fdivp
gs
mov
call
int3
pop
sub
loopne
hlt
xor
mov
loopne
mov
lea
push
xor
inc
test
jno
ds
imul
jns
ds
jecxz
rol
loope
sub
jp
cltd
orb
lods
jno
pop
xchg
adc
push
mov
xlat
push
aaa
xchg
pop
test
cwtl
xor
aaa
jns
in
mov
mov
cmpsl
dec
cs
pop
in
je
cmp
lret
mov
xchg
mov
lock
cltd
jo
test
jl
fcmovnu
aad
sbb
or
sarl
gs
lods
cmp
fisubrl
pusha
mov
xor
js
insb
push
mov
sarb
iret
and
lea
jae
rcr
mov
inc
cmpsb
pop
ret
pop
xchg
mov
sub
xchg
daa
pop
mov
jnp
shll
mov
mov
mov
or
and
shll
shr
test
dec
movsb
lea
lfs
xchg
dec
out
call
push
ficoms
push
mov
fwait
mov
add
dec
push
sti
call
jo
or
or
cltd
js
divb
int3
sbbb
xchg
shrl
stos
push
push
pop
movsb
fisubrl
lret
jns
popf
xor
or
mov
push
xor
in
les
ret
cmp
xchg
add
ljmp
cli
movsl
mov
fsubrs
ss
sbb
jmp
scas
inc
fwait
push
shlb
movb
pop
add
or
sbb
dec
and
je
mov
mov
mov
pushf
pop
into
xchg
mov
mov
bound
sbb
mov
das
fistpll
push
or
loop
jne
pop
lds
mov
movsb
adc
mov
pop
stos
rcrl
pand
ret
dec
imul
dec
push
mov
jno
pop
stc
cmpl
cmp
mov
mov
mov
nop
adc
divb
dec
jno
lds
push
clc
mov
inc
mov
test
sti
lret
jno
push
mov
cmpsl
insb
sub
mov
xchg
add
xchg
or
std
dec
sub
pop
mov
mov
and
lahf
scas
mov
mov
push
loop
xchg
mov
sarb
sub
push
mov
rclb
movsl
ret
inc
jmp
and
push
popl
or
mov
js
loopne
jecxz
mov
or
loop
jle
dec
pop
leave
cs
jne
dec
nop
imul
dec
sarb
sahf
pop
imul
mov
hlt
cmp
dec
cmp
add
pop
adc
gs
rcrl
adc
lods
fs
test
dec
jb
and
mov
test
sti
dec
sbb
pop
push
sahf
mov
cmpl
pushf
movsb
lea
adc
sbb
ss
xor
test
les
cmp
fwait
push
xchg
std
scas
shrb
push
ret
into
xor
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
loopne
andl
mov
mov
and
xchg
imul
xchg
insl
jg
fwait
lea
aad
sti
mov
scas
sub
sbb
sub
loop
lcall
lcall
inc
adcb
les
inc
mov
mov
push
mov
sti
mov
pop
loop
popa
mov
sbb
sbb
lret
rcrb
dec
sbbb
jne
les
lods
std
dec
pop
fiaddl
xchg
mov
cmp
xchg
data16
sbb
add
imul
les
xchg
adc
test
lods
inc
sbb
scas
in
xor
popf
scas
cmp
sbbl
arpl
or
or
add
nop
fsubrs
fildll
mov
inc
cwtl
dec
xor
xchg
inc
sub
call
push
gs
jmp
jb
addr16
push
pop
fucomp
test
pop
hlt
pusha
inc
dec
or
js
sub
push
repz
gs
daa
fstpt
sahf
dec
dec
sub
out
movsb
jbe
mov
cmp
loopne
mov
repz
fmuls
mov
or
push
repnz
imul
sub
rcrb
sbb
mov
push
jns
les
pop
lret
push
cmc
mov
popf
jmp
int3
jae
arpl
lds
sbb
jl
adc
fdivs
mov
pop
or
fwait
lods
mov
mov
push
adc
push
ret
outsb
pop
leave
mov
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
clc
push
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
sbb
pop
fisubs
rcl
rol
mov
xor
or
xor
and
in
andl
inc
sbb
iret
cmpl
data16
lret
lock
fiadds
dec
inc
push
addb
add
ret
mov
xor
leave
sbb
adc
sub
mov
stos
mov
push
sahf
xchg
or
fstl
pop
dec
sbb
fcoms
callw
mov
pop
ret
flds
mov
stos
add
js
mov
or
shrb
sbb
scas
fcomi
js
add
xor
xchg
into
or
add
add
push
mov
lock
sub
fisttps
cmp
aam
inc
and
stc
jmp
mov
sbb
adc
jle
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
push
mov
out
lcall
inc
inc
fcmovnu
xor
out
mov
mov
mov
sbb
push
outsb
sbb
pop
sub
cli
jp
fnsave
fs
inc
inc
mov
sub
call
scas
dec
mov
or
cmc
fisttpl
or
fisttps
lret
pop
adc
push
mov
lods
cmp
inc
lcall
gs
lods
cmp
or
lahf
push
xchg
cld
out
js
insb
push
leave
pop
leave
loop
sarb
pop
sub
iret
and
lea
inc
mov
adc
bound
push
xor
push
jg
fsubr
pop
out
inc
sbb
jnp,pt
sti
inc
adcl
adc
xchg
mov
add
sbbl
mov
push
inc
xchg
sbb
mov
rcr
cmc
fsubs
mov
jae
xchg
mov
out
mov
jnp
xchg
push
and
jmp
xor
sbb
cltd
orb
xor
cltd
and
ret
mov
popf
jnp
fadd
stos
dec
sub
insb
push
push
in
repz
mov
jl
iret
push
add
fisttps
lcall
xor
mov
lock
pop
stos
xchg
push
adc
push
mov
add
push
sbb
mov
cmp
fwait
push
shlb
sbb
andl
xchg
cwtl
outsl
jecxz
dec
mov
sbbl
into
and
xchg
mov
pop
fidivrs
pop
adc
jb
fwait
jo
jmp
cmpl
lea
in
mov
push
xchg
and
test
sbb
gs
into
fsubs
ljmp
xor
int
add
in
aas
dec
ret
push
cwtl
scas
adc
or
mov
sub
mov
test
les
stos
ficomps
fdivs
cld
mov
sti
cli
pusha
std
mov
dec
popa
cmp
rcll
andl
nop
or
push
fisubrl
lahf
or
sub
pop
mov
mov
lods
inc
and
lahf
scas
mov
mov
push
loop
xchg
iret
jo
adc
pusha
sarb
mov
repz
dec
xchg
adc
stos
fwait
xor
test
sub
xchg
push
jg
enter
fs
fld1
popf
rcrl
sti
xor
adc
sub
je
or
push
or
inc
cmpb
push
dec
xchg
lea
call
cmp
cmp
dec
call
jg
pop
jb
mov
jns
rcrl
add
xor
add
lock
cld
jl
push
mov
mov
mov
sbbb
xor
lods
jno
push
sbb
push
and
call
adc
std
fldenv
idivl
fs
mov
pop
fnstenv
jno
cld
cmp
int3
test
sbb
or
jl
int3
stos
xchg
stos
cmp
fwait
push
xchg
pop
sbb
push
stos
mov
pusha
pop
into
mov
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
enter
inc
inc
sbb
ror
loopne
stos
popf
jecxz
or
dec
or
ret
mov
push
aas
out
xor
lahf
cmpsl
mov
pop
fdivrs
lock
mov
and
mov
jno
mov
dec
mov
push
adc
in
shlb
fdivl
test
push
push
orb
into
fwait
mov
jle
push
sbb
enter
or
and
nop
out
sbb
push
xchg
cltd
pusha
or
lahf
mov
stos
pop
aaa
stos
lods
mov
sbb
sub
cmp
dec
or
data16
mov
mov
outsb
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
sub
mov
or
jo
sbbl
xor
or
mov
test
jnp
pop
jmp
dec
and
imul
push
add
push
movsb
inc
sbb
test
mov
leave
xlat
pop
ffreep
jecxz
sub
jp
pop
sub
in
hlt
mov
xchg
test
mov
fdivs
or
pop
mov
push
repz
mulb
inc
sahf
sub
inc
push
xor
pop
mov
adc
ljmp
stc
mov
test
gs
sbb
add
sub
movsb
leave
push
push
xchg
xchg
jae
lahf
hlt
in
push
xchg
movb
xchg
test
insb
mov
push
inc
scas
xchg
push
xchg
cmp
mov
stos
add
dec
mov
or
shrb
sbb
scas
fcomi
js
mov
fsubl
xchg
xchg
loopne
popa
mov
rorb
cmp
jnp
mov
daa
scas
xor
imul
fstl
shrl
lahf
cmp
dec
xchg
scas
adc
out
mov
add
in
hlt
xor
xchg
int3
and
cmpsl
stos
pop
lea
adc
push
xor
icebp
fisubs
xor
pop
adc
popf
movsl
pop
and
adc
pop
icebp
fdivrs
xor
rcrl
add
xor
push
repnz
pop
jecxz
repnz
jns
mov
or
inc
mov
lds
mov
sbb
ja
stos
cmp
mov
add
inc
shlb
or
imul
mov
fwait
lods
gs
lods
cmp
cmp
pop
aad
js
insb
push
dec
mov
shlb
call
sahf
cs
les
cmp
adc
sbb
jnp
push
cmc
in
xchg
and
push
fildll
push
into
inc
fstp
sbb
std
jecxz
sti
int
fsubrs
bound
sbb
mov
es
hlt
jle
push
ss
mov
or
jmp
adc
pop
jnp
sbb
call
les
cmp
push
iret
and
mov
mov
inc
sbb
fiadds
je
pop
sbb
add
adc
or
sub
sub
inc
insl
movsl
dec
or
dec
sub
and
les
mov
ds
movb
cltd
sbb
cmc
int
test
nop
loopne
test
and
cmp
lock
mov
push
dec
inc
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
out
js
mov
add
xchg
ds
inc
jmp
fucom
dec
aam
stc
mov
adc
out
inc
jge
imul
rcr
push
pop
insl
cmovg
jmp
mov
cltd
pop
xchg
mov
js
sbb
mov
ret
xor
and
mov
movsb
lea
add
shlb
call
jae
push
mov
xchg
dec
js
incl
xchg
fistps
xlat
mov
hlt
mov
mov
sbb
outsl
in
fnstsw
and
inc
dec
or
xor
addr16
xchg
testb
aad
sbb
sub
test
sub
call
jnp
lods
mov
mov
clc
mov
xchg
push
nop
pushf
outsl
xchg
dec
mov
or
sub
imul
adc
pop
mov
test
cltd
lods
inc
and
lahf
scas
mov
mov
into
xor
mov
mov
and
outsb
jno
popl
mov
fcoms
and
xchg
jbe
pop
repz
cmc
inc
push
into
mov
push
gs
outsl
mov
cmp
popf
repz
cmp
adc
mov
in
jne
dec
aad
and
cmp
xor
cmp
add
mov
hlt
xor
in
cld
aas
in
and
mov
inc
jnp
pushf
fwait
aaa
test
dec
mov
sbb
mov
sbb
and
cmp
and
pop
xor
lods
dec
sbb
and
dec
pop
inc
cmp
pop
pop
ljmp
popf
lret
add
sub
inc
sbb
or
in
jnp
stos
xchg
stos
cmp
fwait
push
xchg
cmp
shrb
push
ret
into
mov
fucomi
repnz
and
nop
adc
adc
fwait
andl
xchg
fucomi
or
add
xchg
mov
jmp
inc
cwtl
dec
int
push
fidivrs
not
xchg
xor
nop
and
call
or
lds
enter
jle
jecxz
cmp
inc
sbb
sub
mov
dec
dec
mov
cltd
pop
gs
fistps
andb
lock
ffree
cmp
dec
jns
ds
mov
mov
jp
mov
imul
xor
or
aad
dec
test
imul
jb
mov
in
adc
stc
insb
mov
mov
mov
xchg
test
dec
mov
push
addb
add
dec
les
xchg
adc
test
lods
inc
sbb
scas
movl
out
cmc
out
loope
mov
mov
mov
push
inc
push
mov
mov
push
fidivrs
repz
jp
mov
nop
cmpsl
ret
punpcklwd
outsl
or
vpsubq
xor
cmc
les
sub
push
and
or
dec
pop
mov
dec
mov
sbb
or
fcomp
dec
call
icebp
mov
mov
rcrl
adcb
mov
add
xchg
cld
xchg
or
fs
icebp
mov
and
push
dec
or
inc
incl
xchg
mov
mov
jnp
jae
fistpl
jo
arpl
pop
sub
inc
sbb
or
cmp
movsb
pop
jnp
mov
lods
mov
mov
push
adc
jge
inc
aad
in
sti
lret
pop
filds
in
or
sbbl
sub
push
xchg
adc
data16
or
mov
loopne
mov
inc
and
lret
gs
stc
outsl
push
pop
clc
dec
fcomps
or
mov
sbb
fwait
push
mov
adc
xchg
pop
inc
push
dec
mov
cmc
hlt
pop
mov
sbb
sti
jge
into
adc
imul
in
test
inc
sbb
push
out
inc
sbb
repnz
mov
cmpsl
ret
test
dec
mov
jno
dec
xor
jns
pop
jb
movsb
mov
xor
scas
sbb
lcall
mov
mov
popf
aad
insb
sbb
push
or
xor
push
xchg
popf
cmp
add
push
lret
pop
test
dec
inc
sbb
mov
push
repz
cld
mov
icebp
xor
pop
sub
jg
or
add
xchg
and
mov
sub
cmpsb
shrl
pop
out
inc
sbb
mov
jge
outsl
daa
sbb
adc
xor
or
lret
inc
dec
sbb
mov
cmpsb
out
aad
inc
cmpb
cs
mov
push
mov
push
push
push
sahf
cmp
mov
push
pop
push
or
fisttps
data16
pop
mov
repnz
add
lods
cmpsb
sbbb
popf
xchg
icebp
mov
movsb
lds
nop
lds
mov
js
test
ljmp
mov
jnp
arpl
dec
sub
mov
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
test
into
pushl
andl
in
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
push
mov
xchg
cltd
add
mov
pop
adc
add
sti
in
and
or
or
insb
sbb
das
std
fidivrs
sub
fistl
inc
sahf
jecxz
cmp
and
and
mov
xor
lahf
or
aad
or
add
or
insl
lcall
push
fcompl
jne
fs
adc
inc
push
test
pop
sbb
movsb
mov
cmp
lods
rcr
jae
jns
and
lret
xlat
imull
lods
mov
sbb
pusha
scas
xchg
stos
mov
stos
xchg
push
adc
push
lret
shrb
enter
cmp
es
pop
iret
push
ficoms
loop
xchg
pop
jb
add
mov
jae
or
cmp
or
les
xchg
test
push
sub
xchg
pop
pop
cmpsb
call
jnp
mov
rolb
push
adc
sbb
aam
call
lret
push
into
dec
xchg
ret
popa
sbb
idivb
shrb
movsl
pop
sbb
inc
adc
test
call
add
jo
test
ret
inc
sub
push
pop
ljmp
inc
clc
lds
lock
xchg
lahf
pop
lret
fsubr
mov
xchg
leave
js
scas
mov
jecxz
lret
lods
mov
mov
fdivs
jge
xchg
dec
mov
or
mov
imul
adc
pop
xchg
push
mov
aad
jge
sahf
adc
js
ja
insl
inc
fwait
leave
or
js
cmp
mov
andl
or
add
int
dec
and
pop
ja
mov
aas
cmpsb
enter
adc
or
enter
jg
xchg
cmp
enter
hlt
xor
and
xchg
push
test
xchg
jmp
cmp
cmp
shlb
mov
lods
sti
lods
int
clc
into
cmp
sbbl
pop
lds
jl
out
inc
jno
jecxz
int
mov
dec
rol
pop
inc
pop
ljmp
gs
adc
pop
adcb
stc
cmp
fisttpl
mov
dec
ljmp
popf
lret
add
sub
inc
sbb
or
jl
dec
stos
xchg
stos
cmp
fcoml
jb
dec
jns
arpl
sbb
andl
out
push
pop
xchg
push
adc
cmpl
sub
dec
jae
and
push
push
scas
push
adc
std
ret
mov
jg
pop
mov
xor
ret
inc
fdivrs
rcr
cmpsb
sti
xor
add
sub
or
cmp
ds
mov
movsl
adc
add
xor
and
jmp
arpl
xchg
mov
push
into
lcall
pop
dec
pusha
fwait
call
lock
add
mov
mov
or
fnstenv
jmp
sbb
and
pop
stos
push
outsl
jno
orl
int3
in
out
lret
stc
pop
in
mov
mov
xchg
test
dec
mov
ret
scas
add
shrb
pop
dec
les
fistl
sub
jecxz
clc
mov
jno
aad
cwtl
es
repnz
push
mov
fsubrl
pop
add
rcrb
subl
in
enter
xchg
sahf
data16
inc
jmp
inc
cwtl
dec
int
push
fidivrs
cmc
imul
push
mov
cmovge
jb
xor
inc
jge
rcll
inc
add
mov
jmp
bound
jb
or
rcrb
pop
push
mov
jno
pop
xchg
add
aam
popf
jl
out
pushf
imul
jno
jecxz
movsl
mov
cltd
jl
cltd
nop
lock
aad
pushf
ret
pop
fidivs
dec
xlat
movsl
mov
mov
stos
mov
ja
fildll
sti
inc
inc
mov
jo
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
xor
xchg
stos
std
mov
movsl
mov
jns
sahf
fisttpll
xor
icebp
ret
bound
cmp
fwait
leave
loop
jnp
or
mov
sub
xchg
sub
nop
pop
sub
sbb
xchg
adc
data16
push
fidivrl
cmp
sbb
mov
xorb
or
hlt
rcr
cmpsb
fcomi
sub
loope
enter
out
pop
fwait
adc
test
add
mov
popf
xchg
push
adc
cmp
inc
pop
inc
inc
mov
and
ljmp
mov
or
sti
pop
es
or
sahf
rol
add
aad
hlt
roll
xchg
or
push
frstor
push
test
lret
ljmp
or
mov
cli
out
jae
fistpl
loop
arpl
pop
sub
inc
sbb
or
cmp
scas
enter
mov
jne
pushf
adc
pop
lods
jg
outsl
inc
sbb
ss
cli
rol
popf
scas
inc
and
icebp
and
cmpl
int3
add
add
fdivs
rcll
data16
push
mov
dec
out
popf
push
sbb
mov
sti
inc
es
mov
mov
shr
sub
push
jl
shrb
cmp
cwtl
movsb
popf
jecxz
lret
cltd
jns
pop
test
test
je
in
inc
icebp
mov
mov
mov
hlt
cmp
fists
add
fimuls
jae
jecxz
xchg
mov
mov
dec
and
mov
mov
cmp
sbb
xlat
pop
sbb
test
clc
test
sbb
xchg
add
fucomp
cld
std
scas
lods
mov
popf
aad
pop
jb
test
dec
mov
or
lcall
std
clc
pop
add
adc
mov
cmp
scas
dec
lods
jp
aaa
pop
push
xchg
bnd
pusha
xchg
fbstp
ljmp
rep
add
push
aam
add
cmp
rcll
jecxz
or
rcrb
cli
mov
and
push
mov
call
inc
vpor
mov
sub
mov
cwtl
push
add
and
hlt
sub
push
dec
mov
adc
scas
int3
fwait
jns
scas
push
into
adc
cwtl
adc
mov
mov
orl
xor
cltd
adc
jecxz
sbb
or
subb
dec
fsubrl
pop
imul
mov
pop
mov
dec
cmp
mov
testl
pop
cli
cmp
cmpsl
bound
lret
bound
xchg
dec
inc
shlb
or
addr16
outsb
xchg
dec
jl
fistl
test
popf
adc
dec
movsb
jae
insb
fucomi
sbb
pushl
cli
xchg
and
jb
adc
mov
jae
or
cmp
roll
xchg
inc
and
aas
loop
sub
mov
mov
xchg
pop
push
xabort
mov
psraw
inc
rorb
mov
adc
ds
mov
mov
movsl
jne
imul
pop
mov
push
ds
fdivr
pop
loopne
mov
push
cmc
cmp
mov
ret
pop
pop
xor
sub
cmp
pushf
int
adc
push
shlb
xchg
movsl
mov
mov
and
xlat
stos
dec
sahf
pop
cwtl
push
test
pop
sbb
sbb
stos
jbe
ljmp
popf
lret
fists
les
sbb
inc
sbb
sbb
inc
sub
ret
testl
leave
imul
adc
mov
mov
iret
pop
mov
enter
ljmp
pop
sub
mov
andl
lea
mov
sbb
mov
clc
loopne
mov
mov
mov
xchg
mov
dec
jno
push
mov
or
mov
xchg
dec
xorl
adc
push
xchg
sbb
sub
fildll
stos
sub
xor
dec
in
out
and
cmp
sbb
add
push
cwtl
mov
mov
mov
add
imul
sub
sub
dec
and
xchg
aad
pop
stos
fsubr
mov
xchg
leave
dec
shrl
adc
lods
mov
mov
jne
cmpsl
xchg
push
nop
pop
xor
add
adc
xchg
ret
fists
add
sub
or
sahf
push
mov
push
pop
pop
mov
lahf
fucomp
mov
pusha
inc
loope
xchg
popf
pop
mov
enter
out
mov
xchg
push
adc
cmpl
sub
or
lock
mov
xorb
aam
pop
fs
mov
push
mov
lods
jnp
sti
insb
xchg
sbb
movsl
out
adc
inc
cmp
sbb
jecxz
cwtl
sbb
rol
push
adc
out
cmpsb
and
call
and
aas
lods
dec
adc
out
and
fsubr
in
push
dec
adc
clc
lds
mov
repnz
push
pop
sub
dec
popa
xchg
enter
mov
mov
jne
inc
mov
mov
mov
stos
mov
ja
in
test
test
inc
mov
lods
ljmp
popf
lret
add
sub
je
mov
mov
movsl
sbb
lcall
or
mov
lods
inc
sbb
jmp
mov
adc
arpl
in
rcrb
icebp
inc
aam
clc
mov
adc
cwtl
lahf
mov
sbb
xchg
lea
ret
add
fwait
ja
xchg
jmp
int
popf
pop
jo
fdivrl
xor
xchg
in
lea
xor
push
and
mov
hlt
je
and
inc
mov
sbbl
cmp
rorb
mov
shrl
mov
dec
adc
xchg
lods
ds
sbbl
aas
mov
xor
imul
cwtl
lret
push
sbb
dec
and
pop
stos
push
outsl
jno
adc
mov
in
lock
stc
dec
pop
lods
mov
mov
xchg
test
mov
inc
cmp
jge
jp
loope
xchg
stos
inc
and
jns
mov
cltd
push
fsts
push
jmp
lods
enter
shl
sbb
xchg
outsb
xchg
mov
clc
xor
adc
adc
in
and
inc
les
cmp
xor
or
fwait
cmpsb
fsub
sbb
xchg
int3
aaa
fnsave
xchg
call
gs
in
adc
add
mov
es
pop
loope
jb
lea
lods
data16
mov
cltd
sahf
mov
push
lret
int3
adc
inc
mov
int
mov
adc
jne
sub
lods
inc
sbb
call
sbb
and
stos
sbb
add
nop
xchg
leave
fsubrl
fnstsw
push
test
lret
sbbb
test
movsb
mov
pop
cli
jae
fistpl
movsl
lret
test
sbb
jae
sbb
das
sbb
adc
fnsave
std
lcall
sti
push
lret
pop
pop
adc
cld
arpl
fcmovnu
popf
fsubrl
loop
jl
nop
xchg
push
push
mov
clc
js
shl
sub
pop
push
mov
int
js
fsubs
insl
xchg
popf
aad
aas
mov
mov
clc
push
ret
es
cmpsb
jnp
fdivs
cltd
push
adc
faddl
adc
add
xchg
nop
sub
and
dec
mov
or
stos
sbb
adc
int3
inc
pop
movsl
or
ret
pop
jae
pop
mov
dec
lahf
lret
insb
mov
movsb
mov
pop
xor
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
fucomp
cld
std
mov
in
mov
pop
xor
cltd
nop
cmp
or
imul
mov
xchg
jmp
in
sarl
fcoml
aaa
jge
dec
ljmp
fwait
push
adc
sub
push
cwtl
les
adc
scas
cmp
cmp
mov
and
sbb
add
jp
cwtl
repnz
xchg
dec
stc
insl
lahf
jo
lcall
cmpsl
enter
insb
popf
lahf
push
and
pushf
and
jmp
xor
daa
loope
mov
hlt
dec
movsb
adc
fsts
imul
imul
push
ret
sti
mov
hlt
lock
mov
adc
mov
add
fsubrl
pop
imul
lret
flds
mov
and
mov
imul
jge
fldt
mov
stos
dec
jl
aas
xor
add
outsl
icebp
pop
scas
xchg
stos
mov
outsb
les
fcoml
mov
pop
icebp
mov
cmp
mov
aad
fstpt
xlat
pop
bswap
js
popf
push
fcom
pushf
jae
sub
push
or
cmpl
mov
adc
mov
xchg
cwtl
outsb
mov
movl
mov
pop
sti
cmp
fdivrl
sti
mov
ret
mov
or
movsl
leave
sbb
aaa
incb
rclb
and
mov
jne
pop
mov
lea
addl
les
inc
cmp
or
dec
pop
ret
repz
sbb
and
lahf
lret
jecxz
gs
jle
pop
sub
sbb
mov
cmpsl
mov
loop
cli
ret
lret
movsl
mov
mov
rclb
cmp
sbb
insl
mov
cmp
scas
mov
jns
mov
in
les
leave
push
sbb
ret
add
addb
lcall
sti
imul
into
mov
icebp
lcall
xor
cwtl
es
repnz
add
pushf
imul
mov
add
mov
inc
orl
jle
cwtl
add
mov
mov
data16
mov
push
jno
jge
movsb
mov
cmp
clc
les
movsb
inc
popa
sbb
cmpsb
hlt
js
xor
sbbb
enter
dec
cmp
sub
xchg
lea
fiadds
cmp
sub
and
mov
repnz
sub
mov
push
pop
mov
sub
sbb
sbb
sub
scas
loope
dec
and
nop
test
pop
stos
fsubr
stos
sub
leave
pusha
pop
scas
mov
cmp
movb
sti
xor
push
cmp
sarl
test
sbb
jno
or
xadd
xchg
stos
cmp
or
icebp
mov
jns
enter
icebp
fnstenv
push
loope
fistpll
or
fdivrl
and
je
inc
mov
xchg
sbb
test
push
test
or
sub
or
fcmovnu
sub
inc
idivl
xchg
xchg
ds
mov
jl
cmpb
mov
or
test
cmp
das
in
cmc
mov
movsb
xor
add
inc
inc
add
xorb
mov
repz
sti
dec
push
ret
jecxz
and
sub
cltd
icebp
dec
sbb
mov
mov
jne
jo
movsl
mov
mov
stos
mov
ja
pop
test
test
inc
mov
rorl
cmp
mov
lds
mov
xchg
push
fistl
sbb
or
imul
pushf
sub
mov
roll
mov
icebp
ret
bound
sub
stc
leave
cwtl
cld
shlb
lcall
sbb
xchg
pop
ret
xchg
sub
cmp
pop
mov
push
pop
push
jp
xchg
decb
test
pop
test
pop
push
pop
jmp
iret
push
adc
or
sbb
lret
cmp
in
jne
dec
mov
pop
dec
pop
jbe
movsl
or
pop
mov
daa
pop
mov
iret
fucomip
jl
xchg
jle
dec
lahf
aam
sub
mov
rcr
ret
mov
dec
or
dec
popf
fwait
push
xor
testb
xor
stos
jmp
stos
push
outsl
jno
push
dec
sbb
fildll
xor
int3
lods
shl
fnstenv
cmc
sahf
and
pop
repz
jae
stos
inc
roll
cmpsl
fistl
cld
movsl
or
sbb
imull
sbb
mov
jno
in
fnstsw
push
fcoml
js
push
adcb
int3
sbb
movb
in
dec
test
dec
dec
cmp
xor
jmp
add
mov
jnp
sbb
xor
jne
test
in
pop
or
sbb
or
lock
mov
sub
and
xor
pop
cmp
mov
push
mov
imul
jns
jecxz
push
sbb
inc
sub
mov
lock
sbb
add
popf
cli
leave
fsubrl
fnstsw
push
test
lret
shrb
aaa
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
cmpsb
int
fcompl
lret
mov
cmp
scas
push
jg
je
cmpsl
jo
fwait
add
or
add
cmpl
in
imul
or
pop
inc
test
or
nop
dec
jbe
and
popf
out
movsl
pop
xor
or
inc
popf
bound
fdivrl
es
lods
sti
xor
jl
cmpsb
popl
sbb
mov
dec
add
mov
mov
cltd
jns
jb
cs
adc
gs
subl
adc
and
movsb
mov
jmp
aas
pop
mov
mov
sbb
insb
mov
rolb
neg
in
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
mov
pop
fiadds
dec
ds
pop
int3
jmp
rclb
arpl
jo
test
sbb
xorb
cmp
arpl
cmpsl
add
pop
xor
xlat
fistpl
push
pop
cmpsl
push
jg
mov
enter
cmp
rcrl
lret
fdivs
adc
adc
repz
sbb
adc
movsl
cli
jg
inc
insl
in
imul
cmpsb
fcomp
aaa
jo
dec
push
insb
ret
inc
mov
lea
sub
push
push
push
dec
mov
ret
inc
js
or
lret
addl
test
lods
cltd
aad
dec
pop
xchg
dec
cmp
mov
dec
sar
mov
lock
mov
adc
ljmp
imul
xor
cltd
xchg
dec
pushf
dec
lods
aad
push
lret
fldenv
and
int
xchg
sub
cmp
dec
loope
mov
das
sub
jo
pop
dec
outsb
les
jmp
in
sarl
pushf
pop
jmp
cli
mov
mov
xchg
je
scas
cld
xchg
fwait
out
mov
int3
sbb
rcll
dec
adc
fcomps
test
je
adc
jge
xchg
cmc
mov
mov
ja
fcomps
cmpsb
movb
mov
and
lods
add
pop
and
es
xor
test
outsl
push
pop
sbb
movsb
xor
mov
shl
mov
shr
repz
adc
test
ret
loopne
out
and
fucomip
repz
pop
test
dec
lahf
lret
insb
mov
cmpxchg
pop
xor
mov
and
fisubrl
cmpsl
mov
imulb
dec
sbb
xlat
dec
sbb
sub
leave
push
in
mov
or
mov
rcr
cli
cmp
sub
adc
mov
ret
push
inc
cmp
push
xor
pop
icebp
mov
cmp
inc
mov
scas
hlt
mov
popf
fists
fldl
or
adc
jecxz
and
sbb
inc
mov
sbb
test
cltd
xor
jmp
pop
pop
fiadds
or
enter
mov
inc
mov
cmpb
cmp
loopne
je
sete
mov
in
std
sahf
dec
mov
into
pop
stos
pop
lods
lahf
fdivrs
enter
loope
xor
mov
mov
mov
adc
pop
or
subb
push
pop
imul
test
pop
mov
in
popf
test
adc
je
fucomp
pushf
inc
pop
cld
das
repz
push
or
into
sbbl
daa
jne
dec
push
shll
inc
lcall
xchg
jge
pop
movsb
jbe
push
enter
push
mov
jmp
das
push
std
cmpl
sarb
andl
mov
cwtl
fcomps
test
dec
mov
fnstenv
lahf
aam
mov
imul
sbb
test
xchg
in
test
hlt
in
adc
xchg
icebp
leave
adc
add
dec
cltd
push
es
loopne
adc
jmp
mov
shl
mov
shr
repz
adc
outsl
mov
loopne
out
mov
aas
pop
test
mov
and
fs
xchg
cmpsl
mov
imulb
cwtl
lret
movsl
ret
sbb
push
xchg
push
jb
mov
lds
cmp
xor
adc
stc
je
cld
rclb
arpl
lock
enter
add
push
mov
xchg
push
fcmovbe
sbb
fistpl
xchg
std
and
inc
cmpb
jg
lret
jno
cld
xchg
fwait
out
js
inc
shlb
lds
mov
adc
xchg
adc
dec
aam
stc
mov
sbbb
dec
push
in
xchg
popf
aad
aas
mov
mov
es
cmpsb
jnp
fdivs
popf
push
adc
adc
rcrb
mov
adc
pop
imul
sahf
dec
mov
into
pop
stos
pop
lods
popf
sbb
dec
pop
xchg
dec
add
iret
loope
cmp
mov
imul
cmp
adc
cmp
add
fsubrl
adc
mov
mov
mov
fisubl
jno
xchg
in
mov
and
xchg
pop
ret
jne
popf
lret
arpl
mov
lock
sbb
xor
test
fisubrl
scas
push
testl
fistl
or
and
jge
pop
pusha
jp
mov
mov
popf
lahf
xchg
pop
out
jl
popa
or
shlb
xchg
clc
dec
mov
inc
les
inc
push
mov
mov
or
jo
fwait
sbb
push
movsl
faddl
mov
and
test
je
or
mov
dec
mov
mov
shr
mov
ret
loopne
dec
pop
addl
in
mov
aaa
gs
dec
enter
int
jecxz
dec
sbb
mov
cmpsl
mov
cmpb
mov
fs
xchg
mov
mov
sbb
pushf
lahf
sti
mov
cmpsb
fldt
leave
js
xor
or
data16
mov
mov
or
pop
cmp
mov
mov
xor
xchg
sbb
sbb
icebp
sbb
mov
cmp
fistps
or
inc
idivb
xchg
xchg
aas
inc
mov
mov
mov
call
add
sub
xor
xchg
sbb
sti
cmp
fdivrl
sti
mov
shlb
add
and
mov
shr
inc
cltd
js
mov
jmp
adc
jmp
ljmp
push
orl
movsl
lea
jns
je
mov
or
mov
add
sbb
add
ror
and
mov
or
fnsave
dec
outsl
test
test
fisubrl
jge
test
ljmp
fnsetpm(287
leave
jl
mov
rolb
sbb
xlat
jno
inc
scas
push
pop
jo
movsl
or
jns
mov
cmp
fstl
pop
inc
fnstcw
push
xchg
faddl
repz
cld
into
dec
mov
cmp
add
or
pop
sub
adc
inc
stos
sbb
push
push
fdivrs
movsb
mov
cmp
clc
int3
pop
fdivrl
jnp
int3
jne
dec
inc
adc
dec
mov
loopne
sub
or
int
imul
push
sub
mov
adc
repz
outsb
loopne
mov
repz
sti
dec
push
andl
mov
dec
popa
xchg
push
dec
sbb
adc
lret
xlat
scas
mov
jmp
test
negb
aad
int
sub
push
pop
das
lret
sbb
inc
lahf
lret
sub
xor
push
sti
es
js
xlat
fcoms
outsl
ljmp
sbb
insl
mov
jo
movsl
sbb
fstl
sbb
jecxz
stos
lret
mov
push
dec
xchg
ljmp
popl
lods
and
test
add
mov
fwait
nop
out
mov
xor
ljmp
adc
idivl
xchg
xchg
jle
clc
int3
pop
mov
sti
mov
in
and
sbb
pop
mov
dec
and
sub
out
mov
mov
or
fsubr
mov
sbb
mov
shrb
shr
adc
and
pop
mov
daa
pop
test
iret
fucomip
jl
ljmp
dec
mov
xchg
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
fsubrs
inc
in
mov
sbb
shrl
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
movsl
push
popa
scas
je
lcall
movb
inc
pop
mov
xor
sub
pop
push
dec
jne
loop
out
sbb
and
and
aam
aam
cmp
test
xor
scas
mov
push
pop
push
jp
scas
decb
test
jle
mov
pop
hlt
or
mov
mov
xchg
enter
add
or
mov
imul
sahf
dec
sub
xchg
pop
or
mov
adc
mov
cmp
sbb
sbb
sub
mov
lock
pop
dec
add
dec
inc
cmp
push
hlt
sub
push
xor
nop
xlat
push
mov
cltd
inc
in
mov
subl
int
inc
cmpl
repnz
rcrl
dec
pop
out
cltd
adc
test
xor
aas
arpl
mov
xchg
ret
movsb
cli
lret
jno
aad
mov
aad
jmp
fs
leave
jo
shlb
dec
std
arpl
inc
lcall
dec
les
dec
dec
sarb
mov
inc
ret
int
mov
jne
jmp
add
stos
stos
cmp
mov
lea
xchg
lea
adc
sbb
mov
int
jle
mov
mov
rcl
mov
shr
repz
adc
in
mov
loopne
out
and
fucomip
repz
pop
sbb
mov
bound
andb
shlb
push
adc
or
inc
mov
dec
pushf
dec
int3
imul
mov
mov
mov
dec
sbb
int
dec
push
movl
mulb
or
or
pop
mov
lods
hlt
xor
mov
rcll
lahf
cmp
lret
xor
dec
sub
sub
mov
mov
and
fildl
xchg
decl
push
repz
inc
cwtl
fmull
repnz
jbe
and
popf
ljmp
xchg
jmp
or
out
iret
popf
xor
fdivs
cmpsl
ffree
out
mov
enter
sbb
ret
out
inc
adc
mov
in
lret
sahf
dec
mov
into
pop
stos
pop
lods
xchg
mov
or
mov
adc
sti
mov
in
lock
mov
ret
cltd
push
lock
mov
popf
cli
or
xchg
movsl
mov
push
insb
test
push
nop
rclb
rcll
mov
push
cmc
mov
scas
fs
mov
sub
mov
xchg
push
pop
push
jl
ret
or
lcall
pop
mov
std
xor
pop
jge
call
pop
enter
mov
mov
mov
or
xchg
fwait
imul
js
push
mov
mov
dec
lcall
sub
fsubs
insl
jmp
or
insl
fcomp
xchg
test
aam
jl
dec
sub
bound
add
and
sub
dec
push
or
fidivs
cs
dec
mov
mov
dec
call
js
ret
loopne
dec
pop
shr
repz
sbb
cmpsb
aas
lahf
lret
jecxz
mov
rorb
push
aas
mov
insl
xchg
adcb
xor
cli
fs
lret
mov
repnz
xor
jae
leave
je
pop
lret
subl
push
jl
ret
add
outsl
or
mov
shlb
adc
pop
fs
jnp
or
loope
push
int3
scas
cmp
repnz
sbb
out
push
lds
mov
mov
stos
mov
jp
sbb
mov
pop
jae
inc
insl
jmp
pop
clc
jecxz
insl
cmp
mov
scas
cmpsb
inc
cltd
xlat
call
int3
pusha
and
mov
xor
test
fnstenv
mov
jmp
adc
ss
mov
mov
push
sbbb
mov
std
mov
cmp
mov
xor
add
or
inc
pop
mov
adc
mov
fdivl
ret
sbb
xlat
stos
mov
xchg
mov
pusha
push
cld
sub
mov
scas
repz
inc
add
lods
mov
and
add
movsl
hlt
mov
jo
in
insl
movsb
stc
adc
inc
sbb
push
jl
fsts
movsl
fcoml
rcrl
pop
pushf
pop
pusha
inc
lcall
fstps
pusha
scas
popa
or
rcl
mov
inc
inc
pop
mov
shlb
mov
or
fwait
sbb
push
fidivrl
jp
jnp
enter
xchg
pop
fstl
pop
mov
mov
fwait
lea
aas
lcall
iret
sub
mov
dec
xor
fisubrs
popf
cltd
sub
cmp
mov
or
repz
jecxz
mov
repz
sti
pop
push
iret
xchg
push
rorb
add
mov
in
aas
or
dec
push
nop
jg
adc
adc
sub
test
dec
cld
lods
sbb
push
lahf
xchg
push
adc
mov
aaa
jmp
add
push
sbb
ja
pop
sbb
or
stos
int
xor
inc
jl
fistl
mov
pop
xchg
sbb
cmc
mov
cli
cli
icebp
sbb
cmc
cmp
lahf
es
add
repnz
lock
aam
js,pt
ret
test
or
push
fidivrl
cli
pop
lods
inc
int
jns
cli
jle
fwait
pusha
jl
mov
cmp
in
jne
inc
mov
adc
mov
dec
and
inc
sti
out
mov
mov
clc
mov
sbb
mov
adc
call
pop
mov
daa
pop
pop
iret
fucomip
in
dec
mov
jnp
ret
cmp
sbb
add
lds
add
pop
and
sbb
les
imul
ret
shll
pushf
inc
pop
clc
scas
repz
fnstenv
jno
popf
sbb
xchg
sbb
add
pop
xchg
adc
pop
mov
ss
out
xor
mov
jns
mov
cld
or
sbb
inc
sub
imul
add
adc
pop
xor
aas
data16
push
mov
jp
fst
jge
mov
mov
xchg
enter
cmpsl
ret
out
fcomi
fwait
lea
xor
mov
cwtl
mov
inc
adc
or
jbe
imul
sahf
dec
sub
xor
pop
sbb
mov
inc
out
mov
jo
lcall
aas
ret
cli
call
jo
cmp
xor
mov
adc
test
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
rcrb
jno
les
in
xor
adc
fnstenv
clc
cs
je
insl
test
mov
lds
adc
repnz
mov
mov
test
cmp
lahf
leave
mov
rclb
jno
lds
cld
shrb
jle
xor
pushf
adc
in
stos
js
cmp
ret
xchg
sbb
sub
les
xchg
sub
jecxz
push
repnz
xrelease
push
lahf
xlat
inc
and
call
mov
testl
sbb
xchg
or
dec
push
adc
and
mov
int
jle
pop
jmp
mov
shl
mov
shr
repz
adc
daa
mov
loopne
out
mov
sbb
aaa
pop
sbb
jns
add
sub
push
adc
cmp
fsubrl
outsl
aaa
sbb
rcrb
stos
jge
sbb
add
xchg
in
mov
and
xchg
push
cld
das
repz
pushf
mov
add
mov
mov
cmp
pop
mov
movsl
sbb
mov
in
add
movsb
stc
stc
push
cmp
jge
pop
push
enter
and
cmp
lods
and
aad
sbbl
cmp
fistl
nop
jmpw
or
sbb
out
xor
int
cmc
arpl
loopne
lea
shl
mov
mov
test
enter
sbb
mov
inc
mov
fmuls
in
ret
mov
into
pop
stos
pop
lods
xchg
js
dec
pop
movsl
dec
call
fdiv
in
cmp
imul
sub
jno
lock
sbb
cmp
cmpsl
mov
arpl
sbb
pop
dec
sbb
xor
cs
sbb
popf
sahf
sti
stc
je
scas
add
sub
arpl
xor
test
jl
sbb
les
or
mov
sbb
pop
fimuls
jb
sub
xor
and
cmp
or
sbb
dec
mov
sub
iret
mov
adc
mov
scas
popf
jb
add
mov
rcrl
jb
mov
addr16
movsb
ds
xor
lahf
pop
xchg
pop
les
fwait
jl
mov
bound
add
movsl
test
inc
mov
dec
push
or
fidivs
sti
mov
dec
mov
mov
fucomp
repz
adc
xchg
mov
mov
sbb
mov
cltd
inc
push
lock
shll
or
mov
dec
and
lods
imul
aaa
push
xor
mov
lods
ficoml
test
shrb
jne
lahf
mov
adc
dec
add
push
jl
or
inc
imul
sub
xchg
hlt
icebp
mov
lock
pop
inc
jge
push
adc
pop
insb
ja
xor
xor
jmp
mov
cmc
mov
mov
hlt
or
cmpsl
js
jo
shlb
inc
cmc
or
jns
ficoml
sti
and
iret
test
fdivrs
scas
sbb
add
fld1
std
jge
bound
shlb
ds
and
mov
xor
mov
out
mov
cltd
mov
inc
adc
dec
mov
mov
push
mov
int
movsl
push
mov
in
cltd
fisttpl
pop
cmp
sbb
aas
lcall
aad
or
ret
xchg
sbb
sbb
jbe
pop
stos
mov
repnz
push
in
dec
ss
lcall
xchg
jmp
or
sbb
lret
inc
sbb
adc
xor
or
dec
sbb
pop
mov
cmpsb
jno
pusha
lahf
adc
test
sub
sbb
js
js
adc
sbb
xchg
adc
es
dec
mov
mov
dec
mov
test
sub
sti
repz
mov
lahf
pop
xchg
aas
shlb
fwait
jl
dec
mov
bound
add
and
cmovno
or
cltd
jnp
int
je
sub
mov
xlat
idivl
push
add
mov
xor
in
daa
ja
clc
rolb
mov
mov
inc
sbb
mov
xchg
or
aam
lcall
inc
xchg
sub
mov
stos
mov
xchg
mov
pusha
push
cld
sub
aaa
mov
imul
mov
lahf
repnz
addl
sub
cltd
lret
mov
mov
dec
movsl
xchg
mov
add
cmp
xor
fdivl
jecxz
popf
movsl
jg
cli
in
cli
mov
lret
hlt
or
inc
cmp
andl
push
ret
add
or
jb
jmp
std
xchg
pop
adc
xchg
jp
xor
mov
out
mov
std
jge
stos
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
adc
xor
fadd
out
mov
cltd
pop
dec
mov
jmp
adc
dec
mov
rcrb
mov
or
xor
and
out
daa
push
adc
adc
movsl
lds
jg
ret
sbb
inc
pop
lcall
jg
sbb
dec
and
sbb
bnd
xchg
push
jns
rorl
icebp
fsts
fisttpl
movl
test
or
cmp
call
xlat
loopne
lds
stos
jge
pop
mov
leave
jns
flds
push
leave
pop
lcall
jecxz,pn
movsl
sbb
sub
xchg
adcb
dec
adc
leave
pop
outsb
rcl
pinsrw
fildll
mov
inc
cwtl
dec
lods
push
std
test
fdiv
sbb
movsb
inc
daa
popf
sti
lahf
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
pop
push
or
int
imul
gs
pop
sbb
movsb
xor
dec
and
sarl
jmp
add
in
daa
divl
mov
add
cmpsl
inc
sbb
inc
sbb
imul
dec
pushf
xchg
rcrb
jge
les
push
stos
push
les
into
loop,pn
ljmp
sti
cmp
arpl
mov
jo
xor
add
lret
scas
push
sub
movsb
sub
mov
mov
mov
in
sub
cltd
cmpsl
push
enter
xchg
leave
in
test
or
repz
repnz
test
stc
addr16
xchg
jbe
test
adc
xchg
push
sub
mov
jl
mov
cmp
jne
adc
and
mov
dec
and
out
mov
mov
push
lret
sbb
dec
jb
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
mov
lock
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
cmpsl
adc
dec
test
mov
ja
adc
lahf
popf
in
stc
dec
sub
push
sbb
inc
cld
cmc
mov
jo
jge
gs
adc
fisubl
pop
outsl
les
fistl
movsb
xchg
icebp
dec
aad
mov
fstl
cmp
call
stc
add
scas
jg
fyl2x
xor
inc
stos
adc
inc
mov
or
cmp
sbb
cmp
xor
test
insl
std
pop
movsb
inc
sbb
cmpsl
ret
out
mov
aas
mov
inc
xor
mov
cwtl
cmp
xchg
enter
inc
inc
or
mov
dec
mov
ret
movb
xor
pop
arpl
aad
mov
loopne
rorl
aaa
sarl
lahf
lret
or
add
test
negb
frstor
sub
dec
roll
sbb
rcrb
sbb
les
icebp
or
adc
fldenv
mov
lods
xchg
jno
mov
shll
mov
or
cmp
jl
add
mov
jge
jb
sbb
jns
mov
sahf
push
fbstp
arpl
lret
sub
js
or
rcr
mov
inc
cmpsb
pop
xchg
and
fcomi
sub
in
and
call
mov
testl
sbb
fwait
mov
dec
push
adc
add
int
jle
sbb
cmp
fsts
add
mov
imul
and
mov
dec
cmp
imulb
jnp
or
cltd
push
lock
cmp
cmpsl
mov
arpl
sbb
ror
test
aaa
stos
xor
sahf
sbb
lods
add
xor
pop
std
mov
push
jle
fstpl
dec
pop
xchg
sbb
add
xchg
lcall
ja
mov
mov
test
stos
lods
ret
pop
cld
pop
addr16
cmp
je
adcl
jg
xor
mov
in
pop
popa
sbb
in
mov
out
popl
xor
mov
push
and
je
lea
push
out
xor
int
in
out
cmpsl
ret
fincstp
clc
shlb
lea
mov
mov
mov
call
inc
sbb
pop
add
push
adc
enter
je
mov
pop
adc
call
push
sahf
pop
imul
push
das
jmp
clc
add
sbb
in
cmp
imulb
inc
add
add
jbe
and
test
jp
js
clc
mov
cmp
test
pop
xor
xchg
filds
repz
jge
outsl
scas
adc
pop
mov
inc
push
sbb
xchg
pop
sub
adc
sub
jns
mov
push
xlat
cwtl
pop
lret
mov
lahf
fisttps
jle
xor
int
xchg
sub
js
es
dec
pusha
sarb
sub
push
mov
int3
dec
mov
mov
xor
daa
and
scas
jb
fwait
jl
lea
enter
loop
pushf
pop
sub
dec
push
or
ret
push
int
mov
xchg
xchg
fisttpll
pop
pand
inc
sahf
dec
jns
cmp
jno
iret
sbb
daa
dec
cmp
rcrb
jae
sbb
in
jns
repnz
jno
jns
xchg
mov
push
leave
lahf
push
and
rorb
push
inc
cmp
cs
add
sub
push
sbb
lret
or
lcall
fimull
mov
aad
jp
dec
push
cmc
mov
sahf
xchg
jl
js
jp
mov
mov
gs
pop
aaa
cwtl
fcomp
andl
mov
mov
and
xchg
jp
int3
xchg
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
pop
and
add
cmp
add
ret
int3
sub
in
mov
jmp
inc
jae
arpl
imulb
mov
sbb
adc
xor
and
xchg
mov
out
mulb
cli
in
out
add
jmp
jl
xor
in
jnp
out
repz
xchg
pop
xchg
ficomps
or
insb
mov
fildll
mov
inc
cwtl
dec
lods
push
out
movsl
ret
fmul
mov
popf
xchg
cmp
pop
lds
fwait
lea
push
mov
out
adc
sub
push
pop
dec
test
insb
push
xor
cs
aam
xor
push
jne
les
pop
mov
pop
add
adc
ret
push
adc
fidivs
cmpsl
jecxz
push
lods
sub
mov
filds
inc
or
sub
cmp
outsb
insl
movsl
aam
mov
push
fst
dec
pop
inc
les
mov
ja
push
in
mov
push
sub
lcall
jl
orl
pop
push
mov
mov
inc
inc
lea
fwait
push
xchg
imul
sbb
cmp
xchg
mov
mov
rcrb
dec
jmp
pop
mov
incl
mov
test
adc
les
xchg
js
int3
push
mov
jl
cmp
cmp
in
jne
jb
int3
pop
add
sbb
xchg
mov
inc
cmp
fstpt
sahf
dec
dec
sub
ljmp
cld
mov
shlb
push
mov
push
ret
or
imul
cmc
loopne
imul
add
pop
xor
testb
mov
xor
cmp
leave
test
cli
stos
repnz
mov
push
and
enter
xor
popf
mov
sub
test
std
dec
jge
shll
inc
pop
inc
sbb
jl
scas
mov
test
add
inc
pushf
sub
iret
cltd
xor
pop
repz
xor
faddl
xchg
out
addl
add
push
mov
xlat
xor
test
insl
out
movsb
inc
sbb
cmpsl
ret
out
xchg
cmp
lret
insb
xor
mov
cwtl
push
sub
lret
and
and
xchg
cltd
clc
or
mov
sbb
ljmp
repz
adc
test
mov
jno
inc
je
in
lahf
pop
cmpsb
pop
push
sub
dec
push
adc
add
rcrl
sbb
inc
pop
cmp
mov
imul
pop
mov
push
push
clc
xor
scas
or
push
mov
mov
ljmp
imul
mov
stos
sbb
cld
push
iret
fcmovbe
loop
inc
sbb
jge
shrl
or
jmp
enter
pop
cmc
xchg
fwait
insb
push
dec
cmpsb
leave
loop
sarb
mov
adc
and
lea
aas
mov
clc
addb
enter
mov
xchg
mov
flds
lahf
jle
int3
shr
cmp
mov
mov
inc
and
or
or
xchg
fcoms
lret
mov
clc
sub
aad
into
pop
stos
cmp
aaa
in
movsl
divb
loop
ja
enter
fisttpl
pop
cmp
sbb
lcall
test
xor
push
lock
jp
sbb
add
test
lcall
push
gs
push
xor
mov
jge
jae
jge
movb
in
jmp
roll
imul
les
lret
add
stos
or
pop
cmp
stos
sub
sub
inc
push
js
adc
call
scas
inc
fwait
push
shlb
addl
add
pop
xor
mov
fisttps
adc
jo
test
out
xor
int
out
cmpsl
ret
fincstp
clc
clc
sbb
jb
xchg
xor
ret
or
rcll
add
or
xor
push
dec
xchg
sbb
mov
jns
ss
and
icebp
cmp
cmpsb
neg
out
rolb
mov
movsl
mov
aas
mov
daa
jbe
mov
inc
cltd
push
push
cmpsb
add
jno
les
mov
arpl
std
fldenv
xor
jae
mov
in
mov
rcl
cmp
inc
pop
or
aaa
mov
mov
dec
dec
imul
xor
jp
mov
jnp
xchg
add
movsb
cmpsl
mov
mov
mov
or
sub
or
cmp
sub
push
mov
clc
mov
mov
xchg
mov
lahf
pop
xchg
fcomip
jb
fwait
outsl
push
ret
xchg
imul
jb
or
addb
in
mov
push
xchg
jle
push
dec
test
rorb
jns
outsb
in
movsl
sbb
lahf
push
adc
adc
movsl
inc
sbb
sbb
pusha
mov
sbb
adc
ret
cmpsb
sub
sarb
sbb
mov
push
sbb
imul
stc
jnp
jns
pop
sbb
push
xchg
popf
daa
sbb
jae
or
xchg
jp
inc
test
outsl
sub
lods
lds
jl
sbb
pop
into
mov
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
aam
andl
mov
mov
and
xchg
jp
or
test
sub
mov
out
mov
gs
std
mov
mov
xor
test
push
or
add
xor
pop
pop
mov
fwait
cmp
and
int
pop
test
xor
jl
fucomip
sbb
aas
call
hlt
mov
inc
xor
pop
mov
add
gs
aad
jo
push
aad
sbb
rcrb
adc
sub
jne
test
clc
in
fisttps
mov
test
rorl
rcll
popf
jle
inc
push
xchg
sbb
pop
mov
leave
xchg
fwait
adc
mov
push
cmp
sbb
scas
in
pop
gs
stos
pop
jo
sbbl
cld
adc
xorl
inc
or
add
fsubrs
fildll
mov
lods
push
loope
movsl
ret
fcomp
adc
ret
daa
lahf
cmpsl
jnp
enter
mov
sti
sti
faddp
mov
js
loopne
jecxz
mov
or
out
push
adc
mov
jmp
test
xor
mov
xchg
jne
inc
hlt
out
les
shrl
loopne
mov
bound
mov
sbb
in
gs
sbb
lds
sbb
mov
mov
mov
dec
test
dec
sarb
mov
stos
pop
aaa
stos
lods
mov
sbb
sub
stos
shll
jge
pushf
mov
sub
xchg
xchg
jl
out
lret
add
mov
inc
les
sbb
xchg
mov
xchg
pop
sbb
test
mov
pusha
pop
into
xor
mov
fwait
leave
insl
xor
pop
aaa
cwtl
call
es
mov
sbb
cltd
and
xchg
jp
int
test
sub
mov
stos
cmp
out
aas
pop
sahf
push
dec
aad
jmp
inc
orb
sbb
mov
js
or
fnstcw
fisubrs
and
loopne
cmc
xor
aad
xchg
out
jbe
mov
sub
mov
add
adc
jae
mov
xor
mov
cmp
mov
hlt
test
adc
sbbb
inc
sbb
cmp
mov
std
cld
push
jne
test
leave
pop
sbb
mov
sbb
test
cmp
ljmp
fnstcw
inc
outsb
cmpsb
sub
mov
mov
ficomps
xchg
sbb
test
sub
sbb
scas
in
inc
and
mov
dec
jo
sbbl
add
or
or
add
mov
push
mov
cwtl
dec
lods
push
out
enter
mov
call
inc
popf
push
loope
int3
xlat
int
ljmp
fucomp
test
pop
hlt
pusha
inc
inc
or
cmp
fsubrp
mov
mov
dec
sbb
loopne,pn
xor
dec
shll
movsb
negb
loopne
cld
mov
shlb
cmp
jae
fsubs
cld
add
add
inc
pop
mov
add
imul
gs
sbb
pop
lret
push
sub
movsb
leave
mov
dec
push
add
adc
mov
rcrl
sbb
sub
popa
adc
imul
jge
mov
push
nop
test
mov
mov
push
adc
outsb
pop
dec
popf
jmp
xor
mov
mov
popf
dec
icebp
pop
mov
call
out
jmp
mov
or
xchg
mov
pop
mov
sub
sub
out
dec
pop
cmc
stos
popa
jne
outsl
push
andnps
pop
xor
mov
push
adc
or
orb
adc
mov
jbe
mov
sbb
mov
call
mov
aam
popf
pop
pop
add
out
mov
bound
rcrb
add
repnz
mov
add
or
inc
mov
lds
popf
lret
push
in
mov
in
mov
dec
sbb
in
inc
dec
shrb
add
das
or
insl
movsl
mov
std
inc
jnp
push
lret
pop
test
mov
and
fcomi
js
negl
and
xchg
jge
addl
add
push
mov
xlat
xor
test
insl
xchg
stc
mov
stos
mov
sti
gs
jmp
mov
sbb
adc
add
sbb
ss
dec
inc
test
cwtl
mov
icebp
lret
sbb
inc
and
cmp
jle
pop
stos
cmp
aaa
in
movsl
divb
pop
ds
cwtl
xor
bound
jecxz
insl
xchg
xlat
or
sbb
sbb
inc
pop
sbb
or
sub
sub
inc
insl
movsl
dec
or
dec
cwtl
fst
dec
sub
and
mov
pop
jne
movl
sbb
sbb
sbb
lret
rcll
mov
scas
mov
sbb
or
cwtl
push
sub
gs
lods
cmp
ljmp
cmp
insb
push
dec
mov
loop
sarb
iret
and
lea
lock
call
cmpsb
pop
mov
jp
mov
rclb
cli
jnp
jecxz
cmp
add
fwait
lea
cld
and
and
push
xchg
enter
aam
sub
jne
movsb
popf
push
mov
shl
mov
inc
arpl
int
jns
add
iret
inc
xor
out
mov
cld
or
or
jo
lock
aas
mov
mov
int3
mov
movsl
or
adc
sub
ljmp
mov
inc
fstpt
push
cmp
lcall
jl
orl
pop
rcl
xchg
mov
mov
rorb
push
push
lret
pop
test
push
inc
sbb
scas
fcomi
js
ja
scas
inc
movsl
fsubrl
nop
xchg
xor
addl
add
push
mov
fwait
xor
cmpsb
xchg
das
push
lcall
cmp
call
xchg
pop
jmp
call
int3
pop
sub
in
hlt
mov
cmc
xchg
mov
cltd
jne
dec
mov
imul
lods
sahf
dec
mov
inc
add
pop
arpl
int
mov
lods
pushl
xchg
mov
call
jp
popa
mov
cltd
test
inc
sbb
lock
hlt
mov
jl
xor
movsl
ret
insb
test
iret
add
stos
jb
stos
jecxz
jne
push
and
sub
cmc
fistl
adc
stc
mov
mov
test
inc
sahf
cmp
mov
sbb
inc
lcall
gs
lods
cmp
cli
and
mov
bnd
insb
push
or
loop
sarb
and
lea
xchg
fmuls
test
xchg
out
aam
jne
inc
gs
imul
outsb
jle
lahf
pop
pop
xchg
std
jmp
cmp
xor
cmp
in
sbb
xchg
fsubr
dec
test
xor
mov
xchg
pop
adc
add
popf
pop
jb
mov
jmp
popf
sbb
dec
sar
adc
mov
or
pushf
sbb
sub
sarb
imul
dec
lahf
lcall
push
gs
push
xor
mov
jge
andl
movb
in
jmp
cld
pop
sub
add
jge
pop
add
jo
imul
adc
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jno
jo
jb
push
dec
sub
or
mov
sub
push
mov
fwait
mov
mov
insl
icebp
out
xchg
mov
arpl
jne
or
mov
cmp
cmp
pop
cmc
leave
sbb
add
and
js
fisubrs
and
loopne
cmc
xor
mov
xchg
pop
cmp
sbb
call
mov
jae
mov
fists
rol
sti
mov
test
mov
mov
mov
mov
subl
jmp
std
mov
arpl
std
fldenv
xor
jae
mov
in
inc
stos
mov
adc
mov
push
or
in
sbb
xchg
stos
cmp
fwait
push
xchg
mov
push
ret
into
xor
sbb
insl
xor
pop
aaa
cwtl
clc
add
sbb
mov
lock
jns
rclb
jp
mov
movsb
inc
cmpsb
outsl
push
gs
insl
jg
fwait
lea
aad
repz
sbb
mov
inc
or
push
insl
lock
mov
mov
dec
sbb
loopne,pn
cmc
mov
mov
cmp
addr16
insl
xchg
sbb
push
sar
fisubl
out
jmp
mov
pop
push
sbb
or
mov
adc
les
inc
int
sbb
cmpb
push
imulb
adc
mov
setle
fcomps
lret
sar
xor
pop
cmp
mov
clc
lock
dec
lret
aad
push
adc
add
dec
les
xchg
adc
test
lods
inc
sbb
scas
in
and
popf
scas
cmp
sbbl
cmp
or
or
add
mov
clc
or
sbb
outsb
mov
pop
xchg
rclb
xchg
je
fidivl
mov
nop
and
call
or
lds
pop
fldl
add
icebp
mov
out
or
cwtl
cwtl
inc
sbb
in
cmc
sbb
fisttpl
jae
mulb
xchg
mov
mov
mov
aam
enter
mov
sbb
lds
inc
test
movb
sub
jne
test
clc
in
fisttps
mov
nop
movb
test
inc
fmuls
inc
lcall
sbb
or
cmp
movsb
pop
sbb
mov
lods
mov
mov
push
adc
pop
dec
sahf
jmp
xor
leave
loop
and
sub
inc
sbb
mov
addr16
stos
popf
jecxz
or
dec
or
ret
mov
push
aas
out
xor
lahf
cmpsl
mov
pop
fdivrs
lock
mov
and
mov
jno
mov
dec
mov
push
adc
in
shlb
fdivl
test
push
push
orb
into
fwait
mov
jle
push
sbb
enter
or
and
nop
out
sbb
push
xchg
cltd
pusha
or
lahf
mov
stos
pop
aaa
stos
lods
mov
sbb
sub
cmp
dec
or
data16
mov
mov
rolb
scas
imul
xchg
adc
test
lods
inc
sbb
scas
in
sub
popf
scas
cmp
sbbl
xor
or
stos
push
cmp
rolb
jmp
scas
push
adc
mov
xchg
fldl2t
mov
fs
xchg
xchg
lahf
fdiv
push
fdivrs
clc
sbbl
jecxz
xchg
mov
xchg
xchg
lea
add
out
jle
pop
cmp
mov
lret
jge
sbb
xor
mov
in
inc
xor
lret
gs
aam
enter
add
rcrl
adc
mov
dec
pushf
sbb
jecxz
sbb
cmp
mov
std
mov
les
cmp
sub
fs
jne
sbb
cli
les
push
pop
sub
inc
sbb
or
cmp
pop
arpl
jno
loope
mov
push
adc
pusha
mov
jmp
mov
fwait
leave
loop
and
sub
js
adc
dec
dec
mov
adc
inc
jmp
inc
cwtl
dec
int
push
fidivrl
jae
popa
xchg
pushf
mov
sti
insl
or
dec
adc
iret
test
pusha
test
pop
hlt
pusha
inc
dec
or
cmp
or
pop
mov
in
aam
fs
dec
mov
xchg
ja
xchg
cmp
dec
call
xor
mov
push
sub
sti
inc
cmp
lahf
mov
xor
flds
sti
dec
cld
aad
inc
sub
inc
cltd
pop
dec
or
inc
jb
and
lret
aaa
stos
push
insb
ror
sbb
inc
lahf
stos
and
in
xor
ffreep
xchg
jp
dec
mov
sub
or
mov
dec
les
xchg
adc
test
lods
inc
sbb
scas
in
adc
popf
scas
cmp
adc
sbb
ret
add
inc
clc
jp
mov
xchg
decb
inc
push
mov
test
push
fidivrl
sub
stos
push
jne
inc
or
jge
insl
mov
xor
mov
push
adc
inc
dec
or
js
fwait
push
fwait
or
int
pop
mov
cmc
xor
mov
sbb
dec
adc
call
dec
out
mov
jmp
in
xor
push
add
jo,pn
push
add
lcall
mov
pushf
cli
push
dec
sbb
sbb
call
jnp
inc
in
test
or
sub
pop
je
sti
pop
push
inc
and
arpl
pop
sub
inc
sbb
or
cmp
movsb
pop
imul
fwait
lods
mov
mov
push
adc
pusha
mov
jmp
mov
fwait
leave
loop
and
rorl
inc
xchg
adc
cmp
nop
pop
sub
sbb
xchg
adc
pop
in
ret
mov
cli
mov
xor
sti
rolb
clc
sbb
xchg
mov
sbb
adc
jle
inc
inc
or
mov
outsb
out
jnp
xchg
mov
loopne
jle
sbb
mov
cwtl
test
fistpl
add
loopne
adc
mov
and
mov
repnz
add
ljmp
sub
and
test
xor
pop
cmp
xor
in
test
sbb
sub
mov
or
dec
popf
aad
sub
and
xor
inc
scas
xchg
push
xchg
fstp
mov
stos
add
call
lret
pop
test
xchg
inc
sbb
scas
fcomi
js
cmp
repnz
inc
ror
pusha
push
mov
inc
sbb
mov
xchg
sub
push
push
xchg
mov
loopne
fdivrl
xor
mov
adcl
adc
in
movsl
and
int3
sub
inc
sbb
jb
or
push
test
lcall
imul
pop
loopne
mov
repz
mov
imul
aad
jo
nop
mov
inc
pop
mov
mov
int3
mov
mov
stos
xchg
adc
sub
jns
dec
push
dec
or
push
xchg
mov
mov
cmp
add
sub
push
sbb
addb
imul
mov
gs
lods
cmp
dec
pusha
mov
cmc
bnd
jg
xchg
push
repz
inc
loope
or
out
add
jge
xchg
sub
adc
xchg
pop
xchg
in
fdivrl
call
adc
jb
fwait
jo
jmp
test
add
sbb
jg
sbb
lret
cmpsl
stos
dec
lea
adc
jle
pop
push
mov
int
cmp
jmp
dec
push
iret
ret
clc
sti
jno
or
pop
mov
mov
fwait
and
sub
sbb
lock
jo
hlt
mov
jl
ret
inc
insl
movsl
ret
insb
test
repnz
scas
inc
dec
jge
push
bnd
lcall
ljmp
popf
lret
lret
es
xchg
pop
xchg
test
and
inc
sub
cli
cld
pop
stos
xchg
push
adc
lret
mov
add
push
sbb
dec
fucomi
in
mov
dec
in
sti
mov
cmp
mov
jae
or
push
add
cltd
cmp
inc
clc
loopne
int
push
pop
xchg
and
fs
fld1
popf
rcrl
sti
xor
jne
adcl
enter
orb
fisttpll
jmp
adc
ret
xorb
and
xor
mov
js
lcall
xchg
decb
jae
mov
inc
popf
roll
addr16
fwait
jge
xorb
add
pop
xor
test
fs
jb
std
push
xchg
les
scas
mov
jecxz
fiaddl
mov
push
mov
xchg
push
nop
mov
pusha
add
or
jge
imul
adc
pop
mov
cwtl
mov
lods
inc
and
lahf
scas
jg
leave
jno
mov
clc
jmp
js
cmp
mov
andl
lea
push
sbb
sbb
ret
jge
mov
adc
xor
lahf
cmpsl
mov
pop
fdivrs
sti
mov
jne
sub
out
dec
test
adc
jmp
imul
sbb
cmp
adc
shll
mov
and
fstl
add
out
and
sahf
adc
mov
or
pushf
sbb
sub
sarb
imul
push
div
test
push
fldl
fistps
xchg
ljmp
popf
lret
add
sub
inc
sbb
or
jl
in
xchg
stos
cmp
fwait
push
xchg
fdivr
shrb
push
ret
into
scas
fistpl
daa
pop
sbb
sarb
pop
xchg
push
adc
cmpl
cmp
and
push
or
les
or
add
leave
xchg
fldl2t
mov
fs
xchg
xchg
lahf
fdivr
pop
fdivrl
sti
stc
sahf
mov
inc
mov
or
sbb
rolb
mov
popf
in
mov
fiadds
int3
adc
mov
ljmp
sbbl
add
inc
adc
sbb
mov
test
mov
mov
mov
cwtl
ret
fs
add
sbb
outsl
jno
and
sbb
xor
pusha
cmpsb
lods
mov
mov
xchg
test
dec
mov
adc
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
cs
fdiv
in
jns
lahf
xchg
mov
in
rcrb
icebp
inc
sarb
clc
xor
xor
addr16
and
or
mov
pop
imul
inc
sbb
test
inc
clc
hlt
pop
mov
loope
and
xor
test
js
sbb
sub
movsb
jne
pop
adc
test
adc
aas
xchg
pop
fmull
xor
aam
imull
or
xchg
iret
sbb
or
mov
adc
sarb
int
sbb
mov
inc
mov
mov
mov
mov
aaa
fstps
mov
sbb
mov
js
arpl
pop
sub
inc
sbb
or
cmp
pop
inc
push
mov
lods
mov
mov
fstl
pop
mov
arpl
dec
jg
call
sbb
scas
xchg
outsb
xchg
cwtl
les
cmp
aad
add
jp
pop
jb
and
int
or
push
repz
xchg
mov
push
fst
stos
xor
push
out
xor
inc
add
imul
hlt
or
les
sub
push
sub
cmp
sbbb
mov
movsb
nop
hlt
dec
pop
les
movsl
pop
in
aaa
call
arpl
adcb
ljmp
sahf
jb
aam
enter
lock
sbb
lds
jmp
lret
stc
and
negl
xlat
stos
push
test
clc
loopne,pn
mov
jge
dec
lret
fucomp
cld
std
mov
mov
popf
aad
push
mov
test
andl
xchg
push
xchg
mov
add
dec
mov
mov
test
xchg
enter
addr16
pop
lret
jnp
sbb
jo
std
nop
xchg
ds
cwtl
int3
dec
out
arpl
or
stc
dec
sarb
dec
out
fadds
rclb
in
xchg
and
push
fildll
push
into
inc
stos
cmp
dec
lahf
jne
inc
daa
sbb
cmp
and
mov
pop
inc
mov
cwtl
fldenv
adc
add
sbb
int
jg
pop
adc
call
cmp
stc
lret
push
jae
mov
mov
pop
mov
lahf
pop
mov
fsts
cmp
pop
popa
inc
das
jno
dec
lods
aad
inc
mov
pop
mov
jl
test
repnz
negl
dec
pop
lcall
mov
shlb
or
imul
nop
xor
lods
movb
ret
lcall
xlat
std
push
mov
sbb
stc
and
dec
popa
push
addl
enter
jb
dec
fmuls
dec
aam
jns
dec
adc
out
inc
jge
imul
inc
popf
fldt
mov
adc
pop
mov
enter
or
lret
inc
inc
dec
xchg
lea
sbb
fcoms
or
jle
push
xchg
mov
pop
clc
fistpl
adcl
mov
mov
in
mov
lcall
flds
dec
inc
nop
aas
and
or
sahf
nop
xlat
stos
dec
sahf
sti
jl
test
pop
sbb
jp
sub
fucomp
jae
jns
xchg
dec
popf
lret
aad
test
mov
and
pop
leave
scas
xchg
stos
mov
stos
xchg
push
adc
add
jmp
pop
fldl
fnstsw
mov
bswap
js
popf
push
fcom
fdivrl
and
sub
or
xchg
adc
adc
mov
rorb
sbb
xor
adc
mov
icebp
imul
mov
cmpsl
lock
xlat
push
filds
movsl
adcl
bound
mov
hlt
je
popf
jle
mov
sbb
xchg
fwait
dec
jmp
adc
pop
stos
pop
push
test
lcall
inc
sbb
test
xlat
pop
adc
or
fstl
sub
jl
cltd
jl
lock
push
adc
popa
push
sbb
fs
dec
and
sahf
lods
lret
fsubr
mov
xchg
leave
jl
scas
mov
jecxz
mov
fldt
mov
nop
sbb
pusha
add
dec
mov
fisubrl
lahf
or
mov
mov
mov
inc
sub
jecxz
clc
mov
jno
aad
cwtl
es
repnz
push
mov
fsubrl
pop
add
rcrb
subl
in
enter
xchg
sahf
data16
inc
jmp
inc
cwtl
dec
int
push
fidivrs
cmc
imul
push
mov
cmovge
jb
xor
inc
jge
rcll
inc
add
mov
jmp
bound
jb
or
rcrb
pop
push
mov
jno
pop
xchg
add
aam
popf
jl
out
pushf
imul
jno
jecxz
movsl
mov
cltd
jl
cltd
nop
lock
aad
pushf
ret
pop
fidivs
dec
mov
mov
mov
stos
mov
ja
and
sti
sahf
inc
mov
mov
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
xor
xchg
stos
std
mov
and
pop
cwtl
fnstcw
xor
scas
fs
loope
fnstsw
or
fidivs
sbbl
jge
subl
adc
sub
push
inc
push
mov
mov
push
fidivrs
and
mov
xchg
sbb
stc
sub
ret
test
aas
push
enter
push
adc
add
mov
cmpl
sarb
sbb
xlat
adc
xor
and
mov
mov
fstpl
addl
adc
jge
lret
sbb
jns
sahf
rcrb
sbb
fiaddl
mov
mov
sbb
dec
and
pop
stos
push
outsl
jno
hlt
dec
sbb
push
mov
stc
pop
push
lods
mov
mov
xchg
test
dec
mov
xor
leave
loop
mov
outsb
les
mov
jns
sahf
fisttpll
xor
icebp
ret
bound
cmp
fwait
leave
loop
jnp
or
mov
sub
xchg
sub
nop
pop
sub
sbb
xchg
adc
data16
push
fidivrl
cmp
sbb
mov
xorb
or
hlt
rcr
cmpsb
fcomi
sub
loope
enter
out
pop
fwait
adc
test
add
mov
popf
xchg
push
adc
cmp
inc
pop
inc
inc
mov
and
ljmp
mov
or
sti
pop
es
or
sahf
rol
add
aad
hlt
roll
xchg
add
fsubrl
frstor
push
test
lret
ljmp
or
mov
cli
push
jae
fistpl
dec
lret
inc
ret
pop
sub
inc
sbb
or
cmp
scas
lret
push
mov
jne
pushf
adc
pop
lods
jg
outsl
inc
sbb
ss
cli
rol
popf
scas
inc
and
icebp
and
cmpl
int3
add
add
fdivs
rcll
data16
push
mov
dec
out
popf
push
sbb
mov
sti
inc
es
mov
mov
shr
sub
push
jl
shrb
cmp
cwtl
movsb
popf
jecxz
lret
cltd
jns
pop
test
test
je
in
inc
icebp
mov
mov
mov
hlt
cmp
fists
add
fimuls
jae
jecxz
xchg
mov
mov
dec
and
mov
mov
cmp
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
test
sbb
xchg
into
lret
fucomp
cld
std
scas
fidivl
pop
fwait
xchg
test
inc
mov
or
lcall
std
clc
pop
add
adc
mov
cmp
scas
dec
lods
jp
aaa
pop
push
xchg
bnd
pusha
xchg
fbstp
ljmp
rep
add
push
aam
add
cmp
rcll
jecxz
or
rcrb
cli
mov
and
push
mov
call
inc
vpor
mov
sub
mov
cwtl
push
add
and
hlt
sub
push
dec
mov
adc
scas
int3
fwait
jns
scas
push
into
adc
cwtl
adc
mov
mov
orl
xor
cltd
adc
jecxz
sbb
or
subb
test
push
pop
imul
mov
pop
mov
dec
pop
test
mov
fildll
jne
fldt
arpl
adc
xchg
dec
inc
shlb
or
addr16
outsb
xchg
dec
jl
fistl
test
popf
adc
dec
movsb
jae
insb
fucomi
sbb
pushl
cli
xchg
and
jb
adc
mov
jae
or
cmp
roll
xchg
inc
and
aas
loop
sub
mov
mov
xchg
pop
push
xabort
mov
psraw
inc
rorb
mov
adc
ds
mov
mov
movsl
jne
imul
pop
mov
push
ds
fdivr
pop
loopne
mov
push
cmc
cmp
mov
ret
pop
pop
xor
sub
cmp
pushf
int
lcall
cmpsw
mov
loop
addb
mov
mov
rcll
pop
push
push
test
pop
sbb
testb
dec
fucomp
jae
jns
dec
popf
lret
fists
les
sbb
inc
sbb
sbb
inc
sub
ret
testl
leave
imul
adc
mov
mov
iret
pop
mov
enter
ljmp
pop
sub
mov
andl
lea
mov
sbb
mov
clc
loopne
mov
mov
mov
xchg
mov
dec
jno
push
mov
or
mov
xchg
dec
xorl
adc
push
xchg
sbb
sub
fildll
stos
sub
xor
dec
in
out
and
cmp
sbb
add
push
cwtl
mov
mov
mov
add
lock
cwtl
sub
sub
pushf
dec
and
xchg
lret
fsubr
mov
xchg
leave
dec
ja
mov
jecxz
stos
xlat
fldt
jne
cmpsl
xchg
push
nop
pop
xor
add
adc
xchg
ret
fists
add
sub
or
sahf
push
mov
push
pop
pop
mov
lahf
fucomp
mov
pusha
inc
loope
xchg
popf
pop
mov
enter
out
mov
xchg
push
adc
cmpl
sub
or
lock
mov
xorb
aam
pop
fs
mov
push
mov
lods
jnp
sti
insb
xchg
sbb
movsl
out
adc
inc
cmp
sbb
jecxz
cwtl
sbb
rol
push
adc
out
cmpsb
and
call
and
aas
lods
dec
adc
out
and
fsubr
in
push
dec
adc
clc
lds
mov
repnz
add
dec
popa
xchg
push
dec
sbb
mov
mov
jne
inc
xchg
movsl
mov
mov
stos
mov
ja
jb
shrl
inc
mov
dec
ljmp
popf
lret
add
sub
inc
push
mov
mov
movsl
sbb
lcall
or
mov
lods
inc
sbb
jmp
mov
adc
arpl
in
rcrb
icebp
inc
aam
clc
mov
adc
cwtl
lahf
mov
sbb
xchg
lea
ret
add
fwait
ja
xchg
jmp
int
popf
pop
jo
fdivrl
xor
xchg
in
lea
xor
push
and
mov
hlt
je
and
inc
mov
sbbl
cmp
rorb
mov
shrl
mov
dec
adc
xchg
lods
ds
sbbl
aas
mov
xor
imul
cwtl
lret
push
sbb
dec
and
pop
stos
push
outsl
jno
add
mov
in
aaa
mov
stc
dec
fldcw
loop
cmpsl
xchg
test
mov
inc
cmp
jge
jp
loope
xchg
stos
inc
and
jns
mov
cltd
push
fsts
push
jmp
lods
enter
shl
sbb
xchg
outsb
xchg
mov
clc
xor
adc
adc
in
and
inc
les
cmp
xor
or
fwait
cmpsb
fsub
sbb
xchg
int3
aaa
fnsave
xchg
call
gs
in
adc
add
mov
es
pop
loope
jb
lea
lods
data16
mov
cltd
sahf
mov
push
lret
int3
adc
inc
mov
int
mov
adc
jne
sub
lods
inc
sbb
jle
lock
push
sbb
and
stos
daa
sbb
add
nop
repz
fsubrl
fnstsw
push
test
lret
addb
cmp
mov
pop
jae
fistpl
movsl
lret
test
sbb
jae
sbb
das
sbb
adc
fnsave
std
lcall
sti
push
lret
pop
pop
adc
cld
arpl
fcmovnu
popf
fsubrl
loop
jl
nop
xchg
push
push
mov
clc
js
shl
sub
pop
push
mov
int
js
fsubs
insl
xchg
popf
aad
aas
mov
mov
clc
push
ret
es
cmpsb
jnp
fdivs
cltd
push
adc
faddl
adc
add
xchg
nop
sub
and
dec
mov
or
stos
sbb
adc
int3
inc
pop
movsl
or
ret
pop
jae
pop
mov
dec
lahf
lret
insb
mov
mov
enter
push
mov
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
fucomp
cld
std
mov
in
mov
pop
xor
cltd
nop
cmp
or
imul
mov
xchg
jmp
in
sarl
fcoml
aaa
jge
dec
ljmp
fwait
push
adc
sub
push
cwtl
les
adc
scas
cmp
cmp
mov
and
sbb
add
jp
cwtl
repnz
xchg
dec
stc
insl
lahf
jo
lcall
cmpsl
enter
insb
popf
lahf
push
and
pushf
and
jmp
xor
daa
loope
mov
hlt
dec
movsb
adc
fsts
imul
imul
push
push
mov
add
mov
adc
orl
scas
push
pop
imul
lret
flds
mov
and
mov
imul
jge
fldt
mov
stos
dec
jl
aas
xor
add
outsl
icebp
pop
scas
xchg
stos
mov
outsb
les
fcoml
mov
pop
icebp
mov
cmp
mov
aad
fstpt
xlat
pop
bswap
js
popf
push
fcom
pushf
jae
sub
push
or
cmpl
mov
adc
mov
xchg
cwtl
outsb
mov
movl
mov
pop
sti
cmp
fdivrl
sti
mov
ret
mov
or
movsl
leave
sbb
aaa
incb
rclb
and
mov
jne
pop
mov
lea
addl
les
inc
cmp
or
dec
pop
ret
repz
sbb
and
lahf
lret
jecxz
gs
mov
pop
sub
sbb
mov
cmpsl
mov
loop
cli
ror
movsl
mov
mov
sbb
sahf
cmp
push
test
pop
sbb
lea
scas
mov
jns
mov
or
sbbb
push
sbb
ret
add
addb
lcall
sti
imul
into
mov
icebp
lcall
xor
cwtl
es
repnz
add
pushf
imul
mov
add
mov
inc
orl
jle
cwtl
add
mov
mov
data16
mov
push
jno
jge
movsb
mov
cmp
clc
les
movsb
inc
popa
sbb
cmpsb
hlt
js
xor
sbbb
enter
dec
cmp
sub
xchg
lea
fiadds
cmp
sub
and
mov
sub
jns
int
mov
and
mov
fisttps
sbb
or
sbb
sub
scas
negb
enter
fsubr
stos
stos
mov
sbb
scas
mov
cmp
movb
sti
xor
push
cmp
sarl
test
sbb
jno
or
xadd
xchg
stos
cmp
or
icebp
mov
jns
enter
icebp
fnstenv
push
loope
fistpll
or
fdivrl
and
je
inc
mov
xchg
sbb
test
push
test
or
sub
or
fcmovnu
sub
inc
idivl
xchg
xchg
ds
mov
jl
cmpb
mov
or
test
cmp
das
in
cmc
mov
movsb
xor
add
inc
inc
add
xorb
mov
repz
sti
dec
push
ret
jecxz
and
sub
pop
sub
dec
popa
cltd
orl
ds
fdivl
jo
movsl
mov
mov
stos
mov
ja
inc
test
test
inc
mov
rorl
cmp
mov
lds
mov
xchg
push
fistl
sbb
or
imul
pushf
sub
mov
roll
mov
icebp
ret
bound
sub
stc
leave
cwtl
cld
shlb
lcall
sbb
xchg
pop
ret
xchg
sub
cmp
pop
mov
push
pop
push
jp
xchg
decb
test
pop
test
pop
push
pop
jmp
iret
push
adc
or
sbb
lret
cmp
in
jne
dec
mov
pop
dec
pop
jbe
movsl
or
pop
mov
daa
pop
mov
fucomip
jl
xchg
inc
mov
sub
mov
rcrb
ss
aas
or
dec
popf
fwait
imul
xchg
dec
and
pop
stos
push
outsl
jno
push
dec
sbb
fildll
xor
int3
lods
shl
fnstenv
cmc
sahf
and
pop
repz
jae
stos
inc
roll
cmpsl
fistl
cld
movsl
or
sbb
imull
sbb
mov
jno
in
fnstsw
push
fcoml
js
push
adcb
int3
sbb
movb
in
dec
test
dec
dec
cmp
xor
jmp
add
mov
jnp
sbb
xor
jne
test
in
pop
or
sbb
or
lock
mov
sub
and
xor
pop
cmp
sahf
push
mov
test
sti
mov
jecxz
push
sbb
add
adc
sbb
add
popf
cmp
fsubrl
fnstsw
push
test
lret
shrb
aaa
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
cmpsb
int
fcompl
lret
mov
cmp
scas
push
jg
je
cmpsl
jo
fwait
add
or
add
cmpl
in
imul
or
pop
inc
test
or
nop
dec
jbe
and
popf
out
movsl
pop
xor
or
inc
popf
bound
fdivrl
es
lods
sti
xor
jl
cmpsb
popl
sbb
mov
dec
add
mov
mov
cltd
jns
jb
cs
adc
gs
subl
adc
push
mov
loopne
out
movsb
jp
jmp
aas
pop
mov
lahf
lret
insb
mov
lret
mov
pop
xor
mov
and
shlb
cmpsl
mov
neg
mov
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
mov
pop
movb
ds
pop
int3
jmp
rclb
arpl
jo
test
sbb
xorb
cmp
arpl
cmpsl
add
pop
xor
xlat
fistpl
push
pop
cmpsl
push
jg
mov
enter
cmp
rcrl
lret
fdivs
adc
adc
repz
sbb
adc
movsl
cli
jg
inc
insl
in
imul
cmpsb
fcomp
aaa
jo
dec
push
insb
ret
inc
mov
lea
sub
push
push
push
dec
mov
ret
inc
js
or
lret
addl
or
pop
stos
pop
lods
cltd
ret
pop
xchg
dec
cmp
mov
dec
pop
sti
mov
es
mov
adc
xchg
or
subb
sbb
cltd
xchg
dec
pushf
dec
lods
aad
push
lret
fldenv
sbb
xchg
sti
stc
jl
ret
jne
popf
lret
arpl
xor
mov
inc
movsl
out
xchg
adc
add
sub
xchg
leave
imul
sbb
dec
lods
jp
sbb
dec
mov
leave
cmc
and
bound
clc
xor
mov
sub
push
mov
sbb
mov
inc
insl
fwait
popf
aad
dec
mov
inc
pop
fdivr
sbb
testb
iret
in
shlb
or
rcll
add
push
lahf
test
push
popf
push
daa
dec
mov
mov
xchg
call
fldenv
ret
loopne
dec
pop
add
repz
sbb
mov
aaa
gs
mov
mov
sbb
mov
mov
loop
rclb
mov
sub
sahf
sbb
xchg
push
bnd
loop
jns
lahf
sti
mov
cmpsb
fldt
jmp
pop
xchg
push
xchg
dec
mov
sub
dec
jno
movsl
sbb
push
scas
sahf
push
mov
push
pop
pop
cld
inc
jecxz
test
adc
lret
and
movl
scas
pushl
ljmp
pop
push
mov
inc
shlb
inc
inc
cmp
mov
or
test
xchg
cwtl
inc
stos
adc
fidivrl
jp
call
mov
fwait
fwait
xchg
call
bt
cmovae
imul
cmp
add
mov
cwtl
sbb
xor
inc
adc
dec
mov
mov
stos
shrl
push
sbb
mov
sbb
iret
fcomip
jns
stc
mov
sub
jbe
cmc
mov
mov
add
cld
push
cwtl
sub
stos
cmp
lea
xchg
scas
push
mov
lret
sahf
test
ljmp
sti
in
je
std
push
pop
sub
les
cmp
adc
lock
mov
sub
popf
movsb
lcall
dec
pop
cld
pop
jecxz
stos
fldl
mov
mov
mov
sti
lahf
jnp
and
cwtl
add
arpl
or
repnz
popa
aam
js,pt
xor
sub
outsb
test
push
fisubl
jns
fdivrl
stos
xor
sub
jne
jb
sbb
clc
xor
cmpb
je
test
inc
pushf
cmp
inc
push
es
mov
jne
dec
sahf
push
sub
mov
repz
xchg
loopne
mov
repz
sti
dec
push
add
jecxz
and
lods
sub
dec
popa
lcall
mov
mov
fdivl
pop
dec
movsl
mov
rcrb
mov
test
sub
inc
lahf
lret
sub
xor
pop
mov
xchg
test
andb
divl
mov
fsubrl
loope
xchg
stos
inc
and
jns
mov
mov
mov
jno
movsb
insb
jge
std
adc
pop
mov
sahf
sbb
paddb
stc
and
add
pop
lahf
jg
add
adc
ss
xor
jg
test
mov
push
clc
rclb
movsl
inc
inc
das
shrb
push
mov
lea
xchg
sbb
xor
loop
je
clc
xchg
sub
add
add
sub
mov
fsubr
mov
sbb
dec
mov
inc
or
daa
inc
pop
mov
daa
pop
xchg
mov
lahf
aam
sbb
mov
lret
mov
sub
fidivl
cwtl
lret
inc
sbb
xchg
jmp
les
jno
inc
in
dec
sbb
shrl
fildll
ljmp
lret
pop
in
cwtl
xchg
sbb
cmp
daa
or
pop
adc
fnsave
push
add
pop
cltd
stc
or
lods
jne
lahf
pop
repnz
ljmp
cld
adc
and
cmp
dec
mov
sub
les
xchg
sub
xor
xchg
sahf
cmpsb
mov
jb
shlb
cmpsl
cmp
incb
ud1
call
hlt
pop
das
test
jns
pop
orb
sbb
imul
sahf
dec
sub
fwait
out
into
pop
mov
xor
mov
add
cmc
js
clc
sti
mov
jecxz
push
sbb
and
adc
sbb
add
xchg
push
leave
fsubrl
aad
imul
mov
subl
int
pop
cmp
mov
popf
adc
fcoms
sbb
fsts
pop
pop
add
stc
push
mov
xor
adc
sbb
dec
push
mov
leave
pop
ja
xlat
xor
fdivr
and
cmp
lods
outsb
repz
sbbl
cmp
lret
xchg
sub
sub
mov
mov
jmp
jae
sahf
fsubs
pusha
mov
inc
aaa
fnsave
stc
mov
les
mov
popf
es
sbbb
adc
mov
int
jle
sub
mov
xor
inc
lcall
adc
adc
and
fucomip
repz
pop
xchg
mov
push
mov
pop
xor
mov
and
addb
dec
mov
dec
inc
scas
cmp
jnp
inc
adc
sub
adc
test
push
in
dec
pop
xchg
or
mov
rcrl
into
xchg
sbb
mov
add
icebp
pop
scas
xchg
stos
mov
outsb
shlb
mov
mov
jge
jae
pop
gs
cmp
push
push
mov
jmp
push
xchg
out
mov
sub
iret
mov
adc
mov
mov
les
jge
dec
dec
cmp
xchg
cmc
mov
xchg
shlb
push
mov
sti
jp
cmp
mov
lock
add
inc
sbb
inc
adc
or
mov
pop
push
mov
andl
add
mov
and
mov
test
mov
adc
and
add
fwait
bound
dec
inc
cmp
sbb
adc
sub
test
push
mov
aaa
mov
subb
ljmp
rcrl
aad
cmp
lret
ret
rcrl
inc
push
jmp
sbb
pop
jae
adc
mull
cmpb
pop
mov
in
mov
cmc
lahf
loope
hlt
or
cmpsl
js
or
mov
inc
icebp
gs
pop
inc
test
and
into
test
inc
push
fidivrs
cmc
xor
imul
adcl
dec
xchg
out
insl
push
out
add
adc
inc
test
test
je
add
pop
sbb
mov
in
repz
ret
loopne
dec
pop
inc
jmp
clc
sbb
and
lret
jecxz
gs
nop
enter
int
pusha
mov
sbb
mov
aam
xchg
sbbl
lds
pop
stos
mov
repnz
cltd
jo
shrb
pusha
in
mov
lahf
repnz
jno
dec
inc
sub
inc
sbb
jno
add
inc
cmp
jl
arpl
test
sub
pusha
jnp
mov
icebp
fsts
sbb
or
xchg
pop
pop
mov
inc
mov
fdivs
sti
adc
adc
mull
rcrl
mov
adc
xlat
cltd
call
inc
in
in
jl
jmp
xlat
sbb
xchg
push
and
pusha
xor
xor
shr
inc
cltd
sbb
mov
jmp
adc
adc
mov
das
push
subb
mov
jnp
iret
fcomip
jns
dec
mov
add
mov
sbb
sbb
or
push
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
fs
clc
sub
shl
inc
mov
ja
fs
mov
mov
jae
aam
iret
scas
dec
mov
pop
adc
add
inc
stos
int
sub
inc
add
pushf
dec
lods
jle
mov
sbb
cs
jnp
in
mov
icebp
leave
sbb
adc
es
or
sarb
clc
xor
mov
mov
xor
adc
je
xchg
out
cld
or
cmpsb
clc
pop
push
jge
movsb
jp
cwtl
push
gs
jl
imul
gs
inc
adc
sub
loopne
sbb
or
int
imul
push
sub
adc
sbb
repz
fsub
mov
repz
sti
dec
push
inc
lahf
lret
jecxz
and
test
add
rolb
fwait
add
cmpb
pop
and
sbb
les
shrl
jmp
js
leave
cltd
test
fwait
into
push
or
into
sbbl
test
imul
xchg
lcall
or
pushf
shl
adc
enter
pop
js
pop
sahf
push
inc
jne
loop
in
nop
xchg
mov
arpl
xchg
imull
les
mov
add
xchg
push
push
pop
cmpsb
fldt
fdivrs
cli
xor
rcrb
sbb
mov
scas
aas
mov
cld
xor
mov
cwtl
clc
jp
enter
shrl
rorb
das
fisubrs
pop
dec
lea
sahf
dec
sub
test
mov
add
mov
gs
mov
xlat
clc
sti
mov
jecxz
movl
or
dec
adc
lods
inc
sbb
lret
movsl
dec
rcrb
sbb
xchg
stos
push
test
xlat
test
pop
movsb
jmp
pushf
push
stc
jo
popf
xchg
rclb
arpl
lock
mov
test
idivb
xchg
fistl
faddl
add
pop
pushf
and
adc
ja
adc
fistl
mov
stc
and
imul
or
xchg
aaa
call
cmp
int
mov
mov
fcomp
push
fdivrs
jp
mov
xor
jnp
out
js
fdivrl
inc
xchg
int3
pop
sub
push
adc
sbb
mov
int
jle
jnp
mov
xor
inc
lcall
adc
cmp
mov
aas
pop
lea
lahf
lret
hlt
mov
shrl
in
stos
shlb
adc
lods
roll
sbb
or
and
lds
jnp
jmp
lahf
fwait
in
mov
popf
lret
arpl
mov
lock
sbb
ss
sbb
dec
pop
mov
add
xchg
pop
mov
xor
out
iret
and
ja
dec
xor
xlat
fcompl
sti
and
or
dec
adc
jmp
je
adc
jbe
and
incb
test
ss
lds
mov
or
xlat
lea
xchg
mov
mov
dec
sbb
sbb
inc
add
inc
adc
loop
mov
or
es
dec
mov
into
pop
stos
pop
lods
test
mov
adc
mov
jb
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
lcall
jge
mov
fldt
leave
js
xor
test
jbe
sbb
lcall
cmp
imul
mov
lret
jns
push
flds
sahf
dec
cmc
mov
scas
sbb
incl
mov
fadd
and
ds
jge
mov
subl
into
mov
sbb
test
cltd
xor
cmpsb
xchg
sub
movd
lahf
pop
xchg
pop
jnp
cmp
enter
loop
push
sub
dec
push
or
fidivs
cmp
jb
idivl
gs
cwtl
mov
pop
ret
out
repz
ds
mov
adc
nop
fimull
dec
push
lock
shll
or
mov
pop
and
test
dec
and
leave
pop
inc
add
lret
fwait
sbb
lahf
shlb
mov
ljmp
fnsetpm(287
leave
je
ret
cmp
mov
cmp
dec
inc
pop
cltd
xchg
loop
stos
stos
mov
mov
fcoml
jge
scas
stc
lret
out
add
pusha
push
int3
scas
std
stc
loope
lds
inc
sbb
js
das
jl
dec
inc
cmp
pop
inc
aam
mov
add
xchg
mov
add
pop
lret
fwait
xor
xchg
mov
mov
std
jge
xor
call
pusha
ds
jecxz
mov
shr
inc
cltd
stc
pop
mov
jmp
adc
jb
mov
xchg
pop
stos
shrl
push
test
mov
jle
iret
ffreep
jns
sbb
hlt
mov
jp
cltd
dec
bswap
jae
sbb
in
jns
imulb
jno
jns
and
movsl
mov
and
pop
push
test
ret
dec
sbb
add
mov
fnsave
push
mov
nop
sbb
sbb
jnp
lock
or
pushf
mov
mov
mov
add
adc
imul
jle
das
pop
icebp
sbb
cmp
jl
sbb
inc
fiaddl
mov
dec
idivb
lods
sbb
push
or
les
xchg
out
aam
mov
clc
mov
daa
popf
jecxz
lahf
cmpsl
mov
fwait
lea
pop
xchg
bound
out
adc
movntps
push
or
int
imul
push
sub
mov
xor
repz
int
mov
and
cmp
inc
jns
xchg
rcrb
mov
shrl
dec
or
sub
adc
cwtl
lret
pop
shll
imul
mov
lods
pop
shrl
fildll
loop
jno
pop
sti
in
and
ret
sbb
cld
mov
in
movsb
stc
adc
dec
sub
jl
pop
call
test
pop
xchg
sbb
xor
test
test
adcl
mov
testb
out
or
aam
stc
js
pop
icebp
or
and
add
js
dec
pop
mov
jl
cmp
cmp
in
jne
push
mov
sub
push
dec
repnz
mov
mov
enter
mov
sbb
in
shl
dec
adc
call
pop
mov
imul
inc
mov
xor
ds
push
inc
sar
push
gs
adcb
adc
jp
mov
jo
fsubrl
popa
stos
icebp
ss
lds
mov
iret
subl
int
inc
cmpl
mov
cmpsl
pop
sub
les
rorb
xchg
lcall
ja
or
mov
mov
sti
call
mov
cltd
fmull
cmp
lods
ret
or
inc
enter
jmp
inc
sub
inc
cmpl
fstpt
add
and
mov
mov
sarl
test
movsb
inc
sbb
cmpsl
ret
out
ret
add
mov
inc
cwtl
pop
cmc
xchg
enter
add
out
mov
imul
sahf
dec
sub
mov
pop
sub
mov
and
lds
xchg
fists
add
fisubrs
sbb
enter
add
rcrl
jo
iret
cmpsl
mov
adc
push
lock
ss
repnz
scas
pusha
adc
test
push
cmc
mov
ljmp
lret
mov
cmp
mov
leave
or
movsl
adc
sbb
sahf
pop
mov
shr
rcrl
dec
jo
jge
or
pop
cmpb
inc
pushf
imul
mov
sbb
lahf
sbb
cmp
clc
or
xchg
xchg
lods
mov
xchg
mov
outsl
inc
and
call
cmp
testl
sbb
xchg
lods
mov
sub
mov
inc
jmp
mov
shl
mov
shr
repz
adc
adc
fbld
jle
or
test
mov
pop
push
add
fcomip
mov
mov
popa
nop
adc
or
xorb
pushf
lcall
push
adc
test
push
nop
rclb
rcll
mov
push
cmc
mov
ficompl
mov
fdivr
and
xchg
fcoms
lds
jae
or
jp
out
test
mov
mov
add
inc
mov
fstl
fwait
enter
lret
push
xchg
sbb
jnp
xchg
jg
or
xor
subb
aas
clc
loop,pt
and
cs
dec
cmp
std
and
inc
sti
push
je
mov
out
xor
gs
cmpsl
ret
fincstp
clc
in
lea
cs
mov
enter
sbb
add
inc
adc
jl
mov
or
movsb
fstpl
mov
pop
stos
les
add
int
movsl
push
mov
in
cltd
fisttpl
pop
cmp
sbb
aas
lcall
aad
or
ret
xchg
sbb
sbb
jbe
pop
stos
mov
repnz
push
in
dec
ss
lcall
xchg
jmp
or
sbb
lret
inc
sbb
adc
xor
or
dec
sbb
pop
mov
cmpsb
jno
pusha
lahf
adc
test
sub
sbb
js
js
adc
sbb
xchg
adc
es
dec
mov
mov
dec
mov
test
xchg
sti
jle
mov
lahf
pop
xchg
aas
imul
jl
dec
das
enter
loop
lds
xchg
cmovno
or
cltd
cmpsb
mov
sub
mov
dec
mov
mov
push
add
pop
mov
xor
in
daa
ja
clc
rolb
mov
mov
inc
sbb
mov
xchg
or
aam
lcall
inc
xchg
sub
mov
stos
mov
xchg
mov
pusha
push
cld
sub
aaa
mov
imul
mov
lahf
repnz
addl
sub
cltd
lret
mov
mov
dec
movsl
xchg
mov
add
cmp
xor
fdivl
jecxz
popf
movsl
jg
cli
in
cli
mov
lret
hlt
or
inc
cmp
andl
push
ret
add
or
jb
jmp
std
xchg
pop
adc
xchg
jp
aaa
test
sub
mov
out
mov
std
jge
and
aam
mov
int3
pusha
ds
movsb
jecxz
mov
shr
inc
cltd
pop
cmp
inc
cmpsb
dec
mov
rcrb
sti
aam
jo
xor
and
out
daa
push
adc
adc
movsl
lds
jg
ret
sbb
inc
pop
lcall
jg
sbb
dec
and
sbb
bnd
xchg
push
jns
rorl
icebp
fsts
fisttpl
movl
test
or
cmp
call
xlat
loopne
lds
stos
jge
pop
mov
leave
jns
flds
push
leave
pop
lcall
jecxz,pn
movsl
sbb
sub
xchg
adcb
dec
adc
leave
pop
outsb
rcl
pinsrw
fildll
mov
inc
cwtl
dec
lods
push
std
pop
movsl
ret
fdiv
dec
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
out
push
or
int
imul
gs
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
mov
lock
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
cmpsl
adc
dec
test
mov
ja
adc
lahf
popf
in
stc
dec
sub
push
sbb
inc
cld
cmc
mov
jo
jge
gs
adc
fisubl
pop
outsl
les
fistl
movsb
xchg
icebp
dec
aad
mov
fstl
cmp
call
stc
add
scas
jg
fyl2x
xor
inc
stos
adc
inc
mov
or
jnp
xor
push
dec
and
xor
test
insl
std
aas
movsb
inc
sbb
cmpsl
ret
out
mov
aas
mov
push
xor
mov
cwtl
cmp
enter
inc
dec
or
mov
dec
mov
ret
into
inc
xlat
xor
pop
arpl
aad
mov
loopne
rorl
aaa
sarl
lahf
lret
or
add
test
negb
frstor
sub
dec
roll
sbb
rcrb
sbb
les
icebp
or
adc
fldenv
mov
lods
xchg
jno
mov
shll
mov
or
cmp
jl
add
mov
jge
jb
sbb
jns
mov
sahf
push
fbstp
arpl
lret
sub
js
or
rcr
mov
inc
cmpsb
pop
xchg
in
mov
sub
testl
inc
call
mov
testl
sbb
fwait
repz
add
int
jle
sbb
cmp
fsts
add
mov
imul
and
mov
dec
cmp
imulb
jnp
or
cltd
push
lock
cmp
cmpsl
mov
arpl
sbb
ror
test
aaa
stos
xor
sahf
sbb
lods
add
xor
pop
std
mov
push
jle
fstpl
dec
pop
xchg
sbb
add
xchg
lcall
ja
mov
mov
test
stos
lods
ret
pop
cld
pop
addr16
cmp
je
adcl
jg
xor
mov
in
pop
popa
sbb
in
mov
rolb
xchg
jle
xor
mov
fmull
adc
lds
push
out
xor
int
in
jmp
clc
rolb
inc
cmpsl
fnstsw
mov
call
inc
sbb
pop
add
push
adc
enter
je
mov
pop
adc
call
push
sahf
pop
imul
push
das
jmp
clc
add
sbb
in
cmp
imulb
inc
add
add
jbe
and
test
jp
js
clc
mov
cmp
test
pop
xor
xchg
filds
repz
jge
outsl
scas
adc
pop
mov
inc
push
sbb
xchg
pop
sub
adc
sub
jns
mov
push
xlat
cwtl
pop
lret
mov
lahf
fisttps
jle
xor
int
xchg
sub
js
es
dec
pusha
sarb
sub
push
mov
int3
mov
in
xchg
mov
lahf
pop
xchg
sahf
fs
fwait
jl
lea
bound
add
cmpsl
sub
sub
dec
push
or
ret
push
int
mov
xchg
xchg
fisttpll
pop
pand
inc
sahf
dec
jns
cmp
jno
iret
sbb
daa
dec
cmp
rcrb
jae
sbb
in
jns
repnz
jno
jns
xchg
mov
push
leave
lahf
push
and
rorb
push
inc
cmp
cs
add
sub
push
sbb
lret
or
lcall
fimull
mov
aad
jp
dec
push
cmc
mov
sahf
xchg
jl
js
jp
mov
mov
gs
pop
aaa
cwtl
fcomps
andl
mov
mov
and
xchg
jp
int3
mov
push
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
pop
and
add
cmp
add
ret
int3
sub
in
mov
jmp
inc
jae
arpl
imulb
mov
sbb
adc
xor
and
xchg
mov
out
mulb
cli
in
out
add
jmp
jl
xor
in
jnp
out
repz
xchg
pop
xchg
fcompp
adc
xorl
xchg
add
insb
mov
fildll
mov
inc
cwtl
dec
lods
push
out
movsl
ret
fmul
cmpsl
mov
lahf
cmpsl
mov
fwait
lea
push
int3
bound
out
adc
sub
push
pop
add
or
xchg
pop
cmp
test
rorb
pop
sub
xlat
jg
pop
mov
cmp
cmpsb
ja
fadds
divl
lds
jg
ret
sbb
inc
pop
mov
insl
xchg
ret
leave
lret
imul
nop
adc
lods
stc
cmp
test
leave
lods
testl
dec
xor
pushf
arpl
xchg
data16
push
ret
cld
dec
adc
add
sbb
cwtl
fimuls
jb
sub
xor
and
xchg
mov
cld
enter
daa
mov
fdivr
andl
mov
mov
and
xchg
jp
mov
test
sub
mov
out
mov
ret
fld1
std
jge
dec
cmpsb
inc
cltd
xlat
call
int3
add
orl
jb
inc
es
adc
aaa
xor
pop
push
mov
lcall
mov
sub
ljmp
ds
cmpsl
ja
iret
rorb
mov
add
cmpsl
inc
sbb
pop
lcall
push
xchg
or
mov
test
push
leave
lahf
push
and
lds
jge
push
in
mov
popf
jmp
dec
jae
arpl
lds
sbb
jae
mov
cmpsb
stos
rolb
mov
lock
pop
inc
jne
push
adc
pop
insb
ja
xor
xor
cmpb
adc
lds
cmp
sbbl
jns
or
or
add
inc
fsubrs
fildll
mov
lods
push
in
movsl
ret
fadd
testb
mov
cmpsl
mov
fwait
lea
lahf
aam
xor
push
adc
lahf
dec
xchg
jo
mov
dec
nop
lea
lea
rcl
pop
cmp
mov
call
pop
movsl
imul
lds
cmp
jecxz
pop
mov
or
inc
cmp
push
mov
movsl
ret
sbb
xchg
add
adc
mov
push
pop
xchg
or
fstl
pop
dec
sbb
fcoms
ffree
push
adc
pop
or
jne
mov
stos
mov
adc
pop
pushf
jbe
xor
aad
adc
jg
out
cmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
sub
mov
lea
xchg
mov
push
mov
or
lahf
mov
jl
mov
cmp
jne
jecxz
movsb
sbb
test
inc
aam
sbb
fisubrs
das
pop
xlat
adc
sub
popa
pop
mov
sbb
imul
cltd
in
stc
aaa
sarl
lahf
lret
or
add
test
idivb
add
movsl
inc
xor
pop
rcrl
add
popa
xchg
aam
xor
fst
leave
sbb
add
sub
call
scas
dec
mov
enter
cs
fistps
jl
fidivl
mov
scas
fmuls
pop
dec
xchg
adc
pop
push
sub
nop
sbb
je
mov
xchg
cld
xchg
jb
mov
xor
inc
xor
fdecstp
js
jo
scas
inc
movsl
fmull
xchg
lret
sbbl
jbe
iret
subb
push
dec
and
xor
test
insl
in
movsb
inc
sbb
cmpsl
ret
out
repz
fwait
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
loopne
mov
popf
lea
add
lahf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
sbb
or
sbb
cmpb
stos
int
sub
dec
xor
stos
dec
sbb
insb
push
push
xchg
mov
mov
mov
je
fxch
push
test
filds
shlb
movsl
jl
lret
rcll
out
stos
adc
ficoml
add
pop
stos
fsts
cmpsl
adc
loopne
jp
cmpsl
sbb
leave
push
xchg
pop
mov
push
or
sarb
iret
and
lea
inc
mov
cld
cmp
repz
mov
sub
mov
bswap
loope
jb
pop
fsubl
shlb
xchg
fmuls
and
shll
shr
test
pop
movsb
popf
mov
lea
fsts
inc
add
dec
rcrl
adc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jl
jle
mov
es
inc
sbb
pop
sbb
mov
imulb
les
jnp
cmp
fisubrl
xor
mov
sti
cli
pusha
std
movsl
dec
push
dec
pop
in
dec
add
cmp
mov
add
or
or
pop
dec
fistl
xchg
xor
pop
cmp
sbb
jmp
scas
inc
fwait
push
shlb
pop
addl
add
fnstenv
sbb
dec
and
je
cmp
test
out
xor
int
decl
ret
fld
clc
xor
add
sahf
aam
jl
xchg
or
fistpll
push
or
out
jne
js
popa
in
mov
test
incb
jnp
adc
add
mov
jno
iret
sbb
mov
adc
jbe
adc
stos
imul
mov
imulb
sbb
push
and
imul
adc
sahf
aaa
push
negl
fs
sarl
pushf
in
jae
inc
fadds
cmp
cmp
mov
mov
mov
test
pop
dec
rol
fcmovnu
cwtl
mov
js
lds
inc
and
lahf
scas
mov
mov
lcall
or
adc
pusha
sarb
sub
push
mov
cld
pop
mov
daa
xchg
mov
lahf
xchg
cltd
out
mov
sti
sti
faddp
mov
js
loopne
jecxz
mov
or
out
push
adc
mov
jmp
test
xor
mov
xchg
jne
inc
hlt
out
les
shrl
loopne
mov
bound
mov
sbb
in
gs
sbb
lds
sbb
mov
mov
mov
dec
test
dec
sarb
mov
stos
pop
aaa
stos
lods
mov
sbb
sub
stos
shll
jge
pushf
mov
sub
xchg
xchg
jl
out
lret
add
mov
inc
les
sbb
xchg
mov
xchg
pop
sbb
test
mov
pusha
pop
into
xor
mov
fwait
leave
insl
xor
pop
aaa
cwtl
call
es
mov
sbb
inc
and
xchg
jp
int
test
sub
mov
stos
cmp
out
aas
pop
sahf
push
dec
aad
jmp
inc
orb
sbb
mov
js
or
fnstcw
fisubrs
and
loopne
cmc
xor
aad
xchg
out
jbe
mov
sub
mov
add
adc
jae
mov
xor
mov
cmp
mov
hlt
test
adc
sbbb
inc
sbb
cmp
mov
std
cld
push
jne
test
leave
pop
sbb
mov
sbb
test
cmp
ljmp
fnstcw
inc
outsb
cmpsb
sub
mov
mov
ficomps
xchg
sbb
test
sub
sbb
scas
in
inc
mov
mov
sub
sbbl
test
or
or
add
mov
sub
lods
push
out
leave
movsl
ret
fsubr
adc
push
loope
int
int
ljmp
fucomp
test
pop
hlt
pusha
inc
inc
or
cmp
fsubrp
mov
mov
dec
sbb
loopne,pn
xor
dec
shll
movsb
negb
loopne
cld
mov
shlb
cmp
jae
fsubs
cld
add
add
inc
pop
mov
add
imul
gs
sbb
pop
lret
push
sub
movsb
leave
mov
dec
push
add
adc
mov
rcrl
sbb
sub
popa
adc
imul
jge
mov
push
nop
test
mov
mov
push
adc
outsb
pop
dec
outsb
jmp
xor
mov
mov
popf
dec
icebp
andb
push
xchg
mov
mov
adc
mov
sub
sub
out
dec
pop
cmc
stos
popa
jne
outsl
push
andnps
pop
xor
mov
push
adc
or
orb
adc
mov
jbe
mov
sbb
mov
call
mov
aam
popf
pop
pop
add
out
mov
bound
rcrb
add
repnz
mov
add
or
inc
mov
lds
popf
lret
push
in
mov
in
mov
dec
sbb
in
inc
dec
shrb
add
das
or
insl
movsl
mov
std
inc
jnp
push
lret
pop
test
mov
and
fcomi
js
adc
and
jb
xor
adc
sub
or
xchg
sbb
mov
xlat
xor
test
insl
xchg
stc
mov
stos
mov
sti
gs
jmp
mov
sbb
adc
add
sbb
ss
dec
inc
test
cwtl
mov
icebp
lret
sbb
inc
and
cmp
jle
pop
stos
cmp
aaa
in
movsl
divb
pop
ds
cwtl
xor
bound
jecxz
insl
xchg
xlat
or
sbb
sbb
inc
pop
sbb
or
sub
sub
inc
insl
movsl
dec
or
dec
cwtl
fst
dec
sub
and
mov
pop
jne
movl
sbb
sbb
sbb
lret
rcll
mov
scas
mov
sbb
or
cwtl
push
sub
gs
lods
cmp
ljmp
cmp
insb
push
dec
fxch
loop
sarb
iret
and
lea
mov
call
cmpsb
pop
mov
jp
mov
rcrb
dec
lock
fdivrl
jnp
sti
inc
adcl
adc
jecxz
inc
rcll
adc
test
cwtl
cwtl
mov
lret
sub
mov
and
in
and
xor
test
fbld
jmp
popf
sbb
dec
ret
sahf
jb
rol
loope
sub
lds
and
inc
dec
or
addr16
xchg
testb
aad
sbb
clc
push
cli
sub
fbstp
jae
stc
insl
push
lcall
xor
inc
cmp
adc
out
add
jo
imul
test
sbb
mov
mov
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
cli
addl
add
insb
xor
mov
mov
fisubl
push
lcall
cmp
call
xchg
pop
jmp
call
int3
pop
sub
in
hlt
mov
cmc
xchg
mov
cltd
jne
dec
mov
imul
lods
sahf
dec
mov
inc
add
pop
arpl
int
mov
lods
pushl
xchg
mov
call
jp
popa
mov
cltd
test
inc
sbb
lock
hlt
mov
jl
xor
movsl
ret
insb
test
iret
add
stos
jb
stos
jecxz
jne
push
and
sub
cmc
fistl
adc
stc
mov
mov
test
inc
sahf
cmp
mov
adc
test
mov
lods
cmp
cli
outsl
pusha
mov
js
js
insb
push
or
loop
sarb
and
lea
add
rcr
mov
inc
les
shl
or
int3
popa
xchg
lods
sti
jmp
push
inc
popf
lret
mov
fnstenv
xorl
out
mov
add
in
pushl
mov
popa
in
mov
test
mov
mov
in
cmp
lds
bound
jecxz
popa
popf
rcrb
addr16
fwait
jge
xorb
add
xor
sbb
fs
add
adc
lret
pop
push
mov
mov
ljmp
cli
xchg
test
jae
xchg
add
xchg
lods
outsb
lods
mov
pop
stos
xchg
push
adc
mov
dec
jg
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
sbb
lret
push
add
je
sbb
jmp
xchg
out
aam
jne
inc
gs
imul
outsb
jle
lahf
pop
pop
xchg
std
jmp
cmp
xor
cmp
in
sbb
xchg
fsubr
dec
test
xor
mov
xchg
pop
adc
add
popf
pop
jb
mov
jmp
popf
sbb
dec
sar
adc
mov
or
pushf
sbb
sub
sarb
imul
dec
lahf
lcall
push
gs
push
xor
mov
jge
andl
movb
in
jmp
cld
pop
sub
add
jge
pop
add
stc
fisubrl
lahf
or
sub
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
repnz
xchg
push
das
sub
or
mov
sub
push
mov
fwait
mov
mov
insl
icebp
out
xchg
mov
arpl
jne
or
mov
cmp
cmp
pop
cmc
leave
sbb
add
and
js
fisubrs
and
loopne
cmc
xor
mov
xchg
pop
cmp
sbb
call
mov
jae
mov
fists
rol
sti
mov
test
mov
mov
mov
mov
subl
jmp
std
mov
arpl
std
fldenv
xor
jae
mov
in
inc
stos
mov
adc
mov
push
or
in
sbb
stos
xchg
stos
cmp
fwait
push
xchg
mov
push
ret
into
xor
sbb
insl
xor
pop
aaa
cwtl
clc
mov
addl
xchg
lock
les
rclb
jp
mov
movsb
inc
cmpsb
outsl
push
gs
insl
jg
fwait
lea
aad
repz
sbb
mov
inc
or
push
insl
lock
mov
mov
dec
sbb
loopne,pn
cmc
mov
mov
cmp
addr16
insl
xchg
sbb
push
sar
fisubl
out
jmp
mov
pop
push
sbb
or
mov
adc
les
inc
int
sbb
cmpb
push
imulb
adc
mov
setle
fcomps
lret
sar
xor
pop
cmp
mov
clc
lock
dec
lret
aad
push
adc
add
dec
les
xchg
adc
test
lods
inc
sbb
scas
in
and
mov
jp
jo
sbbl
adc
or
or
add
mov
clc
or
sbb
outsb
mov
pop
xchg
rclb
xchg
je
fidivl
mov
nop
and
call
or
lds
pop
fldl
add
icebp
mov
out
or
cwtl
cwtl
inc
sbb
in
cmc
sbb
fisttpl
jae
mulb
xchg
mov
mov
mov
aam
enter
mov
sbb
lds
inc
test
movb
sub
jne
test
clc
in
fisttps
mov
nop
movb
test
inc
fmuls
inc
lcall
sbb
or
cmp
movsb
pop
sbb
sub
adc
ret
outsb
pop
dec
icebp
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
outsl
mov
and
xchg
mov
in
ret
mov
cli
xor
cmpsl
ret
punpcklwd
outsl
or
inc
popf
repz
outsl
push
adc
sub
dec
push
aam
dec
inc
test
cwtl
clc
inc
cmp
mov
ret
sub
jecxz
fisubl
xor
jne
pop
jns
pop
loopne
in
mov
jae
mov
adc
pop
mov
pop
pop
mov
ss
adc
mov
sbb
mov
sub
push
mov
in
mov
push
push
fxch
mov
fs
pop
test
in
adc
shll
shlb
mov
pop
bound
xchg
push
xchg
sbb
mov
stos
add
push
lret
pop
test
mov
and
fcomi
js
cld
popf
scas
inc
movsl
faddl
jle
andl
addl
push
dec
mov
xchg
xchg
sub
cs
push
xchg
mov
in
fdivrs
aam
inc
and
lret
gs
std
inc
or
xor
fcoml
mov
rcll
adc
xchg
cltd
mov
or
dec
pop
jnp
sbb
call
mov
cmp
pop
sbb
out
ds
jp
movsb
fldenv
in
mov
lcall
dec
mov
ss
xor
iret
mov
sbb
jbe
adc
cli
pop
sarb
lcall
shrl
sub
into
push
sarl
xchg
leave
subl
xor
or
cmp
inc
lcall
gs
lods
cmp
sub
pusha
mov
add
js
insb
push
dec
add
loop
sarb
andl
cwtl
into
addb
pop
dec
xchg
adc
xchg
pop
mov
fisubrl
and
insb
cmc
xchg
xchg
aas
xchg
in
pop
out
inc
sbb
mov
insl
call
test
mov
gs
sub
pop
rcll
rolb
dec
dec
test
or
jmp
cmp
xor
movsb
std
aas
std
dec
jp
mov
dec
in
xlat
pop
push
andl
mov
sub
jl
cltd
je
lock
inc
aas
cli
shll
repnz
icebp
cli
dec
xchg
adc
push
mov
xlat
push
aaa
xchg
sahf
test
cwtl
xor
aaa
pop
push
in
dec
stos
fildl
dec
sub
lret
in
cmc
iret
add
pushf
pop
xchg
test
and
xor
lock
adc
push
mov
test
mov
sbb
jne
fucomi
jge
ret
pushf
scas
inc
fwait
push
rolb
dec
and
lcall
jge
adcl
rcrl
jg
and
xchg
mov
pop
fidivrl
jo
lret
cwtl
sub
mov
mov
mov
int3
loope
sbbb
push
sbb
shlb
aam
xchg
cltd
sahf
or
outsb
mov
shll
xchg
sbb
aam
popf
jl
pop
pushf
imul
jno
jecxz
movsl
mov
cltd
cwtl
jmp
sbb
push
xchg
mov
cmpb
xchg
xchg
add
faddl
movsb
fisubrl
pop
inc
inc
pop
dec
or
ret
mov
mov
mov
xchg
push
nop
cld
icebp
xchg
dec
mov
or
icebp
fisubrl
lahf
or
sub
pop
mov
and
lods
inc
and
lahf
scas
mov
mov
aad
jo
popa
or
mov
repz
roll
or
mov
mov
pop
test
notl
in
add
mov
lock
mov
bound
out
xchg
test
inc
cmp
mov
mov
sbb
xchg
into
adc
mov
jne
fstpl
addl
adc
insl
sti
lret
sbb
jns
pushf
rcrb
dec
sbb
out
sbb
and
pop
rorl
stos
lds
push
clc
sub
mov
pop
sbb
clc
cmp
lods
aad
lret
add
sub
inc
sbb
or
jl
sbb
xchg
stos
cmp
fwait
push
xchg
sbb
shrb
push
ret
into
mov
fucomi
repnz
fwait
leave
cmc
xor
inc
stos
sbb
movsl
loopne
fdivs
adc
and
push
or
dec
or
ret
mov
pop
jg
call
xchg
lahf
out
cmp
gs
cltd
enter
out
je
cmp
pop
rcrb
shlb
add
mov
inc
xchg
lea
js
popf
neg
adc
add
and
ljmp
mov
dec
mov
pop
es
sbb
cmpsl
mov
ja
lahf
rolb
adc
lods
fs
sbb
add
jb
and
mov
test
adc
cmc
sbb
push
mov
xchg
test
dec
mov
test
lret
loop
mov
dec
les
lock
pop
test
lods
inc
sbb
scas
in
jae
mov
jmp
mov
fadds
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
es
lea
clc
and
and
test
sub
fwait
inc
mov
adc
cmpb
jmp
shlb
fs
dec
mov
mov
push
fldl
mov
mov
mov
cmp
fists
add
ret
mov
mov
mov
sbb
sbb
not
sbb
pop
sub
jne
les
push
rcrb
jbe
movsb
lcall
inc
jae
fistpl
das
lret
inc
ret
pop
sub
inc
sbb
or
cmp
pop
jae
mov
lods
mov
mov
push
adc
pop
lret
jecxz
bnd
int3
scas
pop
fdiv
in
add
sub
inc
sarb
jo
add
pop
and
mov
imul
dec
add
mov
shll
sub
jb
pusha
repz
push
enter
and
inc
ds
mov
mov
cmp
inc
inc
pop
cwtl
adc
out
aad
test
xchg
icebp
scas
int3
sbb
scas
jns
into
adc
loopne
in
mov
mov
sbb
pop
sbb
cmp
fadds
hlt
sub
imul
sub
rcrb
sbb
vandnps
test
cmp
addr16
pop
lret
fucomp
cld
std
mov
mov
popf
aad
push
fs
jp
xchg
test
xor
push
xchg
std
movsb
mov
stos
fs
enter
push
lret
pop
test
int
sbb
scas
fcmovnb
js
pop
cmpsl
iret
jg
aad
cmp
mov
adc
push
cwtl
int3
dec
out
arpl
or
stc
dec
cmp
jnp
mov
daa
scas
xor
imul
pop
sbb
into
add
or
mov
mov
call
inc
jmp
shlb
gs
xchg
xchg
mov
xchg
mov
out
cmc
mov
add
mov
push
ds
pop
cld
pop
loopne
mov
push
cmc
sbb
mov
js
sbb
mov
add
dec
inc
push
loopne
repnz
add
mov
pop
leave
sbb
rcrb
cmpsl
jmp
xchg
mov
stc
and
lahf
loop
fildll
mov
pop
pop
push
arpl
dec
sub
jg
or
cmp
inc
lcall
gs
lods
cmp
mov
pusha
mov
out
and
movsl
dec
stc
filds
and
popa
push
addl
int3
dec
cmp
adc
sbb
imul
repnz
inc
insl
imull
push
aad
jle
lahf
pop
pop
xchg
mov
xlat
pop
jmp
jp
xchg
push
adc
sbb
hlt
mov
in
and
dec
sub
cs
dec
ret
fildll
stos
sub
cmp
dec
in
out
and
stos
push
jae
adcb
mov
popf
jp
outsb
or
pop
or
and
mov
cli
jp
fnsave
leave
and
and
sbb
pop
sbb
dec
mov
cmp
sub
jg
fwait
dec
dec
popf
lret
leave
lahf
test
test
xchg
test
and
dec
push
scas
xchg
stos
mov
stos
xchg
push
adc
daa
mov
leave
sub
mov
sbb
xchg
dec
stos
out
jg
mov
dec
xlat
cld
imul
mov
pop
test
adc
js
xchg
adc
es
inc
jmp
fucom
dec
sarb
inc
repz
xchg
mov
adc
xchg
mov
arpl
or
mov
mov
jge
jg
xchg
cmp
enter
jg
pop
sbb
mov
sbb
inc
cmp
ret
push
adc
out
andb
call
shll
aas
lods
dec
sbb
out
mov
test
mov
xchg
push
and
test
ret
pop
xor
fistpll
orb
xor
mov
scas
pop
rcr
push
jge
sub
cmp
mov
sbb
scas
mov
jecxz
ret
lods
mov
mov
dec
mov
xchg
push
nop
pop
mov
or
mov
fisubrl
lahf
or
sub
pop
mov
test
cltd
lods
inc
inc
pushf
shlb
jecxz
push
sar
pop
or
fsubrl
pop
add
rcrb
andl
outsb
jno
popl
cwtl
rorb
cmp
xor
add
mov
xchg
pushf
mov
sti
insl
or
mov
call
add
and
add
or
dec
mov
cltd
mov
jbe
push
sbb
rorb
mov
shrl
mov
dec
lock
pop
push
add
pop
add
mov
lcall
sub
pushf
add
mov
mov
push
pushf
sbbb
jl
nop
mov
test
test
inc
mov
ljmp
popf
lret
add
sub
inc
sbb
or
in
imul
mov
xchg
pop
mov
push
adc
pop
fiadds
imull
push
or
fidivs
sbbl
cmp
xchg
fucomi
or
add
xchg
sahf
inc
cwtl
aam
sarb
fcoms
test
rclb
xchg
je
fidivl
insl
jne
fisubs
mov
sbb
mov
adc
jb
dec
mov
jne
js
and
mov
int3
adc
inc
mov
int
lahf
lret
sub
jp
rcrl
add
xor
add
lock
cld
cmp
push
mov
mov
sub
jge
push
sbb
sti
inc
cli
shlb
scas
fistpl
push
outsl
jno
dec
dec
sbb
in
lret
stc
fs
lods
mov
mov
xchg
test
dec
mov
inc
addb
add
imul
xchg
adc
test
mov
pop
or
jmp
mov
mov
in
fsincos
cltd
cmpsb
fwait
leave
loop
jnp
or
cmp
mov
mov
test
adc
pop
in
ret
mov
cli
mov
push
gs
insl
es
push
or
sbb
test
rcll
ret
inc
push
fwait
nop
sub
and
dec
mov
or
dec
sbb
adc
mov
jne
popa
pop
push
or
lods
cltd
jle
sbb
cmp
adc
mov
and
je
lahf
xchg
jno
pop
mov
push
sahf
ret
push
test
lret
cli
int3
shrl
jnp
fildll
jae
fistpl
push
lret
inc
ret
pop
sub
inc
sbb
or
cmp
movsb
pop
and
fwait
lods
jle
mov
mov
mov
aaa
jg
cli
rol
popf
scas
inc
and
icebp
xor
xchg
into
or
pop
xchg
mov
mov
rorb
cs
push
xchg
mov
loopne
fdivrl
xor
jns
fldenv
mov
lds
and
xor
addb
and
mov
xor
daa
loope
mov
adc
fsts
mov
loopne
xor
mov
in
inc
mov
xor
jne
aam
enter
add
rcrl
ret
ficomps
cmc
jbe
ljmp
jl
nop
xlat
pop
sbb
test
clc
scas
out
mov
jge
cs
fucomp
cld
std
stos
aaa
mov
popf
aad
push
lods
xchg
test
cmp
xchg
test
xor
push
xchg
pop
imul
push
jb
lods
pop
mov
and
lods
popf
xchg
cmp
icebp
insb
fucomi
sbb
pushl
andl
out
or
or
imul
push
add
cltd
cmp
xchg
in
mov
int3
scas
mov
ds
daa
sbb
cmp
and
cmpsb
je
sbb
inc
inc
sbbb
enter
dec
cmp
test
aad
mov
int3
sbb
pop
and
popf
movsl
imul
fdivp
pop
icebp
fdivl
xor
rcrl
add
cli
or
add
cs
jg
repz
movsl
mov
mov
fsts
fwait
clc
push
test
pop
sbb
add
stos
ljmp
popf
lret
rcr
test
movsb
add
arpl
xchg
stos
mov
stos
xchg
fistl
fimull
push
jbe
dec
jle
mov
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
push
sbb
sbb
aam
aas
xchg
out
or
in
fsubl
xor
mov
clc
enter
leave
add
sbb
mov
or
mov
sbb
gs
das
in
cmc
mov
add
test
sub
lods
int
cmp
push
iret
and
mov
mov
inc
sbb
xor
enter
add
out
push
sbb
sbb
xor
pushf
dec
and
popf
vminss
mov
sbb
scas
mov
jecxz
mov
aaa
mov
shll
cmp
pusha
add
or
mov
imul
push
jb
sbb
jecxz
test
fucomp
mov
pusha
inc
loope
xchg
mov
rep
inc
fwait
leave
or
js
sbb
faddl
rorb
xchg
and
push
or
les
aam
cmc
or
sbb
fsubs
pop
fidivrl
stos
cmp
out
cmp
push
adc
or
pop
sbbl
dec
cmp
in
dec
ret
orl
mov
pop
mov
or
lods
incl
xchg
sbb
imul
mov
hlt
mov
inc
lods
fadds
mov
sub
lds
jne
dec
in
movsl
mov
mov
stos
mov
ja
hlt
test
test
inc
mov
cmp
jae
cmp
stos
fs
lret
add
sub
inc
sbb
or
xchg
fists
fimull
addr16
add
pop
mov
lods
inc
sbb
jmp
std
popl
cmp
mov
repnz
sbb
mov
mov
addr16
and
or
les
fwait
xchg
out
mov
and
mov
call
cmovge
jb
cmp
mov
test
aad
pop
or
sbb
or
addl
mov
ret
push
adc
mov
lods
sbb
hlt
cmp
in
cld
aas
in
and
mov
in
inc
inc
or
add
addr16
dec
popf
jp
xor
push
dec
and
pop
stos
push
outsl
jno
insb
dec
sbb
push
mov
stc
push
cwtl
lods
mov
mov
xchg
test
dec
mov
adc
add
lret
fistl
mov
mov
aad
add
push
push
pushf
pop
jmp
scas
pushf
pop
sub
bnd
jecxz
adc
out
mov
rolb
cwtl
rolb
jo
add
dec
and
les
clc
in
fsubs
mov
pop
inc
pop
mov
sub
ret
xchg
fldl
sti
repz
popl
sbb
mov
dec
add
mov
mov
cltd
pop
sub
pop
inc
sub
fistps
andb
sbb
popf
xor
dec
jns
ds
and
iret
hlt
adc
cmp
enter
push
sbb
add
xchg
add
frstor
push
test
lret
xchg
call
test
lcall
test
lret
inc
ret
pop
sub
inc
sbb
xchg
add
ljmp
lock
mov
aad
lcall
sti
add
inc
pushf
dec
stc
arpl
scas
add
adc
dec
mov
push
es
or
arpl
or
stc
dec
sarb
pop
in
and
fists
adc
mov
mov
insl
lahf
in
push
dec
test
push
pop
fidivrs
mov
mov
repnz
test
push
and
push
jp
dec
mov
jne
cwtl
adc
inc
mov
add
or
fcomp
dec
call
icebp
mov
mov
cmp
movsl
add
cltd
pop
add
mov
and
stos
adc
cmpsl
mov
testb
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
sbb
std
lods
out
mov
popf
aad
inc
and
adc
xchg
test
xor
add
xchg
mov
xor
mov
xchg
jmp
in
shrl
outsl
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
push
addl
enter
jns
pop
and
xchg
cwtl
test
xchg
icebp
das
or
add
in
cmp
insl
jecxz
lsl
call
dec
ja
iret
in
mov
or
rcll
addl
nop
sub
and
and
inc
pop
mov
mov
sbb
sti
insl
iret
into
adc
imul
xor
les
jae
mov
pushf
fiaddl
adc
pop
or
subb
xor
push
pop
imul
mov
pop
mov
dec
subl
icebp
fildll
bound
sbb
arpl
bound
xchg
dec
data16
push
sbb
xchg
pop
cmp
or
push
dec
in
xchg
cmp
imull
sbb
mov
jno
test
mov
in
pop
in
and
adc
jg
or
inc
pop
mov
je
fists
dec
and
incb
mov
icebp
cmp
lret
mov
fisubs
push
mov
fisubs
in
inc
mov
cmpb
xor
loopne
dec
inc
jp,pt
adc
movsb
cmc
clc
dec
adc
test
mov
aas
xchg
pushf
fmull
xor
aam
test
filds
pop
and
lret
scas
sbb
pop
lret
mov
mov
iret
cmpsl
mov
negb
jecxz
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
test
addr16
lret
fucomp
cld
std
mov
aad
jo
xchg
test
mov
push
fmuls
daa
sbb
cmc
add
ja
stos
inc
lcall
xchg
jge
mov
cmp
scas
push
je
lret
jle
mov
popf
int
leave
mov
add
arpl
or
sbb
mov
adc
mov
xchg
cwtl
data16
push
mov
push
int
push
mov
jns
push
insl
std
dec
jo
pop
lahf
call
inc
ja
bound
mov
push
adc
xchg
xlat
mov
movsb
nop
hlt
dec
pop
les
movsl
pop
in
aaa
call
les
jg
add
sarl
xor
mov
adc
decb
add
fsubrl
pop
imul
mov
pop
mov
inc
cmp
lcall
sub
fldt
arpl
push
mov
xorb
xchg
or
push
mov
xchg
push
fcmovbe
pop
cmp
adc
test
popf
adc
push
nop
push
js
jp
mov
push
mov
jo
jle
pop
repnz
mov
call
mov
test
adc
test
test
das
or
adc
mov
sahf
push
mov
pop
fsts
pop
lods
fwait
cli
cmovae
mov
cwtl
fisubrs
test
add
adc
add
pop
push
or
jg
pop
sbb
call
aam
push
dec
adc
mov
lahf
lret
jecxz
gs
fmul
pop
sub
sbb
mov
mov
loop
repnz
movsl
mov
mov
jl
xlat
stos
dec
sahf
sbb
push
test
pop
sbb
insl
mov
cmp
test
jg
popf
push
dec
popf
lret
mov
stos
pushf
ret
test
mov
jo
xchg
add
fisubrl
scas
push
testl
leave
imul
sbb
push
xchg
popf
out
jns
rep
inc
fwait
leave
or
js
cmp
sbb
cwtl
add
test
or
and
pop
pop
xchg
jmp
dec
js
fidivrl
in
into
mov
xorb
jne
insl
ds
fstpl
je
fdivs
aaa
dec
dec
xchg
xchg
lea
pop
sbb
fcoms
or
jo
mov
lcall
pushf
divb
incb
test
add
hlt
jns
aas
mov
dec
dec
mov
dec
mov
mov
add
fwait
push
cwtl
sub
cs
pushf
dec
and
xchg
dec
pop
stos
fsubr
movsl
in
dec
sbb
scas
mov
jecxz
repnz
mov
loopne
das
jae
mov
sbb
cld
xor
mov
mov
mov
or
sahf
push
mov
push
pop
pop
cld
inc
jecxz
stos
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
xchg
sbb
sbb
test
cmp
dec
xor
imul
dec
idivl
cmpsl
push
mov
jne
cltd
out
push
mov
fldl
and
fldenv
mov
hlt
mov
popf
jle
mov
sbb
xchg
fwait
pop
xlat
ret
sbbb
push
xchg
lcall
pop
jb
movsl
sbb
scas
inc
fwait
pop
out
clc
sti
dec
push
add
lret
jecxz
and
stos
test
dec
popa
xchg
test
sbb
mov
mov
jne
jl
movsl
mov
mov
stos
mov
ja
or
push
lcall
in
jae
push
cld
mov
fs
and
and
shlb
xlat
jno
inc
scas
push
pop
lock
movsl
sbb
lcall
dec
pop
cld
dec
push
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
js
jle
and
cmp
dec
or
pop
sbb
ret
fptan
stos
xor
push
jg
das
mov
out
imul
clc
popa
jge
outsl
push
inc
sbb
clc
int3
dec
dec
adc
cmp
mov
dec
mov
mov
mov
xchg
jmp
and
push
xchg
rclb
mov
in
int
add
inc
daa
pop
mov
mov
lahf
aam
sub
mov
bound
stos
mov
mov
popf
sti
iret
xor
fmull
nop
xor
sub
stos
push
outsl
jno
push
dec
sbb
outsb
mov
ffree
stc
mov
xchg
push
jae
je
cmpsl
cwtl
adc
mov
imul
mov
lock
loope
xchg
stos
inc
and
jns
or
jnp
lret
sar
sbb
icebp
adc
push
dec
out
sbb
cmp
or
cwtl
mov
mov
fwait
xor
jmp
sbb
fsubs
pop
mov
gs
cltd
xlat
xchg
jle
popf
gs
push
and
cmp
push
call
aas
in
mov
mov
mov
jmp
pop
dec
push
xchg
int3
nop
mov
jns
test
dec
and
mov
clc
sti
mov
jecxz
push
sbb
and
lods
ret
add
sahf
push
leave
fsubrl
fnstsw
push
test
lret
mov
shrl
dec
mov
popf
in
mov
repz
fadd
cmp
mov
loope
mov
das
or
adc
fnsave
push
add
lock
lds
xlat
outsl
pusha
mov
mov
fists
std
out
in
ds
rcrl
lret
clc
mov
fs
mov
adc
dec
aam
inc
les
pop
enter
xor
pop
xchg
sbb
cmp
test
mov
mov
mov
jecxz
enter
out
dec
fwait
adc
mov
clc
jnp
popf
xchg
push
adc
or
pop
add
sbb
add
dec
adc
sub
and
aas
pop
mov
lahf
lret
insb
mov
lea
push
and
lret
cmpsl
mov
test
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
lods
cmp
lods
mov
mov
pop
pop
rcr
sub
test
roll
fsts
cmp
icebp
pop
scas
xchg
stos
mov
outsb
shlb
xor
inc
jb
mov
pop
lods
loope
mov
outsb
shll
xchg
imul
clc
mov
icebp
leave
test
repz
push
mov
mov
rclb
jmp
aas
mov
ret
push
stos
icebp
mov
xor
pop
fadd
pop
mov
jmp
mov
sub
scas
add
sub
and
cmp
push
cwtl
sbbb
cmp
xorb
repz
ret
loopne
dec
pop
inc
mov
repz
sbb
and
aaa
gs
enter
pushf
int
jns
dec
sbb
mov
cmpsl
mov
loop
ljmp
mov
nop
xlat
stos
dec
sahf
pop
mov
test
dec
sbb
adc
push
and
test
push
pop
push
sub
mov
xchg
push
pop
push
cmp
ret
add
addb
lcall
shlb
jbe
lea
rcl
push
mov
aad
fnstsw
or
into
scas
je
fistpll
and
or
push
cmp
test
cmpsb
inc
mov
or
inc
mov
aad
cltd
leave
push
insl
loope
pop
xchg
push
out
xor
xor
or
mov
adc
ds
and
cmp
stc
inc
jp
adc
cmpsl
sbb
shrl
push
mov
pop
mov
inc
mov
and
mov
and
mov
jns
ret
mov
add
dec
push
cwtl
sub
lods
mov
push
lret
inc
in
xlat
fldcw
sub
into
lods
push
mov
fs
mov
lret
pop
icebp
add
push
cmp
sarl
test
sbb
jno
add
test
nop
adc
fistl
faddl
push
jnp
outsb
pop
test
mov
mov
aad
fnstcw
sahf
pushf
xor
and
loop
sub
sbb
inc
and
iret
inc
sbb
cmp
sub
test
xor
cltd
pop
xchg
imul
xor
loopne
xor
test
jno
push
mov
or
push
xchg
dec
xorl
fwait
jne
push
xor
cs
sbbl
into
popa
mov
mov
loopne
mov
repz
sti
dec
push
inc
ror
jecxz
and
sub
dec
popa
fwait
movsl
dec
sbb
mov
mov
jne
push
mov
stos
mov
ja
push
dec
push
dec
cmp
fs
das
push
adc
mov
mov
je
and
pop
repz
inc
pop
sbb
movsl
add
fcmovne
aad
fisubrs
mov
xchg
sbb
enter
fists
xchg
sbb
xlat
xor
add
leave
mov
xor
add
xchg
ds
xchg
div
or
daa
cmp
sbb
mov
push
jmp
xchg
aam
jbe
int
fwait
push
jo
fidivrl
xor
xchg
in
lea
mov
fnstcw
push
and
mov
inc
push
and
lret
fdivs
pop
dec
andl
pop
mov
xor
mov
cmc
mov
ljmp
lock
push
sbb
sub
mov
lock
inc
insl
fwait
adc
fsubrl
fs
repnz
mov
in
popf
test
adc
je
fucomp
pushf
inc
pop
cld
das
repz
push
or
into
sbbl
daa
jne
dec
push
shll
inc
lcall
xchg
jge
pop
movsb
jbe
push
enter
push
mov
jmp
das
push
std
cmpl
sarb
andl
mov
cwtl
fcomps
test
dec
mov
fnstenv
lahf
aam
mov
imul
sbb
test
xchg
in
test
hlt
in
adc
xchg
icebp
leave
adc
add
dec
cltd
push
es
loopne
adc
mov
mov
idivl
shr
repz
adc
xor
mov
aas
pop
test
dec
lahf
lret
insb
mov
addr16
pop
xor
mov
and
loop
iret
cmpsl
mov
imulb
cwtl
lret
movsl
ret
sbb
push
xchg
push
jb
mov
lds
cmp
xor
adc
stc
je
cld
rclb
arpl
lock
enter
add
push
mov
xchg
push
fcmovbe
sbb
fistpl
xchg
std
and
inc
cmpb
jg
lret
jno
cld
xchg
fwait
out
js
inc
shlb
lds
mov
adc
xchg
adc
dec
aam
stc
mov
sbbb
dec
push
in
xchg
popf
aad
aas
mov
mov
es
cmpsb
jnp
fdivs
popf
push
adc
adc
rcrb
mov
adc
push
imul
sahf
dec
mov
into
pop
stos
pop
lods
popf
insb
mov
add
mov
cmp
sti
mov
xor
cmp
adc
insb
or
subb
mov
imul
add
and
xchg
in
mov
and
xchg
pop
ret
jne
popf
lret
arpl
mov
lock
sbb
xor
test
fisubrl
scas
push
testl
fistl
or
and
jge
pop
pusha
jp
mov
mov
popf
lahf
xchg
pop
out
jl
popa
or
shlb
xchg
clc
dec
mov
inc
les
inc
push
mov
mov
or
jo
fwait
sbb
push
movsl
faddl
mov
and
test
je
or
mov
dec
mov
mov
add
repz
ret
loopne
dec
pop
xorl
jecxz
gs
hlt
enter
int
mov
mov
cmpsl
mov
cmpb
mov
fs
xchg
mov
mov
sbb
pushf
lahf
sti
mov
cmpsb
fldt
leave
js
xor
or
data16
mov
mov
or
pop
cmp
mov
mov
xor
xchg
sbb
sbb
icebp
sbb
mov
cmp
fistps
or
inc
idivb
xchg
xchg
aas
inc
mov
mov
mov
call
add
sub
xor
xchg
sbb
sti
cmp
fdivrl
sti
mov
shlb
add
and
mov
shr
inc
cltd
js
mov
jmp
adc
jmp
ljmp
push
andl
lds
adc
fidivrs
movsl
mov
add
sbb
push
add
ror
and
lea
dec
sbb
test
test
fisubrl
jge
test
ljmp
fnsetpm(287
leave
jl
mov
rolb
sbb
xlat
jno
inc
scas
push
pop
jo
movsl
or
jns
mov
cmp
fstl
pop
inc
fnstcw
push
xchg
faddl
repz
cld
into
dec
mov
cmp
add
or
pop
sub
adc
inc
stos
sbb
push
push
fdivrs
movsb
mov
cmp
clc
int3
pop
fdivrl
jnp
int3
jne
dec
inc
adc
dec
mov
loopne
cmp
or
int
imul
push
sub
mov
mov
loopne
mov
repz
sti
dec
push
xorl
repnz
leave
pop
sub
dec
popa
xchg
push
dec
sbb
adc
lret
xlat
scas
enter
adc
les
aad
int
sub
push
pop
das
lret
sbb
inc
lahf
lret
sub
xor
push
sti
es
js
xlat
fcoms
outsl
ljmp
sbb
insl
mov
jo
movsl
sbb
fstl
sbb
jecxz
stos
lret
mov
push
dec
xchg
ljmp
popl
lods
and
test
add
mov
fwait
nop
out
mov
xor
ljmp
adc
idivl
xchg
xchg
jle
clc
int3
pop
mov
sti
mov
in
and
sbb
mov
sub
hlt
or
fsubr
mov
sbb
mov
shlb
shr
adc
and
mov
daa
pop
test
mov
lahf
aam
add
mov
bound
xchg
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
fsubrs
inc
in
mov
sbb
shrl
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
movsl
push
popa
scas
je
lcall
movb
inc
pop
mov
xor
sub
pop
push
dec
jne
loop
out
sbb
and
and
aam
aam
cmp
test
xor
scas
mov
push
pop
push
jp
scas
decb
test
jle
mov
pop
hlt
or
mov
mov
xchg
enter
add
or
repz
pop
dec
xorb
dec
sub
xchg
mov
or
mov
adc
pop
mov
sbb
jecxz
push
sbb
sub
mov
lock
pop
push
add
dec
inc
cmp
push
hlt
sub
push
xor
nop
xlat
push
mov
cltd
inc
in
mov
subl
int
inc
cmpl
repnz
rcrl
dec
pop
out
cltd
adc
test
xor
aas
arpl
mov
xchg
ret
movsb
cli
lret
jno
aad
mov
aad
jmp
fs
leave
jo
shlb
dec
std
arpl
inc
lcall
dec
les
dec
dec
sarb
mov
inc
ret
int
mov
jne
jmp
add
stos
stos
cmp
mov
lea
xchg
lea
adc
sbb
mov
add
mov
xor
inc
lcall
adc
movsl
mov
loopne
out
and
jmp
aas
pop
cmp
mov
bound
andb
lock
push
adc
or
inc
mov
dec
pushf
dec
int3
imul
mov
mov
mov
dec
sbb
int
dec
push
movl
mulb
or
or
pop
mov
lods
hlt
xor
mov
rcll
lahf
cmp
lret
xor
dec
sub
sub
mov
mov
and
fildl
xchg
decl
push
repz
inc
cwtl
fmull
repnz
jbe
and
popf
ljmp
xchg
jmp
or
out
iret
popf
xor
fdivs
cmpsl
ffree
shl
mov
mov
js
enter
sbb
xor
add
imul
sahf
dec
mov
into
pop
stos
pop
lods
xchg
mov
or
mov
adc
sti
mov
in
lock
mov
ret
cltd
push
lock
mov
popf
cli
or
xchg
movsl
mov
push
insb
test
push
nop
rclb
rcll
mov
push
cmc
mov
scas
fs
mov
sub
mov
xchg
push
pop
push
jl
ret
or
lcall
pop
mov
std
xor
pop
jge
call
pop
enter
mov
mov
mov
or
xchg
fwait
imul
js
push
mov
mov
dec
lcall
sub
fsubs
insl
jmp
or
insl
fcomp
xchg
test
aam
jl
dec
and
loop
cs
sub
dec
push
or
fidivs
xor
push
idivl
mov
repz
ret
loopne
dec
pop
shl
repz
sbb
cmpsb
aas
lahf
lret
jecxz
mov
rorb
push
aas
mov
insl
xchg
adcb
xor
cli
fs
lret
mov
repnz
xor
jae
leave
je
pop
lret
subl
push
jl
ret
add
outsl
or
mov
shlb
adc
pop
fs
jnp
or
loope
push
int3
scas
cmp
repnz
sbb
out
push
lds
mov
mov
stos
mov
jp
sbb
mov
pop
jae
inc
insl
jmp
pop
clc
jecxz
insl
cmp
mov
ljmp
mov
and
xor
pop
shr
inc
cltd
fstps
mov
jmp
adc
or
rclb
mov
das
push
or
pop
mov
mov
jns
js
mov
jae
rorb
add
mov
in
aas
or
dec
push
nop
jg
adc
adc
sub
test
dec
cld
lods
sbb
push
lahf
xchg
push
adc
mov
aaa
jmp
add
push
sbb
ja
pop
sbb
or
stos
int
xor
inc
jl
fistl
mov
pop
xchg
sbb
cmc
mov
cli
cli
icebp
sbb
cmc
cmp
lahf
es
add
repnz
lock
aam
js,pt
ret
test
or
push
fidivrl
cli
pop
lods
inc
int
jns
cli
jle
fwait
pusha
jl
mov
cmp
in
jne
pop
mov
adc
mov
dec
and
inc
jnp
mov
mov
clc
fsubr
mov
sbb
mov
shl
dec
adc
call
pop
mov
daa
pop
pop
iret
fucomip
in
dec
mov
jnp
ret
cmp
sbb
add
lds
add
pop
and
sbb
les
imul
ret
shll
pushf
inc
pop
clc
scas
repz
fnstenv
jno
popf
sbb
xchg
sbb
add
pop
xchg
adc
pop
mov
ss
out
xor
mov
jns
mov
cld
or
sbb
inc
sub
imul
add
adc
pop
xor
aas
data16
push
mov
jp
fst
jge
mov
mov
xchg
enter
cmpsl
ret
out
fisttpl
fwait
lea
xor
mov
cwtl
mov
inc
adc
or
sbb
imul
sahf
dec
sub
subl
pop
sbb
mov
out
mov
jo
jge
mov
and
lock
cmp
xor
mov
adc
test
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
rcrb
jno
les
in
xor
adc
fnstenv
clc
cs
je
insl
test
mov
lds
adc
repnz
mov
mov
test
cmp
lahf
leave
mov
rclb
jno
lds
cld
shrb
jle
xor
pushf
adc
in
stos
js
cmp
ret
xchg
sbb
sub
les
xchg
sub
jecxz
push
repnz
xrelease
push
lahf
pop
inc
and
call
mov
testl
sbb
xchg
xchg
mov
and
mov
int
jle
stc
jmp
mov
shl
mov
shr
repz
adc
daa
mov
loopne
out
mov
sbb
aaa
pop
sbb
jns
add
sub
push
adc
cmp
fsubrl
outsl
aaa
sbb
rcrb
stos
jge
sbb
add
xchg
in
mov
and
xchg
push
cld
das
repz
pushf
mov
add
mov
mov
cmp
pop
mov
movsl
sbb
mov
in
add
movsb
stc
stc
push
cmp
jge
pop
push
enter
and
cmp
lods
and
aad
sbbl
cmp
fistl
nop
jmpw
or
sbb
out
xor
int
cmc
pop
cmpsl
ret
fincstp
clc
loopne
lea
xchg
out
mov
enter
sbb
push
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
xchg
js
dec
pop
movsl
dec
call
fdiv
in
cmp
imul
sub
jno
lock
sbb
cmp
cmpsl
mov
arpl
sbb
pop
dec
sbb
xor
cs
sbb
popf
sahf
sti
stc
je
scas
add
sub
arpl
xor
test
jl
sbb
les
or
mov
sbb
pop
fimuls
jb
sub
xor
and
cmp
or
sbb
dec
mov
sub
iret
mov
adc
mov
scas
popf
jb
add
mov
rcrl
jb
mov
addr16
movsb
ds
pop
and
inc
jb
fwait
jl
mov
enter
loop
jge
sub
dec
push
or
fidivs
inc
mov
dec
mov
mov
fucomp
repz
adc
xchg
mov
mov
sbb
mov
cltd
inc
push
lock
shll
or
mov
dec
and
lods
imul
aaa
push
xor
mov
lods
ficoml
test
shrb
jne
lahf
mov
adc
dec
add
push
jl
or
inc
imul
sub
xchg
hlt
icebp
mov
lock
pop
inc
jge
push
adc
pop
insb
ja
xor
xor
jmp
mov
cmc
mov
mov
hlt
or
cmpsl
js
jo
shlb
inc
cmc
or
jns
ficoml
sti
and
iret
icebp
test
sub
ds
sbb
loop
fld1
std
jge
mov
rorb
mov
int3
pusha
ds
into
jecxz
mov
shr
inc
cltd
mov
inc
adc
dec
mov
mov
push
mov
add
cmp
jae
mov
lock
sbbb
jae
sbb
in
jns
repnz
jno
pop
inc
int
clc
nop
icebp
mov
and
push
int
sub
push
pop
das
lret
push
movb
sub
or
sahf
cmc
adc
cmp
mov
cmp
fiaddl
daa
or
add
inc
stos
mov
adc
pop
xchg
jbe
scas
inc
inc
mov
mov
std
leave
push
repz
cmp
fwait
pop
mov
inc
mov
fdivs
fistl
roll
aas
jns
dec
lods
push
lcall
fdivr
sbb
movsb
inc
daa
popf
repz
cmpsl
mov
fwait
lea
sahf
push
bound
out
adc
add
movsl
sbbb
addl
mov
fisubrs
popf
xchg
xor
dec
sahf
push
sub
je
mov
sub
movsl
pop
gs
fstl
addl
mov
jns
nop
rcrb
mov
shrl
dec
or
sub
dec
lcall
lret
inc
std
mov
push
push
inc
lahf
fisubrl
fxch
stos
movsb
mov
adc
lahf
popf
in
js
nop
sbb
into
sbb
roll
xchg
or
pop
push
sub
nop
sbb
jl
rcl
lcall
fwait
jnp
mov
scas
scas
ret
jnp
in
mov
icebp
leave
sbb
adc
es
or
sarb
clc
xor
add
adc
cmp
stos
cmp
xchg
mov
pushl
or
dec
mov
jl
cmp
fld1
jb
cmp
in
jne
jno
int3
pop
xor
and
dec
and
pop
outsb
out
mov
mov
test
fsubr
mov
sbb
pop
adc
imul
shrb
adc
inc
rcl
fidivrs
gs
adcb
adc
pop
and
dec
push
repnz
sahf
push
inc
mov
rclb
and
testl
push
clc
mov
lods
push
fildl
jnp
shll
les
sbb
ret
add
pushf
stos
adc
ficoml
add
pop
stos
fsts
call
push
adc
xchg
xchg
jge
mov
into
scas
mov
and
cwtl
cld
inc
sarb
js
or
in
ja
jns
data16
push
dec
and
xor
test
insl
jmp
movsb
inc
sbb
cmpsl
ret
out
mov
fwait
lea
xor
mov
cwtl
sbb
enter
or
add
out
fstp
imul
sahf
dec
mov
repz
mov
movsb
xor
dec
and
sarl
jmp
add
in
daa
divl
mov
add
cmpsl
inc
sbb
inc
sbb
imul
dec
pushf
xchg
rcrb
jge
les
push
stos
push
les
into
loop,pn
ljmp
sti
cmp
arpl
mov
jo
xor
add
lret
scas
push
sub
movsb
sub
mov
mov
mov
in
sub
cltd
cmpsl
push
enter
xchg
leave
in
test
or
repz
repnz
test
stc
addr16
xchg
movsl
mov
nop
adc
sahf
push
sub
mov
jl
mov
cmp
jne
and
int3
pop
xor
and
mov
dec
and
out
mov
mov
push
lret
sbb
dec
jb
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
mov
lock
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
cmpsl
adc
dec
test
mov
ja
adc
lahf
popf
in
stc
dec
sub
push
sbb
inc
cld
cmc
mov
jo
jge
gs
adc
fisubl
pop
outsl
les
fistl
movsb
xchg
icebp
dec
aad
mov
fstl
cmp
call
stc
add
scas
jg
fyl2x
xor
inc
stos
adc
inc
mov
or
ret
push
cmp
dec
and
xor
test
insl
std
shll
daa
cmpsl
ret
out
mov
aas
mov
cmp
cwtl
cmp
xchg
enter
inc
push
or
mov
dec
mov
ret
or
pop
rcr
cmpsl
push
xor
fisttps
pop
add
pop
add
cmp
jns
xchg
rcrb
in
sbb
add
addl
push
popa
stos
icebp
ss
xor
mov
xor
sbb
test
stos
add
mov
rorl
jno
push
cmc
fcmovne
pop
loopne
shlb
scas
outsl
jae
add
or
or
xchg
jl
rorl
xchg
mov
scas
sbb
call
jnp
pushf
pop
pusha
inc
lcall
fstps
test
cmpl
mov
mov
jge
mov
loope
test
adc
sbb
or
xor
cmp
cmp
in
jne
popa
mov
cmp
mov
out
mov
jne
dec
xor
bound
cmp
xor
and
push
cld
mov
shlb
adc
inc
rcl
sahf
jb
insl
nop
popf
sbb
xor
popa
xchg
rolb
sahf
iret
cmpsl
mov
adc
push
lock
mov
xor
sbb
dec
sub
inc
xchg
fxch
loop,pn
ljmp
pop
in
je
cmp
lret
mov
xchg
mov
hlt
test
jo
test
jl
or
xor
rcl
cltd
cmpsl
jle
mov
pop
xchg
sbb
in
call
cli
icebp
sbb
and
cli
or
repnz
lret
mov
xchg
pop
adc
add
jbe
mov
aam
inc
cwtl
dec
and
xor
test
insl
jecxz
movsb
inc
sbb
cmpsl
ret
out
mov
aas
mov
sub
out
inc
cwtl
fldcw
xchg
enter
inc
or
cmc
fnstenv
xchg
sub
sub
aad
into
pop
stos
cmp
aaa
call
lock
lock
loopne
lahf
pop
adc
inc
sahf
jb
dec
inc
sbb
adc
pop
es
sbb
lock
ret
inc
mov
sub
mov
aaa
stos
inc
std
mov
xor
mov
neg
shll
jge
push
mov
cmpsl
insb
sub
bound
xchg
add
cmp
jne
lds
or
std
leave
mov
rclb
jno
lds
cld
sbb
lret
fstp
sbb
dec
sti
icebp
arpl
cmp
addl
add
cli
xor
mov
cld
dec
and
je
mov
out
xor
int
jmp
cmpsl
ret
fincstp
clc
aam
lea
xor
mov
mov
sub
sbb
push
les
pop
jne
jge
push
dec
test
sbb
mov
pop
and
call
ret
loopne
inc
adcb
in
popf
jae
ret
xor
hlt
mov
inc
test
mov
mov
xchg
or
ret
inc
sub
add
clc
mov
testl
fstps
ss
sbb
test
test
adc
pop
daa
sbb
aaa
cld
xor
lret
or
mov
scas
sbb
ror
in
add
movsb
stc
fsts
pop
lret
cmp
jge
mov
push
repz
lret
jp
pushf
cmpsl
jb
int
sub
or
cmp
sub
push
mov
lock
movsl
ret
fwait
int
mov
lahf
pop
xchg
mov
jl
dec
ror
xor
mov
inc
inc
mov
ret
inc
sub
push
dec
test
rorb
pop
sub
xlat
jg
pop
mov
cmp
cmpsb
ja
fadds
divl
lds
jg
ret
sbb
inc
pop
mov
insl
xchg
ret
leave
lret
imul
nop
adc
lods
stc
cmp
test
leave
lods
testl
dec
xor
pushf
arpl
xchg
data16
push
ret
cld
dec
adc
add
sbb
cwtl
fimuls
jb
sub
xor
and
xchg
mov
cld
enter
add
fcompl
mov
mov
xchg
sbb
dec
and
xchg
jp
mov
push
sub
mov
out
mov
ret
fld1
std
jge
leave
cmpsb
inc
cltd
xlat
call
int3
add
orl
cmc
enter
sbb
aad
addl
xchg
push
pop
push
mov
lcall
mov
sub
ljmp
ds
cmpsl
ja
iret
rorb
mov
add
cmpsl
inc
sbb
pop
lcall
push
xchg
or
mov
test
push
leave
lahf
push
and
lds
jge
push
in
mov
popf
jmp
dec
jae
arpl
lds
sbb
jae
mov
cmpsb
stos
rolb
mov
lock
pop
inc
jne
push
adc
pop
insb
ja
xor
xor
cmpb
adc
lds
cmp
sbbl
add
or
or
add
sbb
push
cs
cwtl
dec
lods
push
in
movsl
ret
fadd
mov
movsb
inc
daa
popf
fwait
jle
cmpsl
mov
fwait
lea
lahf
aam
xor
push
adc
mov
xchg
jo
mov
dec
nop
lea
lea
rcl
pop
cmp
mov
call
pop
movsl
imul
lds
cmp
jecxz
pop
mov
or
inc
cmp
push
mov
movsl
ret
sbb
xchg
add
adc
mov
push
pop
xchg
or
fstl
pop
dec
sbb
fcoms
ffree
push
adc
pop
or
jne
mov
stos
mov
adc
pop
pushf
jbe
xor
aad
adc
jg
out
cmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
ja
mov
mov
fisttpl
adc
fcoml
xchg
js
mov
and
ret
fld1
jb
cmp
jne
jecxz
movsl
mov
daa
loop
hlt
xor
mov
loopne
mov
popf
lea
add
lahf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
sbb
or
sbb
cmpb
stos
int
sub
dec
xor
stos
dec
sbb
insb
push
push
xchg
mov
mov
mov
je
fxch
push
test
filds
shlb
movsl
jl
lret
rcll
out
stos
adc
ficoml
add
pop
stos
fsts
cmpsl
adc
loopne
jp
cmpsl
sbb
leave
push
xchg
pop
pusha
bnd
insb
push
or
leave
loop
sarb
iret
and
lea
xchg
mov
cld
int
mov
pop
xchg
mov
sub
addb
jle
iret
loope
jb
pop
fsubl
shlb
xchg
fmuls
and
shll
shr
test
pop
movsb
popf
mov
lea
fsts
inc
add
dec
rcrl
adc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jl
jle
mov
es
inc
sbb
pop
sbb
mov
imulb
les
jnp
cmp
fisubrl
xor
mov
sti
cli
pusha
std
movsl
dec
push
dec
pop
in
dec
add
cmp
mov
add
or
or
pop
dec
fistl
xchg
xor
pop
cmp
sbb
jmp
scas
inc
fwait
push
shlb
stos
addl
add
add
sbb
dec
and
je
cmp
pop
test
out
xor
int
decl
ret
fld
clc
xor
in
sahf
aam
jl
xchg
or
fistpll
push
or
out
jne
js
popa
in
mov
test
incb
jnp
adc
add
mov
jno
iret
sbb
mov
adc
jbe
adc
stos
imul
mov
imulb
sbb
push
and
imul
adc
sahf
aaa
push
negl
fs
sarl
pushf
in
jae
inc
fadds
cmp
cmp
mov
mov
mov
test
pop
dec
rol
fcmovnu
cwtl
mov
js
lds
inc
and
lahf
scas
mov
mov
xor
jo
jb
or
pusha
sarb
sub
push
mov
cld
into
mov
sub
mov
xchg
cltd
scas
mov
xchg
push
adc
jecxz
inc
rcll
sbb
xchg
fcoms
lret
mov
fsubs
sbb
out
movsb
cltd
xlat
test
xor
ret
loopne
inc
adcb
in
cltd
pop
push
add
enter
mov
cmp
mov
mov
sbb
nop
pop
ret
cmpsb
mov
cs
xchg
push
push
pop
push
jnp
rcr
sbb
sub
lahf
pop
stos
fs
movsl
stc
dec
push
pop
ljmp
rcll
mov
or
cmp
dec
mov
sbb
jle
cmpsl
or
push
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
adc
xor
pop
xchg
lahf
or
sbb
dec
and
je
mov
out
xor
push
gs
mov
mov
in
mov
jne
aad
sub
pop
rcll
addb
pop
xor
mov
push
inc
xchg
sbb
cmpsl
or
dec
dec
lcall
jg
pop
mov
cmp
cmpsb
ja
clc
in
popf
pop
aas
push
fcoms
jns
pop
mov
adc
imul
sbb
jg
enter
mov
jno
dec
mov
stos
call
or
mov
jae
sbb
inc
jno
movb
mov
push
jle
fstpl
dec
pop
xchg
sbb
hlt
cmp
ret
int
lcall
lods
mov
mov
and
or
pop
mov
and
lahf
scas
mov
mov
jmp
jo
jb
into
imul
cmp
sbb
add
sub
push
mov
loopne
mov
das
xchg
mov
cwtl
outsl
mov
call
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
xchg
sbb
sahf
sbbl
int
div
mov
imul
cmc
fsub
hlt
xor
sti
jne
pop
sbb
add
mov
jbe
adc
mov
sbb
pop
inc
test
inc
jb
and
into
mov
aaa
stos
push
insb
ror
sbb
inc
lahf
arpl
sbb
sub
and
mov
push
out
adc
pop
mov
inc
push
sbb
xchg
jge
jae
outsb
in
add
addr16
rorl
push
fisttpll
mov
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
in
xor
sbb
mov
sbb
push
and
xchg
jp
into
popa
test
sub
movsl
pop
pop
xchg
inc
rcrb
cld
pop
fdivrl
ficoml
xor
dec
xchg
test
push
or
inc
cmpb
jecxz
xchg
ret
push
xchg
sti
mov
stos
shr
or
lea
pop
movsl
imul
mov
fmuls
movl
inc
mov
mov
jbe
adc
leave
mov
sbb
mov
sbb
sbb
nop
cmp
mov
jnp
inc
in
lods
dec
sbb
lahf
movsb
fstps
sbb
call
push
xchg
push
test
sub
push
sbb
lret
or
inc
jns
dec
rcr
xchg
and
pop
test
lods
inc
sbb
scas
in
dec
mov
dec
loop
xchg
adc
xorl
aad
add
insb
ds
mov
lods
push
testl
and
jp
xchg
push
insb
pop
mov
clc
cld
push
jecxz
inc
cltd
enter
loop
je
cmp
dec
mov
push
adc
pop
and
orb
sub
popa
pop
mov
sbb
movsl
dec
sub
mov
repz
std
fsubl
data16
lret
hlt
movsl
mov
pusha
mov
cmp
and
mov
lret
pop
xor
pushf
cmp
xor
in
fstpt
mov
dec
pop
fnstcw
out
jae
arpl
repnz
sbb
sub
or
imul
xlat
ficompl
fnsave
inc
movsb
pop
add
jno
in
push
pusha
mov
jmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
dec
xchg
or
dec
sub
xchg
mov
xchg
sbb
inc
cli
jnp
jecxz
cmp
add
fwait
lea
cld
and
and
push
xchg
enter
aam
sub
jne
movsb
popf
push
mov
shl
mov
inc
arpl
int
jns
add
iret
inc
xor
out
mov
cld
or
or
jo
lock
aas
mov
mov
int3
mov
movsl
or
adc
sub
ljmp
mov
inc
fstpt
push
cmp
lcall
jl
orl
pop
rcl
xchg
mov
mov
jno
mov
cmc
pop
test
iret
inc
sbb
scas
fcomi
js
push
popf
scas
inc
movsl
fsubrl
dec
xchg
decl
addl
add
push
mov
fwait
xor
cmpsb
xchg
das
push
lcall
cmp
call
xchg
pop
jmp
call
int3
pop
sub
in
hlt
mov
cmc
xchg
mov
cltd
jne
dec
mov
imul
lods
sahf
dec
mov
inc
add
pop
arpl
int
mov
lods
pushl
xchg
mov
call
jp
popa
mov
cltd
test
inc
sbb
lock
hlt
mov
jl
xor
movsl
ret
insb
test
iret
add
stos
jb
stos
jecxz
jne
push
and
sub
cmc
fistl
adc
stc
mov
mov
test
inc
sahf
cmp
mov
data16
inc
lcall
gs
lods
cmp
cli
mov
mov
stos
bnd
insb
push
or
sarb
and
lea
ret
mov
fmuls
test
shl
iret
aad
popa
xchg
lods
sti
jmp
push
inc
popf
lret
mov
fnstenv
xorl
out
mov
add
in
pushl
mov
popa
in
mov
test
mov
mov
in
cmp
lds
bound
jecxz
popa
popf
rcrb
addr16
fwait
jge
xorb
add
xor
sbb
fs
add
adc
lret
pop
push
mov
mov
ljmp
cli
xchg
test
jae
xchg
add
sbb
fisubrl
add
push
sub
mov
in
pop
test
xor
sub
pusha
mov
sbb
mov
xor
push
or
std
jle
cmp
or
add
xchg
int
stos
xchg
xchg
jecxz
pop
cmp
xchg
mov
pusha
outsl
lahf
ret
pop
mov
cmpsb
mov
out
or
aam
inc
ret
sahf
push
or
int
push
mov
rcl
mov
sub
or
mov
mov
adc
adc
push
enter
xchg
lret
jecxz
add
mov
daa
push
jbe
xlat
fmull
ret
and
xchg
dec
sbbb
jne
lds
push
clc
sub
adcb
nop
dec
xor
fisubrl
mov
cld
stos
dec
pop
insb
fcomps
mov
lret
jge
mov
stos
lds
stc
add
xchg
fimull
xor
movsb
scas
push
pop
mov
lods
push
pop
sbb
popa
mov
cld
or
add
out
mov
sbb
addl
decl
sub
sbb
pop
repnz
repnz
mov
xlat
insb
fst
sbb
mov
sbb
adc
jecxz
fisubrl
xor
clc
push
sbb
jae
cltd
cmp
and
test
cmc
hlt
mov
or
mov
fimull
add
je
imul
inc
inc
dec
ret
std
xor
pop
adc
imul
inc
lret
cmp
lret
mov
ficompl
fisubl
idivb
aam
dec
pop
add
cmc
jae
fistl
int
into
pushl
movsl
xchg
mov
stos
fstps
das
xchg
fisttpl
stos
xchg
sti
adc
dec
ds
repz
xor
movsb
push
mov
jne
mov
push
clc
xchg
rorb
jmp
lds
sub
sbb
dec
jns
stc
mov
sbb
test
or
imul
insb
mov
push
inc
fisubs
out
ror
pop
in
jb
std
stc
imul
jb
push
sbb
or
sub
cmpsb
add
xchg
mov
std
and
push
xchg
mov
add
inc
int3
inc
jle
adc
sar
mov
jge
ret
cmpl
adc
or
pop
dec
and
or
test
mov
jo
lret
xchg
dec
and
loop
dec
fwait
jnp
leave
test
test
dec
sbb
push
dec
into
sbb
xchg
into
arpl
sbb
int
push
cmp
sbb
subb
hlt
sbb
cmp
add
pop
jae
mov
movsb
push
aad
lret
out
mov
jge
adc
and
jae
jg
mov
fs
xcrypt-cbc
cmpsl
xlat
add
inc
pop
mov
jo
jmp
out
les
sbb
inc
inc
test
int3
ja
mov
fldcw
cmpsb
jnp
call
inc
xor
jb
sbb
mov
xor
dec
inc
mov
fistpll
test
mov
fisubrs
xchg
pop
mov
and
pop
cmovno
adc
cmpsl
les
jno
xchg
sub
jns
xor
jmp
and
add
jg
pop
rcl
push
fwait
mov
jne
mov
jne
jno
fistpl
lcall
mov
pop
pop
pop
adc
push
mov
ficoml
subl
push
jl
cmp
test
add
pop
jl
pusha
test
ficoms
sbb
jo
mov
pushf
repnz
cmp
or
mov
inc
pop
ss
add
jge
xchg
sub
xor
jae
inc
and
mov
aaa
adc
or
cmp
sub
xchg
dec
pop
mov
cwtl
xchg
enter
cwtl
jns
sbb
loop
cmc
or
push
adc
jle
pop
sarl
pop
adc
sub
adc
jmp
ja
sbb
mov
ret
mov
jnp
lahf
shrb
test
hlt
scas
jo
dec
cmpsl
jg
mov
lds
stc
and
leave
sbb
add
mov
in
fistps
pop
add
jmp
dec
in
push
mov
xchg
fcoms
shlb
xchg
adc
xchg
insb
mov
rcr
dec
dec
pop
jb
xor
mov
fcoml
jle
cs
sub
cmp
pop
out
and
mov
or
cmp
jnp
daa
push
or
pop
ret
cltd
xor
test
popa
push
fidivrl
cli
xchg
scas
call
sahf
cltd
call
add
std
mov
sbb
push
cwtl
push
or
fisubrs
cmp
orl
or
sbbl
icebp
pop
adc
push
sahf
add
jl
pop
rcr
repz
cwtl
in
and
sub
cmpsl
fwait
aaa
hlt
cwtl
xor
ret
add
xchg
mov
jno
fs
mov
fistpll
leave
test
stos
test
and
in
inc
in
mov
xchg
test
sbb
mov
or
stos
in
lret
sub
sub
jp
cmp
cmpsl
pop
cwtl
jp
das
loop
repz
jns
jge
mov
andl
mov
lea
xchg
hlt
dec
sarb
push
add
mov
push
jns
enter
cmp
enter
fdivrs
jge
shll
inc
ret
cwtl
cltd
and
cmp
test
sbb
mov
cmp
xor
push
loop
stos
jns
test
dec
push
mov
iret
ret
pop
stos
or
scas
fsts
dec
test
lock
xchg
and
or
mov
testb
mov
xor
ja
les
jp
mov
repnz
int3
loop
scas
mov
fucom
mov
jbe
arpl
mov
add
pop
or
inc
sbb
adc
cli
inc
aad
cmp
sub
xor
xchg
xchg
or
pop
xchg
ja
mov
jno
shrl
fstpt
pusha
repz
cmp
and
adc
inc
mov
clc
mov
adc
dec
test
dec
lcall
stos
adc
lret
movsl
ret
xchg
sub
sub
jmp
into
rcr
out
cmp
fidivrs
fcomi
dec
mov
add
movsl
int3
pop
sub
hlt
mov
test
out
inc
pushf
mov
in
cmc
mov
es
out
int3
add
ret
gs
xchg
mov
add
clc
add
cmp
lret
lock
inc
sbb
aad
pusha
mov
mov
imul
add
pop
inc
adc
xor
xor
cmp
push
insl
sub
fisubl
test
mov
lret
pop
out
movsb
mov
ja
leave
cmp
jae
rcrl
mov
jo
jge
mov
add
xchg
jl
loopne
xchg
stos
inc
mov
mov
or
fstl
pop
cld
add
clc
repnz
scas
pop
popf
sbb
std
and
test
or
imull
fs
aam
pop
mov
sbb
xor
xchg
lahf
mov
pop
out
push
and
outsl
popa
lcall
cmp
cmp
sbb
out
cmpl
dec
sbb
dec
mov
push
cmp
clc
jmp
ljmp
sbb
dec
call
pop
movsl
jmp
ljmp
push
inc
out
jnp
mov
adc
xor
or
ret
dec
mov
imul
push
test
cwtl
xor
mov
fucom
cli
mov
aaa
sub
leave
mov
dec
data16
pop
xor
inc
scas
ja
add
push
fcoml
lcall
pop
test
lods
jno
pusha
and
pushf
pop
or
fwait
leave
jmp
rcrb
add
inc
mov
sub
mov
xchg
sub
and
push
mov
push
jns
or
sbb
fsubl
insl
repz
cmp
and
xor
test
shrb
mov
daa
popa
mov
sub
fbld
mov
call
pop
lret
xchg
add
iret
push
dec
and
sti
mov
jns
out
pop
adc
add
add
pop
inc
test
pop
pushf
dec
and
rorl
pop
iret
or
sti
push
test
ret
mov
leave
fucomp
mov
rcr
repnz
stc
mov
mov
cmp
adc
xor
popf
lock
jne
vsubss
add
stos
iret
xor
loope
pop
sub
pusha
mov
jmp
icebp
xchg
fwait
xorb
push
andl
stos
jle
mov
pop
ds
push
xor
mov
xor
dec
mov
pop
mov
lahf
out
mov
in
mov
xchg
enter
push
mov
call
fisttps
shrb
mov
daa
popa
mov
sub
call
pop
mov
pop
test
cmp
cmpsl
lret
xchg
push
cltd
mov
lock
ror
pop
mov
iret
inc
mov
test
xor
cmp
mov
call
push
lods
push
push
cli
das
shlb
push
cmc
test
stos
es
jae
mov
in
jmp
rcrl
jno
add
and
mov
pop
xchg
out
gs
nop
leave
mov
jnp
xchg
or
movsb
loop
xchg
loop
inc
fsubs
dec
icebp
leave
jmp
xchg
sbb
mov
mov
inc
mov
out
mov
push
movsl
jp
cwtl
call
jp
fcomps
loope
pop
cltd
lods
lea
lds
sbb
cwtl
jge
mov
hlt
xor
cmc
lds
jns
fsubr
mov
pushf
pop
mov
cmc
or
cmp
pop
je
lods
mov
mov
nop
fstpl
dec
pusha
lahf
jnp
popa
mov
add
mov
or
or
and
xchg
xor
lret
dec
stos
clc
mov
push
sub
rorl
lret
imul
xchg
inc
jge
dec
sbb
mov
mov
icebp
add
sbb
mov
mov
cmp
es
jge
stos
mov
push
push
inc
pop
jnp
dec
lods
push
sub
arpl
or
pop
pusha
pop
test
sub
jns
js
inc
int3
cmp
sub
jl
dec
mov
add
arpl
sbb
addr16
jns
leave
repz
insb
je
nop
cmpsb
test
sub
inc
or
and
mov
jb
cmp
in
jne
cmpb
jecxz
mov
shr
mov
mov
fsubrs
pop
or
xchg
repz
inc
jb
mov
jns
clc
mov
or
mov
add
mov
cmc
sub
xchg
mov
fadd
xor
mov
popf
pushf
or
nop
loop
mov
rcl
mov
pop
mov
lahf
mov
lret
fucomp
mov
int
test
mov
mov
sbb
xchg
dec
mov
cmp
leave
or
into
stc
pop
stos
xchg
push
adc
push
mov
test
mov
cmpsl
sbb
jmp
scas
inc
fwait
pusha
loop
or
push
cwtl
mov
sbb
add
pop
mov
or
aam
pop
xlat
xor
test
insl
icebp
mov
pop
fidivrs
adc
bound
dec
sbb
ficompl
xchg
cwtl
mov
dec
pop
or
int
imul
sahf
dec
mov
xor
imul
int
sbb
adc
jle
mov
mov
fists
add
jp
xor
cltd
adc
mov
cmpsb
and
mov
test
and
dec
mov
in
loop
xlat
stos
test
fwait
dec
lods
push
adc
scas
aad
jne
scas
sbb
aaa
lret
ffree
pop
pusha
daa
push
dec
mov
pushf
fnstenv
fimull
sbb
das
sbb
lea
mov
push
push
inc
test
jle
cmp
sbb
arpl
arpl
cli
in
outsb
js
lcall
or
leave
cmp
or
xchg
add
dec
out
addr16
outsl
xchg
mov
fisubrs
pop
jge
adc
ret
mov
fwait
lds
and
sbb
mov
xor
inc
enter
xchg
jb
je
adc
ja
je
pop
daa
popa
lods
test
sahf
jge
and
inc
inc
lret
sbb
and
xor
mov
mov
fimuls
add
sbb
mov
cmpsl
fcomps
addb
ds
pop
pop
cld
int
les
xchg
xchg
int3
lret
movsb
pop
pushf
inc
stos
cwtl
adc
fwait
je
ror
add
ret
lock
cmpsl
mov
mov
popf
sbb
in
dec
or
ficomps
les
popa
in
cmp
or
dec
cmpsl
subl
push
jl
ss
mov
aaa
jp
xchg
dec
int
pop
jns
pop
pusha
mov
pop
mov
bound
fwait
out
test
das
rcrl
push
mov
clc
jb
mov
roll
push
pop
mov
sub
call
xor
lahf
cmpsl
lock
or
out
pop
jl
push
xor
fsubrl
addb
inc
mov
testl
daa
adc
iret
sub
loope
shlb
mov
pop
or
jo
xor
test
repz
sti
mov
sbb
outsl
cmp
popf
sti
arpl
popf
out
test
dec
jo
ljmp
pop
xor
lcall
dec
jge
leave
test
lret
loop
loope
push
repz
lret
sar
cmp
fnstsw
stc
mov
divb
imul
mov
xchg
in
clc
daa
sub
hlt
xor
gs
mov
inc
mov
loopne
inc
mov
and
mov
repz
ret
cmp
xlat
in
pop
jl
test
mov
int
and
lds
cmp
dec
push
lret
movsb
inc
inc
popf
stos
add
xlat
imul
sbb
xchg
mov
aaa
imul
mov
daa
adc
inc
dec
sahf
dec
test
int
int3
lcall
adc
sbb
inc
into
pop
pop
or
pop
push
shll
cmp
jp
ja
lods
mov
or
mov
aad
movl
sbb
nop
mov
scas
cli
mov
aad
mov
out
and
pop
cmp
xchg
test
dec
xlat
cmp
push
sbb
or
ret
roll
xchg
loopne
xor
mov
xor
stos
outsl
jno
leave
mov
pop
addr16
sbbb
inc
or
push
mov
pop
maskmovq
add
sub
inc
cwtl
jle
hlt
imul
sahf
adc
jbe
cli
mov
out
in
dec
cmpsl
ret
sahf
mov
cmp
aaa
popf
adc
jb
jns
xchg
jp
mov
lahf
jl
out
mov
sarl
push
cltd
lret
inc
mov
mov
in
call
and
or
push
inc
shlb
and
ret
or
inc
iret
pop
mov
pop
adc
fcomps
adc
inc
add
shl
cld
shll
loop
shlb
dec
mov
sbb
imul
inc
leave
test
scas
ljmp
push
dec
into
and
lahf
cmp
xchg
test
dec
data16
xor
in
es
fisubl
stos
jecxz
sub
adcl
inc
pop
push
les
jge
push
push
fadds
repnz
scas
je
data16
sti
sub
push
mov
mov
cmpsb
incl
adc
mov
adc
mov
in
inc
push
cwtl
and
cld
out
mov
divb
dec
push
and
je
aam
push
loop
cltd
add
sbb
fs
dec
shlb
aaa
mov
and
arpl
repnz
pushf
mov
push
pop
and
pop
out
clc
ds
jecxz
es
cltd
sti
adc
sbb
cli
cmpsl
mov
repnz
pop
adc
push
xchg
jl
push
stos
jmp
repnz
stos
or
scas
mov
jns
out
mov
cli
les
adc
cwtl
mov
ret
xor
movsl
or
pop
lret
push
push
or
fwait
pushf
xchg
cmpsl
sub
mov
mov
xor
cs
and
scas
inc
cld
mov
adcl
popa
pop
inc
adc
add
xor
insb
scas
sbb
loop
pop
hlt
lret
enter
test
xchg
sbb
nop
mov
xchg
and
outsb
add
mov
mov
hlt
js
cwtl
or
div
pop
pop
mov
dec
push
mov
or
nop
ret
popa
in
shlb
mov
pop
jle
cs
xchg
pushf
xor
mov
call
fwait
cli
mov
push
mov
add
xchg
inc
pop
sbbb
mov
fucomp
push
int
xor
adc
movsb
test
jns
sub
cli
lret
mov
xor
pop
ds
bound
sbb
icebp
insl
sbb
inc
xor
addb
xchg
imul
push
nop
fwait
xchg
xchg
shrb
test
fidivs
sub
xor
ds
xor
cmp
and
std
or
pop
inc
xchg
sub
cmpsb
sbb
jmp
test
daa
mov
inc
mov
dec
inc
pop
movsl
cmp
sub
call
cmpsb
lds
push
in
xor
xchg
cmp
pop
push
popf
mov
and
inc
add
mov
cwtl
cmp
subb
cmc
mov
in
ja
mov
call
fimull
mov
jae
or
xchg
in
dec
or
movsl
inc
jl
adc
jbe
add
into
lds
inc
and
sti
or
aam
enter
lock
add
aad
test
and
and
mov
mov
cld
std
subl
je
push
pusha
les
cmp
add
rorl
xchg
ficoml
mov
sarb
or
and
and
or
pushl
sub
ss
popf
jp
mov
xchg
cmpl
pushf
cmp
rclb
dec
ss
dec
xor
jp
or
push
lods
xlat
push
fdivrl
out
mov
xchg
ds
aam
nop
out
mov
and
jb
and
stc
xor
sti
lea
fisubs
push
hlt
mov
das
jge
out
sbb
pop
adc
rclb
mov
sbb
mov
call
repz
xchg
cwtl
clc
lret
or
pop
xchg
mov
sub
add
sbbl
lcall
nop
dec
rclb
cli
test
pop
pop
cld
test
imul
fisttps
dec
popf
lret
mov
dec
sub
add
push
or
leave
or
test
movsb
adc
addr16
fwait
lods
pop
mov
add
push
xchg
arpl
out
push
dec
hlt
sbb
mov
loopne
add
dec
mov
cltd
fidivrs
filds
mov
push
xrelease
inc
sbb
push
gs
jle
ret
fld1
jb
cmp
popf
fwait
mov
push
or
adc
jg
adc
shl
dec
fsubr
mov
pusha
xor
adc
pop
in
ss
mov
hlt
add
mov
sbb
arpl
out
adc
mov
and
iret
inc
stos
imul
test
mov
push
lds
pop
test
movsb
sbb
mov
mov
mov
int
dec
popf
into
arpl
shll
aam
daa
sbb
xor
in
xchg
aad
sub
aas
push
cmpsb
push
push
sbb
jae
mov
push
test
and
inc
fistps
sahf
inc
pusha
lahf
jmp
jmp
xor
fwait
ljmp
scas
popa
or
push
mov
push
sbb
add
inc
les
les
add
adc
jge
ret
push
imul
mov
cmp
lea
iret
cmp
pop
out
inc
cmp
aam
cmp
mov
and
jae
cmp
or
movsl
repz
addb
xorb
cmp
adc
std
popa
push
and
stc
out
ja
rorb
mov
dec
leave
xorl
mov
dec
mov
jbe
add
jno
mov
sbb
mov
sbb
push
jp
cld
lods
mov
movsb
les
xor
add
dec
and
add
cs
cmp
dec
inc
mov
inc
fstpl
loop
mov
xor
xchg
dec
popfw
sahf
sbb
cmp
sub
push
nop
ja
mov
sti
and
cmpl
add
cwtl
data16
dec
aam
ficoml
stc
sub
add
jmp
int3
out
ja
stos
cmp
call
lods
data16
popa
rcrb
dec
inc
cmp
jge
ss
enter
jl
out
stos
jp
hlt
dec
mov
lahf
or
rcrb
cmp
inc
std
jo
add
arpl
int3
push
pop
lods
pop
call
cmpl
pop
and
fwait
outsb
mov
mov
add
gs
rcrl
repnz
negb
mov
sbb
test
mov
cli
sub
aaa
imul
stc
xor
sbb
cmpsl
xchg
test
stos
pop
xchg
test
ss
pushf
stos
lds
aad
inc
sbb
fildll
fisttpll
jbe
mov
jno
aad
rorl
xchg
fwait
test
xor
push
int
repz
rclb
inc
aam
js
pop
add
mov
xchg
sub
sbb
cmp
xor
call
add
call
sub
gs
out
rcll
add
push
pop
xor
popf
pop
pop
shr
mov
mov
xor
mov
subl
rcr
mov
mov
test
xor
cld
add
mov
flds
pop
or
das
ljmp
mov
or
jmp
lds
jns
aam
cli
lods
jmp
jae
sbb
push
cld
mov
mov
in
bound
ds
xchg
pop
mov
or
add
push
pop
mov
ljmp
push
clc
push
out
pop
pop
mov
orb
mov
push
ja
pusha
xchg
inc
and
xchg
sbb
xchg
push
xchg
movsl
in
in
dec
fcmovbe
mov
jl
fs
jle
flds
cwtl
out
test
dec
xchg
mov
outsl
xchg
add
orb
fwait
repz
jne
mov
and
push
int3
daa
in
dec
es
test
insl
lea
popf
xchg
mov
mov
lcall
cmpsb
divb
xchg
lahf
iret
fucomip
clc
cmp
jb
fwait
pop
in
jns
repnz
add
mov
dec
shlb
pop
dec
icebp
cli
sub
inc
sbb
mov
pop
stos
push
aad
test
push
cmc
mov
mov
push
inc
rcr
stos
cmp
stos
fcoms
les
cld
xor
test
xchg
dec
xchg
fwait
xchg
pop
or
mov
pop
test
add
inc
test
jmp
pop
aad
and
popf
cmp
add
stc
adc
mov
rcrb
fldenv
jmp
jmp
aam
repnz
jb
out
stc
fcomps
into
fsub
ret
adc
leave
adc
pop
call
scas
gs
imull
rcl
andl
inc
rcr
hlt
xor
jmp
mov
add
or
mov
inc
lcall
cld
stos
add
scas
inc
pop
aad
lods
xor
mov
xor
adcb
xor
mov
mov
ss
mov
out
cmp
add
pop
das
and
movsl
xor
pop
or
repnz
push
cmpsl
adc
mov
sbb
das
lret
es
xor
dec
in
gs
sahf
adc
xor
mov
mov
pop
xchg
or
and
jl
shrl
lods
pop
test
mov
pop
call
shlb
sub
xchg
xor
retw
inc
xchg
xchg
mov
test
mov
bound
jg
iret
in
jle
cld
addb
sti
movsl
mov
and
pop
pop
dec
cwtl
xchg
and
sub
push
fwait
jb
inc
sbb
mov
sbb
jns
add
mov
insb
or
rcll
adc
ret
xorl
mov
jp
pop
test
jle
incl
inc
xor
mov
sub
add
and
inc
pop
and
je
xchg
sbbb
lock
jle
lret
inc
push
insl
sub
fwait
add
fstp
aaa
xor
dec
out
cwtl
aam
mov
test
mov
pop
test
test
stos
vmovupd
pop
sub
xchg
add
jae
sub
cltd
lds
push
pushf
sub
add
dec
ja
out
inc
fwait
mov
negl
shl
push
xor
fs
mov
faddp
pop
rcrw
mov
fists
push
out
fs
push
cli
in
mov
xor
xor
rclb
mov
mov
sqrtps
inc
add
push
lret
mov
sub
xor
cmpl
cmc
hlt
sub
adc
pop
mov
popf
push
bound
in
or
dec
cmp
stos
or
imul
rcrb
cmc
mov
pop
push
push
loopne
shrb
mov
push
pop
mov
imul
data16
xchg
dec
scas
jae
stc
shll
jge
pushf
repz
mov
mov
dec
bound
addb
add
sub
xchg
stos
inc
mov
mov
lds
mov
mov
fucomi
cmc
mov
fwait
leave
jmp
int3
pop
and
or
cmp
les
test
pop
test
or
outsl
mov
xor
popf
sub
pop
fidivl
cmp
shr
test
adc
ja
xchg
enter
or
adc
push
shr
mov
jmp
or
cmp
sti
inc
lcall
push
add
mov
in
lods
hlt
inc
dec
lahf
lret
call
pushf
mov
pop
adc
jbe
add
cmpsl
mov
lock
fistl
pushf
dec
and
pop
sbb
test
jecxz
pop
pop
mov
xchg
dec
cmp
jns
adc
mov
dec
mov
sbb
inc
scas
xchg
stos
jge
mov
addb
cmpsb
faddl
int3
cmp
pushf
mov
rolb
fsubs
dec
icebp
leave
jmp
nop
or
or
cmp
cmp
pop
icebp
lcall
sti
imul
mov
sbb
mov
mov
rcl
aaa
inc
xchg
fldt
dec
mov
enter
mov
inc
inc
adc
gs
cs
aad
test
popf
mov
adc
fstps
jg
imul
stc
pop
stc
sti
mov
imul
sub
mov
adc
mov
mov
adc
rcrb
insb
mov
sub
jns
scas
push
cli
sub
ja
push
cmc
mov
mov
pop
fucomp
jmp
ja
lcall
inc
pop
jae
push
addr16
lock
gs
jl
fistpl
push
shrb
and
mov
js
sub
inc
fwait
pop
sbb
pop
jb
add
mov
jae
or
cltd
cli
jp
inc
cwtl
data16
push
cmp
or
enter
pop
ret
mov
inc
cltd
xchg
test
dec
mov
shrb
sti
lcall
inc
dec
sahf
cmp
jbe
mov
flds
jo
shld
aas
movl
add
mov
movsl
scas
cmp
int
call
add
dec
cli
xlat
jno
sbb
jns
pop
mov
rcrb
sbb
sub
sahf
mov
rorl
sbb
int
imul
dec
mov
lret
popf
xchg
out
enter
mov
dec
bnd
not
ficompl
fnsave
pop
movsb
pop
push
push
mov
mov
sbb
rorb
div
leave
loope
lds
mov
mov
add
addb
adc
aas
inc
adc
and
test
push
cltd
cmpsl
repnz
movsb
mov
lahf
insl
or
inc
rcr
cmpsb
mov
cs
aas
jae
les
jl
rcll
cmp
ret
scas
mov
movsb
jbe
mov
call
sbb
loopne
mov
cmp
lahf
lret
insb
mov
mov
mov
dec
sbb
add
mov
and
or
out
sbb
les
shrl
loope
push
mov
pop
stc
pop
sbb
sub
jb
mov
push
pusha
les
xchg
dec
les
scas
add
xchg
popf
sub
loopne
stos
ret
cmp
push
ret
mov
pop
js
test
aad
jge
jg
leave
jmp
xchg
jge
dec
lods
scas
popa
or
lret
shlb
jge
xchg
sbb
xor
xchg
push
loope
sub
fisubl
jmp
add
sti
sub
fnstsw
dec
add
dec
xorb
xor
xchg
push
hlt
test
iret
adc
inc
cmc
hlt
mov
adc
adc
cs
or
pushf
divb
incb
test
add
in
and
cmc
pop
lock
add
fimull
cli
and
pop
lods
leave
fsubrl
aad
inc
sbb
mov
sahf
lcall
jp
or
cmpsl
dec
pop
inc
sbb
xchg
pop
orl
pop
aad
adc
xor
xor
xor
in
rclb
leave
jnp
dec
inc
pushf
or
cmp
push
lret
jns
pop
adc
sbb
xchg
jge
arpl
cmove
rolb
dec
jno,pt
or
sub
stos
inc
int
jns
cli
jle
mov
ret
lcall
inc
cltd
enter
rcrl
dec
addl
cmpsb
mov
std
xchg
adc
pop
bound
or
push
lea
ss
mov
mov
pop
pop
rol
icebp
jno
test
lahf
jg
jns
add
lods
jo
test
sbb
cmp
lret
add
aam
xor
leave
int
jo
dec
inc
xchg
mov
fists
adc
cli
mov
pop
leave
outsb
in
push
inc
sub
xor
ljmp
and
or
sti
mov
pop
pop
enter
pop
sbb
fwait
lods
ja
int3
in
js
lods
inc
inc
mov
leave
pop
cmp
push
jle
leave
in
xchg
loop
xor
or
cmp
xor
inc
mov
pop
xchg
call
lods
js
scas
ret
push
sbb
mov
push
fwait
pop
cmpsb
mov
out
or
cmp
or
int
aas
inc
dec
dec
mov
ss
dec
mov
into
pop
or
pop
mov
inc
sbb
jno
mov
pusha
lds
enter
xor
sbb
add
fsubrl
xor
divb
fst
addr16
clc
out
data16
sbb
push
dec
ficomps
dec
mov
insb
test
inc
data16
mov
in
test
sub
cmpsl
jne
gs
mov
push
ja
das
xchg
dec
lea
lahf
xor
iret
stc
mov
bound
jbe
pop
js
das
loopne
add
insb
jl
xor
jb
aad
dec
call
xor
add
add
and
adc
dec
int3
pop
fisubl
pusha
insl
add
push
and
cltd
jmp
sbbl
sbb
mov
inc
lea
inc
xor
dec
nop
jmp
loop
pop
cmp
loop
std
fstpl
push
add
xor
shlb
lahf
lret
xor
push
mov
ret
mov
cltd
pop
pandn
push
push
dec
test
test
stos
cmp
rcrb
lcall
xchg
dec
js
pop
lods
mov
popf
ret
popa
repnz
xor
inc
in
push
rorb
xchg
sbb
mov
xchg
cmpsl
leave
lcall
or
and
dec
insb
fdivr
aas
sbb
repnz
fs
jo
jns
js
lret
jl
clc
push
push
pop
jae
jo
rcrl
sbb
pop
test
mov
aad
push
popf
push
movsl
push
cmpsb
fstpt
add
cmpsl
sti
fsubrs
lds
imul
mov
aaa
inc
aas
loop
dec
mov
sbb
jb
movsb
je
dec
movsb
xor
fiaddl
repz
dec
enter
add
sub
fdivrs
mov
sha256msg2
dec
add
cmc
in
cld
dec
out
mov
xor
lret
xchg
add
fsubrl
imull
dec
adc
andb
mov
enter
mov
and
negb
mov
add
add
xchg
imul
scas
dec
stc
sbb
add
mov
test
push
fdivrs
sbb
inc
out
sbb
pop
sub
popf
xlat
jg
mov
bnd
les
test
inc
lret
dec
notb
push
test
movsl
push
mov
mov
ret
cmc
jmp
adc
test
jmp
outsb
xor
mov
popf
popf
imul
and
outsb
and
inc
push
mov
jle
in
mov
iret
stos
shll
xchg
ret
mov
ret
in
sbb
iret
sbb
repz
sti
adc
lret
mov
sti
je
xor
ret
insl
adc
aas
add
mov
js
lcall
mov
xorl
icebp
push
pop
xchg
jo
cld
mov
jno
mov
cmp
xor
xchg
sbb
or
inc
push
sarb
cwtl
sub
in
lcall
iret
xor
mov
cmp
push
cwtl
or
xor
pop
cld
loop
inc
xchg
sahf
aas
cmpsl
imul
shlb
mov
out
rcrl
cmp
mov
dec
cmpsb
push
push
xchg
int
pop
mov
push
mov
repz
sbb
push
aaa
popf
xor
mov
enter
adc
dec
sbb
push
pop
mov
xor
inc
dec
mov
mov
xchg
sar
mov
sahf
xor
xor
xlat
jo
cltd
add
push
in
adc
and
pushf
lret
movsl
mov
mov
dec
lods
fiaddl
cltd
inc
mov
mov
addr16
dec
xor
adc
dec
mov
xor
mov
bound
cwtl
or
add
mov
shrl
xchg
push
loope
cmp
js
add
stos
mov
movsb
into
jo
push
aam
ret
inc
mov
and
inc
std
xchg
fwait
add
push
pop
xchg
clc
xor
mov
mov
hlt
imul
jg
adc
or
pop
fwait
notl
push
daa
enter
pop
pop
jle
fimull
xchg
aas
movsl
dec
fistl
ficomps
xchg
fistpl
stos
into
pop
sub
repnz
mov
add
pushf
andl
mov
shll
movsb
mov
adc
lcall
sbb
jb
jle
and
add
adc
fildl
imul
ret
les
iret
dec
aas
cmc
lds
sub
xchg
ror
xchg
mov
hlt
dec
pop
push
in
inc
pushf
insl
jo
fsts
and
push
cmp
insl
dec
mov
mov
push
repz
pop
enter
xchg
sbb
mov
scas
sahf
mov
aad
mov
sbb
in
jbe
xor
mov
roll
lahf
ret
push
leave
sub
add
rcr
cmp
xor
pop
adc
inc
mov
ret
mov
les
fsubs
stos
xchg
daa
or
stc
add
fldcw
mov
int3
or
mov
je
sbb
shr
mov
fcomps
xor
sbb
add
and
xor
pop
adc
gs
mov
or
repnz
adc
mov
adc
mov
and
iret
inc
sub
jno
mov
outsl
pop
mov
fisubrl
sahf
xlat
mov
fucom
cli
mov
out
lret
movsb
insb
or
cmp
or
lcall
push
stos
adcl
jb
xor
push
loope
cltd
lods
inc
sbb
jle
jp
add
jno
sub
and
leave
or
mov
cmp
mov
add
out
ficompl
test
pop
xchg
arpl
adc
sbb
stos
cmp
jb
xor
cmpsb
mov
out
rcrl
dec
inc
cltd
add
sub
mov
popf
xchg
mov
lret
mov
sbb
pop
sbb
out
dec
mov
in
mov
pop
jno
lods
fwait
lahf
in
imul
jmp
in
fnstsw
cmc
sub
pop
hlt
mov
lahf
sbb
aad
movb
imul
ficompl
fisubl
jne
lret
mov
jne
push
cmc
mov
mov
cmp
shrb
fdivl
cli
push
inc
fildl
sub
pop
push
xor
pusha
aaa
or
es
xor
inc
pushf
cmp
dec
enter
pop
and
sbb
jo
mov
aas
lock
inc
sbbl
out
mov
add
leave
xor
mov
ficoml
sti
and
xchg
lret
movsl
ret
andb
fisubl
lahf
outsl
add
rcl
cmp
icebp
bound
pop
daa
bswap
jecxz
mov
inc
fmul
xor
jmp
cmpsl
mov
push
test
sbb
divb
xchg
out
xor
lods
jmp
stc
ds
scas
paddsw
inc
cmovge
cltd
je
das
dec
mov
shl
xor
cli
fcmove
xor
pushf
dec
and
test
ficoml
imulb
dec
mov
xchg
sbb
mov
addb
cld
lds
popa
mov
mov
insl
mov
stos
mov
or
adcb
sbb
lahf
mov
aad
mov
ficomps
in
in
jns
jo
and
and
pusha
xchg
cmp
cld
jle
gs
or
adc
inc
imul
adc
mov
or
xchg
and
mov
popf
in
out
fwait
cmp
sub
out
enter
or
out
and
in
mov
xchg
filds
mov
push
adc
sarb
mulb
loopne
xor
mov
imul
or
dec
ljmp
inc
inc
sbb
sahf
cmc
sub
mov
xchg
addr16
mov
test
div
test
push
cli
fwait
insb
in
fisttps
or
xchg
mov
popf
lret
push
fsubs
add
sbb
or
addr16
stos
xchg
fistl
fimull
pop
inc
mov
add
fsts
insb
cli
lret
sbb
jge
adc
test
fimuls
xchg
adc
lahf
es
dec
cmp
push
cmc
addr16
aam
repz
sub
mov
xchg
mov
push
xchg
inc
in
mov
jne
cltd
out
jl
out
mov
xor
cmpl
lea
imul
push
pop
pop
push
test
pop
stos
shll
xchg
push
shrd
cmp
and
ds
and
ret
lock
inc
sbb
outsl
xor
sbb
gs
ret
repz
popf
jnp
mov
jb
pop
lahf
outsl
shrb
inc
pusha
fmulp
pop
add
fisttps
dec
rcrl
xchg
mov
pusha
test
sbb
sbb
lcall
fimull
adc
pop
mov
lods
inc
sbb
mov
aad
loope
jg
enter
cmp
add
mov
addr16
arpl
mov
adc
add
jle
test
pop
jmp
popf
stos
ret
jo
push
lea
xchg
inc
and
jmp
mov
mov
pop
jle
mov
mov
int3
loope
cwtl
sbb
cmc
leave
sbb
adc
cmc
fsubrs
popf
xchg
dec
inc
cmc
hlt
mov
lods
lret
add
sub
mov
dec
sbb
mov
in
test
psrlq
sbb
pushf
jge
dec
sub
add
rolb
jl
hlt
sub
loop
xor
mov
lds
mov
rcl
dec
sbb
sub
sahf
cmp
mov
jp
loop
arpl
ss
ficompl
and
enter
test
xchg
dec
xchg
push
mov
push
sbb
subb
sbb
out
pop
icebp
sbb
xor
fwait
leave
cmc
and
adc
jmp
and
add
enter
jle
rcll
outsb
mov
push
fidivrl
push
sbb
sub
mov
jnp
popf
cmc
hlt
std
mov
sti
and
xchg
aaa
imul
inc
popf
pop
outsl
das
fsubrs
mov
jae
sti
je
add
pushf
stos
pop
movsl
imul
lods
jmp
cli
sub
xor
mov
ret
mov
mov
add
test
aad
sbb
fisttps
nop
xlat
xor
inc
dec
jecxz
dec
add
mov
push
sti
insl
mov
sbb
in
sbb
add
mov
fisttpl
imul
fdivs
mov
sub
mov
and
sub
sti
fstps
rolb
jbe
or
js,pt
adc
rol
and
mov
add
cmp
std
insb
or
mov
gs
cmp
cmpsl
sbb
lcall
sbb
repz
xor
test
in
aad
ret
push
xlat
mov
or
lret
mov
js
dec
aad
push
fnstenv
int3
add
popf
inc
xchg
incb
ja
sub
cmp
adc
rclb
dec
jo
stc
sahf
push
hlt
jo,pn
adc
leave
sarb
cltd
inc
sbb
push
scas
xchg
xchg
stos
jl
pop
test
pop
sti
dec
sbb
mov
popf
int3
stc
inc
out
cltd
inc
lahf
popf
in
inc
mov
xchg
mov
push
mov
lods
add
aad
imul
push
ret
or
pop
pusha
inc
inc
mov
sub
sbb
and
jmp
pop
nop
jl
mov
xchg
repz
mov
lret
js
or
cmpsb
adc
popf
push
mov
in
inc
and
cmpsb
fistpll
cmpsl
cltd
shlb
leave
jp
pop
sub
sub
mov
sub
fwait
int
js
pop
mov
pop
xor
jnp
into
pop
or
call
mov
xor
gs
clc
cmp
aaa
inc
xorb
pop
cmp
mov
fldt
sbb
rcll
hlt
mov
idivb
xchg
dec
sbbb
mov
push
mov
mov
mov
sbb
scas
mov
xor
pushf
vpsllq
data16
mov
sbb
jp
fisubrl
sub
stos
std
xor
movb
in
rol
sub
cs
inc
sub
js
inc
fmull
and
xor
rcrb
fwait
add
push
andb
or
xchg
fsubrs
push
mov
mov
mov
push
push
test
in
xchg
call
dec
movsb
popf
sbb
arpl
call
xchg
sbb
daa
jmp
jecxz
and
out
cmc
fmuls
mov
cmc
jae
fnstenv
in
shl
pop
and
pop
or
adc
add
loopne
es
sbb
imul
mov
movsl
mov
lods
inc
gs
mov
cmc
cld
sarb
fs
fcmovnu
pop
or
xlat
dec
sbb
push
test
fsts
stos
inc
xchg
xchg
mov
dec
sbb
punpckhwd
daa
xchg
mov
sbb
adc
and
pop
outsb
sub
sbb
pop
cld
imul
scas
cmpsb
enter
pusha
jle
das
jg
pop
in
adc
out
repz
adc
add
movsb
pop
inc
es
dec
aaa
sbbl
in
dec
aam
fnstenv
dec
jb
jne
mov
mov
test
sbb
sbb
or
dec
jne
cltd
jns
dec
adc
bound
xchg
hlt
mov
daa
dec
dec
mov
inc
iretw
mov
sub
popf
mov
popf
into
add
les
cmp
mov
repz
lds
lret
mov
ja
stos
loop
sbb
or
int
mov
fsubrl
jae
aas
mov
pushf
jmp
xchg
xlat
stos
les
cltd
mov
push
int
mov
mov
fucomp
movsb
mov
clc
sub
into
jo
fnstenv
or
fsubrl
inc
cwtl
imulb
popf
fdivrl
mov
mov
pop
jle
fcoml
jbe
fmull
jnp
xor
push
or
push
insl
pop
adc
cmp
cwtl
hlt
inc
mov
fdivs
sti
adc
ds
push
or
cltd
sub
div
sub
pop
test
add
cmp
popf
adc
adc
sti
xor
fidivrs
jnp
push
adc
pop
sub
dec
mov
xchg
lea
mov
imul
test
jle
arpl
mov
je
loopne
mov
jno
mov
fwait
sub
and
cmp
out
xchg
hlt
test
mov
lds
movl
dec
and
push
stos
mov
ret
and
lret
push
mov
std
inc
lcall
shll
icebp
add
and
sub
jns
adc
or
fistl
jnp
loope
lcall
in
sahf
jecxz
push
fists
mov
xor
adc
cmp
push
xchg
dec
aam
jns
jnp
dec
test
or
jge
cltd
mov
aam
incl
and
jae
inc
shll
ret
lds
bound
pop
xchg
xchg
out
in
or
pop
pop
mov
hlt
je
popf
outsl
mov
adc
ds
mov
in
dec
ret
push
pop
mov
inc
gs
call
mov
lds
cmp
cmp
dec
jecxz
imull
mov
and
or
repnz
jno
clc
lcall
movsl
shl
neg
out
sbb
jns
xlat
mov
mov
mov
push
in
mov
dec
jg
test
in
pop
mov
push
and
mov
add
inc
xor
test
add
sbb
adcl
mov
push
inc
mov
ficoms
cltd
aas
outsb
push
dec
cmc
and
pusha
sub
push
push
sbb
rcr
clc
dec
test
jle
filds
testb
mov
mov
jnp
inc
leave
or
mov
pop
out
xchg
and
sub
addb
or
sub
outsl
mov
sbb
sub
das
popw
mov
lock
push
movl
pop
iret
sbb
jnp
std
fwait
pop
in
fs
adc
push
idivb
sub
lock
jecxz
and
imul
sbbl
xchg
dec
imul
insb
rorl
and
lahf
sahf
sub
pop
cmp
jmp
jnp
sub
test
and
je
inc
in
lcall
jbe
test
mov
lods
andl
cmpsl
pop
mov
pusha
or
icebp
sbb
sbb
rorb
add
xchg
fimuls
add
shlb
dec
je
es
repnz
xor
imul
pop
jns
inc
xchg
imul
mov
add
mov
mov
inc
jge
push
adc
dec
nop
bnd
add
xor
push
adc
repz
adc
pop
jp
arpl
int
lcall
xchg
xor
pop
and
fdivs
sbb
sbb
je
inc
sbb
mov
ret
test
ret
pop
mov
insb
push
sbb
sti
or
pop
testb
pop
dec
imul
cmpsb
pop
mov
jne
adc
mov
addb
mov
and
xchg
push
adc
xchg
sbb
dec
cmp
es
add
fs
lahf
ficoms
mov
stc
movsl
cld
test
mov
jmp
xor
ljmp
xchg
xor
mov
clc
push
mov
sbb
mov
sbb
js
es
and
jmp
lret
pusha
jg
mov
aaa
imul
adc
inc
push
mov
das
jge
scas
sbb
fadds
inc
inc
jns
and
pop
jne
lea
filds
jnp
mov
lock
pop
adc
fcomps
adc
xchg
mov
push
lea
dec
sub
dec
mov
push
mov
pop
stos
fsubrl
mov
into
cs
adc
dec
adc
xor
push
jge
dec
test
jge
dec
divb
pop
stos
xchg
int3
dec
lahf
fldt
ja
cmp
insl
mov
lods
inc
cltd
and
lahf
xor
iret
stc
movsb
les
cmp
andl
cld
jle
inc
sbb
add
daa
push
sub
les
jp
cmpsb
pop
dec
mov
out
dec
pushf
loopne
pop
jnp
sbb
int
aaa
popf
mov
mov
adc
loop
enter
hlt
cmp
daa
jmp
mov
pop
xor
stos
shr
repz
pop
divb
ds
add
fists
inc
mov
jecxz
enter
sbb
mov
sub
hlt
mov
push
xor
lcall
aad
mov
add
lock
pop
enter
jne
mov
mov
and
dec
push
data16
fcomi
sbb
add
lret
lcall
lds
push
cmp
jmp
inc
push
mov
cs
jmp
addr16
adc
enter
mov
idivb
clc
je
pushl
cmp
sbb
test
add
repnz
mov
sub
mov
mov
cmpsl
jnp
or
xchg
sbb
mov
mov
inc
add
xchg
mov
or
enter
jnp
mov
dec
int
mov
mov
push
stc
clc
mov
fwait
pop
loopne
inc
sbb
jae
mov
jecxz
add
sub
in
mulb
rcrl
sbb
leave
dec
pop
xor
xchg
push
jno
add
mov
xchg
xlat
or
int3
add
ljmp
dec
sub
shrb
mov
xor
nop
xchg
mov
xchg
test
pop
repz
mov
out
test
mov
outsl
std
pop
pop
or
mov
leave
loop
cmp
call
inc
pusha
sbb
or
push
add
dec
cmp
loope
movsl
ret
add
xchg
mov
lahf
out
or
clc
jb
sbb
push
push
cltd
enter
mov
adc
jmp
repnz
mov
adc
cmpb
adc
mov
xchg
mov
xchg
sarl
loopne
sti
jo
mov
jns
sti
mov
mov
movsb
adcl
xchg
mov
cltd
jo
pop
adc
pop
xor
imul
sbb
push
sub
shll
mov
sbb
dec
push
add
shll
push
call
fisubl
ljmp
sbb
js
scas
mov
mov
or
lods
jle
jp
jecxz
mov
mov
mov
push
fdivrs
into
scas
lahf
mov
inc
sti
and
xor
dec
mov
add
xor
nop
std
js
sbb
sub
fbstp
out
push
test
sub
aaa
add
inc
push
xchg
out
subl
mov
cltd
xlat
push
int3
pop
sub
test
or
sub
scas
lea
test
sahf
push
test
into
pop
stos
rcr
xchg
ret
iret
dec
pop
mov
popf
idivl
adc
or
sti
mov
dec
or
adc
cmc
mov
cmp
insl
cwtl
mov
aad
inc
lds
mov
inc
arpl
push
es
push
inc
inc
inc
fst
out
sbb
and
rcrl
clc
mov
push
in
push
jl
sbb
pop
jo
push
inc
lcall
rorl
xchg
mov
sbb
jp
dec
pusha
sbb
les
gs
jg
mov
movsb
push
stc
inc
sti
sub
fdivs
inc
andl
push
dec
add
mov
xor
sbb
mov
sbb
sub
mov
pop
popf
cwtl
fisubs
mov
xchg
insb
es
jne
xchg
out
push
mov
jb
rclb
xchg
enter
add
aad
inc
pushf
aas
sub
fsubrs
imulb
or
cmpl
inc
lods
xchg
inc
icebp
sub
mov
or
cmc
lret
hlt
mov
mov
cltd
mov
xchg
ds
dec
push
xlat
cmp
ret
das
sub
mov
add
sub
lcall
lahf
xor
ljmp
stos
stc
dec
sbb
xchg
in
movsl
jge
flds
or
lds
imul
xchg
jb
sbb
mov
aam
mov
mov
sbb
scas
ret
sub
popf
lahf
adc
sbb
xchg
bound
imull
mov
aam
pop
repnz
pop
add
cmc
mov
push
fdivrs
in
mov
or
int3
mov
jge
scas
loopne
xchg
pop
cli
mov
in
cmp
dec
dec
mov
daa
sub
test
mov
ficomps
test
cmp
and
and
out
sbb
in
lods
es
sub
sbb
test
lcall
bound
cwtl
jmp
and
push
dec
iret
push
stos
lods
mov
xor
lret
fmull
inc
and
pushf
xchg
xor
cwtl
dec
pop
pop
push
xchg
pop
imul
addr16
std
repz
mov
dec
std
mov
pop
scas
dec
push
xchg
mov
cli
mov
in
pusha
jmp
popf
in
loope
lock
lods
scas
loope
out
js
mov
adc
popl
rclb
rol
rcrl
jb
mov
jns
push
inc
xchg
leave
movsb
inc
jne
add
pusha
jo
fsts
pop
test
cmpsb
sbb
dec
mov
xor
or
dec
sbb
sub
fdivrs
inc
inc
xor
mov
int
pop
jl
pop
xlat
inc
sbb
jne
mov
mov
mov
movsl
ret
aaa
lods
inc
test
adc
mov
pop
adc
mov
fs
jno
mov
sbb
outsb
mov
test
test
sbb
in
clc
movl
sub
sub
jge
push
pop
imul
stos
or
stos
pusha
gs
fcoml
push
int3
fisttpll
sbb
cmc
outsb
js
std
repnz
out
mov
andl
lds
mov
aam
sbb
dec
int
dec
cmp
and
ja
and
jae
inc
jge
inc
push
int
int
gs
mov
aas
mov
std
jp
inc
bound
jle
xchg
xchg
jmp
cmpsb
in
xchg
dec
pop
mov
sub
fistps
iret
push
sahf
xor
mov
imul
inc
push
adc
pop
cmp
lcall
adc
rol
xchg
fimull
imul
mov
xchg
pop
leave
std
or
lahf
mov
scas
sbb
scas
out
mov
fs
pushf
or
fistps
inc
sbb
cmp
stos
repnz
adc
test
jl
rorl
sbb
add
das
ret
pop
pushf
sub
cmp
ret
pushf
mov
mov
cld
test
inc
pop
inc
xchg
loopne
jg
filds
mov
push
push
mov
dec
pop
std
lock
out
xchg
das
pop
push
out
mov
xchg
in
jnp
push
jns
xrelease
or
cmpsb
std
icebp
sub
push
ljmp
mov
mov
cmpsl
mov
fdivrs
jbe
lods
add
push
push
int
repz
orl
pop
xlat
bound
shlb
rcrb
adc
adc
ffreep
push
add
and
leave
into
enter
bound
in
jns
ror
pop
lret
inc
push
push
out
rcll
pop
push
bound
adc
movsl
repz
and
push
divb
lock
out
aas
cmpb
mov
pop
mov
jbe
cwtl
movsb
mov
clc
test
dec
frstor
scas
xor
and
ret
fistpl
hlt
pushf
mov
aaa
outsb
lret
pop
pop
adc
add
jecxz
lahf
jbe
sbb
pop
rcrl
fidivl
adc
push
mov
xchg
outsb
into
mov
iret
insl
mov
pop
std
call
cmpsb
inc
xchg
jb
shl
mov
lahf
gs
pop
sahf
inc
sub
xor
and
js
pushf
jo
mov
or
xor
or
cmc
iret
jl
dec
xchg
dec
out
mov
push
fcomps
mov
lock
lock
adc
pop
mov
xchg
scas
mov
dec
js
hlt
mov
mov
rcr
push
mov
add
aam
push
pop
push
subb
ljmp
aam
add
imul
mov
inc
movsl
push
fsubs
xchg
test
lcall
mov
pop
test
xor
pop
pusha
xchg
bound
js
test
cmc
or
dec
cwtl
xchg
xor
inc
std
rolb
cmpsl
or
inc
adc
dec
fcos
iret
out
cmc
icebp
cld
sti
add
cmpsl
mov
sbb
mov
pop
mov
mov
lea
pop
adc
enter
fdivrs
faddl
sub
iret
cmp
push
sbb
xchg
or
dec
aam
sub
or
push
sbb
and
lret
jecxz
inc
inc
sbb
inc
sub
add
rcrl
mov
fiadds
sbb
sub
sub
add
push
scas
sbb
scas
mov
cmp
push
scas
popf
aad
xor
push
cmp
jl
jmp
and
mov
jnp
adc
add
add
addr16
rcrl
loope
cmpsb
fstl
cmp
scas
std
stc
in
popf
pop
addr16
xlat
pushf
adc
and
sbb
or
and
jo
or
in
mov
add
inc
stos
adc
xchg
inc
es
mov
fcoms
mov
and
mov
xchg
push
out
fmul
mov
push
sub
xor
cwtl
cltd
and
insl
cmc
mov
xor
cmp
sub
mov
adc
stos
jmp
repz
fistps
dec
lahf
lret
jecxz
movsl
mov
mov
lock
lds
dec
adc
lret
mov
sbb
clc
fistps
fcoml
rorl
or
scas
mov
dec
lcall
sbbl
and
cli
test
push
xchg
ljmp
sub
les
inc
fstp
movsb
push
mov
xor
push
and
mov
pop
scas
cwtl
sub
js
jg
mov
ss
mov
or
pop
jb
add
mov
rcr
mov
mov
mov
cltd
sbb
in
mov
out
push
mov
xor
out
lcall
enter
or
xor
mov
rcll
cmpb
dec
lret
nop
dec
daa
daa
fstpt
sub
fisubrs
in
dec
pushf
xlat
ror
loopne
inc
adcb
push
pop
add
pop
stos
popa
iret
rorb
push
enter
sbb
inc
cmp
jle
pop
push
xor
inc
add
mov
lahf
add
cmp
xchg
push
dec
mov
xor
fsubs
es
push
shll
and
je
adc
xchg
mov
and
mov
fsubrl
mov
xchg
sbb
mov
cmp
push
jne
outsl
loop
mov
push
stc
or
bound
or
sbbl
sub
addl
sub
jmp
popf
sarl
pop
mov
push
mov
in
jbe
sbb
mov
sub
cmpsl
mov
andb
cwtl
dec
inc
push
xchg
imul
jecxz
xchg
xor
or
sub
dec
sahf
xchg
push
pop
cmp
dec
leave
mov
stc
aad
pop
ret
loopne
rorl
cmpsl
jne
xchg
lods
nop
loopne
mov
cmp
mov
lret
jg
fs
adc
sarb
arpl
push
mov
push
dec
mov
and
out
mov
mov
sub
out
xchg
dec
les
adc
ljmp
mov
daa
fcmovne
shlb
adc
and
and
cmp
mov
lret
leave
mov
bound
xchg
push
mov
je
out
idivl
lret
std
sbb
push
pop
or
sti
stc
mov
fucomip
push
test
sub
out
inc
fldl
int
jmp
mov
mov
outsb
aaa
popf
mov
pop
add
jecxz
adc
mov
lret
cmpl
dec
pop
adc
adc
arpl
cmp
sub
and
repz
int3
lret
sbb
out
xchg
enter
loop
mov
roll
fsubrl
sbb
movsl
mov
cwtl
jmp
nop
xor
cmp
push
in
sbb
cld
mov
idivl
mov
popf
arpl
add
sub
mov
or
rcrb
jne
add
mov
mov
ret
add
mov
push
xchg
pushf
scas
push
xchg
mov
stos
aas
lock
adc
jo
das
call
push
mov
sti
lahf
movsl
test
pop
test
mov
ja
fbld
mov
mov
lea
imul
adc
jle
cmp
stos
aas
cmp
or
mov
test
shlb
mov
mov
in
int
fimull
xchg
xlat
jmp
scas
push
pop
adc
cmpsl
mov
dec
stc
scas
std
pop
pop
sub
int
inc
sbb
xchg
sbb
mov
pushf
jmp
shl
stos
les
push
cmp
xor
mov
xor
pushf
mov
pop
inc
std
cmpsl
jmp
jecxz
mov
sbb
sub
sarb
orb
pop
nop
jbe
fidivs
fnstenv
rol
fsts
call
mov
enter
inc
sbb
add
popl
xor
cwtl
dec
cmp
mov
movsl
ret
xor
inc
fsubs
push
lret
mov
jne
lahf
in
cld
mov
pusha
push
pushf
sub
insb
fnsave
push
pop
rorl
int
imul
sahf
dec
je
xor
mov
lods
mov
inc
mov
pop
pop
pop
jmp
clc
ds
mov
clc
dec
or
insb
push
repnz
lock
or
popa
shr
sbb
pushf
dec
and
jno
les
push
test
jb
lcall
fucomp
push
dec
sbb
stos
push
cmp
test
xchg
cwtl
adc
loope
jb
xchg
adc
mov
jns
mov
shl
adc
cmp
lahf
cmp
test
or
loop
std
rcr
inc
stc
xor
add
fldl
mov
cli
testb
repnz
out
jle
fistps
jno
dec
push
fimuls
std
inc
into
cmpsb
iret
xchg
fildll
fisubrs
insb
jb
push
fidivs
int
push
and
jle
inc
gs
pop
test
out
push
aad
arpl
adc
cmp
mov
sub
pop
xor
and
cmpsl
cmp
loope
push
iret
ret
mov
pop
adc
xchg
inc
sbb
mov
mov
adc
mov
jg
cmpsl
mov
adcl
mov
dec
and
adc
test
and
dec
stc
jne
dec
out
fildll
jg
orb
lret
cmpsl
sti
scas
mov
sub
inc
movsl
out
xchg
push
cmp
mov
mov
stc
pop
or
sub
push
xlat
outsl
loop
mov
pushl
inc
bound
jmp
pop
mul
orl
sbb
js
pop
xor
jp
sbb
neg
out
adc
mov
push
lods
mov
out
sbb
cmp
jecxz
ljmp
mov
sub
jge
xlat
push
mov
adc
lret
push
mov
and
mov
shlb
mov
mov
clc
inc
or
inc
jl
sub
dec
xlat
jne
adc
arpl
cld
inc
or
push
cwtl
lret
int
cmp
dec
adc
fbld
lret
inc
sub
adc
out
or
ljmp
loop
pushf
or
add
aam
iret
mov
mov
pop
fldt
sub
mov
ja
dec
inc
lcall
cmp
push
mov
mov
ficomps
cmp
sbb
in
sbb
aas
cmpsl
adc
aad
pop
mov
rolb
fists
mov
inc
lcall
das
mov
outsb
add
loope
fnsave
popf
leave
pop
enter
enter
and
out
jecxz
inc
push
data16
push
dec
lea
push
mov
mov
add
push
sub
xor
loopne
xlat
mov
inc
repz
dec
and
jne
pop
dec
aaa
push
lret
ret
movl
andl
dec
pop
push
lods
add
adc
lcall
push
lret
fnsave
dec
mov
in
adc
insb
push
xor
pop
stos
cmpsl
pop
outsb
fstps
sub
movsl
xchg
dec
shrl
push
mov
sti
pusha
push
cmp
mov
in
popf
dec
inc
sbb
jmp
lds
jnp
push
hlt
fcompl
call
in
inc
sub
cmp
out
mov
icebp
dec
ret
stos
push
mov
aaa
xchg
mov
and
pop
mov
outsb
bound
lahf
pop
fdiv
pop
jb
fwait
out
push
into
out
popf
mull
sub
cmp
or
int
mov
mov
stos
lods
sahf
neg
mov
stos
rcrl
pand
inc
pusha
je
pop
jns
inc
fists
or
inc
rcl
fucomp
pop
cmp
scas
push
adc
pop
movsl
push
dec
sbb
lock
inc
sub
cmp
dec
mov
sub
cmp
push
ret
mov
xor
sub
cltd
push
dec
mov
roll
pop
idivb
ret
inc
and
addb
icebp
pop
pop
pop
push
jmp
mov
fdiv
mov
stos
imul
rcrb
popf
push
pop
jecxz
jmp
repz
into
xor
addl
add
xchg
int
inc
mov
mov
push
ljmp
fwait
imul
outsl
mov
dec
add
pop
mov
sbb
data16
push
inc
sbb
lret
ja
fsubrs
mov
shrl
mov
sbb
inc
cmp
mov
loopne
cmp
lcall
iret
fwait
decl
dec
cltd
mov
ss
xor
nop
iret
bnd
push
cwtl
loope
sbb
stc
nop
jno
mov
into
stc
mov
popf
xor
cltd
push
cmc
cmc
mov
popa
mov
xchg
add
sbb
cmp
aad
fsts
jp
or
jns
rorl
stos
fcmovnb
adc
mov
sbb
fdiv
and
sbb
scas
jno
sub
int
mov
test
mov
mov
jecxz
mov
ror
loop
jp
mov
out
test
xchg
jp
mov
insl
out
xchg
aaa
xchg
sbb
push
ret
out
fwait
cmp
out
les
sbbl
cltd
xor
sbb
add
jbe
std
cmpl
xchg
repnz
pop
das
or
adc
add
cmp
fsubl
loope
mov
xchg
jae
sbbl
mov
adc
imul
xor
fnstenv
dec
sbb
mov
test
adc
xchg
mov
clc
test
mov
bound
push
cmp
cmpsb
cmp
mov
cli
xor
ficompl
add
lret
push
jl
mov
in
jb
loope
shrb
push
and
test
push
jns
jle
inc
cli
or
mov
pusha
out
or
pop
jnp
in
jmp
cld
lret
mov
pop
push
sub
idiv
pop
ja
pop
xlat
fsubl
aaa
mov
fdivl
push
test
rcr
sbbl
loopne
push
lds
xor
rorl
push
xor
add
inc
jns
inc
idivl
dec
ret
inc
xor
adc
xor
fwait
sti
add
sbb
mov
cmpsl
pop
mov
jno
cld
jg
xchg
pop
sub
inc
clc
lds
lock
xchg
mov
or
clc
mov
pop
sti
lds
sbb
out
lret
fucomp
je
filds
mov
mov
je
sub
sbb
addb
out
popf
or
pop
stos
jne
cltd
sbb
fistps
inc
idivl
cmp
shll
fs
aas
cmpsl
sub
add
adc
add
inc
sbbb
sub
jo
test
push
stos
clc
jns
nop
xchg
pop
scas
stos
or
pop
je
cmpsb
iret
lock
roll
add
inc
cld
adc
pusha
fisttpll
xchg
sti
mov
f2xm1
lds
fisubl
sub
mov
repnz
or
or
xchg
dec
or
jl
mov
cmp
add
inc
sahf
pop
lods
imul
rcr
test
pop
mov
mov
in
ja
and
fsubrs
push
add
cmp
dec
mov
aaa
jb
sub
arpl
or
mov
pop
test
mov
jne
jge
fcmovne
in
sbb
and
fbld
dec
cmp
aaa
jge
or
inc
xlat
jae
mov
sub
cmpl
lret
jmp
rclb
pushf
and
add
or
push
in
or
fildll
mov
add
lahf
fidivs
test
fwait
push
cwtl
out
jmp
fldl
pop
xchg
lea
mov
jb
fdivrl
dec
movsl
fldcw
clc
addb
fisttpl
or
addl
aas
loop
dec
mov
sbb
jb
movsb
je
dec
mov
into
jae
cmp
nop
clc
aam
insl
mov
andb
out
cmpb
call
inc
cltd
ljmp
xchg
in
in
popf
ret
call
pop
repnz
cmpsl
cli
xlat
ret
xor
mov
popf
pushf
or
clc
mov
cmc
pop
je
shll
dec
mov
inc
cmp
mov
push
mov
mov
fstl
lret
xchg
push
adc
int3
cmc
push
dec
fcom
and
loope
int
jns
gs
pop
roll
lcall
mov
dec
test
orb
ret
cltd
pushl
push
out
sahf
test
loop,pn
mov
mov
sbb
xor
aam
xchg
daa
push
xor
imul
adc
mov
fwait
xor
pop
fwait
adc
mov
xstore-rng
cmpsl
inc
rcrl
mov
adc
mov
push
push
mov
rol
jecxz
cmpsb
mov
out
pop
test
mov
inc
fld
jl
cmpb
mov
cltd
push
pop
sbb
jge
outsl
pusha
add
mulb
add
lods
cmpsb
ret
ds
or
aam
add
stos
test
push
lret
loop
push
sub
fisubs
repnz
push
adc
add
mov
add
iret
xchg
mov
xchg
stos
mov
xor
push
sbb
mov
lods
movb
imul
ret
loope
lahf
mov
cld
xor
leave
out
add
fnstsw
fisttps
loope
shl
xor
ja
adc
adc
rclb
mov
push
pusha
jo
sbb
sbb
pop
iret
scas
aaa
popf
mov
mov
or
inc
sbb
pop
aaa
bnd
daa
adc
loop
or
inc
mov
sti
jo
dec
pop
mov
nop
divl
jae
pop
cmpsb
pop
push
adcb
rorl
push
mov
jns
jg
imul
pop
divb
cwtl
xor
push
mov
dec
out
outsl
sub
push
fnsave
push
test
aad
mov
mov
sbb
cmc
js
test
dec
dec
xchg
lret
movsb
cmp
xchg
test
aad
mov
fsubrl
jge
sbb
push
repz
inc
mov
stc
pop
or
xor
outsl
loop
mov
call
xchg
imul
loope
dec
lods
jl
out
sbb
pop
pop
je
rcrl
pop
rcr
out
adc
mov
lods
mov
out
sbb
cmp
jecxz
ljmp
mov
sub
jge
xlat
push
mov
adc
lret
push
mov
and
fisubs
add
xchg
xchg
mov
insb
mov
lods
jge
add
mov
adcb
sarl
adcl
sub
mov
cltd
lret
movsl
ret
adc
fsubrl
lds
push
pop
enter
jne
and
adc
lahf
fldt
xor
insb
mov
sarl
dec
inc
sbb
jno
insl
mov
cmp
aad
ficomps
aad
push
dec
in
lahf
pop
xor
sub
jbe
iret
jns
jae
and
enter
out
mov
cwtl
sbb
push
mov
idiv
add
dec
stc
sub
xor
jo
shrl
dec
add
xchg
mov
faddp
jecxz
sub
add
xchg
cmpsb
mov
adc
mov
sbb
push
or
mov
fistpll
xor
or
dec
jmp
fstpt
and
mov
xor
inc
inc
xor
cltd
push
pop
add
clc
and
inc
inc
push
mov
push
jo
fidivs
inc
add
adc
rclb
subb
test
into
cmp
xchg
ss
test
xlat
test
pop
adc
aad
add
push
in
dec
cmp
insb
push
jl
jnp
mov
push
pop
pushf
jle
jge
push
mov
mull
jbe
gs
ss
int3
push
ret
sub
scas
mov
fistpl
popa
inc
out
in
mov
stc
inc
xor
dec
adc
cmpsl
mov
scas
and
les
in
push
call
lcall
jo
out
adc
cmp
fwait
jo
adc
bound
and
mov
pop
lea
inc
mov
adcb
and
cs
and
popa
mov
xor
jns
jle
xchg
xor
test
out
jg
lahf
cwtl
cmp
pop
jmp
inc
pop
scas
lea
ja
xor
lods
xchg
add
fdivs
cwtl
add
cmpsb
test
dec
pop
div
add
call
pop
popa
das
movsb
cmpsb
aad
sahf
xchg
xchg
mov
int
lock
pop
out
or
jl
push
mov
stos
cmp
movsl
and
xchg
xchg
xlat
inc
push
inc
inc
push
lea
repnz
inc
repz
and
dec
mov
adcb
adc
ljmp
adc
push
std
or
xchg
repz
lods
xchg
jecxz
pop
cmp
mov
daa
push
inc
or
xchg
outsb
into
mov
iret
insl
mov
pop
std
call
cmpsb
inc
xchg
inc
xor
imul
fsubrs
inc
sarb
push
add
test
pop
and
sbb
ret
fisttps
push
mov
push
ljmp
les
out
mov
movsl
add
adc
dec
push
iret
dec
pause
fildll
pop
and
loop
xchg
pop
and
shlb
adc
cmpl
xchg
adc
in
xchg
rorl
xchg
lcall
hlt
mov
gs
push
mov
loopne
or
mov
in
jmp
cmpsl
xor
and
in
lret
mov
jmp
lds
subl
addr16
hlt
jp
push
addr16
xorl
xchg
push
sbb
sub
xchg
mov
movsl
testb
call
jp
enterw
push
or
mov
mov
dec
push
aam
dec
sub
inc
mov
aam
or
shl
inc
adcb
push
pop
or
sbb
pop
divl
iret
pusha
or
jge
add
mov
lcall
inc
lds
jg
ret
add
sub
cld
or
mov
insb
adc
rcrb
sub
icebp
or
dec
sub
scas
or
cmp
inc
sbb
movsb
lret
fdivl
push
pop
imul
ja
out
andb
bound
ficomps
out
lahf
mov
clc
aaa
mov
jbe
mov
fwait
dec
adc
cld
mov
mov
pop
div
sub
push
push
ljmp
repz
mov
mov
in
push
xor
sub
xchg
sbb
adc
or
pop
inc
adcl
or
fwait
pop
das
pop
arpl
dec
daa
or
enter
pusha
insl
and
push
lods
xor
mov
jnp
or
int
std
adc
js
push
mov
adc
jae
stos
bound
in
sbb
add
outsb
cmp
push
mov
dec
into
jg
addr16
dec
nop
adc
rolb
fbld
lret
xor
adc
mov
mov
push
xor
in
dec
insb
fldcw
jbe
imul
xchg
addb
dec
aas
negb
cmpsl
push
pop
lock
aad
push
dec
out
cmp
shl
jno
jo
in
leave
pop
int3
pusha
push
shr
bnd
xor
adc
mov
dec
lock
clc
xor
sti
pushl
xchg
shl
xor
ja
adc
scas
mov
test
sbb
rclb
mov
push
sahf
cmp
pusha
jo
adc
xchg
jo
inc
mov
cltd
pop
xchg
mov
mov
dec
inc
mov
adc
xchg
cld
lock
daa
insb
pop
or
mov
pop
xor
xchg
mov
add
pop
andb
fbstp
jae
out
dec
cmpsb
lret
jecxz
daa
outsl
jmp
pop
lods
clc
lea
ffree
add
add
jae
fsubrl
shrb
arpl
dec
xor
inc
test
sbb
ret
push
dec
xor
mov
mov
adc
mov
xchg
cwtl
pushf
mov
lock
in
addb
ficompl
addr16
test
lcall
test
push
vpaddusw
loop
mov
mov
mov
jmp
pop
mul
addl
sbb
nop
pop
pop
hlt
xor
jo
xchg
sbb
rcr
out
push
call
dec
xchg
js
out
imul
movsb
mov
xlat
sbb
push
popf
iret
pusha
pop
or
aam
lret
cmpb
sahf
xchg
add
or
loope
push
ficoml
add
rolb
sbb
imul
add
jae
or
add
push
cmpb
ret
scas
int
mov
inc
dec
add
sub
cld
mov
leave
mov
fsubrl
imul
sub
movsb
push
dec
jb
pop
sahf
push
sub
call
inc
and
lds
push
push
xchg
stos
jne
and
enter
insl
mov
repnz
sbb
notb
push
mov
jbe
jns
push
ja
inc
mov
pop
arpl
fmuls
lods
jne
cmp
sub
jg
repnz
cmp
clc
adc
adc
insb
add
mov
pushl
jmp
daa
cmp
mov
push
mov
jp
cmp
js
inc
sbb
cmp
pop
rclb
ljmp
sbb
push
das
xchg
enter
xchg
mov
jp
adc
mov
xor
daa
popa
xchg
test
sahf
push
mov
mov
dec
or
jmp
inc
movsl
dec
pusha
lods
inc
fs
jno
or
push
aas
enter
arpl
aam
fisubl
jns
out
cli
fidivrl
mov
dec
and
push
lods
leave
xor
mov
mov
inc
fidivrs
jae
mov
push
pushf
dec
lock
fwait
push
popa
inc
inc
pop
push
inc
mov
ja
subb
xchg
mov
sbb
jecxz
lahf
push
mov
cwtl
lahf
ficoms
cwtl
cmc
outsb
js
in
push
fdivl
cmp
jl
rcrl
mov
ret
stos
push
mov
clc
test
mov
pop
mov
insb
jo
pop
mov
jl
fwait
xchg
cmpsb
inc
cltd
enter
mov
hlt
js
orb
inc
mov
pop
fwait
daa
adc
pushf
cmp
scas
pop
test
filds
aam
icebp
fisttpl
and
cmp
jmp
dec
and
mov
pop
test
sti
and
cltd
test
mov
push
data16
ds
negl
cld
jecxz
pop
divb
lds
repz
jnp
sub
out
outsl
dec
mov
push
mov
sub
in
andb
cmp
fildl
push
xchg
lret
aad
adc
addr16
ficoml
and
add
jae
and
lock
jg
mov
ret
sbbl
ds
jl
rcll
outsb
jno
sbb
mov
or
jp
lret
popf
adc
cmpsl
mov
test
rcll
and
out
xor
adc
cmp
fwait
jo
push
or
imul
mov
push
jmp
aad
rcrb
or
or
xchg
jg
sub
jb
fisubl
lret
loopne
inc
popa
ja
dec
jb
push
pop
inc
dec
fisttpl
cwtl
jecxz
add
add
add
out
nop
aas
mov
imul
mov
and
addr16
or
cltd
and
jae
pop
int3
xor
bound
push
cmp
xchg
dec
data16
xlat
dec
int3
inc
scas
push
pop
testb
mov
xorb
push
pop
pop
ljmp
lea
xchg
jmp
fwait
dec
add
jns
adc
push
mov
or
xchg
sbb
in
lahf
daa
xchg
sub
dec
mov
or
gs
xor
mov
sbb
pop
mov
int3
notb
lea
cli
inc
cld
test
push
bound
sbb
enter
mov
jecxz
fcoms
inc
lock
sbb
mov
fsubl
dec
pusha
and
cmc
fadd
lods
popf
jne
aad
pop
ret
loopne
ret
pop
xor
add
in
pop
push
jecxz
cmp
adc
add
test
or
pop
dec
leave
aam
xor
imul
test
push
clc
das
rcl
lret
fists
push
jno
mov
scas
arpl
push
or
into
or
fistpll
pushf
scas
push
negl
dec
mov
pop
adc
movsb
xchg
in
loopne
mov
inc
pusha
dec
cmp
inc
jg
leave
mov
sbb
sahf
cmpsl
xlat
adc
sbb
add
hlt
gs
push
fisubrs
jl
mov
jb
scas
and
insl
lret
add
inc
fstps
pop
and
aas
xabort
add
xchg
inc
mov
jo
xchg
cwtl
mov
dec
daa
or
int
imul
mov
inc
mov
lods
popf
fisttps
pop
add
cmpps
or
pop
mov
lock
adcb
loop
mov
insb
jo
pop
cmpsl
mov
adc
cmp
ret
pushf
xchg
sbb
mov
pop
stos
mov
adc
jne
sub
movsl
push
push
repz
pop
popf
cmp
insl
mov
lock
in
pushf
out
insl
movsl
pop
cmp
cmp
cmpsb
jb
or
xor
lret
mov
xchg
cmp
out
jns
sub
xchg
or
ljmp
icebp
or
notl
mov
loope
je
ret
pop
xor
jbe
cli
mov
fbld
sti
inc
test
xor
fs
dec
sbb
jns
xchg
dec
inc
rclb
test
add
xchg
ficoms
cmp
nop
adc
jg
inc
push
mov
dec
call
jne
aam
movsl
xlat
ss
mov
je
pusha
xor
ret
cmpsl
icebp
jbe
test
jns
decl
mov
xchg
sbb
ret
push
xchg
ljmp
and
push
movsb
fstps
push
fists
in
xchg
int
repz
pop
jno
dec
push
sbb
push
add
idivb
push
jne
dec
xlat
mov
sub
mov
jle
dec
fsubl
mov
sub
in
cmp
jg
enter
insb
cs
fwait
leave
loop
jb
mov
push
divl
xchg
push
popf
ficoml
cs
cmpsl
js
aam
leave
inc
lret
lods
dec
fsub
push
fs
xchg
jae
leave
inc
mov
cmpsl
jnp
and
push
cmp
add
icebp
jo
shlb
push
rclb
xchg
aad
jbe
int
xorb
jle
jecxz
xchg
cmc
mov
dec
sub
in
mov
mov
add
insb
cmc
out
sbb
insb
sub
mov
insl
test
or
sub
xchg
sbb
xchg
ds
outsb
in
scas
shrb
lcall
aaa
stos
inc
test
xchg
ret
lods
cmp
mov
stc
or
jg
sub
sbbl
mov
in
enter
mov
pop
xchg
and
inc
inc
pop
sar
int
jne
inc
in
repz
test
aam
fidivl
sub
fcmovb
sbb
in
jo
call
loope
sub
js
sahf
sar
stos
ljmp
pop
xor
add
test
mov
xchg
clc
cmp
add
cmp
fnsave
xor
inc
jge
rcll
adcb
test
jge
addl
leave
sbb
gs
sub
out
or
or
mov
lods
pop
stos
pop
inc
pushw
lahf
pop
sub
std
push
idivl
push
mov
pusha
cmp
mov
mov
lahf
orb
inc
fmul
movsl
mov
lcall
cmc
add
add
xchg
in
mov
outsl
mov
mov
dec
xor
jmp
mov
jo
xchg
dec
pop
outsl
fsubl
cmpsl
fcoms
sbb
mov
xchg
stos
enter
jnp
scas
dec
iret
mov
xchg
push
sub
mov
filds
pop
xchg
mov
sbb
ds
out
imull
les
mov
sub
lcall
cwtl
dec
xor
ret
jns
outsb
jbe
addr16
mov
rorl
enter
enter
xchg
xor
xchg
adc
imul
out
mov
sub
push
jb
and
jns
add
repz
xor
add
inc
sahf
cmp
cmp
lret
das
jns
lods
outsl
aaa
mov
mov
ja
xor
jae
call
dec
lods
xchg
lods
pushf
shll
sbb
nop
lods
push
test
lods
xchg
lock
mov
and
lods
add
mov
adc
push
pop
cmp
insl
mov
int3
sub
ss
mov
adc
dec
fcmovne
xchg
push
mov
xlat
xchg
aaa
dec
aas
xchg
dec
sti
sbb
or
mov
in
fwait
ss
mov
cmp
sti
pop
and
or
or
mov
loopne
jp
out
loope
jp
adc
xlat
sbb
pop
mov
mov
cmp
pop
pop
int3
rcr
cmpsb
sbb
leave
inc
scas
pop
sub
pushf
test
push
dec
lret
cmp
mov
test
or
xor
sub
or
push
dec
loopne
cmp
push
mov
xchg
js
or
into
mov
jns
add
das
pop
mov
ret
sbb
cld
xchg
out
sbb
cmpb
xor
xlat
insl
cmp
push
mov
sbb
int3
xor
les
test
and
mov
sbb
testl
adc
repnz
aam
xchg
sub
aad
push
pop
push
fistps
cli
cmpb
xor
cmc
outsb
js
cmpsl
sti
push
fwait
leave
in
andl
shld
add
mov
push
mov
add
mov
loopne
fsubs
sub
movsl
push
out
fwait
mov
xchg
xchg
faddp
pop
push
mov
ret
orl
hlt
mov
lea
aam
mov
mov
mov
jbe
ljmp
popf
sub
mov
jns
sti
mov
inc
jmp
stos
les
hlt
nop
hlt
iret
pop
mov
shrb
rol
or
jg
adc
in
cmpsb
ror
push
inc
std
cmpsb
mov
dec
or
push
in
mov
shlb
or
test
push
popa
inc
inc
add
sub
loop
mov
pop
push
shrb
dec
lock
add
pop
xchg
jae
push
inc
sbb
push
xchg
clc
stos
push
cwtl
fs
inc
test
cmpsl
sub
mov
test
pop
nop
jge
test
push
dec
and
cmpsb
mov
imul
icebp
mov
mov
push
push
jecxz
dec
hlt
mov
movsl
inc
rcll
fdiv
shld
aad
sbb
sub
test
sbb
mov
dec
fsubl
shrl
adc
dec
lds
cmp
add
stc
arpl
cwtl
sbb
in
aas
leave
mov
mov
movsl
xor
xchg
xor
leave
in
dec
dec
pushf
dec
sub
mov
fwait
mov
hlt
hlt
mov
and
or
movsb
mov
xor
adc
daa
lret
add
mov
test
jne
enter
or
dec
lock
test
hlt
pop
test
push
mov
mov
call
jg
dec
loop
add
adc
mov
in
or
imull
test
aam
movl
fbstp
popf
adc
xchg
fs
or
adc
insl
push
push
out
push
jle
sub
or
outsl
adc
ss
popf
xchg
iret
jb
int3
add
fwait
repz
mov
adc
xchg
mov
adc
mov
jmp
hlt
mov
sub
shrl
in
pop
push
iret
inc
call
imul
inc
bound
pop
adc
sbb
ret
cmpsl
jge
ljmp
dec
and
cmp
add
add
fwait
test
mov
push
out
sub
in
xor
fisubrl
ljmp
imul
push
call
iret
push
add
movsb
lods
shrb
or
jne
push
mov
sbb
ljmp
icebp
adc
adc
repz
ja
dec
sbb
mov
ds
inc
sbb
mov
pop
test
jns
ret
outsl
imul
mov
mov
xchg
sbb
mov
stc
mov
sub
sub
or
shlb
popf
adc
pushf
pop
das
jo
imul
inc
xchg
enter
out
adc
inc
inc
pop
adc
test
jmp
les
sbb
sbb
cmp
xchg
lea
aaa
mov
lret
bound
mov
cwtl
xchg
rorb
pop
cmp
xor
icebp
sub
add
xchg
dec
and
gs
sbb
inc
jae
lret
jb
aam
adc
jne
ret
pop
insb
push
aam
clc
push
inc
xchg
jne
mov
rcrl
pop
scas
lahf
aaa
jp
js
mov
mov
sbbb
ret
std
decl
xchg
ljmp
sub
xchg
imul
sbb
mov
sub
cmpsl
mov
jo
enter
pop
das
frstor
xor
aas
mov
inc
repz
aad
shll
mov
fisttpl
push
jne
or
lods
movnti
cltd
xor
in
jnp
lea
aaa
mov
xor
add
rcrb
clc
and
nop
xlat
dec
add
lret
xchg
push
mov
scas
sbb
scas
mov
jno
xchg
inc
and
adc
movsl
repz
nop
cwtl
popf
jge
insl
mov
lock
in
hlt
vmovntpd
lock
add
xor
test
push
test
cmpb
andl
inc
push
cld
pop
pop
scas
vpsubd
cmpsl
mov
addr16
sub
jo
rcll
ja
and
icebp
stc
pop
xchg
dec
sahf
fidivl
xchg
inc
add
inc
js
mov
add
inc
out
sbb
sub
fidivs
push
mov
jmp
inc
rcl
mov
xor
outsb
jecxz
xchg
fnstcw
ss
mov
pop
add
ret
or
fwait
pop
icebp
dec
lahf
test
xchg
mov
fmull
inc
ds
xchg
cmpsl
mov
dec
sub
pop
dec
jp
pusha
or
push
cmp
pop
push
test
lods
jno
push
lods
inc
mov
mov
inc
lock
inc
iret
test
nop
pop
push
jnp
mov
cli
or
adc
push
scas
dec
push
inc
push
mov
int3
dec
frstor
mov
adc
jno
std
mov
jns
adc
inc
mov
aaa
or
mov
xor
or
test
in
je
push
iret
xor
jne
xchg
inc
and
pop
ljmp
fisubrs
add
and
add
inc
je
cmpxchg
mov
int
mov
out
mov
or
arpl
arpl
pop
stos
pop
mov
movnti
or
std
mov
imul
int
imul
push
mull
sbb
fistpl
adc
add
ljmp
scas
adc
xchg
dec
sub
jne
and
cs
lret
pop
dec
pop
mov
sbb
xor
mov
add
aam
mov
imul
pushf
sahf
pop
scas
cs
cld
out
nop
dec
push
in
movsb
mov
sti
loopne
mov
in
jns
fcoml
shll
rolb
std
jl
fmull
fildll
xchg
xorb
dec
aaa
mov
xchg
test
push
sub
aad
xchg
inc
sbb
iret
jbe
lea
icebp
stc
insb
jle
sarb
aam
add
inc
je
mov
mov
mov
test
stos
mov
dec
sub
vunpckhpd
sub
repz
les
mov
imul
add
and
jmp
mov
movl
or
sbb
int3
mov
fadd
xor
adc
out
xchg
adc
lods
xchg
mov
test
inc
push
mov
andl
adc
sub
pop
sub
xchg
lret
or
add
out
leave
push
adc
inc
lret
jno
inc
add
lods
jle
stos
cmp
sbb
fistps
in
xchg
stos
stc
loope
icebp
leave
test
rcll
push
sbb
jns
pop
js
add
daa
in
fwait
js
ret
sbb
pop
mov
adc
int3
jmp
pop
mov
lahf
xlat
mov
lea
dec
loope
leave
xor
mov
sbb
sub
es
scas
jne
or
aad
push
adc
inc
aas
push
dec
dec
mov
arpl
rdpmc
jle
cmp
cmpsb
repz
mov
push
mov
mov
inc
add
cld
xor
repnz
pop
shlb
jecxz
in
or
cmp
xchg
fmuls
rcrb
sub
pushl
or
mov
popa
scas
lods
sbb
out
mov
js
pushf
dec
and
inc
aam
sub
popa
cmpsb
idivb
cmpsl
add
imul
test
mov
nop
outsb
sub
add
mov
les
push
bound
popa
mov
idivl
rclb
jo
lods
mov
fs
lcall
or
test
sub
ja
jno
std
pop
ficomps
roll
adc
add
mov
dec
jl
dec
xchg
mov
rcr
sub
dec
fnsave
imul
pop
mov
lds
sahf
add
pushf
mov
enter
sbb
jb
sahf
mov
cmpsb
jmp
add
imul
and
rorb
jno
sub
lea
dec
lret
mov
mov
push
mov
adc
cli
fildll
mov
gs
dec
lret
mov
xchg
leave
call
mov
sub
xor
and
pop
ror
fnstcw
dec
jne
dec
jnp
idiv
jmp
insl
outsl
arpl
xchg
mov
leave
jp
inc
and
jnp
xor
mov
cmp
inc
mov
int3
jne
pop
loope
insb
xor
or
jl
test
mov
call
out
pop
movsl
mov
cmp
mov
mov
mov
shlb
arpl
hlt
or
orl
xor
imul
lcall
xchg
movsb
cmpsl
shr
push
test
daa
mov
gs
jl
enter
jae
mov
mov
int
xsavec
sbb
inc
mov
call
mov
pop
ret
xchg
cli
sbb
mov
aad
add
xchg
mov
adc
cmp
xchg
lret
and
push
divb
lock
out
aas
cmpb
mov
pop
mov
jbe
cwtl
movsb
mov
clc
test
dec
frstor
scas
xor
and
ret
fistpl
hlt
pushf
mov
aaa
outsb
lret
clc
xor
out
jo
mov
addr16
sbb
push
aas
hlt
fnclex
xlat
enter
mov
jmp
mov
gs
cmpsl
aam
cltd
add
mov
add
cmp
fiadds
add
dec
mov
mov
leave
xchg
xchg
jmp
or
mov
push
cmp
push
mov
int
xorl
or
jne
xor
mov
into
add
pop
mov
push
mov
leave
sarb
xor
and
push
shl
ficoms
cmp
lret
daa
outsl
cmp
cmp
push
shll
push
imul
aam
adc
sub
push
xchg
repz
sbb
iret
push
inc
scas
dec
jnp
sbbb
mov
aad
xlat
and
inc
ljmp
incl
js
in
or
out
and
stos
and
cwtl
popf
es
dec
in
outsb
addr16
test
xor
push
mov
dec
lock
pop
sti
fucomip
inc
adcl
or
mov
lcall
dec
imul
inc
or
inc
ljmp
dec
xchg
ret
ds
cmp
jg
imull
jnp
dec
cltd
pop
iret
add
mov
leave
inc
mov
inc
add
dec
xchg
int3
cwtl
dec
xchg
mov
sahf
subl
mov
ljmp
inc
cmp
repz
cmc
mov
sub
call
ljmp
aad
sub
xchg
into
lods
push
mov
adcb
push
imul
xchg
insb
jge
mov
cmpsl
push
int
cld
loop
inc
mov
aas
cmpsl
mov
adc
xchg
clc
scas
dec
lcall
dec
and
adc
mov
xchg
popf
mov
jbe
xlat
mov
adc
push
iret
push
or
leave
aam
cltd
xchg
lds
int3
jge
mov
lods
shrb
je
add
cltd
lahf
inc
lret
cwtl
hlt
inc
sbb
adc
cli
mov
adc
dec
icebp
inc
lcall
aaa
mov
mov
inc
sub
ja
and
xchg
loop,pt
aad
dec
hlt
subb
mov
call
mov
bound
push
rcrb
jbe
inc
mov
fs
mov
push
daa
mov
mov
xchg
cmpsb
scas
lret
mov
inc
add
enter
sub
dec
fldt
jecxz
lods
adc
mov
mov
xchg
inc
fwait
cltd
test
jl
shlb
jge
addl
decl
pop
rcr
cmp
or
inc
cwtl
dec
ret
dec
fcoms
outsl
imul
mov
mov
fists
pop
out
mov
popa
cmc
rorl
inc
leave
aam
inc
and
adc
mov
mov
mov
sbb
loopne
stos
shr
xor
jnp
add
push
mov
and
sbb
xor
insb
popa
mov
in
ja
inc
add
or
stos
daa
and
sbb
pop
stos
jle
push
mov
test
cwtl
ss
sbb
scas
push
adc
push
mov
aaa
mov
xor
jmp
test
mov
inc
push
ret
scas
mov
pushf
pushf
mov
adc
lcall
cmp
test
ds
sbb
test
scas
hlt
repz
push
add
ss
adc
in
hlt
dec
shlb
dec
in
inc
scas
xchg
int
add
or
fstp
movsl
icebp
icebp
mov
xchg
jmp
test
mov
ret
inc
cld
stos
stos
cmp
lcall
mov
xchg
adc
and
mov
sbb
das
xor
popa
mov
lds
jmp
push
mov
pop
loopne
fidivl
loopne
out
mov
mov
rcrb
mov
sbb
or
mov
stc
adc
lret
imul
mov
pop
dec
fs
mov
jno
sahf
pop
and
mov
jae
push
cmpsl
and
popf
push
dec
jl
shrb
mov
idivb
fnstenv
lds
adc
or
pop
cmp
fisubrl
in
mull
push
mov
sbb
push
push
icebp
leave
icebp
std
sarl
aas
add
fistpl
jg
cwtl
add
ret
mov
and
xchg
cmp
pop
xchg
inc
add
sbb
mov
dec
mov
jo
jnp
sbb
fwait
inc
pop
inc
cmp
mov
mov
dec
inc
hlt
mov
stos
out
jnp
add
mov
popa
mov
mov
mov
pop
or
and
mov
iret
inc
ljmp
imul
pop
sbb
movsl
mov
inc
sbb
ds
adc
aad
fnstsw
test
jo
dec
xor
add
sbb
fcomp
mov
mov
adc
dec
rcrl
or
sbb
jnp
movsl
ficoml
les
adc
in
mov
popf
aas
adc
enter
lods
jne
stc
jmp
mov
push
or
xchg
fwait
add
mov
inc
and
or
std
mov
inc
jl
mov
push
mov
sub
push
inc
and
cmpb
clc
mov
xor
mov
sub
fcompl
or
iret
or
enter
mov
in
aaa
push
push
xor
jge
filds
popf
je
mov
mov
adc
or
mov
inc
jmp
aaa
shrl
pusha
cmp
sti
jp
inc
mov
xor
fstpl
or
xchg
ret
push
mov
mov
push
or
push
pop
mov
fucomp
fs
insb
jg
rorl
les
sbb
sub
in
xchg
lds
jnp
push
stos
mov
and
mov
gs
lods
inc
sbb
push
cmp
fcomps
push
scas
decl
mov
add
inc
inc
add
push
dec
les
or
jge
jo
mov
test
repz
in
dec
pop
lret
sbb
lea
push
insl
jmp
lods
call
pop
iret
les
push
mov
fisubrs
das
adc
pop
subl
negl
xchg
shll
scas
popa
mov
xchg
enter
inc
iret
fucomip
repz
or
xor
jae
jecxz
nop
xchg
in
ja
into
cmp
faddl
mov
mov
mov
fs
sbb
enter
stos
inc
and
add
push
and
jg
mov
arpl
sub
xchg
test
bound
test
std
int3
insl
mov
mov
dec
outsb
ss
outsl
push
mov
adc
nop
sbb
ljmp
icebp
adc
adc
repz
ja
dec
sbb
xchg
jle
daa
inc
sub
xchg
iret
es
jecxz
pop
ret
fldt
call
push
mov
xor
cmp
jb
fs
add
push
or
sub
insb
inc
jmp
or
and
and
pop
mov
das
xor
mov
mov
add
push
mov
mov
pop
add
ds
jg
out
cltd
repnz
sub
rol
sub
cld
or
mov
and
mov
jl
xchg
lock
les
push
stos
add
xor
das
popf
inc
lcall
shll
jno
shrl
je
in
mov
repz
lds
adc
add
jle
jne
fiadds
inc
sbb
arpl
adc
subps
lock
add
pop
pop
notl
jnp
decb
mov
fsubl
in
scas
addr16
adc
sahf
ret
jbe
pop
adc
pop
jnp
fldcw
push
aad
cli
ficomps
dec
enter
insb
aaa
shlb
int3
sub
push
mov
jmp
mov
das
or
jne
in
pop
adc
jae
mov
push
push
add
iret
xor
jmp
dec
sub
in
add
vmovupd
mov
jg
xchg
xor
sbb
addr16
add
fcompl
mov
sub
inc
mov
pop
xchg
fidivl
adc
out
arpl
and
movsl
test
mov
push
mov
lods
add
jge
dec
outsl
cmpsl
push
ja
sub
pop
fidivl
lahf
push
dec
data16
scas
fnstcw
pusha
push
jg
pop
aad
mov
cld
loop
inc
xchg
jl
cmpsl
push
add
out
adc
outsl
idiv
xor
sub
fsubrs
out
adc
fstpl
cmpsb
xchg
iret
mov
inc
into
pusha
jo
add
jns
in
jb
jnp
fdivs
leave
or
adc
sbb
pop
shlb
cltd
push
pop
cmc
ficoml
mov
or
xchg
pop
pop
addr16
jb
clc
lock
sub
or
test
cmpsl
or
lods
sarb
xor
cmpsl
mov
xchg
rolb
push
xchg
push
cmp
xchg
loope
fcmove
push
gs
ret
cltd
mov
enter
push
inc
cmp
fildll
adc
sbb
push
loop
stos
or
mov
in
cmpb
mov
test
pop
xchg
outsb
dec
sbbl
divl
jbe
loope
xlat
mov
adc
into
stc
mov
stos
mov
xchg
inc
repz
add
mov
shrl
aas
icebp
jno
adc
movsb
int
shrl
sbb
cmpsl
ret
pop
aaa
shll
lcall
mov
mov
add
int3
test
sub
push
or
in
inc
xchg
add
rolb
fdivl
hlt
push
inc
fdiv
mov
jge
lea
cmpsl
enter
fsubl
ret
imull
mov
mov
jg
data16
cmpl
ss
iret
cli
inc
and
ds
xchg
negl
pop
pop
or
fucomi
mov
mov
mov
pop
xchg
sbb
xchg
insl
mov
outsb
or
cmp
adc
dec
sbb
push
cs
and
dec
pop
and
popf
mov
mov
push
lock
mov
aam
and
pop
and
fcmovu
fsts
mov
xlat
mov
mov
je
mov
jp
call
lods
jp
sbb
popf
out
lret
sub
out
and
test
pop
mov
out
mov
lock
dec
inc
hlt
mov
pop
aas
adc
lret
rorb
mov
dec
pusha
jle
push
xchg
mov
sub
adc
xor
loopne
ret
loopne
mov
or
ds
jecxz
or
add
in
ss
dec
sti
xor
fidivrs
clc
cmp
jnp
addr16
add
ret
mov
or
popl
pushf
fwait
inc
sub
aam
push
mov
xchg
sbb
mov
lods
add
mov
arpl
popa
mov
cmp
outsb
push
idivl
mulb
cwtl
sub
sbb
lds
sbb
add
sub
mov
es
add
test
lods
loopne
or
fwait
add
in
sbb
lahf
cmpsl
or
repnz
and
jp
stc
mov
mov
sbb
lods
xlat
push
mov
fbld
pop
lret
jb
sbb
pop
pop
sbb
ret
mov
adc
or
push
adc
mov
add
fdiv
cmp
inc
pop
push
arpl
push
inc
inc
inc
xchg
xchg
clc
cmp
sbbl
xchg
mov
iret
fistl
testl
dec
sbbb
enter
xor
hlt
outsl
sub
rcll
mov
lds
pop
xlat
dec
cmp
ljmp
rcrl
pop
sub
fdivl
jne
add
push
inc
pop
or
fwait
sbb
addl
jp
and
repz
sarl
movsl
movsl
or
inc
cmp
addl
sub
js
stc
iret
insb
cmp
or
ja
cwtl
dec
loop
not
in
icebp
pop
xor
sub
xchg
sub
push
pop
pop
cmp
iret
sub
aad
lahf
add
leave
mov
jmp
or
sbbb
dec
sahf
dec
dec
es
xor
push
in
jne
pop
cmp
cmp
cmp
cmp
and
andl
mov
jecxz
in
clc
cmp
sub
push
mov
roll
hlt
mov
addr16
lea
dec
adc
push
xor
sub
and
fwait
dec
xchg
loop
dec
jmp
pop
fisubl
aad
cltd
adc
mov
add
fwait
ja
gs
movb
sbb
dec
cltd
loopne
jns
xor
and
arpl
jge
xor
add
shl
push
xor
fs
mov
faddp
pop
rcrw
mov
fists
push
out
fs
push
cli
in
mov
xor
xor
rclb
mov
mov
movntq
loope
xor
mov
mov
and
adc
popf
xchg
jbe
stc
jo
les
call
insl
int3
sub
mov
push
jl
and
fwait
mov
arpl
adc
loop
sbb
in
cmp
in
cmpb
pop
mov
fst
mov
mulb
lods
sbb
fcoms
inc
dec
rolb
sbb
lret
pop
in
popa
mov
addb
popa
ret
mov
sub
mov
push
cmp
in
lret
mov
mov
dec
pusha
push
pop
testl
sbb
xchg
jle
lahf
sbb
xorl
inc
notl
mov
xlat
push
mov
push
sub
mov
div
pop
cmp
or
dec
movsb
cltd
pop
dec
loope
rolb
xchg
mov
pop
pusha
jae
push
neg
sarb
push
test
jge
fnsave
dec
mov
and
dec
add
add
inc
pop
popa
jmp
adc
or
test
xor
bound
adc
xor
in
int3
mov
mov
dec
add
inc
sbb
jne
pop
ret
das
and
mov
inc
xor
mov
movsb
fisubl
loop
inc
mov
xchg
ljmp
les
mov
push
movsl
negl
mov
mov
jbe
xchg
adc
adc
push
push
inc
push
insl
dec
mov
fsubrl
mov
jbe
sub
jno
lds
pop
fdiv
repz
adc
das
mov
adc
mov
mov
sbb
mov
sub
mov
leave
jb
mov
jl
mov
push
iret
repz
pop
pop
push
mov
fnstenv
test
adc
mov
pushf
mov
pop
fstpl
jns
or
test
or
mov
movsl
inc
daa
cmp
jecxz
stc
sti
fs
lahf
lret
hlt
jne
fimuls
inc
lret
add
or
inc
jg
in
push
test
arpl
lahf
jmp
cld
roll
push
lds
pop
and
test
fisttpl
or
fdivrl
sbb
mov
mov
repnz
in
and
inc
imul
arpl
lods
js
dec
aad
xor
jo
shrl
inc
dec
push
addr16
dec
xor
jle
xchg
int3
cmpsl
dec
sbb
je
out
roll
insl
mov
xor
cmp
imul
xorl
mov
dec
loopne
dec
inc
lcall
test
mov
cli
jne
jp
daa
adc
inc
sbb
xchg
mov
lods
push
inc
inc
imul
mov
xor
int
adc
push
lods
sub
sub
or
jg
cmpsl
xchg
leave
xchg
test
inc
xor
sbb
rorl
inc
mov
mov
xchg
jae
inc
fwait
mov
loope
mov
xchg
dec
rcl
lea
or
scas
fsts
fisubl
stos
pusha
xchg
or
rorl
jae
adc
jle
lahf
xchg
movsl
aad
fucomi
cmc
mov
je
sbb
shlb
pop
adc
dec
cwtl
add
push
rcr
add
dec
push
push
mov
jmp
sbbb
jbe
fdiv
xchg
inc
and
pushf
es
jbe
sbb
xor
out
jmp
inc
mov
dec
inc
sbb
lret
cs
int
xchg
adc
sbb
int3
ljmp
adc
xchg
incb
jno
call
mov
sar
add
aaa
hlt
sub
cmp
jecxz
and
scas
sbb
xchg
int3
mov
mov
cmp
lret
stos
stos
es
mov
sbb
ljmp
icebp
cmp
push
pop
ljmp
adc
sub
cltd
cmpsl
push
push
sbb
mov
cmp
add
xlat
outsl
loop
mov
ljmp
adc
xchg
pusha
adc
mov
mov
jo
mov
mov
push
ss
addr16
sbb
xchg
call
fidivl
insl
push
enter
aaa
dec
out
mov
data16
jne
mov
inc
xor
xchg
mov
hlt
xor
dec
aas
adc
sti
cld
dec
daa
push
fsubl
or
shl
inc
arpl
push
push
clc
pusha
mov
pop
inc
add
cmp
jecxz
cmp
jg
add
rorl
or
lea
mov
pop
aam
push
or
xlat
push
mov
pop
enter
jne
and
fucomp
jae
push
cld
sub
mov
outsb
xchg
pop
jbe
pop
mov
jae
mov
out
mov
pop
xchg
aas
mov
push
lahf
dec
pop
jbe
loope
mov
fdivrs
push
fistps
inc
jecxz
push
aas
pop
sbb
sahf
cmpsl
xlat
or
inc
movsb
sbb
out
sub
movsl
ds
je
rcrl
jl
fucomp
adc
lret
jbe
lods
sub
inc
test
fs
out
xchg
jmp
pop
fwait
pop
add
sbb
xor
popa
rorl
inc
xor
je
movsb
popf
test
push
xlat
mov
xor
cltd
sbb
or
out
lahf
pop
ret
loopne
ret
sbb
fucomip
repz
lea
mov
aam
mov
sub
add
adc
xchg
add
clc
std
int3
addr16
hlt
sub
push
or
xlat
push
mov
mov
scas
jecxz
jo
xlat
data16
bound
dec
mov
fildll
cmc
sahf
lds
xchg
mov
xor
mov
cmp
in
push
mov
dec
fs
cmp
stos
sbb
xor
cmp
cltd
and
hlt
mov
mov
popa
stc
push
pop
push
cwtl
jae
out
add
jne
pop
fiadds
clc
ficompl
notl
or
inc
xlat
addr16
push
fwait
sbb
movl
enter
cli
inc
int3
pop
sub
mov
sbb
mov
popf
test
lea
mov
leave
jo
sub
push
mov
loopne
rorl
cmpsl
jne
xchg
lods
nop
loopne
mov
sbb
xor
ret
je
mov
mov
xadd
pop
arpl
dec
xor
and
repnz
mov
insb
inc
xchg
mov
int3
cmp
mov
jnp
ds
sbb
insl
mov
daa
xchg
pop
cmc
mov
sub
int3
push
xor
cmpsl
push
imul
pop
enter
add
dec
shl
lods
xor
add
xchg
in
cmp
out
mov
icebp
sbb
dec
cmp
xor
jmp
inc
add
jbe
dec
cltd
cmpsb
pop
xchg
insl
jo
mov
aas
fwait
pop
pop
popf
iret
jle
cmp
icebp
xchg
adc
pop
push
dec
mov
sbb
jb
das
je
dec
mov
jmp
lcall
push
mov
pop
push
pusha
lods
push
setae
rorb
add
shl
mov
cmp
fwait
sbbl
pop
divl
add
movsl
mul
lods
sub
sub
test
and
sbb
xchg
outsl
dec
ficoms
insl
inc
mov
xchg
fcomps
insl
mov
fildll
ss
xchg
ret
dec
pop
gs
mov
sub
xlat
jbe
xor
xchg
ds
inc
xchg
js
fidivrs
mov
sti
cmp
cmp
pushf
dec
and
orb
or
jle
sbb
stc
sahf
bound
xor
sbb
xlat
insb
out
inc
sbb
cmpb
addr16
cwtl
int3
xor
aam
mov
mov
jg
cmp
inc
repnz
jb
mov
cmp
push
sub
sub
mov
fs
mov
cld
cmp
xor
jnp
test
aaa
mov
pusha
jns
inc
add
sbb
mov
pop
adc
fstpt
push
dec
sbb
dec
jb
mov
mov
gs
add
adc
xlat
or
test
adc
and
and
mov
jb
mov
lods
push
ja
add
jp
cmp
ret
repnz
mov
inc
loopne
dec
cmpsl
xlat
add
pop
leave
cmp
in
inc
out
int
decl
stos
sbb
mov
fwait
in
mov
pop
sahf
icebp
out
cmp
fisubs
xlat
sbb
jg
insb
aaa
jp
je
xchg
sbb
or
loope
dec
push
sub
popa
sbbl
push
sub
xchg
stc
lea
push
adc
pop
cmp
cmp
cli
fisttps
or
daa
fldenv
enter
jg
bound
loopne
insl
jmp
stos
das
mov
and
push
mov
je
dec
test
mov
hlt
xchg
xor
push
subb
mov
gs
or
hlt
dec
dec
in
mov
pop
sbb
inc
in
dec
or
das
lret
gs
dec
and
lock
dec
jno
pusha
outsl
pop
bound
adc
push
mov
fucomp
out
int
divl
std
mov
dec
fadds
jle
xchg
cmp
scas
dec
subb
jl
stos
mov
inc
pop
sahf
ret
push
jno
mov
ljmp
sbb
pop
popf
iret
and
inc
pop
inc
mov
adc
fdivrl
mov
int
jge
sub
repnz
or
dec
int
fdivrs
or
negb
popa
pop
jne
lods
sbb
inc
int
cli
mov
inc
add
sbb
add
stos
fmull
inc
dec
or
xor
test
mov
jecxz
dec
ss
xor
add
xlat
ror
ja
push
fsubr
lods
push
dec
mov
and
dec
xor
jle
mov
inc
leave
jecxz
lret
jns
mov
sub
imul
cmp
out
dec
clc
gs
xor
or
clc
adc
xchg
pop
pusha
mov
fisttps
xchg
mov
xchg
imul
in
idivl
dec
adc
cwtl
lock
push
rcrl
jb
mov
ret
icebp
cld
js
mov
inc
mov
pop
shlb
inc
mov
lds
aas
loopne
jmp
inc
jnp
shlb
xchg
les
add
inc
je
stos
jecxz
sbb
xchg
inc
xchg
mov
loop
cli
ret
ds
cmp
jg
imull
jnp
dec
cltd
pop
iret
add
mov
leave
inc
mov
inc
sbb
pop
fistpl
nop
inc
out
adc
cmpsb
push
test
push
scas
mov
xchg
mov
jns
sub
push
popa
or
gs
dec
out
leave
sbb
cwtl
icebp
push
xchg
es
inc
pop
sarb
into
gs
inc
out
mov
and
push
pop
inc
pushf
loop
inc
lahf
scas
imul
in
cld
out
jae
ret
xchg
pop
pop
lcall
pop
push
mov
ds
sub
sarl
test
ret
xorb
mov
jne
pop
in
orl
add
inc
sahf
popf
dec
push
pop
or
pop
repnz
cmpsb
cmpsb
cmpsb
push
mov
fsubr
mov
popf
sbb
call
jns
xor
pushf
mov
aam
sbbl
jae
sbb
cld
xlat
jg
jns
rcrb
mov
aam
mov
fmull
lahf
pop
decl
dec
mov
outsb
shl
jmp
daa
dec
test
stos
mov
add
jae
pop
or
push
aam
dec
mov
xchg
mov
or
adc
pop
jle
cwtl
xor
dec
xchg
pop
test
or
outsl
jns
scas
fldt
mov
les
and
sub
pop
out
add
lcall
fisttpl
stc
xor
xchg
lds
push
js
lret
imul
dec
imul
jb
stc
mov
pop
mov
lret
ss
push
fiaddl
rol
mov
dec
cmp
cmp
push
add
rol
mov
je
jle
in
aam
in
xor
leave
pop
ret
and
enter
add
mov
or
pop
into
push
pop
jbe
fwait
ds
push
inc
in
and
xor
xchg
ljmp
in
icebp
xchg
dec
jns
mov
push
pop
mov
lcall
lret
jo
push
shrb
mov
arpl
dec
lahf
test
xor
push
fcmovnu
jbe
rolb
outsl
jg
imul
sbb
je
sbb
fwait
xchg
jns
jge
sub
add
and
icebp
xor
stc
sub
insb
repnz
push
fstpl
cld
cwtl
aam
xor
fisubrl
cli
mov
rol
out
mov
call
mov
clc
lret
outsl
mov
sbb
xor
popf
xchg
rcrb
test
push
addr16
dec
push
hlt
repz
lcall
mov
add
inc
xor
inc
sti
cmp
jg
loop
outsb
enter
test
gs
mov
pop
sub
sbb
sbb
mov
mov
icebp
jns
adc
dec
js
pop
push
scas
dec
loop
loope
jecxz
iret
or
inc
pop
cmp
sbb
push
pop
ret
inc
xlat
push
sbb
popf
rcl
negl
lock
jecxz
shlb
push
mov
lret
mov
and
mov
aaa
pushf
or
xchg
ret
mov
outsb
js
lahf
test
xchg
mov
incb
loop
jp
lds
push
pushf
jno
or
adc
es
ficompl
and
in
cmp
mov
jne
repz
pshufw
lret
sbbb
sbb
movsb
int
je
dec
ret
das
jge
sbb
mov
dec
cmp
pop
inc
inc
inc
xchg
repz
enter
adc
ds
push
pusha
lahf
jecxz
inc
mov
out
xchg
insl
pushf
inc
adc
mov
leave
sbbb
push
lock
fldt
nop
xlat
dec
sub
test
enter
inc
ret
outsl
mov
pop
xor
fmuls
dec
mov
into
in
cmp
imul
out
or
sub
adc
hlt
in
test
fadds
aaa
je
arpl
clc
lea
std
cmp
sbb
adc
mov
inc
mov
repnz
jbe
mov
incl
stos
in
sbb
adc
movsl
cli
pop
lods
adc
inc
and
lret
sbb
pcmpgtw
cmc
cwtl
jns
sbb
push
ljmp
popf
pop
pop
shrb
cmp
cltd
xor
fsubr
push
and
pop
scas
inc
ret
lcall
mov
add
mov
push
mov
cwtl
bound
jg
inc
xor
sub
les
mov
pop
aad
jg
inc
pop
das
mov
adc
int3
jns
outsb
loopne
push
outsl
mov
int
int
jmp
lret
js
pop
push
lret
push
inc
pop
in
push
adc
xlat
insl
pop
js
stos
repz
add
pop
push
mov
sbb
imul
adc
adc
fcoms
push
scas
hlt
xor
sarl
push
sub
pop
js
inc
int3
fcmovb
add
push
in
adc
sub
or
xchg
outsl
dec
sub
push
mov
pop
jne
inc
jbe
push
jns
insl
xchg
inc
mov
jne
and
loop
jmp
cmp
hlt
xor
xchg
jge
pop
shrb
fwait
idivl
jbe
xor
or
loopne
cwtl
cmp
mov
push
mov
jmp
sbb
push
xor
jecxz
inc
int3
cmp
test
inc
cmc
sbb
stos
clc
or
xchg
cmp
add
pinsrw
scas
inc
movsl
in
jge
inc
fisubs
mov
mov
scas
popf
in
shlb
jl
das
xchg
stos
and
push
ret
lret
neg
inc
mov
inc
stos
std
repnz
lods
push
mov
xadd
shl
mov
pushf
pop
and
xchg
xchg
or
sarb
pushf
shlb
loop
cltd
loop
stc
xor
je
dec
stos
rclb
xchg
adc
scas
sbb
xchg
pop
push
and
xlat
aad
inc
andl
lret
and
adcb
inc
fnsave
sbb
out
inc
and
jno
mov
dec
mov
dec
lret
mov
addr16
push
popa
cmpsb
pop
test
fistps
or
shll
movsl
pop
stos
pop
movsl
lret
push
test
iret
fucomip
hlt
cmp
test
push
add
mov
xchg
out
aam
or
nop
xor
stc
jg
in
pop
pop
mov
jecxz
ficompl
ja
add
gs
in
mov
xor
loop
xor
xor
in
fsubl
test
push
mov
idivb
xchg
push
and
test
sub
outsl
xchg
mov
scas
out
fildl
addl
ret
lahf
lds
pop
movsl
das
push
cwtl
in
xchg
pop
xor
imul
inc
push
lock
or
fwait
test
jl
stos
mov
mov
cwtl
rcrl
xor
and
sbb
sub
mov
dec
inc
mov
mov
push
mov
in
xchg
lret
pop
xor
inc
add
add
inc
rcl
mov
push
idivl
sbb
roll
hlt
outsb
sub
push
xor
mov
push
js
mov
mov
push
inc
icebp
movsl
iret
cltd
pop
in
sub
mov
es
or
mov
mov
sub
and
leave
jp
mov
push
out
fsts
lcall
popf
dec
mov
fistl
jb
popf
decb
mov
popf
mov
cmp
lahf
cmp
test
or
loop
std
rcr
inc
stc
xor
add
fldl
mov
cli
testb
repnz
out
jle
fistps
jno
dec
push
fimuls
std
inc
into
cmpsb
iret
es
mov
ret
fldcw
lods
cmp
sub
push
test
enter
mov
pop
fistpll
mov
divl
jb
xor
sarl
jo
dec
push
nop
jnp
adc
clc
sarl
es
cmp
mov
repz
or
jnp
rcrb
fiadds
mov
inc
aas
fcmovbe
or
mov
lcall
and
and
push
scas
shll
int3
pop
shrl
push
dec
mov
dec
push
push
mov
leave
jp
xchg
xchg
cltd
xchg
aad
fbld
xchg
xchg
pop
pop
pop
pop
mov
or
mov
or
and
in
aaa
fucomi
xor
shr
xor
mov
test
add
adc
add
xchg
imull
add
lds
vreducesd
roll
mov
push
adc
movsb
addr16
popf
fwait
jo
int3
lods
mov
call
add
sbb
out
ror
loope
lea
iret
insl
mov
adc
xor
sbb
dec
pop
fcomps
mov
jne
inc
dec
inc
add
mov
jp
fwait
mov
adc
or
jno
and
and
jge
bound
fdivr
mov
cmc
mov
mov
or
xchg
addr16
cltd
fwait
mov
sbb
mov
nop
xlat
lret
jns
inc
test
mov
inc
mov
xchg
mov
arpl
enter
lds
repnz
inc
pop
test
mov
pop
lds
sub
test
stos
jbe
mov
inc
ja
cmp
int3
lods
pop
mov
pushf
mov
mov
push
jecxz
fmul
ret
popa
add
pusha
adc
pop
negl
enter
mov
aam
jns
mov
mov
jmp
push
dec
insb
ret
mov
jne
cli
or
cmp
icebp
mov
movb
xchg
test
arpl
fs
sbb
or
in
jge
add
mov
js
mov
xchg
inc
pop
sbb
xchg
pop
loopne
mov
sub
lea
xor
imul
dec
pusha
cwtl
push
mov
test
xor
or
mov
mov
push
insb
test
aaa
push
int3
and
shrb
cmp
xchg
aaa
pop
je
icebp
push
pop
nop
pop
and
stos
sbb
insl
mov
daa
xchg
pop
cmc
mov
sub
int3
push
xor
cmpsl
push
imul
pop
enter
or
fldenv
adcb
xlat
adc
dec
int
cli
fistpl
sti
pop
fsubrs
xchg
sub
and
xchg
jecxz
mov
test
xchg
fwait
inc
movsb
inc
cmpsb
outsl
push
gs
mov
adcl
popf
sbb
mov
js
dec
mov
cltd
sbb
and
popa
jecxz
mov
test
adc
cs
pop
cltd
pop
xor
bound
imul
inc
jmp
mov
popa
mov
in
add
out
andb
dec
imul
xchg
sub
test
add
out
xlat
data16
bound
shlb
mov
xchg
movsl
sub
cmp
fdivrs
push
xchg
mov
ret
xchg
cltd
ficomps
aad
push
dec
in
xchg
pop
das
mov
fstpl
loope
xchg
decl
call
fcompl
push
loop
jl
nop
cwtl
fwait
xlat
in
neg
ret
adc
adc
mov
fs
pop
stc
repnz
cmp
push
xchg
pop
cmp
adc
push
test
ja
stos
cmp
or
jo
xor
out
inc
mov
jmp
mov
adc
mov
xchg
divb
pop
pop
add
rolb
sbb
shlb
mov
loopne
or
lsl
pop
cmp
sbb
pop
pop
xchg
sub
jg
call
adc
xchg
push
add
and
mov
pop
push
mov
mov
pop
enter
jne
cwtl
pop
cmp
push
adc
mov
xor
pushf
dec
pop
mov
mov
inc
movsl
out
xchg
lds
pop
push
xchg
repz
inc
mov
stc
pop
inc
movsb
push
sub
mov
mov
cmp
bound
aaa
push
adc
cmpsl
xlat
in
pop
push
loopne
mov
push
xor
push
cli
xlat
sahf
or
dec
popf
icebp
iret
dec
push
leave
imul
inc
loopne
inc
std
pop
fldcw
cmp
pop
aam
xor
mov
ss
js
dec
mov
scas
inc
xor
cmpsl
push
popa
jecxz
mov
das
idivl
les
inc
sahf
mov
sbb
xor
jle
decb
call
pop
fs
test
hlt
add
imul
mov
xchg
fwait
ds
hlt
or
and
sbb
inc
insl
add
fisttps
mov
pop
mov
int
popf
addl
push
stc
mov
add
lcall
sti
dec
push
jno
movsb
gs
mov
stos
jmp
popf
lahf
adc
add
mov
repz
in
dec
sarb
enter
dec
cmp
in
push
cmp
enter
jb
pushf
xchg
push
bound
jnp
enter
dec
outsl
inc
lds
enter
mov
or
or
pop
in
aaa
push
push
xor
jge
filds
popf
je
mov
mov
adc
or
mov
inc
jmp
aaa
shrl
pusha
cmp
sti
jp
inc
mov
xor
fstpl
or
xchg
aam
enter
lock
add
in
cmpsl
mov
dec
pop
pop
pop
aad
jae
repz
lods
mov
jmp
call
xchg
add
cmpsb
mov
sbbb
loope
xchg
and
add
js
push
add
xchg
les
mov
scas
push
pop
add
idivl
inc
push
mov
mov
pushl
mov
and
push
mov
adc
mov
xor
jno
xchg
inc
cmpsl
ret
punpcklwd
pop
cld
fsubrp
addr16
int
sub
dec
loope
jl
imul
xchg
jmp
inc
rcl
sbb
int3
push
cmp
push
or
imul
lods
insl
flds
mov
fnstsw
cmp
jo
in
ja
popa
call
cmpsl
iret
cmpsl
dec
cmpsb
andb
ret
insb
mov
test
inc
or
mov
mov
lods
pop
test
xor
push
int3
pop
sbbb
push
pop
pushl
arpl
xchg
mov
sti
idivb
and
push
fcoml
lcall
cmp
adcb
mov
pop
push
test
xchg
fbstp
jmp
mov
sub
mov
dec
mov
xchg
xchg
js
ds
jecxz
inc
mov
jmp
lods
nop
adc
outsb
bound
lahf
pop
pop
xchg
mov
xlat
fwait
pop
aaa
popf
iret
pusha
pop
or
mov
mov
fcoml
dec
inc
xor
dec
pop
mov
sti
pop
das
or
std
leave
push
repz
repz
adc
divl
iret
in
xchg
sub
mov
add
inc
test
mov
fcoml
aaa
xchg
sub
mov
sbb
adc
addr16
push
lods
push
dec
sbb
inc
push
daa
out
lret
fucomp
pusha
cmp
mov
insb
test
jo
add
inc
scas
push
pop
imul
dec
cmpsl
push
std
lods
xor
mov
dec
sar
push
mov
aas
stc
cwtl
loop
repnz
push
fs
rclb
pop
fists
pushl
rcrb
stc
xchg
int
or
adc
pop
sbbl
xchg
or
mov
pusha
jo
cmp
mov
jo
xor
out
inc
mov
jmp
mov
adc
mov
xchg
divb
pop
pop
add
rolb
sbb
shlb
mov
loopne
or
lsl
pop
aas
xor
divps
xchg
sub
jg
call
adc
loop
xor
pop
mov
pushf
dec
pusha
test
cmp
test
push
mov
xor
mov
scas
ljmp
and
push
cmp
negl
mov
cmc
sbb
sub
scas
xorb
push
pop
pop
inc
xchg
dec
data16
cmp
and
or
mov
cmpl
ds
jl
inc
mov
jo
sti
repnz
xchg
adc
mov
lock
scas
xor
dec
mov
stos
outsl
mov
cmp
push
cmp
out
dec
or
lahf
aaa
bswap
jp
dec
daa
or
xchg
ficoms
dec
cmpsl
dec
mov
into
pop
stos
shrb
inc
mov
fnsave
add
loope
add
inc
push
cwtl
mov
jge
pop
dec
aaa
push
lods
and
jo
cld
jg
inc
sbb
andb
push
divb
rcll
les
hlt
test
andb
out
jae
jmp
scas
sbb
gs
pop
mov
jb
push
shlb
mov
jns
filds
mov
add
mov
out
jg
mov
sub
adc
pop
pusha
pop
and
mov
cmp
scas
fbstp
jecxz
rcr
adc
in
fdivs
adc
sub
push
fwait
xor
mov
hlt
data16
cmp
es
xor
xchg
pushf
ja
jo
sbb
out
int
roll
mov
popa
ffreep
dec
mov
xor
incb
les
push
int
nop
or
adc
jbe
out
push
and
int
ret
aam
sti
pop
sbb
jae
pop
aas
outsl
ret
repz
mov
sbb
imul
xchg
dec
in
push
xchg
cld
sahf
lahf
mov
into
imul
std
es
lds
jns
pop
inc
dec
pop
or
inc
rorl
jo
das
mov
int
int3
adc
adc
rcrb
repz
push
stos
sbb
xor
test
mov
test
pushf
jmp
jns
enter
out
cwtl
inc
sarb
or
and
nop
les
sbb
aam
bnd
sbb
dec
add
sbb
fs
pop
fisubl
loope
jl
in
test
fwait
jne
cltd
sarl
or
rcll
addl
xchg
jmp
mov
lods
imul
dec
mov
incb
mov
xor
stos
aam
fstpt
iret
cmp
jno
mov
sbb
xlat
testl
cwtl
pop
ret
pop
stc
aaa
pop
adc
pop
dec
fldt
inc
leave
out
sbb
inc
icebp
push
hlt
sub
and
test
loopne
and
mov
sub
sbb
pusha
mov
push
mov
push
aad
inc
lds
dec
test
fisttps
sub
push
cwtl
test
cs
and
sahf
mov
sub
cs
mov
arpl
xchg
in
mov
popf
dec
ja
add
add
mov
push
cmp
or
sub
fsubs
sti
adc
lods
cmp
sahf
daa
dec
sti
mov
fdiv
pop
sbb
sti
mov
data16
ret
add
xchg
enter
adc
imul
pop
mov
call
nop
xchg
jo
decb
mov
movsb
xor
xor
jbe
loope
push
ss
int
mov
lcall
pop
cld
insb
mov
cmp
add
mov
lcall
jae
lret
jge
fisttpl
push
rcrl
test
cwtl
shlb
jo
xchg
adc
jl
shrl
sbb
add
mov
pop
cmpsl
pop
insb
jbe
xor
sub
mov
repnz
fstps
shll
cmp
or
sub
roll
dec
loopne
push
adc
jge
ret
sbb
dec
mov
mov
cmpsl
or
adc
jb
inc
push
in
mov
adc
imul
cmc
test
sahf
or
sub
cs
int3
jo
inc
jne
jnp
test
pop
sbb
addr16
shll
fstl
mov
mov
imul
lea
jmp
mov
stos
jne
stc
popa
int
inc
mov
iret
pop
adc
push
inc
pop
das
push
fwait
sub
fwait
cmp
cwtl
mov
call
repz
jnp
sub
cmp
out
lret
out
jae
test
jl
jmp
push
cmp
jnp
lret
pop
jmp
xchg
fisubl
and
or
imul
int3
cs
ljmp
popf
sbb
sti
and
mov
jbe
pop
adc
or
add
leave
xor
mov
and
fdivrs
xlat
add
mov
bound
fsubl
push
pop
add
fsub
fstl
inc
aad
ret
ss
inc
dec
jo
pop
ja
les
test
jp
adcb
adc
add
xchg
mov
xor
negl
insb
lods
lock
mov
mov
cmp
fistl
adc
stos
adc
sub
dec
out
mov
js
inc
dec
in
imul
add
push
adc
daa
cmp
xor
adc
jns
inc
popf
cmp
lock
xchg
mov
push
aad
xor
cltd
or
pop
and
mov
cli
add
xor
lock
pop
jno
leave
mov
cmp
and
stc
push
add
xchg
fwait
int3
repz
sbb
fsub
sbb
jge
dec
dec
push
shr
shlb
push
jge
int
fs
cwtl
adc
testl
cmp
mov
gs
cltd
mov
mov
mov
cwtl
mov
out
sbb
push
iret
sub
and
jbe
mov
in
dec
stos
pop
add
sbb
add
dec
adc
pop
mov
loopne
pushf
pop
sub
int
add
out
mov
leave
add
jp,pn
leave
and
mov
add
jno
mov
jnp
rcrb
sbb
shr
out
xchg
dec
mov
mov
sbb
push
add
push
les
mov
xchg
push
pushw
sbb
ret
sub
mov
push
stos
jbe
mov
lcall
das
and
aas
jnp
leave
inc
and
fucomi
stc
mov
pop
data16
jecxz
rcrb
cmc
popa
cmp
inc
mov
int
jmp
inc
fsubr
xchg
dec
xor
push
test
mov
sbb
sbb
cmpsl
xchg
jb
pop
test
push
cmpsb
pop
mov
dec
mov
mov
popf
xchg
mov
in
and
mov
fstp
imul
imul
mov
mov
sub
mov
pop
test
cmp
and
cmp
in
scas
cld
ja
xchg
stc
in
mov
fiadds
jo
inc
adc
xor
add
mov
fs
shll
ljmp
sub
xchg
fbld
lret
xor
fcomp
pushl
push
cmp
ret
and
aas
sub
lods
add
fcmovne
xchg
out
fnsave
xor
jmp
mov
dec
mov
scas
pop
fwait
pop
xchg
jle
das
fisttps
loope
dec
pop
xor
dec
testl
add
dec
xchg
pop
xchg
imul
adc
mov
sbb
xchg
stos
jmp
in
gs
cltd
mov
mov
mov
cwtl
mov
scas
xchg
hlt
je
xchg
aad
divb
cmpb
dec
mov
cltd
pop
push
jb
and
std
mov
jne
add
shrl
pop
sub
insl
ljmp
int3
and
out
inc
sbb
add
in
add
sbb
cwtl
cltd
jle
cwtl
or
jae
nop
xlat
dec
sub
imul
push
jp
inc
mov
out
insb
repz
mov
jbe
xchg
add
push
sbb
lret
sbb
repnz
dec
add
mov
fcmovu
jp
push
mov
lods
push
negl
sub
mov
jecxz
pushf
test
xchg
ss
sub
mov
loope
xor
sbb
jl
aad
mov
inc
fsubp
xchg
lret
push
xchg
jae
and
xchg
jns
ret
or
shll
out
mov
movsl
test
push
mov
int3
inc
xor
xchg
enter
sbb
movsb
test
dec
or
mulb
das
jge
xchg
pop
cld
push
mov
gs
lds
ds
and
mov
adc
mov
cmpsb
lock
xchg
mov
ret
fwait
add
adc
iret
jns
and
lret
lcall
xchg
mov
dec
dec
in
test
shr
push
mov
or
pop
imul
mov
jecxz
mov
lods
xor
jmp
popf
dec
push
fsubrs
jecxz
or
dec
xor
jnp
jne
and
out
pop
fcoml
sbb
sub
ret
out
lret
lods
mov
adc
fwait
add
inc
mov
icebp
mov
mov
jmp
lret
inc
inc
mov
cmp
adc
dec
inc
cmp
cs
mov
sbb
or
flds
leave
inc
rcl
neg
mov
sub
out
pushf
pop
stc
mov
pop
push
dec
sbb
out
aaa
hlt
jp
dec
inc
sub
ja
and
xchg
loop,pt
aad
dec
hlt
subb
mov
call
mov
bound
push
rcrb
jbe
inc
mov
fs
mov
push
daa
mov
mov
xchg
lret
sbbb
inc
ficompl
aaa
mov
cltd
faddl
or
dec
data16
cmp
pop
lret
js
in
mov
ss
mov
lods
dec
shlb
push
lea
pop
nop
sahf
cs
mov
loope
popf
push
xchg
cmp
inc
mov
test
pop
cmp
call
and
mov
call
xchg
xchg
adc
imul
aam
adc
xchg
lds
mov
mov
fwait
add
aam
lds
cmp
pop
mov
xchg
adc
std
dec
push
cmpl
jecxz
and
stos
dec
push
sub
dec
popa
cwtl
nop
dec
sbb
sbb
add
pop
loop
shrb
jecxz
sbb
in
push
test
cwtl
xor
mov
cmp
jae
pushf
movsl
cltd
mov
les
cmp
lret
sbb
test
fisttpll
xchg
ficoml
xchg
mov
inc
pop
mov
or
dec
movsb
sbb
sysret
lcall
xchg
xchg
mov
sbb
sbb
sbb
in
mov
pop
sti
xchg
sub
xor
pop
mov
lock
das
lock
mov
popa
insl
lahf
inc
mov
xor
fcom
lea
aam
int3
mov
mov
sbb
add
mov
std
sbb
and
inc
push
mov
sub
rep
mov
loopne
mov
repz
fildl
add
jecxz
gs
dec
pushf
sti
aad
ja
ret
xchg
cmc
test
jno
pop
mov
lods
xchg
sub
adc
pop
out
enter
sub
mov
popf
in
mov
fldt
push
cmpsl
xchg
test
push
mov
inc
xchg
push
icebp
push
pop
xor
movsl
mov
aad
movb
cmp
push
pusha
mov
repz
leave
loop
cltd
mov
or
mov
sahf
add
leave
xor
mov
mov
es
cmpsb
sub
pop
sbb
mov
dec
mov
cltd
enter
mov
push
add
orl
mov
mov
push
sbb
xchg
push
mov
shll
sbb
outsl
aas
rcr
inc
pop
dec
lret
sahf
shrl
jno
popf
stos
pop
mov
loopne
call
lock
std
mov
xor
xor
loop
cmp
orb
mov
cli
dec
scas
cwtl
or
mov
js
xorb
std
lret
ljmp
lret
fucom
cli
mov
cld
sub
cmp
mov
sub
mov
imul
push
std
ss
arpl
lods
inc
pop
lcall
xchg
jl
popf
scas
leave
bound
jo
shlb
pop
je
lods
idivl
out
std
push
dec
shlb
clc
je
test
adc
and
push
mov
in
xlat
insb
mov
out
jo
mov
mov
jnp
call
adc
lea
sbbl
insl
lea
xor
xchg
aad
scas
testb
dec
gs
or
stos
out
aam
or
mov
fstpl
cmp
pop
mov
loop
mov
adc
insl
cwtl
dec
cmpb
lret
xchg
dec
pushf
int3
mov
lock
mov
in
dec
adc
icebp
and
xor
popf
out
in
mov
popf
imul
adcb
or
jnp
sbb
test
mov
and
imul
mov
xchg
sbb
pop
or
mov
cmc
and
pop
stos
in
imull
or
push
es
int
mov
jecxz
push
loope
aas
insb
jbe
jp
test
lds
jg
jnp
out
stos
xor
lea
xor
hlt
int3
mov
mov
sbb
ret
ror
stos
xchg
cmp
mov
pop
sub
bound
mov
adc
insl
cmp
in
ljmp
inc
push
mov
mov
nop
mov
fwait
test
sbb
add
lret
lds
inc
sub
insl
mov
dec
leave
pushf
adc
sub
scas
push
dec
mov
xor
mov
dec
cltd
adc
lods
movb
in
push
cld
mov
outsl
mov
xchg
movsb
inc
pop
imul
xchg
dec
cmpsl
adc
inc
idivb
scas
dec
xchg
psrld
test
fidivs
pop
aas
lahf
inc
jg
pop
fstpt
lods
repz
js
inc
loop
das
cmpsl
xlat
mov
pop
sub
push
adc
lcall
stos
sbb
cmp
pop
fisubl
pusha
sbb
mov
jle
popf
iret
iret
test
inc
cmp
mov
je
sub
cwtl
sbb
xor
adc
mov
int3
aas
call
jno
inc
aad
dec
add
cmc
inc
dec
add
clc
cmp
mov
jbe
mov
clc
or
and
imul
cwtl
arpl
sbb
xchg
or
gs
push
inc
pop
add
mov
push
lret
sahf
mov
test
popf
lret
mov
sbb
test
mov
sbb
jp
movsl
adc
leave
imul
cmp
lds
sbb
add
jno
sub
int
push
adc
loop
xchg
ret
and
pop
es
inc
aam
xor
add
xchg
mov
xor
aaa
sub
mov
cmp
dec
aaa
cmp
xlat
loopne
out
mov
dec
fidivrs
or
or
mov
push
dec
mov
pop
fisttps
shl
pop
pop
dec
inc
inc
fwait
call
pop
xchg
inc
les
test
push
jmp
inc
jl
sbb
shl
lock
dec
popa
pushf
nop
dec
sbb
adc
lds
push
mov
xor
in
dec
cmpb
sbb
adc
ss
repnz
fst
insb
pop
dec
rcrl
mov
std
out
popf
mov
mov
adc
fcomip
jge
push
in
imul
imul
xchg
or
or
xchg
sbb
dec
cwtl
jle
mov
jo
addl
loop
inc
mov
dec
lea
iret
inc
pop
adc
test
xchg
scas
adc
pop
data16
push
sbb
sub
sub
ret
mov
jne
outsl
mov
test
mov
aas
add
pop
hlt
mov
nop
mov
push
adc
outsl
mov
jmp
mov
add
mov
mov
mov
add
int3
loopne
movsl
dec
sbb
stos
ss
or
mov
push
adcb
roll
jo
xor
js
mov
faddl
scas
mov
rol
sub
and
movsl
stc
push
lahf
mov
sti
cmpsb
popf
jae
lret
iret
mov
rcll
lret
mov
ljmp
lcall
lds
loop
aad
fcoml
jbe
scas
jle
xchg
mov
mov
push
es
leave
ss
mov
or
mov
inc
daa
sub
jmp
mov
fidivrs
pop
rorl
mov
test
xchg
push
into
out
pop
fdivrl
inc
push
adc
into
jecxz
fnstenv
ja
out
stos
lcall
mov
mov
jge
outsb
sbb
jno
ss
shl
lcall
sbb
or
add
xchg
div
sub
popa
lea
mov
rolb
xor
pop
repnz
inc
mov
sub
pop
inc
add
sbb
mov
scas
sahf
sbb
stc
mov
cmp
je
test
sub
nop
lcall
loopne
divl
add
sbb
jmp
popf
adc
xchg
dec
xchg
mov
sbb
js
pop
fists
xchg
adc
or
inc
add
xorl
iret
out
jp
test
mov
xlat
mov
fsubs
jno
fisubl
shrb
push
cmpsb
inc
test
jp
inc
mov
fcomp
and
pop
jg
lods
rol
out
mov
cwtl
cmp
cld
jge
lcall
cld
int3
sbb
add
mov
mov
pop
pop
into
xchg
add
mov
sti
jnp
popf
sti
jo
sbb
pop
popf
inc
rcrb
pop
and
mov
sbb
shrb
sbb
les
push
cli
sub
xchg
dec
and
pop
cmp
icebp
clc
push
clc
sub
mov
je
xchg
rol
test
orl
add
pop
mov
mov
hlt
or
or
xchg
adc
test
mov
adc
jge
dec
movl
inc
fcompl
sti
and
pop
push
rcll
es
xor
mov
sbb
mov
or
mov
sbb
and
fbstp
cmp
out
push
or
std
fwait
mov
aas
add
mov
cmpsb
sub
movsb
mov
push
adc
xor
mov
add
inc
inc
mov
jle
loopne
jle
fwait
js
repz
sti
jno
cli
ret
pop
pop
xor
sub
inc
filds
mov
rcrl
add
pushf
iret
mov
xor
xor
ljmp
push
sub
mov
jge
dec
iret
jge
jae
fisttpl
lret
mov
xchg
test
or
daa
or
xchg
in
imul
lods
jb
xor
mov
fstl
jp
scas
pop
shrl
add
sub
sub
or
sub
mull
lcall
or
sub
fsubrs
lea
lea
and
sbb
shrb
cmpsb
inc
test
push
inc
mov
enter
jg
and
lret
fsubrs
dec
sahf
dec
movsb
lods
repz
ret
imul
mov
pop
add
loopne
jmp
jae
mov
dec
or
cld
xor
divl
pushf
int
and
mov
mov
and
int
sbb
adc
cmc
sub
sub
mov
sbb
xchg
dec
ds
loopne
push
leave
stos
mov
lret
fnsave
add
sub
int3
pop
jbe
inc
xchg
adc
nop
lcall
jecxz
sub
mov
aad
mov
add
inc
mov
enter
xor
sbb
jb
inc
and
sbb
arpl
outsb
out
add
sbb
adc
xor
jb
shll
ret
mov
inc
sbb
lock
mov
mov
pop
add
cmp
xchg
xchg
inc
pushf
inc
adc
sbbb
dec
test
sbb
sub
xor
lods
into
pop
stos
les
add
aam
test
mov
push
iret
subl
lock
mov
in
mov
xor
and
xor
push
inc
xor
push
cmp
lds
dec
dec
test
popa
lds
gs
sahf
popf
in
mov
mov
pusha
enter
les
stos
lret
sbb
daa
sbb
shlb
cmpsl
mov
jno
ss
lods
jle
mov
adc
mov
jl
fcmovne
push
pusha
out
push
mov
xchg
mov
inc
adc
jmp
xchg
dec
mov
dec
out
inc
les
xchg
stos
mov
xor
push
sub
int
mov
stc
out
xor
cmpsl
sbb
cltd
push
mov
inc
mov
inc
add
cltd
pop
addr16
jmp
adc
shrb
adc
int3
fnstcw
sub
cmp
and
mov
lods
sbbl
out
mov
sub
fs
aas
ljmp
aas
lret
movsb
pushf
dec
pushf
dec
xor
lods
mov
sub
test
push
cmc
mov
cmp
iret
sbb
mov
add
enter
mov
daa
or
test
pop
stos
rcr
jge
jae
mov
lods
jge
lds
adc
xor
adc
add
or
jb
adc
js
cwtl
add
mov
dec
icebp
jbe
ret
daa
xchg
int
adc
and
add
inc
inc
inc
pop
sub
adc
jns
enter
xlat
adc
clc
lcall
ficompl
out
xchg
dec
fwait
les
lret
or
xchg
test
arpl
cltd
fiadds
aam
cmpsb
pop
jbe
mov
or
inc
inc
push
inc
out
repz
ds
mov
test
sbb
inc
ret
lret
mov
rcrb
cmpsl
mov
cmpb
mull
adc
stos
mov
add
sub
lahf
mov
push
mov
mov
mov
jae
or
sahf
lret
sbb
daa
sub
imul
mov
jno
aad
mov
mov
push
cmp
xchg
mov
fwait
sbb
sbb
jge
arpl
sub
clc
mov
out
data16
mov
test
in
fwait
imul
stos
cmp
clc
les
and
out
enter
pop
mov
mov
lret
sub
movsb
mov
jne
jnp
popf
repz
mov
imul
aaa
lock
jle
cmc
sbb
inc
inc
mov
pop
bound
repnz
push
or
mov
jbe
add
ret
cmpsl
cmp
cwtl
lret
pop
mov
ror
fldt
push
jnp
pushf
dec
sbb
dec
sbb
popf
and
mov
pop
in
dec
pop
mov
pop
sub
les
xchg
fisttpl
dec
test
fistl
movsb
lret
lret
cli
push
xor
inc
xor
mov
into
scas
call
jmp
mov
sub
addl
aam
pop
sarb
and
mov
xor
xchg
and
es
push
insl
fwait
insl
lea
cmp
in
and
test
push
pop
jp
dec
mov
sbb
xchg
enter
sbb
gs
shlb
and
mov
rcrl
pop
mov
lods
sub
ja
ds
mov
jnp
mov
adc
jbe
adc
leave
sbb
and
jecxz
ret
popf
fsubl
adc
mov
ja
inc
in
dec
sahf
mov
arpl
jge
dec
jge
jmp
ror
lcall
add
ret
or
or
test
jge
cmp
or
push
fcoml
jb
cs
mov
aad
mov
cld
loop
lahf
lcall
inc
cli
or
repnz
lret
pop
inc
fisubs
inc
mov
add
mov
pop
mov
xchg
imul
mov
xchg
push
incb
test
xor
nop
dec
adc
or
xor
and
mov
dec
inc
ds
dec
inc
mov
push
imul
in
cmc
fdivrl
mov
repz
int3
lcall
push
into
loopne
mov
mov
arpl
cmp
cmp
mov
stc
or
or
push
hlt
mov
push
stos
mov
fdivr
fs
icebp
mov
and
lret
stos
cmp
lahf
inc
and
lds
lret
push
in
fisttpl
dec
dec
stc
mov
mov
je
mov
shl
cltd
pop
fsts
pop
daa
adc
lods
loopne
jl
rorl
imul
pop
mov
xchg
mov
aad
stos
mov
adc
lods
scas
pushl
jmp
mov
mov
or
adc
cmp
and
inc
fcomps
xchg
inc
cli
mov
push
pop
pop
imul
imul
es
rcll
jp
dec
mov
cltd
cltd
add
mov
enter
inc
outsb
imul
ret
xorl
sub
sub
fistl
add
loopne
cmp
or
adc
mov
jnp
sahf
orb
jl
cld
scas
shrl
add
jnp
mov
imul
mov
inc
loopne
std
lds
pop
jne
sbbb
ss
cmp
ret
aaa
div
aaa
sbb
xchg
adc
pop
xor
jae
in
ret
xchg
ficoml
jge
xor
adc
es
jns
inc
pop
in
cmpb
enter
or
movsb
mov
in
mov
mov
ret
lret
xchg
add
adc
mull
pop
repnz
and
mov
or
aad
fsubrs
cmp
push
or
cmp
xchg
cmp
out
jnp
xor
xor
mov
sbb
xor
push
adc
ret
add
test
ficompl
add
mov
iret
jp
ds
inc
adc
inc
sbb
outsl
arpl
push
lock
ljmp
sarb
popa
cwtl
ret
insl
mov
clc
stos
jb
pop
mull
jno
iret
xchg
pop
xchg
scas
mov
sti
fisubl
dec
decb
test
push
cmp
ret
xchg
addb
sub
mov
inc
ret
push
fsub
sbb
popf
push
fwait
cmpsl
push
cmpsb
fucomi
push
nop
jle
xor
std
loope
or
sub
andl
add
cmp
ret
jns
mov
sti
stc
xor
movsl
ret
mov
inc
inc
mov
mov
fmul
pop
cmp
jne
popf
shrl
inc
inc
mov
shrb
and
fsubr
jns
mov
push
out
int3
add
mov
xchg
imul
lds
ds
das
aaa
in
outsb
enter
addb
cmp
cli
cmpsl
ret
inc
xchg
movsb
loop
lcall
dec
sbb
ret
aaa
stos
shlb
movsb
pusha
inc
xor
mov
test
pop
lret
rorl
enter
test
ret
jo
xchg
shr
stos
lds
mov
dec
cli
test
ss
xor
xor
std
into
sbb
fiadds
inc
popa
je
sub
pop
push
pop
cmp
adc
cli
andl
add
or
popa
lcall
push
movsl
ret
enter
stos
bound
mov
xor
loopne
cmp
leave
mov
je
or
ret
mov
dec
push
jle
xchg
sub
and
dec
mov
pop
sarl
dec
adc
mov
inc
in
test
push
cmc
sbb
mov
pop
xchg
mov
mov
adc
sub
stc
cmpsl
sbb
cwtl
jno
aam
shl
and
inc
dec
mov
adc
lods
out
inc
jmp
repz
ljmp
sub
mov
sub
or
xchg
fcmovb
mov
enter
cmp
sbb
fiadds
inc
push
js
xor
adc
fiaddl
mov
mov
dec
popl
add
jge
sti
adc
or
sub
cmpsb
fsubrs
pop
fwait
sub
mov
lods
sti
repz
mov
inc
dec
mov
sbb
adc
dec
movsb
fcmovb
popl
adc
pop
adc
add
aam
sti
mov
adc
jg
mov
mov
pop
mov
mov
mov
rorb
ret
fisttpl
movsl
ret
outsb
jle
lret
mov
hlt
mov
fimuls
cld
adc
sbb
sbb
scas
lahf
popf
jmp
stc
pop
fwait
cmp
or
mov
push
sbb
xchg
lcall
std
xor
push
lahf
mov
aad
mov
add
sbb
ljmp
sub
sbb
clc
fwait
jns
je
arpl
rolb
sub
dec
cwtl
hlt
jle
pop
adc
xchg
inc
pushf
cli
mov
pop
daa
fyl2xp1
mov
mov
push
gs
insl
out
test
fdivrs
data16
pusha
xchg
test
int3
pop
and
mov
sbb
xchg
mov
and
push
xchg
mov
ret
imul
sbb
inc
arpl
aas
aas
jae
arpl
cmp
sti
jae
mov
pop
jbe
xchg
shl
xor
aad
pushf
ret
pop
cmp
and
iret
inc
mov
sbb
les
inc
mov
adc
test
pop
lcall
les
jl
or
hlt
inc
pop
jnp
add
imul
movsb
jbe
lea
jp
inc
xor
aad
lods
jge
or
bound
xor
nop
cmp
sub
andl
stos
clc
jb
adc
push
dec
inc
mov
push
fbstp
adc
std
inc
mov
cmpsb
fsubrs
pop
fildll
jp
inc
push
mov
std
jb
inc
stos
enter
pop
pushf
jbe
daa
hlt
je
nop
add
bound
push
dec
mov
cltd
fisubs
in
xor
and
aas
mov
push
roll
imul
pusha
sahf
ds
dec
add
cs
add
cltd
js
lock
shlb
test
scas
leave
fsubrl
adc
jle
ss
sbb
and
les
sbb
sub
pop
fs
fisttps
enter
cmp
popf
pop
sbb
xor
xchg
or
xchg
add
pop
pop
and
jns
leave
add
ss
lahf
scas
jg
or
repz
pushf
inc
stc
sbbl
orl
add
inc
mov
mov
mov
clc
fdivrl
test
addr16
xabort
sbb
jb
outsl
daa
movsb
hlt
pop
sub
sbb
or
sub
movsb
out
xlat
repz
pop
mov
lret
mov
dec
loopne
in
mov
test
jae
addr16
in
fists
jnp
mov
sbb
sbb
sbb
and
in
divb
inc
mov
xor
shll
push
add
lds
fsubr
mov
inc
fs
fisttps
jae
fisubl
gs
test
jge
xchg
add
xchg
pop
dec
roll
stos
int
sbb
pushf
xchg
mov
les
sbb
pop
test
scas
fistps
fprem1
cmp
inc
shll
cmp
adc
dec
adc
in
jge
xchg
scas
mov
adc
and
xrelease
mov
lea
lret
in
jnp
fcom
shlb
scas
cmpsb
inc
test
jp
inc
mov
fldl
push
inc
mov
dec
inc
ds
dec
inc
mov
cwtl
cmp
shrb
mov
mov
pop
dec
pop
jbe
movsl
or
pop
dec
adc
pop
mov
loopne
out
mov
stc
sti
mov
repz
mov
hlt
mov
iret
mov
fstpl
rcrb
inc
roll
sub
inc
dec
mov
cmp
lods
pop
mov
clc
mov
mov
je
xchg
rol
test
inc
sbb
lret
fwait
int
mov
mov
xchg
fcmovb
add
lret
fldcw
xchg
pushf
shr
fwait
nop
leave
lret
call
int3
mov
icebp
jmp
mov
and
xchg
adc
add
inc
cwtl
adc
stos
stc
repnz
or
push
rorb
add
and
negb
mov
popa
cmc
shl
lods
push
sub
hlt
xor
test
mov
int
mov
nop
cmc
xor
pop
cmp
mov
arpl
lea
movsl
imul
cmpsl
loope
cli
sti
mov
jae
push
inc
ss
sbb
inc
and
stos
jmp
jg
mov
and
iret
inc
loop
sub
and
jno
sarl
dec
sbb
loop
cli
mov
leave
test
mov
rorl
fisttpll
mov
les
inc
scas
ja
aad
pop
mov
inc
lcall
push
leave
jnp
dec
xor
pusha
mov
imul
mov
out
cli
iret
andb
inc
sarb
add
ljmp
stos
outsb
sub
add
jbe
inc
sbb
cmpsl
adc
xabort
or
inc
cltd
add
mov
pop
or
leave
sbb
mov
rorl
ja
sbb
dec
mov
sbbl
add
ret
mov
cwtl
in
inc
push
mov
xchg
mov
lods
jmp
pop
lret
leave
icebp
lock
sahf
ret
mov
test
popa
sbb
xor
mov
xor
rorl
dec
add
lds
sbb
mov
test
mov
mov
xchg
fcoms
and
mov
or
addr16
pop
outsb
shrb
mov
movsb
addb
jecxz
fwait
popf
loop
cmpsl
dec
push
pop
call
repnz
popa
or
sub
outsb
and
rorb
movsl
mov
test
aam
inc
mov
stc
repnz
or
sbb
adc
add
fsubl
jns
inc
out
add
mov
pop
inc
in
leave
sbb
pop
subb
mov
xchg
out
sub
fnstcw
pop
pop
dec
add
int
pop
lods
inc
mov
or
repz
in
mov
in
clc
add
add
mov
adc
lret
inc
mov
fwait
out
mov
sbb
adc
mov
push
lret
push
test
test
nop
sbb
mov
push
jnp
jno
scas
mov
aaa
ljmp
push
sbb
ret
mov
inc
lret
or
inc
cmp
test
aaa
push
xlat
jle
mov
push
enter
lahf
scas
movl
out
adc
xchg
dec
repnz
add
leave
test
add
cmp
xor
mov
dec
xor
lret
jmp
mov
lret
inc
and
fidivrs
dec
stc
shlb
outsl
xchg
lret
bound
push
or
mov
and
mov
int
mov
test
sti
mov
or
mov
xchg
sahf
out
pop
fucomip
repz
mov
jecxz
push
fsts
dec
pop
add
adc
lds
push
sbbb
arpl
test
jb
mov
dec
in
pop
inc
lahf
push
sub
mov
sbb
ljmp
push
fwait
arpl
das
jno
inc
push
and
ret
add
das
or
imul
adc
add
xor
pushf
shlb
lret
mov
jnp
jle
scas
pushl
jmp
mov
or
std
sub
rclb
aaa
andl
ret
movsl
xlat
insb
imul
add
lret
xchg
cltd
loop
pop
fsubs
jge
dec
pop
mov
test
enter
inc
add
fwait
les
mov
push
inc
mov
pop
mov
pop
adc
aad
jns
fiaddl
les
pop
pop
dec
sbb
jae
movsb
imul
loope
in
ja
nop
xor
mov
adc
push
mov
push
pop
or
xor
in
mov
je
test
movsb
adc
ret
dec
scas
sti
pop
les
test
xchg
fadds
invd
pushf
les
or
xchg
jl
roll
xchg
outsl
sub
xlat
mov
push
inc
pushf
shr
fwait
xchg
lahf
pop
jmp
bnd
enter
pop
push
imul
adc
add
inc
inc
pop
adc
xchg
jge
repz
cwtl
dec
and
push
fdivrs
xor
inc
jge
imul
push
popf
rep
cmp
fcomp
pop
fsubl
gs
icebp
mov
sbb
aam
dec
xchg
xchg
cltd
ja
inc
mov
push
dec
mov
cltd
stc
inc
cmp
mov
lods
fwait
mov
ljmp
mov
iret
in
xchg
int
outsl
rcr
dec
jnp
mov
mov
clc
jecxz
sbb
and
in
or
sub
fcmovbe
sbb
jno
aad
sbb
and
sbb
xor
inc
mov
test
stos
js
loopne
dec
sub
cmpsb
inc
cmp
jae
xor
aam
out
xchg
int
xor
mov
iret
jnp
pop
cld
xor
adc
aad
leave
push
mov
leave
in
test
xchg
leave
loop
and
mov
inc
aam
js
or
push
mull
pinsrw
sub
xchg
inc
stos
push
mov
sahf
inc
ret
stos
pop
inc
mov
cmp
iret
pusha
mov
cmp
adc
push
adc
or
dec
dec
mov
cwtl
pop
cmpsl
and
jnp
mov
negl
add
shll
or
js
push
push
pop
adc
jno
or
jp
insl
call
mov
inc
sbb
insl
pushf
ret
cmpsb
xchg
adc
sbb
dec
and
jne
les
fisubl
and
scas
mov
fisttps
add
jge
push
cli
push
loop
cmpsb
jno
lret
inc
cs
roll
adc
stos
pop
xchg
xchg
sbb
mov
and
mov
rcll
sbb
mov
mov
aad
push
cmc
outsl
pop
add
push
mov
mov
mov
or
dec
add
add
pop
movsb
mov
or
push
sbb
cld
push
sti
test
sbb
in
mov
rcrb
xchg
sub
jecxz
lahf
jmp
and
inc
loope
adc
xchg
mov
and
es
into
outsl
mov
jle
mov
aaa
add
ficomps
sarb
sahf
adc
cmpl
sbb
imul
ss
jmp
ss
sbb
mov
dec
inc
testb
enter
test
mov
shlb
movsb
imul
cli
ss
fiaddl
repz
add
and
adc
stos
jne
dec
add
das
sub
lret
lds
sbb
pop
ds
jle
cmp
mov
in
mov
int
jo
dec
rclb
insl
ret
mov
jle
js
sbb
pop
call
rclb
push
mov
push
mov
jp
test
imul
ret
fld
call
jae
sbb
jecxz
adc
adc
movsl
ret
push
xchg
dec
lret
scas
lret
inc
xor
jb
jmp
fiadds
add
call
les
inc
mov
into
fwait
lahf
lds
bound
lock
inc
sbb
jg
add
aam
jge
cltd
mov
repz
sbbb
cli
icebp
ss
shl
dec
sbb
add
sub
jne
js
push
sbb
sahf
popf
stc
mov
mov
je
mov
or
xchg
push
sbb
pushf
inc
pop
sub
cmp
dec
mov
mov
add
pop
call
ret
pushf
shr
fwait
xchg
adc
pop
jo
or
loop
sbb
add
sbb
ljmp
jge
dec
jmp
stos
sbb
movsb
pop
push
leave
inc
jge
imul
stos
cmp
call
add
dec
lret
jae
sub
inc
mov
call
das
leave
mov
shrb
loopne
xor
int3
lcall
in
and
pop
mov
jno
sub
mov
inc
sbb
outsl
fildl
popa
mov
stos
mov
lds
xchg
mov
mov
jb
cmp
dec
sbb
sbb
test
cmp
pushl
outsl
mov
les
test
or
sub
aaa
mov
adc
sub
ficoml
mov
js
jbe
mov
mov
xchg
out
ret
outsb
mov
or
repz
insl
pop
bnd
dec
cmc
enter
or
movsl
mov
mov
and
or
or
adc
xchg
les
pop
inc
sbb
mov
mov
gs
adc
or
push
adc
push
mov
mov
push
jae
cltd
pop
decl
mov
ror
imul
sbb
std
arpl
mov
je
loopne
add
fld
negb
out
mov
mov
outsl
add
add
push
add
jbe
call
mov
mov
aad
dec
movsb
sub
push
sub
jmp
ret
mov
fst
pop
js
cld
sub
imul
je
lahf
jae
aam
cmp
ret
xchg
xchg
leave
mov
sub
ljmp
jns
inc
pop
mov
jmp
adc
push
add
into
scas
jg
js
xor
xor
cmc
xor
add
mov
repnz
rolb
sub
movsb
test
push
mov
fildll
jae
inc
js
imul
cmp
and
pop
pop
mov
jecxz
adc
pop
jmp
mov
and
fcoml
inc
in
dec
stos
lcall
mov
repz
xchg
or
ss
sub
inc
imul
jmp
in
stc
ds
mov
movsl
ret
inc
dec
pop
push
sbb
cmp
dec
lock
faddl
sub
mov
sbb
out
jle
shrb
pop
sbb
scas
cmp
out
mov
adc
subl
mov
or
mov
or
add
iret
daa
jecxz
mov
lods
push
pop
mov
pusha
mov
mov
ffreep
mov
mov
cmp
jle
js
sbb
stc
or
xor
dec
mov
adc
test
pop
xchg
and
test
popa
lcall
cltd
rcrb
cmpsl
sti
fisttpl
ja
outsl
dec
test
sbb
stos
sub
jmp
jmp
outsb
imul
sahf
gs
xor
scas
scas
pop
stos
les
scas
mov
push
test
lock
xor
sbb
push
rcrl
mov
jbe
call
mov
and
dec
out
xchg
push
stos
les
sbb
repnz
es
fucomp
fs
fisttps
add
rcr
xchg
sbb
adc
mov
inc
sbb
xor
xor
add
xchg
xchg
sbb
lods
jbe
fcom
and
icebp
mov
js
popf
jecxz
pushf
repnz
and
test
int
mov
cmpsl
mov
xor
rol
xor
sti
xchg
and
out
int3
popa
sub
jnp
enter
insl
sahf
push
lds
enter
add
sub
dec
orb
jecxz
adc
pop
dec
jo
ja
mov
loopne
sub
imul
dec
cld
in
stc
ds
hlt
mov
inc
mov
add
sub
xor
popf
pushf
fs
clc
lret
data16
pushf
dec
and
jno
fistpll
fldenv
mov
xchg
lahf
popf
les
shrb
je
jmp
ss
daa
mov
jge
dec
movsl
shl
adc
fdivs
xchg
lock
aad
mov
jmp
sahf
pop
fs
loop
inc
mov
test
or
mov
mov
xor
dec
shlb
pushf
xchg
mov
mov
add
ror
ret
fwait
lea
lahf
out
call
mov
stos
xchg
enter
sbb
ja
out
test
jne
dec
movsb
nop
repz
adc
xchg
pop
push
mov
mov
repz
cmp
std
jl
ret
pop
lds
ds
mov
in
mov
sbb
outsl
add
xor
add
lods
mov
test
rcrl
sbb
sbb
sahf
push
sub
sub
inc
fists
fimuls
lret
insl
mov
testb
jae
in
adc
mov
movsl
push
cmpb
movsl
mov
cld
jp
add
sbb
lods
jle
stc
ret
mov
cmp
and
cmp
adc
sbb
xchg
add
sbb
mov
push
mov
cmp
sti
dec
mov
gs
imul
pop
fisubs
mov
mov
cmp
inc
mov
hlt
js
cmc
or
adc
jns
jns
out
stos
stc
jne
dec
mov
in
xor
ret
push
dec
mov
cltd
addr16
cs
or
rcrl
imul
iret
dec
jg
sbb
ds
mov
jnp
movsb
rorb
pop
out
mov
adc
lret
inc
sti
or
test
insb
rcrb
jmp
leave
mov
sbb
clc
iret
sahf
sbbl
cmp
filds
clc
xchg
dec
das
repnz
sub
js
mov
ljmp
sbb
pop
mov
in
dec
lods
push
sub
inc
sbb
lods
fucomi
repnz
leave
or
mov
fisubs
pop
subb
xchg
fwait
aaa
mov
sbb
mov
lahf
adc
mov
xchg
cltd
pop
sbb
daa
sti
repz
adc
stos
enter
and
jl
push
mov
int
jle
push
iret
mov
pop
ds
mov
dec
add
mov
popf
stc
mov
jmp
pop
fists
pop
sahf
repz
movsb
dec
int3
cmp
adc
pop
sti
lsl
push
cs
inc
test
cmpsb
arpl
push
mov
cld
mov
psubd
int
lret
jae
fisttpl
mov
inc
cmp
pop
xor
lret
imul
inc
cmp
scas
mov
lcall
inc
pop
in
ljmp
cmpsl
push
jl
shrl
mov
ss
xcrypt-cbc
cmpsl
xlat
in
jecxz
arpl
rcrb
rorl
push
rorl
push
fsubs
or
or
ja
mov
jae
stos
mov
fxch
mov
and
mov
mov
add
xorl
xchg
pusha
mov
mov
jle
inc
pop
fdiv
js
loop
movsl
push
adc
in
cmp
pop
add
jmp
jge
jle
jmp
lret
jecxz
popa
mov
pop
add
rcrb
es
sbbb
fld
jae
into
dec
xor
rorl
mov
inc
and
mov
sub
lods
xchg
push
stc
ss
into
je
mov
sbb
ret
or
or
subl
outsb
les
nop
repnz
jbe
das
decb
cltd
lds
xchg
pop
xlat
in
sbbl
dec
lea
nop
sbb
add
sbb
or
les
xlat
mov
add
mov
mov
xchg
insl
out
adc
jp
sti
xlat
xchg
shrb
mov
shlb
cmp
push
aas
add
push
adc
bound
cmc
mov
mov
stc
dec
xchg
mov
shr
pop
insb
sbb
pop
movsl
imul
fucomip
repz
sti
pop
pop
iret
subl
lock
rcrb
rcrl
divb
jno
inc
sbb
shlb
sbb
les
movsb
shrb
dec
stos
push
in
dec
mov
dec
rclb
xchg
pop
fucom
jae
inc
rcr
xchg
sbb
xchg
add
add
stos
cmc
lock
lcall
jle
mov
sub
mov
jmp
popf
push
rcrl
dec
iret
xor
mov
add
pop
sub
mov
andl
xchg
push
inc
cwtl
adc
and
xchg
icebp
jbe
pop
test
gs
imul
lahf
xchg
cltd
out
cmp
shlb
mov
mov
je
sbb
int3
inc
add
sbb
loopne
cmc
mov
adc
adc
adc
int
xchg
ja
lret
in
cmc
fbstp
jnp
inc
jmp
add
inc
sbb
inc
dec
cmp
addr16
faddl
or
xor
stos
rcl
mov
inc
in
lret
sbb
sub
scas
movl
std
ss
ljmp
push
sbb
roll
fsts
pop
daa
push
pop
push
stos
jge
movsl
and
scas
in
inc
or
inc
pop
mov
loope
fstl
pop
cmpsl
jecxz
adc
lahf
fbld
loop
xchg
adc
rolb
push
inc
mov
xchg
and
mov
push
icebp
test
mov
xchg
imul
test
xchg
cltd
into
out
pop
fsubl
gs
stc
dec
add
pop
pop
pop
push
dec
dec
mov
fdivrs
dec
aaa
shrb
in
cmc
fiadds
shll
out
mov
loopne
stos
aas
xor
lahf
ret
loopne
pop
adc
clc
inc
mov
insl
repz
mov
cltd
jo
repnz
xchg
sbb
dec
inc
sbb
sub
adc
ret
pop
faddl
adc
mov
fisttps
sahf
mov
push
sub
arpl
mov
lahf
push
fucom
out
arpl
test
and
push
push
stos
jge
sbb
ret
cltd
fsub
mov
cltd
lods
int
mov
pusha
dec
stos
out
fcmovnb
push
cmp
popa
or
sub
dec
int3
shlb
push
xorl
sbb
cmp
addr16
insl
adc
jmp
aad
pop
cmpsb
cmp
popf
and
cmp
fstl
fwait
scas
add
cmp
push
aas
add
push
adc
mov
lret
dec
sahf
dec
jo
idivb
rcrl
push
sahf
xor
sbbl
dec
lahf
in
cld
add
scas
jo
or
int
test
sahf
and
mov
sbb
arpl
adc
mov
and
testl
popa
sub
fidivrs
lods
mov
mov
ret
sbb
dec
cmpsl
xchg
test
inc
pop
xchg
ret
xchg
xchg
stos
xchg
lcall
inc
lcall
jle
mov
cmp
pushf
shr
xchg
sahf
ficoms
fwait
push
jo
sub
icebp
and
insb
je
movb
dec
fsubs
cwtl
or
and
dec
and
jns
dec
xor
jp
mov
popf
js
rcrb
mov
xor
call
mov
xor
loop
push
je
test
add
mov
incb
shrb
loope
jne
dec
mov
repz
arpl
int
pop
movsl
rcl
lahf
sbb
in
jge
divl
sarl
dec
inc
call
or
inc
sbb
das
or
daa
mov
pushf
fs
lret
inc
in
scas
rcl
pop
sbb
int
inc
cmpl
stc
mov
lock
push
inc
cmp
leave
setne
nop
lcall
std
adc
xchg
inc
pop
call
add
inc
test
jmp
fwait
idiv
fcmovnu
fists
sub
aaa
adc
addl
jns
xchg
icebp
pop
test
cltd
cmp
xchg
sub
repz
mov
push
push
insl
cmovae
int
push
fldz
idivb
and
mov
popf
out
clc
jg
and
loope
pop
mov
imul
mov
jns
aaa
cmp
sbb
push
cld
cmp
mov
mov
jae
iret
cmp
hlt
movsl
ret
inc
stc
or
or
pop
adc
sbb
cmpb
adc
mov
and
aaa
mov
pop
hlt
mov
scas
mov
andb
cmc
std
sub
xchg
adc
jae
xchg
add
adc
popa
fisubl
loope
pop
aas
sbb
jno
and
mov
mov
fistl
xchg
jecxz
or
xchg
fs
jge
in
arpl
inc
push
sbb
mov
adc
and
fs
add
pop
pop
xchg
cmpsl
jnp
out
xchg
lods
lahf
cmpsl
jnp
test
mov
mov
in
imul
out
leave
cmpb
or
jle
mov
aas
adc
jnp
mov
dec
sahf
dec
mov
repz
mov
mov
xchg
dec
addl
cmp
lret
in
cmc
adc
mov
or
add
mov
pop
cli
or
roll
pop
sub
popa
lcall
jno
fistpll
xchg
xchg
dec
sbb
dec
push
dec
subl
loop
push
rcll
test
fcoms
inc
cmp
push
imull
push
mov
mov
fcoml
sbb
or
push
rcr
bnd
jg
mov
andb
xchg
add
xorl
mov
out
jp
outsb
cwtl
dec
and
adc
mov
data16
cmpsb
shlb
fdivrl
dec
mov
or
lret
mov
rorb
test
xchg
push
out
jns
lcall
lcall
call
icebp
insl
lcall
loopne
mov
repz
sti
ja
inc
rcr
add
pushf
rcl
or
je
hlt
sub
aad
pop
cmpsl
jno
dec
and
mov
mov
ss
rcl
imul
xlat
dec
push
lret
mov
dec
cmpl
rep
mov
sarb
xchg
xor
jge
push
insl
insb
jge
dec
movsl
adc
sbb
fistl
xchg
sbb
lds
cld
add
lcall
test
and
or
xor
or
xor
gs
adc
cmp
mov
push
xchg
imul
xor
xchg
dec
cs
outsb
or
pop
repnz
out
jmp
jecxz
and
add
xchg
sub
test
loopne
addl
fcmovnb
adc
into
add
imul
in
jp
std
mov
ret
scas
add
dec
push
pop
mov
sbb
cltd
mov
fnsave
js
movsl
aam
rcrb
xor
jne
vandnps
jns
mov
shl
hlt
adc
pop
lret
xchg
insl
jae
lods
repnz
xor
hlt
cltd
les
cmp
add
ret
std
mov
les
pop
xchg
push
jecxz
mov
lahf
leave
ficoml
sahf
fimuls
out
push
repz
add
andl
insb
xor
add
or
iret
and
repnz
inc
rcll
jp
cwtl
push
call
inc
mov
test
enter
jb
inc
cltd
out
cmp
leave
mov
sub
ficoms
pop
xchg
dec
dec
mov
rcl
cmp
cs
jle
popa
sbbl
push
shr
repz
adc
imul
xor
mov
xchg
sub
call
in
inc
rcrl
add
or
sub
pop
pop
mov
faddl
sub
mov
cmp
fwait
jo
stos
rcl
adc
inc
and
les
lods
leave
lods
sbb
ss
dec
rclb
scas
shlb
xor
add
add
lock
or
xchg
imul
jge
pop
mov
sub
add
inc
cltd
pushf
adc
push
ret
xchg
dec
data16
jp
cs
ffree
div
sbb
dec
sbb
xchg
sbb
movl
pop
cmp
or
pop
sub
clc
data16
push
xor
push
fwait
mov
push
inc
popf
push
mov
mov
mov
sti
and
xchg
xchg
add
leave
sbb
add
jge
dec
cmpb
movsb
out
cwtl
sbbb
cmp
in
into
cld
xchg
les
inc
mov
push
jae
in
aas
dec
fsubr
hlt
lock
add
test
ret
test
pop
mov
lods
xchg
sub
adc
fldenv
sbb
cld
mov
xchg
stos
jo
and
mov
sar
xchg
xor
nop
test
dec
mov
or
xor
stos
cmc
add
push
push
cltd
fcoml
inc
pop
push
adc
pop
enter
repz
out
js
inc
fdivrl
shll
pop
or
les
push
rorb
cmc
addr16
sbbb
xchg
cmp
mov
aad
incb
xchg
push
in
les
mov
loop
out
je
fcoms
hlt
je
test
cmpb
jmp
pop
bnd
jle
rcll
and
pop
xchg
in
data16
dec
inc
pop
add
leave
sbb
imul
jbe
add
lds
loopne
push
adc
mov
jmp
negb
sbb
jge
rol
or
aam
push
mov
xlat
sahf
cmp
flds
cld
aaa
js
loopne
mov
ss
aam
cmp
cli
xchg
add
inc
and
mov
jns
dec
inc
pushf
sub
adc
inc
inc
ljmp
arpl
sbb
lds
inc
mov
rol
loope
mov
add
dec
sarb
repnz
les
and
sub
sub
jmp
lea
mov
cmp
fdivs
mov
clc
int3
orw
in
aam
call
andb
movsb
lea
mov
adc
arpl
fisubl
into
fildll
sbb
xchg
decb
jae
sbb
js
jns
add
xor
pop
add
js
sub
jl
repnz
stc
jbe
and
mov
sbb
jne
les
cli
movsb
cmpb
jno
pop
push
lock
jle
fs
frstor
jecxz
in
dec
mov
cmp
mov
mov
xchg
add
xchg
jl
rorl
outsl
cmp
ljmp
xchg
jbe
pusha
inc
jecxz
xchg
cmp
js
and
cltd
pop
fs
loop
jg
or
xor
idivl
iret
push
mov
or
stos
aam
mov
jnp
inc
push
mov
sub
push
mov
sbb
xchg
fistpl
jb
pop
fsubs
xor
mov
sbb
sbb
popa
xchg
cltd
dec
push
and
cmp
imul
dec
mov
jbe
mov
pushf
idivb
shlb
jge
iret
cmpl
dec
lahf
ljmp
outsl
xor
mov
sbb
cltd
mov
and
cwtl
lret
movsl
ret
sbb
push
es
stos
mov
pop
stos
push
and
mov
mov
ret
mov
sbb
cli
in
cmc
fsts
add
scas
fmuls
das
or
imul
ss
mov
shrb
arpl
cmp
jp
pusha
mov
cld
or
fcmovnu
lahf
adc
mov
fildl
or
add
ja
in
test
push
jmp
mov
xchg
mov
cmpsb
movsl
out
addr16
sahf
lea
mov
pop
sbb
hlt
je
or
mov
imul
mov
shl
mov
pop
loopne
cltd
test
loopne
mov
lock
lock
jecxz
xor
cltd
adc
push
sbb
xchg
mov
mov
ficoml
push
push
and
test
fisubl
jae
cmp
fistpl
repz
scas
cmp
mov
test
push
and
push
scas
xchg
ficoml
outsb
mov
and
dec
mov
movb
ret
fstl
pop
cmpsl
data16
pushf
lods
jg
leave
in
mov
xchg
push
pushf
repnz
mov
in
outsb
inc
mov
cmp
test
xchg
and
cmp
push
fisubl
adc
ret
push
cmp
call
icebp
inc
cltd
enter
sahf
jnp
pop
add
adc
sub
mov
jne
dec
movsb
pop
mov
mov
pop
fnstsw
sarb
mov
lods
sti
pop
adc
out
sti
mov
repz
add
filds
das
sub
xor
cmpsl
mov
testb
xchg
and
sbb
test
repnz
test
jmp
push
in
fsincos
sahf
popf
mov
mov
mov
arpl
jl
daa
dec
push
sbb
cmp
xchg
stos
lds
xchg
lea
adc
pop
test
lods
inc
sbb
mov
cmp
js
imul
rcrb
fadds
mov
push
popl
xchg
jle
loope
and
mov
mov
pop
cmpsb
ret
mov
imul
mov
sbb
out
scas
es
sub
jmp
adc
dec
mov
dec
imul
sub
adc
push
lret
push
orl
aam
lret
jecxz
push
andl
jb
repnz
push
dec
bound
pushf
inc
ss
movsl
mov
idivb
les
fsubrs
fldcw
ffree
pusha
or
lods
mov
mov
jmp
iret
ljmp
adc
xchg
lret
stos
lds
mov
cmp
jnp
push
push
and
sub
push
test
pop
or
pushf
repnz
ret
rcrb
les
xchg
inc
test
aam
pop
repnz
and
dec
les
push
xchg
mov
in
add
stos
mov
sbb
or
mov
call
test
out
sub
dec
push
and
mov
mov
xchg
cmp
mov
sarl
jns
aaa
sub
divb
pop
scas
les
repz
mov
addr16
add
mov
into
jp
test
inc
sbb
inc
sub
add
out
pushf
pushf
dec
cmpsl
mov
hlt
lods
sbb
and
and
sbb
xchg
pop
popf
jae
cmp
lahf
jae
out
imul
pop
or
sbb
leave
out
imul
dec
or
xchg
fucomip
cmp
out
fcoml
mov
cmpsl
pop
push
imul
push
ds
icebp
icebp
filds
mov
add
bound
add
hlt
dec
aam
pop
aam
push
sbb
jmp
cmp
mov
mov
fsubs
push
stos
xor
sbb
or
cs
hlt
jns
out
mov
enter
dec
push
or
sbb
mov
mov
testl
call
xor
cmp
mov
and
push
sbb
stos
jo
or
add
and
mov
jg
push
test
cwtl
lret
pushf
dec
and
jne
les
test
mov
mov
dec
popf
mov
loope
xor
xchg
in
mov
jmp
dec
mov
sbb
lret
mov
xor
mov
lock
loope
pushf
fstl
pop
popl
lahf
inc
lahf
scas
jg
leave
subl
sbb
jo
ja
js
or
orl
test
dec
daa
xor
push
std
out
rcrl
test
push
scas
xor
push
fisubl
and
xor
pop
fsubl
es
jne
or
jmp
dec
dec
mov
inc
jnp
mov
push
daa
cmc
xor
mov
lods
ds
dec
cmpsb
ret
adc
pop
idivl
cmp
mov
jecxz
inc
add
enter
dec
lock
movsl
jbe
adc
mov
aas
repnz
mov
pushf
add
jns
sbb
test
xor
out
fists
sbb
fs
fbld
sub
cmpsl
xchg
cltd
fisubl
les
adc
sahf
pop
xchg
rorl
xchg
fcmovnb
cmp
push
jb
lods
pop
or
lds
inc
stos
mov
pop
fwait
pop
jo
or
cmc
and
cmp
rcrb
test
dec
adc
js
je
mov
add
jp
sub
cmpsb
fsubrs
lods
in
xchg
enter
mov
xlat
imul
xor
loopne
adc
or
inc
mov
inc
mov
daa
fstl
inc
test
cmc
adc
fdivs
cltd
sub
ss
mov
imul
das
lret
jecxz
insl
mov
adc
jbe
adc
xchg
and
lret
xchg
dec
pushf
inc
stos
xchg
adc
mov
pop
sbb
shrl
dec
sbb
cli
movb
xchg
mov
popf
lret
mov
adc
test
jo
in
ljmp
push
outsb
les
push
mov
xor
jmp
sbb
aad
mov
jmp
fists
fcmovnu
fidivrl
subl
xor
inc
add
adc
mov
mov
fnstenv
imul
add
cmpsb
jnp
jp
cmp
imul
enter
or
xor
sbb
sub
lret
gs
das
in
cmc
hlt
test
popf
lea
iret
inc
mov
push
jl
jle
loopne
clc
into
fwait
jg
in
repz
hlt
mov
mov
pop
fwait
aad
or
or
or
aam
jnp
cmp
mov
and
lret
pop
stos
push
cmpl
push
pop
outsb
bound
scas
mov
test
dec
pop
or
test
xchg
sbb
sbb
or
mov
stos
xchg
data16
sbb
sub
stc
mov
jecxz
fwait
lret
cmpsl
loope
mov
scas
push
bnd
jg
mov
adc
or
mov
ret
or
sub
xchg
sub
add
mov
lods
ret
push
stos
mov
call
jnp
int3
jne
jecxz
mov
add
dec
xchg
dec
inc
dec
push
and
mov
insb
loopne
mov
fadd
arpl
int
mov
in
mov
jae
mov
jecxz
xor
rcrb
lock
pop
fsubrs
or
out
jno
dec
call
or
xor
lods
adc
pop
pop
movsb
inc
adc
scas
mov
imull
fs
xchg
sub
sub
les
mov
mov
stos
sbb
scas
xchg
fisttpl
stos
xchg
push
adc
inc
mov
pop
test
add
jbe
lahf
dec
das
jmp
sub
fyl2x
and
add
fildl
sbb
mov
stos
push
sbb
sbb
mov
pop
test
insl
xchg
inc
popf
and
stos
and
lahf
xchg
frstor
call
cmpsl
sti
mov
jne
jecxz
repz
sbb
enter
shrl
mov
popf
out
jns
sub
imul
push
pop
test
sub
mov
popf
ds
cmp
jae
mov
dec
clc
add
xor
mov
mov
jbe
jbe
iret
cmpsl
mov
push
mov
jmp
pop
fs
shr
push
and
lds
rolb
sbb
stos
adc
xchg
xor
xchg
xchg
arpl
cli
daa
pop
dec
data16
scas
arpl
jge
dec
jle
imul
xchg
jb
lods
mov
mov
fstl
pop
cmpsl
aam
lahf
scas
div
dec
in
mov
leave
loop
sub
popa
add
inc
inc
or
subl
jns
dec
and
inc
test
inc
push
fsubs
xchg
imul
scas
xchg
fldenv
aaa
inc
cltd
enter
mov
inc
nop
pop
xchg
enter
hlt
mov
daa
sub
lret
ret
pop
push
mov
or
gs
filds
aam
icebp
pop
add
test
stos
cmp
jae
fists
inc
ret
sahf
sti
jnp
mov
cli
add
shrl
mov
hlt
lods
mov
leave
int3
addr16
ret
sbb
push
es
stos
mov
pop
stos
push
and
dec
inc
jg
inc
mov
jecxz
mov
cmc
aad
stc
push
data16
pop
xor
add
icebp
je
add
inc
and
mov
dec
mov
dec
pop
pushf
ret
mov
inc
sbb
scas
pop
pop
enter
jg
mov
adc
sbb
mov
inc
mov
add
pushl
dec
addl
or
push
fisubrl
popf
cmpsb
call
sbb
jbe
pop
out
inc
cltd
cwtl
fsub
in
fwait
je
mov
inc
ds
dec
dec
pop
mov
jmp
mov
push
sarl
shll
mov
ret
loopne
ljmp
sti
pop
pop
iret
ret
sahf
and
ret
cmp
sub
inc
aas
cli
or
jg
cld
inc
xor
mov
scas
adc
scas
mov
pop
test
mov
sbb
dec
pop
dec
xchg
test
scas
fldt
mov
lock
hlt
mov
daa
sbb
repz
movsb
fisubrl
mov
stos
fstpl
fisttpl
cmp
push
enter
jmp
popf
fmulp
cltd
mov
negb
out
push
adc
rorl
sarb
repz
add
or
mov
jmp
adc
pop
in
cmp
enter
lods
jae
call
or
and
mov
sbb
add
call
dec
das
mov
sub
shll
cmp
adc
cld
repz
and
cwtl
mov
es
fdivp
jnp
mov
enter
fs
hlt
mov
or
sub
sbbb
or
mov
pop
stos
inc
in
dec
push
add
fadds
pop
scas
mov
test
mov
subl
insb
cmp
dec
data16
scas
jne
inc
xchg
jmp
dec
mov
lds
leave
ret
jecxz
cmp
xchg
jl
push
jg
ret
hlt
mov
xor
cs
test
rclb
repz
enter
add
mov
fmul
and
push
fsubrs
movsb
enter
cmc
pop
fadds
pop
fidivrl
sbb
cmp
loop
pusha
in
mov
push
xor
test
inc
push
xchg
ret
dec
mov
fsubrs
out
cmc
xor
outsl
pop
push
test
jge
xlat
arpl
int
cwtl
adc
movsl
andl
in
lcall
adc
push
sti
mov
xchg
mov
lock
out
adc
cltd
jo
inc
sbb
leave
aad
lret
movsl
ret
fs
mov
push
cmpsl
adc
movsb
fldcw
fucomp
je
pop
dec
push
lret
rorl
fcoms
sbb
mov
test
sub
inc
subb
in
mov
cmc
lcall
xchg
sbb
add
cmp
call
sub
mov
faddl
and
xor
fwait
add
arpl
dec
mov
mov
stc
cmp
mov
xchg
mov
jnp
xchg
push
fisubs
mov
cmp
enter
mov
sbb
mov
mov
out
push
adc
jle
push
lods
xchg
mov
sahf
dec
mov
icebp
ja
test
mov
int
pop
movsl
fisubrl
jge
iret
cmpl
or
daa
outsb
mov
inc
sbb
pop
add
mov
mov
vpackssdw
adc
ret
sbb
std
imul
or
dec
push
inc
cmpl
je
mov
sub
fsts
frstor
sbb
mov
addb
int3
clc
into
cmp
jne
push
shl
cmpsl
fsubrl
scas
push
jg
fsts
fcoml
sti
and
add
andl
adc
les
or
out
fwait
xchg
scas
aam
sahf
xchg
and
mov
inc
mov
cmp
sbb
xor
or
fsub
mov
sbb
and
mov
dec
mov
lock
cmp
mov
add
push
dec
inc
sahf
shrl
or
jbe
jg
dec
sar
ret
mov
add
lret
inc
sbb
xchg
mov
lds
xchg
and
ret
inc
sbb
rcrb
xchg
or
jp
stos
out
repz
rcrb
jbe
movsb
lcall
fisubl
test
aaa
cli
je
movsl
icebp
add
push
sbb
ret
or
jnp
or
pop
outsl
les
std
lock
add
mov
fstl
cmpsl
inc
jo
into
mov
icebp
cmp
js
popf
push
adc
leave
loop
xchg
js
mov
into
add
rorl
xor
rclb
je
inc
cmp
xchg
mov
aas
add
lcall
pop
lods
mov
sub
push
mov
push
adc
or
jecxz
enter
sbb
sbb
lret
gs
loopne
push
jne
idivl
shr
ss
aam
aas
stos
fmulp
pop
sub
in
movsb
div
or
rorb
js
sarl
dec
pop
add
out
sbb
push
lock
scas
in
test
jb
jns
imul
loop
jge
jnp
mov
mov
repz
mov
jp
pop
sbb
inc
pop
add
stos
mov
or
mov
pop
xchg
int3
pop
mov
mov
cltd
lods
inc
inc
fsubl
adc
cld
push
push
sbb
lret
cmp
imul
adc
adc
or
mov
iret
cmpb
inc
sti
aam
sbb
movsb
jb
cmpsb
call
mov
in
sub
sbb
add
xor
mov
and
ja
add
mov
push
mov
int3
lcall
mov
pop
loopne,pt
iret
je
and
cmc
sub
sbb
sbb
jg
add
aam
and
rcl
gs
lock
fsts
lret
dec
xor
mov
or
xor
add
pop
push
mov
aad
stc
push
push
mov
rcrl
test
or
cwtl
rcll
lret
mov
les
data16
lds
dec
pop
aam
mov
push
and
add
adc
std
jmp
or
daa
xchg
and
iret
insb
xor
rclb
mov
mov
cs
and
frstor
repnz
or
rcll
roll
enter
dec
push
or
xchg
jle
push
dec
lret
sbb
gs
pop
fnstsw
into
adc
fistpl
push
pop
adc
lret
pop
and
mov
ret
xchg
mov
testb
mov
cmp
orb
scas
jnp
inc
mov
jp
shll
pop
push
inc
and
xchg
sub
xchg
mov
mov
testl
gs
clc
das
xchg
ret
add
or
and
push
std
mov
and
or
lock
scas
adc
cmp
lahf
scas
jns
js
jp
mov
mov
in
stc
inc
dec
add
pop
inc
sbb
test
dec
mov
insb
mov
iret
out
cltd
xor
inc
jge
adc
in
fidivrs
rcrl
outsl
push
push
test
pusha
mov
clc
or
pop
in
sbb
lds
mov
or
rolb
dec
int3
les
inc
mov
es
fcoms
pop
mov
std
ficomps
push
rcll
add
hlt
sub
inc
jp
orb
mov
mov
and
iret
cmp
or
in
into
adc
push
div
test
repnz
ficoml
sahf
popf
in
divb
lods
mov
rcr
loopne
ss
inc
retw
xchg
mov
lcall
std
lock
movb
jecxz
fwait
pushf
push
movsl
ret
jge
inc
pop
dec
adc
inc
fimuls
fcmovnbe
push
rolb
add
push
push
cmp
ret
push
flds
in
mov
imul
movsb
icebp
iret
xor
push
adc
inc
sbb
out
push
xabort
pop
mov
jne
jecxz
mov
out
sub
hlt
je
nop
inc
mov
jle
push
sbb
ret
clc
movsb
cmp
dec
adc
pop
ss
aam
fstl
inc
loope
or
sti
mov
in
lock
mov
adc
sbb
pop
inc
insl
lcall
mov
mov
pushf
mov
arpl
dec
push
cmp
xchg
jae
jns
jns
iret
pop
add
or
sub
mov
xor
add
mov
push
mov
mov
leave
jnp
pop
pushf
sub
sbb
jmp
movsb
enter
notb
inc
cld
add
add
add
mov
add
aam
jns
mov
adc
test
push
in
sub
mov
sub
test
push
std
mov
hlt
push
das
test
sub
xor
mov
in
sahf
dec
outsl
push
xchg
sti
int3
lcall
mov
popf
cmpl
test
jae
jecxz
pushf
sbb
add
lahf
and
int
ds
inc
xor
rcrb
adc
fsubr
lods
test
stos
repz
rcrl
leave
lret
inc
ret
pop
sub
mov
pop
jae
cmpsl
add
dec
les
mov
add
push
sbb
push
cmp
jg
jg
pop
insl
xor
pop
lret
addl
or
out
mov
insl
test
xchg
loop
test
pop
mov
fcoml
movsl
cli
mov
push
test
or
jge
adc
lret
sbb
bound
aam
loopne
hlt
or
cmpsb
popf
jp
push
and
ja
lcall
mov
dec
mov
ljmp
ds
jg
aam
sti
pop
mov
ret
in
icebp
jae
mov
imul
sbb
aas
mov
rorl
or
movsl
ret
inc
xchg
mov
push
fcomp
dec
fiaddl
incl
imulb
pop
fildll
push
mov
cmp
rorl
sbb
cs
mov
adc
push
mov
or
mov
jmp
rolb
pop
and
popa
mov
jecxz
mov
scas
jp
out
js
popa
xchg
lret
call
xor
xchg
pop
xchg
adc
test
pusha
inc
cwtl
inc
test
push
fsubs
xchg
js
dec
xor
cmpsl
ret
flds
pop
fsubl
xor
jo
push
pop
sub
rclb
sub
mov
push
mov
mov
popf
repz
xlat
shr
sarb
xor
xchg
jge
ffreep
imul
adc
iret
lock
adc
popa
mov
mov
jl
and
iret
inc
cwtl
or
test
leave
mov
xchg
dec
outsl
mov
cmp
pop
fucom
jecxz
jecxz
mov
test
test
sbb
leave
xchg
ja
push
xchg
stos
std
mov
roll
fwait
lods
je
jnp
push
jno
push
jmp
fcmovnb
pop
jo
cmp
cmc
cmp
filds
cwtl
add
and
or
cmp
insb
and
or
dec
and
out
or
push
push
cwtl
cwtl
mov
fwait
push
xchg
fistpl
cmp
cmpsl
sti
lea
dec
xor
jae
ret
add
addl
jp
push
adc
sub
mov
int
sub
ret
ret
jmp
pop
xchg
into
and
mov
les
std
fstl
addl
xchg
jecxz
cs
rcrb
add
fwait
and
dec
das
mov
push
pop
test
cwtl
lret
inc
sbb
add
xchg
pop
lods
xchg
push
shrl
push
call
sub
lahf
fucom
shll
sbbl
addl
addr16
inc
push
outsb
les
adc
pop
stc
shl
adc
xchg
jp
scas
pop
pop
mov
repnz
and
sub
and
lods
bound
inc
testl
mov
rol
dec
push
xchg
mov
push
push
sahf
cli
and
imul
lret
lahf
ficoml
test
xlat
pop
jae
in
mov
icebp
dec
add
mov
or
sbb
xor
pop
mov
jg
pop
cmpsl
pop
add
ljmp
decl
add
jmp
clc
push
dec
sbb
data16
add
jo,pn
fldenv
leave
bound
dec
adc
add
lahf
ror
fsubrl
mov
movsl
mov
test
in
in
stos
push
cmpsl
xchg
sahf
mov
sbb
fucom
inc
jns
jmp
js
push
je
loop
call
xchg
retw
mov
xchg
leave
cmc
adc
sbb
pop
adc
jle
mov
loope
mov
inc
sbb
arpl
sub
js
std
xchg
mov
sub
push
mov
enter
inc
mov
add
xor
cmp
sbb
stc
imul
stc
fwait
ret
push
stos
mov
sub
mov
in
push
sbb
mov
sbb
lahf
jl
out
mov
sbb
mov
push
cmp
mov
inc
add
stos
das
pop
mov
mov
pop
out
test
repz
test
or
or
mov
shll
imul
test
adc
jg
stos
das
cmp
sbbl
dec
jb
mov
sub
dec
addl
in
rcrl
jae
call
ljmp
pop
pop
cmp
xor
and
fbstp
inc
xchg
outsl
fisttpl
xchg
xchg
cld
insl
mov
fistpl
loopne
sub
sbb
test
jmp
das
pushl
mov
lcall
adc
addl
call
les
xchg
jns
ficoml
sti
and
dec
cmpsb
push
lods
xlat
push
fsubs
push
out
mov
fwait
lea
xor
mov
cwtl
fnstcw
xchg
enter
ret
push
ficomps
int
imul
push
sub
mov
les
push
fimuls
imul
fwait
pop
xlat
in
mov
mov
lock
add
or
cwtl
adc
int
inc
sbb
shlb
popa
lcall
imul
leave
push
imul
mov
adc
out
jae
push
cld
sub
imul
add
fsubr
add
iret
lcall
jge
dec
rcr
adc
push
mov
fcoml
sub
pusha
jg
sub
lahf
sahf
adc
int3
xor
jo
ja
js
or
orl
inc
sbb
mov
push
mov
xchg
out
mov
pop
test
lret
movsb
inc
inc
popf
push
stos
mov
repnz
mov
popa
in
push
loope
add
addl
leave
cwtl
pop
cmpsb
sub
lods
lods
fisubrs
and
push
adc
ret
pop
push
mov
sti
jmp
xchg
fcmovnb
and
pop
dec
xchg
stos
mov
lock
mov
fsubrl
adc
sbb
movsb
jp
hlt
mov
nop
sub
mov
movsl
ret
sbb
fs
stos
mov
aaa
sub
xlat
xchg
lds
pop
lods
bound
scas
mov
out
jmp
js
push
je
loop
call
inc
repz
and
mov
stos
xchg
data16
fsubl
pop
test
cld
int
test
mov
int3
mov
jno
loope
loope
scas
inc
fcompl
repz
nop
xchg
mov
inc
adc
out
idiv
jmp
les
xor
pop
loope
or
and
aad
jle
enter
imul
sahf
xor
and
out
fcompl
jg
cs
test
push
inc
mov
inc
lods
gs
pop
int
mov
arpl
int
mov
mov
jns
enter
das
lret
jecxz
inc
adc
popf
sbb
add
fwait
and
dec
inc
pop
adc
pop
xor
cwtl
or
dec
dec
pushf
dec
xor
rorl
dec
add
inc
and
lods
movsl
mov
mov
fs
decl
rcr
addl
dec
fbstp
dec
inc
out
test
add
and
adc
xor
jmp
jle
mov
and
jbe
pusha
mov
test
pushf
or
leave
loop
loop
mov
addl
test
dec
daa
xor
push
out
sub
pop
data16
push
scas
xor
push
fidivrl
cli
mov
and
lods
insl
aaa
imul
cmp
cmpsl
sti
aad
dec
xor
inc
movsl
je
or
cmpsb
popf
jp
push
xchg
xchg
or
loop
stos
xchg
inc
ror
jmp
lret
sbb
gs
cld
mov
les
scas
mov
imul
inc
xlat
int
add
out
mov
popa
pushf
and
xor
mov
mov
sarl
xor
pushf
dec
xor
shll
lods
add
test
jnp
fldcw
xchg
cmp
fistpl
repz
scas
cmp
mov
test
push
and
push
scas
xchg
ficoml
outsb
mov
and
dec
mov
movb
ret
fstl
pop
cmpsl
data16
pushf
lods
jg
leave
in
mov
xchg
push
pushf
repnz
mov
in
outsb
inc
mov
cmp
test
xchg
and
cmp
push
fisubl
adc
ret
push
cmp
call
icebp
inc
cltd
enter
sahf
jnp
pop
add
adc
sub
mov
jne
dec
movsb
pop
mov
mov
pop
fnstsw
sarb
mov
lods
sti
jae
test
sti
mov
repnz
int3
mov
mov
lods
or
out
pop
ret
repz
xchg
and
sbb
cmpsb
fnstcw
cli
mov
adc
mov
int
jae
xchg
leave
js
ret
fdivrp
mov
fcomps
or
pop
ret
pushf
outsb
shrb
in
push
lods
mov
lds
sahf
rol
pusha
mov
jg
leave
ds
repz
inc
fwait
out
js
aaa
insl
js
ljmp
sbb
add
cwtl
inc
mov
leave
cmp
xchg
imul
inc
mov
cmp
push
sub
fwait
std
stc
ret
mov
push
add
cwtl
hlt
je
xchg
xchg
in
jecxz
cmpb
ret
mov
sbb
mov
mov
cld
pop
pop
out
loopne
dec
loopne
mov
aas
jno
xchg
jl
lahf
in
clc
add
daa
test
cmpsl
ret
fwait
and
mov
andl
push
lock
aad
dec
movsb
sub
dec
sbb
adc
scas
mov
test
fs
fbstp
push
sbb
test
dec
sti
mov
enter
leave
outsl
mov
cmp
xchg
jge
mov
movb
ret
add
outsb
into
mov
mov
pop
jmp
mov
xor
nop
cli
fldl
mov
or
les
popa
fsubrs
push
aad
or
les
fwait
shlb
xchg
mov
xchg
dec
outsb
and
std
bound
test
jne
jecxz
jecxz
add
fsubp
mov
or
jne
dec
movsb
popf
out
push
mov
ficompl
mov
movsl
push
jmp
popf
fcmovnbe
lods
sti
jae
test
sti
mov
imul
jbe
add
leave
xorl
inc
aas
adc
addr16
aam
mov
icebp
ss
mov
add
mov
inc
test
mov
scas
int
sbb
mov
in
jno
ret
add
lret
stos
cmc
mov
mov
ja
lds
add
jg
in
pop
xchg
jbe
cmp
sbb
scas
mov
mov
out
js
loope
lret
call
adc
mov
mov
cltd
roll
mov
adc
test
sub
fdivl
mov
or
cmp
mov
and
das
je
or
scas
or
dec
in
inc
nop
push
or
shr
ss
cmpsl
cmp
clc
sti
mov
jae
add
mov
pop
jp
pushf
inc
inc
sbb
inc
dec
sub
scas
out
popf
pushf
dec
xchg
mov
divb
add
inc
inc
and
vminss
inc
jge
fs
fisttps
or
xchg
cwtl
sar
cmp
arpl
push
mov
stos
stc
test
shl
adc
sbb
fdivp
shrb
int3
lods
decb
pop
out
pusha
mov
mov
scas
fistps
sbb
jo
jns
js
fistl
rolb
popl
and
in
and
imul
cwtl
mov
lds
cmpsl
ret
sar
mov
xchg
pop
cmp
bound
adc
sarb
hlt
or
xchg
shr
adc
adc
mov
jmp
adc
push
mov
mov
jg
pop
xchg
into
daa
repz
movsl
sub
pop
scas
add
jmp
jno
xchg
iret
sbb
in
pop
add
daa
test
push
repnz
inc
dec
bound
pop
inc
mov
inc
sub
and
jno
shl
outsb
test
fsubrs
inc
mov
or
dec
cmp
shrb
and
les
stos
lret
or
xchg
call
dec
imul
jecxz
pushf
mov
push
int
in
mov
pushf
mov
rcrb
add
mov
mov
xchg
adc
dec
and
cld
lock
sub
mov
mov
lea
cmp
xlat
xchg
flds
push
and
cs
pop
sub
scas
or
dec
in
inc
mov
loopne
mov
popf
repz
ss
mov
loopne
jg
les
nop
jl
lahf
aam
pop
inc
mov
adc
inc
pop
adc
fcoml
push
lret
movsl
mov
idivb
sbb
add
inc
and
rolb
ss
pop
popf
jae
sub
out
cmp
jmp
dec
mov
inc
dec
lret
addr16
ja
stos
xchg
stos
std
mov
mov
mov
add
loopne
xchg
pop
cmpsl
pusha
je
das
jg
leave
loope
mov
pop
movl
scas
arpl
pop
das
out
inc
shlb
inc
mov
sbbb
push
cmp
adc
movsb
pop
inc
jge
jmp
inc
stos
cmp
call
fs
cltd
xchg
push
shr
mov
int3
inc
add
out
mov
sbb
push
adc
rorb
lret
mov
sub
jnp
sbb
rclb
mov
lock
das
lret
jecxz
inc
adc
sbb
mov
or
pop
adc
mov
mov
rcll
pop
sbb
test
cld
sub
mov
inc
frstor
lcall
aaa
mov
gs
xchg
aam
push
cmp
jae
scas
push
inc
and
imul
stos
mov
stos
xchg
xlat
movsl
movsb
pop
dec
push
mov
lods
mov
mov
xchg
xor
xlat
xchg
xchg
repz
loop
inc
mov
or
xchg
adc
or
dec
adc
mov
daa
mov
inc
cmp
imul
stos
jae
lahf
xlat
fdivs
pop
das
mov
cltd
enter
mov
sahf
add
mov
inc
mov
hlt
mov
mov
cmc
enter
jecxz
adc
lods
insl
mov
mov
shr
repz
push
into
inc
adcl
lock
movsl
roll
adc
add
aam
sub
imul
xor
shrl
xchg
xlat
dec
sbb
adcl
sbb
jae
gs
mov
popf
lret
sub
pop
add
fdivl
cli
push
push
push
sub
xchg
jne
mov
icebp
mov
add
pop
pushf
ret
mov
ret
das
jg
sbb
xor
xchg
lret
lock
popa
or
and
push
addl
or
xor
or
cli
stc
mov
dec
jbe
aam
inc
sbb
out
xor
push
gs
outsl
mov
imul
std
and
push
mov
inc
mov
shrb
in
jne
dec
movsb
pop
mov
jle
jecxz
sbb
dec
adc
cmp
or
pop
lods
dec
or
loopne
iret
cmpsl
std
stc
sti
mov
dec
cld
pop
xchg
jge
jle
pop
add
xchg
or
stos
imul
mov
call
dec
sbb
fwait
mov
lods
jmp
jae
jns
xor
inc
je
mov
jno
dec
nop
push
icebp
cld
mov
dec
leave
ljmp
push
xor
data16
fimuls
xchg
cmp
shl
sbb
push
dec
mov
jg
push
xchg
loopne
sub
push
cwtl
add
rep
clc
pop
lret
negl
stos
xchg
adc
data16
mov
pusha
cltd
imul
jl
fwait
xlat
xchg
fldenv
inc
xor
mov
aad
jae
enter
ret
inc
ds
cmpsb
sub
lods
lods
fisubrs
out
push
ljmp
orl
neg
scas
add
pop
pop
push
addb
iret
bswap
in
clc
add
daa
test
push
hlt
mov
inc
and
iret
cmpsl
jg
lcall
inc
sub
and
jne
les
repnz
test
cli
test
sub
fistpll
fisttpl
add
in
jbe
imull
jae
or
adc
push
mov
rorl
dec
mov
xchg
sbb
fdivrl
fcmovb
pusha
mov
mov
fisttps
iret
fldl2e
jo
loope
or
sub
add
data16
rclb
roll
mov
fwait
cmp
push
sub
scas
mov
fldz
mov
fwait
lea
jb
push
adc
mov
sbb
adc
cs
fwait
jne
dec
mov
int
insb
outsl
pop
mov
jg
pop
lods
and
ss
mov
mov
pop
cmc
mov
mov
pusha
icebp
add
mov
push
jp
int
call
adc
lret
or
or
popa
test
clc
mov
adc
pop
pop
movsb
inc
adc
scas
mov
mov
push
pop
fucomp
inc
add
xchg
test
mov
sbb
xchg
ljmp
push
outsb
idivl
lcall
mov
mov
pusha
negb
push
int3
imul
repz
loop
push
sarb
sbb
mov
mov
push
or
cmp
repz
inc
and
sbb
fsubs
pop
fidivrs
jnp
sbb
mull
movsb
inc
cltd
enter
push
adc
cli
fsubp
mov
movsb
sub
add
in
push
mov
movsb
out
push
adc
ret
idivl
ret
mov
jmp
pop
pop
dec
in
int
dec
lock
test
hlt
inc
add
sub
or
and
mov
mov
jno
dec
and
roll
sbb
vandnps
bnd
and
shrb
jns
scas
pop
fucom
repz
pop
jns
pop
and
les
stos
ret
into
xlat
ficoml
outsb
shlb
lea
add
push
stos
mov
mov
jge
inc
call
popf
scas
pushl
jmp
mov
test
sub
nop
aad
mov
push
or
dec
push
xchg
mov
in
add
stos
mov
sbb
or
mov
call
mov
inc
dec
mov
in
push
add
out
cmc
cltd
outsl
mov
ret
mov
sbb
xchg
loope
pop
lods
imul
in
and
iret
out
lcall
jo
enter
inc
sbb
aas
and
shlb
int
mov
aad
dec
sbb
xchg
lods
cmp
arpl
test
jno
dec
aaa
inc
sar
cli
cmp
pop
xchg
test
test
sbb
jne
into
push
mov
mov
mov
out
push
lods
movb
ret
add
pop
sahf
rol
pusha
jg
push
fucomi
in
mov
fdiv
sti
cmpsl
xchg
add
and
or
inc
mov
test
sub
sbb
pop
sbb
xor
inc
pusha
xchg
imul
mov
xchg
iret
pop
cltd
shrb
cmp
jno
in
push
adc
push
mov
leave
sbb
mov
inc
jnp
mov
add
lret
cltd
mov
scas
ds
arpl
movsl
pop
xor
stos
mov
jno
nop
jl
lahf
fs
lahf
rcrb
mov
adc
xchg
and
int
cmp
loope
adc
nop
in
lods
jb
mov
dec
sbb
lea
stos
fucomp
jne
mov
sbb
shl
or
fldl
mov
lret
test
inc
push
cmp
ret
adc
mov
stos
ja
dec
pop
push
jnp
das
sub
test
add
fidivl
mov
mov
xchg
loop
add
jns
pop
sub
or
pop
adc
jge
xor
bound
xor
ret
repz
popf
dec
outsb
and
mov
fs
cltd
into
cmpsl
iret
out
mov
and
adc
inc
or
sbb
add
mov
std
pop
adc
loopne
arpl
xchg
jle
pop
mov
call
popf
lret
in
lcall
push
fistpl
rcr
and
mov
lock
sahf
pop
adc
lods
out
and
adc
test
dec
and
pop
in
and
js
xchg
dec
outsl
mov
and
lahf
lret
mov
push
imul
mov
cmp
lret
add
xor
adc
shlb
push
fwait
pusha
fimuls
out
pusha
mov
lret
fwait
outsb
mov
out
js
and
mov
xchg
mov
sub
push
popl
int
dec
shlb
jb
shll
ret
rcll
inc
mov
subb
jb
sbb
pop
inc
cltd
enter
jg
stos
add
xchg
int3
jecxz
mov
sub
sub
mov
cmpsb
cmc
hlt
imul
xchg
jg
pop
xor
cmp
call
mov
sbb
fldcw
adc
mov
add
out
rcrl
adcl
and
roll
rcrb
ljmp
test
int
sub
dec
pop
dec
or
dec
cmp
shrb
and
les
stos
lret
add
xchg
mov
outsb
les
push
and
jne
jbe
lods
and
mov
xchg
fwait
test
icebp
lret
cmpl
mov
add
cwtl
or
xor
push
push
or
les
push
xchg
mov
in
add
jmp
mov
insl
push
inc
ljmp
sti
xor
jne
mov
adc
mov
push
mov
loop
fdiv
movsb
pop
ljmp
pop
aaa
nop
jg
pop
test
mov
in
int
add
pop
cmpb
xchg
imul
jge
rcrl
cltd
mov
jg
js
sub
jnp
cmpsb
sbb
les
cli
movsb
shrb
mov
scas
mov
ss
mov
in
scas
cmp
mov
les
test
mov
xchg
add
xchg
jl
mov
cmc
add
push
or
adc
xchg
sub
lahf
ficoms
cmp
arpl
sbb
addr16
aas
jle
push
cwtl
lock
xor
das
or
inc
or
sti
adc
mov
ret
inc
insl
xchg
imul
or
mov
or
loope
rcll
add
push
mov
icebp
mov
out
push
adc
cs
adc
gs
push
mov
shr
sti
in
divb
movsl
xor
pop
les
repz
inc
mov
clc
add
add
leave
xorl
inc
aas
adc
addr16
aam
mov
icebp
imulb
inc
in
xchg
in
stos
push
imul
mov
fistpll
pop
lret
rorl
nop
sbb
xor
test
push
scas
xchg
stos
lds
mov
mov
jle
mov
shr
sbb
inc
pop
js
jmp
popf
fwait
js
jle
sub
mov
div
filds
mov
andl
xchg
dec
mov
push
sbb
pop
sbb
sti
clc
inc
add
lods
mov
sbb
xchg
mov
jb
out
xlat
pop
fldz
inc
test
mov
sbb
test
loopne
je
fldcw
cmp
sub
push
sbb
mov
into
pop
stos
les
inc
sahf
shrl
mov
imul
mov
hlt
mov
sarl
stos
cmp
push
cltd
push
add
testb
iret
inc
sbb
rorb
fucomp
les
sbb
sbb
aad
shll
lret
subl
sub
loopne
pop
or
lds
cld
jo
xchg
leave
notl
stos
lds
xchg
inc
and
enter
stc
lds
sahf
rol
pusha
mov
div
int3
mov
scas
inc
fwait
leave
loop
data16
rorb
add
add
pop
mov
dec
aam
mov
mov
fadds
dec
xor
mov
out
inc
and
pop
ret
fld1
gs
outsl
scas
ret
mov
push
add
cmp
xchg
test
aad
mov
dec
inc
dec
sahf
dec
push
fdivs
out
mov
mov
pop
mov
into
dec
jg
jo
ds
hlt
mov
pop
stos
lcall
mov
sbb
cltd
mov
repz
mov
and
roll
sbb
scas
vandnps
repnz
lods
jb
pop
dec
xor
ljmp
shr
cmp
or
cld
nop
pop
test
xchg
sub
adc
inc
ja
jae
scas
sahf
adc
ffree
pop
cmpsl
push
jg
push
cwtl
mov
mov
cmc
cmp
jge
andl
and
sbb
cmp
push
mov
adc
push
fsubs
jno
in
movsl
jnp
enter
nop
cmpsl
sti
repz
pop
je
or
jle
and
push
adc
mov
rcl
dec
jg
fwait
aas
loop
lods
negl
push
xchg
sub
mov
pop
lock
hlt
mov
push
mov
mov
repnz
push
mov
or
ret
inc
mov
ror
lcall
add
lds
pop
test
insl
fldl
rcr
dec
push
lret
bound
fcoms
sbb
adc
sub
xor
xchg
or
data16
ffree
out
leave
dec
mov
mov
movsb
inc
roll
test
cmp
jg
or
cmp
repz
loop
xlat
ret
or
add
ret
test
jo
cmpsl
stc
pop
and
add
sbb
movsl
xchg
addl
adc
fisubs
cld
lahf
inc
mov
xor
loopne
push
lock
pushf
and
mov
lea
pop
pop
push
lret
mov
cltd
test
ss
cmp
sahf
shrl
mov
ja
lret
or
jmp
ficomps
mov
mov
dec
cmp
xchg
into
stos
sbbb
arpl
test
jb
pop
inc
std
aad
sahf
leave
inc
lahf
mov
lret
fldl
xor
pushf
repz
cmp
pop
or
cmp
mov
add
sub
fnstenv
add
testl
fistl
xchg
jbe
test
mov
aad
mov
fsubrl
repz
push
js
lret
fs
fwait
pop
cmp
sub
dec
iret
xor
les
rclb
fidivl
fidivl
aaa
and
aam
fstl
call
lods
hlt
mov
add
push
and
or
push
mov
mov
negl
sbbb
das
push
mov
adc
cmp
mov
mov
pop
adc
ret
fidivrs
jns
movsb
rcrb
mov
lock
jbe
and
iret
gs
idivb
rcl
dec
pop
or
mov
sbb
sub
lahf
pop
stos
fs
push
fldl
test
sbb
xor
add
ret
std
lock
add
jbe
pop
pushf
jbe
xor
shrl
loop
icebp
adc
sbb
into
pusha
push
cwtl
clc
inc
sarb
push
mov
ljmp
out
or
push
rcrb
inc
shll
jne
aam
pop
fidivrl
fisttps
outsl
push
lea
mov
sbb
and
cmpsb
hlt
mov
xchg
lea
mov
adc
pop
jp
push
mov
shr
pop
movsl
pushf
dec
pop
movsl
imul
pop
push
ficoms
or
cltd
cmp
sub
leave
inc
sbb
out
sbb
inc
test
les
jmp
lds
pop
stc
xor
mov
inc
fcmovu
scas
sbb
jecxz
push
inc
and
dec
repz
je
mov
ret
add
sbb
aaa
pop
push
jns
sbb
ret
imul
and
inc
jmp
mov
loop
adc
push
add
push
mov
repnz
add
rcr
push
mov
fwait
xor
enter
movsl
or
push
ret
fld1
gs
std
mov
mov
inc
or
mov
shr
dec
int
imul
pop
dec
pop
push
or
inc
lea
ss
mov
loopne
pop
pop
psraw
ret
movsb
xor
mov
rcrb
mov
lock
cmpb
adc
subl
mov
js
test
movsb
push
mov
jmp
jae
fisubl
iret
mov
aaa
ljmp
push
sbb
sbb
sub
sbb
adc
sbb
cmp
test
lcall
adc
int3
jmp
cltd
lods
inc
pop
jl
pusha
test
push
xchg
pop
jmp
jmp
mov
add
add
clc
es
dec
aas
pop
lret
push
lea
mov
or
push
xchg
imul
inc
popf
pop
stos
cmp
bound
cmp
clc
and
adc
add
sbb
or
fisubrs
xchg
cltd
push
xchg
jle
pop
pop
test
ret
les
jne
aad
cmp
and
sbb
cmp
adc
ret
fidivrs
jae
mov
mov
pushf
mov
mov
xor
mov
in
testb
sbb
pop
lahf
dec
pop
xchg
jmp
xchg
bound
fcoms
retw
mov
xchg
adc
pop
jnp
xchg
fistl
cli
sub
fcoml
cmp
fstl
jnp
bound
int3
jg,pn
sbb
imul
icebp
cmp
push
cwtl
add
arpl
rclb
rorl
mov
out
push
mov
xchg
js
mov
mov
pop
fdivrl
pop
mov
gs
lahf
insl
jmp
testl
inc
fsubs
loopne
hlt
pop
imul
lret
shl
dec
sub
loopne
cmc
mov
mov
add
jl
pop
movsl
sub
in
divb
aam
test
xchg
int
jecxz
pop
xchg
cld
add
sub
sbb
leave
inc
mov
int
sti
leave
rcrb
jno
test
incl
jno
test
movsb
fnstenv
dec
stc
mov
xchg
pushf
leave
popf
lret
mov
sub
sbb
or
stos
jge
mov
or
imul
sbb
jnp
movb
jmp
fwait
js
es
js
inc
xlat
cmpsl
jb
lret
adc
mov
adc
add
mov
mov
push
aam
ret
inc
sub
cmpsb
fcomp
pop
popf
and
test
mov
mov
add
int3
inc
cmp
sbb
pop
hlt
sub
movsb
jne
dec
movsb
lea
lfs
push
sahf
and
stc
lea
push
mov
jns
aas
in
lods
div
test
sbb
aas
loop
loop
push
sbb
aas
adc
movsl
ret
xchg
popf
fsubl
adc
stos
jb
mov
addr16
cmc
fisttpl
enter
cmp
gs
add
cmp
xor
add
fidivrl
adc
lret
xor
shll
jnp
xchg
or
sahf
sahf
ficoms
mov
adc
out
js
xor
xchg
cmp
xchg
inc
shlb
clc
jb
adc
dec
shlb
pop
xchg
or
data16
imul
push
jns
lahf
sub
pop
xchg
pop
call
lds
enter
sbb
xor
cwtl
cmp
movsl
jle
enter
in
aad
mov
mov
lods
mov
arpl
out
or
out
and
xor
rcrl
add
loop
popa
popf
sbbl
hlt
lods
push
mov
and
iret
inc
cli
or
pop
ret
test
stc
mov
mov
scas
mov
test
cli
rol
mov
pop
or
fcoms
loopne
stos
jnp
xchg
xlat
push
adc
dec
mov
jle
mov
and
inc
jmp
movsb
sahf
jecxz
push
fists
fprem1
xor
add
add
rolb
adc
inc
test
xchg
popa
les
fwait
cmp
xchg
cmp
cmpsb
call
xchg
fld1
jne
popf
idiv
repz
enter
push
movsb
fcoml
ds
inc
inc
mov
popa
dec
dec
xchg
lea
mov
and
hlt
mov
adc
add
or
mov
jae
add
fwait
js
or
sti
mov
jns
add
scas
push
cmp
add
cmp
enter
ror
cmp
cmp
je
leave
sbb
dec
ljmp
xor
aas
jns
dec
lahf
pop
sbb
pop
lret
rcrl
nop
sbb
or
cmp
test
stos
iret
push
pop
mov
push
cld
lret
fstl
jnp
pop
pushf
jnp
ficoms
jg
sub
icebp
mov
sub
or
inc
add
sbb
mov
roll
adc
dec
notl
jge
push
sub
and
cmp
gs
cltd
xlat
xchg
stc
aaa
rclb
cmpb
hlt
or
int3
add
fwait
rclb
cltd
pop
cwtl
dec
daa
adc
adc
ret
pop
pop
mov
lcall
aas
divb
popl
sbb
ret
fdivrp
jnp
mov
or
out
rcrl
cltd
jl
movsl
ret
inc
mov
icebp
testb
sbb
pushl
mov
inc
bound
pop
dec
jmp
fistps
lahf
cmp
leave
pop
sub
lock
sbb
addb
stos
mov
stos
ja
stos
xchg
ret
sbb
lret
dec
pusha
das
leave
lods
mov
cmp
pusha
mov
aad
fdivrs
pop
loop
add
rcrl
or
rcll
dec
pop
cmpsl
jns
dec
and
add
cmp
jns
clc
and
fdivrs
lock
cmpsb
repz
xabort
pop
cltd
cmpsl
sti
repz
jne
cltd
rcrl
test
pop
mov
enter
mov
inc
sub
add
into
pop
test
xor
pushf
mov
aam
xorl
jae
xchg
popa
ret
fimuls
sti
cmpsb
rcrl
add
ljmp
and
insb
push
pop
mov
jbe
loopne
xor
dec
icebp
mov
and
push
dec
sbb
add
inc
and
int3
and
cmc
fisttpl
or
scas
iret
ffree
loopne
test
or
test
push
sbb
lret
or
mov
stos
jne
or
add
lds
inc
in
enter
icebp
leave
in
mov
leave
loop
inc
mov
enter
rclb
jmp
popa
adc
mov
sbbb
loope
insl
xchg
imul
test
lods
int
xchg
bound
cmpb
je
xchg
mov
mov
add
or
push
mov
mov
jecxz
adc
ret
pop
mov
les
jg
arpl
mov
stc
jg
mov
jnp
sahf
sub
add
addb
sub
sbb
popa
cmpsb
ret
sbb
jno
fistps
stos
test
movsb
fldcw
stc
mov
test
in
pop
fcoms
cmpsl
lds
ret
int
xchg
push
lcall
popa
fimull
push
mov
add
push
pop
cmpsl
pusha
fs
mov
icebp
sub
cwtl
xor
pop
dec
xchg
outsb
call
mov
and
or
dec
adc
dec
popf
ret
rcr
test
dec
shll
push
loope
or
sub
mov
ret
fld1
jb
outsl
lds
enter
or
mov
xchg
test
pop
stos
push
inc
mov
pop
ret
pop
sarl
lret
popa
mov
pop
sbb
mov
jns
aas
sub
inc
jnp
mov
mov
add
mov
add
sbb
data16
sbbb
aas
in
popf
mov
fwait
in
add
sbb
in
movsl
dec
sbb
xor
pop
cli
ret
call
ret
mov
les
std
adc
inc
cmp
xchg
popf
cmp
mov
sarl
or
mov
and
sti
add
jmp
sahf
sahf
xchg
pop
out
test
inc
jmp
cmp
repnz
add
dec
push
sbb
rcl
cwtl
inc
mov
stc
mov
xor
imul
repnz
aad
pop
scas
loop
imul
mov
xchg
rolb
xor
mov
pop
add
xor
xor
push
sub
mov
xor
dec
mov
push
xchg
jns
lcall
movsl
fnsave
frstor
mov
cmp
sar
sbb
lret
jecxz
pop
fidivl
or
inc
aas
adc
gs
sbb
inc
mov
rcr
pop
xor
rorl
add
aad
sahf
lret
push
in
int
dec
sbb
xchg
fbstp
add
cmp
jae
test
lods
mov
fisubrl
pushf
lods
out
loop
lcall
pop
cld
sbb
adc
aad
jp
xor
int3
js
ds
js
inc
repz
popa
clc
rclb
daa
js
test
xchg
sub
pop
lret
fwait
xor
enter
mov
and
icebp
pop
fld
call
xchg
mov
loopne
icebp
or
and
test
mov
sbb
gs
xor
mov
mov
add
std
imul
push
mul
xor
cmp
lret
jecxz
scas
jle
lock
xor
sbb
stc
dec
dec
fs
add
push
adc
ret
pop
cld
add
xlat
test
movsb
sub
xor
stos
push
in
pop
mov
fucomp
jae
jge
dec
pop
pop
sbb
bound
lds
les
add
cmp
roll
xchg
fistl
cli
cmp
sub
sub
jno
aad
mov
fabs
sub
pushf
sbb
punpcklwd
inc
add
jecxz
cmpsl
mov
adc
mov
jecxz
test
icebp
in
xchg
mov
pop
lcall
stos
cmp
popa
insl
fnsave
aas
mov
bound
out
enter
sbb
es
hlt
xchg
cmp
xchg
pop
mov
inc
xchg
popa
xchg
insl
or
xor
and
lods
xchg
pop
adc
pop
pop
jo
pop
mov
push
lock
and
and
xor
pop
sub
dec
popa
mov
lds
inc
test
shll
mov
sbb
lret
lahf
mov
sbb
or
dec
pop
lret
rorl
fcomps
jno
push
cwtl
daa
sbb
aam
mov
stos
shll
aad
pushf
xchg
fsubl
cmp
sbb
adc
jle
das
inc
cld
cli
sti
das
mov
js
sbb
pop
xchg
popa
cmp
inc
cmp
mov
call
mov
xor
rolb
xchg
data16
cmpsb
fsubrs
fidivrl
pop
push
clc
gs
outsl
jl
loope
icebp
dec
inc
sub
test
rcll
dec
dec
mov
push
inc
mov
rcr
adc
aad
jns
fiaddl
les
fucomip
in
std
test
hlt
movsl
fwait
aaa
rcrb
lods
inc
cmp
add
lods
mov
leave
and
clc
xor
sub
sbb
cmp
cmc
test
ljmp
jge
xchg
mov
ret
dec
pop
or
test
dec
imul
or
mov
mov
lret
stc
movsb
test
cld
repnz
sub
xor
sbb
jnp
dec
push
into
inc
fwait
out
js
shlb
pop
dec
cmp
orb
cmpsb
aam
cmp
rorb
je
gs
inc
gs
imul
push
int
stos
cmp
into
loop
pop
fsubs
sti
mov
jno
in
adc
jle
jecxz
push
adc
push
adc
dec
mov
cltd
jns
mov
pop
mov
push
fdivl
ljmp
cmp
mov
clc
sti
pop
es
rcr
ret
jae
cmpsl
xchg
xchg
add
cwtl
imul
mov
mov
popf
pushf
or
push
pop
int
loop
pushf
dec
lods
aad
stos
mov
pop
test
movsb
jnp
push
lret
dec
lock
outsl
xchg
lret
fucom
cli
mov
aaa
repz
ret
sbb
addl
or
inc
adc
aaa
std
mov
mov
lods
stc
add
pop
cld
ret
cmpsl
lret
bound
popf
pop
inc
pop
cmpb
fbstp
jmp
jl
shlb
inc
jmp
or
inc
pop
adc
cwtl
retw
fsubs
repnz
movsl
ret
push
sub
orb
xchg
cltd
call
sti
xor
mov
xor
xor
add
dec
add
fwait
dec
dec
mov
cwtl
sahf
inc
aaa
in
das
in
cmc
hlt
imul
out
les
inc
mov
mov
sti
inc
jmp
push
mov
imul
cmp
lds
pop
adc
ljmp
adc
ret
sbb
adc
mov
negl
inc
stc
fisttpll
mov
mov
sti
scas
sahf
mov
sub
sarl
rdmsr
inc
retw
mov
xchg
push
push
stos
jge
mov
inc
or
pop
lahf
jns
inc
rorl
cwtl
jae
cltd
fmull
jnp
sahf
popa
mov
div
jo
popf
scas
cmp
adc
sbb
mov
inc
xchg
movsb
clc
mov
adc
add
xchg
push
mov
fdivrs
jo
xchg
and
sbb
sub
fbld
jge
out
out
repz
xchg
popl
ds
es
pop
inc
pop
xchg
xchg
fwait
sbb
int
gs
pop
inc
mov
rorb
inc
xor
mov
lret
imul
int
in
std
pop
adc
rorl
rcrb
add
imul
sbb
inc
cltd
xchg
push
hlt
sub
cwtl
adc
stos
push
xlat
jp
in
fstpt
push
cmc
fstpt
stos
dec
or
scas
lret
or
pop
insb
push
jl
or
inc
inc
pop
xchg
lret
or
inc
sub
fstl
pop
mov
mov
add
add
in
add
xchg
mov
lahf
addr16
cld
repnz
sub
push
cwtl
sbb
es
cmpsb
mov
xor
fucomip
fucomp
push
repnz
popf
xchg
les
add
aam
sbb
into
ret
or
iret
inc
mov
mov
add
dec
xchg
dec
adc
int
das
and
dec
xor
jp
negl
push
fldl
mov
loopne
les
pop
adc
test
out
aas
notl
mov
lcall
lcall
popf
das
and
int
clc
or
test
inc
stc
cmp
jecxz
push
sahf
mov
fistpl
pop
sbb
fcoms
mov
test
sub
pop
add
add
lods
jle
mov
sub
xchg
leave
jge
inc
inc
into
cmc
inc
cmp
pop
into
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
xor
out
rolb
mov
decb
cmp
fwait
outsl
jl
dec
mov
cwtl
mov
mov
xchg
test
aad
mov
mov
pop
pop
sub
ret
cmc
test
imul
push
in
in
mov
cli
aas
in
and
cmc
sti
hlt
mov
add
add
out
sbbl
sbb
rcrb
rcrb
jne
les
lcall
pop
pop
movsb
nop
dec
test
lcall
repz
je
mov
add
jl
ret
add
addb
sbb
jnp
push
stos
xchg
fistl
sbb
test
adc
lcall
lods
cld
xchg
les
sbb
out
xchg
push
pop
ret
inc
sbb
test
dec
cmp
push
or
sbb
decl
and
and
es
enter
fsubl
fistpl
call
adc
adc
out
adc
push
sub
dec
inc
mov
jne
dec
adc
mov
pop
pop
add
aad
jns
push
in
push
lret
xchg
addr16
stos
push
adc
mov
jns
cmpsl
rcrb
rcrl
imulb
jno
dec
and
fcmovnb
sbb
rcrb
rep
test
mov
cmp
shlb
imul
scas
adc
push
dec
push
lret
shr
fwait
add
or
pop
daa
push
insb
cmp
mov
lock
movsl
adc
xchg
xchg
iret
imul
jecxz
pop
ficoms
jle
scas
inc
cld
add
and
subl
pop
and
dec
and
push
cwtl
dec
and
cmp
aas
icebp
jae
pop
mov
lds
pop
pop
sbb
bound
out
shlb
test
inc
ds
dec
inc
orb
cs
aad
pop
mov
icebp
pop
adc
movsl
cmc
pop
xchg
into
pop
enter
fnsave
jae
orb
popa
popf
orb
cwtl
ljmp
mov
pushf
test
push
pop
int
outsl
jmp
mov
cli
and
rcl
dec
stos
push
jno
cld
sub
lret
dec
pop
sbb
stc
dec
data16
pop
xor
test
push
pop
cmp
xchg
or
dec
sbb
pop
mov
popf
xchg
jl
push
jecxz
arpl
adc
or
and
or
subl
lds
pop
mov
pop
mov
push
jmp
iret
cwtl
popf
push
fwait
cmp
xchg
sub
sbb
and
data16
dec
inc
mov
scas
jge
xor
xchg
sub
inc
push
and
sbb
mov
sub
idivb
call
add
gs
mov
mov
ret
cmp
mov
or
hlt
scas
rorb
shlb
mov
test
js
les
pusha
xor
push
lret
xorb
repnz
int3
mov
cmp
lods
mov
lret
scas
in
push
cmp
les
fcoml
jne
or
xchg
fistl
cmp
es
jb
sub
icebp
pop
test
enter
test
cs
mov
in
mov
jmp
or
and
and
cmp
dec
cmp
sbb
and
sti
insb
and
push
fdivrs
jge
imul
popf
subl
sub
in
fwait
nop
xchg
mov
bound
out
les
push
addl
mov
and
and
sbb
rolb
pop
push
mov
icebp
arpl
int
pop
xchg
push
mov
jns
ds
and
dec
clc
add
scas
push
dec
cli
add
lret
cmc
rcrl
mov
dec
jl
xor
test
dec
and
jno
lds
leave
jl
cld
sub
mov
int
sbb
pop
add
lahf
lcall
pop
sbb
jp
push
push
push
movsl
or
lcall
jle
mov
mov
dec
cltd
aad
lds
leave
inc
dec
loope
sarl
ret
stc
and
andb
orb
mov
push
xchg
jmp
les
movsl
ret
fcomp
push
fwait
and
jne
inc
or
cmp
enter
loop
int3
pop
sub
int3
inc
ds
lret
mov
cmp
and
mov
popf
fsts
arpl
fxch
inc
imul
sbb
jno
mov
imul
add
jo
cmc
ss
mov
jno
dec
xchg
jo
popa
mov
sbbb
mov
mov
test
mov
sbb
fiaddl
dec
push
add
shll
jno
or
nop
roll
pop
dec
imul
pop
push
les
pop
jne
sti
adc
js
jbe
lods
sahf
jnp
shrl
inc
ljmp
xor
inc
lcall
je
xchg
cmp
jnp
rorl
cmp
fistl
xchg
clc
push
xor
mov
popa
cmpsb
fcom
pop
fbld
jge
outsl
scas
add
loope
mov
jle
xchg
enter
dec
push
and
mov
fdivrs
lret
sbb
insl
add
xor
and
mov
cmp
inc
mov
or
jmp
jae
addl
add
xor
mov
cld
jg
inc
sbb
aas
ficoml
arpl
mov
jb
lcall
inc
mov
rcr
cmp
out
lahf
jnp
adcb
mov
xchg
fsts
pop
daa
or
mov
adc
add
add
inc
mov
lods
inc
inc
mov
sahf
xchg
fadd
js
es
mov
xchg
push
lea
add
and
aad
dec
aam
jns
mov
or
les
cltd
mov
aam
cmp
and
jae
push
jne
inc
test
fsubs
lahf
dec
sti
xor
jno
jecxz
adc
push
push
out
adc
inc
push
jb
into
mov
movsb
in
and
sbb
or
jg
mov
leave
lock
les
jg
push
addb
div
mov
das
js
or
jl
hlt
das
jo
push
adc
mov
sbb
imul
sub
mov
sbb
les
roll
mov
cmpl
cmp
stc
push
dec
test
or
jp
adc
fisubrl
rorl
test
xor
xor
mov
sub
adc
sub
xchg
stos
push
lcall
stc
and
repz
or
add
push
cmp
test
pop
jmp
lods
add
mov
or
inc
mov
sub
mov
out
cmp
out
jg
jmp
fldenv
loopne
hlt
pop
lret
aad
xchg
push
xchg
xchg
pop
cmp
in
push
adc
ret
sti
push
test
aaa
ljmp
cmp
lds
ds
mov
mov
cmp
add
mov
inc
pushf
or
add
inc
test
shll
test
sbb
test
push
lret
and
aad
stc
js
scas
lahf
fucom
rcrl
test
inc
cmp
lret
add
mov
fistl
sub
test
loop
pop
pusha
jbe
test
xor
add
xchg
or
jg
mov
mov
mov
adc
es
sub
aam
pop
mov
and
int3
test
aam
sbb
mov
gs
in
out
add
mov
call
jle
add
mov
int3
sub
mov
popf
xchg
xlat
cli
cmc
hlt
imul
mov
cmp
mov
sbb
jp
movd
dec
lahf
aam
loopne
mov
loop
gs
loope
pop
dec
adc
mov
stos
fsts
pushf
ret
insb
mov
repnz
sbb
inc
mov
sbb
mov
xchg
mov
sub
or
repz
mov
in
mov
stos
xchg
xchg
iret
orb
or
shrb
jnp
movb
pop
sahf
xchg
add
adc
pop
mov
push
mov
inc
aam
clc
xor
adc
ret
and
inc
rcrl
jecxz
xchg
xchg
pushf
pop
dec
mov
js
call
jnp
or
imull
into
cltd
hlt
imul
xor
test
inc
push
mov
fadds
sbb
sahf
inc
sub
xor
mov
mov
inc
imul
jmp
shll
mov
dec
or
sbb
test
lock
pop
mov
sbb
popa
xchg
ret
sbb
dec
mov
stc
mov
dec
dec
xor
jae
lret
iret
iret
push
cmp
in
ret
add
sbb
mov
gs
outsb
shrb
lret
stc
add
loope
scas
fcoml
jp
scas
jg
cmp
cmp
pushf
pop
stc
das
test
xchg
cmp
mov
inc
xchg
and
mov
adc
jns
pop
and
stc
mov
xor
imul
sbb
ret
mov
mov
mov
xlat
xchg
mov
mov
mov
xor
add
mov
cwtl
sbb
sub
or
or
lods
lahf
pop
mov
imul
jmp
clc
decb
lds
sub
shlb
pop
adc
mov
stos
add
inc
test
shl
mov
sbb
and
sahf
repnz
out
jge
mov
mov
mov
je
mov
jl
ret
add
adc
rcr
nop
lcall
jge
dec
mov
loope
sub
xor
push
leave
push
fcompl
xchg
sbb
enter
or
xor
add
inc
inc
sbb
xchg
inc
cmp
adc
aam
imul
insl
xchg
imul
cltd
in
out
inc
test
push
cmp
popf
jb
inc
lea
fmuls
adc
lea
in
iret
jg
sahf
dec
mov
pop
stos
shrl
push
mov
aam
sti
pop
pop
adcb
iret
sbb
inc
in
add
xor
jns
rol
sbb
into
inc
sbb
subb
fwait
mov
or
sbb
les
jno
lds
sbb
mov
cmp
mov
jnp
cmpsl
jae
add
es
dec
mov
idivb
push
stos
jge
mov
add
sbb
fstps
pushf
fcoml
ja
sub
mov
aad
rcll
mov
in
mov
stc
icebp
and
jge
orl
cmp
rclb
xchg
rcll
adc
test
cmpsb
lods
out
mov
xchg
jle
negb
pop
fisubs
popa
jmp
push
cmp
mov
sbb
or
aaa
lret
inc
adc
push
lret
sbb
insl
add
xor
cmp
cmc
pop
sar
call
shrb
dec
lds
rcrl
iret
adc
mov
sbb
pop
dec
mov
popf
mov
leave
movsl
cwtl
jnp
fisttpl
ljmp
popf
push
lds
call
fs
lea
in
jno
sub
mov
ret
cmp
nop
fcom
sbb
or
push
sbb
or
xor
jb
fisttpll
cmp
lods
inc
dec
cltd
push
jae
into
lods
jg
dec
push
repz
imul
clc
mov
adc
scas
aas
mov
dec
cmp
dec
dec
shlb
les
inc
push
fsubs
sub
fstl
jmp
cmpsl
ret
sti
adc
cmp
cmp
dec
pusha
sub
repnz
jns
adc
mov
jmp
cwtl
cmc
xor
sub
sti
mov
sbb
pop
adc
inc
inc
mov
sahf
sub
push
dec
push
jae
mov
push
add
jo,pn
pop
xchg
fldl
lcall
or
es
negb
xchg
dec
pushf
dec
and
jge
mov
push
push
clc
sub
sbb
dec
push
add
in
jnp
jge
push
jp
addr16
xchg
test
mov
cmp
xchg
xchg
stos
sbb
mov
lods
pop
test
fcompl
scas
pop
pushf
jp
xor
mov
lret
and
aaa
adc
addl
ret
or
test
fisttps
mov
sti
and
jge
js
inc
sbb
xlat
iret
stc
into
clc
les
cmp
xchg
enter
push
adc
inc
and
sbb
adc
shr
mov
sbb
xlat
adc
idivb
pop
adc
mov
xor
dec
lahf
iret
fucomip
repz
or
mov
repnz
sub
mov
inc
sbb
imul
mov
mov
and
aad
sbb
outsl
push
test
jmp
push
ja
fs
push
test
jnp
popa
xchg
push
cmp
adc
xorb
test
xchg
adc
mov
and
xor
stc
sub
push
push
fucomip
lahf
inc
pusha
fistps
push
or
pushl
fiadds
or
pop
inc
mov
mov
adc
les
fwait
xchg
jmp
lods
out
push
mov
out
inc
and
fmuls
push
aad
jp
sbb
ds
aaa
fs
lcall
push
xor
mov
xor
mov
push
jg
sub
fdivrl
stc
inc
inc
xor
jge
inc
inc
mov
fucom
dec
nop
cld
aad
ja
mov
adc
lds
ss
adc
inc
pop
test
push
dec
lret
inc
cmp
add
or
mov
jne
inc
fdivl
sbb
push
jl
sub
pop
pop
sbb
test
xchg
dec
shll
push
mov
jb
lods
cmp
lods
inc
sbb
push
cli
int3
iret
fldenv
bound
jae
jmp
clc
pop
sub
lea
ds
jo
cltd
fists
rcrl
clc
mov
out
or
daa
cmp
push
call
push
lods
xchg
jo
cmp
fnstcw
pop
out
movsl
mov
jmp
inc
xor
xchg
dec
inc
mov
or
jne
cmp
push
or
popa
mov
sti
aad
sub
lret
sub
or
or
loopne
cmp
inc
cmp
or
adc
mov
rorb
pop
dec
mov
sbb
jg
pop
orb
dec
mov
dec
and
mov
push
dec
mov
fbld
sub
push
xchg
pushf
adc
mov
cmp
inc
mov
mov
push
push
movsl
or
gs
push
mov
sbb
jecxz
adcl
cmpsl
jmp
pop
push
stc
adc
jg
fyl2x
cmc
mov
pop
aas
add
jmp
arpl
pop
mov
ja
or
jp
inc
cwtl
dec
and
adc
jbe
sbb
mov
sti
popa
jge
in
cld
add
out
cmp
dec
inc
je
sbb
leave
sbb
cwtl
aam
dec
inc
push
mov
dec
inc
mov
pop
mov
or
pop
scas
les
inc
inc
mov
cltd
fadd
add
ja
mov
out
rcrl
rclb
lock
and
loopne
pop
dec
jno
pop
jae
xor
sbbl
sub
stos
push
and
lods
dec
mov
lods
dec
andb
dec
jae
pop
pusha
cmc
movsl
pop
push
mov
pushf
dec
pop
insb
push
jl
sub
pop
insb
repz
sbb
and
xchg
stos
cmp
fwait
push
sahf
fistl
xchg
mov
lods
inc
inc
mov
in
pusha
push
cmp
ljmp
fs
je
jl
jae
test
push
add
or
mov
pop
ds
inc
mov
push
les
fwait
cmp
mov
fcoml
inc
or
inc
and
sub
pop
je
fwait
jb
mov
sbb
inc
and
mov
hlt
test
outsl
aad
or
xchg
dec
push
and
rorb
inc
inc
push
repz
or
or
loopne
cmp
cmp
int
call
repz
cmp
enter
inc
inc
add
cmc
cld
or
lds
adc
mov
sub
dec
jb
pop
scas
push
sub
add
sub
inc
pop
fsubl
dec
shll
cli
pushf
dec
pop
mov
test
movsl
outsb
push
mov
cltd
push
pop
fisttpl
lea
xor
aas
pop
test
hlt
push
inc
lahf
sbb
xchg
ljmp
xchg
lahf
mov
xchg
adc
adc
ret
jle
sbb
std
call
out
ds
xchg
aam
dec
out
mov
pop
jmp
lods
mov
out
imul
repz
jns
fs
pop
sahf
out
imul
insb
aaa
sbb
orb
push
aas
adc
xchg
popf
xchg
dec
daa
cs
mov
mov
rorb
scas
add
int
jl
cmp
push
mov
push
sbb
jnp
mov
rolb
add
cltd
test
jecxz
nop
pop
xchg
int3
or
cmpsb
sbb
dec
xor
shrl
push
sub
push
mov
into
xor
in
icebp
cmp
insl
mov
shrb
push
push
mov
mov
or
pop
movsb
push
sub
mov
scas
pusha
push
cmp
bound
jl
jl
dec
jb
add
mov
jo
rcrb
bound
xchg
sbb
mov
out
push
ljmp
out
inc
xor
fistpll
jno
fmuls
dec
lds
enter
insb
aaa
sbb
or
mov
sub
mov
mov
stc
pop
adc
adc
inc
divb
jne
mov
adc
jo
iret
sbb
in
faddl
cmpsb
sbbl
lock
lds
sub
mov
dec
dec
and
pop
movsb
ror
xchg
clc
sub
ja
push
mov
cli
test
js
iret
push
test
jb
std
fnstenv
jbe
imul
enter
nop
cmp
xchg
fistl
jae
mov
jno
aad
mov
add
inc
mov
lret
push
or
inc
fwait
xchg
stc
dec
cwtl
pop
aas
cmpsl
push
sbb
jle
clc
je
std
pushl
mov
out
jg
stc
hlt
js
out
push
push
lods
mov
out
imul
test
fs
movsl
sti
mov
popf
iret
sbb
inc
add
inc
jmp
sub
mov
daa
adc
xchg
dec
mov
push
jae
sub
or
jge
jae
cmp
add
adcb
or
add
or
pusha
xor
rorl
cmp
cld
leave
inc
add
jecxz
cld
mov
movsb
dec
and
xor
dec
imul
cmp
lcall
loop
mov
lret
sbb
int3
andl
cmp
outsb
push
jbe
sub
push
jne
add
xchg
dec
arpl
imulb
imul
aad
xor
push
xchg
jbe
jmp
xchg
and
stc
js
bound
mov
sbb
rcrb
test
addl
daa
xchg
int
jge
addr16
fldt
pop
cli
mov
lods
xlat
insb
mov
adc
jo
test
jb
cld
data16
popf
fnclex
inc
or
aam
enter
hlt
xor
jle
adc
sbb
movsb
xor
mov
xor
lock
shr
repz
adc
inc
stos
xchg
mov
ljmp
std
fists
add
and
popa
out
mov
inc
pop
ljmp
aas
jnp
push
hlt
xor
sbb
jecxz
dec
push
pop
or
jne
mov
sub
std
jae
stos
rcll
adc
sbb
fsts
mov
ret
rorl
push
sbb
movsl
or
js
cmp
pop
fstl
mov
enter
jmp
push
xchg
cmp
or
or
out
pop
inc
adc
sub
mov
jnp
mov
in
mov
mov
imul
or
mov
gs
call
ret
mov
cmpsl
lock
aaa
and
test
cmpb
pop
divb
mov
ja
mov
adc
in
divb
xchg
mov
filds
inc
add
pop
in
fsubs
mov
rcrl
adc
sahf
movzwl
cmc
aam
push
clc
sub
jg
and
fists
jp
mov
adc
jno
mov
icebp
lret
cmp
lahf
pushf
adc
mov
mov
mov
shlb
push
jl
ret
sbbb
adc
push
mov
std
sub
fsubrs
jbe
sub
pusha
jnp
ficoms
pop
div
push
xor
or
shrl
lret
in
cmp
mov
mov
fptan
mov
in
rcll
aad
fisubs
and
xchg
cltd
loop
pop
fidivrs
cmp
and
je
test
push
ds
inc
mov
cltd
jns
aaa
enter
cltd
gs
xor
and
mov
rcrl
pop
int
pop
mov
in
std
pop
mov
decb
jnp
mov
cltd
test
mov
js
fsts
cmpb
imull
mov
inc
iret
test
mov
inc
fists
mulb
jmp
repz
cli
je
mov
add
ret
or
lret
or
mov
push
sub
xor
pop
or
mov
popf
adc
cmpsl
pop
push
push
pop
in
std
pop
popf
scas
inc
fdiv
sti
mov
push
mov
clc
dec
fdivs
fisubl
jns
dec
and
ret
aam
dec
fwait
cmp
add
rclb
cmp
jae
push
jne
inc
ret
gs
outsl
scas
inc
aad
mov
ss
pop
xor
add
mov
cwtl
mov
in
cmc
hlt
jnp
xchg
lcall
push
add
int
jg
inc
hlt
cmp
mov
mov
pop
push
add
inc
sbb
and
push
repnz
xchg
ljmp
nop
arpl
imul
mov
ja
repz
sahf
repnz
out
and
lret
sar
xor
pop
cmp
jmp
hlt
xor
addl
mov
mov
mov
mov
sbb
or
stos
xor
xor
cltd
js
jle
lahf
xchg
jl
dec
insb
inc
adc
pop
jb
add
inc
push
pop
jecxz
sub
dec
test
dec
shlb
push
jmp
or
add
test
push
inc
popf
jb
mov
out
cmp
mov
sub
and
je
orb
sub
mov
lea
xchg
jmp
adc
std
fdivrs
mov
mov
mov
inc
xlat
int
xor
out
and
sarl
lret
out
aas
repnz
cli
add
out
sbb
or
hlt
pop
adc
stos
clc
ja
inc
in
lret
push
fisttps
push
mov
pusha
cmc
stos
dec
sbb
pop
jmp
or
and
dec
test
add
sub
enter
add
pop
pushf
sbb
sbb
xor
sahf
xchg
sbb
push
fcomip
lcall
repnz
cmp
es
cmp
pop
inc
mov
lds
call
push
mov
sbb
mov
call
mov
jne
sbb
cmovge
popf
mov
mov
sub
test
push
adc
inc
dec
mov
xchg
adc
cmpb
dec
rol
pop
inc
pop
push
fcomps
pop
lea
xor
cmpsl
mov
cltd
pop
loop
xchg
mov
fcom
lret
jmp
and
lock
cmc
dec
add
js
adc
jl
xlat
xchg
push
mov
and
cmpsl
inc
ljmp
dec
sbb
and
add
inc
sbb
sub
xchg
shlb
xchg
push
mov
rcr
dec
push
jl
fwait
repz
sbb
jae
xor
add
testl
rol
lahf
sbb
push
cltd
fstl
jnp
mov
jno
test
mov
in
pop
loope
or
sbb
cmp
imul
into
dec
mov
jns
dec
xor
imul
mov
inc
popf
subl
call
or
vpunpckhdq
pop
rcll
inc
add
inc
inc
mov
loop
pop
bound
sbb
add
out
push
clc
mov
popf
pop
pop
inc
push
incb
popa
pop
test
sbb
movsl
pop
adc
lods
mov
clc
sti
pop
adc
ret
jnp
test
dec
sbb
aad
sbb
or
sub
jns
lock
mov
jne
lods
leave
sbb
xchg
jne
jp
inc
fistps
sahf
mov
sub
adc
lods
fxch
push
nop/reserved
adc
xchg
or
mov
roll
lods
ficoml
jb
scas
jle
or
and
inc
pushf
sub
mov
or
mov
fmull
repz
nop
xchg
incl
mov
inc
sti
sbb
mov
or
dec
mull
push
int3
push
mov
jge
imul
mov
pop
mov
fidivrs
sti
xor
jne
popf
adc
xor
add
test
jle
push
dec
mov
rcll
out
mov
loopne
cmp
sbb
test
cmp
mov
cmp
push
add
cmp
jecxz
sbb
and
fs
cld
or
mov
test
popa
pushf
dec
daa
adc
ret
insb
mov
cli
sub
pop
scas
inc
in
test
sub
sahf
sbb
stc
dec
sahf
scas
cmpsl
jmp
lahf
xchg
xor
rcrl
mov
xor
xchg
or
xchg
pop
imul
stos
fistl
cmp
jns
dec
inc
mov
fstl
mov
into
xor
pop
cmc
xchg
cmp
pop
mov
negb
sub
cmpsl
jne
or
and
hlt
push
fdivrs
cmp
mov
xchg
sbb
mov
insl
jmp
out
call
int3
pop
add
mov
dec
inc
mov
jmp
das
in
cmc
hlt
sub
cmp
adc
les
loope
push
fimuls
cld
pop
pop
add
mov
cmp
imulb
negb
add
mov
pop
cli
or
mov
les
pop
roll
mov
clc
stos
push
pop
sub
dec
sbb
push
cmpl
test
sahf
mov
cld
xor
mov
dec
or
adc
xchg
adc
xchg
popa
movsl
adc
or
call
adc
push
sbb
aaa
or
and
icebp
dec
in
cmpsl
loop
xchg
mov
adc
clc
jb
sbb
in
popl
movb
imul
mov
ds
out
pop
in
or
cmp
sbb
icebp
mov
fldenv
dec
leave
sbb
adc
test
push
inc
or
pop
cmp
out
cmp
adc
mov
xchg
pop
sbb
ficomps
aam
mov
lock
or
sbb
add
insl
mov
test
icebp
sub
add
xchg
fldcw
dec
fmull
add
jno
xchg
cli
in
jl
ret
jo
test
push
cmp
lret
add
inc
cmp
pop
cmp
into
mov
shrl
lds
push
test
jmp
cwtl
ficoms
jle
sub
popa
inc
shlb
js
or
inc
aam
fmuls
adc
push
xchg
dec
and
into
aam
dec
test
mov
sub
lea
fsubl
jp
inc
push
aad
mov
push
inc
or
jae
sbb
or
ret
sub
sub
out
inc
cmp
in
cmc
hlt
mov
pop
add
or
mov
sbb
daa
dec
or
out
and
pop
jo
jp
adc
mov
movsl
stos
inc
sbb
pop
repnz
test
mov
aaa
xor
sbb
rcrb
jno
rorb
ljmp
repnz
aam
inc
mov
sahf
cmp
sub
leave
dec
arpl
das
dec
mov
insl
mov
cmp
addb
sbb
mov
push
xchg
cmp
mov
mov
addr16
xchg
mov
jp
das
jne
sub
xchg
push
dec
and
sbb
xchg
xchg
frstor
xchg
xchg
sbb
aam
stc
bnd
pop
loope
or
add
mov
pop
cmpsb
enter
jnp
mov
pop
fidivrs
jne
shl
into
add
mov
pop
and
and
jnp
in
adc
stc
pop
xchg
dec
inc
call
mov
inc
mov
mov
cmp
jae
orl
xor
jmp
vdivsd
mov
add
stos
loope
fcoml
xor
loop
dec
lea
and
mov
xlat
test
cmc
sbb
xor
pushf
fucom
loopne
dec
push
jno
lods
lock
clc
ret
adc
xorb
mov
fisubrl
inc
push
pop
mov
rcrl
dec
lods
and
lahf
fistps
and
sti
lret
pop
into
lret
fs
jmp
aas
jns
orb
mov
cmp
fwait
inc
sub
xor
and
jg
gs
popa
sbb
xlat
pop
test
sub
dec
jecxz
repz
js
add
ret
xor
ss
jle
and
fst
int3
mov
dec
cmc
lret
inc
sub
lds
loope
mov
ret
pop
sbb
jo
cli
insb
into
rcr
add
add
aaa
test
es
add
inc
xor
and
jns
test
push
inc
lock
repnz
mov
sub
dec
sub
shlb
repz
jo
jl
adc
xorl
leave
lea
clc
push
inc
rorl
jae
fsts
lahf
shrb
cltd
int3
dec
add
inc
jne
inc
jae
or
inc
mov
push
mov
andl
imul
movsl
inc
jns
dec
mov
jne
jmp
mov
mov
push
xchg
and
inc
stos
pushf
lods
inc
imul
arpl
das
outsb
arpl
aad
mov
adc
inc
fscale
daa
xchg
std
out
jp
or
mov
sbb
xor
push
fmul
clc
add
jb
sub
cmp
cmp
adc
pop
fcmovne
gs
cmp
and
lock
mov
or
mov
aad
jecxz
or
jne
ss
pop
xchg
shrb
mov
cwtl
repz
leave
pop
xchg
lock
out
aas
aad
aas
rorl
adc
sub
ss
ret
int3
pop
pop
adc
lret
xchg
pop
lret
pop
push
ljmp
pop
cmp
les
sub
inc
mov
ljmp
hlt
repnz
sbb
outsb
jno
stc
loope
bound
jo
out
adc
into
adc
lahf
aad
cmc
jp
sbb
imul
mov
movsb
or
inc
mov
fwait
lds
mov
in
test
adc
hlt
cmp
mov
int
mov
push
leave
push
cmp
mov
pop
mov
popa
rcrl
idivb
pop
mov
jno
pop
ds
mov
mov
in
lods
or
cld
pusha
jmp
mov
sahf
inc
xor
ja
mov
and
jne
jle
adc
movsl
ds
js
divl
insl
cmpsl
aas
test
out
mov
inc
jmp
pop
inc
popa
mov
pop
cs
mov
mov
mov
pop
cwtl
dec
xchg
cli
cmp
stos
xor
xor
xchg
repz
out
sti
outsl
inc
jns
scas
icebp
add
incl
adc
add
insb
inc
mov
fnstcw
shrb
inc
rcrl
scas
rcr
cmpsb
cmp
mov
movsb
cli
daa
bound
xlat
pop
stc
and
jmp
iret
pop
imul
inc
mov
mov
cmp
test
adc
addr16
repz
sbb
sbbl
sub
popf
push
out
ret
lock
jnp
jge
rcr
add
adc
add
jp
and
or
int
adc
ret
inc
lods
xchg
push
aad
in
push
int3
mov
xorl
ja
in
lock
fidivrl
fldl
jp
jne
sub
dec
gs
test
dec
and
sbb
inc
stos
orb
stos
add
mov
test
test
inc
xchg
dec
lods
cmp
xor
shll
icebp
cltd
jle
mov
pusha
cmp
jp
repz
fs
xchg
test
jb
cltd
mov
cmp
jns
push
sub
imul
fld
lea
lret
in
lods
ret
or
xchg
inc
inc
mov
mov
in
xchg
pop
jne
dec
ja
scas
imul
loopne
outsb
test
scas
ret
push
popf
pop
addr16
out
loop
jnp
jbe
fcmovnbe
out
mov
xor
out
cli
ja
addr16
fdivrl
ret
inc
rcrb
jo
lods
mov
lods
cmp
push
xor
adc
in
sbb
and
cmpsl
xchg
fstps
loopne
lret
rcll
enter
pop
or
cmp
pop
xchg
adc
xchg
mov
sbb
dec
lods
roll
shl
nop
pop
enter
les
pop
in
xor
push
loop
loopne
rcrb
nop
enter
adc
pop
adc
fwait
pop
enter
dec
loop,pt
out
and
sbb
sub
arpl
popf
cmc
je
mov
loop
xor
leave
stc
inc
fs
xchg
bound
jl
in
xchg
iret
scas
and
pushf
push
jge
dec
ds
jp
shlb
jmp
shll
imul
insl
mov
adc
outsl
mov
mul
jno
jo
adc
add
inc
xor
xor
or
inc
mov
push
sbb
jmp
jo
sbb
dec
mov
jg
dec
and
dec
xor
sub
dec
mov
call
jnp
stc
dec
ss
mov
xchg
leave
lret
inc
lret
imul
stos
inc
mov
inc
stos
cmp
cltd
xor
pop
mov
push
mov
repnz
pop
mov
jb
push
loope
jb
scas
push
addr16
call
push
and
ss
test
mov
nop
data16
mov
fwait
lret
in
mov
fldt
fistpll
cli
mov
test
es
xchg
loopne
push
lret
fnstcw
xorl
pop
sahf
dec
cmpsl
xor
lret
jmp
adc
pop
stc
mov
daa
pop
addr16
ret
dec
testl
inc
rorl
stc
push
lods
jl
rcrl
xchg
sub
mov
lret
or
insl
sub
test
outsl
lods
mov
ds
scas
mov
les
pop
mov
mov
sbb
mov
push
xchg
test
sbb
inc
inc
scas
push
sub
add
rorb
popf
xchg
sub
cmp
fiaddl
inc
mov
add
or
lds
js
divl
repnz
mov
dec
pop
add
mov
idivl
rorb
ret
inc
lret
popa
adc
das
xor
or
inc
cltd
or
xor
xchg
clc
cmc
hlt
std
mov
sti
popa
jns
mov
in
out
cmp
mov
int3
fisubrs
fnstenv
mov
sti
xchg
pop
and
arpl
pop
mov
popf
test
fiadds
repz
mov
xchg
mov
add
mov
add
and
adc
addr16
fdivrl
mov
aas
or
dec
out
stos
push
test
rcl
cmpsl
movsb
les
stos
jge
sbb
addr16
and
imul
into
xchg
mov
xorl
xchg
sub
aad
mov
imul
pop
lcall
push
lods
rcrb
sbb
inc
jb
ljmp
cmp
jmp
mov
mov
in
mov
call
mov
insb
mov
dec
cmp
in
cmp
in
push
dec
testl
pop
int3
pushl
pop
fimuls
and
insb
icebp
mov
dec
push
and
cmp
jmp
xor
lret
push
xchg
cmpsb
fidivl
repz
notb
popa
cmp
andb
ret
or
lcall
icebp
pop
mov
sbb
imul
or
mov
lods
int3
xor
ret
jge
jmp
xchg
push
test
add
mov
jne
fldt
loope
into
mov
mov
xchg
test
mov
push
inc
imul
cli
orl
or
push
orb
mov
shll
mov
pop
add
subb
insb
cmp
fwait
sbb
xchg
andl
pusha
jecxz
clc
cmp
xchg
mov
jns
adc
push
loop
bound
cltd
sbb
sub
mov
pop
cmc
lds
mov
jnp
enter
lcall
in
int
jmp
mov
into
pushl
or
or
inc
and
nop
movsb
pushf
stc
mov
cmc
test
int
jno
cmp
test
aam
int3
jne
lea
iret
inc
push
xchg
fs
stos
mov
jle
sbb
lock
xchg
nop
lahf
add
or
negl
xchg
clc
inc
nop
das
rclb
scas
and
testb
sbb
adc
outsl
lods
icebp
xor
cmc
cmp
les
and
nop
fildll
jnp
lret
xchg
jae
add
push
and
xchg
cli
cmp
stos
xor
jmp
xchg
das
mov
mov
int3
jmp
mov
sub
or
std
add
or
mov
sub
xchg
xor
dec
mov
mov
rclb
andl
inc
dec
les
pop
jb
adc
cmpsb
inc
cltd
aaa
mov
adc
or
mov
jnp
jo
push
jle
leave
mov
test
adc
out
adc
jmp
jbe
cmp
ret
adc
cmpb
imul
ds
shrb
rol
sbb
enter
hlt
shll
pop
cmc
js
xchg
popa
in
jae
lahf
push
dec
lret
mov
pop
stos
mov
aam
pop
loope
outsl
cmp
mov
pushl
pop
jl
inc
jbe,pt
lds
and
inc
insb
push
je
or
mov
push
mov
cmp
jo
xchg
scas
add
cmpb
adc
fiadds
jg
fidivrs
mov
jl
das
stos
push
push
or
popa
mov
push
dec
and
insb
xor
cmp
sub
lods
or
out
pop
test
sub
mov
and
mov
fs
inc
aad
mov
daa
or
pop
sub
popa
push
push
test
in
jnp
pop
jge
aad
das
je
xor
inc
fstpl
sti
outsl
ja
add
iret
pop
jno
sarl
negl
lret
add
sub
rorl
aaa
or
dec
and
icebp
scas
ret
or
or
sbb
xor
loopne
lods
or
sbb
cmp
mov
xchg
pop
jns
test
push
adc
inc
or
push
mov
mov
in
add
jb
push
mov
mov
loopne
lret
out
ret
scas
lods
sti
mov
es
subb
fcompl
cmp
inc
adcl
add
or
popl
pushf
jb
push
test
sub
mov
inc
fwait
ja
adcb
sti
cmp
cmp
outsl
sub
sub
and
xchg
in
aas
push
decl
xor
clc
int3
mov
xchg
adc
jg
scas
jae
cmp
or
int3
mov
out
sub
clc
mov
and
mov
lock
mov
pop
dec
mov
dec
pop
call
nop
leave
fsubrl
rorl
fstps
sbb
lret
mov
leave
adc
or
scas
xchg
sbb
cmp
leave
mov
jp
dec
push
inc
or
lret
fcomi
add
jnp
mov
lods
ret
aaa
mov
push
adc
cmp
clc
push
jmp
push
xchg
mov
popa
or
pop
test
jecxz
loop
dec
lcall
rcll
and
stc
cli
fsubrs
mov
or
pushf
adc
mov
fcompl
mov
sub
cmp
cmp
mov
push
movsl
sar
and
popf
es
sub
mov
inc
inc
mov
push
mov
dec
insb
dec
mov
jbe
ficoms
mov
xor
mov
repz
or
iret
shl
inc
sub
mov
jne
cmp
out
insb
dec
cltd
daa
movsl
cwtl
stc
pop
adc
pushf
dec
and
adc
mov
pop
stos
inc
in
shll
lods
push
adc
lods
push
fwait
pushf
leave
mov
xchg
cmp
je
jle
and
bound
cmpsb
sub
xlat
stos
lds
test
jecxz
popa
aad
daa
mov
fmull
jnp
jle
pop
push
mov
xchg
bnd
popf
sahf
sarb
fisubs
pop
test
mov
mov
jae
popl
inc
cwtl
rcl
mov
stos
xlat
daa
or
add
mov
sub
pop
incl
cmp
mov
and
aas
lahf
dec
mov
cltd
jle
or
adc
cmp
sub
sub
xor
mov
lods
fcmovnbe
addl
iret
and
cmp
jne
and
mov
fninit
test
sbb
pop
push
faddl
sbb
scas
mov
lds
arpl
fmul
out
out
jbe
push
dec
jb
stos
pop
lods
in
xchg
jae
aam
push
imul
rcr
cmp
nop
push
andl
repnz
inc
fstps
gs
not
stos
inc
lcall
pusha
movsb
in
test
push
jle
test
scas
xor
jnp
out
push
andl
push
pop
mov
and
std
decl
mov
dec
and
dec
stc
jnp
or
pop
lods
scas
daa
adc
inc
in
leave
xchg
loope
cmpsl
push
adc
aaa
rorb
push
clc
xor
or
repnz
out
testl
or
sbb
ja
divb
stc
jae
dec
fwait
outsl
or
mov
sub
jmp
push
fwait
xor
roll
cs
sbb
xor
sub
repnz
aaa
lahf
int
pop
dec
lea
les
dec
filds
test
rolb
cmpsl
mov
fiaddl
dec
mov
lds
dec
data16
jg
or
test
cmp
mov
scas
xor
dec
mov
xchg
mov
enter
fucomp
icebp
sbb
ds
cmp
out
mov
inc
sarb
movsb
orl
out
dec
add
sbb
adc
mov
insb
ret
sahf
mov
xor
outsb
lahf
rolb
cwtl
shr
outsb
fcoml
sbb
aaa
popf
iret
iret
dec
sbb
push
xchg
dec
lahf
dec
ss
add
xchg
test
pop
shrl
ljmp
fildl
std
pop
add
imul
add
cmp
mov
out
in
lret
pop
mov
ficoms
jl
mov
jmp
insl
int3
movsb
mov
push
inc
sbb
pop
stos
mov
aaa
mov
enter
lods
inc
imul
pop
xor
jns
jl
mov
shl
add
ss
mov
xchg
push
adc
addb
add
subl
xchg
mov
add
pop
push
pusha
jbe
mov
sbb
mov
mov
and
push
out
arpl
shlb
and
out
dec
adc
lcall
mov
add
imul
sbb
pop
dec
stos
adc
repz
fsubrs
inc
cltd
xchg
jne
out
adc
pop
cli
dec
hlt
jno
hlt
mov
in
out
je
inc
imul
jne
mov
adc
sbb
inc
lcall
scas
fbld
jecxz
add
and
push
lds
enter
stos
jns
dec
sbb
lahf
orb
leave
out
pop
mov
sbb
sub
aaa
iret
sbb
push
test
dec
sub
das
test
repz
loopne
pop
and
jo
inc
dec
cmp
xchg
lods
sub
add
xor
mov
xor
aad
adc
mov
outsl
std
mov
and
mov
in
mov
adc
les
dec
add
push
xor
insl
daa
inc
ljmp
sbb
mov
bound
jo
ret
sarl
cmpsb
inc
sbb
repz
roll
loope
mov
dec
xchg
test
adc
ret
pop
push
mov
push
clc
or
mov
push
jae
loopne
inc
adc
pop
mov
arpl
cmp
adc
dec
inc
sub
jno
cmp
nop
aas
and
dec
pushf
mov
test
mov
or
jge
test
int3
std
inc
xlat
cmp
lret
addl
dec
xchg
or
sub
xchg
in
imul
mov
cmpsl
or
sbb
dec
cltd
aad
mov
es
mov
in
push
jle
jbe
mov
sbb
or
loope
push
push
ret
cltd
jno
adc
jge
xlat
sub
inc
and
out
fldcw
sbb
bound
sahf
cmp
js
inc
pop
cwtl
mov
dec
mov
fdivrs
mov
sub
xor
movsl
es
mov
aam
lret
cmp
daa
ds
push
scas
or
pop
push
fsubs
stc
pushf
cmp
mov
or
shl
xor
ss
jo
mov
std
lret
adc
xor
imul
xchg
loop
mov
xor
jae
pop
mov
pop
pop
push
cmp
pop
sub
inc
sbb
adc
test
push
imul
bnd
fwait
push
xchg
sti
daa
mov
cltd
fstl
jnp
sub
sub
ret
call
push
mov
xchg
mov
inc
cwtl
push
inc
andl
out
and
js
add
gs
adc
xchg
jp
sub
outsb
lahf
int
arpl
cwtl
xor
popa
xor
enter
in
je
jnp
mov
gs
loope
fwait
aas
ss
mov
mov
add
inc
jo
xchg
ficomps
out
pop
sub
mov
mov
pop
xor
mov
jecxz
cmp
xor
sbb
inc
or
jg
mov
outsb
xor
mov
xor
fistl
add
mov
mov
lret
cmpsl
jle
and
pop
sbb
movsl
jg
rcr
dec
sbb
adcb
push
stos
bound
cmp
pop
sub
cmp
dec
xor
mov
push
sbb
lods
enter
pusha
jp
cmp
xchg
mov
xor
daa
cwtl
mov
sub
and
out
cmp
enter
daa
fs
add
fsubrl
jg
fistps
mov
dec
mov
ret
xor
shlb
aaa
pop
mov
sbb
loop
out
mov
inc
les
fsubrs
test
repz
gs
filds
mov
mov
ret
loopne
movl
fdivrl
jecxz
mov
adc
cmpsl
out
repz
cld
or
dec
sahf
jl
ret
nop
dec
pop
sbb
rcrb
rcll
pop
stos
push
inc
rclb
sbbl
mov
sar
out
jnp
ja
sti
sub
clc
mov
cld
mov
mov
addb
stos
and
dec
mov
pop
sbb
rorl
jp
pop
pusha
jnp
xor
inc
shrb
andl
inc
fisubs
clc
jb
je
ss
mov
lds
dec
cmp
test
xchg
lds
outsb
cwtl
stos
push
pop
fisubs
jge
fsubl
call
je
fcoms
repnz
sub
adc
es
push
push
mov
cmc
jne
mov
ss
test
cmp
movsl
sti
lahf
out
fwait
scas
jno
add
scas
mov
lock
jl
jo
or
roll
xchg
or
mov
aad
mov
lret
stc
add
out
and
dec
sbb
dec
sbb
inc
int
mov
mov
mov
pusha
les
and
rclb
leave
or
inc
sbb
push
inc
into
dec
xchg
lea
dec
pusha
xor
hlt
jle
sbb
out
mov
scas
mov
popf
fmulp
mov
andl
dec
andl
adc
cmp
dec
cwtl
dec
and
pop
xchg
aas
ljmp
push
stos
pushf
insl
or
popf
test
ds
xlat
and
in
cmp
xor
xor
sub
enter
mov
hlt
cmp
pop
jge
and
sahf
and
push
mov
shr
nop
call
shl
dec
pop
or
sti
mov
cmp
das
jecxz
enter
sar
int
and
pop
mov
fsubrl
ffree
mov
and
sbb
or
mov
sbb
test
jne
dec
pop
dec
jge
fadd
in
arpl
icebp
xor
inc
sub
stos
xor
mov
fidivl
lret
inc
stos
nop
xor
aad
mov
cmp
in
cmp
jg
mov
js
sub
jbe
sahf
pusha
clc
mov
add
decl
arpl
dec
and
mov
mov
mov
stc
pop
je
cmp
insb
jbe
mov
ret
jns
in
pop
das
mov
loopne
outsl
repz
test
push
adc
in
jmp
fstp
imul
xor
shlb
xorl
push
addr16
pushf
loopne
mov
cli
jae
mov
in
inc
pusha
add
aad
add
mov
sete
xchg
or
jno
mov
inc
dec
pushf
dec
scas
aad
cmc
mov
pop
stos
push
and
int
cmpsb
push
in
jo
jae
mov
fistl
repz
mov
nop
and
pushf
stc
les
sub
or
cmp
sub
mov
dec
or
sub
cmpsb
dec
leave
shll
push
cmpsl
cmp
ret
pusha
cmc
sub
cmpsl
xlat
cmpb
mov
xor
pushl
add
fsts
sbb
sbb
adc
shrl
mov
mov
call
fcmovnbe
rcrl
jb
fnsave
inc
mov
insb
punpcklwd
add
push
adc
and
mov
les
movsl
pop
cld
push
pushf
push
idivb
aam
sti
pop
js
xor
xchg
cmp
cmp
inc
mov
cli
mov
ds
pushl
cltd
pop
mov
mov
mov
cmpl
mov
inc
pop
mov
filds
pop
and
scas
mov
outsl
dec
dec
test
push
imulb
cmpsl
xchg
test
dec
aaa
shrb
insb
xchg
stos
lds
popf
mov
dec
jno
mov
lods
mov
mov
mov
pop
push
loop
mov
icebp
inc
or
push
push
shlb
loop
add
jne
xor
shlb
divl
stc
pop
push
out
shl
push
lcall
jmp
ret
mov
cmpsb
stc
sbb
xchg
es
loop
push
dec
jl
dec
jno
int3
push
push
xchg
pop
adc
or
xchg
xor
aad
imul
repz
adc
mov
int
xor
ja
mov
jp
xchg
and
cmpsb
lret
inc
sbb
xor
add
nop
sub
and
fisubs
sbb
xorb
dec
cmp
movsb
das
adc
leave
jg
add
lds
jge
ret
dec
scas
cmp
rcrl
clc
scas
dec
das
jge
popa
mov
bound
add
xchg
dec
push
popa
add
jge
jge
mov
imul
stos
mov
add
test
and
fidivrl
stos
test
push
cld
in
jle
inc
mov
fisubs
ret
push
and
mov
and
cmc
mov
pop
xchg
inc
jnp
push
aad
sub
test
cmp
mov
popa
dec
in
jecxz
cltd
enter
xchg
adc
inc
mov
movsl
int
or
sub
mov
fcomps
call
mov
fildl
pop
fwait
mov
mov
push
pop
mov
mov
pop
shrl
dec
mov
jns
jp
jecxz
mov
inc
loope
into
pmuludq
pop
ret
dec
sbb
mov
xchg
sub
mov
scas
pushf
pop
ret
les
lds
fsubl
cmp
sbb
jge
mov
imul
jecxz
fwait
xchg
cmpsl
test
mov
lods
push
mov
adc
js
cli
nop
stos
fisubrl
jo
sbbl
outsb
mov
aam
mov
insb
or
dec
dec
fsubs
gs
adc
stos
loopne
ret
jae
push
mov
daa
xor
shl
sti
mov
adc
cltd
xor
int3
in
xor
add
mov
inc
adc
xor
gs
ficoml
fstpl
jge
cmp
dec
aas
int3
mov
xchg
dec
pop
movsl
xor
insl
inc
jecxz
popa
mov
leave
jl
lock
fwait
cmp
std
roll
or
xor
xor
jns
inc
test
cltd
push
push
in
outsl
insl
test
cmp
push
les
jge
int3
push
clc
iret
scas
sbbb
rcrb
cli
iret
cmp
inc
rorl
test
fldl
xlat
adc
imul
es
cmpsb
dec
mov
xchg
inc
aad
mov
push
in
sbb
test
mov
or
jl
inc
cmpsl
std
jmp
sub
mov
jmp
adc
shll
xor
lods
test
fmull
mov
cmp
xchg
jbe
add
inc
and
out
sbb
mov
popa
sbb
xor
mov
int3
pop
cmp
lahf
or
sub
adc
insb
daa
adc
mov
adc
sarl
arpl
mov
jbe
xchg
cmc
and
lods
jmp
rolb
call
sub
jns
rorl
add
movsb
fs
push
outsb
cmpsb
dec
in
cmp
mov
movsl
test
imul
lahf
pushf
pushf
sub
lock
in
xchg
mov
jbe
jae
lret
call
xchg
dec
mov
les
cmp
mov
add
adc
addr16
jb
scas
dec
dec
xchg
fistpl
sbb
scas
dec
sarl
fdivrp
mov
stos
xchg
pop
testb
and
mov
push
and
std
sub
cltd
jle
popa
stos
out
cmp
push
sbb
js
movsb
add
je
cmpsl
xchg
andl
mov
int3
mov
pop
sub
scas
sbb
cmp
push
push
imul
inc
push
iret
cmc
mov
xor
push
repz
outsb
mov
arpl
inc
xchg
jnp
inc
xor
ret
hlt
cmp
popf
adc
push
push
add
add
or
out
inc
imul
push
hlt
jecxz
cli
xlat
jg
daa
xor
push
sub
mov
lret
out
push
dec
pop
imul
mov
prefetchnta
sub
test
jl
jge
xchg
stos
inc
lds
jo
or
sbb
imul
sub
mov
add
arpl
jmp
inc
fidivrs
pop
repz
add
inc
xor
sub
add
xchg
push
repz
add
push
inc
loope
xor
imul
mov
cwtl
dec
jo
ljmp
loope
add
fwait
jbe
jecxz
cmpsl
or
call
pop
mov
jae
fcoms
or
push
xchg
cmc
cwtl
sarb
fimuls
imul
add
sti
mov
xor
std
insl
roll
dec
or
sub
xchg
push
popf
sarl
lock
cwtl
lret
inc
sbb
xlat
stos
lds
mov
test
inc
dec
shrb
lret
mov
das
loopne
dec
popf
stc
dec
cmpsb
jmp
xchg
mov
int3
int3
pushf
xor
test
push
stos
add
or
mov
xchg
lret
ret
jecxz
sbb
js
mov
repz
cltd
int
stc
aam
dec
xorb
rcrb
and
push
adc
dec
shll
fimuls
adc
and
bsf
push
mov
fs
mov
add
rcrl
ds
test
dec
mov
sbb
out
mov
sbb
dec
pusha
dec
imul
mov
enter
dec
pop
mov
cmp
cmp
negb
scas
fwait
jo
lock
rcr
cwtl
pop
sub
aas
add
gs
push
mov
dec
test
lock
cli
shrb
mov
test
repz
insb
call
inc
fnstcw
sbb
fdivr
push
repz
sbb
in
in
rorl
or
pop
daa
sbb
or
incl
cmpsb
sbb
adc
jg
push
mov
fisttpll
xchg
int
mov
lods
mov
push
mov
mov
popf
cmpsl
ret
cmp
jb
mov
adc
loope
andl
leave
mov
and
addr16
sub
xor
scas
add
sbb
lods
gs
cmpsb
push
test
popa
jne
dec
lods
xchg
enter
out
cwtl
je
push
test
rcll
ret
and
cmp
out
mov
jne
inc
push
xchg
sub
pop
add
les
into
daa
mov
mov
inc
adc
movsl
cltd
mov
fdivrs
out
and
cmp
fs
loop
add
adc
mov
xchg
sub
dec
sbb
aad
sbb
sbb
lods
mov
aaa
lret
inc
xchg
mov
fucomp
shll
bound
test
or
mov
or
test
mov
xchg
dec
xchg
xchg
pop
cmp
xorl
leave
mov
xchg
xor
leave
loop
inc
lods
push
aas
cmpsl
push
cwtl
lock
loopne
sbb
mov
cmpsl
mov
cmp
daa
cwtl
stc
ficompl
fldcw
mov
pop
pop
scas
fcomp
pop
fidivrs
mov
fwait
lea
mov
test
ja
lret
int3
insb
push
or
mov
in
push
hlt
mov
xor
mov
mov
push
int
lahf
je
sub
mov
lea
xchg
jnp
pushf
sbbb
add
repz
cld
rorb
mulb
insl
movsl
ret
push
jnp
stos
test
adc
mov
mov
pop
and
pop
adc
mov
cltd
and
ja
sub
cltd
lock
outsb
push
inc
in
mov
aaa
mov
push
fiadds
jno
lcall
dec
mov
and
cmp
and
cmp
xchg
inc
fwait
leave
in
add
sub
inc
add
xor
or
icebp
mov
jp
vcvtps2pd
xchg
mov
dec
inc
xchg
pop
loope
mov
lahf
fiaddl
sub
shrb
inc
cltd
fdivp
inc
arpl
or
push
xchg
inc
inc
push
pop
inc
xchg
pop
fcmovne
dec
test
nop
in
mov
lcall
adc
daa
mov
loopne
out
and
loope
sbb
sti
mov
imul
outsl
pushf
int
and
imul
insl
popf
cmp
fnsave
fwait
push
adc
cmc
je
pushf
fnstcw
sbb
cmpsl
pushf
mov
xor
lret
ret
std
shl
test
jo
nop
dec
mov
or
mov
stos
xchg
je
jne
dec
pop
jno
scas
ret
sbb
push
lods
pushf
cmp
xlat
jno
cmp
jmp
xchg
ljmp
pop
dec
lds
sbb
mov
jge
scas
repnz
mov
sub
insl
adc
or
xchg
mov
fdivrl
adc
mov
mov
mov
ret
loope
xchg
test
sbb
xor
fldt
dec
mov
lods
jae
adc
call
clc
push
aam
jp
adc
cmp
sub
mov
pop
sbb
jo
in
mov
adc
xor
out
lds
xor
bnd
xlat
push
sbb
lret
push
sbb
rcll
repz
fs
push
adc
test
push
adc
repnz
inc
sbb
mov
xor
mov
imul
cmpsl
movsb
jno
dec
popa
cmpsl
std
pop
mov
sbb
js
cld
xor
leave
cmc
sub
sti
mov
iret
add
jmp
cmp
sarl
mov
shrl
inc
es
or
int3
adc
orl
mov
xchg
jle
cmc
xor
or
pop
decb
hlt
into
sbb
enter
dec
jb
pop
nop
sub
out
jne
dec
lods
cltd
mov
mov
repnz
jp
push
adc
sbb
mov
and
mov
mov
cli
mov
outsl
rcrl
mov
scas
andb
or
jmp
sahf
xchg
pop
iret
scas
lcall
push
lock
scas
into
lcall
dec
rcl
xor
repnz
sbb
fsubrl
adc
imul
inc
jno
xor
movsb
jl
xchg
ret
ficoms
mov
imul
jnp
pop
js
fwait
lods
push
cs
sub
mov
pop
mov
and
pop
movsl
jne
test
and
pop
inc
cmp
cltd
jo
sbbl
gs
fsubl
aas
mov
aam
rclb
xor
dec
lret
mov
adc
dec
sbb
fsubrl
or
les
push
fsubs
repz
decb
mov
jae
mov
sbb
inc
out
mov
or
pop
and
outsb
xor
lcall
jb
cmp
mov
pop
loop,pn
or
adc
push
mov
je
add
mov
dec
push
adc
and
cmp
addb
sarl
fiaddl
addr16
pop
movsl
mov
cwtl
faddl
cmpsl
ret
xor
jno
sub
jle
scas
lahf
fxch
loope
xchg
mov
add
pusha
or
adc
dec
push
pop
dec
push
mov
cmpsb
jg
sub
pop
xchg
test
fcomp
fcmovnu
sbb
inc
pusha
mov
mov
mov
lret
rclb
insb
or
mov
dec
jb
jp
cmpsb
adc
mov
inc
xor
push
adc
and
mov
imul
mov
repz
pop
aaa
or
in
xor
push
mov
fisubl
movsb
lret
pop
aas
mov
adc
lods
mov
xchg
inc
test
mov
mov
add
push
inc
sarl
pop
mov
add
insl
xor
lods
mov
xchg
and
dec
cmp
sub
xchg
jp
ljmp
mov
add
xchg
mov
pop
test
lds
mov
pop
icebp
add
add
popa
or
xor
xchg
andl
xchg
adc
ds
cmp
and
mov
in
xchg
inc
add
jge
pop
push
aam
rclb
ljmp
pop
fsubl
sbb
jnp
sbb
jge
mov
mov
xchg
push
clc
dec
push
outsb
xchg
jmp
mov
mov
nop
in
push
xchg
inc
push
inc
movsl
test
dec
mov
adc
mov
in
sti
dec
xchg
jp
xchg
dec
ret
xor
aaa
pop
test
dec
shlb
pop
into
iret
lds
dec
imul
popf
pushf
jmp
lds
adc
dec
sbb
scas
dec
lcall
push
add
test
and
mov
cmpsb
add
jns
xor
and
shlb
lcall
cmpl
xchg
int3
sub
dec
test
adc
sbbl
dec
gs
jecxz
push
push
cmp
mov
js
aam
jg
dec
push
fyl2x
test
sub
push
mov
cmp
xstore-rng
cmpsl
ret
es
lea
loopne
xor
or
adc
or
ljmp
stos
lods
pop
dec
shrl
sub
stos
enter
mov
dec
ja
aad
adc
iret
inc
dec
xchg
repnz
sti
mov
pop
push
sbb
jg
and
fsubr
xor
insl
movsl
mov
mov
lods
stos
dec
sub
jmp
push
out
fbld
mov
fists
cmpsl
mov
push
fsub
jmp
pop
sub
mov
scas
addr16
fstl
add
mov
xchg
mov
adc
push
sbb
je
and
hlt
cs
shlb
sbb
leave
xor
jl
fidivrl
xor
js
pop
add
xchg
jb
adc
and
xchg
jmp
push
mov
inc
push
mov
mulb
xchg
xor
pushf
xor
dec
inc
les
and
sarb
jl
mov
fcoms
testb
insl
inc
pop
fst
outsl
data16
inc
inc
ret
loop
stos
insl
dec
enter
xchg
div
or
push
xor
js
ret
add
add
or
lods
andl
aam
jle
and
insl
inc
fmuls
jmp
cli
xchg
mov
push
pop
dec
mov
lret
cmpsl
jae
add
test
dec
push
xchg
pushf
inc
scas
cmp
sarb
add
lods
fsubs
gs
adcl
ffreep
jg
mov
pop
inc
xor
xchg
jne
cs
and
push
or
and
rcr
sub
or
or
in
pop
xchg
cmp
inc
xchg
mov
sub
push
aam
xor
adc
daa
insb
sub
cmp
and
adcl
push
mov
ret
popa
or
xchg
mov
frstpm(287
xchg
mov
dec
movsl
into
arpl
fucomip
in
dec
jns
ljmp
hlt
in
push
add
adc
inc
dec
adc
dec
xor
rorb
adc
dec
dec
adc
int3
jae
shrb
mov
sub
sarl
mov
scas
mov
mov
lods
mov
out
jl
les
sbb
dec
aas
xor
inc
xor
mov
mov
inc
in
inc
mov
add
aas
sbb
push
cltd
les
lahf
scas
popa
mov
adc
pusha
testb
lds
or
pop
sbb
insl
pop
xor
jae
push
ficoml
test
sub
adc
push
lods
out
xor
mov
andb
sbb
jg
jmp
jp
push
jecxz
or
jle
pop
test
es
sahf
jmp
push
jno
cmpl
xchg
fistpl
lahf
push
pop
loopne
fadds
lret
pop
jae
dec
sub
jecxz
mov
int3
testb
jge
nop
jge
jg
dec
movb
rol
dec
sbb
xchg
adc
push
and
and
mov
push
pop
pop
iret
xchg
outsl
frstor
xchg
test
mov
adc
fisttpl
test
ds
dec
pop
addr16
sbb
sbb
stos
faddl
pop
add
ja
rcrb
inc
ja
sbb
shlb
rcll
fsubrs
clc
add
movsb
in
jb
aad
dec
sub
insb
mov
inc
mov
rcr
mov
mov
inc
jge
mov
jae
xchg
daa
pop
mov
paddusw
cmp
int3
mov
and
cmp
test
imul
popa
mov
sbb
xor
push
aas
fistpl
jnp
int
jmp
movsl
repz
push
divb
adc
iret
test
mov
pop
mov
inc
jle
jmp
clc
jbe
rorl
mov
add
arpl
fisttps
sbb
pop
pop
cmp
or
xchg
popa
pop
fistpl
lods
dec
sbb
stos
inc
add
lret
xchg
fimuls
jge
xchg
mov
clc
cmp
or
cmp
adc
inc
inc
pop
push
outsb
lret
mov
mov
inc
pop
jl
fmuls
out
pop
sahf
ljmp
jnp
ret
test
jno
ja
loope
js
pop
call
enter
lahf
pop
fwait
adc
add
shlb
mov
pop
test
sbb
pop
loop
pop
or
pushf
push
divb
jecxz
ret
dec
loop
int3
int
pop
bound
and
pop
in
jecxz
enter
add
xorb
sbb
sbb
cli
jmp
fdivl
jbe
stos
fsubs
dec
js
inc
push
or
loopne
pop
xchg
gs
lea
pusha
in
cltd
scas
subl
subl
lds
sbb
fwait
add
in
sbb
mov
and
clc
dec
and
ret
mov
inc
cmpsb
pop
xchg
lret
pop
outsb
push
jl
cmpsl
lret
xchg
test
mov
mov
das
jmp
or
sbb
and
mov
jle
cltd
adc
pop
jae
in
mov
pusha
lcall
cmp
rorb
in
decb
je
test
xor
cwtl
cs
mov
test
sub
mov
inc
call
cs
xor
repz
mov
add
jae
dec
fisttpl
mov
and
icebp
je
push
adc
mov
shlb
sub
call
xor
frstor
mov
std
pop
mov
lahf
test
loopne
enter
mov
dec
sbb
adc
aad
jp
nop
pop
and
insl
cmpsb
sbbl
mov
dec
sub
inc
mov
lcall
jl
lret
aas
dec
cmp
ss
stc
jo
ret
sub
test
xchg
insl
icebp
cmp
inc
jae
mov
mov
mov
lods
inc
sbb
and
lahf
scas
lret
jo
jge
loope
pop
inc
xchg
leave
loop
jb
push
fstps
xchg
jge
jo
or
xchg
sbb
pop
dec
cmpsb
xor
test
or
pop
pop
out
mov
jb
fwait
ja
nop
in
lock
mov
pushf
sti
icebp
or
mov
dec
stc
push
out
mov
lcall
mov
das
insl
xchg
imul
add
pop
sbb
lea
push
sub
dec
ret
push
clc
push
inc
fcmovb
fdivp
push
frstor
enter
arpl
push
mov
pop
or
imul
adc
jg
test
pop
repz
mov
sub
sbb
jae
mov
ficoml
mov
adc
inc
gs
jle
sbb
add
lods
fldcw
fwait
push
sub
call
mov
jle
sub
into
pop
scas
ret
jmp
orb
sbb
jg
mov
dec
ret
or
mov
das
adc
jecxz
or
xchg
mov
in
xchg
lea
dec
pop
xor
mov
faddl
jecxz
inc
fcoml
cmp
jbe
sbb
imul
enter
bswap
jp
jmp
shl
clc
xor
dec
xchg
fdiv
lcall
mov
shr
rep
mov
imul
or
fdivrl
xor
mov
dec
pop
add
xchg
and
mov
mov
xor
shrl
lcall
dec
xor
shl
mov
push
sub
and
mov
mov
dec
fiadds
in
scas
xor
cmp
push
stos
push
push
cmpsb
push
stos
imull
push
or
xor
fisttpll
push
rorl
fcmovbe
repnz
push
leave
nop
push
loop
fmuls
sbb
addl
xchg
sub
xor
cwtl
data16
fwait
xchg
in
sahf
sahf
fcom
mov
vzeroall
jmp
cmpsl
ret
fld
clc
rcrb
fwait
mov
or
add
xchg
or
jg
sbb
xchg
sub
int
xor
adc
xor
add
repz
les
iret
outsl
clc
push
sub
inc
xlat
repnz
and
jo
add
nop
push
lock
add
orb
mov
sbbb
dec
pushf
fs
dec
adc
outsl
ror
sbb
std
or
xchg
ds
jge
into
cs
fdivs
adc
push
shrb
ljmp
pop
imul
mov
xchg
popa
je
push
mov
push
inc
add
push
lock
rolb
ss
xor
inc
decl
cmp
sbb
jge
lock
add
dec
enter
aas
sub
inc
inc
pop
cmc
test
adc
pop
xor
sbb
lea
pop
aam
inc
popf
sub
movsl
mov
dec
sahf
mov
xchg
mov
cmpsl
rcr
mov
dec
sahf
pop
pop
movsb
repz
popa
mov
push
pavgb
mov
js
stos
adc
popf
xor
xchg
xchg
mov
mov
pushl
hlt
dec
xchg
jno
ret
gs
inc
xor
rorl
or
loope
std
fildll
push
fbstp
sub
jg
mov
push
in
test
icebp
out
pop
loope
es
cld
mov
adc
mov
and
xchg
test
fisubs
pop
jae
ret
push
mov
jns
cltd
mov
jg
aaa
jg
push
sbb
or
or
add
xchg
cmp
mov
mov
cwtl
push
fstl
arpl
cmp
adc
inc
inc
popf
push
mov
pop
ret
xor
shrb
andb
cltd
test
mov
pop
jb
sti
push
jge
jg
out
mov
dec
add
xchg
inc
sbb
idivl
stc
nop
cmp
mov
out
mov
hlt
stc
std
cs
sbb
mov
adc
sbb
in
leave
pop
or
xchg
xchg
mov
push
mov
sbb
sub
lahf
xchg
fcomip
mov
adc
mov
sbbl
mov
pop
xchg
jecxz
xchg
rorb
insb
mov
in
xor
ret
popf
xchg
dec
arpl
fwait
add
dec
pop
ret
movsb
js
dec
cwtl
dec
mov
mov
dec
jae
inc
bound
sti
test
jl
cltd
and
inc
add
jb
mov
nop
xchg
cwtl
shrw
push
and
xchg
pop
xchg
cltd
mov
sbb
jmp
sbb
dec
jge
fwait
jle
jle
data16
sub
push
aas
adc
or
and
mov
jecxz
insb
jbe
test
popa
sub
xorb
shrb
mov
pop
add
mov
clc
repnz
pop
imul
roll
in
mov
outsb
or
cwtl
or
dec
push
pusha
outsb
sub
push
cmpsb
sub
jl
dec
or
mov
popf
jae
fldt
sub
ficomps
bound
mov
clc
stc
cmp
lret
push
cmp
lcall
xchg
push
mov
sti
xor
bound
mov
or
arpl
loop
xchg
mov
idivl
aad
call
push
xchg
iret
test
arpl
cmpsb
inc
xlat
lock
add
inc
mov
loopne
out
lahf
ret
shr
jb
jmp
sbb
adc
mov
ja
xor
xchg
mov
shlb
lret
mov
pop
adc
dec
mov
dec
hlt
xchg
jns
mov
lock
inc
ja
in
add
cmp
pop
idivl
mov
add
dec
pop
sub
insl
inc
lret
mov
push
xchg
jae
adc
popf
dec
adc
leave
mov
cs
adc
and
mov
pop
and
xor
test
mov
repz
imulb
push
cmp
inc
lcall
cmpsb
pop
nop
fisubrl
inc
pop
fmul
add
cwtl
sahf
scas
jns
jmp
jl
dec
fdivrp
cmpl
sbb
xlat
cmp
shlb
sub
test
and
fsubs
jb
mov
xabort
rcll
lahf
imul
int3
fdivp
dec
push
and
aas
arpl
mov
cmp
inc
clc
pop
je
mov
dec
inc
add
dec
mov
sbb
push
pushf
pop
or
loopne
cmp
inc
sti
iret
adc
adc
pop
jns
mov
repnz
mov
enter
mov
call
and
jecxz
insl
movsl
add
pop
adcb
pushf
cli
inc
sub
mov
mov
imul
cmp
mov
cld
dec
jb
pop
popf
mov
push
outsb
push
loop
dec
push
movsb
les
pop
push
sub
jne
adc
movsb
push
inc
in
xorb
sub
popa
mov
mov
test
popl
sub
sbb
shll
sti
sub
xor
mov
pop
fcomps
cltd
mov
fucomip
push
pop
lods
xlat
mov
mov
jns
jg
and
jle
mov
fnstsw
mov
pushl
notl
mov
popa
mov
jbe
mov
negb
xchg
or
test
loope
jnp
fwait
cmp
inc
inc
je
out
test
inc
inc
orb
std
dec
aad
dec
mov
cmpsl
mov
fcoml
pop
jecxz
adc
jg
adc
das
stos
mov
mov
test
das
fnstsw
imul
fimull
popa
mov
inc
lret
scas
stos
cmc
test
or
xchg
ficoml
es
lock
les
inc
das
inc
bound
fsub
ffreep
ljmp
fldl
push
fdivrs
loop
xchg
push
dec
test
mov
add
scas
fsubrs
lock
mov
push
test
mov
fsubrl
movsl
test
ret
repz
push
xchg
imul
adc
mov
dec
mov
pop
xchg
cmc
pop
add
xor
pop
inc
pop
push
mov
ret
loopne
fnstsw
add
jmp
idivl
std
call
dec
jl
adc
mov
and
iret
stos
sahf
inc
pop
cmp
mov
dec
iret
sti
popf
mov
mov
enter
jne
lock
cmp
and
dec
dec
push
les
pushf
mov
stos
mov
notb
sub
bswap
jne
call
inc
dec
addr16
aaa
or
cwtl
mov
push
nop
sbb
push
mov
js
dec
lds
xor
inc
out
std
push
pop
lret
pop
je
pop
sub
xchg
mov
cmp
add
pop
mov
lahf
in
pop
lds
pop
lea
lock
imul
mov
cmpb
inc
out
and
cmp
out
sub
bound
inc
fcomps
iret
mov
rcrl
mov
jne
jg
push
movsl
mov
fucomip
daa
clc
add
mov
in
sbb
jo
push
jo
xor
int3
frstor
scas
cwtl
lret
inc
push
push
insb
jae
nop
loop
roll
ja
sbb
cmp
lret
jae
cmp
sub
out
mov
sub
mov
nop
jae
daa
sub
mov
pop
mov
dec
mov
icebp
xchg
jmp
popf
fstl
add
mov
xchg
xor
push
stc
popa
lahf
add
push
push
cmp
or
or
add
mov
out
mov
pop
out
adc
sahf
push
push
fdivrl
cli
stos
jnp
jne
insl
or
mov
mov
movsb
xchg
and
es
in
xchg
arpl
incl
mov
or
fsubr
xchg
lret
loope
in
pushf
idivb
mov
int3
inc
mov
fwait
pop
lea
clc
sti
mov
jnp
lds
fidivrl
mov
adc
lret
out
cwtl
mov
cmpsb
iret
jns
jg
sbb
les
cmpsb
leave
pop
pop
aas
xor
mov
push
in
mov
mov
push
xchg
and
sub
inc
sub
data16
mov
add
push
sbb
stos
fistl
adcb
test
faddl
in
test
jp
sahf
adc
pop
jl
push
je
mov
dec
dec
ljmp
jns
dec
mov
mov
add
sub
push
fsubrs
lret
lcall
push
fisubl
lods
cmp
jae
in
jo
push
cmp
jmp
out
data16
jns
es
pop
xchg
sbb
orb
int3
mov
cltd
gs
aam
jmp
les
cmc
stos
les
push
sub
cmp
add
xlat
xor
cmp
add
rol
enter
or
cmpsb
sbb
inc
scas
pushf
push
ss
lahf
pusha
mov
enter
push
xor
or
popa
insb
mov
lods
add
mov
add
std
mov
sub
cli
jbe
repz
xchg
push
ficomps
loope
cmpsl
mov
js
pushf
ret
cwtl
sbb
pusha
mov
sti
cmpl
push
test
fildl
mov
xlat
add
out
mov
fmuls
cmp
dec
xor
ret
ljmp
test
sub
mov
js
int3
push
xchg
jne
xchg
xor
int3
push
call
mov
sub
mov
fsubrs
mulb
nop
lcall
inc
jns
shr
repz
mov
shrb
iret
mov
pop
mov
fwait
cs
ror
rcll
int3
xor
cmc
jnp
dec
and
lods
test
dec
fsub
fbstp
mov
hlt
stos
insl
out
push
push
ret
inc
add
mov
pop
or
mov
xchg
arpl
repnz
dec
cltd
or
jle
cmpsl
outsb
les
pop
int
movb
bound
pop
cmp
je
mov
sub
popf
fists
fucomi
cwtl
cwtl
mov
mov
or
lret
faddl
pop
adc
fstpt
scas
sbb
mov
inc
push
mov
mov
mov
mov
rcrl
jle
orb
push
bound
daa
in
es
add
inc
imul
sbb
jp
sarb
shlb
fwait
aam
outsb
in
mov
lea
push
inc
mov
pushl
jg
jmp
fisubrl
mov
ret
inc
inc
mov
les
xchg
push
pop
aaa
je
inc
loop
jg
pop
test
scas
sbb
in
xor
lret
xchg
inc
mov
bnd
movaps
rcr
repz
or
outsb
sub
test
sub
lcall
adc
js
cmp
das
in
inc
sbb
aad
mov
jg
test
dec
je
outsb
cld
jb
adcl
inc
push
mov
decl
cmp
js
sub
les
mov
pop
or
push
sbb
ret
xchg
push
fs
int3
pop
aam
inc
cmc
jmp
pop
xor
test
mov
dec
loope
jp
inc
mov
sar
inc
dec
sti
ja
inc
or
or
or
xor
fucomi
repz
shl
fstl
addb
adc
mov
mov
rorb
cmp
sbb
leave
inc
repz
testb
stos
mov
jnp
dec
jbe
fwait
and
daa
sbb
ljmp
fstpl
mov
jbe
sub
jns
daa
sbb
mov
int
outsl
sbb
xchg
and
xchg
lcall
push
inc
mov
fucomi
rep
dec
jg
mov
cmp
mov
adc
push
subl
inc
rclb
inc
test
sbb
incl
sbb
out
mov
and
adc
mov
mov
ds
xorb
dec
mov
mov
fcomps
daa
mov
cmc
pop
int3
sbb
test
cmpsl
ret
push
xchg
iret
mov
sbb
mov
inc
sbb
cmp
fcomps
jb
aaa
jle
fisubs
test
inc
push
ja
bnd
pop
sbb
sahf
mov
fstp
out
pop
test
mov
dec
jbe
jp
adc
cli
push
inc
push
mov
jno
mov
insl
push
mov
lret
leave
jns
mov
xchg
fldenv
ljmp
and
cmp
repz
mov
jo
inc
rcll
andl
push
sub
inc
lea
je
addr16
test
mov
pop
xchg
push
dec
icebp
cmpsb
inc
rcrl
ljmp
mov
add
jb
shlb
int
adc
xchg
test
insb
or
int
mov
sbb
outsb
jb
mov
or
enter
sbb
mov
insl
in
inc
sahf
mov
dec
sub
sbb
lret
ret
mov
movsl
mov
jecxz
jecxz
imul
jl
es
nop
pop
cmp
in
lods
hlt
movsl
test
test
int
push
cs
mov
rcl
xor
push
adc
cld
jo
and
add
test
xchg
inc
hlt
mov
mov
arpl
inc
data16
or
test
sbb
popf
fildll
icebp
fwait
lahf
lahf
inc
mov
fidivrs
js
sbbl
xlat
js
add
popl
xor
shrb
mov
dec
cmpsb
pcmpeqw
xchg
mov
and
xor
mov
push
mov
fnstsw
xor
dec
or
xchg
enter
inc
or
add
mov
inc
fnstenv
rorb
stos
repz
mov
and
movsl
add
mov
mov
xor
or
out
sbbl
addb
jns
cwtl
lret
pop
jp
enter
xchg
fwait
les
imul
mov
inc
inc
pushf
push
mov
fucomip
inc
arpl
jl
daa
dec
inc
retw
xor
push
add
add
xchg
test
test
dec
adc
cmpsl
xchg
push
push
cwtl
in
inc
sbb
scas
xchg
fcompl
repz
xchg
adc
js
inc
xchg
xchg
xor
pusha
hlt
inc
aas
mov
jne
add
jle
sbb
xchg
xor
popf
stos
jmp
je
insl
jecxz
and
out
dec
add
jb
ret
push
xchg
lds
enter
jno
and
fwait
lea
icebp
test
out
popf
repz
jo
movsl
push
or
mov
adc
pop
orl
sub
lods
add
jno
or
roll
inc
ja
or
ret
inc
int
psubq
pop
push
clc
sub
mov
push
cmpsl
xchg
add
sbb
xlat
and
in
xor
bound
mov
pop
inc
jl
cli
mov
add
fs
add
add
inc
sub
push
pop
mov
mov
xchg
popf
cmp
inc
sti
int3
int
aad
push
mov
test
add
pop
sub
xchg
pop
sub
lea
push
fists
pushf
mov
adc
pop
inc
push
sub
mov
push
mov
jb
fwait
out
dec
dec
dec
enter
inc
in
fiadds
daa
xchg
cmp
jp
jmp
xor
cmp
mov
inc
mov
sub
stos
sti
inc
adc
movsb
rolb
fdivr
jmp
movsl
std
notl
dec
repz
bound
std
lret
ret
sbb
or
icebp
sub
jns
mov
and
pop
test
scas
add
pop
xor
jnp
jl
sbb
xorl
test
xchg
sbb
sub
insl
xchg
aas
cmpb
outsb
stos
push
push
out
fstl
test
and
inc
icebp
mov
add
xchg
fisttpl
je
aam
js
or
add
mov
fmuls
or
cmp
out
xchg
sbb
sub
or
aad
mov
in
fcoml
xchg
mov
in
je
cmp
and
xor
jl
mov
mov
xor
xor
jp
dec
pop
fcomip
out
xor
ss
mov
mov
aaa
std
add
clc
sti
popf
iret
mov
inc
mov
shlb
ret
mov
adc
lret
in
mov
movsl
mov
out
leave
push
nop
xlat
stos
movsl
testl
lods
test
fwait
jae
ljmp
jnp
loop
xor
lret
or
shll
incl
mov
inc
scas
or
mov
stos
push
lea
jl
fcmovne
cli
jae
jg
shrb
jnp
inc
lahf
mov
scas
and
lea
sti
sti
loop
xor
or
or
add
and
mov
adc
test
fsubrs
push
aam
fistl
and
ss
cmp
enter
pop
xor
daa
xor
int3
mov
sahf
cmp
sub
cs
aad
jge
shl
stos
mov
call
jae
repz
int
lock
mov
lret
jecxz
scas
inc
push
leave
and
xchg
ret
stc
sbb
dec
adc
int
stos
dec
rcrb
cmp
mov
movsb
fisubl
data16
push
popl
fucomp
jae
sbb
aad
mov
xchg
test
pop
mov
adc
fwait
xchg
mov
andps
and
mov
xabort
jle
mov
or
mov
lahf
xor
and
lds
out
push
sbbl
or
mov
pop
xor
addr16
test
jp
in
push
pop
subl
inc
mov
dec
lahf
in
cmpsb
jnp
out
cmp
lahf
es
out
sbb
xchg
xchg
add
lret
cmpl
inc
adc
cs
ss
dec
or
jnp,pt
shr
repz
adc
out
mov
clc
cmp
dec
lahf
lret
or
add
enter
mov
movsl
mov
shlb
loop
shlb
mov
sarl
mov
outsl
lcall
scas
xchg
fsts
add
fbld
pop
int
dec
sbb
xchg
sbb
jecxz
xor
inc
rorb
inc
and
testb
or
mov
xchg
mov
lods
inc
clc
rcrl
cmc
push
nop
mov
and
mov
add
idiv
pop
mov
jns
sbb
xchg
push
xchg
cwtl
adc
movsl
jno
sarb
mov
rol
mov
mov
jb
gs
inc
cltd
into
scas
iret
pusha
mov
jg
loop
inc
fnstcw
imul
push
mov
sub
mov
mov
push
fistl
sbb
imul
mov
add
fidivs
ret
pop
in
aam
pusha
fsts
adc
sbb
add
cmpsb
leave
fsubrl
xor
mov
lods
repz
lret
inc
ret
and
jne
sub
push
cmpsl
fbstp
inc
mov
lahf
popf
xchg
je
scas
jae
cmp
cmp
mov
mov
lds
fcmovnu
xchg
xchg
lret
arpl
lret
mov
dec
icebp
test
mov
sti
xor
sub
mov
repz
adc
repz
add
add
adc
fdivrs
mov
jno
jp
mov
xchg
imul
jno
test
xchg
fisttpll
lock
push
or
ja
les
mov
push
or
out
dec
or
dec
push
dec
mov
sbb
pop
pop
into
inc
push
mov
ret
dec
push
iret
jl
and
sub
jmp
shlb
aam
orb
ret
ds
xchg
fistpl
aaa
jp
scas
dec
xchg
push
and
push
test
xchg
lds
fisttps
jae
inc
pushf
cmp
scas
mov
adc
pop
into
aaa
inc
icebp
and
add
mov
pop
ja
mov
pop
and
pop
test
mov
mov
jecxz
mov
or
js
pop
scas
mov
push
pop
aas
add
jmp
loope
adc
daa
xor
and
fwait
xor
addr16
adc
lahf
cmp
test
sub
xchg
push
daa
lea
lahf
cmpsl
xchg
fldcw
cmpsl
mov
and
mov
xor
mov
mov
gs
cs
inc
mov
gs
push
or
roll
adc
push
jbe
mov
scas
neg
push
into
push
xchg
scas
lahf
clc
jnp
mov
sbb
pop
dec
aaa
jo
sti
mov
sub
aam
movsl
dec
bound
adc
lods
dec
pushf
dec
jne
adc
xor
clc
test
mov
fisubs
ds
xchg
jnp
dec
sub
pushl
or
in
lcall
or
adc
xchg
in
negb
fdivrs
lock
sbb
lret
iret
scas
pop
rcr
jl
dec
cs
inc
fwait
lds
loopne
xor
cmp
dec
fidivs
and
test
movsl
rcrb
sbb
movsb
push
bound
in
ret
insl
in
aam
ficoml
shlb
push
jae
insb
mov
lds
sbb
in
push
and
sub
sub
mov
push
jmp
xchg
hlt
lcall
fdivr
mov
mov
lds
ret
fwait
rol
push
mov
lock
adc
rorl
into
adc
insl
xchg
mov
cmp
int
lret
je
xchg
ds
jno
outsl
fwait
jno
fstps
loope
mov
aad
mov
inc
push
sub
test
mov
lret
pop
test
jns
addr16
jb
scas
repz
fmul
ds
in
xor
shl
or
inc
jl
pop
mov
stc
or
test
add
cmp
out
loopne
pusha
pop
mov
xchg
jge
aam
cltd
cmp
xchg
jmp
movsl
ret
mov
push
mov
mov
fildl
add
shr
jmp
cwtl
jae
and
shl
in
fdivrs
je
or
mov
mov
cmp
mull
add
xor
dec
jae
shrl
jne
mov
xlat
jl
test
mov
or
xor
push
inc
add
lods
shll
sbb
jb
incb
fistl
jno
cmp
lods
sahf
stos
push
push
push
xchg
lcall
pop
ljmp
std
aad
and
test
mov
fisubl
sub
and
xchg
fcmovne
xchg
cmovno
pushf
rolb
sbb
outsb
fisttpl
add
fstps
std
movsl
and
xchg
mov
mov
movsb
sbb
lea
nop
push
pop
mov
and
xchg
or
mov
movsl
ja
mov
insl
mov
out
cmp
psraw
gs
gs
insb
and
ret
stos
cmpsb
mov
pop
inc
cmc
mov
lods
fsts
inc
adc
popf
jo
movsb
shlb
mov
jl
mov
push
add
movsb
jmp
sbb
inc
orb
leave
jmp
lret
cmpsl
push
and
lret
mov
arpl
rorl
push
add
decl
jmp
pushf
cmc
fbld
test
or
sbb
cmp
mov
xchg
cmpsb
fcmovne
negb
stos
dec
fs
cmp
mov
sbb
lahf
adc
fdivp
and
xchg
xchg
mov
es
or
pusha
sahf
sar
sti
push
inc
mov
rorb
out
aam
repnz
je
fwait
xchg
mov
ja
enter
test
insb
jl
cmp
cmp
icebp
fldenv
jg
pop
inc
mov
sbb
or
dec
mov
and
inc
dec
popa
pop
adc
mov
les
push
sahf
xor
sub
sbb
jno
mov
repz
loopne
enter
add
cmp
or
mov
divb
rcrl
dec
mov
pop
mov
pop
stos
inc
xchg
mov
rclb
repz
mov
fldt
pushl
inc
or
mov
js
sbb
cmpsb
lds
mov
or
push
mov
mov
mov
push
mov
gs
sub
pusha
mov
scas
jns
out
je
incb
mov
test
rcrb
dec
xchg
add
cs
dec
xchg
daa
addl
test
jno
dec
movsl
fwait
repz
xchg
ljmp
jg
xlat
int
out
fcoms
imul
pop
and
and
pop
xchg
push
ds
js
faddp
mov
mov
cs
lock
leave
mov
ljmp
and
pop
lahf
ja,pt
mov
push
test
cmp
inc
popf
sbb
ja
insl
mov
sbb
orb
stos
sub
inc
stos
dec
orb
xlat
sbb
xor
sahf
sbb
fildll
xor
int3
mov
out
lret
fbstp
cmp
cmp
aam
pop
add
notl
roll
lret
bnd
push
not
das
sub
scas
xchg
sbb
ficoms
mov
mov
psraw
mov
loope
mov
shld
push
gs
rcrl
test
movsl
xor
add
lahf
pop
nop
mov
enter
enter
xor
sbb
sub
add
and
insb
or
shr
lret
inc
and
xor
lea
cmp
lahf
xchg
lcall
or
movsl
dec
divl
mov
lds
fnstenv
sbb
test
mov
test
lock
mov
sub
add
in
mov
sbb
jp
inc
pop
fwait
cmc
cmpsb
mov
popf
and
stc
movsb
aaa
sub
repz
jno
imul
adc
das
test
xchg
inc
pop
ljmp
mov
ret
jp
fiadds
cli
test
filds
mov
jne
outsb
dec
add
cmp
fs
adcb
arpl
arpl
cmp
cmp
pop
fs
cmp
xchg
inc
sub
cltd
in
add
inc
das
sbbl
xlat
xor
mov
mov
je
push
inc
lds
mov
imul
mov
mov
dec
popa
inc
orl
adc
cwtl
fnstsw
shll
sahf
stos
sub
mov
xor
ret
shrb
inc
les
xchg
jecxz
mov
mov
push
mov
fcomps
clc
mov
pop
xchg
pop
shrw
add
fnstcw
repz
cltd
pushf
push
cld
xor
adc
cld
mov
adc
push
inc
push
pop
mov
fs
stos
inc
xchg
lods
pop
dec
push
cmpb
jmp
and
rolb
lcall
inc
pop
imul
test
std
jnp
and
out
inc
les
rclb
cmpb
loope
lods
xlat
push
sarb
cld
xor
insl
dec
in
pop
mov
pusha
push
movl
mov
cmpsl
test
mov
negl
sahf
xchg
das
jge
sbb
push
pushf
sti
inc
adc
popf
sarb
push
fdivp
adc
jno
xchg
mov
hlt
mov
pop
sub
mov
aam
cmp
jno
cli
and
gs
pushf
lahf
pop
sbb
and
rcr
shlb
pop
mov
push
inc
in
popl
add
mov
mov
shll
into
stos
cld
push
cmp
adc
mov
sbb
push
cmp
das
outsb
dec
mov
test
sbb
pop
scas
fstpt
mov
imul
mov
or
repz
mov
jge
stc
xor
enter
fistpl
mov
dec
test
mov
add
inc
push
xor
jns
and
xor
pop
fcmovnu
and
scas
test
nop
jne
inc
mov
dec
fnstenv
das
or
pop
in
test
popf
mov
insl
mov
test
fucomip
hlt
cmp
fsubl
hlt
xor
test
cmp
ss
inc
out
mov
gs
cs
sahf
mov
pop
leave
lea
cli
mov
lcall
dec
add
scas
sbb
mov
fucom
repnz
das
lret
mov
popf
in
mov
pop
adcb
rcr
inc
cmc
or
arpl
push
rclb
mov
popf
ja
ud1
sar
mov
cmp
or
repz
in
mov
jecxz
jae
movsl
adc
insl
xchg
adc
nop
push
adc
push
mov
call
lock
fsubs
jl
sbb
dec
shlb
mov
aas
or
push
gs
sbb
aaa
out
lea
insb
or
jmp
loop
das
int
cmp
jg
shr
xor
dec
std
sbb
loop
jge
mov
aam
mov
sbb
in
dec
sbb
sbb
cmp
aad
lock
int3
sbbb
jl
nop
mov
out
imull
sbb
popa
adc
popa
scas
push
add
into
arpl
and
ds
mov
imul
scas
fldcw
push
lock
pop
mov
jmp
lret
fmull
scas
mov
xchg
mov
jmp
ret
nop
xchg
cld
sbb
fdiv
sbb
dec
popl
fsubrs
cwtl
xor
cmpsb
and
xchg
call
pop
cli
adc
jno
sbb
inc
test
add
aaa
pop
imul
mov
mov
jecxz
cltd
mov
dec
into
adc
xchg
lds
lret
jge
js
call
les
leave
mov
pop
pop
cltd
xchg
insl
jl
fbld
pusha
cmp
xor
adc
nop
test
mov
call
leave
ja
int3
fnsave
mov
les
aad
mov
sbb
mov
das
fisttpll
mov
jns
stc
mov
mov
fsts
jb
imul
and
push
mov
repz
and
push
push
dec
cltd
lods
inc
mov
mov
lahf
scas
adc
jbe
popf
push
pop
stc
jle
pop
andl
aad
imul
adc
jnp
in
pop
ret
ljmp
ret
aaa
sub
test
pusha
pop
insb
jbe
out
jl
mov
adc
clc
xor
push
cmpsb
and
imul
or
aam
imul
lcall
pop
push
cltd
sarb
ljmp
das
movsb
ds
hlt
stc
mov
cs
xor
mov
mov
mov
jmp
push
popf
adc
push
xchg
lret
pop
and
pop
stos
aam
shrl
popa
movsb
fildll
rorl
lret
repnz
mov
pop
sbb
dec
jb
sub
mov
mov
jle
inc
jns
addr16
rcrl
test
mov
sub
mov
cmc
cmpb
push
es
leave
loop
out
mov
mov
mov
je
mov
repnz
dec
jae
hlt
hlt
jp
inc
mov
pop
adc
xchg
aas
and
mov
or
in
xor
cmp
jne
pop
leave
stc
repz
out
add
lcall
or
insl
mov
push
mov
dec
jae
sbb
add
lret
and
pop
inc
inc
jmp
cmp
cmc
js
mov
mov
jg
xor
xchg
in
movsl
scas
out
movsb
dec
and
xlat
enter
push
lods
push
dec
mov
sub
and
mov
bound
ljmp
sub
dec
jbe
pop
mov
push
mov
pop
xchg
adc
push
mov
pop
sub
xchg
adc
sbbb
mov
iret
fwait
call
jle
sub
test
mov
cmp
sbb
movsb
mov
mov
mov
bound
imul
jae
insl
inc
cltd
mov
mov
out
cmp
int3
xchg
add
sub
adc
les
push
loopne
stos
fcomps
fsubr
movsl
frstor
or
pop
sbb
dec
cmp
cmp
add
inc
lahf
jle
outsl
clc
jnp
mov
paddw
xor
test
cmp
add
jbe
ljmp
test
sbb
dec
fists
sbb
jns
xchg
sub
push
jnp
scas
mov
dec
or
aam
push
sbb
dec
das
add
mov
outsb
scas
stos
popf
fdivrl
xlat
dec
sahf
cmpsb
clc
pushf
cli
push
fdivrs
mov
sahf
nop
cmp
js
jns
dec
dec
loop
inc
mov
adc
andl
pusha
testb
xchg
shl
subb
fldl
insb
lods
push
lahf
or
mov
jno
repnz
sbb
ret
jb
outsb
dec
xchg
xchg
sbb
and
test
inc
loopne
mov
ds
xor
in
jb
lods
xchg
push
mov
movsl
call
pop
stos
shrb
mov
shrl
inc
sti
scas
pusha
pop
mov
scas
push
sbb
cmp
sub
mov
inc
lods
or
or
mov
lret
stos
in
or
mov
out
push
jle
inc
aas
popf
lods
push
jg
leave
cli
adc
and
fbstp
mov
cld
cmp
push
push
test
lret
push
pop
iret
nop
lcall
adc
les
cli
inc
xor
fildl
push
mov
add
outsl
push
iret
sbb
mov
imull
lcall
jl
aas
clc
mov
out
rorl
ds
sub
call
lods
push
mov
dec
adc
and
cmp
and
lret
and
bound
push
adc
adc
and
out
fisubrs
lods
call
in
pop
push
mov
pusha
repz
inc
xchg
lods
pop
sbb
decb
jno
add
push
sbb
jnp
popf
dec
inc
adc
loop
popa
lahf
int
inc
pop
sbb
sbb
jae
jne
jns
sbb
mov
inc
mov
cmp
stos
leave
lcall
xor
dec
aas
or
cmpsl
daa
xchg
jle
jp
out
pusha
pushf
fcoms
and
adc
cwtl
dec
aaa
push
pop
mov
jno
push
outsb
push
mov
std
es
xchg
pop
iret
ret
shl
sti
mov
fs
popa
jb
mov
je
lods
push
dec
call
jo
adc
push
pop
movsb
inc
xor
dec
cmpsl
ret
xchg
cmp
aad
inc
jge
stos
fs
mov
cmp
jns
xor
test
adc
sbb
or
cs
adc
shrb
and
xor
jb
popf
pushf
pop
jnp
rcr
outsb
adc
sbb
movsl
repz
push
mov
jno
mov
lds
leave
popf
adc
insb
pop
imul
mov
out
int
jb
movsb
lahf
sbb
aad
jo
mov
jae
outsl
mov
stos
adc
aad
mov
sbb
pop
mov
lods
xchg
add
outsl
sbb
leave
mov
pushf
jp
scas
outsb
es
push
mov
pop
cs
add
sarl
jne
jb
sub
gs
fmulp
jne
mov
out
jo
shlb
addl
loope
cmp
sahf
add
xchg
int
jae
inc
test
xor
jnp
pop
mov
or
inc
and
push
stos
call
push
cmp
mov
int3
pop
sub
lds
ret
loopne
mov
cli
je
xor
lds
pop
jmp
stos
push
push
jb
pop
jle
push
inc
in
mov
sbb
cmp
mov
cmc
lret
loope
dec
outsl
test
sar
cltd
pop
test
je
movsl
mov
enter
sbb
push
or
push
xor
sbb
scas
fbld
xchg
shll
fldt
fucomp
inc
jno
xchg
cwtl
push
cli
daa
adc
fists
pop
repnz
stos
aad
push
arpl
pop
and
sub
push
push
mov
pusha
pop
fidivs
js
popf
fmulp
fs
dec
daa
mov
aas
stos
int3
js
mov
mov
push
test
rolb
sbb
stos
addl
mov
ss
out
and
mov
mov
loopne
mov
enter
inc
out
xor
cmp
pop
push
sarl
xchg
into
outsl
sub
sbb
pop
mov
and
pop
negl
sub
dec
cmp
sbb
iret
cltd
mov
outsl
roll
sbb
jae
jno
cli
sub
cld
fs
daa
imul
pop
stos
xchg
or
sbb
rolb
sahf
jo
dec
sub
imul
mov
lds
test
push
mov
mov
jge
mov
push
mov
popa
xchg
fidivs
jbe
addr16
lahf
scas
adc
push
adc
je
add
bound
rorl
inc
inc
sbb
out
lcall
dec
cwtl
movsb
jns
fadds
adc
push
lods
xlat
push
mov
xlat
mov
outsl
sub
loopne
out
jmp
dec
inc
hlt
cltd
aam
mov
filds
enter
ret
enter
or
insl
lds
or
or
xchg
jb
movsl
sbb
mov
jb
sbb
push
push
jecxz
jge
dec
lahf
cmp
stc
cwtl
cmp
mov
adc
imul
xor
lcall
cmp
lods
dec
pop
xchg
out
sub
imulb
fnsave
shll
repz
xchg
cmp
xchg
outsb
mov
xchg
push
int3
cmp
sbb
inc
push
adc
xchg
xchg
scas
andl
add
stos
aam
popa
inc
imul
js
pop
xchg
shl
jo
adc
clc
outsb
cmp
lret
orl
mov
les
repz
rorl
in
fsubs
sub
mov
inc
pop
cmpsl
ret
fld1
jne
xchg
pop
insb
ss
mov
sbb
push
test
adc
ljmp
adc
sub
fsubr
and
ss
popf
neg
movsl
mov
jmp
lock
insl
mov
mov
pop
pop
jno
mov
test
xchg
enter
or
xor
mov
and
scas
add
sbb
out
dec
stos
push
mov
dec
and
pop
inc
popa
test
mov
xor
inc
xchg
mov
or
stos
lds
pushf
repnz
call
dec
inc
cmp
stc
sub
add
ljmp
pop
push
sbb
fsubs
pop
icebp
leave
cmc
test
aam
jae
adc
xchg
addl
add
addr16
cmp
jp
fnstenv
fidivrl
cli
xor
ret
sbb
test
pop
cmpsb
mov
push
jo
adc
out
les
or
aam
inc
fwait
mov
in
mov
loopne
repnz
mov
mov
cmp
dec
or
out
xor
mov
inc
dec
rclb
dec
xor
stc
mov
std
je
mov
sub
int3
pop
push
mov
fbstp
shll
cli
sub
ja
int3
in
iret
pop
adc
adc
adc
pop
stos
push
fwait
mov
sbb
inc
mov
mov
fucomp
int
jbe
into
aaa
mov
popa
mov
xchg
sbb
scas
mov
das
idivb
sbb
sbb
fisttpl
loopne
or
add
push
mov
jb
xor
push
cmpb
inc
push
sbb
stc
sbb
inc
aam
adc
repz
push
xor
jo
insl
test
shrb
repnz
sub
inc
inc
dec
xor
sbb
gs
outsl
xchg
pop
mov
dec
push
push
or
adc
hlt
xor
test
pop
je
aaa
fisubrs
pop
xchg
sub
stos
dec
mov
push
stos
stos
shr
ss
mov
loopne
loopne
divl
push
mov
std
jno
int3
ret
inc
sbb
rorb
xchg
dec
les
sbb
or
push
lahf
repz
fidivrl
fcomip
xor
inc
fst
dec
int
lcall
out
adc
div
lret
cltd
jmp
jne
sti
imul
aad
xchg
mov
adc
aaa
loop
mov
mov
xor
popf
sbb
mov
mov
sub
dec
mov
ret
outsb
cld
or
je
cmp
add
movsb
shll
pop
cmp
lods
subl
movsl
mov
gs
xchg
lods
xchg
adc
xlat
mov
nop
inc
and
movsl
dec
mov
mov
push
in
add
stos
dec
subl
adc
or
push
movsb
pop
sub
dec
xor
aad
cmp
cmpsb
repz
pop
movsl
bound
add
iret
loope
jmp
ja
sub
inc
hlt
inc
mov
out
cmp
mov
int
stos
sahf
pushf
xchg
sbb
xor
testl
iret
test
call
push
mov
and
fnstenv
lods
aaa
dec
int
adc
mov
mov
jo
mov
test
cmp
enter
stos
std
mov
testl
dec
repz
fs
or
mov
xor
mov
push
dec
cmp
icebp
dec
ret
subb
movsb
mov
inc
lcall
ret
push
pop
xor
mov
xlat
adc
mov
or
rolb
mov
or
sahf
add
fisttpl
and
in
sub
aam
aam
in
mov
rolb
cltd
ds
mov
ret
xchg
das
dec
mov
sub
sti
inc
adc
jne
lea
fisttps
sti
mov
fdiv
mov
add
cmc
mov
inc
mov
sbb
dec
inc
lahf
sbb
shll
cmc
dec
adc
test
out
mov
xchg
push
sub
fldl
pushf
jnp
push
pop
pop
xor
fnsave
sub
push
sbb
hlt
mov
pushf
fistl
cld
popa
push
jp
repz
jo
dec
dec
repnz
lea
js
jecxz
popf
std
lret
mov
call
jecxz
les
sub
mov
push
jp
loop
in
fnstcw
je
and
fimull
shlb
cld
xor
lods
xlat
insb
cltd
lods
rcr
xchg
mov
movsl
faddp
and
and
insl
mov
sbb
inc
pop
add
or
std
fsubs
mov
pop
inc
or
imul
lock
and
mov
inc
test
movsl
xchg
pop
pop
andb
in
jecxz
pop
mov
or
dec
jecxz
lret
nop
jns
ja
popf
addr16
ret
sbb
or
nop
sub
add
sti
sub
aaa
mov
ljmp
imul
xor
shll
jo
f2xm1
sub
xchg
and
xor
mov
aad
xlat
fs
dec
adc
test
jmp
cmpsb
push
mov
mov
test
gs
cmp
xchg
fwait
jecxz
fs
or
ds
jl
adc
mov
loope
or
out
xchg
nop
xchg
cwtl
out
and
call
mov
push
lret
sbb
fistpll
js
mov
test
sbb
xchg
jns
sbb
jnp
ret
push
xchg
xor
imul
jne
in
stc
mov
cmc
mov
sub
mov
outsl
out
or
mov
repz
jmp
xor
or
std
mov
lahf
sbb
sub
gs
dec
fs
add
movsl
sbb
push
jmp
sahf
lock
pop
sbb
aam
pop
aam
loope
mov
xchg
or
bound
push
adc
iret
mov
scas
xchg
out
popf
inc
frstor
xchg
push
pop
lcall
adc
jb
cmp
testb
pop
addr16
cmp
icebp
dec
adc
mov
inc
and
or
mov
rcr
roll
cmp
adc
pusha
lods
sbb
ljmp
pusha
xor
cmp
mov
mov
test
cwtl
sbb
daa
ret
add
mov
in
cs
aad
xchg
je
xor
jo
ljmp
ret
loopne
stos
push
inc
jecxz
clc
push
fsubl
rcrb
or
add
cli
mov
cmpsl
ret
push
mov
clc
mov
out
fsubrl
mov
lods
push
push
xchg
lahf
adc
repnz
lcall
faddp
fbstp
es
pop
sub
mov
test
or
mov
sbb
gs
nop
inc
mov
lds
mov
orb
cmp
das
xchg
bound
add
js
rorl
arpl
cmp
jp
mov
xor
jnp
and
add
rclb
mov
cmp
pop
ds
int3
out
cmp
out
push
xchg
jne
cmc
mov
push
jb
jns
jp
push
jo
testl
pop
mov
test
mov
sarl
loopne
aam
push
fisubs
test
jecxz
jg
testb
push
jnp
inc
dec
nop
pop
sti
xor
xor
add
push
fs
sub
pop
test
call
mov
or
jle
cmp
push
repz
pop
xor
sub
aam
sbb
mov
add
mov
shrl
jge
mov
and
jnp
clc
mov
outsb
loopne
sub
inc
pusha
loop
xchg
mov
inc
ficoms
mov
imul
in
push
stos
jle
into
pushf
cmp
loop
jo
adc
addr16
inc
jecxz
cmp
rcll
cltd
push
sbb
mov
popa
outsb
enter
cwtl
gs
pop
xor
sbb
and
inc
mov
sub
xor
cs
int
push
mov
inc
pop
jp
pop
enter
mov
es
daa
jb
aas
cmp
sub
in
outsl
hlt
call
outsl
adc
mov
pop
jg
movsb
scas
add
int3
sarl
repnz
pushf
fs
pushf
adc
jg
inc
aam
dec
mov
sub
orl
insl
push
adc
insb
fldcw
pop
adc
test
mov
push
cmpsb
inc
push
mov
inc
lcall
loopne
lds
pop
into
jno
inc
jg
pop
imul
sbb
cmpsl
dec
sbb
mov
loop
xchg
push
test
inc
push
aas
vcvtpd2dqx
dec
ss
mov
iret
push
paddusw
push
in
xchg
jnp
pop
jp
call
pop
lods
jb
cmpsb
cmp
andl
inc
lahf
pop
push
bswap
sbb
sub
or
sbbb
dec
mov
pop
xchg
scas
xchg
mov
or
adc
test
daa
xor
inc
iret
cmpl
lea
pusha
sbb
adc
imul
ja
mov
add
jle
test
mov
ds
cmc
test
lret
jnp
cmpsl
shlb
into
divb
adc
mov
mov
xchg
adc
test
in
mov
sub
jb
fcmovnu
test
push
arpl
jb
and
sbb
and
fwait
dec
cmpsb
inc
xchg
cli
cmc
push
xor
pop
sub
xor
sahf
pop
xchg
sbb
mov
lock
bound
or
fbld
cmp
sub
mov
xchg
pop
lock
jnp
lea
mov
iret
mov
in
add
xor
pop
mov
ret
jl
inc
dec
adc
xor
mov
pop
xchg
push
or
mov
mov
pop
loopne
cli
cs
mov
in
cmp
jnp
adc
xor
and
jmp
push
enter
adc
ja
int3
in
mov
or
push
aaa
scas
mov
push
adc
mov
pop
push
mov
cmpb
xor
sub
pop
sub
test
xor
push
push
mov
sti
imul
hlt
ja
cmp
fldenv
sub
or
fwait
inc
xacquire
popf
dec
mov
dec
shlb
mov
or
or
daa
xchg
cmp
daa
fdivr
jb
xor
cmpsb
sub
mov
push
cltd
jo
inc
sahf
icebp
dec
fisttpl
cmp
jo
fsubrl
adc
add
int
mov
mov
inc
adc
dec
xchg
loopne
jbe
int3
adc
out
pop
mov
sub
cmp
out
and
cwtl
lcall
fadds
clc
mov
hlt
leave
cmp
imul
cmpsl
outsl
mov
xor
fldenv
js
or
xor
or
fbstp
mov
aam
cmp
inc
ja
jge
add
fbstp
mov
or
cmp
mov
fisubl
add
push
stos
inc
add
jle
cmp
push
jbe
pusha
jle
loopne
imul
fbld
cmp
insl
adc
testb
mov
push
adc
xchg
jno
mov
test
and
cltd
push
cmp
sub
mov
insb
int3
decl
imul
sarb
jle
inc
cltd
lods
scas
mov
in
pushf
insl
and
sub
js
pop
sub
js
test
adcb
test
jbe
pop
push
mov
ret
loopne
loop
ja
fucomi
std
sarl
repz
inc
fadd
inc
jle
add
and
or
imul
stos
sub
out
sub
lcall
push
push
aad
std
sbb
loope
xorl
in
jnp
jae
in
sub
iret
jne
mov
mov
scas
dec
jns
jge
add
shlb
cmp
ret
jo
xchg
mov
insl
and
push
ss
mov
lods
push
cltd
jl
fistl
mov
insl
or
dec
inc
and
ret
jo
or
adc
jp
push
cs
fildll
sti
test
cmpsb
push
add
aaa
in
pop
sub
dec
and
sub
and
test
jle
mov
mov
mov
into
pop
push
mov
rclb
cmp
fnstenv
mov
ret
ficomps
cmp
test
pmullw
add
pop
xchg
cmp
mov
fsubrl
cld
paddsb
jl
jg
mov
test
adc
cld
cmp
aad
aad
fists
pop
dec
pusha
lret
cmpsl
inc
arpl
repnz
add
mov
jnp
xor
or
adc
scas
cmp
mov
mov
xchg
enter
scas
out
jmp
popa
inc
fs
cmp
sub
push
das
jecxz
add
addr16
insl
test
shlb
out
sub
push
mov
pop
jae
xchg
gs
cmpsl
sti
push
loopne
mov
push
sbb
xor
sub
orb
hlt
imul
fbld
fcoms
mov
popf
neg
adc
insb
idiv
mov
arpl
lock
fists
rol
lock
pop
xor
dec
xchg
add
daa
push
add
dec
pop
ja
sub
dec
cs
in
push
sbb
lods
mov
pop
cmpsl
dec
lcall
push
add
lret
mov
push
xchg
pop
js
pop
int3
sub
mov
mov
mov
pop
mov
or
shrb
test
pop
clc
inc
pusha
sahf
xchg
pushf
dec
icebp
adc
ss
cld
add
ret
cmp
dec
fstpt
sti
std
mov
mov
sub
jmp
mov
gs
je
inc
cmpsb
cld
or
mov
mov
add
nop
inc
lock
cmp
add
shll
cmc
dec
inc
in
cs
inc
je
cmp
ljmp
call
sahf
xchg
xchg
popf
xor
sub
inc
push
into
mov
jecxz
cmp
or
jns
mov
scas
shll
push
rorl
cmpsb
add
outsb
pop
cmpsl
addr16
data16
pop
dec
lret
cltd
testl
xor
leave
sbb
mov
hlt
xor
scas
xor
xchg
push
cmp
stc
pop
leave
sbb
dec
pushf
testl
ja
push
vpcmpeqd
lret
pop
call
mov
lea
jns
lahf
scas
std
mov
mov
aad
cmc
xor
cmp
jl
fldt
popf
mov
mov
loop
mov
dec
and
xchg
lahf
sub
test
sub
shr
test
mov
inc
pop
adc
call
sub
mov
mov
sbb
mov
inc
xor
adc
sbb
jae
mov
mov
mov
sbb
mov
push
pop
iret
or
cmp
xor
imull
std
lds
enter
adc
mov
push
sbb
dec
and
sbb
test
in
divl
lret
imul
sub
push
dec
sub
pop
jae
sbb
push
inc
scas
xchg
lcall
stos
mov
cs
flds
mov
mov
mov
cmp
adc
and
jnp
pop
xor
loope
lea
testl
sbb
pop
xchg
out
mov
push
sbb
in
pop
push
mov
dec
jae
dec
loopne
scas
push
ret
fld1
std
jge
int
inc
cltd
ljmp
fadds
sub
aam
test
sbb
loopne
jae
ret
or
ret
pop
mov
or
call
cmp
and
inc
sarl
jne
decl
or
push
loopne
cmp
cs
ja
pop
push
stos
jg
movsl
mov
aad
sbb
dec
fildll
push
cmp
lods
das
push
sub
idivb
xchg
mov
and
mov
cld
stos
cmc
lea
loop
adc
mov
test
loopne
xor
dec
xchg
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
shr
mov
fisubl
cmc
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
add
cs
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
ret
