pusha
sbb
aas
mov
xor
add
scas
sbb
inc
enter
leave
mov
or
or
aas
jecxz
xchg
testb
dec
or
fistpl
rcrb
mov
or
jno
and
adc
mov
fisubrl
loope
and
fisttpll
mov
ljmp
jae
push
dec
cli
lea
ret
sarb
or
addr16
call
xor
ss
gs
mov
lea
jb
je
data16
scas
pop
adc
cwtl
or
sub
int
sbb
shr
seto
pop
and
insb
es
test
mov
cmp
sbb
rcl
xchg
add
hlt
and
js
imul
data16
adc
rcll
pop
scas
cltd
adcl
sub
cmpsl
popa
pop
adc
subb
or
bound
adc
jle
rcl
movntq
out
stos
mov
xchg
cmpsb
fisubl
push
pop
xor
mov
pusha
xchg
jecxz
jg
fcomi
jecxz
jg
add
mov
daa
daa
adc
popa
inc
pop
rep
arpl
sub
xlat
add
ret
mov
adc
je
mov
and
adc
out
jecxz
mov
jg
or
sbb
xchg
ss
ror
xchg
xorl
fdivs
shr
dec
mov
mov
adc
std
fsubrs
ret
in
cmpsl
out
cmc
out
enter
jae
out
addr16
lock
mov
or
fs
in
sub
inc
inc
push
xchg
adc
dec
sub
arpl
lods
lds
ja
fadds
ss
cmp
fwait
scas
xchg
jecxz
test
scas
mov
gs
arpl
xchg
pop
add
xchg
xor
sbb
fs
incl
loop
mov
mov
jg
aam
ret
xlat
push
scas
mov
jne
cmp
imul
sub
dec
lea
cmpsl
lods
jbe
fcmovnb
mov
popf
mov
repz
jg
mov
pop
push
jge
lret
nop
lret
lea
adc
shll
pushf
push
aam
xchg
pop
mov
jecxz
mov
pop
adc
pop
pop
cwtl
sbb
sbb
sti
inc
lea
arpl
lret
paddsw
insb
dec
push
aam
xlat
gs
cmp
jge
xor
loop
insb
sbb
out
push
jne
div
inc
sti
clc
adc
orl
bound
xchg
push
ljmp
mov
cmpsl
lret
xchg
adc
lods
popa
adc
repnz
sub
insl
adc
xor
xchg
cmpsl
xchg
lcall
aad
shrb
dec
rcrb
enter
cmp
mov
lds
mov
mov
fsub
xchg
frstor
push
xchg
dec
dec
xor
stos
jne
out
in
jecxz
xor
and
sbb
jno
pushf
or
pop
dec
out
push
outsl
pop
popa
shlb
stc
insl
push
jae
sub
mov
sub
mov
jmp
outsb
adc
mov
mov
pop
jmp
xor
out
or
xchg
pop
sti
mov
fisttps
sbb
sbb
or
lea
and
lds
jp
inc
lods
adc
or
es
enter
push
adc
and
das
cmp
test
imul
fstps
and
pop
adc
mov
push
mov
lahf
repz
insl
in
push
or
es
add
arpl
add
dec
and
mov
sub
push
or
js
addr16
pop
and
rorl
cmp
aam
cmp
pop
mov
test
adc
jbe
dec
imul
adc
jl
sbb
shlb
rol
pushf
and
sarb
jl
mov
sarb
out
mov
inc
int
mov
das
inc
xchg
or
sbb
mov
jbe
xlat
mov
jne
lret
rolb
mov
aaa
and
repz
mov
pop
mov
xor
subl
push
push
cmovae
xor
mov
jl
xchg
push
and
cmc
and
sbb
adc
repnz
ss
sar
pop
mov
aas
inc
inc
pop
fildl
fidivl
sbb
push
leave
in
ljmp
test
mov
pushf
iret
or
mov
mov
fs
mov
popa
ret
stos
sbb
push
inc
mov
inc
lea
inc
inc
sbb
repz
or
cwtl
dec
sub
outsl
divb
inc
clc
sbb
pop
adc
fdivrs
push
cld
pop
addr16
sbb
int
mov
push
jne
or
enter
movsb
push
push
imul
rcll
inc
lods
xorb
es
es
dec
adc
shl
fisttpll
scas
mov
xor
scas
mov
dec
pop
jg
ret
jno
stc
push
pop
xor
into
jp
out
and
jp
adc
xor
nop
das
stc
pop
pop
ret
out
dec
lret
jecxz
cmp
in
andl
pusha
dec
add
and
div
jns
cwtl
xor
sbb
xlat
jp
sbbl
call
arpl
jnp
pop
dec
ret
cmp
jno
and
mull
and
mov
fwait
cltd
jp
repz
dec
and
pop
lret
out
leave
jae
inc
pusha
push
pop
ds
adc
imul
into
fnsave
mov
jae
mov
cmp
sub
das
loop
add
xchg
lcall
scas
pop
data16
adc
fldenv
push
dec
stc
pop
inc
jo
inc
arpl
fs
out
xchg
or
pushf
xchg
and
je
xcrypt-cfb
cmpsl
gs
inc
lds
sbb
clc
aad
mov
jge,pn
ds
dec
mov
fwait
insl
sub
xor
sbbb
decb
sbb
add
adc
dec
test
jecxz
sub
mov
rclb
sbb
int3
jmp
mov
popf
add
and
dec
pop
pop
and
je
mov
bound
cmp
popf
mov
mov
adc
dec
push
adc
fists
mov
push
popa
jns
xor
inc
cmpsb
mov
xchg
push
sbb
adc
pop
dec
cwtl
rcrl
mov
out
aaa
sub
mov
movhlps
mov
jl
sbb
sarl
rcrl
test
sub
ret
scas
jnp
pop
lcall
std
sub
xlat
fs
mov
mov
and
pop
bound
xchg
mov
cmpsb
mov
mov
out
pushf
sub
cwtl
ljmp
or
and
fcmove
ret
fisubl
les
inc
and
popl
rorb
mov
int3
pop
xor
and
mov
iret
aas
add
jo
inc
das
pushw
adc
sbb
inc
ret
adc
jnp
call
sbb
pop
aaa
adc
lcall
jno
mov
loopne
push
mov
or
ss
jae
xlat
xor
je
cmp
sub
outsl
dec
mov
cltd
cmpsb
fnstsw
mov
popa
sub
xlat
sbb
jge
push
aam
cmpsl
sbb
xchg
lcall
cmp
ret
xor
arpl
inc
sub
or
loopne
inc
mov
cs
in
inc
iret
mov
inc
sub
adc
mov
lahf
test
mov
dec
and
iret
bound
mov
xchg
and
insl
sub
mov
adc
add
mov
inc
outsb
adc
push
fwait
outsl
sub
inc
out
in
xchg
fmul
inc
ljmp
decl
push
add
adc
popa
aad
shrb
pop
cmpsl
mov
lods
pop
test
adc
mov
xchg
imul
dec
jne
out
pop
push
and
aaa
dec
les
adc
fistpl
xchg
out
xor
push
clc
xchg
dec
outsb
mov
rcrb
rorl
push
sub
mov
dec
or
pop
xchg
rorl
scas
xchg
jp
fwait
mov
sbb
ljmp
sub
jl
cltd
mov
inc
test
sub
jg
lcall
xlat
add
xor
jl
clc
mov
mov
pop
jge
movsl
es
aam
mov
xor
adc
rcrl
lds
pop
outsb
jnp
daa
repnz
pop
mov
inc
sub
repz
add
sbb
sbb
push
out
sbb
jns
sbb
rcl
cmp
inc
and
and
xchg
xchg
in
dec
and
fwait
pop
inc
sbb
push
push
lret
xchg
mov
stos
pop
jp
insl
ljmp
xchg
dec
inc
jp
and
leave
cmp
sbb
add
sub
leave
xor
roll
ss
add
and
out
ficoml
in
adc
dec
and
iret
int3
inc
sbb
lods
mov
sbb
pop
jae
sarl
in
or
in
shlb
push
das
and
mov
jp
iret
xchg
lea
aas
je
ret
cmp
inc
mov
xor
pop
mov
fldenv
inc
sbb
mov
jne
addb
cmp
xchg
ja
pop
iret
inc
inc
xlat
leave
inc
add
sti
pusha
dec
sti
rcrl
jecxz
jns
jbe
jnp
pop
les
or
mov
and
leave
outsb
cli
adc
in
arpl
dec
inc
std
leave
out
out
or
adc
insb
inc
outsb
or
inc
daa
je
ja
xchg
dec
movsb
sbb
shll
adc
rorl
sub
push
pushf
push
jecxz
mov
std
es
push
pop
mov
mov
scas
jle
insb
js
ret
jne
add
notl
push
pop
pop
xchg
cmp
xchg
lret
mov
jae
int
inc
sarb
jmp
negl
int3
std
push
and
inc
movl
sbb
scas
inc
in
out
adc
jecxz
cmpsb
sub
insl
dec
dec
inc
pop
aaa
push
pop
jl
pop
xchg
adc
jge
push
pop
jmp
xchg
xchg
xor
jmp
inc
insl
sub
adc
pop
add
lea
cmpsl
aas
and
fs
mov
jb
inc
dec
repz
mov
inc
addr16
jae
pop
and
push
adc
mov
pop
popf
sub
jb
adc
inc
mov
pop
and
mov
jecxz
jne
clc
fstpl
js
es
jp
xchg
pop
sub
daa
pop
stc
jo
add
push
std
sub
jno
push
shl
push
je
ja
or
mov
xor
fbld
sub
or
jnp
and
fcomps
orl
cltd
mov
pop
mov
jae
mov
and
popf
lods
mov
xor
mov
and
test
sbb
add
adc
inc
and
sar
inc
enter
jmp
shl
jg
sbb
push
sub
adc
cwtl
mov
insb
nop
inc
xchg
dec
insl
ret
data16
enter
cmc
pop
pop
rorb
repz
and
sub
pop
xchg
adc
rol
and
loop
repnz
arpl
loopne
icebp
jmp
cmp
cmovp
int3
or
adc
add
adc
xor
gs
adcb
xchg
push
shrb
bnd
repz
daa
clc
pop
xor
idivb
jp
movl
dec
mov
pop
testl
pushf
push
leave
xor
adc
shrb
add
ret
out
mov
test
inc
loopne
or
arpl
les
mov
sbb
mov
es
xlat
push
and
pop
xor
in
out
dec
inc
jb
fimull
add
repz
fcomps
std
lret
sbb
push
cmp
xor
fs
push
mov
cmp
enter
test
shll
orb
inc
mov
pop
lahf
adc
leave
test
mov
dec
jbe
mov
lea
dec
add
ja
add
lahf
pop
addr16
push
xor
arpl
push
imull
jo
in
xchg
xchg
popa
mov
xchg
fdiv
pop
pop
xor
xchg
pop
xor
ficoms
mov
stos
das
sbb
scas
push
or
mov
or
xlat
fwait
sub
push
pop
hlt
cmpsb
jge
in
cltd
inc
ja
fdivrs
add
fists
adc
notl
lahf
arpl
pop
mov
js
inc
lods
pop
or
adc
dec
inc
mov
shll
loop
pop
notl
xchg
cmpsl
lret
add
nop
das
std
sub
cmp
mov
xor
cmp
and
xlat
xor
xlat
test
lret
mov
dec
push
pushl
xchg
mov
sbbb
push
jecxz
cmp
pop
or
imul
filds
pop
mov
xchg
fcompl
pop
push
push
fisubs
insb
fs
mov
arpl
fstpl
in
cwtl
fdivs
push
loope
out
clc
and
fildl
add
inc
and
push
sbb
xlat
mov
js
mov
les
sub
bswap
add
jle
jns
sbb
mov
xor
in
adc
dec
xorl
out
shll
mov
sbb
in
mov
negl
mov
dec
addr16
sub
fcoms
push
stos
sbb
inc
mov
jp
imul
enter
mulb
das
iret
xor
aaa
in
xchg
pop
ljmp
adc
pop
pop
cwtl
mov
dec
out
es
ljmp
jecxz
imulb
xor
push
pop
cmp
xor
mov
inc
and
and
xlat
xorl
test
stc
pop
aaa
std
cmp
pop
cmc
sbb
add
push
outsb
pop
cld
push
mov
xor
mov
cmpsb
inc
incl
sbb
xchg
aas
jecxz
dec
inc
nop
in
dec
push
mov
pushf
dec
push
xchg
and
jo
sbb
add
cmp
aas
insl
inc
jp
add
add
fisttps
sahf
gs
in
adc
sarl
lcall
call
and
repnz
xor
je
or
sub
sarb
bound
push
roll
sbb
jge
sbb
shlb
inc
shlb
jno
fisubs
shlb
jne
vmovntdqa
out
shrb
jge
ljmp
push
sbb
pop
test
adcb
aaa
mov
push
add
push
cmc
and
cmp
push
in
shlb
rolb
mov
std
inc
rolb
movsb
mov
hlt
int
add
dec
pusha
push
jg
clc
leave
dec
adc
stos
stos
mov
jecxz
dec
jl
imul
loop
sbb
sub
inc
cmc
sbbl
and
loop
and
inc
inc
and
mov
enter
xor
lds
mov
pop
rcpps
stos
push
scas
lock
and
fadds
push
and
pop
xchg
popf
xchg
and
adc
call
ja
mov
push
dec
pop
push
add
shll
cmp
cmc
add
pop
push
shll
adc
shrl
cmp
mov
fcoms
cwtl
xor
pusha
cmp
lret
and
jecxz
xchg
or
shlb
and
lods
les
sbb
pop
push
xor
sbb
stos
jo
push
mov
sbb
pop
jecxz
ds
cmpsl
js
cmpsl
jae,pn
adc
mov
call
jns
imul
dec
mov
mov
in
aaa
dec
outsb
or
pop
add
cwtl
das
jmp
push
mov
test
sbb
push
adc
negl
mov
idivb
push
fs
inc
pop
cmc
sub
stc
ds
loope
shll
sbb
push
xor
sbb
fmulp
push
xchg
add
dec
shl
push
inc
jmp
popa
mov
das
inc
fidivl
lods
je
dec
dec
sub
dec
sbb
adc
addr16
sti
sahf
xlat
xor
sbb
movsb
jl
sbb
jae
push
out
xor
cmp
pop
sbb
xor
or
sub
hlt
pop
sbb
repz
adc
jae
mov
lods
outsl
mov
ja
fcomp
xor
sub
mov
pop
mov
arpl
inc
scas
jae
mov
dec
in
adc
pop
pop
and
cwtl
xchg
scas
add
push
idivb
rorl
mov
bound
jbe
adc
pop
repnz
xchg
dec
les
or
out
out
arpl
xchg
bnd
mov
xchg
arpl
or
das
aas
call
pop
adc
mov
idivb
jmp
push
xor
call
sub
push
outsl
std
and
mov
cmp
jmp
dec
and
iret
ds
sti
mov
fbld
inc
push
rolb
sti
fidivs
outsb
and
and
swapgs
dec
push
jmp
xor
dec
movsl
fstl
outsb
bnd
adc
dec
in
dec
xchg
xorb
repz
adc
cmpsl
ret
leave
push
mov
int
mov
rcrb
outsl
jmp
fwait
addr16
cmp
ror
sbb
mov
idiv
es
xchg
aam
pop
and
xor
ljmp
outsl
add
push
pop
test
test
dec
and
andb
mov
xor
fisttpll
mov
push
mov
daa
sub
mov
inc
xor
sub
mov
or
in
mov
dec
repz
in
cli
lcall
lret
xchg
in
test
test
add
xor
or
inc
lea
and
xlat
lcall
sbb
or
loopne
lea
cmp
mov
mov
out
pop
dec
inc
imul
jnp
das
sbb
sub
inc
jg
rcrl
bound
fists
cmp
stos
xchg
shrb
pop
push
add
cwtl
inc
fistpll
inc
sbb
gs
out
inc
les
mov
mov
lods
ja
aas
rcll
mov
jl
or
xchg
js
imul
sti
cwtl
ret
and
dec
push
es
jp
mov
je
mov
jl
xor
lahf
into
fsts
pushf
fimull
ret
jl
mov
aas
popa
or
in
in
dec
push
data16
xlat
pop
mov
cltd
mov
into
add
push
xchg
call
or
jne
sbb
ret
scas
add
popa
and
mov
cwtl
mov
jae
test
data16
fcmovnu
add
dec
fcoml
and
je
lock
movsl
xor
inc
mov
scas
push
orl
add
ret
rol
mov
mov
hlt
insb
mov
cmp
cld
inc
pop
xchg
lahf
jne
mov
out
add
adc
int
or
cld
cmp
jae
push
xlat
hlt
lods
jl
fisttpl
sbb
push
jo
inc
jmp
inc
xchg
aas
inc
es
and
fnsave
pop
jle
std
xor
popf
cmc
dec
movl
fldenv
aaa
hlt
mov
xor
fwait
sub
mov
adc
pop
mov
jno
aas
in
mov
aas
xchg
and
dec
push
mov
lcall
or
mov
jbe
aad
mov
jns
outsl
movb
cwtl
orb
mov
mov
cmp
aam
or
movsb
jg
dec
sub
pop
test
fdivrs
lret
repnz
ljmp
xlat
dec
pop
or
mov
cmp
cmp
mov
cmp
cltd
add
xor
cmp
and
xor
ljmp
out
xorb
mov
stos
ljmp
sub
loop
pushf
repnz
xchg
inc
mov
leave
mov
xchg
out
mov
mov
dec
xor
or
pop
leave
jmp
pop
pop
arpl
stos
push
aaa
stos
pop
mov
aaa
xor
enter
xchg
filds
sbb
jne
add
imul
pop
xchg
divb
mov
or
adc
mov
inc
mov
jo
repz
int3
pop
mov
movsb
mov
pop
test
in
cmp
cli
jb
adc
roll
jae
adc
mov
add
lea
or
loope
ret
or
out
mov
xor
out
jne
jecxz
mov
out
dec
mov
lds
pop
adc
xor
int3
scas
cmp
shlb
movsl
addr16
js
aaa
or
pushf
jns
pop
mov
inc
lock
adcl
dec
ficomps
mov
sbb
das
sbb
ljmp
xlat
adc
or
cs
lret
das
cmp
adc
das
push
je
inc
or
and
add
add
fistpll
and
test
pop
negl
xchg
sbb
cltd
ficomps
dec
mov
add
stos
pop
in
xchg
pusha
adc
dec
mov
pop
lret
divl
mov
push
cltd
mov
sti
cltd
mov
xchg
push
mov
adc
dec
nop
ret
add
adc
mov
sbb
sub
or
ljmp
push
test
jmp
arpl
test
mov
add
daa
out
fsubr
pop
loope
in
mov
mov
xor
jl
call
mov
push
lock
ss
sbb
test
cmp
push
js
cli
lods
adc
mov
pop
ret
in
mov
loop
jg
and
xlat
pop
jmp
sbb
mov
xor
roll
adc
sub
sub
clc
dec
xchg
lods
inc
jge
mov
jae
cmp
inc
ds
shlb
mov
std
sbbb
arpl
sub
xchg
pop
inc
and
cmp
or
iret
jmp
fndisi(8087
cmp
sub
xabort
inc
lock
pushf
bound
and
xor
mov
sbb
outsb
mov
call
enter
inc
or
testl
push
imul
test
mov
push
test
cmp
or
rorl
xor
das
or
sbb
ds
es
pop
adc
out
xor
icebp
movsb
sbb
stos
jl
xlat
clc
fld
arpl
jno
sub
add
mov
or
iret
fldenv
shl
xchg
cmp
adc
push
xlat
dec
stc
rcrl
jo
adc
pop
pop
mov
cld
xor
xchg
cmp
or
test
repz
popa
insb
popa
mov
movsb
sbb
add
and
int
jecxz,pt
sbb
and
loope
inc
pop
fisttpll
les
aas
mov
mov
mov
lods
mov
lcall
inc
dec
shl
cmp
xchg
add
dec
iret
sti
cmp
dec
xor
push
pop
and
xchg
repz
push
insb
roll
mov
and
mov
sti
lods
rcll
cli
mov
xor
push
sbb
jle
sub
mov
dec
rcr
xor
cmp
clc
cmp
pop
mov
or
pop
ret
or
jmp
mov
aas
cmp
in
outsb
sbb
mov
xchg
push
adc
mov
inc
test
scas
insl
sbbb
adc
aam
dec
fildl
xchg
popa
int3
lret
jne
or
out
movntq
or
sub
roll
and
inc
inc
in
sub
push
test
or
sub
xchg
push
jb
ret
push
shll
out
jae
js
js
or
rclb
or
fisubs
or
fildll
jl
daa
push
out
inc
iret
lods
aas
cmp
xor
add
xchg
mov
shr
add
sub
cli
jae
add
xchg
aas
hlt
push
jg
testb
icebp
xor
cwtl
inc
rcrb
mov
pop
testb
cmp
cmpl
pop
cli
xchg
idivl
sub
popa
movsb
inc
and
clc
pusha
jmp
mov
out
dec
mov
xor
adc
or
pop
sahf
pusha
mov
jo
add
mov
pop
pop
iret
leave
pop
lret
xlat
aad
fsubl
out
jg
out
sbb
sti
aas
mov
cmp
inc
and
nop
out
shll
stos
dec
dec
addr16
xchg
dec
xor
xor
icebp
ret
mov
adc
push
cmp
adc
arpl
xchg
ret
xor
cs
push
insb
sbb
inc
push
popa
jecxz
jp
mov
mov
adc
add
mov
inc
fmul
lods
xor
jmp
je
xor
test
adc
sbb
xchg
fisttps
pop
mov
cmp
cltd
sbb
fdivrl
jmp
jecxz
loope
jno
mov
pop
sub
add
mov
add
sbb
andl
ficompl
dec
les
adc
sahf
in
push
outsb
stos
xchg
jmp
popa
fimuls
xlat
add
sub
aas
orl
mov
bound
popf
push
sti
jg
sbb
cwtl
xlat
jecxz
sar
cmpsl
sbb
push
decb
ficoml
pop
rolb
cltd
clc
paddw
inc
loope
sub
pop
out
push
dec
aad
mov
dec
fmuls
mov
ret
emms
cld
xchg
or
mov
lret
mov
ja
xor
xchg
push
sbb
lock
jg
lret
ror
mov
cld
pop
and
sqrtps
dec
or
dec
adc
in
mov
xlat
dec
push
stos
add
arpl
push
pop
icebp
repnz
out
mov
sbb
add
add
clc
sbb
cmp
jl
cs
push
fdivr
jmp
push
adc
dec
inc
movsl
mov
jecxz
or
pop
mov
mov
jo
int
adc
xor
mov
pop
pop
add
mov
cmp
fsubl
jns
dec
and
arpl
je
pop
mov
std
leave
dec
push
pop
or
jp
mov
ljmp
mov
xor
inc
mov
cmpsb
xor
xor
mov
jae
repz
movsb
mov
test
lret
push
jp
adc
dec
jnp
jg
call
or
enter
nop
xor
test
cmp
cs
mov
mov
dec
das
pop
dec
adc
fistpl
fidivrs
pop
call
cmpb
packuswb
inc
mov
and
int3
dec
call
ds
leave
dec
pop
and
js
popf
sbb
lret
movsb
pop
add
imul
jle
mulb
xor
xchg
inc
pusha
sub
xchg
lea
jns
adcl
call
jb
bound
out
fdiv
and
pop
xchg
out
jno
cmc
sbb
addr16
call
and
xchg
stos
add
push
jae
scas
pushf
and
scas
dec
data16
hlt
pop
fistl
imul
add
push
frstor
jnp
cmpsb
sarb
movsl
loop
sbbl
mov
inc
xchg
xchg
ret
arpl
jns
pop
inc
mov
mov
add
pop
fwait
xchg
rclb
fiadds
inc
test
sub
cmc
dec
gs
rcrl
mov
enter
jo
xor
cmp
hlt
dec
adc
jae
inc
add
or
cli
fisttpl
add
mov
ljmp
jb
mov
sub
cmp
or
mov
mov
push
hlt
icebp
dec
fsubs
add
out
xchg
orb
xchg
insl
mov
imul
jg
ficoml
movsb
ja
fwait
jns
int3
add
xlat
sbb
jmp
fwait
movsb
dec
jbe
adc
out
mov
negb
enter
shlb
or
mov
sub
loopne
dec
mov
mov
add
sbb
hlt
pushf
mov
pushf
xor
fcmovnb
xor
sti
insl
jmp
jmp
outsl
cmpsb
adc
sbb
ja
dec
jg
push
jle
adc
addr16
fcmovnb
aas
ss
xchg
inc
inc
in
aas
loopne
or
call
sbb
xor
sub
idivb
ret
xchg
lods
pop
sub
cmp
les
push
fadds
sar
inc
das
arpl
fwait
mov
fcom
cmc
inc
sbb
inc
push
repz
adc
push
xor
mov
pop
cld
add
adc
and
pop
subb
xchg
pop
dec
push
xchg
cmp
cltd
pop
mov
mov
call
push
cmp
xor
stos
inc
or
xor
pop
push
pop
jmp
push
dec
idivl
outsb
cs
testb
mov
xor
xchg
pop
mov
out
fstp
jg
push
lods
pop
iret
repz
dec
fs
pusha
xchg
xchg
out
xor
push
pushf
lret
adcl
sbb
int
gs
cwtl
ret
scas
mov
push
repz
mov
enter
mov
and
xor
loop
ss
inc
adc
or
out
iret
inc
arpl
daa
push
xchg
arpl
movsl
in
and
xchg
push
cmpsb
cmpsb
adc
mov
test
cmc
fwait
adc
or
nop
lret
stos
inc
js
popf
fs
mov
call
mov
mov
cmp
in
clc
pop
test
outsl
push
shll
jl
pop
or
sbb
lds
lds
push
sbb
or
les
jp
mov
push
xchg
call
insb
jbe
cmp
push
and
inc
inc
sub
and
shrl
mov
and
inc
fld
mov
getsec
test
sbb
arpl
fs
jnp
cmp
xchg
cmp
and
mov
mov
mov
pop
movl
push
ficoms
in
sarl
push
or
loope
mov
sahf
mov
lds
fwait
xor
movb
cmp
mov
jmp
mov
mov
xor
jmp
or
mov
cmp
jnp
mov
stos
sti
test
mov
jno
xor
dec
jns
cmp
xchg
out
cmc
addr16
pop
cltd
or
mov
shll
jne
dec
cwtl
test
or
mov
rcll
jae
mov
and
sbb
adc
push
shll
pop
pusha
cmpsl
je
addr16
aas
cmpl
inc
mov
xchg
aaa
pop
testb
bound
shlb
add
movsb
cmp
adc
dec
neg
andb
or
cmp
mov
fstpt
sarb
out
loop
or
cmp
not
fisttpl
lock
loope
jns
mov
stc
mov
add
mov
std
jnp
insb
add
mov
rcll
inc
inc
xchg
adc
dec
out
mov
enter
std
ret
icebp
mov
mov
dec
or
jl
or
orl
jecxz
cwtl
or
or
push
mov
cwtl
fimuls
sti
pusha
hlt
roll
mov
xchg
or
call
sti
das
out
psubb
adc
mov
jae
addr16
sub
pop
es
imul
jnp
add
sbb
sub
xchg
dec
or
fldenv
xor
test
jecxz
aas
shlb
add
sahf
inc
arpl
cwtl
add
cmp
lods
ja
rol
xor
lret
popa
shl
lahf
repz
outsl
jae
ret
enter
insb
in
test
rorl
adc
push
aaa
adc
cmp
lds
adc
pop
xchg
adc
repz
sub
pop
or
push
shr
xchg
push
mov
fimull
adc
pop
xchg
adc
adc
xchg
aam
sarl
dec
push
out
adcb
sub
inc
lea
shll
fwait
out
pop
inc
cs
pop
xor
call
fstps
mov
mov
movsb
push
test
xor
fsin
xchg
ds
sbb
sbb
adc
gs
jg
insb
gs
jae
pushf
mov
ds
xor
lret
mov
mov
in
mov
xchg
imul
hlt
test
mov
cmc
mov
adc
in
mov
ss
and
jbe
repnz
mov
addr16
add
mov
lods
fdivl
int3
test
pop
stos
data16
adc
scas
push
les
ds
insb
xchg
xchg
sub
outsb
lea
jmp
sub
rcrl
enter
rolb
mov
rcll
lds
imul
fst
popf
mov
mov
add
into
fistps
je
mov
mov
data16
cltd
lahf
je
mov
aas
aaa
jbe
xlat
das
sbb
and
stos
push
aaa
aas
repz
faddp
and
add
test
loope
add
rorb
push
push
xor
or
std
jnp
inc
mov
and
shll
sbb
xchg
xlat
add
dec
fs
adc
pop
add
dec
pop
pop
mov
sub
cld
je
mov
loop
mov
cmp
cltd
xchg
arpl
fildll
and
fs
inc
cld
mov
mov
or
push
clc
push
pop
daa
aas
lea
nop
in
nop
mov
dec
xchg
xchg
mov
aas
shlb
cmp
push
mov
hlt
jg
dec
addr16
test
jle
ret
or
test
sub
jo
subb
sub
out
and
in
out
mov
fwait
imul
rclb
loope
call
pop
or
xchg
in
xchg
cmp
sti
jge
jp
sub
aam
clc
fisttpl
mov
test
cli
cltd
add
cmp
mov
mov
jae
ljmp
frstor
cmc
fsubrs
ljmp
adc
xlat
adc
sahf
les
or
cld
inc
pop
addb
dec
js
jnp
pushf
xor
xor
cmp
test
inc
cltd
jnp
and
inc
jb
lret
repz
scas
addb
das
sti
xor
sbb
mov
movsl
push
cmp
leave
mov
mov
pop
or
cli
xor
aam
mov
or
gs
notb
lcall
add
dec
loope
daa
cmp
je
xor
xchg
sbb
push
imul
mov
mov
mov
adc
fs
faddl
cwtl
add
cmp
add
das
addl
lcall
sub
cmc
sahf
ljmp
mov
pusha
mov
push
push
jecxz
add
push
and
jns
sub
sbb
rcrb
add
mov
lock
push
inc
mov
inc
ret
adc
loopne
add
xor
push
dec
jo
pop
bound
test
popf
push
cmpsl
or
arpl
push
hlt
jno
std
cltd
dec
fidivl
mov
mov
pop
xor
mov
int
sbb
mov
arpl
sub
fs
or
jae
adc
sbb
sub
jmp
dec
mov
lret
fildll
ds
dec
jno
ficoms
and
sub
sub
jo
cmp
sbb
lods
jno,pt
loopne
cmp
and
mov
sar
xchg
add
push
cld
add
test
mov
inc
fs
sub
push
lahf
cmpsl
sub
cmpb
push
push
xchg
lock
pop
mov
xchg
dec
dec
iret
repz
pop
insb
push
pop
inc
mov
dec
pop
aam
add
inc
adc
les
out
jl
ss
adc
mov
sbb
das
imul
inc
gs
cmp
popf
adc
sti
or
ret
xor
adc
jmp
loope
push
fwait
or
sbb
push
mov
adc
jle
es
adc
or
xchg
jmp
xor
sbb
outsb
pop
loop
pop
scas
mov
xchg
mov
fldt
push
fwait
jne
stc
push
mov
flds
mov
inc
dec
aam
cmp
add
pop
js
mov
rolb
push
gs
sbb
ds
sub
outsl
daa
mov
add
ds
fcoml
sub
imul
mov
mov
fisubl
mov
loopne
or
mov
sub
push
jp
pop
shl
sub
das
or
aaa
adc
push
ds
mov
push
gs
incb
cltd
std
jo
int
xor
lret
mov
and
fcmovnbe
repz
iret
dec
jo
add
xchg
mov
push
dec
push
int3
imul
pop
std
xchg
lret
sahf
stos
dec
dec
mov
aam
pusha
aaa
push
pushf
inc
jle
in
test
cwtl
in
xchg
and
push
cmp
fsts
movsl
pushf
sar
fwait
mov
mov
mov
dec
xchg
sbb
enter
je
cmpsb
aaa
xor
mov
fdivrl
push
mov
loopne
jp
sub
shlb
loope
mov
leave
cmp
xor
mov
cld
ljmp
data16
je
test
ds
and
mov
pop
cltd
push
loopne
ffreep
dec
and
hlt
dec
jecxz
mov
xchg
adc
insl
cmp
mov
push
adc
mov
jmp
mov
out
out
outsl
dec
je,pn
sub
jnp
mov
iret
pop
xchg
add
pop
sbb
rol
xor
and
sub
fsubl
popf
pop
and
pop
cld
dec
repnz
ljmp
arpl
inc
sbb
lcall
adc
mov
lods
call
aad
out
xchg
add
movsb
nop
xor
add
push
cmp
lds
shrb
js
mov
inc
mov
xchg
and
hlt
lea
je
sar
mov
hlt
cmpb
cwtl
cmp
xchg
ret
mov
add
push
sub
mov
ja
push
jecxz
movsl
adc
xor
dec
and
adc
dec
xor
sbb
xchg
mov
add
xor
fnstcw
push
icebp
add
fisubl
dec
xchg
xor
push
ret
pop
fldenv
lds
aas
cmp
or
or
pop
add
xor
push
mov
mov
mov
int3
inc
ret
fld
jp
sahf
iret
adc
xlat
stos
adc
inc
push
in
int
mov
iret
addr16
into
push
data16
popf
pop
inc
pop
iret
icebp
dec
das
or
dec
jnp
sbb
xchg
out
sbb
mov
pusha
sbb
insl
sbb
push
lcall
sbbl
add
and
mov
sbb
xchg
das
jnp
xchg
adc
mov
lds
mov
dec
sub
lahf
popa
dec
es
adc
outsl
mov
and
insb
insl
popa
xchg
fnsave
lods
fdivs
dec
cmp
push
dec
dec
aad
xor
cli
movsb
popf
xchg
cs
pushf
xchg
mov
dec
jp
lods
movsb
cmovno
cli
mov
mov
sbb
xchg
push
aaa
ja
sbb
xchg
nop
test
push
addb
adc
pop
movsl
insb
lods
jnp
mov
adc
lcall
jp
popl
xorl
dec
xchg
xorb
dec
fucomi
inc
xchg
ret
movsb
test
ds
das
divb
mov
es
fnstenv
aaa
sarl
jo
cmp
pop
and
mov
aam
pushf
mov
popa
bound
adc
popf
js
inc
sbb
int3
mov
fildl
idiv
shrb
clc
mov
sub
jl
xchg
cmp
pop
jecxz
movsb
jg
ljmp
inc
xchg
sbb
call
xor
mov
xlat
xor
js
testb
cmp
or
adc
push
loope
jae
dec
cli
in
movsb
pop
xchg
and
fldcw
fists
and
pop
sub
out
repz
ret
push
clc
mov
cmp
pusha
pop
mov
es
sbb
pop
test
faddl
jb
out
cmc
sbb
and
jge
gs
adc
sbb
xor
dec
sub
rcll
insb
mov
fisubl
mov
test
mov
in
dec
cmp
and
or
xor
mov
lds
cmp
addb
cmp
and
cwtl
push
or
or
icebp
es
das
into
xchg
mov
lock
test
enter
pop
jns
es
out
mov
lea
jae
fmul
mov
add
inc
pop
mov
lock
scas
and
mov
pop
imul
fdivs
ja
dec
push
je
jp
push
insl
cmpsl
cltd
imul
loope
aaa
jmp
scas
cmp
mov
loopne
insl
push
popf
fs
push
lds
mov
test
push
jno
or
pop
loope
push
and
push
popa
lods
adc
jnp
pop
mov
negb
mov
xor
adc
add
lcall
mov
xor
aaa
sub
sub
ljmp
test
jae
in
test
imul
cli
dec
mov
sbb
adc
call
fldt
cmp
xchg
popf
pop
add
xchg
ljmp
mov
rclb
imul
mov
adc
iret
jmp
je
ja
xchg
add
movsb
shll
ret
xor
push
mov
xlat
lds
pop
negb
pushf
rorl
or
sbb
mov
dec
xchg
and
pop
pusha
fwait
test
jle
fcoml
pop
push
cmp
xor
xchg
ret
xchg
sub
xor
imul
jno
inc
out
and
aas
divb
xor
lods
xor
test
pusha
loopne
sub
sbb
and
in
ljmp
xchg
pop
fsubrl
pop
test
mov
xchg
mov
pop
xchg
mov
stos
hlt
adc
gs
addr16
test
xor
sub
mov
jmp
cmpsl
xchg
adc
fld
push
or
dec
pop
or
shlb
nop
and
sahf
xchg
repz
lahf
xchg
ds
testb
filds
popf
imulb
push
je
rcr
in
dec
push
bound
jo
sub
je
push
adc
js
outsl
mov
popa
iret
clc
cmp
lods
and
out
cli
enter
subb
mov
jle
push
mov
push
repz
add
inc
adc
or
mov
jnp
ret
push
movsb
dec
xor
pop
dec
jl
test
int
adc
ja
pop
cmp
jnp
dec
or
loop
cmpsl
sti
or
je
aas
loopne
lods
pop
sub
mov
dec
ds
inc
pop
dec
mov
insl
jbe
dec
inc
mov
lods
xor
imul
pop
cmpsb
dec
insl
mulb
dec
push
sti
lds
js
jo
inc
in
jbe
mov
adc
cmp
popa
lods
jno
stos
mov
cmc
outsl
cwtl
push
mov
shlb
or
leave
shl
and
out
lret
sbb
mov
lcall
dec
rolb
cmp
sub
inc
jg
shrb
cmp
add
nop
sbb
and
push
jle
or
inc
lret
mov
adc
mov
sbb
sub
push
mov
dec
int
in
movsb
dec
pop
shrl
outsb
jmp
jae
movsb
mov
out
mov
repnz
ss
in
sti
and
out
repz
sub
mov
ss
in
push
aad
push
and
fwait
push
dec
jns
pop
add
scas
stos
aad
push
loopne
cmc
adc
mov
jae
fiaddl
sub
add
pop
xchg
pop
xchg
jp
gs
les
lock
jnp
lods
in
cmpsb
mov
push
cmpsl
or
les
faddl
jb
je
enter
pusha
pop
sbb
pop
dec
pop
adc
stos
nop
movsb
xchg
repz
scas
dec
loope
cmp
in
and
push
gs
sub
lods
aas
adc
popa
nop
mov
xchg
imul
pusha
and
cltd
jno
adc
aaa
insb
mov
cld
rolb
xchg
hlt
insb
mov
fsubrs
shr
ja
adc
mov
fs
hlt
or
jle
mov
mov
jne
xor
dec
std
fnstenv
movsl
inc
je
fisubrl
imul
ficompl
add
adc
cld
aaa
arpl
xchg
out
test
xchg
cmp
mov
jl
inc
addr16
dec
in
pop
repz
subl
vminss
pop
imul
push
jae
jnp
xchg
xchg
arpl
loope
pop
ds
inc
xorb
mov
cmp
add
and
sub
mov
imull
std
lods
cmp
push
sub
sbb
rcrl
mov
lcall
add
in
test
movlps
ds
rcrb
push
push
xchg
xchg
cmp
inc
mov
xchg
rep
cmp
jnp
xchg
inc
shr
mov
add
adc
lret
rcr
rol
daa
movsb
pop
or
dec
stos
xlat
mov
aaa
ljmp
xor
pop
cli
in
inc
rolb
adcb
repnz
cmp
aad
iret
stos
inc
mov
pop
sub
xor
push
dec
or
ds
lahf
fisttps
mov
inc
maskmovq
mull
push
dec
outsl
rcll
out
sub
lret
andb
icebp
inc
sbb
push
mov
mov
pushf
inc
int
je
dec
dec
in
pop
lret
insb
sbb
add
sbb
push
sbb
in
in
scas
xor
mov
pop
daa
sbb
jmp
add
stos
jle
sub
dec
rcrl
jge
xchg
xchg
jae
or
pop
mov
dec
sub
lcall
lods
xchg
movsb
popl
ss
cmc
cli
jns
repnz
rcll
pop
gs
cmpsb
icebp
ret
jbe
loope
jle
pop
xchg
lds
mov
xor
inc
idiv
xor
sti
jb
add
or
xor
dec
pop
lret
sub
jbe
adc
je
mov
fmull
enter
sub
arpl
lds
cwtl
push
mov
daa
jmp
mov
cs
and
push
sbb
pop
test
in
inc
mov
or
adc
dec
sbb
mov
ds
xor
daa
add
fcompl
negb
mov
and
fdivrs
mov
and
push
in
je
rcll
rol
push
ret
and
fwait
add
das
inc
scas
out
daa
jp
adc
dec
dec
out
fs
xlat
xchg
aad
rcr
mov
daa
std
add
clc
mov
and
xchg
add
int3
stos
mov
insb
cmp
xor
push
cmp
dec
movsb
rorl
mov
pop
icebp
jae
sub
lcall
inc
and
fildll
adc
inc
mov
mov
sbb
inc
and
iret
cmpsb
mov
jge
or
xchg
pop
jbe
jne
sti
xor
adc
aad
popa
fwait
pop
lods
and
jb
popf
outsl
arpl
sti
mul
out
fs
daa
mov
pop
notl
push
jle
pop
gs
sub
push
mov
push
jbe
pop
ja
shll
addr16
push
ss
mov
cmp
jnp
int
int3
aad
stos
adc
xchg
mov
shlb
arpl
jecxz
jae
cmp
xorb
mov
repz
lock
pop
mov
sar
mov
sbb
push
cmovo
mov
scas
subl
mov
cmpsb
fcmovnbe
push
cwtl
mov
dec
dec
or
test
gs
xor
dec
inc
sub
repnz
sub
ja
pop
push
loope
lret
inc
in
and
push
and
mov
jb
into
out
pop
sti
test
int3
divb
in
xchg
push
cs
popf
cmp
fwait
sbbl
pushf
cmc
ljmp
rcr
inc
and
int
sbb
pop
dec
mov
insl
fwait
inc
into
mov
popa
fsubl
jo
add
scas
pop
test
cmpsl
sarb
insb
xadd
mov
dec
test
sub
inc
add
ret
lods
xlat
add
jl
sub
adc
ret
push
sub
push
or
pushf
mov
shll
scas
xor
pushf
sarl
inc
les
dec
push
jbe
jne
cmpsl
cmp
xor
jo
fistps
xlat
es
out
pop
cmp
jne
lahf
inc
mov
test
frstor
lods
fldl
jmp
and
mov
fnsave
mov
arpl
sbb
aad
hlt
outsl
and
dec
fdivr
pop
les
and
mov
sbb
cmc
inc
sub
xchg
sub
ret
stos
or
push
out
mov
sbb
or
fs
cmp
adc
aam
enter
push
daa
and
pop
sbb
push
xlat
mov
adc
call
add
push
add
cli
bound
or
mov
mov
adc
pop
mov
lea
icebp
fwait
adcb
pop
push
lods
fwait
pop
push
inc
test
cli
rcl
inc
mov
cmpl
rclb
sahf
pop
in
mov
cmc
aaa
sub
mov
mov
mov
pop
cmpb
dec
stc
scas
rolb
arpl
adc
scas
cld
stos
xchg
outsl
es
call
pop
inc
cmp
icebp
ret
shlb
mov
loopne
scas
les
sbb
cmp
mov
in
or
jne
or
xlat
sub
push
dec
or
ljmp
je
pop
and
mov
cmp
mov
ret
lods
out
enter
jle
lahf
adc
and
and
lea
add
xor
mov
mov
fadds
pop
mov
popa
xor
push
test
dec
sub
mov
stos
repz
inc
push
lahf
mov
and
cmpsl
pop
jne
popa
rcrl
mov
mov
adc
xor
lods
and
add
push
imul
dec
cwtl
jae
and
mov
iret
jnp
test
adc
stc
push
xchg
jb
imul
and
bound
out
add
iret
add
lds
and
stos
or
xchg
xchg
push
xor
or
adc
jge
andb
cmp
fstpt
movsl
sbb
mov
out
stc
dec
fidivl
jg
mov
sbbl
imul
or
ret
aas
xchg
outsl
push
or
push
pop
xor
xorb
sbb
or
sbb
sbb
jmp
add
cmp
push
push
cmc
add
stc
lcall
mov
mov
cmp
arpl
push
lahf
and
dec
mov
dec
ds
xor
scas
jb
stos
movsb
pop
stos
popf
enter
sub
pop
cwtl
add
popl
add
pop
cmp
adc
jns
push
mov
repnz
jbe
fstpl
xchg
pop
push
je
call
les
cmp
xor
or
repz
mov
cmp
nop
hlt
inc
push
or
and
cmp
jae
cmpsl
repnz
in
shrb
cltd
or
add
mov
pop
sbb
xchg
xchg
inc
stc
and
push
aas
inc
test
popa
mov
out
out
jae
adc
add
in
ret
and
inc
push
jg
fistps
bound
dec
push
mov
dec
es
jg
shlb
fwait
sbb
jl
xor
xor
inc
divb
cmp
lock
and
jl
or
fs
test
pop
inc
jb
xor
lret
cmp
pop
dec
out
fldenv
or
push
mov
sbb
push
test
mov
pop
jb
arpl
dec
ret
arpl
in
and
pop
imul
cli
sbb
jle
mov
aam
inc
dec
out
and
mov
cmpsb
out
cs
and
in
jg
mov
shll
xchg
inc
out
xchg
fdivs
pop
addr16
cld
scas
popf
mov
lret
jnp
popf
inc
out
test
sahf
outsl
arpl
pop
pushf
and
xchg
and
dec
icebp
aas
lsl
ret
fimull
repz
adc
stc
and
and
or
notl
sbb
sahf
sbb
adc
aaa
mov
adc
push
aas
jns
movsb
mov
cmp
fsubrs
into
mov
push
adc
xor
mov
clc
mov
outsb
xor
rorb
adc
fbld
xor
fcmovne
je
pushl
adc
pop
xor
es
xchg
out
ret
fstps
and
xor
mov
sub
xlat
int3
xor
pop
mov
adc
sahf
addr16
outsl
jne
inc
fcomps
daa
inc
in
mov
inc
loopne
mov
xchg
outsl
popa
imul
sub
pop
in
inc
in
mov
daa
mov
stc
fcmovnbe
xchg
mov
jmp
xchg
aas
in
jmp
jmp
mov
inc
inc
les
dec
jge
sar
adc
cli
and
imul
aam
js
shrl
adc
jecxz,pn
mov
repz
cmp
pop
dec
lahf
fwait
adc
sbb
pop
mov
lret
stc
nop
int3
add
ret
inc
shlb
addb
sbb
out
jae
adc
add
adc
pop
outsb
scas
mov
inc
xchg
mov
sub
ror
sti
rcl
and
xchg
mov
out
imul
xchg
cmp
idivl
and
sbb
and
ret
jne
outsb
cmpsl
test
inc
ret
and
inc
rcll
mov
mov
inc
shll
iret
loope
mov
push
imul
xchg
ja
mov
xor
pop
lods
ss
sbb
push
fcmovnu
in
adc
cmp
or
jg
jo
cli
xchg
mov
mov
lods
test
ffree
cmp
add
repnz
popl
int3
add
adc
inc
adc
nop
outsl
in
and
push
daa
adc
daa
adc
inc
call
lahf
es
cltd
imul
xchg
jg
scas
fs
sbb
xchg
clc
xchg
cmp
sub
pop
jo
sahf
add
jns
inc
add
in
xchg
jmp
dec
mov
mov
jecxz
int3
cmp
sbb
xchg
daa
das
mov
test
xchg
adc
push
test
fildll
sbb
mov
icebp
mov
xchg
jmp
dec
pop
fldcw
fcoml
adc
mov
insl
xor
inc
ds
push
xchg
out
and
sbb
sbb
test
pop
inc
lock
inc
pop
xlat
dec
in
iret
popf
js
cmp
cli
popl
pop
daa
in
clc
mov
dec
mov
inc
pushf
mov
xor
dec
add
ja
push
mov
mov
sbb
mov
ret
push
rolb
add
mov
mov
sarl
xchg
jae
js
repz
mov
iret
dec
cmovae
ljmp
pop
inc
adc
leave
dec
test
mov
sbb
es
iret
push
jg
or
in
std
repz
push
lret
pop
dec
cli
sub
dec
sub
adc
mov
ret
pushf
outsl
jmp
sub
lods
or
cltd
xor
cmpsb
xchg
js
pop
nop
bound
sbb
adc
mov
js
pop
aaa
xchg
mov
in
movsl
jmp
push
aaa
and
mov
movsl
mov
lahf
xchg
mov
ss
jbe
movsb
repz
aas
outsl
out
push
sub
and
pop
fs
and
pop
mov
mov
gs
push
hlt
outsb
ja
hlt
inc
aaa
mov
xchg
cmp
in
xor
pop
push
movsl
dec
stos
outsb
popl
lret
and
pop
inc
adc
sti
loopne
xchg
jmp
mov
xchg
repz
mov
inc
daa
sarl
dec
inc
jnp
pop
add
xchg
movsb
fbstp
push
jg
scas
mov
pushf
inc
ja
sbb
nop
push
cli
or
mov
xchg
cmp
dec
mov
dec
in
push
movsb
scas
pop
test
pushf
mov
pop
cmc
mov
mov
aas
xor
mov
mov
daa
push
jae
in
repz
fcoms
nop
cmp
pusha
mov
rcll
pop
pop
xchg
mov
xor
fs
rorl
jecxz
mov
sbb
pop
sub
hlt
ss
mov
cmp
jmp
insb
aaa
mov
out
dec
out
fadds
inc
mov
dec
aad
mov
testl
in
stos
rcr
mov
adc
popa
ds
aaa
fsubrl
inc
into
pop
mov
add
clc
pop
mov
aaa
inc
jno
mov
xlat
inc
mov
adc
jo
or
dec
repnz
repnz
xchg
dec
adc
int3
enter
cmp
sbb
add
push
xor
mov
xor
jp
dec
or
mov
movsl
es
arpl
in
lret
mov
imul
add
push
jp
dec
adc
pop
pop
js
lods
int
xchg
inc
nop
scas
mov
cmp
js
sbb
negl
shrl
int3
lods
or
pop
les
mov
cmp
jl
aam
cmp
mov
adc
out
mov
movsb
rclb
adc
fmul
sub
sbb
add
mov
cltd
inc
and
xchg
jg
decl
jmp
sbb
sbb
fistl
or
xor
inc
iret
rcrb
push
sbb
ljmp
sarb
mov
dec
adc
ds
je
sub
xor
mov
xor
mov
fs
jg
mov
arpl
inc
sqrtps
in
jecxz
xchg
sbb
mov
jle
ljmp
cld
adc
pusha
cmp
lock
lahf
xor
mov
sbb
shlb
inc
mov
cmp
add
rolb
mov
enter
shlb
xor
dec
push
js
xlat
sbbl
cmp
ds
test
mov
push
sar
jo
stc
je
cmp
arpl
dec
inc
pop
mov
cwtl
arpl
adc
ud0
xchg
mov
and
xor
adc
in
enter
jg,pt
jne
aaa
cmp
ret
adc
xchg
into
mov
adc
jg
mov
push
push
pushf
pushf
or
add
pop
jg
jp
in
fdivs
mov
jle
out
lcall
mov
or
dec
out
iret
push
mov
dec
in
jl
dec
push
mov
pop
pop
inc
jns
lret
push
fsubs
aaa
mov
addr16
iret
movsl
fidivl
pop
jae
mov
adc
xchg
fisubrs
push
data16
movsb
inc
pop
dec
cmp
push
cwtl
test
sbb
and
mov
pop
popa
popa
cmpsb
lock
mov
pop
pushf
xchg
mov
lock
data16
mov
sarl
xchg
aam
xlat
in
leave
ret
bound
or
xor
mov
bound
xchg
pop
add
iret
jae
ret
fdiv
cmpsb
jg
xor
xchg
popa
adc
int3
inc
cwtl
mov
sbb
rorb
xor
sub
clc
and
jge
idivl
cmpsl
mov
fwait
xchg
push
push
mov
cld
push
push
jg
dec
push
jne
xchg
cmp
or
fwait
pop
xlat
adc
cwtl
testl
mov
cwtl
cmp
sub
jne
jne
xor
xchg
xchg
icebp
or
sbb
in
or
push
sub
mov
cmpsb
clc
icebp
cs
xchg
mov
nop
sub
push
xchg
jmp
push
movsb
xchg
xor
in
xchg
jmp
jg
xlat
pop
das
and
adc
loope
adc
dec
sarb
jbe
xchg
sub
rorl
sbb
out
and
ret
ja
or
pop
jecxz
xor
lods
jae
mov
stc
cmp
testl
stos
lods
clc
cmc
je
or
adc
mov
cmp
cmpsb
sub
sub
rolb
imul
scas
pop
adc
add
cmp
sbbl
jmp
repnz
jne
movsb
push
and
mov
jg
sub
les
dec
repz
fldt
pop
test
arpl
icebp
in
out
dec
les
cmp
pop
enter
and
data16
push
mov
sbb
jecxz,pn
les
dec
dec
sbb
fcomps
adc
pop
rorl
or
shlb
add
mov
stos
adc
aas
stos
call
mov
mov
inc
mov
sbb
pop
mov
xchg
mov
jg
sbb
and
jnp
mov
test
xor
sarb
subb
mov
fisttpll
cmpsb
sub
leave
hlt
push
insb
xchg
subl
adc
jecxz
inc
loope
repz
xlat
add
xlat
js
push
movsl
unpcklps
xchg
push
mov
ds
jbe
mov
or
push
jle
sar
or
test
in
add
aas
and
jnp
cmp
cwtl
dec
loope
dec
notl
iret
sbb
or
js
pop
test
inc
adc
es
mov
repz
xor
inc
out
bsr
das
mov
lcall
mov
outsb
stos
loopne
jnp
pop
fstpl
clc
mov
mov
push
shl
push
movups
nop
mov
pop
sub
mov
fadds
push
push
out
adc
cmp
sbb
dec
cmp
fmull
dec
cwtl
cmpsl
idivb
mov
pop
push
js
mov
aad
sub
cmp
dec
fwait
add
or
dec
jo
fisttps
lods
and
sti
mov
out
js
rclb
adc
das
push
stos
sbb
ss
pop
sbb
and
xor
adc
jg
lds
mov
test
push
out
mov
mov
pop
adc
in
mov
mov
cs
mov
xchg
clc
adc
xor
sti
xchg
push
sub
xchg
int
mov
and
lods
inc
test
sbb
leave
lea
mov
jnp
pop
lock
mov
adc
ljmp
icebp
or
jno
sub
mov
repz
loop
xchg
in
outsl
and
inc
ret
es
shrb
inc
bound
mov
push
jmp
repz
out
add
adcl
pushf
cmpl
inc
jp
mov
call
nop
dec
push
mov
xchg
mov
repz
hlt
mov
stos
push
add
and
mov
pop
js
cmpsl
jl
mov
dec
jo
mov
mov
push
push
and
mov
cmp
jp
ret
sbb
stos
pop
mov
repz
scas
pop
push
or
loopne
sub
inc
lret
dec
mov
cmpsb
or
mov
inc
add
push
jne
inc
int3
sub
sahf
add
jmp
mov
into
sbb
lods
mov
dec
cmp
dec
mov
xor
cmp
neg
scas
cmp
mov
mov
aad
xchg
repnz
lods
lret
cld
xor
adc
jo
sbb
nop
jae
and
push
xchg
dec
je
and
in
subl
xlat
mov
ds
dec
or
xchg
xchg
loope
int
into
in
pop
cmpsl
ret
add
push
mov
cmc
nop
cli
popa
movsb
in
es
enter
push
flds
push
inc
jge
gs
and
inc
sbb
fadds
add
dec
cmp
andl
dec
std
and
inc
xor
in
popa
call
neg
xchg
add
jle
add
imul
test
and
mov
xchg
add
test
stos
mov
repnz
stc
jl
in
push
insl
jl
hlt
dec
ss
and
popf
shrb
mov
xor
aad
adc
ret
and
jmp
xchg
icebp
or
dec
jmp
mov
mov
les
mov
push
sti
xor
in
pop
adc
aad
call
mov
add
lret
mov
pop
out
mov
mov
fstl
js
mov
add
mov
subl
jecxz
mov
xchg
movsb
test
addr16
std
and
pop
inc
test
ja
sti
jns
in
adc
fcompl
jns
cmovno
and
cld
in
inc
cmpsl
arpl
sub
out
cld
sarl
nop
or
add
enter
sahf
dec
and
pop
in
js
insl
jecxz
fs
dec
enter
fldcw
xchg
mov
andl
loop
xchg
pop
daa
mov
ss
insl
and
sti
inc
fcmovnb
pop
sub
fildl
and
lods
rolb
addr16
add
out
dec
fscale
xlat
inc
cs
imul
sub
ret
mov
fidivrs
jle
sbb
jo
outsl
in
cmp
pushf
cmp
cmpsl
clc
add
push
test
cmpsl
dec
scas
add
pop
hlt
dec
shlb
xor
and
clc
xchg
pop
mov
fcomi
cmp
sub
movsl
sbb
inc
ret
mov
inc
sbb
mov
cmp
leave
rolb
mov
mov
popa
lock
mov
roll
sub
pop
cmp
dec
testb
or
imulb
dec
cld
arpl
push
jg
mov
arpl
aaa
fwait
cmpsb
add
mov
xchg
xchg
inc
int
cmp
pop
ficoml
movsb
lret
mov
push
fsubl
mov
pop
rclb
push
aaa
out
inc
mov
mov
inc
daa
xchg
inc
or
xchg
push
adc
test
add
add
loopne
pop
push
icebp
add
int
loop
pop
hlt
xor
hlt
jnp
pop
lds
and
and
sub
jp
inc
cld
shlb
daa
xchg
repz
mov
and
outsl
cltd
daa
rcll
rol
lret
adc
mov
das
test
sbb
insb
xorb
adc
mov
xor
mov
imul
je
sub
js
xchg
rol
add
outsb
and
adc
lret
pop
out
dec
cmp
out
stc
xlat
fmuls
shrl
outsl
jecxz
dec
popl
lods
fsts
xlat
sub
lret
xchg
ret
popa
jns
xchg
shl
sbb
enter
mov
add
mov
jle
pop
ret
lahf
xchg
jge
xchg
mov
loope
outsl
pop
inc
xlat
xchg
inc
and
mov
fadds
notb
adc
jle
jo
cmp
push
or
shl
loope
adc
ja
js
xchg
adc
fwait
jl
inc
test
add
pop
adc
pop
adc
out
or
testl
push
or
std
aam
sti
addl
mov
movl
mov
sub
cmp
jb
fcomps
outsl
inc
lods
pop
cmp
mov
fildll
mov
xor
xor
das
xor
mov
lds
add
mov
mov
pop
push
pop
test
idivb
sub
or
xchg
call
subb
dec
push
js
roll
nop
add
jp
mov
add
inc
and
lret
imul
add
test
jecxz
mov
fidivl
adc
mov
mov
adc
sbb
adc
adc
outsl
sbb
cmp
stos
jg
sbb
popf
loope
push
daa
divl
add
cltd
sahf
hlt
cli
sub
loop
mov
popf
sti
xor
dec
jb
push
sarl
mov
adc
filds
call
jne
jg
rsqrtps
jmp
mov
push
push
mov
std
push
push
outsb
push
rcll
inc
sarb
inc
xchg
cld
rcll
and
sub
insl
cmc
xchg
inc
xor
mov
dec
mov
sbb
sahf
loopne
add
addl
shrl
scas
lods
cmp
push
sbb
xlat
xor
jne
lahf
mov
pop
addr16
adc
movsl
mov
inc
mov
pop
cltd
push
andl
das
addb
dec
or
push
pop
lret
int
nop
mov
int
and
cwtl
shl
and
js
stos
cmp
sbb
cwtl
jbe
adc
push
andb
inc
mov
mov
inc
daa
sti
cmc
testl
enter
addr16
push
mov
adc
pop
and
xor
mov
adc
and
or
xchg
int
push
pop
push
sti
ret
daa
mov
cltd
mov
xchg
mov
ret
das
inc
and
pop
bound
lcall
pop
lcall
aas
cld
jno
pop
jae
mov
shlb
or
shll
add
mov
push
inc
dec
jecxz
bound
or
mov
sti
and
xchg
je
fwait
sahf
sub
movsb
jle
dec
cltd
adc
jno
ffree
pop
aaa
sub
pop
dec
pop
fiadds
mull
jae
clc
cltd
pop
idivl
sti
movsl
iret
rcrb
mov
mov
jbe,pn
cli
sar
lret
pop
repz
mov
cmpsb
insl
fcom
mov
aas
js
jnp
jae
nop
cmc
mov
sti
adc
fwait
in
loope
imul
fwait
cmpsl
mov
ja
cmp
mov
scas
push
sub
pop
dec
ljmp
or
rorb
dec
push
cmc
and
cwtl
mov
ss
fucom
ficoml
shl
mov
pop
loopne
mov
rcrl
lcall
push
pop
sarl
sub
push
jl
testl
mov
and
xchg
nop
xchg
jecxz
sub
adcb
and
xor
jg
test
jne
inc
idivl
mov
push
rcrl
adc
dec
test
insb
incb
repz
daa
pop
dec
sub
sbb
mov
std
xchg
xchg
stc
dec
cmp
xor
icebp
adc
jbe
mov
je
xchg
jno
or
push
inc
cmc
data16
pop
adc
popf
adc
mov
inc
scas
mov
aaa
xlat
adc
xor
mov
inc
xadd
inc
aas
fwait
or
mov
mov
outsb
mov
xchg
shll
adc
jae
adc
sub
jnp
inc
daa
mov
repnz
sbb
xor
xchg
mov
addr16
sbb
cmp
sbb
fbld
test
jle
pop
push
insl
rol
sub
inc
sbb
jle
repz
or
xlat
aas
pop
out
insb
rcrl
jae
dec
sbb
aad
jnp
daa
cmp
aas
push
xchg
inc
movsl
adc
pmulhuw
fwait
shlb
push
outsb
cmp
xchg
out
jmp
dec
pop
ja
jae
sub
aad
dec
rcrl
roll
jnp
sbb
push
mov
mov
mov
xchg
dec
aam
leave
sarl
insb
loope
jl
jp
cmp
inc
cmpsl
je
lods
insb
pop
out
ss
mov
lcall
jne
mov
jle
pop
jecxz
cmp
sub
jne
and
xlat
addr16
dec
push
dec
outsb
punpcklbw
push
leave
mov
arpl
ficoml
enter
sub
mov
jmp
pop
insb
les
jmp
mov
mov
inc
leave
scas
stos
dec
in
lods
sbb
inc
nop
add
jb
cmp
int
sbb
aam
test
mov
pop
xor
idivl
sti
pop
push
xchg
imul
imul
pushf
xchg
sbb
add
subl
sub
push
aaa
pop
xor
dec
or
rclb
fsubs
xchg
xchg
ficomps
xchg
xchg
push
shll
xchg
aas
mov
test
mov
fisttps
mov
hlt
dec
push
lcall
hlt
push
add
push
or
fisttps
rorb
mov
js
inc
dec
pop
xor
data16
lods
jp
sbb
test
mov
add
inc
fnstcw
aam
les
loope
insb
cmpsl
pop
mov
adc
pop
cmc
and
mov
or
pop
and
nop
mov
imul
je
bound
xor
and
pcmpgtb
or
sub
fs
enter
add
mov
adc
shl
and
int
push
jg
mov
sub
insl
vmovshdup
icebp
bound
sub
and
fs
clc
ljmp
and
xor
sub
push
jbe
push
lods
adcl
adc
stos
pop
rorl
inc
loopne
mov
cli
stos
pop
xor
adc
add
adc
cmpsl
test
scas
clc
ds
mov
movsb
pop
and
sbb
hlt
imul
repnz
push
test
and
shrl
mov
mov
inc
notl
push
fcom
enter
push
adc
jne
and
imulb
loop
aaa
insl
jnp
sub
jle
sub
pusha
or
push
sbb
mov
inc
outsb
loopne
testb
sub
mov
jp
adc
inc
pop
sub
rcll
xor
daa
imul
mul
mov
jge
mov
pop
fstpl
pop
cmp
xor
int3
fs
sbb
xor
aam
aaa
and
clc
sbb
scas
les
imul
add
dec
xor
popf
fnstsw
pop
out
jmp
lahf
inc
ja
push
stc
pop
adcl
pusha
adc
daa
mov
iret
mov
outsb
pop
push
test
movsl
mov
ret
push
jmp
or
les
xchg
insb
daa
xchg
cmp
cs
mov
das
cmp
pop
mov
dec
mov
pop
arpl
jmp
pop
pushf
xor
das
pusha
jne
sbb
sub
fcoml
push
sbb
jae
pop
sarb
inc
jmp
ljmp
mov
push
or
push
cmp
fcmovnu
adc
pop
jne
and
sbb
or
add
decb
into
leave
pop
jle
sbb
adc
imul
insb
pop
shlb
test
sbb
sarl
adc
push
inc
leave
sbb
pop
pop
cmc
and
stos
leave
adc
inc
xchg
jg
jns
push
repz
out
pop
xor
adc
testb
xor
sbb
mov
rcr
pop
ljmp
aad
xor
cmpsl
sbb
jle
loope
add
mov
shr
add
mov
repz
je
insb
iret
mov
jmp
adc
repnz
popa
and
sbb
jae
inc
inc
int
stos
std
mov
fwait
sub
test
notb
dec
lods
push
sahf
cmc
xor
imul
and
push
pop
jo
sti
pop
lods
hlt
cs
push
cmc
sbb
inc
mov
xchg
xor
lods
dec
push
rolb
ss
in
lds
idivb
mov
mov
pushf
push
or
pop
mov
stos
cmc
push
nop
pop
mov
sub
xor
sbb
sbb
dec
outsb
insl
les
inc
loopne
sub
sarl
pop
inc
stos
data16
fs
outsl
stos
aam
push
scas
fcomp
mov
clc
jmp
mov
adc
shlb
cmp
xor
mov
jl
add
jmp
in
mov
cmp
dec
lods
cli
ficoms
mov
dec
dec
xchg
adc
into
xor
jae
xor
adc
dec
xchg
xor
jle
mov
mov
mov
insb
xchg
fs
lret
dec
xor
cmp
shlb
loop
sub
pop
pop
inc
cmc
ret
dec
inc
call
and
xchg
test
jae
xchg
pop
lds
das
mov
xchg
sbb
lds
insb
addr16
and
inc
mov
sub
cli
push
aas
xor
cmpsb
shll
xchg
fisttps
sbb
pop
jmp
into
sbb
pop
and
sub
ss
pop
mov
push
mov
or
add
cli
mov
es
xlat
jbe
xchg
adc
orb
pushfw
or
xor
imul
cmpsb
xchg
clc
insl
xchg
leave
sbb
cld
mov
outsl
pop
fdivrp
pop
aam
or
sahf
sbb
lahf
test
xor
mov
arpl
sub
and
pop
xlat
sub
mov
dec
xor
test
out
jecxz
nop
pop
mov
add
adc
inc
cmp
pop
in
mov
aam
push
shrb
addr16
sub
je
pop
xor
cmp
loop
insb
pop
addr16
cli
mov
bound
ret
xchg
mov
inc
jbe
jae
shl
dec
out
mov
add
lahf
push
sbb
jg
lea
jb
imulb
sbb
adc
and
push
push
add
fcomip
es
push
pop
dec
pop
clc
and
push
xchg
mov
sbb
xchg
mov
mov
sarl
push
cmc
hlt
inc
xor
pop
aaa
jne
repnz
mov
push
test
jge
mov
stos
jecxz
rclb
push
pop
inc
ds
ljmp
xor
cwtl
arpl
adcb
lods
push
les
icebp
xor
scas
lock
mov
rcrb
out
int
insb
xor
pop
adc
aad
negb
repnz
js
jno
clc
xchg
pushf
push
repnz
jbe
into
repz
arpl
popa
inc
pushf
loopne
das
addb
jg
dec
mov
ret
mov
jl
mov
mov
push
mov
ret
or
push
mov
orb
sub
popa
xor
movsb
gs
pop
hlt
mov
test
gs
fucomip
and
add
lret
xor
out
mov
xchg
shrl
aaa
jmp
push
fisttps
fdivp
lock
inc
lock
jne
xchg
in
dec
cld
sub
jle
cwtl
xlat
iret
xor
cs
sbb
mov
jp
jg
pop
push
aad
cmp
push
sbb
cmc
mov
scas
cmp
sbb
stos
jne
push
sbb
lea
int3
sbb
popf
jge
or
movsb
les
lock
pop
push
mov
es
mov
xchg
insb
addb
push
arpl
add
pop
out
and
movsl
and
push
push
mov
mov
push
add
pop
ret
pop
std
daa
repnz
or
mov
push
imul
pop
ss
add
js
movsl
daa
push
mov
sbb
xchg
adc
scas
pop
repz
inc
or
sarl
pushf
mov
orb
out
sub
jg
xchg
xchg
fcomps
jmp
adc
sub
pop
and
mov
push
mov
mov
cmp
daa
pop
data16
mov
mov
and
xor
lds
mov
fwait
fwait
push
insl
pop
add
push
sbb
fdivrl
adcb
sbb
xchg
stos
mov
xor
jmp
cltd
jmp
xor
sbb
mov
mov
xchg
lods
jmp
xchg
xchg
mov
sbb
add
jne
loopne
dec
add
cltd
push
or
mov
mov
adc
mov
roll
inc
pusha
pop
icebp
pop
shrl
out
push
mov
das
test
lea
dec
push
push
push
cltd
jo
daa
int3
ss
xchg
push
addb
fsts
push
xor
and
add
bound
fwait
sahf
jne
cmp
cmp
and
push
ds
sub
cli
pop
mov
lea
xchg
adc
sub
xor
out
leave
pushf
ds
mov
jmp
aaa
stos
and
scas
lds
mov
repnz
adc
stos
stos
xchg
les
ss
mov
mov
adc
and
in
inc
adc
dec
es
or
cld
cwtl
push
not
jge
jns
es
lods
pushf
shlb
mov
es
jo
fmul
push
xor
or
out
popf
fists
out
xor
or
gs
lret
mov
shrb
pop
pop
shll
and
gs
jae
daa
arpl
and
inc
xor
push
push
adc
jae
cwtl
shll
mov
imul
and
outsl
add
mov
shll
sub
mov
or
fwait
stos
ss
xchg
fimuls
rcrb
xchg
loope
ret
inc
iret
push
pop
pop
jb
push
adc
lods
icebp
xor
mov
hlt
cmpsl
or
cmp
mov
push
subb
xor
xchg
mov
jl
xchg
push
dec
clc
pop
inc
mov
cmpsb
add
mov
clc
js
push
xchg
scas
or
enter
sbb
je
dec
addr16
adc
ret
xchg
aam
pusha
in
sub
imul
in
imul
xchg
int3
cmp
adc
mov
out
adc
cmpsl
stos
push
dec
mov
mov
mov
jecxz
testb
mov
and
cld
mov
filds
xor
in
xchg
or
dec
jb
add
ljmp
inc
jae
add
aad
add
ret
rorb
adc
movb
push
das
jnp
and
clc
mov
call
sub
lods
push
add
jp
out
xchg
jg
js
jnp
and
dec
out
pop
arpl
stos
or
mov
cmp
sub
hlt
push
dec
and
jp
test
mov
and
mov
jecxz
cwtl
sbb
cmp
mov
jb
ljmp
mov
mov
adc
cmp
inc
repz
xorl
pop
cmc
into
test
push
pop
les
int3
imul
and
jg
jne
jbe
inc
lods
xchg
imul
dec
push
mov
xchg
adc
rolb
jmp
pushf
clc
int3
sarl
clc
mov
lret
sbb
jle
movsb
jo
cmc
jb
add
mov
repnz
sbb
mov
mov
inc
adc
xchg
push
insb
fidivl
jnp
cmp
popa
push
cpuid
aas
cwtl
jg
jo
xor
pop
sbb
cwtl
push
xor
and
cwtl
outsl
pusha
xchg
or
mov
insl
js
or
add
and
sub
loope
cmp
jbe
xchg
xor
cmp
pop
sub
push
or
and
jge
lods
cwtl
lds
xchg
roll
repz
cmp
leave
cld
fyl2xp1
repz
ss
or
lods
or
mulb
or
popf
jae
loope
fs
cmp
mov
inc
jns
xor
inc
jp
mov
rorb
test
enter
xchg
mov
scas
add
jbe,pn
cmp
fstps
inc
mov
das
enter
out
stos
mov
mov
bound
sub
and
sahf
andl
fxch
mov
mov
adc
xchg
enter
sbb
ljmp
push
xchg
adc
adc
test
mov
iret
cmpsl
push
pop
les
fldenv
xor
mov
and
push
in
loopne
imul
dec
fiadds
arpl
imul
adcb
adc
mov
mov
addr16
push
mov
inc
adc
call
jne
cmp
xchg
cmp
cli
orl
adc
imul
jecxz
lods
loop
in
stos
push
fldcw
cmp
pushw
outsb
pop
repnz
repz
inc
dec
ja
xchg
sti
push
adc
pop
mov
jno
adc
push
adc
push
movsl
out
push
hlt
ret
jb
rcr
jmp
mov
xchg
pop
lcall
scas
pop
call
scas
push
xor
xchg
sub
inc
sbb
and
dec
push
repz
pushf
add
jo
aas
push
mov
inc
stos
pop
stos
add
xor
fldl
sahf
add
into
ss
xlat
push
mov
imul
scas
cmc
and
sub
push
outsb
sub
aam
iret
jo
mov
ss
out
ret
adc
jae
xor
in
ljmp
cli
flds
xor
leave
ss
das
call
adc
clc
popa
test
or
rep
adc
mov
shl
jne
jae
jnp
shlb
mov
ret
out
inc
stos
mov
push
dec
iret
js
push
out
xchg
push
xchg
test
lods
leave
bound
or
cmc
dec
out
push
lret
adc
push
adc
sub
dec
and
push
pop
shrl
inc
sub
mov
cmp
pop
loop
sbb
sbb
jle
push
jle
mov
clc
jecxz
xchg
pop
mov
or
mov
adc
push
mov
in
sbb
jne
mov
movd
or
inc
fimuls
fwait
mov
jmp
mov
sub
push
idiv
lods
sub
inc
sub
cmp
lret
or
movsb
pushf
mov
out
lret
xchg
out
mov
pop
sbb
ffreep
or
enter
in
xchg
cwtl
je
cld
fdivr
xor
int3
pushf
popl
pop
mov
cwtl
lret
pushf
std
cmp
dec
inc
ficoms
sub
pop
xor
lea
mov
repnz
dec
add
mov
int
test
sti
add
mov
ss
jg
push
jb
push
or
iret
ja
cltd
mov
mov
lea
mov
xlat
mov
or
xorb
lods
add
or
nop
lahf
call
enter
jbe
imul
xor
orb
pop
jmp
fiadds
arpl
cmc
cmp
sti
and
int3
add
cmc
imul
inc
xchg
in
pop
fwait
rcrb
psubusb
dec
or
les
aas
mov
sbb
push
jbe
pop
nop
gs
and
sbbl
daa
pop
fnstsw
arpl
and
mov
xchg
pop
cmp
iret
sarl
cmp
sti
or
int
dec
add
pop
xor
pusha
jge
push
icebp
pop
pop
push
cmpsb
orb
call
cmp
mov
xor
add
mulb
push
inc
js
mov
lcall
jae
nop
jne
pop
or
xchg
int3
xchg
add
movsb
sbb
xlat
pop
dec
dec
inc
jo
fcmove
fs
add
pop
adcl
jae
aaa
xchg
adc
pop
jl
inc
cltd
dec
mov
sbb
or
cwtl
pushf
dec
xchg
push
cvtpi2ps
mov
mov
sub
mov
jae
and
jecxz
or
cld
and
jmp
mov
pusha
xchg
adc
mov
mov
pop
and
cld
cmpsl
lea
or
adc
iret
pop
mov
call
pop
jne
aaa
and
mov
addl
xchg
cmpsl
fsub
mov
dec
cltd
jae
mov
cmp
popf
mov
fstps
mov
ss
in
dec
addr16
cld
pop
popa
pop
lods
mov
ret
pop
pop
pop
xchg
mov
out
pop
adc
aam
jl
mov
sub
inc
mov
rep
adc
add
out
and
fwait
adc
xchg
je
pop
lea
bound
push
mov
jecxz
cmp
lds
mov
fnstsw
push
into
in
pop
cmp
popa
add
mov
icebp
fwait
idivb
shl
mov
mov
cwtl
push
mull
push
jns
sbb
lret
cmp
and
fsts
pop
push
bound
ret
js
sub
and
fs
add
pop
mov
outsl
cmp
das
js
in
test
mov
sub
arpl
jecxz
pop
dec
ljmp
ffreep
fimull
sbb
and
push
xchg
in
mov
mov
mov
iret
and
jo
call
movsb
inc
movsl
mov
inc
adc
sub
push
sbb
jb
pusha
decb
pop
push
xor
aaa
adc
xchg
or
jb
jnp
fwait
sub
mov
rorb
lret
mov
repz
cld
loop
dec
push
xchg
fdivs
lds
cmc
cmc
enter
out
and
push
jo
pop
les
or
lods
sti
mov
mov
push
mov
orl
cmove
xorl
stc
lahf
xor
and
in
pop
inc
inc
js
add
pop
dec
shll
sub
movsl
imul
push
fcmovnb
shlb
mov
and
lahf
mov
bswap
out
popa
hlt
mul
rcrl
jg
xor
ret
cmp
mov
dec
sub
enter
jnp
into
sbb
fwait
test
cmpsl
cltd
cmp
rolb
repnz
and
pop
sahf
sti
mov
pop
push
jp
dec
cmpsb
mov
jecxz
rolb
les
jae
nop
and
cmp
mov
push
loope
addr16
xor
add
popl
fisubl
mov
decb
in
jmp
jle
dec
hlt
fbstp
adc
stc
cmp
loopne
push
mov
inc
push
adc
sub
pop
fcomps
inc
xchg
data16
xchg
cmp
enter
push
out
movsb
ja
sub
xchg
mov
jo
push
jmpw
cltd
xlat
hlt
mov
jle
fs
fadds
fmuls
test
mov
adc
insb
mov
call
jo
mov
scas
xchg
lcall
push
shrl
adc
mov
hlt
dec
arpl
movb
lds
mov
ljmp
cmp
nop
rcll
push
push
movsl
jle
cmp
adc
pop
inc
clc
push
and
sub
dec
test
and
ds
mov
inc
sub
or
sub
out
adc
std
outsl
fimull
adc
cmpsl
cli
movsb
adc
leave
ret
mov
xor
ljmp
lods
xchg
adc
jbe
test
sub
mov
and
ret
gs
adc
jmp
in
loope
jae
in
cmpsb
dec
in
outsl
add
idivb
jne
pop
cmpsl
pop
ja
pop
cmp
sbb
mov
mov
sub
faddl
xor
xchg
mov
in
pop
and
test
je
add
repz
fdivs
ja
setno
mov
xor
add
test
xchg
cltd
loopne
pop
movsl
cmp
sti
jmp
mov
sbb
push
ret
into
mov
mov
mov
icebp
fdivl
xchg
stos
add
xor
add
shll
mov
xor
sub
enter
leave
stc
iret
cmp
push
idivb
pop
pop
or
popf
push
out
lahf
loopne
xchg
lahf
mov
xchg
xchg
jbe
push
shlb
clc
aaa
pop
imul
xchg
in
adc
sub
int
jg
sbb
pop
mov
test
mov
cltd
in
subl
adc
mov
mov
push
or
xor
outsl
les
enter
rclb
and
adcl
dec
inc
xor
icebp
sbb
imul
cmp
mov
inc
mov
mov
imul
inc
push
test
idivl
xorl
fistpl
out
xor
xchg
adc
add
jnp
dec
sbb
cmp
xor
add
xor
lods
fdivrs
and
adc
addl
cwtl
divl
and
inc
test
out
sub
xor
or
adc
in
or
and
inc
in
imul
sub
mov
leave
gs
and
iret
cmp
dec
dec
mov
sbb
jmp
iret
sub
mov
jno
jmp
inc
arpl
sbb
inc
repnz
ret
xchg
negl
push
mov
pop
shrl
add
add
pop
sbb
push
and
cwtl
xlat
out
call
cmpsl
mov
into
dec
je
divb
add
ds
mov
insb
cmp
shlb
add
jp
adc
dec
push
std
lock
or
sti
cmp
aam
negb
sbb
inc
cmc
lds
xchg
cwtl
pop
sbb
in
mov
push
jmp
inc
or
test
dec
loope
je
mov
sbb
test
mov
xlat
pop
nop
aad
hlt
shrl
arpl
out
jo
jmp
adc
movl
and
and
push
xchg
insl
xchg
pop
add
jp
fs
adc
js
jb
cmp
mov
inc
push
arpl
out
jg
repz
addr16
add
xchg
xchg
mov
arpl
jecxz
xchg
push
and
rclb
mov
lret
roll
cmp
outsl
jae
ret
mov
pusha
sbb
push
movntq
xlat
add
inc
cmp
push
dec
inc
adc
cmp
adc
sbb
jge
xlat
out
cmp
pop
push
imul
bound
ret
or
rcrb
pop
pop
jnp
out
xchg
jle
loope
divl
push
xchg
cwtl
mov
dec
adc
repz
dec
mov
sub
and
add
frstor
pop
jne
jp
and
xor
jnp
js
test
cmp
nop
fsts
pop
or
shlb
rclb
jmp
and
es
mov
or
or
adc
pop
das
pop
nop
ljmp
sahf
outsb
push
cmp
push
xchg
add
pop
insl
or
je
in
sub
cmp
push
data16
mov
jo
pop
cmc
lahf
push
rep
sti
call
jae
enter
or
xchg
mov
jbe
out
arpl
sub
dec
lock
and
cmp
bound
out
daa
outsw
xor
cltd
cmpsl
dec
add
xor
cltd
sub
jge
fistpl
sbb
stos
xchg
dec
xchg
bound
ljmp
repz
adc
fs
sbb
mov
mov
dec
out
nop
sbbl
mov
fcompl
cli
mov
add
fs
outsb
daa
lahf
aaa
fildl
jne
mov
pushf
mov
push
jecxz
xorb
mov
push
lcall
mov
das
xchg
inc
adc
popa
jecxz
jecxz
mov
je
push
jnp
ds
xchg
adc
lea
in
cli
mov
sarb
or
mov
xchg
mov
lds
test
xor
getsec
push
insb
sub
out
push
adc
lods
xor
sbb
mov
push
imul
push
das
adc
das
or
ret
ret
inc
mov
int3
sub
pop
insl
pop
mov
mov
clc
add
scas
imul
inc
fdivrs
fbstp
dec
cmpsb
lcall
aas
fstpl
dec
aas
cmpsl
into
xchg
add
mov
pop
and
xchg
and
call
push
in
add
cld
dec
imul
mov
dec
inc
jbe
or
jae
xchg
lcall
shl
adc
xchg
jb
cmovs
cmp
fdivs
les
or
push
mov
fnstenv
mov
stos
pop
pushl
add
mov
shrb
sub
insb
in
cwtl
inc
fmull
and
jae
mov
mov
mov
push
xchg
pushw
loop
jle
ret
cwtl
jle
jmp
loope
or
jp
movsb
out
mov
iret
and
adc
roll
jmp
and
ficomps
jge
pop
neg
jp
test
mov
or
je
jecxz
loope
nop
pop
xchg
sbb
mov
jbe
mov
mov
dec
std
push
ret
pop
sub
or
push
popf
sub
and
enter
repz
xchg
inc
aam
stc
push
iret
test
jle
sbb
push
int
pop
pop
pop
or
sub
add
cmp
faddl
int3
xor
xchg
inc
and
dec
push
lods
pop
push
xchg
xchg
xor
jno
sbb
scas
xor
xchg
dec
xchg
test
outsl
shlb
idivl
jecxz
sbbl
lods
fwait
ror
sarl
sub
je
and
sti
mov
and
cmp
arpl
mov
sub
mov
repnz
jmp
ss
test
in
push
movsb
pop
jp
xchg
pusha
jae
ljmp
xchg
test
and
mov
sub
int3
xchg
cmp
dec
pop
orl
enter
fwait
sub
leave
or
test
add
and
dec
sub
sub
mov
stos
xchg
pop
test
jae
xor
stos
loopne
sbb
setl
mov
xor
mov
pop
arpl
adc
cwtl
mov
pop
xor
mov
xchg
xchg
cmp
xchg
repz
dec
jl
inc
adc
or
xor
scas
and
sbb
adc
inc
pop
rcrl
pop
xchg
sub
notb
mov
in
push
sbb
fadds
iret
imul
mov
sub
aas
shll
push
mov
mov
xlat
sbb
mov
mov
enter
and
xlat
mov
jbe
std
add
adc
mov
out
jle
enter
add
sbb
imul
pushf
sbb
adc
movsb
test
sbb
inc
push
mov
pop
lods
pop
and
sbb
push
cld
outsl
fidivrl
jb
aam
push
das
sbb
mov
ja
and
xor
fdivl
call
mov
mov
enter
and
sub
mov
outsl
add
push
in
cmp
fcmovbe
lret
test
in
cmpps
cmp
adc
sub
in
outsl
arpl
mov
mov
and
xchg
cmp
push
outsl
push
rol
into
and
sbb
out
test
jns
mov
addr16
pop
adc
jb
sbb
add
sub
xchg
sahf
sbb
cltd
mov
jle
lods
or
sub
jb
lret
fcmove
arpl
push
jno
cmp
sbb
dec
mov
push
dec
imul
pop
std
dec
dec
jns
mov
fistpll
divl
je
jl
rcpps
pminsw
xor
jo
dec
lcall
cltd
mov
push
jnp
and
xchg
mov
sbb
dec
xchg
and
inc
jne
xchg
sub
lods
xchg
sarl
ret
daa
enter
std
bound
pop
inc
adc
test
mov
int3
add
adc
pop
lcall
outsb
pop
shrb
or
cmp
push
cs
lret
bound
lock
cli
jmp
in
lahf
jl
je,pt
imul
dec
xchg
and
dec
sbb
and
sbb
push
cmpl
sub
hlt
lods
inc
xchg
js
stos
mov
das
mov
je
push
mov
rorb
lods
stos
iret
mov
jge
inc
shlb
sbb
mov
adc
adcl
xchg
inc
add
jno
ljmp
jnp
sbb
sbbl
dec
addr16
jl
dec
fdecstp
mov
je
shll
fistpl
mov
stos
fwait
sub
in
adc
aam
sbb
inc
lret
pushl
push
mov
fs
and
clc
int3
ljmp
mov
mov
mov
clc
lcall
inc
add
cltd
push
shll
int
xchg
adc
cmp
pushf
jno
mov
inc
cmpsl
out
fldenv
lret
mov
sub
sarb
dec
mov
xchg
xor
int
lahf
adc
pop
jmp
xchg
sub
fdivp
dec
and
dec
mov
push
in
pop
sbb
repnz
fldenv
ret
aad
add
aaa
xlat
inc
and
mov
jo
add
sub
lea
ret
or
orb
enter
xor
stos
xor
jecxz
sbb
mov
push
insb
mov
pop
pop
out
xchg
sub
aas
out
pusha
call
xor
push
xlat
mov
outsl
jnp
and
xor
fdivrs
jge
outsl
rcll
pop
jp
nop
inc
sub
adc
jae
cmp
fbstp
mov
pop
mov
sbb
pusha
ja
sbb
dec
mov
sub
shll
add
push
adc
and
push
adc
cmpsb
or
mov
shll
syscall
sbb
inc
mov
push
mov
adc
jbe
lret
cmc
mov
sbb
out
repz
int
pop
je
xor
or
mov
pop
fdivs
cmp
loopne
sbb
jns
popf
push
aam
pop
loope
mov
jae
shll
sub
mov
push
or
lea
pop
lods
mov
clc
leave
adc
popa
es
pushf
jle
into
cmp
out
aas
in
dec
adc
or
push
outsb
or
jecxz
or
sbb
sub
test
test
lret
mov
sti
jp
sbb
fwait
insb
jae
lret
xor
xor
fucomi
sahf
adc
add
sub
sahf
jnp
dec
sub
dec
sahf
hlt
sti
cmp
outsb
jecxz
jle
scas
lret
pop
clc
enter
xchg
push
outsl
popa
cmp
pop
adc
dec
outsl
lock
neg
sarb
outsl
fndisi(8087
and
outsb
xorl
push
sbb
lahf
push
testb
add
xchg
aam
adc
adc
lods
ret
pop
and
or
xchg
pusha
lds
xchg
mov
sbb
test
and
mov
or
inc
push
adc
mov
mov
dec
and
in
nop
inc
ret
and
mulb
dec
cmp
inc
mov
push
dec
jae
scas
sbb
imul
ja
jl
repz
ret
push
int3
fadds
adc
jne
es
pop
lret
popf
adcl
out
dec
inc
push
cmp
mov
or
add
sub
lock
and
outsl
adc
test
mov
shll
mov
inc
adc
shl
dec
popa
xchg
inc
and
xchg
inc
imul
jmp
and
add
cmp
xor
fnsave
sub
mov
int3
cmp
rolb
js
or
push
fwait
insb
push
dec
enter
inc
rcll
sub
out
daa
and
enter
xchg
inc
push
loope
das
setle
mov
mov
add
ror
fwait
pusha
xchg
cmp
fiaddl
imul
pusha
cwtl
mov
dec
cmp
push
lock
fisubrl
sbb
subl
roll
adc
pop
add
push
pop
stc
sbb
das
in
popa
and
int3
daa
inc
aaa
pop
les
push
add
add
mov
aad
loopne
dec
sub
and
cmp
jge
nop
sub
adc
xchg
daa
addr16
fimuls
xchg
mov
push
mov
push
add
fnstcw
movb
pop
pushf
sub
mov
sub
push
loope
pop
or
movsb
icebp
jae
sub
adc
push
cwtl
mov
outsb
jbe
repnz
adc
repz
adc
repz
clc
shll
xchg
mov
outsl
iret
cwtl
xlat
cli
mov
cltd
and
inc
test
pop
push
sbb
ja
or
xor
idiv
jg
lret
xchg
xchg
or
notl
add
iret
out
xor
loop
icebp
mov
scas
adc
iret
pushf
or
sub
gs
dec
cmc
jae
in
cmpsl
push
or
pop
aas
jae
adc
aam
jg
jnp
sbb
movl
cwtl
mov
lahf
lds
daa
xchg
xchg
pop
ror
das
in
call
in
and
xchg
test
mov
repnz
cltd
std
xchg
loopne
and
sti
icebp
test
cli
icebp
push
cmp
icebp
aad
fimull
or
andb
and
stos
out
mov
pop
inc
shll
mov
out
mov
repz
mov
mov
sbb
loop
out
test
sub
outsb
inc
lea
sbb
cmp
jg
movsb
dec
cmpsb
ss
xor
bound
call
pop
cmpsl
pop
xor
mov
test
or
fs
dec
shrl
xor
adc
xchg
xchg
fdivrs
movsb
loope
push
jbe
in
jb
dec
hlt
sbb
das
push
and
lret
jnp
cmp
mov
xlat
sbb
xchg
repz
int
addr16
push
repnz
jp
sub
rcrb
jp
imul
int3
jge
jns
xchg
sbb
incl
popf
in
pusha
xlat
movsb
jecxz
push
std
sbb
or
out
cmp
sbb
hlt
pop
jecxz
fsubl
in
scas
fidivl
scas
mov
movsl
lods
sub
and
dec
push
push
test
push
jg
pushl
addr16
jne
mov
and
pmuludq
insl
arpl
sub
pop
add
in
mov
jmp
ja
push
mov
pop
jmp
ljmp
ror
mov
pop
pop
out
cmpsb
leave
fdivrs
insl
in
rol
popl
in
mov
aad
shll
lret
cmp
popa
push
mov
jno
loope
mov
dec
dec
xchg
cwtl
cmpsb
pusha
sub
out
dec
and
lahf
mov
xor
stos
push
xchg
jg
rep
mov
push
push
mov
outsl
dec
inc
inc
xlat
xor
jge
add
loope
cwtl
dec
or
jb
cmp
sub
add
rcll
pusha
push
insl
je
enter
pop
and
in
add
les
adc
push
push
pop
rorl
addb
cmc
sbb
inc
lods
inc
lahf
mov
push
je
out
mov
jl
lods
or
adc
clc
or
mov
pop
js
jmp
aaa
mov
insb
pop
fisubrl
adc
xlat
pusha
mov
rorl
dec
and
shl
scas
jbe
push
adc
in
pop
lods
adc
add
inc
ret
cwtl
sub
imul
inc
inc
push
inc
ret
lahf
outsb
add
cmove
adc
xchg
out
sahf
pop
je
daa
cmc
fimull
aaa
sbb
pop
int
cmc
nop
mov
sahf
and
or
std
dec
popf
pop
xchg
push
fwait
adc
mov
adc
ret
ljmp
enter
ljmp
into
mov
bound
ljmp
pop
inc
cmp
fcompl
cmc
outsb
adc
aam
mov
mov
pop
fsts
stos
shrl
xchg
add
lods
mov
pop
xor
mov
dec
shll
pushf
clc
mov
ret
mulb
mov
mov
mov
enter
dec
push
lock
in
adc
push
pop
push
divl
inc
cmp
lds
pop
push
push
sahf
mov
out
and
or
lock
ret
mov
dec
mov
mov
pop
add
inc
xchg
sub
sbb
jmp
dec
call
cmp
int
mov
dec
xchg
pusha
push
fadds
stos
and
inc
fs
add
sarb
cmpl
outsb
rol
mov
adc
lahf
adc
cmp
xchg
mov
push
sbb
addr16
xchg
bound
lds
jnp
je
stos
inc
imul
rolb
cmp
dec
incb
pop
das
inc
ja
dec
ret
cmp
sub
xchg
dec
outsl
movd
enter
adc
push
ret
sarb
jle
loop
ret
mov
aaa
sti
jl
and
aam
pop
jp
iret
mov
xchg
jne
fldl
inc
cmpsl
les
fistps
mov
push
or
push
and
adc
notb
pop
movsl
aad
dec
loope
gs
dec
jno
jnp
inc
pop
loop
movsl
mov
mov
xlat
loope
fcomps
push
inc
or
movsb
jno
jbe
ljmp
dec
xor
jecxz
pop
in
pop
dec
jbe
inc
adc
out
pop
shrl
xchg
sbb
ss
mov
jnp
jmp
je
scas
iret
push
sbb
pushl
bnd
push
cmpsl
xor
mov
pop
js
pop
fcoml
jbe
mov
ret
xor
andnps
lds
iret
mov
mov
inc
pop
fisttpl
xchg
xchg
mov
lds
repnz
daa
sub
std
jns
cmp
lock
and
fcmovbe
sbbl
std
sarb
jmp
lahf
cmpsb
cwtl
fcmovne
movsl
pop
fcmovnu
dec
adc
and
movsb
icebp
jecxz
push
fwait
pop
test
and
dec
ficomps
sbb
xor
mov
fisttps
lcall
rcll
movb
sti
hlt
xor
repnz
sbb
and
dec
ss
mov
mov
aaa
inc
out
xchg
mov
fwait
lcall
push
push
test
mov
dec
xchg
and
fstpt
jae
xchg
sub
bound
ljmp
aad
dec
lret
loope
push
jp
mov
add
sbb
scas
mov
xchg
xlat
sahf
or
in
daa
stos
push
sub
fmuls
add
add
add
ljmp
lds
das
mov
cwtl
and
aaa
push
mov
jl
adc
xchg
pop
sti
inc
dec
call
mov
idiv
arpl
in
push
iret
jno
fsubl
negl
repnz
sub
mov
push
aaa
cwtl
in
shll
shlb
sbb
jg
sub
jp
pop
not
push
mov
pop
testb
lahf
or
ret
or
cmp
mov
mov
addr16
or
adc
mov
data16
lret
shll
mov
subb
xchg
lods
insl
sub
out
das
xchg
add
fsubrl
xchg
notb
sbb
xchg
inc
xchg
or
cwtl
inc
sub
xchg
xor
out
push
cmp
rcrl
popa
sahf
mov
add
sub
in
pop
hlt
mov
and
jne
dec
rcr
mov
in
push
xchg
or
inc
rorl
mov
popa
dec
jns
mov
fsubrs
jnp
jb
mov
cmpsb
js
mov
leave
shr
repnz
mov
cs
pop
xor
rorb
xor
push
repz
add
repz
and
xchg
xchg
test
mov
xor
pop
je
dec
jb
stos
adc
xchg
inc
dec
rol
mov
and
push
repz
and
dec
sub
or
inc
cmpsl
sbb
fisubrl
out
jecxz
icebp
and
jecxz
xchg
arpl
or
cmp
addr16
pop
cmp
pop
pop
mov
jmp
out
imul
mov
ja
or
pop
add
xchg
add
leave
addr16
jp
mov
jo
das
or
frstor
ja,pn
test
repz
cmp
sarb
lea
inc
repnz
mov
sub
xor
out
iret
hlt
dec
test
add
clc
lahf
lock
push
nop
dec
aaa
arpl
pop
roll
inc
sub
cmp
fs
sub
test
cmp
adc
or
mov
or
push
enter
dec
inc
or
mov
push
lea
push
out
cli
dec
mov
xor
xorl
inc
clc
movsb
mov
mov
add
mov
mov
jnp
shufps
adc
push
lods
inc
into
ja
lcall
sbb
xchg
in
cmpsb
sub
mov
int
jg
or
push
call
fistl
dec
mulb
movsb
adc
call
scas
cmp
icebp
sbb
mov
lcall
movsl
jecxz
nop
std
mov
cli
loop
pop
cwtl
add
cmpsb
outsb
roll
pop
arpl
stc
testb
clc
icebp
lds
mov
push
jno
addr16
add
mov
repz
pop
loop
sbb
test
cmp
jmp
and
imul
sti
mov
aam
aaa
or
inc
fstpt
push
mov
in
sub
sbb
push
jp
pop
mov
scas
pop
les
adc
xor
fs
adc
in
and
icebp
mov
jmp
fadds
out
and
sar
in
jl
mov
dec
shlb
adcl
cld
test
sarl
lret
xor
out
testb
and
mov
mov
imul
pop
mov
jne
push
mov
ljmp
fimull
fldl
ljmp
aaa
lds
dec
cmp
jnp
add
lock
lock
mov
xchg
out
sbb
ret
xor
xchg
scas
orb
cmp
ja
fimull
popf
jle
call
stos
insb
leave
cmp
mov
cmp
rolb
stos
inc
inc
xchg
mov
cmp
cli
stos
das
push
int
adcb
ljmp
je
cmp
pop
ljmp
movsl
or
outsl
shll
inc
inc
and
idivb
or
pop
inc
sbb
lcall
es
es
lcall
scas
pop
xchg
pop
push
and
insl
out
sbb
cwtl
mov
out
ja
out
add
dec
and
in
push
call
add
out
in
dec
push
je
fwait
dec
cmp
cmpsl
mov
inc
sbbl
mov
push
out
pop
sub
push
lret
push
cwtl
inc
mov
mov
movsb
mov
insl
sbb
push
inc
jmp
adc
pop
adcl
fs
ret
call
aas
adc
shrb
clc
cmp
sub
dec
xchg
fisubs
fsubrs
dec
mov
in
pop
and
sbb
jae
inc
dec
cli
push
cmpsb
mov
ret
jnp
push
adc
mov
mov
mov
or
pop
dec
fcomps
or
and
mov
add
pop
mov
fistps
les
scas
lret
xrelease
and
ljmp
nop/reserved
xchg
jle
in
inc
faddp
pushf
loope
pushf
xchg
scas
cwtl
add
arpl
aas
notb
sbb
mov
movb
sbb
xor
push
xchg
push
pop
into
insl
mov
div
bound
and
ja
sbb
jmp
jno
sbb
sti
dec
cltd
lret
and
or
std
and
cmpsl
cmp
mov
xchg
sbb
fnstcw
push
push
push
dec
fsubs
popf
sbb
fimuls
push
sbb
mov
push
and
add
push
xchg
xchg
repnz
les
cs
outsl
arpl
fcoml
pop
lcall
inc
dec
jno
mov
and
or
ss
xchg
lcall
lock
jae
cmp
int
jge
and
in
pop
pop
je
sarl
and
pop
dec
xchg
cmp
and
adc
xchg
push
movsl
ret
and
adc
shrb
add
mov
adc
out
mov
jle
sub
add
testl
mov
sub
xchg
imul
dec
xor
movsb
sub
xlat
sbb
pop
aaa
dec
xchg
push
in
cmp
inc
sub
fisubs
out
xlat
rclb
inc
cmp
icebp
push
pusha
sub
dec
xchg
out
stos
leave
xlat
insl
int
push
mull
add
xchg
inc
xchg
les
test
jo
mov
in
pop
inc
inc
mov
mov
lods
sub
add
sbb
repnz
pop
ror
je
dec
jb
xchg
sbb
jae
mov
jne
xchg
in
pop
hlt
fnstsw
call
enter
pop
push
fcoml
call
movsl
xor
cmc
inc
stc
xor
fdivs
or
fsubp
sbb
mov
fwait
sbb
jecxz
cmpsb
and
mov
pop
cli
sub
fstpt
mov
mov
adcb
mov
jns
mov
fs
adc
dec
xor
mov
push
mov
mov
inc
lret
je
dec
sub
lea
aas
in
lahf
insl
jae
inc
and
pushf
cmpsl
cwtl
mov
inc
add
push
xchg
pop
sbb
xchg
sbb
inc
nop
xchg
jecxz
or
push
push
nop
cmc
int3
xlat
pop
dec
xchg
inc
js
fisttps
bound
lahf
movsb
sub
aas
out
dec
sub
mov
pop
nop
out
daa
hlt
or
incl
notl
inc
xchg
xchg
or
lret
pop
jno
mov
mov
ret
pop
dec
outsl
jmp
xor
nop
cmp
rep
arpl
mov
jb
inc
mov
ret
jle
addr16
dec
push
fldlg2
dec
jnp
repnz
sbb
inc
lods
push
lds
add
and
fisttps
sub
cmp
stos
fisttps
adc
fcmove
sbb
xchg
imul
int3
ja
xchg
fists
daa
lds
cltd
lock
xchg
sub
ljmp
mov
loopne
mov
pop
sbb
enter
movsl
pop
dec
daa
jle
jne
cwtl
jns
loopne
cwtl
cmp
push
test
in
fwait
adc
mov
shr
or
mov
mov
cltd
xchg
inc
inc
sarl
and
bound
mov
jae
and
sbb
popa
out
or
xlat
xlat
dec
xchg
jne
mov
data16
sbb
fnstenv
adc
pop
cli
repnz
outsl
xor
xor
call
or
loopne
aam
sub
sbb
loope
dec
je
fildll
xchg
fcoml
push
dec
cld
dec
xchg
dec
inc
push
lret
daa
pop
sbb
mov
dec
mov
cmp
daa
loope
mov
xor
push
je
xchg
or
fdivrs
mov
pop
jbe
add
pop
push
lcall
fidivrs
cs
push
daa
jo
xchg
in
cwtl
cmpl
xchg
shrb
xor
sbb
sbbl
fcomp
loopne
fists
js
addr16
das
sbb
test
fmull
and
loope
mov
xor
sbb
adc
sarl
or
xor
test
and
pushf
push
xchg
popa
sti
fiadds
test
mov
in
push
outsb
adc
nop
inc
popa
fnsave
rcrb
and
pop
scas
rcl
cmp
fbld
lock
add
aam
aad
jmp
and
jg
das
xlat
jae
sahf
loope
ljmp
aam
sub
xadd
add
xor
incb
out
iret
dec
rcr
ror
and
dec
cld
fisubs
ret
inc
and
and
cmp
jno
int3
mov
add
mov
sbb
inc
sbb
jae
nop
cwtl
cld
cmpsb
xor
xchg
mov
cmpsl
rcll
inc
test
cmpsl
dec
xchg
push
and
inc
pop
or
ret
jl
mov
add
push
xor
sub
sub
pop
shlb
xchg
out
lds
sbb
jp
mov
scas
xchg
sbb
es
shl
mov
fcoml
and
sub
imul
dec
push
inc
das
cwtl
xor
and
out
xchg
mov
shrl
in
xchg
jb
pop
out
pop
std
mov
sti
jle
inc
jge
lahf
mov
pop
pop
and
ret
xchg
scas
jle
mov
rolb
mov
add
ja
and
inc
cmp
inc
rcll
in
scas
dec
xor
mov
iret
inc
sbb
aas
jl
mov
jl
scas
jge
pop
daa
int3
repnz
and
popf
sti
dec
int3
and
xlat
push
and
lret
aaa
sbb
fs
in
out
pop
sub
js
cwtl
dec
jmp
xor
push
pop
outsl
jmp
jno
xchg
adc
add
jg
sub
dec
sbb
call
pop
rol
aad
jg
movsl
inc
and
testl
gs
jl
loope
lret
cmpsb
fst
and
lahf
hlt
divb
ret
mov
sbb
loope
lahf
sub
or
cli
dec
adc
aad
mov
dec
lret
mov
data16
addl
xchg
repnz
mov
sub
in
push
jae
rol
xor
xlat
fidivl
xchg
mov
fbstp
jae
sti
jg
jl
lahf
lret
sbb
xchg
or
cmp
mov
push
repnz
sbb
xor
adc
mov
xor
pop
mov
test
iret
js
inc
jns
push
inc
inc
andb
or
fwait
add
fistpll
out
repnz
rcll
push
inc
sbb
test
je
jne
dec
inc
bound
rcrb
aam
js
adc
loope
popa
mov
push
mov
test
movsb
pop
add
adc
sbb
push
test
repnz
repz
cmp
pop
je
adc
sub
sbb
cwtl
ret
mov
rorl
pop
repz
leave
xchg
mov
rorb
sub
dec
lret
mov
xor
dec
ja
or
cmp
sub
dec
mov
dec
mov
int
cmpsb
add
int3
push
jg
sti
xorl
lods
stos
js
iret
mov
aas
aaa
dec
xor
pop
push
leave
mov
dec
adc
sub
mov
or
or
subl
mov
add
xchg
sub
lods
push
jnp
jecxz
scas
popf
xchg
lret
jl
add
xchg
jb
scas
das
int3
sbb
add
das
or
hlt
cltd
out
inc
mov
sbb
aas
jge
mov
out
rolb
inc
je
and
pop
sarb
and
test
jle
push
mov
inc
fcmovnbe
jge
mov
sbb
or
mov
into
sbb
pop
mov
dec
pop
and
popf
into
xor
fldl2e
add
jge
negl
inc
sub
js
push
loop
ficoml
scas
mov
xor
filds
in
adc
leave
sub
xor
es
shr
leave
ljmp
shrl
xchg
lcall
mov
and
int
lds
loope
lods
shr
or
xchg
leave
ret
sti
add
push
popa
xchg
lret
nop
pop
lret
pop
lea
cwtl
dec
jb
dec
gs
mov
scas
jnp
fstpl
subb
or
sbb
dec
jbe
push
lcall
rcrl
and
arpl
pop
jg
sbb
inc
xchg
imul
insl
pop
xor
mov
jge
sbb
pop
cmp
enter
ljmp
inc
sub
adc
adc
mov
fsubrp
jno
insb
fwait
or
insl
or
xor
add
insb
mov
ret
push
push
xchg
cltd
and
sub
ljmp
mov
into
insl
in
rorl
inc
aas
add
pop
mov
lret
call
xor
mov
mov
mulb
push
les
out
icebp
inc
je
lods
aad
sub
or
push
push
sbb
push
adc
pop
lret
lret
ja
subb
out
xchg
shr
addr16
inc
mov
xor
lret
in
mov
jnp
fdivrs
clc
pop
mov
xor
das
pop
insl
mov
push
imul
ror
mov
and
mov
push
jae
rol
fcoml
pop
xlat
lds
fdivr
adc
inc
sbb
inc
sbb
test
subb
sbb
push
fisttps
cmp
ja
jp
xchg
lods
add
push
xchg
push
mov
cli
fs
loop
push
pusha
cwtl
mov
cmp
in
sub
filds
insb
xor
fstpt
hlt
loopne
jecxz
aaa
mov
cs
gs
sub
and
add
lret
and
out
in
cmp
cmp
push
in
xchg
push
mov
int3
popf
mov
jecxz
es
bound
lock
and
inc
jmp
arpl
js
movsl
scas
pop
push
xchg
pop
or
test
mov
cs
sub
or
jnp
scas
ja
jge
jae
xchg
dec
imul
mov
testb
sbb
sbb
outsl
sub
sbb
fnstsw
adc
jns
or
push
cmp
sahf
dec
movsb
lahf
pop
int
lock
sbb
add
sbb
sbb
ljmp
cwtl
fwait
leave
mov
test
mov
dec
jne
fcmovbe
sti
je
cmpsb
jns
loop
hlt
loop
sub
fldenv
dec
sbb
inc
inc
sub
mov
pop
sbb
adc
or
pushf
sbb
gs
in
ljmp
xor
jmp
xor
inc
cmp
dec
xchg
shll
push
sbb
pop
loop
movsb
sbb
inc
and
out
xchg
dec
mov
xlat
jmp
out
jae
pop
jae
xchg
arpl
jle
push
aam
or
cmp
sub
shlb
mov
jecxz
xchg
lods
push
shll
and
cmp
adc
test
mov
cmp
imul
mov
xchg
mov
shlb
movsb
in
ljmp
sbb
or
jg
sbb
dec
ret
rcr
loopne
sbb
adc
sbb
xchg
pop
dec
andb
adc
sbb
mov
mov
adc
iret
ss
shrl
sbb
int
inc
sbbl
pop
push
outsb
sbb
addr16
xlat
inc
outsb
and
cmp
call
dec
jne
mov
aaa
or
inc
ret
adc
les
repnz
push
shll
pop
lret
cld
dec
inc
inc
data16
mov
int
adc
cwtl
mov
pop
out
mov
lcall
jb
push
sahf
mov
arpl
xchg
xchg
and
mov
movsb
roll
cli
stos
mov
xor
js
lahf
je
inc
mov
mov
jb
fcmovnbe
icebp
mov
dec
ret
mov
arpl
push
xchg
xor
dec
js
inc
or
shlb
mov
dec
inc
push
pop
vmulss
mov
push
pop
cmc
inc
jbe
push
pushf
mov
mov
cwtl
fimuls
mov
sti
mov
or
push
and
es
sbb
pop
pop
mov
movsl
ss
leave
pop
pop
pop
jno
and
lahf
and
lock
push
pop
lods
dec
and
xor
daa
inc
sbb
test
or
xchg
xor
leave
xchg
test
icebp
adc
fadds
adc
mov
leave
andl
adc
xchg
sbb
jae
ja
notb
push
or
faddp
movntps
ret
cmp
pop
jmp
mov
jnp
out
push
pushf
std
xor
cmpsl
imul
push
mov
mov
and
cmp
sbb
lds
pop
cmp
je
mov
pop
test
out
push
xchg
push
pop
or
xchg
aad
jge
or
dec
or
sbb
or
outsl
hlt
lods
icebp
out
leave
mov
and
mov
mov
nop
or
jae
or
pop
rol
and
push
inc
sub
pushf
call
gs
cmp
jmp
or
jge
or
mov
sub
sub
mov
clc
xchg
and
and
popf
pop
adc
scas
mov
sub
cmovnp
adcl
pusha
outsb
jns
fimull
nop
cmpsb
push
out
lock
mov
scas
inc
mov
cltd
arpl
gs
adc
mov
das
mov
jle
push
outsl
repnz
xor
test
inc
xchg
add
bound
cmp
inc
fiaddl
jb
sbb
nop
ds
cltd
and
imul
sbb
push
jnp
fcoms
or
sub
fs
outsl
mov
mov
rclb
je
mov
insb
mov
std
jp
shll
imull
testl
std
jge
xchg
popa
pushf
inc
aas
repz
adc
add
lcall
insb
fdivr
jge
mov
push
je
jge
adc
dec
add
sahf
insb
push
and
mov
adc
add
test
add
and
dec
jne
adc
fwait
xchg
jmp
test
xorb
fsub
jbe
or
and
push
mov
mov
sub
inc
das
adc
pop
dec
pop
cwtl
ja
mov
push
lret
adc
adc
aas
and
nop
jmp
dec
add
cmp
int3
cmpsb
push
pop
mov
push
aas
test
imul
lds
mov
or
fstl
mov
mov
and
mov
inc
mov
and
addr16
jmp
leave
clc
pop
lds
daa
inc
add
lret
es
push
or
pminub
mov
pop
test
ds
add
out
sub
call
xor
out
and
push
gs
sbb
pop
xorb
pop
iret
pop
shlb
movsb
fnsave
ja
cmp
push
gs
jnp
or
cmc
arpl
push
cmp
pushf
mov
and
negl
adc
dec
pushf
pop
sub
mov
decb
inc
xor
push
sahf
repz
jb
mov
imul
jp
nop
dec
adc
outsb
les
mov
cwtl
mov
testb
fdiv
pop
mov
out
sub
notb
sub
adc
das
xchg
mov
sbb
dec
mov
ror
int
sbbl
xrelease
repnz
lret
cld
in
adc
lret
sahf
mov
sbb
cwtl
in
scas
cmc
mov
jl
xchg
in
add
and
pop
xor
fidivl
cmp
ljmp
or
cmp
xor
fists
push
fsubrl
dec
mov
repz
orb
or
cmp
xlat
mov
xlat
mov
cwtl
dec
push
dec
sbb
punpcklbw
sarb
sbb
aaa
sbb
fldcw
pop
xchg
jge
sub
iret
jle
cmp
xchg
push
mov
jp
push
xchg
repnz
loopne
sti
inc
lods
orb
js
outsl
sbb
or
inc
int3
lods
push
inc
mov
icebp
mov
xchg
lcall
insl
pop
leave
sbbb
arpl
or
repz
add
push
sbb
aam
adc
ror
push
movl
dec
push
insb
mov
mov
push
daa
pop
mov
cmp
inc
cs
idivl
insl
and
or
mov
jb
je
pop
pop
push
inc
imull
fcoml
negb
sbb
jmp
bnd
cltd
stc
cld
fsubrs
add
cli
pop
pop
enter
jp
cmpsl
iret
in
and
xorl
bnd
cmp
adc
inc
sarb
ja
test
push
icebp
mov
or
pop
stos
xor
pop
mov
add
push
and
sbb
mov
ja
je
dec
mov
mov
repz
inc
xchg
loope
mov
popf
mov
ja
ficoml
test
aad
cmp
push
push
cmpsl
or
inc
scas
xchg
mov
pop
sub
scas
xchg
scas
pop
outsl
push
nop
sbb
mov
or
pop
jl
xlat
rol
enter
les
scas
fsts
nop
and
push
or
shll
mov
push
data16
pop
xchg
adc
popw
xor
sahf
or
negb
pop
sarl
out
cmp
adc
sub
ret
repz
cmp
call
negl
sub
xor
inc
jne
jb
and
pop
ss
mov
jae
inc
jmp
nop
inc
xor
dec
and
jnp
jecxz
cli
stc
mov
cmp
dec
add
jmp
mov
dec
aaa
push
xchg
mov
sub
cld
fisttpl
xchg
dec
shrl
add
mov
inc
and
int3
mov
push
xor
push
cmp
jle
int3
movsl
sub
xorl
cmp
and
adc
and
pop
dec
sub
jg
pop
and
das
lock
pop
fistpl
imul
mov
adcb
xchg
lahf
enter
cli
mov
pop
out
add
cmp
test
pop
sub
jo
sbb
in
clc
mov
dec
add
pushf
aad
repz
outsl
push
lods
pop
mov
movsb
sub
mov
push
cmp
lods
dec
xor
or
je
push
push
lods
das
cli
mov
je
das
outsl
jcxz
add
aaa
mov
push
insl
adc
loopne
sar
cmp
xchg
push
repz
scas
mov
xor
lds
mov
push
pop
add
pop
xor
lahf
scas
mov
add
mov
sbb
nop
add
push
std
daa
fbstp
sahf
jne
and
stc
mov
sub
mov
jmp
jle
push
loope
iret
or
inc
out
icebp
add
xor
sub
mov
xchg
pop
inc
mov
adc
cmp
bound
xchg
xchg
je
fisubrl
mov
ds
xor
push
stc
mov
test
icebp
movnti
movsl
push
mov
and
lea
and
out
and
dec
jo
dec
std
adc
jns
jl
scas
push
cld
and
cmp
ret
cmp
ljmp
sub
je
jecxz
pop
pusha
push
sub
xchg
mov
lods
inc
dec
fldenv
sbb
loope
mov
push
dec
cmp
dec
sbb
push
push
dec
sbb
mov
ljmp
mov
ret
cmp
cmc
mov
xor
or
dec
mov
inc
mov
testl
pop
ss
push
ja
lcall
mov
pop
scas
stos
jg
cmp
push
stc
popa
push
pop
pop
push
jecxz
nop
adc
je
inc
xlat
call
add
xchg
adc
pop
dec
sbb
in
inc
mov
mov
repz
add
gs
stos
jae
movsb
and
push
pop
gs
dec
sbb
jb
mov
mov
and
ret
mov
pushf
cltd
mov
fstp
loope
or
xchg
rolb
jle
add
movsb
lahf
xor
jns
jmp
sub
sbb
test
pop
sarb
adc
testl
std
xor
sbb
jns
sub
cli
lea
jmp
mov
lahf
pop
pop
jne
xchg
ret
outsb
mov
pop
add
jp
jl
jne
push
adc
inc
cmp
div
pop
movsb
je
and
push
rol
xchg
pop
mov
testl
dec
add
cmp
inc
dec
push
cmp
fdivr
pop
mov
insb
jno
test
adc
mov
sbb
jae,pn
dec
in
mov
jp
fwait
and
incl
pop
mov
or
mov
or
adc
mov
test
pusha
js
xchg
cmp
pop
in
jns
in
jge
push
dec
sarl
in
add
stc
mov
sbb
jg
ds
jae
mov
jbe
mov
loop
aam
je
mov
sub
cmc
dec
bound
and
testb
out
clc
cmpsl
mov
sbb
mov
dec
ljmp
je
test
ret
add
je
sti
jo
sbb
je
dec
cltd
dec
sbb
out
sbb
cmp
sbb
push
and
pop
adc
sub
outsl
ss
in
ss
test
rcll
inc
out
fcmovne
pop
les
jne
ret
or
test
sub
testb
outsl
out
jne
push
jp
xor
mov
xor
inc
jns
xchg
aad
jne
dec
pop
mov
xor
sub
jge
xchg
insb
clc
mov
out
movsb
and
inc
aas
out
pop
scas
pop
adc
sbb
mov
xor
xor
les
repz
out
fimull
and
cs
dec
adc
arpl
jno
out
sub
lcall
dec
xchg
es
sti
nop
pop
loopne
dec
ss
xchg
jge
push
push
pop
aaa
ljmp
dec
inc
fstpt
sbb
jecxz
adc
sub
inc
jecxz
or
fwait
movsb
enter
fdivs
ret
fs
out
cmp
test
push
cmp
xor
or
pop
daa
xor
cmp
sbb
dec
repnz
nop
inc
negb
inc
cwtl
gs
inc
mov
xorl
mov
dec
sti
pop
mov
xchg
xor
or
pop
cmpl
testb
fmul
divb
jns
rcr
adc
cmp
gs
jmp
sbb
jle
scas
sub
jae
jecxz
fldl
inc
add
dec
shrl
inc
in
push
pop
push
xor
xor
rclb
aas
cmpsb
pop
cmp
xor
repnz
mov
test
dec
cmp
cmp
jl
cmp
test
dec
push
and
scas
js
movswl
out
and
xor
inc
xor
xchg
lret
sbb
pusha
fcmovne
in
pop
jne
imul
or
xor
xchg
std
dec
sbb
and
push
or
jno
test
inc
loope
repz
fwait
hlt
and
push
fbld
cmp
cmp
sub
call
dec
loope
cmp
add
push
loop
jl
sbb
iret
jne
decb
aas
xchg
scas
fistps
xlat
lds
call
outsl
xor
jl
mov
nop
les
ljmp
call
in
sub
mov
out
push
scas
push
sub
pop
sbb
pop
pop
jnp
dec
pop
jp
mov
js
outsl
or
mov
stos
fcoml
dec
dec
scas
cmp
inc
mov
push
out
xchg
and
xchg
sub
shrb
and
ficomps
jnp
inc
xchg
push
shlb
rorl
int3
fsubl
test
pop
lahf
mov
add
mov
push
sbb
shrl
sub
add
add
mov
cwtl
aam
dec
add
mov
or
adc
mov
xor
and
shlb
scas
loope
or
jb
dec
cmp
cmp
pop
mov
in
xchg
out
mov
bound
out
hlt
andb
aad
push
inc
popa
cmp
icebp
push
mov
sti
jbe
dec
repz
addr16
cmp
push
popa
popa
dec
fsubl
sub
pushf
add
xchg
dec
jmp
popa
xchg
inc
and
dec
daa
sbb
mov
ljmp
popa
femms
ret
cli
lret
xor
fistpll
jnp
sbb
mov
and
push
jns
pushf
adc
jecxz
adc
cltd
mov
xor
pop
jae
adc
xchg
and
push
jg
jne
call
lcall
lods
cmp
and
rol
push
dec
test
ret
mov
repz
test
xchg
xor
insl
mov
or
mov
push
or
sar
out
int3
xchg
into
xor
test
jmp
aaa
arpl
inc
xchg
sbb
and
xor
xchg
xchg
xor
sti
inc
xlat
je
sbb
sub
xor
mov
add
testb
addr16
push
or
rorb
dec
jmp
cmp
jp
cltd
xchg
jle
leave
sarl
jbe
sti
pop
icebp
cmp
loop
aas
push
shll
mov
fisttps
std
inc
lret
jo
fistps
fistl
imul
je
movsb
dec
push
sbb
mov
mov
popf
push
scas
sbb
outsl
and
and
leave
pop
sbb
pop
jns
mov
cmp
cmp
ja
pop
mov
lds
fcomip
push
pop
pop
jne
xchg
push
adc
fimuls
es
push
pop
outsb
mov
inc
in
int
sub
cmp
jnp
and
and
test
cmp
into
cmpl
icebp
cmp
out
addr16
mov
jae
dec
push
dec
mov
xchg
and
jnp
cmp
push
aas
inc
xchg
call
add
inc
rolb
dec
js
mov
and
or
sahf
cmpsl
decl
les
clc
mov
movsb
or
pop
mov
cmc
cmc
xchg
jg
jmp
or
into
or
push
push
ds
mov
xchg
ds
cwtl
into
bound
leave
loope
in
fsubr
imul
fistpl
popl
aaa
adc
add
aas
xchg
cwtl
insb
pop
xchg
mov
push
repz
xor
xchg
inc
dec
cmp
out
cmpsl
iret
xchg
stc
cmpl
add
mov
mov
push
adc
xchg
xor
cmp
fadds
arpl
xor
pop
pop
mov
push
mov
sarb
lahf
mov
jmp
int3
xorb
mov
insb
outsl
pop
mov
jae
push
fistl
pop
imul
xor
and
inc
ljmp
inc
or
inc
push
jle
lsl
movsl
pop
add
negb
stos
lock
pop
in
jno
stos
movzwl
maxps
jno
mov
lock
inc
js
push
mov
xchg
cltd
sbb
hlt
push
jecxz
das
fs
imul
lret
push
fldl
dec
cwtl
hlt
or
imul
add
xor
idivb
add
cli
inc
stos
pop
and
xchg
jbe
cmpsl
mov
sub
in
pop
test
xchg
imul
ljmp
sti
loope
push
xor
inc
sbb
lret
pushf
arpl
add
or
shlb
cmp
xor
in
pop
adc
int3
das
or
mov
jae
lret
xchg
ret
in
mov
aas
popl
pop
sbb
fistps
ds
decl
insl
xchg
nop
in
pop
dec
in
mov
pushf
pop
mov
fisttps
ret
test
inc
mov
call
jae
xchg
and
test
jp
roll
shlb
sbbl
fdivs
and
adc
stc
movswl
pop
test
dec
leave
mov
mov
pop
test
jo
ss
or
inc
imul
and
cli
aaa
or
jl
sbb
push
xchg
dec
test
ljmp
or
cmp
mov
jmp
adc
xchg
sarb
pop
mov
outsb
jg
js
fucomi
or
lods
sbb
push
je
push
mov
cltd
xchg
es
dec
add
fistl
arpl
scas
jbe
jo
insl
xor
adc
inc
cmpsb
cmp
pop
daa
xor
addr16
loope
push
aas
inc
fcoml
sub
je
xor
xlat
dec
leave
ja
into
pop
pop
mov
ljmp
aaa
xlat
lock
push
test
push
xor
and
cs
das
or
hlt
xor
aad
sub
stos
jns
test
sub
jmp
cmp
adc
jp
pushf
push
fs
std
mov
xchg
or
bound
es
daa
fildl
dec
fisttps
or
rolb
add
sub
adc
test
xorb
cmc
rorb
sbb
push
fisttpl
jo
into
jg
fdivrs
loope
mov
xchg
outsb
insl
and
imul
into
adc
xor
push
sub
in
mov
jb
add
aas
xchg
push
shl
shlb
into
xchg
out
pop
sarb
wbinvd
adc
sbb
pop
sahf
test
dec
mov
mov
out
loopne
shll
fwait
int3
mulb
mov
int
mov
notb
notb
xor
and
push
lahf
inc
movsl
in
mov
test
push
push
fwait
sbb
add
xlat
and
adc
cwtl
mov
dec
mov
xor
jmp
jo
xor
mov
popa
adc
orb
movsb
insb
daa
sbb
cmpsb
aas
test
and
cmp
xchg
fs
or
adc
dec
arpl
mov
sub
cwtl
pop
pop
inc
push
pop
das
add
sti
nop
mov
pop
jns
and
les
cmp
lret
nop
in
repnz
repnz
out
cltd
into
repz
bound
dec
daa
shlb
out
psubq
insb
ds
pop
sbb
pop
mov
inc
sahf
insl
mov
or
add
lahf
sbb
mov
xlat
mov
hlt
cld
cmpsl
test
sarl
xor
sub
test
push
fldcw
data16
imul
mov
sub
push
xor
ss
push
dec
and
cld
jg
cmpsl
adc
test
xor
inc
cmc
xor
idivb
stos
mov
or
dec
mov
jns
xor
enter
or
cli
xchg
inc
adc
xor
cwtl
aam
adc
jne
je
xorb
pop
sbb
mov
and
jbe
lret
mov
rcll
pop
mov
pop
repz
sbb
jo
rcl
mov
std
jmp
sub
dec
mov
call
ljmp
xor
in
call
movsb
add
or
nop
pop
addr16
cmp
or
repz
mov
jle
adc
das
ret
clc
mov
int3
push
pop
in
repz
into
xchg
dec
jmp
data16
mov
pusha
negl
sarb
test
mov
xor
adc
pop
mov
push
xchg
sub
jae
xor
ds
mov
iret
jmp
call
and
sbb
cli
xor
leave
ret
jmp
add
sub
dec
sti
xchg
ds
in
inc
cmpb
dec
sbb
outsl
sbbb
dec
sbb
stos
add
pop
cli
cmp
adc
js
inc
mov
leave
adc
rcrb
sub
sbb
pop
add
dec
loopne
jne
outsb
mov
cwtl
out
bound
inc
stos
popa
repz
loop
push
mov
push
xchg
sub
inc
sub
popf
pop
scas
cmp
inc
imulb
xor
aam
out
mov
sub
rol
insb
fnstcw
ja
nop
and
sbb
rol
cmp
and
cmc
xchg
ss
scas
in
pop
mov
ljmp
jno
fists
cmp
push
xchg
sub
ds
mov
rolb
sub
and
movb
xchg
cld
out
nop
rclb
nop
mov
popf
shlb
adc
subl
push
bound
inc
pop
repnz
xor
jmp
dec
sbb
stc
pusha
in
sub
dec
jmp
das
sub
repz
sub
mov
cmp
mov
mov
sti
cmpsb
dec
and
ficoms
ret
mov
inc
and
lret
out
mov
imul
mov
into
call
jae
cmp
push
std
dec
cltd
scas
jge
imul
stos
sbb
xor
mov
pop
xor
fisubrs
pop
mov
ja
arpl
iret
dec
lcall
mov
cwtl
dec
mov
add
sahf
push
test
imul
and
int
push
hlt
test
sub
add
repz
js
xor
inc
out
sbb
ja
fistps
inc
cmp
nop
repnz
out
mov
int
stos
sahf
popf
fs
sub
add
insl
shlb
or
out
sub
call
idivb
fsubrs
test
fimull
inc
mov
and
scas
fnsave
or
shl
or
xchg
fisubl
sbb
in
jnp
imul
mov
mov
test
pop
and
adc
xchg
sbb
sahf
sub
rclb
enter
test
xor
adc
mov
add
fisttpl
orl
sbb
addb
cmp
daa
es
sbb
dec
js
iret
iret
aam
jge
cmp
sbb
jl
movsb
push
cli
add
mov
xor
cwtl
in
cltd
mov
das
adc
fwait
or
out
mov
jmp
sub
xor
pop
fsts
mov
xor
xchg
arpl
repz
pop
xchg
out
jno
sbb
cli
test
popf
rcr
dec
ja
mov
cmp
inc
bound
lret
pop
xchg
out
push
push
adc
or
adc
adc
mov
add
pusha
dec
mov
les
mov
repnz
fimull
daa
mov
ficompl
lock
jns
pop
pop
mov
lcall
out
pusha
inc
cld
ja
call
lods
mov
cmc
pop
mov
cmp
sarb
inc
sbb
aas
sub
sahf
inc
jbe
imul
push
pop
aaa
mov
and
neg
mov
jae
cmpl
ljmp
stc
outsl
inc
sbb
xchg
push
clc
movsl
push
ficomps
cmp
adc
lret
std
popf
push
outsl
fst
jno
aad
adc
pop
movsb
sbb
es
jnp
mov
mov
dec
cmp
cs
dec
mov
sub
ja
ficoms
push
push
ljmp
dec
cld
lret
sub
leave
shll
rol
in
sbb
dec
outsl
xchg
dec
cmp
lds
inc
movsbl
and
mov
aam
adc
jecxz
mov
and
out
jnp
or
push
or
push
ljmp
addr16
mov
jbe
mov
and
test
in
adc
imul
mov
fwait
push
data16
lods
fwait
add
test
add
adc
xor
mov
pop
push
iret
jae
mov
pavgb
mov
cmc
mov
inc
jge
jmp
xchg
iret
jae
mov
test
adc
cmp
mov
xchg
dec
push
jne
sti
xchg
or
xor
andb
jge
fbld
sbb
lods
lds
mov
pusha
test
ficoms
lret
mov
sbbl
sbb
dec
and
sub
inc
xchg
ret
ss
cmp
or
jno
sbb
arpl
std
mov
jo
mov
repz
outsl
rcrb
scas
fisttpl
sub
enter
pop
ja
push
or
push
lahf
add
push
add
mov
sbb
add
fistl
mov
adc
jle
gs
call
shrl
sbb
dec
xchg
lea
pop
negb
fstcw
mov
add
adc
jecxz
mov
rcll
inc
sti
aad
imul
sub
cmp
jno
xor
adc
cwtl
adc
xchg
jl
mov
cmp
and
call
stos
lea
mov
sahf
stc
lret
ds
xor
dec
pop
js
vpunpckhwd
xchg
stos
rcrb
lret
in
cmpsl
sub
sbb
rol
push
cmp
das
cs
mov
push
loopne
lret
push
shrb
mov
sbb
fiadds
mov
cmp
and
and
or
cmc
out
aad
clc
scas
gs
cwtl
cld
insb
insl
dec
sbbl
lea
xchg
psraw
pop
nop
loopne
divl
push
mov
fisubrl
aam
fisubrl
mov
and
cmp
inc
jl
ss
mov
js
mov
push
test
sbb
test
arpl
pop
mov
inc
scas
xchg
and
shlb
arpl
mov
fcomps
out
mov
jl
shrl
push
mov
cli
inc
push
sub
adc
pushf
and
adc
jb
jne
into
pop
daa
hlt
push
dec
lods
ficoml
jno
pop
add
pop
sti
insl
mov
inc
jae
adc
cli
sub
lret
cmp
jmp
xor
fnstenv
and
mov
inc
imul
inc
or
hlt
ljmp
sbb
jl
imul
cmpsb
jnp
mov
test
push
cld
scas
hlt
sahf
sub
push
popa
pusha
jne
push
xor
push
ljmp
aas
cmp
jbe
out
or
xlat
xchg
stos
mov
push
mov
mov
mov
out
shlb
js
in
sbb
mov
xlat
xchg
or
cmp
xlat
cmp
test
aam
and
pop
sbb
aaa
insl
neg
lds
sbb
xchg
jo
inc
ds
iret
adc
in
rorl
and
xor
inc
movsb
jl
dec
leave
ljmp
sub
bound
fstps
scas
lret
iret
fisubrs
xor
aam
jo
jbe
xor
ret
movsl
adc
xor
jnp
sub
xchg
iret
mov
pop
insb
push
rolb
cmp
cmpl
stos
lds
loop
mov
mov
cwtl
jnp
dec
rorb
adc
test
loopne
xor
mov
xchg
dec
std
xor
dec
fcompl
or
cmp
sbb
cmp
cmp
add
rorl
dec
nopl
pop
fnstcw
xor
out
sbb
test
out
fs
je
mov
xchg
test
in
inc
adc
jns
dec
insl
cwtl
push
jp
dec
cli
jmp
rorb
cwtl
xchg
mov
call
mov
pop
sti
add
bswap
aaa
ret
pop
push
out
imulb
pop
insb
cmc
js
push
aas
enter
outsb
adc
inc
dec
xlat
mov
sub
mov
sbb
sub
js
icebp
popf
xlat
jecxz
adc
shr
xlat
mov
inc
xor
mov
popa
jno
insb
mov
xchg
cmp
cmpsl
push
xor
or
xchg
pop
mov
loopne
and
jns
inc
ss
xlat
cli
mov
loop
and
xor
sbb
outsb
adcl
hlt
testb
mov
ffree
popf
jecxz
jae
push
icebp
mov
mov
pop
sub
cmp
push
mov
or
test
repnz
and
xlat
jge
or
pop
jmp
jae
mov
mov
inc
or
cmp
gs
sub
gs
fdivrs
push
lahf
setne
sub
test
dec
jp
pop
mov
lahf
xor
add
insb
mov
fnstenv
cli
test
jle
inc
pop
pop
gs
jbe
inc
movsl
movsb
aad
xor
mov
fwait
aam
pop
in
cmp
fnstcw
or
xchg
mov
inc
repnz
je
jo
sbb
movsl
das
sbb
xor
pop
push
jle
cld
mov
xchg
sbb
ficomps
mulb
lea
ret
adc
js
into
mul
outsl
sbb
and
inc
dec
mov
dec
cwtl
out
cmp
cwtl
mov
pop
xchg
xchg
xor
data16
mov
std
and
push
jp
je
xchg
icebp
pop
lock
pop
loopne
mov
cmp
jo
dec
jp
ja
aaa
xchg
sbb
mov
pop
inc
jnp
and
fimuls
lods
movsl
push
lock
negb
inc
cltd
lock
aas
gs
insl
cmpsl
fistl
mov
xchg
xor
jno
push
dec
addr16
stos
aaa
mov
fwait
and
jg
jge
jbe
mov
and
arpl
push
add
js
clc
out
icebp
shl
xchg
ret
call
cwtl
aam
or
gs
cmpsb
ret
sbb
sarl
mov
mov
in
xchg
xor
test
xlat
js
cld
mov
mov
es
popa
xor
fstps
pop
fs
lods
pop
push
cmp
add
sbb
hlt
xchg
mov
fstpl
mov
cwtl
pop
ja
xor
xchg
les
and
mov
fistpl
ljmp
dec
cmp
scas
pop
lahf
aas
mulb
fmuls
jb
and
lock
roll
mov
xchg
pop
mov
rol
dec
add
or
xchg
stos
sahf
pop
addr16
ja
in
dec
xor
arpl
subb
add
jae
sbb
xchg
sub
fwait
jns
and
mov
mov
addr16
dec
fcompl
mov
inc
test
jae
ljmp
fwait
xchg
jnp
sbb
xchg
mov
pcmpgtw
outsl
dec
insb
xor
sbb
popf
xchg
dec
ljmp
jae
sbb
adcb
inc
out
cltd
lcall
andl
psllq
mov
cs
or
out
sbb
daa
push
rcrl
in
mov
mov
xor
hlt
ja
cmc
ja
lahf
subb
rcr
arpl
xchg
mov
movq
xor
mov
pop
lahf
fimuls
xchg
fprem
sub
loope
punpcklwd
push
push
dec
xor
jae
sbb
scas
mov
cmpsb
adc
xchg
daa
xor
popf
sbb
cld
ret
jl
adc
mov
add
sbb
or
dec
xchg
push
int
or
adc
xchg
xor
lea
cmp
rorl
sub
mov
jb
fs
insb
adc
out
loope
andb
xor
out
push
push
repz
cmp
shrb
sbb
cmp
pop
cmp
xchg
mov
xchg
fwait
mov
fwait
divl
mov
adc
push
scas
push
mov
add
out
ljmp
and
xor
ds
push
push
cs
insb
roll
lahf
test
sub
push
test
imul
clc
xchg
daa
add
mov
bound
cld
sbb
xor
sbb
pop
les
ss
shlb
push
mov
jle
sub
nop
or
roll
shlb
lret
xchg
xchg
std
cmp
lcall
js
lea
xchg
pop
cmp
jns
mov
into
or
mov
daa
fnsave
cli
jmp
xor
hlt
sbb
sbb
je
jo
cwtl
push
xchg
fistpll
fdivrp
out
aas
and
sti
mov
push
dec
outsl
daa
push
or
push
dec
adc
jnp
cmp
cmpsb
mov
neg
pop
mov
adc
lret
mov
loope
inc
cli
mov
imul
out
jecxz
dec
rorb
clc
mov
sub
sub
gs
inc
xchg
xor
xchg
xchg
adc
mov
out
cmp
xchg
insb
rorl
pop
mov
aad
jbe
fisttps
out
push
cmp
sub
incl
int
mov
and
push
lods
outsl
push
mov
mov
mov
sbb
icebp
addr16
test
inc
cli
add
das
push
pop
js
aaa
cwtl
int
adc
mov
movsl
dec
test
cld
mov
cmp
repz
mov
outsl
cld
mov
dec
cltd
call
cmp
loope
in
aaa
sti
addr16
push
movsb
loop
in
imul
and
lods
sub
shll
outsb
sbb
insb
repnz
and
out
js
push
push
cli
inc
push
fldt
call
pop
pop
mov
jp
cli
dec
or
in
push
adc
cld
cs
pop
js
mov
xchg
cmc
cld
or
fidivrl
cs
or
sub
or
loope
loope
testb
gs
scas
sub
clc
xchg
negb
iret
add
gs
jno
insl
mov
jmp
call
rcl
test
and
pop
jge
fwait
cmp
xchg
int
mov
ret
jnp
jge
xchg
incl
and
dec
gs
movsb
in
mov
xor
gs
ds
aas
outsb
mov
test
xchg
push
gs
mov
lods
mov
adc
je
jmp
aas
scas
xor
mov
imul
mov
mov
rclb
jnp
xlat
jl
cld
lahf
sti
iret
negb
and
and
dec
and
cmp
cmp
pushf
sti
dec
mov
rcrl
jg
or
loop
mov
pushf
dec
add
aad
and
jo
mov
shl
fnstenv
popf
loop
sti
add
cltd
sub
or
adc
int3
pusha
scas
cmpl
int
hlt
mov
and
out
test
andl
push
fwait
sbb
mov
dec
adc
push
fcoms
enter
fldl
xor
xor
sbb
js
jge
cmp
inc
add
jg
enter
jl
iret
adc
push
dec
rolb
push
pop
jae
fcoml
inc
xor
mov
inc
arpl
mov
mull
mov
xor
mov
mov
mov
lods
mov
jns
aam
jmp
mov
and
dec
fwait
pusha
mov
xor
jge
mov
adc
data16
add
hlt
add
imul
cmp
dec
adc
pop
sbb
jnp
das
loopne
outsl
inc
inc
out
adc
stc
out
lods
pop
pop
cmp
xor
sub
mov
fnop
fistpl
lahf
andl
addr16
adc
pop
scas
lds
fmull
push
imul
push
mov
sbb
inc
test
das
cmpsb
and
mov
outsl
test
mov
into
mov
sahf
lods
or
push
mov
cmp
imul
mov
and
cmp
in
aad
pusha
out
ret
inc
shr
pusha
shll
sub
adc
add
xor
das
ja
push
jbe
pop
push
aad
add
add
mov
mov
cmc
add
push
pop
repnz
jb
js
jnp
and
orb
sti
xor
adc
lret
add
in
shll
dec
cmp
dec
xor
leave
jecxz
push
push
and
sub
lret
aam
mov
mov
mov
rorb
les
addl
push
adc
jns
cmpsb
aad
push
push
imul
push
jp
rcr
adc
xchg
inc
je
aam
push
sub
int3
push
xor
inc
add
popf
xchg
add
push
xchg
push
pop
adc
mov
xchg
push
and
stc
nop
jmp
mov
cs
out
scas
sub
inc
into
jae
mov
addr16
in
or
inc
frstor
mov
mov
push
test
loopne
jecxz
lahf
das
aas
test
sbb
shlb
xor
xor
or
bound
mov
xor
jge
mov
mov
aam
icebp
icebp
xchg
xor
push
sub
push
jno
std
loopne
cmp
fbld
ds
repnz
xchg
mov
dec
jg
lcall
mov
push
out
pop
or
lds
add
dec
cli
jle
and
xor
mov
inc
ja
inc
cmc
mov
dec
cmp
xor
or
ss
test
and
cmpsl
mov
cltd
jecxz
jo
xor
cmp
nop
sarb
hlt
adc
cmp
neg
jecxz
sti
cwtl
loopne
add
pushf
add
inc
push
lock
adc
inc
xchg
pop
adc
mov
xchg
inc
icebp
fwait
or
scas
or
xor
jg
int
xchg
aam
out
and
pop
pop
cld
xchg
dec
f2xm1
push
inc
popf
adc
mov
pop
cmp
sar
std
or
mov
insb
jecxz
jae
mov
sbb
push
mull
xor
test
dec
in
push
movsl
adc
rcrl
xchg
push
mov
in
and
xchg
sbb
arpl
push
and
frstors
shrb
pop
or
mov
mov
shrb
mov
push
or
xlat
xchg
adc
or
and
inc
adc
scas
cmp
pop
in
cmp
repz
jne
daa
jl
je
jns
dec
incl
int3
ret
aam
add
xlat
and
fwait
pop
mov
fbstp
mov
jp
cmp
loop
mov
fidivl
fsts
mov
jae,pt
fsubrl
mov
xchg
dec
int
jmp
xchg
sub
jle
mov
dec
pop
mov
push
dec
add
xchg
sub
and
mov
int3
sub
dec
xor
fimuls
or
int3
cmp
jle
inc
les
lods
add
pop
lock
push
or
dec
add
or
sub
jl
scas
pop
aaa
rclb
adc
lods
push
shlb
fwait
jae
mov
stos
daa
mov
movsl
leave
mov
nop
rcl
xchg
mov
push
pop
cmp
xlat
or
enter
and
loopne
shll
push
push
mov
adc
test
push
cmp
cmp
fwait
xor
adc
int3
mov
insb
ss
rcll
sti
push
call
push
fimuls
lahf
xorl
int
mov
xchg
add
fnstsw
call
fcom
inc
cmpsl
push
add
sbb
rolb
dec
mov
incl
xor
push
mov
sbb
fs
sahf
inc
and
nop
mov
xchg
dec
add
push
push
jns
jb
jo
sbb
cmp
in
and
dec
lods
pop
pop
ljmp
push
ds
sahf
imul
mov
cmc
pop
and
test
push
xlat
insb
std
jbe
incb
pushf
lock
jg
mov
mov
data16
mulb
xlat
testl
push
lea
daa
cmpsl
mov
in
cmp
lret
adc
mov
xchg
icebp
mov
pop
je
sti
ljmp
call
dec
xchg
push
xor
cmpsl
push
or
clc
add
or
lock
adc
jns
int
push
pop
sub
lcall
decl
inc
std
add
outsl
cmp
and
mov
repz
and
nop
jmp
ds
shrl
mov
sbb
adc
pop
cmpb
jne
je
xchg
adc
cmp
mulb
js
add
mov
in
pop
push
mov
dec
ret
pop
enter
addl
xchg
jnp
movsl
test
daa
lea
pusha
lock
cmp
fdivl
insb
pop
mov
movsb
add
les
fcmovnbe
sbb
cmp
dec
xchg
add
pop
sub
dec
mov
adc
sbbb
pop
shlb
test
daa
pop
sub
or
mov
push
sbb
gs
mov
dec
sti
xor
add
sahf
cmp
pop
inc
mov
and
ljmp
pop
push
aaa
inc
add
cld
loopne
xor
stos
or
shlb
aas
pop
repz
nop
adc
jae
cmp
and
cmpsl
mov
lea
inc
xchg
pop
xor
or
pop
test
lock
into
and
ja
insb
inc
cmp
ret
insb
adc
nop
les
pop
imul
fs
es
andl
push
mov
repz
enter
mov
call
cmpsl
arpl
test
clc
pop
loop
mov
xchg
mov
cmp
mov
jmp
mov
das
fnsave
sbb
sub
movsl
jae
push
mov
add
fidivl
outsl
sbb
cmpsl
mov
psllq
mov
js
out
xor
pop
push
push
or
xchg
int
daa
or
fidivrs
scas
xor
mov
mov
xchg
pop
out
xchg
adc
adc
xor
insb
or
pop
mov
mov
push
xor
push
call
movsb
or
sbb
push
dec
dec
or
jmp
add
xor
pop
iret
add
jae
mov
insb
or
pop
push
jg
adc
lds
adc
adc
movsl
pop
cmp
movsb
inc
fwait
push
push
lods
aaa
dec
or
xor
test
and
xchg
mov
adc
dec
jne
std
sbbb
mov
loope
js
pop
aad
pop
in
lret
dec
jmp
sbb
inc
push
jecxz
xor
dec
dec
or
and
out
jg
clc
aaa
stos
pop
adc
mov
add
xchg
test
pop
mov
sub
jg
pop
ret
cmpsl
out
fisubl
imul
repz
jb
inc
xorl
push
jbe
inc
cmpsb
in
ljmp
iret
je
mov
repnz
arpl
test
jmp
xor
sbb
pop
sbbb
mov
sub
cmp
push
jbe
xor
mov
pop
sbb
les
push
pop
lock
repz
out
dec
shl
mov
push
aaa
pop
push
int
mull
mov
in
xchg
into
clc
loop
fstl
iret
push
cmp
mov
adc
cmpsl
jp
pop
nop
inc
stos
push
les
sub
jae
push
add
loope
mov
push
stos
loop
sbb
mov
pop
sub
add
dec
pushl
in
jbe
push
push
and
stc
cmp
dec
out
or
enter
aas
rorb
sahf
inc
int3
nop
jmp
jl
sub
aam
in
pop
mov
hlt
lret
fimull
sbb
std
fdivl
jl
xchg
pop
mov
lds
or
lds
mov
jae
sarb
fbld
hlt
int3
adc
jbe
into
pop
lahf
adc
dec
push
divl
jl
mov
sbb
and
jmp
fwait
cbtw
lcall
xor
sbb
push
inc
int3
lods
jecxz
bound
inc
shl
ss
cmp
aas
iret
dec
cltd
mov
mov
bound
mov
inc
mov
mov
jmp
andl
fldt
aaa
test
fs
mov
repz
into
sar
jge
cld
cli
mov
outsb
pusha
dec
jb
adc
mov
inc
push
clc
stc
mov
subb
pop
adc
push
dec
popf
outsb
div
sub
xchg
xor
cmpsb
aam
lahf
jg
dec
jb
aas
push
rorb
leave
push
inc
xchg
shlb
daa
mov
cmp
push
xlat
ljmp
pushf
mov
xor
xor
and
push
scas
insl
pop
jae
or
test
adc
arpl
cmp
add
dec
sarl
xor
sbb
sbb
ds
icebp
clc
and
cmp
aad
rorl
pusha
inc
dec
iret
xor
lcall
and
pop
fnstcw
ljmp
iret
mov
xlat
mov
aaa
sub
cmpsl
idivl
and
sub
xchg
sub
movl
adcl
mov
call
or
loop
add
jge
pop
pop
out
negl
nop
bound
xchg
stos
or
xor
push
das
xchg
hlt
addr16
inc
lea
adc
xchg
fisubrs
sbb
push
jg
cmp
pusha
mov
mov
int
addr16
inc
jge
fcoml
pop
adc
daa
mov
dec
psubsb
jmp
and
mov
icebp
pop
mov
mov
mov
mov
jp
push
and
mov
shrb
xchg
aaa
sub
sbb
dec
push
lods
or
and
add
arpl
add
cmc
mov
jl
dec
xlat
sub
aas
inc
push
mov
push
hlt
stos
xor
sub
sbb
fs
es
shl
call
xlat
outsl
int
int3
sahf
dec
push
xor
add
cmc
pop
xlat
add
lahf
cmp
sub
add
movsb
shll
shlb
lock
inc
aas
push
int
mov
push
push
test
xchg
pop
insl
xor
xchg
xchg
mov
xor
jmp
jae
push
ds
pop
ret
pop
nop
in
sbb
jb
pop
xor
imulb
lock
sbb
pop
inc
adc
subl
rolb
loope
jecxz
mov
mov
mov
mov
xorl
in
iret
les
testb
xchg
or
fs
jo
sbbl
mov
pop
dec
mov
add
xchg
mov
loope
stos
inc
pop
sahf
inc
cmp
jbe
xchg
int3
fimuls
mov
inc
lret
js
int3
rcrl
sarl
test
ds
sub
cwtl
movb
adc
push
adcb
cmp
pop
cmp
pusha
push
jbe
jecxz
mov
mov
lea
jge
addl
fs
xor
or
out
fstpt
shl
mov
mov
in
jo
rcrl
lea
xorb
mov
jb
xchg
sti
xchg
cmp
jbe
adc
std
pop
out
sbb
lcall
ss
mov
xor
sub
mov
xchg
xchg
mov
rclb
add
call
cmp
xchg
cmp
mov
add
fldl
sub
out
rcrl
jns
out
sbb
in
xchg
mov
imul
pushf
ds
cwtl
cwtl
fildl
add
push
negl
sahf
daa
adcl
inc
inc
adc
xor
fwait
std
and
inc
xchg
ljmp
add
inc
inc
fsts
aam
mov
pop
mov
jbe
and
adc
push
cmp
xchg
dec
in
sub
cwtl
das
pop
pop
adc
mov
mov
pop
jmp
push
add
fs
test
xchg
jne
or
mov
push
pop
or
mov
dec
dec
scas
and
adc
movsb
out
pushf
jbe
jo
xor
jecxz
xchg
pop
lods
push
call
mov
leave
pop
sub
test
mov
ljmp
leave
push
push
ljmp
sbb
pop
out
add
fldcw
inc
and
imul
faddp
inc
add
mov
inc
ret
dec
dec
or
adc
mov
or
dec
pop
js
and
leave
dec
adc
fcoml
jns
out
add
pop
sahf
inc
mov
sub
inc
push
pop
or
xor
adc
push
sub
or
enter
sbb
andl
xor
or
movsb
test
dec
bound
sub
popf
sub
adc
xchg
in
cli
popf
sub
fisttpll
leave
jno
or
enter
jb
out
push
loopnew
fwait
push
xor
enter
cs
push
sarb
add
rol
fistl
shrl
inc
rcrb
cmpsb
pop
insb
and
mov
sbb
fs
cmp
aas
enter
inc
cli
ficompl
push
clc
sbb
and
cmp
hlt
sub
scas
push
push
fcomi
inc
imul
jno
cmpsl
mov
dec
rorl
rcrl
frstor
push
cmp
jg
pushf
nop
pop
sahf
dec
outsw
imull
rcl
test
test
and
sbb
sbb
push
inc
inc
push
mov
dec
mov
nop
add
arpl
mov
cmp
mov
aaa
fsubr
cmp
je
dec
lods
adc
adc
jg
inc
mov
fwait
cmp
int
je
pop
in
sbb
lret
push
icebp
adc
test
mov
imul
dec
les
jno
mov
mov
sbb
pusha
les
or
fistpl
xor
dec
sbb
mov
fldt
ja
mov
jg
xor
inc
jb
or
sbb
cmp
adc
out
pop
hlt
insb
lret
insl
cmp
fcmovnb
dec
mov
mov
das
clc
jge
gs
fcompl
push
inc
mov
push
imul
dec
cmp
imul
dec
das
xchg
data16
sub
ljmp
test
leave
loop
or
dec
add
cmp
jl
int
or
pop
pop
shl
ljmp
add
andl
popf
stos
jnp
sub
push
xchg
das
mov
jno
mov
lahf
in
xlat
fwait
cmpb
loop
adc
push
je
ret
std
xchg
movsl
mov
mov
xor
lret
xlat
sub
jl
push
jle
push
mov
testl
pop
xchg
call
loope
xchg
pop
fcmovb
xchg
nop
and
push
jg
cli
cltd
pop
inc
das
push
and
test
in
or
xor
test
sahf
stos
mov
cltd
ja
sbb
push
mov
js
xchg
sub
sbb
aaa
lret
jno
scas
push
pop
cltd
sub
pushf
xchg
sub
xchg
pop
xchg
jne
iret
pop
add
insb
decb
lods
jno
sub
jl
lret
mov
inc
and
push
inc
pusha
sbb
int3
pop
push
xor
dec
pop
cmp
daa
pop
sbb
loop
lsl
xor
cmpsl
fwait
xchg
dec
push
add
dec
iret
add
cmp
mov
repz
inc
xchg
xchg
dec
xor
sub
jecxz
jbe
mov
and
sub
cwtl
jb
hlt
xor
jbe
and
jl
inc
dec
clc
scas
sbb
pop
inc
mov
dec
xchg
adc
in
or
cwtl
roll
jecxz
sub
mov
lods
xchg
jae
js
lahf
outsb
mov
int3
std
xchg
push
fists
aaa
mov
fcomps
in
push
or
jle
mov
dec
dec
dec
cmpl
fstpl
or
popa
ja
fdivrs
mov
add
push
add
xchg
xor
pop
aas
rclb
pop
fwait
shrb
aaa
pop
scas
and
scas
inc
testl
mov
lock
js
aas
test
cli
sub
push
adc
rcrb
js
add
mov
xchg
push
jns
pop
fistpll
xchg
and
mov
xor
orb
and
push
mov
mov
movsb
xor
inc
add
insb
xchg
pop
jle
sub
adc
and
das
mov
sbb
es
adc
dec
cltd
outsl
xchg
pop
in
dec
inc
fcom
fdiv
sbbl
call
out
mov
adc
cmpsl
xchg
cli
push
decb
bound
pop
sbb
xchg
dec
arpl
loop
cwtl
dec
orb
fildl
pop
scas
rcr
mov
nop
dec
push
vsubps
pop
addb
mov
rcr
int3
adcb
jge
xor
inc
pop
cmp
add
mov
xor
les
in
and
aaa
adc
push
mov
mov
fwait
mov
xor
loopne
inc
mov
inc
dec
or
cs
push
lret
dec
push
pusha
repz
add
sahf
pop
xchg
xor
inc
dec
je
out
adc
imull
outsl
dec
dec
outsl
sarb
fsubp
rclb
or
ret
fcoml
shlb
enter
cmp
pop
jecxz
cmp
int3
loop
bound
xor
aam
jns
int
xchg
cmp
mov
and
push
cmp
jnp
mov
daa
and
jae
shr
push
test
pop
cmp
pop
or
cmp
cli
out
mov
pushf
xchg
lret
repnz
inc
lds
xchg
add
subl
insl
sti
ret
out
mov
js
or
push
lods
sbb
add
pop
dec
dec
mov
push
aaa
cmp
or
push
xor
scas
push
xor
out
push
ds
jge
cmp
xor
out
shr
aaa
nop
lcall
enter
pop
adc
inc
ds
rorl
jae
jb
rorb
ja
arpl
inc
lret
inc
pop
sub
push
jle
sub
ljmp
mov
push
mov
dec
shlb
jb
or
stos
push
pushf
push
push
xor
jl
add
dec
pusha
divl
stos
xor
iret
dec
mov
mov
push
aad
sbb
xor
repnz
ds
shll
xchg
mov
xchg
add
clc
mov
mov
mov
movsb
mov
jmp
mov
xchg
mov
in
decb
pushf
popf
cmp
and
xor
orb
jge
ss
cwtl
stos
fwait
cmp
scas
dec
fcmovnbe
mov
pop
inc
daa
push
add
addb
mov
movsl
clc
pop
sub
addr16
adc
jns
pop
pop
jae
jp
cmp
ja
gs
inc
cmova
jae
push
popf
jle
pushf
into
subl
les
loopne
mov
scas
imul
lock
loopne
add
mov
push
push
gs
add
das
adc
cmp
jle
xlat
ss
icebp
sbb
mov
xlat
aaa
add
out
lods
sub
inc
sbb
jmp
xorl
or
mov
push
enter
cwtl
jno
rorl
js
jo
fisttpl
into
es
repz
loop
push
daa
xchg
into
mov
add
xchg
dec
push
int3
mov
adc
aam
negb
inc
lea
cmp
sti
popf
and
lea
lret
pop
add
fs
cmp
mov
sbb
mov
mov
jb
daa
mov
xlat
add
mov
jb
shll
sbb
adcl
add
bound
outsb
insl
and
addr16
ljmp
xlat
add
fwait
cwtl
push
mov
add
incb
je
lea
cmp
or
push
inc
push
jecxz
orb
jmp
rolb
mov
ret
cwtl
jb
loopne
dec
stos
jne
mov
in
in
pushf
jbe
sbb
pusha
xchg
push
sub
or
push
fldl
mov
incl
mov
mov
sbb
fs
out
adc
dec
insl
leave
mov
pusha
xchg
rcll
inc
sbb
sbb
in
pusha
in
fwait
es
mov
pop
jno
xor
mov
sbb
adc
push
push
jl
mov
jnp
in
aaa
int3
enter
fbld
push
push
insl
xor
or
jp
and
push
sub
mov
pop
into
jno
lds
add
ljmp
jae
jno
nop
mov
or
pop
fdivrs
outsb
jae
push
cmp
mov
movsb
movsb
aas
pop
imul
in
stos
cmp
lea
cli
jmp
ret
imul
cmp
sub
ljmp
das
cli
mov
mov
aam
push
mov
fwait
cmp
jnp
pop
cmp
dec
dec
or
rol
sub
fs
loop
cmp
fcompl
pushf
mov
mov
dec
add
rorl
mov
push
push
notb
pop
cld
xlat
divl
arpl
pushw
nop
mov
and
jg
add
outsb
les
loope
lea
push
pop
dec
push
fistpl
mov
les
repz
insl
int3
fucomi
ja
jnp
and
out
scas
repnz
mov
hlt
lret
pop
jne
and
sbb
ficoml
dec
pop
nop
movsb
lods
add
xchg
xchg
cvttps2pi
loopne
lds
xchg
add
es
fildl
inc
sbb
loope
fsub
mov
mov
aad
inc
and
fmull
nop
pusha
scas
out
add
push
add
pop
cmp
pop
lock
jge
pop
mov
mov
jb
mov
adc
mulb
in
mov
cmpl
xlat
mov
aam
movsb
dec
decb
and
inc
adc
sbb
add
insb
pop
es
pop
orl
pop
dec
xlat
xor
fdivrs
add
lods
stc
dec
fwait
jno
mov
pop
and
jecxz
or
mov
divl
jle
mov
roll
jmp
mov
mov
test
test
iret
pop
inc
xchg
push
cmp
push
jg
jl
in
outsl
daa
ret
enter
inc
jp
adc
push
and
rcrb
cs
lock
daa
sbb
pop
adc
rorb
cmp
mov
xchg
sub
ret
popa
xchg
popf
out
inc
mov
int3
popf
pop
sahf
test
push
xchg
jbe
mov
add
das
pop
int3
inc
cmp
fbstp
mov
jle
mov
or
push
mov
leave
pop
jg
les
call
jae
push
pop
outsl
cmp
jo
inc
push
pop
xchg
cmpsl
push
popa
fwait
pop
mov
push
mov
std
push
or
jp
lcall
or
or
fcoml
adc
adc
sbb
js
cltd
mov
or
shll
ret
shlb
sub
ss
sub
or
or
insl
or
movsb
push
mov
or
dec
leave
cmc
icebp
mov
xor
jne
shll
pop
fists
movsb
stos
cli
and
inc
in
and
ret
push
cwtl
cmp
cmp
sub
notl
sub
adc
cld
mov
fdivrl
xchg
pop
lahf
cmp
push
and
lcall
sub
mov
and
stos
lahf
insb
lds
ret
test
loopne
mov
sbb
inc
mov
xlat
jmp
test
add
mov
cmp
ret
mov
outsb
lret
pop
dec
push
ja
sbb
cmp
imul
out
sbb
mov
rcl
popf
xor
xor
mov
inc
imul
mov
in
out
and
in
xchg
ja
cmp
or
pop
leave
jmp
ret
es
pop
sub
mov
adc
mov
popf
push
fwait
sbb
pusha
stos
pop
mov
sbb
sub
push
rep
push
mov
xchg
xor
pop
mov
icebp
into
sbb
rcrb
pushf
divl
jae,pt
lret
inc
int
test
xor
push
out
xor
dec
sbb
repz
psubusb
sub
sbb
in
lea
xchg
fistpll
add
sti
sub
lods
and
jns
aaa
rcrb
int3
jge
or
mov
xlat
ja
push
push
jns
test
test
aam
cmp
and
imul
jmp
inc
stos
xchg
out
adc
jns
and
mov
adc
adc
push
leave
int3
cmp
and
stc
loopne
inc
iret
xchg
xor
hlt
lret
iret
jge
shrb
cmp
mov
pop
dec
mov
xchg
dec
dec
aas
inc
inc
das
std
or
sub
icebp
and
jle
jecxz
test
dec
movsl
sbbb
dec
adc
fistpl
dec
stos
in
cmpsl
scas
das
mov
lds
jns
dec
icebp
cmp
dec
mov
inc
ret
rol
out
rcll
jmp
bound
data16
xor
pop
mov
shlb
add
test
outsl
sub
sarl
insb
mov
aas
adc
push
dec
into
std
mov
gs
popa
arpl
ret
cmp
or
cmp
mov
loop
push
fnsave
jb
inc
push
xchg
inc
jp
push
lods
jle
dec
pusha
mov
xor
xlat
inc
icebp
jp
hlt
outsb
inc
mov
xor
idivl
xchg
movsb
cld
lahf
fucom
push
push
shrb
and
push
pop
push
mov
cmc
xchg
and
jae
adc
out
mov
in
not
xchg
add
flds
cmp
rorl
pop
or
pop
jae
les
in
dec
mov
push
cwtl
movsl
push
push
adc
repnz
push
jbe
fwait
addb
add
inc
out
mov
fs
sub
mov
push
inc
cld
movsb
push
jnp
mov
mov
clc
insb
and
xchg
pop
dec
sbb
jmp
inc
fcoml
xor
sti
jb
das
pop
mov
lahf
into
les
sahf
sbb
push
add
add
hlt
push
xor
loopne
mov
mov
das
je
out
adc
lret
das
repz
lret
shll
lods
mov
jo
iret
xchg
popf
jecxz,pt
pop
lahf
scas
repz
mov
pop
mov
sbb
jbe
pop
xchg
cwtl
arpl
in
jo
add
pop
xchg
jb
int3
pop
sub
sahf
add
push
sbb
and
inc
push
push
mov
lods
jne
int3
arpl
fidivl
nop
loope,pn
and
stc
ljmp
sbb
loope
xchg
in
fwait
test
or
dec
push
sbb
dec
das
xlat
scas
xor
inc
popf
lods
mov
popf
fs
mov
and
lods
mov
push
sub
sbb
and
outsb
scas
data16
sbb
and
faddp
adc
js
mov
mov
xchg
mov
jge
xchg
jle
or
pop
scas
cmc
inc
dec
xchg
scas
push
rol
jl
inc
pop
sub
shl
lahf
scas
test
lds
arpl
adc
sbb
lahf
and
jp
jo
lea
sbb
or
add
and
shrl
adc
test
int3
popa
adc
ds
jnp
mov
outsl
cmp
fisubrl
xor
add
mov
dec
xor
sbb
mov
shl
in
addr16
mov
fwait
cmpsl
lahf
imul
and
jmp
outsl
xor
push
lret
fstps
mov
test
sbbb
leave
lock
adc
testb
sbb
xor
dec
push
negw
inc
xor
fs
inc
mov
jecxz
pushf
jp
pusha
aaa
rep
inc
lea
and
cmpsl
xor
and
repz
mov
push
outsl
stos
jbe
jae
pop
arpl
je
push
jbe
popf
add
sub
push
dec
repz
loope
pop
das
jge
insb
pop
iret
and
push
lret
add
dec
in
inc
push
and
pushf
inc
loopne
repz
testl
loope
jg
sub
mov
and
addb
mov
sub
pop
orl
jle
sub
fstpl
daa
rorb
mov
pop
sbb
pop
cmp
rorl
mov
int3
push
adc
sbb
or
mov
ret
fdivrl
cmp
xchg
movsb
sub
out
outsl
mov
popa
push
mov
push
cmpsb
stc
pushf
or
push
mov
mov
push
cs
cmp
pop
push
dec
xor
cmpb
pop
mov
push
sbbb
cmc
inc
loopne
leave
jp
adc
inc
jns
cmp
inc
adc
shld
sbb
loope
add
xorb
clc
int3
sub
ret
jbe
je
imul
cwtl
ljmp
popw
add
xchg
mov
mov
mov
cmp
dec
daa
cmpsl
and
ret
push
dec
mov
hlt
xchg
jbe
xor
sbb
sarl
std
pop
nop
sbb
enter
inc
add
xchg
pop
mov
adc
add
sbb
push
xor
scas
xor
add
cmp
pushf
movsl
cmp
inc
inc
push
lret
inc
pushf
xchg
testb
aam
fistpl
scas
fs
mov
rorl
cs
lahf
cmpsl
adc
lods
mov
or
test
or
sti
cld
stc
jle
or
xchg
mov
arpl
jle
mov
movb
or
dec
adc
aaa
push
push
mov
dec
mov
bound
xlat
push
adc
dec
fcoms
out
test
sahf
xor
fcomps
test
pop
pop
add
call
sub
or
inc
and
ss
xchg
inc
fwait
or
cli
out
xor
in
jb
test
sbb
lea
rol
xchg
push
pop
test
test
in
add
sub
outsl
inc
pop
sbb
sub
xor
cmp
inc
fisubl
mov
rclb
aas
push
sar
add
loop
cli
fdivs
lds
sti
scas
call
push
lock
js
in
inc
fisubrs
adc
int3
insl
lcall
aam
adc
pop
int3
ror
icebp
xchg
fildl
adc
mov
mov
push
mov
imul
or
test
xchg
or
lock
lods
js
pop
xchg
push
lods
dec
inc
cmc
mov
dec
mov
dec
cmpsl
imul
movsl
mov
pop
xorb
push
pop
je
cwtl
xchg
pop
aaa
jns
lret
pop
sarl
mov
loopne
shll
xchg
and
adc
lahf
push
lret
and
movsb
or
push
pushf
data16
sub
inc
cmp
mov
mov
sti
arpl
pusha
adc
jmp
sbb
push
repz
stc
cwtl
cmp
icebp
pop
insb
nop
test
lds
jns
cmpsl
addr16
xchg
loop
mov
int3
sbb
iret
cltd
in
or
push
mov
pop
repnz
xlat
bound
orl
xchg
lock
and
sti
fisttpl
pop
pop
xchg
push
push
mov
out
rcrb
imul
daa
xchg
push
adc
xchg
std
addr16
inc
sub
jae
push
shl
push
js
shll
jne
jg
in
mov
xchg
xchg
dec
add
enter
dec
das
mov
cmp
push
cmp
and
jns
movsl
sub
push
push
call
lea
xor
loop
ja
cmp
pusha
pop
repz
sub
shr
mov
jl
leave
mov
inc
sub
out
insb
push
sub
inc
mov
daa
ds
mov
jg
mov
push
ret
hlt
inc
or
or
ss
xor
das
or
and
lea
out
ja
and
outsb
xchg
jecxz
rorb
pushl
mov
rcrl
cmp
jp
inc
lea
out
movl
jae
in
lea
test
fwait
cmpsl
ljmp
inc
pop
jmp
subb
jns
mov
cwtl
lret
sti
mov
and
push
mov
push
ret
in
movsb
fcmove
xchg
or
jnp
mov
ret
xchg
inc
xchg
mov
ret
ljmpw
fcomp
mov
add
inc
adc
pop
push
mov
jge
mov
testb
leave
mov
and
aaa
mov
mov
or
repnz
scas
jecxz
stc
jmp
mov
scas
sub
inc
xor
pop
ja
rcll
adc
addr16
xchg
mov
enter
int3
inc
and
cmp
ficoml
shr
jmp
call
fs
mov
jmp
repz
nop
mov
and
inc
icebp
push
daa
iret
cltd
ja
or
push
andl
adc
mov
adc
add
leave
push
mov
jnp
aam
xchg
pop
inc
iret
push
bound
jp
xchg
ljmp
out
fs
xchg
enter
inc
int
aad
shlb
pushf
adc
push
mov
mov
inc
mov
xor
and
mov
pop
xor
xchg
add
lahf
or
scas
mov
repnz
loopne
insl
push
int
pop
xchg
push
loop
fdivrs
sbb
leave
pop
cmovns
cwtl
icebp
rcrl
push
mov
sbb
int
hlt
push
mov
push
dec
pop
stc
push
sbb
mov
subb
out
and
sbb
sbbl
sbbb
in
inc
out
inc
or
test
lret
sbb
jle
pop
jne
popa
hlt
in
rolb
mov
std
mov
jge
inc
call
xor
pushf
in
pop
sub
les
adc
mov
sub
or
jae
mov
adcb
xor
imul
sarl
dec
mull
mov
test
push
hlt
outsl
lea
jns
mov
ds
and
xor
xchg
adc
stos
jnp
dec
or
call
sub
lret
repz
xorl
orl
ret
mov
sub
xchg
adc
roll
arpl
or
outsl
fs
inc
ret
out
arpl
ljmp
push
cmpsl
std
xor
xor
cltd
fimull
lods
shlb
pop
pushf
mov
xchg
cld
add
idivb
xlat
pusha
mov
repnz
add
cmp
dec
inc
mov
arpl
jae
repnz
fdivs
sbb
and
mov
lods
test
push
roll
xor
push
jl
shlb
inc
pop
stc
into
adc
push
adc
icebp
arpl
ja
sub
jne
fdivr
cmc
inc
negb
mov
and
dec
sbb
mov
pop
add
sub
out
ljmp
test
jno
mov
adc
loope
cltd
adc
xor
jnp
int3
ret
rdseed
das
adc
pop
sbb
mov
pop
push
mov
imul
mov
adc
jb
xchg
push
mov
cmpsl
das
xor
lds
addr16
je
cmp
xchg
pop
jne
fsubrs
pmuludq
nop
movsl
stos
mov
dec
inc
push
call
stos
and
test
pusha
push
into
jae
adc
std
or
and
fidivrl
stos
sbb
sbb
inc
xchg
xchg
mov
rcrb
fnstcw
and
mov
push
out
sub
gs
rcrl
movsb
xchg
jl
fldt
test
leave
lock
js
adc
push
push
adcl
adc
mov
jg
pmulhw
in
dec
xor
mov
dec
sbb
adc
sbb
mov
negb
sbb
fldl
add
push
and
aas
push
mov
add
xchg
add
repnz
xchg
and
xor
xlat
adc
fldt
push
loope
cmp
cmpsb
in
negb
into
mov
dec
mov
repz
push
and
insl
push
xchg
subb
movsb
outsl
rorl
nop
shufps
xor
popf
adc
xlat
jmp
pop
sub
in
inc
fmull
sbb
gs
cwtl
push
mov
or
fwait
imul
rol
addb
imul
jbe
or
mov
adc
sbb
repz
mov
and
sub
rorl
mov
scas
push
sub
cwtl
add
scas
pop
inc
mov
lret
das
sub
sbb
pop
cmp
mov
fstpl
addl
cs
lret
dec
out
movsl
cmp
cmp
xchg
or
cmp
sub
enter
cmp
push
aas
sub
cmp
loopne
adc
and
ret
repnz
fistpl
mov
push
xor
push
loop
mov
daa
xor
test
xor
mov
xchg
sub
imul
ja
and
jb
jo
repz
sbbl
sub
popf
movsl
cs
xchg
mov
pop
imul
dec
mov
int3
imul
cmp
std
pusha
fs
mov
inc
mov
popa
int
cwtl
jecxz
jne
cli
leave
inc
push
pushf
pop
out
in
les
das
test
mov
xchg
adc
js
jp
push
add
xorb
call
mov
dec
test
in
fcompl
add
cmp
sub
call
arpl
test
imul
push
jae
dec
lods
inc
mov
hlt
or
popa
and
xchg
sbbl
xor
dec
fcmovnb
sub
xchg
xchg
mov
dec
fs
or
jo
sbb
pop
mov
push
test
mov
out
leave
pop
nopl
lods
pushf
or
je
inc
sbb
cvtps2pd
negl
or
cltd
adc
hlt
push
test
lea
adc
rorb
pop
icebp
lret
jmp
pop
bound
xchg
add
pushw
cli
mov
jnp
mov
mov
cmove
pop
mov
pop
mov
sbbb
fldt
popf
cli
sub
hlt
xor
sub
or
lods
sub
out
lock
sahf
rolb
add
mov
pop
mov
decl
pushf
sub
insb
xchg
mov
mov
mov
sub
dec
pop
repnz
pop
mov
or
sbbl
ljmp
jo,pn
dec
loop
cmpb
out
pop
mov
xor
fwait
add
jge
or
jb
ret
add
xchg
fsts
cmp
pusha
filds
add
stc
jmp
movntq
daa
adc
jg
fists
jae
arpl
mov
and
int
add
sub
mov
push
pushf
mov
sbb
push
testb
lea
lds
pop
outsb
mulb
js
push
xchg
movsb
sti
or
daa
mov
fmuls
pop
aaa
xchg
mov
push
popf
mov
xchg
pop
popa
and
jg
dec
les
push
movsl
dec
push
lds
or
add
push
icebp
ds
rolb
mov
enter
divb
stos
out
adc
test
add
mov
push
ds
xor
dec
or
push
mov
push
movsb
fisubrs
pop
dec
jae
mov
xchg
mov
pusha
rcr
cmc
je
ljmp
inc
cmp
sbb
and
loope
xor
mov
inc
cmc
mov
xchg
lods
insl
loop
sub
xor
push
shrl
mov
mov
sbb
push
in
test
sarb
xor
or
sub
or
pop
jnp
je
adc
cmp
xchg
out
mov
push
push
xor
sbb
lock
outsl
in
ja
adc
xor
sbb
add
adc
inc
push
or
pushf
sub
addr16
pop
adc
ffreep
cmp
mov
subl
inc
cmp
and
adc
aad
daa
jp
test
jae
mov
sub
lock
rolb
inc
xchg
pop
outsl
movsb
les
xchg
cmp
outsl
in
repnz
out
dec
jl
jno
sub
fidivs
jg
dec
out
cmc
orl
xchg
call
mov
xorb
mov
inc
jns
mov
lahf
out
in
mov
rol
xchg
ja
xchg
andl
lea
mov
cli
les
pop
mov
aaa
roll
xor
push
cmp
or
adc
add
dec
roll
gs
movsb
jnp
mov
pop
sbb
inc
xor
ficoms
xchg
sub
jo
mov
pushf
lods
cmc
mov
sub
cmp
lret
mov
sbb
rcrl
jnp
fs
insb
enter
push
fs
pop
cmp
xchg
repz
in
decb
les
xor
test
inc
or
xor
push
mov
mov
jb
inc
push
adc
aaa
sub
jae
cwtl
inc
cmpsl
into
lds
adc
out
adc
out
daa
cmc
faddl
nop
push
xor
movsb
and
pop
add
das
inc
pusha
cmp
and
sub
sub
fwait
or
cwtl
pushf
xor
ret
inc
inc
fwait
movsb
and
lret
std
in
mov
sbb
pop
lret
dec
jmp
in
lods
aaa
cmp
out
xor
pop
test
push
iret
rcrl
sbb
test
pop
inc
js
push
add
add
sbb
inc
stc
sbbl
cmp
jae
in
mov
sub
jge
sbb
incl
imul
or
sbb
mov
xor
adc
insl
cld
je
rcl
mov
cwtl
sub
repz
movsb
add
jnp
add
mov
jne
sbb
rcll
mov
loopne
add
sbb
lret
push
inc
and
jge
cmp
lcall
shl
jbe
scas
jmp
pop
out
loop
xorl
and
add
jle
icebp
sbb
jp
test
std
dec
cmp
and
fsubrp
dec
notl
les
enter
cltd
jo
ds
cmp
call
dec
repnz
xlat
test
mov
xor
in
les
cmp
cmpsb
call
lret
cwtl
testb
add
imul
push
jl
pop
lahf
mov
dec
les
inc
mov
test
jns
xchg
pop
sbb
adc
fwait
das
xchg
or
inc
mov
jle
inc
lock
ret
jb
push
add
xchg
sub
push
cltd
out
rcrl
int
stc
ror
xchg
add
dec
aam
inc
mov
jp
cli
arpl
xchg
dec
push
dec
push
fcoms
bound
adc
repz
sbb
inc
mov
dec
lret
mov
cwtl
xchg
arpl
test
into
rcrl
popa
les
nop
lret
negb
and
pop
or
std
jbe
lea
pop
xor
push
stos
cli
jne
scas
fstl
cli
and
cmp
or
ds
lods
dec
push
mov
aad
nop
stos
rclb
ret
test
and
out
cmp
aas
xchg
adc
out
outsl
das
sbb
xor
nop
mov
cmp
out
out
cmp
pushf
into
roll
and
dec
scas
xchg
mov
cmp
jnp
imul
push
lods
adc
xlat
pmullw
ljmp
lret
arpl
das
xlat
frstor
mov
stc
pusha
lods
jae
cwtl
adc
mov
iret
push
hlt
xor
shll
add
clc
pop
enter
sbb
fdivr
adc
mov
inc
mov
inc
adc
fcoml
cmc
adc
jg
and
fwait
enter
mov
pop
or
push
adc
daa
xor
repnz
mov
lods
data16
rol
cmp
dec
daa
js
lds
pop
pop
jne
nop
pop
push
cmp
clc
in
mov
cmp
movsb
inc
xchg
xchg
mov
dec
jl
mov
xor
movl
pushf
push
subb
inc
lcall
dec
dec
je
sbb
jmp
and
sub
sbb
js
fdivrs
out
pop
andl
or
cmp
arpl
jmp
aaa
pushf
cmpl
popa
dec
jnp
pop
clc
push
enter
fwait
mov
loopne
roll
jae
push
xor
enter
xchg
pop
inc
pusha
lods
and
loope
sbb
shll
dec
addr16
lret
jge
out
out
xchg
rcrb
sbb
dec
mov
sub
sub
outsb
aaa
jecxz
lods
das
jl
jl
jnp
xor
fdivrs
add
add
or
jle
insl
lcall
inc
pop
mov
je
jns
push
dec
xchg
push
dec
dec
cwtl
dec
mov
pop
inc
xor
mov
arpl
add
ret
pop
xlat
out
sub
mov
lods
adc
gs
stos
mov
sti
push
mov
cltd
enter
push
mov
jle
inc
in
hlt
das
push
repz
and
pop
mov
xor
jbe
cmp
adc
test
add
rorb
or
cmpsb
pop
lods
inc
jg
jge
cmp
loope
dec
mov
loope
xchg
adc
jb
daa
daa
jno
into
add
pop
stos
ljmp
fnstenv
pusha
call
adc
adc
xor
xchg
mov
xor
push
aas
mov
mov
mov
fwait
shll
cmc
sbb
ja
rorb
imulb
dec
js
sti
xor
jbe
xchg
or
push
clc
lods
out
or
std
cmp
leave
xchg
push
add
pop
loop
call
sub
inc
hlt
pop
rcll
or
adcl
repz
fisubl
adc
mov
cmc
dec
and
push
jo
xlat
inc
jge
ljmp
xchg
adc
sub
daa
leave
mov
jnp
xor
adc
mov
mov
jge
or
push
jg
and
sbb
aam
mov
shr
mov
mov
sub
dec
shll
pop
lea
mov
test
mov
hlt
std
dec
dec
movsb
addr16
cmp
mov
aaa
mov
int
gs
ljmp
mov
push
test
push
jne
fwait
lods
cmp
stos
lret
mov
lret
sub
ja
pop
shl
inc
insb
lret
xchg
ljmp
add
in
outsb
out
pop
jge
not
mov
push
loopne
xor
in
mov
mov
addr16
inc
or
cmpsb
jne
sbbl
lods
mov
mov
gs
sub
mov
sbb
lcall
cmp
sub
seto
stc
sbb
add
xchg
out
nop
in
mov
pop
test
cmpsb
call
adc
dec
xchg
pop
cltd
inc
movsb
je
pop
and
xchg
push
or
jp
and
adc
mov
xchg
in
ljmp
xor
jae
push
aas
ret
or
fnstsw
mov
mov
lock
mov
or
pop
sub
js
fistps
ret
adc
adc
ret
pushf
cmpsl
cmc
insb
add
xor
cs
fldl
ds
mov
jp
ljmp
outsb
mov
or
push
dec
lahf
mov
mov
dec
stos
mov
in
inc
test
shl
fisubl
jae
pop
jnp
mov
in
orb
shrb
mov
sub
xchg
in
mov
adc
test
xchg
cmp
loop
inc
xchg
cs
xor
rorb
mov
fidivl
cmp
cmp
xor
test
fs
jo
test
xchg
adc
push
das
pop
nop
outsl
imul
sbb
imul
jl
jg
addb
sub
mov
xchg
dec
add
in
pop
push
push
mov
pop
and
cmp
aam
rcll
mov
pop
ret
add
ret
dec
sub
add
scas
jb
cmp
dec
into
xor
cli
mov
pop
mov
loope
and
xor
jp
pop
adc
lock
ja
sbb
scas
cmp
pop
in
and
or
xor
or
int3
cwtl
call
pop
test
aaa
loope
mov
xchg
mul
cmp
inc
sub
fs
std
cmp
rolb
cmp
jno
push
push
pusha
mov
sbbb
jns
shl
hlt
mov
cmp
and
fs
stc
pop
push
dec
add
xchg
xor
add
test
lea
add
fidivs
add
and
pop
inc
mov
ss
lahf
call
sbb
imul
loop
push
dec
inc
divl
out
test
stos
mov
mov
adc
jle
dec
daa
cmpsl
arpl
ljmp
pop
les
sub
jo
sahf
out
rorb
mov
hlt
xor
icebp
push
xor
mov
push
cmp
jp
or
xlat
push
add
enter
cmpsb
mov
jmp
pop
enter
push
cltd
popf
jle
lds
flds
cltd
ret
adc
cmp
pop
ja
pop
push
sub
inc
sbb
add
les
mov
adc
repnz
mov
gs
bound
sub
jne
mov
cmp
cmpsb
lea
jmp
jmp
xorl
mov
pop
mov
mov
call
divb
pop
jno
sbb
es
scas
in
or
sbb
inc
mov
add
and
or
inc
mov
pop
sbb
les
lret
pop
fistl
das
or
sti
adc
mov
cs
loop
adc
aam
push
fs
sbb
push
or
mov
mov
push
arpl
add
repnz
or
scas
and
pop
sub
push
aad
pop
shll
pop
hlt
je
int
mov
rolb
mov
sub
or
pop
adc
icebp
scas
xchg
repz
push
mov
xchg
mov
mov
or
shrl
push
fidivrs
adcb
mov
movsb
mov
jle
decb
insb
sub
orb
lret
sbb
jns
in
add
sahf
aaa
jne
scas
test
jmp
pop
sti
aaa
ficomps
jnp
mov
mov
rcl
pop
or
cmp
mov
sub
rorl
mov
mov
push
fnsave
leave
and
test
fsubl
adc
pop
xchg
or
es
adc
and
cmpsb
adc
mov
mulb
inc
cli
je
push
cmp
test
inc
test
outsl
jmp
cmpsb
add
sub
dec
movsl
aad
inc
mov
lods
addr16
les
mov
das
lock
push
js
xor
inc
sub
xchg
pusha
scas
test
lock
movsb
int3
or
add
sbb
mov
xor
add
int3
std
imul
jo
mov
inc
or
pusha
dec
xor
adc
pop
inc
mov
imul
call
lods
cld
or
shll
adc
inc
movsb
mov
sbb
je
mov
popl
enter
or
ds
fdivrs
cmp
adc
push
repnz
rorl
rcll
scas
lods
adc
pop
pop
in
sbb
push
add
outsl
shl
mov
lcall
mov
sub
out
cmp
fwait
fnstenv
xor
inc
frstor
inc
add
push
xor
dec
cmp
cmp
mov
or
or
loopne
mov
jmp
repz
jo
cmp
push
fstl
in
push
mov
xchg
or
and
sub
ss
lods
jmp
sbb
dec
inc
xchg
rol
inc
lahf
out
or
out
in
inc
outsl
repnz
loopne
pop
sahf
fistps
cmp
call
cwtl
xor
ds
out
adc
mov
cltd
mov
jl
data16
test
pop
notl
mov
jno
mov
xchg
mov
les
mov
imulb
movsl
rclb
rcrl
add
ret
stos
mov
in
pusha
cmp
repnz
mov
cld
jecxz
loopne
ss
repz
rclb
std
xchg
inc
into
popf
movsl
mov
loope
gs
loopne
arpl
pop
iret
inc
xchg
popa
mov
mov
mov
jmp
jle
or
out
fwait
pop
scas
xchg
add
xchg
jbe
notb
xchg
rdmsr
cmp
je
lret
ss
xor
call
sti
scas
inc
ds
rcrl
dec
shlb
push
mov
nop
jg
ficompl
jg
sbb
test
and
adc
ret
bound
in
pop
dec
fdivp
cmp
fists
dec
sub
jo
inc
dec
mov
and
rclb
mov
sbb
xchg
stc
jge
push
add
test
xor
mov
cmpsl
xor
insb
stos
mov
push
outsl
mov
mov
int
fstl
xchg
jecxz
lods
lret
mov
adc
push
fstpl
aaa
jl
mov
pop
dec
inc
mov
pop
lcall
pop
cwtl
jo
mov
test
and
sub
out
ja
loop
rclb
scas
addr16
or
push
jg
loop
scas
mov
mov
inc
adc
mov
mov
pop
push
dec
dec
stos
inc
stos
mov
adc
dec
jl
adc
cs
and
sbb
xor
cmc
xor
int3
pop
mov
cli
pop
ret
ror
lods
push
vmovaps
add
mov
inc
sub
not
dec
push
cld
dec
pop
andb
dec
cmp
aaa
xor
clc
or
and
or
sbb
out
icebp
push
fwait
adc
ret
pop
nop
test
pop
push
addr16
xchg
pop
add
add
aad
cmp
mov
xor
int3
xchg
push
cmp
incb
mov
and
push
enter
push
cmp
pop
xchg
fwait
movsb
rcrb
in
je
xchg
pop
test
icebp
adc
xlat
pop
pop
subl
lcall
add
shll
dec
movsb
pop
je
mov
inc
add
pmuludq
sahf
xchg
sbb
mov
in
loope
scas
adc
js
dec
cmp
mov
cmp
repnz
flds
in
xor
hlt
fmuls
jnp
add
mov
es
xlat
outsl
std
pop
pop
daa
mov
fistl
hlt
adc
jb
push
neg
mov
push
mov
cmp
jmp
out
addl
mov
xor
cmp
and
adc
dec
lret
push
rorl
scas
jno
fcmovnbe
int3
pop
push
sub
lcall
xorl
xor
add
xchg
push
xor
add
and
syscall
mov
stos
and
clc
push
aam
int
pop
lods
push
inc
cs
mov
adc
mov
mov
mov
dec
sete
test
pop
mov
sub
add
dec
js
outsb
jecxz
in
lcall
adc
clc
or
es
xchg
push
out
jp
fld
es
push
movsl
inc
adc
bound
lahf
lcall
sub
nop
into
xor
es
fbstp
idivb
xlat
jno
push
push
mov
mov
or
xchg
fistps
inc
insb
mov
mov
outsb
xchg
test
repz
pushf
aam
lret
adc
data16
inc
lds
inc
adc
repz
adc
orb
outsb
inc
ret
rcl
out
dec
cwtl
and
adc
pop
lea
pop
dec
scas
jnp
pop
insb
and
mov
mov
mov
movsb
dec
shrb
pop
pop
arpl
popl
fistl
fnstsw
aam
cmp
mov
addr16
adc
repz
shr
pop
jge
mov
shrl
mov
les
inc
cmp
xor
push
imul
mov
or
testb
add
in
mov
repz
cmp
daa
test
cmp
dec
xor
fdivr
sti
mov
add
add
scas
sub
push
pop
jne
leave
sbb
xor
movsb
inc
mov
and
fnstenv
mov
cltd
dec
pop
jmp
adc
aam
outsl
popl
sti
aaa
adc
popa
add
insl
push
jo
movsb
and
pop
add
popf
sbbb
int
add
cli
xor
pusha
xchg
xor
adc
cmp
inc
sub
lock
mov
testb
mov
pop
mov
push
inc
push
in
shrl
sub
hlt
jmp
push
jae
jmp
fbld
lods
addr16
fistpll
movsl
adc
mov
sarb
shll
ja
lods
bound
mov
pop
push
or
xchg
jl
fisubrs
or
inc
jp
daa
aaa
dec
cld
sub
jbe
cmp
xchg
add
test
test
push
int
jo
push
push
loopne
mov
or
je
adc
into
ret
push
imul
fdivrl
aas
pop
repnz
je
pushf
add
rorl
dec
lods
aas
mov
ret
cmp
mov
mov
sarb
test
mov
dec
push
aad
sarb
sbb
fst
xchg
cwtl
in
or
sahf
push
dec
ss
dec
cmp
mov
mov
aaa
gs
xacquire
pop
push
icebp
rcll
mov
jecxz
xchg
into
pop
fxch
cld
sbb
mov
lret
jo
sbbl
push
cmpsl
mov
nop
fdivs
dec
in
and
mov
xchg
sub
jo
sub
dec
ljmp
push
iret
mov
cmpsl
add
lods
push
icebp
mov
idivl
xchg
hlt
aas
sbb
outsb
pusha
sub
ds
dec
or
sub
shl
leave
lahf
sbb
clc
leave
dec
pandn
inc
sbb
mov
aad
sub
inc
shll
shr
sbb
in
mov
pop
shll
ja
fdivrs
sub
sbb
pusha
or
nopl
mov
fists
sti
stos
jnp
sub
push
pop
lret
xchg
dec
or
sub
or
jecxz
sub
hlt
mov
cmp
mov
gs
dec
xor
inc
pop
xchg
mov
les
and
jno,pt
or
es
jge
push
clc
repnz
negl
mov
insb
xor
sub
pop
pop
sbbl
xor
sbb
jne
mov
xor
dec
adc
and
lods
inc
in
push
popw
cmp
fistpl
sar
lea
sub
out
in
int
or
daa
ds
lret
inc
mov
das
mov
cmp
inc
orb
adc
pushf
pop
sbb
addr16
repnz
divl
adc
pop
push
enter
cmp
lahf
scas
lods
mov
jne
or
fldl
xchg
stc
and
subl
mov
pop
or
push
and
js
in
cmp
and
add
lahf
aam
ja
xchg
and
out
aad
sbb
xchg
jg
pop
xchg
daa
xor
fs
fstl
push
push
pop
popf
and
orb
arpl
mov
mov
or
or
shrb
push
leave
in
fists
inc
ud2
pop
repz
shlb
int3
loope
ljmp
les
sahf
andl
fnsave
cmp
not
mov
mov
out
fyl2x
shll
pop
add
or
dec
adcl
pop
push
sbb
add
in
loopne
jno
movl
arpl
jb
test
addr16
outsl
jmp
rcll
enter
iret
xchg
shrb
inc
and
or
sbb
mov
xchg
ffreep
jp
mov
pop
xor
nop
mov
rep
ss
fstp
sbb
cli
adc
aad
sbb
loope
add
mov
out
aam
push
sub
mov
push
cli
and
adc
repnz
fdivs
adc
jb
jnp
add
lret
popf
push
shlb
loope
push
out
dec
shll
pop
jecxz
mov
inc
popa
xchg
ror
dec
stos
pop
xchg
mov
sbb
xor
pop
sub
or
cmpsl
sbb
icebp
ds
and
stos
adc
ss
xchg
int
push
out
xabort
lret
xchg
and
movsl
fsubrs
add
testl
jle
gs
lods
mov
scas
aad
inc
mov
jle
outsb
aaa
shrl
jnp
test
jl
and
js
fwait
inc
leave
jg
jbe
pop
pop
push
pop
push
xor
ficoml
sahf
psrlq
lods
mov
filds
add
add
mov
addb
stc
jle
sub
gs
sbb
sub
in
adc
hlt
mov
cmp
mov
ljmp
cwtl
lods
gs
push
sub
lcall
mov
inc
addr16
pop
jmp
mov
repnz
popf
gs
mov
cmp
mulb
mov
mov
and
leave
mov
es
xor
push
lcall
push
es
or
cs
hlt
pop
inc
ljmp
mov
jo
adc
fldt
sbb
icebp
push
and
pop
and
pop
xlat
mov
adc
or
and
sbb
jbe
dec
pusha
add
rcll
pop
or
jg
vcvttpd2qq
dec
or
pop
sub
ret
or
xor
fsts
xchg
xor
stc
add
testb
xlat
jmp
jl
add
sub
sub
scas
loopne
add
xor
mov
js
stos
lods
ret
ja
dec
cmp
xor
add
cmp
mov
jge
xorb
fs
mov
out
cmp
nop
push
insb
fldcw
pop
jl
repnz
notl
mov
xor
and
pop
shr
out
testb
dec
jl
gs
and
jle
js
push
sbb
fsubs
lea
and
pop
pop
out
jecxz
daa
insl
pop
mov
pop
add
dec
iret
lock
mov
mov
xorb
pop
mov
pushf
sarl
in
hlt
inc
arpl
pop
adc
das
ffreep
xor
dec
je
subb
xor
shll
xchg
rcll
repnz
cmp
xchg
loopne
stc
lock
stos
fistpll
xchg
test
filds
cvttps2pi
bound
xor
das
jb
and
xchg
jno
and
jae
insb
in
lahf
lret
adc
nop
or
pop
ds
push
push
xor
dec
js
push
inc
gs
in
inc
adc
insb
cmp
push
js
ffreep
cmpsl
je
add
jl
mov
clc
mov
xchg
pop
inc
test
lock
add
ljmp
subb
push
cwtl
mov
shll
in
cmp
test
or
imul
rol
stc
jbe
push
add
loop
jae
jp
pushf
repnz
sub
shrb
sti
call
sbb
into
or
xor
insl
test
or
cmpsl
cmpsl
test
mull
mov
loopne
jle
ror
mov
pop
xor
cmp
cmp
pop
inc
mov
push
hlt
inc
push
pop
xchg
push
mov
inc
aas
push
xor
out
xchg
jp
dec
or
orl
mov
ret
cld
enter
roll
lahf
mov
pop
mov
shrl
pop
cmp
jns
pop
add
mov
aam
sbb
icebp
mov
jge
xor
cmp
es
jecxz
pop
mov
push
pop
xor
lahf
push
mov
xor
and
adc
sbb
push
scas
mov
pop
push
pop
push
or
pop
imul
inc
add
sbb
hlt
bound
movsb
lahf
pop
and
hlt
push
movsb
add
jg
jge
out
das
or
dec
pop
nop
sbb
sbb
or
notb
shlb
jl
fdivrp
shll
leave
xor
push
lods
aas
mov
fistpl
sub
xor
fldenv
or
cmp
imul
xchg
xor
add
je
inc
dec
test
push
pushf
adc
dec
mov
sbb
sub
mov
mov
jge
mov
push
adc
adc
xor
push
ja
add
rep
inc
xchg
sbb
outsl
pop
sbb
adc
xor
jge
notb
fcmovnb
cwtl
jnp
push
push
adc
cli
sub
mov
popf
mov
inc
cmc
xchg
jno
sub
test
mov
orb
xor
sub
mov
ljmp
shl
push
lods
sbb
fsub
push
loope
nop
nop
outsl
test
push
stos
inc
xchg
xor
cld
push
in
lret
mov
mov
jb
call
rcr
pop
cmp
sbb
push
mov
inc
jno
sub
nop
mov
mov
sbb
ret
aam
mov
add
dec
lret
xchg
push
outsb
dec
mov
pop
xchg
fcmovb
and
sbb
add
dec
mov
idivb
and
iret
xor
adc
xchg
adc
pop
xor
pusha
sbb
arpl
push
sarb
jns
mov
decb
jp
orb
jmp
sbb
push
bound
cld
shll
fidivrl
imulb
mov
jbe
stos
sahf
cli
jne
inc
aas
mov
dec
test
aam
sete
add
mov
xor
loopne
push
int3
lods
or
adc
cmc
dec
outsl
hlt
icebp
pop
xchg
inc
les
add
test
adc
bound
fisubl
dec
test
aad
es
cli
mov
push
in
jecxz
dec
sub
mov
dec
cmp
mov
mov
add
test
xchg
push
push
popa
hlt
iret
shl
lahf
xlat
call
decl
test
push
dec
jmp
jl
cmp
sti
cmp
push
adc
cli
and
das
xchg
mov
sub
mov
fldt
lods
fadd
xchg
mov
xor
bound
mov
inc
arpl
cmpl
in
inc
adc
mov
cltd
mov
push
inc
dec
dec
add
lock
fwait
call
insb
pop
addb
push
je
mov
mov
jne
stos
idivb
dec
mov
xchg
fwait
and
shl
lcall
pop
ljmp
stos
dec
mov
add
xchg
sbb
xchg
es
sbb
je
push
add
mov
pop
jge
dec
outsl
gs
test
xor
or
insl
fwait
add
dec
dec
mov
cltd
inc
or
and
add
popa
scas
sarl
add
cmp
push
adc
push
cli
repz
or
adcl
decb
pop
inc
fnstenv
subb
mov
xor
dec
sbb
and
mov
sub
in
int
les
adcl
mov
insl
jne
mov
add
fwait
test
int
add
mov
dec
xchg
pop
pop
add
ja
stos
xchg
adc
and
xor
sub
pop
and
xor
mov
and
ficoml
xchg
lret
push
xor
gs
test
pop
sbb
pop
sub
aas
jl
sub
and
and
adc
ficompl
lock
mov
lret
add
push
pop
iret
scas
jecxz
aad
loopne
mov
popa
mov
and
or
mov
lahf
outsb
mov
mov
dec
or
pop
pop
shl
jmp
sub
test
jno
lahf
sbb
push
ljmp
add
sub
aaa
push
cmp
pop
ja
sbb
sbb
dec
and
fmull
pop
enter
xchg
into
aam
dec
push
mov
xor
cmp
cmpsl
imul
dec
pop
push
push
aaa
lods
es
push
cmpsl
mov
js
stos
js
or
jmp
lods
icebp
cmp
push
rcrb
push
stos
xlat
in
jmp
pop
mov
stc
jecxz,pt
jo
movsl
cmpsb
inc
lock
jmp
mov
mov
cmp
xchg
mov
fwait
cwtl
jl
inc
shl
xor
lock
test
inc
adc
out
xchg
dec
jae
cmp
mov
cmpsl
dec
mov
out
inc
pop
xor
rol
data16
pusha
movsl
ss
in
adc
lock
lock
pushf
testl
cli
pop
add
adc
aam
sti
rolb
sbbl
daa
jns
sub
push
pop
adc
mov
int3
mov
leave
cmp
repnz
divl
imul
popf
push
push
inc
fs
mov
sbb
adc
ret
xor
mov
mov
roll
mov
adc
add
xor
in
add
fcomps
sbb
mov
inc
mov
hlt
push
sahf
dec
inc
add
jecxz
pushl
pop
sbb
loopne
add
sbb
mov
mov
xchg
fists
sub
adc
pop
or
andnps
sarl
xorb
mov
mov
std
cmp
pushf
scas
sub
jmp
adc
fisttpl
mov
ret
lcall
iret
arpl
add
pop
dec
pop
jbe
cmp
je
es
cs
pusha
xchg
mov
fcmovnbe
pop
enter
je
int
in
add
xor
jge
cmc
push
mov
shlb
sub
jle
inc
xor
orb
mov
mov
and
fiaddl
cmp
or
aas
repz
push
shlb
add
jle
mov
stos
pop
fisubl
mov
fcomps
adc
int
imul
cmp
pushf
mov
dec
movsb
sbb
push
mov
or
es
jo
lea
xchg
ret
gs
mov
ljmp
fiaddl
jb
sbb
mov
fistpl
pop
cmp
inc
in
mov
stos
push
push
cmp
xchg
arpl
movsb
or
pop
push
adcb
ret
aad
iret
pop
or
push
inc
insl
sbb
aas
movl
mov
cmpsl
dec
add
cmp
push
mov
in
movaps
hlt
jne
lret
pusha
mov
mov
testl
push
add
dec
icebp
and
int
cmp
or
dec
cltd
inc
shl
jp
push
sbb
cmp
adc
push
sbb
fdivs
sbb
mov
xor
repz
and
test
test
sbb
sub
mov
out
xchg
pop
testb
iret
add
lahf
add
ret
mov
imulb
aaa
or
fwait
sub
jp,pn
mov
loopne
in
sub
jle
addb
in
ficoms
arpl
stos
arpl
sub
ror
jmp
aam
imul
movb
lock
shrl
loopne
dec
dec
pop
push
stc
add
and
mov
cmp
mov
cmp
inc
dec
pop
inc
ret
push
jno
test
sub
mov
inc
xor
push
cmp
stos
push
cmpsb
jg
push
mov
mov
mov
movsb
cwtl
psrld
sbb
dec
pop
icebp
mov
mov
or
cmp
stos
sub
push
mov
cmp
mov
mov
add
push
out
mov
push
mov
jmp
aad
inc
push
inc
sarb
ret
mov
lret
fwait
xchg
clc
sub
mov
jmp
popa
pop
push
dec
cmp
xchg
inc
mov
jg
movsl
testl
and
sbb
lahf
rcrb
or
push
insl
dec
and
dec
cmpsb
into
mov
lock
xorl
imul
or
aam
mov
sub
test
sti
xor
jae
cli
push
and
mov
jns
adc
fistpl
push
sbb
mov
jmp
lcall
lods
jb
add
jmp
sbb
adc
push
sbb
xor
icebp
int
cmpsl
xchg
lcall
popf
repz
lods
mov
in
push
sub
mov
int
scas
add
scas
test
call
addl
add
imul
and
inc
test
sub
xor
iret
decb
jns
inc
enter
mov
fidivl
mov
int
add
out
adc
dec
inc
hlt
dec
xlat
ret
les
sbb
lods
mov
outsb
dec
out
fmul
add
cmovne
jecxz
pop
cmpsb
sbb
sarb
inc
shlb
mov
cmp
mov
inc
push
xchg
mov
pushf
frstor
je
push
and
mov
jp
leave
ljmp
pop
les
adc
sbb
je
test
ret
mov
and
mov
pushl
mov
js
adc
cmp
fistpll
pop
mov
push
js
sub
sub
cwtl
cli
je
pop
hlt
loopne
das
movsb
xchg
outsl
test
hlt
cmp
adc
fistpl
pop
iret
or
lea
fists
and
movsb
jb
pop
xchg
sub
cmp
scas
in
movsl
data16
pop
sbb
cmp
cmp
rcll
dec
into
int
jp
jmp
jmp
sbb
outsb
addr16
std
xchg
inc
rolb
lods
jl
pop
lret
push
mov
rcrl
sbb
sub
cmp
mov
int
cmp
les
pop
or
xchg
std
lcall
ss
int
xchg
aam
sbb
ja
add
pusha
add
dec
in
adcb
jo
mov
sbb
movsb
and
xchg
imul
iret
frstor
dec
xor
pusha
test
mov
ret
and
rep
mov
test
sbb
xchg
arpl
daa
inc
adc
cmp
mov
or
aaa
jnp
pop
inc
int
sbb
in
adcb
movsl
pushf
test
push
xchg
jno
outsb
add
mov
aaa
out
jb
dec
jecxz
or
add
scas
adc
test
push
rcrb
mov
and
inc
inc
aaa
mov
inc
or
cmpsb
test
jle
into
pop
fisttpl
jnp
cmp
cli
cmp
shrb
jge
call
mov
das
jnp
pusha
dec
mov
mov
xchg
dec
ficoms
dec
int
imull
lahf
in
sub
adc
mov
pop
push
xlat
imulb
add
les
mov
adc
ljmp
popf
mov
dec
or
mov
dec
inc
lods
mov
pop
push
and
push
cmp
push
adc
xlat
xchg
jnp
mov
push
gs
out
add
sbb
leave
cmp
add
sarb
fistpl
lods
jmp
jge
jl
inc
inc
mov
int
dec
adc
inc
xchg
cmp
ljmp
add
andl
fistpl
dec
std
inc
mov
cmpl
test
mov
or
and
lods
dec
sub
stos
pop
sbb
in
jno
and
mov
dec
fwait
imul
scas
js
shll
or
push
pop
xchg
pop
xor
and
pop
inc
and
lods
outsl
pop
les
xlat
lcall
push
add
sahf
cmp
xor
jb
jle
cmp
pop
rolb
ret
cmp
or
aam
jbe
outsl
fwait
cwtl
pop
int3
add
push
jno
aam
and
pusha
repz
jb
fisubs
mov
mov
adc
imul
or
fs
hlt
leave
adc
outsb
pop
call
rcll
sbb
dec
mov
movsl
sbb
shlb
sbb
mov
mov
lods
and
les
ljmp
sub
in
es
testl
loopne
push
lock
mov
lea
jmp
fcomps
and
repnz
adc
outsb
xor
loop
nop
out
jmp
mov
enter
mov
dec
push
lret
sarb
fcmovbe
and
jae
dec
lret
daa
aas
ficompl
cltd
cmp
into
xor
sub
rcrb
loope
jp
and
cmp
nop
out
xchg
mov
adc
clc
test
aas
cmp
add
xor
pop
and
xchg
testl
aaa
dec
ror
push
aam
mov
mov
std
ss
fisttpl
cmp
push
pop
and
add
rolb
dec
sahf
push
sub
inc
sti
pop
shrl
arpl
push
jecxz
das
xor
mov
fwait
adc
push
orl
aad
sub
add
fsts
or
xor
mov
inc
notl
cmpsl
xor
inc
std
jae
sbb
leave
repz
dec
js
aam
inc
les
icebp
mov
inc
and
je
sbb
jecxz
rol
xor
and
lahf
mov
push
int3
ss
sub
lret
inc
jl
jns
xor
test
sti
jge
add
shrb
and
mov
mov
sub
imul
nop
adc
inc
mov
iret
into
mov
jne
mov
aaa
or
push
sbb
mov
push
sbb
pop
in
subl
and
mov
adc
or
aam
jbe
jo
xchg
add
mov
in
xchg
cmp
add
and
cwtl
mov
inc
mov
xor
lock
mov
mov
dec
and
mov
fistps
out
arpl
mov
dec
or
or
xlat
jp
iret
jl
add
inc
pop
sub
pop
ja
mov
pusha
xchg
test
and
insb
sub
popa
outsl
fcoml
out
mov
clc
inc
jl
lods
add
pop
add
fwait
nop
and
fbld
daa
inc
pop
mov
cwtl
adc
pop
sub
loop
or
sub
jne
jmp
mov
test
lret
aas
shl
adc
and
icebp
mov
rcll
and
jae
mov
loope
push
mov
pushf
pop
xchg
push
sub
test
call
pop
roll
or
repz
imul
pop
mov
add
inc
dec
add
std
cmp
scas
insb
int3
sub
repz
repz
not
test
adc
jp
or
xor
mov
and
mov
adc
pop
std
add
cld
rcrb
pop
xchg
push
fpatan
and
in
lcall
mov
adc
sub
or
sbb
pusha
ret
mov
repz
jae
xchg
xchg
in
dec
adc
das
dec
pop
lods
rolb
bound
xor
dec
inc
xchg
dec
lahf
arpl
ljmp
mov
inc
push
inc
addr16
push
js
js
sti
cmpsl
pop
testb
sub
dec
nop
arpl
je
sbb
xchg
ret
adc
xor
test
std
sbbl
or
cmp
cs
pop
push
testb
mov
jb
jbe
mov
int3
pop
icebp
je
push
icebp
cmp
ss
and
cmp
gs
push
adc
mov
inc
cmp
roll
mov
add
push
test
xor
and
cmp
data16
or
mov
mov
pop
faddl
rorb
mov
call
push
push
and
sub
stos
jp
mov
addl
enter
mov
and
push
popf
jno
and
lods
xor
dec
test
pusha
frstor
and
push
inc
jg
outsl
aas
test
mov
jbe
xchg
idiv
dec
leave
mov
lahf
jae
jecxz
mov
mov
inc
cltd
aam
cli
enter
inc
es
xchg
je
jb
push
orl
lcall
cmp
push
sbb
xor
ficomps
pop
push
push
sub
cli
cmp
mov
cltd
pushf
xor
lods
xchg
cwtl
push
inc
sbb
pop
pop
inc
xchg
dec
add
in
dec
sub
xor
adc
mov
sub
push
or
icebp
adc
add
adc
fildll
in
aad
pop
add
jne
pop
repz
int3
sbb
lret
sbb
xor
imul
cmp
mov
adc
mov
paddusb
xor
and
movl
cs
andb
push
push
in
xchg
adc
push
add
sti
push
add
push
fstl
ds
mov
adc
pop
inc
add
out
mov
and
mov
jmp
mov
insb
push
inc
sub
cmpsl
dec
adc
jecxz
jno
dec
and
cmp
je
ds
aas
inc
ret
push
shrb
icebp
sub
lcall
fdivl
add
icebp
push
sarb
xchg
pop
push
mov
mov
subb
push
aam
je
add
loop
adc
xchg
ror
cmp
jb
sbb
mov
addr16
pop
jbe
xchg
data16
jne
push
mov
les
enter
inc
sub
mov
in
in
xchg
jp
mov
mov
and
pop
inc
xsavec
stos
rcrl
mov
cmp
sub
mov
sub
adc
iret
add
push
lods
pop
jp
movsb
daa
cmp
push
pop
mov
xchg
aas
dec
repz
stos
mov
je
jne
aas
aam
inc
stos
mov
mov
mov
stos
jbe
push
out
cmp
mov
inc
divl
mov
in
lods
lahf
xchg
adc
fwait
pusha
pop
addr16
dec
lahf
pop
xchg
out
mov
das
dec
and
push
std
je
mov
sbb
ja
or
push
pop
cmpsl
sbb
mov
arpl
aas
xor
cltd
xchg
pop
sbb
imul
pusha
inc
std
jns
mov
mov
cs
scas
inc
test
cmp
or
pop
lods
fmull
lea
and
outsl
cmp
mov
int3
in
mov
mov
xchg
clc
mov
sbb
cmp
push
or
mov
cmpsl
rolb
es
pusha
or
sarl
std
in
pushf
jb
movsl
loope
int3
insl
in
adc
sbb
ljmp
xchg
dec
insl
push
jg
inc
mov
push
data16
mov
int
mov
hlt
ljmp
js
lods
scas
in
arpl
mov
lahf
sti
xor
out
and
pop
scas
ss
mov
ror
cmc
stos
in
mov
xchg
cmp
and
fildl
dec
push
idiv
lock
jo
sbb
cmp
ret
sub
pusha
outsl
pop
inc
js
out
jb
cmc
sti
lds
insb
lret
inc
testl
jl
xlat
mov
int
inc
adc
inc
sti
stos
xor
push
dec
cmp
or
pop
xor
dec
inc
mov
cs
jp
jmp
xlat
jmp
rcr
das
inc
adc
or
in
aad
pop
push
fwait
and
sahf
cltd
mov
xchg
inc
fsubrs
add
clc
loop
adc
scas
sub
xchg
out
hlt
or
and
sahf
mov
mov
lret
pop
push
pusha
fmuls
ljmp
fildl
loopne
ret
outsl
stc
cmp
aad
pop
push
add
stc
jb
mov
add
idivb
popf
cmp
jmp
ss
adc
mov
nop
push
xchg
icebp
inc
fincstp
dec
por
xchg
inc
mov
mov
pop
xchg
clc
lahf
aas
xchg
cmp
dec
test
scas
fsubl
push
push
sbb
and
loop
jno
mov
sti
cmpsb
xlat
lcall
ja
jmp
test
rolb
lcall
stos
mov
cmp
pop
out
xor
cwtl
add
cmp
fcompl
sbb
sbb
stos
test
adcb
xor
sub
pop
ljmp
and
pop
fucom
popa
jbe
sub
sbbb
sbb
sub
lret
inc
mov
pop
xchg
mov
bound
sahf
ret
or
dec
mov
xchg
adc
mov
fs
sub
and
out
stc
sti
loope
pop
push
pop
fs
jp
sbb
mov
das
imul
mov
test
hlt
xor
xor
test
fs
jmp
aaa
add
repnz
iret
mov
fcoml
mov
and
test
inc
mov
lea
dec
mov
xor
fistps
aas
daa
mov
sub
aaa
inc
mov
sub
daa
arpl
lds
push
pop
fwait
and
stos
pop
fsubrs
mov
mov
xchg
in
cmp
stos
xor
cmp
fwait
pop
dec
int3
pusha
test
scas
andl
sbb
fnstcw
dec
stc
dec
xchg
fdivl
dec
jae
je
xor
pushf
inc
ficoml
sbb
mov
out
lods
int3
mov
add
repnz
aaa
fcompl
xlat
jo
push
pop
lret
popf
jae
cmp
mov
and
nop
xchg
inc
xor
pop
ljmp
addr16
mov
ja
xor
sahf
or
mov
jecxz
mov
pinsrw
jbe
or
int
movsl
sbb
or
fwait
sbb
inc
addr16
push
clc
lea
xchg
test
jae
outsl
xor
mov
push
sbb
imul
mov
jae
repz
sub
adc
or
dec
sub
sahf
and
add
les
aad
cmp
sub
or
dec
test
out
push
movsl
sahf
andl
push
loopne
out
cmp
stos
mov
mov
outsl
stos
pop
xchg
dec
cmove
xor
aam
dec
mov
int
cltd
sub
mov
test
xorb
in
mov
pop
or
shl
imul
aam
push
or
fiadds
cmp
punpckhbw
movsb
scas
in
mov
lret
arpl
mov
sbb
xchg
mov
jbe
in
mov
push
shll
js
adcl
scas
test
add
ret
lock
cmp
add
out
push
fsub
pushf
int
call
pop
lahf
xchg
mov
inc
cmp
sub
mov
repz
dec
xchg
test
bound
mov
call
and
cmpsb
mov
push
push
push
jmp
sbb
in
lods
adcl
lret
in
fidivrs
fwait
cmpsl
loop
lret
inc
pusha
popa
stc
subb
cmp
pop
arpl
push
rcll
outsb
mov
pop
mov
jno
into
mov
dec
aas
mov
or
gs
sub
popa
mov
xor
jb
jecxz
sbb
sqrtps
arpl
lds
int3
call
pop
cmpsb
rclb
data16
ret
xchg
stc
int3
and
jne
inc
or
xchg
cmp
sti
sti
cmp
imul
xchg
movl
mov
cmp
imull
xorl
xchg
ljmp
or
mov
pop
sub
mov
sub
mov
aad
cmp
or
sbb
pop
js
daa
sbb
pop
mov
inc
or
jo
jae
notl
or
adcb
int3
xchg
mov
mov
enter
dec
shlb
rclb
aad
dec
pop
mov
and
mov
js
adc
add
mov
outsl
enter
aad
into
movsb
push
adc
push
xchg
lahf
xor
je
xchg
cwtl
fdivrs
pop
push
dec
popa
push
cmp
mov
lods
ret
imul
or
mov
pop
lods
repz
push
xchg
sub
int3
adc
mov
out
lock
push
scas
cmp
test
push
cmp
cmp
sub
adc
push
and
loope
mov
mov
dec
push
mov
notb
pop
aaa
push
repnz
sub
fbld
mov
arpl
inc
adc
and
push
movsb
cwtl
divb
adc
aaa
inc
push
dec
mov
arpl
inc
in
and
xlat
push
ljmp
adc
ss
lcall
fs
pop
mov
pop
loop
sarb
cs
inc
and
cld
inc
mov
pop
and
fcompl
stos
pushf
push
pop
or
cmp
lcall
lock
mov
int3
push
ja
xchg
dec
and
lcall
push
shrl
push
push
fidivl
and
inc
or
add
int3
xorl
lods
pop
or
mov
xchg
pop
and
and
ret
and
or
push
mov
repnz
add
mov
adc
rcl
push
sbb
cmp
mov
fnstcw
mov
mov
xor
pop
negl
cmp
icebp
cmp
mov
sub
xchg
pusha
ret
ret
fwait
push
aad
sbb
in
add
xlat
xcrypt-ofb
cmpsl
sub
or
popf
sub
sub
add
or
mov
int3
cmp
push
aas
out
out
add
inc
mov
sub
sub
int
jmp
or
cltd
pop
push
xchg
jbe
push
test
aaa
push
ror
inc
dec
cmpsb
pushf
xlat
inc
jno
pavgw
fxch
test
cmpsb
std
movsb
sub
sbb
push
inc
test
dec
mov
decl
mov
inc
rclb
jne
out
adc
lret
cwtl
sti
sub
lds
rorl
test
mov
test
jns
stos
fistpll
mov
test
jne
inc
mov
jmp
fsts
addl
mov
adc
jmp
xchg
jae
mov
gs
mov
jmp
pop
out
leave
into
ficoms
lods
dec
sub
mov
cltd
jge
pop
mov
subb
add
pop
repnz
mov
mov
out
pop
pop
xchg
sub
lock
or
lds
lods
cmp
and
les
in
jmp
in
pop
lds
jle
mov
mov
test
rcrb
adc
adcb
xor
inc
ficoms
sub
cmpb
jae
mov
mov
push
jle
add
aaa
shlb
stc
mov
sahf
insb
mov
loopne
cmp
xor
dec
cmp
cmp
inc
mov
sahf
imul
pop
aaa
mov
sub
lock
dec
xor
std
cmp
pusha
adc
imul
cmp
push
pop
xor
adc
sub
lods
adc
mov
cs
arpl
mulb
fiaddl
cmp
xor
and
pop
jp
push
or
cmp
mov
in
scas
cmp
xor
push
rorb
leave
enter
ret
sub
outsb
ret
mov
mov
ret
push
inc
lods
adc
sti
cmp
lret
jbe
jno
jns
cwtl
sub
mov
add
pop
inc
das
jg
dec
fldt
pusha
cmp
cld
push
jp
add
sbb
fs
jl
rorl
push
xchg
movsb
xor
pop
gs
xchg
into
int
loope
ds
pusha
pop
mov
and
mov
es
fcoms
pop
addl
loop
dec
add
lods
sub
cld
push
push
and
pop
out
adc
adc
fwait
mov
not
test
cli
sahf
std
inc
mov
cmp
dec
mov
inc
lret
arpl
shr
icebp
insl
mov
stc
daa
add
cmp
xchg
push
pop
fistl
lds
cltd
sub
lcall
mov
mov
shll
pushl
inc
pop
mov
inc
popf
jns
mov
jle
stc
adc
sti
addr16
and
cmp
jno
ret
lods
cmp
ret
mov
xor
bound
sub
aaa
les
inc
jnp
ret
movsb
enter
jae
imul
adc
xchg
jg
jg
ror
sahf
jno
xor
mov
loopne
sub
xchg
ja
rcrb
mov
xor
jb
subl
pop
ja
pop
dec
jae
add
pop
cmp
pop
test
mov
push
jmp
lods
fimull
pop
or
leave
inc
inc
out
sub
insb
push
mov
stos
subb
jmp
ljmp
jl
cmpsl
lret
fiadds
push
mov
mov
lods
sbb
dec
dec
fmul
mov
inc
dec
outsl
mov
insl
cltd
int
enter
cmp
adc
rolb
and
fwait
iret
dec
fbld
push
addb
mov
movsb
out
lahf
pop
jp
insb
out
int3
jl
add
and
push
jg
or
loopne
dec
leave
aam
negb
inc
lods
sbb
jp
sub
cli
cli
xchg
xchg
mov
adc
fimuls
mov
mov
push
hlt
jne
out
loope
loopne
popf
mov
xchg
ficomps
lds
cmc
sub
xchg
xchg
jo
ss
fwait
push
ds
push
xor
add
mov
orb
fs
jg
out
jge
add
mov
mov
sub
out
iret
mov
jle
jp
pop
dec
aam
push
mov
xlat
xchg
adc
dec
push
movsb
or
inc
jge
pop
aam
fidivl
out
arpl
aas
fcmovb
xchg
sub
and
jmp
test
cld
mov
pop
xchg
aas
js
test
data16
rorl
das
idiv
push
add
mov
and
mov
ja
mov
ds
lock
mov
outsl
inc
pop
lcall
xchg
dec
add
cmp
add
addr16
add
add
inc
test
mov
and
cmpb
dec
data16
pop
dec
nop
add
jge
into
jle
jp
movzbl
sbb
outsl
in
movsl
dec
mov
imul
pop
mov
mov
cmp
dec
push
dec
sbb
repnz
dec
xor
shrl
adc
sub
inc
pop
push
pop
rol
push
lock
pop
divl
cwtl
jge
mov
sbb
punpckhbw
pop
outsl
push
movsl
icebp
cmp
mov
mov
testb
pop
hlt
jne
popf
adc
push
jbe
lret
roll
cmp
repnz
jae
movsl
je
or
xchg
aas
in
xlat
lea
and
cwtl
mov
xchg
jle
sub
rcll
pushl
add
popa
push
mov
insb
and
push
pop
fadds
pop
out
mov
ss
xor
pop
jae
inc
adc
lcall
dec
pop
jp
sub
out
hlt
push
mov
sbb
mov
sarl
sbb
push
call
subl
add
inc
cwtl
int3
movsl
and
xor
int3
inc
pop
jg
mov
fs
insl
gs
and
mov
xor
mov
sub
clc
xchg
adc
lahf
xchg
daa
or
mov
pop
jmp
subb
pusha
gs
cmp
sarl
sbbl
mov
addr16
pop
add
or
data16
jecxz
loopne
jecxz
mov
aad
push
dec
sbb
add
pop
pop
push
mov
out
fs
jno
and
pop
push
sbb
pop
add
hlt
out
xchg
scas
mov
in
out
or
movd
mov
stos
cmpsl
addr16
out
js
xor
mulb
shrl
jne
mov
lds
xchg
cmp
ret
jbe
push
pop
aam
lea
jmp
cmpsl
arpl
xchg
add
sbb
and
clc
gs
push
add
inc
push
jl
shll
out
add
mov
mov
pop
jg
fmuls
xchg
iret
pop
rol
fs
add
in
sti
int3
out
cmp
mov
lods
cmpsb
outsl
roll
sub
cs
neg
rcll
adc
imul
sbb
rcrb
cmp
sbb
adc
xor
mov
xlat
mov
cmp
dec
mov
imul
cmp
jge
loopne
sub
inc
sbb
nop
xchg
push
rcrb
xchg
xchg
pop
aam
xchg
pop
xor
stos
enter
pop
loopne
or
cmpsb
adc
scas
jle
sbb
mov
out
adc
dec
outsl
mov
jecxz
sbb
push
mov
leave
aaa
push
mov
ss
daa
arpl
adc
xchg
dec
imul
pop
jg
je
lds
mov
mov
addr16
xor
add
mov
syscall
adc
and
out
jo
loopne
sbb
icebp
imul
cmp
sub
push
lahf
jge
or
clc
je
int
dec
repz
adc
sarl
bound
or
pop
test
subb
insb
insl
xorb
loopne
lret
xlat
xchg
sti
fs
inc
repnz
adc
jne
movsl
mov
bsf
push
jmp
pop
and
popa
mov
sub
add
cmc
sub
and
fisubrs
les
or
sbb
adc
jmp
push
mov
cmpsl
push
call
mov
push
mov
addr16
stos
arpl
pushf
test
lock
mov
shlb
and
adc
movsl
pop
jae
out
dec
adc
in
iret
or
xlat
pushf
mov
int
icebp
cmpl
sub
stos
lret
mov
mov
and
pop
adcb
jb
mov
adc
test
clc
xchg
lods
and
pop
cmc
aam
inc
rorl
inc
xchg
mov
pop
aad
imul
loopne
sti
adc
andb
pop
xchg
push
mov
adc
mov
pop
dec
fstpl
fsub
popf
sbb
mov
mov
ljmp
push
dec
xor
adc
and
push
addr16
add
add
jae
fldcw
sbb
sbb
scas
mov
pop
out
jg
pop
fcoms
rcrb
mov
ja
and
jae
add
push
iret
imul
sub
push
adc
scas
out
adc
mov
pop
aas
xor
adc
sti
mov
push
add
and
xor
dec
andb
insb
add
dec
pushf
sub
ss
inc
mov
push
push
adc
stos
sbb
cli
xchg
xchg
dec
mov
inc
xchg
fadd
popf
and
ljmp
cmp
outsl
outsl
negl
pop
push
aas
mov
movsl
and
test
mov
stos
push
push
push
xor
jo
shl
mov
test
sar
pushf
ret
push
mov
adc
cmp
dec
jp
das
in
or
iret
jmp
in
mov
lret
xor
mov
stos
inc
and
cltd
mov
iret
ret
adc
daa
loopne
adc
adc
dec
cmp
int3
fisubl
arpl
jle
test
rcl
push
shl
sub
fwait
mov
pop
adc
outsl
lea
cwtl
sub
cmc
adc
or
or
cmp
je
push
das
pop
fsubl
scas
addb
es
out
adc
push
addr16
pop
fimuls
inc
pop
sub
and
mov
fstpt
rcll
bound
cmovp
xorb
add
sbbl
adcb
insb
mov
leave
cmp
push
mov
jmp
dec
add
push
dec
pop
scas
js
out
adc
es
stc
xor
mov
iret
enter
and
mov
push
lds
mov
sub
in
mov
int
mov
shrl
loop
mov
fdivr
push
mov
mov
fidivs
push
bound
mov
fsubrl
rcll
int3
loope
push
leave
repnz
push
xchg
xchg
ja
ficompl
cltd
xor
dec
das
inc
cmpsb
dec
pop
lcall
push
sbb
mov
aaa
push
and
xor
inc
jbe
repz
rcll
pop
sub
cmp
xor
adc
sbb
push
jne
and
loopne
pop
or
mov
push
inc
pop
sahf
out
and
sbbb
adc
sub
rorl
sbb
add
jae
jecxz
add
push
and
sub
and
mov
leave
pop
dec
and
xor
aad
push
add
pusha
ljmp
jnp
or
adc
pop
xchg
fdivs
mov
mov
cmc
inc
shlb
jmp
and
sub
aaa
clc
fcmovu
mov
adc
mov
push
xor
xchg
lds
aas
cmc
push
xchg
cwtl
fcomps
out
cmpsl
lret
popf
lea
mov
ss
push
jnp
mov
and
sub
push
lret
popf
mov
ficoms
push
jecxz
mov
push
lret
jnp
dec
shlb
mov
outsl
add
sub
data16
inc
lcall
push
nop
lock
or
jecxz
int3
sub
inc
or
shl
jp
outsl
xor
je,pn
les
xor
setnp
xchg
lods
bswap
faddl
push
fwait
outsl
mov
sub
add
repz
adc
repz
mov
movntps
xchg
ret
ficomps
jnp
xor
scas
cld
test
push
sub
in
aad
jmp
cmpb
lds
filds
repnz
dec
pop
push
lds
or
cmp
mov
push
xchg
iret
fcmovnu
loopne
mov
pop
sti
sahf
jg
or
icebp
cmp
in
push
insl
sbb
rcrl
dec
jecxz
xchg
imul
mov
leave
adc
int
or
gs
je
push
jecxz
mov
ds
and
xchg
mov
lret
cmpsl
mull
adc
jae
pop
pop
in
aam
in
or
push
lret
imul
aad
movsl
cmp
lock
jg
mov
mov
das
pop
cwtl
adc
jp
jmp
dec
inc
push
mov
cmp
mov
into
icebp
xchg
aam
or
push
mov
ret
adc
clc
push
sbb
xchg
mov
pop
in
xor
mov
jge
int3
inc
sub
and
mov
pop
scas
mov
inc
ror
lret
xor
cmpsb
xor
sub
mov
test
pop
push
aas
and
dec
shr
mov
fsubrp
xor
scas
push
mov
cwtl
pop
jno
jb
dec
cmp
mov
dec
repnz
pop
xchg
lods
xchg
or
ss
and
into
lods
out
divb
adcb
pushf
cmc
jns
push
cmpsb
fildll
jnp
dec
sub
jbe
insl
imull
sbb
pop
xchg
shll
mov
arpl
repnz
sub
xlat
or
mov
fwait
add
stc
bnd
aas
dec
xchg
sbb
inc
pop
das
and
xchg
pop
or
push
sbb
test
add
lock
xchg
push
mov
dec
or
loop
icebp
cmp
pop
ret
xchg
mov
or
dec
dec
or
dec
and
inc
in
sbb
aam
push
mov
inc
lret
addb
in
dec
xchg
or
or
imul
mov
divl
gs
std
and
pushf
sbb
cmp
or
shl
dec
dec
fildl
xor
push
popf
sahf
stos
call
nop
stos
lock
lahf
cmp
imul
aaa
imul
jmp
inc
addr16
push
lods
jge
mov
or
nop
lahf
push
add
out
lds
sbb
stc
push
das
xchg
call
inc
clc
and
movsb
in
movsb
jb
push
xor
stc
adc
pop
add
dec
sub
sti
test
fs
out
inc
in
mov
sbb
mov
rol
jo
jno
cmp
bound
fwait
insb
dec
and
mov
push
ror
sub
push
mov
out
stos
fstpt
add
das
sbb
jmp
or
arpl
aas
adc
incb
push
sti
push
lods
and
pop
decb
insb
or
inc
dec
call
push
lods
xlat
negb
mov
imul
add
cld
pop
inc
scas
adc
sbb
or
cwtl
adc
loopne
sbb
mov
movsb
inc
fidivl
sbb
add
sub
jnp
ljmp
lds
out
les
repnz
sti
add
and
mov
out
leave
cmp
mov
addr16
xchg
mov
int
cs
jnp
pop
cli
xor
and
dec
adc
bnd
out
icebp
arpl
andb
xchg
add
int3
xor
or
inc
hlt
das
xor
xchg
out
pusha
lods
add
iret
add
cmp
dec
fiaddl
test
add
xlat
scas
in
jp
nop
or
stc
xchg
mov
pop
cmpsl
pop
jl
pop
inc
mov
outsb
cmp
cmp
cmp
xchg
orl
adc
es
inc
stos
stos
mov
sbb
mov
popf
dec
pop
cmc
cmp
cmp
sub
popa
lret
jae
inc
testb
ret
fmuls
fptan
jecxz
pop
mov
push
adc
fldl
out
test
int
lret
mov
mov
add
inc
push
or
pop
call
cli
pushl
push
out
add
cmp
test
jmp
add
setl
cmc
jne
sub
daa
dec
push
iret
jecxz
cwtl
dec
mov
cvtpi2ps
mov
insl
das
mov
sbbl
int
iret
inc
cmp
xlat
inc
mov
rorl
dec
loope
or
jae
sbb
aam
and
inc
add
add
pop
pusha
xor
pop
dec
mov
lahf
sbb
js
testb
sub
cmpsl
lret
mov
subb
imul
rcrl
inc
jg
push
push
cmp
dec
xchg
dec
aad
in
pop
or
dec
test
imul
negb
jb
inc
shlb
cmp
into
xchg
pop
es
pushl
shlb
adc
mul
dec
int
repz
mov
clc
inc
pop
mov
mov
jl
addl
push
test
rep
sub
push
stc
out
cmp
and
xor
jb
fstpl
mov
xchg
pop
jb
push
dec
mov
push
pop
sub
sti
subl
shlb
sbb
in
push
xor
push
dec
repz
xor
rcrb
ficompl
sub
cmp
pop
cmp
icebp
mov
std
add
mov
pop
std
ret
rcl
push
pop
in
push
sbb
in
adc
adc
sarl
ss
lods
fnstenv
or
mov
testb
loope
add
sbb
enter
sbb
pop
xlat
jp
into
sub
notb
stc
rcr
add
cld
push
dec
rcrb
aaa
notb
mov
adc
or
cli
inc
movsb
xchg
js
xor
repz
xor
sub
ficoms
mov
or
sbb
stos
test
das
arpl
mov
pop
sub
mulb
sub
sbb
test
movsl
notl
aas
jg
add
sbb
mov
xchg
sub
jbe
jg
into
jne
xchg
jp
inc
mov
mov
out
aam
xor
sbb
sbb
or
pop
xor
aaa
insl
push
clc
gs
in
fcompl
nop
inc
xchg
or
lret
les
fs
cmp
js
push
cmp
sub
jp
gs
lahf
xor
stos
stc
faddl
inc
cmp
dec
in
orl
jbe
or
insl
xchg
gs
push
jae
push
je
dec
fisubs
jae
push
scas
ffreep
adc
fisttpll
or
add
scas
fmul
movsb
inc
into
xchg
adc
fwait
scas
xor
push
icebp
je
xchg
xor
test
lock
arpl
mov
incb
push
es
jge
das
push
mov
adc
shrb
and
add
or
jle
loope
add
das
mov
push
pop
getsec
mov
jmp
cmp
lds
sti
rorb
out
push
dec
mov
sarl
dec
pushf
pusha
bound
scas
in
dec
fwait
adc
sti
das
gs
in
sbb
lods
push
xlat
dec
fstps
call
mov
xchg
xor
loop
stc
test
fdivs
xor
in
xchg
sbb
aad
daa
iret
mov
das
inc
movsb
mov
adc
jp
repz
and
ja
cmp
jnp
mov
adc
rcr
cmp
stos
stos
jno
movsb
sbb
sub
adc
sbbl
fs
mov
test
xchg
fisttps
cld
jmp
dec
mov
pop
xor
lods
or
das
andb
and
mov
sub
add
xor
mov
fucomip
fcmovb
cmp
sbb
mov
or
das
jge
or
mov
cmpl
mov
in
insb
sub
xor
mov
fs
mov
loopne
mov
cmp
mov
push
cli
pop
dec
int
mov
mov
rcrb
jp
push
je
lds
add
jb
mov
icebp
cltd
or
arpl
dec
xchg
jbe
pop
insl
jae
cltd
outsl
adc
xchg
push
dec
mov
jmp
mov
and
idivb
lahf
int3
negl
gs
push
and
mov
ret
gs
fimull
arpl
mov
mov
pusha
cmpsl
pop
sub
xor
or
pop
insb
hlt
mov
cwtl
jb
sub
jb
lea
jb
jg
xchg
push
cmpb
mov
and
sub
loope
ret
movsb
in
dec
inc
loopne
sbb
pop
call
nop
loope
and
mov
sbb
shrb
mov
pop
mov
jecxz
mov
inc
fcomps
add
in
dec
loope
adc
mov
cltd
jecxz
lcall
adc
xchg
lods
imul
mov
je
jle
cs
cmpsb
fistpl
mov
xchg
enter
ljmp
adc
repnz
lahf
out
jbe
fistl
imull
or
sub
jle
rcrb
push
dec
jne,pn
ja
xchg
mov
jl
mov
test
mov
sbb
lahf
mov
mov
lret
push
out
sbb
test
rolb
aad
aas
push
jl
pop
sub
xor
js
imull
jno
add
dec
xor
dec
mov
call
push
rolb
sub
aaa
cltd
fiadds
dec
and
add
fnstsw
jo
and
movsb
repz
movsl
es
mov
testb
sbb
sub
rcrl
rcr
mov
push
ds
lret
pushf
out
pop
pushf
sub
mov
fwait
pop
gs
sbb
xchg
push
imul
dec
fwait
adc
arpl
test
jae
adc
dec
nop
test
js
cmc
insb
sub
pushf
jbe
shll
in
mov
and
je
dec
cmp
scas
push
mov
ret
test
jge
xchg
daa
mov
shlb
ror
push
add
aam
or
sahf
xor
into
sbb
jo
mov
push
xchg
pushf
lds
jmp
pop
pushf
sbb
pop
ror
push
mov
gs
aam
jns
xlat
inc
aas
and
ljmp
mov
fmul
scas
adc
mov
leave
in
and
adc
notb
repz
mov
jg
cmp
lock
jl
popf
mov
sub
arpl
mov
pop
push
mov
sub
rorb
enter
xchg
cmp
pop
aas
jne
fcomp
ret
pop
push
dec
push
leave
xor
mov
cmp
es
bound
xchg
inc
sarl
pop
std
pop
push
into
movsl
jge
roll
ret
sti
dec
shlb
xor
xchg
cmp
sbb
loop
rorb
lods
roll
jae
pop
sub
cwtl
mov
sahf
inc
int
xchg
or
out
add
or
jne
jmp
ret
dec
mov
xor
mov
into
add
push
inc
das
stc
daa
lahf
push
or
test
cmp
sbb
dec
xor
inc
or
test
mov
ret
inc
jecxz
sub
xor
repz
mov
cli
and
push
lret
nop
lock
xchg
sbbb
inc
les
mov
xchg
sbb
and
test
sub
insl
daa
xor
xchg
shrl
adc
pop
push
or
imul
mov
andb
insl
in
cmp
rol
mov
je
cs
mov
push
loope
sub
cltd
loope
ja
dec
inc
lret
into
fwait
mulb
lret
pop
scas
call
inc
les
jge
and
push
mov
hlt
js
lret
aas
mov
popf
xor
xchg
es
out
inc
testl
lods
daa
enter
push
loopne
flds
es
sbb
fdivrl
out
push
xchg
in
rcrl
and
test
loop
mov
daa
jmp
pxor
adc
imul
adc
mov
xchg
push
daa
cltd
sbbb
aas
outsl
mov
push
xlat
pop
push
jg
mov
clc
inc
orl
pop
daa
xlat
add
enter
iret
aad
daa
in
andb
sbb
sub
mov
jbe
popf
sub
inc
outsb
pop
or
test
xchg
idiv
imul
sti
mov
jmp
jnp
fwait
sahf
cs
mov
or
and
fistps
aam
dec
sub
les
inc
and
adc
push
call
je
jnp
cmc
mov
sarb
adc
adc
push
xchg
das
dec
pop
xchg
stos
cmp
xchg
push
jg
test
pop
adc
pop
ljmp
or
loopne
stos
test
ja
out
stos
pop
cwtl
cli
jae
or
idiv
rolb
scas
aaa
xor
sbb
cmp
add
jg
mov
mov
mov
jnp
adc
inc
movb
cmp
mov
out
lea
mov
cmp
inc
xchg
lods
jge
pop
jb
adc
jg
ja
push
adc
mov
add
push
cmp
decb
leave
sub
imul
mov
int3
popf
nop
jecxz
pop
jecxz,pt
orl
xor
inc
pop
push
shrb
inc
and
mov
test
pop
pop
xchg
iret
add
add
les
sub
sub
andb
xor
and
rolb
push
mov
sarl
sbb
xchg
out
mov
cmc
jae
js
push
push
cmp
cltd
rcrl
xchg
push
int
xchg
push
cld
arpl
mov
dec
cli
loopne
or
sbb
jg
cmp
jae
out
pop
iret
xor
mov
xlat
nop
jecxz
pop
pop
jecxz
subb
testl
push
and
mov
loopne
jmp
in
mov
or
sbb
js
popa
mov
or
imul
jae
nop
out
sbb
repz
aas
inc
cltd
mov
lcall
repnz
add
xor
xchg
jmp
daa
int3
adc
cmp
sub
ror
mov
or
mov
sbb
xor
out
out
loope
or
enter
jle
mov
dec
ss
rcrl
adc
pushf
divb
fwait
push
test
inc
xchg
pop
cmp
in
push
sub
outsb
sub
add
cmp
xor
lock
adc
adc
mov
xor
aad
dec
pop
les
push
add
jbe
jecxz
cmpsb
bswap
xchg
mov
sub
add
pop
shr
arpl
es
sbb
es
and
push
mov
push
inc
imul
sbb
jecxz
push
cmp
test
inc
out
cmp
iret
xchg
je
cmc
loop
fists
loop
inc
inc
inc
jbe
arpl
movsl
xor
adc
cmp
and
mov
xor
test
pop
mov
test
xor
pusha
add
mov
push
fdiv
ficoms
push
test
fistpl
mov
jb
jmp
shlb
test
inc
dec
ret
imul
stos
sbb
mov
xor
mov
stos
mov
push
rorl
mov
add
loope
push
sbb
addr16
mov
lea
clc
nop
hlt
xor
call
lea
adc
sbb
jne
ficompl
adc
aaa
add
mov
fs
push
rcr
jno
fsubrl
mov
xchg
add
cmc
repz
daa
or
push
out
pop
in
jp
jnp
pusha
push
xor
sahf
mov
popa
test
in
xchg
cltd
xor
ja
in
mov
out
sub
rolb
mov
lea
pusha
push
jo
inc
out
jle
mov
xor
add
and
loopne
sub
push
arpl
mov
ja
icebp
test
fidivrs
aam
jnp
daa
dec
lea
jns
sbb
call
out
adc
subl
xchg
inc
jle
fwait
sub
cltd
or
cmp
lret
cltd
jle
and
test
and
cwtl
iret
scas
mov
popa
mov
fwait
pop
cmp
fsts
cmc
pop
mov
loopne
mov
pop
fs
js
mov
stc
sub
fsubrs
insl
mov
mov
mov
cmp
or
cmpsl
and
push
call
cmpsl
shrl
addr16
cmpsb
cmp
add
xchg
push
cmpsl
cmp
or
and
imul
clc
outsl
add
mov
mov
inc
fucom
testb
or
sub
hlt
out
add
jbe
ljmp
dec
mov
add
int3
test
adc
enter
leave
lret
daa
add
mov
inc
fsts
and
mov
dec
jo
push
pop
cmp
sub
fsubs
fstpt
jnp
repnz
mov
addb
ss
adcl
fsubl
mov
loope
repnz
ret
cmp
fdivs
fildll
rolb
repnz
cmp
lcall
pop
icebp
jno
orl
xchg
jmp
xchg
mov
out
fiaddl
xchg
je
rol
jl
mov
or
xor
sbbl
dec
mov
add
lret
pop
cwtl
ja
sub
dec
loope
xchg
or
adcl
ror
enter
add
sbb
testb
adc
test
test
sti
not
xchg
sbb
or
or
outsl
hlt
cmp
mov
jmp
test
pop
jo
repz
push
jp
cmpsb
frstor
mov
mov
pop
mov
jp
fldl
pop
movsl
mov
push
cmp
add
jmp
adc
sahf
add
push
hlt
popa
and
fldcw
ret
dec
outsb
cmp
cmp
mov
fdivs
or
sub
mov
or
pop
in
mov
pop
daa
xor
movsb
xchg
cmpb
mov
xchg
add
outsb
sub
or
mov
loop
pop
jns
fwait
sub
fs
movsl
jo
cmp
push
and
mov
inc
std
xchg
out
imul
push
add
stos
test
mul
lods
std
lea
and
inc
hlt
and
das
bound
mov
jns
arpl
push
adc
pop
mov
pop
outsl
sbb
inc
mull
lds
rcl
inc
jecxz
adc
scas
mov
adc
imul
mov
gs
xor
lahf
sub
sub
stos
cli
cli
xchg
popf
fsubrs
and
cmp
inc
add
push
sbb
and
or
aaa
out
xchg
je
ds
adc
inc
ret
adc
sub
cmp
and
push
stos
xchg
pop
aad
leave
iret
gs
mov
push
jne
dec
mov
mov
call
pop
ja
mov
sbb
mov
pop
or
lds
std
mov
aad
push
sbb
dec
lock
xchg
decb
roll
sarl
or
mov
ret
outsb
dec
rorb
dec
adcl
and
es
jl
xchg
addr16
sbb
cmp
push
cwtl
adc
push
addr16
addr16
orb
pop
push
repnz
inc
or
dec
leave
cltd
cld
mov
je
jge
lods
pop
dec
dec
loope
addr16
addl
lahf
cmpsb
mov
fwait
iret
adc
das
dec
cmp
adc
mov
mov
and
idivl
imulb
xor
inc
sbb
adc
xor
ljmp
scas
lea
data16
pop
dec
call
push
leave
pop
mov
mov
or
pop
lods
test
cwtl
push
and
ja
sbb
pushf
cmc
ret
pop
jg
lods
sub
push
jns
or
les
cld
popa
sbb
out
lahf
sbb
inc
inc
or
push
roll
imul
adc
inc
aaa
push
shrb
jp
gs
adc
fcoms
or
pop
mov
fistpl
sub
roll
sbb
dec
arpl
cmp
je
loop
adc
ja
leave
cmpsb
int3
add
cmc
and
pop
mov
xchg
inc
stos
test
inc
out
pop
add
das
or
mov
lahf
rorb
cmp
inc
mov
ja
sbb
fisubrl
and
fwait
popl
fs
and
ret
fists
pop
jecxz
xor
es
and
aam
outsl
jns
shlb
rcrl
xchg
sbb
cld
pop
sahf
in
jecxz
jnp
xchg
repz
mov
bound
xchg
push
test
adc
scas
insb
lea
bound
push
xor
loop
les
imul
lock
mov
test
loope
insb
rclb
adc
sbb
push
arpl
xlat
popa
push
or
jnp
aad
lahf
lret
imul
hlt
cmp
pop
xchg
stos
mov
cmp
push
lahf
inc
fwait
cltd
jns
fildll
push
fcoms
dec
adc
lahf
sbb
pop
enter
inc
adcl
mov
cmp
clc
adc
fstpt
mov
inc
fcoml
sub
ret
divb
inc
lock
out
fnsave
cmp
add
push
leave
mov
add
call
insl
inc
nop
inc
mov
mov
mov
sub
popa
xor
mov
sub
mov
divb
mov
dec
mov
std
shl
inc
mov
xlat
stos
add
push
inc
outsb
push
lcall
sahf
fwait
iret
fsubs
test
adc
jno
jne
mov
lahf
and
aad
and
adc
loope
push
ja
pop
xchg
pop
out
mov
xor
cmp
fs
ja
adc
fidivrl
jge
fbld
xor
push
mov
xor
lods
add
ficompl
test
sbb
adc
aaa
sti
out
pop
cmp
call
ja
jb
mov
inc
ljmp
ljmp
aad
mov
jbe
push
repnz
aaa
cmc
cli
sbb
sbb
lds
imul
xor
lds
enter
pop
push
pop
pop
push
jmp
pop
bound
xor
movsb
jle
out
or
ss
ret
xor
mov
daa
pushf
adc
inc
lcall
bound
push
das
mov
repz
and
sub
cmp
lahf
adc
sbb
xchg
mov
lds
xlat
data16
push
mov
xor
cmp
pop
aam
sub
inc
cld
shl
idivl
or
mov
and
in
sbb
lods
test
testl
ret
sbb
jb,pt
paddusw
inc
jno
dec
mov
icebp
cltd
jg
adc
xchg
ficoms
mov
mov
and
sub
movsl
out
ret
into
popa
sti
push
test
cli
sar
imul
lock
insb
cld
dec
inc
xor
or
jae
inc
adc
sarb
ja
loope
sbb
add
ret
inc
shl
lods
imul
xor
sbb
mov
pop
lods
cmp
clc
sub
outsl
sbb
sub
add
notb
adc
cmpsb
push
fidivrs
sub
je
mov
cmpsb
or
mov
xchg
inc
jle
sbb
inc
mov
pop
cmp
fisttps
sbb
icebp
pop
sbb
add
es
jb
mov
jbe
cmp
and
js
add
nop
das
add
mov
mov
sbb
cmc
fs
outsb
shl
je
fbstp
pop
dec
adc
push
pop
popa
shlb
inc
inc
mov
hlt
jecxz
iret
imul
mov
sbb
cld
and
adc
sub
pop
popa
xchg
mov
mov
pop
ret
repnz
je
mov
aas
out
mov
jbe
push
lea
mov
hlt
pop
lahf
adc
push
lret
or
daa
dec
sahf
pop
lret
test
dec
xor
mov
push
jle
rcll
pusha
sub
or
mov
sub
shl
sbb
int3
cwtl
sub
mov
mov
cmpsl
adc
jbe
sbb
popf
fsubrl
push
add
rcr
test
sub
repnz
mov
cmp
sbb
sub
daa
test
roll
adc
clc
push
sahf
and
push
mov
rol
pop
sti
mov
dec
das
mov
out
and
clc
test
jae
lock
pop
sub
adcl
push
push
xor
add
xor
addl
dec
mov
dec
enter
and
adc
jg
das
adc
sbb
clc
pusha
dec
add
lods
test
or
loope
mov
cmp
or
mov
mov
mov
ret
xor
mov
mov
mov
xorb
and
add
ljmp
push
dec
ljmp
mov
mov
mov
pushf
mov
cmpsl
ror
xchg
andl
test
enter
rorl
or
popf
lret
push
lods
xlat
imul
mov
iret
sbb
sbb
hlt
cmp
xchg
fwait
or
mov
inc
mov
pop
mov
movsl
mov
lcall
add
push
pop
sub
or
pop
loope
push
cwtl
pusha
lahf
data16
cmp
sub
ret
add
and
gs
add
push
in
cs
sub
mov
push
dec
test
cmpsl
and
xchg
add
out
sub
jle
lahf
xor
hlt
push
aas
xchg
movsl
mov
mov
ljmp
add
cmp
cmp
lock
cmp
lock
leave
xchg
adc
cmp
fs
xchg
jge
xchg
jl
add
call
adc
xchg
mov
or
inc
mov
test
and
mov
mov
ret
cmp
sbb
movsb
xchg
mov
sbb
jns
jg
xchg
xlat
outsl
and
xor
or
js
loopne
add
pop
sbb
push
repz
or
negl
push
cs
xor
xchg
add
and
stos
shrb
push
out
and
xchg
and
sti
jb
lahf
add
adc
movsl
pop
add
insb
push
call
inc
cmp
adc
shl
mov
addl
add
inc
movsl
xchg
adcl
cltd
lahf
jmp
fs
xor
mov
cmc
cwtl
and
xor
pop
aas
hlt
in
cmpb
mov
inc
mov
mov
push
add
movzwl
jg
stc
cmp
mov
push
movsl
cmp
mov
sub
or
inc
in
loop
push
std
or
divl
pop
ffreep
lcall
or
xor
fdivr
rcrb
and
aam
pop
in
inc
push
cld
jno,pt
cmc
and
repz
cs
or
arpl
ds
adc
mov
mov
pop
mov
inc
cwtl
shl
pusha
pop
xchg
push
add
movsb
loop
sub
test
mov
addr16
imul
push
xchg
cmp
stos
push
and
fwait
lds
pop
pushf
fists
rorl
sbb
xchg
lea
fwait
and
dec
fwait
and
and
das
out
dec
mov
std
sbb
mov
call
mov
dec
rorl
mov
jno
movsb
mov
mov
or
sub
rcll
cmc
push
add
das
gs
xchg
mov
pop
shll
andb
pop
adc
sub
xchg
ljmp
std
pushw
shrl
insb
fcmovnb
sub
rorl
rcrl
cwtl
cmp
scas
push
inc
push
xor
mov
stos
arpl
pop
aas
push
rorl
aas
std
dec
mov
cltd
cmp
jp
repz
cmp
nop
jo
ss
mov
in
sub
pop
inc
jbe
mov
add
dec
and
sbb
sub
xor
mov
out
pop
shlb
xchg
mov
jae
mov
add
and
incb
pop
push
and
ds
mov
insl
add
aad
andb
in
es
inc
test
or
out
push
pop
dec
sub
leave
test
sbb
add
jmp
xchg
cmp
scas
pop
scas
cmp
sub
imul
das
scas
outsl
sbb
decb
mov
dec
outsb
lock
das
push
enter
enter
push
loopne
inc
push
insb
je
push
adc
or
mov
je
mov
imulb
clc
sub
out
stc
jmp
xor
arpl
shlb
das
div
xchg
neg
stos
jp
cmp
pushf
je
and
idivb
ror
mov
pop
inc
rcrl
dec
loop
push
lahf
cltd
jno
nop
fistpl
divb
cld
xor
push
xor
mov
popf
sti
or
fwait
popa
xchg
or
push
mov
fisubl
lods
and
test
inc
rcrb
inc
pop
xchg
xor
imul
and
or
jno
out
adc
into
in
and
xchg
sbb
lea
ljmp
ficompl
popaw
test
adc
flds
movsl
ret
push
jne
push
js
insl
jns
push
add
xchg
maxps
leave
clc
pop
fcom
adc
stc
lods
aam
jl
mov
lods
mov
test
cltd
iret
iret
scas
lods
sbbb
ljmp
ds
xchg
adc
mulb
shrb
enter
int
out
sub
add
out
xor
pop
xchg
scas
movsb
and
repnz
mov
jge
mov
dec
sub
adc
xchg
fcoms
enter
movsb
xor
mov
std
loop
popf
stc
lods
das
adc
icebp
inc
lcall
test
cmp
jmp
add
cmp
pop
hlt
movsl
jecxz
adc
jmp
mov
pop
xor
movsb
cmp
jp
rorl
add
xchg
mov
jmp
push
testb
push
inc
xchg
dec
pop
test
pop
mov
and
xchg
jle
sbb
iret
sub
fists
jmp
mov
xchg
pop
jmp
andb
gs
dec
jae
loop
cmp
dec
inc
pushf
sub
xchg
xor
fwait
xchg
mov
push
sub
test
push
adc
or
push
js
push
pop
add
das
ljmp
xor
das
dec
mov
inc
out
popa
sahf
or
cmp
sub
mov
orb
jns
and
rcll
sbb
add
xchg
dec
ror
xchg
mov
fsts
repz
cmc
or
repz
not
cs
xor
mov
add
push
jle
mov
push
js
mov
xchg
insb
ljmp
sbb
mov
jbe
xchg
inc
in
push
flds
out
xor
mov
aad
dec
push
idivl
pop
icebp
mov
sub
xchg
mov
ja
pop
add
popa
xchg
push
stc
in
push
or
enter
adc
jns
cmpsl
paddw
xor
stos
cltd
inc
sbb
repz
adc
mov
mov
add
scas
clc
add
gs
cli
xor
dec
les
sti
or
cmp
out
mov
in
ret
push
test
in
lret
xchg
in
fwait
lock
sbb
js
daa
lds
pop
dec
into
ret
pop
fcomp
sub
and
lock
adc
int3
scas
cld
ficoms
mov
and
push
cmp
jns
cs
mov
push
add
inc
xor
push
sbbb
jne
pop
gs
xchg
aas
into
xlat
xor
push
mov
cwtl
sbb
add
cmp
push
xchg
xchg
dec
jo
xor
addr16
outsl
xchg
pop
cltd
sub
push
inc
and
push
int3
mov
jl
xor
scas
xor
jbe
dec
jo
stos
leave
aam
add
les
stos
mov
mov
mov
adc
pop
stc
fcmovne
add
and
pop
fadds
lahf
ret
fsubl
fdiv
dec
mov
outsl
and
les
add
lock
movl
ljmp
cmpsl
sub
cs
stc
cmpsl
in
cs
jnp
jmp
test
and
sbb
inc
iret
movsb
sbb
js
fdivrs
xor
add
and
xchg
mov
mov
pop
in
inc
inc
aad
addl
cmc
addr16
scas
fnstsw
pop
and
jnp
fnstenv
xor
test
and
imul
mov
sbb
add
or
mov
lods
fstl
test
push
jge
test
sbb
je
pop
adc
or
ss
rcrl
js
add
push
pop
cmp
enter
pop
xchg
movsb
sbb
pop
push
stc
ss
outsb
mov
ffreep
fidivrs
push
mov
subl
decl
stc
inc
sub
ja
jecxz
in
adc
lods
sub
mov
lods
push
ret
ds
test
and
or
or
addr16
psubusb
ljmp
dec
jno
cmpb
ja
daa
add
jl
and
js
lods
xor
outsb
xchg
dec
mov
inc
lods
clc
and
xchg
lcall
popaw
mov
or
add
stos
shrb
xor
jle
loop
mov
dec
arpl
lahf
scas
repnz
les
xor
mov
cmp
sbb
cmp
push
sahf
inc
icebp
rclb
orl
data16
push
inc
into
cmp
pop
test
out
idivb
outsl
fildl
or
sbb
bound
push
xchg
pop
lods
xchg
ljmp
imul
pop
sbb
out
jge
roll
xchg
test
and
lea
pop
jge
pop
mov
loop
or
das
jb
jle
ljmp
mov
fidivl
sub
xlat
pop
movsb
sub
lcall
test
xlat
fildl
push
test
jae
dec
mov
adc
adc
mov
dec
dec
lods
pop
dec
dec
scas
mov
into
rcrb
xchg
lds
push
daa
fcmovnu
cmp
fists
cmp
sahf
aaa
test
jecxz
xor
xor
nop
hlt
mov
shll
call
fldt
sbb
inc
add
je
jb
pop
mov
xor
add
cmp
jne
out
mov
hlt
ds
addr16
adc
and
xor
jns
lea
xchg
movsb
std
rcll
rcr
leave
inc
cmp
and
inc
adc
xor
jl
sbb
push
and
out
pop
inc
popa
div
repz
lock
cmp
test
popa
movsb
imul
aad
aaa
in
xchg
ss
mov
inc
inc
fdecstp
pushf
xchg
jmp
leave
inc
dec
jmp
xchg
sub
cmpsb
cmc
or
sbb
cmpsl
std
adc
push
movsl
adc
test
xchg
imul
pop
lahf
xchg
and
in
stc
mov
jb
pop
mov
jecxz
xor
out
jmp
or
test
push
cmp
dec
add
adc
sbb
pop
negb
xchg
stos
data16
mov
je,pn
addr16
add
les
mov
jp
pop
clc
mov
fisttpll
push
xchg
and
imulb
cmpsl
ss
mov
andl
std
loope
or
dec
outsl
in
and
aad
hlt
push
scas
repnz
push
orl
adc
pop
push
mov
insb
pop
jmp
jo
sbb
push
daa
rolb
adc
fwait
addr16
push
insb
enter
xchg
cmp
inc
mov
hlt
adc
push
repz
dec
jbe
add
push
rcrl
call
dec
jae
sbb
mov
push
inc
or
push
les
add
jmp
push
ss
hlt
sub
rorb
xchg
inc
les
call
inc
sti
rorl
aam
stos
leave
sbb
jecxz
mov
add
leave
xchg
or
stc
pop
add
fnstsw
or
xorb
mov
out
loop
sub
xor
push
movsb
mov
nop
and
fcoms
pop
fxch
pop
dec
aas
mov
dec
gs
pop
fcompl
or
rol
jbe
inc
ret
pop
loope
mov
or
js
jb
imul
dec
and
push
ror
dec
add
sbb
sub
add
xor
inc
sub
mov
int3
out
xchg
dec
enter
push
jnp
ljmp
test
mov
push
mov
xchg
push
das
shrl
pushf
int
xchg
js
clc
xchg
hlt
in
mov
jp
add
inc
icebp
xor
ret
adc
imul
js
pop
repz
mov
xchg
or
lea
sub
andb
push
adc
push
xorl
outsl
and
inc
ja
jae
test
dec
sub
mov
jns
add
jae
nop
and
hlt
add
pusha
arpl
dec
das
cltd
and
es
cs
les
in
ret
dec
xchg
cltd
or
dec
lahf
leave
mov
inc
jb
push
mov
imul
xchg
dec
scas
add
jmp
or
inc
pop
lds
lret
push
fbstp
outsb
into
adc
insb
aad
cmpsb
fidivs
adc
js
jecxz
rclb
sub
sahf
scas
iret
pop
fldt
stos
pop
out
mov
stos
test
and
dec
and
add
xlat
or
adc
push
cmp
add
movsb
pop
fcomp
add
mov
jne
lds
push
rcll
mov
mov
mov
pop
sbb
inc
pop
sbb
ret
adc
addr16
jl
add
jae
test
pushf
pop
xlat
inc
movsl
sahf
mulb
xchg
repnz
xor
cmc
stos
and
adc
jle
dec
xchg
test
jno
push
fidivl
fisttpll
inc
pop
and
push
pop
dec
js
jecxz
and
addb
and
push
ret
mov
push
mov
add
ds
test
push
dec
cld
pop
addr16
or
rcrb
xor
ljmp
dec
dec
cltd
dec
fwait
xor
jb
add
jg
or
repz
mov
mov
inc
cwtl
cmpb
out
cld
jno
fs
repz
es
sbb
cmp
mov
je
neg
xor
repnz
pop
lods
xchg
fxch
pop
leave
out
mov
lcall
mov
cmpsl
lahf
and
mov
mov
adc
sbb
mov
push
repnz
mov
ja
in
andl
je
jb
cli
inc
xchg
mov
mov
popa
shlb
dec
mov
mov
xor
mov
xchg
daa
call
fisttps
ljmp
nop
inc
adc
insb
pop
icebp
cmp
cmp
adc
sub
sbb
in
stos
fildll
fsts
mov
push
call
movsb
mov
inc
ljmp
dec
pop
les
add
das
push
sbb
and
decb
cmp
sbbl
add
mov
or
data16
sub
divps
subl
add
cmp
add
rcrb
sub
push
or
pop
mov
cltd
pushf
in
mov
cmp
inc
rcl
mov
ret
outsl
adc
fildll
mov
stos
adcb
sub
sbb
jmp
int3
fidivrl
pop
in
mulb
fs
mov
in
pop
cmc
jmp
mov
push
xchg
push
adc
cmpsl
jns
or
aaa
lret
xor
or
ret
inc
and
test
mov
cwtl
int
pop
lock
imul
inc
roll
push
xchg
adc
push
mov
push
jne
dec
loopne
pushf
pop
loop
addb
push
inc
xor
das
pop
pop
push
and
incb
in
xchg
clc
es
jp
mov
mov
flds
data16
cmp
mov
inc
jl
jo
outsb
xchg
outsl
div
mov
lret
shr
in
pop
movsb
xor
pop
jg
leave
xorb
pop
or
mov
and
scas
js
cmp
je
inc
mov
adc
movl
pop
shlb
fwait
movsb
jb
or
or
stos
rolb
jo
cwtl
jg
scas
xor
and
mov
pop
aam
jg
out
xor
dec
pop
mov
test
dec
pop
mov
imul
loopne
cmp
ss
popf
and
xor
aam
mov
jbe
mov
mov
filds
pop
leave
inc
movsl
cmp
push
dec
mov
add
push
mov
pop
pop
mov
int
fsts
add
xchg
and
sbb
or
pop
rcr
dec
daa
out
mov
xor
repz
out
push
mov
and
and
and
sti
dec
sbb
push
xor
sarb
or
push
in
or
lock
sub
lahf
addr16
aad
jp
das
jecxz
or
mov
icebp
dec
inc
cli
inc
rol
popa
cwtl
popf
fisubs
adc
loope
cwtl
pop
cmp
dec
adc
movsl
cmp
push
jge
roll
cmpsl
or
clc
or
sbb
pop
lods
mov
jp
cmp
divl
je
sbb
bound
sub
ss
roll
jo
inc
int3
filds
dec
call
mov
hlt
ret
xor
sub
fisubrl
ret
push
dec
fistpl
add
jge
adc
jp
pop
and
and
dec
sahf
jnp
insb
dec
inc
pop
jo
into
out
shlb
pushf
push
adc
xor
out
and
movsl
push
add
jae
fildll
push
out
cmp
mov
or
pop
xchg
xchg
push
imul
punpckhwd
push
nop
rcll
or
sbb
and
push
fistl
sbb
push
fdivs
or
insb
dec
jle
mov
jecxz
inc
daa
or
add
fsubr
xor
icebp
push
or
les
pop
xchg
ret
loope
jmp
inc
mov
loopne
arpl
fbld
mov
mov
pop
dec
sub
jmp
push
xchg
fldcw
adc
jp
inc
call
xchg
inc
sbb
inc
xchg
xchg
xor
je
xchg
fistpll
and
or
aaa
lret
sti
fdivl
or
jle
jno
ljmp
adc
mov
adc
xchg
xchg
mov
stos
ficoml
fsubl
shlb
xlat
mov
pop
out
adc
push
and
mov
cwtl
pop
lds
ret
inc
sbb
jecxz
or
mov
test
cmpsl
cmp
mov
call
mov
jl
stc
out
decb
dec
mov
or
insl
fistpl
and
mov
cwtl
add
ljmp
cs
lahf
add
test
sbb
sub
jns
cmpsl
inc
dec
or
out
ljmp
mov
in
sub
add
stos
cmp
push
sti
ret
cmp
popl
pushf
push
iret
push
popf
outsb
dec
mov
add
cmpsl
hlt
mov
cmp
repz
xorl
popa
imul
xlat
or
dec
cmpsb
cmp
dec
mov
loopne
in
ret
xchg
in
sub
rorb
loop
mov
lds
xchg
rolb
call
pop
mov
cmp
add
xchg
xchg
push
xchg
frstor
inc
in
loope
dec
push
sti
fistpll
fistps
stos
icebp
sbb
adc
int3
adc
jns
call
aad
ja
pop
shll
push
out
js
jg
test
push
sti
xor
daa
jg
roll
addb
clc
inc
pushf
jnp
stos
fisttps
loopne
iret
loopne
dec
cld
outsl
pop
mov
inc
inc
mov
adc
or
in
out
inc
mov
cltd
cwtl
dec
and
mov
jle
insl
add
jl
fdivrl
call
sbb
test
lea
pop
lods
sbb
jp
ret
sub
sub
int3
adc
inc
sub
cmpsl
out
rorl
pop
push
add
pop
nop
ds
shll
aaa
inc
call
jecxz
shl
out
mov
add
cmp
outsl
stos
xor
mov
ljmp
jecxz
push
cmp
and
jge
add
idiv
xchg
add
inc
jmp
idivb
test
cmp
mov
lcall
mov
adc
dec
dec
jmp
mov
negl
adc
movsl
data16
fists
scas
push
mov
and
and
leave
aas
cli
outsl
mov
mov
cmpsl
fdivr
xor
jge
sub
push
adc
mov
push
hlt
addr16
sub
pusha
sahf
in
inc
test
mov
hlt
cmp
aad
mov
mov
std
out
jp
cld
aas
lods
mov
or
add
xchg
mov
jle
shll
insb
not
push
mov
sahf
push
cmp
inc
xor
or
loopne
loop
cwtl
jecxz
cmp
ljmp
idivl
xchg
push
mov
cmp
push
shll
mov
in
rol
out
or
add
pusha
frstor
dec
jo
popa
pusha
adcb
aad
rcrb
adc
add
pop
or
lret
lret
inc
inc
insb
movl
push
iret
in
sub
cwtl
fistps
sub
js
jbe
pop
cmp
fidivrs
mov
daa
mov
and
rcr
mov
ret
out
add
stos
adc
and
es
lds
pushf
cmc
add
lock
shr
pop
sub
dec
in
push
dec
pushw
dec
push
jbe
faddl
mov
loop
shl
fucomip
inc
dec
pop
mov
aam
push
cli
shll
in
push
roll
repz
inc
dec
popa
pushf
loopne
pop
or
scas
addr16
add
pop
lea
in
lret
and
cmp
test
and
in
not
add
pushf
mov
loop
sbb
aad
aam
test
mov
push
popa
data16
pusha
divb
cwtl
inc
add
lret
sbb
mov
mov
mulb
loope
rorl
sbb
aas
mov
std
out
push
xor
aas
pop
xor
adc
jne
or
scas
bound
cmp
or
xchg
dec
cmp
aaa
cmp
mov
push
mov
fimull
shll
adc
insl
daa
icebp
push
jnp
xchg
jb
mov
push
bound
mov
les
mov
adc
or
xchg
cmpsl
imul
push
dec
inc
idivl
iret
dec
scas
fsubrl
xchg
mov
roll
xchg
roll
into
push
add
bound
jae
inc
cli
cmp
das
and
sbb
mov
test
inc
movl
jl
inc
jae
movsl
xchg
pusha
rcpps
popf
push
shl
add
cltd
ds
insb
mov
xchg
adc
aam
call
incl
scas
iret
loop
cmc
nop
inc
add
test
addr16
cmp
sbb
pop
scas
test
sub
cs
jbe
pop
xor
add
dec
xor
lret
jno
notb
mov
cmpsl
mov
cmpsb
mov
jns
in
and
aad
sub
loope
outsb
push
fdivrs
mov
cmp
pop
ret
movsb
fists
mov
es
movsl
xor
adc
mov
mov
jno
addb
dec
sub
mov
sub
mov
clc
roll
pop
jg
jmp
jb,pt
dec
xrelease
jo
dec
mov
ljmp
adc
dec
leavew
pop
inc
xchg
repz
mov
ljmp
pop
les
mov
push
mov
imul
and
or
pop
xor
stos
data16
sahf
push
pop
jp
xchg
push
jae
imul
push
nop
pop
iret
mov
jecxz
mov
mov
call
push
cmp
jge
clc
data16
shlb
adc
and
mov
xchg
and
xlat
fwait
adc
sbb
icebp
jno
scas
aad
or
pop
add
adc
sbb
testb
mov
test
sub
ja
and
out
cmc
xor
inc
xlat
rorb
mov
test
outsb
sub
mov
xchg
mov
jbe
sarb
cltd
sbb
jge
pop
loope
dec
sahf
add
sbb
les
xchg
xor
fwait
rorb
cs
mov
xor
cld
fldl
jp
ret
cwtl
les
imulb
and
xchg
rolb
sub
jb
enter
push
lods
dec
pop
fidivrs
dec
xlat
pop
in
mov
out
cmpsb
fwait
mov
mov
fs
scas
clc
jo
jno
roll
xor
fistpll
inc
dec
sarb
daa
mov
sub
dec
or
stos
push
sbbl
jle
mov
imul
xchg
inc
sub
inc
xor
adcb
mov
addr16
adc
inc
cs
andl
out
enter
xchg
repnz
mov
adc
lods
or
cmpl
xchg
pop
xor
fucomip
nop
and
movsl
jmp
fs
sarl
mov
test
into
ljmp
hlt
jbe
test
cwtl
sub
adc
cwtl
sub
push
xchg
fildl
cmp
push
pop
ljmp
adc
je
mov
lcall
fadds
xor
and
xchg
pop
push
enter
xor
inc
sub
dec
daa
fstpl
inc
hlt
into
aaa
shlb
das
xor
ss
adc
out
mov
xchg
and
lds
xor
xor
shlb
repnz
lea
ja
scas
xchg
das
in
sbb
cli
vcvtsd2ss
gs
call
jno
xchg
testl
addl
sbb
stc
iret
bound
les
mov
movsb
inc
push
out
int
xor
scas
aam
sub
shl
and
divb
sysexit
xchg
das
push
jg
sarl
inc
iret
xchg
push
pop
push
sbb
push
pushf
sti
enter
mov
mov
add
daa
push
push
lahf
aam
cmc
das
mov
std
jge
inc
stos
scas
cmc
mov
clc
cmp
mov
dec
sahf
int3
mov
dec
fwait
pop
fcoml
popa
jnp
aaa
scas
push
js
sub
inc
and
or
nop
mov
daa
adc
inc
call
ret
jg
mov
gs
and
dec
inc
fisubs
test
lcall
mov
inc
imul
daa
cmp
fsubp
xchg
add
adc
pop
cli
push
fs
pop
adc
lods
test
fildll
pop
mov
ret
mov
cmpsb
mov
stos
mov
call
mov
in
test
and
xchg
inc
adc
or
stos
rcrb
imul
jnp
sbb
leave
or
dec
iret
xchg
and
sbb
mov
xor
into
inc
xlat
sbb
out
sbb
ret
fcompl
lods
ja
xchg
insl
xchg
movl
pop
adc
lds
int3
xor
push
popa
xor
adc
call
add
call
call
stos
leave
test
xchg
mov
cwtl
scas
and
xor
sub
xor
dec
sub
pop
or
in
jnp
xchg
adc
push
sub
add
stc
cmp
bound
adc
push
sbb
mov
jae
pop
into
mov
fldenv
add
in
pop
rorl
test
pop
mov
lock
cmpsb
mov
jge
pop
ret
mov
cmp
sub
pop
aas
rcrb
and
cmp
push
cmpsl
int
rcrl
or
sub
shl
cmpsb
jo
adc
fdivrl
cmp
mov
adc
out
mov
pusha
icebp
call
inc
cmovnp
fs
pop
cmpsl
add
add
add
test
cmp
mov
mov
jne
pop
or
cmp
lock
shll
push
push
dec
mov
jae
cmp
sbb
lods
js
inc
dec
and
nop
out
inc
fdivs
mov
mov
add
xlat
nop
mov
mov
shlb
test
add
inc
inc
xchg
movsb
inc
fisttps
stos
cmp
test
icebp
xor
lahf
push
repnz
int
repnz
jl
mov
cmp
mov
sahf
and
dec
pop
je
enter
and
jmp
cmp
mov
fiadds
add
cmc
lret
cmpl
ffree
int
cwtl
int
icebp
fisttps
idiv
push
mov
push
jecxz
ss
ja
push
and
daa
mov
lds
cwtl
add
hlt
outsb
addr16
pop
or
out
and
and
xchg
outsl
inc
xchg
mov
mov
and
out
popl
ds
int3
int
cmp
loop
or
popf
into
and
sub
out
mov
pop
lds
mov
xor
sahf
fidivl
and
xchg
arpl
dec
shlb
push
dec
sarb
pop
cs
sahf
xor
movsl
or
mov
xchg
jle
aaa
jl
gs
mov
push
sbb
daa
mov
push
ljmp
mov
jno
arpl
pop
jnp
mov
add
sbb
hlt
mov
xlat
cmc
mov
inc
add
addr16
out
jo
loope
je
jecxz
pop
add
ret
xchg
xchg
xor
imul
fidivl
je
xchg
cmp
mov
xlat
cltd
fistl
pushf
push
xor
jne
mov
test
fldenv
int3
faddp
ret
mov
filds
mov
iret
add
cmp
repnz
test
adc
push
hlt
add
pop
popf
std
add
sbb
mov
pushf
scas
mov
jno
jge
cmp
add
sub
in
push
idivl
xorl
fwait
ss
mul
dec
leave
mov
fdivrl
ret
adc
push
mov
mov
push
inc
jle
dec
fsubs
jg
add
xchg
lods
dec
movsb
mov
in
push
or
arpl
xor
mov
out
push
sub
mov
movsb
rorb
xchg
movl
mov
hlt
sub
mov
mov
lea
push
pop
xor
addr16
test
aad
cli
xchg
ss
dec
call
jp
popa
mov
jle
jno
imul
inc
or
jp
mov
in
sbb
jl
outsb
popa
add
cmp
push
xchg
mov
bound
call
dec
mov
pop
das
jo
je
inc
frstor
subl
xlat
jb
loopne
pop
xor
inc
pop
lods
cmp
adc
mull
mov
mov
inc
test
jnp
pop
bound
int3
adc
stos
or
lods
shl
or
mov
lahf
repz
dec
mov
mov
lahf
enter
mov
mov
add
add
aam
mov
lds
adc
inc
rolb
jg
sahf
jnp
push
shll
or
xor
jb
adc
jo
inc
xchg
outsl
cmp
ss
ret
and
lds
lock
ljmpw
dec
aas
mov
adc
jne
hlt
movsb
outsb
ficoms
adc
mov
adcb
fwait
add
xor
push
dec
ljmp
sub
xchg
jecxz
insb
daa
out
pushf
psrlq
or
mov
ss
shl
call
test
pop
arpl
gs
arpl
mov
jns
add
xor
mov
xchg
mov
sub
fsubrl
lahf
nop
adc
add
hlt
outsl
insl
dec
mov
cmp
test
bound
cmpsb
loop
mov
stos
pusha
sbb
inc
xor
or
jnp
cmp
mov
xor
cmp
std
jecxz
shlb
add
repnz
in
inc
sbb
fimuls
adcl
adc
in
and
push
xlat
pushf
pop
stos
ret
jnp
sti
imul
repnz
ret
out
gs
add
cmp
cmp
jl
fsubr
and
icebp
cmc
xchg
mov
mov
testb
sub
inc
aad
mov
fwait
test
sahf
sbb
sub
pop
pop
test
mov
mov
sbb
data16
loop
andb
jl
xchg
stc
or
ljmp
dec
mov
dec
xchg
and
aas
arpl
fsubrl
adc
add
jns
mov
test
loopne
enter
pop
xchg
repz
hlt
fwait
push
xchg
data16
pop
pop
shl
sub
stos
mov
jns
data16
scas
mov
out
mov
dec
shrl
mov
loopne
cmp
mov
in
push
adc
iret
imul
lock
imul
cmp
xchg
adc
cmp
mov
test
jmp
mov
xchg
fistpl
or
xchg
in
push
outsl
jecxz
packuswb
or
or
adc
sbb
mov
nop
shlb
test
lret
cmpsl
sbb
or
jns
xchg
dec
or
or
mov
sbb
mov
sbb
cmp
push
imul
adc
adc
mov
inc
inc
test
dec
lods
fcomps
rcrl
or
or
mov
in
mov
enter
clc
insb
decl
je
xor
mov
nop
fsubrl
mov
fldl
shrl
js
insb
jg
shl
je
ret
mov
popa
cwtl
inc
or
enter
or
pop
mov
in
jbe
hlt
or
xchg
jnp
sbbb
stos
or
fnstsw
out
mov
out
mov
sub
dec
jge
aam
jb
test
sub
adc
mov
in
pop
mov
enter
nop
push
sbb
orb
pop
mov
pop
adc
repz
daa
xlat
loopne
push
test
int
icebp
popf
call
or
jno
incl
xor
or
pusha
mov
cmc
jmp
xchg
jnp
or
fbstp
jg
adc
dec
fdivrp
cmp
insb
mov
lahf
fldcw
mov
cmp
in
das
imul
push
xor
inc
sub
ret
je
scas
cli
movsb
push
loope
sbb
inc
lods
sub
insl
in
xchg
pop
and
decl
sub
lock
push
ds
cld
pop
mov
sub
sbb
in
ret
adc
xchg
or
or
sub
jns
rolb
stos
mov
rcll
or
sahf
xchg
mov
or
dec
sbb
sub
mov
or
ja
dec
mov
aam
repz
pop
insl
or
pop
xor
clc
mov
adc
add
and
loopne
in
add
fidivl
sbb
cmp
rcrb
or
sbb
dec
push
adc
xlat
add
or
xchg
stos
push
mov
fnstenv
mov
or
mov
je
pop
mov
lret
pop
push
jo
and
jbe
mov
shrl
push
gs
arpl
dec
lea
add
lahf
adc
jne
pop
mov
ucomiss
fsubl
call
jno
imul
push
insb
stc
call
dec
out
push
pop
jecxz
cld
insl
adc
notl
int
add
adc
cs
or
mov
adc
or
xor
xor
in
jae
inc
lret
mov
push
or
and
rclb
and
push
mov
mov
mov
add
push
mov
shl
or
fisubrs
push
mov
xor
adc
or
inc
rorb
out
mov
ljmp
pushl
pop
jns
xor
or
lret
or
lcall
loopne
addr16
out
mov
ljmp
xchg
in
jmp
push
add
mov
int3
adc
xchg
lret
adc
mov
push
scas
sbb
or
popf
adc
mov
sar
mov
and
push
adc
add
or
adc
add
mov
call
cli
add
adc
pop
inc
mov
push
fisubl
rorl
push
fsubrl
push
pop
or
lock
inc
xlat
out
add
xor
call
mov
pop
leave
xor
mov
and
push
inc
iret
sub
jl
fldl
lret
jbe
jns
push
or
lret
mov
jp
out
push
mov
repz
or
ljmp
jg
outsl
inc
xchg
or
lds
and
sub
in
outsb
pop
push
cld
mov
jb
lds
mov
test
sbb
outsb
inc
sub
jl
inc
sbb
jo
bound
out
add
stos
and
enter
addb
cmp
mov
leave
xor
mov
push
arpl
push
cmp
outsl
ret
movsb
sub
cli
fcompl
adc
data16
dec
test
xor
test
adc
push
rcll
pop
sbb
and
jle
clc
mov
jno
popf
sub
mov
xor
sbb
jle
add
push
arpl
popa
out
mov
add
setbe
jg
daa
mov
fdivrs
sbb
fldenv
mov
pop
mov
daa
dec
adc
es
mov
pop
fs
fisubrl
jnp
pop
xor
pop
popa
jl
jg
pop
mov
xchg
sbb
push
clc
repz
jecxz
or
inc
fsubrs
sub
shrb
xorb
js
pop
push
and
mull
popa
cs
test
xor
aam
sbbb
xor
mov
push
jb
dec
pop
pop
daa
and
call
inc
pop
mov
push
push
add
mov
negl
xor
inc
out
add
cmp
sub
push
ja
lahf
jae
stos
pop
aam
outsl
mov
fcmovnu
pop
mov
push
jo
or
jae
inc
add
mov
pop
dec
inc
std
jns
call
cli
mov
daa
roll
pop
sub
ja
out
push
push
aaa
les
mov
jmp
add
popa
inc
inc
pop
dec
daa
jge
push
sub
xor
movsb
mov
mov
mov
pop
jp
test
subl
cmp
call
inc
jne
in
arpl
xchg
stos
in
sahf
aas
push
jecxz
insb
cld
fldl
loop
testb
lock
push
stos
das
inc
and
jle
inc
mov
mov
push
pop
iret
dec
adc
je
inc
pushf
cmp
fldl
fs
xor
and
mov
push
sbb
mov
pop
push
arpl
pushf
dec
mov
ss
fidivrs
shll
sti
dec
xor
movsl
arpl
mov
sbb
aad
jbe
movsb
je
lea
cmc
pop
xorb
xchg
je
ljmp
jne
mov
int
and
rcll
xchg
shll
je
sahf
mov
sbb
push
and
outsb
mov
jo
loope
js
push
mov
dec
into
xor
cwtl
loopne
push
push
lea
push
lods
pop
mov
inc
ja
out
push
call
add
lods
sbb
arpl
addr16
fs
sbb
je
add
xchg
jno
jb
cld
mov
pop
les
jns
loopne
push
sub
insl
or
test
je
add
movsl
daa
and
mov
mov
repz
mov
sbb
jl
mov
xor
xor
or
repnz
cltd
push
inc
out
or
and
xchg
dec
push
push
mov
daa
enter
jg
mov
mov
fmull
cmp
push
outsl
mov
enter
inc
mov
adc
fdivs
sti
jno
gs
and
dec
call
and
shrl
pop
and
daa
mov
lret
cmp
cmc
gs
insl
je
lret
pop
add
rcrb
movsl
push
out
cmc
sbb
addb
popa
push
popf
mov
push
mov
mov
loopne
out
je
icebp
ds
pop
sbb
data16
push
push
loopne
popl
fistpll
cli
push
cltd
and
andb
xor
sahf
xchg
xor
stos
dec
push
push
push
insl
jg
mov
punpcklwd
inc
and
lds
popf
mov
mov
mov
jns
push
ret
sbb
sub
push
jno
shl
pop
mov
sub
inc
iret
mov
push
dec
ret
mov
je
jae
sbbb
sbb
dec
outsl
es
add
push
repz
mov
mov
daa
and
jne
jbe
jmp
inc
leave
mov
test
arpl
xchg
or
mov
jno
pop
int
in
and
jge
pop
aam
xchg
sbb
sarb
inc
xor
fisubs
or
xor
add
pop
out
pop
fstps
sub
add
addr16
orl
repz
mov
mov
cli
icebp
push
push
mov
fidivrl
sbb
pushf
inc
in
inc
or
rorb
xor
int3
dec
mov
out
cmp
insl
mov
dec
sub
iret
inc
aad
jecxz
out
or
mov
inc
movsl
shl
mov
inc
mov
rcrl
push
dec
jno
sarl
and
mov
std
xchg
mov
gs
mov
scas
mov
in
push
push
sbb
inc
pusha
push
inc
dec
stos
adc
pop
xchg
in
mov
pusha
cmpsl
movsl
inc
orb
jno
dec
dec
and
bound
mov
jae
pushf
pushf
imul
push
dec
cmc
movsb
pop
cltd
cld
xchg
add
sub
push
aaa
scas
fcomi
mov
pop
jae
mov
imul
cld
xchg
mov
inc
mov
test
mov
cmpsl
dec
in
jb
cmpsb
pop
mov
pop
push
push
xchg
pop
jmp
jecxz
cmp
lock
xchg
jae
lcall
movnti
clc
fmull
adc
arpl
adc
and
das
mov
test
or
dec
push
mov
gs
jnp
inc
aaa
lods
andl
stos
fucomp
xlat
out
arpl
icebp
push
add
and
add
pop
push
lret
push
call
cltd
jg
mov
sbb
xor
mov
into
hlt
sub
cld
jns
outsl
aam
adc
out
adc
and
fisttpll
dec
push
dec
mov
mov
je
jmp
movsl
cmpsl
push
xor
aaa
js
push
outsl
fs
orl
mov
xlat
pop
sbb
pop
xor
xchg
lret
lds
bound
in
mov
testl
add
lret
fdiv
in
jle
mov
jnp
sti
mulb
inc
out
js
mov
and
das
push
imul
in
into
iret
sbb
jg
bound
das
xchg
mov
push
sbb
xor
mov
jb
movsl
xchg
pusha
fdivl
pop
pop
xor
cmpsl
jae
gs
es
sarl
outsl
and
pop
mov
push
cmp
sti
lock
jmp
jp
jbe
aas
data16
push
fsubp
enter
pop
and
cli
daa
je
addr16
bndstx
push
mov
icebp
out
out
pop
cs
inc
std
xchg
lret
mov
movsl
hlt
fcomi
stos
mov
adc
inc
sbb
adc
subl
jno
inc
jl
adc
cmp
push
sahf
pop
pop
mov
jp
sti
pop
aas
cmc
adc
movsb
test
int3
cmc
pop
dec
xchg
xor
mov
arpl
inc
gs
lds
xor
fs
adc
repz
push
jo
je
nop
test
addb
pushf
lret
adc
je
add
pop
fsubrs
dec
and
mov
je
mov
pop
sub
pop
jae
shlb
fistpl
and
scas
dec
and
mov
push
and
mov
jne
pop
aad
sub
in
addb
cwtl
xchg
sub
adc
inc
js
pop
cmp
mov
addr16
sub
jecxz
cld
sub
and
xchg
push
pop
mov
and
iret
jg
cld
cmp
dec
dec
pop
xchg
dec
mov
sahf
out
xlat
jae
add
outsl
jne
pop
lea
xor
iret
sub
push
loop
and
imul
push
in
stos
addr16
inc
popf
popa
shl
outsl
clc
lds
negb
adcl
outsb
ret
fidivl
mov
pop
mov
sarb
jns
pop
jo
fwait
or
adc
push
les
ja
rcrb
pop
imul
bound
std
jecxz
xchg
je
inc
mov
fisttpll
outsl
xor
lret
test
addb
aas
sub
in
pop
out
and
jae
mov
popa
xorb
les
jmp
les
scas
xor
nop
and
aas
pop
frstor
das
sbb
jmp
sub
pop
push
mov
push
sarl
adc
sub
lahf
jmp
scas
sbb
sub
and
adc
repz
mov
scas
and
dec
jns
ss
and
fisttpl
mov
fsub
xchg
cltd
data16
js
insb
jle
in
data16
daa
mov
out
cmp
addb
mov
ja
jno
paddusb
adc
sbb
insl
int3
push
pop
les
xlat
mov
sbb
push
test
fsts
les
out
inc
xchg
lods
ljmp
pop
xor
jbe
shlb
cwtl
daa
dec
adc
and
int
or
mov
jae
and
insl
mov
or
cmp
outsl
pop
cmpsl
mov
pop
imul
mov
fiadds
andl
repnz
shll
fmull
rcrb
push
fistpl
les
adc
pop
ljmp
mov
add
out
pop
mull
pop
sub
repz
lret
cmpsl
repz
call
xchg
jo
cmp
add
push
ret
insl
inc
leave
movsl
pop
pop
clc
mov
jle
push
arpl
aaa
pop
std
scas
jae
push
int3
push
push
dec
addb
popa
pop
cmp
int3
lahf
mov
fcmovnb
orl
lcall
adc
xchg
push
and
xchg
mov
xchg
mov
push
pop
mov
sbb
dec
inc
pop
mov
add
movl
mov
stos
sbb
xchg
push
add
hlt
push
dec
paddsb
outsl
jne
xchg
negb
movsl
jle
aam
lods
xor
fwait
adc
adc
enter
fildl
call
jbe
pop
icebp
ret
aad
les
jle
pop
push
insb
ret
fs
lods
xchg
mov
lds
js
das
or
mov
cmc
rorb
push
xor
out
inc
add
sub
icebp
icebp
scas
jl
pop
sbb
push
and
pop
mov
jbe
or
into
aas
pop
pop
jnp
xchg
mov
inc
nop
sarl
mov
psrad
sbb
jb
loop
subl
push
inc
push
mov
fsub
arpl
or
jmp
fisubl
and
fcoms
test
ret
dec
cmp
sbb
iret
ret
aam
jns
sbb
add
mov
add
fstl
lea
jnp
xchg
sbbl
push
jmp
adc
pop
adc
mov
jecxz
rcll
lods
and
enter
clc
testb
in
push
push
int3
adc
add
push
js
repnz
rol
lret
negl
jl
adc
pop
cmp
add
subl
sub
mov
test
cmp
stc
decl
cmpsb
outsb
insl
or
shll
dec
dec
dec
inc
push
jle
mov
inc
cmp
aaa
xor
into
ret
pop
sbb
pop
jle
in
fmuls
dec
divl
rclb
mov
fptan
inc
lret
mov
sbb
adcl
int3
dec
jge
inc
jp
pusha
cmp
push
xchg
mov
pop
mov
imul
jno
cmp
pop
fwait
inc
call
enter
ret
pop
out
xlat
fnstenv
pop
adc
mov
push
jo
lea
and
jnp
sbb
sbb
cmpsl
test
les
je
mov
dec
outsb
push
sbb
aam
shlb
sub
xchg
and
addb
lret
repnz
push
test
mov
fwait
lret
cmp
sbb
mov
dec
shrb
sbb
cmp
jg
adcl
das
push
mov
mov
push
pop
xor
sbb
inc
mov
jmp
and
xchg
add
sub
ret
or
popf
gs
and
and
daa
nop
push
cmpsl
xchg
fmull
in
dec
sbbl
cmp
imulb
push
pop
jae
cmp
mov
push
outsb
pop
inc
dec
cmp
aas
iret
dec
mull
mov
xlat
mov
or
pop
ret
fs
fwait
pop
mov
mov
jl
or
shlb
push
add
inc
or
ds
mov
mov
sbb
pop
das
and
mov
pushf
xchg
rolb
push
mov
pop
pushf
out
roll
pop
jnp
das
or
inc
pop
lock
adc
out
adc
cmp
push
push
pop
push
lret
inc
lret
sarl
pushf
mov
adc
js
pushf
mull
lcall
test
push
enter
inc
in
icebp
pusha
ja
inc
lods
dec
daa
int
out
push
imul
push
push
clc
cwtl
gs
and
and
loopne
mov
mov
idivl
pusha
mov
sbb
inc
loop
cmpsl
rorb
push
out
je
faddl
insb
icebp
outsl
and
mov
adcb
mov
lret
adc
rcll
sub
xchg
and
xlat
nop
loope
std
xchg
and
test
dec
xchg
lock
in
xor
inc
clc
cs
or
mov
inc
cwtl
imul
jb
pop
xchg
cmp
mov
xchg
xchg
mov
jl
div
aas
aad
adcb
imul
imul
inc
adc
mov
enter
sub
dec
popf
mov
adc
push
roll
sbb
mov
sbb
rcrb
inc
xor
xchg
push
mov
pop
scas
xor
lds
sub
mov
std
daa
mov
das
mov
imul
push
fs
dec
and
fstpl
nop
loopne
add
push
je
xor
cld
sub
push
xor
ret
or
pop
pop
mov
sub
inc
test
das
adc
adc
and
jl
xor
sub
mov
inc
jae
mov
dec
mov
das
push
cmp
inc
dec
adc
push
lock
pop
ret
std
cltd
test
hlt
loop
outsl
pop
push
adc
jo
cmp
test
jecxz
jg
fs
outsb
inc
iret
jge
push
lahf
out
mov
jno
push
sub
pop
jl
or
aas
sub
popf
inc
add
mov
ret
sub
inc
outsb
sbb
daa
pop
js
pop
or
sarb
int3
ficoms
repnz
loope
icebp
mov
fistpl
jmp
mov
fs
mov
pop
loopne
mov
dec
or
mov
sbb
test
pusha
insl
sbbb
add
jae
test
das
sub
daa
int
outsl
pop
xor
cmpsl
cmpsl
push
mov
jmp
mov
movb
sub
xor
xchg
aas
sarl
out
push
cli
shll
or
dec
ret
push
mov
push
lahf
lcall
int
cwtl
loope
ror
pop
popa
inc
push
loop
sarl
xchg
test
loop
jmp
jb
fldenv
dec
cmpsb
int3
push
jne
lret
pop
dec
repnz
jg
addl
push
mov
mov
insl
sub
pop
shlb
insb
imul
add
xor
xlat
jne
adc
mov
imul
jbe
jp
pushf
out
dec
and
fistpll
xor
cwtl
lods
popa
mov
sbb
aas
sbb
mov
jbe
dec
stos
data16
outsl
dec
sbb
inc
fs
insb
cltd
in
outsl
push
in
jnp
mov
push
pusha
in
pop
mov
clc
lahf
test
xorl
lock
sarb
jp
xor
leave
ss
push
stos
jge
divb
cmp
movsb
and
call
ret
mov
or
jb
inc
cltd
push
xchg
push
insl
repz
pop
or
xor
mov
jno
cmp
push
sti
pop
inc
or
xor
sbb
jbe
push
std
pop
sbb
in
out
stc
aas
mov
aas
mov
lahf
and
fstpt
lcall
adc
mov
cmpsl
jnp
pop
push
int3
cmp
pushf
jae
in
js
addr16
xchg
pusha
insl
sbb
mov
bound
data16
sbb
jb
add
rorl
ret
fstpl
jmp
sti
push
mov
add
dec
fcmovne
mov
push
dec
inc
adc
dec
or
notb
arpl
push
lock
ds
test
cmp
xor
clc
sahf
push
aas
and
fstps
jo
jle
movsb
add
leave
cmpsb
cwtl
dec
addl
jecxz
or
andl
push
cmc
mov
push
inc
dec
stos
test
xchg
insl
outsb
daa
mov
in
pop
leave
scas
pop
shll
into
mov
push
ja
stos
mov
sbb
imul
out
clc
lret
dec
fs
ret
pop
movsb
lods
inc
cltd
pop
xor
ss
mov
jecxz
dec
ljmp
das
push
sub
jp
dec
mov
daa
fwait
mov
pop
sub
mov
je
lret
mov
fnstsw
mov
xor
in
xor
jns
notb
daa
clc
int
cmp
push
add
shl
pop
push
inc
push
mov
sbb
mov
ja
push
push
and
mull
sahf
aas
jecxz
xchg
stos
pop
sbb
test
jbe
aad
adc
jecxz
pushf
popa
out
lahf
pop
jb
bound
push
and
jae
bound
mov
push
xor
hlt
daa
dec
outsb
arpl
cmp
int3
orl
stos
xor
sbb
loope
inc
cpuid
or
jecxz
mov
lods
stos
jle
lahf
mov
xchg
hlt
scas
repnz
ret
es
mov
lahf
bt
add
inc
bound
xor
xor
mov
sbb
xchg
dec
popfw
mov
jecxz
repnz
pop
repz
sub
mov
shlb
push
jle
lahf
scas
adcb
add
das
fsubrs
test
das
pop
mov
mov
popa
sbb
xorb
data16
pop
add
sub
sub
push
mov
and
stos
sub
cmc
push
jge
add
leave
pop
cmp
adc
sbb
pusha
cmp
push
imul
lods
outsl
enter
xor
cld
out
std
or
sub
sbb
inc
sub
add
add
mov
das
xchg
jo
push
je
dec
mov
aad
sbb
insb
sub
lods
cmp
mov
mov
cmc
mov
rorl
inc
or
or
push
sbb
inc
fwait
adc
cmp
and
mov
fbstp
pop
stos
rorb
xchg
subps
fisttpll
int3
sbb
cwtl
pop
lret
sub
arpl
mov
adc
cld
enter
pop
add
pop
mov
das
jmp
jbe
cld
jl
outsl
clc
add
pop
aaa
xchg
mov
outsb
icebp
outsl
leave
rcll
push
arpl
jg
shlb
dec
jle
mov
xor
insl
lret
decl
push
repnz
aas
or
pop
mov
mov
push
or
cmc
mov
lods
mov
jl
cmp
fdivr
and
mov
adc
aam
adc
mov
mov
pop
xor
mov
mov
mov
pushf
movsb
mov
sbb
jae
sbb
inc
jecxz
aas
hlt
jb
mov
je
nop
mov
pop
cmp
sub
pop
cmp
stc
or
push
scas
leave
sarb
mov
push
push
sbb
jecxz
and
or
fs
outsb
stos
mov
xor
aaa
mov
enter
shlb
push
mov
nop
rorl
int3
cmp
lock
xchg
dec
pop
int
push
mov
scas
cmp
shll
mov
cmp
or
push
movsb
mov
jp
shlb
ja
inc
xchg
xchg
sarb
int
inc
sub
arpl
jmp
dec
out
int3
xor
int3
xor
call
jle
ja
jae
xchg
sub
or
mov
push
pop
fcomip
cld
adc
mov
push
xlat
fildll
data16
add
aad
pushf
ret
mov
pop
nop
or
ja
les
jnp
push
ss
mov
xor
and
movsb
push
and
enter
pusha
xor
dec
push
adc
add
test
or
roll
das
enter
lret
jg
jge
sahf
pop
adc
out
jmp
mov
in
je
add
loopne
wrmsr
add
xlat
adc
testl
lods
and
pop
adc
mov
xchg
jge
fldt
mov
dec
lds
dec
ret
pop
cmpsb
jecxz
mov
or
push
lea
filds
jnp
pop
mov
fldcw
sub
push
ds
jmp
inc
pop
aam
test
cmp
cmp
pop
dec
jmp
out
inc
repz
add
das
movsb
sbb
cmp
lods
je
jecxz
or
ds
jge
call
jnp
xor
imul
addr16
sbb
push
mov
cmp
or
inc
sub
lock
aad
pop
cmp
jge
mov
cmp
cmp
push
add
subl
xlat
add
jne
pop
shll
pop
xor
int3
or
lret
push
jbe
arpl
repnz
ja
add
aaa
seta
add
sub
mov
sbb
cmp
adc
arpl
jbe
int
pop
adc
push
pop
dec
in
sbb
rcr
data16
pop
jp
jae
pop
jno
mov
test
jg
cwtl
pop
mov
nop
ljmp
jge
jb
pop
sbb
loop
test
mov
pop
add
mov
sub
push
inc
in
mov
cli
scas
sub
jne
dec
cwtl
sbb
stos
lods
es
lea
jae
sbb
jge
mov
clc
adc
cmp
mov
adc
mov
add
iret
fmuls
in
jne
jne
inc
repnz
push
dec
inc
nop
int
dec
lcall
mov
std
mov
mov
cmp
rep
pusha
rcrl
adc
xor
xchg
pop
outsl
fwait
hlt
arpl
loopne
cmovge
subb
icebp
movsl
out
adc
enter
mov
daa
das
mov
xor
lods
and
out
fdivs
adc
add
cmp
sub
jb
sub
in
adc
pop
insl
dec
cmp
cli
pop
hlt
std
cmp
cmp
add
sbbb
inc
leave
scas
dec
cmp
dec
arpl
sbb
pop
xchg
call
stc
fisttps
sbb
or
pop
in
fwait
test
xchg
pop
dec
test
or
movsl
add
mov
pop
in
in
or
dec
call
sbbb
insl
sti
mov
adc
scas
xchg
fnstenv
add
jl
sbb
jg
push
pop
xchg
jp
fs
sar
decl
sbb
mov
sub
jno
or
int3
outsb
mov
mov
push
inc
add
ret
clc
sbb
and
pop
sahf
xchg
lret
ret
addr16
push
shlb
xorl
and
jl
jg
aas
icebp
fucom
fsubrl
push
out
mov
pop
mov
mov
add
jno
pop
out
fildll
sub
sub
test
test
sub
imul
sub
gs
adc
xlat
sub
pop
rcrl
in
andb
mov
dec
jnp
xor
outsl
cmp
and
mov
mov
xchg
shlb
jge
sahf
sub
out
mov
push
rclb
hlt
rcr
rcl
imul
and
sahf
les
fisubrl
mov
and
mulb
mov
jnp
out
das
js
xor
push
addr16
pop
nop
insb
jns
cli
xor
sbb
test
adc
lods
out
mov
push
stc
test
mov
pop
cmp
jae
and
xchg
mov
sahf
dec
adc
push
inc
hlt
gs
dec
inc
lahf
ljmp
in
dec
in
adcl
xchg
pop
arpl
pop
and
inc
icebp
xchg
pop
pop
movsb
addl
cmpsl
cmp
push
dec
push
rclb
adc
pop
sbb
push
jp
xchg
hlt
jb
sbb
lock
adc
push
dec
mov
cmpsl
mov
int
fs
popa
pop
movl
lret
les
fwait
pop
sub
ret
mov
cmp
sbb
jb
mov
mov
xchg
inc
sub
adc
xor
out
aad
cmp
add
cli
pop
inc
add
mov
inc
mov
or
sahf
test
or
push
pushf
cmp
fbld
scas
stos
pop
ret
cmp
jns
ds
test
jb
testl
scas
idivl
push
fisttps
inc
sti
fistps
adc
shll
loopne
cs
dec
pop
and
mov
pushf
push
frstor
pop
lds
test
dec
add
popa
push
out
mov
out
adc
rclb
mov
jl
je
sub
xchg
pop
xor
test
nop
inc
pop
cmp
xlat
or
scas
adc
repz
pop
dec
sub
xlat
jp
xor
jbe
int3
out
pop
ds
jle
xchg
imul
ret
jno
into
mov
stos
adc
adc
sub
idivl
xor
dec
out
fsubrp
cwtl
push
dec
jnp
je
or
sub
adc
mov
dec
add
sub
in
mov
in
lahf
xor
fs
or
cmpsb
fs
xlat
cmpsb
fldenv
fimuls
push
callw
stos
mov
inc
add
arpl
and
xor
call
mov
cmp
daa
xor
pop
and
mov
pop
adc
int3
pop
xor
std
push
dec
inc
es
xchg
cwtl
and
scas
adc
mov
orl
push
pop
jo
test
dec
mov
scas
pop
insl
fnstenv
pusha
mov
push
pop
cmp
xor
pop
pop
sub
notl
xor
sub
push
ficoml
sub
cwtl
mov
lret
push
push
push
popa
js
xchg
cmp
mov
jns
data16
rcrb
ret
loop
andl
cwtl
mov
int
loope
setnp
push
loope
jecxz
pop
xor
flds
shll
xor
inc
movsl
mov
push
and
sbb
add
imul
jle
xor
jp
punpckhbw
add
lahf
setnp
push
out
push
jl
and
cmp
seta
mov
fneni(8087
jo
mov
push
adc
mov
add
mov
lahf
xor
movsb
add
movsb
cmpsb
pop
push
pop
lods
add
cmpsb
pop
iret
mov
psllq
sbb
push
inc
mov
push
or
popf
push
inc
mov
aad
pop
pop
pop
and
pop
sbb
push
push
pushf
add
das
dec
int
fadds
jge
pop
mov
xor
or
gs
fstps
or
ret
sub
push
getsec
out
jmp
or
popf
push
inc
mov
xchg
sub
pop
push
add
adc
cli
pop
dec
add
sbb
push
movsb
xor
and
imul
inc
xor
stos
pop
fnstsw
jp
and
xchg
dec
mov
inc
dec
lret
add
pop
pop
bound
lea
inc
jle
xchg
push
pop
sub
insb
fstps
add
sub
adc
ret
sub
or
jnp
ds
sbb
mov
pop
push
cld
scas
jo
pop
inc
in
aad
push
outsb
jmp
stos
aaa
push
andb
leave
mov
pop
xor
sahf
push
cmc
bound
push
stos
adc
pop
pop
cmpsb
lock
fsts
std
xchg
cmc
push
jnp
dec
sbb
pusha
std
xchg
jmp
jnp
inc
pop
loope
mov
nop
fldenv
arpl
push
dec
mov
dec
iret
xchg
push
push
sbb
sub
or
cmp
insb
adc
add
pop
lock
add
push
in
pop
jnp
xor
imul
js
xchg
lret
pop
push
lods
mov
fwait
jle
lods
pusha
add
daa
out
mov
cmc
outsl
sbb
inc
lods
gs
inc
adc
mov
sarl
jb
jmp
dec
mov
aad
cmp
leave
scas
cmc
jb
aad
dec
cmc
stos
or
scas
mov
add
mov
sti
add
jnp
sbb
jp
pop
shrl
pop
dec
and
sahf
pusha
jbe
stos
in
ja
jle
leave
daa
inc
aam
fbstp
lods
xor
roll
add
pop
insb
sbb
pop
outsl
add
add
add
xor
es
paddd
andl
jb
push
add
ss
sahf
push
pop
xchg
sbb
xchg
adc
decl
dec
in
adc
imul
insl
add
lods
xor
xor
jl
mov
pop
pushf
es
test
and
clc
jbe
pop
ljmp
test
or
shrb
mov
fwait
jle
jmp
pop
add
cmpsb
arpl
outsb
mov
outsl
out
aad
bound
or
lret
adc
and
jnp
mov
arpl
inc
sub
cmpsb
fnstsw
jno
dec
int
les
das
push
or
dec
sbb
xor
cmp
mov
jne
out
stc
inc
jl
incl
repnz
repz
lahf
add
and
je
inc
ret
inc
lahf
int
ljmp
xchg
negl
scas
and
mov
xchg
adc
mov
xorb
es
jle
in
movsl
das
inc
std
add
cvtdq2ps
sub
push
push
push
into
inc
fs
sbb
inc
shr
push
push
push
mov
mov
scas
jle
inc
insb
mov
fdivrl
out
cwtl
and
cmp
popa
xchg
and
es
in
ret
or
dec
push
mov
mov
outsb
inc
hlt
or
xchg
mov
or
iret
sbb
mov
fcomps
jg,pn
movsl
mov
std
cmp
mov
aam
pop
add
inc
push
pop
fists
or
scas
sub
push
dec
pop
bound
insb
xchg
push
jecxz
inc
pop
or
jae
jb
cwtl
inc
std
and
mov
sub
jmp
shrb
push
mov
mov
mov
or
lret
mov
fmul
pop
jp
inc
add
push
fistl
and
mov
inc
cmp
mov
add
pop
lea
stos
fldlg2
dec
mov
mov
xor
and
ss
fbstp
adc
sahf
adc
adcb
out
es
push
mov
pop
xor
dec
rcrb
cmp
jno
and
jmp
repnz
ficoml
adcl
mov
mov
int3
inc
fcompp
clc
cmp
nop
test
xchg
jns
pop
or
fs
fimuls
icebp
fstps
lahf
lock
movq
mov
push
mov
lret
loopne
mov
jmp
leave
lahf
add
xchg
mov
cmc
and
mov
adc
mov
sbb
pop
repz
cmp
xorl
gs
ret
pop
xchg
sahf
mov
mov
loop
stc
push
push
or
repnz
daa
dec
flds
mov
pushf
aas
outsb
adc
xor
xchg
cmp
les
xor
outsl
pop
fcompl
pop
pusha
mov
decb
rorb
pop
mov
cltd
lds
hlt
push
fdivl
shlb
inc
fs
daa
testl
jmp
js
insl
lahf
sar
ljmp
dec
mov
popf
movsl
ja
cmp
xor
push
andb
gs
repz
test
xchg
push
in
jle
sbb
bound
xchg
stos
bound
cmc
add
dec
loop
push
js
ficomps
or
mov
push
addr16
push
cld
out
xchg
dec
inc
mov
cmpsl
outsl
repnz
mov
pop
and
add
sub
imul
mov
shlb
movsb
insb
xchg
int3
mov
outsl
loopne
push
sbb
sub
das
stos
movsl
xchg
fdivl
cmp
divb
sbb
mov
mov
test
dec
sub
and
inc
cmpsl
mov
jg
leave
imul
shlb
push
lods
rcl
push
jg
xchg
jo
push
insl
dec
dec
jg
push
xor
test
cmovle
inc
sbb
out
xor
jg
pop
dec
out
ret
imul
push
add
xor
xor
add
aas
push
jnp
inc
pop
sar
call
sub
jb
in
insl
mov
push
xor
adc
insl
pop
popa
mov
lcall
adc
insb
dec
sbb
arpl
mov
int3
mov
adc
mov
mov
dec
dec
sahf
mov
ror
jo
mov
or
fdivrp
mov
arpl
test
test
xor
mov
fdivrl
cmpsb
mov
pcmpeqw
or
jle
lret
js
pusha
dec
pop
jno
pop
push
ficompl
in
pushf
xor
outsl
sbb
mov
in
push
lret
cmpl
or
dec
xchg
xlat
push
xchg
mov
add
pop
inc
mov
jge
push
fincstp
jge
lds
dec
out
adc
movsl
cmp
inc
imul
xchg
sub
jge
push
in
cmpsl
push
es
clc
add
mov
iret
imul
shr
pop
fwait
cmc
pushf
or
lods
push
adc
iret
sbb
std
jae
dec
int
xchg
dec
daa
lcall
dec
xchg
in
insl
sti
xchg
test
fwait
stc
or
sbb
mov
add
and
jp
arpl
adc
cmpsl
pop
fimuls
inc
inc
sub
les
clc
mov
testl
lock
adc
sbb
ljmp
into
jle
xchg
mov
fisubl
mov
cmpsl
and
aas
scas
jge
jg
lcall
sub
jle
outsl
out
out
sbb
jne
inc
shrb
fsubrl
aas
dec
aaa
jo
sbb
hlt
sub
push
xor
cmpb
and
xchg
fadd
mov
sub
insl
lahf
fisubrs
and
xchg
pop
js
cmp
sti
adc
das
push
ror
decl
dec
add
hlt
lcall
in
jge
sbb
loopne
inc
mov
aam
xor
sti
nop
and
js
popa
dec
jno
mov
inc
add
clc
inc
ret
loop
imull
cs
imulb
cld
mov
xor
out
pushf
xchg
enter
dec
push
xor
scas
mov
dec
pop
add
movsb
push
lock
cli
outsl
inc
outsb
jno
and
xchg
fisubrl
cld
sbbl
dec
ds
lods
mov
mov
loope
pop
inc
loop
mov
mov
and
loopne
and
repz
sub
or
arpl
sbb
jmp
push
and
lea
nop
jle
movb
push
insl
dec
xchg
mov
jbe
xorl
jmp
cli
inc
ja
ficompl
mov
testl
xchg
stos
aaa
sahf
xor
loopne
adc
stos
adc
inc
xchg
cld
pop
jae
adc
fucomi
inc
mov
add
mov
and
sub
dec
mov
xor
pop
movsl
pop
loope
jl
ffreep
mov
xor
push
mov
adc
mov
bound
call
pop
clc
lods
les
outsl
arpl
dec
pop
mov
or
xchg
rol
and
test
add
ficoms
lahf
sbb
jmp
push
jle
fwait
sbb
xor
repnz
sub
je
jbe
xor
dec
or
enter
mov
in
xlat
inc
out
mov
mov
push
push
faddl
mov
pop
mov
cmpsb
cmpsl
xor
pop
fsubr
addb
cmpsb
push
or
dec
or
add
enter
loop
not
loop
cmp
inc
addr16
aas
add
xchg
leave
rcll
pop
fmuls
xor
lods
mov
mov
cmp
or
mov
xor
adcb
imul
xor
mov
push
lods
mov
jbe
xlat
xor
sub
mov
jnp
xor
les
in
testl
sbb
push
movsl
inc
pop
ret
mov
cmp
test
rolb
enter
sarl
ss
dec
js
add
enter
daa
jle
lock
xchg
ret
xor
sub
inc
insl
div
aas
cmp
pop
jnp
fmull
adc
or
xlat
cwtl
inc
inc
mov
sbb
xchg
mov
inc
or
fwait
outsl
jg
xor
sub
push
xor
sbb
jg
aam
sbb
stos
push
push
fwait
pop
in
jmp
ljmp
sbb
aas
adc
xchg
inc
test
in
enter
jae
and
push
cmp
mov
sahf
sub
lock
mov
sti
repz
testb
ret
es
ret
pop
shlb
xor
je
outsl
cmp
add
fisubrs
cltd
gs
es
adc
or
xor
pop
push
mov
push
xchg
adc
jg
hlt
xchg
mov
cld
ds
cs
out
xchg
rolb
rcl
pop
daa
sbb
stc
add
les
pop
pop
push
cmc
stos
dec
inc
sarb
cmp
cwtl
mov
dec
cmpsb
aam
xor
lcall
loopne
sub
pop
pushl
inc
flds
or
sahf
sbb
xchg
and
pop
clc
mov
out
jg
clc
ljmp
mov
mov
push
popa
add
add
mov
lock
adc
adc
jmp
cmp
rol
cmpsb
cmp
and
mov
adc
inc
xor
mov
dec
or
test
dec
jge
std
inc
out
aam
adc
out
and
jecxz
aam
js
lock
pop
jae
lret
aad
add
aas
ret
test
cmp
push
cmc
jo
test
push
stos
adc
mov
cli
outsl
mov
jp
js
clc
push
sbb
mov
lds
ljmp
inc
xor
lods
mov
cmp
pop
imull
xor
std
lret
pusha
mov
mov
adc
dec
cld
and
mov
jge
xchg
testb
or
ja
mov
or
mov
into
or
and
insb
jne
push
loopne
iret
inc
mov
enter
ds
repz
out
xor
add
or
imul
cmp
jnp
adc
cmp
push
pop
outsl
movsl
jle
inc
clc
daa
push
mov
outsl
nop
jae
mov
cmpsl
aam
pop
cld
cld
jns
add
mov
dec
inc
movsl
mov
adcl
sbb
xchg
sbb
sahf
push
push
fsubr
xchg
je
mov
push
jl
jae
loop
and
cmpl
mov
inc
mov
mov
sbb
cltd
push
add
cmp
inc
inc
and
add
ffree
push
aaa
jnp
outsb
js
or
dec
lds
data16
aaa
push
ret
adc
insb
xchg
mov
mov
jg
cmp
xchg
ljmp
pop
popa
adc
cmp
jecxz
mov
push
arpl
xor
sbb
push
das
mov
icebp
dec
xchg
push
jmp
loop
mov
in
shlb
out
push
rorb
xor
or
xchg
adc
push
inc
hlt
sub
enter
jo
and
sbb
insb
pop
std
add
sub
addr16
aad
and
xchg
and
sub
out
fs
loopne
dec
dec
dec
mov
ret
push
aam
pop
mov
lret
push
push
sbb
lret
lret
stos
sbb
and
cmpl
dec
sbb
cmpb
andl
int3
repnz
fcmove
lahf
ja
dec
jge
xor
test
xor
daa
sbb
push
jecxz
fildll
xchg
xor
jne
mov
cmpsb
and
mov
pop
leave
push
in
js
lret
jae
add
insl
xor
out
jmp
orl
lret
mov
leave
pop
pop
cld
cmp
xor
inc
push
pop
js
pusha
mov
call
sub
call
dec
mov
call
add
inc
jnp
inc
jl
js
cmp
ds
and
cmp
inc
rcrl
rcll
xor
aad
pop
pop
jae
pop
test
arpl
scas
pop
and
loope
pusha
jae
call
sub
dec
mov
aas
shll
and
pop
cmpsb
dec
stos
pop
test
lcall
in
adc
movsl
leave
mov
scas
pop
ja
fistpl
cs
pop
lcall
es
in
xchg
cmpsb
rclb
dec
je
jg
iret
fnstsw
cmp
mov
jo
fwait
lahf
mov
fwait
in
jne
pop
pusha
dec
adc
inc
lret
loop
mov
shlb
out
jle
push
push
fcompl
adcb
test
sub
mov
jl
or
mov
iret
push
add
cmp
cs
mov
and
cmp
in
sahf
outsl
mov
add
mov
sbb
xchg
or
pop
pop
sub
inc
daa
xor
push
jge
mov
mov
es
mov
neg
jo
addr16
sbb
mov
ja
out
xor
les
je
push
or
popa
push
inc
daa
out
test
imul
jl
jmp
lcall
js
or
jno
xchg
stc
in
add
fcoms
mov
mov
push
xor
scas
add
inc
xchg
cli
shr
fnstsw
idiv
popf
das
mov
cwtl
aam
and
js
mov
sbb
out
insb
inc
addr16
scas
mov
sbb
imul
cmc
sbb
imul
scas
mov
in
or
pop
addr16
inc
xchg
js
outsb
ret
xor
jae
in
mov
add
mov
mov
lret
ret
pop
xchg
push
icebp
nop
pop
dec
or
fldt
gs
and
and
and
test
push
scas
aas
mov
xchg
fsubrs
divb
add
pop
scas
jle
push
es
shll
sbb
push
dec
add
sub
and
popf
cmp
mov
test
popa
fs
mov
adc
repz
in
ret
pop
inc
sub
int
sub
fdivr
cltd
pop
cld
pop
and
mov
sbb
pop
arpl
mov
pop
jb
addr16
fs
xor
shrb
inc
bnd
push
mov
pop
dec
sbb
jne
adc
cmp
andb
adc
movsl
jmp
scas
mov
cld
mov
jnp
jmp
fwait
pop
testb
mov
and
cmp
dec
mov
sub
jle
lahf
mov
pop
shrl
hlt
push
xlat
inc
pushf
fistl
sub
pop
dec
loop
cld
or
cmp
loopne
push
out
xchg
inc
lahf
lcall
pop
push
lcall
inc
in
pop
sbbl
pop
and
mov
mov
ficompl
pop
fdivrl
inc
jl
jecxz
nop
xchg
repz
adc
inc
outsl
or
mov
pop
mov
xchg
dec
inc
add
pop
adc
ja
inc
and
mov
cmp
sbb
mov
hlt
push
rorl
cwtl
fwait
sti
nop
test
cmp
mov
imul
call
je
inc
or
xchg
imul
das
jnp
pushf
xchg
fimuls
push
fdivrl
inc
jl
mov
sbb
add
daa
inc
shlb
daa
ret
das
clc
mov
or
imul
ja
inc
and
andl
xchg
mov
jecxz
xchg
aam
push
cmpsl
inc
add
mov
and
in
push
pushf
or
je
inc
sarb
sti
clc
mov
sbb
jg
xor
xchg
inc
push
in
and
mov
lret
aam
push
filds
sub
mov
and
hlt
outsb
das
mov
fs
and
lcall
adc
addr16
xchg
xchg
adc
cmpb
adc
push
dec
jae
shrl
stos
pop
jnp
sub
loop
aas
push
out
xor
pop
jnp
je
arpl
or
enter
jg
gs
pop
pop
sbb
cmpl
xchg
sub
daa
cltd
or
mov
sub
cmpsb
jo
daa
repnz
hlt
inc
add
sbb
les
cmp
mov
pop
lahf
arpl
test
adc
je
mov
inc
mov
mov
das
dec
aam
sub
hlt
mov
ss
insb
inc
sbb
addb
pop
and
adc
outsl
stc
cmp
outsl
pop
arpl
sti
aaa
push
sarl
jle
fcom
pop
ret
lret
adc
sbb
jo
or
xor
mov
sbb
aad
ss
jae
jl
pop
cmc
bound
adc
inc
inc
sbb
int3
push
cld
mov
cmp
pop
xor
push
and
adc
xlat
xor
fstpl
sarl
int3
inc
pop
daa
cmp
jl
sub
mov
fisubl
and
cmp
mov
xchg
cwtl
sub
push
insl
outsb
mov
pop
mov
lret
cmp
mov
jcxz
jnp
mov
ja
and
mov
into
and
mov
cmp
sbb
bound
adc
xchg
out
mul
std
outsb
movsl
nop
pop
sbb
and
and
pushf
sahf
js
loop
xchg
inc
movsb
rcrl
gs
xor
outsl
pop
lret
xor
and
sub
sub
push
xchg
cwtl
ret
sbb
lds
adc
xchg
sbb
arpl
loope
fnstenv
inc
lods
mull
cwtl
in
jnp
popa
idivl
jno
jmp
mov
xor
fdivp
dec
mov
jge
stc
out
and
mov
cmp
mov
cmp
jl
inc
mov
jae
inc
inc
jbe
adc
adc
aad
adc
mov
adc
mov
insb
fucomi
mov
and
xchg
outsb
mov
stos
push
mov
xchg
fistps
dec
pop
aam
mov
mov
pop
inc
or
lea
cmp
jecxz
inc
daa
sub
mov
leave
ret
lea
jne
xchg
dec
dec
mov
data16
mov
pop
in
rol
aas
fdivs
leave
push
lcall
cli
inc
jae
leave
popa
fsts
fstl
scas
adc
inc
cmp
stos
leave
into
pop
mov
call
xchg
sbb
mov
je
sbb
loope
negb
insb
pop
mov
inc
ljmp
push
shlb
pushf
pop
mov
das
or
bound
pushf
jp
jae
iret
test
dec
pop
stos
insl
inc
movl
jno
or
movsl
scas
pop
in
test
nop
in
es
and
outsl
das
add
pop
cld
mov
inc
je
mov
iret
push
ja
cs
imul
inc
notl
pop
outsl
lods
xchg
sub
xor
sbb
js
xlat
jge
nop
jl
lods
sub
inc
icebp
out
insb
pusha
xchg
call
push
dec
mov
push
lea
jge
lods
pop
mov
iret
lods
fs
or
dec
imul
sbb
ret
xor
sbbb
popa
xor
outsl
pop
aas
inc
mov
jecxz
pop
pop
les
pop
xor
inc
pop
push
bound
movsl
aaa
lock
dec
mov
mov
rol
mov
es
xor
sbb
sub
pop
or
pop
sbb
sbb
sbb
cld
mulb
jnp
add
das
cmp
inc
les
pop
enter
lret
jecxz
xchg
loopne
mov
push
movsl
addb
push
and
push
xchg
push
leave
shrb
adc
bound
cmp
arpl
std
xor
sub
xchg
lds
add
aas
fnsave
hlt
movsb
sub
cmp
mov
in
rol
dec
inc
ds
adc
mov
and
push
push
aas
push
movb
fcmovnb
sbb
add
out
sbb
mov
push
sbb
gs
push
and
dec
dec
repz
mov
movsl
ljmp
aam
pushl
mov
inc
mov
ret
scas
jbe
inc
rcrb
push
out
push
jae
pushf
gs
pop
and
xchg
lcall
mov
xchg
sub
inc
aas
pop
daa
imul
add
pop
pop
insb
fwait
xor
mov
sub
leave
iret
cmpsl
rorl
sti
es
push
and
sbb
arpl
pop
xchg
jae
popf
mov
out
xchg
daa
sahf
rorl
push
add
and
push
mov
xchg
jbe
nop
fistpl
dec
sarb
xor
cmp
or
cwtl
cmp
jp
fstpt
adcb
jb
into
mov
dec
jno
pushf
inc
jg
setl
ss
or
cs
aam
in
mov
pop
inc
push
pop
out
xor
and
adc
pop
addb
sbb
outsl
fstps
jge
jbe
pop
iret
cmpsl
jmp
pop
addr16
pop
push
fstl
adc
clc
out
test
cltd
fisttpll
in
sbb
xchg
rorb
sub
aad
repz
pusha
jmp
push
push
pop
addr16
shl
pop
pusha
outsl
pusha
shrb
mov
mov
xchg
int
in
popa
pop
in
push
xlat
inc
arpl
out
out
int3
sub
out
mov
lods
jae
je
daa
das
scas
jo
dec
inc
add
lretw
push
jae
vmread
fs
pushf
xor
sbb
push
sbb
xchg
xchg
imul
arpl
inc
push
fisubs
jae
pushf
xchg
jbe
adc
leave
add
push
jns
or
in
jnp
je
fistps
mov
and
jne
ja
mov
ss
jnp
jl
xchg
push
mov
aaa
mov
jp
inc
xchg
in
repz
out
popa
in
sbb
popa
pop
ficomps
enter
mov
je
push
rorl
mov
and
sbb
mov
inc
test
aad
dec
imul
pusha
in
stc
enter
jmp
and
lret
jb
pop
inc
gs
push
adc
mov
mov
out
push
es
clc
ficoms
jp
sbb
stos
jecxz
daa
mov
in
scas
cwtl
and
in
xchg
fstpl
setno
pop
inc
inc
out
and
mov
push
dec
fmull
shll
add
sbb
pop
shrl
cmp
mov
movb
in
jl
arpl
push
xor
fs
sbb
repz
addr16
fsubs
ljmp
pop
bound
dec
mov
push
pop
gs
sbbl
or
add
lahf
jae
mov
stos
sahf
das
iret
and
sbb
cmp
movsl
jmp
jno
xor
out
jae
mov
mov
in
sti
jle
xchg
daa
insb
andl
xor
mov
mov
out
in
jns
movl
dec
and
mov
out
insb
xchg
xor
jmp
jg
pop
lods
adc
es
imul
add
or
jge
psubq
add
and
mov
leave
iret
gs
jno
pop
xchg
xor
jge
aaa
add
sub
inc
aas
ret
ja
call
xchg
mov
dec
pop
add
rorl
pop
das
xor
and
repz
nop
out
xor
out
leave
dec
sarl
aaa
mov
inc
dec
mov
daa
sub
aaa
push
addr16
sahf
orl
fbld
cwtl
push
loop
out
and
dec
sub
inc
int3
int3
mov
mov
aaa
scas
xchg
in
pop
and
inc
or
lock
loope
adc
mov
mov
nop
repz
shlb
inc
ds
jge
adc
sbb
dec
test
or
fdivr
nop
xor
sbb
notl
adc
cli
sub
sti
fmuls
mov
adc
push
cwtl
xor
pop
mov
cli
arpl
orb
enter
mov
push
xor
ds
xor
xor
decb
arpl
bound
push
rcpps
popw
xlat
mov
push
push
jns
mov
cmpsb
cld
das
testl
ljmp
rcrl
shll
jmp
sub
jns
pop
stos
shlb
enter
in
mov
adc
roll
adc
push
ljmp
push
dec
lret
cltd
call
stos
xor
jmp
into
inc
add
sarb
sti
sub
fistl
mov
fsub
adc
popf
iret
loopne
std
jne
mov
lods
and
je
jo
flds
call
jae
enter
iret
gs
out
jb
lods
sarl
out
sbb
je
pop
xor
mov
jns
dec
jg
ja
movsb
cmc
nop
lods
mov
dec
mov
xchg
cmp
addr16
fwait
insl
dec
testl
or
stos
leave
sub
mov
daa
jge
jae
jne
lods
add
popf
jmp
dec
incb
incl
mov
mov
idivl
inc
add
xor
fbstp
stos
js
mov
fcomps
mov
mov
lret
push
xchg
fists
icebp
mov
pop
adc
xlat
xorl
inc
inc
iret
jo
jg
lret
shlb
jle
xlat
push
push
inc
cmp
jmp
jns
push
inc
push
mov
and
fisttpll
mov
into
pop
stos
push
bnd
in
and
adc
aaa
mov
mov
andl
arpl
xor
pop
cmp
push
es
call
insb
pop
repz
outsb
sahf
repz
test
fld
repnz
pop
xchg
xchg
add
inc
bndstx
aaa
lret
aas
sbb
lods
addr16
hlt
mov
cmp
sarb
bound
cmp
seta
adc
lods
mov
pop
add
inc
cmp
sub
and
mov
fcoml
or
icebp
inc
add
enter
mov
icebp
xchg
imul
sti
jnp
jecxz
out
push
xchg
pop
shrb
imul
lcall
in
insb
scas
mov
jbe
push
sub
inc
insb
xor
mov
fstpt
outsl
push
and
je
push
mov
stos
inc
and
or
push
ds
sar
jge
push
sbb
mov
push
test
inc
int3
mov
or
fs
arpl
mov
cltd
add
pop
pop
push
xchg
das
rcr
lea
mov
pop
out
push
mov
test
sarl
dec
daa
ficoms
out
aam
repz
xchg
jge
imul
xchg
pop
inc
lea
cmp
mov
xchg
sarl
mov
fmul
clc
or
mov
xchg
lods
in
dec
arpl
cltd
bound
sti
mov
fists
pop
das
cmp
sbb
fsubrs
lret
shlb
mov
adc
push
pop
push
ret
push
jno
lret
pop
push
jle
pushf
in
inc
popf
enter
jne
xchg
nop
cmpsl
pop
test
ljmp
mov
fcoml
sar
add
pusha
xchg
mov
adc
fcomps
outsb
repnz
lods
xchg
aaa
dec
xor
sub
hlt
cmp
mov
lods
mov
jp
jae
xchg
push
stc
fstpt
movl
movsb
call
and
jle
daa
cmpsb
push
mov
rcrb
sbb
cmp
push
pop
out
movsb
lret
jg
mov
inc
mov
outsb
cmp
jp
jno
clc
add
rcrb
cwtl
xor
mov
jle
or
sbb
mov
clc
nop
js
or
sub
push
loop
bound
out
sbb
aad
xor
and
mov
test
adc
icebp
push
incb
repz
push
incl
repz
pop
sbb
xor
jne
sbb
loop
stos
clc
icebp
push
jmp
outsb
iret
or
sub
pop
mov
or
mov
repz
dec
add
jnp
add
xchg
sahf
xlat
js
hlt
push
fsubs
dec
test
pop
mov
shlb
xchg
test
insb
pop
into
xor
push
and
jmp
sub
rol
clc
aad
lret
adc
cltd
dec
push
mov
add
loope
dec
lcall
pop
jecxz
mov
addr16
in
int
mov
pop
adc
jecxz
pop
hlt
jecxz
lods
jnp
popf
or
xchg
ret
mov
aas
cltd
leave
sbb
mov
push
ret
aas
cmp
sbb
data16
inc
mov
jno
mov
insb
cmp
je
daa
cmp
jne
lret
jnp
hlt
adc
mov
sub
and
mov
pop
and
or
sub
das
out
xor
jp
jge
pushf
push
dec
inc
jl
out
pop
cmp
mov
pop
cld
inc
dec
sub
jp
mov
and
enter
scas
mov
lock
in
imul
pushl
or
data16
fwait
add
insl
js
es
pop
xor
std
into
lcall
inc
sbb
pusha
lret
in
rolb
imul
arpl
loop
cmpb
mov
addr16
add
sub
push
iret
xchg
int
outsb
sub
je
cmc
leave
bound
fldcw
adc
and
xor
jo
sub
lea
adcb
or
xchg
pop
pop
out
rolb
ds
pop
push
push
jge
adc
xchg
push
fimuls
daa
fnstcw
dec
insb
in
and
dec
insl
jmp
lock
dec
add
mov
push
pop
test
push
inc
pop
xlat
xor
bound
shrb
jnp
hlt
les
rcrl
dec
dec
lods
jno
test
fcmovu
push
add
jg
cmp
fisttps
or
aas
lods
divl
pop
mov
pop
dec
inc
inc
fsubrp
sbb
dec
and
dec
repz
mov
lock
mov
jmp
out
jl
sbb
mov
cwtl
mov
jle
nop
mov
call
movsl
cmp
jmp
shlb
aas
int3
push
jg
arpl
add
out
xor
or
adc
or
dec
pushf
xchg
xchg
int3
push
jnp
push
icebp
ret
adc
das
mov
push
addr16
inc
push
push
cs
bound
lds
mov
cmc
test
or
jne
inc
inc
dec
pop
in
in
outsl
xor
outsl
mov
lods
push
test
mov
insb
shll
mov
stos
jecxz
sub
adc
inc
jne
les
xchg
das
push
enter
mov
popf
ljmp
mov
mov
repz
popf
inc
lcall
add
pop
and
dec
xchg
fistpll
sub
pop
xchg
sbb
and
ror
push
cltd
push
int3
dec
and
jnp
push
outsl
cmp
xor
fs
popa
mov
cmp
sbb
pop
fnsave
xor
mov
inc
test
ffreep
mov
xchg
mov
xorb
loop
hlt
cmp
sbb
cmp
mov
cmp
dec
jb
xchg
dec
movsl
repz
push
movsl
stc
loope
jecxz
sub
inc
call
inc
mov
std
mov
and
jno
mov
and
cli
jge
cs
jle
lds
test
mov
outsb
push
mov
or
in
dec
cld
sti
xor
rorb
in
xor
cltd
jle
xchg
and
cli
jns
mov
lret
dec
push
fmuls
icebp
test
stos
jnp
outsl
jnp
push
outsl
shlb
aad
and
add
xchg
dec
in
add
popa
sbb
mov
jnp
cmp
popf
jnp
pop
fcomp
ret
push
sub
pop
inc
cmp
je
stos
mov
push
mov
repz
hlt
lods
cmp
ss
sbb
add
enter
mov
adc
lock
and
or
mov
xchg
pop
cmp
and
or
push
ja
xchg
mov
sub
test
inc
cmpsb
stos
daa
es
pop
movsb
xchg
or
add
int3
push
jmp
lret
add
xlat
test
push
sbb
mov
dec
stc
pop
cmp
sbb
incl
jle
mov
into
or
jmp
mov
push
mov
push
arpl
scas
pop
sbbb
inc
lock
jmp
stos
pop
push
xchg
mov
pop
push
add
add
pop
pop
test
nop
lods
out
jbe
fcmove
pop
mov
adc
test
add
and
testl
mov
xchg
push
je
dec
pop
pusha
dec
cld
dec
gs
mov
fnstcw
loopne
mov
int3
fimull
or
cmp
jb
arpl
daa
mov
and
bound
test
inc
arpl
movsb
loope
sub
inc
dec
mov
test
cmpsl
xchg
mov
call
bound
dec
bound
mov
clc
int3
je
rorb
aad
data16
cmovg
movsl
leave
shlb
mov
stos
mov
add
sahf
mov
cmp
xchg
andb
pop
out
sbbl
icebp
outsl
push
mov
xchg
test
or
mov
sub
cmpsb
je
xor
popa
in
sub
cmp
mov
sbb
push
mov
push
dec
mov
xor
je
out
gs
lds
push
jge
divb
push
call
icebp
cmpsl
cwtl
idivb
xchg
add
fs
push
dec
lret
mov
cli
pop
das
sbb
fcoms
cmp
out
jns
fmuls
pusha
rcrb
push
shrl
lahf
xor
dec
dec
adc
mov
clc
pop
call
xor
dec
cmpl
lcall
dec
aam
mov
aad
enter
test
cmp
and
popf
andl
and
add
cmc
mul
aas
cmp
insl
leave
lods
es
aaa
insl
inc
or
adc
mov
and
pop
sub
mov
call
mov
sub
jg
sbb
or
and
pop
sub
repnz
pop
out
ret
sti
xchg
xchg
jae
mov
xchg
push
mov
jb
cli
mov
dec
fs
pop
inc
das
fdivs
sub
pop
push
inc
hlt
mov
push
jge
int3
push
rol
roll
xor
add
cmp
xor
xchg
cmp
adc
add
addr16
and
stos
pop
bound
rorl
fisubrl
int3
push
jae
divl
cltd
mov
dec
clc
lea
clc
icebp
addr16
mov
sub
push
out
jl
inc
mov
mov
jo
push
mov
sub
sbb
pop
sub
movsl
mov
outsb
fwait
or
pop
sbb
or
adc
fs
and
mov
add
lahf
push
mov
lods
cmp
insb
cs
outsl
outsb
adc
and
xor
loopne
mov
xor
push
inc
inc
fdivl
dec
in
sbb
and
lahf
int
sbb
jecxz
in
or
scas
leave
mov
test
jo
call
pop
adc
sti
je
inc
lret
frstor
ss
xor
and
xchg
jl
rclb
push
imul
mov
adc
adc
mov
adc
clc
cmp
mov
mov
cli
sbb
mul
push
aas
lret
iret
subb
push
das
bound
jecxz
insl
jmp
pushf
cmp
pop
cmp
pop
and
pop
in
xchg
lock
pop
dec
mov
adc
mov
add
loope
inc
dec
movlps
int3
test
sbb
push
pop
shl
out
mov
loop
popl
popf
sbb
jmp
mov
testl
or
adcl
dec
mov
sub
and
mov
pop
xor
xchg
pop
ds
shlb
inc
loopne
xchg
mull
adc
fs
sbb
adc
ja
inc
call
xchg
test
cmp
sbb
add
sbb
pusha
stos
cld
test
mov
aas
clc
cs
mov
fisubrs
jecxz
lcall
xchg
mov
adc
adc
aaa
in
push
jecxz
lret
cmp
sub
mov
fildl
or
add
adc
ficoml
ret
adc
lar
sub
popa
xchg
gs
or
add
inc
sub
outsl
mov
jne
adc
or
push
aas
jg
sub
mov
xchg
mov
sub
pop
cmp
jb
mov
push
or
jle
dec
inc
jg
mov
sub
jmp
lret
cmc
pop
or
sub
pop
jg
or
mov
hlt
xchg
pop
pop
or
pop
sub
pop
sub
inc
xchg
aad
mov
pop
or
xchg
mov
adc
fldenv
push
leave
bound
pop
cwtl
inc
sub
sbb
add
arpl
lock
das
lahf
or
push
xor
movsb
push
adc
pop
fwait
push
arpl
pusha
push
cmp
adc
dec
in
xchg
dec
sti
cs
or
cmpsl
imul
lods
dec
inc
lfs
or
fisubrs
lcall
dec
mov
enter
pop
xchg
and
scas
dec
xor
cmp
ret
daa
cmp
jb
add
sbb
xor
mov
movsb
fcompl
mov
sbb
outsl
mov
scas
cs
pop
scas
scas
cmp
pushf
mov
add
mov
adc
and
add
insb
shll
jo
repz
mov
inc
repnz
addr16
fs
daa
and
mov
imul
jecxz
adc
sahf
pop
ret
pusha
fs
inc
sti
xor
push
stc
adc
xchg
xor
mov
out
movsl
jae
dec
mov
xchg
mov
stos
lret
mov
inc
sbb
fistpl
jg
movzbl
and
pop
mov
pop
push
ja
scas
adc
and
xor
sbb
rolb
inc
adc
sub
lahf
shl
fisttpl
and
shlb
stos
or
push
inc
jp
imul
daa
cmpsl
mov
sbb
mov
push
pop
mov
pop
push
lock
xchg
xor
repnz
pop
pusha
test
pop
repz
xchg
shrb
and
mov
fwait
cld
gs
loope
push
adc
lods
mov
xchg
sti
push
push
jle
sbb
jb
aam
mov
jns
xlat
xchg
dec
add
fldt
mov
pop
pop
pop
sub
and
daa
jne
outsl
or
or
cwtl
cld
adc
shrb
adc
fstl
pusha
mov
popa
pop
subb
les
testb
fistl
js
in
repz
shlb
sbbb
mov
cwtl
loopne
iret
pusha
lods
or
aas
or
hlt
daa
cmp
sub
pop
jae
adc
imul
xchg
dec
ret
aas
clc
xchg
rcr
adc
jb
mov
mov
fwait
out
nop
mov
inc
js
xchg
add
or
inc
sti
sub
mov
ja
or
xor
inc
mov
fs
bound
inc
mov
xor
inc
lock
ficomps
add
xchg
add
lea
in
cmc
cmpsb
cmp
mov
dec
adc
pop
mov
adc
mov
pop
adc
bound
movsb
xchg
sbb
adc
add
mov
aam
xchg
mov
ja
fimuls
jae
popf
gs
jnp
pop
add
pushf
sbb
pop
mov
xor
lret
sbb
jmp
adc
dec
lret
aas
mov
ret
subl
stc
jno
ja
sarl
nop
fcomip
ljmp
sbb
mov
mov
jbe
xlat
mov
jnp
push
call
cli
mov
mov
es
out
lret
mov
jns
inc
fsubs
test
jne
iret
stc
mov
mov
mov
int3
or
in
call
stos
sbb
push
or
sbb
dec
or
jecxz
out
cmp
or
mov
lea
xchg
mov
out
repnz
popf
inc
lods
or
push
push
sti
mov
cmp
adc
push
xchg
pop
shrb
xor
add
pop
std
mov
mov
xor
push
enter
pop
cmp
pop
je
pop
je
insl
fmul
mov
or
out
push
jl
mov
pop
add
or
cwtl
xchg
push
gs
mov
mov
loope
push
shrb
push
iret
mov
loop
les
stc
out
clc
shrl
adc
test
repnz
lock
test
lret
push
int
cmp
insb
xorl
lret
cs
lods
in
add
push
leave
xchg
inc
cmp
lock
xor
mov
sbb
mov
pop
jno
into
outsl
adc
and
mov
cmp
fnstcw
lods
int3
jge
pop
pop
jnp
or
cmp
push
sbb
shlb
stos
push
aaa
arpl
mov
xlat
and
in
cmp
dec
inc
dec
int3
outsb
and
or
mov
sub
orl
inc
fstpt
stos
adc
mov
repz
stc
push
fbstp
push
push
pop
rcrl
mov
jo
and
mov
aas
lods
inc
movsl
aaa
adc
push
into
sub
xorl
stc
pop
sahf
hlt
stos
ret
jle
dec
xchg
addb
popa
pop
lods
jle
imul
xor
jl
cmp
sbb
or
or
adc
pop
mov
pop
mov
stos
int
sbb
fcoml
jecxz
jl
sub
jmp
xchg
mov
pop
fbld
mov
sbbb
insl
xor
mov
ret
daa
sti
lahf
ror
es
ret
lmsw
ja
mov
add
mov
push
sub
scas
dec
jmp
xor
jbe
push
lods
mov
scas
adc
