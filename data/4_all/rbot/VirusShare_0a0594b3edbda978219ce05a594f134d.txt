aas
pop
xchg
mov
jbe
dec
add
add
fsts
mov
fidivs
xchg
push
pushl
xor
jno
lds
cmpsl
sarl
mov
pop
push
add
xchg
rcrl
loopne
xor
add
repnz
in
adc
aaa
push
addr16
push
pop
push
cld
pop
sub
pop
dec
mov
pop
dec
mov
data16
xlat
scas
inc
push
cmpsb
mov
xchg
dec
add
adc
sub
push
aad
lds
xlat
xchg
inc
movsl
addr16
jns
and
fdivrp
cmp
xchg
and
int
imul
adc
xor
xlat
mov
imul
mov
ret
loope
mov
mov
fwait
xor
mov
std
lea
dec
xchg
mull
adc
les
cmp
dec
pop
push
jle
mov
inc
adc
jb
in
outsb
jb
sbb
clc
jbe
pushf
rcll
jecxz
loop
dec
call
negl
and
and
fs
sbbl
out
push
es
nop
add
mov
pop
aas
inc
and
and
add
add
add
ljmp
int
dec
or
add
push
leave
into
in
add
sub
ja
push
cmp
and
lret
cmp
xchg
jp
jmp
pop
pop
lock
jmp
js
or
cli
inc
mov
push
pop
dec
je
add
jnp
sub
or
and
loop
pop
mov
sbb
aad
add
das
and
ss
mov
fists
addb
fcom
xor
data16
pop
push
icebp
lcall
jle
mov
leave
cld
pop
pop
clc
or
fucom
lcall
pop
mov
pop
push
bound
jns
pop
bound
les
jecxz
in
ljmp
popa
cmp
inc
sbb
dec
negb
or
adc
push
movb
push
clc
jl
lods
lcall
adc
in
sbb
cmp
pop
inc
addr16
mov
fcomps
push
fdivr
cmpsb
dec
xchg
pop
nop
pop
in
test
jge
testb
loop
mov
js
loopne
pop
dec
cmp
xlat
je
fwait
pop
mov
stc
push
pop
and
loop
out
xor
out
addr16
ss
adc
jbe
das
jb
xchg
push
mov
mov
push
loope
in
icebp
adc
fucomip
xchg
fiaddl
jl
lret
jb
jae
fistps
sub
add
filds
mov
test
pop
mov
test
cwtl
pop
pop
mov
insb
push
out
ds
lret
emms
xor
bound
sub
adc
push
sahf
push
add
pop
push
inc
cmp
adc
push
sub
aas
imul
scas
mov
stos
push
out
and
inc
jl
sahf
imul
lds
push
nop
adc
ret
mov
add
idivl
push
sbb
or
shl
test
incb
ret
in
mov
or
adc
cltd
repnz
es
push
sbb
sbbl
lcall
pop
and
cmc
jo
adc
mov
push
stos
int3
push
adc
je
scas
scas
adc
xchg
jb
and
pusha
adc
shlb
xor
jg
pop
or
inc
xchg
xchg
andl
and
mov
sbb
fwait
call
arpl
push
jbe
movsb
adc
sub
push
push
push
pushf
cmc
ds
lret
xchg
push
inc
sub
push
pop
or
push
fistpll
dec
pop
pop
dec
lock
dec
adc
jbe
dec
lock
adc
inc
dec
push
inc
and
add
sbb
sbb
jmp
mov
mov
push
mov
xor
in
inc
ficompl
movsb
inc
js
aam
mov
pop
add
mov
lock
lret
or
mov
sahf
sbb
fstl
cmpsb
rorl
xchg
fildll
jge
lret
or
aaa
adc
aad
push
jbe
fwait
out
adc
movsl
imul
outsb
je
testb
lods
push
pop
mov
nop
cli
push
incb
out
testb
mov
inc
lcallw
mov
adc
xchg
mov
jbe
xor
or
out
and
shlb
fnstcw
jae
fs
dec
test
cmp
es
jns
nop
jnp
adc
inc
mov
shlb
push
sbb
xchg
fsubs
cmp
shll
stos
outsb
adcl
jb
sub
push
fwait
js
xchg
pop
xor
push
jge,pt
dec
cmp
or
movsl
mov
sub
jbe
imul
lock
in
jle
in
pop
adc
ret
pop
xchg
outsb
mov
insl
dec
cs
push
add
call
cmc
out
mov
fcoml
jnp
cmp
xchg
dec
pusha
xchg
lcall
je
xchg
dec
mov
data16
or
or
lods
xor
adc
pop
cmp
jg
je
and
jecxz
insl
push
jae
xchg
xchg
in
cmpb
pop
mov
lret
pushf
daa
push
out
push
pop
out
lcall
pop
fbld
nop
xor
aam
xor
fadds
movsl
rorb
gs
bound
fildll
sub
jnp
inc
inc
add
popf
xor
sub
movsl
push
mov
add
sub
add
imul
cmc
push
cmp
xor
mov
xor
insl
iret
pop
cmc
adcl
xchg
xchg
dec
xchg
add
in
insb
sbb
bound
shlb
sbb
outsl
fiaddl
int3
fsubl
push
lods
inc
out
mov
pop
adc
mov
add
jnp
ljmp
push
push
dec
fcomi
mov
xchg
xor
jle
jb
shlb
stc
add
sahf
loopne
paddb
add
xchg
punpckldq
aas
dec
popa
add
xor
lods
jecxz
lds
sbb
js
inc
loop
jo
jle
lds
ficoml
les
loopne
je
sub
mov
xchg
out
add
xor
and
xchg
xchg
add
adc
cwtl
lods
sub
dec
mov
mov
data16
shrb
mov
sub
xchg
fs
inc
mov
pop
bound
xchg
in
push
add
cmp
into
bound
ja
stc
mov
cmp
xchg
inc
cmp
mov
push
pusha
repnz
out
cld
bound
mov
cld
popf
ret
add
cmpb
sbb
js
push
adc
inc
dec
sbb
std
imul
xor
dec
jl
sbb
or
into
push
push
inc
fldl
jge
jp
mov
mov
push
xor
dec
dec
adc
inc
and
dec
adc
add
sbb
loop
dec
sub
gs
push
mov
mov
lcall
jg
aas
push
and
push
jecxz
jg
pop
jge
scas
jno
data16
int3
loope
arpl
jmp
mov
jmp
out
and
leave
mov
sbb
mov
inc
ds
adc
add
adc
push
add
pop
mov
push
ljmp
mov
jge
aam
jge
dec
pushf
add
nop
adc
mov
cmp
in
xchg
sti
insb
or
sbb
xlat
or
jno
jne
cmp
int
or
repz
cmp
out
xchg
jno
cmp
inc
cli
dec
pop
mov
push
sbb
jo
bound
and
rcll
mov
push
adc
fs
outsb
add
test
adc
fsubs
jl
pop
push
sub
arpl
jmp
sub
outsb
jmp
sub
xor
pusha
aaa
and
sbb
jle
sub
push
add
imull
cmp
in
inc
rcrl
jg
jb
out
fldenv
hlt
push
cmp
ss
ds
imul
jmp
in
scas
inc
bound
mov
mov
xor
mov
sbb
stos
daa
inc
sub
mov
jbe
or
repnz
mov
jbe
cmp
xor
cmp
add
jge
push
repz
adc
insb
pop
sbb
add
subb
jb
lods
inc
pop
push
jbe
or
mov
out
aam
xchg
xor
jl
test
daa
dec
jl
pop
sahf
and
push
xor
imul
fisubrs
fs
or
or
imul
or
inc
dec
add
mov
inc
pop
aam
mov
sub
sbbb
andb
xchg
inc
mov
jae
mov
jbe
shrl
dec
jg
push
mov
pop
sub
or
jo
xor
xchg
subb
inc
dec
jge
aas
cmpsb
xlat
inc
push
jae
add
ret
adc
mov
jno
push
sbb
aad
push
push
sbb
push
or
mov
cmp
cli
or
or
dec
sub
xor
jne
inc
pop
sbb
or
addl
sbb
test
test
cltd
pop
aam
xchg
cmp
jl
sahf
test
nop
dec
adc
sbb
and
sbbb
movsb
stos
stos
add
outsl
in
sahf
jmp
jecxz
fimuls
outsl
roll
cmpsb
and
push
mov
sub
fwait
pop
sbb
inc
pop
cwtl
mov
pop
movsl
inc
add
cmpsb
jmp
xchg
adc
mov
mov
mov
test
popl
pop
adc
adc
ja,pn
lahf
out
enter
add
cmpb
mov
xor
stos
pop
shll
out
movsb
test
xchg
sub
cwtl
sbb
push
xor
and
jmp
sbb
lds
out
mov
and
push
mov
xchg
push
sub
add
xchg
iret
add
mov
sbb
or
je
mov
es
pop
addr16
cmp
lret
inc
dec
sub
sbb
pop
into
shlb
inc
out
pop
dec
adc
xchg
and
mov
andb
fidivl
mov
or
sbb
add
or
sub
andb
push
es
int3
ja
imul
movsl
roll
dec
or
xchg
or
push
ljmp
mov
mul
adc
mov
xchg
jns
arpl
inc
inc
inc
jge
cmp
xor
push
fs
jno
ss
sbb
outsl
shlb
incl
mov
xchg
pop
mov
cmp
js
lea
test
jg
data16
cmp
jp
sbb
pop
mov
jno
dec
mov
xlat
xchg
shll
int3
aas
clc
lcall
jmp
mov
and
std
cmp
ds
jno
add
sarb
enter
dec
ds
loope
ljmp
sbb
pop
gs
push
bound
ror
lods
mov
gs
shrl
xchg
mov
loope
imul
ds
gs
dec
das
jmp
and
aad
dec
dec
test
lcall
and
mov
sub
fists
xor
pop
loopne
lss
push
std
push
sub
cmp
rorb
or
cmp
sub
imul
data16
adc
add
push
or
pop
and
or
lock
jmp
sbb
and
popa
imul
cmp
pop
out
adc
cmpsl
mov
add
xchg
xchg
ss
iret
and
sbb
sub
fstpl
bound
idivb
xor
aad
mov
xchg
out
push
and
lcall
daa
sub
xor
fnstcw
movsl
stos
scas
jmp
test
mov
stos
sub
and
add
in
adc
aam
mov
add
and
sub
jno
xchg
adc
mov
cmpsl
or
ret
add
mov
inc
xorb
iret
add
fcompl
add
fstps
push
loope
insl
andl
xchg
xor
je
mov
inc
mov
enter
mov
dec
and
shlb
js
and
sbb
cwtl
sti
sub
jp
jo
ss
out
cmc
mov
xor
cmp
inc
mov
rclb
xor
push
test
loopne
and
addl
test
insl
pop
into
rorb
dec
aam
sbb
xchg
ljmp
out
mov
pop
sub
sbb
adc
jge
dec
mov
mov
fs
push
in
test
xor
xorl
xlat
adc
movsl
and
pop
jle
int3
mov
fildl
imul
push
subl
mov
sub
and
mov
test
add
loope
inc
mov
sahf
cmp
push
bswap
lea
in
push
adcl
leave
jl
sbb
testb
es
sbb
or
adc
ljmp
xor
decl
push
dec
or
in
adc
adc
je
aam
or
and
jl
in
xchg
add
adc
adc
fs
fbstp
cmp
mov
pop
jle
into
sahf
xor
xor
jmp
add
repnz
js
jl
xchg
int
inc
sub
dec
mov
jle
idivb
stos
or
int
push
je
and
call
aam
aaa
sbb
dec
pop
insb
sbbl
add
adc
stos
inc
daa
mov
bound
pop
xlat
push
add
push
subl
jle
dec
outsb
xchg
pop
mov
arpl
mov
mov
movsb
icebp
outsl
out
mov
sub
ficoms
mov
imul
xchg
arpl
adc
ds
mov
nop
xchg
mov
les
mov
sbb
mov
lahf
adc
rorb
inc
mov
stos
cmp
adc
and
in
xchg
pop
mov
pop
mov
shlb
test
fbstp
mov
in
out
pop
cmp
and
pop
dec
leave
shr
fidivs
push
pop
imul
jecxz
lret
lcall
nop
aam
cld
add
cltd
inc
push
int
jns
and
push
je
fsubr
or
push
daa
adc
inc
xchg
in
mov
mov
es
jle
pop
je
xor
xchg
mov
fnstenv
inc
mov
loope
pop
push
cmp
xchg
loop
test
lret
bound
jnp
mov
outsb
push
dec
loopne
or
mov
push
push
addl
daa
dec
mov
inc
jae
dec
pusha
inc
xor
pop
jp
test
push
jecxz
pop
dec
sbb
add
dec
and
mov
xor
daa
ficoms
out
fsub
pop
xor
adc
pusha
mov
add
sub
ja
inc
jae
addr16
and
inc
adcb
scas
mov
push
jnp
stos
xor
mov
add
inc
or
dec
scas
aad
lock
call
pop
sub
daa
bnd
and
cmpsb
inc
clc
xchg
aad
mov
push
cmp
cmp
repz
mov
dec
imul
pop
jle
mov
negb
and
push
pop
lahf
repz
into
push
mov
frstor
outsl
fld
jb
mov
bound
or
pop
and
mov
sarb
popa
adc
cmp
push
testb
aas
in
fidivrs
push
jno
setp
inc
pop
mov
inc
cmp
sti
mov
test
mov
jle
mov
hlt
mov
jae
inc
xchg
inc
sahf
in
mov
or
dec
das
sahf
jo
mov
test
ljmp
or
mov
stos
xchg
sub
sub
loopne
mov
sub
and
push
loope
es
shlb
xor
xor
pop
in
scas
xchg
sbb
xor
fbld
inc
adc
mov
js
rcll
pop
ficompl
mov
mov
out
cmp
jb
xchg
cmpsl
iret
repnz
mov
push
idivb
pop
rclb
xchg
xchg
ffree
inc
xchg
aas
leave
ss
push
in
push
jecxz
pushf
roll
jmp
clc
fnop
dec
je
jno
cmp
mov
sbb
xchg
mov
repnz
cmp
stos
jne
xor
xor
adc
add
subb
out
in
mov
fsubl
insb
pop
js
nop
pushf
dec
enter
imul
xor
xor
push
add
push
push
insw
adc
jne
arpl
mov
xor
pop
xchg
mov
dec
pop
inc
push
and
andb
sahf
add
aas
dec
mov
mov
pminub
add
and
cld
cmp
stos
andl
sub
int3
loop
pop
ror
enter
mov
sub
lods
jge
dec
cli
and
dec
push
sbb
je
mov
mov
test
lcall
cmp
jo
cld
je
pop
sub
sahf
and
jnp
in
test
cmpsb
push
inc
fisttps
cmp
ja
lcall
pop
mov
pushf
test
push
sbb
sub
jle
pop
imul
jnp
mov
push
jp
outsb
pop
jmp
pop
cmc
jmp
inc
xor
inc
jecxz
dec
xor
aas
je
xchg
or
sub
xor
in
mov
push
push
push
jns
ja
sti
xchg
test
clc
out
cs
js
enter
scas
call
mov
xchg
sarl
jbe
mov
ret
adc
lcall
sbb
mov
out
enter
lods
ret
je
int3
jb,pt
push
out
or
insl
fnstenv
inc
mov
mov
mov
sub
push
dec
repnz
pop
lods
mov
scas
in
add
add
pop
cmp
inc
iret
xchg
scas
ds
jg
stos
push
daa
rorl
orl
nop
daa
add
push
and
aas
inc
leave
push
adc
dec
sbb
stos
xchg
and
stos
lock
sbb
dec
dec
cltd
mov
push
add
pushf
inc
and
and
push
imul
fbstp
push
ss
push
xchg
pop
jb
and
xor
adc
pop
jbe
fadds
test
mov
mov
inc
push
pop
fdiv
pop
xor
dec
mov
mov
pop
push
mov
insb
rclb
repnz
fs
add
cmpsb
dec
and
or
mov
cmp
lds
mov
jae
add
repnz
out
rorb
call
sbb
push
xchg
jae
pop
cld
scas
push
icebp
aam
pop
push
dec
dec
ret
ja
cmp
addl
in
repnz
mov
pushf
inc
cld
addr16
adc
cmp
in
fs
imul
push
scas
mov
iret
mov
loop
jecxz
jmp
ljmp
dec
push
jno
jne
pop
add
adc
mov
rorb
nop
xor
and
cmp
in
fstpt
add
shld
or
movsl
push
rcrl
adc
cs
xchg
fs
dec
enter
out
mov
les
and
in
add
das
mov
sahf
fldcw
aad
mul
xchg
stc
cmp
pop
dec
and
jbe
pop
lods
gs
pop
sub
jmp
push
out
sub
and
pop
adc
ret
adc
jbe
ds
jmp
push
test
xor
jno
push
pop
es
cwtl
sub
inc
aad
dec
adc
lds
jae
enter
xchg
push
xor
dec
mov
outsb
ss
xor
movb
inc
push
adc
repz
dec
ss
pop
push
inc
mov
mov
jb
push
push
xor
or
jl
xor
stc
fdivrs
dec
push
jp
inc
aad
testb
jmp
faddl
lock
adc
pop
out
sub
push
jl
cmp
pop
inc
lcall
pop
sub
mov
and
pop
xlat
mov
mov
pop
adc
xchg
das
add
iret
test
inc
xor
inc
push
and
and
mov
insb
cmc
push
jbe
push
inc
jo
jbe
jnp
dec
outsl
lahf
pop
daa
dec
cltd
sub
sub
and
jo
inc
outsb
orb
lods
sub
sbb
mov
and
addr16
cmpsl
cmp
lcall
outsb
adc
jnp
pop
repz
push
outsb
invd
mov
int3
xor
lock
cmp
je
jmp
or
mov
sti
adc
xlat
mov
fadds
ss
mov
jne
cld
or
jecxz
pop
mov
add
sub
mov
push
cs
mov
xor
xchg
or
xchg
data16
in
push
mov
mov
subl
mov
mov
push
jno
inc
or
mov
dec
cmpsl
out
mov
fcomps
fisubs
pop
xchg
and
fidivrs
mov
fisubl
jb
popf
popa
mov
std
jae
cmpsl
xor
jl
repnz
outsl
dec
mov
inc
pop
lret
mov
cmp
mov
pop
cwtl
loope
dec
clc
pop
sbb
inc
or
add
imull
fidivrs
popa
into
orb
pop
outsl
sub
sbb
jp
or
push
add
and
pop
adc
mov
jle
aas
dec
lock
xor
adc
add
jmp
iret
sahf
ljmp
dec
push
mov
enter
jno
orb
push
insl
inc
aam
inc
leave
lds
mov
scas
add
psubusb
imul
ljmp
out
sub
rcl
jp
mov
outsb
sub
jge
sbb
dec
notl
mov
cmp
jp
hlt
adcl
ficompl
pop
mov
repz
pop
jo
jecxz
jl
dec
dec
jmp
mov
jecxz
cmp
xchg
jb
add
lret
jbe
call
add
int
xor
insb
xchg
pop
dec
cmp
es
add
add
jl
jl
sub
or
dec
pop
pop
xchg
xor
popa
mov
inc
push
cmp
add
mov
xchg
pusha
ja
jae
push
pushf
and
mov
push
sub
in
sub
lods
jle
dec
pop
jo
fnstcw
cwtl
inc
or
das
rcl
test
xchg
inc
in
xor
push
mov
jmp
ja
pop
push
in
mov
ret
cmp
xor
cmc
and
in
sub
sub
cwtl
enter
lea
inc
inc
fnstsw
dec
mov
int
pop
movsl
pop
cmp
mov
adc
sbb
sarb
outsl
ss
mov
loopne
push
je
icebp
mov
test
pop
aas
inc
mov
aam
adc
adc
or
data16
jae
ds
mov
mov
hlt
mov
pop
push
jg
arpl
enter
push
stc
jmp
pop
aam
shr
es
pop
dec
je
outsb
movsl
sbb
mov
and
xchg
dec
lret
cmp
lcall
add
xchg
dec
push
dec
xor
loope
mov
xchg
adc
push
subb
frstor
dec
lcall
out
cwtl
mov
adc
imul
inc
lahf
loop
fstps
aam
in
lods
jl
jp
xor
xor
stos
dec
ficoml
arpl
mov
jb
mov
clc
stc
sti
cwtl
mov
arpl
and
xor
scas
mov
inc
or
and
outsb
jp
add
xchg
sub
mov
outsl
out
dec
les
xlat
in
jge
and
shrl
push
or
and
stos
loop
mov
cmp
jae
test
push
sub
mov
inc
xchg
jno
mov
rclb
xchg
push
cmpsl
or
or
jnp
push
push
daa
dec
xchg
add
push
popf
xor
pop
cmp
pop
push
push
mov
mov
outsl
inc
adc
outsb
ret
rsqrtps
pop
jbe,pn
inc
mov
ds
or
hlt
lret
stos
mov
push
mov
jp
dec
or
adc
lods
jle,pt
outsl
xchg
dec
and
push
ss
mov
fisubrl
mov
xchg
ljmp
adc
adc
ret
dec
stos
xor
cmp
push
cmp
lds
ss
inc
jge
push
in
sbb
adc
out
movsb
push
lods
push
das
and
cmp
mov
inc
cld
jnp
xlat
jne
pop
inc
mov
adc
pop
adc
mov
sbbl
cmp
repnz
push
push
inc
cld
ljmp
mov
xlat
add
inc
adcb
cmp
or
xchg
stc
cli
mov
cwtl
lock
nop
push
mov
jne
loop
mov
test
jae
xchg
mov
dec
mov
xchg
scas
pop
scas
push
sub
pop
sub
pop
bound
sub
sahf
push
subb
dec
ljmp
mov
push
enter
pusha
cmp
iret
je
dec
cs
movsb
cli
test
xchg
aad
push
cmp
push
mov
imul
loop
hlt
shl
xor
pop
or
cmpsb
push
rclb
imul
loopne
mov
inc
fmulp
pop
lret
xchg
xor
cmpsl
movsb
clc
mov
sbb
push
push
pop
xchg
nop
std
and
adcl
repnz
js
mov
fdivl
mov
lcall
jbe
jo
les
or
fildl
inc
pop
xor
rorb
and
dec
in
imul
xor
lea
cmp
push
pop
call
fs
outsb
lock
inc
pushf
clc
into
lret
pcmpeqw
mov
ja
inc
stos
iret
cmp
lcall
int
mov
pop
mov
pop
negl
push
mov
insb
xchg
sbb
sbb
dec
outsl
xchg
pop
outsl
push
and
lods
pop
out
aas
ds
in
pop
mov
mov
xchg
stc
sbb
mov
test
rol
outsb
lret
repz
and
inc
lds
pushf
enter
cmpsb
sub
push
mov
repz
fcompl
jb
adc
cmp
ss
iret
push
jmp
inc
mov
add
out
test
scas
add
aad
mov
jns
cmc
push
sub
xor
push
std
rcrl
popf
dec
jbe
push
iret
sub
bnd
jno
push
or
testl
movsb
popf
mov
insb
and
divl
addr16
cmp
push
mov
cld
ret
sub
dec
xchg
sub
lea
xor
cmc
ret
fadd
rolb
ret
push
jmp
sub
push
fucom
arpl
push
ljmp
outsl
test
or
adc
adc
jmp
inc
xor
mov
cmc
test
inc
nop
inc
aas
lods
jp
xchg
mov
scas
loopne
add
nop
inc
loopne
mov
lahf
lods
fxch
out
popf
cmp
dec
push
in
ja
ja
sub
xor
cmp
pop
outsl
jecxz
imul
jnp
jo
adc
mov
arpl
ss
or
popa
pop
xchg
push
jle
push
add
lcall
jp
mov
js
or
adc
ds
ret
in
fwait
inc
pop
sub
orb
jg
aaa
iret
jo
push
cmpsb
pop
addr16
ds
insl
add
sub
dec
mov
push
mov
push
repnz
push
cltd
stos
cld
mov
mov
mov
pop
pop
push
mov
imul
dec
dec
jb
lea
dec
pop
adc
push
repz
pop
mov
jns
and
test
decl
scas
lock
cmp
lds
int3
push
cli
jle
fs
sbb
jno
inc
dec
cmpb
cmp
mov
arpl
xor
dec
aas
js
jne
pop
mov
shr
sub
hlt
dec
or
into
jbe
add
and
fsubrl
pop
cli
dec
fidivrl
ljmp
shlb
mov
or
ficoml
mov
inc
pop
arpl
adc
test
xor
pop
jl
xchg
outsb
inc
idivb
push
aad
repz
out
mov
push
ret
cmc
mov
out
xor
lret
icebp
push
mov
dec
xor
adcb
fstp
lret
lcall
xor
es
adc
sahf
pop
outsb
jns
xchg
movsb
sbb
imul
mov
aas
xchg
loope
fsubrs
addb
out
pop
out
jo
xchg
dec
lcall
enter
pushf
pop
insb
push
mov
adc
in
and
imul
fsubs
jnp
les
fisubrs
cli
daa
mov
adc
xor
jg
pop
fidivrs
jbe
inc
mov
insb
adc
push
jle
ss
xchg
jno
scas
int3
pop
or
sti
pop
mov
adc
mov
mov
mov
sahf
dec
out
stos
pop
fistpll
push
iret
dec
insb
pop
jnp
xchg
fsubrs
cmp
push
and
in
repnz
mov
stc
into
push
daa
add
mov
je
ljmp
fiadds
pop
pop
hlt
xor
dec
inc
mov
andl
mov
and
shll
je
push
adc
jns
mov
add
inc
add
add
xor
filds
jb
dec
xchg
aas
movsb
push
dec
aas
pop
dec
test
movsl
scas
loope
sbb
outsb
pop
sub
mov
es
pushf
adc
cmc
inc
popa
jmp
jns
dec
jbe
sbb
lret
jge
jbe
dec
mov
dec
arpl
push
xor
arpl
jle
mov
mov
aas
dec
push
popa
ss
push
jbe
data16
outsb
push
pop
test
stos
outsl
test
pop
addr16
cli
fnsave
adc
js
jnp
mov
xchg
mov
pop
std
xor
push
mov
xchg
loop
and
or
dec
xor
rorb
push
xchg
imul
xchg
dec
mov
and
mov
pop
or
xor
push
test
aad
outsl
sti
sahf
sub
iret
or
out
pop
cmpsb
mov
add
and
xchg
bound
test
xor
ret
push
mov
jo,pt
adc
loop
ss
insb
imul
inc
imul
fidivrl
or
popf
js
es
in
sahf
mov
mov
popa
dec
fidivl
push
or
mov
mov
jge
pop
push
inc
jle
leave
inc
mov
out
ss
push
in
push
inc
pop
mov
arpl
mov
das
xorl
jo
test
add
fcmove
push
xchg
dec
incb
inc
xor
jb
add
mov
scas
ds
adc
mov
mov
push
ret
xchg
inc
push
enter
das
push
mov
push
iret
inc
scas
xor
dec
pop
rclb
jl
mov
dec
hlt
pop
stc
sub
adc
mov
ja
cltd
ret
push
mov
out
dec
lcall
push
push
ljmp
outsb
scas
xchg
push
dec
xor
pop
inc
jb
and
aad
dec
jp
or
mov
pusha
cwtl
mov
mov
dec
and
fndisi(8087
inc
pop
ret
push
loopne
and
sbb
fsubl
push
add
xchg
push
lret
aad
adc
sbb
mov
lds
les
xchg
sub
xchg
addr16
ds
push
sub
pop
fwait
adc
subb
dec
jo
and
call
data16
cwtl
lock
jecxz
ss
ds
in
ds
inc
jecxz
gs
fsubrs
inc
jge
jle
and
in
pusha
jmp
xchg
adc
mov
dec
jo
lret
testl
test
rorb
cmpb
pop
addl
sbb
mov
sbb
movsb
inc
mov
dec
jmp
pop
xchg
hlt
sub
lcall
clc
sbb
insl
daa
pop
fs
add
inc
lahf
xor
push
add
cld
inc
push
mov
mov
xchg
add
xlat
mov
mov
push
mov
bound
mov
mov
outsb
jns
and
jbe
cmp
add
and
fisubs
mov
scas
push
dec
push
inc
scas
bound
movsb
ret
cmp
sub
and
fisttps
lds
adc
jae
xchg
adc
xchg
pop
fisttps
es
out
ret
insl
fstp
test
cs
aas
mov
mov
push
out
inc
dec
push
lock
xor
pop
xchg
xor
je
sub
rolb
cmp
test
xor
lock
cmp
inc
pop
dec
and
lods
mov
mov
or
mov
popl
lret
push
in
sub
pushf
stos
insb
lds
mov
mov
pop
insb
sbb
adc
insb
or
or
xor
imul
jp
les
lods
cmp
sub
sbb
sub
test
adc
mov
mov
mov
sub
repnz
scas
xchg
dec
cmp
inc
dec
int3
xchg
dec
fsubrl
xchg
mov
cmp
jl
push
jp
ljmp
out
int3
js
loop
loope
loop
movsl
adc
in
out
dec
cltd
inc
push
adc
add
adc
stos
lret
xchg
mov
inc
sbb
mov
cltd
cmp
and
mov
ficompl
adc
imul
mov
into
int3
ja
ror
jp
push
mov
jne
enter
mov
fwait
adc
cmp
lock
add
push
test
mull
movsl
movb
callw
pushf
lods
insl
sbb
jp
cwtl
cmp
inc
jne
jnp
std
lahf
or
inc
addb
adc
cmpl
xlat
divb
cmpsb
inc
bound
adc
jp
cmp
sub
xchg
mov
dec
jnp
imul
sub
sbbl
dec
sbb
adcl
add
gs
and
sub
jbe
mov
xor
adc
popa
mov
repz
push
xchg
add
push
aaa
loope
addr16
jmp
imul
dec
popa
push
dec
mov
test
xchg
and
pop
cmp
lret
sub
js
filds
dec
adc
out
sarl
mov
pop
imul
out
inc
loop
inc
fdivs
sbb
push
je
nop
dec
sbb
cmp
adc
add
js
imul
js
inc
ljmp
mov
adc
fcomps
xor
rclb
pop
aas
popa
out
cld
sub
xchg
mulb
pop
pop
ljmp
into
inc
cli
sbb
or
add
pop
and
aaa
sbb
sbb
inc
sahf
sub
mov
loop
cs
sub
fstpl
pop
mov
push
sbb
scas
ss
adc
adc
sbb
inc
in
or
jle
stos
mov
cltd
jp
dec
in
repnz
push
pop
iret
test
cmpb
aad
dec
lds
daa
imul
cmpsl
pop
daa
and
enter
cmpsb
pop
stc
call
scas
sub
dec
js
out
cmp
stos
jle
pushf
arpl
les
inc
aas
stc
mov
mov
dec
roll
cmp
js
xchg
lcall
gs
scas
xor
xlat
sbb
mov
xchg
mov
ret
iret
outsl
pop
inc
lahf
inc
outsb
dec
fs
ret
out
sbb
dec
jb
dec
jp
xchg
ljmp
inc
xchg
mov
das
adc
jecxz
scas
sub
jns
cmp
sub
out
ss
stos
mov
stos
inc
jne
xor
sti
idiv
xor
outsb
jecxz
push
arpl
xor
lds
sub
das
dec
sub
pop
jbe
daa
addr16
loope
inc
push
scas
fisttpll
xchg
xor
fs
int
mov
pop
repz
das
xchg
adc
add
add
adc
lahf
add
sub
inc
cld
icebp
or
push
leave
in
lea
jl
cmc
mov
insl
lods
fdivs
cmpsb
imul
bound
into
push
aaa
nop
sub
mov
fildl
cmpb
and
or
test
insb
out
mov
push
dec
pop
sahf
jo
jbe
popf
sub
cmpb
out
clc
jp
pop
pop
mov
cs
sahf
ljmp
dec
jge
dec
outsb
push
cmc
insb
scas
or
dec
call
jmp
jecxz
ljmp
pop
int3
dec
ljmp
lahf
outsb
popf
pop
out
das
stos
out
inc
out
in
jo
fbstp
xchg
inc
push
jle
loop
in
mov
enter
jle
mov
pop
rcr
enter
mov
inc
xor
dec
mov
mov
sub
inc
jmp
jecxz
call
or
inc
fbstp
and
out
rorb
scas
jl
ss
mov
mov
pop
mov
sbb
mov
sub
or
dec
cmp
hlt
mov
xchg
ds
pop
arpl
jecxz
test
add
rcrl
inc
incl
mov
shrb
jl
xchg
adc
dec
xchg
fstpt
pop
cmp
outsl
cmp
fwait
dec
fs
or
inc
lods
mov
into
aam
outsl
jnp
outsl
aam
or
aam
push
and
jp
xchg
pop
sbb
addb
push
bound
pop
arpl
jbe
icebp
adc
fwait
popf
loope
aad
orl
lret
push
push
mov
and
fcoml
sub
cmp
inc
push
add
jb
insl
inc
iret
lcall
aam
push
and
push
mov
pop
sub
cmp
insl
pop
xchg
mov
test
es
jbe
cmpb
mov
mov
outsl
sbb
pop
xchg
jge
gs
nop
xor
daa
xor
dec
call
and
or
pop
mov
lcall
loopne
sbb
test
pusha
es
lcall
add
rcll
push
mov
orb
and
movsb
icebp
sbb
mov
xchg
xorb
rorb
shll
jp
xor
stos
jge
push
push
lea
ds
xor
cmpsb
jle
xchg
add
enter
movsl
popf
xchg
cmp
mov
inc
and
fildll
rcll
cmp
clc
std
inc
mov
call
roll
outsl
lahf
sahf
ja
mov
sbb
lds
xchg
ror
mov
and
mov
and
and
leave
test
sbb
andnps
jae
outsl
xchg
bound
addr16
add
or
mov
stc
sub
push
aad
mov
dec
movsl
jo
and
ss
mov
scas
repnz
and
and
rcll
sarb
andl
push
sbb
xchg
popf
jae
cmp
pop
mov
sahf
adc
fs
jno
adc
and
adcb
mov
mov
mov
lcall
xchg
push
in
sarb
cmp
mov
call
mov
divb
lods
mov
test
sbb
add
call
dec
and
push
mov
movsl
adc
fldenv
insl
cmpsl
fmuls
add
dec
dec
mov
and
hlt
inc
adcb
and
lock
enter
mov
push
mov
lds
mov
xchg
sahf
sub
lahf
rcrb
push
inc
inc
sub
pop
adc
xchg
inc
and
out
out
dec
or
jns
sub
fisttpll
cmp
lds
sub
jp
pop
xor
xchg
data16
psllw
pushf
sbb
and
lock
dec
mov
jg
adc
push
outsb
jb
push
sub
cmp
adc
adcb
out
jb
xorl
popf
mov
fcoms
push
pop
mov
bound
push
sbb
or
outsl
fwait
xor
aam
sub
mov
xlat
orb
mov
dec
aas
push
jb
adc
cs
fisttpll
jae
adc
add
jne
imul
jb
aam
stos
or
fistl
movsb
insb
mov
lods
imul
inc
xchg
mov
push
in
pop
push
or
and
into
sub
sbb
es
push
mov
mov
or
push
loopne
iret
xor
inc
mov
mov
xlat
push
xchg
lcall
jmp
loop
push
out
mov
divl
shlb
dec
xchg
aad
mov
push
cld
sahf
sti
pop
mov
aaa
idivl
jae
push
lcall
sbb
or
gs
test
mov
push
push
xor
lds
lds
push
pop
push
pop
xchg
fisubs
dec
add
pop
cmpsb
or
inc
pop
add
cmp
dec
or
movsl
gs
cmovp
mov
dec
pushf
and
jecxz
jo
insb
pop
cmpsl
popa
sahf
aad
cmp
loope
pusha
out
loope
insl
sub
subl
test
call
cmp
test
test
insl
enter
and
out
inc
cs
or
shufps
sub
mov
pop
clc
imul
pop
cmp
sbb
lea
push
dec
and
cmp
insb
jne
jmp
add
clc
es
js
inc
sbb
out
and
xor
and
inc
jb
push
inc
push
and
add
inc
xor
inc
ret
add
and
mov
sbb
cmp
sbb
push
jmp
mov
lock
sbb
into
fs
movsb
or
cld
adc
xchg
cmpsb
outsb
je
rcll
mull
int3
xchg
ficoml
andb
or
mov
std
outsb
data16
leave
pop
xchg
frstor
pop
pop
shrb
sub
in
xor
mov
cmp
push
add
aam
inc
stc
inc
jne
inc
inc
hlt
pop
stc
cmpsb
loop
mov
les
jbe
or
pop
xor
push
pop
mov
mov
sarb
sub
pop
push
iret
mov
or
and
into
dec
ja
aaa
dec
pushl
sbb
call
dec
insb
inc
mov
add
push
dec
lret
push
sbb
or
fs
push
ficoml
xor
call
add
sub
daa
movsl
mov
pushf
pop
addb
jmp
inc
jae
inc
js
ds
imul
fldl
cmp
push
movsb
addr16
arpl
ss
push
add
jle
js
scas
incl
inc
imul
adc
cli
es
lods
dec
inc
int
adc
jmp
je
ret
in
dec
sub
push
ret
test
addr16
shrb
ret
movsl
xchg
push
loopne
sbb
jl
imul
rep
shrb
cmp
push
xchg
or
stos
sarb
js
push
push
lcall
mov
iret
inc
sbb
or
dec
cmp
dec
cwtl
xor
xchg
xor
popa
stos
inc
adc
adc
mov
outsb
loop
lock
jae
push
or
mov
xor
jo
ljmp
mov
data16
aaa
lods
lret
movsb
jns
jp
cwtl
outsb
cmp
dec
adc
dec
inc
fs
popf
ja
cwtl
sbb
or
cli
push
jo
je
xor
sbb
fs
popf
imul
adc
cmp
fimull
cmc
and
pop
push
and
adc
dec
add
jae
dec
lahf
push
cld
add
lds
sub
loopne
xchg
dec
jg
pop
xor
dec
enter
imul
cmp
rorl
imul
jo
push
int3
pop
push
add
test
cmp
jmp
je
push
ret
cmpsb
popa
mov
cmp
ds
push
loopne
in
mov
jo
pushf
sub
ss
jnp
push
test
jl
bound
dec
out
pop
sub
loope
cmp
fs
sbb
pop
mov
mov
jns
fucomp
adc
es
and
das
addr16
sbb
cmp
mov
jg
jmp
data16
jp
mov
and
add
mov
fldln2
adc
fdivrl
ret
or
pop
mov
out
sub
adc
divb
loopne
nop
cmp
sbb
mov
ds
je
xor
lock
dec
mov
add
mov
jbe
cmc
pop
or
adcb
repz
fcompl
mov
negl
inc
scas
aaa
fadd
mov
jnp
push
and
enter
movsb
incb
int3
cmp
fmuls
dec
adcl
call
mov
mov
arpl
in
and
stos
cmc
cli
mov
mov
pop
dec
stos
mov
loope
test
mov
push
imull
add
pushf
xor
mov
into
call
rdpmc
test
or
mov
mov
subl
cmpsl
and
insl
mov
dec
ljmp
in
or
pop
mov
ja
or
je
jp
pop
fsubs
jp
jle
mov
and
mov
aas
es
in
dec
mov
dec
shlb
push
jno
and
push
fsubrp
outsb
pop
fists
dec
iret
push
add
loope
roll
cmp
popf
jl
or
inc
mov
rcrb
sub
test
leave
dec
fwait
adc
jg
int
je
lret
stc
mov
jl
sbb
jmp
jnp
xchg
sub
push
push
dec
xlat
dec
or
push
ficoms
xchg
push
lcall
call
push
push
push
lcall
adc
sbb
cmpb
or
jb
test
imul
das
repz
dec
jo
xchg
mull
shrl
addr16
add
gs
popa
js
cmp
iret
rcrb
lods
push
xor
jo
dec
add
clc
mov
inc
inc
push
sbb
and
cmp
dec
ret
ljmp
xor
scas
loop
lret
add
loope
addr16
jecxz
push
mov
jp
adc
ret
in
rcrb
ret
push
mov
lret
adc
out
aas
dec
fldenv
push
pop
push
push
xorb
or
adc
cli
jae
stc
pop
aam
mov
push
mov
xchg
stos
data16
fwait
jmp
fwait
add
mov
lcall
inc
cmp
jb
cmovno
in
inc
ret
dec
sub
cld
ljmp
pop
or
xchg
mov
add
jge
scas
mov
sub
jle
sahf
sbb
movsb
repnz
or
jmp
xlat
adc
and
xchg
inc
out
nop
xchg
add
or
cmp
gs
push
arpl
sub
jb
sbb
movsb
jmp
dec
ret
in
sarb
mov
jge
pop
add
repnz
popf
in
mov
fcmove
xchg
lcall
aam
sbb
cmpsb
cli
shlb
pushf
stc
std
xor
sub
popf
outsb
and
ret
mov
adc
outsl
gs
mov
jp
or
mov
xor
inc
adc
and
negb
add
out
adc
mov
aas
imul
les
stos
cli
into
inc
data16
ljmp
add
cmp
xchg
inc
jg
leave
cmp
sub
in
pushf
clc
mov
xchg
pop
jge
sub
bound
or
inc
pop
push
pop
inc
out
add
in
ret
cwtl
jno
and
nop
pusha
push
ss
mov
adc
clc
dec
jecxz
mov
imul
ja
xor
and
mov
and
pop
cmp
loopne
lcall
mov
mov
mov
daa
outsb
fstpl
stos
and
jge
mov
push
xor
cltd
lods
adc
xchg
lret
rcrb
int3
lea
call
outsl
mov
adcb
shr
or
dec
or
into
jo
xor
push
imul
cmp
mov
sub
lahf
cmp
jno
cld
ss
xchg
in
mov
sarl
inc
lcall
pushf
pop
mov
xchg
and
stos
jno
lods
fidivl
push
out
cmp
mov
mov
not
lock
fldcw
iret
mov
jmp
adc
dec
jp
push
jns
xchg
and
daa
fs
mov
xchg
imul
pop
xor
sbb
cltd
fistpl
pusha
pop
mov
lods
loope
movsl
xchg
add
push
ficompl
addr16
and
shl
repnz
outsl
add
sahf
sbb
popf
scas
sub
aaa
pop
jecxz
es
out
push
mov
sub
lock
int
and
push
push
jp
fists
bound
inc
imul
pop
jnp
shll
pusha
adc
subl
loope
xchg
mov
jge
xor
sub
daa
mov
out
adc
outsb
enter
shl
add
xchg
or
push
mov
shlb
sti
pop
dec
js
lahf
lock
stos
inc
addl
fmull
mov
fsubs
jg
jle
mov
into
inc
int
add
sbb
data16
or
pop
jbe
in
sub
pop
in
and
jnp
pop
inc
adc
loop
push
jne
ljmp
ret
adc
icebp
adc
dec
mov
pop
lcall
sbb
or
fldt
je
aam
push
push
cmp
push
dec
gs
mov
mov
hlt
ss
data16
dec
push
or
lahf
push
repnz
outsb
push
sahf
testl
sub
xor
sub
nop
out
xchg
js
jbe
leave
insb
xor
cs
les
addr16
jl
loopne
mov
pop
es
or
sbb
mov
ss
mov
sub
push
sbb
inc
in
jp
cmp
and
adc
scas
stc
into
testb
loopne
inc
popa
dec
dec
push
mov
cwtl
outsl
mov
lods
or
popf
push
pop
or
or
inc
pop
stos
lret
into
and
popa
dec
pop
dec
add
mov
rol
repnz
data16
pop
outsl
enter
xor
int
loop
pop
add
fcoml
cmpsl
jl
imul
bnd
xchg
mov
loopne
pusha
cwtl
idivl
jns
lcall
adc
enter
loopne
sub
ret
imul
sbb
jnp
mov
cmc
xchg
mov
outsl
mov
clc
jecxz
outsl
jns
mov
mov
pop
jp
and
and
xlat
and
xchg
jns
cli
cmp
fdivrs
sub
test
mov
cmp
outsl
shrb
cmpsb
cmp
xchg
loopne
jecxz
sub
mov
sbb
xchg
outsl
scas
ret
sbb
aam
mov
and
call
popl
mov
push
in
adc
aad
mov
or
cmpsb
mov
jmp
adc
jnp
int3
add
push
jae
inc
jae
arpl
xchg
xchg
cli
mov
jo
negl
ret
sbb
cmc
adc
lods
add
pop
and
js
pushf
or
cmpsl
repnz
jae
bound
jmp
out
lret
mov
and
dec
mov
jnp
xchg
lods
mov
and
addr16
xor
popa
ret
mov
pop
pop
popf
scas
jnp
dec
inc
loope
mov
push
rorb
jb
aaa
sbb
cmpl
pop
int
sarb
lods
daa
jne
pusha
stc
sbb
pop
jne
cmc
inc
push
and
leave
sbb
shr
mov
imul
repnz
dec
jns
xor
mov
xchg
pop
mov
out
incb
out
cmp
jo
nop
lods
sbb
cmc
jge
mov
fcompl
loopne
and
jo
adc
ja
std
sbb
sbb
inc
out
pop
rolb
push
lock
pop
push
xchg
inc
inc
and
enter
js
jbe
lock
and
nop
inc
pop
test
add
cmc
push
jge
pusha
jp
out
test
ja
movsl
mulb
add
std
pop
jne
add
outsl
xchg
sbb
sub
dec
fsub
rorl
push
push
movhps
dec
test
scas
hlt
xchg
or
or
adc
xchg
arpl
loopne
sub
repnz
inc
fisubl
mov
or
pusha
mov
pop
mov
in
or
mov
arpl
aas
pop
xorl
dec
test
inc
mov
scas
jbe
mov
mov
div
adc
pop
popa
dec
dec
es
scas
fmuls
in
push
push
aam
out
cltd
jae
and
cmp
xchg
insl
std
jle
loopne
mov
sbb
or
mov
mov
clc
xchg
and
jmp
inc
jne
outsb
sub
repz
data16
int3
lret
cld
pop
das
and
pop
push
and
jmp
lods
fdivrs
je
pop
push
loop
xlat
or
and
les
push
add
aaa
dec
inc
loop
test
push
add
mov
out
mov
fs
inc
jns
jno
shrb
je
les
and
aam
pop
push
movsb
mov
and
pop
inc
lods
cmp
add
es
in
adc
fstps
push
adc
lock
nop
in
jnp
imul
out
fistps
repz
es
adc
dec
push
xchg
gs
push
in
jg
lret
fdivs
gs
popf
jl
flds
mov
and
jp
push
popa
jns
cmp
dec
push
jmp
pop
nop
add
pushf
or
fcom
ja
xchg
sub
sbbl
jnp
or
cmp
xor
sbb
pop
les
lock
orl
jns
andb
add
jle
mov
sbb
push
mov
push
xchg
insl
test
test
fdivrl
add
pop
notb
repnz
sbb
or
aas
push
inc
loopne
in
inc
mov
mov
add
jp
repz
pop
rcr
mov
jns
pop
sbbl
lret
jno
jb
sbb
add
mov
jge
sub
add
mov
sub
fsubp
sbb
xor
cmp
push
mov
add
jl
mov
jns
jbe
xchg
xorb
mov
push
je
ret
push
xchg
push
jg
pusha
adc
or
les
lcall
sbb
push
mov
mov
add
sbb
lea
sbb
inc
sti
mov
cmp
mov
adcl
push
clc
xor
push
pusha
mov
jno
fstpt
and
and
and
cld
ret
adc
mov
dec
and
or
xor
bnd
ljmp
jne
adc
std
loopne
xor
dec
add
adc
push
jb
inc
mov
lods
inc
es
movsb
or
adc
adc
mov
sub
movsl
stos
mov
lock
cmp
mov
pop
mov
sarl
dec
inc
ss
inc
pusha
sbb
add
aam
adc
fcomps
and
and
out
xlat
bound
out
popa
or
pop
push
mov
add
fcoms
push
push
std
rcrl
int3
filds
dec
in
and
lret
xor
adc
sub
mov
lcall
sub
test
xor
sub
pop
in
lret
cmp
xchg
es
sub
fisubl
in
loop
push
es
out
dec
hlt
cld
es
pop
push
bound
movsl
jne
mov
inc
loopne
mov
popf
push
pushw
out
xor
dec
mov
push
mov
lock
jmp
adc
lcall
add
pushf
mov
jb
mov
fwait
inc
cmp
xchg
outsl
aad
sub
std
push
leave
and
repnz
cmp
repnz
iret
jmp
shlb
stos
lods
pop
hlt
or
jnp
shlb
sbb
cmp
movsb
lcall
aad
sbb
popa
jo
fisubl
add
mov
in
flds
out
push
cmpsb
adc
mov
rcrl
mov
shll
aas
ja
test
cmp
dec
pop
xor
aas
cmp
pop
sbbb
scas
ret
or
lods
sbb
out
mov
xor
sbb
fidivrl
cs
xchg
mov
mov
adc
xchg
movsl
loopne
lods
cmp
pop
ret
daa
jl
in
mov
lea
mov
inc
xchg
and
ljmp
enter
int
rorb
cmp
sbbl
jbe
or
outsw
pop
movsl
je
stc
xchg
adcb
sub
mov
jae
cltd
cmp
mov
sub
jno
cmpsb
fisttpl
pop
adc
gs
call
insl
mov
cmpsb
bound
cmp
cli
stos
lret
sahf
push
push
jl
and
mov
push
loopne
mov
lret
xor
insl
or
jns
sub
cwtl
jmp
fbstp
sbb
push
xor
xor
cmp
addl
pusha
mov
sbb
pushf
push
imul
rorl
cmp
add
cwtl
aas
test
fcompl
xor
mov
sbb
imul
rorl
inc
ss
or
mov
das
loopne
cmp
fstp
adc
xor
idivb
cld
push
in
in
push
mov
sahf
stc
adc
cmp
rclb
jne
adc
cmpsl
ss
dec
shl
push
pop
inc
adc
ret
push
sub
je
aaa
dec
sub
sbb
into
stos
pop
add
outsl
stos
lahf
xor
jns
dec
das
cli
bound
inc
xor
aam
and
mov
inc
adcl
sbb
lods
inc
outsl
jl
repz
fistpl
or
cmp
call
inc
and
or
je
lret
into
push
pop
jle
sbb
mull
xchg
mov
push
std
dec
lods
les
pushf
inc
sub
mov
dec
sahf
or
cmp
push
jne
mov
lret
pop
push
mov
jbe
inc
xchg
dec
sti
xlat
sub
loop
xchg
jp
es
inc
push
loope
sub
jbe
outsl
inc
add
loope
dec
fs
sbb
mov
ffree
xor
inc
cmpsl
mov
mov
inc
into
pop
in
mov
push
gs
pushf
stos
stos
xchg
and
into
pop
sbb
xorb
jo
xchg
mov
sub
addl
and
sub
adcl
imul
clc
push
mov
or
movntps
and
sti
lea
and
sar
adc
mov
mov
stc
mov
fs
std
push
cld
in
inc
adc
pop
pop
push
or
int
stos
jno
jnp
je
scas
xchg
outsb
xor
repz
ja
call
xor
push
inc
or
mov
jge
add
loope
pushf
insb
aad
jb
pop
je
es
cmp
loopne
mov
and
cmc
and
mov
inc
outsl
add
xor
int3
jb
imul
test
jns
stos
in
inc
mulb
rclb
jbe
ljmp
mov
mov
jmp
xor
cmp
gs
subb
dec
push
jl
mov
jmp
adc
daa
sub
jbe
push
cmp
nop
and
adc
and
inc
lea
sub
push
std
pop
lcall
pop
sbbl
pop
push
ljmp
in
call
in
jg
jge
ret
lods
loop
lock
add
adcb
frstor
out
add
sbbb
cli
sub
jbe
cmc
sbb
push
cmp
mov
pusha
sbb
lods
lcallw
adc
push
outsb
add
stos
imul
sarl
imul
pop
fnstenv
cs
mov
icebp
cmpsl
mov
mov
into
sbb
out
popf
addr16
dec
gs
addr16
and
das
into
adc
add
push
fadds
dec
fistl
dec
xchg
xchg
es
sub
popf
jge
out
inc
cmc
inc
scas
or
dec
adc
inc
sbb
pop
repz
roll
and
jle
ret
arpl
mov
into
sub
pop
test
sub
pop
mov
add
cmp
test
andl
sub
and
jg
fsubrs
inc
lret
je
jne
dec
outsb
pop
mov
arpl
jmp
or
xor
mov
cli
cmp
mov
fisubrs
addb
rcrb
outsb
cwtl
mov
loop
jae
pop
mov
dec
push
sbbl
jle
push
adc
negl
xorl
jo
cmpsb
push
dec
cmp
dec
movsb
xchg
push
sbb
std
outsb
lods
inc
addb
cmp
mov
clc
imul
imul
test
loope
pusha
and
scas
rol
xchg
lds
push
hlt
push
ss
xchg
rclb
addr16
adc
arpl
call
in
jbe
dec
popf
or
in
adc
dec
mov
add
ret
jle
sub
fwait
push
push
xchg
pushf
jp
es
dec
mulb
pop
sub
dec
int3
addr16
pop
jle
mov
pop
adc
dec
push
dec
inc
pop
out
inc
test
or
push
adc
dec
dec
push
xchg
fimuls
cmp
pop
cmpsb
sub
pop
pop
dec
xchg
sub
aam
mov
xor
imul
sub
int
inc
mov
or
mov
stc
xchg
test
pop
pop
pop
xchg
pop
nop
stos
stc
jl
les
mov
loop
jg
in
or
addr16
jp
ljmp
xor
fsubrs
jle
pusha
in
std
fsubl
stc
lods
orb
pop
jp
je
cmp
sub
mov
cli
push
mov
pusha
mov
int3
sbb
call
inc
loopne
gs
jnp
inc
mov
pop
jle
xchg
movsb
jge
dec
push
mov
ds
in
data16
jle
repnz
out
call
push
ror
les
int
in
or
add
ret
bound
bound
add
aaa
inc
cmp
ja
imul
sbb
mov
jnp
adc
loop
stc
and
inc
xchg
sub
into
dec
and
arpl
ljmp
mov
rolb
fimull
sub
fisttpl
mov
ljmp
adc
jp
jo
scas
pop
xor
xchg
inc
dec
repnz
xor
nop
mov
outsb
gs
arpl
fidivrl
mov
lcall
dec
xchg
adc
sti
das
push
lret
aas
rclb
pop
and
rorb
xor
adc
pop
dec
jb
cwtl
adc
arpl
xchg
lret
inc
and
dec
mov
pop
addr16
and
push
inc
imul
dec
and
ss
push
jg,pt
add
jne
sar
sahf
mov
mov
popf
pop
push
mov
dec
jb
scas
mov
mov
pushw
out
fstps
pop
aad
pusha
jb
push
cmp
adc
mov
pushf
jp
pop
cmp
bound
pop
or
bound
pop
sbb
bound
adc
jle
adc
pop
ja
fdivl
jne
push
adc
fisubrl
rorl
adc
lods
mov
in
pop
add
mov
jmp
push
lcall
mov
push
dec
lcall
arpl
out
movsb
push
sbb
adc
push
popf
call
inc
dec
es
sub
loope
xchg
inc
adc
xor
xchg
fsubrs
pop
das
pop
imul
and
fidivrs
jnp
adc
dec
sbb
push
sbbl
mov
les
test
dec
ss
mov
push
fisubrl
xor
jne
add
cmc
cltd
inc
push
cmp
lret
and
push
cmp
rcl
ret
dec
push
dec
fcmovb
pop
xchg
dec
fimuls
push
inc
pop
sahf
pop
movb
jne
roll
or
push
fdivl
es
pop
sarb
push
and
cmpsl
fisubs
mov
xchg
mov
mov
inc
add
sub
and
jle
adc
pop
jne
xor
add
push
pusha
fstl
push
cli
sub
dec
xchg
add
pop
pop
sub
push
adc
scas
test
mov
push
pushf
in
adc
or
decl
push
sub
jl
test
js
lock
jns
setle
xor
mov
loopne
dec
or
out
es
jl
out
mov
xor
mov
cld
pop
in
cld
out
pop
fsub
jb
sub
push
push
les
mov
push
addr16
mov
pop
jle
mov
inc
inc
inc
fs
xor
inc
sub
aas
les
adc
out
dec
mov
mov
cmpsb
push
mov
ja
rolb
or
cmp
mov
push
xchg
inc
ds
rcrb
insl
pop
insb
fwait
jbe
je
mov
mov
ficoml
or
jl
mov
insb
loopne
sub
out
add
sub
mov
in
push
fcompl
pop
and
inc
lret
ss
sarl
and
xor
push
cmp
dec
sub
adc
xor
xchg
mov
xor
sub
lcall
into
outsl
hlt
pusha
loopne
insl
decb
ds
jb
cmp
or
mov
jns
push
test
out
push
mov
sbb
mov
and
outsl
aam
add
cmp
mov
arpl
sar
mov
cmp
xchg
or
adc
sub
mov
dec
jb
mov
std
mov
pop
sub
dec
or
xchg
ja
pop
mov
scas
sbb
xlat
add
jmp
pop
xor
cltd
pop
mov
sbb
pop
pop
mov
into
adc
and
push
adc
jne
push
push
mov
push
jae
stos
push
inc
cmp
fidivrs
sbb
nop
dec
push
pusha
inc
adc
imul
sub
sub
sub
sub
or
hlt
push
cwtl
pop
adc
test
jecxz
dec
jmp
push
xchg
bound
jge
insl
adc
ficomps
xchg
js
add
mov
xchg
jle
mov
decl
data16
xor
outsl
pusha
push
xchg
push
insb
in
and
adc
push
push
dec
jecxz
lahf
pop
push
mov
sub
and
adc
js
mov
xor
pop
out
popa
push
inc
imul
jnp
push
inc
cmp
mov
mov
fmuls
icebp
add
or
adc
test
lret
rolb
loop
dec
or
pop
lahf
ficoml
scas
push
inc
pop
faddl
fwait
in
pop
ljmp
mov
push
lcall
mov
orb
scas
push
adc
dec
add
and
jle
stos
or
and
or
popa
fisubs
xchg
push
and
icebp
fs
lds
cmp
push
dec
cmp
jp
and
add
enter
mov
adc
and
out
mov
adcb
add
addb
dec
jp
push
pusha
arpl
inc
push
dec
xchg
sahf
loop
cs
adc
popa
dec
jb
dec
or
push
lock
push
aam
in
lods
cmpsb
jbe
mov
and
inc
add
mov
mov
out
pop
jbe
pushf
std
ja
inc
ljmp
sbb
call
jecxz
stos
push
insb
fbstp
add
pop
mov
dec
or
popf
push
sub
dec
mov
adc
lret
sbb
mov
and
mov
or
add
pushf
cmpsl
mov
mov
inc
jbe
lahf
sbb
or
xchg
mov
push
loope
sub
sti
xchg
cmp
mov
stos
arpl
push
and
inc
jmp
inc
or
inc
repnz
dec
adc
fldenv
addr16
dec
aam
das
and
lods
push
fidivrl
inc
addr16
cmp
lret
rcr
sub
test
ds
add
pushl
xchg
scas
loope
and
xor
cld
shll
sbb
xchg
dec
push
imul
sub
lret
jl
fcmovnu
out
mov
test
dec
mov
test
adc
sbb
call
pop
in
cmp
cmp
cli
push
jbe
int
mov
jecxz
aad
pop
cmp
iret
leave
mov
fstpt
push
cld
in
sti
xlat
mov
adc
xchg
test
xor
mov
pop
lcall
mov
imul
or
fld
jl
jbe
movsb
jo
stc
pop
dec
cmpsl
push
aaa
fsubl
dec
in
sub
jno
popa
cmp
into
rcll
rclb
and
in
add
mov
mov
flds
sbb
out
and
pop
les
add
loop
sbb
mov
cmc
fcompl
out
push
mov
les
jne
outsb
cmp
mov
cmp
inc
pop
hlt
jb
sub
ljmp
pop
fcmovbe
mov
cmp
das
scas
dec
and
int3
out
aaa
inc
pop
inc
test
mov
imul
dec
repz
xor
xor
fcomip
pusha
movsb
xchg
imul
sub
adc
jo
inc
jge
push
sahf
xor
fadds
inc
or
jp
jns
dec
mov
dec
push
dec
cmp
add
inc
and
arpl
inc
sti
ds
mov
cmpsl
push
jp
mov
pop
mov
pop
imul
insl
sbb
dec
pop
mov
jne
icebp
nop
add
fsubs
outsb
sbb
xchg
out
push
cmpsb
out
push
pop
insb
repz
mov
cmp
mov
jno
pmulhuw
xchg
mov
pop
rorl
sbb
pop
rcrb
imul
push
sbb
scas
jmp
inc
adc
jecxz
mov
js
cmp
rcll
andb
cmp
sahf
xchg
dec
je
enter
mov
xchg
cmpb
push
loop
dec
test
xchg
push
cmp
dec
movsb
stos
fistps
test
movsl
rclb
stc
or
cmpsb
pop
jae
test
pop
mov
repnz
xchg
js
cmp
and
sbb
and
sbb
and
pop
insl
inc
inc
pop
inc
xchg
jo
std
or
jno
mov
or
fadds
push
inc
lock
add
lret
outsb
xchg
fcmovbe
dec
jbe
test
push
jl
xchg
xchg
addr16
mov
ja
cmp
sbb
in
adc
jo
jl
pop
sbb
lock
mov
cltd
test
ss
lods
cmp
outsl
loop
and
xchg
pop
adc
filds
clc
imul
sbb
lock
xchg
lods
lahf
mov
adc
cmp
adc
or
clc
xchg
int3
test
out
sbb
jecxz
das
inc
paddd
movsl
std
sub
ror
fcompl
insb
fisubrs
stos
adc
jnp
push
sbb
das
push
cmp
pop
xor
pop
pop
jp
jo
movl
xor
push
repz
cmp
pop
repz
inc
test
inc
jb
dec
repnz
mov
hlt
testl
out
push
or
jp
je
call
dec
jp
test
lods
aaa
orl
xlat
cmp
test
out
xchg
dec
ds
stc
mov
jle
int3
jno
leave
sbb
sbb
addr16
xchg
mov
addr16
mov
pusha
pop
aad
test
dec
stos
pop
iret
pop
xor
hlt
gs
aad
cs
es
cmc
add
aas
dec
aas
inc
pop
and
xchg
or
adc
daa
divb
xchg
push
ljmp
cmpsb
dec
pusha
xor
inc
mov
xchg
enter
or
jb
mov
xlat
mov
lret
cs
mov
inc
into
xchg
iret
or
push
inc
movsb
subl
pop
ss
lods
scas
mov
addr16
stos
inc
imul
sahf
xchg
adc
leave
dec
into
inc
out
mov
mov
sub
aad
xchg
or
sub
jbe
lods
jl
loope
scas
xor
mov
loop
es
xchg
ret
add
push
and
xchg
gs
pop
xchg
cwtl
ja
mov
push
sub
sub
mov
cmc
cmp
pop
sub
dec
insb
or
mov
push
push
rcl
mov
je
adc
jno
pushf
push
xchg
dec
xchg
cmpsl
push
aaa
movlps
inc
or
fidivs
mov
push
call
jge
dec
pushf
dec
push
insl
jge
cmpsb
adc
mov
inc
jae
xor
sti
mov
and
fs
fbld
mov
pop
idivb
insl
xchg
inc
push
dec
push
adcl
xor
or
pusha
nop
adc
ljmp
xor
cmp
movsb
jae
mov
aas
and
iret
xchg
test
stc
push
jo
shll
jmp
scas
lcall
or
add
or
push
test
cwtl
ds
cmp
dec
add
imulb
push
inc
iret
shlb
and
xor
jnp
mov
add
out
cmpsl
movsl
int
lcall
dec
pop
pushf
push
outsl
add
fs
push
sub
stos
jo
loope
inc
add
add
movb
sbb
push
gs
mov
sbb
in
adc
add
cmp
pop
xchg
cltd
lea
ret
inc
jbe
ss
mov
mov
ret
cmp
push
fisubrl
popf
mov
fsubrs
mov
or
or
adc
es
ds
xor
outsl
fs
pop
pushf
mov
mov
movl
pop
xor
inc
scas
jle
clc
push
shll
pushf
repnz
loopne
sub
fwait
and
cmpsb
adc
pop
xor
sub
cmp
outsb
mov
out
ret
je
test
push
dec
pop
ja
pop
jle
xchg
adc
test
das
scas
inc
popa
pop
testb
push
out
sub
xlat
inc
xchg
daa
and
jl
push
xchg
jno
xchg
mov
and
jnp
mov
cmp
jo
js
jne
lods
adc
addb
xor
xchg
fistpll
addr16
inc
cli
pop
jle
push
pop
aam
je
mov
sub
lcall
inc
and
mov
int
push
std
pop
mov
jno
mov
mov
shll
out
or
int
adc
pop
sbb
sahf
lahf
xchg
sub
inc
pop
or
pop
shlb
das
sbb
aaa
sbb
sub
add
sub
dec
pop
sub
inc
dec
pop
out
test
pop
dec
cmp
ret
pop
jp
shl
mov
loop
mov
pop
add
outsl
push
dec
int3
add
lods
dec
xchg
adc
dec
fmull
fs
add
mov
push
xor
outsb
in
scas
in
jno
pop
cmp
lahf
or
cmpsb
inc
adc
nop
dec
pop
push
adcb
cmp
and
arpl
aam
or
gs
sbbl
or
out
push
stos
jge
xchg
jp
lods
adc
test
mov
and
mov
mov
mov
insl
adc
inc
mov
mov
and
xchg
inc
enter
mov
mov
mov
pop
mov
jae
mov
inc
imul
mov
mov
push
mov
or
ficoms
adc
movsb
jle
ret
xorl
insb
daa
inc
push
push
lcall
pop
lea
gs
std
xchg
clc
inc
xchg
rcrl
inc
fisubs
xlat
and
loope
pushf
gs
in
and
add
adc
adc
jno
pop
lahf
lcall
or
idiv
rol
xorl
fists
adc
mov
inc
pop
sub
arpl
mov
pandn
or
cwtl
cmp
sbb
test
inc
out
sbb
inc
fisttpll
insb
movsl
andl
xor
aaa
aad
xlat
sub
or
in
mov
xchg
arpl
shlb
stos
push
inc
repnz
leave
or
or
and
jge
pop
aam
sub
mov
pop
fwait
push
out
sub
loope
cmp
out
sub
dec
arpl
out
cmp
add
push
loopne
mov
jg
mov
dec
push
jo
js
pop
fnstsw
sub
jle
pushf
sbb
push
sbb
insb
inc
into
test
fstp
dec
adcl
push
popf
xchg
pop
fistpll
push
aam
cmp
pop
add
push
pop
xchg
jo
test
orl
das
xlat
cmp
invd
jb
xchg
outsl
test
aas
pop
pop
pop
or
decb
xor
lea
and
ja
adc
fcmovnbe
pop
add
test
add
push
sete
push
lahf
call
cmp
adc
pop
mov
loopne
dec
mov
insb
pop
fisubrs
dec
in
out
sub
loop
loop
and
add
xchg
pop
outsl
sahf
xorb
dec
jl,pt
in
rolb
enter
push
rorb
notl
out
test
test
inc
ret
jecxz
ja
dec
jmp
xchg
mov
mov
mov
inc
inc
bnd
dec
mov
pop
xchg
outsl
cltd
add
cwtl
mov
cli
sbb
xchg
cmp
or
and
xor
arpl
adc
iret
aaa
sti
push
insl
push
les
shlb
or
mov
jp
mov
add
cwtl
mov
fcomps
fdivr
ja
sbb
ds
add
push
xchg
add
inc
jmp
aad
in
mov
addb
fdivrl
cmp
int
or
mov
inc
in
or
xchg
popa
icebp
fst
daa
nop
push
ds
movsb
mov
push
or
jl
les
add
inc
divl
or
ss
and
and
pop
inc
push
imul
lret
xchg
inc
cmc
orl
bnd
aad
test
and
and
loop
in
fisubl
xchg
add
lea
popf
inc
mov
xchg
leave
mov
sti
xor
dec
negb
repnz
pop
gs
lods
mov
les
fcmovb
inc
pusha
test
or
dec
scas
cmp
mov
add
jnp
xor
fsts
xchg
aas
loope
push
push
scas
out
mov
movsb
jb
pop
mov
repnz
cmp
mov
aas
push
movsb
stos
push
test
jo
jb
adc
inc
pop
lahf
call
mov
cmp
fisubrl
xchg
loope
add
dec
adc
xchg
xchg
sbb
xlat
mov
loop
popa
add
mov
pusha
xchg
inc
js
adc
call
pop
sahf
bound
dec
subb
push
divb
xchg
inc
xlat
xchg
jno
popf
push
addl
jbe
xchg
sti
adc
gs
je
ret
mov
mov
imul
cmp
in
fisubs
or
or
out
sub
dec
xor
scas
aaa
sbb
outsl
test
dec
lcall
push
jb
sub
mov
loope
mov
xor
mov
int3
mov
mov
pop
mov
test
mov
jb
xchg
jno
cld
mov
xchg
sbb
out
leave
xor
jl
cmp
sbb
out
fs
mov
cmp
cmp
comiss
push
and
push
xor
mov
ljmp
sub
movsb
mov
cmp
fiadds
test
and
and
or
ficoml
xor
pop
jns
nop
push
xor
testb
or
movsl
popa
aas
test
and
mov
pushf
sahf
int
or
cmp
sbb
pop
cmpsb
mov
cld
lock
mov
push
mov
mov
or
xchg
cld
adc
cmpsb
out
and
sbb
in
dec
mov
push
jecxz
push
cmpl
cmpsb
shll
or
xlat
test
sbb
mov
les
push
xor
xchg
push
cs
push
mov
sbb
sbb
jle
push
inc
imul
pop
pop
cmp
add
inc
add
pop
sbb
in
pop
fildll
or
pop
jo
or
mov
cmp
cmpsb
testl
shll
adc
jae
bnd
jb
sbb
sbb
insb
xchg
dec
mov
out
and
pop
fcoms
fmul
jo
push
pushf
jnp
jae
cmp
loopne
or
in
les
cmp
aam
xchg
pop
arpl
push
xor
mov
bound
adc
add
xchg
inc
pushf
mov
ja
xchg
stos
aam
mov
and
es
scas
fisttpll
inc
test
imul
fucomi
xchg
test
push
arpl
pop
or
mov
or
mov
push
dec
pop
inc
add
inc
inc
jmp
in
cmp
xor
insl
add
and
pop
xchg
dec
fs
test
aaa
dec
push
lods
fmuls
jno
addr16
cmp
shll
pop
push
clc
pop
xor
jge
mov
enter
add
lock
ret
xchg
stos
loop
push
pop
xchg
push
mov
pop
popa
jbe
mov
cmpb
aad
pop
sub
jle
es
mov
test
aad
xor
jnp
or
xchg
jbe
cmc
mov
dec
sbb
add
fs
xchg
add
or
push
mov
cmp
mov
jns
ds
pop
ja
or
lret
pusha
sbb
inc
or
stos
frstor
mov
mov
sbb
data16
js
sbb
jo
fnstcw
adc
adc
dec
push
push
dec
movsb
mov
push
call
sbb
dec
test
je
sub
imul
popf
clc
mov
xchg
push
mov
push
pop
or
popf
imul
stos
add
ljmp
ljmp
js
fwait
pop
push
jnp
pop
inc
ss
sub
enter
add
pop
lahf
sbb
lret
push
jbe
sti
dec
in
cmp
dec
cmpsl
and
jbe
mov
pushf
inc
xor
out
out
data16
popa
jo
pop
pop
mov
cmp
sub
sub
jl
mov
sub
dec
test
inc
pop
mov
jo
sar
pop
stos
push
cmp
add
jnp
jns
xchg
jl
pusha
inc
jle
out
test
push
adc
sub
xor
out
popf
imul
and
testb
js
andl
addr16
divb
mov
push
dec
mov
add
aaa
ds
std
add
jae
xchg
mov
aam
xchg
mov
adc
xor
push
dec
lcall
out
loop
or
mov
adc
icebp
inc
subl
pop
add
out
mov
push
lcall
inc
sbb
daa
mov
test
push
push
in
std
daa
sbb
dec
push
pop
out
jg
add
cli
inc
jmp
jo
std
mull
xchg
insb
ja
jnp
or
add
jae
xchg
jg
push
push
adc
leave
mov
addr16
scas
rcrb
jecxz
arpl
sbb
xchg
and
adc
jecxz
repnz
xor
sub
ret
fs
cmp
and
push
jnp
cli
loopne
inc
out
inc
inc
jl
rcr
and
or
je
adc
inc
push
jns
repnz
and
aaa
fisubrl
push
jmp
adc
mov
lret
dec
adc
inc
in
mov
jmp
jmp
jne
xchg
clc
leave
xchg
repz
dec
js
stos
ret
jle
fs
out
loop
pop
outsb
ficompl
int
mov
mov
dec
mov
mov
sbb
scas
jae
mov
xchg
dec
inc
out
popf
pop
and
call
xor
adc
shl
ljmp
out
and
jne
jb
sbb
cwtl
pop
sub
mov
frstor
sub
and
cmpsb
iret
into
mov
or
orl
push
clc
inc
imull
cmpsl
outsl
andl
imul
xor
mov
sahf
sub
dec
and
push
adc
inc
xorb
xchg
and
ret
xor
push
popf
jb
mov
dec
outsb
push
scas
jnp
pusha
pop
scas
cmp
jmp
push
imul
pop
sbb
jmp
cmp
vpminub
outsl
mov
xchg
movsb
mov
mov
push
cmp
dec
ss
xor
mulb
jle
rcll
or
inc
mov
dec
jb
cmpsl
xchg
jno
xor
xchg
add
iret
lock
mov
dec
lcall
lahf
lods
ljmp
mov
push
add
and
cmpsl
or
inc
mov
ss
lods
lret
sbb
dec
and
sbbl
adc
mov
stc
dec
outsb
je
ds
push
adc
inc
dec
xchg
aas
in
jnp
and
mov
or
xchg
xchg
testb
sub
sbb
fbld
ret
inc
aam
outsb
xor
dec
gs
outsb
push
jecxz
or
into
adc
jmp
sub
push
fildll
imul
cmp
mov
sub
cmc
sarb
add
repnz
add
xor
xchg
adc
add
lcall
adc
cmp
xor
fs
stos
jb
cs
adc
pusha
xchg
rol
nop
repz
dec
or
repnz
jb
cmp
aam
out
pop
notl
stos
adc
jae
addr16
push
inc
add
or
push
xor
jp
xor
add
pop
daa
add
lock
mov
push
pop
mov
lret
jl
loope
inc
jecxz
mov
jbe
fnstcw
repnz
sbb
pop
push
ret
sbb
cli
jno
ds
adc
and
fisubrl
hlt
flds
lea
js
nop
cmp
or
inc
adc
insb
je
push
fdivp
fwait
pop
and
lock
hlt
imul
je
rorb
sub
outsl
inc
adc
dec
xchg
pushf
cmp
jns
xchg
push
xor
add
dec
xor
push
cli
sbb
push
aad
psubusb
orl
dec
and
cld
jl
xlat
sarl
pop
xor
cmp
push
dec
outsb
jns
je
das
mov
push
mov
cmp
popa
fimuls
data16
xchg
insb
add
cmp
cmp
cld
push
mov
stc
sbb
mov
mov
repz
ficompl
pop
mov
sub
and
fs
leave
arpl
dec
sahf
sbb
or
push
push
dec
pop
aad
push
inc
push
movb
orl
test
pusha
inc
icebp
xor
fcompl
stos
movsb
sbb
loop
cmp
rorb
push
cmp
outsl
lods
cmp
or
js
movsl
insb
sbb
lea
pop
and
mov
and
dec
inc
xchg
repz
std
les
xchg
pop
add
and
sbb
popf
push
pop
mov
inc
jo
test
mov
test
testl
and
sbb
les
mov
mov
sbb
mov
add
sub
inc
mov
inc
and
es
xor
aaa
jb
clc
leave
and
mov
mov
xor
and
cmc
xchg
and
cmp
fidivrl
cmp
jo
push
js
mov
jp
out
sub
xchg
call
insl
mov
aaa
inc
ljmp
popa
icebp
mov
cmp
or
push
cmp
dec
std
lret
mov
std
lahf
scas
dec
sbbb
shl
pop
sub
loope
sbb
out
test
mov
scas
sbb
out
lret
jle
test
jmp
lods
imul
movb
sar
adc
add
scas
pop
push
jo
js
mov
add
sbb
les
xchg
inc
jne
test
movb
stos
nop
xchg
loope
fwait
and
repz
adc
push
push
daa
xchg
jmp
push
push
push
lret
outsl
xor
lea
inc
test
xor
leave
xchg
fmul
ss
and
gs
jl
cmpsl
xchg
jl
int
fwait
ret
jecxz
push
mov
mov
mov
mov
xchg
or
add
sti
pusha
daa
loopne
out
popa
aam
popa
cmpsl
dec
lret
aas
mov
loope
fwait
les
lds
add
mov
mov
mov
rorb
pop
repnz
je
or
outsl
pop
repnz
pop
jge
mov
jmp
out
mov
sbb
clc
push
hlt
or
pop
andl
enter
outsb
or
cmp
jns
or
das
popf
sub
mov
and
xchg
outsb
mov
jbe
nop
and
pusha
pop
xchg
push
add
pop
and
xor
xchg
jnp
push
ficoml
sbb
enter
inc
mov
js
adc
mov
aad
arpl
aas
sub
lcall
jnp
and
or
dec
push
leave
shrd
inc
fs
or
jecxz
inc
sbb
popa
push
xor
push
jmp
movsb
xchg
add
jmp
inc
cmpsb
adc
imul
aad
fsubrl
xor
push
cmp
out
push
mov
out
add
sbb
gs
hlt
fstps
xchg
cwtl
cmpsb
push
lods
inc
adc
in
push
outsb
out
loop
push
sbb
insb
jl
ds
mov
lods
fucom
xchg
inc
push
leave
fdivrs
lock
sub
xchg
inc
rorb
bound
mov
add
dec
lods
sbb
push
inc
jge
adc
lcall
adc
call
js
inc
push
test
dec
mov
push
mov
out
sub
pop
lods
xchg
dec
leave
out
dec
mulb
jae
sbb
gs
mov
rcrl
dec
add
lcall
enter
pop
jg
dec
fwait
push
in
sar
cmp
icebp
push
jns
daa
pop
inc
shrb
mov
les
pop
iret
mov
push
arpl
xchg
es
pop
pop
jbe
rclb
in
enter
jbe
popa
cwtl
inc
push
push
push
rcrl
outsl
sub
icebp
movsl
insl
adc
xchg
adc
xor
xor
jbe
sahf
fcoml
aaa
sub
pop
insl
adc
je
es
sarb
or
or
cmc
nop
xchg
pop
icebp
test
jle
inc
ret
dec
lret
into
popa
mov
and
je
and
bound
inc
inc
xchg
insb
clc
mov
fldl
test
sbb
js
mov
add
std
es
cmp
sub
add
push
mov
lcall
xchg
sub
xchg
push
dec
ds
fiadds
inc
lds
mov
dec
stos
inc
xchg
xor
sbb
mov
filds
movsl
mov
or
push
add
out
xchg
inc
dec
les
das
jbe
scas
les
loop
jp
adc
cwtl
adc
sbb
and
punpcklwd
cmp
movsl
push
dec
jle
bound
adc
cmp
push
es
dec
sbb
inc
sub
lock
jno
push
jno
dec
fs
xchg
ss
pop
pop
dec
mov
inc
arpl
cmpsb
stos
or
insb
movsb
adc
in
cmpsb
ret
push
mov
ds
pop
inc
adc
cld
in
push
mov
cmc
inc
into
adc
mov
cmp
cmp
jp
out
dec
sub
cmp
imul
orl
insb
push
push
jbe
jle
xchg
pop
inc
subl
push
push
daa
pop
fucomip
xor
inc
sub
jge
xchg
xchg
nop
push
or
fdivrs
imul
sub
mov
dec
push
mov
jg
push
xor
cmp
push
and
int
xchg
stos
pop
loop
xor
adc
cmc
inc
sub
push
add
sbb
xor
jne
shll
in
xchg
sub
les
loop
jp
add
gs
out
cli
pop
addb
outsl
jbe
lcall
mov
mov
frstor
inc
or
addr16
cmp
xchg
outsb
adc
dec
add
rcrl
mov
pop
lcall
je
cmp
add
shl
mov
pop
cli
dec
jp
pop
fmull
int
xlat
mov
mov
movsl
pusha
dec
hlt
push
mov
aas
sub
mov
pop
cld
xor
lcall
adc
in
cltd
pushf
mov
pop
loop
push
adc
and
add
and
sbb
and
dec
in
daa
dec
push
mov
iret
jbe
pop
jo
idivb
mov
popa
shlb
cwtl
cmp
pop
stos
xor
filds
dec
cli
lods
jge
dec
mov
xchg
rolb
and
push
pop
negl
sub
and
mov
arpl
lds
xchg
xchg
inc
iret
mov
movsl
cli
dec
mov
adc
cmp
sub
pusha
mov
shrb
aas
pop
roll
cmp
ja
sbb
sbb
dec
roll
addr16
push
jg
sub
dec
sub
ss
aam
stos
cmp
add
repnz
mov
pop
int
dec
add
xchg
add
popa
outsb
fisttps
scas
dec
dec
cmc
push
inc
jb
and
cmp
dec
push
jle
ja
shrl
mov
jbe
fs
mov
and
xor
inc
xlat
pop
addr16
pop
or
adc
or
cld
sub
sub
cmp
dec
mov
ljmp
test
sarl
push
mov
push
dec
mov
mov
sub
fwait
data16
daa
mov
pop
setle
incb
icebp
add
mov
jle
mov
push
fidivl
dec
rorb
je
push
loop
out
or
xchg
inc
inc
mov
xor
inc
popa
mov
sub
scas
xor
fisubrl
xor
in
add
andl
int
push
cwtl
fidivrs
jb
inc
jb
dec
cwtl
loop
push
imull
push
fwait
rcl
sahf
lods
mov
add
add
dec
push
mov
pop
jg
mov
sbb
addr16
dec
mov
push
push
cmp
loop
sbb
test
imul
adc
push
fmull
sbb
dec
jns
push
outsb
mov
xchg
mov
xchg
push
test
sti
repnz
aad
adc
fldl
aaa
data16
cwtl
cld
jle
test
sbb
and
add
push
rcrb
or
sbb
insb
push
xor
shrb
insb
xor
cmp
sahf
jo
add
leave
dec
aas
dec
rclb
mov
ja
or
xor
dec
stos
jo
inc
gs
lcall
out
add
jbe
sub
andb
gs
dec
mov
xlat
cmp
es
jo
adc
out
mov
jp
or
inc
es
repz
popf
sub
rolb
cmpsl
arpl
or
je
dec
dec
lret
jle
rorb
rcrl
cmp
xor
stos
add
imul
xlat
mov
and
incb
pop
enter
inc
stos
insl
mov
dec
jle
stc
adc
pop
push
lcall
andl
adc
popa
inc
not
mov
and
and
dec
lret
mov
push
es
into
out
push
jns
int
mov
test
sbb
stos
pushf
leave
push
test
repnz
fstl
inc
in
lret
cmp
adc
mov
fdivl
scas
or
dec
leave
out
dec
and
inc
and
fbld
out
or
dec
addl
hlt
divb
mov
sub
out
loop
sbb
xchg
jmp
outsb
dec
pop
aaa
jp
mov
push
inc
adc
and
mov
push
push
fsts
mov
cltd
jge
fsubrl
dec
push
pop
inc
enter
je
aaa
jbe
jp
inc
jle
shlb
and
mov
xchg
lahf
roll
decb
pop
jl
push
lea
out
jb
pop
xchg
insl
sub
bound
pop
je
call
mov
pop
mov
cmp
dec
or
cli
nop
and
push
test
add
pop
cmp
or
mov
ja
cld
pop
shlb
add
enter
add
shll
dec
jnp
add
divb
mov
jg
insb
pop
iret
jb
mov
jge
nop
movsl
je
jg
loop
out
push
jbe
xchg
pop
mov
adc
movsb
inc
loop
out
idivl
ds
dec
pop
xchg
mov
inc
stc
inc
dec
mov
or
inc
jnp
and
push
push
jo
push
and
jb
cmp
pop
fs
fistpl
push
jmp
xchg
leave
push
das
insb
je
xchg
lds
enter
adc
popa
ds
ss
das
dec
je
pop
in
sub
dec
out
push
jbe
pop
jnp
pop
adc
xchg
jle
push
dec
sub
adc
push
outsb
mov
popa
xchg
pop
inc
das
mov
lds
pop
popa
adc
ficoml
hlt
pop
stos
sbb
fisubrl
ret
inc
std
out
cs
pop
ljmp
and
dec
leave
out
test
dec
mov
xchg
cltd
mov
repnz
inc
out
sarl
repnz
pusha
cmpsb
sahf
mov
dec
push
cmp
mov
mov
not
stc
stos
sti
fwait
loope
divb
or
cmp
jbe
add
add
ds
xchg
xor
mov
pop
lret
test
xchg
enter
fnstenv
or
mov
inc
pop
les
into
xor
adc
xlat
in
xor
mov
aaa
mov
cmpl
push
add
mov
js
jl
and
js
sbb
push
ror
push
xchg
push
out
adc
scas
lcall
leave
aad
stos
cmp
test
jb
sub
sbb
std
push
mov
push
pop
bound
mov
fst
movsl
mov
jbe
dec
mov
adc
push
stos
inc
pushf
add
unpckhps
sub
xorl
xor
xor
out
or
testl
mov
add
sub
addr16
adcb
in
repnz
shrb
imul
inc
imulb
fidivs
adc
arpl
cmc
pop
sub
mov
cmc
in
sub
jne
data16
xchg
add
push
inc
inc
aam
shrl
cmp
sbb
xorl
push
stc
call
loope
dec
xlat
adc
out
and
pop
cmp
mov
and
xor
inc
inc
lock
fidivs
ja
std
fcompl
fisubl
imul
outsb
push
pop
std
push
out
jle
sub
out
jg
sub
mov
dec
iret
fwait
adc
cltd
enter
pop
pop
pop
jle
daa
leave
dec
sbb
add
lahf
jo
push
cmpsb
pusha
inc
test
mov
inc
imul
xchg
dec
fwait
inc
inc
push
push
mov
sbb
adc
rclb
push
mov
outsl
orl
sahf
xlat
mov
adc
dec
es
mov
dec
adc
filds
jle
mov
or
mov
or
lock
fwait
adc
jg
les
push
push
sub
push
sbb
pusha
adc
jl
loope
xor
mov
stos
dec
dec
sub
ret
pop
push
add
adc
or
add
nop
movsb
fstps
test
loop
pop
call
nop
dec
negl
test
pop
outsb
outsl
inc
xor
push
mov
xchg
into
mov
dec
xchg
dec
inc
add
fildl
add
test
push
test
jae
imul
or
outsb
rclb
ret
inc
pop
incb
ljmp
sbb
sbb
fwait
add
imul
jl
cwtl
or
aas
cmp
in
mov
loopne
dec
es
bound
dec
xor
pop
aaa
icebp
inc
in
sarl
xor
and
adc
outsl
stos
xor
push
cmp
adc
push
fldt
aam
cli
adc
lods
mov
xor
pop
inc
outsl
rcll
ror
xchg
in
push
and
fs
mov
aad
loope
dec
jle
rorb
popf
cmc
dec
cltd
fadds
pushf
in
pop
aas
mov
add
inc
dec
push
xchg
sub
fwait
push
mov
mov
push
mov
out
sub
xchg
sbb
in
enter
mov
mov
sub
add
sub
xor
lea
pop
add
outsl
pop
mov
push
xchg
dec
inc
add
jne
mov
lds
and
or
xor
pop
push
xchg
or
jne
ljmp
push
adc
nop
data16
imul
sub
nop
loope
mov
das
stc
ds
aaa
insl
pusha
jbe
mov
inc
test
add
pop
xor
dec
mov
sub
fstps
mov
adc
sbb
icebp
testl
pop
mov
and
data16
bound
jae
subl
jl
subl
push
out
sbb
mov
add
fdiv
dec
sub
and
fisubl
cmp
cmp
mov
jnp
adc
pop
cmp
add
inc
enter
add
dec
xor
add
rclb
imul
xchg
mov
int3
add
and
or
in
push
jmp
push
jge
xchg
out
inc
gs
mov
jb,pn
add
fldt
or
adc
cmp
lea
and
xchg
fidivs
jne
and
nop
pop
les
imul
mov
xchg
clc
inc
in
movsl
add
rcrb
pusha
sbb
rcl
ret
dec
lret
pop
sbb
ror
ret
push
notl
lcall
cmpsb
mov
outsb
xorl
test
jo
loop
cmpsl
aas
fwait
cmp
xor
mov
lods
jl
popa
jl
push
int3
jns
fs
scas
jae
stos
xorb
cli
jmp
loop
sub
sbb
jnp
dec
pop
xor
sbb
dec
enter
mov
mov
iret
jle
inc
jmp
pop
xchg
pop
xlat
adc
daa
fwait
in
inc
cltd
fcompl
mov
add
dec
cli
mov
mov
repz
sub
mov
ret
mov
mov
xchg
push
ljmp
dec
pop
movsb
jae
pop
push
unpcklps
pop
sbb
or
mov
push
pop
jo
out
insb
inc
int3
out
mov
jl
pop
jbe
mov
xchg
lret
cmp
out
or
into
in
pop
or
fwait
iret
push
jbe
adcl
sarb
xchg
inc
jbe
clc
dec
pop
lock
in
push
pop
xchg
fs
je
pop
cmp
cwtl
fsubs
frstor
jl
negb
dec
int3
ja
push
pop
adc
xchg
jb
lret
inc
data16
pop
mov
shlb
lock
push
dec
daa
sbb
xor
cmp
and
jg
ss
out
mov
dec
cwtl
inc
inc
sbb
movsl
out
add
xor
out
in
pop
xor
jl
inc
inc
add
jle
test
scas
arpl
mov
dec
or
ret
sbb
mov
mov
aam
lea
cmp
push
imul
pop
xor
sbb
pop
repnz
push
pop
jp
stc
cmc
dec
cmpsl
adc
dec
adc
mov
movsl
or
pop
nop
outsl
adc
xchg
sti
lahf
xchg
push
add
arpl
mov
test
cld
push
repnz
fnstsw
dec
arpl
js
and
jb
add
sub
pop
dec
scas
out
gs
mov
adc
mov
testl
adc
pop
aam
pop
inc
leave
cld
xchg
clc
fwait
cltd
cld
push
test
mov
sahf
addb
ds
rcl
sbb
dec
adc
test
lods
psadbw
inc
and
sarb
xchg
mov
adc
aas
mov
addr16
or
aaa
inc
js
nop
jnp
outsb
cmc
hlt
mov
push
push
andb
lcall
cmp
mov
mov
inc
push
inc
cmp
shll
pop
js
gs
mov
jg
stos
pcmpgtb
out
dec
add
inc
cmpsb
cwtl
sbb
shr
addr16
push
insb
jp
out
lret
aam
leave
out
rorb
jo
fisubrl
lods
out
jle
js
bound
mov
pop
xchg
mov
or
mov
xchg
ja
dec
jmp
rcrl
ret
stos
scas
jl
xchg
pop
divl
mov
das
fsubl
pop
push
bound
pop
dec
xchg
xchg
cmp
jo
dec
add
pop
cwtl
or
orps
rep
mov
xor
mov
jno
dec
and
scas
fwait
pop
push
test
int3
push
bound
out
lods
pop
or
add
in
and
push
rolb
aam
jne
xchg
loopne
aam
jns
and
xchg
scas
jns
sbb
sbb
fists
enter
add
add
imul
push
mov
loopne
shlb
movsb
inc
jecxz
cmp
xabort
int
xchg
push
xchg
shl
testb
push
mov
insb
sbb
das
enter
clc
dec
and
fst
add
les
jnp
sbb
push
inc
adc
enter
fiadds
add
cmp
dec
jl
sbb
insl
lods
or
dec
imul
bound
mov
sub
mov
into
push
xor
fcmovb
or
adc
incl
mov
lods
dec
stos
push
loopne
push
mov
inc
jo
pop
cmp
inc
sbb
inc
dec
aaa
hlt
sub
lods
flds
add
cmp
inc
sbb
ss
testl
jg
shr
adc
data16
cmp
jno
f2xm1
dec
push
aad
mov
dec
jp
pop
in
add
inc
dec
jmp
add
mov
sub
repz
fwait
sti
rol
decl
xor
fs
jnp
pusha
js
adcl
sbb
dec
push
fmull
aad
fsubr
ds
push
loop
cmp
mov
xor
inc
fistps
sbb
or
or
and
mov
pop
adc
push
lret
inc
icebp
adc
jg
push
stos
stos
inc
and
addr16
xor
and
xor
mov
out
or
push
shll
fwait
push
imull
inc
sub
jb
xor
lods
test
jo
lahf
icebp
or
jno
pop
xchg
pop
push
or
fidivs
and
add
bound
jg
jb
cmpsb
cmp
inc
jno
mov
and
inc
dec
es
pop
jbe
mov
ss
add
dec
or
inc
mov
push
clc
stos
sub
stc
lret
add
popa
mov
mov
sbb
pop
int
ret
adc
loope
insl
cld
add
scas
cs
pop
sub
stos
adcl
jbe
jl
out
add
scas
cmpl
adc
xor
and
ja
arpl
aad
loopne
inc
adc
loop
mov
daa
enter
bound
mov
test
pop
push
xchg
mov
push
dec
sahf
cmp
lods
inc
cli
rcll
aaa
mov
sbb
or
pop
mov
mov
pushl
fs
idivl
hlt
pushw
jno
loopne
cmpsb
add
adc
das
xor
rolb
or
rorb
add
pop
mov
sti
out
dec
pop
push
fmuls
cs
inc
push
add
cs
adc
inc
inc
add
cmp
jnp
sbb
sbb
jb
leave
daa
outsb
cmp
data16
mov
leave
stos
mov
add
out
dec
push
mov
imul
add
dec
enter
xchg
in
stc
cmp
push
cli
pusha
add
fwait
dec
pop
aaa
imul
push
fdivrl
sarb
sub
add
jae
ss
push
jp
jb
into
or
not
test
outsl
inc
aad
inc
adc
aas
test
je
cwtl
cmp
mov
inc
xchg
pusha
incb
scas
loopne
push
or
stos
js
push
fbstp
addr16
aas
cs
mov
sbb
xchg
mov
scas
fdivs
inc
std
and
pcmpgtw
fwait
adc
pushl
pop
sahf
rcrb
cmp
lods
xchg
jo
add
dec
and
cwtl
pushf
push
mov
scas
rcrb
sbb
mov
pop
xchg
addb
in
nop
std
dec
mov
mulb
rcl
cmc
cmp
mov
dec
jae
stc
xchg
pop
rcr
jl
push
add
jne
dec
pop
cmp
xor
xchg
inc
mov
mov
inc
cmp
push
sbb
es
jbe
insb
mov
ljmp
test
rcr
jle
shll
dec
lock
inc
jecxz
dec
add
cld
clc
dec
jg
xor
lret
jne
push
mov
mov
cmpsb
scas
jl
repz
adc
fadds
mov
mov
fldl
fimull
mov
jno
and
inc
aas
xchg
push
in
js
fcompl
push
xchg
pop
inc
arpl
sub
scas
pop
cmp
sbb
push
outsb
xor
jmp
xchg
push
pop
stos
bound
pop
inc
xchg
mov
cs
orl
dec
add
ds
outsl
call
or
and
add
cmp
jge
bound
fisubrs
mov
cltd
jle
ljmp
jge
push
cwtl
sub
inc
inc
lock
mov
pop
mov
stos
push
or
pop
sub
push
lret
or
popf
jge
sub
je
shrl
sahf
dec
adc
andb
iret
adc
inc
fiaddl
repz
jp
fdiv
mov
jp
xchg
sub
jae
pop
inc
or
dec
xchg
or
je
cwtl
stc
fmull
jo
cmpsl
and
loop
jb
stos
jecxz
mov
inc
rorl
lods
dec
add
dec
inc
lds
push
mov
pop
xlat
xchg
bound
repnz
orb
sub
push
mov
shr
or
cmp
adc
pusha
not
shll
cs
lock
imul
dec
rorb
dec
and
ror
adc
popa
out
test
xor
fistps
pop
pop
and
xchg
add
call
in
push
mov
int
mov
pop
imul
stos
loopne
push
pop
pop
inc
cwtl
xchg
jno
sbb
dec
pop
fcmovne
decl
sbb
leave
or
test
mov
loope
and
cmp
cmp
dec
mov
lods
jle
pop
movsb
dec
lock
in
test
jb
dec
adc
aaa
in
push
adc
jle
jle
stos
test
jnp
shlb
push
dec
hlt
mov
inc
jmp
mov
je
stos
enter
push
aad
sbb
cmp
mov
into
sub
and
mov
scas
aaa
fcompl
imul
or
repnz
pop
inc
gs
pop
dec
jns
sub
add
cmc
cli
add
jecxz
in
mov
xchg
xchg
mov
mov
loope
pop
stos
sub
sub
jne
or
sarl
mov
ficompl
mov
dec
movsl
repnz
adc
aaa
stos
inc
push
sbbl
sbb
insl
lcall
or
es
xor
mov
fadds
lods
mov
push
xchg
sbb
push
mov
sub
sbb
cld
sbb
in
fcoml
idivb
loope
sbb
jl
imull
cmpsl
sbb
cmp
pop
mov
test
jp
je
repz
xchg
repz
xchg
cltd
jno
push
mov
test
mov
cmpsb
mov
jp
cmp
or
jns
in
icebp
jl
maskmovq
mull
outsl
dec
in
xchg
test
inc
test
faddl
pusha
icebp
ds
ret
loope
pusha
fwait
xor
mov
mov
sbb
xchg
jge
xchg
into
dec
repnz
frstor
test
decl
ret
xorl
jl
cs
sub
enter
call
lcall
pop
cmp
pop
in
andl
dec
enter
cwtl
dec
push
and
pusha
leave
mov
imul
cmpsl
outsl
and
iret
out
cli
adc
jecxz
mov
cmpsb
in
sub
roll
call
mov
mov
sub
das
jne
mov
add
mov
push
cmpsl
out
out
adc
fadds
or
pop
fldenv
cmp
push
idivl
call
shlb
cmc
push
stos
shr
inc
ret
adc
loope
and
cltd
push
push
lret
fidivs
lock
mov
ret
inc
ljmp
lret
popf
fiaddl
push
add
out
pop
shl
cmp
xor
add
cmp
scas
cmp
fnstsw
inc
inc
mov
enter
stc
dec
mov
arpl
int
xor
push
test
icebp
loopne,pn
xorb
shrb
scas
mov
fisubrl
xor
jg
mov
fisttps
sbb
je
loope
jmp
popf
sti
sahf
add
lods
xor
pop
jmp
dec
nop
pop
adcb
push
inc
add
jbe
jecxz
aam
mov
leave
mov
and
dec
mov
sbb
rorb
dec
pop
add
inc
shll
sub
jbe
bound
lods
mov
ret
cmp
cmp
inc
mov
xor
leave
outsb
dec
push
add
fs
xlat
scas
push
dec
lods
aad
mov
jnp
inc
addb
rcll
fildll
test
fists
xchg
and
ficompl
push
mov
scas
lret
pop
adc
jbe
cmp
lds
shr
out
pop
repz
cmp
and
call
xor
fnstenv
inc
test
div
cmp
pop
test
pop
inc
adc
repz
cmp
cld
inc
das
stos
push
fs
push
scas
popa
and
and
imul
nop
xchg
add
mov
inc
mov
inc
sub
xor
adc
addr16
mov
inc
test
sbb
ja
imul
xchg
add
imul
dec
pop
int
int
jo
xor
jp
push
adc
sti
shll
add
pushf
roll
push
out
cmpsb
in
outsb
sub
aad
test
mov
add
sbb
ja
dec
inc
mov
jo
or
add
pop
clc
dec
arpl
push
mov
jl
inc
data16
bound
das
or
cmp
push
and
out
js
inc
je
xor
inc
mov
inc
dec
push
inc
pusha
pshufw
cmpl
xor
jno
out
fisttps
xchg
adc
xorb
inc
jno
je
xor
out
popf
mov
pop
inc
pusha
fists
outsb
fldenv
loop
jns
and
push
adc
cmpsb
les
sarl
jg
roll
add
leave
lods
icebp
add
syscall
mov
sbb
push
test
dec
lods
sbb
es
add
divb
aaa
ja
aaa
aas
cwtl
xchg
testb
adc
test
aam
ss
negl
xchg
xchg
push
push
imul
out
mov
and
cmc
fwait
and
xor
and
in
push
pop
mov
or
aad
and
dec
dec
xchg
nop
aam
call
imul
loop
pusha
repz
test
xchg
jmp
dec
push
daa
push
fidivrl
add
stc
push
cmp
je
add
push
stos
mov
popa
xchg
mov
jge
rcr
add
sbbl
mov
sub
push
add
mov
stos
hlt
loope
xchg
sub
dec
jg
or
dec
mov
xchg
aas
rolb
fists
loop
xlat
or
mov
data16
sbb
jmp
push
mov
in
xchg
lahf
aas
lock
out
xor
out
and
dec
incl
cmpsl
insb
xor
incb
enter
decl
sti
sarl
adc
sar
xchg
sub
adc
adc
cwtl
jg
inc
js
inc
dec
stos
fcmove
sbb
push
inc
enter
inc
inc
push
sub
sti
pop
jns
in
outsb
lret
std
mov
pop
pop
push
test
lahf
dec
xchg
cld
loope
dec
mov
pop
pop
cmpl
jl
cmp
lahf
inc
cmpsb
cld
insl
pop
xor
clc
je
pop
clc
inc
cmp
scas
push
inc
cmp
xchg
call
sub
dec
add
ficompl
imul
mov
xor
stc
xchg
ljmp
cld
stos
into
sub
insb
xor
hlt
cli
mov
and
outsl
stos
cmp
scas
fiaddl
ret
stos
cli
daa
dec
pop
jecxz
xchg
mov
pop
jle
jmp
pushf
lret
insb
repnz
pusha
mov
cli
loop
ret
mov
mov
orb
mov
cwtl
nop
jecxz
cmpsb
fldcw
xorb
stos
pushf
jecxz
mov
sbb
aad
cmp
jmp
push
nop
bound
fiadds
scas
jbe
fdivs
outsl
fwait
int3
xor
mov
pop
or
jle
or
push
cmpsl
sbb
into
sbb
cltd
stos
into
push
push
and
pop
add
xor
jae
adc
call
out
or
and
out
mov
mov
push
mov
xor
mov
rorl
pop
outsl
ret
jbe
xor
and
hlt
outsl
out
lret
lock
cwtl
cmp
cwtl
pusha
cmc
pop
mov
mov
nop
xor
xchg
out
aam
lods
xchg
pop
scas
shl
adc
std
leave
and
xchg
je
dec
rcr
pop
mov
mov
add
in
sbb
push
test
loop
fildl
jo
mov
repz
or
stos
push
test
mov
sub
addr16
adc
sbb
fnstcw
cwtl
mov
pushf
jg
bound
pop
test
ds
lea
pusha
aam
movsl
or
insb
rorl
mov
push
mov
mov
xor
jmp
addr16
icebp
xchg
adcl
scas
sub
icebp
lcall
xchg
mov
ja
and
ja
into
in
dec
jmp
adc
sub
add
mov
js
ret
adc
dec
popa
adcl
adc
dec
loopne
loop
cmc
jle
or
cmp
leave
or
inc
xchg
push
out
xchg
sub
jbe
ss
jp
mov
shll
mov
mov
push
mov
fmuls
lods
ja
add
pop
es
arpl
repz
inc
mov
and
gs
xchg
cmpsl
mov
push
in
es
adcl
in
cltd
push
fsubrs
outsl
into
stos
in
dec
xor
fucomi
or
stos
dec
push
xchg
mov
cltd
jmp
add
imul
mov
mov
iret
es
adc
push
push
cwtl
pop
es
push
jmp
out
dec
mov
repz
int
mov
cmc
leave
xchg
lret
jnp
jp
call
les
and
xchg
imul
xchg
pop
push
sub
das
mov
add
stos
test
ja
insl
dec
rorb
adc
shl
sti
add
cmp
pop
push
pop
and
movl
jg
jbe
dec
mov
sbb
or
push
inc
and
sub
dec
xchg
xor
testl
outsb
adc
push
lret
inc
mov
xchg
es
pslld
rcrl
aad
shlb
add
xchg
mov
xchg
fwait
xor
lods
mov
pop
xor
adc
mov
test
push
cmpsb
in
dec
xchg
jno
fnstcw
loopne
cwtl
dec
stc
repnz
lock
pop
dec
jle
xchg
mov
lock
orl
and
xor
daa
mov
idiv
lock
repz
and
pushf
es
push
mov
push
jbe
clc
test
das
movb
sbb
ja
cmp
push
xchg
pop
decl
mov
pop
aam
or
test
in
mov
dec
inc
and
cli
push
mov
cmp
xor
lods
in
in
outsb
inc
lcall
jnp
aas
das
movsb
pop
shrb
popa
xchg
loop
mov
loope,pn
bound
cmp
pop
mov
dec
lock
inc
push
cmp
cs
sbb
pop
loopne
lock
arpl
xchg
jp,pt
idivb
push
adc
sbb
lock
add
ret
in
xor
dec
repz
cld
cs
xor
add
cmp
loopne
cmp
pop
pop
push
div
mov
iret
mov
and
out
and
dec
dec
fs
test
loope
pop
sbb
xor
andl
mov
pop
mov
jl
outsl
jle
jl
and
add
and
prefetch
push
sbb
movl
dec
icebp
mov
xor
test
add
mov
adc
dec
enter
inc
pop
cli
imul
repnz
or
jae
jbe
lods
xor
and
push
inc
enter
pop
mov
mov
insb
adc
jge
sbb
sbb
mov
movsb
cmpsb
ret
aas
in
xchg
in
jne
and
adc
mov
mov
jg
adc
pop
or
sahf
add
cltd
mov
and
adc
jbe
hlt
cli
xchg
mov
and
out
sbb
xchg
cs
jl
je
pop
xchg
rolb
subb
mov
mov
in
sub
dec
leave
out
cltd
out
mov
sahf
push
lcall
orl
mov
mov
mul
repnz
das
ljmp
enter
mov
hlt
mov
cli
sbb
std
rclb
loopne
add
jb
pop
mov
or
mov
mov
imul
stos
imul
sub
mov
xchg
orl
mov
and
stc
test
add
sbb
es
mov
call
pop
pop
pop
iret
cmp
pop
sbb
xchg
sbb
mov
stos
pop
xlat
adc
sti
mov
pop
inc
add
jnp
fdivr
inc
out
sub
repnz
adc
das
xor
pop
cli
dec
xchg
push
pop
cmp
mov
xchg
sub
mov
inc
pushf
jp
mov
lea
mov
pop
pop
sarb
pushf
cmp
test
pop
ret
sub
test
jo
sbb
fdivrs
loop
aam
pop
and
or
loopne
call
dec
out
enter
pop
add
add
movl
out
enter
outsl
add
nop
cmpb
test
push
push
imul
addr16
imul
sbb
pop
adc
stos
jp
add
popf
pop
xlat
nop
in
push
aaa
adcl
sub
cwtl
shl
lahf
mov
aaa
cs
ss
pop
inc
mov
xor
aaa
and
ret
cmp
sbb
inc
icebp
dec
jne
ds
out
aas
sub
add
imul
dec
pop
lcall
das
dec
pusha
les
xor
or
push
pop
pushw
push
mov
jo
sub
js
dec
cwtl
cmp
sub
dec
and
call
xor
jmp
pop
or
in
lret
daa
mov
ret
test
mov
testl
hlt
xlat
dec
or
lods
push
pop
aas
xchg
cmp
js
fldcw
repnz
pop
movl
bound
push
xor
fisttpll
push
xchg
cmp
mov
add
aas
or
pop
fstp
sbb
cltd
ds
bound
sub
inc
mov
dec
add
loopne
xchg
push
sbb
push
mov
and
pop
mov
mov
or
xchg
dec
adc
loope
xor
sbb
scas
scas
out
mov
jecxz
aas
xlat
or
fs
adc
movsb
lahf
cmpsl
xor
add
pop
test
xor
push
andb
mov
js
adc
and
mov
out
fisubs
xchg
clc
add
ss
jns
movsl
bound
and
jmp
jnp
mov
sti
lahf
xchg
out
mov
test
incb
cmp
sbb
das
inc
fwait
int3
xchg
enter
or
xor
mov
movsb
insl
shlb
mov
shrb
and
testb
cmc
and
and
and
push
dec
lods
dec
int3
daa
imul
arpl
mov
scas
in
outsl
ds
push
cmp
or
add
and
xor
or
negb
push
sbbl
call
ljmp
out
jp
mov
jae
repz
scas
test
cli
sub
pop
cmp
outsl
push
imul
xor
popf
add
loopne
jecxz
movl
cmp
fiadds
test
pop
jbe
jne
sbb
pop
xlat
mov
cmp
or
js
jmp
mov
aaa
mov
inc
scas
xchg
mov
arpl
scas
nop
add
mov
pop
pop
test
jno
push
and
mov
dec
das
fs
push
outsl
ret
xor
push
je
testl
std
pushf
xchg
pop
call
mov
push
xlat
push
add
jp
je
addb
cmpsl
sub
cli
popa
addb
pop
js
incb
push
rclb
call
fsubrl
pop
stos
pop
add
add
mov
cmp
lcall
inc
bound
inc
mov
inc
loope
mov
rcr
scas
fs
inc
push
mov
xchg
adc
aad
xor
pop
mov
arpl
lods
mov
pop
xchg
cmpsb
ss
out
inc
xchg
or
jp
loope
pusha
aam
popa
push
leave
xor
cli
or
adc
mov
mov
hlt
nop
cmp
mov
mov
out
push
sub
lods
sbb
or
fldpi
push
jp
pop
mov
inc
sti
out
aas
pop
mull
mov
jle
shl
loope
ljmpw
xchg
mov
cld
je
into
aaa
jbe
es
jge
mov
dec
vpshlw
sbb
xor
std
lods
repz
mov
nop
and
iret
cmp
repnz
rcrb
int3
movsb
mov
pushaw
push
xor
lea
in
mov
inc
push
sbb
js
shlb
pop
or
ret
out
mov
push
pop
jb
xlat
add
fs
jecxz
iret
loop
ljmp
int
cs
sub
xchg
sbb
jg
mov
jecxz
push
cmp
ljmp
push
mov
push
idivl
iret
notl
push
pinsrw
push
bound
jmp
pop
cmpsb
xor
loope
jl
xlat
scas
fistl
dec
sahf
inc
jae
add
inc
jmp
rcll
insl
imul
js
mov
cmpsb
rolb
dec
orl
jl
pop
push
mov
mov
pop
cmp
mov
pop
shlb
jbe
test
mov
or
dec
push
dec
jbe
sub
or
mov
jmp
mov
pop
push
dec
loopne
lret
push
push
cmp
add
add
movsb
pop
rcrl
inc
xchg
xchg
pusha
shll
pop
orl
jl
outsb
cmp
xor
or
pop
orb
or
or
ds
cmp
sub
jge
jno
cmp
cld
movb
stos
mov
mov
jno
adc
inc
sub
sub
mov
adc
mov
loope
subb
sbb
mov
xor
addb
mov
push
inc
aam
cmpsl
std
fistps
add
sbb
pmaxsw
loopne
repnz
outsb
adcb
data16
js
mov
sbb
das
xchg
in
add
mov
into
test
or
enter
adc
inc
pminsw
cmp
movsb
mov
xchg
fdiv
jmp
cmc
inc
push
adc
pop
or
loop
out
aad
repnz
sub
or
jb
mov
mov
inc
push
insb
mov
dec
mov
push
adc
arpl
imul
sbb
loopne
and
cmp
sub
sbb
xchg
dec
cmp
test
out
test
ja
jp
fcomps
cmp
dec
adc
andb
out
orb
xor
adc
shrd
pop
sub
adc
aad
mov
adc
lds
adc
push
rcrb
xor
subl
xchg
xchg
pop
fnstcw
nop
bound
in
xchg
dec
push
test
pop
jno
popf
loop
sub
out
pop
adc
cmp
cmp
addb
rolb
cmp
jecxz
push
je
call
nop
int3
mov
aas
aad
rcrb
je
sahf
pop
mov
sbb
jecxz
cmc
dec
mov
fisttps
lods
pusha
fisttps
inc
xlat
js
lret
push
adc
fmuls
dec
xchg
push
into
lds
xor
repz
movsl
shrb
nopl
bound
std
jb
inc
lea
mov
lret
ret
jo
popa
and
clc
mov
inc
xchg
push
xchg
adc
mov
pop
sub
cmp
adc
imul
pusha
leave
mov
rolb
mov
lahf
outsl
sub
adc
jns
aam
jle
cld
push
popf
xorb
mov
cmp
scas
push
push
inc
pop
adc
es
and
or
xchg
int
pop
pop
mov
shrl
sub
xor
push
adcb
or
and
aad
mulb
lahf
adc
ret
jge
xor
pop
loopne
icebp
pop
sub
cmp
sub
and
ret
and
inc
xor
out
inc
xlat
and
cmpsb
stos
dec
jns
mov
push
fs
sti
xor
loopne
or
xor
push
mov
push
xor
aam
push
sbbb
xchg
stos
stos
sbb
pop
push
js
pop
cmp
push
icebp
ret
fcompl
dec
push
jg
faddl
adc
sub
loopne
jbe
and
fcomi
sub
add
inc
daa
test
pop
sarl
mov
adc
lcall
add
add
roll
loop
inc
out
jb
adc
push
cmc
jne
dec
outsl
insb
dec
or
lds
loopne
shr
sbb
inc
jle
cs
or
mov
enter
jo
fdivrl
inc
out
arpl
cmpsb
inc
loope
dec
add
push
addb
inc
sub
push
inc
mov
ret
push
push
pop
dec
fwait
cwtl
adc
out
jecxz
sbb
scas
stc
stc
inc
cmp
xor
pusha
adc
or
negl
mov
shll
dec
jo
rol
and
pushf
aas
outsb
xchg
jmp
das
sarb
jge
loope
mov
je
loope
movsb
push
imul
fstpl
mov
lcall
mov
mov
pop
lods
stos
mov
sbb
mov
push
ja
scas
fcoms
cld
dec
push
js
lret
insl
adcb
jbe
pop
cmp
out
mov
inc
sbb
clc
outsb
imulb
jp
fs
xchg
sub
dec
cmp
mov
mov
sbb
outsb
bound
sbb
lods
in
cmp
push
mov
jmp
loop
sarb
pop
add
cmp
mov
dec
mov
push
ss
cs
test
repz
jae
cwtl
bound
push
sub
mov
jg
jl
inc
movsl
inc
cli
mov
cmpsl
jne
inc
outsl
notb
cmpb
inc
mov
cmp
fiadds
insb
adc
dec
mov
loope
sub
add
es
cmp
cmp
push
or
loopne
repnz
scas
mov
jp
sbb
sahf
cld
stc
or
mov
out
js
imul
inc
test
sub
aad
jmp
das
aad
jge
or
xorb
lods
stos
xchg
movsb
int3
dec
cld
mov
adc
sub
out
or
ljmp
and
inc
push
jb
push
and
xchg
shrl
ror
arpl
pop
xchg
stos
scas
shrl
mov
das
mov
mov
mov
cmp
dec
leave
loopne
sbb
mov
movsl
dec
push
push
das
xor
sarb
mov
pop
daa
inc
sbb
adc
adc
scas
cmp
inc
test
dec
add
mov
push
push
push
push
dec
test
xor
out
push
es
push
insl
pop
mov
movsb
jmp
iret
repz
xchg
lock
cmpsb
or
arpl
mov
je
inc
mov
stos
fsubrs
das
fidivrl
mov
popf
stos
cmp
xchg
mov
loopne,pt
mov
cmp
sub
mov
lcall
lcall
push
jns
inc
jnp
jb
notb
cmpsl
xor
xchg
lock
or
or
leave
cmp
ret
mov
lods
adc
mov
mov
mov
dec
sub
aas
clc
fsubr
ss
out
mov
adc
incb
pop
xor
lods
inc
pushf
dec
mov
out
mov
push
dec
clc
inc
jge
and
pushf
jae
sbb
outsb
mov
sub
je
insl
loope
inc
jle
adc
pop
fwait
pop
es
loop
lcall
loop
push
stc
xchg
mov
ljmp
pop
lret
nop
jle
mov
pop
mov
std
rol
adc
das
out
mov
sbb
xor
ljmp
cmp
xlat
push
add
and
jp
lret
scas
pop
out
dec
aad
push
sub
outsb
mov
ss
xor
lods
adc
lret
add
or
aas
adc
xor
dec
push
orl
dec
xor
fdivrs
orl
pop
sub
sbb
pop
fbstp
dec
cmp
lods
sub
mov
push
fisubrl
sbb
jns
xor
adc
jne
leave
aam
jl
mov
xlat
or
sbb
sarb
pop
dec
scas
cmp
test
push
adc
jl
jnp
or
pop
imul
dec
out
push
add
add
or
xor
push
test
fcmovbe
cmp
dec
pop
jmp
mov
mov
lods
mov
fcom
cltd
jp
push
cmp
fsubl
adc
les
or
adc
jo
jge
pop
cmc
and
jle
xor
dec
cmp
jnp
pop
je
pop
jno
or
psubb
xor
xor
aaa
xchg
imul
sub
push
jl
out
and
and
aaa
xor
dec
jns
gs
dec
repnz
adc
lcall
push
sub
lret
jb
xchg
test
fstps
rcrl
out
xor
push
pop
pop
mov
or
xchg
in
dec
dec
jns
push
mov
in
int3
sahf
insl
leave
inc
xor
mov
dec
pushl
in
mov
sub
jae
inc
pop
adc
push
and
adc
xchg
out
out
dec
outsb
in
push
bound
fadds
nop
mov
sub
dec
andb
in
loope
push
popa
adc
or
push
push
xor
sbb
pop
repnz
scas
cld
dec
adc
test
and
mov
mov
shlb
sbb
jp
popw
mov
pop
push
mov
adc
mov
sub
popaw
push
or
inc
sub
jbe
dec
xlat
mov
lahf
lods
inc
scas
dec
dec
xchg
xchg
ficoms
aam
idivl
push
cwtl
mulb
and
dec
imul
inc
or
outsl
mov
fidivrs
pop
push
mov
outsb
inc
shl
xchg
sub
pusha
adc
push
inc
mov
jne
icebp
ljmp
out
sti
jmp
sbb
sbb
dec
mov
mov
pop
xor
pop
dec
sub
add
xor
adc
ds
jb
es
push
arpl
loope
sahf
ds
push
mov
lahf
mov
ret
or
and
scas
sti
lods
xchg
jle
jge
xor
cmp
add
lods
js
adc
jmp
subb
cmp
mov
mov
or
sti
xchg
and
mov
fisubrl
pop
sbb
pushf
mov
lea
cmp
outsb
sti
xor
inc
call
es
cli
hlt
ds
stos
mov
subl
fwait
add
shrl
outsl
add
adc
inc
bound
mov
sahf
ret
mov
mov
xor
pushf
and
xchg
mov
push
imul
nop
jl
cmc
call
xchg
cld
sub
jb
cli
lret
mov
mov
xchg
jp
adc
ds
xchg
sbbb
and
repnz
mov
lds
jb
add
adc
ss
pusha
mov
mov
inc
pop
sbb
insb
xor
imul
add
mov
sub
call
pushf
mov
sbb
nop
jae
lods
dec
loop
into
lret
insb
sbb
je
in
test
sbb
xchg
jle
xchg
inc
lret
jno
fcmovb
pushf
xor
outsl
pop
fdivl
xor
pushf
pop
add
mov
call
cmp
test
in
mov
pop
sbb
add
add
les
insb
out
test
pusha
pop
mov
jmp
push
jnp
js
scas
xlat
mov
mov
inc
ret
sub
sub
adc
push
fadds
dec
xchg
mov
out
aam
xchg
mov
cmpsb
daa
icebp
or
in
aad
xchg
jnp
shl
jns
pop
int3
jns,pt
icebp
lock
mov
call
mov
sub
aaa
adc
or
ret
add
lcall
pop
lcall
rcrb
leave
fwait
adc
or
or
push
int
rorl
cltd
or
cld
push
pop
scas
loope
push
fsubl
xchg
or
out
xor
jge
es
mov
stos
dec
dec
mov
or
ss
cld
xor
add
adc
xlat
ret
push
out
mov
mov
push
rclb
jg
lock
cmp
cmp
mov
cmpsl
and
dec
nop
sub
leave
roll
into
in
sbb
aad
mov
mov
ret
xor
jnp
xor
divb
push
sbb
xor
in
testl
fwait
push
test
or
xor
out
pusha
dec
test
lcall
push
cli
movb
mov
sahf
out
outsl
or
cwtl
sbb
or
mov
xor
inc
loop
mov
addr16
movb
in
insb
jmp
dec
lods
imul
aas
lret
xor
leave
jmp
leave
ret
out
lret
das
adc
mov
sbbl
movl
mov
mov
loop
test
shlb
sbb
push
jo
inc
mov
jle
lea
inc
xor
mov
fsts
int3
gs
ret
mov
pop
xchg
subb
dec
add
mov
pop
cmp
xchg
insb
mov
pop
js
fadds
insb
cmp
pop
xchg
leave
push
xorb
pop
push
jl
and
mov
or
pushf
rorb
mov
jbe
push
cmp
dec
sub
adc
jl
mov
paddd
sub
jb
or
cmc
xchg
or
push
mov
fsts
mov
mov
outsl
ret
pop
pop
fwait
gs
stos
xor
les
sbb
orl
mov
es
xchg
rcrb
fdivl
cmp
xlat
int3
mov
jno
and
jae
xor
ret
jb
and
xor
pop
subl
out
testb
pop
clc
ja
lea
into
clc
loop
mov
pop
out
mov
pop
scas
jle
ja
dec
scas
ljmp
xor
push
push
mov
ja
cmc
cmpsb
into
mov
push
pop
inc
lcall
loope
add
mov
stos
or
outsl
jae
pusha
daa
pop
mov
ljmp
loope
aam
in
xchg
jne
daa
or
and
xchg
mov
sbb
mov
outsb
push
movsb
movsb
push
xor
outsl
ss
jmp
pop
push
jb
pop
adc
sub
sar
dec
xor
insl
movsb
add
dec
mov
movsl
sbb
or
outsl
incb
scas
dec
mov
lret
and
rcll
jl
mov
mov
sbb
pop
dec
add
clc
ja
fisttps
mov
xor
jns
jo
inc
lahf
lock
pop
jae
mov
movsl
fistl
add
gs
std
nop
out
push
aas
adc
and
call
push
pushf
xchg
hlt
jnp
jo
sbb
shl
sbb
mov
adc
sub
jl
inc
sbbl
js
insl
sub
add
in
lahf
push
xchg
addr16
cs
std
jnp
dec
cmp
dec
pop
inc
jge
sub
ficompl
lahf
test
sbb
push
adc
into
add
pop
dec
shlb
xlat
sti
cli
inc
push
mov
ljmp
enter
sub
insb
xchg
mov
inc
pop
push
ljmp
ss
pop
rcrb
adc
in
sbb
xlat
push
mov
or
mov
mov
xor
sub
pop
outsl
std
outsb
xchg
adc
cmpsl
fcmovbe
inc
mov
pop
decl
lock
inc
mov
pop
imul
mov
jo
int
in
push
lods
out
add
lcall
hlt
add
pop
xchg
inc
and
push
adc
mov
or
ret
loopne
adc
push
push
jnp
loopne
ret
xchg
out
pop
stc
or
in
pop
push
fisubs
ss
dec
mov
fs
movups
jbe
fdivrp
js
mov
cs
ljmp
cmc
shl
loope
pop
pop
divl
es
mov
mov
mov
add
mov
ss
adc
push
lcall
test
lahf
pusha
jge
test
popf
inc
es
clc
jmp
imul
bound
inc
les
cmovno
pop
adc
stos
and
push
loop
add
fisubs
repnz
test
pop
inc
lods
lods
add
dec
or
jecxz
pop
lods
test
cmc
arpl
mov
dec
out
fstps
push
bound
sbb
aam
mulb
pop
test
rcrb
outsb
sbb
jae
in
push
daa
daa
jns
test
sbb
xor
push
enter
inc
and
pop
pop
and
push
sbb
mov
fimuls
sub
push
adc
dec
insl
cmpsl
mov
ficoml
dec
inc
mov
pop
add
dec
fsub
inc
pop
mov
push
jns
call
push
insb
xlat
loopne
xchg
mov
and
sbb
test
in
dec
loope
cld
inc
aaa
or
gs
fisttps
mov
clc
fimuls
enter
xchg
imul
mov
arpl
xchg
aaa
adc
enter
xchg
inc
xchg
popf
andl
icebp
bound
cwtl
clc
dec
pop
aad
test
sub
hlt
loope
in
xor
lock
ret
xor
mov
jl
push
mov
cmp
jp
fbld
sub
dec
jo
adc
out
fistl
das
call
sbb
push
shl
sbb
xchg
pop
and
js
or
adc
arpl
mov
jns
mov
xlat
fists
and
sbbw
gs
mov
jl
adc
bound
push
inc
loop
xchg
xchg
mov
mov
lret
or
pop
nop
add
inc
push
ja
aam
xor
mov
fwait
and
nop
test
sbb
inc
in
pop
dec
loopne
aam
dec
popf
mov
rclb
add
push
into
call
xchg
xchg
stos
stos
jae
xchg
lret
adc
mov
xlat
lods
outsb
xor
imul
popf
xchg
stc
mov
jle
movsl
dec
push
mov
out
subl
scas
outsb
xor
outsl
popf
fwait
xchg
push
aaa
in
pop
xchg
lahf
jl
push
push
sahf
pop
sar
orl
and
push
push
cmp
jp
inc
adc
push
inc
cmpsl
aas
aas
sbb
xor
push
lods
jns
and
rorb
clc
fsts
inc
or
mov
out
dec
xor
aam
mov
sbb
pop
cmp
add
stos
addl
mov
sarl
iret
clc
imul
pop
sbb
aaa
pop
pop
push
cs
dec
xchg
xchg
jmp
jecxz
push
push
lods
push
push
push
or
dec
lods
neg
push
aaa
mov
jge
or
sbb
pop
and
xlat
mulb
inc
cmp
cmp
and
out
mov
fsubrs
xor
sarb
shlb
ds
and
mov
int3
cli
fnsave
sub
les
push
out
and
ljmp
mov
mov
inc
insb
movsb
and
pop
test
ret
sbb
or
hlt
imul
nop
mov
into
out
sbb
js
iret
push
mov
ret
dec
pop
stc
pop
addr16
dec
and
ficompl
or
pop
movsb
mov
pop
push
pop
cli
arpl
add
fs
push
lret
xor
jecxz
lock
out
js
icebp
cmp
sarl
mov
inc
into
xor
cli
outsl
ss
into
mov
cs
lock
lods
push
sti
pop
add
ret
inc
adc
jp
arpl
dec
sti
data16
jbe,pn
fisubs
sub
inc
es
push
or
out
cs
xchg
lock
adc
mov
int3
mov
ds
dec
jbe
adc
xchg
inc
loope
dec
in
ds
xchg
fdivrl
push
cmp
push
cli
iret
rcrb
mov
in
lods
pop
xchg
push
sbb
mov
inc
push
fwait
movsl
cmp
mov
scas
pop
nop
mov
in
adc
adc
enter
mov
ss
in
xor
dec
adc
aaa
out
dec
lret
sub
int3
add
test
xor
push
js
ss
test
adc
fiaddl
mov
ud2
iret
nop
fwait
sub
sbb
add
arpl
mov
loop
outsb
shrl
add
xlat
xor
ss
pop
jne
push
in
aam
bound
cmpsl
jle
sbb
cmp
clc
mov
int3
ds
sub
or
push
and
std
daa
incb
fldl
inc
loopne
pop
shrb
pushf
pop
les
out
ret
ret
rcrb
imul
stos
mov
push
mov
orb
jmp
push
scas
ret
push
xor
test
andb
inc
je
inc
gs
lock
fs
dec
pop
inc
sbb
xchg
mov
ljmp
test
mov
cmp
adc
inc
pop
xchg
push
icebp
pushf
fistpl
test
jne
in
cmovnp
push
pop
test
rcrl
loope
xor
dec
xor
adc
ljmp
pop
fwait
fwait
jle
xchg
ret
enter
sbbl
sbb
add
int3
lahf
stc
mov
push
push
je
imul
test
jnp
dec
jle
hlt
clc
in
into
repnz
push
enter
roll
or
xor
cmp
das
imull
or
inc
adc
cmp
pop
rcrb
imul
sub
cmp
add
adc
cmp
mov
popa
cmp
sub
xchg
les
pop
and
mov
and
je
push
mov
sbb
lods
aaa
mov
jp
mov
rorl
in
dec
mov
xchg
mov
test
xchg
in
cmpsb
adc
cmpl
jp
cld
pop
cmp
sbbl
pop
mov
inc
mov
fsubrs
xor
pop
insb
adc
lcall
dec
mov
in
mov
loope
xor
dec
flds
in
pop
ds
stos
push
cld
aaa
add
inc
sbb
ss
sbb
push
add
push
inc
sub
gs
sbb
sub
jne
lods
inc
jne
cmp
aaa
adc
mov
and
scas
pop
imul
call
cmp
pop
mov
test
sbbl
adc
rcrl
pushf
sub
push
xchg
jae
lret
pusha
or
gs
mov
xchg
lret
js
fs
cwtl
orl
sub
fs
aas
mov
push
jle
dec
sub
cmp
cwtl
mov
cmp
aaa
out
imul
inc
mov
cmp
cmpsb
xor
inc
push
stos
mov
inc
or
jbe
int3
and
adc
xor
xchg
or
dec
adc
inc
cmp
dec
dec
push
and
adc
xchg
mov
push
or
xchg
push
lret
mov
jae
push
mov
pop
je
cltd
jns
fnsave
or
daa
rorl
push
outsb
sahf
ljmp
sub
push
lcall
sub
jb
fucom
sub
dec
ror
cmp
push
out
sti
pop
test
jno
out
bound
sbb
lcall
mov
dec
mov
test
cmp
cmpsb
adc
stos
mov
add
or
mov
pop
cmp
sahf
cmp
mov
vmread
rclb
les
pop
mov
arpl
std
push
ficompl
test
loopne
inc
push
push
xor
dec
adc
addr16
or
xor
jns
jne
sar
xchg
push
cmp
inc
mov
pop
outsb
dec
push
xor
bnd
inc
pop
inc
and
inc
and
cmp
mov
dec
es
stc
inc
shlb
jbe
mov
push
cmc
mov
adc
dec
dec
popf
cmc
xor
fcomp
ds
les
xchg
cmp
inc
orb
and
push
fldcw
daa
sbb
negb
fs
and
test
mov
into
add
push
cmp
push
pop
pusha
jecxz
adc
sbb
adc
imul
lret
stos
movsb
out
or
cwtl
pop
mov
sti
cmp
cmp
cmp
inc
inc
inc
int
push
sti
clc
mov
jmp
stos
rolb
push
and
insb
push
shrb
sbb
xor
stos
cmp
stos
add
popf
imul
ja
or
std
jecxz
xor
inc
sub
loope
lods
fnstsw
idiv
sbb
jb
sbb
add
fildl
or
push
pop
mov
jne
jbe
pop
xchg
lods
add
pop
jmp
sbb
nop
jnp
out
push
pushw
jne
fidivs
sbb
es
cmp
inc
xor
sub
or
lcall
std
icebp
dec
inc
repnz
xchg
dec
dec
jnp
bound
push
jbe
pop
and
ret
lret
mov
push
aad
cmp
adc
cld
sub
sub
xchg
mov
inc
lods
inc
push
out
lret
cmp
mov
mov
decb
dec
out
dec
imull
xchg
adc
push
aam
mov
inc
arpl
fs
pop
mov
cli
add
sub
pinsrw
mov
mov
pop
pop
ja
sbbb
push
adcb
sbb
cs
jp
arpl
push
or
es
cs
fidivrs
add
pop
bound
in
js
aaa
add
or
push
inc
jmp
inc
mov
pop
xor
sarl
xor
movsl
inc
mov
nop
sbb
or
js
dec
aad
fiadds
jl
adc
adc
inc
imul
fldenv
dec
fstpt
sub
lods
insb
lret
mov
das
pop
and
cmpsl
ja
jl
and
push
mov
lret
iret
jl
dec
rcll
imull
add
pop
mov
push
push
mov
mov
push
xchg
stos
cmp
mov
lahf
mov
mov
sub
dec
inc
push
sbb
fisubrs
cs
gs
fisttps
lret
iret
mov
pushf
jbe
test
mov
pop
xchg
loope
push
sub
addb
ss
xchg
sahf
bound
sbb
out
cld
testl
jecxz
cmp
out
in
sbb
stos
mov
mov
xchg
sahf
add
sub
pop
andb
in
out
popa
push
sub
xchg
stc
jb
xchg
or
inc
nop
jne
dec
lds
imul
imul
repz
mov
call
ss
in
mov
addr16
cmp
push
and
aas
shrb
loopne
mov
daa
popa
jp,pt
dec
pop
imul
mov
mov
xor
das
inc
jecxz
decl
or
xchg
outsb
xor
mov
xor
jne
fimull
orb
repnz
xchg
jg
fstl
cmp
fcomi
xor
sub
je
lods
sub
mov
adc
hlt
mov
pop
insl
ljmp
inc
out
mov
and
cmp
imul
test
jmp
adc
sbb
sub
add
or
cmc
ss
xlat
imul
push
cmp
mulb
stos
rcrl
xchg
mov
adc
das
jb
test
fists
xchg
ja
loop
hlt
add
imul
mov
push
loope
jge
clc
arpl
mov
jl
mov
addr16
dec
imul
insb
cltd
push
jmp
sarl
push
push
insl
push
and
mov
pushf
push
loopne
push
pop
cmp
addr16
in
and
jg
js
pop
mov
test
xchg
push
push
test
add
mov
clc
pusha
dec
cld
push
call
repz
into
adc
cmp
inc
and
push
pushf
enter
movsb
jo
inc
insl
cmp
jp
adc
std
push
inc
std
fcoml
out
call
jmp
mov
ss
call
aas
in
xlat
jmp
inc
cmp
dec
jg
insl
sub
mov
and
and
inc
pop
xlat
mov
cli
push
imul
xor
test
pop
xor
sbb
jb,pn
push
cmp
pop
inc
popa
jecxz
fcompl
js
adc
and
into
adc
test
cwtl
xchg
pop
inc
outsl
faddl
or
fbstp
cmpsl
inc
pushf
sbb
sbb
sbb
mov
xchg
aad
pop
daa
pop
push
jnp
mov
rcl
fs
aas
sbb
or
pop
cmp
push
enter
pop
popa
xchg
jb
xor
dec
test
je
iret
sbb
ljmp
inc
inc
fidivrs
push
clc
mov
aam
les
push
push
orl
ret
sarl
mov
or
test
movsl
adc
repnz
sbb
mov
push
popa
outsb
mov
leave
sub
cwtl
lods
adc
mov
cmp
push
or
mov
sbb
pusha
adc
test
mov
ja
sbb
lret
stos
xchg
lods
inc
or
ljmp
out
insb
add
or
insb
test
jle
xchg
xor
lock
arpl
iret
lods
mov
mov
outsb
mov
into
fwait
mov
les
lcall
adc
fisubrl
sub
sub
dec
gs
clc
lea
clc
or
clc
inc
dec
push
ret
xchg
cmc
ds
push
lods
lcall
das
test
pusha
jo
js
icebp
add
or
xorb
and
mov
sbb
mov
les
pop
adc
push
add
js
push
xchg
push
dec
adc
ljmp
or
dec
mov
lcall
test
shufps
cmp
iret
adc
cmc
ja
push
insl
add
test
icebp
adc
pop
push
sbb
out
aad
iret
pusha
stos
andb
std
cmpsl
push
jbe
pusha
es
inc
xlat
adc
mov
popa
testb
enter
push
addr16
add
cmp
insb
inc
notb
cs
mov
adcb
dec
lds
adc
stos
mov
xchg
push
js
pop
dec
gs
testb
fwait
xor
icebp
dec
and
ljmp
cmp
jne
fs
nop
jp
cmp
jle
in
mov
jae
cmp
add
inc
cli
cwtl
xchg
dec
jns
pushf
xchg
xor
jns
dec
stos
pop
adc
mov
imul
push
pop
rcll
loop
push
xor
add
lahf
pushf
inc
push
dec
imul
dec
dec
pop
jp
and
ljmp
mov
addr16
push
jbe
sbb
es
sub
fdivrs
cmp
cmp
out
adc
cmp
ljmp
dec
mov
or
push
mov
sahf
call
add
fstl
call
jno
jp
mov
addr16
mov
fcompl
fsubl
sub
cmp
or
or
jnp
push
lret
and
inc
pop
arpl
add
xchg
dec
add
push
cmp
loop
addb
push
mov
leave
pop
call
jp
sub
mov
js
movb
push
sub
ds
fsubs
add
push
mov
lret
dec
mov
adc
pop
clc
adc
jno
xchg
out
inc
push
aaa
pop
dec
dec
imul
mov
pop
addl
leave
nop
dec
loopne
adc
aaa
pop
negb
xchg
pop
xchg
xor
arpl
or
mov
mov
pop
pop
mov
icebp
leave
sub
insb
sbb
mov
or
sbbb
adc
adc
pop
push
test
adc
scas
fmull
mov
outsb
test
or
dec
jge
repnz
jl
dec
fstpl
sub
push
xchg
out
pushf
push
xorb
xchg
push
test
push
push
cld
cmc
aaa
xor
pusha
and
rorb
lret
lret
lods
imul
outsl
aaa
and
pop
pop
xchg
adc
cli
cwtl
push
in
nop
lds
fcompl
jne
cld
add
dec
xor
inc
stos
push
pop
aam
dec
enter
icebp
inc
xchg
pop
sbb
or
cld
inc
imul
sub
fsubl
dec
xchg
fnstcw
aaa
loope
loope
pushf
cs
outsb
jp
shlb
imul
sbb
cmp
mov
pop
adc
out
push
sbb
xchg
out
dec
cli
jae
add
adc
xor
push
popf
ds
pop
test
in
xor
ja
inc
jle
iret
mov
mov
adc
mov
xlat
ss
imul
insb
pop
push
int
and
sbb
pop
cmp
divb
dec
pop
inc
add
push
jno
repz
jb
dec
cmp
push
cmp
sub
test
jle
adc
inc
loop
inc
cmp
mov
inc
xchg
push
adc
mov
add
cmp
lock
push
dec
xlat
int
xchg
jge
sbb
dec
pop
pop
dec
loop
mov
inc
xor
cmpsb
into
pop
dec
int3
das
xchg
insb
mov
cs
out
lds
add
int3
push
sbb
sbb
dec
cmc
call
sbb
mov
push
test
dec
sahf
lods
or
and
clc
sbb
and
pop
sub
pop
pop
test
xor
sbb
cmp
stos
xor
test
xor
jb
sub
xor
gs
sbb
pop
popa
jo
std
mov
add
xchg
inc
imull
sub
dec
mov
nop
leave
fldl
xchg
addr16
popa
xchg
xor
std
call
add
aaa
dec
adc
push
add
xchg
inc
adc
or
cmp
adc
hlt
lea
mov
dec
pusha
xor
testl
int
cmp
mov
push
mov
inc
cmp
mov
push
mov
pop
icebp
mov
xchg
inc
dec
dec
es
pop
and
lock
sbb
mov
push
sub
sbb
std
je
pop
mov
ljmp
mov
and
add
adc
xchg
pop
incb
inc
cmp
outsl
xchg
add
orl
jae
insb
rcll
mov
bound
or
gs
lahf
and
mov
pop
and
xchg
aaa
lcall
lret
je
push
adc
push
lods
mov
sti
sbb
inc
and
push
push
adc
push
iret
sbb
jge
lret
inc
cmp
pop
ds
adc
imul
mov
jbe
push
ret
mov
mov
ret
bound
lahf
sub
repnz
popa
adc
xchg
or
test
jmp
xor
mov
jmp
push
insl
sbb
add
insb
and
dec
lcall
inc
cmc
dec
arpl
dec
imul
xchg
dec
adc
test
mov
dec
pop
pushf
adcl
sub
loop
call
inc
push
in
into
test
xor
pop
add
sar
cmc
sbb
repz
cmp
push
sbb
call
pop
dec
popf
dec
xchg
inc
fbld
sahf
xor
fwait
add
push
mov
inc
out
push
adc
in
xchg
lret
loope
sbb
xchg
push
cmpl
dec
sub
dec
mov
mov
mov
xchg
xor
adc
sbb
orb
popl
mov
insb
xchg
mov
ja
fmull
cld
dec
rorb
fisttpll
jecxz
in
test
cmp
ljmp
dec
js
xchg
sub
sbb
cmp
fnstcw
push
std
pop
std
pop
dec
iret
inc
inc
test
pop
xchg
fwait
in
mov
stos
into
cmp
aam
jl
mov
clc
sar
xchg
sub
or
pop
hlt
mov
xlat
jp
leave
stos
jb
imull
pop
int3
inc
sti
xor
push
das
xchg
sarb
adc
jns
adc
lret
dec
pop
xchg
dec
stos
scas
shl
out
pop
mov
jns
or
push
cmp
data16
push
adc
pop
dec
dec
xchg
mov
popa
fsubrs
pop
fildll
repz
and
xchg
push
fstpt
out
sbb
mov
inc
pop
cli
inc
stc
in
je
lret
gs
movsb
pop
mov
sub
adc
and
and
and
pop
xchg
dec
int3
push
lret
mov
push
enter
inc
loope
add
loope
or
shlb
adc
mov
mull
aaa
sub
xor
dec
notb
push
xchg
sbb
mov
imul
push
sub
bound
or
adc
lret
and
sub
imul
jmp
fldenv
iret
outsl
test
mov
inc
xchg
inc
inc
int3
jmp
mov
daa
pusha
scas
inc
cmp
xlat
pop
jo
arpl
movsl
push
add
fs
fwait
xor
push
pop
adc
cltd
cmp
lods
shll
pop
xor
leave
pop
out
cltd
prefetch
or
mov
or
xchg
and
jmp
les
movsl
or
adc
pop
push
cmpsl
ss
inc
inc
lock
rolb
mov
xchg
push
jo
inc
push
loopne
movsl
test
fcoml
add
dec
ljmp
xorb
or
dec
pop
mov
imul
movsb
sbb
mov
stc
sbb
xchg
jle
aad
xor
imul
iret
inc
addr16
inc
cmp
mov
push
pushf
out
dec
daa
cli
and
orb
hlt
es
xor
or
push
lock
jle
ss
pop
jg
mov
daa
or
fisubs
adc
xorl
jle
xor
je
imul
adc
mov
xchg
and
sti
cmp
bnd
mov
cmp
popf
insb
xor
lds
jno
cltd
in
adc
add
es
stos
mov
popf
divl
and
fcompl
pop
cmc
dec
rcll
stos
je
lcall
fstl
jle
insb
bound
ret
push
mov
in
aam
xor
sub
sbb
pop
and
and
push
pushf
xchg
and
mov
call
xchg
cmp
inc
test
loopne
and
inc
adc
ja
and
pop
push
sub
insb
ljmp
insl
jnp
push
addb
jp
cmp
xor
sub
loopne
jg
wbinvd
push
fninit
daa
testb
inc
insl
jno
fidivrs
ret
xchg
pushf
jmp
shlb
and
push
push
mov
stos
dec
jns
enter
in
pop
ljmp
add
mov
push
sub
dec
or
orb
xlat
ret
rcr
hlt
cwtl
data16
insb
fsub
add
mov
insb
push
jno
add
insb
notb
rcr
lods
dec
lret
icebp
adc
mov
fs
ficompl
add
stos
cmpsb
mov
scas
cmpl
mov
fbstp
add
sar
or
add
push
ficomps
push
data16
or
pop
pop
jp
test
sbb
jmp
and
insb
daa
sbb
jns
and
loopne
add
pop
dec
and
jno
pop
push
pop
cld
cmpsb
js
cmc
insl
mov
iret
fwait
cmp
je
inc
cmp
mov
dec
repnz
pop
cmovbe
push
sbb
bound
pushf
bound
push
jns,pt
sti
adc
sub
mov
jb
lcall
loop
insb
mul
sbb
scas
inc
pop
push
adc
xchg
sub
pop
sub
je
dec
cmp
jecxz
lret
inc
lea
or
xor
iret
or
scas
out
pop
dec
jo
clc
cmpsl
insl
clc
in
sbb
push
sub
cmpl
fildl
mov
ljmp
mov
adc
int
mov
dec
pusha
inc
hlt
dec
jmp
mov
sbb
pop
sbb
mov
sbb
or
decl
lret
lret
sub
leave
testb
xchg
scas
adc
cmp
push
push
jno
push
dec
stos
subl
mov
loop
cmp
xchg
push
fnstcw
and
adcl
subb
inc
js
pop
xchg
cmova
xor
push
pop
pushl
aam
lret
pop
or
je
or
inc
xchg
outsl
stos
xor
add
ret
in
and
dec
push
movsb
push
sbb
fcoms
dec
insb
push
lcall
pop
inc
loopne
lods
mov
icebp
das
gs
sarl
out
or
mov
outsl
adc
lcall
gs
andl
fistl
xchg
std
jle
push
xor
scas
outsb
or
inc
jge
adc
inc
fbld
int3
and
push
dec
bound
shl
sbb
mov
mov
popf
lods
aas
push
ss
pop
stos
arpl
ss
sti
adc
or
push
mov
arpl
mov
cli
dec
pop
sbb
xlat
pop
xchg
or
push
sub
xchg
jmp
sbb
xor
fsubl
inc
cmp
gs
mov
xchg
loope
scas
xor
xchg
xchg
inc
sub
outsl
inc
adc
xor
shlb
leave
mul
cli
outsb
iret
add
jnp
cmp
jge
cli
push
dec
and
jmp
dec
aad
mov
ss
and
test
test
dec
dec
and
in
cmpsl
add
sbb
dec
ret
lock
fnstsw
or
and
mov
rorl
jmp
jae
add
sub
outsb
dec
mov
cmp
sbb
adc
push
imul
ds
cmp
push
pop
lahf
into
scas
dec
sbb
cmp
adc
fidivrl
inc
push
mov
jb
aaa
std
dec
push
cmp
add
arpl
rorl
call
jb,pn
lds
pusha
jmp
movsb
mov
outsb
add
insl
cmp
imul
add
shlb
arpl
push
add
and
jp
sub
loop
js
dec
xor
push
sub
mov
and
jle
aas
mov
fistps
add
jp
sbb
adc
jns
or
pop
int
fcoml
aam
mov
aaa
jg
jb
inc
push
scas
dec
scas
xor
mov
or
ljmp
and
les
push
jae
jle
xor
cmp
pop
fstl
push
xorb
outsl
jp
pop
add
pushf
xor
andl
dec
addl
outsb
or
movsb
mov
xor
shr
cmpsl
pushf
dec
int
in
test
cmp
jns
fs
xor
jae
cmpsl
scas
add
inc
ss
dec
roll
cmc
mov
xchg
pop
xor
inc
fs
fbstp
jae
push
lods
push
dec
test
inc
pop
sbb
das
bound
in
pop
cmc
mov
aas
dec
add
pop
lods
ds
addb
gs
inc
cmp
add
jp
jmp
sub
sbb
or
mov
insb
in
jno
loop
mov
push
cs
xchg
sub
or
inc
xchg
dec
jb
dec
dec
pop
jno
push
jge
ror
jns
test
popf
xchg
stos
jle
push
push
dec
leave
and
fimull
addr16
aas
jg
and
fsub
movsb
aaa
adc
or
sbb
sbb
mov
xchg
lret
fcomps
movsl
xor
fsubrs
push
cmp
mov
dec
pop
or
pusha
insl
aam
rcll
outsb
xor
pop
inc
shrb
xchg
fcompl
dec
imul
sbb
mov
jg
dec
js
push
addl
inc
out
js
das
int3
lret
stc
mov
int3
xchg
sub
bound
mov
ds
xchg
ret
adc
pusha
adc
stos
inc
sbb
dec
dec
arpl
cmpb
lds
in
mov
mov
rcl
sub
in
cmc
jnp
imul
or
jne
pop
gs
jge
xchg
call
in
pop
pop
arpl
and
sti
lret
adc
outsb
inc
loop
pop
mov
iret
shrb
inc
pop
mov
pop
fsts
lea
push
pop
and
inc
mov
repnz
sbb
sbb
pop
push
lcall
xchg
imul
shrl
lret
dec
xor
imul
cld
int
and
ret
jp
int3
jl
pop
add
scas
pop
sub
push
jo
ret
lods
mov
or
xor
push
adc
pop
xor
nop
nop
dec
mov
jle
fcomps
sbbb
shr
pusha
inc
sbb
adc
pop
mov
cltd
cmpsb
xchg
lock
sub
rcl
loope
lcall
add
insb
inc
adcb
cwtl
xchg
lea
jbe
jp
sahf
push
out
mov
ss
fbld
jo
scas
sbb
mov
cmpsl
push
dec
xchg
mov
mov
adc
and
push
dec
into
mov
sahf
mov
outsl
pop
dec
roll
into
push
and
adc
push
sbb
xor
iret
push
pop
mov
mov
xor
les
adc
add
push
lcall
aaa
sbb
out
fcmovu
hlt
mov
bound
enter
test
dec
cs
or
adc
xchg
orb
inc
rcrl
xchg
or
or
xlat
xor
push
pop
in
add
andl
mov
and
bnd
scas
movsl
push
es
and
inc
push
xor
or
rclb
outsb
or
xor
xchg
push
xchg
sbb
in
out
add
jno
dec
push
jbe
fimuls
popl
xchg
pop
mov
inc
cs
inc
mov
lods
lcall
dec
and
and
push
xchg
scas
xor
mov
inc
adc
sub
aam
add
dec
data16
outsl
je
inc
xor
inc
lahf
stos
js
insb
sbb
lock
movsb
xchg
in
pop
and
mov
cli
in
sbbb
push
out
int
and
sbb
xor
data16
mov
push
inc
jl
add
pop
pop
jbe
push
adc
and
gs
rcll
idivl
lock
or
mov
mov
mov
inc
mov
mov
daa
sbb
jae
cmp
popa
insb
imul
loop
xchg
and
push
outsb
jb
in
push
sbb
sub
inc
adc
add
adc
and
or
das
xchg
mov
mov
and
lock
pop
ss
mov
adc
pop
insl
dec
and
lahf
mov
cmp
sti
and
push
jge
push
imul
js
xlat
inc
sbb
push
jg
xchg
jmp
or
test
shrb
cmp
pop
jnp
xor
mov
xor
test
sbb
adc
pusha
clc
inc
mov
rolb
outsl
lcall
aaa
jle
push
xor
sub
mov
enter
sub
push
arpl
aas
fs
pop
cmp
int3
xchg
sti
jbe
iret
mov
inc
sbb
xor
jns
nop
popf
test
test
cmp
data16
lds
ds
cmp
addr16
and
test
and
aam
clc
outsl
mov
add
fldenv
mov
aad
bound
xchg
ss
sbb
ret
loopne
sbb
xor
or
aaa
push
das
stos
inc
xor
addr16
pushf
rorb
stos
fdivrs
in
dec
icebp
adc
jecxz
sub
in
jge
mov
adc
sub
icebp
mov
mov
lret
scas
loope
inc
xchg
gs
cmp
dec
sub
cmp
push
out
aaa
daa
xchg
scas
lock
jl
popf
call
fwait
aam
adc
jl
xlat
dec
mov
sbb
xor
mov
xor
repz
lcall
mov
fsubs
xchg
cmp
push
push
outsb
call
sbb
fldcw
bound
dec
push
push
cmp
in
test
xchg
pop
adc
repnz
lret
pusha
pop
out
pop
inc
lret
aad
jnp
stos
adc
push
add
inc
sbb
adc
sbb
nop
pop
xchg
ret
subl
xchg
jmp
clc
stos
push
and
push
cli
fwait
ja
shlb
jne
lcall
out
and
adc
xor
or
sahf
lods
xor
lods
data16
das
xor
pop
pop
fcoml
inc
push
inc
stos
aad
lret
dec
add
inc
sub
or
or
sbb
loopne
cmpb
cmp
cmpsl
out
jp
gs
adc
jle
jb
fiadds
imul
or
dec
fsubrl
and
daa
push
gs
pop
in
sahf
lahf
push
pop
daa
or
push
ss
and
ljmp
scas
notb
test
js
ljmp
out
xlat
sbb
sbb
mov
daa
push
and
sbb
xchg
push
xor
lds
in
int3
fnsave
or
sub
jge
lret
pop
pop
stos
inc
repz
repz
adc
sbb
inc
mov
mov
xchg
cmpsl
pop
dec
xor
xchg
testb
js
adc
mov
rcrl
test
push
test
push
add
adc
repz
cmpsb
sbb
test
loope
loop
in
sbb
rcrb
loop
sub
scas
rcl
xchg
setae
or
shll
inc
sbb
mov
repnz
sbb
insl
cmpsb
mov
in
dec
jno
cmp
pop
cmp
sarb
sbb
rcrb
push
mov
jbe
in
ss
shrl
or
inc
xor
mov
xor
xchg
push
push
jbe
inc
aaa
add
iret
lahf
scas
xchg
inc
int3
clc
xchg
idiv
mov
repnz
or
fstpt
dec
scas
iret
out
cld
pop
inc
arpl
arpl
aam
xor
push
pop
push
aaa
fcmovb
orl
inc
loopne
ret
imul
push
mov
mov
push
pusha
jp
in
daa
sub
push
pop
out
cltd
imul
popa
xor
fsubrl
insb
inc
pop
adc
or
adc
out
jecxz
jnp
xchg
ffreep
xchg
rcr
outsl
mov
inc
imul
frstor
adc
call
and
inc
xor
fiaddl
daa
icebp
xor
inc
pop
dec
add
mov
dec
xor
repz
push
jo
test
or
jo
jbe
pop
sub
out
out
xor
gs
pop
loopne
xchg
inc
sarb
aas
mov
pop
cmp
or
sub
mov
xor
ficompl
sub
mov
jne
imul
inc
arpl
add
insl
xor
imul
push
test
xchg
cvtps2pd
adc
notl
push
loopne
pop
loope,pt
scas
test
test
xor
enter
insb
insb
ret
js
ljmp
pop
and
jge
cmpsb
inc
sbb
call
jae
std
sbb
adc
inc
ret
cmpsl
cltd
cmp
push
cmc
push
ljmp
dec
jp
lds
enter
fisubl
mov
loopne
fbstp
outsl
outsb
dec
lods
and
jmp
fcompl
subb
mov
adc
stos
cmp
in
int
int
std
mov
out
pop
lcall
push
mov
lods
dec
js
fwait
stos
lcall
pop
xor
cli
fucomp
lret
cmc
mov
mov
daa
pop
dec
dec
xlat
mov
add
rol
inc
dec
adc
mov
in
dec
add
inc
cmpsb
jns
sub
popf
lcall
mov
dec
dec
push
aas
enter
mov
pop
dec
addr16
pop
lahf
popf
dec
dec
stos
cmp
aam
cltd
sbb
mov
or
xchg
dec
sub
ljmp
inc
inc
popf
sbb
dec
sbb
push
xchg
scas
adc
mov
sahf
pop
xchg
bound
pusha
cmp
sub
fimuls
sar
stc
pop
adc
rorb
fcoms
inc
inc
xchg
pop
mov
sub
xlat
and
popf
push
cmpsb
bound
mov
mov
ret
jp
push
or
popf
mov
pusha
cmpsl
dec
jnp
lods
mov
inc
insb
push
in
sti
in
sbb
or
pop
les
movsb
repz
jb
or
popa
cli
or
ljmp
sub
mov
mov
xor
add
mov
fwait
dec
repz
jg
cmp
xchg
or
js
pop
push
adc
andb
sub
adc
mov
mov
pop
shll
adc
and
aaa
or
fs
dec
and
test
mov
dec
iret
sbb
aas
pushf
mov
shll
cmp
in
scas
sub
add
pop
lock
adc
or
jno
inc
xchg
out
mov
sahf
dec
adc
shrl
fnstsw
cmp
mov
cmp
push
in
stos
sbb
pop
pop
dec
xchg
icebp
stos
or
frstor
aaa
jbe
xchg
cmp
xlat
cmpb
sub
xchg
inc
dec
pushf
out
call
cmpsb
fsubr
cmp
jae
fwait
xchg
xchg
or
in
hlt
in
xor
movsl
jmp
jecxz
fstpl
out
cmpsb
test
mov
jae
push
inc
pushf
mov
in
lock
dec
push
addb
icebp
mov
cmpsl
scas
insb
sbb
push
mov
jo
cmpsl
imul
mov
dec
pop
mov
xchg
cmpb
xchg
aas
jns
int
or
adc
negl
int3
push
lret
fisttps
sbb
ret
movb
mov
movsl
xchg
xchg
mov
shlb
fs
xchg
or
dec
lret
ljmp
cs
and
addb
fnstenv
rclb
lret
adc
lods
push
cli
pop
adc
pop
mov
add
aad
jo
iret
loop
inc
jmp
clc
aam
fstpt
pop
addr16
adc
dec
mov
jb
xor
and
or
dec
in
mov
jl
cmp
out
push
aam
fwait
test
repz
fdivrl
and
cmp
pop
mov
mov
xchg
icebp
cwtl
popf
fnstsw
aas
mov
or
mov
jge
mov
xchg
dec
incl
push
inc
aaa
add
or
addr16
enter
test
push
xor
inc
xchg
mov
dec
lcall
ja
cmovle
into
arpl
mov
stos
xchg
dec
bound
call
sahf
adc
clc
or
pop
push
shrl
pop
xor
aas
pop
sub
push
es
aam
addb
fnstsw
dec
cmpsb
dec
popa
push
pop
andl
lahf
mov
push
bound
lahf
insl
inc
inc
test
cmp
mov
sub
pop
nop
test
pop
pop
inc
popf
mov
lods
pusha
arpl
loopne
push
inc
xor
lods
aaa
or
jecxz
outsl
or
and
test
dec
add
sbb
xchg
arpl
test
jae
popf
xchg
pop
push
fdivp
pop
mov
sbb
mov
sbb
ss
shrb
jb
stos
cltd
leave
imul
ret
ljmp
decb
dec
cs
sub
push
pop
xchg
sub
dec
lcall
aaa
mov
cmp
lods
mov
xor
adc
pop
push
adcw
mov
movsl
cmc
data16
mov
pop
or
lock
je
cmp
test
bound
je
daa
sbb
decb
data16
ret
cmp
clc
test
xchg
pushf
jge
out
loope
mov
pop
leave
sti
mov
mov
cmp
sbb
fildll
mov
into
xor
data16
sbb
inc
in
inc
xchg
in
jp
or
mov
jno
mov
lea
scas
push
ss
repz
inc
cwtl
rcll
dec
loope
outsb
cmp
mov
enter
inc
or
or
pop
and
jne
sub
jnp
cmc
push
mov
cmp
inc
daa
test
es
jne
xchg
push
add
adc
enter
xchg
or
add
xchg
sbb
fs
std
das
push
push
dec
inc
dec
adc
das
dec
add
arpl
bound
sub
cvtps2pd
addl
push
sub
add
or
cmp
jg
pop
jno
ljmp
mov
test
fbstp
dec
add
xlat
jmp
fidivrl
or
sbb
das
jb
inc
loopne
stos
sbb
xchg
mulb
dec
gs
mov
add
decl
popf
loop
push
insl
ret
pop
push
push
pop
xchg
mov
cld
int
mov
inc
ffreep
inc
icebp
mov
mov
push
loope
or
dec
bound
fidivrs
adc
mov
insb
fcoms
js
or
and
insl
xchg
inc
adc
adcb
outsb
mov
stc
rcrl
outsb
inc
lcall
mov
cmp
fadd
scas
jbe
inc
leave
outsl
pop
adc
xlat
mov
adc
shrb
xor
pop
sarl
hlt
je
std
pop
push
lock
mov
or
inc
pop
cwtl
xchg
les
mov
test
rcll
ljmp
inc
inc
jmp
jne
cmp
je
pop
sbb
in
adc
ja
mov
pusha
push
sti
lds
push
pop
adc
inc
out
push
aad
inc
cmc
je
push
lret
loop
lcall
dec
mov
das
jl
je
lret
cli
imul
pusha
lahf
je
test
xlat
sub
adc
aam
dec
push
inc
adc
mov
outsl
imul
inc
inc
lods
mov
shl
jg
add
sbb
sbb
mov
movsb
das
dec
jb
frstor
dec
push
dec
and
repnz
jbe,pt
addps
stos
jns
shlb
jle
cmpsb
aas
or
add
mov
mov
inc
sbb
inc
out
push
in
out
push
jmp
shlb
pop
ss
pop
movsb
stos
cltd
cli
bnd
jne
push
and
pop
ljmp
mov
push
cmpsl
in
cmpsl
dec
cmpsl
add
mov
push
inc
inc
nop
push
dec
push
push
cmp
inc
fnstsw
inc
jbe
lods
pop
or
and
jle
and
dec
mov
sbb
jmp
pop
jb
inc
mov
mov
aaa
fstpl
or
cmp
pop
lods
sbb
inc
inc
and
inc
aam
dec
dec
mov
jmp
out
push
inc
mov
or
add
add
xchg
or
insl
gs
inc
outsl
push
fs
aaa
mov
in
dec
mov
ljmp
push
jp
neg
inc
jns
shll
std
fildll
pop
mov
pop
jne
mov
cmp
jbe
imul
lds
subl
pop
and
xchg
mov
inc
add
nop
repnz
pushf
loop
clc
dec
lret
cwtl
loopne
ret
lcall
inc
jb
rcrb
mov
jb
and
dec
imul
jnp
in
dec
inc
lods
dec
inc
sbb
inc
push
clc
adc
jecxz
or
js
out
cmc
add
add
push
insl
int
adcb
inc
data16
les
sbb
push
pop
pop
xor
push
les
jbe
cmc
fisubs
sbb
jb
push
and
test
mulb
cmc
add
and
add
loope
mov
jo
add
or
test
out
jge
mov
mov
in
lock
push
push
adc
inc
sub
mov
lea
pop
lcall
imul
je
cmpsl
push
xchg
add
xchg
push
mov
adc
mov
adc
adc
mov
clc
push
jmp
add
bound
cmpsl
nop
idivl
sub
push
xchg
inc
pop
fs
cli
inc
in
push
or
and
adc
push
scas
hlt
pop
and
loopne
jns
fdivrp
in
gs
inc
cmc
inc
pop
fiaddl
outsl
das
and
push
fwait
mov
inc
imul
imul
and
inc
fwait
pop
mov
dec
xchg
ficoml
xlat
inc
xor
movsl
fsubs
or
sahf
adc
and
stos
push
imul
lcall
pop
data16
leave
push
cmp
xor
cli
out
cmp
xor
sahf
leave
jae
scas
or
xchg
xchg
popf
lods
add
negl
push
add
inc
or
rdmsr
fnstsw
xor
lret
pop
fdivrp
rcll
insl
mov
jnp
gs
push
pop
cmp
or
fsubrl
call
test
dec
or
popa
ret
jmp
dec
or
andl
inc
decl
xchg
push
mov
cmpb
aam
mov
dec
loopne
inc
push
cmp
outsb
dec
mov
jb
enter
lret
or
test
jle
adc
jno
cld
icebp
gs
mov
addl
push
andb
add
das
stc
ljmp
call
dec
outsl
scas
mov
jge
jae
adc
aaa
inc
inc
shl
jno
jb
in
enter
in
imul
or
lods
adcl
sub
outsl
iret
xchg
push
push
dec
jae
push
push
push
jne
pusha
sub
and
push
push
pop
popf
push
xchg
orb
sub
xchg
adc
sub
pop
and
out
push
cmp
mov
dec
xor
pop
jne
xor
into
push
movb
fstpl
pop
lcall
rolb
sbb
inc
in
xchg
insl
pop
cmpsl
pop
pusha
lcall
adc
cmp
dec
pop
cmpsl
sbbl
in
cltd
mov
add
aad
js
repz
push
push
sub
dec
dec
loopne
ret
aam
mov
pop
sub
es
mov
ljmp
pop
xchg
inc
pushf
pop
push
xchg
orl
insb
sub
movsb
adc
mov
pusha
sbb
icebp
out
mov
jno
add
idivb
mov
xchg
push
cltd
test
and
and
sbb
dec
scas
sbb
mov
stos
adc
xlat
push
outsl
cmpsb
fstps
stos
cmp
filds
loope
push
out
imul
cmp
pusha
sbb
add
or
insb
test
insb
xchg
xchg
xchg
lea
out
jbe
and
jle
inc
dec
dec
dec
outsb
out
or
bound
pop
jno
or
sub
adc
jp
jno
dec
addr16
das
mov
cwtl
lahf
add
jle
pop
dec
sub
das
jl
jecxz
push
cmp
sbb
push
and
sbb
clc
inc
in
push
push
mov
mov
or
push
ret
pop
xor
sub
adc
pop
push
cmp
adc
aad
jecxz
sti
dec
inc
mov
ja
pop
push
repnz
clc
dec
pop
push
int
and
jecxz
fs
sbb
ds
adc
js
sbb
xchg
test
sbb
xchg
aaa
sbb
imul
popf
cmp
inc
fildll
or
adc
jno
inc
fsubrl
test
fwait
mov
stos
push
jmp
pop
push
bound
and
je
xchg
out
or
hlt
sub
icebp
push
push
enter
xor
or
ret
test
pop
pop
jbe
lds
dec
xchg
movsl
cmp
ja
adc
ljmp
ret
outsb
sub
jns
mov
aas
push
dec
aas
add
cmp
mov
xchg
bound
dec
pusha
mull
testl
or
faddp
push
inc
dec
mov
adc
sbb
in
jb
or
lods
aam
addr16
ds
cli
movsb
pop
subb
ja
mov
fists
pop
fists
adc
outsb
adc
pop
push
idivl
repz
xorl
cmc
inc
int
stos
mov
dec
adcl
dec
and
jle
add
inc
jmp
jo
and
mov
jmp
bound
jae
xchg
push
sbb
insl
sbb
stos
cmp
in
daa
jno
out
push
and
sub
add
and
mov
adcl
insb
or
xor
mov
mov
xor
rclb
pop
cmp
push
mov
in
test
ss
insb
add
jl
push
jbe
jl
movb
ret
std
nop
enter
enter
bound
inc
dec
incb
mov
jg
rolb
out
jge
jo
cmp
pop
adc
dec
lret
sbb
iret
cld
push
bound
add
add
sbb
pushf
repnz
addb
add
add
rcrb
push
in
and
inc
mov
stos
push
adc
mov
jo
test
stos
adc
loopne
inc
js
gs
cmp
sbb
sbb
call
push
mov
push
push
pop
rorb
jl
call
push
lea
cmpsb
mov
jb
fst
push
pop
and
mov
dec
rorb
out
fdivrl
adc
ja
aad
and
push
popf
fsubl
cmpsb
jne
fldl
dec
test
sbb
mov
dec
jg
lea
inc
inc
out
adc
cmpsl
test
mov
xlat
and
mov
and
dec
xor
cs
insl
mov
clc
jp
loopne
xchg
movsb
or
bound
sub
bound
adc
push
into
dec
push
inc
xchg
daa
mov
push
insb
ret
arpl
shr
sub
add
mov
jle
mov
mov
push
pop
test
adc
xchg
and
mov
shrl
cmp
outsb
lret
mov
inc
cmp
aam
outsl
pusha
call
add
mov
cld
imul
push
cli
aaa
xor
outsb
mov
int
in
pop
push
mov
rclb
pop
pop
cmpl
push
sub
lret
aam
fisttpll
pop
loope
insl
pop
clc
aaa
cli
jmp
push
mov
push
pop
scas
stc
adc
sbb
sbb
les
mov
out
icebp
jge
jbe
fimuls
mov
stos
lcall
out
pop
sti
push
push
or
arpl
out
jecxz
in
or
mov
mov
in
and
outsl
fwait
bound
push
mov
xchg
inc
jo
push
loope
pop
mov
jge
mov
adcb
lods
pushf
mov
and
cmp
or
jmp
push
ss
lret
cwtl
mov
jp
push
dec
rol
xorl
dec
shlb
outsl
push
jnp
pop
xchg
dec
stos
mov
dec
or
loope
js
or
mov
scas
xchg
pop
push
cli
push
sub
or
scas
and
jg
adc
jg
inc
test
jb
into
or
add
sub
jbe
call
push
push
inc
sbbb
jns
es
jno
mov
cmp
mov
aaa
dec
dec
mov
inc
clc
int
mov
sub
jns
leave
jmp
sbb
jmp
mov
sub
jle
mov
sub
adc
xchg
push
xorb
pop
mov
scas
and
jns
pop
push
lock
dec
add
loop
cmp
cpuid
sbb
leave
push
adc
pop
fcomi
data16
xor
push
jle
sahf
stos
bound
jp
jno
pushf
movsb
pop
cs
in
pusha
shrb
push
dec
pop
inc
add
jnp
push
push
aad
or
je
mov
push
loop
inc
fldt
inc
jle
fisttps
pop
xchg
inc
popa
jae
dec
cmp
inc
pop
es
mov
push
cmp
and
iret
popa
sub
mov
adc
leave
dec
push
dec
notb
adc
dec
and
inc
ja
mov
sub
cmp
mov
xchg
xor
js
add
push
out
imul
dec
and
scas
sbb
sub
imul
jo
lret
pop
or
adc
fst
jbe
scas
and
fiaddl
xacquire
lods
adc
fs
leave
add
sbb
xchg
das
outsb
mov
push
adc
mov
jle
dec
xor
mov
test
je
repz
jecxz
mov
inc
xlat
mov
dec
outsl
fmuls
inc
bound
lods
xchg
fcoms
clc
cmp
adc
xchg
mov
aaa
xchg
xor
lahf
lods
scas
mov
and
rcr
pusha
xchg
or
into
adc
data16
cli
aam
dec
mov
jle
mov
inc
loopne
pop
test
jmp
mov
in
stos
shld
adc
int3
adc
out
sahf
jmp
cmp
push
add
decb
cltd
lods
cmp
sbb
push
int
push
dec
cwtl
jae
nop
mov
xor
loope
ljmp
pushf
testb
scas
push
test
mov
add
lods
ret
fsubs
aam
add
xor
lret
out
mov
ja
cmp
jb
xbegin
mov
push
lods
pop
add
aaa
es
push
push
sahf
ds
pop
loope
adc
jmp
dec
dec
dec
xchg
daa
cmc
fdivrl
cmpsb
bnd
xchg
push
sub
lcall
mov
arpl
pusha
je
lcall
jno
xor
lahf
mov
lret
sbb
push
and
sub
fiaddl
mov
push
inc
dec
or
clc
lods
or
push
sbb
cmp
mov
jnp
pop
fwait
shl
jmp
pop
adc
insb
mov
in
xor
into
fisubrs
sbb
repnz
sbb
fidivs
add
sub
jnp
xchg
or
push
sbb
pop
inc
adcl
stos
cmpsb
xor
push
imul
mov
pop
scas
xor
inc
sub
faddl
push
xchg
and
inc
loope
out
mov
add
add
pop
cmp
push
adc
sub
pop
mov
movsl
orl
adc
popf
xchg
ljmp
into
jle
int
xor
fiadds
mov
call
cltd
push
hlt
add
cmpsb
imul
add
pop
adc
fsubrl
xchg
pop
ret
aaa
xchg
ljmp
mov
push
jp
jge
jle
gs
sbb
js
outsl
and
dec
cmpsl
dec
stos
xor
adc
mov
mov
sahf
sbb
int
jno
in
rcll
and
pop
xor
gs
int3
je
jb
pusha
insb
pusha
sub
jno
sbb
cmp
mov
mov
jb
mov
add
pushf
mov
mov
pop
sub
ljmp
out
imul
pop
loop
adc
fdivrs
fs
stc
loopne
mov
xorb
daa
jnp
cli
push
ret
jmp
mov
cmp
xor
std
fwait
jg
cmp
or
arpl
mov
mov
inc
fisubl
inc
mov
jp
ror
imul
imul
or
and
adc
jle
out
or
mov
jo
int3
incl
daa
pop
xchg
pop
jno
ret
push
xor
push
cmp
sub
outsl
jecxz
adc
dec
inc
jo
jne
out
adc
push
adc
pop
fiaddl
loope
add
stc
loopne
xor
mov
push
mov
mov
sub
shrl
nop
mov
jns
adc
data16
lret
adc
xchg
inc
fstps
mov
nop
mov
addl
pop
xchg
loope
inc
out
int3
cmpsl
mov
push
pop
movsl
test
mov
pop
push
push
into
mov
js
sbb
pop
add
cmp
inc
insb
and
pop
xchg
testl
jbe
scas
or
or
sbb
mov
pop
pop
in
push
pop
sbb
test
add
test
insl
push
or
push
lods
pop
mov
stos
lods
xchg
cwtl
jmp
pop
push
jo
adc
sub
dec
xor
jb
out
je
adc
xchg
xchg
scas
stos
ret
or
ds
leave
pop
push
gs
jo
and
testl
je
mov
enter
or
sub
gs
imul
xchg
insl
push
xor
test
cmc
mov
xor
int3
push
lcall
push
test
call
inc
ffreep
pop
or
dec
sub
or
push
repz
mov
mov
and
mov
repz
sbb
add
sbb
push
add
scas
mov
inc
xchg
cmpsl
int3
data16
dec
pushf
inc
cmp
push
sti
inc
push
push
cmp
pushf
add
pop
or
and
imul
out
xchg
push
loop
imul
dec
hlt
shlb
cs
ret
out
test
xor
ror
jle
mov
push
jl
sbb
clc
jle
mov
lret
test
and
loope
sti
scas
insl
das
clc
sbb
inc
inc
aam
jp
sbb
mov
std
jbe
out
popf
lret
push
popa
sarl
stos
ret
inc
or
mov
push
repz
movl
pop
out
mov
push
push
imul
xlat
push
lods
add
xor
addr16
or
or
leave
fisttpl
mov
dec
inc
mov
jecxz
rcrb
rolb
sti
pop
pop
out
cmp
push
mov
pop
cmp
jp
jg
mov
in
imul
inc
decb
push
xchg
dec
sub
adc
cmova
cmp
xor
stos
movl
xor
sbb
lcall
mov
lock
pop
mov
js
and
js
or
xor
pop
push
fbstp
out
mov
sbb
dec
push
cmp
in
push
call
xchg
sub
rolb
jle
mov
std
and
shlb
aaa
xor
out
push
push
jp
xor
cmc
inc
dec
jl
ss
in
js
xchg
mov
int3
pushf
and
and
or
popf
push
sub
scas
orl
ret
inc
jb
sub
pushf
dec
pop
and
int
pop
clc
adc
mov
mov
jnp
imul
inc
out
pop
cmp
fisttps
pop
sbb
xor
testb
mov
jp
lock
jns
cmc
ss
cmc
mov
lock
dec
sub
add
pop
jecxz
imul
repnz
test
repz
jecxz
jbe
push
fwait
adc
pop
mov
adc
mov
mov
pop
cmp
or
andb
int
js
pushf
lcall
xchg
lahf
jp
adc
jl
xchg
or
jecxz
push
pop
mov
pop
pop
adc
cs
movsl
mov
cmp
cwtl
lods
arpl
push
shll
shl
unpcklps
enter
push
adc
in
and
cmpsl
sbb
xchg
ljmp
xchg
scas
outsl
push
xorl
fdivs
insb
sbb
pop
xchg
dec
mov
push
sbb
push
lret
mov
push
clc
add
inc
jl
xor
sbb
js
nop
das
ret
mov
adc
xchg
add
repnz
add
mov
pop
inc
cmc
inc
inc
inc
dec
inc
jmp
pushf
cli
pop
fisttps
neg
xor
mov
pop
loope
sbb
jb
or
aas
pop
popf
mov
sbb
xor
xor
aad
dec
rolb
aad
hlt
and
call
sti
ror
shr
mov
pop
inc
xchg
cwtl
xlat
ss
push
cld
sub
sti
outsl
insb
sahf
lods
imul
cmpsl
pop
cmp
ss
xor
pop
dec
push
int
mov
xchg
inc
addl
stos
or
hlt
into
pop
add
add
pushf
xchg
jnp
popa
mov
clc
push
adc
mov
fildll
cmp
jle
cli
jb
adc
mov
aad
adc
add
sbbl
out
dec
movsb
aaa
dec
dec
sahf
adc
sbb
icebp
dec
insl
mov
xor
xorb
add
adc
or
testl
fidivs
pop
fisttps
or
not
push
leave
jo
in
add
push
push
fwait
out
icebp
orb
or
into
cmp
push
roll
stos
sub
sub
dec
rorb
push
push
arpl
push
or
mov
inc
imul
push
cmp
dec
push
or
daa
shl
addr16
cmp
data16
decb
mov
in
cld
or
jne
inc
push
test
jg,pn
jo
insb
pop
mov
loopne
mov
rcrl
popf
jmp
fsts
jae
push
loop
sbb
mov
idivl
xchg
fisttpll
adc
cmpsb
mov
mov
es
mov
fdivs
mov
stos
rcl
adcl
sbb
sbb
and
xchg
or
or
mov
addb
adc
fisttpl
push
and
push
xor
addr16
pop
loopne
push
sahf
push
ret
cmp
sub
add
aas
jge
or
movsb
popf
mov
jge
imul
data16
lcall
inc
and
cwtl
dec
pop
mov
push
outsl
aad
and
pushf
jmp
sbb
clc
insl
xor
dec
pusha
dec
push
push
mov
push
loope
jg
data16
and
pop
scas
in
jp
dec
sub
xchg
dec
pop
clc
in
gs
call
inc
sub
sbb
aam
cmp
cltd
sub
xchg
lea
lods
inc
xchg
or
dec
mov
push
in
adc
xor
push
loope
add
repnz
xchg
fdiv
xor
dec
add
lods
sbb
lret
imul
repnz
xchg
imul
and
aaa
scas
and
xor
popa
dec
lods
enter
loopnew
jp
cwtl
xor
scas
push
pop
movsl
fisubrl
ss
js
cmp
or
or
jp
rorb
pop
adc
dec
loope
sahf
lcall
pop
jns
mov
aad
xor
addl
idivl
add
cmp
es
sub
cmp
dec
scas
sbb
pop
movsl
mov
cs
lods
aad
ret
or
pop
mov
outsb
dec
lahf
mov
adc
xor
inc
imul
jns
push
mov
pop
inc
ss
jl
mov
xchg
fmull
daa
push
scas
xor
adc
cmp
xchg
clc
inc
popf
inc
imul
lods
inc
adc
leave
mov
cmpsb
je
inc
xorl
pop
out
or
loop
and
add
cmpsl
jmp
or
int3
jge
xchg
pop
push
xchg
adc
cmc
jge
rclb
pop
aaa
sahf
cmp
test
add
xor
hlt
dec
pusha
sbb
xorb
push
inc
cmc
sbb
ss
add
imul
add
dec
and
add
dec
cmp
imul
pop
fwait
imul
push
cli
lods
xchg
insb
mov
fistpll
int3
inc
ret
aaa
add
add
push
in
fmull
pushl
add
mov
stc
jno
mov
sbb
dec
and
stos
sub
xchg
clc
dec
mov
fcom
add
repnz
jl
xlat
xor
inc
mov
call
shll
jg
push
fs
enter
sub
and
ds
je
xor
shlb
add
dec
cmp
xor
xchg
addl
sub
lahf
lcall
mov
cmp
xchg
pop
rclb
jns
fidivrs
loopne
ss
imul
fs
sbb
push
cmp
xchg
imul
loop
jae
cmpsb
loop
inc
cli
icebp
xchg
stos
jg
outsl
cmpsb
mov
sahf
mov
jae
cld
mov
push
add
push
pop
pushf
jo
pusha
adc
lcall
add
xchg
bound
pop
pop
or
jp
pusha
mov
das
or
dec
std
add
mov
insl
rcrl
or
mov
adc
pop
ds
jecxz
aas
adc
dec
ds
ss
mov
dec
cmp
sbb
jno
push
cli
outsl
and
loopne
and
je
push
call
push
fidivl
adc
inc
mov
mov
insb
cs
jne
sbb
shlb
or
cli
xchg
fists
inc
fimull
mov
pop
outsb
mov
jbe
in
out
jns
inc
adc
cmpsb
mov
int
int3
fwait
push
xchg
xor
aad
loopne
je
jl
fisubs
mov
sbb
mov
addb
testb
dec
cmc
push
fxch
adc
lea
fmull
shrb
mov
and
outsl
sti
push
fmuls
aaa
push
or
adc
pop
adc
hlt
jnp
sti
jb
mov
dec
push
xor
das
inc
add
and
cmpsb
inc
iret
mov
sbb
popf
and
dec
mov
pop
add
es
jo
shlb
jle,pt
aad
leave
jecxz
faddp
dec
rclb
std
push
mov
in
push
pop
call
bound
pop
adc
iret
pusha
pop
jg
fidivrs
lea
repnz
enter
sbb
add
dec
push
adc
int3
mov
imul
aas
mov
pop
sbb
and
inc
imul
inc
xchg
fdivrs
lahf
add
mov
xor
adc
xor
popf
lahf
into
xorb
sbb
and
jge
fistpll
cmp
pop
mov
xor
rclb
popa
lods
jl
or
xor
or
dec
xlat
push
data16
and
and
clc
dec
arpl
xor
mov
or
rcll
dec
insb
inc
ds
xor
pusha
jb
jl
mov
ret
push
pop
push
sbb
mov
or
jbe
cmp
lock
cmc
jge
repnz
or
lock
js
loopne
test
mov
add
push
cmp
jae
js
mov
addr16
xchg
rclb
jae
xchg
cmp
dec
sarb
cmpsb
les
adc
fs
xor
mov
repnz
das
cmp
inc
or
sahf
inc
dec
out
dec
ds
bound
scas
and
add
hlt
pop
cmp
dec
cwtl
mov
jle
movsl
inc
stos
adc
fidivrs
int3
enter
jge
mov
fadd
in
sarl
dec
loop
xchg
push
sub
mov
inc
jbe
aad
cmp
xchg
xchg
xor
or
rolb
and
dec
push
mov
les
int3
cwtl
xor
jns
and
loopne
jl
sub
shrb
mov
cmp
push
pop
and
adc
fisttps
shrl
dec
leave
repz
pop
cmp
mov
cmpb
jo
test
adc
inc
dec
out
or
adcl
or
aad
xlat
shr
mov
das
jg
out
add
xor
aas
aam
mov
test
enter
push
iret
adc
cmp
and
sub
mov
cmp
cmp
loopne
pop
fcmovbe
cmp
lret
xchg
aaa
adc
add
sub
xor
imul
dec
addr16
pop
adc
ret
dec
push
jg
andl
js
imul
jns
nop
cmp
loope
cmp
aaa
mov
nop
xor
aas
clc
fbld
mov
xor
leave
push
sub
xchg
shrb
loop
dec
rcrl
sbb
fwait
hlt
bound
pop
aas
cmpb
push
and
push
subl
shlb
imul
hlt
sbb
cltd
jp
push
ror
das
stos
add
into
fs
sub
mov
xor
fbld
shll
dec
inc
ja
std
ficompl
les
push
push
scas
dec
lods
leave
insl
test
push
push
lea
outsl
int
lock
bound
jbe
orps
push
xchg
je
sti
cmc
inc
mov
mov
imul
or
sub
jae
adc
jg
push
ja
fs
jg
jns
adc
sbb
jle
data16
mov
mov
add
or
add
dec
sub
dec
lcall
stc
cmp
jbe
xor
pop
push
outsl
test
mov
mov
adc
adc
inc
sarl
push
fiaddl
call
fsubrl
or
dec
inc
cwtl
add
and
or
adc
inc
push
insb
imul
dec
sahf
xor
xchg
mov
push
xchg
pop
sbb
fnop
inc
xchg
mov
xchg
sbb
mov
sahf
pop
roll
aaa
jno
pop
cmp
xor
xor
mov
mov
or
mov
gs
push
cs
cs
xchg
inc
cli
aas
push
inc
sub
inc
xorl
xchg
test
mov
loopne
xchg
mov
sbb
imul
cmc
push
les
sbb
inc
out
xor
add
and
xchg
bound
pop
mov
pop
icebp
ret
insb
mov
lcall
imul
xchg
nop
inc
ret
mov
rorb
js
mov
fs
dec
pop
and
push
push
dec
imul
mov
xorl
dec
add
fisttpl
adc
lock
mov
sub
dec
aas
add
mov
jns
sbb
xchg
clc
push
mov
je
cs
lahf
iret
xorb
xchg
inc
push
les
aam
jp
or
push
xchg
adc
jl,pt
insl
dec
test
outsb
cmpsb
push
daa
sub
adc
loope
fcompl
sub
and
sti
jno
xor
cmp
cmc
jno
loopne
lods
mov
call
sub
sbb
jmp
call
dec
jle
mov
sub
cmp
inc
addr16
jmp
pop
aas
dec
and
adc
lcall
outsb
and
loop
imul
push
jg
dec
sub
loop
stos
movsb
lods
inc
adc
pop
mov
sbb
xchg
sbb
jg
repnz
mov
jns
lahf
adc
dec
sbb
push
shll
shr
push
sub
mov
inc
dec
jg
rclb
pop
out
xchg
stos
int3
lret
push
ds
dec
int
jecxz
movsl
lret
xor
ja
jo
cmp
add
jnp
add
mov
add
getsec
push
sub
xchg
inc
jae
push
cmp
cmp
fwait
push
push
lock
xchg
push
fsubs
outsb
jnp
dec
pop
mov
fldenv
sbb
sahf
jecxz
adc
jns
push
outsb
add
stos
ds
add
sbb
pop
inc
sbb
xchg
pop
lcall
bound
es
stos
pop
clc
adc
repnz
fs
and
in
mov
sbb
stos
add
or
inc
rcrl
loop
push
mov
dec
outsb
test
jg
push
sub
cmp
cltd
scas
dec
mov
cld
add
jns
mov
fwait
mov
pop
xchg
jg
scas
pop
mov
jg
insb
outsl
pop
push
aas
adc
inc
jno
jge
rorb
shlb
sbb
std
or
test
push
xchg
shrb
pop
loope
out
xchg
clc
adc
add
pop
xchg
cli
lret
or
and
cld
sahf
or
xchg
add
cmc
js
nop
divl
xchg
stos
idivl
cmpl
movsb
fimuls
or
outsb
lret
xchg
mov
add
push
cmpsl
adc
std
mov
jmp
leave
cmpsb
cmp
insb
ja
adc
inc
inc
sbb
jne
aaa
push
call
mov
ss
pop
and
stos
shlb
push
testb
add
add
scas
cli
std
push
jge
mov
test
imul
je
enter
push
pop
adc
dec
lret
orl
outsb
addl
add
fstl
and
dec
hlt
test
ret
aaa
sarb
push
push
inc
or
dec
mov
sbbb
lret
inc
cld
loopne
dec
push
inc
inc
movsb
push
ret
pop
inc
add
xchg
imul
and
xchg
push
mov
pushf
adc
aaa
sbb
add
stc
outsb
popa
rclb
mov
xchg
xchg
pop
adc
fsubrl
xor
out
push
jno
ss
jb
mov
or
adc
sub
sbb
fdivrs
push
add
sahf
inc
jle
xchg
fcoml
mov
adc
jp
adc
mov
inc
cmp
xchg
pop
je
jae
inc
inc
lret
aaa
pushl
nop
loop
pop
mov
xlat
xchg
scas
mov
mov
cmp
dec
xor
or
cmp
call
pusha
xchg
mov
jmp
or
faddl
jl
sbb
ds
clc
mov
push
mov
jmp
pop
pop
into
add
add
lds
je
fmuls
cmp
jb
out
sub
aas
nop
mov
push
sbb
add
aad
jbe
orl
outsb
inc
movsb
xor
insl
pop
in
xor
jae
and
add
mov
xorl
jle
mov
fisttpll
test
dec
fnstsw
es
rclb
push
push
and
lods
test
push
pushf
imul
lahf
aas
loope
pop
out
test
cmp
repz
hlt
lock
xchg
xlat
setge
fdivrl
mov
pushf
jb
pop
push
add
xchg
lods
cmp
inc
dec
nop
add
jecxz
imul
sahf
adc
test
pop
lret
push
cmp
enter
andl
pop
pop
xor
jo
mov
sahf
xor
mov
push
fldenv
pop
bound
and
insb
bound
sbb
fsubl
add
aad
test
cli
pop
ficoms
sahf
xchg
jecxz
xchg
fadd
cmp
sahf
xor
dec
pop
adc
or
mov
xor
bound
shl
sbb
pusha
loop
mov
sti
sti
pop
pop
enter
pop
jp,pn
dec
imul
jnp,pn
testb
pop
push
shr
pop
mov
push
xor
das
rcr
push
mov
xor
stos
out
into
and
data16
imul
jmp
je
xor
sub
fs
and
add
push
inc
cmp
adc
test
sbb
or
and
loop
inc
adc
in
addr16
xchg
inc
iret
xchg
in
pushf
add
mov
adc
jb
insl
fwait
testb
bound
mov
in
in
daa
xor
in
rorl
cmpsb
xor
add
adc
dec
gs
lahf
loope
xor
in
jne
xchg
pop
dec
add
push
push
or
fwait
pop
std
inc
sub
pop
add
in
inc
and
xchg
mov
pop
addr16
inc
cmp
push
pop
fistl
rcrl
sar
cmp
xchg
int3
add
cmc
rcrb
dec
add
inc
ds
xor
rcll
call
xor
pop
sub
pop
jb
inc
jno
loop
cmc
jbe
mov
jp
in
imul
or
mov
andl
cmp
movsl
sbbb
hlt
xor
jnp
xor
dec
lret
movsl
cmp
jge
imul
je
inc
mov
repnz
mov
addr16
lds
pop
out
inc
out
inc
lret
mov
pop
arpl
ret
mov
push
dec
in
push
movsb
xor
sarb
stos
jle
push
bswap
fldcw
or
into
pop
push
add
add
out
cmp
lock
inc
test
out
cmp
dec
push
jnp
mov
rorl
ljmp
idivb
fisttpl
je
push
rolb
loopne
js
inc
mov
pop
out
xlat
push
pop
jle
jns
ljmp
mov
outsb
pop
push
shll
cwtl
or
stos
jmp
mov
roll
cmc
inc
jno
xor
js
fistpll
push
in
jecxz
mov
push
sbb
add
add
sub
dec
jle,pt
inc
and
inc
cmp
pop
xlat
jg
leave
push
add
cs
xor
in
jne
push
dec
ret
inc
dec
idivb
hlt
jge
or
hlt
adc
mov
mov
in
cmp
add
add
jp
mov
push
out
jnp
dec
outsb
ss
add
xor
inc
out
mov
xchg
pushf
sbb
sbb
adc
inc
push
aaa
shr
pop
xor
sub
fildll
or
bound
sub
aas
and
xor
sbb
inc
iret
sub
jne
bound
mov
shl
or
and
add
jmp
lahf
mov
inc
mov
popf
xchg
jns
gs
inc
inc
popa
mov
inc
orb
and
and
lret
dec
and
dec
imul
sub
mov
xlat
xor
into
rcll
push
add
dec
and
xorl
push
fiadds
push
je
inc
imul
xchg
push
jecxz
inc
pop
test
call
ficompl
dec
xchg
mov
and
push
out
insl
jns
and
fnstcw
imul
rorl
imul
cltd
pop
dec
mov
cmp
mov
or
data16
clc
push
dec
das
xor
imul
jecxz
sbb
dec
jmp
mul
mov
clc
pop
mov
outsl
movsb
or
pop
mov
jne
pop
pusha
js
adc
test
and
faddl
outsb
stos
faddl
jae
push
inc
dec
jae
fisttpll
jmp
clc
lcall
inc
inc
jnp
xlat
gs
fwait
inc
fidivl
and
ret
loopne
pop
push
xchg
push
test
add
push
or
dec
int3
ret
stos
add
xchg
add
ljmp
jne
dec
lock
mulb
pop
cmp
insl
xchg
sbb
adc
or
and
lods
pop
pushf
aas
stc
push
push
mov
mov
or
xor
fstpt
adc
loopne
je
jns
pop
inc
inc
mov
fbld
aas
push
sub
loope
and
cli
xor
insl
or
movsb
or
xchg
shlb
jne
je
adc
jns
decb
or
mov
sub
pop
js
dec
add
jp
fs
push
push
insb
insl
push
and
insl
inc
lret
dec
lea
sub
push
cmp
pop
lods
daa
xchg
shrl
sbb
mov
xor
movsl
jmp
movb
movsb
xor
lea
cmp
mov
inc
inc
cmp
and
fwait
data16
imul
sbb
mov
mov
adc
inc
inc
push
pop
lock
or
add
test
mov
push
mov
and
adc
mov
es
mov
lods
insb
rclb
mov
ficoms
aad
pushf
mov
push
test
dec
mov
mov
icebp
and
pop
sahf
jno
lds
mov
xor
jbe
pop
mov
xchg
scas
test
dec
test
or
pop
dec
leave
push
xchg
sub
xor
movsl
pushw
mov
adc
mov
das
mov
inc
mov
std
jg
rcl
sub
mov
add
outsl
jne
ss
cmp
pop
xor
mov
loope
imul
sub
imull
add
dec
ret
adc
jmp
hlt
xchg
sub
mov
shrb
mov
imul
outsb
xchg
add
mov
xchg
in
add
dec
bound
outsl
mov
ja
push
jbe
out
inc
xchg
mov
adc
je
push
rcll
mov
and
scas
xor
rolb
pop
adcl
push
test
dec
sub
fcoms
mov
fnsave
fists
lods
and
mov
push
loop
pop
stos
push
imul
int3
das
add
dec
daa
popa
mov
pushf
xchg
mov
mov
push
dec
xchg
add
pop
js
ljmp
in
nop
sbb
sbb
cmp
imul
subb
pop
unpckhps
mov
or
cli
xor
cltd
arpl
or
pop
std
mov
pop
lods
icebp
mov
in
jbe
inc
mov
or
pop
push
aad
loope
push
lea
xchg
addl
int3
or
out
dec
int
and
ss
in
mov
jo
std
xlat
mov
out
push
push
xchg
inc
pop
jne
mov
movl
enter
repz
pop
xor
ja
xchg
jmp
shlb
js
popf
push
fistpll
jle
or
sub
xchg
mov
lahf
sbbl
rorl
es
das
inc
hlt
ss
push
pop
pop
pusha
ss
xchg
xor
sbb
add
lods
lcall
inc
inc
out
or
push
jbe
or
insb
xor
outsb
mov
popa
ret
dec
or
mov
das
sub
inc
xor
push
mov
pop
jl
cld
sub
imull
sub
xchg
dec
mov
rorl
jl
sbb
repz
push
insb
mov
icebp
cmp
test
sub
jge
add
and
inc
js
xchg
jno
push
popa
cwtl
inc
mov
sbb
fcompl
ljmp
inc
push
insl
sub
in
rorl
repnz
adc
bound
aaa
adcl
sbb
int3
xchg
scas
cwtl
into
out
mov
stos
mov
jge
xchg
adc
mull
sub
sahf
fsubs
jno
adc
out
pop
xor
pop
dec
out
sahf
insl
iret
or
mov
into
pushf
xchg
mov
add
add
add
outsl
pop
jecxz
dec
in
pop
jp
sub
and
xchg
jns
stos
xor
inc
pop
sub
sub
or
bts
adc
sbb
pop
xchg
insb
push
xchg
dec
stc
mov
push
dec
or
negb
xor
mov
mov
pop
dec
call
mov
mov
insl
out
and
cmp
clc
pop
jnp
push
movb
les
pop
push
out
push
mov
fcmovb
inc
into
mov
dec
incl
frstor
adc
push
sbbl
lock
push
in
out
fiaddl
outsl
sub
dec
adc
jno
cltd
or
dec
xor
incl
mov
mov
es
daa
stos
cmp
cmp
roll
push
mov
aaa
rolb
xor
js
add
xchg
cmp
ja
or
out
rorb
add
les
outsb
insl
call
imul
xchg
les
xchg
sbb
adc
aaa
pop
lahf
inc
ret
shlb
in
sub
and
mov
fcmovb
js
cmc
pop
andb
mov
sub
aaa
add
mov
or
xchg
cmc
sub
popf
data16
mov
jle
inc
xor
sub
cmp
cwtl
xchg
jne
orl
or
movsb
subb
jle
mov
imul
fildll
add
inc
shld
xlat
xchg
mov
or
xchg
cld
push
dec
push
cmp
jmp
das
dec
imul
mov
out
test
xor
jo
loopne
push
daa
and
push
jbe
cmp
mov
pushf
pop
jp
imul
idivb
imul
mov
pop
and
and
daa
mov
mov
mov
adc
adc
inc
stos
ret
negb
testb
xchg
sbb
inc
mov
cvttps2pi
in
ret
lret
shlb
call
insl
outsl
out
dec
idiv
sbb
xchg
adc
dec
inc
ja
imul
adc
enter
inc
div
xchg
inc
sub
sahf
popa
pushf
jno
rcll
adc
inc
push
aam
sbb
xchg
jno
jb
bound
jb
movsl
fisttpll
dec
push
and
mov
jl
movsb
insl
rcll
jmp
and
sub
push
jp
ret
xor
movsl
cmpsb
dec
adc
inc
imul
rcll
pop
push
sbb
mov
push
cmp
push
loope
and
pushf
or
push
testl
fldenv
jns
adc
mov
push
mov
aaa
inc
ret
pop
jmp
dec
jno
sti
bound
add
mov
xor
clc
jo
inc
adc
and
mov
rcrl
mov
dec
jp
and
rolb
xor
lcall
jp
mov
lahf
cmp
cmpsb
pop
pop
addl
jae
movsl
add
cmp
cli
and
pop
mov
fistps
adc
int
pop
cld
and
das
dec
lods
and
stos
int
js
outsb
aaa
shlw
mov
mov
push
stos
add
and
lea
mov
daa
and
jns
int
stos
xor
adc
push
mov
pop
adc
fisubrl
pop
push
push
mov
cmp
mov
sahf
xlat
xor
sbbl
xchg
lahf
dec
push
xchg
cmp
dec
into
stos
cwtl
pop
addr16
ret
mov
fwait
imull
xor
pop
pop
scas
push
add
sbb
or
push
pop
filds
adc
inc
mov
inc
adc
add
mov
dec
inc
ljmp
inc
push
popf
xor
jnp
jns
push
sbb
inc
jmp
or
and
mov
push
sub
jecxz
fisubs
fisttpl
inc
xchg
push
sub
jbe
repnz
mov
scas
inc
adc
loope
mulb
pop
or
push
std
in
push
pop
scas
sub
out
cmp
ss
push
adc
lret
loop
aam
daa
and
bound
je
pop
and
mov
outsb
pop
aad
hlt
mov
jl
and
sub
mull
incb
in
push
es
jb
jecxz
out
push
dec
jmp
outsl
cld
pop
jnp
mov
es
jecxz
into
push
divl
inc
push
stc
adc
mov
mov
or
repnz
xchg
add
aaa
insb
hlt
rcrl
sti
xor
sbb
xor
pop
adcl
dec
jecxz
xlat
adc
pop
jg
fs
push
inc
out
insl
insb
cmp
jl
pop
cmp
inc
rcrb
xor
cmp
mov
jge
push
in
jbe
js
jl
jns
nop
popf
adc
dec
and
push
push
dec
in
dec
mov
add
mov
push
popa
loope
dec
xchg
inc
xor
rcll
stos
fnop
std
mov
jp
mov
push
cmp
xchg
outsl
insb
pop
sbb
jns
pop
shlb
cmp
ja
add
jl
pop
sub
push
fs
dec
mov
push
aaa
and
insb
ret
cmc
inc
or
iret
jg
push
scas
test
std
clc
loopne
sbb
inc
jge
jl
pop
or
pop
sti
fs
jo
aaa
ss
bound
jns
mov
in
ret
push
dec
add
repz
daa
cld
fimull
cmc
mov
je
push
ss
push
mov
adc
mov
dec
idivb
cmc
push
mov
test
pop
into
sahf
gs
xchg
jmp
jmp
test
jl
aas
add
mov
jge
push
mov
jo
mov
sub
cmp
filds
ficoml
inc
sbb
sarb
pop
dec
jno
pop
jnp
cli
leave
stos
fistpll
decl
inc
sub
add
test
cmp
imul
pop
mov
scas
dec
jmp
mov
inc
sub
or
xchg
int3
adc
movsl
out
stos
cmp
mov
ljmp
push
inc
int
leave
add
jb
and
push
insl
imul
mov
mov
cmp
pop
or
push
adc
xor
ljmp
inc
in
stos
add
and
arpl
dec
dec
shr
ja
inc
insb
cmp
arpl
insb
imul
test
jl
incb
cmpsb
pop
loopne
jecxz
scas
mov
mov
jg
dec
lcall
insb
push
sbb
pusha
xor
sub
dec
stos
push
cld
addr16
incb
jecxz
adc
leave
imul
push
les
jb
push
loop
xor
dec
movb
aaa
add
jecxz
out
sahf
xor
das
sbb
and
dec
ss
sbb
std
pop
pop
cmp
push
mov
test
and
jbe
lret
in
lds
jle
ss
cmp
psrlw
push
idiv
imul
cmc
sub
dec
loope
arpl
cs
jne
cmpsb
lret
movhps
xchg
inc
popf
jo
clc
outsb
pusha
or
and
outsl
in
arpl
push
sub
sahf
adc
mov
push
and
sub
jle
scas
or
xor
mov
pop
dec
sbb
lods
pop
and
cmp
into
push
rorb
pop
pop
push
jne
jl
mov
or
out
or
inc
pushf
pop
addr16
sub
loope
push
dec
mov
stos
adc
gs
adc
mov
nop
push
push
roll
cmpsl
out
jns
adc
push
or
jge
popa
jno
repnz
lret
dec
inc
xlat
dec
mov
mov
pop
adc
jge
out
sub
sub
in
xor
jno
or
adc
fbld
sub
lods
fistpl
push
dec
stos
pop
push
lods
push
mov
lahf
imul
mov
leave
cltd
lods
fs
cmp
cmp
xor
popa
mov
scas
test
inc
ljmp
lea
adc
test
xchg
pop
mov
lcall
test
sub
pop
shl
shrl
mull
push
inc
cltd
sbb
inc
xchg
inc
dec
adc
push
insb
dec
push
push
cltd
iret
arpl
loope
sbbb
dec
jbe
sbb
xor
aam
jb
idivl
xor
mov
jl
ja
stos
push
clc
sbb
pop
hlt
arpl
test
sbb
loopne
aam
xchg
adcl
sub
popa
mov
add
ret
imulb
subl
xor
push
js
push
mov
js
pushf
sbb
fisttpll
adc
lods
or
notb
push
mov
mov
fimuls
aad
pop
pop
addb
stos
in
sbb
jp
ds
mov
in
pop
bound
arpl
adc
pop
adc
jb
mov
sahf
popf
xor
add
dec
inc
out
lds
add
rcll
into
ljmp
insl
adc
jb
push
pop
js
fldl
push
mov
ret
dec
and
fcoms
jnp
lret
stos
aad
data16
adc
lret
loopne
jne
fmull
enter
outsl
out
cli
and
jne
inc
fidivrl
push
and
xor
ljmp
push
push
lahf
aaa
cli
pop
gs
pcmpgtb
push
adc
push
add
push
repnz
xor
cmp
mov
mov
or
xchg
subl
inc
adc
jnp
cmp
pushf
les
cmc
pop
sarl
sub
repnz
xor
sarl
adc
cmp
inc
jle
cmc
imul
fdivr
xor
pop
or
and
jecxz
nop
push
cmpsl
sbb
mov
jo
popa
mov
sub
jns
inc
cmp
adc
jbe
xor
repz
clc
mov
add
push
stos
dec
into
repnz
pop
lds
or
xchg
push
cltd
pop
imul
andl
xchg
push
jmp
dec
xchg
cmpsb
pop
in
sahf
cmp
stos
cmp
pop
inc
ds
dec
cmp
push
adc
das
adc
pop
push
fbstp
stos
ret
pop
jp
or
psadbw
adc
pop
je
push
xor
js
ljmp
nop
sbb
xor
mov
js
lahf
jbe
fmull
dec
inc
cmp
movsb
cld
xor
and
mov
insl
test
ljmp
mov
or
bound
sub
inc
bound
mov
or
arpl
inc
gs
icebp
aas
out
and
mov
push
jno
test
or
mov
test
cmpsl
insl
mov
or
push
ret
push
add
shll
nop
lret
or
enter
pushf
mov
outsl
test
mov
adc
and
and
pop
push
adc
mov
pop
inc
testb
rcr
inc
lods
jae
scas
xor
int3
mov
jmp
sbb
jg
xchg
or
or
in
push
pop
popa
ret
jecxz
insl
push
inc
sbb
add
xchg
mov
push
js
dec
lds
cmp
dec
jo
adc
popf
xchg
jge
ret
push
inc
out
imul
pop
mov
adc
ljmp
cmpsb
pop
or
xlat
add
dec
cmp
mov
movsl
ds
adcl
cs
lock
imul
test
pop
pop
push
dec
jg
data16
jo
std
lock
dec
adcb
outsb
push
cs
aad
les
sarb
aam
test
pop
movsl
mov
adc
xchg
gs
call
aad
inc
jmp
dec
aad
push
dec
jbe
insb
jbe
cmp
pushf
or
sub
dec
iret
stos
sti
or
iret
or
rclb
rcll
ficoml
ret
lcall
rorb
mov
daa
movsb
rolb
test
adc
ljmp
sbb
call
mov
stos
mov
adc
lods
mov
mov
ret
pop
mov
sbb
add
dec
pop
dec
sbb
add
mov
sarl
gs
ljmp
push
add
push
in
lret
pop
inc
push
in
aaa
in
call
test
aad
dec
test
ret
or
out
mov
push
jmp
jne
cmp
push
ja
cmp
pop
sbb
movsl
std
push
rorl
test
adc
xor
imul
cmp
decl
fidivs
outsl
fimuls
lods
dec
aaa
ficompl
shlb
mov
inc
xor
faddl
data16
and
fsubr
mov
sbb
pop
jns
es
mov
insb
arpl
fwait
jl
sub
in
mov
cmp
ds
out
inc
popa
ret
outsb
aas
or
mov
sti
push
data16
sbb
cmp
sbb
sbb
mov
int
fs
xacquire
pop
adc
fists
cmp
lret
jge
pop
xor
clc
jl
popa
lret
in
insb
inc
cmc
pusha
jo
andb
add
lock
test
jo
jae
outsb
xchg
movsb
popf
xchg
inc
push
ficompl
push
imul
mov
out
and
inc
popa
or
lock
pop
in
fbld
push
jo
dec
mov
push
and
out
fwait
jb
test
jecxz
ss
xchg
icebp
pop
pop
pop
mov
lahf
sub
imul
jno
pusha
ficoms
dec
push
and
bound
cmc
xchg
inc
mov
and
into
cmp
dec
xchg
call
push
cmp
ret
loope
add
add
arpl
add
jnp
add
mov
cmp
or
push
xchg
mov
dec
ss
jns
movsl
push
rorb
ret
cmpsb
mov
mov
cmp
sbb
push
orl
jge
mov
jno
in
xor
sub
jmp
fsubr
jo
cltd
lods
push
jnp
cli
dec
sub
call
aad
sbb
xchg
push
cld
pop
lret
or
mov
sub
pop
inc
mov
xchg
test
xchg
push
and
xor
clc
scas
jne
add
or
scas
mov
pushf
dec
icebp
rol
or
sar
in
lret
lea
push
dec
mov
imull
repnz
out
add
enter
mov
push
cmp
pop
daa
mov
push
cmp
sarb
test
xchg
imul
push
adc
jb
out
or
rdtsc
add
dec
and
inc
dec
ret
push
imul
mov
ljmp
push
test
push
es
sbb
mov
js
dec
and
movsb
cmp
repnz
in
add
dec
xlat
lods
rorb
shll
cmp
mov
xor
mov
jmp
push
cmp
popa
inc
pop
in
adc
cmp
imul
lahf
out
inc
popa
mov
adc
fs
jnp
int3
ss
adc
mov
rcl
dec
out
pop
dec
push
jl
pop
outsb
push
push
movsb
push
dec
dec
push
add
sbb
fstl
xchg
outsb
xor
push
es
ds
and
push
shrl
jp
lds
inc
sbb
push
nop
add
pop
pop
in
fisttps
leave
into
cmp
mov
push
andb
imulb
mov
call
js
push
add
sbb
test
jno
xorb
or
jno
mov
mov
xchg
inc
bound
sbb
push
push
je
ror
xor
addr16
adc
les
data16
stos
sbb
and
imul
jbe
in
xchg
cltd
lds
loopew
icebp
jg
dec
pusha
aaa
sub
mov
stos
xchg
stos
daa
stos
in
mov
outsb
popf
cmp
aad
in
gs
fs
test
xchg
sahf
jp
imul
leave
sub
dec
cmp
xchg
cmp
and
ds
mov
sbb
fwait
cmc
bound
shll
hlt
lock
test
fisttpll
sarl
add
test
rol
stos
mov
or
inc
push
addr16
and
movsl
mov
hlt
addl
imul
in
hlt
dec
add
cmp
lcall
pop
inc
push
out
stc
aad
jle
xchg
ja
dec
imul
sbb
dec
mov
aaa
xlat
jmp
cmp
sub
adc
sbb
aam
push
int
xchg
push
xlat
psrld
pop
fwait
dec
sbbb
outsl
mov
or
sub
int3
and
mov
lret
dec
dec
int
inc
sbb
call
or
push
icebp
ja
pop
repz
lock
dec
pop
out
notl
call
fwait
pusha
push
pushf
mov
xchg
xchg
fstl
fistpl
or
dec
mov
sub
fbld
sarl
mov
in
jnp
xchg
jnp
pop
jo
sub
jbe
jmp
or
dec
test
leave
cmpsl
push
out
inc
mov
rclb
xorb
mov
fsubrs
cmc
outsl
ja
mov
ljmp
push
sub
xchg
movsb
mov
mov
xlat
dec
pop
outsb
jg
ret
es
and
mov
fwait
inc
xchg
rolb
arpl
outsl
cltd
cmp
add
adc
push
pop
add
test
lret
repnz
pop
dec
sarl
rcrb
sub
jle
arpl
repz
fisubl
loope
addr16
sbb
insl
add
int3
sub
and
xor
xchg
mov
shl
jp
xchg
or
sahf
push
pop
shlb
jo
push
push
xchg
mov
sbb
push
outsb
loop
and
sbb
mull
ljmp
xchg
adc
pop
cwtl
mov
dec
cwtl
sub
stos
mov
mov
dec
je
inc
loopne
out
jb
aas
inc
fidivl
ss
lcall
int3
and
xchg
inc
jo
data16
mov
mov
mov
leave
sub
popa
sub
push
lret
enter
cmp
xlat
inc
jb
adc
dec
xchg
sub
fldl
xchg
xor
inc
in
inc
adc
pusha
es
xor
icebp
lret
insl
rorl
pavgb
pop
sbb
mov
out
adc
iret
xchg
lcall
mov
dec
xor
xchg
jg
mov
pop
js
mov
inc
aas
push
pop
je
scas
mov
rcrl
lds
push
cmpsb
test
pop
loope
ret
jl
loope
int3
inc
ja
add
cmpl
push
leave
inc
insb
scas
adc
xlat
movsl
or
outsb
imul
ss
jp
inc
pop
push
add
bound
loop
push
push
add
jo
dec
fcomp
nop
cwtl
or
pop
xlat
push
rcll
ljmp
fsts
addr16
ret
pop
ficoml
ret
xchg
jecxz
mov
mov
imul
xorl
dec
pop
imul
fisubl
popf
pushf
ds
test
punpckhwd
lock
push
pop
adc
leave
push
add
xlat
push
sub
inc
fistl
pusha
in
push
int3
pop
jg
sbb
addps
xor
mov
xor
rcrb
cltd
add
mov
fmuls
push
and
shrl
leave
imull
hlt
jae
jns
dec
or
daa
int
dec
pop
imul
sbb
jle
pop
adc
cmp
jg
jle
xchg
xchg
mov
push
notb
push
stos
je,pn
xchg
clc
pop
xchg
adc
ss
loope
fs
push
clc
pop
cmp
call
subb
jg
jg
sarb
xchg
dec
fimuls
jg
notl
dec
movsb
lods
xor
sarl
testb
icebp
jae
push
inc
xchg
and
pop
neg
sub
test
dec
cmp
in
pop
das
stos
xor
rcll
popf
push
test
jo
jle
pop
cmp
mov
test
jns
xchg
out
dec
out
into
into
ret
pop
xor
or
inc
push
sub
jbe
jmp
and
shlb
lock
pop
testl
inc
inc
push
pop
lods
inc
bound
push
adc
rorb
cmpl
jmp
push
jo
inc
or
dec
or
mul
and
test
addr16
and
jbe
aam
cli
mov
ja
sub
scas
mov
add
pop
adc
cmp
pop
leave
scas
sub
rcll
roll
fadds
iret
daa
mov
and
movsl
lods
test
andl
mov
and
cmpsl
cmp
orb
leave
dec
imul
fidivrl
out
pop
les
cmp
inc
fimull
out
pop
nop
cli
mov
xlat
shlb
inc
jno
movsl
jnp
mov
stc
adc
xor
push
cmp
pop
and
popl
add
push
fstpl
cmp
scas
mov
inc
jns
ret
test
xor
cli
fwait
repz
jnp
adc
inc
imul
fwait
push
shl
arpl
or
push
and
dec
jbe
outsb
lods
jmp
fmull
iret
sbb
inc
or
sub
jo
outsl
fiaddl
or
pop
fcoms
mov
jle
aam
ret
push
adc
pop
movsl
jp
and
insb
sbb
jmp
sub
adc
lcall
adc
dec
pushf
inc
push
subl
xchg
pop
insb
sar
mov
adc
lods
mov
dec
movsb
dec
or
in
sbb
xor
jo
mov
push
jnp
outsb
adc
mov
pop
push
jne
outsl
out
mov
mov
dec
stc
or
xor
fisubl
or
xor
sbb
or
mov
addl
push
sbb
loope
or
xchg
push
adc
outsl
sub
cli
out
out
les
jne
repz
dec
decb
adc
pusha
insb
insb
cmp
test
jge
imul
jg
jmp
repnz
or
push
push
lret
stc
push
sbb
push
das
or
sub
shll
dec
adc
dec
pop
stos
sbb
xchg
test
ret
loop
ss
ljmp
mov
sub
aaa
jno
mov
inc
int
cmpsb
sbb
lahf
test
xchg
test
xor
cld
xchg
cmp
push
pop
and
xchg
lret
cmp
mov
sbb
push
sbb
cld
outsb
add
push
sub
cltd
or
lea
jno
xchg
adc
or
fistl
addr16
push
dec
ljmp
ret
adc
fs
jno
outsl
data16
int3
sbb
jno
add
aad
pop
pop
or
negb
inc
out
in
bound
dec
push
push
imul
sbb
cltd
xchg
cmp
adc
test
mov
pushf
testl
mov
scas
shr
sarb
mov
add
cmp
ljmpw
fistps
mov
pop
and
push
lods
mov
test
mov
fisubs
mov
jle
cmp
dec
sbb
mov
out
xor
push
or
cmp
insb
inc
mov
cmp
cmpsl
add
outsb
lret
js
push
mov
gs
mov
fucomip
fbld
cld
jns
out
iret
lods
mov
mov
and
push
xchg
push
fsubrl
push
cmp
cmc
ja
into
loop
pusha
into
les
jb
xchg
idivl
jb
push
and
cmp
lcall
mov
mov
outsb
lcall
sbb
sub
inc
es
sub
dec
cli
pop
lcall
inc
xor
cmpsb
push
xor
fwait
add
fisubrs
test
cmc
xchg
lea
test
xchg
inc
cwtl
mov
rol
sub
sti
aas
ja
and
xchg
adc
cmp
sub
std
xor
aas
bound
mov
xchg
cmc
mov
shrl
push
cli
cmc
push
pop
aam
adc
xchg
pop
ljmp
test
insb
mov
pop
push
push
shrb
cmp
cli
xlat
hlt
mov
pop
dec
cmpsb
add
imul
inc
cmp
bound
fucomp
cmpsb
or
xor
out
mov
pop
push
pop
mov
cli
out
int
push
sbb
dec
xor
push
imul
cwtl
icebp
or
or
out
jl
push
cmp
es
out
lods
inc
pop
cltd
fs
test
imul
sub
jg
test
jne
or
pop
nop
sub
cmp
jg
pop
ret
insl
cmovg
push
test
xlat
add
xor
or
sub
xchg
fs
xchg
inc
jns
outsl
pop
out
xorl
lcall
rclb
jno
mov
mov
inc
fisubl
leave
fstpt
stos
int3
jbe
adc
add
push
ret
jae
stos
mov
pop
imul
adc
dec
xchg
adc
ja
push
sbb
data16
cld
xlat
ret
mov
inc
xchg
inc
int
pop
sar
std
sub
movb
shll
stos
jne
ret
repnz
notb
cmp
jle
and
ja
stos
loop
es
fistps
xchg
pop
es
pop
pushf
outsl
lret
pop
cmp
imul
jne
shll
mov
pop
scas
out
int3
cmp
push
mov
dec
pop
test
loope
pop
scas
repnz
testl
sbb
jp
int
push
ss
ljmp
mov
ud2
lds
mov
movsl
mov
and
lds
imul
jbe
adc
push
movsb
pop
lods
mov
cld
xor
icebp
stos
sbb
stos
test
sbb
arpl
jg
sahf
out
js
and
jno
stos
pavgb
dec
lods
jne
aad
push
adc
pop
out
inc
into
xchg
divb
sti
jl
dec
lret
in
sub
sbb
faddl
jle
shll
mov
sub
movsl
loop
negl
jb
stos
mov
repz
and
rcl
or
hlt
mov
jb
cli
push
adc
dec
sbb
scas
xchg
js
lcall
ss
mov
mov
scas
std
sar
cs
push
lock
stos
mov
or
scas
pop
cmp
mov
dec
jno
sbb
jne
xchg
data16
cli
sbb
sub
pop
pop
and
stos
ficomps
ret
stos
jle,pn
shll
out
cmpsb
jo
fisubs
sbb
inc
popf
mov
stc
and
cmp
pop
mov
mov
cwtl
lods
movsb
mov
cmc
pop
sub
xchg
adc
sti
inc
mov
pop
cmc
stos
adc
cmp
push
leave
pop
fwait
stos
xchg
jae
adc
jp
and
dec
daa
push
push
jbe
aaa
call
mov
push
mov
stos
out
lea
pop
data16
adc
jne
fldenv
sbb
adc
popa
arpl
push
idivl
jns
and
mov
loopne
fsubrl
jne
cmpl
dec
mov
enter
scas
cmpsb
aam
test
notb
pop
mov
stos
mov
sub
pop
inc
gs
movsl
xor
sbbl
jb
pop
pop
jnp
lret
sub
aam
dec
jne
jmp
inc
stos
add
lret
pop
mov
sub
mov
js
pushf
cmc
adc
je
data16
and
stos
xor
adc
sub
push
sub
call
mov
pop
pushf
out
xchg
ja
je
enter
pop
fmul
pop
xchg
mov
jge
and
jp
sub
adc
xchg
and
das
adc
sub
add
cs
xchg
xor
adc
add
mov
je
and
js
cmpsl
test
movsb
sub
mov
push
push
int3
stos
out
popf
ja
push
lods
jo
jcxz
test
jg
dec
pusha
enter
iret
ss
pop
and
adc
push
fldl
lods
jno
and
iret
cwtl
adc
add
cmp
jl
out
outsl
jnp
push
stos
cmc
jb
inc
lds
pop
sti
sub
aad
sub
int
cmp
xor
cmc
fnstsw
fs
jge
xorb
test
out
negb
mov
pop
loope
pop
aas
push
mov
lcall
test
jge
mov
and
xlat
jle
addr16
lock
inc
dec
jae
push
push
int3
pop
lret
xchg
loopne
mov
jae
cmp
add
test
mulb
imul
outsl
shrl
push
sub
jne
jno
jmp
shlb
leave
loop
das
jle
inc
daa
adc
sub
out
push
dec
arpl
xchg
jl
and
adc
push
sub
adc
sbb
aas
inc
fdivp
das
jg
mov
dec
jo
imul
xchg
aas
outsl
lret
imull
test
shr
inc
xorl
jns
pop
imul
cmpl
jmp
mov
jno
dec
shlb
pop
mov
sbb
inc
shr
jmp
dec
fnstenv
enter
mov
int3
mov
inc
inc
lds
adc
add
pop
pop
pushf
call
or
mov
and
mov
pop
loope
ret
add
pop
sub
dec
fwait
daa
imul
cmpsb
imul
fsubrs
adc
fs
pop
lds
ds
pusha
inc
or
or
push
add
push
iret
and
sbb
jb
add
add
cs
ja
cmp
adc
mov
and
push
inc
mov
xor
js
std
mov
xchg
pop
shll
or
cmpsl
cmp
je
dec
aaa
add
dec
pop
aad
andb
movsb
jle
dec
mov
loope
int3
pop
jle
push
fs
sbb
divl
pusha
in
mov
xchg
mov
add
cmp
inc
dec
push
fwait
and
fdivrl
fisubs
pavgb
add
mov
jg
pop
fisubrl
push
push
call
and
mov
pop
inc
arpl
cmp
push
cld
pop
adc
pop
ret
cmp
mov
mov
jae
sbb
popa
adc
ret
dec
mov
mov
mov
inc
sbb
and
dec
xor
dec
scas
and
add
add
clc
hlt
das
dec
mov
xor
push
sbb
mov
add
cli
jecxz
xor
addr16
or
push
aad
ret
dec
mov
pop
dec
std
jl
mov
fmuls
hlt
out
xor
and
lods
int
divl
out
mov
subb
push
js
and
dec
into
add
push
jle
push
or
ja
insb
lret
pushf
push
add
enter
xchg
fwait
push
cmpsb
mov
or
ret
aad
adc
cmp
js
xor
add
clc
mov
fwait
outsb
push
sbb
push
ja
mov
sub
sub
jp
xchg
sbbl
ror
mov
pop
or
add
sub
cli
pop
lods
jp
jb
jns
into
adc
in
outsb
inc
stc
jbe
out
loopne
fs
jle
xor
mov
outsb
mov
imul
inc
sbb
sub
gs
xor
decb
imul
outsl
std
cmp
sub
add
fdivrl
cli
inc
xchg
dec
adc
arpl
push
scas
push
stos
addr16
or
cmpsl
push
sbb
divb
es
xchg
adc
mov
orb
pop
xor
ss
jp
adc
mov
or
andl
dec
stos
icebp
iret
push
ss
dec
pop
or
add
ret
cltd
lret
sbb
xchg
push
rolb
cmp
aaa
xor
loope
mov
add
jecxz
sbbb
cwtl
das
jmp
add
mov
adc
int
clc
ss
mov
and
push
pop
enter
add
push
fdiv
sbb
sub
fwait
push
les
out
sub
test
clc
inc
mov
ds
test
xor
test
push
mov
notl
mov
push
ds
out
push
out
xor
pop
jl
lret
lods
xchg
jg
mov
es
or
inc
adc
cmp
pop
pop
xchg
mov
sub
mov
nop
fildl
dec
push
outsb
ss
sub
add
stos
mov
mov
sbb
loopne
in
push
dec
sbb
xlat
mov
stc
or
xor
maxps
fidivrs
pop
lods
out
adc
loop
mov
cmpsb
or
push
inc
mov
jno
in
cmp
in
pop
rcl
xchg
pop
hlt
xchg
imulb
and
sti
add
les
loopne
lock
jg
adc
pusha
movsb
cmp
inc
shlb
lret
xchg
aad
or
js
adc
jb
aam
sub
pop
mov
jo
insb
lret
jno
dec
insb
dec
leave
mov
xchg
shll
pop
xor
cmp
pusha
in
xchg
int
mov
push
into
lock
aam
and
movsb
pop
fsub
push
pushf
or
mov
sub
and
mov
int
mov
cmpsb
in
js
imul
or
add
sbb
ret
les
shlb
call
aad
cs
pop
fcomp
shlb
pop
cli
mov
cmp
cltd
cmp
add
or
mov
roll
fcmovb
push
icebp
sub
mov
fldcw
push
std
mov
or
std
xchg
xchg
mov
xchg
pushf
sub
sub
fxch
sbb
xor
aad
mov
xchg
int3
lea
pop
clc
fsubr
jmp
ljmp
lock
mov
jnp
leave
and
jl
inc
jl
add
push
mov
insl
sbb
mov
loopne
mov
outsl
fs
pop
leave
aaa
push
pusha
inc
push
ret
scas
lret
int3
dec
lret
aas
push
cmp
fnstsw
lcall
jmp
jo
mov
mov
and
gs
sub
jo
fists
stc
dec
fdivr
push
and
mov
push
mov
pop
jnp
and
xor
mov
out
lock
mov
inc
movsb
pop
ret
jmpw
cli
xchg
jge
pushf
icebp
cmp
mov
cld
mov
ret
lods
xor
sti
loop
shl
dec
and
add
pop
xor
filds
pop
arpl
cwtl
gs
cld
lret
mov
imul
jp
orb
xchg
cli
call
iret
in
or
scas
leave
pop
std
in
mov
pushf
out
scas
dec
icebp
xlat
push
sub
and
shl
mov
fnstsw
jg
cmc
cmpsl
or
sbb
ds
movsb
and
mov
push
mov
das
or
std
mov
sbb
mov
adc
mov
iret
sbb
stos
pop
bound
add
out
sub
sbb
sarl
mov
rclb
loope
fisubrs
cli
in
fsubp
repz
mov
popf
or
std
sbb
repnz
push
testb
aas
stc
int
mov
xor
sub
scas
scas
inc
cli
jo
sub
cli
cmp
rcrb
and
lret
in
jo
ja
popl
cltd
cmp
ret
xchg
repz
ja
and
add
cmc
dec
lds
movsb
test
mov
sahf
enter
loope
fildl
roll
cmp
int
xlat
dec
xchg
movsl
scas
sbb
flds
add
cmpsl
mov
xchg
cmpb
sub
and
jmp
lock
nop
ljmp
lds
cld
mov
inc
repz
adc
jne
adc
cmpl
bound
inc
lcall
mov
icebp
mov
xchg
call
ror
out
int3
nop
and
imulb
pop
sar
mov
push
mov
loopne
jp
jecxz
add
movsb
dec
mov
mov
icebp
inc
xchg
mov
mov
jp
jb
xchg
cwtl
imul
mov
fldt
xor
mov
call
nop
mov
xchg
pop
xor
je
stos
mov
mov
cmp
dec
arpl
sbb
jnp
lahf
repz
scas
fnstsw
sbb
clc
mov
mov
pop
push
lods
clc
push
xchg
inc
out
iret
cwtl
fdivrs
mov
sbb
inc
mov
xor
xchg
lcall
cmp
pop
call
lock
sbb
out
pop
leave
pop
js
dec
dec
cmp
loopne
cmp
call
test
cmc
fidivrl
xor
ja
inc
adc
adc
mov
aaa
loop
pop
jge
mov
dec
lods
fadds
adc
cmp
cmpsl
push
sbb
jp
mov
and
push
jbe
mov
std
test
sub
scas
inc
xchg
movsb
mov
mov
xchg
pop
lods
sbbb
imul
cmp
cwtl
mov
cltd
cmp
les
gs
push
lds
stos
aad
ds
shl
xor
sbb
push
mov
pusha
push
xchg
add
jnp
aaa
mov
push
push
inc
adc
lods
iret
jb
or
in
mov
or
test
sti
adc
xchg
sbb
es
std
pusha
in
stos
mov
xchg
or
cwtl
jae
push
rcll
test
dec
dec
hlt
lahf
xchg
mov
xor
mov
jbe
imul
idivb
lret
fwait
clc
and
mov
xchg
pop
jp
dec
add
cs
mov
jecxz
adc
add
popf
inc
add
adc
adc
xchg
fcomp
dec
mov
mov
les
sbb
jne
dec
lcall
rcll
xor
arpl
daa
pop
cmp
movq
or
insl
cwtl
cmp
sub
mov
subb
aam
add
cwtl
repnz
inc
shlb
inc
stc
sbb
cmpb
jecxz
out
xchg
pop
in
clc
cmc
lods
adc
shrb
sbb
cld
test
lret
fnstcw
jne
data16
movsl
mov
pop
jecxz
int
jge
cld
in
enter
lock
and
dec
sub
aad
sti
xor
stos
loope
xor
insb
push
pop
mov
fsubrp
jne
xchg
test
pushl
icebp
fsubrl
pop
lret
jno
push
mov
loope
or
jae
adc
inc
or
mov
sarb
test
push
push
jl
add
rcll
cld
lcall
das
xchg
xchg
test
lahf
adc
inc
cld
mov
push
xchg
aam
orb
in
inc
incb
mov
loop
push
inc
orb
xlat
fldt
sar
jg
and
orb
inc
ret
fsts
cmp
fnstcw
pop
movsb
cs
mov
mov
fimull
xchg
pop
xchg
scas
mov
mov
jnp
sub
jns
xlat
xchg
mov
insl
mov
sbb
ljmp
inc
xchg
add
mov
xor
popa
push
cmpsb
fs
sub
mov
pushf
insb
fsubrl
add
lds
mov
cmp
pop
push
call
or
push
xor
pop
lahf
dec
fsubr
popl
fcomps
stc
in
mov
jp
inc
aam
mov
sub
test
cmp
fs
sub
int
test
sar
hlt
add
xor
std
or
xchg
jae
iret
lods
lahf
aam
mov
mov
ljmp
jl
sahf
dec
push
cmp
fldl2t
insb
mov
pushf
add
test
insl
pop
stc
test
icebp
push
jmp
sub
push
hlt
movsb
aas
pop
sti
jae
sub
jo
adc
push
subl
jp
sub
call
sub
and
test
std
sub
pop
mov
in
inc
fdiv
test
mov
jo
int3
cmp
jmp
fs
adc
cld
cltd
fisubrs
inc
in
sbb
mov
jo
pop
sti
dec
cwtl
in
rolb
lock
sbb
push
leave
sub
fists
ja
cld
sub
adc
out
cld
movsb
ja
sub
xor
sbb
dec
aas
test
pop
xor
xor
in
inc
push
mov
lock
mov
cmc
add
adc
aaa
pushf
or
dec
cmp
divl
loop
jo
loop
cmp
sbb
pop
into
rorl
pushf
and
divl
loope
jo
loope
sbb
sbb
cmp
fs
aaa
pushf
lds
mov
mov
cmp
mov
pop
dec
pop
sub
adc
pop
xchg
jo
adc
ret
cwtl
les
pop
sub
test
jmp
cmp
pop
cltd
push
mov
stc
fdivr
out
or
fld
stos
inc
adc
sti
and
mov
dec
mov
fidivl
dec
cld
leave
lcall
in
mov
adc
icebp
leave
icebp
cs
rcll
into
mov
je
popl
rorl
popl
mov
cld
cmc
pop
mov
pop
lds
jo
pop
lods
push
pusha
sub
inc
cltd
mov
test
fs
call
add
divl
xchg
mov
das
dec
add
loopne,pt
shlb
add
dec
add
arpl
dec
fwait
pop
sbb
testb
jnp
test
jne
dec
or
inc
shl
add
sbb
outsb
fs
jp
lds
pop
dec
add
arpl
pop
ds
decw
mov
cli
pop
fwait
cmpsb
mov
xlat
mov
or
ljmp
lea
lcall
pop
mov
push
cltd
push
jp
das
mov
stc
sar
andl
insb
pop
mov
and
lods
dec
pushf
cmpb
mov
lret
dec
cmpsl
fsubrp
mov
movq
pop
mov
jp
fldl
cmp
std
pop
mov
std
jae
cmpsl
xchg
cmp
les
and
mov
inc
leave
sbb
fcoms
in
pop
sahf
in
add
push
mov
fcmovnu
push
mov
ret
mov
mov
sbb
cmpb
mov
data16
or
enter
sarb
loopne
jb
movsl
dec
ss
fstp
sbbl
mov
push
dec
rcrb
jns
adc
jno
xchg
fs
xchg
je
aas
pop
inc
dec
icebp
jo
and
xchg
nop
cmc
sub
push
mov
imul
lcall
shlb
incl
popf
adc
flds
or
scas
mov
mov
mov
ja
fsubrs
cs
lret
sbb
dec
cmp
sub
cld
dec
dec
scas
icebp
mov
inc
sar
mov
outsl
lahf
jb
mov
jp
mov
sbb
scas
xchg
inc
dec
test
push
mov
mov
sub
scas
in
inc
pop
fsubrl
adc
scas
pop
sub
das
test
sbb
mov
test
enter
in
jmp
adc
clc
push
test
push
add
clc
mov
and
loop
xor
bound
jl
call
sahf
stos
sbb
mov
push
xor
loop
or
cltd
mov
jo
fidivrl
jnp
ds
fidivrs
push
mov
jns
mov
ljmp
dec
je
loop
addl
inc
pop
dec
cmpl
xchg
sbb
movl
bound
push
je
pop
lods
mov
sahf
test
and
mov
jb
js
int
cmpsb
and
pop
loope
mov
sbb
adc
sbb
aad
arpl
mov
movsl
xorl
sbb
and
cmpsb
xor
mov
dec
scas
daa
out
insb
orb
sbb
mov
repnz
hlt
add
mov
sti
add
xchg
xchg
or
repz
pop
pushw
push
lcall
cmpb
bound
dec
movsb
pop
fs
jne
scas
sbb
inc
imul
cwtl
js
daa
xchg
adc
lahf
sbb
or
xor
jecxz
mov
lret
insb
xor
ds
lcall
inc
add
dec
lds
enter
jmp
mov
add
pop
incb
mov
xchg
cmc
mov
mov
and
sub
out
sbb
mov
subl
cmc
pop
sbb
mov
or
jns
or
data16
in
in
mov
cmpsb
lret
dec
clc
xchg
adcb
clc
xor
sbb
pop
push
pushf
fucom
aas
add
rcrl
test
in
dec
push
inc
pop
mov
xchg
stos
adc
les
mov
ljmp
xchg
cmpb
dec
adc
xchg
movsl
cmp
pop
fmul
aas
imul
mov
icebp
adc
lahf
fsubl
stos
outsb
aam
inc
inc
movsl
jge
loope
push
nop
test
mov
mov
inc
fldl
stos
add
mov
mov
xchg
in
insl
mov
test
sarl
popf
fimuls
shll
mov
ret
sbb
dec
fdivrp
ror
je
out
adcb
pshufw
in
bound
sub
push
cmpl
scas
int3
ljmp
xchg
jmp
sub
fs
sahf
shrl
shl
push
mov
popf
add
int3
cmp
pushf
shr
mov
fstpl
inc
pop
or
pusha
movsb
aam
cmp
sub
test
cmpsl
xor
cwtl
js
jno
xor
imul
stos
jmp
lock
sbbl
add
and
jnp
pushf
in
sbb
shlb
test
mov
ljmp
or
stos
lea
pop
fdivl
xchg
movsb
rcrl
inc
add
fbstp
gs
rcrb
push
jl
pop
add
pop
pop
adc
or
stos
mov
je
cltd
sbb
rcrb
mov
ljmp
ljmp
mov
fsubrs
sbb
orl
pop
dec
adc
cmc
sub
mov
inc
pop
pushf
mov
mov
sbb
xorl
faddl
inc
inc
adc
enter
adc
cmp
jmp
mov
sbb
mov
push
popa
or
mov
cld
sub
dec
adc
aam
pushf
push
mov
rcrb
shrb
push
lock
je
push
dec
mov
testb
incl
lock
xchg
or
fucomp
cli
daa
test
dec
mov
sub
cmpsl
nop
xor
xchg
sti
shll
sarl
pop
out
dec
add
lods
mov
push
xchg
fdivr
dec
sti
cli
mov
mov
mov
lea
nop
fsubs
in
mov
lcall
enter
ret
rorl
jno
out
lea
shll
mov
jb
push
cmp
mov
sub
lahf
ljmp
cmp
aam
sti
mov
sar
add
sub
or
icebp
sbb
push
lahf
rclb
push
rorl
lock
sub
fadds
inc
add
mov
cmp
pop
or
pop
mov
cmp
sahf
or
sbb
repz
mov
fstp
sbb
or
mov
je
cld
rcll
nop
hlt
js
int
stos
stos
stos
clc
jmp
adc
cld
lods
adc
int3
jmp
sarb
outsb
mov
jmp
mov
and
fnstsw
jle
fisttpll
int3
cmc
int
mov
cmp
aam
test
popf
adc
push
push
xor
xor
xor
mov
out
sbb
mov
inc
data16
adcl
push
test
mov
stc
jno
mov
data16
das
out
movsb
mov
std
lcall
cld
sbb
sbb
add
or
and
sahf
testl
mov
cmp
jns
mov
popa
xor
ds
cmp
inc
pop
fstl
fcomps
lock
es
mov
stc
mov
mov
imul
xchg
mov
xchg
idivl
dec
push
adc
mov
jb
test
sbb
ljmp
sbb
fcompl
addl
xor
push
pop
adc
stos
sbb
test
test
jb
les
push
xorb
rcr
out
xchg
push
and
mov
ds
movsl
cmc
dec
mov
or
cld
rolb
rcrl
lahf
ss
leave
sub
les
mov
mov
or
stc
mov
lea
adc
sar
in
pushf
aam
int
dec
icebp
testb
mul
jmp
jo
mov
int3
les
sbb
data16
clc
insb
and
push
in
jmp
and
xlat
or
and
bnd
enter
adc
hlt
or
data16
loop
cmpsb
in
stc
push
push
push
das
in
sub
xor
sub
clc
push
jb
mov
aaa
sbb
or
sbb
sbb
repnz
xor
ss
in
hlt
pop
ljmp
mov
inc
out
shl
and
or
es
sbb
ljmp
xor
sbb
test
push
xchg
in
and
adc
int3
loop
jecxz
push
cmp
movsl
dec
pop
mov
popf
rorb
and
stos
or
push
fmuls
dec
cmp
push
test
sub
incl
jle
call
push
int
das
xor
clc
and
std
dec
insl
mov
std
push
cli
repz
arpl
out
jmp
shr
mov
popf
dec
repnz
cld
jmp
out
or
mov
or
jo
movl
pop
notl
or
je
out
scas
sahf
push
mov
outsb
rcrb
add
xchg
imul
dec
mov
repnz
adc
shll
addr16
test
fcompl
xor
xlat
leave
mov
and
insb
inc
lret
das
enter
mov
jo
rcl
or
pop
or
mov
aad
enter
fucomp
mov
pop
ret
add
cld
sar
outsl
pushl
test
xor
jge
cmp
jl
into
cmp
aad
fwait
mov
nop
cld
push
daa
xchg
or
loop
sub
fcompl
mov
xor
cmc
aam
stc
xor
sub
sub
or
adc
pop
cli
clc
loope
and
mov
stos
cmc
xchg
mov
or
jl
popf
or
out
mov
pushf
cltd
test
jae
icebp
jmp
add
or
xchg
cmp
xlat
push
dec
ret
ss
mov
aaa
push
or
stos
in
pop
lahf
shl
ret
cltd
repnz
mov
xor
shl
sbb
pusha
imul
popf
iret
push
push
mov
xor
divb
or
xor
rcll
mov
outsl
mov
clc
notb
fwait
adc
jae
mov
lahf
cmp
add
push
out
test
stos
mov
add
addr16
cmp
fwait
cmp
pop
pop
test
push
cmp
mov
sub
inc
cmp
xchg
pop
xchg
repnz
inc
pop
mov
sarb
mov
mov
sahf
sub
mov
jl
hlt
repnz
stos
lcall
je
cmpb
sbb
sahf
fnstsw
mov
adcb
outsb
and
in
push
or
imul
jbe
adc
sbb
fistpl
xchg
sub
fwait
mov
xchg
cld
ficompl
mov
lock
cmp
sbb
sub
mov
or
outsb
mov
icebp
rclb
xchg
sbb
ficoms
mov
sbb
ror
in
inc
shrb
cmpsl
sub
ret
adcl
push
leave
and
sti
outsl
inc
ljmp
loope
mov
fisttps
or
add
cmp
and
stc
xor
mov
mov
jle
add
cli
xor
or
or
in
adc
push
pop
adc
pop
jae
loop
clc
enter
stos
jp
negb
push
mov
jno
enter
mov
lods
adc
jbe
adc
aad
cmp
flds
mov
ja
rcrb
sahf
out
push
mov
shl
loop
dec
jnp
out
dec
dec
mov
mov
std
mov
cmpsb
clc
pop
mov
movsb
aad
and
adc
push
cld
push
shll
and
pusha
jp
jge
pushf
jb
scas
sbb
inc
push
test
stos
xor
das
xchg
test
sub
adc
lret
shlb
int3
xcrypt-cbc
cmpsl
push
xor
subl
clc
lret
cmp
cmpsl
or
and
pop
jp
push
insb
inc
sub
mov
xor
jge
cs
in
lret
inc
nop
les
lret
jl
loopne
sbb
pop
psrlq
nop
test
pop
mov
sar
cli
dec
add
sub
icebp
aaa
lock
pusha
mov
dec
movsb
aad
shrb
mov
pop
pop
pop
mov
in
ret
shll
xchg
sub
std
push
insl
or
movsb
mov
fstpt
xor
addl
jecxz
lods
or
out
fs
rolb
sbb
ds
cmp
notl
mov
or
push
xchg
mov
les
stc
and
mov
fidivrs
dec
push
ss
pushf
cwtl
add
inc
add
iret
clc
add
jmp
pop
mov
mov
mov
mov
lret
mov
pop
nop
test
lods
popa
lods
mov
lds
sahf
and
aas
mov
aaa
pushf
jecxz
push
std
mov
ljmp
cmp
pop
xor
in
imul
subb
std
dec
lea
pop
push
sbb
adc
sbb
and
loope
pop
dec
mov
clc
dec
mov
in
push
mov
inc
nop
sbb
mov
mov
stos
jl
jnp
pop
fstpt
mov
scas
or
gs
test
int
nop
jnp
mov
mov
aad
xchg
leave
bound
sahf
adc
movsb
int3
loop
jmp
pop
xor
fistps
jne
dec
addr16
sub
fidivl
mov
out
loope
in
lds
dec
fwait
leave
addr16
mov
push
popf
and
shrl
lea
pop
cmpsl
sub
je
xor
xchg
push
mov
out
jne
dec
pushf
fcompl
xor
sti
dec
jmp
add
gs
in
jb
lock
int
icebp
mov
cmpsb
call
fwait
xorl
scas
push
xchg
mov
or
dec
or
es
imul
xor
iret
pop
out
jno
xchg
hlt
ret
pop
stos
pop
and
or
andl
rorb
xchg
push
dec
int
sub
bound
cli
cltd
mov
enter
std
cwtl
inc
ss
mov
fistl
mov
pop
rolb
mov
stc
and
imul
in
rcrb
mov
adc
fcmovnu
hlt
mov
pop
jg
loopne
mov
test
sub
in
mov
aam
push
push
cld
test
test
in
mov
sbb
mov
bound
dec
fldl
sti
cmpsb
adc
stc
lret
cmp
out
jo
fs
test
and
movsb
dec
repnz
jp
out
mov
rcll
aaa
clc
mov
inc
icebp
sub
imul
sbb
mov
fs
adc
push
cmpb
pop
and
xchg
sbbw
jo
jo
es
mov
jecxz
bound
push
xor
xchg
inc
jae
dec
fildl
xchg
inc
aaa
hlt
or
imulb
testl
rclb
stc
test
cld
int
jno
fwait
test
faddl
in
popf
fnstsw
sub
insl
ret
pop
cmp
fnstsw
loope
push
cmpsb
push
ja
jmp
pop
xor
popa
loope
frstor
mov
pop
or
fisttpll
dec
loop
test
fstpl
pusha
mov
jg
xchg
mov
shll
loop
adc
cltd
repnz
push
int
mov
adc
dec
ljmp
dec
repz
xchg
push
sub
xchg
and
pusha
pushf
sti
inc
rorb
lcall
fcom
std
rcl
xor
test
or
fdivrl
dec
adc
out
cmp
add
inc
int
in
fldl
popf
cltd
sbb
lds
jmp
sbb
lret
into
stos
test
flds
sub
mov
lcall
fldcw
and
mov
cltd
into
mov
outsl
int3
andl
cwtl
sarl
mov
fucomp
cld
push
inc
and
popf
push
test
gs
test
mov
ret
hlt
stos
test
jbe
pop
loope
sbb
sbb
sbbb
mov
sub
test
or
mov
xor
scas
add
nop
repz
in
xor
fstps
shrb
rorb
inc
fadds
pop
out
ficoml
push
push
call
call
out
je
sub
jnp
and
push
adc
xor
test
xor
leave
dec
cmp
inc
dec
shrl
lahf
loopne
mov
xchg
and
push
mov
mov
pusha
inc
sbb
rcrb
cmp
rcl
push
mov
les
mov
scas
lods
mov
jge
rcrl
jp
in
push
sub
cmpsb
sbb
addr16
pop
mov
mov
std
fnstsw
cltd
cld
mov
int
mov
sbb
xor
dec
bound
les
leave
int3
jp
cmpl
aad
movsb
sbb
popa
xchg
mov
lods
push
cli
hlt
mov
clc
dec
mov
hlt
test
ljmp
mov
nop
jp
clc
adc
jnp
shl
dec
mov
out
jecxz
lods
lret
mov
xchg
cld
lret
jl
xchg
out
aas
xchg
lods
int
mov
jns
mov
inc
sub
pushf
lds
lret
ljmp
mov
xchg
and
xchg
cwtl
ss
xor
sarl
lahf
popf
jns
or
inc
sub
mov
jae
xchg
popf
movsl
mov
ret
int
les
lahf
pop
lret
jmp
and
mov
aaa
mov
pop
jae
push
subl
adc
in
mov
jmp
test
mov
into
fidivrs
lahf
sbb
out
push
sbb
lahf
pusha
jns
add
push
mov
test
popf
scas
fnsave
lods
mov
xor
enter
insb
jae
xchg
pop
frstor
loopne
jmp
jae
mov
ret
addb
mov
pop
jmp
lahf
popf
jns
daa
test
mov
enter
stos
xor
or
adc
jae
jl
adcl
outsl
jns
popf
fwait
adc
add
in
xchg
out
xchg
jbe
xchg
cmc
out
movsb
dec
inc
and
call
xchg
cmp
xchg
add
xor
or
mov
int
mov
es
sbb
fstenv
add
andb
cld
mov
xchg
add
aaa
cmc
shll
xchg
aad
ljmp
nop
xchg
dec
rorb
stc
outsl
cmpsb
addr16
into
fdivrl
mov
mov
aad
xor
shlb
xchg
jg
clc
int
ljmp
lods
xchg
cmp
sti
jp
sbb
cmp
fadds
and
mov
adc
sbb
and
or
cmc
imul
fnstsw
fisttpl
sub
lods
pop
insb
sti
icebp
push
cltd
cld
repnz
lods
xlat
scas
in
shlb
adc
cmp
std
mov
inc
roll
fdivrl
repz
adc
and
cmc
test
int3
pop
jl
test
icebp
sub
xor
lea
stos
push
mov
push
inc
test
test
lcall
adc
dec
inc
mov
mov
cmp
movsl
push
xchg
icebp
test
dec
test
or
push
aam
mov
ret
into
or
push
lock
cmp
stos
cmp
sti
stos
lret
test
in
stos
das
mov
or
std
cli
mov
fsubrp
xor
sti
mov
or
fisubl
xlat
cltd
jle
repz
or
mov
sub
fildl
mov
mov
das
xchg
mov
cmp
mov
movsb
push
enter
cld
push
repz
outsl
cwtl
aas
jns
ja
xor
cwtl
sub
shr
ficoml
pop
and
cmpsl
or
mov
loop
data16
mov
imul
push
pop
or
jbe
bound
cmp
xchg
fcomps
inc
lahf
decb
ljmp
jne
aad
lds
outsl
cwtl
sbb
sahf
popf
aaa
cld
shrb
jmp
jmp
out
sbb
scas
les
xlat
mulb
xor
leave
in
adc
rclb
xor
or
negl
sbb
lods
cmp
sti
fs
mov
call
cltd
cs
aam
popl
xchg
mov
xor
mov
xor
xchg
jl
test
test
test
popf
push
outsb
fs
or
lods
lcall
insb
adc
in
xor
mov
pop
insb
insb
mov
inc
aas
xchg
xor
inc
insl
inc
lods
in
aad
pop
in
lcall
sbb
arpl
mov
je
mov
sub
sub
mov
mov
in
int
repnz
inc
test
jne
inc
loopne
or
sbb
loop
adc
lds
int3
push
mov
les
orl
gs
ljmp
stos
jmp
or
sbb
lea
cmpsb
in
adcl
adc
ja
repnz
xor
mov
and
mov
mov
out
fildl
push
cltd
rcrl
cwtl
ror
lret
cmpsb
xchg
sbb
div
mov
push
es
mov
roll
mov
pushf
add
icebp
icebp
ror
lods
in
ljmp
inc
inc
fldl
fsub
cmpb
idivl
cmp
andb
xchg
push
out
into
stc
mov
loope
rep
in
push
iret
xlat
add
lcall
mov
fcoml
notb
movsb
push
sbbl
imul
loope
test
fwait
jl
test
test
and
push
or
inc
cmp
jmp
add
sti
sbb
cld
fisubrl
pop
cmpsb
dec
rorl
aas
sbb
fsincos
xlat
cltd
push
mov
mov
std
cmp
movsb
in
xchg
xacquire
sti
lcall
pushf
xchg
lock
xlat
inc
stos
xorb
pop
jb
inc
sbb
mov
stc
and
outsl
popa
in
fcoms
mov
push
jb
scas
adc
add
xor
dec
fmull
sahf
jbe
push
push
lods
test
pop
add
adc
in
jmp
out
lahf
mov
push
xor
popa
js
dec
cmp
leave
add
xchg
xlat
mov
scas
mov
xor
add
or
xor
xor
roll
mov
imul
sub
stos
outsb
out
dec
pop
ljmp
xor
mov
lea
out
jmp
aas
mov
or
cltd
pop
je
mov
dec
pop
mov
cli
pop
cmp
inc
adc
cmp
adc
sti
adc
pop
sbbl
lret
loope
mov
dec
scas
out
jnp
fildl
sub
rclb
or
xor
pushf
icebp
ja
in
lea
lods
repz
ss
loop
jno
shr
xchg
lret
sbb
testb
lods
into
into
dec
scas
in
loope
xchg
repz
jnp
out
dec
out
lods
movsb
xor
jmp
jl
and
lods
cmp
mov
dec
and
adc
xchg
pop
xchg
addr16
jmp
mov
mov
fmuls
pop
push
mov
or
push
fists
fidivrs
lahf
test
aad
mov
push
lods
sub
inc
shll
pop
in
jmp
mov
int
inc
push
fdivrs
pusha
fcoms
mov
xor
dec
lods
sbb
cwtl
jno
lods
rcr
xor
faddl
push
or
lods
aad
mov
adc
mov
jo
mov
popa
adc
rcrl
lcall
lock
in
daa
in
daa
ss
scas
dec
int
push
cmp
and
dec
in
xor
mov
call
cli
out
or
mov
aad
clc
mov
shrl
mov
pop
negl
or
aam
mov
in
cld
and
stos
lea
icebp
sbb
sti
sbb
mov
adc
insb
aas
ljmp
push
sbb
mov
loope
or
movsb
push
push
mul
out
bound
xor
mov
in
fcoml
sti
mov
and
or
or
sub
stc
std
xchg
inc
ja
sub
push
shrl
mov
movsb
and
test
inc
xchg
lods
cwtl
sbb
or
nop
std
orb
add
mov
fstp
push
repnz
jp
fisttps
push
lods
inc
es
insl
dec
icebp
adcl
sbb
pop
std
or
lea
inc
mov
das
xor
lret
pop
loopne
xor
and
lods
fdivrl
dec
fdivl
and
add
cltd
cld
fprem
and
sbb
or
nop
jno
pop
loop
popf
jmp
mov
andb
xchg
ret
aad
enter
in
push
dec
lret
jnp
pop
inc
imul
sbb
fildl
jmp
aas
xchg
add
jb
jg
push
test
ljmp
inc
addl
jecxz
add
or
iret
out
adc
inc
imul
mov
xor
shr
movsl
ljmp
adc
push
cmp
in
sbb
pop
shl
sub
cmp
xchg
or
dec
dec
inc
std
mov
pop
cmc
and
lcall
loop
jp
ret
aad
or
sbb
or
outsb
adc
lahf
out
mov
shll
mov
pop
push
mov
sub
mov
jae
sub
in
icebp
popf
fiadds
bound
xor
jae
out
and
repz
cmpsl
add
jmp
push
jl
cmpb
gs
in
mov
pushf
push
lahf
xchg
inc
dec
int
and
mov
icebp
mov
jge
mov
aas
orl
aam
mov
lret
pop
mov
into
mov
ja
add
dec
andl
movsb
icebp
negl
sub
ret
movsb
aaa
pushf
mov
dec
xor
sbb
shll
out
jge
adc
pop
leave
push
cmc
cmc
mov
pop
shlb
pop
and
ljmp
les
jae
in
jae
inc
pop
adc
dec
ss
jbe
xor
sbb
cmp
test
push
repnz
and
mull
push
jae
lcall
aad
mov
out
je
repnz
push
loopne
aad
ljmp
stos
int3
out
mov
sub
fcmove
rcrl
aam
data16
int
adc
or
jmp
in
push
test
loope
xor
std
imul
mov
jmp
jno
jne
insl
rcrb
popf
cwtl
mov
das
cmp
shr
loop
lock
jnp
xor
pusha
push
xlat
insb
or
xor
aas
call
pop
in
mov
and
stos
add
loopne
xchg
fildl
in
mov
arpl
repz
std
iret
out
rep
push
icebp
stos
gs
repnz
cmp
stos
sbb
loope
or
mov
add
or
fucomi
lods
push
xor
out
xchg
or
test
pop
inc
inc
divb
mov
adc
cmpsb
xchg
int3
adc
sti
in
xchg
rol
mov
inc
sbb
stc
in
lahf
lock
fnstsw
cs
insb
push
xchg
fwait
adc
in
cli
sub
inc
jne
imul
ror
lods
int
xor
mov
stc
xchg
inc
mov
sub
xchg
roll
lock
loope
pop
das
sbb
fucomip
lock
cmp
sbb
and
out
jge
rcll
push
imul
sar
and
jne
jmp
jmp
and
adc
mov
inc
and
stos
mov
idiv
lods
scas
inc
inc
push
xchg
or
in
jp
mov
rolb
out
pop
int
dec
adc
repz
xchg
mov
les
ljmp
fists
pop
or
in
fs
popf
push
enter
out
xchg
add
not
out
lock
and
push
lahf
pop
xor
lret
xchg
push
mov
in
cwtl
jecxz
lea
sbb
into
push
push
adc
ret
shrb
mov
lcall
push
mov
pusha
test
pop
jne
adc
push
pop
sub
inc
jmp
in
cltd
cmp
test
aas
xchg
mov
jmp
mov
pop
pushf
lcall
push
mov
xor
test
inc
pushf
movsb
sbbl
aas
fmull
aas
and
inc
cmp
lock
and
in
lock
test
cmp
push
rcrb
aam
xor
call
cld
clc
test
pop
clc
fdivr
jmp
mov
inc
orb
pusha
mov
pop
sbb
pop
jmp
aam
inc
sub
shr
inc
lock
pusha
lcall
pushf
xor
pushf
sub
fdivs
in
sbb
int3
pop
xor
sbb
xor
cwtl
sub
cld
sub
icebp
and
pop
pop
xor
mov
aam
xchg
cmp
test
push
stos
mov
push
push
add
or
xor
fneni(8087
pushf
sbb
adc
int3
xor
movsb
fadd
lock
fmuls
sbb
push
xor
add
movsl
sbb
rcr
pushf
lods
orl
test
mov
sub
fdivr
or
icebp
cmp
xchg
jmp
xchg
mov
push
push
loopne
repz
jmp
scas
popf
fsubrs
mov
pop
hlt
rorb
fs
test
imul
shrb
int3
pop
xor
sbb
lret
nop
pushf
dec
xorl
xchg
pop
hlt
fmull
cmp
pushf
inc
adcb
xor
xor
jno
adc
imul
pushf
lock
cld
mov
lds
jle
mov
jo
mov
or
popa
push
mov
xor
add
popf
xor
test
push
pushf
mov
mov
and
inc
inc
int3
stos
xor
call
lcall
push
mov
xor
jl
hlt
loope
add
mov
xor
mov
xor
mov
lods
stos
push
in
enter
in
lcall
push
mov
xor
lds
jb
pop
mov
lea
adc
imul
int3
shll
dec
xor
lea
mov
cmp
cmp
stos
sbb
add
clc
pop
and
fmuls
push
mov
and
mov
pushf
cld
jl
icebp
jo
jne
adc
imul
enter
stos
shr
inc
lock
sub
ja
lods
pushf
push
or
cld
sbb
int3
xchg
jmp
cwtl
mov
scas
pushf
inc
mov
and
rolb
fcompl
jmp
cld
enter
xchg
pop
pushf
jmp
lcall
push
mov
xor
inc
clc
xor
fistl
pushf
int3
cmpl
test
lock
je
xchg
stos
dec
in
lods
lock
pop
mov
and
pop
push
mov
xor
add
addl
xorl
inc
mov
lock
fcomps
sbb
cmc
xor
rol
test
dec
pop
jmp
push
and
rcrb
jmp
cld
clc
test
pop
mov
loope
mov
dec
pusha
xor
popf
sbb
pushf
or
insl
jmp
in
sbb
test
dec
lcall
nop
xor
pushf
push
or
cld
sbb
icebp
enter
call
mov
cmp
cwtl
inc
test
and
xor
jno
adc
push
call
pushf
enter
shr
dec
cld
mov
shl
dec
fcomps
add
inc
xor
add
addl
subl
mov
cmp
push
inc
int3
stos
xor
in
lock
lcall
push
mov
xor
dec
jmp
cld
dec
sbb
jl
jno
adc
push
jmp
shll
cmpsl
push
ret
sbb
sub
cmpsl
out
inc
xchg
jb
ret
out
push
mov
fimuls
mov
jecxz
sti
loop
call
push
test
aam
mov
dec
lods
mov
dec
cwtl
cmc
adc
push
pop
out
jae
pop
cltd
xchg
pop
xchg
sbb
and
out
clc
enter
mov
cli
pop
popf
xchg
test
in
dec
enter
addb
lret
test
fnstenv
pcmpeqb
into
xchg
packsswb
pop
mov
movsb
clc
jecxz
gs
sub
mov
shrl
jmp
xlat
add
movsb
xlat
sub
cltd
mov
push
ficoml
enter
jg
fistps
mov
les
lea
rol
mov
jmp
mov
cltd
mov
insl
dec
jns
mov
cs
jecxz
ret
loope
mov
pushf
ds
mov
xchg
sbb
nop
movl
or
mov
dec
dec
adc
loop
xchg
cli
jbe
xchg
test
cltd
jle
movsb
adc
popa
inc
adc
and
lods
push
jge
fsts
xchg
pop
nop
repz
ss
iret
lcall
lcall
cmp
mov
mov
inc
test
int3
lock
sub
lcall
push
fnstenv
inc
lea
in
popa
call
xor
mov
stos
mov
lahf
inc
rol
loope
out
rcl
push
adcl
push
cmpb
add
fisubrs
or
loope
subb
sbb
enter
xchg
jecxz
shl
or
ficoml
cltd
mov
xor
pop
js
aam
insl
stc
mov
je
lea
mov
enter
and
mov
stc
sub
mov
popa
mov
or
rcr
sbb
lea
xchg
add
push
and
outsb
mov
jne
xor
fst
sbb
stc
mov
popf
aad
fcomp
push
cmp
nop
dec
dec
adc
cld
pop
shlb
pop
cltd
cltd
aaa
adc
push
push
sahf
and
pop
aad
sbb
bound
lret
xor
mov
shrl
sub
add
insl
in
jno
hlt
ficoml
mov
pop
lea
sbb
fs
jne
xor
aam
adc
maskmovq
notl
lret
fldl2t
movsb
shll
out
mov
ds
push
mov
test
push
mov
push
adc
aas
dec
adc
pop
push
sbb
imul
pushf
pop
popa
jp
pop
xlat
data16
or
int
xor
and
je
pop
test
js
fnstenv
movsb
jge
movl
mov
or
dec
lods
call
int
mov
loope
stos
shlb
push
adcl
fisttps
test
dec
rcll
mov
mov
inc
fldcw
insl
inc
mov
lds
jae
mov
mov
sbb
and
xchg
sub
ret
in
add
out
cmpsl
mov
nop
rcrl
insb
xor
fyl2x
sti
daa
adc
sarb
sub
cmc
scas
mov
pop
add
loopne
fnstenv
test
in
mov
jae
scas
and
lahf
addb
jae
push
dec
sbb
pusha
fstp
pop
jp
or
enter
fs
out
test
sbb
je
not
fcomps
ret
cmc
ja
jb
and
in
js
and
out
push
icebp
jg
cmp
cwtl
fmul
lahf
jae
push
mov
and
jno
std
mov
push
movsb
xor
and
into
shll
cmpsb
adc
vunpcklps
lcall
sub
lds
ret
pushf
mov
dec
ljmp
mov
shrb
adc
out
dec
js
fldcw
jbe
ret
bound
push
fsubrl
aas
hlt
shrl
das
cmp
insl
test
cmp
xor
imul
frstor
xor
pushl
pop
cmp
cmc
and
or
mov
movsb
cltd
lahf
dec
xchg
int
mov
mov
sub
loopnew
mov
fwait
mov
rcll
in
cmp
push
mov
xchg
lea
jge
out
pop
mov
or
xchg
mov
jno
xchg
xchg
xchg
cs
lods
xlat
fistl
cmp
sub
sub
pushf
xor
xlat
dec
je
mov
mov
lods
rcrb
push
xor
lds
jae
ror
out
pop
fsubr
push
into
jb
loope
adc
sbb
mov
les
jb
sti
xor
cmpsl
mov
cmp
inc
test
sbbb
mov
push
xchg
insl
mov
test
int
shll
lds
or
inc
xchg
pop
dec
sarl
jle
sti
mov
pop
dec
mov
xchg
and
mov
aad
adc
lods
popf
ficomps
lods
fstps
test
xchg
daa
mov
xchg
dec
lret
mov
loopne
sti
cmp
mov
lock
je
fsubr
sbbb
aaa
out
push
cmp
and
in
repz
idiv
mov
jecxz
fiadds
repnz
shll
lods
mov
in
gs
mov
ljmp
ja
xchg
in
test
inc
sub
int
cmp
adc
ss
shlb
test
insb
pop
cmpsb
ret
cmp
mov
aad
mov
pusha
leave
ret
xchg
shlb
cmp
ret
insb
lcall
sbb
and
js
mov
mov
push
rcrl
sub
divl
out
xrelease
arpl
jb
xchg
test
xchg
es
fwait
out
lods
xchg
std
dec
out
sahf
inc
ss
mov
lods
mov
outsl
add
mov
push
sub
cmp
adc
mov
pushf
xchg
mov
out
cmp
insb
pop
sbb
in
les
xchg
repnz
scas
adc
pushf
xchg
cwtl
adcb
pusha
cmpb
jmp
je
int
sub
adc
insb
sbb
mov
imul
aaa
sbb
xchg
test
outsl
mov
adcb
mov
xlat
in
pop
cmpsb
xor
add
pusha
cmp
mov
mov
xor
mov
mov
movsl
push
or
mov
push
rcl
je
inc
out
in
fnstenv
inc
or
and
mov
cmp
in
mov
incb
sub
xchg
les
xor
inc
push
cli
in
movsb
cli
lcall
jge
mov
rcll
les
inc
xchg
xlat
push
or
mov
jge
fnstsw
mov
adc
pusha
stos
aaa
push
inc
fstp
fdivrl
xor
stos
pop
cld
fistpl
inc
pop
pop
push
sub
out
lods
rcr
iret
addl
mov
mov
mov
jle
cmc
in
out
ljmp
add
mov
insl
mov
mov
jge
xor
shll
lret
pop
enter
in
pop
rcll
hlt
mov
fwait
xchg
lock
repnz
fsub
lcall
mov
cmpsb
mov
stos
stos
xor
out
mov
cld
shlb
dec
fstpl
rcl
sub
sub
xor
test
sub
inc
lahf
loope
pop
ret
and
fisubs
insb
std
pop
jge
scas
sub
ja
jmp
xor
out
cwtl
mov
xor
dec
pop
dec
pop
push
pop
insb
sub
jg
cs
andl
aad
jmp
test
push
stos
cwtl
jbe
mov
mov
enter
ja
xor
sbb
shlb
repz
div
mov
xor
dec
mov
mov
pop
fdivr
fidivs
lods
sub
mov
cmp
aad
adc
into
inc
inc
mov
sbb
cwtl
jns
jmp
stc
into
or
test
fmul
sub
lds
in
and
fsubl
add
in
dec
mov
in
adc
mov
fstps
les
divl
shlb
insb
out
cs
xor
mov
hlt
in
div
add
push
imul
mov
dec
sub
dec
ret
fnstenv
push
xchg
add
jmp
mov
rolb
test
inc
out
jne
filds
idivb
fstpt
cmc
push
shll
push
fisttpll
cmpsl
rorl
xor
pusha
cld
jno
cmpsb
ret
cltd
push
mov
popf
repz
shll
jno
mov
stc
xlat
lret
sbb
imul
jnp
and
out
or
repz
js
pop
xor
cli
testb
in
pop
lea
push
mov
pop
cli
les
leave
in
inc
cmp
icebp
jno
movl
lods
mov
aaa
cmp
cmpsl
stc
jno
rorb
add
insb
inc
clc
or
cwtl
xchg
popl
in
xor
out
adc
hlt
cmp
and
push
cs
jne
out
mov
clc
ljmp
jb
pushf
push
xchg
xlat
lds
fisubrl
jae
out
loop
xchg
xchg
in
xor
cs
or
mov
out
dec
add
frstor
rolb
nop
lcall
fstpl
sub
pop
jle
xchg
test
mov
cwtl
fdivl
lock
and
sahf
mov
sbb
pusha
push
rcr
pop
hlt
rclb
fmull
clc
mov
popa
pusha
mov
or
imulb
orb
pushf
call
push
rorb
dec
and
jle
push
jae
pusha
into
flds
div
pop
popa
ljmp
inc
xchg
cmpsb
addl
rclb
flds
in
call
sahf
inc
shlb
in
jb
or
pushf
sub
int
sub
std
mov
xchg
mov
jg
cwtl
xor
sub
pop
add
push
mov
jecxz
add
addb
lods
jecxz
repz
iret
mov
cwtl
popa
push
mov
shlb
dec
push
aaa
mov
mov
testb
sbbl
inc
pop
pusha
lcall
movsb
pop
dec
mov
jno
ret
cwtl
mov
cmp
cltd
lods
mov
mov
test
aad
mov
pop
decl
add
mov
shl
stos
sbbb
and
mov
ror
movsb
loop
in
push
loope
pop
mov
xor
loope
dec
push
cwtl
imul
enter
notl
in
fisubrl
lods
fsubrp
repz
ret
dec
push
dec
incl
jl
xchg
cmp
imul
jno
and
fdivrs
jno
int3
sub
test
lea
aas
fdiv
mov
rcrl
insb
out
loopne
and
lods
outsl
das
test
mov
sub
jge
add
mov
mov
shll
sub
cs
xor
push
add
subb
mov
inc
loopne
addb
jno
loop
subb
sar
dec
aaa
mov
jl
mov
je
mov
mov
mov
cmp
inc
dec
adc
mov
psrlw
mov
fidivl
cmp
fcomps
insl
dec
insl
cld
clc
sub
sahf
cltd
add
enter
inc
test
and
mov
mov
fcoms
and
insb
mov
jnp
cs
xor
call
outsb
push
ss
jge
mov
hlt
mov
cwtl
push
sbb
push
sarl
pop
dec
std
push
stc
mov
dec
repnz
dec
mov
adc
in
sub
or
fs
mov
out
jp
mov
shl
pop
push
in
cmpsb
call
and
loope
add
mov
mov
ffreep
add
xchg
cli
jmp
lds
clc
inc
cmp
outsb
inc
test
pushf
dec
mov
cmp
lods
mov
cwtl
and
xchg
in
push
call
xor
xchg
inc
int3
and
in
test
pop
aam
jle
in
aad
mov
lcall
repnz
xchg
cmp
xor
sbb
stos
call
mov
ljmp
xchg
push
negb
insl
xchg
ja
test
out
addr16
xor
inc
scas
mov
pop
mov
or
call
pop
mov
pop
popf
insl
xchg
ja
mov
cmp
mov
xchg
inc
cltd
test
out
push
sti
hlt
cmp
cmpsl
add
test
mov
fldl
aam
mov
ljmp
sahf
push
negb
insl
out
jo
mov
test
sub
aas
jo
inc
cltd
mov
push
ret
inc
scas
cmp
adc
in
push
idivb
data16
add
xchg
xchg
in
loope
push
pusha
sub
out
cmpsl
test
test
xor
ljmp
test
sbb
xchg
xor
jmp
jns
inc
cld
cmp
enter
push
jmp
das
mov
sub
shll
andb
xor
xchg
movsl
sti
jecxz
xchg
rcrl
insl
pusha
out
mov
test
mov
movsb
push
and
movsb
inc
push
pop
mov
js
loop
addl
test
adc
call
sarl
fwait
adc
jo
push
jno
into
dec
decb
mov
daa
mov
cwtl
int
aad
shl
push
pop
mov
loope
push
mov
or
mov
in
sub
outsl
dec
insb
cmpl
adc
je
mov
and
jmp
jo
sbb
xor
jmp
shrl
sbb
mov
adc
add
cwtl
test
pop
mov
ss
insb
jl
insb
xor
jne
mov
pop
mov
mov
aas
dec
fcompl
ret
sbb
ficomps
fwait
cltd
ljmp
lock
test
mov
or
dec
out
in
shlb
fs
fstl
ja
xor
cli
add
inc
cmp
ss
out
pusha
dec
xchg
out
xchg
mov
in
mov
imul
mov
xchg
shrb
push
push
icebp
rolb
int
lock
inc
cwtl
stos
test
lock
mov
xchg
pop
pop
rcr
in
mov
mov
enter
icebp
fadds
rol
ljmp
jno
sbb
mov
addb
sub
mov
mov
shlb
les
inc
cwtl
lret
cwtl
xchg
inc
aam
idivl
mov
jmp
shlb
inc
jns
or
cmc
dec
mov
test
fnstcw
mov
cmp
jmp
cld
or
jmp
fcoml
add
in
sbb
enter
sbb
icebp
sub
lret
xor
sahf
mov
inc
jo
pushf
inc
test
sarb
xchg
xor
movsb
pushf
inc
xorl
xchg
xor
dec
jmp
enter
mov
lea
hlt
push
pop
aam
or
inc
xchg
inc
rorb
pop
jno
mov
cmp
addb
push
and
fs
add
xor
fcmovnbe
pushf
xor
hlt
cld
sbb
icebp
cmp
mov
cmp
int3
inc
sub
test
inc
xchg
movsb
fucomp
nop
mov
cmp
mov
stos
pushf
out
lods
insb
shrb
fcoms
insb
mov
cmp
and
stos
xor
in
or
in
lcall
push
mov
fsubrs
mov
fisttpl
andl
jl
ljmp
and
test
pop
inc
mov
lock
lcall
push
mov
scas
xor
mov
adc
or
adc
je
xchg
test
mov
and
mul
mov
movsl
adc
int
vandps
enter
rorl
or
fistpll
or
lret
or
sbb
les
mulb
int3
and
bswap
in
sbb
sub
push
adc
jb
lods
addl
xor
outsb
adc
adc
mov
add
jl
test
lds
jge
jno
push
movb
pushf
xor
roll
lods
xorl
or
xlat
in
pusha
fs
or
loopne
push
lds
inc
dec
fistpl
iret
xchg
sbb
push
sbb
sbb
mov
out
pop
dec
and
fcomi
andb
call
add
fidivrl
mov
push
lods
stc
mov
in
incl
jns
cmpsb
adc
push
loopne
rorl
cmpb
and
pop
in
cmpnltps
cmp
jmp
out
adc
sbb
adc
pop
mov
mov
xor
mov
out
aad
or
mov
pushf
jecxz
ja
mov
in
mov
jo
outsl
mov
pop
adc
mov
or
jecxz
add
into
movsl
imul
jns
int3
add
std
pop
inc
loop
es
shrb
test
pop
pop
sar
in
int
adc
cltd
movsb
cmpsb
inc
dec
jno
pop
fcmovb
mov
es
fcomps
xchg
test
aas
mov
dec
in
push
lods
mov
rorl
lods
test
cmpsl
dec
pop
mov
sarb
in
sbb
cmpsb
or
xor
inc
lcall
test
mov
xor
dec
xor
mov
cmpsb
cmp
xchg
jge
aaa
lock
and
pop
mov
inc
push
sbbl
mov
or
jo
std
fsts
or
pop
loopne
pop
push
mov
pushf
mov
je
dec
and
movsb
in
mov
fisubrl
pop
jb
enter
ret
inc
jne
and
dec
nop
mov
scas
cmpsb
adc
testl
jl
mov
mov
ljmp
in
out
push
xor
jae
pop
lock
mov
sub
mov
out
lea
repz
mov
out
fwait
jnp
inc
sti
pushf
sti
cmp
mov
mov
outsb
push
lahf
outsb
pop
inc
and
cmp
aaa
push
sub
lock
imul
aam
stc
stc
outsl
rcll
cmc
xchg
divb
stc
and
testb
add
sahf
sbb
cli
xor
sbb
pop
adc
lods
xchg
xchg
xchg
ja
push
xchg
cmp
test
xchg
lea
rclb
mov
mov
xor
fwait
adc
cmp
xchg
sbb
in
dec
pushf
xor
sub
punpckhdq
adcl
mov
mov
and
mov
std
in
stos
icebp
imul
divb
cld
xchg
push
cmp
imul
lahf
mov
jae
in
fcmovne
out
ja
mov
in
push
xchg
lods
dec
loope
rcrb
or
mov
or
lods
insl
decb
and
bound
sbb
sti
sub
cmp
ret
push
mov
xchg
stos
lahf
fcomps
push
or
rol
lret
out
push
or
pop
repz
shlb
xchg
imulb
xor
popa
lret
xchg
fsubs
xor
mov
pop
push
cmc
fwait
or
sbbb
push
lods
movsb
jnp
mov
inc
sbb
cltd
push
mov
cltd
mov
cltd
insl
add
popa
stc
call
cld
mov
mov
push
std
int3
mov
lock
jno
lds
aaa
jno
dec
rcr
nop
xchg
push
mov
dec
sub
add
xlat
cwtl
int
fucom
loope
lahf
lea
test
mov
adc
shl
aaa
mov
aas
mov
mov
mulb
cmp
add
stos
pop
loope
adc
repnz
cmpsb
imul
outsl
iret
mov
lret
xchg
pop
jbe
xchg
ss
lret
sub
mov
lahf
lret
inc
mov
icebp
cmc
jg
insb
jno
cmp
mov
repz
out
or
std
sbb
fadd
popa
jae
lock
into
add
mov
xchg
push
cmp
filds
aad
jl
push
aad
mov
and
xchg
shll
cltd
movsb
xor
scas
cmp
loopne
xor
cmp
mov
fisttpll
cmp
movsb
or
fwait
shll
rorb
mov
inc
pushf
lods
in
jb
test
fsubs
gs
inc
out
test
dec
pop
repnz
sbb
rcl
mov
pushl
and
xchg
popa
repz
xchg
mov
popa
bound
xchg
movsb
sahf
jecxz
dec
xchg
loopne
fsubrs
inc
aam
xor
rcr
sub
xchg
xor
mov
inc
lea
aaa
or
adc
sbb
in
add
mov
lds
xchg
mov
cld
adc
jge
je
or
movsl
mov
push
xor
ss
add
cmp
inc
push
repnz
jmp
pop
je
xor
mov
pop
jnp
divl
pop
cld
enter
mov
call
addr16
pop
xchg
or
mov
push
out
sbb
movsl
or
and
stos
adc
xchg
mov
jae
rclb
stc
xor
sbb
arpl
adc
aad
and
cmc
inc
pop
add
loope
pop
push
sbb
test
setge
test
gs
cmp
outsl
bswap
sub
mov
add
pop
icebp
push
jl
jecxz
fstps
stos
inc
movl
lea
mov
aas
pop
in
xchg
fs
cmp
sub
dec
loope
or
lods
add
call
mov
ljmp
pushl
adc
sbb
xchg
dec
jl
clc
cltd
or
movsb
adc
stos
sub
cmp
mov
inc
inc
repnz
insb
loopne
movsb
fldl
loopne
push
xlat
mov
inc
mul
mov
push
jp
or
mov
adc
xor
loop
nop
aas
mov
push
loopne
jnp
adc
ss
sar
add
sbb
push
jecxz
into
into
add
movsl
scas
fwait
es
jo
pop
lret
mov
fs
lods
mov
add
call
lahf
and
cmp
scas
push
stos
hlt
sub
icebp
out
fnstcw
xchg
sbb
ret
in
ja
xchg
mov
cmc
sub
ds
dec
or
pop
insb
rcrl
add
dec
fsubrp
xchg
in
add
and
and
out
jge
out
popf
xlat
and
and
xorb
mov
std
aas
shlb
insl
mov
xor
dec
cmp
add
out
fs
add
shr
lods
inc
push
orl
arpl
daa
mov
sub
int
inc
lock
cmp
repnz
mov
les
mov
loopne
mov
or
mov
mov
movb
data16
adc
push
adc
mov
lret
pop
cwtl
das
xchg
mov
cmp
pop
int3
fldl
idivl
arpl
xchg
mov
outsb
xchg
mov
adc
cmpsl
loope
es
jmp
popa
dec
daa
ja
fimull
xor
cmp
add
js
hlt
es
pop
lods
lods
idivb
loopne
jnp
mov
sbb
dec
test
push
lret
repnz
dec
sbb
push
or
mov
sahf
bound
sarl
in
in
adc
stc
bound
ljmp
ja
aad
inc
jbe
add
inc
cld
xor
cmpsl
dec
leave
int
xchg
adc
push
out
or
jo
inc
fbld
dec
adcl
outsb
in
insb
movsl
push
int
pop
xor
ret
mov
shl
push
aam
mov
sub
bound
push
fsubr
mov
jbe
inc
pop
xchg
in
loope
jecxz
incb
add
pop
mov
push
cmc
shlb
lock
jnp
repnz
repz
mov
cmp
mov
mov
jecxz
pop
or
mov
inc
inc
xchg
repnz
add
push
cmc
mov
xor
push
lock
jae
scas
loopne
or
mov
pop
or
shlb
ljmp
aaa
in
cmp
faddl
ss
fmulp
cmp
sub
push
dec
shlb
sahf
outsl
cmp
popf
pop
ds
popf
or
lods
insb
das
mov
sarl
les
out
mov
pop
adc
and
popa
dec
daa
in
rcll
cwtl
lock
movsl
add
les
sbb
pop
cmc
xchg
inc
mov
cmp
data16
rorb
push
daa
mov
xlat
js
roll
ret
in
out
aas
cld
add
pop
lods
xchg
cld
shll
or
or
inc
sub
repnz
adc
mov
mov
mov
out
cmp
fistl
pop
or
pop
pop
mov
xor
push
es
and
mov
pop
mov
into
ss
or
inc
pop
cltd
mov
shlb
mov
inc
add
adc
push
lock
push
cld
ret
lea
ficoml
adc
aam
lret
or
je
sub
iret
ret
lahf
adc
pop
in
fs
add
or
js
rol
xor
mov
push
lds
sarl
aad
pop
xchg
lods
int3
fcmovnbe
ss
add
push
xor
mov
dec
int3
xchg
jnp
fs
addb
in
xor
int
mov
fldl
inc
xchg
or
pop
sbb
fs
shr
scas
push
jg
iret
mov
push
in
sub
inc
out
cmp
mov
jns
or
cmp
xlat
mov
inc
dec
fucomi
inc
lret
insb
push
sbbb
xchg
icebp
into
xchg
fldl2e
xor
and
stc
mov
fnstenv
add
movsb
xchg
aam
dec
sbb
or
and
shrl
js
filds
adc
pop
arpl
out
jl
inc
lock
mov
add
and
jns
push
mov
adc
xor
aam
xor
in
and
cld
pop
in
push
or
jo
fsubrl
ss
stc
mov
aad
xor
xchg
sti
cmpsl
in
mov
in
stos
adc
mov
jno
int
sub
sti
xorl
in
add
xchg
test
out
out
shll
cmc
adc
mov
and
add
je
in
cmp
pop
daa
addr16
out
lock
sub
je
aaa
pop
mov
mov
stc
inc
adc
fisttpll
sub
adc
fidivl
inc
mov
mov
jno
testb
cmp
out
cld
mov
dec
sub
and
inc
push
pusha
loope
loop
mov
icebp
dec
scas
pop
adc
iret
jecxz
ljmp
jne
sub
push
stos
xor
push
dec
loop
xchg
stos
push
jne
int3
ljmp
adc
pop
loop
lret
xor
pop
imul
xchg
push
repz
insl
roll
mov
cmc
sbbl
iret
adc
dec
loop
dec
or
sbb
out
sbb
notb
jne
adc
enter
dec
mov
ror
ret
loope
xchg
mov
loopne
or
xchg
sbb
insb
lret
bound
inc
std
dec
inc
xor
rclb
mov
sbb
iret
fwait
pop
or
jo
sarb
pop
inc
mov
cmp
xor
push
fidivrl
xor
and
jae
sti
and
lret
or
pop
popf
nop
loope
add
push
test
xor
aad
sahf
push
loope
mov
xor
push
add
call
lret
and
xchg
sub
or
pushf
or
jmp
sub
add
data16
ss
fwait
sbb
push
jmp
pop
cmp
jle
nop
xchg
cmp
cmpsb
mov
adc
mov
sbb
and
sbb
sti
mov
mov
and
mov
mov
sbb
jmp
pop
outsb
ljmp
pop
rcrb
imul
or
cmp
push
out
cs
ret
or
call
incl
cmc
mov
mov
cmc
lret
inc
gs
lcall
ficomps
sarb
out
or
jle
ffree
movsb
imul
jae
xor
ret
xacquire
fwait
xchg
mov
xchg
mov
les
nop
or
sar
rcr
xchg
dec
rcll
mov
mov
adc
clc
add
push
shl
mov
shl
lods
shlb
lds
rep
lret
shl
mov
and
xchg
into
sub
stos
leave
pop
pop
xor
mov
xchg
inc
les
mov
and
dec
out
out
mov
sbb
jmp
lds
xor
pushf
gs
jmp
popf
xchg
push
fldenv
cmpsb
mov
mov
daa
or
xchg
test
push
enter
and
cmpsl
popa
out
in
mov
jg
in
sbb
mov
push
push
sti
scas
test
pushf
bound
mov
fsub
fsubp
rcl
into
adc
jp
int3
xchg
or
jp
inc
bound
inc
cmp
mov
mov
or
cs
cmp
loope
std
stc
out
add
lds
xor
inc
psllw
pusha
jno
cmpsb
clc
add
nop
popf
stc
imul
push
lcall
push
out
add
repz
add
cmc
inc
add
inc
cmp
scas
push
divb
mov
push
pop
aad
push
mov
aad
adc
jb
pop
inc
sbb
dec
lret
fsubs
fstpt
enter
gs
fldl
jmp
add
insb
fs
mov
cmp
daa
iret
cmpsl
jmp
es
mov
call
push
cmp
jecxz
pop
mov
sub
rorb
addl
xchg
int
out
out
notl
jle
xchg
loop
lods
nop
mov
mov
cltd
sti
push
adc
push
out
sti
sbb
xor
and
sub
test
lcall
xor
js
lock
shrb
mov
cmp
outsl
nop
nop
ss
push
lods
adc
test
pop
clc
fldl
out
mov
add
test
push
rcl
pop
xchg
rorb
fisttpll
mov
push
push
std
nop
dec
lret
jno
repz
cmp
push
push
lds
cli
nop
mov
xor
mov
mov
add
xchg
jl
and
mov
jnp
jno
in
movsb
daa
lods
and
inc
ss
dec
out
pop
xchg
cmp
push
pop
fld
inc
gs
push
fldlg2
lods
jae
loope
ffree
and
iret
imul
in
aad
fidivrl
cmp
movsl
lds
aaa
out
sbb
test
cmpb
push
int3
in
test
dec
pop
inc
inc
iret
cld
push
cmc
sbb
nop
aas
jns
and
mov
xchg
jb
out
push
ds
insl
repnz
mov
aam
int
inc
call
mov
gs
movsb
jno
jne
xor
ret
pop
sub
pop
test
mov
ffreep
mov
pop
sub
ss
add
xor
andl
sbb
jp
inc
add
shlb
into
pop
push
in
test
mov
xchg
or
push
int
mov
mov
testl
rcrb
push
lock
cwtl
out
fsub
ftst
and
aad
mov
mov
into
shl
sbb
mov
jmp
cmp
in
fimuls
pop
loopne
fstl
mov
rcrb
addr16
xchg
push
or
ffree
mov
lahf
push
mov
enter
pushf
sub
mov
adc
mov
cs
in
xor
out
stos
nop
cwtl
pop
mov
sbb
in
pusha
sbb
mov
jno
sarl
mov
lods
sbb
pop
sahf
mov
inc
cs
and
inc
cld
icebp
clc
pop
aad
push
xor
pop
rolb
js
fld
push
and
push
lcall
jmp
pop
daa
stos
sub
subb
dec
push
pop
mov
nop
add
inc
pop
push
mov
dec
adc
cmp
js
add
sbb
adc
push
pop
push
xchg
pop
les
arpl
xor
stc
ljmp
and
les
insl
repnz
mov
add
insb
mov
popf
pop
loop
inc
out
std
cmp
out
push
fwait
inc
out
push
jge
adc
loope
mov
arpl
dec
xchg
cmp
mov
pop
test
outsl
pusha
sub
fldl
mov
cli
push
mov
popa
lods
and
les
in
adc
daa
or
ja
pavgb
xor
into
jne
das
int3
sbbl
push
add
adc
pop
lock
mov
jl
sub
xor
loope
out
dec
repnz
xchg
pusha
pop
adc
rclb
adc
add
out
mov
inc
adc
pop
xorb
sbb
push
out
mov
out
adc
notb
ljmp
popf
out
and
insl
cli
jb
dec
stos
xorl
sub
int
push
and
sbb
fidivrs
stos
sbb
into
in
lods
xchg
out
xchg
mov
adcb
or
leave
lock
add
pop
mov
daa
mov
jle
mov
loop
lret
sub
push
fdiv
cmp
lahf
cmp
insb
aaa
sub
in
jo
test
pop
sbb
push
and
add
mov
sbb
lahf
sbb
mov
stos
xor
pop
pop
pop
pop
idiv
sub
pushf
mov
pushfw
jno
cmpsb
jno,pt
add
filds
cmpsb
sub
xor
push
jmp
xchg
or
int3
stos
or
loop
push
shll
cmp
sahf
adc
cmp
adc
jecxz
jbe
in
stc
adc
push
dec
loopne
iret
adc
or
pop
rcll
push
shrl
stos
dec
insb
int
jg
enter
or
int3
hlt
mov
notb
lret
mov
sub
rolb
lea
mov
cmp
call
jmp
cld
dec
sbb
jl
jno
or
insl
jmp
xor
inc
in
in
adc
sbb
std
xor
rol
jl
insb
mov
popa
mov
jno
add
or
xor
fcmovnu
pushf
or
cld
cld
in
mov
pop
in
faddl
cmp
mov
pusha
stos
cwtl
out
mov
leave
jmp
mov
pop
mov
sbb
dec
xor
add
lods
and
rcr
pushf
aam
dec
sub
int
inc
in
dec
mov
pop
pop
mov
and
mov
int3
add
test
cmp
jmp
cld
add
cmp
cmp
pushf
lcall
push
mov
xor
dec
add
in
adc
jmp
cld
aam
icebp
xchg
xchg
pop
movsb
jmp
iret
adc
adc
pop
jl
jne
xor
aad
xor
call
sub
jmp
cld
cld
test
pop
lock
cmp
mov
stos
cwtl
in
jl
push
add
lcall
push
mov
xor
add
xchg
sub
fcomp
cmp
jmp
cld
test
lock
loope
mov
dec
pop
lods
lcall
push
mov
xor
mov
xor
aam
inc
sub
fyl2x
mov
shl
loopne
mov
sbb
or
add
push
pop
sub
inc
clc
xor
fistl
lock
aam
icebp
mov
aad
lods
mov
cmp
insb
cmpsl
or
mov
mov
push
pop
mov
sbb
push
push
mov
xor
add
xchg
sub
rcr
dec
pushf
mov
jmp
cld
nop
xor
xchg
stos
je
mov
lcall
push
mov
xor
add
mov
sub
jmp
cld
mov
icebp
lods
xchg
push
test
lea
push
add
push
call
pushf
in
orl
cld
int3
test
cld
xchg
pop
mov
loope
cwtl
mov
cmp
enter
sbb
jmp
scas
popf
lea
mov
xor
mov
pushf
cld
andl
aam
icebp
xchg
xchg
pop
movsb
jmp
xlat
dec
sub
xchg
jmp
sbb
inc
hlt
stos
adc
add
in
sbb
enter
sbb
loope
cwtl
add
int
clc
cli
cmp
pop
pusha
fcompl
jmp
add
shrb
sbb
lcall
push
mov
xor
add
jmp
test
adc
mov
xor
sbb
mov
pushf
xor
clc
cld
in
movsl
icebp
faddl
sub
xchg
mov
insb
stos
cwtl
out
test
movsl
pop
dec
shlb
movsb
xor
pushf
push
add
cld
or
icebp
cmp
mov
enter
fdivs
inc
inc
stos
movsb
in
push
lock
pusha
lcall
mov
js
pushf
pushf
dec
subl
xchg
and
push
jmp
sar
sbb
int3
in
xor
rcrb
lcall
push
mov
adc
jne
nop
lock
mov
js
jno
or
pop
pop
xor
dec
add
loopne
adc
hlt
andl
cld
lods
stc
icebp
pushf
xchg
pop
lods
fadd
jmp
lcall
push
mov
xor
pop
hlt
xor
pushf
in
orl
cld
int3
cltd
icebp
lock
jmp
mov
pushf
inc
mov
test
pop
rcrb
mov
sub
enter
in
add
hlt
cld
adc
jmp
hlt
rolb
stos
movsb
in
push
lock
pusha
lcall
pop
int3
jne
pop
mov
lea
mov
xor
pop
lock
add
jmp
cld
fmuls
pop
nop
fsubr
jmp
mov
cmpsl
push
dec
add
shlb
sub
lcall
push
mov
xor
add
popf
xor
aam
inc
pushf
movsb
adcl
test
repz
cmp
nop
lcall
push
mov
xor
add
dec
add
cld
fistpl
pushf
rolb
cld
mov
fstpl
jmp
dec
lock
je
icebp
jo
or
gs
xor
inc
add
in
in
or
jbe
and
sbb
stc
xor
rol
mov
push
fsubrl
cmp
push
inc
int3
stos
cmp
fdiv
or
hlt
lcall
push
mov
xor
add
std
push
xor
pop
insb
stos
mov
mov
jmp
cld
sub
adc
inc
jmp
enter
stos
shr
lock
lcall
push
mov
cmp
cmc
rorl
sbb
pop
add
jno
or
popa
cmp
add
cld
stos
call
pop
sbb
hlt
lea
call
mov
xor
rcr
jo
adc
jmp
push
and
shl
or
lcall
push
mov
xor
add
in
pusha
xor
jl
fsubl
jmp
je
inc
shrb
pop
loopne
add
lock
test
pop
cld
shl
dec
xor
subl
xchg
cmp
jl
cwtl
stos
dec
in
test
pop
pop
mov
adc
inc
xor
add
test
xor
jmp
cld
mov
icebp
mov
int
inc
leave
int
lock
lods
lcall
push
mov
xor
add
dec
add
in
sbb
enter
fsubr
cmp
aam
icebp
mov
fucomp
mov
rcrl
lea
mov
xor
pop
or
fdivl
or
in
pushf
sbb
adc
hlt
xchg
icebp
call
fdivr
jmp
test
jmp
jecxz
cmp
pop
add
add
pushf
cmp
fsubrs
or
in
cld
sbb
rolb
jmp
cld
test
dec
stos
mov
pop
jo
push
and
lods
pushf
pop
cmpl
xchg
cmp
mov
enter
fmul
inc
sub
mov
lea
int
inc
int
xchg
mov
in
cwtl
lock
pop
mov
push
les
pop
xor
add
movsl
sbb
rcr
pushf
aam
inc
sub
lock
int3
dec
mov
inc
pop
mov
adc
insl
push
mov
xor
add
mov
sub
jmp
cld
mov
lds
xor
jno
je
icebp
push
fsubl
sbb
push
cmp
sbb
clc
stos
in
in
or
cld
pop
and
les
push
mov
xor
rol
test
ret
push
xchg
pop
pusha
fcompl
jmp
or
inc
fsubrs
sbb
clc
lcall
push
mov
xor
add
jmp
jo
push
and
pop
add
or
xor
fneni(8087
pushf
add
lock
jmp
cld
lock
icebp
hlt
xchg
jmp
lods
cwtl
inc
jl
push
and
jmp
add
inc
aam
xor
in
add
lcall
push
mov
xor
add
in
xor
pop
cwtl
insb
lcall
dec
in
test
pop
pop
mov
adc
pop
xor
mov
and
shlb
loopne
cld
aas
jmp
mov
addr16
imul
div
arpl
mov
test
popa
mov
sbb
fnstenv
fs
in
daa
jge
mov
pushf
mov
and
lahf
xor
sub
jbe
push
mov
sbb
outsl
dec
pop
mov
mov
je
test
fimull
add
xchg
dec
jmp
aaa
dec
mov
cli
jge
fiadds
out
es
lahf
stos
lcall
pop
mov
sahf
mov
js
sub
inc
jecxz
adc
icebp
cmpsl
jne
int
xor
inc
pop
push
clc
andb
std
adc
push
je
sahf
movsb
cmc
xor
imul
or
xchg
andl
sub
aad
roll
daa
mov
or
daa
mov
ror
adc
shll
or
pop
sarl
jo
adc
xchg
push
add
mov
cmp
movsl
lock
push
rolb
mov
mov
insl
rolb
cmp
mov
out
lahf
insb
or
ljmp
inc
popf
sbb
cli
pop
sbb
inc
leave
jg
mov
sbb
hlt
or
and
mov
cs
mov
and
repnz
aad
cwtl
std
pop
jge
notl
pop
repnz
lret
push
call
xor
sub
mov
loope
mov
cli
repnz
movb
pushf
push
jmp
sub
sarb
mov
add
mov
sbb
scas
sub
in
mov
popf
add
jmp
cmp
dec
fisubrl
aas
or
lods
pushf
add
inc
fmuls
test
call
icebp
push
mov
or
cwtl
xchg
mov
mov
jns
popl
nop
sbb
in
fisubrs
in
adc
adc
iret
jmp
jo
mov
cmp
cmp
lock
mov
pop
int3
mov
iret
sub
sbb
inc
xor
xchg
cltd
lcall
leave
sub
jo
hlt
es
in
push
fidivrs
faddl
pusha
adc
imul
sarb
mov
test
pusha
fldl
andb
movsl
in
adc
mov
mov
mov
pop
imul
mov
negl
push
mov
mov
fiaddl
pop
int3
jge
mov
sbb
fidivrs
push
cmpsb
loope
std
ja
dec
movsl
mov
stos
xor
loopne
xor
lds
or
sub
mov
push
mov
dec
fnstenv
cmpsb
loop
mov
orb
outsl
repnz
dec
fmul
mov
lock
rorl
stc
loope
dec
gs
shl
mov
or
mov
or
mov
rcll
es
in
jmp
dec
pop
das
ljmp
push
cmp
lds
shll
or
inc
pushf
movsb
push
lahf
test
incb
lods
call
test
fbstp
ffree
xchg
sub
pushf
inc
adc
mov
fdivs
mov
lock
subb
ljmp
adc
push
popa
push
in
cwtl
and
mov
jbe
test
mov
sbb
clc
test
es
fidivl
jne
or
push
scas
popa
fstpl
mov
jo
cmpsl
gs
test
or
adc
lds
mov
sub
xchg
sbb
sub
lock
pop
sti
pop
aam
pmaddwd
test
les
call
sub
pushf
mov
mov
and
mov
xchg
ss
sub
aaa
in
adc
sbbb
pop
out
jo
test
pop
pop
mov
and
pushf
popa
in
pop
inc
fcomps
push
test
cmp
sti
les
jmp
dec
fsubl
dec
xor
int
shr
pop
in
arpl
jo
xor
xor
int
add
xchg
fucom
insl
std
mov
push
jae
and
repnz
mov
das
fsts
sub
xchg
mov
dec
jb
shrl
fldenv
fiaddl
or
test
pop
mov
xor
sbb
ss
xlat
mov
in
add
enter
mov
rcrl
mov
ret
mov
xor
lea
test
jmp
in
mov
std
sbb
adc
push
lods
fmull
push
xlat
test
adc
push
jnp
mov
sub
jg
fdivr
cli
cwtl
inc
fst
loopne
push
cltd
icebp
cld
in
pushf
mov
fisubs
ja
dec
add
or
shrl
xchg
cltd
xchg
fldcw
js
jo
inc
mov
lock
mov
cmc
mov
push
rcl
lahf
in
movsb
push
fs
rcrl
sti
sbb
mov
rclb
add
xorl
fsts
test
rcrl
test
fsubl
mov
adc
into
mov
pushf
pop
in
rcrl
pushf
jecxz
cmc
push
mov
adc
pushf
mov
imul
cmp
in
sti
adc
xlat
mov
ret
adc
int
push
popf
cmc
mov
jno
mov
stc
lea
gs
imul
inc
fists
sbb
xor
loop
jb
mov
pop
sbb
cwtl
or
test
in
call
addr16
sahf
outsl
dec
fcomps
xor
cmp
xchg
add
movl
mov
lods
lock
movsl
jo
mov
in
adc
test
stc
arpl
add
in
das
fnsave
int
ss
inc
lcall
lea
push
jle
cmp
clc
inc
shrb
jno
test
or
rcll
test
out
test
mov
lods
mov
in
pop
test
pushf
stos
ret
loopne
rorb
int
push
sbb
insl
outsl
adc
in
cwtl
xchg
push
test
inc
add
std
sub
shr
stos
dec
xchg
inc
test
adc
cmp
test
sbb
sbb
sub
in
ja
xor
ret
or
mov
mov
add
test
mov
jne
dec
in
rol
xlat
sbb
insb
fstps
mov
shlb
jno
pop
cld
mov
cmp
xchg
lds
out
out
or
ds
xchg
popf
mov
sbb
sbb
pushf
push
lret
jb
loopne
and
jae
adc
loop
sbb
cmp
push
movsb
imul
orl
cmp
mov
sub
lods
test
push
adc
and
mov
xor
mov
out
mov
call
icebp
inc
and
mov
sbb
push
js
test
adc
jb
mov
pop
xchg
data16
orl
cmc
nop
and
call
xchg
lods
test
fiadds
xor
add
imul
imul
scas
mov
call
sub
mov
cmc
lahf
ffree
xor
mov
mov
xchg
lds
inc
out
inc
pusha
add
sahf
fisubs
std
mov
cmp
push
lea
icebp
lock
std
push
cmpsb
fstps
mov
adc
fsubs
fmull
mov
ret
sub
rcrl
cmpsl
xor
scas
pushf
pop
mov
test
iret
mov
cwtl
pop
sbb
loope
int
inc
repnz
cld
out
pop
ror
stos
sbb
and
adc
mov
and
adc
rol
pop
sbb
pushf
mov
pop
sbb
test
jl
jbe
adc
mov
lods
adc
pushf
lods
lret
dec
mov
div
out
add
inc
lcall
mov
lods
xor
out
adc
lock
adc
pop
shrl
outsb
psubusb
testb
cmp
and
pop
mov
imul
push
mov
das
fwait
loopne
fsubs
or
mov
xor
fstps
cs
in
rcrb
pop
ds
xchg
push
lock
push
sti
push
fmul
in
sub
mov
jmp
xchg
lods
push
shr
mov
add
ret
outsb
rclb
dec
imul
push
out
mov
fsubr
mov
jge
popa
lcall
lea
or
mul
hlt
test
popa
xor
mov
lret
sbb
jnp
out
xchg
mov
adc
adc
pop
mov
xor
add
in
mov
sbb
aaa
test
push
movsb
xchg
sub
stos
push
lea
jmp
mov
lods
mov
sbb
fidivl
pushf
lods
imul
shll
xor
fbstp
imul
xchg
pushf
cwtl
aaa
hlt
out
cli
arpl
inc
stc
or
push
pop
lret
cs
xorl
loopne
mov
lret
out
bound
mov
pop
je
test
jnp
jl
jecxz
push
stos
insb
mov
sbb
xchg
cmp
fnsave
xor
insl
mov
test
enter
xchg
sub
mov
imul
xor
or
dec
add
into
roll
mov
insb
or
jo
clc
lods
aas
enter
adc
test
xor
mov
sbb
out
jb
test
adc
popf
mov
rcrl
popa
jo
stc
sub
lret
test
xor
mov
call
cli
mov
xchg
je
sbb
or
xchg
mov
mov
testb
lock
fdiv
incl
mov
push
cwtl
loope
fcompl
mov
sbb
stc
push
mov
repnz
or
test
mov
filds
aad
repnz
sub
cmp
sbb
arpl
pop
xchg
xor
cwtl
jo
orl
lcall
dec
and
sub
add
repnz
pusha
pop
clc
bound
cmp
in
mov
jg
insb
out
not
mov
dec
sub
pop
cmp
add
sbb
in
xchg
loopne
fimuls
stos
int
data16
lea
fdivl
sbb
ljmp
out
adc
shl
lret
dec
aaa
imul
out
lock
fcoms
adc
push
mov
pop
lcall
jnp
out
sub
popf
fcompl
out
stos
sbb
ljmp
add
or
fstps
pop
fs
fmuls
pop
imul
cmp
pop
sub
cltd
sub
lcall
pop
rcrb
loop
mov
les
mov
pusha
adc
mov
cmpl
pushf
xchg
test
push
pop
stc
stos
or
cwtl
pop
mov
mov
mov
dec
movsb
inc
lds
jne
cmp
iret
shl
scas
test
jmp
sbb
push
push
arpl
mov
add
mov
xchg
pushf
aad
push
ret
mov
std
roll
jmp
jmp
xorl
add
cmp
fldenv
sahf
fdivl
sub
mov
arpl
jecxz
pop
nop
sbb
push
fbstp
and
icebp
aaa
sbb
cwtl
mov
fidivs
cmpsb
jle
loopne
insl
repz
data16
inc
lods
je
in
pop
loop
mov
jge
pushf
je
into
out
aaa
mov
or
lods
add
mov
and
lock
jo
pop
and
adc
in
and
test
insl
cld
fisttpl
jg
mov
in
fldlg2
int3
mov
rcll
xor
loopne
mov
ss
mull
mov
sbb
xor
les
pop
andnps
xchg
popa
jge
rcrb
loope
pop
fildl
xor
xchg
lods
mov
mov
cwtl
pop
mov
cmp
xor
mov
jo
mov
jp
faddl
push
int3
xor
jmp
in
test
jecxz
sbbl
pushf
pushl
mov
into
je
mov
adc
test
subb
fdivrl
inc
pop
outsb
fisttpll
push
mov
mov
incb
stc
in
jbe
sub
mov
imul
cltd
in
push
fdivr
scas
out
rcll
sub
inc
xor
add
sub
loop
daa
pop
repnz
jo
sarl
mov
mov
loop
imul
sub
sbb
add
arpl
and
lret
rcl
adc
and
test
andl
mov
mov
repnz
dec
jb
inc
xor
incl
xor
insb
lods
push
pop
push
pushf
mov
sbb
mov
add
or
insb
adcb
test
scas
ret
jmp
outsl
inc
inc
inc
icebp
sub
mov
sub
stc
sbb
jne
cmp
xor
mov
bound
lea
xchg
in
inc
push
pusha
jno
aam
cltd
mov
test
sarb
push
and
pop
rolb
cmp
mov
jo
mov
out
scas
cmc
test
roll
and
jo
fucomp
jbe
jecxz
dec
sbb
test
jmp
rolb
push
ret
adc
jg
and
dec
pop
je
cld
pop
add
pushf
call
lods
enter
lret
test
add
int3
push
mov
cmp
shl
and
push
lahf
clc
or
lret
jmp
jle
pop
push
loope
push
and
adc
pop
movsl
lret
lods
rclb
cmpsl
test
test
cmpsb
push
push
addb
inc
pop
jmp
xor
js
test
mov
mov
push
test
in
pushfw
dec
mov
roll
les
in
bound
mov
ja
adc
ret
test
rorl
sarl
fisttpll
and
daa
mov
insl
or
test
push
roll
fdivr
or
lock
jle
jbe
cmpsl
cmc
ss
fildll
or
les
sub
test
or
push
shlb
movsl
cmp
adc
fsts
sub
out
ja
mov
enter
mov
sub
or
mov
repnz
push
add
out
stos
add
pop
lret
and
in
lods
jecxz
and
rorl
fmuls
rcll
mov
xorb
test
mov
inc
xchg
into
test
cmc
mov
fcoms
out
mov
leave
and
inc
loope
clc
mov
popa
lea
xor
call
mov
mov
test
lods
or
add
pop
cmc
xchg
or
mov
sbb
fcom
movsb
rcr
inc
sub
pushf
pop
out
nop
push
mov
mov
mov
or
in
ljmp
sbb
arpl
pusha
lods
out
insb
stos
adc
fwait
int3
out
adc
leave
clc
fsubrs
push
movsb
shll
sarl
int3
jecxz
mov
or
clc
mov
push
stc
xor
jmp
and
aas
pop
or
test
out
mov
push
jge
jg
roll
mov
adc
lea
pop
mov
cld
test
push
dec
sub
lea
pop
mov
imul
in
cmpsb
cmp
push
jno
mov
sbb
fmull
sub
xor
add
dec
in
aad
pop
inc
xor
rorl
cld
inc
rol
xchg
or
fmuls
movsb
xor
dec
shl
sti
cmp
aam
push
jae
pop
imul
in
add
pushf
jno
lret
mov
notl
push
mov
rcll
pop
ja
jge
or
loop
out
mov
mov
and
push
sbb
mov
rcrl
sti
mov
mov
shll
mov
bound
das
add
cwtl
inc
test
mov
cld
dec
les
inc
pop
push
adc
mov
xor
out
and
pushf
fmull
fmul
xchg
mov
dec
lcall
jno
dec
or
and
shlb
shr
test
insb
and
pop
in
lods
jb
sbb
cmp
cmp
in
pop
dec
pop
pop
lods
shl
pop
dec
add
aas
shrl
mov
add
add
test
shll
ret
push
xchg
xchg
addr16
fwait
je
scas
stos
and
jge
dec
ds
xchg
mov
sbb
push
pop
ret
lahf
inc
cmpsb
popa
scas
mov
jno
cli
in
scas
shrb
xchg
sbb
inc
fisttpll
out
aaa
push
cwtl
xlat
adc
pushf
int
ret
sbb
mov
lret
fldcw
out
cld
adc
test
loop
fnstcw
int3
out
jecxz
dec
mov
rorl
sub
fwait
add
popf
icebp
mov
insb
pop
mov
lcall
popf
jo
test
pop
xor
or
fcmovb
adc
adc
push
push
test
insb
adc
lods
pop
pusha
mov
mov
scas
test
sbb
repnz
popa
mov
sub
add
imul
xor
test
push
push
cmp
add
and
and
mov
sub
lds
lods
sub
das
and
js
push
cmc
lea
je
insb
push
push
movsl
sub
sub
push
test
pop
imul
push
mov
stos
push
xchg
ljmp
test
inc
shlb
dec
pop
popa
fbld
insb
sub
adc
pop
rol
push
cltd
rorl
add
adc
inc
xor
adc
sbb
into
subl
out
mov
jmp
aam
cwtl
cmp
je
orb
repnz
xchg
daa
test
inc
std
push
loopne
cmp
call
and
adc
sub
cmp
and
sbb
push
sbb
loopne
movsb
mov
insb
push
pushf
test
and
popf
inc
jno
mov
test
call
test
xchg
xlat
push
neg
movsl
insl
in
or
test
lods
cmp
mov
outsb
lea
sub
and
mov
fists
cmpl
mov
adc
rcrb
mov
lods
jo
jmp
scas
mov
shll
shlb
fimull
das
mov
mov
loope
ret
jo
in
or
pushf
fwait
mov
loopne
movsl
lret
je
add
iret
ffree
or
out
adc
mov
leave
jl
sub
sub
insb
roll
addr16
add
push
int3
cmp
out
jo
enter
aad
add
aaa
movsl
mov
test
adc
test
std
mov
and
xor
and
roll
add
addr16
lea
cmpsb
sahf
movsl
push
ja
cmp
xchg
dec
arpl
pop
pop
bnd
cwtl
outsl
popa
cli
and
lock
lret
sbb
pop
neg
rcll
pop
inc
mov
and
fdivs
jno
adc
pop
jo
add
jo
clc
les
paddw
test
shrb
adc
mov
lds
and
fwait
adcl
repnz
out
int
rcrl
sbb
mov
lods
test
ret
addr16
cmp
or
mov
dec
lods
divb
divb
popf
xor
and
push
stos
sbb
mov
xor
inc
jae
and
jno
call
loop
ss
mov
sarb
xchg
sub
rol
inc
sbbb
pop
call
arpl
mov
dec
pushf
xchg
inc
jno
xchg
dec
cs
ljmp
sub
mov
subb
test
mov
pushf
pop
jl
shl
and
mov
scas
test
mov
pop
and
jns
adc
mov
sbb
cli
stos
in
add
out
xchg
jnp
repz
arpl
jb
xchg
rclb
xchg
je
sub
ds
xor
lret
and
jl
mov
lret
insb
mov
loop
aad
cmp
cmpsb
xchg
push
int3
cld
xor
add
adcb
test
out
test
mov
sbb
repz
mov
adc
add
and
movsl
imul
adc
subb
subl
mov
fwait
sbb
fldlg2
sbb
in
fmull
fistpl
rorl
push
test
out
mov
into
add
pop
out
jne
sbb
push
mov
mov
imul
cmp
insb
cmp
or
jp
push
lret
ret
cmpsb
inc
rorl
xchg
and
lds
fnstcw
test
ljmp
mov
ret
lret
pop
lods
lods
or
adc
out
aas
cmc
mov
fsubrs
or
in
dec
xor
sbb
fcmovnu
in
rol
scas
sub
pop
test
movsl
insb
loope
and
xchg
and
mov
shll
mov
jo
lds
cmpsl
lret
xchg
mov
push
pshufw
inc
mov
jp
mov
push
test
or
mov
fdivl
mov
inc
jo
or
push
out
je
adc
mov
scas
xchg
mov
cmp
jnp
dec
mov
dec
push
sbb
mov
das
push
xchg
pushf
inc
or
pop
sbb
jl
mov
jge
push
pop
mov
and
push
push
xchg
and
ror
xor
xor
jle
js
jns,pt
adc
fwait
sub
mov
sub
cmp
std
js
xchg
sbb
cmp
repnz
arpl
mov
add
icebp
ljmp
mov
loope
lahf
shl
mov
orb
arpl
into
fidivrl
data16
fcoml
fcomi
jo
fcompl
mov
stos
mov
mov
push
lret
sub
daa
push
dec
test
add
add
loope
mov
in
pop
pop
pop
mov
test
cmp
test
or
arpl
int
xor
jp
call
call
insl
or
mov
cmp
std
cltd
adc
mov
add
out
mov
fdivrl
into
xor
in
in
test
push
jne
and
ja
loope
xchg
adc
cmp
add
iret
stos
rorb
pusha
xor
xor
mov
ret
mov
cld
push
jl
in
adc
adc
mov
jge
in
iret
push
xchg
loopne
xlat
or
adc
xor
jb
call
sub
aaa
mov
ret
inc
pop
push
int
mov
icebp
jge
nop
mov
push
loop
inc
cs
push
imul
jne
neg
cmp
enter
mov
pop
sti
jnp
pop
jnp
movsl
insb
call
addr16
pop
in
push
jecxz
into
paddq
or
stc
movl
js
fidivl
cmp
push
call
fcmovnu
out
xchg
mov
adc
sbb
inc
or
sub
dec
cwtl
sub
cmp
cmp
cmp
dec
notb
stos
xchg
xor
loope
jo
mov
add
mov
arpl
jne
jns
xchg
mov
inc
add
dec
test
inc
cmp
nop
push
fs
xor
pop
dec
lods
cmp
rcrl
xchg
flds
sub
popf
fstl
pop
fsubs
jl
bound
add
mov
mov
test
mov
mov
lcall
mov
jns
test
popa
jmp
cmpsb
or
stos
or
pop
lock
lcall
push
mov
xor
add
fcomps
mov
and
addb
cld
mov
icebp
fwait
xchg
sarl
push
xor
test
lods
mov
fnstcw
xchg
fnstsw
nop
xchg
cmp
mov
mov
mov
xor
sub
mov
icebp
mov
iret
pop
mov
into
jmp
mov
ret
fcompl
push
push
stos
xor
fldenv
test
sub
sti
jo
or
movsl
fisubs
in
fs
out
aam
or
dec
fidivs
pop
pop
cld
lock
pop
jmp
sub
in
and
jbe
jmp
jg
push
mov
sub
scas
insl
ret
mov
push
flds
adc
mov
out
clc
jbe
out
mov
test
shll
mov
in
in
nop
jo
sbb
outsb
xchg
push
dec
push
sbb
inc
sbb
out
sub
pushf
dec
fstps
xor
push
adc
aad
sbb
sbb
xchg
xchg
jmp
ja
sub
aas
push
mov
adc
add
shlb
dec
xchg
push
js
and
pop
cmpsb
dec
mov
clc
insl
clc
sub
scas
stos
daa
js
push
movsl
add
mov
stos
pushf
lock
test
ljmp
push
cmp
cmpsb
leave
lret
sahf
pop
hlt
repnz
cmpsl
bound
dec
repz
cli
mov
mov
jno
dec
sbb
and
and
jl
lcall
mov
icebp
push
cmp
fcomp
in
push
mov
add
fs
inc
shr
fnsave
je
xchg
cmc
and
jo
jecxz
xor
in
sub
inc
sub
xchg
cs
dec
xchg
pop
add
xor
loopne
in
pop
lea
outsb
jnp
les
test
pop
call
flds
cmp
in
ljmp
cmp
lock
jecxz
mov
mov
fildl
into
outsb
mov
pop
pop
mov
lea
movsb
jmp
not
movsb
and
adc
mov
push
test
out
cld
fldenv
jp
aam
mov
mov
pop
xor
xchg
sub
mov
mov
pop
loopne
jmp
js
sub
arpl
mov
add
ss
mov
out
and
in
insb
sbb
imul
popa
xchg
js
add
in
sti
lcall
cmp
fdivr
jns
stc
stos
sbb
cli
add
or
push
xchg
mov
cmpsb
mov
cmp
ret
mov
adc
mov
sub
adc
mulb
push
js
jg
shr
xlat
push
mov
mov
out
cmp
test
rolb
and
mov
arpl
in
ja
lods
mov
add
imul
xchg
fidivs
dec
dec
into
pop
xorl
lea
ja
pop
leave
hlt
mov
sub
mov
fstps
xchg
sbb
inc
and
dec
in
and
fistpll
pop
orb
sbb
cmp
test
xor
in
or
mov
stos
mov
or
xchg
xor
fildl
xchg
inc
push
leave
stos
xchg
icebp
rcrb
imul
aas
mov
xor
js
xor
aam
int3
ja
mov
hlt
cli
out
lret
add
pop
jne
test
jnp
test
push
hlt
iret
leave
cltd
cmc
push
ja
sub
fs
ja
xlat
pop
dec
scas
ret
lock
addr16
pop
jle
sub
cmp
cs
int
push
mov
das
xchg
cwtl
outsl
jp
js
xchg
ja
cmp
fmull
push
lods
stc
pop
push
jmp
add
jo
sbb
ror
test
shl
ret
xchg
add
sti
inc
add
leave
inc
mov
movsl
or
test
icebp
imul
movsb
xor
sarl
and
jle
leave
cmp
int
adc
scas
cli
or
leave
xor
into
lock
sub
ja
dec
insb
cli
mov
cld
leave
lret
fwait
out
int
js
mov
decl
lcall
nop
insl
js
dec
or
mov
ret
pop
inc
pop
xchg
cltd
sti
lcall
test
jmp
push
mov
pop
int
movsb
xor
jb
fadds
cmp
icebp
mov
and
and
adc
fbld
notl
add
push
hlt
cltd
divl
push
pop
sub
je
sti
or
cld
mov
js
pop
out
les
jp
int3
lret
not
cmp
pop
dec
aas
rorl
dec
rorl
pop
rorl
outsl
rorl
add
add
add
add
add
add
add
add
add
add
rorl
add
add
xlat
rorl
add
add
or
add
in
rorb
add
or
stc
rorb
sbb
or
add
or
and
or
adc
or
sub
or
push
rorl
xor
or
sub
or
cmp
or
xor
or
inc
rorb
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
add
fisubl
sbb
xchg
sub
add
inc
mov
adc
adc
rolb
fbstp
xchg
mov
inc
les
je
sahf
incl
lock
xor
xchg
mov
sbb
pop
adc
ja
and
mov
fincstp
push
or
lret
dec
inc
dec
sbb
sbb
push
orl
ret
adc
sub
mov
sub
inc
and
lret
pop
adcl
push
and
adcb
sbb
jo
out
pop
xorl
outsb
sub
rorb
sahf
pop
cmp
jg
push
bound
or
and
rcll
test
inc
scas
roll
ret
pop
push
pop
enter
dec
jg
add
int3
pop
jb
lock
in
add
or
adc
add
push
xlat
je
add
dec
jo
mov
pop
and
and
pop
and
add
popa
jmp
lds
inc
test
inc
jns
or
mov
pop
or
les
ss
jg
xor
nop
outsb
sbb
adc
and
les
or
jno
xor
inc
add
dec
adc
pop
in
daa
sub
or
sbb
les
hlt
add
lcall
loopne
add
add
andb
test
sbb
orl
or
cltd
cmp
inc
es
xchg
insb
inc
testl
out
jae
adc
nop
add
dec
push
movsb
mul
and
sbb
add
mov
incl
jmp
pop
pop
ss
and
pop
jbe
and
into
loopne
inc
push
fs
ds
inc
shll
add
or
nop
test
hlt
cld
cwtl
cmc
or
pop
mov
jb
mov
and
cwtl
sub
inc
sub
je
orb
add
shl
xchg
push
js
and
xchg
and
jo
push
push
or
add
scas
pushf
push
and
ss
loope
push
in
stos
into
add
and
cmp
addb
xlat
int3
xorl
inc
loopne
cmp
cmp
in
cwtl
stos
sarb
xor
inc
adc
ja
add
jmp
cmp
xchg
sbb
out
subl
mov
gs
or
or
scas
or
test
les
jecxz
push
in
test
push
out
and
lret
and
mov
cmp
addb
add
lahf
int
dec
cmpl
lods
push
adc
adc
adc
and
and
mov
or
or
aas
add
add
dec
add
add
push
add
mov
inc
nop
add
add
add
bound
push
lret
add
add
xlat
psubsb
or
or
ss
or
adc
push
fisttpl
add
xchg
inc
add
inc
add
inc
pop
int
or
or
inc
or
add
add
fiadds
add
and
and
daa
add
sub
add
sub
dec
xor
ret
fwait
xor
inc
add
adcl
pop
add
gs
or
cwtd
inc
imul
xchg
pop
mov
adc
aas
pop
sbb
adc
or
mov
mov
enter
loopne
or
add
lahf
sub
in
xlat
push
mov
mov
add
cmp
mov
jg
pop
adcb
adc
or
add
inc
inc
subb
mov
cmpsl
mov
add
mov
adc
add
enter
aas
mov
push
adc
sub
and
fimull
orb
js
xchg
jge
or
push
add
adc
xchg
xor
jg
cltd
lods
sti
rclb
pop
enterw
and
dec
and
loop
ja
loope
add
adc
add
lret
jle
nop
out
nop
cmp
aam
sub
fwait
mov
dec
push
call
cmpsb
repnz
daa
in
data16
push
sub
mov
or
mov
mov
subb
add
stos
call
dec
leave
xor
in
cmp
inc
adc
fldl
adc
xchg
adc
cld
xchg
sbb
cwtl
or
subb
mov
lahf
mov
or
mov
cmpsb
add
add
dec
scas
mov
ss
xchg
or
push
lret
fsubs
xor
and
in
and
cli
and
cld
and
dec
mov
and
test
mov
mov
and
ja
and
push
and
pop
loopne
xorb
lods
and
sub
sub
push
sub
add
enter
in
cmp
adc
or
sub
push
mov
es
adc
xchg
dec
sbb
roll
cltd
add
fildl
rcr
add
add
icebp
add
fcoml
add
std
pusha
clc
inc
xor
in
dec
mov
sub
mov
mov
test
sahf
rolb
mov
subl
xor
xlat
xor
pop
scas
cs
cmp
push
stc
xchg
add
ds
pushf
loop
out
sub
inc
sub
push
cs
push
add
mov
outsl
cmp
mov
sub
call
and
add
add
add
jmp
in
add
cli
add
cld
add
add
push
xchg
fwait
and
or
and
dec
pop
xchg
mov
mov
in
inc
pop
nop
mov
adc
xchg
add
push
and
xor
hlt
aaa
sarl
inc
add
add
adc
add
pop
add
jne
sahf
gs
cmp
sub
push
adc
inc
addr16
jp
sbb
add
or
fnsave
inc
pushf
ja
lock
push
add
les
cmp
xchg
xor
ficoml
ficoml
or
push
imul
shl
xchg
pop
xor
enter
mov
or
jle
orb
mov
mov
cmc
adc
int3
add
popl
xchg
pop
sarb
cmp
faddp
adc
and
xchg
lds
aas
inc
xor
xor
sub
add
ja
mov
and
cmp
insb
cmp
cli
mov
cmp
inc
sub
xorb
mov
shlb
aas
push
add
dec
mov
inc
push
or
and
ss
or
adc
adc
adc
adc
outsl
add
adc
mov
dec
mov
pop
sbb
jb
xor
mov
incl
cmp
add
lea
add
fldl
js
cmp
cmp
andb
pop
sub
nop
lock
movsb
sub
clc
adc
pusha
adc
lea
mov
clc
or
gs
rcrb
inc
mov
inc
inc
pop
jecxz
scas
pop
add
and
xchg
hlt
pop
fistpll
stc
add
ret
jne
push
pop
cwtl
dec
jge
add
cmp
sub
or
arpl
mov
mov
add
add
cltd
outsl
pop
mov
iret
pushf
shlb
in
out
mov
and
cmpsb
inc
cmp
ret
sub
in
loopne
les
mov
and
inc
and
icebp
xchg
aad
cmpsb
jbe
sbb
mov
fsubs
mov
addr16
push
loop
mov
in
or
jl
jb
clc
stos
pop
jne
adc
push
xorb
subl
mov
mov
sbb
sbb
add
add
push
add
add
shll
mov
or
pop
xchg
pop
add
push
add
shll
cmp
popf
add
add
jmp
and
jno
pop
adcb
and
push
addb
popa
fdivl
add
push
pusha
ljmp
adc
jnp
push
xor
lcall
scas
pop
pushf
jge
or
out
fs
out
mov
push
inc
daa
or
xchg
fstpl
outsb
add
mov
pushf
out
pop
push
push
add
or
imul
stos
or
insl
aaa
add
pop
or
inc
pop
sub
cmc
and
loop
add
pop
mov
jno
and
std
mov
add
push
cld
mov
xor
arpl
subb
das
mov
test
sbb
lods
notl
sarb
daa
pop
pop
push
add
adc
out
addl
fldl
fisttpll
outsb
mov
shrb
push
and
int3
sahf
jne
lret
xor
jbe
adc
push
add
mov
ljmp
and
and
jle
push
add
lea
sbb
sub
or
outsb
add
outsl
add
jo
in
add
xor
mov
add
fldl
jmp
in
or
mov
insl
adc
movsb
add
mov
lea
popf
or
jnp
inc
test
por
jmp
stos
ja
mov
xor
xchg
test
dec
data16
or
lea
mov
cmpsl
inc
lds
shl
push
fs
hlt
jb
test
inc
pop
xor
sbbb
add
cmpsl
adc
in
add
insl
jle
or
xchg
inc
popa
adc
xchg
push
adc
mov
and
cltd
xor
shrl
push
adc
sub
test
repnz
add
jb
cmp
mov
and
movl
sbb
push
in
jp
mov
xor
test
fdivrl
cmc
mov
adc
cmp
adc
roll
out
mov
out
sar
insb
enter
and
dec
scas
in
push
jp
rcrb
jle
add
mov
xor
inc
xchg
add
sub
cmpsl
mov
adc
mov
fidivrs
add
inc
subl
and
jae
add
shrl
scas
push
lret
inc
push
xchg
jne
pop
scas
rorb
cmp
adc
mov
iret
dec
shrl
add
in
nop
call
cmp
mov
mov
loopne
aaa
or
cwtl
dec
and
or
sti
and
mov
or
stc
jb
into
cmp
push
cwtl
jne
mov
and
cmpsl
add
adc
push
jae
jp
lahf
sbb
push
cmp
sbb
icebp
xor
inc
xor
out
adc
out
cmp
ljmp
jae
fildll
lods
leave
push
scas
adcl
or
sar
nop
add
push
roll
popf
mov
insb
fsts
sbb
push
or
ja
test
mov
repnz
repz
bound
dec
push
add
daa
aad
loope
add
adc
lret
mov
aas
dec
test
repz
push
add
js
jl
sub
and
jb
icebp
push
dec
popa
scas
mov
mov
es
jns
sbb
jbe
and
and
dec
orl
mulb
rorb
xchg
mov
outsb
jae
loop
add
mov
lret
jmp
mov
xchg
cmp
sub
sub
or
in
in
icebp
dec
sub
xor
cmp
lods
faddl
call
movsb
xchg
adc
add
stc
or
fdivs
fldt
push
mov
push
sbb
dec
pushl
hlt
cmp
shlb
sub
add
fsubs
add
inc
lgs
fwait
jg
xchg
leave
add
push
or
lahf
clc
push
add
lret
movb
clc
mov
fistpll
movsl
push
aaa
or
pop
test
mov
cltd
lock
or
xchg
or
adc
mov
icebp
je
or
jb
add
jno
std
andb
or
js
mov
jmp
jp
and
add
inc
fists
jecxz
mov
cli
pop
cmpsb
fisubs
cwtl
jmp
inc
test
or
mov
sbb
mov
sub
ss
dec
and
ljmp
dec
rcrb
inc
xchg
mov
push
out
fnstsw
or
in
push
and
mov
add
jns
dec
and
lcall
jmp
dec
dec
add
enter
pop
add
fwait
inc
adc
bound
xor
jo
sbb
shlb
jge
sub
dec
lahf
xor
add
xchg
jmp
leave
add
in
test
lret
sbb
sbb
fnstcw
sbb
add
data16
add
hlt
cld
xchg
sbb
popa
cmp
pop
or
mov
mov
inc
adc
inc
adc
movl
dec
sahf
mov
and
xchg
and
iret
adc
imul
enter
add
mov
mov
fldl
cli
inc
lea
mov
inc
mov
sbb
das
movsb
cmp
mov
addl
cmp
or
aaa
and
cmp
mov
jmp
sti
pushf
push
jle
push
xlat
pop
ret
jns
ss
push
or
sub
sbb
cmp
add
int
lock
out
mov
push
es
repz
insb
add
add
dec
imul
mov
mov
in
or
loope
fidivrl
adc
sarb
idivb
insb
add
adc
inc
push
xor
push
add
pop
pop
and
inc
pushf
or
rorl
jno
lds
loopne
aad
adc
inc
stos
cmpb
in
push
negb
jl
pop
adc
leave
or
rolb
ja
fwait
pop
xchg
cmpsb
add
sti
and
hlt
pop
push
add
xchg
clc
inc
icebp
nop
mov
inc
dec
loop
or
sub
xchg
ret
xor
dec
in
fistpll
iret
or
and
out
out
jae
cmpsb
xchg
loop
je
enter
mov
popa
es
rorb
into
pop
addb
in
sar
aad
sti
subb
xor
sbb
iret
adc
pop
mov
fwait
push
dec
jns
mov
sbbl
jg
clc
add
mov
or
mov
test
xor
andl
jmp
adc
adc
sbb
add
loopne
and
xchg
test
lods
and
cmpsb
hlt
fisttpl
mov
je
out
rolb
push
push
popl
and
and
add
mov
mov
push
xorl
fldl
push
fsts
jmp
inc
push
add
ficoml
adc
adc
and
incl
add
jo
rolb
dec
cmp
loop
cmp
push
push
aad
testl
pop
rcl
or
out
jb
push
pop
pop
bsf
xor
add
dec
stc
pop
jg
add
adc
jmp
jle
je
cmpsl
mov
mov
push
sbb
add
ljmp
shr
pusha
add
jge
les
sub
fcoms
lock
pop
adc
push
inc
out
or
push
pop
pop
inc
push
mov
xor
movsl
call
fadds
adc
xor
addr16
jp
mov
aad
orl
inc
adc
xchg
movsl
add
leave
sbb
call
loope
scas
cmp
pop
pop
dec
and
mov
mov
jno
int
adc
sub
jns
pusha
subb
inc
in
sbb
xchg
push
push
bt
gs
push
js
inc
push
clc
mov
out
imul
add
shr
cld
add
cli
shlb
in
hlt
jmp
test
movsb
movl
neg
dec
inc
dec
rorb
xor
test
xchg
inc
inc
mov
lods
dec
dec
push
pop
dec
xor
inc
xchg
andb
or
lock
jo
cs
mov
jnp
mov
jecxz
rolb
leave
pusha
inc
sbb
js
cli
loope
repnz
cwtl
mov
es
movl
jne
out
add
and
add
mov
sbb
sub
rcrl
jmp
mov
add
mov
inc
jge
add
jecxz
mov
rolb
or
cmp
testb
iret
popa
in
push
roll
ror
ret
aam
sbb
sub
xor
pop
or
or
daa
push
call
cmp
out
in
dec
or
js
jp
xchg
xor
mov
leave
es
pop
add
mov
rolb
lds
push
add
out
inc
pop
dec
mov
fisttpll
sub
hlt
jns
mov
jp
xor
xchg
dec
xchg
enter
and
sub
mov
push
test
dec
enter
mov
mov
adc
cmp
call
lahf
dec
lcall
jecxz
push
add
lds
not
xchg
pusha
lahf
ss
out
push
push
mov
test
lods
xor
cwtl
cmp
or
or
bound
shll
pop
sub
sub
pop
and
jp
js
mov
dec
jecxz
in
mov
in
cli
sbbb
dec
jp
outsb
bound
sub
fistl
jecxz
push
test
or
fsubr
xor
pop
inc
movsl
stos
inc
push
mov
xor
push
int3
cmp
add
loop
rorb
sbb
popa
pop
adc
adc
lds
push
popl
rcr
or
out
sbb
pushf
mov
dec
xor
ret
xchg
cmpsl
pop
jle
rclb
push
ret
bound
ror
push
inc
push
and
push
call
xor
cli
xlat
mov
leave
jl
cmpsb
movsl
sbb
push
mov
mov
inc
cwtl
xchg
stos
addl
movsl
mov
pop
pop
push
mov
add
xor
out
das
and
sahf
adc
xor
sub
out
addr16
add
fiadds
xor
pop
andb
pop
jle
flds
mov
push
fwait
negl
mov
pop
out
sarl
mov
mov
xor
sub
pushf
cmpb
clc
int3
loopne
cwtl
add
dec
sgdtl
ss
jmp
dec
push
addr16
lods
in
mov
movsb
fisttpl
mov
out
add
inc
xor
push
lahf
div
xchg
or
xchg
cwtl
xchg
pop
jns
cmpsb
mov
xchg
mov
jecxz
dec
inc
adc
cmp
fldl
fldt
pop
inc
xor
or
cmp
mov
push
and
out
xlat
jnp
jge
adc
sahf
ja
mov
test
xchg
mov
pop
aas
sbb
jg
fldenv
pop
leave
inc
add
pushf
adc
pop
not
xor
or
mov
xor
fdivs
jg
cmp
mov
cwtl
nop
frstor
and
sbb
cltd
mov
or
movl
dec
test
xor
and
fisubrl
std
and
ds
bswap
iret
dec
and
jae
shlb
call
pop
jbe
jno
not
xor
fsubrs
dec
push
cmpsb
leave
pusha
enter
jb
push
imul
xor
inc
ljmp
sub
push
mov
cld
pop
into
inc
jg
sete
out
cmc
dec
jg
addl
xor
pusha
mov
dec
setae
int3
dec
roll
aaa
sahf
xchg
or
adc
mov
repnz
dec
adc
mov
addl
push
into
test
adc
test
and
add
dec
cmp
loopne
testb
out
test
js
daa
outsl
shlb
xchg
mov
pop
sbb
repnz
mov
mov
js
movsb
jbe
fcomip
shrl
or
jl
dec
add
cli
mov
mov
sub
out
add
pop
outsb
push
shrb
push
add
js
psubd
push
and
lods
int
mov
adc
mov
insl
inc
and
mov
out
xchg
xor
push
aam
or
scas
push
ja
lods
lret
add
test
mov
dec
jmp
ret
inc
inc
or
mov
dec
arpl
loopne
push
dec
mov
sbb
int
negl
daa
loop,pt
addl
shll
dec
pop
sub
rolb
xchg
jb
movsb
mov
xchg
cltd
xchg
int3
pop
mov
lock
pop
and
imul
call
into
push
dec
push
push
ret
dec
dec
adc
xorb
jl
aaa
adc
dec
dec
cmpsb
leave
ret
add
lret
mov
or
push
pop
pop
stos
movsb
scas
iret
mov
call
add
push
xchg
cwtl
div
push
fs
ficoms
lods
adc
pop
xchg
shlb
push
pop
mov
and
loopne
roll
aam
mov
in
ds
xchg
fadd
lea
fs
inc
xchg
inc
int
sbb
pop
pop
aam
inc
inc
add
mov
fisubrl
sbb
outsl
add
adc
ss
stos
inc
cmp
jbe
pop
int3
sub
nop
inc
inc
test
neg
push
sbb
add
or
push
push
test
inc
or
out
xor
add
xor
mov
and
aas
pusha
cwtl
adc
and
jmp
add
cli
push
push
push
sbb
ret
movsb
adc
xchg
push
add
and
pop
mov
mov
pop
sbb
out
aas
inc
pusha
sbb
inc
mov
test
sbb
fists
pop
shl
pop
mov
sbbb
mov
std
movsl
dec
push
pop
sbb
sarb
clc
inc
inc
and
stc
mov
push
pop
sub
or
lds
fadds
push
jno
lret
jo
sbb
pop
pop
cs
pop
int3
ljmp
cmp
daa
dec
cltd
mov
adc
sbb
aam
test
fwait
or
push
inc
mov
pop
pusha
cmp
cwtl
push
outsb
inc
xor
daa
xchg
jae
adc
sub
mov
sbb
adc
and
xchg
mov
add
leave
xor
mov
les
push
cmp
out
loope
ljmp
test
mov
iret
out
mov
loop
mov
mov
mov
popa
int
fcompl
mov
ret
inc
fstps
xor
mov
jae
mov
bound
xchg
push
inc
je
and
in
sbb
divb
out
aaa
jecxz
add
icebp
add
pop
pop
cli
ffree
orb
sub
jge
fdiv
cwtl
dec
and
sub
icebp
std
cmp
stc
mov
jne
lret
cld
pusha
inc
lods
jnp
sbb
mov
xlat
scas
popa
pop
xchg
in
neg
test
call
fisttps
fisubl
scas
or
inc
mov
idiv
sarb
xor
xchg
add
mov
push
into
push
sbb
push
pop
inc
jecxz
xchg
adc
sbb
clc
or
shl
shl
ds
and
and
adc
sub
adc
insl
mov
int
mov
or
stc
or
adc
xor
mov
mov
or
rolb
dec
sahf
fiadds
jne
dec
sub
rcl
ror
mov
pop
aas
or
neg
sub
add
push
aad
cltd
add
das
jmp
dec
xorl
jne
add
cmc
push
lds
push
mov
pusha
icebp
data16
daa
jae
jbe
in
pop
jl
cmp
aaa
sub
test
lock
push
mov
cmp
push
xor
sub
or
aaa
nop
addr16
mov
mov
or
dec
sub
cmp
mov
movsl
sub
sarl
cwtl
adc
xor
inc
sub
jbe
rorb
sbb
test
imul
mov
xor
cs
or
test
dec
sbb
xchg
xchg
add
dec
push
and
sub
push
xor
subl
loop
inc
roll
test
and
add
inc
xor
test
sarl
js
rolb
sbb
adc
aad
out
cmpsb
sti
sub
adc
inc
or
jne
sbb
pusha
or
add
aad
in
inc
dec
add
cmpsb
push
jl
push
pop
pop
add
and
and
scas
aam
or
cmc
xchg
fcoml
or
xchg
mov
cmp
clc
dec
enter
mov
out
popa
mov
jo
clc
cmpsb
incl
fwait
aas
test
shll
jae
push
add
and
push
sub
xorb
xchg
shlb
iret
and
lds
mov
push
mov
push
pop
pop
cli
lret
mov
sbb
add
ret
inc
test
jno
sbb
pop
push
fimuls
stc
add
ficompl
ret
sub
cmpsb
mov
adc
jmp
push
mov
notl
fwait
rorb
dec
sub
adc
push
mov
neg
mov
into
dec
divb
sarl
lahf
adc
clc
mov
jnp
or
push
xor
pop
xor
out
mov
lods
pop
xor
movsb
cli
mov
aaa
sarb
data16
ret
lcall
dec
shl
pop
repnz
adc
cmp
rorl
mov
and
inc
or
pusha
add
hlt
out
loopne
fldenv
setno
lds
dec
orb
shrb
sbb
pop
sub
jo
cmp
addr16
add
push
cmpsl
cwtl
jmp
dec
and
test
cmc
setb
enter
push
addr16
xor
inc
inc
mov
mov
jmp
out
pop
ror
fwait
xchg
imul
out
push
xlat
xchg
pop
sbbb
inc
lea
lods
rol
lret
mov
inc
cmpb
out
adc
in
rcl
sub
icebp
cmpsb
addb
sbb
ljmp
inc
scas
test
cmc
bound
adc
inc
pop
dec
sahf
xchg
push
mov
xchg
imul
test
fsubrl
or
ja
aam
sub
add
cli
sub
test
test
add
push
fstpt
mov
out
add
cs
adc
fstl
test
adc
rolb
loop
popa
test
mov
sub
movsb
aad
fnstcw
pushf
mov
shll
cs
movsl
push
inc
les
xchg
test
dec
dec
movsl
rclb
out
hlt
sahf
adc
inc
jno
and
cli
pop
neg
mov
pop
sub
xor
les
xchg
test
mov
xlat
shrl
add
test
mov
pop
daa
not
cwtl
pushf
xchg
cmp
ss
push
sbb
popl
jg
outsb
ret
mov
xchg
dec
dec
xor
arpl
or
xchg
inc
cwtl
mov
mov
sbb
dec
stc
sub
movsb
add
je
mov
sahf
inc
inc
out
mov
push
push
sbb
cmp
inc
xorb
dec
add
lea
iret
cli
lds
add
dec
inc
xor
push
sub
dec
xor
stos
lret
stos
outsl
mov
jo
sub
aad
ja
stos
dec
mov
dec
fistl
divb
add
or
not
xchg
or
lret
add
dec
inc
bswap
mov
xor
cmp
out
mov
add
xor
mov
push
pop
pop
or
pand
popf
add
mov
sub
pop
aas
in
call
and
cmp
jnp
add
push
pop
pop
cmp
cmp
test
mov
pop
or
jns
xchg
add
lret
adc
jle
or
arpl
xor
ja
scas
arpl
jno
dec
enter
daa
push
sub
fisttpl
ret
cmpsb
rclb
ja
push
mov
mov
in
or
jmp
adc
insb
mov
cmp
and
dec
xor
pop
das
sub
mov
sub
cmp
mov
add
pop
mov
dec
xor
jb
lods
pop
popa
mov
rcll
and
add
lock
inc
cmp
and
cmp
inc
adc
pop
test
cltd
add
jmp
cwtl
mov
es
sarl
jmp
mov
flds
jne
lea
mov
cmp
or
clc
jnp
dec
add
sub
cltd
faddl
loope
loope
std
test
mov
notb
add
into
mov
scas
pop
lcall
xor
push
and
inc
mov
sarb
mov
out
pop
mov
shlb
lock
add
xor
mov
or
pop
dec
xchg
push
loop
orl
sti
insl
push
fs
mov
jg
xor
sahf
or
mov
out
push
mov
inc
jns
ret
cmp
sub
in
xor
loope
push
xor
loop
xor
mov
mov
pop
jecxz
push
scas
mov
cmpb
cli
loopne
nop
ljmp
or
fidivrs
mov
mov
test
std
add
mov
cli
pop
in
mov
in
jg
jg
inc
test
xchg
sub
add
mov
add
add
ret
xor
movsb
hlt
mov
and
inc
or
jbe
pop
movsb
pusha
imulb
bswap
adc
das
sub
aas
jne
push
ret
or
mov
rcrb
inc
loope
adc
and
mov
sub
inc
in
jge
sub
pop
ja
and
mov
orb
sti
dec
loopne
call
mov
stos
inc
clc
mov
paddd
push
mov
jmp
push
push
cltd
xchg
fcom
icebp
sub
push
or
ss
xor
add
nop
pop
repnz
push
out
js
les
mov
mov
in
loopne
fldenv
fstps
jmp
adc
notb
out
sarl
aad
push
and
out
sub
mov
xchg
dec
cmpsl
rcrb
cwtl
mov
pop
push
popa
xor
push
hlt
into
pop
stos
loopne
stc
fstl
subl
push
and
dec
mov
mov
fcoms
jl
adc
add
jl
aad
and
mov
mov
test
ror
or
push
int3
cmpsb
pop
add
add
mov
ficompl
fmuls
or
int
cmp
shrb
cmpsb
xchg
cmp
or
xor
aad
add
adc
xchg
xor
mov
push
je
lds
outsb
int
add
mov
adc
cmpsl
icebp
xor
and
add
std
into
mul
cli
sub
jb
test
add
and
cwtl
xchg
sarl
jno
cmpsl
cmp
ret
cmp
ficompl
push
popf
push
ret
sbb
leave
imul
pop
adc
cld
xor
sbb
cmp
adc
pop
sub
mov
inc
mov
or
xlat
sbb
arpl
add
lcall
sub
aad
movsl
leave
cwtl
push
push
add
roll
pushl
add
push
fs
jns
mov
xchg
mov
aaa
rol
je
mov
daa
ficoml
jo
add
xchg
mov
nop
sbb
cld
add
push
rclb
out
arpl
push
shl
addl
adc
add
fstpl
outsl
sbb
ljmp
dec
xorb
pop
pop
incb
lds
xor
add
shr
int
in
iret
aas
jb
imul
push
imul
imull
jmp
xchg
push
test
hlt
bound
movsb
and
mov
bound
push
cmp
shrb
call
add
fisubl
xor
xchg
push
test
adc
push
inc
and
neg
rorw
inc
and
and
add
or
mov
jbe
sub
mov
cmp
inc
dec
test
mov
ret
test
je
mov
mov
arpl
pop
add
xchg
out
dec
push
add
xor
popa
outsb
xor
sbb
xor
push
ret
lahf
into
push
stos
ret
xacquire
or
daa
mov
dec
ret
pusha
xchg
leave
mov
mov
mov
rcl
cwtl
adc
int
xor
mov
sub
xor
clc
push
pusha
xor
mov
mov
sub
mov
mov
dec
mov
lret
jns
and
pop
dec
xor
int3
jg
jge
psraw
das
mov
inc
mov
add
xorb
cmc
jbe
pusha
fcmove
insl
pusha
inc
sub
sbb
push
cmpb
sarb
insb
or
nop
call
push
test
mov
add
aam
roll
iret
adc
lret
sub
sub
mov
addl
les
sub
notl
nopl
leave
push
lock
xor
and
fcmovu
popa
test
cmc
loopnew
stc
pusha
sahf
push
fidivs
xor
add
js
shlb
cmovno
push
push
mov
loope
sub
cwtl
stos
les
jo
or
adcb
push
push
hlt
rol
lret
and
adc
adc
push
dec
jb
addl
aad
int
xchg
or
popa
neg
sbb
xor
mov
cmp
add
mov
or
xor
add
movsl
sbb
and
adcb
push
bnd
sub
pop
xor
iret
and
mov
loope
leave
mov
stc
mov
je
push
mov
xchg
shll
sub
cs
dec
jne
leave
shrb
mov
lahf
or
mov
mov
clc
sub
push
fimuls
loope
sbb
fistps
jmp
adc
xor
xchg
jp
dec
xor
in
fwait
movsl
add
xorb
data16
add
insl
jns
shrb
imull
jae
dec
aaa
daa
pop
mov
jne
cli
outsb
add
insb
jg
dec
fistl
cmp
lcall
adc
outsb
cmpb
cmp
mov
sar
mov
test
cmpsl
mov
jae
aam
inc
pop
cmpsl
mov
pop
fisubs
pop
not
jbe
mov
aaa
or
ss
push
jmp
mov
push
scas
decl
leave
test
cmpsb
fiadds
or
mov
gs
mov
inc
push
push
push
push
fcmovnb
mov
sub
mov
sub
inc
adcl
sbb
pop
dec
sbb
jle
xor
out
in
cld
outsb
das
pop
xor
sub
dec
roll
xor
push
inc
ja
mov
aad
mov
inc
or
jnp
pop
xchg
jmp
xchg
repnz
xor
dec
lret
outsl
dec
fisubs
pop
aam
inc
rcrb
push
fcomps
push
xchg
ret
pushf
xchg
mov
xchg
repnz
rorb
imul
sbb
mov
sbb
ss
sarl
aad
add
out
sbb
mov
push
inc
xchg
outsb
mov
dec
ja
stc
lcall
pusha
mov
fists
testl
dec
mov
jnp
jg
in
jp
pop
push
cmc
repz
call
inc
xor
insb
mov
sbb
pushf
pop
sub
mov
dec
cmp
push
sub
mulb
leavew
fisubl
mov
jl
dec
addr16
xor
sbb
push
stos
mov
movsb
ds
int3
cltd
pop
aam
outsb
push
enter
rcrb
xor
xchg
inc
sbb
push
clc
sbb
pop
xor
rorl
push
out
dec
dec
es
loop
push
push
test
pop
pop
xchg
shlb
push
adc
add
sbb
ret
push
xor
shll
jns
cmpsb
adc
xlat
lods
sbb
hlt
ss
or
sbb
cmp
test
xchg
imul
in
cld
push
xchg
addr16
xchg
push
mov
xchg
cmpsb
shlb
cld
mov
jnp
cmp
insb
xchg
cli
lret
push
ficomps
adc
inc
mulb
push
xchg
push
dec
mov
repnz
mov
daa
sub
aam
shr
dec
clc
aad
adc
adc
imul
imulb
pop
inc
hlt
cld
aad
pop
hlt
cmp
push
ds
xor
mov
xadd
cmp
sub
sbb
inc
xor
jne
xor
outsb
mov
xor
add
push
pushf
ds
imul
out
bound
push
out
in
gs
inc
push
xchg
pop
test
stos
push
adc
inc
enter
fld1
push
cmc
gs
jns
jo
cwtl
js
fldt
fsubs
sub
out
bound
and
std
out
add
cmp
lea
or
out
jno
sbb
mov
ss
push
sarb
rolb
cmp
cs
jne
push
push
fistpll
lds
xchg
xrelease
fs
mov
dec
jnp
cs
sbb
sbb
xchg
adc
leave
push
addr16
cld
cmp
dec
in
and
sub
pop
sbbl
mov
jne
xlat
stos
out
jmp
cmp
add
rcrb
adc
aad
stc
fcmovb
fiaddl
hlt
cltd
test
and
sbb
repnz
sub
fucomi
xchg
std
jp
xchg
sbb
mov
jmp
mov
loope
mov
or
nop
cmp
mov
pusha
mov
addr16
inc
fidivs
fs
or
scas
fwait
inc
dec
pop
sbb
sti
in
aad
repz
clc
fcoml
xchg
stos
jns
and
xor
lcall
mov
insb
in
inc
sbb
mov
aad
push
fldt
aam
aaa
pop
loopne
inc
jp
test
inc
test
inc
mov
jp
aad
dec
fsubr
adc
fs
cli
push
movsb
add
int
jb
jmp
pop
repz
push
inc
cmp
mov
push
fucomp
repnz
pop
fmull
jecxz
push
xchg
adc
jge
jno
scas
mov
int3
inc
jb
cld
imul
iret
push
push
stc
ret
push
lcall
sub
xor
mov
outsb
stc
outsl
sbb
test
into
push
jns
mov
test
sbb
dec
inc
cmp
cmpsl
imul
lret
fimull
inc
add
dec
inc
bound
cld
mov
mov
push
lock
jne
adc
mov
mov
fdivrp
xor
dec
cmp
sbb
out
xor
in
jns
loope
push
ficompl
jmp
imul
xchg
pop
add
int3
mov
sbb
dec
iret
mov
push
ljmp
cmpsb
or
lret
test
dec
push
jne
xor
push
sahf
adc
js
jle
movhps
decb
inc
sbb
cmc
flds
push
cmp
pop
xchg
jbe
pop
testl
inc
xor
lret
or
sarb
or
rclb
aaa
test
fnstcw
mov
mov
pop
stos
pop
inc
jae
psubb
stos
or
and
and
repnz
bound
lahf
sbb
repz
cwtl
enter
mov
loope
dec
out
and
inc
push
inc
shrl
int
fisttps
cmp
cmp
inc
subb
out
mov
adc
inc
popf
mov
stc
xlat
sbb
in
scas
xor
in
ljmp
andl
scas
or
mov
decb
jbe
inc
inc
cltd
mov
sarl
cmp
xor
mov
lahf
test
adc
add
int3
repnz
ljmp
ja
mov
enter
and
int3
aas
lretw
mov
imull
mov
and
dec
push
fisubrl
out
pop
sub
into
or
rcrl
stc
andl
adcb
inc
adc
cmp
cmc
divl
stc
out
in
ss
mov
xor
ret
out
outsl
xchg
out
cmpsb
addr16
aad
fisttps
ret
and
and
mov
and
adc
in
fwait
pop
mov
repnz
lods
stos
mov
in
push
or
out
in
into
sbb
fiadds
cmp
jle
stos
dec
cmp
mov
dec
jae
jo
jg
call
insb
lods
xchg
shr
xchg
and
add
jbe
ss
stos
arpl
cmpsb
sbb
pop
xlat
sti
push
dec
loope
jp
sbb
in
hlt
hlt
jge
cld
or
ja
out
jp
inc
es
in
push
jg
ficoml
adc
insl
lods
fldt
setp
and
xor
xchg
gs
repz
ds
inc
addr16
mov
xchg
lcallw
rcl
jns
in
or
fstpt
sub
push
orl
icebp
sub
ds
enter
jb
lret
cmpsb
add
loope
ja
imull
insb
rolb
jp
movzwl
pop
jbe
adc
or
sbb
jle
imul
pushf
cmp
mov
mov
jns
jae
xchg
mov
fildll
pop
fwait
cli
mov
jno
pushf
lods
xor
ds
xchg
jge
pop
xor
pop
nop
dec
popl
xchg
in
insl
stos
test
xor
subb
pop
sbb
sti
xlat
test
cmpsl
ret
dec
outsl
sub
jecxz
add
sub
mov
test
jp
jecxz
add
loop
std
push
sbb
stos
lods
sub
mov
leave
jp
lods
and
das
pop
sbb
mov
incb
cmp
pop
mov
mov
mov
jnp
inc
fwait
mov
jns
jb
stos
aam
add
mov
jge
xor
push
cli
adc
stos
and
roll
in
or
jmp
in
sbb
idivl
mov
cmp
out
test
ljmp
push
scas
iret
in
pop
jl
push
pop
fxch
cmp
mov
mov
testb
int
rcr
dec
ds
adc
cmp
cmp
mov
xchg
pop
dec
inc
fdiv
xchg
imul
aad
in
mov
adc
sbb
mov
testb
sbb
mov
pushf
das
test
jmp
hlt
js
mov
xchg
jae
in
sbb
insl
sbb
mov
cmp
int
or
lcall
jle
dec
dec
xchg
aam
aad
or
insl
and
xchg
adc
mov
push
insl
mov
mov
test
out
sub
fisubs
jg
pusha
nop
je
hlt
add
pusha
mov
pop
popa
jle
js
mov
jo
or
loope
cmp
movsb
out
loop
mov
shrl
push
push
int
or
push
jge
jae
cmp
out
pop
or
inc
xlat
pop
fadds
aaa
add
mov
push
mov
testb
sub
and
std
jnp
cmp
jecxz
jns
lret
and
sbb
outsl
jmp
mov
bound
inc
sbb
filds
push
xor
cli
ja
loop
add
mov
pop
cmp
push
dec
mov
scas
lret
idivl
or
pop
sub
loop
jbe
jnp
fstpl
mov
push
sbb
add
repz
aaa
into
test
and
fildl
lock
adc
cmp
outsl
int
sub
faddl
sbb
cwtl
bound
and
cli
mov
mov
push
idivb
ret
xor
jb
sbb
fiadds
fldt
in
xchg
jmp
pop
ret
inc
loop
addb
jg,pt
in
bound
lods
inc
fists
xchg
sub
popa
inc
sub
xchg
xchg
fsubp
enter
testl
es
aam
call
popa
xchg
nopw
or
jo
add
fbld
sahf
pushf
loop
aas
push
daa
push
cmp
xor
lret
jmp
inc
fmul
add
push
add
cmp
js
js
inc
lea
cs
and
sahf
sbb
pusha
cmpsl
cld
dec
loope
inc
lahf
sub
das
or
push
cmpsb
push
xor
or
or
shrb
sbb
fs
push
push
push
icebp
pop
inc
xchg
aaa
cmp
add
sarb
cld
cltd
dec
or
pop
lock
jle
push
and
xor
push
push
push
pop
adc
mov
imul
mov
aad
xor
ret
xor
insb
fnstenv
das
xlat
xchg
jecxz
cmp
scas
mov
in
leave
fildl
mov
pmaddwd
out
out
adc
xchg
les
outsb
pop
popa
adc
outsb
or
inc
jo
fnstcw
push
orl
cmp
sub
ja
ds
int
xchg
sub
push
xchg
sbb
add
push
jecxz
and
xor
movsl
ret
jmp
xchg
mov
in
cmc
adc
cmp
jbe
ret
cwtl
add
das
cmp
rol
insb
sub
xlat
pop
ja
cmp
fs
enter
or
mov
loop
and
xor
and
mov
cld
sub
or
cmp
call
cmp
xor
cld
mov
lods
out
roll
sub
xchg
dec
test
sbb
xchg
xchg
push
cmp
cmpsb
iret
enter
lret
repz
or
xchg
jl
fisubrs
xchg
in
mov
sub
jmp
jae
rcrb
mov
pop
out
andb
rcrb
sub
push
not
repz
mov
decb
mov
in
out
mov
jecxz
adc
outsl
lret
or
cmp
cmovbe
mov
jmp
sti
fmuls
sbb
in
stos
stos
cs
out
push
cli
clc
aam
mov
test
outsl
xchg
xchg
cmp
or
or
or
movsb
aas
dec
out
jmp
cmc
pusha
cli
outsb
xchg
insb
into
mov
jge
scas
in
cmp
mov
sahf
adc
clc
mov
adc
push
les
add
sahf
jnp
pop
sbb
out
or
into
sbb
pop
lods
cmp
cli
pop
xor
inc
out
push
pop
push
push
pop
je
dec
negl
and
or
aaa
imul
pop
fisubrs
pop
or
jg
xchg
movsb
cli
sbb
mov
jmp
enter
adcb
leave
push
out
imul
lds
xor
pop
add
and
mov
mov
push
das
or
adc
fmul
inc
prefetchw
or
shrb
int3
rolb
std
jb
mov
jnp
stos
andl
or
addr16
cmpsb
add
fucom
push
adcl
lds
not
hlt
js
lcall
das
pop
dec
sbb
inc
mov
js
or
push
push
idivl
and
adc
mul
adc
nop
nop
pop
scas
push
test
nop
fstpl
test
repz
xchg
jl
push
add
jne
inc
adc
add
out
pusha
ret
and
lods
mov
push
scas
daa
movsb
inc
and
fstps
lods
sub
pop
push
test
lahf
aaa
jne
fs
aam
sbb
sbb
out
in
mov
cmc
cli
outsb
in
xchg
xchg
test
fnop
pop
mov
js
pop
mov
in
pop
les
out
xor
mov
push
add
mov
sub
sbb
dec
push
pushf
push
mov
sbb
pop
jno
mov
push
adc
sti
cmpl
dec
nop
mov
add
insl
inc
ss
daa
pop
mov
maxps
cmp
xchg
scas
shl
imul
mul
sbb
xor
out
xchg
shr
in
arpl
cwtl
push
sub
inc
rolb
pop
loopne
xchg
sbb
or
std
ja
das
push
push
insb
xchg
aad
rcrl
jle
cmc
mov
fimuls
cmp
mov
inc
shll
sub
lret
xor
loope
pushf
mov
sbb
and
push
call
test
jmp
push
negl
popf
adc
sar
or
inc
inc
adc
out
push
or
fstps
adc
into
mov
xchg
push
lods
cmp
mov
push
sbb
adc
xor
pop
lods
inc
pop
adc
mov
cmp
les
mov
lock
cmpsl
cli
jmp
das
xchg
cmp
aas
in
pop
addl
add
ja
loope
testl
jmp
cmp
cmc
out
cli
lods
fsubrl
push
loopne
push
lret
xor
push
outsb
out
sahf
add
mov
sarl
rol
mov
les
dec
scas
xor
adc
mov
xchg
shl
test
into
pop
or
pop
xchg
outsl
sahf
mov
fdivrs
loopne
mov
lock
ret
jo
scas
jmp
pop
cmpsl
fcoml
cwtl
jg
push
push
cmp
int
ja
lcall
sbb
lret
outsl
sub
or
push
fwait
sbb
pop
movsb
shrb
cs
inc
push
xor
sarl
mov
in
sbb
mov
push
sub
xchg
icebp
stos
cmp
mov
dec
adc
rorl
lahf
jo
dec
pusha
outsl
mov
pop
outsl
icebp
int
xchg
sbb
cld
mov
jl
clc
std
outsl
mov
fwait
orl
pop
cwtl
outsb
adc
insb
std
cmovo
pop
push
dec
xchg
push
sbb
inc
je
mov
add
into
xchg
jo
jno
sub
inc
mov
xlat
jb
lds
rol
repz
std
xor
dec
fistps
sbb
sub
lock
adc
imul
ret
xlat
daa
mov
outsl
jo
mov
out
arpl
push
punpckhbw
sahf
and
lock
daa
lret
jecxz
lods
sbb
jmp
and
jo
out
push
imulb
pusha
xchg
das
pop
and
xor
add
jno
push
push
scas
ret
jo
hlt
mov
in
mov
es
inc
and
js
gs
adc
dec
adc
clc
adc
jae
push
dec
cld
repz
loope
sub
adc
push
push
lods
icebp
movsb
shll
inc
fucomip
push
fcomps
sar
out
or
loop
xchg
xor
ds
inc
aam
and
fnsave
out
aaa
xchg
fwait
outsb
popa
or
mov
xchg
xlat
xchg
jnp
in
test
push
je
stos
fimuls
shr
stmxcsr
mov
mov
pcmpeqd
dec
or
wrmsr
iret
ds
xor
rclb
mov
subl
sbb
jg
mov
pop
xchg
cmpsl
pop
jbe
or
pop
mov
mov
sbb
or
daa
push
lods
ficoms
cmpsb
mov
pop
shll
das
mov
jae
jo
and
cmp
push
fidivrl
add
jnp
mov
jp
pusha
push
scas
ss
jmp
test
xlat
cmp
clc
jbe
sbb
xchg
pop
push
xchg
out
jle
or
mov
addb
sbb
sub
loop
sub
xchg
cwtl
pop
adc
xor
add
cmpl
cld
cmp
xlat
jecxz
ds
stos
popf
mov
iret
rorb
lret
xchg
cli
sti
push
or
inc
hlt
mov
out
div
je
mov
add
sub
lods
into
mov
xchg
movsb
sub
pop
mov
xchg
mov
jg
pop
add
dec
repz
icebp
incb
cmpsl
inc
test
push
adc
mov
bound
or
ds
notl
insl
in
xchg
jns
adc
push
cmp
daa
aad
inc
icebp
push
inc
add
xchg
out
mov
js
dec
pushf
push
cmp
gs
cli
out
daa
mov
or
sub
fildll
fcoms
test
in
mov
rcrl
cmp
mov
sbb
pop
in
outsl
ss
in
jns
jbe
cltd
fisubrs
mov
mov
xchg
shll
pop
fsubl
das
adc
aas
cmp
inc
or
jl
in
loopne
cmp
adc
sbb
pop
das
or
xchg
adc
add
ds
rep
push
pop
push
mov
sbb
ret
in
sbb
arpl
insl
and
lret
repnz
fidivs
jbe
sbbb
inc
ja
hlt
xorb
testl
jbe
jnp
outsb
sahf
leave
aas
mov
xor
test
popa
xor
push
test
sub
lret
dec
ja
mov
ljmp
adc
shl
lea
movsl
mov
mov
mov
scas
push
sub
pop
xchg
push
in
shll
push
xchg
lahf
enter
jnp
ja
mov
sub
push
shrb
scas
push
call
xlat
mov
ret
jnp
bound
sub
adc
or
aam
pushw
inc
imul
adc
xchg
sub
std
pop
sbb
sub
ret
arpl
rcr
and
lret
sarl
loop
pop
push
lods
push
aam
pop
sbb
sahf
sbb
cmp
shlb
lret
lds
adc
jle
scas
push
and
jecxz
xchg
add
nop
jbe
sbb
adc
stos
adc
ljmp
sub
jnp
dec
fwait
loope
lcall
xchg
idivl
cmpsb
icebp
add
push
rclb
add
pushf
cmc
insl
mov
push
das
xchg
sub
or
mov
mov
cmp
fists
push
in
sbb
dec
cmpsl
cmpb
roll
dec
pop
add
repz
mov
dec
pop
faddp
push
jmp
nop
cmpsb
push
jp
jns
out
pop
cld
push
bndldx
insl
movsl
push
sbb
mov
iret
ja
ds
filds
mov
mov
orb
mov
jnp
sbb
fwait
adc
mov
ficompl
movsl
sub
sbb
fdivr
int3
mov
bnd
push
or
cmp
cmpsl
sti
push
shlb
sbb
cmc
cwtl
test
cmpsl
out
in
push
xchg
push
mov
jle
enter
sub
lret
cwtl
stc
aas
add
dec
cltd
fsubl
pop
ficoml
mov
jns
divl
daa
xchg
jns
ds
jge
sub
gs
sub
add
sar
xlat
sti
test
imul
cmpsl
jns
data16
cli
das
push
cmpsl
inc
sub
lahf
movsb
push
push
subl
in
outsb
fldenv
mov
xchg
cmpsb
dec
vshufps
xchg
movsl
dec
stos
gs
hlt
inc
rcl
cli
ret
adc
xchg
je
xchg
mov
xchg
int
aad
dec
jno
xor
rcrb
pop
xchg
push
loop
add
mov
xor
add
stc
push
xchg
loope
push
push
pop
test
mov
jp
mov
mov
clc
mov
jl
push
jmp
hlt
inc
dec
add
mov
fwait
sub
adc
es
pop
sarb
cmp
cmp
jnp
xlat
in
xchg
cmp
pop
sub
fmul
es
and
sarb
mov
push
in
mov
jb
int
sub
in
ljmp
sbb
shrl
insb
shrl
loopne
adc
mov
jae
sub
xchg
mov
out
fstl
int3
lcall
and
fcmovu
pop
sbb
pop
in
arpl
add
dec
mov
loopne
cmp
pop
cli
into
inc
adc
mov
inc
sbb
movsb
ret
sbb
int3
out
insb
arpl
sub
mov
add
jg
jmp
jl
enter
int
call
sbb
push
jl
sub
popf
jo
xchg
daa
frstor
jo
jno
adc
in
call
insl
sub
test
in
icebp
fbstp
jns
fisubs
imul
xor
mov
stos
add
jne
cld
aam
or
cmpsl
sarl
sbb
inc
sbb
aas
jno
cltd
rorb
loop
lods
adc
pop
js
imul
sub
fiadds
push
ror
xor
stos
sub
jp
jmp
sarl
jno
jno
sbb
es
mov
jbe
jmp
mov
call
or
mov
sti
sub
stc
inc
cmp
scas
jp
mov
jno
ja
jns
aaa
lahf
mov
adc
and
outsb
test
idiv
pop
adc
fiadds
inc
jno
dec
dec
stos
jmp
movsl
clc
jl
sbb
adc
pop
pop
add
pop
test
and
cwtl
mov
iret
push
ss
enter
mov
std
cmp
lods
dec
sahf
lods
mov
shrb
mov
testl
xchg
cmp
hlt
inc
aaa
sub
mov
aaa
pop
dec
fs
inc
pop
aam
adc
jg
adc
dec
mov
icebp
mov
jl
loopne
test
jo
xor
mov
push
xchg
hlt
mov
fcomp
out
or
shll
lcall
in
and
aam
out
cli
int3
popw
jnp
int3
or
out
inc
xchg
push
xchg
fdivs
divl
cld
jns
lock
sar
sbb
pop
sbb
push
xchg
in
and
add
xchg
sbb
mov
lahf
loope
fcom
dec
lret
pop
sub
adc
jnp
cmp
xchg
insb
mov
jnp
dec
push
or
mov
fdivl
xor
pop
or
inc
xor
aaa
ds
mov
cmc
hlt
mov
jo
fcoml
or
adc
xor
or
ss
jmp
xchg
adc
sbb
inc
jno
clc
adc
dec
or
xchg
out
dec
dec
sbb
inc
mov
leave
add
fldt
testl
es
mov
sbb
popa
xor
fdivrs
popa
mov
pop
ds
pushf
xlat
lods
sub
push
mov
jle
or
jne
movsb
or
mulb
or
popa
stc
sbb
push
jo
xor
or
and
mov
scas
dec
mov
sbb
gs
jmp
repnz
cmc
clc
fldenv
xchg
icebp
test
out
add
mov
add
adc
sbb
inc
jo
or
push
cli
mov
aas
inc
pop
push
lahf
pop
sbb
test
cmpsl
shrl
cli
aam
adc
jae
outsl
cmc
sbb
pop
jns
xor
inc
ret
fldl
adc
lea
xchg
inc
popa
mov
rcrb
clc
cmp
insb
mov
rcrb
fiaddl
gs
popa
pushf
inc
mov
out
pusha
mov
iret
test
outsb
fistps
jbe
nop
sahf
push
shrb
aad
sub
test
in
insb
xchg
dec
sub
sbb
push
shl
les
xchg
jnp
pusha
dec
lods
adc
in
sbb
xchg
sbb
cwtl
pop
cmp
repnz
mov
and
fldlg2
push
mov
js
sub
push
adc
push
sbb
outsb
sbb
or
insb
and
xchg
sbb
bound
or
repz
mov
jl
lock
or
jecxz
sbbl
adc
mov
das
setbe
mov
pop
xchg
push
out
addr16
insl
out
out
sub
sbb
jnp
out
sbb
push
roll
cmp
out
rcrl
mov
mov
aad
push
fnstcw
test
push
aam
jae
cli
xchg
pop
pop
ds
push
test
pop
insb
ja
or
gs
mov
pop
arpl
and
insl
xchg
dec
fs
sahf
mov
pop
xchg
add
xchg
sub
cmp
icebp
adc
cmp
cmp
add
or
out
out
mov
test
cltd
or
imul
je
inc
xchg
mov
cld
sbb
decl
hlt
movsl
sbb
inc
cmp
cli
push
sbb
sarl
or
out
std
dec
sub
xlat
fsubrl
sbb
push
movsl
inc
lret
test
xor
xor
mov
add
incl
repnz
aas
mov
aas
out
adc
xor
out
cmpsb
add
xchg
imul
dec
jns
mov
or
daa
les
sbb
ret
and
inc
add
jecxz
inc
sti
mov
jp
push
pushf
adc
out
mov
lods
sti
test
addr16
stos
push
das
and
mov
inc
gs
gs
pop
cs
cld
cmc
out
lock
bound
outsb
dec
mov
inc
out
roll
sbb
xchg
outsb
out
and
sbb
mov
and
rcl
xchg
jecxz
push
pop
xor
push
adc
push
stc
fwait
rcll
fistpll
jb
sbb
jge
xor
pusha
repnz
or
xchg
cmp
pop
loop
push
and
sbb
mov
push
loopne
cmp
leave
loope
bound
clc
lea
xchg
sbb
adcl
push
rcr
popf
and
xchg
ss
fnstenv
push
xor
loopne
inc
pop
js
mov
stos
add
shl
scas
dec
jp
daa
and
push
rclb
adc
testb
sbbb
ja
xor
or
xor
xlat
clc
mov
xchg
and
inc
push
sarl
outsb
xor
or
add
lret
arpl
aam
bound
ret
lret
popa
add
lcall
cs
xchg
sbb
sbb
iret
arpl
loopne
xor
stos
cmp
and
push
fs
xchg
add
xchg
loop
out
and
dec
pop
add
jmp
add
nop
lcall
mov
pop
dec
mov
lcall
rcll
scas
sub
dec
outsb
in
push
xchg
adc
and
and
xor
push
jnp
xchg
add
adc
sbb
idivl
push
inc
add
adc
jle
cmc
xchg
push
stc
int3
add
mov
add
and
pop
fcoml
sub
adc
std
sub
hlt
loopne,pt
ror
add
sarb
negb
xor
out
in
imul
cwtl
cmp
shlb
xchg
mov
outsb
xchg
mov
insl
dec
lahf
sub
dec
clc
rolb
mov
add
xlat
lahf
mov
mov
movsl
cli
ljmp
or
dec
add
fsubrl
cmp
dec
adc
cmpsb
gs
mov
or
shl
dec
jbe
xor
mov
jno
call
sbb
inc
jb
pop
jle
ret
idivl
stos
adc
fwait
sbb
fucomip
push
mov
repnz
pop
les
scas
das
repnz
iret
mov
decl
into
ja
pop
loope
lret
or
add
sti
xor
fwait
pusha
fwait
in
je
mov
into
outsb
shll
std
loop
fdivrl
jmp
ss
clc
test
pop
xchg
notl
mov
repz
cmp
push
lahf
int
lock
and
aas
rorl
jg
shll
rcrb
cmp
mov
pop
or
bound
jge
icebp
inc
loopew
shlb
loopne
movsb
jo
xchg
test
or
mov
out
insl
iret
test
adc
jno
sub
faddl
mov
dec
mov
loope
xor
jecxz
mov
adc
js
push
cmp
xlat
cmp
jmp
les
movsl
inc
jns
addr16
xchg
ret
nop
imul
xor
mov
fwait
nop
jmp
jae
cmp
sub
test
inc
sbb
enter
ljmp
xchg
icebp
daa
es
insb
sub
xchg
loope
cmpsl
dec
pmaxsw
int
sbb
jp
outsb
sub
mov
and
sbb
jecxz
and
jl
or
test
popf
imul
fists
sub
test
inc
push
lret
aad
imul
xor
dec
stos
lahf
xlat
in
out
push
cmp
movsb
sbb
pop
inc
pop
insl
fwait
lahf
xor
pop
adc
cmp
mov
pop
adc
xor
aam
es
sbb
lock
loopne
xchg
sahf
cld
cmp
mov
jmp
insl
in
out
inc
test
cmp
xor
jge
xchg
sbb
or
mov
gs
lods
fpatan
xlat
jmp
jg
add
xor
and
push
adc
insb
frstor
inc
pusha
ficomps
jge
hlt
sub
mov
xchg
add
shl
roll
xchg
jbe
lods
dec
or
lods
ds
pop
ja
das
les
aas
xor
movb
cmp
pop
mov
fsubrl
es
push
or
testl
fmuls
ficoms
push
out
mov
add
pop
aam
cld
inc
in
jg
mov
aas
dec
dec
xor
add
lahf
aad
xchg
incl
bswap
test
inc
jbe
aas
and
movsl
sti
ds
add
frstor
sub
int3
jecxz
cmp
xor
scas
call
push
popa
sbbb
or
inc
out
in
xor
push
or
and
es
in
adc
imul
iret
mov
mov
add
ret
stc
mov
dec
std
hlt
inc
and
adc
jne
rcll
mov
push
sbb
mov
lea
lcall
in
xchg
lret
xchg
jo
shlb
pop
pop
cmp
test
paddq
sahf
into
cli
sbb
fisubl
insb
xchg
imul
test
fsubrp
pop
sub
icebp
mov
jbe
mov
dec
leave
out
mov
out
inc
push
hlt
push
insb
int
push
cmp
xchg
outsl
pop
das
aaa
mov
lcall
in
pusha
and
push
sbb
loop
cmp
sbb
inc
pop
je
out
insl
and
xchg
push
sahf
mov
xchg
lods
xchg
adc
in
push
ja
sti
push
cmp
jle
xchg
ds
into
adc
jmp
outsb
pop
dec
cmp
lods
jne
movsb
add
pushf
in
sub
mov
shlb
sub
xchg
in
aas
jg
mov
or
repnz
stos
insb
pop
mov
lret
pop
push
bnd
cwtl
iret
xchg
mov
decl
add
fisttpll
dec
sbb
hlt
pop
mov
enter
int
mov
ss
fwait
push
insb
decb
sar
sub
mov
ja
jecxz
ds
imul
enter
adc
add
dec
leave
inc
push
mov
dec
xchg
mov
pop
test
js
cld
inc
mov
pop
call
daa
adcl
stos
pushf
adc
idivl
arpl
pop
mov
andb
sbb
sbb
fmull
jb
pushf
sub
mov
cltd
and
fwait
jle
cmp
aad
inc
test
addr16
or
gs
int
int
pop
adc
and
or
dec
lahf
aam
push
mov
jnp
or
roll
movsl
pop
mov
fprem1
add
sahf
ja
popa
les
insb
mov
push
jp
negl
aad
pop
mov
dec
sti
mov
aad
aad
pop
out
dec
imul
pop
adc
les
pop
dec
aas
jg
push
js
leave
mov
xchg
ljmp
pop
sub
in
push
loop
arpl
ret
xchg
cmc
out
ja
or
jnp
push
pop
movsl
sub
pop
xchg
mov
adc
mov
push
movsb
rep
jmp
or
sti
jbe
sbb
mov
clc
pop
imul
mov
dec
iret
push
repnz
mov
or
mov
outsl
icebp
ja
xor
adc
jge
xor
and
dec
pop
inc
adc
inc
pushf
test
or
loope
or
sti
lcall
jle
cmp
jle
mov
pop
lahf
jmp
mov
lret
es
dec
sar
hlt
dec
loop
loopne
xchg
push
add
cmp
cmp
adc
push
ljmp
mov
in
xor
inc
mov
mov
bound
mov
cmc
xlat
push
mov
xor
ret
cli
lods
sub
dec
dec
jmp
jo
jg
jo
popf
fstl
stos
dec
outsl
adc
bound
sbb
or
je
movsl
or
call
nop
mov
jecxz
mov
inc
pextrw
mov
mov
push
pop
mov
into
adc
jle
lcall
insl
xchg
sarl
rorb
sti
sbb
mov
je
notb
sbb
jo
or
negb
xor
push
dec
mov
test
mov
mov
add
nop
mov
test
insl
dec
jmp
xor
xchg
push
push
push
push
roll
or
jmp
cld
ret
ds
add
mov
leave
dec
dec
mov
mov
mov
add
jnp
cmp
int3
jb
and
sub
mov
jp
aas
iret
andb
inc
adc
lock
jg
lods
pusha
cmp
mov
test
xor
push
mov
sub
cmpsl
xchg
pusha
and
loop
test
fistps
sub
jno
inc
shld
fisubl
je
xchg
mov
sub
lds
push
mov
push
fwait
mov
sbb
leave
jle
dec
jbe,pt
in
xchg
dec
out
outsb
ljmp
ret
mov
adc
sbb
push
mov
pop
nop
mov
fdivrp
repnz
mov
addb
shr
adc
dec
inc
pop
cmp
sub
xlat
jl
jo
add
jae
jle
jae
in
scas
out
hlt
cld
int
sbb
leave
mov
dec
pop
fimuls
dec
cmpsl
mov
loopne
cmp
and
inc
ss
or
addr16
mov
into
loope
loopne
cmpsb
mov
std
pop
jecxz
pop
mov
dec
das
pop
adc
and
mov
mov
scas
lcall
loop
dec
add
sbb
faddl
cmpsb
cs
insb
mov
xchg
js
pop
cmp
xchg
jge
mov
movsb
xchg
sbb
pop
lahf
pop
xchg
push
addr16
andb
in
and
pop
add
push
xchg
cli
or
nop
mov
dec
loopne
adc
aaa
cmpsl
cld
adc
sbb
clc
jle
mov
sbb
jl
gs
hlt
mov
xchg
cmpl
xor
add
pop
sub
roll
dec
cmp
mov
orb
in
or
mov
cs
mov
xor
nop
mov
dec
cmpsl
fsts
sbb
aad
xchg
mov
aas
xor
insb
inc
out
fldl
inc
pop
sub
shll
cmpsb
cmp
movsb
subb
in
imul
dec
cmc
rorb
test
jge
repz
movsb
xchg
pop
or
test
xor
cmpsb
imulb
mov
dec
data16
lods
or
and
dec
imul
stc
xchg
pop
push
xchg
mov
push
mov
xchg
repnz
jle
sbbl
scas
pop
mov
lea
mov
and
push
scas
adc
xlat
or
mov
daa
or
xorl
pop
xchg
xlat
out
pop
ds
push
sahf
or
addb
pushl
mul
xlat
stc
mov
adc
gs
xor
cltd
pop
xor
dec
pop
add
jae
loop
push
jb
xchg
cmp
mov
pshufw
fs
and
push
outsb
adc
push
adc
sub
pop
cltd
fcompl
pop
mov
gs
mov
push
xor
cmp
mov
fmul
jnp
arpl
pop
aam
jb
mov
xor
js
dec
je
jle
sbb
fwait
xchg
gs
adc
push
cltd
push
fsubp
fs
sbb
jmp
cmpsb
jmp
test
fwait
cmp
sahf
or
inc
xor
inc
adc
mov
shll
xchg
pushf
ret
jb
fwait
xchg
inc
mov
lret
aaa
idiv
sahf
loop
add
adc
mov
out
nop
pop
ljmp
mov
rolb
and
dec
out
mov
lods
xchg
mov
dec
or
ja
out
bound
mov
mov
movsb
mov
dec
test
or
js
lea
pop
inc
jb
pop
and
repnz
push
ds
mov
addr16
mov
cli
pusha
fidivl
test
arpl
pop
inc
xchg
test
sub
mov
sbb
or
xor
cwtl
push
ds
repnz
mov
in
jne
push
jb
mov
scas
adc
or
mov
adc
mov
pusha
lock
mov
adc
rcll
jg
mov
adc
stos
jp
insb
out
popa
lahf
xchg
out
insb
pusha
movsl
ret
mov
sub
gs
out
cmp
lods
adc
mov
pop
inc
or
and
xchg
mov
out
jl
pop
std
mov
clc
pop
sub
mov
movhps
nop
add
dec
pop
cmp
out
push
add
aad
test
inc
scas
pop
xor
push
in
and
imul
and
das
into
mov
and
dec
iret
repz
or
sub
or
lcall
pushf
int3
xor
cmp
fwait
push
mov
pushf
mov
and
sub
clc
pop
lahf
or
fildll
not
mov
je
sti
cs
stc
pop
imul
jae
pop
int3
pop
daa
xchg
icebp
in
outsb
lods
in
movsb
insb
adc
shl
or
mov
rcrb
push
icebp
enter
mov
sub
pushf
sbb
pushf
push
and
mov
cwtl
pop
shlb
out
push
ljmp
adc
jae
jae
mov
sbb
shll
nop
nop
xor
adc
imul
lods
out
mov
push
arpl
xor
mov
pusha
out
in
lret
lea
mov
push
cmc
dec
sub
pushf
repnz
cs
std
push
into
cmp
imul
pop
out
or
cmp
ljmp
idiv
mov
repnz
mov
outsb
movsl
mov
pop
shlb
sbb
or
xor
movsb
pop
aas
jmp
jno
xchg
cmp
test
jne
and
push
lods
aaa
cmpsl
or
pop
sub
sbb
aaa
stos
jecxz
jge
rorb
ds
icebp
mov
dec
aam
fstpl
movsl
daa
cli
adc
jl
sbb
into
xor
ret
aam
js
inc
sbb
jno
xchg
pop
jmp
das
cmp
mov
sti
mov
pop
lock
test
fcomps
mov
and
xor
hlt
mov
ds
mov
imul
adc
and
or
ret
or
idivb
nop
jbe
enter
add
nop
fldt
mov
jno
ficomps
push
loop
fwait
xchg
push
mov
dec
adc
iret
iret
jge
movsb
movsl
or
cmpsl
inc
sbb
insb
inc
pop
xor
and
sub
and
xor
hlt
push
insl
ljmp
or
mov
lret
xchg
popa
inc
test
jnp
punpckhbw
or
fadd
jb
imulb
mov
xor
lea
xor
in
lahf
fdiv
cmc
inc
bound
enter
sbb
dec
int3
rol
fistpl
adc
and
push
xchg
fcmove
out
cmpsl
pop
jge
icebp
outsl
dec
sbb
loopne
xor
push
sub
dec
dec
in
negb
or
jge
icebp
fnclex
dec
add
push
or
test
xchg
loop
add
add
push
and
sbb
repnz
add
ss
ss
jnp
out
sbb
pop
add
arpl
jl
jle
xor
in
mov
aam
fiadds
fs
fadds
mov
xchg
cmp
dec
scas
les
ljmp
mov
mov
and
add
pop
mov
xor
push
and
inc
xlat
scas
fsts
xchg
es
in
outsb
shrl
fstps
push
push
push
dec
lahf
sbb
nop
fdivl
and
cmpsl
adc
loopne
and
xor
mov
xchg
jo
rclb
jbe
scas
adc
pop
aad
push
cmpsb
das
stos
jb
mov
xchg
inc
stos
fnsave
repnz
imul
cmp
lock
clc
or
push
lret
pop
into
mov
mov
push
insb
idivb
adc
ds
cmpsl
stos
test
fisubs
out
pop
ja
shrb
dec
mov
mull
fcomip
xor
cli
fists
test
es
jge
out
sub
iret
push
and
dec
rcrb
out
sub
mov
movsl
jle
icebp
add
push
adc
lods
inc
bound
push
inc
cmpsb
test
sti
scas
test
lods
adc
xchg
hlt
imul
mov
cmp
xchg
pop
jnp
out
mov
pushl
push
sbb
sub
sub
xor
rclb
aaa
dec
push
inc
rclb
mov
cmp
jmp
aad
dec
lea
popa
adc
jno
mov
push
cmpl
or
mov
outsb
rcrb
xorb
xchg
popf
arpl
sbb
loopne
ds
adcl
inc
das
test
inc
ret
mov
movsb
cli
dec
pop
ljmp
jnp
adc
jmp
clc
inc
cmp
dec
rcr
or
imul
cmp
jne
sahf
daa
jbe
movsl
insl
das
sub
stc
aas
inc
gs
cmp
and
mov
out
dec
mov
leave
sub
push
adc
add
gs
inc
loope
jge
push
ss
jmp
xchg
inc
fidivrl
adc
movsb
push
cltd
leave
mov
out
xor
pop
xor
lods
loope
xchg
std
cli
test
add
mov
jo
or
movq
cld
cmpsb
ja
xchg
rorb
movsl
mov
out
cmp
pop
scas
cmpsb
xor
aad
xor
dec
lods
push
sbb
jge
mov
negb
dec
mov
add
mov
or
cmp
push
popl
clc
aas
jns
test
pop
and
pop
push
negb
test
xor
movsl
outsb
jb
sub
inc
iret
adc
pushf
and
loop
inc
lock
jae
dec
push
cmp
ljmp
and
mov
xchg
hlt
cli
mov
cmpsl
dec
loope
jbe
inc
mov
pop
push
mov
push
dec
lods
call
gs
das
cmp
jne
mulb
icebp
les
jae
outsb
push
fwait
hlt
rorb
mov
xchg
ret
xor
jp
push
mov
sub
fldcw
sahf
dec
aas
mov
add
enter
loope
test
add
rcll
adc
frstor
xor
push
push
sub
sbb
and
lret
inc
in
aas
cmc
inc
stc
pop
test
aaa
adc
cmpl
pushf
cmpsb
cli
sub
lds
sbb
pop
cwtl
popa
outsb
cmc
repnz
pop
mov
ja
pop
test
mov
mov
insl
pop
push
les
ds
fwait
sete
add
pop
fucomp
lods
push
inc
out
sbb
lcall
movsb
stos
adcb
push
fisttps
dec
fnstcw
xchg
push
mov
dec
pop
aas
jae
mov
or
ffree
xor
insl
inc
stos
adc
sti
mov
and
push
dec
in
icebp
inc
call
mov
add
push
pop
xlat
ror
sbb
cmp
insb
in
inc
sub
aas
mov
fistps
sbb
hlt
xchg
push
inc
stos
xor
add
daa
cmp
out
scas
insl
xor
push
add
out
jmp
les
pop
xchg
jb
fwait
xchg
xchg
jne
addb
dec
test
int
lods
dec
outsb
and
sarb
inc
xor
xor
scas
out
sub
sub
fsub
mov
ljmp
aaa
xor
pop
ficoms
xor
mov
inc
jmp
adc
lret
lds
and
jmp
js
sub
mov
pop
adc
repnz
pop
out
mov
push
mov
mov
add
xchg
mov
push
sub
add
out
mov
and
mov
insl
jecxz
popf
inc
push
xor
int3
cltd
dec
arpl
es
push
pop
push
mov
dec
push
jnp
adc
mov
xor
sti
lea
pusha
jg
into
inc
loope
ljmp
sbb
test
fistl
mov
or
jno
cmc
jl
cmc
stc
xor
jno
outsb
push
stc
xor
insb
xchg
in
fldenv
gs
in
dec
iret
cmp
mov
add
mov
iret
xchg
fnstcw
push
leave
cwtl
sub
mov
ret
push
repz
adc
adc
ret
movsl
test
sub
popa
repnz
in
out
stos
ja
fmulp
jmp
push
aam
in
int3
dec
cwtl
in
and
lea
or
aas
out
lds
xor
or
mov
inc
mov
repnz
jno
test
and
dec
adc
hlt
xchg
add
inc
xchg
in
push
cmp
dec
sti
add
sub
fdivrs
cmc
insb
repz
loope
inc
aaa
push
sahf
aaa
sbb
fsub
mov
ret
mov
out
push
test
and
mov
pop
add
cmc
sbb
imul
icebp
aas
cld
xlat
vpsubw
imul
lock
lods
mov
and
outsl
lret
call
gs
xchg
push
outsb
xchg
insb
dec
inc
jne
mov
in
int3
and
add
xchg
aam
stc
xor
fsub
pop
cld
jbe,pt
sbbl
adc
jne
cmp
pop
and
and
je
ficoml
mov
xchg
fmuls
aaa
movsb
sti
jne
sbb
incl
add
rcrl
lret
iret
enter
jecxz
push
xchg
pop
ss
mov
cmp
cmp
lds
mov
jle
notb
mov
or
pusha
push
dec
jge
ja
cmp
lods
cmp
pop
aas
int
jbe
imul
or
mov
or
loope
decl
stc
push
adc
push
mov
fnstsw
mov
inc
cltd
push
jg
jle
scas
out
xchg
adc
and
ficoms
mov
in
inc
gs
mov
fwait
sub
leave
cmpsb
test
inc
les
sub
scas
mov
sbb
mov
dec
fildll
xor
dec
es
xor
xor
adc
or
and
arpl
ret
xchg
or
push
cmpsl
into
in
inc
adc
les
xlat
push
adc
out
jecxz
cmp
xchg
popa
mov
out
or
in
or
inc
pop
jnp
ret
outsb
test
jmp
daa
xchg
or
pop
test
jns
pop
or
cmp
les
adcb
and
inc
jbe
pop
and
jmp
fisttps
mov
sub
sar
ljmp
out
xchg
stc
rclb
add
inc
pop
fstl
adc
repnz
lahf
push
incb
cltd
aam
push
dec
adc
add
rcrb
stos
ja
mov
pushf
sub
or
push
cld
testl
aas
repnz
imul
es
cmp
stos
mov
xchg
hlt
dec
sub
xchg
xor
icebp
loop
jecxz
inc
xchg
jo
push
cli
pop
jl
pushf
das
leave
test
mov
jne
sbb
and
stos
xor
xor
ja
mov
adc
pop
pop
sahf
std
popf
sbb
mov
sub
hlt
inc
stos
ds
cmovp
repnz
dec
neg
sbb
xbegin
push
dec
loop
ds
popf
adc
xchg
sbb
adc
pop
int3
pop
and
push
maskmovq
cmpsl
pusha
xlat
cmp
mov
lcall
or
daa
push
adc
jecxz
data16
repz
js
test
jmp
repnz
pusha
pushf
jbe
fidivl
shrb
test
cmp
xlat
sbb
icebp
repz
test
lret
mov
pop
push
mov
jmp
movsl
ret
push
xchg
aad
push
push
xchg
daa
scas
sbb
inc
push
repnz
in
imul
jae
jmp
pop
push
and
out
mov
fisubs
mov
adc
xchg
adc
popf
pop
test
mov
push
repnz
sbb
xlat
in
gs
fdiv
push
jp
ds
shlb
push
jl
rcrl
adc
cs
add
fcompl
stos
sahf
adc
sbb
xchg
mov
mov
bt
cld
dec
pop
mov
repnz
call
cmp
or
out
ficomps
push
mov
jb
sbb
lahf
jnp
dec
aad
out
in
insl
popf
mov
out
mull
in
pop
pusha
lds
repz
sbb
jp
sbb
mov
movsl
sbb
mul
mov
clc
or
sahf
or
fcmovu
fadds
lods
arpl
fldl
dec
xor
insl
inc
out
sahf
sub
inc
xlat
mov
sbb
cmc
and
mov
push
sahf
and
add
std
and
in
inc
sahf
mov
add
xchg
jmp
pusha
cwtl
cmp
xchg
fwait
xor
sub
les
inc
int3
shlb
data16
xor
or
scas
testb
dec
cmp
shlb
sub
gs
and
pushf
push
out
mov
sub
hlt
sub
popf
idiv
jbe
jno
xchg
out
rclb
mov
pop
out
mov
je
imul
mov
fisttpl
inc
daa
inc
aaa
dec
fnsave
out
pop
imulb
or
xchg
aam
inc
push
dec
fwait
xor
inc
aas
inc
push
andb
jp
sbb
sbb
sub
int
je
sub
cwtl
ds
inc
push
xchg
sbb
aam
repnz
mov
adc
lods
inc
popf
int3
popf
cs
mov
xchg
xchg
xchg
ss
cmp
mov
mov
loopne
daa
add
movsb
push
sbb
test
jg
popa
out
inc
fnsave
sbb
cmp
or
xchg
rolb
jae
in
mov
popf
jg
out
setge
es
pop
fnstsw
aas
mov
repz
sub
sub
cli
fadds
push
push
cmpsb
lods
rclb
leave
cs
adc
test
lods
mov
dec
daa
mov
shlb
out
xor
ficoms
push
adc
fnstsw
movsl
lret
cli
jmp
xchg
sub
pop
push
fs
push
pop
adc
jg
test
hlt
xorb
dec
mov
mov
rcrl
mov
mov
aas
cmp
test
aad
sti
vmovaps
add
ss
jmp
subl
push
cmc
or
je
subb
or
negb
lret
mov
cmp
xchg
and
aaa
mov
sbb
push
outsl
pop
adc
iret
cmpsl
jnp
test
daa
cs
das
add
add
xor
sbb
sbb
ja
xchg
sti
rclb
cmp
ret
mov
movsb
pop
ret
pushf
sbb
or
jb
bound
xchg
mov
nop
xor
mulb
or
test
dec
lahf
mov
pop
jp
or
outsl
and
inc
xchg
push
flds
lds
push
xchg
dec
aam
movsb
adc
arpl
inc
inc
xchg
test
add
clc
xor
andl
adc
enter
lahf
fnstcw
in
popf
filds
scas
mov
push
pusha
cmc
mov
push
loope
jg
in
push
pusha
cmp
and
aam
sbb
shlb
inc
test
outsb
imul
pop
cs
cmp
adc
aad
dec
shlb
ds
imul
mov
pop
mov
add
xchg
push
bound
aad
xor
jmp
inc
insb
jnp
aaa
jg
shl
push
insl
cmp
in
mov
add
mov
xchg
dec
or
imul
in
imul
sub
xchg
sbb
dec
pop
sbb
push
fldenv
rorl
int
mov
ss
stc
std
repnz
xlat
fs
rcrl
add
dec
mov
xlat
jg
cmpsb
lret
aam
push
lds
cmc
pushf
lods
scas
in
mov
out
dec
shlb
jbe
sub
cmpsb
sbb
into
or
mov
xor
mov
cmpsb
sar
inc
push
incl
and
aas
test
jbe
out
ds
rcrb
mov
push
dec
scas
xchg
bound
fmul
dec
cmpsb
jbe
rcrl
or
fdivrp
adc
sbb
cmpsl
cwtl
mov
inc
xchg
mov
int3
jmp
jo
mov
fadds
cmc
inc
pop
cltd
clc
data16
cmp
mov
cld
into
push
dec
xchg
stos
test
dec
jmp
and
ljmp
adc
cmpsl
xchg
mov
inc
cli
in
or
add
mov
pushf
xchg
loope
pop
dec
jmp
test
push
xchg
push
push
clc
bnd
push
call
dec
push
fsubp
push
xchg
cmc
in
fstpl
stos
pop
mov
push
sbb
movsl
and
pop
xchg
imul
or
inc
inc
mov
clc
pop
pop
pop
sub
idiv
addl
test
adc
jae
adc
sti
inc
adc
add
push
mov
add
mov
fildl
ret
sub
add
dec
out
unpcklpd
fsubrl
pop
mov
fidivrs
push
sti
in
divb
cmp
imul
and
nop
test
das
adc
pop
arpl
or
clc
push
cmp
in
pop
pop
fs
sbb
dec
or
jb
add
ficoml
stos
mulb
or
cmpsl
sti
lahf
dec
test
aaa
out
xchg
aam
sbb
out
hlt
out
jge
fdivl
push
sub
sti
psrlq
imul
inc
enter
adc
push
shll
mov
aas
inc
xchg
mov
inc
inc
xchg
imulb
roll
mov
fistpll
ficoml
aam
inc
push
fcmovnb
test
push
aaa
into
call
sar
adcl
outsl
call
es
xchg
fwait
in
mov
inc
cmp
in
inc
sarl
lea
arpl
mov
xor
xlat
ss
popfw
inc
rcll
mov
repz
mov
lret
sub
sbb
test
jbe
fistpll
add
jl
push
jbe,pn
into
pop
push
lods
gs
lds
ljmp
lret
rcll
cld
ret
xor
mov
pop
xchg
mov
or
stc
stos
cmp
dec
mov
add
fistps
not
addr16
rorl
mov
fs
cld
aam
sbb
fdivrs
pusha
scas
lret
xchg
mull
or
xchg
pusha
sub
xchg
ret
xchg
fcmovu
sub
iret
fists
ror
dec
xchg
mov
mov
or
adc
push
pop
testl
sbb
test
jle
pop
jg
and
pop
mov
push
cmp
sub
ss
call
lea
or
dec
test
lret
loop
sub
outsl
sbb
or
mov
mov
scas
and
adc
jmp
loopne
mov
adc
lods
test
mov
jge
jg
cmp
xor
mull
sti
push
push
iret
ficoml
das
fisubrl
pusha
ficomps
dec
imul
xchg
pushf
inc
xchg
jnp
insb
mov
pop
mov
pop
mov
out
xchg
mov
hlt
leave
ficomps
push
cli
cli
sbb
dec
mov
fwait
cmpl
in
mov
or
adc
outsl
out
push
push
sub
movsw
mov
dec
rcr
enter
cmp
pop
addr16
popa
lahf
or
xchg
jge
mov
push
sbb
push
test
lods
jb
out
int3
insb
jo
inc
rclb
inc
xlat
clc
pop
scas
scas
push
mov
test
sahf
or
int
jl
dec
push
mov
pop
pusha
cmc
outsb
mov
loope
or
rcrl
hlt
add
bound
int3
idiv
test
repnz
adc
jg
ret
loop
in
pusha
mov
gs
stc
in
lcall
pushf
mov
xchg
das
ss
repz
pop
mov
sub
fdivr
or
push
into
mov
shr
sar
enter
xchg
pop
call
repz
pop
nop
inc
mov
stc
mov
jge
fs
repnz
jo
aam
mov
sbb
js
ljmp
inc
ret
mov
xlat
mov
mov
fwait
push
stos
jge
cli
ficompl
adc
sub
shlb
rcl
xlat
outsl
sahf
mov
push
jae
xchg
pop
push
aaa
sbb
test
mov
adc
scas
mov
push
push
push
mov
and
push
inc
jnp
mov
fsubp
sub
cmpsl
ret
aad
cmp
fcmovne
jo
sti
ds
mov
scas
lahf
mov
lods
pushf
jg
fcom
dec
xchg
movsb
in
lahf
cmpsb
xor
aas
in
sbb
pushf
lahf
mov
inc
xchg
and
or
mov
ljmp
fchs
and
cld
dec
or
lret
push
fisttpll
outsb
xor
movsb
jp
rcl
mov
aaa
mull
fsts
cmp
repz
xorb
out
inc
sub
addr16
xor
cld
fists
sbb
arpl
nop
addl
outsb
int
mov
int3
dec
ficoml
mov
outsb
call
sarb
pop
sub
in
loop
dec
in
rol
add
mov
cmp
mov
mov
inc
jb
out
mov
std
sbb
lock
or
push
out
dec
fcoms
push
mov
xchg
data16
xchg
jge
sarb
lods
jb
push
mov
or
lret
mov
dec
push
insb
adc
inc
or
fdivp
pop
xchg
xchg
js
dec
scas
jmp
dec
sahf
mulb
push
out
sbb
ljmp
mov
fcoms
fsubs
pop
sbb
mov
fsubrs
inc
idivb
mov
pop
jb
xlat
lock
adc
in
ljmp
aam
pop
int
das
imul
inc
je
inc
pop
mov
mov
decl
insl
and
mov
or
xor
out
movsb
inc
mov
stc
filds
fnstenv
sbb
add
cli
mov
lret
inc
je
mov
lods
scas
sub
push
dec
xlat
dec
push
ret
add
in
sbb
or
jnp
sbb
jae
mov
or
rcl
notl
out
int
cltd
mov
nop
stos
aad
in
mov
cmp
xor
outsb
test
int
jp
mov
test
stc
cmp
cld
leave
repnz
mov
out
and
push
sbb
dec
inc
int
mov
jnp
dec
fnstenv
jmp
in
jb
imul
fcoms
pop
pushf
mov
iret
loop
adc
jmp
inc
stc
aad
push
loope
fwait
cmp
jg
js
mov
add
mov
out
and
sti
cmp
loop
lret
sbb
mov
in
inc
movsb
out
mov
imul
push
xlat
mov
xchg
inc
and
hlt
int
sub
ljmp
pop
jle
inc
movzbl
pop
movsb
xor
mov
fs
stos
and
cmc
mov
cmc
mov
sbb
jl
and
pop
sub
xchg
negb
mov
push
rclb
cwtl
mov
xlat
cmpb
ja
push
clc
roll
fsubp
std
out
enter
daa
scas
fcomps
cmp
jno
mov
sbb
mov
pop
dec
test
lods
sbb
sbb
sbb
mov
mov
xchg
pop
dec
mov
cmpsl
jecxz
cmc
divb
mov
inc
pusha
cmp
cmpsl
pop
fmul
sbb
lcall
cmp
dec
ss
mov
jbe
sbb
sbb
ret
mov
cltd
adc
or
sub
sub
mov
dec
dec
sbb
mov
xor
imul
jl
sub
lret
mov
movsl
add
adcb
dec
xorb
dec
push
rcr
stc
mov
lahf
xor
xchg
mov
jle
daa
mov
jo
pop
loope
mov
jns
outsb
jle
mov
jle
data16
iret
icebp
popa
xchg
sub
daa
xchg
out
movsb
repnz
push
lods
inc
pop
sub
push
pop
cmp
testl
push
xor
aas
xchg
pusha
inc
pop
push
ret
pop
cmpsb
pop
pop
enter
loop
dec
ss
cmp
out
outsb
dec
push
mov
jle
push
push
push
inc
loope
pop
das
xor
or
jmp
cmp
pop
xor
scas
test
scas
ljmp
sbb
mov
or
out
into
mov
and
and
and
sub
sbb
ret
cmp
cmp
movsb
jmp
aad
pop
adc
sub
outsb
dec
dec
ret
cmp
movsb
fbstp
andb
pop
inc
repz
adc
jecxz
insb
test
add
add
ret
push
nop
pop
out
mov
lcall
jo
fists
stos
out
mov
lcall
sbbb
cld
mov
pop
xchg
push
lcall
nop
pop
ret
push
movsb
mov
push
into
das
xchg
adc
push
cmp
jecxz
lock
sub
or
push
and
pop
out
call
sbb
sbb
std
sub
sbb
loop
in
inc
xor
and
mov
loop
sbb
into
jg
fadd
int
mov
sub
lcall
and
mulb
js
sbb
pusha
sub
cmp
pop
push
mov
sbbb
xchg
inc
ss
sti
mul
jp
cli
mov
pusha
pop
stos
pop
ret
out
ficoms
inc
fbld
lcall
clc
push
inc
pop
icebp
movsl
das
pop
jge
mov
xchg
cmp
push
cwtl
jo
xor
dec
or
pop
xchg
insb
pop
push
pushf
loope
dec
mov
jle
mov
inc
cmp
xchg
mov
sti
xchg
pop
fwait
push
or
cs
add
mov
sub
movhps
aas
arpl
daa
ljmp
dec
scas
repz
xchg
jmp
xchg
lock
and
out
xchg
and
jmp
push
hlt
je
push
adc
mov
arpl
test
push
and
insl
mov
sbb
sub
dec
cmc
xor
pop
xlat
fsubrs
stos
test
or
cld
mov
call
lahf
mov
cmp
inc
cmp
xor
test
jno
dec
pop
loop
pop
xchg
push
sbb
stos
fwait
inc
add
rorl
mov
test
pop
sub
andb
ret
hlt
and
fisubl
aas
sbb
aas
xor
sahf
in
mov
addr16
rorb
je
pop
imul
inc
dec
xor
inc
push
sub
ret
cmp
sub
push
aaa
daa
stos
movsb
dec
and
xchg
js
call
lret
adc
xchg
int3
push
xchg
out
sbb
dec
inc
xchg
sarl
ss
push
dec
cmpsb
mov
pop
mov
rcl
in
jne
dec
daa
xchg
dec
pop
out
pusha
push
lahf
aas
loop
push
push
orl
jns
imul
jo
cmp
inc
push
imul
dec
xchg
fnsetpm(287
mov
inc
aas
imul
mov
iret
and
mov
mov
sahf
insb
lock
mov
cs
and
fisubl
push
add
adc
ss
and
cmp
pop
dec
sub
jecxz
sbbl
data16
dec
jl
sbb
and
scas
cld
clc
je
adc
cmp
mov
cmp
mov
xchg
or
mov
daa
fists
aad
dec
mov
fists
mov
ja
pop
rorl
adc
ljmp
push
or
lcall
popa
aas
call
cmpsl
jne
out
pop
sub
js
sub
xor
pop
out
cmc
dec
mov
xor
pmulhuw
sub
sbb
cmpsl
push
mov
xor
mov
mov
clc
sbb
push
fadd
xchg
sbb
xchg
jl
shrb
or
add
sbb
lea
jmp
into
jns
mov
inc
or
mov
jp
in
repz
and
std
test
mov
adc
pusha
pop
sub
dec
addl
dec
cld
dec
and
insb
inc
add
mov
hlt
mov
xor
lods
call
std
push
jmp
movsb
sti
mov
jecxz
out
jecxz
mov
pushf
loopne
pop
jl
push
pop
push
out
sbb
cltd
push
mov
lods
dec
mov
jae
pop
push
decl
es
sub
aad
jmp
cmp
rolb
aam
psubsb
mov
mov
xor
dec
and
aam
outsl
pop
xchg
lret
sbb
and
add
bound
insl
lock
mov
mov
leave
cmpsl
insl
and
fs
or
pushf
add
pusha
sti
je
imul
cmpl
mov
add
ds
pop
ja
jo
aam
push
mov
addr16
call
int3
loop
test
cmp
loop
insl
das
in
xchg
jae
rcll
jl
int
inc
mov
push
and
int3
xchg
cli
inc
xchg
pop
sbb
xchg
jg
push
sub
xchg
mov
test
in
sbb
into
aaa
pop
push
stos
cmpb
pop
push
lock
xor
lods
jnp
in
sbb
shrl
cmp
icebp
rcl
pop
mov
mov
sbb
mov
mov
es
mov
adc
mov
and
fs
pop
mov
push
mov
cwtl
std
lock
inc
shrb
test
xlat
in
cmc
scas
movsl
es
xchg
and
mov
sbbl
dec
js
fcoms
pop
inc
fld
jmp
addr16
ret
nop
popa
dec
sbb
add
mov
icebp
push
je
mov
hlt
clc
sarl
mov
mov
dec
xchg
add
mov
arpl
mov
testl
in
xchg
pop
clc
xor
mov
pop
andb
pslld
and
mov
inc
nop
pop
clc
int
ret
cmp
push
jle
mov
pop
mov
push
push
cli
shlb
mov
and
shrb
nop
mov
dec
popa
push
cmpsl
into
adc
sbb
adc
sar
pop
imul
push
sbb
xorb
ds
adc
stos
imul
push
data16
mov
or
out
shrl
mov
mov
in
sahf
loope
mov
push
pop
push
inc
cli
shrb
cmpsb
mov
add
sub
aas
cmpsl
dec
and
shll
test
pop
test
mov
insb
sub
pop
inc
setae
xor
or
loope
pop
imul
inc
mov
xchg
inc
and
adc
icebp
je
test
adc
imul
mov
lds
xchg
out
xor
mov
mov
and
ljmp
ret
sbb
xor
mov
mov
xchg
hlt
jp
aad
into
sbb
out
push
test
or
repnz
mov
in
mov
into
shrl
jno
lods
icebp
cmp
jns
cltd
jnp
adc
and
arpl
pop
pop
pavgw
add
mulb
dec
leave
sub
stos
fsubp
jecxz
mov
dec
mov
loope
inc
xor
push
dec
pop
insb
dec
call
hlt
mov
pusha
lcall
xchg
xor
dec
push
and
inc
xor
push
pop
add
sbbl
nop
pop
arpl
stos
xchg
arpl
in
insb
out
leave
repnz
jns
sub
adcb
inc
js
and
sub
imul
test
cmp
and
inc
sub
or
mov
arpl
push
pop
push
lret
mov
dec
in
pop
cmc
mov
cmp
clc
jbe
jle
sub
mov
ljmp
cltd
fnstsw
ret
fnsave
outsb
push
fdivr
popf
popa
mov
imul
inc
xchg
insb
dec
ret
nop
cli
scas
lcall
dec
vmovhpd
pushl
inc
jp,pt
push
cld
xchg
test
fstps
push
insl
ds
sub
xchg
repnz
imul
scas
pop
cmpsb
jg
rorb
in
ficompl
imul
sahf
clc
aas
mov
xchg
adc
jno
push
mov
sbb
leave
mov
and
sbb
sti
xchg
pop
call
jl
outsb
pusha
wrmsr
jns
incb
pop
sbb
test
inc
movsb
test
in
aaa
cmpsb
outsl
dec
xchg
cmp
inc
lock
jp
pop
adc
lods
jns
fisubrl
insb
jmp
arpl
movsl
jne
rcll
xchg
das
aas
ss
in
out
mov
insl
or
jne
jo
xchg
fdivrl
inc
ljmp
jns
dec
add
test
cmp
les
pop
outsl
pop
push
into
in
ljmp
les
dec
nop
fnstenv
cmpsl
icebp
test
inc
dec
add
pop
testl
push
add
jle,pt
iret
sbb
aas
pop
nop
add
jmp
out
orb
lret
xchg
out
jg
icebp
xchg
push
test
mov
cmp
mov
xor
lahf
or
push
add
mov
addr16
xchg
mov
mov
sbb
hlt
add
push
popf
loopne
ja
fsub
cmp
hlt
iret
popa
rclb
cld
push
sub
fsubl
or
addr16
jle
and
cmpsl
adc
jecxz
sbb
adc
out
nop
jmp
push
xor
xor
fnsave
cmp
in
push
enter
xchg
or
repz
lret
or
push
pop
pop
aas
aaa
sahf
add
cli
and
jp
and
shll
out
jg
imul
or
in
push
mov
push
cmpsl
adc
pop
cmpsl
push
loope
jp
andl
movl
pop
pop
adc
mov
sarb
adc
cmpsb
push
std
xor
cld
icebp
push
xchg
mov
les
mov
push
adc
ljmp
jne
gs
loop
jns
fistpl
add
cmp
popf
mov
iret
push
loop
xchg
fistps
add
xchg
sti
outsl
outsl
js
shlb
dec
cli
xchg
or
mov
cmp
and
pusha
or
dec
rclb
push
int
clc
xchg
mov
cmp
ja
jle
mov
fstl
call
je
daa
cmp
mov
adc
push
int
xchg
sbb
aam
xchg
xor
lods
dec
mov
and
nop
stc
dec
cmp
stos
enter
inc
loopne
imul
out
pop
add
pop
adc
jge
adc
push
push
mov
xchg
pop
sbb
ret
addr16
fisttpll
pop
popa
adc
mov
mov
jae
xor
inc
cmc
push
xchg
ss
pop
cld
shll
loope
stos
dec
cmp
pop
mov
ss
jg
push
sbb
xor
aaa
pop
cmp
je
jnp
pop
fsts
pop
add
sub
movzwl
jbe
insl
add
lds
cs
loope
ds
xlat
cli
pop
or
push
negl
jae
aam
push
lahf
adc
push
out
xor
addr16
ss
cs
push
jle
pusha
mov
cld
outsl
push
cli
push
cmc
xchg
push
mov
cmc
mull
mov
pop
lods
cmp
out
and
stos
popf
push
sub
xor
add
mov
fimuls
jmp
loop
or
adc
inc
scas
lock
movsb
push
add
fsubrs
aas
inc
imul
pop
pop
mov
filds
jmp
mov
cmp
sbb
rcrb
push
mov
adc
in
xor
mov
cmc
xor
push
fstcw
ljmp
adc
movsl
push
in
sub
sahf
subb
andl
or
jmp
outsb
jb
jmp
stos
push
mov
xor
popf
jmp
test
mov
xchg
xchg
imul
cltd
outsl
in
aad
jo
jno
hlt
or
cs
hlt
imul
aad
ficompl
arpl
adc
stos
mov
mov
xor
shrl
popf
pop
bound
inc
in
mov
movsl
push
stos
adc
dec
push
fwait
pusha
bound
mov
in
std
into
hlt
mov
adc
out
lret
fistps
inc
xchg
hlt
stos
xchg
jle
out
mov
in
mov
mov
push
or
jnp
push
leave
adc
shl
or
adc
push
or
fs
push
xlat
mov
aad
mov
clc
loope
cld
sub
cli
pusha
outsl
sub
cs
leave
bnd
mov
pusha
icebp
je
ljmp
out
iret
cli
pusha
jp
es
scas
test
aas
outsl
jg
sbb
pop
push
push
fsubs
mov
add
nop
inc
je
outsb
inc
and
mov
mov
jmp
icebp
mov
xor
jo
jnp
icebp
or
add
or
je
scas
std
jb
cmp
pop
push
lcall
imul
outsb
add
icebp
dec
add
leave
ficoml
jle
inc
mov
push
repnz
and
dec
into
movsl
mov
in
add
cld
dec
pop
shlb
sub
or
lock
aaa
xchg
jg
call
ret
pop
sbb
movsb
push
in
push
fsubrs
push
clc
ficompl
push
xchg
add
clc
mov
add
test
mov
repz
adc
maskmovq
notl
inc
mov
icebp
xor
xchg
out
sbb
aad
mov
xchg
xlat
mov
xchg
lahf
xor
les
and
xor
cld
in
xchg
sbb
adc
jb
sbb
mov
push
inc
jg
rcl
leave
or
add
mov
test
cltd
xchg
push
push
jp
cmp
sub
mov
mov
pop
testl
dec
loope
push
insl
push
stc
push
cmpsl
out
xor
inc
das
adc
int3
cmpsl
dec
inc
shl
loop
mov
in
roll
out
dec
sbbl
rcl
fadd
jg
in
ficoml
inc
andb
gs
je
mov
rol
out
lods
lahf
xchg
xchg
shrb
sub
out
pop
jnp
bound
cmp
xor
xor
imul
aad
idivb
dec
pop
call
push
stos
pusha
and
jmp
sbb
push
cltd
in
repz
sti
jo
jo
mov
lods
movsb
call
shrb
jnp
stos
sbb
mov
mov
mov
sbb
xor
sbb
jecxz
stos
mov
out
ret
pop
sub
loope
daa
mov
outsl
pop
mov
sub
pushf
and
mov
test
mov
xor
out
shl
xchg
dec
dec
pop
xchg
lods
hlt
loop
imul
adc
push
pop
nop
fsts
out
hlt
test
sbb
push
jnp
jl
mov
mov
test
inc
lds
loope
dec
mov
mov
imul
mov
mov
dec
daa
jle
int3
inc
mul
add
pop
in
mov
fdiv
movsl
cmp
jnp
cli
loopne
roll
cmp
cmc
lock
push
dec
inc
shrb
mov
insl
andb
outsl
scas
aas
outsl
inc
mov
pop
pop
test
and
fstpl
lea
ds
fstpt
jb
fstps
inc
mov
out
push
ret
xor
fimuls
push
bt
add
push
std
inc
xchg
lahf
xchg
jne
lock
push
das
sbb
pop
mov
enter
dec
insl
test
and
cmp
pop
cmpsl
daa
js
push
imul
xchg
mov
push
or
xlat
rorl
jp
cmp
stc
outsl
push
pop
mov
mov
aam
jge
jae
shlb
mov
push
out
rcrb
xlat
mov
stos
call
jnp
xchg
jle
js
inc
fists
cmp
xor
sub
fimuls
addr16
test
adc
mov
fldenv
ficoms
pop
add
xor
sub
cmpsb
mov
mov
cmp
sahf
xchg
and
mov
pop
and
popf
mov
mov
adc
pop
nop
pusha
push
push
adc
cs
std
icebp
rcrl
sbbl
pusha
movsl
push
popf
loop
cmovl
imul
sub
iret
ljmp
lea
scas
js
lods
adcl
pushl
movsl
jno
adc
mov
aas
adc
inc
data16
inc
call
fwait
loop
pop
add
push
bound
pop
out
add
stos
adc
aam
inc
mov
icebp
aad
dec
in
add
adc
shl
cli
cs
mov
push
xor
cwtl
adc
out
mov
add
out
inc
mov
pop
xchg
or
test
das
push
ds
mov
gs
stos
cmp
lret
cmpsb
cmp
test
icebp
add
sbb
movsb
add
in
out
pop
jl
stos
orl
movsl
call
or
outsb
or
clc
xchg
shlb
daa
out
movsb
or
xchg
mov
xchg
stc
addr16
add
or
inc
push
movsl
jns
sub
pop
jo
jle
movsb
cmp
xchg
add
dec
jns
dec
mov
out
mov
movsl
add
jo
jmp
cmp
adc
bound
cmp
ror
push
stc
lahf
pusha
xchg
fwait
jg
or
jo
mov
or
dec
std
cli
addr16
and
push
ret
shl
dec
push
lret
push
push
or
dec
inc
jnp
clc
lret
xchg
mov
lcall
mov
xchg
xchg
pop
jecxz
and
adc
dec
cmc
add
pop
pushl
sbb
insl
fstpt
out
dec
sbb
pop
push
es
stc
or
repnz
push
test
enter
out
roll
push
or
adcl
in
adc
pop
popa
pop
cltd
fisubrl
cmp
cmpsl
sbb
lea
add
xchg
mov
xchg
sub
jl
dec
pop
les
test
or
lcall
or
sti
mov
stc
jge
in
lock
test
add
adc
lret
mov
stos
insl
call
sub
mov
add
add
jns
cmp
scas
std
repnz
in
mov
cmc
push
sbb
pushf
jnp
fisubrs
sub
dec
push
jno
addr16
and
arpl
xchg
repz
fstps
stc
out
in
pushf
pop
sub
bnd
data16
popa
addr16
je
lret
push
je
sbb
inc
cmp
xchg
test
addr16
stc
adc
loope,pt
daa
sbb
mov
daa
loopne
sti
push
popa
arpl
stos
mov
roll
mulb
or
inc
add
mov
xchg
andl
jae
stos
and
leave
jl
test
fnstsw
xor
fists
movsl
push
out
inc
sbb
mov
sub
sbb
jmp
das
pop
xchg
adc
sti
adc
int3
jge
adc
mov
xor
mov
fcoml
sbb
test
xor
mov
sbb
push
mov
mov
or
gs
call
adc
mov
pop
call
pop
in
fimull
xacquire
jg
xchg
test
test
cmp
in
push
sbb
add
ds
cmp
dec
jl
jl
inc
into
flds
aam
sbb
je
jne
cmp
jecxz
test
lret
xchg
rcrl
nop
jle
pop
shr
mov
push
fmull
insl
jl
xchg
loopne
cmpsl
mov
movsb
jle
xchg
adc
ljmp
addr16
dec
repnz
imul
mov
daa
in
call
jg
xchg
xchg
shrl
inc
movsb
ja
sub
ja
inc
jmp
or
lcall
jecxz
dec
jl
jecxz
repnz
sbb
mov
jg
mov
mull
pusha
cwtl
mov
jp
out
rcrb
inc
hlt
in
out
jl
sbbl
inc
mov
adc
dec
dec
hlt
out
add
inc
jecxz
aam
mov
mov
lock
enter
pusha
pop
or
inc
imul
pop
cli
jmp
sbbl
pop
pop
jmp
xchg
jbe
and
pop
out
mov
test
aas
add
jae
sbb
xchg
idivb
or
repz
in
stc
or
mov
outsb
les
nop
outsl
sbb
arpl
insb
stos
pop
fs
movsb
pop
out
pop
dec
push
stos
loopne
stc
cmpsl
jle
push
and
cmp
shll
inc
and
xchg
loopne
int
stc
or
mov
and
imul
xchg
xor
movsb
inc
pop
sub
clc
iret
rolb
pop
imul
xor
test
aas
bound
arpl
sbb
pop
jg
push
into
les
jb
pop
and
dec
pop
sub
into
popf
add
adc
push
inc
jmp
adc
jg
mov
jecxz
jb
xchg
aam
clc
dec
xchg
aaa
xchg
jl
sbbl
rolb
rcrb
lcall
sahf
insl
cmpsl
add
mov
jmp
test
fdivrl
int
push
dec
sbb
negb
imul
jge
in
add
xchg
inc
shl
test
dec
je
inc
jecxz
sub
dec
cld
rolb
sub
and
add
js
sub
pop
sub
iret
xchg
fists
pop
rol
mov
addr16
push
test
push
hlt
cmp
outsl
xor
dec
sub
nop
xchg
loope
ret
push
jb
outsb
mov
xchg
lahf
es
sarb
fmull
sbb
and
and
mov
mov
inc
test
jmp
ret
cmpsb
popf
out
pop
and
fists
pop
shll
daa
scas
add
repnz
sbb
cwtl
imul
rorb
cld
sub
cmp
adc
int
shr
es
cmp
xor
sub
in
pop
pushf
cltd
ds
and
iret
les
xchg
adc
jp
std
divb
push
out
jle
nop
jmp
mov
subb
inc
sbb
jg
sahf
dec
clc
xchg
imul
add
cld
lcall
push
inc
loopne
xchg
movsl
jge
int3
fldt
and
imulb
fstpt
inc
cmp
xchg
mov
mov
in
sbb
or
shl
sub
push
stos
hlt
outsl
mov
dec
andb
cmp
ljmp
xchg
push
jne
pop
aas
fwait
xor
jnp
pushw
add
out
push
fwait
dec
and
sub
mov
arpl
and
loop
mov
ljmp
arpl
add
mov
loopne
pop
adc
insl
adc
sbb
test
les
push
aad
repnz
repz
sub
xor
imul
loop
push
adc
shll
add
push
sbb
pusha
jae
and
cmp
xor
out
aas
jge
xchg
andb
and
je
cmp
adc
add
fwait
sub
jge
repz
and
out
hlt
cli
movsb
xor
cld
aam
adc
js
sbb
sbb
ror
mov
xchg
outsb
inc
shlb
pop
mov
das
xchg
andl
in
ljmp
jbe
jno
jl
xchg
leave
mov
gs
mov
adc
negb
xor
fidivrl
lock
sbb
and
fiaddl
adc
ds
xchg
in
negl
adc
sbb
cmp
mov
fwait
ret
arpl
cmp
mov
movsb
pusha
inc
mov
inc
cmp
jp
cld
movsb
xor
sub
mov
sbb
pushf
sub
pop
cld
mov
cmp
aaa
pop
test
and
dec
fadds
pop
lds
push
jo
ss
cmpsl
xchg
cmpsl
cmpl
loopne
gs
popa
push
jecxz
inc
xchg
fstl
stc
jmp
mov
sarb
pop
mov
dec
sbb
jnp
jne
popa
adc
mov
jp
dec
fstpl
adc
ret
out
inc
dec
jae
test
cmp
mov
dec
mov
fisubl
sub
pop
jp
jmp
jne
shrb
stos
or
sub
lods
mov
push
dec
int
fidivrs
dec
mov
stos
or
outsb
xor
dec
dec
adc
pop
shlb
jp
outsb
lret
mov
sahf
sbb
stos
stos
hlt
inc
cmpsl
outsl
xchg
popa
xchg
out
mov
xor
and
cmp
rep
sub
insb
push
int3
jb
mov
sub
jb
mov
push
push
imul
sti
or
je
jl
sub
nop
rcr
sub
mov
jl
sub
push
add
imul
cmp
adc
pop
add
fistpll
push
sub
push
and
dec
xor
fdivr
lcall
dec
aaa
lods
ds
pop
mov
or
sbb
and
mov
adc
test
add
lods
inc
mov
out
mov
mov
aam
stos
mov
dec
jo
in
and
popf
inc
mov
arpl
cmpsl
dec
xor
movsb
cmp
mov
mov
sub
stos
incb
lea
rcrl
cmpsl
andl
insb
mov
fs
xor
mov
or
lock
ret
in
and
push
fdivl
sbb
jmp
shrb
sub
sbb
or
sti
pop
outsl
imull
inc
mov
out
inc
xchg
cld
into
push
daa
test
ljmp
sbb
shl
lret
xor
pop
cmp
jnp
addr16
sub
push
cmp
and
ljmp
and
inc
cwtl
xchg
mov
xor
les
pop
sbb
cmp
mov
jns
dec
loope
inc
cmpsb
movsl
out
push
xchg
scas
mov
or
xchg
inc
adc
mov
pushf
sbb
xchg
es
xchg
jne
mov
sub
mov
cmp
cwtl
mov
adc
cmovns
mov
cmpsb
test
cmp
sbbl
xchg
cmp
stos
jns
ljmp
push
aam
jnp
push
addb
xchg
dec
mov
push
fmul
sbb
inc
sub
lcall
xlat
mov
enter
jp
arpl
je
mov
cltd
movsb
out
mov
lret
or
dec
and
adc
jbe
jp
stc
loop
clc
jnp
and
es
js
push
mov
jbe
sbb
stc
rorl
nop
or
mov
addr16
mov
push
sarl
lret
or
mov
dec
inc
dec
or
push
xchg
sbb
data16
mov
rcrb
bound
dec
outsl
and
aad
push
mov
jecxz
orl
adc
cmpsl
rorb
xlat
push
adc
add
cmp
pop
jno
test
lods
imul
neg
mov
repz
hlt
and
mov
jmp
scas
mov
sub
insb
pop
sarb
jb
ds
dec
xor
enter
dec
les
fcoml
inc
pop
mov
negb
jge
add
xchg
popf
in
idivl
ljmp
sbb
loop
adc
jns
imulb
out
jge
push
push
inc
pop
stc
out
std
lds
jp
mov
inc
das
mov
lret
cltd
xchg
mov
leave
cmp
aam
imul
hlt
jl
fsubrl
lret
cmp
inc
repz
adc
stc
in
cmp
xchg
inc
std
out
aam
ret
leave
lea
sbb
in
jecxz
fstpl
xor
pop
aas
mov
inc
aam
xor
mov
cvttps2pi
fildll
jns
push
xchg
loop
mov
ss
pop
loope
xchg
fmul
aam
sub
cld
repnz
fwait
mov
and
sub
and
ja
fisttpl
jne
test
cmp
outsb
outsl
imul
mov
sbb
imul
lds
nop
cmc
out
fsubrl
je
xor
ret
and
add
testb
pop
push
enter
mov
xor
ja
mulb
mov
jmp
push
and
stc
or
pop
mov
js
aad
scas
push
and
fcoml
xor
cwtl
lahf
mov
pop
sbb
and
jg
xor
sahf
cmc
dec
cmc
xor
pop
xchg
mov
mov
sbb
dec
mov
leave
insb
adc
jne
fcmovnbe
lret
popf
mov
in
mov
mov
mov
ds
int3
cmc
dec
mov
into
lcall
mov
cltd
lea
and
out
mov
cmp
mov
ret
pusha
xlat
xchg
repz
fs
add
mov
mov
and
sub
inc
mov
mov
jg
imul
notl
fisttpll
mov
ret
stos
fsts
mull
mov
insb
fs
sarl
mov
and
shlb
popa
loope
test
insb
mov
mov
fcoms
mov
movb
fmuls
movsb
nop
rorb
cmp
mov
cmc
add
stos
adc
in
jg
and
outsb
rcll
icebp
pop
adc
test
daa
jmp
stc
inc
or
mov
mov
mov
testb
xchg
cs
sti
testl
cmp
cmp
and
andl
je
mov
mov
xor
jle
fsubp
imul
das
jecxz
ja
jae
add
loope
add
repz
fists
lahf
pop
out
das
loope
cmp
inc
push
ror
dec
xor
xor
or
push
pop
cmp
xlat
cmp
jnp
sbb
sarl
push
sub
addr16
sub
sbb
pop
fistpl
mov
pop
out
push
and
mov
cld
jbe
rcrl
cmp
cwtl
mov
mov
sbb
aaa
push
cmpsb
add
lahf
loopne
pop
mulb
and
pop
fsubrs
mov
mov
or
push
bound
dec
aas
pop
jbe
fsubl
stos
fsubrs
mov
les
out
rclb
outsb
add
or
in
jge
mov
mov
mov
dec
pop
push
fisttpl
test
clc
cmpsb
push
add
pushf
jns
jmp
cmp
dec
and
aad
cmp
pop
push
inc
int
and
mov
aas
int3
xor
out
dec
dec
sbb
sub
sbb
pop
dec
in
jae
jl
jg
jmp
and
in
pop
clc
dec
cmpl
sbb
stc
mov
das
mov
negb
dec
mov
insb
jp
shlb
dec
push
push
or
mov
mov
adc
mov
int3
mov
sbb
and
dec
push
mov
testb
cs
mov
push
pop
push
ficomps
jmp
adc
mov
fwait
push
enter
add
xchg
xchg
mov
sbb
cwtl
and
add
jbe
decb
out
sbb
fiaddl
adc
jns
pop
mov
loop
lds
jo
shl
and
cmp
sbb
adcl
pop
mov
mov
mov
jnp
scas
clc
testb
arpl
sbb
in
push
lods
inc
repnz
pop
cmp
in
or
imul
mov
mov
cmp
test
jecxz
push
push
jecxz
lret
dec
cmp
sbb
mov
cmp
arpl
in
jo
shrw
ss
stos
ss
fsubr
sahf
fsubl
jg
adcl
in
sub
out
int
ds
mov
imul
push
orb
jns
aam
pop
repnz
inc
data16
addl
stos
jg
and
std
vmovlhps
xchg
mov
inc
fists
pop
into
mov
call
arpl
les
rclb
add
sbb
movsl
xor
mov
data16
ljmp
rcl
cltd
jmp
sti
ds
data16
jne
mov
cmp
push
gs
adc
jbe
test
add
cmpsl
js
cld
pop
outsb
and
lds
adc
iret
sbb
inc
push
cmc
mov
inc
out
or
cld
fsubr
push
xchg
xor
imul
jb
in
mov
add
jae
loop
mov
ds
in
leave
in
test
fldcw
rcrb
repnz
pop
lahf
movsl
notl
pop
leave
iret
dec
ljmp
insb
in
add
cmp
jns
pop
push
int3
mov
sub
imul
clc
ficompl
mov
push
outsl
arpl
mov
cld
stos
loope
fsubrl
pusha
dec
test
ss
addr16
jo
jl
fdivrl
ficompl
std
cmp
dec
sub
jmp
sub
aaa
sbb
cmpsl
jecxz
or
cli
mov
test
mov
push
cmp
push
push
sub
push
int3
mov
popf
xor
adc
mov
ret
mov
sarl
xchg
mov
dec
push
and
notl
movsb
xor
cmp
lcall
outsb
dec
lret
sbb
mov
loope
scas
into
pusha
push
enter
cld
pop
push
dec
fidivs
adc
cmc
dec
push
dec
ja
mov
mov
mov
mov
in
mov
mov
xchg
dec
in
sbb
fists
fildll
fsubl
add
jbe
mov
or
cmp
sub
mov
incb
xchg
xchg
daa
sbb
cli
jle
fdivr
or
mov
lods
imul
mov
xchg
xchg
pop
call
into
mov
fsubrs
sbb
adc
xor
or
out
xor
iret
insb
fsubrs
push
mov
xor
pop
in
jae
sub
incb
and
ds
cld
repnz
je
lea
inc
fidivs
adc
dec
and
clc
out
lcall
mov
ret
int3
movl
lret
out
push
mov
sub
mov
mov
out
sbb
mov
inc
adc
movsl
mov
fcoms
int
cltd
aam
push
ljmp
and
xchg
add
fiadds
lea
sub
incb
xor
lods
pop
pusha
jnp
aam
outsb
cltd
dec
aaa
pop
fmuls
mov
and
cmp
cmp
arpl
sbb
push
and
mov
sbb
dec
xchg
jle
jae
add
and
fmull
hlt
xchg
mov
arpl
test
jmp
xchg
adc
cmp
insb
pop
xor
js
adc
mov
jb
ret
pop
sti
pop
xchg
inc
ss
xor
lds
dec
sub
inc
cmpsb
lods
bound
pop
and
loopne
or
ret
and
or
leave
xchg
mov
clc
lret
mov
and
fwait
push
mulb
fcomps
sbb
addr16
mov
fsts
dec
add
adc
fwait
in
mov
cmp
push
dec
mov
xor
out
jae
insb
cli
popf
sarl
mov
cld
and
push
xchg
lea
sub
mov
dec
and
mov
dec
cmp
nop
sbb
mov
imul
xor
imull
or
dec
jne
jnp
stc
cwtl
cmp
stc
leave
or
sbb
push
out
jmp
fdivl
sbb
test
jge
mov
aad
imul
aam
lcall
adc
fisubrs
adc
imul
daa
frstor
clc
adc
movsb
dec
jle
add
mov
ret
jnp
mov
jne
out
xchg
sub
sete
cli
lods
push
in
xchg
int3
fcoml
sar
and
andl
pushf
jbe
out
sub
sbb
jl
xchg
out
sbb
ljmp
and
push
repnz
and
notb
das
jg
incb
test
stos
push
mov
gs
xchg
shl
or
jne
mov
sub
sbb
adc
movsb
pop
fldt
inc
lahf
das
shrl
outsb
and
repz
sub
add
std
mov
scas
or
fldl2e
lret
fildl
popf
mov
dec
clc
mov
aaa
ljmp
add
jnp
ljmp
pop
push
mov
or
stos
pop
add
sbb
iret
mov
cltd
push
mov
pop
lods
out
inc
sti
fwait
cwtl
addr16
jb
insl
mov
xchg
sahf
out
rclb
repnz
mov
cwtl
test
cmc
loope
push
out
jmp
sbb
dec
pop
jge
adc
mov
push
sbb
lds
lret
jp
movsb
or
es
add
cmp
jle
lea
divb
gs
pop
das
or
sub
mov
cmp
das
repnz
out
in
pushf
ja
adc
mov
or
push
xor
aad
sahf
ds
data16
add
dec
and
lahf
mov
inc
or
pop
adc
push
in
xchg
xor
je
ja
push
jb
leave
and
lcall
add
enter
push
adc
pop
add
sub
mov
jg
clc
fisttps
popa
mov
cmp
jmp
imul
pop
push
test
scas
dec
jae
fisttps
push
out
pop
fdivs
jnp
xchg
push
ficomps
xor
fidivl
xchg
movaps
addr16
shl
movsl
jnp
test
stos
mov
cmp
xchg
or
mov
pop
je
xchg
inc
ss
aas
mov
scas
sahf
out
and
loop
bound
sbb
sbb
jp
movsb
dec
mov
jecxz
sbb
in
pop
je
sub
sub
test
into
fiadds
in
ficomps
mov
adc
inc
pop
sub
test
test
mov
ret
mov
xchg
pusha
faddl
out
lods
hlt
jmp
sbb
nop
ljmp
xlat
pop
leave
xchg
cwtl
and
dec
das
adc
es
cwtl
cs
mov
fimull
out
clc
mov
sub
xchg
xor
pop
int
jp
daa
cld
arpl
xchg
andb
call
rol
cmp
cmc
clc
mov
movntps
iret
mov
push
adcb
loopne
aaa
pop
lock
shll
insl
mov
push
mov
jae
mov
out
adc
aam
imul
jp
hlt
out
add
push
test
jbe
jge
les
sbb
sbb
cmp
xchg
std
jg
test
mov
mov
push
jne
fdivr
mov
scas
clc
pop
mov
jno
and
lods
aas
mov
bnd
mov
lock
in
mov
cs
repnz
testl
repz
mov
pop
and
sbb
pushf
imul
sbbl
ficompl
or
lret
mov
dec
popa
mov
mov
adc
mov
pop
dec
pop
push
leave
lods
jns
and
rclb
sub
sub
or
repnz
insl
push
jle
pop
in
pop
in
repnz
push
lds
dec
rclb
cmp
mov
xchg
popa
dec
dec
mov
ss
and
mov
adc
lahf
xchg
pop
lds
adc
jge
aam
daa
ss
stc
dec
sub
cmp
xchg
hlt
add
stos
out
loop
dec
mov
jo
mov
pop
aam
in
daa
fsubl
insb
sbb
sub
mov
out
repz
sub
dec
pop
xchg
jp
mov
xchg
aad
pop
and
test
or
inc
adc
xchg
sti
mov
aad
pop
outsb
and
ret
cmpb
xlat
cmpb
xchg
pop
hlt
and
adc
mov
dec
xchg
faddp
pop
cmp
sahf
sub
mov
mov
js
mov
pushf
rcrb
mov
icebp
or
jp
lods
jns
jge
aam
daa
shll
dec
ret
mov
test
xchg
cmpsl
push
xchg
in
les
sahf
push
mov
es
movsl
mov
jae
mov
out
xor
jae
inc
gs
repz
lds
xlat
mov
ss
jg
cmp
ds
sub
std
testl
shrl
ret
and
mov
pop
pop
lcall
xchg
mov
jp
or
add
or
inc
int
xchg
sti
sub
mov
inc
push
dec
lret
ja
sbb
aam
sarl
iret
adc
shll
scas
repz
xor
adc
push
dec
sbb
ss
mov
cld
out
xor
in
out
test
mov
test
adc
inc
sbb
repnz
andl
jge
mov
xchg
lahf
rorb
lea
xchg
cmp
das
sbb
adc
jg
iret
jle
mov
call
pop
cmp
xchg
inc
xor
lock
aam
daa
add
rorb
fsubs
test
sbb
xor
pop
add
lahf
shl
mov
dec
inc
add
xor
cs
mov
icebp
shll
pop
mov
call
adc
shl
cwtl
pop
jo
inc
mov
or
lds
inc
jne
sub
push
or
xor
lcall
mov
jp
dec
and
test
cmp
add
outsl
xchg
jl,pn
mov
insb
sub
shrl
outsb
jle
push
ja
clc
mov
cmp
jno
push
sub
fwait
push
pop
movsb
fisttpll
js
pop
jo
and
stos
mov
into
mov
testl
pop
xor
lods
daa
jne
ss
ret
inc
call
sbb
jne
fwait
pop
pop
jg
and
pop
jno
push
pop
into
push
jae
std
mov
cs
sub
cmp
mov
pop
test
jg
push
xor
mov
clc
addb
cli
and
cmpsl
push
sub
fs
std
popf
pop
add
pushf
ret
dec
in
sub
pop
or
add
aaa
or
fildll
sbb
xor
repz
pop
test
out
into
pop
cmpsb
and
subb
in
fisubs
je
ss
bnd
and
ret
or
fwait
push
imul
and
cmpsl
rclb
aad
xchg
sti
scas
cltd
jmp
jle
rclb
add
mulb
sbb
addr16
fidivrl
sbbl
and
fdivrs
cmpsl
pushl
les
dec
cltd
loope
test
dec
sub
test
dec
sub
mov
cmp
lods
lds
sub
out
lahf
sub
add
lahf
or
sbbl
rclb
aas
add
fldt
addr16
jg
mov
sbb
mov
fdivl
bound
repz
aad
xchg
or
ficoms
and
ljmp
cmp
mov
mov
int
add
jmp
or
pop
dec
xor
sbb
bound
movsb
push
add
fwait
jnp
xchg
dec
out
mov
sti
mov
cli
popf
cltd
sub
sahf
cli
adc
icebp
lods
fdivr
dec
jb
cld
jmp
pop
fmuls
iret
sbb
xchg
cmpsb
shrl
or
mov
mov
stc
mov
in
push
movsb
das
jle
shlb
dec
xor
popf
std
aad
push
sub
jp
and
dec
roll
ret
pusha
jge
fiadds
push
push
push
fstl
jne
rclb
pusha
out
inc
iret
lret
mov
add
xor
mov
outsl
rol
in
orb
and
or
xchg
xchg
loope
data16
fisttpll
clc
scas
cmp
fwait
lcall
push
loop
jno
into
aam
pop
xor
je
fstps
pop
add
lcall
jbe
fcoms
das
ja
mov
push
push
dec
aaa
ss
clc
aaa
sbb
xor
std
icebp
or
pop
push
jmp
test
out
lahf
ds
fistpl
push
pop
fldcw
cltd
and
push
add
repnz
icebp
sbb
and
xor
addr16
cmp
insb
outsb
lahf
call
out
lret
psubw
lock
repz
dec
and
push
jne
test
or
repnz
stc
pusha
fdivp
aad
repnz
mov
mov
sbb
aad
rclb
inc
lods
cmp
xor
enter
sub
inc
pop
adc
mov
dec
dec
mov
sub
inc
jnp
cli
push
call
pop
inc
in
mov
enter
movaps
jecxz
push
cmp
jno
outsb
aas
push
mov
loop
andb
fists
or
cwtl
jns
outsl
inc
fisubrl
lret
ret
jns
add
jne
repnz
xchg
jle
scas
mov
sbb
jbe
sbb
or
cmp
xor
jno
jnp
ljmp
aam
dec
into
xor
cltd
xchg
push
fcmovu
sub
cmp
push
dec
sbb
cmp
std
sti
bound
cmp
and
ja
rorb
ret
mov
scas
arpl
mov
jl
icebp
lret
jns
repnz
push
lahf
sahf
xchg
push
xchg
pushl
iret
dec
mov
add
inc
cmp
fiaddl
add
xchg
xchg
push
mov
rcrb
pop
mov
sub
mov
test
lret
sbb
jg
or
pop
aam
leave
push
xchg
pop
cli
movsb
dec
mov
movsb
bnd
mov
hlt
gs
loope
out
hlt
cmp
mov
fisttps
sahf
jmp
and
or
pop
push
dec
test
ret
pop
repnz
cmc
jmp
int
test
iret
js
xchg
data16
gs
sti
in
arpl
sbb
out
dec
test
fwait
xor
movsb
jle
sahf
mov
cmp
imul
hlt
orl
popa
mov
xlat
cmp
data16
rolb
add
xchg
mov
lock
mov
aaa
adc
and
jle
jmp
aaa
cwtl
dec
jae
outsb
or
faddl
or
stos
xor
inc
mov
shlb
cmpsb
aam
shll
lock
test
aam
pop
add
enter
movsb
movsb
les
inc
push
pop
and
loope
stc
lds
mov
popa
call
mov
in
outsl
fidivrs
out
mov
jns
repnz
fldl
out
pop
push
sbb
pop
cwtl
sti
or
in
adc
sbb
push
cs
cli
cmpsb
cmc
mov
mov
aaa
xchg
sub
xor
sbb
and
jecxz
rorl
dec
sti
lods
sbb
xlat
sub
push
add
fdivrp
xchg
test
jle
mov
mov
push
insl
pop
jne
jnp
mov
in
jnp
adc
mov
sub
or
jne
lea
ficoms
cmp
rorb
pushf
sbb
cltd
inc
into
and
incl
xchg
xor
sub
iret
in
cltd
popa
cmp
inc
and
xchg
lahf
push
xor
in
fcomip
xchg
clc
pop
add
jp
pop
jno
test
fsubrs
lods
push
and
xor
call
cmp
ja
ret
add
std
pop
adc
jmp
cld
mov
cwtl
cmpsb
in
adc
int3
pop
imul
jmp
mov
or
popa
ds
in
jg
mov
andl
int
dec
repnz
push
lcall
int
in
push
sbb
lret
jg
lahf
mov
pop
jg
add
and
dec
or
push
repnz
aad
hlt
out
inc
mov
loop
mov
mov
mov
clc
cmp
arpl
or
dec
mov
loop
sahf
hlt
mov
fidivrl
arpl
push
dec
fwait
pop
sarl
push
jp
mull
in
outsb
dec
mov
xchg
xchg
sbb
outsl
mov
mov
test
adc
adc
arpl
fidivl
or
fidivs
push
stos
loope
nop
sbb
aam
pop
iret
in
mov
jge
loope
inc
pushf
push
jp
add
outsb
sub
sbb
jae
mov
mov
xor
sti
shrb
notb
fildll
adc
and
gs
jnp
push
push
dec
mov
mov
popa
adc
mov
movsl
push
mov
push
orl
fsubrl
or
cmp
inc
mov
push
loop
xchg
sbb
dec
adc
mov
cli
mov
pop
movsb
mov
out
pop
inc
push
xchg
or
dec
push
xor
sarl
push
cmpsl
rol
pop
mov
cli
xchg
mov
out
add
add
fcoms
ret
arpl
gs
xchg
subl
fcomps
pop
jl
loope
pop
pusha
mov
pop
out
push
and
jnp
pop
stc
mov
and
push
dec
pop
aas
clc
std
mov
movsb
xchg
leave
cmpl
jecxz
mov
pop
xor
and
enter
popf
rcrb
mov
push
faddl
sti
mov
outsb
imul
sub
ljmp
xlat
pop
fwait
pop
jp
insl
jge
and
jno
dec
pop
xor
stc
add
dec
into
movsl
adc
mov
sahf
adc
push
sbb
ret
repnz
pop
hlt
xchg
scas
dec
xchg
sub
dec
imul
push
xchg
push
push
or
addr16
lcall
adc
shll
and
push
jbe
mov
js
subl
fwait
adc
fistpll
aam
loop
lock
xor
mov
dec
pop
mov
mov
xchg
sbb
enter
insl
or
and
adc
xchg
fwait
out
jne
data16
add
sub
inc
cld
and
fsubrl
ret
sti
fdivs
pop
lods
adc
je
fstpt
lret
and
rcrl
jns
dec
stos
lcall
rcll
dec
fcomps
std
sbb
pop
bound
jo
aam
jl
jns
mov
fisubs
je
enter
pop
repz
pushf
xchg
rcll
test
jge
dec
imull
cmp
imull
jns
mov
jo
mov
inc
jecxz
dec
push
cmp
cld
cmp
repz
arpl
fcmovb
jne
les
push
or
mov
nop
imul
push
push
popf
lcall
mov
cmp
enter
imul
aas
mov
mov
lret
lea
xor
sti
jp
jno
jnp
adc
sbb
xchg
das
dec
nop
jmp
dec
repnz
dec
hlt
sbb
je
lret
stc
pop
filds
add
icebp
push
mov
in
cs
xlat
push
dec
imul
pop
lret
mov
bound
cwtl
sti
nop
test
or
and
fs
andb
mov
push
fs
push
test
cmp
inc
scas
add
xor
outsb
cmp
iret
add
sbb
sub
push
pop
mov
sbb
xlat
addr16
push
aaa
loope
imul
cli
int3
mov
dec
aad
lret
xor
inc
jbe
xor
out
inc
mov
test
cli
movsb
mov
cmpsl
xor
fwait
cmp
insb
nop
hlt
push
xchg
push
sahf
je
jecxz
sub
sbb
push
xchg
cli
push
sti
addr16
testb
add
adc
je
mov
mov
push
ret
xchg
pop
fnclex
mov
jp
adc
mov
cmc
int
adc
jo
sbb
sbb
mov
and
pop
mov
test
jle
movsl
lods
jb
in
fs
mov
lods
mov
push
mov
cwtl
fs
mov
xlat
sub
push
mov
xchg
sbb
mov
inc
incb
sub
daa
sub
inc
mov
ja
dec
mov
rorl
adc
out
aas
pop
adc
lock
hlt
ret
push
loopne
pop
cli
adc
sarl
ljmp
mov
out
into
jae
in
mov
aaa
jbe
cmp
jle
fdivr
sub
fprem1
mov
gs
add
jne
test
outsl
hlt
fistl
jb
mov
push
je
jne
fsubs
jo
lahf
arpl
test
nop
lcall
xchg
and
jae
pop
ja
imul
inc
das
sbb
cmp
ret
addr16
dec
xchg
pop
lods
xchg
iret
movsb
dec
adc
mov
test
lret
inc
sbb
lcall
mov
sbbb
lea
mov
mov
push
jge
xor
mov
inc
dec
mov
or
addb
mov
outsl
rcrb
or
jo
mov
call
and
outsb
rorb
insb
mov
fwait
jge
lahf
jg
mov
jo
bound
in
cs
not
jo
push
shrb
inc
sub
movl
fcoms
out
hlt
outsl
lods
cmpsb
sti
test
jp
popa
addr16
ret
or
mov
mov
lcall
xchg
mov
clc
xchg
push
jae
xor
cmpsb
adc
jp
in
add
dec
psllq
adc
mov
or
inc
mov
pop
jge
ss
cmp
inc
fldl2e
out
icebp
lahf
gs
stos
lahf
clc
cld
jle
clc
jne
ljmp
inc
addr16
cltd
popa
and
lahf
lahf
testb
inc
cmp
popa
test
add
pop
in
enter
movl
push
data16
subl
dec
aam
fcoms
aam
in
out
jmp
cld
cli
inc
cmpb
sub
add
aad
bound
cmpsb
mov
add
lods
nop
pop
push
cmpsl
in
loope
inc
je
sahf
mov
xchg
xchg
jl
sti
pushf
dec
inc
xor
push
mov
mov
shrb
and
pop
or
leave
jg
and
mov
push
mov
int3
out
or
int
daa
lods
jecxz
mov
cmp
pop
icebp
push
pop
dec
and
pusha
mov
das
fidivrs
pop
aam
cmp
mov
dec
bound
les
jle
test
pop
mov
insb
mov
jb
aaa
mov
shll
lret
mov
jp
arpl
repz
jns
lods
sub
jnp
jp
rclb
addr16
pop
sti
push
pusha
mov
add
jge
adc
push
xor
arpl
pop
mov
iret
jnp
sbb
fs
sbb
xchg
and
test
mov
lcall
je
add
imul
ficoms
fnsave
aad
mov
shrl
push
lret
adc
aaa
into
ja
testb
mov
aad
adc
cs
in
inc
jbe
ljmp
mov
adc
rol
test
addl
dec
fdivs
mov
sbb
or
dec
cmp
lock
mov
sbb
adc
pop
jmp
fcompl
xchg
pop
adc
push
jecxz
hlt
fsts
pusha
int3
test
xchg
mov
test
xor
jg
repz
jp
jne
fwait
dec
mov
loop
cmp
cs
xchg
test
std
test
cmp
movsl
mov
xor
mov
pop
mov
stos
add
popf
aam
mov
sbb
mov
mov
aaa
inc
mov
jbe
add
push
cld
repnz
xor
ljmp
and
mov
or
cmpps
in
outsl
movsl
ja
stos
testb
push
test
jo
sbb
mov
pop
fs
movl
negl
arpl
adcb
orb
rorb
stos
in
xchg
pop
add
mov
sub
fsubs
out
jno
popa
mov
sub
ret
test
push
pop
clc
jbe
push
mov
mulb
lret
test
xchg
push
dec
adcb
jnp
inc
xchg
inc
outsl
mov
lret
ljmp
out
sub
je
xor
bound
lods
movsb
gs
mov
test
cmp
mov
jl
xlat
pop
pop
repnz
pop
dec
mov
into
mov
shl
data16
sbb
js
ds
inc
psadbw
aaa
iret
lods
fnstsw
xchg
pop
lahf
push
pop
dec
imul
and
and
sbb
cmp
addr16
jmp
cmc
mov
fsub
ljmp
jmp
sbb
xchg
sub
lret
aas
dec
sbb
int3
movsl
loop
adcl
aam
inc
lcall
mov
daa
pop
add
enter
clc
test
jg
icebp
fisubs
cli
or
xorb
fldenv
das
cmpsb
cld
or
sysexit
pop
xchg
pop
pop
shr
inc
mov
jbe
cmp
mov
push
in
pop
ret
push
insl
bound
and
call
mov
jbe
in
outsb
es
imul
insl
testl
xchg
out
jo
enter
clc
add
and
mov
sub
clc
loope
sti
push
sahf
ret
notb
sahf
insl
or
cmp
push
xchg
jge
andb
push
fwait
je
adc
int3
cmp
stos
jbe
and
cmpsl
push
jmp
fucomi
movsb
add
popf
add
fs
xchg
xchg
scas
push
sahf
inc
jp
cmc
sub
xor
dec
sar
mov
push
xor
cwtl
aam
pop
pop
divb
nop
gs
push
pop
rol
dec
add
sub
cmp
xchg
dec
icebp
mulb
loope
cmpsb
pop
std
and
fnstenv
inc
in
jmp
and
lods
and
fbld
ss
daa
data16
sbb
out
mov
adc
ror
cmp
gs
div
xchg
stos
push
jnp
out
fdiv
jp
jo
repnz
sub
push
mov
mov
push
pop
loop
sub
adc
mov
nop
out
jge
icebp
push
jnp
cltd
mov
jb,pt
popf
loope
ljmp
sti
stos
push
ljmp
lds
sub
sti
clc
call
mov
push
hlt
push
cli
or
pop
dec
push
xchg
or
std
fisttpll
sub
jg
in
scas
jp
in
xor
decl
loopne
cmpsl
ss
cli
dec
rclb
in
add
outsl
stc
adc
repnz
shl
das
adc
cmp
out
jbe
call
pop
xchg
jp
in
das
add
mov
push
xchg
lcall
add
movsb
adc
repnz
orl
inc
pop
int3
aam
sbb
rcrb
xchg
adc
dec
adc
jbe
cld
mov
mov
outsb
xchg
mov
popa
aas
sub
pop
mov
mov
es
rcll
lcall
jmp
push
and
mov
and
lcall
pusha
jge
cmpb
sub
cmpsl
sub
iret
lret
push
xor
sub
js
or
imul
fs
dec
cli
xchg
lock
pusha
cltd
pop
inc
add
cld
adc
out
shll
mov
adc
insl
scas
push
sbb
int
lret
out
ljmp
fisttpl
out
shlb
mov
cli
dec
je
xor
cmp
cmp
popa
adc
sahf
mov
loope
jecxz
aad
popf
sub
ret
and
mov
sub
data16
mov
push
ret
sbb
mov
stos
vxorps
fiadds
outsb
xchg
cli
mov
mov
pushf
cmpsl
fists
in
mov
pop
inc
dec
pushaw
test
push
stos
mov
fnstenv
out
mov
das
enter
xchg
cmpsb
decb
mov
ljmp
rolb
and
pop
jl
xchg
mov
fcompl
mov
mov
out
adc
arpl
ret
std
pushf
out
adc
mov
fdivl
jb
sub
jo
in
leave
push
pop
aaa
adc
jns
je
push
adc
sub
outsb
pushf
mov
cltd
jge
test
sbb
cmp
mov
sub
cmp
jp
mov
out
jb
cmpsb
loope
sbb
iret
imul
icebp
jne
pop
es
loop
push
pop
lahf
bndstx
or
cmp
pop
dec
je
or
repnz
pop
nop
sgdtl
out
dec
inc
cmpsl
insb
add
fmuls
bound
pop
xchg
shrl
daa
cmp
dec
jge
mov
movsb
gs
loopne
imul
in
mov
xlat
sarb
push
mov
rcrl
push
and
mov
dec
loope
gs
and
lahf
mov
mov
mov
mov
xor
dec
inc
lret
xor
dec
push
imul
int
out
sbb
ret
and
sub
shl
lahf
mov
testl
int3
testl
sbb
ret
es
mov
push
int3
push
xchg
mov
dec
cs
cmpsl
pop
adc
xchg
jp
fdivrs
cltd
loopne
rcll
jl
dec
aas
rorb
push
cmp
sbb
insl
lcall
jne
hlt
loop
add
inc
sub
adc
in
sbb
out
jnp
sbb
sbb
jne
fnsave
ss
call
movsb
sub
mov
iret
or
or
aas
inc
xchg
scas
ret
inc
adc
sbbb
mov
pushf
jo
sbb
stos
pusha
add
je
dec
mov
out
mull
loope
xchg
jne
addr16
inc
ljmp
fld
dec
pushf
jnp
fiaddl
mov
sub
movsb
fs
movsb
out
test
and
dec
cmc
in
loop
stos
jmp
jg
xor
jge
mov
cld
push
or
fidivs
lods
cmpl
xorb
movsl
xlat
sbb
mov
adc
dec
jae
loop
insb
aas
xchg
clc
fdivrl
mov
xlat
and
xlat
cltd
dec
xor
sbb
mov
mov
cmp
jnp
shlb
xchg
cmp
iret
pop
test
mov
push
jns
lret
cmp
mov
dec
fs
hlt
cmp
xlat
sbb
cmpsb
sub
lahf
mov
out
mov
lret
add
rorl
xchg
clc
loope
or
sbb
movsl
inc
mov
push
or
dec
std
lds
fwait
aas
inc
sbb
push
lock
cs
mov
add
pop
ja
lcall
les
jno
ret
mov
pop
dec
jp
dec
es
test
or
xchg
int
test
in
mov
shrl
mov
ret
cmp
cmpsl
rorl
xor
cmp
add
xor
pop
out
add
inc
pop
or
mov
and
sub
xor
fadds
or
jb
mov
mov
sbb
in
dec
xor
scas
dec
faddl
in
pop
sub
sub
xchg
xor
add
dec
popf
mov
rcll
mov
pop
mov
add
push
pop
in
mov
jo
mov
cmc
jp
rcll
cmpsb
cmpsb
or
sub
jb
add
imul
lods
mov
lds
mov
adc
sub
mov
dec
repnz
xchg
out
fs
sub
sahf
les
mov
push
and
iret
repnz
scas
repnz
cmp
cli
cmp
enter
fstpt
add
out
sub
mov
xor
xchg
dec
cmp
aam
addl
in
ret
adc
repz
rorb
mov
ja
div
sbb
sub
leave
cmpsb
add
repnz
cmp
imul
clc
pop
aaa
roll
and
jg
add
scas
les
cmp
out
out
adc
aam
js
pop
sahf
push
sbb
xchg
xchg
jle
cmpsb
aaa
add
shlb
insl
leave
push
enter
pusha
fwait
stos
test
negb
sub
adc
xchg
push
ret
call
addl
es
int3
fistps
xchg
pop
idivb
push
cmpsb
lret
xchg
test
aam
cltd
lods
mov
imulb
sub
xchg
out
gs
fidivl
xor
call
sbb
xchg
sbb
inc
inc
cmp
inc
pop
fimuls
pushf
cmp
int
push
add
bound
xchg
add
insb
add
or
push
movsb
loope
loop
in
mov
cld
aam
shl
pop
mov
fiaddl
ja
and
shll
mov
fimuls
dec
clc
shlb
es
aam
imull
ss
jmp
fisttps
push
imul
sub
adc
call
ljmp
jecxz
lds
call
std
imul
aad
jg
mov
cmp
cmp
mov
in
cmc
repnz
push
add
dec
fildll
stos
inc
nop
int3
iret
dec
addr16
mov
and
popf
sub
ljmp
xor
or
in
push
xor
mov
movsb
dec
ret
jb
mov
jmp
jnp
inc
mov
sbb
aad
fmul
rolb
sbb
push
cltd
fidivrl
sub
aam
pop
lret
xor
cld
aad
es
push
jnp
xchg
jns
incb
sub
clc
cmp
jae
or
fcoml
sbb
arpl
xchg
lahf
outsl
scas
add
shll
mov
inc
push
mov
xchg
dec
push
mov
cmpsb
and
mov
xchg
cmp
inc
pushf
insb
mov
popf
or
adc
negl
je
or
insb
and
push
inc
int3
push
adc
jnp
xchg
fsub
gs
fnstenv
pop
push
adc
push
test
ret
pop
loope
xchg
sbb
das
add
mov
sti
pop
cmc
imull
stc
pop
bound
repnz
es
xchg
sbb
rcr
in
popf
pop
mov
test
aaa
out
mov
mov
jno
adc
jns
in
adc
shrb
push
sbb
xor
jp
dec
dec
into
dec
adc
mov
mov
mov
or
in
shl
pop
sub
in
mov
fiaddl
sbb
ret
mov
mov
inc
bound
sahf
arpl
and
shrb
mov
inc
sbb
lret
inc
sbb
inc
repz
adc
int3
ds
xor
sbb
sbb
cltd
sub
in
movsb
jae
mov
gs
mov
aaa
mov
out
ljmp
adc
in
mov
aas
dec
aas
arpl
repnz
mov
adc
rclb
mov
mov
rorl
enter
or
das
inc
jo
scas
jnp
pop
dec
lods
jnp
ret
xlat
xchg
test
mov
lods
xlat
daa
mov
jmp
fs
push
xor
jns
dec
cmc
cli
repz
fs
push
mov
mov
and
dec
mov
test
idiv
mov
pop
pop
subb
mov
lret
adc
mov
sbb
push
lret
es
jge
aad
pop
mov
jne
popa
dec
outsb
inc
call
dec
and
sub
mov
jb
adc
jg
or
mov
cmpl
mov
jne
clc
cmp
xor
fbld
xlat
pop
cmpsb
xchg
mov
jbe
mov
sbb
adc
push
pop
and
pusha
pusha
mov
sbb
out
jge
fwait
movsb
sbb
pop
icebp
mov
outsb
out
rcrl
loope
push
pop
stc
es
lods
inc
inc
mov
mov
scas
push
cmpsb
adc
mov
stc
mov
fsubrs
inc
jae
rcl
mov
pushf
dec
cmp
cmp
sbb
fildll
adc
test
cmpsb
mov
push
movb
cmp
pop
dec
mov
jnp
mov
mov
lret
push
insl
fwait
and
dec
xor
inc
inc
bound
test
inc
pop
pop
xchg
dec
or
and
fdivs
mov
lret
mov
xchg
test
test
jl
sbbb
inc
jecxz
fnsave
icebp
mov
mov
sbb
inc
fisttps
repz
push
sub
xlat
rolb
xchg
and
or
and
mov
dec
adc
jl
dec
cwtl
sub
ja
fcoml
and
faddp
test
mov
repnz
test
aas
call
frstor
inc
mov
aas
jl
and
push
jmp
shrl
jne
sbb
sbb
imul
xlat
mov
jmp
loop
sbb
mov
pop
jge
sbb
xorb
jo
dec
dec
xchg
sarl
xchg
pop
inc
dec
lods
fwait
sbb
jg
pop
iret
xor
dec
in
mov
jns
sub
call
inc
pop
sbb
stc
jg
push
outsl
push
in
neg
push
cmp
cs
mov
and
cld
dec
dec
mov
cmp
cld
mov
lret
loop
sti
fisttpll
jb
sbb
icebp
add
pop
dec
loope
lret
lods
pop
sbb
fdivrl
sbb
call
js
jg
jo
xchg
pop
fsubrl
or
mov
test
stc
mov
sbb
pop
mull
push
cmp
pop
mov
pusha
xor
flds
or
rol
mov
adc
outsb
cs
ds
xchg
pop
push
ljmp
xchg
ljmp
ljmp
lcall
cs
xchg
xor
in
mov
push
pushf
mov
cmp
jl
je
lahf
inc
scas
xor
leave
stc
daa
mov
insl
add
movl
push
lods
mov
dec
arpl
xor
adc
data16
add
pop
sbbl
cld
loope
mov
xorl
adc
sub
bound
and
inc
jl
mov
sub
int3
roll
movsl
pusha
ret
xchg
idivl
jg
in
bound
out
movsb
or
sbb
daa
les
xchg
enter
jnp
imul
dec
add
adc
pop
test
mov
dec
negl
push
das
xor
sub
fisubrs
mov
or
fwait
inc
dec
fdivl
sub
xlat
pop
sbb
orb
xor
xlat
shl
leave
dec
sbb
rcll
mov
scas
xor
outsb
inc
jns
popa
pop
cmc
adc
pushf
jmp
adc
addr16
lds
shrb
adc
mov
frstor
jge
mov
inc
adc
mov
aaa
int
lcall
lods
out
or
xlat
insb
sbb
fs
imul
ror
test
and
jnp
pusha
test
cld
push
xchg
sbb
aam
fs
xchg
push
mov
jne
jb
in
inc
add
xlat
jno
test
fcomip
ret
aaa
cwtl
mov
hlt
mov
lret
mov
stc
push
out
mov
movsl
push
pop
push
fstpl
adc
mov
adc
fs
int3
cmp
add
imul
popa
push
fisubl
pop
rol
rcl
lods
xor
ret
dec
dec
rep
pop
or
insl
mov
mov
adc
mov
jg
mov
fwait
je
jne
dec
add
push
pop
adc
cli
mov
adc
add
pop
mov
dec
sbb
cmp
aaa
dec
adc
add
out
jo
add
jo
dec
jmp
and
dec
push
ljmp
pop
jl
outsl
or
test
aaa
sub
mov
in
xchg
repnz
push
jmp
lock
dec
les
outsb
xchg
imul
in
cmc
add
dec
scas
push
and
xor
cmp
int
loop
fcmovnb
adc
cltd
andb
sub
iret
cli
test
lds
imul
sub
mov
add
outsl
lods
int3
jg
mov
xor
test
rolb
xchg
setnp
mov
dec
sbb
or
cld
jae
sbb
jle
lds
addb
int
imul
or
pop
lods
cmp
divb
int
fldenv
fisttps
jnp
cmp
imul
loop
xchg
xchg
lock
add
and
in
and
in
jmp
out
ss
or
jae
push
jg
and
sahf
sbb
adc
ds
add
xchg
pusha
lahf
aaa
shl
push
lcall
sub
pop
dec
loop
stos
push
sbb
ss
sti
fldt
cwtl
ret
pop
lahf
addr16
cmpsb
dec
lahf
fnstcw
stos
pushf
mov
lcall
dec
add
outsb
adc
inc
ljmp
cmp
cmp
aad
push
jge,pt
push
cwtl
stc
iret
mov
push
roll
jb
push
scas
out
lahf
mov
pop
or
jo
aam
fldl
mov
mov
push
sbb
pop
out
jmp
cmp
loope
in
pop
dec
push
in
cmpsl
or
lcall
mov
add
das
lahf
mov
push
cmova
xchg
sbb
fdivrl
and
sub
scas
arpl
aaa
in
push
loopne
and
or
dec
jl
mov
ds
mov
ja
mov
mov
mov
into
mov
inc
fdiv
or
dec
push
push
jo
test
pop
dec
imul
frstor
inc
inc
sub
into
mov
sub
in
fcompl
cmp
jns
mov
ja
das
cwtl
xchg
add
push
out
push
lret
mov
inc
sub
mov
popa
fcmovnbe
ds
fsubrl
jno
cwtl
pop
jb
outsb
std
mov
pop
int3
insl
shlb
sub
movsb
jp
xor
jns
nop
mov
repnz
dec
dec
mov
push
xchg
adc
push
cli
lcall
and
push
push
add
sub
mov
int
xchg
arpl
push
lcall
mov
fs
cs
xor
cmovno
adc
or
xor
pop
outsb
or
pop
int
xchg
lret
adc
sub
call
pop
dec
mov
sub
mov
xchg
pusha
push
and
das
push
ret
data16
push
fldenv
outsb
mov
adc
cmp
hlt
pop
mov
pop
int3
inc
jg
cmp
push
dec
fdivrs
xchg
loop
lret
jne
add
xchg
fisttpll
cmpl
aas
adc
pop
cwtl
xor
mov
icebp
in
dec
cwtl
test
sub
out
pop
loopne
icebp
test
xor
or
lea
rorb
test
mov
mov
into
mov
fsts
lret
fstps
jmp
test
mov
xor
sub
push
xor
push
pop
push
ja
pop
pop
cs
aas
pop
fwait
mov
xor
pop
push
mov
xor
add
mov
jne
popf
dec
cmp
pop
mov
adc
adc
es
xchg
sub
add
lea
mov
push
cmp
mov
and
mov
lods
or
mov
sub
pop
mov
dec
inc
mov
fwait
sub
je
jle
push
sbb
and
mov
jg
mov
adc
dec
pop
mov
mov
sti
fwait
or
dec
cwtl
push
repz
cmp
jle
mov
sbb
test
data16
arpl
mov
dec
out
adc
inc
pop
jmp
push
fdivl
sub
or
sbb
cli
jmp
lods
aam
lret
aad
jb
pop
xchg
inc
fidivrl
xchg
add
movsb
mov
pop
pusha
mov
jb
insb
test
cmp
or
mov
jns
cmp
in
ficoms
push
test
inc
cmp
dec
pop
in
test
pop
arpl
cli
xchg
sub
insl
cmp
aas
negl
pop
scas
aaa
dec
sub
aad
mov
mov
xor
aad
cmp
inc
fidivrs
push
mov
cli
cmp
lahf
jo
adc
sti
mov
shll
mov
sbb
and
lret
popa
push
pushf
pusha
insb
pop
mov
pop
push
push
in
pop
mov
inc
push
fsubs
pop
mov
rclb
jle
loopne
and
mov
jbe
and
push
mov
ret
push
mov
lea
bound
push
and
lcall
mov
and
aad
xor
jp
xchg
add
imul
imul
xchg
and
in
pusha
inc
adc
and
push
fnstcw
or
push
mov
adc
or
jae
lock
lcall
cmp
sahf
xchg
sub
or
push
ja
jle
ret
or
sti
and
mov
call
cmp
pop
aas
xchg
xor
inc
outsl
test
mov
out
movsb
pop
jns
and
sbb
sti
ss
adc
mov
mov
daa
inc
mov
xchg
sbb
andb
mov
sbb
sbb
daa
mov
imul
pop
sti
scas
addl
fists
pop
mov
adc
ss
inc
or
pop
cmp
in
dec
outsb
add
in
xchg
das
xlat
mov
outsb
xchg
fisubrl
xor
xor
mov
fisttps
hlt
arpl
xor
popf
mov
jle
push
pop
jecxz
das
scas
fildll
add
scas
nop
fldt
fnstenv
or
insl
mov
mov
xor
dec
cmp
pop
icebp
test
ja
xchg
aaa
sahf
pop
add
pop
loop
adc
add
out
popf
lahf
cmp
and
stos
xor
test
out
lods
sbb
xchg
cld
not
add
mov
dec
pop
call
pushf
aas
faddl
arpl
pop
dec
jne
icebp
ljmp
mov
movsb
jae
loop
lcall
xchg
das
lea
cmp
mov
lea
in
xchg
test
push
mov
dec
fwait
addr16
cmp
add
jmp
fnsave
xor
inc
xor
push
in
mov
mov
in
and
push
jmp
data16
inc
xchg
xor
or
xchg
or
mov
insl
mov
dec
cmp
cmp
cmp
add
push
dec
cmp
hlt
decl
mov
mov
or
mov
pop
pop
sahf
addb
adc
out
jbe
fists
push
push
enter
je
xor
notl
jmp
scas
in
mov
mov
ss
inc
xor
cmp
out
xchg
push
lsl
mov
dec
pushf
or
fs
inc
stc
shl
jg
pop
xchg
cmp
inc
orb
dec
cmpsb
mov
inc
jmp
cmp
pop
cmp
xchg
pushf
pop
scas
adc
jp
ja
mov
pop
jl
stos
cmp
loopne
cmp
mov
mov
in
stos
ljmp
xchg
lret
mov
testl
xor
les
sub
in
pop
rcr
and
mov
cltd
clc
mov
cmp
mov
outsb
neg
out
andb
jno
out
lea
icebp
cmp
xchg
data16
or
rolb
add
stos
xchg
xor
xchg
or
loopne
mov
adc
cmp
pop
movl
sbb
xchg
xor
aaa
or
repz
or
lds
testl
xchg
sbb
mov
cmc
jle
add
inc
sbb
outsb
aaa
test
xchg
fucomp
lds
xchg
lcall
out
inc
dec
shrl
in
pop
sub
divl
inc
mov
nop
inc
sub
stos
rcll
and
data16
adc
popf
xchg
fdivrp
outsl
hlt
fisttps
and
inc
jmp
aas
fdivl
or
xchg
xchg
xor
decl
ljmp
in
scas
fdivrl
ja
cli
aaa
repnz
loopne
xor
cmpsb
or
xor
or
xchg
stos
loopne
out
pop
mov
bswap
fisubrs
fstpl
dec
dec
addr16
cmp
and
cltd
clc
jno
inc
sarl
mov
int
out
xchg
iret
cmp
pop
shl
clc
sbb
out
mov
aas
jmp
push
arpl
shll
aam
sbb
pop
mov
stc
xchg
mov
mov
lods
inc
xchg
sbb
add
mov
jbe
ficomps
xorb
outsl
or
mov
xchg
or
xor
push
hlt
rcll
jns
sub
sbb
mov
push
lods
dec
mov
movsb
push
mov
test
push
fimuls
pop
sub
stos
mov
jnp
out
sbb
adc
pop
lret
inc
popf
jno
mov
cmp
sub
repz
cwtl
adc
jbe
ret
adcb
fwait
jns
divl
jns
in
fstl
push
mov
adc
stos
add
mov
mov
pushf
fdivrs
scas
and
mov
xchg
cmpsb
jne
fistpl
mov
adc
jae
inc
fisttpl
es
jne
push
jle
ret
push
push
js
int
xchg
sub
push
lcall
jle
xchg
jl
jo
imull
jg
mov
sub
push
pop
mov
hlt
jae
call
daa
xor
push
jne
fisttpl
jl
stos
pop
sbb
xchg
das
jge
insl
ljmp
or
jo
jge
imul
adc
jno
push
jno
cwtl
ss
lcall
inc
adc
or
ja
jae
shll
adc
out
mov
or
lret
mov
ret
or
test
adc
outsb
push
cmp
movsb
jge
cmp
dec
in
xchg
mov
jo
imul
pop
xchg
incb
pop
fldcw
jmp
dec
mov
pop
pop
jb
xor
jg
jg
sbb
call
jo
arpl
push
out
adc
dec
out
cld
rcll
out
fwait
test
fdivs
and
arpl
pop
sub
jno
xchg
and
icebp
xchg
mov
out
sub
push
jns
jg
push
mov
in
fiadds
or
lods
push
fsub
mov
aas
mov
pop
js
mov
jns
mov
and
aaa
xchg
xchg
pop
stos
mov
lret
and
sarl
and
mov
pop
or
jnp
shlb
adc
cmpsl
mov
pop
xchg
sbb
adc
push
sub
inc
pop
pop
test
and
mov
mov
add
lods
push
fidivl
mov
xor
xor
mov
cmp
dec
xor
popa
das
jnp
xor
pop
jmp
mov
or
fbstp
or
hlt
jno
hlt
stc
daa
and
popf
data16
clc
lock
pop
xchg
outsl
cmp
sbb
cltd
lret
test
adc
js
push
dec
cmpsb
sub
sarb
in
testl
ja
adc
outsl
stos
inc
sbb
push
cmc
call
sbb
test
test
push
xchg
js
sbb
aaa
or
cwtl
xchg
mov
rol
or
cmp
fisubrs
push
mov
xchg
enter
mov
pop
xchg
pop
jns
push
fiadds
push
mov
add
orb
cmp
inc
mul
imul
in
hlt
outsb
jne
cmc
xor
push
push
imul
ds
idivb
repnz
xchg
mov
xchg
clc
pop
add
adc
jns
lods
mov
dec
jg
xor
js
add
sub
sarb
in
idivl
cmp
mov
jb
adc
outsl
stos
pop
push
sub
ja
test
test
add
or
cwtl
cmpb
cmp
popf
push
icebp
cmp
adc
imul
fwait
inc
sub
push
ljmp
cmp
mov
into
cmc
xor
jg
bound
negb
or
push
jb
cltd
clc
daa
add
repnz
out
shrb
push
in
adc
aam
lcall
nop
lods
jae
push
lock
stos
or
mov
sahf
xor
mov
sti
mov
adc
sub
cmp
add
bound
push
nop
push
rcll
imul
cmp
stos
imul
ljmp
fstpt
pop
lock
cltd
clc
mov
dec
cmp
ret
jbe
xor
xchg
popf
fsts
rorl
outsl
imul
xchg
mov
cmpsb
or
test
push
or
int
cld
mov
mov
adc
in
outsb
mov
ljmp
in
jnp
jmp
jl
nop
sub
jl
fists
lcall
test
leave
data16
fisubrl
sbb
xchg
pop
ds
add
xchg
sbb
addl
sub
icebp
repz
jnp
jle
mov
lock
sbb
popa
mov
sub
notb
sbb
insb
inc
sub
andl
in
insl
jg
lahf
rcrb
lret
xchg
stos
jne
cld
stos
nop
cmpl
sahf
fld
ja
sbb
insl
loope
xor
mov
mov
pusha
xchg
fs
cwtl
inc
adc
sbb
xor
push
lods
sub
rorl
int
out
xchg
and
insl
rcr
clc
lods
adc
mov
lods
roll
mov
cwtl
mov
mov
cli
in
dec
faddl
in
paddusb
push
dec
mov
movsl
inc
in
pop
or
popf
push
data16
xchg
int
mov
test
jno
jle
test
jg
jb
inc
push
mov
adc
adc
rsqrtps
add
lock
xchg
enter
js
fsubl
stos
jnp
out
adc
fstl
sbb
xchg
je
dec
sahf
rorb
cwtl
orb
insl
stos
cmpsb
std
repnz
mov
xor
out
mov
push
sbb
outsl
nop
imul
inc
sahf
jns
jle
xchg
stc
and
jg
xor
cmp
sbb
mov
pop
sbb
cmp
dec
lahf
cli
test
inc
icebp
fldl
cmc
inc
jnp
data16
stos
or
cmp
xchg
outsb
fdivs
das
or
fistps
loopne
jge
xchg
repz
or
lds
cltd
dec
adc
stos
pop
pop
iret
rdtsc
aaa
push
sbb
pop
inc
loop
in
jns
xchg
std
into
test
test
iret
sub
testb
jne
xchg
loopne
jle
xchg
mov
jle
jb
jnp
add
cwtl
push
ss
sub
ret
jno
mov
pop
dec
mov
push
push
js
or
ret
nop
adc
mov
mov
fwait
int3
add
and
push
lods
xor
add
dec
clc
mov
shlb
fs
std
addl
nop
jmp
mov
iret
fwait
inc
std
adc
loopne
ljmp
ds
js
divl
rclb
fdivp
fwait
lods
test
mov
shll
xorb
nop
rcr
adc
shrl
push
xchg
cmpsl
pop
xchg
cmp
xchg
je
cwtl
mov
popa
outsb
icebp
pop
mov
jae
jg
lea
xchg
or
pushf
inc
les
mov
pop
push
sub
push
test
xorb
outsl
loop
fs
aam
cmp
xor
mov
repz
mov
push
mov
and
dec
adc
notrack
mov
sub
mov
sub
fdivr
push
adc
or
jnp
push
xchg
cmp
add
mov
rorl
add
jge
and
and
sbb
test
pminub
loop
pop
mov
movsb
cmpsb
pop
cmp
jns
neg
call
sbb
outsb
pushf
sub
mov
mov
mov
push
pop
xchg
loopne
roll
push
rcr
cwtl
mov
ja
enter
jnp
lcall
push
mov
mov
aad
in
xchg
test
dec
mov
cs
push
push
pop
cmpsl
xchg
dec
data16
mov
test
sarb
jecxz
pushf
pop
insl
out
data16
pop
imul
lods
fbstp
outsl
imul
addr16
js
imul
ret
fists
push
inc
mov
jmp
fidivrl
loope
mov
out
cmp
jae
sbb
mull
mov
shlb
inc
or
pop
loopne
out
jns
jl
mov
loope
jg
cmc
in
lock
mov
stos
xchg
test
out
ss
dec
jle
jns,pn
cmp
or
rorb
mov
ja
ljmp
sub
mov
pop
add
or
sbb
xchg
pop
clc
data16
pop
int3
in
pop
ljmp
cltd
lds
mov
test
adc
and
in
xchg
or
sbb
stos
fimuls
pop
ja
rcr
or
jmp
aas
mov
cmp
mov
or
sti
nop
and
and
sbb
push
cmc
insl
insb
mov
icebp
mov
test
in
sbb
out
ja
jmp
xlat
mov
lcall
jp
outsb
or
out
lret
and
lret
ja
dec
xlat
xchg
sbb
ds
aaa
push
mov
cli
lret
out
or
jb
sbb
lock
mov
xchg
inc
popa
mov
jbe
cmpsb
pop
xchg
jo
out
pusha
sahf
testl
loop
dec
into
mov
ds
es
invd
fildll
clc
fdivrp
push
ror
sub
fcomps
or
clc
ds
xchg
aas
inc
jns
jge
aad
sbb
sbb
shl
pop
xchg
cmc
or
mov
mov
cmp
xor
push
testb
clc
sub
jp
jo
cmp
cmp
adc
movsl
out
inc
jl
pop
inc
repz
jno
rclb
and
iret
xchg
mov
inc
dec
pop
and
scas
imul
cmpsl
cmp
sahf
mov
adc
xchg
mov
fistpll
call
inc
pop
cmp
xor
aam
daa
inc
popa
mov
jbe
cmpsb
pop
xchg
jo
out
pusha
mov
scas
loop
dec
fidivrs
ds
fadds
xor
rorb
or
inc
sbb
out
aad
and
push
jb
cmp
shll
mov
inc
popl
mov
loopne
jns
mov
xchg
pop
lea
popa
hlt
cmc
aam
sub
dec
outsb
sbb
shrb
mull
gs
adc
jle
loop
jnp
in
js
jmp
lret
jno
cmp
mov
test
insb
xchg
mov
stos
arpl
mull
andl
and
push
sbb
jno
outsb
in
lret
cmpsb
sub
rcr
mov
clc
xor
mov
pusha
idiv
xlat
stc
popa
lret
rclb
pusha
mov
test
lcall
pop
dec
push
adc
and
jne
adc
add
arpl
aaa
push
mov
push
jecxz
jne
lods
xchg
jl
sub
inc
icebp
sarl
pushf
rorb
int
xchg
jmp
cmp
add
mov
movsb
pusha
outsl
xchg
je
ds
jne
mov
mov
pushf
dec
fstpl
cmpsb
movsl
sub
xchg
lock
inc
das
xchg
mov
inc
int
les
lret
dec
jo
mov
push
dec
arpl
lods
lock
dec
sbb
dec
out
xlat
xor
inc
push
js
xor
aas
pop
and
ffreep
and
jge
add
pusha
lcall
mov
sbb
orl
mov
scas
lock
fisubrl
lock
pop
lret
xchg
dec
stc
in
pop
sub
enter
stc
push
push
fildl
push
addr16
add
xlat
xor
and
fwait
or
mov
xchg
push
and
and
mov
xlat
je
add
in
push
cmpsl
adc
pandn
xchg
mov
dec
sub
push
fisttpll
in
and
mov
push
testb
mov
pop
movsl
and
lret
pushf
mov
fisubl
jb
ljmp
mov
pop
lock
or
adc
sbb
outsl
push
cli
jl
std
or
adc
dec
push
js
rcrl
aad
pop
dec
inc
jmp
jno
fistpll
jg
sbb
cs
xlat
sub
inc
cmp
push
fildll
imul
faddl
fcmovne
xor
mov
push
inc
jnp
movsb
xor
in
cmpsb
icebp
cmp
lods
dec
dec
arpl
sub
mov
daa
mov
test
lock
jae
mov
loop
fs
push
push
jp
call
movl
repnz
cmp
gs
outsb
rcll
mov
pusha
out
and
cltd
cwtl
popf
pop
out
sub
dec
xchg
and
mov
add
add
adc
mov
push
loopne
and
cmpsl
subl
sub
inc
sarl
stos
mov
pusha
arpl
into
fiaddl
and
push
add
rcrl
push
or
iret
popf
pop
lods
lock
mov
std
push
and
mov
shrb
fldl
lret
or
mov
push
mov
fdivrl
int3
in
js
push
int3
lahf
repz
cld
cwtl
cmp
sbb
dec
shrb
lock
movsl
push
xchg
mov
inc
std
imul
push
lods
das
aas
push
ficoml
in
js
inc
inc
sub
push
imul
jge
dec
int3
je
mov
sbb
and
fadds
addb
mov
lods
xlat
push
adc
scas
mov
je
lock
nop
and
and
or
aas
das
or
mov
out
or
push
cwtl
mov
jns
lock
xor
dec
and
sbb
push
adc
fldcw
cmp
imul
icebp
jnp
mov
popf
jne
mov
push
pushf
rclb
cli
jbe
push
and
mov
fdiv
gs
daa
xchg
lock
and
outsl
imul
add
out
in
mov
mov
dec
aam
cs
pushf
pop
in
in
dec
mul
fmull
pop
push
arpl
mov
into
loopne
in
sarb
dec
dec
or
sar
adc
push
xchg
adc
cwtl
mov
push
fstpt
fstpt
xor
push
jge
insl
inc
fst
cmpl
pop
jp
std
fnstsw
or
inc
lods
sub
addr16
fisttpl
clc
out
xchg
clc
movsl
push
in
pop
fs
data16
out
add
jle
cs
xlat
inc
pusha
add
mov
sahf
jmp
xlat
mov
jmp
mov
jmp
lods
std
into
adcb
xchg
pop
mov
daa
loopne
in
and
pop
cmpsb
das
loopne
push
data16
popa
pop
dec
xorb
es
push
ds
fists
mov
ds
pop
xlat
aas
dec
sub
imul
mov
std
in
iret
mov
popa
and
pushf
sbb
cli
movsb
adc
pop
pop
shr
mov
stos
push
mov
jp
pop
add
push
sub
adc
push
pop
lret
mov
testb
and
in
loopne
pop
cld
scas
push
push
ret
xchg
mov
pop
data16
mov
ffree
iret
out
jg
stos
pop
fsts
lahf
mov
popa
into
inc
loop
mov
sahf
cmpsb
shll
push
dec
inc
int
ret
push
mov
stos
push
push
jp
ja
cmp
mov
out
pop
sahf
push
imul
out
ds
add
dec
je
cld
std
cld
ret
cmp
ja
loopne
pop
or
ss
out
sbb
mov
out
inc
je
inc
jg
xor
xchg
cltd
cmp
sub
lret
cmp
jns
inc
jmp
mov
rol
testb
mov
stos
pop
pop
sahf
filds
mov
pop
ja
loope
cs
cmp
jg
lret
add
dec
clc
fdivrl
ret
mov
insb
in
mov
adc
sub
push
mov
shlb
or
pop
pushf
fwait
ss
xchg
dec
jle
in
pop
mul
push
divl
add
mov
cmp
and
fwait
bound
xor
out
out
loop
pop
or
or
lret
testl
rcrl
mov
dec
xchg
les
cmp
hlt
jmp
mov
mov
xchg
jge
jns
jge
aam
daa
jo
push
dec
xchg
mov
leave
xchg
xor
mov
sub
popa
push
pushf
lret
fiaddl
aaa
pop
cwtl
jo
pop
je
leave
adc
data16
cmp
in
lret
jle
dec
mov
out
push
add
xchg
jle
push
hlt
lods
jne
xlat
jno
out
clc
jbe
jmp
imul
cmp
push
movups
popf
and
ds
rcrl
iret
cmpsb
gs
rsm
jne
jns
adc
push
push
dec
fildl
xchg
mov
cmp
in
hlt
clc
ret
mov
mov
push
pop
stc
or
repnz
inc
cmp
mulb
mov
inc
xchg
ret
cmp
in
push
adc
adc
popf
pop
rolb
sub
jge
aam
daa
fs
pop
dec
mov
mov
lret
or
jle
mov
pop
push
or
push
pop
ret
pop
js
int
inc
inc
mov
sbb
xlat
pop
bt
arpl
xchg
add
outsb
hlt
ret
pop
dec
sbb
cld
loop
dec
sbb
sarb
aam
pop
cmp
xchg
xor
mov
jle
movsb
popa
sbb
mov
addr16
daa
data16
outsb
pop
loope
cmp
pusha
jl
mov
dec
fidivl
imul
rorb
out
push
rorb
testl
inc
mov
mov
jge
add
inc
mov
adc
cmp
xlat
mov
push
loopne
adc
pop
sub
inc
lret
cmpsl
jge
and
mov
outsb
lcall
adc
adc
add
mov
jo
push
pop
adc
ss
xchg
iret
sahf
lahf
mov
push
inc
fcomps
add
jae
mov
mov
jg
adc
cltd
addr16
in
mov
cmp
ret
mov
mov
jecxz
cwtl
fimull
daa
xchg
lahf
aas
or
mov
and
mov
int3
insb
and
loope
out
mov
scas
bound
cltd
mov
jle
ret
mov
lret
jae
aaa
loop
cmp
and
pop
mov
push
jmp
testl
sahf
mov
push
xchg
push
or
test
movsl
mov
dec
mov
in
jp
ficomps
lret
sub
out
movsl
int
mov
mov
out
jo
andl
cmc
and
pop
sti
inc
aam
sti
in
cmpsb
mov
js
mov
mov
addr16
rcll
xchg
sub
jae
xchg
fiadds
mov
xchg
xchg
cmp
and
pop
and
mov
sahf
lret
ja
mull
mov
leave
jo
inc
loop
shl
mov
xchg
mov
cmp
add
mov
cmpb
mulb
or
dec
adc
ret
movsl
test
stc
mov
test
addr16
mov
popf
adc
cmp
dec
xchg
push
cmovge
jno
into
adc
and
sub
sub
fs
testl
jg
cmpsb
in
xor
mov
cmp
lcall
out
or
jg
dec
cltd
pop
push
inc
pop
iret
inc
faddl
xor
movsl
in
fwait
ds
mov
fdivrs
loopne
xchg
sub
lahf
fsubs
push
notb
xor
xchg
mov
add
lock
clc
daa
inc
enter
cli
addb
scas
adc
lock
push
daa
cmc
jb
mov
xchg
mov
push
pop
mov
cmpsb
inc
test
mov
cmpsl
subl
loop
lret
push
cld
nop
cs
movsb
leave
test
mov
movsb
jb
push
and
aaa
adc
mov
jnp
or
lcall
ljmp
stos
cmp
add
insl
mov
ljmp
dec
adcb
pop
std
mov
imul
inc
sub
adc
push
outsb
mov
add
cmpb
dec
push
sti
cld
repz
fisubl
lcall
inc
dec
mov
mov
or
dec
loopne
xchg
movsb
stc
pop
dec
fcompl
rcll
mov
inc
pusha
mov
cmpsb
test
movsl
jmp
jmp
mov
ja
lahf
test
out
testb
cld
in
push
andb
fidivrl
cld
fadd
imul
addb
add
or
test
insl
jae
mov
pop
test
xor
inc
mov
pop
jnp
xchg
and
dec
fs
cwtl
push
mov
push
inc
and
sarl
les
xchg
pop
out
inc
call
push
xlat
adc
je
xorl
test
xchg
mov
push
and
push
push
lahf
clc
out
mov
ss
sub
or
jns
sbb
adc
int3
sbb
mov
mov
mov
cmp
sub
movsb
dec
into
jp
or
mov
mov
dec
pushf
mov
xor
pop
scas
mov
out
dec
add
add
movsl
movsb
es
int
push
mov
sar
sbb
xlat
cmpsl
mov
xchg
mov
mov
mov
testb
jno
xchg
imul
cmpsl
cmc
sbb
mov
sub
mov
push
cld
or
inc
add
loopne
push
fsubr
cmp
in
add
mov
mov
imul
xor
stos
outsb
leave
std
mov
mov
mov
inc
pop
rdtsc
pop
sbb
cmp
fs
inc
rcl
cli
data16
add
scas
aam
aaa
pop
cmc
push
dec
sti
lock
jmp
cmp
call
dec
aas
andb
adcb
xorb
andb
adcb
addb
xorb
movsl
andb
mov
adc
addb
xchg
cltd
repnz
cmp
icebp
jne
shl
inc
cmp
icebp
push
cmp
icebp
xor
cmp
icebp
sarl
icebp
sarl
ss
mov
aaa
ja
cmp
ds
in
sub
or
lds
outsl
out
cmp
cli
jne
loop
addr16
cli
pop
xor
cli
sbb
lea
leave
or
cld
sub
xchg
cld
push
arpl
cld
insl
arpl
cld
mov
arpl
cld
shll
cld
clc
arpl
cld
out
fsts
adc
mov
movsb
mov
ds
ss
ljmp
pop
inc
mov
adc
jmp
cli
jmp
dec
cli
push
cli
mov
or
dec
xor
jns
mov
push
cli
leave
and
xchg
push
push
mov
inc
and
lods
icebp
mov
mov
scas
or
movsb
push
insb
mov
cmp
or
leave
movsl
push
leavew
test
popl
adc
push
shl
xor
push
mov
lahf
int
testb
les
ficompl
rorb
pushf
movsb
mov
insb
sbb
subb
xorb
pusha
dec
clc
adcb
sub
icebp
int3
cmp
pop
inc
xlat
mov
pop
xlat
dec
pop
mov
dec
loopne
aam
add
sbb
inc
mov
shll
pop
cli
mov
movsb
ljmp
icebp
pop
cmp
icebp
cld
cmp
fsubrs
cwtl
dec
inc
or
and
daa
push
out
aad
xor
mov
subb
add
dec
push
mov
bound
cmc
pop
jns
movsl
sub
ret
hlt
pusha
aam
cmp
mov
mov
cwtl
cli
loop
add
movsb
sbb
outsb
andb
xchg
orb
jb
mov
js
mov
mov
mov
repz
insb
and
pop
adc
ret
dec
cmp
xlat
mov
xlat
push
dec
cwtl
xlat
pop
dec
mov
pop
dec
cmp
stc
cmpsb
dec
cmp
and
jmpw
insb
xchg
out
cs
push
cmp
movb
xlat
sbb
jmp
mov
push
push
dec
leave
mov
ja
xchg
push
xchg
mov
push
xchg
adc
andl
rcrb
inc
xlat
fstpl
sub
mov
pop
add
popw
xlat
dec
pop
test
xlat
cs
mov
push
pop
cltd
out
ljmp
subb
daa
xor
mov
daa
or
bound
jmp
cwtl
and
cwtl
or
cwtl
out
push
bound
xlat
push
cmp
lea
cwtl
popf
push
or
jge
ljmp
mov
mov
lea
inc
or
cmp
cmp
test
je
mov
fs
movsb
xlat
adc
aam
add
xlat
xor
hlt
arpl
mov
jmp
jne
shlb
inc
cli
ret
cli
mov
ret
insb
mov
movsb
add
insb
jb
in
bound
mov
xor
cmpb
mov
sbbb
popf
mov
hlt
pop
dec
stc
pop
pop
push
repnz
pop
adc
push
add
hlt
dec
xor
out
push
and
test
leave
adc
xchg
push
dec
xchg
cmpsb
out
add
inc
ja
inc
xor
out
push
pop
leave
sahf
push
dec
leave
mov
leave
mov
push
sahf
leave
pop
push
mov
dec
push
mov
fildll
mov
orb
cmc
ds
ret
jecxz,pn
loopne
ja
shlb
inc
test
movsb
push
insb
mov
daa
insb
mov
popl
lock
scas
push
sahf
leave
pop
push
mov
dec
push
mov
leave
outsb
push
fmulp
push
push
into
leave
push
push
repz
fdivrp
push
arpl
cld
ds
cld
cs
std
pop
xchg
and
dec
xchg
mov
jbe
mov
mov
xlat
push
dec
lret
dec
ret
dec
cli
sarb
sahf
add
lahf
ja
mov
and
mov
fadds
mov
icebp
add
jl
sti
cmp
repz
out
arpl
scas
arpl
gs
imul
push
insb
push
insb
div
pop
insb
sahf
repz
insb
xchg
nop
in
mov
inc
insb
mov
jp
jp
mov
xlat
jle
mov
dec
stos
xlat
outsb
dec
mov
xlat
cs
sbb
rorb
xlat
fimull
xlat
ret
xlat
lret
ja
dec
dec
xlat
mov
xlat
mov
jp
mov
dec
push
scas
dec
xchg
xlat
jle
scas
xlat
bound
xlat
push
adc
xlat
sbb
xlat
ss
sbb
fimuls
xlat
dec
or
into
dec
add
testb
decb
xlat
mov
xlat
mov
dec
push
scas
dec
xlat
push
dec
lcall
dec
adc
xlat
sbb
xlat
add
aad
cld
cld
out
jnp
call
xor
fdivs
inc
cli
rolb
mov
or
pushf
xor
cli
test
pop
cli
mov
out
cli
je
out
jl
repz
dec
xor
cli
and
mov
cli
adc
mov
add
out
daa
in
icebp
dec
cmp
icebp
inc
cmp
repz
int
out
std
and
in
xlat
mov
adc
jo
jmp
js
jecxz
pusha
pop
sti
xlat
push
pop
mov
ss
out
mov
add
mov
in
inc
xchg
xor
nop
mov
and
mov
xor
cli
fs
cli
insb
xor
cli
push
xor
cli
pop
xor
cli
xor
cli
sbb
leave
mov
mov
fcoms
fimuls
int3
icebp
sub
mov
cwtl
aaa
push
lods
cwtl
xchg
cwtl
sbb
cwtl
repz
cmp
mov
jp
scas
cmp
cmpsb
xchg
dec
mov
orb
and
dec
addr16
jg
in
ja
rorb
test
xor
cwtl
dec
add
inc
pop
incb
mov
sbbb
rolb
cs
or
into
dec
add
test
cmove
das
inc
daa
lea
inc
push
lea
scas
lea
inc
std
sub
fistpl
scas
fmuls
pop
xchg
mov
sub
mov
xor
cli
test
xor
cli
cltd
xor
cli
xorl
adc
jno
ljmp
jae
iret
adc
mov
adc
data16
cmp
jbe
adc
sub
push
mov
cmp
push
aaa
mov
ficompl
lret
out
outsb
fsubl
add
in
sbb
cmp
jne
sbb
add
in
or
or
dec
cwtl
insl
clc
mov
pop
pop
arpl
scas
mov
clc
and
andb
mov
loopne
leave
orb
cli
jecxz
pop
add
andb
cwtl
cmp
pushf
jbe
bound
lock
xchg
repz
mov
std
mov
cwtl
mov
xchg
pop
and
jg
int3
testl
in
cli
or
fisubl
int
popa
bswap
cmc
and
mov
pushf
push
enter
orl
adc
mov
push
mov
adc
mov
adc
mov
mov
push
std
leave
cmp
shrl
jg
loopne
insl
xor
pop
repz
aaa
xlat
in
call
dec
push
mov
adc
mov
adc
lods
sbb
stos
js
pop
xchg
insb
insl
out
imull
adc
dec
sbb
movsb
pop
insb
lea
adc
add
pop
das
arpl
lods
xlat
sbb
xchg
in
sbb
push
orb
mov
sbb
hlt
in
aam
adc
insb
xchg
std
inc
xor
add
popf
or
loope
push
icebp
and
xchg
jle
and
and
lea
jle
jbe
mov
mov
outsb
dec
push
xor
ficomps
push
int3
and
cmp
xchg
dec
mov
mov
jp
jl
and
daa
mov
cmpsb
inc
int3
adc
cmc
jl
mov
and
mov
and
out
dec
xor
mov
xchg
cmpl
es
loop
add
js
dec
or
lret
bound
add
pop
test
inc
test
out
sbb
mov
out
test
mov
cmpsb
arpl
fiaddl
add
ret
daa
mov
outsb
movsb
arpl
cmc
inc
cmp
sub
fisttpl
mov
jo
insl
leave
test
push
mov
gs
mov
leave
or
leave
cmp
into
push
push
cmp
icebp
pop
xor
nop
icebp
push
mov
cwtl
loope
push
pusha
cld
test
inc
mov
add
je
jle
in
push
dec
fcompl
xchg
insb
inc
xrelease
mov
insb
jp
scas
bound
pusha
rcrb
dec
into
inc
ret
add
loope
cmpb
adcb
orb
cmpb
mov
sbbb
popf
orb
insl
es
ljmp
ljmp
and
sbb
jb
out
xor
xor
pop
dec
mov
dec
dec
mov
xlat
insb
dec
sbb
int3
xlat
or
cld
arpl
popf
lea
inc
insl
daa
cli
xor
ljmp
add
dec
sub
lea
movsb
cld
arpl
bound
xorb
fs
aam
add
les
out
xchg
adc
in
gs
rcrl
pop
mov
lret
fwait
cmpsb
dec
cmp
cmpsb
in
cmp
cmpsb
sbb
xor
lahf
inc
adc
jle
icebp
into
sub
ss
mov
jbe
flds
jmp
dec
sbb
dec
nop
aad
jo
stc
pop
aaa
hlt
mov
push
sbb
fdiv
jae
arpl
aad
xor
mov
lret
mov
in
sub
out
sub
scas
icebp
add
mov
adc
incb
add
fs
ljmp
cmp
mov
add
std
cmc
sub
cmpsb
sbb
test
mov
arpl
insl
leave
jecxz
xor
mov
cltd
push
dec
scas
cmp
ss
das
fimuls
or
cmpb
inc
inc
sbb
fdivp
incb
test
cli
incl
jmp
mov
push
jnp
cli
gs
ja
push
dec
leave
xorb
mov
std
arpl
std
in
pop
adc
xor
psllq
mov
out
cltd
cmp
rorb
jle
sbb
addr16
cli
dec
inc
xchg
sub
mov
aam
pop
loope
data16
fistl
mov
out
xor
insb
jne
lods
mov
in
ja
aad
mov
test
daa
lret
stc
dec
sub
and
lea
es
pop
pop
cmpsb
sub
dec
and
dec
repz
dec
popf
popa
cmp
cwtl
sahf
pop
cmc
jmp
into
ds
adc
cmp
or
sahf
std
dec
and
out
insl
in
jmp
mov
insl
inc
cs
dec
or
loop
mov
fsubl
add
cwtl
cmp
fs
popa
mov
outsb
sub
inc
and
jns
xlat
cmp
cmpsl
add
movsb
dec
insb
jno
out
bound
insb
dec
cltd
movsb
adc
cmp
out
mov
pop
mov
push
addr16
push
inc
lds
xor
insb
aam
inc
adc
and
mov
scas
jnp
jecxz
cmp
mov
stc
dec
mov
movsb
cmp
sbb
jb
roll
js
mov
xorb
repz
fists
lret
in
jl
inc
fmuls
push
push
push
aam
pop
es
icebp
xlat
pop
pop
arpl
cwtl
mov
cmp
insl
pop
iret
mov
pop
in
pusha
rcrl
pop
dec
adc
mov
adc
dec
sub
or
call
cmp
fimull
cld
into
aas
lret
pop
add
cmc
in
cmpsl
cmp
icebp
mov
in
cmp
je
sub
mov
mov
movsl
shll
data16
pop
movsb
addr16
pop
mov
sub
mov
mov
mov
cmp
sbb
fdivp
mov
es
push
enter
pop
sbbb
bound
pop
sbb
mov
std
fnstenv
rep
int3
or
pop
test
or
xchg
aad
xchg
pop
jmp
lods
add
lds
pop
dec
cmp
sub
insl
pop
aad
lahf
jl
dec
lods
or
stc
into
out
pop
rcrb
leave
inc
dec
mov
loopne
cmp
lret
int
jp
scas
mov
push
fcomps
insb
idiv
jl
out
inc
and
out
jo
and
ljmp
push
insb
mov
sub
push
lcall
lods
pop
xchg
pop
pop
ss
pop
xor
jmp
js
decl
adc
cmp
les
lock
lret
push
aas
leave
repz
aaa
xchg
jl
xlat
inc
cld
dec
call
sbb
adc
fstpl
mov
sti
and
xchg
mov
cltd
out
cmpsl
pop
and
bound
and
or
xor
adcb
sbbb
aas
cltd
lock
mov
in
inc
cld
jge
xor
incl
fsubs
jae
lods
push
bound
stc
mov
in
outsl
fcmovbe
push
das
movsb
sbb
jge
int
and
pop
popf
mov
sbb
fadd
mov
in
andb
push
popf
leave
pop
dec
fdivl
jae
into
popf
stc
inc
mov
cwtl
mov
cwtl
nop
pop
stc
jmp
inc
mov
sbbb
xchg
jbe
mov
mov
rcrl
push
popf
xchg
arpl
jae
sarl
enter
enter
sub
insb
mov
jno
stos
pause
insb
dec
repz
je
pop
imul
jge
dec
adc
les
or
adc
aad
mov
cwtl
mov
xchg
sub
mov
fst
lret
cld
aaa
arpl
cld
pop
bound
jmp
leave
out
cs
xchg
ret
icebp
cmpsb
pop
loopne
and
cltd
cmpsb
jge
in
lcall
fidivrs
adc
sbb
in
popa
dec
data16
push
jbe
outsl
scas
fsubs
push
and
repnz
mov
ret
scas
sbb
dec
pop
int
in
adc
push
adcl
push
or
leave
jge
hlt
pop
cmp
cld
out
sbb
push
repz
lea
repz
jg
test
jae
bound
test
xor
daa
iret
push
cs
jecxz
pop
xlat
cmp
inc
clc
mov
filds
shr
xchg
jae
jg
lret
testb
rol
sub
adc
mov
xlat
or
push
add
stc
push
fs
popa
cmpsw
cwtl
xor
lahf
push
data16
pushf
adc
mov
arpl
fsubl
cmp
loopne
push
insb
xor
insb
mov
imul
dec
push
lret
sbbb
scas
fdivl
jo
movsl
enter
out
cmp
pop
mov
test
push
push
ret
xor
enter
gs
mov
adc
add
pop
ja
or
cwtl
sbb
sbb
movsb
xchg
movsb
sub
mov
lods
inc
popf
cli
js
add
aad
dec
inc
movsb
adc
mov
and
mov
jle
push
mul
call
adc
jne
or
cwtl
aaa
mov
push
jnp
cmpsb
lods
dec
je
inc
and
ret
mov
loopne
xlat
mov
out
inc
cmp
sti
cmp
repz
insb
outsb
repz
arpl
fidivs
adc
repnz
xchg
test
mov
lods
pop
popa
lret
fdivs
mov
fstpl
mov
popf
cmpsb
xchg
cmp
sub
or
lods
adcb
lods
sbbb
sti
in
ficompl
bound
xor
dec
out
cli
push
pop
leave
mov
aam
arpl
rorb
xor
sti
dec
jg,pt
inc
push
lret
out
repz
inc
xlat
mov
stc
cmp
adc
test
fnstsw
push
sub
int
cmp
dec
int3
dec
fnsave
cld
push
pop
ret
ja
jb
push
dec
xor
ss
pop
jne
mov
aaa
daa
push
out
frstor
ss
mov
adc
movsb
das
insb
mov
add
into
insb
pop
movsb
push
dec
push
dec
iret
mov
movsl
test
out
outsl
daa
out
pop
fsub
mov
adc
arpl
arpl
and
mov
mov
daa
jmp
daa
xor
rclb
or
inc
lret
insb
int
repnz
xor
sahf
ljmp
add
int
add
xlat
mov
movsb
jmp
movsb
push
cmp
and
mov
mov
pop
dec
ret
dec
icebp
jne
lahf
hlt
les
mov
adc
sbb
pop
pop
out
xor
cwtl
sti
sbb
insb
pop
mov
mov
shll
outsl
push
inc
rcrl
and
test
mov
add
cld
mov
cld
lods
arpl
lcall
ret
cmp
xor
jmp
pop
nop
leave
add
cli
leave
and
cli
mov
popa
mov
mov
cmp
xor
test
pop
and
lahf
sub
or
lret
aaa
xlat
loopne
cmp
out
fdivrs
xor
cmp
fidivrs
mov
and
mov
js
leave
cld
and
push
popf
leave
jg
js
lock
out
dec
testl
xchg
push
cmp
push
mov
lret
in
lret
repz
sbb
and
movsb
dec
push
mov
dec
outsl
mov
sub
mov
popf
jl
rorb
clc
leave
sub
into
es
andb
lea
inc
mov
push
adc
lahf
sub
sbb
movl
rolb
or
inc
cli
bound
sbb
insb
aaa
sub
leave
cmp
outsl
jae
stos
xrelease
out
int
sub
xor
mov
xor
int3
jl
xchg
jne
lcall
dec
orb
mov
and
ja
dec
mov
nop
push
or
mov
bound
xor
stc
loopne
pop
mov
pop
cmp
in
and
popf
insl
cmpsl
xor
cwtl
jne
clc
pop
loopne
fwait
repz
mov
in
mov
fmulp
jnp
mov
sub
jbe
ljmp
sub
stc
pop
mov
popf
push
cmp
ds
test
sbb
loopne
dec
or
mov
fbstp
lods
repnz
mov
cmc
sub
adc
adc
mov
mov
dec
into
addps
lret
rorl
popf
dec
sbb
mov
push
bound
xor
sub
testl
push
gs
icebp
push
cmp
xchg
pop
pop
shlb
or
shlb
pop
movsl
mov
pop
enter
sbb
insb
dec
repz
lods
xchg
mov
insb
int3
movsb
adc
je
mov
ret
bound
xchg
push
insb
xlat
test
mov
mov
mov
insb
mov
movsb
push
push
push
int
mov
in
je
mov
stos
in
mov
inc
xor
rclb
inc
sub
or
lret
fsts
lret
or
mov
jo
bswap
cltd
cs
mov
mov
js
push
insb
xchg
nop
scas
pop
jb
sub
fcompl
inc
loopne
arpl
loop
lock
lcall
mov
mov
mov
adc
loope
insl
aad
addr16
lcall
fsubrs
mov
xor
test
pushf
aam
mov
data16
cli
imul
pop
add
cli
sub
cld
popa
xor
popf
fwait
outsb
pusha
inc
push
insb
out
jno
mov
cwtl
sti
popf
mov
out
bound
das
push
leave
ror
loop
and
mov
jmp
fsubs
cmpsl
adc
mov
inc
out
cmp
repnz
repnz
aam
cmc
test
or
adc
mov
incb
fwait
push
sti
dec
push
lea
cwtl
push
imul
fsts
repz
outsb
in
dec
mov
dec
dec
mov
push
jmp
push
das
mov
pop
loope
outsl
scas
or
cld
in
jno
ret
lcall
cmpsb
pusha
mov
inc
scas
icebp
aam
and
adc
xlat
test
pushf
aad
iret
ds
xor
outsb
lds
inc
sub
test
aam
divb
and
loopne
popf
push
pop
cmpsb
pop
mov
mov
sbb
ficompl
aam
or
ds
sti
lods
cmp
inc
aaa
lea
out
popf
lcall
mov
leave
std
push
test
and
dec
inc
xchg
fcomps
shl
pop
mov
out
xlat
insl
lods
insb
out
in
in
mov
mov
out
or
out
mov
push
in
aam
sub
jbe
push
lea
pop
push
sbb
inc
cs
push
pop
ret
fisubrl
add
inc
test
mov
mov
pop
push
out
iret
sbb
bound
add
dec
mov
mov
push
fistpl
dec
repz
out
dec
pop
aam
fists
xor
mov
stos
cmp
icebp
lahf
cmp
jle
cmp
popa
mov
aad
call
int
mov
js
xor
mov
cmp
in
xor
sti
push
cld
inc
xchg
clc
pop
cmp
adc
lret
pop
adc
mov
stc
mov
inc
xchg
mov
stos
jp
cli
outsl
xor
mov
push
pop
mov
push
or
push
dec
xor
pop
out
and
repz
test
xchg
or
popf
mov
xchg
xor
sti
negl
pop
push
inc
or
dec
es
fisubl
adc
and
decb
in
jnp
push
sub
les
pop
insb
lcall
fbld
jecxz
fs
repz
cmp
cmp
stc
lret
cmpsb
loop
hlt
adc
or
fidivl
jne
dec
mov
loop
add
stos
xchg
lods
push
mov
imul
testb
xorb
xorl
xor
lahf
xor
add
mov
mov
rcrl
stos
aad
cld
mov
mov
mov
test
mov
shlb
push
mov
pop
ja
in
clc
popa
mov
fsubl
dec
push
mov
sub
lcall
or
pop
punpckhdq
lods
add
inc
adc
popf
xor
mov
xchg
cmp
mov
xor
sbb
call
mov
jbe
inc
fcoml
lods
pushf
xlat
pushf
push
push
iret
andb
sub
sbb
call
mov
insb
in
and
aam
pop
xor
lods
pop
out
inc
ljmp
dec
mov
xchg
leave
stos
dec
sahf
je
out
ret
xor
cmpb
add
pop
shrl
mov
loop
jns
shrb
mov
nop
push
and
fld
or
jge
aam
daa
popa
sub
gs
aaa
out
xchg
pop
sbb
push
sahf
xchg
data16
xlat
cmp
ja
gs
lods
xchg
aas
in
nop
leave
ljmp
push
call
mov
addl
lea
ret
repnz
push
shlb
mov
adcb
test
call
scas
adc
and
outsl
insb
lds
pop
adc
pop
fbld
incb
mov
out
es
pop
dec
adc
insb
adc
ja
mull
push
jb
dec
ja
jns
xor
sbb
jge
insb
lods
and
add
loope
dec
jno
orb
addl
aad
sub
lods
mov
leave
es
dec
xchg
push
into
sahf
popa
sbb
cmp
loopne
push
fs
aaa
insb
lods
les
xchg
jae
in
jne
and
jb
xchg
inc
jns
mov
rcl
orb
sbb
xchg
sbb
imul
leave
xchg
xchg
nop
pop
jl
inc
jge
cmc
sbb
cmp
jp
mov
adc
push
mov
leave
mov
push
pusha
ret
ficomps
mov
out
inc
xor
mov
sbb
idivb
dec
js
push
les
gs
push
mov
scas
cmp
js
or
add
xchg
xchg
push
dec
xchg
or
cmpb
mov
cli
ja
std
jbe
or
jge
les
add
push
or
out
outsb
inc
movsb
mov
es
add
xchg
repz
adcb
add
filds
dec
movsl
rcrl
mov
sbb
xchg
test
push
sub
xchg
bound
in
sub
and
hlt
stos
rcrb
dec
xchg
inc
push
xchg
cli
jp
mov
xchg
dec
fdivr
jg
jl
aam
insb
jp
sub
pusha
sahf
jmp
lods
sbb
mov
mov
xchg
mov
test
sbb
insb
fidivrl
shrl
jb
jae
add
dec
xchg
inc
fiaddl
call
xchg
fstpl
add
mov
shll
pop
out
jle
sahf
cmpsl
mov
imul
mov
jo
fwait
sbb
mov
pop
dec
ds
cmpsl
or
add
movsb
add
cld
inc
push
inc
das
push
or
aaa
loope
add
mov
fstpt
fwait
jno
enter
mov
cmp
test
sbb
sub
fwait
push
mov
xchg
inc
shlb
scas
push
sub
sub
mov
or
loope
aaa
jmp
add
sub
ret
idivl
rol
mov
orl
cmp
cli
fwait
mov
push
lcall
aad
test
lret
testb
cmpsl
cwtl
aas
push
aam
imul
lock
or
sbb
dec
cmp
pop
adc
and
or
jp
pop
std
shlb
test
inc
pop
push
inc
mov
lret
mov
cmp
addr16
xlat
adc
add
lret
inc
nop
std
xchg
and
xor
lds
outsb
xchg
sbb
xchg
push
ficomps
or
pushf
inc
jp
pushf
push
jp
pop
jmp
rol
push
addr16
cli
hlt
mov
mov
xchg
jp
movsb
mov
sti
or
push
mov
sbb
outsb
mov
into
mov
pop
cmp
adc
psubusw
jbe
xor
cld
popa
pushf
stos
push
inc
push
in
pushw
fsub
xor
in
and
int3
jp
cmpsb
add
push
inc
or
xlat
cmp
jmp
xor
lock
hlt
and
push
or
ss
adc
add
arpl
push
ret
xchg
mov
and
push
in
inc
sub
and
loopne
pop
push
mov
push
jb
xlat
dec
dec
movsb
lcall
not
adc
out
jns
mov
popa
and
push
mov
aaa
fstpt
lods
sbb
fildl
int
imul
aas
xchg
mov
xor
in
mov
pop
rorb
sbb
pop
testl
enter
jno
adc
fldenv
cmp
mov
push
lret
adc
aas
or
sbb
mov
insb
or
xchg
sub
popf
adc
sbb
cmp
dec
push
sti
cmp
popf
inc
jge
hlt
pop
or
add
and
pop
inc
andb
dec
xor
sub
movb
and
adc
cltd
add
icebp
stos
cmpsb
fdivrp
mov
adc
push
ret
pop
dec
jmp
insb
xor
dec
mov
in
out
mov
dec
mov
ljmp
stos
and
jl
xchg
mov
repz
dec
jne
push
fs
lea
jmp
add
add
add
pop
sub
sub
bts
bts
shr
or
btc
not
shr
test
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
sub
test
or
and
not
sub
shl
jmp
lcall
ret
or
test
btr
add
and
add
cmp
adc
bts
jmp
lcall
xor
add
add
pop
xor
xchg
push
or
cmp
add
bts
test
btc
mov
test
call
lcall
incl
ret
neg
sub
add
cmp
and
dec
or
btr
and
shr
sub
jmp
lcall
test
bsf
bsf
xor
bsf
shr
bts
or
inc
mov
mov
xchg
push
push
xchg
dec
add
add
call
cmp
sub
xor
adc
shr
shl
adc
add
mov
add
add
dec
mov
adc
movzwl
bsf
or
or
mov
shl
sub
xchg
mov
bts
not
add
xor
bts
add
neg
btr
jmp
lcall
ret
or
shr
btr
btc
cmp
shl
or
adc
test
call
lcall
add
xorl
pop
xor
xchg
push
mov
sub
shr
add
inc
movsbl
and
movsbl
jmp
lcall
stc
add
xchg
ret
neg
sub
movzwl
add
shr
and
mov
and
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
or
xor
btr
and
xor
neg
adc
jmp
lcall
or
call
shl
test
adc
xor
test
btc
btc
xor
dec
add
mov
add
cmp
bts
xor
adc
and
cmp
or
dec
call
lcall
add
or
cmp
test
cmp
or
cmp
adc
call
lcall
or
add
bsf
cmp
adc
shl
mov
shl
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
xor
adc
test
test
bts
xor
inc
call
lcall
push
lock
bts
cmp
test
add
btc
dec
test
adc
jmp
lcall
shr
cmp
bsf
mov
btr
shl
test
bsf
shl
mov
test
mov
bt
shr
adc
xor
adc
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
bsf
xor
test
neg
or
bsf
xor
bswap
adc
cmp
push
cmp
add
cmp
shl
inc
btr
mov
bts
add
shl
or
movsbl
shl
sub
test
test
add
mov
bts
bt
btc
bsf
mov
adc
or
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
not
shr
and
add
bsf
btr
and
sub
call
lcall
add
btc
not
neg
and
test
cmp
bts
neg
bts
mov
add
test
mov
or
test
cmp
test
mov
sub
mov
inc
btr
add
mov
adc
shr
adc
btc
btc
call
lcall
mov
bts
adc
sub
not
xor
movzwl
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
inc
cmp
bts
xor
shl
adc
add
cmp
shr
cmp
add
shl
or
cmp
and
bsf
add
shr
btr
jmp
lcall
sbb
stc
and
or
test
cmp
mov
add
test
sub
and
bts
bt
shl
xor
bsf
call
lcall
add
bt
bt
cmp
cmp
not
inc
cmp
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
add
test
adc
and
bsf
add
neg
inc
shr
bt
sub
mov
cmp
or
movsbl
btr
and
mov
movzwl
bt
movswl
sub
adc
adc
cmp
movzbl
mov
sub
mov
add
shr
bts
bts
movzwl
bswap
not
mov
cmp
shr
btc
lea
inc
cmp
jne
shl
add
sub
mov
shr
movswl
dec
cmp
dec
add
cmp
test
cmp
and
add
add
and
xor
call
lcall
je
or
bts
bts
cmp
btc
bts
test
inc
sub
mov
or
shr
or
and
test
btr
or
test
call
lcall
mov
shl
shl
or
not
add
cmp
bsf
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
sub
xor
xor
inc
adc
bsf
mov
test
call
lcall
adc
and
adc
cmp
cmp
adc
neg
add
bt
test
mov
neg
test
add
neg
xor
btc
jmp
lcall
scas
sbb
and
test
test
shl
mov
add
not
and
xor
btc
cmp
add
inc
not
mov
call
lcall
add
sub
mov
add
cmp
test
bsf
push
pop
inc
add
loop
inc
mov
sub
sub
adc
shl
add
dec
push
decl
mov
add
not
add
shr
shr
cmp
add
shr
call
lcall
jmp
shl
sub
mov
and
or
xor
bt
and
push
shll
movzbl
adc
bts
test
cmp
movsbl
add
bt
push
or
xor
cmp
neg
mov
btr
or
test
sub
mov
bsf
test
cmp
test
sub
movswl
movsbl
adc
push
push
pop
add
add
call
btr
and
adc
test
and
btc
not
xchg
or
bsf
and
and
cmp
and
bt
mov
movzwl
test
test
mov
shr
xor
test
and
call
lcall
mov
mov
loopne
in
cmp
adc
adc
and
shr
add
test
not
adc
cmp
test
xor
mov
call
lcall
add
or
bt
adc
or
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
dec
bt
btc
btr
and
sub
cmp
shl
or
test
bts
shr
bt
cmp
add
btc
btc
call
lcall
fadds
call
leave
xor
mov
and
btc
mov
cmp
not
cmp
and
test
shr
xor
bts
bt
cmp
je
mov
btc
mov
test
xor
dec
cmp
inc
add
cmp
and
bts
xor
cmp
and
add
call
lcall
adc
cmp
sub
btr
shl
add
add
sub
mov
and
cmp
adc
cmp
cmp
or
or
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
cmp
bsf
neg
bsf
bt
test
xor
dec
btc
push
decl
mov
add
movswl
bts
sub
shr
test
cmp
and
test
push
decl
mov
add
cmp
cmp
inc
add
dec
and
test
cmp
add
cmp
xor
test
movzbl
add
test
btr
jmp
sub
mov
add
or
shr
bts
or
inc
mov
sub
not
mov
or
test
bts
shl
test
cmp
mov
dec
add
xor
or
xor
bsf
xor
not
add
movzbl
cmp
bt
adc
mov
test
test
mov
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
bt
test
inc
sub
movzwl
shr
mov
test
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
or
or
cmp
add
add
cmp
push
push
movzwl
adc
bsf
test
bt
bsf
and
push
sub
mov
adc
sub
adc
test
or
sub
mov
test
and
shr
test
and
adc
adc
call
lcall
js
or
out
and
shl
mov
neg
shl
shr
lea
shl
xor
btr
xor
neg
cmp
add
mov
inc
adc
add
btc
test
cmp
btr
bsf
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
cmc
ficompl
imul
shlb
fildl
add
mov
out
sub
mov
sub
cmp
inc
inc
not
shl
or
adc
sub
push
or
shl
bts
mov
mov
or
sub
push
bt
sub
add
not
mov
xor
cmp
bt
push
sub
xor
bsf
inc
add
and
bt
call
lcall
mov
add
test
or
adc
dec
and
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
or
test
movsbl
and
movswl
btc
mov
sub
call
lcall
sub
mov
add
or
mov
movzwl
movzwl
cmp
btc
add
bt
btr
btc
and
or
sub
xor
not
call
lcall
mov
test
xor
neg
btr
cmp
btc
xor
dec
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
add
add
mov
add
or
ja
andb
int3
or
push
push
inc
push
push
sub
xor
inc
daa
cs
dec
fisttpll
push
stc
add
pushf
clc
les
and
or
or
or
inc
shlb
cs
test
adc
cmp
add
pop
in
sahf
add
and
jle
inc
add
mov
xor
frstor
js
add
add
add
lock
negb
iret
sbb
sbbl
cmp
sbb
sahf
xorl
cmp
and
sbb
dec
es
sti
xor
or
push
inc
loop
enter
cmp
iret
add
out
adc
adc
imull
out
sahf
pusha
xchg
inc
dec
pop
and
dec
add
rclb
mov
xchg
or
lahf
adc
adc
inc
or
push
add
sbb
imull
dec
sbb
loope
fcoml
ficomps
mov
fcompl
inc
loopne
in
mov
lcall
add
pop
sbb
or
nop
inc
mov
add
sbb
xor
pop
aad
jp
call
pop
add
dec
inc
sbb
xor
inc
aaa
cmp
dec
push
popf
pushf
inc
popl
xor
push
push
dec
pop
notb
push
clc
dec
push
inc
xor
adcl
dec
sbb
pushf
cmp
push
xchg
cmp
adc
jbe
jne
aas
xor
outsl
jle
dec
push
add
ss
push
push
inc
jg
repnz
dec
inc
or
pop
fsubs
sub
cmc
and
inc
pop
or
test
rclb
inc
dec
inc
repnz
pop
dec
dec
push
cmp
push
cmpsl
xorl
ds
enter
inc
sub
push
inc
aad
cmp
pop
mov
push
pop
sbb
mov
cmpl
push
inc
lret
inc
cmpsl
aas
or
push
inc
push
xchg
add
hlt
ss
notb
inc
ret
aam
add
cmp
outsl
jae
and
cmp
cmc
cmp
outsb
cmp
jae
je
int
in
aam
addr16
insl
loopne
imul
call
ja
or
push
inc
mov
outsl
mov
clc
dec
sub
nop
aad
imul
xchg
push
and
rsqrtps
in
movsb
idivb
arpl
repz
xchg
lods
push
mov
adc
imul
sub
icebp
xor
out
lds
popa
aam
inc
repnz
call
mov
imul
leave
pop
fnstenv
push
add
inc
dec
jmp
xchg
and
outsb
mov
call
sbb
adc
stos
mov
add
push
cld
mov
inc
push
push
je
or
xor
inc
pushf
call
js
sbb
add
adcb
gs
xchg
fs
xlat
mov
addr16
clc
test
outsl
fmuls
and
dec
je
or
loope
fisubrs
das
or
les
leave
or
fs
je
cmpsl
aaa
data16
lahf
mov
leave
xchg
das
jne
jnp
hlt
js
jo
insb
fs
xor
stos
push
xchg
inc
push
or
dec
popa
jns
dec
mov
mov
shl
pushf
add
aam
sbbb
push
push
inc
push
inc
pop
xor
fs
jne
es
mov
dec
inc
sahf
add
pusha
