mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
arpl
in
mov
or
in
mov
cwtl
into
sub
dec
fsts
jbe
push
mov
gs
add
rol
popa
inc
mov
push
pop
xor
out
out
adc
mov
push
or
push
mov
lock
xchg
test
cmc
adc
mov
mov
cmp
and
cltd
sbb
jle
nop
cwtl
mov
mov
ljmp
aam
fcoms
out
outsl
insl
sarb
mov
push
pop
ljmp
push
mov
test
mov
xor
loop
inc
cmpsl
pushf
push
mov
jl
loop
xchg
pop
leave
push
mov
in
push
ficomps
gs
aas
int3
pusha
and
add
pop
and
inc
and
xor
das
pop
pusha
adc
dec
stos
lea
mov
mov
xchg
pusha
out
cld
inc
mov
icebp
ret
into
push
lcall
mov
xor
inc
mov
push
int3
outsb
or
test
cwtl
in
bound
mov
and
add
xor
inc
test
jp
mov
xchg
sub
imul
repnz
or
lea
sub
mov
sbb
sub
jb
in
mov
add
daa
ficomps
mov
cmp
mov
loop
cwtl
scas
dec
cmp
jg
jl
push
cwtl
or
out
lea
hlt
jo
hlt
lods
push
and
stos
xchg
punpckhdq
sbb
fidivl
push
in
fs
pop
cmp
xor
cli
inc
dec
dec
movsb
jle
xor
xor
nop
jle
sbb
addr16
xchg
pusha
test
lock
push
adc
inc
leave
test
out
inc
les
fs
inc
int3
mov
cmp
fildll
int
pushf
mov
mov
ss
and
stos
pop
mov
add
movsb
or
inc
sbb
mov
bound
lods
insb
sub
insb
roll
dec
int
mov
enter
leave
or
and
lcall
sti
xor
jg
pop
fcomps
js
inc
pop
xchg
pop
sbb
cld
mov
pop
xor
or
or
shrl
adc
adc
popa
mov
stc
sub
ficomps
lds
adc
les
add
inc
das
rcl
and
fbstp
mov
jo
sub
in
mov
cmp
push
xchg
cmc
jecxz
fisttpll
adc
ja
mov
ret
out
arpl
pop
int3
push
push
mov
sbb
and
fsubl
lret
aad
aad
insl
stos
xchg
stos
or
mov
add
jecxz
sub
lea
aad
js
jmp
xchg
jae
add
cmpsl
xor
mov
ret
mov
mov
add
iret
sub
out
test
data16
push
loope
push
int3
mov
adc
sahf
pushf
imul
adc
cli
fnstsw
xor
sti
test
pop
inc
or
test
fcmovb
adc
and
addr16
js
sti
mov
ds
xlat
fisubrl
jnp
repz
sbb
test
lea
add
in
int
jge
repz
ret
gs
dec
mov
mov
pop
es
jl
mov
lret
rcrb
ja
popa
xchg
mov
or
jl
lock
sub
inc
xchg
mov
mov
dec
pop
mov
xchg
arpl
sub
ja
leave
outsl
mov
mov
xchg
jns
mov
push
sbb
mov
repnz
mov
lock
jnp
sti
subl
and
add
mov
or
in
data16
lock
cmp
bound
add
jg
les
and
mov
add
xor
in
xchg
out
adc
jns
pop
mov
push
cmp
je
push
or
sub
mov
ds
cli
dec
adc
insb
inc
dec
adc
idivb
and
ss
aas
jecxz
adc
xchg
sbb
sub
mov
insl
iret
inc
mov
lds
lea
in
subb
frstor
out
inc
repz
stc
lock
or
popa
cmp
sahf
repz
rolb
push
repz
fisttpll
or
sahf
loopne
pop
mov
lods
push
sbb
ficomps
xor
shlb
push
push
xchg
ja
cmpsl
cmpsl
xor
mov
test
cmc
mov
dec
add
pop
int
xor
cmc
outsb
test
pop
sahf
cmp
loopne
dec
mov
scas
divl
in
sub
insb
in
jmp
xorl
sbb
cld
insl
popf
dec
push
mov
adc
stos
iret
hlt
jns
cld
pop
fwait
insl
push
addr16
add
cmp
mov
lods
leave
cmc
ss
add
push
sbb
out
xor
xlat
jl
jg
les
add
fsubl
sbb
pop
and
inc
dec
lret
dec
jo
scas
insl
ljmp
push
daa
stos
fwait
repz
or
lcall
push
test
mov
aam
adc
scas
js
mov
mov
stc
test
orb
adc
mov
leave
cmc
imul
movsb
add
dec
push
jae
jno
inc
mov
pop
xchg
nop
jmp
mov
pushf
mov
cmp
adc
es
or
aaa
lret
xor
push
mov
jp
daa
add
or
rcrb
mov
outsb
ss
js
and
outsb
stos
sahf
pop
xor
and
push
mov
adc
jne
shll
adc
mov
js
cmc
fsubs
mov
and
jns
inc
xor
insl
sbb
cmpsl
in
sub
and
adc
ficoms
pop
test
lahf
dec
shrl
push
leave
std
arpl
test
inc
cmp
lret
divb
xor
fwait
cmp
inc
shlb
add
je
clc
xor
outsb
xchg
sub
and
cmpsl
push
arpl
shll
out
mov
imul
adc
js
pusha
fwait
pop
sub
inc
sbb
int
mov
lret
divl
sarl
mov
into
adc
add
imul
cmp
out
mov
into
mov
add
sub
inc
mov
cmp
dec
int
es
or
rcr
sbb
or
sub
cli
mov
sbb
jmp
pop
loopne
mov
stos
pop
lock
push
cmp
push
cmpsb
outsl
adc
jp
mov
call
inc
lret
repz
inc
sbb
adc
xchg
jecxz
lret
xor
sub
mov
xchg
addl
sbb
sbb
jae
mov
xlat
sbb
xchg
insl
in
int
loop
cli
mov
iret
pop
repz
movsl
dec
cs
and
jo
xchg
sbb
rclb
adc
jbe
cmpsl
sbb
push
repnz
mov
dec
inc
pusha
outsl
cwtl
iret
dec
repz
mov
in
jae
popf
ret
xor
xchg
dec
imul
cmp
clc
daa
inc
movsl
jl
outsb
xchg
call
std
fnstcw
shlb
dec
mov
lahf
jl
js
out
incl
lock
jns
pop
push
jbe
and
jbe
shr
sbb
stos
cmpb
xchg
mov
movsl
pop
ds
cmpl
sub
movb
and
mov
scas
sti
pop
movsl
je
and
jbe
dec
or
xchg
rol
shl
cld
ret
pop
jg
push
mov
push
fbld
gs
jb
xchg
push
roll
ret
dec
divl
jg
adc
insb
xchg
cli
add
mov
jl
mov
cmp
push
in
add
fsub
lock
push
in
sub
inc
xchg
xchg
dec
out
adc
xchg
xorb
mov
pop
jns
insb
jle
dec
pop
pusha
cld
movsb
out
sbb
test
in
push
incb
test
sub
dec
or
clc
inc
mov
add
xor
cmc
call
aas
in
sbb
jecxz
cltd
aam
outsl
dec
jle
movsl
fsubp
adc
roll
stc
xlat
mov
cmp
push
leave
inc
ss
decl
ss
scas
adc
cmp
in
sbb
in
jae
xchg
cld
loopne
sbb
pop
popa
pop
jne
fnstcw
jecxz
push
mov
xor
ja
jno
lds
int3
push
mov
hlt
inc
fmul
cmp
repnz
pop
bound
mov
fstpl
mov
popf
or
int3
sub
rorl
cs
sub
sbbb
insl
jle
loop
iret
hlt
test
dec
int
enter
adc
arpl
sbb
lods
faddl
nop
add
test
adc
inc
outsl
out
xchg
loop
cmp
jne
push
mov
and
shlb
inc
loopne
push
nop
mov
cmp
xor
lahf
fs
sub
sbb
popf
loopne
lds
int
je
popf
jnp
repz
aam
and
int3
stos
xchg
ret
pop
inc
jmp
pop
lea
push
jg
xchg
sbb
xor
sbb
outsl
loope
ret
dec
pop
int3
out
mov
pop
fisubl
adc
in
popa
push
imul
add
cld
repnz
xor
sti
pop
sub
mov
mov
jns
sbb
jg
cli
mov
push
lret
mov
aad
aad
sti
and
pusha
mov
in
or
movsb
fwait
dec
int
mov
cli
push
add
stc
push
outsb
lods
jle
inc
pusha
inc
ss
mov
xchg
ja
pop
pop
loopne
fsubrl
call
and
adc
test
cmp
and
dec
pop
or
mov
add
outsb
pop
mov
cmc
cmp
stc
and
jnp
dec
lock
call
jge
fiaddl
div
mov
std
cmp
int3
jecxz
les
imul
jno
lods
aas
dec
cmp
jg
mov
icebp
add
and
push
push
sarb
sbb
push
pop
xchg
inc
je
imul
mov
dec
xchg
xchg
fsubrs
jo
gs
sub
inc
or
adc
and
cmp
add
push
dec
mov
add
test
mov
cli
sub
aam
xlat
push
cmp
dec
data16
mov
add
rolb
jne
or
inc
loop
lock
nop
add
and
or
pop
int3
pop
js
inc
pusha
pop
mov
mov
popf
mov
sub
fisubl
cmp
adc
jmp
push
int3
orl
ret
repz
aam
jle
push
or
or
inc
in
xor
outsb
pop
push
jae
fbld
in
and
hlt
js
loopne
sahf
push
sub
imul
inc
dec
mov
stos
or
arpl
push
push
mov
mov
xchg
or
shrl
movsb
xchg
mov
jge
cs
or
jp
sbb
pop
mov
inc
adc
or
inc
jno
bound
lock
mov
push
add
cmpsb
dec
pop
and
fucomi
sub
pop
idivl
sti
fmuls
mov
pxor
cmp
sub
std
vucomisd
in
icebp
adc
cld
lods
push
aas
pop
or
adc
sarl
mov
push
loop
notl
inc
push
das
inc
mov
push
pop
xor
aam
shl
mov
and
push
sub
fisttps
push
jl
or
jg
clc
jl
shl
fisubs
es
jbe
call
arpl
pop
popa
adc
push
in
push
scas
xor
or
and
dec
aam
push
jnp
cmp
dec
in
mov
bound
and
mov
insb
xor
add
movsb
sbb
test
xor
and
mov
call
out
jne
popf
gs
mov
ss
sbb
lods
idivl
pop
inc
mov
xor
stos
xchg
notl
xchg
dec
jbe
cld
dec
push
inc
and
mov
outsl
inc
xchg
push
lea
cltd
outsb
movsb
mov
aaa
adc
sbb
or
popf
inc
ljmp
in
pop
pusha
lret
dec
push
xchg
mov
mov
nop
das
add
dec
mov
ja
xchg
call
sub
and
add
fmull
mov
testb
cmp
in
mov
sbb
in
rcl
sbb
clc
cmp
into
add
add
dec
dec
lods
loope
ja
scas
lods
xor
cmp
xchg
pushf
insb
rorl
in
lock
outsl
insb
xchg
mov
movsb
dec
fildll
push
into
in
cmp
sbb
xlat
dec
das
lock
mov
cmpl
mov
inc
hlt
rcrl
mov
cs
scas
test
push
inc
mov
shlw
shll
add
imul
lods
imul
stos
cmpsb
dec
and
pop
mov
xorl
jmp
lahf
lea
dec
xorb
or
mov
push
or
add
shr
in
ljmp
jge
jns
shrb
ljmp
call
aaa
insb
sbb
and
imul
les
add
sbb
mov
push
dec
xor
cmp
or
ljmp
xlat
test
popf
sti
scas
dec
in
xor
pop
in
stc
xor
inc
in
setb
mov
testl
pop
in
xor
jae
imul
mov
cmpsl
push
cmpsb
and
cltd
addl
adc
inc
xchg
and
sub
pusha
in
jmp
mov
fcompl
fsts
les
cmpsb
fcomip
test
lods
mov
inc
orl
mov
in
xor
or
pop
push
gs
sbb
in
test
mov
cmpsb
mov
in
add
shrb
cli
mov
loope
dec
or
sbb
je
mov
imul
xor
pusha
cmpsb
popa
sbb
stc
sbb
dec
fsubrl
xor
lea
push
xor
ljmp
jae
addb
sahf
xor
dec
mov
xchg
hlt
dec
daa
push
into
call
xchg
scas
sbb
icebp
ret
test
cmpsb
insb
stc
mov
loopne
jae
pop
ss
jge
jb
lods
das
adc
jl
push
lret
push
mov
ljmp
xor
sbb
je
xchg
fidivs
lahf
fstl
add
arpl
xchg
lahf
inc
addr16
sbb
outsb
jo
push
cmp
lds
roll
outsl
cmp
pop
aaa
lret
and
xchg
test
movsl
pop
pop
sbb
add
mov
leave
jmp
push
dec
fwait
out
cmp
xchg
ja
sbb
aas
aas
aad
adc
mov
sbb
int3
cli
fndisi(8087
icebp
cmp
call
xlat
or
and
popa
push
fsubl
adc
mov
pop
lock
mov
pop
rorb
xor
mov
shlb
repnz
cmpsb
mov
loopne
adc
sahf
mov
pop
sub
or
lea
xor
xor
shll
mov
inc
aam
adc
xlat
jb
and
jmp
sti
out
jp
sahf
mov
push
insb
in
ja
shrl
shll
xchg
ljmp
adc
jg
cmpl
mov
or
das
sub
or
jbe
inc
or
inc
fcmovbe
xchg
mov
cmp
add
adc
pop
add
xorl
sbb
jae
sbb
dec
sbb
stos
or
fcmovne
vsubss
repnz
sbb
stc
fcomps
sub
inc
orl
pop
sbb
mov
pop
jnp
mov
mov
or
test
mov
out
pop
or
and
jecxz
jp
inc
pop
fwait
inc
daa
xchg
orl
or
pop
fs
mov
pusha
lods
push
inc
mov
mov
adc
insb
cmp
jb
inc
int3
fnsave
push
mov
mov
mov
pop
insl
jns
inc
popf
jnp
or
xchg
pop
rcll
mov
and
pop
clc
dec
fsubs
ss
icebp
daa
test
inc
cmp
pop
sub
iret
push
pop
rcrb
and
rcr
mov
mov
push
pop
int
std
mov
adc
pop
orb
jmp
lods
cmpl
jbe
loope
pop
push
cmc
mov
test
xchg
sbb
and
and
shll
loope
add
or
scas
jle
cmpsl
dec
hlt
jbe
test
push
pop
das
push
decb
inc
aam
inc
xchg
out
cmove
xor
cmpsl
popf
mov
mov
pop
lock
cli
test
push
sub
push
out
push
ljmp
int
dec
add
or
mov
ljmp
add
mov
add
jg
idiv
ja
stos
adc
push
xlat
seto
xor
jne
out
pop
mov
pop
xchg
or
jmp
cmpsl
mov
mov
ds
out
mov
rcll
pop
mov
scas
fwait
int3
adc
push
std
inc
xor
sbb
cmp
testb
test
fwait
cmp
inc
into
mov
jp
clc
sahf
stc
inc
lds
dec
cmpsb
pop
sbb
es
pusha
mov
das
mov
adcb
popa
adc
dec
pop
xchg
jge
js
in
adc
pop
mov
mov
fisubrl
repnz
ja
sub
mov
das
and
mov
mov
mov
push
mov
outsb
testb
add
and
and
mov
jg
adc
mov
jno
jb
dec
lds
push
sti
pop
icebp
fdivl
int
add
or
dec
fdiv
sahf
cmp
mov
add
mov
in
xor
mov
sub
stos
xchg
pop
aas
xor
popa
mov
adc
push
out
pop
jb
jnp
popf
sub
hlt
and
sti
adc
lret
orl
and
lretw
push
or
add
push
sbb
sub
cmp
mov
sub
lods
mov
pop
and
inc
pop
popf
sti
inc
int3
pop
enter
mov
xor
pop
mov
imul
push
dec
les
cmp
inc
mov
add
jo
pop
mov
xor
cltd
aaa
jecxz
mov
cmp
sbb
push
inc
mov
ljmp
lods
sub
jge
in
jno
mov
or
push
cwtl
pop
sbb
fimull
pop
lret
mov
xor
jae
inc
mov
lods
lahf
lods
in
push
out
or
xor
mov
test
enter
rcr
mov
xchg
sub
ror
movsb
addr16
mov
movsb
imul
mov
cmp
fnstsw
loopne
imul
xlat
push
or
cmp
pop
scas
leave
js
pop
rorb
int
sub
and
loope
shlb
loop
lds
shll
pop
ret
adc
idivb
repz
enter
ja
lods
test
test
jg
mov
mov
gs
test
in
adc
test
adc
cmp
enter
iret
orb
mov
sbb
pop
mov
out
test
enter
dec
jl
xchg
insb
mov
inc
lret
cmp
divb
les
push
test
xchg
lret
test
outsb
fisttpll
pop
in
mov
es
push
outsl
jp
jnp,pt
cmpsl
mov
lds
sbb
pop
jne
add
lods
pop
xchg
clc
js
push
mov
js
mov
fsts
popa
inc
xor
cmp
into
test
mov
dec
cld
idivb
xor
leave
push
lock
cld
ficoms
push
sbb
cmp
pop
shr
imul
pushf
bound
out
ss
mov
shll
sar
inc
cltd
xchg
mov
mov
adc
xchg
sbb
xor
pushf
push
jp
pop
in
mov
fisubrs
lock
or
gs
pop
out
dec
jl,pn
cwtl
sbb
imul
stos
inc
sub
pop
test
adc
mov
xchg
stc
out
inc
enter
loop
xchg
jg
sbb
cs
xlat
push
sub
int3
add
cmp
jno
push
xor
and
mov
sarl
pop
mov
dec
jmp
dec
xor
scas
cld
ds
rcll
ffreep
in
scas
fcoms
pop
and
sarb
fdivrl
ret
mov
push
pop
mov
call
das
xchg
lret
inc
mov
jo
sub
push
cmc
push
cmp
mov
in
xor
sahf
cli
shrl
push
inc
xchg
xor
push
lods
jb
cmp
mov
mov
and
xchg
cwtl
repnz
in
xorl
xor
ljmp
mov
inc
mov
pop
int
push
repz
ja
outsl
sahf
dec
sub
data16
out
lret
push
lods
lods
data16
inc
dec
dec
adc
mov
sub
mov
popa
daa
clc
ja
pop
dec
adc
or
movsl
jns
cmpsl
jg
and
mov
js
fidivrs
dec
mov
imul
sahf
pop
cmc
push
dec
fimull
and
or
fldenv
mov
lock
and
aaa
lock
mov
fldl
mov
popa
add
out
shrl
push
xchg
xchg
js
pop
imul
push
mov
sahf
popa
sbbl
rcrb
pop
inc
mov
mov
fmul
mov
mov
loop
xor
mov
popf
enterw
in
and
lock
sarb
mov
faddl
lcall
loope
or
mov
jno
les
dec
test
imulb
jmp
or
add
stos
lods
addr16
mov
call
xor
rcll
jne
dec
adc
jo
xchg
scas
jnp
idiv
outsb
aam
fwait
jbe
test
inc
xor
sarb
rorb
arpl
sub
stc
jmp
xor
mov
cmp
mov
cmpsb
pop
repz
inc
hlt
stos
sub
addr16
or
sahf
mov
cmp
pop
cmc
je
dec
sub
icebp
fisubl
adc
sbb
xchg
movsb
mov
push
cli
dec
or
sub
insb
out
gs
cld
ss
test
sub
imul
xlat
std
popa
pop
add
rcrb
popa
push
clc
mov
call
sub
sub
hlt
jmp
or
rorl
fisubl
cmp
or
insb
push
insb
je
lock
outsl
sbb
sub
sbb
lea
push
ret
movsl
mov
or
push
pop
dec
sbbl
scas
sub
xchg
xchg
aas
jo
imul
scas
dec
ss
leave
inc
les
xchg
xor
notl
mov
das
xchg
inc
scas
es
push
out
cmp
xchg
pop
sub
mov
sub
int3
inc
ljmp
je
test
and
mov
repz
fistps
mov
jl
cmpsb
xchg
mov
cmp
fisttps
pop
jbe,pn
fisubrl
sub
mov
sub
push
lods
and
fwait
rclb
jmp
ja
sbb
test
pop
push
fs
rolb
out
or
adc
sbb
ror
aas
push
mov
out
push
mov
imul
sub
add
icebp
mov
sbb
vmread
popf
leave
idivb
icebp
call
clc
and
jp
inc
xlat
push
lock
or
mov
cmpsl
ljmp
out
adc
jb
jecxz
out
pop
cmp
xchg
fnstenv
add
lret
lds
and
inc
pop
push
repnz
scas
push
jb
js
lock
movsl
cmp
xchg
and
pop
inc
lret
and
loop
inc
dec
ds
sarb
mov
xlat
subb
popf
mov
pop
push
pop
or
aas
test
or
mov
mov
out
dec
and
add
andb
or
movsl
test
push
cs
testb
jmp
outsb
nop
sbb
and
clc
push
mov
mov
and
mov
sub
adc
push
stc
repnz
repnz
imul
xchg
clc
or
mov
sub
jo
lret
and
cmp
add
iret
jo
int3
loope
jns
mov
fldcw
xchg
ss
cld
mov
fildll
cli
in
or
or
mov
insl
add
jp
sbb
sbb
shrb
jmp
jl
jae
inc
or
lcall
xor
aad
lret
mov
jle
inc
mov
test
aam
add
or
xlat
movl
mov
cli
or
jp
pop
push
nop
or
pop
shlb
cmp
dec
mov
inc
addr16
subl
imulb
mov
dec
call
in
nop
dec
lods
fildl
xor
mov
in
cmp
out
xchg
push
inc
sub
jo
fs
js
imul
cmp
in
and
in
call
or
push
jmp
decl
aam
dec
lcall
dec
aas
jns
fisubrs
xchg
pop
adc
xchg
push
loope
mov
pusha
insl
push
xlat
lock
xchg
push
sub
mov
add
cltd
in
mov
stos
fdivrs
sub
jl
inc
push
or
icebp
jp
cmpsb
sub
sub
stos
fwait
xlat
loop
scas
stos
jmp
roll
jns
cmpl
sub
insb
mov
sub
jecxz
fbstp
js
pop
mov
push
test
xor
cmp
in
xchg
xor
cmp
inc
sbb
push
daa
jbe
idivb
or
adc
arpl
ret
in
lret
inc
sbb
in
push
xchg
push
adc
test
pusha
push
lea
punpckldq
mov
lods
adc
mov
fbld
mov
fwait
sbbb
adc
push
popa
xor
inc
je
pop
mov
mov
add
sbb
ficoms
xor
adc
dec
div
mov
pop
dec
andl
mov
mov
fsubs
dec
scas
xor
lcall
mov
inc
and
sbb
or
das
subl
sub
xor
jecxz
scas
push
mov
pop
pop
andb
clc
mov
xor
sets
mov
hlt
idivb
cmpsl
xchg
dec
jmp
sub
cltd
out
js
xchg
adc
cmpsl
aas
icebp
mov
jge
in
add
js
shrb
mov
dec
fidivl
dec
fsubl
pushf
lcall
test
ficompl
mov
test
mov
ja
fisttpl
pop
sub
lods
popf
pop
test
ret
jp
push
scas
fxch
iret
in
dec
sub
xchg
sub
sahf
xor
enter
mov
mov
jmp
xor
into
ja
test
adc
push
or
aas
gs
inc
xor
bound
cli
sbb
icebp
xchg
jb
loop
out
pop
enter
mov
push
push
mov
pop
in
adc
cwtl
mov
sbb
test
lods
jbe
in
pop
push
dec
in
imul
cmp
lret
add
cwtl
adc
cmp
mov
fnsave
dec
xlat
iret
insl
mov
in
shlb
out
sbb
mov
fidivs
ljmp
dec
sub
popa
fiadds
or
cli
scas
xchg
shll
test
push
sbb
mov
addr16
fstl
or
ljmp
outsl
jnp
mov
mov
or
int3
add
cmp
adc
adc
addl
jecxz
push
clc
movsl
stos
jmp
stos
popa
mov
repnz
xorb
hlt
mov
dec
sahf
mov
sbb
lret
mov
enter
ficoms
cmpsb
or
sbb
mov
movsl
xchg
cld
int
mov
cs
dec
add
add
cmp
sub
and
dec
pop
ljmp
jmp
xlat
das
mov
mov
mov
cmp
rcr
inc
mov
ds
movsl
stos
push
leave
leave
test
enter
add
cmc
xchg
dec
scas
xchg
jbe
pop
mov
jbe
repz
arpl
fmuls
mov
inc
test
pop
loopne
push
adc
shrb
dec
sub
mov
push
jne
test
mov
mul
shlb
out
shrb
icebp
and
cmp
sbb
inc
incl
dec
push
test
lret
sub
mov
pop
test
lea
out
pop
fisttpll
sub
sub
or
cld
daa
pop
xchg
sub
out
repnz
add
xchg
cld
test
adc
mov
arpl
xor
bound
or
add
or
push
shrl
sub
jb
iret
push
jns
call
xchg
add
cmp
daa
aad
inc
int3
mov
aad
sahf
xchg
int3
fwait
cmp
out
movsb
cmpsb
push
mov
cmpsb
xchg
movsb
pop
mov
dec
stos
cwtl
into
mov
inc
loopne
cmp
mov
lock
dec
fidivrl
xchg
mov
pushf
lods
mov
jmp
cwtl
bound
xchg
pusha
or
loopne
push
test
pop
orl
aad
xchg
loopne
rcrl
in
adcl
sbb
sub
sub
scas
jo
hlt
repnz
jbe
xchg
nop
lahf
mov
and
push
lret
imul
mov
mov
lcall
ss
fmul
jecxz
dec
pop
stos
fisttps
push
mov
mov
lcall
adc
mov
jne
rol
push
fsts
pushf
adc
fwait
decb
jno
add
movl
hlt
leave
sub
xchg
adc
mov
aam
push
sbb
xchg
push
sti
pop
lea
out
iret
mov
pop
and
adc
subb
adc
add
mov
outsl
mov
xchg
xchg
inc
decl
int3
into
decb
jbe
mov
inc
mov
jnp
sub
mov
add
stc
or
jns
in
loope
movsb
pushf
popf
outsb
test
push
sub
shll
imul
mov
jnp
int3
aaa
push
stc
loopne
mov
pop
std
sbb
push
in
and
pop
mov
xor
and
arpl
mov
dec
call
dec
cli
push
xor
sub
ret
cmpsb
ds
mov
mov
fldcw
sti
adc
sub
lea
shll
adc
add
cltd
hlt
add
insb
leave
sub
adc
mov
xor
sub
mov
sbb
stos
repnz
jle
shlb
scas
pop
sbb
lcall
aas
xor
scas
or
mov
lods
sbb
pop
add
cmpsl
mov
orl
nopl
les
scas
fisttps
shlb
and
sbb
or
adc
lods
cs
inc
shll
pop
arpl
jb
dec
fdivl
ret
inc
dec
repz
andb
stc
sbb
movsl
outsl
out
sub
jbe
cmp
inc
jecxz
icebp
in
loopne
mov
mov
xchg
pushf
push
fs
ja
jns
push
mov
aas
fldt
testl
popa
fdivrl
cmp
add
push
xor
mov
add
sbb
jns
ds
lods
insb
scas
cwtl
repnz
jmp
aam
push
outsb
sbb
sub
or
sub
in
mov
xchg
in
xchg
leave
pop
mov
mov
es
mov
jge
or
xor
pop
call
pop
stos
es
ljmp
jmp
pop
outsb
inc
jb
push
fs
iret
popf
insb
cli
xchg
jno
scas
xchg
mov
shrl
shr
mov
int3
aas
ja,pn
xchg
pop
xchg
shrl
inc
xor
pop
jl
mov
jle
das
dec
fdivr
bound
pop
pop
mov
dec
pop
fisubrs
pop
inc
add
mov
pop
xor
clc
int3
dec
xor
or
cmp
arpl
adc
push
cmp
or
and
scas
cmp
ja,pt
lahf
ds
rcrb
inc
xor
xchg
add
cmpsb
in
add
out
ret
cmc
iret
ja
inc
adc
adc
pushf
mov
pop
jge
push
jmp
loopne
fsts
mov
dec
imul
test
int3
mov
pusha
stos
lahf
mov
sub
gs
and
jmp
incb
xor
add
push
aam
sub
adc
int
out
jge
mov
aam
testl
or
adc
mov
scas
pop
mov
push
jns
clc
out
add
cmpsb
insb
stos
pop
adc
pushl
and
test
dec
rsqrtps
sub
out
fdiv
jl
pop
ds
cmp
add
xor
rol
pop
sub
pusha
clc
bound
ret
pop
mov
andl
loope
dec
icebp
mov
or
test
add
jne
call
aam
sub
push
test
sub
nop
orb
out
lods
mov
fnstsw
sub
adc
inc
repnz
dec
popf
inc
dec
pop
or
and
xor
mov
inc
or
outsl
and
xchg
insb
sub
mov
int
pop
notb
hlt
loope
pop
fisubrl
mov
jg
outsb
mov
sub
imul
in
stos
fbld
pop
ss
cmp
stos
in
cmp
sahf
jle
outsl
cmp
sar
adc
adc
out
ret
lock
fcoml
clc
pop
mov
cmpsb
xor
aam
lret
xchg
loopne
pop
add
and
cwtl
push
sub
adc
adc
aam
int
sbbl
mov
test
inc
xchg
movsb
xchg
jmp
out
es
ljmp
hlt
ficoms
imull
or
mov
fistpl
sbb
loopne
out
pop
pop
cmpsb
shrl
cmp
mov
jecxz
pop
notl
scas
xchg
adc
rcl
out
and
dec
push
jecxz
mov
push
xchg
les
fisubrs
sub
scas
repz
movsb
push
das
pop
lock
dec
ljmp
sbb
leave
inc
cmc
inc
push
push
sbb
imul
jns
imul
mov
loopne
fdivrs
and
out
aas
add
repz
cmp
leave
stc
in
or
push
repz
jl
int3
mov
test
fildll
clc
inc
mov
insl
push
pop
sbb
xor
adc
inc
pop
or
fsubl
js
or
mov
ljmp
pop
das
xor
fmuls
jo
and
push
pop
push
ds
or
xorb
mov
add
je
mov
loop
jmp
fsubrl
aam
xor
sti
adc
push
jmp
jle
movsb
xor
pop
roll
xorb
cld
test
xchg
mov
push
adc
cmove
mov
mov
in
and
pop
hlt
cmp
dec
sti
ret
icebp
outsl
xchg
das
sub
stos
sbb
dec
pop
mov
nop
xor
push
shll
sub
pop
inc
inc
popa
sub
add
mov
ror
dec
mov
dec
push
stos
iret
cmp
ljmp
cmc
out
inc
jle
out
dec
mov
xor
lock
insb
and
dec
pop
lock
cs
inc
pop
xor
push
clc
mov
test
and
fs
lods
mov
xchg
stc
push
and
adc
daa
bound
mov
and
stc
imul
sub
repz
int3
jmp
jbe
int
push
ss
in
inc
inc
pushf
test
outsl
pop
rclb
dec
lret
hlt
inc
test
outsb
inc
mulb
sbbb
push
cld
adc
jge
sbb
adc
call
jbe
rclb
xor
xchg
ss
orb
sti
or
mov
into
into
xchg
push
add
push
xorl
cmp
jecxz
mov
aaa
mov
mov
xchg
aam
sbb
dec
dec
mov
hlt
jae
insb
lret
sbb
insb
in
mov
mov
aas
bound
xor
into
fwait
and
xor
stos
push
lock
push
shr
add
xlat
ljmp
aam
stos
dec
xchg
cltd
inc
dec
pop
es
jle
xor
jns
xchg
sub
pop
loopne
std
sbb
mov
xor
or
std
scas
nop
ss
push
scas
stos
icebp
mov
js
mov
jge
add
fwait
jp
shll
add
cmpb
ficompl
les
test
aas
sbb
add
das
out
push
adcb
push
gs
mov
xchg
adc
inc
jp
mov
mov
mov
into
jns
loope
adc
mov
mov
mov
push
inc
imul
and
into
rol
cs
rcrb
pusha
xor
xchg
sti
lret
pop
jno
mov
dec
jo
mov
inc
jne
aaa
mov
pop
rcrb
cmp
lcall
xchg
fs
adc
fwait
jb
shr
mov
cmpsb
pop
pop
leave
call
jnp
push
lret
jmp
or
aaa
stc
addb
hlt
and
sahf
gs
dec
rcrl
pop
sub
cmpsb
xlat
in
xor
aaa
mov
ror
pop
jae
aad
sbb
int3
sarb
xchg
adc
js
and
jmp
push
ja
cmpsb
inc
dec
adc
jg
or
jg
inc
mov
test
shll
cwtl
add
test
or
or
imul
jbe
fnsave
test
jp
or
ret
daa
adc
pop
lock
sub
mov
ret
into
mov
cmp
pop
std
cmp
lods
and
shlb
jne
jge
adc
pop
shlb
jle
arpl
es
divl
lahf
mov
sub
add
aas
xchg
xchg
in
test
cmpsb
lock
cmp
mov
pop
mov
rolb
mov
jae
jo
je
inc
enter
rorl
test
mov
adcb
add
cmp
mov
lds
push
insl
shl
test
sti
xchg
or
rcrl
movsl
cmpl
pop
fnstsw
and
lret
or
mov
notl
sahf
ljmp
int
mov
lock
xor
aad
adc
lret
cltd
xor
push
insl
outsl
fst
sbb
jnp
repnz
mov
rcrl
fnsave
test
inc
es
push
push
test
inc
adc
pop
out
mov
add
sub
js
or
and
or
xor
lods
addl
mov
xchg
push
push
pop
and
mov
jp
int3
xor
std
and
out
je
fcoms
sahf
and
xchg
pushf
ja
xchg
xor
pop
in
push
push
xchg
pusha
jmp
pop
aaa
fisttpll
andb
mov
sub
pop
push
mov
cs
lret
push
fiaddl
jne
adc
sbb
in
mov
popf
rcr
and
cmp
and
and
and
push
in
xchg
jne
pop
jne
js
mov
cmpsl
test
sbbl
loopne,pt
test
ret
test
pop
js
test
pop
mov
loopne
push
add
mov
and
xlat
push
lods
test
pop
jb
scas
jnp
push
sbb
xchg
gs
adc
and
jae
fmul
enter
inc
mov
test
out
mov
add
daa
outsl
loope
dec
inc
sahf
rolb
sbb
fisubl
pop
int3
lods
je
pop
and
dec
enter
aad
inc
ret
decb
push
xchg
ficomps
fdivr
rcr
pop
mov
ret
inc
rcrb
push
jae
sbb
xchg
xor
lcall
xchg
sbb
sbb
sbb
movsl
mov
sbb
sbb
cmovo
stos
ret
clc
cmp
cmp
xchg
imul
mov
fsubp
es
std
repnz
hlt
lods
aas
dec
andl
sar
das
cwtl
and
in
or
shl
mov
push
or
push
mov
int
ds
stc
or
loop
inc
mov
lcall
xchg
sub
or
dec
jnp
push
add
test
cmp
dec
stos
arpl
addl
dec
mov
jo
mov
mov
aad
pop
lock
jge
roll
mov
xchg
jecxz
imul
ret
or
ds
sbb
push
sbbl
data16
cld
inc
es
push
sti
add
lret
ret
inc
push
or
and
ljmp
in
rolb
or
mov
push
arpl
push
push
dec
push
repz
into
cmpl
ficoms
mov
adc
and
cmp
cmp
mov
insl
scas
and
lock
add
jmp
lret
sub
add
xlat
push
rclb
xor
or
add
repz
mov
and
jl
jecxz
sarb
mov
in
and
sbb
mov
stc
jg
push
fildl
sti
lea
repnz
rorl
push
insl
push
sub
fcomp
mov
adc
xor
jbe
rorl
iret
jbe
sub
adc
data16
inc
jle
inc
pop
leave
mov
lods
ss
aad
jae
pop
in
push
out
mov
inc
lea
ja
shl
nop
sub
add
movsl
pop
addb
loope
icebp
orl
mov
cmp
push
inc
out
mov
ss
pop
mov
cwtl
and
xchg
jno
adcl
pusha
out
cmp
stc
mov
mov
cmpsb
mov
push
mov
jno
inc
repnz
adc
mov
xchg
fdivrl
int3
outsb
inc
into
rorb
cmpsb
mov
pop
or
xor
or
repnz
and
cmc
jp
test
xor
pop
sti
mov
mov
call
inc
je
cmpsl
dec
lea
sub
dec
ret
dec
xor
pop
jo
js
stc
lods
aam
mov
out
mov
cmc
fucomi
fiadds
pop
fnsave
dec
inc
push
pop
ljmp
and
popf
ror
inc
aaa
test
lods
mov
aaa
dec
inc
cmpsl
push
push
imul
imul
add
out
adc
jg
fs
loope
out
daa
adc
out
xor
jbe
orb
lcall
int3
jge
jae
les
mov
cmpsl
jp
mov
call
lea
sbb
and
je
jns
xchg
js
mov
pop
inc
arpl
jle
xchg
or
jno
ljmp
cmp
mov
aaa
add
pop
sti
jbe
arpl
cli
cmpl
push
mov
mov
fs
xor
insb
mov
shr
cmp
inc
mov
cmpl
andl
xchg
jae
pop
pop
notb
pop
push
test
inc
arpl
cmp
xchg
push
jae
xor
enter
decb
fildll
fstps
add
dec
xchg
pusha
adc
mov
addr16
mov
xchg
dec
or
imul
sbb
ret
lods
cmp
stc
mov
sbb
adc
rcrb
stc
pop
outsl
or
mov
sbbl
pop
adc
fucomi
mov
dec
xor
add
jmp
outsb
mov
jmp
and
cmp
jge
add
add
dec
cmp
jns
cwtl
pop
cld
jle
mov
mov
adcb
inc
cmpsl
jns
xor
push
xor
xchg
rsm
mov
pop
bswap
add
aas
sbb
jno
push
inc
dec
insb
pusha
cmpl
aad
xchg
stos
test
in
fstpl
jb
je
cmp
ret
mov
dec
popf
or
clc
enter
mov
xorl
stc
loop
pop
xor
pop
les
jns
add
shl
dec
repz
aas
and
dec
mov
xor
or
cmp
out
jge
push
stos
loopne
clc
pop
mov
imul
jns
rolb
adc
or
outsl
aas
dec
cs
jl
insl
adc
cwtl
nop
push
fstl
decb
fs
push
jge
js
lds
sbb
jle
mov
fadd
dec
rcll
jno
out
cwtl
xor
xor
pmullw
jno
int
or
cmp
pusha
pop
bound
jno,pn
in
setle
inc
addb
data16
in
mov
out
pop
pusha
xchg
dec
sub
movsl
pop
test
jb
rcrl
bound
movq
cmp
jmp
or
cmp
in
in
dec
cld
sub
inc
and
shll
imul
sub
push
out
cmp
adc
shrb
jo
repz
andb
clc
fnstcw
mov
jp
inc
push
sbb
jnp
pushf
icebp
cwtl
les
jge
daa
call
fs
in
test
out
addl
pop
mov
pop
mov
pop
imul
daa
mov
xchg
cmpsb
push
xchg
push
inc
or
ljmp
orl
loope
sbbl
or
pop
mov
loope
xchg
js
dec
and
jge
cmp
jno
jle
gs
lods
sahf
sbb
je
pusha
dec
jno
jge
push
jns
mov
outsl
jmp
sub
lock
bound
and
xor
shlb
sbb
int
mov
mov
and
pushf
cmp
mov
cmp
mov
lea
rorb
adc
sbb
inc
fsubr
inc
push
cmpsl
aas
cmp
ret
mov
pop
stos
clc
cwtl
pop
js,pn
pop
sbb
ss
mov
out
jle
gs
inc
push
push
pop
pushf
mov
pop
adc
xlat
sti
outsb
push
pop
ljmp
filds
test
pop
cmpsl
lea
in
mov
daa
xor
stc
fildll
sbb
insb
ljmp
or
mov
adcl
jno
jle
leave
loop
push
jle
and
mov
cli
pop
push
hlt
mov
js
cmpsb
arpl
orl
je
jae
mov
fwait
inc
sub
jo
mov
adc
inc
mov
sub
in
repz
addr16
jl
sub
mov
sbb
mov
push
xchg
or
inc
outsl
add
inc
ret
test
cltd
dec
mov
cmpsb
arpl
jp
pop
popl
push
pop
push
adc
sub
mov
dec
cmp
dec
lret
or
std
lods
xchg
and
ljmp
push
ret
imul
mov
imul
out
lock
and
mov
add
andb
mov
movsl
sbb
call
jno
sbbl
icebp
sbb
xorl
mov
jae
inc
loop
cmpsl
ret
inc
repnz
test
push
xor
icebp
pop
popa
cmp
stc
ja
iret
stos
push
rclb
pop
insl
repz
or
push
js
mov
sarl
push
mov
dec
ud1
inc
add
mov
stc
jne
inc
dec
lcall
call
jmp
xchg
cmp
sbb
mov
inc
pop
cmp
clc
or
test
or
xchg
adc
and
ret
lahf
scas
aam
or
mov
scas
or
rcrl
pusha
test
lahf
push
fstps
add
mov
fists
lods
ljmp
outsb
std
inc
outsb
push
in
inc
jge
cmp
je
es
mov
cltd
into
inc
adc
arpl
lock
xchg
fiadds
cmovl
lock
shll
add
lock
pop
push
jae
jae
sub
movsl
aam
inc
adc
xor
jno
stos
movb
sub
and
push
sbb
mov
pop
repnz
xor
xor
and
popa
dec
fidivrs
sbb
jge
in
dec
inc
xchg
mov
sub
mov
or
aad
ret
xchg
ret
insb
insb
push
xchg
ds
fldl
dec
fst
sbbb
adc
push
mov
adc
fildll
xchg
mov
adc
sti
aas
pop
push
pop
hlt
pop
add
push
cmp
outsl
mov
pusha
out
xor
cmp
jge
bound
cltd
aad
gs
mov
movsb
add
jp
imulb
lcall
dec
mov
dec
ret
push
int3
adc
jge
inc
fninit
pop
out
or
movb
ret
sbb
sahf
mov
mov
out
push
rcl
dec
ds
inc
stc
or
iret
iret
into
mov
lret
push
lds
out
jae
testl
loop
loopne
cmp
cwtl
jle
mov
aad
rcl
jg
jg
or
outsb
pop
xorb
pushf
add
xchg
popf
sub
or
clc
inc
xor
les
ljmp
sub
cmp
pop
pop
add
in
popf
outsb
fwait
sbb
push
scas
std
sub
shrb
mov
sub
xchg
jns
dec
popf
pop
mov
mov
shll
push
rorb
popf
inc
cmp
pop
roll
imul
jo
nop
mov
ja
les
clc
lcall
das
sbb
add
push
cmc
lods
jb
jmp
mov
jns
bound
mov
cs
or
rcrb
adc
sti
dec
lds
sub
data16
mov
add
add
rclb
push
dec
sub
sbb
cmp
cmp
or
ljmp
inc
push
push
loop
cmc
cmp
pop
and
in
jbe
inc
enter
sti
lcall
pop
or
push
movsb
push
cmpsb
jbe
inc
inc
cld
cmp
iret
push
leave
aad
pop
adc
adc
jmp
sahf
int
pop
or
outsb
shll
andb
xor
push
fcoms
add
adc
fnsave
dec
pop
sub
les
test
xchg
mov
scas
aaa
push
call
lock
jg,pn
arpl
ss
cmpsl
mov
gs
xchg
cmp
stos
inc
inc
sbb
in
popa
js
sar
lahf
cmp
push
inc
adc
dec
int3
mov
mov
es
daa
fstps
call
dec
xchg
repz
xchg
and
mov
outsl
inc
push
popa
sbb
push
ja
cmc
xchg
test
scas
mov
mov
inc
into
or
test
aad
pop
addr16
ja
mov
pop
jbe
jmpw
movsl
mov
int3
and
add
push
sbb
sbb
mov
rolb
mov
sub
out
mov
jne
cmp
into
fldpi
or
insb
sub
adc
lret
js
cmp
insl
pop
pop
add
std
jns
sarl
pop
jne
lahf
jb
jge
xlat
movsb
cwtl
mov
sahf
loopne
andb
adc
mov
mov
fwait
ljmp
and
cmpsb
jne
int
into
push
addl
outsl
hlt
setno
mov
dec
scas
cmp
push
xor
int3
jge
push
loop
or
dec
cs
push
inc
sub
rorb
mov
test
mov
sbb
sub
lods
fnstcw
mov
lods
fisttpll
mov
mov
mov
pop
mov
mov
inc
das
sbb
and
mov
xchg
cmc
dec
xchg
in
ret
jmp
repz
sub
xchg
jecxz
shl
mov
push
popa
lahf
jne
daa
sbb
pushf
movsb
in
js
dec
cmp
sarl
and
enter
mov
lcall
in
xor
push
push
in
aam
pusha
jno
mov
dec
inc
test
data16
fmull
shll
vmwrite
mov
rclb
pop
std
out
daa
xchg
out
call
push
sub
leave
add
cmp
sub
call
mov
mov
mov
ds
add
jle
loop
mov
xchg
inc
test
sub
inc
scas
jg
mov
lret
sub
inc
js
jmp
cld
arpl
cmp
cmp
dec
arpl
add
pop
cmpsb
sub
stos
xorl
cwtl
mov
dec
cli
push
dec
ja
mov
add
stc
pushf
pop
cmp
cmpsb
fadds
sbb
fidivrs
mov
gs
jp
js
jecxz
icebp
add
or
dec
lea
int
dec
cwtl
jae
dec
mov
pop
add
xchg
adc
xchg
andb
mov
jo
in
bound
out
mov
fdivr
outsl
push
cli
xor
mov
lsl
inc
insl
push
push
lea
icebp
mov
mov
lea
clc
push
jmp
ret
jp
fxch
fisubs
pop
mov
mov
cmovle
or
movsl
hlt
xor
sub
loopne
lea
inc
les
cwtl
sub
lret
enter
sbb
sub
pop
pop
and
fs
cmp
xor
xlat
jmp
bound
pusha
push
jb
es
mov
xchg
xchg
sbbb
rolb
das
insl
popf
push
dec
cmc
mov
sbb
sub
jp
mov
add
sub
jecxz
neg
in
push
mov
add
fdivs
sarb
mov
jno
pop
adc
lods
out
jno
mov
and
pop
adc
pusha
clc
jo
int
jle
cmp
dec
insb
adc
jle
dec
adc
dec
pop
out
jp
inc
mov
add
push
in
cmpsl
rcrb
inc
add
mov
jmp
add
call
mov
aad
lock
push
mov
mov
in
cltd
outsb
sbb
fsts
cwtl
mov
mov
mov
rcr
mov
cltd
xchg
mov
or
xor
adc
lods
cltd
dec
test
popa
mov
xor
out
scas
mov
or
scas
fmuls
clc
out
jns
and
dec
and
dec
and
mov
cld
in
test
rorl
fucomp
pop
xchg
pop
and
or
rcrb
out
cmpsl
push
adc
xor
leave
inc
sbb
les
sbb
mov
rclb
ljmp
in
fisttpll
jne
mov
lcall
ja
xchg
das
add
movsl
cmp
fld
inc
cmp
ds
lcall
dec
clc
ds
jecxz
xchg
je
fprem1
iret
or
cld
mov
pop
pop
mov
lcall
pusha
mov
mov
xchg
push
dec
sahf
sub
cld
xchg
sbb
fdivr
or
out
or
push
lea
pushf
inc
test
fwait
mov
addr16
push
loope
sbb
dec
dec
xorl
push
lods
jae
cmp
call
sbb
insb
jns
jg
scas
scas
ss
inc
es
cmp
jbe
je
and
in
xchg
dec
hlt
mov
outsl
daa
mov
bound
jge
gs
hlt
leave
sub
test
jno
jne
popa
das
fcmovnbe
mov
pop
std
jecxz
roll
adc
pusha
lods
movsb
mov
lods
aad
aas
add
out
sub
xchg
mov
mov
inc
lret
jmp
mov
sarl
loope
mov
xchg
xchg
mov
fmuls
imull
mov
icebp
mov
mov
xor
cmpsb
xchg
inc
fnstcw
jmp
inc
jb
inc
mov
and
lret
bound
jb
lods
and
mov
pop
push
outsl
ljmp
push
sub
test
jp
push
aad
push
and
insb
mov
cmp
dec
cltd
fcompl
ret
mov
daa
sub
mov
rorl
xchg
jmp
stos
mov
mov
ret
sub
mov
push
xchg
fwait
test
lods
adc
push
imul
fimuls
js
adcb
sub
aam
mov
mov
sbb
xlat
cmpxchg
repz
ret
inc
loope
xor
jecxz
xchg
sub
sbb
loopne
jnp
add
xchg
cmp
call
adc
or
xor
and
hlt
aam
repz
mov
jl
and
lcall
lret
repz
jno
and
faddp
sbb
inc
add
test
add
insl
subl
cmp
cltd
mov
cmpsl
sbb
push
pop
lret
xor
std
js
test
and
push
call
rorl
into
pop
dec
test
cld
lret
stos
test
ficoms
test
xchg
jge
and
push
loope
or
inc
mov
mov
stc
enter
pusha
imul
adc
cs
cld
cmpl
cwtl
and
jecxz
mov
fdivrs
or
sbb
pop
rcrb
xchg
decb
out
and
and
lcall
sahf
cltd
repnz
cmp
or
sub
insb
sbb
jno
aaa
pop
mov
mov
or
int
xchg
mov
dec
sbb
cli
mov
icebp
mov
jne
inc
cmp
mov
xor
mov
add
jnp
sti
lods
test
cmp
sub
rorb
sub
rorb
push
fmul
dec
gs
pop
sbb
push
mov
jne
and
xlat
mov
inc
pop
ficomps
mov
data16
sub
leave
inc
xlat
dec
dec
mov
shl
fdivl
inc
pop
cs
jb
aad
and
sub
shlb
push
iret
dec
or
in
repz
cmp
push
dec
lret
test
std
das
cwtl
pop
inc
mov
mov
outsb
sub
fdivl
out
mov
mov
test
je
outsl
cwtl
daa
mov
out
sti
xchg
out
mov
cmp
xchg
push
push
scas
hlt
mov
roll
mov
dec
push
add
sahf
loop
push
mov
push
add
dec
mov
adc
mov
push
fs
jge
pop
lret
clc
jnp
adc
xlat
cmp
push
pop
add
ljmp
dec
and
movsb
imul
lds
mov
popf
or
mov
push
sub
loopne
xor
stos
xor
or
icebp
mov
sbb
fs
jbe
call
or
call
aam
sbb
cmp
lods
mov
xlat
xchg
std
xchg
or
fldcw
negb
leave
or
cmp
dec
xor
xor
jb
sti
mov
mov
pop
or
cmp
sbb
inc
roll
jne
mov
xchg
jl
inc
jno
and
out
mov
aam
sarb
andb
roll
sbb
leave
mov
pushf
mov
xor
std
rcl
mov
push
rcrl
sbb
sub
fsubs
test
adc
and
insb
in
pop
sbbb
mov
notl
push
lret
cmp
fstl
jecxz
loope
mov
push
outsb
ret
dec
mov
jnp
cs
hlt
jno
adc
mov
lods
pop
pop
rorl
sar
hlt
out
cs
add
push
or
ljmp
add
data16
rorl
cltd
sub
cld
std
adc
out
or
rcl
and
addr16
sbb
lcall
add
xchg
aaa
xchg
mov
mov
lds
sub
in
pop
xor
in
outsl
or
dec
in
cli
out
pop
imul
in
addl
push
xchg
jae
xchg
inc
cmp
sbb
pop
add
test
jns
cmp
pop
cmp
pop
mov
ljmp
cwtl
out
sbb
ds
ds
clc
jo
pop
push
mov
gs
sub
test
dec
dec
mov
mov
push
js,pt
repnz
sub
push
dec
sub
add
pop
out
mov
pop
jmp
mov
scas
adc
das
rclb
mov
loope
or
add
out
test
or
and
test
adc
jne
fistpll
push
divl
data16
lcall
dec
call
pop
pop
stc
cli
into
imul
dec
je
jb
inc
into
loopne
sub
jns
insb
xchg
into
mov
add
orb
mov
push
insl
mov
stos
xchg
sarb
jae
and
sbb
fstpt
mov
dec
iret
jmp
jns
sub
sti
enter
jg
lods
mov
fsubrl
add
aaa
rcl
or
cmpsl
mov
sub
xchg
mov
dec
mov
cmp
inc
lds
call
jno
dec
inc
and
ds
lret
icebp
dec
negb
das
and
pop
mov
and
inc
cmp
mov
inc
aas
cmp
or
dec
adc
ds
fcomp
cld
pop
jne
cmc
xchg
mov
or
sbbb
cmpsl
sbb
or
cmp
mov
movsl
adc
xchg
scas
and
xor
cmp
xor
clc
nop
rclb
pusha
mov
clc
xchg
pop
mov
rclb
push
or
fldt
shll
test
pop
jno
gs
adc
je
dec
and
lret
addl
jns
int3
push
jg
dec
sub
repnz
inc
rcl
or
enter
push
fptan
inc
and
add
pop
xchg
push
mov
push
inc
jmp
adc
ss
jbe
lret
xlat
sti
shlb
and
push
cmpsb
jnp
fistpll
js
xor
mov
mov
push
sbb
stos
or
dec
scas
repz
xor
clc
ja
lret
jl
fmull
clc
push
mov
icebp
cmovo
out
and
and
add
mov
adc
mov
and
mov
xor
mov
mov
mov
les
jnp
xchg
mov
or
inc
repnz
inc
sub
shlb
into
fbld
mov
pop
int
rorl
fcomp
or
sbb
dec
sub
inc
sub
in
cmp
shlb
fdivrl
cld
scas
inc
fnstenv
xchg
xchg
ljmp
push
int
mov
pop
push
test
push
repnz
idivb
mov
call
xchg
cs
add
xchg
rolb
jae
inc
push
cmpsl
std
inc
jmp
fbstp
lret
xor
mov
pushf
mov
mov
and
cmpl
xchg
test
sti
shl
xor
lret
mov
add
mov
outsl
xchg
jmp
dec
jmp
in
mov
pop
and
hlt
dec
adc
pop
fistps
adc
pushf
xorb
xchg
mov
mov
ds
xchg
loopne
les
sar
mov
or
stos
xlat
pop
xchg
fst
mov
subb
sub
out
popf
xlat
inc
aaa
xchg
jbe
jnp
jge
and
lock
pop
xchg
into
daa
push
push
fnstsw
icebp
cmp
jb
inc
lahf
repz
lock
jmp
push
lods
les
cli
cmc
add
aam
das
sub
add
lods
pusha
shl
add
mov
out
aad
outsl
loope
pop
ficomps
mov
int3
pushf
test
gs
mov
xchg
shr
mov
inc
inc
mov
adc
rcll
pop
loopne
daa
in
add
jmp
mov
and
push
mov
inc
fldl
jne
jb
rorb
popa
jo
cmc
adc
sbb
sub
int
pop
cltd
sub
push
data16
nop
dec
mov
cld
xor
adc
jbe
mov
gs
ret
inc
dec
pushf
dec
mov
add
push
cmp
insb
mov
inc
arpl
cwtl
lcall
clc
lds
mov
fists
or
fnstenv
adc
adc
sub
adc
add
or
cmp
sbb
mov
mov
les
mov
xor
insl
xor
mov
mov
aas
add
push
push
jne
pop
cmp
pop
fnstcw
mov
jnp
out
or
and
ss
cld
ret
pop
cwtl
popf
jg
rcrb
fstpt
xchg
mov
repnz
sub
ret
imul
adc
mov
add
push
out
push
movsb
lods
imul
jns
fsub
xchg
dec
sahf
adc
add
inc
setns
fcoms
stos
and
out
fucomi
scas
rolb
sub
and
and
lea
dec
scas
sbb
push
out
js
je
insb
in
testl
jle
and
mov
push
sbb
daa
lods
mov
adc
inc
rorb
xchg
sub
pusha
out
jge
xchg
adc
test
pop
jno
stos
push
cmp
mov
lock
out
pop
adc
clc
cmp
sarb
pushf
adc
xor
mov
and
cmp
sbb
pop
pop
push
mov
or
addb
jae
pop
adc
pop
or
das
adc
xor
dec
jb
jle
pop
cmp
iret
cmpsl
dec
adc
xchg
mov
in
fs
mov
shl
std
or
cmpsb
scas
fisubrs
cltd
and
insl
out
rclb
in
pop
repnz
cmp
xchg
out
lods
mov
push
in
fcoml
shll
pop
mov
call
dec
fadd
lods
and
xchg
movsb
aam
ss
or
repnz
dec
fidivl
in
dec
jno
test
incl
mov
cmp
jmp
inc
mov
sub
jne
int3
enter
sub
sub
data16
in
pop
mov
xchg
or
popf
or
push
mov
shrl
cmc
fdivrl
dec
shll
pop
or
jo
mov
cs
hlt
sbb
mov
fstpl
sub
in
or
pushf
xor
in
sub
mov
cmp
mov
push
push
ljmp
sub
fisttpl
pop
aaa
incb
les
jo
pop
add
in
in
je
jnp
pop
inc
pop
mov
adc
sti
xor
pusha
xchg
je
jae
das
call
pop
loop
adc
pop
sbb
clc
dec
ljmp
and
movsl
lret
cmp
pushf
mov
xchg
add
sub
imulb
lcall
pop
cmpsb
push
icebp
cwtl
addr16
and
mov
repz
mov
add
sti
inc
dec
mov
push
xchg
sub
aad
test
xor
jmp
sub
pop
lods
imul
jg
push
popl
rcll
fadds
incl
jmp
add
imul
shll
push
xlat
test
out
out
test
cld
pop
mov
dec
push
inc
popf
cmp
jp
pop
leave
push
push
test
dec
dec
mov
dec
dec
inc
push
ret
adc
dec
mov
fs
jmp
mov
and
dec
in
inc
jge
or
cmp
mov
push
sbb
pop
decb
insb
add
mov
pushf
out
inc
mov
test
jl
ds
outsb
pop
addl
jge
sub
nop
pop
jp
mov
mov
fdivs
aas
out
popa
dec
xchg
pop
mov
mov
add
xchg
aad
je
jge
pop
pop
jbe
or
push
movsl
mov
imul
pop
and
dec
mov
mov
mov
or
call
inc
xlat
insl
jecxz
loop
sbb
mov
add
mov
xchg
push
xlat
inc
mov
hlt
outsl
push
subb
pop
mov
ds
mov
push
clc
es
sub
outsl
dec
jnp
mov
in
adc
mov
xor
dec
sbb
mov
lods
in
je
sti
sbb
push
xchg
ret
dec
xchg
mov
into
xor
mov
fisubl
stc
push
sbb
or
jo
cmpsb
mov
cmp
pop
in
lcall
imul
mov
pop
push
push
fwait
dec
jmp
jmp
into
sbb
in
add
mov
or
jle
lds
in
std
mov
mov
dec
je
lods
jmp
inc
int3
popf
cmp
mov
loopne
xchg
mov
inc
js
cmpsl
sti
repnz
xchg
sbb
and
push
mov
rorb
jno
sub
jg
aad
insb
xchg
rolb
loopne
pushf
add
fcoml
popa
dec
aaa
xor
cmp
icebp
push
mov
dec
aaa
xchg
push
jnp
lcall
inc
and
mov
jb
in
push
imul
jb,pn
iret
lret
or
mov
fnsave
or
dec
nop
inc
push
mov
cmp
jmp
addb
dec
push
or
daa
mov
sti
mov
xchg
jmp
shr
xlat
aad
adc
jmp
adc
cmp
cmp
pop
pop
sbb
icebp
mov
sub
and
and
fwait
cmpsl
push
fnstenv
cmpsb
fisttps
xchg
fisubrl
test
ss
data16
cltd
pop
inc
dec
dec
cmc
cmpsl
jo
aaa
add
mov
das
and
inc
outsb
js
fs
leave
fisttpll
in
xchg
inc
insl
add
cmp
adc
iretw
int
xor
xchg
cmp
fnstenv
jbe
icebp
lea
nop
lret
pop
mov
push
inc
mov
xlat
imul
jmp
mov
push
jae
push
fistps
pop
in
out
shlb
std
push
dec
scas
test
orb
push
cmp
icebp
cmp
adc
ss
lds
pop
and
lcall
xlat
js
cmpsb
aad
cli
bound
mov
jmp
imul
adc
loope
dec
enter
pop
addr16
pop
loop
incb
dec
stos
xchg
inc
out
and
mov
lcall
aas
mov
sbb
cmpsl
dec
shr
pop
data16
mov
adc
inc
sub
pop
sub
test
dec
dec
mov
fxch
aaa
leave
mov
push
inc
and
lods
lcall
mov
call
ret
js
adc
xor
out
mov
jecxz
inc
push
dec
les
inc
scas
pushf
iret
jp
mov
push
dec
xor
sti
and
test
loope
push
dec
lret
rcr
cmc
incb
mov
inc
roll
dec
mov
je
and
lods
pop
pushf
push
xchg
and
lds
popf
adc
sbb
xor
push
sbb
add
pop
test
pop
jb
adc
mov
shlb
jg
lods
dec
adc
cmc
adc
mov
ss
insb
loopne
stc
push
loopne
push
movsb
dec
cmpsb
fisubrs
lock
xor
int3
push
adc
jp
adc
pop
or
and
jmp
adc
loop
iret
pop
inc
adc
push
inc
loopne
nop
int
daa
lods
mov
daa
daa
mov
xor
std
mulb
out
xorl
mov
fcoml
push
stos
add
jo
int3
aas
shrl
int3
aam
and
xlat
test
xor
xchg
adc
sub
das
inc
lods
into
test
cmp
and
sti
mov
aas
js
jnp
jmp
xchg
jl
mov
xchg
pop
inc
xchg
ja
mov
jae
cmpsl
lods
jecxz
pop
sub
cmp
or
rorb
popf
sbb
jle
outsl
pop
and
cmpsb
xor
mov
add
fs
cmc
push
and
jns
ds
fimuls
mov
dec
dec
jecxz
insb
mov
pop
jns
pop
and
xchg
inc
adc
shlb
xor
xchg
test
addr16
repnz
mov
into
mov
push
out
jl
xor
sbb
inc
inc
push
out
fisttps
pop
xorl
mov
sti
mov
pop
ret
mov
add
push
and
mov
out
in
mov
aam
aam
les
imul
popa
or
je
ret
adc
call
or
fdecstp
and
jge
js
cmpsb
jmp
mov
sub
shll
inc
push
pop
mov
mov
cmp
push
inc
jmp
repz
stos
push
movd
adc
inc
or
ss
push
inc
cmp
mov
movsb
dec
lods
xor
cwtl
push
jae
mov
and
xchg
fisttpl
movsb
test
ljmp
dec
scas
and
addr16
mov
stos
adc
xchg
dec
mov
dec
sbb
pop
enter
loope
mov
jecxz
add
mov
xor
rcrl
scas
push
push
adc
push
sbbb
fiadds
push
pop
pop
and
in
or
xor
xchg
mov
xorb
fcos
test
lcall
loope
lea
stc
push
or
movsb
dec
dec
push
shl
mov
pushf
aad
adc
icebp
fwait
hlt
xchg
fidivs
sub
aad
jae
push
ficoms
ffreep
out
out
jmp
pop
cmp
jne
jb
dec
aaa
push
xor
mov
rorb
lret
sbb
mov
fldenv
out
rolb
cmpsl
and
enter
scas
int3
push
call
dec
mulb
adc
mov
push
sub
add
push
mov
cmp
pminsw
pop
pop
fiaddl
in
mov
jo
in
xchg
xor
dec
mov
push
jae
cmp
xlat
pop
mov
inc
cmp
in
inc
push
fstpt
xor
mov
dec
shl
inc
add
out
add
mov
arpl
push
and
lock
push
inc
add
cmp
jle
aad
add
push
mov
cwtl
mov
sub
cmp
and
push
fcomps
and
xor
inc
fcmovb
mov
loop
jle
push
and
and
pop
in
jno
pop
xchg
call
mov
add
aam
inc
sarb
stos
sti
imul
xor
push
mov
in
enter
cmp
mov
push
xor
mov
lret
adc
mov
mov
aas
lahf
and
imul
in
dec
xchg
mov
fldt
repnz
push
sti
cmp
outsb
xor
mov
jno
aaa
insl
xorl
lods
call
or
mov
pop
aam
xchg
test
adc
movsb
mov
pop
nop
movsb
xlat
test
push
pop
jge
cld
push
lahf
aas
pop
dec
repz
in
or
mov
adcb
mov
adc
ret
dec
mov
cmp
jne
pop
loopne
mov
rcll
inc
jo
lahf
sti
flds
imul
xor
and
fcomps
mov
nop
pusha
ds
mov
lcall
pop
clc
out
je
or
push
add
es
pop
push
dec
push
test
mov
and
dec
into
inc
add
adc
pop
outsl
mov
inc
div
cmp
leave
and
cmp
mov
outsl
xor
fistl
rcrb
mov
jp
aas
pop
sti
inc
add
mov
push
xor
inc
in
xor
xchg
inc
jg
popa
pop
cltd
nop
inc
test
gs
or
or
sahf
xchg
aad
iret
mov
mov
aad
cmp
mov
add
inc
shl
adc
sbb
std
lahf
sti
js
xchg
add
cmp
sub
in
rcr
movsl
outsb
out
jg
clc
cmp
scas
mov
dec
mov
mov
imul
lea
out
pop
pop
rolb
in
in
inc
stos
cli
add
stc
iret
or
scas
je
cmc
addl
das
add
aaa
mov
scas
sahf
adcb
mov
adc
aas
rolb
add
icebp
idiv
push
imul
dec
mov
xorl
sarb
icebp
enter
mov
add
sbb
pop
add
push
loop
or
mov
inc
push
in
cltd
dec
xlat
out
leave
push
out
ss
das
mov
xor
shl
stos
out
mov
dec
imul
jmp
xchg
stos
insl
paddq
pop
je
mov
aad
repnz
insl
ljmp
out
aas
sbb
mov
pop
nop
xchg
ret
xchg
mov
add
inc
lock
mov
sti
xchg
xchg
outsl
test
push
and
sbb
mov
or
les
mov
fnstcw
in
dec
lret
iret
lds
incb
mov
mov
movsl
out
dec
fldenv
sub
push
es
pop
and
cmp
out
rclb
lret
adc
lcall
inc
rclb
repnz
out
enter
add
xchg
dec
call
add
inc
adc
shlb
fisubl
decb
inc
sti
jg
outsb
cli
jl
cli
andb
in
push
pop
dec
divb
jb
test
mov
and
test
test
sub
fmuls
cltd
dec
jno
fsubs
clc
lods
xor
pop
out
xlat
fidivrl
test
int
xor
jecxz
imul
call
add
dec
mov
mov
lahf
mov
fbld
out
xchg
lods
rcrb
popf
and
outsl
jbe,pt
lods
fdivrl
lock
call
hlt
in
mov
ss
mov
jbe
in
lahf
loop
enter
mov
jo
les
jmp
push
pushf
jmp
push
jb
sti
data16
inc
icebp
mov
and
xchg
mov
into
dec
jp
loopne
insb
push
mov
cmpsl
mov
aam
leave
pop
sbb
sub
fadds
fists
loop
mov
mov
dec
ret
sbb
sti
mov
xchg
out
jp
lods
sbb
sbbl
repz
mov
outsb
data16
push
mov
xchg
adc
mov
fs
sub
sub
push
aas
stos
pop
add
pop
ds
mov
adc
xchg
lock
sarl
xor
sahf
mov
cltd
mov
fwait
popf
adc
pop
dec
sahf
cmp
mov
xchg
add
cmp
out
sub
adc
movsb
lret
imul
fs
or
sbb
or
xchg
pop
pop
fmull
and
and
sub
decl
lgs
xor
mov
cwtl
mov
shr
lock
push
adcb
pop
loop
pushf
xor
mov
cmpsl
les
xor
inc
or
mov
push
mov
push
push
dec
or
jecxz
js
cltd
ja
scas
das
mov
ds
adc
xchg
out
out
jmp
movb
sbb
xor
into
inc
mov
enter
inc
cmc
ljmp
pop
outsb
sbb
imul
dec
pop
fcmovnbe
fsubl
in
arpl
adc
push
push
mov
in
jp
xor
and
out
out
jno
into
stos
jo
mov
inc
lcall
push
jmp
push
inc
or
call
negl
mov
inc
outsb
popa
mov
xor
gs
xor
add
shl
out
adc
loop
insl
xlat
bound
lea
fldcw
scas
pop
mov
out
in
clc
mov
xlat
call
ror
imul
imul
lcall
in
inc
aas
or
cmp
jo
mov
cmp
movsl
inc
aas
or
imul
test
push
push
outsb
and
cmp
dec
ds
lods
int3
das
fidivrs
aad
sub
push
mov
test
movsb
cmp
cmpsl
outsb
jnp
jbe
iret
das
jmp
ja
in
mov
push
out
mov
call
stos
and
aaa
pusha
in
int3
or
or
dec
adc
mov
push
lret
or
cmp
jb
and
sbb
cmp
jbe
out
pop
inc
pusha
adcl
lock
jp
es
xor
sub
repz
xor
popa
push
movsb
fistps
push
cmp
addb
not
in
enter
ret
daa
inc
cmp
inc
aas
add
leave
and
sarb
aaa
cmp
leave
ret
xchg
pop
jge
sbb
sbb
pop
negl
and
xlat
xor
jno
inc
push
dec
jmp
jmp
sbb
lcall
mov
fisttpl
cltd
subl
xor
das
dec
and
repnz
and
test
sub
pop
divb
push
mov
mov
movsl
repz
fdivrl
outsl
js
inc
shrb
pop
test
mov
sub
add
test
iret
sub
pop
pop
leave
outsl
mov
jnp
push
popf
pop
outsl
jge
cmpsl
adc
fwait
sbb
aam
dec
insl
rcl
inc
lret
daa
imul
hlt
xchg
mov
shl
data16
rolb
inc
xor
mov
adc
cmpsb
or
ja
xchg
push
addr16
mov
sbb
fsts
mov
enter
fadd
xchg
nop
cmc
sub
addr16
out
iret
cmp
and
xchg
adc
pop
daa
jnp
sub
and
insb
inc
cmpsl
and
fimuls
stos
cmp
int
dec
hlt
dec
mov
cmp
jb
dec
loope
xchg
inc
xor
jecxz
loopne
arpl
movb
pop
mov
rorl
or
arpl
and
fcoms
push
and
xchg
push
popf
outsb
mov
stos
mov
and
test
ficomps
xorl
and
add
adc
stos
mov
pop
adc
or
and
and
jnp
inc
in
test
int
lea
sbb
mov
scas
and
mov
sarl
jl
jp
fcoml
fistpll
inc
xchg
cmc
adc
movsb
inc
clc
sub
mov
lods
sub
mov
imul
in
or
and
pop
loopne
pop
cld
aas
mov
je
rorl
push
jp
fs
push
add
adc
sysexit
std
sub
andl
ljmp
xchg
ds
xor
enter
pop
dec
mov
or
jl
or
dec
leave
arpl
testb
fstpl
mov
loope
sub
jmp
daa
insl
add
cld
xchg
add
stos
in
jnp
es
xchg
test
lahf
in
xchg
inc
inc
add
cld
push
rolb
cmpsb
add
jnp
test
xlat
dec
add
rclb
icebp
xchg
rclb
sbbb
mov
xchg
mov
mov
pop
lds
aas
sahf
fistl
stc
jb
pop
mov
push
push
fucomp
xchg
pop
xorb
xchg
insl
shll
add
push
addr16
jns
pusha
sbb
out
and
jb
lods
in
cld
pop
mov
jns
inc
rcrb
mov
add
xchg
xor
sti
es
inc
pop
jno
neg
imul
inc
xchg
mov
mov
and
lock
pop
into
sub
call
lock
std
sarb
or
jnp
fcompl
inc
out
insb
jb
xor
adc
sbb
cmp
js
test
insl
test
mov
push
add
push
pop
lahf
jge
sti
out
sub
add
leave
addr16
cmp
add
sbb
test
das
es
loope
nop
xchg
loop
push
test
popf
icebp
scas
loop
and
rcll
cmp
sub
out
gs
push
adc
sub
ljmp
mov
gs
jb
xchg
xlat
inc
stos
xor
push
fsubrl
sbb
in
inc
push
sub
sub
out
fidivs
push
push
stos
dec
stc
lret
pop
leave
ljmp
adc
inc
and
lahf
push
and
and
cld
decb
sarb
jg
enter
mov
icebp
push
pop
js
cld
push
sub
lock
xchg
shlb
adc
push
mov
push
or
and
adc
repz
ljmp
fimuls
in
jb
sbb
adc
adc
jmp
xchg
mov
push
cmpsb
sti
aaa
jge
xor
fimull
jmp
pop
sarl
pop
enter
in
cli
cli
mov
pop
dec
mov
mov
subl
xor
jne
pop
ss
mov
nop
pushf
out
or
jl
cmp
lcall
test
pop
add
sub
adc
call
out
cmp
jge
nop
fldt
sub
test
and
cs
jae
fs
ret
xor
movsl
xchg
sbb
outsb
ret
xor
in
pop
iret
sti
hlt
lret
pushf
clc
lods
pop
jp
test
insb
outsb
dec
fsubrl
mov
rcrl
xchg
mov
js
xchg
in
inc
cmp
ja
mov
ds
xchg
push
mov
testb
xlat
adc
sub
add
sub
test
xorl
mov
addr16
dec
imul
sbb
push
or
and
lret
ja
xchg
not
push
ljmp
les
and
mov
out
das
cmp
dec
pop
hlt
rol
ja
xchg
data16
cmp
ds
pop
inc
add
cmpsb
xor
adc
and
cmp
int3
sub
sbb
adc
push
out
pop
shll
sub
adcb
xchg
dec
outsb
das
loopne
cmpsb
mov
inc
cmp
cmp
je
sbb
jmp
test
popf
adcl
cmpsb
mov
cmp
leave
test
aaa
adc
dec
shl
repz
fsts
or
push
fs
adc
pop
jl
jl
test
aaa
jp
add
leave
push
xchg
sbb
cs
mov
adc
or
cltd
push
jne
cmp
gs
dec
mov
insl
inc
cltd
movsl
jbe
sub
push
insb
imul
notb
fucom
mov
enter
dec
dec
dec
inc
movsb
pop
jg
cmc
or
fsubs
je
pop
cmpl
movsb
aam
pop
cld
pop
leave
adc
movzwl
pop
ret
dec
mov
jmp
sub
dec
jl
aad
fwait
mov
adc
and
mov
xor
lcall
jg
xchg
call
jmp
lcall
pop
lahf
repz
das
pop
rclb
int3
sbb
sbb
movsl
mov
les
xchg
mov
jns
call
xor
movsl
pop
pusha
sbb
xor
or
arpl
psubw
pop
and
xchg
sub
jge
int3
jl
rcrb
mov
pusha
pop
dec
ret
cmpsl
scas
std
inc
outsl
pop
lret
es
test
outsl
inc
mov
repz
cmp
arpl
popf
xchg
ret
clc
fwait
std
mov
add
push
repnz
shll
and
inc
inc
cmp
js
sub
inc
inc
xchg
or
arpl
push
jne
fldcw
test
adc
xlat
pop
pop
xchg
mov
popa
or
pop
in
push
je
aas
jle
insb
sbb
dec
sbb
inc
fbld
adc
push
mov
in
popa
cmp
lcall
lods
in
lods
clc
mov
or
adc
mov
mov
fdiv
leave
sbb
inc
into
bound
pushf
das
xchg
and
aad
jge
sahf
fdivrl
mov
pop
sarl
mov
cwtl
xor
adc
dec
imul
sub
jp
mov
cli
pop
mov
movsb
cmpsb
int3
mov
das
xor
xchg
xchg
pop
test
mov
and
insl
push
aam
movb
add
es
fs
adc
out
out
cmp
xchg
or
jg
mov
sarl
aaa
mov
fdivs
xchg
rorl
jnp
push
sahf
lret
mov
cmp
sub
pop
sti
call
adc
cmpb
sbb
cmpsb
add
mov
aas
pop
push
test
aam
xchg
or
jecxz
pop
push
sub
arpl
push
xor
mov
cmpsl
sub
pop
sbb
ret
mov
les
int3
orl
pop
leave
dec
dec
loop
cwtl
sub
enter
fmuls
cmpsb
adc
repz
cmp
out
push
mov
fdivp
push
dec
jb
push
mov
das
aam
mov
mov
mov
inc
stc
or
dec
daa
add
pop
cmp
out
add
fs
xchg
stos
stos
shl
and
inc
dec
mov
xchg
ja
mov
jl
pop
addr16
cmpsb
adc
fisubs
fdivrs
jns
enter
mov
cmp
insb
mov
stos
inc
shlb
sbb
out
lods
int
push
cltd
ret
cmp
sub
dec
aam
sub
xlat
cli
mov
shl
test
xor
sarl
push
and
xchg
pop
ljmp
sbb
sub
daa
fs
or
adc
adc
mov
sbb
jmp
xor
push
mov
dec
sbb
adc
and
inc
sbb
ds
mov
outsb
lods
xchg
cmp
xchg
outsb
jecxz
ljmp
xchg
rolb
loopne
inc
mov
jno
lret
mov
jl
push
stc
loopne
rorl
push
push
enter
sbb
dec
mov
add
pop
jns
sbb
sub
popf
adc
mov
loopne
push
sub
adc
leave
movsl
imul
cmp
inc
inc
cmp
scas
arpl
lods
clc
aad
cmc
fwait
mov
arpl
mov
cs
insl
das
fisubs
xor
push
popf
sub
push
dec
jecxz
jnp
arpl
fdivl
loopne
std
test
or
cmc
std
mull
pop
inc
bound
ficoml
mov
cmp
popf
or
mov
dec
fdivrl
jl
jns
jbe
pavgb
xor
test
popf
add
xorl
jp
adc
pop
sbb
adc
mov
dec
jns
jmp
fsubs
push
mov
lahf
cmp
stc
shrl
jl
inc
movsb
test
rol
test
testl
jbe
ss
fiadds
hlt
lods
aaa
ror
mov
xor
out
int3
bound
mov
mov
je
mov
test
notl
cmc
les
mov
mov
sbb
pop
arpl
xor
imul
pop
test
out
or
test
push
push
cmp
dec
stos
sub
movsl
jmp
mov
mov
and
adc
outsl
mov
dec
sbb
xor
fwait
iret
jmp
fisttpl
xchg
fisubl
and
jp
push
mov
insb
xor
jmp
shrl
aam
xor
xor
fdivrs
in
std
or
xor
inc
jle
add
mov
fiaddl
divb
cmpb
jmpw
sbb
popa
add
adcb
nop
push
push
loop
insb
loope
xchg
pushf
shl
and
mov
push
jl
lods
mov
out
aas
jbe
shll
mov
xor
subl
xor
nop
cld
or
shlb
cmp
mov
daa
rcrl
out
aaa
les
and
sti
mov
push
aad
and
daa
mov
les
imul
and
xchg
push
js
fcompl
add
cld
mov
out
mov
out
inc
or
in
stos
outsb
adc
dec
std
mov
sbb
loop
mov
test
inc
jecxz
jne
mov
sbb
jmp
loop
fisubl
xchg
push
scas
xchg
push
mov
popf
addl
test
pop
cmp
cld
adc
test
test
pop
leave
imul
nop
je
lds
xchg
push
ss
mov
and
pushf
mov
jne
clc
sbb
sbbl
mov
mov
jmp
xchg
ss
push
push
js
dec
mov
fisttpl
lods
test
in
dec
inc
test
pop
arpl
cmp
xchg
dec
mov
leave
mov
orl
add
and
cmp
mov
xor
jo
cs
lods
cmp
xchg
cmp
ret
mov
in
ret
xchg
shlb
in
mov
int3
pop
mov
mov
pop
test
sahf
inc
sar
fnstsw
sub
sub
jl
scas
add
std
fs
cmp
fcom
jmp
add
adc
push
sbb
sbb
xchg
xor
mov
mov
das
fs
sub
add
jg
add
test
mov
fs
mov
mov
out
and
stc
jnp
jp
lret
sbb
movsb
adc
data16
cmc
jo
shlb
push
and
out
cs
jp
add
testb
sub
jo
ret
jle
pop
das
inc
fmull
xlat
scas
lcall
arpl
pop
repz
xchg
test
xlat
xchg
sub
sub
sub
in
test
aam
int3
jmp
fyl2xp1
enter
scas
sub
sarl
pop
fstp
sub
fistps
and
xchg
es
int
lret
add
cs
and
push
dec
xor
dec
stos
jb
mov
out
mov
sub
dec
sbb
inc
aaa
mov
push
ljmp
arpl
mov
sahf
inc
ss
scas
fwait
push
nop
sub
sbbl
pop
cwtl
into
std
jecxz
in
sbb
mov
adc
ja
or
in
cmp
aaa
aaa
aam
cmpsb
xchg
lahf
pop
jecxz
imul
test
imul
xchg
xor
jb
cmp
ljmp
jns
jmp
or
xor
loop
sbb
fsubl
aaa
imul
fmuls
sub
pop
aam
lds
jl
imul
mov
sub
sub
je
jno
leave
das
inc
or
and
les
or
xchg
mov
or
icebp
mov
into
mov
mov
pop
pop
cli
cli
pushf
jo
sbb
xchg
das
add
fmuls
sbb
cmpsb
aam
cmc
sub
mov
std
decl
bound
xchg
scas
idivb
add
xor
add
jge
repnz
jnp
xchg
sub
int
mov
mov
inc
popa
sbb
mov
pushf
std
mov
inc
loope
inc
clc
jg
test
jp
push
test
xor
out
test
pop
cmp
lods
mov
dec
daa
inc
das
xchg
call
or
lea
shll
mov
popa
jl
imul
inc
mov
adc
cmp
insl
fs
mov
mov
loope
mov
arpl
jmp
arpl
mov
int3
fldl
xchg
rolb
leave
sub
jo
es
inc
ss
bound
test
push
or
xor
addl
add
fcompl
push
mov
cld
fnstenv
lock
jg
out
das
jne
int
sub
cmpsb
push
mov
sbb
mov
mov
inc
aaa
sbb
cwtl
dec
fstps
sbb
add
test
or
shll
mov
mov
push
enter
ret
notl
dec
and
flds
dec
mov
xlat
sbb
pushf
jmp
daa
imul
insl
lahf
mov
shrb
lahf
add
enter
addr16
insl
mov
aad
mov
sbb
out
or
push
mov
cmp
mov
div
jno
or
leave
cmc
add
mov
test
orl
popf
sbb
loop
xchg
lds
fimuls
gs
and
aaa
push
std
ret
jno
out
lea
aaa
lret
xor
mov
xchg
leave
sti
mov
out
sbb
loope
loopne
cmpsb
testl
das
jne
stos
hlt
or
bound
subb
adcl
xor
add
std
fwait
mov
pop
scas
out
ret
dec
not
bound
fmull
dec
mov
icebp
push
sub
sbb
xorb
xor
daa
mov
jo
pop
cmp
loopne
enter
es
and
pop
push
call
ss
mov
das
icebp
jb
sub
out
movsl
mov
or
inc
mov
int3
xchg
push
xlat
loopne
inc
lds
cld
push
jg
loop
xlat
das
push
inc
test
or
mov
mov
sbb
adc
add
bswap
addr16
and
mov
nop
push
sub
jbe
mov
cld
ret
add
ss
jb
aam
pop
sbb
int
ja
sti
pop
sahf
sub
aaa
mov
in
or
icebp
push
mov
dec
sti
xor
sbb
and
or
dec
stc
cmp
sub
mov
rclb
shll
add
xor
mov
out
mov
or
jb
popf
cltd
inc
xor
xor
mov
sarl
orl
xorl
xor
mov
cmp
notl
mov
leave
sub
scas
add
mov
and
xchg
inc
pop
lahf
push
lds
push
rcrb
inc
cmp
jne
movsl
iret
cmpsb
cmp
in
push
jle
outsl
je
or
pop
lock
dec
jp
cmpsb
out
inc
enter
aas
scas
sarl
sbb
repz
xchg
push
out
push
sbbb
mov
decb
jno
mov
add
hlt
push
icebp
sub
paddusb
rcll
and
ljmp
loopne
test
or
mov
pop
sbb
cmp
add
lods
ret
sub
stos
ficoms
mov
sbbb
jecxz
test
and
out
jnp
inc
pop
popa
sub
addr16
stc
push
loope
jo
ds
lret
sahf
jg
ja,pn
jno
sbb
shll
push
and
aam
xchg
icebp
push
dec
insb
or
iret
and
push
push
ljmp
and
mov
mov
add
insl
hlt
stos
mov
jae
stos
les
ret
dec
sarl
negb
jb
fptan
adc
enter
or
xchg
enter
aas
sbb
push
outsb
xlat
in
cmc
aam
cmpsb
stos
out
scas
and
popf
jnp
inc
pop
mov
cmp
enter
pop
lcall
jb
push
fldl
lds
ds
xor
rcr
lds
popf
and
cmp
adc
xor
pop
pop
sarb
xchg
lods
xor
mov
mov
push
or
mov
ja
loope
add
dec
xor
and
xchg
mov
pop
inc
pushf
dec
adc
adc
dec
out
sub
arpl
mov
in
pop
lahf
sub
fsubrs
insb
mov
dec
sbb
test
push
jecxz
sti
cmp
ljmp
mov
movsb
lcall
jmp
scas
jo
xorb
sub
xchg
pop
repz
mov
pushl
cmp
xor
push
add
push
jne
jne
or
xor
cwtl
dec
cmp
cli
out
cmpsb
jbe
int
push
mov
movsb
jmp
lods
and
xsaveopt
addb
mov
lgs
pop
in
out
movsb
mov
push
jnp
lods
int3
sbb
mov
je
push
lcall
rorb
adc
push
pop
inc
mov
es
pop
aas
in
popa
jb
jbe
cmpsl
rcrb
fnstsw
iret
push
xor
add
leave
arpl
add
jle
inc
hlt
push
dec
cltd
loop
add
adc
iret
aad
je
mov
xor
xorb
ficompl
sbbl
xor
dec
add
cmp
fstpt
jp
jle
mov
pusha
and
xchg
lods
cmpsb
sub
cld
adc
sar
dec
push
cmc
cld
pop
lods
int
and
push
mov
or
ret
ror
mov
jp
add
sub
clc
push
cwtl
mov
outsb
cmpsl
adc
mov
and
push
fnsave
in
or
lret
and
int3
mov
mov
adc
out
xchg
pop
fdivp
test
in
sbb
or
cs
mov
outsl
xor
ds
jne
sbb
adc
loopne
xchg
mov
mov
movsb
xor
sub
stos
in
arpl
movsb
test
clc
dec
inc
inc
add
pop
clc
xchg
sbb
jbe
add
ja
outsb
out
mov
mov
repz
pop
leave
std
mov
xor
lock
int3
mov
pop
adc
sti
mov
push
push
xchg
pextrw
sub
and
shlb
lahf
jl
jb
push
jae
mov
sbb
push
dec
stc
out
imul
imul
in
testl
jb
or
xchg
and
sbb
sti
out
popa
sbb
out
add
inc
insl
shrl
push
in
sarb
push
fcomip
lret
xchg
jo
popf
shl
push
xlat
int
mov
in
fwait
lcall
mov
test
je
fs
lea
arpl
and
in
insb
lods
stc
sub
out
out
dec
inc
pop
sub
int
pop
mov
orl
xor
lock
roll
mov
int3
mov
mov
xor
mov
xchg
and
jmp
in
inc
movsl
cmpsb
mov
jnp
in
adc
adc
xchg
mov
int3
lret
inc
inc
push
mov
adc
aaa
clc
lock
repnz
push
mov
add
cmc
dec
orl
lock
ret
cld
divl
xor
out
dec
adc
jae
nop
and
mov
negl
pop
cltd
loop
mov
push
sub
dec
xchg
jnp
cmpsb
or
cli
jo
into
xor
mov
fcoms
les
bound
mov
bound
nop
jle
jb
daa
mov
add
push
sub
jo
add
imul
xor
mov
mov
lods
cwtl
push
cmp
cwtl
push
mov
xchg
movsb
or
push
in
insl
in
mov
mov
xchg
ljmp
add
mov
xor
movsb
mov
xlat
sbb
and
push
imul
jecxz
mov
cmp
pop
test
ss
movsb
inc
jge
pop
adc
in
and
mov
dec
xchg
sbbl
ficomps
or
push
sbb
xor
imul
jecxz
xor
test
inc
call
loope
pop
jmp
xor
add
bound
add
std
test
rcl
subb
inc
sub
cmc
iret
mov
push
inc
push
sbb
outsb
and
sub
inc
stc
mov
lret
push
enter
mov
sub
leave
enter
dec
jl
mov
dec
adc
popa
dec
shlb
std
inc
fsubs
mov
xchg
lods
ret
add
jns
inc
adc
mov
push
repz
cwtl
jns
pop
adc
movsb
mov
push
xor
out
push
dec
fsubs
push
sub
ja
mov
fimull
jb
dec
jl
fistpll
ljmp
jbe
jg
push
add
shrl
push
nop
inc
sbb
push
fwait
dec
sub
ljmp
pop
add
cmp
dec
jbe
lods
lret
mov
je
fdivl
and
out
xchg
mov
sahf
shll
dec
mov
ret
xchg
int3
addb
cmpb
and
inc
pop
mov
add
cmpsl
adc
fwait
xchg
jo
aaa
xchg
pop
mov
stos
das
ljmp
icebp
scas
lods
cmpsb
imul
lock
adc
int
xchg
add
push
cmp
pop
or
mov
inc
ss
jle
jle
aam
pusha
push
clc
lock
adc
sub
js
sbb
mov
lods
iret
inc
shll
in
arpl
jge
sbb
mov
xchg
daa
popf
jecxz
aaa
xchg
sub
inc
fs
insb
stos
ss
roll
in
adc
add
sub
or
rcrb
adc
into
mov
addl
pop
add
mov
or
popa
mov
rolb
ret
stc
pop
cwtl
inc
stos
xchg
idivb
fisubl
add
push
dec
xchg
orb
xchg
divb
dec
xor
mov
dec
cmp
rolb
mov
jge
out
jmp
les
ret
push
lods
insl
ds
add
mov
lret
inc
clc
into
addr16
jne
cmp
lret
cmp
mov
outsb
pop
inc
mov
fistpll
shr
subb
jp
mov
mov
shl
xor
xchg
mov
cmpsb
ficoml
frstpm(287
inc
sub
inc
dec
in
jg
cmpsl
jno
rorb
nop
js
add
loope
fs
incl
add
roll
in
and
in
mov
lcall
inc
add
cmp
aad
test
icebp
push
cltd
and
push
ds
cltd
sbb
mov
sbb
out
std
hlt
cmpb
and
fsub
loop
inc
aad
and
andl
mov
mov
cmp
add
mov
jne
insb
or
or
cmp
fimull
sbb
mov
leave
testb
cmp
loope
jno
insb
subl
jl
mov
std
push
test
repz
sbb
xchg
adc
pusha
bound
lret
lds
and
and
and
cltd
jo
mulb
les
ljmp
cmpsl
dec
adc
and
insb
lcallw
jns
loopne
int3
ljmp
and
push
mov
dec
ja
stos
pop
sub
lret
lods
adc
push
cmp
ss
jmp
je
jl
lahf
add
xchg
cld
sbb
cli
mov
sbbb
push
out
sti
add
aam
sbb
imul
ret
jmp
or
fs
iret
xchg
or
loop
xchg
cmp
push
repnz
xchg
sub
fistpl
into
xchg
or
sub
daa
and
mov
and
xchg
repz
mov
test
xor
addr16
fbld
out
or
mov
data16
loop
cmp
push
in
imul
fmull
mov
mov
adc
xor
test
or
lock
push
jmp
or
mov
pop
cld
lock
fwait
xchg
pop
mov
dec
ljmp
data16
inc
sub
xor
bound
data16
shr
shrb
and
mov
cmpsl
dec
xor
jge
pop
adc
lret
movsb
dec
or
mov
lret
xlat
push
mov
cmpsb
lods
adc
xchg
dec
jg
repz
add
sti
xchg
nop
or
out
mov
sub
hlt
idivl
cli
or
lea
inc
jne
xchg
adc
xchg
loopne
cmp
push
nop
push
repnz
pop
jne
cltd
sbb
or
nop
mov
jbe
pop
dec
xor
daa
pop
jg
test
xchg
jns
aam
movsl
adc
outsl
or
mov
sbb
jmp
xor
and
push
xlat
shrl
xchg
andnps
dec
into
test
aad
fcompl
sti
daa
jne
jecxz
sub
pop
test
ds
repz
shlb
mov
cmpsb
pop
inc
pop
xor
fs
or
cmc
sbb
imul
add
and
repnz
mov
jo
mov
outsl
cmp
btr
dec
rclb
and
jbe
mov
or
adc
pop
xor
jg
push
das
enter
mov
test
rorl
mov
rcl
icebp
adc
cmp
scas
sub
pop
pop
out
jge
xchg
hlt
mov
adc
fwait
dec
and
mov
iret
repz
out
inc
xchg
mov
adcb
mov
adc
imul
stc
mov
sub
lods
fsts
hlt
push
xor
mov
mov
mov
shll
in
out
ss
imul
pushl
les
rcll
loop
lods
sbb
mov
ss
nop
mov
cmp
and
and
bound
lds
out
mov
shll
cld
pop
out
stc
dec
jno
sbb
insl
pop
enter
mov
popf
ss
bnd
or
loope
jo
add
add
push
pop
add
movsb
mov
mov
xlat
pop
adc
or
adc
jp
add
dec
inc
cmp
lret
xchg
out
jg
shrl
lods
mov
xchg
lock
dec
inc
je
mov
or
ss
mov
add
fmuls
pop
jnp
sbb
outsl
and
jmp
fs
dec
pop
xchg
fmul
sub
movl
cmp
loop
in
rorl
sbb
iret
push
movsb
mov
in
testl
lcall
cmp
shll
cmpsb
mov
sti
movb
cmp
mov
mov
dec
aas
inc
clc
mov
aam
aaa
jl
pop
add
popf
jbe
addr16
dec
enter
test
cmpsb
sub
xchg
mov
subb
in
outsl
sbb
dec
fsubr
ret
es
shll
lds
hlt
out
jns
cmp
mov
xchg
pop
cmp
std
daa
insb
cmp
mov
pusha
call
inc
fstps
scas
addr16
mov
inc
arpl
lret
add
mov
mov
iret
push
out
loope
cmp
data16
movl
and
xor
test
mov
cld
fbld
pop
add
icebp
cmpsl
movsl
int
mov
xchg
cmp
in
cmpsl
ret
lret
icebp
and
and
dec
adc
fsubrs
cmp
mov
dec
mov
test
pop
inc
stc
fs
sbb
arpl
xchg
pop
fmul
mov
mov
adc
arpl
jb
jle
mov
mov
mov
mov
movsl
mov
push
test
jbe
leave
movsl
pop
int
aaa
cmp
or
in
push
xchg
xor
mul
cmc
pop
stos
outsl
je
dec
mov
pop
mov
pop
and
je
ljmp
xchg
pusha
or
sub
outsb
cmp
les
adc
popf
cltd
xorl
xor
arpl
lret
sbb
or
div
pop
push
pop
int
add
mov
inc
fbld
or
inc
mov
loope
ret
scas
std
bound
mov
adc
jl
arpl
push
adc
xchg
jp
cld
xchg
or
std
add
popa
rclb
dec
push
movb
pop
or
cmpsl
call
or
js
je
fldl
sub
loopne
sub
enter
mov
in
loope
insl
sbb
pop
add
stos
jb
rcl
dec
mov
sub
popf
and
loope
cs
push
es
push
pop
push
stc
mov
jp
pusha
pop
cltd
mov
mov
das
stc
ret
stc
movsl
ret
mov
cmp
in
jae
dec
xor
sbb
rolb
inc
pop
add
push
jbe
testl
sub
sbb
push
sti
mov
repz
hlt
pop
dec
imul
pop
fisttpll
mov
lods
lods
push
push
adc
and
or
stos
xchg
hlt
jnp
arpl
sti
add
xchg
jb
push
jecxz
adc
inc
add
aas
dec
mov
mov
ljmp
imul
sahf
inc
fcomp
mov
cld
in
int3
je
mov
push
push
cmpsb
xlat
cmp
fdivrs
xchg
popa
fistl
fwait
adc
movl
fsubp
stos
xlat
int
mov
jge
lahf
nop
test
xchg
xchg
pop
data16
fwait
mov
and
notb
and
rclb
pop
mov
xchg
mov
call
fistpll
pusha
xor
ljmp
mov
cmpsb
and
fwait
mov
sti
subl
jle
adc
fimull
out
inc
in
nop
cmp
repnz
cmpsl
divl
cmpsl
scas
and
add
int
cmp
xchg
or
add
scas
inc
jl
xor
mov
jns
jl
xchg
ss
enter
test
cmp
es
sub
pop
icebp
popf
push
or
popa
out
mov
test
mov
test
and
mov
jl
xchg
lcall
lret
add
arpl
jno
or
cwtl
inc
inc
mov
jge
in
hlt
xor
xor
mov
inc
sbb
icebp
mov
leave
fiadds
gs
xor
lret
xlat
sbb
test
rol
fstps
fmull
loope
fdiv
cwtl
imul
push
pop
and
mov
xlat
inc
popa
push
mov
add
xchg
add
cltd
cli
mov
jns
mov
in
in
cld
cmp
sub
adc
sbb
push
sub
out
pop
push
outsl
aad
xchg
lea
test
xchg
jge
cmpsb
jne
ja
ret
sbb
int
test
sarl
mov
mov
shll
add
lods
mov
mov
out
xchg
jo
loop
je
cld
shl
inc
insl
or
add
jle
pop
mov
xchg
mov
movsb
das
ret
adc
icebp
jno
push
xor
sbb
and
jno
mov
imul
mov
lods
cmpsb
mov
les
notl
adc
jmp
sub
out
mov
cltd
ljmp
movsb
aaa
les
repnz
movsl
inc
sub
nop
ds
lea
dec
sub
sub
shlb
int3
mov
leave
or
call
mov
int
mov
jl
jl
js
dec
sub
mov
ds
or
pop
fidivrl
repnz
and
ja
mov
nop
adc
pushf
xor
adc
loop
push
loopne
cmpsb
ja
sub
sbb
xchg
sbbb
sub
push
mov
stc
fidivs
push
xlat
lea
test
inc
sub
test
xor
or
xor
mov
call
adc
mov
outsb
lcall
dec
call
push
and
push
out
shrb
sub
aaa
movsb
test
mulb
ljmp
and
mov
outsb
dec
call
data16
sbb
or
sub
pop
cs
andb
nop
decb
fwait
js
inc
sahf
icebp
dec
pop
outsb
mov
in
fsubrp
mov
and
xchg
cli
lahf
pop
xlat
mov
sub
push
outsl
jp
xchg
lods
scas
cmp
scas
lods
pop
in
jmp
push
lods
xchg
shlb
adc
push
dec
insl
insl
dec
and
cld
inc
sub
mov
xchg
mov
xchg
in
dec
cmp
fwait
mov
aam
addr16
cs
dec
and
pop
lock
das
aas
jmp
xor
sbb
pop
xchg
mov
arpl
inc
or
or
dec
mov
mov
dec
jns
jb
sub
jno
cld
mov
mov
addr16
add
sti
std
cwtl
pop
add
sbb
ficomps
inc
xorb
cld
ljmp
mov
xchg
pop
pusha
cmp
iret
in
cwtl
setl
xor
hlt
or
pop
adc
scas
jo
test
fcmovnbe
pop
inc
mov
mov
mov
or
or
jb
push
push
ljmp
xor
pop
stos
hlt
sub
jl
aam
pop
popa
aad
xchg
cmp
repnz
ds
mov
mov
or
ds
jne
sti
in
ljmp
jb
cmp
les
lcall
xchg
jns
aad
aaa
mov
jbe
dec
imul
add
jae
mov
pop
inc
and
add
iret
sbb
movsb
es
into
shl
inc
daa
adc
mov
dec
mov
cmp
lcall
pop
sbb
mov
fsubl
cmp
xchg
jo
push
mov
push
pop
lds
outsl
add
cli
pop
xchg
cmp
or
push
cli
int
add
out
sub
adc
lock
ljmp
sub
lods
pop
jo
or
test
push
jne
ret
cli
jmp
movsl
mov
sub
dec
push
in
mov
sub
decl
lds
mov
and
xchg
data16
jbe
icebp
adc
mov
stos
test
out
roll
movsb
add
sbb
fadd
fisttpl
std
ficoml
cmp
jg
nop
add
xchg
mov
into
pushf
inc
jne
test
cwtl
xorb
xlat
aas
xor
or
mov
in
sub
fsubl
bound
arpl
pop
adc
xor
jle
xor
sbb
and
xchg
mov
sbb
cmp
mov
cmp
es
sub
pop
in
push
fisubl
or
sbb
lret
fcmovnb
les
mov
pop
dec
rol
and
fstpt
ret
int
cmpsl
lods
imulb
jl
ret
andb
jecxz
cmp
sub
xor
sub
out
arpl
fsub
mov
sub
sub
and
imul
scas
jp
sub
pop
les
add
nop
int
call
sahf
pop
push
cmp
ja
inc
aad
push
jno
mov
pop
test
sub
ret
jne
je
mov
cld
sbb
jne
hlt
dec
lret
addr16
mov
jne
les
orl
lcall
xor
ret
jecxz
dec
mov
dec
fldcw
lret
outsl
jo
mov
fneni(8087
mov
mov
fbstp
push
xchg
adc
test
mov
sbb
xchg
out
or
popa
jb
pop
mov
or
fbld
iret
aad
in
scas
movsl
cmpsb
lahf
imul
out
cmc
daa
out
jb
sbb
movsb
int3
loop
mov
inc
push
jns
adc
mov
aas
push
ja
outsl
add
push
inc
and
xchg
mov
fbstp
sbb
jnp
sub
js
dec
bound
shlb
test
lods
insb
jns
sarb
mov
mov
outsl
out
cmpsl
xchg
test
jbe
push
cltd
dec
dec
enter
xor
scas
lea
adc
mov
xchg
adc
push
xor
shll
mov
mov
sbb
dec
rorl
int
or
cmp
jmp
jge
fisubl
aas
mov
fdivrp
pop
mov
in
and
retw
test
adc
dec
repz
dec
sub
mov
xor
mov
shrb
das
pop
xchg
scas
stc
addl
dec
outsb
jne
lea
jmp
and
push
adc
jo
adc
jns
pop
xchg
xlat
in
out
test
sub
adcl
xorl
and
sbb
popa
sbb
pop
lods
jmp
loopne
add
jl
inc
call
jmp
fcomi
subb
scas
lret
cmp
sub
mov
ret
fldenv
push
sahf
dec
xchg
inc
mov
mov
stos
inc
jns
sub
inc
xchg
test
test
out
loopne
enter
pop
rcl
mov
add
test
mov
inc
ljmp
je
dec
add
mov
push
icebp
popa
mov
fwait
pop
mov
cmp
movsl
into
jno
sbb
cmp
xor
and
jno
nop
out
jns
xchg
xchg
sbb
aam
sub
and
bound
cmpsb
inc
int3
sbb
cmp
or
cli
sbb
sub
xchg
cmp
mov
jnp
mov
cmpsl
inc
popa
shl
ret
inc
dec
sub
xor
repz
test
je
fnsave
jge
fsubrp
jb
jmp
cmp
sbb
mov
and
inc
sti
sahf
xor
lds
sbb
cs
aas
mov
xchg
hlt
mov
aam
jno
sub
jbe
cli
mov
ds
out
sub
inc
mov
xchg
add
and
fstl
test
shr
cmpsl
cmp
fsts
int3
pop
and
aas
mov
jnp
sarl
dec
hlt
push
xor
out
mov
add
call
mov
mov
int
inc
out
fstpt
repz
push
xchg
pop
ret
repz
sub
ds
roll
and
fsts
nop
adc
xchg
mov
lret
xchg
jb
pushf
fsts
rclb
cmp
inc
and
nop
sub
in
cmp
pop
outsb
mov
inc
sbb
rolb
lcall
cltd
lea
mov
xchg
dec
test
mov
adc
orl
setle
sub
aam
jb
dec
clc
xor
xchg
xchg
push
mov
dec
sarl
cmp
cltd
xchg
xor
aam
mov
cwtl
sti
jbe
adc
mov
fldenv
xchg
mov
adc
xchg
idivl
pop
jae
xor
shl
imul
mov
fisubl
cld
dec
inc
ret
lds
jecxz
lea
out
cltd
mov
pusha
or
adc
into
mov
ljmp
rcrb
gs
sbb
jp
xchg
cmp
inc
jns
mov
inc
xchg
and
and
pop
jecxz
cs
mov
cltd
in
pusha
cmp
shrb
dec
jbe
cmpsb
dec
rorl
add
inc
fs
mov
ret
pop
mov
fisttpll
pop
aam
cli
jno
out
and
les
cmp
popa
nop
mov
out
sbb
fsub
sub
jae
in
sti
pop
fisttpll
and
fisubl
pushf
pusha
xlat
sarl
xchg
xchg
ss
int3
push
ljmp
rclb
lods
fildl
mov
ret
xchg
mov
repnz
or
pop
xchg
cmpsl
subb
out
sbb
imul
sub
incl
stos
es
shlb
into
mov
cmp
orb
jne
push
mov
stos
subl
jae
mov
insl
adc
icebp
inc
and
mov
mov
sahf
popa
cvttps2pi
sub
add
sbb
sahf
mov
scas
dec
adc
or
lcall
mov
clc
inc
das
sbb
or
xchg
add
sbbl
cltd
sub
insl
insl
ja
mov
xchg
leave
adc
in
pop
adc
push
pop
std
xchg
movsb
test
test
pop
into
mulb
mov
fadd
out
ljmp
leave
cmp
push
int3
scas
jo
push
and
dec
mov
cli
test
int3
cwtl
scas
test
es
in
jae
lods
push
cmp
jo
lock
js
sub
xor
iret
mov
sub
or
jl
stc
int
mov
cmp
adc
adc
int
sub
hlt
mov
add
ljmp
ljmp
jb
lret
rcrl
sub
cmpsl
out
adc
ret
push
dec
jae
add
xor
stc
mov
dec
in
jno
movsb
inc
repnz
int
stc
iret
dec
test
dec
xor
sbb
jp
repz
push
push
lods
jg
outsl
xor
cmp
popf
int3
scas
sahf
mov
adc
in
into
ficompl
std
and
test
addr16
sti
mov
mov
push
sub
nop
xchg
in
cmp
jmp
repz
xor
jmp
or
mov
ror
clc
and
jbe
dec
adc
xor
pusha
lods
shlb
stos
shr
inc
aad
fimuls
stc
jmp
lods
and
pop
scas
pop
dec
in
iret
push
lahf
test
pop
in
or
aad
inc
mov
pop
or
xor
mov
lods
xor
jecxz
sbb
sbb
xchg
push
mov
dec
cmp
push
fildll
push
pop
lret
cmp
out
adc
aam
push
mov
add
xor
mov
mov
cld
jno
mov
insl
mov
inc
or
or
xor
adc
push
int
int
addr16
leave
repz
test
std
jl
test
jne
jbe
insb
xchg
sahf
mov
sub
pushf
in
xor
push
xchg
xor
cmp
lahf
mov
inc
rcrl
or
es
loope
repz
sbb
or
adc
or
xchg
std
sub
out
xchg
or
mov
test
dec
sub
push
mov
xchg
cs
mov
jb
repnz
es
fcmovbe
rcr
in
pusha
ljmp
out
xchg
subl
cmp
mov
cmp
xchg
cli
enter
cmp
pop
sbb
pop
subb
and
push
fwait
jnp
aad
pop
mov
cmp
leave
jecxz
push
or
nop
cmpsl
add
js
ret
pop
clc
xchg
lcall
aad
in
xlat
cmp
mov
negl
pusha
imul
mov
pusha
dec
mov
push
imul
or
daa
lret
inc
aas
lods
jmp
jecxz
jge
andb
push
popf
push
add
pop
lea
adc
xchg
adc
cld
inc
push
daa
fdivrs
sbb
lret
cld
or
sub
sub
rorb
inc
sub
or
in
gs
jbe
je
pop
and
mov
pop
pop
mov
sbbl
mov
jbe
and
pop
test
cmp
inc
imul
sbb
rcrl
cltd
hlt
ds
push
or
xor
outsl
inc
add
fildl
mov
cmpsb
sbb
adc
inc
pop
and
add
shl
cmp
adc
idivb
jne
mov
pop
in
cld
add
mov
inc
sbb
daa
jg
jbe
mov
dec
in
addr16
and
rclb
out
and
mov
arpl
push
lahf
cmpsl
mov
xchg
jge
test
pop
jns
pop
add
daa
adc
jecxz
aas
hlt
in
into
in
dec
cltd
sub
xor
call
mov
sub
mov
loopne
fbstp
arpl
xchg
dec
andl
sbb
in
xchg
adc
inc
stos
dec
cmp
push
mov
call
sub
add
mov
rcr
hlt
mov
int3
pusha
out
jle
pop
and
pop
repz
and
cmp
roll
ret
push
mov
dec
imul
mov
xchg
loope
test
das
cmp
ret
fsubr
ret
mov
aaa
or
sub
jb
or
imul
mov
rcll
mov
mov
mov
inc
add
test
pop
test
jp
ret
mov
xor
shld
out
jns
imulb
and
push
pop
ret
movups
push
outsb
repz
rcrb
lret
psadbw
test
lret
and
es
outsl
pop
sti
adc
sbb
lahf
test
add
cmp
fs
adc
mov
add
or
dec
adc
sahf
fiaddl
inc
js
push
lods
cld
test
shrb
cs
mov
dec
pusha
mov
mov
arpl
add
push
add
sbb
xor
movsb
dec
dec
in
jno
sub
aad
mov
add
pushf
push
les
cs
lret
sbb
add
test
and
pop
ficoml
push
cmp
inc
out
loopne,pn
jp
orl
loop
fwait
jbe
add
jecxz
fs
mov
mov
fldenv
into
xchg
mov
add
cmp
xchg
pop
ss
dec
dec
push
sub
lods
dec
cmp
mov
lret
mov
mov
add
mov
dec
cmpl
lcall
mov
dec
ret
mull
stc
jge
and
sbb
mov
test
mov
or
js
hlt
cmpb
jb
inc
popa
mull
fstpt
inc
loope
jle
inc
lcall
push
xchg
push
outsl
jle
sub
dec
cmp
mov
cmp
or
aaa
repz
mov
sub
test
add
add
xchg
fidivl
enter
aam
rcrl
jnp
inc
jbe
lea
js
stos
adc
sub
movsl
dec
or
mov
das
data16
divl
and
sub
fmul
data16
mov
or
push
out
lods
cli
sti
push
loope
sbb
fisubrl
mov
mov
test
and
in
sahf
cld
cmp
push
cld
cs
stc
test
push
jns
mov
sti
mov
insb
ret
mov
xor
add
enter
push
mov
add
sub
jmp
adc
push
sahf
in
fdivrs
aaa
ja
lahf
loop
add
mov
lds
dec
iret
inc
fistpll
xor
cwtl
stc
xchg
xor
xchg
xor
scas
in
lahf
push
lock
inc
push
mov
pusha
std
ja
negb
test
push
cltd
leave
addw
jnp,pt
or
inc
inc
xor
popf
fiaddl
push
inc
js
je
fimuls
push
arpl
into
mov
faddl
das
std
inc
sub
xor
pop
xor
cwtl
fisttpl
xor
daa
dec
pop
push
loopne
jecxz
jno
cwtl
or
adc
je
aad
cli
cmc
enter
int3
les
pop
xchg
mov
int
dec
inc
xor
ds
adc
adc
mov
lods
imul
xor
mov
and
fmulp
aad
jmp
mov
pop
cmp
pop
rclb
shlb
dec
sbb
mov
insl
frstor
fs
enter
mov
inc
call
sub
cmp
xchg
int3
in
sbb
sbb
mov
adc
fisubrl
or
adc
sbb
jnp
dec
decl
pop
stos
js
lcall
sbb
arpl
ds
or
dec
out
dec
lahf
leave
jp
adc
or
and
adc
fisubrs
mov
divl
jmp
movb
fstpl
or
test
mov
mov
call
push
stc
cmpsb
mov
mov
cmp
in
pop
shlb
xor
stc
shrl
movsb
ret
in
movsb
mov
push
ljmp
scas
loope
test
rcrl
and
lahf
movb
cltd
cmpsb
push
insb
clc
sti
push
dec
add
ds
or
xlat
xchg
inc
adc
sbb
mov
test
mov
sbb
int3
pop
hlt
enter
xorl
lods
jg
outsl
fistpll
xchg
shl
lock
shlb
jnp
pop
or
add
repz
shll
xchg
iret
mov
sbb
cmp
daa
mov
sub
sub
and
in
out
sbb
test
mov
dec
iret
mov
mov
stos
outsl
lods
jo
xor
lock
push
xchg
call
pop
nop
sub
lcall
sbb
aad
std
imul
icebp
dec
sbb
lret
dec
loopne
cmpsl
shrl
into
mov
xchg
movsl
data16
add
jno
push
fstps
and
sbb
call
mov
cmp
mov
test
cld
pop
movsb
imul
xchg
movsl
push
arpl
mov
inc
jl
gs
call
test
into
pop
and
insl
loope
adc
mov
sub
xchg
mov
xor
loope
inc
xlat
mov
mov
xchg
stos
pushf
xchg
mov
mov
push
inc
fwait
and
cmp
daa
pop
sbb
xchg
mov
aas
rcrl
xchg
pop
mov
push
dec
pop
loop
imul
stos
mov
lahf
out
xchg
cmp
add
jge
xchg
jb
aas
mov
daa
stos
iret
mov
in
xor
push
mov
mov
or
data16
loope
fnstenv
das
ret
dec
cwtl
sbb
adc
addr16
ret
jnp
jns
stos
mov
pop
in
inc
stos
lret
icebp
in
gs
push
and
jg
pushf
movsb
fsubl
mov
cwtl
aad
cld
sub
jle
js
push
sbb
in
xchg
mov
jo
in
jbe
loope
je
fwait
lret
adc
xlat
fidivl
clc
test
lea
push
lahf
mov
loope
sub
pusha
jecxz
loope
into
iret
dec
mov
lret
test
pop
cmpsb
or
cmpsl
xchg
push
jl
ret
daa
ret
xchg
lahf
mov
adc
sbb
xor
loopne
or
mov
hlt
cmp
xor
mov
into
lods
jns
xchg
mov
mov
sbb
and
imul
add
add
aaa
imul
into
jae
ret
xor
jp
fsubs
mov
push
loope
inc
xchg
icebp
pop
cld
cmp
daa
jns
mov
xchg
ror
xchg
jb
mov
lods
enter
movsl
sbb
movsb
scas
in
xor
push
enter
dec
imul
cltd
mov
inc
and
call
xchg
jae
fcompl
dec
lods
test
dec
lods
cmpsb
icebp
jp
xchg
out
fwait
jg
in
aad
jae
sar
insb
adcb
dec
inc
hlt
sbbb
in
xchg
pop
jle
repnz
inc
pop
jge
push
mov
sbb
jb
and
outsl
sti
repnz
aaa
aad
inc
jno
in
shlb
and
xor
stos
pop
sti
mov
xchg
into
in
lahf
and
mov
aaa
xlat
orl
pushf
test
xor
emms
insb
lret
js
and
sub
cmp
sbb
int3
loopne
das
dec
mov
flds
and
shll
das
sti
adcb
inc
shll
xchg
jnp
sub
rcl
and
jae
xorl
repz
test
outsb
add
mulb
cmp
or
jbe
dec
clc
pop
sub
and
xlat
jno
sahf
lods
test
mov
cmp
mov
imul
leave
mov
cld
sub
pop
loop
mov
dec
cli
lahf
out
aam
out
mov
mov
xor
sbb
repz
repnz
add
inc
fsts
fcomi
inc
dec
test
out
dec
jns
inc
fistpl
jg
mov
xchg
xor
or
icebp
mov
and
mov
aaa
into
dec
inc
pop
and
ret
pop
imul
dec
xchg
xor
in
add
push
jge
mov
ret
mov
sub
cld
push
dec
ljmp
adc
pop
mov
mov
pop
add
sbb
cmpsb
inc
adc
mov
sahf
sbb
imul
pop
aam
ficomps
sub
ret
cmp
xor
lea
leave
je
jg
jo
inc
in
dec
add
sub
jbe
adc
rorb
mov
outsb
adc
or
aaa
sahf
mov
sbb
mov
jecxz
xchg
rclb
inc
addr16
xchg
mov
inc
aad
sbb
leave
adc
lods
push
mov
sbb
adc
in
jae
lock
cmpsb
movsl
lods
enter
stc
jne
jecxz
and
in
mov
add
pop
cmp
jno
dec
or
add
or
cwtl
movsb
cmpsl
iret
sub
pop
adc
xor
dec
test
imul
sbb
mov
out
enter
xor
out
inc
adc
movsl
scas
aaa
inc
fwait
loop
push
shlb
insl
push
fisubs
imul
cli
mov
cld
bound
inc
push
sub
xchg
mov
outsl
fs
push
cmp
jl
ja
push
pop
cld
lods
out
jmp
sub
sub
rol
jecxz
pop
inc
pop
in
pop
fs
push
mov
inc
sti
incl
mov
push
ret
std
or
je
rcll
andl
or
jle
cltd
lods
loope
jae
sahf
mov
add
daa
inc
loopne
decl
jne
je
shrl
jnp
mov
int3
or
xchg
loopne
mov
xchg
sti
adc
fimuls
cmpsl
mov
lcall
pop
jl
dec
cltd
and
cld
mov
cs
sub
and
lea
mov
sub
sub
cmp
sub
repz
outsb
inc
cmp
dec
stos
xlat
sbbl
fwait
in
movsl
les
pop
enter
fcoms
mov
or
adc
jmp
shll
aas
fcompl
adc
aas
push
out
out
jl
cmp
pop
mov
adc
fisttps
repnz
sub
adc
ja
pop
les
pop
jle
sti
test
push
lret
subb
mov
movsb
lcall
hlt
out
mov
loopne
mov
pop
jg
iret
push
ja
push
xchg
cmp
xor
ljmp
rol
push
sbb
std
sahf
cld
dec
gs
add
push
sub
push
repnz
sbb
mov
mov
pushf
test
in
inc
in
xchg
mov
mov
xor
push
add
jmp
rclw
call
push
sub
mov
sub
xchg
addr16
rolb
sub
dec
bound
pop
push
jecxz
mov
pop
movb
out
pop
sar
aas
jbe
inc
loop
mov
popf
xchg
lcall
cmpsl
jmp
push
roll
dec
jae
mov
ljmp
xor
call
mov
rcll
movsl
call
loop
and
shlb
aaa
cmp
cmp
jb
dec
mov
adc
jo
fisttps
sub
and
int3
jg
jae
cmp
mov
stos
xor
dec
or
push
test
xchg
aam
std
mov
xchg
jmp
sub
sbb
cld
daa
add
pop
fmul
dec
loopne
push
outsl
fsts
das
inc
loope
addr16
lcall
nop
jns
lret
fs
xchg
sahf
das
inc
pop
clc
mov
sub
aas
cmpsl
xchg
jp
jo
lret
hlt
sahf
addr16
dec
mov
push
repz
jge
addb
std
stos
ret
pop
adc
mov
jp
fidivs
movsl
push
adc
sub
sub
mov
loope
mov
inc
xchg
into
push
nop
mov
cli
push
test
jb
mov
ja
outsb
pop
inc
sahf
push
pop
rclb
adc
and
adc
mov
pop
data16
sahf
xchg
iret
add
movsb
mov
in
pop
insb
mov
dec
out
in
fsubr
push
jl
stos
adc
loopne
or
fwait
or
es
shlb
mov
xor
mov
dec
add
add
lcall
imul
outsb
mov
aad
lods
inc
lds
lcall
mov
add
push
jne
mov
inc
ja
out
cli
push
imul
push
add
push
sub
or
add
in
pinsrw
aam
in
in
add
js
ds
xchg
xchg
stos
adc
jns
jg
pop
test
sbb
mov
dec
push
dec
mov
test
fsubrp
cmp
inc
lods
pop
xchg
push
lret
sub
rorl
cltd
imul
inc
fistpll
dec
dec
pop
aad
cmpl
push
xchg
loop
or
mov
pop
xchg
jle
inc
pop
push
imul
ljmp
jnp
dec
fs
sbb
outsl
aam
fldl
inc
jl
inc
xchg
cld
ljmp
pop
mov
pop
es
rorb
nop
std
stos
and
mov
sub
mov
enter
jnp
jmp
jg
mov
or
mov
scas
inc
jge
inc
pushf
xor
pop
push
jecxz
pop
inc
cltd
cmp
std
push
loope
cltd
xchg
mov
sub
jo
loope
add
mov
testb
adc
xor
lock
imul
push
mov
out
add
enter
sub
pop
mov
pop
pushf
mov
mov
sti
imul
pop
sti
inc
adc
pop
popa
shll
mov
subb
jecxz
repz
mov
add
pusha
cmpsb
stc
cmp
sub
jo
pop
mov
dec
inc
fwait
jecxz
test
mov
or
jge
add
scas
xchg
fcomps
lcall
mov
adc
xor
testb
repz
mov
and
jg
mov
jne
pop
sub
push
xchg
sub
pop
movsl
or
inc
adc
inc
mov
pop
sbb
sub
dec
pop
shrl
xor
verw
rcrb
dec
mov
outsl
cli
mov
scas
clc
push
loopne
xor
or
xor
cmp
shll
mov
push
ss
xchg
mov
test
xchg
mov
enter
ret
push
mov
stc
ja
shl
mov
inc
out
pop
lret
or
icebp
hlt
cmpb
lcall
outsl
lahf
outsl
jge
jne
roll
dec
loopne
cmp
lods
sarb
shrl
mov
pop
repz
out
in
mov
and
test
mov
lds
int
xchg
and
or
test
into
adc
mov
pop
stos
jg
push
xchg
inc
xor
sub
mov
xchg
imul
mov
pop
lea
push
add
pushl
or
adc
movl
dec
add
adc
sub
inc
adc
mov
lahf
popa
call
in
lahf
aam
lock
loop
dec
imul
nop
push
ljmp
xchg
or
ds
orl
neg
sbb
cmp
or
xchg
sbb
push
movsl
jb
mov
cmpsb
ja
sbb
or
xchg
cmp
dec
mov
push
pushf
jae
popf
inc
sub
leave
sub
call
pop
push
sub
lcall
pop
movaps
xor
imull
cmp
lods
pusha
push
test
xchg
test
pop
push
adc
mul
ret
test
lret
add
jp
lods
inc
dec
repz
ret
dec
sub
mov
xchg
lret
mov
in
rcrb
ljmp
mov
inc
lret
loope,pt
insb
shll
ja
rcr
pop
or
leave
testb
mov
fdivrl
leave
rep
push
push
jl
mov
push
mov
fwait
test
sahf
lsl
push
dec
jp
pop
rcl
adc
mov
xor
jle
add
rolb
xchg
push
push
xchg
inc
bound
andl
lahf
lcall
mov
loopne
sub
test
lea
mov
pushf
xor
sbb
mov
lret
xchg
outsl
ljmp
test
jmp
or
xchg
cmp
jg
sub
iret
iret
or
or
pop
jmp
sbb
mul
cwtl
subl
jbe
dec
fwait
leave
sti
inc
mov
add
lea
leave
nop
dec
nop
xor
push
sub
xlat
roll
jmp
jns
xchg
das
xchg
push
imul
inc
insl
cmpsb
push
out
cmp
adcb
mov
jae
aam
shll
repz
fnstsw
addr16
out
ficoms
call
mov
sub
mov
scas
cli
or
jg
pop
rolb
imul
fidivrl
ja
xchg
cmc
insl
cli
out
flds
xchg
and
pop
pop
mov
push
and
ret
addr16
push
pop
mov
loop
jae
out
add
mov
and
push
test
scas
pusha
xor
inc
xchg
stos
stc
pop
dec
int3
in
lea
sub
bnd
cli
sti
or
mov
sahf
leave
cmpl
cmp
insl
xorb
dec
sbb
lahf
out
sub
push
movsb
bts
inc
int3
shrl
add
jo
inc
dec
in
push
xor
rclb
mov
cmp
movsb
mov
daa
add
jo
aad
jl
push
cmp
mov
icebp
inc
lock
out
cmc
std
shrl
leave
lcall
xor
xlat
mov
mov
std
cmpsl
std
and
fisttpl
adc
sub
jns
test
cmp
dec
leave
mov
cld
pop
out
sbb
cmp
mov
fstps
inc
cmc
pushf
stos
pusha
into
out
xor
std
or
xor
arpl
xchg
mov
fwait
rcl
adc
lods
lods
sysenter
mov
sbb
repnz
adc
movups
stc
stc
repnz
cmp
mov
lea
inc
ljmp
loopne
fimuls
xchg
mov
push
xor
jmp
call
gs
xchg
sbb
adc
mov
ss
push
std
lods
repnz
in
pop
imul
pop
mov
adc
sub
icebp
mov
aam
add
xchg
mov
ret
jbe
cwtl
cld
rcrl
cmc
and
nop
pop
scas
jp
and
loope
enter
fsubrp
fldl
rorb
arpl
adc
mov
rcrb
mov
aas
mov
push
xchg
out
jecxz
dec
stos
push
nop
adc
sub
shr
or
out
out
je
push
fwait
in
aaa
jle
es
ss
fsubrl
adcl
mov
adc
cmpsb
loop
push
inc
and
sbb
sbb
sbb
lahf
pop
lds
fcoms
clc
and
fildll
sub
adc
pusha
mov
cmp
ja
dec
mov
sbb
dec
mov
push
mov
andl
into
lret
je
enter
xchg
and
jne
inc
sbb
dec
insb
call
sub
jne
and
lods
sbb
and
lret
loopne
cmp
sahf
dec
test
sub
xchg
sbb
daa
repnz
out
popf
push
mov
xchg
ret
in
scas
inc
fstpt
bound
lcall
adc
in
mov
xlat
fidivrs
sti
repz
add
fsubr
pop
ja
xlat
and
jno
lcall
test
jb
cmc
push
nop
cwtl
sub
call
test
pop
xchg
xchg
cmc
mov
cmp
pushf
xchg
cmp
in
fcmovbe
lcall
jns
dec
or
andl
and
mov
jb
fmull
adc
addb
lea
mov
into
imull
inc
imul
pop
mov
fstpt
mov
mov
leave
data16
std
dec
sbb
sub
cmp
push
andl
cli
sbb
sub
sbb
cmp
mov
jo
sbb
pop
mov
sbb
cmovs
xor
mov
inc
dec
sub
popf
hlt
mov
push
sti
nop
shll
dec
and
enter
mov
bound
cmpsl
push
movsl
inc
or
sub
lods
pushf
or
icebp
in
jb
push
push
mov
jae
push
inc
leave
inc
sub
mov
jae
xchg
push
adc
jnp
das
push
test
xchg
pop
nop
push
nop
mov
inc
sbb
pop
adc
or
je
push
int3
repz
inc
scas
mov
insl
andl
or
shl
in
roll
rcl
ja
or
xchg
xchg
or
inc
sub
xchg
test
push
outsl
mov
adc
inc
mov
sbb
mov
bound
outsb
xchg
jne
pop
fimuls
inc
and
fcmovnbe
mov
or
idivb
lahf
or
add
mov
lret
pop
aam
les
jae
mov
lret
add
pop
pop
in
imul
insb
xchg
subl
sub
mov
xchg
fwait
es
mov
mov
or
sub
xor
lret
lret
fistps
pop
mov
pop
jno
pop
add
mov
or
shll
aaa
lds
in
imul
js
popf
es
mov
into
fwait
lea
sbb
lock
jne
xchg
movl
mov
lret
lea
jg
scas
test
jns
dec
xchg
lods
ret
repz
dec
and
jge
ret
xor
mov
jae
das
sub
cmp
push
sub
lahf
add
xor
inc
rcll
jno
cwtl
fidivl
aaa
add
out
mov
dec
xor
js
insb
jo
xchg
add
cmp
mov
or
fisubrl
dec
mov
ret
adc
andb
test
movsb
jle
adc
pop
das
add
fstpl
dec
push
es
divb
setae
out
dec
pop
jb
ja
fwait
movsb
insb
sub
insb
xchg
fdivrs
push
stc
fsubl
xor
idivb
out
jle
adc
leave
mov
pop
test
gs
mov
mov
ljmp
xchg
add
sub
pop
adc
inc
ret
fnstenv
int3
paddusw
sbb
mov
push
mov
sub
rcl
mov
pop
fs
mov
and
mov
cmp
push
rorl
jae
int
cwtl
lods
iret
test
rclb
lds
cmc
add
sbb
and
lds
int3
jns
or
insl
outsl
mov
mov
jle
lock
sbb
dec
cmp
rol
xor
enter
aaa
frstor
adc
sbb
cmpsl
cmp
js
enter
mov
fstps
jle
pop
outsb
fcoms
dec
cli
push
jge
aas
pop
outsl
or
inc
jmp
jmp
ds
xlat
arpl
push
out
idiv
out
test
into
test
insl
out
scas
mov
stos
out
inc
testl
dec
mov
sarb
mov
mov
cs
fwait
sub
mov
fidivrs
sbb
xchg
dec
out
pop
mov
or
sbb
movsb
insb
lcall
icebp
mov
pop
add
loop
xor
int
adc
xor
xor
popa
cltd
pop
test
push
ds
cltd
enter
mov
sbb
pushf
jle
pop
xor
lret
pop
inc
int
je
das
sbb
pop
cld
adc
add
dec
jo
lods
mov
inc
cmpsl
aad
cmp
or
cmp
dec
insl
popa
cmp
sbb
inc
mov
sti
ret
das
and
sbb
test
adc
inc
and
ficomps
in
pop
insl
repz
repnz
adc
or
xchg
sub
scas
mov
xchg
lret
push
cmp
mov
xchg
aad
sbb
add
out
mov
in
cmpsl
cmpsb
aad
cld
imul
shlb
jnp
and
sub
xchg
xlat
jnp
add
push
pop
sub
cmpsb
and
fmul
inc
sbb
mov
mov
pop
adc
pop
pop
mulb
cmp
mov
xor
and
add
inc
xor
mov
jo
insb
pop
push
xchg
xor
in
les
mov
mov
jne
insl
lock
xchg
sbb
rol
xchg
push
lods
xchg
insl
test
rcr
lcall
lcall
mov
mov
clc
mov
test
or
and
push
hlt
sub
nop
lea
ljmp
mov
jmp
add
fiadds
pop
mov
push
adc
jecxz
and
wbinvd
cmc
xor
xchg
hlt
lret
addl
aaa
add
push
mov
mov
rolb
data16
lods
in
pop
and
out
nop
cld
scas
ss
imul
mov
and
xor
mov
in
pop
fistps
andnps
std
push
hlt
and
stos
sahf
push
out
sbb
jbe
or
ret
insb
shlb
or
xchg
fld
imul
mov
ret
rcl
xchg
xchg
xor
int3
call
fidivs
adc
jno
inc
xchg
cmc
sbb
stos
cs
push
ret
leave
xor
cmpsb
xchg
sub
ljmp
xlat
lods
jle
movsl
pop
lock
jge
pop
aam
bound
and
das
sub
test
out
adc
les
fnstenv
fisttps
push
mov
es
scas
jg
divb
mov
xor
cmp
sti
mov
aas
inc
test
adc
arpl
lods
das
div
or
push
fiadds
mulb
ret
inc
jg
cli
pop
xor
mov
fsubrl
push
aas
mov
cmp
or
xlat
mov
mov
jl
fisttps
inc
gs
sbb
mov
bound
in
sub
mov
es
mov
or
scas
lahf
std
sbb
cmp
pop
push
mov
fnstcw
icebp
jl
bound
push
js
ss
mov
xchg
pop
gs
jg
dec
push
mov
mov
stos
sub
xchg
push
or
sbb
xor
xchg
mov
leave
das
mov
sub
pop
jle
ficompl
dec
insb
fnstenv
scas
sub
sti
popa
push
daa
in
imul
sub
adc
pop
cmpsb
test
shl
xor
fs
imul
mov
mov
mov
jns
ret
mov
imul
jecxz
push
push
mov
or
add
test
fisubl
lret
pusha
repnz
mov
jb
mov
lret
in
nop
mov
jp
fwait
test
fcoms
std
imulb
and
lea
push
mov
ret
ret
lahf
mov
ss
or
mov
add
add
xchg
inc
push
push
push
popa
arpl
iret
adc
xchg
sti
fldl
inc
mov
cld
cmovp
jnp
cmp
std
aad
pop
xor
repz
cmpsb
jne
pop
int
mov
or
inc
fcoms
imul
data16
xor
xchg
pop
int3
fsts
gs
xchg
sbb
jl
add
mov
fisubl
dec
daa
movsl
lret
pop
push
xchg
ret
subb
jmp
in
in
test
loopne
mov
mov
sub
or
adc
xchg
xlat
push
add
sub
xchg
pop
pop
call
dec
je
lret
in
out
lret
jnp
adc
test
daa
xchg
jno
xor
mov
push
mov
fwait
fs
out
out
jne
repnz
lahf
dec
sub
imul
cmp
inc
or
push
ds
inc
mov
lods
xlat
addr16
fistl
xchg
mov
std
test
sbb
lahf
repz
push
mov
in
sub
mov
mov
stos
xchg
dec
adc
fistps
or
jmp
xchg
add
das
cmp
adc
icebp
xchg
movsb
xor
es
cld
push
jecxz
jge
mov
dec
inc
jle
ret
or
cmc
mov
mov
out
adc
out
adc
adc
out
rcrl
in
aas
and
fisubrs
dec
in
jno
xlat
sub
into
stc
and
pop
mov
rcrl
cmp
jle
repz
xor
cmp
fwait
mov
push
jge
lahf
push
je
int3
sbb
cmp
xor
addr16
xchg
aas
inc
xor
das
add
lret
inc
pop
mov
inc
pushf
les
lret
jnp
push
jo
jno
push
push
jp
xchg
inc
jb
mov
mov
jmp
fisttpl
jl
cmp
and
push
inc
daa
adc
add
cmp
sbb
bound
or
adcl
mov
mov
int3
cld
loop
xchg
int
testl
mov
mov
sub
movsl
mov
pop
into
add
sbb
pop
add
inc
inc
mov
xor
jecxz
in
dec
jl
mov
sub
rclb
les
loope
pushf
xor
call
lds
movsb
out
add
xchg
roll
stos
dec
mov
fwait
mov
repz
lock
dec
aad
push
test
push
js,pn
rcrl
fwait
mov
push
rorb
jmp
sub
aas
pop
loop
mov
mov
jae
xchg
mov
mov
das
adc
cmp
repz
jle
aas
or
xchg
stos
push
cmpsl
bound
xor
mov
mov
dec
cmpsb
iret
mov
xchg
add
aas
dec
jge
mov
arpl
test
pop
inc
pop
add
cmpsb
cmp
fstpl
pop
testl
cmp
outsl
push
lock
pop
je
push
xorl
jle
sti
jle
out
xlat
sbb
popa
add
push
movsb
pop
popa
clc
jp
pusha
loopne
repz
dec
jp
arpl
out
add
jne
mov
jnp
lret
dec
rcl
xchg
test
loopne
stos
mov
cwtl
ficoms
and
push
xchg
xchg
mov
or
es
sahf
jbe
in
mov
or
pop
movsl
mov
inc
loopne
scas
mov
dec
inc
or
rcrl
stos
into
inc
pop
in
push
lcall
sub
pushf
adc
push
jne
lds
jl
jo
dec
inc
mov
int3
sbb
push
jle
inc
jne
or
out
push
mov
dec
ljmp
fnstsw
and
dec
les
dec
into
xorb
or
rcrl
xor
sbb
or
aam
lret
adcl
sub
sub
jg
in
hlt
imul
pop
add
out
lcall
das
shll
icebp
cmp
cmpsb
sub
inc
gs
sti
push
pop
pushf
push
pop
xchg
ret
movsl
mov
inc
das
add
mov
rcr
cwtl
pop
dec
xor
out
mov
or
pusha
add
add
pop
pop
pushf
mov
mov
mov
pop
inc
aam
push
add
jmp
fisubl
jle
nop
sbb
ja
out
xor
arpl
mov
fbld
dec
aam
aam
mov
mov
jno
cltd
adc
mov
aas
inc
repnz
ss
push
repnz
aam
dec
ret
nop
rcrb
enter
inc
ror
mov
pop
insl
inc
enter
inc
pop
fcoms
mov
dec
xorb
adc
mov
push
cmpsb
mov
es
jns
fsubr
icebp
and
filds
mov
add
or
fmull
lods
dec
pop
movsb
xchg
test
orl
cltd
or
mov
sbb
pop
stc
pop
jns
pop
rorl
jmp
and
add
xchg
mov
jns
push
js
sti
mov
jne
sbb
xor
scas
lea
roll
cmc
or
push
pushf
outsl
adc
imul
mov
adc
inc
inc
mov
xchg
dec
add
lods
jno
mov
aam
lret
aad
enter
ja
xor
and
repnz
or
sub
pop
ret
or
push
rcrb
imul
flds
sub
cmpsl
out
jecxz
push
movsb
pop
xchg
cmc
imul
cmp
popa
adc
fildll
jno
fs
pop
jbe
xor
jp
sarl
sbb
and
repz
dec
xchg
xchg
mov
mov
ss
or
cmp
jle
lea
adc
xchg
inc
insb
mov
inc
pop
mull
jmp
xchg
push
psubusb
std
cmp
and
cwtl
inc
xchg
out
movsl
rcrl
mov
pop
mov
jl
push
mov
cmp
idivb
adc
leave
cltd
lock
test
orl
xchg
mov
or
fsubs
test
adc
popa
mov
mov
loope
or
ret
sub
gs
int
rolb
or
mov
pop
nop
out
fisubrl
insl
mov
sbb
adc
call
cli
rcrl
push
cmp
je
test
cmp
jmp
sahf
into
jp
push
sbb
sbb
ficompl
fidivs
jne
scas
mov
push
xorl
lcall
dec
shr
lret
out
call
int3
clc
frstor
or
or
movsb
adc
sbb
push
dec
mov
addr16
pop
hlt
aaa
pop
inc
scas
mov
mov
cmp
pop
mov
sahf
xor
fists
jg
loope
in
dec
or
sbb
cmc
stos
loope
pop
mov
test
jbe
mov
ret
adc
xor
sbb
mov
repz
int
sbb
jns
shlb
push
xchg
mov
sahf
stc
cmp
jge
and
inc
mov
stc
xchg
add
out
add
fistpl
insb
sub
mov
mov
dec
push
and
shll
loope
int
xchg
ficompl
mov
mov
hlt
jecxz
ret
cmp
gs
imul
in
fisubrl
push
xchg
sbb
xor
jne
data16
jmp
out
out
cmp
clc
xor
mov
dec
test
lock
in
outsl
inc
out
adc
shrl
sub
dec
cmp
sub
xor
out
cmp
mov
adc
xor
in
mov
xor
cmpl
push
pop
cmc
cmp
inc
add
ficoms
jl
push
ffreep
stos
xor
add
lea
imul
mov
sbb
fmull
fmull
cmp
sarl
sbb
xchg
xlat
sub
cltd
loopne
aam
jle
lock
ror
pop
dec
jnp
mov
inc
mov
mov
dec
sub
jmp
xchg
xchg
push
std
fldl
pop
dec
iret
out
push
pop
pusha
jnp
xor
in
mov
loope
adc
sbb
push
fs
push
shl
xor
fnstenv
jecxz
add
int
push
movsb
out
fadd
into
push
sub
rclb
icebp
fsubrl
inc
repnz
push
push
mov
inc
or
mov
jge
xor
mov
shlb
jg
inc
pop
mov
dec
pusha
pop
sub
inc
scas
popf
add
das
pop
mov
mov
pop
orl
cmp
xchg
es
adc
dec
dec
mov
sub
sub
jo
popa
mov
iret
dec
mov
mov
pop
dec
add
pop
stos
dec
in
xchg
mov
push
mov
xchg
lahf
mov
scas
imul
std
jle
movsl
push
dec
pusha
fwait
adc
sub
mov
ss
cmp
dec
je
xchg
sahf
mov
lret
enter
jl
or
adc
mov
aaa
push
cmp
or
dec
cmpsb
repz
in
mov
push
sub
xchg
jb
inc
or
mov
loopne
and
loopne
pushw
add
mov
daa
or
jg
push
mov
fstpt
dec
push
mov
push
loope
adc
jle
fcmovb
stos
movups
testl
sbb
andl
ret
cli
test
sarl
xchg
xchg
repz
lahf
bound
dec
jp
out
xchg
incw
bound
inc
mov
mov
cmpsl
movsl
int
movsb
jbe
mov
lods
ret
std
mov
aaa
int3
inc
adc
lock
xchg
push
repnz
cmpsb
inc
fldl
stos
add
or
vphadduwq
add
fcompl
aad
sbb
push
mov
out
jl
pop
rcll
lods
lock
gs
sub
adc
cld
mov
leave
in
jmp
dec
inc
mov
xorl
jne
clc
sahf
mov
ret
cmp
int
dec
dec
xor
mov
dec
rorl
rcll
into
ret
sahf
loop
mov
fiaddl
orl
xor
pop
fnstenv
add
xor
stc
mov
lahf
pop
adc
dec
sbb
incl
adcb
xchg
imul
loopne
and
lods
rep
loope
das
ljmp
sbb
in
mov
or
mov
movsb
mov
stc
and
cmp
fdivl
jns,pt
mov
ss
jne
sbb
test
pop
cli
imulb
jae
scas
popf
and
mov
pop
or
mov
dec
adc
jg
inc
dec
sub
insb
les
bnd
jmp
sar
repnz
lea
aas
inc
pushf
hlt
lret
jmp
adc
lods
and
sub
mov
mov
ja
jne
clc
data16
and
xor
and
test
lods
fisubrs
sbb
int
mov
orl
ds
mov
aas
loopne
sbb
or
jnp
mov
cld
jbe
xchg
add
js
mov
insl
xchg
rclb
lahf
imul
push
push
pop
mov
jle
shll
dec
xor
mov
sbb
jne
mov
aaa
pop
lcall
jb
mov
push
repz
mov
movsl
mov
icebp
xor
hlt
adc
pop
in
jl
sub
int3
or
push
or
out
adcb
xor
addr16
pop
cmc
cmp
in
xlat
adc
xchg
iret
push
cmp
fisttpll
mov
mov
mov
xchg
mov
push
test
add
shlb
mov
jmp
loopne
sbb
xor
aas
andl
dec
xlat
mov
inc
lea
adc
and
jnp
popl
jne
push
popa
fiadds
xchg
aas
in
imul
pop
enter
js
out
push
int3
and
jmp
adc
sub
push
stc
pop
lods
in
loopne
mov
lret
stos
sub
repnz
mov
pop
ja
das
fimull
out
subl
jns
insl
push
add
addl
push
or
and
ret
imul
mov
mov
mulb
imull
je
mov
fs
aas
outsb
test
xchg
jecxz
stos
cmpsb
dec
pop
jb
xchg
loop
repz
stc
sub
push
mov
loope
mov
xor
pop
mov
push
ljmp
xchg
shrl
mov
adc
jp
or
adcb
dec
cmp
cmp
testl
fsubl
je
sub
pop
mov
das
es
iret
aam
pop
daa
lcall
dec
fld
jbe
jl
sub
test
movsl
mov
sub
mov
aaa
jno
pop
out
dec
sbb
add
andl
mov
movsb
push
jl
out
arpl
cmp
outsb
sbb
fcmovnbe
shrb
push
les
mov
std
and
jno
jecxz
lds
fdivrl
sbb
icebp
jns
subb
push
or
stc
cli
mov
pushf
cmp
cmc
xor
jbe
or
sbb
inc
push
mov
test
inc
mov
fists
xchg
pusha
shll
enter
xchg
idivb
dec
int3
mov
inc
pop
cmp
rcr
xchg
data16
sub
cltd
xchg
cld
dec
movsl
pop
or
je
push
adc
pop
jae
scas
jno
push
inc
fsubr
add
nop
daa
into
sbb
jge
mov
jle
sub
push
and
xor
loopne
rep
xchg
sbb
mov
mov
stc
stos
cmp
xor
mov
sub
mov
adc
xchg
ljmp
mov
rclb
popf
inc
xchg
cmp
faddl
mov
mov
xchg
pop
xchg
xor
jb
lahf
mov
aas
xor
sub
mov
mov
sbb
push
jmp
push
in
dec
mov
xchg
cmc
pop
and
or
mov
sbb
cmp
inc
cltd
scas
push
sbb
mov
test
and
in
iret
cmp
das
hlt
or
pop
arpl
ja
inc
std
dec
sar
movsb
fucomip
insb
out
mov
cmp
jbe
pop
aad
fnstcw
subl
lods
negl
call
xor
adc
push
js
push
mov
and
js
or
push
pop
repnz
push
sbb
sahf
repz
dec
lret
test
jo
sbb
dec
in
push
pop
add
xchg
jge
adc
and
pop
sub
loop
xchg
sar
cmp
mov
lods
xchg
cs
test
aad
sarl
mov
jb
les
pop
aaa
in
in
sbb
aad
mov
xchg
test
loop
pop
ret
and
inc
orl
or
rcrb
jo
inc
xchg
cld
imul
xchg
repnz
loopne
adcb
movsl
outsb
mov
mov
jge
out
pop
mov
jo
add
stos
push
inc
mov
and
movsl
loope
add
xchg
mov
pop
in
inc
and
xchg
xor
jae
mov
and
inc
mov
lret
and
scas
dec
or
jne
enter
ss
sub
xor
and
or
jae
icebp
pop
ret
ja
add
popf
and
and
inc
sbb
movups
push
int3
push
test
ljmp
pushf
mov
push
inc
xchg
lock
sub
jns,pn
sub
jle
and
jp
cmp
fwait
inc
fsubrl
sub
or
mov
mov
sbbl
out
ds
add
out
jle
xchg
rcll
loope
cmp
enter
stos
imul
inc
lock
dec
out
push
adc
push
cmp
fnstcw
cwtl
pop
cmp
bound
xor
mov
loope
push
inc
push
int
jnp
out
out
or
flds
in
dec
cmp
jbe
jae
or
ss
mov
push
bswap
xchg
jecxz
pop
dec
mov
mov
cmp
lcall
scas
lret
sbb
or
outsl
inc
pop
push
and
imul
bound
sub
inc
bound
test
and
ret
mov
fwait
jne
jns
pop
aaa
cmp
rclb
or
cmp
cmp
repz
inc
addr16
and
pop
loop
inc
xchg
add
fwait
pop
shr
movsl
xchg
pop
pop
ficoms
cwtl
push
jne
out
jbe
test
and
mov
jns
cmc
hlt
dec
sbb
jno
jecxz
mov
add
pop
push
mov
imul
pop
fisttps
jl
cmp
push
arpl
outsl
adc
in
aad
add
push
pop
mov
xor
int3
adc
fisttpll
ja
addr16
jno
sti
cld
pop
xchg
mov
lods
arpl
sbb
mov
dec
adc
or
mov
in
sti
fiaddl
jle
in
mov
icebp
pop
jp
xchg
test
xchg
xlat
pop
sub
or
scas
rorl
jbe
into
imul
jge
cmpsb
enter
lds
lahf
out
aaa
shll
aaa
stos
dec
mov
cwtl
fs
test
push
cmpsl
dec
jnp
orb
sub
pop
rcll
mov
stos
ret
loop
into
inc
sbb
or
stc
gs
or
jp
jecxz
ret
add
fdivl
popa
stc
mov
push
roll
jecxz
jne
clc
xchg
je
inc
jmp
adc
push
dec
stc
cmc
and
mov
lret
xchg
pop
std
xor
and
and
femms
xor
xor
add
sbb
fisubrs
inc
xor
out
repz
mov
sbb
jge
or
mov
dec
ljmp
fisttpl
mov
inc
and
mov
int3
mov
fldcw
fstpl
inc
stos
xor
inc
xchg
push
arpl
mov
jmp
test
or
push
stc
ud2
jae
xchg
xchg
or
and
sub
jno
ds
jno
xor
mov
pop
in
push
ljmp
xlat
sbb
lea
fstl
cmp
sub
loop
data16
mov
sbb
sbb
xchg
test
jl
pop
fwait
xor
cld
xchg
out
mov
ficoms
cmp
adc
imul
xor
xlat
adc
inc
movsb
test
out
in
pop
mov
cld
in
add
mov
nop
adcb
pop
adc
lret
dec
inc
pusha
jge
cmpsb
repnz
inc
in
stos
inc
pop
mov
movsb
aam
xor
gs
sahf
fcmove
cltd
adc
inc
mov
stc
test
sti
or
adc
adc
cmp
or
mov
repnz
mov
hlt
stos
pushf
sub
sub
jg
clc
ss
test
dec
in
mov
pop
and
mov
cmp
inc
push
or
and
inc
cmc
push
sub
and
jmp
mov
adc
xor
lret
xchg
aas
lcall
es
or
add
pop
mov
mov
ds
sub
pusha
mov
jns
out
dec
das
adc
js
test
es
in
add
mov
or
add
xor
push
lds
pop
out
cmpb
xchg
cmp
push
imull
push
data16
popa
sti
add
roll
lret
and
mov
cmp
jmp
mov
je
and
aas
mov
push
and
sub
jle
inc
iret
mov
mov
mov
imul
stos
or
jmp
sahf
fs
push
in
scas
fists
cmp
daa
jne
sbb
push
cmc
xchg
pusha
daa
mov
in
gs
mov
or
fisubs
daa
cmpsb
nop
ds
cmp
pop
fsubr
mov
and
mov
imul
xchg
jmp
cs
movsb
jle
xchg
insb
mov
xchg
in
testb
inc
ljmp
xchg
add
cld
sahf
insl
daa
add
cli
add
xlat
cmp
push
xchg
push
lds
add
ljmp
add
stos
sub
adc
filds
fiadds
imul
test
shll
hlt
hlt
jmp
xchg
test
sub
incl
int
inc
mov
ret
aad
fldenv
push
push
mov
adc
xor
inc
xor
stos
xor
fs
enter
pop
xchg
jbe
mov
mov
sub
and
insl
inc
or
imul
push
cmp
inc
fdivr
cwtl
clc
and
loop
flds
les
fldl
sbb
adc
clc
outsl
ljmp
sbb
sti
jl,pt
iret
int3
pop
out
les
push
push
je
lea
fldenv
cld
lahf
and
cwtl
pop
fbstp
test
popf
lods
test
cli
mov
push
sub
les
stos
push
pop
mov
xchg
push
mov
pop
jl
mov
gs
insl
push
xchg
ret
in
in
cwtl
xchg
jmp
mov
into
in
stos
jle
cmp
mov
dec
lock
std
insb
mov
adc
xchg
fs
call
pop
pushf
jmp
pop
sbb
adc
mov
sub
jl
fdivrp
out
jne
push
sub
pop
imul
or
inc
les
pop
hlt
frstor
ret
sarl
rclb
mov
dec
mov
or
mov
aam
addl
imul
mov
cmp
movsl
cmpsb
xchg
ja
dec
xor
mov
mov
fildll
testb
in
mov
cmp
adc
stos
mov
jmp
pop
mov
mov
mov
cmpl
sub
push
jo
push
pop
or
das
mov
scas
sbb
loope
or
mov
cmpb
stos
imul
mov
orl
enter
test
jg
jmp
cmc
mov
sbb
push
cmp
push
hlt
cmp
sti
cmpb
xlat
cmp
cli
jb
ds
push
lea
add
les
sbb
out
insl
dec
rorl
out
xor
jp
jbe
mov
std
cltd
fadds
ds
xor
ret
test
das
es
jle
inc
dec
dec
shll
ret
sub
cmp
jbe
cltd
cmp
jnp
mov
cmp
mov
testb
fidivs
dec
dec
jle
fsubrs
jns
jo
adc
sbb
stos
add
fisttpll
adc
imul
xor
inc
inc
jno
mov
jmp
and
xchg
mov
xchg
insl
xchg
jb
sbb
adc
pop
in
pop
pop
les
lahf
iret
je
stos
sub
sub
or
inc
push
aam
popf
adc
inc
mov
pusha
push
jecxz
rcrb
js
cltd
adc
iret
mov
sub
pandn
inc
xor
xor
out
dec
rolb
dec
aas
adc
dec
imul
enterw
aaa
stc
add
dec
jae
neg
pop
int3
cmp
sub
scas
je
mov
lds
push
jne
clc
xor
rcrb
cs
pop
or
movsl
aad
es
jle
jb
out
cmp
sub
xor
adc
push
xchg
push
dec
sub
repnz
inc
std
fnsave
out
push
mov
popa
xchg
cmpsl
cmp
call
or
mov
fldenv
add
xor
popa
push
aas
pop
jns
or
add
sbb
mov
push
push
mov
flds
out
push
fcmovne
ja
pop
pop
fistpll
fiaddl
sti
test
lea
test
jle
sub
lcall
and
sub
je
mov
bound
cld
adc
call
push
mov
sub
ret
inc
dec
pop
cmp
dec
cmc
push
pop
jnp
push
call
xchg
mov
ds
push
sbb
dec
inc
adc
xlat
lods
sahf
das
cli
push
or
push
rol
jne
jne
lea
pop
int3
xchg
add
sub
mov
pop
pop
repz
out
xchg
mov
sbb
in
in
pop
mov
mov
iret
add
mov
js
lret
push
cmpsl
mov
mov
out
scas
inc
add
inc
loopne
mov
icebp
sbb
or
or
add
mov
push
sahf
popf
ret
in
movsb
and
lock
imul
jbe
std
fidivrs
mov
mov
jbe
arpl
jecxz
frstor
iret
jnp
dec
stc
and
fidivl
loope
scas
loopne
or
dec
pop
test
jge
sub
fwait
imul
aas
inc
mov
imul
in
xor
and
nopl
mov
pop
jnp
daa
cld
roll
jg
or
repnz
addb
push
xchg
jbe
out
push
jnp
and
mov
inc
mov
in
in
imul
xlat
mov
xorl
test
call
test
xor
pop
jp
add
jmp
sub
pop
lea
mov
test
stos
ret
adc
cmp
je
cld
mov
jp
rolb
and
or
ss
push
mov
cs
push
dec
test
pop
jo
adc
add
xchg
enter
pushf
daa
cvtps2pi
lods
dec
jg
mov
jno
mov
jno
push
gs
repnz
push
lds
outsb
mov
daa
and
jne
cmc
mov
insb
dec
mov
ficomps
loope
mov
inc
add
jmp
adc
imul
or
pop
je
ret
xchg
and
aam
dec
push
add
test
cmc
loopne
pop
push
ret
lods
adc
jnp
addr16
cwtl
mov
loop
dec
shll
cmpsl
aas
adc
stos
push
push
cmpsb
jle
push
cmpsb
pop
adc
jo
cmpsl
sahf
addr16
xchg
pop
ljmp
sbb
mov
adc
leave
jge
scas
and
xchg
pop
mov
mov
test
movsl
fidivl
lds
dec
xchg
sbb
mov
das
push
push
push
and
lea
mov
shlb
mov
dec
out
sub
insb
mov
jmp
gs
into
push
push
stos
cmpl
mov
cs
mov
fs
call
insl
dec
pop
xacquire
gs
xchg
add
lret
std
jge
ds
sbb
fstpt
push
sub
addr16
popa
arpl
cmp
or
cs
xor
out
icebp
push
imul
and
addb
pop
mov
sub
pop
addl
das
jl
mov
and
scas
cmp
mov
dec
or
cmpsl
daa
add
outsb
fistpl
popa
fadds
mov
adc
xchg
pusha
clc
sbb
fnsetpm(287
movntps
mov
sbb
shl
stc
outsb
inc
mov
xchg
jbe
rorl
clc
or
inc
nop
xchg
movsl
daa
sbb
pop
stc
hlt
dec
cmp
adc
push
push
mov
imul
ret
adcl
push
and
es
scas
dec
leave
rcr
mov
or
shlb
add
adc
js,pn
fcompl
out
cs
cmp
inc
sti
cmp
hlt
insl
sbb
lock
es
outsb
fnsetpm(287
rcrl
dec
jns
xchg
mov
lods
push
inc
sbb
jle
scas
push
shlb
mov
lea
cmp
loop
pop
cltd
mov
sbb
add
mov
jle
mov
push
xchg
inc
outsb
mov
cmp
jne
jmp
cmp
pop
mov
aaa
sub
pop
imul
repz
push
and
out
cwtl
mov
cmp
or
ja
orb
ja
gs
mov
shlb
rcrb
cmp
pop
lahf
add
inc
cmc
push
lea
pop
in
xchg
mov
ljmp
pop
xchg
out
mov
pop
pop
lods
repnz
sahf
mov
jmp
sbb
loop
cmp
lahf
push
enter
dec
cmp
test
ljmp
ja
inc
sarl
or
lret
cmc
pop
call
jno
jmp
int3
shll
pop
cmp
inc
arpl
push
jmp
jecxz
sahf
lock
add
int
add
shll
dec
test
cli
rorl
mov
adc
xchg
jge
inc
push
fmull
pop
lret
mov
inc
dec
adc
sub
mov
and
push
xchg
arpl
aad
fistpll
scas
fadd
lods
addr16
mov
pop
dec
push
iret
mov
iret
bound
mov
pop
jmp
clc
loope
inc
jge
jmp
into
aas
push
aam
cmp
or
or
and
cmp
addr16
push
aad
pop
aaa
and
lods
outsl
lods
js
mov
shlb
lods
mov
xchg
adc
inc
add
mov
rolb
out
mov
mov
fdivr
int
push
fs
cmp
lock
jg
xchg
std
fimuls
mov
js
or
and
cli
jge
fcmovne
stos
pop
and
mov
aam
mov
lock
sub
fcomps
xchg
add
push
adc
and
sti
adc
enter
bound
lcall
lock
jae
mov
lret
pop
in
mov
mov
add
sbb
add
add
mov
mov
add
sub
rorb
sti
mov
inc
jl
or
sbb
rorb
inc
push
fadd
sbb
pop
pop
inc
adc
jns
cld
lcall
sub
xor
in
mov
mov
pop
jmp
mov
jg
dec
pusha
push
mov
mov
les
dec
out
scas
out
lock
push
cmp
or
cmc
cmp
and
cmc
int3
mov
pop
jbe
and
sub
in
dec
out
ss
into
inc
out
lods
sub
jg
xchg
subb
xor
sbb
sarl
shll
fsubrl
pop
daa
push
sub
cmp
int3
or
sub
mov
fidivrl
sbb
mov
out
pop
push
dec
sub
lods
jns
fnstsw
push
push
adc
lods
or
popa
fidivs
xchg
in
sbbl
mov
mov
jl
idivl
mov
xor
xor
jle
testl
shrl
adc
cmp
test
lea
in
and
cwtl
sar
add
mov
lret
pop
dec
stc
adc
ss
push
in
bound
lret
fnstsw
in
pop
push
cltd
jae
rcr
and
jns
add
loop
jae
add
rorb
lods
aad
in
popf
stos
sub
push
dec
sbb
push
cmp
int
xlat
and
push
jae
or
dec
cld
pop
add
push
adc
lea
ficomps
decl
std
cltd
fimuls
cld
daa
mov
sbb
mov
mov
gs
in
pop
inc
fldenv
jle
xchg
repnz
sbb
jecxz
movsb
inc
sarb
or
sbb
jno
cmp
sbb
ret
mov
or
popf
pushf
jmp
shll
push
out
cwtl
cmp
inc
cwtl
loope
lea
pop
dec
notl
outsb
jns
jnp
jp
xchg
out
imul
pop
mov
stos
cmp
jmp
sbb
lcall
mov
rorb
aam
adc
aam
mov
add
xlat
xlat
mov
enter
lcall
mov
inc
xchg
push
stos
pop
mov
lock
mov
loop,pn
nop
dec
or
dec
mov
mov
bound
adc
sbb
sub
iret
jmp
les
inc
sbb
push
pushf
fistl
orb
div
inc
xor
loopne
fisubs
ljmp
xor
push
rcrl
dec
mov
jle
push
fimuls
iret
bound
lahf
pop
add
out
aam
push
movsb
in
pop
in
push
lcall
jne
xchg
xchg
cmc
dec
movsl
xchg
jecxz
mov
fmuls
nop
cld
fistl
lret
negl
ss
adc
out
cmp
xchg
adc
sub
ja
xor
and
pop
pop
out
add
sahf
loop
in
in
push
inc
adc
pop
out
fadd
mov
fmuls
int3
imul
xchg
xor
rcrb
in
push
xchg
and
icebp
xchg
cld
add
aad
lahf
imulb
push
xchg
mov
out
push
sub
outsl
or
mov
cli
jle
fadds
sti
sahf
mov
movsb
push
sub
mov
mov
sbb
ret
arpl
dec
pop
mov
or
jnp
and
push
push
pop
cltd
out
inc
out
push
mov
ja
cmp
rol
adc
push
adc
js
sahf
rorl
out
fisubs
fs
sbb
sub
rcr
in
aaa
in
cmp
jecxz
adc
xor
loop
in
das
insb
push
fldcw
xor
adc
xor
or
arpl
sbb
test
sub
push
stos
lods
lods
add
inc
push
enter
sub
inc
ror
clc
mov
mov
mov
movsl
xchg
mov
outsb
or
sub
mov
and
pop
jge
cmp
ljmp
leave
sbb
loop
lcall
lea
xor
mov
dec
jle
int3
iret
cs
adc
mov
in
bound
rolb
scas
mov
add
jp
leave
sub
push
ds
sbb
fnstcw
xchg
xor
inc
scas
nop
xchg
add
notb
mull
popl
mov
and
push
movsb
loopne
dec
test
icebp
in
mov
push
or
out
and
fisttpll
and
cld
fnsave
mov
jae
or
stos
cs
inc
pop
sub
sahf
and
push
pop
xor
ret
fistpl
adc
popf
cmpsb
xchg
call
stos
aad
jae
test
aas
inc
pop
push
sti
or
jmp
imul
jnp
cmpb
sar
mov
sub
fdivl
andb
and
mov
aad
into
dec
or
xor
sbb
roll
cmp
dec
test
insb
cmpsl
out
mov
lds
mov
fwait
lahf
jle
xchg
subb
pop
ret
inc
push
or
xchg
dec
xchg
fdivp
ret
mov
pop
dec
popl
push
push
scas
xchg
addl
cld
sbb
shl
mov
xchg
inc
out
adc
push
orb
pop
jmp
jnp
or
imul
cli
mov
test
dec
jbe
or
icebp
jae
push
add
sbb
mov
lods
and
movsb
jne
scas
in
jge
cmp
push
add
vpunpcklwd
outsb
mov
pop
cmpsl
pop
std
xor
or
xchg
or
sti
inc
jg
mov
push
mov
ret
jne
mov
mov
or
xlat
int
call
xchg
jp
popa
js
cmp
daa
icebp
add
inc
or
pop
ficompl
cli
mov
mov
mov
shlb
add
sbbb
pop
xchg
jecxz
mov
dec
and
mov
sahf
inc
sub
xchg
cmp
test
pop
ss
fsts
pop
enter
xor
lea
add
aas
cmp
xor
in
arpl
lret
cltd
lock
cmc
and
lret
mov
iret
and
lahf
outsl
loope
lcall
stos
jmp
dec
cmpsl
xor
imulb
fmull
lcall
clc
jl
scas
mov
xchg
mov
add
cmp
cs
jae
jg
fdivrl
js
xchg
rorl
or
aad
xor
movsl
test
pop
adc
inc
daa
stos
and
jnp
lds
aas
aad
pop
sub
ret
jg
out
jb
outsb
dec
test
mov
mov
jb
pop
hlt
inc
adc
and
sub
cmp
pop
fistps
push
jae
fisttpl
cltd
pop
aam
and
rcr
pop
aam
sahf
lahf
enter
jno
inc
jge
push
fwait
in
mov
scas
dec
xor
pop
or
in
inc
dec
int
mov
out
jg
push
push
sub
fs
cmp
jb
rcrl
dec
xor
push
cmp
cltd
cmp
fsubl
push
test
fdivr
int3
xchg
lret
shlb
mov
testb
push
outsl
add
or
lret
and
push
ljmp
rcrl
mov
clc
out
mov
xchg
push
push
ror
cltd
inc
outsl
and
lods
pop
push
stos
pop
stos
sbb
gs
hlt
push
jb
or
xlat
jbe
xor
lock
inc
mov
mov
or
xchg
test
insb
dec
sbb
int3
jnp
imul
repnz
adc
adc
mov
js
push
xor
cmc
or
cmp
mov
movsb
mov
movsl
and
add
mov
jbe
mov
fcoms
ret
insw
dec
xchg
or
mov
dec
mov
ja
add
fmuls
loopne
inc
rcrb
fs
xchg
mov
clc
add
and
pop
and
cld
addr16
or
js
loopne
loopne
add
dec
mov
and
jle
jmp
ficomps
mov
dec
fldenv
pushf
ds
insl
xor
loop
sti
in
sub
in
sti
push
mov
pop
sbb
in
aaa
in
dec
mov
cli
mov
sub
or
repz
in
loope
lds
pop
mov
imul
das
add
inc
mov
in
jo
mov
xor
repz
adc
lcall
add
jecxz
lret
ret
in
inc
and
call
pop
push
je
decl
cmp
dec
xchg
sbb
pop
outsl
pusha
cmpsb
push
out
adc
mov
add
mov
xlat
arpl
xchg
lea
mov
lds
xor
test
fistps
pushf
lret
mov
xlat
std
lahf
aam
test
push
adc
test
arpl
sbb
lds
popf
push
pop
andb
mov
insb
sbb
pop
adc
add
loop
jnp
sbb
sbb
mov
jl
imul
xor
test
ja
adc
cmp
jl
clc
sbb
sti
push
call
add
xchg
jp
sub
jns
lods
in
push
popf
push
inc
add
cmpsb
pop
pop
or
out
adc
add
mov
lock
fs
loopne
int3
push
cltd
imul
enter
mov
jge
addb
ret
sbb
incl
mov
in
mov
push
mov
imul
mov
cmp
push
jno
inc
adc
xor
test
popf
mov
sub
xchg
in
in
rolb
popa
push
pop
adc
je
fs
pushl
inc
jb
insl
cli
rorl
add
jecxz
and
push
dec
aas
pop
fstp
jge
popa
xchg
loope
inc
ja
enter
sarl
aaa
insb
xchg
ret
mov
mov
into
mov
adc
pop
and
fs
out
in
popf
les
xchg
or
lea
or
xchg
fisubrs
lret
sub
rcrl
fcomps
test
cmp
insl
and
jnp
movsl
stos
xor
mov
push
inc
xchg
jp
and
jb
mov
dec
inc
or
lock
out
popf
or
and
int3
mov
sti
int
arpl
mov
and
add
jecxz
pop
mov
xchg
scas
cwtl
call
out
repz
popf
adc
jno
and
cwtl
arpl
mov
add
cmpsb
movsl
mov
int3
orb
xchg
aam
loope
fildl
cli
xchg
ja
xor
cmp
inc
jle
lcall
lods
mov
dec
nop
aas
jcxz
dec
push
daa
jbe
cmp
and
push
xor
out
nop
push
jge
in
cmpsl
insb
jo
sub
sbb
cli
fs
mov
daa
and
sti
push
mov
mov
test
gs
fcompl
mov
xlat
rsqrtps
jg
dec
pop
pusha
pop
jns
mov
addr16
sbb
jb
sub
sub
lods
int
mov
fmul
arpl
cmpsl
pop
insl
insb
mov
nop
stos
adc
inc
adc
daa
mov
jp
adc
xchg
lcall
push
push
cmp
sub
arpl
ret
mov
mov
insl
in
cld
mov
push
mov
lret
mov
pop
inc
or
push
or
leave
mov
cli
pushf
push
mov
roll
mov
lret
icebp
fcoms
or
or
das
jecxz
adc
rorl
jbe
and
mov
sub
test
sbb
loope
mov
xorl
push
in
repnz
xchg
push
ss
push
mov
fidivl
aas
sbb
loope
les
jbe
inc
add
mov
push
sbb
stos
sbb
mov
push
xor
mov
lahf
dec
jne
mov
jle
lcall
push
fs
test
jnp
xor
mov
movsb
or
cmp
mov
xor
add
and
stos
xchg
xor
cmpsw
test
in
xlat
mov
mov
cmc
fcoms
or
xchg
xor
dec
shll
xchg
andb
sbb
xchg
pop
mov
outsl
and
or
mov
outsl
push
popf
lods
push
or
xchg
and
mov
roll
mov
cld
cmp
mov
and
jge
lahf
xchg
scas
sub
stos
and
add
out
lret
mov
mov
or
lret
add
frstor
jno
pop
lret
imul
cmc
sub
ja
sahf
xchg
mov
push
push
mov
arpl
lahf
xor
inc
push
lock
fisubs
dec
scas
sar
incl
ljmp
inc
adc
add
xlat
ljmp
sub
lods
into
repz
leave
nop
scas
xor
mov
rclb
lock
and
shrb
pop
pop
es
adc
fldl
icebp
pop
sub
lods
out
mov
aaa
insl
daa
mov
out
enter
add
or
cmp
mov
sbb
add
pop
push
sub
push
rcrb
jb
sti
enter
cmp
flds
fisubs
idivl
into
inc
in
sub
or
sub
mov
das
push
cli
fimull
stos
xchg
and
mov
insb
arpl
dec
xor
inc
and
pop
fnstcw
gs
stc
xchg
outsl
xor
jle
and
stc
or
jae
inc
mov
test
mov
mov
out
std
int
mov
insl
js
and
mov
dec
jo
fdivr
pop
or
int3
pusha
rolb
cmc
and
adc
ret
xlat
push
add
cmp
cwtl
movsb
fsubs
outsl
jb
cmp
ja
out
je
mov
roll
and
pop
sets
je
adc
inc
rcrb
hlt
popf
or
roll
inc
push
out
add
adc
jle
cmp
fst
and
test
stos
add
pop
roll
in
dec
je
dec
add
mov
in
push
push
lahf
xor
push
inc
mov
cld
mov
mov
adc
sar
cwtl
in
icebp
inc
test
jle
cmc
mov
jne
addb
jle
pop
jecxz
xor
js
jg
pop
xchg
fcmovne
fsubrs
xor
sub
pushf
and
dec
stc
adc
outsb
mov
hlt
adc
cmp
adc
xchg
push
test
ret
or
clc
jno
lea
popl
adc
add
jle
imul
inc
fcompl
mov
and
sub
dec
push
imul
jl
and
mov
addr16
std
repz
push
push
enter
les
dec
sbb
cmc
test
fsubl
jo
xor
or
and
adc
imul
cli
inc
add
jge
and
movsl
popa
pop
rorb
xchg
decl
outsl
xor
loop
xor
cmc
out
inc
xchg
std
bswap
lret
push
mov
adc
xchg
cmp
inc
cs
hlt
adc
cmp
cld
mov
int3
test
lea
xor
std
ror
or
incl
int
jo
les
pop
pop
cs
out
shlb
adc
icebp
cmp
adc
xchg
mov
add
rcll
adc
fcoms
std
int3
adc
fbstp
notl
adc
das
nop
loop
fdivr
mov
sbb
adc
lea
push
andl
xchg
jle
out
jmp
jge
jg
sbb
int3
test
test
mov
push
out
lods
insl
pushf
hlt
leave
jp
cmp
inc
sub
pop
fcmovbe
ja
push
mov
mov
arpl
jmp
in
icebp
xchg
das
fisttpll
aad
enter
loop
sbb
stc
push
pop
and
out
fs
outsl
fldenv
lahf
stos
push
out
mul
mov
icebp
pushw
dec
inc
shlb
out
sub
subb
push
repnz
xor
mov
rolb
jb
leave
xlat
xchg
rcrl
pop
jle
ds
or
push
bound
imul
or
fldenv
insb
call
iret
xorb
adc
mov
mov
jo
das
push
mov
imul
mov
popf
adc
int3
inc
and
jl
data16
jl
push
adc
cmpl
jo
inc
cmp
std
sbb
lock
sbb
cmp
ret
mov
ss
loope
jne
ja
jbe
pop
mov
dec
xchg
icebp
into
loop
testl
mov
hlt
and
fildl
sbb
xchg
shl
jg
mov
cmpsl
fists
loop
push
mov
pop
ljmp
inc
js
insb
fistpl
xchg
add
mov
sbb
jge
jmp
push
int3
sarb
fbstp
fisubrs
lods
shrb
lret
pop
js
pop
daa
cmp
inc
jbe
pop
enter
fdivrs
xlat
lahf
sbb
notb
loop
add
pop
add
js
popf
or
std
xor
and
sub
cltd
cs
xor
adc
aas
mov
adcb
pusha
nop
leave
jl
push
jl
aaa
pop
xchg
mov
int
cltd
aam
lea
je
push
lret
movsl
out
inc
lcall
sub
inc
fnstenv
dec
cmp
in
pop
mov
sub
xor
ja
add
mov
push
inc
dec
or
out
push
sub
das
imul
mov
add
out
mov
ffree
data16
inc
cmp
out
inc
cmp
ficoml
sub
ljmp
dec
push
sub
jbe
xor
xor
sub
jno
cmp
mov
rcrb
enter
out
or
pop
fnstenv
rcrl
stc
lods
std
nop
pop
lds
shrl
insb
sahf
mov
sub
dec
imul
rorl
negl
cli
stos
inc
push
ret
leave
insl
into
sub
lret
mov
dec
out
imul
cmp
push
sbb
jp
dec
fstl
or
pop
push
imul
insb
dec
repnz
xchg
nop
and
xor
leave
daa
dec
and
push
lea
ja
cld
jo
mov
outsb
inc
inc
jl
test
pcmpgtw
add
arpl
rolb
add
push
mov
cltd
pop
aam
xchg
test
lcall
or
xchg
mov
mov
subl
lods
dec
dec
dec
fstpl
inc
cmp
cltd
mov
lea
inc
mov
scas
ljmp
adc
out
push
jle
cwtl
pusha
in
mov
fisttpll
outsl
push
fs
mov
dec
pop
inc
rcrl
inc
push
les
sub
dec
fwait
push
mov
xchg
and
popf
mov
xchg
pop
mov
bnd
push
pop
enter
movsl
push
and
in
xor
cmp
push
dec
bnd
inc
adc
ret
dec
data16
jbe
decl
in
lcall
clc
mov
xor
lret
inc
in
xchg
jae
jno
or
jno
fs
add
ror
pop
test
popf
fnstenv
fistpll
test
fld
mov
xchg
stos
aaa
mov
xor
addb
mov
cs
jp
ficompl
jmp
test
push
rcll
int3
add
loope
jp
pop
mov
mov
xchg
inc
xchg
sahf
jecxz
push
xlat
push
adc
iret
mov
dec
repnz
iret
or
sbb
cmp
push
mov
xorb
sub
mov
push
ror
les
mov
and
pushf
push
cmp
insb
mov
mov
cmp
pop
jbe
lret
sbbl
stc
movsb
xchg
lods
sbb
mov
mov
jno
fistps
lret
jmp
mov
test
cmpsb
mov
add
fildl
jecxz
mov
test
inc
aaa
rcrl
sti
inc
call
cmpl
outsl
cmpsl
imul
rcrl
pusha
mov
push
dec
mov
daa
cmp
cmp
iret
pop
movsl
push
ret
jbe
adc
inc
outsb
popa
fs
lods
scas
sti
lock
or
adc
push
rcrb
mov
scas
xchg
es
fs
sbb
mov
lock
int
push
fcompl
pusha
mov
cltd
mov
sahf
scas
dec
rcrl
push
call
sbb
mov
and
mov
mov
mov
pop
mov
mov
mov
lret
lret
dec
nop
loopne
out
mov
std
jl
push
jge
jecxz
test
jmp
ret
mov
loopne
test
mov
inc
sub
dec
jne
mov
out
iret
repnz
add
sti
sub
cltd
mov
mov
stc
inc
xor
adc
mov
jmp
jno
mov
sub
out
jns
xor
adc
dec
add
sarb
mov
mov
repnz
sbb
jo
fidivs
push
jo
in
and
mov
xor
fs
fldt
call
push
lods
jp
rol
inc
mov
int
mov
mov
shll
into
mov
icebp
inc
bound
fwait
ret
cmp
push
xor
pushf
pop
test
dec
and
cltd
aad
adc
sbb
push
and
adc
movsb
divb
jp
mov
sbb
les
or
sbb
clc
lcall
xchg
mov
inc
or
pop
loope
cld
mov
pop
iret
je
fwait
dec
sbb
nop
in
pusha
jno
jne
fsubs
popf
bound
pop
nop
loope
xchg
mov
xchg
and
jae
dec
xor
popa
fdivrp
push
push
mov
test
fiaddl
jns
mov
push
enter
sbb
xchg
addr16
cmp
inc
inc
test
jno
lret
pop
pop
stos
pop
shll
cmpl
loopne
cmc
addr16
pop
xor
imul
mov
lea
cmp
pop
cmc
xchg
es
and
outsb
cmpsl
rclb
mov
fidivrl
mov
jl
add
fstp
int
ljmp
cmp
add
scas
inc
xchg
mov
bound
popa
pop
adc
inc
out
dec
ret
outsb
push
fcomp
mul
imul
dec
push
movsb
or
xor
js
lret
push
jns
lds
push
lahf
into
lcall
adc
dec
xchg
mov
cmp
xor
pop
fbld
outsb
and
in
jnp
pop
dec
dec
mov
int
js
dec
mov
lods
or
adcl
frstor
inc
adc
sarb
das
cmp
or
ja
scas
inc
test
jmp
es
dec
inc
sti
mov
push
subb
push
adc
test
inc
aas
push
push
jl
and
lock
inc
test
push
xor
jg
aad
mov
sti
gs
fucomip
in
mov
adc
mov
int3
lret
inc
mov
xchg
mov
push
jl
and
je
dec
cmp
ret
clc
cs
dec
and
cmp
stos
je
mov
add
push
fstps
les
stos
lock
es
ret
mov
pop
aad
cmpl
or
xor
daa
inc
mov
adc
pop
ds
insl
outsb
ja
cmp
push
dec
xchg
repz
rcrb
int3
scas
lcall
lock
xor
fsubrl
stc
fidivs
jle
les
pop
lea
and
mov
sbb
cli
push
in
rolb
ss
and
push
push
push
mov
cltd
cmp
inc
push
pop
and
push
adc
dec
sbb
in
shll
mov
pop
add
sar
addr16
pushf
add
fstps
rclb
jmp
cmpsl
dec
in
iret
imul
sub
xor
dec
repz
enter
fdiv
shll
xchg
andb
pop
push
xor
pmullw
mov
jae
xor
stos
push
sbb
sti
popa
or
push
add
push
dec
add
js
mov
shrb
icebp
test
fstpt
xor
ror
test
in
xor
jbe
pop
nop
push
pop
push
jp
mov
mov
pop
dec
lea
mov
shrl
fimuls
mov
les
lock
inc
pushf
scas
shl
movsl
adc
mov
outsl
xchg
lock
mov
mov
and
sub
aas
xor
hlt
inc
les
fnsave
xchg
adc
or
xlat
movsl
xchg
jl
or
push
or
and
mov
lock
push
sbbl
push
and
mov
dec
or
mov
jge
je
push
dec
cmpsl
stos
dec
negl
jecxz
fisttpll
dec
or
or
xchg
fstpt
imul
divl
xchg
jmp
and
pop
add
int3
cld
push
into
popa
jmp
repz
inc
in
add
mov
imul
push
jnp
mov
or
mov
lods
aas
cli
push
cli
jne
fnsave
pop
data16
test
xchg
cmp
lret
pop
push
pop
imul
jnp
scas
mov
adc
cld
icebp
pop
push
jge
imul
push
push
pop
jnp
jb
sub
xchg
or
xor
sub
lods
ss
dec
das
xor
mov
imull
pop
lret
les
shll
xchg
jns
stos
movsl
in
loop
pushf
jnp
inc
dec
pop
add
jo,pt
mov
dec
add
jb
push
bound
movd
mov
stc
cld
jmp
push
lds
xchg
gs
js
xchg
add
adc
in
cs
mov
mov
push
cltd
pop
sbb
and
into
pop
sarb
or
cmp
inc
cmp
aaa
mov
pop
addl
mov
pop
sbb
push
dec
lods
repnz
popf
arpl
cwtl
sub
cmp
and
cmp
mov
lahf
or
hlt
inc
int
inc
mov
mov
pop
stos
testb
mov
leave
icebp
inc
lds
push
pop
xchg
xor
es
ret
bound
enter
adc
pop
xor
fadds
inc
pushf
sub
sbb
outsb
test
das
incl
adc
push
xor
lods
jl
pop
dec
pusha
in
stc
arpl
adc
mov
adc
mov
dec
rolb
dec
sbb
dec
sbb
js,pt
test
les
pop
les
lock
inc
cmpsb
inc
pusha
jmp
xor
cmp
cltd
xchg
and
repnz
jg
inc
pop
inc
jno
test
and
loope
mov
stos
dec
bound
notl
test
jmp
aas
js
rcrb
pop
jne
in
out
xlat
sub
daa
add
inc
jg
icebp
addb
in
xchg
sub
xor
test
ss
cld
mov
dec
js
cmp
jecxz
and
xchg
js
mov
xchg
adc
adc
add
aaa
shll
push
int3
aaa
or
aas
push
mov
mov
std
sub
add
outsl
push
out
inc
xchg
rorl
jge
scas
sub
xchg
add
movsb
jne
sbb
loopne
je
push
or
dec
inc
mov
mov
das
outsl
jle
cld
cwtl
mov
insb
cmc
inc
sbb
cli
xchg
xchg
lret
mov
cmp
das
inc
cltd
xlat
mov
adc
int
rorb
sbb
jne
pop
add
scas
mov
sub
or
ret
outsl
insl
insl
arpl
cmp
mov
mov
stos
sarb
mov
pop
fwait
mov
inc
addb
cmp
mov
fiadds
and
inc
cmp
sbb
cld
out
add
inc
xchg
lods
cmpsl
add
scas
sub
mov
enter
adc
and
in
aaa
loope
cvttps2pi
clc
xor
sahf
orl
xchg
sub
insl
xchg
mov
cmp
dec
mov
into
sub
cs
fdivl
push
lods
cmpb
loope
ss
bound
aaa
lods
add
cmp
cltd
iret
aas
cs
cmp
les
pop
aas
mov
loop
xor
nop
add
jno
push
mov
jae
mov
push
inc
jns
sahf
mov
mov
in
sub
arpl
or
mov
xor
xchg
xchg
adc
adc
jno
sti
xchg
movsb
pusha
insb
insb
loopne
add
mov
arpl
jb
jge
sti
nop
mov
ljmp
les
movsl
jge
dec
rcrb
clc
js
sbb
scas
hlt
rol
and
imul
push
push
in
push
pop
shlb
sub
outsb
inc
out
push
pop
xchg
shr
idivl
inc
mulb
mov
out
dec
leave
jae
push
incb
push
movsl
add
and
fistl
js
sub
stos
imul
or
push
std
pusha
pop
mov
xlat
push
fsubrl
pusha
movntps
xchg
sbb
stc
and
call
jae
sub
pop
cli
mov
sbb
icebp
push
add
lahf
jp
mov
stos
ret
dec
xchg
and
cmp
addr16
jle
mov
outsb
cmpsb
jp
pop
xchg
mov
push
lds
lcall
mov
and
repnz
nop
pop
pop
call
repnz
pop
psubusb
jle
ljmp
mov
mov
ss
pop
movb
pop
cmp
pop
pop
inc
pushl
and
pop
fidivl
outsl
test
or
mov
adc
jl
sbb
std
clc
jbe
or
lods
pop
jns
push
dec
mov
add
adc
jg
ds
and
add
jg
xchg
mov
std
adc
xor
imul
inc
sti
cmp
pop
push
test
lea
mov
pop
mov
xor
mov
dec
popf
push
xor
in
loop
clc
adc
sub
cmp
outsb
and
pop
jmp
mov
pop
xchg
sbb
sbb
gs
push
dec
mov
jg
hlt
ljmp
push
and
mov
jns
mov
lock
push
jb
negb
push
cmp
push
or
xor
out
pop
fbstp
push
test
adc
data16
jbe
data16
fisttpll
dec
stos
pop
pop
pop
add
xchg
inc
push
xchg
fidivrs
mov
sub
dec
inc
frstor
pop
and
imul
cli
ror
arpl
jmp
xchg
shlb
out
mov
cmpsb
jno
stc
and
out
jle
sbb
lret
outsl
dec
adc
jmp
ja
popa
stos
es
shll
dec
cmpsl
mov
xor
and
inc
sub
in
inc
ja
fdiv
stc
adc
xchg
notl
out
and
sbb
adc
inc
jp
and
neg
jo
sahf
push
roll
mov
lods
lods
movb
inc
out
into
jae
adc
push
dec
insb
jp
outsl
mov
icebp
and
xchg
sub
mov
sub
push
imul
xor
sub
inc
mov
scas
push
popf
mov
inc
out
mov
and
cmp
push
mov
pushf
dec
stc
loop
testb
xor
jmp
mov
pop
insl
mov
dec
sub
sub
xchg
pop
mov
dec
sub
scas
aaa
sarl
les
inc
push
mov
repz
xchg
sub
call
lds
popa
shlb
stc
fisttps
mov
stc
repz
insb
aad
push
mov
mov
jbe
add
stos
fstp
fcompl
inc
jbe
sbb
leave
scas
aad
sbb
rorb
mov
or
sti
xor
shll
pop
aad
sbb
sub
jb,pt
jno
pop
adc
out
mov
mov
push
pop
nop
out
jmp
inc
jns
add
and
pop
fistps
fsubrs
jecxz
xor
iret
ret
and
daa
test
push
ret
add
pop
test
daa
cli
xor
xchg
push
pop
xor
rcrb
dec
pusha
adc
cmp
mov
push
sarb
and
fsubrl
clc
shl
xor
aam
int
aam
andb
sbb
or
mov
sbb
hlt
cmp
in
sub
adc
or
imul
jge
push
xchg
and
insb
push
dec
dec
aas
cmp
inc
mov
jnp
xor
repnz
sub
in
inc
push
and
mov
mov
push
jecxz
nop
xchg
flds
or
cs
cmp
push
stos
add
pop
adc
mov
dec
mov
add
xchg
iret
add
sub
jnp
jae
sub
aam
loop
push
out
movsl
pop
add
dec
repnz
jo
lea
ss
das
cmp
and
jb
mov
std
test
sbb
mov
ret
mov
sti
cmp
sbb
sub
cmp
mov
cmpb
dec
mov
cld
iret
push
sahf
push
lock
inc
push
inc
mov
gs
push
jo
inc
sbb
aam
xor
dec
sbb
out
jb
and
je
lret
and
aaa
or
outsb
lds
sahf
pop
fnsave
nop
cs
xor
inc
test
arpl
xlat
mov
or
repnz
jae
loope
sarl
js
pop
cli
push
stos
call
roll
mov
xchg
cmp
add
dec
push
fdivrs
mov
lret
loopne
movsl
ficoml
out
fcoms
call
in
mov
and
jne
iret
inc
pop
xchg
es
aaa
movsb
leave
jne
fmulp
in
sub
cmp
jle
js
lea
sbb
icebp
icebp
int
add
pop
fnstcw
jl
setae
push
and
xchg
xchg
xchg
mov
out
adc
inc
mov
sub
fwait
aas
fldz
push
xor
testl
mov
cmp
mov
scas
add
sub
insb
add
data16
pop
push
popf
add
mov
add
cmp
outsb
out
inc
and
inc
and
aaa
sbb
lret
outsl
mov
push
sub
shlb
adc
mov
mov
aas
add
rolb
fsts
lret
stos
enter
fists
push
pop
and
stos
repnz
repnz
push
arpl
cmpsb
lahf
stos
mov
jmp
std
xchg
pop
loopne
pop
and
sub
pop
lret
add
or
test
sbb
imul
or
les
fwait
std
into
and
lret
mov
lcall
pushf
in
add
sub
jle
lahf
lret
movsl
rclb
shl
testl
push
leave
cli
push
nop
and
mov
sub
adc
pop
push
fnstenv
dec
adc
sub
cmp
ret
push
inc
mov
adc
pusha
les
jp
test
and
sub
outsb
mov
cmpsb
in
std
adc
nop
call
nop
jno
ret
and
mov
jno,pt
sbb
in
xchg
mov
xchg
lret
add
jb
aas
add
loop
cmp
fisttpl
dec
je
jmp
and
ja
lods
pop
stc
popf
dec
cwtl
pushf
arpl
mov
sub
shlb
mov
xchg
mov
jb
aad
aas
xchg
sub
pop
adc
inc
pop
xor
dec
adc
xor
sub
add
leave
dec
jb
cmp
fdivrs
adc
mov
xlat
jae
leave
cmc
mov
loope
iret
jle
rcrl
and
pusha
fbld
imul
pop
sbb
dec
iret
movsb
ret
dec
or
mov
test
jmp
cwtl
and
jmp
mov
mov
push
cmpsl
das
fstpl
dec
inc
push
hlt
mov
dec
sub
mov
ret
push
inc
push
inc
xchg
outsl
jmp
sub
adc
mov
jnp
adcb
and
or
xchg
mov
fldl
das
loope
pop
ja
pusha
sbb
imul
lds
inc
cmpsb
stc
bound
pop
notb
fildl
sub
cmpsb
add
fldenv
mov
cmp
fldcw
ljmp
insl
lds
fbstp
aaa
lcall
jo
and
subl
mov
add
push
sbb
hlt
add
in
movsb
cs
inc
xchg
sti
es
push
jmp
push
and
pop
test
mov
cmpsb
cltd
mov
push
sarl
sub
lcall
loope
gs
push
lods
ljmp
mov
ja
and
inc
shrl
dec
or
ja
loopne
lock
and
mov
pop
loopne
mov
adcb
push
mov
jl
mov
dec
aaa
add
shl
adc
add
add
fisubs
jp
pop
imulb
pop
push
push
int3
jp
push
mov
js
subl
mov
and
xor
dec
notb
and
jb
sahf
hlt
in
lock
loope
mov
dec
out
xlat
call
jmp
pop
sub
adc
and
subb
mov
call
insl
push
iret
add
mov
sahf
xor
mov
mov
mov
inc
out
mov
mov
adc
repnz
sarb
xor
hlt
cs
jp
std
movnti
sahf
mov
xchg
fdivl
xor
add
mov
pop
in
pop
cmc
push
dec
pop
jp
jbe
dec
movsl
and
imul
xchg
xor
push
mov
mov
leave
mov
mov
in
add
rcr
das
xchg
xor
xchg
pop
popa
dec
mov
sbb
mov
insl
outsb
push
xchg
adc
mov
clc
dec
cmp
aad
test
dec
jbe
xchg
pop
push
out
mov
aaa
adc
push
imul
xchg
movsb
xlat
or
and
into
scas
sti
mov
or
sbb
ret
add
js
jo
cmc
adc
push
jg
xchg
rcr
mov
cmp
and
mov
mov
cmpsb
or
or
push
xor
fiaddl
dec
push
js
dec
fwait
add
dec
mov
insl
imul
and
jne
and
xchg
dec
icebp
pop
pop
mov
jge
sub
xorb
xchg
int3
sti
hlt
inc
add
push
mov
hlt
pushf
movsb
in
pop
mov
jmp
mov
and
cmpsb
cltd
sbb
mov
xor
dec
pusha
push
lret
scas
dec
and
rorb
mov
ret
call
jno
inc
jg
and
mov
or
mov
lods
imul
mov
cld
mov
jae
popl
outsl
out
push
gs
mov
mov
clc
lods
xor
add
sahf
dec
outsl
or
mov
cmp
inc
cmpsb
aam
test
das
push
jl
das
sub
xchg
or
pop
aaa
push
cmp
outsl
push
xchg
mov
add
mov
rolb
in
int
push
dec
sub
and
in
sub
push
rcrb
or
sub
imul
test
out
pop
test
mov
sbb
cmpsb
dec
inc
or
push
xchg
icebp
adc
pushf
and
sub
sbb
aad
test
cmpsl
cld
mov
cltd
flds
imul
stc
inc
fbstp
mov
jo
and
cli
xchg
and
cltd
inc
xchg
cmp
scas
inc
rclb
movsb
add
je
mov
int3
incl
lea
xlat
sub
popa
cmp
inc
es
adc
adc
xor
add
inc
jmp
xchg
pop
mov
out
call
push
dec
mov
push
dec
loope
jb
mov
mov
aaa
add
mov
and
loope
fs
sahf
pop
cld
mov
jge
fldl
push
gs
insl
in
scas
lahf
iret
daa
push
sbb
lods
adc
ficomps
pop
push
jb
movsb
push
inc
cmc
adc
cmpsl
sbb
jb
subb
test
in
cmpsb
faddp
xchg
into
inc
lret
mov
lods
and
mov
mov
xchg
subl
les
nop
mov
jmp
push
pop
fld
fs
rcll
dec
fsub
imul
or
sub
out
mov
push
jle
jae
iret
or
mov
je
pop
add
add
inc
jb
push
rorl
xor
insl
mov
fs
and
mov
daa
and
xchg
es
mov
cmc
repnz
or
notb
bswap
mov
out
mov
lods
push
xor
shll
dec
jmp
sbb
stos
roll
test
gs
fldt
aam
sbb
shll
pop
addb
and
repz
adc
mov
cmp
aaa
cmpsl
mov
mov
push
inc
les
add
mov
int3
mov
mov
pushf
sarl
xchg
fcos
sbb
adc
and
leave
sub
jecxz
pop
and
cwtl
stos
int
push
push
in
push
rclb
pop
xchg
fs
mulb
jb
xchg
dec
sbb
inc
imul
imul
jns
dec
ret
fcomps
inc
add
xchg
out
iret
sbb
cmp
or
xorl
sbb
or
pop
test
pop
sub
xor
out
das
jp
jl
and
mov
lret
mov
and
xor
frstor
lahf
into
jo
insl
fbstp
andb
xchg
or
shlb
push
pop
gs
xchg
pop
pusha
push
das
dec
sbb
fimull
push
dec
xchg
xchg
jge
push
inc
xchg
dec
lcall
andb
cmp
cli
inc
ja
outsl
fdivs
je
xchg
scas
mov
rcrl
leave
inc
push
ret
jge
mov
test
jp
or
ds
scas
rorl
stos
or
lcall
arpl
lret
enter
mov
adc
sbb
pop
jb
jno
decb
jp
xchg
mov
dec
dec
fnstsw
dec
cmp
sub
addb
add
mov
sahf
data16
out
inc
jp
sub
adc
scas
adc
decb
mov
dec
mov
ret
sbb
pushf
xor
xchg
adc
xchg
sbb
sub
adc
xchg
test
lods
out
out
repz
dec
and
addr16
push
stc
jmp
xor
jnp
pop
sahf
mov
xchg
cmp
xchg
notb
adc
xchg
ja
dec
stos
pusha
xchg
jmp
popf
mov
inc
mov
lret
lcall
jno
lods
jns
fs
mov
ret
movsl
cltd
jbe
jg
imul
rclb
popa
popa
fbld
mov
adc
dec
jae
leave
jp
pop
cld
popl
push
jns
add
fcoml
std
in
lret
fisubl
jmp
outsb
leave
enter
mov
mov
mov
enter
or
sbb
xlat
bound
leave
xchg
push
dec
mov
dec
out
jmp
jno
popf
adc
insb
pop
sub
push
cmp
xor
outsl
push
aad
add
push
or
cmp
ficompl
and
int3
push
in
aaa
mov
sahf
aaa
pop
pop
in
aad
cmp
test
fbstp
mov
cmpsl
xor
sahf
pop
mov
xor
xchg
jne
mov
hlt
jo
jnp
mov
test
xlat
mov
imul
lcall
cmp
push
mov
xorl
fsubr
out
test
bound
xchg
loopne
mov
jns
sbb
xchg
pop
sub
push
pop
pop
test
jbe
xchg
mov
push
xor
jne
dec
xchg
pop
sbb
adc
icebp
inc
test
mov
cwtl
mov
imulb
ja
mov
mov
or
aas
add
or
jns
inc
mov
fldlg2
push
cltd
imulb
ds
cltd
mov
xor
sub
mov
pop
or
addr16
stos
mov
roll
cld
out
mov
fs
cld
std
sbb
mov
add
jb
mov
xchg
adc
lods
xor
sarb
mov
xor
in
sub
and
xchg
pop
cmp
aam
int
add
sbb
mov
dec
xchg
pop
mov
fmul
orl
in
cs
mov
outsb
push
popa
jle
scas
jb
ret
fidivs
stos
repnz
jmp
lahf
pop
pop
hlt
mov
cs
lcall
mov
pop
mov
repnz
and
mov
sbb
imull
or
cmc
xor
clc
cld
adc
jae
outsl
loop,pn
cli
loopne
dec
or
sub
push
xorb
jo
aad
es
push
divl
fs
test
cmp
pop
rcr
mov
nopl
mov
dec
repz
testb
fs
mov
ljmp
xor
cltd
inc
mov
pusha
test
or
dec
mov
lods
loope
scas
outsl
cmp
mov
jecxz
dec
mov
jecxz
fcmovu
iret
out
xchg
sti
inc
loope
inc
cli
movl
cwtl
push
mov
dec
pushf
ljmp
cmc
fs
jns
adc
pop
repz
fucomp
subb
fwait
jmp
lcall
outsl
in
mov
stos
xchg
lret
add
pop
sti
rcrb
andl
jb
or
cmp
dec
in
xchg
mov
fwait
gs
mov
inc
inc
xor
sub
pop
out
mov
cwtl
sub
data16
sbb
inc
xchg
lds
nop
and
jp
cmpsb
out
cmp
movsb
outsl
or
dec
mov
adc
fstpl
cmpsl
sbb
sbb
jno
and
hlt
imul
push
jno,pt
cmpb
pop
les
test
jb
pop
ret
enter
orb
loop
sbb
fsubrp
pop
in
jle
mov
push
popf
fsubrl
out
lock
insb
test
jns
cli
add
fdivs
mov
insb
sarl
sbb
shr
pop
push
sahf
push
mov
dec
scas
and
mov
sbb
jae
call
in
and
add
pop
push
ret
enter
cmp
push
gs
mov
mov
jno
and
mov
push
bound
push
or
mov
insb
add
adc
push
movsl
scas
ret
mov
cmp
push
into
cmc
adc
mov
cmp
mov
ja
out
sbb
push
jp
orl
mov
icebp
mov
mov
jo
jbe
adc
mov
rcr
cmp
cmp
fdiv
add
fimull
and
cmp
push
pop
sub
shl
outsl
daa
aaa
cwtl
mov
pop
test
sub
sbb
sbb
ret
stos
mov
fstps
pop
fdivs
jbe
lods
cmp
mov
push
dec
dec
arpl
jno
int
mov
mov
inc
mov
jne
xor
and
sahf
cmp
push
ljmp
inc
ds
ds
mov
inc
pop
mov
xor
loope
sbb
in
loop
in
aas
mov
push
lock
sub
adcb
sub
mov
inc
mov
scas
jecxz
icebp
pop
adc
enter
mov
add
iret
ds
in
roll
push
sub
out
call
outsl
shl
mov
aas
push
rcl
add
xor
or
xlat
test
mov
cmp
or
test
divb
and
and
int
sbb
xor
sahf
std
test
int3
push
mov
xor
jecxz
inc
adc
in
mov
push
and
push
mov
aas
fcoml
lods
xor
push
xor
inc
push
cli
sbb
xchg
sbb
int3
cld
fdivrl
insl
hlt
xchg
dec
mov
out
adcl
sub
jg
movsb
sub
cmp
clc
outsb
test
xchg
dec
mov
nop
int3
inc
cmp
fbld
and
insl
inc
cmp
lcall
std
aad
mov
clc
cmpsl
adc
popf
icebp
in
sbb
jns
rorl
lahf
cli
lea
imul
subl
mov
repz
aas
adc
inc
mov
mov
dec
cmc
dec
mov
mov
sbb
xchg
fildll
and
out
pandn
fcomps
rolb
je
sbb
inc
mov
xlat
addr16
ret
add
dec
push
pop
xchg
imul
mov
and
sbb
mov
and
adc
repnz
fidivs
addr16
test
jnp
int3
pop
and
je
ja
js
filds
xor
mov
xor
mov
jg
bound
mov
or
dec
pusha
adc
mov
jno
out
hlt
adc
or
jecxz
int
xchg
addl
stc
sub
inc
sub
push
outsb
pop
sub
orb
aaa
mov
divl
add
addr16
push
lods
fcompl
mov
lcall
enter
pop
js
sub
add
push
cmc
sahf
cmp
int
arpl
xor
adc
sub
sti
pop
shl
shrl
cs
test
dec
in
add
std
in
in
dec
inc
aad
xchg
mov
add
insl
mov
add
in
hlt
les
xchg
clc
sahf
cltd
cmp
mov
data16
mov
movsl
inc
xchg
orl
fsin
mov
lahf
int3
jae
mov
push
mov
mov
or
cmp
outsl
ss
pop
jno
mov
clc
movsl
jl
jg
pop
pop
xor
and
sub
ljmp
push
sahf
lret
fistpll
das
adc
lea
dec
adc
int
mov
inc
icebp
pop
sbb
je
addr16
fcmovbe
mov
adc
nop
push
cmp
out
mov
lock
push
imull
push
pusha
or
cmp
test
or
rcll
jecxz
sub
mov
ljmp
ret
jg
push
test
mov
push
das
icebp
sub
es
icebp
outsb
mov
mov
les
repz
test
repz
cmpsb
sub
in
lods
jge
ss
sbb
inc
out
sbbb
mov
dec
jbe
rcll
aas
lret
mov
or
fistps
sar
sub
xor
mov
mov
pop
out
popa
loopne
insb
stos
arpl
jnp
cmpsb
aad
mov
xchg
push
mov
mov
out
fstpl
and
fists
pop
push
mov
jns
adc
imull
jno
and
fcmovnb
pop
sbb
adc
push
mov
fildl
mov
and
iret
int
mov
aad
push
jae
add
mov
xchg
call
inc
imul
iret
mov
repz
shrl
data16
sti
add
pop
add
ja
outsl
adc
inc
fmuls
imul
imul
and
sbb
jp
js
push
mov
fstpl
aas
addr16
call
andb
andb
in
and
sarb
push
lret
fisubs
and
mov
nop
adc
pop
xchg
cmovne
fbld
dec
bound
push
jns
mov
mov
mov
fbstp
fs
inc
and
mov
aas
and
mov
push
test
icebp
cwtl
in
test
out
lds
jp
cmp
jo
popf
xorb
or
pop
fnstsw
jp
mov
xor
mov
sbb
mov
push
pusha
addr16
cld
mov
movsl
ss
adc
mov
ss
outsb
aas
dec
outsb
pop
add
pop
dec
mov
cld
arpl
add
cmp
ret
int
mov
mov
ret
cmp
arpl
jecxz
push
out
jecxz
add
pop
or
test
sub
gs
mov
cwtl
xor
scas
lea
cmp
mov
sub
repz
fucomi
dec
fiadds
cmp
and
js
stos
or
aam
pop
lret
and
or
xor
inc
gs
xlat
and
fmuls
mov
sti
xor
cmpsb
in
into
or
in
xlat
leave
les
cld
or
inc
push
xor
push
jns
addb
std
or
je
mov
xchg
jle
hlt
jno
push
mov
aaa
movsb
fildl
lahf
aad
mov
mov
cmp
add
pop
jg
adc
imul
std
repz
repz
sub
push
cld
sub
or
inc
nop
loop
or
hlt
cmp
add
jecxz
dec
xchg
imul
lret
mov
popa
push
mov
or
movl
jp
adc
stos
and
adcb
jl
dec
push
in
jbe
fdivrl
and
add
push
mov
lahf
daa
roll
repz
data16
fsubrl
lods
dec
dec
pop
inc
sub
das
push
in
inc
mov
jb
das
lods
ss
dec
in
ljmp
mov
adc
mov
sub
dec
jbe
cltd
fcoml
mov
and
xchg
loope
call
xchg
sub
ret
cmc
xor
das
or
sub
ja
int
push
xchg
cmp
adc
mov
push
in
cmp
movsb
clc
add
and
add
and
out
sbb
std
in
call
xchg
roll
pop
adc
stc
sub
sahf
gs
pop
lods
push
stos
std
mov
aas
aad
mov
insb
inc
sub
and
enter
ja
lahf
xchg
fcomi
pop
add
push
cmp
aaa
xor
sub
mov
dec
or
push
dec
xor
push
ficoml
pop
in
and
testb
xchg
scas
xor
xor
les
xchg
or
jle
add
xor
xchg
popl
dec
fwait
add
and
rcl
mov
xor
sbb
xor
outsl
popa
push
push
out
xchg
arpl
dec
daa
sub
dec
dec
push
lahf
stc
jne
out
sbb
xor
or
in
mov
popf
dec
call
push
mull
subl
shll
movsl
jl
cltd
cli
add
xor
sub
mov
mull
pop
in
dec
loop
mov
int
mov
sbb
out
adc
jno
xchg
dec
scas
setns
movsl
pushf
xchg
test
mov
mov
insb
add
cwtl
pop
jns
sub
pop
push
xchg
dec
adcl
pop
das
xlat
pop
pop
cmpsl
add
push
dec
repnz
or
cmp
or
inc
inc
push
add
xchg
adc
or
fisttpll
mov
cmp
mov
jae
push
jmp
shlb
push
repz
sub
or
scas
dec
pop
and
shll
mov
dec
xchg
lods
adc
dec
jge
and
and
sub
pop
cmpsb
push
cwtl
jbe
jp
mov
xchg
imul
mov
push
add
push
ds
shl
xor
lds
les
add
scas
xchg
lahf
js
pop
adc
sbb
int3
es
or
inc
push
test
lock
jae
ljmp
cs
cli
aaa
aaa
aas
mov
in
pop
lea
inc
mov
and
or
and
orl
nop
imul
sub
test
or
xor
into
out
js
bound
xor
aam
hlt
nop
push
push
mov
pushl
add
adc
mov
sub
lods
jmp
shll
test
or
push
es
cmpsl
cli
adc
xor
sub
inc
loop
mov
popf
pop
push
and
jmp
cmc
cs
mov
mov
mov
push
pop
pop
jecxz
movsb
cs
mov
arpl
daa
enter
jp
dec
bound
lods
in
xor
int3
pop
shr
pop
and
push
push
xchg
push
xor
jae
mov
test
push
fcompl
or
loope
enter
aaa
push
pop
scas
dec
popf
push
test
xchg
test
and
inc
and
mov
mov
stc
pop
pop
pushf
push
cmp
adc
ret
cwtl
pop
shlb
push
dec
popl
and
pop
adc
hlt
ljmp
pop
lea
push
pushf
fmul
push
mov
adc
outsb
pmullw
dec
das
push
xchg
xor
inc
aaa
cld
addr16
add
data16
add
scas
jge
bound
mov
outsl
pop
xchg
push
push
in
cwtl
in
and
test
xchg
jmp
dec
jge
or
test
daa
faddl
mov
jecxz
cwtl
sub
xchg
jle
dec
sbb
lret
hlt
sub
sahf
inc
das
xor
dec
out
mov
lds
jp
adc
mov
xor
inc
dec
stc
lahf
dec
ficomps
xchg
repz
push
inc
shr
cmp
cmpsl
inc
mov
and
xchg
sub
in
movsb
adc
lods
and
loopne
shrl
cmp
stos
jnp
call
flds
and
xchg
pop
int3
pop
into
cmovs
mov
insb
lods
xchg
push
jbe
and
and
pusha
jg
push
sbb
pop
out
test
loope
mull
mov
shrl
sbb
push
test
sub
dec
fsubl
add
or
enter
in
loop
pop
lea
xor
push
movsl
jb
mov
jno
and
xchg
inc
jne
jbe
aad
movb
pop
pop
sbb
mov
jmp
pop
mov
mov
inc
ja
out
negl
add
xor
mov
xlat
int
out
cmp
mov
fsubs
or
mov
in
push
adc
lock
rolb
cmpl
test
jle
ds
daa
mov
rcrb
or
js
jbe
call
dec
jb
insb
outsl
sbb
mov
xchg
jno
pop
mov
and
mov
xchg
xchg
and
sti
jno
cli
dec
dec
add
fisttpll
aad
ret
int
mov
and
mov
sbbb
mov
fdivrl
add
push
jb
mov
push
lcall
adc
lahf
jmp
mov
mov
cmc
int3
xchg
xchg
add
mov
pushf
call
xchg
inc
adc
adc
paddsb
fadds
enter
jge
mov
in
cmp
dec
inc
and
or
enter
push
cmc
pushf
sbb
xchg
enter
sahf
mov
mov
inc
mov
jae
test
pop
pop
jle
mov
push
or
push
or
and
in
mov
adc
or
fs
rcrl
setp
aad
adc
inc
fstpl
movl
adc
xlat
sub
pusha
mov
sub
fadds
adc
jo
int3
daa
jp
icebp
leave
push
or
and
push
or
sti
and
into
and
xor
loope
jl
fsts
xor
xor
mov
cli
call
daa
jecxz
int
test
sarl
inc
dec
inc
xrelease
int3
cmpl
js
mov
cs
aam
es
mov
jns
testb
mov
xor
add
sbb
out
scas
lret
mov
test
inc
dec
fnstsw
mov
lods
test
decb
jmp
cmp
imul
jmp
aas
test
and
insl
cmp
leave
stc
scas
lcall
xchg
arpl
sub
movsl
in
jne
int3
cwtl
cmpl
aam
xchg
std
cli
out
jnp
mov
cmp
das
testl
sbb
and
jge
gs
adc
inc
aad
jo
cs
cld
push
call
ja
inc
fsubr
xor
pop
mov
popa
in
mov
push
sbb
and
mov
cwtl
in
and
mov
sub
pop
jg
repnz
std
mov
xchg
imul
sbbl
out
fimull
push
mov
cmp
push
jno
repnz
sub
je
cltd
add
lcall
ror
pushf
jmp
mov
fs
mov
sub
mov
pushf
push
cmp
push
pop
dec
adc
dec
mov
xorl
ja
inc
mov
inc
mov
lcall
shrl
fwait
add
jae
ror
fimuls
out
shlb
subl
lods
pushf
mov
daa
lods
adcb
sub
xchg
shlb
addl
ja
xlat
adc
imul
stos
loope
adc
nop
jno
add
test
mov
add
lea
mov
xor
fneni(8087
adc
aad
pop
mov
lods
out
loope
adc
cmpsl
iret
ret
mov
pop
and
es
mov
in
dec
mov
scas
pop
mov
cmp
sub
imul
loopne
sbb
notl
lret
pusha
cs
sub
les
and
sub
mov
test
or
inc
inc
imul
out
rcrb
lret
or
xchg
lcall
dec
jmp
xor
jnp
inc
js
sub
xor
pusha
fisubl
push
xor
push
xchg
icebp
stos
rorb
cli
inc
ret
mov
jge
xlat
mov
aas
push
push
fcoms
push
and
das
mov
insl
and
mov
mov
popf
cltd
add
movsb
lea
xchg
push
sbb
les
test
xor
dec
adc
dec
aaa
dec
clc
cs
dec
sbb
sbb
scas
cmp
adcb
sub
test
das
les
ret
int
xor
sahf
mov
adc
outsl
adc
add
xchg
and
inc
push
daa
sub
and
xor
jp
pushf
jp
ljmp
in
cmpsl
xor
push
aad
ds
mov
andb
mov
int3
xchg
push
jp
ret
dec
jp
int
test
out
pusha
sub
cmpsb
les
or
test
jle
jg
adc
faddl
adc
mov
test
jne
sub
movsb
xchg
pmuludq
inc
adc
sub
add
addl
add
movsl
add
mov
lds
or
mov
pop
sub
js
xor
adc
into
add
push
sti
adc
lds
imul
hlt
rcl
shll
inc
sbb
lea
mov
iret
lods
adc
aad
je
push
dec
fldcw
dec
inc
pop
test
lahf
inc
jg
adc
and
mov
sub
ret
cli
cmp
xchg
subb
fstpl
fyl2xp1
rorb
xchg
xchg
in
push
pop
movsl
in
jg
lret
dec
pop
mov
cmp
loopne
fwait
jmp
xor
pushl
push
mov
dec
or
pushf
xor
aad
clc
call
inc
ja
mov
jns
out
popf
addl
out
icebp
pop
adc
add
sub
cwtl
shlb
decb
loopne
push
loope
sahf
in
and
pop
divl
mov
popa
jo
xchg
imul
push
and
les
stos
lret
into
insl
inc
hlt
dec
mov
enter
mov
inc
es
or
aaa
cmpsl
mov
outsl
cmp
test
mov
loop
sub
push
cmp
repz
xor
gs
icebp
cmp
push
mov
lea
xchg
mov
adc
jo
xchg
mov
inc
jne
and
cmpsb
ret
stos
mov
repnz
outsb
sbb
lock
daa
fnstenv
mov
dec
jb
idivl
sub
call
ljmp
stos
mov
xor
fistl
stos
pop
flds
arpl
and
pop
and
dec
jle
cmpsb
in
dec
inc
mov
bound
pushf
jg
test
and
shl
dec
pop
sahf
int3
and
cmpsl
sbb
out
inc
sub
jns
daa
in
outsl
and
mov
jecxz
or
in
inc
cmp
jp
and
jg
imul
movsb
sbb
ds
cld
add
mov
out
xor
push
cmpb
xor
test
leave
data16
call
pop
test
ret
icebp
pop
inc
or
pop
inc
adc
jb
pop
ja
dec
clc
sub
loope
xor
lock
add
pusha
repz
insb
push
scas
add
push
imul
jb
mov
mov
add
adc
sahf
push
mov
dec
in
gs
adc
dec
push
inc
pop
mov
je
xlat
rcll
cltd
mov
loopne
xchg
cmpl
daa
jg
xchg
adc
std
repnz
test
mulb
sti
scas
std
mov
scas
xchg
dec
pushf
aad
les
sbb
mov
sbb
movl
movsb
idivb
shlb
jo
nop
mov
enter
mov
push
out
pushf
inc
fnstsw
mov
inc
lcall
repz
adc
movb
aad
fsubr
incb
jbe
sbb
enter
test
sub
popf
xor
dec
pop
sub
jns
lods
pop
xchg
sarl
mov
adc
repnz
addb
add
cld
push
adc
jbe
es
inc
in
in
adc
popa
mov
add
mov
rclb
test
inc
into
insl
xchg
neg
stos
ja
icebp
data16
mov
sub
jle
mov
or
sub
or
test
imul
stos
sbb
mov
pusha
push
xor
jp
bound
mov
dec
fidivrs
sbb
pop
push
int
add
xor
mov
arpl
imul
dec
sbb
out
jmp
jmp
xchg
jne
insl
mov
insl
xchg
jo
jo
jo
test
or
push
xchg
add
pop
loop
repnz
mov
xor
add
insl
mov
cmp
cwtl
add
jbe
xchg
in
inc
movsb
insl
xchg
lods
sbb
test
scas
pop
hlt
cmp
sbb
lahf
test
push
aam
test
icebp
mov
mov
jbe
dec
fwait
push
or
cmp
jbe
aaa
lods
inc
mov
pop
lock
push
mov
adc
add
mov
sahf
in
adc
divl
inc
xor
mov
incl
scas
in
leave
cmp
addr16
sbb
add
sti
ret
sub
jle
rorl
mov
js
into
mov
mov
push
xor
cmpl
cmp
adc
leave
xor
xchg
xchg
pop
into
out
xlat
iret
push
jnp
loop
dec
fwait
jecxz
jmp
std
fwait
xchg
fwait
mov
lds
push
call
cld
ret
pop
or
adc
iret
xchg
lods
jno
adc
call
xchg
dec
ficoml
aaa
nop
rorb
cmp
sub
ret
rcll
lret
add
inc
mov
jg
pop
xlat
subl
or
lret
andb
sahf
dec
inc
inc
movsl
js
mov
arpl
fimull
ror
mov
sahf
mov
stc
mov
xchg
push
inc
xor
inc
aam
fbstp
aas
or
mov
lahf
jns
cmp
fwait
int3
sti
mov
bound
inc
dec
push
arpl
stc
fsubs
jl
pop
fstpt
inc
mov
sbb
jb
ja
mov
sub
dec
sub
rorb
add
leave
out
push
dec
add
inc
shrl
roll
fimuls
jne
xchg
or
sub
scas
iret
ret
xbegin
roll
mov
das
pop
jp
xor
sub
cmpsl
pop
sahf
or
mov
sub
lret
fcmovne
aas
fscale
mov
loope
dec
lcall
jne
xchg
imul
lret
cli
lea
cmp
push
pop
je
ficoms
js
mov
inc
xor
aaa
in
fdivr
nop
mov
and
sbb
inc
pop
scas
lds
ffreep
hlt
jg
das
mov
dec
pop
test
fsubrs
or
sahf
xchg
mov
and
dec
xchg
jno
jp
call
outsb
jns
adc
jnp
jb
loop
mov
adc
xlat
xorl
mov
enter
xorb
mov
lock
sbb
insb
rcrl
jecxz
loop
addr16
lahf
jb
pop
jp
pop
dec
dec
fbstp
add
cs
aam
sbb
adcl
push
loop
out
jno
inc
jecxz
aad
pushf
sub
divl
mov
jbe
icebp
ja
inc
mov
pop
shrl
mov
outsb
std
idiv
mov
mov
mov
enter
aam
rcl
inc
sub
rcrl
xchg
inc
jp
mov
mov
cwtl
into
xor
mov
gs
jo
sub
add
push
dec
or
and
push
les
push
push
ljmp
pop
sub
sub
push
fsub
sub
cmpsb
bound
scas
data16
aas
fchs
cwtl
lods
ds
mov
inc
cmp
sbb
ffree
cmpsb
je
lock
fildll
adc
and
pop
sbbb
inc
push
leave
push
or
cmp
shlb
and
lret
call
loope
movsl
cwtl
cmpsb
mov
and
lods
mov
arpl
push
xor
jo
cmpsl
data16
jo
js
sbb
gs
sti
repnz
mov
das
in
xorl
mov
dec
xchg
movd
adc
inc
cmp
outsb
cmp
or
mov
mov
int3
ds
mov
xchg
cmpsl
dec
push
test
cmpsb
test
pop
pop
lret
sub
sbb
xor
enter
and
pop
adc
insl
nop
sbb
aaa
cmp
nop
mov
sbbb
or
cwtl
xchg
xor
inc
xor
fdivl
cltd
xchg
dec
test
popa
dec
mov
mov
push
data16
fcmovnb
push
pop
push
scas
dec
mov
je
mov
insb
ja
jno
call
xlat
and
aam
pop
pop
inc
mov
in
cltd
rcl
ss
pop
loop
pop
sbb
bound
repz
sub
fstl
ja
xchg
mov
ficoml
imul
test
daa
shl
addl
mov
outsb
lea
mov
xchg
ljmp
subl
sub
mov
loopne
mov
push
push
fnstsw
dec
pushf
pushf
int
add
dec
iret
fcomi
and
xor
ljmp
repnz
and
fstpl
sub
xor
aas
sub
shll
jbe
push
adc
lods
adcl
sti
lcall
adc
sti
lods
testb
add
or
lret
or
add
insb
jecxz
cmpsl
pusha
stc
mov
lret
popl
fdivl
dec
mov
out
jno
mov
inc
sbb
ja
lret
push
dec
jecxz
cmp
xchg
outsw
cld
mov
pop
inc
repnz
jle
mov
pop
outsl
inc
cmp
jns
mov
pop
add
xor
push
ja
mov
hlt
fcoml
mov
ret
mov
adc
xor
lret
mov
cmpl
dec
add
bound
or
mov
cs
sub
pop
jecxz
cmp
pop
mov
pop
out
iret
mov
in
or
lret
or
cmp
imul
xchg
cmpsb
lds
cltd
mov
pop
insb
repnz
scas
lds
jno
jnp
mov
or
sbb
push
lret
cwtl
and
faddl
test
aad
imull
and
xor
sbb
imul
repnz
add
xor
inc
jl
and
mov
pop
inc
sub
sbbb
icebp
or
push
sub
xchg
sub
test
sbb
fbstp
xchg
pushf
xorb
inc
cmp
pop
daa
xlat
psubsw
jbe
into
sarl
fldt
inc
sub
hlt
aaa
inc
jne
cli
jp
sbb
jae
ja
adc
ja
out
in
fs
xchg
sbb
dec
cmp
mov
adc
sti
in
stos
xchg
mov
dec
inc
in
std
or
jl
nop
je
or
out
push
mov
push
idiv
mov
ffree
fldenv
cld
and
mov
mov
inc
test
sbb
cmp
mov
idiv
sub
or
pop
lods
xchg
lahf
int3
jne
jb
pop
push
repnz
or
fldl
sbb
sbb
mov
repnz
xchg
int
push
push
adc
fwait
dec
dec
jl
xchg
leave
ret
sub
das
fcoml
inc
mov
hlt
xchg
adc
jecxz
inc
popa
or
addr16
pop
push
sub
ljmp
pop
mov
test
dec
hlt
out
dec
in
mov
jbe
dec
xchg
adc
jmp
pushl
inc
bound
nop
jge
sbb
dec
int
inc
cmp
out
aaa
lock
mov
push
mov
ljmp
sbb
jns
stos
out
insb
jl
clc
pop
jge
lods
jge
inc
icebp
imul
or
cmpb
daa
inc
add
and
xor
jg
pop
fistpll
push
scas
cli
aam
gs
mov
int
sub
jle
mov
cmp
ss
and
inc
mov
push
cli
push
lods
in
sbb
das
jp
insb
sub
daa
loop
mov
ljmp
push
call
or
inc
bound
adc
inc
mov
lock
sub
or
test
and
push
jl
sbb
dec
std
gs
sub
push
pop
psubd
jl
fnsave
gs
or
fisubrs
ss
xorl
mov
pusha
pusha
sub
xor
push
int
cmc
rep
cmpsb
xchg
lgs
inc
pop
jnp
mov
cmc
in
xor
lods
or
pop
cmp
fcoms
and
adc
cmp
ja
in
inc
enter
jo
ret
jnp
mov
cld
repnz
test
popf
les
out
movsb
es
in
dec
or
imul
ss
outsl
int
aaa
int
loopne
js
lret
filds
fs
cmp
das
test
aad
imul
mov
pop
orl
repz
orb
jne
icebp
dec
mov
push
dec
ret
les
loope
test
sub
pop
divb
jge
mov
jae
cmp
add
es
movsb
push
cltd
mov
inc
clc
rcrl
xlat
or
cwtl
sarb
jg
arpl
stc
hlt
test
add
add
cmc
cmp
jno
lcall
shlb
int
jo
in
aam
movsl
xor
lahf
cmp
aad
lcall
ja
mov
orl
pop
dec
jne
fistps
add
pop
jo
dec
leave
cmpb
and
imul
sub
lods
icebp
pop
pop
inc
addr16
test
jnp
fmulp
mov
pusha
sub
imul
jne
insb
lock
aam
out
cmp
scas
into
and
fisttps
push
shlb
popa
mov
stos
mov
in
icebp
adc
xor
fistps
xchg
jecxz
jbe
ret
or
dec
mov
imull
cmpl
lret
xor
pop
lock
addb
push
adc
pushf
icebp
repz
sbb
outsb
sbb
push
dec
sub
and
out
sub
dec
rcrl
dec
jmp
hlt
punpckhbw
pop
mov
mov
bound
lcall
ljmp
push
mov
add
sbb
mov
dec
pop
cmpsl
loopw
jmp
sahf
pop
cmpsl
jns
bound
mov
sub
cld
leave
adc
aad
xchg
jge
xor
mov
and
ja
and
adc
fsubp
xchg
dec
bnd
sub
cmp
push
cmpsl
int3
add
sbb
lahf
xor
lea
pop
test
mov
insl
jp
and
inc
and
adc
repz
int
mov
js
pop
xchg
movb
fs
inc
xor
sbb
cli
push
negb
movsb
incb
xchg
or
bswap
inc
mov
xchg
mov
ljmp
outsl
jl
dec
fsubrl
inc
xchg
mov
dec
or
mov
cmc
ror
add
push
subl
or
add
fldl
imul
sbb
push
mov
out
mov
std
ja
mov
jnp
jmp
push
push
dec
jl
mov
lret
push
mov
aaa
cmp
icebp
stos
mov
push
cmp
mov
test
lret
mov
mov
jbe
call
fisttpll
pop
sbb
jmp
mov
scas
int
hlt
or
and
push
mov
push
pushf
sti
int
cli
lahf
xlat
mov
cmp
mov
ret
imul
and
xchg
test
aad
nop
push
mov
and
call
fistps
rol
es
in
mov
addr16
mov
dec
stc
sbb
mov
mov
in
push
pop
mov
xlat
push
jmp
cli
pop
pop
cmp
icebp
jae
jne
out
fisttpl
iret
jg
test
or
xor
shll
je
inc
pop
mov
jnp
xor
jb
divl
sbb
lret
out
je
add
mov
in
addr16
popa
xlat
mov
jge
xchg
cmp
daa
add
in
pusha
cmpb
adc
push
mov
push
cmp
movsl
mov
out
sub
cld
xor
dec
lods
add
add
clc
insb
jns
mov
xchg
jle
sub
vpandn
add
xchg
push
xor
out
sbb
or
push
add
js,pn
pop
jmp
mov
pop
push
mul
mov
iret
mov
lock
out
je
aas
pop
xlat
lock
test
inc
pop
sbb
ja
adc
dec
daa
sbb
aas
lods
ja
push
out
pop
inc
arpl
push
pop
clc
dec
lds
lret
inc
lds
cmp
test
int
sub
out
imull
and
pop
gs
stos
ftst
mov
negl
and
outsl
inc
xor
mov
xchg
xlat
cmp
xchg
xchg
mov
adc
sub
sub
lahf
inc
pop
push
in
dec
notb
mov
add
sub
sbb
aaa
in
in
adc
pop
cmp
mov
mov
in
cs
test
sub
lds
in
add
adc
popf
xor
cmp
jbe
iret
mov
pop
lock
les
push
stos
sti
mov
mov
cmpb
test
mov
pushf
mov
lret
call
sbb
cmp
hlt
scas
cmovl
ret
cmp
movb
mov
into
sub
push
lods
sub
add
jns
push
jae
shlb
mov
sbb
ret
pop
xchg
adc
and
lock
push
sahf
std
mov
lea
mov
enter
xchg
dec
pop
adc
dec
inc
inc
xchg
fistpl
ror
pop
mov
repz
cmp
loope
xor
adc
fnsave
cmp
xchg
push
jo
pop
out
cmp
popa
mov
ja
jnp
push
mov
mov
sub
repnz
js
jl
cs
cmp
add
pop
insl
dec
imul
aam
out
inc
dec
lea
sbb
addb
std
pushf
popa
jle
jne
mov
int3
xchg
add
addr16
inc
fmull
mov
or
lahf
repnz
mov
insl
sahf
and
mov
sub
cmp
sbb
fsubp
ja
iretw
addr16
das
scas
mov
addb
push
lcall
mov
push
cmpl
in
jp
cmp
fdivs
imul
loop
sub
or
imul
cltd
in
or
xor
into
xchg
sub
jmp
mov
jno
outsl
aam
lahf
pushf
movsl
out
xor
js
adc
and
out
sbb
jmp
push
outsl
dec
xchg
xchg
adc
xor
shll
les
inc
push
jecxz
fidivs
add
lret
sub
mov
push
push
sbb
dec
pop
sub
repnz
xchg
jae
jge
inc
cmc
addr16
movsl
outsb
lcall
lret
push
xchg
push
fst
in
jne
fimuls
pop
lds
mov
mov
cmpsl
movsl
fisttpll
fmul
xor
imul
jecxz
xor
decb
in
inc
push
push
fbld
cmp
mov
fistpl
xchg
test
mov
arpl
adc
faddl
addb
sarb
aam
xchg
mov
or
mov
mov
iret
stos
mov
inc
mov
adc
push
cmp
sbb
pop
jae
cmpsl
imul
es
or
aaa
or
fcoml
loope
cmp
and
pusha
lods
gs
jge
sahf
pop
stos
mov
push
lahf
out
sub
das
pop
mov
jbe
gs
cli
js
jo
loop
inc
loopne
mov
insl
dec
test
inc
das
andl
in
ds
add
push
aam
in
sarl
imul
adc
pop
xchg
bound
rorb
dec
sub
adc
sub
dec
add
stos
and
bound
and
sub
test
mov
mov
into
lret
jno
cmp
lds
popa
xchg
lock
push
mov
dec
mov
cmp
jnp
mov
or
insb
xor
adc
inc
fdiv
test
pop
pushf
sarl
dec
xor
enter
ret
sbb
push
push
shrb
movsb
faddp
push
aad
call
test
out
add
adc
add
or
nop
ds
mov
pop
insl
mov
int3
and
test
cmp
lcall
xchg
mov
push
adc
jge
adc
sar
push
xchg
in
push
pop
mov
in
fimuls
jl
int3
dec
fs
stos
mov
mov
lods
scas
pop
shrl
dec
and
nop
daa
arpl
call
mov
imul
jne
mov
xor
scas
xchg
sub
push
aam
pop
sbb
leave
ficoml
sbb
push
outsl
sub
jp
js
cwtl
es
jnp
mov
aam
or
hlt
psllq
xlat
movsb
fwait
sub
push
sub
shlb
xchg
mov
jmp
dec
loope
idivb
fsubrl
stos
adc
mov
in
roll
pop
mov
jno
idivl
add
jl
jae
or
lock
pop
jbe
in
jmp
stos
idivb
push
adc
xchg
pop
add
push
inc
in
jo
cmpsb
mov
inc
and
addl
int3
lds
sub
inc
mull
xchg
ds
mov
xor
pop
arpl
sbb
push
or
addb
call
xor
mov
test
mov
inc
mov
inc
xchg
xchg
vpor
adc
sbb
je
sub
cmpsl
out
lds
lods
popa
pop
push
inc
mov
pop
jge
push
ljmp
mov
imul
mov
int3
sub
sub
stos
inc
or
in
push
nop
scas
add
arpl
shlb
cmpsl
cmpsl
int
pop
setb
sbb
push
imul
mov
vpaddb
add
mov
test
mov
pop
push
js
lahf
aam
shl
nop
xchg
pop
pop
xchg
ss
lret
adc
xchg
jl
testl
mov
in
dec
or
inc
sbb
cs
fcoml
dec
mov
sbb
popf
xor
es
xchg
and
out
out
jbe
icebp
mov
pop
cmp
das
das
pop
mov
fldcw
mov
mov
or
imul
leave
pusha
and
dec
dec
ja
ljmp
mov
and
ljmp
std
inc
and
mov
out
adc
mov
jbe
pop
mov
xor
in
out
push
adc
outsb
ja
mov
pop
into
int3
sub
lret
add
mov
das
cld
divl
test
sti
test
pop
loop
cld
ljmp
lock
outsb
outsb
movsl
jne
xor
imul
xor
mov
data16
mov
fdivr
shr
mov
dec
xchg
xor
dec
sbb
mov
sub
push
mov
lcall
xor
xchg
cmc
andb
sub
jbe
insb
mov
aas
in
sti
enter
mov
rcrl
cmc
inc
inc
push
inc
and
enter
and
and
dec
jecxz
push
sbb
jbe
pop
and
push
fs
outsb
mov
xchg
inc
mov
pop
in
jne
jge
sbb
dec
inc
or
insb
jmp
jmp
sub
loopne
int
sbb
sahf
lret
inc
cs
test
fwait
mov
dec
xchg
out
and
aaa
xchg
xor
sbb
mov
jae
outsl
fisttpll
xorl
es
jecxz
lret
xchg
sub
roll
mov
lods
testl
hlt
or
imul
scas
arpl
loopne
xor
rcl
sbb
into
fs
lds
int
jmp
fldcw
dec
in
out
je
lea
cld
test
sbb
cmp
jbe
mov
or
pop
nop
mov
add
or
jns
test
xor
and
adc
leave
xor
incl
xor
sbb
mov
insl
bound
jns
hlt
out
adc
push
pop
mov
loopne
xchg
xor
xlat
push
ret
scas
mov
popf
and
mov
push
mov
xor
jp
addl
add
sub
imul
push
pusha
addr16
filds
inc
adcb
mov
and
mov
cmp
sbbb
inc
and
popf
adc
jbe
adc
out
jo
xchg
sbbb
je
adc
mov
loop
shlb
not
cmp
mov
jmp
subb
push
push
xchg
faddp
cs
xchg
mov
aaa
jp
and
fld
inc
push
enter
int
cli
fcmovnu
aas
scas
lret
scas
sbb
jb
sub
aaa
mov
imulb
push
insl
out
rcrl
and
mov
dec
je
push
sbb
push
adc
jbe
shrl
test
cli
cmp
fdivp
or
or
mov
hlt
jno
testl
inc
mov
in
mov
mov
iret
mov
sbb
push
push
pop
icebp
stc
mov
adc
jg
jae
mov
out
test
mov
xchg
sub
cld
fisttpll
aas
ljmp
inc
js
mov
outsl
clc
cltd
dec
add
cs
push
aad
xlat
sub
hlt
dec
repz
sub
or
mov
sbb
xchg
pop
stos
bound
dec
enter
lods
ljmp
dec
xchg
fstpt
xchg
scas
adc
mov
mov
roll
test
and
cmp
lcall
mov
adc
xor
jnp
adcb
xchg
xor
push
lds
and
movsl
xor
cmp
dec
clc
ret
daa
mov
insb
push
mov
push
sbb
imul
mov
nop
pop
jo
cwtl
jecxz
jns
les
mov
loop
sbb
nop
imull
pop
or
jns
jb
mov
imul
adc
inc
clc
mov
sbb
lods
xchg
or
outsl
ljmp
shll
and
sub
sbb
rorb
daa
out
ljmp
adc
jb
test
fisttpll
pusha
pusha
inc
fisubrs
dec
js
test
xor
in
pop
addr16
push
cmp
dec
ja
inc
mov
add
daa
fsubrl
or
pop
popa
dec
std
and
mov
insl
mov
out
dec
push
lods
lret
dec
dec
adcl
or
dec
pop
mov
mov
jbe
imul
jbe
es
mov
push
insl
mov
cli
in
adc
iret
rorl
daa
xor
pop
cmp
sbb
cs
sub
call
cli
mov
mov
dec
mov
jecxz
mov
jns
ret
movsw
std
cmpsb
sub
xor
scas
or
and
outsb
imul
add
in
imul
mov
pop
jmp
or
push
sub
pop
mov
push
cli
jle
pop
out
dec
notb
out
inc
scas
cmp
lea
lock
cmp
push
mov
stos
mov
add
inc
test
mov
les
sbb
add
stos
adc
leave
sub
mov
scas
fsts
out
insb
and
xor
inc
pop
xchg
push
push
test
sbb
and
test
jno
jmp
mov
mov
adc
insl
cmp
and
sti
ror
and
mov
inc
push
and
and
or
add
shll
dec
xlat
cmp
pop
scas
scas
sub
int
dec
cmc
sub
std
sahf
sbbb
sub
fwait
cmp
xor
xor
mov
cli
in
loop
cli
aam
pushf
js
sub
scas
aad
jp
bound
and
imul
mov
iret
dec
popa
es
imul
push
jne
ret
test
push
sbb
dec
cmc
sahf
icebp
push
inc
cli
jne
cmc
inc
or
outsb
cmp
mov
loope
in
mov
ror
xor
mov
mov
dec
scas
lcall
pop
shll
inc
or
or
repz
leave
mov
jmp
dec
pusha
lds
dec
mov
mov
jg
cmp
stos
push
lods
cs
cmp
mov
mov
inc
add
add
xor
rcll
jg
dec
mov
dec
jl
pop
pop
add
adc
add
dec
les
and
xor
sub
clc
out
and
sti
cmpsl
movsb
jae
shl
clc
xchg
xor
fimuls
push
sub
cmp
mov
xchg
sarb
mov
adc
mov
sub
add
sub
test
sbb
pusha
pop
sub
lahf
mov
and
daa
sahf
rclb
std
push
push
je
pushw
pop
jae
data16
cmp
fcomp
sub
in
or
lcall
cmp
jb
test
or
sub
fs
sbb
jne
dec
push
sbb
push
bound
add
push
jae
popf
test
aas
loope
repnz
out
pop
xor
data16
jno
mov
mov
mov
xchg
sub
loopne
add
sti
and
xchg
jnp
sbb
inc
lret
or
out
test
add
cmc
sub
sbb
mov
loopne
sub
pusha
js
sub
xor
xchg
dec
sbb
mov
inc
cmp
mov
mov
pop
repz
dec
repz
shr
lcall
sbb
insl
repz
jg
fstpt
sub
sub
faddl
addr16
adc
mov
adc
dec
das
loopne
leave
sbb
mov
adc
in
add
mov
sub
adc
test
idivb
fdivl
add
inc
test
and
outsl
mov
jecxz
fisubl
sub
pop
ljmp
pop
xorl
xor
or
push
cmp
mov
aas
test
repz
ret
or
sbb
inc
mov
push
das
dec
adc
sbb
cmp
lcall
xchg
outsb
sub
adc
or
add
push
push
in
mov
xchg
test
cmp
pop
sbb
in
pop
test
lret
sbb
cmp
mov
fldt
sub
xchg
mov
xchg
mov
test
test
push
sbb
icebp
sub
xchg
pop
push
mov
int
insl
loopne
cmp
aad
mov
stos
test
iret
scas
dec
js
pandn
cmpsb
in
and
aam
sub
jg
jo
xchg
pop
dec
je
add
jmp
rol
lcall
jns
sbb
dec
lock
rcrb
mov
outsl
dec
fs
pusha
icebp
add
movsl
idivl
xor
lcall
std
pusha
inc
jl
js
dec
loopne
out
dec
aad
mov
mov
or
cmp
repnz
mov
fnstsw
cmp
icebp
out
jbe
in
push
test
mov
lock
push
adc
fnstsw
or
pop
loope
or
data16
push
cmc
cmpsb
sbb
add
push
out
cmp
xor
mov
test
push
mov
dec
xlat
xlat
adc
lds
or
repnz
mov
mov
dec
adc
lods
mov
loopne
cmp
jbe
jbe
push
jno
jae
shrl
aam
or
or
push
je
inc
jb
or
mov
mov
les
mov
xchg
out
int
xor
call
jo
pop
icebp
inc
das
in
push
push
jmp
pop
mov
outsl
arpl
sahf
hlt
je
cmp
ret
sahf
mov
hlt
mov
test
icebp
leave
sbb
and
add
outsb
ja
push
sarl
lcall
jo
repz
lock
outsb
repnz
dec
mov
sub
adcl
mov
lret
cmp
aas
in
clc
lahf
xor
xchg
sbb
mov
jge
lcall
pop
dec
lret
pop
mov
push
hlt
sub
xchg
test
test
sub
cmp
xchg
pop
scas
clc
jg
das
sub
ja
inc
fcmovnu
mov
mov
into
push
cld
mov
mov
jge
mov
push
fxch
pop
cs
push
adc
pop
push
popf
ja
cmpsl
sbb
leave
aas
push
pop
mov
push
mov
ret
fimuls
mov
fwait
mov
cmp
js
mov
das
lcall
imul
iret
dec
or
xor
mov
setae
pop
stc
adc
cwtl
pushf
lahf
and
cmc
clc
ss
repz
cs
dec
cmp
jae
adc
fstpl
dec
mov
popa
and
sub
cmp
icebp
adc
xchg
inc
push
fdivs
std
jo
jnp
pop
xchg
scas
jmp
loopne
push
fistps
movl
das
outsl
cmp
xchg
sub
int
cmc
xchg
js
das
jmp
xor
pushf
incb
jns
frstor
xlat
outsb
cmp
in
bound
jo
push
pop
xor
xchg
add
mov
pop
jbe
mov
mov
xchg
adc
push
pop
push
and
fwait
cmp
outsb
int3
add
iret
sub
rcrb
mov
cmp
adc
xchg
lock
in
sub
or
push
jl
adc
mov
or
rcr
push
jne
mov
pop
push
shll
dec
psubw
adc
sbb
test
pop
dec
add
jns
push
mov
daa
lcall
or
pusha
out
inc
lock
pushf
stos
xchg
sti
mov
pop
jle
outsb
jns
add
or
sub
sub
mov
and
shrb
sbb
pop
jmp
fs
movl
and
inc
outsb
mov
iret
jns
sub
inc
sti
out
movsl
dec
cli
sub
pop
and
mov
cli
aad
icebp
sub
jmp
jl
out
xor
push
lods
push
ficompl
dec
shrl
or
aad
incl
dec
adc
aam
jmp
mov
mov
sub
jnp
jns
ja
add
jle
dec
cmp
pop
int3
lds
add
and
xor
mov
jb
imul
and
jg
rorl
out
repnz
fbld
lock
xor
sbb
sbb
lea
push
mov
push
dec
ss
push
decb
popf
push
es
jb
jbe
inc
cmp
dec
cs
and
pop
hlt
sbb
pushf
inc
jo
ljmp
gs
idivl
loop
add
push
lret
mov
daa
arpl
push
push
fcompl
call
sbb
sbb
into
jo
jl
test
popa
xchg
mov
mov
pop
sub
pop
ret
int3
pop
ja
sub
jnp
loop
push
es
pop
fadds
jle
out
xchg
pop
scas
in
lahf
aad
dec
test
ret
iret
cmpsl
xchg
movsl
cli
jl
lret
or
inc
outsb
out
pop
sbb
dec
pop
aam
push
push
je
fdivs
enter
sub
decl
lret
mov
jle
inc
jns
ss
in
mov
divb
mov
adc
lods
pop
rcrl
or
dec
xchg
mov
call
cmpb
cltd
into
sub
addr16
ret
xor
repnz
movsl
xor
data16
pop
jl
sarb
andl
xor
call
pop
lcall
and
mov
push
sbb
cmp
cmp
divl
imul
sahf
xchg
add
testl
int3
popa
pop
xor
push
dec
inc
inc
in
shlb
arpl
add
sbbb
not
dec
mov
out
adc
inc
inc
dec
jg
add
scas
xchg
out
mov
pop
test
scas
sub
shll
fmuls
dec
push
xchg
loope
ds
aam
sbb
enter
lret
outsb
pop
cmp
ds
cltd
inc
lds
and
cmp
push
adc
inc
data16
stos
push
sbb
push
in
push
pop
mov
or
dec
add
adc
or
scas
add
gs
sbb
pop
xor
adc
out
sub
int
loope
xor
xor
test
push
dec
fildll
and
repz
xchg
loopne
gs
fs
xchg
lock
xchg
and
xchg
dec
pop
or
or
filds
jne
add
sbbb
addr16
es
add
scas
mov
loopne
mov
and
ret
js
aad
push
pop
cmp
sub
movsl
out
or
mov
cli
imul
cmpsl
mov
pop
orb
xchg
orb
pop
xchg
jmp
cltd
mov
add
and
andb
push
pop
push
lods
dec
mov
mov
inc
pop
mov
stc
emms
xor
imul
lods
mov
xchg
cmp
call
insb
fcoms
xor
jnp
call
dec
xorb
faddl
cld
xor
cmp
insb
lds
jb
xchg
push
cltd
cs
insl
mov
testl
inc
lock
mov
cmp
in
mov
cmp
movsb
push
or
sub
shll
out
loopne
or
dec
sti
orl
aad
push
imul
sbb
mov
dec
faddp
sbb
mov
mov
or
mov
xor
adc
inc
pop
pop
aad
and
lret
mov
xor
data16
pop
shl
xor
mov
pop
movsb
idivl
les
fsub
sbb
mov
xchg
rcrb
into
inc
mov
add
sbb
lea
xchg
dec
mov
sbb
mov
fists
es
inc
hlt
fmull
mov
in
aas
push
add
inc
inc
lcall
add
stos
inc
jge
adc
fisttpl
mov
xchg
push
sbb
cmp
ljmp
and
hlt
cmpsl
nop
and
fldcw
in
clc
daa
inc
or
in
xchg
inc
loop
addb
mov
call
fcomps
in
in
imul
xchg
sbb
fistps
jo
push
negb
pop
rorl
scas
cmp
add
adc
or
popa
mov
push
stc
ja
fnstsw
fadds
mov
xor
fldenv
into
pop
lds
imul
cmp
sar
sub
mov
sub
imul
sbb
adc
mov
cmp
or
loopne
inc
cmp
jecxz
rorb
mov
jp
femms
cmp
mov
cmc
mov
loop
xchg
pop
jnp
aam
xor
iret
das
fnsetpm(287
scas
loopne
pop
pop
lret
incb
test
iret
jg
call
push
pop
xchg
add
cmp
test
cmc
xor
pop
mov
push
rolb
dec
cmp
sub
shl
jecxz
lods
mov
int
push
in
xlat
sbb
jle
cs
xchg
ret
push
and
shll
stos
pushf
xor
cltd
rolb
inc
mov
sbb
push
adc
push
aas
pushf
das
adc
and
xor
sbb
stos
cli
or
push
mov
and
ficoml
pusha
push
stos
gs
push
mov
adc
mov
int
fisubs
aad
aas
jns
nop
sub
sbb
cli
ja
or
cli
das
jo
or
cwtl
cld
test
push
xchg
repnz
pop
add
stos
adc
shlb
inc
mov
sub
js
mov
push
adc
xor
popf
icebp
add
jge
aad
mov
cwtl
mov
pop
enter
xor
lock
outsb
lcall
les
xchg
and
xchg
clc
lret
pop
sub
cmpsl
or
or
push
jo
add
and
pusha
dec
xor
sub
bound
data16
shlb
fdiv
cmp
movsl
cld
fisubl
jl
pop
mov
mov
jmp
pushf
mov
add
mov
lret
xor
repz
or
outsb
push
in
lods
les
stos
push
mov
sub
cmp
mov
das
test
sub
fsubr
or
cltd
nop
ret
or
mov
xor
dec
adc
rcll
loopne
mov
test
pop
xchg
xchg
pop
fs
jb
sbb
push
and
xchg
and
hlt
xor
ljmp
mov
jno
es
add
cwtl
adc
push
test
stos
imul
xor
push
xchg
sbb
out
pop
sub
loopne
mov
gs
push
cmp
push
in
xor
xor
nop
cmp
lcall
jl
mov
icebp
sbbl
orl
ret
push
dec
jno
insl
popa
xor
aas
mov
imul
xor
cmc
sub
ret
into
pop
mov
lcall
xorb
lret
les
xchg
pop
out
push
pop
mov
mov
xchg
mov
ret
fildll
mov
push
cwtl
idiv
pop
and
pop
stos
inc
jmp
xor
imul
sub
sub
insb
sub
jne
leave
inc
mov
fdivrs
wbinvd
pop
push
test
outsb
in
inc
jne
cmp
lahf
clc
xor
dec
mull
int
test
jo
sti
push
dec
pop
pop
call
mov
inc
cmp
fwait
or
sbb
push
inc
in
or
popf
das
xor
xor
loope
xchg
add
inc
dec
mov
cli
decl
sub
mov
mov
sbb
mov
mov
adc
iret
jae
cmp
xchg
nop
and
mov
sti
imul
ret
jmp
rclb
and
popa
insl
xor
inc
pop
jg
insb
rolb
push
pop
imul
mov
ret
ja
xchg
mov
mov
outsb
out
rcr
outsl
mov
scas
sbb
lret
mov
ljmp
outsb
hlt
out
dec
cs
pop
pop
inc
pop
je
jge
mov
aas
pushf
pop
pop
ficomps
or
mov
les
jmp
push
add
and
add
mov
add
pop
inc
or
insb
inc
or
addb
nop
inc
or
add
add
adc
add
add
add
decl
add
inc
or
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
fcomp
add
jge
add
lods
dec
add
add
add
sub
jge
jnp
xor
add
or
dec
loope
push
push
push
push
mov
test
je
push
out
or
outsb
insb
xor
cs
push
mov
cmp
xor
jb
jne
insb
inc
gs
push
add
mov
call
xor
sbb
mov
jl
sar
sbb
adc
ss
clc
cmpl
mov
push
push
jbe
push
or
lea
inc
aad
stc
mov
add
adc
push
push
call
les
pop
pop
je
or
push
addb
rolb
add
pop
pop
pop
pop
ret
push
and
or
orl
jne
jne
inc
adc
mov
ret
mov
roll
inc
and
push
repnz
push
xchg
ds
pusha
push
mov
add
dec
or
push
inc
add
je
mov
push
call
dec
or
rol
or
cmp
outsl
dec
jne,pn
mov
in
mov
inc
push
jl
gs
iret
pop
mov
xor
mov
mov
shll
cmp
jb
push
cmp
sub
repz
andl
dec
jecxz
or
fiadds
fmuls
nop
mov
add
pop
pop
ret
xchg
add
mov
jl
loope
xchg
or
or
imul
jmp
or
jae
push
fbld
push
andb
sarb
incl
cmp
mov
mov
data16
mov
pop
frstor
fwait
xlat
push
sbb
rorb
sarb
ljmp
paddw
inc
std
adc
jge
pop
sub
push
loope
adc
jne
lea
add
push
call
xchg
into
adc
mov
enter
or
shl
rcr
adc
fldt
or
adc
push
orl
sub
out
jbe
cmp
add
decb
adc
shl
sbb
cmp
scas
sbb
pop
pop
mov
pop
mov
push
push
or
insb
das
rcll
or
test
jl
xchg
nop
rclb
adc
push
jbe
and
xchg
pop
dec
add
mov
addl
xchg
fildl
cmp
cmpsb
sbb
sbb
outsl
ret
ds
add
push
mov
fwait
nop
jne
mov
push
mov
and
inc
inc
push
div
jne
xchg
or
sbb
push
push
js
cltd
and
pushf
or
out
sbb
inc
adc
mov
sub
push
lods
lods
or
popf
push
adc
cmp
loope
addr16
jo
sbb
ret
lea
push
mov
add
call
or
out
mov
push
lock
in
adc
pusha
inc
je
ss
cmp
fisttpl
push
cmp
imul
call
push
pop
jmp
ljmp
enter
add
jne
loopne
rep
adc
popw
push
andl
or
mov
andl
addl
call
into
mov
out
sbb
test
adc
push
mov
clc
lea
push
mov
das
add
enter
std
sti
int3
pop
test
inc
mov
and
loop
inc
add
mov
sub
sahf
ret
shr
mov
add
movsl
add
pop
inc
push
or
push
pop
movl
mov
mov
es
into
xchg
mov
sbb
movntq
out
xor
mov
fcoms
jge
cld
nop
or
decl
or
sbb
out
add
clc
jmp
jmp
aam
lea
andb
loope
or
movsb
jnp
movsl
fistps
add
rcll
mov
bsr
lock
cmp
xor
inc
push
fdivl
cmp
je
stos
lock
lds
push
inc
orb
clc
xchg
mov
lcall
inc
enter
dec
lock
jnp
idiv
cmp
jmp
test
in
mov
jae
lock
mov
inc
cmpb
push
mov
sub
push
dec
loopne
or
movb
test
nop
sbb
or
inc
or
dec
clc
add
jl
push
xchg
dec
cwtl
mov
jge
scas
mov
sarb
push
in
sti
clc
cwtl
cwtl
push
jl
dec
xor
add
jecxz
add
stc
dec
lret
add
sub
jge
lea
push
test
cld
xor
sub
push
icebp
or
add
jmp
sar
jno
test
movsb
dec
fdivrs
push
mov
xchg
cs
sub
shl
mov
pop
test
ss
ja
daa
sbbl
stc
inc
lcall
xchg
add
adc
cmp
subb
lock
or
jb
pop
xor
sub
cmc
pop
pop
leave
pop
push
test
notb
push
add
jnp
add
inc
or
cmp
adc
adc
cmc
hlt
fwait
subb
push
push
test
lahf
and
and
xor
int3
decb
sub
arpl
mov
pop
sbb
push
or
es
outsl
push
or
test
rorb
add
mov
mov
sbb
clc
mov
call
add
push
call
aad
mov
add
or
add
lock
mov
xor
mov
add
mov
dec
add
jae
test
push
mov
jle
sbb
movsb
push
and
outsl
int
xchg
or
clc
sbb
push
call
mov
adc
sbb
cltd
push
push
fists
add
sbb
mov
cmp
jae
inc
mov
xchg
sahf
xchg
fs
sub
or
adc
ret
test
arpl
mov
xor
push
inc
adc
xchg
pop
sbb
sbb
inc
lea
inc
int3
mov
roll
push
push
and
test
push
movsl
sbb
xchg
xlat
es
sub
inc
push
aas
dec
test
push
ficoml
cmp
or
or
or
fdivrp
clc
add
and
inc
or
inc
icebp
dec
int3
roll
movb
int
sub
lods
or
push
call
sbb
or
add
mov
or
pop
pop
pop
pop
in
adc
cld
cmpsl
call
adc
inc
add
leave
jne
add
push
call
sbb
push
add
sar
mov
pop
testl
mov
pop
add
jmp
lods
xlat
sub
scas
leave
push
nop
add
sbb
in
and
ds
scas
pop
add
push
loopne
or
hlt
cltd
or
icebp
nop
sub
adc
cmp
dec
cmp
or
add
adc
cs
jmp
sub
push
clc
movzwl
test
xchg
jne
or
sbb
push
cld
inc
pop
adc
in
clc
add
cmp
jge
push
inc
movzbl
add
sub
sbb
je
enter
sbb
cmp
mov
int3
orl
push
push
add
into
add
jmp
ljmp
inc
lcall
inc
mov
push
psubsw
movsl
jmp
push
mov
clc
xor
adc
jbe
push
push
pop
mov
push
adc
dec
das
push
mov
out
testl
mov
int
in
sub
leave
adc
pop
jge
dec
or
sti
rolb
stc
add
movsl
sbb
push
fs
jnp
push
cli
movsb
outsl
rcrl
int
adc
stos
lret
into
pusha
cmp
adc
xor
rcrl
in
pop
pushf
mov
inc
add
lock
push
push
xchg
push
test
dec
mov
mov
pop
jge
push
outsb
dec
sub
ss
das
adc
add
adcl
dec
push
hlt
push
les
test
jge
fldcw
push
push
in
ror
inc
aam
xchg
jno
mov
adc
outsb
sti
lahf
inc
adc
or
jmp
pop
sbb
push
stc
shll
sub
adc
inc
movl
or
sub
cmp
jne
dec
pop
in
push
xchg
fimull
inc
or
sub
dec
mov
icebp
pop
sarb
lahf
sbb
and
push
je
add
xor
clc
inc
inc
or
or
lret
sbb
test
and
push
push
push
call
aaa
test
out
xchg
outsb
or
lds
sub
mov
outsb
sub
xchg
inc
mov
hlt
xchg
imul
xor
addr16
jmp
pop
inc
rorl
and
icebp
jge
push
adc
bound
jp
add
testb
test
pusha
test
adc
inc
push
push
test
lock
push
sub
inc
jecxz
cmp
mov
inc
jb
xor
imul
jmp
sahf
push
xchg
xlat
lods
movsb
cld
cmp
pusha
in
repz
sub
mov
loopne
rclb
pop
sbb
dec
or
jmp
ss
push
cmp
je
cmp
pushf
sbb
sub
mov
cmp
dec
adc
jl
sbb
popa
adcb
daa
jg
imul
push
cld
push
pop
inc
push
or
mov
sub
xchg
or
jecxz
scas
inc
and
jb
add
jne
mov
mov
and
or
call
and
add
mov
popa
je
outsb
and
push
outsb
push
push
jo
arpl
and
mov
repnz
je
and
imul
inc
dec
inc
cs
insb
pop
pop
jmp
imul
jne
je
sub
mov
movsl
dec
jne
xchg
xor
dec
push
outsl
pop
dec
popa
addr16
shll
js
ja
xchg
je
mov
adc
popa
or
jae
or
add
dec
inc
incl
imul
test
mov
scas
pop
outsb
fs
jo
adc
out
inc
je
out
insb
sbb
mov
leave
inc
add
mov
pop
sbb
xor
push
add
push
push
dec
dec
out
sbb
add
add
rolb
mov
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
les
add
pop
add
fimuls
add
inc
or
sbb
or
add
inc
add
inc
or
adc
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
