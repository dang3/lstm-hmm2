in
test
or
mov
pop
mov
sbb
xchg
sbb
les
fistpl
mov
adc
mov
pusha
jle
lods
jg
sbb
popf
adc
cli
jnp
inc
mov
adc
pusha
shlb
sub
jle
pop
jmp
repz
push
test
mov
stos
repnz
xor
xor
pop
xchg
pop
mov
push
aad
faddl
mov
cmovno
or
lahf
inc
ja
sub
fnsave
jb
arpl
push
sbb
dec
pop
andb
dec
sbb
mov
aaa
gs
shlb
or
int
mov
adc
insl
mov
mov
push
lea
dec
add
mov
mov
scas
lret
fistps
jge
dec
pop
cmp
arpl
lock
xchg
mov
repz
push
cld
jmp
adc
push
xchg
fildll
pop
stos
outsl
mov
mov
movsl
nop
aaa
stc
add
push
sarl
pop
fcmovnb
push
ja
jmp
and
pop
jg
mov
shlb
inc
sbb
add
sub
push
xor
sahf
dec
xor
imul
leave
pop
mov
xor
int
lret
cmpsl
ret
flds
mov
cmpsl
pop
xchg
out
clc
cwtl
es
lods
mov
shl
inc
push
fwait
ret
dec
lahf
pop
es
inc
adc
xchg
lret
sbb
out
test
lods
sti
cmpsb
pop
xor
mov
lcall
lret
ret
lock
outsl
sbb
add
jp
imul
add
lret
movsl
dec
sbb
xlat
pop
sbb
test
jmp
push
mov
and
cmp
ror
inc
pop
cld
leave
sbb
jno
inc
fmuls
fmuls
jp
sbb
push
stos
jge
inc
lcall
jle
imul
negb
mov
sbb
jmp
cmp
int
cmp
js
mov
inc
sbb
aad
dec
shlb
dec
frstpm(287
or
adc
inc
adc
fsubr
dec
vpmullw
pop
rcll
fsubs
sar
jecxz
fnsave
inc
fwait
enter
mov
push
sbb
test
cmpb
push
rcll
pop
add
cwtl
dec
and
mov
mov
test
add
int
fs
mov
jns
mov
mov
pop
push
jle
pop
lock
into
sbb
add
pushw
cwtl
dec
or
nop
push
stos
mov
aaa
fadds
mov
movsl
mov
fcmovnu
ljmp
popf
lret
icebp
add
cmp
mov
xchg
fsts
sub
ficoml
cs
imul
aad
xor
xor
sbb
push
leave
jmp
or
xchg
into
xor
addl
mov
hlt
xor
jo
xchg
adc
stos
cmp
lret
xchg
pop
fnstenv
sub
xchg
push
sahf
push
jle
iret
xchg
pop
pop
je
cmp
xchg
push
jle
clc
enter
add
jle
xor
daa
hlt
xor
popf
outsl
dec
mov
loope
and
enter
xor
out
push
shlb
roll
mov
adc
setg
daa
push
inc
sti
lds
pop
and
mov
shll
pop
adc
add
fs
popf
pushf
cmpsb
xchg
and
insb
mov
and
in
mov
lret
lcall
sbb
mov
scas
xchg
bound
cwtl
nop
popf
mov
or
jp
xchg
or
shl
mov
adc
adc
cmp
mov
push
or
lahf
scas
pop
jno
in
rorl
sbb
andl
jmp
or
inc
pop
jmp
and
dec
mov
fptan
stos
cmc
mov
repz
inc
insl
out
jmp
or
cmp
clc
rolb
scas
inc
cltd
enter
push
adc
jp
sub
sub
out
jne
mov
mov
shlb
ret
cmp
and
mov
test
fwait
mov
inc
mov
cld
daa
fnstenv
mov
inc
sbb
inc
sbb
or
roll
lret
inc
sbb
daa
push
mov
pop
test
mov
pop
mov
jns
xchg
and
jae
push
clc
mov
mov
xchg
add
cmp
or
cmp
adc
lock
mov
mov
ljmp
jnp
sbb
jge
pop
xor
fwait
js
jp
mov
mov
cmc
cmp
add
xor
push
psllq
dec
sarb
clc
bound
pop
idivl
stc
repnz
or
add
mov
roll
mov
jnp
sbb
mov
in
int
xor
jb
add
and
sub
enter
aad
or
add
fdivrl
mov
loop
ljmp
xchg
div
cmp
xor
rcrl
add
mov
lahf
fcompp
inc
pop
cli
add
cltd
xchg
adc
clc
in
and
jmp
cwtl
cmc
xor
sbb
mov
scas
xchg
bound
cwtl
nop
popf
mov
or
jp
xchg
or
shl
mov
adc
adc
cmp
mov
push
or
lahf
scas
pop
jno
in
rorl
sbb
jl
clc
jle
je
jmp
or
inc
pop
jmp
and
dec
mov
fptan
stos
cmc
mov
repz
inc
insl
out
jmp
or
cmp
clc
rolb
es
cltd
enter
push
adc
jp
sub
sub
out
jne
mov
mov
shlb
ret
cmp
and
mov
test
cmc
lret
clc
cmp
inc
pop
pop
sub
mov
or
xlat
adc
sbb
test
xor
and
xor
stos
sub
push
mov
push
dec
sbb
pushf
cs
mov
sahf
das
xchg
stc
cli
in
test
or
ret
bound
and
xchg
ficoml
outsl
les
sbb
inc
cld
repnz
movsl
fstl
jnp
dec
je
into
xor
sbb
filds
adc
mov
andl
dec
adc
rorl
mov
inc
mov
icebp
pop
ret
inc
gs
inc
or
and
add
int3
sbb
push
inc
cltd
enter
jo
dec
push
int3
insb
enter
adc
or
cmc
enter
xchg
push
adc
out
mov
or
pop
jp
arpl
pop
and
cmp
mov
cmp
pop
rol
cmp
insl
cltd
popf
sti
jecxz
arpl
inc
sbb
inc
aas
rolb
cmp
sbbb
inc
sbb
dec
sbb
inc
lods
push
and
leave
xchg
inc
sbb
dec
pop
inc
mov
bound
call
xor
push
sub
add
push
add
xchg
stos
sti
push
fimuls
mov
sarl
dec
xor
cmp
push
fcompl
jmp
mov
js
dec
xlat
push
mov
sbb
mov
in
aam
fdivs
aaa
rcr
xor
sbb
daa
adc
test
gs
inc
jecxz
inc
mov
pop
into
fmuls
mov
jne
jecxz
adc
add
inc
dec
lahf
cmc
iret
pop
stos
mov
out
aam
pop
pop
enter
mov
add
insl
sub
in
into
hlt
ja
in
xor
cmp
dec
xchg
mov
sbb
in
dec
push
divb
push
imulb
and
mov
sbb
add
ret
cwtl
or
adc
mov
add
int3
xchg
sbb
pop
pop
repz
mov
cmpsl
xchg
test
inc
addr16
mov
xchg
add
pop
mov
adc
sub
mov
xor
lds
push
fsub
jmp
pushf
sahf
xchg
cmp
push
pushl
cmp
je
loope
into
inc
fnstsw
or
pop
inc
sbb
adc
iret
mov
test
adc
es
xor
xchg
sub
fdivrl
and
push
push
mov
mov
sbb
mov
test
inc
sub
sub
push
and
lahf
pop
pop
add
fucomi
pop
xchg
sbb
dec
xor
into
sbb
out
mov
sub
imulb
jo
pop
nop
push
popa
sbb
inc
pop
mov
les
in
popf
sti
xchg
lahf
cmp
lds
sti
lods
inc
sub
xlat
std
int3
jmp
repz
jo
shlb
push
cmp
add
add
inc
cmp
jmp
pop
scas
inc
jmp
dec
xchg
cs
pop
jg
pusha
mov
loope
cmp
mov
stc
sub
test
out
jo
dec
sbb
add
dec
mov
icebp
or
or
dec
into
inc
push
fidivrs
jge
imul
popf
cmp
imull
xlat
dec
js
cmp
fstl
sbb
push
loop
adc
sub
loop
decb
sbb
mov
sbb
out
and
sub
call
push
cmpl
lds
ds
imul
flds
push
dec
adc
mov
stos
mov
mov
mov
jb
dec
inc
std
movsl
rcll
loop
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
shlb
jo
add
aam
adcb
add
pop
push
xchg
ret
cltd
fcoml
pushf
scas
adc
jmp
push
jg
push
cwtl
mov
mov
xor
cmp
add
jecxz
sub
mov
dec
aam
pop
mov
and
adc
xchg
fists
push
loope
lods
insl
jbe
jp
enter
jg
movswl
jmp
std
mov
sti
and
test
push
sub
enter
lea
cmp
aas
ljmp
lahf
test
pop
test
fdivr
jmp
cmp
pop
mov
movsl
add
pushl
pop
mov
xor
dec
xchg
jo
push
dec
sbbb
jne
clc
dec
add
inc
cli
cmpsl
and
lret
mov
int
outsl
rcrb
push
lret
pop
imul
mov
prefetchnta
xchg
fsts
xor
mov
lds
loop
xchg
sbb
rolb
mov
add
cltd
sub
pop
mov
iret
js
mov
jecxz
cld
repnz
and
pop
es
add
shlb
push
or
lret
fldenv
mov
test
push
fisubl
push
fsubs
sub
mov
and
call
push
ret
lret
and
out
jmp
jecxz
and
sub
cmp
ret
mov
fsts
out
ss
lcall
setae
jecxz
push
mov
repz
divb
loop
inc
sbb
sahf
test
ret
test
nop
push
hlt
mov
cmpb
adc
xchg
repz
mov
xchg
jmp
jge
xchg
jae
arpl
test
fiaddl
loop
out
addb
sub
dec
data16
pop
mov
ret
adc
pop
cmpsl
pop
js
enter
and
jmp
popf
test
adc
js
lods
das
fbstp
mov
or
sbb
add
xchg
sub
testb
fsubs
xchg
imul
adc
enter
add
mov
or
movsl
movsl
inc
out
or
cltd
sahf
inc
sub
sub
in
popf
repz
add
mov
imul
daa
sti
ds
mov
lock
loop
inc
sbb
xchg
test
ret
test
lcall
iret
pop
xor
sarl
test
mov
push
sub
movsb
leave
test
xor
mov
cld
mov
cmp
in
test
nop
sbb
and
push
sub
lret
or
mov
push
stos
fnsave
sti
repz
sub
loope
sbb
aad
mov
jmp
lahf
adc
out
js
decl
inc
xchg
ret
clc
mov
cmpsb
call
les
xchg
sub
xor
inc
mov
push
stos
icebp
mov
sub
add
lahf
pop
xchg
or
mov
pusha
fistl
aam
sub
fidivl
bound
mov
xchg
repz
loopne
sbbl
stc
fstl
dec
mov
mov
jae
mov
pop
loop
cmp
sub
leave
sarb
imul
xor
pop
movsb
fisubl
mov
inc
push
adc
aas
xchg
mov
push
repz
ret
pop
inc
pushf
test
roll
fsts
leave
push
lea
dec
dec
sahf
xchg
fistl
fiaddl
jae
sub
shrl
test
scas
mov
lahf
jecxz
enter
inc
shlb
or
sbb
or
mov
mov
jnp
inc
push
mov
insl
or
xchg
push
fsubs
and
std
bound
outsl
movnti
imul
mov
sbbb
sbb
mov
int3
inc
pop
xchg
xchg
fwait
adc
das
in
cmc
mov
leave
jae
sub
cld
xabort
lcall
mov
mov
xchg
add
ret
cmpsl
jo
popf
sbb
repnz
mov
orb
mov
testb
movsl
cmp
jg
shll
fidivrl
sub
js
ljmp
into
mov
rcrl
xor
or
adc
xchg
fsts
loope
gs
lods
arpl
pusha
mov
cld
loop
sbb
push
stc
and
sub
inc
xchg
mov
sub
xchg
xchg
cwtl
sar
and
and
push
mov
inc
insl
xchg
les
gs
adc
call
lock
enter
rcll
dec
add
dec
lcall
enter
cltd
sahf
sub
divb
mov
repz
adc
push
insb
bound
add
call
mov
mov
cmp
jp
add
pop
arpl
sbbl
inc
sbb
leave
cltd
mov
cld
insb
test
lahf
sbb
test
push
in
xor
pop
xor
mov
mov
mov
inc
pop
xchg
rcr
nop
pop
dec
push
cld
mov
stos
std
cld
pop
mov
std
xor
mov
inc
mov
loope
dec
movsl
push
insb
jp
scas
ret
xchg
jge
inc
xlat
fdiv
sbb
or
inc
add
sbb
mov
adc
xchg
cmc
mov
xchg
adc
cli
xor
cmpsl
ret
mov
xlat
xchg
fxch
addl
mov
sbb
push
pop
repnz
cmc
clc
pop
mov
jmp
gs
filds
aam
cmc
fistl
dec
adcl
lret
sbb
mov
lock
cmp
outsb
fs
sub
nop
jmp
or
leave
lds
dec
jp
xchg
push
hlt
mov
nop
xlat
dec
sub
ret
sbb
cltd
fildll
stc
mov
insl
sti
stos
into
out
je
mov
sub
adc
mov
dec
loop
mov
push
stos
fnsave
sti
xchg
xchg
push
jne
loope
fwait
loope
dec
lea
jp
lret
pushf
mov
js
jge
inc
xlat
fdiv
sbb
sbb
jb
mov
inc
iret
mov
mov
pop
and
xor
stos
sbb
movsb
jp
mov
or
clc
popf
push
fstl
cmp
fucomi
hlt
std
mov
sti
and
std
xchg
xchg
into
mov
pop
mov
xchg
inc
loop
mov
sub
ret
ret
fwait
pop
loop
int3
outsl
mov
shlb
xlat
inc
jae
mov
jecxz
push
xchg
mov
jbe
add
mov
mov
imul
mov
pushf
inc
stos
cwtl
adc
mov
mov
dec
ret
sbb
lahf
sub
cwtl
fildll
stc
mov
adc
lahf
fisttpll
test
or
jb
sub
lods
mov
imul
push
jb
lods
ret
sbb
mov
xchg
rorb
rolb
jo
cmpsl
mov
fwait
leave
in
loope
inc
or
or
pop
icebp
jb
cmp
xchg
jge
jb
pop
and
mov
cmp
test
mov
pop
mov
pop
mov
cmpsb
les
popf
jb
xchg
add
pop
and
mov
dec
dec
mov
inc
mov
test
aad
imul
cld
int3
sbb
out
add
mov
movsl
sti
and
jmp
push
mov
jecxz
push
xchg
mov
jbe
jne
lock
pop
xor
iret
inc
sub
jg
repnz
aas
adc
imulb
js
data16
inc
mov
stc
add
sbb
mov
lcall
dec
rcr
jae
pop
jno
inc
fmuls
fmuls
pop
das
or
push
out
xchg
fists
lods
inc
lcall
jle
mov
lcall
shr
sbb
fisubrl
jnp
inc
mov
sub
repz
xchg
adc
mov
or
lret
fsubrs
mov
test
mov
std
inc
jp
cmp
sbb
cmpsb
jnp
enter
rclb
loopne
fstps
jno
enter
int3
push
push
xchg
stos
insl
sub
pop
xor
js
dec
sbbb
push
mov
movsl
das
mov
and
mov
and
push
adc
xor
jns
mov
add
xor
add
lods
movsb
sbbb
aas
repz
mov
cmpl
mov
inc
mov
stc
jnp
xchg
push
in
stos
inc
insb
ljmp
fucom
jmp
or
or
cmp
adc
mov
sbb
sub
rcl
cwtl
pushf
xchg
sbb
das
add
test
scas
mov
lahf
jecxz
enter
adcl
dec
jmp
adcb
mov
xchg
lock
mov
cltd
xor
scas
mov
jo
out
jae
xchg
and
cltd
mov
cmpsb
jnp
clc
jno
jecxz
inc
je
or
and
cld
mov
dec
dec
mov
sbb
call
ja
ret
fwait
pop
loop
insb
call
mov
cmp
lock
in
rol
dec
add
add
cmp
inc
data16
mov
divb
push
lods
xchg
sub
adc
int3
dec
mov
and
jns
popf
inc
in
jae
sbb
mov
xchg
in
push
jl
sbb
add
inc
sbb
or
stos
arpl
rclb
loop
mov
pop
jno
push
bound
mov
or
jnp
jg
scas
loope
out
js
mov
adc
rolb
xchg
adc
xchg
jge
jb
addr16
adc
pop
and
mov
mov
mov
and
fstl
jmp
add
sti
xor
fsubl
mov
arpl
xchg
enter
aam
sub
sub
mov
fsubr
push
and
rcrb
mov
cmc
mov
xor
mov
imul
jecxz
and
push
add
mov
adc
pop
add
lcall
xchg
xor
dec
out
loope
sbb
add
fmull
mov
jnp
inc
in
xlat
dec
sbb
mov
in
int
pop
dec
mov
mov
or
push
cmp
ret
or
mov
imul
jge
dec
or
cld
jp
add
sbb
imul
in
jge,pt
inc
push
dec
fimuls
sti
out
push
fmul
lea
rorb
adc
mov
sbb
pop
xor
adc
jp
mov
shlb
movsb
inc
add
ljmp
and
jmp
and
mov
inc
inc
mov
ret
add
xchg
push
hlt
dec
cmp
pop
fnstenv
and
xorb
divb
mov
iret
ret
clc
jmp
pop
mov
hlt
mov
mov
dec
std
sub
or
mov
cltd
inc
out
xor
mov
xor
ror
jmp
fistps
jns
stc
les
push
lock
and
cli
mov
cld
mov
sub
fisubl
mov
jnp
xchg
fmuls
lcall
aam
cmp
or
adc
jae
lods
pusha
test
rolb
cmp
sub
push
mov
iret
js
mov
xor
or
dec
xchg
rclb
in
loopne
xchg
cwtl
inc
mov
jnp
inc
push
mov
xchg
sbb
pusha
or
dec
nop
insl
push
inc
push
dec
sbb
fwait
psubw
call
aam
das
pop
lds
pop
push
fsubrl
out
enter
fsubr
push
and
push
mov
jne
aaa
ljmp
push
mov
repz
cmp
push
arpl
pushf
sbb
ret
mov
adc
lret
cmp
add
out
and
ja
inc
std
xlat
leave
ljmp
lods
cli
sbb
mov
arpl
lds
sbb
popa
xor
push
out
mov
sbb
or
rcl
cwtl
pushf
xchg
sbb
jns
fstpl
xchg
popa
lret
inc
repz
loop
inc
mov
pop
jb
movb
inc
rcll
dec
sarl
mov
pop
pop
mov
sbb
mov
loope
test
in
xchg
jmp
ret
push
mov
fwait
into
fdivs
scas
dec
jmp
pusha
xchg
sbb
int3
pop
and
mov
xor
sbb
jmp
jns
xor
pop
cmp
aaa
mov
popa
push
mov
xor
or
mov
push
dec
daa
cmp
jp
add
or
pop
mov
sbb
leave
cltd
stos
lret
movsl
ret
insb
test
stos
add
inc
cli
cmpsl
adc
lods
sbb
mov
test
or
mov
mov
shrb
mov
sbb
lret
add
pop
in
imull
stos
jecxz
loopne
fistl
insl
shrb
test
fidivs
test
xchg
in
pop
dec
and
sbb
in
ss
mov
or
sbb
loop
repnz
xchg
lock
leave
mov
cltd
xor
mov
xchg
fnstsw
mov
cltd
fdivs
pop
xor
fbld
jno
jecxz
clc
push
andb
jecxz
add
xchg
xlat
cs
pop
fnstenv
and
xor
fdivp
mov
or
mov
jno
mov
aaa
sti
add
mov
sbb
jae
ret
inc
sub
pop
adc
insl
movsl
sbb
mov
xchg
sub
adc
xchg
pop
repz
xchg
jmp
fbstp
aam
imul
rcrl
test
roll
in
inc
pop
xchg
adc
adc
cmp
les
cmp
or
or
int3
scas
fists
xchg
incl
enter
inc
mov
or
sbb
loop
repnz
xchg
lock
cmp
or
push
pop
repz
lahf
outsl
aas
ret
bound
or
mov
and
mov
inc
inc
mov
ret
add
xchg
push
hlt
dec
movsb
xchg
out
aad
imul
cld
pop
push
mov
ret
mov
pop
test
cmp
mov
mov
sub
aaa
sti
repnz
sbb
outsl
ret
mov
adc
lret
cmp
cltd
nop
loop
cwtl
dec
pushf
dec
and
ror
sbb
popf
xchg
ja
ficoml
push
sub
sbb
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
inc
xchg
mov
xchg
sub
or
adc
xchg
fsts
scas
aaa
xchg
mov
arpl
test
mov
icebp
xor
xor
mov
push
mov
mov
outsb
xlat
aad
mov
negb
mov
jmp
movsb
jp
mov
push
inc
aad
jge
mov
xchg
xchg
fldenv
pop
addr16
je
or
and
cmp
dec
dec
mov
cltd
sahf
mov
mov
fsubp
mov
dec
aad
fadd
repz
dec
call
mov
in
ljmp
mov
jae
cmpsl
sbbb
sbb
sahf
test
ret
test
js
jg
shll
fisubl
stos
inc
push
in
and
xchg
mov
div
mov
ret
pop
xor
les
mov
add
popa
xchg
push
adc
mov
push
sahf
adc
jae
and
shrl
cmpsl
dec
push
fucomi
cmc
mov
fdiv
sub
sbb
mov
fwait
push
dec
mov
and
inc
jmp
mov
xchg
imul
lahf
xlat
mov
fsubs
mov
rcll
dec
or
loopne
dec
pop
jno
shr
and
dec
mov
push
cmp
call
cmc
arpl
test
xor
loopne
mov
push
cmc
lret
daa
call
fisttps
mov
jp
add
cmp
or
cltd
inc
fidivs
cwtl
or
pushf
loop
les
les
push
in
dec
pop
dec
je
mov
sbb
push
lret
into
jne
mov
adc
inc
or
xchg
test
cmp
xchg
add
mov
fwait
adc
loopne
cmp
or
inc
mov
fmull
jnp
dec
push
push
fidivs
in
inc
incl
enter
adcl
dec
cmp
adc
pop
mov
or
lret
cltd
xor
clc
outsb
test
push
fsubs
jmp
ret
xchg
and
mov
cmpsb
jnp
mov
jecxz
adc
or
mov
push
xchg
popf
push
test
add
xchg
cmp
or
pop
jg
es
lea
pop
and
mov
push
dec
push
dec
sbb
sti
mov
imul
add
xor
add
lods
mov
adc
gs
and
ja
inc
in
leave
mov
test
lods
cli
cmp
and
ljmp
or
and
xchg
pop
fdivl
sub
push
stos
rcrb
jne
vsubss
jle
mov
xor
lods
inc
pop
lcall
xchg
loop
iret
and
imul
mov
stc
jnp
mov
sub
pop
stos
aam
mov
jnp
inc
push
mov
xchg
sbb
sub
xchg
push
pop
and
dec
in
jb
pop
mov
mov
shlb
cltd
push
bound
cmc
mov
je
cmp
jne
dec
adc
sub
dec
sbbb
push
mov
xor
jne
pop
add
ljmp
sti
pop
es
rcr
repz
mov
push
add
std
xchg
inc
aas
adc
mov
fs
out
imul
cli
push
dec
pop
dec
iret
or
push
popf
lods
leave
test
das
cli
sbb
and
dec
popf
ljmp
or
push
cmp
lret
or
pop
sub
jp
add
sbb
nop
cmp
and
or
dec
fsts
popf
fimuls
sti
out
push
fmul
ds
sahf
lcall
pop
dec
mov
sbb
pop
xor
imul
xchg
mov
push
pop
scas
enter
ljmp
and
inc
cltd
jmp
and
mov
ror
mov
push
or
lea
xor
cltd
fimuls
jb
loop
mov
lods
mull
mov
call
fucomip
hlt
cmp
fists
iret
int3
xchg
aaa
cmc
add
mov
sbb
inc
mov
inc
sub
dec
inc
sbb
leave
mov
add
loop
clc
lret
inc
std
xlat
cmp
inc
and
inc
push
rcr
dec
push
lret
pop
imul
mov
prefetchnta
adc
hlt
dec
sub
mov
mov
fcmovne
xchg
fwait
adc
loopne
fistpl
or
lods
fidivs
test
ficoms
scas
popf
scas
jg
stc
icebp
xor
push
out
pop
xor
out
xchg
xchg
pop
mov
jmp
sbb
mov
adc
jmp
movsb
jp
mov
cmovae
out
hlt
std
mov
sti
and
test
dec
or
cltd
sahf
ret
dec
mov
ret
gs
mov
push
jne
les
in
mov
push
mov
in
ljmp
jecxz
movsl
mov
repnz
lcall
xchg
mov
testb
addr16
fld
pop
xor
mov
movsb
fidivrl
lea
dec
sub
mov
mov
mov
mov
xchg
xchg
in
push
sbb
sbb
add
push
imul
arpl
sbb
scas
mov
lcall
inc
or
push
insl
jbe
lods
inc
pop
pause
pusha
mov
cld
loop
mov
jmp
mov
andl
adc
push
dec
shlb
sbb
pop
xor
imul
push
pop
scas
enter
ljmp
and
cmp
loop
push
add
mov
push
or
lea
fildll
in
dec
fnstenv
shl
pop
and
arpl
mov
repnz
sarb
in
mov
jae
mov
jecxz
push
xchg
xor
or
hlt
jae
sbb
gs
push
lods
xchg
sub
adc
dec
mov
pop
and
push
dec
push
dec
push
dec
sbb
std
in
jmp
xor
or
mov
pop
or
xchg
lcall
lds
ljmp
cmp
loope
inc
mov
stos
jnp
jg
scas
loope
pusha
sbb
mov
and
mov
mov
jge
dec
pushl
cmpsl
inc
cwtl
inc
stos
sbb
fisubl
mov
mov
adc
xchg
enter
xchg
mov
or
loopne
dec
pop
icebp
int
out
push
and
xchg
jle
mov
das
pop
cmc
hlt
imul
bound
lret
popa
push
mov
aam
sti
sub
jnp
mov
std
lcall
sbb
jl
mov
iret
icebp
scas
dec
movsl
dec
and
mov
test
rorb
lret
clc
xchg
scas
movl
cltd
movsb
test
ret
sub
add
nop
stos
clc
scas
xchg
fisttpl
sahf
xchg
out
sbb
add
xor
pop
cmpsl
pop
fs
lods
xor
or
scas
aaa
mov
cli
jnp
inc
mov
add
dec
and
add
cwtl
rcl
nop
stc
repnz
movsl
ret
jb
xor
cmpsl
mov
jae
cmpsb
sub
mov
hlt
js
orb
mov
xchg
inc
arpl
mov
sub
ffreep
cli
int3
fwait
pop
loop
int3
pusha
mov
shlb
lds
roll
in
rol
dec
movd
popl
repnz
pop
icebp
dec
or
sub
nop
jg
repnz
adc
push
mov
pop
stos
push
insb
fcmovne
sbb
dec
xchg
mov
lcall
mov
fbstp
add
adc
addr16
or
loope
cmc
mov
push
sub
mov
jbe
sbbb
inc
pop
mov
push
jo
into
scas
popa
sti
inc
in
sbb
push
loop
inc
mov
pop
jb
sbb
inc
sarl
mov
pop
pop
mov
fwait
xor
cmp
sub
cmpsb
fidivl
test
and
lods
mov
jnp
clc
jno
jecxz
adc
mov
lods
xchg
mov
pop
and
and
mov
xchg
cmp
or
pop
jg
inc
pushf
lea
pop
and
imul
inc
in
repz
cmp
repz
mov
jg
fidivl
add
nop
or
mov
mov
cmp
imul
xor
ja
xchg
mov
adc
fucom
cli
test
cld
mov
test
cmp
mov
dec
bound
push
inc
lcall
or
sbb
inc
lcall
pusha
dec
add
jecxz
fwait
xchg
in
ret
scas
cs
icebp
leave
es
push
jecxz
pushf
repnz
add
sbb
mov
mov
cld
xor
dec
mov
fnstenv
dec
aam
sbb
sub
mov
fwait
adc
push
mov
in
int
pop
bound
cmpb
mov
sbb
push
pop
jge
mov
popf
out
das
clc
jmp
gs
pop
sbbl
into
inc
sahf
sarl
mov
mov
cmp
jp
add
add
mov
dec
xor
movsb
sbbb
inc
sbb
push
jmp
lds
out
stc
mov
push
cmc
fstpt
stos
dec
cld
ljmp
frstor
fisubl
jno
inc
fmuls
fmuls
jp
or
shl
aad
pop
mov
inc
lcall
pusha
lods
add
add
sub
inc
mov
iret
js
mov
repnz
cmp
add
shlb
push
or
lret
fnstcw
mov
test
mov
std
inc
jp
cmp
inc
sbb
cmpsb
gs
push
popf
outsl
push
ret
sbb
adc
mov
sbb
sbb
repnz
sbb
ds
xchg
fwait
cmp
int
gs
das
in
jmp
loop
mov
int
cwtl
lret
repz
dec
call
lahf
stos
and
jmp
mov
inc
sbb
in
icebp
and
pop
and
mov
sub
lods
xchg
sub
adc
pop
insb
xlat
roll
jns
popf
inc
in
jae
sbb
in
repz
jno
ffreep
or
xchg
add
sti
imul
fistl
cltd
xchg
and
push
xor
ficoms
sub
icebp
xor
icebp
ret
inc
popf
xor
pop
pop
dec
aam
aam
mov
sbb
pop
xor
pop
into
fisubrl
fsubl
stos
cmp
fs
pop
mov
jne
jecxz
xchg
aas
add
inc
inc
mov
pushf
inc
pop
xchg
xchg
fwait
adc
cmp
das
in
cmc
mov
leave
bound
mov
lods
imul
les
cmp
insl
push
push
sbb
bound
popa
mov
adc
sub
mov
cmpsl
ljmp
iret
push
aad
mov
push
sub
movsb
fldcw
push
pusha
cmc
fbstp
adc
movsl
in
mov
pop
sub
les
xchg
jne
popf
sbb
xchg
jl
xor
imul
movb
loope
fwait
loope
inc
xor
and
jnp
jg
scas
loope
pusha
sti
and
mov
and
xor
adc
cmp
sub
sbb
add
push
fsubs
movsl
std
lea
jge
fcmovu
sti
sti
and
sahf
aad
mov
pop
mov
adc
enter
mov
add
insl
sub
ret
mov
imull
ret
arpl
inc
sti
xchg
jo
push
iret
sbb
mov
cltd
xor
std
sbb
adc
mov
fs
out
lods
jecxz
cli
dec
iret
or
push
popf
lods
leave
test
out
cli
or
and
dec
popf
ljmp
sbbb
out
addb
sub
dec
movsl
or
movsb
fucomp
fstps
lods
lds
adc
sahf
xchg
fwait
inc
adc
pop
lods
push
jmp
mov
andl
push
out
and
out
mov
pop
xor
xor
cmp
movsl
cli
jae
inc
rorl
bound
pop
push
sti
xor
fadds
mov
inc
inc
mov
sbb
push
xchg
nop
fwait
adc
cmp
das
in
cmc
mov
sbb
xchg
mov
cmp
and
mov
test
jo
jecxz
and
push
add
mov
adc
sbb
mov
add
testb
iret
vmovntps
test
xchg
pop
repz
xchg
jmp
jge
xchg
dec
repz
test
lea
add
mov
fisttpl
sahf
pop
out
pop
mov
ret
xor
fs
lods
jno
rcll
fsub
adc
pop
push
pushl
jmp
mov
andl
cmp
dec
fldcw
fwait
jmp
loope
jp
adc
jp
mov
shlb
inc
add
ljmp
sbb
mov
mov
cwtl
push
sbbb
pushf
test
loopne
mov
cmpl
push
mov
repz
mov
imul
jmp
jp
adc
fdivr
mov
imul
push
lock
sub
add
lods
xchg
sub
adc
mov
push
pop
and
jns
popf
inc
in
jae
sbb
mov
rcr
xchg
sbb
insb
mov
test
cmp
xchg
add
jae
mov
leave
jne
push
jb
lods
rcrl
in
push
push
pushf
rorb
ss
inc
dec
dec
cmp
popf
fimuls
fucomi
push
rorb
push
add
inc
loopne
add
cwtl
roll
xchg
adc
movsb
pop
jae
xchg
cmpsb
mov
xchg
inc
fstl
jmp
fs
sti
sub
cmpsl
in
out
cmp
mov
or
rcll
int3
inc
ds
inc
pop
daa
sbb
popa
dec
sub
fidivs
lret
sbb
add
clc
mov
shrb
movsl
dec
call
fucomip
hlt
cmp
fists
iret
ret
repz
stos
mov
or
xor
std
test
mov
fs
out
mov
call
push
insb
xlat
lret
sbb
dec
xchg
xchg
movsb
ljmp
in
aam
mov
mov
jno
inc
mov
or
cmp
adc
mov
push
outsb
les
push
mov
xor
add
jnp
xchg
sub
jge
lahf
fisttps
mov
repnz
cmp
pop
es
add
shlb
and
add
out
mov
or
movsl
cli
jg
inc
insl
xchg
adc
cli
mov
out
dec
enter
sti
bound
fstps
sub
push
adcb
xchg
ret
add
xchg
and
mov
popf
ret
addb
pop
clc
aaa
call
dec
call
fucomip
hlt
cmp
fists
iret
int3
je
icebp
repnz
sbb
outsl
ret
mov
adc
lret
cmp
xchg
jo
loop
dec
sbbb
jne
clc
cmp
mov
test
and
jmp
xchg
lret
jo
std
mov
pop
cmp
stos
mov
test
xchg
movsl
sbb
jb
mov
xchg
sbb
mov
sub
xor
imul
jnp
inc
mov
adc
adc
mov
or
lret
cltd
add
clc
outsb
test
push
fisubs
shr
ret
xchg
sub
cmpsb
sahf
mov
cmp
fnsave
bound
pop
push
add
orb
aad
dec
lea
fldcw
push
negl
push
adc
adc
popf
sub
cld
mov
jns
into
mov
hlt
mov
mov
movsl
sbbl
inc
sbb
leave
cltd
test
movsl
ret
insb
test
lret
inc
in
xlat
mov
inc
and
inc
imul
dec
pop
lret
pop
imul
mov
prefetchnta
les
loope
cmc
add
dec
pop
outsb
les
push
mov
xor
jecxz
fwait
pushf
pop
mov
int3
scas
popa
xchg
inc
fdivp
adc
loop
inc
mov
pop
jb
sbb
shlb
add
jge
xchg
sub
mov
xchg
movsb
fs
clc
and
mov
fwait
in
cmovae
mov
sti
and
sbbl
add
mov
sub
mov
sbbl
repz
dec
call
cmp
test
and
cld
add
mov
or
jns
mov
ljmp
xchg
jo
mov
cmp
jne
les
add
push
pop
and
pop
dec
push
dec
push
dec
fsubs
std
in
jmp
les
push
test
ret
ret
int
lcall
ja
lds
ljmp
cmp
loope
dec
mov
sub
add
repnz
fstps
pop
sti
sub
inc
adc
inc
mov
fdivs
sub
push
mov
sub
insb
push
test
push
xchg
adc
and
dec
mov
out
inc
and
movsl
pop
repz
xlat
push
flds
mov
out
adc
mov
add
lea
shrb
out
pop
fnstenv
shl
pop
and
arpl
mov
sbb
mov
cmp
clc
jp
add
inc
adc
pop
mov
sbb
leave
fadds
cld
insb
test
lahf
sbb
test
push
in
xor
outsl
xor
mov
mov
mov
inc
inc
retw
pop
xor
inc
xchg
jl
xor
imul
movb
loope
fwait
loope
inc
pushf
shlb
lret
and
jnp
jg
scas
loope
pusha
in
sti
and
adc
inc
mov
fdivs
sub
xor
lock
lret
push
xor
inc
mov
xchg
push
pop
and
xchg
insl
push
inc
push
dec
sbb
fwait
psubw
call
cltd
push
bound
outsl
mov
je
sub
imul
mov
jecxz
mov
push
jne
pop
cli
mov
adc
repnz
loopne
jmp
sbb
sbb
mov
inc
cmp
add
std
mov
adc
lret
mov
inc
adc
xor
test
jecxz
cli
push
xor
aaa
mov
inc
out
mov
add
sahf
popf
in
xchg
sbb
iret
jp
aaa
ljmp
sbb
mov
xchg
test
cmp
xchg
add
xor
xchg
int
xor
jb
loopne
or
mov
rorl
sahf
xchg
fwait
push
pop
xlat
push
icebp
cmp
pusha
cmpl
into
out
add
dec
mov
pop
repnz
out
mov
or
jl
mov
insl
xchg
adc
cli
jae
loopne
dec
mov
mov
jmp
lret
gs
movsb
dec
xchg
sub
sbb
je
imul
mov
pop
push
mov
ret
mov
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
cltd
mulb
rcrl
sarb
mov
cli
pop
and
iret
inc
sbb
nop
lea
push
sbb
dec
push
lret
clc
mov
mov
xchg
pop
fisttpll
test
or
mov
sbb
lods
mov
mov
lods
testl
add
jecxz
shr
rcrl
sub
cmp
push
nop
xor
ret
sub
pop
divl
mov
dec
mov
xchg
and
and
push
mov
inc
insl
xchg
mov
fwait
insl
cmovae
out
hlt
std
mov
sti
and
jmp
les
sbb
xchg
push
enter
mov
add
insl
sub
xor
mov
fld
fistl
into
dec
iret
pop
loope
clc
into
fwait
lahf
stos
and
mov
mov
cmp
outsb
inc
add
subb
leave
sbb
add
leave
lds
dec
jle
fwait
push
lock
nop
xlat
dec
sub
ret
aad
jge
leave
test
xchg
pushf
mov
ror
push
lret
sar
xor
test
inc
xchg
fsts
pop
inc
push
dec
and
stos
std
cld
dec
mov
jecxz
sub
mov
aad
mov
add
inc
mov
loope
outsl
iret
push
xchg
pushf
repnz
cmp
pop
es
add
shlb
push
scas
in
test
adc
or
movsl
cli
jg
inc
insl
xchg
imul
adc
js
xchg
cltd
inc
jp
push
outsl
push
ret
sbb
daa
out
leave
cmpb
sbb
xor
cwtl
pop
dec
push
dec
in
mov
popf
out
push
adc
xchg
cmpb
les
jo
push
divb
cmp
jno
mov
repz
pop
and
addb
mov
mov
add
cmpsl
xchg
mov
inc
inc
sbb
push
jmp
lds
push
clc
mov
add
cli
adc
scas
and
ljmp
or
das
push
cmp
sub
add
lret
stos
xchg
fimull
fisubrl
pop
and
mov
std
lds
stos
mov
jecxz
fwait
sahf
xchg
fwait
push
add
ds
cmp
repnz
inc
add
adc
mov
dec
sub
xchg
cmc
mov
push
cmc
test
cwtl
notl
fwait
adc
fdivs
mov
nop
and
rcll
dec
add
cmp
and
stos
sub
mov
adc
and
mov
pop
push
mov
ss
adc
mov
pop
icebp
lret
fwait
lahf
stos
and
lock
lock
cmp
jo
or
dec
add
adc
insl
movsl
ret
insb
scas
lret
xlat
test
outsb
loop
clc
or
mov
push
dec
sbb
mov
cmc
inc
jne
jge
pushf
arpl
jo
inc
inc
xchg
push
fsts
pop
inc
push
cld
and
pop
mov
jecxz
loopne
fistl
std
shrb
test
fidivs
test
xchg
jb
sub
jecxz
enter
adcl
dec
lock
mov
adcb
adc
dec
mov
xchg
xchg
inc
push
mov
xchg
sbb
rclb
push
pop
and
pop
adc
rcl
jb
cmpsb
inc
test
inc
mov
or
and
addl
mov
out
adc
sbb
mov
cmpb
pop
loopne
mov
adc
lret
loopne
lcall
iret
xchg
add
int3
sbbb
inc
sbb
sahf
test
ret
test
ljmp
sarb
mov
movsb
fisubl
and
pop
dec
sbb
lods
fldt
jmp
test
cmp
sbb
and
inc
sbb
or
stos
arpl
mov
mov
ljmp
fisttpl
fstl
pop
rclb
ss
scas
std
leave
loope
mov
pusha
sti
and
js
or
mov
dec
mov
popf
aad
mov
xchg
sub
sbb
mov
push
fsubs
dec
popf
into
clc
pop
repz
fisubs
xor
push
and
addl
mov
jmp
fsubrl
loop
imul
mov
out
mov
push
jne
les
dec
mov
into
fwait
lahf
sahf
je
popf
mov
cmp
jp
add
add
sbbl
inc
sbb
leave
fmuls
cld
insb
test
ror
mov
std
push
lret
push
in
mov
jae
mov
in
mov
jb
addl
sub
mov
adc
popf
and
dec
jnp
xchg
sbb
cmp
jno
pusha
mov
pop
scas
mov
lahf
jecxz
pushf
repnz
xor
fwait
add
mov
push
or
lret
mov
test
mov
popf
inc
jns
adc
inc
sbb
cmpsb
gs
inc
push
sbb
imul
out
leave
sbb
sbb
mov
sub
push
xchg
nop
fwait
cmp
int
gs
das
in
jmp
loop
pop
push
mov
shr
xor
aam
sti
push
bound
repz
ret
fdivp
mov
pop
and
addb
mov
adc
xor
imul
xor
mov
testl
fisubrl
push
in
xor
pop
xor
mov
mov
mov
test
dec
add
xchg
ficoml
int
xor
jb
fcoml
cmpsl
adc
jmp
popf
test
lods
bnd
lods
scas
fbstp
inc
rclb
mov
adc
sbb
mov
pusha
cwtl
dec
and
inc
add
inc
out
inc
scas
fsubrs
stos
into
ljmp
sbb
mov
mov
cwtl
push
andb
pushf
test
shr
mov
cmpl
push
jb
jg
mov
lods
mull
pop
call
test
cmp
fists
iret
int3
mov
lods
dec
aam
adc
mov
mov
sbb
leave
cltd
mov
movsl
ret
insb
test
ror
push
inc
aaa
or
xchg
mov
lcall
mov
fbstp
mov
pop
or
stos
adcb
test
or
mov
adc
rcl
cltd
pushf
xchg
sbb
rolb
ss
cltd
sub
jno
lahf
fisttps
jle
scas
pop
adc
cmp
inc
loope
inc
or
or
mov
add
jge
jb
pop
add
mov
cmp
iret
movsl
ret
dec
mov
pop
std
lds
mov
rorl
cltd
mov
mov
mov
cwtl
push
orb
xchg
test
shr
mov
cmpl
adc
arpl
fsts
dec
or
pop
jecxz
call
loope
lcall
setae
jecxz
or
iret
adc
mov
cltd
xor
std
pop
dec
xor
pop
push
sbb
jecxz
cli
fmuls
dec
fisttps
fnstcw
jge
leave
test
cld
mov
push
pop
fs
mov
pop
lret
into
shlb
loope
mov
dec
mov
sbb
sub
jne
inc
pop
lret
stos
xchg
fimull
fisubrl
pop
sbbb
pop
pushf
ret
sbb
insb
jnp
scas
popa
in
pop
jo
cmpsl
xchg
mov
leave
in
and
inc
or
inc
shlb
add
jge
jb
pop
loop
js
mov
xor
push
in
fwait
jmp
ret
push
mov
or
jmp
pusha
xchg
and
les
loopne
ljmp
xchg
inc
bound
mov
sub
xor
out
mov
call
push
sahf
shrl
mov
cmpsl
jno
mov
movsl
add
mov
sbb
mov
sbb
leave
fcoms
cld
insb
test
lahf
sbb
test
push
in
xor
stc
mov
xchg
nop
dec
popf
lret
mov
pop
test
bound
add
xchg
lcall
sub
cmp
mov
mov
outsl
pusha
arpl
cwtl
mov
mov
movsb
mov
aad
jo
fcomp
xchg
fisttpl
clc
jle
add
sbb
out
es
cmpsb
mov
xor
rol
xor
adc
adc
jae
loopne
xor
mov
xlat
push
fxch
xchg
or
mov
sbb
push
cld
push
pop
mov
jmp
loop
pop
push
mov
shr
xor
aam
sti
call
push
popf
mov
cmp
jp
add
mov
lock
pop
repz
or
sub
nop
jg
bnd
aas
xor
imulb
js
sub
and
lds
pop
mov
push
ja
cmpsl
mov
lods
pop
fisttpll
test
or
push
into
mov
adc
ja
lds
ljmp
cmp
loope
dec
fst
and
stos
jmp
lahf
adc
pusha
into
sbb
or
mov
push
addl
or
mov
sub
out
ror
xor
dec
xor
xchg
push
pop
and
adc
dec
sbb
fwait
psubw
call
cltd
push
bound
gs
je
sub
imul
cmp
ret
pushf
lods
sahf
dec
movsb
adc
fsts
imul
lods
pop
call
rcr
xor
mov
cmp
jp
add
je
and
sbbl
inc
sbb
leave
fcoms
cld
insb
test
lahf
sbb
test
push
in
xor
stc
mov
xchg
nop
stos
popf
lret
mov
cmp
xchg
xchg
fsts
sub
mov
jecxz
or
mov
aad
mov
add
dec
stc
aad
mov
jmp
lahf
adc
pusha
sbb
mov
add
js
mov
dec
shlb
std
cltd
out
ror
negb
push
mov
sub
popf
push
stos
cmp
push
dec
pop
fisubs
pop
call
mov
add
test
sahf
sub
in
mov
jne
imul
pop
test
pop
sbbl
stc
fstl
dec
mov
in
ljmp
mov
jae
mov
aaa
loop
inc
sbb
sahf
test
ret
test
decl
ss
sar
test
cmp
lods
test
pop
and
jne
std
inc
in
jae
sbb
cmc
mov
push
orl
pop
lods
mov
lods
testl
push
sbbb
loopne
dec
mov
lods
jle
leave
shll
xor
imul
jnp
inc
mov
pop
inc
shlb
add
jge
jb
pop
mov
clc
jb
movsl
ret
dec
mov
pop
mov
pop
jae
cmpsb
lret
cmpsl
inc
fidivs
and
andl
and
mov
imul
add
xor
mov
call
push
sahf
rorl
pop
dec
cmp
sti
mov
imul
add
add
mov
xor
add
mov
divb
nop
loop
lcall
leave
sbb
test
pop
lret
xchg
cld
pop
scas
mov
sti
stos
pusha
std
fisttps
lret
xchg
or
cwtl
adc
sbbb
mov
fisttpl
outsb
les
je
lret
lret
add
jecxz
fwait
xchg
out
ret
scas
cs
icebp
leave
es
jle
scas
fdivl
cmp
cmp
pusha
clc
xor
mov
rol
sub
lret
dec
negb
fsubs
xchg
imul
sbb
rolb
cmpsb
inc
test
jp
inc
mov
inc
add
sbbl
add
mov
push
dec
mov
ret
out
mov
push
jne
les
xlat
pushf
xchg
imul
je
popf
mov
cmp
jp
add
leave
sahf
subb
pop
mov
cltd
inc
out
xor
mov
testl
test
push
in
xor
stc
mov
xchg
nop
sti
popf
lret
mov
xor
mov
dec
or
xchg
lcall
lds
ljmp
cmp
loope
dec
icebp
aad
mov
jmp
lahf
adc
pusha
cld
sbb
popa
or
mov
add
mov
mov
sbb
dec
rorb
xchg
cmc
xchg
xchg
sbb
cmp
jne
mov
dec
mov
cmpsb
and
fsubl
xor
push
and
adc
andl
sub
sub
mov
push
dec
mov
ror
dec
ja
xor
mov
call
push
sahf
rorl
cmc
lret
push
adc
mov
jns
mov
add
mov
xchg
dec
sbb
mov
aam
add
popa
cmpsl
clc
out
and
ja
xchg
pop
lret
xchg
jl
scas
mov
sti
fisubl
fbstp
stos
repz
rcrl
test
roll
fsts
pop
packuswb
jo
movsl
sbb
cld
jp
add
sbb
cmp
pop
and
jmp
popf
test
leave
bnd
lods
scas
fbstp
add
xchg
sbb
mov
andl
addr16
mov
dec
and
inc
or
inc
gs
fnstsw
mov
cltd
inc
jb
xchg
outsl
or
or
cmp
mov
cmpb
sbb
repnz
cmp
pop
xchg
test
mov
mov
mov
cmp
aaa
lahf
and
shlb
and
imul
inc
arpl
repz
cmp
loop
repnz
sbb
mov
inc
sub
push
pop
adc
cmp
xchg
jo
out
dec
sbbb
jne
clc
or
cmpsb
inc
std
xlat
cmp
inc
and
stc
mov
mov
jge
in
jmp
adc
insb
inc
pop
cmpsl
xchg
test
cmp
xchg
add
loop
sbb
scas
pushf
lds
stc
add
push
pop
enter
lahf
scas
std
test
pop
xchg
push
push
mov
sbb
and
mov
cmpsb
call
les
xchg
sub
xchg
test
xchg
and
mov
xchg
cltd
cmp
ffreep
out
xchg
pop
fldenv
pop
out
cmp
xor
add
dec
add
mov
cwtl
sahf
insl
push
orb
ja
ret
dec
add
pop
dec
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
pushw
hlt
mov
pop
xor
dec
nop
jg
adc
adc
out
movsl
sbb
clc
or
cmpsb
inc
in
std
test
and
inc
push
rcr
dec
sbb
punpckhwd
mov
cmp
sbb
sub
adc
push
dec
sub
stos
std
cld
dec
mov
jecxz
loopne
fistl
cltd
xchg
mov
push
xor
icebp
lods
jp
icebp
adc
ss
shlb
or
sbb
mov
lock
test
cltd
xor
std
inc
jp
and
lret
sub
cmpsb
gs
inc
jbe
cmp
bound
cmpb
je
inc
fcom
xor
cwtl
pop
dec
push
cld
insb
mov
cmc
clc
pop
mov
cmc
xor
pop
cmp
mov
popa
push
mov
fdivs
lahf
lds
push
dec
daa
cmp
jp
add
lea
testl
jno
dec
xchg
jo
and
dec
sbbb
jne
clc
sti
add
inc
cli
cmpsl
and
lret
mov
int
xor
mov
mov
mov
test
inc
or
or
mov
inc
lcall
pusha
roll
faddl
mov
sub
mov
mov
js
jle
scas
pop
adc
or
cmp
or
jl
or
mov
add
jge
xchg
sub
ja
xor
mov
xchg
fnstsw
mov
cltd
inc
js
sbb
inc
sti
xor
fadds
repnz
inc
inc
mov
mov
jmp
cmpsb
inc
out
imul
fsubp
stos
mov
xor
clc
mov
imul
jecxz
and
push
add
mov
jbe
jns
add
sub
test
loop
test
mov
inc
stos
adcb
mov
sub
xchg
xchg
sbb
int
dec
mov
cmpsl
stos
out
insl
pop
fisttpll
test
or
jo
and
jp
rorl
xchg
fistl
fimull
scas
mov
mov
pusha
jbe
lods
inc
pop
xor
pusha
mov
cld
loop
sbb
jnp
inc
mov
add
xor
mov
dec
mov
jmp
aam
xor
imul
sub
mov
push
pop
scas
enter
ljmp
cltd
mov
mov
mov
cwtl
push
xorb
mov
ret
add
xchg
and
lock
adcl
into
pop
movsl
pop
clc
aaa
call
test
push
cmc
lret
daa
or
out
mov
lock
loop
cmp
movsb
and
mov
popf
pushf
mov
push
pop
ret
sbb
iret
jbe
popf
adc
mov
sbb
sub
push
lahf
push
lret
push
insl
in
jmp
or
icebp
add
inc
inc
les
inc
scas
ja
add
or
neg
adc
lods
lds
cmp
sahf
xchg
fwait
pop
jo
and
and
pusha
cmpl
into
out
add
dec
mov
pop
repnz
out
dec
mov
adc
mov
xchg
insl
push
daa
inc
dec
pop
fisubl
mov
lods
int
fsubs
cmpb
je
inc
and
pop
xor
dec
xchg
jle
mov
das
cli
jmp
gs
fiadds
aam
sti
fistl
inc
sahf
rcl
pop
or
xchg
jecxz
pop
mov
jp
add
jecxz
sub
adc
jno
dec
xchg
jo
gs
sbbb
jne
clc
jmp
mov
std
xlat
cmp
inc
and
inc
popa
rcrb
cmc
repz
ret
pop
add
les
mov
add
xchg
or
ret
fcmovne
xchg
fwait
adc
or
daa
mov
cmp
xor
scas
mov
lahf
jecxz
enter
adc
dec
inc
sub
mov
adcb
add
inc
dec
lret
cltd
sbb
outsb
test
push
fisubl
cmc
mov
mov
orl
mov
mov
mov
cwtl
push
cmpb
xchg
test
ret
out
mov
cmpl
add
idivb
shrb
imul
mov
mov
lock
loop
cmp
mov
popf
pushf
jmp
ret
sbb
iret
add
xchg
adc
mov
sbb
push
test
dec
sub
push
lahf
push
lret
imulb
jmp
imul
add
or
das
sub
stos
adc
pop
sub
jp
add
sbb
xchg
mov
and
or
dec
fnstcw
popf
fimuls
sti
out
push
adc
loopne
sbb
mov
mov
xchg
sub
and
push
mov
xchg
push
fisubl
and
std
bound
cli
jns
imul
cmpb
loop
add
xchg
push
hlt
dec
addr16
jno
ffree
jle
addl
call
rclb
rcrl
sub
daa
push
divl
and
add
std
dec
dec
outsb
adc
lret
repz
dec
int3
push
sbb
jecxz
cli
push
xor
testl
arpl
jge
cli
ljmp
stos
dec
lret
lds
mov
les
xchg
fisttpl
outsb
les
add
or
mov
adc
sahf
xchg
fwait
inc
adc
push
jno
adc
cmp
cwtl
add
cmp
dec
fsubrs
fwait
jmp
loope
jp
imul
push
jns
enter
ljmp
sbb
cmp
loop
je
or
test
nop
sub
cmp
ret
mov
dec
movsb
adc
fsts
std
ss
lcall
setae
jecxz
push
mov
repnz
roll
sub
lcall
lds
dec
push
divb
nop
xlat
dec
sub
ret
pop
repnz
out
inc
out
mov
sar
xor
sti
pop
into
ljmp
pop
sub
adc
sbb
jmp
jp
shlb
lds
cmp
cmp
sub
and
xchg
ljmp
leave
mov
andl
lret
cmp
mov
enter
cmp
sbb
mov
addb
or
mov
mov
int
fstpl
cltd
cltd
add
leave
cwtl
jle
sbb
sub
movsb
lock
sti
inc
mov
sub
call
jbe
pop
mov
dec
sbb
in
mov
lock
in
mov
adc
cmp
mov
sub
pushf
ret
pop
pop
mov
cwtl
lret
movsl
ret
popf
cld
add
test
push
cli
mov
or
stc
imull
pusha
std
movsl
dec
sbb
test
shrl
jl
ret
add
and
xchg
lcall
test
lea
movsb
xor
lods
pop
icebp
mov
sub
add
movsb
fisttps
jnp
lock
popf
fists
repz
rclb
roll
rcll
test
sbb
pop
out
cmp
xchg
cmp
test
lahf
jnp
pop
jae
std
jge
lea
mov
push
or
and
jecxz
loop
pushl
shrl
in
std
mov
mov
pop
adc
shrl
movsl
lea
rcll
es
sub
sbb
stc
clc
jp
add
adc
and
lcall
repnz
xchg
roll
dec
and
ss
sub
cmp
sub
cmc
sbb
mov
sti
stc
cli
in
test
jl
or
cld
jo
andl
push
mov
xor
mov
cltd
lods
in
in
jb
mov
dec
pop
shlb
fucomi
and
inc
fwait
leave
loop
and
daa
mov
in
cmp
mov
xor
mov
and
inc
push
das
push
and
scas
inc
loope
inc
std
jo
aam
cli
pop
cmp
sti
and
xchg
shl
inc
rol
insb
sbb
and
mov
xchg
cmp
or
pop
movsl
adc
or
jns
cltd
mov
add
mov
cmp
jp
add
adc
les
in
pop
popa
push
sub
lods
xchg
sub
adc
xchg
call
mov
pushf
cs
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
push
or
lret
dec
movsl
push
or
xor
mov
cmpsb
xor
jb
fcoml
dec
scas
iret
dec
pop
mov
cmp
mov
scas
aaa
mov
cli
jnp
inc
mov
adc
clc
jb
add
iret
xchg
rorl
cmp
push
movsl
ret
fs
push
cmp
cmp
call
cmp
enter
mov
xchg
mov
or
cmp
xchg
sub
fsubr
mov
rolb
adc
adc
push
sub
loopne
mov
les
jg
in
rcl
fidivrl
ds
jp
add
adc
les
add
dec
lock
add
lods
xchg
sub
adc
xchg
lods
sub
inc
std
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
push
leave
ret
subb
rorl
mov
cmpsb
xor
jb
fcoml
dec
scas
iret
dec
pop
mov
cmp
mov
scas
aaa
mov
cli
jnp
inc
mov
or
add
mov
push
dec
mov
and
adc
es
pop
jae
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
dec
cmpsb
enter
mov
cmp
dec
lea
repnz
into
lds
movsb
mov
or
ret
nop
and
push
or
mov
les
sbb
cmp
je
clc
jb
mov
xchg
jns
lret
or
das
call
cmp
add
mov
fistl
or
ret
gs
cltd
fs
hlt
sub
or
lds
jge
sub
cmc
sbb
out
push
cld
mov
movsl
cmp
and
into
in
mov
fbld
mov
test
sub
dec
push
xchg
add
je
mov
pop
test
mov
sahf
pop
mov
repnz
out
inc
insb
icebp
xor
xor
je
mov
mov
inc
icebp
addr16
fdivrs
rcr
nop
outsb
mov
out
cld
or
cmp
jnp
testb
fucomi
hlt
std
mov
sti
and
aas
lahf
es
jns
jle
orl
xor
imul
inc
fdivrs
inc
icebp
dec
mov
and
test
lods
nop
aas
jo
pusha
or
adc
jno
decl
out
mov
fs
adc
ret
jb
dec
push
pop
repnz
cmp
leave
inc
jle
loop
movsl
mov
pop
ficoml
imul
xchg
shlb
push
cmc
mov
sub
sbb
push
or
or
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
loopne
cmp
mov
push
or
jo
test
jae
cld
fwait
adc
add
mov
fwait
sti
xchg
jge
pushf
out
nop
bound
sub
xchg
or
inc
into
pop
xor
scas
hlt
fidivs
sbb
inc
lret
call
ss
addr16
jge
int
adcl
aad
add
sahf
pop
fcom
test
shll
out
and
pop
jae
jns
out
lcall
add
rcr
xor
mov
cmp
jp
add
add
mov
sbb
cltd
orb
xor
mov
arpl
mov
jg
lret
push
repz
push
aam
arpl
pop
cmp
je
sti
adc
loop
rorl
xchg
inc
cmpsl
repnz
stos
daa
cmpsb
into
mov
jne
bound
sub
es
inc
push
js
mov
in
movsl
js
and
loop
stos
aam
jl
nop
xchg
incl
or
jo
testb
lahf
pop
mov
xor
rol
sbb
xchg
xchg
mov
jbe
leave
int
inc
mov
negb
aas
sti
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
mov
test
arpl
orb
imul
jecxz
sti
jle
lret
cmpsl
pop
push
add
stos
add
outsl
hlt
jmp
decb
push
insb
jne
inc
into
pop
mov
insl
cmc
imul
test
push
stos
test
imul
movsl
mov
ja
lds
imull
sahf
jnp
popa
jbe
lods
push
outsl
sbb
ja
in
es
shlb
jns
mov
push
popa
dec
leave
test
adc
jle
les
jecxz
pushf
sub
cmp
call
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
sti
mov
jnp
push
mov
add
jmp
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpsb
clc
xor
cmpb
je
test
loope
and
arpl
adc
xor
ret
xorb
or
mov
mov
out
pusha
xor
push
xlat
js
jge
mov
dec
mov
adc
push
jmp
dec
mov
insb
sub
push
ficoml
adc
sahf
cli
test
out
cli
mov
jne
mov
mov
sbb
lods
cmp
rcrl
xchg
mov
outsb
or
into
cmp
ret
int
sarb
xor
mov
jp
add
cmp
lds
mov
scas
das
pop
icebp
or
cmp
andl
mov
push
test
pop
jle
inc
sbb
pop
shrb
cmp
idivb
pushf
ljmp
out
jno
sbb
scas
lahf
push
int
xchg
mov
or
fidivrs
sahf
lret
xchg
lock
call
test
aas
add
and
sub
mov
lock
divb
push
lret
shrl
pop
sbb
test
arpl
call
int
push
sub
jae
pop
inc
test
mov
and
lock
test
maxps
dec
cmp
sbb
in
jmp
test
aaa
jns
pop
push
mov
pop
fucom
cli
mov
cmp
in
test
or
fs
add
addb
sbbl
hlt
mov
rolb
jb
pop
push
hlt
xchg
push
jnp
xchg
mov
ss
dec
lds
mov
ljmpw
pop
jb
push
nop
mov
jp
dec
repz
testl
xchg
push
mov
jbe
dec
int
inc
mov
test
sti
std
mov
sti
and
test
cltd
popa
sbb
xchg
push
hlt
mov
popa
dec
mov
test
mov
inc
jo
lds
repnz
add
lret
cmpsl
xor
rorl
movsb
sbb
outsl
jl
mov
subl
xor
repz
lret
shlb
mov
mov
mov
pop
xchg
shll
cmp
xchg
pop
inc
or
mov
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
lds
cmp
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
lods
shlb
adc
ret
das
adc
sbb
pushf
lcall
hlt
jbe
scas
out
mov
ds
pop
push
jo
jp
cmp
sbb
and
in
repnz
inc
lods
iret
xor
into
orb
or
mov
dec
dec
mov
sbb
jb
mov
hlt
dec
add
xor
and
mov
rcrl
mov
into
fwait
cmp
pop
dec
sbb
stos
add
sbb
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
sub
dec
fcomp
xor
mov
xchg
aam
jne
insl
pop
fwait
enter
lods
xchg
xorl
push
xchg
push
pop
mov
and
int
and
push
stc
and
rorl
jb
mov
stc
xor
or
cmp
jmp
or
jnp
testb
fucomi
hlt
std
mov
sti
and
test
jns
sbb
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
sbb
stos
ret
loopne
int
aas
xchg
arpl
mov
ret
pop
push
push
outsb
je
add
mov
mov
pop
leave
cmp
xchg
divb
dec
xchg
addr16
jmp
in
scas
pop
mov
sbb
push
push
pusha
push
popf
mov
jns
push
es
add
imul
cs
or
sub
xchg
in
xchg
outsl
sub
test
add
sub
fstpt
loopne
adc
dec
mov
lds
adc
in
ja
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
out
and
daa
pop
repz
out
icebp
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
mov
test
and
sub
jb
sub
xor
divl
es
test
dec
jecxz
mov
orb
shrl
insl
movsl
imul
test
shl
loop
gs
test
lret
cmp
movsl
cmp
and
into
mov
inc
xor
dec
in
add
inc
pop
andl
xchg
nop
pop
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
adc
es
pop
jae
inc
insl
out
sbb
inc
add
pop
stos
ret
sub
jb
mov
aam
and
scas
xchg
sub
dec
fmuls
xor
jbe
std
cmpl
pop
sahf
imul
ljmp
inc
mov
jbe
mov
xor
leave
ss
mov
and
inc
mov
inc
adc
maxps
stos
dec
mov
loopne
jno
lds
push
cld
sub
mov
mov
adc
mov
mov
rorl
cmp
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
dec
cmpsl
ficoms
hlt
ja
std
outsl
addr16
call
push
test
in
sti
push
pop
mov
mov
jecxz
mov
mov
jbe
ja
out
ret
xchg
cwtl
mov
xchg
mov
ffree
push
pop
push
xchg
sti
mov
fildl
lret
mov
aam
lock
je
popf
mov
cmp
jp
add
cltd
sub
adc
lods
cmpsb
sbbb
lret
mov
pushf
dec
push
fcmovnbe
stos
mov
rcll
pushf
pop
pop
pop
loope
lcall
stc
jg
imul
jecxz
sub
mov
cs
stos
adc
add
add
test
imul
push
es
mov
sahf
fstl
fsubl
outsb
mov
adc
fsubl
ja
in
xor
out
mov
fsubrs
stc
add
or
popl
inc
sub
fs
lcall
dec
sub
pushf
int
bound
movl
cld
stos
dec
inc
mov
sbb
ret
or
mov
out
stos
lcall
xlat
adc
or
cs
pop
add
cmp
mov
fisubs
xor
leave
add
mov
or
imul
leave
fsubrl
test
mov
add
addr16
incb
aad
xor
inc
mov
movsl
leave
xor
cli
fwait
lret
xlat
loopne
ret
pop
sbb
mov
enter
sub
and
and
fisttps
sub
fcoms
xor
orl
inc
clc
mov
xor
fcoml
jg
mov
loopne
fwait
inc
push
rol
fbstp
outsb
test
push
enter
test
and
xchg
sqrtps
outsl
or
mov
out
xchg
out
enter
es
mov
mov
add
xchg
and
mov
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
jmp
aad
adcl
adc
sbb
xor
sub
dec
pop
imul
jmp
loop
fsubrl
push
dec
push
mov
in
mov
sbb
loop
fistl
cld
pop
sub
or
leave
cmp
jae
mov
adc
jno,pn
or
dec
dec
pop
jb
xor
or
jnp
mov
int3
scas
std
stc
inc
repz
lret
std
cli
jnp
inc
mov
cwtl
add
cmp
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fisttpll
icebp
cwtl
ret
leave
shlb
rclb
add
andb
xor
mov
jmp
jecxz
dec
ja
repz
in
inc
inc
xchg
adc
inc
mov
fstps
pop
add
adc
fwait
js
sbb
mov
adc
inc
ret
sbb
xor
and
push
pop
leave
inc
push
pushf
cmpb
adc
call
clc
mov
inc
lcall
jle
dec
xor
ljmp
repnz
bound
sub
sub
dec
pop
fsub
ja
in
jg,pt
shl
je
sub
push
inc
jbe
gs
and
dec
pop
push
fsubl
jb
lods
mov
mov
and
mov
xchg
jge
add
inc
adc
arpl
dec
pop
stc
add
adc
cwtl
cld
dec
sarb
daa
cmp
subb
sahf
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
push
inc
push
cmpl
or
push
sub
push
sub
push
out
push
cmp
roll
aam
push
sti
cmpl
mov
das
inc
scas
dec
imul
test
movsl
sub
loopne
dec
sbb
adc
dec
xor
xor
div
call
nop
mulb
push
ret
insb
mov
push
sbb
lret
sub
test
xchg
stos
pop
xchg
outsl
cmp
lds
push
fdivrl
jmp
mov
xor
inc
out
sub
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
arpl
lahf
lcall
sub
leave
data16
daa
ss
stos
jae
nop
and
push
or
mov
adc
movb
and
int3
inc
lds
cltd
arpl
fsubl
lock
ja
mov
insb
xorl
xlat
mov
xchg
push
das
jno
xchg
add
xchg
lea
cmp
adc
fwait
push
dec
aad
imul
into
inc
mov
inc
repnz
dec
jmp
sbb
dec
mov
stos
movsl
arpl
mov
adc
ret
das
lds
test
jno
aaa
jecxz
scas
add
jns
enter
ret
stos
fldcw
lock
jg
push
sbb
mov
jp
pop
adc
hlt
xchg
test
xchg
push
sub
jae
sbb
insb
aas
out
cmp
push
add
xlat
cs
daa
inc
rol
add
xorl
repz
nop
shrl
aad
jno
xor
inc
insb
inc
mov
ret
push
into
inc
lahf
in
imul
sub
cmpl
dec
xchg
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
jnp
sbb
cmpsb
sub
mov
mov
dec
mov
xor
xchg
fdivl
adcb
sti
data16
inc
insb
negb
mov
pop
rorl
mov
sahf
jle
mov
out
movsl
pushl
arpl
cli
xchg
xor
sub
divb
std
pusha
pmulhw
xlat
repz
mov
int3
pop
into
ss
enter
sub
addb
ficoml
popa
dec
sbb
in
dec
popa
pop
fimull
mov
les
jns
pop
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
lret
lds
imull
sahf
jnp
popa
mov
mov
mov
mov
and
clc
mov
movsl
sarl
and
add
adc
pusha
pop
pusha
push
out
adc
or
cmp
mov
add
jmp
jl
mov
jb
add
lahf
xor
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fsubs
pop
mov
gs
pop
sarl
out
push
pop
pushf
xchg
dec
adc
cmp
sub
mov
dec
adc
lcall
adc
bound
lods
sub
adc
pop
popf
xchg
mov
or
mov
push
push
decb
aad
push
sub
push
mov
insl
aad
insl
int3
inc
push
cltd
dec
xlat
and
fxtract
push
and
aam
filds
loope
lret
les
sub
pop
mov
jo,pn
sub
packsswb
push
je
push
xchg
testb
xchg
cld
xchg
sub
lret
jae
ss
mov
cmc
add
pushf
sbb
loop
nop
xchg
mov
jle
xchg
cmp
enter
mov
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fsubs
pop
mov
gs
sbb
mov
xchg
cmp
popa
dec
pop
mov
sbb
jae
nop
and
xchg
inc
gs
or
adc
aad
mov
jb
mov
loopne
add
test
push
ss
inc
cs
ljmp
int
inc
adc
aas
add
fsubrl
ret
dec
lret
cltd
adc
sub
or
sbb
lahf
jne
fcoml
cli
lds
sub
into
xchg
stc
cli
in
test
or
test
cmp
cmpsb
sub
mov
mov
dec
loopne
adcl
dec
add
and
iret
test
repz
lahf
sbb
enter
mov
pusha
scas
outsb
repz
call
push
iret
lcall
sbb
into
push
dec
test
push
imul
xchg
xchg
jle
push
jo
leave
xchg
jge
movl
faddl
jp
mov
mov
ret
dec
sbb
dec
jle
push
xchg
mov
push
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
loopne
jg
cmpsl
xlat
in
sub
push
jo
insl
mov
jne
pop
push
xchg
popf
cmp
movsb
xchg
test
test
add
adc
ret
addb
sub
inc
sub
sub
orl
sub
jno
or
dec
dec
pop
jb
xor
or
jnp
mov
int3
scas
std
stc
inc
repz
lret
std
cli
jnp
inc
mov
add
adc
cwtl
add
and
mov
mov
negb
mov
je
pop
lods
addr16
fidivrs
pop
xchg
fxch
jb
sbb
lods
mov
inc
lods
andl
add
jle
nop
inc
stos
jae
nop
and
push
jb
xor
ja
mov
dec
pop
inc
dec
movsb
gs
mov
pop
mov
loopne
out
mov
clc
sti
jne
jp
adc
dec
daa
and
mov
push
dec
cmpsl
bound
push
push
push
push
mov
inc
ret
pop
ficomps
pop
push
stos
test
negb
and
push
inc
out
xor
into
repz
cmpsl
mov
mov
xor
add
addb
shll
push
push
xchg
aam
xor
dec
popa
push
into
add
das
mov
inc
dec
int3
sbb
cmovns
and
test
lret
xor
inc
scas
pop
push
lret
fiadds
lahf
cmp
jl
cmp
clc
push
jmp
push
mov
test
lcall
push
xchg
insb
sub
leave
bnd
scas
pop
or
cltd
psubusw
rcrl
cmc
or
lret
ret
fisubrs
fldt
lea
fst
and
pop
xchg
push
mov
cmp
cmpb
cmp
sahf
xlat
xor
mov
cltd
lahf
inc
mov
inc
popf
mov
add
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
loope
lret
movb
vplzcntd
push
stos
fs
xchg
fimull
pop
sub
mov
jecxz
mov
das
mov
in
cmpsb
aas
stos
shrb
or
gs
dec
pop
bound
add
ja
dec
dec
daa
add
sbb
adc
xchg
pop
and
je
mov
cmpsl
adc
pop
sub
je
pop
lods
addr16
add
mov
add
mov
cwtl
inc
data16
add
add
subb
cs
lock
dec
jg
add
outsl
andb
or
faddp
pop
ret
pop
pop
adc
lea
pop
mov
jmp
pop
rcl
loop
mov
les
inc
icebp
xchg
add
lds
jne
dec
imul
xchg
adc
imul
sti
repnz
lods
jp
jmp
cmpl
jecxz
es
les
cmp
ret
and
lds
fcom
dec
sub
insl
mov
leave
jnp
pop
cld
sub
adc
imull
add
cmp
std
cli
jnp
inc
mov
add
adc
cbtw
add
and
mov
mov
negb
mov
je
pop
dec
cmpsb
cwtl
or
fwait
cmpsl
xor
je
lret
jo
add
and
sub
dec
ret
xchg
insb
adc
push
subb
xchg
dec
dec
or
pop
stos
rolb
jae
mov
outsb
cmovno
call
fcom
inc
sar
daa
add
test
ds
imul
mov
aam
mov
xchg
push
negl
in
lods
mov
fldenv
cmpl
xchg
stc
cli
in
test
or
test
pop
sbb
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
orl
icebp
jle
scas
ud0
add
jle
pusha
and
leave
lock
test
cwtl
jg
lods
xor
cmc
adc
xchg
push
shrl
scas
mov
sub
adc
mov
popa
xor
into
add
mov
pop
add
or
leave
xchg
add
mov
push
dec
mov
popf
lcall
imul
pop
ret
xchg
jnp
adc
jno
or
js
sbb
fwait
add
sbb
push
fcomps
je
cmp
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
cmp
inc
cmpl
jae
jecxz
cmp
fidivs
imul
mov
dec
sub
movsb
test
and
outsl
or
cmp
movsl
sub
int3
ret
in
mov
xchg
sbb
clc
into
fnsave
lahf
in
mov
cmp
das
dec
roll
bound
gs
jecxz
mov
xchg
or
test
inc
stos
fsubs
aam
cmp
lods
push
jne
outsl
rcll
mov
mov
out
and
andb
js
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
add
add
mov
xchg
daa
add
test
and
je
icebp
xchg
add
out
cmc
and
ficoml
or
mov
stos
xchg
scas
xchg
adc
mov
adc
inc
mov
xor
dec
les
sub
punpckhdq
inc
jecxz
sbb
xchg
mov
ja
aad
mov
push
pop
and
add
adc
pusha
pop
pusha
push
out
adc
or
cmp
mov
add
jmp
jl
mov
les
stos
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
out
and
daa
pop
repz
out
inc
test
dec
les
lds
mov
jo
fstp
inc
sbb
stos
adc
nop
sub
or
jl
cmp
jo
xor
cmp
call
lds
pop
xlat
pusha
push
xchg
jle
mov
xor
adc
push
mov
dec
mov
fldt
imul
test
movsl
push
imul
lods
mov
push
sub
mov
fsts
and
mov
ret
ret
push
leave
ret
cwtl
add
add
or
mov
pushf
adc
mov
lds
xchg
or
inc
fdivs
out
icebp
leave
in
test
sahf
mov
mov
in
cmp
mov
and
adc
es
pop
jae
inc
insl
out
sbb
inc
add
pop
stos
ret
and
jb
mov
aam
and
scas
xchg
sub
push
inc
mov
out
mov
xor
aam
es
inc
sbb
mov
repnz
pop
into
pop
stos
and
push
push
lcall
mov
push
icebp
cmpsl
test
mov
and
inc
push
sub
mov
out
mov
aaa
pop
dec
dec
fimuls
push
cmp
xor
into
pop
stos
mov
fwait
jecxz
test
mov
jns
lcall
add
jo
test
xchg
fcmovne
aad
adc
sub
pushf
shr
rcrl
inc
xor
mov
bound
inc
cld
loop
in
nop
xchg
lahf
push
cwtl
lock
mov
or
xchg
out
arpl
mov
lret
and
fisttpl
imul
jae
fidivrs
lahf
sti
jmp
jns
outsb
iret
lahf
icebp
cwtl
ret
data16
add
in
push
inc
test
mov
std
mov
subl
leave
push
popf
divl
test
adc
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
mov
mov
sbb
xor
in
scas
cmp
inc
cmpl
in
ds
lret
imul
jae
sarb
dec
fsubl
mov
sbb
mov
fcmovne
aad
sti
stos
xchg
add
xlat
loope
movsb
fstl
fsubl
mov
push
cltd
jg
xor
sbb
add
popa
or
inc
add
subl
dec
std
adc
les
inc
dec
cld
or
jnp
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
mov
out
out
xor
adc
jae
fnsave
sbb
fidivl
xchg
out
fcmovb
dec
pop
sahf
aaa
stos
jecxz
dec
jbe
mov
sbb
push
xchg
cltd
loope
sbb
cmp
lcall
ficompl
enter
sahf
rcrb
ret
mov
jbe
mov
icebp
aaa
mov
sbb
jge
les
jmp
sbb
sub
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
mov
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
inc
call
pop
push
repz
fidivrs
jnp
fiaddl
dec
dec
std
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
test
cltd
sahf
inc
sub
pop
pop
add
inc
cwtl
dec
and
mov
mov
test
add
in
mov
imul
test
jo
lock
dec
and
add
jbe
lea
dec
test
and
daa
mov
inc
ret
jp
movsl
jae
fsubr
cld
fnsave
pop
adc
imul
push
outsl
addl
and
mov
pop
push
and
aad
mov
sub
arpl
mov
in
jo
mov
out
mov
jno
adc
scas
pxor
inc
mov
dec
lock
jl
das
dec
or
pop
pop
loopne
xlat
sti
in
orl
in
mov
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
sub
mov
cmp
int3
adc
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
or
cmp
or
mov
into
push
fcmovu
test
xor
ret
mov
inc
lods
mov
push
pop
adc
inc
aas
lea
jns
loope
pop
lods
push
outsl
and
or
je
sub
out
fldcw
dec
xorl
mov
test
adc
test
loope
sarl
dec
cld
loop
add
roll
mov
sarb
mov
cmc
or
or
mov
fmull
pop
mov
or
mov
add
inc
std
bound
cltd
add
clc
mov
pushf
sbb
mov
sbb
or
rolb
or
loope
sbb
cmp
mov
mov
push
shl
leave
ss
mov
add
inc
mov
and
dec
sbb
into
push
mov
insl
imul
sbb
mov
shr
pop
clc
sub
jne
mov
fbld
ret
push
fbstp
sub
pop
test
rcr
xchg
mov
les
cld
xor
and
fisubl
pop
outsb
in
add
jp
add
cmp
lds
sti
out
pusha
jle
das
pop
icebp
or
cmp
fwait
leave
loop
add
sub
addl
rorl
mov
cld
ret
repz
lret
out
push
ss
inc
cmpsl
lods
jns
dec
movsb
inc
sbb
inc
dec
shl
iret
testl
les
lock
imul
adc
nop
lea
mov
lret
insl
or
ljmp
push
mov
aam
push
dec
add
mov
cmp
jp
add
cltd
sub
adc
sarb
add
inc
mov
leave
pushf
dec
push
ret
mov
rcll
pushf
pop
pop
pop
and
cs
out
icebp
stc
jnp
lahf
pop
push
sahf
jno
jecxz
fdivrs
sub
mov
loope
pop
add
outsb
cmpsb
adc
dec
hlt
lcall
aam
push
iret
push
lret
ret
mov
mov
popf
enter
js
outsl
sti
nop
adc
es
clc
mov
add
push
test
dec
je
mov
repnz
and
pop
inc
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
push
movsb
mov
aad
push
inc
test
mov
jno
popf
sti
push
add
lods
adc
dec
push
adc
mov
push
in
lock
popa
rcrl
pusha
mov
daa
push
mov
dec
decb
aad
aad
xchg
mov
cmpsb
shlb
mov
adc
push
inc
push
push
lea
cmp
mov
adc
inc
aas
push
mov
ret
sub
int3
push
and
popf
push
aad
and
jne
push
pop
xchg
jge
or
andb
push
enter
movsb
jb
mov
gs
pop
add
sub
fstpt
loopne
adc
dec
mov
lds
adc
in
ja
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
xor
rcrb
dec
int3
inc
pop
mov
sub
adc
popf
ret
mov
mov
or
outsb
ret
sbb
inc
ds
imul
sbbl
mov
jb
pop
push
bound
push
test
mov
bound
jnp
adc
bound
ds
data16
scas
pop
rcl
ja
mov
sub
pop
popf
mul
sub
imul
fstl
pop
hlt
sub
cmc
cwtl
mov
dec
loop
and
lret
add
add
xchg
xchg
aas
enterw
cmp
mov
or
add
int3
xor
jae
inc
in
pop
insb
jbe
jg
sti
std
mov
sti
and
test
jns
sbb
xchg
push
hlt
mov
popa
dec
mov
or
sbb
push
call
add
mov
push
xor
fwait
insb
testl
ficoml
xorb
mov
dec
decb
aad
aad
xchg
mov
cmpsb
shlb
mov
pop
or
lea
cmp
mov
adc
inc
cmp
movsb
shll
lock
dec
push
mov
aam
add
or
xchg
addb
mov
fsubrl
or
mov
lcall
stos
lods
xchg
das
scas
int3
sub
in
xchg
aas
cmpsb
cs
push
dec
add
jb
rorl
cld
in
and
add
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
loop
and
daa
jbe
jg
sti
std
mov
sti
and
test
push
gs
xchg
push
hlt
mov
movsl
pop
das
idivl
mov
stc
lods
nop
push
jo
push
sbb
repnz
mov
add
and
stos
or
jo
lcall
es
xchg
mov
pop
cwtl
in
add
adc
ret
scas
popa
lods
fldt
ljmp
push
pop
call
imul
fsub
jbe
in
mov
in
push
addl
or
andb
mov
loop
pop
gs
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
push
inc
andl
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fsubs
pop
mov
gs
xchg
inc
test
dec
les
add
inc
dec
push
xchg
xor
imul
lcall
test
xchg
or
aaa
mov
out
mov
push
iret
popa
rcrl
sbb
rclb
inc
mov
push
sti
cmpl
dec
mov
das
sbb
adc
scas
movsl
push
push
push
rclb
lea
cmp
mov
xor
mov
inc
adc
fadds
sub
mov
shrb
mov
aam
bound
or
inc
adc
mov
leave
jnp
mov
shl
cmpsb
fsubr
adc
xor
and
add
sbb
movsb
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
and
adc
es
pop
jae
inc
insl
out
pop
rorl
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
hlt
inc
add
xlat
or
pop
cmpsb
dec
cmc
sbb
mov
mov
ljmp
repz
mov
mov
push
add
push
sbb
sar
sbb
jbe
add
jo,pn
fnstenv
pushf
sbb
mov
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
loope
lret
movb
push
sub
xor
add
aam
adc
fs
dec
movsb
mov
xchg
dec
and
sub
pop
xchg
push
adc
and
mov
push
xchg
insl
les
stc
stos
xor
bound
enter
ret
cld
jae
cld
out
daa
dec
lock
std
add
cmp
mov
pop
dec
test
jmp
inc
stos
push
rcrb
mov
push
gs
push
test
fnsave
sbb
mov
sbb
sub
es
je
seto
pop
xchg
cltd
inc
cmpsb
out
jne
pop
adc
add
cwtl
dec
and
mov
mov
test
add
inc
sbb
inc
jecxz
movsl
mov
cltd
jo
pusha
aas
js
push
shl
xor
in
pop
jbe
fwait
ds
push
inc
in
es
push
or
jmp
mov
outsb
mov
rorl
imul
jb
cmpsb
ja
mov
sbb
or
dec
decl
add
push
out
mov
or
movsb
js
jbe
xor
sbb
cmp
std
cli
jnp
inc
mov
add
adc
cbtw
add
and
mov
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
adc
rcrb
test
ret
shrb
or
dec
adc
xor
adc
and
test
mov
sub
repnz
add
lock
mov
xorb
mov
xchg
ss
ja
fs
dec
sub
pop
mov
notb
dec
xchg
addr16
mov
pop
push
ljmp
lahf
xor
lret
push
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
jmp
or
movsl
mov
cld
jp
add
cmp
push
test
mov
sahf
xchg
sbb
js
xchg
xor
dec
in
ss
mov
cs
test
or
into
sahf
ds
rcrl
mov
loop
mov
or
pop
dec
dec
pushf
mov
outsl
fldl
mov
outsb
ret
lahf
repnz
sub
mov
pushf
mov
hlt
test
mov
adc
das
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
cltd
sbb
iret
ret
clc
sti
jae
ljmp
add
mov
jge
cmc
cld
or
lret
fdivl
xor
test
dec
imul
test
push
stos
popf
scas
lods
fisubrl
ljmp
push
mov
outsl
in
or
mull
imul
add
cltd
adc
xor
or
sub
lods
fwait
adc
pop
test
xchg
xor
add
xor
mov
mov
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
stos
ret
sub
jb
mov
aam
and
scas
xchg
sub
inc
mov
pusha
lock
imul
ror
xor
fwait
inc
out
pop
adc
mov
dec
clc
xor
ret
ret
loopne
add
mov
push
xor
xor
mov
inc
cmpsl
jg
addr16
push
pop
ljmp
cmpsb
sub
div
mov
xchg
insb
mov
lret
inc
std
lods
dec
in
pop
push
fistpll
xor
cmp
fisttpl
or
test
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
pop
mov
fnstcw
scas
in
mov
jmp
pusha
xor
jle
mov
and
mov
addb
mov
xchg
mov
imul
outsl
dec
call
scas
push
jmp
cmp
mov
sbb
dec
loope
xor
mov
cwtl
cltd
data16
sbb
mov
in
scas
int3
fwait
lds
stos
xchg
mov
jnp
adc
mov
mov
cld
mov
or
popa
ret
push
sub
shrl
loop
iret
sbb
daa
adc
nop
test
decb
aad
push
fmul
adc
aas
in
aad
insl
ficomps
fldcw
stos
lea
push
gs
push
enter
cmc
movsl
testb
in
aam
dec
and
pop
cmpsl
lret
dec
sbb
adc
push
mov
setbe
stos
pop
bnd
xor
or
dec
mov
sarl
pop
es
jo
sub
cmc
cwtl
sbb
xlat
dec
les
jle
dec
daa
or
andl
das
rclb
jmp
cmc
fdivrs
push
in
xor
and
jmp
cmpsb
sub
fidivl
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
cltd
rorl
mov
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
cltd
orb
xor
mov
arpl
mov
jg
mov
imul
push
adc
mov
pop
push
mov
shrl
fistpll
shrl
dec
sub
sub
xlat
in
out
ss
outsl
dec
dec
push
test
es
rcrb
out
mov
popf
enter
mov
mov
sbb
sub
jb
mov
stc
xor
or
cmp
jmp
or
jnp
testb
fucomi
hlt
std
mov
sti
and
test
pop
gs
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
mov
pusha
fimull
push
outsb
inc
rcr
cmp
push
jmp
ss
mov
fcomi
imul
adcb
call
pop
xor
and
push
push
mov
ljmp
bound
ret
shl
outsl
xchg
xorb
faddp
movsb
ds
popa
dec
leave
test
adc
jle
les
jecxz
stos
pusha
jmp
mov
bnd
sub
add
ret
iret
pusha
pop
jl
jnp
dec
inc
adc
jge
sbb
mov
stos
xchg
shld
scas
xchg
push
adc
jge
outsb
xchg
push
xor
pop
dec
add
bnd
iret
sub
aam
and
scas
xchg
sub
mov
mov
test
insl
inc
xor
xorl
mov
rcrb
sbb
cli
test
jne
movsl
in
lods
and
iret
push
insb
loopne
test
add
pushf
shll
je
lock
dec
jecxz
mov
imul
sub
adc
inc
in
xlat
mov
fldenv
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
cmpsb
scas
push
and
sub
lods
dec
fisubrl
jo
fisttps
xchg
xchg
dec
xchg
stc
pop
mov
scas
pxor
cld
repz
cwtl
or
add
cmc
jl
das
dec
iret
shl
idivl
outsl
outsl
insb
incl
out
dec
loopne
stc
mov
or
shrl
jmp
arpl
enter
or
and
push
orb
mov
mov
jl
push
or
jns
decb
lret
mov
into
ljmp
dec
adcl
hlt
test
sahf
sbb
jecxz
popf
mov
pop
adc
add
lods
cmpsb
fdivs
pop
mov
lods
xchg
sub
adc
fldenv
sarl
lahf
sbb
stc
inc
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
add
movl
pop
insl
dec
pop
xchg
jbe
or
push
push
push
xchg
push
es
test
sbb
clc
xchg
jmp
in
ffree
popa
jae
repz
scas
xchg
rcll
loop
push
popl
scas
out
cmp
out
mov
xor
jbe
jae
test
popf
icebp
lfs
xchg
xchg
jle
push
jo
cmp
push
xor
xchg
mov
mov
faddl
jp
mov
mov
ret
dec
sbb
jle
push
xchg
mov
dec
and
mov
mov
test
add
inc
sbb
dec
jecxz
movsl
mov
cltd
jo
or
cmpsl
push
sahf
mov
mov
iret
sbb
fwait
aam
sub
lods
sub
mov
and
adc
inc
mov
popa
pushf
dec
ret
sub
push
pop
push
leave
ret
leave
or
subb
xor
sub
mov
enter
jp
sbb
jnp
mov
mov
ficoms
cmpl
inc
xchg
ljmp
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
pop
aad
jns
mov
call
sub
cwtl
xor
into
add
xchg
and
xor
arpl
aaa
fs
sub
stos
iret
jp
sbb
es
js
and
push
inc
push
call
add
mov
fdivp
mov
or
xor
outsb
push
stos
or
mov
xorl
xlat
insl
aad
insl
ficomps
fists
in
dec
pusha
lods
fldenv
mov
js
fldt
xorl
clc
mov
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
mov
push
jno
jle
mov
fildl
insb
aas
xchg
and
mov
fsubrs
data16
mov
test
ljmp
dec
fidivrs
js
cs
jne
mov
andb
movsl
data16
and
enter
mov
nop
add
and
jecxz
add
mov
mov
ja
cmp
push
mov
pushf
xchg
cmp
or
inc
mov
inc
add
cmpsl
cmp
sbb
aas
ja
int
rcrl
push
sbb
mov
imul
scas
leave
fimuls
push
out
out
testb
xchg
xor
inc
in
dec
sbb
jne
addr16
flds
sub
sahf
or
add
test
jl
sbb
mov
push
xchg
mov
xchg
pushf
xchg
sbb
test
mov
fcmovbe
in
jo
jp
rcpps
rorl
mulb
cwtl
js
xor
shl
jl
les
push
mov
dec
and
aaa
sbb
push
or
pop
iret
rorl
dec
or
insb
cmp
repz
cwtl
add
test
add
or
dec
xchg
dec
fistpl
hlt
inc
or
push
jmp
cmpsl
pop
or
fldcw
leave
inc
rcl
iret
les
jmp
stc
aas
roll
popf
fs
mov
sbbb
mov
je
test
mov
xor
mov
cmp
rcrb
adc
test
push
sti
push
push
xchg
mov
xchg
aaa
in
je
sahf
das
xchg
stc
cli
in
test
or
test
jp
sbb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
movsl
adc
pop
and
in
jge
pusha
lret
pop
sub
scas
inc
cltd
bound
or
das
inc
iret
ror
jg
scas
dec
cmc
shld
pop
xor
jle
mov
xlat
repz
mov
jge
outsl
pop
add
popa
test
push
inc
inc
mov
fwait
mov
loop
cmc
mov
lea
mov
dec
mov
mov
les
cmp
mov
pop
movsl
jns
push
xchg
xor
leave
add
mov
or
mov
fdivrs
sbb
jge
jge
adc
ret
scas
gs
nop
ljmp
push
in
xor
mov
adc
push
xlat
jbe
pop
mov
push
or
out
in
test
xchg
aam
jne
insl
outsb
pop
cltd
enter
lods
mov
pop
arpl
mov
repz
push
lret
bound
scas
popa
or
sub
or
repz
in
cmp
out
xchg
mov
scas
out
mov
out
hlt
xor
sub
lock
das
jae
fdivrp
inc
mov
pop
mov
out
lods
fnstenv
xor
xor
iret
push
sbb
mov
int
dec
cmp
imulb
fnstsw
sub
movsl
lea
add
pop
shrl
or
xlat
int
add
in
and
lahf
jb
popa
mov
add
insl
push
sub
pushf
ret
pop
pushf
daa
popf
adc
push
lds
cmp
lret
pop
aam
push
adc
mov
scas
mov
fucom
mov
movsb
faddp
sahf
std
push
lock
pop
sahf
xchg
mov
jno
inc
inc
push
sbb
sub
lret
jnp
inc
pop
mov
lcall
sbb
mov
add
sbb
lahf
xchg
leave
xchg
cld
or
add
out
mov
sbbl
adc
cwtl
add
and
inc
stc
inc
push
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
xlat
xchg
stc
es
iret
out
aam
leave
ss
mov
add
mov
dec
adc
adc
cmp
test
adc
push
sbb
and
add
test
iret
popa
rcrl
sbb
rclb
out
inc
add
nop
jle
xchg
push
pop
test
push
stos
lea
mov
fistl
pop
adc
inc
cmp
mov
sbb
nop
mov
or
fisubrl
pop
aam
jne
insl
jb
xchg
dec
lods
into
lret
jae
sub
lret
push
fildl
pop
std
pop
mov
popf
enter
js
outsl
sti
nop
adc
es
clc
mov
add
push
test
dec
je
mov
repnz
and
pushf
mov
lret
in
mov
mov
or
lahf
cltd
pop
adc
mov
cmp
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
sub
cmpl
or
push
sub
push
xor
push
cmp
add
pop
inc
adc
jmp
decb
aad
es
xchg
mov
xlat
mov
mov
cmpsl
mov
scas
popa
xchg
fnstenv
push
jno
test
dec
dec
inc
aas
adc
mov
sbb
outsl
mov
loope
pop
or
xchg
addb
mov
fsubrl
or
mov
lcall
sub
push
hlt
cmp
in
and
movsb
hlt
xchg
add
lcall
fmull
sti
add
or
mov
cld
dec
fdivrs
dec
cmc
gs
push
aam
fistpl
icebp
stos
addr16
imul
jle
ds
jmp
std
mov
sti
and
sbb
lret
dec
sbb
ret
inc
lea
cmp
inc
fstpt
pushf
idivl
inc
pop
sbb
xchg
pop
adc
out
xchg
fcmovnbe
out
jno
pop
add
jae
popa
outsb
aam
sub
outsl
push
sbb
lcall
gs
dec
jbe
adc
imul
xchg
jne
mov
push
scas
out
push
lahf
stos
sub
clc
pop
frstor
imul
in
stc
dec
data16
aaa
stc
or
icebp
push
push
pop
jnp
or
or
add
shrl
dec
movsb
aad
xor
xor
mov
mov
cmp
and
lret
add
mov
out
push
out
icebp
add
xchg
cmp
out
mov
jno
iret
test
leave
loopne
ret
loope
loopne
lret
vpshuflw
dec
test
jp
mov
pusha
aaa
jge
xchg
test
push
mov
or
lcall
cmp
rol
xchg
and
add
xor
mov
std
div
xor
rol
adc
jns
sahf
rcrb
ret
mov
jbe
mov
icebp
aaa
mov
sbb
jge
les
mov
sbb
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
cmp
inc
outsb
cmpsb
sub
mov
mov
dec
mov
xor
xchg
fdivl
adcb
les
test
xor
not
jle
pop
xchg
mov
scas
data16
add
inc
xor
or
sti
dec
iret
push
call
subl
cmpsb
jmp
loopne
popf
test
aas
sbb
bound
lea
scas
cwtl
or
popf
ljmp
mov
movsl
mov
cmp
test
repz
dec
mov
lea
pop
mov
repz
iret
sbb
sbb
ds
lock
mov
aad
pop
mov
mov
cmp
mov
cmp
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
cmpsb
scas
push
and
sub
lods
dec
fisubrl
jo
fisttps
xchg
xchg
dec
xchg
stc
pop
mov
scas
pxor
cld
repz
out
das
add
xchg
iret
shl
idivl
outsl
outsl
call
out
dec
loopne
std
inc
into
out
popl
sahf
pop
lahf
jnp
lea
into
inc
out
call
imul
vcomisd
dec
nop
mov
sbb
mov
loope
insl
or
ljmp
push
mov
aam
push
dec
add
mov
cmp
jp
add
cltd
sub
adc
sarb
add
inc
mov
leave
pushf
dec
push
xchg
xlat
stos
mov
rcll
pushf
pop
pop
pop
loope
fbstp
out
icebp
cmp
insl
sahf
pop
xchg
iret
loope
add
jbe
lods
outsl
mov
or
dec
sub
push
std
add
ror
out
sbb
scas
iret
dec
movsb
ljmp
fadds
push
loopne
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
gs
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
arpl
sub
xchg
inc
mov
shlb
into
test
rolb
repnz
movsb
xchg
mov
adc
mov
mov
mov
cmc
mov
shlb
fsts
inc
pop
and
movsl
mov
jg
adc
mov
adc
sbb
mov
sub
sbb
jae
mov
or
cmp
adc
mov
les
lret
fisttpll
jbe
mov
jbe
pusha
mov
jmp
jno
insb
jecxz
test
movsb
scas
pop
push
in
pop
inc
jg
sbb
add
imul
out
cmp
stc
pop
xor
loopne
int
lods
repz
movsl
cmp
arpl
mov
out
mov
les
lock
xor
cmc
vcomisd
dec
nop
mov
sbb
mov
loope
insl
or
ljmp
push
mov
jg
cmp
adc
mov
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
incl
sbb
mov
dec
ljmp
and
adc
lcall
sahf
jns
loope
pop
lods
push
jg
and
jbe
bound
jg
shl
mov
fcomps
jne
sbb
push
inc
ficoml
xchg
push
jns
inc
in
scas
aas
test
stos
adc
pop
aam
fwait
leave
jecxz
or
das
push
roll
aas
xchg
xor
pop
sahf
not
int
mov
add
xchg
leave
fnstenv
adc
repnz
xor
mov
cmpsl
test
aas
xchg
xor
jne
cltd
cmpsl
inc
popf
jp
or
and
cmp
mov
adc
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
lahf
lret
jecxz
mov
lock
ret
push
push
jle
sbb
ljmp
adc
int3
inc
mov
and
shrl
repz
aaa
stc
push
pop
fldt
sahf
jbe
and
inc
cmpsb
mov
shrb
icebp
push
mov
mov
repnz
daa
jne
insl
bound
sub
rsqrtps
ret
mov
sbb
add
and
mov
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpsb
clc
xor
cmpb
je
test
push
or
int
imul
jmp
mov
daa
push
imul
inc
mov
das
mov
jo
push
jl
std
roll
ljmp
sbb
out
sbb
repnz
adc
jl
clc
sub
int
inc
jmp
rcrb
ficompl
jne
mov
in
dec
sub
movsb
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
int
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
pop
iret
xchg
shr
jo
pop
int
pop
insb
into
pop
mov
repz
push
rcll
scas
push
push
orl
fsubrs
sbb
aad
mov
inc
mov
mov
mov
mov
rcll
add
cmp
xchg
xchg
jle
cwtl
out
cwtl
je
fcoms
inc
push
jp
adc
xor
mov
mov
jmp
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
xchg
std
pop
int3
push
mov
ja
mov
pop
add
out
pop
fstl
wbinvd
imul
push
adc
call
daa
sub
ljmp
movsb
pop
loopne
mov
movsb
shll
lock
jbe
lods
push
xchg
mov
repnz
sub
lret
jnp
jbe
mov
insl
outsb
pop
cltd
enter
fldt
jae
in
scas
aas
test
sub
cmpxchg
dec
lret
and
cld
mov
dec
mov
lret
sbb
xor
add
xchg
pop
mov
fists
les
repnz
repnz
scas
cmp
jae
fidivrs
pop
sub
adc
jl
pop
adc
shll
pusha
scas
fdiv
ss
imul
leave
int
sub
xchg
inc
gs
imul
add
mov
js
sti
repz
seta
dec
dec
in
mov
mov
in
mov
imul
lock
mov
pop
mov
cwtl
in
outsb
xor
mov
in
imul
dec
and
fildll
lds
shl
mov
popf
lret
test
dec
es
stos
xchg
test
insb
or
shlb
sub
loope
add
dec
xor
xor
dec
mov
sarl
sbb
shlb
inc
addr16
inc
fxch
jb
add
sarl
cli
repz
test
shrl
push
dec
mov
xor
push
les
xor
enter
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
stos
gs
xchg
or
addr16
adc
add
xchg
sub
rol
dec
sbb
dec
jle
push
xchg
mov
pop
adc
adc
mov
mov
jle
mov
inc
jge
pop
rcrb
adc
cmp
adc
sub
add
xchg
cmpsb
call
mov
lret
imul
push
stos
adcl
ljmp
out
testb
inc
gs
dec
sub
sub
mov
cs
dec
repnz
mov
mov
repnz
mov
hlt
in
rol
leave
jnp
inc
enter
cmp
xor
sbb
leave
or
ds
push
sub
pop
std
arpl
lcall
stc
js
std
and
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fsubs
pop
mov
gs
pop
sarl
out
push
pop
pushf
xchg
dec
adc
cmp
sub
mov
dec
adc
lcall
adc
bound
lods
sub
adc
pop
popf
xchg
mov
or
mov
push
push
decb
aad
push
sub
push
mov
insl
aad
insl
int3
inc
push
cltd
dec
xlat
and
fxtract
push
and
aam
bound
fwait
lahf
and
mov
shlb
arpl
sub
test
icebp
fiaddl
or
inc
mov
add
pop
inc
mov
fidivl
jbe
pop
jp
mov
fisttps
mov
mov
mov
mov
pop
jb
add
fsubl
test
adc
adc
orl
mov
in
enter
cmp
out
mov
out
loopne
js
mov
ds
dec
out
les
les
pop
or
mov
movsb
mov
aad
push
iret
lock
rcll
pop
sbb
bound
subb
mov
arpl
sbb
pusha
arpl
sti
push
cld
mov
shlb
push
cmpb
sbbl
hlt
mov
mov
aad
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
orb
jae
mov
mov
cmp
cmpsl
test
mov
cmpsb
sub
mov
nop
cli
cmpsl
pop
scas
mov
leave
cli
sarl
call
sbb
sahf
pop
mov
repz
cmp
pop
gs
add
jae
jle
scas
pxor
ret
sti
pusha
das
sahf
xor
mul
inc
lcall
gs
out
jae
pushf
lret
scas
loope
sti
jnp
out
scas
mov
pop
pop
ljmp
outsb
out
lahf
stc
cwtl
shll
insb
lea
sbb
pop
shr
addb
aas
xorl
pop
add
mov
rcrb
pop
jno
repnz
leave
mov
adc
and
jl
in
test
pop
rcrl
mov
sub
and
xchg
sub
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
loope
lret
movb
sub
xor
imul
xchg
push
pop
push
jnp
xchg
and
stc
xchg
and
cltd
push
inc
dec
push
aaa
lods
adc
mov
scas
jmp
sub
cs
mov
dec
adc
sti
addl
sbb
mov
in
fidivrl
cmp
jmp
std
stos
mov
mov
ja
lahf
outsl
aas
addl
mov
sti
sti
and
test
lahf
gs
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
movsl
mov
fwait
add
cltd
adc
sbb
inc
mov
and
daa
and
mov
push
test
jle
sbb
mov
movsl
push
aad
jbe
mov
inc
and
add
imul
movsl
mov
jne
adc
inc
ds
movsb
ret
enter
popa
mov
fwait
and
cmp
mov
or
mov
mov
repz
lret
adc
mov
scas
adcb
mov
xor
cmc
xor
pop
inc
mov
inc
mov
cmc
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
aam
stos
dec
sbb
adc
into
test
and
ds
add
and
fists
add
cmp
ffreep
mov
sti
add
je
mov
xor
dec
sbb
sub
and
stos
push
insb
sarl
adc
test
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
cmpsb
mov
aam
movsb
xor
jmp
sarb
stos
pop
xchg
repz
ret
cmpsl
inc
and
in
jge
pop
adc
in
add
iret
jne
cld
jae
xor
xchg
push
fcmove
xchg
hlt
ja
std
pushf
out
xor
out
lcall
mov
xlat
imull
rcrl
test
iret
divl
sub
mov
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
pop
rorl
mov
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
mov
dec
jecxz
sub
imul
lods
jl
dec
and
jge
push
test
movsl
mov
sbb
jl
cmpsl
in
mov
and
pusha
lock
or
add
mov
mov
and
sti
sub
dec
movsb
mov
or
cmpl
push
sub
dec
jae
les
lcall
push
jae
and
dec
and
mov
sbb
mov
push
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
inc
out
insl
push
andb
cmp
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
dec
mov
insb
push
imul
in
insl
ficomps
adc
and
lods
fldt
sahf
xchg
mov
mov
inc
cmpb
mov
sahf
jns
jecxz
sub
add
rol
mov
dec
lret
push
xor
outsb
movsl
cmpl
sbb
add
adc
pusha
pop
pusha
push
out
adc
or
cmp
mov
add
jmp
jl
mov
jb
add
lahf
xor
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
xchg
inc
test
dec
les
lds
mov
jo
fstp
inc
sbb
stos
adc
nop
sub
or
jl
cmp
jo
xor
cmp
call
lds
pop
xlat
pusha
push
xchg
jle
mov
xor
adc
push
mov
dec
mov
fldt
imul
test
movsl
push
imul
lods
mov
push
sub
mov
fsts
and
mov
ret
ret
push
leave
ret
sbb
xor
adc
dec
jl
addl
cmp
fcmovnu
adc
xchg
jnp
xor
sbb
xor
imul
adc
in
cmp
mov
and
adc
and
pop
jae
inc
insl
out
pop
aad
jns
inc
sub
ljmp
cltd
enter
addl
and
js
push
add
int
imul
xchg
fwait
jge
lret
pop
sbb
cli
mov
jne
movsl
in
fldenv
push
iret
push
insb
loopne
test
add
pushf
shll
je
lock
dec
jecxz
add
imul
sub
adc
inc
in
xlat
mov
fldenv
testl
loope
lret
movb
sub
xor
imul
xchg
push
pop
push
jnp
xchg
and
stc
insl
pop
fwait
jbe
test
add
es
add
lahf
jo
fists
xchg
mov
cmpsb
xchg
sub
xchg
andl
loope
add
les
data16
xchg
stc
dec
cmp
adc
or
cmp
mov
ret
arpl
or
and
sbb
lret
dec
sbb
lret
inc
lea
cmp
ret
inc
jmp
add
sub
pushf
inc
push
push
call
dec
jl
jecxz
fwait
pusha
sbb
mov
outsb
in
addl
in
mov
insb
in
inc
into
push
mov
insl
in
loope
adc
mov
push
stos
fincstp
push
mov
scas
iret
xchg
lcall
lahf
popf
push
jns
lcall
mov
into
ss
mov
ja
aad
cmp
rorl
stos
mov
sbb
pop
ds
mov
pop
xor
mov
bound
in
nop
xchg
lahf
push
cwtl
lock
sub
scas
outsb
leave
or
push
jge
dec
jnp
in
lret
loop,pt
pop
dec
xor
xchg
dec
mov
adc
js
cmp
mov
fldl
sbb
xor
fcomip
repz
lea
adc
mov
pushf
sbb
sbb
jbe
sub
imul
das
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
mov
clc
sti
jae
ljmp
add
add
mov
sbb
fs
orb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
mov
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
xchg
and
cmp
dec
dec
dec
cmpsb
lds
sbb
mov
push
loopne
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
mov
add
inc
std
bound
cltd
add
aaa
jl
pop
push
mov
dec
test
imul
aad
sbb
or
and
and
pop
jb
loope
call
punpcklbw
loopne
xor
push
and
xchg
cli
mov
inc
xchg
enter
lock
test
maxps
dec
cmp
sbb
in
jmp
test
aaa
jns
pop
push
mov
pop
fucom
cli
mov
sti
stc
cli
in
test
or
pop
sbb
outsb
or
cmp
ret
int
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
pop
iret
xchg
shr
jo
sbb
xchg
int3
pop
mov
repz
inc
das
or
arpl
cwtl
scas
push
repz
xchg
and
mov
xchg
pop
repz
popf
push
out
fs
xor
sub
inc
fmull
inc
cmp
std
fwait
mov
mov
xor
add
test
add
fsubrs
test
cmc
mov
and
xor
les
in
loopne
mov
push
cmc
or
mov
lahf
lret
jecxz
inc
dec
xor
pop
sub
mov
xchg
ja
ja
icebp
ret
leave
pop
movsb
mov
pushf
inc
nop
sarl
lods
clc
inc
mov
iret
lods
leave
push
sbb
and
mov
xor
dec
adc
std
fnstenv
mov
add
scas
fsubr
adc
sub
cmp
fimull
mov
imul
lcall
jge
pop
xor
mov
lahf
movsb
mov
xchg
adcb
lret
cmp
add
or
pop
cwtl
rolb
call
xchg
scas
out
stos
dec
sub
pushf
xchg
push
bound
sub
lods
insb
icebp
pusha
stc
lods
cmp
sub
out
mov
sub
leave
fs
cltd
nop
push
push
and
insl
je
out
mov
mov
push
add
cmp
mov
and
sarl
cwtl
cmp
push
popf
arpl
sahf
loop
mov
adc
data16
jg
adc
ja
out
sbb
sarb
jno
rcrl
stc
inc
leave
test
roll
push
fbstp
je
pop
iret
sbb
rcr
loopne
mov
xor
xchg
mov
jl
adc
mov
adcl
jbe
sub
sub
jnp
cmp
jmp
dec
bnd
popf
lds
push
jns
dec
sti
mov
dec
testl
ds
ja
fcomip
je
cmp
test
jns
ret
outsl
gs
dec
inc
lods
mov
jg
inc
jp
jle
fildll
shlb
dec
xor
repnz
inc
mull
outsl
stos
sbb
cmpsb
ja
test
shlb
clc
sarl
ret
xchg
add
lret
popf
ljmp
cmpsl
test
mov
or
jl
loop
out
jbe
lea
in
and
mov
sbb
sbb
lds
mov
push
push
clc
sub
fsubp
cmp
movl
sti
stc
cli
in
test
or
test
mov
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
inc
dec
aam
pop
mov
out
outsl
or
clc
cmc
inc
in
out
das
dec
cmpsl
cmp
or
movsl
mov
out
jae
pushf
lret
scas
loope
sti
add
mov
imul
pop
scas
insb
lock
stc
inc
iret
pop
inc
loope
xchg
inc
inc
xchg
jl
dec
rcll
add
pop
mov
pop
subb
add
mov
mull
aam
jae
push
addl
sub
jmp
cmp
imul
jne
jp
add
add
mov
sbb
xchg
xor
mov
test
sub
in
push
enter
lods
push
shrl
sub
mov
aad
ja
pop
imul
sbb
xchg
inc
inc
xchg
or
xchg
popf
mov
adc
pop
pop
fwait
enter
inc
push
inc
xchg
push
mov
ret
mov
push
push
cli
mov
pop
mov
mov
popa
das
jg
iret
push
lret
inc
mov
aas
fisubs
jecxz
xchg
xchg
jg
sub
mov
pop
xchg
lcall
push
jmp
fnstsw
xchg
ds
mov
add
dec
std
bound
jno
adc
test
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
add
inc
pop
mov
xor
jbe
imul
mov
or
xchg
jecxz
lret
loop
and
loopne
dec
imul
push
adc
ret
scas
retw
out
mov
int
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
sarb
lock
movsl
xchg
mov
fcompl
aad
xor
xor
mov
bound
inc
cld
loop
in
nop
xchg
lahf
push
cwtl
lock
sub
scas
outsb
leave
or
push
jge
dec
jnp
in
mov
dec
cmp
insb
mov
mov
lods
dec
fsts
pop
pop
mov
arpl
jnp
stc
adc
mov
popf
arpl
cmp
pop
add
mov
inc
rol
add
mov
sbb
jb
sub
hlt
dec
add
xor
and
mov
rcrl
mov
into
fwait
cmp
pop
dec
sbb
jnp
hlt
leave
add
sbb
test
lcall
daa
lahf
iret
push
hlt
mov
arpl
cli
or
lds
push
clc
stos
jg
lcall
and
lret
in
or
repnz
bound
sub
sub
dec
dec
fsub
ja
or
jmp
push
push
daa
scas
inc
push
rep
aam
xor
enter
pop
push
notb
add
enter
rcrb
into
cmc
cwtl
fwait
mov
pop
mov
pop
sub
pop
cld
repz
out
das
in
rorl
mov
fsubl
addr16
pop
push
and
sarb
mov
ss
push
inc
xlat
mul
jle
mov
cwtl
inc
data16
or
jb
leave
data16
daa
ss
stos
jae
nop
and
push
or
mov
aam
les
add
mov
js
sti
repz
seta
dec
dec
in
mov
adc
enter
mov
sub
mov
xchg
xchg
mov
inc
orl
xchg
push
aad
and
lock
out
pusha
in
dec
mov
jno
cs
inc
or
fxch
push
dec
in
sbb
fmuls
cmpsb
mov
fists
movsl
push
mov
add
jge
sub
fwait
xchg
fcoms
pushf
sub
or
cmpsl
push
pop
jno
in
lds
js
inc
mov
xor
sub
cmp
and
pop
adc
es
pop
jae
inc
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
push
fwait
ret
push
cmp
pop
rorb
ss
cmp
sub
icebp
lods
push
pop
pop
xor
pop
sbb
xchg
inc
push
fwait
jp
mov
or
repnz
add
addb
je
sti
jae
fildll
jmp
decb
aad
push
pop
push
insl
aad
insl
ficomps
fldcw
stos
lea
mov
fbld
xor
imulb
daa
xchg
test
dec
popf
push
aad
inc
fdivs
push
add
cmp
inc
mov
scas
push
and
sub
es
adc
test
movsb
aaa
xchg
popa
cmp
stc
mov
or
pop
xchg
mulb
fldcw
push
fisubrl
xchg
add
ja
jmp
int
adc
ret
or
mov
loopne
sbb
dec
push
xabort
mov
pop
mov
dec
sub
fisttpll
imul
jo
insl
das
fidivl
adc
popf
sub
push
or
dec
cmpsb
mov
xor
dec
aam
roll
lds
ret
ret
test
xchg
repnz
ds
mov
mov
stos
stc
sbb
xchg
lock
mov
pop
mov
sahf
imul
jmp
loop
fsubrl
push
dec
dec
pop
mov
rcrb
pop
jne
push
sahf
loope
lret
xor
scas
adc
lret
lcall
ficoml
lds
mov
pop
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
pop
rorl
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
clc
inc
and
cltd
aas
mov
dec
push
pop
xor
rolb
add
inc
rorb
xor
mov
xor
daa
adc
lods
sbbl
jae
or
xchg
in
dec
or
repnz
jle
adc
rolb
adc
popa
push
sub
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
push
mov
insl
aam
rol
mov
xchg
int3
js
rcrb
sbb
xchg
sub
insl
jle
mov
je
xor
inc
sbb
in
scas
aas
test
pop
aad
mov
pop
xchg
test
xor
jae
jle
scas
leave
test
cltd
scas
push
repz
jo
cwtl
ret
jg
ja
jecxz
sti
jge
outsl
outsl
call
stos
subl
out
scas
mov
pop
cs
icebp
pusha
stc
inc
iret
es
jl
cwtl
ret
test
xchg
dec
shlb
shr
adc
test
sbb
notl
into
pop
stos
cmp
je
inc
jae
xchg
and
insl
xchg
push
jmp
clc
jp
call
stos
jns
sub
sbb
inc
jbe
xor
out
mov
mov
sub
push
add
inc
push
push
int
ljmp
and
call
into
push
daa
jae
xchg
or
pop
rorb
enter
test
mov
mov
or
xor
fwait
movsl
js
cmpsl
adc
enter
cmp
sub
or
repnz
xchg
jo
rcl
mov
aam
clc
xor
mov
adc
es
xchg
xchg
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
mov
fdivl
jmp
pushf
add
jmp
add
and
push
dec
push
xchg
push
mov
jge
je
andl
push
call
aaa
out
jns
pop
mov
popf
in
imul
sub
loope
sbb
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
frstor
inc
outsb
cmpsb
sub
mov
mov
dec
loopne
adcl
dec
add
and
rclb
in
and
jae
enter
lret
jl
fdivrs
mov
ficoms
ja
add
dec
xlat
xor
das
push
iret
hlt
test
mov
data16
jmp
xor
dec
xchg
das
mov
sbb
leave
rclb
or
mov
push
push
les
test
lods
xor
push
add
shrl
adc
js
jnp
adc
aas
in
and
testl
adc
ret
sbb
cmc
in
pushf
cmp
sub
outsl
pop
mov
push
pop
movsb
fisubrl
mov
movl
popf
movsb
stc
mov
mov
test
pop
or
lds
lods
nop
push
loope
rcll
lret
test
push
lods
push
sub
lret
test
mov
pop
iret
xchg
xchg
in
pusha
cmp
int
push
ror
pusha
mov
cltd
das
push
es
add
out
ud0
lock
fisttpll
test
dec
adc
pop
call
sbb
sarb
call
adc
adc
xchg
and
jno
jle
dec
lea
fcmove
mov
addl
dec
add
arpl
daa
mov
and
push
push
sbb
push
xor
push
cmp
cs
inc
mov
sub
insb
push
sub
dec
dec
xchg
dec
push
in
ficoms
fcomi
int
pop
pop
inc
push
push
sub
fistps
sti
dec
scas
pop
rcr
loop
insb
push
les
pop
sbb
clc
mov
jns
gs
jmp
or
enter
push
push
inc
call
add
aas
stos
scas
outsl
clc
jae
repnz
mov
jecxz
push
cmp
adc
sbb
add
and
ds
add
stos
rol
int
push
and
repnz
sub
xor
and
int3
sub
mov
rcr
pop
fidivrs
jnp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
cmpsl
adc
int
js
subl
adc
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
fmull
cwtl
dec
xlat
mov
and
enter
scas
arpl
mov
jne
adc
cmp
push
xor
div
pop
addr16
dec
dec
test
sbb
xor
imul
jge
jmp
adc
dec
jl
addl
cmp
fcmovnu
adc
xchg
jnp
xor
sbb
xor
imul
adc
in
cmp
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
stos
ret
jb
in
jns
popf
ja
mov
xor
dec
mov
mov
or
dec
fwait
lds
xchg
pop
popl
xor
call
shrl
enter
sbb
icebp
aas
out
scas
test
pop
dec
int3
push
jmp
hlt
inc
pop
push
mov
cmp
dec
fimuls
lahf
cmc
gs
sbb
mov
dec
aam
cli
mov
jne
mov
mov
sbb
lods
cmp
rcrl
xchg
mov
outsb
or
into
cmp
ret
int
sarb
xor
mov
jp
add
cmp
lds
cmp
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
adc
mov
dec
iret
cld
inc
cs
test
dec
xlat
inc
call
out
dec
loop
std
inc
out
out
scas
mov
sub
ljmp
test
into
add
and
sub
pushf
ret
shlb
or
cmp
dec
dec
adc
dec
add
mov
push
test
or
shlb
or
repz
jge
icebp
fwait
lahf
mov
jns
pushf
rcrl
sub
addl
push
adc
mov
sbb
pop
xchg
sbb
divb
sbb
cltd
lret
lcall
sbb
std
fistpll
stc
mov
mov
test
in
andb
cmpsb
lds
imul
inc
movsb
xchg
imul
int3
inc
in
mov
scas
sub
adc
dec
cltd
mov
mov
pop
xor
sbb
or
test
xor
or
sti
dec
iret
push
jp
scas
subl
inc
xchg
pop
xor
mull
jo
repnz
pop
sarl
jge
or
jp
mov
je
and
sub
and
xor
push
adc
pop
test
lcall
adc
mov
mov
mov
cmp
jp
add
add
mov
sbb
orb
xor
mov
arpl
mov
incl
sbb
mov
lea
push
lret
pop
xor
adc
inc
repnz
sahf
jge
loopne
lcall
xchg
stos
push
repnz
mov
xchg
stos
aam
pop
cltd
enter
lret
push
inc
sbb
xchg
clc
xor
sub
push
xchg
xchg
test
lret
popa
jle
icebp
jle
jno
add
andl
leave
lock
pop
fsubl
mov
arpl
ljmp
xchg
imul
pop
out
inc
test
jns
outsb
negl
xor
mov
mov
decb
inc
fcmovb
mov
mov
adc
and
test
mov
js
sti
repz
seta
dec
dec
in
mov
adc
enter
mov
sub
mov
xchg
xchg
mov
inc
orl
xchg
push
aad
and
lock
out
pusha
in
dec
mov
jno
cs
inc
or
fxch
push
dec
in
sbb
fmuls
cmpsb
mov
fists
movsl
push
fwait
or
inc
add
sub
fwait
xchg
fcoms
pushf
sub
or
cmpsl
push
pop
jno
in
lds
js
inc
mov
jne
mov
cmp
mov
and
adc
es
pop
jae
inc
insl
out
sbb
inc
add
pop
ljmp
xor
lods
xor
mov
dec
test
mov
es
cmpsl
out
leave
mov
fs
pop
or
jno
dec
and
out
mov
mov
movsb
ret
lock
pusha
mov
loope
mov
popa
mov
push
add
decl
cld
pop
add
in
push
push
xchg
xchg
inc
add
mov
repz
sbb
push
cmp
je
stos
ret
fcoms
adc
and
ror
mov
lret
repz
cmp
ret
mov
in
orl
sub
jno
or
dec
dec
pop
jb
xor
or
jnp
mov
int3
scas
std
stc
inc
repz
lret
std
cli
jnp
inc
mov
add
adc
cwtl
add
and
mov
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
adc
rcrb
test
ret
shrb
or
dec
adc
xor
adc
and
test
mov
sub
repnz
add
lock
mov
xorb
mov
xchg
ss
ja
fs
dec
sub
pop
mov
notb
dec
xchg
addr16
jmp
in
scas
pop
mov
sbb
adc
stos
adc
fwait
mov
lret
je
mov
ja
call
or
mov
repnz
insl
aam
cmp
dec
les
add
shll
pop
shr
adc
iret
pop
test
xor
popf
fwait
ljmp
add
mov
fwait
push
dec
mov
and
adc
es
pop
jae
inc
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
and
sbbl
mov
bound
or
push
pop
push
test
mov
pusha
push
sub
push
xor
xor
mov
or
outsl
aam
sub
push
inc
arpl
mov
sbb
test
sbb
enter
fists
outsl
and
adc
inc
mov
xor
xchg
outsb
mov
pop
sub
inc
and
test
test
movsb
aad
pop
jne
xor
imul
add
xor
dec
push
xor
dec
cld
loop
ja
or
inc
or
push
xchg
add
cmp
repnz
xchg
out
lods
icebp
xchg
cwtl
inc
stos
adc
imul
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
insl
add
and
push
or
inc
xorb
addr16
aad
jno
xor
inc
insb
ret
lahf
xor
in
js
inc
cli
jae
xlat
sbb
xor
lods
popl
sub
outsb
int3
sbb
stos
xchg
scas
sbb
addr16
cmp
mov
aad
xchg
lods
jo
lahf
xchg
inc
add
cld
sub
cmc
cmp
rorb
add
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
push
jnp
xchg
add
movsb
fisttps
mov
bound
inc
cld
loop
in
nop
xchg
lahf
push
cwtl
lock
mov
or
push
mov
push
xchg
popa
mov
or
in
push
adc
out
xlat
shr
loopne
mov
iret
lahf
cli
cwtl
ret
leave
rolb
rclb
add
andb
xor
mov
jmp
jecxz
dec
ja
repz
in
inc
inc
xchg
and
ja
aaa
lods
pushl
or
repz
fists
addb
rcrb
hlt
das
lock
mov
sbb
push
fcompl
jne
jns
lds
nop
lds
mov
fldenv
testl
sahf
std
and
dec
cmpsl
xchg
int
sar
int3
mov
adc
out
in
or
mov
sub
hlt
mov
scas
push
and
sub
es
addr16
sbb
jle
out
test
xor
arpl
das
push
roll
scas
push
repz
imul
cs
mov
pop
out
cmp
out
jae
pushf
sub
in
sti
mov
xorl
pop
lds
jg
lahf
lods
xlat
lret
cwtl
rcrl
pop
cmp
data16
test
or
dec
or
mov
adc
repz
mov
add
loop
dec
cmp
hlt
movsl
mov
jg
add
mov
int
inc
sub
sub
mov
add
test
mov
sarl
lahf
sbb
stc
inc
repnz
movsb
jmp
xchg
aam
push
dec
popf
push
aad
push
fdivs
push
mov
cmp
ret
ficoms
mov
scas
mull
or
xchg
mov
cmp
sub
adc
fimull
lahf
adc
clc
clc
mov
sbb
inc
xor
fdivs
add
push
test
xchg
adc
data16
mov
popf
push
stos
icebp
mov
sbb
xchg
jne
mov
or
mov
add
dec
std
bound
cltd
add
mov
int3
out
mov
mov
push
and
add
xchg
pop
or
xchg
push
jmp
ficoml
push
push
adc
test
or
shrl
in
jae
sbb
xchg
jecxz
mov
pop
es
out
testl
cli
mov
aad
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
orl
jae
mov
bound
test
fisubl
inc
outsb
cmpsb
sub
mov
adc
mov
leave
ljmp
jae
in
mov
scas
jle
xchg
xchg
sub
add
addr16
fnstcw
es
xlat
pop
out
mov
jg
out
daa
add
cmpb
leave
xchg
out
bound
sub
lods
jne
pop
pop
push
ss
push
popf
stos
stos
sbb
push
pop
xchg
out
clc
int3
es
daa
int3
std
je
pop
push
pop
jp
dec
mov
xchg
jmp
and
push
mov
cmp
and
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
imul
leave
fsubrl
stos
lret
movsl
mov
add
addr16
mov
cmpsl
mov
hlt
rolb
popf
push
std
ljmp
in
xorl
clc
mov
movsl
push
orb
sbb
or
mov
pushf
adc
mov
lds
xchg
or
inc
fdivrs
out
icebp
leave
in
test
sahf
mov
mov
in
cmp
mov
mov
add
xchg
cmc
mov
cmp
movsb
ret
xor
cmpsl
mov
jae
mov
int
jno
jecxz
fcoms
mov
nop
pop
adc
add
sub
xchg
vsqrtss
add
notb
sub
addr16
std
mov
jno
jl
ficoml
adc
jmp
mov
push
jbe
add
std
aas
sbb
ds
imul
mov
aam
mov
xchg
push
negl
in
lods
mov
fldenv
repnz
hlt
je
sahf
das
xchg
stc
cli
in
test
or
test
lcall
pop
lock
nop
cli
cmpsl
pop
scas
mov
leave
cli
sarl
xchg
push
mov
sbbb
icebp
out
jno
sbb
sbb
ret
xchg
push
dec
push
inc
dec
lock
mov
enter
out
cmp
out
jae
jp
scas
push
rcrl
andl
js
cs
jae
pushf
xor
cmp
mov
push
cmpsb
rolb
ss
push
xorl
pop
je
dec
iret
insb
movsb
sbb
or
pop
out
shl
mov
cmpsb
pop
or
mov
push
jl
inc
and
add
loope
jl
mov
mov
jae
or
test
inc
into
push
mov
insl
cmc
imul
shll
dec
mull
push
push
and
aam
filds
push
les
and
dec
cmpsl
xchg
int
rolb
ja
in
jg,pn
mov
out
cmpsb
dec
mov
jne
jbe
mov
fs
fs
roll
popa
inc
outsl
mov
pop
mov
popf
int
dec
jecxz
add
pop
sub
or
mov
jmp
or
sub
mov
in
push
aam
ret
inc
jge
imul
stos
cmp
push
jne
insl
add
test
add
sbb
add
andb
js
sbb
mov
dec
sbb
jle
push
xchg
mov
pop
adc
mov
mov
push
xlat
bound
adc
xchg
pop
xchg
into
in
inc
repz
fcoml
xchg
leave
arpl
cwtl
fcoml
icebp
cmpb
mov
rcrb
pop
mov
insl
push
imul
push
fcomi
pop
iret
inc
pop
test
test
pop
push
rorl
mov
dec
cli
xchg
dec
les
dec
dec
fsubl
ja
in
xor
shlb
sub
bound
movsl
mov
cltd
pop
and
add
pop
sbb
arpl
sbb
btc
and
dec
fwait
or
or
jns
mov
mov
or
inc
cmc
add
pop
xor
or
psraw
test
and
cmp
mov
loope
pop
pop
pop
clc
fisubs
aad
inc
and
cmp
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
add
dec
mov
shll
aad
mov
adc
or
mov
fsubrl
push
mov
shlb
test
mov
scas
push
sub
lods
subb
dec
mov
push
add
inc
lret
iret
adc
rorb
dec
jmp
js
scas
mov
xchg
sub
add
dec
fidivrs
mov
fstpl
icebp
xchg
jp
fisttps
mov
mov
cli
cmpsl
js
inc
mov
pop
jb
add
mov
outsb
rcll
cwtl
jge
jge
outsl
jg
std
xchg
xor
lret
scas
in
lock
inc
sbb
xor
loopne,pt
inc
fildll
mov
shll
mov
inc
adc
jle
nop
lds
dec
dec
adc
jo
mov
bound
mov
and
sub
pop
inc
pusha
lods
in
xor
pusha
jnp
cmc
dec
inc
test
xchg
roll
lock
test
maxps
dec
cmp
sbb
in
jmp
test
aaa
jns
pop
push
and
fucom
cli
mov
cmp
in
test
or
test
mov
cmpsb
sub
mov
mov
dec
loopne
subl
mov
adc
cltd
dec
bound
clc
dec
sbb
jne
add
cs
mov
loopne
xor
hlt
ja
jge
dec
add
xchg
stos
js
scas
xchg
push
adc
js
lret
push
repz
lahf
scas
les
dec
in
cmp
mov
mov
inc
iret
fs
insb
or
mov
out
mov
imul
push
xchg
push
cmp
dec
call
jne
pusha
add
in
and
xor
repz
adc
and
jns
pushf
rcrb
sbb
sbb
fisttpl
ficomps
cmc
mov
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
inc
dec
aad
pop
cltd
enter
lods
mov
mov
arpl
movsl
sub
sbb
sbb
sbb
ret
xchg
mov
leave
lock
mov
test
mov
rcrl
pushf
sub
jnp
mov
js
call
iret
adc
jb
cltd
enter
daa
out
xor
gs
es
or
inc
and
or
sahf
imul
adc
sbb
mov
movsb
sub
les
xor
or
inc
xchg
jge
ret
stos
and
std
mov
xor
inc
push
inc
mov
mov
dec
gs
jg
xor
popa
lods
fldt
or
sub
lahf
push
mov
mov
pop
cmpsb
mov
xor
xchg
push
pop
clc
cmpb
cmpsb
mov
sbb
aad
neg
pushf
test
fwait
rolb
ja
xor
jae
ss
or
repnz
xchg
jo
rcl
mov
aam
clc
xor
mov
adc
es
xchg
xchg
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
mov
fdivl
jmp
fnsave
sbb
fidivl
or
test
jle
imul
mov
pop
sbb
cli
sub
jne
movsl
in
mov
insb
loopne
test
add
pushf
shll
je
lock
dec
jecxz
jp
imul
sub
adc
fldenv
sarl
lahf
sbb
stc
inc
jecxz
cmp
fidivs
loope
and
popf
push
aad
pop
fdivs
push
sub
lods
loope
ljmp
or
jae
xor
stos
es
enter
dec
std
push
or
sbb
js
adc
jno
js,pt
xchg
sbb
mov
decb
std
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
cmp
pushf
inc
mov
add
adc
or
int3
sub
loop
jge
mov
repnz
adc
rolb
jae
gs
push
sub
pop
call
and
imull
mov
pop
adc
ret
sbb
cmc
in
pushf
cmp
sub
outsl
pop
and
pop
movsb
fisubrl
mov
movl
push
fwait
mov
rcr
addl
test
add
and
cmpsl
mov
aad
pop
dec
xchg
aam
movsb
xor
jb
sarb
push
dec
xchg
push
jnp
xchg
pop
push
pop
hlt
shl
hlt
xchg
cmp
and
les
or
sbb
rorl
rolb
jo
cwtl
ret
jg
inc
jle
fbstp
loop
and
xchg
xor
sub
push
mov
sbb
sbb
xor
mov
xchg
jge
movsl
push
je
xchg
mov
mov
faddl
jp
or
mov
cmp
and
dec
sbb
dec
jle
push
xchg
mov
sbb
jns
pop
mov
test
add
mov
mov
adc
loop
popa
lahf
cli
jecxz
cmc
add
popa
into
push
mov
push
dec
fmull
lahf
xor
xor
lods
pop
imul
movsl
mov
ja
lds
movsb
ret
xor
dec
inc
sub
sub
add
clc
in
subl
dec
jle
inc
push
mov
test
or
lret
shrl
mov
loopne
fldt
ficoms
inc
ds
push
sub
pop
std
arpl
lcall
stc
js
inc
dec
cld
or
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
sarl
out
push
test
xchg
add
or
mov
sub
sbb
or
sbb
mov
and
test
pop
arpl
int3
push
xor
push
cmp
roll
imul
fst
es
repnz
and
adc
cwtl
pop
stos
push
test
rcll
push
jno
pop
cmp
mov
xor
mov
fsub
jbe
dec
test
sbb
xor
imul
jge
dec
inc
adc
dec
jl
addl
cmp
fcmovnu
adc
xchg
jnp
xor
sbb
xor
imul
adc
in
cmp
mov
and
adc
es
pop
jae
inc
insl
out
pop
rorl
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
hlt
pop
sub
or
pop
cmpsb
dec
xor
testb
divl
xchg
adc
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
mov
mov
sbb
lcall
scas
mov
lea
push
lret
add
pop
mov
out
dec
xchg
pop
or
mov
orl
repnz
pop
jmp
sub
pop
fwait
enter
lods
xchg
mov
in
cmpsb
aas
stos
shrb
filds
xchg
shll
jecxz
pop
std
and
inc
fstl
pop
fprem1
jmp
pand
add
stos
in
pop
lret
fwait
adc
dec
adc
fisubl
pop
sarb
ret
jp
gs
in
call
popf
fwait
mov
imul
cmpsb
test
push
and
and
and
mov
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
xchg
std
pop
int3
push
into
shr
ret
mov
insb
xchg
push
into
push
mov
insl
mov
jne
nop
shrl
dec
popa
ret
cmp
xchg
adc
cmp
in
imul
fsubs
js
push
outsl
and
jmp
inc
or
pushf
push
xor
sub
out
jns
dec
adc
fistpl
mov
leave
jnp
or
mov
xor
sbb
leave
or
ds
push
sub
pop
std
arpl
lcall
stc
js
xchg
jns
fimull
push
mov
or
in
jg
fsubs
and
call
sbb
jg
into
add
stc
test
ret
jmp
or
and
or
mov
adc
push
adc
mov
push
jp
pop
cmc
push
sbb
idivb
lds
adc
ret
cvttps2pi
add
iret
pop
mov
xchg
fs
outsl
aaa
mov
cld
ljmp
in
frstor
fisttps
lahf
jp
leave
dec
mov
mov
lret
rcll
sbb
mov
cmpsb
xor
jb
fisttpll
cmp
lds
jp
pop
pusha
jle
das
pop
icebp
or
cmp
fwait
leave
loop
add
sub
addl
mull
lret
stc
fildll
sti
mov
push
adc
mov
daa
negl
push
sub
inc
fsubl
cmp
std
fwait
mov
mov
xor
add
test
add
fsubrs
test
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
in
jg
cmpsl
xlat
cmc
push
ret
cmp
mov
insl
aad
insl
ficomps
fildl
int3
lds
mov
mov
outsl
mov
adc
cmp
lods
imul
inc
sbb
cmpb
cmp
insb
mov
sbb
jno
lods
push
std
fsubrl
inc
lret
push
mov
sti
add
jmp
adc
mov
scas
adcb
mov
xor
cmc
xor
fiadds
or
and
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
aam
xor
imul
aaa
push
push
push
adc
test
pop
cmp
repz
sti
jge
pop
dec
divl
daa
cmc
dec
inc
test
xchg
rolb
lock
test
maxps
dec
cmp
sbb
in
jmp
test
aaa
jns
pop
push
mov
pop
fucom
cli
mov
sti
stc
cli
in
test
or
test
lcall
pop
lock
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
inc
call
pop
push
repz
fidivrs
jnp
dec
xchg
inc
pop
test
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
popf
jmp
aam
pop
add
inc
cwtl
dec
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
lds
imull
sahf
jnp
popa
mov
fwait
and
cmp
mov
or
cmp
enter
push
nop
fidivs
lds
xchg
adc
mov
sbb
lret
clc
aaa
jge
push
dec
mov
and
adc
es
pop
jae
inc
insl
out
pop
sarl
jle
ljmp
add
movsl
xor
aas
inc
iret
fs
insb
inc
sbb
mov
cmp
xor
push
in
repnz
xchg
pop
jp
pop
fwait
pop
movsb
pop
shlb
pop
xchg
pop
cmpsl
fistps
xchg
fwait
std
sbb
in
push
cli
lock
xor
out
ret
aad
shlb
add
mov
cmp
sbb
fs
inc
mov
fcomip
xor
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
mov
test
xchg
data16
inc
dec
leave
test
mov
sbb
fidivrl
sub
push
dec
fidivrs
pop
sub
adc
jl
pop
lods
out
bound
out
pop
push
pushf
pop
add
adc
inc
inc
pop
jle
nop
inc
fs
inc
dec
adc
mov
inc
insb
je
out
xor
negb
out
cmp
mov
or
jae
xor
pusha
xor
lock
adc
outsb
movsb
inc
repz
inc
dec
hlt
xor
roll
lret
cmpsb
ret
in
push
push
adc
push
adc
xchg
mov
push
xlat
dec
sub
aaa
jnp
lods
hlt
dec
popf
xor
xor
shll
pop
xchg
pushf
push
inc
jecxz
fsubl
add
mov
fcmovb
xchg
and
fldenv
xchg
add
int3
jp
test
and
inc
clc
mov
cltd
lods
xchg
mov
pop
xchg
mov
subl
roll
bound
jge
xchg
sub
clc
aam
cmp
loope
pop
xchg
mov
mov
fdiv
addl
and
sub
rol
dec
sbb
mov
pop
adc
adc
inc
push
add
and
push
sahf
inc
call
sbb
enter
cmp
mov
mov
mov
mov
dec
inc
lret
pop
ficomps
sbb
pop
add
cmpsb
push
imul
cmpl
dec
mov
scas
dec
rcr
mov
and
mov
sahf
ret
adc
enter
dec
movsl
or
sbb
fistl
sbb
and
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
mov
mov
cmp
ret
xchg
sub
and
push
cmp
in
scas
out
jp
dec
sbb
cmpsl
ret
mov
add
arpl
jecxz
sarb
add
ss
push
sarl
jg
and
xchg
dec
in
xor
mov
ds
in
and
jae
test
ret
cmpsl
jp
mov
cmp
mov
xlat
mov
hlt
std
jecxz
sbb
lds
mov
mov
cli
add
mov
xchg
inc
cltd
or
xchg
shll
mov
dec
fwait
pop
ror
adc
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
lcall
pop
lock
mov
push
iret
sbb
push
shr
inc
xchg
jae
in
mov
push
iret
mov
lgs
outsb
out
arpl
das
push
sub
or
scas
dec
sbb
lock
jl
fmul
adc
outsl
cmp
add
stc
jp
scas
scas
loope
sti
jnp
sbb
xor
mov
outsb
out
lahf
stc
cwtl
shll
or
sbb
push
data16
scas
sti
out
rolb
adcl
sub
push
sbb
dec
call
jne
pusha
add
in
and
xor
repz
adc
and
jns
pushf
rcrb
sbb
sbb
fisttpl
ficomps
cmc
mov
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
loope
lret
movb
vplzcntd
push
stos
fs
xchg
fimull
pop
sub
mov
jecxz
mov
das
mov
in
cmpsb
aas
stos
shrb
or
gs
dec
pop
bound
add
ja
dec
dec
daa
add
sbb
adc
xchg
pop
and
je
mov
cmpsl
adc
pop
sub
je
pop
lods
addr16
add
mov
add
mov
cwtl
inc
data16
add
add
subb
cs
lock
dec
jg
add
outsl
andb
or
faddp
pop
ret
pop
pop
adc
lea
pop
mov
jmp
pop
rcl
loop
mov
les
inc
icebp
xchg
add
lds
jne
dec
imul
xchg
adc
imul
sti
repnz
lods
jp
jmp
cmpl
mov
stos
test
ret
and
lds
fcom
dec
sub
insl
mov
leave
jnp
pop
cld
sub
adc
imull
add
cmp
std
cli
jnp
inc
mov
cwtl
add
cmp
xchg
xchg
pop
inc
mov
inc
cwtl
dec
push
sbb
mov
fistpll
mov
xchg
mov
test
inc
orl
xchg
in
loopne
pop
or
and
push
mov
jo
jl
pop
push
mov
dec
test
sub
sub
sti
stos
shl
mov
popa
popa
push
test
sahf
fwait
bound
data16
sub
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
stos
add
leave
sarb
cmp
lret
jns
lds
nop
lds
mov
fldenv
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
inc
dec
aad
pop
cltd
enter
in
out
int3
mov
in
scas
aas
test
xchg
jmp
push
out
jno
xchg
mov
cwtl
das
push
sub
fdivl
or
add
dec
iret
shl
negl
imul
adc
shll
mov
hlt
test
pop
add
cmp
into
sub
repz
loopne
hlt
mov
xchg
mov
add
orl
sub
adc
dec
sbbb
xor
push
repnz
and
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
push
cmpb
sub
sahf
imul
jns
loope
sub
add
push
adc
jp
pop
xchg
addb
mov
insl
outsb
pop
cltd
enter
sub
xchg
push
shrb
xor
xchg
sub
pop
mov
adc
repz
xchg
mull
cmc
push
sbb
in
adc
mov
mov
in
push
aam
ret
inc
jge
imul
stos
cmp
sti
inc
jne
insl
add
test
add
sbb
add
andb
js
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
ret
pushl
pop
rcl
loop
mov
int3
mov
pushf
lock
mov
pop
mov
or
adc
outsl
movsl
xor
lret
scas
addr16
imul
xchg
or
inc
jge
shlb
aam
adc
lock
or
and
cmp
insl
dec
xor
pop
push
dec
mov
stos
movsl
pop
jno
lds
pop
add
sbb
lahf
xchg
fsts
mov
dec
mov
sbbl
xchg
pop
adc
add
and
mov
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
int3
sub
sbb
pop
popf
sar
stos
test
imul
mov
push
xchg
bound
pop
adc
mov
dec
clc
xor
or
loopne
lahf
loop
sub
push
xor
or
dec
xchg
mov
test
ds
imul
mov
aam
mov
xchg
push
negl
in
lods
mov
fldenv
cmpl
xchg
stc
cli
in
test
or
test
jp
sbb
cmpsb
sub
mov
mov
dec
loopne
subl
mov
adc
cltd
dec
bound
sub
outsl
jno
xchg
mov
fdiv
lcall
adc
or
into
iret
cmp
cs
push
pmuludq
out
inc
and
enter
pop
jae
inc
and
cmpb
xchg
fisttpll
add
out
int3
add
lea
popa
sbb
xchg
js
cld
or
lea
cmp
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
jecxz
inc
dec
mov
cli
ret
mov
xchg
ja
ja
icebp
ret
leave
pop
movsb
mov
pushf
inc
nop
sarl
lods
clc
inc
mov
out
lahf
movsb
leave
pop
subb
mov
push
sahf
jle
and
inc
and
mov
in
xchg
push
and
test
sub
outsl
xchg
testb
mov
or
adc
jns
out
js
pop
fimuls
or
or
jns
mov
mov
cmp
jp
xchg
adc
sbb
xchg
xchg
jg
fsub
xchg
xchg
test
pop
push
loop
jmp
lea
mov
push
call
xlat
sbb
and
test
sbb
shrb
cmp
mov
mov
out
mov
mov
mov
das
mov
lret
repz
jl
mov
roll
inc
mov
out
inc
mov
and
mov
dec
dec
xchg
jle
add
mov
dec
lods
jg
leave
gs
mov
cld
mov
mov
xchg
fcmovnu
mov
idivl
fs
xchg
daa
push
push
jl
lret
rcrl
mov
push
pop
mov
leave
xchg
sar
cmp
add
cmp
lds
fsub
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
in
xor
jnp
mov
nop
ljmp
xchg
movsl
dec
hlt
ja
std
sbb
bound
jecxz
jns
ret
push
cmpsl
inc
lret
xchg
scas
sbb
in
jp
cmpsb
bound
or
iret
repnz
jmp
iret
movsl
mov
cmp
xor
push
in
nop
shll
fucom
cli
xor
roll
inc
test
lods
mov
cmp
and
sbb
lock
inc
adc
pop
adc
sbb
rorb
cwtl
ret
push
jnp
fistl
lret
lds
push
jns
sahf
cli
mov
cmp
iret
pop
mov
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
cmp
ret
int
lcall
cmp
stos
in
mov
jb
aaa
insb
into
or
xor
pop
rcll
push
pop
xor
cmp
inc
or
jmp
cmp
das
push
jmp
add
mov
xor
xor
jp
in
outsl
inc
call
movsb
test
add
jp
fidivrs
jnp
lcall
dec
std
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
sub
sahf
inc
sub
xor
push
repnz
and
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
imul
leave
fsubrl
ljmp
mov
jnp,pt
repnz
mov
stc
push
mov
sbb
insb
scas
stc
ret
xchg
pop
in
dec
cli
xchg
dec
les
dec
dec
fsubl
ja
in
xor
shlb
sub
bound
movsl
mov
cltd
sub
dec
push
adcl
movsb
fstl
fdivrl
cltd
jg
xor
sbb
add
popa
or
inc
add
subl
dec
std
adc
les
inc
dec
cld
or
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
loop
and
daa
pop
repz
out
sarl
out
int3
push
sub
nop
sbb
adc
pop
idivl
imul
or
arpl
call
or
cmc
push
pop
add
inc
ror
push
cmp
rcrl
cmpb
rolb
xchg
ret
add
sbb
ljmp
in
fisttpll
frstor
mov
xchg
jp
jmp
dec
mov
lret
rcll
adc
mov
adcl
jbe
sub
sub
in
ret
dec
mov
and
aad
bound
int
cld
jb
scas
repz
cmp
jl
xor
hlt
jbe
aas
dec
fsubl
adc
movsb
scas
loop
xor
dec
jae
fdivrp
xor
sub
pusha
mull
jo
repnz
leave
jno
popf
push
sbb
lea
xchg
sti
gs
negl
dec
mov
sbb
pop
shrl
loopne
jne
dec
mov
mov
add
push
stc
push
mov
fwait
jne
or
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
fs
orb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
xchg
and
cmp
dec
dec
dec
cmpsb
lds
sbb
mov
push
loopne
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
cmp
stos
mov
mov
add
jo
push
inc
mov
add
inc
push
sbb
cmc
mov
dec
lret
leave
lock
sbb
shrb
out
inc
sbbl
cmpsl
push
into
fnclex
pop
test
fidivl
ret
cltd
pop
mov
es
aaa
stos
lock
pop
cli
sub
pop
inc
aam
dec
sbb
xor
pop
jp
pushf
movsl
iret
xor
lcall
cmp
adc
mov
adcl
jbe
sub
sub
add
enter
rcrb
pop
or
jnp
pop
mov
push
pop
rorl
add
aas
add
push
cmp
jecxz
scas
rcrb
outsl
outsl
xlat
icebp
lods
fists
lods
push
jae
mov
cs
jae
popf
xor
inc
lods
fnstenv
xor
xor
iret
addr16
sub
or
imul
imul
test
and
int
ret
or
ror
arpl
fwait
jmp
pop
cltd
imul
repz
mov
repz
std
popa
int
inc
fcomi
imul
in
and
mov
movsb
mov
outsb
xor
and
xor
dec
sbb
fnstsw
pop
mov
cmc
mov
mov
in
fildll
inc
shrl
dec
sub
sub
mov
xorl
popa
mov
push
jnp
rep
ljmp
push
js
xchg
xor
fwait
leave
movsb
mov
sbb
fisttpl
or
sub
icebp
jmp
cmpsl
ficoms
outsb
cmp
inc
mov
mov
jge
dec
push
enter
dec
inc
rolb
cltd
js
enter
xchg
lea
xor
mov
mov
mov
test
jae
push
xchg
ror
xor
sarb
inc
inc
dec
pop
mov
jl
fbstp
dec
sbb
push
ret
mov
inc
call
mov
add
adc
ret
ret
sbb
inc
ds
imul
sbbl
mov
jb
pop
push
bound
push
test
mov
bound
jnp
adc
bound
test
pop
sbb
cmpsb
sub
mov
adc
mov
leave
ljmp
jae
in
mov
scas
shrb
mov
mov
test
mov
pop
xchg
mulb
fldcw
push
fisubrl
xchg
and
ror
ret
adc
pop
call
sbb
lock
call
lods
cmp
or
and
mov
pop
rcr
aaa
adc
sbb
test
cmpl
icebp
imul
pop
add
mov
dec
pop
ret
fs
fwait
aaa
ja
xchg
jbe
mov
ret
call
sti
arpl
adc
out
in
jecxz
icebp
out
mov
aaa
pop
dec
inc
ret
pop
ficomps
adc
and
push
push
adc
mov
xchg
mov
stos
fwait
push
into
push
daa
jae
xchg
jmp
pop
rorb
enter
test
mov
faddl
mov
vfrczss
adc
pop
add
push
and
xchg
fdivl
adcb
lahf
orl
mov
dec
sarb
rorb
cmpsl
or
repnz
or
jl
push
mov
stos
sub
cmpsb
call
pop
jae
gs
cltd
pop
adc
xor
cmpb
add
cmpb
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
inc
pop
mov
or
aas
iret
fucomip
test
mov
lock
pop
lret
cmp
cmc
mov
bound
jl
add
xor
fsubrl
inc
push
push
lds
insl
lods
into
mov
pop
push
ljmp
xchg
xor
lret
push
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
sbb
or
movsl
mov
cld
jp
add
cmp
lds
pop
out
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
adc
sub
add
cmc
test
xchg
loopne
stos
inc
movsl
pushf
out
jbe
jg
dec
push
cmc
daa
testl
lods
clc
adc
fwait
mov
movsl
jmp
xchg
mov
xor
out
es
mov
push
loop
xchg
ds
push
dec
mov
popf
negl
mov
mov
mov
test
add
in
mov
imul
test
jo
lock
insl
leave
cmc
cld
or
jmp
pop
mov
data16
dec
pop
imul
loop
lret
dec
popa
ljmp
push
cmp
ja
inc
outsl
inc
ds
movsb
ret
negl
jp
rolb
cli
lret
rcrb
mov
push
popa
dec
leave
mov
nop
sbb
ja
jbe
xor
xor
jae
ss
or
repnz
xchg
jo
rcl
mov
aam
clc
xor
mov
adc
and
leave
stc
mov
movsl
inc
push
mov
or
in
jg
fsubs
and
call
sbb
jg
into
add
les
cmp
mov
and
push
decb
push
lods
call
in
lahf
push
pop
mov
popa
push
xchg
sarl
lock
lods
xor
or
pop
lret
or
add
lock
add
mov
cmc
sub
mov
cli
jp
inc
push
pushf
cmpb
adc
inc
in
xlat
mov
fldenv
testl
loope
lret
movb
xor
xchg
adc
adc
xchg
jnp
imul
data16
rol
lret
jb
pop
push
aam
int3
push
cmp
sub
pusha
mov
adc
fisubs
imull
loop
cld
jno
add
ret
jg
out
add
or
and
ja
pop
arpl
dec
mov
mov
sbb
mov
into
call
inc
cmp
jne
cltd
push
loopne
adc
inc
inc
mov
out
push
and
or
cmp
pop
out
arpl
arpl
jmp
stc
jae
inc
ret
rolb
jecxz
imul
into
rorl
cmc
lahf
push
sti
cmpl
ret
dec
jbe
xchg
test
and
pop
pop
pop
sbb
or
cmpsl
loope
lret
cmp
xlat
enter
sub
pop
jo
rorl
ret
xor
jbe
scas
jecxz
pop
lock
jl
rcll
pushf
adc
push
or
sahf
inc
jb
jle
mov
std
cli
jnp
inc
mov
add
adc
bound
pop
repnz
mov
negb
ret
push
jae
jp
xor
test
jge
ljmp
cmpsl
aaa
arpl
sbb
and
sbb
add
inc
dec
es
test
insl
lea
int
inc
stos
repz
mov
adc
movb
and
sub
cmp
sarl
or
and
inc
sub
jo
xchg
mov
test
push
call
xor
sub
push
test
mov
mov
ljmp
xchg
cmp
jns
lcall
add
jo
test
xchg
fcmovne
aad
adc
sub
pushf
shr
rcrl
inc
xor
mov
mov
sti
cmpsl
js
inc
mov
pop
jb
add
add
or
por
inc
dec
mov
scas
mov
jp
mov
out
hlt
xor
sub
cmp
cmp
ret
cmpsb
ret
fldcw
cmpsb
pop
es
pmulhw
test
mov
dec
jmp
push
mov
mov
clc
lcall
in
test
arpl
call
add
and
sub
xchg
cli
lock
xor
out
ret
aad
shlb
add
mov
cmp
sbb
fs
add
test
repnz
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
mov
pop
cltd
xchg
inc
dec
inc
jne
dec
inc
popf
aas
stos
shrb
push
xchg
xlat
dec
les
test
ljmp
mov
enter
mov
les
jg
xchg
push
mov
xchg
test
mov
inc
ljmp
mov
enter
enter
gs
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
inc
pop
mov
or
aas
iret
fucomip
test
sti
mov
jb
jae,pn
cld
inc
and
xor
or
inc
lds
outsl
cmpsl
arpl
aad
dec
adc
mov
sti
sahf
sbb
nop
sbb
ljmp
lret
into
jo
fnstenv
or
mov
jl
sbb
pop
rcl
mov
cmpsb
xor
jb
fisttpll
cmp
lds
pushf
jecxz
pusha
jle
das
pop
icebp
or
cmp
fcmovne
loop
addl
mov
addb
mov
shrb
pop
sub
mov
xchg
mov
out
ja
popf
cli
push
pushf
scas
jmp
out
mov
push
dec
add
fwait
out
xchg
mov
xchg
imul
mov
xchg
xor
int
out
mov
mov
js
mov
bound
pop
sbb
push
adc
mov
scas
push
iret
adc
pop
popf
subl
mov
cmp
out
inc
sbb
cmpsl
push
icebp
nop
add
movsb
insb
push
sub
push
mov
insl
aad
insl
and
mov
popa
lods
fldt
ljmp
push
bound
push
push
bound
sbb
push
ret
sbb
mov
fisubrl
lcall
pop
push
inc
pop
dec
out
js
orl
push
in
cmpsb
bound
fsubr
btr
addr16
dec
lds
bound
fldcw
jl
or
xor
cmp
jl
leave
repz
mov
dec
lcall
int3
pop
test
movsb
fidivl
pop
push
sub
inc
fsubr
inc
cmp
std
fwait
mov
mov
xor
add
test
add
fsubrs
test
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
cld
push
ret
mov
insl
mov
cmc
fcoml
and
push
dec
xor
xor
inc
mov
sub
push
pop
lret
pop
mov
aad
mov
xchg
mov
out
aad
movsl
dec
test
or
lea
mov
adc
adc
adc
mov
imul
loope
lds
mov
ss
mov
xorl
mov
fwait
push
dec
mov
and
adc
and
pop
jae
inc
insl
out
pop
aad
jns
mov
call
sub
jge
pop
lods
test
sbb
xor
or
add
lock
or
add
mov
sub
or
dec
js
mov
bound
dec
cmp
push
mov
cld
mov
sbb
xchg
xchg
adc
pop
add
mov
roll
aam
sub
mov
xchg
data16
push
or
mov
xor
scas
popa
inc
mov
and
push
inc
bound
mov
jno
push
in
movsb
mov
daa
cwtl
add
js
adc
lock
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
and
cmp
cwtl
add
cmp
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
cmpsb
sti
xlat
in
jns
fisttpll
icebp
cwtl
ret
data16
mov
add
xchg
imul
ja
and
or
inc
rolb
or
fsts
xchg
push
mov
pop
loopne
mov
cmp
or
mov
in
inc
rcrl
add
ljmp
or
int
nop
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
loope
lret
movb
stos
sub
adc
adc
xchg
jnp
imul
data16
and
int
jae
cmp
sbb
loopne
sbb
mov
fs
data16
leave
loop
loop
cld
shrb
ds
scas
dec
repz
ljmp
add
js
fnstenv
adc
mov
pop
push
mov
cmpsl
test
aas
xchg
xor
jne
cltd
cmpsl
inc
popf
cmp
enter
stc
inc
pushf
cmp
mov
adc
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
or
cmp
or
mov
into
push
fcmovu
test
xor
ret
mov
inc
lods
mov
push
pop
adc
inc
aas
lea
jns
loope
pop
lods
push
outsl
and
or
je
sub
out
fldcw
dec
xorl
mov
test
adc
test
push
repz
loop
in
jns
rcrl
scas
cs
and
jp
jo
imul
insb
push
jno
mov
sub
aam
sbb
dec
mov
repz
mov
cld
ljmp
push
push
pop
mov
cmp
add
movsb
popf
xchg
mov
cmp
mov
sub
mov
iret
add
mov
xchg
mov
inc
outsl
js
sbb
cmpsl
jb
cwtl
jle
sbb
es
test
sub
mov
outsb
xor
and
xor
jno
pop
cmp
push
and
adc
inc
cmp
xor
dec
inc
sub
sub
or
je
sbb
mov
dec
xchg
jmp
lret
sbb
insl
and
inc
pop
inc
jle
mov
std
pop
dec
test
xor
dec
cld
loop
mul
or
inc
fucom
or
push
xchg
add
cmp
jb
xchg
out
cmpsl
icebp
xchg
cwtl
inc
stos
adc
pop
aam
mov
lret
in
mov
mov
or
pop
fsubl
stos
inc
mov
cmpb
xor
loopne
imul
jg
clc
pop
push
aas
es
mov
lahf
aam
inc
pushf
pop
mov
call
fnsave
outsl
and
add
mov
and
daa
add
test
loopne
int
jmp
popf
pop
push
scas
arpl
jle
add
mov
dec
test
repz
clc
sub
jne
mov
fbld
orl
iret
pop
test
rcr
xchg
mov
les
cld
xor
and
fisubl
pop
add
sar
cmp
add
cmp
lds
cmp
pop
pusha
jle
das
pop
icebp
or
cmp
andl
mov
push
test
pop
jle
inc
sbb
pop
shrb
cmp
idivb
pushf
ljmp
out
jno
sbb
scas
lahf
push
int
xchg
mov
or
fidivrs
sahf
lret
xchg
lock
call
loope
lahf
stc
cwtl
shrl
pop
xchg
orb
mov
cmp
test
repz
mov
adc
and
test
arpl
call
int
push
pusha
lods
in
xor
leave
pop
ret
push
sub
or
sbb
add
insl
cltd
mov
popf
push
mov
push
outsl
sub
repz
push
mov
xor
push
mov
movsl
int
pop
jecxz
cmp
fidivs
ljmp
dec
fsubl
clc
in
es
shlb
jns
inc
mov
cmpsb
sub
dec
lds
mov
in
int3
mov
rcll
fisttps
in
or
mov
out
in
xor
jnp
mov
nop
ljmp
sub
shl
ja
xor
cmc
adc
xchg
cmpsb
xchg
push
mov
fsubp
movl
jns
popf
jae
into
adcb
xchg
sbb
arpl
shl
mov
pop
dec
inc
dec
fmull
pop
ds
xor
adc
inc
mov
sbb
inc
mov
pop
inc
inc
dec
push
daa
jb
inc
inc
lods
enter
push
mov
hlt
mov
mov
aad
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
xchg
fbstp
mov
mov
cmp
sbb
outsb
or
cmp
ret
int
lcall
cmp
dec
in
mov
sahf
mull
push
sub
and
scas
es
fwait
jmp
repz
bnd
outsb
or
test
sbb
lret
jl
das
inc
iret
shl
aaa
mov
addr16
out
divb
fdivrp
pop
xchg
push
mov
fsubl
jne
stc
lcall
mov
pop
add
dec
xchg
mov
stc
and
sbb
pop
mov
mov
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
jecxz
shll
inc
sti
jecxz
sbb
sbb
ja
mov
fldcw
lcall
fistps
jmp
pop
shl
jnp
lahf
fists
or
xchg
sub
mov
jno
in
inc
testl
push
push
iret
mov
pop
mov
jbe
test
arpl
ficoms
inc
popf
scas
jne
mov
enter
mov
cmp
cltd
cmpb
sbb
lret
jmp
scas
mov
nop
arpl
jnp
and
jnp
out
scas
inc
leave
xchg
xor
xor
jns
sbb
lcall
cli
pusha
and
push
andl
test
xlat
loop
xor
rcll
test
and
sub
lods
in
xor
leave
pop
ret
push
mov
sbb
xlat
inc
aad
inc
mul
cmp
xorl
fdivrs
xchg
addr16
mov
and
loope
jne
mov
and
in
lret
cmp
subb
pop
imul
mov
shrl
shlb
jnp
imul
sub
test
mov
jb
pop
adc
xchg
aam
jno
in
mov
imul
addr16
lods
movsb
push
xchg
inc
mov
jge
popa
mov
cmp
xchg
xchg
jg
sub
lret
xchg
lcall
push
jmp
fnstsw
xchg
ds
mov
add
dec
std
bound
jno
adc
test
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
inc
and
test
cmp
dec
or
and
movsl
or
sbb
adcb
cmpsb
ret
subb
scas
arpl
mov
ja
lds
push
xor
jbe
jmp
mov
inc
inc
es
push
sbb
sbb
or
test
mov
cmp
pop
lahf
jbe
test
adc
pusha
fidivrl
in
cmpsb
aas
stos
shrb
mov
scas
bound
add
popa
mov
enter
int3
xchg
es
cmpsb
sub
push
inc
hlt
sbb
bound
jecxz
jns
ret
push
cmpsl
loop
jp
fdivrp
fsubrp
repz
dec
mov
into
add
popf
and
cmp
roll
movl
ficoms
mov
test
mov
push
test
movsl
popf
mov
and
out
divb
xor
xor
mov
scas
mov
sbb
sbb
xor
dec
popl
outsl
test
sub
shl
fldt
fnsave
jg
mov
pop
in
nop
and
les
sbb
sub
mov
pusha
in
movsl
dec
push
test
xor
test
ret
push
rorb
push
fisttpl
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
cmp
pop
mov
rorl
scas
push
repz
imul
scas
push
push
cmpsl
out
arpl
scas
mov
inc
call
pcmpeqd
ja
inc
test
daa
dec
leave
movsl
jno
pop
cs
jne
mov
xor
mov
xor
test
mov
inc
push
ja
or
sub
adc
rcrl
ret
and
in
xchg
pop
xchg
fcomps
mov
addr16
add
iret
loopne
test
jl
mov
hlt
push
aas
mov
xor
outsl
mov
xor
insb
xor
lret
mov
in
addr16
lea
push
ss
int
inc
jno
pop
cmp
into
ret
sbb
dec
xor
sub
mov
fmul
xor
push
ret
and
add
and
shl
push
mov
scas
push
and
sub
mov
lret
mov
mov
pop
dec
push
dec
cmp
or
pop
pop
xor
fadds
or
or
dec
jae
xor
jns
dec
mov
adc
inc
enter
sub
jae
loope
pop
fdivrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
pop
adc
mov
mov
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
mov
sbb
loop
mov
and
xor
dec
movsl
arpl
pop
cmp
dec
and
adc
inc
cmp
dec
movsb
jecxz
arpl
cwtl
adc
jg
shlb
jns
inc
mov
test
mov
rolb
jb
lods
xchg
cmpl
jnp
stos
push
xchg
push
pop
mov
and
int
and
push
stc
and
rorl
jb
mov
stc
xor
or
cmp
jmp
or
jnp
testb
fucomi
hlt
std
mov
sti
and
aas
lahf
es
jns
sbb
fdivs
mov
imul
inc
icebp
inc
pop
sbb
and
rdmsr
dec
mov
loop
int3
pusha
adc
pop
jecxz
mov
loop
sbb
daa
xor
enter
mov
sbb
mov
fdiv
divb
fst
fildll
aad
test
mov
pop
cmp
flds
adc
dec
jmp
lds
pop
adc
jl
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
ret
cmpsl
ficoms
hlt
ja
std
outsl
addr16
call
xor
cmp
jle
mov
clc
mov
sub
xor
mov
push
pushf
add
jmp
add
loope
or
enter
adc
test
lea
ss
xor
jne
movsl
in
and
iret
push
insb
loopne
test
add
pushf
shll
je
lock
dec
jecxz
dec
sbb
ret
test
pop
and
gs
sub
adc
fldenv
sarl
lahf
sbb
stc
inc
jae
xor
mov
pop
outsl
loope
mov
dec
xor
push
outsl
pop
push
loope
test
enter
lods
xchg
das
cmpsb
repz
insb
test
scas
shrb
lret
jno
das
jno
insb
loop
mov
scas
add
ret
jg
out
add
lret
jl
das
inc
iret
shl
aaa
jge
pushf
inc
and
divb
aas
xor
xchg
ret
fdivrp
pop
pop
iret
rorl
adc
call
in
enter
loopne
hlt
mov
xchg
mov
add
orl
sub
adc
dec
sbbb
add
cwtl
dec
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
lret
lds
imull
sahf
jnp
popa
mov
enter
cmp
dec
dec
lret
movsw
cwtl
push
push
push
fsts
inc
dec
push
jno
popa
cmpl
repnz
jg
mov
mov
in
sbb
add
or
decb
std
mov
mov
jnp
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
xor
cmp
mov
int3
pop
insl
loopne
jecxz
mov
and
inc
rclb
faddp
xchg
push
mov
mov
bound
test
int
mov
arpl
cwtl
add
test
mov
or
xor
cmc
cmpsb
leave
push
out
inc
mov
and
dec
mov
insb
sub
pop
leave
test
jns
popa
ret
xchg
jmp
jnp
inc
das
and
dec
and
xchg
cmp
pusha
std
mov
jmp
and
push
roll
push
push
xor
mov
or
sbb
lods
jge
lds
jge
pop
xor
mov
mov
cmp
js
inc
mov
pop
jb
add
inc
pop
or
jmp
imul
ds
je
out
pop
int
inc
cmpsl
pop
jns
mov
xor
movl
call
imul
adc
nop
lea
mov
lret
insl
or
ljmp
push
mov
aam
push
dec
add
mov
cmp
jp
add
add
mov
sbb
pusha
cltd
orb
xor
mov
pushf
dec
and
inc
xor
cwtl
shrl
rclb
jg
inc
out
sti
jp
into
or
adc
and
inc
pop
shl
movsl
push
adcb
lock
add
jge
sub
fwait
xchg
fcoms
pushf
sub
or
cmpsl
push
pop
jno
in
lds
js
inc
mov
jne
mov
cmp
mov
and
adc
mov
inc
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
mov
test
jle
nop
lds
dec
dec
adc
mov
bound
lret
arpl
popf
jo
push
sbb
push
xor
pop
loop
mov
out
inc
adc
cmpsl
push
icebp
nop
movsl
iret
movsl
mov
fmul
or
adc
enter
xchg
jne
mov
mov
mov
fildll
inc
mov
inc
out
lret
push
mov
push
push
jnp
pop
lock
and
test
test
xchg
fnsave
add
push
adc
mov
scas
adcb
mov
xor
cmc
xor
sti
inc
mov
inc
mov
cmc
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
xor
cmp
mov
int3
pop
insl
loopne
jecxz
mov
aaa
pop
loope
cmpsb
dec
nop
cs
mov
nop
add
sbb
push
xchg
cltd
popa
push
call
or
and
shr
xor
add
fildll
push
cmp
insl
out
inc
mov
and
dec
pop
xchg
jmp
mov
xchg
scas
stos
cmp
int3
dec
pop
fwait
mov
movsl
int
sbb
fidivrl
aad
fisttps
or
in
dec
and
or
mov
cmpsb
sub
sbb
xchg
int
xor
jb
fisttpll
cmp
lds
sbb
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
inc
pushf
out
es
jae
pushf
sub
call
lret
pop
jmp
fisttpll
jg
lahf
dec
xchg
clc
lahf
stc
cwtl
shll
aaa
imul
lock
or
movsb
jo
or
andb
nop
and
mov
rcll
add
and
push
inc
push
pop
push
test
fwait
inc
test
cltd
adc
sbb
push
stos
add
sub
mov
lock
dec
and
add
jbe
lea
dec
test
rorb
ss
xchg
scas
lods
pop
imul
scas
mov
fst
loopne
pop
fcomip
xor
and
rolb
stos
inc
repnz
jns
mov
push
popa
dec
leave
test
adc
jle
les
jecxz
stos
pusha
jmp
mov
bnd
sub
jecxz
add
pop
out
ret
inc
mov
aad
iret
jge
inc
das
inc
jbe
test
inc
cwtl
mov
nop
loopne
jp
pop
adc
pop
out
cmp
mov
inc
js
mov
jmp
les
mov
lea
test
jecxz
shll
cmp
popa
push
test
sahf
fisubs
loopne
cld
cmp
jmp
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
testl
cmp
push
fcompl
jne
jns
lds
nop
lds
mov
fldenv
testl
shll
in
dec
gs
jno
push
shll
push
push
xchg
aam
xor
dec
popa
push
in
ja
call
pop
les
sub
adc
aaa
jecxz
scas
add
jns
loop
dec
movsb
jecxz
mov
add
arpl
testl
push
in
imul
adc
iret
subl
pop
fdivrs
jnp
int3
jno
cltd
push
adc
mov
je
sbb
add
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
jecxz
inc
dec
mov
cli
ret
mov
xchg
ja
ja
icebp
ret
leave
pop
movsb
mov
pushf
inc
nop
sarl
lods
clc
inc
mov
out
push
lahf
stos
sub
clc
pop
frstor
imul
in
stc
dec
data16
aaa
stc
or
icebp
push
push
pop
jnp
or
mov
add
push
test
or
stos
xor
xor
mov
bound
inc
cld
loop
in
nop
xchg
lahf
push
cwtl
lock
mov
dec
popl
mov
push
xchg
dec
mov
push
lods
shrb
fnstcw
out
mov
sub
adc
jnp
sahf
lods
xchg
loope
inc
daa
out
mov
xchg
lret
xchg
repz
jle
nop
mov
pop
xor
xchg
mov
cmp
dec
lret
std
aaa
fldenv
movsl
repz
jne
les
cmpl
sbb
imul
pop
adc
mov
add
ret
pop
mov
mov
sbb
nop
push
lcall
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
pop
dec
push
add
shl
je
sub
out
fldcw
out
dec
push
mov
mov
cltd
jb
sahf
pop
mov
cmpxchg
out
test
and
clc
icebp
jle
scas
leave
test
cltd
scas
push
pushf
add
popl
mov
ds
je
out
dec
mov
jmp
inc
mov
xlat
repz
mov
jge
and
fisubs
pusha
and
rorb
jmp
dec
mov
adc
jnp
jle
push
lcall
gs
std
aaa
jp
movsl
repz
jne
les
cmpl
sbb
imul
pop
adc
mov
jg
aad
pushf
ret
pop
mov
mov
sbb
lcall
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
pop
dec
push
add
shl
je
sub
out
fldcw
out
dec
push
mov
mov
cltd
jb
sahf
pop
mov
cmpxchg
out
test
and
clc
icebp
jle
scas
leave
test
cltd
scas
push
pushf
add
popl
mov
ds
je
out
dec
mov
jmp
inc
mov
xlat
repz
mov
jge
outsl
pop
lret
dec
std
bound
popa
nop
negb
pop
insb
push
inc
inc
mov
fwait
mov
loop
cmc
mov
lea
mov
adc
mov
les
cmp
mov
cwtl
mov
xor
leave
add
mov
or
mov
fcomp
xor
cmp
jge
jge
adc
ret
scas
gs
mov
sub
mov
call
push
xlat
sub
jbe
pop
mov
dec
adc
jg
shl
je
sub
out
fistpl
dec
jno
enter
lods
mov
xorl
push
popa
outsl
aaa
popf
adc
pop
sbb
push
xchg
inc
mov
dec
ljmp
mov
lock
lods
adc
call
les
movb
inc
test
daa
dec
out
jno
pop
add
lcall
aam
and
scas
xchg
and
fdivs
nop
test
pop
mov
insl
mov
pusha
pop
push
test
sbb
stos
cmp
ss
and
shlb
pop
adc
mov
fistl
xor
sbb
test
lcall
daa
and
iret
mov
sbb
and
nop
push
lcall
scas
cmp
mov
out
stos
sbb
movsb
pop
imul
lods
push
fmuls
xchg
test
push
push
dec
sub
stos
les
shlb
push
xchg
push
dec
insl
dec
lret
outsl
fistl
xlat
jg
pushl
jns
scas
inc
fwait
movsb
push
sti
and
xlat
adc
adc
lret
adc
iret
lock
cmp
hlt
jbe
mov
xchg
dec
pushf
inc
and
mov
xor
fidivrs
fisubrs
adc
jle
fisttps
clc
scas
push
jo
stos
loope
lea
repnz
leave
inc
aam
fisttpl
movsb
popf
xchg
and
mov
dec
mov
push
test
xchg
jno
pop
mov
or
jno
adc
dec
popa
repz
and
test
sbb
decb
sbb
es
push
fldlg2
and
adc
inc
idivb
xor
sbb
sbb
add
mov
test
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
xor
inc
xchg
or
push
cli
cmp
stos
xor
xor
mov
bound
inc
cld
loop
in
nop
xchg
lahf
push
cwtl
lock
aas
xchg
dec
in
rcl
cmpsl
mov
sbb
or
test
hlt
je
lods
outsl
jae
fdivrp
xor
lahf
adc
cld
lods
jnp
outsb
repz
cwtl
add
test
or
fsubr
and
nop
add
dec
adc
pop
sbb
jo
out
jp
and
pop
push
mov
repz
jge
icebp
fwait
lahf
mov
jns
pushf
rcrl
sub
addl
push
adc
mov
sbb
pop
xchg
sbb
divb
jne
pop
sub
cmp
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
add
pop
dec
orl
xchg
into
imul
push
das
cmpsl
int3
push
mov
mov
mov
mov
mov
jne
sahf
fidivrs
out
mov
jg
out
daa
dec
lock
jge
inc
iret
ror
jg
scas
dec
cmc
shld
pop
xor
jle
mov
xlat
repz
mov
int3
pop
into
aaa
in
enter
sub
addb
ficoml
popa
dec
sbb
in
dec
popa
pop
sub
mov
les
jns
pop
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
push
xchg
mov
cmpsb
rol
mov
lret
push
inc
push
push
dec
inc
bound
pushf
jle
jmp
movb
mov
pop
cmpsl
fxch
push
lret
pop
cmpsl
cltd
adc
les
adc
lock
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
and
cmp
cwtl
add
cmp
xchg
xchg
pop
inc
mov
scas
out
mov
push
jno
dec
cli
inc
test
shll
in
fmull
mov
sbb
divl
pop
subb
and
and
mov
neg
push
popf
test
aam
mov
cmp
decl
add
inc
sbb
dec
jecxz
movsl
mov
mov
sub
pushf
ret
pop
mov
pop
adc
inc
jg
adc
test
push
jnp
mov
sbb
scas
mov
push
loop
xor
sahf
pop
xchg
iret
loope
pop
ret
adc
pop
shll
push
jg
shl
je
sub
in
stos
xchg
mov
scas
push
and
sub
es
test
sbb
clc
xchg
jmp
in
ffree
popa
jae
repz
scas
jecxz
cmove
jp
xchg
adc
test
arpl
xchg
xchg
jg
fsub
xchg
xchg
test
pop
push
loop
jmp
lea
mov
push
call
sbb
and
test
pop
gs
xchg
push
hlt
mov
fimuls
cmp
lods
into
pop
stos
movsb
xchg
mov
push
pop
push
outsl
xlat
jnp
out
mov
lds
mov
xchg
dec
or
js
push
mov
xor
sti
ret
inc
inc
xchg
mov
push
pop
push
into
push
mov
insl
inc
push
mov
out
mov
sti
dec
lods
into
add
adc
hlt
add
imul
cs
or
push
stos
sti
loop
arpl
pop
and
add
pop
sbb
arpl
jmp
mov
call
pop
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
sti
mov
mov
push
mov
add
jmp
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
jecxz
lea
and
andl
fwait
ror
xchg
rolb
jb
inc
inc
pusha
ds
out
inc
xchg
jp
call
into
inc
xchg
sub
idivb
rol
leave
and
shlb
fsts
inc
pop
sbb
insl
movsl
mov
jg
adc
mov
adc
sbb
mov
sub
sbb
jae
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
cmp
pop
mov
rorl
dec
push
add
leave
lock
jl
outsl
das
sub
lock
inc
in
outsl
outsl
mov
stos
cmpl
lcall
test
inc
cmpl
cmpsl
ret
js
adc
add
mov
lods
mov
and
dec
cmpb
mov
test
fistl
inc
mov
fstps
cld
add
adc
fwait
js
sbb
mov
adc
inc
ret
sbb
xor
mov
pop
leave
jae
pop
jbe
mov
add
test
mov
leave
mov
xchg
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
add
movl
stos
xchg
mov
scas
push
jnp
push
lods
scas
das
test
in
mov
mov
sti
jmp
xchg
jecxz
movsb
mov
jle
jno
sub
nop
lcall
data16
xchg
stc
dec
cmp
adc
or
cmp
mov
ret
mov
fcmovu
sti
sti
and
test
mov
xchg
push
hlt
mov
fimuls
cmp
lods
into
pop
stos
movsb
lcall
push
pop
push
outsl
xlat
test
mov
push
mov
pusha
test
inc
inc
cld
push
dec
xchg
dec
vcvttss2si
outsb
mov
push
xchg
cmpl
dec
adc
xor
test
jnp
and
out
lods
jmp
into
and
movb
cmpsl
je
or
or
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
loop
xchg
subl
inc
sbb
lret
lock
jge
jmp
out
cmp
dec
or
fucomi
jns
jle
xchg
out
cmpsl
mov
jg
repnz
pop
hlt
repz
sbb
pop
inc
add
and
pushf
jp
sbb
jbe
test
cmp
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
popf
sbb
iret
ret
clc
sti
mov
stc
clc
jp
add
add
mov
sbb
pusha
cltd
orb
xor
mov
arpl
mov
jg
lret
push
repz
cmp
inc
xchg
pop
mov
mov
jne
adc
inc
cmp
dec
movsb
jecxz
cld
loopne
pusha
jbe
inc
stos
adc
fdiv
sbb
dec
xchg
jmp
lret
dec
ja
enter
lods
subb
int3
sub
cmp
imul
dec
in
pop
movsl
arpl
inc
sarb
js
jns
inc
orl
lret
cmp
or
les
rcll
inc
mov
push
fidivrs
jp
pop
repnz
sbb
lret
and
insl
sbb
fucomi
hlt
std
mov
sti
and
test
jle
sbb
xchg
push
hlt
mov
movsl
pop
das
idivl
mov
adc
cmp
push
sbb
push
mov
push
xor
adc
mov
adc
xorb
mov
daa
fs
movsb
mov
adc
outsb
push
inc
sub
push
aaa
push
lea
mov
call
mov
fsub
push
fldenv
or
and
mov
mov
fmull
lock
test
fwait
sub
pop
stos
punpckhwd
sub
in
mov
mov
fld
push
and
out
leave
imul
popa
cli
loopew
popl
fidivl
add
add
xchg
adc
mov
and
or
insb
int3
aaa
jmp
mov
popf
pop
popf
xor
jmp
std
mov
sti
and
cmp
mov
or
or
les
rolb
mov
xchg
int
dec
arpl
fcmovbe
inc
in
sub
pop
lahf
add
sub
hlt
sbb
inc
lcall
shrb
pop
popf
add
inc
mov
jmp
cmp
ret
fmull
jne
mov
xchg
rcrb
xor
mov
mov
mov
mov
fists
in
pop
push
xchg
sbb
or
mov
dec
sbb
mov
cmpsb
xor
jb
fisttpll
cmp
lds
mov
scas
das
pop
icebp
or
cmp
fcmovne
loop
add
sub
addl
mull
lret
stc
dec
movsb
dec
push
test
push
cmp
lock
lds
out
cmpsb
enter
inc
ret
fldl2e
scas
cmp
pop
shrl
xchg
add
xorb
dec
or
test
pop
mov
insl
mov
pusha
pop
push
test
sbb
stos
cmp
ss
and
shlb
pop
adc
jl
out
mov
jnp
hlt
leave
add
sbb
test
lcall
daa
and
iret
mov
sbb
mov
push
ja
inc
in
scas
jge
inc
sbb
inc
aaa
lret
fucomp
add
fldt
repnz
dec
inc
shl
addb
ljmp
inc
sbb
test
ret
data16
push
mov
pop
dec
mov
enter
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
sbb
inc
andl
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fsubs
pop
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
inc
and
mov
rol
insb
arpl
rorb
dec
arpl
call
dec
pusha
jae
repnz
popf
ret
mov
mov
or
push
xchg
fisubl
shl
sbb
insl
movsl
aam
mov
roll
shll
push
int
add
decl
loop
lret
movsl
inc
fcomps
lds
sbb
mov
push
add
aad
pushf
xchg
pushf
xchg
sbb
test
mov
mov
push
int
push
xchg
int3
add
inc
fcoml
jg
mov
addb
mov
shrb
add
cmpsl
cmc
jmp
inc
cmpsb
shll
out
mov
fists
lea
aas
cmpl
loope
movsl
or
daa
mov
mov
in
mov
inc
xchg
jmp
xchg
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
jp
add
cltd
sub
adc
lods
cmpsb
sbbb
or
ljmp
call
mov
jmp
push
pop
push
jb
sbb
sahf
jp
sub
or
pop
adc
ss
jb
jbe
scas
pop
or
pop
mov
pop
testl
push
xchg
mov
int3
xor
xor
lahf
xor
out
jl
in
jnp
cli
jnp
inc
mov
add
adc
cbtw
add
and
mov
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
dec
dec
rcrb
test
add
data16
nop
lds
pop
pop
xor
sbb
cli
orb
pop
mov
sub
adc
pop
hlt
mov
sbb
mov
adc
cmpb
test
fcomp
xlat
ret
pop
cmp
les
pushf
dec
xor
stos
aas
loop
mov
jge
xor
adc
mov
adc
popf
ljmp
adc
pop
sti
out
mov
adc
es
shlb
jns
inc
dec
xchg
aam
mov
xorl
popa
mov
push
jnp
rep
ljmp
push
js
adc
mov
das
sbb
push
scas
pxor
cld
repz
or
insl
bswap
jg
cmpsb
push
sbb
jbe
mov
fs
lcall
mov
xlat
imull
rcrl
test
mov
fistps
mov
inc
and
es
jbe
ja
out
jnp
lds
xlat
adc
int
int3
fwait
mov
in
and
xor
xchg
in
sbb
in
cld
push
pop
add
add
add
mov
sbb
pusha
cltd
orb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
inc
mov
pop
loopne
sub
inc
ret
jnp
popa
jbe
lods
push
outsl
sbb
ja
push
cmpsb
mov
dec
mov
xor
mov
push
iret
or
js
push
xchg
sbb
mov
adc
shlb
int
push
iret
cmp
push
jg
int3
cld
mov
addr16
mulb
fldcw
mov
icebp
or
out
les
out
dec
mov
jns
fdivrs
and
xchg
les
xchg
push
std
mov
int
mov
test
lock
or
lds
mov
sar
mov
push
jmp
daa
add
mov
fldl2e
arpl
cmpsl
test
mov
or
cmp
push
aam
sub
int3
ja
imul
fwait
dec
mov
lret
mov
sahf
sbb
cld
mov
ror
jmp
dec
ds
je
fnstenv
aam
jl
ret
add
mov
scas
ja
test
inc
jns
dec
cmpsb
xor
jb
fisttpll
cmp
lds
sti
out
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
in
loopne
roll
sub
movl
scas
push
sbb
dec
lret
mov
test
push
imul
xchg
xchg
jle
push
jo
sub
push
xor
xchg
mov
mov
faddl
jp
mov
mov
ret
dec
sbb
xchg
mov
push
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
pushf
push
shll
pop
test
push
stos
popf
scas
gs
dec
ljmp
ret
xchg
out
jno
pop
imul
fsub
jbe
lods
push
xchg
mov
adc
xor
iret
mov
pop
push
outsl
push
sbb
and
pop
mov
popf
pop
pushf
jbe
stos
loope
mov
push
outsb
loope
lds
or
mov
mov
inc
out
loop
sub
and
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
out
and
daa
pop
repz
out
xlat
push
stc
and
loopne
mov
mov
sbb
xor
nop
sub
sbb
inc
rcrl
ja
rcr
add
push
pop
add
fisubs
jnp
std
xor
cmpsl
jecxz
jns
cmc
mov
cwtl
jmp
cltd
adcb
outsb
mov
nop
jns
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
test
mov
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
sbb
shl
test
scas
adc
imul
push
repz
cmpb
pop
das
dec
iret
shll
dec
icebp
adc
sti
jp
scas
scas
loope
xrelease
loopne
js
cs
jae
sbb
lahf
lods
xlat
pop
arpl
out
test
ss
push
andb
or
das
add
enter
adc
push
inc
lret
movsb
mov
push
cmc
cmp
cmc
mov
inc
mov
mov
adc
ljmp
and
jl
adc
and
mov
dec
sbb
lcall
mov
sub
cmc
sbb
mov
push
adc
dec
jmp
lds
sbb
sbb
icebp
dec
scas
xchg
stos
mov
inc
lds
adc
lret
test
push
lods
push
sub
leave
test
mov
mov
mov
jno
pop
and
repz
cmp
or
xor
and
pop
dec
add
shlb
stos
push
mov
adc
inc
enter
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
ss
xchg
or
push
add
add
sbb
mov
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
or
or
cld
loop
lds
shlb
out
inc
rcr
xchg
lods
pop
jle
sbb
sahf
mov
push
aad
or
push
pop
or
lea
mov
push
jno
fbld
mov
loope
pop
lods
push
outsl
sbb
jg,pn
push
jecxz
dec
gs
nop
aam
mov
fcmovnbe
int
dec
subl
or
jecxz
sbb
push
xchg
jl
sbb
fistl
popl
push
jo
mov
fmull
inc
mov
or
in
jg
fsubs
mov
stc
into
clc
rcrb
dec
aaa
popf
xor
jnp
stc
fdiv
xchg
ss
inc
insb
aaa
or
dec
cmpsb
dec
idivl
xor
gs
in
mov
adc
jb
add
push
push
push
lds
or
or
pusha
jae
inc
int
add
ret
lods
adc
jmp
inc
cld
push
dec
xchg
dec
vcvttss2si
outsb
mov
push
xchg
jmp
sbb
int
jnp
and
out
lods
jmp
into
and
movb
mov
jmp
ljmp
lds
sbb
mov
les
lret
adc
pop
nop
jbe
mov
ficomps
mov
pop
mov
sti
xor
mov
cmp
movsb
scas
xor
cs
inc
daa
inc
lcall
test
push
xchg
mov
fistpll
jnp
out
xchg
inc
ret
lahf
lea
mov
outsb
rcl
mov
lock
test
or
dec
lock
mov
loop
mov
popa
imul
loop
je
repz
test
fstps
jmp
adc
cmp
lea
jg
or
and
jl
pop
adc
test
fs
push
cmp
sub
cmc
sbb
out
push
cld
mov
bound
data16
scas
pop
rcl
ja
mov
sub
pop
popf
mul
sub
imul
call
mov
adc
dec
sbb
dec
jecxz
push
add
jle
scas
loope
ds
scas
push
or
pop
das
dec
rcrb
mov
fists
cmpsb
cltd
aad
imul
pop
push
rcl
test
inc
leave
pop
xor
ja
jns
jmp
icebp
into
add
mov
pop
add
or
mov
inc
nop
js
push
mov
subl
mov
push
mov
mov
loopne
inc
lds
cltd
xor
mov
lds
mov
xchg
daa
mov
std
mov
xor
inc
push
inc
mov
mov
dec
gs
jle
push
jg
mov
imul
dec
and
lret
ds
jae
iret
sahf
jnp
imul
mov
sbb
out
sbb
inc
shlb
sub
xchg
das
fcomp
push
jne
mov
adc
dec
lods
into
lret
movsb
mov
inc
xchg
fdivl
adcb
aas
orb
mov
std
fdivrl
andl
hlt
dec
les
data16
push
adc
push
iret
xor
imul
pop
jns
mov
adc
cmp
es
ud1
adc
cmp
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
out
add
mov
sbb
out
inc
mov
sub
insl
aam
inc
fimuls
pop
insl
aad
insl
ficomps
fnstcw
sub
sub
inc
dec
pop
adc
jno
fildll
cltd
int
dec
inc
sub
xchg
pop
sub
stos
push
repnz
pushf
mov
push
iret
xorl
dec
pop
xchg
cmpsb
jmp
lret
arpl
mov
inc
inc
pushf
xor
mov
push
lock
and
in
xor
loopne
jns
outsb
sub
or
xor
rorb
mov
xchg
lds
arpl
imul
fnstenv
adc
ljmp
mov
cmpsl
test
aas
xchg
xor
jne
cltd
cmpsl
inc
popf
fiaddl
enter
stc
inc
pushf
cmp
mov
adc
xchg
cmp
or
aas
test
fildl
add
mov
mov
push
sarl
mov
rclb
cmpb
mov
push
jno
fstl
aad
push
orb
aaa
sub
shrl
pop
iret
mov
and
outsl
rcl
pop
xor
std
dec
rcr
or
xchg
nop
mov
jno,pn
insb
repnz
mov
sbb
xor
outsb
mov
daa
pop
std
jmp
ficoml
mov
jecxz
sbb
xor
iret
push
inc
cmp
cmc
and
adc
jmp
and
aaa
dec
cmp
mov
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
in
test
add
push
cmp
daa
outsb
or
scas
or
and
or
call
or
int
push
dec
add
or
cmc
and
lods
mov
cmp
and
jl
jp
push
fs
jecxz
nop
pcmpeqb
xlat
inc
aad
enter
pop
aas
jle
lahf
dec
and
push
in
rclb
cli
sub
fwait
cmpsl
in
gs
jno
int
add
pop
lcall
divb
jo
xor
sbb
or
pop
adc
pop
sub
jp
add
cmp
lds
mov
scas
das
pop
icebp
or
cmp
fs
loop
out
lods
sarl
push
cld
jb
mov
js
jl
leave
notl
lret
jg
scas
dec
cmc
adc
jno
lret
push
ret
adc
hlt
jp
mov
jne
sbb
mov
addr16
fcmovb
pop
or
lds
inc
iret
mov
dec
inc
leave
pushf
stos
mov
mov
add
dec
pop
mov
out
int
rcrl
pop
xor
add
jmp
jl
or
mov
fsts
inc
pop
cli
add
inc
mov
add
and
mov
fidivs
fs
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
cmpsb
lds
imul
and
popa
xchg
into
and
das
scas
repz
in
test
pop
mov
sub
movswl
outsb
jno
sbb
sbb
ret
xchg
jg
sbb
cmpb
cmpsb
loopne
mov
outsl
arpl
cli
pop
xor
lret
scas
ljmp
push
loop
sbb
add
repnz
mov
xchg
mov
lock
xor
xor
daa
loop
je
fadds
add
inc
mov
inc
mov
sbb
pop
adc
inc
mov
pop
jb
mov
iret
add
hlt
jns
fidivrs
pop
mov
mov
pop
mov
mov
add
mov
xor
pushf
dec
and
xchg
sbb
pop
stos
fsubr
test
xchg
leave
pusha
fisubrs
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
jno
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
push
movsl
mov
mov
stos
mov
ja
mov
push
cmp
pop
inc
and
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
lahf
fildll
jno
fldt
arpl
sbb
xchg
dec
inc
shlb
or
imul
nop
xor
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
xchg
lods
mov
mov
xchg
test
dec
mov
jne
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
insl
test
xor
sbb
and
fucomi
jge
sarl
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
or
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
pop
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
mov
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
dec
loop
xchg
dec
bound
adc
pusha
sarb
sub
push
mov
rcrb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
lahf
popf
scas
inc
movsl
fcompl
xchg
lods
or
xchg
add
jbe
dec
xor
sbb
aas
loop
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
sbb
mov
sbb
jnp
adc
test
sub
cmp
sbb
ss
fld1
std
jge
cwtl
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
cmp
mov
sub
and
lahf
jle
dec
out
call
cmp
cltd
enter
popl
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jo
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
clc
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
adc
or
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
stc
lea
lahf
out
mov
enter
sbb
cmpsb
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jp
mov
inc
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbb
fucomip
jl
sbbl
lds
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
jne
sbb
repz
ret
loopne
dec
pop
inc
pop
jmp
clc
sbb
and
gs
imul
mov
adc
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
push
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
mov
mov
pop
mov
mov
add
mov
hlt
das
sti
pushf
dec
and
xchg
mov
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
cmp
and
add
outsl
icebp
pop
scas
xchg
stos
mov
outsb
les
fcoml
mov
pop
icebp
mov
cmp
mov
aad
fstpt
xlat
pop
pinsrw
push
fcom
pushf
jae
sub
push
or
cmpl
mov
adc
popf
lods
xchg
cwtl
outsb
mov
movl
mov
push
xchg
hlt
pop
fsts
sarl
aas
out
and
adc
and
or
mov
mov
mov
movsb
int3
sub
mov
push
xchg
mov
pop
adc
sbbl
jns
and
pop
mov
jbe
lds
cmp
add
pop
push
cwtl
sub
das
out
dec
and
xchg
sbb
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
cmp
and
add
outsl
icebp
pop
scas
xchg
stos
mov
outsb
les
fcoml
mov
pop
icebp
mov
cmp
mov
aad
fstpt
xlat
pop
pinsrw
push
fcom
pushf
jae
sub
push
or
cmpl
mov
adc
popf
lods
xchg
cwtl
outsb
mov
movl
mov
push
xchg
hlt
pop
fsts
sarl
aas
out
and
adc
and
or
mov
mov
mov
movsb
int3
sub
mov
push
xchg
mov
pop
adc
sbbl
jns
cmpb
sub
mov
sub
cmp
sbb
push
cwtl
sub
das
rcrl
je
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
in
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
cmp
lcall
sub
shrl
inc
mov
mov
cld
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
sbb
scas
mov
imull
mov
mov
bound
dec
mov
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
jle
mov
mov
xchg
test
dec
mov
dec
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
cld
test
xor
sbb
pop
fucomi
jge
rcrl
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
and
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
and
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
adc
jo
jb
dec
mov
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
movsb
popf
scas
inc
movsl
fcompl
xchg
pop
or
loopne
add
push
aas
les
mov
ret
jle
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
andl
mov
mov
and
xchg
jp
dec
sbb
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
jae
jl
xchg
mov
mov
and
call
cmp
inc
mov
lea
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lcall
mov
aaa
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
aad
or
int
imul
push
sub
repz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
fstp
cmp
mov
mov
test
enter
sbb
sbb
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jno
mov
sub
mov
fsubr
mov
sbb
dec
adc
call
pop
mov
daa
pop
xorl
jl
adcl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
add
repz
ret
loopne
dec
pop
inc
jae
repz
sbb
and
lahf
lret
jecxz
gs
test
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
xchg
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
ror
push
fnsave
push
test
lret
mov
repnz
stos
inc
inc
pop
dec
ds
sbb
jmp
rclb
arpl
jo
test
sbb
xorb
cmp
arpl
cmpsl
add
pop
xor
xlat
fistpl
push
pop
cmpsl
push
jg
mov
enter
adc
rcrl
push
jb
adc
adc
mov
pop
or
fsubs
sub
fdivrs
cli
jae
loopne
xor
lahf
cltd
xlat
pop
mov
push
adc
add
sub
add
and
hlt
cwtl
mov
imul
cmpb
xor
pop
xor
mov
sub
mov
out
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
out
mov
pop
cmp
mov
inc
mov
mov
add
pop
push
cwtl
sub
das
negb
enter
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
je
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
inc
addr16
xchg
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
rorl
fwait
lods
mov
jbe
xor
in
pusha
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
jo
fsubs
and
xchg
stos
xchg
sbb
movb
lods
cli
repz
scas
ljmp
mov
sbb
push
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
scas
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
stos
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
mov
lcall
sub
shrl
inc
mov
dec
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
in
fildll
sub
mov
bound
dec
scas
sub
add
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
lods
mov
mov
xchg
test
dec
mov
inc
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
jbe
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
jns
jle
xchg
sub
cs
or
mov
clc
push
fdivrs
aam
inc
and
lret
gs
repz
or
xor
fcoml
mov
rcll
adc
xchg
cltd
pop
inc
stos
dec
cmpsl
loope
dec
pop
jnp
mov
call
mov
cmp
pop
sub
out
ds
jp
movsb
fnstenv
or
aad
or
and
nop
addr16
sbb
xchg
mov
rcrb
mov
inc
mov
sbb
scas
xchg
sbb
in
bound
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
fsubrl
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
sbb
fwait
lods
mov
mov
push
adc
pop
dec
loope
bnd
int3
xor
mov
popf
dec
stc
sbb
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jbe
jo
jb
dec
inc
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
fcompl
xchg
fimuls
addl
add
push
aas
ficomps
mov
ret
push
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
mov
repz
cmp
mov
and
xchg
jp
dec
pop
test
sub
cmp
sbb
stc
ret
fld1
std
jge
inc
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
cld
xchg
mov
sub
aam
and
call
cmp
cltd
enter
adc
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lcall
mov
aaa
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
or
int
imul
push
sub
jno
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
call
fstp
dec
out
mov
enter
sbb
aas
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
nop
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
add
fucomip
jl
cmpl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
xchg
call
cmp
ret
loopne
dec
pop
inc
mov
in
and
lret
jecxz
gs
add
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
jge
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
pop
imul
mov
jbe
fisttpll
cmp
or
sbb
push
cwtl
sub
das
push
pushf
dec
and
xchg
pop
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
lods
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
xchg
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
adc
lcall
sub
test
test
inc
mov
lock
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
sbb
imul
pop
mov
bound
dec
mov
shlb
or
imul
nop
xor
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lods
mov
mov
xchg
test
dec
mov
lcall
mov
les
sbbb
mov
sub
sbb
scas
in
add
popf
scas
pushl
mov
mov
adc
outsb
jno
popl
mov
fcoms
and
xchg
jbe
pop
repz
sti
inc
push
into
mov
push
gs
outsl
mov
cmp
popf
repz
fadds
jno
xchg
mov
je
aad
and
cmp
ljmp
lods
fnsave
in
mov
push
jnp
mov
jns
outsl
inc
sbb
add
mov
mov
and
or
mov
adc
test
push
adc
cmc
sbb
pusha
std
lods
mov
mov
xchg
test
dec
mov
mov
dec
fwait
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
jmp
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sub
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
jmp
int3
xor
leave
loop
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
or
or
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
cmp
pop
into
xchg
cmp
adc
in
add
jbe
dec
sub
sbb
aas
es
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
shlb
xchg
cwtl
or
and
shll
shr
test
sub
sahf
dec
mov
inc
add
jb
pop
mov
pop
inc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jo
jl
ftst
mov
repz
inc
sbb
pop
sbb
div
mov
idivb
aad
mov
cs
dec
sbb
rclb
in
mov
testl
xchg
mov
xor
add
xchg
test
mov
jae
xor
pop
aad
xor
xchg
add
movsb
fisttps
fdecstp
js
movsb
popf
scas
inc
movsl
fcompl
xchg
popf
or
dec
add
jbe
dec
leave
push
aas
mov
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
mov
dec
popl
data16
or
adc
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
xor
jae
and
xchg
mov
xor
lahf
jle
dec
dec
call
cmp
cltd
enter
mov
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
negb
mov
aaa
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
aad
or
int
imul
push
sub
ja
mov
out
repz
pusha
or
xchg
mov
mov
sbb
mov
cltd
pop
push
lock
shll
or
mov
dec
and
mov
push
xor
mov
lods
ficoml
test
shrb
jne
lahf
pop
les
xchg
stc
jg
add
push
jl
or
inc
imul
sub
xchg
hlt
icebp
mov
push
jge
adc
jae
rcrl
pop
jo
jge
mov
pop
mov
lods
scas
inc
fsubrl
fsubs
add
xchg
sbb
cmpsl
sub
xchg
xchg
aas
inc
mov
stc
mov
movsl
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
add
or
int
imul
push
sub
repz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
testb
js
mov
mov
test
enter
sbb
out
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
cmp
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xor
fucomip
jl
subl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
psubsb
mov
ret
loopne
dec
pop
inc
push
jmp
clc
sbb
and
lret
jecxz
gs
sub
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
xbegin
mov
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sbb
ficomps
mov
stc
mov
mov
add
les
cwtl
sub
das
add
jne
test
in
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
cmp
and
add
outsl
icebp
pop
scas
xchg
stos
mov
outsb
les
fcoml
mov
pop
icebp
mov
cmp
mov
aad
fstpt
xlat
pop
pinsrw
push
fcom
pushf
jae
sub
push
or
cmpl
mov
adc
popf
lods
xchg
cwtl
outsb
mov
movl
mov
push
xchg
hlt
pop
fsts
sarl
aas
out
and
adc
and
or
mov
mov
mov
movsb
int3
sub
mov
push
xchg
mov
pop
adc
sbbl
jns
movsb
mov
pop
pop
mov
xlat
mov
mov
add
repz
cwtl
sub
das
jo
dec
and
xchg
cmp
in
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
out
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
pop
movsl
mov
mov
stos
mov
ja
mov
push
cmp
inc
mov
es
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
fstp
scas
mov
imull
mov
mov
bound
dec
xchg
sub
mov
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lods
mov
mov
xchg
test
dec
mov
popa
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
ljmp
mov
push
dec
subl
mov
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
shr
bnd
int3
xor
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
jo
jb
dec
sbb
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
fcompl
xchg
add
addl
add
push
aas
cmpsb
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
inc
es
mov
sbb
cltd
and
xchg
jp
dec
in
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
and
jae
jne
xchg
mov
out
inc
and
call
cmp
cltd
enter
xchg
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jne
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
aas
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
sub
or
int
imul
push
sub
ja
mov
out
repz
pusha
or
xchg
mov
mov
sbb
mov
cltd
pop
push
lock
shll
or
mov
dec
and
mov
push
xor
mov
lods
ficoml
test
shrb
jne
lahf
pop
les
xchg
stc
jg
add
push
jl
or
inc
imul
sub
xchg
hlt
icebp
mov
push
jge
adc
jae
rcrl
pop
jo
jge
mov
pop
mov
lods
scas
inc
fsubrl
fsubs
add
xchg
sbb
cmpsl
sub
xchg
xchg
aas
inc
mov
stc
mov
movsl
inc
push
mov
or
mov
lock
sti
mov
repz
mov
inc
adc
sub
ret
addl
mov
int
imul
push
sub
ja
mov
out
repz
pusha
or
xchg
mov
mov
sbb
mov
cltd
pop
push
lock
shll
or
mov
dec
and
mov
push
xor
mov
lods
ficoml
test
shrb
jne
lahf
pop
les
xchg
stc
jg
add
push
jl
or
inc
imul
sub
xchg
hlt
icebp
mov
push
jge
adc
jae
rcrl
pop
jo
jge
mov
pop
mov
lods
scas
inc
fsubrl
fsubs
add
xchg
sbb
cmpsl
sub
xchg
xchg
aas
inc
mov
stc
mov
movsl
inc
push
mov
or
mov
lock
sti
xor
repz
lea
mov
inc
adc
sub
negl
or
int
imul
push
sub
repz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
fstp
mov
mov
mov
test
enter
sbb
rolb
inc
clc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xchg
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
cmpsb
call
cmp
pop
inc
loope
repz
sbb
and
lret
jecxz
gs
insb
enter
int
lret
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
popf
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
lret
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
loopne
push
xchg
push
jae
cld
ret
pushf
pop
mov
xchg
test
cwtl
data16
xlat
addb
xchg
pop
jo
movsl
or
xor
mov
xchg
dec
in
mov
push
fsts
push
jmp
scas
ficoms
test
jmp
js
or
cltd
scas
xchg
sbb
cwtl
int3
dec
and
test
pop
aam
test
repnz
xor
push
pop
push
rep
icebp
mov
xor
insl
or
hlt
pop
mov
jmp
mov
sub
push
hlt
es
lea
cmp
lea
test
or
pop
mov
xor
mov
jp
mov
repnz
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
push
ficomps
mov
jp
ret
mov
add
mov
xor
pushf
dec
and
xchg
mov
pop
stos
fsubr
test
xchg
leave
pusha
fisubrs
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
lds
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
sbb
pop
lcall
sub
push
cmp
pop
inc
xchg
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
sbb
scas
mov
imull
mov
mov
bound
dec
xlat
sub
push
sbb
addb
imul
nop
ds
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
lods
mov
mov
xchg
test
dec
mov
jae
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
pop
test
xor
sbb
push
fucomi
jge
shl
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
sub
sub
adc
ret
outsb
pop
dec
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
dec
loop
xchg
dec
or
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
sub
pop
jbe
andl
addl
add
push
aas
push
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
sbb
mov
sbb
sub
adc
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
stos
xchg
mov
sub
inc
inc
and
call
cmp
cltd
enter
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
std
pop
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
sub
imul
fwait
lea
mov
inc
adc
sub
mov
or
int
imul
push
sub
std
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lea
pop
out
mov
enter
sbb
stos
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
cmp
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
orl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
mov
test
mov
movsl
call
cmp
ret
loopne
dec
pop
inc
dec
jmp
clc
sbb
and
lahf
lret
jecxz
gs
mov
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
hlt
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
push
mov
pop
test
mov
jns
ret
mov
add
and
hlt
das
das
pushf
dec
and
xchg
lods
lret
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
shlb
iretw
cmpsl
mov
imul
dec
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
and
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
sti
movsl
mov
mov
stos
mov
ja
mov
cmp
inc
mov
or
cld
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
scas
mov
imull
mov
mov
bound
dec
xchg
sub
mov
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
pop
lods
mov
mov
xchg
test
dec
mov
mov
dec
cmp
pop
dec
les
cld
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
mov
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
orb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
xchg
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
lods
loop
xchg
dec
aam
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
xchg
popf
scas
inc
movsl
fcompl
xchg
test
addl
add
push
aas
push
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
shlb
xchg
cwtl
or
and
shll
shr
test
sub
sahf
dec
mov
inc
add
jb
pop
mov
pop
inc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jo
jl
ftst
mov
repz
inc
sbb
pop
sbb
div
mov
idivb
aad
mov
cs
dec
sbb
rclb
in
mov
testl
xchg
mov
xor
add
xchg
test
mov
jae
xor
pop
aad
xor
xchg
add
movsb
fisttps
fdecstp
js
negl
pop
xor
stos
cwtl
or
inc
add
jbe
dec
inc
push
aas
out
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
andl
mov
mov
and
xchg
jp
dec
add
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
lahf
xchg
mov
sub
mov
cmovge
call
cmp
enter
pop
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jne
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
push
dec
mov
int
imul
push
sub
icebp
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
sub
fstpt
out
mov
enter
sbb
add
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
popa
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
fucomip
jl
subl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
mov
shl
mov
call
cmp
ret
loopne
dec
pop
inc
add
repz
sbb
and
lret
jecxz
gs
ljmp
out
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
sbb
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
xchg
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
popf
mov
pop
mov
test
dec
sbb
stos
add
lea
cwtl
sub
das
adc
fxch
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
int3
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
fmul
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
ret
dec
mov
stos
mov
ja
sahf
test
test
inc
mov
mov
cld
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
rcr
scas
mov
imull
mov
mov
bound
dec
mov
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
jbe
mov
mov
xchg
test
dec
mov
repz
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
fisubrs
xor
sbb
inc
fucomi
jge
shrl
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
andb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
inc
jmp
xor
and
sub
inc
sbb
mov
add
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
es
xchg
dec
cwtl
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
lock
scas
inc
movsl
fcompl
xchg
xor
addl
add
push
aas
ficomps
mov
ret
mov
push
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
andl
mov
mov
and
xchg
jp
dec
lea
cmp
sbb
add
jge
and
lock
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
icebp
xchg
mov
sub
rolb
lahf
jle
dec
push
call
cmp
cltd
enter
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
cmc
pop
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
push
repz
fwait
lea
mov
inc
adc
sub
aas
push
or
int
imul
push
sub
jge
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
loope
cmpsb
inc
cmpsl
fstp
cs
mov
enter
sbb
cs
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
push
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
cmpl
xor
mov
bound
loop
ret
mov
mov
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
js
clc
sub
shl
inc
mov
ja
fs
mov
sbb
mov
jae
aam
iret
movsb
dec
mov
pop
adc
add
inc
stos
int
shll
jns
xor
mov
sbb
cs
jnp
in
movsb
icebp
leave
cmc
je
lahf
repnz
xlat
mov
loope
xchg
adc
es
adc
or
mov
inc
les
pop
enter
xor
notl
std
mov
les
xchg
mov
in
and
sbb
les
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
push
sbb
mov
pop
inc
mov
repz
sbb
and
lahf
lret
jecxz
gs
mov
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
idiv
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
insl
mov
pop
mov
mov
mov
add
loopne
xor
pushf
dec
and
xchg
lretw
fsubr
test
xchg
leave
pusha
aad
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
or
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
stos
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
mov
pop
lcall
sub
test
test
inc
mov
xor
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
push
fildll
mov
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
ss
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
fidivl
jo
in
dec
mov
jg
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
xor
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
cltd
push
dec
test
dec
aam
fcoms
and
xchg
jbe
pop
jae
inc
insl
icebp
out
xchg
repz
or
add
mov
repz
repz
sub
sbb
sub
out
jne
cmp
fmull
negl
inc
fwait
clc
mov
ljmp
stc
stos
into
sbb
xlat
mov
pop
pop
dec
ret
fcmovne
orb
lcall
dec
mov
ss
xor
iret
mov
sbb
decl
lret
dec
dec
sahf
cli
mov
mov
jae
sbb
dec
or
bound
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
xor
xor
sbb
cltd
fucomi
jge
sar
inc
fwait
push
shlb
jae
sub
cltd
push
dec
test
dec
aam
fcoms
and
xchg
jbe
pop
jae
inc
insl
icebp
out
xchg
repz
or
add
mov
repz
repz
sub
sbb
sub
out
jne
cmp
fmull
negl
inc
fwait
clc
mov
ljmp
stc
stos
into
sbb
xlat
mov
pop
pop
dec
ret
fcmovne
orb
lcall
dec
mov
ss
xor
iret
mov
sbb
decl
lret
dec
dec
sahf
cli
mov
mov
jae
sbb
dec
or
bound
sbb
and
cmp
lock
mov
push
dec
dec
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
and
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
outsb
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
and
jo
jb
dec
push
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
scas
popf
scas
inc
movsl
fcompl
xchg
in
addl
add
push
aas
ja
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcr
andl
mov
mov
and
xchg
jp
dec
fisubrs
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
cmp
sub
sub
jo
and
call
cmp
enter
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jae
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
mov
cmpsl
mov
fwait
lea
mov
inc
adc
sub
out
push
or
int
imul
push
sub
jae
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
adc
fcmovne
out
mov
enter
sbb
pop
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
push
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
cld
mov
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
jbe
repz
ret
loopne
dec
pop
inc
out
jmp
clc
sbb
and
lret
jecxz
gs
or
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
adc
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
jns
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmpsb
mov
pop
sti
mov
test
sbb
cltd
add
movsb
push
cwtl
sub
das
xor
fxch
pop
stos
fsubr
test
xchg
leave
pusha
fisubrs
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jo
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
xchg
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
scas
movsl
mov
mov
stos
mov
ja
cmc
test
test
inc
mov
adc
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
xchg
fildll
lret
lods
dec
pop
mov
bound
dec
dec
sub
sti
sbb
addb
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
scas
lods
mov
mov
xchg
test
dec
mov
adc
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
loope
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
or
stos
inc
movsb
pop
sbb
lods
mov
mov
push
adc
ret
outsb
pop
dec
sbb
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
shl
jo
jb
dec
add
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
inc
popf
scas
inc
movsl
fcompl
xchg
sub
addl
add
push
aas
stos
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
pop
test
sub
cmp
inc
out
mov
ret
fld1
std
jge
push
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
cmpsb
xchg
mov
sub
cmovb
lahf
jle
dec
call
fdivrl
sti
cltd
enter
jno
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lock
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
outsl
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
cli
push
or
int
imul
push
sub
jge
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
add
fstp
mov
je
xor
jecxz
inc
sbb
dec
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
fucomip
jl
subl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
sbb
idivl
arpl
repz
ret
loopne
dec
pop
inc
or
repz
sbb
and
lret
jecxz
gs
repnz
int
dec
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
dec
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
sti
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sahf
mov
pop
inc
mov
je
ret
mov
add
push
push
cwtl
sub
das
push
pushf
dec
and
xchg
and
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
sub
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
pop
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
pop
movsl
mov
mov
stos
mov
ja
movsb
test
test
inc
mov
in
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
jnp
scas
mov
imull
mov
mov
bound
dec
jle
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
sub
xchg
test
dec
mov
or
dec
jge
mov
dec
les
mov
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
add
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
or
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
push
loop
xchg
dec
or
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
or
pop
test
stos
sub
addl
add
push
aas
and
mov
ret
push
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
sbb
mov
sbb
inc
and
xchg
jp
dec
push
test
sub
cmp
sbb
dec
ret
fld1
std
jge
add
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jmp
mov
sub
and
lahf
jle
dec
icebp
call
cmp
enter
sub
push
adc
add
int
jle
fucomip
mov
cmc
mov
and
je
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
jmp
dec
mov
popf
xchg
ja
dec
sahf
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
decl
fildl
mov
mov
test
enter
sbb
cmpsb
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
stos
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
fucomip
jl
andl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
jne
jle
repz
ret
loopne
dec
pop
inc
insl
jmp
clc
sbb
and
lahf
lret
jecxz
gs
mov
int
adc
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
inc
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
pop
mov
pop
sub
mov
popf
mov
mov
add
cld
push
cwtl
sub
das
cld
pushf
dec
and
xchg
xor
pop
stos
fsubr
test
xchg
leave
pusha
fldcw
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
add
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
dec
movsl
mov
mov
stos
mov
ja
jne
shrl
inc
mov
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
rcr
scas
mov
imull
mov
mov
bound
dec
outsb
sub
xor
or
imul
nop
xor
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
xchg
fidivl
test
dec
mov
popa
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
bound
xor
sbb
mov
fucomi
jge
sarl
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
sbb
jno
test
adc
ret
outsb
pop
dec
mov
int3
xor
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
cwtl
loop
xchg
dec
adc
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
adc
scas
inc
movsl
fcompl
xchg
xlat
or
or
add
push
aas
add
mov
ret
push
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
andl
mov
mov
and
xchg
jp
dec
pop
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
pop
xchg
mov
sub
xchg
inc
and
call
cmp
cltd
enter
or
lea
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
std
pop
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
dec
mov
int
imul
push
sub
lock
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
popf
lea
inc
out
mov
enter
sbb
mov
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xchg
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
andl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
adc
repz
ret
loopne
dec
pop
inc
dec
jmp
clc
sbb
and
lahf
lret
jecxz
gs
and
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
xchg
mov
xchg
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
sahf
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
ret
mov
pop
test
mov
hlt
mov
mov
add
imull
cwtl
sub
das
jle
dec
and
xchg
imul
stos
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
add
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
cli
movsl
mov
mov
stos
mov
ja
je
shrl
inc
mov
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
cmpsl
fildll
mov
pop
mov
bound
dec
and
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
std
lods
mov
mov
xchg
test
dec
mov
pop
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
add
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adcb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
inc
jmp
xor
leave
loop
and
sub
inc
sbb
mov
ja
ret
pop
mov
cmp
cmp
aad
aas
out
xor
lahf
cmpsl
mov
pop
fdivrl
ficoml
xor
dec
xchg
test
mov
xchg
test
lea
rcl
push
xor
mov
lcall
jne
xchg
mov
hlt
xor
jns
add
xor
add
lcall
or
add
xchg
xchg
sbb
fs
xchg
push
stc
adc
lret
lea
lods
sbb
xor
cwtl
nop
mov
test
add
or
jbe
xorb
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
in
bnd
int3
xor
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
or
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
ficompl
pop
pop
xchg
sbb
adc
push
add
jbe
dec
stos
push
aas
push
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
adc
cmp
sbb
retw
fld1
std
jge
xchg
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
xchg
xchg
mov
sub
or
and
call
cmp
enter
and
lea
adc
add
mov
fucomip
mov
cmc
mov
and
jg
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
xor
or
int
imul
push
sub
jae
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
or
fstp
cli
out
mov
enter
sbb
lods
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
daa
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
fucomip
jl
cmpl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
fucomi
repz
ret
loopne
dec
pop
inc
mov
repz
sbb
and
jecxz
gs
push
enter
int
stc
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
cmpb
push
jb
mov
lds
cmp
xor
adc
stc
push
push
cmpsb
arpl
lock
enter
add
push
popl
sbb
fistpl
xchg
std
dec
gs
cmpb
jg
lret
jno
mov
mov
add
fwait
pop
fsub
stos
stc
jb
adc
adc
jmp
mov
imul
in
mov
lret
das
shrb
sub
mov
xchg
cltd
aaa
mov
mov
cwtl
mov
mov
xchg
sub
add
mov
dec
mov
mov
cli
call
cmp
loopne
dec
pop
inc
jbe
repz
sbb
and
lahf
lret
jecxz
gs
or
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
je
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
dec
mov
pop
and
jbe
lea
cmp
sbb
push
cwtl
sub
das
push
jne
pop
lret
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
mov
pop
lcall
sub
push
cmp
inc
mov
add
jae
cmp
sub
scas
push
les
sbb
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
fildll
mov
fldt
arpl
push
sub
sbb
addb
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
subl
loopne
xchg
test
dec
mov
ret
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
mov
mov
adc
outsb
jno
popl
mov
fcoms
and
xchg
jbe
pop
repz
sti
inc
push
into
mov
push
gs
outsl
mov
cmp
popf
repz
fadds
jno
xchg
mov
je
aad
and
cmp
ljmp
lods
fnsave
in
mov
push
jnp
mov
jns
outsl
inc
sbb
add
mov
mov
and
or
mov
adc
test
push
adc
cmc
sbb
pusha
sub
fiaddl
xchg
test
dec
mov
push
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
repnz
xor
sbb
sbb
fucomi
jge
rcll
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
in
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
popl
ret
pop
mov
and
lcall
cmp
aam
inc
and
stos
gs
jmp
repnz
enter
rcll
inc
add
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
aam
fimull
lcall
inc
inc
fcmovnu
cwtl
out
mov
mov
mov
sbb
push
outsb
sbb
inc
sbb
sbb
lock
ss
fs
icebp
testb
sbb
pushl
xlat
mov
ds
dec
push
lret
cmpl
ljmp
ficoml
xchg
add
sbb
fdivs
sbb
stos
inc
movsb
pop
sbb
jno
xchg
push
cmp
ret
outsb
pop
dec
or
bnd
int3
xor
and
sub
inc
sbb
mov
ja
ret
pop
mov
cmp
cmp
aad
aas
out
xor
lahf
cmpsl
mov
pop
fdivrl
ficoml
xor
dec
xchg
test
mov
xchg
test
lea
rcl
push
xor
mov
lcall
jne
xchg
mov
hlt
xor
jns
add
xor
add
lcall
or
add
xchg
xchg
sbb
fs
xchg
push
stc
adc
lret
lea
lods
sbb
xor
cwtl
nop
mov
test
add
or
jbe
cmpb
stos
inc
movsb
pop
sbb
jno
and
cltd
push
adc
ret
outsb
pop
dec
cli
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
in
loop
xchg
dec
mov
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
lret
inc
movsl
fcompl
xchg
rorl
sbbl
jbe
dec
cli
push
aas
adc
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sar
andl
mov
mov
and
xchg
jp
dec
aam
push
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
sbb
sub
push
ds
inc
and
call
cmp
cltd
enter
cld
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lock
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
cltd
push
or
int
imul
push
sub
jae
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lea
stos
out
mov
enter
sbb
mov
inc
cwtl
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
cmp
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
jl
orl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
scas
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
movl
mov
pop
repz
in
mov
repz
and
sub
add
mov
adc
mov
stos
call
cmp
loopne
dec
pop
inc
icebp
jmp
clc
sbb
and
lahf
lret
jecxz
gs
in
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
lods
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
lock
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
stos
imul
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
mov
mov
lahf
mov
mov
add
inc
push
cwtl
sub
das
scas
pushf
dec
and
xchg
test
pop
stos
fsubr
test
xchg
leave
pusha
fisubrl
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
test
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
in
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
pop
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
cmp
pop
lcall
sub
test
test
inc
mov
imul
sub
arpl
scas
dec
les
sbb
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
scas
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
xor
scas
mov
imull
mov
mov
bound
dec
fldcw
xchg
dec
inc
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
stos
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
shrb
fcmove
cmpsl
xchg
test
dec
mov
xchg
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
add
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
sbbl
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
in
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
pop
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
lahf
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
popf
loop
xchg
dec
in
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
roll
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
scas
inc
movsl
fcompl
xchg
xchg
or
xor
add
push
aas
cmp
mov
ret
push
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rol
andl
mov
mov
and
xchg
jp
dec
lods
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
xchg
out
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
aad
mov
sub
aam
and
call
cmp
enter
popl
lea
adc
add
mov
fucomip
mov
cmc
mov
add
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
cmpsl
jecxz
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
rcrb
mov
jge
les
lahf
std
jge
test
mov
ja
adc
lahf
popf
in
stc
jl
ret
push
sbb
inc
cld
cmc
mov
inc
gs
adc
xchg
adc
leave
xchg
fwait
adc
cmp
jns
mov
push
js
jb
lods
inc
inc
pushf
dec
outsl
loopne
movsl
jle
jmp
std
xchg
fwait
ss
repz
nop
xchg
mov
mov
test
mov
xor
pop
mov
test
sbb
call
int
popf
cmpsl
ret
fld
imul
xchg
enter
push
or
aam
cmpps
inc
orl
fsubr
mov
cmc
repnz
or
iret
aad
stc
fs
ljmp
lcall
inc
cmp
jno
mov
dec
xchg
jecxz
pushf
xchg
add
and
inc
mov
mov
cmp
iret
adcb
popf
int3
jmp
repnz
pushf
jecxz
sbb
mov
sub
pop
scas
mov
icebp
sub
dec
bound
in
ss
jae
pop
outsb
or
inc
addb
stos
pop
neg
dec
cmpsl
push
jne
mov
pop
push
lahf
cmp
sub
fidivs
gs
imull
or
jl
sbb
aas
cmpsl
insl
add
mov
popl
sbb
mov
enter
xchg
clc
mov
mov
mov
fwait
in
pop
or
inc
mov
mov
and
and
mov
mov
lret
add
shlb
sbb
mov
dec
or
mov
sbb
fucomi
repz
cmp
xlat
pop
push
inc
cmp
jns
mov
dec
lahf
mov
jo
or
dec
dec
jnp
adc
dec
leave
fmuls
fsubrl
sub
mov
test
sub
cmp
pushf
lcall
int3
js
movsl
push
dec
cmc
std
cld
js
pop
insb
push
pop
ss
mov
jae
dec
std
idivb
push
mov
and
xchg
stos
inc
fstl
xor
in
cmpsb
push
mov
mov
lods
bnd
lods
scas
fbstp
arpl
push
mov
in
or
std
mov
movl
inc
les
in
push
test
js
add
sub
xchg
fld
push
lret
cmc
dec
fwait
iret
sbb
inc
enter
and
daa
sub
sti
int
js
mov
cmc
mov
sub
inc
mov
pop
push
stc
je
ljmp
addl
clc
sti
pop
es
rcr
pop
or
pop
rcll
fldlg2
ja
mov
cli
jg
inc
jmp
nop
cmp
fs
iret
mov
pop
loop
sub
cmp
push
push
lret
loop
loope
adc
in
xchg
repnz
subb
lret
mov
dec
imul
stos
cmp
xchg
fisttpl
aad
push
jge
cmp
dec
fwait
and
lahf
imul
lret
lahf
ficomps
jnp
test
fwait
leave
inc
sbb
sbb
mov
cld
jo
test
out
in
inc
nop
dec
and
into
xor
xor
xchg
inc
sbb
mov
rclb
mov
mov
mov
dec
inc
dec
mov
mov
push
and
pop
xor
enter
inc
divb
sub
xchg
sbb
or
jns
sahf
dec
lahf
mov
sub
and
cmpsb
push
ret
jecxz
add
out
leave
push
leave
sbb
fsubrl
test
fldcw
fiaddl
cli
pop
and
jmp
inc
inc
sar
mov
dec
rcr
dec
pop
insb
or
push
sub
sbb
or
divb
adc
cmp
loop
cli
cmp
stos
xor
xor
fsubrp
bnd
mov
imul
jo
mov
pop
cltd
pop
or
js
mov
push
pop
mov
rcl
or
shl
xchg
stos
jbe
mov
fcmovne
mov
stos
call
outsl
inc
xchg
dec
jae
shlb
and
pushf
cmp
mov
adc
xchg
cmp
xor
sbb
in
movsb
repz
ret
mov
test
clc
int3
mov
mov
sub
mov
fiaddl
popa
cwtl
rolb
xchg
sti
sbb
pop
loop
shlb
xor
mov
stos
push
test
imulb
in
pop
lcall
pop
lcall
les
test
and
jnp
push
push
mov
or
sahf
fcoml
ja
sub
xor
test
cmpsl
xchg
pushf
add
das
adc
add
aam
clc
adc
adc
or
je
xor
dec
xor
adc
push
sub
imul
sets
pop
mov
or
pop
fdivrl
jnp
mov
iret
insl
xchg
xchg
sbb
sbb
jecxz
adc
push
imul
pop
push
pop
push
or
cwtl
test
aaa
jmp
les
cmpl
dec
lahf
lret
in
ret
mov
or
jl
adc
mov
xchg
in
cmpb
mov
inc
stos
pushf
adc
mov
aaa
lcall
fisubrl
push
idivl
je
mov
into
je
orl
scas
xchg
jae
and
jne
inc
adc
lods
outsb
jno
lds
jge
pop
xor
cwtl
sub
lcall
mov
mov
sbb
stos
cwtl
xor
lret
xchg
xchg
sub
add
or
movsb
jp
cwtl
push
gs
fld1
jb
pop
sarb
jge
out
sbb
mov
jecxz
mov
sbb
int
imul
pop
pop
das
or
jne
shrb
outsb
fneni(8087
inc
mov
jns
aas
sub
hlt
movsl
mov
inc
add
mov
mov
or
ret
inc
mov
icebp
xchg
push
rcl
dec
sbb
inc
lods
jae
sub
and
ja
push
in
movsl
mov
sbb
ljmp
mov
arpl
bound
or
dec
and
fidivl
cmpsl
stos
ja
mov
mov
lds
push
pushf
xor
sbb
jo
int
push
jp
or
jge
iret
mov
or
arpl
popf
sub
mov
rcll
jmp
popl
mov
mov
cltd
insl
push
add
pushf
out
lods
cltd
enter
rcll
ret
add
jb
inc
mov
fwait
mov
test
aam
mov
sbb
in
pop
push
cmpl
sbb
inc
lock
inc
sbb
jb
inc
iret
adc
repz
sbb
test
lcall
pop
mov
out
pushf
jmp
cmp
stos
clc
lret
lods
mov
push
lahf
mov
xor
lret
fisttpl
test
mov
insl
pop
mov
or
lcall
pop
pop
in
out
gs
mov
test
loopne
jp
mov
loop
cwtl
cwtl
int3
xor
test
and
test
or
lock
cwtl
xor
lret
xchg
sbb
dec
fldl
adc
mov
imul
ret
mov
cmpsb
cmp
popf
xor
adc
mov
dec
dec
xorb
jmp
adc
adc
mov
call
shr
das
xchg
push
stos
pop
sub
in
mov
push
idivl
xor
int3
push
mov
ss
mov
lds
mov
and
dec
call
sbb
jge
mov
mul
xchg
sbb
cld
mov
outsl
loop
mov
out
lret
sub
aas
adc
pop
call
nop
fildl
sub
fidivl
movsb
stos
xchg
stos
inc
idivb
jb
lods
insl
mov
sarl
jge
dec
popl
bnd
popf
scas
push
fwait
js
repz
rcrb
test
adc
decl
sub
xor
test
pop
xchg
pop
pop
xchg
mov
mov
jecxz
and
insb
lcall
xor
mov
pop
sub
cwtl
push
sub
and
and
fldt
fdivrs
add
ljmp
popf
add
popf
mov
or
jecxz
pop
dec
ret
push
repnz
adc
jmp
sub
gs
in
lahf
leave
xor
sbb
dec
subl
sti
push
pop
or
mov
sub
test
jae
sbb
out
mov
test
xchg
mov
jb
inc
scas
xorl
leave
xchg
fimull
or
cmpsl
fwait
lods
cmp
dec
xor
inc
mov
sub
mov
loope
pop
mov
jae
jo
xchg
rclb
and
mov
inc
rcll
test
dec
xor
clc
push
mov
sub
mov
jb
mov
ret
fldcw
insl
mov
cmp
and
mov
lret
add
fs
mov
ret
fldt
sbb
inc
inc
ds
lcall
mov
gs
idiv
cmp
cwtl
stos
mov
mov
mov
test
mov
xor
imul
mov
inc
or
hlt
dec
add
popf
xor
sub
add
arpl
rcll
les
test
fwait
lods
lret
test
add
stos
push
gs
nop
andb
sahf
jno
adc
lahf
scas
mov
inc
bound
xchg
sbb
sbb
data16
pop
movsb
andl
nop
cmp
sbb
fwait
xor
push
sub
orl
mov
jmp
std
mov
sti
and
sbbl
or
cltd
sahf
icebp
xor
jmp
gs
pop
pop
pop
push
int
sub
push
mov
ret
pop
jne
mov
ffreep
jns
push
dec
daa
cmp
jp
add
cltd
je
inc
sbb
xchg
cmc
sub
hlt
mov
jbe
inc
lea
pop
movsb
nop
xlat
stos
les
jns
mov
cmp
mov
and
or
imul
adcb
dec
nop
repz
pop
js
or
pop
pop
mov
outsl
les
fs
pop
xchg
mov
or
push
cmp
mov
ds
jle
scas
cltd
mov
inc
xchg
pop
adc
rcrl
jb
xor
add
xor
xchg
das
or
test
cmp
sub
or
fwait
lea
hlt
or
xor
lds
nop
aas
lahf
adc
fisubrs
arpl
push
mov
das
jge
repz
test
dec
mov
jle
lahf
sbb
repz
sti
pop
add
add
fnstcw
pop
push
and
sbb
lea
fdivl
fs
sbbb
mov
stos
mov
ja
xor
imull
inc
mov
fucomp
jae
out
lods
dec
sbb
or
mov
ret
jo
xchg
dec
mov
or
cmovns
or
mov
mov
shrb
lret
jno
fnstenv
pop
and
mov
inc
add
subl
addl
add
popf
mov
sbb
dec
mov
push
pop
xchg
aam
xchg
movsb
jb
mov
ret
xchg
std
shll
cltd
enter
mov
int3
pusha
or
cltd
xchg
shr
inc
cltd
fwait
stos
out
nop
jmp
adc
adc
stos
into
pop
stos
roll
pushf
mov
inc
fwait
sbb
repz
sti
cmpsl
mov
lock
and
sub
int
push
sbb
add
fsubrl
adc
sbbl
push
pop
inc
into
lahf
push
ret
mov
mov
mov
lret
mov
mov
int
lret
xchg
xchg
test
dec
mov
xchg
cltd
mov
lds
xchg
lret
mov
in
mov
lods
pop
jno
lds
add
movsb
lahf
or
mov
imul
cmp
sbb
jg
pop
clc
je
icebp
pushl
sahf
iret
shrb
dec
mov
mov
imul
mov
sub
mov
sbb
xchg
mov
mov
and
lret
inc
xor
pop
inc
inc
or
rcr
aad
sbbb
insb
inc
mov
mov
into
insb
test
mov
push
mov
mov
xlat
jmp
xchg
sti
fimuls
jo
sbb
mov
mov
pop
and
test
leave
mov
or
lret
into
cltd
lret
movsl
decl
jl
imul
lahf
inc
jecxz
push
test
cwtl
xor
mov
and
test
rolb
movsb
les
xchg
lds
xlat
mov
add
call
sbb
mov
add
cmp
out
cmpsl
pop
insb
jno
dec
push
cmpsb
mov
pusha
mov
jmp
push
fdivrl
jae
arpl
inc
je
cli
adc
mov
movsb
sbb
sub
jno
pop
in
cmp
mov
shll
ret
imul
adc
ja
jo
addl
xor
or
stos
out
enter
or
push
xchg
scas
es
imul
mov
xchg
pop
pushf
dec
daa
ret
dec
sbb
xor
mov
pop
or
inc
pop
jge
pop
loopne
fstl
andb
inc
mov
lret
std
inc
cmpsb
pusha
inc
sbb
sub
ja
mov
andb
jmp
cmpb
lcall
insb
jg
pop
xchg
lahf
push
inc
dec
jmp
fstpt
scas
cmpsb
xchg
pop
add
popf
arpl
gs
idivb
movsl
push
test
cmp
xchg
dec
mov
push
mov
lcall
fsts
dec
sbb
pop
fcmovnu
stc
mov
bound
test
js
das
jl
inc
fistpl
mov
stc
jo
jmp
dec
je
test
popf
out
xor
sbb
mov
push
cmp
cmpsl
ret
insl
mov
and
orb
or
shlb
xchg
enter
pop
orb
mov
mov
adc
fisubl
call
jne
fsubrs
roll
dec
or
mov
bound
fwait
arpl
popf
in
mov
mov
adc
pop
xor
arpl
faddl
outsb
mov
push
adc
jne
pop
push
mov
pusha
std
mov
pop
pushf
dec
cmpsl
xchg
dec
mov
fyl2x
hlt
mov
je
xchg
lret
pop
inc
and
outsb
stos
push
movsb
push
mov
pop
or
push
clc
mov
sbb
lahf
mov
dec
push
or
dec
cmp
cmp
stc
jmp
cmp
xchg
stc
stc
pop
ds
mov
lods
test
fwait
xor
push
sar
fsub
fists
into
jns
addr16
sti
xor
daa
mov
hlt
adc
mov
push
stos
nop
adc
mov
xchg
loope
mov
lcall
into
sbb
ljmp
adc
mov
push
pop
jno
lock
lahf
pop
bound
loope
mov
mov
mov
adc
mov
xor
popa
mov
and
ficomps
mov
popf
lret
mov
lret
xchg
cmp
mov
push
xor
mov
movsl
ss
add
inc
test
pop
xchg
dec
mov
dec
arpl
xchg
xor
mov
lea
jmp
cmpsb
nop
cmp
or
inc
xlat
fistps
js
rcrb
mov
out
mov
push
rcr
jbe
pop
jns
sti
shl
adc
sbb
aam
jle
lods
xlat
mov
mov
cwtl
cmp
imul
push
dec
enter
lcall
iret
inc
mov
hlt
test
jne
cmp
mov
jne
dec
fsts
shl
pop
or
nop
push
sub
or
ss
jne
movsl
and
sub
iret
mov
in
ljmp
mov
xchg
jecxz
sub
rorb
pushf
dec
cld
xchg
sarl
sbb
inc
imul
mov
jbe
pop
adc
jnp
push
clc
mov
inc
mov
mov
and
pop
cmp
fcoms
cmpsl
test
pop
rcrb
push
mov
mov
inc
jae
xchg
fistpl
jo
adcb
lods
inc
cs
fucomi
mov
out
scas
fwait
push
enter
scas
fimull
call
mov
in
cmp
mov
inc
mov
out
and
cmp
push
aas
fwait
lret
in
mov
mov
xchg
mov
fnstcw
mov
mov
lock
or
cmp
xchg
sub
xchg
out
loope
inc
movsb
inc
mov
repnz
and
mov
test
cmc
fistl
pop
mov
out
push
xchg
mov
inc
sbb
test
lcall
pop
xchg
adc
cwtl
imul
push
lcall
mov
sub
cmc
sbb
inc
push
cld
test
mov
xchg
fcoms
sbb
xchg
test
cmp
test
bound
fcmovne
xchg
fwait
adc
or
dec
xchg
sbb
leave
inc
andl
cli
loop
sbb
leave
loop
xchg
dec
add
test
addl
mov
fwait
and
inc
cwtl
dec
xor
sar
cwtl
inc
gs
fnstsw
mov
ds
mov
sti
sti
and
or
loopne
hlt
pop
sub
and
cltd
inc
std
push
and
sarl
jns
fiaddl
les
fsubrs
popf
mov
cmp
jp
add
mov
lock
xor
or
or
sbb
leave
loopne
lret
add
dec
ljmp
cmpsb
push
mov
xchg
add
fxch
push
test
fists
inc
jp
cmp
jae
lret
inc
sub
in
cmp
shlb
mov
fcoml
rcrb
pop
xor
mov
in
lds
jg
jmp
lock
test
in
cmp
mov
and
rcl
jb
gs
sbbb
in
mov
mov
or
scas
lea
es
leave
cmpb
xor
loopne
hlt
je
nop
enter
in
faddp
mov
inc
mov
insl
sbb
cltd
repnz
pop
adc
rclb
jns
pop
mov
test
add
mov
add
mov
cltd
je
lock
lock
adc
fadd
xor
popa
fwait
ret
imul
stos
lds
push
rcrb
jbe
mov
popf
push
mov
fs
movsl
dec
mov
mov
in
bound
lods
add
mov
outsb
lods
scas
fistps
sub
in
popf
mov
push
mov
lods
pop
pushf
jnp
adc
movsb
mov
mov
jecxz
dec
jg
or
push
lds
jo
or
sbb
rclb
mov
xor
rclb
jl
sbb
rol
in
pop
cmp
jne
mov
mov
int3
and
sbb
push
jp
adc
jne
cmp
sahf
dec
mov
sbb
shll
mov
repnz
mov
lret
jecxz
push
cwtl
cmp
fstpt
mov
ss
and
cmpsl
mov
nop
pop
bound
lcall
test
movsb
shr
pop
clc
scas
es
jns
data16
xchg
jae
mov
push
int3
in
or
arpl
daa
jno
dec
inc
cs
sbb
xchg
imul
xchg
adc
pop
shl
sbb
inc
adc
add
push
leave
loop
loop
inc
shlb
lods
push
sub
inc
sbb
mov
mov
or
loopne
cwtl
mov
fbstp
adc
mov
aam
js
out
mov
test
lea
and
xchg
and
sbb
add
xchg
cmp
xor
sbb
xchg
movsb
repz
ret
mov
test
or
in
imul
jg
adc
lcall
or
shrb
mov
stos
push
push
pop
jno
pop
pop
scas
mov
jle
jo
scas
adc
lret
popf
or
mov
xchg
test
bound
das
inc
scas
xchg
xchg
sti
fisubrl
shrl
jne
gs
push
scas
dec
push
pushf
sahf
sbb
sub
test
mov
jmp
mov
fs
dec
mov
inc
pop
xlat
pop
popf
lret
das
test
call
xchg
push
mov
stc
pop
mov
sbb
movsb
fcoml
fidivrs
rcrl
cmpsb
inc
cmpsl
ffree
pop
test
mov
sbb
push
adc
or
xchg
addr16
dec
cmpl
xorl
std
pop
loopne
insb
inc
fwait
pop
sbb
mov
inc
jbe
mov
stos
insl
popa
mov
mov
or
adc
sbb
add
frstor
in
push
jne
xor
aaa
stos
test
icebp
mov
pop
sbb
dec
pop
sbb
add
or
or
test
xchg
dec
shll
jne
outsl
mov
jno
shrb
cltd
fstpl
sbb
cmp
push
mov
jmp
dec
ret
leave
loop
in
nop
cwtl
mov
in
scas
out
adc
out
jge
sbb
sub
call
sahf
stos
xlat
insb
jbe
int3
loopne
inc
and
es
cmc
mov
adc
outsb
aaa
popf
mov
mov
push
adc
and
inc
fdivs
dec
lock
out
mov
push
jae
cs
or
or
call
lea
and
jns
jp
sub
mov
sbb
pop
ljmp
inc
leave
push
sbb
hlt
ret
xor
dec
movb
arpl
mov
imul
pop
jno
mov
dec
std
ljmp
popf
arpl
add
xchg
mov
scas
test
int
mov
mov
adc
sub
xor
popa
jne
mov
ja
aas
lahf
inc
jge
mov
or
mov
js
pop
lds
mov
aas
add
add
subl
je
mov
xchg
pop
adc
cmp
xchg
adc
push
cmpsl
jnp
cmp
inc
cltd
lods
jne
lahf
jg
inc
cmp
adc
cmpl
negb
dec
mov
mov
mov
mov
lcall
mov
stos
ret
js
lods
mov
push
cmpsl
scas
mov
ds
mov
cltd
or
jp
mov
neg
sub
orb
cmp
push
mov
push
push
push
cmpsl
push
push
mov
pop
insb
push
cmp
outsb
push
mov
and
xor
adc
dec
mov
xor
dec
xor
sub
dec
mov
jne
pop
xor
and
dec
mov
mov
outsl
cmp
mov
pop
dec
mov
cmc
cld
jg
inc
inc
xor
adc
pop
add
inc
mov
xor
invd
inc
inc
xor
inc
mov
sbb
and
mov
mov
das
sbb
mov
dec
inc
mov
hlt
jl
pusha
jo
cmp
pop
fs
mov
push
push
lods
xlat
insb
jbe
mov
jo
pop
ds
xchg
int
je
pop
mov
js
pop
aas
cmpsl
xlat
in
idivl
mov
inc
pusha
push
cmp
cmove
cmp
pop
sbb
test
pop
sarb
adc
mov
add
sub
cmc
sbb
hlt
loopne
test
cmp
dec
cmp
mov
jecxz
xchg
stos
lds
stos
stos
inc
lcall
xchg
mov
fstl
mov
in
cmp
jl
sbb
jnp
or
addl
ret
jmp
pop
stos
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
and
pop
cli
call
fwait
mov
stos
xchg
out
mov
cmovno
or
xchg
dec
inc
xor
inc
cmp
insb
sbb
mov
xor
addl
push
dec
sbb
pushf
aas
mov
jnp
hlt
leave
add
sbb
test
lcall
lret
lret
mov
and
push
nop
ss
mov
mov
add
scas
mov
xchg
ffreep
jg
xchg
mov
popf
lret
fldcw
movsl
pop
sbb
push
fsubrs
jge
or
gs
movb
cmp
fisubrl
dec
enter
fisubrl
jnp
inc
mov
mov
pop
pop
adc
or
cmp
xchg
mov
xchg
imul
jns
call
jo
sbb
repz
stos
jge
dec
cmc
mov
jl
loop
dec
inc
ds
ret
dec
mov
sub
mov
cmc
xor
pop
mov
sbb
xlat
call
pop
mov
loopne
out
and
sbb
adc
jge
dec
out
jb
and
push
pop
sub
add
shr
dec
out
or
mov
sahf
jp
aad
pop
xchg
icebp
ss
push
aad
pop
addl
bound
out
scas
mov
inc
movsb
fnstcw
sbb
aaa
push
ja
movsb
mov
cld
movsl
jae
fidivl
cmc
jno
dec
push
insb
mov
adc
or
push
xor
xchg
pop
add
add
adc
push
xor
ret
mov
jbe
jle
mov
add
popa
or
and
andl
cmp
xchg
adc
or
cmp
adc
mov
jbe
xlat
and
mov
mov
or
sbb
push
ret
mov
mov
adc
enter
popa
shr
sub
xchg
sub
adc
ret
fcom
cld
lret
cltd
flds
aam
call
ret
pop
adc
popf
movsl
pop
sbb
and
push
adc
in
decb
fadd
jnp
cltd
rorb
mov
repnz
lock
cmpsl
push
sarb
imul
sbb
inc
push
cld
xor
in
dec
mov
xor
pop
mov
rcr
nop
sbb
shlb
lcall
sahf
sub
stos
inc
cld
jp
add
mov
xor
aaa
mov
bound
ficoms
pushf
out
pusha
mov
push
xor
fisttpll
or
push
addl
andl
jbe
or
xor
sub
out
cli
xor
enter
ret
mov
mov
push
pop
out
and
cmpsl
je
fdivs
and
mov
dec
add
mov
lea
push
ja
fsubr
sub
sbb
dec
mov
lcall
mov
xchg
jp
adc
jno
test
ffreep
xor
mov
mov
cs
aas
fsubp
or
nop
lret
xchg
sub
adc
leave
dec
push
clc
sub
in
cli
lret
mov
fs
test
jae
dec
pop
jno
mov
ret
push
rorb
push
fisttpl
cmp
mov
das
imul
and
pop
xor
lahf
inc
jge
mov
loope
repz
lret
std
cli
jnp
inc
mov
push
inc
sbbl
push
daa
out
mov
frstor
and
xchg
mov
xchg
mov
pusha
jo
jnp
cmp
inc
cltd
lods
jne
dec
inc
and
cmp
or
cmp
xchg
sub
cmp
in
cmc
fcompl
aad
repz
call
or
jno
cmove
in
mov
push
sahf
repz
mov
or
dec
inc
pop
lret
mov
test
shll
leave
hlt
cltd
adc
sub
pop
mov
sbb
mov
insl
sahf
cli
idivl
in
push
data16
pop
xor
sbb
inc
sbb
imul
sub
imul
loope
movsb
std
xchg
int3
stos
pop
fwait
jp
xor
xchg
xor
lahf
into
adc
mov
cmp
jmp
push
ds
adc
addb
jp
dec
xor
or
xor
enter
fidivrl
jnp
clc
popa
jge
ja
sti
repz
gs
in
adc
jle
lret
dec
mov
sbb
xchg
mov
xchg
xor
mov
cmp
or
fimuls
mov
arpl
mov
add
in
and
sub
mov
stos
add
rcrb
imulb
jae
inc
sbb
jge
les
push
test
sub
ficomps
call
rep
add
or
sbb
sub
adc
cmp
lods
jne
stc
xor
jbe
lods
fidivs
ficoml
jg
mov
push
or
pusha
loopne
and
in
jecxz
popa
xadd
frstor
mov
pop
addl
cmpsb
ret
lret
insl
jecxz
lods
add
jecxz
sbb
int
jecxz
mov
mov
clc
mov
jle
roll
jle
enter
add
xchg
cmp
xor
sbb
xchg
movsb
repz
ret
mov
pop
and
inc
mov
pop
sbbl
gs
cmp
mov
clc
scas
shlb
adc
lret
inc
stos
cmp
popf
dec
mov
mov
in
cmpsl
stos
jnp
add
leave
cmp
lahf
dec
mov
ja
pusha
in
test
pop
jno
add
sub
data16
or
add
add
ja,pn
jae
repnz
lods
movb
add
test
xchg
jp
mov
xchg
es
shlb
push
js
pop
clc
mov
adc
arpl
int
pop
cli
pushl
fisubs
jle
out
jp
inc
cwtl
dec
xor
cmp
sub
xchg
dec
pop
pusha
jo
rcr
call
jle
and
cmp
and
mov
cwtl
inc
sbb
daa
mov
pop
xor
jns
jb
mov
movsl
mov
jns
sti
mov
hlt
mov
inc
test
pop
mov
mov
sbbb
imulb
cli
xlat
dec
pop
inc
inc
mov
push
dec
sbb
sub
inc
jae
pop
dec
pop
ret
fidivl
dec
pop
or
jae
xchg
push
adc
or
dec
mov
stos
mov
dec
sub
pop
dec
mov
xchg
cltd
aam
xor
lahf
inc
pusha
fists
mov
int3
mov
add
popa
or
insl
sbb
inc
sbb
xchg
xchg
fldl
mov
xor
fwait
xor
or
adc
aad
jle
xchg
popf
add
cmpsl
sti
ljmp
xlat
xchg
leave
sbb
sbb
cmp
mov
xchg
test
jle
fsubrs
out
cmc
xor
mov
std
pop
adc
clc
lret
lcall
xor
and
hlt
ds
scas
ja
fcomi
jne
pop
dec
aaa
add
ja
pop
rcrb
jecxz
sbb
lret
movsl
mov
push
aaa
lahf
lret
adc
push
out
stos
lret
lcall
sbb
hlt
loopne
test
les
sarl
xor
cltd
add
fisubrl
lahf
or
mov
mov
sbb
popf
or
push
mov
cld
sub
and
loope
sti
insb
push
mov
aaa
or
sub
inc
lcall
rcr
cmp
pop
out
loope
fwait
xor
lods
mov
sbb
xchg
and
sub
pop
mov
mov
mov
push
or
daa
dec
dec
or
sub
mov
daa
cs
cmc
hlt
cwtl
imul
mov
or
jns
pop
mov
test
add
inc
xlat
mov
aaa
lock
pop
jo
pop
rcrl
mov
cli
jp
frstor
fs
sbbl
push
test
dec
sbb
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
or
pop
pop
xchg
or
add
sub
scas
xchg
adc
mov
movsb
xchg
pushf
cmp
sbb
pushf
jp
xor
adc
jle
xor
icebp
mov
and
xor
inc
dec
mov
inc
stos
dec
adc
add
adc
cmp
in
inc
pop
jb
adc
mov
insl
sti
insl
lea
xor
fwait
pusha
and
mov
aaa
fs
adc
aaa
mov
mov
jne
dec
mov
out
hlt
std
ret
pop
sarl
shll
int3
bound
lods
imul
mov
mov
pop
ret
ret
mov
jns
xchg
int3
pop
add
orb
mov
cltd
dec
or
stos
jno
or
rol
inc
sarb
jge
aad
std
mov
jl
clc
pop
aaa
loope
in
xlat
sti
sahf
sti
out
mov
dec
push
inc
pop
in
fs
in
push
dec
sub
mov
push
xor
enter
iret
jne
les
xorb
pop
aam
fcmovnu
xchg
pop
xchg
jnp
cmp
sbb
sub
ffreep
cmc
xor
dec
sbb
in
cmp
mov
test
dec
aam
inc
les
clc
jp
movsl
ret
ret
lods
ja
cmp
sub
xchg
mov
jae
std
and
mov
cltd
leave
loopne
or
cmp
ds
jmp
sahf
xchg
jne
leave
pop
push
dec
lahf
cmpsl
inc
xor
into
or
les
pop
sub
sbb
inc
pop
movsb
cltd
std
pusha
mov
adc
andl
loopne
popa
rcrb
notb
sub
pop
xor
mov
mov
sbb
movsb
lahf
mov
lret
jmp
sbbb
sbb
movb
shr
pop
cmpsl
jno
dec
push
jl
rorl
fsts
pop
pop
jb
cmpsl
or
jge
lret
movsl
or
insl
mov
jecxz
mov
pop
mov
int3
xchg
jnp
push
xchg
sahf
cmp
std
cli
jnp
inc
mov
mov
inc
sarb
js
push
or
test
les
xchg
testl
mov
fcompl
movsb
ret
gs
outsl
scas
add
std
mov
arpl
add
fwait
inc
dec
mov
sbb
and
cmp
dec
pop
fdivp
test
or
xor
push
loop
stos
dec
and
mov
mov
test
xor
mov
lret
jecxz
pop
cwtl
mov
js
repnz
xor
lds
push
pop
imul
add
fwait
or
sub
addb
mov
pop
mov
xchg
sahf
add
xor
add
mov
dec
and
jp
rorl
mov
mov
mov
or
mov
popf
adc
and
or
xor
xchg
mov
leave
inc
sbb
push
mov
idivl
test
dec
xor
mov
inc
lret
dec
cmp
mov
popf
cmpsb
push
inc
insl
xchg
imul
lahf
cmpsl
push
test
sti
std
mov
sti
and
or
loopne
dec
inc
loop,pt
cmp
inc
xor
test
cmc
xor
movsb
stos
sti
mov
mov
xlat
mov
shrl
xchg
iret
jecxz
int
push
ds
aas
dec
ret
repz
fwait
jo
call
lods
dec
sti
cmc
cld
imul
mov
popf
pushf
out
test
xor
aad
stc
sbb
cmp
jp
mov
lahf
mov
mov
jae
cli
arpl
pop
pop
cmp
add
je
cmp
jge
lcall
and
scas
sbb
push
sahf
xchg
js
add
jg
sub
sub
in
cmc
xor
adc
inc
andl
sbbb
pop
and
mov
lret
orb
xchg
push
mov
ljmp
push
jb
fidivs
imul
jmp
test
dec
int3
add
inc
inc
mov
jo
jmp
movsb
lea
pop
ljmp
lods
nop
int
cmp
dec
inc
iret
lds
les
movsl
add
push
dec
sbb
add
addr16
lea
popf
cmp
pop
sbbl
stos
push
test
lock
ss
cmp
fildll
jae
fcmovne
push
mov
in
mov
pop
sub
mov
and
xchg
lcall
adc
jns
inc
sbb
xor
mov
scas
shr
movsb
push
xchg
cmp
bnd
mov
sti
fxch
gs
rolb
lret
inc
aam
out
mov
mov
xchg
sub
test
je
cmp
pop
test
nop
sub
push
jmp
fistpll
fwait
fistl
fnstenv
test
push
or
js
cld
or
lea
cmp
sbb
xchg
movsb
repz
ret
mov
test
clc
int3
mov
mov
sub
mov
add
pop
or
or
fcomi
lcall
jno
dec
lds
pop
stos
push
and
ja
xchg
repz
das
mov
negl
jae
fldt
pop
std
cmpsl
bound
or
xchg
lret
mov
pop
lods
lret
or
ret
rcl
lcall
mov
lods
inc
shll
or
scas
aaa
mov
cli
jnp
inc
mov
push
inc
sbbl
push
daa
out
mov
frstor
and
xchg
mov
jo
movsl
mov
loope
cmpsl
ret
fincstp
clc
les
mov
cmpsl
aas
stc
int3
add
jp
daa
repnz
dec
sbb
pop
sub
js
test
xor
sbb
xchg
movsb
repz
ret
mov
xlat
mov
cmp
mov
mov
cltd
js
mov
mov
mov
mov
fdivl
fs
dec
mov
jg
js
daa
cmc
lret
inc
sub
jmp
mov
jmp
in
mov
negl
stos
cmp
xchg
test
lods
or
cmp
adc
cltd
mov
adc
mov
add
repz
xor
add
cmp
ret
lahf
sahf
adc
jo
jg
dec
fsubl
xchg
addps
adc
inc
sarb
dec
jbe
push
daa
xchg
int
dec
aam
stc
repnz
ljmp
int
int
cmp
jg
mov
or
pop
fdivrl
xor
cmpl
jb
sbb
xchg
inc
maskmovq
testl
out
push
adc
ret
xchg
mov
inc
add
sarb
pusha
pop
loopne
mov
out
xchg
iret
sbb
lds
out
inc
sbb
add
je
inc
sbb
iret
cmpsl
ret
test
inc
clc
lds
jns
lds
nop
clc
xor
shll
inc
lock
xchg
mov
pop
clc
jmp
pop
cli
mov
fisttpll
xchg
popl
movsb
test
sbb
or
xchg
aad
mov
mov
sahf
jns
inc
mov
or
lahf
scas
movl
out
js
sarb
xchg
adc
addl
int
push
stc
inc
push
cmp
push
mov
cmp
xchg
nop
nop
inc
sbb
sub
pop
cli
call
fwait
mov
stos
xchg
out
mov
inc
inc
mov
stc
or
add
mov
mov
sbb
inc
inc
jbe
jns
movsl
repz
icebp
dec
inc
mov
in
and
push
or
ds
and
mov
xor
and
mov
add
sbbl
outsb
xor
mov
stos
mov
add
sub
cmc
sbb
je
sahf
das
xchg
stc
cli
in
test
pop
xor
jecxz
insb
ret
xor
lods
out
cltd
or
adc
mov
add
repz
xor
add
cmp
ret
lahf
sahf
adc
mov
sub
icebp
leave
insl
xor
pop
aaa
cwtl
hlt
jl
pop
mov
lea
fstpt
mov
gs
push
aas
fwait
lret
in
mov
mov
cmp
lret
xor
fwait
xchg
xchg
inc
cltd
enter
or
cmp
mov
sbb
cmp
or
sub
mov
pop
adc
inc
inc
mov
mov
dec
sbb
jnp
std
xor
mov
push
call
push
lock
lock
lret
or
mov
fmull
and
gs
mov
xor
shll
inc
lock
xchg
lods
lret
fucomp
xor
mov
mov
jmp
mov
xchg
dec
mov
or
les
xchg
lret
outsl
cmp
pop
mov
int3
inc
sbb
xor
bnd
out
dec
sysret
leave
loop
inc
aam
repnz
jle
cmp
jo
pop
xchg
aas
insb
xor
mov
dec
aam
cmp
fldl
or
fwait
cmpsb
fdivs
sahf
lock
cmp
enter
jecxz
int3
or
mov
mov
imul
fsubrp
cwtl
cmp
inc
int3
fwait
cli
movsl
inc
jmp
xor
and
and
inc
divl
mov
adc
ret
cmp
sbb
pop
dec
dec
cmp
test
cmpsb
repnz
nop
xor
sub
pop
stos
push
outsl
jno
ss
mov
in
lahf
cwtl
pop
stc
jo
repz
dec
stos
fistps
pop
jbe
insl
mov
pusha
add
push
das
cmp
aad
inc
xchg
xchg
adc
dec
cli
notl
cltd
ret
cs
or
fildll
iret
pop
imul
leave
dec
js
pop
pop
hlt
sub
idivl
out
es
or
add
ds
ja
in
test
xchg
repz
xchg
xchg
cld
xchg
and
cmp
mov
dec
adc
out
push
test
add
sbb
add
andb
js
sbb
mov
in
cmc
hlt
cwtl
pop
hlt
xor
jbe
pop
mov
xchg
push
add
daa
sahf
div
fwait
xor
dec
sti
lret
mov
mov
shlb
daa
mov
cli
jp
push
xlat
mov
push
decb
and
test
xchg
mov
fisubl
stc
stos
lock
arpl
lds
inc
push
push
xchg
aad
inc
imul
test
gs
pop
xchg
xlat
in
imul
add
lds
xchg
test
int
lea
jge
scas
aaa
or
xchg
mov
add
mov
add
out
mov
or
push
imul
jae
mov
cli
fwait
movsb
mov
test
cmpsl
icebp
dec
leave
jb
repnz
cmpsb
sti
sti
and
fildl
or
xlat
pop
jns
fdivs
mov
mov
imul
mov
mov
fwait
cmp
loopne
out
and
fucomip
repz
pop
test
cmc
lret
hlt
mov
adc
add
ror
sub
jo
imulb
and
jnp
lock
loop
mov
test
pop
loope
adc
stc
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
cmp
dec
fiaddl
mov
pop
pushl
popf
xor
or
fwait
pushf
adc
xchg
fwait
jnp
dec
pop
mov
bound
jmp
mov
xchg
cltd
fnstsw
add
add
js
test
dec
mov
push
xorl
mov
out
push
fidivrl
mov
sbb
push
lds
aas
daa
ret
mov
mov
sti
and
fildl
or
int
imul
test
insl
sub
fcoms
call
orb
push
cmc
clc
and
xchg
mov
repnz
mov
adc
sahf
test
ret
test
dec
mov
pop
sarb
jp
mov
imul
shlb
dec
mov
cmp
mov
sbb
adc
adc
pop
xor
and
or
xchg
xchg
nop
stos
jb
ljmp
sbb
add
aad
mov
push
or
lret
xchg
ljmp
push
cmp
pop
mov
add
shlb
pop
cltd
lcall
inc
dec
xor
sbbl
shl
in
inc
fst
mov
test
lahf
es
fstps
je
or
loope
jl
sub
push
into
shrb
mov
popa
mov
inc
roll
sbb
movsb
cs
adc
cmpsb
imul
imul
mov
std
jne
mov
repnz
and
jo
hlt
and
lahf
inc
cltd
push
push
hlt
lods
cli
mov
iret
xchg
mov
test
pusha
adc
mov
mov
decl
and
lret
mov
push
xor
cwtl
sbb
insl
mov
hlt
mov
adc
lock
lods
out
jg
fldenv
sub
cmp
sbb
mov
shl
mov
decl
adc
js
ret
rcrb
repnz
addb
sub
inc
mov
mov
out
test
push
mov
pop
jae
inc
insl
xchg
inc
inc
and
xchg
mov
fdivs
pop
ja
mov
adc
push
mov
sbb
repz
cli
int
imul
mov
fbstp
test
aaa
in
test
xor
and
and
inc
xor
pop
add
mov
mov
mov
cltd
je
lds
leave
fsubrl
rorl
das
jp
jmp
les
lcall
sbb
hlt
loopne
test
cmp
dec
cmp
mov
jecxz
xchg
stos
lds
testb
fstpl
push
push
mov
add
push
fcomps
push
or
fstp
adc
out
inc
je
sarb
aas
cmpsl
xlat
in
test
or
mov
mov
xor
mov
rcrl
jb
mov
or
mov
les
cmp
mov
jnp
dec
sbb
fwait
lea
enter
hlt
mov
xchg
mov
xor
xchg
shrb
in
jne
xchg
adc
pop
cmp
idivl
push
and
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
xor
fstpt
mov
ss
and
cmpsl
mov
nop
pop
loop
lret
sbb
sbb
sbb
test
clc
test
rorl
inc
rorl
inc
bound
push
out
test
xor
add
inc
add
mov
outsl
les
cmp
fs
fmull
mov
jl
pop
xchg
std
push
fucomi
repnz
add
and
sbb
pop
inc
sbbl
push
dec
mov
test
adc
test
mov
ljmp
popf
mov
xor
push
gs
fwait
pop
mov
mov
addr16
aaa
ret
testl
test
push
bound
mov
sbb
mov
dec
push
gs
add
cwtl
dec
and
mov
mov
test
xor
mov
lret
jecxz
pop
cwtl
sub
pop
sub
xor
sbb
mov
leave
fsubrl
repnz
sbb
fistpl
sbb
test
nop
fildll
push
loopne
fisubrs
aaa
mov
idiv
mov
pop
shrl
lret
cmp
or
push
scas
mov
sub
or
jo
fstpt
clc
adc
or
sbb
flds
fdivrl
sti
and
ret
lods
addl
jge
xchg
gs
test
les
fsubs
out
test
xchg
and
mov
xchg
xor
cmpsl
cmp
imul
out
mov
scas
adc
ret
xchg
sbb
sbb
cs
ja
es
shlb
call
les
loopne
aam
sub
jnp
mov
imul
mov
fwait
lods
enter
or
ret
sti
and
push
fs
push
cmp
sub
cmc
sbb
dec
push
cld
sub
fucom
leave
mov
ret
mov
pop
daa
or
xchg
sti
pop
mov
gs
dec
les
sbb
cmpsl
sub
pop
aad
cmp
test
jle
xor
sbb
cwtl
mov
add
and
xchg
or
ret
rclb
mov
inc
loope
inc
mov
xchg
mov
push
jle
mov
mov
hlt
std
mov
sti
and
flds
or
fstp
imul
test
or
into
pop
stos
shrl
mov
dec
call
lods
inc
ret
adc
fsubr
jns
cwtl
dec
pushf
mov
inc
pop
xchg
daa
ljmp
xor
imul
shrl
mov
jno
mov
inc
and
dec
repz
ljmp
jp
xchg
dec
retw
push
cmp
cmpb
xor
mov
jp
add
sbb
sahf
and
sbbb
jg
movsb
xlat
fucomi
mov
stc
into
scas
je
out
push
jnp
adc
addl
decl
xor
daa
xchg
mov
inc
les
out
push
mov
sub
fdivrs
inc
sbb
js
divl
push
fisubs
xor
shlb
xor
mov
and
orl
movsb
push
movsl
or
fnstenv
lods
shl
pop
sysret
test
sub
lods
sub
or
lahf
iret
xchg
std
adc
add
push
cmp
sbb
add
scas
daa
mov
pop
dec
mov
pop
ljmp
xchg
int3
addr16
les
cmpsb
arpl
insl
sahf
mov
push
dec
mov
repz
mov
and
and
std
fisttpll
xchg
dec
add
ds
inc
lods
pop
stos
jge
sbb
pop
stos
cmpsb
xor
jb
loopne
sbb
cwtl
inc
sbb
mov
fucomi
mov
stc
into
scas
je
mov
xor
pop
sub
addl
add
daa
lret
mov
or
and
xchg
imul
push
popf
mov
mov
flds
mov
test
popf
testb
je
cmp
push
loopne
push
pop
arpl
adc
cltd
loop
cmp
mov
dec
ret
das
or
dec
push
sub
push
xchg
divb
cmp
add
or
fstl
add
movhps
mov
mov
mov
cld
jg
add
and
fs
inc
add
arpl
test
adc
jne
sub
mov
cmpsl
mov
bound
push
test
ficompl
adc
test
fisttps
xchg
sbb
pop
lret
push
push
adc
mov
adc
cltd
mov
in
sbb
idivb
int3
xor
enter
inc
shlb
testl
or
jo
jmp
sbb
mov
out
push
push
lods
xlat
push
fidivrl
add
mov
mov
popf
idivl
mov
sti
and
filds
or
xlat
pop
jns
fdivs
mov
mov
imul
mov
arpl
mov
daa
pop
cmpb
mov
jecxz
popa
add
cmp
mov
mulb
adc
fisttps
ds
add
movsl
clc
out
pushf
fs
inc
sbb
xchg
push
sub
sbb
adc
push
dec
xor
jp
jge
cmp
cmc
lret
cmpsl
mov
lcall
cmp
adc
cltd
cmpsb
adc
mov
add
scas
mov
cmpsb
sahf
xor
ret
mov
fmull
sbb
js
sarb
rcrb
adc
and
add
mov
jp
adc
push
adc
xchg
imul
lahf
cmpsl
push
test
sti
std
mov
sti
and
or
es
je
cmp
add
mov
sbb
daa
aam
ljmp
xor
cmp
jne
aam
test
sbb
fsubrs
popf
mov
cmp
jp
add
pop
dec
sbb
add
push
pushf
mov
pop
js
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
adc
dec
dec
js
fldenv
fucomp
jae
jns
mov
popf
arpl
add
test
outsb
push
adc
idivb
push
jne
or
ja
lds
jns
or
or
xchg
xor
dec
mov
xchg
js
popf
test
mov
addr16
mov
or
sbb
mov
fwait
push
dec
mov
jl
mov
inc
push
mov
fcomp
mov
scas
lcall
cmpsl
ret
xchg
fnsave
cmp
jne
mov
movsb
and
xchg
dec
xorl
lret
xor
popa
push
sub
and
dec
xor
cmp
loop
cmp
pushf
out
and
mov
daa
stc
ds
stos
ja
dec
xor
dec
movsb
jbe
adc
ret
cmp
inc
int
xorb
mov
mov
fs
ficompl
leave
pop
loope
adc
stc
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
cmp
cmpsl
faddl
mov
outsb
lods
movsl
fistps
sub
in
popf
mov
push
mov
lods
pop
pushf
fninit
adc
adc
xor
scas
mov
mov
loopne
dec
shlb
lret
or
dec
or
add
mov
pusha
pop
int
pop
test
xchg
cwtl
or
adc
movsb
cli
push
cwtl
lock
divl
out
mov
mov
fs
pop
mov
rcrl
int3
pop
sub
pusha
or
xchg
sub
popf
xchg
inc
mov
pop
add
cwtl
dec
and
mov
mov
test
mov
arpl
jecxz
popa
mov
or
imul
xor
cltd
and
gs
mov
push
aaa
pop
inc
in
lods
or
mov
fldl2e
je
sahf
das
xchg
stc
cli
in
test
pop
xor
test
inc
sahf
cmp
mov
cmpsb
xor
jb
loopne
sbb
pushf
and
sbbb
jle
mov
js
in
movsb
lahf
mov
sub
xchg
cmp
and
adc
inc
push
inc
test
call
push
mov
xchg
mov
stos
test
pop
sahf
cmpsb
enter
cmp
fwait
lea
xor
andb
cmp
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
aam
mov
mov
xor
mov
fidivrl
pop
cmpl
leave
add
xorb
mov
mov
cmpb
sbb
fs
mov
sahf
push
test
test
movsb
fistps
je
sahf
das
xchg
stc
cli
in
test
cmp
dec
ret
mov
outsb
lods
cmpsl
fistps
sub
in
popf
mov
push
mov
lods
pop
pushf
sti
scas
adc
aad
cmc
jge
xchg
push
mov
xchg
repz
rcll
dec
aam
xchg
mov
mov
cmpsl
adc
mov
lret
in
mov
mov
cmp
lret
fwait
xchg
xchg
inc
cltd
enter
mov
enter
xchg
xor
dec
arpl
mov
int
pop
jp
dec
mov
pop
xor
and
pop
stos
shll
andb
pop
addb
adc
mov
dec
sahf
push
arpl
jecxz
insl
mov
or
popa
cwtl
mov
orb
xor
stc
and
mov
sbbl
dec
or
dec
mov
sub
cmc
sbb
dec
push
cld
test
fucomip
jo
fnstenv
or
mov
or
daa
or
mov
movsl
or
push
dec
mov
xchg
faddl
xor
mov
data16
cli
cli
repz
lret
std
cli
jnp
inc
mov
inc
inc
sbbl
push
daa
out
or
push
xchg
dec
mov
lahf
adc
cmp
fidivl
dec
push
lods
mov
pop
cmp
testl
fmulp
iret
sbb
push
sub
or
hlt
jl
dec
mov
int
imul
inc
mov
idivl
shr
repz
ret
imul
jns
aas
in
and
cmc
enter
rcrb
into
adcl
popa
lcall
dec
cmpsl
mov
cli
pop
and
loope
dec
mov
inc
xor
rclb
and
lds
cmp
push
mov
push
dec
fidivrs
pop
std
cmpsl
test
xchg
mov
idivb
setae
rorl
mov
adc
addr16
jae
aaa
jle
jmp
sub
xchg
and
or
js
pushf
mov
js
jge
xchg
lahf
dec
js
nop
in
xchg
inc
xchg
pop
mov
jo
out
rorl
mov
out
push
mov
jo
cmp
and
mov
sbb
aaa
popf
iret
and
mov
mov
push
or
dec
or
mov
xchg
or
popa
mov
pop
cmp
sbb
or
mov
pop
add
or
pusha
xor
jnp
mov
aaa
mov
les
stos
inc
sbb
orb
inc
xchg
cld
arpl
dec
xor
sub
dec
ret
push
in
movsl
mov
sbb
ljmp
rcrl
movsl
xchg
xor
cmp
or
cmp
adc
pop
inc
cmp
scas
xchg
xor
dec
movsl
xchg
mov
mov
pop
mov
xchg
pop
push
shlb
das
pop
icebp
sub
sub
fcompl
stc
and
sbb
xchg
xchg
fbld
test
dec
aaa
sbbl
and
push
aam
xor
cmp
movsl
ljmp
test
sti
std
mov
sti
and
xchg
enter
mov
hlt
xchg
inc
sti
dec
inc
xor
mov
xchg
fbstp
push
repz
or
pop
divb
sub
add
xchg
std
mov
xchg
fidivs
lar
xor
fxch
ret
sbb
xor
jno
fsts
dec
pushf
dec
and
sbb
movsb
cmpsl
mov
xor
mov
mov
dec
add
bound
cwtl
xchg
sbb
outsb
push
inc
inc
cmp
adc
mov
arpl
pop
outsb
shrb
pop
mov
jb
xor
pop
cld
and
jbe
xor
mov
stos
cmp
and
mov
mov
cmp
sbb
mov
fwait
push
dec
mov
test
dec
aam
cmp
xchg
imul
pop
jns
stos
sub
cmpsb
fsubrs
shll
popf
outsl
out
add
fstl
or
sub
inc
inc
out
enter
cltd
mov
sub
cmc
hlt
jnp
xor
pop
lods
cmc
pop
movsb
push
push
sahf
sub
mov
push
in
addr16
aas
in
mov
mov
and
mov
aaa
xor
cltd
and
gs
mov
xor
shll
inc
lock
xchg
scas
lret
fucomp
xor
mov
mov
jmp
mov
xchg
dec
mov
idivb
push
test
testb
gs
fsts
mov
xchg
cmpsb
js
xchg
arpl
cld
jg
jle
sub
and
mov
or
aas
inc
sbb
add
mov
nop
xchg
and
sbbb
js
xlat
insb
mov
inc
sbb
pop
cmp
mov
pop
mov
shl
or
fmuls
leave
sbb
sbb
imul
lock
int3
nop
mov
jecxz
xchg
mov
mov
test
clc
aas
fidivrs
mov
xor
mov
rcrl
add
or
gs
rcrl
divb
push
idivb
dec
mov
scas
adc
cmp
cmp
aaa
fsts
and
pop
push
rcrl
jo
xor
add
idivb
or
sub
mov
mov
fstpt
push
pop
pushf
imul
cmpsl
popf
adc
into
mov
mov
loope
fnstsw
or
pushf
inc
repz
sbb
jl
pop
inc
sbb
add
sbb
mov
mov
fmull
fidivrl
xor
and
call
es
gs
out
out
or
mov
cwtl
or
and
mov
test
loopne
fwait
daa
adc
mov
cmc
ss
and
out
xchg
lods
mov
mov
lahf
cwtl
ss
cli
sti
pop
pop
inc
xchg
jns
cmpsb
dec
aaa
mov
inc
sbb
mov
nop
xor
int3
sbbb
pop
cwtl
icebp
lock
outsl
sub
inc
dec
jge
ss
jnp
sbb
mov
bound
push
cmp
or
push
inc
pop
mov
xchg
pop
inc
sub
mov
or
cltd
push
sub
hlt
xor
dec
jg
mov
push
ret
stc
sub
push
sbbb
cmp
push
test
or
jge
and
or
les
cltd
xor
clc
xor
scas
mov
xchg
inc
push
add
scas
pushf
cmp
cltd
out
push
dec
jnp
in
adc
push
push
jp
sub
adc
push
mov
test
push
sub
xlat
mov
loope
lcall
orb
mov
popa
test
lar
mov
int
bound
jnp
or
or
mov
and
ret
cmp
outsl
sub
mov
mov
leave
mov
and
xlat
std
int3
push
repz
out
mov
popa
xchg
in
adc
mov
push
outsb
lock
xchg
mov
pop
ret
movsb
push
sub
mov
sub
scas
jne
mov
xor
fs
xchg
cwtl
push
mov
enter
dec
icebp
rcl
cwtl
jp
int
or
mov
fwait
xor
fcomi
rorb
inc
add
mov
sbb
movsb
sti
fcmovnu
jno
rorl
sbb
push
pop
sbb
adc
xchg
sbb
dec
daa
sub
mov
fildl
add
stos
inc
mov
and
imul
jb
aas
fdivl
jge
pop
dec
aaa
add
mov
jp
or
xor
stc
testb
mov
jg
sbb
pushl
fwait
lods
push
sub
sbb
lahf
movsb
fldcw
sbb
scas
fisubrl
mov
cmpsl
xchg
fcoms
and
das
push
sbb
xchg
int
push
orb
fistpl
mov
scas
jb
sub
xchg
dec
arpl
ja
cmp
xchg
fistps
pop
ss
ror
add
mov
dec
xchg
pop
ds
sub
inc
xchg
pop
mov
push
out
lods
cmp
mov
test
xchg
pop
ffreep
pop
js
jb
jae
call
adc
ds
inc
mov
hlt
mov
jl
adc
mov
sbb
push
adc
adc
mov
idivb
clc
mov
inc
inc
jbe
jmp
xchg
ja
cmovp
adc
jae
mov
sbb
xor
xchg
sahf
aad
ja
adc
shlb
inc
add
int3
sbb
mov
cmp
sub
xlat
mov
dec
mov
mov
and
shr
xor
mov
js
pop
insb
push
jl
dec
les
push
pop
jmp
insl
cltd
push
cmp
les
sbb
pop
cld
sub
jbe
sub
mov
push
int3
or
xchg
push
or
adc
or
data16
fsubrs
xchg
cmpsl
jp
mov
scas
iret
aam
fwait
push
lods
xlat
push
sbb
xor
jne
jnp
mov
add
decb
iret
sbb
pushf
aam
aaa
and
mov
inc
ret
dec
inc
xor
mov
mov
xor
fdivrl
roll
xor
mov
jns
add
mov
mov
popa
sbb
push
pop
pop
or
mov
arpl
or
fcoml
cmp
mov
xchg
sbb
das
mov
sti
stos
fs
andl
fcomps
subl
jbe
jge
push
insl
dec
jge
or
push
jne
add
dec
fcompl
jb
scas
inc
mov
aad
xchg
pusha
push
cmp
xchg
push
mov
inc
xchg
pop
aas
cmpsl
es
or
loopne
mov
mov
sub
xchg
adc
sub
push
mov
ret
sub
stos
xor
pop
fs
push
add
out
lods
dec
push
adc
int3
mov
fsub
mov
add
mov
cltd
sahf
addr16
jbe
cmp
negl
dec
mov
mov
call
ja
sti
loopne
jmp
div
jge
pop
dec
aaa
inc
sub
dec
mov
and
fdivs
pop
dec
icebp
adc
inc
inc
add
arpl
test
pop
push
lods
push
es
adc
jne
pop
push
pop
aaa
push
jno
mov
dec
push
into
bound
int3
adc
test
push
addr16
mov
jge
push
push
add
cmp
roll
mov
adc
sub
jb
xor
pop
lcall
adc
push
into
pop
push
jbe
leave
in
popa
adc
xlat
in
mov
or
js
jns
js
xchg
test
mov
mov
mov
pop
mov
pusha
jo
sti
sbb
pop
data16
popf
mov
sahf
aam
aaa
push
jb
adc
hlt
jl
xchg
push
repnz
push
or
popa
mov
pop
pop
mov
jns
fdivrs
movsl
sti
fstl
inc
mov
out
jo
pop
iret
sbb
hlt
mov
arpl
dec
add
cmpsb
dec
mov
dec
adc
repz
and
dec
ret
jno
or
lcall
lods
push
sub
mov
sub
mov
sarl
xor
mov
mov
idivb
imul
mov
sub
dec
jns
xchg
mov
shll
inc
pusha
sti
iret
jmp
pushl
test
js
jmp
addl
sbb
jo
pop
icebp
mov
and
int3
sbb
aam
cmp
inc
movsl
cltd
jbe
mov
pop
ljmp
pop
xchg
pop
mov
out
xor
inc
iret
dec
inc
mov
out
mov
repz
xchg
dec
daa
cs
pop
das
or
jbe
lret
or
test
push
mov
into
xchg
sbb
and
jne
pop
dec
aaa
add
sbb
add
movsl
sbb
and
xadd
adc
add
rcrl
and
jae
lret
and
sbb
test
push
cmp
outsb
push
int3
ss
mov
push
inc
cltd
push
push
push
jne
imul
fwait
jnp
inc
in
cmp
out
out
push
fs
mov
mov
les
sbb
js
jg
inc
sbb
jp
jns
pop
xor
add
jbe
cmpsb
xor
lods
cmp
pop
imul
push
or
aam
dec
xorl
aas
sub
mov
and
int
push
mov
xor
inc
inc
jle
stos
lds
and
jb
daa
inc
mov
jmp
dec
jo
dec
inc
ffree
xor
cld
jg
divb
stc
testb
adc
sysenter
add
iret
or
mov
popf
xchg
dec
jmp
push
dec
lret
cmp
lahf
cmp
rep
mulb
xor
pop
xor
cli
dec
test
sti
loop
mov
dec
fs
decb
sar
es
mov
inc
pusha
iret
xchg
jl
jmp
iret
jmp
js
pop
xchg
sbb
mov
mov
fwait
push
dec
mov
pusha
push
mov
inc
aas
imul
ret
icebp
cld
mov
test
inc
sbbb
stc
fld1
jb
pop
aam
fcomi
jp
jne
mov
int3
pop
add
and
je
aad
popf
ja
add
mov
cmc
hlt
stc
jb
ja
mov
call
inc
sahf
shll
decl
lock
aas
or
in
clc
andb
outsb
push
add
and
xor
imul
mov
aam
test
mov
jecxz
cli
xlat
xchg
ret
stos
fsubr
lods
push
dec
mov
push
iret
mov
sbb
cmp
mov
nop
push
adc
add
or
adc
fwait
dec
sub
fwait
fwait
sbb
sbbb
adc
popa
adc
cwtl
into
adc
out
push
adc
insl
add
dec
out
sbb
out
stc
xchg
addr16
adc
int3
push
sbb
movl
popf
andl
fdivrl
jae
popa
imul
jno
sbb
in
repnz
and
cmp
or
lret
pop
jg
adc
sub
mov
pop
mov
test
add
imul
xor
hlt
mov
inc
mov
add
rcrl
test
popf
sbb
pmuludq
negb
pop
lret
sbb
test
fsubrp
arpl
pop
dec
push
inc
subl
xchg
xor
xchg
cwtl
nop
fldl
or
ret
mov
es
lock
push
rolb
or
fisubs
jle
fcoml
mov
xor
xor
lcall
fstps
push
repnz
add
sarb
mov
or
rcrl
mov
cmp
push
sti
sub
das
popf
andl
repz
xchg
outsl
jle
fidivs
cltd
mov
loopne
repnz
and
cmp
or
lret
pop
negb
sbb
shll
mov
push
ja
lret
xor
mov
mov
jmp
test
cmp
sbb
lcall
push
xor
leave
les
out
testb
mov
sub
cmp
sub
cmc
sbb
in
sahf
das
xchg
stc
cli
in
test
lds
sub
jae
test
sbb
test
xchg
les
dec
stos
xchg
int3
dec
jo
cmp
sbb
inc
sbb
lods
mov
sbb
ljmp
mov
mov
dec
icebp
andl
iret
sarb
dec
movsl
cwtl
inc
mov
push
enter
test
insl
in
leave
movsb
inc
sbb
jg
mov
push
stos
das
inc
fsubrp
inc
xor
push
and
sbb
dec
xor
inc
mov
mov
xchg
jmp
xchg
dec
mov
icebp
pop
mov
add
lret
jmp
mov
sbb
imul
fucomip
movsl
jp
mov
hlt
movsl
roll
add
mov
mov
sbb
movsb
ret
mov
push
xchg
ret
sbb
cmpsl
movsb
adc
xor
dec
retw
stos
lds
jge
ret
lock
aas
cmp
fwait
fnstenv
cli
gs
xchg
test
or
inc
or
loope
movsl
and
add
or
cmpsb
cmc
sbb
int3
sub
and
adc
jp
jge
pop
movsl
fdivl
jo
andl
inc
icebp
sbb
stos
add
sbb
pusha
xor
dec
sarb
insl
out
inc
mov
push
fdivrs
mov
loopne
mov
mov
push
cwtl
add
xor
sub
mov
orl
fucomp
lahf
cmpsl
and
xchg
ja
aad
clc
mov
pop
xor
pop
stos
add
cli
cmp
mov
mov
cld
outsl
lahf
in
jnp
cltd
dec
vpunpckhqdq
mov
lods
jns
dec
fnstenv
lods
xlat
or
xchg
xchg
ljmp
aas
jns
dec
add
sub
lret
subl
xchg
imul
test
adc
jae
pop
repz
mov
arpl
popf
fistl
test
inc
xchg
arpl
imull
push
pop
fneni(8087
bound
in
cli
dec
rcrb
testl
pop
push
sub
or
lahf
andb
cwtl
or
xlat
and
lock
loop
les
xchg
pop
xchg
and
or
fiadds
push
fstps
cmp
sub
int
mov
and
cmp
dec
push
sbb
mov
orl
in
mov
mov
cs
jle
lcall
adc
popa
dec
test
sub
loope
lcall
cmovbe
and
xchg
sarl
lock
xor
test
add
test
das
shll
hlt
mov
pop
test
movsb
dec
or
jb
cmpsl
stos
inc
push
loop
xor
mov
shrb
push
sbb
lcall
pop
leave
adc
movsl
sbb
std
or
pushf
mov
sbb
cmp
sbb
mov
and
mov
mov
inc
jbe
cmpsb
dec
adc
cmc
inc
or
out
loop
test
mov
icebp
jg
pop
mov
xchg
imul
xchg
js
lea
mov
pop
fidivrl
sti
in
popa
insl
jmp
std
mov
mov
xchg
int3
push
add
add
mov
cmp
push
cltd
or
mov
inc
or
ret
mov
test
cmc
lret
mov
push
cs
movsl
add
stos
repnz
cltd
adcb
outsb
mov
xor
dec
mov
inc
addr16
test
dec
stos
push
and
les
cmp
mov
mov
sarb
cmpsl
jno
lret
inc
cs
lods
jo
in
test
andb
mov
and
jbe
dec
subl
or
sub
or
dec
jp
sbb
lock
out
stos
dec
stos
stos
push
or
and
push
fnstcw
push
popf
stos
xchg
imul
and
fstpt
and
mov
mov
ret
fld1
jb
xor
fwait
mov
ret
mov
enter
aam
fadds
inc
push
mov
cmp
mov
popa
push
test
cltd
mov
popl
xchg
sti
daa
sahf
push
std
mov
lock
pop
adc
scas
adc
or
xor
mov
leave
fsubl
mov
fucomip
pusha
fst
dec
adc
scas
xchg
push
stc
cmpsl
sub
lret
sub
jne
xchg
dec
dec
jmp
sub
das
push
enter
popa
pop
sbb
scas
pop
or
or
sub
mov
push
xor
jo
sbb
jmp
mov
adc
and
scas
je
mov
cmp
mov
faddp
sbb
scas
lds
jmp
fisttpl
mov
sbb
movsb
les
dec
cmpsl
dec
mov
shll
out
out
jno
sbb
push
sbb
in
adcl
sub
ret
pop
jno
sub
jns
aaa
cld
cmp
cmpl
mov
xlat
in
or
rcll
ds
lea
sbb
cmpsb
hlt
dec
inc
sbb
dec
aaa
adc
dec
sbb
push
adc
cmpsl
xchg
push
sub
idivb
inc
aam
dec
sbb
sub
mov
mov
arpl
fisttps
push
mov
jo
inc
dec
mov
rorl
test
adc
cmp
repz
sti
push
or
xor
sbb
enter
jge
jns
loop
cmp
pop
mov
inc
shlb
inc
mov
lods
adc
dec
shlb
fnstenv
or
stos
fsubs
insl
pushl
mov
aaa
jo
dec
mov
mov
xchg
pop
aaa
mov
and
mov
xchg
dec
mov
mov
inc
sbb
jmp
mov
movsb
repnz
adc
js
ljmp
push
dec
add
mov
cmp
jp
add
inc
dec
sbb
add
push
pushf
mov
cwtl
push
aam
sbb
lods
mov
lret
push
or
lahf
lcall
es
stos
lods
mov
sar
cmp
mov
sbb
sub
dec
fisubrl
rorl
outsl
or
mov
loope
mov
push
pop
imul
or
cmp
sti
push
shlb
or
es
dec
mov
pop
repnz
and
ret
aam
stos
fwait
cmp
pop
ljmp
mov
test
adc
and
and
xchg
and
adc
dec
sub
insb
fisubrs
push
inc
cwtl
lock
sbb
shlb
mov
pop
jle
arpl
lea
lcall
xor
int
mov
fiadds
mov
cwtl
adc
sti
cmc
cld
jg
les
add
xor
sbb
adc
mov
pop
stos
loope
jne
rclb
fisttps
push
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
sub
cmp
or
jbe
pop
stos
xchg
stos
std
lock
test
sti
add
arpl
lahf
jle
nop
repnz
sub
pop
cwtl
fsubrl
adc
or
or
add
aam
pop
ror
sbb
mov
and
xor
inc
sbb
mov
pop
fsubl
sub
mov
xor
shlb
mov
sub
mov
popf
out
push
or
imul
loopne
stc
mov
gs
add
cmpl
push
fdivs
sbb
add
lods
daa
mov
iret
nop
dec
sbb
or
mov
nop
sti
xchg
int3
or
mov
xchg
dec
xor
push
stos
dec
sub
lahf
movsb
fstps
dec
sbb
mov
sbb
int3
test
icebp
xor
mov
stc
lods
shrb
lds
gs
outsb
les
scas
dec
stc
add
gs
mov
and
fucomi
repnz
ss
rcrb
fwait
add
addl
les
jp
sbb
xchg
not
test
insb
mov
xor
pop
shl
jo
sti
push
sub
dec
outsb
aaa
popf
mov
out
cwtl
mov
sbb
lds
sbb
fwait
cmp
adc
or
xchg
mov
push
hlt
adc
aad
outsb
jne
pop
pop
mov
xchg
push
sub
iret
sbb
into
mov
in
inc
pusha
and
fiadds
pusha
mov
jo
or
sub
cmpb
xor
adcl
mov
outsl
adc
scas
and
push
xchg
dec
add
push
and
int3
lock
push
lret
or
fcoms
sbb
adc
test
inc
insl
and
shrl
mov
fistpl
js
jbe
mov
in
mov
imull
xchg
push
jmp
pop
aas
adc
add
cmpb
in
cmpsl
inc
mov
dec
cwtl
adc
mov
fucom
pusha
cltd
rcrb
cltd
jne
mov
mov
or
fwait
outsl
push
ret
jge
push
adc
fwait
inc
dec
mov
sbb
lahf
add
xchg
xor
pop
sbb
mov
insl
cmp
xchg
ljmp
je
loop
pop
mov
popf
stc
mov
repz
jl
adc
mov
std
jne
mov
loop
ret
loope
dec
sahf
test
ret
test
dec
mov
shl
cltd
xor
stos
aas
les
test
mov
mov
out
inc
pop
clc
mov
jbe
arpl
lods
or
ret
add
pop
es
mov
jp
rorl
xchg
fcmovnb
adc
test
jns
push
flds
xchg
shl
lds
sbb
js
push
push
pop
pop
mov
jo
andl
inc
aam
fdivs
xchg
mov
fwait
jmp
jge
inc
push
fisubs
out
lahf
push
sbb
cmpsb
repz
popa
jne
insl
or
cltd
sbb
out
adc
add
adc
adc
sbbl
ficompl
pop
insl
or
xor
mov
loopne
call
inc
mov
test
add
push
cmp
ret
push
rolb
test
cmp
or
and
stc
dec
mov
push
mov
xor
adc
sub
and
push
scas
shll
int3
pop
shrl
push
dec
mov
dec
push
push
mov
leave
jp
xchg
xchg
cltd
xchg
aad
fbld
xchg
xchg
pop
pop
pop
pop
mov
or
mov
or
and
popf
fucomip
sti
iret
pop
jo
pop
and
fnsave
add
jns
js
sbb
inc
add
or
fisttpll
enter
fnstenv
mov
movsl
lcall
xchg
xchg
pop
and
xor
sbb
mov
mov
out
popf
iret
cmpb
out
push
cmp
or
in
mov
cmc
xor
dec
fcomi
xor
movsl
test
dec
les
inc
mov
ds
sbb
in
and
fcomi
mov
inc
sbb
gs
rcrl
cmpsl
mov
jbe
and
mov
jg
shrb
inc
lahf
addr16
xor
push
shll
mov
mov
subb
inc
ret
pop
scas
mov
loop
xchg
cmp
ljmp
sub
gs
int
mov
xchg
add
xchg
jle
or
sub
mov
xchg
push
mov
push
pop
and
popf
jg
loope
mov
mov
sbb
jo
adc
bound
in
push
fidivrs
or
fs
arpl
scas
ja
lods
sbb
pop
stc
leave
das
call
gs
scas
mov
mov
hlt
cwtl
aaa
aaa
imul
and
fsubr
mov
jle
sahf
cmpsl
cmp
fcmovnb
hlt
lret
daa
in
cmp
sahf
pop
inc
fistps
adc
sbb
push
pop
dec
test
lahf
pop
sbb
lock
sbb
add
adc
push
sub
dec
dec
xchg
mov
jnp
pop
mov
popa
jmp
test
fwait
adc
int3
sub
jmp
imul
jp
xchg
mov
inc
inc
repz
mov
push
push
and
lcall
jecxz
test
add
jecxz
mov
clc
and
loop
out
fsub
pop
sub
adcl
or
or
sub
push
jno
dec
cli
inc
test
push
fidivrl
jne
dec
push
out
inc
repz
fdivrl
jge
jge
ret
lds
sti
sub
repnz
in
push
mov
or
lahf
sub
adc
roll
fs
mov
add
mov
in
xchg
jge
push
or
lock
clc
push
sbb
dec
add
sbb
gs
ret
in
dec
cltd
js
mov
sbb
push
mov
pop
stos
repz
mov
mov
sub
int3
lods
inc
dec
mov
mov
cmc
sbb
mov
pop
cltd
push
jmp
popa
xor
pop
test
gs
xchg
sar
and
call
in
int3
mov
pop
cmpsl
push
fucomi
loope
flds
call
pop
add
ret
add
mov
shlb
lcall
fimuls
into
mul
jle
out
loop
jnp
aaa
inc
and
and
pop
cmp
sbb
icebp
leave
std
xchg
xchg
adc
ljmp
fcoms
lret
inc
ret
xorb
and
mov
pop
xor
loopne
pop
daa
into
cmpsl
xor
fwait
loopne
jl
insb
jge
mov
les
shll
push
cmpb
mov
inc
stos
cwtl
push
push
lods
xchg
adc
fwait
mov
rcrb
mov
int
lds
xchg
push
jae
lret
shlb
cmc
and
das
sbb
or
scas
add
cmp
stos
xchg
adc
sbb
mov
cltd
dec
and
mov
popf
mov
xlat
pop
jb
dec
push
sub
or
or
xor
ljmp
dec
ficoml
push
dec
and
fwait
dec
jae
in
mov
or
sbb
pop
xchg
sbb
jb
fwait
ja
mov
fisttpll
mov
scas
mov
dec
pop
lods
cltd
xor
mov
out
mov
mov
jmp
mov
xchg
lea
push
adc
int
pop
lods
imul
fiadds
push
fidivs
iret
sub
dec
jns
dec
sbb
jae
or
mov
inc
imul
jno
ljmp
mov
dec
sbb
add
cmp
sbb
push
jns
mov
dec
shrl
or
push
jne
adc
pop
sub
jp
add
fiaddl
xor
jno
les
xchg
adc
insb
pop
andl
stc
inc
rolb
or
mov
mov
jecxz
sub
mov
repnz
in
or
rcrb
mov
mov
outsl
fldz
enter
movsb
cld
je
orb
ds
iret
cs
mov
and
push
cli
sub
pop
adc
test
rorb
dec
adc
push
push
ret
adc
ret
adc
mov
loopne
mov
sbb
sbb
mov
or
xlat
adc
push
adc
sub
jbe
and
mov
xchg
xor
jge
test
pop
push
push
test
adc
push
xchg
ret
pop
inc
push
inc
subl
pop
adc
mov
mov
pushf
imull
out
dec
pop
stos
xchg
dec
ds
daa
fistl
scas
popa
pop
push
push
mov
int3
mov
int3
test
jns
jb
or
adc
xor
adc
adc
test
adc
lea
mov
out
jp
movq
sbb
inc
fwait
lret
in
mov
mov
or
fwait
lea
xor
scas
fcoml
ljmp
push
push
xchg
dec
dec
mov
sbb
gs
aam
jbe
enter
pop
pop
test
ljmp
mov
icebp
jle
mov
mov
xchg
repz
lahf
cld
enter
clc
mov
cld
xchg
icebp
mov
ficompl
jne
mov
in
push
sub
clc
cmp
push
pop
mov
sahf
sbb
mov
jae
jmp
jg
popa
mov
jae
vcvtsi2sdl
mov
mov
cmp
fisubrl
lahf
or
add
pop
test
fstl
into
pusha
push
sub
pushf
mov
cmp
sti
jmp
cmp
repz
add
jbe
inc
sub
sbb
sbb
mov
gs
xchg
test
imul
sti
ljmp
outsl
push
adc
xchg
lret
and
mov
daa
dec
dec
mov
xchg
jmp
adc
cmpb
sahf
popf
rorb
jb
mov
mov
ljmp
sti
cmpsl
mov
in
lret
xor
inc
and
dec
ss
sbb
and
or
mov
lods
icebp
mov
and
aad
sbb
push
sub
sbb
sub
mov
adc
or
bound
sbb
shlb
jo
xchg
or
xchg
mov
cmp
pop
test
push
dec
inc
pushf
sub
sbbl
ja
dec
icebp
and
add
sti
or
es
dec
cmp
pop
divl
cwtl
dec
and
leave
aam
mov
fidivrl
cli
mov
push
gs
inc
out
inc
inc
sbb
cmc
outsl
or
xor
adc
les
adc
mov
lret
sbbl
jle
fildll
xchg
jbe
dec
les
inc
mov
or
dec
cmp
clc
jp
add
inc
dec
sbb
add
setl
mov
mov
mov
test
test
push
test
test
xchg
sub
push
dec
sarl
sub
idivl
jno
icebp
add
push
jge
cmp
daa
or
fisubl
inc
jl
fistpl
js
xchg
andb
fisttps
sbb
and
scas
jl
leave
rcrl
hlt
xchg
sbb
sbb
lock
aam
mov
cmp
push
fwait
out
push
or
sbb
pop
adc
dec
fsubs
pop
mov
xchg
cmp
push
jl
lret
jl
sub
pop
sub
pushf
loop
shlb
push
imul
dec
mov
sbb
stc
mov
ljmp
ljmp
mov
lret
jne
mov
pusha
mov
sti
cmp
mov
jp
or
xchg
mov
adc
pop
xor
or
pop
inc
test
dec
lret
or
sbb
dec
fldenv
fst
js
pop
lods
mov
sbb
arpl
movsl
ss
mov
nop
sbb
mov
aaa
sub
push
xchg
and
xchg
mov
mov
in
inc
cltd
lods
inc
push
pop
ss
or
repnz
cmp
xor
mov
idivl
mov
or
sub
pop
cltd
sahf
xchg
int
mov
xor
cmp
pop
mov
cmp
loopne
pop
add
call
push
mov
popf
pusha
shll
mov
aam
cmp
adc
add
xchg
dec
fcom
xor
pop
vmovntdq
add
push
xchg
push
inc
mov
pop
imul
sbb
daa
jmp
jl
cmp
mov
stos
aad
add
cmp
out
icebp
cli
jp
pop
dec
movl
xor
mov
ficoml
push
add
pop
ja
mov
pop
pop
je
push
dec
outsb
bound
fcomps
outsb
or
cmp
clc
das
xchg
stos
lds
jp
push
jbe
sub
in
push
pop
cmp
add
loopne
scas
je
js
cmp
and
or
or
lea
cmp
daa
sub
sbb
mov
pop
xchg
ljmp
xchg
xchg
mov
add
xor
pop
rcl
cmp
xchg
fstpt
and
sub
push
or
xchg
sbb
aad
test
or
push
sub
dec
cmc
int
fisubl
xlat
movsl
mov
jne
inc
inc
mov
push
roll
dec
insl
jo
jp
xor
ss
rcl
lret
pop
inc
icebp
hlt
cmp
fst
addr16
mov
sti
sahf
sbb
into
inc
jmp
ljmp
punpckhwd
mov
sbb
pop
jae
push
push
mov
push
sub
mov
push
scas
dec
jns
inc
pushf
push
sub
mov
aas
jge
xchg
or
clc
fs
mov
test
mov
mov
js
adc
sbb
jns
jmp
out
push
sahf
cli
shrl
inc
out
mov
les
imul
out
or
aam
mov
shl
jl
fwait
adc
cmp
mov
and
sub
inc
mov
out
lea
mov
addl
cwtl
in
and
std
lcall
aad
dec
popa
sahf
mov
jo
hlt
jg
popf
mov
xchg
mov
mov
jl
dec
sub
pusha
mov
test
enter
jne
and
scas
mov
icebp
cmp
inc
and
xchg
cwtl
pushf
pop
lret
data16
in
xchg
int
push
cmp
jl
pop
outsb
lock
fnsave
mov
movsb
or
outsb
mov
je
cld
xchg
fldln2
loope
push
cmp
pop
lahf
cmp
sbb
rcrb
hlt
add
adc
idiv
push
dec
in
pop
daa
xchg
nop
jo
pop
imul
in
xchg
adc
inc
xchg
ljmp
pop
out
and
rcrb
dec
xchg
mov
hlt
pop
das
orb
inc
mov
push
jp
sub
cmp
xchg
int3
mov
mov
mov
inc
or
fs
fsubrs
addl
sti
jle
xchg
add
sbb
add
mov
dec
sbb
cld
xchg
repz
cmpb
movsl
mov
js
adc
dec
outsl
adc
inc
mov
add
push
dec
pushf
dec
ss
cmp
push
idivb
or
xchg
test
mov
mov
sbb
adcl
lahf
scas
jg
clc
add
push
incl
js
fs
dec
cmpsl
xlat
adc
addl
sar
pop
ds
mov
out
xor
mov
je
dec
arpl
lods
xlat
jo
cmp
pop
mov
pop
ds
xlat
sbb
sub
int3
pop
lods
sub
pushf
loop
shlb
push
imul
dec
mov
sbb
leave
pusha
into
ljmp
pop
mov
imul
pusha
xor
sbb
sbb
xor
jecxz
xlat
cmp
mov
fcoml
mov
lcall
insb
push
push
jns
jmp
mov
loop
dec
sarb
outsl
xchg
add
das
push
test
add
push
aas
sti
mov
outsb
fcomps
scas
mov
inc
pop
out
sub
idivb
gs
scas
cmp
fnstenv
push
jle
jmp
and
and
ret
bound
dec
cmp
outsl
cmc
pop
std
pop
aas
push
aaa
sbb
jle
or
or
lea
pushf
ds
and
or
test
in
push
in
dec
loope
std
scas
cmp
sub
jmp
out
jo
es
shrb
test
and
ss
inc
aas
repnz
dec
push
adc
jle
lcall
jae
cmp
mov
out
lahf
cmpsb
mov
fucomip
repz
push
fistps
andb
std
popa
int
pop
fcomi
imul
xchg
fsubrl
xchg
stos
clc
repnz
lret
inc
push
insl
sub
fwait
add
fstp
aaa
xor
dec
out
cwtl
aam
mov
test
mov
pop
test
mov
xor
cmp
test
pop
sub
mov
flds
repz
roll
ss
sbb
hlt
add
in
lcall
sti
dec
push
pop
or
js
inc
int3
cmpsl
dec
sbb
dec
imul
adc
inc
mov
sahf
dec
hlt
in
jbe
push
pop
std
mov
lahf
outsl
aas
add
jb
in
popa
iret
insl
xchg
mov
pop
test
dec
jge
xor
mov
mov
mov
movsl
loope
sbb
out
repz
and
rcr
pause
lret
sub
fdivr
adc
movl
and
mov
add
cmpsl
mov
sarb
dec
movsl
mov
rcrl
nop
xlat
push
ss
mov
push
dec
into
mov
clc
pop
fucom
mov
loope
stos
inc
and
push
cmp
aas
and
pop
lock
xor
xlat
aad
jge
pop
movsl
in
cmp
cli
add
fldl
cwtl
lahf
fisttps
les
rcrl
mov
or
into
daa
test
add
add
cmp
fwait
adc
dec
lret
mov
ret
out
xchg
popf
pop
adc
out
mov
jne
xchg
xchg
xchg
cltd
enter
push
adc
sbb
inc
test
mov
xchg
sub
fsubr
call
cmp
or
xor
xor
sub
das
fwait
push
sub
stos
or
shll
mov
cmpsb
adc
mov
loop
and
mov
andb
xor
sub
mov
inc
ljmp
xchg
sbb
mov
popf
push
call
nop
movsl
sub
jae
test
mov
bound
pushf
inc
pop
xchg
inc
cmpsl
into
xchg
jl
fistl
js
and
pop
jl
pusha
test
xchg
pop
pushl
lods
bound
adc
loop
mov
xchg
adc
push
or
cld
jle
push
pop
std
out
add
jecxz,pt
je
call
out
sbb
or
mov
mov
mov
notb
lea
fiadds
and
xor
aas
cmpsl
xor
fisubs
fsubrl
in
cmc
hlt
clc
lds
pop
test
mov
mov
mov
test
adc
add
cmovge
loop
leave
cmp
inc
mov
sub
lods
xchg
sub
adc
push
test
xchg
and
sbb
xchg
cli
lret
sahf
fwait
ss
fistl
sbbl
arpl
cmp
jp
jae
arpl
dec
mov
pop
stos
xchg
push
adc
and
lds
jae
in
dec
pushf
jle
xor
jo
cmc
inc
cmpsl
mov
fwait
sbb
or
inc
xchg
imull
cmp
fwait
xor
mov
push
test
sub
mov
sbb
cmpsl
ret
xchg
add
fwait
lea
mov
mov
sub
mov
mov
jle
adc
cmpsb
dec
loope
mov
mov
pop
addb
pop
in
xor
xchg
sub
test
add
lahf
lds
mov
lods
aaa
mov
push
dec
mov
test
ret
test
decl
sbb
outsb
sub
pop
push
jns
ljmp
dec
fidivl
xchg
cmc
repz
add
aam
pop
pop
adc
jl
sbb
cltd
shl
adc
mov
add
repz
xor
add
cmp
ret
lahf
sahf
adc
jo
jg
dec
fdiv
bnd
jb
addps
adc
inc
sarb
or
xchg
xchg
sub
jmp
adc
mov
pop
mov
pop
fdivrl
test
lea
xor
andb
cmp
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
xchg
ficoml
cmp
ret
loopne
mov
jns
cli
mov
sbb
add
scas
rclb
adc
jecxz
mov
mov
ret
insb
mov
lret
movsl
mov
loop
fsubrl
cli
sub
jne
les
sub
add
push
pop
jp
pusha
mov
lods
mov
push
in
in
inc
mov
or
cmp
adc
lcall
lret
in
mov
dec
movsw
shrb
cltd
loope
inc
mov
push
cmp
lret
std
cli
jnp
inc
mov
add
xchg
ljmp
out
rorl
sub
mov
sbb
roll
push
mov
jae
xchg
in
lret
jo
jnp
sbb
xor
sti
sti
and
or
ds
sub
mov
mov
mov
xchg
mov
add
andb
xlat
mov
fsubs
clc
dec
stc
cli
sti
mov
jp
add
mov
mov
jo
repnz
hlt
cs
loop
xor
rorb
jno
lahf
jb
sbb
repnz
movsb
fistps
je
sahf
das
xchg
stc
cli
in
test
pop
xor
test
sbb
xchg
movsl
add
or
xor
jb
xchg
pop
lds
sbb
or
scas
aaa
mov
cli
jnp
inc
mov
or
stos
cltd
test
xor
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
std
mov
push
or
inc
bound
out
mov
flds
clc
dec
push
adc
cmp
mov
int
jle
daa
adc
inc
cmc
mov
mov
lea
shr
pop
pop
add
cmp
mov
movsb
mov
lret
jecxz
outsl
lret
scas
xorb
jne
jmp
sbb
aas
test
or
sbbb
cmp
test
lret
stos
push
sub
dec
repnz
dec
push
in
movsl
mov
sbb
ljmp
cmp
in
test
pop
xor
test
sbb
xchg
movsl
add
or
xor
jb
xchg
pop
lds
sbb
mov
fucom
jae
jle
add
and
sbb
mov
inc
sarb
call
test
dec
mov
or
aam
rcrl
jle
enter
mov
stos
cmp
dec
shlb
data16
cmpb
jmp
jp,pt
sub
mov
fsubrs
loopne
push
xor
fildl
sahf
bound
adc
adc
mov
in
push
or
jp
add
mov
lock
push
orb
leave
sbb
rcrb
rcrb
jne
test
pop
cli
test
sub
mov
xor
cld
lds
arpl
jo
test
inc
cmp
leave
or
sbb
sub
xchg
mov
fstl
mov
test
in
icebp
mov
cmp
jl
js
imul
or
add
sub
dec
jecxz
or
xor
ret
lret
in
mov
mov
pop
mov
gs
cltd
xlat
xchg
jle
cmp
out
mov
xor
inc
cmp
mov
hlt
xor
xchg
and
mov
xchg
cmp
adcb
lea
cmp
mov
jno
rcrl
iret
fdivs
out
movl
dec
shll
aad
pushf
cltd
push
mov
sub
iret
mov
popf
jnp
fcoms
mov
test
xchg
sbb
std
fistpll
fdivs
mov
nop
test
jl
sbb
mov
movsl
sbb
test
add
xor
and
sbb
or
scas
aaa
mov
cli
jnp
inc
mov
add
inc
inc
sbb
fisttpl
in
mov
jnp
inc
push
mov
pop
xor
insl
in
sub
pop
mov
or
pop
fdivrl
jge
outsl
sbb
in
enter
push
mov
daa
cmp
pop
pop
fstpl
inc
pop
fdiv
shlb
dec
les
push
fidivrs
mov
pop
pop
add
imul
pusha
testl
add
movsb
aad
pop
dec
adc
mov
mov
fsubrl
mov
popf
pop
orl
jne
test
mov
mov
lods
mov
mov
xchg
adc
insb
test
ficoml
xlat
scas
mov
dec
mov
lret
jns
adc
shlb
mov
fisttps
fwait
iret
push
inc
fcoml
sti
and
mov
iret
pop
jno
add
lret
sbb
mov
jmp
push
aas
fwait
lret
in
mov
mov
xchg
cltd
call
inc
jae
sti
and
xchg
mov
push
or
cltd
pop
sub
pop
sahf
dec
mov
mov
add
cmp
sub
mov
iret
add
in
and
stos
ret
addb
pop
add
add
int
inc
pop
cli
add
inc
mov
jne
jns
lds
nop
lahf
push
aaa
pop
inc
in
lods
dec
or
sbb
inc
call
lret
inc
push
or
cld
jo
push
insb
sub
stos
jge
dec
test
inc
lcall
cwtl
mov
fisubrl
stos
xor
xor
fwait
push
and
mov
loope
cmp
sbb
mov
fwait
push
dec
mov
test
into
aam
inc
les
clc
sub
enter
movsb
inc
sbb
ds
jmp
std
mov
sti
and
test
pop
dec
xchg
lea
xchg
movsb
popf
xchg
push
push
cwtl
mov
test
or
aas
lea
ss
arpl
cmp
mov
mov
pop
push
rorb
sbb
popa
mov
or
insl
movsl
ret
popa
and
cli
jns
lds
nop
lahf
push
aaa
pop
inc
in
dec
mov
pop
repnz
push
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
pop
xor
test
or
adcb
lcall
jge
js
mov
fcoml
rcrb
pop
xor
mov
in
lds
test
lods
cmc
cmp
sti
sbb
rolb
mov
mov
xchg
and
mov
add
cltd
jne
mov
pop
mov
pop
mov
gs
jl
inc
cltd
enter
mov
xchg
mov
or
cmp
xchg
sub
push
dec
mov
into
imul
flds
mov
pushf
dec
inc
fidivrs
imul
fistps
ds
sbb
popa
pushf
rcr
and
mov
jl
lock
adc
int
sbb
adc
mov
outsb
ljmp
jns
lds
xchg
test
cld
sub
cli
fs
movsl
cmp
adc
shll
test
mov
sbb
cltd
inc
in
stos
mov
add
lods
mov
cmpsb
sahf
xor
ret
mov
fsubrl
repz
push
mov
pop
xchg
mov
dec
mov
dec
jbe
out
roll
aas
iret
dec
and
je
cmp
xor
push
sub
adc
mov
sti
sti
and
xchg
enter
in
hlt
and
mov
jne
sub
push
dec
mov
cmc
hlt
imul
sbb
sti
arpl
out
les
cmp
mov
movsb
mov
lret
jecxz
outsl
lret
scas
xorb
jne
jmp
sbb
aas
test
or
sbbb
inc
sbb
fnstsw
xchg
xlat
pop
sbb
test
cli
stos
ss
pop
pop
add
adc
test
negl
stos
cmp
xchg
test
lods
or
cmp
adc
pusha
imul
fistl
sahf
xchg
jmp
cmpsb
jno
pusha
mov
scas
mov
lret
std
cli
jnp
inc
mov
add
xchg
incl
addl
sub
in
mov
sbbb
test
mov
sbb
lea
pop
fnsave
sti
sti
and
test
jle
xchg
test
mov
mov
mov
cmp
ljmp
jg
aam
sti
stos
mov
jnp
mov
movsl
add
rcr
push
repnz
inc
pop
sbb
xor
popf
pushf
sub
int
in
jno
or
push
cmp
sub
cmc
sbb
cmc
sar
push
std
xorl
mov
pop
sub
js
cmp
adc
jp
movsl
adc
cli
add
mov
jmp
popf
fstl
pop
cld
inc
xor
mov
in
lds
xlat
jmp
and
sbb
mov
fwait
push
dec
mov
fs
mov
inc
push
mov
fcomp
mov
scas
lcall
cmpsl
ret
test
bound
mov
mov
mov
cwtl
cmp
xor
mov
dec
add
pop
rcl
lret
movsb
xchg
popf
xchg
dec
sahf
dec
mov
addl
jne
shr
repz
imul
and
inc
cli
mov
or
sub
test
lcall
pop
mov
lods
xchg
sub
adc
inc
in
xlat
mov
mov
lret
mov
fs
movsl
xchg
xchg
inc
bound
add
rolb
loop
jo
push
dec
scas
xchg
stos
jge
lcall
cld
jp
add
sbb
lods
enter
pusha
and
cs
mov
cmp
cwtl
jno
add
cmp
cwtl
hlt
inc
shlb
push
dec
aam
pop
mov
and
shll
popa
pusha
fsubs
sub
imul
jae
push
fwait
outsl
bswap
fidivs
xor
add
adc
pop
xor
inc
repnz
pop
out
loopne,pn
push
cmp
mov
gs
stos
div
xor
jmp
sbb
dec
clc
stc
sti
mov
sbb
push
xchg
mov
neg
mov
gs
lods
dec
lret
cmc
cld
or
ret
popa
sub
cli
jns
lds
nop
lds
clc
stos
repnz
fidivl
inc
and
push
clc
test
cmc
mov
sbb
add
add
imul
fcomps
hlt
sbb
roll
mov
cmpsl
push
jg
fldl2t
insb
lahf
or
adc
push
add
jecxz
jp
mov
lea
xor
dec
mov
stc
repnz
xor
add
mov
cli
jae
xchg
pop
arpl
jnp
or
xor
sti
sti
and
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
lea
ss
out
mov
push
jnp
iret
sbb
jae
pop
lock
hlt
add
je
xor
dec
inc
aas
adc
or
sub
bound
cwtl
ds
push
and
jp
inc
in
daa
lds
push
clc
sub
ja
xor
jae
lret
cmpsl
push
xchg
repz
je
lods
icebp
add
jl
sbb
stos
cwtl
ficoms
pushf
mov
inc
jl
mov
ret
sub
frstor
scas
or
scas
aaa
mov
cli
jnp
inc
mov
mov
inc
sarb
js
push
or
test
les
xchg
testl
movd
mov
or
pop
fidivrs
xor
loop
hlt
mov
xchg
mov
push
or
cltd
cmp
fldcw
in
cmc
mov
mov
pop
dec
and
cmp
and
mov
test
xor
mov
lret
jecxz
outsl
inc
sub
jae
sub
sbb
aas
repz
cwtl
paddb
rorl
mov
jne
test
fwait
jge
fbld
jge
lret
jg
fbstp
les
jge
les
dec
imul
ja
pop
jnp
add
mov
xchg
popf
xchg
pop
add
in
mov
jge
inc
push
dec
in
leave
pop
out
xlat
cld
xor
pop
sub
inc
sbb
mov
dec
mov
les
mov
sti
cmp
or
add
mov
push
incb
call
dec
call
inc
cltd
out
call
int3
or
mov
rcr
cmpsb
insl
xor
pop
dec
mov
jl
jmp
sub
repz
shl
mov
repz
in
and
jns
mov
pop
add
test
inc
sbb
pop
mov
jg
mov
sbb
arpl
xchg
jmp
lds
push
dec
sbb
pop
and
test
lods
push
mov
add
ret
add
idivb
or
mov
stos
ret
inc
mov
cltd
lods
or
stos
xor
xor
mov
es
int3
scas
inc
fdivl
jo
arpl
inc
add
test
addl
rorl
mov
aam
mov
sub
aam
fdivrs
cld
and
cmpsl
ret
test
fwait
mov
fcmovu
sti
sti
and
insb
aaa
cmpsl
loopne
in
hlt
and
mov
jne
sub
push
dec
mov
cmc
hlt
imul
pop
mov
sti
arpl
out
les
cmp
lock
pusha
lahf
xor
mov
in
mov
add
pop
repz
cmp
loop
mov
dec
iret
fsubl
mov
iret
sbb
test
xchg
or
xchg
lret
sar
xor
cli
into
xchg
stc
cli
in
test
nop
cli
push
fsts
jp
xchg
add
fisubrl
fcmovne
xchg
add
jp
add
sti
call
fstl
jnp
aad
mov
jmp
fists
fstpt
xchg
clc
outsl
rcrl
shlb
sar
adc
xchg
cwtl
sub
dec
in
mov
shl
mov
lret
in
mov
mov
or
mov
lcall
rcll
andl
enter
xor
add
mov
sbb
ljmp
ret
into
jbe
roll
lea
mov
ja
pop
mov
fists
andb
andb
pushf
fwait
add
jl
repnz
lock
cmpsl
push
sarb
dec
inc
sbb
out
clc
mov
aaa
pop
icebp
push
pop
mov
sahf
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
sbb
leave
or
sub
sti
repz
fcoml
sbb
sub
inc
inc
fdivrl
xor
js
xchg
bound
or
loop
js
sub
xor
je
jbe
dec
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
or
xchg
mov
mov
pop
xabort
pop
fdivrl
sti
repz
fwait
push
adc
inc
dec
pop
mov
shr
lret
je
sbb
test
adc
fsts
add
and
repnz
mov
sbb
aas
push
cmc
or
mov
and
pop
xchg
lret
hlt
movsl
mov
jg
add
jl
sbb
add
imul
lods
das
mov
cli
stos
repnz
mov
sbb
fcmovnu
dec
sbb
xor
pop
pop
push
in
mov
xchg
fcoms
popf
daa
adc
ret
mov
dec
xchg
mov
lret
push
ss
fldt
jmp
sbb
cwtl
mov
fcmovnb
push
fcomip
sub
and
sbb
add
pusha
push
sbb
mov
adc
cmp
pop
jmp
test
gs
dec
push
sbbb
or
mov
leave
xchg
cltd
push
jne
inc
sub
dec
add
mov
inc
mov
into
imul
mov
sub
ljmp
repz
sub
cmp
mov
mov
rcr
adc
sub
inc
bound
adc
fildl
test
repnz
jno
mov
sarb
aaa
stos
test
lcall
dec
sbb
lahf
notl
or
xor
pop
popf
lret
in
jl
ret
add
or
test
sub
movsb
inc
out
jb
mov
pop
mov
add
mov
jge
dec
loop
icebp
adc
insl
jo
jl
adc
es
or
mov
mov
mov
fmuls
jge
jbe
lret
movsl
ret
mov
pop
fisubs
cmpsl
ret
fld
call
fcomi
sub
push
hlt
cwtl
test
mov
mov
roll
push
cwtl
cmpb
xor
test
mov
mov
test
aad
stc
imul
mov
sub
mov
in
popf
jmp
sbb
test
into
iret
push
adc
push
xor
mov
fs
cmp
movsl
ret
mov
push
sub
cmp
fldl
sbb
imul
mov
mov
push
pop
or
lcall
aaa
ret
lcall
xchg
cmp
add
fldcw
rcrl
xchg
jg
mov
icebp
stos
inc
sti
sub
and
or
mov
inc
stc
in
mov
mov
clc
mov
in
inc
mov
adc
sbb
dec
daa
fldlg2
std
cmp
js
bound
and
and
hlt
push
movsl
inc
orb
inc
lea
mov
cmc
hlt
clc
mov
xchg
mov
les
lea
enter
iret
sbbl
push
or
jecxz
cmp
or
adc
ss
test
hlt
mov
mov
xor
enter
incl
adc
lcall
ljmp
sahf
mov
clc
sub
mov
jge
mov
pop
cmp
push
inc
inc
scas
ja
test
push
pop
pop
push
fistl
jae
xor
xchg
xor
in
push
sbb
movsb
sahf
adc
pop
mov
fdivl
jo
arpl
addb
inc
cmpl
xor
mov
xchg
mov
mov
inc
jecxz
in
pop
cmpsb
push
fdivrs
rcll
jne
fnstcw
mov
mov
shl
sbb
mov
jno
push
or
call
jmp
lcall
ror
pop
stos
les
pop
mov
push
inc
push
dec
or
bound
cmpsb
adc
add
mov
mov
cmpsl
call
fwait
jno
cltd
lret
inc
sub
shrl
sbb
rcl
sbb
icebp
stos
aas
fucom
cli
mov
popf
sbb
adcb
push
and
xchg
adc
mov
movsl
sbb
roll
aad
sbb
insl
in
gs
add
pop
fcmovnb
push
sar
js
inc
xor
pop
xchg
or
or
ss
push
lahf
out
cwtl
dec
and
sbb
xchg
mov
int
in
sti
dec
jns
and
adc
mov
xor
mov
enter
adcb
test
pop
adc
cmpb
lahf
adc
insl
sahf
inc
sub
xor
mov
popf
dec
pop
mov
inc
mov
loopne
stos
cmpsl
cmpsb
gs
lret
hlt
movsl
xchg
aaa
lods
iret
mov
or
cmp
in
push
cwtl
jp,pt
sbb
jecxz
loope
pop
test
xor
xchg
popf
in
or
into
scas
pushf
mov
ds
popf
lret
mov
or
jl
and
cmp
inc
inc
sbb
adc
pop
out
fisubl
push
imul
in
pop
test
xor
jno
push
imul
cmpsl
mov
mov
loop
xchg
clc
push
cwtl
in
mov
inc
pop
sub
sub
mov
xor
imul
pop
jge
mov
popf
sub
out
jo
jnp
stos
rorb
xchg
push
inc
inc
xor
mov
add
sbb
mov
mov
movsb
popf
popf
mov
mov
sbb
lea
xchg
inc
mov
lret
mov
out
repz
mov
jecxz
movl
ja
test
pushf
sbb
sbb
xor
push
mov
mov
mov
mov
movsb
jb
mov
inc
popl
dec
add
pop
jp
pusha
mov
lods
mov
push
in
in
xchg
test
test
mov
sbb
lcall
jge
leave
dec
pop
jb
lods
decb
sarl
test
push
dec
mov
subb
cld
into
andl
sti
add
pop
jmp
push
push
pop
repz
or
jge
xchg
sub
xor
xchg
cmp
sbbl
movsb
jp
mov
push
or
in
jb
cmp
sti
and
or
es
hlt
pop
sub
and
cltd
inc
in
fldpi
push
and
xchg
mov
cmp
and
mov
test
xor
mov
lret
jecxz
outsl
inc
sub
jae
sub
sbb
aas
repz
cwtl
paddb
xlat
stos
dec
sahf
jp
push
test
xor
jns
popf
inc
out
jae
sbb
pop
cmpsl
xchg
test
mov
outsb
push
iret
or
in
pop
nop
imul
adc
movsb
dec
movsb
inc
pop
cltd
aam
mov
pop
or
or
adc
callw
popa
or
add
sti
insb
inc
ret
sbb
mov
mov
stos
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
and
fld1
xor
cmpsb
jo
mov
popf
stos
int
pop
sub
dec
or
int
imul
gs
xor
mov
movsl
sti
fistl
loope
mov
loopne
pop
push
iret
sbb
mov
cltd
or
repnz
js
sbb
int
or
dec
icebp
push
cmp
adcl
lea
sbb
and
fldt
pushf
dec
pop
lock
sbb
jae
push
push
jb
cmp
imul
adc
in
and
mov
into
mov
mov
mov
icebp
cmc
jmp
pop
aas
outsb
cmp
mov
call
les
fisubrs
mov
or
mov
leave
adc
lock
pop
xchg
mov
jl
mov
loop
xor
lcall
dec
xchg
lret
cli
mov
dec
push
gs
add
cwtl
dec
and
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
mov
fstpt
mov
ss
and
cmpsl
mov
nop
pop
adcb
xchg
dec
dec
jg
mov
lret
push
and
lds
lods
jmp
push
imull
je
mov
incl
cmp
jno
push
mov
add
fcmovne
xchg
fistl
sbb
pop
push
xchg
std
test
add
in
cmp
call
stc
and
icebp
sbb
stc
add
add
mov
fwait
push
dec
mov
xor
xchg
mov
inc
push
mov
pop
xor
loopne
imul
pop
mov
xlat
or
pop
fdivrl
shlb
mov
xor
loopne
mov
hlt
jl
dec
mov
loopne
pop
dec
xlat
mov
pop
and
push
sub
push
mov
fsub
mov
imul
js
mov
inc
or
inc
movsl
xchg
sub
pushf
cltd
push
mov
and
int
pushl
adc
sub
test
push
push
mov
mov
mov
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
or
sbb
add
xchg
stos
xor
stos
ja
dec
push
and
pop
cld
adc
xchg
xchg
ffree
push
mov
pop
or
jmp
xor
or
pop
sub
or
mov
dec
xchg
mov
jo
dec
and
push
les
fwait
mov
aam
adc
xor
aam
insl
or
xor
outsl
movnti
imul
addr16
sbb
cmp
in
aam
sub
xchg
jle
push
dec
mov
cltd
cmp
shlb
mov
loopne
ljmp
out
mov
test
mov
hlt
mov
adc
fadds
lock
lock
and
pusha
or
xor
pop
dec
mov
mov
mov
sbb
shl
test
push
and
pushf
ret
push
bnd
jmp
ret
adc
mov
test
push
cmp
lret
add
dec
sbb
sub
sub
push
ljmp
xor
xor
lcall
inc
fwait
leave
loop
cmp
adc
andl
inc
sub
adc
mov
aam
xchg
sti
adc
or
sub
mov
pop
jecxz
inc
sub
call
mov
jge
jge
xorl
adc
inc
push
cmp
mov
bound
or
sbb
pop
pop
dec
int
pop
adc
pop
adc
jg,pn
iret
sbbl
lock
and
xor
arpl
xchg
aas
ljmp
sub
mov
repnz
mov
sub
cmp
int
mov
aaa
flds
dec
hlt
jp
pop
push
in
mov
popf
mov
cld
mov
sub
jo
xlat
jno
lret
sbb
daa
push
inc
push
mov
cmp
jl
arpl
push
add
and
push
addr16
cltd
adc
adc
into
scas
pushl
cmp
mov
loope
cmp
xchg
adc
scas
fsin
jo
rclb
ljmp
inc
push
mov
or
mov
rolb
mov
fcompl
cmpsb
jnp
sbb
pop
fsubl
xor
mov
enter
enter
int3
inc
pop
ljmp
inc
cmp
cs
adc
dec
cmp
pop
lea
and
dec
sbb
in
mov
jmp
popf
jmp
lock
mov
adc
inc
pop
push
imul
sbb
dec
mov
push
aaa
pop
inc
in
lods
dec
or
sbb
js
aam
ja
stc
cli
in
test
pop
xor
test
jl
sbb
cmp
mov
out
pop
scas
jb
lods
pop
lods
cmp
xor
scas
mov
jg
xchg
lret
fwait
cli
jnp
inc
mov
mov
inc
sarb
clc
pop
enter
cmp
and
stc
xor
movsb
pop
xor
jge
imul
inc
test
loope
insl
or
mov
outsl
push
int3
lds
repz
and
sub
xchg
jmp
mov
dec
mov
aam
mov
mov
xor
mov
and
xchg
jl
jns
add
lods
lock
cmp
mov
ss
add
fwait
mov
cltd
lret
inc
sub
rcrb
adc
mov
lods
or
push
test
inc
dec
orb
dec
or
repz
or
aad
dec
mov
mov
daa
sbb
lret
stos
xchg
stos
cmp
fcoml
cmp
ret
out
sti
mov
scas
aaa
mov
cli
jnp
inc
mov
add
rolb
das
adc
aas
data16
dec
aam
fstps
sbb
inc
add
adc
cmp
fdivrl
pop
sarl
insl
in
inc
mov
mov
in
aam
fistl
loopne
mov
jmp
lret
sbb
daa
hlt
adc
mov
and
in
and
or
in
and
stos
jl
sti
mov
sbb
stos
dec
fcomps
mov
rcrl
xchg
mov
jecxz
xchg
ss
push
lods
xchg
sub
adc
or
shll
inc
lock
xchg
xor
pop
clc
jmp
xchg
mov
stos
adc
sbb
popl
scas
test
sbb
or
cmp
xor
movsb
test
or
pop
test
pop
jp
mov
loop
cwtl
or
inc
fwait
leave
loop
inc
mov
mov
sbb
stos
cwtl
xor
lret
xchg
fildll
mov
lods
push
jmp
xchg
lock
fwait
mov
pop
mov
test
mov
imul
push
jp
daa
repnz
dec
sbb
pop
sub
js
test
xor
sbb
mov
mov
mov
test
aad
stc
imul
mov
sub
mov
jmp
cmp
dec
sbb
or
or
stos
mov
mov
mov
sarb
push
fistps
stc
or
enter
jne
call
cmpl
sbb
lock
jae
mov
xchg
int
push
repnz
mov
jmp
adc
sub
ficomps
shlb
pop
pop
js
jge
out
ficoml
inc
xor
pop
popf
or
imul
add
sbb
inc
cmpsb
pop
fistl
xchg
mov
loop
jmp
dec
inc
popf
xor
mov
or
jl
bound
out
mov
aaa
sbb
leave
sbb
and
sbb
jae
fsubr
inc
adc
xor
stos
jbe
mov
lea
mov
ret
mov
inc
loopne
mulb
dec
popa
test
lea
mulb
dec
mov
add
mov
inc
std
fwait
pop
cld
or
mov
mov
add
outsb
mov
rcr
add
add
repz
adcb
enter
pop
jo
movsl
sbb
and
lods
dec
lods
sbb
fs
je
stos
sub
int3
mov
js
mov
jmp
rcrb
adc
xchg
out
std
add
mov
out
cmpsl
or
cmpsb
pop
fucomi
push
dec
orl
push
insl
in
xchg
adc
call
sbb
and
test
add
orl
xchg
inc
cmp
mov
sub
test
adcb
lea
addb
ret
imul
inc
ds
icebp
clc
cmp
adc
xor
fnstenv
dec
add
or
insl
cwtl
ret
popa
cmp
cli
jns
lds
nop
clc
xor
shll
inc
lock
test
jge
into
push
add
inc
arpl
fldl
sbb
jo
or
cmp
jl
xchg
aaa
test
adc
js
lcall
movsb
mov
iret
call
rol
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
push
inc
cwtl
dec
and
jecxz
mov
test
in
mov
push
inc
and
xabort
js
jns,pt
enter
mov
int3
pop
xor
xor
dec
inc
mov
bound
outsl
test
sbb
inc
sbb
ret
les
pop
adc
pushf
cmc
pop
adc
jg
mov
jns
ds
and
sar
jecxz
mov
xchg
mov
xchg
sub
pushf
ret
pop
mov
imulb
shrl
mov
ja
push
dec
push
mov
bnd
inc
dec
stos
imull
out
jae
mov
les
call
lds
sbb
cltd
or
adc
mov
add
sub
fdivrl
cmpsb
sahf
xor
ret
mov
fsubl
repz
push
js
lret
add
dec
sbb
clc
shrl
roll
adc
data16
je
cmp
insl
in
mov
pusha
jo
cmp
xchg
cltd
out
fmul
mov
sub
cmp
mov
pop
cmp
sbb
js
test
orb
aaa
fisubrl
insl
cmpsl
add
cwtl
xor
clc
sti
pop
push
inc
push
mov
cmp
mov
mov
dec
sbbb
pop
scas
inc
mov
xchg
mov
int3
mov
fcmove
scas
sbb
sbb
jae
fcmovne
scas
or
in
add
insb
push
jl
or
clts
sub
cmp
push
jge
jmp
pop
lea
popf
pop
jle
cmp
lahf
jle
or
test
ss
loopne
das
cmpsl
xlat
mov
inc
lods
jg
out
pop
add
pop
cmp
mov
rcrl
sbb
mov
stos
push
test
in
xchg
jae
cli
jne
mov
sbb
jb
pop
hlt
or
and
iret
test
test
dec
push
or
fstp
imul
test
or
into
pop
stos
shll
pushf
arpl
xchg
mov
push
pop
add
xchg
iret
ret
popf
lret
pop
rclb
xor
test
xchg
int
call
cli
xlat
xchg
ret
stos
add
test
mov
subb
mov
repz
rcrb
les
test
xchg
lds
idivb
or
imul
adc
cmp
cli
add
cltd
mov
xchg
cmp
js
mov
push
shrb
or
ds
int3
daa
mov
mov
mov
pop
call
push
xlat
insb
repz
mov
aad
pop
cmp
pop
fs
out
inc
repnz
lret
stc
mov
mov
inc
mov
xchg
jge
jl
fwait
xor
xor
je
and
mov
dec
bnd
cmp
or
in
adc
lods
test
mov
inc
xor
mov
mov
pusha
xor
mov
and
mov
mov
mov
xor
scas
push
fisttpll
dec
and
xchg
dec
xor
out
add
pop
stos
xor
xor
inc
mov
mov
pop
dec
icebp
cld
xor
insb
mov
push
insl
popl
scas
test
int
push
test
lret
pusha
lret
pop
scas
aam
xor
mov
sub
and
loop
repnz
jno
push
mov
retw
mov
idivl
inc
dec
or
lea
xor
out
or
cmp
xchg
mov
ljmp
mov
cmp
xchg
je
xchg
xchg
inc
cltd
enter
mov
enter
xchg
xor
dec
arpl
mov
int
pop
or
addb
fnstcw
rclb
and
pop
stos
shrl
push
xchg
loopne
aam
xchg
dec
lahf
add
pop
cmp
lahf
lret
outsb
mov
jecxz
enter
lds
jo
jg
push
sbb
and
sub
mov
clc
sub
test
cmc
sbb
mov
bound
push
cmp
dec
mov
sub
push
addw
lock
mov
mov
xchg
pusha
dec
push
cmp
fxch
pusha
mov
push
or
inc
fwait
leave
loop
dec
sbbl
addl
pushl
pop
vpunpckhbw
sbb
cmp
push
pop
lods
xlat
cmpsb
mov
mov
ds
les
mov
and
es
push
mov
inc
arpl
mov
adc
add
dec
in
mov
inc
mov
insl
testl
pop
add
dec
inc
cmp
stc
clc
jp
add
dec
dec
sbb
add
push
pushf
mov
pop
js
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
adc
dec
dec
jge
fldenv
fucomp
jae
jns
dec
mov
xor
mov
cmpsb
sbb
popl
scas
call
add
mov
adc
fnsave
scas
dec
push
or
aaa
enter
pusha
jp
scas
dec
in
sbb
xor
jno
arpl
addb
fdivs
add
rcl
lahf
xor
sbb
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
test
cmp
cld
lods
fwait
mov
stos
xchg
out
mov
inc
inc
mov
hlt
je
push
lods
mov
cwtl
mov
jmp
lret
cltd
mov
call
sub
or
int
cmp
push
iret
fucomip
repz
mov
cwtl
cld
aaa
pop
lret
ret
mov
add
push
pushf
cmp
pop
js
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
adc
mov
cld
fildll
fs
xchg
iret
pop
ret
lcall
dec
mov
push
sbb
xchg
cmp
testb
fnsave
add
cwtl
jbe
fstl
inc
stos
ficoms
jl
loope
mov
out
sub
sbb
mov
fwait
push
dec
mov
insb
push
mov
inc
push
mov
fcomp
mov
scas
lcall
cmpsl
ret
xchg
fnstsw
inc
cltd
enter
push
mov
adc
inc
inc
dec
mov
sbb
xchg
dec
ljmp
mov
mov
int3
lcall
mov
lods
test
repz
push
pop
add
add
dec
dec
sbb
add
setl
leave
fsubrl
push
mov
cmp
lods
mov
lret
push
ret
sbb
mov
fucomp
jae
or
push
data16
cmp
jo
push
jecxz
xlat
stos
test
xor
dec
dec
dec
jb
test
test
sub
arpl
fcmovne
fcomps
scas
sub
mov
leave
and
adc
push
sbb
mov
dec
jecxz
jp
fnstenv
mov
loop
cmp
loope
sub
inc
fisttpll
cmpsb
mov
mov
inc
cltd
jmp
lea
mov
stos
push
inc
mov
cwtl
mov
mov
mov
push
mov
dec
adcb
add
jns
ss
pop
loopne
in
and
push
cwtl
push
pusha
xor
movsl
mov
lods
xchg
cmp
adc
mov
sub
push
sub
sub
and
scas
call
lahf
les
cli
cmp
shrl
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
cmp
inc
int3
add
mov
outsl
lods
mov
test
stos
jbe
or
pop
test
lods
add
cmpsl
dec
push
dec
inc
ret
cmp
stc
and
sub
or
fldcw
push
sbb
test
call
sub
mov
pushf
in
jbe
inc
sbb
js
es
call
mov
dec
mov
cwtl
mov
movsb
sub
mov
push
sbb
ret
js
test
xor
sbb
mov
repz
ret
mov
test
fucomip
mov
mov
in
imul
jg
adc
fdiv
cld
jg
mov
cwtl
addl
outsb
sub
fisttpll
dec
sbb
mov
and
jae
mov
mov
mov
popa
mov
xchg
fcomps
shrb
inc
shrl
xor
stos
sbb
push
scas
mov
gs
adc
fstl
xchg
lcall
movsb
mov
push
xchg
pop
xlat
lahf
sub
sbb
or
cld
jle
clc
lcall
test
out
jp
sbb
mov
out
push
call
inc
movsl
jmp
ficoms
lcall
cmp
or
xor
sbb
enter
test
nop
dec
inc
push
push
inc
mov
aad
pop
mov
mov
xor
out
ret
arpl
xchg
loopne
inc
in
pushf
out
and
mov
sbb
add
mov
jae
mov
or
mov
push
add
and
cwtl
dec
in
test
movb
bound
push
test
xchg
leave
pop
and
xor
cld
inc
inc
and
lahf
cmp
mov
nop
pop
or
decb
repz
int
xor
jb
loopne
sbb
mov
mov
cwtl
inc
sbb
mov
mov
xchg
mov
mov
adcl
pusha
subl
fdivs
in
jp
mov
pop
scas
push
push
pop
xchg
fsubl
mov
pop
testb
fucomi
hlt
std
mov
sti
and
repz
test
dec
push
or
test
adc
mov
mov
pop
sbb
mov
dec
movsl
cmpl
inc
mov
incb
aaa
inc
xchg
pop
add
addb
nop
and
jo
popf
das
lock
xor
leave
inc
sbb
jg
hlt
adc
mov
pop
stos
loope
and
in
or
xchg
movl
pop
lcall
push
insb
mov
xlat
outsl
jo
sbb
or
ficoml
stos
lret
lock
mov
mov
mov
pop
push
sbb
add
mov
scas
aaa
mov
cli
jnp
inc
mov
add
rcrb
mov
fwait
jmp
inc
sub
icebp
mov
lret
in
mov
mov
pop
mov
movsl
xor
cmpsl
jnp
int3
jno
jecxz
adc
mov
add
cmp
mov
pop
mov
pop
mov
les
or
xchg
push
mov
in
test
iret
sbb
imull
mov
add
subb
stos
push
lods
xchg
sub
adc
test
sbb
push
dec
add
imul
dec
sbb
add
test
out
or
mov
push
sbb
in
and
nop
mov
add
xor
sub
or
movsb
test
sbb
cmp
sbb
js
das
popa
or
lret
add
dec
adc
add
sub
inc
jnp
inc
push
mov
pop
xor
insl
xchg
inc
or
rcrb
lock
call
movnti
out
cmp
push
adc
dec
mov
out
or
cmp
sbb
mov
cmp
adcb
negl
fwait
or
xchg
push
mov
in
std
ja
iret
sbb
add
leave
into
add
test
inc
sbb
xchg
and
jl
daa
ret
inc
xchg
mov
adc
pop
jbe
add
cmp
sub
cmc
sbb
std
frstor
lret
push
fists
and
sub
les
jne
inc
pop
inc
sub
call
xchg
mov
ds
mov
pop
xor
cwtl
ljmp
fwait
leave
loop
inc
mov
mov
sbb
stos
cwtl
xor
lret
xchg
xchg
sub
mov
ret
push
mov
divb
out
mov
cmp
pop
gs
jl
inc
mov
mov
lea
and
sub
imul
jnp
popf
sub
shrl
mov
pop
adc
fstpl
iret
fucomip
repz
mov
cwtl
cld
aaa
pop
sub
ret
mov
add
addr16
cs
push
lret
loopne
xchg
jg
mov
cli
cmp
shrl
push
sub
jecxz
stos
mov
mov
pushf
dec
pop
xchg
adc
cwtl
inc
mov
or
jge
cli
arpl
xchg
stos
int
ljmp
pop
orl
lret
scas
fcoml
push
sbb
sbb
js
cwtl
in
idivl
add
in
pushl
adc
xchg
int
dec
pop
mov
push
pop
push
mov
out
xchg
mov
cmpsl
sti
clc
popa
jge
cmp
mov
add
sbb
push
jle
push
mov
xchg
jl
dec
daa
jmp
mov
inc
loope
inc
xor
mov
inc
mov
stos
lret
imul
hlt
jns
sti
mov
dec
lock
mov
cmpsb
xchg
stos
inc
call
or
inc
and
arpl
outsl
adc
mov
sub
dec
push
cmp
add
xor
rolb
cmp
dec
pop
insb
test
or
push
aas
xor
jl
cltd
add
push
std
mov
mov
xchg
pop
pushf
pop
loope
adcb
cmpsl
push
cmp
in
push
andl
sbb
fwait
mov
inc
xchg
pop
mov
mov
jns
or
out
out
stc
mov
fucomp
push
xchg
xlat
insb
jbe
push
pop
xchg
sbb
pop
pop
xlat
sbb
aaa
popf
iret
and
insb
aaa
sbb
mov
jb
repnz
sub
cmpsl
jne
inc
sub
cs
mov
idivl
sub
ss
int
jle
cmp
jle
aas
push
repz
add
ds
lahf
lret
call
xchg
push
aad
ja
xor
jg
inc
add
and
adcl
into
mov
rol
test
fistpl
push
movl
push
dec
cmc
std
in
cld
pop
insb
push
pop
ss
mov
mov
jge
push
add
sbb
fisttps
sub
popa
inc
and
ret
jge
or
fistps
inc
rcrb
add
and
xor
std
pushl
adc
daa
xchg
int
mov
rcrl
push
fbld
insb
imul
ja
sub
pop
cmp
into
jns
fs
sti
cmc
cmp
dec
pop
mov
sub
push
les
sarb
xor
xchg
fs
aam
mov
mov
push
stc
inc
inc
xor
les
inc
inc
mov
movsl
fcomp
add
inc
loope
or
fdivrs
mov
xor
movsl
popf
push
sbb
je
adc
jecxz
cld
or
fsubrl
adc
ret
popf
cmp
xor
xchg
xlat
out
repz
rcrb
cmp
cmc
sbb
hlt
loopne
test
cmp
dec
cmp
mov
jecxz
xchg
stos
lds
stos
stos
inc
lcall
cmp
lods
inc
sbb
push
fucomi
repnz
add
and
cmp
mov
inc
sarb
clc
pop
and
test
cmp
mov
and
rolb
imul
jae
push
xor
daa
jnp
loopne
mov
mov
xchg
pop
loope
xchg
sbb
fcompl
pop
xchg
add
sbb
popf
or
xchg
jmp
mov
dec
mov
les
sarl
cmp
push
fwait
js
mov
sti
mov
lock
sbb
aaa
add
jbe
pop
ror
dec
or
or
inc
stos
mov
sbb
stos
push
orl
push
cltd
push
add
addb
int3
cmp
adc
ss
pop
sahf
dec
pop
jno
aam
into
mov
mov
sub
dec
movsl
or
mov
fistl
cli
lds
sbb
pop
ljmp
fistps
mov
adc
insb
cld
jle
clc
jp
and
cmp
movsb
and
dec
cmp
lahf
aam
jp
lods
xlat
push
int
lcall
daa
dec
addr16
pop
in
stos
lods
data16
jne
xlat
or
xor
cmp
inc
sbb
or
or
xchg
dec
mov
inc
sub
xor
and
or
or
push
inc
inc
fwait
cmp
repz
sti
pop
or
push
inc
mov
jbe
pop
rorl
adc
mov
add
sbb
ret
xor
in
dec
xor
rorl
or
jne
sub
out
mov
ja
fs
cltd
xchg
xchg
lret
shll
lret
insl
mov
shlb
mov
xor
xchg
dec
fistpl
jb
fcompl
xor
sub
mov
cmp
fucomi
stc
mov
mov
xlat
mov
idivl
xchg
idiv
sub
xchg
cltd
fwait
xchg
int
dec
out
mov
orl
xlat
insb
jbe
out
cmp
pop
jge
jns
fs
sub
aaa
sbb
leave
xchg
cmp
or
fnsave
repz
adc
ficompl
stos
dec
pop
stos
shl
test
shlb
mov
into
cmpsl
adc
inc
rolb
or
inc
push
mov
inc
or
cmpsl
mov
lock
into
addr16
mov
xor
fisubrs
imul
sub
mov
and
mov
mov
dec
pushf
lret
rcrl
pushf
mov
mov
jge
push
jne
andb
stos
adc
mov
dec
fs
decb
es
mov
xchg
pusha
push
cmp
dec
mov
mov
jns
idivl
sahf
out
lea
js
ds
mov
push
das
test
cmp
push
push
lods
xlat
push
or
cmp
pop
jnp
shlb
cltd
pop
mov
cmp
lea
outsb
push
xor
les
jge
es
lret
int
sbb
fstp
jg
clc
orb
loopne
xor
frstor
push
add
iret
pop
fucomip
enter
dec
jo
sbb
ja
inc
test
jle
pop
ret
xchg
int3
addr16
mov
aaa
push
xor
loope
dec
xor
sbb
pop
sub
int3
js
movsb
push
dec
in
popf
in
loopne
insb
push
roll
pop
inc
mov
outsb
mov
jge
jge
iret
jne
mov
dec
test
stos
xchg
stos
shlb
adc
inc
int3
cmc
xchg
dec
movsb
aad
xor
xor
pop
in
bnd
xor
fs
xor
pop
push
sbb
cld
jle
clc
pop
mov
cs
xchg
and
xchg
pop
data16
push
xor
pop
neg
decb
outsb
xor
in
cmp
sub
es
cmc
fwait
lahf
iret
sbb
fcompl
or
es
sahf
and
mov
daa
push
test
aam
call
cs
or
cld
divb
ds
add
xchg
fldl
add
into
cwtl
js
or
mov
ret
sbb
aas
loop
imul
test
ljmp
ljmp
lods
dec
jo
push
dec
jne
les
movsb
push
dec
shl
mov
jl
push
mov
add
jge
fisttpl
mov
std
mov
and
or
enter
or
pop
mov
or
cmp
sbb
rcrb
mov
es
dec
pop
cmpsl
jns
dec
test
dec
sarb
push
out
jno
jp
dec
inc
cmp
mov
lock
fidivrs
fnsave
sti
sti
and
or
es
hlt
pop
mov
je
movsb
lcall
je
adc
and
pop
stos
shrl
sbbb
cmp
or
call
lock
pop
jbe
ss
sub
mov
mov
mov
dec
and
push
adc
popf
jnp
or
push
in
xchg
pop
jnp
outsl
jno
dec
mov
jne
stos
sbb
stos
inc
in
mov
cld
sub
std
xlat
jno
lret
sub
jl
sbb
mov
les
jb
xor
xchg
jecxz
movsb
frstor
lods
lret
popf
stos
pop
jno
cmc
add
fmull
sti
andl
jb
add
clc
cmp
sub
data16
push
dec
push
cwtl
data16
push
repnz
out
jns
lret
in
mov
mov
or
pop
fdivrl
or
scas
sbb
test
je
push
or
and
pop
push
mov
sub
lea
ss
and
xchg
ja
or
jmp
lea
scas
jo
jmp
sub
pushf
cltd
push
mov
and
mov
mov
jp
dec
sbb
and
push
test
add
fisttpl
fildl
movsl
xchg
sar
cmp
fsub
push
mov
xor
push
out
cltd
or
adc
mov
add
sti
xor
cwtl
dec
cwtl
dec
aas
mov
push
xchg
jl
mov
mov
or
std
in
pop
aas
cmp
addl
add
xchg
int
push
dec
and
cmpsb
in
dec
gs
nop
lods
out
int
loope
cmpsl
ret
flds
mov
mov
inc
push
aaa
popf
mov
mov
adc
ret
sbb
mov
inc
xchg
fdivrs
inc
mov
mov
push
idivl
xlat
arpl
movsl
loope
fidivrs
or
ds
int
sahf
jb
popa
xchg
lods
inc
stos
aad
add
dec
sbb
cmc
cld
jg
inc
sbb
data16
nop
adcb
sbb
lret
sbb
inc
ficoms
adc
subl
pushf
dec
arpl
mov
daa
mov
jns
sbb
lcall
xchg
sahf
xchg
ja
mov
jno
lds
xchg
adc
out
int3
inc
mov
pop
je
out
idivl
clc
jb
adc
mov
jmp
pop
mov
jecxz
mov
aam
mov
lahf
jg
xchg
ds
jb
fwait
outsl
push
movd
popf
mov
test
mov
adc
cs
movsb
pop
orl
mov
push
pop
push
xchg
int3
fwait
cli
xchg
aaa
fsubl
mov
xchg
add
ret
or
xchg
cmp
sbb
push
shll
push
xor
out
ja
pop
xor
mov
jg
lds
add
xchg
int3
repnz
inc
add
adc
scas
and
and
bnd
push
in
mov
pop
add
ljmp
bound
mov
in
insl
ret
add
xchg
dec
scas
xchg
stos
lds
adc
add
add
jp
add
sbb
mov
mov
cwtl
inc
sbb
aaa
fucomi
mov
stc
into
scas
je
mov
xor
pop
sub
bound
popf
cli
add
push
dec
movsl
cwtl
outsb
test
push
les
sub
movsb
lcall
cmpsl
scas
repz
add
enter
lock
or
sbb
xor
sub
dec
cltd
adc
es
pop
push
mov
dec
xchg
outsb
jne
push
sahf
sbb
test
int3
cmp
xlat
mov
in
mov
mov
ds
or
into
lods
mov
cli
enter
dec
pushf
inc
stos
xchg
push
xchg
dec
popf
mov
imul
test
sub
pop
scas
mov
xor
nop
fs
mov
cltd
fcoms
data16
je
inc
push
aaa
pop
mov
movsl
adc
gs
add
nop
lods
shr
rcrl
dec
mov
into
xor
and
or
into
inc
int
sti
and
mov
mov
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
lods
rcr
call
cmpsb
jo
mov
popf
stos
int
pop
sub
or
mov
xor
pop
stos
pop
push
addb
stos
shr
repz
adc
lcall
add
fisttps
xchg
sbb
ret
add
mov
jg
lds
loop
lret
pop
dec
icebp
ss
aad
leave
cmc
inc
jge
push
test
cli
sub
mov
pushf
jae
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
cmp
icebp
testb
pushf
inc
sbb
adcb
lods
cmpsb
aad
imul
jbe
outsl
sub
js
shrb
cltd
popf
sahf
jg
cmp
sub
jge
icebp
jp
inc
sti
mov
rclb
pusha
sarb
inc
sbb
add
daa
ja
jo
mov
adc
sub
push
jbe
xor
enter
ret
xchg
mov
fs
sbb
shlb
inc
xchg
push
inc
mov
pop
dec
adc
xchg
mov
aam
mov
addl
push
or
lea
lods
push
in
pushf
out
and
mov
sbb
add
mov
aaa
gs
dec
aaa
mov
push
dec
mov
aas
ljmp
push
adc
aam
fildl
or
dec
mov
sub
cmc
sbb
hlt
loopne
test
aam
sub
mov
xor
or
stc
out
pop
stos
xchg
fwait
popf
pushl
mov
movsb
push
sub
ret
fnstcw
pusha
push
jg
cwtl
or
inc
cltd
leave
loop
lds
cwtl
xchg
stos
arpl
add
sar
jo
adc
xchg
int
dec
scas
jge
outsb
cmp
pop
push
sub
jae
fbstp
pop
jne
cltd
out
push
lea
dec
inc
adc
pop
inc
sbb
dec
inc
xchg
xor
or
xchg
dec
mov
das
mov
sbb
inc
inc
push
push
mov
daa
pop
sbbb
mov
push
adcb
les
fistps
ss
popf
pushf
or
nop
adc
mov
mov
lcall
jge
xchg
insl
fldl
xor
cmpsb
xor
mov
sbb
out
outsb
push
pushf
mov
jge
push
add
adc
xchg
fwait
sbb
jb
sub
push
mov
jp
cmp
mov
push
adc
ss
dec
in
in
mul
sarb
push
dec
or
add
das
ds
xchg
jecxz
cmp
jns
fildl
bound
imul
shlb
jecxz
pop
test
pop
mov
lret
jne
cmpsl
or
outsb
inc
mov
cmp
test
xchg
dec
daa
fidivs
cmp
adc
inc
xor
add
call
pop
mov
loopne
fidivl
jae
mov
inc
mov
xchg
mov
pop
dec
shlb
dec
jg
push
sbb
cld
push
cwtl
push
divb
icebp
push
or
add
xor
cmpsb
movsl
loop
loope
adc
mov
pop
lahf
std
js
icebp
pop
fcomps
stos
test
sbbl
lahf
sub
or
inc
dec
mov
xchg
jle
pop
xchg
dec
push
mov
inc
pusha
mov
sub
or
xchg
and
push
lret
or
sub
test
dec
sarb
xchg
sub
dec
and
int3
mov
inc
jge
imul
pop
mov
mov
xchg
xor
jb
sbb
or
clc
out
adc
das
inc
jp
enter
popf
push
mov
setp
movsb
xchg
out
push
adc
fsts
popa
pop
mov
pop
adc
fstpl
iret
fucomip
repz
icebp
push
rclb
xchg
sub
pushf
ss
or
xchg
dec
and
push
nop
mov
fidivrl
mov
add
scas
mov
xchg
fildll
dec
popf
lret
mov
pop
mov
add
mulb
xchg
imul
fistl
cmp
gs
lods
inc
shll
scas
or
scas
aaa
mov
cli
jnp
inc
mov
je
sbbl
push
dec
mov
test
adc
test
mov
ljmp
popf
mov
xor
push
gs
fwait
pop
mov
mov
cmp
ret
testl
test
push
bound
mov
sbb
mov
dec
push
gs
add
cwtl
dec
and
mov
mov
test
add
int
sbb
loop
mov
fbstp
add
pop
add
sub
sbb
xor
jg
fs
lock
fcmovnu
mov
xor
xor
loop
les
pop
or
aas
sub
insb
push
cmp
sbb
xor
int3
pop
mov
jl
cmp
cld
xor
add
xchg
or
imul
mov
ret
stos
xor
xor
cwtl
enter
test
and
cmp
pop
sub
rcl
jae
cs
cmpsl
in
mov
out
sbb
mov
out
je
mov
movsl
xor
xchg
cld
in
jo
pop
cmc
cmp
add
popf
mov
mov
mov
dec
inc
pop
lret
dec
into
mov
cltd
jnp
test
adc
inc
pop
ret
xorb
mov
mov
inc
popf
mov
add
inc
fcomi
clc
cmp
mov
pop
dec
aaa
mov
add
jle
cmpsl
inc
mov
ja
sub
and
add
push
enter
mov
lds
sbb
adc
xlat
xor
mov
cmp
enter
mov
cltd
add
mov
xchg
dec
fcompl
and
jns
inc
pop
mov
add
xor
js
cmc
add
xchg
cmp
js
mov
and
rcr
or
test
dec
add
mov
push
lock
sbb
push
lods
xlat
lretw
aad
aas
scas
imul
repz
mov
mov
and
mov
lret
mov
test
aad
dec
cmpb
dec
mov
aad
dec
mov
sbb
addr16
add
pop
pushf
dec
inc
sbb
and
mov
push
popf
mov
cmp
jp
add
jne
ret
mov
add
setl
leave
fsubrl
push
mov
test
test
push
test
test
mov
lret
fucomp
jae
jns
mov
cld
push
insb
push
pop
jbe
insl
mov
jae
pop
in
jge
imul
stos
inc
sbb
fistl
xchg
pop
dec
push
push
inc
fsubrl
ret
ljmp
fists
dec
popa
add
or
mov
inc
icebp
js
ds
pop
test
incl
pop
pop
ljmp
adc
test
jnp
push
and
mov
into
xchg
sub
fs
fwait
clc
aaa
popf
iret
and
and
sub
inc
inc
sahf
mov
je
and
test
inc
push
mov
fsubrs
test
xchg
sti
scas
or
aas
or
repz
push
xchg
jns
adc
xor
pop
int
iret
hlt
movsl
mov
sbb
add
mov
fs
inc
and
das
and
aaa
jnp
push
mov
inc
mov
dec
xor
inc
popa
xor
xchg
fdivl
sub
mov
pop
repz
add
mov
mov
add
inc
mov
adc
cmp
gs
lods
inc
shll
mov
xlat
in
repnz
lret
fwait
cli
jnp
inc
mov
je
sbbl
push
dec
mov
jno
leave
mov
loopne
call
push
sub
ja
fistpll
ret
fld1
jb
cmp
mov
pop
dec
inc
push
jb
insb
aaa
sbb
or
sub
cmp
mov
dec
ret
pop
mov
dec
sub
pop
push
int
je
mov
out
sub
mov
ret
test
repz
add
mov
pusha
adc
mov
add
xor
or
sub
mov
xchg
enter
pop
pushf
inc
stos
adcb
lods
mov
pop
lods
push
sub
add
fsubs
push
push
pop
sbb
xchg
xchg
mov
iret
repnz
sbb
xchg
fcomp
adc
sub
adc
sub
xchg
xchg
sbb
fstl
mov
cld
arpl
mov
pushf
cli
stc
punpcklwd
rcll
push
pop
mov
dec
aam
xchg
mov
repnz
pusha
mov
pop
xchg
mov
mov
cmp
mov
fwait
xchg
xchg
inc
cltd
enter
mov
int3
pop
sub
cmp
sub
adc
jmp
mov
adc
and
gs
mov
jl
inc
inc
push
repz
add
jl
add
cltd
je
mov
dec
or
mov
test
lret
fadd
adc
and
xor
xor
lock
mov
push
bound
push
loopne
xor
ss
sbb
jns
push
sbb
or
mov
lock
pushf
ljmp
fwait
in
leave
and
sbb
cmc
xorb
xchg
out
pop
inc
add
xchg
ds
mov
push
icebp
and
rclb
add
and
xchg
imul
mov
inc
fstpl
pop
insl
cmpps
xchg
push
call
mov
pop
xchg
enter
hlt
je
in
fwait
push
js
mov
cmp
sbb
mov
dec
pop
mov
mov
test
or
in
imul
jg
adc
std
cmc
cld
jg
imulb
adc
neg
repnz
cmp
jno
lods
push
sub
add
sub
mov
stc
inc
fldt
sub
xchg
mov
push
push
inc
pop
repz
test
mov
stos
or
mov
pop
fisubrl
popa
mov
push
ja
pop
xor
mov
pushf
cs
xchg
fsubrl
sub
xlat
in
idivl
mov
out
pushl
or
pop
test
ljmp
dec
fcoms
sub
add
imul
std
roll
pause
data16
lret
bound
adc
outsl
xchg
add
push
adc
push
dec
push
into
sub
jne,pt
js
leave
cs
aad
pop
mov
repz
pop
push
adc
les
inc
fsubrp
imul
imul
lret
jecxz
add
scas
sti
xor
rcll
add
test
pop
stos
push
lods
xchg
sub
adc
cmp
shll
inc
lock
xchg
scas
lret
fucomp
xor
mov
mov
jmp
mov
xchg
dec
mov
idivb
dec
mov
fisubrl
aad
mov
jae
fsubs
ja
sub
cmp
cmp
js
mov
pushf
stos
sti
cmpsb
xchg
cmp
jle
push
inc
pop
jae
dec
mov
dec
dec
sarb
out
push
mov
sub
cmpsl
inc
jne
fidivrl
cmp
fucomp
mov
mov
rclb
xchg
imul
aam
dec
pop
pop
sub
lahf
sub
into
sbb
incb
pop
inc
mov
adc
ret
xchg
mov
jecxz
inc
inc
sbb
outsb
adc
ret
lret
aam
or
ss
jns
mov
hlt
stos
rcll
dec
pop
or
out
inc
in
fcmovne
pushf
or
imul
lods
lahf
popf
jmp
dec
popf
lret
shlb
and
rolb
movsb
xor
mov
cmpsb
xor
jb
loopne
sbb
mov
inc
sbb
aas
fucomi
mov
stc
into
scas
je
out
push
jnp
adc
addl
ljmp
rcr
xor
repnz
cld
stc
je
pop
jne
lods
xlat
insb
imul
pop
xchg
pop
cmp
idiv
les
popf
xor
shlb
inc
inc
mov
xchg
mov
daa
dec
dec
lcall
adc
cmpsl
dec
dec
mov
push
cmc
imul
inc
shl
mov
mov
pusha
std
jns
mov
fbstp
mov
ret
pop
mov
or
gs
lock
xchg
push
hlt
mov
faddl
adc
mov
or
cli
and
adc
and
mov
movsl
fsts
in
cwtl
arpl
aam
push
jl
xchg
add
xchg
lret
or
roll
outsl
xor
lret
xor
loope
cltd
lods
inc
sbb
aad
push
push
dec
cmp
in
imul
jnp
inc
mov
jp
sbbl
push
dec
mov
jno
leave
mov
loopne
call
push
sub
ja
fistpll
ret
fld1
jb
cmp
mov
or
jb
insb
aaa
sbb
or
sub
cmp
mov
dec
repnz
loop
xor
mov
mov
mov
insl
pop
xchg
mov
mov
or
add
mov
jae
cmpsb
mov
add
aad
add
ss
mov
mov
jl
or
xor
leave
mov
lret
pop
mov
mov
icebp
mov
mov
ffree
lock
lods
pop
or
sbb
gs
adc
mov
adc
sbb
adc
cmp
fcmovnbe
inc
pop
cld
mov
inc
pushf
shr
sbb
icebp
xchg
pushf
fists
inc
shlb
addl
dec
sbb
xorl
insl
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
ss
fld1
xor
cmpsb
jo
out
call
cmpl
enter
xchg
popf
hlt
jl
or
scas
int
imul
hlt
lcall
pop
or
or
imul
hlt
jns
sti
mov
mov
aaa
mov
cmpsl
lcall
mov
addr16
scas
dec
aam
and
mov
mov
and
sbb
mov
aaa
js
std
movsl
push
dec
mov
cld
stc
sub
add
or
repnz
push
jge
mulb
pop
push
outsb
les
push
jb
test
or
cmp
adc
mov
andb
fmulp
mov
js
inc
ret
faddl
jge
aad
test
loope
sbb
xchg
inc
test
rcll
push
fisubl
adc
in
push
insl
out
push
dec
cmp
hlt
or
and
sti
test
test
dec
push
or
int
imul
test
insl
sub
adc
call
je
pop
sbb
cmpsl
iret
fucomip
repz
xchg
mov
cmc
pop
xor
dec
push
jo
in
ja
inc
add
jecxz
cld
or
stos
dec
and
fs
movsl
mov
rcrb
sub
pop
mov
adc
mov
lods
out
cmp
mov
mov
mov
sbb
mov
fildl
mov
stos
xchg
sbb
cmp
mov
xchg
mov
int
adc
fildll
mov
cld
sub
lahf
jl
aas
pop
test
pop
fstl
sbb
sarl
fwait
jmp
mov
out
push
out
mov
mov
push
stos
pop
sbbl
into
clc
lock
fisubs
fcomps
mov
dec
mov
enter
jne
lret
mov
xchg
hlt
or
adc
cmp
sbb
cmp
ss
mov
loop
in
mov
jae
mov
sbb
in
ret
jnp
mov
xor
popa
movsl
sbbl
mov
testb
mov
sbbl
dec
sbb
les
mov
xor
mov
pushf
cs
mov
sahf
das
xchg
stc
cli
in
test
cmp
mov
add
mov
pop
pushl
popf
xor
or
fwait
pushf
adc
xchg
push
cltd
mov
and
fcomi
js
inc
bound
cld
add
pop
push
mov
pop
js
mov
cmpsl
mov
xor
dec
les
je
enter
test
mov
sbb
ljmp
xchg
xchg
inc
cltd
enter
mov
fcompl
sarb
mov
sub
adc
jmp
lret
sbb
jb
iret
inc
inc
idivb
shrb
movsl
pop
or
sbb
jns
sti
mov
xchg
jns
mov
push
dec
mov
mov
fadd
adc
dec
sarb
imulb
pop
push
sub
in
and
cld
or
jno
xchg
jmp
lds
push
jle
ss
pop
ss
sbb
cmp
lds
enter
in
shrb
lret
xchg
lods
shl
or
push
cmp
bound
pop
or
sarb
mull
push
push
pop
rorl
pop
push
or
xchg
mov
push
stc
or
popf
jb
or
movsb
inc
inc
frstor
mov
pop
sbb
pop
and
sbb
pop
mov
loop
leave
sbb
add
sub
cmpsb
jne
sub
jecxz
mov
xor
cmp
imul
sub
sbb
mov
clc
sti
mov
shl
ret
mov
sbb
dec
dec
sbb
add
inc
sbb
add
shll
mov
add
and
test
pop
mov
mov
std
or
je
lods
pop
fcoms
fimull
dec
das
sbb
xor
ja
aad
mov
fisttpll
cmp
sbb
mov
test
fstl
mov
ret
push
jno
clc
add
inc
ficompl
cmpsl
adc
inc
jo
cwtl
mov
mov
or
rolb
or
cmp
mov
imul
xchg
dec
jb
cmpsb
jmp
loopne
mov
jns
mov
hlt
psrad
mov
fcoms
and
lcall
jbe
adc
test
clc
je
xchg
into
xor
sub
cmp
mov
clc
ds
mov
jge
pop
dec
aaa
and
cmp
cmp
dec
jo
imul
push
clc
and
jg
xor
test
sbb
ja
push
and
test
dec
pop
dec
sbb
fnstsw
jge
jns
mov
popf
lret
jmp
fsubrl
adc
pop
push
dec
push
mov
scas
fcmovne
xchg
fwait
sbb
inc
sbb
pushf
push
sub
inc
inc
mov
sahf
adc
xor
fbstp
clc
sbb
pop
push
mov
testl
mov
mov
jecxz
jl
pop
sub
xor
test
gs
imul
sahf
rep
cmp
out
and
pop
decb
sbb
or
cmpsb
jns
fldpi
mov
sbb
ja
xchg
repz
clc
xchg
pop
lock
ret
add
push
ror
ja
cmp
add
fiaddl
lock
mov
orl
cltd
lret
inc
sub
mov
stc
dec
adc
xchg
scas
subb
xor
rcrl
pop
pop
jns
add
nop/reserved
sub
lds
les
pop
fists
push
lcall
jle
mov
std
leave
es
mov
pop
mov
or
mov
add
clc
aad
inc
inc
sarb
add
fsubs
les
imul
out
xor
cmp
imul
push
dec
out
ja
stos
pop
mov
cmp
in
clc
pop
in
cmp
or
xor
outsl
xchg
or
or
out
imul
imul
pop
jb
mov
fdiv
lcall
adc
add
pop
mov
bound
xchg
pusha
in
sbb
sub
shrd
jle
cmp
inc
test
leave
mov
leave
cwtl
adc
mov
loopne
push
test
clc
mov
pop
scas
push
sub
movsl
adc
and
dec
mov
iret
mov
jp
xchg
pushf
jo
push
mov
mov
mov
sub
add
or
dec
jnp
lret
adcl
jae
cmp
jmp
loopne
fdivl
inc
mov
add
aas
repz
decl
aas
cs
xchg
xor
jmp
jne
mov
ficomps
push
fdivrs
gs
xor
inc
mov
add
mov
cmp
loop
push
jb
outsb
aaa
sbb
or
hlt
jl
dec
xchg
pop
cmpsb
je
mov
dec
sahf
dec
movsb
lods
xchg
mov
shr
ss
les
inc
loop
push
mov
aam
dec
lahf
in
xor
sbb
mov
lock
ss
fs
inc
ret
cmp
icebp
imulb
sbb
add
push
xchg
jne
sub
push
and
push
dec
jnp
leave
jge
cmpsb
pop
mov
inc
daa
push
cld
jo
hlt
or
sbb
mov
push
xor
mov
sar
pop
dec
lods
push
sub
lret
jae
inc
pusha
ficoms
jg
mov
fs
out
jbe
subl
inc
inc
pop
adc
in
jle
packuswb
or
cwtl
jo
push
lods
daa
enter
pop
jo
fidivrs
fistpll
jle
sbb
enter
cltd
push
hlt
mov
sbb
jbe
or
sub
cmp
enter
add
dec
ret
pop
push
lahf
gs
or
mov
inc
inc
fwait
cmp
pop
add
mov
push
mov
mov
sbb
repnz
push
add
mov
push
push
mov
fs
push
cmp
sub
cmc
sbb
hlt
loopne
test
aam
sub
mov
xor
or
jge
cmc
pop
stos
xchg
stos
std
mov
add
inc
mov
sbb
sub
and
jge
lds
push
add
mov
mov
cmpl
shlb
icebp
xchg
xchg
mov
sahf
mov
adc
mov
push
insl
xchg
mov
jae
call
mov
fstpl
pop
daa
jb
insb
aaa
sbb
cmpsl
mov
xchg
lea
ds
mov
mov
stc
gs
sbbl
arpl
pop
and
inc
mov
cmp
sti
mov
addr16
add
aaa
mov
cmp
jecxz
lock
jne
ret
jno
mov
hlt
das
jno
dec
xor
mov
repz
test
sbb
sbb
scas
mov
jecxz
mov
jae
cltd
inc
ret
add
push
pop
inc
mov
outsb
aad
jbe
add
lea
inc
mov
mov
imul
sbb
jnp
dec
push
fisttps
sahf
inc
pusha
rclb
cld
jae
jns
jno
fs
adc
jl
xor
bound
or
aam
test
lock
mov
inc
push
fsubs
sub
mov
mov
push
xlat
aaa
fpatan
cmpsb
inc
cltd
out
and
mov
jb
jns
es
ret
add
loop
gs
dec
mov
mov
mov
cmp
addps
jp
xor
mov
imul
movsb
popf
lret
clc
xor
iret
fwait
pop
push
rcrb
sarb
or
dec
int
inc
ljmp
stos
mov
inc
pop
xchg
mov
imul
cmp
jne
jmp
lret
mov
mov
out
xchg
dec
data16
sbb
push
cmp
push
mov
pop
jne
ffreep
lods
mov
rcrb
jno
pop
popf
pop
ljmp
adc
leave
cmc
xor
sbb
fdivp
jl
inc
stos
mov
std
pushl
je
xchg
xchg
fwait
ljmp
fwait
cmp
mov
les
mov
gs
cmc
cld
sub
pop
mov
sti
repz
and
cmpsl
je
or
loopne
xchg
jb
jl
adc
or
and
xchg
hlt
cmp
push
inc
inc
push
push
sahf
mov
es
sbbb
sti
mov
ret
sbb
mov
add
fiaddl
repnz
cmp
orb
mov
push
mov
stos
in
and
pop
mov
xchg
jmp
stc
mov
xor
mov
loopne
jae
push
mov
pop
out
jb
mov
and
sbb
in
jge
dec
push
pop
add
imul
nop
or
or
pusha
mov
fstl
sti
cli
test
and
in
jns
push
mov
jb
cltd
push
subl
mov
add
mov
dec
stc
gs
push
aam
jmp
test
jb
and
or
inc
mov
cmpsl
ret
test
mov
pop
aaa
popf
iret
pusha
sbb
dec
mov
in
decl
xchg
inc
push
mov
push
dec
mov
fsubrl
sbb
int3
sbb
or
out
repz
inc
jmp
and
mov
negl
lock
ljmp
jbe
add
dec
lds
pop
cmpb
sbb
fs
lods
jne
fistpll
push
test
cmpsl
stos
sbb
mov
inc
and
xchg
xchg
aaa
dec
jo
xchg
sub
cmp
aas
push
mov
outsb
enter
decl
jmp
sbb
sarb
fstl
jmp
mov
lahf
inc
mov
mov
loope
xchg
and
lahf
pop
mov
rcll
jle
clc
xor
pushl
mov
lea
pusha
icebp
xchg
xchg
mov
insl
lret
adc
int3
pop
mov
and
xor
dec
les
lret
out
pop
push
outsb
aaa
popf
adc
adc
ss
leave
adc
lock
outsb
out
cmp
sarl
pop
cmpsb
xor
test
int
int3
lcall
test
pop
movsl
pop
lock
pop
call
mov
sbb
cmp
adc
aad
ja
push
sbb
lds
jmp
cmp
out
or
mov
outsl
adc
cmpsb
repnz
scas
inc
in
lahf
shrl
loop
inc
fstl
repz
xchg
arpl
inc
fidivs
cld
mov
mov
es
dec
push
pop
and
mov
repz
jne
gs
divb
lret
int3
cmp
mulb
jle
pop
icebp
mov
push
xchg
pusha
mov
push
or
pop
push
ds
dec
loop
cs
xchg
and
mov
int3
fcomps
pop
xchg
pop
loope
mov
fsubl
ret
fld
fsubrs
xor
mov
enter
cwtl
fiaddl
test
aaa
inc
sbb
loopne
sub
mov
aaa
jecxz
call
ds
add
pop
mov
loopne
filds
inc
mov
sahf
lret
and
adc
shr
ja
repnz
inc
jne
ret
push
sbb
fisttpl
hlt
mov
xchg
mov
movsb
test
bnd
push
sub
or
in
mov
add
push
pushf
cmp
pop
mov
je
imul
jb
xchg
outsl
sub
lock
test
lds
push
pushf
jmp
sub
cmp
cld
or
popf
jecxz
idiv
fistpl
and
mov
add
ret
add
jae
sub
aas
jns
dec
xor
imul
out
movsl
inc
sbb
out
vpshuflw
cmp
jne
out
jo
fstps
cmp
adc
xor
int3
mov
push
sub
ja
rolb
add
xor
pop
adc
pop
xchg
jl
ret
push
sub
out
pop
maxps
cwtl
loopne
sbb
add
mov
mov
aas
fimull
imul
mov
mov
and
ja
push
and
test
sub
std
jae
stos
mov
mov
sub
incl
inc
pop
mov
popf
fdivrl
dec
mov
lahf
cld
rcll
mov
and
out
lahf
pop
lahf
inc
pusha
dec
sub
inc
test
mov
cmp
in
sbb
clc
xor
or
les
xchg
sub
inc
cmpsl
adc
cmp
fcoms
pop
mov
and
call
inc
cltd
hlt
psubb
xchg
mov
sbb
shr
lret
push
ficoms
fisubs
rolb
jns
mov
popf
xor
push
insl
fldl
mov
loopne
jg
mov
xor
push
fists
or
scas
inc
les
adc
jecxz
aam
sub
sub
test
lds
push
push
mov
pop
popa
out
cmp
in
pop
leave
bnd
mov
jge
adcl
add
sbb
xchg
adc
sahf
jg
cmpsl
push
push
scas
mulb
scas
dec
pop
jp
add
inc
jmp
xchg
fstl
jl
shr
sbb
xchg
jle
mov
int
and
cmpsl
xlat
or
and
dec
pusha
sbb
add
sub
xchg
and
jbe
jae
cmpsb
xlat
sub
cld
sbb
mov
dec
sahf
cmpsl
jnp
test
mov
push
outsb
xor
jne
out
mov
jmp
mov
pop
cmp
pop
es
dec
daa
adc
in
cmp
js
dec
pop
mov
adc
loopne
pop
adc
jo
ja
mov
negl
aaa
inc
int
xchg
gs
sbb
test
jno
fnstenv
dec
sbb
jp
mov
imul
dec
sbb
stos
popf
jae
stos
mov
mov
popf
rclb
add
mov
pop
lret
stos
xchg
fistl
sbb
pop
repz
dec
cmp
push
mov
add
repnz
int3
xor
int
xor
pop
repz
cmpl
jb
sbb
daa
test
in
jae
and
popa
cwtl
dec
xor
push
sbb
jbe
test
pusha
outsl
clc
adc
gs
cmp
xchg
mov
xrelease
cmp
cwtl
dec
push
and
adc
cltd
repnz
inc
and
xchg
adc
mov
and
mov
sbb
fisubs
call
lahf
in
loopne
notl
ja
bound
mov
or
ja
insl
fsts
sarb
jp
mov
add
addr16
push
mov
sbb
xchg
add
imul
mov
es
or
mov
lock
push
enter
nop
aaa
pop
jnp
ja
int3
in
jmp
fsub
outsl
in
scas
lahf
fnstsw
repz
leave
loop
and
cmp
in
sbb
xlat
cs
xchg
inc
repnz
cwtl
dec
xor
out
mov
or
and
lods
pusha
mov
imul
cs
xor
rorl
and
rcrl
push
mov
enter
int
dec
dec
fdivs
call
shr
ss
add
cmpsl
adc
jnp
inc
inc
mov
daa
inc
test
add
inc
sbb
insl
pushf
ret
fs
psadbw
outsl
push
push
pop
aaa
jno
mov
icebp
xor
ss
mov
fs
lods
sbb
dec
rcr
cmp
insl
mov
or
cld
fildl
add
and
xor
jge
push
mov
xchg
pop
pushf
arpl
mov
aad
adc
or
scas
aaa
mov
cli
jnp
inc
mov
mov
inc
sarb
je
gs
test
lock
mov
xor
push
inc
jge
inc
mov
mov
dec
jno
cmc
iret
lcall
fsubs
out
enter
adc
arpl
hlt
je
push
sub
sub
js
test
or
fisttps
mov
xchg
insb
pop
push
rolb
inc
mov
ficomps
aaa
gs
dec
aaa
mov
insl
test
mov
sbb
inc
lock
fistl
pop
and
add
movsl
into
push
movsb
jmp
fildl
out
adc
bound
clc
add
mov
outsl
lods
cmp
fisubrl
test
stos
jbe
outsl
sub
daa
shrb
cltd
push
adc
ret
mov
mov
cld
lret
mov
sub
ds
mov
add
sbb
rclb
mov
rol
jge
xchg
ja
xchg
push
flds
lret
movsl
cmp
pop
pushf
and
lahf
in
push
into
sahf
xor
fs
cmpsb
sti
mov
ret
xchg
inc
mov
test
je
adc
mov
popf
xchg
pop
test
adc
mov
daa
pop
addl
adc
mov
jp
jecxz
push
sbb
jecxz
sbb
or
sub
jns
ffree
retw
dec
and
dec
sbb
inc
lods
push
and
lds
mov
add
xchg
fstpt
pop
xor
lahf
js
push
mov
scas
or
cltd
cltd
adc
sbb
or
scas
gs
popf
xor
add
fistl
push
sub
xchg
mov
pusha
push
jg
pop
or
or
xor
cmc
out
data16
cmp
sbb
into
pop
adc
add
mov
dec
loope
adc
addr16
sti
adc
or
xlat
insb
jbe
lcall
aas
xor
je
mov
dec
pusha
xor
push
adc
inc
add
sahf
leave
cwtl
mov
sbb
out
jnp
or
gs
jbe
sub
stos
mov
int3
cltd
pop
jbe
jmp
in
cmpsb
push
mov
or
add
pushl
mov
sbb
cmp
pop
add
dec
pop
hlt
sub
xor
mov
push
fwait
sub
xchg
push
hlt
sub
mov
fsubrl
push
xchg
adc
stc
inc
and
inc
faddl
sahf
sti
sarb
push
dec
ret
in
je
shlb
les
popa
inc
cmp
test
xchg
stos
lds
enter
imul
mov
sbbb
cmp
aad
adc
lahf
jb
sub
stc
subl
mov
push
jmp
adc
xchg
int
mov
addr16
outsl
xchg
mov
insl
loope
add
pop
sahf
inc
and
mov
jne
out
pop
data16
popf
adc
sbb
leave
adc
hlt
jl
outsb
out
gs
dec
daa
adc
mov
adc
cmp
mov
dec
or
mov
stos
into
sbb
mov
jo
pop
adc
fucomp
ja
hlt
scas
shlb
pop
dec
ss
xor
dec
sbb
mov
inc
add
mov
sbb
xchg
rcll
lcall
sahf
cmp
in
test
or
or
sub
jge
cli
arpl
aad
push
std
xor
out
cltd
sbb
and
in
aad
int
addb
lahf
fsubp
mov
sarb
jl
arpl
rolb
xchg
fildll
sbb
lret
and
xchg
mov
xchg
pop
xchg
mov
mov
cmp
jp
jne
ret
push
lea
bound
cmp
xor
imul
mov
xor
das
mov
aam
mov
dec
call
mov
mov
icebp
ds
lock
mov
fildll
sub
cmc
sub
fidivrl
ds
mov
jb
aam
mov
sub
cmc
sbb
mov
cld
sub
in
in
inc
add
mov
adc
xchg
fmuls
jp
or
mov
lcall
pop
lret
lret
aam
mov
test
in
sbb
xor
jp
das
push
sbb
mov
loope
cmp
addl
jne
inc
push
adc
mov
fwait
xchg
sub
cmp
inc
sbb
mov
mov
lds
or
or
pop
aaa
je
test
mov
lock
inc
cmp
sub
test
test
scas
shrl
mov
dec
jo
out
and
js
stc
out
mov
sub
xchg
sub
add
insb
push
hlt
sub
xchg
sub
lcall
pop
scas
fs
sub
lahf
lcall
movsb
leave
inc
sbb
lods
push
lahf
mov
push
push
rol
push
cmp
stos
fcoms
data16
jp
or
jl
rorl
bound
icebp
push
test
lret
popa
xchg
outsl
cmc
scas
ret
aad
cmp
cld
add
inc
aas
in
cmp
stos
into
imul
jns
mov
or
les
movsb
ret
xor
into
mov
xlat
lcall
or
xchg
fldt
inc
nop
enter
sbb
sub
and
add
loop
stos
cmpb
das
and
movsb
jmp
cmc
cmp
sub
fistl
xchg
sahf
and
mov
in
dec
fistpll
jg
insl
mov
pushf
jns
mov
repz
or
ret
inc
test
sar
sub
jge
les
xchg
jmp
mov
dec
pop
sub
dec
pop
inc
or
fcoms
les
cli
das
cmpsb
push
lret
or
dec
cmp
dec
les
fistl
mov
mov
incl
xor
aad
in
jge
mov
std
pushl
popa
or
test
push
dec
frstor
mov
rcll
hlt
lcall
push
cmp
aad
mov
ror
outsl
wbinvd
adc
dec
cmp
loopne
idivb
bswap
es
aam
sub
add
mov
mov
bound
call
sarb
sahf
and
xor
mov
daa
clc
iret
xchg
sub
push
mov
jbe
pushf
int
mov
jns
pusha
xor
leave
jg
out
push
out
mov
jge
pushl
ror
sbb
inc
lahf
xor
and
mov
mov
cmpsl
mov
rcrl
nop
mov
lds
cli
enter
mov
xor
stos
std
xor
cmpsl
cmp
stc
xor
xchg
jbe
inc
xchg
scas
jg
jp
sub
sbb
sub
adc
js
call
clc
jb
adc
stc
xor
xor
or
jge
cltd
xchg
imul
mov
mov
or
fs
pop
jle
jns
fwait
out
cltd
push
bound
popf
dec
inc
je
cmp
and
mov
xchg
jmp
xor
int
mov
ljmp
les
fmul
adc
mov
xchg
stc
push
mov
hlt
adc
cmp
mov
sub
pushf
ss
push
pop
aam
mov
and
pop
nop
mov
pop
xchg
cli
mov
xor
test
fs
fldt
arpl
push
xchg
popl
scas
test
sbb
push
mov
les
mov
mov
mov
dec
mov
popf
mov
pusha
jp
scas
pop
jae
dec
ss
lcall
cwtl
addl
sbb
push
test
stc
xor
cmp
sbb
jno
adc
and
xor
movsb
fidivl
xchg
cmp
stos
call
stos
inc
fucomp
bound
sub
test
movsl
inc
sbb
push
push
mov
mov
inc
popf
divl
inc
test
sub
mulb
pushf
mov
jp
lods
incl
mov
or
pop
add
mov
or
cmp
xor
adc
dec
ss
or
mov
mov
jnp
test
imul
xchg
out
mov
sahf
repz
pop
sub
mov
scas
sbb
imul
pop
scas
dec
fwait
lods
pop
mov
in
push
inc
sbb
inc
and
iret
fld1
les
cmp
andl
notl
inc
cmpsl
imul
mov
xor
mov
cli
pop
xchg
jmp
lods
out
push
scas
jnp
out
inc
and
pop
lea
fwait
lea
mov
scas
mov
mov
push
pop
xchg
cmp
mov
lret
xchg
add
pop
or
xor
js
hlt
cmp
xchg
jp
adc
add
repz
add
add
or
sbb
jg
inc
add
add
adc
jo
test
dec
sub
sub
xchg
cmp
pop
cmp
mov
sahf
dec
pop
xchg
test
ret
imul
and
and
sub
lcall
sahf
mov
pushw
inc
mov
cmp
push
xor
popa
lock
adc
fwait
dec
adc
jae
jl
in
push
out
lret
xchg
xchg
jle
scas
sbb
cli
pop
pop
outsb
sub
popf
jp
ja
lds
mov
int3
imul
aaa
popf
mov
mov
dec
inc
hlt
mov
jle
adc
or
lahf
sub
popa
push
sub
and
call
pop
movsl
fnstenv
sub
fiaddl
mov
push
rclb
shr
ja
bound
pop
ja
xorb
in
loope
cwtl
lret
fwait
andb
and
pop
test
shl
jge
jno
jae
and
cmp
push
dec
aaa
imul
out
test
mov
xchg
pop
mov
test
mov
dec
add
es
push
pop
fadds
pusha
outsl
test
and
test
insl
test
pop
inc
jecxz
js
inc
icebp
das
icebp
or
insb
mov
rcll
jne
add
pop
xor
sbb
or
cld
push
lods
xlat
cmp
inc
in
in
adc
push
mov
dec
mov
jbe
push
xchg
mov
and
mov
xor
jo
and
das
mov
push
mov
inc
inc
mov
mov
loope
in
and
pop
fdivrl
mov
sub
mov
sbb
cmp
mov
repz
mov
lods
xchg
sub
adc
mov
jne
rclb
push
lahf
lcall
in
mov
fisubrl
pusha
int
adc
les
fwait
push
and
xchg
popf
mov
fisubl
clc
sub
insl
pop
jno
test
fwait
dec
mov
out
mov
cmp
cmp
sti
sub
popf
sahf
nop
sahf
jmp
xor
cmp
or
ffree
mov
sbb
data16
mov
popf
push
mov
sahf
leave
mov
ret
xchg
std
fwait
mov
mov
cmpsl
cltd
lea
popf
daa
inc
popf
pop
ljmp
xor
add
mov
push
stc
push
das
fsubr
test
jmp
int
sarb
jno
jns
mov
pop
lods
dec
sbb
ljmp
pop
mov
jecxz
cmp
add
pop
lods
sbb
adc
cmpsl
jo
leave
dec
ret
xor
lret
inc
sbb
mov
xchg
out
clc
mov
mov
push
xor
jne
std
xor
mov
push
add
in
inc
or
fstps
ret
or
or
pop
inc
sub
push
or
xlat
loope
pop
test
inc
mov
cmp
push
xchg
mov
fwait
cwtl
nop
sub
mov
call
out
adc
xchg
fists
mov
dec
mov
movsl
test
xchg
cmp
movsb
push
out
push
push
cmp
out
cmp
lret
mov
out
mov
mov
push
or
cwtl
cmp
fldcw
loopne
push
jne
mov
jg
mov
mov
jne
fstpl
pop
sbb
mull
dec
add
icebp
fs
sbb
push
leave
push
decl
dec
scas
mov
jo
xor
out
and
xor
popa
cmpsl
clc
mov
cmp
fst
xor
lods
shrl
mov
lret
inc
jmp
mov
bound
iret
enter
sbb
lcall
nop
lcall
std
lock
les
pop
xchg
xor
jge
pop
xor
fiaddl
fmul
dec
addr16
sbb
clc
cltd
sub
mov
push
movsb
sub
add
xchg
xor
dec
test
ret
into
push
mov
add
jecxz
inc
and
sub
cmp
mov
stc
xchg
jae
int3
inc
sub
cmp
ljmp
neg
cmpb
mov
mov
hlt
dec
mov
xchg
dec
call
dec
xchg
loopne
mov
call
push
stc
add
add
ffreep
lcall
lret
loop
out
mov
sub
mov
cmpl
mov
test
push
inc
jno
aaa
lret
mov
sahf
das
xchg
stc
cli
in
test
or
invd
fsubl
push
fdivl
ljmp
jle
mov
xchg
fimull
lock
fldt
sub
mov
push
mov
push
push
pop
pop
mov
cmpl
sbb
mov
fwait
push
dec
mov
test
dec
aam
inc
les
clc
bound
ret
lods
ja
ret
cli
mov
inc
pop
xchg
jmp
mov
mov
mov
jle
cmp
cmp
ds
jmp
sahf
adcl
push
adc
fnstenv
outsb
into
pop
stos
pop
call
inc
mov
inc
xor
jle
addr16
lret
jecxz
insl
mov
outsl
pushf
or
addl
movsl
lock
sbb
int
pop
xchg
jno
enter
sbb
rcrb
rep
test
fadds
xor
mov
push
dec
push
xor
ret
pop
mov
mov
inc
cmp
inc
sbb
sbb
push
sub
cmp
fiaddl
jnp
js
inc
fcmovnu
adc
inc
fs
mov
sub
out
push
icebp
je
popa
or
mov
cmp
mov
test
dec
aam
jns
sub
bound
imul
inc
popf
mov
xchg
push
call
fs
sub
test
push
ds
imul
ret
push
inc
mov
sbb
xor
xor
and
jg
movsl
lods
mull
sbb
or
xchg
lahf
ja
sahf
jbe
sti
mov
cmp
jp
add
jg
ret
mov
add
push
pushf
mov
cwtl
push
aam
sbb
lods
mov
lret
push
outsl
jno
mov
sbb
lods
into
lcall
lret
mov
xchg
test
sbb
xchg
test
sbb
je
or
dec
or
cmp
data16
push
jae
mov
and
or
pop
dec
pop
dec
pop
and
out
push
pop
xor
lahf
dec
std
inc
rcll
mov
and
push
aam
or
xor
lret
push
jbe
xor
lods
cmp
jb
cmp
mov
jg
inc
je
or
sti
leave
pushf
mov
push
adc
jae
fsubr
push
adc
pusha
mov
lcall
cwtl
pop
loopne
aam
sti
inc
mov
pop
mov
jnp
sahf
cmp
mov
test
push
cmp
pop
lods
xchg
sub
adc
push
test
xchg
and
sbb
xchg
mov
xor
bound
cmp
xor
cltd
mov
nop
out
dec
inc
test
int
call
cltd
rclb
pusha
gs
pushf
xchg
mov
les
sbb
dec
adc
je
sbb
in
adc
or
mov
inc
mov
int
jmp
mov
xor
push
imul
jl
cmpsl
ret
pop
in
gs
inc
pop
int
andl
cmp
or
cmp
xchg
sub
push
dec
mov
pop
pop
mov
xor
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
test
mov
add
data16
mov
sbbl
ljmp
fcmovne
cmp
loop
inc
inc
and
inc
push
mov
cmp
mov
xchg
enter
push
inc
cmp
sub
stos
movsl
adc
sbb
fcoml
sbb
add
dec
push
jle
leave
aad
mov
add
push
cld
cli
jae
mov
mov
cmp
mov
sub
push
or
test
push
fidivrl
pop
jae
inc
gs
dec
xchg
insl
and
mov
mov
xchg
sbb
xor
out
push
sub
adc
mov
cltd
pop
dec
aaa
shrb
out
pop
flds
negl
mov
mov
int
pop
lods
imul
ja
mov
iret
iret
adc
mov
adc
xor
enter
lcall
stos
cmp
aas
movsl
hlt
imul
and
test
push
xor
xor
popf
mov
insl
push
and
cmp
ret
inc
jp
push
sbb
ja
fadds
xor
mov
xchg
add
daa
mov
in
rol
pop
fcoms
decl
repnz
fmulp
xchg
ljmp
into
xor
xor
sub
mov
jmp
mov
pusha
jp
stc
test
or
outsl
cwtl
mov
loope
xchg
mov
jno
test
test
loopne
adc
cli
pop
xchg
in
mov
std
andl
inc
loope
lea
sbb
leave
sbb
and
fsubs
dec
mov
mov
xor
lock
fwait
scas
inc
push
aad
add
adc
xchg
and
mov
std
dec
add
mov
ss
test
mov
or
out
mov
lds
loopne
add
mov
in
das
stos
lods
shrl
bound
inc
push
dec
add
in
jmp
mov
mov
or
add
push
pop
mov
ljmp
push
clc
push
out
pop
pop
mov
orb
outsl
mov
cli
js
popf
push
imul
inc
mov
or
sbb
xlat
dec
lret
push
xor
lcall
cmc
ret
pop
push
lcall
sbb
lahf
mov
out
add
push
cltd
jmp
and
cmpsl
je
call
mov
or
imul
shll
pushf
pop
insb
dec
rolb
mov
cmp
clc
mov
lahf
pop
sbb
addb
jb
test
cmova
sub
arpl
in
scas
sub
pop
aad
call
fwait
add
lret
inc
sub
rcrb
sbb
test
pop
and
test
push
scas
mov
xchg
mov
jns
sub
push
popa
or
gs
dec
out
leave
sbb
cwtl
icebp
push
xchg
es
inc
pop
sarb
into
gs
inc
out
mov
and
push
pop
subb
insb
sti
jmp
dec
dec
xchg
push
push
jnp
xlat
mov
mov
adcb
pop
fwait
out
and
xor
mov
lds
pop
dec
shrb
inc
pop
sbb
xchg
lret
inc
mov
mov
bound
out
les
push
add
mov
jb
sub
lods
imul
in
cmc
negb
addr16
testl
pop
ss
and
pop
loopne
mov
repz
or
jnp
jg
and
loopne
mov
sahf
rcrl
cmpsb
or
push
jae
inc
push
pushf
cmpb
adc
jp
hlt
test
fstps
bound
ljmp
mov
arpl
or
push
test
cmp
xchg
dec
jecxz
lds
test
lret
mov
stos
sub
push
jno
pusha
mov
cli
cli
repz
dec
pushf
inc
sarb
andl
inc
cmp
bound
inc
cwtl
lock
dec
and
pop
inc
fwait
lret
in
mov
mov
cmp
sti
push
je
xchg
xchg
inc
cltd
enter
shll
dec
sub
dec
xchg
test
pop
cmp
pop
mov
mov
pop
adc
push
or
icebp
outsb
loopne
rclb
ja
adc
push
sbb
enter
mov
adc
out
leave
cmpb
pop
mov
fst
in
ficompl
mov
in
mov
push
mov
pop
fldl
push
mov
xor
jmp
dec
and
mov
mov
mov
in
popa
in
imul
mov
pop
scas
dec
push
xchg
aas
pusha
dec
push
sbb
sbb
int3
scas
popa
fisttpl
jp
popf
fimuls
mov
mov
pop
inc
loop
scas
out
shrl
mov
sub
hlt
jp
iret
out
fucomi
push
mov
scas
xlat
insb
ljmp
cmp
pop
in
mov
data16
fsubs
or
test
sub
ljmp
inc
inc
call
sub
mov
inc
xor
mov
push
adc
fisubrs
and
adc
sub
push
repz
add
push
pop
fisubrl
inc
sbb
ljmp
xchg
mov
fisubrs
mov
lods
push
cmpsl
sbb
dec
or
push
dec
jae
dec
mov
iret
pop
add
pushf
ja
lods
test
vpmaxsw
pop
jno
inc
scas
add
lret
dec
aam
push
lret
out
pop
scas
adcb
xchg
dec
data16
addr16
shlb
cs
inc
movsl
cmp
fwait
pusha
loop
or
push
sbb
jb
rorl
mov
out
out
enter
inc
jecxz
dec
ret
fldt
mov
mov
cmp
iret
insl
cmpsl
mov
pop
push
enter
dec
push
or
lds
scas
mov
shl
dec
mov
call
loopne
addr16
test
cmp
fisttps
push
push
pushf
icebp
adc
call
mov
cmc
xlat
cmp
push
leave
fadd
xor
or
faddl
imul
movsl
loop
loope
add
jnp
sbbb
mov
xchg
in
ss
jb
pop
outsb
mov
or
cmp
sub
push
push
gs
sbb
fcoms
xchg
lcall
mov
mov
mov
in
loop
fistl
push
pop
daa
popf
dec
std
add
lods
jno
pop
rcr
xor
sub
cmp
mov
lret
inc
lods
vcvttps2dq
pop
int3
cmpsl
ret
fld1
shlb
xlat
xchg
fiadds
fsubrs
mov
and
sub
leave
push
cmc
mov
adc
cwtl
dec
and
mov
mov
test
jae
mov
add
mov
xlat
mov
nop
dec
sbb
sub
push
sub
lods
xchg
sub
adc
push
inc
adc
dec
in
fbld
push
imull
testb
push
dec
loope
xchg
dec
and
mov
sbb
mov
xor
xchg
push
imul
test
xchg
lods
movsb
std
stos
sbb
mov
cmpsl
sbb
jmp
xor
int
cmp
cmpl
inc
sbb
ret
xchg
sbb
scas
sbb
cmp
sub
mov
jge
loope
imul
shll
imul
enter
push
adc
pop
loop
hlt
xchg
inc
jl
mov
adc
cmpb
jmp
mov
pop
push
test
xor
mov
mov
cld
sbb
inc
sbb
sbb
jecxz
std
pop
dec
aaa
add
cmc
lret
pusha
push
push
cmpsb
sbb
cli
in
movsl
xchg
ret
and
pop
or
les
pop
add
sbb
mov
imul
add
insl
pop
xchg
push
shl
lds
adc
sbb
lods
inc
jle
dec
push
in
bound
sbb
repnz
mov
leave
xor
andl
inc
fisubs
and
fsubr
and
sbb
pop
repz
xor
clc
sarb
add
cmpsl
jnp
fcom
adc
jecxz
adc
mov
leave
jecxz
mov
rcrb
fwait
int
insl
dec
aam
cmc
mov
shl
mov
dec
call
jne
movsl
cmc
leave
and
iret
ret
pusha
jecxz
mov
push
nop
loopne
dec
cltd
pop
out
mov
and
lret
cmpsl
mov
negb
xor
rcrb
mov
test
dec
ljmp
stos
scas
mov
cmpl
pushl
jo
test
or
inc
pop
add
aam
mov
outsb
les
std
repnz
mov
das
fiadds
fisubl
mov
inc
sbb
scas
fucomi
jmp
mov
scas
jmp
pop
xor
add
lret
fwait
cmp
xor
fsubrs
xchg
and
hlt
mov
leave
mov
fstl
pop
lret
adc
test
inc
push
rcrl
add
addr16
xor
shlb
jge
repnz
lods
push
and
shl
add
mov
sbbb
add
inc
rorl
add
sti
mov
sbb
add
or
cltd
mov
leave
insb
divb
mov
jl
sti
mov
es
xchg
sarl
not
lret
fildll
arpl
sbb
sub
jne
rolb
mov
scas
test
lret
xchg
fstpt
aad
sbb
arpl
sbb
pop
jno
push
push
aas
sbb
mov
sarb
arpl
dec
pop
jp
stos
loope
pop
or
mov
data16
jp
and
test
jg
mov
ss
and
push
sbb
sbb
add
add
mov
sbb
sbb
push
popf
lahf
aam
fldln2
inc
jge
sbb
xchg
or
cmpsl
jnp
stos
adc
out
push
test
add
sbb
add
andb
js
sbb
lea
leave
cs
dec
popa
pop
xor
hlt
testl
lcall
sbb
lret
fwait
inc
pop
icebp
mov
loope
mov
mov
sub
pushf
cltd
jno
pop
and
mov
sbb
adc
sub
out
xchg
loop
rcl
jns
mov
xor
cli
out
lret
popf
stc
cli
in
test
or
lods
cmp
or
mov
int3
dec
xor
push
pop
sbb
push
sbb
into
adc
push
inc
shrb
aam
pop
imul
cld
loop
and
sub
inc
sbb
ror
rorb
in
dec
fidivrl
loopne
scas
adc
movsb
test
mov
pop
pop
mov
pop
outsl
or
enter
push
push
sub
popl
pop
iret
mov
sbb
push
sub
imul
ljmp
aam
lea
inc
xor
in
icebp
jno
test
pusha
in
sbb
adc
xor
cmc
mov
ss
rcl
lret
sbb
mov
mov
lods
cmpsl
mov
hlt
shlb
dec
push
fbstp
call
ret
inc
iret
mov
mov
int3
mov
and
push
jecxz
or
movsl
add
sti
add
dec
push
inc
fdivrs
mov
mov
xor
out
jb
jns
add
into
sbb
js
xlat
cmp
shlb
movzwl
icebp
xchg
jbe
popf
dec
nop
out
inc
insb
mov
push
mov
jae
outsl
lcall
ret
xchg
sub
fcoml
fucomi
scas
inc
sti
mov
cmpsl
adc
vsqrtss
jo
or
mov
xchg
inc
xchg
push
sub
ljmp
or
scas
lahf
iret
cmpl
mov
cmp
jp
add
jae
ret
mov
lret
and
cmpsl
mov
pop
fs
push
sbb
nop
dec
cli
stos
stc
jae
dec
in
stos
mov
dec
sbb
xchg
outsl
lahf
loop
cld
std
movsl
lods
mov
popf
in
mov
rorb
fmuls
pop
xor
add
pop
dec
les
ficoml
mov
push
clc
inc
mov
and
fucom
jae
pop
jg
leave
enter
mov
cmp
aas
scas
out
std
jmp
jbe
push
das
xchg
int
rol
rcll
xchg
mov
jae
lock
mov
inc
pop
call
xchg
or
out
add
aas
lahf
and
pop
and
mov
popf
mov
mov
xorl
jb
inc
jecxz
mov
or
sub
mov
inc
sbb
sbb
pop
xlat
jne
sub
test
sub
cmp
in
mov
inc
aad
imul
insl
fmull
into
lcall
rcrb
jne
dec
fwait
inc
cs
fwait
aas
stc
mov
xlat
jecxz
addr16
bound
mov
fisubrl
imul
ljmp
popf
loop
fcoms
insl
rcll
and
test
inc
add
mov
push
fsubrs
jo
popa
adc
xlat
in
pop
jl
mov
rorb
cmpsl
ret
fsubrs
scas
and
insb
cmp
cmpsb
sbb
pop
xchg
cmp
sbb
pop
inc
mov
sub
mov
fstpt
pop
dec
lea
jae
push
repnz
imul
aas
gs
pop
jge
fs
push
sub
mov
inc
xor
decl
push
mov
inc
call
fucomip
in
dec
jge
repnz
lahf
fnsave
fsubs
popf
test
mov
fadds
add
xor
xor
xchg
pop
xor
pushf
xchg
cld
ljmp
mov
ja
adc
lret
xor
push
mov
mov
arpl
pop
cmpsl
dec
dec
cwtl
in
aam
imul
cltd
xor
ss
lds
push
and
lds
mov
mov
mov
outsl
shr
push
add
test
and
mov
push
inc
jg
jle
mov
jl
mov
shlb
mov
xchg
and
out
clc
scas
or
push
pop
xchg
mov
ror
inc
mov
lret
fs
adcl
mov
mov
xchg
lods
repnz
inc
jne
pop
aad
sub
dec
rcrb
or
aaa
push
pop
cmpsb
repz
loopne
pop
sbb
jns
std
mov
jo
pop
dec
cmp
pop
mov
cmc
push
aam
dec
mov
pop
neg
adc
movsb
xchg
pop
movsb
adc
sahf
add
in
push
push
lock
test
stos
mov
movsl
or
jno
mov
mov
mov
dec
pushw
adc
popa
mov
mov
jge
inc
mov
std
fcomp
mov
and
cmp
repz
shlb
leave
lret
jo
and
adc
cli
add
adc
stc
jl
mov
jmp
jno
into
frstor
inc
lret
dec
cmp
lret
or
adc
mov
push
jns
dec
andb
rcr
in
jb
pop
movsl
fnstcw
in
adc
add
lcall
mov
push
imul
cmovs
mov
xchg
rclb
pushf
fldl
fstl
mov
fnstenv
out
fimull
jno
or
pusha
xchg
aas
mov
jmp
xchg
inc
mov
sahf
jl
in
and
add
add
fwait
les
inc
call
rorb
pop
add
adc
mov
popf
in
sub
insb
push
ja
sbb
mov
or
cmp
push
stos
pop
int
mov
sti
gs
cmp
mov
lret
push
fbld
lahf
test
arpl
add
inc
add
stc
adc
mov
rcrb
fldenv
jmp
jmp
aam
repnz
jb
out
stc
fcomps
into
fsub
ret
adc
leave
adc
pop
call
scas
gs
xchg
dec
jp
popa
lods
cmc
sub
mov
es
test
insl
lea
jmp
call
lds
dec
mov
add
xchg
jmp
rolb
fcomps
popf
repnz
cmp
pushf
or
cld
mov
sub
jg
imul
pop
ljmp
addr16
outsl
adc
mov
lods
out
xor
adc
pop
sub
push
mov
xor
jge
jo
test
mov
fistpll
sub
fisttps
leave
push
mov
fwait
xor
insl
and
add
add
clc
jae
adc
pop
jp
add
addr16
xchg
mull
test
pop
std
test
imul
loop
cs
xchg
xor
out
sub
je
xor
mov
xor
jae
fistps
and
dec
hlt
fnsave
sub
add
and
add
inc
mov
dec
mov
mov
inc
xchg
jmp
or
imul
call
xorl
or
jne
xor
mov
into
add
lock
push
mov
leave
sarb
xor
and
push
shl
ficoms
cmp
lret
daa
outsl
cmp
cmp
push
shll
push
imul
aam
adc
sub
push
xchg
repz
sbb
iret
push
pop
scas
dec
jnp
sbbb
orl
push
cmp
into
scas
push
sub
js
ja
mov
adc
lret
cmp
movsb
data16
and
mov
inc
fsubs
push
xor
jae
fistps
xchg
cwtl
jb
fwait
jo
sti
iret
xchg
xchg
popf
shrb
mov
imul
and
orb
addl
into
pop
movsl
pop
in
js
jle
lahf
adc
or
pop
add
pop
xchg
sarb
test
jns
fs
or
push
mov
dec
test
nop
adc
mov
dec
rorl
int
jne
test
ret
push
jecxz
mov
call
fcomps
arpl
dec
inc
sbb
jo
mov
dec
enter
addr16
add
mov
lods
cmc
mov
cltd
fstpl
jg
dec
fucomi
add
jge
enter
loope
ljmp
mov
jmp
xchg
add
push
sti
jl
inc
in
pop
push
jbe
xchg
cli
and
sub
repnz
inc
mov
lea
xorb
mov
imul
pop
sub
push
fmulp
popa
shrl
int
jg
mov
std
mov
mov
arpl
lock
pop
movsl
popa
lock
and
adc
inc
mov
sbb
aaa
mov
pop
dec
outsl
sbb
pop
dec
rcl
push
cltd
lret
jmp
push
imul
dec
dec
xchg
push
and
mov
mov
movsb
dec
aam
push
dec
js
or
repz
clc
cmpsl
cmpsl
jecxz
add
sbb
pushf
mov
ss
fisubrl
lahf
imul
add
add
add
loope
dec
fimuls
adc
or
add
in
stos
mov
push
cmp
pop
gs
mov
out
gs
aam
add
push
movsb
test
cmpsb
imul
push
cmp
aaa
popf
popa
pusha
roll
hlt
xor
jmp
mov
add
or
mov
inc
lcall
cld
stos
add
scas
inc
pop
aad
lods
xor
mov
xor
adcb
xor
mov
mov
ss
mov
out
sbb
pop
or
and
and
sbbl
push
fs
imul
lods
mov
xor
push
addb
mov
daa
std
dec
popf
sbb
sub
cs
inc
and
cmpsl
bound
xchg
push
xchg
punpckldq
pop
mov
push
iret
add
jle
jne
fiadds
inc
sbb
arpl
adc
subps
lock
add
pop
pop
notl
jnp
decb
mov
fsubl
in
scas
addr16
adc
mov
mov
pushf
inc
and
rcll
cs
lea
pop
push
es
cltd
or
dec
sbb
les
aam
mov
jecxz
or
xchg
dec
pop
sub
mov
push
xor
dec
call
push
xchg
loopne
adc
jge
jle
ljmp
bound
inc
mov
jg
inc
cltd
mov
pop
ret
adc
ljmp
aad
add
ret
scas
test
cli
in
scas
ljmp
popf
lret
inc
outsb
xchg
shl
jecxz
pop
enter
jb
in
shl
enter
add
int3
clc
cmp
jb
push
sbbl
fwait
ds
outsb
stos
lock
orb
inc
ljmp
arpl
imul
inc
mov
sbb
std
decl
addl
xor
addr16
cwtl
pop
loop
ret
pop
shrl
sub
insl
and
sbb
call
rorb
mov
mov
fcoms
dec
xchg
test
shl
mov
daa
adc
cmpsl
pop
push
lods
fwait
shl
mov
je
xor
pop
divb
fdivl
in
pop
lret
xchg
aas
int
jnp
or
mov
fwait
mov
sbb
add
leave
mov
les
mov
sahf
and
rcll
stos
test
mov
push
mov
mov
pop
shl
ret
pop
push
imul
dec
push
and
adc
push
inc
test
jge
dec
aam
icebp
add
pop
push
imul
stc
sbb
fcmovnb
jmp
mov
xlat
aad
adc
je
out
orl
fabs
cwtl
add
xor
xchg
sub
iret
arpl
xchg
cwtl
test
mov
pop
shrl
dec
adc
xor
cmpsl
mov
in
insl
jp
lds
or
fldcw
jno
jb
adcb
xchg
mov
imul
push
xchg
mov
xlat
add
fiaddl
jmp
in
cmp
pop
cwtl
and
addl
out
or
xor
outsl
fldt
and
jecxz
add
faddl
ss
dec
cli
hlt
js
push
push
ret
add
ret
popa
lods
scas
xchg
stc
add
push
dec
popf
enter
jae
dec
dec
adc
add
mov
loop
mov
pop
aam
jge
stos
and
lcall
push
jno
jecxz
sbb
cmc
mov
sti
addl
fwait
leave
jecxz
add
sub
daa
adc
sbb
jp
xchg
sbb
roll
fidivrl
and
insb
cmc
aam
pop
push
iret
adc
pop
cli
mov
xchg
in
daa
call
data16
push
fdivp
dec
xor
push
and
icebp
xor
lods
jbe
xchg
imul
fdivrs
jnp
imul
inc
fimuls
inc
lahf
pop
dec
rcrl
adc
dec
ja
sti
std
mov
cmp
jg
add
inc
pop
sti
and
cltd
test
mov
push
data16
ds
negl
cld
jecxz
pop
divb
lds
repz
jnp
sub
out
outsl
dec
mov
push
mov
lods
jno
dec
lods
insl
lret
lahf
xchg
int3
push
push
mov
mov
mov
rorl
mov
in
push
push
sbb
sarb
and
in
cld
out
popf
scas
inc
jecxz
dec
out
inc
aaa
inc
mov
das
jo
sbb
je
jge
jns
dec
iret
out
stos
rcl
lret
je
fwait
sbb
sbb
fidivl
insl
push
dec
cs
lea
repnz
mov
hlt
dec
repnz
aam
jle
outsb
inc
mov
sbb
or
xchg
dec
call
into
push
test
add
push
shll
cmpsl
inc
mov
into
aam
mov
inc
xor
clc
mov
inc
inc
dec
fsubrl
add
jecxz
in
fnstenv
add
xchg
sti
cmpsl
mov
fadd
xor
arpl
notl
aaa
stos
subb
test
fldenv
js
movsb
push
dec
mov
cmpsl
bound
ret
in
insl
pop
mov
push
or
or
sub
outsl
mov
jle
sti
es
enter
xor
iret
fldcw
push
pop
clc
and
push
ret
xor
je
lahf
pop
or
push
xor
jo
rclb
fldl
mov
sbb
adc
jbe
adc
lret
mov
adc
adc
inc
aad
and
sbb
lea
xchg
sti
popa
xor
push
mov
mov
daa
adc
sbb
dec
jle
jecxz
sahf
repnz
leave
test
ljmp
fisttpll
dec
pusha
adc
jae
xchg
icebp
fwait
lahf
pop
leave
mov
hlt
or
adc
aas
add
add
in
jb
insl
movsl
aam
pop
mov
mov
lods
mov
sbb
push
and
sbb
add
mov
test
add
ret
sbb
cltd
pushf
mov
shlb
dec
xchg
or
inc
add
pushf
lahf
lcall
xchg
sbb
mov
repz
push
xor
and
sbb
adc
in
test
shlb
dec
in
lds
int
add
or
icebp
sub
push
cmpsb
ja
xorl
rclb
and
xor
mov
xor
orb
inc
mov
aas
cli
mov
mov
mulb
ffree
and
dec
pop
or
int
cli
bound
data16
mov
mov
xchg
in
mov
lahf
and
fdivp
in
ja
mov
pushf
sbb
or
repnz
mov
hlt
jmp
aad
imul
sbb
test
out
cli
mov
jne
mov
fbld
pop
push
fbstp
pop
mov
js
pop
insb
push
jl
dec
add
or
cmp
jae
mov
adc
dec
cltd
add
push
pop
jg
cmp
fidivl
insl
test
add
xchg
inc
pusha
ficoms
jg
push
loopne
leave
test
sbb
jl
rcll
fsub
cwtl
add
ret
mov
push
or
aam
repnz
je
test
xchg
call
push
and
scas
ror
repz
inc
mov
hlt
xor
sbb
dec
pushl
add
fcomps
imulb
sbb
mov
push
cld
mov
loop
and
adc
and
negl
xor
mov
mov
lahf
orb
xor
movsb
js
pushf
lret
movsl
ret
sbb
ret
mov
iret
sbb
sub
push
pushf
cmp
push
adc
push
mov
out
and
lret
cltd
push
aam
sbb
pusha
sbb
movsl
idivb
scas
xchg
stos
sbb
push
add
fistl
cmp
es
cwtl
into
or
test
fmuls
xor
fs
xchg
add
subl
or
dec
mov
testb
ficoms
lahf
mov
add
insb
lret
push
fisubrs
xor
push
lret
imul
add
fwait
lea
xor
cltd
cmc
sub
mov
aam
cmp
inc
or
popa
xchg
dec
fsubr
mov
repz
test
or
inc
negb
shrb
inc
mov
jge
pop
add
clc
out
add
divl
sti
or
cmp
push
jl
add
in
rcll
xlat
xor
pop
fsubl
pop
ljmp
stos
mov
pop
mov
push
test
dec
dec
sbb
dec
add
cmp
adc
movsl
movsb
inc
bound
inc
sbb
xchg
test
sub
out
mov
movsb
std
rclb
aaa
test
nop
out
push
xor
flds
lahf
repz
sub
push
inc
mov
cmpsl
outsl
adc
daa
mov
xor
lret
fstpl
cmpsb
xchg
fs
fidivrl
adc
pop
pop
test
xlat
add
sbb
jl
fs
xorb
daa
adc
fisubs
fsubrl
aam
mov
mov
push
mov
inc
xor
popf
mov
mov
jmp
or
jae
fsubrs
sbb
in
enter
add
lea
jecxz
sbb
dec
jno
test
addr16
xor
dec
fld
xchg
mov
test
ret
inc
sbb
scas
mov
bound
sub
push
sti
fisttpl
test
int
push
mov
push
push
dec
cmpsl
outsl
xchg
sbb
xchg
jo
add
dec
cltd
fs
andl
cwtl
mov
jge
in
and
test
and
fstl
testl
cmpsl
shr
cmp
jl
fs
xlat
fstl
mov
xchg
sbbl
jne
mov
inc
sbb
jle
push
mov
cmp
out
cmp
mov
mov
dec
inc
xor
xchg
inc
and
cwtl
cmp
dec
inc
jne
mov
adc
cmp
jo
and
pop
stos
les
inc
inc
mov
stos
lds
or
repz
jno
icebp
fwait
lahf
pop
jbe
add
add
or
inc
sbb
jbe
pop
orb
inc
sub
pop
xor
add
stos
pop
sub
lds
mov
sub
dec
push
inc
push
mov
adc
inc
cmp
imulb
bound
insl
mov
insl
xchg
dec
shll
dec
mov
lret
es
cmp
lahf
lret
data16
pop
mov
push
cmp
ja
jg
das
cmp
jge
sbb
and
adc
call
add
int
adc
jne
cwtl
dec
and
in
inc
xor
fnstenv
xlat
push
call
push
xor
mov
daa
fld
jns
loopne
pop
ret
loope
inc
xor
fwait
inc
and
lods
cmp
adc
cmp
adc
jnp
sub
cmp
inc
xchg
sti
or
in
andb
mov
inc
pop
shl
ja
fnsave
rcll
fsts
nop
shr
stos
sahf
xor
icebp
add
rorb
sub
cmc
cmp
shlb
sub
stos
mov
jae
fisubl
jp
xchg
mov
xchg
out
cltd
xor
fisttpl
push
push
xchg
cwtl
pop
pop
xlat
and
lds
sub
mov
rcl
xchg
inc
lahf
pop
lea
fidivrs
add
fstpl
jmp
adc
jne
lock
mov
mov
rcpps
pop
jns
shrl
dec
cmp
lods
lcall
push
loopne
shlb
stos
call
es
cltd
mov
sti
pop
pop
push
and
mov
inc
jg
or
mov
int3
adc
fcmovnbe
xchg
sbb
add
loope
les
lock
adc
dec
ret
mov
cmpsl
xor
divl
das
inc
add
aad
add
cli
gs
orb
xor
leave
fisubs
mov
sub
push
enter
push
test
xor
and
jae
mov
sbb
ss
mov
pop
outsb
cmp
stos
outsl
mov
jl
sub
push
inc
push
stc
adc
int
into
cmpl
loop
jle
iret
sbbb
rorl
mov
push
fidivrl
pop
jmp
cmpsl
add
out
sbb
mov
pop
cmpsb
pop
sti
out
je
ret
xchg
cmpsb
mov
fbstp
pop
jne
popf
out
push
dec
cs
popf
mov
mov
mov
dec
mov
or
cmp
lock
mov
dec
das
or
xchg
push
cmp
int3
add
lods
enter
inc
mov
js
pop
add
mov
adc
add
in
adcl
or
das
cmpsb
and
dec
mov
and
add
lcall
int
mov
and
js
mov
dec
mov
jno
popf
sbb
sub
in
xchg
aad
sub
cmp
test
fistpl
inc
lcall
jnp
xor
mov
adc
mov
inc
mov
repnz
jbe
mov
incl
stos
in
sbb
out
pop
cmp
mov
sbb
dec
add
inc
sbb
shlb
jo
mov
push
sbb
dec
lock
fsubl
popa
sub
das
add
sub
and
roll
xor
std
cmpl
mov
in
orb
add
jne
decb
push
push
pop
fistps
lock
sti
cmpl
scas
mov
vmovlps
popf
insb
mov
cmp
add
lcall
lods
dec
mov
mov
lcall
lret
popa
xchg
aaa
cmp
outsb
push
pop
or
out
inc
xchg
aas
mov
sbb
and
fsts
ja
sub
sti
cmp
enter
and
mov
sbb
xchg
sete
mull
cltd
aas
cmpsl
int
dec
in
jle
mov
lock
dec
xor
dec
or
xchg
adc
shlb
sbb
setge
flds
jg
and
inc
jne
pop
inc
mov
mov
punpckhdq
mov
add
pop
jae
sbb
add
movnti
xor
jns
xchg
das
aaa
mov
aad
aaa
lcall
push
sub
inc
add
int3
and
into
lea
pop
inc
dec
pop
cmp
mov
inc
push
adc
push
inc
loope
lret
js
sbb
inc
jbe
js
push
leave
sbb
mov
in
loop
mov
sub
mov
es
cmp
mov
lods
ja
das
lahf
inc
pop
jns
fwait
in
mov
bound
aaa
ljmp
and
mov
incb
loop
jp
lds
push
pushf
jno
or
adc
es
ficompl
and
in
cmp
mov
jne
repz
pshufw
sbb
mov
cwtl
jmp
mov
push
mov
dec
ja
mov
xchg
add
xor
mov
dec
push
adc
rolb
sar
jl
sbb
dec
add
mov
push
aaa
stc
add
mov
add
jnp
int3
enter
arpl
mov
push
inc
inc
ret
xor
int3
lods
inc
imul
sahf
arpl
and
mov
test
sbb
push
pop
stos
aad
push
sub
mov
sti
mov
dec
stos
inc
in
lahf
pop
push
sub
fidivs
pop
and
mov
icebp
jge
push
mov
jo
pop
inc
pop
sub
leave
addr16
std
popl
dec
cmpb
mov
fs
jno
mov
insb
or
lahf
lcall
out
jp
loopne
xorl
lods
inc
jg
or
mov
int3
adc
fcmovnbe
xchg
sbb
add
loope
les
lock
adc
dec
ret
mov
cmpsl
xor
divl
das
lret
mov
dec
inc
dec
mov
or
subb
lret
mov
fcom
ljmp
sub
jno
pop
fisubrs
jg
fisttpl
ret
push
pushf
xor
in
cmp
orl
pop
xchg
xchg
movsl
and
lods
lret
xchg
mov
lea
xor
sub
cwtl
inc
lock
fcmovnb
xor
bnd
jno
fs
js
mov
adc
or
idiv
add
jl
sbb
mov
addr16
sub
mov
leave
jb
mov
jl
mov
push
iret
repz
pop
pop
push
mov
fnstenv
test
adc
mov
pushf
mov
pop
fstpl
jns
or
test
or
mov
movsl
inc
daa
cmp
jecxz
stc
sti
rcrl
lahf
lret
hlt
jge
sbb
aaa
inc
into
add
sbb
or
inc
jg
in
push
shlb
imulb
test
push
lret
loop
inc
popa
fdivrp
stos
add
jae
mov
jne
dec
idivb
fstp
insl
push
mov
lret
add
jae
mov
jb
xor
popa
scas
pop
inc
outsb
aam
sti
arpl
push
and
add
xchg
into
out
pop
les
sarl
rclb
pusha
sub
sarl
cmpsl
int
dec
mov
inc
les
jecxz
je
jp
mov
sbbb
cmpsl
jnp
mov
cmovae
fidivs
sbb
sbb
cwtl
add
mov
lahf
js
sbb
out
stos
sbb
test
daa
adc
inc
sbb
mov
rolb
ds
sbb
call
xor
pop
add
imul
pusha
xor
jge
pop
dec
aaa
add
cmp
cli
mov
xchg
xor
xor
mov
pushf
in
lods
xchg
xlat
stos
les
adc
sub
adc
jecxz
mov
cmpsl
push
jg
cwtl
das
or
and
xor
or
sub
aam
loop
dec
add
xor
jo
lcall
in
and
pop
dec
cmp
stc
loopne
jl
aad
sub
or
inc
jb
std
adc
xor
inc
bound
mov
jge
lods
xlat
xchg
mov
cmp
lea
dec
jne
mov
outsb
mov
sbb
mov
inc
stos
or
dec
fwait
mov
mov
jecxz
out
jo
add
sub
repz
jle
push
adc
clc
inc
pushl
inc
rcl
mov
repnz
bound
xor
add
cmpsl
mov
pop
jbe
fwait
ds
push
inc
in
push
adc
stos
push
test
push
push
repnz
movsb
pop
and
fistl
push
fwait
stc
inc
pushl
mov
pop
into
dec
cld
jo
push
fdivl
push
div
cmp
stos
pop
or
jl
arpl
fcomps
mov
lods
jne
jmp
sub
inc
push
or
mov
jb
mov
push
divl
xchg
push
popf
ficoml
cs
cmpsl
js
aam
leave
inc
lret
lods
dec
fsub
push
fs
xchg
jae
leave
inc
mov
cmpsl
jnp
and
push
cmp
add
icebp
jo
shlb
push
rclb
push
push
out
mov
jne
dec
dec
daa
adc
std
sub
idivl
jo
or
sbb
or
sub
inc
test
jnp
test
std
arpl
ljmp
adc
inc
ss
sub
xor
jae
xchg
cmp
pop
push
mov
repz
mov
xchg
xor
inc
mov
in
xchg
cld
mov
icebp
imul
mov
lock
jmp
xor
push
sbb
adc
dec
cltd
adcb
ret
orb
sbbb
xchg
fwait
mov
lds
push
or
push
cmp
in
cmp
cmpsl
xlat
adc
shll
inc
sbb
adc
out
pop
addr16
fwait
sbb
xchg
insb
int3
mov
jae
inc
popf
cmc
repz
cmp
aam
lods
sbb
lahf
iret
sbb
fstps
ss
mov
mov
add
pushf
andl
mov
shll
movsb
mov
adc
dec
jecxz
sti
mov
sbb
out
inc
add
push
in
lahf
jbe
adc
out
adc
pop
xor
arpl
and
cmp
test
int3
test
loop
out
or
xchg
lret
sar
enter
cmc
mov
mov
in
in
ss
push
mov
loopne
jg
outsb
cmpsb
stos
pop
imulb
cmpsl
push
ja
or
mov
pop
insb
fistps
in
shll
mov
inc
pusha
lahf
test
push
mov
inc
mov
aas
cmpsl
push
or
je
pop
js
add
in
jl
xchg
lods
mov
cmp
mov
pop
add
stos
or
xchg
subb
sti
push
in
test
int3
xchg
std
sbb
mov
jno
inc
inc
and
dec
test
lock
sbb
mov
fcoms
ficomps
enter
inc
mov
movsl
enter
inc
lret
imul
xor
dec
push
mov
and
cld
pop
jmp
stos
ret
ja
leave
in
pop
leave
push
outsl
mov
cmp
mov
dec
add
leave
lcall
mov
cs
scas
or
sub
sbbl
sub
cli
and
mov
cmp
push
lds
jl
xchg
jne
jb
movsb
mov
sbb
in
jbe
xor
mov
sub
xor
aad
jl
js
sbb
add
xchg
int
stos
xchg
out
push
push
js
stos
fisubl
pusha
lret
mov
mov
dec
xchg
mov
mov
sbb
add
add
sbb
jle
sbb
rcrl
movl
cmc
push
xor
lret
xor
jg
movb
inc
js
add
sub
int3
adc
xor
inc
push
aam
xchg
incl
cmp
pop
mov
dec
leave
xchg
and
enter
arpl
aad
jne
jne
cmpsl
scas
arpl
dec
lcall
inc
testb
adcl
add
mov
add
sub
adc
add
xor
test
push
test
cmpb
andl
inc
push
cld
pop
pop
scas
vpsubd
cmpsl
mov
addr16
sub
jo
inc
sub
stos
push
rcrb
mov
lods
dec
fsts
pop
pop
mov
arpl
inc
pop
scas
ror
repz
inc
mov
hlt
xor
sbb
dec
pushl
add
fcomps
imulb
sbb
mov
push
cld
mov
loop
and
adc
and
negl
mov
cmp
in
sbbl
dec
cltd
pusha
push
hlt
sub
aad
dec
sbb
test
sbb
fisubs
dec
jbe
movsb
mov
rcll
mov
fnstcw
mov
in
dec
insl
nop
subl
ds
xlat
lds
mov
or
add
mov
dec
aam
enter
and
push
mull
lahf
cld
mov
jne
and
mov
insl
jmp
incl
add
dec
aam
jb
sub
push
mov
mov
push
mov
test
repz
in
dec
pop
lret
sbb
lea
push
insl
jmp
lods
call
cmp
add
clc
imul
mov
das
fsubrs
lds
pop
fnstenv
shl
pop
and
out
scas
rorb
or
xchg
mov
pusha
mov
inc
mov
test
push
addr16
out
jmp
mov
sbb
shl
or
dec
xlat
and
in
es
outsl
mov
int
int3
in
jne
pop
xchg
cmp
ret
mov
push
aam
sbb
mov
addb
mov
ficoml
push
sbb
outsb
dec
pop
scas
stos
nop
test
rolb
sbb
adc
inc
ljmp
std
xor
sbb
aas
lock
add
loope
mov
xchg
mov
dec
jo
mov
rcr
cli
orl
mov
xlat
std
or
movsl
dec
xchg
enter
mov
int
lds
xorl
or
mov
inc
fcoms
jbe
ret
test
lret
loope
inc
jmp
mov
mov
sub
js
mov
fistps
mov
sarb
leave
xchg
and
mov
test
sbb
movsl
and
cmp
out
add
notl
pop
enter
and
sbb
mov
push
aaa
pop
pop
test
ljmp
popf
lret
and
push
divb
lock
out
aas
cmpb
mov
pop
mov
jbe
cwtl
movsb
mov
clc
test
dec
frstor
scas
xor
and
ret
fistpl
hlt
pushf
mov
aaa
outsb
lret
inc
and
add
or
xchg
out
add
dec
add
xchg
imul
or
mov
ret
pop
aaa
shll
lcall
mov
mov
add
int3
test
sub
push
or
in
inc
xchg
add
rolb
fdivl
hlt
push
inc
fdiv
mov
jge
lea
cmpsl
enter
out
and
sahf
or
pop
add
js
inc
adc
xor
stos
test
push
mov
or
fwait
sbb
lcall
insl
outsl
mov
pop
jle
movsb
aas
xor
mov
add
les
xchg
ret
add
and
jp
push
lock
nop
inc
adc
pop
call
cmpsl
jno
sti
add
test
roll
movl
nop
xchg
xchg
jl
pop
ljmp
fstpt
sahf
jg
mov
test
jno
add
pop
dec
mov
fistpll
ret
adcb
sbb
push
pushf
ja
int
lock
rcrl
mov
and
inc
testl
das
jb
ret
jnp
sub
pop
roll
cli
mov
arpl
lock
pop
mov
inc
xor
ficompl
negl
mov
inc
mov
sbb
mov
mov
icebp
jns
adc
dec
js
pop
push
scas
dec
loop
loope
jecxz
iret
or
inc
pop
cmp
sbb
push
pop
ret
inc
xlat
push
sbb
popf
rcl
negl
lock
jecxz
shlb
push
mov
lret
ja
or
jo
fistl
gs
sbb
orb
daa
test
and
mov
leave
adc
mov
repz
flds
jb
or
or
fst
fsubrs
pop
mov
fists
fistps
pop
lret
dec
xchg
push
adc
pushf
or
pop
cmpsl
stos
insb
lock
cmpsb
mov
xor
sbb
push
mov
je
pop
imul
mov
mov
stc
lock
and
cmp
inc
xorl
jns
arpl
push
clc
out
fwait
inc
test
cltd
xor
pop
mov
ja
subl
cmp
push
cmpb
dec
inc
fnstcw
test
fmull
adc
sbb
dec
pop
cmp
add
test
jne
xchg
scas
add
push
jl
or
push
rolb
add
aaa
inc
andl
adc
fs
sub
sbbb
cs
outsb
sarb
arpl
dec
mov
bnd
xchg
push
es
or
jmp
lcall
clc
pop
fsub
jg
sub
fsubl
mov
xor
add
inc
inc
pop
sub
xchg
add
mov
mov
and
test
xchg
imul
fsubs
and
adcb
rcll
dec
push
shlb
iret
jecxz
test
and
lret
xchg
jmp
cmp
shlb
clc
scas
call
mov
fwait
jns
mov
add
dec
inc
ja
mul
pop
add
aas
out
sub
mov
sbbl
scas
push
pushf
mov
and
mov
mov
lock
daa
dec
inc
es
fcoms
clc
xchg
cmp
rcl
push
test
inc
pop
and
xchg
je
ficoml
shll
cmpsb
push
test
dec
sbb
into
xchg
aas
mov
dec
in
lds
add
inc
fucomp
add
push
or
addb
fcompl
dec
out
idivl
mov
es
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
xchg
and
and
outsb
lahf
in
bswap
test
xor
lea
nop
and
enter
ret
add
inc
push
mov
sarl
lock
xor
stos
and
leave
test
shll
out
movsb
cmc
stos
clc
cmp
jne
leave
push
jl
adc
inc
cld
repnz
and
add
jbe
lea
aas
mov
cmp
mov
dec
mov
popa
mov
shr
mov
jle
push
lods
dec
bound
int
test
pop
ds
les
lcall
aad
mov
neg
mov
mov
lea
push
mov
roll
enter
rcrb
xor
jns
add
pushf
repnz
sbb
add
xor
lcall
sarl
xor
cltd
arpl
jo
mov
xchg
jno
pop
inc
outsl
push
pop
flds
stos
iret
es
bound
and
shr
neg
pop
mov
fnstenv
leave
push
push
addl
sub
xchg
mov
push
sbb
add
loope
or
dec
outsb
sub
ljmp
add
cmc
adc
inc
fdiv
cmp
xor
fwait
pop
push
push
pusha
or
sbb
xor
mov
fimuls
pop
jno
pop
jo
push
negb
dec
test
sbb
mov
jmp
mov
cmp
xchg
shrb
in
cmp
cltd
pop
sub
jmp
shlb
addl
and
mov
pop
pop
adc
roll
popf
sbb
enter
inc
je
clc
aad
fsts
mov
mov
sbb
out
sti
push
mov
mov
lretw
imul
push
jp
movsl
mov
add
jne
cmpsl
mov
fisubrs
xchg
inc
gs
hlt
test
dec
xchg
xchg
xchg
and
push
out
loope
sbb
mov
shlb
je
out
scas
rorb
or
xchg
mov
pusha
mov
inc
mov
test
push
addr16
out
jmp
mov
sbb
shl
or
dec
xlat
and
cltd
mov
pop
mov
pop
mov
jne
dec
fwait
inc
rcll
aaa
mov
and
push
jnp
int3
call
adcb
gs
fisttps
imul
mov
push
or
and
add
gs
mov
push
push
clc
ss
or
repnz
cmp
and
mov
adc
push
cmp
cmp
add
addr16
leave
xor
mov
mov
mov
imul
inc
mov
rolb
push
ljmp
jo
dec
lds
stos
test
jnp
dec
outsb
movsb
mov
jae
mov
mov
je
int
shll
ret
fistpl
inc
loope
inc
or
cmp
movl
and
test
adc
or
mov
pop
sbb
nop
outsb
xchg
xchg
das
pop
mov
push
std
arpl
cmp
nop
rcl
add
fists
stc
xchg
mov
jbe
out
lcall
jns
push
push
sahf
mov
pop
mov
cli
orl
mov
jbe
rcrl
xchg
stos
fcoml
xor
rolb
push
xor
dec
cld
loop
add
push
cwtl
in
mov
sbb
je
jge
jns
fwait
inc
push
lcall
stc
xor
cmp
pop
inc
sub
cmp
cwtl
push
jne
jne
vpcmpeqb
sbb
jne
jecxz
sbb
adc
jmp
hlt
test
lods
imul
and
daa
lahf
xchg
adc
sbb
push
pushf
mov
mov
add
xchg
push
fsubl
inc
mov
cli
icebp
push
movsb
or
xor
cmpsb
jbe
int3
sbb
aas
lods
mov
mov
mov
mov
or
sbb
sahf
xor
jb
xchg
ds
xor
stos
lods
sbb
test
fucomp
jae
pop
cld
sub
movsl
aad
pop
daa
xchg
test
inc
movl
push
xor
test
xchg
or
xchg
daa
repnz
inc
jne
lret
flds
into
stc
or
mov
frstor
or
flds
add
imul
sbb
adc
sbb
or
push
cmp
movsb
inc
inc
fstl
rcll
outsb
ret
test
push
mov
popa
int3
bound
xlat
jg
fwait
dec
test
int
cmp
sbb
cmpsb
ljmp
xchg
fnstsw
and
std
frstor
adc
lcall
imul
xor
xor
lds
or
or
ret
xchg
mov
cmpsl
push
inc
in
mov
or
int
lds
outsb
scas
into
push
lret
push
pop
repz
sub
test
lcall
jnp
gs
xchg
outsb
ljmp
lock
add
add
clc
add
fmuls
clc
dec
dec
fs
in
mov
jmp
rcll
mov
orl
faddl
mov
mov
js
lret
call
into
xor
jno
sti
lahf
pop
pop
sar
adcb
xchg
jge
inc
adc
mov
addr16
and
xchg
push
jge
or
movsl
or
jne
pusha
mov
or
fildll
fsubs
leave
xor
add
jl
sahf
mov
outsl
clc
cmp
xor
jecxz
enter
arpl
inc
sbb
push
aas
fisubrl
addr16
cmpb
adc
imul
mov
pop
pop
push
xor
arpl
inc
push
fbstp
jns
lahf
jp
stc
pop
push
xchg
fcoms
add
lret
add
dec
sbb
addr16
mov
mov
inc
sbb
sbb
cmovns
and
pop
sbb
jo
xorb
jecxz
loopne
mov
shlb
in
lcall
arpl
pop
mov
adc
leave
sub
push
mov
push
jmp
ret
jge
and
scas
daa
rcr
call
pushf
inc
mov
pop
push
ljmp
mov
inc
inc
and
jge
fs
push
jns
or
js
mov
dec
mov
lock
xchg
popf
std
jb
adc
subl
popf
sbb
test
mov
lds
inc
and
scas
mov
hlt
test
lods
popf
popf
inc
dec
fcom
push
adc
push
and
mov
xchg
cmp
inc
cwtl
push
mov
loopne
push
mov
mov
scas
push
add
lret
sub
dec
xorb
cmpsb
icebp
pop
fistl
andl
mov
test
adc
adc
mov
ret
pop
out
mov
shll
popf
pop
cmpsl
mov
icebp
xchg
inc
jns
inc
mov
out
imul
cmp
xchg
and
push
dec
xchg
fs
pop
js
and
popf
test
sbbb
in
dec
dec
test
or
loope
aad
js
xchg
lahf
pop
mov
mov
inc
pop
arpl
int
cmp
out
cmpsb
pop
fsubrs
icebp
movl
ffree
leave
mov
test
inc
test
outsl
out
dec
xor
xchg
dec
test
test
test
inc
dec
push
push
rol
jbe
xchg
add
pop
insb
or
xchg
or
shl
popf
mov
and
imul
sub
movsb
push
jge
lds
or
test
xchg
ss
sub
mov
loope
xor
sbb
jl
aad
mov
inc
fsubp
xchg
lret
push
xchg
jae
and
xchg
jns
ret
or
shll
out
mov
movsl
test
push
gs
stos
ljmp
orl
das
jb
xchg
pop
xchg
test
stos
mov
dec
sub
pop
test
jo
sub
jg
push
dec
cmpl
bswap
testl
xchg
repnz
push
adc
jg
lds
pop
xorl
mov
jl
fs
mov
lret
pop
stos
adc
loop
mov
inc
mov
ds
ljmp
push
jmp
into
rol
push
orb
aam
xchg
adc
adc
dec
pop
pop
pop
xchg
xchg
jge
inc
dec
rolb
js
js
sbb
and
adc
jns
and
mov
pop
dec
fnstcw
jle
xor
divl
inc
sbb
mov
les
inc
jne
fsubrl
pop
push
xor
iret
fwait
ja
jno
xchg
ret
test
test
inc
push
cmp
das
or
sub
mov
sbb
xchg
adc
and
test
cltd
pop
push
mov
subl
shll
test
lods
lcall
ljmp
push
inc
xor
add
stc
arpl
cwtl
sbb
in
aas
sub
gs
jne
into
cwtl
andl
dec
in
in
js
sub
rcll
stos
hlt
and
mov
arpl
in
sahf
das
xchg
stc
cli
in
test
bound
sbb
stos
mov
test
pushf
dec
pop
adc
out
mov
pop
std
ret
cltd
fldl
dec
cmpsl
inc
fs
add
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
lock
dec
in
push
test
and
pop
fstpt
xor
out
mov
push
mov
lea
test
fsubs
mov
push
or
leave
cwtl
mov
pop
lret
xchg
lcall
mov
cld
xor
into
movb
psllq
sbb
cmp
jmp
mov
bound
gs
pop
adc
mov
jne
jns
lds
nop
clc
xor
shll
inc
lock
xchg
xor
pop
clc
jmp
xchg
mov
stos
adc
sub
mov
in
jge
int
lcall
push
cmp
dec
mov
and
enter
lods
adc
cmpsl
call
fcmove
iret
fmul
mov
scas
adc
call
rclb
test
push
sbb
mov
stos
push
mov
shrl
dec
rorl
rcl
mov
push
cmp
mov
cmp
xor
enter
out
cltd
cmp
rcl
mov
shr
and
dec
mov
sbb
sti
mov
inc
ret
cld
xor
stos
into
sbb
f2xm1
lret
cs
jnp
lahf
rcrb
mov
or
cmpsl
ret
test
xchg
dec
sbbb
jne
dec
sahf
mov
dec
sbb
jns
popf
jae
lret
jge
stos
dec
add
movsl
aam
fs
dec
mov
push
add
and
mov
xor
push
mov
add
jecxz
mov
mov
jnp
cmp
test
test
jo
popa
sbb
in
cmp
mov
xor
mov
push
mov
push
push
in
mov
xlat
inc
mov
stos
daa
fld
jp
pop
fdivrl
fdivr
xor
inc
imul
cs
imul
fisubl
mov
xor
scas
int3
sbb
sub
cmp
and
lret
xor
sbb
mov
fcom
and
lcall
bound
cwtl
sbb
test
jne
jg
inc
add
jp
mov
add
push
lret
and
xchg
cli
imul
cmp
lea
inc
push
sbb
ret
adc
mov
stos
aad
inc
gs
add
jmp
jae
add
outsl
jg
imul
sbb
je
sbb
fwait
xchg
jns
jge
sub
add
and
icebp
xor
stc
sub
insb
repnz
push
fstpl
cld
cwtl
aam
xor
fisubrl
ds
stos
cmpsl
ret
imul
pushfw
jae
inc
mov
mov
xchg
lods
repnz
inc
in
jne
fstpl
jae
xchg
in
push
sub
cmp
xor
mov
xchg
jge
pushf
into
fucomip
and
mov
cmp
divl
out
test
jnp
int
imul
maxps
stos
dec
mov
loop
in
push
lcall
rolb
adcb
add
fcoml
lds
repnz
inc
pop
test
mov
pop
lds
push
mov
mov
fwait
outsl
iret
push
cs
and
dec
pop
and
popf
mov
mov
push
lock
mov
aam
and
pop
and
fcmovu
fsts
mov
xlat
mov
jns
sbb
push
mov
inc
dec
jge
and
nop
ljmp
mov
scas
sbb
rcr
and
dec
lcall
sub
mov
sub
pop
inc
mov
mov
jno
aad
mov
adcb
in
testl
mov
dec
call
jne
movsl
cmc
mov
loopne
or
mov
and
pop
stos
inc
aaa
ftst
or
imul
ja
mov
aam
sbb
stos
es
inc
dec
in
stos
enter
dec
adc
fisttpl
movsl
sub
mov
jl
sti
mov
mov
imul
adc
lahf
sgdtl
stos
cmp
xchg
int
mov
push
inc
lcall
and
fcoml
arpl
mov
into
mov
fucomi
repnz
fs
jg
jle
arpl
fsubrs
lods
loopne
pop
int3
sbb
cld
cmp
bound
test
dec
nop
dec
xchg
cmp
sub
inc
jmp
lret
lahf
inc
fcmovnu
jecxz
or
xchg
adc
es
aas
adc
lea
test
and
enter
inc
shlb
pop
iret
jae
cwtl
iret
inc
fsts
bound
add
xor
lods
out
sub
lock
mov
aam
and
lods
ret
inc
out
sub
insb
sub
sbb
stos
es
mov
pop
fisttpll
pop
xor
sbb
jno
fwait
mov
movzbl
mov
imul
cmpsb
outsb
push
fs
and
lret
ficompl
test
mov
aaa
jo
push
bnd
inc
and
cld
mov
pop
xchg
add
xchg
subl
pushf
stc
push
fimull
sbb
out
rol
ret
cwtl
cld
testl
out
sbb
dec
aaa
pushl
mov
pop
shl
mov
xor
lods
pop
mov
movsb
mov
aad
push
loopne
mov
adc
mov
jecxz
out
jo
add
sub
repz
jle
push
adc
clc
inc
pushl
inc
rcl
mov
cmp
ja
pop
nop
dec
sbb
mov
dec
inc
push
clc
outsl
call
mov
fisttpll
pop
push
mov
hlt
xor
push
fldenv
les
ret
insl
ficoms
lock
dec
enter
mov
lds
rsm
jecxz
jg
dec
dec
fs
rorl
push
sub
inc
push
pushf
cmp
add
jae
aas
pop
scas
inc
fs
or
and
in
mull
and
out
add
popl
out
dec
loopne
mov
push
sbbl
xchg
mov
pusha
jo
out
mov
stos
inc
sbb
bound
sub
xor
dec
sbb
stos
das
jb
cmpsb
mov
pushf
lds
mov
pop
xor
fnstenv
lea
cwtl
jl
pop
or
into
lcall
inc
divl
outsl
adc
inc
mov
pushf
sbb
or
hlt
mov
hlt
stos
aad
imul
sbb
stc
cs
mov
pop
mov
scas
sbb
push
dec
push
iret
cli
mov
sar
rolb
pop
mov
cmp
mov
xchg
cmp
stos
popf
imulb
pop
scas
dec
iret
mov
fisubrl
sbb
lahf
xchg
test
lods
mov
or
inc
adc
jno
outsl
xchg
pop
int
popf
shrb
xchg
lods
push
mov
test
push
or
sub
mov
movsl
jl
dec
test
dec
push
mov
sbb
and
mov
lahf
sbb
jne
insl
popa
test
jp
mov
mov
int
loopne
dec
or
std
fmuls
jb
lea
shrb
inc
mov
popf
rcrl
add
xchg
shl
pop
mov
dec
jmp
and
cld
push
test
sarl
fs
cmpsb
arpl
dec
xor
shll
push
jns
fbld
fnsave
dec
pop
jo
test
shll
mov
shrb
lcall
loopne
pop
xor
sahf
lea
fwait
lods
in
int3
clc
push
fs
negb
adc
inc
lahf
scas
std
stc
loope
vsqrtss
js
aad
dec
adc
pusha
addl
add
jle
in
jp
cltd
pop
mov
mov
sub
call
and
stos
icebp
iret
ja
mov
xor
push
and
dec
leave
adc
cld
jl
ds
imull
fisubrs
pop
or
jp
cmp
bound
mov
add
mov
leave
mov
and
lds
rorl
movsb
test
xor
mov
test
js
inc
jb
add
push
push
mov
inc
dec
jg
mov
aaa
sub
ss
mov
lret
fldl
xor
test
out
arpl
stos
sub
add
lds
mov
adc
jge
les
add
xchg
adc
pusha
pop
pusha
fisubs
jge
add
inc
inc
mov
rclb
inc
xor
dec
mov
pop
ficoms
xchg
and
out
clc
scas
or
push
pop
xchg
mov
ror
inc
mov
lea
mov
mov
sarb
mov
jmp
pop
stos
mov
ret
or
dec
xchg
shrl
icebp
popf
inc
mov
je
insl
stc
add
cmpl
bswap
lret
jecxz
movl
add
cld
lods
sbb
or
xor
cmpb
xor
xchg
jae
push
aad
mov
pop
stos
test
jnp
lea
xor
popf
mov
insl
push
and
cmp
ret
inc
jp
push
sbb
ja
fadds
xor
mov
xchg
add
daa
mov
in
rol
pop
fcoms
decl
repnz
fmulp
xchg
jmp
pushf
popf
xchg
fadds
xchg
push
adc
adc
sbb
xor
call
icebp
xchg
jbe
popf
jns
sbb
pop
xchg
or
bound
cli
push
xor
mov
jge
inc
adc
and
mov
xchg
das
js
rcl
mov
inc
inc
adc
fstp
and
mov
mov
jno
leave
das
add
fistl
movsb
mov
adc
lods
jno
or
shl
or
in
push
add
lret
testb
inc
arpl
ret
mov
hlt
mov
sti
test
dec
sbb
push
pop
inc
jle
movsb
inc
out
sahf
sbbb
shrb
lock
xor
and
fimull
mov
lcall
sbb
scas
fstl
cmp
fisubl
insl
lea
pop
inc
xchg
add
mov
pop
dec
xchg
add
sahf
jle
insl
or
mov
adc
imul
mov
mov
cmp
sub
fs
addr16
call
popf
fsubr
or
es
jl
stos
nop
test
sub
jmp
adc
movl
adc
or
sbb
or
sub
inc
test
jnp
test
std
arpl
ljmp
adc
inc
ss
sub
xor
jae
xchg
cmp
pop
push
mov
repz
mov
xchg
xor
inc
mov
mov
jmp
jge
pushf
lds
arpl
lock
test
add
cltd
inc
scas
xchg
fisttpl
adc
pop
push
scas
cmp
das
dec
adc
pop
int3
cmp
xchg
cld
inc
repz
data16
jl
mov
sbb
mov
sbb
sub
mov
sbb
jns
pop
xchg
imul
or
pop
cmp
sti
cmp
ret
jo
dec
lds
stos
test
jnp
dec
outsb
movsb
mov
jae
mov
mov
je
int
shll
ret
fistpl
inc
loope
inc
or
cmp
movl
and
sbb
outsl
mov
in
lahf
jbe
adc
out
mov
cwtl
movsl
dec
sbb
mov
dec
lahf
push
cmpsl
mov
mov
push
pop
dec
pop
push
mov
pop
fisttpll
fdivr
lods
dec
sbb
psubw
push
cmp
sbb
cmp
or
cmp
push
outsl
out
std
xor
push
mov
push
xchg
pop
push
mov
pusha
mov
test
insl
mov
fcompl
js
pop
lret
push
push
add
into
ds
add
or
mov
mov
jnp
inc
push
mov
or
mov
xor
sbb
cmp
jb
cmp
cld
pop
xchg
inc
mov
sbb
jb
mov
insb
test
jae
enter
lret
mov
mov
mov
mov
sub
xchg
dec
in
push
jl
mov
stos
sbb
cmpsl
out
sbb
lea
shl
imul
cmpl
into
cli
add
iret
mov
int
mov
jmp
mov
and
pushf
mov
inc
mov
insb
mov
push
sub
ret
int3
call
adcb
gs
fisttps
imul
mov
push
or
and
add
gs
mov
push
ja
sbbb
leave
in
mov
or
scas
jle
xor
dec
hlt
or
cltd
mov
push
jmp
dec
lcall
stc
ret
out
test
ret
xor
dec
das
xchg
shrl
add
inc
je
repnz
loope
addl
sbb
mov
sahf
aaa
out
jmp
push
mov
jmp
adc
xchg
and
mov
mov
cmc
mov
xlat
pusha
movlps
xor
pop
pushf
scas
sbb
xchg
mov
loopne
push
cmp
stos
es
hlt
lahf
or
push
cld
call
rolb
inc
xor
cmp
enter
jp
scas
xorb
rorl
mov
lcall
shlb
xchg
movsb
xor
ret
xchg
js
push
insb
in
cmpsb
out
or
push
add
test
xor
fs
pop
add
subl
cmp
cmpsl
jo
jge
repnz
mov
rcrb
cltd
add
adc
pop
mov
ljmp
leave
push
ficompl
dec
cwtl
ja
enter
clc
sbb
pop
inc
loope
repnz
es
jg
test
aas
out
mov
xchg
xor
sub
js
test
orb
and
dec
imul
jecxz
popl
sub
inc
push
stos
nop
lret
add
ror
dec
cld
xchg
lods
mov
int3
cmc
stc
sbb
pop
xor
imulb
mov
shll
xchg
mov
and
mov
sbb
push
cmp
repnz
cmc
idivb
push
stos
jge
jns
cmpsl
and
and
jns
enter
push
sbb
adc
hlt
mov
inc
xchg
jnp
inc
mov
jl
sbbl
push
dec
mov
jno
leave
mov
loopne
call
push
sub
jae
fbstp
call
push
mov
shlb
and
inc
mov
sbb
xor
inc
cwtl
and
dec
inc
aad
test
das
or
adc
adc
mov
mov
sti
cmp
xor
cld
test
pop
add
icebp
lret
xor
sub
scas
mov
in
adcb
cwtl
orb
mov
xor
pop
and
mov
mov
arpl
lds
mov
mov
xor
mov
testb
enter
gs
xchg
adc
mov
cwtl
sti
in
jbe
and
mov
bound
jl
sbb
subb
pop
mov
jo
sahf
inc
shrb
xchg
inc
pushf
sbb
jl
mov
lods
jmp
sahf
stos
fsubl
xchg
fwait
pop
sbb
adc
incb
adc
sub
sbb
mov
hlt
push
test
nop
dec
daa
lahf
sub
mov
xor
xor
andl
in
mov
push
add
mov
faddl
lock
sbb
inc
cmp
add
pop
dec
fdivl
pop
clc
pusha
scas
and
fwait
shrb
mov
movsl
adc
jge
pop
mov
fdivrl
and
stos
inc
cmp
pushf
jbe
lods
or
sub
pop
stos
pushf
or
testb
rcll
dec
cmpsl
fistps
iret
aad
in
cmp
cmp
clc
int3
cltd
in
ret
mov
ja
insb
outsl
xor
cmp
fcomp
cld
jle
adc
idiv
pushl
adc
adc
pop
mov
push
xchg
inc
and
xchg
sub
lock
xlat
stc
repz
gs
push
scas
fstpl
and
push
inc
and
orl
cmpsb
dec
js
dec
pop
dec
mov
popa
mov
pop
in
inc
xor
xor
outsb
lock
imul
push
mov
repz
sti
jmp
fwait
sbb
js
out
pushf
mov
add
sub
pushf
ret
pop
pop
ret
pop
repnz
sbb
push
jmp
lds
leave
test
jb
pop
scas
mov
negl
mov
fucomi
stc
add
ret
inc
or
and
sub
test
stos
stos
stos
lahf
or
sub
pop
or
pop
clc
dec
pop
pusha
jnp
xor
xor
repnz
xchg
xor
sti
jmp
mov
repz
add
or
dec
mov
stc
mov
movsl
inc
push
mov
or
cmpsb
test
adc
loop
imul
cmpsb
fsubl
ja
enter
enter
sub
inc
inc
mov
cmp
iret
xchg
jne
dec
pop
daa
popa
movsb
hlt
cltd
sahf
xchg
pop
add
cwtl
dec
and
mov
mov
test
add
dec
xchg
pop
pop
mov
jns
add
cs
adc
jecxz
test
jbe
adc
mov
dec
cwtl
jg
test
jno
test
sbb
test
clc
sub
mov
pop
push
mov
stc
dec
cmp
sub
test
xchg
mov
cmp
adc
cltd
iret
fcoml
mov
add
repz
xor
add
cmp
ret
lahf
push
xchg
pop
jmp
push
xchg
out
js
mov
adc
sbb
add
dec
sarb
dec
repz
les
je
enter
test
mov
jg
mov
pop
mov
gs
outsl
aad
jne
cltd
push
adc
and
adc
add
add
xchg
cmp
adcb
lea
aam
push
dec
add
mov
cmp
jp
add
jge
ret
mov
add
addr16
lods
xorl
les
nop
xlat
stos
test
fiaddl
dec
sbb
scas
mov
cmp
test
data16
arpl
movsl
insl
ret
add
xchg
dec
scas
xchg
stos
lds
inc
jns
lret
mov
jp
add
sbb
xor
lahf
jp
mov
and
xchg
cld
adc
add
jecxz
jno
fmuls
mov
inc
push
mov
inc
aas
jecxz
mov
test
in
mov
push
inc
and
idiv
les
fstpl
je
call
inc
hlt
je
dec
dec
imul
and
xor
mov
dec
pop
mov
mov
xlat
mov
cmp
mov
mov
cltd
sub
sbb
xor
or
sbb
fsubrl
cwtl
sub
sub
sbb
les
cli
cmp
shrl
mov
mov
fldl2e
je
sahf
das
xchg
stc
cli
in
test
cmp
mov
add
mov
pop
pushl
popf
xor
or
fwait
pushf
adc
xchg
fwait
jnp
dec
pop
mov
pusha
mov
jmp
xor
and
mov
mov
pop
out
xchg
aam
mov
jnp
inc
push
mov
pop
xor
gs
mov
inc
sbb
ds
jmp
std
mov
sti
and
test
loope
and
mov
push
sbb
loop
sahf
js
test
adcb
lea
mov
imul
push
popf
mov
cmp
jp
add
add
mov
aas
adc
or
sub
gs
cwtl
push
hlt
sub
xchg
xlat
cwtl
sub
cmp
sub
cmc
sbb
std
movsl
outsb
pusha
dec
and
stos
push
pop
pop
pop
adc
jl
sbb
cltd
out
ret
mov
add
das
mov
cmpsb
sahf
xor
ret
mov
fdivrl
repz
push
inc
js
nop
xchg
pop
push
cwtl
loopne
sbb
into
jecxz
std
decl
mov
pop
cmc
test
cld
xchg
xchg
xchg
mov
mov
mov
mov
mov
std
mov
fwait
lea
gs
inc
adc
mov
loopne
and
sete
fisubrs
fadds
push
cwtl
mov
test
adcb
idivl
into
add
outsl
pop
adc
cli
cmp
jns
inc
dec
fwait
mov
addr16
inc
inc
sbb
add
wbinvd
insl
movsl
ret
leave
sbb
ficompl
ret
dec
pop
dec
and
mov
bnd
sub
stos
inc
in
ljmp
fsub
lds
repnz
sub
inc
xchg
push
jo
sbb
or
leave
xchg
cmp
es
sbb
loop
js
scas
aaa
mov
cli
jnp
inc
mov
bound
xchg
inc
sbb
add
mov
test
adc
xchg
adc
in
xchg
rol
pop
test
out
xor
pop
negl
js
fwait
lea
jle
bound
out
inc
push
sbb
mov
xor
in
fmuls
and
cltd
sbb
sbb
idivl
inc
jmp
xor
mov
jae
mov
lock
mov
mov
lods
sbb
or
or
pop
stos
push
lods
xchg
sub
adc
xchg
jno
push
icebp
sbb
sub
out
jae
push
aam
addr16
cli
in
test
cmp
loopne
mov
or
fistps
sub
in
popf
mov
push
mov
lods
pop
pushf
or
sbb
ficoms
mov
or
xchg
fldt
jo
sbbl
sub
or
sub
mov
inc
test
mov
dec
and
repnz
out
cmp
cmp
jne
mov
pop
mov
gs
mov
inc
cltd
enter
inc
and
cmp
or
cmp
xchg
sub
and
and
in
pop
das
xor
mov
pop
mov
xor
dec
lret
cmp
test
out
aas
pop
ret
sahf
repz
out
in
ja
lock
lock
mov
xchg
sub
lods
xchg
sub
adc
inc
in
lods
lea
fiaddl
xchg
xlat
cmpl
xchg
stc
cli
in
test
or
invd
mov
into
stos
inc
mov
xchg
add
add
sub
sbb
mov
pop
mov
loope
movsb
fstl
mov
lahf
ficoms
es
loop
xchg
dec
add
cmp
sub
adc
pop
sub
cmp
mov
push
fidivrs
cld
mov
cli
jae
pop
xor
in
or
jge
insl
mov
mov
hlt
fdivs
and
mov
iret
mov
or
jge
movsb
xchg
jecxz
lret
sbb
add
pop
stos
shrl
mov
aam
addl
mov
ja
push
push
in
sbb
pop
push
jo
leave
ret
pop
dec
stc
jmp
jecxz
dec
int3
adc
repnz
nop
les
push
cld
xor
jb
popf
push
or
mul
cmp
cli
in
test
nop
fisubrl
add
pop
inc
push
dec
scas
xchg
stos
std
cld
pop
or
cld
jp
add
pop
mov
popf
adc
pop
insb
jle
out
pop
mov
in
mov
repz
xlat
pushf
ret
xchg
add
mov
mov
dec
mov
adc
cmp
js
cmpsl
xchg
inc
mov
call
inc
cwtl
xchg
xchg
push
mov
jmp
std
mov
sti
and
loope
jecxz
mov
adcl
jns
fdivs
mov
mov
imul
mov
das
push
xchg
mov
lods
test
adc
jae
xchg
mov
out
jecxz
push
xchg
mov
jbe
add
xchg
fwait
xchg
jecxz
or
xor
push
pop
push
rorb
lods
pop
sarb
and
jae
scas
bound
push
inc
lahf
mov
ficomps
dec
cs
in
ret
mov
sub
mov
add
or
mov
cmp
dec
les
fistl
mov
pop
push
int3
cmp
mov
adc
xchg
pop
test
xor
push
mov
nop
xchg
mov
aam
cmp
sti
push
add
mov
stc
repnz
pop
imul
mov
jae
xchg
dec
xchg
jnp
sub
cltd
out
cmovs
mov
je
jmp
cmp
js
dec
lcall
dec
mov
xchg
scas
pop
mov
lea
sub
enter
fwait
lahf
lds
leave
fistps
dec
lahf
lret
jecxz
add
sbb
jl
mov
sub
pushf
cltd
push
mov
and
mov
sbb
inc
imul
push
xchg
cld
fwait
push
stos
inc
in
xchg
sahf
or
jne
cmc
fcmovne
aaa
into
cmpl
xchg
stc
cli
in
test
or
or
dec
cltd
or
cmp
cmp
xchg
fcmovne
fnsave
push
mov
mov
pusha
mov
scas
jle
popa
sub
fistps
xchg
fsubrl
fists
xchg
push
or
add
add
push
stc
paddq
adc
jmp
adc
cmpsl
lret
in
mov
mov
pop
mov
mov
in
out
int3
xchg
xor
xchg
xorb
xchg
sub
and
in
jne
mov
cwtl
std
jne
dec
in
add
pushf
mov
ret
xchg
pop
pop
adc
sti
pop
mov
jecxz
popa
pushf
fwait
jo
leave
ret
pop
dec
mov
cmc
scas
jg
negb
adc
cwtl
icebp
ss
les
lcall
sahf
cli
iret
push
in
mov
adc
or
bound
xchg
xor
jbe
mov
dec
jecxz
dec
cmpsl
outsb
stos
popf
cmp
mov
inc
mov
fstl
fwait
enter
lret
ficoms
cmp
clc
dec
inc
fists
ljmp
sub
xchg
push
cmp
push
dec
mov
xchg
sub
push
movsl
ret
dec
jne
mov
mov
jnp
enter
ja
sti
repz
out
adc
add
dec
xchg
icebp
mov
sahf
add
cmp
cwtl
jg
dec
mov
aad
in
pop
push
mov
dec
and
mov
mov
test
add
push
push
iret
subl
test
sbb
sub
mov
pusha
push
xor
adc
mov
ret
and
arpl
xor
fs
sub
cmc
sbb
cmp
adc
mov
adc
sbb
adc
stos
cmp
jp
add
sbb
xor
lahf
jp
mov
addr16
or
inc
cld
adc
imul
add
arpl
rclb
mov
loopne
cld
or
dec
mov
pop
xor
insl
in
popf
aad
sub
adc
pop
ds
shrb
std
jb
cmp
addl
loopne
push
cmp
xchg
sub
xchg
xchg
popl
xor
cmp
and
mov
test
add
in
and
inc
hlt
add
scas
push
neg
add
lds
sbb
subb
adc
or
or
sbb
les
lcall
sbb
sbb
ficoml
mov
or
ret
add
idivb
hlt
movsl
sbb
adc
loopne
mov
add
mov
add
sbb
sub
xchg
cmpsl
pop
pushf
lret
xor
test
add
and
xor
add
xchg
pop
dec
adc
rcr
and
xchg
mov
inc
push
mov
pop
xor
insl
xchg
je
inc
inc
mov
cmpsl
ret
test
cli
cltd
lea
sti
sti
and
test
mov
push
pushf
int
jg
dec
arpl
mov
fiaddl
test
ss
int
mov
out
and
pop
std
popa
pushf
pop
lahf
in
or
repz
pop
xchg
inc
movsl
xchg
sub
pushf
cltd
push
mov
and
iret
mov
popf
jnp
cmp
mov
test
xchg
sbb
cmc
movsl
xchg
pushf
dec
popf
lret
mov
faddl
nop
jp
fdivs
push
sahf
rorl
mov
fistl
cwtl
sti
lahf
fidivrl
das
enter
sub
jo
lahf
ficoms
cmp
pop
je
adc
js
xchg
and
fildl
inc
jle
fwait
push
dec
mov
and
jecxz
mov
push
jmp
fwait
lret
in
mov
mov
cmpsb
xchg
fisttpll
shrb
mov
pop
cltd
and
pop
jp
into
mov
sbb
loopne
cmc
into
call
int3
sbb
mov
es
repnz
pop
add
mov
imul
aad
mov
jge
pop
dec
add
push
jp
xor
pop
ficompl
repnz
les
jge
xor
jnp
sbb
mov
lock
popf
in
mov
movsl
adc
dec
adc
mov
mov
or
xchg
fcmovu
jecxz
lods
arpl
loope
pop
test
and
lret
jg
leave
and
bound
es
in
adc
mov
loopne
jnp
clc
jb
add
xor
pop
mov
sub
and
xor
fwait
mov
lods
es
popa
jge
insl
or
mov
inc
dec
push
repnz
ret
jl
sub
and
xor
push
adc
mov
sbb
es
or
dec
into
add
jp
adc
jno
add
mov
mov
add
insl
push
sub
pushf
cltd
icebp
aaa
pop
xor
fiaddl
mov
clc
mov
bound
push
push
inc
mov
shlb
test
repz
pusha
in
fstl
jae
cli
arpl
xorb
dec
lock
and
les
jno
push
push
pop
in
sub
jecxz
cmp
adc
pop
fs
fcoml
mov
ficoms
fwait
dec
flds
fcmovnb
adc
rcrl
sub
or
sti
add
popl
stc
inc
push
cmp
push
mov
pop
xor
sub
and
jno
fdivrl
dec
loope
jb
pop
hlt
or
and
or
and
mov
test
dec
fwait
scas
out
push
adc
negl
roll
lret
rcl
mov
ret
loopne
in
mov
lods
std
fists
ret
faddp
lret
gs
push
mov
sub
mov
repnz
push
push
adc
mov
mov
cltd
and
mov
sahf
fwait
arpl
aaa
dec
adc
mov
lds
jno
dec
scas
fildl
iret
pop
test
lahf
xchg
xor
adc
inc
mov
mov
lods
add
imul
push
rcr
xchg
fucomi
lds
fadd
adc
fyl2xp1
mov
sbb
sbb
rclb
test
xor
rcrb
in
mov
jnp
inc
push
mov
xchg
cmp
inc
gs
adc
push
mov
xchg
fld1
jne
popf
fcmovu
sti
sti
and
orl
mov
pop
and
fwait
push
mov
mov
jecxz
je
ret
fildll
pop
mov
fwait
movsl
sub
int
pop
and
or
jae
sbb
fsubrs
popf
mov
cmp
jp
add
addr16
dec
sbb
add
setl
push
mov
cmp
lods
mov
lret
push
and
xchg
leave
pop
fildll
stos
inc
and
movb
jmp
adc
ss
dec
mov
dec
xchg
aad
sub
inc
cmp
mov
jb
xor
movsb
push
pop
push
and
lahf
scas
jg
pop
ja
xlat
cld
jnp
sub
xor
popl
es
lock
stc
fisubrs
pop
out
addr16
scas
dec
and
xor
pop
pop
inc
adc
ret
push
fistpll
pop
mov
xchg
pop
push
clc
rorb
add
insb
mov
xchg
jmp
or
js
cltd
or
pop
das
xor
and
mov
inc
inc
mov
sahf
cmp
cmp
aas
xor
adc
jae
xchg
pusha
push
imul
test
dec
popf
cmp
add
jno
cmp
stos
push
test
inc
adc
orl
mov
sahf
das
xchg
stc
cli
in
test
cmp
fsub
add
mov
outsl
lods
test
test
stos
jbe
or
pop
test
jae
in
dec
pushf
mov
ljmp
xchg
dec
mov
xchg
adc
aaa
adc
addl
xchg
sti
cmp
inc
mov
mov
push
ljmp
xchg
mov
lahf
cmpsl
jnp
pop
pop
fs
sahf
inc
aad
sti
mov
pop
xor
xor
add
addl
mov
dec
inc
cmc
fsubrs
popf
push
adc
test
mov
mov
repnz
push
into
lea
in
mov
jae
mov
jns
outsl
inc
add
stos
aad
pusha
sub
mov
inc
sbb
jp
jns
xor
adcl
mov
outsl
adc
sub
rcll
mov
lahf
mov
xor
adc
imul
cmp
sbb
shrb
xchg
cmp
ja
mov
pop
fistl
cmpsb
and
test
fstpl
icebp
or
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
inc
sbbl
push
dec
mov
jno
leave
mov
push
in
xchg
rol
pop
test
mov
out
enter
cmpsl
ret
test
push
fs
dec
mov
mov
sbb
xor
enter
hlt
mov
nop
push
jmp
inc
cmp
in
dec
inc
mov
dec
mov
xor
mov
cmp
mov
or
add
xchg
xor
cltd
imul
ret
xchg
or
fisubrl
fnstsw
dec
and
xchg
xor
and
push
and
out
dec
xchg
ljmp
xchg
fcmovb
cmp
push
cmp
xchg
aad
and
arpl
xchg
stos
sbb
insl
xchg
push
mov
mov
push
xchg
mov
jnp
inc
in
cmp
pop
mov
bnd
lret
fistps
jno
ljmp
sbb
mov
fwait
push
dec
mov
inc
push
mov
inc
push
mov
ret
adc
rcr
movsb
jno
leave
pop
gs
rol
fld1
jb
pop
mov
data16
call
int3
add
enter
or
je
fsubr
mov
cmc
xor
mov
icebp
inc
inc
xor
sbbl
inc
mov
mov
loopne
fidivrs
clc
sti
mov
sbb
mov
in
ja
inc
mov
aas
rorb
gs
imul
jno
fs
xchg
dec
repnz
stos
inc
in
mov
mov
jge
aaa
cmpsl
negl
jns
jno
push
and
fisubl
pop
retw
adc
and
imul
xlat
and
pop
inc
push
mov
lods
push
icebp
push
jecxz
popf
push
mov
mov
push
or
inc
fs
pop
xor
adc
adc
push
repnz
add
mov
or
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
movsb
rcr
call
cmpsb
jo
mov
popf
stos
int
pop
sub
mov
adc
inc
out
mov
int
jle
or
mov
pop
push
andb
push
xchg
popl
inc
xor
lret
fst
xchg
dec
and
arpl
mov
repnz
loopne
jg
loop
add
inc
add
mov
adc
mov
bnd
inc
imul
mov
xor
pushf
dec
pop
push
jg
mov
insl
mov
mov
pop
test
xchg
stos
lds
aad
inc
xchg
lods
xchg
adc
lods
inc
inc
fstp
in
push
pusha
push
cmp
jmp
leave
in
loop
inc
sarb
jl
sbb
or
add
cs
inc
sbb
dec
xor
push
sbb
stc
ljmp
shll
pop
fdivl
mov
mov
sbb
push
or
subl
outsb
mov
jne
dec
pusha
mov
mov
jne
enter
mov
add
repz
fdivrs
sbb
push
add
mov
jns
cltd
rcrl
sub
dec
inc
pop
rcl
or
stos
int3
fwait
xor
leave
rcrb
sub
mov
lret
loop
into
in
das
xchg
ficoml
mov
sbb
pushf
dec
pop
jno
andb
sbb
hlt
repnz
and
push
sahf
push
jle
mov
push
pop
push
sub
add
jbe
jecxz
sahf
mov
int
or
inc
fs
aas
cmpsl
xlat
ret
int3
movsb
andl
sbb
cmp
cwtl
loope
fwait
xor
lods
mov
scas
or
stos
pop
mov
cmp
out
sbb
outsl
fidivs
loope
sbb
les
xchg
inc
dec
xchg
pusha
sbb
or
push
and
mov
mov
sbb
mov
clc
ljmp
jne
xchg
push
push
iret
mov
cli
adc
iret
popa
mov
ficomps
repz
and
xor
push
pusha
push
mov
pop
stc
gs
iret
les
ret
pop
leave
mov
sbb
loop
add
jns
pop
push
push
insb
push
cli
mov
cmpsl
lea
jmp
adc
divb
xchg
fcoms
cmp
xchg
fsts
scas
xchg
stos
lds
inc
jns
lret
mov
jp
add
sbb
movsb
and
sbbb
jle
mov
js
in
movsb
lahf
mov
sub
xchg
sbb
adc
sub
push
mov
fwait
xor
enter
jmp
enter
cmp
mov
in
in
out
cmp
push
adc
adc
sbb
adc
adc
xor
mov
aad
dec
mov
nop
mov
fucomi
xchg
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
mov
fstpt
mov
ss
and
cmpsl
mov
nop
pop
mov
imul
sub
pop
stos
push
outsb
jno
mov
sbb
cwtl
xlat
mov
push
dec
pop
jp
pushf
dec
pop
jno
or
jae
or
das
cwtl
inc
scas
xchg
stos
push
xchg
or
cld
jp
add
sbb
inc
sbb
lods
fstpl
js
in
movsb
lahf
mov
sub
xchg
stos
andl
pop
inc
cmp
cmp
fsubrs
fisubrs
mov
and
cmp
pop
jmp
ja
fbld
push
push
sahf
jo
fwait
outsl
movnti
push
adc
int3
mov
adc
mov
add
and
and
fsubr
mov
cmc
mov
es
mov
cmp
and
mov
test
xor
mov
lret
jecxz
push
cwtl
mov
mov
mov
and
cmpsl
mov
nop
pop
cmp
imul
mov
ja
push
test
test
inc
movsb
or
mov
ja
je
sbb
into
lret
sarb
jae
cmp
push
stos
std
aam
adc
or
mov
xchg
adc
pop
sub
adc
cmpsl
pop
xchg
std
push
fucomi
repnz
add
and
stc
push
mov
pusha
sarb
mov
test
call
mov
and
lret
movsl
ret
dec
mov
sbb
cmp
mov
fnsave
sti
sti
and
or
loopne
je
sbb
add
push
adc
pop
pop
push
dec
test
xor
mov
loopne
in
mov
test
push
sbb
icebp
enter
mov
sbb
xchg
test
ret
dec
cltd
pusha
push
imulb
push
aad
lods
lds
xchg
les
sbb
test
and
pop
cmp
pop
and
and
adc
add
sbb
cltd
jmp
adc
mov
add
repz
xor
add
cmp
ret
lahf
sahf
adc
jo
jg
dec
fsubl
xchg
addps
adc
inc
sarb
dec
gs
test
xchg
scas
xchg
in
pop
mov
out
xchg
lea
sbb
pop
cmp
std
xchg
mov
mov
fcomi
enter
in
xchg
mov
fwait
enter
cmpb
xchg
sub
xchg
jmp
mov
dec
mov
xchg
ficoml
cmp
ret
loopne
mov
jns
rcrl
inc
fsubs
push
sbb
pop
sub
mov
repnz
xor
jp
int
inc
sbb
cmpb
out
cmpsb
sub
push
test
xor
jne
cmp
jne
inc
mov
aaa
loope
mov
sti
stc
cli
in
test
pop
xor
test
or
xchg
add
jns
movsl
adc
and
mov
xchg
mov
cwtl
lods
mov
pop
xor
cwtl
insl
mov
test
and
mov
clc
rcl
jae
dec
sbb
sahf
xlat
rcr
xor
addr16
test
xchg
mov
clc
and
movsb
xor
lods
cmp
cmp
jne
xchg
or
xor
icebp
add
adc
dec
lea
fsubrs
out
ret
gs
das
xor
mov
xor
pop
or
call
scas
mov
mov
and
leave
in
inc
rcrl
push
ljmp
cld
jg
fs
aaa
xchg
int3
or
sarb
jp
dec
xor
movsb
jmp
sbbb
mov
xchg
cmc
stc
pop
fldt
js
push
insb
push
cmp
pop
mov
arpl
aaa
std
xor
mov
orb
jecxz
cmp
and
clc
sbb
lret
dec
mov
and
fwait
dec
cmp
fists
inc
shlb
subb
mov
and
std
decl
sub
mov
xchg
int
jmp
mov
int3
jmp
mov
jp
or
push
out
mov
std
xor
jns
sbb
add
movsl
inc
jne
orl
lret
sbb
mov
dec
ret
xorb
movsb
lret
sbb
and
push
popf
jp
add
pop
cmp
or
aas
fidivs
mov
and
xchg
pop
shr
ja
adc
jg
inc
add
iret
xchg
popf
arpl
sbb
mov
outsb
orb
inc
lock
inc
jae
pop
punpckldq
mov
mov
insl
mov
in
jge
push
and
and
push
sub
add
pushf
in
es
loopne
and
jmp
popf
mov
adc
inc
sbb
sti
inc
mov
xchg
dec
sub
rcrb
pushl
or
les
xchg
and
aaa
push
out
test
lods
daa
enter
out
dec
jmp
mov
jb
pop
fldenv
pop
mov
adc
xor
lcall
push
jp
sub
sub
mov
repnz
lret
inc
mov
mov
adc
adc
mov
pop
loopne
decl
sbb
dec
cwtl
inc
test
sbb
idivb
mov
lock
cmc
or
movsl
ret
leave
stc
arpl
ret
popf
cmp
xor
xchg
test
xchg
sbb
hlt
loopne
test
aam
sub
mov
xor
cltd
add
fisubrl
shrl
jne
gs
sub
mov
xor
out
ret
into
xor
fucomi
bnd
jno
fs
cmp
shrl
shll
mov
into
clc
and
or
test
aam
fldl
mov
out
xchg
sub
fidivs
mov
into
sbb
pop
xor
xor
dec
inc
mov
pop
bound
push
pop
cmpsb
hlt
push
mov
cltd
stc
call
int3
lcall
int3
xchg
cli
jo
pop
jmp
sahf
mov
js
clc
sti
mov
in
add
es
mov
mov
add
mov
aas
cli
sbb
mov
test
push
xor
push
sub
xor
add
xor
subb
in
jmp
cmp
lods
mov
mov
and
mov
dec
lret
jle
fiaddl
rdpmc
cltd
lods
jle
jnp
lahf
inc
lahf
add
cld
and
popf
scas
stc
xor
jmp
lds
imul
jle
dec
dec
or
mov
push
mov
inc
push
fidivrs
sub
sahf
and
pusha
jo
fwait
pop
adc
mov
cltd
repz
insb
aaa
and
mov
aas
adc
mov
xchg
dec
push
ljmp
fildll
fsubs
leave
mov
pop
mov
and
or
add
iret
xchg
cmp
shll
inc
out
out
ja
and
cld
jg
inc
add
hlt
mov
stos
pop
ficoml
xor
imul
push
out
int3
pop
andb
repz
pushf
dec
pop
jae
inc
mov
gs
push
mov
imul
sub
hlt
lods
mov
mov
sbb
jecxz
mov
mov
pop
into
xor
and
or
push
and
sbb
mov
xlat
in
jecxz
mov
in
repz
jns
lcall
addr16
clc
push
movsl
ret
pop
mov
daa
popf
mov
imul
arpl
loope
jns
cwtl
dec
inc
xchg
adc
addl
movsl
inc
fxtract
jl
dec
cltd
lret
cli
mov
dec
push
gs
add
cwtl
dec
and
mov
mov
test
xor
mov
lret
jecxz
pop
cwtl
mov
js
repnz
xor
lds
push
adc
push
test
lret
mov
adc
push
inc
mov
fucomp
jae
sbb
push
clc
xchg
jne
das
push
sub
daa
test
std
int3
js
or
xchg
fcoml
filds
mov
insb
jp
mov
std
out
push
mov
js
nop
adc
aaa
cwtl
hlt
jl
pop
mov
and
push
cmp
mov
rcll
push
jae
cltd
cld
jae
fistps
jnp
cmp
std
gs
and
and
mov
aam
cwtl
test
cmpb
pop
mov
push
sub
test
cs
or
cmp
and
fisttpll
jae
nop
popa
mov
in
imul
aad
add
mov
jg
or
mov
mov
stc
repnz
sub
dec
jb
flds
jb
js
pop
and
mov
cmc
xor
insb
push
roll
jmp
pop
outsb
mov
pop
or
adc
xchg
stos
inc
jl
add
mov
sbb
fsubrs
jns
push
lahf
mov
lahf
pop
adc
mov
stc
ret
rcrb
mov
icebp
test
je
std
pushl
adc
cmpsl
adc
call
pop
loope
adc
and
test
xlat
fwait
cmp
popf
iret
es
cmp
ja
aaa
push
xor
jl
inc
push
or
push
inc
inc
mov
pop
pop
rol
mov
push
add
arpl
add
jecxz
int
rolb
divl
inc
mov
add
and
test
ret
and
mov
arpl
add
and
lods
fstps
sub
adc
cmpsl
adc
sbb
ret
mov
insb
aam
push
jge
fwait
bound
cmp
mov
inc
mov
push
int
pushf
cmp
icebp
sub
std
inc
and
jecxz
stc
cmp
pop
cwtl
push
stc
add
mov
std
mov
stc
and
push
jmpw
mov
lret
in
mov
mov
pop
mov
gs
mov
in
data16
jne
dec
inc
and
cmp
or
cmp
xchg
sub
xchg
xchg
cwtl
xchg
popa
mov
xor
cmp
and
mov
test
xor
mov
lret
jecxz
pop
cwtl
mov
js
repnz
xor
lds
push
adc
push
test
lret
mov
inc
sbb
lahf
pop
jle
fs
add
dec
sar
ret
xchg
jno
pop
sbb
sbb
inc
scas
xchg
stos
jge
cmp
or
pop
mov
sbb
add
roll
push
enter
lahf
jnp
and
and
in
andl
mov
mov
add
inc
inc
cmp
mov
out
aam
jno
pop
fistl
push
fidivrs
cli
shrd
cmp
pop
in
push
dec
sahf
jb
outsl
push
ret
push
and
mov
inc
adc
loopne
push
cmp
xchg
sub
add
out
ret
out
mov
xchg
pop
jle
arpl
xchg
shlb
loopne
mov
negl
jmp
icebp
sbb
and
lahf
lret
jecxz
inc
push
sbb
xchg
sub
xor
aad
pushf
addl
push
cwtl
shufps
jmp
dec
xor
jno
mov
sbb
decb
testl
xchg
pop
xor
in
pop
nop/reserved
mov
test
xchg
push
stos
lahf
imul
into
push
icebp
sarl
cmpsl
fstps
inc
pusha
push
dec
arpl
jg
and
mov
std
or
inc
pushf
pop
mov
jge
mov
je
mov
fs
fst
in
mov
mov
cmp
lods
push
je
xchg
xchg
inc
cltd
enter
mov
cmp
dec
cwtl
test
imul
sahf
dec
mov
icebp
pop
mov
adc
int3
jmp
cmp
ja,pt
sti
loopne
lret
inc
inc
mov
sti
hlt
movsl
roll
adc
cmp
std
dec
dec
or
cmp
ret
sub
push
jecxz
cli
xlat
push
pop
into
ficomps
lds
lcall
adc
lds
mov
inc
cmp
pop
sbb
shlb
xor
or
cmpl
lods
mov
xor
xchg
adc
test
add
inc
pusha
scas
fucomi
and
cmc
mov
icebp
cmc
test
fisubrs
aaa
xor
rclb
dec
shlb
stc
mov
xor
imul
stos
or
pop
jns
and
out
lods
cmp
pop
movsl
xor
fisubs
jnp
fdivs
lret
dec
inc
xor
in
je
dec
dec
lcall
and
ja
ret
lahf
pop
push
call
mov
dec
gs
inc
xor
jmp
clc
push
mov
imul
aad
lds
cmc
cld
repnz
popf
clc
cmpsb
fsubrl
int
sbb
pop
jp
imul
dec
dec
sbb
dec
pop
inc
test
mov
mov
les
loopne
insb
push
insl
fcoms
xchg
or
xchg
cmp
aad
jae
adc
mov
inc
sbb
mov
dec
cmp
int3
xchg
jge
iret
pop
push
test
out
lods
inc
icebp
sbbl
adcl
popl
test
mov
dec
and
repnz
aas
fwait
lret
in
mov
mov
cmp
lods
push
je
xchg
xchg
inc
cltd
enter
mov
cmp
dec
cwtl
test
imul
sahf
dec
mov
icebp
pop
mov
adc
int3
jmp
cmp
ja,pt
sti
loopne
lret
inc
inc
mov
sti
hlt
movsl
roll
adc
cmp
std
dec
dec
or
fists
mov
pushf
mov
xchg
outsl
clc
mov
ja
inc
std
stos
dec
in
pop
push
fbstp
sub
mov
dec
repz
sub
stc
jno
movhps
cs
shl
sbb
sbb
dec
pop
sub
lcall
movb
push
stc
jbe
lahf
mov
shl
cmp
adc
jl
aas
inc
fisubrs
aaa
xor
lds
out
xor
stc
out
or
sbb
xchg
xchg
faddl
cmpsl
inc
mov
out
adcl
fildl
pop
mov
adc
aam
aaa
es
je
dec
dec
lcall
and
ja
ret
lahf
jg
dec
call
mov
dec
gs
inc
xor
jmp
clc
push
ds
sbb
imul
aad
ja
repnz
sti
jo
cld
jg
cmp
inc
push
mov
cs
mov
cmp
pop
lcall
jne
pop
fildll
fs
scas
addr16
adc
jo
insb
push
cmp
xor
xor
int
push
ljmp
jl
fsts
mov
js
xchg
rorb
cld
mov
jle
cmp
pushf
jecxz
inc
shlb
or
cmp
or
inc
loope
or
fcomps
clc
decl
test
push
fdivrs
test
mov
jne
mov
cmp
mov
je
xchg
xchg
inc
cltd
enter
or
cmp
mov
sbb
cmp
cmpsl
cmp
jle
push
pop
stos
mov
das
push
xchg
sti
pop
testl
int
dec
lahf
lret
xor
xor
dec
movsb
jbe
adc
mov
adc
mov
mov
pop
pop
dec
mov
pop
ficoml
pop
mov
sbb
dec
dec
xor
fists
lahf
sbb
loopne
cmpsl
xchg
test
mov
les
or
shrb
mov
jmp
mov
pop
cwtl
fcoml
jbe
scas
fimuls
aad
jge
inc
xchg
sahf
cwtl
fists
sbb
push
pop
or
pop
sti
arpl
rolb
stos
adc
pop
inc
mov
fxch
enter
imul
pop
sahf
cmpsb
enter
mov
insl
jecxz
push
ret
mov
flds
mov
sub
loop
jne
dec
jg
iret
cmp
int3
xorl
mov
sbb
lods
cmp
sbb
lods
sbbl
ret
ljmp
mov
inc
sbb
aas
ljmp
push
adc
repnz
nop
clc
xor
shll
inc
lock
xchg
mov
mov
mov
stos
adc
sbb
lds
bound
sub
jno
cmpsb
push
testb
jl
xchg
adc
test
lret
fdivl
xchg
xchg
push
ja
add
cmpsl
es
add
xor
dec
fxam
mov
jb
pop
sbbb
xor
jp
mov
push
mov
pop
out
jg
ds
jge
int3
xlat
xchg
mov
loopne
je
or
lret
adc
insb
inc
adc
and
cmc
hlt
cwtl
imul
mov
or
jns
pop
mov
test
xor
mov
lret
jecxz
outsl
lret
scas
xorb
jne
jmp
sbb
aas
test
or
sbbb
mov
pop
sarb
aaa
mov
lods
outsl
jno
mov
sbb
dec
decl
jmp
dec
popf
lret
push
insb
push
test
ficoml
push
jp
xchg
or
shrb
mov
insl
push
mov
jb
mov
pop
mov
add
mov
bound
xchg
adc
sbb
aam
andl
inc
aam
fmuls
sub
adc
js
mov
aaa
mov
xchg
fiadds
cmpsb
fimull
push
jne
insl
cmovae
mov
push
push
out
cmp
mov
test
inc
sub
cwtl
pop
inc
cmp
cmpsl
mov
test
mov
sbb
lods
mov
lods
sbbl
ret
ljmp
fildl
xor
mov
mov
repnz
jno
dec
call
out
sub
into
xorb
mov
and
cmpsl
lds
lcall
push
sbb
dec
push
lret
shr
cmp
insl
mov
jae
dec
inc
cmp
and
aam
add
pop
ret
lcall
or
shrb
movsl
cmp
sbb
jmp
fcoms
or
inc
neg
and
lock
inc
andl
out
std
add
xchg
int
ds
jno
jmp
and
mov
pop
push
lahf
insl
sbb
fucomi
hlt
std
mov
sti
and
and
jecxz
movsl
inc
loope
jl
ret
aaa
mov
sbb
push
cwtl
cmpb
xor
lods
movsb
repz
ret
mov
test
jmp
or
in
imul
jg
adc
rdpmc
add
mov
pop
xchg
cli
in
movsl
ret
insb
cmp
cmp
test
test
inc
sub
and
or
mov
xchg
xchg
lds
pop
pop
mov
popa
pop
mov
inc
scas
ja
add
stos
and
mov
clc
sbb
lods
push
sub
mov
inc
pusha
push
hlt
fucom
mov
lahf
arpl
mov
pop
sti
adc
pop
xchg
sahf
add
mov
adc
es
hlt
jle
out
push
push
lods
out
xor
push
jne
insl
out
rcrl
mov
sub
call
dec
add
inc
sub
or
sub
dec
daa
adc
adc
ret
pop
xor
test
ss
mov
pop
add
dec
or
jno
mov
dec
clc
add
mov
jo
in
ja
inc
sbb
inc
dec
or
add
pop
sub
cltd
fsubrl
lret
mov
xchg
test
int
dec
xor
jmp
pop
or
pushf
cmp
movsl
pusha
insl
pop
decl
mov
lock
mov
xchg
adc
push
leave
in
push
mov
inc
push
ficomps
jle
xor
xlat
std
loop
xchg
je
divl
inc
sbb
leave
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
lods
fstps
call
fwait
mov
stos
xchg
out
mov
xchg
push
movsb
pop
mov
xchg
int
das
jb
ret
push
insl
xor
sahf
push
sub
mov
pushf
movsl
repz
push
add
pop
add
inc
icebp
nop
jmp
dec
repz
push
mov
pop
and
test
xchg
cld
lods
sbb
mov
mov
aam
test
cmpsb
arpl
insb
sub
les
jge
sbb
add
xor
stos
inc
sbb
fcoms
cmp
cltd
adc
daa
sub
add
pop
inc
sub
add
or
je
jns
roll
add
cltd
cmpsl
pop
je
jge
push
dec
js
xchg
jg
adc
enter
mov
subl
ljmp
mov
xchg
sub
fwait
cmp
enter
mov
pop
imul
shlb
negb
sbb
enter
sbb
int
xchg
inc
inc
mov
jbe
add
loope
xchg
xor
sub
js
test
xor
sbb
push
movsb
repz
ret
mov
test
clc
int3
mov
mov
sub
mov
xlat
mov
lods
pop
mov
adc
mov
dec
xor
dec
popf
lods
pushf
push
test
lret
sbb
ror
sbb
pop
and
pop
add
inc
jno
fbstp
dec
icebp
lahf
shl
shrl
sbb
in
sbb
or
pop
sub
gs
sub
stos
aad
fldl
gs
sbb
mov
xchg
cmp
repz
inc
sti
and
mov
or
xor
test
sbbb
or
or
test
mov
popf
push
mov
jno
inc
and
jecxz
cmp
mov
sti
and
adc
or
int
imul
test
or
into
pop
stos
shrl
push
mov
lods
mov
jns
aas
in
test
mov
adc
add
sbbl
les
xor
cltd
sub
sbb
jno
xlat
pop
sbb
test
imulb
and
fucomp
jae
cs
pop
cli
jmpw
repnz
movsl
xchg
cmc
lods
outsb
push
mov
mov
pop
arpl
or
dec
mov
jle
cltd
jb
cmp
inc
adc
out
fdiv
icebp
sbb
shl
jo
sarb
loopne
cmp
cmp
or
inc
in
or
fcomps
cld
pushl
test
arpl
pop
cmpsb
test
xchg
aam
ds
cmpsl
ret
flds
mov
mov
xchg
fsubrp
jns
sbb
mov
insb
aaa
sbb
push
sbb
jne
shr
adc
cmp
lret
adc
adc
sbb
or
loopne
cmp
cmp
call
and
mov
sbb
cmp
dec
dec
inc
aas
adc
sub
pushf
test
sub
adc
jmp
push
jnp
fsts
mov
adc
xor
and
stc
inc
fcmovne
pop
add
cmpsl
jno
inc
push
sbb
sub
shrb
lret
pop
rcl
mov
cmpsb
xor
jb
loopne
sbb
and
sbbb
jg
mov
mov
into
scas
je
mov
xor
pop
sub
iret
inc
mov
out
add
out
mov
clc
or
enter
out
xchg
imul
mov
mov
lahf
xchg
lods
mov
pushl
out
jne
xor
fcompl
rclb
rorb
cmpl
dec
ja
ret
sbb
or
mov
sbb
mov
jmp
xor
jo
test
xchg
enter
jo
pop
dec
or
add
and
xor
dec
loope
fsubrl
mov
and
lods
pop
pop
mov
sbb
or
pushf
inc
bnd
dec
gs
lret
imul
lcall
pop
lods
pop
cmpsl
sub
aaa
call
scas
fildl
repz
pop
stc
dec
xchg
jle
cmpsl
imul
sbb
xchg
sbb
mov
fucomp
mov
xchg
in
jbe
push
inc
fstpl
pusha
lret
stos
call
xchg
push
lods
std
bound
mov
icebp
mov
push
dec
mov
jne
lret
dec
daa
adc
jecxz
rcrb
gs
xchg
lds
jmp
test
fisttpll
cmp
pop
sub
xchg
lock
js
cmp
and
dec
mov
xchg
sub
xchg
mov
les
test
pop
and
sub
and
bound
dec
arpl
mov
int
cs
mov
push
push
movsl
adc
sbb
rcl
lcall
jbe
cmp
jecxz
push
cmp
cld
or
repnz
add
popa
adc
scas
xlat
in
pop
inc
loop
scas
out
rorl
pop
iret
out
jg
cmp
push
xchg
in
jbe
fidivl
ds
icebp
xabort
clc
lea
testb
je
mov
push
sbbl
arpl
fdivp
or
mov
mov
addl
sti
lds
iret
fucomip
and
mov
inc
jge
test
aaa
mov
pop
dec
jo
sub
add
sbbb
pop
adcl
cli
sub
stos
push
and
mov
pop
sub
lcall
dec
push
pushf
cmp
jbe
movsl
setns
push
sub
cli
nop
lret
or
dec
cmpsl
push
scas
cwtl
fwait
gs
lds
adc
jns
push
mov
mov
push
or
mov
xchg
adc
fsub
and
shlb
sub
fbstp
out
push
push
lods
sub
movsl
cli
jae
mov
aas
sti
sti
and
adc
or
std
fisubrs
sub
insl
sub
adc
call
or
ret
arpl
fists
lcall
stc
add
xor
mov
mov
add
and
cwtl
xor
notl
pop
pushf
js
lods
push
dec
outsl
pop
mov
mov
rcrb
fistpl
test
lock
adc
ja
and
jnp
push
push
enter
stos
inc
loop
and
test
dec
push
cltd
sbb
lahf
jnp
cmp
and
es
into
xor
pusha
insl
loop
sarb
loopne
sub
andl
std
paddq
pop
sbb
or
pushf
cld
cmpsb
push
fildll
dec
pop
sbb
mov
ret
mov
mov
mov
jecxz
fdivs
orb
inc
mov
das
cwtl
lea
xchg
dec
push
inc
test
cmc
mov
pop
das
or
sub
xchg
es
movsl
fsubr
addb
mov
or
add
or
push
mov
sbb
aas
mov
adc
dec
and
rorb
sbb
test
sub
cwtl
mov
lret
sub
or
je
cmp
outsb
push
int3
ss
mov
xor
mov
mov
dec
fs
pop
negl
sbb
hlt
jbe
xor
cld
jl
and
push
bnd
adc
mov
push
or
pop
push
inc
pop
sub
jo
jmp
out
xchg
adc
aas
mov
out
test
in
adcl
sbb
push
lcall
prefetch
or
out
adc
dec
adcb
pop
xor
adc
or
adc
insb
inc
mov
dec
fcoml
aaa
adc
mov
adc
inc
mov
or
sti
mov
hlt
mov
ror
add
add
jp
xor
mov
lret
movsl
aam
adc
and
mov
lods
and
test
sub
jmp
mov
in
push
jl
or
push
outsb
push
fdivl
push
add
pop
inc
sub
ja
xorl
cmpsl
sbb
pushf
ficompl
cltd
ret
jge
inc
dec
js
xchg
jg
inc
adc
leave
and
jl
in
mov
mov
in
getsec
xchg
int
sub
cmp
mov
inc
pop
test
lods
in
pop
mov
lahf
cmc
popf
jecxz
call
pop
mov
sbb
xor
movsl
inc
pop
or
int
imul
mov
data16
jae,pt
shr
repz
cmp
ds
loop
or
cwtl
in
and
mov
pop
mov
pop
sub
add
push
cmp
jge
pop
ret
adc
cmp
xor
pop
dec
mov
lods
inc
aad
add
ljmp
xor
fsubrl
movsb
push
dec
pop
rcrl
ss
mov
stos
subb
notb
cmp
push
popf
fnstsw
lods
sbb
push
mov
shlb
loopne
ja
mov
xchg
and
or
idivl
or
dec
test
daa
inc
sub
jne
pop
fxtract
or
out
push
je
xlat
insb
sub
divb
test
add
cmp
imul
cmc
js
iret
sbb
int
aam
inc
sub
mov
adc
inc
repnz
adc
or
jno
pop
pop
xor
xor
inc
inc
mov
cmp
add
iret
xor
jno
mov
clc
aam
pop
dec
push
xor
push
lock
clc
jg
inc
jmp
nop
cmp
gs
ret
adc
lret
mov
lret
loop
loope
sbb
sbb
rcrl
cmp
insl
mov
lock
call
and
popf
mulb
scas
dec
iret
sbb
cmp
xchg
cmp
sbb
scas
popa
rcr
jmp
leave
loop
pop
popl
movsb
in
push
stos
idivb
inc
outsl
idiv
sub
pop
jecxz
jg
pop
mov
dec
sub
lods
mov
pushf
pop
lods
xlat
xchg
mov
mov
pop
cmp
cmp
cmp
dec
sti
je
jp
aaa
sbb
or
hlt
jl
sub
enter
inc
dec
and
mov
cs
or
push
cmp
pop
mov
pop
mov
push
pop
add
iret
fwait
mov
pop
mov
sub
pop
dec
dec
inc
pop
cmp
mov
and
cmp
xor
fistpll
les
sti
dec
sbb
pop
and
jmp
xchg
bound
jno
mov
outsb
push
mov
push
add
loop
test
lret
out
pop
scas
aam
xor
dec
data16
mov
cmp
cmp
jmp
mov
xchg
mov
mov
add
rcl
adc
xlat
ljmp
icebp
mov
lret
in
mov
mov
cmp
sub
je
xchg
xchg
inc
cltd
enter
mov
cmp
dec
cwtl
test
imul
popa
push
sub
mov
sub
fidivl
mov
je
and
mov
push
add
push
sbbb
dec
rclb
adc
jmp
mov
mov
dec
and
xor
dec
jno
pop
repnz
popf
adc
jb
jns
and
mov
sbb
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
cmp
xchg
push
add
mov
outsl
lods
cmp
fisubrl
test
sub
jno
xor
mov
sbb
in
cmp
fstpl
outsb
js
movsl
mov
jns
clc
mov
sub
add
es
mov
sbb
stos
mov
inc
xor
scas
jae
push
inc
adc
pop
mov
jo
cmp
dec
jns
fwait
psubw
push
shlb
enter
xchg
pop
hlt
jl
fwait
add
and
jo
and
jns
jne
cwtl
addr16
idivl
mov
pop
and
mov
pop
jno
repnz
lahf
sub
add
cmp
rcrl
push
and
fs
movsl
mov
sarb
aaa
xorb
sub
insb
push
cli
lcall
aad
jae
sub
lcall
sub
mov
imul
cmp
outsl
cmp
push
test
sbbb
in
adcb
int3
cmp
mov
cmp
icebp
jmp
pop
mov
addl
decl
sbbl
int
je
or
les
je
enter
test
ja
imul
pop
mov
ljmp
xchg
xchg
inc
cltd
enter
mov
fnstcw
or
jp
mov
xor
dec
arpl
mov
int
jle
fsubr
mov
mov
sbb
imull
inc
inc
sbb
mov
loopne
pop
pop
rol
icebp
jno
or
add
rcll
pop
sub
roll
fcomps
je
cmp
ss
pop
mov
lret
mov
and
pop
nop
xor
pop
stos
adc
cli
mov
xor
pop
in
mov
lret
fucomp
jae
sbb
arpl
sub
xchg
test
int3
ret
or
ja
aad
pop
mov
mov
mov
mov
fbld
dec
and
cwtl
clc
xor
mov
push
dec
xchg
jmp
movsb
cmpl
mov
lret
sbb
jg
inc
rclb
cmp
sub
inc
sub
rcll
add
mov
xchg
data16
sbb
dec
inc
jmp
pop
test
mov
push
jp
out
mov
jne
or
push
mov
das
or
pop
or
call
pop
mov
insl
cmp
and
inc
ja
fcomi
jne
sbb
aaa
add
cmp
adcl
sub
sub
fsubrl
adc
xchg
insl
mov
or
sbb
sbb
jo
sub
add
ljmp
xor
int3
push
daa
mov
imul
xchg
jecxz
ss
outsl
mov
stos
mov
in
xchg
lds
dec
mov
imul
sbb
movsb
push
sub
mov
mov
dec
xchg
inc
push
xor
adc
mov
mov
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
mov
loopne
fdivrs
insl
pusha
dec
jno
es
xlat
dec
sahf
outsl
push
iret
mov
pop
adc
test
sbb
fisttps
cmp
out
ret
gs
mov
repnz
and
mov
test
add
lods
ja
fninit
test
sbb
pop
sub
mov
test
jnp
jp
fisttpll
scas
sub
sbb
push
repnz
push
in
dec
decb
test
jnp
jge
push
stc
es
cmp
add
nop
fiadds
add
ret
mov
xchg
adc
lock
cmpsl
adc
into
sbb
fcomps
pop
mov
dec
aad
fisttpl
mov
mov
sahf
fists
jle
arpl
shlb
pop
inc
aam
clc
or
adc
jbe
dec
fsubrs
sbb
mov
cmp
xor
addb
or
inc
mov
imul
aad
xchg
mov
mov
push
adc
aam
ret
sub
sbb
push
add
cwtl
dec
and
mov
mov
test
add
int
sbb
out
mov
lock
sbb
cmp
mov
sub
pushf
ret
pop
pop
dec
test
jno
pop
and
push
pop
sbb
test
in
lds
sbb
mov
iret
cli
rolb
cld
daa
repz
orl
test
xchg
daa
sub
push
mov
adc
imul
rolb
push
mov
sahf
xchg
frstor
call
ret
dec
repnz
add
int3
inc
cmp
rclb
test
adc
movsb
fcoms
test
jne
fidivl
jge
jl
int3
cltd
enter
in
stos
int3
std
jae
test
pop
repnz
push
adc
sbbb
iret
mov
sbb
negl
adc
and
xchg
lea
clc
movsl
pop
call
dec
lds
rcr
pop
inc
adc
adc
fcom
mov
cmp
pop
pop
outsb
xor
arpl
dec
xor
jne
push
and
sub
pop
pop
dec
jns
pop
lods
mov
cmp
xchg
jbe
dec
data16
stos
in
xchg
push
imul
sub
les
inc
movsb
push
mov
xor
cmp
sub
mov
sub
xchg
pop
xchg
out
sub
sbb
mov
fwait
push
dec
mov
xor
dec
out
scas
addr16
xchg
mov
mov
in
daa
test
mov
movsl
add
xchg
ds
call
pop
xlat
enter
push
or
aam
cmp
aam
call
adc
jne
shrb
out
aad
mov
and
dec
stos
shr
mov
sub
pop
mov
es
inc
mov
pop
add
xchg
pusha
xor
mov
inc
sbb
inc
sub
add
rcrl
pop
push
mov
and
iret
xor
adc
imul
sahf
sbb
dec
push
dec
sub
test
xchg
mov
jo
xchg
nop
mov
jecxz
inc
sbb
xchg
aad
sub
push
rcll
les
std
mov
aam
leave
in
js
xchg
ja
xor
mov
roll
cmp
fwait
lret
or
int3
push
or
aas
xor
sbb
mov
pop
ds
insb
and
inc
jnp
inc
push
mov
or
lods
push
sub
movsl
cli
pop
scas
fmul
pop
fwait
daa
pop
jae
std
jge
jb
mov
sbb
add
inc
repz
mov
or
dec
mov
es
lcall
fisubrl
and
mov
ds
add
in
lahf
in
pop
pandn
sub
pop
adc
pop
adc
inc
ret
xchg
cmp
js
popf
mov
fsubrl
pop
int
sbb
rcrb
sbb
test
sti
test
js
cld
lods
repnz
fsts
mov
scas
pusha
in
xchg
or
fistps
cmp
mov
cmp
les
cld
xor
hlt
add
lcall
jb
push
test
pop
test
sbb
in
jbe
pusha
mov
mov
push
ljmp
ja
je
cli
bndldx
add
jb
xchg
xchg
sub
and
push
mov
mov
lods
popaw
mov
jmp
cmpsl
ret
inc
imul
outsb
aaa
popf
mov
js
insb
aaa
es
mov
mov
inc
xor
dec
mov
ret
lret
roll
pop
mov
cld
or
mov
inc
test
pop
ret
popf
xchg
push
cmp
bound
movsb
cmpsl
jecxz
adc
adcl
fnsave
mov
sbb
test
clc
push
lods
push
push
int3
mov
xor
cmp
xchg
clc
xor
inc
sub
pusha
bound
push
cld
fcoml
test
push
pop
repz
dec
fs
data16
push
in
shl
in
and
xchg
mov
inc
fimuls
out
aam
jl
clc
sub
mov
fwait
push
dec
mov
xor
dec
aam
fnstenv
adc
scas
push
lods
sub
push
push
lods
xor
es
in
lea
cmpsb
in
dec
ror
mov
rclb
inc
pushf
mov
cmpsb
dec
imul
jecxz
mov
push
outsb
scas
shr
cmp
mov
stc
lret
call
outsl
repz
pop
sbb
mov
fiadds
xorb
mov
fadd
xor
in
and
aaa
jmp
sbb
mov
popf
dec
fldenv
insl
cli
mov
xchg
in
or
in
jbe
repz
push
stos
lds
xchg
out
leave
sub
cmpsb
pop
test
sbb
lahf
xchg
cld
push
lret
pushf
xor
fcomip
pop
pop
js
stos
adcb
idivb
sbb
repz
decl
mov
out
out
mov
sbb
adc
cld
or
xchg
mov
cld
adc
movsl
outsb
scas
jmp
lret
xor
mov
sbb
mov
into
jecxz
or
pop
dec
push
ret
sub
das
inc
imul
fyl2x
xchg
shl
pop
adc
call
pop
repnz
loopne
pop
daa
dec
mov
ret
mov
mov
jo
or
or
mov
adc
popa
push
mov
dec
pop
aaa
mov
lds
jmp
cmp
push
fs
sub
cmc
sbb
mov
bound
sbb
insl
lret
jge
aaa
mov
push
mov
jl
mov
lcall
pop
icebp
pop
leave
sub
inc
mov
and
fcmovnu
push
stc
push
aas
xor
jmp
sub
std
cmp
xchg
xchg
aas
pop
test
dec
mov
xchg
test
xchg
mov
fdivrs
fistps
xchg
sbb
in
or
vpsrlq
add
xor
dec
leave
sbb
mov
lcall
inc
mov
dec
mov
lret
inc
inc
xor
jae
call
pushl
lret
pop
aas
adc
pop
cmp
lock
cmpsl
sbb
aaa
pop
lret
sbb
jmp
cld
push
mov
ret
movsl
mov
rcrb
sub
clc
pop
lods
push
push
in
lds
clc
jns
pop
sbb
cltd
in
iret
add
push
pushf
fisubrl
jno
test
shrb
fcoml
push
arpl
push
lret
insw
mov
test
lods
inc
inc
mov
mov
jmp
repnz
sbb
leave
loop
inc
scas
ds
cmpsl
push
or
nop
or
inc
cmp
cmp
pop
and
adcl
jo
inc
jle
sbb
jb
std
mov
sti
and
adc
dec
push
or
int
imul
test
or
into
pop
stos
shll
mov
mov
adc
movsl
mull
mov
jmp
fwait
lret
movsl
sarl
popf
cmp
sbbl
popf
sahf
lret
xor
leave
inc
add
arpl
les
xchg
xor
sahf
jge
sub
std
inc
in
jae
sbb
pop
add
inc
cld
jo
test
jo
push
fsub
sub
stc
dec
cmpsl
push
ja
pop
gs
fnstcw
push
cmp
lods
inc
inc
lahf
inc
lahf
inc
pusha
movsl
pop
mov
and
cmp
mov
mov
mov
std
add
jle
dec
dec
or
fmul
repnz
repz
lods
xlat
insb
jbe
inc
dec
mov
mov
sub
pop
gs
push
and
mov
inc
adc
loopne
push
cmp
xchg
sub
xchg
jmp
mov
dec
mov
aam
mov
mov
xor
mov
dec
jae
mov
cli
push
jns
and
cs
dec
popa
sahf
dec
mov
cmc
adc
mov
pop
xor
lcall
test
scas
inc
in
dec
mov
and
add
adc
sub
mov
shlb
push
sbb
cmp
jl
adc
cltd
add
sahf
inc
lcall
mov
cmpsb
sahf
xor
ret
mov
fmull
sbb
js
sarb
rcrb
iret
and
adc
and
mov
scas
push
jmp
lods
inc
gs
imul
es
pop
fidivrs
xor
out
hlt
dec
das
jnp
es
dec
pop
scas
int3
shr
and
dec
mov
aad
dec
mov
nop
mov
fucomi
xchg
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
mov
mov
mov
and
cmpsl
mov
nop
pop
cmp
imul
dec
mov
pop
push
test
test
inc
or
cld
mov
negl
mov
push
pop
mov
icebp
or
pop
sub
push
push
out
cltd
daa
cmp
mov
add
scas
mov
cmpsb
sahf
xor
ret
mov
fmull
sbb
insl
xor
cmpsl
push
cwtl
aam
xorl
rcr
mov
mov
pop
mov
pop
mov
aam
mov
stos
mov
std
xor
xor
mov
push
or
jge
movsb
popf
test
mov
lcall
sbb
mov
jmp
xor
mov
cmp
jp
add
fwait
dec
sbb
add
push
pushf
mov
pop
js
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
adc
mov
sbb
push
dec
xor
stc
cmp
in
cmc
test
mov
outsb
push
mov
das
xchg
pop
adc
jbe
movsb
sub
pop
push
sbbb
jmp
lcall
sbb
push
in
aad
jbe
fwait
leave
cmc
cmp
pop
sub
or
arpl
dec
mov
mov
inc
cwtl
dec
and
mov
fcomp
mov
scas
lcall
cmpsl
ret
xchg
fnstsw
cmp
mov
add
je
xchg
enter
cwtl
cmp
insb
cmp
mov
fsubr
mov
sbb
call
sub
or
int
cmp
push
iret
fucomip
repz
mov
cwtl
roll
or
jl
lock
inc
aas
sub
or
mov
cmpb
push
divb
nop
xlat
dec
sub
and
lds
mov
das
pop
cmp
out
push
cld
sub
mov
out
cmpsl
mov
or
cmp
adc
lock
mov
mov
fwait
lods
jle
pop
sub
loop
xchg
jle
dec
and
or
push
jmp
and
or
jo
aam
cmp
or
add
push
mov
sbb
cmp
xchg
jbe
mov
push
xlat
pop
es
cmp
jb
mov
and
mov
int3
es
repnz
adc
imul
int
imul
fisubrs
pop
fistpll
loope
pop
inc
int3
rclb
popa
cmp
add
ffreep
jns
aas
mov
imul
xor
adc
test
add
push
xor
xor
push
aaa
mov
cli
jns
lds
nop
test
lret
loop
pop
pop
jge
mov
fldt
loopne
xor
insl
adc
xchg
cltd
or
fisubrl
cmp
push
stos
popf
lock
mov
add
int3
fistps
fsubr
jecxz
sahf
jmp
mov
in
mov
pop
inc
fs
aas
cmpsl
mov
addl
lea
pop
ds
and
pop
outsb
test
in
call
popf
inc
dec
push
mov
sbb
orl
mov
jmp
std
mov
sti
and
sbb
or
int
imul
test
or
into
pop
stos
shll
lods
inc
mov
sub
pop
mov
sbb
inc
pop
sbb
ret
mov
pop
dec
mov
pop
cli
or
mov
mov
int3
addr16
ret
xchg
ds
outsl
mov
mov
push
push
dec
push
psrad
fiadds
stc
inc
pop
aaa
mov
xchg
cld
stc
push
movsl
pop
cltd
sbb
outsb
push
cmp
mov
or
and
hlt
and
int
pushf
push
pop
test
adc
jp
lahf
or
in
bnd
xor
and
into
loop
addl
jge
adc
das
xchg
int
dec
add
cmp
mov
ret
xorb
loopne
or
insb
xor
bound
fdivrs
enter
insb
aaa
rclb
sub
cmpl
dec
or
lahf
cmp
in
sarb
sub
fiaddl
adc
cmp
and
and
jae
mov
sub
cmp
mov
sub
pushf
ss
xchg
mov
dec
pushf
dec
and
pop
nop
and
pop
stos
adc
cli
mov
xor
pop
in
mov
lret
fucomp
jae
sbb
imul
xchg
sbb
pushf
mov
fsubrl
sbb
idivb
push
mov
fstpl
pop
pop
push
mov
lods
jle
sbb
sahf
mov
and
js
cmp
add
mov
test
adc
xor
out
ds
fdivr
add
dec
je
pop
cmp
xchg
jp
or
push
call
push
insl
in
xchg
adc
call
sbb
and
sbb
or
xlat
pop
jns
fdivs
mov
mov
imul
mov
das
push
xchg
addl
and
mov
insb
mov
jecxz
enter
je
pop
dec
mov
aas
mov
sbb
dec
movsl
mov
stos
pop
ficoml
add
test
addr16
dec
xor
adc
jbe
popf
lret
mov
sbb
pop
or
xchg
cmp
sub
dec
mov
ljmp
xor
xor
cwtl
in
xor
test
and
mov
or
lock
cwtl
xor
lret
xchg
fildll
mov
lods
push
jmp
xchg
hlt
jo
xor
jae
int
loope
cmpsl
ret
fincstp
clc
les
mov
addr16
sbb
sbb
mov
dec
sub
jp
fidivl
or
mov
inc
stos
mov
pop
push
test
mov
xorl
mov
lods
test
repz
push
pop
add
add
adc
jecxz
sbb
xor
xchg
cmpsb
mov
add
push
sub
aaa
adc
mov
lcall
ds
imull
test
decl
xchg
fsubr
jp
fmulp
insl
test
cmp
negl
inc
gs
fnsave
push
cmp
mov
in
jne
push
cmp
and
pop
popf
scas
stc
repz
mov
jl
cmpsb
add
add
adc
repnz
add
mov
or
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
xor
fld1
xor
cmpsb
jo
mov
popf
stos
int
pop
sub
mov
stos
or
mov
sbb
enter
dec
mov
xor
mov
mov
inc
inc
mov
sahf
cmp
mov
or
add
iret
xchg
cmp
xor
cltd
je
inc
add
into
mov
fdivl
fs
aas
mov
xchg
jl
dec
mov
test
sub
dec
ss
pop
pop
add
adc
cmp
bound
cwtl
adc
sub
xchg
add
sbb
cltd
addr16
mov
add
scas
mov
cmpsb
sahf
xor
ret
mov
fmull
sbb
insl
xor
cmpsl
push
cwtl
aam
xorl
rcr
mov
mov
pop
mov
pop
mov
aam
mov
stos
mov
mov
mov
mov
mov
push
or
jge
movsb
popf
test
mov
lcall
sbb
mov
jmp
xor
mov
cmp
jp
add
lahf
dec
sbb
add
push
pushf
mov
pop
js
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
adc
mov
sbb
push
dec
xor
stc
cmp
in
cmc
test
mov
outsb
push
mov
das
xchg
pop
adc
jbe
movsb
sub
pop
push
sbbb
jmp
lcall
sbb
push
in
aad
jbe
fwait
leave
cmc
cmp
pop
sub
or
arpl
dec
mov
pushf
fwait
xor
inc
fcomps
xchg
es
mov
push
push
cwtl
imul
int
cmpsl
add
out
sub
dec
pop
cltd
enter
mov
sbb
add
mov
stc
movsb
dec
dec
mov
sbb
inc
sbb
loopne
jne
jnp
lods
repnz
adc
lods
popl
divb
shrb
xchg
mov
mov
loopne
xchg
sbbb
sbbl
or
out
mov
and
pop
dec
sbb
in
dec
mov
in
push
in
int
les
iret
sbb
rcr
cmp
invd
pop
les
add
cltd
sub
lret
loope
mov
imul
cltd
loope
mov
adc
lahf
scas
negl
repz
pop
sbb
sub
sbb
adc
shlb
dec
mov
dec
cmc
push
push
fisubl
xchg
mov
lahf
int3
test
gs
jmp
inc
lret
pusha
xchg
xor
pop
daa
jb
sahf
push
adc
pop
xchg
sub
lods
fadds
cmpsl
inc
xor
rcll
fistps
add
les
cmp
clc
ds
aas
shll
lock
push
test
add
lods
inc
adc
xchg
add
js
cltd
lret
movsl
ret
sbb
fs
sbb
stos
test
push
cld
xor
movsb
sbb
test
in
scas
cmp
pop
lcall
cmpsb
pop
sub
mov
push
push
cli
cmpsl
push
push
push
mov
fs
jle
or
pop
cmp
lahf
xchg
movsl
xchg
jmp
push
fs
aas
cmpsl
push
sbb
cld
jle
js
pop
pushl
dec
inc
test
out
jp
add
mov
cld
cmp
insb
jbe
mov
jmp
stos
cmp
jp
das
outsl
or
cmpsl
shlb
mov
call
mov
sub
adc
xor
push
daa
adc
push
repz
xor
ss
mov
bsf
xor
stos
aas
jno
daa
pusha
jnp
std
jmp
jae
mov
add
jmp
int
add
in
and
ret
sbb
ljmp
lret
test
inc
sub
ficoml
push
pop
mov
insb
push
jl
lret
pop
repz
jge
gs
cmp
push
std
mov
pop
scas
dec
stc
sbb
jecxz
cwtl
push
mov
shlb
jno
in
jg
mov
fs
cmp
xlat
in
orl
mov
lock
jns
sti
iret
out
out
outsl
mov
fwait
push
mov
cmp
in
jbe
cli
mov
mov
or
cmp
out
int3
iret
push
adc
adcb
jecxz
jl
xchg
push
repnz
adc
or
pop
mov
sub
aaa
cmp
xchg
stc
jo
pop
cmp
in
push
dec
lods
imul
mov
mov
xor
aad
pushf
addl
bound
cwtl
sub
test
adc
push
jne
mov
pop
stos
fsubr
mov
movsb
test
fildll
shlb
jno
orb
lock
push
add
ret
roll
cltd
adc
daa
or
sub
dec
dec
sub
outsl
sarb
imull
push
mov
aad
mov
in
enter
jbe
out
js
inc
shlb
js
ljmp
rcrb
sub
xor
and
inc
push
fdivs
sub
shl
xor
cmpsl
ret
xchg
std
and
xchg
mov
pop
enter
daa
enter
inc
mov
mov
aam
dec
nop
xchg
movsl
inc
adc
fisubrs
fsubrs
ljmp
cltd
mov
popf
test
call
aas
push
repz
add
push
mov
sbb
gs
mov
pop
stos
add
cmp
adc
popf
dec
xchg
fsubrl
pop
leave
movl
sbb
mov
adc
cli
and
iret
pop
sbb
hlt
xor
adc
dec
mov
push
je
stos
insb
push
cmp
pop
mov
push
lret
jge
push
cmp
push
sub
sbb
mov
scas
pop
stc
sbb
jbe
sti
test
jns
jo
and
stc
addb
jle
inc
fs
xor
pop
sub
orl
adc
jmp
cmp
jp
inc
les
out
push
push
lods
movsl
xor
ja
dec
lahf
xchg
scas
out
call
out
mov
imul
out
mov
es
mov
sub
sub
pushf
jnp
push
xchg
lret
ret
pop
mov
sub
ss
xchg
sub
pop
add
iret
xchg
cmp
movq
inc
mov
in
fidivl
add
xchg
or
sub
and
dec
mov
pop
fisubrl
push
test
lods
push
dec
shlb
pop
xor
xchg
mov
pop
fnsetpm(287
stc
jl
divb
movsl
orl
jnp
lds
jg
movsl
push
push
inc
lcall
cmp
lahf
stc
sub
push
arpl
rorb
xchg
loop
dec
lret
std
cli
jnp
inc
mov
sahf
inc
sbbl
push
daa
out
or
push
xchg
dec
mov
lahf
adc
cmp
fidivl
dec
push
lods
test
cmp
std
bound
out
and
mov
cmp
or
dec
push
or
fiadds
in
adc
inc
cmc
mov
push
fldl
add
lea
or
jge
in
outsb
out
aad
jge
pop
dec
aaa
add
cmp
adcl
or
xor
sbbb
push
sarb
xor
dec
and
mov
leave
test
int3
xor
adc
xchg
repz
sbb
pop
sub
xchg
xchg
mov
out
or
cmp
pop
stos
jns
pop
pop
scas
dec
fs
jle
jp
loope
cltd
lods
inc
sbb
jl
adc
adc
leave
repnz
scas
aaa
mov
cli
jnp
inc
mov
mov
inc
sarb
jne
jbe
mov
push
rcll
push
stc
imul
out
mov
movsl
popa
pop
fidivrs
gs
inc
adc
and
mov
test
pop
bound
ret
jmp
mov
push
call
push
mov
mov
sti
mov
xchg
mov
mov
adc
jbe
adc
cmpsl
inc
sbb
nop
aas
lret
mov
mov
or
test
jo
sbb
leave
js
mov
cld
std
lods
lods
mov
popf
les
jl
dec
test
mov
and
add
sub
mov
add
loope
movsl
fstl
jl
dec
nop
jnp
xor
icebp
push
xor
jge
cwtl
insb
xchg
cwtl
call
nop
addb
mov
or
jnp
inc
push
mov
or
test
sub
sub
test
jmp
cmpsb
sti
cmc
jns
iret
sbb
dec
pop
sub
mov
hlt
or
jmp
gs
shr
call
dec
cmp
dec
adc
pop
xor
and
cmpsl
aam
sbb
or
decb
pusha
xor
icebp
mov
in
ja
outsl
sbb
xchg
sar
dec
cmpsl
mov
sub
cmpsl
clc
popa
push
mov
xor
lods
push
sub
pushf
or
fwait
pop
and
xchg
mov
mov
je
xchg
insb
push
cmp
and
pushf
jns
jge
imul
into
rolb
add
cld
jp
add
pop
enter
cltd
ret
jge
leave
xchg
adc
mov
pop
stc
arpl
dec
push
sbb
mov
daa
inc
cwtl
clc
dec
aam
stc
lret
pop
xchg
jmp
xchg
mov
pop
cmpsb
fmul
aaa
mov
mov
call
or
cmpsl
shrl
mov
je
test
mov
mov
dec
push
and
cmp
fisubrs
push
sbb
ret
js
test
xor
sbb
pop
movsb
repz
ret
mov
fbld
add
jmp
stos
shrb
inc
mov
mov
pushf
sti
mov
mov
aaa
leave
adc
cmpb
push
xor
arpl
mov
call
mov
in
scas
mov
ffree
pop
mov
dec
repz
fidivl
lea
push
pop
cmp
fdiv
jge
and
fucomp
les
lock
mov
sbb
pop
jmp
dec
popfw
pop
sbb
lahf
jp
cs
loop
jle
mov
cwtl
push
mov
andl
rcrl
dec
orb
je
test
int3
xor
cmp
xchg
adc
lahf
pop
xchg
ds
mov
in
inc
mov
mov
test
pushf
push
or
js
cld
or
out
mov
cmp
or
fimuls
cmpsl
jbe
fwait
ret
xchg
jnp
pop
sbb
repz
push
stc
iret
fwait
pop
in
sub
repz
dec
cmp
jo
pop
add
dec
push
sbb
fsubrl
cwtl
jae,pt
popf
pop
adcl
test
stos
mov
lods
jae
cli
add
repz
test
loope
jmp
xchg
test
jo
xchg
or
xchg
cmp
fistl
sub
lret
jae
mov
fstl
push
loope
adc
pop
test
enter
cltd
inc
sbb
popa
or
rolb
mov
int
mov
add
dec
cmp
decl
adc
jns
mov
cmp
and
pop
pop
fcomp
push
fldenv
mov
mov
cwtl
cwtl
or
and
je
xchg
xchg
cltd
push
adc
xchg
or
lret
cltd
jns
mov
pop
pop
stos
les
inc
mov
xchg
popl
ljmp
add
adc
jecxz
adc
stc
pop
dec
ss
cmp
lock
fsubrl
pop
popf
dec
pop
stos
push
test
int3
cmp
fldcw
mov
fwait
gs
pop
sbb
insl
aaa
into
aaa
inc
test
cmc
sbb
xchg
dec
mov
fs
gs
push
mov
lods
jle
or
movb
scas
jns
inc
repnz
pop
popl
mov
idivl
add
pushl
rcrb
dec
xchg
and
lret
test
mov
adc
dec
pusha
jo
pop
pop
fcoms
cmp
or
and
or
es
je
sbb
ret
subb
push
inc
mov
sbb
call
sarb
sahf
xor
add
sbb
in
mov
mov
ss
clc
or
rorb
imul
xor
ss
lods
rcl
stos
mov
pop
test
dec
xor
inc
sub
dec
fistpll
dec
or
bound
sbb
mov
or
lea
testb
mov
fwait
pushf
adc
xchg
fwait
jnp
dec
pop
lods
pusha
mov
jmp
mov
xchg
mov
or
add
add
js
mov
ja
rcr
mov
test
push
mov
sub
jno
inc
and
jecxz
cmp
mov
sti
and
add
and
jl
sarl
xchg
push
adc
inc
push
push
movsl
jg
adc
popf
ja
adc
pop
mov
loopne
jle
fwait
clc
jmp
clc
sti
jle
fwait
mov
outsl
test
js
mov
ljmp
dec
inc
int
clc
nop
icebp
mov
push
aad
notb
shrl
andb
fbstp
rclb
push
nop
sbb
pusha
add
push
stos
jbe
lret
outsb
les
divb
lret
pop
test
add
sbb
push
or
into
sbb
sbb
call
rolb
lret
in
cmp
mov
xor
mov
mov
fwait
push
sbbb
mov
sub
cwtl
inc
and
push
mov
mov
bound
out
adc
outsb
inc
adc
loope
jl
sub
and
or
or
mov
shl
mov
adcl
inc
pushf
dec
pop
mov
push
xor
std
push
lea
push
iret
ret
jmp
mov
inc
adcl
sbb
nop
mov
rclb
dec
or
sbb
pop
dec
and
and
add
leave
adc
cs
call
pop
add
jo
in
mov
test
dec
in
ret
jo
xchg
adc
mov
sbb
negb
add
mov
aaa
pushf
and
inc
test
pop
add
mov
sbb
jo
popa
or
insb
add
es
xchg
pushl
mov
shrb
popf
lods
jp
mov
je
lods
cmp
adc
pop
sbb
ja
fistps
std
push
lahf
out
pop
inc
data16
popf
mov
call
insb
aaa
sarb
inc
repz
inc
xor
dec
mov
xor
xor
arpl
test
aam
flds
xor
fdivs
fdiv
insb
lock
mov
xchg
test
rcll
inc
shlb
cmpsl
leave
pop
test
cld
or
push
lds
sbb
outsl
std
les
and
dec
scas
rcrl
mov
sbb
test
mov
sbb
cltd
in
cmp
stos
mov
add
and
fdivrl
cmpsb
sahf
xor
ret
mov
fisttps
xchg
pop
js
sbb
pop
jb
add
mov
sbb
mov
insb
popf
pop
mov
cld
jecxz
sub
fstp
movsb
addr16
mov
fwait
fwait
pop
mov
jb
xchg
out
jns
sbb
push
xor
mov
dec
inc
dec
push
or
xor
dec
sbb
or
and
pop
xor
mov
jmp
push
mov
xchg
ja
sahf
jbe
sti
mov
cmp
jp
add
popf
dec
sbb
add
addr16
cs
push
lret
loopne
xchg
jg
mov
cli
cmp
shrl
push
sub
cmp
pop
mov
pushf
jae
pop
insb
fldenv
sub
inc
lock
scas
xchg
inc
xchg
cmpsb
push
push
popf
fidivl
sub
sarl
push
mov
inc
pusha
sahf
xchg
pushf
out
push
mov
loop
sarb
mov
es
fmuls
mov
adc
mov
adc
push
lods
xlat
push
pop
and
mov
int
loope
pop
cmp
call
xlat
sbb
xor
and
jnp
or
pop
jp
adc
xchg
ficoms
and
xchg
jmp
inc
bound
jl
pop
movsl
fsubr
addb
adc
repz
std
dec
push
shlb
lock
mov
cmp
xor
jg
inc
cli
dec
test
adc
or
push
dec
cli
imul
and
cmpsl
push
push
add
mov
and
js
rcr
cmp
push
cmp
lods
pop
mov
scas
jne
dec
push
into
movsl
int
ljmp
ret
inc
sub
ja
sub
sbb
fsubrp
sbb
cld
and
jns
adc
jns
pop
pop
xor
pop
mov
xor
lahf
int
mov
xor
cmp
insb
jbe
inc
pop
and
and
ljmp
in
repnz
mov
inc
mov
lar
enter
imul
and
int3
ret
or
pop
push
sub
sub
insl
mov
inc
xor
inc
ficomps
pop
in
dec
sbb
mov
ret
push
dec
jo
sub
lds
pop
cli
pop
imul
dec
xor
adc
flds
int3
cmp
adc
add
bound
push
cmp
outsb
push
ja
sub
iret
ljmp
fstl
pop
mov
jno
push
cmp
pop
into
mov
cmp
add
or
mov
clc
jl
aad
jle
idivl
clc
xor
mov
dec
pusha
shlb
sbb
mov
inc
in
pop
inc
cmpsb
push
lods
sbb
stos
adc
out
mov
cmp
lret
fs
jmp
push
popf
iret
sbb
insb
inc
and
mov
mov
adc
mov
cmc
mov
pop
das
or
shrl
mov
pop
lock
and
lret
push
pop
add
test
fldl
sbb
or
mov
mov
cld
jg
lds
dec
and
adcl
mov
outsl
dec
fldenv
xchg
int3
push
mov
jne
xor
cmp
xchg
pop
xor
cmp
outsb
push
mov
push
push
dec
cmpsl
outsb
hlt
sub
gs
aad
fs
cmp
lahf
ret
data16
mov
cmp
lahf
pop
push
or
ret
fs
rcrb
sbb
rcll
jo
pop
jns
jmp
popf
lahf
jp
mov
push
push
lods
xlat
push
fdivrl
and
call
nop
inc
cltd
xlat
call
xor
inc
inc
sbb
hlt
jl
adc
dec
sub
sbb
push
test
or
pop
stos
roll
lcall
into
call
mov
jno
outsb
sub
sbb
cmp
leave
inc
sbb
jne
pop
sbbl
jp
in
testl
sbb
test
lods
push
push
int3
mov
loop
push
loop
int
mov
adc
dec
mov
in
js
pop
insb
push
jl
jns
mov
repz
insl
pop
push
cmp
push
std
imulb
scas
dec
jns
inc
lods
push
sub
bound
scas
leave
push
mov
ja
xlat
lahf
cli
js
rcrb
stos
mov
add
iret
rcrb
inc
xchg
outsb
mov
push
fidivrl
movsl
xchg
ss
mov
push
lea
es
pop
sbb
bound
and
mov
cltd
out
adc
xchg
fwait
int
inc
mov
cmc
fsubrl
pop
xchg
xor
dec
jmp
mov
cmp
cmp
mov
jge
add
ret
sti
jns
cwtl
outsb
aaa
mov
pusha
dec
mov
and
test
pop
dec
inc
lock
addr16
add
imul
xor
lods
push
dec
shlb
or
mov
sbb
mov
in
push
fsubrs
ss
outsl
mov
jae
in
idivb
push
xor
shrl
push
mov
lret
and
cmp
or
mov
fmull
fwait
xchg
dec
pushf
mov
cld
sub
test
ss
and
cmp
rcrl
dec
shll
out
jp
dec
nop
dec
and
mov
adc
mov
cltd
scas
pop
cwtl
loopne
pop
jnp
or
mov
popf
mov
fimuls
inc
in
adc
adc
dec
mov
das
mov
rclb
and
mov
lods
cmc
dec
add
xor
inc
iret
imul
imul
mov
inc
add
jmp
cld
or
movsl
popf
pop
dec
cmp
mov
dec
icebp
idivb
sbb
add
adc
push
test
cwtl
jno
pop
sbb
and
adc
dec
mov
divb
sub
cmp
nop
shll
mov
shrb
jbe
stos
dec
cmpsl
push
mov
std
mov
pop
scas
dec
cmp
pop
mov
inc
sbb
push
jg
leave
loope
aad
pop
insb
ss
cltd
lcall
scas
out
mov
ds
sub
rcll
mov
test
in
fwait
imul
aas
xchg
aas
mov
push
inc
sbb
clc
cmp
mov
or
push
adc
mov
xor
inc
cmp
das
aam
mov
icebp
add
xor
popf
jmp
or
int
lahf
jo
pop
cmp
cmp
idivl
fdivrl
pusha
xor
xor
add
add
out
pushf
mov
dec
mov
dec
loope
cmc
xor
cli
cmp
shrl
sti
sbb
sbb
pop
ljmp
sti
stc
cli
in
test
or
invd
test
test
mov
les
sahf
mov
mov
adc
js
lcall
mov
fucomi
cmc
mov
sbb
sti
jne
stc
add
mov
in
cmp
mov
mov
inc
cwtl
dec
and
mov
ret
adc
rcr
movsb
jno
leave
pop
gs
rol
fld1
jb
add
jb
xor
push
jecxz
mov
dec
dec
test
push
dec
mov
js
mov
add
jne
popa
or
xchg
mov
pop
add
inc
jmp
popa
lods
inc
pop
shr
add
cmp
je
add
ss
push
lods
xchg
sub
adc
fucom
shll
inc
lock
xchg
mov
pop
clc
jmp
xchg
mov
stos
adc
sbb
ret
add
sbb
xor
fisubrl
lahf
or
mov
fldcw
xchg
shrb
sbb
loop
mov
in
aad
xchg
xchg
jno
mov
or
cmpsl
xlat
in
testl
add
dec
aam
xchg
mov
mov
movsl
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
movsb
fstps
call
fwait
mov
stos
xchg
out
mov
inc
inc
xchg
and
fisubrs
pop
dec
mov
popa
mov
popf
cltd
dec
popf
mov
shrl
push
xchg
dec
pop
mov
cmp
in
xchg
pop
xchg
cmp
pop
mov
repnz
mov
repnz
lret
outsb
fistl
sub
sub
and
cmp
jne
inc
mov
aaa
loope
mov
sti
stc
cli
in
test
cmp
push
pushf
inc
sbb
adcb
divl
add
imul
arpl
sbb
cld
cmp
fidivs
dec
shr
ret
loopne
cmp
lahf
fcomip
jp
in
cld
pop
aas
inc
rcrl
cmp
std
decl
add
mov
push
add
sub
aaa
xchg
sbb
out
cmp
pop
popa
jge
insl
or
sbb
mov
aaa
sbb
push
je
push
adc
pop
push
and
mov
inc
popf
into
pop
stos
les
movb
lret
loopne
mov
or
sti
mov
hlt
jne
fmull
add
jne
pop
rorl
mov
nop
mov
les
mov
mov
mov
sbb
scas
mov
mov
mov
dec
cltd
or
test
xchg
dec
mov
ljmp
xor
xchg
iret
sarl
adc
movsb
xchg
orb
jbe
leave
mov
lret
pop
fucomip
ret
jmp
push
mov
iret
subl
cmp
pop
mov
dec
mov
xor
mov
iret
push
out
xor
cmp
out
and
fbld
cmpsl
ret
flds
mov
mov
int
fnsave
xor
dec
inc
aam
test
push
xchg
enter
cmpb
js
pop
das
idivl
les
movb
mov
into
lret
push
cld
adc
push
jns
sbb
add
sub
mov
out
sbb
xchg
adc
mov
dec
rorb
adc
fsubrl
stos
mov
add
inc
cmp
inc
pushf
mov
and
outsl
popf
inc
jecxz
xor
xchg
divb
sbb
dec
or
dec
mov
dec
fcmovne
xchg
fwait
adc
enter
pop
shrb
cltd
fstpl
fdivrl
lahf
jp
das
pop
testl
dec
xlat
cmp
cmp
cmp
jle
clc
xor
std
pushl
adc
outsl
cmpsl
or
cmp
push
lods
xlat
push
fdivs
fbld
push
lret
lea
pop
mov
sbb
jb
insb
aaa
sbb
or
icebp
hlt
jl
sub
xor
and
cmc
hlt
dec
add
vgetexpsd
int
cmp
inc
cld
fxch
clc
lahf
add
inc
out
pop
sbb
cmp
in
add
js
mov
sub
fbstp
pop
dec
jno
or
addr16
add
mov
sbb
imul
mull
adc
xchg
mov
mov
sti
fisubl
dec
sbb
icebp
cmp
fisubrs
lds
mov
xchg
jg
cmpsl
push
push
popf
sbb
stos
cmp
push
test
jbe
push
fistpll
or
mov
js
pop
js
enter
jecxz
inc
out
std
mov
pop
ds
dec
cmp
jp
jmp
push
push
lods
mov
out
imul
mov
fs
xlat
fwait
mov
push
or
mov
shlb
sub
mov
xor
push
adc
sarb
das
or
pop
clc
rorb
out
xor
add
or
pop
test
push
xchg
xor
adcl
sub
dec
and
cli
jg
pop
dec
inc
shll
cmpsl
cwtl
sub
arpl
stos
adc
shrl
ljmp
ljmp
bound
push
cmp
push
xchg
jmp
pop
sub
pop
gs
fnsave
in
cmp
fisubrl
pop
fstpl
fdivrl
lahf
jp
scas
pop
imull
pop
enter
sti
das
adcb
inc
loopne
mov
cmpl
test
out
jp
cltd
js
fucomp
shr
loope
cmpsb
push
inc
mov
inc
sahf
mov
pusha
jo
sbb
pop
pop
cltd
daa
icebp
adc
ror
mov
dec
lahf
into
inc
mov
sub
xor
inc
cwtl
aam
dec
inc
push
negl
mov
mov
or
sbb
inc
inc
push
pop
fnsetpm(287
mov
pop
adc
repz
add
xchg
addb
scas
xchg
jecxz
adc
mov
jl
cwtl
lret
inc
add
jae
fcompl
jg
rcrb
jns
push
jb
mov
sbb
test
and
pop
inc
push
pushf
cmp
push
cmp
jae
test
add
push
mov
and
xchg
or
adc
scas
mov
mov
sbb
in
loopne
cmp
sahf
xchg
fadd
pushf
ret
pop
rcrb
inc
xchg
mov
std
jo
mov
repz
mov
fwait
mov
aam
fstps
mov
out
push
movsl
lret
xor
xchg
sub
fs
xchg
sbb
enter
lock
jb
outsb
aaa
sbb
or
jmp
pop
xor
ret
jmp
fisubl
sahf
dec
sub
mov
mov
mov
cmp
add
xchg
sbb
pop
ds
clc
in
inc
add
aad
add
mov
rorb
cltd
or
and
pop
aad
adc
mov
outsl
adc
xor
xor
scas
push
sub
push
inc
ljmp
xor
les
movsb
push
dec
shll
imul
pop
jno
fs
aas
mov
push
push
dec
cmpsl
ss
pop
jb
mov
jecxz
mov
imul
mov
fbld
out
push
pop
cmpsl
xlat
add
out
idiv
mov
jl
daa
dec
cmp
pop
stc
repnz
popf
mov
std
jb
loop
or
inc
adcl
xor
inc
iret
arpl
int
jns
sbb
sub
insb
aaa
shlb
inc
stos
or
pop
sbb
adc
mov
mov
dec
and
push
inc
mov
popf
pop
push
add
xchg
cmp
fisubs
jnp
mov
aaa
mov
push
dec
mov
and
add
mov
cwtl
lret
inc
sub
sbb
insl
sub
sbb
dec
sbb
cmc
mov
out
cmp
push
dec
popf
ljmp
sbb
mov
idivb
or
cmpsl
outsb
lock
lds
mov
popf
push
cmp
lahf
dec
pop
ficomps
sti
adc
fcomip
fstps
js
adc
dec
cmpb
fstps
dec
xchg
icebp
and
rol
xor
adc
push
sub
pop
outsl
testl
ds
jmp
std
mov
sti
and
or
loopne
aam
dec
in
stos
in
gs
mov
mov
pop
or
push
mov
cltd
test
ficompl
mov
test
cmp
pop
adc
ret
fdivp
jge
mov
xchg
mov
or
jp
lcall
push
xchg
dec
and
pop
nop
lods
lret
adc
cli
mov
xor
pop
in
mov
lret
fucomp
jae
fwait
xchg
dec
icebp
incl
pop
jb
jbe
fs
dec
mov
lret
and
or
sahf
or
push
clc
adc
add
adc
lods
sahf
jno
pusha
mov
ja
in
or
fwait
pusha
loopne
and
in
andl
add
rcl
lahf
xor
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
test
cmp
cld
lods
fwait
mov
stos
xchg
out
mov
inc
inc
mov
hlt
je
push
fdivrl
dec
inc
mov
cwtl
mov
jmp
lret
cltd
mov
call
shr
repz
call
cmc
sbb
add
iret
sbb
rcll
pop
sub
roll
fcomps
fs
lcall
jmp
xchg
dec
and
push
nop
mov
test
fdivrs
add
scas
mov
xchg
fistpll
jns
mov
sbb
insb
push
mov
mov
push
sub
les
pop
stos
xchg
fistl
mov
enter
pop
sub
adc
cmpsl
pop
xchg
std
push
fucomi
repnz
add
and
sbb
addb
inc
sbb
add
mov
test
adc
test
mov
ljmp
popf
pop
mov
jae
xchg
sbb
jo
mov
fwait
xlat
xchg
mov
loopne
mov
fsubrs
dec
leave
sbb
and
sbb
fisubrs
subl
dec
cmp
decb
mov
daa
pop
cmpb
mov
push
inc
ret
and
insl
sbb
push
add
mov
mov
hlt
push
sbb
and
sub
arpl
test
push
stos
rcrl
jne
out
std
push
stc
dec
loope
dec
pop
pop
lret
cmpsl
imul
mov
push
mov
addr16
imull
mov
jae
mov
jno
lds
inc
fsubrl
mov
mov
test
inc
pushf
cmp
push
sub
or
pop
adc
or
add
jle
insl
pcmpeqb
lea
dec
pop
xchg
aas
lods
push
sub
pop
clc
jecxz
mov
jmp
std
mov
sti
and
test
mov
push
pop
ds
jne
cwtl
movsb
mov
jne
int
pop
pop
pop
repz
dec
in
les
pop
sahf
shrl
or
push
loop
mov
lock
lret
hlt
mov
inc
mov
add
sub
or
sbb
cld
push
push
lods
xchg
sub
adc
inc
in
lods
dec
mov
mov
xchg
popf
push
scas
mov
mov
fs
icebp
cli
out
or
or
mov
mov
or
inc
sbb
test
movb
sub
sbb
fisubl
jp
xor
stc
in
lds
xchg
and
cwtl
jno
dec
xchg
rol
or
push
xchg
scas
mov
sbb
scas
cmp
xchg
mov
push
fcom
push
fsubl
test
mov
jno
sti
or
enter
push
xor
test
push
xchg
nop
lea
push
fcompl
bnd
sub
add
ret
mov
sub
push
sahf
adc
and
mov
xchg
fstpt
repnz
enter
jbe
xchg
push
xor
out
leave
les
das
imul
cmc
cli
sbb
arpl
gs
cmp
mov
test
sahf
cmp
movsl
orl
dec
movsb
xor
mov
cmpsb
xor
jb
fisttpll
cmp
add
inc
mov
sahf
adc
or
xor
cld
mov
lods
fs
xlat
pop
jecxz
jmp
or
cwtl
out
cmp
rclb
dec
mov
push
push
out
out
xor
cmpsl
mov
xchg
dec
push
pop
outsb
scas
adc
xchg
cmp
adc
push
or
cltd
jns
mov
jmp
insb
sbb
pop
push
movsb
repz
add
and
xchg
jb
out
pop
add
divl
mov
pop
add
repz
or
pop
stos
push
lods
xchg
sub
adc
shl
mov
dec
sbb
xchg
mov
mov
mov
stos
adc
sbb
popl
scas
test
sbb
in
jmp
aad
mov
mov
lds
addr16
jbe
sub
xchg
dec
jns
push
pushf
mov
sbb
sarb
fs
xor
jnp
or
addl
ret
cmp
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
and
pop
cli
call
fwait
mov
stos
xchg
out
mov
enter
sbb
dec
sbb
test
adc
andl
into
pop
lea
xor
mov
lods
lea
jl
test
imul
aas
ljmp
pop
lahf
orb
das
in
fwait
dec
or
sarb
adc
mov
pop
stos
loope
and
int3
xchg
sbb
sbb
mov
sbb
mov
bound
pop
pop
xor
mov
mov
pop
pusha
jbe
sub
jno
adc
dec
stc
loope
lds
xchg
inc
rclb
push
mov
inc
aam
push
mov
mov
pop
repnz
adc
add
add
fistl
pop
stos
fisubl
pop
mov
or
pop
out
das
mov
rorl
jae
aaa
sbb
outsb
inc
xor
imul
out
dec
daa
insb
sbb
sbb
mov
aam
jae
inc
mov
jbe
cmp
fstl
jae
scas
inc
mov
in
clc
mov
lock
ja
inc
lock
ss
and
sbb
push
dec
xor
sub
jne
pop
fildll
js
and
dec
adc
insb
fstps
ret
insl
mov
dec
fsubr
sbb
sbb
lock
mov
mov
dec
fs
cmp
sbb
in
cmp
adc
ljmp
int
jo
jns
mov
jl
mov
xchg
xchg
js
ds
and
push
dec
mov
jns
dec
push
out
push
test
jge
jmp
fimull
push
gs
cmc
dec
repz
gs
jge
push
mov
adc
cmovno
or
mov
xor
in
sbb
cmp
call
fcom
or
inc
pop
pop
mov
or
dec
cmovl
adc
clc
sti
mov
xchg
add
ljmp
int
inc
mov
jbe
adc
int
sbb
loop
push
addr16
dec
xor
sub
cwtl
inc
fstps
imul
xchg
jl
mov
lods
mov
ret
xor
pop
sub
pop
in
jge
push
sbb
imul
fsts
mov
ret
jnp
js
push
enter
mov
cmpsl
sbb
jmp
cmp
xor
or
repz
mov
jp
pop
cltd
pop
xchg
int
mov
or
push
jns
mov
push
mov
xchg
xchg
cmp
lea
xor
mov
je
dec
in
stos
in
cmp
je
cmc
lea
fisttpl
cmc
mov
pop
xor
stos
shr
repz
pop
jle
cmp
cmp
enter
std
mov
sub
pop
add
mov
aam
iret
cmpsl
dec
popf
cwtl
push
cwtl
lret
push
sbb
adc
cmp
mov
push
dec
mov
mov
fiaddl
int
dec
push
leave
bound
into
adc
clc
adc
in
or
cmp
inc
cltd
adc
push
fnsave
fstps
dec
jns
test
add
cmc
lods
pusha
push
cmp
mov
mov
rcrb
add
movsb
mov
popl
int
je
fwait
push
inc
or
pop
jp
xchg
sub
fsubl
and
fisubs
cmp
daa
sti
fldz
jns
sbb
fdivrl
sbbb
inc
mov
sbb
inc
xor
xchg
cmp
rorl
mov
mov
scas
xor
mov
mov
inc
inc
mov
jecxz
insl
roll
push
fstpl
pop
add
adc
cmp
pop
sub
andb
xor
iret
cmpsl
push
mov
xor
call
cwtl
xor
mov
pop
stos
fsubr
shrl
leave
test
popf
mov
ffree
jmp
adc
xor
sub
insl
mov
pusha
sbb
idivb
scas
xchg
stos
mov
push
xchg
stos
inc
sahf
addr16
jne
sub
mov
cmp
andl
push
fs
jle
aaa
sbb
jl
pop
inc
sbb
add
aam
mov
fdivs
push
and
push
mov
aad
pop
daa
fisubrs
xchg
inc
fs
out
out
jns
sbb
repnz
push
clc
xor
aas
adc
lea
pop
or
adc
mov
xor
aaa
xor
pop
or
loopne
cmp
pop
push
mov
adc
jno
mov
sub
cmp
mov
sub
pushf
addl
push
cwtl
psadbw
sub
push
dec
cmp
test
lds
fildll
loopne
cltd
dec
testb
testb
mov
insl
aaa
bound
xchg
add
xchg
pop
dec
cmpsl
push
push
sbb
mov
scas
jb
lret
jl
jecxz
xchg
in
pusha
fs
mov
mov
bound
fwait
leave
loop
xorb
cmpsl
xlat
in
or
push
repnz
adc
jae
xor
push
aam
jecxz
cmp
and
jecxz
ss
popa
push
loope
notb
jne
sbb
pop
mov
out
adc
addb
iret
xchg
out
push
adc
orb
adcl
rcrb
or
push
lea
mov
inc
inc
mov
movsl
dec
xor
movsb
cwtl
jg
imul
aam
test
pop
dec
fcomps
arpl
push
add
jecxz
cld
or
mov
imul
fs
into
xor
rorl
push
aaa
cltd
fsubr
mov
mov
sbb
lahf
rcrb
pop
add
cmp
cmp
ret
xchg
or
in
cmp
xchg
mov
add
jno
movsb
sub
aaa
dec
cmp
fildl
mov
fs
loop
xchg
sbb
xlat
in
testl
sbb
out
push
out
jp
stc
repnz
std
mov
mov
fistps
xchg
pop
lea
cmp
cmp
cmpsl
cmp
inc
jmp
mov
shr
inc
cltd
mov
push
adc
jge
das
or
cmp
sub
ss
sbb
fildll
movsb
inc
xor
lds
callw
outsb
aam
push
cmp
bound
pop
ja
pop
pop
lock
add
sbbb
pop
ret
pop
inc
pop
in
dec
add
and
test
sahf
cmp
addr16
ljmp
mov
pushf
dec
pop
shrl
fstl
inc
push
push
mov
pop
outsb
les
push
jb
lods
pop
jbe
sub
cld
pop
into
mov
repz
sarl
repz
stos
ds
or
shlb
std
pushl
pop
int
xor
or
fnstenv
pop
repz
mov
push
std
rclb
and
inc
mov
int3
pop
sub
dec
push
or
das
sbbb
arpl
adc
adc
movb
mov
xor
pop
pop
dec
sbb
jno
pop
adc
rorl
rclb
xchg
sub
pushf
ret
pop
sbb
test
dec
pushf
dec
and
jne
les
lahf
stos
pop
sbb
loop
mov
jae
push
stc
inc
loope
dec
pop
cli
lret
cmpsl
imul
mov
mov
fldt
addr16
outsl
shlb
das
lret
xchg
sti
stos
xor
hlt
push
sbb
movsl
scas
fucomi
and
push
fwait
leave
loop
and
daa
mov
in
cmp
mov
mov
sub
xchg
jg
mov
pop
repz
insl
xchg
jmp
mov
mov
xchg
ss
pop
fsubl
xchg
rcll
rol
sbbb
push
push
dec
dec
dec
stos
sbb
sbb
loopne
cmc
mov
mov
cltd
pop
adc
push
sahf
push
push
or
add
ljmp
negl
inc
sbb
inc
sbb
into
add
insb
jmp
or
sbb
add
movl
pop
lods
xchg
sub
adc
shlb
jno
in
cli
test
pop
sbb
ss
ja
fs
push
test
lcall
mov
cmp
xor
xchg
or
inc
and
fcmovnu
pop
ja
adc
adc
xchg
ja
mov
xor
shll
sbb
test
pushf
and
add
add
popa
cmovle
icebp
cmp
push
inc
cwtl
les
lret
sbbb
push
sub
cmpsb
cli
xor
push
lds
jg
movswl
jmp
std
mov
sti
and
add
or
test
adc
mov
mov
pop
adc
mov
cmp
add
ja
sub
mov
mov
sub
mov
add
insl
push
sub
pushf
ss
dec
mov
dec
pushf
dec
and
jg
stos
xorb
xor
add
fildll
stc
mov
dec
pop
inc
fisubl
cmpsl
bound
or
xchg
dec
retw
adc
or
and
les
xor
lds
jge
pop
xor
cwtl
or
mov
leave
loop
das
jmp
mov
sub
loop
xchg
add
ja
in
test
out
push
imul
xor
es
sub
rolb
push
inc
mov
mov
popf
mov
sub
js
test
xor
sbb
inc
movsb
repz
ret
mov
test
aad
stc
imul
clc
mov
mov
mov
adc
add
adc
mov
cmpb
imul
sbb
adc
bnd
mov
imul
insl
push
mov
in
mov
sbb
and
mov
aas
sub
xchg
dec
mov
aam
inc
lods
pop
pop
push
aam
xor
jne
fldl
mov
jo
in
cld
or
int3
xor
fcompl
jno
sarb
mov
sub
iret
and
adc
adc
push
or
das
mov
sub
mov
mov
cmp
stos
out
fwait
xchg
xchg
inc
cltd
enter
mov
cmp
sub
adc
jmp
mov
adc
and
pop
stos
shll
mov
dec
sbb
mov
adc
nop
xor
std
pop
dec
aaa
sbb
inc
xor
jmp
fdivl
pop
dec
mov
pop
ficoml
add
inc
cmp
nop
xlat
cmpsl
negl
jnp
jns
push
xchg
mov
ret
cmp
mov
scas
push
xchg
lcall
jge
pop
scas
dec
jns
mov
enter
lods
roll
sbb
movsl
je
fucomi
in
adc
cli
jnp
inc
mov
test
xchg
inc
sbb
add
mov
jno
leave
mov
cld
mov
es
sub
ja
fistpll
ret
fld1
jb
cmp
call
int3
xor
jb
inc
orl
pop
inc
xchg
dec
aad
inc
xor
jbe
inc
mov
dec
xchg
xor
mov
add
arpl
cmp
es
mov
ss
shll
sahf
adc
imul
and
jne
xchg
mov
pop
pop
test
test
mov
test
int3
imul
inc
test
test
jl
sbb
cltd
dec
sub
outsb
les
sbb
lahf
or
mov
fstpl
icebp
or
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
mov
xor
sbb
rcl
adc
mov
sub
icebp
mov
lret
in
mov
mov
cmp
sub
je
xchg
xchg
inc
cltd
enter
push
and
les
imul
mov
neg
imul
hlt
cmp
pop
test
aaa
call
xchg
lods
lret
cmp
pop
loopne
lea
orl
xor
mov
inc
cs
lret
inc
stos
jmp
insl
cmpsl
aad
cld
fwait
add
jb
jmp
test
loope
mov
jmp
push
and
dec
xchg
xchg
in
sbb
pusha
add
repz
sbb
cmp
or
pop
test
xor
inc
insb
mov
fisubrl
jnp
inc
mov
add
or
mov
aam
jb
sub
push
dec
shlb
les
clc
and
pop
cmp
xchg
imul
xchg
in
lods
addl
fimuls
and
adc
dec
jmp
ds
cmp
mov
lret
pop
push
push
int3
fisttps
movsb
xor
fstl
inc
cmpl
inc
fcmovnu
cmp
popa
fsubs
inc
pop
hlt
lods
lock
lds
pop
xchg
adc
sbbl
test
push
ja
inc
in
imul
lods
sbb
dec
push
inc
pop
in
insb
add
mov
daa
or
mov
cmpsb
xor
jb
fisttpll
lcall
xchg
hlt
stos
pop
sahf
jp
cs
jno
in
mov
cld
sbb
xchg
fmuls
mov
inc
inc
cmp
mov
dec
lcall
jecxz
cwtl
inc
stos
add
push
aas
fwait
lret
in
mov
mov
cmp
mov
je
xchg
xchg
inc
cltd
enter
or
cmp
mov
sbb
cmp
mov
dec
mov
inc
inc
jbe
js
popa
jne
mov
add
mov
mov
cmp
jp
add
test
ret
mov
add
addr16
lods
xorl
les
nop
xlat
stos
test
fidivl
mov
and
dec
jae
cmp
dec
popf
scas
je
or
or
or
cmp
adc
cltd
mov
stos
mov
add
repz
xor
add
cmp
ret
lahf
sahf
adc
test
fcompl
js
pop
js
sti
fiaddl
sbb
in
ja
or
in
mov
jnp
inc
push
mov
or
mov
lock
fdivrs
insl
fwait
push
lret
jnp
mov
xchg
inc
push
ret
cmp
xchg
lea
jle
mov
pushf
and
outsb
and
push
ficoms
sub
xor
lods
push
sub
idivl
pop
adc
sub
divb
les
cmpl
sbb
fs
jnp
xchg
rcl
or
pop
push
hlt
das
lock
iret
or
jg
mov
adc
mov
xor
shll
inc
lock
xchg
xor
pop
clc
jmp
xchg
mov
stos
adc
sbb
ret
add
mov
mov
stos
xchg
fistl
fiaddl
push
jae
mov
jno
shrb
cltd
sbb
sub
fucomi
jge
lds
push
aas
pop
pop
add
js
or
out
inc
jne
hlt
dec
ficoml
dec
shlb
adc
xchg
lahf
pop
inc
mov
push
out
mov
ret
fld1
gs
out
push
int
std
sarl
mov
rclb
ret
sbb
fwait
and
int
je
and
mov
dec
mov
inc
inc
jbe
js
popa
jne
mov
add
mov
mov
cmp
jp
add
mov
ret
mov
add
addr16
lods
xorl
les
nop
xlat
stos
test
fidivl
mov
and
dec
jae
cmp
dec
popf
scas
je
or
or
or
cmp
adc
cltd
lret
sub
mov
add
repz
xor
add
cmp
ret
lahf
sahf
adc
test
fcompl
js
pop
js
sti
fiaddl
sbb
in
ja
or
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
movsb
fstps
call
fwait
mov
stos
xchg
out
mov
cmovno
in
stos
out
gs
mov
int
inc
mov
sbbl
inc
lods
xorb
inc
ficomps
imul
out
sbb
jno
mov
aas
mov
mov
pushf
mov
mov
cli
jg
pop
dec
jno
jmp
sbbl
dec
or
dec
mov
sub
cmc
sbb
and
cld
movsl
js
les
mov
mov
xor
outsb
cltd
lcall
xchg
ret
dec
xlat
push
pop
xchg
pop
dec
mov
ja
int3
movb
leave
jns
dec
inc
scas
fidivrl
jbe
lods
arpl
cmp
jp
mov
dec
cmp
cmc
xchg
sub
and
sbb
mov
fwait
push
dec
mov
test
dec
aam
jb
inc
push
adc
lods
popf
xor
out
pop
cli
test
cmpsb
push
mov
xchg
fisttpll
lret
jno
cltd
push
adc
sub
cltd
es
imul
test
push
and
jmp
or
cmp
and
mov
test
add
daa
jb
pop
inc
out
fwait
pusha
jmp
outsb
inc
mulb
sbb
inc
aas
lret
movsb
sbbb
pop
jecxz
and
jnp
clc
xor
aaa
sbb
lret
push
inc
inc
ret
test
ljmp
push
xchg
in
stc
inc
data16
xor
jmp
jae
inc
dec
sub
fwait
xor
xchg
int
xor
jb
fisttpll
pop
gs
loopne
data16
xchg
in
pop
cmp
jo
jno
in
mov
cld
cli
sti
sub
push
cwtl
lock
mov
cmpsl
and
jns
pop
and
or
aam
ret
sti
sahf
imul
mov
sahf
xchg
and
mov
dec
pushf
outsl
cmovl
popf
inc
push
and
jne
push
test
inc
adc
rolb
mov
add
dec
sub
cs
jle
inc
rcl
jo
test
ljmp
sbb
movsl
shll
incl
xchg
fimuls
adc
pop
adc
ret
ret
lock
inc
sbb
inc
sub
mov
inc
pop
cli
rorb
hlt
scas
jno
and
cld
dec
movsl
mov
mov
sbb
fs
sub
cmc
sbb
push
push
cld
sub
les
mov
mov
xor
outsb
cltd
lcall
xchg
ret
dec
xlat
push
pop
xchg
pop
dec
mov
ja
mov
inc
mov
leave
jns
or
fidivrl
jbe
lods
arpl
cmp
jp
xor
mov
scas
jg
mov
xchg
sub
and
sbb
mov
fwait
push
dec
mov
test
dec
aam
jb
inc
push
adc
lods
popf
xor
out
pop
cli
test
cmpsb
push
mov
xchg
fisttpll
push
jne
push
adc
es
imul
and
and
call
or
cmp
and
mov
test
add
imul
rol
xchg
lock
test
pop
stc
adc
das
out
push
nop
pop
lret
inc
sbb
xor
test
lods
pop
stc
push
cld
mov
inc
lahf
mov
jae
mov
mov
mov
and
les
or
cmp
adc
pop
dec
sub
aam
rclb
mov
fnstcw
popf
cmpsl
shl
pop
fists
xchg
fmull
xchg
mov
shl
stc
popa
or
inc
das
sbb
aam
gs
sbb
mov
mov
or
ret
lret
in
mov
mov
or
cmp
notl
and
cmp
test
jge
pop
shlb
sbb
je
js
mov
dec
roll
divl
inc
cmc
inc
lods
mov
jecxz
ja
adc
test
and
push
add
movsl
push
mov
shll
and
cmpsl
mov
xchg
inc
xor
rcrb
bound
stos
mov
add
leave
int
mov
lret
mov
lret
int
cmp
sbb
roll
sub
add
jl
rorl
mov
cmp
adc
inc
loope
mov
lds
dec
jmp
xchg
jae
sbb
pushf
fwait
stc
sub
cmp
ffree
inc
cmp
faddp
test
ffreep
les
cltd
xor
mov
fcompl
mov
cmpsl
pop
sbb
jb
cmpsl
pop
cmpsb
sbb
mov
xor
aad
or
and
mov
push
daa
mov
std
dec
sub
aad
sub
inc
sub
rep
inc
das
mov
movsl
add
xchg
add
loope
jmp
cltd
daa
or
xor
sbb
jns
mov
dec
fldenv
shrl
inc
mov
ja
cld
std
mov
push
mov
xchg
iret
enter
ret
mov
push
push
lcall
scas
mov
mov
add
push
push
faddl
movl
cld
sub
and
roll
inc
sbb
faddp
test
xchg
sub
sbb
fadd
add
mov
fldt
test
fcmovnb
vpor
add
adc
cltd
pop
cli
dec
inc
lahf
iret
cmpb
dec
popf
int3
ret
pop
push
xchg
ror
mov
pop
xchg
ror
sahf
lcall
mov
or
push
push
loop
add
mov
popl
adc
iret
and
mov
cmovae
aad
aaa
mov
dec
arpl
int
cmp
mov
into
mov
mov
push
ret
jae
out
mov
dec
jecxz
sub
mov
xchg
in
add
adc
cltd
dec
sub
outsb
les
push
xor
mov
fbld
push
pop
xchg
fmull
xchg
mov
shl
stc
popa
or
das
sbb
aam
gs
sbb
mov
push
and
in
mov
xor
ret
lret
in
mov
mov
or
cmp
xchg
jbe
clc
into
and
cmp
test
dec
jl,pt
dec
dec
lret
dec
sbb
in
pushl
adc
inc
sahf
or
or
js
das
clc
cmp
and
cmp
test
out
and
sahf
sub
pop
and
cwtl
push
lock
lock
aad
pushf
ret
pop
frstor
jecxz
jae
mov
push
testl
inc
dec
mov
sahf
pop
int3
fstps
test
dec
arpl
xor
xor
sub
push
sbb
xor
jne
or
roll
test
add
rorl
shr
mov
fmull
fwait
cmpsl
dec
mov
add
mov
scas
aaa
mov
cli
jnp
inc
mov
xchg
andb
icebp
xchg
out
sub
pop
jb
and
sbb
mov
mov
xchg
sti
cli
xor
push
sub
and
shll
das
ja
sbb
mov
out
adc
inc
pop
ljmp
inc
cmp
push
adc
xor
or
std
adc
loop
mov
aam
negl
push
mov
in
ret
adc
jecxz
gs
mov
fcoml
movsl
inc
imul
xor
lds
jae
pop
xor
or
add
push
xor
or
push
xor
or
clc
iret
fnstsw
ret
jae
in
mov
jle
arpl
add
lcall
adcb
inc
mov
xchg
pop
stos
mov
mov
enter
mov
mov
scas
dec
cmp
repnz
test
scas
mov
loop
mov
sbb
mov
fwait
push
dec
mov
mov
sub
repz
outsl
push
in
fisubs
repz
jbe
sbb
and
std
mov
push
ret
stc
in
out
and
push
adc
sbb
enter
jg
sub
cmp
mov
cs
dec
ret
cmp
cmp
and
push
shlb
cmc
mov
mov
sbb
pop
mov
lods
test
arpl
pop
mov
lods
movsl
sub
pop
mov
lods
lds
jae
pop
mov
lods
in
jnp
push
mov
jb
aam
insl
cmp
popa
cmp
jae
gs
mov
jbe
arpl
add
test
and
call
adc
pusha
mov
imul
lods
stos
lock
scas
jmp
jnp
inc
mov
xchg
andb
icebp
xchg
out
sub
pop
jb
and
sbb
mov
push
stc
mov
xchg
xor
push
sub
cmp
cmp
pop
fisubs
sbb
inc
testb
push
arpl
xchg
enter
sbb
int
int
imul
scas
out
and
mov
pusha
pop
into
addl
inc
scas
fwait
xor
pop
push
scas
fwait
jno
add
fsubs
add
mov
or
mov
adc
mov
sbb
movsb
sahf
mov
ret
and
movsl
sahf
repz
cmpsb
sahf
xor
xor
cmpsl
pop
jae
add
add
mov
ret
mov
lret
mov
rorb
out
ficompl
push
ret
mov
ret
call
rcrl
test
scas
fildll
loop
mov
add
mov
jmp
add
mov
mov
enter
int3
imul
test
movsl
dec
stos
adcl
ljmp
inc
and
jb
and
cmpsb
ret
bound
pop
and
add
andb
js
sbb
mov
or
cltd
imul
push
cmc
clc
les
fisttpl
scas
sbb
lock
sti
in
lahf
lret
test
xor
pusha
jbe
add
xor
sbb
dec
adc
mov
sbb
orb
mov
adc
js
and
loop
les
fsts
into
in
out
mov
ljmp
stos
mov
jno
les
cmp
push
or
dec
lock
out
xlat
int
and
repnz
lock
icebp
ret
test
into
xor
adc
dec
mov
and
iret
xor
jge
jb
lds
rcrb
jb
aad
lret
dec
jb
in
into
aam
leave
mov
cmc
and
fdivr
dec
xor
test
fcompl
add
fidivrs
and
ficomps
repz
bound
inc
shlb
push
shrb
xor
push
daa
mov
sub
mov
stc
mov
mov
sarl
repz
mov
loop
mov
xor
flds
and
loope
xor
xor
mov
mov
cwtl
arpl
adc
adcl
lcall
sbb
xor
out
push
stc
insb
sub
test
fisttpll
push
inc
ss
adc
out
nop
inc
lcall
stos
jno
rolb
orb
pop
lahf
fsubrl
xlat
faddl
sti
and
sti
test
lcall
jns
cmp
faddl
pop
sub
push
mov
mov
sbb
mov
pop
inc
xorb
cmpb
cltd
addb
shlb
add
add
stos
sbb
add
inc
lods
lcall
lods
lcall
scas
lcall
scas
sbb
cmpl
mov
add
mov
or
mov
adc
mov
sbb
movsb
lahf
addl
push
ret
and
xchg
aaa
in
test
xchg
jecxz
popf
add
add
ret
push
and
dec
inc
mov
imul
int3
xchg
pusha
mov
dec
push
adc
jae
lods
int
mov
scas
dec
xlat
shl
jnp
scas
lret
loop
inc
adc
in
cmp
mov
mov
sub
repz
outsl
push
mov
fisubs
repz
fnsave
sbb
and
std
mov
push
ret
fdivr
mov
jne
and
daa
je
jnp
and
mov
dec
add
mov
lahf
xchg
fisubrs
jmp
xchg
adc
pop
loop
idivl
shr
push
lods
lcall
mov
clc
sti
pop
adc
rcrl
mov
add
ret
mov
iret
inc
aas
lret
into
into
cmpb
adc
iret
iret
rcrb
jne
enter
loop
jne
leave
iret
inc
fucomip
sub
lret
call
xor
lret
iret
sar
cmp
mov
add
or
or
or
pop
xor
or
sbb
fstps
mov
rol
inc
mov
rol
xchg
mov
stos
fadd
add
push
xorl
push
or
add
int3
inc
xor
mov
fst
sbb
cmc
rcrb
movsb
sbb
mov
cmpsl
pushf
int
jb
ficompl
cmpsb
adc
and
aad
and
in
cs
mov
sub
mov
test
xor
sbb
dec
movsb
repz
ret
mov
test
aad
stc
imul
mov
sub
mov
lcall
aas
out
imul
adc
dec
sbb
xlat
pop
sbb
test
cli
leave
pop
inc
mov
push
mov
mov
pushf
dec
pop
insb
fcoms
ret
nop
cltd
adc
ss
xor
mov
mov
pop
mov
mov
in
jle
sbb
cmp
xor
ficoms
jg
aaa
pushl
jb
sarb
pop
in
cmp
fcmovne
mov
xchg
std
and
jnp
inc
push
mov
or
mov
fmull
mov
fcomp
aaa
sub
clc
ret
mov
movnti
out
les
add
mov
xchg
sub
sub
test
cs
sbb
adc
sbbl
xchg
movsl
pop
adc
xor
movsl
lcall
movsl
add
mov
ret
mov
add
addr16
cs
mov
sbb
pop
sbbl
stos
push
test
lock
shlb
push
in
dec
mov
mov
cld
std
movsl
lods
mov
popf
aad
dec
daa
xchg
test
sbb
xor
loopne
jg
dec
xor
fisubrl
lahf
or
sub
pop
xchg
jbe
fcompl
scas
pop
test
xor
dec
jg
lds
pop
mov
in
rolb
mov
xchg
out
roll
iret
xchg
fucomip
push
fidivrs
das
jo
xor
mov
cmp
repz
les
ja
sti
repz
and
add
push
hlt
leave
test
inc
rorb
aad
xchg
mov
dec
sahf
loop
mov
pop
stos
pop
lods
lea
mov
imul
add
iret
inc
hlt
add
and
jbe
add
pop
repnz
lock
adc
cltd
mov
sti
adc
mov
pushf
das
popf
into
jp
or
dec
ljmp
jnp
sbb
hlt
loopne
jae
add
jo
jmp
sbbl
int
stos
daa
fisubrl
pop
outsl
int3
mov
lock
adc
xor
lods
inc
sbb
scas
mov
dec
sub
aaa
leave
loop
pop
sarb
loopne
sub
iret
and
lea
inc
mov
mov
xchg
pop
mov
fidivrs
pop
repz
insl
in
mov
xchg
pop
mov
ret
test
mov
mov
out
hlt
int3
add
sbbl
imul
je
fisttps
in
dec
sahf
dec
mov
lcall
mov
icebp
ds
push
jne
in
cmpsl
fists
inc
ret
mov
dec
rcrl
add
jp
ret
mov
add
iret
popf
lret
push
fnsave
test
push
repnz
int
ja
lods
push
sub
lds
sbb
and
dec
fs
mov
cmc
icebp
icebp
jmp
shll
cmp
add
adc
sub
mov
jp
add
sbb
push
movsb
aad
xor
xor
mov
in
adc
cli
jnp
inc
mov
adc
push
mov
mov
cwtl
push
pop
adc
mov
enter
sub
call
xchg
and
cmpsl
gs
imul
fidivs
ret
push
and
rorb
ret
jl
sub
mov
test
bnd
or
pusha
shr
xor
les
mov
and
add
sbb
mov
aaa
mov
mov
adc
mov
sbb
fdivrl
aad
pop
xchg
cli
xlat
enter
push
lods
cli
cmpsl
adc
dec
sbb
sub
fidivl
enter
pop
imul
xchg
fcoms
mov
xchg
test
cmp
push
inc
push
xor
popf
mov
pop
stos
jne
vsubss
mov
mov
addb
dec
push
and
push
adc
test
fdivl
cmp
sbb
js
sbb
adc
or
in
mov
jnp
inc
push
mov
sub
xchg
xchg
mov
sbbl
sbb
xor
cmpsb
pushl
mov
push
or
cltd
mov
out
xor
inc
lcall
push
mov
mov
mov
sbb
pop
add
ret
or
fidivrs
jnp
inc
xchg
push
idivb
rcrl
mov
cli
dec
mov
jns
ret
sbb
push
daa
xchg
adc
sub
lcall
ljmp
lea
lods
popf
mov
or
or
or
cmp
adc
mov
mov
std
lock
fistpl
cltd
lds
mov
xchg
jle
test
scas
adc
fisubrl
jnp
inc
mov
xchg
mov
xchg
in
cltd
std
xor
sti
dec
js
mov
and
lret
lret
movsl
ret
sub
push
add
add
sbb
sti
dec
jns
mov
stc
sub
shrl
aaa
sbb
enter
add
jnp
icebp
pop
outsl
fs
test
cwtl
cmpb
xor
jg
push
or
pop
cmpl
cmpl
mov
bound
ljmp
sub
cltd
mov
xor
mov
and
jge
push
mov
popf
mov
fists
lods
cmp
push
xchg
leave
test
jae
xchg
sar
pusha
pop
adc
mov
nop
imul
pop
mov
mov
fwait
mulb
fisttpl
cltd
fsubl
repz
mov
mov
icebp
sbb
js
popf
enter
insl
xor
pop
push
sbb
es
sbb
mov
fidivrs
imul
xorl
je
cmpsb
shlb
push
stos
push
cmpsl
movsb
inc
sbb
pop
xchg
push
in
jb
fwait
dec
icebp
xor
add
lods
int3
pop
sub
xor
or
int
push
push
or
push
xchg
shl
mov
int3
in
repz
lret
imul
rol
imul
xchg
in
or
sbb
in
aas
repnz
in
ja
push
testb
or
mov
daa
sbb
lret
imull
pop
mov
mov
aad
imul
outsb
lahf
mov
cltd
jns
lods
jno
test
lock
inc
adc
dec
ds
add
sar
test
or
lret
push
and
nop
sub
push
fisttps
jne
iret
jle
jle
sub
mov
fiadds
mov
lock
jle
mov
aad
dec
mov
int
je
movsb
iret
xchg
and
push
sbb
xlat
mov
add
popl
mov
arpl
enter
and
add
imul
mov
fldenv
mov
mov
in
cmc
xchg
sti
mov
xor
movsl
sbb
xchg
leave
lods
mov
jg
fucomip
loopne
addl
mov
jecxz
sbb
push
mov
mov
ss
mov
hlt
insl
outsb
mov
dec
popf
lea
sbb
inc
lahf
push
sub
xlat
les
and
and
arpl
js
insl
inc
popa
xor
jp
push
sbb
fisubrl
push
out
adc
popa
xchg
pushf
push
fistpl
mov
push
pop
insb
adc
adc
pushf
adc
jp
out
cwtl
adc
cli
shl
movsb
or
pop
or
add
add
daa
sbb
inc
aaa
adc
cmc
pop
int
cld
lock
pushf
inc
and
cmpsb
pop
fs
repnz
fisttpll
fcmovnu
add
ds
dec
adc
dec
ljmp
mov
and
xchg
jb
loopne
xor
cmp
lds
adcw
aam
scas
push
leave
std
out
add
add
scas
shrl
addb
pop
adc
iret
pusha
xchg
xchg
lret
popf
dec
stos
shr
jae
in
pop
bound
sarl
int
mov
push
lds
shll
adc
mov
mov
addl
and
push
inc
loopne
mov
hlt
popa
and
scas
mov
jmp
adc
dec
in
inc
js
xchg
adcb
in
daa
push
shlb
xor
push
les
fwait
xor
scas
xlat
insb
inc
mov
stos
cmp
int
mov
cmp
in
jl
pusha
xor
ljmp
push
jbe
dec
dec
mov
aam
and
xor
aad
jp
inc
roll
sub
lea
into
mov
aam
adc
mov
inc
mov
jle
iret
ret
mov
push
jecxz
push
inc
cmp
das
cs
sub
addr16
pop
ret
mov
cwtl
icebp
jno
mov
cld
imul
icebp
inc
inc
dec
mov
xchg
stos
sub
and
pop
lret
pop
shl
cmp
dec
pop
or
addr16
mov
or
pop
xchg
mul
cmp
and
mov
dec
cwtl
mov
push
mov
pop
dec
gs
sbb
int3
fs
inc
repz
push
mov
jae
mov
xorl
jp
xor
aad
movsl
ret
faddl
das
cli
arpl
push
push
movsl
in
daa
bound
add
mov
xchg
jno
fst
push
or
jno
repnz
adc
fs
mov
cmp
insl
sub
sbb
fwait
adc
inc
int
dec
jecxz
pop
pop
push
or
mov
push
not
loope
insl
stos
out
sbb
mov
inc
inc
pop
lret
add
aam
push
xchg
jns
pop
aaa
loop
push
movsl
mov
cmpsb
sti
xor
stc
dec
push
bnd
orb
dec
repnz
into
pop
xor
adc
fnsave
mov
daa
jmp
adc
jae
mov
and
test
inc
and
imul
out
out
loope
mov
or
dec
and
jecxz
fildl
push
or
add
repz
push
push
cmc
add
mov
xor
inc
push
or
cltd
push
cmp
sbb
lods
push
sub
sub
pop
inc
add
es
gs
inc
fidivs
lcall
and
add
add
ljmp
mov
sub
mov
in
dec
mov
pop
aad
cld
jge
pop
dec
mov
sub
push
in
lret
stc
in
ret
xchg
arpl
outsb
fwait
push
into
flds
dec
fs
rorl
mov
adc
mov
sub
sti
les
inc
fcom
test
lods
xchg
sbb
lret
fucomp
je
fidivl
mov
jmp
mov
jno
adc
mov
jb
xchg
mov
addr16
mov
adc
mov
lret
mov
scas
out
test
push
mov
mov
mov
xchg
sbb
push
arpl
xchg
mov
xchg
aas
test
mov
mov
mov
mov
fwait
adc
inc
stos
into
xchg
xor
dec
rol
jge
cwtl
push
movsb
xchg
add
dec
add
jmp
sub
les
imul
call
xchg
xor
mov
fidivrl
outsl
sub
cld
stos
leave
jecxz
movl
aam
outsl
cmpsb
sub
lcall
jo
mov
lods
pop
fs
test
push
cmp
and
mov
jmp
call
jae
mov
das
lret
scas
cmp
movsl
push
jl
add
lret
mov
movsl
push
popf
or
add
mov
xor
mov
jecxz
sbb
fiaddl
sub
repz
mov
jg
adc
pop
inc
adc
insb
dec
adc
imul
add
push
xchg
mov
js
push
mov
sbb
cmpsl
dec
stc
lods
lea
loope
jecxz
movsl
adc
int3
pop
sub
jecxz
push
repz
mov
insb
nop
xorb
sub
xchg
mov
inc
inc
imulb
enter
into
stos
push
out
adc
jno
imull
xlat
sti
int
mov
sub
sub
fmull
es
test
pusha
xor
ret
sub
lret
mov
ds
incl
movsb
sbb
repz
fwait
in
xchg
stos
pop
repz
movsl
cmp
jns
and
xchg
mov
mov
xchg
stc
outsl
cs
sbb
jecxz
jns
inc
sbb
inc
sahf
add
mov
inc
xchg
insb
push
mov
fs
in
loopne
rclb
pop
sub
push
mov
push
xchg
add
sub
push
cwtl
dec
push
aad
adc
push
cmp
add
add
lds
fwait
sarl
mov
inc
inc
loop
inc
shlb
lods
sub
cmp
loopne
sbb
pop
mov
int3
sub
pop
mov
push
pusha
aam
fbld
mov
push
cmp
in
lret
sub
mov
fdivp
ret
cmp
pushf
and
enter
fldl
lods
mov
add
daa
sbb
mov
scas
inc
out
loope
jnp
mov
popa
addr16
fucomp
jae
outsl
dec
jle
shl
fwait
pop
adc
hlt
and
in
test
sbb
sbb
cmc
jns
push
ror
scas
cmpsb
lret
movsl
xchg
mov
outsl
xchg
movsl
cmp
mov
arpl
push
pop
and
es
jmp
shlb
repz
ret
inc
rolb
or
push
repz
les
inc
cwtl
xchg
and
test
aam
lcall
push
sbb
push
ja
call
xlat
cmpsl
cmp
dec
nop
in
mov
je
mov
aaa
int3
icebp
xchg
xchg
mov
fisubrs
std
inc
aas
mov
out
xor
add
xchg
repz
ret
loopne
mov
sti
jle
inc
out
loop
test
aad
mov
ret
fcomps
add
rorb
mov
jbe
adc
adc
push
push
inc
pop
in
mov
xchg
ljmp
jns
arpl
outsb
stos
mov
ret
bound
lret
pop
pop
xchg
roll
jne
stos
push
push
scas
xchg
sbb
cmp
pop
xchg
jnp
ret
jb
nop
xchg
aad
xchg
xorb
mov
into
movsb
lods
popa
push
outsb
inc
orb
mov
jno
cmp
je
adc
imul
cwtl
and
xchg
rolb
mov
inc
and
pop
daa
cli
and
mov
sbb
mov
dec
sbb
cmp
cmp
adc
push
pusha
je
outsb
leave
xlat
jl
ljmp
pop
movsl
dec
mov
cs
out
in
call
pusha
insb
repnz
mov
sbb
ret
mov
adc
roll
cs
movsl
mov
sub
seto
xor
fsubrs
outsl
mov
and
xor
fwait
cld
push
in
xchg
test
ret
loopne
push
sbb
lock
call
stos
lds
movsl
push
test
andb
shl
ret
test
pop
mov
outsb
mov
scas
movl
fcmovb
cwtl
ret
aas
cmpsl
xor
mull
and
dec
sbb
daa
movsb
mov
movsb
ror
aam
mov
jl
sbb
mov
xchg
mov
sbb
icebp
stos
mov
xor
fnstenv
jne
mov
mov
fsubp
mov
dec
sub
mov
mov
scas
mov
mov
ja
adc
lcall
or
lea
bound
mov
sbb
jl
pop
inc
jae
stos
xor
push
xor
cli
xchg
inc
mov
leave
faddl
sysenter
cmp
lods
inc
stos
andb
pop
xchg
ljmp
or
adc
mov
bound
xchg
repnz
or
sti
jns
mov
daa
and
dec
lcall
fld
cmp
int3
repnz
pop
xchg
pop
fucomi
jmp
inc
xlat
mov
and
sub
or
andl
add
xchg
inc
jns
mov
push
cltd
scas
pop
sbb
jnp
pop
cmpsb
lret
sbb
es
aaa
fldenv
add
lret
sub
xor
shr
xor
lods
push
dec
mov
push
lods
lret
cmp
adc
mov
imul
ds
aas
fdivs
rclb
outsb
push
aad
mov
cmp
jne
jne
incb
sbbl
fldenv
sbb
push
leave
mov
mov
cmp
int
dec
ss
pop
pop
into
pushf
les
push
cwtl
inc
jnp
bound
push
mov
xchg
inc
and
mull
aad
pop
scas
dec
add
inc
mov
nop
sub
or
pusha
and
inc
fimuls
sbb
insl
xor
aaa
xchg
pop
pop
andl
mov
mov
addb
dec
add
cmp
push
mov
or
lcall
rol
and
jmp
and
lahf
mov
sbb
stc
int3
mov
sti
jmp
and
ret
pop
aam
mov
sub
imul
jge
scas
or
loope
mov
lret
in
roll
pop
test
je
pop
cli
testb
push
xorb
jno
xlat
jne
fs
movsb
push
cmp
test
dec
sbb
add
adc
out
aad
cmp
sbb
cmpsl
xchg
data16
pop
das
push
lods
jge
test
repz
jns
add
xorb
inc
inc
ds
xlat
xchg
xchg
sub
add
dec
xchg
push
notb
mov
sbb
jecxz
lock
mov
xchg
mov
and
sbb
inc
icebp
and
into
clc
fcompl
xchg
pop
jle
out
and
cmpsb
push
je
test
and
nop
popf
xchg
aad
ret
insl
inc
addr16
bound
rolb
repz
cmp
sub
daa
cld
mov
xchg
sti
mov
std
je
cmpsl
mov
add
ljmp
and
push
mov
cltd
and
mov
dec
leave
xorb
lea
movsb
mov
test
mov
or
jae
clc
stos
sti
imul
mov
insb
cmp
ret
pop
or
lret
addb
test
add
ds
outsl
ret
stos
dec
mov
ss
test
pusha
inc
sbb
cmpsb
les
jle
cmp
fistps
jae
into
sbb
test
ja
rcrb
shlb
jp
cltd
dec
mov
inc
sbb
cmp
xor
cmp
gs
repz
sbb
fdivrp
aam
stc
lahf
insl
pop
add
sub
add
orl
mov
pop
je
push
fwait
push
cmpsl
dec
cwtl
add
das
les
test
adc
xor
dec
sahf
push
in
mov
mov
shll
scas
push
cmp
lock
push
push
xor
mov
xor
fsubr
cmpb
cmp
inc
in
lods
push
dec
loop
mov
cmp
repz
jne
and
sub
mov
fisttps
xchg
jl
or
inc
mov
sahf
cmp
push
stos
xchg
data16
in
mov
jmp
dec
inc
jge
and
jno
mov
jmp
mov
push
negl
loopne
xor
mov
xchg
xchg
fiadds
pushl
inc
cwtl
data16
push
mov
xor
or
and
mov
pop
jo
hlt
loopne
mov
fwait
dec
ss
enter
mov
pop
aam
xor
inc
ret
adc
ret
orl
ret
stos
test
int
push
jecxz
xchg
cmpsb
fstl
mov
mov
and
test
cmp
xchg
mov
xor
jbe
nop
arpl
mov
popf
inc
cmc
out
cwtl
mov
inc
cltd
nop
or
dec
dec
push
dec
stos
inc
stos
push
test
push
mov
and
mov
jg
ljmp
popf
xor
ror
inc
orb
add
shll
xchg
mov
les
scas
mov
lods
pop
sbb
aam
pop
test
push
mov
stos
mov
stc
xor
fimull
test
jl
mov
add
mov
pop
xchg
fnstenv
inc
out
je
and
fbstp
and
xchg
push
inc
sti
xor
jb
frndint
pop
inc
cltd
out
int3
pusha
push
mov
pop
or
xor
dec
mov
xor
or
mov
sub
stos
xor
adc
sti
mov
sub
push
mov
and
push
mov
sbb
lret
cltd
sbb
pop
sub
push
adc
mov
lds
movb
xchg
push
xor
adc
scas
mov
insl
mov
dec
cs
mov
popf
push
mov
ffree
push
cld
test
inc
pushf
push
cwtl
nop
std
daa
push
cld
push
lcall
or
mov
adc
cmp
push
xchg
and
and
push
mov
push
ja
mov
mov
andl
mov
pop
std
jne
js
push
daa
mov
lock
pop
cmp
decb
rclb
fdivrs
shrb
mov
mov
fdivs
pop
fsubs
mul
xor
mov
mov
or
add
sub
imul
out
stos
rcll
adc
add
adc
mov
fsubp
push
jne
sbb
sub
stc
add
stos
inc
jl
in
into
jecxz
test
pop
and
je
hlt
lods
out
cli
repz
ret
movsl
repnz
and
leave
fs
sub
fldt
push
in
dec
das
or
xchg
xchg
lahf
jp
loop
fsubrl
les
cmp
push
fldenv
sbb
add
addr16
stos
fs
lcall
fstpt
jmp
cmpsl
lods
mov
int
pusha
mov
sbb
into
mov
sbb
ds
loop
pop
jb
cli
adc
and
mov
test
mov
shlb
rcll
push
jns
mov
fiadds
inc
fs
movsl
ret
leave
cmp
mov
adc
aaa
mov
xchg
adc
int3
pop
or
mov
lea
pop
dec
pop
mov
ja
dec
mov
jle
mov
insl
xchg
movsb
cmp
sbb
ret
daa
cld
mov
sbb
repz
sbb
jle
rcrl
sub
dec
inc
pop
cli
xchg
cmpsl
dec
sbb
mov
sub
aad
dec
dec
lret
adc
mov
aas
dec
push
lret
iret
mov
jecxz
inc
jo
mov
ljmp
adc
in
ret
sbbb
push
cmpsl
pop
xchg
rcl
andb
push
loop
xchg
xchg
lret
lret
jb
dec
sbb
pushf
cltd
fisttps
dec
sbb
fwait
sbb
pop
lahf
sub
clc
add
paddq
lods
lret
sti
gs
roll
pop
rclb
push
ret
or
pusha
cmpsl
jnp
out
mov
sbb
rcr
jge
icebp
xchg
mov
jb
daa
adc
add
jo
push
add
repz
mov
inc
mov
jmp
jne
sahf
ja
mov
mov
jae
xchg
pop
call
aad
hlt
cmp
dec
jle
lahf
lret
jecxz
jns
adc
js
pop
mov
inc
sbb
add
or
shr
dec
outsl
lea
xlat
leave
push
lds
xchg
rorl
jp
push
inc
frstor
ret
push
cld
sub
stc
pop
daa
sbb
adc
pop
jge
xchg
mov
xor
sti
push
stos
fistl
mov
and
movsl
add
test
jb
ret
leave
mov
daa
inc
leave
loop
jb
pop
mov
jbe
shrl
mov
arpl
fsubrs
xrelease
cwtl
dec
and
bound
dec
pop
mov
int3
rcl
movsb
inc
inc
mov
rcrl
jno
out
sbb
mov
enter
ja
sub
daa
push
hlt
sbb
sub
ret
fildl
mov
pop
pop
xchg
push
add
ret
arpl
pop
les
xchg
pop
cmp
mov
jo
std
dec
test
add
nop
enter
add
mov
popf
fwait
cld
inc
int3
and
leave
faddl
or
sub
push
stos
mov
ja
and
test
pop
push
in
loope
test
pusha
std
mov
imulb
and
insl
cmp
pop
mov
inc
scas
jne
mov
stos
adc
dec
sub
test
mov
in
and
jle
mov
mov
popf
fists
jl
jo
sarb
mov
ror
sbb
in
or
cmp
mov
adc
pop
pop
mov
sbb
sub
out
aaa
pop
mov
gs
shll
scas
das
xchg
enter
aam
enter
sub
sub
pop
mov
fbstp
mov
ljmp
mov
pop
mov
popf
cmpl
clc
ds
and
mov
mov
xor
add
xor
ret
push
pop
xchg
insl
mov
popf
pushf
jbe
push
push
xchg
push
add
mov
std
cmpsl
dec
dec
sti
xor
clc
push
ret
notb
dec
testl
mov
push
mov
lcall
pop
imul
dec
xor
lret
push
jecxz
bnd
pop
pop
and
mov
jo
loope
rcrb
adc
xchg
adc
fstps
sub
cmp
mov
mov
cwtl
dec
and
mov
addr16
in
sbb
aaa
jg
call
inc
sub
inc
ret
ret
insb
lea
xor
repz
cmpsl
rol
push
sub
xchg
xor
add
dec
popa
push
push
push
inc
test
or
es
push
pop
outsl
jae
int
iret
out
jo
inc
push
inc
pop
push
sbb
inc
mov
sbb
inc
adcb
dec
or
jns
mov
insb
push
pop
mov
xchg
arpl
cmpsl
mov
xchg
mov
ss
pop
or
hlt
clc
mov
das
fsubrp
flds
dec
mov
pop
mov
xor
or
ficoml
jg
xchg
stos
std
lock
add
pop
xchg
jne
xor
push
adc
xchg
jns
out
je
and
fildll
cmc
pop
out
sbb
nop
adc
add
mov
mov
sbb
ret
inc
mov
ret
push
push
dec
inc
sub
outsl
or
jnp
cwtl
lea
xchg
dec
adc
adc
sub
inc
sbb
add
fstpt
mov
jmp
gs
xchg
ret
add
push
je
cltd
fmuls
mov
mull
in
and
fsts
mov
out
or
and
or
mov
inc
pop
iret
add
scas
movsb
out
enter
sti
pop
push
shlb
jne
js
rcr
ja
xchg
scas
pushl
sub
inc
push
icebp
mov
in
pusha
or
ficompl
push
call
or
out
push
push
mov
xchg
xchg
jmp
mov
sti
xchg
andl
inc
sarb
pop
add
mov
insb
xchg
mov
icebp
ret
inc
les
jbe
fidivrs
stos
jbe
les
push
sub
jmp
add
dec
notb
and
dec
pusha
sub
shr
pop
add
and
jne
dec
aas
mov
dec
pop
pop
aam
mov
mov
cmp
cmp
notl
repnz
dec
sbb
jne
rcrl
call
add
push
mov
cmpb
adc
fdivl
mov
movsl
mov
ja
das
loop
lret
sbb
jge
push
pop
movsb
flds
stos
push
lahf
fisubl
iret
mov
cmp
or
fsubr
stc
push
lahf
and
movsl
push
mov
xchg
mov
mov
add
pop
mov
loope
mov
lret
mov
dec
mov
cs
fwait
out
and
adc
repz
and
clc
cmp
xor
mov
sbb
test
adc
push
out
mov
pop
test
fistpll
cmpsl
mov
mov
out
mov
addl
add
or
int
test
pop
das
mov
dec
rcrb
adc
mov
popa
pop
test
pop
xchg
xchg
das
ficomps
jno
mov
and
sbb
lds
xor
and
clc
lods
leave
movsb
js
pushf
lret
movsl
ret
sbb
sub
stos
jb
in
and
push
and
nop
rol
vpsllq
dec
dec
lret
shl
xchg
inc
addr16
out
daa
dec
inc
jae
addb
lret
lret
out
inc
mov
pop
push
xor
jne
sbb
xchg
xchg
inc
fwait
dec
sub
inc
jge
fistl
mov
jmp
add
pop
sub
mov
sbb
adc
mov
rcr
pop
sbb
je
push
xchg
jp
inc
push
enter
les
xchg
mov
fwait
outsl
outsb
mov
mov
jp
xlat
mov
enter
jl
or
and
push
or
out
mov
ljmp
push
hlt
negb
push
stos
outsb
dec
lahf
stos
frstor
push
lahf
lret
jecxz
loopne
shrb
stc
jp
and
adc
stos
ret
push
sbb
sbb
gs
rcrb
mov
int3
jnp
dec
jge
add
pop
add
jmp
jg
filds
cmp
mov
mov
sub
lcall
in
dec
fidivl
add
and
imul
mulb
add
sub
aad
shlb
sub
jmp
scas
popa
and
and
mov
xchg
fisttps
sbb
clc
pop
mov
pop
rolb
mov
dec
and
sub
jbe
lea
jnp
sti
out
gs
hlt
or
je
push
int3
and
push
push
sub
jle
mov
xlat
mov
xorl
lret
orb
inc
cmp
jae
les
jl
fwait
lahf
hlt
jae
xchg
adc
dec
sarb
lock
popa
lret
inc
lods
mov
in
mov
test
push
xor
adc
ja
repnz
push
cmpsl
xchg
cld
hlt
dec
sbb
add
ja
xchg
aaa
ffree
rorb
lods
into
and
loopne
ret
or
add
inc
scas
mov
sbb
outsl
iret
fcmovbe
cmp
fistl
pop
mov
or
jnp
inc
js
xor
xchg
aas
lock
insb
outsb
es
leave
loop
cmp
adc
andl
inc
sbb
les
fsubl
adc
fptan
fwait
xor
ljmp
or
sbb
out
gs
ret
aad
roll
dec
fdivs
lds
and
lea
pop
pop
scas
push
adc
jle
pop
push
or
cltd
pop
dec
sbb
sub
add
and
and
sbb
loopne
ja
lret
add
test
or
mov
cmp
add
mov
imul
aam
mov
pop
or
les
or
xor
into
dec
sbb
popf
imulb
daa
xchg
test
mov
ss
cmc
sbb
cmp
mov
jb
lods
jle
sub
adc
pop
leave
js
push
repz
pusha
xchg
sbb
push
sbb
ljmp
and
cmp
jg
push
pop
xchg
les
mov
add
test
icebp
fsts
loop
ret
mov
or
mov
push
adc
dec
sbb
fdiv
sarb
inc
jecxz
dec
jge
pop
stos
shrl
mov
aas
lock
adc
dec
out
loop
mov
jle
cmp
scas
lock
add
lret
lods
sbbl
shrb
mov
scas
movsb
popa
ja
int3
cmpsb
push
scas
mov
xor
data16
xor
push
cmp
cmp
roll
push
push
push
xor
lret
mov
push
add
pop
fcoms
sub
mov
mov
in
bnd
addr16
cmp
jl
xchg
sbb
mov
inc
xchg
and
jb
adc
or
xchg
dec
and
add
mov
cmp
cmpsl
xchg
and
cmpsb
jo
test
and
fdivrl
call
pop
cli
mov
loopne
mov
sub
dec
inc
xor
sbb
mov
insb
mov
mov
stc
ja
add
loopne
out
and
mov
pop
push
popl
cmpsl
mov
mov
fwait
sbb
or
test
dec
mov
icebp
mov
and
rorl
jp
mov
sub
test
shrb
hlt
scas
dec
add
pop
sti
insl
mov
cmp
arpl
xchg
jp
and
test
fcompl
xchg
loop
cmp
pop
sbb
aaa
mov
sar
lods
lret
xlat
mov
scas
pop
xadd
pop
jbe
scas
jmp
leave
adc
mov
in
and
lcall
xor
les
mov
pop
sbb
ffree
sbb
dec
sbb
jb
dec
pop
cmpsb
fisubrs
mov
and
and
repz
mov
aas
daa
mov
fdivs
mov
insl
xchg
movsb
cltd
imulb
enter
into
lret
jle
jb
ljmp
inc
test
mov
test
cs
or
cmc
xchg
add
lock
xchg
inc
fstps
loop
and
test
mov
or
lock
shrb
shll
les
mov
dec
in
cs
mov
outsb
shrb
leave
push
insl
mul
xchg
popf
dec
sub
mov
cmpsl
dec
mov
xchg
insb
jne
cmp
repz
js
dec
mov
shrb
lds
imul
xchg
mov
or
and
sbb
mov
push
sti
lahf
jge
and
movsl
mov
fmuls
xchg
mov
inc
mov
in
sarw
jecxz
push
cmp
mov
dec
jnp
mov
rolb
lret
mov
cmp
inc
jmp
fisttps
cmc
or
pusha
jnp
ret
sub
xchg
push
clc
cltd
orb
xlat
aam
lds
stos
leave
ret
testb
sbb
pop
stos
sub
push
dec
lret
mov
lea
mov
rorb
jno
sbb
cmpsl
jno
notb
push
cmp
jae
mulb
dec
sub
imul
dec
push
cmp
inc
fcompl
lahf
fisubrs
inc
ret
cli
cmpsb
or
leave
movsb
mov
pop
sbb
pop
clc
sahf
adc
sub
repz
inc
sbb
add
sbb
fsubs
stos
and
call
xor
fldenv
mov
add
addl
shlb
jbe
jnp
adc
cltd
sub
add
dec
xlat
xchg
adc
inc
in
mov
cmp
pop
sbb
and
adc
test
and
divl
rcrl
lds
inc
cmc
movl
push
or
xor
jo
pop
fst
dec
scas
add
xor
sahf
sbb
into
mov
dec
and
sub
mov
call
and
lcall
movsl
int3
pop
adc
xchg
jae
repnz
cmpsl
or
xor
sbb
aad
stc
cmp
in
fcmovb
int3
jne
xchg
cmp
and
inc
bound
test
shr
clc
add
dec
mov
out
xchg
jg
daa
push
es
mov
cmp
xchg
dec
mov
sub
mov
bound
inc
fiadds
mov
jmp
in
jb
push
mov
outsb
xchg
enter
mov
push
cmp
leave
jecxz
enter
xchg
mov
aad
test
ljmp
push
stos
lahf
pop
stos
mov
or
fwait
lahf
lods
dec
call
fucomip
andb
in
inc
push
fadds
jp
or
push
dec
or
push
or
bound
lahf
lcall
sahf
sub
add
dec
pop
add
and
adcl
mov
add
test
ret
stos
sub
addb
xchg
inc
push
aam
xor
xchg
cmp
test
ret
adc
mov
and
pop
sbb
cld
cmc
cmp
pop
aas
add
je
fdivr
pop
inc
sbb
out
mov
fsubrs
ljmp
xor
cmpsb
push
lods
lods
jle
xor
sbb
inc
jmp
call
sahf
int
hlt
mov
addps
bound
test
outsb
or
push
addr16
push
pop
es
movsl
jbe,pn
pop
movsl
aad
aad
jb
pop
and
jle
pop
movsb
push
div
push
jp
pop
and
jmp
push
inc
pop
push
mov
inc
sbb
add
mov
dec
sbb
push
jp
outsb
push
pop
push
mov
push
adc
inc
pop
pop
adc
push
jne
pop
adc
cmc
sbb
xchg
mov
mov
imul
scas
or
lret
sub
push
pop
stos
ja
push
inc
lcall
jle
gs
dec
jnp
clc
sub
mov
ret
adc
mov
push
push
sbb
js
idiv
andl
jae
xlat
loope
repnz
fstp
sub
and
leave
xchg
xchg
cmp
mov
push
sub
dec
inc
loope
sbb
imul
es
cmp
hlt
inc
or
cmpsb
sub
lret
sar
inc
pop
das
das
cltd
das
sub
dec
mov
mov
imul
loopne
dec
scas
xchg
jmp
stc
sti
sub
sbb
js
jnp
mov
add
xchg
mov
push
add
movsl
mov
push
adc
movsl
adc
push
and
mov
roll
mov
mov
xorl
dec
mov
xchg
test
adc
xchg
test
mov
xchg
inc
aad
inc
fcmovnbe
test
inc
sbb
pop
insb
sahf
pop
ss
mov
movsb
mov
aad
sarl
js
mov
loop
or
inc
adc
xor
mov
add
dec
inc
shlb
fistpl
fstp
inc
sub
cmp
mov
add
mov
pop
fidivrs
jo
push
mov
and
adc
iret
mov
push
mov
mov
jmp
jge
in
jb
mov
push
mov
aam
mov
jb
pushf
ds
nop
int
mov
or
inc
mov
push
fmull
mov
lcall
jns
fs
es
sub
push
xor
inc
scas
add
jmp
push
jmp
lahf
pop
xor
mov
mov
pop
roll
jge
mov
js
stos
pop
add
jns
hlt
and
pop
jns
loope
movsb
fstl
xor
xchg
cmp
repz
or
int
or
xor
dec
or
ret
adc
inc
repz
dec
and
xor
dec
lods
sub
mov
sbb
gs
out
xor
js
bound
and
cmpsb
pop
xor
pop
hlt
data16
repnz
cs
int
mov
daa
lods
daa
cmp
mov
or
and
pop
movlps
loopne,pt
iret
and
in
xchg
xchg
cmc
cmp
xchg
add
das
jo
stc
or
shlb
jmp
or
xor
mov
cmpsb
mov
cmp
push
inc
lcall
dec
sbb
adc
inc
outsb
inc
movsb
scas
in
dec
daa
cmp
pop
rcrl
push
nop
popf
daa
push
lds
dec
adc
mov
lods
mov
mov
stos
sbb
push
xchg
xchg
inc
dec
gs
cmc
in
cmp
cmpsl
addr16
add
and
fisubs
mov
subl
and
mov
cmpsb
add
dec
push
rolb
negl
inc
lahf
test
add
mov
lcall
push
inc
inc
out
xorl
mov
cs
test
lcall
jnp
mov
jno
push
rorl
mov
int3
inc
out
orl
xchg
mov
or
lcall
arpl
outsl
mov
xor
pminub
pop
mov
or
sub
iret
clc
jge
div
test
sahf
jp
in
pop
inc
cltd
jmp
inc
jge
popa
xchg
pop
js
mov
xchg
ret
adcb
pop
daa
dec
jmp
xor
testl
fistl
cmpsb
dec
mov
nop
push
push
fidivs
std
add
xor
test
fwait
leave
xchg
addl
adc
pop
sub
frstor
adc
rorl
fists
sti
loop
lods
ret
arpl
pop
mov
cmpsb
inc
fnstsw
enter
xor
cmpsb
xchg
sub
addr16
test
daa
lret
mov
dec
iret
pusha
outsl
add
test
rcr
lds
add
in
lds
mov
jnp
mov
pop
mov
adc
xor
jno
fmull
dec
les
notb
mov
lret
xchg
pop
sub
mov
mov
pop
and
scas
mov
movsl
xor
sub
das
mov
shr
cmpsb
cmpsl
xchg
in
addb
mov
jge
es
xchg
data16
stos
mov
jns
xchg
lret
mov
xchg
lea
loopne
sbb
sti
iret
lods
arpl
pop
xlat
xchg
sbb
test
in
sub
lea
stos
xchg
shrl
enter
imul
mov
push
cmpsb
push
pushf
xchg
cmpsl
movsl
xchg
mov
cs
mov
in
mov
push
cmc
fmuls
dec
push
and
mov
pop
jbe
mov
sub
sub
stos
les
sbb
lret
rcrl
cmp
jb
xchg
jl
lahf
jmp
xor
or
adc
and
dec
inc
jmp
or
fs
xor
cwtl
xor
xor
loop
idivb
adc
push
ficompl
inc
fcom
inc
mov
insl
jae
add
test
pop
sub
jl
incb
push
push
mov
mov
js
xor
fnstcw
jecxz
pushf
std
iret
ret
cwtl
mov
fnstcw
cmpsl
iret
stos
xchg
xchg
and
pop
popa
adc
data16
jg
addb
out
jbe
cmpsl
mov
pop
test
jmp
sbb
mov
imul
inc
mov
pusha
pop
scas
loopne
sub
aam
enter
pop
lods
rorl
inc
cmc
fsubrl
fldcw
test
cld
mov
stos
das
pop
mov
cld
arpl
mov
sarl
in
in
movsb
push
jo
fdivrs
mov
pop
mov
dec
cld
push
outsb
jno
test
jle
sbb
sbb
cltd
cmc
dec
sbb
in
mov
xor
mov
rcrl
dec
mov
sbb
test
mov
xor
in
pop
stos
mov
mov
cli
jecxz
pushf
ffree
pop
mov
scas
dec
cmp
in
in
scas
inc
fs
or
cmpsb
xchg
adc
inc
sbb
movsl
out
lds
fwait
imul
cwtl
dec
and
dec
movsl
jge
pop
test
testl
jno
das
inc
mov
gs
jb
xlat
fsts
mov
lret
scas
lahf
jp
push
sub
jne
dec
cmpsb
inc
aaa
xor
pop
stc
js
inc
mov
test
push
xchg
add
sbb
imul
and
inc
pop
xchg
jecxz
add
jbe,pn
mov
xor
inc
int3
out
mov
mov
dec
jno
popf
and
push
leave
movsb
add
stos
push
hlt
dec
imul
shrl
insl
ljmp
pop
xchg
arpl
pop
jns
xor
imul
scas
xchg
mov
in
xchg
stos
mov
mov
cmpsl
push
lahf
cmp
int
mov
jmp
fildl
stos
enter
pop
xchg
loop
inc
repz
pop
sbb
or
jmp
push
stc
fiaddl
sbb
sbb
gs
push
arpl
testl
jb
fs
insl
not
enter
enter
xchg
enter
jns
jle
xchg
inc
sub
jne
dec
mov
adc
inc
mov
adc
xor
mov
fcmovbe
ret
loopne
stos
mov
mov
lret
test
ror
or
cltd
push
test
sub
cld
rol
sbb
push
sub
clc
push
outsl
jno
popf
xor
mov
mov
outsb
mov
adc
test
jmp
and
adc
movsb
shrb
cwtl
dec
mov
mov
and
sub
mov
rol
popa
idiv
fcomps
mov
leave
add
idivb
aad
mov
call
dec
push
xchg
loop
inc
xchg
mov
cwtl
fldl
inc
out
sub
mov
lret
cld
gs
push
aam
pop
push
xchg
mov
fmull
sub
mov
xchg
sbb
jb
pop
std
push
fcmovnu
cmp
out
test
out
sub
cmp
jp
test
jne
cmp
inc
pop
adc
scas
pop
stos
les
loopne
jmp
fstpt
repz
ds
hlt
pusha
cltd
es
mov
sahf
xchg
and
push
mov
sub
lret
movsl
jle
sbb
pop
adc
pop
hlt
dec
loopne
cmpsb
shrl
xchg
mov
mov
in
jl
cmpsl
xchg
fmuls
xchg
dec
out
or
xchg
fs
mov
pop
stos
inc
adc
mov
mov
std
iret
ret
mov
cmp
stos
xchg
xchg
sub
inc
movsl
aaa
and
or
inc
test
rclb
sarb
xchg
or
movsl
ret
xor
rcll
mov
adc
ret
fnstenv
fisubrl
enter
jae
inc
mov
jg
mov
adc
dec
mov
dec
jmp
mov
das
xor
cmp
xor
mov
mov
jne
sub
mov
test
pop
andl
push
popf
and
rorb
andl
xchg
mov
cli
stos
in
popf
pop
mov
fwait
xorb
fcompl
or
imul
mov
or
xor
icebp
test
pop
nop
nop
shl
adc
shl
mov
lcall
stc
lock
sbb
inc
inc
enter
fcmovnu
into
ds
js
lea
jno
andl
push
mov
sti
sbb
add
jecxz
fdiv
and
daa
rorb
push
push
xchg
mov
ds
test
xchg
dec
jb
pop
sti
fsubs
pop
cmp
call
shrb
jns
push
xor
test
xor
dec
and
lcall
pushf
fsubr
mov
cmc
and
pop
sarl
call
dec
jmp
scas
push
push
adc
in
ds
cmp
sbb
es
sbb
add
cmc
adcl
in
adc
add
mov
test
lahf
pop
adc
scas
aaa
lret
fnsave
pop
call
lret
or
or
pop
mov
daa
mov
popf
dec
dec
sbb
cmp
mov
push
js
push
div
inc
jo
jmp
imul
cltd
leave
jno,pt
mov
inc
fwait
out
fs
mov
or
add
mov
xor
sbb
addb
xchg
je
adc
push
loop
jge
cli
jae
pop
insb
lcall
cmp
push
jo
mov
add
dec
fs
mov
push
scas
add
dec
sarl
pop
rcrl
ret
mov
mov
push
mov
daa
mov
mov
in
sub
mov
ret
push
xchg
inc
sbb
hlt
lret
inc
mov
ret
and
ljmp
push
test
scas
xchg
mov
ficoml
dec
mov
scas
fldt
inc
or
xchg
test
pop
mov
fs
daa
sbb
jmp
xchg
stos
std
xor
out
mov
sti
mov
inc
sbb
ficoms
fwait
iret
jecxz
mov
scas
ljmp
ljmp
repnz
jp
mov
adc
xchg
xchg
xchg
pusha
jno
stc
fisubrl
dec
in
adc
push
popf
es
and
es
testl
scas
cmp
sbb
push
stos
xchg
mov
int3
popl
or
adc
fldcw
add
inc
sub
mov
mov
mov
sti
mov
repnz
int3
mov
call
jno
sbb
orb
and
fsubrl
mov
outsl
in
cli
ljmp
mov
stos
pop
test
dec
outsb
ja
movsb
shrl
xchg
test
scas
fldt
push
or
insl
or
dec
icebp
push
scas
xchg
fiaddl
inc
or
push
mov
movsl
xchg
jmp
jno
jno
fldcw
mov
fidivrs
addr16
and
pop
loop
xchg
add
add
adc
mov
test
movsb
pushf
mov
call
sbb
or
out
cmp
mov
test
xchg
cmp
hlt
sub
sbb
mov
mov
cmpsl
lret
sar
gs
clc
aad
subb
rclb
mov
mov
fwait
pusha
mov
mov
jo
fwait
inc
aaa
or
ret
mov
xchg
add
add
mov
aaa
jno
dec
lahf
adc
mov
and
int3
push
sarl
ficoml
pop
lea
call
aas
xor
repz
je
lods
xor
shrb
test
repz
in
xchg
stos
inc
inc
inc
or
rorl
xchg
xchg
cmpb
mov
pop
mov
loop
mov
call
mov
rcl
xchg
sbb
xchg
and
lcall
addb
jmp
xchg
push
pop
stc
xchg
cli
inc
push
loope
mov
pop
jns
movsl
cs
lahf
and
sbb
hlt
mov
sbb
aaa
ret
mov
cltd
pop
push
mov
push
push
push
js
sbb
push
daa
setae
add
fistl
insb
or
rcrl
sbb
mov
adc
bound
cwtl
jo
jmp
mov
lea
aam
and
cmp
jno
push
mov
xchg
cmp
jnp
pop
sub
lret
mov
jae
mov
fnsave
into
cmp
lods
inc
divl
inc
inc
mov
test
add
xchg
lods
outsb
lods
sub
mov
dec
push
outsb
enter
imul
aas
jbe
popf
xchg
cld
scas
lds
mov
scas
mov
mov
cmc
push
xchg
sbb
js
pop
add
dec
gs
pushf
dec
xchg
ret
inc
cwtl
outsb
test
hlt
stos
cmpsb
inc
stc
test
sub
push
and
fbld
arpl
popf
jne
push
adc
and
or
mov
push
or
xchg
jns
test
mov
rol
dec
cmp
insb
jb
ds
pop
mov
stos
cmp
repz
ss
outsl
in
int3
mov
cmp
inc
pop
repnz
cmpsb
ret
cmp
cwtl
pop
outsl
ljmp
ds
negb
loope
push
sub
jge
ljmp
push
idivl
fs
test
dec
sar
in
and
test
sbbl
lcall
push
stos
xchg
mov
in
pop
scas
jb
das
pop
xchg
or
cltd
lods
roll
push
mov
cwtl
in
mov
leave
loop
inc
xchg
and
pop
push
sbb
je
or
jns
pop
sbb
xor
out
fwait
jg
or
push
jp
lods
ret
mov
fisttpll
sbb
push
call
addr16
mov
rclb
inc
mov
or
jmp
fcom
repnz
shlb
fcomi
mov
push
popa
push
test
arpl
stos
cmp
idivl
xor
movsb
int
mov
inc
jnp
mov
inc
rorl
add
mov
jns
push
inc
enter
fsubrl
imulb
test
dec
dec
les
jge
pop
jae
jl
ret
cmpsl
fs
push
dec
xor
xor
xchg
test
mov
pop
and
mov
mov
jmp
ret
fwait
cmpsl
dec
je
sub
loopne
call
xor
les
out
inc
fwait
leave
or
arpl
shlb
sarb
add
add
xchg
std
addr16
les
push
xchg
mov
pop
xor
jnp
imul
inc
shl
ret
cmpsb
movsl
xchg
stos
add
fwait
xlat
inc
cmp
push
mov
mov
inc
mov
push
mov
dec
imul
enter
leave
cs
sub
nop
std
xlat
mov
push
xor
ret
jns
loopne
es
sbb
ret
push
ret
sahf
lret
and
jb
mov
rcl
rcrb
das
or
sbb
cmpb
repnz
lahf
mov
int
inc
add
test
mov
cmpsl
inc
mov
lret
fstl
fildl
test
xchg
pushf
cmpsb
into
dec
jl
mov
mov
outsb
sbb
addb
push
or
push
stos
inc
sbb
jne
dec
xchg
cmpsb
add
xchg
out
pusha
mov
jmp
ficomps
into
aaa
jae
stc
shll
jecxz
add
cwtl
push
adc
jb
mov
fwait
xor
mov
add
je
add
or
push
cltd
das
fisubl
lahf
xlat
js
call
sbb
jo
push
pop
sub
dec
push
add
lret
gs
add
inc
ret
mov
pop
stos
scas
pop
stos
jnp
cmp
dec
inc
xchg
push
jg
gs
mov
lret
hlt
mov
xorl
sahf
ret
mov
and
shlb
add
xor
mov
mov
add
inc
in
or
xorl
pop
dec
and
popf
lret
mov
test
sbb
sub
sbb
add
push
mov
jge
dec
aad
mov
inc
lcall
flds
push
mov
cli
lahf
scas
movl
xor
cmp
push
lahf
fcomi
arpl
add
sub
mov
inc
mov
sbb
sbb
out
ss
idiv
xchg
and
insl
xchg
and
mov
fwait
insl
xlat
or
jb
cmp
scas
jecxz
push
mov
fsubp
mov
aam
jmp
mov
sbb
inc
cmpsb
sub
inc
rol
idivl
les
mov
loopne
fwait
add
adc
scas
hlt
xor
and
pushf
ret
jbe
std
mov
gs
fldenv
cmp
mov
iret
aam
jmp
xchg
inc
mov
mov
cld
mov
je
scas
inc
fadds
pop
or
repz
inc
and
or
cmp
mov
icebp
adc
shll
mov
sahf
adc
outsb
dec
jg
mov
jmp
popa
push
andl
dec
push
xor
dec
stos
out
dec
les
ret
out
insb
inc
or
in
jg
mov
push
add
dec
adc
lds
inc
in
xor
xchg
popf
popf
popa
pop
daa
xchg
inc
mov
cltd
mov
jge
add
push
icebp
sbb
adc
mov
lea
fiadds
mull
adc
sub
mov
and
into
and
mov
sbb
lds
cmp
lret
sbb
popa
sub
test
shl
sub
ret
pop
xor
js
add
cmc
inc
pop
push
push
insl
scas
xchg
stos
testl
and
jns
push
sbbb
add
popa
adc
leave
in
push
hlt
arpl
mov
mov
clc
jb
add
stc
repnz
and
sub
jl
mov
fidivrs
mulb
jb
sti
loop
push
lea
fdivrl
insl
jmp
daa
jmp
mov
icebp
jo
loope
sub
bound
sbb
lret
add
sub
xchg
fwait
push
cmp
inc
pop
pop
xchg
and
loop
fdivl
shrb
push
pop
cmpb
mov
mov
imul
jl
mov
and
xchg
sbb
scas
mov
push
cmp
pop
call
cmc
mov
es
cli
xor
stc
mov
les
adc
sbb
fsubs
xchg
iret
pop
inc
sbb
fstps
lods
shrb
lret
push
mov
pop
pop
jo
in
aad
notl
or
mov
inc
or
or
cmp
dec
ds
and
xor
fcomip
inc
arpl
inc
add
lds
mov
fidivrl
insl
in
insb
push
mov
lea
outsl
or
int
in
jns
jbe
jecxz
push
and
je
cmc
lea
mov
adc
popa
adcl
adc
adc
or
out
mov
in
xchg
add
mov
mov
add
iret
cmp
scas
shlb
movb
jl
lock
fdivr
push
addr16
pop
loop
inc
in
mov
shrl
jle
mov
jnp
push
jecxz
xlat
repz
push
jl
or
data16
int
push
mov
mov
and
and
pop
jbe
xor
pop
cmc
cmp
jb
xor
roll
dec
fists
jl
jecxz
sbbb
xchg
aam
jg
aam
mul
call
lahf
out
aad
insb
xchg
mov
repz
cmpb
pop
jns
out
nop
dec
movsb
inc
sbb
pop
out
mov
ds
lea
icebp
adc
push
push
lods
xchg
loope
mov
rclb
shl
inc
es
inc
mov
push
repnz
ficoms
mov
arpl
fptan
add
sbb
insb
jns
std
sahf
dec
lahf
in
jae
add
xor
loopne
jnp
push
add
cmpsl
sarl
int
add
dec
inc
push
adc
jb,pt
pop
inc
std
out
jge
lahf
jle
push
aad
jp
dec
xchg
lcall
mov
add
nop
push
mov
adcl
lods
inc
sbb
stos
sbb
dec
inc
pop
pushf
ret
movsb
pusha
aad
pushf
mov
dec
ror
js
add
icebp
xor
sbb
push
into
and
add
fsub
jns
or
sbb
and
call
mov
push
test
sub
les
inc
mov
adc
jno
inc
cmp
int
leave
pusha
rcll
or
xchg
loope
out
fcom
je
xchg
punpckhbw
sbb
addr16
repz
stos
push
pop
subb
mov
rcrl
xor
dec
and
iret
mov
jg
in
inc
lods
cltd
scas
adc
or
mov
mov
mov
sarl
or
sbb
into
pop
cmpsb
pushf
mov
stc
cld
xor
and
std
andl
sar
fwait
ret
push
stc
pop
xchg
add
cmp
add
ljmp
gs
js
mov
lcall
outsb
add
sbb
mov
movsb
cmpl
loop
xchg
cmp
aas
pop
mov
push
xchg
xchg
sub
xor
icebp
iret
mov
aam
pop
mov
loope
out
cmp
std
mov
xor
clc
in
pop
mov
arpl
aas
xchg
enter
inc
sbb
js
out
mov
sbb
sub
scas
xchg
cltd
push
imul
loop,pt
int
xchg
ja
inc
hlt
mov
jae
jne
and
les
iret
fwait
mov
imulb
xchg
mov
mov
iret
or
jecxz
push
mov
in
clc
inc
push
call
out
out
jb
push
leave
mov
ja
push
in
aad
push
or
insl
sbb
cltd
or
cmpsb
xchg
arpl
pop
add
imul
jnp
and
imul
pop
mov
aad
daa
in
fiaddl
mov
inc
xchg
cmp
mov
popl
inc
push
push
imul
subl
jbe
rcr
mov
stc
repnz
xchg
fistl
push
cmp
pop
ja
fistps
cmp
xchg
aam
fisubs
mov
push
push
int
xchg
inc
dec
mov
cwtl
jle
sti
dec
sub
push
repz
and
aad
lea
push
jne
enter
sarl
xor
and
repz
push
popf
lret
mov
popa
gs
cmp
adc
es
xchg
pushf
fmull
lods
push
hlt
dec
fsts
and
test
stc
pop
sbb
jg
stos
sub
outsl
cmp
xchg
mov
dec
data16
int
adc
xchg
imul
xchg
sub
into
push
sbb
mov
mov
jecxz
fwait
scas
subb
movsb
sub
xchg
cld
sbb
sti
and
sub
clc
jb
adc
adc
adc
adc
addr16
test
bound
lahf
insb
jne
mov
bnd
mov
jnp
inc
jbe
jbe
fstl
out
xor
loopne
rcrb
xchg
into
es
aam
movl
sub
add
dec
sbbb
inc
sbb
int3
sahf
rcll
popa
xchg
repnz
mov
clc
into
lods
test
sbb
imul
ret
ret
pop
jno
jge
inc
pop
push
fcompl
jecxz
sbb
mov
outsl
sub
dec
in
mov
adc
fists
ljmp
lret
xchg
test
dec
gs
out
jns
outsb
into
xor
mov
add
insl
mov
scas
addl
fcomps
pop
pop
pusha
lret
test
fcmovnu
pop
xchg
push
pop
xchg
pop
add
xor
pop
out
xchg
dec
mov
pop
sbb
adc
jmp
cwtl
and
inc
test
jmp
mov
lea
sbb
mov
hlt
add
or
out
mov
dec
in
push
mov
lea
mov
fists
pop
xor
mov
clc
int3
sub
repz
mov
punpckhdq
cmp
mov
inc
fcomps
mov
in
scas
xor
sbb
scas
cwtl
sub
xor
add
nop
mov
add
jne
test
sub
popf
cmp
fs
fstl
repz
ljmp
pop
clc
mov
cmpsl
stos
pushf
aam
testb
mov
nop
push
adc
sub
ds
daa
mov
icebp
adc
int
xchg
mov
aam
js
enter
pusha
loop
and
test
xor
ljmp
inc
scas
mov
filds
mov
mov
mov
push
out
sbb
pop
ds
enter
lahf
jg
cmp
push
shlb
add
pop
or
push
xchg
imul
ret
mov
mov
fwait
in
aaa
stos
cmp
cmova
cmc
es
rol
fdivr
pop
mov
lahf
adc
jae
mov
out
je
xchg
enter
inc
push
dec
xlat
cmpb
sbbl
jnp
js
cmp
mov
inc
lahf
xchg
pop
cmp
shrl
mov
push
scas
pusha
push
enter
dec
gs
dec
ror
scas
xchg
mov
mov
sub
push
sbb
push
cmpsl
cmp
js
insb
push
mov
cmpsb
jle
cmpsl
dec
or
stos
cmp
jno
pop
mov
jmp
mov
cmpsb
push
mov
add
sbb
into
cli
cltd
jmp
pop
or
jl
mov
rcl
and
mov
mov
mov
jmp
mov
lods
jb
icebp
dec
test
mov
mov
push
pop
mov
mov
mov
sbbb
cmp
fildl
push
popa
xor
adc
push
dec
pushf
push
sub
lahf
test
sub
insl
shlb
mov
call
push
pushl
ss
mov
inc
adc
or
pop
fbld
lcall
dec
cmp
dec
push
pop
enter
movsl
scas
sbb
cmc
add
sahf
scas
add
or
mov
or
mov
mov
jae
pop
aam
les
pop
mov
subl
add
aad
inc
xor
and
rolb
push
mov
fwait
jne
pop
dec
imul
push
inc
mov
dec
mov
pushf
sbb
adc
mov
mov
shr
xor
mov
scas
jmp
in
jmp
xchg
hlt
add
and
les
mov
andb
sub
jp
adc
stos
enter
mov
push
icebp
xor
mov
mov
out
stos
ljmp
adcl
push
bound
xchg
sbb
mov
sub
sbbb
jne
and
xor
das
stos
dec
mov
mov
test
push
push
pop
test
cmp
mov
mov
xchg
cmc
mov
movsl
jle
xlat
decb
jle
add
or
lea
push
imul
andb
jp
mov
pop
mov
rcl
test
mov
sarb
insb
stos
xchg
scas
in
mov
inc
mov
lea
mov
inc
push
inc
sbb
inc
outsl
lock
cmc
test
mov
clc
sub
pop
add
fwait
lahf
hlt
jae
jnp
mov
jnp
shlb
sub
inc
stc
loop
les
inc
mov
adc
movsb
orl
cwtl
out
dec
mov
into
hlt
test
mov
push
mov
outsl
les
or
xchg
jbe
mov
add
dec
fistpll
push
scas
xchg
inc
add
lret
push
push
and
sbb
sub
fcoms
sub
add
push
mov
or
rorl
pop
push
xchg
add
ds
fdivs
add
shlb
test
rclb
out
inc
jp
mov
dec
imul
iret
fmuls
cmp
call
mov
aad
or
dec
test
or
adc
xchg
xor
push
mov
cmc
lods
popf
mov
pop
rcll
xor
mov
sahf
mov
jle
paddusw
jo
mov
add
insl
lahf
mov
mov
dec
leave
fsubrl
das
leave
cmc
mov
in
loop
adc
mov
sbb
pop
lcall
jge
mov
add
js
cli
aaa
daa
mov
arpl
xchg
rcll
fstpl
or
sbb
adc
add
arpl
fldcw
cli
add
aad
xor
insb
mov
pushf
cmp
xor
jae
or
pop
mov
stos
sub
andl
adc
sti
inc
push
jo
lds
clc
fcoms
movsl
ret
loopne
push
sbb
and
call
cmpsl
int
fsubl
cmpb
insb
sbb
mov
inc
shr
ja
fimuls
shrb
add
jno
gs
cmpl
mov
imul
mov
sti
mov
lock
inc
jns
inc
mov
lock
pop
movsb
and
mov
mov
icebp
adc
sub
dec
sub
jns
stos
mov
movl
sbbl
lods
push
inc
push
pop
dec
pop
loopne
test
mov
jb,pt
xchg
add
mov
jnp
pushf
xchg
mov
dec
sbb
scas
pop
xor
jno
lahf
fists
pop
pop
sbb
mov
add
mov
adc
mov
adc
rolb
sub
bound
ret
into
sbb
lret
dec
mov
or
in
push
fcmove
data16
dec
pop
orl
mov
add
lret
xor
sub
cmp
imul
addr16
bound
fstl
repnz
and
and
mov
cmpsb
or
ss
jo
or
idivb
sbb
dec
gs
sbb
enter
in
sub
js
mov
in
sub
leave
or
mov
xchg
fcmovnbe
push
pop
lods
mov
pop
into
jge
mov
lret
fisttpl
icebp
mov
imul
mov
add
into
push
mov
add
cmpsl
xchg
insl
add
dec
jo
lahf
scas
movl
push
add
jb
rcrl
adc
jbe
pop
adc
dec
add
push
imul
in
test
arpl
inc
je
push
push
dec
push
js
aam
int3
jge
inc
and
fwait
push
mov
fnsave
out
sub
jmp
and
push
bound
pop
mov
roll
sbb
pop
aaa
hlt
sub
icebp
xchg
mov
pop
and
ret
fistpl
mov
clc
cmp
ret
jg
mov
pop
sub
aas
or
jbe
adc
pop
push
dec
or
push
jne
inc
cli
stos
dec
mov
lds
in
mov
into
adc
pop
cli
sbb
pop
bound
les
dec
mov
pop
add
stos
aad
imul
rorb
or
jbe
sub
jmp
test
in
mov
out
xchg
inc
out
push
push
daa
mov
xor
jo
ret
sbb
dec
and
jno
xchg
adc
dec
jae
fisttpl
mov
dec
rcrl
stos
pushf
addb
mov
and
cwtl
cmp
mov
addr16
inc
jo
xor
jnp
mov
pop
lock
xchg
push
fs
cmpsb
popa
mov
scas
dec
mov
rclb
nop
sub
sbb
sti
mov
js
mov
adc
sbb
cmova
out
leave
fsubl
pop
mov
and
dec
inc
cmpsl
shl
cmc
xor
lds
repnz
jbe
mov
fists
shr
fxam
add
inc
cmp
mov
add
sub
xchg
stos
mov
mov
add
std
push
push
shr
adc
lahf
scas
jg
push
inc
sub
loop
add
push
jb
and
mov
stos
mov
sbb
mov
fdivs
or
int
mov
fnsave
mov
jecxz
stos
pop
cmp
outsb
or
xor
mov
shlb
fwait
xorb
enter
fwait
inc
jmp
jb
rol
push
in
aam
cmp
dec
and
push
cmp
xor
mov
ret
inc
loope
push
iret
ret
or
mov
sbb
cmp
sti
lods
rcrl
xchg
aas
add
mov
xor
insl
movsl
lret
fisubrl
outsl
pop
mov
js
mov
outsl
mov
add
jae
mov
xor
mov
adc
xchg
push
xlat
outsl
into
inc
sbb
jge
add
xchg
popf
addr16
ret
call
or
cli
sbb
jg
mov
daa
test
mov
fmull
mov
sti
jg
push
push
xchg
inc
inc
adc
stc
mov
fsubs
adc
mov
out
sub
sbb
sahf
ljmp
ficoml
lea
xor
leave
sbb
mov
enter
ret
jl
fldt
push
repz
xchg
sub
jle
cmp
jb
into
sbb
in
repz
popf
xchg
dec
adc
pop
push
iret
cwtl
dec
mov
fildl
lret
jecxz
in
stos
xor
mov
popf
jnp
and
sahf
insb
insb
cwtl
dec
movsl
mov
in
inc
pop
js
cmp
xchg
fs
inc
pop
fnsave
xchg
mov
in
mov
fs
jae
aam
repnz
adc
adc
xchg
mov
cmp
sti
jne
and
mov
scas
xor
push
mov
aad
lods
popf
inc
sti
xchg
mov
mov
cli
jnp
inc
mov
or
pop
orl
testl
xchg
imul
stos
or
mov
mov
push
xor
xor
fisubrs
leave
and
pop
sub
mov
dec
mov
add
out
push
out
ret
stos
decb
mov
sbb
scas
jbe
inc
aad
repz
jg
inc
and
xor
std
push
loop
mov
push
out
mov
test
xor
xor
movsb
pusha
scas
xchg
xchg
jp
bound
rolb
mov
xchg
inc
and
push
popf
and
dec
or
adc
lods
divl
aam
sahf
shlb
pusha
push
adc
xchg
or
fldt
push
stos
bound
cmp
test
insb
into
and
out
jmp
in
cmc
cmpl
cmc
call
mov
and
nop
arpl
xor
push
popa
and
sbb
mov
cmp
mov
mov
cs
mov
adc
inc
rcll
aam
xor
movsb
push
cld
push
inc
push
leave
push
and
pop
cmc
fdivrs
sbb
inc
or
pop
jo
lcall
adcl
repz
das
mov
sbb
xor
xlat
daa
push
mov
or
js
xchg
adc
enter
scas
dec
xor
push
dec
sbb
imul
dec
sub
out
cmpsb
mov
lahf
jl
repz
fucomip
inc
arpl
lds
add
das
fsts
jne
lds
jge
mov
imul
and
jbe
in
mov
int3
repnz
xor
inc
fwait
leave
in
test
and
pop
and
sarb
into
and
lcall
push
mov
mov
imul
outsb
mov
leave
sahf
outsl
pop
rol
punpckldq
repnz
jle
sub
xor
xchg
inc
shlb
pop
push
test
aaa
adcl
cmp
jne
inc
movsb
sub
daa
lods
adc
cmp
mov
dec
mov
push
jg
rcrb
cmp
outsl
icebp
daa
fyl2x
inc
data16
inc
inc
dec
js
in
adc
and
adc
and
mov
addl
or
mov
mov
add
jae
ss
mov
inc
jecxz
testl
stos
roll
mov
lea
clc
push
lcall
jae
fsts
xchg
lret
jp
cmp
scas
jg
sar
icebp
cltd
jle
lahf
mov
add
inc
lret
in
sub
xchg
fnsetpm(287
sbb
std
pusha
bound
xor
pop
mov
fwait
xor
cmpsl
jae
mov
mov
add
sahf
pushl
dec
mov
and
stc
je
or
xchg
pop
inc
stos
in
pop
xchg
xchg
jae
lcall
cmp
insb
test
adc
sub
or
and
mov
test
cmpl
jae
mov
pusha
jnp
arpl
stos
repz
adc
add
xor
or
lods
pushf
dec
lret
xchg
mov
movsb
sahf
cmpsl
dec
push
jg
mov
pushl
cmp
fucomp
pushf
jg
lods
mov
ss
loopne
cmpsb
jae
hlt
inc
into
cmpb
insl
sbb
cmp
popf
mov
mov
stos
xchg
fcmovu
mov
pop
int
movsb
cmp
push
fisttpll
lods
mov
lcall
movsb
sahf
popf
mov
add
adc
sub
pusha
enter
add
push
subl
mov
mov
and
je
aad
sbb
fildl
and
cmp
and
cmpsl
icebp
push
ret
sbb
outsb
push
xchg
outsl
mov
leave
mov
and
mov
aas
std
sarb
adc
jp
cmpsb
inc
rcll
sar
popa
scas
aam
mull
mov
enter
into
repz
das
mov
lock
mov
mov
xor
pusha
mov
inc
xor
jmp
je
sbb
or
and
or
sarb
mov
sub
or
push
call
xchg
xor
push
sub
mov
xor
ret
xorl
jnp
lods
hlt
stos
mov
sub
sbb
mov
push
test
or
push
or
dec
daa
pop
insl
mov
sti
and
daa
xor
sub
inc
pcmpgtw
inc
sub
mov
lcall
fisubrs
xlat
pop
in
xor
mov
jp
mov
cmpsl
les
out
cmp
sub
xchg
lea
js
cmp
push
inc
xor
jmp
iret
or
into
xor
fmull
mov
sbb
and
neg
out
xor
push
add
jecxz
aad
test
pop
sub
and
mov
out
data16
je
jno
dec
mov
fiaddl
inc
fimull
jne
xor
mov
jae
clc
insl
rclb
xlat
cmp
sbb
bound
call
mov
inc
decl
mov
dec
sbb
pop
leave
fistpl
mov
loop
sbb
popa
pop
in
dec
loope
cmc
xchg
cmp
ja
bnd
push
pop
aas
cmpsl
fcomip
lods
std
jle
sbb
jae
add
mov
fs
mov
pushf
clc
sbb
mov
sbb
lock
dec
mov
outsb
and
mov
jl
mov
hlt
cmp
mov
jne
push
stos
push
leave
push
cmp
mov
pop
mov
popa
rcrl
xchg
aas
mov
ffreep
or
xor
sbb
test
mov
stos
add
pusha
lods
xor
or
js
xchg
adc
call
fs
divb
push
and
imul
jae
lret
aas
pop
movsb
jecxz
jb
xor
push
xor
ret
mov
dec
addb
add
fmull
inc
jno
sbbb
aas
jbe
scas
and
mov
bound
out
or
fwait
call
mov
inc
or
jno
popl
mov
in
subl
jno
jns
daa
enter
shll
fwait
outsb
aam
sti
pop
lcall
pusha
rclb
fcomi
pop
daa
aam
aad
aad
fnsave
mov
inc
or
xor
popa
gs
push
mov
dec
jg
shl
test
cld
mov
push
mov
push
divl
hlt
add
cmp
mov
js
shlb
fadds
cmp
inc
lret
fcompl
cs
cmc
stc
ljmp
dec
sbb
repz
mov
push
enter
fidivrs
pop
rcrb
xchg
mov
sub
nop
cmc
fisubrl
out
xchg
aam
cs
pop
hlt
mov
ja
int3
notl
daa
mul
cmpsl
and
dec
ret
jmp
outsb
mov
lods
out
pop
jle
add
xchg
incl
dec
jno
test
notl
cltd
fs
or
lods
xor
xchg
nop
pop
add
rol
pop
ficoms
fcompl
data16
lock
lahf
aaa
pop
adc
inc
cltd
out
cmp
mov
mov
pop
cmpsl
fs
jnp
xchg
imul
mov
test
pop
stos
int
lret
sti
pop
and
jb
xor
addr16
xor
jne
pusha
add
sub
xchg
outsl
pop
stos
ss
ficoms
inc
mov
arpl
cmpsb
push
test
add
cli
gs
icebp
stos
dec
push
cmp
inc
test
pop
dec
into
xchg
jg
pushf
cmp
jmp
inc
popa
sub
inc
sbb
bound
sub
lods
push
jl
cli
in
and
push
sahf
in
xchg
in
stos
jne
iret
mov
cmp
cwtl
out
jmp
dec
sub
std
mov
mov
repz
sub
out
in
hlt
inc
adc
push
arpl
outsb
xchg
pop
icebp
xchg
adc
rcrl
inc
fwait
loopne
cmp
test
loope
sarb
jb
aaa
ffree
inc
cwtl
ds
rclb
sti
imul
dec
sahf
gs
shrb
mov
push
lahf
daa
and
jne
les
cmp
add
push
inc
ret
pop
sub
and
dec
push
jae
loop
je
mov
pop
sub
cmp
arpl
lods
push
push
cmpsl
mov
mov
clc
add
sahf
mov
pop
pop
mov
je
gs
pushf
gs
cmpsb
jne
shll
push
cmp
aam
push
mov
popf
js
pop
fisttpl
in
cmc
in
mov
mov
cmpsl
and
sub
or
gs
cwtl
out
adc
lret
inc
xchg
ret
mov
or
nop
rcr
push
inc
sub
je
lods
into
ret
jg
jae
mov
ljmp
in
pop
inc
shr
jb
rclb
sbb
scas
sbb
cmpb
mov
hlt
xchg
xor
outsl
mov
insb
sbb
bound
ffreep
fcomps
je
les
push
inc
cld
push
xor
call
scas
push
jle
iret
bound
fsubl
enter
or
or
test
push
lret
pop
stos
dec
push
jmp
push
and
out
adc
jbe
xor
cmp
cmp
xor
pop
sub
mov
insb
mov
push
mov
testb
push
fs
jne
dec
sahf
gs
mov
jnp
arpl
inc
xchg
mov
lahf
jns
sbb
repz
incl
inc
sub
sbb
xchg
pop
push
js
lds
ficomps
push
sahf
mov
and
pushf
insb
mov
lret
cmp
xor
sbb
adc
fiadds
mov
js
imul
repz
dec
fistpll
dec
or
xchg
xor
jp
push
and
js
xchg
xchg
jmp
out
fs
gs
jo
test
mov
or
insl
in
jp
push
xor
ss
dec
jns
inc
mov
mov
cmpsb
push
test
mov
inc
sub
fs
ds
push
ficoms
sarl
ja
sub
sbb
xor
jmp
scas
adc
dec
cs
mov
jmp
jno
dec
mov
inc
jge
lahf
insb
cmp
ja
xorl
sahf
xor
incl
dec
xor
add
dec
cmp
decl
mov
roll
lods
and
xlat
movsl
mov
daa
inc
adc
out
jns
cmc
xor
int
lea
jecxz
icebp
xor
jbe
ss
push
and
aam
mov
or
leave
adc
loop
mov
data16
mov
xlat
pop
add
and
fnstsw
mov
imul
addr16
sbb
lret
mov
in
adc
jbe
pushf
sub
call
std
leave
clc
mov
xchg
mov
imul
rclb
fs
inc
gs
pushf
shrb
test
cmp
outsl
sub
jae
mov
jbe
pop
dec
pop
js
sbb
lret
push
lds
out
cmp
sbb
and
push
add
stc
sbb
pusha
in
cmp
jle
xor
pushl
jne
scas
push
pop
dec
cld
dec
cld
push
xor
out
xor
xor
mov
test
push
insb
mov
jbe
insb
cmp
xor
sbb
out
push
outsb
inc
xchg
je
dec
sub
pop
sbb
pop
movsl
aad
test
leave
cld
fisubl
push
fnstsw
fdivl
jge
jle
dec
push
mov
lock
mov
popl
pop
add
sbb
in
fsubrl
push
mov
pop
inc
adc
dec
push
pop
dec
out
adc
mov
mov
jno
dec
pop
push
jg
lds
testb
lds
vandps
mov
xchg
cmpsl
outsb
sub
add
xchg
sbb
xchg
mov
mov
movsb
mov
adc
out
out
sub
cmpsl
push
testl
aam
sbb
xor
cwtl
add
pop
iret
pop
pop
cmp
leave
push
inc
ficoml
inc
sbb
jg
fistps
and
into
push
xor
adc
subl
push
loope
cld
arpl
shlb
xor
aas
adc
popa
push
fimuls
push
xchg
push
mov
loop
cli
notl
ss
enter
cwtl
adc
adc
test
jae
sarb
inc
mov
xchg
cld
dec
insl
ljmp
mov
andb
xchg
arpl
push
mov
jmp
push
pop
aas
mov
les
inc
jp
pushf
mov
out
insb
addr16
mov
ja
pop
outsl
dec
pusha
daa
sbb
imul
pop
scas
xor
mov
xchg
es
leave
xchg
cmp
pop
jns
or
je
fisttps
jg
sub
aas
cmpsl
push
mov
push
aad
pop
arpl
repnz
mov
andl
cmpsl
popf
mov
jge
daa
enter
lods
int
or
xchg
inc
lock
lahf
aaa
push
cmp
imul
fst
lea
push
frstor
inc
in
sub
pop
sbb
adc
loopne
mov
js
lret
mov
or
jl
shll
int
outsl
push
enter
and
les
mov
mov
mov
cmp
push
xor
xchg
xor
ja
push
adc
mov
mov
jae
shll
add
cmp
pop
jae
sbb
xor
push
xor
lock
or
cli
jae
cmpsl
mov
push
fsub
bound
cmp
xor
push
aaa
adc
test
cmpsl
push
xor
out
xor
xor
out
addr16
inc
or
jae
and
iret
push
xor
dec
sbb
sbb
lea
mov
xchg
iret
sbb
lret
sbb
cltd
xchg
jnp
or
je
loope
cmp
and
pop
cmp
or
fmull
popa
mov
add
leave
fstpl
add
loopne
sub
call
cmp
jmp
xchg
mov
insl
cmp
popa
sub
ret
retw
inc
inc
adc
xchg
gs
lods
push
push
mov
stos
fstpl
jmp
xchg
mov
fmull
or
sub
sbb
loop
mov
mov
sub
add
test
push
stc
loope
jecxz
clc
jb
aaa
jae
lahf
inc
pop
jns
mov
lahf
sub
lock
add
push
in
xor
testl
cmp
jo
inc
stos
pop
shrl
and
outsb
cmp
ret
inc
cmp
cli
cmp
cld
or
in
pop
inc
push
pop
lea
out
cwtl
aas
mov
xchg
lds
fxtract
fisubs
rcrb
in
and
pop
nop
jbe
dec
dec
mov
fildll
xor
mov
out
xor
push
mov
in
cmp
pop
pop
out
sbb
inc
push
mov
jns
sbb
or
inc
jmp
jle
int3
adc
jb
outsl
sub
int
xchg
ds
stos
arpl
or
movsb
insb
inc
out
mov
lret
imul
inc
and
xchg
pop
movsl
test
pop
pop
cmpb
pushf
not
push
jge
inc
lds
and
sbb
jno
out
cmp
fstps
in
xchg
movsb
mov
adc
out
out
sub
cmpsl
push
testl
aam
sbb
xor
cwtl
add
pop
iret
pop
pop
cmp
leave
push
inc
ficoml
inc
sbb
outsl
mov
lods
mov
xor
push
add
loope
cld
arpl
dec
clc
jg
sbb
test
and
das
jbe
inc
or
into
orl
ss
jns
out
test
cld
and
stos
std
xor
fcompl
inc
lcall
inc
jp
in
gs
sbb
call
mov
add
mov
lahf
mov
mov
jns
pushf
scas
scas
adc
push
mov
fs
sbb
push
adc
sub
and
xor
addl
sub
sbb
shrb
jbe
pop
dec
pop
jne
mov
movsb
xchg
cs
add
mov
xchg
cmp
test
and
insl
and
push
sub
mov
std
lods
pop
pop
js
incl
inc
sub
jo
inc
jne
aas
xlat
insb
add
sbb
je
rclb
out
add
call
pop
xchg
cmpsl
lock
test
pop
and
mov
adc
shlb
in
mov
jb
dec
fxtract
jl
mov
fs
xchg
test
jle
pop
dec
fistpll
or
iret
push
les
push
cmp
and
push
frstor
addl
jl
mov
int3
std
je
pushf
dec
aaa
lds
mov
das
and
cwtl
addr16
mov
arpl
dec
push
mov
pop
gs
adc
mov
js
pop
int3
mov
xor
dec
scas
shlb
into
imul
hlt
and
and
push
sbb
mov
pop
in
xchg
ss
in
sbb
test
jne
lahf
das
outsl
jo
push
orb
mov
dec
pop
out
sbb
sahf
and
mov
push
cmp
or
or
sbb
int
bnd
jb
pop
iret
pop
push
sub
cmpsb
xchg
into
push
fnstsw
repnz
rcrb
and
sub
loope
out
int
inc
je
cmp
inc
mov
aaa
out
mov
je
fsub
push
lods
popa
jns
adc
xor
fcomps
je
xchg
xor
je
push
movl
fsubs
adc
outsl
cmpsb
sarb
mov
bound
dec
mov
mov
loopne
mov
nop
jp
pop
into
lahf
sbb
add
int
inc
pop
es
and
and
dec
xor
stos
cmpsb
xorl
pushf
in
xchg
int
mov
mov
add
ljmp
push
mov
xor
xchg
bound
jge
sub
inc
in
xchg
sbb
dec
lcall
ja
xor
fs
popl
icebp
inc
ja
aas
test
jl
dec
cli
sbb
xchg
loope
test
nop
cs
cmpsb
scas
lock
test
test
push
pop
mov
es
xchg
rcrl
hlt
imul
in
xchg
lods
pop
mov
inc
or
loop
aas
aad
sub
pop
mov
jge
ret
jecxz
call
inc
inc
mov
movsb
jmp
jge
cmp
lret
xchg
fsubl
arpl
clc
movsb
into
pop
shl
icebp
or
mov
shl
jo
or
lea
add
in
cmpsb
sbb
lret
cmpsl
adc
push
loop
shlb
insb
popa
ficoms
xchg
int3
push
popa
in
adc
negb
xchg
cmp
loop
dec
cmp
sub
cmp
dec
test
stos
xchg
lret
or
push
repz
pop
pop
push
fsub
lahf
jp
pop
test
lcall
sub
push
cld
das
jg
out
sti
jl
fiaddl
inc
mov
jo
std
cltd
outsl
push
cmp
mov
pop
int3
fistpll
jo
jns
sbb
call
pop
je
jo
in
cmc
xor
lock
mov
pusha
push
xchg
xchg
pop
loopne
fnstcw
or
data16
dec
lds
inc
jne
les
mov
or
mov
int3
jp
pop
test
scas
nop
test
mov
push
jge
jle
arpl
lcall
and
pop
jge
pop
push
and
pop
out
ds
dec
or
push
mov
jl
subb
jmp
ljmp
mov
test
pop
mov
sarl
insb
fsubr
jbe
mov
push
lods
push
mov
sub
movsl
pop
andl
sub
aaa
daa
fstpl
push
pop
enter
aaa
jae
lahf
inc
jge
push
add
adc
adc
das
xchg
shll
add
clc
cwtl
mov
out
xor
xor
out
inc
je
inc
je
inc
push
sti
test
imull
jne
data16
pop
lods
mov
jb
sub
cmp
mov
jecxz
jg
sbb
or
mov
cmp
in
imul
mov
lods
out
add
icebp
fistpl
sbb
testb
and
push
cmp
pop
pop
out
sbb
hlt
inc
mov
jbe
subb
jecxz
sbb
mov
dec
test
arpl
push
xor
sti
mov
xor
dec
mov
and
pushf
push
xor
por
fldcw
into
imul
hlt
and
and
push
sbb
mov
pop
in
xchg
ss
in
pop
inc
lret
jne
lahf
das
outsl
jo
push
orb
mov
dec
pop
out
sbb
and
mov
push
cmp
or
or
sbb
int
repnz
mov
jb
out
push
xchg
aas
jns
inc
cli
add
in
push
out
mov
push
pop
xor
arpl
adc
pusha
rclb
adc
adc
je
fdiv
push
lods
popa
jns
adc
xor
fcomps
je
xchg
jno
je
push
movl
movsl
or
clc
fsubs
adc
outsl
cmpsb
sarb
mov
bound
dec
xor
xchg
mov
cld
mov
mov
into
lahf
sbb
add
int
inc
pop
adc
pop
pop
add
push
dec
adc
pop
add
push
sbb
popa
insl
ret
fisubrl
ja
pop
outsl
dec
insl
and
cmp
rcll
xor
xchg
bound
jge
sub
inc
in
xchg
sbb
dec
lcall
ja
xor
mov
repnz
ja
je
cli
sbb
xchg
loope
test
nop
outsb
addr16
cmpsb
scas
jno
test
test
push
pop
mov
es
xchg
mov
push
aaa
popf
aas
mov
outsb
dec
jecxz
lods
lcall
pop
or
push
xor
mov
xor
ljmp
addr16
es
movsb
jmp
jge
cmp
lret
xchg
fsubl
arpl
clc
movsb
into
pop
shl
icebp
or
mov
shl
outsb
dec
or
lea
add
in
cmpsb
sbb
lret
cmpsl
adc
ljmp
insb
popa
fisubs
popa
in
adc
negb
xchg
cmp
loop
mov
in
pushf
notb
stos
in
xchg
ror
push
clc
daa
out
xchg
xorl
leave
faddl
push
jg
test
inc
andb
mov
jg
lahf
lahf
jb
stc
cmp
ljmp
push
xchg
out
hlt
mov
popf
inc
stc
pop
mov
adc
in
add
cmp
popa
test
mov
pop
jnp
lahf
aaa
pop
adc
inc
push
jo
fld
xchg
imul
add
mov
mov
push
popa
mov
iretw
xchg
js
sbb
std
fisubl
push
fnstsw
fdivl
adc
jno
pop
sub
call
jo
std
fnstcw
mov
sbb
out
ds
dec
or
push
mov
jl
subb
jmp
ljmp
mov
test
imul
int3
push
in
insb
fsubr
jbe
mov
push
lods
push
mov
sub
cmpl
loop
daa
fstpl
mov
mov
in
scas
adc
pop
jns
sbb
pop
or
push
hlt
pop
sub
fnsave
add
lds
sbb
das
pusha
push
cmp
jo
rol
pop
test
sub
je
inc
imul
icebp
imull
jne
data16
pop
lods
mov
jb
sub
and
or
cmc
sbb
or
mov
cmp
in
imul
mov
lods
out
ret
jp
fistpl
sbb
testb
repz
jge
addl
inc
push
fwait
pop
add
adc
xchg
dec
lds
stos
mov
insb
mov
sub
int
xchg
ds
sub
std
mov
and
xchg
push
dec
jp
mov
jge
ret
cmp
and
pop
outsb
push
cld
jo
xchg
xor
mov
mov
jbe
pop
and
sub
lret
push
lds
je
ret
xor
jns
sub
jmp
sbb
pusha
in
and
mov
add
push
pop
dec
mov
push
xor
out
xor
cmp
popa
sahf
adc
test
in
mov
push
xor
mov
push
jb
lea
shlb
fsub
and
mov
push
push
mov
es
ja
bound
xor
loopne
sub
xchg
mov
fisubs
mov
xchg
data16
jmp
pop
push
sub
add
add
inc
jne
push
mov
in
and
xor
insl
test
mov
inc
sbb
pop
test
dec
pusha
pop
dec
out
adc
mov
mov
testb
daa
push
jg
push
mov
pop
outsb
fsts
pop
daa
sbb
stos
xor
push
push
jbe
xor
or
fs
inc
or
inc
or
repnz
dec
xsave
loop
jle
mov
sahf
notb
mov
notb
xor
pop
mov
and
sbb
push
sbb
mov
cmpsl
push
test
shr
pop
cmpsb
sbb
loope
es
and
xchg
xchg
and
inc
xchg
and
mov
sbb
mov
daa
add
mov
mov
sbb
into
push
fucomip
repz
jge,pt
jne
lret
jecxz
add
mov
mov
add
mov
mov
dec
push
je
mov
sti
jno
jb
stos
push
test
lret
sbb
movsb
cmp
cltd
mov
lock
loop
shrl
or
cmp
leave
setbe
jge
imul
fnstcw
fwait
lods
pop
aam
xor
lods
inc
mov
sbb
leave
popf
lds
lds
inc
sbb
jno
cmp
dec
dec
popl
mov
stc
mov
xor
or
push
sbb
enter
ret
imul
sub
adc
in
aaa
mov
cli
fucomi
xchg
sub
dec
push
add
adc
gs
inc
aad
int
dec
mov
or
push
mov
inc
or
jle
clc
sbb
and
push
mov
pop
mov
inc
inc
pop
xor
insl
sahf
ret
dec
mov
shll
leave
sbb
test
lock
dec
add
mov
push
mov
mov
dec
rcr
sarb
pop
sub
push
sbb
or
xchg
lcall
les
push
jb
mov
sub
cltd
cmpsl
dec
push
jge
inc
sti
or
loop
or
rclb
pop
sub
or
rcll
dec
shlb
dec
aam
pop
test
adc
aad
push
mov
ja
cmpsb
enter
cmpsb
lock
mov
sti
mov
jne
in
movsl
stos
std
outsl
test
push
or
jae
les
imul
popa
mov
leave
incl
cmp
lock
xor
incl
in
xlat
inc
sbb
inc
lret
pop
mov
dec
pop
pop
cmc
jmp
ss
xor
lret
aas
mov
pushf
jecxz
sbb
inc
scas
push
test
shrb
test
mov
aaa
fisubl
dec
fisttpl
dec
add
clc
lock
dec
sbb
add
cld
icebp
sub
add
les
jge
mov
push
ret
pushf
cmpsb
pop
xchg
xchg
jnp
lock
int3
lods
push
cltd
stc
or
scas
mov
cmp
push
test
inc
fsubl
jge
or
sub
cmp
inc
xchg
mov
cs
mov
cmp
iret
cmc
mov
test
cmp
xor
mov
sub
xor
fimuls
inc
jmp
mov
cmp
test
sar
stos
mov
in
mov
sti
jge
loopne
dec
addl
decl
shll
add
jle
xor
in
movsb
add
dec
and
ljmp
mov
sbb
scas
rcl
jle
fs
mov
dec
ss
test
roll
pop
ret
fsts
mov
sbb
les
jno
lds
inc
pushf
ljmp
shl
sbb
pop
mov
pop
jb
or
cwtl
aam
sbb
add
xor
sub
sub
test
clc
movsl
arpl
jmp
jg
pushf
and
pusha
mov
sub
lahf
dec
inc
jg
loop
inc
add
sub
push
sub
mov
fcomps
iret
and
xor
dec
loope
mov
imul
aas
mov
sti
mov
in
inc
subb
ret
mov
cld
or
dec
sub
dec
jp
inc
mov
ficoml
andb
xchg
and
mov
sub
int3
fadd
mov
popf
xor
sbb
xchg
les
jns
cs
test
xchg
push
push
in
inc
lcall
ficoml
ja
cmpb
mov
jo
and
cmp
sbb
rolb
adc
clc
nop
push
addl
mov
and
das
cltd
insb
out
mov
fcomip
mov
jl
inc
jnp
js
addr16
xchg
xor
fldcw
cmp
pop
inc
push
jbe
dec
fs
xor
int
cmp
cmp
mov
sub
jno
push
scas
push
stos
shlb
or
mov
aam
in
mov
push
popf
mov
cmp
jp
out
xor
mov
aas
lcall
pushf
daa
and
sub
xor
imul
dec
in
pop
int3
movsl
stos
outsl
popf
fnstsw
fisubs
jne
fldt
int
inc
jecxz
and
cmpsb
jle
stos
in
lock
subl
mov
push
push
jge
mov
lahf
cs
ljmp
pushf
adc
sbb
and
bnd
scas
pop
lods
leave
loop
fidivrs
and
bound
ss
sub
aas
leave
mov
add
jbe
pop
mov
jmp
bound
lret
aam
dec
sbb
pop
sti
pop
sbb
in
int3
jb
test
mov
cmp
xchg
sub
sbb
movl
or
int
push
sbbl
and
fld
and
aas
test
jae
fisubrl
mov
ds
push
or
push
ja
jmp
lcall
outsb
test
repz
mov
sub
cmpsb
mov
lahf
push
test
xor
lret
ss
int3
fldcw
daa
push
lret
jbe
push
sbb
mov
mov
stos
mov
in
xchg
inc
and
stos
and
in
aam
mov
add
mov
jmp
sub
leave
loop
pop
sub
adc
inc
mov
addl
mov
xor
subb
lods
adcb
sbb
movsb
inc
sbb
and
push
xlat
es
ljmp
int
mov
push
and
mov
cmpsl
add
sub
and
mov
inc
and
shll
int
mov
aam
cmp
cmc
clc
sti
mov
or
daa
fyl2x
cmp
adc
sub
mov
aam
loopne
icebp
outsl
and
test
push
stos
mov
idivb
hlt
sbb
in
out
shl
xor
dec
pop
mov
imul
mov
or
subb
fisttpl
fcmovu
xchg
jne
enter
mov
mov
icebp
aad
adc
cmpb
dec
fldl
sub
cmc
xor
orl
andl
push
cmp
fs
fwait
repz
insl
les
and
rclb
mov
cmpb
cmpsl
ret
es
cmpsb
inc
cltd
aaa
mov
and
dec
push
mov
mov
adc
fdivl
mov
push
stos
jecxz
pop
sbb
fwait
mov
aaa
js
xor
test
loope
add
icebp
xlat
clc
popl
inc
idivl
je
jo
mov
mov
cmc
mov
cmp
sub
or
pop
mov
jl
cmp
dec
or
int
mov
sbb
mov
push
stc
add
incb
inc
fisubrl
movsl
inc
stos
inc
mov
xlat
and
lods
ficomps
ret
jge
and
jno
mov
mov
mov
adc
daa
mov
lods
mov
or
lahf
adc
jmp
inc
fcomip
push
or
xor
shr
push
addr16
xchg
in
inc
mov
shlb
cmpsb
inc
test
jp
in
push
mov
sbb
dec
inc
adc
sahf
inc
pop
cmp
subb
mov
dec
sbb
cmp
xor
int
pop
stos
shlb
movsl
jnp
sti
sub
shl
repz
sbb
iret
jnp
in
outsl
clc
add
ja
mov
sahf
test
ret
aaa
loop
lds
xchg
sbb
stos
cmp
addr16
sti
xchg
or
mov
push
xchg
repz
cli
jae
pop
iret
jle
addr16
out
or
sub
inc
int3
orb
mov
jo
push
push
lret
sub
inc
mov
pop
fistl
pop
and
xor
sub
cltd
cmpsl
and
in
adc
imul
das
sbbb
icebp
loopne
jle
mov
sub
cmp
push
dec
icebp
mov
je
cmpsl
add
jbe
sub
movsl
dec
insl
dec
lret
mov
cmpsb
fsubs
and
inc
lods
fldcw
mov
rorb
in
divl
add
xchg
cmc
test
es
out
int3
add
xchg
arpl
jbe
dec
stos
jno
add
iret
mov
xor
sub
push
rol
sti
jne
je
pushf
mov
mov
mov
sbb
jg
enter
mov
in
push
pop
inc
lahf
push
popa
mov
mov
and
stos
pop
push
ljmp
fisubl
dec
pop
and
mov
xor
int3
add
test
inc
cmp
xchg
aad
inc
and
mov
cmp
rcrl
or
adc
cmp
das
and
cmp
flds
sbb
and
and
mov
mov
xor
mov
fiaddl
adc
mov
push
stos
ja
xor
cmpsb
dec
out
pop
mov
mov
dec
pop
dec
sbb
cmp
sbb
and
stc
adc
sub
mov
jmp
cs
xor
rclb
arpl
inc
cmp
movsl
cmc
sub
and
jl
pop
repz
xor
xor
mov
add
cmpsb
test
ret
test
jae
jmp
dec
aas
leave
push
aad
ja
inc
pusha
push
push
test
and
dec
xor
dec
pushf
pop
adc
in
mov
ljmp
test
nop
fadd
pop
xor
xchg
sahf
dec
cmpsl
imul
mov
jne
fxch
mov
lods
and
shll
lahf
sahf
pop
jmp
mov
sub
adc
cli
outsb
inc
sbb
into
mov
mov
inc
mov
xor
mov
fimull
fisttps
sbb
lahf
push
fwait
mov
in
xor
jne
repz
pop
jecxz
mov
nop
sub
sub
fisubrs
popf
stos
das
mov
das
or
adc
gs
int3
add
dec
pusha
jns
mov
jno
mov
pop
push
jns
repnz
mov
sbb
dec
cld
xchg
cmpsl
sti
sbb
lock
leave
iret
inc
repnz
ljmp
push
test
push
push
add
and
fdivl
sub
fistps
in
cmp
ret
dec
mov
daa
pop
mov
fcmove
mov
stos
xchg
sbb
cwtl
movsb
or
sbb
jb
mov
pop
fcomps
cmp
ret
push
nop
shll
mov
repz
rcrb
fs
ret
jb
ljmp
push
add
mov
sahf
adc
jnp
sbb
mov
lahf
mov
inc
fld1
lea
lds
jno
cmc
mov
xchg
sbb
xchg
inc
lahf
jg
aaa
xchg
mov
push
pop
mov
xchg
mov
adc
test
rorl
out
shr
fimull
mov
sti
cwtl
jae
push
aad
lods
lock
adc
movsb
cmp
nop
push
push
std
std
pop
xchg
fstpt
dec
sub
std
cmp
push
inc
push
clc
adc
xchg
inc
mov
scas
ljmp
cmpsl
lret
and
push
test
mov
jle
sbb
inc
push
das
add
mov
lret
inc
popa
nop
inc
sub
push
sbbb
push
pop
pop
dec
pusha
mov
xor
jge
fstpt
cmp
push
xchg
mov
pop
or
movsl
ljmp
test
xchg
and
mov
xlat
push
popf
mov
cmp
pop
mov
sti
mov
mov
inc
mov
lock
xchg
enter
or
sbb
adc
mov
pop
xor
xchg
mov
fldenv
shl
inc
xor
mov
pop
loopne
push
iret
fisttps
clc
sti
mov
sti
xor
scas
in
sbb
aad
fdivr
repnz
sbb
das
call
pop
xchg
sbb
repz
outsl
in
mov
lods
fadd
test
push
loop
mov
mov
mov
das
in
loop
xchg
cmp
or
or
xchg
mov
push
fisubl
push
mov
dec
je
pop
push
and
lds
fwait
lret
mov
mov
test
fisubrs
mov
pop
fsubl
adcl
sbb
fdivs
sahf
dec
mov
dec
and
jecxz
sbb
cmpsb
or
cmpsl
pop
push
mov
pop
scas
jp
popa
cmp
mov
sub
jg
jg
test
dec
lods
push
das
xchg
les
lods
fisubrs
xor
lret
sbbb
cld
lods
jbe
xchg
jg
adc
xor
inc
mov
mov
call
cmp
lret
jecxz
lret
out
sub
jl
mov
jmp
xor
dec
jp
movsl
cltd
cmp
test
push
pop
or
sub
jne
and
jg
fst
and
fisttps
in
sahf
dec
pop
cmp
jecxz
sub
nop
sbb
or
movsl
imulb
pop
push
mov
dec
and
or
ja
shrb
push
and
pop
mov
cs
jmp
das
loope
pusha
out
xchg
je
adc
jecxz
in
inc
pop
stos
xchg
dec
mov
out
decl
mov
sub
cmp
xchg
insl
inc
mov
xchg
outsb
ret
std
push
lcall
jp
dec
dec
pop
inc
jp
xchg
and
push
dec
aas
jne
sub
fmulp
mov
jmp
xchg
fadd
mov
cmp
aam
icebp
fistl
inc
pop
or
jl
in
lahf
daa
adc
sub
sarl
repz
mov
stos
mov
dec
fcmovbe
fst
test
mov
mov
inc
and
repnz
ss
lods
cmc
mov
or
inc
lock
test
in
xchg
test
call
xor
adc
loopne
mov
xchg
cmpsb
add
cltd
lods
jp
mov
pusha
inc
subb
pushf
lods
or
xchg
jl
cmpb
adc
jl
rorb
pop
add
scas
iret
out
cmp
pop
adc
xlat
push
mov
add
int3
imul
fwait
lea
xchg
bound
int3
mov
and
test
xchg
out
mov
inc
fsubl
mov
rorb
cmp
push
fbld
pop
mov
and
push
mov
mov
dec
cmp
in
aam
sarl
ret
mov
nop
jge
addr16
shlb
mov
rorb
dec
cmp
mov
sub
repz
dec
jae
jp
mov
repnz
rcrl
imul
stos
fdivrl
sahf
test
fcompl
cmp
rcr
fwait
pushf
cmpb
cmp
pushf
int
mov
aad
lods
lcall
inc
loope
add
xor
in
and
mov
sub
clc
jp
sub
cli
clc
sub
jle
cltd
pop
iret
setae
jp
cmp
mov
sbb
xor
sti
jmp
sub
fldcw
cmp
mov
mov
movsl
pushf
icebp
mov
or
cmp
pop
out
push
das
xchg
dec
fs
and
cmp
and
pusha
add
mov
clc
jle
arpl
dec
fs
outsl
test
push
insl
test
mov
cs
inc
cmpsb
test
fcomi
imul
out
test
test
mov
and
mov
leave
mov
dec
push
lret
inc
lds
dec
push
cmp
lds
xchg
mov
int
scas
mov
cmpsl
push
dec
push
adc
inc
mov
inc
pop
test
add
addr16
mov
sbb
cmc
sbb
dec
jo
aad
js
push
movsb
shll
add
xchg
test
test
pop
xchg
mov
out
test
pop
orl
daa
stc
pushf
dec
out
cmp
sbb
inc
cltd
jmp
and
jb
mov
mov
xchg
or
addl
xor
fcoml
or
lcall
pop
movsb
les
movsl
and
fdivrl
mov
jae
add
rorb
mov
and
cwtl
fisubrl
cltd
xor
ret
je
cwtl
or
test
xlat
stos
test
push
addl
cld
lods
sbb
jmp
sbb
imul
mov
fadds
test
xchg
pop
jae
mov
xchg
fwait
movsl
dec
stos
fsts
fisubrl
jnp
jle
leave
cmp
enter
xchg
dec
xchg
mov
daa
rcrb
clc
stos
sbb
cs
mov
or
mov
pop
xchg
dec
jae
sbb
cmp
xchg
push
insl
jecxz
mov
ss
cmc
mov
cltd
enter
mov
add
mov
daa
ds
test
outsl
inc
test
mov
inc
mov
adc
pop
pop
and
cmp
sub
cmc
ficoml
pop
add
rol
stos
clc
sti
mov
imul
testl
mov
cmp
aam
or
and
iret
fs
inc
loop
xchg
hlt
sub
mov
in
dec
cwtl
dec
repnz
les
inc
lahf
mov
stos
push
mov
repnz
xchg
dec
scas
jp
xchg
test
popa
in
in
lret
jne
cmp
ja
jge
or
mov
add
sbb
das
xchg
dec
jnp
dec
pop
imul
inc
fistpll
xchg
pop
cs
mov
mov
sbb
mov
dec
mov
lcall
inc
cmp
jmp
mov
mov
aad
or
mov
addl
inc
sub
inc
hlt
int3
mov
push
inc
mov
outsb
xor
inc
push
es
mov
adc
pop
pop
das
or
roll
call
xchg
mov
ds
mov
xor
add
add
bound
pop
add
mov
jbe
aad
inc
sahf
dec
jae
movsb
adc
mov
mov
inc
mov
push
mov
fistps
dec
bound
sub
movsl
dec
and
dec
xor
lds
mov
mov
add
or
lods
roll
sbb
pusha
xchg
movsl
jo
fucomi
inc
icebp
sbb
and
add
mov
mov
popl
xor
jp
rol
notb
sbb
ret
aad
cmpsb
mov
decl
and
cmp
mov
jns
and
mov
mov
fstpl
xchg
cwtl
xchg
inc
mov
cltd
fwait
pop
push
int
sbb
push
daa
into
add
pop
movsl
repz
sbb
or
adc
inc
jle
rcll
jno
mov
int
ret
push
loopne
shl
jecxz
outsb
ja
std
xor
mov
std
sar
jg
xchg
xor
cmp
lahf
push
hlt
test
lahf
mov
mov
lods
mov
ss
fidivs
cmp
mov
in
flds
les
insb
bound
inc
adc
or
pushf
sub
sbb
sbb
mov
fcoml
inc
fisttpll
xor
out
fistpl
cli
cmp
scas
hlt
test
lock
mov
clc
push
inc
shlb
jge
dec
or
xchg
xor
lods
cwtl
add
mov
mov
and
hlt
or
into
and
cmp
in
jne
mov
int3
pop
test
inc
inc
mov
cwtl
mov
dec
mov
in
test
mov
xchg
mov
push
inc
jne
rclb
ret
push
and
pop
and
xor
adc
add
enter
lds
pop
fimull
imul
pushf
push
xor
fdivl
popa
push
adc
stos
push
mov
loop
cmp
xlat
data16
push
lret
into
mov
ret
cmp
mov
mov
arpl
stos
int3
xchg
popf
mov
lea
sbb
mov
movsb
sub
xor
addb
add
and
je
pop
shlb
or
aam
pop
repnz
and
call
cwtl
dec
sub
mov
xchg
mov
mov
ja
bswap
xchg
mov
testl
dec
test
aam
pusha
loope
inc
mov
div
shr
stos
lcall
cmpsb
insl
cmp
data16
jmp
repz
push
sbb
flds
icebp
pop
fs
test
lock
push
sbb
xor
mov
dec
add
jo
inc
sbb
imul
push
test
mov
in
push
test
sbb
jmp
pop
pop
ret
cli
jge
in
cmp
das
or
xor
mov
sub
dec
xchg
inc
lods
jb
mov
icebp
jp
xor
push
jl
inc
pop
cmp
test
or
fs
add
xor
lds
stos
mov
add
xchg
test
xor
inc
cwtl
loope
out
sub
push
mov
dec
pop
mov
cmpsl
dec
sub
pop
mov
adc
mov
add
enter
in
or
popf
cwtl
inc
sub
lea
rorl
pop
cmp
mov
pop
in
fwait
sbb
loopne
mov
sbb
hlt
stc
and
out
aaa
inc
xchg
loopne
pop
sbb
ret
ret
push
adc
aas
add
jne
mov
stc
es
les
or
push
dec
inc
and
test
mov
or
scas
cmp
fistpl
ja
stc
cli
cmp
sub
data16
andl
mov
imul
bound
jecxz
sbb
cmp
sub
inc
sbb
das
loopne
mov
sbbl
ja
out
mov
xchg
cmp
jecxz
mov
ud2
fiaddl
xor
leave
jge
jmp
bound
in
pop
push
lods
in
push
fldl
outsl
incl
sbb
sub
loope
add
scas
fucomp
add
mov
lock
aaa
movb
aaa
daa
inc
inc
or
ss
cmp
outsb
xlat
jb
movsl
sbb
pop
adc
loopne
out
mov
mov
pop
sub
rcrl
mov
pop
leave
fcomps
fcompl
push
leave
xchg
push
xlat
mov
sub
and
jp
in
lock
fmul
add
xorb
inc
jl
daa
arpl
sbb
or
stos
vmaxss
mov
mov
sub
lcall
mov
push
or
sub
inc
add
inc
jg
jp
bound
cli
clc
or
add
or
add
sti
adc
and
and
out
orl
lds
insl
test
mov
jle
fwait
ljmp
sarl
movsb
jno
je
inc
xchg
mov
out
xorl
je
scas
stc
pop
ja
aam
hlt
out
je
pusha
xor
mov
movsl
pop
sub
leave
push
dec
or
push
or
into
movsl
sbbb
or
fidivrs
leave
leave
mov
aaa
stos
push
faddl
mov
insb
cld
scas
mov
sti
cli
js
loope
push
mov
insb
or
cmp
xchg
flds
xchg
xchg
stos
jge
stc
ljmp
mov
fwait
pop
mov
mov
cmp
lcall
fxam
jle
mov
jle
push
jo
add
jle
movsb
js
scas
or
je
add
lret
inc
aad
jp
cmc
fsubs
stc
mov
inc
dec
adc
scas
mov
fstp
cmpsl
mov
movl
int
sub
adc
inc
xor
andb
js
sbb
mov
xchg
rorl
sahf
mov
aad
cmp
call
fldenv
xor
fnstenv
stos
cmpsb
cmpsl
mov
cmp
mov
sub
jae
cmpb
dec
xchg
sbb
mov
push
scas
mov
movsb
loop
pop
mov
or
test
mov
adc
mov
push
cmp
push
test
lds
push
inc
xchg
dec
xor
push
pop
sub
flds
out
sub
fldl
lods
lcall
push
jmp
jmp
cmp
jmp
insb
xchg
xchg
int3
inc
sbb
je
ret
fmull
inc
dec
cltd
orb
push
push
test
mull
cmpsb
jecxz
clc
pop
cmp
sub
jnp
data16
mov
aas
daa
out
daa
sbb
test
mov
lods
sub
sbb
dec
jl
or
popl
mov
out
repnz
cmp
mov
or
ds
aas
ja
sti
xchg
aaa
std
push
rorb
sbb
push
pop
ljmp
cmpsl
sub
jecxz
dec
iret
adc
repnz
aad
aaa
ret
xor
mov
pop
mov
pushf
dec
bound
xchg
arpl
xchg
test
dec
addb
aam
adc
mov
lock
xchg
xchg
mov
sbb
in
mov
mov
mov
cmpsl
xchg
stos
xchg
mov
sub
fadds
or
js
push
movsb
mov
xchg
mov
mov
cmp
cmc
gs
in
pop
dec
add
mov
mov
lret
jecxz
test
xor
jno
dec
push
addb
mov
xchg
xor
push
movsl
std
pop
adc
call
pop
mov
pop
add
in
aad
add
push
cmpb
add
adc
jg
cltd
jo
stc
xor
push
mov
sbb
mov
sub
push
stos
mov
nop
call
mov
mov
addr16
xchg
lret
fucomp
fs
fbstp
mov
bound
mov
test
insl
mov
outsb
cltd
and
outsl
push
sar
push
loopne
lret
push
push
lret
dec
rorl
movsb
lods
insl
pop
out
push
xchg
pop
rorl
xchg
sub
enter
inc
inc
adc
add
and
pop
xchg
out
test
fcomip
push
mov
ret
sub
lahf
pop
xchg
jle
popa
outsb
xchg
mov
pushf
data16
mov
and
mov
aaa
sbb
mov
loope
jl
inc
ja
fdivl
in
call
pop
das
or
jne
add
stos
ret
push
jae
and
je
shll
negl
fisttpll
test
xor
aaa
mov
movzwl
aad
fwait
scas
icebp
dec
les
out
sub
ret
xchg
divb
pop
imulb
frstor
mov
mov
daa
xchg
int
arpl
insl
lret
rcll
scas
inc
out
cltd
xchg
mov
stos
add
fistpl
cwtl
fisttpll
cmpsb
jnp
push
ret
imul
and
iret
or
pusha
into
cs
fsubl
xchg
pop
mov
inc
inc
sbb
popa
xor
sbb
adc
mov
stos
icebp
mov
cs
das
inc
and
call
mov
mov
in
sbb
jbe
lahf
dec
mov
repnz
test
enter
mov
inc
push
lcall
sbb
add
or
and
jae
cmp
jb
sar
cmp
pop
dec
aaa
inc
cmp
add
ror
out
or
jle
pushf
insb
les
mov
mov
mov
popa
scas
adc
repz
cmp
lahf
jp
fsts
mov
xor
push
cld
loope
outsb
push
xchg
lret
sbb
xchg
dec
mov
mov
shrb
rorl
test
xlat
mov
mov
xchg
fdiv
add
int
push
cmc
and
pop
fcomi
jle
cmp
loopne
xchg
in
negl
jo
aad
push
adc
popl
push
dec
push
sub
dec
lods
adc
aam
stc
xchg
cli
pop
cmpsb
test
adc
outsl
movnti
jno
lahf
inc
jno
push
sub
sub
and
lret
movl
inc
ret
mov
gs
lea
hlt
mov
movl
jle
or
outsb
cltd
nop
ja
aad
push
push
xor
lock
insb
lods
andl
xchg
adc
scas
dec
sbb
jge
mov
push
push
add
mov
mov
mov
xor
popa
inc
push
add
call
imul
dec
fs
dec
cmpsl
ss
and
mov
sbb
js
dec
sti
fs
mov
mov
or
lret
js
sbb
sbb
jno
xor
or
inc
xlat
std
add
insb
scas
add
mov
mov
outsl
movsl
sub
add
imul
push
daa
push
adc
jo
popf
outsl
outsb
addl
data16
jecxz
push
sahf
xchg
enter
lea
or
test
outsb
mov
dec
shll
into
add
push
dec
cmp
loopne
mov
aam
fistl
and
and
xchg
xor
scas
movsl
ss
sbb
test
lcall
inc
mov
movl
mov
addr16
mov
test
and
mov
in
jg
scas
jae
jp
xor
movsb
mov
mov
out
int3
cmp
sahf
test
pushf
inc
cmp
jbe
adc
mov
mov
pusha
fcoml
nop
sub
mov
cs
test
aaa
mov
cli
jnp
inc
xchg
and
adc
and
inc
sbb
push
xor
test
adc
shrl
add
inc
push
mov
inc
jl
mov
push
cmp
popf
insl
push
mov
mov
jl
jmp
push
cmc
mov
mov
mov
jns
mov
sub
cld
sti
mov
nopl
or
std
jno
mov
jnp
cmc
inc
out
flds
mov
cld
cmp
repz
aam
enter
fdivs
outsl
test
or
enter
dec
push
mov
adc
push
dec
in
pop
gs
test
rol
pushf
popf
in
inc
sbb
into
jbe
mov
xor
jae
daa
add
int
pusha
pop
les
in
push
stos
push
xor
cltd
sub
fiaddl
pop
jbe
pusha
mov
push
inc
and
sahf
xchg
fwait
leave
bound
adc
adc
loope
inc
sbb
add
xchg
mov
rorb
movsl
sub
pop
test
pop
xchg
inc
popf
rcrl
inc
pusha
lahf
dec
adc
or
jge
inc
fisubrl
jle
mov
pop
sub
lcall
int
jle
es
inc
mov
dec
mov
jbe
cmp
movsl
repz
dec
loopne
add
repz
cmc
into
cmp
test
pop
or
fidivrs
mov
ljmp
xchg
enter
pop
testb
push
stos
mov
outsl
ljmp
push
lahf
cli
sub
lods
xchg
sbb
popf
lret
insb
or
rcrl
ret
sbb
mov
dec
xchg
mov
test
xchg
dec
fisubl
mov
sub
bound
fcoms
mov
pop
jae
and
mov
lock
jge
pop
aas
adc
sarl
outsb
push
lret
push
add
and
mov
lock
cmp
push
jmp
and
mov
cmp
mov
xchg
jns
cmpsl
pop
xor
mov
sbb
mov
mov
mov
cwtl
push
test
enter
and
scas
jae
fstps
movsl
sbb
add
add
sub
fwait
mov
daa
icebp
pusha
scas
inc
sbb
cmp
cld
inc
mov
xchg
pop
cmc
cld
fnstcw
js
and
and
xor
dec
hlt
xchg
loop
sahf
add
shrl
pop
pop
and
pop
test
pop
mov
popa
sub
pushf
dec
rol
aam
movsl
xchg
ret
add
xchg
or
leave
popf
mov
pop
ret
sar
mov
mov
add
push
jae
cmp
cmp
js
les
mov
push
dec
mov
loopne
sarb
scas
out
std
mov
lahf
pop
pop
sbb
dec
and
pushf
xor
cmp
sbb
pop
cmp
test
cmpsl
cltd
adc
sbb
sub
dec
push
mov
shr
mov
xchg
dec
inc
mov
outsl
mov
sbbb
mov
push
pop
ret
mov
jmp
mov
mov
ja
sbb
mov
aad
mov
push
ja
loop
push
movsl
mov
insb
jmp
mov
inc
scas
push
dec
mov
out
add
mov
sbb
cltd
mov
push
cmp
rcr
mov
mov
xchg
mov
int3
leave
adc
jge
push
pop
jae
jno
les
mov
bound
mov
or
repz
push
ss
std
dec
cwtl
cmpsl
mov
mov
into
loope
add
dec
mov
xchg
xchg
push
shrl
cmp
push
loopne
add
pop
and
out
pop
shlb
cmc
mov
mov
xor
hlt
pop
lea
dec
mov
xchg
pop
xchg
pop
and
in
mov
mov
pop
push
xchg
hlt
pop
stos
shr
adc
ret
loopne
fdivl
lea
imul
lahf
and
out
fadds
clc
scas
mov
stc
mov
mov
dec
and
stc
dec
mov
pushf
dec
movsb
sbb
cmp
stos
push
test
lcall
out
out
inc
jno
iret
ja
fs
leave
test
arpl
loopne
dec
jne
lock
xchg
notl
pop
push
aaa
lahf
add
push
rcll
fwait
lret
cmc
mov
enter
lahf
inc
xor
fucomi
and
push
out
les
stc
cmp
xchg
fadd
inc
pop
fcos
jo
jne
fsubrs
lock
and
inc
push
sub
movsl
ret
mov
insb
jbe
mov
mov
aad
pop
cmp
lea
sti
lea
je
mov
sbb
jecxz
sbb
nop
fwait
imul
and
adc
mov
mov
dec
mov
inc
pop
sbb
pop
sbb
daa
xlat
test
adc
adc
dec
fwait
mov
cmp
cmp
leave
xor
mov
cmp
lret
or
iret
mov
xor
fisttpl
sub
pop
sbb
stc
sub
jecxz
pop
jo
inc
loope
jae
push
dec
push
clc
mov
jne
mov
dec
rcrl
mov
fsubs
cltd
jns
shlb
mov
scas
sbb
movl
outsl
xor
adc
bnd
in
test
sbb
cmp
add
jae
addl
jmp
dec
fsubrs
popf
jmp
ret
pop
xor
ret
mov
cli
sub
out
mov
out
scas
or
cmpsb
sbb
dec
sbb
addl
dec
jl
imul
xchg
pop
pop
ss
mov
outsb
cltd
mov
ret
loopne
stos
inc
mov
xchg
dec
mov
mov
jl
popf
out
imul
jecxz
adc
xchg
cmpsl
mov
lock
icebp
test
and
inc
jmp
jg
or
dec
sbb
outsl
mov
js
lods
mov
fwait
sbb
pop
data16
ss
xor
es
xor
jne
popf
fdivrl
jge
dec
pop
jb
sub
cmp
jp
mov
xor
int3
mov
xchg
pop
sub
inc
jno
stc
inc
cmp
icebp
xor
ljmp
rcrl
mov
and
cmp
cmpsb
int
jbe
call
ret
push
push
sbb
rolb
lcall
xor
mov
dec
inc
je
or
mov
xlat
fs
pop
mov
push
mov
mov
dec
jbe
test
xor
mov
mov
fistpl
clc
orl
ljmp
lods
fidivs
add
idivl
mov
arpl
xor
mov
movsl
xchg
out
inc
lds
les
pusha
lahf
mov
xor
xor
mov
outsb
mov
sbb
subb
mov
add
test
adc
adc
enter
lods
pop
test
movw
xchg
jge
js
inc
mov
add
inc
sub
popl
test
dec
cmpsl
mov
sbb
add
mov
lds
lea
shlb
add
add
jge
mov
inc
lea
mov
push
enter
ret
movsb
je
mov
mov
xor
gs
or
loopne
rcll
insl
dec
int3
into
arpl
out
mov
jbe
jmp
out
adc
and
insl
mov
mov
mov
stos
mov
xor
sub
mov
push
dec
pop
lcall
sbb
arpl
js
test
mov
inc
cld
stc
cltd
stos
jae
pop
aam
mov
xchg
fisubrl
mov
xchg
scas
cmp
cmp
cmpb
filds
push
sub
imul
and
pop
and
inc
mov
clc
or
movsb
test
mov
xor
cli
jg
pop
call
push
arpl
lahf
andb
fdivrp
cmp
hlt
ret
xchg
mov
cwtl
xchg
cli
test
shrb
es
mov
mov
adc
cltd
dec
ss
stos
roll
adc
outsl
imul
or
sbb
ljmp
mov
sub
dec
fs
or
mov
adc
jecxz,pn
outsl
insl
test
dec
test
pop
inc
mov
and
mov
stc
mov
aaa
mov
nop
data16
sub
icebp
mov
add
fmuls
sbbb
push
orb
adc
lahf
mov
aad
mov
inc
inc
xor
mov
xchg
push
lahf
es
aas
cmpsl
cmp
mov
dec
pop
addl
test
mov
mov
sarb
fldl
push
lods
xlat
push
mov
clc
jecxz
insl
cmp
imul
sub
sbb
mov
sti
push
shlb
xchg
inc
arpl
pop
mov
xchg
movsb
cld
scas
mov
js
roll
loopne
rorl
push
add
ret
clc
popf
mov
scas
push
jae
pop
jns
lock
cmp
cmc
lret
popf
aad
and
lret
or
lahf
inc
stos
push
and
mov
inc
mov
jp
mov
aas
xchg
dec
popf
lahf
int
fwait
xchg
jno
pop
cpuid
lds
cltd
sbb
mov
fdivs
jnp
dec
jbe
or
pop
hlt
add
cmp
pushf
aaa
stc
mov
and
leave
into
scas
rcll
loop
sub
shrl
loopne
pop
pusha
les
les
cmp
addr16
xchg
out
push
mov
and
pop
call
add
jo
sbbl
cs
clc
loope
in
cmp
add
fcmovnb
and
stos
lcall
arpl
mov
das
or
dec
push
pop
fwait
in
inc
adc
or
je
in
shll
divl
add
mov
jecxz
das
sahf
test
cwtl
jno
cmp
icebp
mov
mov
sbb
pushf
push
sub
lds
cmp
push
out
int
dec
xor
xor
fcmovbe
lods
dec
pop
jno
roll
add
mov
leave
jno
dec
subl
fistl
jb
pop
clc
mov
push
jbe
xor
imul
mov
ds
jmp
xlat
jo
das
inc
sbb
pop
sub
push
inc
mov
jl
fisubl
out
mov
push
or
pop
xor
imul
xchg
mov
fisubrs
jge
mov
rcrl
mov
test
push
lds
mov
int
mov
xchg
mov
adc
out
ja
idivl
int
ret
stc
mov
loopne
sahf
jne
fucomip
repnz
pop
loopne
inc
insb
iret
jecxz
in
mov
std
sti
pop
push
add
and
iret
inc
sub
inc
mov
pop
icebp
out
sub
adc
xor
lods
mov
sub
push
jnp
data16
fs
mov
in
add
add
sub
mov
scas
xchg
int3
mov
adc
jae
mov
int3
pusha
addr16
cmp
jecxz
sahf
add
pop
lret
and
inc
sarb
movsl
fimull
adc
sbb
roll
stos
dec
and
and
and
inc
cmp
cwtl
push
insl
sbb
fcmovnbe
outsl
sarb
iret
cmpb
scas
sub
es
jmp
ret
dec
pushf
insb
or
pop
mov
ret
and
xor
mov
fsubrs
leave
std
fisubl
lods
shrb
aam
hlt
jb
adc
cmp
inc
jl
das
or
cld
test
aad
xor
cmp
mov
ret
cmp
mov
lcall
xchg
hlt
mov
dec
lret
repz
fidivrl
loope
jl
das
xchg
iret
pop
mov
cmp
orl
or
mov
arpl
mov
xor
aas
scas
or
fwait
pop
pusha
es
sahf
xchg
pop
movsb
pop
repz
cmpsl
icebp
and
mov
pop
out
idivl
sbb
repz
jmp
push
enter
and
xchg
mov
sbb
lahf
call
ret
leave
push
xstore-rng
cmpsl
ret
test
mov
jmp
pop
sbbb
test
loop
leave
sbb
shlb
scas
out
mov
adc
push
rolb
dec
test
and
mov
jno
cmp
cmp
fwait
jl
call
adc
or
and
fst
sub
or
pop
dec
jno
dec
cmp
dec
xchg
mov
leave
add
and
loop
xchg
in
pop
push
dec
jae
cli
push
xchg
fidivl
pushf
dec
arpl
mov
movsl
test
shrl
push
mov
iret
xchg
add
stos
jne
les
stos
cmpsl
ret
fld1
jb
shr
mov
jge
jo
and
jmp
jg
fyl2x
xor
shr
testl
mov
jo
test
out
mov
and
add
xchg
mov
pusha
outsl
adc
pop
lea
pop
sbb
sti
mov
rorl
inc
test
push
jb
dec
imul
mov
xchg
cltd
nop
dec
daa
das
mov
xchg
pop
mov
das
xor
stos
and
push
add
ret
lahf
in
adc
push
push
cmp
add
dec
mov
or
cwtl
or
sbb
cmp
insb
xor
adc
ret
lods
adc
test
aad
xor
push
mov
adc
xchg
dec
movsb
les
xchg
and
or
inc
outsb
cmpsb
scas
popf
fdivrl
lcall
fs
ret
sub
lret
xorl
mov
mov
sub
test
sbb
mov
inc
push
and
cmp
int3
add
imul
out
lret
cwtl
dec
and
adc
pop
fisubrl
test
mov
pop
push
clc
push
cmpsb
sbb
shlb
jge
push
inc
mov
push
adc
aad
inc
xor
dec
xchg
cmc
repnz
fstps
pop
or
je
push
jns
pop
add
or
sub
add
out
mov
mov
xchg
adc
pop
cmp
mov
pop
push
mov
call
stos
sahf
je
pop
jo
sbb
mov
adc
inc
daa
lret
test
inc
sahf
movsb
dec
inc
mov
lock
fstps
popf
lret
movsl
lock
or
or
adc
pop
add
adc
popf
pushf
cmp
sub
mov
test
mov
ss
icebp
add
or
cli
xcrypt-cbc
cmpsl
xlat
mov
inc
push
mov
mov
insb
xor
push
ja
adc
xchg
jmp
xchg
sub
mov
ficomps
in
hlt
aaa
pop
mov
inc
cltd
lret
dec
jo
bound
xchg
inc
pop
stos
stos
add
sub
adc
mov
add
bound
lcall
mov
and
xor
sti
mov
jns
xor
pushf
jnp
mov
rcrb
add
leave
stos
sahf
mov
pop
jo
adc
push
pop
ljmp
movsb
fisubs
mov
test
push
dec
mov
sub
push
icebp
cmp
in
icebp
mov
sbb
stos
xchg
stos
inc
pop
push
mov
xor
gs
or
and
pusha
fisttps
jle
xor
xor
mov
in
testl
mov
push
jns
xor
mov
mov
out
push
or
cld
sbb
das
pop
int
lcall
lea
lea
hlt
js
in
fldenv
xor
jl
pop
adc
jp
mov
mov
jg
push
xor
inc
inc
push
sbb
sub
outsl
out
and
adc
adc
inc
dec
andl
mov
mov
lods
sysenter
test
ret
pop
stos
sub
mov
adc
cli
sbb
cmp
inc
pop
xchg
mov
loope
arpl
pop
sub
or
lret
jge
outsb
cmpsb
sub
fmul
ljmp
dec
mov
mov
cmp
fwait
scas
js
mov
mov
nop
fcomp
scas
inc
push
lods
cmc
mov
cmp
adc
in
andl
mov
mov
lods
clc
addr16
cmp
rorb
stos
cmp
fistl
aas
movsl
lcall
fdecstp
mov
and
cmpl
mov
dec
out
imul
into
push
test
ficomps
roll
pop
mov
pop
cmp
fucomip
call
rcl
sbb
insb
cltd
iret
out
aad
jle
mov
or
hlt
mov
ja
and
xchg
xchg
mov
arpl
push
clc
dec
push
leave
inc
in
dec
lods
mov
scas
stos
dec
mov
scas
stos
stos
cmp
test
dec
push
fcmovu
xchg
cld
daa
push
add
stos
ret
sar
xor
jbe
ret
cmp
pop
int3
push
xorl
aaa
lret
xor
mov
fs
mov
in
andl
std
test
sbb
test
pop
xchg
xchg
out
inc
dec
or
ljmp
cltd
adc
jp
test
inc
xchg
ljmp
movl
je
sub
jns
mov
fidivs
inc
movsb
adc
dec
mov
insl
xchg
in
lds
xchg
pop
loopne
pop
cmpsl
xadd
inc
idiv
pop
repz
mov
popf
lods
inc
jecxz
cld
or
xor
pushf
sbb
je
int
add
dec
inc
push
adc
sub
imul
sbb
xchg
lahf
mov
sahf
lcall
xor
add
pusha
add
imul
pop
enter
xchg
mov
add
push
pop
cmpsl
pop
jl
test
ret
sahf
mov
jecxz
repnz
leave
dec
stc
and
sub
bound
push
xchg
adc
stos
arpl
popl
mov
inc
cwtl
loope
js
lret
movsl
ret
jecxz
fmuls
inc
add
mov
jnp
lcall
mov
xor
dec
shll
mov
iret
lods
sti
int
xchg
jae
sahf
dec
mov
popf
fnstcw
or
mov
loopne
mov
push
pop
sarb
add
and
mov
lods
sbb
or
push
mov
leave
xor
dec
sbb
push
int
mov
adc
inc
mov
gs
mov
pop
add
pop
mov
adc
cmp
data16
loop
pop
int3
sar
xor
adc
sub
orl
and
or
lods
inc
pop
lcall
shr
repnz
test
rcrb
mov
mov
inc
cmpsl
popf
mov
outsb
adcl
xchg
cmc
adcb
xchg
mov
push
ffreep
mov
ret
fld1
fsubrl
fdivrl
xor
mov
xor
jnp
and
sbb
inc
je
cwtl
imul
mov
mov
test
inc
xor
jo
xlat
lods
pop
sub
pop
scas
iret
fucomip
loop
inc
lahf
cmc
mov
cmpsl
shl
pop
sub
add
mov
fnstsw
aad
aad
pop
nop
ljmp
dec
cmp
loope
bound
add
inc
mov
ja
mov
pop
pop
jo
leave
jno
mov
repz
push
mov
jo
add
mov
push
pop
mov
pop
cltd
lahf
sub
push
mov
lods
rcr
or
rorl
ja
ret
lahf
movsl
mov
icebp
mov
lret
stc
clc
xchg
mov
cld
xlat
jle
clc
sub
add
cmp
ficoml
jp
lret
and
insl
mov
jnp
sbb
pop
cmp
bnd
fwait
lea
cltd
enter
cmpsl
movsb
aam
aam
inc
mov
cmpsl
or
fwait
imul
and
ret
frstor
das
mov
call
push
xchg
inc
loopne
mov
xor
mov
lock
mov
xchg
add
and
dec
or
test
frstor
dec
and
xchg
test
adcl
push
pop
leave
pushf
loop
ljmp
aas
lret
pop
dec
mov
pop
stos
pop
movsl
gs
cmp
daa
push
mov
cmpsl
inc
jns
xchg
xor
xchg
lahf
fs
pushf
shl
cmp
jg
sbb
scas
fisttpl
jle
fwait
leave
loop
repnz
or
pop
shrd
xor
jmp
or
cmp
shr
jnp
inc
sbb
rclb
mov
adc
clc
xor
mov
dec
ds
gs
mov
mov
hlt
mov
shlb
mov
mov
mov
repz
sub
mov
jecxz
and
jae
push
pop
out
into
outsb
or
cld
inc
cmpsb
int3
fbld
and
testb
push
stos
mov
mov
test
push
popf
mov
mov
pop
dec
subl
or
mov
pop
jle
push
sub
sub
pusha
cmpsl
mov
cmpsb
jbe
push
jle
stc
test
lock
sbb
shl
sti
sbb
loop
sbb
mov
adc
inc
mov
add
vphaddbq
stc
lcall
adc
push
sbb
sldt
dec
adc
mov
cld
xchg
enter
mov
in
fs
imul
fucom
sbb
pop
pop
xchg
xor
fstp
imul
mov
and
mov
repz
push
stc
mov
add
pop
push
lcall
mov
adc
mov
rcll
mov
and
sub
sub
xchg
mov
or
lret
mov
test
pop
mov
xchg
push
sub
hlt
mov
mov
outsb
mov
stos
or
adc
dec
stos
and
aad
pop
and
lret
xchg
sti
mov
mov
cltd
or
adc
or
mov
or
sbb
test
push
retw
sbb
push
movsl
mov
or
or
jl
ds
jne
lahf
ja
inc
fiadds
mov
sbb
pop
std
nop
or
or
imul
pop
movsl
lea
mov
test
xchg
out
icebp
adc
inc
cmpsb
sbb
push
imul
movsl
dec
lahf
fwait
jae
ja
test
cltd
orb
lods
lods
fwait
add
dec
push
cmp
xchg
push
les
push
test
push
std
movsl
int
les
fs
mov
adc
mov
test
push
adc
lods
mov
outsl
xchg
stos
std
sbb
scas
add
add
jno
fwait
lods
jne
sub
in
pop
cltd
lods
inc
add
push
nop
pop
test
or
fwait
leave
in
mov
pop
jb
cli
faddl
cmp
push
jo
and
daa
mov
pop
sub
inc
xor
inc
icebp
out
sub
imul
xor
jp
fwait
push
fs
inc
bound
and
iret
test
xchg
sub
mov
dec
jecxz
jecxz
frstor
mov
and
bnd
std
rcrb
inc
adc
pop
add
es
pusha
push
adc
idiv
in
std
lds
enter
inc
or
lods
sahf
cld
cmpsb
fidivs
pop
sbb
lock
shrb
lods
mov
push
imul
sbb
sar
dec
mov
push
pop
ljmp
cmpsb
mov
xchg
push
adc
imulb
push
lret
jno
dec
sub
adc
iret
aad
mov
lea
sub
jbe
jmp
mov
cmpb
dec
js
shrb
push
rcll
sub
cwtl
xchg
std
gs
inc
addr16
xor
call
xlat
sub
test
pusha
shlb
dec
xchg
jb
add
inc
iret
pop
mov
push
mov
mov
imul
in
cmc
aad
dec
adc
dec
mov
xor
xor
enter
movsb
mov
lods
ficoms
adc
inc
inc
negl
push
jnp
vpaddsb
shll
cld
or
testb
mov
outsl
pop
mov
push
pop
pushf
pop
inc
push
test
xchg
out
fbstp
xlat
repz
adc
test
shl
in
out
mov
mov
repnz
dec
pop
mov
fstpt
inc
fcmovne
xchg
sbb
roll
jle
cmp
iret
mov
lahf
scas
je
lret
mov
ss
js
mov
push
lods
jno
xor
popf
sbbl
jecxz
lret
stc
pop
pop
fisttpll
add
cmp
add
add
pop
mov
push
adc
pop
xchg
cmp
mov
xor
in
daa
xchg
add
cmpsl
mov
enter
inc
push
sub
xor
mov
hlt
std
inc
xor
mov
loop
pop
std
jnp
mov
push
ret
fdiv
jecxz
dec
ss
cltd
mov
add
test
data16
xor
lods
mov
mov
sub
pop
pop
das
inc
incl
xchg
mov
scas
jne
lods
sbb
stos
inc
test
mov
cli
mov
popf
into
arpl
push
sbb
lret
jg
test
sbb
mov
mov
mov
sbb
rcl
cwtl
rclb
pop
scas
inc
push
cmp
lds
mov
popf
scas
mov
cltd
push
andl
mov
push
ret
fistpl
push
mov
adc
fldl
sub
sub
stos
cmp
call
dec
inc
cltd
fsubp
imul
inc
lret
daa
hlt
cld
push
test
enter
dec
inc
dec
iret
dec
mov
sbb
jmp
rcrl
mov
cmc
stos
push
ficoms
adcb
sbb
mov
jne
pop
rolb
dec
and
jno
push
and
push
sbb
les
mov
pop
inc
aam
dec
push
inc
hlt
jnp
ja
loop,pt
adcb
insb
mov
out
mov
daa
ja
mov
pushf
stos
lret
mov
pop
scas
sbb
aad
pop
sbb
test
shrb
fwait
push
adc
push
mov
js
loope
mov
mov
lea
test
xchg
dec
mov
arpl
out
push
mov
mov
jp
dec
mov
ret
fld1
gs
insl
mov
cltd
enter
mov
cwtl
sbb
jle
sub
shr
and
in
push
stos
rcrl
mov
pop
mov
sub
jns
lock
mov
mov
lods
cltd
inc
inc
ficompl
mov
inc
dec
sub
or
sub
xchg
divl
stc
ljmp
dec
mov
push
jmp
pop
mov
push
cmc
test
cmc
fcomi
je
lcall
subl
push
dec
lods
sbb
cmp
mov
cmpsl
push
fs
addr16
sbb
imul
sbb
push
dec
cmp
aad
ss
sahf
and
add
xor
mov
outsb
jbe
dec
mov
xor
mov
xchg
mov
addr16
insb
jbe
push
cmp
mov
popa
pop
cmp
outsl
mov
lods
cmp
dec
subl
out
stos
xchg
jne
sti
xchg
push
int3
mov
push
cmp
out
testl
mov
and
mulb
iret
cmp
push
js
xor
fisubrl
fdivr
decb
or
or
daa
cmp
in
ret
or
adc
xchg
out
jge
or
lret
fucom
xor
fldt
dec
mov
test
xchg
lock
test
sbb
lcall
sub
jbe
inc
jbe
xorl
jno
cltd
fstl
jg
das
iret
fucomi
repnz
mov
data16
adcl
dec
sbb
add
addr16
fadds
scas
addr16
sub
sub
xchg
imul
push
outsl
fwait
dec
mov
fdivrs
cmp
enter
mov
mov
or
cwtl
dec
push
inc
xchg
jmp
xor
into
jmp
lret
dec
je
or
and
push
sub
pop
dec
int
pop
test
sbb
pop
adc
sbbl
sbb
pushf
outsb
aaa
mov
mov
jmp
mov
dec
aad
mov
inc
xor
rorl
test
xchg
jne
rorl
inc
sbb
lods
stos
filds
jae
xchg
lods
mov
ljmp
rcrl
add
out
mov
xchg
inc
xchg
xchg
lcall
cltd
popf
pop
dec
mov
fadd
sti
mov
jno
pop
int
das
addr16
leave
cmc
mov
dec
mov
fsubs
adc
add
mov
cltd
pop
pop
int3
xchg
lahf
popf
data16
aaa
mov
push
mov
fwait
pop
aam
dec
rolb
xor
dec
pop
sub
cmpl
add
out
cmpsb
push
xor
mov
cmpsb
ds
dec
cvtdq2ps
mov
imul
aam
sti
pop
cmp
sbb
sti
sahf
jge
stos
sbbl
pop
pusha
jns
mov
push
lcall
fsubl
test
dec
dec
outsl
pop
test
adc
mov
pop
fiaddl
dec
mov
ret
mov
lahf
sbb
mov
pop
cld
sub
imul
pushf
shrl
lcall
jge
outsb
cmpsb
sub
push
sub
mov
add
nop
jbe
mov
and
adc
es
mov
fwait
push
xchg
js
mov
mov
movsb
mov
add
fsubs
in
mov
and
sub
test
shl
movsb
inc
inc
mov
cmpsl
pop
popf
mov
ret
aaa
sti
pop
icebp
test
inc
mov
shlb
mov
mov
jns
sub
es
add
xchg
inc
mov
out
shlb
fucomip
in
mov
fimuls
std
out
enter
mov
mov
iret
xchg
iret
cmpsl
add
push
cwtl
mov
fs
lret
push
int
test
leave
mov
sub
lcall
cmp
insb
push
cld
jl
orl
or
xchg
dec
fwait
outsb
int3
mov
pop
or
sub
pop
test
fstl
lcall
in
sbb
shll
hlt
repnz
test
rcll
repz
push
rolb
inc
shlb
push
fwait
mov
aam
fisttps
dec
int3
insb
jnp
fistps
movsl
sti
bnd
mov
xor
in
jne
or
xor
mov
dec
pop
pop
add
push
adc
jmp
inc
sbb
mov
pop
xor
push
adc
mov
push
sar
sti
pop
pop
add
jmp
lods
sub
add
add
movaps
mov
or
mov
aaa
mov
mov
ror
cmpsb
dec
loope
jae
pop
dec
popf
into
out
lds
jp
lds
aas
stos
mov
xchg
push
mov
pop
outsb
sbbl
xchg
mov
mov
ret
shl
cli
call
mov
repz
push
or
loop
fwait
sahf
enter
inc
jns
popf
test
aas
pop
andl
cmp
add
fsubrs
sbb
and
sahf
test
and
repz
xor
xor
ret
push
pop
fwait
jo
inc
sahf
inc
mov
fisttpl
ret
mov
mov
mov
fnstenv
or
int
jbe
push
call
dec
mov
filds
popa
mov
cmp
imul
fwait
lahf
adc
loopne
jp
lret
fadds
lock
cmc
lcall
mov
cmpsl
std
iret
cmpsl
cwtl
pop
lock
sbb
dec
int
repz
jb
mov
push
xchg
leave
ljmp
cmp
inc
aam
xchg
je
cmp
sbb
xor
insl
cmpsl
and
push
adc
pop
and
mov
aas
jbe
lods
mov
shll
adc
push
mov
sbb
mov
rolb
xchg
insb
test
rcr
ficoml
xchg
fstl
das
xchg
adc
pop
fidivrs
jge
dec
std
sub
xor
addb
cmc
or
inc
leave
sbb
inc
shr
mov
rcrl
test
testl
mov
xchg
jge
adc
add
mov
pop
adc
repz
cs
fsubrp
pop
push
mov
adc
mov
fs
int
lcall
mov
push
dec
mov
out
jecxz
in
fldl
xor
fisttpll
sti
jnp
and
mov
lds
push
dec
cmpsl
push
scas
jmp
arpl
mov
jle
or
mov
inc
cmp
sbb
and
ret
bound
fsubrl
roll
jl
mov
add
cmpsl
dec
int3
mov
out
dec
pop
push
cmp
mov
cmpsb
push
inc
outsl
xchg
xchg
movsb
push
sbb
pop
xchg
jns
xor
sti
ret
clc
into
iret
pop
mov
inc
adc
or
pop
das
nop
fwait
xor
xor
push
xor
mov
fdivs
xor
into
pop
test
mov
in
mov
repz
sti
mov
jecxz
add
ret
mov
push
add
hlt
pop
std
fstpt
dec
push
popf
mov
mov
divb
xor
aad
test
and
cld
fs
pop
les
dec
xchg
imul
int
test
mov
fildll
gs
fistl
inc
pop
nop
or
cmc
mov
sahf
inc
jecxz
hlt
ljmp
lds
mov
xor
jno
orl
testb
or
xchg
xor
and
sub
push
mov
int3
les
fistps
and
lcall
push
mov
divl
add
leave
addb
fisttpl
mov
jne
or
sahf
dec
ja
movsb
mov
push
push
mov
shll
inc
mov
sbb
sti
ret
lahf
mov
jecxz
add
mov
inc
out
push
inc
add
orb
mov
add
cmp
inc
data16
xchg
dec
and
hlt
scas
shl
loop
mov
xchg
or
push
jmp
jae
sbb
xor
mov
xchg
mov
cmp
xchg
lret
pushl
pushf
int3
pop
stos
lds
ja
int
dec
mov
xlat
cmp
lods
inc
sbb
shlb
into
lods
dec
mov
lods
test
xor
xor
test
test
pop
sbb
mov
ja
and
in
cmp
mov
sub
test
sub
sbb
iret
sub
call
fistpl
jno
int3
add
mov
inc
or
mov
jmp
cmpsl
lods
push
mov
push
xchg
in
adc
mov
test
movsl
pop
jecxz
movsl
sub
movsb
inc
inc
pop
cltd
push
stc
mov
push
mov
in
aam
push
and
cmc
lret
popf
jle
and
mov
lock
push
jne
mov
repz
int3
js
fbld
jecxz
ficoml
lods
mov
nop
cmp
dec
into
test
inc
in
test
push
dec
sbb
or
test
pop
stos
xchg
cmp
mov
sub
mov
add
xor
dec
das
leavew
loop
inc
sarb
pop
jl
mov
call
les
xchg
mull
dec
inc
pop
jmp
push
outsb
movsl
ret
fcom
cmovs
adc
pop
daa
xor
cld
sub
cmp
mov
loop
sub
mov
xchg
shrb
cmc
daa
shlb
dec
and
ljmp
xor
negl
pop
test
repz
jns
inc
lret
fadd
imul
xlat
outsb
arpl
pop
push
or
ljmp
outsb
int3
in
mov
lahf
or
scas
jg
negb
dec
repnz
inc
rcll
push
jne
dec
mov
aas
push
xor
xchg
test
push
xlat
pop
push
mov
adc
xor
stos
ja
pop
gs
dec
sub
or
hlt
mov
lods
loopne
leave
lahf
cmp
pop
nop
jnp
push
mov
inc
and
add
or
call
xchg
stos
and
mov
and
xor
inc
mov
stos
pop
dec
fbld
cmp
pop
mov
sbb
inc
fwait
aam
les
add
cmp
mov
daa
loop,pn
jne
jnp
cmpsb
in
adc
pop
xchg
fdiv
mov
mov
sbb
inc
adc
in
add
mov
sbb
pop
dec
aaa
inc
cmp
cmc
jecxz
dec
add
sub
hlt
leave
std
xchg
lret
movsl
pop
lods
inc
insl
movsb
sub
subb
dec
ss
dec
outsl
cs
cli
jae
push
xchg
fsubrl
daa
imul
dec
cmp
xchg
dec
mov
cmp
lcall
dec
push
lret
das
xchg
dec
cmpsl
and
out
adc
jb
lret
rcl
mov
rcl
cs
cli
dec
rcrl
stos
fisttpll
pop
leave
loop
cld
shll
cmpsb
sti
movsb
adc
or
add
dec
fsubs
shll
out
jp
add
cmp
lret
cmp
cmpsb
imul
fisttpl
insb
js
pop
adc
inc
into
std
sahf
fwait
iret
and
cmp
out
jecxz
jne
dec
mov
es
mov
cltd
mov
inc
adc
pop
fiadds
inc
mov
sbb
or
out
pop
pop
mov
mov
cld
jg
xchg
mov
fisubrl
repnz
clc
imul
push
dec
sarb
or
rol
stos
add
and
jmp
ljmp
xchg
xchg
mov
sub
xchg
adc
xchg
or
add
or
mov
pop
sub
or
mov
shr
cltd
lods
inc
push
mov
sahf
sahf
fucomip
bnd
lret
xor
icebp
or
pop
sub
or
or
leavew
shrb
jle
fsubrl
mov
mov
pop
test
popf
lds
movsb
inc
jne
sbb
lahf
xchg
fwait
cmp
fdivrl
mov
pop
add
mov
or
imul
cld
mov
dec
movsb
adc
fsts
xor
adc
mov
ret
mov
cmc
mov
pop
dec
repz
cmp
stos
fbstp
sub
mov
cmp
lods
subb
test
lock
outsl
sub
ja
out
sti
jp
mov
std
js
pop
push
sahf
xor
mov
fstl
jne
movsl
cmpb
subb
test
jns
cmp
jp
ror
out
cmp
dec
les
stos
xchg
stc
test
mov
pusha
push
popa
lret
repz
adc
sub
adc
inc
xor
mov
adc
test
pop
xchg
aas
insb
xor
mov
stc
push
test
insl
adc
test
pop
fnstenv
andl
pop
fistps
ds
add
cmpsl
sti
xor
adc
das
loop
je
in
out
cmp
out
movsb
mov
mov
dec
xchg
pop
cmp
inc
and
push
sub
in
int
add
ljmp
jb
clc
daa
sahf
jmp
pop
pop
mov
mov
cld
bnd
fnstcw
adc
ret
sahf
fsubl
aaa
rcll
and
lret
sbb
ss
cmp
jae
js
jp
data16
and
and
imul
dec
dec
adc
mov
insl
jp
inc
lcall
or
ds
jle
leave
rcrl
pop
movl
jg
cmc
test
repz
js
cmc
adc
dec
cli
xchg
cmpsl
dec
mov
mov
aam
imul
jb
enter
fidivrs
rcrb
jl
out
cmp
cmp
inc
xor
inc
pop
fiadds
xchg
dec
dec
mov
cmpb
dec
mov
sbb
inc
xor
lahf
das
lock
aad
das
pop
or
int3
add
dec
call
lock
je
imul
bnd
enter
add
lret
lds
nop
mov
ret
sahf
fsubl
aaa
rcll
insl
pushf
fs
test
dec
pop
je
lret
lods
out
lret
xor
mov
sbb
xor
adc
cs
inc
inc
sub
dec
xor
push
mov
xor
int3
pop
add
bound
cmp
shr
or
cmp
dec
fwait
leave
loop
pop
mov
clc
stos
inc
fdivrl
in
ja
jns
data16
dec
fidivrl
xor
push
add
imul
mov
inc
lock
pop
mov
in
shlb
xlat
pusha
jg
jle
add
icebp
hlt
mov
xchg
push
cs
push
push
mov
lds
shll
push
sub
add
fs
inc
xor
lret
arpl
int
pop
popf
push
xchg
inc
pop
adc
cmpl
xlat
xor
aad
sbb
push
scas
lock
in
or
mov
inc
xchg
xchg
or
frstor
pop
inc
and
lret
mov
sahf
mov
cld
mov
mov
ret
loop
test
xchg
mov
popa
xchg
xor
xchg
inc
in
gs
jecxz
stc
jle
pop
pusha
jbe
xor
mov
aad
lds
adc
mov
stos
ja
leave
movsl
test
adc
inc
and
dec
push
xor
mov
mov
and
aas
push
mov
pop
xchg
adc
fimuls
add
inc
fxch
mov
mov
mov
jnp
mov
sbb
jl
and
test
fsubp
or
mov
mov
or
sbb
pop
sbb
mov
clc
jnp
mov
repnz
test
ds
in
xchg
or
mov
aam
xor
pushf
insb
sub
push
dec
sar
mov
das
test
jne
mov
repz
lret
shrb
xchg
lds
or
add
jo
jge
lret
add
popf
repnz
mov
xchg
or
insb
mov
push
pop
mov
pusha
or
mov
enter
mov
adc
jecxz
iret
push
jge
call
les
and
scas
out
inc
je,pt
ficompl
les
insb
sbb
xorb
dec
clc
xor
cmp
jns
mov
inc
mov
xor
push
push
ret
sub
pop
sub
push
inc
repnz
popf
pop
adc
xchg
pop
mov
sbb
sub
adc
std
mov
pop
sbb
ret
pop
push
lcall
inc
aam
xor
mov
faddl
add
pop
jmp
jne
and
pop
pop
jmp
or
jmp
mov
cmp
mov
and
pop
daa
or
shll
lret
push
push
jns
mov
mov
jle
jp
and
sbb
jle
mov
mov
jge
js
js
pop
int
sub
add
aas
push
sbb
aad
mov
xchg
sbb
mov
fs
mov
sub
test
mov
sub
mov
jns
mov
call
cmp
ror
inc
sbb
mov
or
mov
sbb
mov
shlb
xchg
fisttpll
es
add
into
shrb
and
out
mov
mov
inc
lods
mov
jecxz
das
shlb
ljmp
xor
dec
fsubl
and
mov
sub
das
jne
vcvttps2dq
and
mov
mov
je
mov
pop
dec
bound
mov
sbb
adc
sbb
push
or
les
adc
pushf
mov
xchg
mov
xchg
adc
arpl
aaa
mov
dec
lret
sahf
jo
and
jae
test
mov
icebp
leave
sbb
xchg
sbb
jo
adc
add
mov
sti
out
out
mov
xchg
jge
pop
test
sub
cmp
mov
ret
xchg
pop
fxch
push
mov
add
adc
bound
mov
insb
pop
sub
dec
push
mov
xchg
mov
push
dec
mov
sub
mov
mov
mov
push
inc
mov
sub
loopne
mov
repz
mov
jecxz
es
aaa
hlt
lret
repz
lds
aas
add
mov
add
and
add
aaa
jae
test
stos
mov
push
or
sub
lds
push
icebp
stc
in
jge
je
jl
fistl
test
repz
sub
cmp
mov
scas
shrb
push
adc
stos
jge
pop
pop
fnstenv
test
sub
int3
scas
xor
cmpsl
fidivrs
inc
cmovo
push
pop
aad
adc
inc
mov
xor
inc
les
xchg
in
dec
xor
mov
mov
loopne
cmp
adc
mov
outsl
lea
dec
xchg
je
sti
cwtl
or
jo
ret
jl
inc
push
jae
repnz
notl
aam
or
add
inc
mov
movsl
dec
test
xor
add
xchg
imull
lock
fs
sbb
rorb
cmpsl
mov
sar
cwtl
push
cmp
sub
mov
push
fisubs
inc
pop
sbb
inc
ja
push
test
pushf
dec
roll
les
mov
rclb
or
nop
push
push
mov
xor
sub
scas
dec
int
adc
mov
pusha
test
das
iret
xor
lods
insl
xor
cmpsl
mov
or
cli
std
jmp
mov
mov
mov
ror
repz
mov
and
mov
jle
stos
inc
int3
fnsave
adc
xchg
mov
out
cwtl
inc
mov
insb
aaa
jp
push
jo
and
mov
fadds
pusha
lret
mov
push
and
stos
sub
movl
mov
adc
mov
jg
cmp
rcrl
xchg
xchg
mov
xor
mov
jnp
pushf
fwait
cmp
dec
xchg
fsubrs
pop
stos
mov
or
pop
mov
jge
ljmp
mov
mov
cmpsl
jno
jo
psubb
mov
mov
mov
mov
push
jge
cmp
rcrl
and
xchg
cltd
cmpsb
mov
std
jno
fisttpl
iret
inc
bound
cmp
jle
repz
cmpsl
xlat
js
adc
add
xchg
fdivrl
daa
xchg
pop
in
push
mov
adc
fidivrl
movsl
sbb
jmp
fdivrs
out
sub
sub
out
or
std
mov
mov
mov
lea
and
mov
sub
jmp
mov
imul
fwait
scas
add
movsl
aaa
cmc
lret
sbb
mov
addr16
cmp
dec
inc
xor
jmp
cli
cmpsl
jns
lea
dec
sbb
cmp
push
mov
mov
ds
inc
arpl
ret
jg
fiaddl
addr16
test
test
lahf
lock
stos
pop
dec
mov
loop
xor
dec
ja
lret
movsb
pop
pop
scas
dec
fs
dec
jp
xchg
pop
int3
inc
sbb
push
jg
sbb
mov
aam
sbb
inc
ficompl
loopne
sbb
push
dec
incb
mov
in
xchg
je
jl
shrl
imul
daa
popf
mov
pop
xor
scas
xor
cltd
imul
dec
xchg
idivb
bswap
add
sbb
adc
mov
inc
insl
sub
ljmp
push
mov
push
mov
mov
dec
cmpsb
ds
cmc
mov
xor
mov
push
sub
std
inc
iret
lock
sbb
mov
leave
ss
icebp
fisubrl
ret
dec
pop
shlb
idivl
or
lods
mov
and
out
mov
lds
call
inc
cmp
cld
mov
lret
adc
add
inc
aaa
push
mov
push
xchg
xor
data16
xchg
or
jne
inc
add
in
dec
lods
enter
push
mov
subb
shll
or
std
lret
sbb
mov
fldcw
xchg
push
xchg
xchg
xchg
insl
inc
push
popf
mov
cltd
cmp
xchg
out
mov
pop
mov
filds
aam
dec
out
inc
adc
sub
dec
sahf
call
lds
add
xor
push
push
pop
mov
cltd
mov
add
mov
cmp
jp
in
stos
xor
mov
mov
sbb
jnp
into
sub
in
fsubrs
sahf
pop
aaa
fidivs
je
in
lea
shrl
mov
repnz
sar
je
fldcw
sub
in
add
mov
lret
ret
rcl
cmp
test
lret
pop
mov
add
xchg
pop
xlat
xchg
mov
mov
cmp
inc
add
nop
lods
shll
adc
xchg
mov
xchg
mov
mov
test
popf
mov
stos
push
mov
sbb
je
aas
and
rcll
jo
pop
int3
loope
mov
ret
fld1
fsubrl
pop
dec
int
jbe
iret
cmpb
sbb
inc
fwait
and
and
or
inc
jnp
fadds
adc
iret
idivl
movsl
das
leave
jnp
jns
test
jmp
mov
and
push
mov
sar
lret
jne
mov
jns
into
iret
pop
adc
mov
push
pop
dec
and
mov
inc
frstor
addb
pop
cs
pop
in
jmp
lret
test
mov
xchg
cwtl
stos
negb
stos
cmp
fisubrl
mov
and
gs
push
fidivs
push
and
fucomi
repnz
xlat
std
loop
xchg
movsb
xorl
jl
inc
adc
mov
mov
out
sbbb
xchg
pop
aad
loope
mov
insb
dec
inc
jp
mov
xor
inc
jb
pop
mov
loope
add
out
hlt
cld
sbb
enter
fnstenv
push
adc
push
mov
push
inc
mov
sub
subb
imul
mov
cmp
mov
lds
add
jae
fsubrp
fwait
clc
xchg
jecxz
add
lds
dec
sar
ss
iret
dec
scas
xchg
jno
jl
pop
push
jns
imul
adc
pop
bswap
lea
push
lret
sahf
add
stos
xchg
pushf
xor
nop
sbb
stc
adc
mov
in
push
push
arpl
stos
fimull
mov
sub
jbe
and
fstps
imul
mov
push
and
clc
ds
jl
dec
jle
stos
push
scas
push
sti
imul
or
add
sbb
pop
cmovl
push
sub
and
jbe
sbb
sahf
mov
fs
add
cltd
fsubl
mov
pushf
jecxz
enter
add
xor
mov
sbb
out
mov
call
pop
mov
and
inc
fldcw
adc
hlt
ret
neg
daa
test
push
aaa
ljmp
xor
sahf
cmp
jge
test
leave
and
dec
fcompl
mov
lds
out
mov
aaa
stos
jmp
jbe
xchg
repz
ror
aaa
lds
mov
call
push
mov
push
mov
jnp
dec
cmpsl
lahf
push
inc
lcall
push
inc
lock
enter
imul
sbb
pushf
adc
cld
loop
fwait
cltd
mov
pop
sub
cmp
mov
add
mov
mov
insb
add
dec
mov
sub
xchg
mov
dec
inc
dec
in
adc
sets
cmpsb
lds
imul
jle
jnp
dec
dec
ret
call
int
gs
or
or
xchg
mov
pop
out
xor
lret
loope
jg
xor
jle
cmp
cmpsb
out
lret
sbb
call
cltd
add
pop
ss
sub
xorb
and
mov
mov
cmpsb
mov
js
aam
xor
insl
nop
shl
aam
cli
sar
scas
sbb
and
jne
cmp
test
in
outsb
adc
fcoml
pop
mov
rolb
fstpt
dec
ret
cld
jbe
movsb
int3
lds
pop
lock
lahf
inc
outsb
scas
pop
fucomi
repnz
loope
push
jo
orl
cmp
add
ret
fmuls
inc
xor
dec
out
push
push
lods
out
xchg
mov
push
xchg
and
mov
call
xor
setae
jecxz
adc
pop
xchg
jp
adc
insl
cltd
ret
dec
daa
adc
ret
clc
mov
repz
jno
shlb
arpl
in
inc
inc
xor
call
pushf
sarl
packssdw
hlt
sub
sbb
jb
les
xor
xor
inc
pop
jbe
xchg
adc
jmp
dec
insl
xchg
idiv
arpl
jp
add
lods
sub
inc
aad
inc
push
push
fsubs
movsl
fsubrs
cmp
insl
xor
pusha
stc
push
js
in
lock
pop
retw
mov
pop
insb
jb
test
mov
or
or
scas
aaa
mov
cli
jnp
mov
int3
mov
inc
dec
push
cmpb
xchg
inc
pop
jge
sbb
mov
rorb
adc
inc
mov
shr
cmc
mov
fldt
fwait
sbb
pusha
mov
add
jb
cmp
sub
and
mov
pop
mov
mov
push
mov
inc
test
rcrl
idivb
push
mov
add
mov
cmp
jp
add
mov
ret
mov
lret
and
cmpsl
mov
pop
fs
pop
mov
stc
jae
dec
in
stos
mov
dec
sbb
xchg
dec
lahf
cmp
jae
mov
pop
insb
push
cld
jl
cltd
mov
mov
mov
pop
filds
push
mov
jne
and
test
test
pop
or
cmpsl
sbb
push
in
ret
test
jo
push
push
add
test
inc
sarb
xor
enter
imul
addr16
jge
xlat
xor
push
xor
push
fidivrl
and
test
xor
shlb
daa
xor
jb
sub
or
or
ljmp
int
int3
inc
add
lret
imul
fsub
movsb
daa
push
dec
ds
pop
bound
mov
outsl
test
add
mov
cli
cmc
dec
imul
or
push
cld
inc
jecxz
xlat
lods
into
adc
push
test
dec
lret
pop
gs
mov
fmulp
jmp
shr
dec
je
movsl
jae
inc
and
jecxz
mov
daa
sbb
fsubs
jge
imul
cltd
mov
bound
inc
cmp
inc
inc
mov
ficoms
fneni(8087
hlt
cmpsl
jp
das
hlt
add
mov
adc
jecxz
outsl
push
mov
lea
addr16
mov
xor
movsl
jmp
ret
into
adc
mov
int
lods
scas
cmpsl
ret
flds
add
xor
in
jbe
sarb
cmc
and
das
or
fstl
mov
in
mov
inc
xor
sbb
aad
mov
dec
cmpsb
int
mov
pushf
into
mov
pop
xchg
xor
into
sbb
mov
sub
sub
loopne
xchg
dec
jl
adc
or
inc
es
stos
adc
jmp
mov
cmp
mov
std
les
push
mov
push
mov
scas
jno
jb
sbb
jp
rdmsr
pop
dec
xchg
add
test
jb
lods
add
lret
lret
mov
enter
lahf
adc
lds
cmpsl
sbb
fs
mov
add
lock
ljmp
les
push
fsub
mov
xchg
jnp
cld
fisubrl
int
jge
movsl
pusha
shlb
pop
sbb
xor
xchg
mov
pop
test
pop
cmpsb
leave
jno
mov
push
movsl
cmc
call
and
jno
call
mov
pushf
std
addl
hlt
mov
push
test
test
sbb
push
xchg
xor
rclb
in
test
xor
imul
and
scas
push
add
ss
int3
mov
loopne
stos
addl
sbb
xchg
dec
xor
pushl
pushf
lcall
les
or
lret
jge
xor
aaa
and
arpl
push
push
rolb
dec
mov
leave
jnp
inc
clc
adc
jle
cltd
sub
dec
mov
aas
mov
xor
cmc
aas
mov
or
xor
addl
cs
les
push
in
add
les
fwait
sbb
movsb
adc
mov
mov
into
cli
sub
cmpsl
mov
adc
outsb
xor
xor
dec
inc
mov
pop
add
push
les
pop
dec
scas
fldenv
sbb
in
mov
xchg
cmpl
inc
pop
shll
lock
divl
popa
aas
cwtl
inc
lds
std
dec
inc
sbb
xor
xchg
adc
aam
fistl
int3
outsl
sub
mov
add
cmp
xchg
iret
sub
mov
fnsave
xchg
jno
add
jo
cmp
icebp
enter
mov
jno
lods
fldl
inc
add
mov
adc
cmp
fdivp
cli
cmp
sub
ret
jge
movb
daa
js
scas
xor
adc
jne
inc
std
jne
js
xchg
mov
mov
sub
or
fidivs
jmp
fistps
sarb
push
xor
push
aad
out
mov
cmc
cli
insb
mov
push
or
inc
mov
cmpsl
jnp
mov
jmp
in
xchg
jbe
call
fwait
fwait
stc
pop
int
mov
xor
mov
xor
pop
dec
gs
cmp
mov
ror
nop
outsb
cmc
mov
idivl
mov
test
jle
filds
lods
push
adc
stos
cmpsl
je
cmc
and
adc
popa
fdivs
mov
push
or
aas
fucomip
push
dec
or
ret
in
push
fildl
cmp
movsl
and
fidivs
mov
xor
aad
sbb
mov
mov
sbb
stos
dec
sbb
pop
or
ret
add
insl
pop
out
add
lret
fwait
xor
ret
dec
xchg
daa
add
jne
push
mov
xlat
or
shrb
add
fisubrs
mov
pushf
es
adc
pop
sarb
mov
out
imul
aam
inc
fwait
jg
sbb
dec
cmpsl
and
cmp
or
xor
out
pop
mov
in
mov
mov
jae
or
push
add
mov
scas
sti
mov
lock
outsb
leave
movsb
je
pop
cltd
jae
mov
xor
xlat
push
outsb
shlb
or
ffree
jae
jns
rcl
je
arpl
push
cs
xchg
cld
push
addb
stos
arpl
stos
jge
lret
adc
push
lds
in
inc
xor
xchg
cs
insl
and
out
push
dec
dec
dec
clc
pop
notl
jns
out
add
popl
jb
out
jp
xchg
nop
dec
and
pusha
xchg
lods
xlat
jo
loopne
sbb
fmull
cmp
xchg
out
insl
add
fisubrl
out
enter
push
ss
xor
int3
popl
cwtl
arpl
in
cmc
mov
insl
pop
aam
in
and
repz
and
jmp
cmp
jae
sbb
xor
cld
mov
fmul
pop
cmp
sarl
jp
push
ds
lods
mov
test
rorl
adc
scas
inc
cmpsb
push
cmp
pop
sbb
sub
mov
inc
popa
scas
stos
jae
lret
lds
or
cltd
cltd
and
adc
mov
push
fcmovu
insl
cwtl
mov
push
jnp
aaa
add
repz
add
scas
jns
or
sbb
dec
or
lret
cmc
rorb
les
and
test
xchg
sub
adc
pop
adc
sbb
lods
pop
xchg
mov
in
mov
cltd
in
adc
outsl
sbbl
enter
insb
enter
stc
in
sub
ss
mov
mov
gs
shr
test
mov
pop
push
ljmp
xchg
inc
cmp
mov
and
and
adc
shll
push
sbb
jae
js
rcrl
xor
xchg
int3
or
dec
push
lods
inc
fstps
movsl
mov
das
inc
dec
push
jns
mov
cltd
xchg
push
mov
mov
loop
push
add
test
in
test
lret
popa
pop
dec
cmpsl
push
out
adc
addr16
cmp
lods
mov
lock
adc
adc
addr16
leave
mov
repz
sbb
add
push
add
pusha
xor
mov
mov
pop
cltd
sbb
aaa
fidivl
lret
push
pop
cmc
in
or
and
mov
and
scas
push
cmc
flds
mov
inc
fbstp
or
xor
xor
mov
inc
mov
xchg
movsl
pop
cld
mov
test
movsl
lods
pop
mov
xor
bound
cmovle
and
pop
mov
mov
add
jg
int3
in
mov
dec
and
test
cmp
jg
inc
fnstenv
mov
loop
loop
mov
push
imul
popf
lret
sub
inc
inc
xor
adc
sub
adc
or
xchg
push
mov
mov
add
pusha
sbb
data16
mov
pusha
mov
cmp
pop
ror
loop
cmp
push
jp
rcrl
inc
pop
mov
add
imul
rorl
test
scas
or
out
test
loopne
out
xor
sbb
sub
pushl
outsb
aad
sti
mov
cmp
cmp
fs
gs
or
push
xor
lods
push
fwait
je
dec
lret
lock
push
push
out
cltd
mov
add
popa
jno
daa
push
lret
fwait
jle
pop
xchg
stos
add
cmp
fwait
cmp
andb
iret
cmpsl
dec
mov
cld
loope
lret
inc
sbb
insb
leave
sbb
mulb
fnsave
pop
cmp
outsb
mov
movsl
adc
cmp
imul
stc
push
add
cltd
adc
mov
xchg
stos
std
mov
mov
inc
xchg
inc
push
dec
pop
cmpsl
dec
xorb
outsl
sbb
scas
fisttpl
jg
popf
ficoms
add
mov
sub
and
repz
adc
pop
xor
xchg
repz
inc
test
adc
fdivrl
sub
mov
sahf
cli
in
das
inc
pop
into
clc
clc
outsl
jle
inc
cltd
out
mov
adc
int3
pop
sub
pop
test
ds
and
sub
cmp
sub
xchg
outsl
stos
shll
adc
sub
scas
mov
adc
and
in
out
dec
dec
adc
mov
sbb
leave
rcrb
cwtl
iret
movsl
mov
call
nop
xchg
cmp
cmpsl
test
stc
sbb
jp
lret
fucom
jmp
sub
fwait
xchg
nop
push
xchg
ret
outsb
adc
lret
shrb
stos
mov
inc
cmp
mov
mov
inc
mov
int
and
mov
and
or
xchg
stos
leave
loop
mov
xor
aaa
inc
xor
cmp
lock
xor
stos
dec
xor
adc
dec
xor
xor
push
xchg
cmp
cltd
xchg
adc
imul
mov
xchg
pop
add
das
dec
lods
fwait
hlt
je
cwtl
mov
lea
dec
xchg
mov
push
pop
cli
mov
gs
mov
or
adc
xchg
lock
or
pop
sub
push
inc
repnz
add
loop
scas
fnstsw
mov
int
push
fcoms
jl
pop
stos
push
push
pop
sbb
adc
cli
dec
repz
repz
arpl
mov
repnz
push
sbb
or
mov
cmp
popf
adc
ret
arpl
and
dec
fbstp
popf
fists
cmp
xlat
in
mov
insb
aas
xor
cmp
fwait
and
inc
xor
dec
and
call
xchg
sub
aas
cli
xor
int
ror
ret
cmp
hlt
imul
mov
dec
sbb
sub
add
or
hlt
jl
lret
je
adc
imul
mov
sbb
in
mov
mov
dec
jnp
mov
cmc
mov
mov
sbb
jne
mov
adc
dec
pop
cli
or
dec
popf
sbb
cwtl
lret
sbb
ljmp
lret
push
outsl
shll
shl
fldcw
js
cmp
dec
sbb
arpl
xor
dec
scas
push
adc
or
enter
mov
jne
dec
loope
jb
lods
pop
jno
jb
inc
cmp
mov
mov
aad
cmp
loopne
xchg
xchg
and
or
xor
mov
pop
int
inc
dec
mov
sarl
ljmp
out
pop
push
fildll
mov
mov
jb
fwait
fildl
adc
mul
rcll
sbbl
shlb
shr
adc
mov
and
rclb
aad
ljmp
jae
mov
loopne
pop
push
inc
jns
mov
xor
inc
adc
cmp
mov
fdivrl
sbb
mov
stos
mov
lods
dec
imul
lret
cs
fs
int
sahf
xchg
lret
sar
jo
movsl
aas
adc
or
fdivl
mov
xor
or
adc
push
jae
arpl
mov
and
pop
push
sbb
cmp
idivb
in
xchg
pop
xchg
pushf
push
cwtl
mov
xchg
pop
adc
and
ds
or
mov
not
mov
pop
jecxz
push
lcall
cmp
call
pop
mov
imul
hlt
or
cli
dec
and
sbb
enter
dec
xchg
mov
adc
lock
sahf
add
jae
mov
mov
and
and
jns
mov
mov
push
inc
lods
jmp
repz
pop
mov
jle
pop
ret
inc
les
rorl
xor
xlat
stos
imul
lods
mov
sbb
push
dec
arpl
cmp
mov
fcomip
ja
mov
inc
stc
fsubrl
and
idiv
sub
sub
xchg
xchg
stc
add
adc
dec
pushf
jae
lods
test
call
into
faddp
roll
sub
adc
xor
add
sbb
add
dec
les
xor
out
or
cwtl
dec
and
movsb
jbe
dec
pop
ljmp
and
pop
out
std
mov
fwait
lea
fcomps
loope
xchg
cs
xor
xchg
pop
push
adc
push
xor
dec
sahf
sub
or
mov
arpl
jnp
or
movsl
dec
cmp
sub
in
sti
mov
adc
add
mov
testb
add
lahf
imul
xor
mov
and
neg
mov
cmp
inc
cltd
mov
xor
cltd
fs
mov
xchg
dec
lahf
gs
stc
xchg
jae
int3
divb
jp
mov
jno
icebp
sub
stos
fnsave
popa
dec
push
pop
dec
rcrb
mov
stos
mov
xchg
and
sbb
js
cld
roll
leave
cmc
xor
jno
inc
or
pushf
pusha
sub
sub
xchg
mov
lret
mov
mov
sub
and
clc
or
aas
lods
repz
push
adc
dec
cmc
arpl
mov
insb
dec
xorl
and
adc
and
arpl
pop
insl
icebp
dec
jae
pop
or
inc
inc
xor
clc
jmp
inc
xchg
mov
mov
add
stos
add
push
xor
jae
lock
cwtl
lret
mov
sbb
mov
movsb
fidivrl
aam
aam
push
sbb
mov
ljmp
imul
cmp
jo
jge
sub
or
cmp
sub
sub
in
mov
inc
jae
or
and
and
cmc
mov
fwait
sbb
cmp
xlat
in
mov
stos
mov
mov
cmpsb
mov
cmp
xor
jae
aaa
shlb
cmp
insb
jbe
inc
test
mov
rcl
mov
mov
fnsave
cwtl
jnp
push
mov
inc
cmp
push
sub
add
mov
pop
push
shl
mov
inc
call
mov
push
loopne
daa
iret
sub
gs
mov
inc
jne
sbb
mov
hlt
jo
sbb
xchg
push
popf
adc
push
xchg
lret
pop
and
pop
stos
aam
shrl
popa
movsb
fildll
fldl
rorl
sbbl
add
adc
sbb
add
mov
test
sbb
add
int
jno
sub
fistl
bnd
popf
incl
xchg
jmp
xor
pop
movsb
lret
sub
xor
decl
and
leave
mov
mov
sahf
fsubrs
fcoml
iret
and
jo
fwait
dec
ss
xchg
xchg
enter
imul
arpl
sti
test
xchg
je
mov
incb
leave
mov
jae
fnstcw
mov
and
dec
inc
inc
ja
sti
gs
jae
testl
nop
ss
pop
adc
or
pop
iret
dec
repnz
stos
mov
and
lret
or
jp
xchg
sbb
jae
repz
sub
xchg
cld
jl
xor
cwtl
nop
sbb
or
inc
sbb
stos
andl
dec
sub
sub
mov
sub
mov
out
clc
popf
sbb
inc
iret
sti
call
jle
repz
or
jl
mov
mov
fsubrs
xchg
mov
addb
xor
aad
push
rcrb
push
push
inc
mov
cmpsl
ret
out
jae
fs
jo
insb
call
adc
adc
inc
jb
ret
inc
adc
push
or
jecxz
addb
je
ss
dec
out
mov
push
sbb
subl
fbld
sbb
push
div
test
xlat
adc
mov
adc
sbb
subb
decb
lahf
stos
scas
lret
lahf
adc
arpl
dec
jb
sub
das
jne
add
sahf
pop
jns
pusha
mov
mov
popf
rcrb
adc
lret
into
dec
mov
insb
insb
push
push
push
xor
push
outsb
push
js
cmp
push
push
cld
dec
pop
outsb
dec
cmpsl
fnsave
fcmovbe
gs
add
clc
jno
sahf
mov
mov
and
mov
into
scas
add
jl
push
push
stos
or
movb
sub
int
rcr
or
pop
fucomi
push
test
sub
aad
and
cmp
pop
cmp
out
mov
insl
cmp
add
arpl
loopne
inc
scas
pop
insb
aaa
and
addr16
or
out
ljmp
jmp
mov
into
call
cmp
adc
cmp
loope
pusha
adc
std
fwait
mov
jecxz
cmp
mov
ss
push
add
das
pop
mov
jo
mov
mov
imul
dec
pushf
in
test
xchg
cmp
jecxz
or
sub
shlb
dec
sub
mov
mov
mov
jmp
add
pop
js
or
xchg
mov
xchg
pushf
mov
lret
add
pop
scas
cs
nop
call
shl
or
xchg
out
sbb
bnd
int3
xor
or
out
cs
loopne
andl
pop
aaa
push
addb
dec
xlat
mov
popf
push
lods
repz
xor
adc
lods
mov
mov
push
dec
loope
xor
out
mov
push
sub
dec
pop
mov
aas
adc
jmp
inc
mov
mov
sbb
xchg
test
ret
loopne
loop
scas
stc
pusha
idivl
testl
mov
mov
sbb
shll
inc
jecxz
int3
addr16
imulb
jno
jp
pop
iret
leave
sbb
xor
jne
test
cld
out
daa
jle
insl
push
les
inc
ret
cmc
xlat
xor
inc
sbbl
pop
xor
mov
inc
xor
mov
lds
inc
mov
jmp
mov
mov
sahf
jo
divb
popf
scas
inc
fadd
adc
pop
inc
sbb
dec
mov
xchg
mov
pop
mov
dec
push
pop
stos
xchg
jmp
pop
data16
jne
cmp
insb
test
ret
adc
jmp
mov
fwait
dec
push
add
popf
mov
pop
sub
fdivs
lea
and
int
inc
mov
repz
push
test
test
inc
ljmp
jl
jmp
lahf
inc
iret
fwait
js
pop
ret
and
sbb
aad
inc
and
xor
sahf
xor
and
xor
stc
movsb
arpl
cs
or
push
push
jle
repnz
xchg
and
push
dec
push
test
es
lret
mov
test
mov
fxch
ss
les
mov
stos
ja
ret
cmpsb
inc
cmc
jbe
lods
rep
jl
adc
push
mov
iret
mov
negl
bnd
jg
mov
or
ds
jge
arpl
icebp
jmp
inc
les
rcll
sub
cmpsb
idivl
sbb
inc
and
into
mov
aaa
pop
cli
cmpsb
inc
cltd
popa
js
insb
dec
inc
xor
rorb
dec
arpl
ret
cmp
jmp
rorb
divl
push
jne
aam
jno
mov
lock
fnstsw
fwait
stc
sub
fildl
jl
in
imul
fisttps
add
cmpsl
xor
pop
push
into
push
inc
imul
pop
pushf
dec
flds
push
stos
push
and
mov
mov
mov
mov
mov
pop
frstor
add
stos
outsl
ficoml
sbbb
lods
adc
movsb
pop
pop
scas
dec
fs
dec
dec
test
loope
pop
ret
or
repnz
xchg
xchg
sahf
clc
pop
out
jo
inc
lret
dec
pop
inc
in
imull
mov
lea
test
xor
adc
push
pop
pop
xchg
mov
arpl
xchg
jbe
jo
push
out
mov
enter
out
add
mov
xchg
je
push
shll
dec
test
imul
pop
sahf
dec
dec
fbstp
ljmp
repz
push
frstor
imul
call
sbb
pop
sbb
mov
adc
mov
cmp
and
aaa
adc
out
das
hlt
lcall
fsts
stc
lds
pop
and
out
dec
int3
std
fdivr
inc
repz
pop
pop
pop
mov
rorl
mov
sbb
jno
inc
or
mov
xor
test
lea
xor
or
lret
movsb
lods
add
cmpsl
pop
nop
jle
mov
sub
sub
push
pop
repz
jge
mov
or
and
sahf
dec
ljmp
mov
push
fidivrl
xlat
insb
call
out
jbe
sbb
sbb
mov
data16
pop
jno
sbb
xorl
rcll
sti
mov
add
ljmp
imull
aaa
movsl
repz
inc
jg
ret
rorl
add
into
rolb
pop
mov
leave
adc
dec
sbb
or
cli
adc
jne
rcl
lret
pop
adc
inc
pushf
mov
bound
mov
mov
je
xchg
neg
push
adc
push
jmp
jnp
mov
sub
inc
jae
push
cmp
enter
stos
cmp
mov
ds
cs
pushf
push
cmp
fdivs
push
imul
jnp
pushf
popf
lcall
xchg
dec
pop
pusha
add
inc
js
testl
nop
data16
push
cmc
in
out
add
inc
push
mov
or
xchg
and
cmpsb
daa
inc
pop
pop
ja
xor
push
mov
jbe
sti
out
icebp
xor
mov
adc
das
sbb
jecxz
mov
xchg
fwait
push
mov
lods
pop
add
fwait
loope
jg
fwait
clc
test
aaa
in
mov
and
adc
je
jo
stc
das
into
loopne
adc
lcall
test
sbb
xchg
pop
addb
or
add
push
mulb
inc
in
loope
hlt
std
mov
push
bswap
cli
pushf
imul
pop
popf
lret
and
imul
add
xchg
ficoml
cmp
add
std
xor
or
in
loope
cmpsb
fstpl
lret
and
ret
inc
mov
jle
mov
test
icebp
sub
pop
sub
and
mov
cmc
add
dec
xchg
xchg
mov
sbb
stc
outsb
inc
mov
insl
jns
and
push
fidivrl
and
repnz
insb
jnp
fsubs
cltd
inc
mov
xor
int3
pop
sub
es
ret
push
shll
pop
stc
cs
pop
pop
in
pop
push
add
loopne
xchg
pop
scas
mov
std
loop
ja
lret
mov
stc
pop
pop
pop
push
repz
mov
mov
sub
into
lret
inc
sbb
sbb
stos
mov
stos
push
and
add
movsb
sbb
push
das
cli
pusha
leave
or
cmp
cld
push
ret
sub
jo
jg
outsb
sub
sub
mov
mov
pushf
mov
pop
stos
jne
jbe
lods
shll
pusha
mov
inc
jmp
mov
jecxz
add
shll
xchg
mov
mov
cmp
mov
xor
and
pop
fidivrs
lret
fwait
lea
xor
sub
add
or
popf
imul
jmp
xchg
negl
sub
ss
cmpsl
push
insl
mov
fs
repz
pop
lahf
dec
fisttps
and
ror
add
push
xorl
mov
fldt
mov
fiadds
jo
cmp
shll
sbb
add
dec
pop
seta
mov
lock
lret
mov
call
stos
loop
imul
pushf
xchg
add
cmp
push
adc
mov
xchg
mov
jecxz
stos
cmp
sbb
xor
mov
fisubrl
xchg
cmpsl
andb
ss
xor
cmpsl
sbb
mov
sahf
add
jno
leave
push
mov
adc
movsb
clc
pop
imul
or
hlt
jg
std
jg
out
cmp
icebp
bound
dec
faddp
cmc
sti
xchg
or
imul
lods
and
mov
int3
mov
sbb
cmpb
push
adc
xor
es
insl
mov
imul
sub
bound
shll
aas
mov
test
mov
jp
adc
cli
lret
lahf
xorb
scas
fidivs
xor
push
mov
mov
push
mov
sahf
dec
fldenv
mov
test
cmp
insb
or
rcrl
mov
in
dec
nop
xchg
push
xchg
cld
jnp
pop
outsb
add
jge
mov
xchg
sbb
cmp
lods
adc
lods
mov
xchg
pop
popf
cmp
sti
data16
test
lea
push
sbb
aas
dec
mov
xchg
stos
test
dec
fsubs
in
mov
jge
test
sub
insl
pop
dec
lahf
scas
cmpsl
ret
arpl
pop
dec
mov
sbb
test
sub
jbe
inc
mov
addb
or
cmp
roll
int
repz
or
loopne
mov
or
sbb
jecxz
out
mov
adc
xor
and
cmpb
adc
adc
xchg
dec
and
jge
shll
pop
stos
push
loope
dec
cmp
ljmp
mov
add
insb
sbb
adc
ret
jae
les
add
cs
test
imul
jno
cltd
fdivr
mov
int3
fisttpll
sbb
pop
repz
cmc
cmpsl
adc
and
outsb
je
loop
arpl
push
sbb
add
insb
xor
dec
cmp
loop
and
fnsave
dec
xchg
xchg
cltd
scas
clc
fcompl
sub
rcr
call
push
pop
xchg
enter
jge
cmp
xchg
enter
adcl
mov
mov
pop
jp
aad
test
cmc
jne
dec
hlt
cmpsb
aam
jecxz
mov
cli
push
inc
into
sbb
stc
inc
les
mov
inc
jne
or
data16
or
add
pop
andb
push
divb
aaa
mov
icebp
rorl
lret
dec
sub
aas
std
les
repz
xchg
inc
in
test
sbb
js
push
sub
and
pop
sbb
adcb
jp
je
sti
pop
inc
inc
in
jmp
pop
iret
inc
jo
dec
call
icebp
cmp
dec
add
and
xor
sub
pop
mov
dec
jae
and
imul
jae
xchg
pop
lods
jo
mov
inc
xor
sbb
cld
sarb
mov
int3
pop
fs
inc
inc
mov
fnstcw
cmp
mov
jmp
mov
shlb
cmp
xor
xchg
sbb
jg
lcall
and
mov
jecxz
enter
mov
mov
add
xchg
mov
cmp
jl
mov
push
push
pop
out
push
push
shl
mov
xlat
insl
and
sahf
std
movsl
in
push
adc
into
fsubrs
pop
data16
cmc
ds
or
ss
popf
fldl
dec
mov
sti
add
cmp
fs
push
stc
lret
dec
sahf
mov
leave
mov
dec
lcall
mov
lods
sub
out
sub
push
dec
aam
rcll
js
inc
lea
rol
sub
sbb
movsl
cli
mov
inc
push
loope
or
xlat
adc
pop
xor
andl
adc
in
test
push
out
dec
inc
mov
jns
dec
add
cs
les
xchg
sahf
int
adc
dec
pop
mov
scas
sbb
push
dec
dec
lahf
lret
loop
xor
dec
adc
or
mov
add
dec
cmpsl
sbb
daa
lret
movsl
mov
add
xor
shr
lcall
test
mov
mov
push
xor
xchg
fistl
mov
add
jge
roll
fs
mov
jo
rcll
fstp
fmull
sub
push
xchg
inc
xchg
dec
add
rorb
enter
repz
fcomi
jecxz
iret
inc
cmp
test
sub
dec
mov
jae
stos
fs
adc
bound
jp
jmp
ret
xor
and
cli
out
cmp
xlat
jbe
out
adc
frstor
push
je
ret
cmp
shrb
fcoml
push
fs
imul
std
fsts
dec
xchg
aaa
sbb
adc
call
fdivrs
jecxz
inc
aas
into
jae
daa
push
jns
mov
stc
popf
mov
out
mov
and
add
ja
push
pop
aas
out
dec
pushf
pop
repnz
push
dec
pop
add
fmull
push
aam
int
stc
shll
jp
dec
andl
daa
test
sbb
cld
stc
dec
or
test
pop
jno
int3
xor
push
mov
sbb
jns
mov
test
inc
into
xor
sti
bnd
jge
pop
les
and
push
cmp
or
or
add
cmp
sub
push
or
xor
movsl
ret
mov
jb
scas
int3
movsl
jnp
cwtl
jnp
cmp
addr16
jecxz
std
cmpl
and
cmpsl
stos
push
mov
pop
test
outsl
mov
cs
cmp
int3
imul
inc
mov
push
andl
dec
pushl
jno
xchg
mov
lods
xorl
lds
es
or
addl
xchg
sbb
ret
cs
push
push
lret
pop
test
dec
push
add
pop
dec
sbb
mov
add
xor
loopne
leave
adc
mov
outsb
xor
cli
mov
inc
pop
inc
sbb
pusha
push
mov
sbb
decb
hlt
mov
jle
sbb
push
or
dec
mov
inc
or
or
mov
lret
jl
vpmaxsw
fistpll
stos
sub
push
mov
sbb
lea
xor
loopne
adc
or
enter
test
icebp
add
xchg
shll
mov
xchg
xchg
aam
or
insl
mov
sar
and
test
ss
jle
mov
mov
dec
sbb
lea
std
adc
add
imul
aas
cli
mov
fdivrl
mov
mov
int3
xchg
sbb
cltd
nop
push
mov
sub
dec
test
xchg
push
pop
inc
lret
push
mov
les
mov
inc
orb
pop
jb
faddl
jp
lds
lcall
push
imul
js
or
dec
add
pop
sbb
rcrb
je
popf
test
dec
push
inc
pop
cltd
xchg
in
xor
dec
das
cmp
in
mov
movsl
repz
jb
sti
psubsb
pop
jns
faddp
jmp
test
mov
dec
xchg
mov
mov
cmp
jne
xchg
movsb
lods
out
jbe
sub
or
je
lret
scas
je
jl
pop
push
ficompl
add
cmpsl
pop
je
in
inc
clc
test
sbb
mov
xor
sar
or
orb
loop
mov
xchg
call
pusha
mov
push
mulb
in
cmp
inc
lahf
mov
out
mov
push
ret
mov
mov
bound
jnp
add
insl
ret
add
xchg
xor
outsb
fwait
mov
stos
ja
in
or
cld
inc
jg
cmp
push
pop
scas
mov
mov
repz
jmp
ror
sbb
bound
mov
or
add
leave
imul
lds
xchg
jae
movsb
xchg
out
stos
test
xchg
push
sub
inc
popf
mov
scas
xchg
sbb
scas
mov
test
mov
mov
mov
sub
or
rcrb
mov
mov
daa
push
mov
fdiv
pop
push
addb
dec
adc
call
pop
sbb
lods
aas
jno
fnstsw
roll
hlt
mov
inc
sbb
or
out
sbb
jmp
pop
cmp
mov
arpl
add
cmp
dec
divb
loopne
cmp
mov
dec
sbb
and
movb
mov
fisubl
mov
pop
outsb
adc
mov
stos
dec
xor
dec
cmpsl
pop
ret
rclb
cli
movsl
mov
movsb
jl
in
movsl
pop
pop
rcrl
sub
notb
enter
lods
push
imul
jle
js
pop
add
xchg
fwait
mov
out
pusha
adc
jno
adc
mov
inc
popf
pop
lret
sahf
inc
mov
jge
push
xchg
loope
popf
iret
sarb
les
fisubs
sbb
mov
xor
cmpsl
and
pop
add
gs
rcll
pop
test
push
sub
ss
jbe
aas
aam
inc
pushl
stc
cmp
aas
dec
insb
stos
clc
mov
add
add
roll
add
cwtl
jb
pop
xlat
hlt
mov
cmp
aad
imul
push
dec
int
inc
sahf
adc
dec
jle
jmp
xchg
xor
iret
jns
sub
or
jno
stos
jg
push
push
or
push
ljmp
dec
sub
pop
dec
mov
movsb
jnp
push
pop
insb
enter
outsl
adc
test
popf
loope
mov
popl
es
mov
jne
decl
jno
out
or
lret
lds
movsl
xor
scas
push
pop
jo
fbld
aas
add
sbb
xlat
pop
pop
mov
cmp
and
xor
dec
cmp
in
js
push
mov
icebp
and
in
popf
dec
or
ficoml
in
mov
arpl
pop
es
inc
and
call
mov
jne
dec
pop
out
jg
inc
sub
push
hlt
mov
adcb
popf
std
jg
sub
lods
inc
fnsave
inc
lock
arpl
mov
popa
shlb
adc
jl
pop
fmuls
cmpsl
int
add
push
jne
or
mov
fwait
lods
jge
movsb
stos
mov
cmp
mov
or
and
cwtl
insb
cld
pop
aas
inc
cmp
andl
mov
out
rcrb
addr16
xchg
std
pop
mov
gs
je
ret
cmpsb
jge
xlat
sub
mov
pushl
stos
mov
sbb
inc
test
cmp
xchg
enter
xor
jecxz
out
mov
cmp
push
mov
jge
mov
fidivl
cmpsb
inc
inc
call
push
push
push
pop
dec
push
js
inc
into
add
leave
sbb
mov
adc
sti
faddp
and
dec
add
enter
ffree
inc
stos
stc
push
pop
add
stos
pop
pop
sbb
push
push
sub
lock
sbb
lahf
jp
std
mov
cmp
xchg
ret
testb
dec
sbb
add
push
sbb
imul
pop
xlat
popa
int
pop
push
push
push
jmp
movsl
stos
cmp
cmc
mov
push
lret
sbb
and
aas
or
push
shlb
repnz
push
and
xchg
xchg
mov
push
inc
and
dec
out
stos
or
popf
xchg
mov
jmp
mov
sbb
mov
imul
jmp
xchg
or
dec
ds
push
xchg
dec
mov
mov
lds
leave
mov
aam
repz
jg
in
std
inc
divl
dec
jmp
andl
cmp
xor
push
dec
push
shlb
rolb
fs
push
adc
push
aaa
into
scas
xchg
iret
dec
pop
mov
mov
dec
sub
push
dec
das
cmpsb
rcl
int
add
lods
adc
dec
popf
imul
popa
jl
xor
sbb
mov
xchg
push
pop
push
ficoml
cmp
mov
std
shlb
fdivs
mov
mov
inc
push
mov
divl
out
aas
bnd
incl
movsl
fcoml
jo
inc
mov
jbe
arpl
add
mov
push
adc
dec
cmp
repz
xor
push
daa
dec
mov
scas
and
jg
pop
push
out
les
sbb
mov
push
jle
insb
test
sub
fwait
stc
or
inc
xor
mov
aam
out
mov
movsl
lea
add
add
js
mov
sahf
gs
outsl
jb
sti
sbb
aas
xor
sub
or
cmp
popf
mov
test
push
lret
je
push
shlb
xlat
push
aam
pop
jne
fst
scas
js
and
pop
rol
cmp
xor
nop
leave
xchg
cli
pop
sbb
test
or
arpl
adc
fwait
cwtl
aam
cs
mov
pop
fdivl
xchg
cltd
lods
jne
sbb
lret
cli
cmp
sub
pop
xchg
sar
ljmp
test
xchg
sub
mov
data16
jb
inc
iret
fimuls
jmp
adc
popa
pusha
jnp
sbb
inc
and
add
mov
mov
pop
lds
ss
shrl
dec
xchg
lea
scas
xor
sbb
push
mov
xor
mov
xchg
cmp
jle
push
add
xchg
repz
push
adc
mov
testb
scas
lods
add
mov
sub
popl
fdivrl
ret
mov
jle
inc
incl
xchg
mov
scas
xlat
mov
jae
cli
fs
sbb
pop
fs
pop
repnz
xchg
xor
in
call
andl
xchg
push
jge
sbb
mov
mov
adc
sub
lahf
fists
fwait
jmp
lods
inc
cmp
ret
repz
es
cs
mov
shrb
and
push
sub
push
push
test
mov
mov
enter
cmp
lock
or
jp
fsubs
pusha
aaa
sbb
adc
or
shr
lret
imul
mov
pop
testb
in
outsl
out
cmp
in
cmp
ja,pt
dec
mov
jmp
outsl
pop
dec
lock
adc
mov
pop
repnz
mov
pop
das
push
sbb
sti
inc
cli
mov
pop
data16
jno
lds
pop
out
negl
lock
insl
xchg
fbstp
negl
push
sbb
pop
sarl
hlt
mov
out
xchg
dec
or
inc
shlb
jae
or
jge
lds
fwait
gs
push
dec
jg
cmp
in
dec
pop
enter
dec
pop
add
clc
sbb
sarb
push
inc
cmp
test
int3
sbb
push
cmp
pop
movsl
ret
jb
jb
and
loope
push
xchg
jg
faddp
and
lahf
iret
sbb
int
push
push
int3
jge
stc
pop
add
ret
cwtl
sbb
xor
frstor
xor
and
mov
ss
cmp
mov
in
and
mov
push
test
push
push
xlat
jne
cmp
mov
cld
rol
loope
cld
jg
jae
cld
inc
dec
inc
jo
jnp
mov
pop
or
xor
addr16
inc
in
addr16
jmp
leave
je
int
lds
lds
les
xchg
jp
add
xor
mov
popf
stos
ds
stos
jne
inc
inc
inc
dec
push
repz
inc
pop
mov
mov
decl
or
or
outsl
and
iret
aad
hlt
out
sahf
dec
mov
loop
dec
dec
or
jne
gs
jae
jecxz
jne
pop
jns
or
or
sbb
xchg
mov
xchg
mov
ret
popf
fs
ds
fwait
outsl
enter
sbb
rcrb
mov
movsb
fwait
jge
mov
dec
test
jne
rorb
or
mov
popf
sti
inc
adc
in
add
ret
clc
cmp
in
addr16
in
std
int
push
leave
jecxz
and
movsb
dec
sahf
pushf
leave
inc
data16
iret
dec
arpl
dec
popf
popf
push
mov
mov
stos
xchg
and
push
dec
jne
adc
xor
lds
cld
andb
sbb
or
push
les
mov
cmp
pusha
push
push
mov
adc
inc
fucomi
hlt
js
popf
scas
push
fwait
add
test
pop
es
add
mov
nop
stos
push
scas
push
movsb
mov
xor
adc
sti
and
dec
popf
push
cmc
cmp
inc
fsubs
jno
mov
dec
jecxz
cmovl
mov
dec
lea
pop
xchg
or
sbb
pop
in
iret
fmuls
mov
pop
add
cld
incl
js
ljmp
pop
mov
daa
clc
add
roll
sbb
mov
ja
movsl
rorl
sbb
pop
das
xchg
lock
fisttpl
mov
nop
xlat
stos
mov
fidivrl
test
cmp
mov
dec
scas
mov
ffree
sti
pushf
ret
dec
mov
pushf
ds
ret
cmp
outsl
mov
pop
flds
cmp
test
dec
mov
aad
or
addb
mov
jae
sub
cmpb
push
sbb
jbe
fucomi
cmpl
jmp
mov
or
add
xor
push
fstpt
clc
cmp
sub
adc
xchg
or
imul
xor
dec
inc
mov
aaa
andb
inc
xor
push
xor
pop
and
sti
inc
imul
mov
out
xor
lret
sub
out
push
mov
je
and
call
pop
scas
push
pop
jecxz
cltd
pop
push
ret
scas
outsl
outsl
sti
mov
sbb
adc
or
fstps
imul
xor
jp
pop
in
sbb
int
lret
push
dec
lds
lods
pop
scas
inc
mov
sub
cmp
xchg
mov
in
idivb
int
add
lcall
jns
dec
stos
push
mov
mov
or
outsb
sbb
sbb
add
stc
push
scas
loope
mov
iret
sarb
pop
dec
mov
inc
mov
add
in
int
push
xor
fsubrs
pop
mov
inc
mov
pop
inc
sahf
lahf
outsl
jle
ret
xor
icebp
outsb
xor
xchg
orl
cmp
xchg
stos
mov
jecxz
in
jmp
fwait
test
and
dec
pop
sti
popa
stos
mov
pop
test
fwait
aam
int
daa
test
pop
lds
clc
cmp
pop
or
mov
fnsave
inc
insb
insl
test
add
mov
cwtl
lret
mov
and
das
stos
xorb
rcll
lods
mov
andl
inc
std
cmpsl
dec
ljmp
rcr
pop
lcall
xchg
andl
rcrb
add
xchg
je
sbb
lret
pop
test
sbb
push
mov
andb
inc
nop
and
add
inc
push
jo
mov
mov
mov
test
or
and
push
inc
pop
sbb
ret
or
sti
mov
dec
inc
leave
rcrb
frstor
and
test
xor
das
or
iret
aad
loope
or
xchg
jb
mov
fdivs
xchg
push
pusha
xor
add
xor
cmp
mov
sbb
add
das
jnp
in
fstpt
ss
mov
fsubrl
fwait
sahf
push
outsl
mov
mov
lods
fildll
jnp
pop
dec
jle
outsl
scas
in
mov
cmpsl
and
sub
shrb
les
cmp
xor
mov
enter
cmp
add
push
pusha
loope
cmpsb
mov
and
push
xchg
cld
test
sarb
popf
scas
rolb
or
push
lret
cmc
ret
jl
jle
or
ds
cmpsl
mov
andb
cwtl
add
test
popa
sub
push
fdivrs
and
imul
int3
int
sbb
inc
pop
movsl
insb
aaa
daa
loopne
aam
pop
popa
mov
push
inc
xor
mov
sahf
fiaddl
and
pop
or
negb
inc
xor
push
xchg
sbb
lahf
daa
test
jnp
jecxz
in
ja
testl
or
push
xor
fcmovnbe
fildll
std
jg
fs
lods
push
repz
mov
fsubrl
mov
out
adc
dec
adc
pop
fdivrl
mov
push
std
cld
pop
les
lcall
dec
sbb
sub
fmuls
andl
cmp
ss
xlat
sub
ret
adc
dec
cld
arpl
sbb
jl
popa
mov
xchg
dec
ficoml
xchg
push
adc
cmp
jp
gs
ret
xor
iret
test
or
lea
icebp
jge
mov
mov
mov
lcall
lea
xlat
imul
cmp
pop
jecxz
mov
sbb
jecxz
cmp
sub
sub
vdivsd
sbb
sbb
imul
push
xor
cmpsl
dec
mov
popf
pushf
fnstcw
jge
mov
out
cli
xor
jmp
neg
jns
sbb
xor
stos
push
mov
js
data16
insl
stos
jge
ljmp
mov
mov
adc
insl
mov
popf
lds
jnp
dec
fisubrs
add
fwait
leave
icebp
dec
sarb
das
cmpsl
xlat
in
loopne
andl
rcr
xor
mov
mov
clc
mov
mov
add
jae
imul
sub
cmp
dec
push
loop
fcompl
xchg
mov
mov
test
fimuls
cmp
xor
cmp
cmp
out
pop
add
pop
out
cmp
xor
mov
xor
int3
lods
xchg
xor
pop
sub
popa
cwtl
int
std
out
std
xchg
add
fcomps
aam
sbb
scas
adc
lret
hlt
stos
mov
push
mov
xchg
mov
shll
int3
pop
push
sbb
cmp
movsl
inc
dec
mov
mov
out
xchg
stos
std
cld
sub
jo
add
mov
inc
mov
inc
push
pop
jmp
adc
jle
xor
jo
mov
lret
sub
js
cmp
push
mov
addr16
xlat
adc
lcall
mov
loope
xchg
xchg
jle
push
js
sub
inc
pop
xchg
mov
out
pop
adc
lcall
push
or
mov
xor
cmp
add
mov
stos
mov
dec
in
cmp
jmp
jne
inc
dec
inc
xchg
lret
jecxz
cmp
cmp
add
shll
or
ret
xchg
adc
inc
out
push
sbb
sarl
into
mov
hlt
cwtl
mov
jnp
hlt
rcr
fcmovnb
push
int3
call
or
mov
pushf
lcall
dec
movsl
sub
pop
mov
or
dec
push
stc
aaa
ret
jns
and
repz
mov
cmp
adc
mov
or
cmpsl
cmpsl
clc
mov
inc
call
mov
mov
stos
divl
int
lods
jmp
xlat
dec
push
out
push
test
xchg
cltd
int3
pop
hlt
fs
mov
push
dec
mov
mov
and
mov
sbb
jnp
int3
add
stos
jmp
mov
rcrb
ret
loopne
in
mov
icebp
fistps
xchg
jecxz
inc
xchg
sbb
or
add
repnz
inc
cmp
jl
lds
adc
rcrb
stos
add
fwait
mov
mov
mov
sti
mov
scas
lds
mov
adc
mov
and
cmp
push
mov
daa
mov
rclb
jg
mov
jge
inc
in
repz
push
fildl
push
adc
fdivrl
into
inc
add
add
mov
mov
mov
xchg
cmc
mov
sbb
repz
sbb
sarl
pop
mov
fisubs
movsb
loopne,pn
cmp
loopne
enter
add
lods
cltd
mov
in
stos
jmp
test
loop,pt
ret
mov
ficoml
jmp
mov
mov
mov
test
js
out
imul
sbb
cmpsl
sarl
movsb
push
mov
jo
lret
mov
sub
adc
cs
out
cmc
sub
sahf
aaa
sar
scas
push
mov
cmp
or
add
jo
add
jbe
add
shlb
out
sub
add
shrl
test
xabort
mov
cmpsb
ret
data16
pop
mov
xchg
cwtl
fs
fnstsw
dec
pop
fucomip
testl
scas
push
movsb
adc
in
and
and
fucomi
push
icebp
xchg
stos
and
stos
or
pop
mov
inc
jge
fldt
add
cmp
jns
cmp
xchg
cmpsb
in
mov
mov
leave
lds
pop
rcrl
data16
cltd
jb
fistl
loopne
cld
flds
pop
mov
insl
hlt
jb
ss
fs
xchg
pusha
inc
mov
sbb
inc
pop
xor
add
dec
sbb
and
push
and
pop
sub
clc
scas
stos
add
adc
adc
mov
imul
repz
mov
fnstsw
jne
repnz
cmpsl
push
push
mov
jo
xchg
adc
push
add
cltd
lods
enter
lahf
pop
add
or
xchg
or
xchg
push
notl
fdivrs
icebp
xchg
push
cwtl
lret
cmc
in
jp
adc
call
mov
xchg
imul
xchg
cmp
mov
fs
sti
mov
push
fisubs
das
dec
inc
sub
jns
fisubrs
test
mov
sub
jbe
cmp
movsl
repz
imul
aas
stos
inc
xor
inc
pop
xor
cmpsb
in
ss
bound
aas
mov
mov
cld
add
adc
pushf
insb
xor
jg
pop
decb
shll
mov
xchg
cmp
push
dec
scas
outsl
mov
out
cmp
mov
nop
insb
push
cld
jl
inc
pop
popl
sar
jb
movsl
or
fcoml
xor
inc
test
aad
pop
out
push
jno
inc
jmp
xchg
scas
mov
adc
daa
imul
popf
ss
std
xorb
sub
cwtl
shl
xchg
les
popf
jmp
and
xchg
cltd
xchg
dec
add
outsb
xrelease
mov
out
mov
jecxz
fisubl
test
dec
sar
les
pavgw
dec
push
test
lods
adc
cmpl
lret
sbb
arpl
mov
mov
fcmovnu
add
fiaddl
mov
pop
push
imul
out
mov
in
ja
nop
xor
idiv
jmp
or
lods
icebp
fildll
dec
mov
scas
in
mov
sahf
std
push
imul
xor
subb
pop
push
mov
add
push
jle
jbe
arpl
xchg
mov
mov
pop
aam
lea
enter
outsb
push
sbb
mov
adc
add
jne
jle
fs
sub
mov
add
inc
mov
push
movsb
adc
out
push
sbb
mov
xchg
cmc
mov
ret
push
or
imul
cmp
mov
dec
popf
jb
ret
fiadds
iret
sbb
or
pop
adc
es
sbbb
movsl
inc
scas
cmpsb
dec
daa
insb
sbb
int
jle
pop
xor
mov
inc
pop
mov
popf
cmpl
add
andl
inc
mov
test
rorl
mov
dec
test
jns
gs
shlb
leave
and
fnstenv
shrl
mov
rorl
dec
repz
repz
repnz
add
lret
xchg
or
repnz
subb
mov
sub
or
push
mov
lahf
push
mov
adc
fucom
cli
js
mov
enter
mov
pop
sbb
xchg
lcall
sahf
add
xchg
int
adc
iret
gs
test
lea
stos
push
pop
jo
cmpl
call
mov
sbb
rcr
mov
inc
aam
addl
scas
xor
inc
xor
sub
sti
mov
cmc
lea
sub
mov
xor
lds
jl
daa
add
lret
inc
test
adc
ret
scas
pop
unpcklps
scas
push
push
pop
fistpl
sbbb
inc
shrb
xlat
out
push
popf
popf
mov
lret
jle
lea
gs
rcll
add
or
mov
lods
ss
xchg
les
cmp
add
movsb
push
aad
mov
mov
jae
xor
dec
mov
nop
push
or
cmp
fidivs
aas
icebp
cli
ret
mov
adc
xchg
adc
sbb
nop
dec
and
push
mov
in
insb
les
imul
pop
xor
mov
mov
xchg
out
sbb
data16
or
mov
xor
loop
mov
outsl
mov
jmp
fwait
cmc
je
movsb
xchg
repz
sub
xor
dec
xchg
sti
aas
jnp
jg
pop
add
pusha
xlat
call
test
and
test
in
popf
or
fsubrl
pop
addr16
fstps
lcall
adc
cli
ss
stos
fwait
mov
repnz
insb
bound
mov
int3
test
es
add
outsb
into
xor
ficoms
stos
inc
lcall
add
inc
gs
add
mov
fucomi
cmc
add
fdiv
repz
xlat
adc
outsb
push
faddl
mov
or
xchg
push
cmp
or
pop
nop
popf
sbb
sub
sub
xchg
adc
sbb
lock
or
les
mov
fldenv
cmp
clc
mov
lea
ljmp
test
mov
cmp
cld
xchg
repz
adc
adc
mov
std
andb
sbb
aad
test
and
mov
dec
xor
lahf
or
jnp
aad
mov
cld
xor
pop
and
in
mov
icebp
ja
cli
iret
sbb
je
scas
jmp
test
rcr
ret
mov
data16
fnsave
test
test
and
jl
xor
adc
scas
sub
sub
js
dec
mov
jo
xor
xor
push
in
adc
xchg
mov
mov
xchg
sub
fistpl
sahf
jmp
cmp
imul
sti
fmuls
fs
je
out
les
int
sti
dec
add
or
out
mov
mov
dec
push
xchg
jnp
fdivrs
fcoms
mov
pop
mov
pop
inc
ret
clc
jmp
sub
mov
test
lods
sub
cmpsb
out
scas
push
int
jo
lcall
shll
jge
adc
es
mov
dec
xchg
neg
in
mov
popf
gs
dec
sub
daa
arpl
sbb
fstps
pop
stos
pushw
scas
insl
or
lahf
mov
mov
mov
rcll
lret
push
rclb
and
mov
scas
call
subb
push
nop
push
imul
jge
arpl
inc
fwait
cmp
lods
inc
das
ret
pop
mov
pop
push
push
pop
mov
jmp
ja
jecxz
in
das
sbbl
lods
mov
dec
addr16
mov
sub
sbb
cmp
pop
arpl
adc
mov
ljmp
movsb
test
mov
mov
jmp
lds
inc
pop
pushf
icebp
ja
sbb
je
dec
inc
in
mov
idivl
sub
test
mov
dec
test
outsb
cli
sub
adc
gs
cs
and
cltd
push
cld
adc
test
mov
jle
pop
mov
pop
and
or
pop
or
mov
mov
lds
cwtl
test
test
add
push
cmp
subl
adc
adc
push
push
push
xchg
icebp
lahf
inc
leave
test
sti
js
popf
scas
jge
add
jo
into
mov
sub
or
inc
lods
popl
xchg
inc
daa
jae
sbb
scas
dec
push
hlt
fwait
add
test
mov
outsb
lahf
out
lahf
ret
loope
jb
jnp
fsubl
movsl
int3
mov
sbb
pop
add
or
dec
pop
mov
sahf
imul
add
push
rolb
call
fcomp
inc
xor
out
jg
mov
cmc
mov
add
push
add
cld
push
nop
xor
mov
cwtl
xlat
mov
sbb
sbb
xchg
jae
inc
sbb
sbb
push
add
ret
cmp
pop
dec
mov
mov
cmp
cwtl
push
rorl
and
shld
mov
pusha
lahf
xor
pushl
movsl
jg
dec
shlb
add
repz
cltd
loopne
ja
or
pop
call
test
popf
mov
scas
dec
dec
scas
lods
xlat
aas
fists
popa
lcall
cltd
pop
clc
fdivrs
insl
push
or
fsts
jno
in
pushl
inc
test
orl
movsb
xor
mov
xchg
test
inc
in
pop
mov
mov
fs
jno
lret
inc
mov
movsb
jle
in
or
or
jecxz
mov
daa
sbb
outsb
pop
mov
lret
loope
iret
stos
mov
dec
mov
subb
mov
inc
sub
mov
test
xchg
fstp
pushl
xor
daa
mov
xor
add
push
mov
movb
mov
push
or
and
xchg
inc
inc
and
add
cld
or
fnsave
xor
repnz
lret
mov
test
cmp
fwait
xor
push
das
lcall
cmp
jb
test
cmp
clc
shlb
bound
cltd
aam
pop
pop
loop
jg
hlt
test
pop
xchg
cltd
in
out
jle
jge
and
inc
pop
or
sahf
shll
test
sbb
loop
and
jo
inc
push
jg
jo
xlat
hlt
ss
fwait
mov
fisttpl
js
repnz
stos
sub
je
hlt
mov
es
mov
jno
or
push
inc
mov
in
pop
cli
sub
mov
test
push
ret
in
dec
fstpt
shll
xchg
xlat
shl
and
jno
stos
aaa
std
push
push
mov
adc
sub
mov
sub
xchg
mov
push
nop
jecxz
push
mov
xchg
in
andl
lret
data16
jo
cmp
orb
adc
fistpl
push
cmpsb
sub
insb
dec
mov
dec
test
or
std
xchg
imul
into
pop
jl
pop
add
enter
gs
cld
std
jl
push
or
adc
and
addb
pop
mov
ds
add
and
cmc
sub
jbe
mov
out
jge
test
stc
je
lock
jge
test
rolb
jae
enter
push
jnp
test
lcall
jl
lahf
and
pop
gs
push
lahf
pop
cmpsl
rcll
orb
fld
mov
fadds
sbb
popf
inc
and
orb
inc
gs
pop
fstl
cmpsb
stos
xchg
dec
pop
mov
sub
or
cld
adc
xchg
cmpsl
jnp
fs
mov
lds
cmp
or
dec
rcrl
sub
dec
adc
inc
lret
push
frstor
call
subl
mov
dec
cmp
sbb
jecxz
lods
int
cmp
test
push
sbbb
xchg
xor
and
xor
inc
inc
push
enter
aam
dec
sub
ljmp
or
int3
add
stos
mov
lea
add
in
mov
dec
cmp
xor
mov
pop
sti
cmp
jo
mov
cwtl
cmp
jp
push
jecxz
outsl
insl
xchg
add
repz
roll
pop
out
mov
mov
fisubl
dec
pop
jae
roll
mov
xchg
test
mov
or
lds
test
add
adc
aaa
mov
jnp
in
aam
jns
mov
or
add
pop
jo
push
sahf
fs
sbb
inc
notl
dec
jl
int
dec
mov
icebp
pop
jle
pusha
mov
pop
dec
insl
jmp
scas
int3
cli
mov
mov
cmpsl
jp
cmpsb
add
fwait
mov
les
push
xor
scas
mov
push
imul
enter
dec
fcmovnb
repnz
pop
add
inc
cltd
mov
lods
mov
arpl
icebp
repnz
sti
mov
or
repnz
std
fimuls
rol
jo
or
and
hlt
lods
jl
jmp
aam
xor
mov
pop
jbe
pop
les
xchg
add
xlat
icebp
sarb
cmpsl
xchg
mov
mov
shlb
push
push
inc
aad
mov
inc
lcall
push
jno
je
jbe
mov
cld
mov
cmp
lahf
mov
inc
and
push
aas
cmpsl
add
test
cmpsl
mov
sub
cmp
repnz
xchg
dec
jmp
mov
aam
movsl
ret
xchg
insb
aam
lcall
lock
out
push
pushf
enter
sub
cmc
enter
gs
cld
loope
aas
push
or
ret
das
mov
xchg
outsl
mov
jge
sub
jbe
or
loopne
movsl
fucomip
or
xchg
push
inc
add
pop
dec
js
sbb
cmp
mov
and
inc
pop
mov
cld
mov
mov
notl
push
and
mov
imul
lret
pop
mov
movsl
test
insl
cmpsl
stos
test
test
xchg
dec
mov
mov
es
push
sub
shl
cmp
cmp
push
pop
iret
outsl
mov
push
repz
aas
cmpsl
xlat
and
outsl
lods
mov
sti
imul
ljmp
mov
jecxz
test
cmpsb
push
mov
mov
jmp
stos
cmp
pop
sahf
add
outsl
stos
mov
sbb
mov
pop
mov
sub
ret
jl
adc
mov
pop
lret
adc
xor
fucomp
pop
das
or
mov
pop
or
or
ss
cmp
add
mov
pop
dec
or
add
xor
mov
ja
cmp
mov
addr16
aas
fucomp
fsubrl
ss
push
sub
cmp
mov
inc
pop
dec
mov
xor
vpackssdw
out
sub
xor
idivb
in
xchg
stos
lds
push
int
dec
mov
cmp
mov
and
lahf
in
scas
fisttpl
pop
inc
bound
aas
leave
loop
repz
aas
cmpsl
xlat
jg
addl
pushl
xor
fsubrs
mov
jp
mov
xchg
mov
mov
push
lods
sahf
rorl
fbld
jno
fld1
jb
fstl
test
cmp
adc
imul
push
push
dec
push
in
inc
dec
mov
push
inc
fsubl
jmp
mov
inc
or
jae
popa
mov
mov
aam
mov
xor
std
jb
repz
cmpsb
mov
pop
aaa
mov
ret
add
add
inc
int
loop
xor
sbbb
lret
jns
imul
shlb
fdiv
outsl
les
or
in
mov
clc
pushf
sbb
outsl
fs
lods
pop
or
pop
mov
sub
pop
or
lods
jne
sbb
and
pop
push
lahf
inc
leave
fs
jno
sub
int
pushl
dec
inc
cld
int
add
push
test
inc
fdivrl
sbb
dec
fsub
push
jge
stc
mov
movsl
ret
xchg
out
mov
out
mov
loopne
mov
enter
mov
bound
and
int3
pop
sub
dec
sub
jae
test
push
adc
mov
dec
mov
lds
inc
xor
not
addr16
mov
mov
rolb
add
data16
ficomps
test
outsl
outsl
lods
mov
cmp
jecxz
repnz
push
pop
aas
and
sbb
push
mov
push
inc
aam
add
lock
push
popa
xor
int3
stc
dec
sbb
test
add
mov
pop
outsb
mov
mov
or
push
aad
scas
out
sbb
aaa
out
fisttpll
mov
cmp
cmp
scas
stc
or
bnd
loope,pn
iret
pusha
ja
mov
addb
mov
loope
fcomp
stc
pop
jle
adc
dec
mov
add
aam
cld
push
cmpsb
pop
add
fsubl
xor
mov
js
push
sbb
jb
xchg
inc
pop
mov
cmp
xchg
push
sahf
inc
cmp
test
lods
mov
xchg
xchg
pop
iret
fucomip
repz
mov
call
repz
adc
jecxz
fs
cmpsl
mov
pop
dec
addr16
sbb
xlat
stos
mov
ja
inc
sub
lahf
push
sub
xorb
hlt
jnp
ja
in
xchg
mov
pop
push
inc
shrb
inc
xchg
add
mov
cmp
pop
cmpsl
dec
pop
cmp
pop
ret
in
lahf
and
inc
bound
jne
loop
sar
mov
fstpl
mov
stos
cltd
mov
ficompl
mov
mov
fwait
mov
ret
mov
scas
int3
fstpl
mov
addl
lea
xor
imul
dec
xchg
sub
test
mov
enter
pop
sub
xlat
adc
sarb
jb
hlt
jmp
xchg
fistl
rol
enter
jns
fucomip
daa
enter
jnp
xor
jnp
insl
dec
pop
xchg
incl
mov
or
add
int
adc
xchg
inc
pop
addr16
sbb
aaa
outsb
test
mov
xor
iret
out
lret
gs
xor
lcall
fistps
aam
insl
mov
scas
mov
add
jge
pop
and
pusha
insl
inc
sub
sbb
loopne
push
fmull
leave
ja
loop
mov
es
cmpsl
jnp
fs
mov
and
or
test
mov
aaa
mov
js
dec
mov
add
inc
push
adc
push
push
in
mov
clc
loop
xchg
sbb
xchg
pop
inc
jo
out
push
xor
mov
mov
pop
ljmpw
adc
inc
and
sbb
loop
addb
and
mov
call
xchg
lcall
sub
mov
mov
pop
out
adcl
popa
popf
mov
jg
cltd
add
lea
out
loopne
sbb
dec
cmpl
dec
xor
inc
mov
leave
push
ljmp
inc
pop
xchg
pop
jg
mov
lret
or
xor
push
sbb
dec
shl
ret
pop
pop
rcrb
les
outsb
fs
jbe
lahf
push
inc
fwait
add
and
and
mov
push
or
mov
pusha
inc
es
sarb
test
ds
adc
mov
leave
dec
std
lahf
int
and
frstor
mov
in
push
lods
pop
in
mov
fs
inc
in
cmc
lea
pop
gs
ja
jmp
lret
fnstenv
test
dec
pop
mov
repz
fimull
xchg
insl
dec
mov
mov
int3
mov
push
rcrl
jg
mov
ja
and
jae
mov
lcall
push
add
cmp
xchg
test
cmpsl
ret
inc
test
jp
dec
inc
outsl
dec
hlt
sub
jnp
and
test
nop
xor
jle
roll
sbbl
cmpsl
xchg
test
sbb
push
jo
mov
aas
imul
loopne
fwait
lods
dec
pop
sub
xchg
pop
iret
fstl
cld
scas
iret
fdivrs
or
jecxz
scas
inc
xlat
mov
jo
add
mov
arpl
add
inc
fistl
ja
mov
dec
and
and
cmp
je
fs
pop
into
ja
sub
pusha
jo
jns
call
add
and
inc
in
mov
lock
lods
cmp
fidivs
adc
cmpsl
lcall
dec
and
adc
sbb
add
inc
inc
call
cmp
ret
call
adc
clc
xchg
jge
xlat
jne
pop
cmp
jns
xlat
ja
dec
jno
leave
cli
icebp
cli
ficoml
pop
gs
aad
aas
push
xor
shll
mov
sub
stc
sub
lods
and
jbe
lcall
or
shll
jp
scas
mov
ret
inc
push
fadd
pushf
lcall
popa
mov
xchg
or
jp
rorl
arpl
and
aam
jge
into
sub
in
sub
mov
add
and
mov
int
jg
pop
mov
add
pop
cmp
xchg
imul
push
mov
add
xchg
outsb
es
jecxz
clc
push
adc
and
jecxz
push
cmpsb
hlt
xor
and
sub
cmp
adc
cmpsl
leave
mov
push
xchg
in
xchg
cltd
jne
cmp
and
popf
cld
sub
cwtl
mov
std
fstps
call
push
cmp
inc
mov
push
pushf
xor
pop
js
cwtl
push
aam
sbb
adc
push
push
fadd
mov
test
out
dec
cmp
dec
xor
jmp
mov
out
cmp
adc
bswap
or
pop
aas
or
shlb
mov
inc
cs
cmp
and
dec
mov
scas
gs
inc
repz
push
inc
js
cwtl
cld
shrl
andl
push
cld
sub
xor
jb
dec
movsl
and
jnp
icebp
out
pop
adc
jae
mov
pushf
lods
and
add
push
xor
lret
pusha
sbb
shrb
mov
sub
pop
sub
jo
inc
push
test
pop
mov
adc
rclb
jg
fmull
sub
test
add
fcoms
rcr
sbb
sbb
scas
lock
cmpsl
mov
mov
dec
lock
sub
adc
aaa
mov
rorb
xor
mov
xchg
cmc
fcmovne
scas
sbb
dec
out
mov
jo
xor
push
idivb
iret
roll
push
push
sbb
jbe
lods
xchg
push
ljmp
mov
bound
leave
rol
push
mov
js
stc
sbbb
in
mov
cwtl
add
notb
pusha
dec
aam
inc
les
xor
or
inc
inc
dec
mov
ret
cmc
jmp
cmp
mov
imul
or
xor
push
pop
mov
fidivl
mov
adc
lret
ret
cmp
inc
movsl
jp
fistl
inc
pop
mov
and
je
ds
cmpl
xchg
adc
ljmp
test
ret
xor
mov
fisttpl
sub
mov
lahf
push
and
cwtl
jecxz
cld
stos
dec
inc
add
push
dec
sbb
inc
push
stc
jbe
js
bound
test
test
mov
mov
lret
and
pop
scas
jne
xchg
mov
loope
ja
lret
xor
lods
mov
mov
int
jo
xchg
dec
aas
ds
jl
loop
or
jle
ds
imul
fcomps
adc
loope
outsb
xchg
or
mov
xchg
pop
movsl
call
jnp
add
mov
mov
shl
insb
and
mov
sub
inc
xor
jb
adcl
fwait
pop
fdivrl
sti
mov
loopne
inc
mov
xlat
int
lock
and
lock
mov
addb
mov
mov
inc
inc
xchg
push
imul
scas
mov
fcomip
lods
jnp
cltd
push
add
jne
pop
sbb
daa
into
and
mov
fiadds
dec
fsubrl
or
mov
xchg
adc
mov
mov
mov
dec
fs
sub
shll
cwtl
mov
pop
cmp
inc
xchg
sahf
and
js
mov
jecxz
mov
call
mov
cmp
daa
shrl
xchg
jno
adc
mov
sub
cmpsl
cli
sub
mov
jne
pop
insl
jo
movsl
mov
decl
dec
cmp
cmp
bound
fstl
inc
push
adc
das
or
jbe
lods
pop
je
mov
cmp
cmp
cli
test
sub
xor
aad
lahf
dec
aaa
je
xor
mov
loope
iret
stos
sahf
in
out
mov
xchg
mov
subl
lahf
movsb
mov
lcall
fcmovbe
xchg
arpl
xor
mov
outsb
cli
arpl
mov
add
sub
or
sbb
push
arpl
push
sbb
mov
fs
jnp
jo,pn
push
das
sub
mov
fsubr
in
lds
fwait
imul
in
js
in
divl
sub
dec
mov
mov
dec
adc
iret
in
fucomp
push
mov
mov
mov
jno
and
fsts
push
lcall
and
mov
fs
mov
sub
test
jne
dec
jg
jmp
xor
lods
in
mov
mov
idivl
jns
add
inc
xor
jecxz
lods
xchg
xlat
lods
mov
cmc
repnz
pusha
cmpsl
pop
dec
mov
push
rorl
cwtl
jne
push
out
pop
int3
sti
stc
sbb
push
xor
stos
aam
jns
pop
les
mov
mov
sbb
dec
popf
lret
sbb
cmp
inc
sbb
cltd
add
sub
jbe
push
and
pop
sub
sbb
outsl
inc
fadds
push
in
dec
insb
jp
enter
loop
push
xchg
lods
add
sahf
rolb
sbb
ds
mov
jo
pop
push
sub
mov
scas
mov
cmp
push
mov
xor
movsl
dec
mov
repz
pop
std
jmp
xor
sbb
add
in
fnstcw
mov
sub
inc
xor
enter
jecxz
inc
int
and
adc
xchg
lcall
mov
jmp
sub
seta
jecxz
dec
mov
lahf
nop
pop
xor
fucomi
sub
leave
sbbb
mov
adc
and
sub
scas
adc
mov
jo
scas
mov
add
mov
popf
lret
pop
jmp
fwait
lock
push
and
fidivrl
push
jmp
loopne
scas
mov
dec
push
xchg
sub
ljmp
test
repnz
inc
adc
cmpsb
adc
push
outsb
inc
xchg
and
sti
cwtl
cmp
aam
sbb
dec
into
cs
repnz
enter
cmp
pop
add
jg
adc
out
lret
sub
mov
shrb
cltd
lods
int
cmc
popf
iret
cmpb
adcb
xlat
icebp
mov
fcoms
ret
jge
addr16
sub
inc
adc
inc
jae
mov
push
out
dec
lret
shlb
mov
and
mov
inc
ja
mov
sti
pop
push
scas
aad
push
sbb
jnp
mov
leave
inc
jge
fnsave
dec
test
dec
pop
shl
out
mov
lds
mov
test
mov
loop
mov
adc
ret
cltd
cmp
ret
rorl
add
repz
lds
loopne
or
in
push
cltd
lods
inc
ret
in
lahf
scas
mov
cmpsl
scas
inc
fwait
sub
mov
andl
push
repnz
push
sbb
push
mov
scas
mov
pop
mov
jl
cli
and
adcb
push
xor
in
sarb
dec
push
movsl
sub
inc
xor
mov
dec
clc
js
rolb
pushl
pop
outsb
dec
xchg
or
ret
cmp
fxch
in
cmp
fpatan
fistpl
inc
jecxz
in
ja
nop
xor
xor
xor
xchg
flds
aas
push
fsub
fnstsw
lods
mov
push
lahf
mov
stos
inc
sbb
stc
inc
ja
sbb
fldcw
sub
xchg
fcmovu
xchg
lret
sub
mov
cmpsl
adc
mov
xchg
jnp
push
adcl
add
mov
int3
lods
shlb
ljmp
int
jo
mov
cmc
jl
jecxz
and
sub
xor
xchg
fcoms
je
and
xchg
inc
fstpt
jns
jle
outsl
dec
mov
pop
cmp
sub
pop
int
fs
iret
add
je
and
mov
roll
inc
xor
test
xchg
dec
adc
popa
sahf
fwait
das
dec
mov
cmp
or
cmp
pop
mov
xor
repz
pop
rolb
sbb
outsl
adc
mov
dec
or
data16
xchg
add
cwtl
lret
inc
int
es
push
add
in
dec
sbb
dec
lret
fisttpll
mov
mov
sub
loopne
dec
in
daa
pop
mov
cmp
mov
data16
je
roll
cmpsl
jmp
or
and
jnp
sub
push
inc
lahf
cmp
xchg
test
in
into
fwait
and
shll
xor
pop
and
xor
or
sbb
sub
sub
int3
or
ret
loop
bnd
cmp
repz
int3
push
mov
insb
mov
iret
mov
addl
and
sub
mov
mov
or
xor
mov
pushf
ja
in
addr16
into
cwtl
lahf
lds
clc
aas
cmpsb
or
lds
inc
dec
xor
cmp
sub
sub
ret
pop
mov
movsl
aam
rcrb
cli
aam
sbb
mov
pop
xchg
leave
pop
fists
lea
jae
mov
xor
aaa
rcrl
fsts
scas
sbb
sbb
fnsave
push
xchg
mov
pop
jno
lds
push
pushf
jae
sbb
stos
in
nop
incl
mov
fdiv
daa
push
jl
xchg
cmp
mov
inc
fidivrs
and
mov
imul
ljmp
xchg
xchg
outsl
jp
sub
mov
cmovge
cwtl
xor
cmp
dec
cmp
gs
xchg
repz
cwtl
add
sub
dec
inc
sbb
ljmp
enter
sbb
das
jmp
and
test
sub
dec
fs
xchg
cmp
mov
and
mov
idivl
push
mov
cmp
adc
je
mov
jns
cmc
mov
dec
int3
dec
push
cltd
aad
aaa
inc
inc
push
and
mov
pop
jmp
pusha
popa
push
dec
stc
and
stos
test
fucomp
je
push
add
aad
push
mov
dec
mov
inc
mov
aas
push
push
cmpsl
adc
mov
push
jne
roll
mov
and
lret
bound
or
or
test
enter
xchg
pop
cmpsl
mov
xor
test
xor
mov
sub
cwtl
lods
sti
push
mov
cmp
pop
mov
and
pop
add
aaa
fistl
addr16
es
mov
in
cmp
call
sbb
adc
mov
dec
mov
ja
dec
cmp
stc
inc
sbb
sub
addb
xchg
ja
push
jne
ret
sbb
and
orb
mov
push
sbbb
xor
dec
cs
jecxz
enter
aad
mov
sbb
and
or
ljmp
cmc
dec
pop
jae
test
sub
mov
cmp
lret
push
cmc
add
pop
xor
bound
outsl
sbb
cmpsl
test
icebp
or
cmp
enter
repz
jle
cmp
in
sbbb
sub
xchg
push
call
ds
or
or
jecxz
movsl
ret
call
push
out
push
ja
mov
shll
jne
popf
inc
pop
adc
xchg
mov
sbb
and
sub
insb
fstl
push
pushf
push
mov
jns
ret
mov
fisubl
pop
or
adc
xchg
frstor
inc
xor
jmp
clc
sti
mov
sbb
cmp
or
cmp
jo
pop
dec
fldl
out
cmc
dec
inc
sbb
add
movsl
xor
dec
xor
mov
movsl
xchg
sbb
push
push
popf
cld
int
push
sbb
pop
lds
sbb
and
aad
push
cmp
into
fstpl
xchg
ficoml
ss
sbb
pop
dec
sti
add
pop
jb
outsl
jl
pop
fildl
nop
adc
push
mov
cs
mov
cmp
sbb
add
jp
sbb
xlat
push
scas
push
mov
inc
pop
out
enter
cmp
into
clc
faddl
jl
xor
lds
in
add
xor
arpl
aas
inc
lea
and
ret
arpl
mov
mov
xchg
imul
or
loopne
sub
xor
sbb
lds
sub
add
adc
jl
lahf
ljmp
push
mov
mov
test
mov
sub
adc
mov
cmpl
sbb
rclb
popf
das
push
lds
xchg
push
adc
cmpb
jb
shl
pop
jl
jecxz
fwait
loope
pop
ret
sti
lahf
inc
leave
xlat
jg
jp
xchg
pop
inc
fwait
leave
nop
dec
rcrl
push
loopne
push
pop
mov
dec
xor
lret
pop
imul
lahf
popf
cli
fwait
out
je
inc
ficompl
ljmp
pop
pop
cmp
jne
fwait
lea
or
aaa
dec
pusha
sub
pop
xor
imul
ficoms
mov
jmp
popf
negl
xchg
mov
xchg
repnz
pop
pop
stos
mov
dec
jbe
and
into
mov
mov
js
mov
pop
dec
xor
cmp
or
stos
inc
fisttps
sub
arpl
dec
xchg
mov
xor
mov
lret
pop
dec
lret
xchg
push
in
pop
into
fmuls
push
sbb
sbb
addr16
clc
test
and
dec
adc
pop
add
dec
repz
mov
and
jecxz
lcall
sbb
nop
dec
sti
jg
sarb
or
or
jle
aad
imul
aaa
xchg
int
mul
pop
aam
cltd
or
clc
push
cmpsl
jo
icebp
xchg
adc
int3
arpl
mov
jnp
xchg
into
arpl
sti
sti
and
jb
inc
mov
adc
jp
dec
mov
sbb
mov
dec
pop
mov
xchg
push
jne
jae
push
test
cmp
in
fsubrs
sbb
dec
and
add
int
jo
lret
imulb
cwtl
lret
sbb
xchg
stos
mov
mov
aaa
cmp
pop
dec
test
jbe
jo
fucomi
mov
rcr
fwait
add
nopl
xor
sub
add
and
ror
add
cltd
inc
ljmp
ret
jmp
nop
sub
mov
movsb
mov
pop
aam
js
xor
sub
aaa
cwtl
in
add
adc
jns
pushf
cmp
mov
and
notl
xor
mov
aad
pop
xchg
or
pop
pop
fdivrl
int
xchg
popf
iret
push
out
add
mov
sbb
sub
movsb
clc
cmp
movsb
adc
mov
dec
fidivl
mov
jp
xor
fstl
inc
jnp
mov
movsl
mov
cmc
cltd
je
mov
rcr
xor
xchg
fidivrl
iret
imul
push
adc
xchg
cmp
sbb
mov
js
arpl
xchg
mov
dec
sub
cld
xor
sahf
sub
stos
xchg
mov
and
jns
test
xchg
sub
cmp
jg
dec
push
repz
xchg
in
cmp
loop
inc
mov
adc
inc
xchg
and
push
add
popl
pushf
xchg
test
loope
js
movsb
int3
ret
cmp
xchg
mov
push
mov
jp
dec
lea
adc
push
mov
add
mov
dec
ss
add
lret
in
adc
jmp
jge
cmp
ret
pop
shll
aam
sub
shl
mov
and
mov
mov
add
shll
add
adc
icebp
hlt
dec
and
fstpl
test
lods
lds
movsb
out
inc
sti
mov
cmc
or
fldt
push
and
xchg
aam
shrb
ret
js
lcall
dec
fs
add
mov
or
lcall
lds
inc
adc
push
cmp
andb
addr16
xlat
fcoml
stc
sub
clc
add
jne
sbb
rcl
push
adc
jo,pt
rclb
addr16
imul
jns
gs
xchg
mov
fcomip
inc
fbstp
std
gs
fwait
cltd
mov
mul
mov
cmp
dec
loope
and
addr16
xor
jnp
jl
es
sahf
testl
or
mov
movsl
test
or
fwait
jmp
or
xchg
outsb
ja
pop
inc
aad
or
add
lods
sti
test
sub
jecxz
dec
andl
mov
das
stos
mov
scas
sbb
xchg
inc
add
adc
jg
nop
cmp
dec
subl
xor
shrb
xor
xchg
dec
insl
stos
dec
arpl
mov
icebp
fs
jne
int3
pusha
jecxz
test
les
lahf
aam
xlat
adcb
push
lahf
icebp
dec
inc
sbb
xchg
pop
mov
clc
sarb
inc
notl
int
jmp
sub
add
lock
push
push
in
cltd
imul
mov
fsubr
movsl
jl
fisubs
jp
daa
jmp
sub
lea
and
ret
pop
jge
dec
or
mov
jns
cltd
jno
daa
je
xchg
mov
fistpl
jmp
or
xchg
fists
andb
and
lods
popf
cmp
in
mov
idivl
dec
jecxz
and
movsb
dec
sahf
pushf
xchg
fldenv
iret
imul
cmp
dec
adc
cmpsb
repnz
pop
fidivs
ss
cltd
lods
or
in
stc
mov
push
sbb
arpl
lock
mov
push
xchg
stos
inc
fucom
es
dec
jnp
xchg
sub
enter
lahf
adc
jg
lods
push
fld
mov
icebp
xor
sub
mov
inc
int3
stos
push
jb
lods
xor
pop
xchg
mov
push
enter
sub
lods
mov
dec
pop
adc
dec
fsubs
pop
mov
xchg
mov
pusha
dec
mov
cmpsl
cltd
addr16
int3
inc
enter
dec
push
int
fisubrs
lcall
mov
movsb
cmc
jne
cltd
push
dec
sub
aaa
out
sbb
dec
call
dec
jns
push
push
cltd
xchg
jg
mov
negl
in
pop
push
xchg
add
mov
gs
cmp
mov
fcoml
call
push
inc
mov
test
test
clc
jne
push
movb
das
xchg
imul
mov
lock
mov
loopne
mov
jbe
pop
dec
and
dec
addr16
jmp
push
push
sbb
roll
inc
jo
push
sub
push
adc
or
imul
clc
adc
les
push
jb
adc
adc
xchg
sub
pushf
dec
cmp
or
pushf
jbe
fiadds
fstl
pop
mov
cmp
enter
mov
data16
popf
inc
jmp
mov
sbb
lea
and
xchg
mov
out
adc
pop
push
test
fcomp
pop
inc
sub
and
or
fsts
jmp
dec
add
lock
out
in
mov
mov
scas
xor
imul
jle
dec
hlt
mov
aaa
stos
push
push
out
hlt
cmc
in
or
cmp
jne
insb
arpl
cld
lods
mov
imulb
cmpsl
xchg
test
mov
fadd
jns
nop
add
shrl
pop
lcall
jl
xchg
pop
jnp
cmc
insl
scas
pop
cwtl
add
xor
mov
add
rorl
loope
test
sbb
add
mov
xchg
cmc
dec
jge
ss
sub
icebp
mov
xor
ja
out
xchg
xchg
fwait
insl
mov
xor
fisubs
std
cltd
insb
mov
sahf
hlt
imul
jge
shrl
adc
cmp
inc
adc
jle
orb
mov
sti
cmp
fbld
pop
adc
in
sbb
pop
pop
dec
mov
movsl
dec
pop
jl
sub
ja
mov
neg
inc
sbb
pop
push
dec
push
inc
incl
xchg
mov
mov
pop
in
cmpsl
xchg
mov
int
into
push
inc
bound
push
dec
sbb
js
mov
test
mov
ficoml
mov
xor
roll
add
push
pushf
xor
sbb
cld
or
xchg
sbb
rcrl
xor
idivl
rcrb
or
mov
jg
xchg
fmuls
popf
roll
into
sub
xor
mov
pop
cmpsl
fsubl
push
lods
mov
and
leave
mov
add
ret
mov
mov
mov
adc
push
pop
fmul
lds
or
aam
mov
arpl
int
sbb
in
mov
in
mov
pushf
aaa
mov
adc
mov
cmpsl
mov
ljmp
dec
add
test
iret
test
loope
jno
jne
sub
xchg
test
adc
mov
daa
xchg
int
or
imul
test
push
jno
imul
jbe
rcll
add
mov
push
lahf
jnp
mov
nop
push
or
inc
fwait
xchg
dec
daa
sub
mov
mov
test
in
out
xchg
and
xor
fidivrl
and
jge
xlat
sub
test
jmp
js
es
sub
cmp
sub
xor
shl
mov
aas
sub
mov
fwait
dec
inc
sbb
pop
das
or
les
pop
xchg
fcompl
add
cwtl
lahf
dec
iret
mov
mov
aaa
push
cltd
cmp
cmp
add
hlt
push
adc
lods
adc
adc
dec
mov
pop
stos
inc
in
popf
lret
sbb
pop
jb
pop
arpl
mov
fimull
pop
icebp
scas
dec
data16
mov
and
xchg
stos
dec
jge
dec
cmpsl
push
sub
mov
sbb
sub
push
pop
push
cld
or
fisubrs
jge
push
dec
add
loop
add
fldcw
mov
mov
or
clc
nop
lret
aam
xchg
push
sbb
dec
rcrl
insb
jnp
push
jge
rorb
push
adc
or
outsb
mov
pop
inc
sub
bound
xchg
push
push
xor
les
dec
push
rolb
ljmp
mov
jmp
cmpsl
push
jno
pop
push
xchg
mov
shr
xor
shl
pop
pop
mov
jl
sbbl
xor
pop
fwait
jne
pop
mov
nop
sbb
mov
xor
or
mov
and
sub
mulb
scas
popf
add
lock
mov
mov
arpl
jns
or
pop
sub
or
fcompl
js
stos
outsl
lret
jnp
adc
ja
shrb
cmp
jns
outsl
cmc
out
dec
sub
test
xor
fs
push
push
cwtl
movsb
test
mov
sub
rorl
push
cmp
sbb
mov
cmp
lcall
test
lahf
adc
fisubrs
sbb
cltd
jmp
lea
jp
xchg
enter
sbb
movl
adc
jmp
negl
jle
sbb
push
pop
dec
aaa
in
mov
mov
lods
lcall
xchg
push
mov
imul
adc
mov
cmp
leave
lock
xchg
jne
shlb
shrl
pop
and
scas
mov
mov
push
pop
icebp
fdivrl
cmpsl
xchg
mov
inc
and
test
fidivrl
push
jmp
inc
pop
loopne
pop
cmp
dec
test
push
adc
or
das
add
cmp
ja
push
enter
adc
cmpsb
stc
movsb
push
cwtl
lods
and
mov
mov
js
sbb
lret
pop
push
std
jmp
xor
mov
jae
loopne
push
lods
in
sbb
sbbb
ret
jp
cmpsb
xor
cld
imul
je
and
and
pusha
adc
test
repnz
mov
pop
out
push
or
dec
stos
shll
jns
and
idiv
iret
ffreep
jns
bound
scas
cwtl
ret
test
sub
mov
stos
adc
sub
xor
pop
jmp
xchg
inc
push
add
and
or
shll
repnz
mov
add
ficoms
ret
jns
pop
ret
fisubrl
insl
or
sbb
addb
fcmove
mov
rsm
popf
mov
add
jno
cmp
pop
mov
pop
xor
mov
imul
repnz
outsl
jg
repnz
push
shlb
repz
or
sbb
pop
dec
insb
xor
lret
fcmovbe
popa
loopne
sbb
xchg
mov
sub
mov
sub
insl
push
enter
jne
out
push
or
xor
add
dec
inc
popf
clc
mov
fcoml
insl
jne
mov
cmpsl
xor
mov
jbe
jmp
mov
sub
mov
adc
nop
fildl
lret
clc
mov
mov
adc
mov
inc
pop
ss
pop
adc
imul
ret
sbb
dec
sbb
scas
push
test
clc
mov
and
movsl
loopne
inc
and
mov
xchg
lret
jge
or
pop
in
and
or
or
fcmovb
sub
sahf
adc
mov
inc
jae
rcrb
movsl
jnp
or
push
out
add
out
jb
pop
bound
fwait
std
loop
in
bswap
push
std
jae
inc
test
sub
std
arpl
xchg
dec
mov
dec
cmp
rcrl
movsb
lock
out
adc
ja
lods
jnp
test
cmpsb
inc
pushfw
loop
inc
mov
inc
xchg
jnp
mov
sbb
push
mov
cli
mov
mov
mov
mov
or
aaa
movsl
repz
bound
push
addb
pop
dec
rcr
mov
jo
mov
add
xor
add
insl
push
loope
xchg
int3
addr16
or
sub
mov
pop
stos
lods
fstpl
stos
cmpsl
in
scas
mov
hlt
and
fbld
pop
and
fstps
roll
fsts
pop
pop
add
inc
mov
sub
mov
shlb
pusha
and
xchg
push
cltd
lea
mov
dec
xor
pop
addr16
jmp
xchg
das
add
push
add
or
ds
ja
add
test
out
push
xchg
dec
cmpsb
pop
push
add
scas
dec
testl
rcrl
dec
inc
sub
pop
fsubl
add
int
ljmp
loope
xchg
test
push
movsb
and
fistps
inc
jne
dec
jb
movb
shr
repz
movsl
mov
std
ret
loopne
jae
jl
sbb
ret
jns
shrb
test
dec
aaa
adc
ret
pop
dec
xor
add
data16
loop
xlat
pop
dec
jno
sbb
pop
adc
imul
dec
inc
inc
push
jne
dec
add
ss
into
mov
vphaddwd
and
sbb
sbb
inc
das
mov
jno
dec
sub
frstor
push
scas
dec
jnp
push
pop
mov
andb
dec
pusha
cmp
xchg
jg
pop
sbb
aas
cmpsl
xlat
ret
add
fwait
shl
lret
js
std
daa
mov
mov
adc
sbb
cs
ja
loopne
insl
cs
into
xlat
stc
call
mov
dec
inc
mov
xchg
adc
nop
sub
imul
xchg
pop
mov
mov
aam
mov
jge
loope
cmp
sbb
sahf
iret
fucomip
xchg
cmp
sub
and
sbb
pop
loop
ljmp
sub
xchg
mov
pushf
mov
push
scas
in
dec
leave
xchg
push
cwtl
mov
inc
stos
test
jle
add
lods
leave
adc
sub
int3
mov
push
stc
in
ss
lret
fbstp
subb
ror
lret
jge
test
popa
mov
stos
xchg
stos
lret
std
xchg
pop
scas
jbe
das
sbb
mov
in
lahf
fisttps
and
shlb
repz
mov
clc
mov
fistl
jnp
jns
sub
or
jnp
xchg
les
sub
in
cltd
fs
sub
or
rolb
pop
and
vpsraw
iret
shlb
jb
les
fwait
daa
mov
jl
lea
dec
lods
out
adc
pop
fldcw
or
rcll
mov
movsl
cmc
sbb
fbstp
lahf
ret
add
cmc
cmpsl
outsb
lods
inc
add
in
or
cmc
cld
inc
iret
sub
pop
clc
xor
mov
jnp
and
push
dec
sbb
inc
das
mov
jl
add
aam
popa
enter
pop
fsubs
sti
imul
cwtl
sbb
jno
add
outsl
jne
dec
call
push
mov
adc
mov
push
cmp
xchg
push
cmp
js
jp
mov
js
or
shlb
pop
mov
adc
test
xchg
sbb
mov
sub
mov
push
lods
xlat
push
fisubl
test
jno
xchg
jne
insl
mov
iret
sbb
cmp
sbb
fcomip
adc
adc
clc
insb
enter
dec
lret
in
add
into
mov
movsb
cmp
loopne
mov
add
push
pop
add
es
sbbl
mov
sti
inc
scas
or
pop
ss
and
int
sbb
enter
data16
jp
fidivrs
jno
repnz
test
mov
icebp
filds
fs
sub
mov
ret
rcl
add
sub
ja
or
pop
cmpsb
js
cmpsl
and
sahf
stos
xchg
pop
pop
int3
jmp
cmpsb
ffreep
pop
push
es
cmpsl
jo
cld
int
lcall
bound
pushf
inc
clc
xor
pop
lret
inc
movsb
dec
sbb
filds
fstl
xchg
mov
in
fidivrs
imulb
cwtl
xor
jb
inc
lds
movsb
cmp
inc
xchg
xchg
inc
bound
cltd
sbb
test
xchg
mov
mov
lcall
mov
push
pop
test
cwtl
xchg
add
inc
stc
mov
jnp
lcall
out
pop
push
jo
add
pushf
shl
scas
mov
inc
mov
xchg
iret
pop
hlt
js
cli
sub
testb
in
movsl
sub
cmpsb
fdivr
xchg
aam
dec
pop
test
imul
jp
filds
rcl
insl
addl
stos
adc
les
xor
jae
cwtl
fs
pusha
jmp
rcrl
jae
sub
inc
pusha
fisttps
jns
scas
inc
push
mov
or
andl
insb
inc
add
leave
or
arpl
sub
jp
out
sub
fmuls
mov
insb
push
ljmp
mov
outsb
dec
jmp
push
ljmp
adc
test
pushl
sbb
jo
call
cmp
xor
cltd
ja
push
in
push
cld
or
mov
pop
mov
adc
mov
ret
ret
cmpsl
je
jge
and
rcrl
jae
inc
outsb
aaa
mov
leave
in
mov
pushf
dec
pop
outsl
push
stos
mov
and
repnz
mov
fnstcw
inc
pop
lods
push
not
pop
lcall
das
adc
xchg
test
pop
idivl
scas
xchg
xchg
les
xor
adc
cmp
roll
mov
aad
cmpl
and
mov
adc
push
cwtl
add
rcrl
cs
add
orl
mov
jno
dec
cmc
movlps
pop
push
mov
xlat
xchg
mov
push
leave
dec
test
mov
divl
push
fucomi
aam
push
out
add
repz
push
adc
xlat
adc
jge
fcomp
fcoms
pop
or
xchg
push
lret
faddp
pop
jmp
inc
or
push
mov
push
enter
pop
pop
jno
mov
dec
fs
popf
jp
mov
or
lahf
adc
mov
movsb
fimull
mov
lock
mov
pushf
xor
idivl
fnstsw
push
nop
bound
or
xlat
push
dec
mov
test
int
inc
fisubs
dec
jno
sub
jb
sub
in
cmp
fidivrs
sbb
jmp
stc
jns
jae
ret
cwtl
stos
push
inc
dec
adc
mov
fisubl
xchg
test
xchg
rcrl
ja
mov
cmp
jb
sti
insl
jg
cli
js
cmp
dec
sti
pop
out
adc
push
xor
jmp
lds
dec
push
adc
mov
push
xchg
dec
movd
pop
aad
mov
lcall
rcll
pop
xor
mov
lods
cmp
inc
lcall
jge
and
fbld
call
dec
push
rol
vsqrtps
mov
movsb
out
jge
pop
popfw
mov
and
mov
xor
fsubrs
inc
add
cmp
pop
repz
push
push
xor
ja
push
sub
fnstenv
les
push
mov
movsb
mov
jmp
lods
jne
gs
adc
or
insb
jne
js
lret
lahf
aaa
fdiv
push
js
arpl
test
cmpsl
into
std
enter
mov
jns
adc
mov
gs
xchg
test
push
sub
fsts
pop
jle
and
xchg
enter
stos
dec
jecxz
fcoms
inc
xor
inc
adcb
sbb
adc
lea
push
push
fstpl
dec
outsb
int3
mov
xor
dec
mov
nop
mov
lds
jmp
sarl
andb
imul
jmp
in
int
inc
dec
or
stos
inc
and
xor
jno
jb
pop
mov
cs
push
cmp
loop
add
in
mov
cmp
pop
push
test
pushf
dec
rcl
test
lods
xlat
pop
cwtl
mov
fstpt
cmp
ja
pop
cli
addr16
jb
mov
call
sub
shlb
rcr
mov
mov
dec
and
mov
mov
adc
xor
inc
jns
mov
inc
cli
sub
dec
cli
sub
xchg
mov
jp
xlat
add
call
jae
sub
sub
jl
adc
mov
adc
ret
push
mov
stos
sbb
and
or
mov
mov
fsts
jmp
loopne
lods
or
in
mov
push
mov
icebp
and
aam
rcrb
and
sub
test
fbld
sbb
iret
xor
adc
loopne
test
and
cmp
shl
add
jge
stos
movsl
adc
cmc
rolb
sbb
sub
leave
in
lahf
sbb
sbb
or
cmp
inc
cwtl
sbb
es
cmp
adc
cs
cld
sti
test
pushf
adc
push
lahf
into
arpl
pop
sbb
jbe
xlat
roll
pop
cmp
dec
push
cmp
int3
jne
xchg
scas
fnstenv
inc
gs
dec
inc
jo
rsqrtps
scas
dec
inc
pop
rol
xor
mov
inc
or
pop
and
vcvttss2si
pop
pop
stos
pop
add
dec
inc
xor
inc
pop
xor
cmpsb
in
ss
bound
aas
mov
mov
cld
add
push
lahf
push
hlt
lods
jno
mov
sub
push
dec
cmp
sarl
jge
mov
dec
and
jl
popf
xchg
arpl
movsl
xchg
mov
fmuls
pop
sahf
ret
cmpsl
push
push
fcmovnu
dec
mov
push
fdivr
cmp
je
and
mov
adc
push
or
xor
sti
fistl
lea
int3
mov
lret
or
xor
add
inc
inc
cs
dec
cmpsl
hlt
mov
scas
jmp
movsl
daa
inc
mov
fsubs
inc
mov
cmp
inc
das
inc
mov
mov
xor
ja
dec
ss
push
and
fs
dec
cwtl
jb
inc
mov
stos
inc
cmp
mov
inc
jne
mov
inc
inc
xor
add
movsl
push
arpl
cmpsl
dec
lods
jmp
lea
xor
dec
cltd
mov
call
push
add
and
dec
mov
mov
lret
adc
mov
sub
popl
pop
adc
aaa
jne
mov
testb
faddl
jne
xchg
inc
je
or
pop
or
jecxz
add
out
lret
mov
and
dec
cwtl
xor
ss
test
mov
xchg
sub
xchg
das
mov
ss
sbbl
sbb
into
jno
test
fsubrs
xchg
adc
and
sbb
lcall
add
aaa
mov
jno
call
xlat
adc
push
aaa
das
add
fsubs
inc
ss
test
nop
jne
stc
mov
cmpsl
sub
int3
jle
scas
pop
pop
mov
jnp
sub
mov
jb
jl
data16
shr
xor
xlat
les
and
or
push
aam
gs
cs
mov
cmpsl
dec
mov
push
and
test
lods
test
jmp
push
leave
test
in
and
fscale
jp
mov
jge
icebp
add
add
repnz
push
jne
or
xchg
sbb
jge
jbe
jno
lods
ret
aaa
mov
mov
jb
ret
cwtl
pop
lret
jo
mov
lds
in
sti
and
fisttps
and
inc
shrl
jns
data16
je
mov
push
mov
in
mov
cmc
pop
mov
shlb
test
dec
xchg
outsl
cmovl
out
repz
mov
mov
cs
jmp
clc
jg
sbb
mov
fcom
je
cltd
pop
inc
popa
mov
jg
rcll
leave
mov
call
add
sbbl
jae
pop
and
pop
push
leave
imul
dec
pop
mov
rcll
nop
jno
scas
inc
ss
ret
jle
arpl
test
and
cmp
jns
dec
push
cmp
inc
pop
xchg
sub
test
push
xchg
cs
mov
add
dec
mov
mov
ja
in
lds
cmc
in
jge
inc
je
outsl
fwait
mov
or
xchg
dec
cmp
jle
inc
mov
sub
rcr
mov
push
mov
shrl
insl
xchg
dec
jb
jne
mov
es
lea
outsl
mov
jge
out
inc
mov
insb
aaa
and
mov
mov
xchg
or
in
jecxz
insb
jbe
adc
and
pop
inc
mov
mov
jecxz
je
test
pusha
xor
cmpsb
in
ss
pop
jb
mov
fwait
ja
jecxz
add
lds
in
push
clc
xor
jp
flds
out
out
cmc
daa
and
dec
sbb
push
sbb
and
arpl
adc
sbb
add
dec
data16
push
fcmovnu
imul
fcoms
sbb
and
jmp
sbb
scas
fcmovnu
test
push
mov
inc
sarb
jecxz
sub
pop
fstpl
inc
dec
mov
mov
pop
test
insl
out
shlb
loop
pop
mov
mov
or
mov
fistpl
pop
lcall
add
dec
xchg
jbe
pusha
adc
mov
xlat
out
fisubrs
push
inc
mov
lcall
fmuls
jle
inc
aad
push
mov
sbb
std
idivl
in
add
adc
dec
cmc
mov
jmp
add
add
fisubs
cmc
pop
iret
scas
rclb
pop
std
rcl
inc
mov
push
fstps
daa
je
movsl
lods
shll
lock
repz
les
lock
jo
gs
imul
pop
push
jno
sbb
sbb
push
repnz
and
test
popf
scas
inc
dec
js
rclb
int
andl
mov
fistpl
mov
and
push
xchg
adc
call
pop
mov
mov
into
mov
repz
lock
xor
push
arpl
pop
test
je
cmp
dec
mov
sbb
xor
orl
inc
and
jmp
ror
push
adc
popa
mov
iret
fstpt
std
ficomps
inc
lds
add
inc
sbb
ja
adc
and
cli
mov
jbe
fmull
repnz
jle
loop
dec
dec
insb
clc
and
movsb
inc
mov
xchg
cmpl
push
lret
cmpl
aaa
add
pop
jae
mov
cmp
sbb
and
enter
imul
movsl
xor
mov
fcmovb
push
mov
jmp
mov
jno
jp
dec
ja
into
adc
notl
mov
xlat
xor
add
xor
les
outsl
hlt
cmp
lock
fdivrs
stos
xchg
mov
cmp
xchg
imul
cltd
sbb
roll
aam
and
mov
movsb
popf
shl
fsubr
xchg
xchg
sbb
aam
adc
addr16
xchg
sub
pusha
jae
enter
push
or
pop
push
mov
jae
js
aam
clc
inc
mov
add
pop
push
adc
aas
or
push
pop
xlat
cltd
push
pop
aad
divps
push
ja
stc
mov
pop
mov
push
push
popf
dec
neg
outsb
jne
jns
mov
mov
mov
pop
mov
inc
daa
cwtl
cld
in
stos
roll
push
lret
push
and
pop
test
fsubr
sbb
lds
fwait
jmp
idivl
push
rclb
jmp
push
jns
loopne
dec
shrb
repz
jl
mov
cmp
xchg
push
pop
xchg
mov
cmpsl
gs
sub
lret
jg
fiaddl
adc
fst
cmpsl
int
gs
fsubrl
add
or
shl
pop
stos
movsl
cmc
stos
pushf
adc
je
mov
repz
bound
mov
pop
lock
enter
add
mov
or
xlat
lods
cltd
shl
or
sbb
inc
mov
testb
pop
movsb
cltd
mov
inc
mov
sub
fucomp
jae
jno
dec
sarl
jl
pop
packssdw
dec
inc
and
jne
mov
mov
lods
mov
pop
jbe
lods
notb
jl
adc
jnp
loopne
mov
bound
mov
adc
test
lahf
fists
leave
nop
jb
roll
inc
sti
and
mov
int
xlat
mov
mov
adcb
movsl
ret
fstpt
ja
fbld
dec
mov
ficoml
xchg
xor
pop
sub
push
loope
or
dec
xor
push
pop
dec
fisubs
daa
cs
shlb
pop
pop
lock
cmp
ss
sbb
push
mov
in
adc
sbb
mov
repnz
lret
pop
adc
jno
rcll
mov
ljmp
shll
sbb
sub
aam
dec
xchg
sarb
dec
cmp
das
lods
push
data16
add
push
add
sarb
cmp
mov
push
xchg
fst
imul
sbb
inc
dec
push
sbb
inc
fmull
jmp
test
cmc
subl
push
cwtl
cld
repnz
lret
mov
mov
adc
xor
dec
mov
pop
aam
xor
jmp
push
push
fdivrs
lahf
xchg
jmp
inc
mov
mov
pop
jae
dec
data16
int3
mov
sbb
push
jge
sbb
lret
inc
lcall
sahf
dec
lds
xor
mov
inc
ffreep
push
push
pop
mov
test
mov
call
adc
popa
mov
add
cmovno
mov
dec
inc
mov
lret
push
xor
rcrb
jmp
pop
mov
stc
mov
mov
filds
xchg
popf
lret
add
push
mov
sbb
divb
fcmovnbe
push
and
xchg
jnp
dec
push
inc
out
aam
push
cmpsl
or
sub
ret
rorl
shlb
jp,pt
xor
repnz
cmp
roll
mov
adc
out
mov
fnstsw
in
jne
mov
jne
inc
cmp
test
mov
xlat
sub
and
xchg
enter
mov
fldl
push
push
or
adc
inc
jb,pt
mov
ret
xlat
ja
popf
xchg
movsl
lret
mov
or
jae
test
push
ret
jle
loopne
call
aad
mov
fistpl
pop
aad
sbb
sub
cmc
mov
vrcpss
pop
or
test
mov
outsl
sbb
lahf
mov
mov
sbb
jo
push
dec
pop
imul
pop
pop
iret
jmp
fucomp
jb
addr16
pushl
dec
out
adc
or
call
rcrl
sbb
jg
int
jns
jle
and
fucomp
test
aad
rcrl
xchg
and
jb
mov
in
addl
fnstenv
pop
das
add
dec
sti
adc
sub
dec
leave
xchg
push
xor
cmc
adc
pop
adcl
cmpsb
sub
aad
cmpsl
daa
mov
jo
jnp
insl
popa
out
fwait
repnz
lods
enter
sbb
add
add
mov
imul
orl
sbb
push
pop
inc
loop
mov
into
mov
mov
inc
inc
fcomi
arpl
inc
push
mov
sbb
jle
movsl
mov
push
pop
mov
bnd
push
fwait
mov
add
sbb
sbb
movsb
xor
clc
dec
pop
insl
ja
xchg
mov
pop
sub
cli
loop
adc
hlt
and
xchg
aad
mov
jbe
icebp
inc
gs
mov
sbb
xor
jg
or
shr
xchg
push
ljmp
push
mov
mov
adc
inc
gs
mov
inc
xor
fimull
push
sub
xlat
add
add
cmp
lds
cmp
pop
sti
iret
xchg
int3
pop
sub
popf
popf
dec
inc
hlt
hlt
sub
incb
out
cmc
enter
push
test
cltd
clc
lea
and
sahf
shll
mov
or
ds
jge
cltd
cli
jp
mov
movl
imul
nop
fldt
sbb
movsb
add
notl
scas
push
test
out
lods
add
push
lods
mov
push
lret
movsl
fsubrs
mov
icebp
aas
mov
adc
xchg
dec
jecxz
nop
fldl
cmpb
jge
mov
push
pop
ss
mov
shr
add
aad
push
push
xchg
cmp
bnd
xlat
add
and
cmc
sub
pop
push
je
in
pop
fdivs
adc
adc
dec
dec
rcll
pop
pop
out
out
xor
movsb
inc
pop
jmp
and
in
movhps
sahf
andl
lds
inc
sub
mov
enter
es
mov
movsb
aad
nop
adc
cmp
ja
stos
rorl
pushf
adc
pop
add
lcall
lds
cmp
inc
xor
sub
or
stc
jo
mov
icebp
testl
in
shrl
pop
push
stc
push
sub
sub
stos
int3
jmp
mov
pushl
sbb
test
test
add
ret
lods
xchg
mov
and
mov
lods
xchg
scas
sub
iret
gs
mov
xchg
pop
mov
sbb
mov
movsb
or
xchg
jo
outsb
icebp
sbb
data16
fstp
movsl
jb
sub
mov
add
jne
in
mov
pop
repz
cmp
cmc
push
jns
and
inc
xchg
push
and
out
jnp
push
hlt
cwtl
movsb
popf
out
popa
fdiv
sub
dec
pop
push
lcall
outsl
out
cmp
push
sahf
loop
inc
xchg
pusha
aas
ljmp
xchg
rcrl
adc
add
sbbl
inc
daa
xchg
lret
bound
pushf
dec
and
insb
dec
xor
mov
xchg
sub
int
add
scas
xor
ds
icebp
and
scas
in
or
test
lret
cmpsl
mov
dec
mov
mul
mov
xchg
mov
xchg
loop
aad
lods
jge
jg
sbb
js
jg
in
sbb
sbb
rclb
xchg
pop
sub
or
hlt
inc
xor
mov
in
loope
dec
je
xor
pop
test
ret
ret
mov
and
push
testb
adc
fcoml
xor
add
leave
fmul
punpckhwd
fidivl
pop
lock
xor
dec
inc
dec
imul
scas
shr
in
call
mov
ja
std
mov
jno
cmp
push
xchg
aad
ja
xchg
mov
mov
stc
and
xchg
icebp
sarb
xchg
imul
dec
jmp
and
jae
pop
mov
shll
push
inc
gs
fdivr
push
sbb
push
adc
inc
cmc
and
add
mov
movsl
jns
jle
pop
shrb
jnp
in
mov
cmp
cmpb
inc
sub
ss
rclb
and
std
dec
xlat
and
jle
and
insl
int
lret
jb
mov
inc
ss
and
xor
orl
sub
and
inc
xor
push
inc
mov
and
dec
pushf
ljmp
mov
cmp
mov
stos
test
add
mov
arpl
adc
pop
into
mov
sbb
popa
test
fs
ror
pop
dec
out
and
fnstsw
pop
sbbb
xor
jnp
leave
test
add
mov
mov
insl
push
or
iret
jne
in
cwtl
fs
xor
loopne
push
sbb
cmp
andl
adc
mov
jne
dec
jbe
fwait
aad
call
fsubs
jbe
pushf
sub
pop
icebp
cmp
add
vpshufhw
pusha
xchg
add
mov
idiv
jmp
in
lret
inc
dec
in
xchg
lret
dec
inc
ret
outsl
ss
enter
shr
push
sarl
lods
push
and
inc
js
xor
pop
sahf
cmp
inc
insb
aaa
sbb
clc
push
sbb
and
mov
fcoms
pop
xor
jne
loopne
pop
pop
push
inc
int3
hlt
cmp
repz
je
or
inc
repnz
pop
ss
mov
mov
jbe
jmp
sbb
xor
pushf
dec
pop
and
push
dec
cmp
dec
push
test
push
stos
adc
inc
dec
out
popa
push
negl
cmp
sub
mov
xchg
pop
in
sub
pushf
cmc
add
jmp
addr16
push
les
testb
jmp
pop
sbb
push
pop
stos
outsl
std
ret
out
fildl
cmp
lret
xchg
jo
loope
leave
lret
js
sti
inc
fidivs
dec
shlb
mov
inc
cmp
pusha
xor
pop
jae
inc
insl
stc
jmp
iret
push
popf
sti
stos
pusha
pop
xor
call
ret
enter
sub
hlt
out
dec
mov
add
ja
or
dec
sahf
shlb
mov
scas
shr
rcr
mov
push
lahf
fstl
inc
xchg
jp
or
mov
test
dec
pushf
cmp
in
ja
cld
adc
sub
cmc
dec
inc
sbb
fdivrl
imul
dec
and
sarl
out
sub
mov
jne
aad
loope
mov
add
sti
in
stc
js
shlb
scas
sub
mov
add
fiaddl
shrb
jne
pop
pop
fstps
cwtl
enter
lods
fidivs
sarl
xchg
cmp
sub
xchg
insb
add
jmp
lea
in
mov
je
ss
pop
xchg
pushf
insb
xor
mov
leave
cwtl
outsb
sahf
in
lods
dec
imul
or
mov
and
gs
mov
mov
push
inc
pop
mov
xor
aas
sarb
cltd
cmp
fsubrs
sub
push
or
arpl
movsl
pop
cmp
add
data16
inc
inc
dec
lahf
push
call
push
ss
in
inc
lock
or
jg
cmpsl
mov
lock
leave
fimull
push
dec
aam
xchg
rclb
jnp
push
jno
lds
sbb
lods
mov
lock
push
fxch
sti
push
in
fs
sub
adc
mov
jo
push
xor
mov
rcl
pop
jno
mov
adc
scas
adc
aam
ret
popa
mov
mov
or
fwait
sbb
jae
adc
fidivrs
out
adc
js
fdivl
push
mov
push
lds
insb
jbe
cli
mov
movsb
cmp
insl
push
scas
ljmp
fcomi
shll
mov
push
xor
pop
inc
pop
add
in
sub
push
pop
inc
fdivrp
mov
jmp
sbb
mov
push
inc
mov
xchg
movsl
mov
cmp
cmp
es
fidivrs
inc
or
sbb
int3
xor
xor
pushf
clc
cmp
mov
pop
jae
stos
call
in
fsubrl
stos
das
push
sbb
mov
nop
and
sahf
stc
scas
push
test
lea
inc
out
movsb
dec
sbb
pop
outsb
jp
cmpsl
loop
cmc
in
icebp
inc
in
je
ret
add
ds
scas
sub
data16
rorb
adc
push
mov
cltd
orl
mov
test
lahf
mov
sub
in
ror
xchg
and
add
jae
in
push
and
enter
aam
mov
stc
pop
inc
out
mov
mov
sub
xorb
lods
jo
add
mov
call
adc
push
test
fdivrs
arpl
addb
fidivrl
nop
pop
vmovntdq
add
fiaddl
fists
cmp
inc
inc
mov
iret
repz
sti
xchg
imul
call
scas
inc
xchg
add
test
jo
icebp
jmp
and
mov
push
and
sbb
decb
shll
incb
xor
lret
inc
andb
push
std
fwait
sub
dec
and
in
dec
and
jbe
cmp
jecxz
and
add
push
push
pushf
push
push
pop
test
push
mov
sti
xchg
dec
mov
loope
loop
push
cltd
pop
aas
add
add
inc
xlat
add
inc
sarb
cmp
xchg
mov
jg
roll
mov
in
inc
cmp
or
xchg
bound
xchg
mov
cltd
enter
cmpsl
movsb
repnz
insb
xchg
dec
shlb
and
es
daa
adc
cmpsl
dec
sahf
dec
mov
pop
add
mov
std
fisubrs
mov
aaa
leave
add
sbb
cmc
inc
call
ljmp
sbbl
imul
push
dec
pop
and
lret
outsl
mov
pop
lods
mov
cmc
fistpl
repz
les
adc
sbb
add
call
subb
stos
stos
xor
dec
cmp
dec
push
sub
fcomps
mov
adc
mov
pop
xchg
fisttpl
adc
ds
jge
popa
pop
dec
mov
jno
nop
sbb
lods
push
push
outsb
dec
lock
movsl
cmpsl
jmp
pop
movsl
xor
sub
sub
add
sbb
bound
pop
and
jb
mov
daa
nop
sub
and
loopne
out
adc
xor
mov
and
call
mov
clc
sti
mov
cmp
cmpsl
fldt
outsl
into
je
and
sub
and
iret
imul
test
xor
adc
sbb
pop
and
les
pop
int
dec
push
lret
inc
lds
and
jb
xor
sbb
ret
lahf
mov
fsubrl
xchg
insl
les
ret
add
xor
test
xor
call
push
lock
sub
pop
inc
js
test
hlt
and
and
lea
adcl
or
or
or
push
pop
addl
jge
insl
mov
fld1
jb
pop
mov
es
adc
dec
insb
aaa
sbb
cwtl
dec
loope
or
cli
mov
int
push
dec
lods
push
lret
mov
mov
push
fwait
fwait
pop
mov
and
inc
adc
adc
pusha
or
cmovge
xchg
xchg
das
dec
mov
movsl
jbe
iret
pop
cmp
mov
sbb
xchg
outsb
sub
frstor
sub
scas
xlat
mov
add
and
push
dec
rcrl
sbbl
orl
jae
int3
sub
mov
pusha
jbe
dec
stos
xchg
stos
lret
std
sbb
jbe
das
into
mov
rcrb
jnp
or
or
popf
es
xchg
stos
shr
repnz
add
cmp
jb
icebp
rcll
clc
mov
cmp
jge
in
rol
mov
mov
test
mov
mov
rcrb
pop
mov
std
mov
ret
jecxz
fwait
lea
xchg
sysenter
push
movsl
dec
jb
jnp
cmpsb
jbe
repnz
je
push
ss
sbb
arpl
dec
fistps
xchg
xchg
xor
aas
xchg
pop
xchg
lret
mov
frstor
mov
idivl
sahf
dec
lahf
frstor
rolb
pushf
int
and
or
mov
sbb
fmull
nop
and
dec
sahf
std
ljmp
fcmove
test
pushf
lods
sarb
mov
mov
imul
push
inc
jl
or
mov
movsl
push
jge
mov
in
add
jne
fwait
jbe
stos
js
xor
push
dec
cmpsb
ret
mov
mov
gs
xchg
inc
xchg
jno
and
and
pop
sarb
addr16
or
ljmp
fwait
xor
data16
xor
test
xchg
xchg
cli
repnz
fiaddl
test
and
push
out
fmul
mov
mov
mov
push
cmp
ret
into
mov
mov
fnstenv
jle
sahf
pusha
addl
repz
into
jmp
clc
sarl
js
xor
xor
mov
xchg
mov
sub
jl
divb
adc
sbb
enter
addr16
movsl
sbb
push
clc
sub
dec
mov
dec
cmp
not
sbb
cltd
dec
cmpsl
mov
jo
xchg
sub
je
mov
fimull
inc
push
pop
lret
arpl
mov
inc
dec
sub
lock
outsl
xchg
shlb
repz
and
jnp
adc
cmp
mov
cltd
andl
js
push
dec
fisubl
mov
pop
data16
xchg
stos
movsl
ret
push
lret
movsb
inc
sub
jg
pop
jge
mov
out
jne
andb
sbb
lea
andb
cmp
test
arpl
pop
xchg
dec
movsb
cs
sbb
cmp
adc
mov
jmp
fsub
divl
hlt
lea
incl
cmp
je
adc
fs
sub
xchg
leave
lods
mov
xchg
push
sbb
mov
mov
lods
shll
dec
push
xchg
dec
mov
and
insl
cmp
pop
lret
out
mov
fs
sbb
scas
xchg
stos
shll
or
push
stos
sti
adc
test
sub
shrb
mov
adc
add
push
adc
push
adc
js
ds
mull
lods
mov
push
cmp
int
pop
sahf
dec
mov
or
out
push
mov
pop
ret
xchg
pop
arpl
popa
mov
fs
addl
imul
in
jb
and
sbb
fmul
fucomip
mov
ss
adc
add
or
dec
push
pop
sti
lret
jmp
movsl
xchg
cmp
mov
clc
jne
pop
popf
add
mov
cltd
jb
clc
outsb
shll
out
sbb
test
cltd
xchg
pop
push
shrb
jecxz
jns
dec
jbe
dec
mov
jge
rol
in
dec
mov
xchg
fsts
jmp
mov
fisubrl
xchg
lods
push
add
test
stc
add
enter
jne
xor
ss
push
stos
xchg
cld
lret
repz
ror
out
lcall
in
or
test
mov
dec
mov
pop
xchg
dec
and
xchg
adc
scas
xor
mov
inc
and
jo
fwait
adc
pushf
fs
insl
shlb
stos
mov
in
mov
xor
nop
test
mov
fsubr
jns
sub
dec
int
inc
adc
xchg
dec
jge
sbb
pop
inc
xchg
pop
in
int
adc
or
push
jge
rcrb
pop
dec
mov
fildll
call
psubb
in
roll
aad
lret
sbb
push
jg
addr16
pop
lret
fucomp
fs
mov
inc
test
mov
pop
shl
add
inc
pop
mov
nop
mov
enter
xchg
mov
or
pop
jg
add
mov
xchg
jge
repz
loopne
popa
push
or
pop
xor
ss
pop
push
fwait
xor
push
lods
out
xor
cmpsb
test
xchg
jmp
mov
stos
dec
and
cmpsl
movsl
cmc
jmp
add
mov
inc
jno
adc
add
jp
pop
mov
fildll
fisubl
ds
sbb
test
test
test
xchg
mov
push
shl
pcmpgtw
adc
clc
enter
fucom
inc
pop
stos
pusha
inc
in
jg
mov
fildl
pushf
sbb
push
clc
sub
imull
dec
jp
test
pop
xor
push
push
dec
cmpsb
out
pop
jns
xchg
int3
pop
pushf
pop
lret
xchg
jae
lret
push
mov
xor
xchg
daa
sub
shrb
mov
xor
add
aaa
push
mov
lds
xor
or
cmp
jns
cmpsb
cmpsl
cmp
or
inc
add
inc
negb
add
and
cld
daa
aam
jecxz
cmp
xchg
rclb
stc
xchg
pop
adc
ljmp
icebp
pop
aam
inc
xchg
dec
bound
out
mov
pop
sub
call
push
inc
add
xor
ret
nop
in
xorl
push
sub
lret
ret
imul
fwait
jp
pushf
sub
push
fsub
xchg
rcrb
sub
aaa
sub
push
or
sbbb
dec
dec
mov
xlat
xor
cmc
and
test
cmp
sbb
xchg
lret
fnsave
inc
add
pop
lret
rcr
mov
push
shrl
cmp
pop
idivb
adc
leave
push
lock
pop
push
aaa
les
adc
pop
test
xor
inc
nop
mov
mov
sbb
test
sbb
popf
dec
jecxz
mov
lods
dec
fidivrl
xchg
xor
xchg
popf
mov
cmp
iret
imul
inc
pop
xor
inc
add
dec
out
test
or
and
cmp
adc
inc
sbb
jae
push
fimuls
and
jne
mov
inc
sub
pop
adc
out
dec
in
inc
mov
mov
hlt
test
aam
xor
mov
loop
fstpl
sbb
add
jne
ret
inc
mov
sub
mov
mov
jp
test
push
xor
push
jp
cmpsb
out
and
dec
lret
fnsave
inc
pop
cli
sub
aaa
sub
xor
das
sbb
and
ljmp
mov
sub
dec
xchg
cwtl
movsb
scas
adc
xchg
jbe
xor
push
xorb
shlb
pop
mov
dec
pop
int3
in
cmp
aas
pop
bnd
fstps
shlb
dec
test
xor
pop
dec
out
push
test
sub
inc
mov
lods
es
clc
lret
push
jb
popf
iret
and
addr16
push
mov
lea
xor
dec
or
dec
and
xor
adc
dec
pop
das
dec
daa
jle
loopne
shrb
lods
rolb
mov
repz
bound
sbb
cmp
pushf
lret
mov
int
inc
sbb
push
pop
or
rclb
jg
decb
cli
out
negl
flds
sub
fnstenv
stos
int
test
stos
xchg
repz
dec
je
std
or
testl
stos
aas
cmp
mov
loope
mov
pop
jge
jb
jp
fimull
or
sub
cltd
mov
pop
push
push
or
aam
cltd
push
jae
shlb
js
mov
pop
outsl
repz
push
xchg
xchg
popl
or
shll
lods
and
imul
das
jl
decl
ja
sbb
or
mov
cwtl
add
mov
fdivrl
jns
sub
daa
shlb
roll
sub
pop
ret
pop
rcrl
xchg
xor
add
into
fwait
jg
clc
cmp
enter
pusha
pusha
xchg
pop
sub
add
rcrl
jmp
xchg
icebp
cld
nop
std
mov
push
mov
xchg
and
lds
xor
mov
insl
jae
fcompl
mov
xchg
push
xchg
std
xorb
push
xor
rcll
pushf
sti
add
mov
inc
or
imulb
ret
test
push
in
fidivrl
add
mov
and
add
cs
sbb
sarb
fmull
push
adc
push
xor
add
cs
pop
mov
mov
xchg
dec
xchg
mov
jb
mov
fidivl
jp
pop
inc
test
xchg
insb
mov
jb
mov
stc
push
sub
push
adc
rcll
ret
mull
sbb
cmpsb
push
jecxz
test
sbb
inc
mov
push
inc
test
lahf
ffreep
jns
ds
and
mov
dec
daa
mov
lods
push
sbb
mov
mov
mov
call
mov
scas
dec
flds
mov
inc
scas
dec
cmp
or
mov
jle
in
mov
rclb
ja
nop
or
popa
test
inc
aam
sub
shlb
add
imul
dec
imul
test
bnd
popf
lret
xor
jb
subl
push
iret
adc
addl
or
xor
sub
mov
xchg
cwtl
push
add
jns
push
mov
sbb
ret
fldlg2
jb
cwtl
dec
jle
mov
out
push
mov
mov
jnp
gs
dec
push
add
add
mov
jmp
fs
fiadds
ja
pop
jp
jecxz
add
push
mov
mov
sbb
jge
mov
icebp
std
loop
enter
jg
mov
add
test
push
xchg
movsl
rorb
mov
in
inc
fcoml
insl
sbb
fildll
repz
popf
dec
arpl
inc
push
aam
arpl
test
sbb
fwait
push
imul
push
negl
push
stos
xor
xchg
mov
xchg
test
cltd
test
inc
xorl
pop
add
xchg
or
ja
xchg
cmpsw
sbb
jne
push
addb
in
jnp
test
sub
jns
add
lahf
lea
stc
inc
lea
inc
cltd
inc
in
out
mov
enter
lahf
push
sbb
int
imul
out
or
bnd
jo
lods
inc
call
jno
fcmovnu
cwtl
loop
xlat
mov
repz
sti
inc
jle
leave
lret
jecxz
cmp
pop
push
mov
adc
hlt
and
xor
xor
mov
sub
test
xchg
lods
mov
jmp
lea
cltd
lcall
lret
push
mov
sub
test
mov
scas
sub
lds
inc
movsl
lcall
aad
mov
aam
mov
and
out
icebp
icebp
mov
popf
scas
inc
jecxz
jne
addr16
pop
xchg
adc
subl
add
mov
arpl
dec
adc
test
sub
mov
xchg
test
int
std
test
xor
fcomp
xor
shrb
mov
lahf
xchg
jae
sahf
ja
push
ja
mov
loopne
pop
arpl
cmp
cli
cmp
repz
insl
push
mov
mov
fbld
ret
mov
or
sbb
scas
lcall
and
push
xor
sub
rcrb
fstpl
dec
popf
lret
addr16
test
inc
loop,pt
and
scas
xchg
and
stos
xchg
xlat
and
mov
fcmovb
pop
test
mov
mov
lahf
scas
xorb
sahf
stos
fwait
leave
loop
jb
xchg
sub
sub
or
nop
lods
sbb
add
dec
jb
push
stc
clc
sbb
ret
cmp
adc
pop
push
cmp
rolb
lret
mov
jae
call
and
sbb
sub
xchg
daa
inc
fmul
pop
mov
pop
aad
lret
popa
sahf
repnz
jmp
pop
outsl
jns
mov
xlat
mov
mov
push
loope
mov
jle
clc
fucom
dec
lahf
jmp
jnp
imul
dec
sub
mov
mov
lock
mov
mov
test
jnp
imul
xor
dec
mov
scas
mov
mov
mov
out
lret
push
adc
dec
push
adc
inc
push
fiaddl
sti
sbb
pop
and
fwait
and
repz
addr16
roll
jg
jns
das
and
sti
fs
mov
cmpsl
xlat
mov
cmp
push
add
mov
xor
decl
xchg
inc
cmpsl
push
adc
xlat
insb
sbb
iret
pop
scas
push
and
pop
lea
dec
out
cltd
jmp
and
add
and
jo
adc
lret
cmc
sub
aam
mov
fsubrs
push
aam
mov
arpl
inc
cld
fld
sbb
bound
xor
popf
lret
and
adc
xchg
in
ja
mov
lods
xlat
fs
inc
jge
int3
or
fidivl
xor
lcall
pop
xchg
out
pop
and
inc
jb
mov
iret
sbb
insb
sbbb
or
in
mov
xchg
cwtl
xchg
mov
mov
test
push
xor
int
popa
push
or
inc
fwait
leave
in
js
hlt
rcrb
rcrl
jno
rol
and
xchg
pusha
lahf
mov
out
je
rcrl
pop
iret
negl
es
xlat
insb
imul
jg
pop
sbb
fidivs
dec
mov
push
pop
pop
pushf
mov
or
loope
test
and
mov
dec
or
je
or
inc
adc
rorl
pop
or
mov
mov
and
xchg
add
mov
repz
sub
xchg
mov
jne
jecxz
cltd
or
int3
pop
lret
out
dec
pushf
inc
mov
add
cmpsl
jmp
dec
sbb
jg
xor
in
int
xchg
in
test
shll
jno
xchg
je
mov
push
ljmp
shr
repz
dec
push
or
jl
sahf
xchg
xchg
mov
stos
and
mov
push
cmp
aas
sarl
sub
vhaddps
stos
mov
out
xchg
mov
mov
and
mov
mov
inc
push
xor
jecxz
pop
cmp
clc
jns
and
cmpsb
scas
flds
xor
scas
cmp
sbb
enter
xchg
pusha
jo
lea
arpl
ret
es
das
xor
mov
repz
sbb
mov
sbb
and
repz
sti
mov
xor
mov
pushf
hlt
outsl
adc
xor
repnz
popf
sub
and
pop
mov
push
and
out
std
jmp
test
mov
ffree
inc
rorl
mov
inc
data16
in
leave
test
cmp
push
cmp
inc
inc
xchg
js
dec
fcmovnb
dec
cmpsl
pop
testl
subl
insl
jae
in
shll
popa
pop
or
inc
fwait
leave
in
cmc
jl
xchg
mov
mov
adc
hlt
daa
xchg
mov
xor
fisttpll
or
push
lods
sub
insb
enter
jne
fld1
aam
and
sub
sbb
cmp
fbstp
pop
xchg
test
aam
ss
gs
rcll
inc
lahf
ja
adc
in
stos
into
push
stos
rorl
push
mov
lahf
xor
in
nop
inc
inc
ja
sti
call
dec
dec
add
mov
addl
jne
jmp
iret
dec
cmp
xlat
jmp
and
mov
sahf
mov
fcmovnbe
sbb
fbstp
lcall
sbb
lret
adc
sub
fnstenv
les
pop
dec
insl
mov
scas
imul
test
sbb
mov
jg
shlb
inc
push
mov
mov
cmpsl
xlat
mov
sub
cmp
push
add
mov
xor
mov
push
xor
lds
push
cltd
lret
inc
sbb
mov
pop
imul
fs
shrl
dec
inc
stc
les
fwait
add
push
mov
clc
cmp
in
ficomps
les
out
mov
ret
arpl
sub
test
pusha
push
repz
inc
cmpsl
mov
mov
popf
mov
orb
mov
ret
mov
rcrb
out
or
add
mov
cli
pop
dec
sub
fstpl
iret
jecxz
pop
sti
dec
bound
sub
movsl
clc
ficompl
rcll
in
or
ret
push
sub
push
xor
inc
std
jae
jb
mov
add
pop
mov
scas
mov
fstl
xchg
or
mov
push
cs
aam
lods
out
push
rcr
mov
jl
sub
insl
adc
lcall
mov
adc
test
sahf
fcom
mov
mov
mov
imul
dec
xchg
push
cmc
fcoms
sub
shl
pusha
jo
nop
fs
adc
fs
mov
inc
pop
add
arpl
dec
lret
jae
push
cmc
sbb
test
inc
aam
and
fcomps
test
xor
int
imul
and
pop
jno
add
popf
xchg
sbb
push
sub
cmc
or
xor
or
int3
ss
mov
jnp
repz
inc
dec
jae
mov
es
lcall
mov
mov
inc
dec
sbb
push
push
adc
shlb
add
jo
popf
filds
out
push
xchg
add
cwtl
add
roll
mov
fisubl
out
aam
aam
push
lds
fadds
mov
or
ja
shlb
and
adc
and
cmpsl
cmp
rep
aaa
sbb
fbstp
insl
imulb
es
fcoms
cmpsl
dec
add
mov
mov
adc
jae
inc
jl
mov
icebp
sbb
in
ret
rcrl
add
add
mov
sbb
jle
pop
jns
and
insl
mov
pop
cmp
jl
dec
popf
lcall
aas
loop
jnp
ss
scas
cmp
and
mov
inc
aad
hlt
cmp
call
xchg
sbb
addb
mov
dec
xchg
dec
rol
pop
push
mov
addr16
push
or
fwait
shl
cltd
sub
js
pusha
enter
loopne
mov
arpl
mov
loopne
inc
xlat
mov
fstl
sub
imul
xchg
cmp
pop
cmp
sbb
or
pusha
jo
shr
out
fs
adc
clc
xor
shll
mov
lods
jp
adc
jl
push
je
clc
and
gs
pop
mov
sbbl
inc
fneni(8087
pop
xor
cli
inc
xor
in
mov
mov
inc
out
ja
push
sbb
jnp
ficoml
mov
loop
leave
pop
dec
mov
lret
scas
push
sbb
mov
lods
dec
sbb
notl
je
aad
sbb
lods
add
jl
sbb
inc
inc
sub
out
xchg
pushf
mov
or
mov
out
sub
dec
fnstsw
mov
fcomp
fidivrs
xchg
and
mov
and
xor
pusha
jecxz
aad
add
or
sbb
icebp
fisttpll
lret
je
cmp
jg
pushf
imul
cmc
shl
xor
mov
enter
jo
out
call
stc
in
out
icebp
pop
mov
xor
pop
sub
mov
xchg
stos
mov
and
xor
xor
test
adc
movsl
push
and
js
or
fstp
jecxz
leave
iret
lret
add
mov
rcll
add
mov
dec
jo
mov
into
cmp
dec
mov
inc
addr16
icebp
jbe
and
mov
pop
outsl
xchg
lods
lret
mov
lahf
lcall
add
jge
jns
xchg
dec
popf
lret
cmp
xor
fwait
clc
cmpsb
lds
sbb
lret
testb
subl
add
jns
xchg
cld
cmp
mov
out
es
shl
xor
sar
pop
cmp
sbb
dec
push
or
mov
mov
adc
sbb
add
loop
xchg
mov
sqrtps
notb
xchg
lds
scas
repnz
and
sbb
add
pop
fdivrs
inc
fs
adc
push
sub
dec
push
lret
imul
fs
decb
sub
imul
add
push
sbb
pop
pop
mov
in
jg
add
push
adc
add
cwtl
pop
mov
lock
and
inc
aas
mov
lods
pop
mov
mov
nop
xlat
leave
mov
fcom
mov
icebp
sbb
mov
adc
out
xchg
fidivl
jo
in
cs
push
addr16
sbb
jecxz
popa
lret
mov
mov
push
repz
jae
lods
sbb
add
pushf
adc
leave
sbb
dec
inc
mov
add
inc
and
mov
or
xor
incl
out
subb
mov
cmpsl
add
mov
ret
mov
scas
aam
inc
jne
insl
mov
enter
leave
mov
mov
leave
pushf
xor
xor
rcr
xchg
jae
cmp
stos
xor
mov
xor
sahf
cmp
test
mov
adc
mov
jecxz
cmpsl
mov
adc
popa
inc
add
add
inc
pop
inc
sar
add
mov
mov
pop
lahf
cmp
mov
pop
scas
push
sub
leave
lret
push
pop
pop
add
dec
lcall
repz
jae
test
ret
inc
cltd
pop
push
and
outsl
inc
push
push
inc
cmpsl
push
pop
mov
push
mov
mov
xchg
jns
inc
push
dec
lret
sub
icebp
sbb
shlb
stos
sbb
movsb
imull
sub
andb
rcrl
pop
sub
dec
lret
lret
sub
fsts
out
mov
cmp
lcallw
xchg
cmpsl
cltd
shlb
std
adc
jmp
xchg
icebp
fcom
cmc
mov
pop
inc
pop
sub
movl
ja
aas
aam
dec
call
xlat
je
cld
add
mov
repz
adc
lods
flds
sub
ret
sti
add
cmpsl
mov
jnp
and
dec
inc
mov
test
add
sbb
loop
push
dec
xor
loope
scas
mov
sbb
add
call
ret
fsubrl
cmp
dec
mov
int
mov
mov
xor
loope
add
xchg
inc
jg
xlat
dec
xor
aas
mov
leave
or
repz
aas
cmpsl
push
fwait
xor
and
cmp
les
dec
fcmovbe
cmp
jns
movsl
ret
inc
mov
push
std
mov
xor
fadd
and
mov
dec
dec
pop
into
mov
nop
ret
dec
push
or
inc
sbbb
sbb
mov
fmuls
dec
int3
roll
mov
add
mov
push
jno
sub
aas
jecxz
mov
or
inc
sub
add
cmp
xchg
sub
fadd
adc
mov
cmpsb
movsb
leave
in
jmp
push
test
cltd
mov
fistpl
xor
sub
bound
jae
dec
repnz
mov
jge
movsl
xchg
sub
mov
push
pop
sub
pop
jb
cmpb
pushf
dec
cmpsl
cmp
leave
add
jecxz
push
jle
leave
leave
mov
popa
mov
nop
shll
mov
pop
dec
mov
or
xchg
frstor
out
cmp
xor
insb
int
fwait
jp
add
jge
cltd
xor
xchg
lods
xlat
aas
jbe
int
test
insl
jl
xor
int
repz
mov
mov
sbbb
movsl
inc
scas
xchg
dec
daa
adc
ds
hlt
mov
inc
adc
mov
mov
sub
mov
add
and
jp
mov
xlat
hlt
mov
mov
xchg
fldl
lcall
imul
fsubrs
xchg
test
pop
test
and
lret
pop
xchg
mov
ret
xor
jmp
dec
daa
xchg
pushf
movsl
mov
add
jbe
jp
inc
shrb
inc
scas
xchg
xchg
and
xchg
fcmove
pop
pushf
mov
xor
mov
add
mov
sub
fisttps
repnz
leave
mov
js
mov
dec
mov
rol
sub
aas
jns
dec
xor
mov
enter
pop
cli
pop
push
add
adc
mov
jg
repz
or
popf
dec
popf
push
sbb
lds
xchg
dec
pop
xor
rorl
add
inc
pop
test
mov
jb
mov
fcomps
mov
cltd
jle
arpl
pop
xchg
push
push
mov
xor
mov
jge
mov
ret
test
cmp
dec
adc
pop
mov
outsl
stos
mov
iret
jmp
out
filds
sbb
fsts
lahf
push
sub
test
mov
lock
jmp
imul
ljmp
jmp
mov
and
popl
arpl
imul
push
cmpl
into
jb
movsb
ret
push
jns
sub
leave
cld
sub
add
xchg
rcrb
xchg
xchg
sub
and
call
xlat
clc
imul
sbb
jns
inc
lea
inc
cltd
xor
pop
xchg
jg
dec
loope
xchg
xor
sub
xchg
sti
or
flds
inc
dec
daa
test
inc
cmp
mov
add
inc
mov
mov
jnp
mov
jnp
mov
jmp
jne
mov
mov
adc
jecxz
cld
cmc
mov
mov
sbb
arpl
sub
mov
lret
xchg
fnsave
inc
ljmp
xor
xor
fcmovbe
pop
repz
in
xchg
mov
or
xchg
jnp
dec
imul
stos
sbb
shrl
ret
lea
in
leave
and
jmp
fimuls
out
fwait
xchg
cwtl
cmpsl
stc
jo
sub
shl
lret
push
js
add
xor
fdivs
popf
mov
sub
push
mov
push
jae
push
gs
mov
popa
sarb
iret
and
mov
enter
jg
out
jns
push
mov
lods
subb
dec
mov
lcall
mov
adc
mov
imul
cli
inc
add
mov
cld
enter
fdivrs
sub
out
lea
or
mov
fsubrs
xor
mov
push
sbb
jne
mov
and
cmpb
stos
push
mov
cli
lds
sub
cmp
outsb
cltd
xchg
cld
das
js
push
lret
jno
dec
sub
gs
mov
xchg
sbb
jno
fisttpll
mov
mov
loopne
cmp
outsl
test
bound
adc
add
jmp
gs
xchg
ret
and
sub
insl
out
dec
fistps
out
push
std
jp
sub
test
pusha
shlb
popf
mov
mov
gs
jmp
push
add
popf
inc
inc
cld
adc
inc
push
es
mov
mov
cltd
sbb
stos
sub
rcrl
in
int
js
out
out
mov
lret
fwait
movl
ret
je
bound
ja
jne
jge
adc
mov
jge
into
or
jbe
lret
xchg
adc
stos
repnz
imul
push
fadds
sbb
jle
filds
and
dec
mov
shll
push
movsl
fs
or
inc
stos
or
sub
inc
fistl
sbb
imul
cmp
pop
rorb
cli
rclb
neg
add
js
and
cmpsl
std
add
test
std
lock
stc
call
mov
xlat
xchg
push
movsl
ret
call
push
fiadds
jg
mov
fidivrl
add
out
enter
adc
push
add
xor
xor
xchg
xor
or
sbbb
xchg
out
jbe
sbb
cmp
aas
ja
std
jb
xchg
pop
data16
mov
xor
dec
cmc
mov
sbb
stos
lahf
and
lods
jmp
arpl
adc
mov
pop
gs
sub
test
jb
mov
insl
std
stos
mov
repz
mov
or
pop
or
or
xlat
jb
stos
in
xchg
inc
push
aam
lret
stos
xchg
fwait
and
push
lcall
inc
shrl
jp
cmp
add
insb
jle
scas
jb
cmpsb
xchg
mov
loope
iret
repz
ret
dec
or
inc
movsb
push
insb
xchg
fsubrs
test
mov
jno
cmpsl
add
aam
add
jmp
mov
aaa
out
push
or
rcll
cmp
push
lahf
dec
xchg
imul
xchg
mov
fimuls
and
lret
ret
pop
das
or
dec
sub
mov
mov
jno
mov
fistpll
lret
adc
inc
mov
enter
adc
aaa
mov
mov
mov
pop
mov
dec
iret
pop
repnz
lds
inc
iret
adc
out
mov
jmp
jae
push
mov
rcr
xchg
or
adc
inc
sub
jp
addr16
fsts
ds
inc
xor
xchg
mov
test
xchg
jge
dec
lods
ret
inc
jb
movsb
xchg
push
dec
iret
and
icebp
sub
jns
js
push
outsl
add
mov
inc
sarb
pop
push
xchg
mov
jmp
dec
mov
xchg
push
xchg
pop
pop
adc
xchg
cmp
out
xor
jge
push
icebp
adc
jo
loop
sub
xor
cmp
pop
add
jne
inc
mov
ja
clc
or
or
sub
mov
jne
pop
sbb
clts
in
jl
inc
inc
mov
sahf
sbb
lea
add
sbb
iret
jmp
and
mov
xchg
sub
repnz
outsb
sub
arpl
gs
stc
in
jge
lcall
dec
pop
xchg
mov
cmp
jl
cltd
mov
inc
and
shrl
jp
rorl
push
movsb
adc
in
in
dec
in
enter
cmp
imul
sbb
into
mov
fdiv
aam
js
mov
pop
imull
scas
out
jo
repz
ja
pop
stc
mov
nop
cltd
fwait
imul
lea
mov
pusha
insl
cmovae
into
inc
or
imull
leave
mov
in
pop
mov
inc
inc
ljmp
xchg
inc
lea
enter
into
mov
pop
mov
pop
xchg
jp
mov
out
cmp
popf
mov
pop
lods
push
call
push
clts
xchg
xor
test
mov
movb
enter
mov
xchg
fisubrs
cli
mov
addl
xchg
sub
jne
repz
fnsave
fistl
fs
popf
add
stc
xor
movsb
inc
cmc
lds
stos
xchg
add
xchg
jge
push
push
adc
push
adc
or
ret
and
push
xchg
push
push
addr16
std
lret
inc
or
xchg
mov
andb
inc
clc
push
xor
clc
add
dec
jo
mov
pop
adc
fwait
daa
inc
addr16
pushf
push
xor
cmp
pop
xlat
test
gs
inc
sti
mov
gs
ffreep
lods
inc
add
mov
or
cmp
mov
mov
mov
cmp
aad
cmp
das
lock
shll
and
jp
ds
arpl
stos
xor
mov
mov
or
scas
xor
inc
mov
or
imul
inc
in
lods
rcrl
pop
popa
sub
popa
xchg
pushf
test
jno
fldt
jae
mov
orb
xor
lea
pop
dec
outsb
xchg
int
mov
fldt
push
sbb
mov
mov
scas
aaa
mov
cli
jnp
flds
mov
in
cmp
xchg
pop
stos
aam
mov
jnp
jp
xchg
push
cmp
movsb
inc
fwait
push
mov
pop
fdivrp
sbb
xchg
rolb
enter
mov
int3
jp
cmp
push
pop
sub
movsl
pop
mov
leave
mov
mov
sub
call
xchg
mov
lods
jmp
mov
mov
jecxz
cmc
roll
sub
mov
sti
cmp
movsl
mov
push
int3
ret
stos
roll
shll
inc
sbb
mov
stc
dec
lret
cld
lods
sbb
aad
fcmovnb
adcb
popl
or
and
sub
mov
mov
cmpsb
icebp
sub
and
jae
ret
leave
fisttps
jnp
mov
add
or
or
bswap
xor
int3
mov
sub
xchg
dec
jae
sbb
lret
adcb
mov
pop
cmp
lret
gs
mov
cltd
enter
mov
inc
mov
inc
hlt
pop
and
mov
push
iret
mov
int
call
int3
inc
add
fimuls
mov
test
movsbl
cwtl
mov
pop
add
cmpsl
idivl
sub
mov
icebp
cld
jg
xchg
ret
jp
cwtl
pop
movsl
mov
shrb
push
shrl
lods
and
xchg
inc
mov
lahf
cli
divb
bound
sub
dec
mov
add
cmp
pushf
sub
lcall
xchg
rolb
inc
stos
aad
lods
sahf
push
imul
js
cs
xor
clc
jl
js
push
lcall
or
mov
lret
fsub
je
ror
les
adc
mov
pop
test
pusha
xchg
cmp
fbld
mov
lcall
out
repnz
mov
inc
shrb
or
aas
sbb
out
mov
sbb
mov
dec
imul
lock
inc
call
out
repz
mov
jns
mov
adc
pmuludq
popf
mov
dec
icebp
sbb
sub
dec
in
add
jl
adc
bnd
sub
cmc
jae
fldt
out
cmpsl
test
test
and
or
inc
cli
bound
sbb
dec
push
cmp
and
pop
sub
outsl
jge
out
fisttpl
test
lret
fsubrs
rcrb
inc
xorl
stc
pushl
mov
fisttps
outsb
mov
testb
xlat
insb
imul
test
jmp
je
jb
sbb
and
xor
mov
add
aad
enter
jb
inc
mov
push
inc
into
sub
shr
aaa
stos
cmp
pop
mov
cld
add
ja
lds
stc
dec
mov
jns
mov
sbb
pop
rol
sbb
sub
push
stos
fsubrl
ror
adc
fisubrl
dec
lods
jb
cmp
roll
dec
sbb
lods
mov
arpl
mov
lahf
bsf
in
mov
xchg
test
mov
idivb
lret
jne
xchg
jbe
ljmp
daa
pop
mov
cwtl
or
sub
and
lahf
sahf
inc
sti
loop
js
cmp
mov
movsl
mov
mov
and
add
sub
call
test
pop
cltd
test
sub
cltd
and
dec
in
jbe
cli
pop
cmpsb
lret
jle
and
call
inc
cltd
imul
sbb
add
fcmovne
add
nop
mov
pop
mov
daa
adc
mov
pop
testl
mov
pop
cmp
jl
mov
ljmp
mov
inc
cmp
cmp
add
fsubl
mov
lret
lahf
mov
arpl
xor
shrl
push
mov
and
loop
stc
movsb
ss
popf
and
mov
icebp
mov
mov
inc
sub
lds
icebp
mov
outsl
xchg
imul
fs
jle
xchg
mov
lods
popf
sub
testl
fsubrs
mov
xorl
cmc
pushl
mov
fisttps
outsb
mov
testb
xlat
push
mov
int
jle
cmpsl
ret
xchg
leave
jp
lahf
lea
mov
jle
xchg
add
mov
aam
sbb
enter
jb
xchg
movsb
adc
movsb
ds
idivl
ret
call
loopne
push
imul
aas
mov
mov
mov
mov
jecxz
inc
pop
dec
aaa
add
add
shll
add
pushf
push
insb
mov
dec
icebp
fisubl
aad
mov
insb
stos
push
and
test
lret
lret
test
int
jae
enter
iret
mov
shrb
xchg
mov
subb
movsb
test
push
and
mov
adc
cwtl
rolb
mov
ret
mov
int
mov
mov
cwtl
sbb
or
add
jo
sbb
push
pop
ret
addl
rorb
add
xorb
int
push
xchg
int3
pop
xor
lret
test
push
lods
push
sub
leave
test
mov
negl
fldcw
lcall
repz
fcoml
xchg
aad
mov
pop
push
jno
out
icebp
stc
jnp
sahf
pop
xchg
iret
loope
ja
popf
ficoms
out
hlt
jae
pushf
pop
pop
pop
loope
out
outsb
xor
xchg
dec
and
push
push
adc
adc
add
aad
jno
pop
in
xchg
pop
xchg
into
popa
mov
insb
xchg
ficoml
push
test
adc
xlat
mov
shrb
pop
sub
mov
dec
mov
aam
sub
mov
imulb
mov
cwtl
rolb
fstpt
test
pop
into
ja
xchg
mov
cmp
sub
pop
xor
xchg
and
pushf
cwtl
movsl
test
lcall
xchg
pushf
cmpsl
mov
xchg
sahf
cmpsb
hlt
pop
stc
imul
mov
xchg
addr16
cmp
shlb
mov
pusha
cmpsb
mov
iret
sti
test
add
lcall
fistpll
mov
xchg
mov
lock
dec
push
das
xchg
int3
es
add
or
sub
jbe
fsubrl
fwait
shr
jbe
lods
xchg
jae
fisubrl
sbb
sub
jp
lcall
sti
stc
cli
ficompl
jb
cmp
pop
jmp
cwtl
dec
and
jg
cmp
fisubl
cs
mov
fwait
lret
jnp
lods
shrb
mov
ret
xchg
cs
jmp
push
scas
loope
push
xchg
mov
adc
xor
in
popl
fmuls
insb
xor
mov
pop
xchg
mov
js
push
sbbb
lcall
pop
mov
inc
fs
sti
cmp
pop
sbb
test
pop
xchg
enter
or
out
push
bound
jnp
jl
mov
test
cmp
jmp
shr
pop
xlat
jbe
lret
inc
call
mov
mov
cmp
jp
add
fwait
lods
shll
or
ret
test
jl
adc
pop
mov
mov
cmp
addr16
stos
mov
fucomp
fldcw
pushf
cmp
push
js
ss
mov
jl
test
xor
xchg
stos
mov
jp
cmp
mov
cmp
lods
inc
cltd
xchg
dec
outsl
mov
jnp
cltd
xchg
stos
jb
xchg
mov
repz
or
sub
sbb
add
dec
xchg
daa
les
enter
push
mov
test
jnp
mov
inc
sbb
sub
js
pop
js
fisubs
pop
popa
inc
push
dec
sub
lret
pop
shrb
stos
cmp
enter
dec
xchg
dec
mov
jbe
mov
int3
jmp
lods
jnp
out
xor
adc
cmp
lret
jecxz
ret
inc
test
jg
adc
movsb
mov
inc
fwait
mov
mov
stos
dec
fwait
pop
outsl
leave
test
mov
pop
and
scas
mov
mov
mov
sbb
sahf
dec
bound
fidivrl
and
sbb
mov
mov
cmpsb
sub
mulb
ret
pop
adc
movsb
xchg
stos
jns
add
leave
aad
lods
xchg
roll
xchg
mov
inc
mov
lds
pop
sub
adc
out
mov
dec
fistl
push
and
sbb
mov
mov
cli
sbb
xor
and
inc
clc
imul
mov
rorb
mov
mov
jl
adc
mov
sti
cmp
out
mov
fistps
inc
movsl
mov
inc
jbe
sbb
or
imul
shll
sbb
jnp
inc
cmp
ret
mov
mov
dec
inc
pop
loop
sub
dec
jno
stos
cmpsb
cwtl
xlat
cwtl
sub
cmp
sub
addr16
test
pop
fisttpll
pop
movsb
push
das
xchg
stc
cli
out
out
mov
pop
shrb
adcb
inc
cltd
mov
push
fwait
int
xor
lret
lcall
aad
xor
ss
mov
and
sahf
scas
inc
fwait
leave
insl
jbe
push
rolb
lret
in
cmp
push
xchg
js
xor
mov
sbb
sub
pop
push
sub
sub
sahf
and
fwait
outsl
es
imul
xchg
mov
jb
push
jg
sbb
jmp
sub
adc
xor
mov
mov
out
push
sub
adc
xchg
sub
mov
sub
inc
cmpsl
pop
shll
cmp
out
ret
pop
dec
jo
dec
or
in
cld
inc
daa
xchg
jo
sbb
or
mov
jle
inc
dec
repz
int3
rcrl
fldenv
mov
sahf
das
xchg
stc
cli
cmp
lret
outsl
mov
popa
flds
cmp
cltd
add
dec
arpl
pop
adc
push
inc
pop
push
sub
cmp
mov
mov
ljmp
xchg
mov
sub
jmp
jb
shrl
clc
pop
sbb
cli
pop
stc
cmp
xor
mov
data16
fsubr
insb
outsb
lahf
cmc
jno
cs
jmp
std
mov
sti
mov
jle
fsubrs
mov
dec
lret
int3
cmp
dec
lret
cltd
cmp
lock
dec
xor
and
xor
iret
mov
addr16
or
ds
iret
repz
loop
xlat
inc
sbb
insb
jbe
aas
cmp
rcr
movsb
sbb
pop
stos
push
lods
xchg
sub
jno
mov
pop
lods
and
les
sub
pop
cwtl
in
clc
das
sbb
push
movsl
pop
or
push
and
sbb
outsb
out
pop
hlt
dec
cmpsl
insl
fstp
loop
pop
scas
jno
ficompl
sub
xchg
jne
fcmovnu
in
aas
lahf
jp
sub
loopne
repz
mov
lret
faddl
mov
jmp
jle
fwait
lea
stos
sahf
inc
add
int
sub
mov
pop
cmp
in
jbe
lcall
aam
es
in
outsl
sbb
mov
lret
shl
or
add
ss
faddp
pop
add
repnz
bound
cld
sub
rolb
pop
pop
and
mov
imul
sar
dec
sbb
add
mov
stc
pop
mov
lods
mov
mov
dec
sub
int
sti
movl
lret
daa
pushw
movsl
loop
fisubrl
jns
mov
sbb
cli
je
xlat
pop
mov
cmp
outsl
mov
fwait
mov
shrb
or
xor
adc
sub
sahf
or
mov
cmp
mov
movsb
clc
jl
or
sbb
mov
fwait
mov
mov
int
mov
js
pop
jmp
mov
xlat
iret
test
aaa
hlt
loopne
ds
jmp
std
mov
sti
mov
dec
sbb
xchg
push
inc
xor
inc
inc
stc
comiss
pop
push
and
push
lea
arpl
int3
inc
pop
mov
in
mov
push
jae
mov
sbb
add
or
xchg
xchg
push
sbb
lret
fistpll
imul
inc
xchg
pop
lods
and
les
dec
lods
fildll
mov
jge
mov
cmp
and
mov
scas
clc
je
pop
mov
imul
mov
fistl
xchg
lods
jle
cmp
jmp
popf
xchg
dec
pop
sbb
test
dec
pop
pop
imul
scas
cmp
push
rcr
data16
pop
stos
aam
mov
jnp
popf
xor
lods
mov
or
mov
mov
outsl
aaa
jecxz
dec
and
cmp
or
cmp
dec
dec
mov
push
sarl
mov
inc
cmp
cs
scas
movsb
fildll
addb
mov
mov
cmp
jp
popa
lahf
mov
mov
test
nop
push
cmp
mov
stos
inc
cmp
shrl
test
sub
cmp
sub
sub
mov
cmp
mov
icebp
movsb
mov
cli
je
fistpl
dec
cmp
outsl
mov
mov
mov
shrb
or
xor
adc
xchg
lods
jle
fidivrl
jmp
popf
xchg
dec
pop
sbb
test
dec
pop
pop
idivb
iret
subl
pop
dec
pop
add
sbb
clc
scas
addr16
fwait
xor
sbb
rclb
mov
pop
lcall
mov
xchg
or
mov
inc
cmpb
dec
dec
mov
push
sarl
mov
inc
cmp
cs
scas
lods
aas
stos
pop
sub
xor
fsubrs
popf
mov
cmp
jp
popa
lahf
mov
adc
add
test
nop
push
cmp
mov
stos
inc
cmp
mov
mov
test
sub
cmp
sub
sub
popa
sbb
xchg
imulb
cmpsl
xchg
test
ret
add
cli
jge
imul
dec
cmpsl
insl
mov
scas
jno
mov
xchg
jbe
sub
ja
cli
xchg
push
cmp
jno
loopne
inc
jecxz
js
scas
xlat
arpl
decb
jmp
pop
stos
aam
mov
jnp
popf
xor
lods
mov
or
mov
mov
outsl
aaa
loope
dec
and
cmp
or
cmp
dec
dec
mov
push
sarl
mov
inc
cmp
cs
scas
cmpsl
pop
stos
pop
sub
xor
fsubrs
popf
mov
cmp
jp
popa
xchg
mov
fldlg2
add
mov
scas
mov
into
pop
and
jmp
imul
jb
dec
xor
movsl
loop
sbb
push
adc
sti
stc
cli
cmp
psrld
mov
xchg
or
pop
mov
cmp
mov
mov
enter
cmp
stos
xor
in
sbb
or
lahf
mov
cmc
cmp
dec
mov
neg
andb
scas
mov
lock
or
in
mov
jnp
fwait
xor
xchg
pop
and
mov
cmp
sti
pop
cwtl
and
cmc
sarl
mov
inc
sbb
mov
pop
xchg
inc
add
xchg
cmp
addl
int3
dec
jo
imul
mov
jb
inc
inc
mov
call
dec
inc
call
mov
jbe
cmpsl
jecxz
lcall
lods
into
addr16
ret
or
push
rcl
dec
in
stos
push
lods
fwait
mov
jo
ljmp
push
jl
mov
sahf
das
xchg
stc
cli
cmp
jbe
movsl
mov
pushf
mov
sbb
scas
mul
test
arpl
scas
dec
fs
dec
sbb
mov
mov
and
fcoml
push
test
cli
jnp
inc
sbbb
jle
cwtl
cmp
std
decl
and
ds
out
out
mov
xchg
mov
xchg
jbe
mov
xor
cmp
jb
pop
pop
outsl
clc
movsl
cltd
dec
or
fisttpl
or
sub
or
je
imul
pop
xchg
mov
imul
sbb
adc
pop
pushf
into
push
ljmp
mov
or
lret
stc
addb
dec
inc
fsts
scas
cwtl
aas
jbe
cmpsb
arpl
sbb
mov
fwait
push
lods
and
les
sub
mov
lret
fisttpll
add
sti
sub
dec
cld
push
push
dec
push
push
push
stos
in
sbb
or
dec
rorl
out
stc
leave
faddl
mov
in
subb
dec
fwait
imul
fs
jnp
and
in
andl
clc
xchg
icebp
js
adc
jg
xor
push
sti
and
stos
xlat
push
fidivl
jl
mov
jnp
js
mov
mov
out
add
fsubrs
fwait
roll
jmp
xchg
xchg
pusha
nop
dec
push
dec
xchg
lret
in
stc
inc
mov
jle
enter
cmc
xchg
add
fwait
imul
data16
jp
gs
rol
push
sbb
leave
decb
imul
ss
lock
cmp
repnz
inc
sbb
cmp
sub
and
mov
pop
mov
sahf
das
xchg
stc
cli
cmp
adc
test
xor
jg
or
dec
fwait
outsb
subb
testb
xchg
mov
mov
inc
imul
imul
jnp
and
adc
add
andl
inc
inc
fwait
int
dec
nop
es
cmp
push
push
aas
insb
cmpsl
and
cltd
jns
pop
movswl
jmp
std
mov
sti
mov
jecxz
insb
inc
leave
mov
xchg
mov
mov
daa
mov
sahf
test
mov
cmp
and
imul
mov
jb
inc
inc
mov
call
dec
inc
fsubrs
or
imul
mov
mov
sbb
push
dec
xor
mov
dec
repnz
imul
cltd
cld
lods
mov
lea
test
negl
lret
jg
repz
out
and
into
xchg
xchg
aam
xor
icebp
dec
movb
lret
cmc
dec
gs
add
cmpsl
aaa
fptan
js
jge
or
js
and
xcrypt-cfb
cmpsl
daa
add
fs
xchg
fcoml
mov
sbb
int
scas
or
mov
push
push
xor
insb
imul
pop
mov
xor
lahf
dec
inc
in
xlat
out
add
fsubrs
cli
xlat
xchg
lret
imul
leave
inc
xor
or
pop
mov
cmp
and
xor
orl
nop
xorb
dec
fldcw
inc
seta
sbb
xor
or
mov
cmp
jg
les
inc
and
dec
icebp
fidivl
sbb
jge
lods
push
dec
fwait
test
sub
xchg
roll
xchg
inc
and
movsl
imul
sub
or
or
cmp
lret
or
dec
rorl
out
fadd
leave
fcoml
fsubl
decb
mov
rolb
fbld
xchg
fs
adc
mul
mov
mov
fwait
mov
mov
cwtl
xchg
cmc
jp
xchg
pop
dec
mov
pop
arpl
mov
and
pop
gs
mov
test
andl
push
gs
adc
adc
xchg
cmp
xchg
arpl
mov
xchg
or
jae
inc
cmp
mov
aaa
cmp
sbb
test
lcall
cltd
int3
adc
lods
mov
mov
fisubrl
js
push
popl
aaa
imul
ljmp
stc
cli
cmp
test
fdivrs
fcoms
outsb
flds
cmp
cltd
add
dec
arpl
cmp
ds
inc
pop
aam
movsb
lcall
jge
pop
jmp
mov
or
lahf
mov
cmc
cmp
dec
mov
neg
andl
lock
or
in
mov
jnp
fwait
xor
sbb
rclb
mov
pop
lcall
mov
xchg
mov
inc
imul
mov
movsb
xchg
fwait
jns
ret
cmp
lahf
cmp
pop
or
and
pop
insl
pop
test
jae
mov
xchg
sti
hlt
mov
ds
ja
cwtl
xor
sbb
mov
mov
sub
lods
xchg
sub
std
mov
inc
loop
lods
les
mov
das
fisttpll
jb
push
das
xchg
stc
cli
cmp
dec
fisubrs
add
jge
or
aad
mov
add
pop
fstl
mov
sub
aam
jb
in
sbb
repz
xchg
scas
lahf
mov
cmc
cli
idivl
aas
rorl
rcr
pop
lret
fwait
pushf
sahf
add
lcall
mov
jnp
fwait
xor
add
pop
cmp
out
push
inc
lret
mov
enter
xor
pop
andb
sbb
add
andb
js
sbb
lret
sar
int3
inc
jnp
dec
lret
or
pop
hlt
add
mov
subl
bound
xor
mov
cmp
jp
popa
xchg
mov
fucomp
add
test
nop
push
cmp
mov
mov
jbe
pushf
in
mov
test
sub
cmp
sub
sub
mov
sbb
mov
cli
je
xlat
pop
mov
cmp
outsl
mov
xchg
scas
mov
shrb
or
xor
adc
jecxz
mov
dec
adc
scas
push
imul
sbb
ds
pop
data16
testl
sbb
lahf
xchg
je
xor
ljmp
push
aas
fwait
lret
in
mov
fldt
mov
lea
mov
jne
fwait
jg
inc
cmp
outsb
aaa
mov
lods
mov
nop
dec
and
mov
xchg
cmp
xchg
arpl
mov
xchg
or
jae
inc
cmp
xchg
lahf
insb
aaa
cmp
sbb
test
lcall
popf
int3
adc
lods
mov
mov
fisubrl
insb
scas
push
scas
push
scas
sbb
push
cs
mov
sahf
das
xchg
stc
cli
cmp
fisubrl
add
bnd
or
dec
aad
cmpsb
xchg
dec
out
mov
push
cmp
sbb
mov
pusha
push
adc
fprem1
lds
xchg
fildll
fdivrp
jl
sbb
xlat
in
divl
adc
jo
pop
pop
gs
out
nop
es
cmp
cmpsb
fs
rol
jnp
fdivrl
jno
cs
jmp
std
mov
sti
mov
sub
insb
inc
inc
xchg
dec
dec
or
mov
dec
lret
or
pop
hlt
add
add
aas
sub
or
and
fsubrs
popf
mov
cmp
jp
popa
xchg
mov
in
add
lea
lcall
aad
int
adc
pop
ret
or
push
rcl
dec
cld
test
mov
rcrl
fbld
and
ljmp
stc
cli
cmp
mov
inc
das
fisubrl
mov
xchg
or
pop
mov
cmp
mov
xchg
enter
cmp
stos
xor
in
sbb
repz
xchg
scas
lahf
mov
cmc
cmp
dec
mov
neg
cmpsl
movsl
movsb
sbb
cmp
in
mov
jnp
fwait
xor
xchg
pop
and
mov
cmp
sti
pop
cwtl
and
cmc
sarl
mov
inc
sbb
and
insb
or
mov
inc
add
xchg
cmp
addl
int3
sbb
imul
mov
jb
inc
inc
mov
call
dec
inc
fwait
mov
cmpsl
jecxz
lcall
hlt
into
addr16
ret
or
push
rcl
dec
in
stos
push
lods
fwait
mov
jo
ljmp
push
jl
mov
sahf
das
xchg
stc
cli
cmp
jbe
movsl
mov
pushf
fdivp
jge
pop
adc
test
fninit
repz
scas
jb
sub
mov
jae
in
push
mov
xor
cmp
cmpsl
je
insb
ss
adc
adc
mul
mov
mov
fwait
mov
mov
int
mov
js
pop
jmp
mov
xlat
iret
stos
andl
mov
mov
sti
mov
and
insb
inc
leave
mov
xchg
mov
rorl
mov
lahf
test
mov
cmp
and
imul
dec
dec
sbb
jae
xchg
jnp
stos
mov
dec
sbb
mov
mov
jg
pushf
xchg
sub
mov
sub
jno
mov
pop
lods
and
aad
mov
dec
lock
push
cmp
test
dec
sbb
mov
clc
sub
shrl
pop
push
adc
adc
sub
sahf
or
mov
cmp
mov
aaa
mov
jl
or
sbb
mov
fwait
lea
mov
int
mov
js
lcall
addl
and
and
aas
sub
fucomi
hlt
std
mov
sti
mov
sahf
fsubrl
mov
dec
dec
mov
push
sarl
stos
add
xor
mov
andl
bound
and
fsubrs
popf
mov
cmp
jp
popa
cltd
mov
test
in
add
call
scas
mov
into
pop
and
xlat
pop
dec
mov
imul
inc
stc
push
iret
test
data16
loop
fisubrl
jge
mov
inc
ja
push
mov
jno
mov
stos
push
cmpb
stos
pop
jp
dec
cmpsl
int
xor
jno
jb
movsb
push
sbb
int
sbb
lahf
dec
sbb
or
pop
pop
mov
jecxz
mov
dec
pop
pop
dec
idivb
popl
cmp
les
scas
addr16
popf
xor
movsl
xor
jnp
lods
cmp
lea
outsw
clc
mov
pop
aam
aaa
pop
add
sub
jmp
repz
adc
fadd
flds
hlt
add
push
inc
pop
loopne
and
fsubrs
popf
mov
cmp
jp
gs
rol
push
sbb
leave
decb
imul
ss
lock
cmp
repnz
roll
push
or
xchg
mov
nop
cltd
adc
mov
sahf
das
xchg
stc
cli
cmp
adc
test
xor
jg
or
dec
fwait
outsb
subb
testb
xchg
cmpsb
lret
dec
sbb
test
imul
imul
jnp
and
in
subl
adc
ds
dec
jecxz
pop
cmp
lret
fsub
pusha
shrb
mov
cltd
cltd
mov
dec
int3
sbb
fwait
mov
jne
decl
or
ss
inc
hlt
dec
clc
in
fwait
push
push
hlt
int3
mov
xchg
mov
addb
sub
fnstenv
aam
filds
xor
and
int
test
mov
les
mov
mov
cld
or
leave
cltd
int3
adc
lods
mov
mov
sbb
push
dec
xor
push
push
dec
repnz
jns
push
and
jecxz
cld
lods
mov
add
ret
mov
xchg
lret
push
cmp
arpl
enter
ret
pusha
clc
sub
xchg
cltd
adc
mov
inc
into
sbb
lahf
mov
cmc
cli
cltd
jl
aas
rorl
rcl
pop
clc
dec
sti
fs
cs
mov
lods
test
popf
xor
lods
mov
or
pop
cmp
lret
mov
sti
lret
cmp
xchg
push
in
and
mov
xchg
adc
jl
dec
nop
xchg
cwtl
dec
push
sarl
iret
inc
inc
xor
mov
andl
push
add
fdivrl
sbb
popa
test
jmp
cmp
negl
ss
dec
loop
sahf
sbb
into
mov
loopne
mov
test
mov
dec
rcrb
mov
icebp
movsb
mov
cli
je
mov
or
imulb
push
cld
dec
cli
in
fldt
sub
xchg
xchg
xchg
xchg
mov
fistl
cmpsl
nop
inc
push
pop
sub
sahf
or
mov
cmp
subb
outsb
aaa
mov
jl
or
sbb
mov
fwait
lea
scas
sahf
inc
in
fwait
int
sub
mov
movsb
sbb
inc
mov
subb
jnp
pop
adc
out
push
add
shlb
add
andb
js
sbb
cwtl
xchg
cwtl
dec
push
dec
xchg
xchg
mov
mov
xlat
push
inc
mov
test
subl
js
xor
sub
fsubp
mov
in
inc
movsl
xchg
sub
xchg
mov
cltd
int3
adc
lods
mov
mov
sbb
push
dec
xor
pop
push
dec
repnz
imul
xchg
cld
lods
mov
add
insl
lds
cli
jge
imul
fildl
mov
jns
mov
jo
in
jbe
sub
push
mov
cmp
mov
fwait
outsb
aaa
iret
clc
jl
or
sbb
mov
fwait
lea
mov
inc
in
fwait
int
sub
mov
cwtl
dec
scas
pop
lods
mov
adc
sti
repnz
fwait
inc
lods
cmp
dec
xor
mov
xchg
faddp
pop
add
repnz
bound
sbb
aas
rolb
pop
dec
and
inc
inc
shl
jbe
pop
cmp
es
jecxz
or
cmp
xor
sbb
pushf
dec
jo
mov
shl
std
cld
jg
xchg
scas
sbb
cwtl
aam
fildl
scas
cmp
stos
sub
push
dec
repnz
stc
jecxz
mov
in
in
leave
scas
pop
outsl
std
in
push
mov
insl
lock
std
mov
sub
mov
imul
pop
sub
dec
loopne
cmp
cmp
fscale
lds
lahf
mov
cmp
or
loop
sti
decl
and
daa
xchg
loope
xor
pop
stc
cmp
xor
sahf
pop
lods
xlat
or
mov
dec
sahf
xchg
inc
jmp
mov
mov
sbb
add
andb
js
sbb
mov
ret
push
mov
jne
mov
push
mov
sub
lods
cmp
jae
fldt
sbb
push
add
and
xor
cmp
mov
sub
fwait
mov
cltd
int3
adc
lods
mov
mov
fisubrl
xor
push
lods
xchg
scas
sbb
push
cs
mov
sahf
das
xchg
stc
cli
cmp
scas
xchg
inc
mov
insl
ret
mov
xchg
or
pop
mov
cmp
test
enter
cmp
stos
xor
jmp
mov
or
lahf
mov
cmc
cmp
dec
mov
neg
popf
xchg
js
or
in
mov
jnp
fwait
xor
lods
mov
or
mov
mov
outsl
aaa
lea
sbb
add
andb
js
sbb
lea
xor
and
adc
scas
cmp
mov
fcmovb
pop
push
mov
add
and
stc
clc
jp
popa
xchg
mov
fldlg2
add
rolb
or
pop
into
adc
dec
jp
fcoml
mov
dec
and
pushf
rol
pop
push
push
pop
and
inc
inc
leave
mov
rcr
pushl
movsl
sbb
test
mov
sbb
or
push
mov
jge
mov
adc
sub
ja
lcall
xchg
fs
cmp
or
sbb
mov
fwait
mov
push
cmp
test
popf
xor
lods
jmp
fdivs
movsb
cltd
cmpsl
ret
lds
lds
xor
cmpsl
fwait
iret
push
push
adc
inc
test
mov
add
adc
icebp
add
adc
lret
or
pop
hlt
mov
andl
inc
pop
loopne
bound
and
fsubrs
popf
mov
cmp
jp
add
nop
mov
cmp
cmpsl
jecxz
sbb
dec
push
fs
lret
imulb
xlat
arpl
adc
sub
ret
rcrl
in
mov
adc
dec
mov
int
pop
inc
xor
cmp
sbb
mov
inc
pop
lret
pop
sub
fimull
push
pop
mov
cmp
mov
aam
xor
mov
jo
and
jno
dec
and
test
out
pushf
clc
jl
pop
gs
inc
sarb
fisubs
decl
ds
xchg
xor
imul
nop
lcall
pop
mov
xor
cmp
cmp
mov
and
cmp
outsb
aaa
sbb
mov
aas
mov
std
sub
int3
xchg
arpl
cmp
mov
push
in
pop
sbb
lock
push
in
or
ds
mov
lar
mov
mov
fildl
int
fstl
ret
pop
dec
mov
dec
mov
xor
adc
fidivrl
cmp
mov
aaa
or
insb
xor
cmp
or
cmp
lret
imul
and
dec
fs
pop
gs
sub
data16
cmp
and
cmc
mov
jl
cmc
cmp
mov
jle
mov
xor
cmp
test
jp
dec
adc
fucomp
push
es
xlat
iret
mov
aaa
lcall
jmp
std
mov
sti
mov
adc
insb
inc
inc
xchg
enter
mov
out
mov
cmc
cmc
imul
lcall
push
test
xor
mov
pop
cmp
jmp
mov
pop
jb
out
dec
outsb
aaa
cltd
lcall
jmp
lcall
xchg
int3
adc
ret
in
clc
out
test
mov
aad
std
addb
inc
cltd
cmp
mov
stc
cli
cmp
movsb
xchg
sbb
ret
add
scas
stc
aas
shrl
cmp
test
or
push
mov
mov
data16
test
sbb
or
pop
sti
outsb
stc
psubw
jns
or
arpl
push
subl
pop
dec
pop
mov
xchg
scas
addr16
fwait
xor
lods
mov
jns
clc
pop
loope
xchg
enter
outsl
out
mov
jmp
mov
jg
bswap
pop
push
mov
dec
mov
push
dec
mov
pop
fnsave
les
cmp
ds
mov
dec
pop
inc
test
cmp
jp
popa
lahf
mov
dec
shr
add
test
nop
push
cmp
mov
stos
inc
cmp
xchg
adc
pushf
in
mov
test
sub
cmp
sub
sub
lcall
inc
xchg
imulb
cmpsl
xchg
test
ret
add
cli
jge
imul
dec
cmpsl
insl
cmp
out
pop
scas
jb
sub
mov
jae
in
push
mov
divl
push
imul
std
and
in
test
sti
std
mov
pop
and
mov
inc
xor
dec
sti
jo
sub
mov
out
fldt
out
lea
daa
cmp
adc
sbb
xchg
push
inc
aas
or
mov
fcomps
push
lods
mov
push
mov
sub
push
mov
inc
pop
mov
in
mov
push
jae
mov
sbb
add
stos
push
out
ljmp
add
jg
mov
dec
mov
sub
mov
mov
iret
ret
push
cwtl
cltd
aas
out
shll
ljmp
inc
loop
mov
jns
movb
push
cmpsl
xchg
test
ret
add
cli
jge
push
das
inc
mov
stos
shr
adcl
test
mov
sahf
test
jae
in
jbe
in
sbb
or
dec
xchg
cmc
jmp
xchg
out
andl
std
ret
dec
xchg
daa
inc
mov
sub
test
mov
cmp
xchg
repz
out
ja
stos
cmp
sbb
jb
xchg
push
into
loope
out
mov
aaa
es
push
adc
add
cmp
imul
mov
push
lret
je
dec
push
data16
push
add
xor
mov
cmp
jp
popa
xchg
mov
fldlg2
add
rclb
enter
sbb
mov
ret
popf
clc
in
fcoms
test
movsb
rorb
loop
fldcw
sub
xchg
jmp
aad
aas
lcall
and
enter
mov
test
popa
dec
jo
push
mov
jp
fistl
cmpsl
fstp
jns
fstps
int
fstl
mov
xor
xchg
mov
xchg
fchs
jo
stc
mov
xchg
adcl
js
xchg
clc
push
mov
sbb
int
orl
out
push
fwait
lret
in
mov
fildl
lds
fwait
repz
jns
cwtl
dec
inc
push
fisubrl
and
hlt
push
fcoml
adc
push
mov
cmp
mov
mov
sub
push
mov
imul
flds
xchg
push
add
xor
in
lret
xor
cmp
mov
sub
aas
jp
shr
cmp
jl
dec
and
fiaddl
xlat
lret
inc
mov
je
sub
mov
cld
adc
or
or
cmp
loope
punpckldq
ljmp
test
mov
ret
xchg
mov
in
inc
mov
je
sub
add
push
scas
frndint
pop
pop
loope
cmp
sbb
mov
fwait
lea
mov
int
sub
mov
aad
push
xchg
pop
and
mov
cmp
sti
pop
fidivrs
iret
and
mov
aaa
movsb
cmp
jb
fwait
dec
stos
mov
xor
cmpsl
and
xlat
adc
pop
enter
shrl
push
dec
and
mov
inc
mov
jbe
ret
push
ja
cmp
fiadds
mov
sbb
jecxz
cltd
mov
sub
inc
cmp
fwait
dec
cmp
lret
add
push
imul
stos
nop
jl
nop
dec
divl
cwtl
sub
insb
mov
mov
lds
ret
int
sarl
dec
popa
lods
xchg
stos
push
popf
idiv
pop
scas
dec
loope
jno
push
leave
in
push
mov
inc
cld
push
add
push
xor
inc
adc
js
cmp
idivl
into
jle,pt
call
mov
hlt
jp
jnp
mov
adc
sub
inc
pop
mov
pop
pop
arpl
mov
pop
fidivrs
fucom
pop
cltd
iret
and
and
fs
and
hlt
push
cmp
enter
stos
dec
daa
adc
pushf
ljmp
inc
xor
mov
adc
call
mov
repz
add
addl
sbb
add
fdivr
mov
sub
ret
loop
cmp
je
imul
inc
cmp
scas
push
popl
aaa
adc
push
cs
mov
sahf
das
xchg
stc
cli
cmp
push
cmp
cmp
mov
daa
cltd
and
push
mov
stos
out
cwtl
add
mov
test
push
scas
fisubrl
cltd
xchg
dec
mov
xchg
scas
pop
leave
fxam
repnz
mov
leave
cmp
dec
stc
rorb
out
fwait
mov
jmp
mov
xchg
pop
push
dec
stos
xlat
push
fisubl
sbb
mov
jnp
enter
lea
int3
sbb
dec
push
sub
leave
jecxz
test
clc
jl
sub
gs
insb
xchg
pop
dec
sahf
dec
movsb
jne
inc
inc
xor
add
mov
mov
out
test
jl
push
cmpsb
dec
lea
adc
dec
outsl
mov
cmp
aam
cmp
mov
sbb
mov
lods
imul
xor
jno
pop
sub
xchg
inc
lcall
call
jle
push
or
or
cmp
loope
dec
dec
sti
stos
dec
arpl
jg
mov
mov
xor
jle
fsub
cmp
inc
xchg
push
jmp
pop
cld
xor
stos
idivl
dec
std
lea
pop
ds
iret
cwtl
imul
roll
push
hlt
into
scas
push
lods
sbb
mov
sti
out
ja
clc
sbbb
jl
pop
std
mov
sti
mov
popf
fsubrs
addb
dec
test
push
sarl
loope
inc
xor
mov
cmpl
addr16
loopne
jmp
xor
mov
cmp
jp
popa
xchg
mov
fucomp
add
lea
shl
or
ret
aad
int
out
mov
ret
or
push
rcl
dec
cld
test
mov
rcrl
loope
and
ljmp
stc
cli
cmp
movsb
xchg
dec
lahf
fisubrs
add
bnd
or
fldcw
aad
fildl
mov
jns
mov
mov
cmp
jns
pusha
dec
bound
mov
scas
aaa
mov
cli
jnp
and
in
subl
adc
dec
cmp
fwait
and
mov
aas
fwait
lret
in
mov
fldt
xchg
lea
pop
aas
popf
mov
mov
insb
inc
inc
xchg
push
jle
stc
mov
dec
lret
dec
test
in
push
repz
push
inc
inc
mov
data16
pop
mov
jae
mov
jnp
xchg
mov
mov
in
add
rclb
divb
dec
sub
int
sti
pop
add
adc
inc
pop
pop
iret
test
data16
mov
xor
mov
cmp
test
dec
sbb
lret
jg
repz
aam
xor
adc
sub
mov
inc
pusha
ficomps
jns
or
cwtl
fs
push
and
add
mov
int3
pop
pop
xor
jo
lods
adc
cmp
jnp
popf
xor
lods
mov
out
cmp
jnp
outsl
or
pushf
data16
adc
shl
or
add
aaa
sbb
faddp
pop
add
and
lods
imul
or
clc
js
pop
push
mov
arpl
orl
mov
jae
mov
push
ljmp
mov
or
lret
stc
push
test
rol
add
dec
inc
ficoms
movsb
cmpsb
arpl
sbb
mov
pop
lods
and
mov
jge
sub
mov
adc
mov
jge
push
std
insl
clc
vpunpcklqdq
cmpl
loope
subl
inc
arpl
push
dec
xchg
cs
pop
push
mov
fstl
lods
nop
dec
lock
sub
mov
inc
pusha
ficomps
jns
or
cwtl
fs
push
and
add
mov
int3
pop
pop
xor
jo
mov
leave
pop
cmp
jnp
fwait
xor
mov
lods
jg
stos
cmp
lea
stc
outsl
clc
inc
cltd
dec
enter
mov
xchg
push
inc
mov
xchg
das
fcomps
push
dec
mov
push
mov
arpl
orl
mov
jae
mov
push
ljmp
mov
or
lret
stc
push
test
rol
sbbl
inc
pop
xchg
scas
cwtl
aas
jbe
cmpsb
arpl
sbb
mov
inc
and
push
dec
mov
test
dec
inc
lcall
movsb
stc
cli
cmp
sbb
mov
jecxz
push
dec
fsubrs
pop
pop
push
pop
stos
gs
fistl
cmpsl
nop
sbb
push
sub
dec
lods
jbe
jmp
xchg
scas
pop
leave
fxam
xor
push
mov
cmp
sahf
test
cmpsb
cld
jle
mov
fwait
mov
fistl
mov
push
sahf
and
mov
ret
push
insl
fisubs
mov
stos
call
pop
sti
sti
mov
dec
sbb
xchg
push
inc
and
inc
inc
outsb
das
fcomps
push
outsl
mov
push
xchg
orb
gs
mov
imul
mov
jb
inc
inc
mov
call
dec
inc
fildll
cmpsl
jecxz
lcall
popf
int3
adc
sbb
mov
sbb
or
lds
cmp
pop
loop
dec
incb
adc
dec
rcrb
mov
pop
jl
movsl
sbb
test
mov
sbb
or
dec
rorl
mov
fistl
lods
fstp
cmp
cltd
sbb
data16
cmp
out
inc
lret
lock
cmp
jle
jae
adc
cmpsl
sbb
mov
fwait
mov
pop
and
mov
fdivl
dec
lcall
lods
out
fldt
inc
sbb
inc
cmp
popf
mov
dec
sbb
xchg
push
inc
movsb
or
bound
fcomps
push
cpuid
popa
js
pop
push
lcall
push
cwtl
addl
mov
pop
int
in
mov
xchg
push
setnp
xlat
and
jp
lcall
popf
int3
adc
popl
mov
mov
dec
lcall
cmp
mov
das
fisttpll
adc
sti
stc
cli
cmp
mov
dec
fisubrs
mov
xchg
or
pop
mov
cmp
pop
mov
enter
cmp
stos
xor
jmp
mov
sbb
filds
mov
popa
call
rorl
lret
mov
jb
cs
pop
stos
aam
mov
jnp
popf
xor
lods
mov
or
mov
mov
outsl
aaa
pushf
cwtl
dec
and
cmp
or
cmp
dec
dec
mov
push
sarl
mov
inc
cmp
cs
scas
mov
stos
pop
sub
dec
addb
mov
mov
cmp
jp
popa
lahf
mov
icebp
shr
add
test
nop
push
cmp
mov
stos
inc
cmp
mov
lods
pushf
in
mov
test
sub
cmp
sub
sub
mov
jo
mov
icebp
movsb
mov
cli
je
fistpl
dec
cmp
mov
mov
mov
shrb
or
xor
adc
sub
inc
and
in
sbb
cmc
sbb
xor
dec
mov
arpl
lea
gs
dec
cmp
lahf
dec
jns
fstpl
dec
cwtl
inc
cmp
mov
lock
dec
inc
lods
in
mov
mov
pop
xor
sbb
add
andb
js
sbb
mov
push
dec
mov
pop
push
mov
gs
lea
insl
pop
pop
orb
or
pop
pop
addl
sbb
popa
inc
mov
shr
add
std
icebp
cld
or
scas
mov
into
pop
and
cmc
pop
dec
mov
imul
jb
dec
xor
movsl
loop
dec
in
scas
mov
mov
stc
cli
cmp
mov
lods
xchg
inc
and
jge
or
aad
mov
pop
fstl
jp
inc
mov
js
inc
mov
cmp
dec
add
or
dec
inc
xor
sbb
add
mov
inc
cmp
mov
push
repnz
mov
cwtl
sahf
or
lods
in
mov
fldt
lret
fsubs
xlat
inc
mov
iret
mov
mov
bound
sbb
mov
push
sarl
mov
inc
cmp
cs
scas
mov
stos
pop
sub
dec
addb
mov
mov
cmp
jp
popa
lahf
mov
shr
add
test
nop
push
cmp
mov
stos
inc
cmp
mov
lods
pushf
in
mov
test
sub
cmp
sub
sub
mov
adc
cli
je
fistpl
dec
cmp
mov
mov
mov
shrb
or
xor
adc
sub
dec
and
in
sbb
or
dec
dec
xor
dec
popa
shr
test
repz
mov
pop
and
iret
cmp
mov
xlat
sub
mov
lcall
test
jp
jg
inc
cmp
aaa
mov
lods
mov
nop
dec
and
mov
xchg
cmp
xchg
arpl
mov
xchg
or
jae
inc
cmp
mov
stos
lahf
insb
aaa
pop
mov
sbb
test
lcall
int
mov
mov
dec
cld
test
mov
sar
fbld
and
ljmp
stc
cli
cmp
mov
insl
lds
cli
jge
or
inc
or
stos
popf
mov
sbb
push
mov
cmp
das
xchg
out
mov
aaa
enter
or
scas
aaa
mov
cli
jnp
and
xchg
shr
test
sti
std
lea
jo
dec
adc
test
bnd
clc
push
jmp
cmp
push
pushf
and
jne
pop
stos
mov
xchg
mov
mov
mov
inc
add
sbb
add
andb
js
sbb
inc
xchg
dec
push
dec
inc
xchg
mov
addb
sub
push
xorb
fbld
xor
clc
jecxz
ds
iret
repz
loop
xlat
inc
sbb
xor
mov
fstps
pop
stos
push
lods
xchg
sub
mov
mov
push
sub
or
lods
sbb
inc
sub
arpl
mov
or
cmp
int
mov
dec
roll
jns
sbb
push
mov
cmp
das
xchg
out
mov
aaa
mov
fisubrl
jnp
out
pop
push
idivb
add
xchg
adc
inc
mov
jp
adc
bound
xor
sarb
mov
pop
pop
es
pop
adc
out
push
lret
mov
xchg
arpl
insb
inc
inc
xchg
dec
lds
movsb
xchg
mov
or
stos
lahf
xchg
sub
dec
mov
lcall
into
mov
lret
call
addl
sbb
inc
cmp
inc
cmpsl
jecxz
cltd
jo
or
mov
shlb
mov
jo
stos
push
and
cmp
sbb
test
inc
push
test
xchg
stos
mov
xchg
lods
push
jl
mov
fchs
jge
adc
pop
fldenv
push
stos
out
imul
mov
sbb
lods
push
sub
into
in
jbe
mov
mov
ljmp
xchg
mov
lods
sub
shr
ds
clc
mov
test
gs
data16
pop
enter
icebp
jge
scas
push
lret
in
mov
fildl
lds
fwait
mov
outsl
inc
xchg
lret
sar
je
fdiv
add
jmp
xchg
xchg
cmp
addr16
inc
sub
dec
frstor
dec
add
pushl
sbb
mov
loopne
mov
movsl
xchg
sub
jnp
leave
shr
cmp
jns
dec
andb
enter
xorl
ljmp
push
jl
mov
sahf
das
xchg
stc
cli
cmp
adc
test
xor
lret
or
fwait
insl
xor
out
pop
scas
jb
sub
mov
lret
push
fistps
xchg
or
cmpsl
je
insb
ss
js
adc
mul
mov
mov
fwait
push
dec
mov
int
mov
inc
mov
inc
inc
push
lods
mov
xchg
jne
mov
inc
pop
lea
jae
sti
and
insb
imul
jno
hlt
add
xchg
sub
xchg
jmp
xchg
dec
mov
adc
cwtl
dec
and
mov
mov
test
iret
adc
push
mov
xchg
xor
sbb
test
lcall
mov
xchg
dec
mov
push
mov
sub
cmp
sub
cmc
sbb
neg
xchg
xchg
dec
xor
xor
cmp
or
cmp
adc
int3
xchg
dec
sti
jecxz
arpl
inc
cmp
dec
push
sub
inc
icebp
xchg
jp
mov
int
or
inc
jno
jnp
inc
mov
in
stos
vpunpckhwd
pop
fwait
push
dec
mov
xor
or
sub
movsl
clc
popf
in
into
sub
sub
sbb
mov
jns
jne
out
pop
mov
icebp
bound
jg
mov
mov
sbb
sub
scas
fsubrs
mov
popf
divl
or
jne
rorb
dec
cmpsl
pushl
leave
sbb
repz
jge
mov
lahf
in
stc
pop
outsl
xor
mov
mov
xchg
cmc
mov
push
in
movsl
movsl
dec
loop
and
pop
pop
shr
cli
mov
cwtl
iret
fbld
frstor
imul
cmc
cmp
rclb
xchg
repnz
pop
inc
inc
sbbl
or
sub
sarb
loopne
dec
lods
cmc
jae
and
fdivrs
push
push
cmovno
loop
add
or
sub
mov
add
ret
mov
push
or
aam
stos
inc
mov
mov
jno
push
sbb
xchg
stos
xchg
sbb
mov
lods
out
cmp
test
push
fneni(8087
mov
test
rcrl
adcb
int
aas
jae
dec
mov
sbb
stos
cmp
xor
cmpsl
fldt
push
xor
sbb
repz
xchg
jmp
pop
mov
outsl
adc
lahf
pop
adc
sbb
sbb
xor
fdivl
cwtl
push
loopne
into
testb
test
ljmp
xchg
inc
xchg
pop
mov
pop
frstor
jns
out
mov
lcall
mov
lahf
ret
jb
jb
scas
cmc
or
jecxz
bound
sbb
lret
xchg
fimuls
push
imul
add
pop
cld
loop
icebp
xlat
push
dec
orl
fstpt
lods
adc
and
mov
adc
into
test
cmp
push
fsubrl
lds
jb
sbb
push
negb
mov
mov
mov
inc
xchg
jmp
sbb
scas
shll
call
nop
push
mov
pop
loopne
cli
mov
fsub
insb
mov
mov
lahf
pop
adc
shll
iret
imul
pop
pop
xor
pushf
insb
cmp
pop
lods
ja
and
lret
xchg
mov
mov
andl
cwtl
and
ret
lcall
mov
xchg
stos
jbe
mov
mov
or
leave
nop
rcl
repz
inc
inc
sbb
sbb
lahf
leave
xchg
js
push
jmp
push
mov
inc
orl
fstpt
push
adc
dec
add
pop
jge
and
xchg
stos
push
pop
mov
mov
sub
and
lret
mov
adc
fistl
sub
mov
rcll
mov
push
mov
mov
fdivs
test
mov
std
aaa
mov
movsl
repz
pop
out
push
iret
inc
mov
fcomps
sti
sub
add
mov
sub
push
jo
jnp
fwait
repz
imul
pop
pop
xor
shll
jnp
push
dec
mov
xlat
addr16
sahf
lahf
push
fwait
push
mov
cwtl
idivb
pusha
pop
std
mov
test
add
push
jge
sbb
xorb
movsb
adc
movsl
mov
jg
add
push
imul
or
lret
jae
xor
dec
shl
ret
inc
add
xchg
jge
mov
inc
les
inc
and
stc
ret
dec
add
pop
jge
mov
pop
insb
ret
xchg
outsb
xchg
inc
add
adc
movsb
test
fxch
push
call
jle
xor
fnstsw
pop
sub
adc
mov
imul
hlt
popf
loop
call
pop
inc
flds
or
mov
fistps
mov
fidivrl
lds
lock
cltd
orb
mov
or
jp
fcmovnbe
fst
addr16
or
cmp
loope
fbld
lea
fbstp
pop
pushf
mov
fmuls
repnz
dec
cmp
and
jo
in
lret
mov
lds
xchg
mov
arpl
fmuls
cwtl
rcrb
mov
mov
and
scas
je
pop
adc
lret
mov
mov
sarb
xchg
nop
mov
shrb
or
movsl
icebp
jno
mov
test
mov
outsb
ret
adc
lock
inc
pop
lds
bound
popa
scas
mov
pop
or
mov
shlb
dec
mov
aad
shrl
stos
adc
stos
rcr
jno
mov
pop
inc
leave
cwtl
ret
in
mov
clc
daa
test
cmp
lock
xor
jecxz
ret
ret
adc
xlat
sarb
inc
jecxz,pt
insl
movsl
aam
cwtl
stos
mov
out
das
stos
and
xor
arpl
sbbl
jae
xchg
cmp
push
lret
cmpsl
pop
or
sbb
jnp
mov
nop
sbb
cwtl
fadds
push
ds
xor
cmpsl
ret
les
test
pop
std
jmp
xchg
cltd
mov
push
cmp
and
scas
jge
cmpb
mov
movsb
pop
in
pusha
mov
pop
repnz
in
mov
xor
add
push
popf
dec
enter
mov
imul
lock
dec
xorb
push
mov
bound
xchg
stos
pushf
jecxz
sbb
fnstsw
xor
lahf
mov
fimuls
push
sbb
sub
dec
xor
cmpsl
adc
mov
mov
repz
jns
mov
lahf
pop
jmp
repnz
arpl
cmp
sbb
repz
mov
mov
ret
aad
adc
jmp
adc
test
fldenv
scas
ljmp
mov
xchg
std
cmpsl
pop
or
roll
pop
scas
pop
or
pop
mov
sub
outsl
mov
insl
fsubp
pop
push
jno
movsb
jne
addl
sub
loop
add
in
enter
jp
inc
sahf
add
jnp
fsubs
jb
pop
rcrb
jmp
push
xchg
mov
fcoml
xchg
lahf
or
cmp
mov
adcb
pushl
arpl
fnstsw
andl
jb
adc
lahf
jmp
sbb
jno
mov
pop
leave
or
sub
data16
xor
jmp
in
iret
mov
sub
mov
adc
sbb
or
repz
mov
fwait
and
sub
jmp
mov
xor
lret
adc
sbb
movsl
pop
lret
inc
mov
rcrb
ds
mov
mov
sub
jecxz
out
test
xor
or
pop
mov
roll
arpl
mov
add
xchg
cwtl
xchg
or
insb
jl
and
and
icebp
leave
test
popf
or
adc
jmp
movsb
xorl
adc
mov
mov
adc
fisubs
scas
fisubl
lahf
in
push
addl
cmpb
mov
popf
cmp
or
daa
hlt
mov
rolb
mov
xchg
jmp
sbb
mov
into
xchg
sub
repz
mov
mov
mov
jmp
in
push
insl
lock
out
dec
sub
mov
sub
call
jae
stos
dec
mov
sub
clc
mov
popf
out
test
xchg
adc
int3
jecxz
mov
mov
xor
iret
pop
mov
repz
cmpsl
cs
vblendvps
xchg
into
adc
imul
lock
ret
test
inc
stos
jbe
clc
push
sbb
cwtl
pushf
ror
mov
mov
daa
mov
fdiv
dec
cmp
out
clc
pop
adc
or
les
adc
xchg
cmp
dec
lods
test
and
fs
pushf
scas
fisubl
inc
fwait
inc
mov
and
push
cmpsl
fisubs
jge
rcrl
pop
adc
dec
xchg
mov
cmp
mov
nop
pop
push
std
ja
and
fdivrl
jbe
adc
pop
mov
pop
jecxz
inc
xchg
mov
enter
jecxz
lea
mov
push
lea
push
stos
ret
lock
mov
fwait
push
mov
sahf
sbb
cld
mov
lahf
cmpsl
out
mov
popf
push
jns
fwait
shrb
mov
xor
lds
push
and
test
push
jae
cmpsl
repz
lods
jne
dec
xor
sbb
repnz
mov
fwait
sbb
scas
xchg
sbb
sbb
adc
push
pop
mov
repnz
inc
add
adc
mov
adc
and
inc
cmpsl
fisubs
xor
push
mov
mov
out
aad
mov
pop
pop
inc
test
mov
dec
call
insl
mov
cld
imull
add
pop
jecxz
icebp
ja
enter
into
ret
insl
adc
aas
add
fmull
bound
mov
cwtl
xlat
lods
nop
dec
out
mov
mov
push
fisubrs
shll
mov
and
fs
dec
jg
xchg
and
lds
divb
testl
ljmp
xor
adc
push
mov
sbb
scas
je
or
cmp
fwait
sbb
imul
dec
add
sbb
sub
outsb
cmp
pop
fsubrl
or
stos
lds
and
int
push
ret
xchg
mov
mov
sub
bound
gs
mov
pop
out
pusha
mov
shlb
mov
fisubs
mov
popf
neg
sbb
lds
push
dec
xchg
and
pop
or
aas
clc
lods
jp
lret
xchg
cmpb
jecxz
ret
insl
adc
fistpll
add
xorl
fmulp
imul
mov
pop
mov
jp
mov
sbb
ljmp
test
sub
adcb
jnp
lea
adcb
cs
ja
xor
enter
mov
or
fcmovbe
addb
mov
enter
js
inc
mov
sub
arpl
lret
push
mov
dec
dec
add
sbb
mov
push
dec
sub
xchg
inc
add
lcall
xchg
sbb
cmpsl
push
add
sub
repz
lods
adc
adc
fwait
les
xor
stos
mov
fisubs
mov
shrb
mov
stos
pop
addr16
pushf
iret
ljmp
fstpl
addl
inc
ret
out
push
dec
push
lahf
or
lahf
lret
mov
outsb
or
jecxz
mov
hlt
mov
adc
pop
jg
xor
stos
clc
out
shll
or
pop
mov
pop
imul
int
mov
daa
inc
xor
hlt
pop
jecxz
add
sub
mov
mov
sub
test
mov
lods
cld
popf
in
push
sbb
adc
int3
scas
hlt
mov
add
add
loop
dec
rol
cli
jo
add
add
mov
cwtl
jmp
mov
pop
xchg
inc
add
mov
pop
insl
inc
aam
mov
test
fnsave
sbb
out
js
dec
and
enter
lret
je
in
mov
aas
push
int3
mov
inc
push
mov
sbb
fnstenv
mov
loopne
cmpsl
fdivrs
out
mov
mov
adc
xor
push
js
test
clc
imul
lods
jl
dec
push
jo
jp
stc
jne
mov
rcr
inc
add
jmp
pop
or
jmp
and
mov
add
inc
shlb
dec
repz
inc
sbb
mov
pop
xor
aam
int3
scas
std
fwait
mov
adc
fwait
add
mov
inc
and
cmpb
dec
roll
pusha
sub
test
cmpsl
xchg
test
mov
pop
mov
lahf
inc
pop
iret
sbb
jb
xchg
cwtl
outsl
inc
push
dec
mov
out
sbb
xorb
lds
data16
fdivs
xor
hlt
dec
movsl
adc
adc
jmp
aam
stos
inc
adc
mov
stc
cwtl
out
mov
lock
or
push
mov
je
repz
lds
mov
xor
ret
inc
pop
dec
add
stos
rcrl
pop
in
mov
outsl
mov
shlb
clc
cmc
or
lea
arpl
mov
pusha
les
pop
or
fnstcw
jae
mov
addl
sub
fisubs
jge
xchg
xor
lahf
mov
dec
cmp
call
cli
cltd
jns
or
mov
js
aam
repnz
ret
out
cmpb
and
sar
push
xor
imul
xchg
sbb
jo
sub
test
movsb
jno
rorl
xchg
jnp
dec
sbb
xchg
mov
sahf
insl
mov
gs
and
push
mov
jne
movsl
cmc
mov
mov
test
ret
inc
mov
sbb
push
mov
sahf
pop
lahf
adcb
shrd
cmpsb
sub
div
mov
hlt
sbb
fst
leave
adc
call
jl
test
mov
jns
rcrl
pop
call
adc
pusha
inc
test
add
fnstcw
jecxz
andb
ljmp
pop
jl
arpl
mov
adc
enter
lods
in
push
fmuls
fisubl
insl
jmp
popf
sub
xorl
add
or
fwait
cmp
xor
stos
fsubs
gs
jmp
test
cmovg
inc
mov
rclb
sub
xor
divb
or
ljmp
sbb
mov
sbb
dec
pushf
sahf
rcr
jne
mov
pop
lods
fstps
fcompl
clc
clc
mov
cmc
lret
test
cltd
mov
jmp
in
cmpsl
inc
and
add
fsubl
mov
cwtl
sbb
mov
out
cli
mov
jne
mov
push
cmpl
add
sahf
xchg
enter
xchg
sbb
or
aam
add
repz
repnz
inc
adc
pop
jl
repz
mov
push
or
push
cmp
call
in
pushf
aad
jo
cs
xor
je
mov
or
pop
sub
mov
and
lcall
stos
fsubs
sub
sbb
mov
sub
mov
icebp
bound
jg
mov
mov
sbb
sub
scas
mov
mov
popf
divl
dec
pushf
sahf
rorl
lods
jne
rorb
adc
pushl
or
repz
jge
mov
lahf
in
stc
pop
in
xor
mov
aas
iret
jbe
gs
mov
push
in
movsl
movsl
inc
cmp
mov
push
pop
pop
sub
cli
mov
cwtl
fcmovnu
mov
frstor
imul
cmc
call
or
ret
push
inc
inc
sbbl
or
sub
sarb
rorb
pop
and
fdivrs
push
imul
mov
cld
loop
add
or
test
pusha
mov
push
ret
mov
push
or
aam
stos
inc
mov
mov
insl
mov
sbb
xchg
stos
xchg
sbb
mov
mov
cltd
add
dec
fneni(8087
mov
test
rcrl
cmpb
int
aas
dec
mov
mov
cmpsl
mov
push
xor
sbb
repz
xchg
test
dec
push
dec
sub
outsl
adc
lahf
pop
adc
sbb
sbb
xor
fidivrl
mov
into
testb
mov
lret
ljmp
xchg
inc
xchg
pop
mov
pop
frstor
jns
out
mov
lcall
mov
lahf
ret
jb
jb
scas
cmc
or
sbb
inc
add
lret
xchg
mov
fdivl
lock
scas
hlt
repz
xor
pop
cld
loop
icebp
xchg
push
dec
orl
fstpt
lods
adc
mov
shrb
xor
or
je
mov
xchg
cmc
jb
sbb
push
negb
xchg
inc
sub
cltd
inc
shl
mov
xchg
jmp
sbb
idivl
rclb
pop
push
loopne
cli
mov
pop
ret
insb
mov
mov
lahf
pop
adc
shl
dec
rorl
adc
pop
pop
xor
pushf
insb
cmp
pop
dec
ja
and
lret
xchg
mov
mov
andl
cwtl
xor
pop
push
inc
jae
mov
xchg
stos
jbe
mov
or
icebp
nop
rcl
mov
fs
sbb
sbb
lahf
leave
xchg
decl
push
adc
leave
xchg
mov
adc
inc
orl
fstpt
push
adc
dec
add
jge
and
test
dec
or
sbb
push
lret
mov
adc
fstl
sub
mov
int
ss
sti
popa
xchg
mov
push
mov
in
negl
mov
sub
call
and
mov
ret
pop
lahf
pop
push
iret
inc
mov
fcomps
pop
sub
add
mov
sub
shlb
xor
repz
imul
pop
pop
xor
shl
jnp
push
dec
out
xlat
addr16
sahf
lahf
push
fwait
push
cmpl
pusha
fdiv
std
mov
test
add
push
jge
sbb
jl
xorb
movsb
adc
movsl
mov
jg
sbb
push
imul
call
jae
xor
jno
bnd
inc
inc
add
xchg
mov
inc
les
rorb
ret
dec
add
pop
jge
mov
fisubrs
test
outsl
xchg
inc
add
adc
mov
push
call
jle
test
fnstsw
pop
sub
mov
xchg
mov
sahf
xchg
hlt
popf
decb
das
mov
fldenv
in
mov
mov
fistps
mov
cld
pop
enter
lock
cltd
orb
mov
call
mov
rcr
xlat
addr16
or
cld
jge
rorb
popf
out
arpl
sbbl
jae
pop
mov
lahf
popf
in
jns
or
and
dec
cmp
cmp
jo
in
fwait
mov
lds
xchg
mov
arpl
fadds
lret
cwtl
fcompl
arpl
call
je
or
cmp
repnz
mov
and
sbbl
jnp
test
dec
shrb
and
icebp
jno
mov
inc
andl
pop
jg
inc
pop
or
bound
popa
lods
mov
pop
or
mov
shlb
dec
mov
aad
stos
stos
adc
pop
stos
test
mov
dec
and
mov
mov
test
pop
mov
ja
jne
jp
add
in
sub
add
scas
inc
adcl
mov
dec
add
or
test
cmc
sbb
push
jb
sub
test
inc
pop
insl
jmp
inc
popa
inc
lock
sbb
xchg
arpl
inc
cmp
push
push
sub
inc
icebp
xchg
jp
mov
xchg
or
inc
jno
jnp
inc
mov
fwait
xchg
and
xor
call
fwait
imul
clc
outsl
mov
aam
imul
in
mov
mov
dec
mov
lea
jae
sti
and
insb
imul
jno
hlt
add
xchg
sub
jnp
bound
je
cmp
or
shrl
cmc
test
cmp
pop
stos
push
dec
jne
jp
add
in
sub
add
scas
inc
mov
jnp
jbe
mov
dec
or
or
test
cmc
sbb
sbb
bound
insl
jmp
inc
popa
inc
lock
sbb
xchg
dec
sti
icebp
inc
arpl
inc
cmp
push
push
sub
inc
icebp
xchg
jp
push
xchg
mov
popf
scas
inc
jno
jnp
inc
mov
in
stos
std
push
imul
mov
int
mov
mov
inc
or
lods
mov
pop
insl
inc
repz
jne
mov
dec
xchg
pop
lea
jae
sti
and
insb
imul
sbb
mov
dec
je
cmp
or
test
test
cmp
pop
cmpsl
and
jp
add
adc
pop
nop
cld
lods
sbb
pop
xchg
mov
sbb
mov
xchg
sub
adc
lods
or
test
cmc
sbb
sbb
bound
insl
jmp
dec
popa
inc
lock
sbb
xchg
xchg
dec
sti
iret
dec
arpl
inc
cmp
xchg
or
mov
sahf
out
hlt
jbe
adc
mov
xchg
cs
test
jnp
inc
mov
mov
add
xor
call
fwait
sub
push
mov
and
pop
inc
fwait
lret
in
mov
mov
or
cmp
icebp
fdivs
xor
mov
vpmuludq
rcrb
lea
cmp
popf
or
inc
push
mov
ret
or
sub
xor
daa
push
inc
or
inc
movsl
xchg
sub
pushf
ss
shrl
pushf
dec
and
pop
xchg
and
clc
adc
mov
fistps
add
ljmp
out
lret
cmpsl
xchg
push
xchg
cld
movsb
push
dec
mov
sbb
mov
pop
fsubrl
pop
mov
push
jb
xor
mov
xchg
xor
inc
xor
out
push
or
dec
mov
ds
sbb
mov
fwait
push
dec
mov
scas
push
mov
inc
push
mov
fcomp
mov
scas
lcall
cmpsl
ret
lcall
into
fidivs
int3
sbb
add
xchg
enter
int3
add
xorl
ja
aas
rclb
and
mov
and
addb
cmp
jno
mov
hlt
adc
cmp
mov
sub
pushf
scas
inc
loope
int3
cmp
inc
mov
inc
pusha
push
lods
or
xor
testl
mov
mov
bound
insl
jmp
enter
push
sbb
out
dec
sti
lods
or
inc
jo
cmp
push
sub
inc
icebp
xchg
jp
mov
out
or
inc
jno
jnp
inc
mov
in
stos
xchg
imul
xchg
mov
out
jne
dec
stos
jno
clc
ljmp
fs
mov
cmp
ja
jecxz
orl
dec
mov
inc
ljmp
xor
mov
aas
inc
inc
and
mov
xchg
cmp
adc
inc
mov
cmpb
or
inc
xor
ficoml
cmp
jp
inc
dec
dec
aaa
inc
ljmp
jp
lcall
jnp
lret
push
sub
lahf
xor
sbb
push
sub
int3
xchg
fcmove
mov
ds
lcall
xchg
stc
cli
pop
or
push
cmp
je
mov
cmp
test
ds
cmp
pop
push
push
stos
xor
bound
push
cmp
xor
mov
xor
mov
ss
cmp
sti
adc
mov
cli
jnp
inc
mov
adc
out
ds
push
rcrl
mov
mov
in
mov
jnp
inc
push
mov
lds
sbb
mov
pop
mov
or
mov
cmp
add
sbb
add
andb
js
sbb
jle
mov
imul
jnp
dec
jb
filds
and
mov
mov
test
add
repz
jnp
mov
pop
out
pushf
dec
jo
pop
xchg
inc
movsl
xchg
sub
pushf
ret
pop
jl
xor
dec
lret
mov
out
dec
repnz
xchg
dec
jb
fs
sub
cmc
sbb
hlt
loopne
sti
mov
xor
hlt
lea
xchg
xchg
cmp
pop
mov
cmp
ds
je
pushf
xchg
fsubl
in
mov
data16
xor
idivb
inc
bound
cld
or
shlb
jno
fcomp
mov
add
jae
lods
test
test
push
cmp
xor
mov
mov
fwait
push
xchg
cltd
cs
shlb
add
andb
js
sbb
lods
imul
mov
js
dec
hlt
xlat
sub
imul
and
in
cmp
push
scas
in
clc
add
jp
dec
push
xchg
inc
movsl
xchg
sub
ljmp
icebp
outsl
add
scas
push
inc
mov
imul
clc
lods
and
insl
jns
lock
lods
in
mov
dec
push
adc
mov
xchg
enter
xor
xor
or
es
xor
jecxz
add
jbe
test
mov
mov
pop
clc
jle
je
pusha
shrb
popl
xor
xchg
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
sarl
lods
test
bound
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
out
movsb
pop
jl
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
