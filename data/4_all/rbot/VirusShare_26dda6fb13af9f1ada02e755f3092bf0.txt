inc
ss
fs
fs
pusha
pop
xchg
cld
loop
ret
pop
mov
mov
inc
out
dec
adc
cmp
adc
loopne
lods
push
cld
xchg
push
pusha
fildl
cmc
mov
sub
mov
addr16
mov
into
xchg
dec
inc
adc
mov
and
fwait
xchg
bound
rolb
or
xchg
in
sub
test
fistl
xchg
lods
inc
enter
mov
imul
push
sarb
xor
jno
xchg
aas
xchg
cs
call
scas
and
int3
iret
imul
pop
pop
inc
xchg
shll
mov
jnp
dec
iret
cmp
dec
pop
lret
lods
aas
fcompl
inc
sahf
push
lea
test
lock
mov
xor
test
dec
sbb
cmp
fiaddl
pop
popa
out
cs
rclb
pop
mov
xor
mov
inc
cmp
jl
mov
mov
inc
dec
mov
xor
and
mov
out
fbld
call
xchg
das
lea
push
sbb
pop
or
add
fucomp
imul
movsl
cmpsl
data16
mov
mov
test
outsb
pop
mov
dec
sbb
inc
lret
or
jno
test
sbb
fisttpl
fistl
add
shlb
bound
bound
rcl
push
movsl
lret
test
inc
xor
cmp
bound
test
fldt
outsl
jmp
js
pop
xchg
lds
pop
mov
cmp
push
call
pusha
mov
loop
jge
xchg
or
cmc
or
in
aaa
pop
ss
bnd
add
mov
inc
test
jno
mov
sti
iret
out
rcll
and
inc
or
xchg
outsl
dec
pop
mov
mov
or
sbb
push
out
mov
ficoml
and
aas
pop
jmp
mov
inc
cltd
js
cld
and
daa
push
and
scas
mov
popf
jmp
or
sub
pop
jecxz
jl
into
push
pop
mov
xor
sub
sub
push
sbb
rcrb
xchg
dec
sbb
sub
lods
shrb
imul
clc
mov
aaa
clc
xchg
cmp
lods
cmc
pop
mov
das
ret
imul
mov
mov
lock
lods
data16
mov
add
xchg
stos
jecxz
popl
aad
pop
push
push
pop
rcll
fisttps
add
jge
sbb
aas
in
outsl
test
sub
outsl
jmp
lods
add
out
pop
adc
fstl
mov
enter
mov
out
cmp
push
aas
fcompl
movsb
fimull
mov
test
cld
inc
mov
call
sbb
in
addl
and
loopne
cmc
bound
mov
xor
ljmp
test
sarl
mov
dec
sbb
and
mov
jae
lcall
mov
pop
sbb
xchg
push
dec
lea
or
add
sub
ljmp
mov
in
adc
sbb
or
pop
rcrl
jecxz
cmc
lret
nop
push
mov
mov
jg
sub
pop
ficoms
ljmp
stos
xchg
out
sti
mov
in
xor
pop
pop
in
movb
es
pop
test
push
repz
xor
hlt
mov
xchg
punpcklwd
adcb
jnp
inc
nop
lret
xor
lahf
xor
jl
mov
ret
sbb
sbb
jg
stos
iret
mov
sub
mov
arpl
xchg
jmp
sub
push
pop
scas
int
out
aam
cmp
push
and
fstl
sbb
xor
dec
mov
or
mov
cs
sbb
or
mov
aam
mov
scas
pop
int
test
add
pop
lret
lret
push
sbb
push
mov
jge
es
loopne
cltd
or
movsb
mov
out
mov
adc
sbb
mov
decb
testl
pop
test
and
rcr
mov
aam
int3
fcomp
adc
mov
loop
cmpsl
data16
or
clc
pop
mov
jmp
imul
fs
pusha
imul
fs
sub
rcrl
xchg
mov
bound
pop
inc
sub
lret
pop
push
add
rclb
insb
sbb
add
clc
add
dec
imulb
jmp
daa
iret
jne
dec
in
xor
js
push
sbb
mov
pop
inc
push
cmpb
push
adc
shlb
and
push
xchg
xchg
cmp
adc
xchg
popa
or
popa
inc
fs
or
mov
cmp
pop
push
std
test
fwait
pop
stos
inc
mov
sbbl
icebp
and
dec
xor
inc
xor
jle
jne
fidivrs
jg
cmp
test
shlb
dec
jns
lahf
pop
stc
aad
inc
jp
movsl
loope
xor
jno
mov
les
xchg
xor
cmp
jl
fldenv
lods
cmpsl
imul
xchg
lret
jnp
stos
leave
orl
arpl
test
shl
push
aad
inc
cmp
push
fdivl
sti
cmp
out
xlat
adc
fdivl
pusha
fs
pop
cltd
popa
mov
or
fisubl
pushf
scas
fwait
pop
int
adc
gs
inc
or
push
adc
inc
mov
xor
cmpsl
add
inc
mov
and
push
push
jl
sar
pop
pop
shr
stc
pusha
push
jno
test
pop
nop
lea
clc
mov
xchg
ja
or
not
not
xchg
push
pop
jo
test
push
add
pop
add
add
nop
call
push
push
cmp
pop
pop
and
cmc
cmc
pop
xor
stc
push
xor
xor
pop
cmc
js
sub
je
push
test
pop
nop
add
jle
cmc
jb
push
add
pop
sub
and
cmc
push
cmp
pop
nop
and
cld
jno
shl
lea
add
sub
xor
push
jl
push
push
mov
pop
pop
pop
nop
cld
push
add
pop
jg
je
add
push
jno
push
add
pop
pop
test
push
push
add
pop
pop
or
test
cmc
clc
xor
add
sub
push
test
pop
cmc
not
not
push
push
pop
pop
cmc
clc
test
jne
jmp
push
cmp
pop
and
and
jo
cmp
cmc
push
cltd
pop
cmp
push
add
pop
loop
jecxz
add
push
jnp
out
lock
push
sub
pop
std
cld
jp
cmp
jg
push
mov
pop
cmp
push
pushl
xor
pop
pop
jno
mov
or
add
nop
cmc
stc
push
xchg
pop
push
pop
xchg
pop
xor
loop
jecxz
daa
dec
push
jmp
loop
adc
inc
push
push
push
push
inc
pop
pop
pop
pop
js
jle
push
clc
pop
test
push
push
pop
pop
push
cmp
pop
cld
add
dec
jne
push
sar
pop
push
and
pop
add
xor
je
push
call
sbb
dec
or
push
shll
mov
push
js
mov
jg
inc
js
outsl
jne
push
stc
mov
mov
lock
jbe
add
cmp
xchg
js
add
add
rorl
add
icebp
outsb
sub
sbb
mov
sub
mov
cvtdq2ps
xchg
ret
mov
lret
mov
pushf
mov
leave
xor
dec
cmp
mov
push
jbe
xor
sub
lock
xor
test
mov
mov
mov
jp
push
popa
mov
cld
push
sub
aad
jne
cmp
sub
mov
adc
dec
jmp
das
xchg
gs
std
sahf
ret
out
rcl
adc
test
mov
bound
push
sub
sahf
push
jnp
lods
jg
out
ss
and
or
popa
fcoms
mov
or
test
inc
daa
les
jp
addr16
mov
int3
loope
dec
shll
push
cwtl
xor
aad
fnsave
pop
ficoms
xor
cmpsl
inc
jnp
hlt
popa
fsts
or
ret
pop
jecxz
int
adc
lret
xchg
cmp
pop
std
inc
mov
cli
fcoms
inc
sub
and
int3
int3
sub
push
xchg
mov
enter
dec
or
sub
mov
lock
aad
gs
mov
pop
mov
mov
icebp
popf
jb
rcr
fcompl
cld
mov
adc
test
outsl
popf
and
imul
cmp
fsubs
cmpsb
xchg
pushl
sbb
mov
adc
pop
sbb
cld
lret
mov
sub
addl
jae
jmp
aas
out
js
rcr
xchg
popa
fcomps
fisttps
jno
lcall
shrb
dec
mov
call
xorl
adc
or
mov
lea
lret
adc
addl
test
insb
nop
mov
je
cmpsb
pop
push
test
push
insb
cmpsl
jle
shlb
bound
pop
push
mov
jmp
sub
or
data16
mov
sti
xor
iret
jmp
xchg
lods
or
dec
mov
stos
daa
xor
repz
push
outsl
ljmp
sub
dec
int
adc
jo
inc
dec
lret
stos
mov
mov
sbb
andb
ret
repnz
ss
mov
jbe
cmpsl
cmpsl
jge
mov
mov
mov
cmp
xchg
nop
mov
fcmove
jo
cmp
add
and
pop
mov
sbb
movsl
pop
call
xchg
pop
dec
or
dec
imul
xchg
push
nop
xchg
mov
jb
push
aad
xor
jl
int3
scas
mov
in
out
daa
ret
mov
ficoms
fdivrp
xor
lods
popa
aam
scas
movsl
push
add
mov
pop
jl
xchg
cmp
cmp
pop
sub
hlt
inc
jmp
jno
jbe
sub
je
push
ljmp
fildll
add
push
sbb
in
push
sbb
inc
jbe
shll
jp
andl
pop
mov
ret
test
clc
stc
daa
sahf
or
lret
cmp
adc
xchg
call
cmp
xor
je
lds
sub
jb
adc
inc
loop
sbb
sbb
js
rcrb
out
ficoms
mov
mov
bound
int
adc
push
xlat
mov
loopne
cmp
jmp
cmpsl
faddl
or
mov
jno
adc
bound
data16
leave
fdivrs
inc
mov
fucom
shlb
inc
mov
adc
mov
push
test
or
sub
sub
mov
gs
mov
jge
mov
inc
mov
in
jae
es
ret
mov
int3
mov
dec
jl
inc
addl
test
pop
xchg
pop
ret
fbstp
mulb
cmc
fistpl
loope
mov
dec
lock
repz
loop
lods
push
adc
aas
pop
rclb
push
jno
je
mov
imul
je
bound
sub
xchg
inc
fldt
lahf
xchg
dec
or
xor
push
lret
and
xchg
das
xor
test
adc
lret
inc
sbb
call
nop
inc
sub
sbb
adc
dec
add
xor
fstps
orl
or
fsts
cld
outsb
sbb
call
rol
adc
inc
das
enter
loope
sub
fadds
ss
add
cmp
mov
adc
sarl
jg
cltd
mov
lret
movsl
js
fcmovnu
out
dec
jg
push
xor
pop
jns
dec
loop
int
adc
shrl
movsb
cmpsb
scas
hlt
aaa
dec
jnp
pop
add
int
xor
mov
repnz
cmpsb
xor
lcall
pushf
fs
icebp
add
xchg
cld
dec
iret
sahf
in
and
rclb
add
sbb
je
cmpsl
xor
cltd
jns
out
add
add
ja
push
mov
pop
imul
loopne
and
sbb
push
xchg
pushf
xchg
mov
and
inc
pushf
push
enter
push
inc
cli
pop
mov
test
scas
sti
cwtl
or
popa
jno
mov
mov
xor
mov
mov
cmp
push
clc
xor
mov
shr
out
jecxz
sub
add
xchg
decl
cli
movsl
lea
pop
xor
sbb
dec
or
in
jnp
push
leave
ljmp
jae
sti
dec
lods
orl
adc
dec
nop
dec
pop
shrb
pop
jns
mov
gs
orl
daa
cmp
pop
repz
inc
jge
pop
popf
in
add
scas
xchg
dec
jb
sbb
pop
shrl
je
bound
cmp
ljmp
or
cmp
dec
mov
mov
xor
mov
stos
mov
xchg
jb
mov
mov
in
dec
and
clc
insb
inc
cmp
lods
sub
popa
pop
cmc
xor
cmc
popf
and
data16
in
rcll
js
je
sub
sub
test
inc
fsts
sbb
add
sbb
std
movsb
ljmp
in
sbb
mov
pop
ljmp
mov
popf
aas
push
mov
mov
dec
sbb
adc
lock
les
cmp
stos
dec
mov
test
cmp
mov
fwait
popa
repnz
mov
cmpsb
cmpsl
rorb
daa
insl
lods
das
xor
or
test
and
adc
scas
mov
mov
sbb
gs
fldt
or
rcll
outsb
add
xlat
scas
or
cmpsb
ffree
jp
push
ret
divl
fnsave
shlb
add
pop
mov
push
std
divb
cmpsl
outsb
mov
insl
or
iret
je
out
lret
sub
call
jns
xchg
sub
dec
fiadds
ret
pop
cmp
loopne
test
sarb
in
jg
mov
ficompl
pop
in
inc
ret
ds
into
test
aaa
cs
addr16
mov
cwtl
inc
xor
mov
jno
imul
mov
dec
cmp
add
mov
loopne
jecxz
add
xlat
mov
add
cwtl
add
jecxz
cmpsb
dec
shl
pop
imul
pop
mov
fists
mov
test
pop
stos
inc
mov
in
fnstenv
jl
xor
sbb
cmp
imulb
mov
ja
jecxz
testl
out
popf
cmp
lret
popa
or
or
xchg
loopne
lahf
xor
or
lock
mov
lcall
add
inc
add
cmp
mov
mov
pop
stos
push
stos
fwait
loope
pop
rcll
pop
nop
adc
rorb
or
jl
mov
cmpsl
push
inc
xor
js
and
out
rclb
cmp
push
add
xchg
push
lock
subb
fldcw
xchg
rcrb
add
jmp
pop
cmovae
in
mov
mov
out
repz
sbbb
iret
repnz
js
sbb
insb
jno
xchg
xor
push
jne
and
in
prefetch
cmc
adc
test
mov
sub
inc
mov
add
push
iret
jno
stos
imul
or
mov
imul
push
and
std
sub
sub
mov
gs
add
imul
add
lahf
jg
xchg
mov
pop
jo
cltd
pop
lds
jne
testl
xchg
push
out
aaa
fadd
popa
les
cmc
sub
cmp
cltd
aas
mov
sub
pusha
lds
mov
jl
data16
ret
or
or
adc
scas
stos
pop
in
loopne
das
and
pop
inc
jle
jnp
rclb
popl
add
or
jg
inc
xchg
pop
jl
std
ljmp
movsl
fadds
adc
out
andb
and
mov
adc
imul
pop
sarl
mov
xor
jnp
xor
les
pop
pop
or
out
cmp
mov
jp
imul
repnz
sbb
push
iret
mov
push
mov
test
gs
push
clc
jnp
iret
mov
loope
lock
mov
call
cmc
mov
push
cmpsb
pop
aas
pusha
inc
mov
mov
subb
dec
testb
mov
std
push
in
sti
and
inc
into
cmp
std
dec
lods
lret
out
mov
in
push
xchg
xor
jbe
inc
outsb
pop
pop
cld
add
sub
testb
pop
push
sarl
mov
call
scas
lret
add
pop
nop
repnz
pop
pushf
loop
dec
adc
shll
lock
mov
sbb
mov
add
int
movsb
cmc
mov
pushf
cmp
inc
adc
dec
xchg
clc
jp
out
xchg
orl
cmp
pop
or
add
leave
jmp
pop
sti
pop
push
lret
fildl
cmp
in
int
inc
push
add
xor
sub
mov
pop
xchg
jp
aam
stos
lret
pop
imul
daa
xor
push
pop
nop
adc
sahf
movb
jmp
or
xor
js
je
and
adc
mov
cli
subb
pop
in
jo
mov
popa
mov
mov
clc
cwtl
fldenv
popa
mov
add
lock
jns
das
push
dec
fsts
test
and
cmp
loopne
es
sar
cmp
jl
ds
mov
into
and
fildll
adc
mov
jo
ret
ja
mov
aas
aad
inc
add
mov
push
jb
loope
loop
outsb
lahf
adc
jge
sub
dec
in
jae
daa
adc
lcall
push
stos
and
inc
insb
outsb
fstpt
sbb
setg
add
imul
aas
lret
andl
bound
inc
push
ljmp
gs
enter
clc
mov
fwait
or
das
xor
adc
add
lret
mov
jmp
mov
mov
rcrb
lcall
addr16
lret
fisttpl
scas
iret
xchg
nop
cmpsl
pop
imul
jnp
shr
fisttps
push
in
clc
lret
sub
aad
jp
sbb
mov
mov
sbb
int
dec
pop
xchg
mov
aad
cmpsb
xchg
ja
dec
add
lock
add
cmpsb
sub
inc
mov
pop
jecxz
cmp
aas
inc
rcll
or
subb
and
xor
mov
cld
mov
ljmp
sbb
dec
adc
inc
sub
pop
mov
enter
jecxz
loop
fstpt
mov
or
out
inc
test
mov
dec
adc
cmp
xor
ss
dec
cmp
jge
cmp
sbb
leave
stos
adc
ror
pop
inc
adc
leave
xor
popa
clc
xor
and
add
mov
into
mov
cmpb
jecxz
lcall
sahf
or
adc
movsl
adc
stos
loopne
xchg
lret
ljmp
sub
jbe
push
xchg
jecxz
mov
jg
scas
adc
fcomps
fs
gs
fldt
pop
fs
fistpll
lret
xor
fstpl
xchg
inc
cmp
cmp
dec
mov
sahf
sbb
jo
faddl
xor
mov
jns
insl
test
fwait
scas
jnp
test
xor
cmc
xor
mov
movsl
mov
mov
imul
mov
aam
out
out
xor
repnz
adc
cmpsb
shll
xchg
aam
ds
sbbb
cmp
aam
shrl
xchg
jne
jne
dec
push
sbbb
das
mov
push
mov
mov
push
dec
jae
btc
sbb
out
sbbl
test
xchg
repnz
lret
cld
inc
xchg
ret
jb
xor
xor
mov
cli
mov
cmp
or
sbb
mov
aaa
stc
test
rcrl
mov
inc
adc
aaa
test
jl
ret
mov
adc
aaa
rclb
mov
leave
inc
jae
repz
or
jne
cli
sub
lcall
sbb
inc
mov
icebp
xchg
scas
pop
or
leave
es
in
xchg
lods
mov
xor
shll
notb
clc
mov
roll
pop
cmp
xchg
rolb
repz
je,pn
enter
xchg
outsb
dec
mov
sbb
xchg
mov
push
add
sub
out
popf
push
lock
sub
ja
les
add
out
mov
inc
xchg
cmpsb
clc
shl
cltd
hlt
or
mov
inc
push
scas
mov
shrb
xlat
xchg
cli
mov
in
fucomp
iret
addr16
push
mov
repz
divb
add
mov
add
mov
enter
scas
in
and
add
push
pushf
mov
arpl
andl
mov
or
push
dec
incl
adc
iret
sub
cmp
mov
dec
jo
xor
in
lea
dec
mov
xor
push
jbe
sub
cs
mov
orl
fs
xlat
das
jnp
cli
or
xor
jle
shll
push
xorb
jmp
push
fisubrs
sub
leave
mov
mov
es
icebp
adc
cwtl
adc
add
movsb
jl
mov
mov
je
mov
andb
fists
cmp
push
loop
xor
xor
jp
push
imul
faddl
addr16
mov
mov
mov
jecxz
and
pushf
xor
add
jne
pop
cltd
xor
cmpsl
popa
ret
cmp
or
mov
jle
cmpsb
fwait
pusha
pop
rclb
xor
in
jno
mov
cmpsb
fidivrl
xchg
repz
fisttpl
mov
and
lea
mov
lea
mov
inc
mulb
push
sub
daa
sub
jp
test
jmp
xor
outsl
div
sub
je
and
inc
test
sahf
cmp
push
fs
push
aam
push
dec
ljmp
jp
divb
xchg
xor
push
ds
pop
shlb
inc
fisubs
sahf
adc
mov
adcl
sub
mov
mov
or
lahf
lds
pop
ficoml
leave
mov
sub
test
and
fsts
xchg
jbe
or
filds
js
mov
push
dec
icebp
dec
sub
das
and
jne
or
pop
nop
push
mov
push
out
jg
stc
jnp
out
fisttpl
or
add
mov
ret
lods
jmp
cltd
or
mov
add
lods
popa
js
data16
stos
fs
pushaw
xchg
push
add
hlt
pushf
es
pop
mov
cwtl
push
js
shlb
fs
mov
push
push
and
int3
xchg
cmpsl
sbb
xchg
jl
lods
and
mov
imul
adc
mov
fdivs
sub
mov
lahf
popa
pop
jo
xlat
lods
xchg
sti
mov
xlat
inc
rcl
fdivrs
aaa
mov
loopne
inc
and
and
cmpsb
inc
aam
std
daa
fwait
lahf
les
lea
std
clc
insb
sarb
xor
mov
push
push
and
pushf
sarl
push
sbb
xor
xchg
jg
fisttpl
nop
test
xorl
repnz
mov
xor
push
dec
mov
xor
dec
jge
addr16
pop
lret
std
das
stc
in
mov
cmpsb
adc
mov
and
xchg
pop
test
add
add
sub
ss
jo
adc
rolb
bnd
sub
in
sti
les
xchg
cmpb
xchg
cmc
mov
es
xor
aam
cld
inc
sahf
movsb
adc
sub
ret
dec
xor
and
shrb
add
repz
repnz
test
int
aaa
test
scas
imul
lcall
sbb
loope
lret
pop
std
enter
repnz
out
push
out
pop
sub
fdivrs
cmc
int3
jge
mov
lahf
jmp
test
jp
mov
jmp
sbb
xor
fistl
fsubp
sbb
dec
cltd
popa
and
sbb
outsb
cmp
inc
cmpsb
cmpsl
pop
inc
cmp
pop
mov
dec
jg
pop
xchg
ljmp
imul
sub
xchg
sbb
and
add
imul
or
pushf
sbb
testb
cmpsl
cmp
sub
fdivl
push
cmp
sbb
sbb
sbb
fwait
ss
mov
fildl
cld
xchg
jo
test
pusha
xchg
and
or
mov
sbb
sbbb
aas
jne
jl
cli
out
mov
fs
es
jg
xchg
dec
lea
mov
out
or
sbb
aad
test
mov
mov
or
sarl
push
test
sbb
inc
movl
xor
iret
flds
enter
pop
cmp
fldt
push
dec
iret
js
fnstsw
ret
ljmp
pop
jge
mov
lret
mov
stc
push
cmc
andb
sbb
mov
cwtl
sbb
mov
out
sub
repz
cmp
jo
mov
cmp
jge
scas
xor
popf
fisttps
orb
ljmp
idivb
test
stos
mov
cwtl
mov
std
jp
push
sbb
stos
mov
cmpb
or
mov
sbb
ss
fwait
es
in
stos
testb
pop
fxch
shrl
int
pop
rcll
ja
bound
out
in
pop
push
aas
push
xchg
scas
int3
ds
out
int3
sahf
mov
adc
inc
pop
inc
daa
cmp
fnstcw
das
clc
or
scas
xor
adc
push
inc
in
xlat
dec
shlb
inc
add
add
outsb
jg
jp
and
stc
dec
cmp
incb
pop
shr
add
cld
xchg
dec
mov
push
gs
xchg
jge
popa
pop
push
call
out
mov
loopne
cmp
movsl
in
mov
in
mov
call
push
or
in
mov
adc
push
jp
xchg
scas
inc
cld
xchg
push
push
mov
xlat
xchg
aas
rclb
push
popf
in
xor
xchg
xchg
ficoml
mov
jno
mov
push
gs
std
or
cld
push
mov
lret
sub
loopne
or
out
mov
mov
dec
push
inc
mov
push
in
sahf
xchg
das
fs
inc
rcrb
xchg
lret
pop
stc
leave
gs
push
mov
mov
call
jae
test
sub
repz
scas
mov
lock
xchg
jp
xchg
sbb
xor
mov
movsl
cld
test
or
aas
icebp
ja
ret
jns
xlat
inc
xchg
outsb
popa
dec
fcomip
add
loope
pushf
push
das
les
xchg
lock
aas
outsl
inc
mov
flds
arpl
cmp
push
adc
pushf
andb
dec
push
mov
or
dec
std
add
or
xchg
stos
popf
fstpt
ficoml
fists
enter
mull
movsb
adc
scas
jno
push
dec
and
fs
icebp
int3
lret
popl
sbb
pop
in
xchg
inc
out
pop
cmp
insl
das
fimuls
lahf
xchg
xchg
sub
loope
or
rcr
testb
lods
adc
jp
push
adc
jo
mov
jl
lea
fs
dec
data16
sbb
scas
faddl
std
mov
out
mulb
test
in
int3
enter
mov
or
int3
jp
hlt
xor
or
fdivl
inc
push
sub
lock
js
icebp
or
test
scas
sub
adc
les
stos
xor
faddl
test
fildl
xchg
leave
pushf
inc
das
lahf
cld
sbb
pop
mov
cwtl
test
adc
sub
pusha
ret
or
ret
push
cmp
push
xor
je
jno
stos
sbb
data16
into
shrl
dec
aad
fsubrl
cmc
leave
out
inc
popa
mov
aas
ss
pop
push
pop
lret
cmp
into
mov
jle
cld
lea
push
cmp
dec
pop
fisubrs
cmp
sbb
mov
add
sbb
sbb
in
or
mov
bswap
pop
mov
or
js
pop
add
jno
popa
sti
shrl
xchg
adc
push
jne
adc
loopne
fldt
inc
push
aam
ja
in
stos
cld
push
mov
repnz
sub
sub
repz
stos
lock
lea
je
dec
dec
mov
dec
sub
and
cmp
xor
dec
mov
add
jnp
pusha
mov
clc
jp
fldenvs
xor
cmp
in
in
and
clc
mov
leave
nop
push
loopne
dec
mov
jecxz
cwtl
mov
jb
xchg
adc
jmp
outsb
xchg
xchg
fstpl
fbld
pop
test
aam
mov
jmpw
cltd
inc
pop
ss
dec
sbb
add
aas
aaa
imul
sarl
mov
sub
addr16
outsl
and
int
mov
and
cs
mov
inc
adcb
mov
cli
push
and
jbe
add
mov
rorb
adc
adc
xor
lods
cmp
cmp
sub
dec
js
jmp
loop
add
outsb
and
inc
inc
sub
out
cmp
test
lcall
rcrl
nop
sahf
fbstp
adc
dec
sub
cmp
xlat
and
jge
mov
jecxz
scas
xlat
push
ss
mov
mov
arpl
jge
mov
lea
cmpsl
test
shl
in
xor
sbb
int
xchg
sub
fsubrl
jnp,pn
mov
push
cmp
xchg
ret
fidivrl
push
push
cmc
mov
jb
push
adc
xchg
cmpsb
pop
cmp
rclb
aam
mov
sbb
bound
mov
mov
aas
dec
inc
mov
mov
mov
cmp
pop
jnp
dec
test
mov
aaa
mov
ja
insl
repz
les
push
stos
sbb
or
inc
mov
js
out
lock
and
mov
aam
jge
xorl
jp
sahf
mov
mov
idivb
out
xchg
aad
add
fbstp
xor
test
fwait
mov
add
xor
inc
cs
xor
cmc
iret
popl
inc
movsb
inc
iret
pop
cld
xchg
pop
or
addl
pop
loope
mov
inc
das
cmpsl
inc
les
push
in
push
jmp
sahf
dec
stos
mov
mov
sbb
push
xchg
cmp
sub
call
dec
sub
push
adc
jp
repnz
xor
ficompl
in
xlat
cmpsl
jbe
outsl
mov
fiadds
sbb
cs
outsb
xlat
xchg
in
in
sahf
cmpsl
pusha
add
fs
imul
cli
daa
jno
xchg
imul
mov
leave
fs
daa
cmp
jecxz
stc
jbe
lock
jne
hlt
inc
sub
pushf
repnz
pop
push
dec
mov
mov
ss
xor
mov
push
incl
cs
and
jle
xchg
inc
mov
shlb
out
mov
int
jne
int
insl
insb
lahf
or
loopne
andl
mov
flds
cmp
lock
fsubrs
pop
icebp
adc
sub
sub
fiadds
jnp
and
out
lods
mov
repz
sahf
imul
sbb
test
xlat
sub
out
inc
lds
in
mov
lcall
fsubl
fisttpl
fdivrl
cmp
in
out
lcall
push
mov
ret
lcall
push
cmc
or
sub
jle
pushf
aam
xor
lahf
imul
jl
in
shll
mov
xchg
adc
pusha
pop
shll
inc
sbb
lahf
jb
sti
dec
jno
aad
stos
das
add
jae
and
enter
inc
rolb
jae
jp
jge
jae
mov
fnstcw
jae
jb
cwtl
js
mov
mov
icebp
mov
inc
jecxz
negl
push
jo
mov
pop
push
aad
sbb
ja
cmp
addr16
lods
xor
xchg
add
jmp
pop
cmp
mov
xor
and
and
mov
enter
cmp
jp
das
and
aam
xor
aad
roll
cmp
sahf
mov
arpl
les
fadds
xchg
inc
aam
mov
jl
sub
int
jae
adc
enter
push
push
dec
pop
lods
jmp
outsb
pop
mov
mov
push
scas
ss
rcrb
xchg
lss
pop
test
dec
out
dec
jnp
or
test
in
js
pop
jno
inc
dec
jl
arpl
loope
jl
jo
hlt
add
push
ja
add
or
jl
inc
dec
lcallw
sahf
jns
pop
mov
into
push
fldl2t
dec
test
mov
push
out
and
inc
inc
imul
lret
cld
in
jl
mov
inc
sub
sub
pop
les
lock
lcall
loop
scas
push
inc
sahf
mov
sbb
scas
or
xchg
fiaddl
push
loope
std
add
xchg
rorb
mov
mov
das
popa
mov
and
loop
push
push
pop
int3
sti
xor
cmc
ds
sub
lock
inc
lret
lock
jg
cmc
mov
mov
rol
cmp
idivb
test
dec
mov
push
and
ja
xchg
in
push
clc
adc
inc
mov
shlb
out
aam
call
fwait
push
inc
inc
in
loope
prefetchw
or
mov
jne
in
mov
cltd
adc
jg
jp
push
iret
in
push
cmp
mov
xchg
std
cwtl
movsb
push
js
repnz
mov
inc
mov
push
dec
repz
vmread
aaa
jbe
in
lea
sbbb
addr16
push
cmp
xchg
das
negb
mov
push
fidivrl
xor
rolb
pop
pop
sbb
aas
fucomip
cmpsb
stos
jl
fmull
iret
xchg
mov
notb
xor
cwtl
fsub
sbb
jo
dec
repz
dec
jnp
sti
out
insb
xor
sbb
sbb
int
dec
arpl
mov
test
mov
add
jmp
adc
lcall
dec
jno,pt
cmpsl
sbb
cmp
scas
mov
fcompl
sbb
mov
shlb
sbb
int3
js
fbstp
pop
hlt
add
mov
or
out
cltd
decl
shld
aad
mov
shll
dec
jo
es
inc
leave
or
arpl
scas
push
xchg
repz
fdivs
xchg
inc
cmp
repnz
xchg
and
nop
scas
add
cltd
iret
fistps
mov
fsubs
cmovae
rep
aaa
nop
ljmp
mov
mov
test
rorl
ja
pop
xchg
dec
jge
sarl
mov
ja
cmpsb
inc
mov
xchg
rol
pop
insl
push
fcomip
fucomp
mul
sub
aad
dec
jl
stos
rcrb
addb
jl
popf
xchg
sub
ja
sbb
mov
cli
pop
add
mov
sbbl
imul
aam
sbb
fsubrl
ja
adcb
push
popa
fs
fsub
fs
std
cmp
mov
icebp
and
loope
in
xchg
loopne
dec
imul
shll
leave
inc
inc
mov
enter
pop
jecxz
lret
lret
jecxz
add
pop
and
cmp
sub
in
adc
mov
rclb
inc
jnp
lods
out
repz
dec
lret
lock
popa
pushf
call
jns
cld
sbb
mov
add
cmp
xor
loopne
out
lock
gs
sub
movsl
xchg
js
rcrl
mov
in
fstl
cwtl
sub
pop
pop
mov
sbbb
or
pop
in
inc
push
daa
test
push
sarb
mov
and
cmpsl
pop
sub
jne
mov
dec
jmp
divl
pushf
push
mov
cmp
mov
dec
adc
sbb
clc
ror
cmpsl
scas
jmp
adc
dec
sbb
aad
out
sub
mov
addr16
out
clc
mov
das
cmpsb
xor
jecxz
sbb
repnz
insb
es
add
and
inc
xchg
lods
stos
shrl
sti
push
and
repz
fistps
js
lahf
push
add
pop
nop
xchg
imul
or
call
mov
and
and
mov
dec
xor
in
xchg
out
xchg
inc
js
jno
inc
or
leave
es
das
adc
flds
out
mov
mov
xchg
repnz
lret
aad
mov
xchg
jge
mov
inc
jp
insl
push
out
leave
jp
je
inc
fisttpll
test
mov
rcrb
push
dec
mov
aas
cwtl
add
dec
sbb
cmp
mov
xor
cmp
push
sti
addb
mov
scas
pop
inc
inc
mov
mov
nop
adc
stos
int3
int3
xchg
repz
sti
lret
cld
cmp
mov
test
inc
push
insl
int3
or
cmp
call
fistpl
xorl
xor
xsha256
cmpsb
adc
icebp
pop
inc
xchg
and
add
jmp
mov
xor
sub
or
call
jg
in
push
in
push
test
out
add
mov
pop
loop
sub
jbe
repnz
sbb
or
dec
mov
or
push
push
sub
mov
loop
jo
push
mov
es
pop
pop
shr
sbb
lret
jae
xor
dec
lods
lea
lock
test
jecxz
adc
pop
outsb
xlat
or
pop
add
pusha
out
cli
js
dec
fcoml
jle
inc
mov
daa
cmpsl
add
jb
test
and
in
mov
bound
pop
lds
test
push
and
adc
mov
js
sbb
adc
addb
hlt
mov
xor
leave
pop
push
or
mov
loopne
negl
add
test
imul
sub
lahf
pop
push
add
cltd
inc
push
mov
fisttps
pop
xchg
shll
adc
and
inc
cmpsl
and
add
pop
xchg
mov
pop
movsb
lods
iret
mov
loopne
adc
mov
or
in
stos
xchg
mov
xor
dec
push
push
cmp
insl
jl
pop
pop
or
pop
stos
sub
inc
adc
inc
or
jnp
mov
mov
lahf
std
mov
push
adc
pop
es
fldt
lods
inc
lods
xor
push
js
js
jne
jno
mov
jl
icebp
shr
fldenv
jae
fstps
loopne
pop
cld
loope
in
push
pop
bsr
xor
rol
aad
sub
pop
cmpsb
mov
adc
fidivl
mov
push
out
inc
xchg
jbe
out
jmp
pop
cmc
adc
fdivl
aas
stos
stos
pop
into
fsubs
aam
push
les
push
mov
lock
sbb
out
lret
mul
les
movsb
or
iret
dec
push
pop
sbb
movb
push
shll
adc
adc
pop
pop
cmp
inc
lret
xor
sbb
ret
fwait
inc
adc
cld
dec
fs
mov
xchg
shrl
dec
or
jmp
sbb
roll
and
xchg
std
xchg
pushf
adc
pop
aas
outsb
sbb
les
hlt
xor
flds
dec
pop
sahf
imul
mov
repz
jns
sbb
adc
int
gs
jmp
ret
xchg
stc
add
push
leave
push
scas
push
scas
aas
enter
xchg
xchg
scas
add
mov
xor
les
aas
in
xchg
movsb
cld
pop
cwtl
lds
cmpsb
cwtl
clc
hlt
sbb
je
inc
ljmp
imul
pop
movsl
inc
test
push
cmp
xor
rol
inc
pop
call
pop
clc
adc
sub
in
or
or
shll
jg
daa
bnd
dec
adc
jne
cs
adcl
insl
icebp
bound
cmp
sti
dec
pcmpgtd
and
imul
add
gs
mov
in
mov
xchg
xchg
repz
push
inc
pop
sub
shrl
inc
jecxz
shl
and
mov
popf
repz
push
adc
push
pop
dec
js
ljmp
lods
adc
lret
inc
jl
adc
mov
add
sbb
mov
in
cmp
mov
repz
or
xchg
fcmovbe
adc
data16
fwait
jb
sbb
and
sub
mov
fiaddl
int
mov
call
in
scas
test
xchg
outsb
pop
scas
dec
cmc
sbbl
stos
lods
pop
cld
out
add
sbb
mov
inc
dec
push
je
dec
xorl
ljmp
out
jno
sub
repnz
into
gs
xchg
xor
pop
das
push
inc
sub
push
gs
es
pop
mov
lea
fdivs
xor
mov
in
xchg
cmp
xchg
jl
lret
adc
jno
mov
out
mov
mov
faddl
push
pop
pop
out
mov
xlat
jne
jp
fmuls
pcmpgtd
xor
in
lods
mov
fidivs
xor
cltd
ljmp
int
push
and
jmp
or
mov
ret
stos
imulb
sub
mov
lea
mov
lods
decl
icebp
push
rcll
aam
mov
es
dec
lds
stc
popf
jle
cmp
mov
arpl
clc
fidivs
or
add
lods
or
and
sahf
cli
adc
and
jl
pop
sub
insb
jno
pop
testl
cld
nop
sub
insb
fisubl
stos
jecxz
lods
iret
push
aas
leave
pop
insl
xor
loopne
push
stc
adc
lds
dec
cmpsb
shlb
shll
sahf
js
add
and
lock
mov
mov
pop
sqrtps
cmp
and
and
dec
scas
adc
les
mov
inc
aam
pusha
jge
xchg
dec
insb
popa
adc
dec
std
push
mov
stos
inc
outsl
test
mov
fisubrl
jp
mov
push
jns
cmpsl
call
add
sub
aad
fisttpl
fildll
test
sub
nopl
ret
xor
shll
aas
imul
lods
push
dec
pop
adc
lock
xor
fs
xlat
pop
and
stc
stc
push
jge
lahf
xchg
sub
lret
scas
dec
outsl
sbb
adc
outsl
rclb
repz
std
and
dec
ret
push
xor
xchg
ds
push
jle
lods
xor
pop
xchg
or
nop
pop
mov
or
jae
dec
cmp
mov
mov
sub
fxch
push
push
sbb
adc
outsb
orb
dec
rol
pop
dec
mov
sahf
test
sub
scas
xor
push
cmp
jo
movsb
out
aas
mov
cmp
sub
cld
cwtl
dec
outsb
pop
inc
push
xchg
subb
das
mov
shrb
idivl
ficompl
stos
xchg
roll
fwait
dec
inc
or
pop
sub
ja
mov
call
dec
call
aad
shrl
jb
xchg
pop
xchg
and
jns
xchg
aas
in
mull
xchg
inc
jb
ror
orb
jg
lods
rolb
pop
mov
enter
ja
fidivs
shrb
sub
cli
rcrl
bound
pop
xchg
xor
adc
scas
ja
or
jmp
in
in
cmp
inc
xchg
mov
sar
ss
sub
lcall
or
sbb
repz
xchg
lret
sahf
adc
dec
stc
fwait
mov
outsb
aas
sub
xor
fmulp
mov
push
int3
or
out
and
pop
add
mov
icebp
xchg
out
int3
lock
iret
pop
jnp
icebp
mov
push
and
mov
pop
mov
cmp
jnp
xchg
ss
test
mov
push
nop
adc
gs
into
mov
stos
mov
ror
pop
stos
test
mov
pop
and
es
icebp
les
inc
pop
xor
test
sahf
movsl
subl
push
shr
addr16
sahf
mov
pop
mov
xchg
adc
test
fsts
xchg
js
cwtl
aas
nop
cld
lods
rol
cli
shl
sub
jg
mov
jne
push
jb
push
nop
or
pop
ljmp
sbb
lods
adc
xchg
fs
in
popa
pop
jae
icebp
inc
xchg
mov
cmp
mov
mov
das
or
test
insl
cmpsb
cmp
jmp
mov
push
imul
push
jmp
sbb
jmp
xchg
xor
jle
adc
mov
je
fsubrs
inc
lea
inc
pop
sbb
int
jecxz
push
leave
lods
out
mov
sahf
dec
ret
inc
mov
or
stos
loope
jnp
push
adc
mov
mov
jge
das
dec
clc
insb
loope
push
xchg
jae
std
sahf
loop
jae
js
adc
xor
xor
out
dec
mov
call
pusha
push
dec
lret
lods
inc
aas
arpl
test
mov
xor
mov
imul
jo
pop
dec
jnp
pop
fldenv
sbb
and
add
pop
sbb
push
movsb
enter
mov
fcomps
xor
sub
or
pop
data16
dec
inc
jg
test
xchg
cmp
out
nop
ja
cmp
stc
mov
stos
inc
hlt
inc
xchg
ud2
popf
testb
mov
sub
rcrb
sahf
xor
sarl
inc
fldcw
xor
cmp
jae
inc
dec
xlat
ja
lret
popa
fwait
push
or
xchg
sbb
inc
adc
dec
xor
clc
icebp
out
lods
cs
adc
xor
test
mov
test
dec
sub
jno
div
outsb
sub
pop
ljmp
push
scas
ja
adc
adc
push
test
add
push
inc
pop
mov
xor
cmp
lret
cwtl
insb
sub
bound
sbb
movl
inc
jo
jle
in
jmp
pop
jnp
out
or
popa
jne
enter
mov
adc
ljmp
dec
ss
mov
lock
push
mov
sti
leave
sub
and
xor
jno
push
outsl
add
mov
jae
cmc
sub
add
jb
pop
push
lcall
or
loop
push
xchg
scas
test
jnp
and
icebp
mov
cld
sub
or
mov
loopne
pop
aaa
xor
fisubl
xadd
or
jecxz
lds
ja
arpl
mov
mov
popf
xchg
add
cmp
ds
and
xlat
popa
insb
xorb
js,pn
popa
inc
lods
mov
sar
arpl
cmp
lea
and
mov
les
mov
inc
out
out
cmp
inc
mov
xorl
add
push
jmp
dec
std
mov
sbb
test
orb
dec
in
pusha
bound
pop
mov
loop
sbb
jo
xchg
adc
mov
mov
xchg
cwtl
hlt
mov
int
nop
stos
outsb
add
sbb
xchg
xor
mov
loop
daa
pop
pop
icebp
jno,pt
jg
mov
mov
mov
pop
mov
jo
out
in
xchg
sub
shll
cmpsb
lods
sti
push
mov
jp
ret
daa
push
ret
stos
lret
jmp
pop
and
add
test
and
jmp
fimull
daa
div
xor
movb
das
sbb
mov
cmpsl
xor
scas
lods
mov
cld
push
insl
idivb
pushf
scas
movsl
popf
jbe
mov
push
xchg
xchg
adc
outsb
pop
shlb
daa
or
outsl
xchg
call
mov
fildl
sbb
sbb
push
pop
fcoml
mov
jo
int
cmp
jne
mov
scas
and
aad
mov
inc
sbb
pop
dec
les
mov
out
daa
je
xchg
and
mov
xchg
and
das
dec
push
mov
jo
and
mov
gs
dec
mov
and
clc
mov
fcomi
or
scas
sti
jnp
mov
xorb
lock
xchg
xor
add
ror
iret
inc
stc
push
pop
mov
xor
clc
mov
dec
and
mov
inc
je
xchg
stos
and
pop
dec
pop
jle
mov
dec
cs
ss
roll
aam
lods
fidivl
mov
add
test
es
outsb
inc
and
mov
daa
cpuid
paddsw
lcall
mov
sub
aaa
sbb
mov
bound
loop
iret
cli
jl
push
jg
xchg
scas
neg
sti
hlt
add
js
inc
lret
sub
pushf
aam
out
cmc
inc
mov
paddw
push
mov
insb
into
mov
js
mov
adc
push
adc
je
sub
gs
mov
push
and
lahf
dec
mov
xchg
sub
pushf
add
mov
inc
mov
xchg
pop
in
fucomi
jo
adc
sub
xor
pop
xchg
rorb
inc
and
mov
in
das
addb
test
push
push
mov
andl
mov
nop
pop
or
loope
and
insl
jo
sub
fwait
aas
arpl
data16
jnp
jecxz
aas
call
loop
cli
cmpsb
out
jo
clc
push
mov
jne
call
add
or
in
add
sbb
aas
mov
lock
cmp
mov
mov
xlat
fldcw
fucom
popf
jge
mov
adc
mov
aaa
mov
cmpsl
ss
je
push
mov
aam
jge
dec
pop
movsl
push
mov
shl
lcall
push
out
hlt
mov
cwtl
fs
cmpsb
in
add
adc
push
mov
out
and
and
out
jo
pop
fildl
mov
call
outsb
push
or
gs
ljmp
bound
adc
scas
add
movsb
daa
xchg
or
cli
addl
dec
negl
mov
cmp
pusha
test
cltd
push
inc
jle
pushf
mov
aam
inc
jle
inc
cld
dec
push
add
or
jno
out
and
shrl
pop
jmp
jbe
pusha
in
xchg
scas
fcoml
and
out
call
ds
pop
push
jno
outsb
subl
sti
outsb
pop
pop
enter
repz
cmp
or
jle
loope
in
rcrb
mov
addr16
or
out
cltd
pop
pop
call
int
lcall
jbe
and
mov
dec
xor
mov
fwait
imul
cmc
adc
mov
outsb
sbb
push
cmpsb
fdivrl
mov
and
ds
cmp
jge
repnz
icebp
shll
jb
fnsave
jno
and
xlat
fldcw
inc
mov
jl
mov
or
jno
sbb
jecxz
daa
push
pop
das
repnz
stos
xor
aas
fs
fnstsw
icebp
std
push
pop
pop
sub
push
icebp
xor
xchg
xchg
or
and
lea
fbstp
lea
mov
fstpl
jne
dec
push
out
cs
enter
lret
insl
pop
pushf
lock
lret
sub
and
dec
ds
mov
cwtl
or
aas
scas
insb
pop
pop
sbb
mov
xchg
or
aad
mov
fst
bound
push
xor
pop
xchg
cwtl
out
mov
pop
jo
loopne
int
sbb
pop
out
mov
cmpsb
push
mov
fucomi
sbb
sbb
or
nop
mov
mov
xor
inc
mov
imul
lret
sbb
jle
cld
sub
lahf
inc
pop
test
add
sbb
sahf
sbb
xor
test
loopne
inc
jmp
enter
out
jge
data16
sahf
dec
or
adc
mov
mov
mov
imul
dec
dec
or
mov
stos
dec
cmp
xchg
popa
xlat
mov
push
dec
stos
clc
push
jl
xor
mov
sub
xor
imul
lock
push
cmpsb
lods
lret
jle
cmpsb
cld
xchg
mov
rolb
mov
mov
fs
sub
movl
pop
stos
inc
push
pusha
xchg
inc
out
pop
ss
push
inc
cmp
adc
jmp
sbb
mov
or
xor
push
fs
lret
sub
dec
add
pop
call
push
mov
mov
notb
dec
fcoml
adc
mov
add
hlt
cmc
or
lea
and
or
pop
lahf
push
shlb
pop
std
pop
stc
rcr
xor
and
mov
std
adc
lret
mov
or
mov
push
loopne
inc
jae
inc
repz
xchg
mov
jecxz
lods
scas
and
mov
pop
pop
pusha
jp
pop
scas
imul
xchg
fbld
cmp
vucomiss
call
cmp
repz
fdivs
aam
jne
icebp
sbb
es
xchg
jp
xchg
lahf
pop
sti
nop
loope
add
movsb
arpl
outsb
pop
stos
dec
dec
lcall
and
sub
mov
sahf
xchg
or
fstpl
lret
or
cmp
lods
push
adc
fs
jmp
push
xor
mov
popf
aaa
and
ret
fld
mov
sub
jp
sbb
pop
sbb
xor
fdiv
mov
and
or
xchg
cwtl
dec
stos
mov
ret
sbb
mov
cmc
cltd
jae
pop
push
push
lock
mov
loope
mov
shlb
pop
in
xchg
add
jp
fwait
add
and
cmp
dec
shll
call
imul
pop
inc
lock
push
popa
push
adc
mov
int
insb
jns
push
xchg
cmp
xchg
popa
daa
push
and
push
shll
pop
push
out
push
sub
mov
les
les
xor
mov
fst
nop
loop
pop
xor
out
out
xchg
jle
xchg
loopew,pt
sub
rcll
push
addr16
in
sbb
stc
mov
fadds
cmp
xchg
aas
jo
insb
fstpl
incl
or
and
jo
test
sub
cmp
jno
fcomp
adc
dec
clc
scas
rol
pop
mov
sbb
mov
test
scas
sub
or
test
adc
cwtl
imul
shll
inc
inc
sar
add
jg
adc
nop
adc
loope
imulb
fidivl
lret
push
inc
cmp
lret
fucomip
jae
add
lea
mov
mov
lods
fstps
and
repnz
clc
ja
cli
dec
sbb
push
lea
shrl
decl
mov
outsb
cmp
jae
cmp
faddl
repz
lock
lea
mov
outsl
push
fidivl
ret
roll
hlt
and
int3
or
ret
inc
sti
adc
lock
repnz
push
dec
inc
adc
push
and
std
int
mov
nop
mov
fucomp
inc
mov
cltd
imul
and
or
cmp
lods
cmp
clc
push
loope
fcoms
out
call
adc
das
push
std
cmp
loop,pt
sub
pop
cmp
popf
lock
insl
popf
cltd
jl
call
addr16
and
rol
push
cmpsl
repnz
outsb
xor
mov
push
enter
out
call
pop
icebp
outsl
icebp
or
cltd
mov
adc
jbe
jno
rolb
mov
pop
push
push
shll
mov
xchg
outsl
cmp
clc
push
jb
in
aas
jg
cmc
test
pusha
mov
jb
or
insb
mov
add
mov
mov
inc
fisttps
inc
mov
add
and
out
dec
mov
mov
and
jns
stc
xchg
test
and
sbb
mov
ds
mov
mov
mov
aad
out
ret
xchg
sbb
pop
clc
sub
mov
fwait
sbb
mov
or
in
xor
shll
fcompl
inc
mov
bound
lret
xchg
pop
jb
scas
cwtl
mull
aas
daa
adcl
adc
daa
fs
cmp
int
stc
je
push
fs
out
movsb
out
push
dec
sub
lret
stos
in
iret
cmpsl
addr16
mov
mov
mov
shr
enter
mov
push
cmpsb
xor
adc
add
xchg
inc
pop
push
jae
rorl
out
dec
ret
repnz
mov
stos
movsb
stc
rorl
jl
test
jae
iret
sub
outsb
xor
sbb
aaa
adc
push
cmp
ret
fstpl
xor
cmp
adc
insl
lret
cli
in
inc
movsl
sub
mov
mul
pop
dec
push
push
subl
sti
or
inc
movsl
xchg
jle
jae
cmp
jg
popf
mov
sbb
lods
xor
jns
sub
lcall
movsb
insl
and
cmp
fisubl
movsb
fdivl
push
and
xor
jo
insb
push
in
or
fcoml
and
shlb
not
sub
hlt
or
pusha
frstor
push
xor
mov
in
or
sbb
pushf
into
jle
mov
sub
fsubs
mov
inc
jne
inc
and
or
aad
mov
sti
stos
frstor
and
xor
adc
repz
ds
dec
mov
add
scas
cmc
test
jge
movsb
dec
adc
shll
das
call
fisubrs
popf
sbb
fistl
aas
cmp
mov
jno
inc
in
ds
mov
enter
inc
and
inc
sbb
jle
sub
mov
lret
push
or
lods
cmp
push
outsb
sub
arpl
jmp
pusha
add
adc
cmp
scas
mov
movsb
cmp
push
cmc
adc
pushf
out
or
or
fmuls
or
push
clc
gs
cmp
rcll
lds
push
cmpsl
or
rorl
xor
sbb
lret
dec
mov
pushl
mov
adc
xor
mov
sbb
jle
sahf
mov
and
push
rclb
in
jnp
imul
mov
dec
xor
pop
insl
xchg
mov
jmp
cmp
testl
arpl
sarb
hlt
fs
and
inc
push
lock
jmp
mov
repz
loopne
in
fcomi
ljmp
das
into
out
out
cmp
xchg
in
add
stos
cmpsb
mov
jg
push
xorl
daa
jmp
les
inc
subb
pusha
and
dec
cld
mov
rep
inc
push
mov
pop
mov
cltd
ja
push
sbb
inc
jae
dec
pop
fs
fcomps
ret
ret
aad
mov
xchg
mov
sub
xor
sub
sub
push
sbb
push
cmp
cmp
hlt
iret
loop
xor
mov
imul
in
xor
adc
xchg
mov
lret
in
xchg
xchg
sahf
dec
fdivrl
fadds
or
push
sti
lods
sbb
push
dec
cltd
test
inc
push
in
push
and
loopne
hlt
push
lcall
push
repnz
mov
outsl
and
jne
inc
scas
scas
and
mov
xor
movsl
subb
cmp
add
fistps
pop
xchg
xchg
push
out
daa
and
xor
push
mov
inc
out
xchg
sbb
subl
xor
dec
stos
fstps
inc
jnp
aaa
sub
outsb
imul
rcrl
clc
jecxz
cwtl
xchg
enter
andb
sbb
cld
jle
xor
sub
dec
jmp
jle
sbb
cmp
data16
or
nop
mov
pop
add
xor
push
xchg
inc
inc
fbstp
hlt
bound
xor
sub
sbb
jae
jno
add
adc
nop
mov
bound
fcoms
jns
iret
mov
les
add
rorl
lret
lds
orb
mov
xor
push
jecxz
or
xchg
sbb
aas
mov
imul
adc
repz
push
push
pop
mov
sbb
add
push
jae
and
fcoms
or
sbb
mov
ficompl
bound
sbbl
jle
sub
push
jle
imul
push
xorb
mov
in
jl
leave
out
jge
andb
es
rcrb
clc
mov
rol
sub
js
cmp
mov
sub
mov
mov
shl
push
mov
leave
adc
or
fstl
or
mov
leave
lea
leave
fs
add
mov
inc
add
fiaddl
mov
out
stos
pop
dec
inc
add
pop
les
or
jbe
dec
adc
mov
xchg
aad
out
mov
lcall
je
test
mov
in
test
cs
icebp
mov
pop
fdivrp
fsubs
iret
out
dec
mov
mov
sbb
lret
sub
movsw
sti
sub
dec
push
aad
into
mov
hlt
mov
inc
jg
lret
xchg
out
fstpl
jecxz
sbb
fstpl
cmc
into
push
inc
mov
dec
iret
or
jns
dec
pop
add
ret
pusha
sbb
sti
test
shll
shll
xchg
icebp
or
std
leave
pop
xchg
mov
enter
ret
lret
cmc
iret
gs
xor
adc
ror
fnsave
loop
adc
stc
xchg
adc
lret
pop
push
scas
int
push
dec
ljmp
push
xor
pop
int
cmp
lahf
insb
cwtl
hlt
movsb
add
ret
in
clc
stc
sbb
loop
pushf
sbb
movsl
out
sub
xchg
xchg
data16
repnz
xchg
in
mov
push
and
jo
dec
loope
dec
and
cmpsl
or
push
dec
inc
mov
cmp
ret
int
mov
or
ror
or
sbb
push
push
pop
lock
mov
scas
cmp
pop
adc
adc
fiadds
xlat
and
negb
adc
push
push
ja
call
dec
push
pop
out
mulb
sub
push
dec
or
mov
testb
fldt
lret
int3
and
push
pushf
decb
sbb
or
inc
mov
mov
ss
pop
mov
into
dec
push
mov
mov
cld
iret
stos
inc
sbb
fwait
or
popf
mov
cmp
movsl
sarb
dec
push
xchg
ja
test
jns
insl
push
arpl
push
dec
inc
fistpl
pop
lea
in
cltd
cmp
dec
mov
xchg
stos
adc
pop
mov
lds
push
pcmpeqw
jle
xor
or
jo
addr16
lcall
jl
movsb
xlat
jne
mov
xchg
jo
int3
std
rorb
pop
rcrb
push
mov
rol
lret
sahf
ss
lret
frstor
outsb
and
adc
push
mov
sbb
dec
inc
popa
lods
lods
jmp
mov
cmp
or
mov
mov
or
and
push
loopne
xor
mov
out
and
add
fdivrs
shr
repnz
xchg
test
sti
jns
pop
arpl
pop
push
ja
adc
sub
fists
imull
inc
mov
or
in
add
iret
out
push
push
push
inc
scas
inc
imul
jno
cltd
pop
mov
shll
ret
add
ret
xchg
pusha
sahf
fldt
xchg
add
les
std
je
jg
cmc
mov
dec
push
movsb
outsl
cmp
jp
fistl
into
push
test
mov
or
pushw
or
subb
in
sbb
or
cmpsb
imul
xor
add
negl
push
into
daa
inc
pop
mov
call
adc
fsubrl
stos
rcrl
cmp
imul
out
test
and
inc
scas
ret
xchg
imul
loopne
add
ljmp
push
ljmp
sarb
and
shlb
data16
pop
outsl
loopne
dec
mov
test
and
enter
mov
int3
fisubs
call
dec
xchg
dec
aam
mov
gs
xor
lock
mov
andb
test
or
xor
test
xchg
mov
sub
jae
sbb
add
dec
cs
test
dec
mov
call
sub
dec
aam
popf
mov
int
fimull
inc
int
jp
sbb
sahf
insb
jb
sub
mov
mov
add
popf
insl
adc
jno
or
inc
sub
dec
or
fs
xchg
shl
scas
jno
inc
movsl
pop
jb
rcll
lret
scas
arpl
sbb
pushf
push
or
loopne
jl
xchg
cwtl
push
jle
push
sbb
and
ljmp
mov
pop
jle
shrl
inc
add
fnstenv
mov
ret
mov
js
inc
adc
insl
repz
pop
pop
add
lahf
xor
xor
jno
mov
adc
ljmp
out
jmp
iret
xor
fidivs
bound
mov
mov
dec
xorb
xor
sahf
mov
mov
mov
aaa
ficomps
xor
sub
out
enter
scas
add
mov
cli
cmp
inc
dec
cmc
addr16
xchg
lahf
imul
mov
das
out
mov
jno
ss
in
sahf
dec
inc
fs
jb
rcrb
ds
lahf
gs
fstp
xchg
or
int
fnstsw
aad
in
sti
push
xchg
xor
fwait
pop
je
insb
mov
jg
repnz
cli
mov
lcall
pop
stc
test
or
add
int
or
sub
loop
inc
fistpll
mov
outsl
xor
push
sbb
decl
inc
mov
jb
sar
ret
aaa
out
addl
ret
add
imul
aad
shl
pop
outsb
dec
push
mov
jecxz
xor
nop
stos
xor
cmpb
imul
sub
sbb
cmp
loope
insb
ljmp
je
cs
mul
rcr
jecxz
rcrb
push
data16
adc
and
loop
adc
imul
push
push
mov
push
mov
mov
xor
in
jbe
mov
xchg
add
fdivrl
fimull
imulb
mov
rorb
and
inc
sub
pop
mov
sbb
mov
bound
cld
in
out
jle
shll
fists
lea
sarl
fst
and
sbb
jl
cmp
lcall
mov
out
mov
pop
andb
das
xor
das
fs
jae
and
into
mov
stc
mov
cwtl
pop
jae
jg
adc
mov
add
or
jae
out
cmpsb
cmp
sbb
ficomps
in
incl
fcompl
adc
sbb
adc
rcr
mov
ss
mov
inc
mov
dec
test
lahf
jge
stc
inc
popf
mov
sbb
jb
loop
gs
and
loop
cmpsl
out
jns
mov
sbb
mov
shl
ficoms
pop
jge
dec
cmp
ja
fsubrl
out
adc
in
ljmp
outsb
adc
in
jmp
mov
test
pusha
and
jl
rolb
xor
cmp
popf
mov
je
popa
or
lret
xchg
ffreep
insl
or
push
mov
fldl
sub
lahf
pop
and
jp
inc
mov
lcall
adc
pop
push
daa
push
or
std
xchg
lods
adc
xor
adc
adc
adc
lahf
aad
mov
test
lds
addr16
arpl
sbb
je
call
sbb
mull
test
or
daa
aam
adc
cmp
jecxz
push
jnp
mov
cmpsl
popa
adc
and
fwait
je
xchg
ffreep
push
pop
nop
adc
dec
inc
xor
lea
inc
mov
mov
es
fisubl
xorl
mov
jno
add
or
adc
inc
jmp
ss
dec
cld
adc
cli
addl
rcrl
cmp
pop
imul
aas
jecxz
jne
mov
sub
xchg
cmpsb
or
and
je
aaa
neg
pop
xchg
push
sbb
lahf
inc
pop
out
and
das
fcoms
into
cmpsl
pop
jns
jnp
inc
imul
fidivrl
sbb
pop
mull
iret
mov
adc
jne
push
push
push
arpl
popa
insl
cmp
insl
inc
mov
stc
sbb
popf
cmp
negl
sub
scas
sub
movsb
loopne
lcall
ds
ds
ds
stos
mov
cltd
inc
subl
push
mov
imul
popf
pop
in
xchg
inc
xchg
fcompl
jo
sub
shll
and
jne
pop
lock
ficompl
xor
lcall
je
pop
add
scas
lcall
mov
inc
mov
das
call
rolb
pushf
inc
insl
push
jecxz
out
dec
pop
inc
mov
sti
add
sbb
loop
xor
mov
jmp
call
dec
scas
mov
xchg
test
mov
iret
inc
test
leave
mov
add
cli
sbb
mov
imul
sbbl
dec
shll
aad
sbb
in
sub
and
adc
rcll
xor
lea
lods
sub
push
pop
shl
out
setg
loope
ja
arpl
jp
dec
fsubp
das
pop
mov
dec
fstps
jo
pop
in
cmp
rorl
fprem
push
enter
cld
inc
pop
fldcw
ss
pushf
das
pushl
jmp
js
xchg
cmpsb
mov
mov
testb
punpcklwd
ljmp
mov
inc
es
sub
aad
dec
mov
insb
dec
pushf
das
sahf
movsb
nop
cmp
sub
dec
fcmovb
mov
aaa
dec
ret
clc
add
adc
scas
xorl
aaa
inc
dec
stc
cmp
idivb
int
test
xlat
cltd
divb
stos
negb
addr16
push
dec
out
ss
arpl
mov
jae
dec
fwait
fs
inc
jg
scas
pop
andl
sub
inc
out
sbb
xlat
ss
mov
pop
and
mov
inc
sbb
scas
lds
dec
jbe
popa
inc
adc
lock
dec
jo
mov
mov
mov
dec
mov
adc
scas
aad
push
pop
dec
cmpsb
pop
xchg
aaa
pushf
pop
sub
mov
call
jb
push
add
adc
mov
add
inc
inc
cmp
xor
push
mov
lret
sub
mov
pusha
cld
sbb
xchg
push
jge
mov
inc
sub
inc
ret
inc
out
mov
mov
ja
enter
jns
push
fsubrs
cld
push
mov
sbb
push
xchg
add
pushf
cwtl
int
xor
decb
sbb
lea
xchg
and
xor
lds
inc
test
jae
dec
popa
inc
mov
xchg
pop
movsl
sbb
movsl
mov
loopne
sbb
sbb
ja
aad
xchg
cmp
sbb
dec
mov
push
aas
pushl
xchg
xlat
testl
xchg
mov
sbb
and
nop
add
and
and
aaa
dec
mov
mov
cmp
mov
or
inc
enter
add
jno
mov
jge
pop
sbb
and
cltd
nop
mov
jnp
jge
cmc
jns
adc
enter
mov
addl
xchg
jecxz
lahf
aam
bound
and
adc
adc
loope
mov
icebp
adc
popf
fwait
or
mov
and
mov
mov
arpl
in
sub
jge
sbb
shlb
inc
push
mov
xchg
jb
repz
stos
mov
inc
sub
mov
jae
mov
pop
inc
pop
out
fs
and
and
cmpsb
test
cmp
subb
test
pop
mov
scas
shlb
mov
inc
push
sub
pusha
sbb
inc
dec
lcall
jne
cmp
cmp
add
stos
push
fdivs
in
adc
pushf
mov
add
pop
lret
jecxz
les
jge
mov
clc
out
inc
sub
sbb
dec
mov
roll
std
mov
sbb
mov
jb
mov
ljmp
scas
mov
loop
dec
inc
cld
lcall
ret
aaa
adc
gs
push
and
leave
mov
mov
repnz
sahf
fcomps
insb
insb
cld
cld
ret
ret
jmp
sub
and
push
jmp
sti
sub
negl
sbb
lret
xlat
mov
in
loop
ja
jbe,pn
push
sub
lea
outsb
mov
adc
ljmp
adc
mov
push
movsb
stos
adc
sbb
dec
insb
sub
adc
out
icebp
dec
rorb
lock
loope
popa
subb
sub
push
es
push
push
arpl
dec
cmp
dec
popf
push
lods
sub
jae
dec
lret
pop
cmp
mov
mov
gs
xor
pop
jl
call
rcrl
iret
icebp
push
xor
lock
xchg
push
popa
mov
pusha
add
xchg
mov
cld
and
adc
repnz
jae
push
iret
out
frstor
fisubrl
add
mov
ljmp
pusha
sub
and
push
rolb
lds
incl
loope
xor
lahf
mov
jno
dec
imul
xor
cmp
pop
jo
mov
cmp
push
lods
pop
test
hlt
cld
js
ja
aaa
ds
xor
cmp
pop
jbe
inc
rol
mov
lahf
mov
pop
mov
xchg
xchg
lods
dec
xor
icebp
sub
push
ljmp
or
push
dec
sub
out
icebp
icebp
arpl
ja
mov
test
jmp
loopne
insl
jnp
cmp
mov
mov
repz
mov
mov
inc
pop
add
aam
loop
pop
fwait
add
aad
inc
inc
xlat
sbb
cmpb
fcmovu
mov
outsb
sahf
stos
mov
inc
sti
xchg
jmp
aas
fisttps
add
faddl
add
pop
mov
in
xchg
insl
fists
aaa
adc
sub
cmc
sahf
in
xchg
mov
test
and
mov
jnp
fadds
inc
xorl
push
add
jge
es
sahf
arpl
out
fs
into
adc
outsb
leave
cmp
lahf
lods
mov
add
jl
dec
dec
cmp
xor
rolb
imulb
cmp
push
jle
stc
sub
jecxz
mov
shrb
inc
dec
outsb
xchg
enter
fbld
jbe
arpl
pushl
mov
iret
jo
mov
inc
mov
jno
test
or
xchg
stos
stc
mov
xor
push
mov
xor
jl
cmp
jge
sub
mov
sbb
jbe
scas
sbb
ret
sti
mov
xor
test
loop
test
or
cld
or
push
adc
lods
ds
and
jge
inc
mov
ja
and
sbb
lods
inc
out
inc
aad
xchg
data16
das
mov
xchg
scas
mov
sbb
icebp
mov
daa
leave
sub
sbb
movsl
pushf
cmc
pop
sarl
mov
inc
loope
xchg
and
xchg
mov
jge
out
aam
jmp
jmp
add
push
cmpsl
in
jl
and
push
inc
cmpsl
inc
ljmp
push
ljmp
in
mov
fsubrs
mov
notl
mov
into
add
mov
rcr
push
mov
ret
jbe
mov
and
mov
aaa
nop
mov
sbb
sub
dec
push
mov
push
jecxz
xchg
xchg
add
adc
scas
mov
jns
or
jbe
enter
xor
in
pop
mov
push
movsb
cmc
push
adc
cmp
mov
cmp
xchg
popf
neg
inc
negb
stos
aam
push
sub
ret
cltd
and
es
aas
jle
mov
jno
xor
rorb
cmpl
dec
xchg
je
in
add
mov
pushf
loop
and
push
jge
loopne
das
fwait
cld
arpl
fsub
cld
push
loopne
mov
inc
cltd
lahf
js
das
bound
test
mov
cli
in
jns
add
or
stc
or
ret
push
inc
xor
popa
inc
stos
ja
mov
popa
and
dec
xchg
mov
adc
push
insb
pop
hlt
cwtl
inc
xchg
insb
dec
mov
sub
movsb
cwtl
imul
aad
pop
mov
das
inc
jl
mov
jmp
inc
sbb
rcr
das
data16
or
fidivl
ret
jne
outsl
jecxz
leave
repnz
lret
int3
ds
jo
dec
sahf
lea
cld
fdivr
movb
lcall
xor
dec
and
lock
sbb
or
lea
scas
cmpsl
cs
sub
push
mov
sub
jl
push
out
xchg
mov
leave
sub
movsl
mov
ret
out
pop
jmp
jmp
in
pop
xor
stos
out
mov
pop
adc
cmp
je
cmpsb
hlt
xchg
xchg
sti
push
in
movl
out
lcall
scas
dec
inc
out
adc
mov
and
clc
xor
mov
popa
sti
sub
and
mov
jp
mov
pop
pop
mov
mov
cmp
ss
jg
jecxz
xor
in
jae
xchg
ret
jb
and
test
sub
jg
aas
xchg
scas
jae
inc
cmpsl
cltd
sbb
push
mov
lahf
icebp
leave
jg,pn
push
bound
jb
jmp
fmuls
or
cs
in
adc
andl
and
cld
push
adc
lods
loope
and
add
push
push
and
dec
es
cwtl
cmp
xchg
jne
pop
arpl
lahf
adc
or
lahf
faddp
inc
lea
movsb
inc
push
pusha
mov
lea
adc
loop
adc
icebp
dec
pop
icebp
mov
aam
jp
sub
cs
adc
sbb
adc
xor
cmp
dec
out
inc
or
add
xor
imul
inc
out
dec
stos
dec
outsl
fstl
ja
push
mov
repnz
mov
fwait
or
or
les
add
mov
pop
xchg
mov
inc
pop
dec
subb
hlt
jns
cltd
xlat
in
cwtl
and
shlb
jge
mov
adc
jb
adc
sub
push
ds
int
imul
pop
cld
cmp
fwait
add
mov
add
les
dec
jb
daa
call
loopne
loopne
rorb
imul
mov
or
inc
push
adc
push
fwait
test
fcmovu
mov
or
mov
bound
push
sub
xor
outsb
and
fwait
int
xchg
sub
xor
cld
movsb
push
fidivl
xor
push
cmp
or
push
ljmp
pusha
leave
incb
and
push
das
dec
push
test
and
jecxz
or
pop
ret
movsb
inc
pop
xchg
cmpsl
and
sbb
movsb
ljmp
xor
inc
lds
jecxz
sub
pop
jg
add
xchg
or
nop
xor
lret
jge
and
sahf
xor
fs
out
loop
out
xor
aaa
jg
imul
lcall
es
inc
sub
ret
cmp
cmpsb
cmpsb
xchg
fs
scas
or
data16
and
add
pop
int3
adc
cmp
outsb
and
jle
stc
xorb
add
daa
push
fxch
shll
icebp
dec
cmp
pop
mov
add
mov
out
mov
xor
sbb
mov
imulb
iret
pushw
pop
sub
popf
data16
lret
push
mov
pusha
in
or
push
jo
lret
cld
and
sbb
and
jg
pop
lock
push
sbb
les
lea
inc
aam
push
push
xchg
mov
add
push
pop
out
mov
idiv
cli
mov
nop
xchg
sbb
xlat
out
pop
ret
dec
insb
push
out
xchg
pop
test
and
sbb
lds
aaa
xor
mov
dec
stos
iret
mov
jo
adc
mov
je
or
icebp
fidivl
jl
out
rol
pop
aam
cmp
xor
pop
scas
rclb
ljmp
mov
adc
loopne
aad
rcrb
xor
dec
mov
jnp
sub
jecxz
test
call
mov
push
fwait
repnz
ret
cmpsl
push
ds
mov
mov
test
clc
or
lret
fadd
adcl
cmp
dec
out
sti
and
test
mov
or
stos
mov
dec
out
xchg
push
fiaddl
inc
mov
pop
xchg
shll
inc
test
mov
out
jbe
insl
popf
fcmovne
jb
test
xchg
xlat
into
jmp
jns
mov
cld
std
out
fwait
sub
mov
mov
gs
lods
rol
mov
cmp
sub
push
iret
test
jp
xorl
jge
cs
dec
xchg
adc
jp
and
or
dec
lea
xchg
mov
or
shl
inc
jmp
or
cld
repz
inc
rol
add
fsubs
xchg
adc
inc
pop
mov
idivb
xor
jmp
rorl
daa
int
inc
fwait
andb
push
aad
jge
jmp
mov
push
lds
dec
imul
insb
cwtl
jp
idivb
push
shl
mov
jne
jbe
jle
aas
test
leave
push
sahf
outsl
pushf
ret
xchg
aam
int
pop
rcrb
aam
inc
jl
or
ret
jb
lahf
pop
mov
dec
jge
cwtl
inc
mov
fistl
das
pop
and
mov
adc
cltd
movsb
lods
push
add
mov
sahf
mov
rcrl
test
iret
pop
and
fadds
jle
push
dec
neg
in
mov
loopne
imul
mov
addr16
jl
je
push
jne
ja
xchg
fisubrl
pusha
lods
jo
jbe
into
add
in
sbb
mov
roll
mov
bound
stos
ret
fadds
adc
int
mov
lock
push
inc
movsb
jg
dec
outsl
add
inc
xor
ret
lods
jnp
ret
inc
insl
jmp
js
rcll
push
and
shll
dec
and
push
mov
adc
jae
dec
dec
cmp
jae
inc
repz
scas
and
stos
pop
push
mov
fidivrs
rclb
jo
stos
and
mov
sbb
test
stos
es
mov
cmp
sub
lret
mov
xchg
or
test
pop
or
push
hlt
andb
adc
cwtl
mov
adc
mov
out
stos
inc
add
sub
jge
xchg
or
ja
sbb
adc
mul
inc
xor
xlat
jbe
pop
xchg
iret
jp
pop
push
int3
and
in
jne
outsb
nop
mov
sbb
jp
xchg
repz
mov
fistpl
cmpsl
fdivs
inc
ljmp
out
aad
pop
fildl
popf
pop
push
push
iret
and
pop
mov
pop
leave
sbb
sub
mov
dec
sbb
fs
movsl
adc
in
ret
cltd
inc
inc
add
adc
sub
mov
xchg
in
lea
mov
mov
push
pop
shlb
dec
and
scas
sub
and
push
shr
xor
xor
pop
fbstp
pop
mov
insl
mov
fiaddl
das
pop
mov
std
stos
push
push
push
out
and
sub
aam
sub
leave
and
xor
addb
stc
mov
push
pop
pop
inc
mov
xchg
jl
in
mov
sub
das
pusha
mov
lahf
mov
in
ljmp
pop
pop
and
popa
lret
jnp
jbe,pt
mov
das
enter
sub
jl
stos
mov
clc
pusha
lcall
push
xchg
xchg
mull
sbb
hlt
ljmp
mov
xor
iret
cmc
cmc
fs
or
int3
sbb
repnz
dec
jmp
xchg
pop
and
cmpsl
pusha
fs
jb
cs
sub
fisubs
sti
testb
mov
popa
mov
pop
push
jmp
add
or
xor
push
out
push
cmp
sbb
cltd
xor
ds
push
sub
bound
mov
or
xchg
jo
pop
das
xor
xchg
mov
jg
xchg
in
mov
mov
xor
andb
sub
cltd
loopne
mov
movsb
addr16
jo
shrl
xchg
or
int
inc
outsb
in
xchg
jne
sahf
sbb
aas
pop
adc
fldenv
xchg
push
mov
lret
test
js
cmpsl
aaa
and
sbb
cld
adcl
inc
out
mov
xchg
adc
fwait
xchg
jae
and
lret
sti
or
add
test
lahf
out
imul
outsl
loopne
add
popf
xchg
adc
fs
mov
jp
out
xchg
loop
out
adc
and
push
and
add
mov
inc
xchg
and
push
pop
xor
out
or
xorb
jb
repz
or
push
cmp
adc
es
pop
sbb
es
mov
outsl
lret
xchg
inc
mov
adc
cli
sub
lret
adc
and
stos
sbb
adcb
in
xchg
icebp
lret
mov
xlat
je
dec
loope
dec
enter
repnz
or
add
adc
repz
fiadds
mov
clc
sub
add
popa
jg
xlat
dec
repnz
adc
fistl
dec
push
lock
or
push
push
call
and
ja
xor
enter
mov
into
mov
push
addb
and
ss
inc
xor
push
jge
adc
adc
inc
pusha
ja
jnp
xchg
and
sub
pop
dec
test
push
inc
adc
and
inc
dec
loope
outsb
mov
sbb
out
push
jnp
mov
jle
cltd
cs
xor
outsl
xor
bound
pop
dec
fstl
clc
fisttps
push
xchg
jne
xor
sbb
jmp
mov
mov
mov
adc
dec
bound
stc
scas
and
rcll
and
lods
dec
pop
ljmp
xchg
xchg
imul
and
pop
mov
punpckhbw
out
pusha
and
ficomps
or
sbb
into
xor
mov
inc
scas
mov
aas
shr
cli
mov
test
insb
dec
and
mov
cwtl
les
into
add
loop
add
inc
ss
mov
mov
jge
lret
cmp
clc
sbbb
xchg
cmp
jne
scas
push
cmc
xchg
in
push
pop
sbb
clc
daa
mov
push
mov
sub
inc
xchg
sbb
xchg
xor
sbb
mov
sub
xor
mov
mov
data16
xchg
lock
adc
adc
cmp
jne
pop
nop
add
aad
mov
and
push
out
push
lods
push
jp
fwait
xchg
movsb
popa
push
and
push
outsb
repz
mov
inc
jbe
cmp
adc
aas
bound
dec
adc
jl
mov
repz
loope
test
and
loop
sbb
ret
pusha
insb
scas
or
and
in
ja
mov
rcl
mov
cmpl
gs
adc
mov
sbb
repnz
push
aad
dec
pop
adc
dec
add
repnz
jge
popa
xchg
cmp
fistl
daa
fdivrs
sub
adc
cltd
movb
mov
fucomi
inc
and
sub
jmp
mov
push
sbb
test
mov
adc
inc
xor
in
mov
fcompl
mov
int3
mov
movsb
pop
dec
mov
adc
loopne
jle
push
or
insb
jle
pop
inc
mov
push
and
mov
test
cltd
cmp
shrb
or
call
and
push
mov
sbb
add
pop
loopne,pt
xchg
mov
cmp
leave
dec
pop
inc
push
sbb
pop
mov
dec
jp
sub
add
popf
jnp
mov
je
mov
aas
adc
mov
cwtl
test
idivb
pop
sbb
mov
inc
int
int3
clc
push
jp
addl
out
adc
jbe
xor
imul
idivl
fs
pop
xchg
lods
xor
pop
roll
push
push
addr16
bound
inc
mov
mov
pop
pop
enter
and
out
cmp
stos
std
dec
loopne
push
movsl
lret
sub
out
fnstenv
xor
rcrl
cmp
mov
repnz
cmp
sar
sti
out
stos
das
lock
in
scas
fnstenv
xor
jne
push
push
adc
std
bound
jg
pop
add
ja
sti
add
faddl
arpl
jl
mov
xor
push
leave
cmc
mov
and
test
sbb
or
mov
fisubs
pop
lcall
lret
cmpsb
shrl
das
and
and
push
and
sbb
jp
push
insb
shl
jp
sub
pmuludq
arpl
fildl
pop
push
cmp
mov
pop
aaa
xchg
push
sti
inc
push
or
push
inc
mov
rcll
loopne
mov
xchg
xchg
je
std
es
jns
and
addr16
sub
pop
jle
les
cmp
push
bnd
lret
scas
ja
push
lahf
add
push
ret
cmp
pop
xchg
mov
mov
lods
imul
daa
gs
mov
scas
cli
sbb
pop
xchg
mov
push
mov
stc
xor
jp
add
outsb
stos
in
hlt
arpl
jg
and
add
mov
mov
mov
nop
sub
xor
mov
int3
cmp
xlat
and
mov
push
outsb
call
adc
pop
jp
jp
jb
inc
push
mov
lahf
sub
xorb
pop
inc
jno
cwtl
or
xchg
call
fsubrl
imul
scas
xor
add
or
inc
adc
cltd
push
dec
bound
fldenv
testl
jg
inc
scas
mov
out
mov
shrl
decb
dec
aaa
call
popa
jae
push
dec
push
int3
sbb
loopne
mov
adc
ficoml
mov
xchg
cmpsl
ja
xchg
in
popa
jno
ljmp
mov
jne
mov
out
out
stc
lcall
cmpsl
adc
pop
call
xlat
push
mov
inc
icebp
sub
push
cmp
mov
xor
mov
xchg
mov
in
int
sbb
pushf
xchg
mov
aam
adc
dec
fst
pop
stos
pop
cmp
cmpsl
movsl
aad
sbb
clc
fadd
imul
mov
shl
mov
xor
js
loopne
test
jmp
sti
push
jmp
adc
push
aaa
in
test
mov
lret
icebp
ret
adc
or
jecxz
mov
pop
testb
jecxz
enter
mov
push
leave
mov
enter
pop
adc
shll
add
lods
adc
xlat
dec
pop
dec
fs
inc
lds
roll
mov
xlat
outsl
dec
xchg
sbb
adc
pop
sbb
mov
sahf
push
xchg
fstpt
pusha
sarl
js
or
mov
imul
out
popa
mov
inc
fwait
fwait
sub
aad
dec
inc
call
bnd
adc
sbb
pop
aas
cld
mov
or
pop
cld
or
out
out
aad
pop
fcomps
fmul
xchg
fistpl
cltd
mov
je
loop
ds
or
xchg
or
mov
sub
loopne
fildll
inc
cmpb
pop
jle
mov
sbbb
push
jge
addr16
sub
insl
mov
add
cmp
fstl
arpl
fcoms
pop
adc
sub
push
fcompl
movsl
jl
xlat
bound
ret
and
test
sub
ror
sbb
xchg
repz
and
and
adcb
int
push
arpl
mov
or
lcall
pop
xor
and
xchg
mov
pop
sbb
mov
xchg
adc
adc
cmp
sub
lods
adc
xor
test
sbb
pushf
sarb
fistps
pop
jb
outsb
cmp
das
adc
jle
jle
mov
out
jae
pop
movsl
movsb
iret
mov
xor
push
dec
outsl
stc
pop
out
xchg
dec
xchg
mov
xchg
jne
adc
mov
mov
mov
xlat
lods
mov
pop
xchg
sbb
jne
pop
outsl
fwait
outsb
lds
lret
jg
xlat
fnstcw
pop
sbb
mov
add
stc
stc
inc
xor
or
scas
and
or
push
rcll
push
sub
dec
loop
out
cmp
test
pop
push
mov
into
adc
std
dec
addr16
xchg
xchg
jmp
into
es
mov
add
andb
lret
push
repz
cmp
push
mov
sarl
idivl
mov
dec
sub
xchg
lods
fimull
push
push
imul
inc
std
adc
scas
sub
aaa
ja
inc
dec
fsubs
mov
push
inc
xorl
inc
jg
adc
push
push
imul
xchg
push
or
popf
cwtl
hlt
data16
fimull
gs
jmp
sbb
pop
cmp
dec
fbstp
jl
dec
mov
aam
shr
push
xchg
ljmp
cld
push
aam
inc
dec
sarl
xor
js
out
sbb
out
mov
stc
popf
lcall
bswap
pop
adcb
das
cmp
hlt
scas
data16
or
inc
mov
push
jp
ljmp
sbb
mov
adc
mov
sub
push
xor
sub
leave
jo
int
jns
test
loopne
in
inc
jno
in
int
add
push
sub
inc
stc
xor
sbb
aam
fwait
popf
testl
shll
and
or
pop
cmp
jo
pop
rol
iret
clc
add
jge
push
jnp
mov
push
push
jl
hlt
cmp
incb
or
cmp
js
fisttpll
or
movsl
es
enter
jae
call
mov
mov
scas
cwtl
dec
negl
and
lods
pop
sbb
mov
mov
xor
scas
inc
sarb
rcrl
mov
jb
roll
scas
dec
jns
xor
mov
and
in
pop
pop
loopne
sbb
in
add
pushf
mov
sbb
cmp
cld
lret
or
pusha
pop
jge
push
inc
lea
fdivl
mov
push
cwtl
loope
in
xchg
dec
gs
sub
ljmp
cld
pop
std
insb
xlat
xchg
pop
mov
and
cmp
in
push
dec
dec
mov
shrl
rorl
adc
aad
inc
out
mov
addr16
fbstp
aam
mov
mov
inc
dec
lea
pushf
lret
sbb
aam
xorb
xchg
in
push
and
andb
ds
mov
and
fisttps
xchg
inc
push
fldl
sti
inc
aad
pop
pop
out
cwtl
dec
sub
and
in
test
lret
scas
cltd
xchg
sub
lret
pop
ffreep
and
ret
mov
mov
jmp
mov
fstps
rorl
inc
dec
jle
adc
leave
sbb
mov
call
jp
lret
movsl
push
push
pop
mov
mov
sub
iret
dec
add
orb
dec
cmp
adc
inc
out
push
mov
cmpsb
jbe
add
xchg
stos
xor
leave
xchg
xor
cmp
cmp
add
push
mov
lcall
xchg
adc
nop
dec
sti
sbbl
mov
pop
push
add
push
dec
es
push
arpl
xchg
test
xchg
mov
or
lret
jle
sbb
lock
jno
xchg
insl
cmp
aad
dec
ret
add
pop
xchg
popl
movsb
xlat
adc
and
inc
fwait
ret
xchg
testb
std
es
cmp
xchg
dec
inc
jmp
leave
shrl
lock
arpl
bound
loopne
fcoms
or
repz
adc
inc
sub
xchg
mov
je
fistpl
lret
jbe
inc
jo
stc
ret
jmp
xor
leave
inc
add
sbb
sbb
or
mov
jge
pop
iret
in
cmpl
cltd
dec
lcall
shll
add
and
jb
sbb
mov
mov
cwtl
add
inc
subl
jp
loope
loope
dec
arpl
mov
mov
xchg
outsb
jno
pop
push
cmpsl
imul
xchg
pop
sub
int
test
in
add
ds
inc
xchg
sbb
sbb
iret
or
add
pop
rclb
gs
rorb
ret
push
mov
pop
lods
test
test
out
mov
sbb
shl
or
enter
xor
pusha
das
xchg
and
ljmp
xchg
clc
andl
xlat
into
dec
mov
fstpt
pop
popf
mov
lcall
or
cmp
lea
xor
mov
mov
jo
jne
lock
cmc
notl
xchg
test
mov
cld
mov
mov
adc
mov
mov
or
adc
pop
cmp
sbb
cmp
adc
pop
es
jecxz
sbb
loopne
jae
shll
mov
push
dec
enter
fwait
mov
inc
sbb
lcall
rep
inc
nop
pop
es
nop
call
lds
add
lock
and
sbb
add
jae
mov
in
aam
sub
vmovntpd
cmp
cwtl
cmpsl
mov
jecxz
fidivrs
mov
cmpsb
mov
int
adc
lods
ds
inc
xor
int3
in
cmpsl
and
add
imul
xor
sbb
cmp
movsl
in
scas
push
pop
out
call
adc
mov
lahf
pop
mov
imul
out
cli
adc
cmpsl
loop
aaa
icebp
lcall
test
scas
imul
dec
sub
mov
inc
sbb
popf
into
adc
or
leave
out
rcrb
jp
nop
sbb
xlat
xor
push
push
fstps
movsl
xor
jg
and
or
xlat
mov
adc
add
loope
push
pop
fnstsw
popa
xor
mov
sub
pop
and
ret
add
xlat
push
and
inc
sbb
and
lcall
clc
add
popa
in
jmp
jmp
and
sub
imul
adc
lret
pop
pushl
push
inc
cmp
fsubp
xchg
inc
mov
mov
lds
fsubrl
mov
inc
les
jns
lods
lcall
and
sarl
rcrl
add
mov
dec
inc
push
and
cli
add
pop
and
clc
icebp
xor
or
daa
out
scas
outsb
icebp
and
add
mov
aam
mov
mov
xor
lock
push
pop
rcl
dec
add
pop
xchg
andb
test
jbe
lods
mov
add
insb
test
leave
pushw
jmp
insb
lods
and
cwtl
pop
iret
sbb
adc
jnp
popa
in
and
sub
pop
popl
fbstp
adc
hlt
push
or
divl
lcall
stc
dec
cmc
es
cld
cmp
ss
and
cltd
xchg
dec
fldcw
cmp
pop
addr16
jne
sub
mov
jg
rcr
icebp
mov
xor
insb
cmp
dec
js
mov
fwait
lcall
xchg
jns
scas
adc
rcr
dec
inc
ds
xchg
pop
jp
lds
imulb
test
sahf
insl
inc
aam
imul
lahf
loopne
popf
fiaddl
lcall
call
addb
adc
add
pop
dec
add
inc
push
push
cwtl
and
or
adc
cmp
in
push
test
loope
dec
mov
mov
or
mov
ss
mov
shll
loope
sub
jl
mov
in
mov
aad
mov
mov
sbbl
daa
leave
nop
mov
push
fs
aas
cmc
pushl
xlat
insl
stos
rcll
push
xor
sbb
pop
add
push
ljmp
jae
pop
dec
jg
cli
ds
cmp
jecxz
add
call
add
outsl
cmp
pop
dec
jbe
inc
loopne
out
ds
push
xchg
popf
mov
mov
cltd
roll
mov
cmpsb
mov
imul
lds
mov
jns
lcall
bound
mov
pop
fldt
stos
scas
call
push
xor
mov
dec
fbld
xchg
push
lock
cmp
sarl
or
sub
je
push
cmpsl
mov
lock
mov
mov
movsb
in
jle
or
imul
loop
scas
jmp
jbe
lahf
repz
in
cmc
inc
in
cltd
inc
lcall
sub
sahf
outsl
jp
push
sub
sbb
nop
shlb
xchg
mov
cmp
add
lods
popa
jmp
adc
and
fimuls
aam
adc
outsl
and
shll
aaa
insb
mov
inc
scas
stos
lock
cmp
mov
in
adc
mov
sub
pop
dec
cmp
xor
scas
test
push
notb
push
das
fadds
add
out
add
scas
iret
mov
mov
cmp
sahf
xchg
mov
xchg
mov
cmp
gs
or
lea
push
int
sbb
jl
xor
clc
lds
test
push
push
test
pop
insb
pop
pusha
cwtl
loope
in
mov
push
and
mov
xchg
mov
pusha
add
adc
push
and
sbb
xchg
sahf
sub
je
inc
xchg
mov
push
push
add
pop
mov
cmc
push
loop
or
adc
xor
outsl
push
scas
adc
jno
sub
pop
add
and
xor
sar
pop
cmp
mov
ljmp
lods
or
adc
jmp
xor
aad
in
mov
nop
inc
pushf
jge
adc
je
xchg
xlat
lods
or
inc
jl
rorl
gs
addb
pop
test
out
nop
pop
jno
icebp
add
mov
lahf
lret
inc
into
imul
sarb
in
jbe
icebp
inc
add
mov
in
dec
jp
out
or
popa
lock
fiadds
cmpsb
xchg
add
leave
push
cltd
arpl
and
ss
das
cld
clc
mov
test
or
cs
sbb
gs
dec
xor
inc
inc
dec
leave
shlb
movd
add
std
scas
xchg
fcomps
push
aaa
call
mov
sbb
or
aaa
inc
mov
dec
pop
lret
pop
jns
and
adc
ret
les
mov
test
xchg
and
in
cs
pop
xchg
inc
push
cmp
push
jl
mov
sub
mov
scas
sbb
pop
lods
out
jl
mov
fcmovnb
jno
movsb
imul
out
movsl
cld
jo
xchg
aam
mov
sbb
push
xchg
sbb
pop
mov
arpl
je
das
hlt
scas
push
push
ficoml
cmpsb
mov
int3
xor
repnz
fildl
sbb
sbb
push
cmpsb
mov
and
fsts
mov
mov
stos
and
mov
or
pop
notl
mov
pop
xchg
xchg
cmc
pop
mov
rol
sbb
out
push
pop
arpl
aas
out
outsb
xchg
lcall
or
aad
adc
loopne
cmp
mov
dec
inc
mov
xor
add
pop
mov
ret
fcoml
sti
aas
dec
xchg
push
stc
and
lods
insb
in
xchg
gs
data16
sbb
lods
sahf
rcrb
mov
inc
cmp
icebp
jge
mov
and
leave
dec
shll
xchg
sub
cmp
rol
cmp
daa
test
cwtl
fcmovbe
push
les
ret
cmp
adc
fldcw
push
pop
or
mov
sbb
pop
sbb
out
and
cmc
stos
mov
xchg
outsl
cmp
ret
jl
adc
ja
ss
insl
rcl
adc
ljmp
mov
xchg
mov
sub
pop
bound
pop
jmp
ljmp
dec
dec
adc
movsb
into
xchg
or
mov
sub
push
ss
je
testb
mov
fbstp
in
out
or
das
dec
leave
jecxz
in
push
cltd
push
pop
outsl
or
mov
push
lds
loope
mov
test
xchg
add
ss
xchg
mov
add
mov
push
pop
xlat
imul
dec
mov
mov
stos
stc
lock
pop
in
mov
es
shrb
push
jb
adc
mov
dec
push
and
hlt
aad
cld
sub
call
popa
sub
fldenv
roll
sbb
addr16
pusha
inc
push
mov
sub
pop
movsl
adc
jb
lods
out
rcll
sbb
mov
cmp
xchg
incb
hlt
sti
xchg
addr16
imul
stos
push
jge
lea
mov
lret
int
out
jecxz
pop
xchg
cmc
adc
fwait
mov
pop
daa
xchg
out
test
xchg
push
aad
pop
cld
mov
ljmp
ror
xor
leave
mov
in
call
xchg
je
add
rcll
pop
pop
dec
and
in
rcrl
dec
dec
sahf
stos
or
in
and
bound
or
scas
cmc
mov
inc
shrb
lret
lds
mov
mov
testb
je
jo
push
sub
ss
scas
push
pop
xchg
loop
xchg
adc
mov
jle
push
stos
or
jo,pt
dec
or
pushf
fucomi
adcb
dec
push
push
sbb
mov
pushf
pop
mov
dec
push
fwait
notl
dec
pop
mov
mov
mov
dec
sub
add
icebp
inc
ret
shlb
add
jne
lcall
loop
lahf
xor
out
repz
and
sub
cmpb
addl
xor
push
jo
add
loopne
lock
insb
imul
sub
bound
std
and
leave
insb
lahf
mov
pop
test
adc
xchg
cmc
xorl
outsb
gs
sbb
ja
ljmp
out
xor
sub
stc
xor
xchg
jne
das
imul
cwtl
jno
lods
call
mul
xor
add
rep
lods
xchg
sbb
push
ret
mov
sub
jg
pop
xchg
cmp
fistpl
lret
fadd
add
mull
ficoms
outsb
int
dec
and
inc
dec
stos
sub
mov
int
adc
fsubl
rcrb
sub
pop
adc
jb
inc
pop
and
leave
repz
push
ss
push
lods
mov
fiaddl
mov
ret
ja
xor
mov
lcall
jae
adc
test
data16
outsl
aam
stos
in
push
and
inc
push
cmp
pop
mov
add
in
and
xor
mov
xor
sbb
cmp
out
scas
test
adc
sub
mov
jecxz
repz
xchg
daa
inc
shrl
sbb
pusha
les
xor
pop
push
cmp
pop
xchg
movsb
xor
push
mov
ret
out
sbb
add
mov
test
mov
mov
pop
jne
or
pusha
add
jle
lods
jge
test
nop
stc
or
and
cld
loopne
mov
daa
test
movsb
and
sbb
test
mov
add
cmp
test
test
dec
xchg
popa
cmp
fnstenv
push
push
in
addr16
pushf
scas
sbb
dec
imul
ja
pop
fdivrl
and
out
xchg
aam
xchg
pop
push
pop
adc
lret
or
and
aad
xchg
pop
jns
xchg
into
xor
adc
enter
popa
rolb
push
sub
repz
pop
ret
push
sbb
jbe
repnz
ja
mov
jbe
sub
push
test
cmp
shll
sub
cmpsl
fsubs
stc
outsl
call
xor
pop
push
sti
or
mov
hlt
fs
sbb
xchg
divl
mov
pop
pop
and
cltd
dec
ret
test
mov
mov
adc
sbb
cmpsl
dec
stc
lcall
and
inc
and
mov
adc
xor
loopne
xlat
in
in
pop
fs
pop
cwtl
adc
in
push
or
add
xor
inc
lahf
inc
leave
outsl
adcl
mov
lods
pop
xchg
addl
cwtl
sbb
pop
lahf
push
mov
call
filds
lahf
push
and
cmp
jmp
and
inc
mov
fsub
mov
fnstcw
ds
test
dec
cli
lret
cmpl
stc
pop
and
xor
mov
mov
sbb
loope
arpl
scas
jbe
or
nop
lahf
mov
adc
cmp
dec
jbe
ss
popa
aaa
and
adcl
jno
stos
cld
ja
pop
lock
xchg
mov
sarb
std
loopne
insl
mov
jno
pop
sahf
iret
out
std
ss
dec
fistpl
adcl
shl
div
pushl
pop
push
xchg
fildl
sbb
xchg
inc
in
and
icebp
jmp
and
push
xchg
push
push
bound
or
add
dec
dec
sbb
lret
sarl
push
inc
dec
lods
outsb
cmpsb
hlt
dec
ljmp
ret
cld
adc
mov
jno
xchg
mov
add
lods
xor
add
pushf
mov
sub
mov
pop
cld
cld
lcall
push
cmpsl
push
jbe
jg
dec
mov
orl
sbbb
xchg
adc
outsb
in
movsl
push
notl
es
or
adc
jge
push
xor
loope
or
fidivrs
jo
xchg
mov
shrb
dec
inc
push
popf
jge
call
cli
pop
in
jo
lds
mov
push
daa
test
ljmp
repnz
rcrl
out
push
enter
pop
push
ss
lahf
dec
scas
mov
push
dec
int
xchg
fidivrl
xlat
orl
pop
adc
pop
movsb
and
mov
mov
or
jmp
pop
push
in
je
mov
les
jo
cmpsb
ret
pand
dec
stc
sub
mov
mov
cltd
cmp
out
inc
popf
dec
bound
into
test
xchg
aas
or
mov
xchg
mull
xchg
xor
imul
or
jb
frstor
cmp
xlat
cmc
fcomp
leave
lret
jo
enter
pop
pop
outsb
sbb
rolb
rclb
sub
jg
cld
test
pop
jae
loop
dec
add
sarb
cltd
faddp
iret
lcall
fdivs
adc
cmp
sbb
cwtl
pushf
shll
cli
icebp
in
fwait
pop
or
jno
lret
fxch
ljmp
aaa
inc
dec
out
mov
inc
imul
das
pop
bound
jecxz
out
into
cmp
lcall
imul
ljmp
mov
xchg
nop
repnz
js
loopne
or
ja
je
inc
xchg
adc
icebp
xor
jo
cs
and
out
rcr
or
in
dec
inc
xlat
mov
stc
or
xlat
jno
jno
jmpw
cli
sbb
xchg
mov
imul
fcomi
shlb
push
jae
cmp
scas
adc
cmp
aam
test
pop
loope
out
mov
push
cmpsb
or
push
pop
pop
pop
push
xchg
movsl
in
jne
mov
adc
bnd
mov
or
mov
push
dec
push
inc
dec
cmp
in
mov
in
ja
xchg
jae
fcoml
filds
test
mov
cmp
shll
test
or
xlat
pop
sti
pop
rorb
scas
sub
add
jnp
std
rorl
dec
ja
fnsave
aaa
int
std
popa
icebp
mov
jbe
mov
popa
inc
sub
gs
pop
pusha
mov
inc
push
jns
cmpsb
sbbb
rorb
fucomp
adc
mov
frndint
pop
fiadds
js
xor
mov
rcrb
xor
or
mov
in
scas
out
insl
mov
inc
xchg
lods
jecxz
adc
adc
stc
adc
jo
out
or
push
add
adc
push
and
shlb
mov
jg
adc
cmpl
adc
cmp
push
and
clc
lcall
cmpsb
mov
jnp
stos
xchg
mov
movsb
xchg
addr16
mov
out
push
and
aam
pop
xor
test
int3
ss
and
aad
inc
push
push
jle
xchg
mov
pop
xchg
frstor
push
jecxz
lret
les
mov
mov
add
xchg
jo
inc
movsb
push
iret
aam
sarl
roll
shrb
test
inc
sti
dec
imul
push
pop
popa
shrb
popa
xor
sub
mov
mov
fistpll
imul
sbb
imul
test
push
push
stos
pop
push
loope
aam
mov
pop
das
rcll
xor
mov
adc
mov
outsb
sub
dec
sub
xor
mov
test
loopne
xor
divb
js
mov
pop
push
adcb
add
xchg
ja
or
mov
xor
xchg
xchg
sbb
adc
scas
out
or
or
lahf
pop
or
test
insb
push
push
cld
mov
ret
in
jge
inc
sbb
mov
cwtl
push
jecxz
aas
push
xchg
mov
scas
jmp
aaa
shll
sbb
mov
cwtl
pop
addr16
movsl
jae
subl
out
ds
add
andl
jae
pop
mov
cs
cmp
scas
cmpsl
mov
cwtl
add
repnz
les
lret
xchg
push
sub
cltd
cmp
lds
inc
insl
lods
shll
seta
or
cmp
cltd
adc
mov
mov
cmp
jb
or
and
scas
pop
cmp
push
mov
inc
push
adc
in
mov
sub
mov
jg
scas
popa
les
leave
test
in
adc
vpunpckhbw
ljmp
addr16
rcl
js
mov
add
call
jecxz
jnp
or
xlat
in
shll
cmpsb
and
fnsave
aad
lods
movsb
int3
mov
mov
mov
sbb
mov
inc
sbb
dec
jl
fwait
rorb
mov
hlt
int3
jl
iret
jo
push
ret
sbbb
popa
and
jecxz
lahf
add
aaa
xchg
mov
mov
xor
lahf
test
call
test
mov
call
xor
enter
outsl
jecxz
mov
mov
push
popa
jb
fldt
test
mov
mov
into
push
arpl
cmp
add
jecxz
and
xchg
out
in
mov
add
jb
push
or
mov
mov
adc
xor
sbb
into
jge
sub
dec
scas
sub
es
and
lahf
jl
dec
cmp
sub
jle
fsubs
es
cs
fimuls
mov
cs
adc
sub
rcrl
int
add
stos
shl
xchg
stos
inc
cltd
inc
pusha
fmuls
icebp
push
outsl
and
and
jmp
jne
mov
xor
ds
cltd
outsl
fsubrs
inc
pop
cmp
ror
mov
fstps
lock
shlb
add
sbb
sbb
mov
lret
dec
lcall
and
mov
mov
outsl
or
loopne
lahf
lods
and
and
pusha
pop
inc
sub
xor
mov
and
add
cld
iret
xchg
xchg
pop
adc
jge
mov
sub
xor
cmp
sub
add
xor
call
ret
bound
fsubrl
setae
pop
xchg
inc
jae
loopne
push
pop
inc
bound
mov
repnz
cmpsl
sar
std
sub
aam
inc
test
daa
hlt
ds
cmpsl
outsl
out
sub
sub
pop
or
jg
test
lods
in
push
orb
lret
stos
mov
or
out
sub
je
adc
xor
adc
imul
arpl
add
in
leave
fiaddl
jecxz
cmpl
inc
sub
add
adc
cmp
pop
fwait
outsb
and
lcall
pushf
jnp
sub
and
imul
cmp
push
arpl
int3
jmp
inc
sub
inc
fstpt
or
dec
jns
lret
pusha
pop
fs
cmp
int
pop
xor
loopne
adc
lret
sti
in
jle
jecxz
mov
or
add
fwait
dec
add
call
push
enter
adc
fstpt
push
aas
shlb
les
dec
jg
out
and
jno
mov
sbb
ret
test
enter
aas
ljmp
in
sbb
sub
in
push
ja
and
pop
lods
jne
vpaddb
lret
rcll
loopne
sbb
or
je
push
scas
mov
pop
aaa
sar
dec
add
mov
dec
cmpsl
mov
dec
pop
lret
sbb
and
sarb
cltd
add
push
adc
das
xchg
sub
jge
ljmp
add
inc
fisubrl
icebp
aas
pop
fstpt
dec
mov
aad
sub
ds
cmp
bound
push
cmpsl
imul
pop
mov
sarb
pop
and
ret
lods
cmp
xlat
xor
jns
pop
lock
shrb
sub
shlb
fs
inc
andb
sub
jnp
out
sub
fidivrl
mov
out
jge
sti
or
call
int
and
push
inc
mov
cmpsl
mov
rclb
notl
cld
push
add
mov
sub
cmp
mov
push
aaa
cmp
pop
scas
call
jb
sub
pushl
fstpt
loopne
push
mov
push
sbb
sub
or
jne
lods
out
cmp
lcall
pop
dec
or
aaa
aam
mov
add
sub
sbb
jnp
aas
dec
std
fadds
cwtl
jbe
iret
test
lcall
fisttps
popl
clc
loopne
adc
inc
sub
push
outsb
in
xor
leave
testb
leave
dec
lock
addr16
test
out
out
xor
jne
pop
pop
pusha
pop
mov
into
or
ffree
or
loopne
add
xchg
call
iret
mov
stos
sbb
adc
xchg
lret
je
jnp
mov
push
cmpsb
outsb
mov
jmp
jo
dec
outsb
fidivs
cmp
mov
jns
jns
jae
xchg
repz
jmp
push
add
jnp
arpl
cmp
inc
sti
or
mov
xchg
mov
std
inc
add
les
mov
cmp
mov
mov
push
or
sbb
fwait
ljmp
xchg
sub
cmp
cmp
inc
sbb
push
xchg
adc
insb
into
or
mov
stos
pop
fsubrl
sbb
mov
inc
fldenv
add
cli
shlb
adc
insb
es
cld
lret
and
xor
inc
dec
bound
sbb
and
arpl
jb
sbb
jbe
jecxz
fcoml
orb
lock
push
mov
push
pop
dec
jo
dec
mov
inc
xor
es
and
fsubrs
aam
fdivs
xor
lds
icebp
out
jno
pop
xchg
xor
test
and
pop
or
cld
addb
xchg
sub
ljmp
mov
dec
xchg
and
push
shrb
pop
jne
lea
mov
fwait
daa
nop
mov
ss
mov
mov
xchg
mov
mov
clc
dec
and
jmp
push
aas
das
loopne
pop
inc
mov
xor
repnz
push
and
stos
dec
stos
sub
inc
popa
cmp
lret
mov
loopne
mov
dec
nop
scas
mov
repz
inc
xor
nop
cld
popf
sub
cmp
push
xor
inc
in
popf
xchg
mov
push
push
movsl
roll
js
test
adc
cli
in
repnz
cmpb
ret
xchg
popl
data16
xchg
xchg
or
fs
or
cli
mov
stos
fmull
sarl
and
sub
adc
push
inc
xor
pop
sbb
imul
mov
cmp
inc
inc
outsl
shr
pop
cwtl
push
pop
xor
xlat
mov
sahf
add
dec
fidivrs
and
add
pop
xchg
push
jp
cli
pop
pop
push
out
outsb
out
sub
push
mov
sahf
loop
stos
add
outsb
sbbb
xchg
fiadds
xor
xchg
test
push
leave
dec
adc
ljmp
test
sub
xchg
adc
int
push
sub
and
push
in
adc
or
cmp
jge
cltd
neg
jae
inc
dec
jbe
pop
and
pop
popf
daa
mov
xchg
cmp
push
adc
sub
adc
stc
mov
pop
ss
jne
adc
test
and
mov
jae
push
jmp
and
inc
push
mov
ss
dec
inc
mov
push
sub
cmc
aam
lret
in
dec
arpl
xor
pushf
mov
jbe
fistpl
loop
mov
pop
cmpsl
push
inc
mull
sbb
jne
lcall
mov
and
ret
push
mov
dec
mov
fcompl
and
es
adc
mov
cwtl
mov
cmp
adc
jmp
cmpsb
push
cwtl
cmp
add
mov
je
push
push
mov
loopne
pop
movsb
xchg
pop
push
pushf
add
inc
cltd
or
adc
loop
mov
std
sub
sub
mov
and
rorb
mov
shlb
mov
js
and
push
pop
push
out
add
sbb
push
aam
fisttps
sarl
sbb
jno
sbb
aad
or
stos
int3
sbb
and
pop
shrl
imul
mov
sbb
adc
in
push
cmp
andb
rdmsr
xor
push
jne
mull
hlt
mov
das
insl
iret
dec
mov
insb
xor
cmpsl
fs
mov
jo,pn
push
push
mov
cmp
aam
push
jns
pop
xor
nop
xor
test
cwtl
sbb
xchg
push
pusha
jle
rcll
ss
filds
cmp
add
lods
pusha
loope
push
pop
lock
aam
ds
xor
mov
int3
cmp
sub
out
xchg
lret
inc
repz
lods
outsb
mov
mov
icebp
xchg
call
popa
or
xor
sbb
stc
sbb
out
decl
lret
xlat
and
mov
sub
or
outsb
iret
and
mov
xchg
push
lods
adc
pop
push
int3
mov
outsl
sbb
loopne
iret
mov
and
sub
bound
add
xchg
and
sub
and
adc
inc
iret
jp
in
sbb
push
mov
ret
in
loopne
cld
lea
cmpsl
or
jns
ds
lret
jb
out
or
mov
xchg
or
inc
popa
cmpsl
leave
shlb
xchg
lcall
jge
pop
fwait
cmpsb
mov
dec
xor
push
mov
fsubp
out
push
in
dec
rcr
data16
mov
addl
sub
and
mov
push
stos
dec
adc
push
jo
jno
test
jo
out
pop
ret
test
push
cmpsb
repnz
call
push
daa
rcrb
fisttpll
dec
pop
enter
sbb
mov
xor
inc
sub
out
rorb
fwait
cmp
inc
data16
mov
mov
sub
sub
push
sbb
repz
pop
leave
push
sti
ret
into
aas
push
pop
jecxz
add
mov
ret
dec
mov
ret
insl
dec
xchg
push
sbb
mov
and
scas
fwait
jb
pop
lret
sbb
out
subl
push
pop
ss
pop
mov
aaa
inc
cltd
mov
mov
add
xchg
int
out
mov
cmp
loopne
adc
jle
arpl
imul
hlt
add
out
test
adc
enter
and
fcmovu
xor
push
movsl
sbb
xchg
push
dec
sub
lds
les
mov
js
scas
mov
notb
les
inc
mov
mov
xchg
icebp
inc
aam
mov
pop
fimuls
outsb
ds
or
xor
pusha
pop
repz
sub
sbb
flds
imull
dec
icebp
lods
aam
mov
in
inc
mov
jb
scas
dec
pop
adc
dec
call
inc
push
stos
xor
test
shrb
push
dec
test
lret
pop
jmp
aaa
xchg
mov
loopne
hlt
outsb
pop
orb
lea
cli
jg
insb
mov
sbb
sbb
cmc
repnz
mov
add
hlt
inc
sub
ss
xor
xchg
sbb
into
or
ljmp
push
nop
movsl
push
sbb
bnd
pop
or
pop
xor
push
xchg
movl
jecxz
std
push
leave
cmp
ljmp
push
and
fnsave
sbb
inc
mov
sub
sbb
in
or
mov
frndint
aam
js
mov
add
pusha
xor
into
popa
imul
push
xor
pop
jle
xor
sbb
insl
icebp
jle
loop
cmpsl
inc
inc
rorl
push
scas
sbbl
lret
or
pop
daa
mov
jl
in
ret
pop
or
jecxz
jb
cli
push
xchg
lock
ret
movsb
stc
adc
jmp
dec
xchg
lods
gs
daa
mov
lea
and
sub
icebp
fsts
insl
mov
pop
movsb
pop
lcall
push
push
add
cmp
stos
sbb
mov
imul
mov
cmp
sub
mov
add
pop
cmp
xchg
inc
push
sub
pop
sbb
pop
addb
cwtl
pop
scas
fstp
loopne
out
loope
mov
popf
enter
dec
cmpsl
push
loop
mov
insb
shll
xchg
mov
sbb
push
sbbb
fwait
mov
sbb
or
sbb
sbb
mov
mov
dec
xchg
push
inc
cmp
in
ljmp
mov
fs
xchg
ret
add
insl
lret
pushf
push
mov
iret
scas
mov
cmpsb
clc
fucomip
push
sub
outsl
push
mov
and
outsb
dec
test
sub
push
sbb
mov
dec
aaa
xor
dec
jb
ljmp
fnstsw
fs
ror
cs
xchg
imul
cmp
mov
pop
out
mov
sahf
xchg
sahf
aas
jae
jbe
jb
fwait
and
push
inc
in
leave
test
icebp
mov
jns
popa
lds
nop
or
data16
ret
scas
les
inc
mov
lahf
pop
mull
stos
nop
pop
gs
cmp
jle
cmp
push
jge
fdivl
rcrb
mov
jo
push
fisubrs
cltd
and
repnz
fdivrs
jo
sahf
popf
pop
pop
scas
repnz
je
mov
dec
dec
add
sub
mov
adc
fisubl
das
push
mov
lods
push
or
std
shlb
sub
pop
dec
sbb
out
fsubs
push
stos
lods
push
inc
lcall
or
jo
stos
jno
insb
cmp
dec
aad
cmp
adc
cmp
jnp
push
iret
jo
aaa
std
repnz
inc
push
test
xchg
sub
pushf
pop
out
add
xchg
sub
inc
incl
cmp
pop
int3
decb
bound
out
icebp
jne
jmp
roll
push
dec
inc
pop
pop
cli
jecxz
pusha
in
and
mov
iret
cli
cwtl
std
xchg
vhsubpd
xor
jb
ret
les
jp
push
sbb
std
push
rcrl
mov
pushl
sub
xchg
lcall
push
out
mov
cmc
and
and
enter
fstl
add
xchg
dec
mov
pushf
push
js
push
add
in
inc
sbbl
cmpsl
das
out
sub
repz
push
sbb
jge
inc
push
inc
punpckhdq
loope,pt
push
sahf
add
rorb
into
cmp
xchg
dec
xor
adc
nop
mov
push
into
sbb
hlt
adc
imul
aaa
test
roll
ret
aaa
gs
jecxz
mov
push
push
frstor
lea
jno
xor
shlb
enter
mov
enter
ret
arpl
rcrl
pop
mov
lahf
fdivs
xchg
rclb
scas
aas
arpl
add
mov
bnd
sub
xor
icebp
cs
lahf
sbb
decl
movsl
jb
xorb
icebp
cmp
push
pop
sbb
out
ja
mov
faddl
rcrb
iret
pop
pop
mov
jo
xchg
jne
add
sbb
call
push
jb
adc
lret
inc
pop
sub
outsb
cmp
xor
lret
xchg
shlb
pop
cs
outsl
leave
outsb
mov
or
push
lds
mov
sub
pop
leave
pop
add
rcr
in
push
iret
leave
jb
sti
jbe
cmp
iret
mov
sbb
lock
push
js
arpl
insb
movsl
jb
js
movsl
mov
dec
and
mulb
jle
aaa
mov
push
sbb
mov
sahf
sti
mov
ja
inc
pop
lods
dec
adc
mov
lods
pushf
shr
mov
push
sbb
cmc
mov
pop
or
andb
sub
push
inc
loop
out
mov
loopne
sub
mov
aaa
xchg
sbb
sbb
inc
dec
add
aam
adc
cmp
lods
outsl
sets
sub
sub
test
daa
bound
jl
pop
leave
loop
mov
sbb
in
andb
add
scas
cs
mov
push
xor
jnp
adc
and
adc
pop
fldenv
pop
mov
jmp
pop
pop
shrb
scas
int
test
scas
movaps
push
test
push
inc
decl
enter
les
data16
xor
add
outsl
adc
or
lahf
test
push
mov
jg
dec
mov
into
push
jbe
or
cmp
in
jg
cmp
xor
imul
adc
adc
mov
adcl
sbb
js
xchg
sub
push
arpl
cmp
pusha
mov
and
push
sub
incl
adc
loop
popa
cltd
mov
or
ret
mov
adc
inc
shrl
ret
xlat
icebp
loope
cltd
lds
mov
aad
in
cmp
ret
insb
add
add
or
cli
pusha
aas
ds
mov
xchg
jbe
imul
movsb
lock
fdivr
scas
jmp
in
and
dec
leave
xchg
inc
pop
fstps
jl
iret
js
or
jg
call
inc
shrl
fmull
cmp
mov
in
mov
sub
lea
jmp
push
notl
outsb
inc
xor
add
scas
xchg
and
imul
inc
lods
mov
mov
jl
daa
mov
fsts
mov
insl
cmp
xchg
cmp
mov
jmp
adc
mov
jge
xor
mov
outsl
add
or
or
neg
dec
cmp
xchg
adc
push
stc
call
cmp
adc
addr16
ftst
or
mov
lock
loop
mov
xchg
adc
int
pop
sub
test
addr16
mov
ja
int
xor
push
and
out
xor
gs
roll
adc
lods
scas
xchg
mov
shl
adc
sbb
and
shrl
adc
push
cmp
mov
push
repnz
adc
out
push
cld
jbe
or
pushf
dec
cmp
fs
mov
daa
adc
fiadds
into
sti
outsb
push
jbe
neg
inc
xchg
jge
psubusw
mov
cmp
rcr
add
ficompl
jb
aad
sarl
daa
xor
jo
cmp
mov
movsb
push
jno
and
loope
inc
jnp
sti
push
adc
mov
ds
dec
pop
and
roll
and
enter
push
sarl
jmp
xor
movb
pop
cwtl
xchg
leave
sbbb
or
push
dec
sbb
jns
mov
cld
sub
jno
pusha
insb
sbb
mov
and
fstps
or
js
mov
jmp
mov
pusha
lret
pop
daa
sub
in
push
je
insl
insl
xor
test
pop
adc
pop
xor
icebp
ss
outsb
pop
dec
add
outsb
call
cmp
out
mov
fwait
sbb
sub
push
cmp
movsb
ja
jg
enter
mov
mov
sub
mov
je
jb
jae
dec
shl
push
mov
cmp
sbb
push
dec
xor
xlat
jae
sub
ja
sahf
mov
jg
dec
pushf
sbb
xchg
imul
in
push
aaa
jp
stos
mov
aaa
sub
cmp
sub
popa
aaa
xchg
loope
adc
xchg
sub
mov
pop
pusha
or
pop
dec
call
sahf
inc
cmc
xchg
xorb
or
popa
push
pushf
mov
pusha
scas
scas
std
jne
mov
or
dec
sbb
push
in
add
fcoml
lods
cmp
or
mov
or
push
adc
dec
xchg
sub
xor
xchg
movsb
xor
pop
xor
lods
sub
sbb
or
cli
mov
mov
lods
lea
inc
sti
pop
and
mov
and
in
mov
mov
cmp
pop
push
movsl
sub
sbb
cmp
cwtl
cmpsb
loope
imul
lds
mov
lea
mov
mov
into
inc
push
xor
stos
mov
mov
fldl
adc
sbb
int3
adc
mov
and
nop
js
loope
leave
pop
loopne
and
cmc
add
mov
mov
push
push
sub
or
push
push
xchg
cwtl
je
loope
inc
mov
shl
mov
mov
inc
dec
xlat
mov
sti
adc
jp
cltd
movsl
push
out
cmp
cltd
arpl
mov
jl
ja
xchg
inc
push
pop
pop
sub
jb
sti
cmp
into
xor
addb
mov
push
pop
push
sub
xorl
add
xchg
aas
sub
scas
in
cmpsb
xor
push
loop
sub
cmpsl
xor
jo
mov
inc
mov
xor
scas
sbb
jnp
inc
loope
jnp
or
cmp
mov
xlat
pop
cltd
outsl
push
fldl
insb
cld
idivb
dec
push
add
cmp
fs
or
xor
fadd
fsubl
and
out
sub
jg
out
mov
loope
test
mov
fwait
stos
fisttpll
aaa
cmpsb
jbe
add
mov
push
jle
xchg
mov
xor
scas
pop
daa
sub
mov
adcb
pop
insb
pop
popf
data16
dec
test
mov
xor
lock
mov
mov
adc
pop
xchg
dec
es
xor
dec
inc
ds
push
lods
cmp
or
sub
jno
and
out
in
popa
test
shll
loop
movsl
ljmp
xchg
ret
xchg
mov
or
movsb
sub
addb
pop
aas
mov
add
xor
fidivrs
sti
push
push
mov
jp
test
out
fildl
cli
movsb
adc
add
rorb
jae
inc
fwait
xor
jbe,pt
jns
in
mov
cmp
add
sub
sbb
mov
mov
xchg
pop
andl
inc
repnz
xor
cmp
push
ficoms
jnp
mov
push
ss
lock
mov
imul
pop
pop
dec
adc
sbb
pusha
pop
pop
mov
xlat
jno
lea
leave
push
orb
int3
mov
outsb
push
sub
pop
mov
cmpsb
pop
cmp
sbb
jg
test
or
test
xchg
add
mov
or
pop
fwait
and
subl
inc
aam
movsl
out
je
das
xor
jo
push
add
sbb
lock
rcrb
dec
insb
sahf
mov
xor
sbb
mov
jmp
jo
xchg
or
fidivl
lcall
iret
enter
aas
adc
add
dec
scas
xor
add
mov
fisubs
daa
in
mov
mov
cmpsl
bound
dec
jb
movsb
jle
enter
inc
dec
mov
mov
ss
imul
push
xchg
cs
xlat
cmc
in
jns
dec
imul
jge
inc
adc
nop
cwtl
icebp
sub
sub
pop
sub
ja
cmc
dec
rol
test
std
add
insl
push
shll
mov
aad
fidivl
test
xor
mov
add
pop
nop
jb
mov
sbb
hlt
or
sbb
cmp
cmpsb
andb
xchg
in
jmp
adc
pop
inc
insb
jo
jmp
adc
push
push
push
push
jns
cmp
out
fnstenv
jp
push
add
cmp
pusha
or
xchg
popl
iret
fiaddl
xor
mov
cld
fs
mov
addl
ds
mov
push
daa
jae
sti
dec
mov
repnz
push
pusha
call
lret
arpl
enter
mov
xor
ret
sbb
pop
ror
je
xlat
or
mov
inc
mov
mov
aad
mov
outsl
addr16
push
dec
sub
cmc
jge
dec
les
add
mov
cmp
adc
enter
fildl
ret
inc
cmp
xchg
sub
popf
mov
or
xchg
into
mov
into
adc
into
jne
outsl
dec
sbb
dec
cmp
mov
gs
divb
jmp
scas
cmp
int3
pop
imull
push
xlat
dec
in
int
ret
int3
repnz
pop
xchg
test
add
loope
shl
jb
test
stos
cmp
and
dec
xchg
pop
jbe
movsl
jecxz
push
loop
sub
and
test
dec
xchg
push
sbb
je
imul
fcmovnu
into
mov
inc
mov
je
xchg
rcll
roll
mov
stc
and
testl
xchg
in
adc
mov
dec
test
mov
jmp
jns
dec
mov
mov
mov
jnp
add
adc
mov
cmp
mov
mov
fwait
or
xchg
stos
xchg
xchg
lret
imul
mov
loopne
rcrl
outsb
test
jne
dec
mov
mov
inc
movsl
movsl
mov
jnp
ret
in
cmp
std
lds
addr16
push
and
movsb
dec
pop
add
rcll
notb
cmp
add
fs
dec
adc
sahf
add
lods
cmp
inc
inc
add
ret
xchg
and
movsb
mov
mov
push
dec
les
jno
pop
mov
jecxz
lods
addr16
inc
adc
pop
xor
out
stos
xchg
dec
dec
outsl
sub
mov
and
mov
xchg
sub
cmp
and
mov
dec
sbb
js
adc
pusha
inc
iret
test
cli
cltd
loope
cmp
jmp
stos
mov
stc
xchg
in
adc
inc
gs
jg
popa
enter
or
test
mov
cltd
cmpsl
jmp
ljmp
xchg
xlat
shrb
popf
mov
gs
fbld
enter
fdivl
test
add
sbb
cmp
inc
fs
adc
xor
shrb
xlat
mov
push
inc
inc
test
cmpsb
mov
je
xor
aas
testb
cltd
cmp
jg
lods
test
pop
in
xrelease
cs
inc
and
shl
sbb
fisubl
fidivl
ja
push
sbb
sub
adc
int
mov
dec
cmp
sub
mov
loop
int
popf
test
push
into
pop
push
inc
repz
mov
pop
scas
fstpt
jge
nop
out
shrb
jl
imul
insb
xchg
cmc
fmull
mov
cmp
iret
rorl
dec
inc
cld
icebp
data16
fsubs
cltd
mov
adc
mov
addb
mov
mov
stc
mov
mov
bound
repnz
sub
icebp
jno
insl
jp
adc
jne
mov
pop
insl
jp
mov
pop
add
pop
mov
add
in
out
fbstp
push
andl
add
dec
jnp
fsubl
mov
ret
xchg
push
mov
mov
loop
call
xchg
lock
in
or
xor
imul
into
push
in
xor
rolb
or
jmp
and
int3
ret
xlat
mov
inc
mov
in
xor
cmp
mov
jns
pop
pushf
pop
lods
xchg
pop
mov
jecxz
cmpsl
push
in
mov
jg
and
jmp
mov
xorb
rcr
subl
dec
jle
rorl
insl
addr16
lds
dec
sub
jl
aam
xchg
pop
mov
fbld
inc
test
inc
sbb
and
sti
xchg
jecxz
stos
and
xor
or
add
into
dec
repnz
or
xor
into
pop
fimull
xchg
sbb
mov
test
mov
sarl
or
outsl
mov
adc
lods
in
add
lods
sub
mov
and
pop
jae
xor
dec
es
in
icebp
xorb
mov
stc
inc
sub
and
cmp
out
inc
int
dec
pop
push
push
xor
xorl
cmc
lods
mov
pop
ja
sub
addb
mov
lret
adc
repz
fcomi
sti
mov
sub
add
mov
adcb
arpl
sbb
in
mov
loop
in
pop
pop
rol
xchg
adc
mov
pop
inc
lcall
sbb
in
add
inc
pushf
subl
cmpsl
jle
xchg
pop
jge
jbe
jge
in
stos
clc
andb
pop
test
in
cli
icebp
mov
or
subl
loopne
push
pop
xor
sbb
and
inc
jle
fdivl
imul
xor
fs
jmp
adc
cmp
jg
mov
lret
sub
pop
mov
cmc
xchg
jge
xlat
lock
dec
pop
mov
ss
faddl
fwait
arpl
sub
jo
loope
mov
xor
adc
or
lods
std
pop
sub
xchg
popf
pop
xor
in
mov
popf
shll
hlt
pop
and
push
xchg
fistpll
je
cmpsl
sub
lahf
inc
cmpl
aad
dec
jns
movsb
outsb
jns
jb
cwtl
sub
leave
cmp
testl
sbbl
loop
xor
xchg
in
out
dec
das
fists
aas
aaa
xchg
sub
push
jp
mov
cmpsb
jo
cwtl
lcall
lahf
lock
mov
cmpsb
push
in
rcr
into
or
dec
scas
fildll
outsb
stos
jno
mov
push
jmp
ja
jmp
fwait
iret
jns
inc
ja
addr16
out
jl
movsb
inc
shll
lret
in
xor
adc
sbb
inc
add
pop
cmpsl
fldl
orl
aas
and
scas
push
xchg
or
xor
push
pop
iret
rclb
imul
stos
xor
sbbb
mov
sbb
xor
insb
ret
push
mov
in
fcoms
jmp
and
sbb
aas
jae
or
test
or
dec
push
pop
cmp
popf
adc
repz
mov
lods
cmc
sub
add
lods
scas
lcall
dec
outsb
pop
mov
cmp
clc
unpckhps
fsubs
lock
sti
test
aad
fidivl
xor
inc
arpl
sub
inc
or
mov
pop
out
ds
fisttpll
push
and
add
lods
clc
cmp
test
pop
ds
mov
xor
inc
mov
stos
mov
inc
inc
dec
out
sbb
lahf
add
dec
sbb
push
out
mov
fldenv
jle
jmp
outsl
shl
inc
sbb
mov
mov
push
mov
mov
adc
or
push
cmp
andb
sarb
xchg
in
mov
cmp
ret
adc
test
xchg
jnp
in
scas
push
insl
adc
cs
push
ud0
inc
pop
mov
fsubs
les
push
push
cmp
lods
cmpsb
pop
sbb
shll
js
dec
mov
and
imul
cltd
jl
dec
bound
jne
xor
pushf
je
cmpsl
xchg
push
les
adc
int
mov
mov
mov
sub
push
push
out
mov
movsl
pop
daa
mov
cld
outsb
lods
or
push
enter
push
sbb
mov
or
mov
mov
push
incb
popf
ret
sbbb
and
pop
or
fiaddl
out
cltd
sub
aaa
sub
daa
lahf
push
mov
pop
jmp
imul
insb
imul
icebp
mov
clc
mov
daa
mov
mov
push
mov
jne
outsb
xlat
icebp
fld
inc
adc
xchg
mov
mov
sbb
orl
ficoms
pusha
mov
dec
cmp
dec
dec
or
cmp
dec
cwtl
cmp
fisubs
mov
les
mov
cli
in
aas
mov
xor
xchg
or
xor
in
mov
mov
aaa
bound
pop
loopne
sbb
test
pusha
stos
ret
in
roll
insb
lock
mov
test
sub
xchg
mov
mov
jae
mov
xor
jnp
mov
lods
push
and
or
scas
cld
jg
lcall
inc
sub
mov
int3
rolb
adc
sbb
push
inc
fnstsw
jbe
mov
add
mov
pop
andb
cmp
add
iret
dec
fcomps
pop
pop
std
sti
jns
mov
xor
int
rcll
in
xlat
idivl
mov
pushf
xor
subb
cmp
and
lahf
push
or
scas
scas
decl
ret
test
mov
fwait
out
cmp
push
mov
lret
jecxz
mov
push
loopne
xchg
js
jo
or
les
call
push
push
push
mov
inc
aad
push
movsl
jmp
pop
xchg
and
fdivrp
test
bound
jnp
pusha
mov
out
sbb
test
cli
std
mov
popa
lods
cli
or
add
orb
add
mov
sub
jne
jnp
movsl
adc
inc
bnd
shll
fbstp
cltd
aad
push
jmp
repz
mov
loop
es
cmp
pop
daa
and
out
fldenv
into
and
inc
sbb
adc
push
mov
call
je
movsl
sub
out
sub
jnp
mov
adc
clc
les
pop
inc
and
xchg
dec
add
mov
push
pop
jno
in
jmp
adc
dec
mov
and
cmp
jg
adc
ljmp
loopne
adc
lock
shll
mov
cmp
lock
adc
ftst
mov
inc
lods
dec
add
out
or
cmc
xchg
jbe
push
pop
mov
inc
rep
sub
lahf
scas
ss
push
push
mov
inc
cmp
pop
add
xchg
jne
or
dec
jne,pn
and
cmp
ljmp
das
scas
notb
jns
sti
mov
dec
fisubs
aad
movl
pop
popf
fistpll
mov
jns
dec
ss
push
addr16
jns
push
cmp
dec
mov
lock
cmp
cmpsb
inc
dec
enter
ret
sbb
jne
push
mov
xor
ljmp
pop
shrl
pop
cmp
add
cmp
lret
ret
jns
push
imul
sub
and
dec
dec
add
inc
movl
popa
test
daa
mov
jb
pop
xor
mov
das
cmc
fstpt
xchg
mov
addb
mov
sbb
ds
hlt
lahf
aam
fstl
dec
rol
sbb
jg
iret
sbb
sub
shlb
icebp
leave
pop
fistpll
call
push
notb
stos
adc
cld
mov
jno
xchg
and
fs
jecxz
lods
sbb
jle
mov
inc
shrb
mov
fwait
sub
aaa
pop
stc
add
xchg
adc
inc
push
xchg
jnp
stc
xchg
sub
iret
rorl
jmp
decb
xor
out
cmp
test
das
fistps
std
or
in
add
cmp
gs
mov
add
xor
ss
fimuls
xor
mov
aaa
aas
aam
mov
mov
dec
jo
leave
push
and
daa
rcl
frstor
rorb
nop
and
pop
mov
jne
std
or
flds
int
mov
stos
faddl
inc
repnz
mov
mov
movsl
mov
or
ss
test
fldt
sbb
jnp
jle
sbb
jns
dec
leave
insb
jns
fmul
sub
les
and
cmpl
rolb
ja
ret
sub
mov
adc
add
mov
jmp
xor
jne
bound
test
push
popf
sbb
mov
inc
ja
sbbb
sub
sbb
mov
das
subb
das
fisubrs
in
dec
jnp
and
push
adc
test
push
pop
fidivrs
dec
cmc
rcrb
pop
sub
dec
rcll
shr
dec
adc
les
decl
test
aam
iret
fidivs
mov
imul
sbb
gs
inc
xor
fidivrl
push
add
hlt
data16
push
ds
push
mov
ja
xor
jl
in
jne
lea
pop
jno
jae
in
cmpsb
jge
daa
push
adc
cmp
shr
sub
std
push
jp
fisubrs
mov
fsts
outsb
aam
add
xor
fidivrl
jno
out
adc
mov
or
xor
cmp
sub
test
ja
fistpl
sbb
loop
ljmp
aaa
iret
leave
outsl
adc
fwait
and
mov
push
jg
sub
adc
push
lcall
push
test
mov
cmpsb
mov
aaa
and
cli
adc
rorb
add
push
fwait
sar
push
dec
cs
mov
dec
shrl
or
push
mov
mov
out
in
lods
add
xlat
lods
addl
bnd
inc
out
inc
adc
jns
fisubl
es
xchg
cs
jns
inc
jle
jno
inc
stc
add
xor
sti
fwait
push
mov
pop
pop
cmp
jmp
xorb
add
push
sbb
push
rcr
in
arpl
sub
inc
cmp
scas
jae
mov
sbb
negl
xchg
scas
and
sti
jb
mov
push
pop
scas
and
lods
paddusw
xchg
call
rol
stos
sbb
add
adc
push
cltd
imul
jo
xchg
jnp
lods
mov
movsl
mov
cld
xor
dec
pop
cmc
in
ja
lret
sub
test
cmp
js
imul
repz
lods
jbe
dec
in
aas
xchg
sub
js
push
or
das
pop
mov
push
aad
jle
scas
ror
in
dec
mov
jmp
xor
dec
add
adc
loope
jmp
aaa
xchg
push
xchg
push
enter
fsubrl
pusha
sbb
or
add
fisubrs
or
cmp
dec
push
rcl
sub
mov
addb
jno
dec
push
into
xor
loop
js
and
aas
addr16
pop
push
lahf
leave
loop
push
aam
adc
mov
cld
hlt
mov
out
in
push
mov
rolb
aas
stos
jg
jmp
lods
and
cli
and
jnp
pop
int
lcall
test
inc
cmp
pop
rep
loope
or
add
cld
sbb
jne
roll
adc
add
push
adc
dec
iret
add
xchg
inc
out
xchg
shll
bound
jecxz
mov
inc
cmp
movsb
add
aas
inc
and
scas
lods
and
out
jg
popf
rol
xchg
hlt
test
lret
cld
jo
fsubr
pop
cmp
cltd
push
std
out
xchg
mov
xchg
mov
xor
add
pop
and
out
mov
popf
inc
divps
lock
test
pop
and
or
pop
mov
test
call
lods
movsl
cmc
in
xor
adc
pop
cld
je
lods
fadd
xchg
bound
pop
jno,pt
sbb
adc
sbb
sbb
and
add
fisubs
dec
stos
das
mov
test
dec
cmp
out
pop
adc
pop
fwait
xor
xor
push
aaa
shlb
js
fcmove
mov
arpl
inc
cs
outsl
push
and
adc
mov
sub
mov
and
sbb
lods
fsubl
aas
mov
ret
ret
ss
mov
andb
daa
repnz
rcll
mov
loope
in
inc
dec
aas
gs
and
push
aam
ret
add
add
pop
gs
sub
jns
mov
aad
shlb
outsl
push
jle
cmp
cli
std
add
add
jne
in
movsl
adc
xchg
pop
inc
int3
sahf
iret
loopne
xor
pop
lea
cmp
in
cld
push
leave
jne
js
push
jo
mov
mov
roll
mov
insl
je
sub
lods
and
sbb
mov
sub
ljmp
push
test
stos
std
mov
dec
aas
xor
imul
and
test
cmp
jns
dec
dec
imul
cmc
scas
adc
ss
inc
mov
push
popf
bt
and
xor
pop
cltd
lcall
es
push
rorl
cmpsl
sub
dec
mov
mov
fildl
pop
flds
add
mov
shrb
insb
in
dec
mov
cmc
ds
pop
js
jge
jmp
lcall
xchg
lds
daa
inc
pop
mov
ss
loope
sub
jo
fdivs
clc
adcl
shrl
dec
mov
test
fs
mov
xchg
dec
inc
adc
ds
jbe
iret
scas
std
and
xchg
fldl
enter
pop
xchg
mov
jg
xor
mov
lods
or
int
pop
xor
ljmp
mov
mov
pushf
jp
in
sbbl
sbb
aam
stc
ja
scas
ss
mov
fstl
push
call
push
rolb
sbb
fiadds
inc
fimuls
mov
cmp
add
shrl
push
add
js
mov
popa
mov
pop
cwtl
sbb
sahf
xor
dec
push
scas
shl
mov
push
rorl
fldenv
loopne
jge
jno
jae
sti
dec
add
xchg
xor
cmpsl
fnstcw
outsl
push
out
ss
add
mov
scas
xchg
cwtl
xor
cld
mov
adc
jle
adc
mov
lods
mov
xor
jnp
pop
sub
and
lret
adc
push
push
pop
xor
call
jge
xor
aam
notb
mov
and
aaa
xchg
pushf
xchg
inc
repz
xchg
sbb
mov
outsl
imul
outsl
out
dec
jno
pusha
cmp
shll
les
cltd
ja
mov
sbb
inc
xor
fldt
fidivl
icebp
cmp
or
jno
dec
jp
mov
aam
dec
xchg
hlt
xchg
pop
dec
jmp
inc
push
insl
pop
pop
daa
adc
aas
push
arpl
push
test
adcl
pop
arpl
jns
mov
leave
addr16
add
arpl
in
insb
push
inc
mov
dec
test
cmp
in
mov
sbbl
sarb
mov
cli
pop
loopne
repnz
mov
jno
inc
xchg
xor
dec
add
roll
dec
cli
dec
mulb
pushf
fldl
mov
cmp
cmpsb
mov
repz
shrl
mov
push
dec
es
mov
push
xor
psubusb
jb
mov
mov
in
dec
in
jb
call
inc
in
inc
fwait
test
mov
loop
lea
xchg
shll
sti
xor
mov
popa
das
fwait
pushf
fcmovbe
add
add
sub
adc
xchg
sub
ret
idivb
hlt
xor
sahf
scas
and
add
cmp
push
mov
negb
into
scas
dec
push
fs
stos
xorl
xchg
xor
stc
addr16
sub
push
leave
xor
sub
mov
sbb
cli
jns
bound
and
push
test
sub
std
ss
cmp
ret
jno
out
aam
jns
or
xchg
mov
pop
mov
mov
adc
test
ja
imul
repnz
push
mov
mov
push
scas
icebp
push
lods
sbb
pop
sub
aad
xor
cmp
xchg
fstpt
test
jmp
jmp
pop
dec
test
sbb
add
cmpsl
fnsave
push
push
inc
push
nop
icebp
into
fistpl
or
cmp
mov
xchg
decl
pop
and
add
mov
lods
es
dec
mov
cmc
ror
hlt
or
in
test
sbb
popf
mov
loopne
clc
fsubrs
jl
sti
lds
or
xor
into
push
sti
and
pop
in
cltd
sub
add
xchg
test
push
imul
mov
and
into
pop
add
jg
decb
outsl
in
js
mov
xchg
jnp
mov
inc
xchg
xor
in
mov
or
jecxz
push
bound
in
mov
and
lret
pop
cmp
lock
fldl
mov
mov
scas
cwtl
stos
jbe
sub
mov
arpl
ljmp
stos
pusha
testb
inc
aaa
out
inc
sarl
sbb
pop
mov
mov
nop
lret
insl
lods
sub
adc
out
aas
cmp
fcoml
shl
test
cli
cmp
stos
imul
fadds
ret
ljmp
les
mov
jp
adc
xchg
lods
and
ljmp
or
add
pop
out
sbb
lea
xchg
dec
and
push
stc
dec
aad
subb
loopne
inc
xchg
jne
pop
add
bound
xor
mov
lcall
scas
mov
sub
xchg
cmp
in
imul
ret
in
cmp
cmp
int
inc
enter
pop
inc
nop
mov
add
sbb
sarl
pop
mov
push
fstpt
sbb
out
gs
or
in
sarl
les
aad
xor
ret
or
mov
mov
ret
push
mov
dec
sub
cmp
fnstenv
dec
sbb
cmp
pop
inc
pop
cmp
out
mov
xchg
ljmp
int3
xchg
das
and
int3
paddsw
loopne
pop
sub
mov
std
xchg
mov
mov
and
ficomps
jae
cmpl
adc
inc
sahf
mov
cmp
divl
push
mov
xor
jo
inc
test
mov
push
xor
nop
xchg
aas
insb
mov
mov
inc
pusha
stos
push
xor
cmpsb
sahf
xchg
push
mov
push
cmp
push
mov
xor
pushf
cli
xchg
lock
lea
cmpsb
scas
dec
inc
or
mov
mov
outsl
cmpsb
mov
je
mov
iret
scas
push
xchg
inc
adc
xchg
inc
in
push
es
xchg
adc
loopne
add
dec
cltd
lahf
dec
in
mov
mov
pop
mov
adc
adc
adc
popa
in
sbb
mov
cmp
and
fnsave
lock
repnz
hlt
mov
adc
mov
repz
fsubl
jmp
fs
inc
ret
inc
mov
jnp
mov
or
cli
and
sbb
bound
add
mov
int
mov
inc
scas
stc
xchg
dec
lds
cmpsl
inc
cld
outsl
or
cmp
adc
mov
daa
insb
jae
fcomps
pop
mov
jg
sub
push
int3
js
and
jmp
or
test
gs
dec
sbb
cmp
push
ret
sbb
pop
stos
and
fsts
add
aas
vcvtdq2pd
jge
push
xchg
mov
rorb
mov
inc
outsl
call
push
aad
scas
movsl
js
mov
mov
fisubrl
pusha
sub
and
xorl
daa
or
ds
les
pop
inc
sbb
jl
sub
cli
xchg
fsubs
or
dec
fsubs
adc
sbbl
fcoml
jmp
add
push
dec
mov
jg
jae
mov
in
cmp
das
inc
lret
push
fwait
lock
add
das
sub
loopne
or
push
movsl
lock
pushf
sbb
mov
sub
daa
push
or
dec
mov
loopne
or
enter
mov
aas
stc
je
gs
cltd
inc
loop
xor
mov
lds
imul
push
add
mov
push
mov
cli
xchg
xor
and
test
insb
jge
xchg
stos
xor
je
inc
test
push
push
cmc
mov
and
or
mov
in
jmp
enter
or
jle
sub
aad
xor
lcall
jno
les
pop
adc
push
mov
jmp
bound
insb
insb
and
jecxz
mov
or
push
xchg
pop
rorl
fimuls
or
add
jno
pop
push
xchg
rcll
bnd
xlat
lock
scas
push
add
and
add
lret
inc
xchg
icebp
fbstp
mul
sti
in
push
lds
pusha
jg
push
maskmovq
negl
xchg
ja
inc
outsb
in
ffree
scas
mov
dec
mov
sub
scas
dec
shlb
imul
repz
jge
daa
xlat
push
scas
imul
je
jmp
sbb
out
jne
xor
sti
in
ret
or
mov
or
pop
sbb
rcr
jl
mov
loop
insl
fnstcw
jmp
adc
jb
inc
jno
into
sbb
cmp
sbbb
ljmp
cmp
fildll
aad
add
inc
inc
int3
jecxz
jp
into
mov
jb
cmp
outsl
jnp
sub
push
imul
int3
or
mov
cmp
test
inc
sub
cld
cmc
dec
ja
mov
hlt
mov
aam
fwait
insl
or
gs
jnp
jmp
in
sti
insl
fidivs
jmp
scas
ror
dec
mov
fadd
rcll
ret
fnsave
in
cmp
sub
out
out
enter
aad
mov
jns
fcom
inc
add
mov
xlat
jp
cmp
das
sbb
gs
xlat
push
popf
sbb
lock
lods
xchg
pushf
sub
imul
in
or
pop
inc
rolb
or
cli
pop
repz
clc
dec
stc
mov
test
xor
cmpsl
test
imul
jns
incb
sbb
test
mov
mov
mov
inc
fwait
add
movsb
xorb
xchg
cmpsb
stos
adc
and
dec
popa
push
xorl
sub
cmpsl
lcall
or
jl
repnz
xorl
mov
lea
cmp
call
shrl
adc
pusha
add
sub
sbb
mov
pushf
loopne
or
pushl
mov
jmp
pop
ficompl
cs
cmp
fldenv
and
sub
mov
hlt
jmp
adc
lret
mov
xchg
scas
fnsave
cwtl
sub
loope
and
mov
adc
xchg
sub
pop
sarl
aas
mov
clc
cmp
test
gs
inc
lods
lcall
ds
dec
adc
pop
sub
repnz
fbstp
fscale
sti
dec
fwait
or
arpl
test
or
sarl
sbb
dec
mov
mov
iret
sbb
aad
js
add
jo
fists
mov
xor
lret
mov
repz
fists
or
jbe
sbb
rcr
lahf
in
shrl
sub
mov
xor
jg
adc
lods
js
push
aad
cmp
push
loopne
push
pushf
imul
jge
dec
jns
repnz
test
xor
pop
push
cltd
jns
and
loop
sub
out
jmp
lds
inc
mov
add
aad
push
rcrl
test
rolb
aad
mov
dec
jl
add
adcl
out
adc
sbbw
xor
or
push
arpl
test
jmp
filds
jbe
or
or
in
sti
xor
ud0
fsubrl
int
jp
mov
dec
pop
add
sbbl
adc
ds
bound
andl
ret
add
imul
fstpl
ja
insl
xor
cltd
xchg
xchg
in
hlt
xchg
cmp
or
addr16
add
mov
bound
dec
clc
xor
rcrl
call
enter
mov
sub
mov
xchg
or
andl
inc
sahf
ret
sti
mov
stc
mov
les
inc
test
out
mov
xor
dec
cmp
mov
call
mov
pop
push
aam
dec
push
cwtl
repz
jno
push
jp
xor
sub
fildl
mov
lcall
sbb
dec
push
mov
test
dec
jmp
mov
mov
jle
aas
arpl
cld
es
add
or
stos
shl
mov
repz
sbbb
clc
push
pop
cs
fxch
int
add
fldenv
out
jge
pop
imul
mov
lret
add
add
popf
into
movsl
data16
and
adc
dec
mov
xor
lods
add
add
adc
ret
inc
outsb
incl
cmc
pop
sarb
pop
fcompl
pusha
add
mov
test
lock
cli
out
push
jg
jb
cs
test
loopne
shrb
jno
mov
jmp
mov
jns
cmpsb
mov
xor
das
pop
fildll
sub
dec
scas
aad
jl
sahf
leave
sub
or
or
neg
mov
mov
stos
or
sub
or
cld
ljmp
mov
mov
pop
jne
add
xchg
shrb
aam
in
mov
fsubl
push
xchg
jns
pop
shlb
mov
pusha
push
cmpsl
fldl
cmp
xchg
popf
mov
iret
adc
jnp
popa
imul
lahf
rorl
jbe
pop
xor
gs
fnstenv
cltd
and
call
movsl
imul
scas
sbb
shlb
xlat
mov
pop
cmpl
stos
lahf
or
iret
mov
xchg
js
jmp
or
idivb
inc
shl
pop
test
out
pop
mov
inc
bound
ficoml
enter
jmp
outsl
pop
lods
sbb
mov
xchg
cmpsb
shlb
das
add
mov
fsubrl
xchg
mov
dec
lret
sbb
imul
xchg
adc
xchg
push
jb
out
dec
insb
loope
in
xchg
lods
xchg
xor
testb
cmp
enter
and
dec
testb
push
lahf
push
addr16
mov
push
pop
cmc
aad
in
dec
mov
int3
lret
aam
push
jnp
dec
jg
cmp
pop
and
add
dec
in
jne
sbb
mov
loope
jmp
or
or
push
jbe
popf
jecxz
push
jbe
mov
and
enter
mov
enter
es
and
sub
push
popf
sub
jo
ljmp
xchg
mov
jns
cs
adc
pop
xlat
cmp
out
pusha
dec
call
jp
out
rorl
cmp
inc
and
jo
fs
fs
inc
lea
push
je
in
jp
cmp
push
or
repz
adc
mov
shll
dec
jae
pop
pop
cmp
je
fldt
jmp
jnp
xlat
mov
jns
test
in
push
mov
mov
jle
out
repnz
fbstp
inc
inc
out
cltd
or
in
pop
aas
add
push
inc
jo
jo
mov
or
ds
dec
scas
ret
das
mov
dec
mov
scas
jp
jge
mov
dec
mov
mov
jecxz
push
mov
das
cld
xorb
jmp
xchg
aad
push
inc
cwtl
dec
mov
loopne
sbb
outsl
xchg
test
lret
jecxz
testl
mov
arpl
push
pop
cld
mov
dec
repz
xor
movsb
push
les
aas
dec
aam
push
mov
aaa
mov
push
ljmp
mov
int
insb
insb
lea
int3
mov
movsl
data16
dec
call
push
jno
rcrl
sbb
add
push
adc
call
je
movsl
and
cmpsb
sub
insl
fcomip
imul
sub
pop
push
or
das
sbb
mov
adc
rol
shrb
rcrl
xchg
pop
or
out
push
insl
out
rorl
push
mov
daa
divw
into
mov
pop
or
dec
mov
fildll
mov
jmp
push
dec
inc
inc
lret
push
shrb
movaps
push
cwtl
scas
out
inc
cltd
pushl
sub
xchg
repnz
pusha
hlt
cli
sahf
mov
adc
and
push
xchg
movsl
mov
int
mov
or
das
cmp
fsubl
jae
cmpb
insb
push
and
nop
fs
and
mov
fildl
xor
add
sub
aas
movsb
std
xchg
in
xor
outsb
outsb
mov
xorl
lahf
aad
cwtl
and
add
test
lret
int
or
mov
adc
in
xor
add
popf
push
xor
mov
mov
out
and
sub
jb
ret
cmp
in
cld
push
push
inc
fcoms
rcrl
jno
inc
inc
cli
insl
sub
outsl
inc
push
and
pop
lret
jmp
cld
ss
or
cmpsl
cmp
test
adc
add
fdivs
gs
pushf
ret
scas
pop
push
jmp
mov
dec
ret
shrl
cmp
push
sub
dec
xor
stc
push
and
sub
xchg
les
xchg
push
lcall
rclb
dec
mov
popa
ja
mov
sub
out
stc
je
sbb
add
inc
lds
js
fdivrp
xor
int
aam
inc
repz
adc
cmp
xchg
aaa
lock
mov
and
std
pop
shrl
fidivl
add
mov
scas
test
fwait
push
insb
aas
add
jb
pop
psubsb
dec
repnz
sbb
outsl
mov
bound
xchg
imul
sbb
push
jae
mov
popa
dec
gs
inc
push
push
fdiv
cld
les
jnp
pop
add
mov
out
add
fcos
dec
into
out
out
fwait
push
push
sbb
hlt
mov
inc
iret
je
and
mov
in
sub
imul
mov
mov
mov
jmp
out
xchg
push
or
or
mov
mov
dec
les
roll
mov
mov
push
and
enter
aaa
fs
mov
testb
std
stos
mov
cli
jge
jmp
pop
cmpsl
mov
cmp
int
scas
dec
xor
in
cmp
aaa
icebp
and
xorl
enter
loop
mov
push
dec
and
mov
xor
jo
sar
ds
jbe
ds
into
ret
enter
fisubl
loope
mov
dec
fs
lods
cmpsl
add
out
mov
push
jbe
sbb
add
hlt
mov
xor
insb
xchg
loop
push
pop
stc
pop
cwtl
in
icebp
addl
sarl
sbb
adc
ror
lret
stos
sub
pop
cmp
xor
add
das
aas
daa
xchg
aam
mov
pushf
je
sub
fimuls
scas
jo
loopne
out
or
incl
ljmp
in
add
sbb
xor
jns
int
lss
jns
mov
mov
rol
dec
push
mov
xchg
insb
fwait
xchg
mov
fistpl
xchg
push
out
push
mov
push
cmp
stos
pop
into
pop
jge
incb
ja
std
adc
mov
insl
out
rcr
or
xchg
ret
lahf
cwtl
in
imul
pop
push
js
dec
pop
shlb
mov
and
test
test
mov
ljmp
das
shll
dec
js
mov
and
loopne
mov
enter
lahf
cwtl
nop
jnp
mov
ss
push
int
or
add
aas
cmpb
sbbl
xor
shrb
in
sbb
bswap
sbb
mov
mov
sub
call
xor
mov
mov
xchg
pop
xor
imul
adc
sbb
jne
out
ljmp
cmp
push
push
mov
sbb
mov
icebp
pop
jnp
inc
dec
push
jge
iret
bound
std
roll
push
or
movb
fs
sub
pop
js
aam
xchg
sar
sub
in
cmp
mov
or
sub
mov
jne
mov
sbb
push
mov
pop
cltd
fidivs
popa
cmp
sbb
popa
ret
cld
dec
int3
es
push
mov
dec
test
cmpsb
sahf
mov
stos
inc
sbb
lea
cmp
add
and
cli
sbb
xchg
cmp
fbld
inc
loop
pop
ds
rorl
dec
cld
lods
lret
fsts
in
pminsw
gs
pushf
lods
ds
push
mov
xor
ss
cmpl
outsl
in
sbb
xor
inc
inc
cmp
mov
jp
sub
dec
repz
pop
js
je
mov
ret
ja
imul
mov
push
lret
out
sti
jne
xchg
and
xchg
fnsave
fidivrl
jl
push
mov
loop
xor
dec
and
and
adc
movsb
aaa
in
pop
fdivp
into
js
or
xchg
xbegin
addl
push
cmp
mov
stc
gs
mov
push
js
xor
push
push
pop
arpl
pop
ds
dec
test
sub
imul
pop
lea
gs
sbb
xor
outsb
into
inc
mov
outsl
shlb
dec
daa
push
popa
ret
sahf
pushf
inc
mov
adc
out
fistpll
fldt
pop
aam
popf
mov
outsl
or
pusha
enter
push
xchg
pop
jge
sarb
adc
fimuls
ds
mov
in
lods
roll
in
sti
lret
lods
lea
push
ret
cmpsl
loope
adc
cmp
das
xchg
leave
in
ret
clc
or
mov
mov
out
or
push
cmp
or
mov
out
mov
add
jno
out
jno
mov
jl
cmp
lods
mov
addb
and
jecxz
xor
fsubp
adc
mov
lods
dec
outsl
daa
ror
jmp
shlb
or
jae
repz
insb
mov
fstps
cmpsl
or
enter
aaa
popf
mov
sbb
ror
dec
out
add
movsl
dec
pop
int
mov
cld
jmp
jb
enter
aad
sub
lea
into
inc
cmc
repnz
cmpsb
in
negb
aad
daa
mov
in
or
popf
popa
loopne
lcall
hlt
loop
test
test
addl
punpcklwd
aaa
rolb
dec
mov
push
repnz
fwait
xchg
lods
es
adc
repnz
mov
or
cld
popf
movsl
push
insb
jle
sub
mov
xor
fists
ret
mov
clc
push
fcmovnu
lea
ret
aaa
push
add
add
mov
push
aaa
movsl
js
dec
dec
gs
cmp
scas
out
pop
imul
mov
push
bound
dec
pop
push
mov
jb
cwtl
mov
add
xchg
and
mov
test
mov
mov
and
or
into
stos
lock
mov
xor
out
xor
hlt
push
jne
push
push
add
call
and
mov
xor
in
out
jo
ret
add
imul
icebp
mov
leave
orl
lahf
xchg
cmc
int
pop
pop
cmp
xchg
and
rolb
jbe
fdivl
jns
jno
fidivrl
push
in
pop
lahf
jnp
nop
mov
cli
lcall
addr16
cmp
jecxz
mov
push
ret
jl
rcrl
add
xorl
jae
xchg
xchg
shl
inc
std
push
sub
movsl
stc
xlat
into
imul
aas
stos
es
mov
pop
cmp
ljmp
pop
ret
push
push
test
sbb
scas
or
fwait
mov
or
inc
add
sarl
push
cmp
bound
inc
cltd
xchg
je
cmp
or
cmp
movb
jg
mov
mov
inc
jno
mov
sbb
mov
mov
roll
push
aaa
into
arpl
ror
xor
or
xchg
insl
movsb
add
cmp
push
jge
addr16
in
inc
insl
jb
mov
jg
sbb
xor
cmc
xchg
popa
shll
mov
fdivl
test
inc
jae
xchg
cmpsb
loope
fisttpll
das
mov
pop
xor
popa
mov
mov
push
fdiv
jbe
pop
sbb
push
push
sahf
pusha
daa
imul
add
mov
adc
sbb
push
cmp
or
cmp
cltd
scas
fnstsw
test
stc
pop
push
rolb
xlat
rcrl
dec
or
leave
sub
lret
lret
cmp
push
push
ror
in
repnz
add
lods
movsl
jl
dec
pop
icebp
jae
sub
push
push
into
push
xchg
pop
scas
enter
lret
les
ret
adc
faddl
ja
add
or
xchg
pop
sbb
push
lea
fisubs
insl
mov
dec
aad
stos
imul
sbb
insl
int
add
add
push
adc
gs
ljmp
and
push
xchg
ljmp
je
mov
int
lret
imul
lret
push
rorb
jns
sti
xchg
mov
gs
dec
repz
test
sarb
adc
pop
mov
cli
jo
sbb
jo
inc
bound
idiv
popl
lcall
pop
pusha
aas
sub
jge
loop
cli
jge
nop
xabort
ljmp
paddusb
rcrb
push
xchg
cltd
jo
or
movhps
lret
fdiv
dec
andb
imul
push
jne
pop
jo
addr16
arpl
push
addl
pop
adc
lret
xor
jno
add
or
into
in
fldcw
jbe
and
jmp
add
mov
in
sub
sub
jns
decb
insl
adc
cmp
push
mov
test
adc
jo
or
iret
fs
xor
aam
hlt
adc
jae
pusha
mov
cmpsb
pop
mov
leave
in
adcb
pusha
jle
cmp
mov
adc
sbb
mov
call
pusha
in
add
mov
les
add
push
or
loop
inc
dec
pop
adc
xchg
sbb
mov
stos
sbb
push
fwait
dec
mov
sub
and
cmp
mov
lret
testb
cltd
pop
aam
std
xor
sub
push
adc
rcll
cwtl
jmp
pop
rorl
fstpl
and
push
rcll
cmp
push
rcrb
cmpsb
push
aam
jle
and
cmpsl
movsl
cmp
cmc
lcall
out
and
mov
push
ret
lret
out
divb
ret
mov
in
sub
cmpsb
pushf
insb
xor
mov
mov
xchg
pop
sbb
fsub
stos
or
fnstsw
movsb
cmp
push
mov
pop
cmpsb
sub
sub
mov
bound
mov
xchg
cmc
lods
loopew
loop
xchg
adc
dec
jno
add
adc
jecxz
or
cmc
mov
lret
and
jp
xchg
xor
inc
sbb
scas
add
pop
mov
fcmovu
xchg
lods
mov
notb
int
stos
mov
out
sbb
cmp
add
out
roll
adc
fadds
cmp
call
repz
andb
or
dec
fs
lods
or
loop
xlat
mov
jle
xor
lahf
les
mov
and
ficompl
mov
cltd
lcall
cmp
int3
dec
jmp
fwait
mov
push
add
mov
xlat
or
push
jg
addr16
out
aad
int3
ds
or
xchg
mov
mov
movsb
pushf
in
imul
sbbb
out
andl
int3
insl
cmpsb
fstps
mov
out
fldcw
mov
shll
stos
pop
push
ljmp
sbb
jb
xorl
mov
mov
xor
add
cld
inc
sti
dec
lahf
mov
inc
filds
imul
nop
rclb
cmp
pop
sahf
mov
mov
and
sbb
sbb
push
movsb
cmpsb
jns
cld
repnz
adc
or
addr16
lret
xchg
and
cwtl
popf
orl
nop
adc
xor
scas
cli
test
fucomp
mov
rcrl
jnp
inc
aas
cwtl
ljmp
pop
pop
addb
mov
push
sub
jo
adc
repnz
add
inc
xor
fs
gs
ret
aaa
fwait
xchg
call
sti
or
and
stc
das
popa
jecxz
ret
sbb
dec
shll
jne
fisubs
daa
adc
cmp
mov
jae
dec
adc
test
push
inc
push
sub
dec
mov
cmpsb
jbe
inc
adc
sub
dec
repz
sbb
inc
movsb
and
mov
das
mov
mov
push
sti
in
int
ficompl
aad
adc
jne
push
das
leave
jns
pop
int
mov
inc
or
sti
jmp
inc
fistps
mov
xlat
das
inc
mov
push
icebp
lahf
das
lds
or
lea
inc
sub
ret
pusha
pop
scas
std
adc
out
in
xchg
movsb
xor
jmp
arpl
mov
test
dec
cli
insl
push
stc
inc
mov
push
jns
mov
xchg
test
pop
cmpsb
mov
inc
lods
ret
loopne
and
in
xchg
fdiv
add
js
call
into
pop
xchg
pop
and
sti
mov
test
sub
test
stos
jp
leave
mov
xor
scas
pushf
jbe
pop
leave
in
cmp
dec
shlb
dec
dec
jno
leave
shll
or
xor
inc
mov
movsl
or
repz
test
imul
fidivrl
mov
cmpsb
sbb
inc
sbb
or
ljmp
insb
add
cmc
add
dec
dec
loop
out
out
call
dec
int3
out
xor
out
mov
clc
loop
cmpl
sbb
inc
xchg
pop
mov
jno
in
ss
push
or
mov
and
add
xlat
stos
aaa
stc
pop
mov
mov
jl
adc
sahf
lret
xchg
xchg
outsl
fs
loop
incb
sti
pslld
xchg
push
xlat
adc
ds
cwtl
leave
inc
jbe
xchg
rcrl
and
mov
xchg
imul
imul
stos
outsb
shlb
xor
mov
orl
ret
outsb
and
insl
sub
outsl
or
mov
jp
xchg
mov
add
loope
bound
stc
in
sub
dec
or
lea
xor
shll
xchg
xor
into
jo
into
mov
data16
es
icebp
ss
sarb
cmpl
dec
pop
adc
or
dec
enter
int
shlb
adc
mov
push
push
mov
icebp
inc
push
add
mov
and
in
popf
mov
mov
push
push
xchg
mov
in
int
xchg
loope
fidivrl
mov
add
imul
insl
xor
call
dec
out
mov
jnp
les
shl
add
in
lock
daa
sahf
es
mov
pop
mov
mov
sbb
push
adc
push
push
nop
in
mov
inc
scas
mov
sbb
dec
push
adc
sub
xchg
mov
xor
xchg
jb
fidivrs
frstor
xor
and
mov
jle
and
xor
sbb
addr16
fnsave
mov
lcall
cmp
lock
aam
ret
test
rorb
pop
and
pushf
or
mov
mov
xchg
movsl
xlat
in
bndstx
nop
or
sarl
cli
cmp
jp
pop
movsw
loope
xor
stos
popa
add
push
mov
fcomi
add
rcrb
mov
mov
add
clc
clc
mov
jo
mov
fists
cwtl
jecxz
int3
idiv
shl
sbb
mov
xor
jns
stc
div
sub
movsl
cmp
test
ret
jnp
out
rolb
jbe
mov
xchg
in
cmp
dec
ret
fdiv
pop
xchg
repz
dec
xor
out
iret
cli
les
lret
ret
mov
push
xchg
jg
adcb
jmp
cltd
pop
push
jmp
les
push
ljmp
cmp
dec
test
and
fwait
icebp
xor
pop
mov
jno
negb
mov
mov
xlat
mov
mov
xlat
add
push
ret
ds
insl
and
dec
push
jbe
mov
push
lods
dec
push
lret
dec
lods
xchg
push
and
fnstcw
push
add
or
mov
mov
dec
xlat
inc
sub
cmp
testl
sti
inc
push
movsb
ss
sub
push
movsl
mov
or
movsl
out
adc
dec
ss
outsb
jl
jle
ret
pop
outsl
mov
mov
lret
outsb
xchg
push
xorb
or
std
out
push
jg
ljmp
icebp
mov
add
hlt
mov
jp
mov
js
lahf
ljmp
pop
pop
push
jo
fs
orl
dec
push
mov
stos
sarb
ficompl
in
mov
dec
inc
rolb
scas
cld
xchg
stos
lret
jg
inc
inc
push
lcall
lods
dec
sarl
and
leave
pop
insl
movsb
mov
add
mov
mov
imul
repz
xlat
and
pop
ss
mov
gs
dec
inc
insl
dec
and
loope
xchg
sbb
cmp
cmpsb
bound
and
rclb
cwtl
push
clc
popf
sub
icebp
jbe
push
ret
sub
je
jb
add
mov
cwtl
cld
pop
dec
flds
imul
inc
add
dec
ret
lods
cmp
scas
push
push
cmp
or
add
or
mov
jl
ret
xchg
jmp
aas
and
out
cmp
mov
lods
add
add
push
pop
xor
rcll
and
movsl
mov
pop
sbb
dec
add
iret
test
cmp
pop
dec
xor
rolb
jb
xor
popf
adc
pop
mov
xchg
mov
daa
ljmp
cltd
lahf
bound
je
jecxz
dec
mov
cmc
in
fucomi
sahf
sbb
popa
hlt
rcrl
inc
pop
outsl
mov
dec
movsl
push
lcall
add
mov
add
pop
inc
ret
cmpsb
lahf
mov
sub
lock
jae
fmull
cmp
sub
xor
inc
rol
jo
xor
push
sbb
mov
les
push
stos
sub
imul
mov
jl
mov
and
and
jg
aaa
aam
mov
lds
jns
rcrl
xor
sbb
das
out
pop
shlb
or
xor
leave
fsubr
push
or
add
mov
lds
test
lcall
inc
fistpll
mov
ret
push
push
mov
adc
fadd
aam
daa
sarb
mov
push
inc
mov
repnz
repnz
popf
sahf
mov
sub
add
mov
push
push
aam
jae
jns
aam
xor
ss
mov
notl
push
bound
and
je
xchg
scas
xchg
imul
lods
sbb
jge
push
gs
ds
or
repz
jmp
movsb
sub
adc
ja
mov
jg
lcall
data16
pop
add
insb
popf
loopne
movsb
xchg
jns
test
mulb
fildl
icebp
pop
inc
mov
and
add
sbb
lret
sub
repnz
dec
add
lcall
mov
xchg
out
inc
in
rorb
lock
push
bound
aas
inc
pop
sub
adc
pop
xor
pop
mov
out
gs
cmp
sarl
mov
sbb
fs
sub
sub
lea
scas
sub
cld
dec
add
sti
addr16
mov
pop
outsl
inc
jb
mov
lfs
mov
xchg
lock
cmp
jg
inc
xor
popa
aad
lds
out
in
jg
cltd
push
or
jno
and
jp
fdivl
cmp
mov
jno
sarb
mov
push
mov
ret
ror
inc
inc
shrb
gs
pop
add
adc
push
pop
adc
sub
daa
addr16
adc
xchg
dec
inc
fs
es
mov
shrl
mov
sbb
out
test
dec
int
scas
sub
out
shld
rolb
mov
stos
notl
jg
xchg
inc
mov
ljmp
add
popf
push
ret
inc
mov
mov
add
lcall
pop
es
arpl
or
cwtl
fdivrl
sbb
andl
and
pop
xor
js
adc
ja
adc
popa
mov
or
movsb
cs
inc
pop
inc
cmpl
notl
push
dec
inc
cmpsl
pusha
sbb
ret
repnz
jns
cmp
jecxz
or
inc
mul
inc
fwait
pop
sbb
or
lods
fidivrs
outsl
or
imul
pminub
adcb
or
fimuls
xchg
test
mov
cmpsl
test
sti
daa
pushf
fstpl
xchg
insl
in
add
pop
pushf
jmp
shlb
out
xchg
push
push
pop
mov
jl
xchg
add
xchg
jecxz
add
pop
rcrl
popf
mov
repz
aaa
mov
xchg
adc
fsubrs
lock
xchg
pop
cmp
mov
subb
push
loop
xor
push
add
jp
add
mov
sbb
lods
pop
popf
fnsave
pop
push
sbb
mov
or
cli
gs
pop
adc
fnstenv
adc
ret
out
sub
js
jbe
pop
xchg
call
add
lcall
mov
and
hlt
xor
ror
cmp
out
outsl
call
mov
icebp
test
inc
push
mov
test
sbb
add
push
clc
test
cmp
out
jmp
add
sahf
pop
popa
mov
mov
loope
cmp
outsb
xor
test
push
js
ds
fcmovnu
push
fcoms
dec
push
inc
jo
sub
test
mov
xor
push
sar
loop
sbb
imul
adc
inc
mov
cmp
lods
sub
les
mov
in
fldl
push
lret
mov
push
negb
mov
cld
fdivrl
adc
sub
xchg
pop
add
inc
in
dec
rclb
cs
and
dec
xchg
mov
incl
jge
xchg
xor
jnp
add
gs
mov
out
into
stc
xchg
ljmp
out
insb
cmp
mov
cmp
lods
xchg
mov
outsl
or
add
push
and
js
sbb
imul
mov
xor
ds
mov
adc
mov
daa
dec
jg
int
lock
mov
cltd
imul
into
divb
mov
das
clc
cld
or
popa
jle
push
bound
fcomip
cmpsl
or
add
mov
mov
mov
icebp
sub
add
add
sbb
repz
imul
dec
and
xor
jp
inc
loop
sub
inc
mov
jne
dec
rcr
mov
jge
cli
xchg
bound
es
or
cmpsl
cld
stos
push
cmp
int3
and
cmc
lods
bound
pop
pop
inc
cld
push
sub
fidivrl
mov
push
clc
xchg
xchg
dec
xchg
cmp
jne
jne
jo
test
mov
fsts
lods
cmp
cmp
push
pop
sti
ljmp
mov
xchg
fldz
or
bound
and
adc
sar
test
push
daa
popa
or
fsubs
xchg
in
fs
cld
std
jmp
stos
xchg
add
outsl
xor
add
test
bswap
sbb
andb
sbb
sub
fadds
add
test
lret
lahf
inc
cwtl
out
arpl
mov
pop
jb
xor
or
xor
js
inc
movsb
xor
mov
sbb
clc
sbb
push
xlat
jbe
sbb
cmp
push
mov
push
mov
hlt
pusha
sbb
mull
mov
ljmp
adcl
mov
daa
outsb
adc
add
call
fidivrl
xor
mov
stos
movsl
imul
mov
in
les
xchg
xlat
jne
out
sarb
out
clc
xchg
sbbl
mov
incb
test
inc
ds
rorl
sti
fdivrl
mov
xchg
xor
ja
pop
push
xor
ret
xchg
addl
jno
nop
inc
push
std
mov
call
shrb
pop
push
jbe
push
imul
xor
loopne
pop
dec
dec
in
inc
cmp
inc
fstpt
cmp
or
imul
cmpsl
or
or
dec
mov
push
adcl
out
jp
xchg
daa
loopne
stos
aad
sbb
xor
sub
adc
daa
lcall
mov
mov
add
mov
stos
mov
mov
js
out
adc
ja
inc
dec
xchg
mov
dec
jne
dec
or
pop
mov
pmulhuw
dec
dec
push
lods
or
cs
popf
das
pop
aad
loop
xchg
adc
fimuls
jle
mov
pop
out
cmpsb
repz
rcpps
insl
or
jge
dec
int3
pop
jmp
jb
inc
or
and
outsl
cmp
adc
xlat
push
cmpsb
shrl
and
sbb
fdivrl
fidivrs
icebp
out
fidivrl
dec
adc
or
jmp
jne
into
push
hlt
cmp
sub
inc
out
shl
fs
jg
outsl
sub
dec
imul
cmp
adc
cwtl
xchg
jne
std
pop
pop
cmpb
mov
insl
filds
inc
sbb
test
xor
inc
add
jbe
add
call
push
int
shl
pop
fbld
repnz
mov
cmp
mov
fimuls
push
push
lahf
inc
sub
adc
push
aam
and
inc
push
pushf
jne
inc
out
lods
addr16
mov
or
aam
and
sarb
shll
lret
sbb
push
sbb
gs
js
sub
insb
pop
xor
cltd
mov
pop
mov
gs
ret
in
dec
sub
mov
mov
sub
adc
mov
insb
aam
pop
mov
mov
insl
mov
lock
and
fs
rcrb
in
mov
adc
jle
leave
pop
mov
sub
push
in
pop
jl
push
lret
mov
lret
scas
sti
in
jo,pt
push
pop
sub
icebp
lretw
pop
cli
scas
mov
xor
lahf
cmp
call
stc
and
cli
iret
insl
daa
lods
aas
test
fstpt
xor
nop
fiaddl
out
cltd
mov
ret
aaa
sbb
jbe
cmp
xor
cmpsb
cmp
fwait
pop
scas
xor
enter
stc
cs
es
sbbl
dec
push
shld
inc
fwait
in
and
negl
lods
lds
loope
into
fimuls
xchg
jge
add
xorl
push
bound
or
fcoml
sti
mov
out
hlt
clc
mov
inc
add
cmp
add
cld
pop
test
push
xor
cli
loope
fldt
shl
jno
pop
push
por
cmc
sbbl
add
inc
insl
aas
cmp
testb
mov
mov
cwtl
xchg
mov
jl
mov
mov
movsb
loop
addr16
ds
mov
mov
lcall
pusha
data16
jb
mov
imul
cmp
fsubl
andb
fdiv
jne
cmp
pop
push
cli
push
sub
scas
inc
mov
int3
aam
das
jg
dec
sbb
mov
or
push
adc
or
mov
lds
int3
or
call
loopne
lcall
mov
lcall
add
mov
pop
jns
sbb
scas
cmpsl
xor
aam
cmp
mov
jo
pop
pop
in
or
les
adc
pop
rcll
je
inc
clc
cmpsl
out
popa
pop
mov
mov
fwait
into
push
pop
sub
jecxz
repnz
xor
xlat
jmp
dec
and
push
insl
jbe
repz
and
loopne
push
insl
orl
mov
in
and
jmp
xchg
lods
cmp
loopne
push
jl
dec
mov
or
inc
mov
add
mov
jns
or
xor
pushf
flds
sub
mov
shrl
push
sub
mov
div
in
mov
fistpl
push
xor
mull
movsl
mov
sub
dec
mov
nop
or
jnp
sti
mov
fnstenv
outsl
add
jle
pop
pop
mov
rcrb
xor
call
xchg
mov
outsl
fists
std
or
rcll
cmp
les
scas
shrb
imull
xchg
cs
stc
add
shll
and
mov
loope
mov
xchg
les
pushf
outsb
bound
rclb
push
cwtl
iret
mov
mov
mov
aam
stos
mov
pop
adc
clc
adc
popf
lds
aas
cmc
add
sahf
rclb
mov
aaa
mov
mov
sub
into
xchg
out
cmc
pop
imul
mov
mov
movsb
jne
or
lahf
inc
out
lahf
jle
pop
mov
xchg
inc
in
adc
mov
xchg
mov
cmpsl
sub
adc
add
clc
and
push
and
add
add
insb
int3
or
cld
gs
or
sbb
adc
push
cli
inc
pop
pop
movsb
mov
call
add
inc
repnz
mov
mov
cwtl
push
lahf
scas
xchg
inc
sub
jg
in
cmp
sbb
leave
xor
or
sbb
dec
inc
cwtl
xchg
adc
xor
sbb
add
jge
push
sub
adc
push
cmp
test
jns
xor
hlt
in
clc
pushf
iret
mov
outsb
add
js
shlb
rcr
mov
cmp
sbb
or
adc
sarb
mov
inc
adc
adc
mov
scas
add
dec
cld
cmp
jmp
xor
mov
xor
and
fstpl
cmpsl
mov
movsl
int3
jb
xchg
inc
mov
adc
jnp
ja
inc
mov
mov
das
mov
in
test
jb
and
push
enter
aad
sub
fwait
sbb
mov
lock
bound
paddusb
or
outsb
push
dec
cmc
inc
lods
push
ror
roll
incb
daa
xchg
cwtl
mov
or
js
and
mov
ljmp
es
loope
add
xor
push
and
lods
xchg
or
mov
inc
mov
push
sbb
scas
lcall
out
scas
lret
push
push
mov
pushf
dec
ljmp
fs
icebp
push
lcall
and
push
stc
mov
daa
out
mov
sarl
ja
inc
lcall
in
out
vmread
pop
or
adc
mov
ds
inc
sub
int
test
inc
or
in
mov
xchg
mov
pop
ret
add
pop
loope
fistpll
clc
das
mov
sub
rcrb
adc
ja
inc
rcr
adc
mov
dec
jle,pn
cmp
outsl
scas
inc
out
mov
cmp
pop
jae
mov
push
cli
mov
pop
mov
cmc
test
ret
ffree
scas
jns
enter
mov
cs
sub
xor
lea
sub
sub
in
mov
xlat
mov
shlb
and
scas
call
int
repz
and
fs
xchg
push
loope
adc
outsl
sub
repnz
pusha
jno
xlat
pop
jbe
sbb
and
mov
rcrl
inc
dec
shlb
js
addr16
add
inc
xor
pop
cmp
lock
pop
adc
sub
mov
dec
in
cmpsl
push
mov
and
call
jne
mov
jbe
cli
pop
lret
jno
lea
loope
arpl
mov
sbb
jp
clc
sbb
xor
sub
cld
jp
or
push
pop
aaa
roll
cmpsb
adc
fiadds
mov
out
cmpsl
cmp
jmp
adc
cmpsb
scas
and
adc
cwtl
mov
pusha
inc
jno
in
testl
jnp
mov
sbb
js
cmp
pop
fnstsw
repnz
in
fs
arpl
mov
and
rolb
test
xor
stos
popa
std
movl
fwait
mov
push
push
push
jb
sub
pop
add
repz
rorb
sub
pop
fwait
mov
mull
sti
repnz
jle
mov
xor
cmpsb
aam
add
fsubrs
pusha
push
cmp
cmp
add
mov
leave
xlat
stos
xchg
fnsave
dec
ret
nop
cmp
fs
bound
es
nop
imul
xchg
and
mov
inc
cmc
ljmp
pslld
mov
icebp
and
lahf
dec
idiv
cmp
mov
lret
dec
iret
push
or
fisubrs
sbb
mov
imul
movb
mov
xor
inc
sbb
incl
push
fsts
sbb
out
mov
push
gs
pop
cmpb
notl
sub
mov
jmp
dec
addl
negl
xor
adc
pushf
call
push
iret
stos
outsb
out
ja
mov
xchg
dec
mov
movsb
xchg
dec
or
daa
mov
pop
inc
mov
xchg
leave
mov
and
jo
adc
filds
test
xor
and
push
add
sbb
cld
jmp
divb
jns
out
pop
push
fpatan
lock
add
ret
dec
sbb
lahf
popa
push
lret
call
and
fucomip
push
inc
xor
cmp
jae
test
jo
or
xor
in
cltd
add
loope
xor
jns
lds
adc
les
pop
repz
outsb
negb
fnstcw
push
xchg
int
dec
inc
push
fmull
xchg
aam
ficoml
jne
in
aad
repz
in
inc
les
xor
rcrb
sub
shlb
pop
aaa
jnp
test
xor
xchg
mov
xor
rol
sub
call
cs
pusha
lods
xor
sub
xor
xor
das
cmpsb
sub
mov
lret
scas
pop
sti
pop
les
fsubs
call
or
shl
fsubs
icebp
and
push
les
inc
sub
test
jnp
mov
cmpsl
test
mov
imul
dec
push
leave
lcall
jl
cmpsl
stos
test
rclb
jno
sbb
pop
cmpb
mov
repz
stos
jb
mov
mov
std
lea
ljmp
addb
mov
push
into
mov
ror
mov
movsl
cltd
test
inc
divl
sbb
ficompl
xchg
xlat
insl
mov
or
push
mov
pop
rcrl
dec
stc
fidivrl
js
shll
add
push
lods
das
rcrl
out
jp
lods
adc
cltd
lds
mov
sbbl
clc
movl
js
test
mov
push
popa
leave
enter
neg
add
stc
les
das
int
imul
xchg
insb
mov
or
loopne
xchg
pop
dec
out
aaa
and
mov
rcrl
jbe
shrl
mov
and
or
fisubrs
ret
xor
lret
and
outsl
aad
hlt
repz
jg
jbe
in
add
add
adc
mov
aam
roll
aas
pop
packsswb
dec
pop
movb
dec
pop
dec
pop
cmp
and
adc
pop
addr16
jle
sbb
call
adc
aas
mov
cmp
jno
and
ret
add
xchg
ret
mov
sbb
sbb
shrb
jmp
mov
imul
aaa
cmp
mov
cltd
xchg
shrl
mov
clts
adc
cmp
mov
push
insl
adc
in
xor
int
out
loop
pushf
inc
lret
jecxz
leave
jecxz
jecxz
insb
and
into
loop
testb
mov
dec
test
nop
call
push
je,pn
jae
mov
test
pop
mov
push
ja
andb
push
sbb
test
push
push
and
jo
fsts
div
call
add
push
push
loopne
in
es
lahf
pop
pop
jge
scas
or
or
dec
sbb
jno
xchg
inc
xor
lcall
repnz
fimull
sbb
push
pusha
pusha
test
cmp
xchg
add
cmpsl
cmp
imull
or
adc
out
xlat
xor
xchg
aad
daa
ret
jl
repz
fidivrs
sahf
fwait
jno
sbb
sahf
inc
jmp
stos
jno
pop
jb
jne
cmp
add
test
roll
fnstcw
xor
mov
loop
outsl
adc
dec
dec
imul
rclb
pop
ret
jecxz
mov
jbe
shrl
icebp
das
and
arpl
ret
mov
xor
scas
pushf
out
mov
add
mov
and
fs
rcll
ja
add
push
sub
jno
les
aad
std
xchg
sarl
sti
inc
jge
and
lahf
inc
sub
loopne
push
int3
sbb
push
sub
nop
xchg
lcall
scas
pop
cmp
mov
sbb
dec
leave
xor
xchg
dec
fdivrl
sbb
xor
push
inc
in
inc
pusha
rcl
add
push
mov
push
pop
sbb
xchg
jl
into
pushf
aad
mov
xchg
jl
in
push
enter
repz
loop
jle
es
sbb
aam
cmp
les
test
push
mov
push
inc
aaa
insl
dec
mov
lods
out
jle
sub
int
xor
sbb
and
mov
test
add
ss
xor
pop
sbb
pop
out
mov
test
pop
cs
movsl
pop
cs
stos
xchg
fisttpl
cmpsb
int
sbb
mov
js
in
arpl
xchg
xchg
aas
mov
dec
jnp
or
mov
inc
hlt
mov
jb
shrl
ljmp
fidivrs
xchg
adc
int
das
push
mov
fwait
pop
jae
cmpsb
adc
xor
add
mov
fisttps
loop
mov
jecxz
mov
in
jbe
insl
lahf
pop
pop
negb
mov
addr16
mov
xchg
dec
and
xchg
mov
xchg
mov
es
cltd
rolb
and
dec
adcl
sahf
jo
sbb
daa
jmp
aad
pop
sahf
sbbb
cwtl
jmp
aaa
test
out
and
jg
sub
pusha
mov
mov
xchg
aaa
or
sub
push
xchg
pop
mov
xchg
jmp
loop
fwait
mov
shr
adc
addr16
in
lods
test
in
xchg
or
mov
jg
mov
pop
mov
sub
call
rcl
shlb
sub
cmp
mov
pop
dec
add
xchg
sahf
xchg
loope
mov
mov
in
inc
cmpb
loope
push
addb
out
jmp
imul
mov
dec
fucomi
into
pop
add
lret
pop
loop
nop
or
lret
xchg
aaa
jle
xor
push
add
data16
dec
pop
shrb
aad
sbb
loopne
sbb
and
les
andl
cmp
out
inc
inc
xchg
lret
cmp
insb
push
mov
mov
xchg
xor
cmpsl
fistl
push
jp
push
adc
inc
divb
mov
aad
sbb
loop
lds
movsl
lret
mov
add
mov
ds
dec
jne
sub
loope
jl
mov
out
push
mov
or
pop
sub
pushf
mov
out
out
out
xchg
repz
iret
jnp
into
jl
jge
mov
push
sbb
fidivrl
pop
sbb
xchg
jmp
popf
mov
movsb
jl
xor
mov
xor
fwait
stc
nop
xchg
lods
lret
adc
push
jne
jb
dec
inc
and
nop
xor
sete
xchg
xlat
pop
lods
pop
xchg
cmp
sbb
mov
push
push
stos
leave
jbe
js
lret
lock
jo
int3
dec
xor
icebp
pop
mov
pop
mov
inc
sbb
cld
sub
adc
mov
push
cltd
mov
push
sbb
das
pop
xchg
test
fisttpl
mov
xor
and
shl
add
cld
mov
sub
mov
or
dec
aam
pop
add
aam
movsl
mov
dec
sub
or
and
sbb
inc
dec
mov
out
lods
or
in
mov
clc
loop
add
add
je
lods
bound
mov
jns
idivb
imul
out
xchg
lods
adc
add
sbb
mov
test
lahf
aas
dec
gs
gs
xchg
inc
insl
xorb
movsb
mov
xorl
dec
stos
adc
hlt
fists
sub
add
jne
ret
flds
pop
add
mov
lds
ja
test
popw
push
dec
mov
mov
dec
orb
bnd
das
push
test
pop
jecxz
ror
test
pop
or
lock
cld
cli
les
dec
sti
mov
repz
mov
pop
loope
sub
in
les
adc
sbbl
cmpsb
rclb
out
mov
inc
test
inc
repz
and
push
cmp
lret
jle
cmp
aaa
sbb
sbb
lahf
xchg
decl
inc
jae
add
jo
mov
sti
xchg
lret
es
aas
inc
pop
stos
call
outsl
cltd
and
xor
mov
pop
ja
mov
and
leave
mov
xchg
inc
aam
clc
out
and
jge
or
fiadds
push
and
push
repnz
jp
inc
push
push
cmp
mov
in
sbb
add
cmp
pop
xchg
in
fstps
cmpsl
int
fidivs
xchg
hlt
cwtl
ret
mov
je
fstpl
sub
in
fidivrl
push
enter
jle
stc
mov
cmpl
test
fsubrs
push
shrl
pushf
push
mov
cmp
add
inc
mov
bnd
mov
pop
push
sti
jge
cmc
cmpsb
lahf
aaa
cmc
out
les
leave
xchg
add
popa
or
faddl
mov
mov
dec
lods
xor
std
pop
mov
cmc
jg
cltd
std
and
mov
addr16
push
movb
sbb
dec
inc
fcoml
fnstcw
and
inc
loope
mov
sub
xor
pushf
int
push
sti
out
dec
cmp
fmull
pop
mov
push
fucomp
mov
jmp
cmp
movsl
js
roll
adcl
shll
sahf
pop
jns
and
gs
mov
insb
xor
cmp
aas
mov
xchg
dec
shll
scas
or
dec
mov
bound
fs
fisubrs
mov
outsb
stc
jbe
xchg
xor
mov
mov
lahf
pop
sti
pop
cmpsb
push
jp
xor
inc
test
repz
jl
into
sar
inc
and
fmull
sub
into
and
cmpsl
pop
cmpsl
adc
out
enter
in
or
popf
repz
mov
or
insb
or
js
aam
or
mov
lock
jl
push
or
jnp
out
loope
jl
std
and
jmp
jmp
push
out
xor
adc
pop
popl
popa
in
xor
xchg
subb
scas
ror
dec
mov
enter
sbb
leave
jle
mov
lds
ja
adc
cmp
ds
dec
fs
jg
icebp
js
outsl
push
pop
sub
stos
rcr
fdiv
cs
pop
sti
cmp
orl
add
les
xor
sub
xchg
jo
lahf
add
sahf
pop
add
divb
jbe
negl
adc
mov
adc
push
mov
adc
in
inc
push
cmpsb
cmp
jns
sbbb
xchg
push
and
inc
dec
xor
and
fcoml
aas
adc
mov
stc
rolb
stos
push
cmp
sub
aad
orl
iret
out
pop
pop
adc
jle
xchg
push
push
subb
mov
aam
iret
arpl
insb
xchg
push
jmp
mov
or
pop
stos
test
add
addr16
pushl
hlt
mov
pusha
cmp
pop
jne
adc
pop
and
dec
pop
fsub
xchg
pushf
and
lods
ljmp
xor
adc
leave
sbb
mov
cld
or
dec
addr16
and
lahf
pushf
arpl
mov
jne
push
fistps
jne
push
dec
and
lahf
arpl
jnp
ja
mov
lods
testl
cmp
inc
pushf
sub
jbe
mov
je
lcall
insb
mov
push
mov
or
pop
iret
cmp
negl
xchg
sbb
mov
addr16
and
sub
insl
in
dec
lods
jmp
mov
loopne
arpl
jge
addb
setns
imul
add
push
xchg
and
scas
dec
mov
or
in
lret
mov
jns
push
sub
push
jbe
into
int3
push
push
clc
bound
roll
lret
fucomi
jnp
movsl
imul
popa
pop
ja
pop
fisubl
xor
movsb
mov
jmp
and
in
cmp
jmp
rcll
dec
add
mov
or
stc
ror
and
aad
sub
dec
ljmp
push
subl
inc
mov
lahf
cld
test
jae
sub
mov
xor
test
sbb
popa
xchg
icebp
lds
push
mov
insb
stos
cwtl
and
xchg
repnz
or
mov
pop
mov
popa
inc
xchg
or
jmp
test
push
insb
mov
or
xchg
cmpsl
sbb
int3
adc
mov
test
shll
bound
sbb
pop
push
inc
sub
xor
jnp
xchg
or
jge
cwtl
insb
push
ret
out
pop
dec
xchg
pusha
subl
ss
push
xchg
sbb
or
fdivl
pop
add
ljmp
repz
ror
mov
adc
mov
outsb
adc
jge
movsl
and
pushl
lret
das
xorl
pop
pop
test
clc
mov
fistl
insl
int3
rclb
outsl
sbb
cmp
adc
ret
adc
leave
loope
mov
xchg
lds
in
dec
movsb
sahf
and
and
mov
pop
das
sub
repz
mov
push
and
fbld
jnp
xchg
fsubr
mov
pop
pop
dec
scas
cltd
or
or
jmp
ja
push
and
daa
and
cltd
cmpsl
mul
lahf
sub
sbb
xchg
popa
lret
les
stos
ret
jns
fldt
or
push
imul
mov
xchg
pop
sbb
xor
jo
and
or
pop
push
ret
or
push
loopne
sahf
jae
lret
inc
adcb
xchg
mov
inc
out
xchg
sbb
lret
push
dec
xchg
add
pop
mov
xchg
xor
add
mov
pop
hlt
std
push
imulb
stos
ss
xchg
jo
leave
mov
cmp
cmp
repnz
xor
mov
push
ds
ljmp
rorl
decb
scas
daa
fwait
and
jmp
pop
loop
or
lods
jl
fstpl
mov
xchg
icebp
imul
enter
push
icebp
jns
roll
adc
mov
insl
add
sub
sarb
loopne
loop
add
jnp
rol
dec
mov
or
cmp
ds
arpl
adc
sbb
enter
inc
popw
jae
inc
jae
stc
pop
add
xchg
push
add
testb
pop
push
add
add
mov
rorl
loop
jne
mov
inc
xchg
sub
adc
sti
lret
inc
outsl
test
xchg
cmpb
sbb
jno
pop
int
cmp
out
mov
test
cmp
push
jae
jmp
dec
leave
sbb
lea
mov
mov
pop
inc
or
xchg
data16
adc
loope
jbe
push
ret
sarl
inc
fs
fs
dec
push
lahf
fidivrl
scas
sete
xor
sbb
add
pop
push
jbe
in
fbld
aad
pusha
mov
sbb
mov
rclb
out
or
aam
loop
cmpsb
inc
cmpsb
fbld
jle
cmp
les
imul
jbe
iret
adc
mov
cmpb
or
pushl
xor
inc
lock
dec
fcompl
add
fwait
cmp
cltd
mov
xor
sbb
push
xor
aam
int
movsl
jo
or
cmp
test
sub
outsl
aam
stc
dec
jns
mov
aad
mov
mov
mov
mov
add
bound
dec
rcl
jae
dec
push
mov
pop
in
pop
pop
aaa
mov
ret
lods
imull
sbb
inc
and
sub
inc
enter
enter
pop
xchg
pop
test
xchg
fdivr
or
xchg
fdiv
leave
into
jb
insb
loopne
aad
cmp
push
sbb
jecxz
xor
iret
dec
jl
jle
jle
test
loopne
cmp
rorb
adc
jae
in
decl
repz
test
test
clc
mov
dec
lret
mov
sti
jg
sbb
mov
out
sub
add
push
xchg
fadd
outsl
jno
xor
mov
scas
pop
sbb
push
aaa
fcoms
fbld
mov
mov
mov
fcmovbe
adc
cmpsl
xlat
stc
jo
fidivrs
inc
aaa
and
inc
iret
into
jb,pn
sbb
sbb
lcall
jnp
arpl
dec
pop
inc
ret
int
ljmp
inc
lahf
inc
pop
cli
and
or
pop
inc
and
xchg
jl,pn
and
aam
mov
shll
sbb
sbb
pusha
mov
adc
out
mov
jno
push
test
loope
dec
and
push
dec
push
movsb
loope
clc
mov
lcall
addr16
pop
scas
leave
iret
fsubrl
mov
inc
push
cli
cmc
jle
push
loope
scas
lahf
cmp
test
sub
ror
lret
test
jo
pop
fcomps
sub
and
ret
and
lret
mov
sbb
das
push
xchg
jo
in
xorb
jo
daa
stos
daa
xchg
sub
in
or
jp,pt
push
sbb
paddusb
ja
push
popf
test
dec
mov
call
adc
enter
jge
std
imull
loope
mov
insb
das
xor
jmp
in
lret
cwtl
ja
and
adc
add
les
sarb
iret
jns
xchg
cmp
mov
hlt
out
imul
xor
and
inc
ss
cmp
jbe
outsb
xchg
cs
arpl
ficoml
push
pop
push
ja
stos
rcr
inc
jle
pop
cltd
cmp
lea
mov
jle
out
pushl
ds
lret
pop
int
lea
dec
pop
adc
pop
mov
mov
fisubrs
in
or
js
movsb
adc
lods
fs
jge
in
mov
stos
stos
repnz
mov
mov
push
movb
gs
testl
or
mov
aad
sahf
pusha
mov
jp
loope
xchg
mov
push
jmp
insb
pop
pop
fistl
dec
popf
nop
and
fdivrl
dec
add
xchg
sahf
pop
test
loop
add
add
mov
mov
fildll
shld
repnz
dec
pop
scas
lock
popa
mov
hlt
push
aaa
addl
out
test
jb
or
test
pop
stc
pop
push
push
dec
cs
mov
jns
ljmp
and
cld
jg
pop
cld
dec
ret
cmp
push
pushf
out
sub
pushf
aam
sub
popa
pop
shrl
mov
dec
inc
imul
sub
das
mov
xchg
adc
andb
jp
loopne
lret
icebp
mov
mov
lds
push
lret
enter
sub
popf
xor
maxps
jo
dec
mov
mov
repnz
mov
int3
pop
rorl
inc
fcmovnbe
add
lock
and
clc
pop
int
fwait
pop
push
xor
xchg
mov
jbe
cmp
mov
mov
icebp
rorl
int3
divb
xchg
pop
mov
in
xchg
add
or
adc
xchg
pop
push
addb
nop
loope
xor
iret
in
inc
xchg
mov
inc
lods
in
out
in
cltd
lahf
mov
movsl
jbe
popa
mov
lds
pop
push
mov
addr16
xor
cltd
push
jg
cld
pop
bound
int3
jbe
cmpsl
icebp
xchg
mov
jmp
pop
stos
out
ss
dec
dec
pusha
or
xchg
fbld
lods
testl
enter
cmpl
in
pop
mov
inc
out
sbb
xchg
xchg
inc
xchg
outsl
lods
adc
xor
dec
call
das
lds
add
shll
push
jge
popa
mov
and
mov
repnz
sub
cmp
xchg
hlt
cmp
data16
cmpsl
divl
dec
ror
mov
cmp
and
or
sub
adcl
jle
pop
or
adc
call
insb
jle
add
test
outsl
jne
sub
fnstcw
jl
inc
fmull
cld
call
stc
mov
push
imul
mov
push
mov
pop
clc
push
addr16
data16
pop
or
popa
icebp
jno
sbb
pop
sbb
dec
mov
mov
lcall
shll
lea
adc
stos
int3
adc
ret
ffreep
mov
jbe
repz
xor
insl
sub
xor
pop
ret
sub
fmuls
stc
adc
shrb
aad
out
in
cli
or
popf
jge
int3
cmp
add
xchg
mov
outsb
pusha
jbe
imul
sub
mov
adc
push
js
out
divb
pop
pop
cld
xchg
jnp
fs
push
outsl
xor
cs
adc
inc
dec
sub
leave
fcomps
xor
sbb
jl
fdivs
repz
pop
adc
inc
ljmp
jmp
cmp
mov
mov
and
adc
cmc
fwait
daa
sarl
outsl
mov
pop
inc
lds
loop
mov
jmp
mov
jle
movsl
lods
adc
fsubr
mov
addr16
leave
mov
in
inc
popa
test
je
or
test
mov
lods
imul
int
mov
std
adc
pop
push
mov
lock
inc
in
add
push
mov
shll
jmp
ds
mov
int
xor
xchg
rcll
pop
xchg
movsl
adc
outsb
jp
fcomp
clc
insb
cltd
insl
sbb
test
push
and
jp
jno
or
sarl
mov
repz
mov
outsl
dec
jge
sbb
dec
add
lret
sub
out
pop
and
std
mov
adc
cmp
add
dec
inc
test
mov
push
and
fidivrs
jmp
push
and
fs
adc
mov
aaa
insl
lret
inc
push
inc
xchg
cmp
pop
sarl
scas
loope
cmc
test
sti
jecxz
or
pop
ljmp
mov
aaa
push
mov
clc
mov
and
stc
mov
sub
push
xor
mov
out
mov
lahf
xchg
aad
xchg
ds
sbb
fpatan
in
xor
out
sahf
mov
mov
or
into
imul
movsb
mov
mov
mov
int
shrb
fucomp
out
les
push
adc
outsl
lock
and
stos
pop
test
or
shl
scas
fistl
xor
es
add
jge
mov
push
ss
loope
pushf
lods
mov
push
dec
cmp
shr
fsubl
add
fildl
pop
xchg
sbb
pop
mov
inc
dec
pop
and
jl
push
sbb
out
lahf
clc
cmc
xor
sub
xlat
and
iret
loope
jnp
movsb
push
xchg
shrl
lcall
lock
leave
ja
in
loopne
xchg
inc
push
repnz
sbb
pop
mov
aam
mov
mov
gs
outsl
pop
inc
test
stos
les
mov
push
or
mov
lret
mov
je
pop
jmp
rorb
ret
popf
add
mov
cmp
rol
and
adc
jmp
adc
and
lcall
shr
int
xor
cmp
jl
fwait
popf
push
jae
sbb
shll
cld
psubd
and
mov
stos
and
push
fbld
inc
jg
and
das
push
push
mov
imul
push
cmpsb
aas
jo
xor
dec
xlat
push
push
fisubrs
fcomps
add
scas
sub
xchg
pushf
xchg
mov
lret
adc
mov
imul
lods
lods
std
mov
jp
shlb
insb
shlb
cli
xchg
inc
stos
jl
mov
mov
sub
dec
xchg
cmp
dec
rorl
jnp
or
push
push
and
mov
lret
jno
mov
dec
shll
or
add
pusha
inc
adc
push
push
mov
mov
sbb
lods
dec
lods
adc
dec
mov
lahf
mov
xchg
ret
or
lock
cmp
test
clc
loopne
jb
xor
fcomps
push
sub
movsl
sub
mov
stc
jno
sbb
inc
or
pop
cmpsl
es
notl
lds
cltd
sub
jmp
xlat
cli
and
or
pop
std
fdivrs
dec
aas
mov
jnp
sbb
xchg
and
push
test
mov
hlt
cmpsl
dec
jecxz
arpl
pop
pop
in
scas
cli
ljmp
lcall
fldenv
in
les
and
mov
rorb
mov
mulb
mov
sub
lods
arpl
sbb
ljmp
sub
push
adc
xchg
fcoms
js
hlt
call
dec
mov
idivb
pop
or
sub
mov
xchg
pop
aas
mov
inc
popa
jb
test
je
mov
insb
ss
inc
ljmp
outsb
aas
adc
xor
and
inc
out
imul
cs
ja
fildl
jmp
cmp
and
add
aam
ret
sbb
cld
lods
mov
push
not
dec
leave
jge
sub
mov
or
push
xchg
mov
xchg
movsb
cmp
adc
aaa
or
push
cmc
add
cltd
rcrb
adc
fwait
lods
sub
jns
sbb
mov
pop
cmp
push
jne
mov
mov
inc
and
cwtl
ret
cmpsl
leave
and
scas
fnsave
or
stc
rorb
outsb
and
in
or
cmp
mov
mov
mov
aam
pop
cmc
rcrb
jnp
gs
xchg
js
scas
addl
mov
mov
mov
xlat
and
or
push
mov
cli
test
sahf
mov
mov
mov
lods
or
into
es
cwtl
repnz
and
sahf
sub
gs
jge
xor
xor
fcompl
and
arpl
mov
mov
sbb
push
adc
mov
sarl
pushf
daa
xchg
xchg
pop
dec
sti
pop
mov
frstor
adc
icebp
jo
cmp
cmp
loope
test
cld
and
pushf
inc
flds
mov
cmp
fucom
aad
lcall
andl
sbb
loop
xchg
jno
fisubrl
add
popa
and
lcall
sub
inc
inc
jno
cmpsl
push
mov
addl
dec
mov
test
pushf
pop
inc
jge
jl
lahf
mov
fcmovne
and
xor
decl
cmpsl
jmp
mov
push
loope
mov
mov
lret
xor
xchg
aaa
sbb
movsb
mov
pop
aas
xchg
mov
stc
dec
sub
and
xchg
lock
ret
iret
mov
jns
mov
and
xor
push
negl
or
inc
pop
sbb
inc
dec
pop
sub
dec
or
xorl
out
sub
dec
dec
scas
add
xchg
mov
out
xchg
fidivrs
mov
adc
popf
or
push
rcll
adc
into
adc
adc
repnz
es
popf
adc
aad
orb
sub
pop
movsl
jl
dec
icebp
xor
xor
mov
jae
push
cmp
cwtl
pop
imul
addr16
xchg
or
mov
add
inc
mov
mov
jae
outsb
ss
mov
pop
adc
movsb
push
xorl
lahf
aad
xchg
imul
stc
adc
cmc
mov
cmpsl
scas
and
mov
and
xorl
repnz
pop
add
add
mov
push
in
inc
mov
ja
mov
arpl
dec
mov
jle
loope
jae
mul
je
rolb
aam
sub
mov
outsl
stos
cmp
repnz
test
and
in
mov
iret
or
fcomi
add
roll
clc
pop
dec
pop
insl
addr16
daa
decl
pop
ljmp
sub
mov
sbb
ljmp
js
dec
sti
dec
int3
mov
xchg
fbstp
enter
sub
mov
mov
int
ret
out
incb
cmp
pop
rcl
push
mov
loop
add
cmp
add
xchg
loopne
mov
lret
pop
xchg
dec
cmc
lcall
pop
and
pop
jmp
ret
stos
and
sahf
mov
add
xor
jecxz
xchg
outsb
out
xlat
psrld
int
add
mov
inc
mov
inc
orl
fcomps
sbb
mov
test
sarl
movsl
insb
sti
pop
lea
pop
push
shrl
or
mov
std
lret
lock
mov
cmc
push
popa
mov
xchg
scas
adc
lcall
test
xchg
mov
cmp
ljmp
movsb
call
jmp
aas
and
xchg
fsubrl
out
movsl
pop
pusha
cmp
mov
insl
mov
lret
hlt
cs
call
adc
push
xchg
push
cmpb
int3
repnz
cmp
mov
lahf
mov
add
ss
in
and
mov
mov
cli
mov
mov
xor
cmpsb
dec
mov
insb
or
adc
inc
cmpsl
cmpsl
fcom
sub
xchg
inc
sbb
xchg
push
movsb
test
stc
sahf
cmp
lret
imul
jae
mov
pop
mov
and
frstor
dec
mov
push
xchg
mov
bnd
mov
sub
or
add
jg
lret
lret
jno
or
pop
mov
xchg
mov
mov
out
imul
lods
inc
lret
adc
pop
dec
xchg
sub
repnz
xor
dec
mov
cmpsl
xchg
mov
or
sub
inc
pop
sbb
xchg
movsb
aaa
cmp
xchg
push
cmp
jmp
jl
imul
inc
neg
adc
sbb
fnstenv
int
es
addl
and
cmp
ret
dec
outsl
push
mov
adc
clc
mov
or
jge
lods
and
jns
test
push
fldt
inc
cld
xchg
bnd
hlt
arpl
pop
push
leave
pop
loopne
mov
mov
outsl
loopne
xchg
sbb
jl
mov
mov
inc
dec
add
or
xchg
int3
or
in
mov
pop
cltd
sub
or
pop
dec
dec
ds
lock
jo
in
pop
cmp
cmpl
nop
mov
jno
xchg
mov
pop
arpl
sub
rcrl
cmp
push
sub
pop
mov
mov
lret
mov
jmp
inc
jp
jno
xor
cmp
sbbb
mov
fwait
push
xchg
add
repz
adc
aaa
dec
shrl
std
sub
or
je
lret
xchg
imul
andb
imul
daa
in
jp
je
jae
and
jecxz
insl
push
bound
push
adc
mov
inc
push
inc
sbb
loop
mov
mov
xchg
lods
mov
mov
js
mov
cmp
dec
or
push
xor
and
push
push
pusha
lahf
cmp
mov
cmpl
negl
mov
hlt
loop
mov
inc
rcll
cmpsb
test
repnz
cltd
add
movsb
addr16
test
mov
lods
imul
rcrb
ss
xor
in
popf
mov
or
mov
test
dec
jmp
add
rcrb
add
insl
cmp
repz
aad
xor
pop
cmp
mov
add
ret
scas
cli
clc
xchg
lock
pop
dec
dec
jg
xchg
iret
or
test
pop
add
lods
aam
mov
out
ja
lret
xchg
add
mov
inc
sbb
push
std
daa
adc
in
mov
mov
xchg
mov
and
push
jno
call
inc
int3
les
push
loope
dec
notl
push
pop
movsl
aaa
or
adc
loop
pusha
jb
ficompl
in
ret
or
and
shll
in
sub
push
add
gs
inc
sbb
je
mov
test
out
sahf
sbbl
add
jecxz
ret
sahf
jle
imul
test
pop
cmp
jmp
test
ja
mov
out
jo
sub
int3
push
stos
pop
std
imul
adc
xor
addr16
and
mov
cltd
ret
xchg
lock
jle
je
jg
test
push
in
jb
or
mov
xchg
mov
sahf
push
insb
das
cli
adc
mov
jg
loopne
outsl
adc
inc
sarl
test
pop
xor
sbb
les
dec
mov
test
inc
mov
scas
add
pop
std
divl
mov
mov
cmp
mov
push
pop
les
pop
or
cmc
cltd
or
and
out
js
outsl
and
jle
adc
repz
lock
jmp
mov
cmp
push
add
loop
data16
mov
mov
jae
cwtl
movsl
loopne
push
cmp
out
call
mov
gs
les
mov
dec
fwait
dec
pop
nop
cli
shrw
xchg
es
ds
insl
repnz
jmp
xlat
lds
jne
mov
cmpsl
aaa
cmc
and
aaa
mov
js
fsub
xchg
pushf
cli
lods
sub
push
push
stos
fwait
test
lret
outsb
in
pusha
or
jl
lods
inc
ret
popf
add
nop
mov
push
sub
xchg
imul
pop
push
imul
pop
dec
pop
repnz
push
scas
movsl
rolb
int
cmpsl
inc
jecxz
clc
lods
dec
or
pop
xchg
decl
dec
add
adc
fmull
jae
movsb
ud0
cwtl
sbb
inc
rol
mov
lcall
filds
inc
dec
sbb
jmp
pop
cltd
pop
inc
aas
dec
out
subl
lods
add
sahf
iret
sahf
in
xor
repnz
dec
sbb
add
in
dec
fcompl
sbb
mov
xor
mov
lods
loope
mov
js
and
xor
mov
ret
test
pop
mov
adc
mov
fildll
addl
push
fidivl
in
dec
mov
xorl
cmpl
jecxz
fisttpl
adc
sub
loope
dec
es
aam
push
push
test
jbe
and
xchg
mov
jg
dec
push
cmpsb
rcll
adcb
or
inc
in
xor
or
mov
and
rcrl
inc
push
stos
inc
cmpsb
adc
add
jae
push
mov
dec
cld
jp
or
aas
xor
mov
test
scas
imul
enter
int3
jbe
sbb
xorl
cs
xor
adc
sbb
icebp
aam
sub
mov
jmp
xor
fidivl
mov
pop
pop
inc
mov
lods
lds
mov
nop
aam
call
inc
test
js
jge
jb
mov
mov
pop
push
inc
cli
mov
aas
mov
shlb
sub
jns
xchg
mov
inc
or
test
fldl
sub
pop
push
jg
lret
jle
pop
std
pop
inc
adc
sub
inc
adc
and
sahf
sub
loopne
imul
and
pushl
in
push
pop
out
cmpsl
cs
out
aaa
js
sub
imul
xchg
int3
mov
jle
add
mov
mov
das
xor
push
adc
pop
and
or
lcall
std
clc
mov
clc
adc
gs
dec
nop
imul
dec
fndisi(8087
mov
sub
or
xchg
std
push
aas
push
in
ss
jno
cs
mov
or
adc
jecxz
lds
out
out
pop
push
outsb
sbb
mov
mov
mov
jecxz
ds
add
inc
loop
xor
jno
call
mov
pusha
std
in
sbb
mov
sbb
jno
stos
enter
imul
xlat
pop
push
jg
aas
or
lea
movsl
fnstcw
pop
cmp
or
in
jns
rorl
adc
adc
jae
push
sub
hlt
outsb
leave
mov
in
dec
inc
mov
jae
rcrb
pop
scas
xchg
ror
lret
in
sub
sbb
fs
dec
xchg
add
int
pop
or
lock
fs
jae
mov
enter
jp
dec
cwtl
adc
adc
or
ret
stos
fs
imul
rcll
pop
add
das
add
jno
jl
jge
mov
xor
mov
xchg
or
aas
and
cmpsb
push
stos
xchg
popa
fwait
loop
and
icebp
test
jns
fdivrl
pop
movsl
gs
dec
add
mov
xor
fmuls
addr16
inc
bound
nop
aaa
adc
adc
mov
xchg
aas
lret
cs
or
call
and
ljmp
mov
or
fcmovu
lds
mov
adc
test
adc
cwtl
aas
dec
jmp
jl
pop
hlt
ret
insl
jns
cld
fs
arpl
cmp
test
jmp
shlb
sub
push
subb
cwtl
hlt
addb
jb
mov
enter
shr
mov
xor
fwait
jmp
xchg
lret
sub
or
fcos
mov
push
pusha
out
jbe
or
jne
mov
push
inc
repz
mov
loop
fimull
fiadds
fists
dec
test
xor
rorl
mov
outsl
addl
popf
sub
sbb
jl
jmp
sbb
or
out
mov
fstl
mov
push
pushf
cmp
outsb
adc
loop
pop
adc
into
out
inc
or
loopne
jno
xchg
and
push
or
jl
adc
xor
and
push
icebp
shrl
mov
push
mov
sbb
cld
dec
stos
pop
shr
mov
sub
xchg
xor
mov
les
lea
test
sbb
mov
xchg
mov
pop
in
repnz
out
gs
xor
andw
xorb
pop
and
cmp
adc
mov
out
aaa
scas
inc
and
push
pop
dec
fistpl
and
cwtl
add
pop
loopne
out
rorl
movsb
adc
aam
lret
jnp
lods
and
bswap
xchg
add
insb
stc
push
mov
movsb
imul
sub
es
sbb
bound
les
movsb
lds
out
and
dec
pop
scas
cmp
dec
pop
xor
rclb
andl
loop
push
testl
dec
push
scas
lock
dec
fnstcw
in
fadd
pop
ljmp
sbb
sahf
push
test
js
and
jg
out
es
ja
je
push
and
imul
jns
lahf
fwait
lret
outsb
daa
mov
les
scas
in
mov
jns
ss
push
fwait
jecxz
pop
in
icebp
mov
mov
icebp
in
aas
movsb
and
jge
cmp
call
xchg
jmp
dec
mov
inc
push
fisubs
fisttpll
in
pop
pop
in
fidivl
pop
push
movsl
xchg
or
cmp
stos
push
add
pop
push
dec
shrl
call
jmp
mov
jns
jae
insl
test
in
mov
nop
in
jle
sbb
addb
adc
push
sbb
movsl
test
call
push
pop
xorb
out
pop
inc
add
xchg
jbe
jbe
jg
mov
mov
clc
sbb
add
dec
sbb
daa
xchg
nop
cmp
arpl
shlw
pop
repnz
sub
mov
pop
and
jo
imul
xlat
cmp
xchg
nop
add
xchg
mov
jno
fisubrl
hlt
inc
sub
sbb
mov
cmpl
imul
push
pop
sbb
js
xchg
jo
pop
push
ficomps
and
xchg
int3
push
imul
xchg
loopne
lret
sub
out
add
fiadds
lret
clc
cmp
jle
mov
lcall
and
or
insb
aas
xchg
mov
popf
mov
sub
adc
or
and
push
cmp
push
pop
mov
cs
and
sti
mov
daa
out
dec
js
jae
cmpsb
push
ds
dec
cmp
subl
add
lcall
popf
push
mov
jns
lret
xchg
inc
js
cmp
cmp
inc
push
fstpt
je
rcrl
xlat
xchg
push
inc
adc
jl
hlt
fstpl
jb
scas
push
test
cmp
inc
adc
cmpl
mov
es
in
dec
xchg
cmc
push
aad
jecxz
xor
add
pop
cltd
stos
push
data16
sbb
je
addr16
leave
ja
cmp
jae
test
fdivl
mov
out
fdivs
pop
xor
stos
inc
out
xor
ds
outsl
and
mov
aad
xor
ficoms
sub
xor
sub
call
lods
aaa
cmp
mov
mov
mov
jl
insl
js
mov
lret
dec
xchg
repnz
mov
xor
push
add
or
xlat
loope
mov
std
mov
dec
sbbl
fidivl
sub
inc
or
mov
xchg
and
nop
stos
test
add
and
inc
add
push
lods
fwait
aaa
adc
mov
sbb
lahf
in
fwait
mov
jmp
mov
sbb
dec
mov
xor
hlt
push
mov
pop
cld
dec
fldcw
inc
mov
mov
jecxz
mov
push
dec
out
shrb
xor
lock
sub
xor
popa
data16
mov
out
jmp
inc
mov
pop
das
scas
pop
imul
adc
sbb
mov
jge
std
mov
mov
dec
xor
sub
out
xorb
outsb
es
xor
test
or
aaa
push
pusha
mov
dec
jg
and
popf
rcll
jnp
mov
sahf
sbb
dec
pop
repz
lcall
jle
std
jp
js
sbb
adc
pushf
inc
mov
shrl
outsb
repz
lea
push
cltd
pop
pop
into
test
in
lahf
imul
aas
iret
sbb
xchg
pop
ss
xchg
inc
enter
pop
scas
scas
push
bound
jge
repnz
dec
or
push
sbbl
ss
fldt
mov
leave
jl
loop
mov
aas
rcrl
pop
push
xchg
jg
jge
cmp
and
cmp
xor
mov
mov
xchg
cs
mov
pop
push
or
repz
dec
mov
adc
and
pop
imul
lods
scas
aaa
sub
adc
stos
push
aas
xchg
jne
xor
jge
out
imul
int
lret
dec
jmp
adc
and
cmp
popf
cmp
cmp
imul
xor
and
cmpl
cmp
jnp
shll
cmp
or
ljmp
arpl
mov
nop
pop
mov
js
stos
sub
gs
xlat
in
or
stos
bnd
in
sub
fs
scas
fwait
js
cwtl
mov
repz
jle
fdivr
and
pop
sub
xchg
sahf
sbb
out
loopne
adc
gs
les
xor
frstor
sub
sahf
adc
jo
dec
outsb
imul
test
adcl
mov
mov
cmp
sbb
xchg
sbb
mov
pop
popf
push
pop
and
sub
ljmp
push
add
stos
sbb
insb
sub
rcrl
bnd
cmpsl
xchg
imul
push
or
ret
jnp
xor
push
fldcw
sub
push
sub
add
mov
cmp
push
sbb
cmc
pop
cmp
imul
ss
or
push
cmpsb
into
es
push
aaa
popa
repnz
ds
out
xor
mov
sbb
adc
jo
ljmp
xchg
stos
loop,pn
sbb
fldl
lcall
cmpsb
cmpl
lods
pop
scas
aaa
xchg
push
and
fstps
mov
jge
out
dec
adc
fdiv
xor
sbb
xchg
adc
pop
mov
int
andb
lret
cmp
jge
aas
push
fisubrs
cmp
cs
inc
test
sbb
call
push
dec
cmp
xchg
fcomp
xchg
aad
leave
jb
pop
jge
insb
mov
loope
or
rorb
mov
icebp
dec
jg
or
cli
push
adcb
into
mov
gs
or
orl
je
ja
xorl
xchg
test
mov
or
sub
and
or
lret
nop
fnstenv
add
xor
in
call
sub
xchg
pushf
or
jp
pop
push
adc
sub
push
and
cmp
cli
hlt
inc
lea
pop
adc
cli
fldenv
adc
cmpsl
xor
bound
add
arpl
clc
dec
leave
push
stos
xlat
adc
fisubrs
insb
shll
jae
mov
xchg
cmp
lret
add
xor
mov
xor
loop
ret
and
rclb
dec
aas
lret
mov
sbb
das
sub
fidivrl
test
imul
sar
mov
mov
in
adc
into
push
push
imul
repz
aas
mov
push
iret
pop
push
sbb
jns
out
inc
bound
fisubl
sbb
add
lret
fdivl
and
xchg
fistl
shrl
and
test
ret
or
add
pop
add
cmpsb
sahf
fcom
cmp
sub
dec
call
mov
xor
sti
mov
leave
ss
daa
push
daa
xor
hlt
adc
fucomip
or
jg
js
int
les
xchg
xchg
push
cltd
mov
out
test
insl
fisubl
cld
mov
bound
xor
dec
out
out
xchg
sbb
xor
adc
incl
cmc
dec
dec
add
inc
int
dec
aas
faddl
mov
cmp
ret
xchg
adc
mov
inc
pop
shll
inc
jbe
and
or
jne
cmp
pop
dec
pop
sub
imul
cli
lret
pop
imul
mov
jbe
mov
adcl
jl
jmp
test
push
icebp
ret
adc
decb
push
int3
movsb
jae
pop
ds
arpl
popf
dec
test
push
mov
andb
sub
cmp
xchg
pop
bound
or
rcll
int
fdivrl
shlb
inc
test
shrb
nop
nop
add
or
mov
lock
pop
jge
loopne
shlb
dec
mov
jg
adc
push
mov
outsb
mov
jg
pop
js
rolb
fnstenv
pop
inc
pop
add
stc
pop
stos
and
inc
rcll
sarl
jmp
ljmp
lods
lock
and
jae
xor
inc
aas
adc
sub
push
jns
mov
in
fmulp
sub
adc
mov
xor
xor
daa
and
ss
or
sbb
add
mov
pop
cmp
mov
jo
and
pusha
clc
mov
xchg
sbb
das
je
aaa
fildl
or
sbb
dec
and
sbb
sub
sbb
mov
scas
pop
jns
je
xchg
in
int3
outsl
push
jge
pushf
aam
pop
rol
inc
addr16
pop
add
cmp
jb
inc
insl
add
out
mov
fmul
movsb
cs
mov
mov
les
sbb
sti
lds
std
lea
xor
inc
mov
mov
xchg
xchg
lea
or
icebp
lret
lods
jns
cld
lret
cmp
lret
fildl
fisubrs
nop
into
cmpsb
lods
mov
in
arpl
cli
jb
mov
lret
test
fimuls
cmp
adc
dec
in
adc
clc
sbb
inc
jmp
adc
subb
push
pop
insl
test
ds
pop
incl
cmp
nop
mov
mov
mov
and
call
in
sub
mov
and
ficoml
fs
xchg
push
idivb
addr16
lcall
fs
add
das
inc
loope
mov
inc
lods
xor
pop
out
aaa
std
ret
adc
push
rorb
cmpsb
enter
xchg
mov
xor
xor
shrb
out
adc
mov
cmp
push
push
inc
insb
pop
sub
movsb
push
dec
sar
lock
popf
mov
fiadds
jae
gs
cmp
inc
sub
add
cmp
ret
adc
pusha
push
xor
pop
push
adc
repnz
lea
and
enter
adc
test
xor
jns
add
mov
mov
stos
nop
into
sub
pop
in
popf
push
jg
out
into
lcall
insb
xor
xchg
aam
push
jne
test
mov
and
xchg
leave
mov
sub
mov
dec
sub
fldl
call
pop
xchg
mov
jp
js
daa
in
aaa
popf
jge
cmp
xor
pop
jo
inc
movb
inc
lods
inc
int
sbb
jns
cmp
in
scas
mov
in
sub
dec
ljmp
push
dec
mov
mov
push
inc
insb
jns
mov
dec
mov
pop
nop
adc
cld
aad
mov
sub
sbb
mulb
stc
shll
shlb
fadd
dec
push
xchg
push
xor
mov
dec
xchg
sbb
aas
pop
fimuls
int
out
xor
jne
mov
test
sti
in
add
pushf
in
pop
je
scas
mov
mov
add
jecxz
rorl
or
mov
pop
out
adc
cld
xor
mov
xor
fildll
xchg
lcall
fisubrs
pop
xchg
jp
lock
cmp
testb
sub
adc
jb
les
cmp
sbb
fwait
test
lds
push
addl
enter
dec
out
arpl
fwait
xchg
popf
movsbl
jno
cmp
xchg
lods
mov
jg
arpl
std
jg
ficomps
jae
xchg
or
bswap
jns
lcall
xchg
scas
mov
add
pop
ret
sbb
mov
imul
push
je
mov
push
cmp
fisubl
test
pop
popa
cmc
in
mov
stos
lcall
xchg
xchg
sbb
push
fcmovb
stos
call
sub
jg
inc
xchg
jle
out
mov
pop
sub
xchg
es
shl
cli
pop
lods
sbb
enter
mov
in
or
jle
loop
cmpsl
push
inc
push
adc
cld
lret
cs
sbb
mov
fisubl
fdiv
sub
scas
loop
xchg
iret
xlat
push
xchg
add
jne
cld
dec
xor
xchg
dec
xor
cwtl
fnsave
mov
ret
sub
xchg
push
cmpl
nop
mov
jno
mov
xchg
inc
dec
and
js
aaa
jecxz
rcll
enter
xchg
inc
out
xchg
xchg
setnp
or
sub
cmp
inc
add
cli
xor
out
jne
bound
jnp
aas
mov
jle
xor
loopne
sub
cmp
sbb
add
cmpsb
xchg
out
popa
and
jbe
sbb
imul
inc
xor
aad
repz
push
xor
mov
je
pop
int
or
pop
sbbb
pusha
repnz
sub
cmp
scas
movsl
jmp
jmp
test
data16
or
lret
leave
das
jno
mov
mov
leave
movsb
add
push
jns
jmp
sbb
cwtl
out
test
add
bound
ret
mov
enter
lret
pop
adc
sahf
and
mov
ja
fldcw
pop
xor
mov
in
fidivrl
jns
xchg
stc
push
mov
inc
popl
imul
adc
push
adc
jbe
mov
pop
jns
fiadds
and
std
aam
fmull
mov
or
inc
xchg
sub
jp
in
adc
insl
push
das
dec
fiadds
stos
add
and
addl
jnp
mov
xor
sbb
or
mov
cmp
mov
inc
mov
loope
repnz
fidivs
add
popf
fwait
int3
push
movsb
jbe
lods
sbb
shl
adcl
out
daa
imul
inc
fidivs
adc
jne
dec
pusha
out
in
pop
jl
jl
jge
mov
mov
es
mull
gs
lahf
or
or
pop
xchg
jle
pop
scas
push
cli
int
icebp
sahf
cwtl
push
mov
nop
shlb
add
inc
cmp
pop
nop
loopne
sub
movsl
fmul
sub
push
xchg
pushf
mov
movsl
pop
out
mov
outsb
adc
adc
notb
mov
pusha
jp
bnd
push
inc
sbb
mov
inc
leave
xlat
sbb
pop
jmp
stc
sub
daa
mov
test
push
and
push
lods
mov
popa
aas
cmp
cmpsl
push
xchg
cmpsl
repnz
popa
mov
pushf
fisttpl
push
shll
sbb
scas
ror
xor
lret
outsb
daa
in
inc
shrb
jno
push
jno
repnz
or
cmp
notl
jmp
cmp
out
aad
lock
daa
loop
mov
das
and
sti
sbb
out
sbb
std
repnz
sbb
loop
cmpsl
ja
jb
in
leave
and
sub
cs
dec
ja
lods
or
int3
test
adc
inc
xchg
mov
add
js
addl
add
scas
ljmp
jge
adc
jae
push
jmp
data16
jmp
into
mov
jns
and
xor
and
inc
fwait
lahf
fnstenv
add
rorb
sahf
push
lea
stos
subb
mov
push
cwtl
das
std
nop
xor
out
ljmp
add
mov
jmp
push
leave
sbb
in
sub
cmp
lds
rorb
stos
andl
jae
cli
out
xchg
adc
jne
dec
xor
ret
push
mov
fsubl
leave
fs
cld
sbb
inc
popf
pop
cmp
and
cs
lock
fucomip
add
cmp
jo
mov
cld
pop
mov
shl
fstl
js
jg
jb
insb
push
mov
push
je
inc
test
sbb
loop
fcmovnbe
push
cmpl
lds
jmp
push
hlt
pop
dec
mov
negb
sbb
setb
fwait
outsb
cmp
jae
cmc
mov
mov
sbb
push
pop
std
and
std
dec
dec
jbe
and
rclb
fcompl
test
ss
aas
fnstenv
adc
cli
dec
mov
loope
subb
xchg
pop
add
cmp
fsubrl
shll
addr16
xchg
push
loopne
push
inc
mov
pop
ds
into
mov
fsub
and
pop
inc
push
adc
mov
scas
bound
les
xchg
and
cltd
dec
jge
rol
and
and
out
or
push
std
sub
out
sbb
dec
arpl
mov
stos
arpl
mov
add
jb
sbb
pushl
add
mul
adc
push
push
test
lahf
fisubrl
scas
les
add
mov
fldl
mov
orb
popa
push
fsts
jnp
cltd
dec
fs
das
int
in
pop
cli
addl
lock
shll
leave
rolw
cmpsl
loop
in
mov
dec
in
adc
lret
xchg
arpl
les
cmc
lds
clc
aaa
mov
mov
jecxz
or
adc
mov
adc
sbb
mov
aam
pop
dec
xor
popf
adc
adc
icebp
cli
enter
int
and
stos
or
neg
jp
push
and
mov
sarl
arpl
mov
lock
rol
lret
lods
sub
push
add
sbb
cwtl
pushf
js
xchg
pop
inc
mov
adc
leave
lods
sti
subl
arpl
xor
pushf
out
orl
je
inc
int3
push
push
divb
dec
aas
cwtl
data16
not
imul
mov
sub
pusha
xor
fldcw
cmc
ja
stc
mov
push
cmp
outsl
test
pusha
pop
push
pusha
pop
dec
sbb
or
push
hlt
pop
popa
aaa
cmp
push
sbb
or
xchg
vmread
xchg
negb
test
ss
inc
pop
sti
repnz
mov
out
mov
push
or
adcb
loope
and
jecxz
and
rolb
or
inc
push
xchg
add
mov
xchg
mov
stc
sub
test
lret
push
dec
or
cs
mov
cmp
fbstp
in
mov
dec
xchg
dec
cld
mov
clc
push
lods
pop
pop
dec
sub
mov
rorl
inc
out
jge
push
nop
push
mov
mov
mov
imul
jbe
push
js
mov
xchg
cs
pop
addr16
out
push
sbb
pusha
loope
ja
inc
out
in
cmpsb
aaa
xor
adc
pop
popl
pusha
jno
push
jl
lods
mov
cmp
rorl
and
in
das
fst
dec
sub
out
xchg
repnz
popa
test
bound
leave
mov
push
icebp
and
cmpsl
bound
scas
data16
add
lret
cmc
jbe
arpl
adc
stc
mov
xor
xor
cmp
mov
repnz
les
cmp
inc
js
out
dec
mov
nop
inc
je
ret
pop
cmp
in
jnp
jp
movsl
pop
pop
cwtl
dec
popf
leave
call
mov
out
aaa
pop
imul
pop
or
mov
sti
es
push
mov
loope
jle
mov
xor
stc
push
xor
mov
adc
jl
scas
xlat
cltd
test
cld
gs
and
or
dec
pop
pop
inc
sub
mov
mov
mov
jo
xchg
xor
fcoml
mov
pushf
imul
dec
imul
or
jne,pn
sti
pop
cli
jb
dec
xchg
dec
xor
rcr
or
icebp
mov
or
and
fistpll
jg
pop
ds
mov
jne
cs
jp
jecxz
sub
mov
shr
lods
xor
inc
push
sub
pop
jb
andb
outsl
or
sub
or
test
icebp
xchg
pop
shrb
je
mov
sub
mov
mov
or
mov
and
jmp
bound
adc
orb
insb
icebp
dec
insb
icebp
fstl
sub
pop
mov
lods
decb
dec
inc
cli
cmpsl
test
loopne
xor
sub
sub
ljmp
lcall
test
cmpsl
imul
mov
mov
das
fcomi
sub
mov
pop
js
mov
mov
xor
scas
sbb
dec
or
mov
cmp
loope
into
xchg
loope
push
mov
add
icebp
rsm
and
test
pop
xchg
inc
loopne
stos
ret
xchg
pusha
out
scas
jnp
mov
mov
test
add
xor
sbb
mov
les
mov
adc
cmpsl
cmp
negl
mov
out
std
sbb
shlb
int3
push
jno
jne
adc
sub
jne
lock
aad
outsl
pop
cmp
jbe
push
fwait
push
jbe
mov
xchg
mov
xor
sarb
cmpsl
jecxz
stos
adc
sbb
xchg
shll
stc
add
insl
sub
jmp
arpl
arpl
stos
fdivp
fs
jns
sbbl
sub
out
insl
push
orb
js
add
test
lods
pushl
test
cmp
andl
fidivrs
push
aas
sub
jns
lock
lcall
shl
dec
inc
mov
mov
xchg
addr16
xor
subl
rcrb
xlat
loop
hlt
stos
mov
sub
sbb
mov
mov
inc
and
pushf
adc
adc
jmp
pop
and
call
test
daa
xchg
inc
dec
fidivs
fdivl
out
sbb
adc
sub
fs
ds
xchg
mov
mov
fcoms
push
pop
or
push
stos
push
jne
cmp
mov
dec
insb
and
hlt
pop
fcompl
jl
mov
sti
dec
pushf
xor
add
xchg
mov
enter
push
inc
push
pop
xlat
inc
pop
push
cld
popa
test
or
js
insb
data16
mov
cmp
imul
lock
adc
jge
bound
push
jecxz
scas
sub
clc
test
mov
icebp
outsl
or
pushl
ja
xchg
xor
fldcw
ret
pop
mov
sbb
push
dec
mov
dec
or
jecxz
ficompl
mov
rcll
lret
mov
mov
adc
popa
mov
inc
cmp
pop
jp
out
xchg
gs
mov
mov
sahf
inc
adc
cmp
or
daa
dec
std
int3
orl
mov
addl
xchg
out
das
sub
fidivl
mov
xchg
and
cmp
pop
enter
out
push
add
xor
into
or
popa
icebp
push
sub
bound
cwtl
fiadds
enter
sarl
outsb
fstpt
xlat
or
lods
lret
mov
mov
loop
fs
sahf
sahf
dec
mov
xchg
out
sbb
cmp
aam
icebp
or
test
push
fisubrl
shrb
xchg
int
cwtl
hlt
inc
fisttpl
enter
cmp
mov
pop
outsb
sbb
popf
dec
push
rclb
push
cmp
lret
outsb
pop
and
pop
or
xor
fucom
xchg
inc
mov
and
and
xlat
fcoms
lcall
xchg
jb
lret
fsubs
mov
rcll
sbb
sbb
leave
and
mov
out
subl
or
gs
mov
xchg
pop
add
fdivl
cwtl
adc
or
fisttpll
push
imul
in
test
aad
dec
insb
inc
mov
loopne
je
inc
mov
icebp
xlat
in
pop
imull
lods
out
and
and
pop
outsl
push
push
dec
jmp
fdivr
ficoms
jmp
ds
outsl
add
fdivl
test
in
cltd
lret
movsl
lock
dec
int
es
cmp
and
gs
xor
mov
pushf
ja
mov
add
fwait
sahf
movsl
jae
mov
mov
dec
in
imul
mov
mov
fists
pusha
cmp
cltd
bswap
popf
orb
mov
cli
push
cld
mov
mov
add
add
daa
pop
xor
push
pop
mov
nop
push
ficomps
cmp
pop
and
mov
imul
fxch
jg
inc
out
pop
scas
dec
sbb
sbb
int
xchg
inc
inc
add
sarl
dec
dec
sub
xor
sbb
dec
clc
inc
and
pop
add
lds
rorb
dec
scas
push
aam
mov
out
push
aad
mov
inc
lret
orl
xchg
xchg
jbe
popa
jne
add
scas
sbb
pop
sarb
outsl
and
lret
xor
dec
sbb
xlat
xor
clc
mov
push
add
jb
or
push
dec
pop
insl
lahf
scas
jp
imul
stc
or
jne
push
and
aaa
inc
and
inc
fistpll
repz
cmp
push
cmp
pop
mov
mov
gs
scas
cmp
out
jl
or
xchg
fmulp
mov
dec
sarb
daa
cmp
addb
lods
inc
mov
nop
add
dec
sbb
sbb
add
loope
hlt
add
imul
sub
shlb
or
lcall
mov
adc
fsubrl
push
leave
mov
lcall
aam
dec
lods
mov
mov
movsb
outsb
mov
pop
mov
mov
add
fs
jns
jbe
shlb
jl
jg,pt
mov
loop
mov
jns
cwtl
or
rcrl
mov
jne
sbb
pushl
push
movsl
pop
dec
inc
mov
fsubrl
in
pop
in
imulb
gs
and
jl
fwait
cli
rorl
cwtl
andl
cs
xchg
or
inc
icebp
dec
pop
xor
ljmp
or
lods
inc
add
rorb
pop
mov
fstpt
jle
sbb
das
out
mov
fs
adc
xchg
mov
mov
jge
pop
jmp
in
and
xchg
enter
xchg
icebp
mov
pop
xor
push
cmpsl
fistpl
out
pusha
insl
mov
into
push
dec
pop
xchg
loope
movsb
or
aad
xchg
cmp
cmp
push
fsubrl
cmpsl
mov
xor
lock
sti
bound
negb
mov
insl
in
scas
mov
adc
cmp
scas
imul
add
ret
cmp
or
std
mov
inc
mov
loop
lock
scas
mov
imull
dec
clc
jmp
mov
ljmp
jle
mov
xchg
mov
popa
ss
cltd
jno
sub
jb
fwait
outsl
scas
ret
push
cltd
xchg
and
xor
stc
push
mov
and
jnp
inc
iret
xor
add
in
mov
mov
std
lods
int
frstor
push
mov
push
fbld
xchg
cwtl
cli
sar
or
inc
movsb
sti
mov
addr16
outsb
push
sbb
mov
dec
into
movb
fsubr
cmp
mov
addl
rol
fildl
add
fwait
jae
adc
mov
addr16
jae
push
repnz
repnz
jmp
pop
xchg
mov
mov
push
lock
test
lret
lock
ds
mov
int3
sbb
mov
jmp
popf
iret
fidivl
adc
dec
jp
jle
jl
jb
mov
adc
arpl
aam
lods
fs
lock
jp
ret
inc
push
jl
dec
shll
lods
in
cwtl
dec
pop
mov
push
popf
dec
lock
mov
inc
daa
inc
sub
fs
mov
xor
outsb
fcmovb
xchg
pop
ja
or
mov
jmp
sub
or
xchg
rorb
fists
into
sub
sub
mov
and
decb
cmp
mov
inc
pop
iret
pop
mov
or
push
dec
fdivp
mov
add
add
bound
or
adc
orl
mov
movsb
lcall
sub
aaa
mov
aaa
addl
xlat
sbb
mov
sbbl
inc
lods
add
mov
push
jae
mov
int
in
test
dec
push
jo
imull
add
rorb
shlb
xor
xchg
fs
mov
jno
xor
lock
nop
dec
shrb
xchg
cmc
pushf
sub
dec
clc
imul
ss
dec
xchg
stc
lret
or
push
jo
rclb
lret
vpmaddwd
mov
divb
push
shl
mov
mov
mov
std
mov
in
and
cmc
rclb
jg
sbbb
es
pusha
jg
mov
dec
add
mov
out
sbb
sbb
sbb
into
fnstenv
dec
mov
sub
pop
pop
mov
mov
push
fistps
test
outsl
inc
lahf
sti
ret
cld
data16
adc
js
and
xchg
aam
push
pop
cmp
dec
mov
mov
mov
xor
insb
daa
push
arpl
in
adc
pop
fs
sub
mov
mov
or
mov
movsl
push
mov
inc
jg
pop
lock
mov
sub
dec
stc
aas
jmp
leave
dec
xchg
add
dec
sbb
mov
lret
jle
fldl
lcall
xor
xchg
mov
iret
ss
hlt
push
sub
repz
scas
push
pop
or
inc
xchg
sub
insl
out
ljmp
out
pop
jg
cwtl
or
aam
and
or
adc
movsl
sbb
inc
lret
mov
xchg
call
mov
mov
fdivl
gs
addr16
movsb
fldenv
scas
jg
mov
cmpsb
sub
or
sub
ficoml
sbbl
clc
les
or
jg
daa
inc
add
or
movsb
movb
xlat
add
out
clc
cmp
cwtl
std
dec
inc
mov
outsb
xorw
push
cmp
sarb
loop
pusha
push
int
and
stc
fstp
push
mov
iret
int
push
lods
inc
adc
lea
jmp
xchg
push
and
das
lods
dec
and
lcall
jmp
pop
and
xchg
sbb
test
cmpsb
push
jge
sub
shrl
mov
sub
jb
fnstenv
add
repz
cmp
lcall
arpl
mov
test
out
add
inc
mov
lock
orb
or
mov
push
movd
addr16
pop
sub
xlat
ret
fsub
mov
mov
push
pop
inc
into
shrb
push
fildl
or
cltd
insl
imul
addr16
in
sarl
mov
sub
push
or
enter
jnp
adc
pop
imul
adcb
les
dec
mov
cmc
lock
sbb
mov
movsb
loopne
mov
inc
aaa
pop
adc
popa
and
movb
ret
pop
sub
inc
lock
adc
ret
popf
rorl
enter
pop
add
push
xor
cmpsl
insb
imul
incl
mov
data16
imul
xchg
mov
fistpl
adc
jp
jecxz
dec
mov
cli
push
aad
sbb
xor
int3
xchg
or
pop
scas
fadd
mov
sbb
push
stos
and
or
leave
push
and
movsb
jecxz
mov
sbb
pop
push
inc
out
out
xorl
dec
pop
mov
mov
aad
xchg
test
pop
mov
shll
jl
stos
test
leave
and
and
divb
xchg
test
shrl
dec
ret
push
or
add
ljmp
inc
jnp
popa
adc
daa
push
jg
out
cs
dec
iret
inc
test
jge
jecxz
and
cli
inc
xchg
cmp
adc
pop
and
pop
add
insb
shl
das
push
adc
dec
andl
andb
cltd
icebp
xchg
stc
in
mov
call
jp
addr16
push
repnz
popa
xchg
mov
dec
pop
push
xor
cmp
mov
and
test
mov
add
sub
mov
aaa
xchg
fmull
fdivrl
cmc
sub
mov
cmp
sbb
pop
jo
jae
adc
fcoms
cmpsb
stos
out
cli
push
mov
lods
shrl
push
int3
fs
cmp
push
sub
push
mov
cmp
in
jnp
fmull
icebp
imul
cmpsb
jno
jl
lds
rcll
xchg
subb
dec
push
inc
jnp
lret
sar
xchg
roll
push
bound
dec
pushf
fs
fs
push
pop
mov
cmp
lcall
sti
shll
fstpt
push
test
aas
xchg
xor
cld
mov
int3
mov
in
and
jae
inc
push
stos
xor
mov
inc
push
std
popa
jne
rcr
mov
mov
ror
adc
xchg
loop
push
push
lret
sub
stc
sbb
sub
or
mov
pop
cmp
insl
stos
imul
pop
pushf
sti
out
mov
adc
xor
dec
mov
mov
add
cmc
daa
test
test
fstps
xor
scas
jge
add
cmc
or
ret
and
mov
cli
jnp
sub
jb
push
mov
fwait
or
sub
sbb
adc
xor
out
xchg
loop
movsl
mov
stc
cmpsb
icebp
lods
adc
fcmovbe
cmpsl
ja
test
pop
jle
stos
stos
push
adcl
rcr
ss
insb
std
ret
and
ja
cmc
test
pop
in
and
rcrb
jns
and
dec
in
data16
mov
sub
push
xchg
mov
or
add
mov
adc
out
dec
mov
cmc
and
test
lret
stos
xchg
call
dec
dec
jmp
mov
adc
cmc
loope
in
gs
or
dec
push
dec
fcoml
std
sub
mov
das
stos
arpl
mov
loope
mov
pusha
pop
jl
shll
in
pop
push
fidivl
push
mov
mov
fcmovnbe
xchg
inc
mov
inc
loopne
pop
sub
call
push
es
dec
sub
pop
mov
fwait
sub
push
ficompl
pop
pop
jno
mov
fiaddl
adc
xchg
lods
lods
insl
sbb
inc
rolb
or
fists
mov
xlat
call
xchg
pop
cld
adc
in
repz
lcall
mov
js
dec
and
inc
xor
mov
sbb
in
fldcw
pop
lea
leave
lock
ljmp
sbb
aad
sbb
popa
mov
in
mov
and
test
push
cmp
lea
mov
test
out
iret
sub
xor
call
adc
cmp
data16
outsl
pusha
scas
pop
inc
mov
push
mov
shll
data16
push
pop
cmp
scas
into
push
xchg
pop
push
sahf
pop
cmpsb
cmovge
fildl
lcall
xchg
into
lahf
jecxz
call
ret
arpl
je
popa
inc
test
bound
xchg
ja
xchg
cltd
and
in
fnstsw
aas
je
or
xor
sbb
lahf
fwait
xor
cmpsl
test
incl
mov
inc
out
sub
cs
cmp
sbb
or
cwtl
xor
pop
cmp
xchg
mov
not
pop
mov
clc
stc
fisttpll
daa
dec
sub
pop
push
out
jg
sub
bound
push
push
cld
pushf
dec
leave
jo
push
mov
xchg
jnp,pn
in
aas
inc
pop
xor
dec
arpl
or
cwtl
dec
sbb
mov
rcr
and
fcomps
andb
ljmp
pushl
and
sbb
inc
add
shrl
sub
rol
rcll
daa
add
leave
sarl
push
popa
adc
hlt
daa
lcall
xchg
fsubs
mov
inc
mov
sub
push
cltd
inc
fbld
add
cmpsl
sub
in
inc
lods
mov
stos
inc
push
or
into
bound
fabs
xor
mov
push
sub
in
insl
lret
mov
movsb
int
dec
xchg
insl
enter
mov
pop
fwait
in
scas
cmp
notb
push
xor
xchg
push
push
xchg
in
sar
in
mov
lea
mov
out
mov
jmp
and
sub
push
fstpl
popf
jl
lret
ss
or
leavew
jl
test
inc
es
or
or
ficoms
icebp
std
mov
cmc
dec
push
popf
sbb
pushf
outsl
out
mov
and
and
pop
mov
sbb
add
mov
cmpsb
stc
mov
jbe
cli
movsl
sti
daa
in
push
fstpt
daa
mov
scas
push
fisubs
lods
call
sbb
loop
inc
cmp
insl
pop
dec
jg
cmp
jl
mov
sbb
mov
scas
lret
inc
push
jne
mov
xor
dec
sub
jns
ja
ret
push
xchg
flds
js
push
in
mov
dec
sbb
icebp
hlt
je
and
in
inc
xchg
enter
xchg
in
jmp
scas
cmpsb
xor
sbb
cld
jbe
aam
stos
mov
or
and
jb
fldcw
in
inc
insl
xlat
sti
mov
dec
in
jnp
cs
ficomps
lods
mov
sub
stc
icebp
ja
jno
out
shll
outsb
lcall
pop
popa
mov
cltd
jmpw
jno
mov
push
scas
adc
es
dec
cmp
and
jbe
testb
sbb
mov
xchg
inc
das
test
lret
dec
lock
mov
xchg
lods
inc
stos
mov
pusha
icebp
cld
cmp
cld
jmp
xchg
pop
scas
fimull
rclb
cli
xlat
mov
jle
xchg
mov
add
xchg
cmp
xorl
mov
sub
push
push
sbb
cwtl
jb
or
lods
xchg
or
adc
pop
jno
inc
movsl
test
pop
aaa
mov
pop
mov
dec
mov
jp
cmp
adc
xchg
cwtl
adc
idivl
mov
inc
das
cwtl
fiaddl
sbb
inc
bnd
out
mov
inc
outsl
loopne
xchg
cld
movsb
sbb
sbb
les
stc
sub
mov
inc
adc
push
mov
pop
push
cmp
rorl
add
out
push
rclb
jg
cmpb
push
sti
xlat
shr
cmpsl
mov
pop
adc
mov
pop
ljmp
cs
xchg
cmc
movsb
mov
and
sub
mov
xchg
sahf
lret
lock
mov
lcall
sbb
pop
push
es
pop
xor
sub
mov
adc
adc
cli
mov
lahf
jmp
sbb
inc
jp
xchg
inc
mov
in
jp
jae
push
jns
mov
push
ss
hlt
data16
or
mov
inc
lds
or
scas
adc
or
mov
jbe
std
rolb
test
and
fimuls
push
dec
mov
mov
negl
push
mov
push
mov
adc
sub
sub
mov
mov
pcmpeqw
xor
mov
and
ret
xchg
ret
inc
sahf
dec
arpl
lcall
adc
arpl
jg
stos
xchg
fs
xchg
das
jno
ds
movsl
jmp
lahf
pop
add
pop
loopne
add
es
test
lock
push
adc
negb
xchg
ret
cli
out
add
mov
ja
push
xchg
adc
ret
inc
int
out
daa
shlb
dec
xchg
dec
sub
js
push
cmpsl
mov
pop
add
pop
xor
je
push
add
sub
incl
pop
push
pop
adc
shlb
stos
ljmp
js
arpl
jb
or
insl
xor
push
aad
ja
push
es
or
inc
mov
mov
cmp
sub
pop
mov
xor
or
andl
jl
pushf
push
je
cmp
pop
jecxz
jne
loope
dec
pop
xlat
sahf
jle
das
push
sub
and
xchg
add
jg
add
xchg
xchg
push
jno
mov
lods
jmp
mov
sub
sahf
cmp
mov
in
aad
push
sbb
pop
ja
push
pop
insl
lods
pop
xchg
jge
jns
test
sti
cmp
lret
stos
mov
xchg
mov
adc
push
adc
jnp
stos
and
test
in
sbb
xchg
xor
int3
enter
imul
inc
jnp
std
aas
adc
stos
rolb
cltd
repz
stos
dec
sbb
adc
or
je
jg
dec
push
nop
xchg
sarl
sarl
mov
lock
je
dec
jnp
loopne
out
popa
ss
or
in
test
andl
mov
test
add
mov
xlat
jbe,pn
dec
adc
addb
lods
push
std
inc
mov
es
xchg
adc
sahf
nop
data16
xor
mov
test
adc
mov
sti
call
cltd
mov
shrl
add
xchg
pop
bound
sbb
xchg
std
ljmp
mov
fsubl
mov
lods
dec
lahf
xor
insb
cli
hlt
jge
push
mov
jg
ss
sub
push
adc
ja
fmull
push
cmp
and
lcall
lcall
or
xchg
pusha
pop
xlat
xchg
mov
fdivrp
add
pop
shl
fs
lods
or
popa
xchg
out
jge
mov
xchg
mov
and
scas
and
jb
xor
pop
or
lock
repz
jns
xchg
imul
iret
xchg
jae
or
subl
fldcw
mov
pushf
dec
cmp
stc
or
int3
bsr
pop
inc
and
ftst
mov
xor
enter
sbb
and
aad
lret
test
ss
nop
jne
shrb
jmp
das
push
cmp
sub
je
nop
outsl
adc
loope
mov
insb
mov
pop
fsubrs
imul
inc
nop
call
popa
push
mov
xchg
xorl
das
mov
or
ret
dec
shl
xchg
xchg
test
aad
testl
mov
sub
pop
gs
lds
mov
xor
rorl
mov
std
js
jbe
add
push
sub
addr16
les
rclb
lahf
insb
pop
into
mov
mov
adc
ljmp
aas
mov
loopne
shr
pop
push
lret
pop
or
inc
cmpl
in
call
ret
test
or
mov
pop
movb
shll
inc
pop
int
idiv
mov
push
ss
orl
mov
ja
in
shll
dec
fisttpll
fstpl
xchg
rcrb
loop
or
loop,pt
fidivs
push
aad
xor
fsts
enter
xor
divb
test
and
adc
cwtl
pop
cs
sub
es
test
lea
in
pushf
loopne
adc
mov
dec
fstl
ret
sbb
fwait
add
pop
inc
cmp
pop
and
lea
mov
or
add
jno
or
loop
out
mov
je
orb
sub
fsts
dec
sbb
aaa
fists
repnz
ret
adc
mov
pop
call
mov
pusha
add
ja
or
jns
xor
in
mov
cmc
jge
outsb
mov
adc
insl
jnp
jle
or
jl
push
lcall
loope
gs
mov
cmp
and
mov
movsl
mov
inc
mov
sub
add
add
or
jecxz
jg
jp
inc
jmp
cmp
pop
repnz
xchg
add
adc
push
jle
push
aam
pusha
aas
push
test
ss
divl
sub
cmp
mov
add
jmp
mov
daa
call
sub
andl
jle
pop
gs
cltd
pop
es
clc
xor
mov
test
sbb
rcrb
and
ret
mov
push
sbb
les
cmp
leave
mov
popf
jg
bound
pushf
mov
push
or
adc
cs
popa
mov
xchg
sbb
mov
cmpsb
daa
test
into
ja
xor
out
rorb
adc
adc
or
pop
lahf
ds
fs
fs
dec
pop
jmp
xchg
clc
adc
and
jmp
jge
cmp
stos
mov
imul
inc
out
dec
lods
add
xor
addr16
stos
popa
pop
inc
push
insl
push
mov
sbb
push
dec
stos
cmc
mov
pop
cltd
xor
jmp
test
mov
xchg
mov
mov
lods
add
in
andb
call
lret
leave
cs
repz
or
push
outsb
xor
ds
sbb
andl
andl
ret
xchg
push
mov
and
lods
loop
sar
dec
leave
imul
mov
or
sbb
push
mov
jb
mov
or
sar
call
popf
inc
add
pop
lock
adc
sti
sub
adc
js
cld
push
cld
or
sbbb
or
cmp
aas
scas
out
rcrb
inc
xchg
or
out
add
frstor
clc
jecxz
push
pop
mov
sbb
mov
mov
sbb
push
testb
cmpsb
push
test
sub
push
adc
mov
push
push
or
push
test
mov
dec
ret
push
outsb
scas
or
test
mov
cmc
xor
inc
out
jecxz
xor
mov
mov
xor
push
adc
sub
cwtl
jno
xchg
push
pop
xlat
lock
test
xor
sahf
pop
test
bound
push
or
test
outsb
in
lods
push
xor
out
mov
and
cmpl
cld
jns
rsm
rorl
imul
or
testb
stc
mov
enter
adc
xchg
xor
shlb
add
es
pop
rolb
xor
adc
sub
jns
push
decb
mov
pop
xlat
sarb
xorl
jns
iret
sub
cmp
sbb
in
lods
sbb
lret
rorl
xor
test
jmp
mov
imul
in
jne
repnz
aad
sbb
dec
sbb
cmp
add
loope
imul
aaa
int
shll
and
add
ljmp
push
jo
pop
aad
cltd
mov
push
pop
mov
add
dec
sub
and
xchg
cmp
cmp
cli
jae
mov
std
dec
xchg
add
push
sbb
pop
mov
lock
sub
adc
pushf
sub
dec
lret
inc
pop
mov
sbb
cmp
pop
jns
leave
xchg
mov
cmpl
add
lahf
test
xor
mov
adc
cmp
sub
cmp
rorb
cmpsl
fsts
sub
iret
xor
cwtl
sub
cmp
xchg
push
lods
sti
dec
pop
inc
fcmovb
lahf
xorl
mov
pop
ss
jae
dec
out
int
pop
mov
mov
hlt
pop
push
push
mov
pusha
mov
push
cmp
in
adc
inc
lahf
mov
pop
jnp
mov
cltd
or
shl
mov
popf
push
cmp
stos
cli
shrb
add
push
push
inc
ja
add
mov
mov
add
jo
xchg
xor
cld
lcall
add
inc
add
cmc
add
hlt
popa
movsl
paddusb
push
jmp
lea
jns
mov
stc
lret
mov
push
xchg
jo
pop
pop
mov
mov
sbb
xlat
pop
cmp
mov
and
adc
mov
addl
in
sahf
popf
ja
push
sbb
pusha
pop
pop
ljmp
pop
jnp
movb
adc
stos
ret
and
fdivs
lret
push
loopne
push
xchg
call
shlb
pop
mov
adc
mov
scas
test
push
gs
jbe
pop
xor
js
pop
add
repnz
pop
test
or
scas
sbb
fdivs
push
sub
shl
in
push
xor
xlat
and
jae
mov
loop
mov
sub
inc
mov
or
pushf
mov
jp
aaa
imul
cltd
rolb
xlat
dec
jns
lods
xchg
jns
divb
push
xchg
add
in
ljmp
je
shlb
out
shll
addr16
cmpsl
sub
cwtl
lock
sbb
dec
bound
and
inc
push
stos
add
push
jnp
cmp
or
jb
or
stc
stos
fadds
into
push
pop
push
outsb
fistps
imul
ss
cs
and
fdivrp
jmp
push
stos
insl
pop
ret
cmpsb
xchg
adc
shll
dec
or
push
jg
xchg
or
ja
pop
je
jmp
xchg
call
mov
test
mov
iret
pushl
cltd
loope,pn
pop
inc
sbb
std
out
add
pop
hlt
movaps
or
xor
push
popa
sub
and
add
cltd
test
cmp
cwtl
jg
mov
insb
orb
mov
jle
pop
mov
outsl
sub
ljmp
loope
scas
mov
add
leave
aam
xor
sahf
loopne
popa
push
xor
in
fucomi
mov
repz
sbb
frstor
cmp
push
push
push
mov
and
push
cmp
lahf
mov
dec
pop
xchg
add
inc
push
sub
lret
sbb
imul
adc
xchg
mov
jnp
push
lret
nop
jnp
push
or
outsb
imul
in
cmp
mov
or
xor
dec
and
dec
into
push
sbb
dec
lcall
lret
ds
roll
es
lahf
cli
and
mov
xor
popf
fbstp
and
dec
xchg
out
mov
adc
je
scas
aas
dec
add
imul
aam
in
lret
cmp
dec
fildll
mov
mov
test
cmp
mov
xor
push
cmpsb
mov
xchg
in
xor
add
mov
xor
inc
leave
inc
cmp
jne
push
stos
sahf
imul
call
mov
pop
mov
mov
xor
dec
inc
dec
add
cmp
mov
sbb
jb
jg
loopne
xlat
repnz
nop
imul
or
lahf
cmc
aas
or
adc
jl
inc
xchg
iret
leave
cmpb
in
mov
out
in
leave
mov
jno
out
jle
mov
push
out
ljmp
cmp
cmp
pushf
adc
out
mov
outsb
mov
inc
lock
fdivrp
imul
inc
mov
mov
aad
and
std
lahf
lret
xchg
ss
push
mov
sbb
sti
or
call
cmp
repnz
stc
outsb
sub
sbb
and
or
adc
lods
sub
add
daa
dec
scas
in
inc
mov
pop
inc
adc
daa
gs
mov
out
and
in
faddp
pop
push
pop
jp
jge
pop
mov
lea
jae
int3
sarb
or
call
cmp
icebp
insl
punpcklbw
and
push
cmp
arpl
cmp
push
cmc
outsl
pop
xor
std
mov
sub
inc
mov
pop
stos
cs
xchg
mov
out
xchg
jb
aam
addl
add
inc
les
int
jbe
cltd
movsl
imul
or
push
adc
mov
mov
sbb
xor
in
fwait
out
fs
sub
call
cli
sub
popf
pop
cmp
add
test
cmp
or
fcmovbe
orb
pop
ja
adc
fbstp
shlb
test
rcrb
sbb
scas
dec
dec
jne
repnz
fbld
xchg
dec
mov
aaa
int
cmc
iret
jne
sbb
not
jg
push
xchg
add
pusha
ret
lds
push
jecxz
xchg
icebp
out
subl
icebp
dec
sub
cmp
or
pop
cmp
call
ja
and
enter
test
mov
shll
cmp
in
inc
mov
pop
jbe
mov
inc
aam
stc
rolb
outsb
test
dec
test
subb
adc
aas
push
add
ss
int
push
cs
clc
and
jmp
ljmp
inc
imul
iret
fimull
xor
cmp
inc
inc
push
js
add
lea
or
xchg
xor
ljmp
cmc
ljmp
das
outsb
lock
mov
inc
addb
dec
pop
ds
push
xchg
mov
inc
cmp
push
cmp
and
daa
push
jp
sarl
mov
mov
and
inc
jle
pop
pop
xor
fucomp
lds
push
mov
sbb
fdivr
repz
pop
pop
jecxz
pop
inc
insl
cmp
lcall
aad
mov
addr16
pop
and
cs
sarb
mov
das
push
mov
mov
cmpsb
xchg
sbb
mov
jle
push
loop
push
jl
push
cmp
fcos
inc
mov
sub
cmp
push
lea
neg
mov
arpl
stos
mov
lea
insl
icebp
jbe
cmp
jo
or
lea
or
pop
mov
imul
iret
stc
jne
lret
arpl
jns
popf
pop
adc
dec
fistpl
inc
arpl
cmp
jbe
adc
popf
lods
push
mov
sbb
push
rorb
cmp
arpl
mov
sbb
repz
fs
inc
sbb
ret
mov
insl
xlat
push
xor
xlat
mov
cmpsl
mov
xor
and
adcl
iret
cs
leave
push
test
adc
dec
loop
into
jmp
pop
xchg
les
cmp
cmp
addr16
or
adc
mov
pop
sub
in
and
push
call
bound
in
stos
insb
insl
mov
dec
push
pop
push
sbb
cmp
sbb
pop
pop
dec
icebp
loop
jns
inc
ret
push
movsb
out
setl
and
aas
sbb
fcomp
scas
xchg
and
push
scas
imul
andl
pcmpgtw
jge
test
adc
into
loope
pop
or
aas
test
push
lods
or
mov
jbe
sub
cmp
jae
sahf
mov
sub
outsl
pop
sub
add
or
xor
or
dec
inc
or
pop
inc
or
add
add
dec
inc
or
pop
inc
or
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
