adc
add
mov
inc
mov
movsl
sub
sbb
cmpl
fnstsw
dec
mov
sarl
sahf
mov
rorb
jnp
cwtl
lret
aas
insb
sub
pusha
iret
lahf
aaa
xor
jp
and
add
adc
insb
and
inc
mov
rcr
pop
xor
imul
cwtl
and
cmp
icebp
adc
inc
clc
scas
icebp
or
inc
mov
push
mov
dec
adc
adc
xchg
in
stos
dec
out
adc
pop
inc
test
inc
xor
mov
push
hlt
xchg
mov
std
dec
sti
imul
fstp
in
mov
xchg
dec
dec
test
in
rolb
loopne
rorb
mov
gs
xor
js
sbb
popf
adc
add
lods
sub
call
cmp
negb
xchg
pop
inc
fimull
mov
add
and
frstor
enter
xor
adc
jmp
sub
ja
lock
or
push
imul
insl
xchg
xchg
lret
jge
sub
inc
xchg
ds
sahf
jge
jnp
jae
push
sub
push
mov
icebp
adc
pop
mov
addb
sbb
mov
pop
adc
mov
ljmp
jo
int
mov
testl
nop
add
push
push
xlat
push
pushf
and
arpl
mov
out
fisubs
pop
adc
cmp
or
mov
dec
lret
popf
sbb
lret
sbbb
stc
testl
cltd
shrb
pop
jb
pushf
jne
mov
inc
cmpsl
mov
mov
inc
cmp
ficompl
outsl
lods
mov
mov
scas
dec
mov
xor
imul
add
adc
push
rolb
andl
dec
cmp
into
std
scas
movsb
dec
aaa
add
fcomp
ljmp
cmp
insl
pop
mov
mov
fdivrs
xchg
rcr
mov
popa
imul
adc
sub
rcrl
pop
stc
add
inc
pop
scas
mov
mov
xor
mov
inc
aam
jae
mov
jmp
lret
js
iret
stos
aad
add
or
fiadds
add
cmp
scas
and
pop
adc
fsubs
or
jmp
add
idivl
jmp
push
jnp
push
sub
mov
movl
mov
mov
lcall
divb
dec
out
or
add
test
or
and
cld
push
pop
adc
daa
lret
hlt
in
push
repz
out
lcall
xor
push
pop
pushf
pop
cmp
add
imul
add
mov
pushf
add
jo
mov
adc
sbb
xchg
xchg
sub
add
aas
cmp
sahf
std
mov
insb
sar
popf
add
xcrypt-ofb
cmpsl
outsl
cmpsl
push
loopne
imul
jbe
testb
inc
lods
cmpsl
sahf
xor
add
iret
sbb
mov
xchg
cmp
adcb
pop
pop
arpl
and
es
and
popf
call
xor
sbbl
cmpl
and
dec
jb
daa
popa
imul
call
sub
fnstsw
repnz
pop
cmc
xchg
push
incb
ljmp
test
mov
sbb
pop
pop
rcll
sbb
add
mov
push
es
out
test
jns
cmp
in
cmpsl
inc
fsts
or
clc
movsb
clc
jb
xchg
sbb
sbb
mov
sbb
out
xor
cmpsb
push
aaa
pushl
mov
push
mov
scas
mov
in
shl
adc
inc
or
and
mov
mov
repz
pop
outsl
fs
push
push
mov
jl
lret
cli
mov
cmpsb
inc
mov
xchg
sub
movsb
mov
mov
cwtl
mov
shlb
mov
sbb
outsl
or
or
je
lahf
sbb
adc
sbb
push
fsubrs
mov
adc
lret
push
mov
cli
push
pop
mov
pop
mov
push
in
mov
cwtl
or
loopne
xor
add
jecxz
lcall
mov
repz
or
jnp
pop
cs
inc
test
inc
paddb
les
lahf
stos
lea
jmp
js
iret
mov
or
inc
cmp
mov
stos
hlt
pop
push
mov
cs
mov
imul
std
leave
mov
xor
cmp
and
sarb
push
sbb
inc
dec
or
adc
lea
adc
pusha
mov
adc
ret
pop
repz
daa
xor
sti
filds
cwtl
pop
shrl
mov
dec
push
and
cmp
int
pop
mov
mov
movsb
andb
jnp
int
or
lea
add
mov
jge
arpl
push
sbb
and
or
add
cmp
pop
push
je
pop
mov
inc
xor
or
dec
and
add
es
lods
ss
push
divb
xchg
sub
xchg
iret
aam
int3
sub
and
jno
into
mov
sbb
and
xchg
je
inc
fstp
mov
das
int3
popa
int3
pop
inc
andb
mov
xchg
jns
movsl
aaa
pop
xchg
jns
and
adcl
pandn
push
inc
and
aaa
es
jbe
dec
dec
mov
and
pusha
lcall
pop
stos
cmpsl
sub
mov
or
std
and
push
jmp
inc
add
inc
jg
ss
and
mov
and
outsb
and
pusha
addr16
repnz
sbb
jge
and
mov
stos
mov
mov
cmp
addr16
and
and
or
adc
popa
ja
jle
jp
pop
push
xor
std
sbb
loope
arpl
push
ret
mov
xchg
sbb
leave
jle
jmp
mov
test
in
repnz
fdivrs
mov
mov
jno
push
imul
clc
or
repz
or
push
das
pop
hlt
push
or
dec
mov
inc
dec
sbb
mov
mov
daa
push
sub
xchg
cmp
sub
dec
xchg
rorl
mov
insl
mov
xchg
sbb
lret
int3
aad
inc
mov
sub
cltd
fstps
aas
fdivrs
nop
push
into
out
stc
ret
fcmovu
aas
xchg
mov
mov
out
repnz
push
scas
sbb
std
add
outsl
push
mov
sub
inc
xor
aad
in
fwait
test
sub
cmpsl
xor
or
pushf
icebp
adc
xchg
ja
dec
lods
sbb
mov
push
mov
mov
inc
movsl
leave
xor
shlb
out
fwait
pop
inc
xor
pop
inc
jnp
in
sbb
and
adc
dec
pop
cwtl
mov
xchg
in
or
pop
sbb
in
dec
adc
cmp
inc
inc
xor
inc
outsl
loope
stos
jb
mov
xchg
or
pop
test
arpl
jo
cld
loop
mov
shrl
cmp
roll
jbe
mov
std
inc
xor
lea
iret
sbb
mov
mov
jb
lods
and
loop
aas
gs
outsb
loop
cltd
jmp
dec
cmp
add
stos
push
jp
push
push
ja
inc
cmp
jo
loopne
repz
ret
cmp
out
iret
sub
jecxz
add
cmp
mov
cmp
push
insb
fidivrs
add
stos
dec
push
outsb
pop
jg
cmp
xchg
push
sti
mov
pop
fdivrs
or
enter
cmpsb
jns
mov
pop
pop
je
lea
mov
sub
add
das
pop
mov
cli
xor
cmc
add
pushf
lds
dec
clc
icebp
dec
dec
out
stos
jge
filds
jno,pt
out
jmp
leave
mov
sbb
iret
pushf
daa
mov
aas
out
pop
add
pop
ss
push
nop
or
sub
and
mov
add
dec
jae
inc
push
xor
hlt
dec
sbb
pop
cmp
adc
repnz
and
xchg
cmc
stos
mov
sbb
cmp
inc
movsb
pop
testb
xchg
shl
sbb
pushl
jmp
cli
add
mov
mov
cmp
stos
jne
adc
rcrb
movb
shrl
cmp
and
pop
adc
repz
xor
xor
outsb
imul
xor
lret
and
iret
push
sub
mov
mov
xchg
xor
mov
fimuls
shlb
mov
xor
pop
dec
mov
pushf
pop
dec
jl
cmp
dec
test
aaa
inc
mov
fmuls
sub
movsb
sahf
je
mov
and
clc
andl
cmc
mov
jle
sub
dec
cmc
mov
imulb
shll
rcll
xchg
mov
lods
movsbl
lods
mov
aaa
mov
and
loop
xchg
pop
clc
lahf
sti
inc
jmp
and
and
loop
mov
jl
loopne
push
sub
fcomps
jns
test
in
pop
dec
sahf
xchg
xor
inc
xor
adc
xor
aaa
xor
dec
push
mov
adc
dec
add
adc
std
add
cmp
shr
fnstenvs
sbb
adc
in
cmp
ret
push
jno
and
add
ret
subb
cmp
stos
jb
inc
or
sahf
jns
jnp
and
hlt
int3
aam
dec
and
dec
jno
pusha
je
not
lods
test
sti
or
adc
lock
dec
push
pop
js
xor
fcom
imul
push
stc
popa
and
xchg
ss
loope
jb
xor
sarb
mov
mov
mov
mov
mov
dec
fisttpll
xchg
mov
shl
mov
sub
xor
flds
mov
loope
je
pop
aam
icebp
into
add
fs
lcallw
or
pop
mov
pop
jmp
xlat
mov
and
and
fists
and
adc
std
rorl
out
xor
ljmp
enter
stc
loopne
pusha
ss
dec
or
test
or
adc
dec
mov
mov
fwait
les
insb
lods
add
push
or
dec
enter
loope
mov
popa
lods
negb
add
push
cli
pop
fdivl
leave
pop
inc
or
push
inc
and
lahf
or
movsl
xor
fisttpll
sub
or
movsb
in
mov
mov
inc
push
cmp
js
sub
andl
inc
inc
sahf
jl
adc
xor
subb
neg
mov
mov
sbb
mov
hlt
insb
call
inc
cwtl
jo
ret
data16
push
decl
addr16
and
stc
js
inc
mov
dec
insl
dec
fnstenv
inc
xor
cmp
push
rcrl
out
int3
push
inc
add
adc
push
cltd
stos
pop
xchg
movsb
inc
fisubrs
inc
icebp
add
fisubl
cwtl
jp
insl
arpl
repz
pushf
popa
cmp
mov
cmpsl
add
popf
jge
jle
insb
movsb
outsl
jle
xchg
dec
jbe
mov
pop
jmp
loop
cmp
cmp
aas
pop
fists
scas
mov
clc
mov
xor
cltd
ljmp
sbb
push
sub
daa
xlat
les
mov
inc
lds
sub
out
fbstp
pusha
into
pop
jecxz
test
test
dec
ss
lea
fadd
dec
add
lods
or
loop
push
xor
std
loopne
or
mov
mov
push
loop
push
hlt
xchg
in
cwtl
xchg
xor
pop
mov
sbb
add
mov
dec
sbb
inc
xor
inc
jb
call
outsl
cli
ss
les
addr16
loop
dec
lods
adc
js
push
out
gs
sbb
das
insb
stc
sub
mov
outsb
dec
inc
clc
push
mov
out
aam
das
stc
mov
cmp
xor
sbb
dec
mov
aad
cmpl
ret
jae
push
inc
jg
lcall
les
js
pop
cmp
dec
mov
leave
test
cmp
pop
popf
mov
scas
push
cvttps2pi
hlt
jae
mov
mov
ret
adc
jecxz
xor
cmp
dec
lods
movsb
int3
outsb
mov
sbb
inc
std
ja
fmull
inc
jg
call
clc
inc
or
inc
call
lret
mov
jne
push
outsl
stos
cmp
call
rclb
dec
jnp
int3
push
lcall
fldt
outsl
dec
sbb
addl
xchg
imul
faddl
adc
mov
inc
cli
daa
add
cmp
imul
xchg
push
mov
test
in
movsl
int
sbb
or
aaa
js
sub
loopne
cmp
test
xchg
out
sti
jno
outsb
lods
mov
add
jle
rep
mov
push
popf
movsl
out
adc
or
loope
sarb
sbb
mov
fistps
xchg
or
dec
push
sahf
pop
das
ret
push
dec
movsl
js
stos
jp
adc
pop
das
movsb
cld
cmp
loopne
sbb
dec
scas
jg
pushf
push
call
cmp
ss
nop
pop
ret
rcrb
push
loop
out
repz
mov
mov
mov
std
frndint
sti
push
push
push
ret
sbb
cmp
jb
xlat
fmul
inc
scas
sub
jb
addb
xchg
jmp
shll
mov
xor
inc
pop
xor
pop
inc
adc
rcll
and
push
dec
cmp
push
dec
push
popf
sbb
out
stc
dec
sub
adc
int
clc
adc
inc
sbbb
nop
xchg
sbb
push
mov
cld
sub
fidivrl
in
je
push
add
es
stc
cmp
aas
fisttpl
cmp
sub
stos
mov
mov
inc
xlat
es
pushf
or
fmul
adc
cli
xchg
xchg
mov
aaa
xchg
sbb
xlat
jecxz
int3
pop
out
xchg
sub
xchg
shrl
daa
pusha
or
js
or
mov
mov
sbbl
inc
cmp
sub
imul
loopne
jl
jl
mov
jno
iret
fs
xor
xor
shrb
test
pop
inc
inc
pop
cltd
aaa
out
ja
xchg
sub
inc
iret
popf
pop
xchg
mov
lea
pushl
mov
xchg
out
dec
mov
pushf
xor
out
jbe
cmpb
addl
sbb
xchg
mov
lock
data16
mov
shrl
daa
ja
xchg
scas
icebp
add
inc
popa
shlb
movsb
data16
fildll
jmp
insl
jge
push
pop
test
cmpsb
push
fldcw
push
jge
rorl
jge
sbb
push
lods
adc
cltd
mov
push
imul
dec
sbb
loop
sbb
shll
jg
jmp
cmp
jecxz
add
pop
jmp
std
fisttpll
in
int
repz
jmp
or
ds
fistl
movsl
sbb
subb
add
test
dec
pop
scas
test
or
lds
sub
fucom
and
xchg
loopne
test
std
cli
jge
sub
push
pop
in
jne
pusha
cld
adc
lret
or
xchg
dec
fistpll
les
xchg
shlb
jbe
daa
int
push
pop
jnp
mov
xchg
xchg
dec
movsl
out
aas
xor
adc
arpl
sbb
inc
and
loope
xchg
inc
test
adc
push
push
adc
xchg
popf
test
pushf
mov
mov
pop
cmp
out
into
push
push
sub
aad
ljmp
out
iret
cli
cmp
pop
pop
jg
popa
sbbb
pop
leave
mov
mov
xchg
xor
loope
imul
mov
call
xor
outsb
mov
jecxz
or
mov
mov
cmovo
test
xchg
aaa
inc
cmp
idivb
cwtl
push
lahf
scas
insl
jae
xchg
mov
add
out
btc
rorb
ss
aas
rcl
mov
cmpsl
fcomip
xor
push
sbb
int3
dec
int
shl
enter
xchg
in
aaa
in
sub
out
frstor
mov
mov
push
jb
repnz
jno
out
test
in
andl
inc
sbb
mov
add
mov
in
dec
in
ss
shrb
in
pop
xchg
or
push
xor
scas
or
jb
xlat
int3
cltd
cwtl
push
mov
mov
mov
ljmp
jge
sub
movsb
sub
push
jp
inc
in
stos
sbb
andb
iret
repz
lods
sub
stos
xchg
lea
in
sbb
mov
out
fnstsw
inc
xchg
mov
pop
push
dec
rcr
pop
xchg
adcl
hlt
jp
insl
sbb
jge
mov
jbe
mov
out
push
adc
jb
push
das
negb
in
ds
cs
into
std
xchg
adc
mov
mov
test
loop
daa
outsl
les
fadd
dec
es
test
or
rolb
scas
jne
xor
push
popl
test
mov
and
mov
ljmp
ds
mov
fmull
testb
jo
cli
cmp
xchg
outsb
stos
push
adc
movsb
std
fwait
mov
push
in
fstps
or
pop
mov
push
adc
mov
aas
loope
adc
jg
and
sbb
push
pushf
daa
jns
mov
dec
mov
imul
mov
arpl
sahf
pop
xor
aam
aas
sbb
mov
add
jns
cmp
rolb
lret
adc
mov
xchg
xchg
mov
xchg
push
inc
test
lret
in
push
mov
ror
mov
lods
repnz
inc
mov
mov
dec
jle
push
inc
pushf
xor
mov
adc
or
adc
pop
push
mov
push
int
mov
mov
insl
clc
sarb
jno
mull
xchg
test
ret
push
add
int3
mov
jg
cmp
test
in
pop
cmp
jmp
pop
int3
cli
pop
push
repz
imull
add
subb
or
cmpsl
hlt
mov
add
mov
fldt
mov
or
adc
add
cmp
mov
pop
jne
adc
lea
mov
das
pop
lahf
ret
fistl
lret
mov
mov
and
inc
cltd
scas
divl
lret
lea
lds
in
out
les
das
das
lods
aas
or
adc
test
loope
mov
out
add
fsubl
insl
and
or
repz
and
mov
das
int3
scas
xchg
sub
pushf
jo
cltd
stos
push
sbb
cwtl
stc
cli
xorb
enter
lock
xchg
inc
aad
add
xchg
pop
mov
insl
jae
aaa
add
mov
adc
sub
sub
add
and
pop
movsb
adc
pop
fisttps
outsl
das
add
jbe
pop
scas
jp
jmp
je
cmpsb
dec
and
xchg
sub
push
mov
xor
enter
sbb
mov
lods
push
cltd
jl
push
rorl
insb
xchg
pop
enter
stos
adc
out
pop
popa
ret
stos
out
dec
stos
lds
xchg
int3
or
icebp
xchg
test
nop
push
cmp
mov
dec
loopne
mov
insl
dec
ret
ficomps
push
xor
dec
push
push
jb
icebp
subl
xor
cmp
add
movsl
icebp
sbb
push
and
inc
fdivp
xor
call
fidivrl
push
mov
push
dec
ficomps
into
jmp
mov
sub
jecxz
mov
push
push
dec
jae
sub
outsb
fsubrl
ds
out
push
ds
cli
or
cmp
iret
jbe
add
sub
ret
pop
jae
loope
bnd
sbbb
mov
std
inc
xchg
mov
sub
int
in
and
fnstenv
gs
jo
mov
repnz
sbb
outsl
mov
mov
pop
iret
mul
dec
inc
mov
mov
std
push
jecxz
push
and
cmpb
xor
das
and
add
or
out
lds
divb
ja
aad
add
xor
aam
aad
xchg
aad
jb
xor
adc
push
setle
pop
mov
mov
out
pop
fistl
int
cmpsl
dec
adc
jl
setns
xor
lcall
addr16
and
aam
nop
sub
aad
xchg
mov
orb
arpl
xchg
aaa
push
mov
rclb
imul
roll
sub
imul
pop
js
mov
lcall
les
enter
add
xlat
fs
mov
add
xacquire
scas
imul
inc
in
imul
into
and
add
jmp
push
lods
enter
jg
mov
outsb
leave
jmp
mov
lea
mov
inc
lock
sub
jmp
mov
test
pop
xchg
in
gs
scas
lcall
ljmp
fists
outsb
or
repz
jmp
sti
in
jne
loop
and
call
or
jp
jb
arpl
jne
jle
xor
outsb
ret
sahf
mov
inc
out
or
sarb
repz
push
cmc
dec
nop
push
mov
sub
lea
je
ret
or
test
mov
negl
lods
outsb
inc
fildll
mov
mov
jnp
or
into
addr16
add
imull
sub
and
jno
xor
rcll
push
jb
inc
popa
fnstsw
popa
sahf
out
imul
stc
lret
inc
jbe
std
jne
xor
mov
in
mov
jge
mov
xor
scas
lret
and
inc
mov
imul
mov
pop
cmp
adc
not
sarb
lock
les
mov
aad
scas
test
push
sti
inc
inc
inc
and
push
sub
addl
push
gs
add
ljmp
cmp
push
push
jmp
sarb
repz
call
ret
and
and
inc
movsl
gs
adc
adc
mov
outsl
test
ror
mov
aas
fwait
loop
jp
test
sbb
test
cmp
mov
and
dec
mov
mov
xchg
jge
xchg
xlat
aad
add
fadds
push
mov
shl
inc
pop
jecxz
inc
cld
add
cmp
xor
jnp
xor
loopne
mov
push
cmp
lds
fs
inc
lock
xor
sub
test
hlt
pushf
mov
ror
xchg
cmp
jno
bnd
or
push
xchg
subb
into
aaa
jg
mov
jg
xlat
xchg
dec
dec
push
outsl
fcmovu
pusha
int
and
push
ljmp
add
jbe
mov
loope
pop
arpl
mov
sahf
jmp
lcall
insb
inc
cwtl
or
and
gs
ret
sbb
cmp
or
sbb
dec
arpl
cs
clc
jo
cmp
aad
pop
mov
ret
or
mov
mov
test
test
push
jae
sub
hlt
ds
lahf
jmp
sti
mov
mov
movsl
mov
insb
cmc
jne
stc
negl
jns
into
jnp
cmc
jg
and
ficoml
jne
les
popa
push
pop
mov
in
xor
mov
in
lcall
jne
clc
mov
add
jecxz
push
fnstsw
mov
fsubr
adc
movb
pop
xchg
sbb
pop
cmp
push
xchg
repz
fldt
data16
outsb
add
mov
aas
popf
adc
repnz
inc
repnz
bound
xor
mov
dec
cwtl
mov
cmp
mov
inc
dec
push
mov
mov
and
or
popf
jae
pop
push
repnz
gs
arpl
testb
and
jmp
xor
dec
out
in
and
and
dec
test
xchg
push
mov
mov
or
mov
xchg
or
add
scas
dec
push
test
mov
add
push
pop
dec
sbb
pop
ljmp
lahf
mov
sbb
jg
and
andl
dec
inc
add
je
or
aas
out
lret
sub
pop
jns
ja
pop
mov
sbb
jns
dec
sete
clc
addr16
xchg
jne
mov
xor
mov
pop
hlt
pushf
inc
fwait
scas
dec
xchg
mov
sbb
out
in
scas
sbb
jbe
pop
std
cmpb
jmp
shr
movsl
pusha
jne
push
jne
out
or
sub
jae
dec
and
xchg
out
out
xchg
cmp
jnp
sbb
lret
pop
lret
stc
push
and
xchg
mov
scas
inc
aam
ss
push
ret
shll
adc
jmp
pop
cmp
sahf
jge
push
mov
xor
shrl
outsb
jns
rcr
cmp
ljmp
xor
sub
xchg
or
jnp
inc
pop
decb
out
jmp
add
popf
mov
jl
jmp
mov
xchg
sbb
notl
cmp
jb
cltd
dec
mov
pop
cmp
sbb
push
sbb
aad
cmp
inc
dec
aam
jnp
pop
std
pop
jmp
adc
mov
push
inc
mov
or
aaa
jne
in
dec
push
xchg
inc
jecxz
or
repnz
mov
imul
jae
es
mov
jmp
lret
loop
cmpsl
dec
mov
sbb
sbb
pop
adc
or
imul
add
je
in
mov
movsl
dec
ret
xchg
test
xchg
sbb
pop
ds
fwait
incb
incl
or
ret
xor
jl
das
shll
test
mov
insb
mov
es
loope
push
adc
sbbl
lods
xor
jle
push
jle
inc
push
fistl
fwait
add
in
repz
pop
jb
sarl
mov
dec
ljmp
sahf
fadds
outsl
in
adc
imul
or
xor
adc
hlt
jne
fistl
flds
ret
jns
jle
out
call
mov
add
adc
xlat
or
lods
sarb
fcoml
repz
nop
gs
cmc
add
push
ljmp
sbb
dec
add
mov
arpl
adc
leave
aas
jp
push
xor
sub
pop
cmp
cmp
imul
xchg
pusha
stos
data16
mov
popl
lahf
mov
cli
push
out
or
insl
jns
sbb
mov
pushf
ljmp
shll
xchg
xchg
bound
mov
daa
stos
mov
mov
arpl
inc
adc
adc
push
pop
or
mulb
push
out
insl
lcall
out
xchg
add
pop
test
std
xor
inc
jp
pop
xor
or
iret
adc
xchg
inc
fistpll
loopne
sub
int
adc
inc
in
dec
out
push
pop
sti
add
test
push
sbb
lock
rep
and
out
sbb
sbb
in
test
adc
jecxz
pop
icebp
adc
push
cwtl
dec
frstor
pop
shlb
hlt
adc
orb
scas
inc
jnp
inc
cmp
dec
xor
inc
jg
sbb
test
ss
stos
scas
jl
jne
inc
dec
cwtl
pop
test
push
cld
cmp
stos
insl
sbb
je
xchg
pop
xchg
cs
cld
mov
out
xchg
sub
les
push
pushf
fwait
mov
out
xchg
loop
add
nop
pop
pusha
shll
xor
or
dec
movsb
stos
xchg
jle
ja
or
les
xchg
sbb
scas
adcl
bound
cld
push
fisttps
xorl
test
jmp
xchg
mov
xor
push
fldcw
push
inc
xchg
jp
pop
pushf
mov
sarb
jo
push
xchg
pop
fmull
movsl
mov
add
sub
push
imul
xchg
int
add
rcr
js
sub
and
test
aaa
push
push
lea
add
xchg
je
daa
add
enter
out
outsb
xchg
cli
movsl
push
mov
mov
out
mov
add
inc
aam
les
pop
add
outsb
adc
lret
sarl
sarb
ljmp
in
jmp
cld
out
mov
jge
mov
sub
xor
push
pop
mov
mov
test
xchg
or
enter
loope
xor
mov
aaa
dec
aas
cltd
mov
xchg
je
imul
jecxz
lock
sbb
adc
push
arpl
dec
push
fiaddl
push
fwait
sub
das
cmpsb
xchg
pop
push
aam
mov
adc
dec
xchg
inc
jg
loope
outsb
adc
fistpl
jno
adc
insb
and
xchg
adc
inc
adc
pop
lcall
repnz
or
pushf
imul
xor
lahf
xchg
mov
aaa
xor
mov
xchg
jo
fwait
pop
movsl
mov
pop
ret
test
jne
pop
push
mov
cwtl
pop
mov
xchg
fnstsw
addb
adc
js
sbb
fidivrs
sub
js
xchg
dec
leave
pop
imul
mov
rorb
jns
jo
mov
test
jecxz
inc
jecxz
loop
mov
inc
cmpb
repnz
jbe
cld
mov
inc
shr
bound
ret
hlt
ds
push
pop
xchg
xlat
mov
xor
mov
jp
je
push
push
mov
mov
sbb
in
call
cmp
jne
or
in
fs
cmp
lods
fcoms
out
jmp
fwait
out
cmp
mov
jb
sbb
sar
repnz
mov
loop
ret
lahf
repnz
pop
dec
xchg
lods
cmp
xor
imul
cmpsl
add
dec
inc
sub
mov
mov
pop
test
test
cmp
pop
icebp
out
loopne
mov
inc
inc
xor
push
lock
divb
sbb
xchg
push
and
mov
in
je
xchg
fstl
add
stos
mov
mov
loope
int
and
pop
fldenv
push
and
cli
test
bound
mov
nop
mov
cs
mov
jne
pop
int3
lock
or
outsl
test
and
mov
or
in
aaa
push
das
es
or
into
nop
and
cmpsb
sbb
jns
aas
xchg
jge
and
jno
jno
xchg
and
jmp
pop
ds
sub
or
mov
jb
mov
or
hlt
sbb
test
cltd
lret
mov
xor
inc
push
dec
mov
and
ja
out
and
push
decb
cmp
loopne
fs
dec
movsb
pop
jmp
cltd
xor
jnp
dec
sub
lcall
das
in
inc
mov
sub
fcomp
inc
or
inc
lret
out
stc
out
or
rcll
aas
fnstenv
fsubp
jnp
and
aas
adc
jbe
xor
push
scas
pop
movsl
ret
xchg
stc
or
ret
mov
je
mov
cltd
lret
arpl
std
pop
mov
add
push
in
call
rolb
pop
pushf
andb
neg
push
pop
jo
jne
and
cmpsb
movntq
fadd
mov
push
adc
xchg
in
pop
mov
adc
loope
mov
xchg
xchg
inc
dec
adc
les
and
pop
repnz
ss
xchg
inc
and
push
ds
sub
push
repz
pop
pop
fildll
sbb
adc
push
daa
decb
pusha
inc
pop
sarl
repnz
pop
in
fwait
mov
repz
dec
push
xor
cmc
xchg
add
xor
inc
es
push
nop
and
data16
scas
out
inc
mov
popl
loope
dec
mull
mov
mov
adc
jnp
frstor
adc
int3
xchg
fldenv
es
fldt
test
into
int
in
add
sbb
xor
or
ds
and
mov
xchg
orps
int3
xchg
sub
jmp
mov
mov
cmp
fdivs
mov
int
xchg
cmp
rcll
jmp
negl
shlb
sbb
xchg
and
std
and
mov
inc
sub
shr
das
pushf
jmp
add
call
mov
rorb
test
push
movsl
ret
adc
addr16
in
pop
sub
and
scas
scas
sbb
cmpl
repnz
sahf
ljmp
push
mov
or
outsb
xchg
pushf
adc
and
icebp
cmp
mov
cmpsl
aam
cs
jp
push
repz
mov
mov
or
mov
mov
clc
stos
xchg
jge
cmp
sbb
dec
mov
add
adc
sarb
fisttpll
jno
mov
push
negl
dec
stc
imul
rcl
stos
movsl
adc
jne
mov
jmp
clc
sbb
jg
pop
je
mov
adc
insl
push
mov
daa
out
iret
jb
mov
cmp
and
or
shl
pop
das
cmpsb
popf
pop
aam
into
in
mov
push
mov
fistpl
add
mov
adc
and
es
adc
mov
sarb
mov
xchg
pop
mov
repnz
or
dec
push
sub
out
adc
fwait
xchg
scas
outsl
mov
pop
jb
jle
xlat
ret
cmc
adc
ret
dec
das
or
into
shlb
out
push
xchg
xor
lods
hlt
adc
jno
mov
mov
xchg
adc
inc
pop
xchg
or
jge
mov
xor
cmp
les
mov
es
adc
shrl
lock
sub
dec
inc
test
lret
ret
int
pop
adc
loope
xlat
jns
pop
sbb
test
sarb
scas
add
lods
mov
mov
pop
or
mov
hlt
and
mov
aam
test
jns
outsl
mov
mov
add
xor
mov
and
pop
sbb
fildl
pop
aam
out
push
mov
sahf
psrlw
pop
pushf
sub
mov
in
and
lahf
xchg
mov
push
adc
lods
xchg
xchg
mov
or
nop
scas
xor
sbb
push
leave
pop
jb
push
jne
addb
sahf
pushf
and
lret
dec
cmpsb
out
pop
add
jns
aaa
aas
psrlw
movsl
sub
pop
jns
pop
sbbl
lret
adc
into
cmp
pop
adc
or
fisubs
enter
lret
pop
cmpsl
mov
jnp
test
lea
sub
repnz
push
cmp
ret
ljmp
add
push
and
inc
adc
dec
outsb
stos
test
roll
out
pusha
in
sub
pop
int
iret
cmp
dec
stos
movsl
into
inc
xor
cmc
xlat
adc
aaa
aam
mov
stos
dec
and
nop
add
mov
pushf
test
push
pop
shl
mov
out
sbb
sub
xchg
sbb
sub
mov
dec
push
jne
cwtl
dec
and
je
notb
enter
outsb
je
dec
outsb
gs
and
imulb
sub
inc
xchg
sub
jle
inc
sbb
outsl
pop
pop
out
fistpl
and
xchg
cltd
cmp
xor
jp
test
jp
ja
mov
cmp
pop
xor
mov
inc
mov
push
mov
lahf
mov
fwait
imul
pop
bsr
roll
xlat
dec
movsb
pushf
dec
insl
cwtl
cmc
in
xor
out
inc
jmp
jmp
pop
dec
add
fcoms
sub
dec
lea
xor
fistpll
sub
bound
or
fildll
sbb
sub
test
data16
jne
test
jae
inc
cli
fdivrl
mov
sub
fistps
sahf
lret
bound
sahf
sbb
fmuls
push
repz
sub
add
sahf
pop
mov
rcl
xchg
cli
push
sub
imul
insl
inc
nop
insb
xchg
add
push
popf
adc
mov
pop
insb
aas
jae
imul
xor
jbe
stos
aad
push
dec
repnz
and
es
shlb
aam
inc
cmp
xor
and
mov
test
daa
cmp
mov
popf
xorb
mov
inc
and
lret
imul
mov
hlt
addb
mov
lods
lds
stos
mov
xchg
aaa
js
jae
sbb
jmp
or
out
cmp
add
lods
int
jo
jge
lods
jbe
jmp
int3
mov
pop
std
adc
and
ffree
shl
push
push
fisttpl
sub
fimull
push
inc
xchg
outsl
in
add
cs
sbb
push
jno
test
sub
inc
repnz
shll
lock
mov
dec
or
sub
int
fcmovbe
fstpt
mov
lods
out
js
fs
lock
sti
lock
test
ret
push
pop
dec
add
cli
lret
pop
mov
lret
lods
out
pusha
stc
aad
arpl
cmp
ret
mov
mov
or
loop
cmp
in
das
mov
add
enter
sbb
mov
and
add
mov
pop
imul
stc
sbb
jae
pop
orw
shll
mov
jmp
push
fnstenv
outsb
xchg
out
das
mov
or
loop
jmp
adc
push
movsl
fistps
sbb
sub
push
aaa
and
mov
or
jecxz
push
and
mov
hlt
lock
push
adc
jmp
push
sbb
mov
cs
and
xchg
cmp
ds
sub
inc
insb
xlat
sub
test
mov
lea
popa
push
call
pusha
xchg
loop
sbb
mov
mov
test
sti
sbb
out
decb
add
in
cmc
divb
cmp
lds
add
cmpsb
mov
mov
jmp
mov
cmpsl
inc
pop
mov
and
lret
jne
pushf
scas
push
push
movsb
jne
test
push
test
loopne
or
cmp
sbb
mov
std
dec
sub
out
rcrl
loope
int
lea
or
and
loopne
jns
call
add
push
or
cltd
xor
leave
pop
xor
test
loope
mov
push
icebp
mov
and
gs
adc
hlt
call
dec
and
cmp
xor
add
xlat
ds
pushf
add
testb
mov
rcrb
retw
sahf
dec
xlat
cmp
sbbb
sub
push
shll
push
sub
dec
cld
icebp
dec
or
fwait
popa
adc
cmp
push
jg
out
stos
imul
mov
fsubl
pop
jbe
xlat
outsl
xchg
adc
jo
mov
push
mov
jnp
mov
or
fiadds
sahf
insl
ror
sahf
adc
out
pop
imul
sub
ror
repnz
je
fisttps
dec
leave
gs
cmpsl
or
loopne
fistps
fs
insw
decb
dec
ss
mov
push
pop
jp
inc
push
js
mov
loope
sbb
mov
mov
imul
sub
xchg
out
pop
clc
jb
ljmp
test
pop
adc
fisttpll
lea
dec
xor
movsb
mov
inc
or
sbbb
cwtl
xchg
filds
mov
jae
adc
cmp
out
mov
popa
enter
sub
fdivp
xor
sub
jns
xchg
jnp
push
adc
dec
lret
repz
ja
lahf
jmp
add
je
and
iret
xchg
jmp
jge
adc
mov
inc
vrcpps
inc
and
sub
adc
push
inc
imul
pop
dec
and
rorb
inc
xor
mov
negl
mov
call
jl
das
push
popa
push
mov
imulb
mov
mov
fcmove
sbb
sbb
inc
mov
rcll
movsl
or
sbb
inc
dec
push
pop
sbb
or
xchg
imul
imul
les
inc
sbb
pop
jo
sub
fmull
repnz
push
and
jecxz
movsl
inc
fldt
push
add
and
sbb
inc
inc
or
mov
adc
loop
or
cmp
xchg
adc
jnp
pushf
fcompl
cmc
adc
stos
aam
push
cltd
cli
ja
and
dec
sarl
add
pop
aad
inc
out
dec
cmpsb
jp
mov
sti
push
cmpsl
cs
aad
mov
imul
test
fisttps
rclb
mov
rorb
imul
pop
push
repz
int
jo
jmp
pop
mov
xchg
xchg
out
ret
repnz
add
adc
lcall
pop
shl
push
int3
or
mov
loope
adc
mov
mov
fsubrl
jp
mov
lret
mov
mov
inc
dec
add
lret
pop
repnz
jl
xor
stos
jecxz
inc
loop
mov
sbb
dec
pop
dec
lcall
adc
dec
cld
push
inc
lcall
jl
stc
mov
cwtl
push
je,pt
shrb
loop
sti
inc
xor
lcall
insw
push
mov
pusha
lea
sbb
add
in
mov
inc
and
shl
push
mov
or
repnz
cmp
xchg
lods
mov
sti
jmp
sbb
out
push
lods
std
mov
lcall
cld
sbbl
sbb
pop
scas
xchg
iret
xor
aaa
iret
sbb
xor
cmp
push
push
jne
mov
xlat
xorb
js
mov
mov
jo
xor
aad
inc
sub
push
push
mov
testb
jg
inc
inc
mov
in
sbb
inc
add
lods
rcrb
and
mov
stos
inc
mov
mov
xor
movsl
clc
pop
mov
sub
aad
pop
lret
xchg
xchg
add
scas
mov
nop
scas
pop
aas
sbb
jne
nop
pop
test
je
sbb
dec
and
fisttpll
addr16
mov
mov
xor
sbbb
or
leave
and
push
insl
pop
jbe
jne
push
out
fiadds
and
int3
jbe
ret
les
xor
popa
jg
mov
jno
stos
aaa
xchg
mov
push
jge
xchg
test
mov
and
xchg
shlb
test
mov
inc
pop
popa
movsl
inc
in
jecxz
aas
daa
popa
mov
clc
dec
mov
jno
in
aam
clc
or
lea
pop
incl
and
jmp
dec
loopne
jo
mov
cmpsb
les
loope
push
or
test
in
pop
addr16
sti
cmp
xchg
in
inc
cmc
inc
inc
inc
mov
push
push
out
shlb
rclb
mov
add
daa
cli
fmull
or
andps
js
es
movsb
out
outsb
mov
stos
lahf
scas
xor
push
addb
jne
rcll
xlat
fnstenv
cmp
xchg
or
xor
std
mov
sbb
adc
pop
xor
cmp
and
mov
or
mov
cltd
jae
loope
outsb
je
jns
inc
ret
xor
aad
sub
js
dec
test
leave
inc
dec
cmp
pop
in
frstor
dec
cmp
lret
mov
mov
js
xchg
in
sbb
test
push
std
jg
test
nop
es
dec
out
inc
pop
test
adc
js
ja
filds
dec
push
cwtl
jae
stos
dec
mov
mov
jp
push
enter
ljmp
xlat
push
fs
jne
mov
cmpsb
mov
inc
dec
movsl
add
mov
and
adc
hlt
add
or
dec
jne
xor
mov
fwait
jnp
fnstcw
cmp
cmp
popa
int
cmp
push
jmp
lret
cld
or
testb
add
in
rcr
cld
jne
mov
aam
ljmp
dec
stc
enter
ss
cmp
arpl
dec
jg
ss
inc
dec
adc
jns
mov
xor
fdivl
fld1
push
clc
mov
pop
fiadds
pop
mov
gs
mov
cmpsb
dec
in
mov
sbb
movsl
push
test
mov
xchg
dec
jae
fdivrl
stos
loop
xchg
mov
sub
mov
xchg
les
enter
arpl
mov
mov
jae
dec
and
or
repnz
pop
adc
xor
js
jmp
les
lret
mov
or
sbbb
sbb
andl
subb
mov
or
mov
fldl
adc
xchg
icebp
mov
or
cld
mov
mov
std
cmp
cs
test
mov
fmuls
push
lock
aaa
sub
push
insl
or
imull
das
ljmp
pop
pop
sub
mov
xchg
push
inc
jl
xor
pop
push
jg
mov
dec
leave
xor
sub
cmp
out
cmc
mov
mov
outsl
sub
subb
or
andb
push
iret
ret
mov
aad
dec
mov
cmp
mov
cmp
sub
dec
daa
cli
dec
or
arpl
sbbl
pop
shr
cmc
insb
push
daa
rorl
inc
mov
incb
add
scas
orb
mov
rorl
out
mov
std
into
movsb
aam
sbb
cmp
fwait
adc
push
lock
cwtl
cmp
cmp
mov
mov
push
sub
inc
nop
cmp
ss
pop
add
push
nop
jno
out
lock
and
adc
outsl
imul
cmpsl
bound
lret
andw
add
pop
shll
push
mov
idiv
sub
jge
out
cmp
je
rcl
repnz
xchg
mov
or
pushf
scas
xchg
xor
adc
sub
push
mov
or
xchg
insl
hlt
ss
adc
mov
jns
dec
iret
lods
sbb
jnp
add
adc
addr16
les
out
and
out
dec
mov
fdivs
and
aam
push
lret
xlat
call
in
aas
pop
incb
sbb
cmp
pusha
inc
jmp
push
test
rclb
jbe
mov
inc
cmc
imul
cmc
rcrb
mov
mov
insl
call
rcrb
dec
inc
gs
imul
mov
and
cli
fldcw
gs
or
mov
mull
mov
ja
xchg
sbb
shrb
cli
test
test
inc
sti
ret
loop
in
mov
push
mov
pop
out
sarb
mov
and
pop
fcom
aas
cltd
mov
cld
sub
mov
xchg
in
xor
pop
jne
insl
or
jle
nop
adc
add
shlb
xor
andl
dec
out
cs
jge
int
sub
fiaddl
movsl
ds
jb
xor
or
push
dec
sahf
mov
lahf
lea
fnsave
hlt
mov
insl
out
sbb
push
xchg
aas
xchg
jns
rcr
xor
fbld
sub
xchg
or
push
aas
data16
pop
fsub
ficoms
cmp
mov
daa
xor
push
rclb
xchg
jg
mov
ficoms
mov
mov
movsl
imull
mov
stc
scas
lcall
mov
test
or
jo
sub
push
pop
pop
adc
mov
frstor
mov
pop
jle
call
shl
fldt
cltd
popf
push
xrstors
dec
cltd
pop
jp
add
mov
lock
testl
shrb
mov
xor
jmp
subb
jg
iret
jnp
ja
incb
lret
add
enter
sbb
lods
push
dec
jmp
stc
jecxz
xor
imull
mov
mov
rorb
in
xchg
mov
inc
mov
adc
roll
popa
xchg
int
mov
aad
out
lock
adc
push
sub
adc
mov
addr16
xor
repnz
and
xchg
lea
inc
cmp
repz
out
test
mov
cld
xchg
popf
insl
push
jnp
in
jb
jmp
flds
movsl
ret
sarl
je
dec
daa
loop
in
aas
scas
sahf
insl
in
dec
fildl
mov
rclb
jge
out
clc
cmp
xchg
and
movsb
mov
adc
jno
in
push
inc
int
adc
pop
test
mov
push
cmpl
pop
push
jnp
aaa
cmc
push
test
push
inc
addr16
lahf
outsl
dec
dec
insl
test
dec
push
and
js
add
dec
pop
mov
sub
sub
shrl
es
mov
out
shr
and
pusha
jb
inc
dec
or
xor
jmp
stos
push
jno
pop
or
mov
test
cmp
jg
mov
and
imulb
aas
insb
jbe
and
push
out
lcall
stos
inc
xchg
hlt
jo
push
xchg
mov
pop
shl
cwtl
out
sub
inc
pop
dec
mov
stos
push
inc
ficoms
dec
movsl
or
dec
push
adc
or
ds
pop
cld
jge
mov
mov
leave
xor
into
adc
push
jo
in
out
xchg
ss
arpl
loop
ljmp
inc
stc
sar
imul
or
stos
mov
gs
pop
push
mov
iret
aas
stc
lret
icebp
lods
fcmovbe
stos
jns
insl
mov
mov
mov
in
push
lret
add
int
xlat
push
adc
sub
mov
push
jg
fidivs
and
cmp
pop
je
inc
mov
aam
add
xor
mov
icebp
adcl
mov
xchg
das
mov
inc
enter
mov
bnd
sub
adc
sbb
inc
imul
daa
push
imul
mov
repnz
jg
push
xchg
sub
xchg
cmp
bound
add
es
in
jnp
fbstp
add
shll
dec
adc
std
sarl
jl
shl
sbb
inc
jg
shr
mov
push
jecxz
mov
push
jge
scas
call
jns
sub
adc
add
ja
les
push
mov
mov
mov
addr16
xor
push
cli
nop
dec
cmp
push
fstps
jp
pop
fsts
cmp
in
popa
out
sub
cmp
mov
sub
pop
add
or
pop
mov
inc
cmc
out
mov
repnz
xchg
loope
in
sbb
arpl
push
sub
sub
repnz
dec
jle
cs
imul
adc
leave
dec
rep
pop
mov
push
xor
pop
pop
loopne
aaa
sahf
js
fisubrs
or
mov
jno
cld
sbb
loop
arpl
or
out
int3
leave
dec
push
arpl
cli
aaa
xchg
sbb
in
xchg
fnstsw
or
cmpsl
and
jo
adc
adcb
fnstenv
mov
sbb
sahf
jg
nop
sbb
cmp
add
inc
cmp
lahf
cmpsl
int3
pop
push
test
call
mov
xorl
mov
test
jnp
add
aaa
xchg
xor
or
mov
xchg
xor
imul
addr16
loopne
sbb
cld
std
pop
add
insl
mov
leave
pop
cmp
in
int
mov
pop
and
addr16
in
inc
xor
sub
mov
inc
notl
movaps
repnz
out
fistpl
icebp
mov
dec
push
movsl
xor
cmc
xor
dec
dec
pop
xchg
xchg
xchg
mov
pop
inc
std
fstps
imul
out
jae
jp
andl
cmpsb
mov
sbb
mov
cmp
inc
aam
mov
inc
clc
mov
cmp
push
push
xchg
push
test
fsub
sbb
cmp
cmp
iret
and
scas
out
dec
inc
aas
arpl
inc
and
jl
push
jmp
push
sub
iret
subb
inc
mov
iret
fadd
pop
cmp
hlt
divl
xlat
hlt
jne
fldenv
xchg
sub
insl
push
pop
insb
xor
push
fdivrs
jae
jp
xchg
mov
cli
sbb
inc
js
inc
scas
cwtl
adc
call
xchg
jp
xlat
sbb
aad
adc
pop
jmp
ud1
add
std
and
test
stos
pop
cld
dec
ret
pop
inc
dec
stos
mov
mov
loope
xchg
xor
sbb
outsb
es
jg
call
arpl
bswap
xchg
pop
cmpsl
mov
call
test
push
ds
sbb
sub
jae
test
xlat
cwtl
mov
addl
jns
mov
cwtl
jo
pop
sbb
int3
sub
pusha
scas
lcall
gs
dec
dec
fs
cwtl
xor
lahf
ss
sahf
icebp
add
xor
mov
stos
sub
adc
push
sbb
mov
pop
mov
xchg
aam
jmp
shl
pop
xchg
fisubrs
std
sbb
js
sub
mov
xchg
out
leave
sbb
cmp
push
pop
jne
bound
pop
test
dec
repz
cmp
inc
cltd
je
dec
cmpsb
sub
pop
repz
lods
mov
sub
adc
fwait
inc
jno
push
imul
fstps
hlt
cld
or
cmp
adc
out
mov
outsl
addr16
fsts
js
in
lret
or
lea
out
push
mov
sub
cmp
mov
cli
enter
ds
repnz
dec
jmp
mov
xchg
test
std
les
movsl
xchg
mov
cmp
sub
dec
sbb
out
je
add
sub
xchg
add
bound
push
jmp
xor
jg
jns
fnstenv
mov
xchg
ja
inc
cmpsb
test
cmpsl
fists
adc
inc
in
mov
xorl
jo
fisubl
mov
test
cmp
insb
ljmp
or
shlb
jnp
sub
inc
dec
adc
adc
mov
push
mov
xor
daa
cmp
sub
jae
xor
movsb
mov
xchg
sbb
por
stos
inc
cmp
mov
roll
push
sub
adc
inc
xor
sbb
loope
cmp
sahf
test
or
int3
push
test
mov
out
cwtl
pop
cmpsb
inc
in
push
fisttpll
ret
cmp
mov
inc
xchg
fiaddl
rorl
push
ss
aad
xchg
mov
jecxz
idivl
cmpsl
outsb
out
xor
mov
sub
loopne
js
cwtl
mov
push
aaa
xor
scas
sbb
sti
testb
sbb
ror
inc
into
call
and
out
dec
xor
aaa
pop
push
jge
decb
nop
or
pushf
in
jo
add
loope
rcll
inc
lods
mov
test
dec
xor
sub
jge
ret
ret
jg
xchg
cmp
xchg
aad
xchg
xor
mov
js
add
add
mov
pop
adc
jae
mov
ret
es
int3
inc
out
es
sbb
mov
xor
jo
fsts
imul
push
inc
push
popa
adc
testl
in
in
sbb
test
or
lds
bound
jl
push
fistps
out
scas
sbb
mov
scas
jecxz
mul
hlt
enter
jp
outsb
add
js
adc
add
push
fs
mov
pop
cmp
pop
mov
sub
sub
cmp
dec
out
adc
mov
add
imul
mov
jnp
sub
cmc
mov
sahf
clc
cmpsl
test
push
lods
sti
inc
jp
jg
sbb
and
mov
inc
xor
ja
xchg
mov
inc
ljmp
mov
mov
clc
lret
cmp
stos
push
sbb
jne
jnp
imul
repz
and
in
ljmp
cmc
les
in
adc
rorb
or
cmp
xchg
imul
cli
xchg
sub
call
stos
dec
sub
dec
cs
cmpsl
sbb
pop
cmp
int
or
subl
pop
sbb
pop
sbb
cld
outsl
xor
scas
cli
push
jns
mov
xchg
push
test
ficoms
xchg
adc
das
iret
cmp
lods
outsb
jmp
stos
mov
adc
movsl
jg
fdivl
and
adc
mov
in
notl
ss
inc
stos
fsubrs
in
mov
daa
test
push
xor
lock
cmp
mov
leave
ret
jmp
in
test
lcall
add
and
and
mov
pushl
jbe
enter
jge
cmp
or
pop
dec
sub
dec
mov
cmp
in
xchg
sub
adc
push
lock
cmpsb
push
in
pop
cmc
dec
fwait
shrl
jo
sbb
mov
pop
dec
cld
push
jae
mov
xor
adc
mov
pop
les
xor
and
mov
imul
ljmp
jne
jecxz
pop
mov
ja
dec
dec
cli
push
add
mov
mov
mov
imul
int3
jl
rorb
jne
ja
stos
popa
rclb
push
inc
inc
sub
push
inc
iret
sbbb
icebp
xlat
lods
push
dec
repnz
sbb
xor
and
stc
imul
pusha
push
cwtl
inc
mov
imul
movsb
pop
sub
push
mov
fstpl
aas
push
and
mov
mov
scas
je
nop
pop
jl
int
je
sahf
loopne
dec
sbb
push
push
lock
xchg
cld
cmp
std
dec
lds
je
sub
push
pop
clc
sbb
pushl
jns
adc
jp
cs
lods
push
sbb
mov
cwtl
sub
mov
loopne
js
aas
mov
repnz
bound
lods
or
sub
filds
das
lods
std
inc
cmp
xlat
shlb
xchg
sti
push
fs
xor
jle
lds
jmp
ss
inc
clc
inc
pop
adc
xchg
mov
inc
fs
int
imul
mov
imul
shrb
jg
push
sub
push
mov
pushf
leave
insb
loope
xor
cmpsl
lret
jecxz
sbb
sub
cmpb
dec
stc
mov
jecxz
xchg
adc
lret
dec
cmpsb
inc
mov
push
push
enter
mov
mov
sti
add
and
aas
sahf
lcall
lds
xor
xchg
sbb
adc
lret
pavgb
pop
fisubrl
rcl
aad
mull
jl
push
fwait
test
jae
pop
jno
cmc
fwait
dec
sbb
jno
movsb
mov
or
add
inc
stc
mov
jecxz
cwtl
mov
cmpsl
imul
xor
sub
mov
mov
adc
stos
cmc
fdivs
rcrl
inc
sbb
sbb
ffree
jno
aad
pop
aaa
dec
ficoms
push
mov
imul
lods
fisttps
dec
mov
xchg
sub
mov
push
inc
jg
call
or
and
stos
test
or
jno
cmp
jo
or
mov
loope
sub
mov
ljmp
xchg
add
and
bsf
jl
imul
gs
xor
or
mov
daa
adc
mov
fnstcw
mov
push
adc
inc
jb
push
pop
xor
push
nop
sub
rcrb
faddp
dec
ficoml
lret
push
dec
cmpl
icebp
xor
lea
loope
cmp
mov
pop
dec
insl
sub
mov
fcmovu
pop
stos
xor
cmp
gs
outsb
sub
sbb
sbb
repz
pop
hlt
call
sbb
xchg
cmp
test
loopne
inc
cmc
dec
sub
test
push
movsl
cltd
insl
fsubs
inc
sahf
ss
mov
sub
pushf
aas
mov
outsb
hlt
pop
lods
sbb
add
jg
dec
sarb
xor
jns
leave
inc
pop
into
adc
or
or
cmpb
leave
and
loopne
stc
jae
sbb
cltd
adc
add
or
cmp
pop
cmc
popf
adc
add
sbb
fisubrl
add
dec
les
jbe
mov
mov
fidivs
adc
cltd
gs
cmpsl
movsb
push
lea
or
sub
iret
and
cwtl
inc
jmp
ficomps
jo
test
insb
fadds
and
jp
adc
add
add
and
nop
push
in
mov
push
fstpt
xchg
mov
outsl
pushw
es
aam
es
mov
pop
cs
test
mov
and
xlat
mov
pop
mov
mov
sub
mov
pop
xchg
inc
jecxz
mov
cmp
add
push
idivl
jg
data16
pop
clc
xchg
push
mov
jne
aas
jmp
push
jae
dec
xchg
cmp
lret
ja
lods
mov
out
sahf
jle
pop
mov
jge
outsb
std
das
sub
gs
adc
aas
stos
jge
sub
movsl
xor
sbb
sbb
dec
add
cld
cmpb
mov
je
mov
sub
xchg
adc
fisubl
or
jns
xchg
mov
cmpsl
bound
movsb
mov
pushf
fildll
fistps
scas
mov
dec
pop
mov
ret
mov
stos
fwait
fs
popf
mov
stos
leave
jl
movsb
dec
sub
aaa
add
mov
lea
ss
jecxz
mov
adcb
nopl
pop
adc
cld
push
mov
push
cs
inc
fidivrs
sub
rcrb
fwait
xchg
xlat
ret
jnp
fnsave
out
mov
pop
push
push
sbb
movsb
cs
lods
add
aam
adc
add
sarl
icebp
test
shr
inc
pop
cmp
xchg
call
lods
push
cltd
aad
out
mov
sub
xorl
add
lds
movsb
sti
adc
movsb
mov
imul
mov
es
push
xor
inc
cmpsb
and
xchg
pushl
mov
sub
cwtl
adc
aad
xor
addr16
stc
xchg
call
nop
popa
xor
cmpsb
js
push
dec
test
cwtl
xor
pop
xor
jmp
jnp
push
nop
xor
test
stos
or
and
push
mov
roll
fldt
out
mov
xor
add
pop
or
repz
adc
mov
jae
popa
mov
shr
movsb
sbb
add
pushf
inc
mov
mov
ja
out
cld
mov
push
jmp
push
mov
jnp
out
sarb
xorb
or
outsb
loopne
mov
and
dec
int
arpl
push
pop
add
xlat
rorl
hlt
inc
lds
sbb
inc
fisubs
pushf
pop
repnz
xor
cmc
out
imul
inc
ljmp
ja
and
aam
inc
pop
sti
mov
hlt
xchg
sti
sub
or
push
in
lcall
cmp
sahf
pop
pusha
push
ss
jge
shll
insl
mov
cmp
test
std
or
add
mov
mov
add
and
or
sub
sbb
lret
xor
fcomps
shrb
sahf
xor
xchg
pop
icebp
movsb
in
push
xchg
sbb
insl
movsl
jo
xor
jb
pop
fsubp
and
sti
pslld
popf
adc
jle
adc
ljmp
mov
adc
cmpsl
sub
inc
jbe
into
push
jmp
sbbb
push
sahf
clc
push
loope
adc
pop
loopne
inc
fs
mov
cwtl
pop
les
and
push
and
sub
cmp
popf
mov
xor
xor
xchg
inc
jb
cmp
sbb
mov
sub
adc
mov
mov
std
lods
sub
cmpsb
in
cmp
cmp
sbb
in
jge
lock
int3
dec
imul
and
lock
cmp
sahf
ja
pop
aaa
es
in
shll
jb
xchg
lcall
test
or
or
cs
xchg
or
pop
jge
bound
push
out
pop
daa
lods
cmpb
dec
lahf
mov
outsb
dec
xor
aaa
fmul
adc
je
xchg
in
mov
fs
xchg
sbb
sub
div
xor
dec
xchg
pop
inc
add
or
sbb
and
mov
aad
lods
loop
xor
inc
repnz
scas
jl
jge
stc
imul
pop
push
and
push
insl
dec
and
int3
xor
insl
sub
popa
fcomps
cwtl
xor
movsl
sahf
cmp
mov
pop
aam
add
and
pop
push
pop
ret
cmp
xor
mov
pop
xchg
push
push
jl
repz
lock
mov
xor
popf
fistps
fsubp
in
lods
pop
xchg
rorb
jns
mov
cltd
add
adc
rorl
je
in
cmp
jge
mov
or
inc
push
hlt
dec
rcrb
push
mull
inc
dec
insl
fisttps
cmp
cmp
cmp
push
jecxz
scas
fiadds
dec
sbb
xor
ds
push
in
jl
in
add
loopne
sbb
stos
fnstcw
or
xchg
out
xor
lcall
icebp
inc
lret
xor
movsl
inc
fidivrl
ss
mov
cli
mov
dec
repz
adc
dec
iret
inc
jb
mov
and
pop
and
push
or
icebp
jae
mov
fisubrl
loop
cmc
mov
mov
sbb
lcall
hlt
dec
fdivl
ficoms
push
je
pop
cli
test
jp
lock
or
mov
lods
cmc
ror
sbb
inc
in
out
jae
js
mov
sbb
jbe
mov
shll
test
and
stc
sbb
ret
adc
cmc
fwait
push
and
shlb
add
insl
lcall
dec
push
test
jnp
int3
ja
add
sbb
jp
jecxz
or
xor
fwait
out
scas
xor
push
outsl
mov
sbb
mov
push
in
mov
mov
out
sub
sub
sbb
dec
dec
xor
fildll
and
inc
sahf
cmp
push
cmp
sbb
adc
pop
pop
jecxz
cmp
mov
int
xchg
ja
jg
jl
aas
xchg
sub
inc
int
in
roll
sub
cmc
xor
xchg
rorb
aas
loop
roll
mov
int3
sti
loope
mov
mov
sub
mov
and
xchg
xchg
jno
dec
inc
rolb
fs
and
incl
or
lcall
pop
fwait
mov
bnd
in
ret
out
repnz
jmp
mov
inc
addl
inc
inc
lahf
inc
cmp
dec
mov
imul
push
lds
adc
mov
iret
out
mov
imul
xor
mov
test
push
sahf
lds
push
arpl
in
add
push
nop
mov
xor
insb
aad
cwtl
push
inc
int3
arpl
imul
lahf
sarl
shll
sub
repz
cmp
jns
in
and
adc
out
pop
add
xchg
enter
mov
mov
bound
xchg
push
push
dec
loop,pt
inc
orb
fldz
hlt
dec
fisubrl
mov
cmp
sbb
jmp
in
mov
fbstp
bound
jb
adc
push
mov
adc
fbstp
out
popf
adc
outsl
push
and
pop
sub
test
test
cs
and
dec
loopne
fisubl
or
xchg
imul
or
or
or
in
dec
movsb
bound
lcall
mov
mov
jg
int3
test
add
ds
clc
pushf
les
repnz
mov
imul
mov
push
popf
inc
mov
popa
mov
cmp
xchg
sbb
jae
xchg
mov
outsb
pushf
stos
test
aam
rorl
test
movsl
mov
push
and
xor
xor
xchg
push
jg
sbb
push
jmp
sub
cmp
outsb
mov
pop
pop
add
movl
jg
addr16
iret
xor
and
mov
imul
mov
and
mov
rcrb
adcb
lds
inc
pop
lods
dec
loop
pop
in
adc
pop
ret
movsl
dec
filds
pop
push
jl
mov
sti
and
js
adc
mov
dec
xchg
xor
scas
pop
mov
jecxz
push
jecxz
jp
ss
mov
in
dec
sub
xor
cmp
fwait
addr16
insl
cmp
lea
or
scas
outsl
mov
movsl
fbld
push
sub
inc
aas
cmp
popf
cld
add
andb
leave
xor
xor
int3
ds
stc
and
frstor
in
and
adc
jo
lds
jmp
cmp
push
add
mov
inc
jo
das
pop
data16
dec
fmull
das
imul
cmp
mov
jns
cli
outsl
into
push
sub
jae
adc
mov
adc
in
cli
mov
push
mov
sbb
pop
ljmp
mov
pop
jmp
lods
jmp
hlt
jae
push
mov
lea
sub
and
fmul
pushf
pop
or
pop
or
dec
push
cmp
sub
sub
and
enter
mov
nop
inc
add
pop
call
scas
pop
add
test
push
ss
stos
test
pusha
mov
inc
inc
aas
xchg
dec
xor
dec
fcmovnb
jae
and
out
dec
dec
int
lods
xchg
push
pushf
mov
imul
pop
push
loopne
loope
aas
mov
pop
lcall
lahf
std
lods
cmp
fidivrs
pop
lds
pop
es
mov
imul
mov
bound
dec
mov
pop
and
ljmp
jmp
movsb
imul
test
pop
cmpsl
cmp
push
mov
adc
andb
fistl
xor
push
and
out
inc
mov
or
pop
addr16
ds
push
or
rcr
cmp
popf
adc
dec
shl
arpl
mov
dec
stos
lock
and
or
cmc
and
lock
dec
push
sub
push
fwait
mov
xchg
cmp
lds
and
pop
not
dec
mov
into
faddp
mov
mov
pop
adc
mov
adc
pop
call
jb
lock
je
cmp
in
xor
cld
sti
rorb
pop
mov
xor
pusha
mov
loope
das
mov
test
inc
xor
scas
pop
stos
push
pop
lods
mov
daa
sbb
bound
ds
jle
push
aas
popf
aas
fdivrs
repz
mov
xchg
notb
pop
xchg
jecxz
lret
xchg
jg
lock
pop
push
jb
cmpsb
les
sahf
pop
sbb
loopne
push
mov
jne
fmulp
xchg
xor
push
clc
sub
inc
jle
and
cmp
fcompl
loopne
pop
test
mov
xor
imul
jl
mov
xchg
jmp
push
imull
mov
leave
icebp
mov
pop
xchg
add
dec
ja
hlt
dec
inc
add
imul
jae
mov
out
and
jbe
fidivrs
outsl
pop
out
push
cltd
inc
cwtl
xchg
iret
frstor
or
jne
sbb
lods
rcl
lahf
push
jnp
or
testl
loope
push
sbb
jne
ror
lods
jmp
mov
ss
loop
hlt
jecxz
test
vdivsd
out
adc
cmp
fistps
and
test
push
push
jns
outsb
std
arpl
jge
push
pop
dec
push
mov
or
pop
jl
hlt
loope
jns
sbb
lods
and
xor
sbb
cmp
insl
imull
popf
and
push
or
pop
daa
mov
sahf
ret
push
addr16
mov
xor
sbb
test
dec
fistpll
adc
fists
dec
or
imul
outsl
xchg
xor
jns
push
sarb
out
pop
inc
fisttpll
mov
out
cmp
aaa
xlat
cmpsl
lret
mov
out
filds
rolb
aam
fwait
mov
add
xchg
pop
and
jnp
divl
outsb
mov
push
mov
pop
mov
cmp
cmp
mov
rcl
push
add
lock
int3
xchg
icebp
in
cmp
gs
int
pop
inc
rdpmc
leave
iret
shll
sti
dec
cmp
scas
jnp
cmpsl
stc
fsubs
dec
add
lret
sbb
mov
and
pop
out
mov
je
jl
hlt
addr16
mov
filds
cmpl
inc
jp
cmp
ja
sti
jmp
jnp
or
mov
mov
inc
lods
or
jb
adc
add
jb
loope
mov
xchg
add
lret
mov
and
test
jge
stos
leave
lcall
jge
sub
fisttpll
popa
inc
dec
jo
vpsadbw
pop
sub
int
cmp
aad
mov
sbb
and
in
aad
mov
rcrl
cld
dec
adc
jl
pushf
xchg
insb
adcl
mov
arpl
cld
pop
popa
sbb
add
pop
mov
jge
mov
add
lods
cltd
cwtl
jmp
imul
addr16
xchg
pop
in
subb
ror
popa
jb
fdivs
clc
into
xor
mov
fs
ror
dec
movsb
push
inc
imul
and
pop
inc
mov
jb
adc
xor
mov
add
imul
push
test
cmp
sub
xor
inc
xchg
xlat
lahf
ss
nop
repnz
sub
mov
push
sbb
pop
pop
orb
rorl
cs
in
xor
std
adc
rorl
inc
mov
cmp
xor
adcl
inc
or
hlt
sbb
pushf
out
scas
mov
ljmp
sahf
popa
and
adc
sub
mov
call
jmp
mov
fdivs
xor
jns
pop
or
xor
sti
ja
inc
mov
push
loop
jno
test
ljmp
leave
fdivrs
in
mov
jp
push
fsubr
xchg
add
or
xor
rcr
pop
sti
and
push
out
mul
xchg
out
in
scas
xchg
adc
arpl
outsb
hlt
sbb
and
pop
mov
and
pop
fwait
and
add
or
in
dec
psrad
mov
adc
aam
loopne
out
loope
sub
out
sti
scas
repnz
idivl
fistpl
movsl
shl
sub
mov
xor
fdivp
sub
dec
jp
and
fwait
icebp
jb
fldt
xchg
sub
add
sbb
xchg
pushf
jns
rcr
adc
pop
mov
ret
xchg
jle
cmpsl
or
cmpsb
dec
xor
sbb
and
cmp
mov
clc
fildl
xchg
mov
loop
shll
add
dec
outsb
nop
or
push
sub
out
into
ret
mov
mov
push
sbb
pop
test
xlat
out
push
jge
fcmovu
loopne
pop
jae
jmp
or
jne
mov
and
pusha
lahf
and
mov
nop
mov
inc
inc
add
or
aas
sbb
adc
pop
out
push
xchg
xchg
mov
cltd
ss
test
mov
pop
mov
push
faddp
jecxz
adc
adc
and
icebp
or
mov
int3
pop
lcall
xchg
adc
jle
or
cmp
jns
aam
inc
popa
mov
dec
push
sub
adc
adc
mov
out
in
push
or
into
pushf
addr16
cmp
xor
adc
cmc
orb
ja
fimull
adcl
outsl
scas
inc
das
bound
pusha
outsl
movsl
mov
das
or
rcrb
ret
sub
adc
or
adc
scas
sub
scas
lods
mov
sub
lods
jmp
ja
add
out
jns
daa
mov
inc
adc
inc
push
call
loope
pop
push
and
cwtl
pop
or
inc
mov
ja
mov
jl
pop
xchg
repnz
loop
pop
call
jns
mov
xchg
adc
mov
loopne
lahf
mov
hlt
inc
imul
push
arpl
test
add
inc
and
pop
scas
xor
mov
out
addl
aad
ss
cld
pop
inc
mov
mov
xchg
imul
xor
rorb
add
inc
or
xchg
int3
jecxz
mov
loopne
inc
fcmove
mov
iret
aas
lods
jg
loopne
ss
push
mov
jecxz,pn
repnz
xchg
jmp
lods
fwait
mov
ret
push
inc
or
rclb
pop
cltd
cs
fdivs
add
cmp
xor
xlat
call
rcl
xor
xor
inc
sub
jns
cmpsl
scas
mov
add
rol
outsl
sbb
les
adc
dec
scas
xchg
mov
jp
xor
add
loope
loope
jge
ljmp
sbb
cmp
cltd
pop
and
lock
aam
mov
cmpsl
push
mov
push
repz
in
lcall
pop
or
das
in
and
int3
push
mov
les
or
out
push
out
mov
aam
imulb
sbb
iret
xlat
orb
ret
and
mov
or
mov
dec
inc
not
scas
cs
dec
lds
cwtl
mov
lea
lods
rcll
sbb
fldl
dec
lret
mov
sub
daa
inc
push
jbe
imul
push
test
jae
and
out
jns
js
mov
add
cmp
xor
sub
mov
pop
mov
sbb
std
in
loope
out
pop
mov
push
in
aas
neg
movsl
mov
roll
cmp
jo
dec
dec
dec
jecxz
xor
fwait
cmp
jl
leave
and
sahf
daa
insb
push
rorl
fisttpll
insl
pop
loop
adc
fbld
pop
mov
push
sbb
std
xchg
add
mov
sub
sbb
rcll
aam
lea
inc
ret
lret
push
fadds
dec
adc
adc
mov
mov
mov
scas
stos
ret
add
xor
inc
clc
mov
repz
push
call
cmpsl
pop
in
or
push
xchg
pop
out
test
cltd
aas
jno
movsb
imul
pop
mov
adc
jl
add
dec
sbb
bnd
sarb
cmpsb
iret
je
pop
in
pop
out
mov
push
mov
or
cwtl
mov
push
inc
lea
lds
lds
hlt
mov
jl
out
push
jmp
xor
das
sbb
xchg
mov
push
pop
mov
push
out
and
into
mov
cmp
pop
sbb
mov
xor
subb
roll
dec
insb
and
hlt
enter
jle
add
and
sbb
and
push
pop
subb
icebp
fsub
iret
enter
xchg
jecxz
pop
xchg
push
pop
fidivrl
ja
jecxz
pop
push
leave
push
mov
pop
aam
cmp
mov
imul
ja
insl
aas
into
mov
stos
aad
pop
add
add
sbb
loop
cld
sti
and
loop
repz
out
pop
xchg
pop
ret
pshufw
inc
es
mov
sub
out
add
mulb
sbb
sar
lahf
push
mov
jnp
divl
sub
adc
std
aad
sbbb
orb
pop
stos
test
add
fsubrl
cmpsb
lods
xor
jbe
push
xor
jmp
adc
add
mov
xchg
inc
mov
lret
fsubrl
push
inc
imul
mov
insl
pop
test
leave
push
xchg
lds
stc
aas
pop
shlb
int
jnp
sbb
rcrl
aas
adc
cmc
xor
aad
lock
sub
andb
iret
xor
cmp
add
add
imul
rorb
es
insl
xchg
add
lret
in
or
mov
mov
ja
inc
sbb
ds
sbbl
cmc
jbe
mov
mov
dec
cwtl
les
xchg
mov
lcall
mov
mov
ret
mov
mov
leave
mov
xor
sahf
imul
fadds
stos
or
stos
imul
mov
mov
xchg
fdivl
mov
inc
mov
fiaddl
icebp
pop
add
das
rcl
xchg
mov
rorb
fsts
mov
popf
test
pop
push
jle
jge
pop
pextrw
scas
pop
jae
and
inc
aaa
adc
xchg
and
ret
jb
stos
or
lahf
sbb
jo
pusha
pushf
lahf
popa
xchg
or
mov
mov
testl
xchg
inc
push
js
cld
mov
and
in
icebp
xchg
movsb
sub
sub
ror
inc
pop
popf
out
out
mov
fstpl
jns
out
popa
imul
mov
fstl
sti
out
call
dec
xor
mov
fs
je
in
mov
and
xchg
nop
jl
inc
xor
ds
jge
fmuls
pop
pushf
xchg
xor
lret
repnz
stos
iret
hlt
sbb
scas
addl
sbb
lock
outsb
mov
sbb
dec
jnp
xchg
jp
inc
lods
sub
mov
jmp
orb
notl
stos
sub
cld
cmp
scas
mov
jo
and
rorl
pushf
add
leave
jecxz
cs
and
sub
lock
sbb
lds
scas
faddl
push
popa
jmp
mov
popf
lods
xor
leave
adc
scas
test
sub
pop
or
hlt
ret
sub
fstpt
fsubs
int3
mov
sbb
or
mov
out
sbb
inc
nop
ds
add
pop
cmp
sub
adc
push
in
mov
sbb
iret
std
in
lods
insl
xchg
sbb
sahf
mov
or
cmp
dec
mov
jb
je
out
lret
test
loopne
sub
cwtl
in
jp
and
icebp
shlb
stos
push
icebp
outsl
fs
test
inc
fcoms
dec
stos
stos
push
lock
mov
xlat
add
out
ret
cwtl
out
call
ljmp
xchg
push
das
inc
push
lds
mov
xchg
mov
pusha
xor
jmp
pop
pop
mov
in
ret
mov
cmc
ret
sbb
scas
addr16
repz
movsl
lds
inc
mov
sti
test
mov
cmp
mov
test
loope
jle
pop
push
adcb
imul
mov
shl
inc
pop
xchg
pop
pop
cmp
sub
pop
cmp
mov
add
push
mov
testl
jmp
xchg
cmc
cltd
cmp
push
outsb
mov
push
sub
jno
and
adc
movsb
cld
mov
jbe
jbe
ljmp
jbe
ret
pop
mov
rcrb
scas
int3
das
mov
lea
jge
inc
das
push
out
dec
jle
mov
fbld
push
mov
int3
push
je
js
cld
repnz
adc
push
mov
pop
xor
jp
adc
inc
cmpsb
and
xchg
les
in
inc
xor
data16
paddq
jp
clc
xchg
ljmp
lret
or
in
iret
cmp
loopne
push
ret
nop
push
sti
dec
insb
ds
lret
jbe
xchg
xchg
dec
mov
jecxz
outsb
mov
into
ret
insl
in
mov
dec
mov
sbbb
lcall
fdivr
ds
cmc
into
xchg
das
cmp
in
jmp
pop
sbb
dec
xorb
jae
jmp
adc
lret
mov
adc
sub
lcall
dec
inc
ja
into
jb
sub
or
jae
sub
std
ja
pop
cli
xchg
pop
lods
pop
jle
orl
or
inc
jno
out
adc
mov
frstor
xlat
xchg
and
xor
mov
fdivl
inc
out
ret
lcall
enter
rol
pop
rorl
outsb
mov
ss
or
out
loop
add
gs
sub
cwtl
idivl
into
or
inc
dec
pop
mov
inc
pop
popf
loopne
stc
fldl
mov
js
and
mov
xor
xchg
out
aad
jo
outsl
cmp
inc
pop
nop
inc
lods
clc
sbb
test
ljmp
sbb
jl
out
es
insl
mov
out
rcr
xchg
movsl
lret
insl
add
lret
bswap
int3
and
pop
jnp
xor
mov
ret
add
rcrl
cwtl
iret
cs
xchg
mov
pop
xor
fcompl
cs
je
in
pushf
shl
shrl
jecxz
xlat
push
mov
and
push
add
mov
jmp
mov
mov
imul
or
sub
hlt
mov
popf
dec
pop
mov
xchg
add
pop
mov
fists
sub
fmulp
fcmovu
popf
std
cmc
mov
in
jle
in
xor
bound
jnp
cmpsl
cmp
movsl
jno
or
push
adc
test
sbb
in
subl
xchg
ljmp
lods
mov
push
and
sbb
out
aaa
icebp
movsb
mov
jno
and
outsl
adc
and
hlt
lock
cs
test
push
jp
hlt
pop
sub
mov
pop
cld
or
inc
or
mov
icebp
jge
push
sub
xchg
in
loopne
aaa
loopne
sbb
les
sti
push
push
sbb
nop
out
xchg
pop
and
or
sbb
jmp
and
add
sub
mov
ja
adc
mov
dec
inc
out
xchg
sarl
in
pop
push
xchg
in
push
mov
mov
mov
pop
add
inc
jbe
jno
lcall
sbb
push
add
loop
stos
dec
push
roll
or
dec
loope
mov
sbb
outsb
pop
mov
xchg
in
jne
push
xchg
orb
lahf
pop
add
movsl
loopne
xlat
pop
rol
out
test
dec
addb
sub
mov
jnp
cltd
lahf
or
pop
mov
aaa
jb
les
addb
repz
or
daa
fwait
xchg
bnd
out
mov
ljmp
inc
sub
push
stc
mov
xchg
or
jecxz
cmp
das
jmp
push
aaa
cwtl
inc
cmc
xchg
sarb
test
pop
cmpb
mul
test
cld
out
or
stos
dec
push
lock
dec
in
es
inc
out
cmp
aas
mov
jl
pop
fwait
jb
fidivs
gs
sub
js
call
inc
xchg
aad
sbbb
sbb
inc
lods
loope
cmp
in
aad
xor
xlat
xor
xchg
loopne
roll
pop
data16
inc
push
xor
je
test
mov
fdivs
adc
mov
or
push
movsb
push
jmp
jns
sbb
xlat
adc
mov
pop
divb
stos
xchg
repnz
fdivr
out
sbb
pop
int3
pop
jno
mov
test
shlb
dec
and
jecxz,pt
jbe
outsl
inc
xlat
mov
mov
pop
mov
addl
jmp
xchg
repnz
mov
or
fwait
imull
pop
popf
fmuls
pop
push
loope
mov
mov
subb
jecxz
std
mov
xchg
scas
pusha
call
inc
push
lahf
pop
fstpt
cwtl
call
scas
xor
out
shll
dec
lea
shrb
xchg
mov
gs
adc
fsubp
push
rcrl
je
inc
dec
and
rclb
lods
jge
out
add
sub
rcl
movsb
cld
imul
mov
popa
push
repnz
inc
xor
pop
xorb
cmpsl
pop
test
pop
and
leave
outsb
adc
ja
push
add
loopne
mov
sub
popf
cmp
or
imul
insl
and
pop
jns
pushf
rolb
and
jg
or
push
lcall
std
fadds
stos
mov
dec
xor
push
jno
iret
aam
insl
leave
and
and
jns
in
divl
jnp
xchg
and
shrb
shrd
adc
mov
cmp
adc
repz
add
cld
insb
sbb
sbb
mov
mov
ret
sbb
dec
into
dec
jg
inc
insl
test
xchg
shlb
gs
adc
fldenv
or
fidivs
daa
in
xchg
sub
lea
xchg
inc
push
jge
jge
add
and
mov
mov
jb,pt
sub
jg
call
stc
mov
jnp
dec
nop
ja
cmc
es
sbb
in
insb
jle
jae
cmpsb
dec
jno
lods
adc
mov
inc
adc
mov
and
push
and
shrl
sbb
jne
sub
pop
call
cmp
shrl
xor
mov
imul
adc
adc
cmp
out
fisttpl
js
fisubrs
fmuls
xor
leave
mov
dec
adc
insl
test
test
ja
iret
xor
enter
or
inc
fnstsw
dec
ret
mov
mov
gs
test
lods
cmp
mov
jp
mov
enter
jo
test
xchg
mov
addb
mov
inc
or
lret
xchg
sti
jp
sarl
dec
xor
sub
aas
lcall
push
dec
push
xor
push
cmc
clc
cmpsb
lret
cs
je
adc
adc
adc
rcll
ljmp
add
inc
push
push
ljmp
mov
mov
dec
pop
mov
scas
inc
mov
adc
sarl
sub
inc
loop
fnstcw
adc
xor
mov
jne
pop
pop
arpl
call
pop
push
dec
insl
add
xlat
int
mov
inc
mov
xchg
aam
and
jge
fbstp
inc
mov
icebp
push
push
jecxz
shrl
into
frstor
xchg
int3
popa
mov
das
inc
mov
ficomps
sub
mov
xor
stos
mov
jmp
movsb
dec
ret
sbbl
call
rclb
stos
xchg
dec
lods
adc
push
add
add
loope
mov
loop
rcrb
lea
or
xchg
iret
outsl
out
sub
aas
push
leave
xor
outsb
insl
add
cmpsl
jp
xchg
adc
fnstsw
adc
sub
sbb
pop
dec
push
add
lds
ja
mov
out
pop
fistpl
sbb
and
or
outsl
add
ficoml
pop
mov
jg
mov
in
sahf
xchg
or
pop
mov
pusha
mov
jg
adc
rorl
sarb
aad
and
out
push
andl
jns
sbb
adc
iret
xorl
xlat
movsb
into
clc
rcl
dec
sbb
ljmp
xor
nop
mov
sar
iret
icebp
test
cmpsb
adc
in
aas
mov
add
movsb
xchg
orl
mov
imul
outsl
jno
repz
add
filds
push
shlb
cld
mov
mov
cmpl
cmp
in
push
mov
xor
rcr
bnd
insb
sbb
mov
or
jns
and
mov
in
mov
xchg
adc
and
cltd
scas
push
inc
fisubrl
adc
mov
lods
cmp
lahf
enter
outsl
sbb
mov
jmp
sub
and
jecxz
rclb
sbb
jecxz
add
enter
add
jp
push
adc
and
dec
dec
subl
fldl
imul
repz
xor
sbb
and
and
ja
jnp
icebp
loope
sbb
xor
cli
daa
jl
sub
idiv
pop
test
cmp
inc
in
inc
loopne
ffree
mov
push
nop
cli
cmp
lds
or
and
in
pop
and
sub
data16
inc
cmp
push
loopne
dec
mov
das
clc
push
ja
mov
jns
out
fmull
ss
das
loope
push
test
cs
mov
mov
add
f2xm1
cmp
sbb
loop
mov
inc
lret
jb
add
inc
mov
arpl
hlt
fld
push
sahf
int
mov
jle
mov
mov
jnp
adc
ljmp
shll
xor
xor
popa
pusha
ret
outsb
sahf
add
stos
iret
push
mov
pop
cli
pop
lret
es
imul
mov
xor
xchg
icebp
shl
xchg
cmp
mov
rclb
add
push
out
loope
and
decb
mov
bound
sbb
adc
aas
pop
mov
pop
outsl
fwait
rclb
in
aam
sbbl
push
test
sbbl
popa
addr16
mov
dec
cmp
in
pop
and
sti
dec
lea
insl
mov
js
sub
or
or
sti
je
js
shll
mov
mov
daa
xchg
mov
mov
jge
or
xor
mov
xchg
mov
mov
out
popf
or
sahf
or
xchg
jle
mov
stos
dec
aaa
ds
lret
test
xor
popf
fcmovb
aaa
add
dec
das
out
ljmp
xlat
sub
sub
or
mov
gs
mov
das
out
test
or
dec
int3
pop
push
adc
pop
mov
jmp
xor
ja
and
push
push
icebp
jp
jge
push
imul
add
sbb
cmp
sub
xchg
jmp
cli
idivl
ljmp
xor
sti
mov
sbb
xchg
aam
ret
loop
imul
and
aaa
mov
sbb
out
shrl
mov
mov
xor
jecxz
push
jmp
sahf
call
fnstenv
jne
jns
lds
add
push
sahf
mov
mov
aas
push
mov
jmp
xchg
leave
rcr
pop
dec
xchg
xchg
cmp
mov
test
and
test
loopne
add
adc
mov
adc
leave
mov
jns
inc
mov
imul
stos
mov
mov
pop
sahf
into
cmpl
mov
inc
scas
insl
inc
inc
inc
mov
push
int3
and
aam
mov
xchg
and
cmpsl
push
push
sub
imul
mov
xchg
call
add
jmp
int3
and
aas
mov
mov
pop
cmp
cld
inc
jo
stos
jmp
in
rclb
adc
rolb
ds
iret
out
push
sti
shll
xor
roll
into
out
imul
cmp
fmull
dec
jg
call
mov
lea
push
jo
and
sbb
aaa
pusha
xchg
js
mov
js
nop
lcall
out
gs
bound
push
pop
loopnew
pop
mov
fwait
dec
lods
test
outsl
test
sti
push
adc
icebp
inc
dec
out
stos
mov
add
movsb
mov
jo,pt
add
repnz
fcmovbe
std
inc
repnz
sub
fidivl
and
xor
xor
movb
nop
ret
insb
lods
dec
adc
in
sub
or
call
lea
mov
icebp
jp
cmpsl
and
jmp
pushf
int
je
push
repz
sti
in
pop
mov
mov
clc
lret
mov
xchg
out
inc
adc
movsb
xor
push
cmp
and
xchg
ljmp
mov
ds
aad
pop
push
cmp
rorb
xor
inc
jmp
std
pop
fbstp
or
sub
adc
ja
mov
les
mov
movl
pop
int
repnz
stc
out
dec
rorb
ret
lock
mov
jae
popf
daa
jmp
repz
scas
data16
push
fcompl
js
clc
enter
xchg
and
dec
push
mov
xchg
push
enter
pop
clc
push
adcb
sub
arpl
aad
add
rcr
pop
stos
mov
push
jl
lods
dec
adc
cmpsb
fisubrl
jmp
lret
test
int3
cmpsb
mov
gs
pop
jmp
push
es
adc
imulb
push
das
xor
lock
push
lea
mov
mov
bound
sub
mov
jns
imul
sub
inc
cmp
fsts
test
mov
jl
mov
es
cmc
iret
pop
sub
cld
push
ret
push
push
inc
bound
mov
jge
cwtl
fmul
xchg
cmpsl
mov
es
xchg
lods
imul
xor
jb
jb
push
out
cmpsl
push
movsl
pop
shl
in
test
popa
cmp
pop
cmp
pop
call
cs
pop
out
add
lds
lods
xchg
filds
adc
inc
mov
mov
push
xor
or
adc
in
cmp
mov
jno
mov
test
cmp
push
and
xchg
push
pop
in
out
dec
fisttps
or
add
stos
int
div
and
push
mov
adc
adc
xchg
clc
sti
testl
xor
pop
leave
mov
cwtl
iret
test
jno
cmp
nop
ret
mov
gs
sub
je
fwait
sbb
xchg
in
jbe
pop
adc
enter
ficompl
inc
jae
dec
leave
mov
popa
push
xorb
inc
sbb
sub
pop
sub
ret
shrl
fwait
outsl
push
xchg
or
sbb
icebp
cmpsb
jae
pop
lret
xchg
xor
xchg
sti
loope
and
jbe
clc
lods
imul
mov
cmp
adc
cmp
or
ja
icebp
adc
clc
sahf
movsl
mov
mov
ljmp
jno
cmp
cmpsb
fcomps
iret
inc
pop
jns
or
inc
cmpsb
pop
dec
cmp
cmpb
push
cmpsl
inc
loopne
lods
xor
dec
jmp
lods
out
cmpsb
push
popf
test
lret
sbb
push
dec
into
shrl
fxch
push
adc
mov
sbb
inc
sarl
inc
sarl
push
adc
jle
in
xchg
dec
pop
jns
imul
push
iret
shl
mov
mov
mov
mov
add
ja
add
repz
addb
pop
mov
jge
sub
in
inc
lds
jne
mov
push
inc
dec
dec
stc
and
loop,pt
inc
push
cmpsb
sub
loopne
push
pop
pop
jle
movsl
bound
popa
or
push
test
inc
adc
xor
and
movsl
ret
aad
insb
outsl
mov
xlat
cli
sbb
mov
dec
jp
push
xor
sub
inc
jne
cmp
scas
lods
test
lods
mov
test
clc
aas
xor
add
lahf
jb
xor
add
cmpsb
lods
pop
mov
aam
mov
addr16
lahf
inc
push
inc
mov
cmp
add
cmp
test
jno
jbe
sbb
stc
xor
arpl
pop
adc
jo
aas
add
adc
fs
xorb
lahf
jecxz
daa
lds
bound
mov
insl
push
cli
push
adc
addr16
and
ret
cmp
ja
mov
adc
mov
in
pop
or
mov
push
popa
cmpsl
dec
popa
xlat
das
inc
xchg
xor
or
pop
imul
int
ss
xor
test
dec
fwait
pop
outsb
aaa
adc
stos
mov
cmc
dec
jo
cmp
jb
jbe
mov
lock
aad
fs
mov
push
lret
lahf
stos
xor
shl
lret
ret
popa
and
mov
sbb
and
lods
jne
jmp
and
push
in
sbb
bound
mov
movsl
sub
pushf
pop
imul
xchg
fsubl
dec
fisubs
and
add
loopne
int
mov
cmc
lea
xor
xor
mov
imul
clc
or
adc
xchg
gs
or
add
fstl
inc
int
movsl
mov
xor
test
dec
add
cmp
cmpsl
stos
xor
cmp
dec
pop
data16
das
cmpsl
inc
cmp
sti
dec
dec
or
cmp
fstpl
mov
mov
gs
jge
ljmp
repnz
or
or
push
outsb
mov
lret
das
xchg
stos
aaa
repz
cmpl
dec
sti
sar
mov
mov
xor
add
mov
cmc
iret
xlat
pop
or
scas
and
fists
push
cltd
adc
or
in
imul
stc
xlat
cltd
xorl
cmp
dec
popa
jb
mov
push
repz
outsl
xor
xchg
inc
inc
push
jb
orb
pop
fwait
mov
stos
add
inc
mov
cmp
push
xchg
add
xor
das
nop
mov
xchg
in
push
movsl
cmp
enter
loopne
repnz
mov
and
dec
sti
cmpsb
cmp
icebp
push
mov
mov
subb
test
aas
loope
adc
pop
sahf
add
pop
dec
inc
mov
adc
mov
cmp
pushf
xchg
inc
jge
sbbb
movsb
add
subb
add
cmc
cmpb
mov
cmp
cmp
lea
lret
jno
lds
pop
dec
dec
mov
out
fdivrs
jle
cmpsl
jne
loopne
stos
cmp
adc
repnz
out
test
stc
cmc
jnp
imul
repnz
lods
mov
push
enter
xor
xchg
pop
loope
fsubr
mov
xlat
sub
ss
sbb
jmp
cmp
int3
pop
mov
lret
sub
stc
push
push
cli
xlat
mov
jecxz
and
dec
jl
les
inc
scas
inc
test
mov
out
shll
sbb
add
ficoml
rclb
test
out
out
test
xlat
sbb
aam
cwtl
inc
pop
xchg
pop
stc
lcall
scas
inc
jae
cmp
leave
negb
push
enter
xchg
and
insb
sub
pop
xchg
in
fnstcw
outsb
int
mov
outsb
rorl
js
jmp
outsb
pop
subl
out
mov
repnz
stos
xchg
mov
dec
orb
fwait
pop
xor
add
popf
sbb
lcall
or
out
ds
mov
test
cli
lcall
sub
je
xor
xchg
ret
mov
lods
insl
shr
mov
std
inc
mov
adc
lcall
sbb
or
adc
inc
jge
push
aaa
fistl
insb
in
pop
push
sbb
lods
xchg
jnp
fwait
mov
int3
sub
mov
mov
es
cmp
sahf
les
xchg
xor
imul
add
push
lods
add
xor
or
sbb
ja
pop
es
stc
push
adc
mov
pop
sub
cmp
mov
xchg
inc
cmp
adc
jnp
fisttpll
mov
xor
das
imul
fld
call
add
and
in
imul
inc
jne
xchg
cs
bound
lods
mov
pop
xor
rclb
mov
hlt
ss
lret
rorb
or
dec
sbb
cs
jge
negl
insb
mov
dec
mov
addr16
jmp
in
add
rolb
ljmp
inc
add
lea
and
aad
jmp
iret
ret
imull
scas
fs
pop
subb
cmp
dec
dec
pop
or
xchg
je
inc
shll
negl
mov
xor
insl
rdpmc
and
cwtl
cli
cld
push
loop
xchg
cmp
in
sbb
shrb
mov
mov
lock
cmp
movsl
push
repz
mov
das
cmc
adc
int3
daa
pop
sub
cltd
xchg
out
stos
push
jg
jge
jbe
cltd
add
and
mov
mov
lret
loop
sbbl
fldenv
xorb
push
stc
in
cmp
fbstp
hlt
inc
inc
mov
mov
push
pop
push
xorl
cmovs
call
test
pop
pop
pop
in
dec
xchg
xor
ss
int
lret
fidivl
or
fwait
test
insb
loopne
popa
push
dec
sti
push
sbb
lret
mov
stos
sub
scas
adc
mov
xor
les
test
mov
cmp
dec
cmp
rcrb
push
lcall
ds
sub
mov
lret
call
cmp
cmpl
jb
push
clc
mov
jle
bound
aaa
dec
aas
daa
out
mov
jnp
cmp
test
mov
test
xor
push
and
test
jnp
cmc
sbb
mov
dec
mov
out
pop
inc
jne
and
fisubrs
and
cli
xchg
push
out
out
cmp
cmp
jo
mulb
js
xchg
inc
sub
push
fsubr
jp
mov
inc
fmulp
sbb
movsl
push
xor
sbb
add
and
pop
cmp
ficoml
cmp
inc
mov
test
push
dec
in
int
aaa
aam
cvtdq2ps
mov
clc
dec
xor
dec
xchg
es
jg
imul
dec
lret
orl
cmp
fyl2xp1
cmp
adc
stos
cwtl
scas
xor
imul
aaa
loopne
lods
inc
mov
inc
pop
sbb
xchg
xchg
push
ret
pop
es
lds
loop
lret
mov
adc
insl
cmp
stos
push
mov
sbb
sbb
clc
mov
daa
pushl
lahf
mov
loop
nop
jl
mov
call
sub
repz
idivl
aam
sbb
pop
xchg
in
add
lock
scas
minps
push
pop
pop
int3
xor
js
add
insl
xchg
mov
mov
sbb
mov
jnp
mov
jmp
push
xchg
insl
gs
mov
xor
adc
loope
je
daa
or
adc
cmp
into
and
bnd
cmp
insl
sub
out
adc
fdivrs
ljmp
mov
stos
negb
imul
push
test
sahf
cli
sbb
xchg
pop
sub
lret
je,pt
movsl
iret
notl
icebp
inc
stos
in
enter
pop
cmp
aam
fwait
push
divl
pop
add
cmc
mov
les
gs
xchg
cs
cld
mov
inc
mov
pop
stc
jl
dec
push
jbe
cmp
sahf
rclb
mov
ficoms
jle
adc
xchg
cmp
or
cmpsl
add
pop
xchg
jp
iret
jo
dec
test
and
push
fldcw
scas
inc
rcrl
mov
popa
jp
push
mov
ja
fistpl
pop
or
adc
mov
add
xor
xor
add
inc
aaa
fidivl
cmpsb
pop
outsl
leave
lods
mov
lds
iret
or
das
lods
in
xchg
adc
sub
add
in
outsb
movsl
xchg
mov
ret
movsl
or
fwait
mov
push
lods
pusha
mov
inc
int
or
pop
sbb
imul
pusha
dec
or
push
pop
stos
call
loope
cmp
pop
fwait
dec
daa
int
loopne
push
stos
mov
xchg
repnz
stos
fwait
ret
fdiv
je
outsl
pop
inc
pop
mov
in
ret
je
and
mov
mov
push
push
and
fxch
dec
xchg
pop
and
orb
mov
mov
insl
cmp
xor
mov
addl
cs
iret
add
ljmp
push
mov
int3
fists
xchg
fnstsw
inc
cmp
in
outsb
dec
xor
xchg
jns
jle
mov
insb
fstpl
pop
push
mov
jbe
movsl
iret
sub
pop
cmp
or
add
sbb
and
pop
add
aaa
imull
mov
jo
out
mov
xchg
out
inc
movsl
add
pop
cmpsl
in
pop
push
les
pop
mov
addb
lahf
or
pop
ljmp
insl
xchg
or
loopne
bndldx
cs
push
dec
iret
sub
xor
cmp
cs
jecxz
push
fildl
mov
and
stc
xor
inc
mov
aad
add
movsl
cmp
add
inc
add
jbe
repz
mov
mov
pop
push
xchg
adcb
jmp
das
mov
jg
jne
fs
xchg
dec
fbstp
mov
or
push
sahf
inc
inc
sarb
ja
xchg
out
adc
fisubrl
fucom
and
sbb
xchg
add
mov
addb
or
out
xchg
xorl
loope
or
in
inc
pop
in
in
je
sbb
lods
push
xchg
shll
jbe
or
daa
movsb
jp
fcomps
xor
ret
repnz
xchg
jmp
idivb
xor
push
lock
add
sub
push
iret
mov
je
sti
mov
test
das
lods
add
in
inc
leave
dec
lret
rcl
test
pop
xchg
lahf
xchg
leave
ret
out
aad
jns
andb
or
cli
mov
mov
sub
test
jb
sarl
push
aad
stos
xor
mov
mov
inc
fiaddl
pop
cmpsl
push
or
lods
adc
daa
test
rcl
enter
mov
add
dec
add
incl
hlt
fsubp
and
hlt
into
sbb
push
sbb
cwtl
xchg
dec
stos
roll
lds
call
and
push
addr16
cld
xor
mov
hlt
insb
xor
fwait
fs
or
jno
inc
push
xchg
js
pusha
and
test
dec
ja
pop
jl
sti
inc
or
pop
fmull
xor
iret
mov
iret
call
scas
cmp
test
mov
adc
jp
loopne
cwtl
cmp
or
pop
inc
ret
daa
push
inc
lret
lret
mov
sahf
xchg
pop
test
popf
lock
pop
ret
xchg
fstpt
xchg
jmp
js
ud0
sub
sti
daa
leave
mov
jne,pt
lds
xor
xchg
adc
lret
inc
ffree
push
pop
pop
and
popa
dec
int3
mov
mov
rol
xor
inc
js
xor
loopne
add
dec
dec
in
xor
and
dec
or
adc
dec
stc
mov
cs
push
fiaddl
cmp
shll
out
cmc
cmp
scas
pushf
call
movsb
jb,pt
mov
fdivl
or
aas
xor
mov
and
xchg
cwtl
cmp
sbb
push
push
fadd
mov
push
push
aaa
fwait
jnp
jmp
xor
pop
xchg
mov
mov
adc
push
or
int3
jnp
in
sbb
sub
push
popf
xor
adc
mov
sbb
and
stc
mov
clc
push
arpl
pusha
lea
mov
test
loope
sub
out
xchg
sbb
jae
jno
nop
gs
mov
in
mov
push
jl
pop
ret
call
fsubl
addr16
and
mov
mov
add
sbb
ficomps
iret
dec
pop
mov
nop
mov
pminsw
sub
xor
cmpsb
push
add
into
pop
ljmp
jle
cli
adc
mov
mov
xor
andb
xlat
sub
mov
jp
mov
sbb
aad
sub
push
xor
fldenv
push
lcall
aad
push
mov
jno
cmp
add
sub
into
mov
scas
sub
bound
out
adc
xor
inc
cld
call
lahf
rorb
mov
dec
or
xchg
cmpsb
and
and
jle
dec
xchg
adc
out
pop
mov
cmp
test
fidivrs
jmp
pop
xchg
jnp
out
int3
pop
add
ss
out
enter
movsb
sub
sti
jg
lods
cld
es
repz
movsbl
adc
test
pusha
xor
cmpsl
mov
xchg
cmp
das
sbb
and
and
test
jae
into
bound
nop
bound
mov
mov
aad
out
jmpw
xchg
mov
xor
pop
pop
pop
dec
in
les
push
arpl
and
in
mov
adc
mov
add
enter
test
dec
mov
xchg
jb
mov
xor
mov
pushf
popf
es
jnp
xor
xchg
scas
fdivr
xchg
call
lret
jecxz
mov
dec
lret
dec
fs
jp
pop
ret
mov
mov
repz
movsl
sti
push
mov
cmc
sub
sub
inc
pop
insb
push
add
popf
jge
dec
ret
xchg
fmul
mov
sbb
lahf
cmp
sbb
out
inc
jb
pop
rorb
popf
mov
fimull
gs
cmp
inc
adc
stc
cmp
fnstenv
int
cltd
int
and
pop
inc
jg
cmp
adc
dec
inc
jmp
cmp
xchg
fs
into
xchg
in
in
and
insl
fnstcw
xor
mov
pop
pop
mov
push
push
adc
in
pusha
push
scas
decl
sub
rcr
pop
or
arpl
imul
nop
dec
ret
push
sbb
ret
call
and
cmp
js
mov
js
mov
scas
and
cmp
mov
push
add
call
or
rcrl
outsl
add
aam
ss
rol
in
mov
adc
scas
int
mov
xchg
xchg
movsb
jle
nop
and
fistpll
rcrb
roll
mov
inc
jmp
pop
aam
push
inc
aad
mov
cmp
call
inc
sbb
leave
aas
adc
mov
mov
cmp
pop
inc
adc
push
adc
and
inc
rolb
adc
xor
test
mov
jge
cwtl
xor
subb
mov
jge
imul
jmp
inc
jmp
or
mov
or
outsl
cmp
xor
imul
mov
xor
jae
cwtl
add
stos
orb
mov
pusha
or
jle
pushf
aad
sbb
jno
push
inc
loope
xor
push
mov
insl
push
jecxz
cmpsb
adc
fstpl
enter
push
pusha
sub
dec
dec
imul
push
pop
inc
pop
out
push
daa
lcall
cmp
cmp
gs
je
les
bswap
fisttpll
or
cmp
pop
fcmovnu
push
stos
sbb
pusha
jno
stos
xchg
mov
test
mov
and
adc
outsl
cmp
lods
nop
lock
push
in
aaa
fldt
loopne
jns
repnz
rcrl
mov
jp
cmp
inc
into
rorb
fists
ret
arpl
jp
mov
mov
repz
and
mov
push
mov
sub
testl
icebp
or
xor
mov
push
ss
jno
inc
leave
aaa
mov
lock
ret
cmp
out
sti
lea
das
inc
xchg
iret
pop
shlb
mov
push
and
ja
mov
mov
push
fcompl
and
cmp
cmpsl
test
jle
outsb
inc
out
sub
adc
mov
cmp
inc
lods
sbb
enter
filds
xor
das
pop
pop
es
xchg
loopne
or
pop
aad
xor
int3
icebp
cld
cmpsb
push
je
mov
xchg
mov
pop
adc
fidivs
shl
cmp
cmpsl
sbb
jmp
ror
sub
in
fldt
stos
push
jmp
in
sbb
ficomps
fisttpll
lret
sbb
ss
inc
nop
enter
jne
push
std
ja
cmpl
rcrb
mov
pop
jle
daa
pop
mov
call
inc
or
clc
fildl
loopne
mov
push
pop
ljmp
punpckhdq
bound
mov
sub
ljmp
xchg
je
fcmovnbe
fwait
jne
hlt
jbe
gs
mov
scas
lock
adc
push
pop
outsl
pop
mov
xchg
out
bound
inc
mov
std
or
sbb
inc
sub
cmc
mov
xor
orps
mov
dec
xor
mov
cs
sub
imul
repz
cmp
jno
pop
xor
push
js
push
lock
flds
imul
xchg
pusha
ror
push
adc
daa
insl
dec
xor
popf
inc
push
mov
and
imul
pusha
sub
lahf
shrb
and
and
in
inc
cmpsl
negl
dec
mov
movsl
push
adc
pop
xchg
inc
cltd
xor
cmp
jne
xor
mov
xchg
fdivp
pop
sub
lret
mov
and
ret
jae
les
cmp
sti
lods
push
sahf
pop
in
ret
bound
lret
lahf
js
lret
clc
pusha
lds
mov
jno
or
lods
stc
jno
sbb
lds
dec
jge
repnz
fnsave
add
mov
jge
dec
cld
dec
ja
lret
shr
daa
gs
pop
mov
pop
sti
popa
neg
dec
dec
cmp
sub
pop
outsb
loope
mov
lahf
cmp
movsl
hlt
mov
mov
xor
ret
test
enter
movsl
inc
lock
aad
dec
pop
cwtl
or
fwait
pop
mov
leave
xchg
mov
mov
sub
lea
lret
sub
jle
push
loop
popa
sbb
int3
hlt
mov
repz
les
shr
imul
inc
jecxz
and
ljmp
rcr
and
xor
mov
imul
imul
fidivs
mov
mov
jl
sub
sub
ja
fdivrl
stos
inc
popf
adc
int
out
pushf
dec
adc
dec
add
jmp
xchg
lods
xsaves
fdivr
push
mov
aad
pop
test
call
cld
xor
fs
cmpsb
adc
scas
cmc
push
jecxz
loope
jno
jmp
sti
or
insb
dec
hlt
xchg
ja
mov
xchg
mov
out
and
lock
out
and
in
xor
push
jecxz
or
loopne
pushf
and
mov
jmp
xchg
std
call
sub
shrb
mov
mov
ljmp
lret
push
xorl
movsb
ret
pop
es
orl
xor
push
lds
xchg
and
mov
mov
mov
sbb
fadd
out
xor
and
loope
mov
cli
pop
sub
sbb
ret
adc
jnp
mov
lock
push
adc
jae
sbb
fcmovu
dec
mov
clc
and
add
or
mov
notl
push
sbb
pop
dec
dec
xchg
or
mov
add
popa
push
jge
sub
sbb
mov
mov
dec
popf
xchg
stc
inc
mov
and
cli
outsl
rol
ret
push
jmp
leave
jmp
inc
iret
jle
pop
adc
ljmp
jecxz
add
pushf
inc
dec
push
ljmp
push
cli
cmpsl
adc
ds
push
jp
mov
mov
mov
sub
mov
test
lods
mov
les
mov
test
mov
movb
inc
scas
stc
push
fistpll
ret
and
and
mov
jnp
subl
pusha
imul
fsubs
mov
xor
int3
paddsb
negl
push
push
push
inc
sub
es
jb,pt
fisttps
lods
rorb
adc
push
xor
out
cmc
sbb
add
test
es
popa
or
lods
jl
mov
mov
jp
in
arpl
pop
adc
popa
stos
cmp
jne
std
loop
pushf
and
xchg
rcr
fwait
bound
xor
cmpl
xchg
sub
in
pop
and
mov
into
int3
xchg
call
pop
shl
lahf
int
imul
mov
mov
pushfw
subl
mov
mov
xchg
jle
lods
mov
out
add
loope
inc
pop
bound
fistps
imul
mov
and
xlat
push
sti
mov
mov
and
pop
es
dec
push
aad
sbb
std
xor
in
loope
pop
cmp
adcl
adc
adc
subl
pop
mov
in
gs
out
aas
int3
bndldx
sub
mov
mov
xchg
dec
orb
popa
sbb
in
sahf
inc
pusha
push
sbb
fwait
lds
dec
out
jl
add
xor
add
in
mov
in
icebp
pushf
adc
fs
out
lds
loop
dec
ljmp
push
sub
push
popa
out
xchg
imul
jnp
push
pushf
jno
cmp
xlat
sub
xor
loopne
daa
lock
je
pop
mov
fdivrl
cmpsl
mov
jl
sub
das
or
adc
movhps
rcrb
jle
fdivrs
add
loop
cmp
push
lock
push
pusha
jmp
loopne
mov
sub
sub
ljmp
inc
popa
dec
andl
sbb
pop
gs
stos
xor
pusha
sub
shll
daa
dec
xchg
xchg
jmp
mov
add
push
iret
out
mov
cmp
orl
and
scas
jne
dec
cmp
pop
push
cmp
mov
pop
cltd
scas
add
cmp
mov
lret
dec
add
mov
sbb
insb
insb
insb
in
ss
int3
inc
sbb
es
push
mov
mov
fisubs
cli
ret
push
push
data16
jbe
cmp
sbb
js
aad
fsubr
add
gs
enter
cli
aaa
sub
sub
sub
pop
insb
sbbb
stos
dec
or
jg,pt
mov
push
in
fsts
cmp
imul
cmp
pop
pop
push
add
adc
xchg
movsb
fdivs
jo
dec
arpl
xchg
nop
call
icebp
cmp
test
stos
or
push
movsb
inc
cmp
rclb
test
les
xchg
or
repz
jecxz
inc
aaa
xor
xor
popa
mov
push
icebp
jns
jp
cltd
lcall
movsl
imul
dec
movsb
icebp
mov
mov
mov
jp
stos
pop
divb
hlt
sbb
sub
dec
pop
dec
ds
jbe
or
inc
sub
jge
repnz
jo
sbb
xchg
dec
in
icebp
fisttpl
das
imul
mov
mov
xlat
xorb
mov
test
test
gs
adc
push
out
sbb
or
test
mov
inc
sub
push
int
jmp
repnz
add
loop
pop
push
imul
mov
sarb
lods
dec
ud0
push
iret
jbe
or
or
pop
aaa
push
and
fisubrl
add
call
imul
enter
push
stos
aad
ret
loop
and
xor
ds
add
addr16
add
xchg
and
jge
xchg
and
repnz
inc
pusha
inc
push
xchg
into
pop
ret
or
mov
dec
jne
xchg
inc
shlb
lret
into
and
std
xor
rcr
pushf
push
xor
pop
test
add
sahf
xor
push
push
pop
jbe
or
add
pop
push
mov
mov
jmp
or
dec
jmp
adc
cltd
shlb
ss
xchg
ljmp
push
lret
add
xchg
pusha
fnsave
std
rorb
outsl
push
dec
jnp
jmp
and
nop
mov
std
das
stc
xor
sbb
mov
insl
mov
sbb
stos
sub
push
sub
movsl
in
cmp
movsl
and
inc
rclb
sub
or
jmp
das
shrl
or
dec
mov
or
stos
pop
in
pop
jne
or
push
pusha
dec
xorb
jb
fst
ret
std
imul
add
das
ret
add
data16
repz
jne
adc
push
push
lret
iret
mov
add
outsl
daa
push
xchg
sub
xchg
sub
add
mov
pop
cmp
orb
aaa
lods
dec
push
popl
jnp
add
xchg
mov
pop
inc
or
ret
ficoms
xchg
pusha
nop
sar
jmp
insb
lock
pop
cmp
daa
mov
mov
scas
sub
aaa
jl
icebp
gs
and
sub
dec
add
or
add
sub
push
add
cmp
mov
xor
jge
mov
fimuls
dec
jp
or
push
mov
mov
rcll
loope
sbb
int3
lret
gs
or
jae
push
rorl
js
sbb
mov
or
subl
dec
shll
outsb
or
leave
fisttpl
mov
aas
stos
inc
dec
leave
and
xchg
mov
jle
ret
aaa
jbe
sub
mov
mov
fcomi
int3
ret
loopne
cmp
xchg
iret
arpl
andl
lretw
push
fidivrl
mov
loopne
add
icebp
dec
mov
movsl
int3
and
fsubrl
in
pop
pop
push
and
or
mov
push
lcall
insb
popa
or
jae
xor
icebp
pushf
ret
notrack
out
andb
scas
lods
lret
cmp
imul
repnz
sub
mov
adc
or
push
hlt
dec
into
adc
and
cmp
sti
ljmp
xchg
mov
pop
push
into
lds
mov
aam
push
xor
in
pop
daa
sbb
test
stos
in
sub
or
out
mov
inc
inc
jmp
fiaddl
jmp
iret
lret
xor
pop
out
adc
es
into
push
mov
adc
mov
jmp
lret
mov
int3
mov
in
add
subl
mov
push
fildl
inc
movsl
call
loop
mov
sbb
cltd
stos
jae
dec
mov
enter
mov
lods
xchg
jae
inc
xor
loope
cmp
xor
stos
sbb
pop
adc
and
in
insl
jno
or
das
xchg
jge
je
pop
dec
mov
pop
pop
or
and
push
sarb
divl
xor
dec
add
jno
xchg
cmp
mov
sub
sbb
inc
pop
sbb
cmp
push
das
add
mov
sub
shlb
dec
inc
mov
daa
push
xorb
sub
and
cs
out
mov
push
xor
mov
stc
pop
orl
pushf
test
cmpsb
push
jo
add
fwait
mov
dec
add
mov
inc
dec
push
add
pop
sub
in
or
add
fnstsw
lahf
icebp
cld
push
inc
nop
dec
out
adc
mov
sbb
xor
xor
lahf
xor
mov
xor
insb
jge
sub
pop
mov
pop
cmpsl
inc
ret
jg
cmpb
pop
xor
fistpll
jb
out
xchg
les
out
int
std
sub
es
push
mov
inc
dec
aaa
push
mov
pushf
mov
add
lods
mov
dec
cltd
add
in
fimull
jae
fnsave
push
into
cmc
push
jnp
jge
daa
push
aad
shl
lahf
in
push
add
mov
xchg
dec
stos
ret
pusha
aam
sbb
scas
push
ss
mov
iret
repz
icebp
fisttpll
add
pop
mov
sbb
push
aaa
pop
sti
ret
sti
int3
out
sbb
popa
aaa
inc
rolb
mov
dec
outsb
inc
jg
sub
bound
xchg
xchg
popa
movsl
inc
iret
jg
int3
mov
out
push
jbe
je
sbb
adc
mov
sbb
pushf
pushf
adc
mov
sarb
inc
cmpsl
xchg
int
neg
xlat
or
imul
repz
jnp
scas
fbstp
in
mov
lea
cmp
data16
hlt
xchg
stos
pop
das
dec
inc
push
es
lret
out
pushf
js
xchg
mov
ficomps
pop
cmpsl
in
icebp
jb
adc
push
mov
int
rcpps
or
pop
or
jge
pop
icebp
adc
cmp
mov
push
pop
or
xchg
rcl
scas
pop
dec
outsl
jmp
jmp
cltd
jmp
mov
pop
push
adc
insb
push
push
or
sbb
ret
lret
push
mov
and
hlt
and
call
mov
sub
mulb
dec
imul
pushf
cmp
sbb
jl
mov
and
aad
std
call
push
cmp
jl
lods
scas
mov
and
xor
out
call
repnz
in
ljmp
pop
cmp
sti
ja
gs
cmp
icebp
mov
cwtl
dec
jg
scas
cmpsb
mov
and
jl
push
pusha
push
add
mov
jp
push
pop
inc
lret
sub
cli
add
mov
sbb
mov
cmp
push
adcl
lret
call
or
adc
into
movl
xchg
mov
or
add
pop
and
and
in
lret
lret
pop
dec
inc
int3
out
inc
lods
mov
andb
fcoms
dec
xor
loopne
pop
cwtl
loope
lods
js
ja
ret
xor
mov
stos
mov
test
cmp
pop
stos
sbb
mov
aas
stos
fwait
aaa
jle
xchg
and
sti
adc
rclb
push
jae
daa
add
sti
sahf
xlat
pushf
mov
add
jp
xchg
cmp
in
jo
mov
dec
adc
das
adc
jg
mov
inc
dec
dec
xor
popa
mov
int
pop
jo
lret
cli
push
push
mov
sub
lret
scas
or
pop
mov
movsl
mov
jge
lods
push
out
ret
xlat
andb
jge
push
test
lcall
addb
add
call
mov
and
out
sub
mov
divl
inc
inc
sbb
jne
cmp
das
jge
popf
inc
insb
mov
cmp
pushf
arpl
loope
sti
adc
sub
xchg
inc
dec
sub
cwtl
lahf
cmpsl
test
adc
movb
enter
icebp
scas
push
inc
cmc
in
pusha
xor
das
pushf
jnp
mov
adc
sahf
shrl
jnp
nop
mov
mov
mov
fwait
xchg
das
mov
mov
push
mov
stos
das
test
sub
mov
movsb
sub
mov
iret
add
cwtl
fidivs
push
xor
mov
emms
push
or
ret
cmp
test
adc
cmpl
pop
popf
push
insb
dec
inc
xchg
xchg
xor
adc
sahf
scas
sbb
add
xchg
aam
mov
notl
or
dec
xchg
push
sub
and
outsl
cs
cmc
test
lahf
fwait
in
xlat
push
cmp
imul
add
loop
sbb
test
inc
and
cli
enter
sub
inc
push
or
mov
mov
lods
aam
lods
sbb
addl
gs
jnp
andb
in
jne
sbb
ror
test
bound
clc
push
fwait
js
push
jmp
ljmp
xor
hlt
add
mov
std
movsb
dec
mov
push
mov
rorl
xchg
jle
sbb
pop
lods
arpl
push
movsl
dec
addb
jno
add
sbb
nop
clc
push
rcrb
cmp
divb
inc
sahf
cmc
stc
popa
movsb
cmp
jbe
nop
jp
loopne,pt
mov
or
push
lods
inc
jge
test
fildll
adc
xor
in
ror
fidivrl
pusha
pop
and
pop
xchg
sbb
mov
xlat
mov
xor
stos
jecxz
ret
cmp
leave
adc
cwtl
int
lahf
jecxz
sub
push
popf
xchg
mov
aad
ljmp
cmp
mov
xchg
inc
xchg
and
inc
mov
or
loope
cmpsb
std
inc
add
jne
pop
xchg
lahf
ja
xor
rcll
out
lahf
pop
ss
loop
jecxz
push
in
js
sar
leave
mov
xchg
lds
scas
inc
addr16
popa
in
push
push
jno
sub
pusha
mov
xchg
jae
and
les
sub
mov
mov
fidivl
movsb
sbb
add
cmp
addl
sbb
jle
add
mov
jg
cld
repnz
jae
and
bound
jge
or
gs
jmp
push
sub
shll
cld
jnp
add
push
cmpsl
subl
pusha
jmp
leave
or
notb
jno
or
and
jbe
push
ja
sbb
mov
inc
mov
xchg
inc
shll
test
cs
ljmp
into
mov
xchg
icebp
xor
fcoml
lret
or
mov
mov
pop
or
imul
push
mov
imul
mov
stos
loop
ljmp
mov
mov
xchg
adc
cmp
pop
pmaddwd
sub
sub
add
sbb
ret
add
les
adc
and
inc
inc
xchg
mov
mov
dec
js
lret
ljmp
fiadds
in
int
push
or
ljmp
imul
inc
pop
sub
pop
inc
mov
scas
dec
adc
bound
scas
incb
xchg
test
pop
enter
push
push
jno
lods
xor
cmc
fists
mov
stc
mov
or
jbe
jb
xlat
cltd
mov
mov
xor
adc
ret
out
sti
adc
ljmp
sbb
xor
std
cmp
pop
out
inc
push
testl
and
dec
add
lea
data16
ret
sarl
sahf
adc
inc
addl
mov
ficompl
jecxz
sbb
lea
mov
push
aas
insb
aas
push
jecxz
mov
ljmp
ret
or
jo
jl
leave
nop
mov
cmp
push
add
fidivl
mov
daa
inc
test
lods
mov
imull
outsb
push
fwait
sub
pop
cmp
loope
int
mov
jecxz
mov
xor
out
outsl
aam
sbb
test
cwtl
mov
in
xchg
xchg
and
sbb
mov
jmp
mov
and
add
hlt
test
dec
int
cli
pop
imul
cltd
push
cs
popl
sub
add
lea
aaa
add
push
jecxz
cmpsb
jecxz
addr16
cmp
inc
lcall
enter
sbb
bound
mov
pop
aaa
pusha
xchg
jp
aaa
lds
addr16
fucom
push
push
cld
sub
pop
adc
data16
inc
pop
sbb
adcl
mov
imul
lea
and
fidivrl
mov
lock
inc
inc
pop
lret
cld
add
popf
loope
jnp
adc
mov
scas
mov
adc
mov
clc
sbb
push
nop
mov
sub
and
cmp
sbb
sbb
pop
stos
mov
inc
inc
shrl
scas
sub
xchg
outsb
inc
fmulp
leave
jno,pn
movl
inc
jg
cmp
jg
mov
frstor
into
xchg
imul
jg
aam
test
add
iret
aad
adc
in
int
xchg
mov
inc
sbb
dec
cltd
pop
sbb
imul
add
mov
xchg
jecxz
mov
inc
jne
jno
mov
int3
lods
sbb
xor
pop
push
or
mov
adc
and
mov
rcll
and
loopne
xchg
adc
inc
repnz
pop
add
mov
add
hlt
xchg
fistl
inc
loope
pusha
out
fists
adc
int
sbb
test
jmp
test
sbb
shlb
add
dec
sti
jne
xchg
inc
and
jmp
nop
sbb
xor
lahf
push
leave
or
push
out
adc
movsl
pop
xchg
mov
int
cmp
lahf
loope
imul
cmp
loope
xchg
pop
out
lods
adc
mov
adc
inc
push
cmp
pop
stc
dec
push
mov
addb
mov
je
dec
and
sub
push
adc
out
popa
out
ljmp
xchg
mov
rcr
sbb
in
push
data16
xchg
sub
adc
icebp
jecxz
push
stos
mov
in
add
scas
js
and
xlat
sub
cmpsl
dec
and
inc
gs
jg
add
ret
js
and
inc
int3
add
jo
pusha
mov
or
dec
and
ret
mov
test
pop
and
fidivrl
popf
add
mov
cmp
jecxz
xchg
ja
jne
adc
mov
out
loopne
insl
dec
push
lods
lret
mov
fdivl
sbb
jno
push
repnz
cmpl
mov
mov
sti
or
cmp
loope
mov
pop
loope
inc
fs
and
insl
dec
cld
aam
jne
lods
in
fnstsw
add
mov
call
sbb
ret
mov
cmpb
or
lods
jle
mov
mov
stc
shll
jno
pushf
imulb
xchg
in
hlt
or
inc
movsl
lods
xchg
pop
and
sub
rolb
adc
lds
xor
mov
mov
in
mov
jb
movsl
in
or
aas
or
xor
dec
mov
adc
jae
push
push
loop
mov
mov
into
fstl
and
jmp
push
sbb
pop
mov
inc
dec
push
jmp
xorb
filds
mov
mov
fdivp
ja
outsb
sti
xchg
roll
mov
dec
pop
lock
cli
mov
pop
int
scas
jge
inc
lock
shrl
mov
and
stos
jnp
or
repnz
dec
push
mov
rcr
mov
dec
mov
dec
sti
add
not
push
sbb
mov
or
jl
xor
jle
popf
sub
movsb
shll
divl
push
add
outsb
xor
arpl
push
lahf
dec
add
inc
inc
lods
or
shlb
sbb
mov
push
loopne
cmpsl
xchg
shrl
inc
push
sbb
inc
lock
push
sbb
add
or
or
xor
push
in
xlat
mov
xor
push
out
mov
mov
gs
inc
xchg
sbb
jg
ljmp
inc
outsb
jmp
pusha
xor
mov
divb
sub
lods
lret
test
icebp
int3
jg
ja
mov
mov
iret
fs
mov
hlt
repz
pop
sbb
xor
push
inc
lahf
cmpb
mov
lcall
xor
inc
xor
js
adc
leave
fstl
shrb
cltd
cs
push
push
cli
data16
out
sti
pop
push
sbb
lahf
outsb
push
xor
sti
cwtl
rcr
in
jb
push
imul
icebp
cmp
xchg
push
bound
pop
mov
xor
inc
pop
dec
xchg
jl
addr16
test
out
mov
stos
leave
sarb
lahf
jg
or
out
xor
mov
int
mov
jbe
rcrb
adc
mov
fwait
nop
out
scas
xchg
dec
or
loop
loop
insl
aad
mov
xorb
lods
insl
pop
xchg
push
pusha
dec
in
ret
ficoml
sbb
outsb
add
fbld
enter
inc
test
aam
and
call
mov
mov
outsb
int
out
jl
dec
xchg
and
les
inc
das
ljmp
inc
pop
mov
cmp
imul
add
dec
cmpsb
jbe
jns
sarb
aad
mov
test
sub
in
pop
in
mov
pop
push
rcl
pop
insb
stos
inc
loop
xchg
stos
xchg
sub
pop
out
pushf
pop
or
repnz
push
mov
dec
sarb
push
push
mov
jmp
jle
adc
lods
ret
pop
leave
repnz
out
popf
lds
jg
orb
sub
cmp
inc
sub
add
or
popf
pop
inc
cmp
adc
mov
inc
dec
pop
mov
shll
loopne
out
dec
xchg
push
pop
or
testb
popf
insl
lcall
cmp
dec
cmp
pushf
xlat
xor
xchg
popf
imul
ret
ret
pop
lods
push
negl
inc
mov
enter
cmp
mov
or
jbe
ret
in
adc
addr16
jle
xchg
mov
or
je
or
add
xchg
icebp
sub
sub
lret
scas
negb
dec
cmpsl
lret
sarl
mov
jae
popf
pop
sbbb
insl
adc
ja
mov
add
lret
stc
orl
or
dec
mov
repnz
jno
sub
mov
roll
jne
shrb
imul
mov
jecxz
adc
cmp
fdivrp
bound
std
sti
mov
xchg
dec
lahf
and
adc
jle
arpl
adc
faddp
and
popa
int3
jb
insl
inc
pusha
sbbl
inc
add
mov
adc
xchg
daa
hlt
push
icebp
cmp
sbb
sub
sbb
sbb
xchg
inc
jmp
adc
jmp
mov
hlt
fstp
cmpsb
xor
fwait
loope
shl
in
fiaddl
sub
notl
sbb
dec
dec
or
fistpl
les
dec
nop
icebp
mov
ret
xor
in
addb
les
pop
jae
cmp
lea
aam
dec
ja
rol
mov
loop
or
cmp
aad
dec
clc
jge
insl
dec
cmp
mov
daa
cmp
xlat
jl
or
mov
loope
inc
sub
bound
dec
fistpl
rcr
inc
lahf
in
cmpsl
xchg
cmp
inc
pop
inc
cmp
xchg
lret
addr16
idivb
add
cs
stc
dec
mov
mov
add
shll
or
rorb
jno
mov
push
add
fbstp
repnz
insl
mov
xor
enter
jle
popa
iret
insl
push
fstpl
cmp
pop
mov
imul
mov
sub
int
fcomps
jmp
add
xchg
pusha
push
jle
inc
mov
add
lahf
or
dec
and
mov
xchg
pop
int
mov
lods
sub
fs
fdiv
mov
and
pop
jg
inc
mov
cmp
mov
popl
sbb
in
sub
cmc
insb
mov
sub
lcall
and
jne
mov
jg
test
pusha
mov
pop
imull
stos
hlt
push
push
shrb
inc
push
imul
stos
jb
sub
repz
pop
movsl
orb
adc
jb
outsl
pop
cmc
aaa
ficoml
ret
sbb
cmp
adc
jnp
pop
fmull
and
mov
in
mulb
pop
mov
add
loope
sbb
mov
pop
dec
cmp
addr16
dec
in
pop
iret
pop
add
jmp
pop
mull
cmc
inc
cmpsl
in
in
cmp
fcomps
push
mov
daa
sahf
mulb
cmp
jns
pop
and
xlat
mov
and
jecxz
mov
mov
stc
cs
jo,pt
mov
les
shrb
xchg
shll
sti
bsr
and
loopne
inc
xchg
jge
sub
or
das
cli
push
mov
popa
cmp
cltd
adc
out
add
sbb
popf
fldenv
xchg
inc
divb
or
idivb
push
adc
inc
cmp
sub
cli
or
scas
pop
xchg
je
add
dec
mov
xor
out
jp
jo
or
cld
movsb
adc
cltd
jp
repnz
js
jnp
lahf
call
jp
push
push
movsb
mov
pushf
mov
in
pop
jle
inc
mov
daa
nop
fs
adc
xlat
push
in
movsl
hlt
adc
sbb
jecxz
adc
jl
sub
fs
xlat
pop
inc
out
push
ljmp
pop
and
pop
jae
imul
push
outsb
movsl
xchg
xchg
mov
repz
push
or
inc
cmpsb
inc
inc
push
stc
pop
xor
iret
sub
mov
sub
adc
xor
or
aam
xor
hlt
movsb
add
inc
push
cmp
scas
movsl
push
out
and
test
xchg
out
jno
and
cltd
pop
mov
mov
sti
cmpsl
and
in
arpl
hlt
xchg
xchg
lods
pop
push
fsubrp
mov
mov
loop
iret
fcmovnu
xchg
adc
lock
or
dec
sahf
jp
jecxz
pop
loope
jne
jbe
outsb
hlt
adc
mov
mov
mov
and
push
clc
scas
int3
xchg
mov
addb
sub
mov
icebp
cmpsb
ljmp
adc
mov
xchg
mov
jb
dec
lods
inc
sbb
push
imul
push
roll
sub
jp
arpl
rcr
popf
adc
icebp
dec
loop
xchg
jecxz
cld
call
jmp
push
push
sbb
cmpsb
xchg
or
sbb
push
jno
mov
test
dec
adc
test
filds
push
nop
ja
imul
pop
push
mov
movl
jg
iret
or
aad
pop
std
add
dec
dec
popf
mov
jg
fdivrs
mov
addl
mov
push
adc
xchg
pop
shlb
pusha
js
ds
out
sbb
sub
pop
rcrb
push
adc
pop
or
jb
lods
adc
sub
xchg
pop
add
mov
mov
adc
call
jb
mov
cmp
out
pop
jbe
out
add
adc
icebp
enter
dec
xor
mov
mov
and
xor
xchg
int
push
movb
mov
xchg
arpl
scas
sbb
imul
mov
shll
inc
es
out
xchg
sti
jbe
add
ror
test
and
sub
pusha
push
cmp
into
fwait
pop
pop
ds
push
mov
mov
dec
mov
xor
cmpsl
add
add
mov
add
adc
js
and
and
es
test
and
inc
enter
jl
stc
jbe
adc
arpl
insl
out
add
jb
mov
push
xor
loopne
enter
daa
incl
arpl
dec
inc
adc
pop
and
pop
repz
repnz
mov
lret
mov
xor
xor
in
fdiv
or
jmp
and
xchg
divps
gs
lods
dec
js
lahf
mov
dec
or
ret
mov
cmpsl
xchg
push
mov
inc
fidivrs
dec
jecxz
mov
out
push
jno
inc
jmp
push
pop
std
scas
rcrb
and
dec
in
xchg
xor
mov
dec
mov
xor
jns
mov
pop
leave
add
imul
adc
xchg
adc
lret
int
inc
add
mov
mov
lret
fucomi
mov
sub
sahf
daa
pop
mov
movsl
xchg
pushf
cld
mov
lret
stos
dec
int3
into
aam
lea
mov
push
fcmovb
and
adc
xor
int
add
popl
lods
ljmp
mov
imul
push
inc
ja
xor
fmulp
leave
jne
scas
fstl
test
fwait
decl
sub
jno
repz
jne
cmpsb
add
jns
cltd
xchg
outsl
mov
mov
sub
int
pushf
jno
imul
fisubrs
aam
sub
cwtl
cmp
rclb
out
hlt
or
lods
pusha
xor
shlb
into
test
rcl
xchg
jno
adc
outsl
inc
sub
or
or
dec
xchg
lods
pop
hlt
mov
mov
adc
test
mov
sarl
ficompl
pop
jnp
shlb
jne
scas
sub
mov
inc
or
repz
mov
dec
mov
mov
push
push
inc
xchg
aas
imul
mov
iret
cmp
mov
test
data16
push
cmp
pushf
xchg
pop
int
mov
jae
lret
pop
push
mov
dec
or
xchg
negl
loop
push
mov
ret
sti
or
out
inc
push
pop
fmull
pop
or
rol
cs
add
dec
clc
cmp
in
mov
xchg
roll
hlt
pop
int3
sbb
dec
mov
pop
lds
jg
inc
insb
adc
js
dec
mov
jecxz
daa
lcall
and
add
daa
adc
fsubs
push
and
xchg
cmc
or
popa
std
add
inc
cmp
mov
or
jae
cwtl
ret
js
lock
or
outsl
pop
loopne
adc
cmpl
fmuls
adc
jb
jnp
roll
mov
nop
jns
inc
mov
rcr
pop
loop
sti
cmp
mov
clc
lods
test
stc
push
fs
dec
comiss
int
xor
adc
call
push
lret
mov
add
xchg
add
add
mov
imul
jecxz
mov
push
in
jmp
aas
mov
pop
test
in
sti
lods
or
stos
repnz
cmp
jnp
loop
xor
aam
push
pop
xorl
mov
inc
lea
dec
or
clc
jns
cmpsb
ss
pop
sbb
xor
jle
push
push
incl
and
fwait
cmc
lahf
stc
pop
ljmp
jae
jbe
test
mov
movsl
xchg
loopne
clc
repnz
cmpsb
cmp
cmc
add
push
sahf
jo
iret
push
clc
add
loopne
stos
fisubrl
ret
mov
jecxz
pusha
test
flds
mov
das
jnp
push
xor
lock
into
pop
pop
or
inc
push
or
push
repnz
frstor
aaa
mov
std
iret
inc
lock
test
mov
std
cmp
or
fbld
pushf
jnp
dec
rorb
and
inc
testb
rcrb
out
jo
pop
add
pop
fwait
push
arpl
sub
mov
cmp
xchg
pop
sub
xor
mov
lock
push
loopne
or
loop
into
jnp
into
adc
push
adc
xchg
mov
push
pop
mov
sub
add
int3
mov
pusha
icebp
push
lcall
push
push
scas
into
aam
jb
push
pop
sbb
mov
inc
cwtl
add
stc
and
xchg
sti
bound
xor
repnz
mov
popf
pop
fistl
mov
vmptrst
or
dec
add
pop
mov
push
inc
and
rcr
dec
cltd
fadds
inc
sbb
xchg
mov
dec
lret
xchg
mov
in
jbe
dec
jp
mov
xchg
aad
in
addr16
lcall
or
push
or
cmp
mov
xchg
cmp
pop
and
rcl
in
loop
jmp
sahf
lods
cmp
loope
sbb
lret
push
mov
jmp
adc
sbb
cmp
inc
aad
cmp
fcomps
xchg
mov
ret
sarb
call
xchg
add
or
mov
cs
in
mov
push
mov
adc
in
ss
paddusw
inc
cmp
and
and
or
int
ret
aaa
mov
mov
cmpsl
lea
xchg
stos
jge
cs
stc
scas
and
dec
fsub
jl
xchg
mov
sahf
sbb
loope
fidivl
cmp
mov
mov
mov
repnz
add
or
pop
adc
add
xor
in
push
mov
lcall
cmpsl
in
sub
pop
xor
jns
mov
xchg
cli
imul
rcrl
lcall
filds
loop
test
dec
out
mov
pushf
dec
inc
hlt
test
mov
movsb
push
and
push
out
loope
inc
je
mov
add
cmp
shrl
push
sbb
push
mov
pop
xorb
das
ds
cmp
stos
lock
xor
test
dec
test
in
mov
cmpsl
push
push
sub
in
xchg
dec
cmp
test
into
jo
outsl
fldcw
jbe
fiaddl
in
arpl
xor
std
cmp
cs
daa
push
addr16
data16
movsl
stos
cwtl
clc
xor
adc
fmuls
nop
or
mov
xor
dec
ljmp
jns
nop
ja
and
mov
notb
push
or
cmp
adc
dec
lods
dec
adc
subb
out
fcmovnu
arpl
ds
dec
fists
ret
sub
push
jmp
or
xchg
sbb
jo
mov
sti
ds
mov
jge
jmp
sti
mov
inc
pop
or
add
cwtl
xchg
and
cmp
pop
ja
ret
mov
mov
fwait
adc
not
into
cmp
in
pop
repnz
sub
mov
imul
xor
std
jnp
pop
popf
cwtl
sub
push
cltd
pop
cmp
in
cmp
mov
insl
cli
scas
xchg
jno
out
adc
jne
cmp
out
xchg
xchg
adcl
or
mov
push
roll
mov
jge
pusha
cmp
jnp
or
rclb
jo
divl
or
sub
pusha
jge
inc
dec
cmovb
mov
dec
imul
aam
scas
cmp
call
popf
xchg
sbb
fisubl
enter
sbb
inc
mov
push
sarb
dec
movsb
dec
pop
and
stos
sbb
stos
js
fiadds
cmp
mov
jp
push
add
mov
push
xlat
cmp
imul
inc
jne
popa
xchg
dec
mov
jge
and
xlat
mov
jo
xor
adc
push
lea
pop
xchg
icebp
andb
sbb
inc
fidivl
iret
stos
add
ret
add
jbe
in
das
fdivs
int3
dec
sub
movsb
int
xchg
idivb
push
xor
jp
add
xor
xor
and
inc
jl
pop
bnd
push
sub
mov
lcall
lret
cltd
popa
jnp
movsb
sbb
ljmp
adc
or
fwait
push
cmp
divb
test
shlb
xchg
push
call
sub
push
pop
jnp
mov
jb
xchg
push
pop
in
clc
add
pop
ljmp
aas
cmc
push
lahf
stos
jecxz
sub
out
sbb
jge
push
fs
mov
xlat
mov
mov
test
rcrb
jne
in
jge
je
inc
and
cmp
mov
pop
pop
pop
sbb
mov
cmp
and
pop
and
dec
aam
sbb
iret
sahf
cmp
push
and
shrb
adc
inc
push
add
mov
sti
mov
jns
mov
sbb
xorl
je
ret
div
iret
out
test
bound
sub
daa
negb
insb
jecxz
adc
push
sub
or
and
jno
mov
js
adc
pop
mov
pop
dec
cmpsb
sbb
push
sub
jg
imul
stc
data16
and
adc
scas
inc
in
mov
lahf
test
adc
lods
xchg
adc
dec
and
mov
gs
lods
cmp
xlat
push
jne
add
sub
cs
mov
cmp
lds
inc
loop
repnz
jmp
les
in
add
fcoms
mov
lds
sub
mov
or
jmp
aas
addr16
int3
add
or
cmpsb
xorl
call
push
add
popa
in
mov
pop
fsubl
ljmp
icebp
sub
ret
xchg
adc
sbb
mov
fnsaves
xchg
pop
enter
lcall
xor
or
xor
and
test
test
xchg
cmp
test
jne
gs
push
jae
jbe
orl
jae
push
push
mov
cwtl
cmp
and
sub
mov
loopne
add
push
mov
jg
pop
mov
xor
stc
xor
xchg
daa
and
clc
and
lds
movsl
sbb
addb
popa
bound
lock
jno
lea
and
movl
cmpsb
cwtl
std
jl
sbb
sbb
daa
je
sub
dec
repnz
jle
add
sbb
lods
xor
mov
cmc
cmp
add
movsl
test
sbb
outsl
sbb
xchg
or
test
add
stc
and
push
sbb
call
dec
xor
idivl
xchg
cmpsl
lock
stos
or
push
cmp
jb
imul
clc
test
inc
push
xlat
and
je
lahf
jnp
mov
xchg
rcll
inc
push
lret
or
aaa
stc
and
hlt
jecxz
test
and
cmp
dec
into
sbb
cmpsl
or
mov
stc
fwait
divl
cs
adc
les
mov
test
leave
jp
push
aad
popa
fdecstp
callw
sbb
pop
mov
pusha
mov
icebp
scas
and
bound
jae
adc
jecxz
cs
cmp
mov
adc
xchg
xchg
or
int3
sbb
xlat
mov
or
stc
pop
punpckhwd
cmpsl
adcb
and
sub
test
pop
jl
jmp
mov
dec
in
adc
cmc
aas
lahf
inc
test
sti
dec
jb
hlt
cmpsl
aas
jbe
add
pop
ficoml
gs
lahf
xchg
aas
push
and
sahf
test
jmp
outsl
icebp
or
outsb
pushf
pop
lea
rcrb
nop
adcb
cmovge
jnp
mov
jae
cmpsl
sbb
mov
mov
mov
in
lret
mov
movsl
xchg
add
jp
pop
cmpsl
mov
fdivrl
cld
adc
movsl
imul
test
adc
int
dec
das
pop
pop
add
ret
test
dec
es
jb
in
ret
lea
add
add
int3
ss
gs
outsl
sbb
add
iret
outsl
mov
xchg
cwtl
cmp
mov
sub
test
xchg
sbb
out
icebp
cmpsl
cmp
dec
cmp
popf
sbb
out
leave
jnp
stos
fmuls
bound
mov
int3
cmp
scas
xor
cli
jno
cmpl
cs
subl
fstps
stc
mov
ret
stos
and
shlb
push
sub
dec
bnd
popf
ja
sbb
popa
jae
sub
cwtl
test
adc
adc
sbb
imul
les
jb
sbb
imul
lods
pop
fwait
outsl
vmread
arpl
or
xchg
jae
mov
mov
push
rcr
aaa
or
sbb
or
loopne
cmp
mov
es
movsb
outsb
repz
andb
adc
or
repnz
mov
jae
cld
or
cmp
xchg
and
pop
push
insb
jl
adc
fdiv
aaa
clc
add
sub
sub
mov
sub
test
and
rorb
sbb
xchg
imul
js
into
iret
mov
xchg
mov
leave
pop
jo
adc
inc
cmc
xchg
xchg
fsubs
das
sbb
cmpsb
adc
and
pop
mov
mov
lds
sub
data16
cmp
cltd
sbb
and
pop
push
sub
jns
out
sbb
sbb
dec
pop
xchg
inc
inc
push
dec
mov
rcrl
and
fs
rclb
popf
loopne
sahf
cmc
mov
mov
out
jge
jge
mov
sub
push
insl
mov
out
sbb
inc
mov
add
hlt
jp
cmpsl
inc
mov
ror
rclb
fstpl
mov
add
add
ror
lds
pshufw
mov
test
hlt
lea
add
stos
xor
dec
and
test
cmp
leave
xchg
daa
lcall
mov
stc
rorl
nop
mov
xchg
push
sbbl
jmp
in
roll
es
mov
lahf
stos
pop
aas
sahf
imul
add
add
lods
mul
mov
lea
mov
cmp
loop
cwtl
ljmp
cmp
mov
cmp
jne
pushf
sti
jbe
jne
jno
xchg
mov
mov
jl
pop
jo
or
cmc
dec
stc
aaa
lcall
inc
in
mov
jg
pop
mov
das
mov
cmp
jno
jmp
jp
lret
cmp
inc
and
out
jbe
fwait
jge
loop
push
std
mov
ret
aad
push
jb
mov
pop
in
adc
leave
or
mov
ficoms
pop
imul
push
gs
outsl
dec
or
aam
test
sbb
mov
pop
mov
add
cmc
loopne
xchg
push
inc
scas
shlb
add
mov
ja
inc
ljmp
xchg
adcl
cmp
cmp
and
sbb
lahf
sbb
xlat
jo
xchg
repnz
lret
and
jle
and
cld
aas
mov
mov
imul
imul
jb
and
adc
stc
loopne
out
jnp
add
mov
xor
icebp
add
out
hlt
dec
add
fs
icebp
mov
lret
adc
or
xor
pop
nop
dec
repnz
inc
jns
stos
out
dec
mov
bound
mov
in
mov
sbb
addr16
push
loopne
xchg
mov
lret
fstpt
js
mov
xchg
repnz
push
xor
addb
enter
adc
inc
imull
mov
rol
add
dec
sbb
push
pavgb
mov
dec
pop
pop
lods
jo
loop
mov
cmp
inc
cmp
fbstp
aas
cmpsb
cmp
sub
jb
push
addr16
bnd
pop
lock
aam
and
or
ja
mov
dec
adc
jns
jmp
push
dec
pop
and
and
scas
call
movsl
sbb
mov
iret
ja
adcb
enter
daa
xlat
adc
dec
rolb
add
inc
push
lods
mov
lahf
mov
test
inc
push
cltd
bound
test
cmpsl
std
sub
mov
stos
inc
add
negl
mov
or
lret
bound
adc
je
inc
sub
pop
and
adc
fbld
xor
mov
sub
pop
bound
roll
sbb
loope
outsl
js
lods
push
xchg
push
push
adc
mov
jns
jl
add
push
mov
inc
cmp
int
xchg
movsl
cwtl
out
cmpsw
or
mov
push
rcll
cwtl
xchg
fs
sarb
cmpsb
push
addr16
mov
jnp
xchg
cmpsb
js
adc
jge
push
rcll
roll
rcr
pop
push
in
dec
pop
pop
cmpsb
push
outsb
dec
pop
fldl2t
push
test
dec
xchg
add
jae
cld
jge
cmp
add
lock
jl
rdtsc
xchg
jne
imul
insb
and
pop
dec
or
jecxz
outsl
and
pop
dec
in
mov
xor
push
repnz
std
cmc
add
push
icebp
lds
push
cmp
inc
push
icebp
dec
int3
dec
icebp
mov
mov
lds
test
insb
xor
adc
jge
mov
dec
and
roll
cmp
adc
test
and
pop
pop
adcl
idivl
mov
mov
jp
leave
mov
xchg
in
jnp
pop
pushf
into
and
rorb
inc
out
divb
sub
jg
jne
mov
mov
out
pushw
dec
cld
mov
add
loopne
add
loop
aad
mov
cld
xchg
repz
scas
ret
inc
jecxz
adc
xorb
inc
icebp
pop
andl
add
jp
fdivl
sbb
push
mov
pop
push
leave
or
cwtl
jecxz
add
loopne
mov
loope
fnsave
and
inc
adc
ljmp
push
arpl
inc
sbb
ficompl
mov
sub
push
rol
cmp
mov
subl
incb
xlat
in
ljmp
fnstsw
call
les
rorl
arpl
push
mov
stos
out
outsl
xor
dec
mov
jl
inc
mov
filds
push
outsb
cmp
xsaveopt
cltd
lods
dec
or
div
adc
jbe
es
push
xor
sub
mov
cltd
jb
sbb
pop
xchg
dec
pop
out
stos
mov
cmp
dec
aaa
cmpsl
je
popa
jno
lds
dec
leave
sti
mov
mov
sbb
sbb
arpl
sub
aad
test
incb
xchg
jecxz
mov
push
adc
insb
pop
lods
int
pop
aaa
push
nop
dec
into
inc
clc
fxch
ffreep
fstl
jne
mov
add
cmp
inc
sbbb
push
jnp
movsl
mov
inc
cltd
bound
inc
cmpsb
jbe
push
jns
cld
dec
fiadds
andb
movsb
add
sub
das
pop
ret
roll
scas
test
inc
ret
icebp
pop
xor
sub
in
loop
nop
inc
adcb
and
neg
stos
mov
popa
bswap
sbb
rorb
ss
xchg
add
cmp
mov
movsb
xor
xchg
aaa
pushf
pusha
stc
leave
mov
scas
fdivrl
xchg
repnz
int
jge
xchg
xchg
dec
ds
pop
xchg
mulb
daa
pop
adc
xchg
andb
dec
imul
jg
jg
jo
dec
in
mov
mov
mov
lret
fimull
mov
dec
pop
dec
cmp
cmpsb
xchg
fsub
mov
cmpb
mov
inc
ljmp
js
sub
repz
cmp
dec
xor
adc
scas
into
in
lea
push
push
xor
ret
rol
and
add
lods
in
push
iret
mov
inc
dec
or
insl
push
ja
imul
jecxz
inc
add
stos
dec
leave
sarb
push
inc
loopne
and
filds
fwait
in
xchg
mov
stos
popf
scas
sub
cmp
pop
dec
jecxz
movsb
fdivl
and
sbb
test
sti
xor
sub
sbb
ret
push
and
jmp
pop
xor
fmuls
cltd
fldcw
xor
xor
pminsw
hlt
faddl
stc
jecxz
in
xor
or
loopne
jbe
stos
xor
outsb
push
pop
les
cmp
xchg
dec
testl
xchg
add
loope
rolb
imul
pop
in
xlat
sbb
imull
mov
nop
popf
mov
inc
rorl
dec
adc
dec
jp
aam
add
adc
repnz
xor
scas
xor
ror
in
adc
or
fcomip
jmp
jmp
aam
mov
or
or
loop
mov
outsb
ss
inc
cmp
scas
imul
fwait
sbb
sbb
mov
dec
mov
icebp
xchg
push
mov
inc
and
push
jecxz
cwtl
lods
sahf
flds
shll
or
adcb
jl
or
or
rcrl
sbb
mov
push
dec
jg
mov
outsl
jae
aad
add
push
mov
xlat
inc
ficomps
and
dec
fwait
mov
pop
inc
jbe
mov
movsl
sbb
inc
jb
test
push
loopne
lcall
je
sbb
cli
sub
insl
push
decl
dec
aaa
subl
andb
pop
jns
ret
mov
mov
mov
mov
adc
loope
inc
push
push
push
and
lahf
int
sbb
mov
shlb
xchg
lods
mov
jns
push
sub
xchg
or
jge
dec
mov
je
xor
out
push
mov
js
daa
push
mov
sbb
stc
inc
inc
pushf
int3
jno
repz
rcrb
jmp
cmpsl
mov
mov
daa
jmp
negl
lahf
shrb
imulb
xor
dec
ds
in
mov
lcall
hlt
mov
or
ljmp
push
aas
mov
movsb
sti
pop
jl
nop
cmp
int3
std
imull
pop
dec
xor
dec
add
lcall
testl
mov
xchg
aam
sub
dec
inc
aas
in
sub
xor
sbb
mov
dec
dec
add
clc
ss
inc
pop
dec
lret
mov
xchg
mov
dec
ret
leave
dec
mov
inc
mov
aas
jo
loope
lds
mov
sub
mov
rcl
ret
or
push
xorb
sbb
out
sbbb
sub
ficompl
lcall
dec
faddp
mov
inc
jne
pop
add
and
ss
mov
fmul
js
cmp
sub
xchg
cli
mov
idivb
fdivp
add
sbb
scas
ss
test
insb
sbb
out
testb
and
mov
popf
and
rcl
xor
repnz
add
or
pop
push
icebp
xchg
scas
sbb
mov
dec
jmp
scas
mov
popa
add
xor
inc
mov
and
jb
cmp
in
rcrl
jno
pusha
cld
lret
lret
push
insb
pop
fiaddl
inc
add
or
push
scas
fxch
mov
lea
cmp
jns
jns
xor
loop
rcrb
call
adc
or
movsb
cmp
or
int3
cli
push
sbb
mov
jge
adc
imul
les
mov
fstp
les
dec
dec
inc
sbb
mov
mov
xchg
pop
add
cmp
add
sub
sub
int
arpl
jecxz
pop
adc
dec
mov
mov
loope
xor
cmpsb
int3
movsb
mov
addr16
mov
push
sub
ret
icebp
xor
inc
mov
sub
popf
pop
inc
or
out
pop
fadds
jmp
pop
outsb
sbb
int3
xor
call
sub
sbb
fsub
push
sub
mov
xor
lcall
std
push
int3
pop
lea
out
enter
pop
insl
dec
cmp
jmp
xor
outsl
xchg
and
jno
cmpxchg
iret
lahf
jne
hlt
adc
xchg
ja
push
gs
xor
jp
mov
mov
lret
xlat
push
test
or
arpl
in
pop
movsl
in
int3
mov
xchg
int
xor
jg
fdivrl
cmp
ljmp
out
inc
mov
and
sarb
test
and
into
into
leave
adc
inc
psrld
andl
int3
inc
insb
test
push
insb
fstps
gs
inc
dec
lret
mov
jo
loopne
pop
enter
jge
ret
ja
orl
test
mov
or
loope
lcall
pop
iret
xchg
aad
daa
dec
loop
icebp
aaa
dec
mov
cmp
inc
rorl
in
pop
insb
adc
outsl
adc
jp
adc
ret
dec
jo
mov
push
jne
push
xchg
fs
jg
jnp
jmp
ss
ret
dec
mov
and
jg
cmp
outsb
mov
cmpsl
test
cmp
dec
in
xchg
mov
popf
lock
pusha
aas
push
dec
push
sub
or
inc
push
leave
add
scas
in
in
out
xor
inc
push
cmp
and
cmp
sbb
popl
mov
pushf
ret
cmp
mov
xor
shlb
mov
aad
or
int
jae
inc
shlb
push
in
aad
jl
popf
adc
lods
hlt
xchg
cmpsl
mov
cmp
mov
or
push
ret
adc
ret
push
inc
rcl
adcl
push
je
packsswb
mov
test
out
adc
stos
mov
icebp
xor
or
inc
cmp
lcall
sahf
xor
xlat
jae
sti
imul
adc
cmp
hlt
aam
sub
dec
clc
xor
lods
outsl
lahf
pop
sbb
pop
cld
inc
sub
mov
insb
xchg
es
mov
sub
mov
mull
cmp
jp
xchg
add
stos
sbb
and
sbb
loope
arpl
push
jp
out
add
sti
or
lods
fwait
out
insl
das
ret
jbe
mov
les
xor
fcomps
mov
or
inc
dec
aas
jmp
jl
sbb
lods
or
push
pop
fldenv
loope
stos
or
mov
adc
pop
lret
mov
stos
lahf
pop
pop
repz
xchg
mov
dec
lods
test
loope
xchg
fwait
cs
jnp
aam
jge
pop
ss
push
mov
cli
pop
ja
mov
subl
das
jb
jae
xchg
lds
rorl
outsl
cmp
pusha
xor
mov
rclb
mov
xor
jmp
adc
comiss
in
rol
and
jns
loopne
out
cmp
mov
push
and
jb
ja
pusha
cmpsb
cmp
adc
mov
mov
xchg
js
xor
xchg
movsl
insl
sub
ficomps
sbb
mov
xor
sar
mov
loope
lcall
xchg
scas
lcall
mov
inc
xlat
sub
out
std
pop
fldl
inc
inc
leave
mov
or
ja
pop
mov
push
mov
or
cmp
stos
test
jg
outsb
es
inc
je
jne
mov
cmpsl
pminub
sub
cmp
fwait
add
adc
dec
push
fcmovb
js
jno
stos
repz
xchg
mov
cmc
inc
int
mov
sbb
mov
cmpsl
or
xor
fnstsw
pop
jge
jmp
cmp
scas
rorl
adc
orb
mov
and
pop
or
jp
lret
enter
or
push
push
push
out
mov
sarb
mov
data16
add
aas
int
daa
sahf
mov
sarb
cmpsl
dec
aad
lods
icebp
sub
fdivs
bound
pop
xor
imul
push
mov
mov
cltd
push
or
shrb
mov
adc
shlb
cmpsb
and
repnz
test
out
xchg
push
jmp
fstl
push
cli
pop
cmp
mov
cmpl
insb
jmp
push
les
jge
pop
stos
inc
scas
mov
pop
faddl
std
insl
les
sub
out
mov
loop
int
stos
jo
arpl
imul
pop
int
out
lea
push
push
addr16
stos
dec
stc
pop
fs
jae
adcb
jle
mov
inc
xchg
dec
loopne
mov
movsl
hlt
call
mov
repnz
or
add
pop
cli
inc
mov
enter
cli
addr16
jecxz
in
mov
push
decl
das
and
xor
ja
and
jmp
fisubrs
jne
fs
test
popa
pop
sub
hlt
cmpsb
cmp
push
hlt
lcall
lods
xor
and
enter
out
xchg
adcl
popf
xchg
fsubl
push
outsl
pop
push
xor
sbb
test
aad
pop
xlat
push
push
mov
inc
cld
outsb
or
stos
je
int3
mov
cli
mov
jne
mov
mov
and
testl
add
sbb
jnp
xorb
fcompl
jmp
in
pop
cmpsl
dec
push
lcall
push
pop
lods
lcall
mov
cmp
dec
fnstsw
cltd
fnsave
addr16
popa
mov
jmp
aad
push
in
adc
jl
mov
aam
sub
imul
xchg
dec
xchg
lea
lcall
sbb
mov
push
pop
outsl
mov
add
mov
out
fldt
ret
xor
lea
aad
int3
inc
out
jno
fwait
out
push
fldl
aad
cmp
sub
pop
mov
inc
lds
sti
add
inc
cmpsl
xor
outsb
fimull
ljmp
sbb
inc
mov
and
or
test
mov
inc
xchg
cmp
out
pop
add
fiaddl
mov
push
or
or
mov
add
cwtl
mov
call
movsl
dec
jge
std
popa
dec
push
xlat
adc
test
push
and
pop
xor
daa
jecxz
add
xchg
dec
mov
int
adc
jnp
add
setno
daa
cs
push
xor
mov
outsb
movsb
push
cli
mov
sbb
loop
pop
sbb
out
jmp
ret
data16
cs
je
xlat
fs
loopne
bound
xlat
pop
mov
popf
cmp
adc
fldt
xchg
fisttpll
loope
dec
fidivs
insl
imul
insb
mov
push
dec
loopne
fdivr
insb
push
mov
fwait
imul
inc
lret
mov
xor
addb
adc
mov
ss
in
lcall
dec
push
pusha
jge
lods
pop
dec
sub
jp
leave
fsubrl
sub
mov
inc
icebp
pusha
ljmp
shlb
mov
dec
inc
call
popa
int
cmp
imul
lea
sub
add
cmp
outsb
xor
daa
mov
dec
in
fildl
dec
push
shl
sarl
mov
or
push
mov
cmp
clc
in
and
fsub
sbb
cmp
insb
lahf
dec
xor
repz
xchg
pushf
test
xchg
xchg
popf
jl
add
lcall
sti
arpl
js
xor
testb
add
or
adc
pop
popa
inc
or
add
push
popf
inc
cmpsl
lcall
mov
and
jecxz
incl
or
pop
out
xchg
fsubrs
add
mov
fdiv
add
sahf
xchg
movsl
mov
jb
leave
ja
iret
cmp
stos
add
jnp
fs
push
pushf
mov
addr16
fiadds
pop
shl
mov
enter
jnp
movsb
sub
jmp
mov
push
xchg
movsb
inc
mov
cmpsl
data16
shll
loop
mov
add
mov
jae
test
xchg
lods
mov
cmp
gs
jb
insb
pushf
jle
test
insb
xor
arpl
fcoms
cli
fists
jnp
fmull
cmp
bound
mov
vmovhlps
or
dec
or
stos
cli
mov
loopne
add
cwtl
jns
scas
cmpsl
cld
fs
fsubrs
mov
mov
les
ljmp
daa
jo
mov
ljmp
xchg
adc
scas
or
inc
insb
jb
xor
pop
dec
out
jae
or
xchg
popa
popf
rcrb
push
jp
jno
sahf
xchg
pusha
rcr
out
scas
add
xlat
mov
mov
mov
xchg
lods
icebp
pop
or
pop
movsb
out
nop
rcr
sbb
dec
sub
xor
out
jmp
inc
addr16
fiaddl
inc
rcll
mov
insb
test
mov
jmp
jno
mov
lds
pop
push
addr16
outsb
sub
in
pop
lea
into
repz
addr16
sahf
mov
ficoms
lock
push
je
inc
rcrl
jb
mov
xchg
or
xor
popa
sub
outsl
paddw
popf
cmpl
pop
iret
xor
ret
push
sbb
ljmp
pop
out
push
sahf
jbe
clc
adc
add
add
test
dec
cmpsb
pop
dec
cmp
xchg
loopne
push
enter
mov
test
iret
aam
xlat
repz
cmpsl
inc
cmp
push
mov
lods
lret
xchg
xchg
push
sub
int3
add
xchg
pop
adc
jp
and
cli
xchg
ss
xor
call
xchg
out
mov
adc
aaa
mov
lods
cld
mov
xchg
add
xor
test
mov
cmc
popf
and
xor
add
adc
and
xor
pop
mov
int
clc
sub
fcomip
fcomps
bnd
cltd
pop
nop
inc
daa
inc
cwtl
imul
push
push
add
xchg
xchg
cmpsb
mov
imul
orb
pop
jl
push
add
loopne
jbe
cmpsl
andl
push
imul
fsts
pop
xchg
sub
cli
jae
aad
mov
mov
dec
out
dec
aam
inc
test
jmp
movsl
push
pop
flds
xchg
ljmp
in
mov
and
ljmp
aaa
adc
push
xchg
in
lods
pop
mov
rolb
inc
push
cmpsl
xor
stos
mov
mov
sbb
mov
ljmp
lea
out
jbe
sahf
pop
xchg
aaa
in
add
or
jecxz
ja
lock
arpl
mov
jmp
push
push
addb
sub
jne
mov
xor
push
mov
mov
xor
mov
fdivrs
out
clc
mov
xchg
mov
or
ss
mov
push
fisubrl
jb
lret
sbb
jb
adc
or
xchg
or
mov
sbb
sbb
ret
testb
arpl
xor
lret
fisttpl
mov
mov
pop
jne
in
adc
in
cmp
incl
fcomps
roll
ja
cli
cmp
cmpsl
push
xor
sbb
sbb
mov
jne
sub
mov
xchg
les
or
inc
adc
mov
cmc
cmpsl
sub
dec
jle
mov
jp
pop
scas
insl
xchg
adc
out
push
xor
xchg
sbb
sub
push
mov
movsl
outsb
mov
jmp
adc
mov
jb
xchg
mov
lock
sub
loop
outsb
sbb
cmp
jmp
ds
xor
push
xor
bound
lods
push
add
fidivrs
add
cmp
aas
inc
jno
notl
xor
jge
push
sbbb
pop
insl
popa
xor
mov
cmpsb
jecxz
push
push
fsubrs
mov
jg
mov
jb
call
mov
rep
fistps
dec
mov
int
inc
push
cli
jle
and
scas
adc
fistl
mov
popf
lds
mov
repnz
test
lret
mov
inc
sarl
int
inc
push
inc
ljmp
lods
push
fsubrs
sti
push
xchg
push
xchg
and
sub
or
cli
sbb
jb
push
mov
shlb
jge
cmp
adc
cs
jnp
add
push
xchg
dec
movsb
int3
mov
pop
hlt
fmuls
pusha
jl
in
stos
ja
daa
xchg
incl
js
hlt
pop
std
add
out
in
pushl
fsubs
mov
cmpb
pop
cmc
push
loop
ja
mov
push
jne
addr16
mov
ss
out
into
cbtw
lock
jmp
sbb
xor
and
mov
lret
xor
add
xchg
push
add
aas
mov
gs
mov
xchg
jae
cmp
pop
dec
pop
xchg
sub
adc
lcall
adc
mov
push
jns
mov
loope
or
adc
aad
aad
addl
xor
mov
xchg
or
mov
or
pop
into
sub
xchg
aaa
push
xor
push
rolb
in
clc
inc
fmul
mov
aam
pop
std
loopne
mov
not
cmp
in
fidivrl
subb
mov
aaa
sbb
lahf
lods
imul
dec
and
mov
push
js
push
rcrb
pop
std
ror
xor
xchg
inc
pushf
push
and
loop
cmp
and
jecxz
pop
adc
imul
cmpsl
call
ficoms
xor
in
jnp
jge
push
aam
pop
loope
loopne
cs
jae
js
fbstp
or
push
and
ret
dec
bound
xchg
sub
in
cli
stos
adc
hlt
xchg
mov
inc
add
push
fstl
xor
and
push
or
push
clc
inc
cli
xchg
pop
dec
pop
jno
jns
and
aam
stos
stc
mov
daa
add
lahf
dec
add
jb
hlt
sub
icebp
xorl
cmp
mov
data16
fsubs
int
add
mov
mov
xchg
mov
hlt
add
psllw
dec
pop
pushf
jp
lods
inc
inc
mov
cmpsb
inc
push
pop
pusha
test
sbbl
fistpl
push
dec
enter
aas
add
mov
mov
or
push
imul
daa
pop
pusha
sbb
xlat
lret
xchg
fisubs
sahf
lods
inc
outsl
xor
lods
pop
and
cmpsl
fwait
adc
fdivl
xchg
mov
add
mov
in
div
or
lret
xchg
mov
das
out
and
add
adc
imul
xchg
adc
stos
test
in
lea
jnp
inc
cmp
mov
jne
jge
jno
fsubl
sti
xor
and
outsb
mov
add
dec
fdivrs
cld
addl
scas
orb
lock
fiadds
dec
fs
lds
adc
jb
aas
mov
mov
aaa
stos
nop
shrb
fld
jbe
mov
mov
insl
js
sub
clc
dec
sbb
repnz
add
aad
ds
cltd
sub
xor
imul
jmp
cld
addr16
xor
push
shlb
stos
cmp
ds
pop
lret
inc
jno
cltd
ss
out
rorb
jge
mov
outsl
icebp
popf
dec
or
sbb
mov
dec
mov
mov
mov
popf
cmp
in
pushf
scas
nop
jg
push
out
push
mov
xor
mov
or
inc
pop
xor
adc
sbb
mov
scas
fdiv
mov
das
fisubl
xchg
iret
pop
sub
mov
dec
icebp
or
sar
xchg
xchg
or
jns
cmp
call
jno
les
movsl
sbb
lcall
mov
dec
loopne
repnz
call
fldl
xor
addb
dec
mov
call
pushl
xchg
pop
mov
insl
in
cmp
dec
mov
out
jae
lock
loopne
call
lods
es
loope
mov
sbb
pop
xor
dec
lea
xor
inc
daa
int3
mov
pop
pop
aas
xchg
adc
ss
jecxz
or
mov
add
mov
pop
dec
adc
pop
mov
mov
cmpsl
inc
pop
iret
stos
pusha
iret
and
xorl
fisubrl
xchg
and
rcll
add
mov
push
lea
cld
into
clc
arpl
loope
test
sub
push
lcall
into
xor
fcom
xchg
inc
scas
jl
ficomps
cmpsb
sbb
mov
nop
jne
mov
xchg
mov
cmp
hlt
mov
movsb
pusha
sbbl
scas
je
jl
xchg
add
pop
stc
xor
outsl
dec
cld
mov
clc
gs
mov
cmpsb
fidivrs
pop
stc
push
mov
gs
sbb
mov
stos
mov
push
ja
adcl
sbb
fnstenv
inc
ja
xor
xor
adc
adc
or
scas
jp
out
jne
je
inc
xor
cltd
sub
enter
xor
mov
sbb
pop
or
in
push
into
jne
loopne
mov
stos
lret
inc
jns
mov
and
data16
insl
fwait
les
pusha
lret
lods
inc
xor
ds
pop
or
or
mov
in
mov
es
and
cs
jge
mov
jp
inc
fs
stos
jb
jnp
mov
mov
inc
out
fildll
in
daa
push
lret
aad
xchg
sbbb
jp
int
xorb
scas
xlat
xor
loopne
inc
xchg
add
fisttpll
clc
and
jb
sub
add
aam
js
mov
pop
cmp
or
push
push
dec
lock
arpl
test
in
lcall
xchg
ds
in
adc
and
clc
dec
sub
insl
testl
shll
stc
or
les
and
sub
loope
test
cmpsl
push
jge
dec
in
xor
aaa
jae
pop
dec
mov
loope
push
outsb
test
lea
stc
mov
add
xchg
ljmp
mov
pushl
andb
dec
loop
enter
shll
sbb
stos
frstor
jmp
jbe
add
lods
and
and
fcoms
mov
mov
sub
jbe
cs
call
mov
jecxz
movsl
mov
test
push
cmp
hlt
mov
cs
mov
mov
cmc
add
div
mov
or
cmp
adc
pop
adc
pop
orb
push
push
xchg
fisttps
lahf
sbb
stos
outsl
xor
aas
pop
imul
add
popa
movsl
and
add
inc
mov
pcmpgtw
pop
and
jg
out
jbe
and
sti
and
mov
xchg
add
ds
in
test
xor
addr16
imul
or
pusha
lahf
sti
loopne
popf
inc
sbb
push
or
mov
push
push
sub
cmp
inc
stos
std
es
rep
pushf
test
addl
lea
loopne
xchg
pop
stc
dec
mov
add
fistl
mov
adcl
dec
xor
xor
jl
scas
or
pop
cwtl
mov
iret
aas
cli
rorl
mov
push
add
jne
jle
cmc
cli
mov
scas
cld
xor
test
subl
pop
sbb
in
xchg
fstps
add
je
sarl
lahf
test
test
mulb
jns
and
test
mov
xorl
xchg
inc
enter
jne
pop
pop
pushf
jmp
out
aas
inc
mov
stos
dec
push
jo
and
icebp
cmp
lea
pop
loopne
mov
jmp
int3
jne
pop
push
cld
jo
in
pop
lock
mov
jp
shr
aam
mov
hlt
push
std
fcoml
jmp
inc
out
pop
in
mov
xchg
fstpt
test
movsl
add
jge
add
jns
mov
outsb
int3
xor
fldenv
mov
and
mov
mov
pop
aaa
sti
add
jne
popf
std
pop
sbb
les
nop
movsl
push
pusha
push
es
mov
lahf
add
inc
inc
mov
aad
clc
fsts
fsub
and
mov
jp
push
adc
xor
popa
pop
enter
adc
add
ds
lock
lea
mov
aam
insb
or
scas
push
nop
sbb
xchg
jb
add
imul
mov
push
mov
ljmp
jne
lea
andb
adcb
jnp
fwait
and
and
scas
and
adc
leave
jg
jb
pop
adc
clc
xor
bound
jb
inc
mov
mov
mov
loope
push
and
push
xchg
ret
cli
xchg
shll
dec
mov
in
fnsave
xor
or
inc
in
jmp
repz
test
sbb
pop
popa
cwtl
mov
push
and
es
test
js
jecxz
std
daa
lea
insl
xor
shlb
rorl
xchg
mov
movb
test
in
loope
jmp
loopne
out
movsl
sbb
sub
fwait
mov
jp
jge
pop
mov
test
clts
cli
gs
dec
mov
and
xlat
sbb
push
xor
sub
cmp
pop
shrl
movsb
ljmp
fldl
mov
adc
bound
pusha
call
xor
mov
int3
sbb
in
cli
mov
movsb
or
js
mov
mov
mov
js
fwait
xchg
inc
leave
sti
cmp
xchg
clc
dec
sbb
lret
xchg
xor
jp
mov
pusha
sub
sub
xchg
and
mov
stos
pop
imul
mov
das
repz
hlt
cltd
sbb
push
pushf
lock
movsb
loopne
fwait
mov
pop
out
int3
dec
and
cli
pop
aad
inc
xor
scas
sbb
push
rcrb
lret
frstor
jle
mov
inc
inc
dec
cmc
mov
mov
cmp
xor
sub
push
in
fsubr
ret
cmp
mov
sub
mov
in
pop
jnp
pusha
lahf
sbb
mov
fistpl
mov
push
lods
dec
cmp
inc
pop
inc
shlb
mov
mov
cmp
sar
mov
inc
std
leave
sbbl
jp
sub
xor
ds
xorb
cmp
jge
add
daa
lds
pop
sub
test
mov
leave
cmp
sub
jl
xchg
xchg
mov
icebp
fcmovnbe
and
cli
mov
or
xor
mov
in
popf
fdivrs
clc
cmp
out
popf
cld
xchg
cmpsb
out
push
cmp
adc
and
lcall
shlb
daa
aas
out
dec
rcrl
scas
int3
fdivrp
or
std
gs
mov
out
and
jne
loope
cmp
sub
xchg
sub
push
xchg
aam
rclb
test
dec
sbb
add
adc
jo
jno
add
push
push
jbe
push
add
mov
enter
sbb
lret
pop
cmp
mov
mov
lret
fsubrl
das
sbbb
out
into
jnp
add
add
movsb
jb
sahf
aas
sbb
mov
push
jbe
and
dec
repnz
dec
cltd
jg
lods
sbb
sub
lock
cmp
xor
in
xor
push
cmp
push
hlt
mov
fidivrs
inc
dec
push
repz
mov
in
lock
dec
fwait
sahf
mov
mov
sbb
or
cmp
push
sbb
and
or
dec
sbb
mov
jge
jbe
mov
mov
push
push
sbb
scas
mov
cmp
inc
int3
cmovg
xor
pop
orl
and
jge
sbb
loop
push
xchg
or
test
inc
ljmp
iret
cmp
fsts
pop
pop
call
fwait
dec
fwait
cmp
stos
es
sbb
mov
lret
out
push
dec
jl
cmp
jo
cmpsl
sub
adc
dec
push
popa
jl
mov
and
mov
std
push
cmp
filds
jle
fisubrl
or
in
rcrb
in
fcomi
jl
sahf
jnp
pop
lods
outsb
test
push
daa
push
push
aad
mov
jg
xor
inc
inc
rcrl
fisubrl
and
sahf
add
adc
idivb
add
pop
shrl
jns
aam
mov
sbb
inc
xchg
and
sub
ret
mov
cmp
cltd
inc
mul
scas
lds
loope
fdivr
test
add
stos
int
sbb
std
xor
fwait
push
adcb
mov
push
pop
fcos
mov
pop
dec
insb
fistps
push
xor
ja
jecxz
addr16
add
bound
adc
push
loopne
sbb
jbe
pop
xor
push
mov
xor
mov
sti
lods
out
sub
mov
xchg
jle
pushl
clc
enter
inc
sbb
lds
dec
in
push
scas
mov
in
out
popa
jg
adc
mov
push
xor
repz
xorb
jb
test
xlat
repz
movzwl
dec
cmp
enter
cld
inc
test
loope
mov
rolb
jge
pop
lcall
mov
cmp
cmp
sub
pop
xor
xchg
out
and
test
jmp
mov
in
lret
jbe
sbb
xlat
sub
xlat
dec
ret
bound
mov
sahf
jns
inc
cmpsb
loope
adc
cli
xchg
mov
xlat
xorb
push
mov
inc
inc
repnz
fwait
dec
and
adc
shll
imul
stos
add
sub
dec
mov
lock
pushf
push
xchg
loopne
sarb
sahf
int3
in
push
mov
pop
xor
lahf
sbb
inc
scas
xor
in
in
movsl
lahf
push
dec
push
stc
jmp
popf
cmp
adcl
mov
lods
or
iret
sub
dec
fsubr
push
lret
scas
js
inc
jle
fsubrs
stc
sub
fs
addr16
enter
pusha
or
mov
mov
sti
and
imul
jecxz
lea
jmp
pop
enter
ret
rorb
pop
lahf
adc
or
iret
dec
cmc
dec
test
pop
mov
cmp
add
inc
aam
pop
hlt
pop
cltd
jmp
rep
mov
inc
adc
std
gs
test
stos
test
jbe
shl
xchg
push
in
mov
fwait
nop
movsb
xchg
into
xchg
es
sbb
call
in
mov
push
mov
pusha
jb
inc
imul
out
adc
out
cwtl
jns
ror
cmp
test
cmp
std
out
mov
mov
mov
ljmp
pop
insb
sub
sub
leave
push
mov
aaa
inc
loope
or
gs
shl
inc
or
cwtl
mov
cmp
xchg
and
adc
dec
stos
and
lds
push
xor
je
sbb
std
stos
jno
mov
inc
add
mov
mov
arpl
adc
fwait
mov
xchg
ljmp
pop
ficoml
pushf
rcrb
jbe
push
xor
mov
lret
push
cmc
mov
bswap
or
jo
out
fldcw
or
inc
or
pop
ret
sbb
in
sub
stos
fimuls
and
and
mov
into
mov
xor
out
mov
lods
jge
lds
xchg
loop
add
mov
adcb
xchg
or
mov
scas
aas
pop
in
loop
aam
in
rol
ss
je
fwait
or
xor
mov
jmp
movsb
popf
sbb
pop
jo
loope
js
jbe
loopne
xchg
sbb
mov
mov
dec
jns
ja
loopne
adc
xchg
inc
incb
popa
cwtl
dec
jge
pop
xor
dec
imul
or
cwtl
lods
rolb
jns
imul
ret
jne
adc
or
subb
insl
sub
xchg
loop
xor
xor
outsb
fcoms
and
rcrl
rcl
es
sub
sbb
loopne
push
dec
cld
pop
xchg
pop
orb
xchg
mov
xlat
out
icebp
sbb
xor
test
inc
pop
mov
out
lea
inc
xchg
mov
ror
rcrb
sbb
or
push
std
and
pop
out
mov
das
and
fs
adc
pop
add
push
test
std
out
mov
in
bound
xor
jae
je
xor
mov
sub
call
inc
cmp
out
cwtl
jle,pt
out
xor
xor
jg
and
movsl
icebp
mov
lock
andl
xor
popa
andb
pushf
test
shrl
and
imul
adcb
sub
push
stos
out
les
sub
je
sub
fwait
xchg
and
adc
stos
push
mov
loop
pop
ds
leave
nop
imul
insb
jp
xchg
ficoml
std
pushf
loopne,pt
mov
xor
or
outsl
movsb
cli
test
scas
out
xor
push
dec
ret
clc
fstps
sub
sbb
or
mov
pop
dec
daa
mov
ds
sub
add
lret
rclb
repz
mov
adc
into
in
jmp
in
jge
sub
mov
das
adc
arpl
add
in
inc
aaa
pushl
xor
mov
sbb
cmp
push
enter
inc
out
pop
mul
jo
lret
xor
stos
subl
jns
sbb
push
mulb
dec
and
mov
out
rcrl
loop
cs
cld
lret
add
and
out
add
sahf
pushl
pop
push
scas
jmp
jno
mov
and
push
xchg
adc
movsb
imul
scas
jge
ret
xchg
aas
adc
adc
push
outsb
jecxz
cmp
xchg
cli
pop
mov
or
cmp
pop
iret
mov
pop
pushf
mov
out
mov
in
bound
fistpll
divb
mov
jno
dec
push
loopne
sar
mov
and
fiadds
xchg
lret
mov
insb
pop
imul
js
sbb
cmpsl
mov
jl
stos
ds
stc
jle
jle
shrb
pop
pop
lret
push
data16
shl
and
mov
sub
mov
into
je
jp
lret
pushf
mov
int3
jecxz
or
jne
push
jae
sub
or
xchg
dec
fcomp
idivb
call
add
sub
inc
adc
jb
pop
jno
mov
mov
lock
cltd
clc
ret
xor
outsl
dec
push
pop
aam
data16
pop
movsl
out
sbb
mov
mov
addl
xchg
aas
repnz
cmp
pop
aam
push
lcall
mov
in
push
fists
push
filds
add
out
xor
jno
in
pop
mov
loopne
imul
adc
xchg
inc
pop
mov
mov
dec
jp
push
sbb
mov
int
aaa
clc
mov
arpl
jns,pt
jnp
ds
and
mov
or
push
xchg
mov
lods
sub
into
test
push
xchg
push
and
repz
mov
pop
je
test
mov
frstor
mov
iret
cmp
push
add
and
flds
out
push
and
cltd
inc
inc
scas
das
movsb
mov
adc
data16
out
or
divl
repz
mov
cs
jae
icebp
cltd
addr16
push
dec
fisubrl
pop
movsb
cli
sub
sar
into
mov
and
int3
cs
and
jg
jnp
add
ret
and
mov
inc
jle
xchg
cmpsb
inc
scas
lret
mov
sbb
jns
dec
sbb
pop
in
jns
scas
divl
adc
mov
js
out
aas
dec
out
sbb
mov
in
les
out
daa
jo
bound
iret
or
vmovmskps
push
jmp
mov
imul
loope
dec
sub
mov
xor
add
fbstp
jb
cmpsl
jle
jno
je
push
sarl
outsb
in
add
fdiv
cmpsb
mov
mov
es
lods
fldenv
lock
mov
test
mov
fsubl
imul
repnz
sar
test
stos
push
cli
xchg
mov
jl
mov
sub
mov
pop
mov
andb
cwtl
mov
out
mov
arpl
pop
or
fsubrl
push
adc
xlat
repz
out
mov
add
movsl
adc
in
mov
and
jae
sbb
aad
addr16
iret
movsl
xchg
push
insl
mov
jae
imul
jns
jae
pop
xor
adc
cs
mov
push
movsl
fdivrl
lods
mov
mov
repz
pop
stc
mov
cmpsl
lock
sti
fwait
sarb
push
repnz
scas
add
pop
or
cltd
and
into
fnstcw
sub
pop
notb
icebp
xlat
mov
das
or
cmp
xor
ljmp
frstor
pop
mov
and
fimull
xor
leave
cmp
inc
sbb
ds
inc
icebp
sbb
or
fs
pushf
mov
imul
mov
sbb
or
popf
pusha
jecxz
sahf
call
push
pop
cmp
xchg
mov
and
jnp
mov
scas
mov
jmp
sub
enter
mov
jo
and
dec
or
scas
les
fdivrl
mov
test
pop
test
push
xor
jge
mov
lcall
inc
arpl
roll
cmp
in
cmc
imul
hlt
insb
rorb
fldenv
jl
std
add
ljmp
lcall
fs
push
pusha
sub
out
cmpsb
ret
xchg
push
and
lock
sub
jmp
mov
jl
mov
outsl
fs
mov
dec
xchg
nop
imull
cli
out
inc
add
jbe
in
dec
mov
adc
sub
xor
sbb
dec
fmul
push
lods
fimuls
xchg
and
out
inc
or
sbbl
sti
rorb
jp
push
and
cmp
pusha
dec
into
sar
loop
and
imul
das
lds
mov
xchg
pop
shll
and
mov
imul
cli
fists
data16
lret
mov
xor
outsb
in
lods
pop
jmp
insb
push
xchg
or
scas
ret
fcoml
les
aas
jmp
mov
inc
cvttps2pi
fnstenv
inc
xchg
or
jge
pop
es
mov
jb
sbbb
jno
sbb
pop
aaa
ja
jno
repz
movsl
shll
hlt
mov
leave
xchg
add
rcl
cmp
sbb
lds
sub
lock
and
cmpsl
notb
imul
sbb
or
lea
test
sbbb
inc
insl
pop
sub
sub
mov
pop
sti
pop
mov
adc
mov
mov
xchg
in
cmpsl
lcall
cltd
dec
cmp
mov
and
jo
jg
xor
lret
andb
or
hlt
in
lret
aas
jmp
push
push
mov
cmc
jle
xor
sbb
daa
push
leave
xor
gs
sbb
int
mov
mov
add
ljmp
cmp
pusha
push
mov
loope
mov
in
cmp
fsts
xor
adc
adc
popa
push
push
mov
mov
xchg
aas
repz
dec
imul
stos
xor
jge
aas
cmp
dec
sti
into
mov
les
sub
and
flds
jge
popl
add
xchg
fsts
mulb
ret
ja
in
xor
popa
push
shlb
push
aas
in
loopne
pop
mov
mov
mov
mov
shrb
cs
loop
push
mov
ret
xor
fucom
inc
aad
cwtl
mov
mov
das
roll
hlt
clc
pop
and
jb
arpl
js
xchg
pop
in
sar
mov
call
stc
lret
jns
sahf
shll
jl
dec
adc
cltd
jp
or
pop
sbb
mov
adc
pop
jne
loopne
loope
lea
stos
lea
or
repnz
xor
fiadds
lods
inc
xchg
push
stos
scas
lahf
shr
dec
mov
add
sub
push
jmp
fadds
imul
push
mov
arpl
jbe
cli
jno
mov
mov
add
push
mov
mov
cmp
das
sub
out
stc
add
lds
rorl
mov
push
xchg
dec
dec
dec
mov
xor
outsb
fmul
fistpl
jb
out
inc
and
test
xor
sub
dec
int
test
pop
repz
aas
mov
in
mov
jnp
cld
lock
ja
and
push
or
sarl
aas
pop
js
test
pop
mov
push
repnz
fldl
mov
xor
adc
or
dec
cmc
imul
mov
imul
pop
pop
push
jbe
mov
out
in
lahf
and
adc
and
xchg
mov
mov
pop
mov
in
mov
lds
inc
xchg
cld
pop
les
into
daa
adc
stos
aas
popa
movsb
daa
cmp
stc
outsb
ljmp
aaa
aaa
xor
lds
mov
subb
pusha
nop
jle
mov
adc
fisttpll
into
cld
lcall
lret
std
and
std
call
xor
pop
cmp
repnz
lcall
jb
cmp
and
pop
leave
add
aam
inc
inc
sbb
inc
mov
jae
jecxz
inc
repz
dec
cmp
and
int3
fsubl
in
cmp
jl
outsb
xor
repnz
and
push
scas
xchg
jl
cwtl
pop
add
xchg
push
pop
pop
icebp
out
out
loope
mov
and
or
sbb
push
inc
popa
dec
dec
test
out
and
scas
sbb
adc
daa
mov
xchg
xlat
push
pushl
mov
cmc
jl
jle
in
push
rcrl
mov
mov
mov
mov
addl
outsl
mov
out
add
lcall
mov
mov
faddl
xor
sbb
mov
push
mov
pop
mov
xor
xchg
int3
mov
mov
mov
push
mov
ror
mov
enter
fucomi
or
andb
jno
lock
mov
or
push
je
adc
out
and
xor
or
jmp
fldl
lret
out
jo
mov
mov
insl
imul
test
popf
xor
sti
mov
inc
mov
jge
fistl
mov
pop
sbb
and
mov
test
in
mov
mov
call
data16
jmp
fbld
pop
arpl
sbb
repnz
sti
shrl
push
add
xor
fstpt
pop
cmp
imul
lret
out
mov
fdivrl
xor
jae
cmpsb
inc
adc
xor
in
xor
orb
mov
xchg
jo
jge
les
sbb
xchg
stc
cmc
out
fldcw
sbb
jnp
mov
popf
filds
js
rcrl
dec
lods
jp
sbb
add
sub
inc
pop
push
push
sub
out
xor
arpl
adc
add
daa
jp
jnp
sbb
fistl
push
iret
push
push
jno
xchg
mov
mov
sub
cmp
and
fisttpl
cltd
sbb
cmp
cmc
xor
fisubrl
scas
mov
adc
popa
xlat
fadd
xchg
jle
test
iret
xchg
aas
push
push
push
mov
inc
cmp
inc
aad
das
adc
ret
lcall
iret
and
iret
cmpb
xlat
jno
sbb
ss
mov
xor
ss
xchg
push
cs
popf
loopne
jb
ret
cmp
xor
mov
sub
movl
cwtl
mov
int
mov
pop
push
jle
dec
cmp
jns
push
push
cmp
dec
jno
out
mov
decb
shl
fwait
aad
add
jecxz
mov
mov
shrb
xchg
cmpsl
stos
xchg
or
cld
call
pop
cmpsl
leave
stos
pop
mov
add
xor
pop
and
sahf
aaa
stos
loopne
pop
lea
mov
in
and
in
sbb
pop
fsubr
shlb
jae
insb
stos
or
out
clc
pop
push
xchg
push
pop
and
movsl
js
mull
leave
mov
repz
into
push
push
jp
ret
push
jg
push
mov
divb
test
sbb
jnp
cmp
pop
pop
nop
aas
sti
jmp
call
imul
jae
jp
aam
out
mov
fstp
ss
rclb
mov
out
nop
inc
push
pop
mov
clc
adc
xchg
mov
outsb
sbb
xor
loope
inc
mov
xchg
jmp
lods
int
mov
mov
fsubs
pop
cmp
std
in
stos
push
mov
mov
inc
fistl
insl
mov
imul
sub
dec
sub
mov
loopne
sbb
std
in
adc
rorb
cmc
pushf
inc
mov
jle
daa
mov
sbb
pop
dec
cld
mov
adc
jne
in
push
xor
pop
mov
push
adc
gs
nop
ret
je
sbb
fdiv
std
lods
jl
pop
push
and
test
adc
sub
pusha
push
inc
mov
stc
ret
outsl
loop
pop
stos
sub
pop
pop
xor
xchg
inc
push
cli
add
and
mov
xlat
cli
pushf
sbbl
mov
jb
rol
inc
jae
scas
adc
cmp
mov
sahf
dec
nop
lcall
push
test
fdivrs
cmpl
jle
divl
jecxz
jecxz
pushf
mov
sbb
jae
push
adc
mov
repz
xlat
pushf
inc
jl
lea
push
dec
in
mov
mov
mov
xor
cmp
inc
subl
lret
mov
add
adc
stc
test
mov
mov
push
in
jp
jmp
push
pop
xchg
insb
popa
pop
push
xchg
inc
cli
in
in
shll
rorb
roll
mov
movb
out
movsl
xchg
sub
push
jmp
jecxz
xor
fisubrl
jg
xchg
lods
bswap
push
stos
fstl
mov
jbe
ret
sub
fidivl
jno
pop
push
jno
das
adc
xchg
push
jb
out
mov
sbb
xlat
ret
loope
or
sub
jl
sbb
push
int3
inc
pop
cmp
mov
inc
in
shlb
push
frstor
cltd
xor
or
push
or
mov
int3
xchg
cli
fcoms
out
out
aas
push
xchg
lret
sar
xor
int
mov
push
popf
gs
xor
jle
flds
movsl
jl
adc
icebp
sub
xor
rorl
rcrl
rorl
or
push
aas
shlb
fstl
insb
xor
out
mov
je
inc
sub
test
lret
pop
das
cli
push
inc
adc
and
dec
mov
xor
jl
imul
xor
stos
imul
xchg
mov
cmc
iret
test
movsl
lods
or
sub
inc
sub
repnz
cmc
aaa
adc
lret
in
scas
cmpsl
je
lea
mov
test
pop
jge
in
inc
adc
adc
pop
in
int3
test
test
or
xor
cs
adc
test
mov
sub
xchg
ret
push
pusha
xchg
cmp
dec
inc
push
out
clc
mov
nop
and
rcll
movsb
pop
jne
cmpsl
and
inc
cmc
sbb
inc
xchg
scas
xor
repz
aam
pushf
xor
dec
fcompl
jp
xchg
insl
movsl
in
out
nop
stos
inc
xlat
cmp
jp
mov
cmp
hlt
out
push
and
push
dec
sbb
aad
jge
push
pop
pop
mov
outsl
adc
cli
sti
es
cmpsl
sarl
inc
clc
lcall
hlt
push
xchg
xchg
cmp
pop
push
sub
fnstcw
xchg
push
jecxz
in
imulb
push
leave
dec
sub
in
adcl
adc
adc
xchg
lahf
push
ficomps
add
mov
or
inc
pop
ret
popf
mov
push
or
push
leave
ret
sbb
adc
adc
fisubrs
add
movsl
ljmp
jne
loopne
push
pop
xchg
pop
jmp
adc
jns
xlat
xchg
add
mov
int
sub
mov
ret
jno
and
test
push
addr16
ljmp
mov
jne
pop
mov
psubw
rolb
stos
xchg
imul
pop
nop
aas
fmul
aaa
sbb
mov
mov
popf
cmpsl
push
popf
jns
repnz
clc
mov
loop
jb
pop
sbb
push
or
fcomi
or
repnz
imulb
lret
xor
push
or
sbb
iret
mov
test
shl
pop
adc
aad
push
fnstsw
mov
or
inc
andb
pop
add
mov
sub
bound
data16
incl
mov
addr16
fstpl
mov
test
sbb
xchg
adc
dec
mov
inc
cmp
fnstcw
add
dec
test
xor
pop
xchg
aad
xor
inc
lret
push
or
dec
jmp
idivl
push
mov
lock
out
shlb
or
or
mov
ret
f2xm1
inc
jbe
inc
and
in
mov
fldl
popa
pop
inc
inc
add
mov
lret
mov
xlat
and
mov
sub
adc
sbb
dec
mov
cmp
icebp
gs
sub
push
push
inc
sub
push
mov
adc
mov
pop
adc
mov
insb
dec
adc
adc
std
jge
js
or
in
dec
test
xchg
jecxz
arpl
lock
mov
add
stos
mov
cwtl
lcall
cld
mov
insl
int3
cwtl
dec
jmp
test
pop
inc
notb
cs
or
jp
mov
adc
sub
cmp
into
test
movsl
mov
into
enter
pop
cmp
imul
mov
imul
xchg
sub
mov
push
outsb
mov
in
dec
pop
rcl
popa
jne
or
out
ret
jge
or
sbb
mov
mov
xor
mov
add
js
xchg
imul
outsl
and
pop
mov
lret
cli
or
pop
call
mov
cwtl
int3
or
mov
jne
inc
xor
out
dec
cmp
pop
leave
pop
aaa
mov
lock
push
popa
sbbb
push
add
rep
mov
scas
aas
pushf
xor
cmc
in
cmp
ds
out
jno
outsl
test
cs
sub
add
inc
lock
fiadds
add
inc
fnstenv
sbb
pop
cmpsb
movsb
cltd
mov
add
mov
sbb
lea
pop
mov
shlb
xor
je
lods
lods
jno
adc
mov
aaa
into
cmc
int3
hlt
xor
movsb
test
jo
data16
cmc
mov
scas
xchg
xchg
popf
push
pushf
inc
in
sub
jl
ss
shll
les
mov
mov
nop
mov
mov
ret
dec
scas
adc
and
fdivr
js
xlat
pop
mov
dec
cli
add
xor
cs
insl
cmpsb
mov
sti
jg
jl
sbb
xchg
xor
xchg
rcrl
lock
js
push
out
dec
scas
es
iret
sbb
ret
neg
js
add
push
pushf
fnstenv
jge
sub
sbb
loope
fmull
stos
dec
mov
push
pop
call
jecxz
dec
adc
fdivrs
fdivrl
sub
kmovw
and
gs
fsubrs
negb
and
xchg
add
jno
les
gs
ja
fwait
push
cmpsl
push
pop
lea
mov
mov
popf
cmp
xor
mov
adcl
ss
mov
add
das
inc
rol
xchg
push
jle
add
inc
pop
dec
xchg
ret
std
aaa
adc
js
lcall
mov
daa
stc
mov
cltd
or
mov
jne
enter
jns
pop
cmp
lods
sahf
jns
orl
cmc
mov
pop
xlat
jo
inc
outsb
add
sub
call
insb
cmp
mov
ret
fsubp
fiaddl
ljmp
and
fcomp
cltd
inc
js
fnsave
jle
cmp
mov
dec
insb
je
xchg
jge
hlt
xchg
adc
xor
fdivl
adc
jne
inc
addb
mov
imul
xor
push
jle
inc
in
pop
out
int3
jae
test
push
imul
lcall
fstps
add
ret
imul
xor
adc
sarb
pop
and
pop
push
movsl
outsb
pop
and
movsl
test
dec
sub
cmpsb
mov
pop
mov
inc
mov
pushf
cmpsl
pop
and
fld
mov
test
dec
cmp
aam
ret
call
cltd
clc
push
std
ds
in
mov
es
adc
dec
scas
or
inc
mov
cli
outsb
mov
adc
stos
pop
add
push
rorb
in
data16
dec
or
inc
dec
mov
cld
loop
mov
sbb
add
out
adc
mov
push
cli
mov
pop
loop
fldt
sbb
push
and
push
aam
add
cmp
dec
jp
mov
ret
stos
sti
inc
mov
fistps
jg
cwtl
push
mov
ds
enter
xchg
das
sbb
xor
xor
or
cs
shll
inc
in
mov
cmp
cmp
je
insl
insl
aam
pop
cltd
add
mov
lret
xor
fs
subb
xchg
cmpb
test
movsb
push
jno
inc
test
sahf
sub
fisttps
or
repnz
push
jo
popf
push
inc
les
jns
pop
sbb
cs
push
mov
sti
push
push
imul
xchg
outsb
lods
out
mov
xchg
xchg
aam
pop
and
out
pop
sbbb
or
imul
inc
sbb
rcll
dec
imull
adc
mov
jbe
testb
sub
mov
and
pop
popf
or
aaa
mov
fldl
dec
popa
pop
imul
orb
in
mov
inc
jb
mov
popf
cmc
std
std
pop
mov
sub
cmp
out
mov
mov
insb
pop
daa
sub
sbb
push
mov
xor
imul
outsb
mov
scas
out
fisttps
mov
cmc
lock
xor
negb
adc
data16
xchg
aas
sahf
cmp
fidivl
lret
clc
cmp
fcomps
scas
xchg
das
ret
mov
or
ss
jne
pop
inc
loope
fldl
pop
add
pop
test
mov
push
mov
jns
enter
xor
nop
inc
sub
inc
sbb
repz
in
stos
push
push
or
pop
jnp
or
ror
push
cmc
clc
inc
jmp
mov
jne
fisttps
push
mov
cmpb
push
cli
enter
cmp
rorl
inc
stos
push
in
mov
cs
mov
inc
cmpsl
jp
mov
test
orl
sbb
ja
inc
mov
mov
mov
stos
mov
xor
stc
add
or
mov
push
pop
pop
or
cmpsb
jnp
daa
int3
sbb
xchg
and
fistpl
sbb
out
push
mov
bound
test
pusha
pop
xchg
pop
subl
js
fadd
rcl
mov
imul
inc
int
mov
sarl
push
cs
mov
arpl
data16
jg
bound
cs
jno
sub
insb
jo
mov
mov
mov
cmp
leave
sub
aad
mov
sub
and
repz
jp
pop
aaa
sarl
sarb
popf
sarb
ja
leave
pushf
push
mov
icebp
fisttps
pop
jp
andl
movsb
loop
sbb
sahf
ror
mov
scas
mov
push
lds
adc
aaa
jno
jo
or
aad
vandnps
push
jnp
pop
mov
xchg
subl
cmp
shll
inc
inc
xchg
inc
push
and
aaa
js
xchg
or
push
je
xor
pop
jge
cwtl
pop
outsl
roll
aad
push
xchg
jns
mov
pop
ret
pop
mov
orb
mov
in
inc
pop
addr16
rorb
mov
add
jge
inc
sarb
fldt
adc
in
or
sbb
pop
xchg
dec
mov
int3
mov
int
inc
jno
jl
cli
cli
dec
addb
dec
ljmp
xchg
dec
inc
mov
push
inc
into
mov
subb
hlt
adc
jge
inc
cs
fxch
jnp
std
daa
aad
stos
shrl
push
add
mov
lods
jbe
xor
repnz
inc
jns
scas
inc
outsl
aam
mov
les
inc
add
test
scas
pop
inc
adc
std
mov
testb
inc
xchg
xor
sub
add
push
sub
clc
sbbb
add
jle
adc
testb
add
mov
jns
je
dec
xor
rcrb
imul
xor
imul
jge
sar
cwtl
jno
enter
mov
jno
adc
adc
lahf
out
jno
inc
push
es
jns
aaa
dec
ja
jnp
push
lds
loope
jg
out
push
push
sub
mov
dec
xor
and
cmp
xchg
cmp
hlt
adc
cld
fwait
mov
push
aaa
sbb
in
jne
add
outsb
ja
lods
fs
push
clc
es
mov
std
nop
mov
daa
lods
loopne
adc
xor
pop
scas
xor
mov
orl
sub
mov
and
fnstenv
or
xchg
fbstp
out
es
lcall
aad
or
imul
inc
aad
jnp
loop
lret
fstpl
or
jge
adc
jo
inc
mov
cmpsl
movsl
xchg
mov
add
lds
pop
jo
loope
bound
test
lea
jne
arpl
push
xor
and
call
filds
outsl
icebp
rcll
push
movb
in
stc
push
push
add
xchg
push
dec
and
cmp
inc
es
inc
outsl
sub
test
xor
int
sbbb
imul
in
push
dec
enter
sub
pop
mov
adc
nop
cmp
sarb
add
outsb
popf
and
shl
out
sub
ret
inc
ret
inc
cwtl
push
push
sbb
add
pop
xchg
push
xor
test
adcl
aam
pusha
aad
in
enter
xor
movsl
mov
xchg
call
mov
or
adc
cli
fisttpll
stos
mov
lret
xchg
lds
mov
jne
xchg
xor
jmp
repnz
into
cmp
adc
inc
ja
dec
sbb
das
cmp
jbe
and
xlat
clc
ficomps
xchg
pop
inc
notb
js
scas
ret
adc
and
sbb
outsb
xchg
das
das
lock
es
stc
mov
push
lock
mov
gs
and
mov
add
fdivl
outsl
int3
pop
xchg
cld
cmp
hlt
pop
jle
push
push
jno
xchg
mov
fdivr
mov
mov
sub
mov
enter
mov
push
in
mov
ljmp
fidivl
mov
loop
xor
sbb
cmp
outsl
mov
ret
lcall
lods
mov
or
push
and
xchg
fidivl
sub
jne
mov
movl
fildll
xor
gs
or
mov
fists
flds
repnz
cmc
add
rcrb
sub
cwtl
mov
cmc
push
sbb
and
or
push
out
cwtl
enter
cmp
xchg
sub
fwait
inc
das
aaa
inc
jmp
iret
inc
pop
push
and
add
ljmp
jge
pusha
les
or
ret
out
sub
repnz
sahf
jg
mov
neg
in
fmuls
mov
call
sbb
jge
pop
loopne
jb
fisttpl
inc
enter
push
movsl
ja
push
popl
sbb
data16
mov
daa
stc
shl
sub
sub
cmp
in
xchg
mov
fs
int
cmc
std
in
sub
fidivs
iret
push
sbb
insb
dec
scas
aas
rorb
mov
loop
mov
mov
sub
clc
xor
insb
mov
fcomps
loopne
mov
sbb
mov
push
lock
xor
adc
pop
dec
pop
cmp
faddl
xor
or
lods
aam
push
out
jg
insb
mov
ucomiss
xchg
pop
xor
pop
mov
mov
lods
mov
fbld
mov
mov
pushf
adc
jno
pop
lret
leave
stos
or
leave
cli
inc
pop
mov
test
xor
xchg
cmp
jl
adc
call
cmp
xor
dec
add
sub
into
push
mov
push
cmpsl
adc
jno
aas
jbe
dec
xchg
cmp
sbb
mov
nop
cmp
push
xor
testb
cwtl
ja
xchg
stos
mov
ds
xchg
mov
sahf
test
jmp
mov
xchg
dec
mov
cmpsl
xchg
cld
js
jge
ret
int3
jns
test
jno
cmpsb
xor
dec
repz
mov
ret
sub
mov
jbe,pt
push
loop
sub
fwait
xchg
add
pop
jmp
test
shlb
fistpl
xor
jb
add
mov
lret
roll
daa
in
xor
jno
imul
jl
not
mov
mov
push
call
jb
cmp
mov
sbbb
faddp
dec
fsubrs
test
mov
jne
or
mov
add
jge
in
loopne
insb
ljmp
clc
inc
clc
mov
pusha
loop
or
sub
push
xchg
fmuls
mov
add
in
cmpsl
ja
int3
es
out
xor
fldcw
cmp
bound
adcb
xchg
jmp
xor
pop
mov
sbb
pop
getsec
fs
fmuls
leave
cmp
adc
pop
xor
daa
cmp
sub
fadds
mov
push
inc
movsb
ds
jge
sub
xorb
cld
xchg
pusha
fsubrl
lcall
call
mov
inc
sub
adc
mov
jne
in
in
inc
ficoms
test
aas
jbe
out
in
das
pop
bound
pop
xor
mov
roll
push
shrb
hlt
inc
push
insb
popf
pop
aaa
imull
add
or
movsl
add
inc
cmpl
das
pop
and
test
cmp
mov
je
data16
xchg
pushf
out
fnstcw
arpl
rcrb
loope
aaa
mov
test
push
mov
outsl
pop
or
out
insl
les
pop
jmp
or
stos
xchg
or
scas
into
call
sbb
adc
inc
mov
adc
jb
jmp
iret
and
or
mov
sub
adc
cmp
aad
mov
test
jmp
add
push
out
loope
mov
rcr
or
xor
ds
push
outsb
mov
lcall
out
cld
pop
mov
mov
mov
push
adc
mov
sub
xchg
mov
sahf
push
mov
mov
cmp
mov
out
outsb
test
loopne
sub
xchg
sub
je
mov
gs
and
adc
cs
jne
dec
mov
push
and
repz
icebp
push
mov
andb
push
loopne
aam
test
pop
outsb
sbb
scas
push
sub
arpl
inc
icebp
mov
inc
lcall
adc
pop
in
xchg
jp
jns
scas
scas
push
sub
dec
lcall
je
jg
lret
cmp
xor
call
scas
jl
cwtl
push
mov
fisubs
sbb
and
sbb
scas
jge
je
add
xor
sbb
std
push
xchg
fidivs
xor
jb
sbb
popa
data16
daa
outsl
sti
aas
call
xor
scas
inc
pop
test
push
xorb
jl
in
pusha
sub
cwtl
mov
ljmp
cs
in
sarl
jmp
lret
and
out
pop
push
mov
mov
xchg
inc
mov
scas
out
pusha
adc
mov
ret
repz
push
adc
adc
xchg
pop
xchg
pop
ljmp
inc
cmp
or
les
sbb
test
aas
inc
xchg
mov
dec
sub
pop
rcrb
sbb
fisubl
fisttpll
mov
add
call
mov
arpl
iret
jne
add
lcall
mov
sub
movsb
xchg
jns
jns
mov
leave
inc
xchg
sub
daa
call
sbb
aas
jnp
mov
push
daa
lahf
adc
cli
hlt
mov
dec
adc
mov
call
mov
and
in
sti
dec
or
das
or
aaa
pop
fs
pop
xlat
scas
mov
sub
nop
add
mov
push
push
das
daa
and
sbb
fildl
imull
cmpsb
push
sbb
clc
aaa
hlt
mov
icebp
pop
mov
lods
repz
in
xor
gs
lock
ret
or
mov
push
nop
popa
cmp
adc
out
lret
popa
sub
dec
jge
push
jp
jp
mov
mov
jge
jle
sbb
add
sti
imul
jmp
inc
lods
cwtl
call
cmpb
jmp
jno
inc
dec
or
mov
xchg
sub
jp
lds
ds
pop
dec
js
dec
add
jp
rcr
pop
xchg
outsl
dec
dec
aaa
mov
aas
ja
dec
call
xchg
les
repz
sti
incb
mov
je
cmpb
push
or
sbb
add
out
test
mov
and
dec
hlt
or
jno
push
andb
mov
loope
scas
loop
jmp
jecxz
xchg
daa
ds
push
mov
out
rcrb
xlat
addb
fimuls
fldenv
pop
xor
imul
loop
push
mov
sub
in
dec
adcl
ret
inc
xchg
mov
mov
fdivr
int3
mov
xchg
ss
mov
push
mov
mov
ret
or
shlb
int
xor
lds
in
fwait
xor
inc
loop
push
lret
cmp
xchg
sbb
iret
fbld
inc
mov
inc
pop
xchg
ds
jnp
aad
ja
fcompl
dec
mov
rorb
mov
sbb
rorl
pop
in
dec
pop
mov
mov
pop
bound
mov
pop
pop
addr16
nop
add
xchg
sub
or
in
out
xchg
and
lock
push
cmc
lea
dec
les
push
jo
jmp
or
adc
or
lcall
imul
int
or
idiv
mov
shlb
mov
sbb
outsl
mov
cli
mov
mov
js
cmpsl
sbb
loope
cmp
xor
adc
stos
ficompl
rorl
dec
cmp
lds
cmp
cmp
dec
gs
pop
and
or
pop
mov
mov
leave
repz
jmp
push
mov
or
cmp
xchg
push
adc
xchg
adc
fildl
icebp
in
jno
repnz
push
adcl
fsubs
dec
pop
movsb
mov
insl
addr16
xor
sub
pop
push
sti
ljmp
movsb
push
mov
faddl
imul
add
leave
stos
js
insl
mov
lock
adc
iret
sub
lret
sub
add
dec
push
push
add
enter
mov
xor
pop
scas
jge
mov
xchg
xor
xor
adc
lock
pop
sub
add
xor
rcl
mov
nop
jo
jl
mov
mov
repnz
aas
adc
pop
xchg
cwtl
dec
ret
cld
pushf
negb
sbb
jbe
xchg
jb
push
loopne
dec
sbb
data16
test
push
push
repnz
sub
imul
dec
xchg
jmp
fidivrl
dec
and
mov
fldenv
sbb
das
fmul
call
jbe
xlat
dec
push
sub
mov
and
xor
decb
xchg
inc
add
in
fidivs
mov
rcl
arpl
imul
pop
mov
sbb
lret
pop
mov
loopne
mov
cld
jp
pop
pusha
dec
adc
cmp
mov
dec
sar
jmp
and
sbb
shl
cli
outsl
add
and
scas
mov
xor
es
mov
shll
gs
loopne
int
aam
mov
xor
add
imul
scas
mov
inc
adc
or
insl
xor
dec
xor
mov
and
inc
sbb
sub
aas
dec
fisubrl
fidivs
hlt
sub
jg
shr
daa
pop
push
xchg
imul
pop
or
out
xchg
jmp
cltd
mov
lods
mov
hlt
push
aad
push
mov
push
inc
sbb
movd
xor
mov
mov
add
xor
pop
shr
ja
icebp
mov
add
fcomip
cli
mov
add
pop
sbb
dec
jecxz
pop
and
jmp
gs
scas
dec
sbb
ret
pop
jo
fs
jo
inc
fstpt
push
stc
lods
and
scas
cmpsb
ja
fistpl
inc
enter
xchg
dec
sub
pop
cmp
push
mov
mov
leave
dec
lock
sbb
insb
push
push
insl
arpl
test
jle
ret
out
cwtl
cmpb
faddp
into
mov
cmpl
addps
out
out
mov
mov
cmpl
push
cmpb
mov
jo
imul
jg
push
inc
xchg
mov
push
mov
pushf
inc
in
inc
scas
adc
and
fistps
dec
push
push
push
pop
lods
leave
fwait
stos
fdiv
sub
out
outsb
add
fs
jns
repnz
cmp
adc
xor
dec
les
jae
clc
and
lods
ficoml
cli
lods
jbe
jns
mov
jne
ss
pop
out
cwtl
fs
and
cmpl
xor
cltd
xchg
xchg
out
xchg
sbbl
cwtl
test
push
push
xor
sub
dec
add
lret
outsb
xchg
jmp
or
lods
ljmp
sbb
jo
decl
pop
pmaxub
stos
shrb
iret
mov
xchg
shr
and
sbb
dec
pop
jl
lret
push
mov
sbb
pop
inc
pop
xor
les
lods
ret
rcr
mov
cltd
xor
adc
jbe
out
sub
push
push
fucomp
dec
sar
pop
mov
xchg
mov
lahf
sti
das
scas
aas
mov
pop
int3
sbb
xchg
lock
stos
fdivl
or
lea
sbb
xchg
inc
rcr
push
xor
or
fidivl
movsb
mov
cmpsl
imul
mov
xlat
jl
pop
adc
ss
hlt
push
test
roll
into
jns
call
imul
sub
pop
add
ss
inc
lret
pusha
lock
and
mov
cmp
loop
adc
hlt
push
add
adc
inc
mov
lret
insb
or
out
xor
and
inc
sahf
in
xchg
outsb
repz
leave
fnstcw
fidivrl
dec
pop
pop
pop
mov
pop
add
cld
pop
dec
and
jo
sub
ret
xchg
pushf
push
sbb
test
mov
lds
popf
mov
jbe
mov
addl
jno
jne
or
pop
lcall
fisttpl
movsb
push
inc
sub
mov
fdivp
stos
repnz
and
cmp
pop
and
pop
lret
mov
push
sbb
cmpb
xchg
dec
xor
mov
ss
shrb
orl
fidivrl
jbe
sbb
xchg
dec
lret
or
lods
jo
sub
scas
fwait
cmp
push
mov
lea
cmp
leave
and
jbe
xchg
aad
dec
cwtl
sub
dec
inc
scas
xor
adc
loop
iret
ss
jno
dec
mov
mov
jmp
repz
aas
xchg
rol
in
push
incl
dec
sbb
xor
dec
sub
test
mov
add
dec
leave
jmp
xchg
into
xchg
aas
sysret
jg
popa
nop
push
mov
jmp
ds
loopne
fisubrs
data16
out
inc
faddp
jge
jmp
fs
pop
ljmp
push
int3
stos
adc
pop
sub
or
insl
and
andb
or
imul
mov
pop
rcrl
add
aam
add
xchg
test
mov
push
shr
je
ljmp
scas
cmp
xchg
xorb
in
lret
or
push
in
shll
mov
xchg
xchg
andb
adc
inc
push
pop
stos
rolb
shll
rorl
jg
pop
push
cmp
std
adc
xchg
aaa
out
dec
pause
orb
jle
das
cmp
sbb
jecxz
iret
pop
adc
ss
add
mov
mov
out
aas
data16
or
and
aad
mov
sarl
in
sub
leave
stc
mov
push
sub
ja
pop
xchg
push
sbb
pop
fcmovnu
lods
movsb
push
jl
ljmp
mov
pop
add
jb
ljmp
loop
or
mov
mov
mov
ljmp
jns
xchg
das
xchg
inc
test
mov
loope
add
jns
loope
xor
loopne
std
jmp
shufps
bound
test
mov
nop
mov
ficompl
bound
lret
jo
movsb
out
mov
push
xchg
in
sbb
mov
mov
jns
stos
stos
or
cmc
adc
rolb
cld
jg
pushl
daa
icebp
jl
add
inc
fistps
lcall
ror
test
fidivs
xorb
adc
lods
adc
cmp
rolb
mov
insb
loop
xchg
ja
xchg
mov
or
add
mov
lock
and
dec
inc
imul
add
scas
dec
js
in
mov
pop
arpl
shll
and
nop
sbb
lods
xchg
inc
pop
aas
sahf
rol
rcrb
xchg
shrb
fisubs
mov
pop
cmc
roll
lahf
gs
pop
inc
add
frstor
les
outsl
jae
or
test
xor
mov
ret
lock
lret
push
stos
mov
rorl
jg
xchg
js
push
add
addb
inc
mov
xor
les
hlt
mov
leave
imulb
sbb
pop
adc
xor
and
xchg
sub
pop
fidivs
insb
push
popf
clc
ja
cmpsl
sbb
mov
and
add
hlt
fldcw
sub
les
pop
in
in
cmp
inc
inc
mov
insb
push
movsl
cmpl
hlt
fmull
je
lods
sub
jg
mov
movsb
dec
cmc
and
ror
xor
std
fstl
cmc
pop
aas
push
mov
xor
in
into
sbb
fcmovne
je
int3
pop
imull
dec
ret
ficoml
jo
mov
cmpsl
inc
sub
ja
adc
out
push
mov
add
xchg
sbb
in
ret
in
aaa
xor
mov
lods
pop
push
dec
jmp
leave
inc
lea
popf
or
gs
js
dec
dec
ficompl
jp,pt
movsb
push
scas
lods
out
rcrb
testl
push
push
out
in
xchg
lds
sub
dec
test
incb
shlb
dec
or
mov
call
imul
mov
pop
ret
pop
mov
fsubr
fcmovnb
add
pop
sahf
aad
fs
and
testl
mov
jle
lods
and
leave
cld
jmp
out
cld
sbb
sub
repnz
mov
pop
scas
pop
fldenv
or
mov
pop
stos
and
mov
xchg
and
lock
repnz
sarb
mov
sahf
fs
push
pushl
stos
and
insb
xor
inc
xor
push
sub
cli
movsb
xor
aas
dec
test
sub
movsb
cmp
jl
or
push
sti
sti
adc
cs
movb
and
sub
jmp
pop
pusha
stos
sub
or
cmp
bound
jmp
mov
sbb
push
insl
lock
mov
lret
mov
pop
push
outsb
add
pusha
cli
into
shrl
xchg
inc
jns
std
insl
test
adc
test
sbb
mov
mov
aam
inc
clc
cmpsl
cmpsl
add
fwait
add
stc
fisttpll
std
arpl
pop
mov
pop
pop
ljmp
ja
or
inc
mov
and
pop
call
push
adc
push
xor
fsubl
push
cmpsb
xchg
ja
push
mov
out
push
push
cmp
sti
adc
sti
pop
adc
mov
repz
dec
nop
fmull
jp
push
pop
push
out
inc
pop
js
shll
loop
mov
adc
stc
cmp
aam
add
mov
enter
push
jp
fildl
repz
imul
mov
sub
mov
push
ljmp
inc
or
dec
fs
mov
clc
mov
xor
jge
lds
pusha
cmp
cs
xor
stc
xorb
lock
push
push
sub
dec
xlat
mov
cmp
insl
inc
push
or
sarb
add
jmp
lret
fisttpl
fcmovu
mov
dec
test
repnz
add
jmp
cs
inc
hlt
inc
lret
jg
fisttpll
mov
push
jbe
test
add
data16
adc
xchg
repz
fildl
mov
or
pop
roll
cs
xor
sar
mov
or
arpl
les
adc
fsubr
cmp
sti
or
inc
jns
fsubl
cmp
sub
inc
lea
and
adc
fnstenv
es
repz
push
mov
mov
fwait
popf
mov
pop
mov
push
clc
int3
cmp
sbb
push
inc
aam
or
faddl
sbb
lock
aas
stos
xchg
fwait
dec
jae
inc
lods
out
xor
out
insl
cmp
jle
arpl
jbe
gs
repz
cmpsb
out
xchg
and
pushf
pop
cmp
insl
mov
addr16
imul
insb
push
cwtl
mov
incb
jmp
ret
cltd
jnp
imul
jmp
push
aas
data16
imul
adc
push
repnz
test
in
pop
push
mov
andb
call
repz
xlat
or
dec
daa
pop
xorl
repnz
cld
in
cmp
pop
addr16
mov
fcmovne
mov
push
ljmp
push
ffreep
jmp
mov
jecxz
adc
pusha
or
popa
mov
sahf
cmp
mov
movl
fmuls
out
shr
push
and
add
mov
mov
movsb
sbb
es
push
cmc
xchg
movsl
push
sarb
shll
fcomps
push
mov
aad
imul
fstl
or
sti
mov
fdivl
xchg
lods
mov
mov
pop
in
in
inc
mov
push
dec
mov
lahf
lcall
daa
imul
jno
jge
xor
or
cmp
hlt
jns
add
inc
jmp
mov
add
jl
cmp
lahf
sbb
mov
sbb
dec
cmpl
mov
mov
xchg
push
dec
scas
nop
and
test
and
jp
mov
adc
cwtl
clc
lretw
adc
mov
or
pusha
jmp
and
shrl
adc
jnp
scas
outsb
rcl
sbb
sub
and
sbb
mov
add
jbe
pop
pop
enter
add
sti
ds
insl
mov
mov
cs
mov
loope
scas
bound
fistl
cmpsb
inc
jo
cs
roll
mov
or
mov
test
test
in
ljmp
cs
dec
mov
loop
xor
stc
and
jecxz
ret
scas
fmull
sub
mov
cld
dec
mov
fdivrl
xchg
cmp
inc
sbb
or
xor
cmp
or
jmp
push
mov
subl
scas
jo
out
jne
or
repz
fs
mov
enter
mov
movsl
add
pop
lods
insb
mov
sbb
lods
mov
in
imull
push
repz
adc
les
incl
testl
movsl
test
lea
mov
mov
popa
or
add
mov
mov
dec
pop
xchg
sub
push
push
int
cmpsb
ret
or
inc
pop
inc
pop
rcll
jnp
mov
lret
sub
jl
inc
bound
sub
cmp
daa
xor
push
fidivs
xor
mov
jns
hlt
lcall
or
repnz
lcall
mov
adc
neg
cmp
mov
test
cmp
subl
mov
and
push
and
dec
int
rcll
cmpsl
push
orl
addb
cmp
stos
mov
jge
jb
and
lret
clc
scas
adc
leave
fbstp
pop
insl
mov
xor
mov
lods
push
ljmp
xchg
or
subb
andl
cmp
int3
cmp
inc
and
loopne
jno
sbb
movsl
cmpsb
or
adc
add
mov
lock
movsb
inc
insb
je
addb
in
inc
mov
imul
scas
lods
in
sbb
pop
pushf
sub
pop
les
mov
xchg
sub
push
in
js
movsl
mov
icebp
sub
adc
mov
pushf
xor
icebp
jecxz
mov
add
je
mov
imul
test
sub
pop
out
cltd
lret
mov
or
rcrb
loopne
ja
scas
jmp
add
adc
es
cmpb
test
ficoms
inc
push
fdivrl
fadds
add
jmp
xchg
sub
mov
outsb
cs
repz
or
dec
xor
cmpsl
mov
add
lahf
insl
mov
pop
out
in
sub
addr16
ror
jns
push
mov
sbb
dec
iret
xchg
or
mov
aam
sub
and
mov
xchg
sub
jmp
and
lret
jecxz
jns
mov
cld
ficoms
mov
sti
mov
xchg
sbb
rolb
jo
jmp
gs
bound
cmp
xor
pop
mov
mov
cmp
cmpsl
sarl
mov
sbb
dec
mov
cmpsb
mov
loop
mov
out
push
adc
mov
mov
mov
cli
or
dec
and
orl
pop
sbbl
daa
sbb
out
lahf
xor
arpl
mov
jl
sbb
js
xor
add
add
inc
mov
loope
ss
adc
jae
leave
in
or
je
enter
leave
sub
add
pop
imul
insl
or
lds
mov
cmpl
jbe
cwtl
push
mov
test
adc
fsub
jo
leave
out
in
cmc
pusha
lret
mov
pop
xor
pop
leave
lods
jo
xor
xor
add
icebp
xchg
add
jo
lods
pusha
dec
or
sbb
call
fucomi
push
dec
ret
mov
and
scas
mov
clc
dec
shlb
das
mov
jl
cld
push
movsl
mov
or
ss
into
push
rcrl
std
clc
sti
outsl
jno
mov
fmuls
or
or
and
and
sti
pop
and
mov
loop
jb
cmpxchg
in
lret
adc
dec
pop
xchg
das
ret
cmp
jle
ficomps
jmp
jb
sub
sbb
jle
clc
jbe
xchg
or
jg
and
pop
outsb
xlat
mov
mov
ljmp
stc
mov
icebp
jbe
in
xor
lea
sar
push
popa
jae
ljmp
sarl
ficoms
xlat
sub
stos
xor
xchg
in
nop
mov
cld
ljmp
sub
xor
mov
cmp
sub
loop
adc
cs
bound
stos
imulb
add
sub
add
adc
mov
lds
push
mov
push
mov
loope
mov
xchg
rolb
xchg
jnp
dec
adc
inc
js
jg
cmp
insb
add
aam
and
iret
dec
and
dec
xchg
mov
fistps
inc
xchg
cmp
adc
insl
pop
mov
insb
sarb
rorl
lcall
mov
test
or
ja
mov
in
xor
add
testl
mov
nop
cmpsl
or
xor
push
mov
icebp
std
adc
out
aam
bnd
cmp
jnp
lods
in
clc
and
mov
inc
push
cmp
lea
iret
push
outsb
mov
jl
jle
xor
cmpb
fadds
out
scas
dec
test
shl
rep
mov
push
rep
aas
insb
inc
push
imul
xchg
cmp
stc
jbe
nop
nop
test
push
jecxz
and
stos
dec
sbb
push
xlat
shr
cmpsl
in
jg
pop
loope
mov
add
cmp
cltd
rcr
adc
adc
dec
sub
int3
jmp
sub
fisttpll
out
rorb
popf
xor
xchg
dec
xorb
cld
insl
add
ljmp
fsubl
movsb
xchg
or
pop
push
loope
pop
cwtl
inc
inc
adc
jmp
in
es
clc
and
ja
or
ret
inc
popa
lret
jmp
xchg
push
cmp
dec
jae
and
adc
adc
jmp
adcl
js
cmp
test
ljmp
fwait
mov
pop
jb
xchg
lea
cltd
pop
pop
popa
jae
loop
pop
or
in
aam
jl
shll
movb
fs
daa
ds
sbb
push
outsl
mov
filds
sbb
mov
inc
es
pushf
jns
fsub
addr16
jecxz
mov
sub
xor
imul
lock
outsb
insb
mov
add
repnz
loope
lods
fldl
xor
or
mov
call
lods
mov
jno
stos
imul
pop
ret
lods
lcall
or
xor
adc
mov
cmp
push
mov
xchg
mov
test
loop
loop
dec
movsb
cmp
test
sub
loope
mov
xchg
sysenter
pop
fdivl
bound
in
lods
es
mov
pop
adc
cltd
jns
sub
fcmovb
cwtl
stos
fcmovnbe
add
cmp
fsts
aas
sub
fisubs
xor
into
loopne
jo
sub
daa
fisttpl
xchg
cli
and
aad
inc
inc
ret
imul
stos
add
push
out
dec
in
sub
xchg
mov
sub
push
mov
mov
repnz
lret
mov
xor
sbb
push
int3
iret
nop
addr16
push
movsl
js
sahf
sbb
sub
jae
sub
inc
das
paddw
jbe
jo
mov
dec
xchg
addb
loopne
dec
and
push
cmp
sbb
ss
jbe
and
pop
mov
sbb
dec
insl
jle
aad
mov
fdivrs
jge
sbb
and
rolb
xor
and
test
or
inc
sub
mov
xor
stos
aam
sbb
fwait
adc
scas
xchg
hlt
add
dec
jecxz
xor
sbb
mov
lret
pop
mov
jno
xor
cltd
scas
adc
mov
test
pop
fcmovnu
pop
jo
and
cld
aam
ficompl
cs
add
pushf
int3
fsubl
xchg
out
fistl
sub
inc
sbb
lahf
test
fstpt
leave
cmp
fstl
mov
push
nop
dec
scas
mov
into
and
pop
xchg
adc
inc
ffreep
jmp
and
dec
rorb
sub
loopne
pushf
add
out
repz
fcmovu
fcmovnb
fnstcw
xorb
std
test
adc
or
xchg
test
sbb
movsl
lahf
cmpsl
mov
lret
lcall
aaa
xchg
xor
xor
shrl
and
or
mov
int
cmpsb
mov
sbb
dec
mov
jb
rcl
xor
aaa
or
orl
dec
mov
push
lock
jnp
mov
fstps
xchg
mov
cmp
xchg
xor
stc
pop
pop
test
mov
aad
dec
jmp
adc
ffree
rcpps
xchg
les
and
mov
jecxz
adc
inc
stc
inc
imul
fs
xchg
addb
sbb
rorl
xchg
pop
inc
orl
sub
out
add
hlt
or
mov
psubw
popa
or
loope
lods
xor
les
cmp
mov
test
mov
pusha
jne
jmp
pop
movsb
cld
lock
jmp
daa
mov
lds
shl
mov
jnp
bswap
mov
sub
xor
inc
jecxz
fs
xorb
sbb
dec
arpl
push
in
sub
jp
sbbb
xor
add
cli
popf
repz
push
add
inc
sbb
stos
jo
fists
test
lahf
and
ret
popa
lcall
jns
sbb
add
jmp
sub
loope
subl
xor
push
or
mov
sbb
sahf
in
mov
sbb
ja
adc
adc
dec
xor
adc
push
nop
mov
jnp
dec
mov
xor
pop
xchg
sub
cmc
xor
into
add
in
or
sarb
cltd
adc
adc
cmp
movsb
mov
lods
ljmp
stos
sahf
out
push
dec
adc
out
jno
shl
ret
sbb
imul
not
push
movsb
xchg
sub
adc
xor
out
ja
and
xchg
push
movsb
add
into
or
mov
sbb
insl
sbbb
shll
ret
arpl
in
adc
dec
push
inc
push
and
sti
jnp
adcl
popf
mov
push
and
aam
test
inc
xor
fsubr
push
fs
xor
xchg
jg
mov
sahf
sbb
add
cmp
mov
dec
add
inc
and
push
xor
stc
mov
rcll
jns
int
sarl
push
push
jecxz
stos
movsb
push
xor
adc
cld
arpl
sahf
pusha
inc
inc
je
cltd
filds
dec
movl
cmp
sub
jmp
push
jmp
mov
inc
fadds
test
fwait
mov
or
inc
and
data16
mov
lods
call
stc
xor
ds
xchg
insl
push
pop
test
pushfw
lret
ja
mov
popl
repz
inc
lret
pop
pop
sub
sbb
sub
cmp
add
lcall
push
inc
dec
movb
push
aad
xor
js
cli
adcl
ss
jo
icebp
scas
xchg
jb
test
mov
push
cld
lea
mov
test
sub
mov
sub
or
xchg
inc
mov
add
lahf
or
or
jecxz
pop
mov
add
cmp
test
mov
mov
mov
mov
fildll
mov
jnp
loop
jmp
repnz
imul
xchg
xchg
daa
into
push
inc
fadd
xor
sub
test
push
leave
mov
xchg
adc
mov
repz
shlb
in
imul
out
mov
in
sbb
fisubrs
sti
sub
ss
mov
loope
bnd
les
pushf
stos
movsl
xchg
icebp
out
inc
gs
xchg
inc
andb
lret
pop
pop
mov
insb
pop
adc
push
xor
dec
sbb
mull
push
and
mov
shr
test
shlb
pop
xor
mov
and
call
cmp
inc
sbb
mov
bound
into
imul
jmp
xchg
or
js
mov
rclb
test
ss
aas
jo
push
hlt
adc
ljmp
fnstcw
sbb
cs
mov
cltd
rcrl
sarb
add
out
outsl
jg
jnp
shrl
hlt
fnstsw
jae
mov
sub
dec
loopne
ja
xchg
in
sbb
mov
sub
pop
add
inc
lret
push
ss
into
mov
mov
loope
imul
and
inc
in
cli
cmp
fisttps
call
hlt
lods
nop
sub
dec
setb
xor
adc
test
ljmp
cmp
fistl
cmpsl
rolb
lret
adc
sti
pop
push
mov
mov
lods
jmp
cmc
adc
cmp
repz
sahf
xor
mov
sbb
imul
xor
xor
iret
popf
jmp
push
xor
push
jmp
je
mov
dec
bound
xchg
mov
std
ficoml
push
add
mov
lcall
push
pop
das
mov
dec
sbb
mov
test
cmpxchg
iret
or
xor
iret
ja
leave
pushf
lods
testl
cmp
movsl
cmpsl
sub
nop
and
xchg
or
cmc
mov
push
cmpsl
xchg
sahf
adc
mov
cmp
lea
lods
aas
dec
xor
dec
xchg
mov
mov
ljmp
lcall
mov
mov
imulb
pop
popa
orb
fwait
ss
cmp
clc
ret
add
and
cmp
jbe
daa
inc
mov
mov
mov
cwtl
cmp
shlb
mov
add
in
ds
std
adc
cmp
lods
arpl
nop
and
inc
sbb
scas
mov
mov
stc
and
out
pushf
inc
inc
push
xchg
jle
repnz
adc
add
leave
mov
jnp
xchg
cld
inc
out
xchg
jecxz
insb
add
lcall
mov
shll
xor
push
or
xchg
insl
test
cli
jp
in
push
push
add
icebp
pop
and
sbb
test
push
leave
adc
sbb
pop
repnz
mov
iret
leave
inc
movaps
cmp
ret
jge
add
mov
xor
lds
shll
xchg
movsb
repz
lahf
pushf
scas
push
mov
sbb
xor
mov
in
pop
mov
cmpsb
and
negl
enter
add
or
hlt
jmp
push
mov
mov
std
jae
idivl
sbb
bound
push
dec
inc
dec
js
push
xchg
test
and
xchg
cmp
xor
lcall
jnp
loop
data16
dec
mov
iret
rcrl
or
loopne
jg
lods
dec
ret
inc
insb
xchg
mov
mov
fwait
pop
push
nop
lahf
cmp
fwait
adc
pop
fisubrs
mov
and
enter
pushf
cmp
insl
sub
dec
mov
js
sti
push
xlat
sub
test
out
pushf
dec
jp
jbe
fstp
sbb
mov
loopne
js
mov
dec
mov
adc
ja
cmpsl
xor
leave
pop
and
pop
imul
fstps
dec
lahf
jne
fisttpl
lds
add
test
out
push
std
out
jo
cmp
jae
add
pusha
lea
and
loope
out
pop
xor
cmp
es
ds
push
xchg
mov
push
inc
jl
push
push
cmp
or
add
ljmp
dec
and
push
or
and
test
jg
fnstenv
imul
xor
lret
movsl
fsubrs
arpl
in
in
dec
fsubrs
sub
outsl
jb
mov
dec
cmp
mov
pop
jmp
inc
aad
ret
fisttps
les
xchg
aaa
mov
call
or
inc
loope
or
dec
inc
int
insb
sbb
mov
dec
xor
lds
push
dec
push
pop
mov
mov
pop
shll
mov
adc
sub
dec
sub
rorl
sub
fsubs
jae
pop
fcom
lea
mov
xchg
bound
call
jp
scas
pop
cmpsb
mov
mov
add
scas
xchg
dec
xor
dec
notl
adc
and
shr
inc
and
mov
dec
dec
dec
push
cmp
stos
lock
lock
popa
jge
add
popa
sub
pop
inc
lret
ret
pop
sub
imulb
xchg
ret
jo
inc
lret
xchg
pop
push
rcll
dec
push
push
mov
adc
cwtl
adc
subb
sbb
in
cs
push
and
pop
pop
mov
out
xchg
lods
pop
xor
push
dec
mov
out
xor
data16
mov
aam
outsl
pop
scas
test
lods
sbb
std
fcos
xchg
fidivl
aam
pop
adc
loop
and
xchg
loop
in
ja
cmpb
dec
jge
push
fnsave
enter
mov
call
roll
jno
in
fcmove
cld
push
and
pop
dec
addr16
imul
push
and
ss
cmp
fs
pushf
sub
sub
pop
push
iretw
jge
les
push
and
fcoms
ja
lcall
fisttps
fistl
push
mov
inc
repnz
jae
pushf
cmp
xor
jb
stos
pop
mov
xchg
outsl
loop
mov
dec
je
push
cmc
in
test
mov
imul
leave
scas
or
pop
inc
xchg
mov
inc
xchg
movsl
cltd
pop
cmp
popf
movsl
cld
jle
fs
xchg
mov
sahf
adc
je
mov
bnd
shl
test
ljmp
mov
cld
and
sub
mov
in
shl
and
cmc
arpl
jno
mov
jp
sahf
lods
xor
cwtl
cmp
pusha
insb
je
cmp
mov
cltd
stos
test
inc
or
ss
or
xor
add
outsb
cmp
inc
rolb
sbb
int3
js
mov
sbbl
pop
leave
xchg
std
sbb
xchg
add
inc
or
jb
sbb
adc
fucomi
push
mov
sub
or
je
fmuls
dec
jne
pop
sbbb
xchg
dec
mov
daa
ds
aad
and
add
imul
bound
sbb
in
dec
adcb
xor
les
fsubrp
in
mov
mov
nop
and
mov
lret
rolb
psubusb
les
jg
sbb
inc
pushf
into
push
ljmp
ficompl
add
adc
jbe
cld
xor
fsubs
lock
stos
push
cld
stos
inc
icebp
insb
push
testl
add
push
inc
cmp
jg
or
inc
ljmp
or
sahf
adc
xchg
sahf
int
cmp
std
jecxz
mov
adc
rcl
and
ret
mov
loop
xor
cmc
push
xchg
cmp
pushf
icebp
cmpsb
pop
pushf
or
push
jg
int
jle
scas
lret
js
rorl
adc
dec
mov
inc
imul
nop
mov
lock
fcmovnu
fildl
arpl
and
inc
xchg
movsb
mov
xor
sub
mov
daa
lahf
cmp
imul
negl
mov
fstps
add
mov
push
ret
mov
sbb
faddp
mov
out
and
ljmp
shlb
cmpsl
mov
and
xchg
add
call
jns
cmp
loopne
sarb
decb
mov
mov
lret
mov
mov
xor
inc
loope
in
loop
andl
adc
sti
xchg
jae
push
cmpsl
push
dec
push
out
mov
push
fstpl
cmp
and
sub
mov
mov
sbb
in
ss
pop
sti
ljmp
cld
jns
pop
mov
in
xor
or
xchg
pop
jns
xor
or
sbb
repz
mov
adc
mov
xchg
dec
popf
sbb
or
sub
jno
jl
lret
data16
lods
cltd
add
into
or
mov
scas
hlt
push
mov
leave
xchg
mov
fcmovbe
sub
call
mov
lret
into
jbe
test
jb
ja
inc
cli
sbb
fcmovnb
out
mov
dec
mov
sbb
int3
mov
or
sub
repz
aas
ror
mov
outsb
imul
sub
push
bound
andl
cmp
cmpsl
cmpsb
sbb
push
subl
push
mov
je
push
insl
adc
sbb
ds
push
stc
jmp
rorl
pusha
enter
xchg
test
jne
or
mov
lock
mov
inc
outsl
push
xor
mov
lret
xchg
notl
mov
xchg
mov
or
sub
rolb
lea
pop
add
out
dec
mov
stos
loop
out
xlat
pop
cmc
xchg
arpl
push
loope
jbe
pop
cmp
fistpl
xchg
xchg
gs
inc
adc
mov
ret
mov
jle,pn
int
sub
js
cltd
cmp
sti
mov
push
jmp
fldt
rclb
cmp
std
mov
gs
std
mov
mov
mov
arpl
loope
push
lock
cmpsl
arpl
sbb
test
cmc
jge
xchg
inc
jno
mov
ds
mov
je
fcmovbe
sbb
and
fs
cmpsb
test
loope
cmp
xchg
pop
mov
mov
inc
cwtl
xchg
js
stc
adc
fwait
jg
xor
pop
sbb
or
scas
adc
loop
sub
pop
jb
sub
inc
sub
stc
les
push
cmp
stc
push
push
pop
push
ret
add
test
cmp
scas
inc
or
cmc
fldenv
js
push
pop
cmp
test
and
or
je
fisubl
sbb
mov
sarb
or
cmpsl
jp
jmp
test
add
or
jmp
sbb
ficoms
xchg
or
sub
adc
pop
pop
mov
mov
push
movb
adc
mov
add
mov
rclb
fistpl
and
mov
pop
lock
movl
repz
mov
and
aad
pop
mov
or
add
and
sahf
imul
push
dec
pop
jg
pushl
sbb
test
xlat
cltd
or
test
lods
imulb
mov
fldt
daa
out
cmp
sub
loopne
cmp
jno
shrb
test
or
add
popf
sub
fmul
pop
mov
dec
xor
decb
xchg
cmp
xchg
pushf
sbb
xor
cmp
adc
ljmp
aas
cld
jle
mov
jbe
mov
jg
mov
ja
insb
movsb
stc
sbbl
jne
hlt
outsb
xorb
jge
inc
mov
stc
addr16
aaa
mov
in
xor
repz
scas
pop
and
cmp
add
in
mov
outsl
sbb
lret
sbb
in
das
cs
inc
outsl
pushf
jecxz
pop
loopne
sbb
mov
sbbb
inc
xor
enter
mov
ret
inc
imull
int
or
adc
loop
aaa
and
add
rcll
fimuls
pop
test
mov
clc
push
pop
je
sub
inc
fucomi
lock
xchg
dec
and
aam
dec
call
lcall
mov
lahf
iret
and
add
mov
stc
jno
in
insb
xchg
es
dec
push
mov
movsl
out
in
jno
jecxz
push
mov
push
aaa
jl
js
and
pop
or
fisubl
inc
dec
sub
inc
rolb
or
jne
adc
daa
lcall
xorl
outsb
push
into
in
dec
xor
cli
std
orl
data16
outsb
xchg
lods
pop
arpl
sub
cmp
dec
mov
xchg
jl
inc
cmpsl
jmp
popa
dec
insl
loope
xchg
ja
hlt
push
mov
pop
addr16
or
shl
pcmpeqb
add
mov
movsb
stos
mov
jl
jle
push
ljmp
jne
or
enter
push
mov
dec
cmp
lahf
add
daa
js
je
cmp
add
push
jl
ljmp
call
fldl
pop
pushf
ror
mov
pop
and
outsb
mov
ljmp
jo
pop
xor
clc
xor
shrl
iret
pop
jbe
insb
cld
cli
pop
inc
or
and
or
or
xor
js
loopne
xchg
push
inc
inc
push
push
loop
es
push
test
test
or
cld
int
cmpsl
add
test
lcall
xchg
sub
jo
inc
jne
test
inc
and
test
jo
sbb
jns
movsl
nop
push
ret
ds
jno
cmp
lods
cmpb
jo
pop
inc
push
push
aad
loope
out
sbb
cwtl
push
dec
inc
mov
addr16
fidivs
mov
sbb
scas
and
pusha
mov
mov
inc
mov
pop
or
inc
ja
mov
fdiv
in
sub
add
fistps
repnz
mov
pop
pop
cmpsl
sbb
outsl
call
sahf
in
sbb
stc
mov
roll
add
out
arpl
fcmovnu
xlat
icebp
in
mov
bound
sbb
cltd
popl
cld
ffree
cmpsb
mov
xor
lret
test
pop
xchg
jecxz
inc
sub
daa
shlb
cmp
fistps
sbb
icebp
or
je
fists
jno
movsl
outsl
lret
xchg
pushf
nop
out
cld
adc
push
rorb
dec
lcall
inc
in
insb
mov
xchg
push
pop
lock
aad
and
outsl
sub
and
into
cmp
in
fisttpl
jnp
cmpsb
fwait
adc
adc
pop
mov
es
mov
mov
test
fmulp
cli
out
cli
mov
or
push
sub
hlt
sub
mov
mov
push
adc
sub
push
repz
xchg
std
dec
jp
xchg
mov
xchg
jno
and
mov
pop
adc
pop
inc
inc
out
pop
mov
inc
cltd
pop
cli
mov
cli
pop
iret
movl
mov
in
push
xchg
mov
push
mov
sub
or
inc
cmp
adcb
pusha
pop
popf
cmp
sbb
cmpsl
fiadds
test
js
repnz
scas
jb
push
movsl
pushf
pushf
dec
jno
sti
stc
popf
stos
mov
out
or
gs
jns
in
lock
dec
push
lods
xor
in
adc
ja
and
inc
subl
movsl
loop
jg
inc
pop
cld
sti
and
pop
mov
insl
and
shr
out
ret
pop
outsb
mov
or
mov
pop
dec
out
jp
push
cmp
push
pop
pop
test
push
out
dec
pop
mov
addr16
fcompl
outsb
cld
subl
popa
negl
xchg
sbb
xor
xchg
das
cmpsb
cmp
push
add
jmp
cmp
mov
into
push
mov
jecxz
dec
inc
mov
and
into
aas
pushf
cld
aam
imul
mov
vmovaps
data16
xor
sarl
pop
xchg
out
push
out
xchg
push
outsl
cmp
lods
ljmp
dec
mov
or
popf
jmp
adc
repz
mov
int3
push
push
rcrb
sub
mov
aam
jmp
pop
lret
or
hlt
mov
mov
inc
out
and
xor
pop
and
popf
inc
fs
ljmp
push
daa
cmpl
je
inc
fcompl
sub
and
mov
adc
inc
stos
bound
dec
clc
test
cmp
sbb
cs
insb
push
stos
movsl
movsl
roll
lods
dec
aas
aam
xor
or
sub
adc
clc
pop
into
scas
mov
jle
add
jno
bound
adc
ret
jb
jle
sub
and
ja
das
lock
rorb
cltd
sbb
insb
sbb
dec
jmp
sbb
mov
mov
push
flds
jge
stos
or
mov
outsb
fwait
mov
test
or
js
xchg
or
dec
ds
mov
ret
mov
mov
push
gs
fmull
or
mov
push
cld
pop
or
popa
movsl
je
bound
dec
and
push
bound
mov
dec
jmp
je
decb
cmp
mov
adc
sub
push
jne
hlt
and
pop
sti
lret
ljmp
lret
add
fwait
dec
mov
mov
ja
push
push
push
inc
pusha
ret
clc
mov
out
fsubs
fisttps
pusha
inc
in
cmp
loopne
ljmp
jl
aas
fstpt
add
fcomip
cmpsb
movsb
in
add
mov
js
aaa
sbbl
cmp
leave
pop
push
sub
negb
inc
mov
ljmp
sahf
data16
ret
or
movsb
shlb
jp
ficomps
xor
push
faddp
mov
jge
out
mov
lods
add
orl
stos
arpl
outsl
test
das
or
mov
cs
fwait
ljmp
rcll
fcomps
ljmp
adc
push
cmp
adc
add
mov
test
cmc
out
or
xchg
imul
aas
enter
add
xchg
push
xchg
or
xchg
movsl
shlb
mov
inc
mov
push
idivl
cld
enter
into
jecxz
mov
adc
dec
inc
icebp
pop
inc
adc
xchg
mov
mov
cmp
push
and
jns
push
test
sub
gs
jmp
fwait
dec
lret
sbb
sahf
push
fisubs
xchg
iret
lea
test
pop
mov
jg
int3
in
mov
jl
lret
dec
mov
xor
dec
xchg
push
test
jmp
shlb
or
pop
xchg
mov
iret
in
mov
inc
iret
imul
notl
shrl
outsb
es
push
loope
xchg
push
mov
movsl
sub
adc
fwait
push
int
divl
adcl
stos
pop
adc
mov
ret
in
push
pop
int
mov
xchg
mov
outsl
gs
mov
int
mov
je
aaa
lea
je
out
cmp
and
stos
sub
pop
mov
call
scas
loopne
dec
dec
cmp
xor
je
mov
and
mov
mov
sbb
jecxz
fcmovnbe
test
mov
lret
stos
pop
lds
arpl
pop
daa
into
insb
stc
pop
xor
test
fimull
xchg
pusha
mov
dec
sbb
pusha
jae
xor
xor
popa
pop
lea
adc
dec
lods
loope
stc
or
push
into
hlt
sahf
sub
loop
lods
add
add
mov
and
andl
pop
sub
lods
sti
sbb
push
cmp
inc
mulb
push
sahf
bound
or
enter
mov
repz
push
adc
dec
push
out
sub
in
mov
enter
adc
push
dec
call
aas
xchg
sub
push
pop
jne
or
jne
or
or
ret
lahf
mov
es
pusha
outsl
sub
cmp
xchg
mov
sbb
mov
push
adc
out
xor
adc
push
xor
or
paddsw
push
or
ja
test
mov
mov
ljmp
movsb
mov
cmpsl
ret
cmp
outsb
loope
iret
repnz
les
insb
es
sti
loopne
stc
xchg
jae
aaa
data16
nop
pop
frstor
scas
inc
shrd
pop
sbb
das
cmp
leave
test
jno
cwtl
mov
lock
jne
leave
fwait
mov
cmpsl
and
push
fmull
pop
mov
in
xlat
push
outsb
xor
int3
scas
xchg
ret
mov
xchg
or
cmpsl
pop
pop
lock
jbe
cmp
inc
imull
cmc
ds
cld
test
pop
in
repz
out
pop
jns
mov
in
xor
out
pushf
xchg
pop
mov
mov
mov
add
hlt
jne
dec
and
jo
shll
stos
fsubl
jno
cwtl
push
mov
jl
int
into
mov
push
lret
pop
cld
mov
stos
pop
jecxz
mov
loope
jmp
jne
inc
jmp
push
in
jl
es
or
int
into
xor
add
adc
sub
stos
add
jbe
cld
or
jbe
lds
xor
inc
stos
adc
fists
test
pushf
xchg
outsb
lret
fbstp
int
iret
scas
and
cwtl
push
pushf
stos
mov
ficomps
je
or
push
int3
repnz
xchg
in
add
fimuls
mov
pushf
sbb
mov
js
xchg
cmovl
outsl
jmp
inc
mov
pushf
sub
mov
cmpsb
testl
nop
xor
rclb
in
mov
mov
cmc
push
push
inc
scas
mov
popa
push
jl
sub
cmp
push
jg
outsl
sbb
dec
lret
ret
cmp
outsl
std
mov
push
mov
add
cmpsb
or
scas
push
or
repz
test
es
and
test
mov
xchg
sbb
cmp
push
add
popf
rorl
push
mov
rclb
fmul
sub
push
push
out
in
sbbl
or
cmp
fmuls
push
fcompl
ja
xor
jle
ficomps
cwtl
mov
insb
lcall
push
jae
xchg
sub
lret
je
and
add
mov
aam
jns
xchg
lods
mov
leave
cltd
add
mov
out
add
cld
ss
shlb
mov
ja
sbbl
adc
xor
lahf
arpl
and
mov
adc
sbb
cli
add
sub
call
dec
clc
push
movsl
mov
and
pop
mov
mov
clc
add
jg
in
xor
dec
cmp
hlt
test
jns
nop
dec
jne
pop
mov
arpl
or
and
lcall
pop
adc
fdivl
scas
imul
ja
ljmp
lods
push
leave
sbb
int
fidivrs
mov
or
xor
outsb
mov
mov
outsl
outsb
fistpll
mov
rcll
insb
mov
andl
shlb
push
dec
sbb
daa
fdivrs
lds
fcomip
mov
sbb
xor
mov
pop
inc
jb
and
and
clc
xor
dec
sbb
mov
pop
mov
mov
mov
lea
mov
pop
mov
js
lods
and
xchg
and
movsb
clc
out
jge
dec
test
add
xchg
phaddd
pop
cli
into
jmp
test
cmp
cmp
mov
int3
add
add
jecxz
sub
add
stos
and
rorl
lret
mov
test
mov
jg
aaa
fcmovu
dec
or
or
imul
and
push
mov
mov
dec
push
or
mov
sub
leave
sbb
sbb
jne
adc
out
jge
pop
loop
shll
sarb
cmc
add
lret
imul
insb
or
gs
outsb
cmc
mov
sbb
scas
pop
mov
cmp
imul
push
adc
pop
jns
xchg
inc
xor
jp
sub
sbb
or
fistl
inc
aaa
sbb
fbstp
jl
mov
nop
xchg
fsubrp
xor
mov
xor
jae
inc
cmp
shlb
xchg
or
mov
cmp
push
fcomi
or
pop
push
shl
ja
stos
fchs
cmp
sar
ret
xchg
add
mov
test
push
loopne
cmp
push
hlt
jmp
sub
int3
hlt
addr16
aam
aas
lods
outsb
sbb
and
and
sub
cld
subps
mov
mov
into
div
icebp
call
mov
inc
js
repnz
fwait
fwait
jl
out
add
cmp
cli
pop
dec
push
sub
jg
outsl
pop
je
movsb
inc
jno
in
iret
shrl
dec
mov
cmp
pop
shll
insl
cmp
xchg
das
call
dec
out
and
fldt
jno
jp
loopne
push
movl
dec
popf
add
shll
cmp
ret
add
jg
inc
mov
push
jp
add
xchg
xchg
incb
dec
cmp
mov
xchg
inc
in
pop
stos
pop
icebp
daa
sbb
das
or
pop
gs
loope
dec
push
jne
pop
sub
sbb
aam
add
mov
call
xchg
mov
fmuls
adc
repnz
xlat
dec
mov
cmpsb
mov
pusha
gs
lea
add
stos
sub
pop
rolb
add
sub
inc
divl
fyl2x
xchg
sub
in
jl
bound
in
jmp
daa
push
int3
add
insl
push
adc
mov
rcll
or
lahf
fadds
mov
repnz
xchg
mov
mov
jo
in
ss
push
enter
add
pusha
aam
fmulp
push
mov
dec
mov
sbb
mov
adc
mov
sub
ljmp
xor
in
inc
outsb
fmuls
popf
ds
push
or
hlt
dec
fs
imul
jmp
mov
jg
jmp
push
add
jp
sbbb
sbb
and
cmp
enter
cmp
xchg
dec
xor
push
or
into
movsl
pop
inc
cld
mov
push
jge
jo
jns
int
cwtl
enter
aad
push
movsb
or
fadds
leave
xlat
fimuls
xchg
ss
out
scas
ret
fisttpll
in
inc
pop
jg
incb
pop
or
outsb
ret
adc
mov
jecxz
insl
mov
push
lods
out
cmp
leave
push
mov
outsb
daa
iret
mov
jno
faddl
and
data16
inc
or
jno
cmp
cmp
mov
xchg
mov
cs
add
push
add
mov
xor
ja
mov
ljmp
lcall
or
loop
ja
mov
sti
xchg
shrb
cltd
xchg
sbb
ds
inc
mov
lret
fmulp
daa
jbe
mov
icebp
dec
xor
in
out
sub
frstor
sub
mov
fsub
adc
test
and
dec
pop
cmp
data16
test
lock
rcr
jo
sbb
call
outsl
xchg
adc
pop
pop
pop
aam
or
aaa
data16
jae
gs
int3
pop
insl
js
xchg
adc
and
ds
pusha
xchg
rolb
movsl
popf
movsb
inc
jmp
xchg
lretw
xchg
or
cli
pop
pop
nop
test
jns
mov
in
dec
and
push
call
jo
inc
mov
in
test
scas
xchg
jbe
fldt
cmpsb
xor
call
push
push
push
push
xor
push
fcompl
adc
pop
jl
mov
es
add
ss
in
scas
arpl
mov
cwtl
inc
cmp
xor
arpl
lods
push
and
xchg
popa
out
jecxz
addl
lock
nop
in
mov
jl
sahf
xchg
cmc
repz
cmp
inc
mov
jl
shlb
lods
push
cli
pusha
leave
sub
loope
dec
call
stos
hlt
pusha
in
cs
mov
and
ljmp
push
sub
cli
ja
out
sub
or
jp
jmp
jp
lret
pop
xchg
push
ret
mov
and
xchg
out
mov
int
xchg
xchg
out
push
xchg
inc
sub
lcall
or
jbe
sub
and
in
sub
stos
push
or
or
ljmp
cmp
pop
scas
push
jl
xchg
xchg
jmp
jle
jp
cmp
adc
sbb
push
repnz
mov
mov
shl
fdivrs
xchg
shlb
sbb
fsubr
sub
int
repnz
aaa
ds
repnz
insb
and
pop
mov
orb
sub
mov
xor
test
pop
jae
ud2
insb
jne
adc
mov
cmc
jb
mov
fdiv
xor
jae
adc
pop
out
sub
fstpl
inc
lret
mov
mov
movsb
push
inc
stos
fcoms
imul
dec
add
fsubrl
dec
negb
xor
lahf
push
jl
push
mov
dec
adc
jmp
out
jns
jle
mov
cld
loopne
dec
lcall
jae
enter
pusha
cs
mulb
push
mov
cmc
push
lods
pop
fs
pop
lock
sub
pushl
mov
out
stos
fdivl
xchg
lahf
insl
sbb
push
mov
mov
adc
mov
fst
or
xlat
inc
mov
pop
and
ret
rol
and
pop
xchg
pop
loop
aad
or
hlt
insb
dec
jl
dec
sbb
jle
pusha
aaa
jbe
add
fwait
mov
adc
jl
les
fidivs
mov
repz
daa
lcall
xor
lds
pop
jae
mov
adc
dec
lcall
enter
out
mov
mov
or
inc
sub
subb
and
mov
or
rorl
push
sbb
aas
sub
sti
cmp
fildll
push
and
cmp
push
mov
test
dec
dec
jbe
lods
in
jbe
mov
adc
adc
ret
push
lods
jge
push
sbb
inc
es
ret
jecxz
fwait
pop
mov
push
pop
sbb
ror
flds
push
fucomi
es
push
mov
jge
inc
inc
sbb
cli
xor
adc
add
dec
dec
mov
arpl
dec
add
cld
pop
es
push
jp
adc
mov
scas
dec
aas
test
mov
push
sbb
test
inc
push
fwait
sbb
xchg
pop
mov
pushf
in
and
mov
add
mov
ret
xor
outsl
movsb
sbb
sub
dec
bound
cmp
loopne
sar
lret
bound
fstpt
sbb
stos
dec
sbb
xchg
flds
mov
cs
add
lods
ret
inc
test
insb
popa
sub
ret
filds
add
lahf
mov
jle
iret
dec
sbb
jbe
xor
nop
cmp
sbb
out
mov
cmpsb
int3
test
pop
jns
cmp
mov
int
jmp
ret
testb
out
fdivs
push
push
movsl
mov
and
cmc
cmp
pop
lretw
imull
cmpsl
add
inc
movsl
lcall
jne
add
in
xchg
frstor
cld
fldenv
aaa
pop
dec
shll
sub
aaa
or
and
cltd
jmp
sarb
mov
rcrl
inc
in
aam
bound
test
cmpl
push
fcompl
lds
mov
ljmp
stos
pop
leave
pop
add
jg
mov
ja
mov
jo
lcall
loop
inc
push
movsb
add
into
push
rolb
sub
jl
addr16
dec
lock
inc
test
cld
inc
outsb
lods
inc
push
iret
mov
ret
sub
mov
mov
and
in
lock
into
js
lret
inc
ja
sbb
mov
out
out
mov
inc
xor
cmp
sbb
xlat
inc
cmp
xchg
pusha
xor
push
mov
lock
imul
pushf
dec
sbb
lock
cmp
pop
adc
sbb
push
mov
cmp
loop
xor
inc
sub
pop
stos
es
rol
lret
mov
fisttps
push
or
jle
bound
sub
inc
movsl
mov
fstpt
or
inc
movb
std
cmp
inc
jo
lea
loop
popf
jle
pop
and
inc
fistps
xor
inc
push
push
cmp
sub
pop
jae
cwtl
or
push
push
add
and
push
mov
shrl
mov
cmc
cmpsb
int3
call
inc
out
inc
aam
xor
xchg
pop
scas
loope
pop
in
sti
jae
inc
stos
push
pop
sahf
out
pop
loopne
jb
jns
ljmp
or
pop
sub
and
inc
or
cmc
lock
lahf
cltd
repnz
or
cmpsb
xor
repz
xchg
aas
inc
pushf
bound
cld
add
aaa
jne
add
fsts
adc
cmp
call
rclb
sbbb
ljmp
orl
and
lock
insl
xor
es
push
in
cmp
je
jbe
mov
fistpl
js
pusha
movsb
push
inc
aam
sbb
mov
xchg
push
in
push
vrsqrtps
mov
mov
sbb
scas
shr
je
xlat
imul
ljmp
addr16
imul
int
std
pop
rcr
lods
aas
fsubl
pusha
push
andl
ljmp
mov
stc
sbb
out
cmp
outsl
jp
shrb
xor
mov
lahf
xchg
sbb
mov
ret
cmp
jnp
dec
jo
test
jp
pop
repz
inc
inc
xchg
pop
dec
test
cld
shrl
push
mov
xor
mulb
and
xchg
ss
xchg
pop
lret
mov
enter
clc
cltd
xchg
dec
je
cmc
scas
cli
outsb
jp
pop
push
call
scas
cld
jge
shll
jl
xchg
mov
sbb
add
jl
sti
inc
lea
les
dec
imul
push
or
js
fisubl
cmpsl
js
push
ss
popf
mov
and
jecxz
lcall
jle
hlt
and
scas
hlt
rcrb
adc
idivb
and
stos
nop
std
add
iret
dec
cmp
pusha
aad
cmp
cwtl
cld
aas
jbe
push
push
push
sbb
sbb
lret
sub
icebp
aas
dec
lcall
jmp
cltd
jo
add
ds
push
mov
and
cmp
jmp
sub
jp
hlt
shl
jmp
adc
xchg
iret
lds
mov
out
inc
test
mov
cld
imul
mov
aaa
mov
scas
stc
mov
add
pop
mov
or
jp
paddusb
outsb
pop
add
xor
push
test
arpl
push
mov
push
cmp
mov
pop
adc
ds
xor
mov
mov
int
iret
cwtl
fcomp
push
aam
pop
dec
arpl
imul
test
fisubs
leave
out
cmp
mov
shrl
jmp
or
dec
mov
into
hlt
xlat
push
cmp
xor
shll
ljmp
scas
and
jbe
sub
test
jmp
jns
xor
push
aam
mov
out
int
dec
push
aaa
pop
test
xor
push
fnstsw
movsb
clc
lock
sub
scas
aas
stos
imul
push
test
ljmp
stc
jns
and
inc
rcrb
xchg
cmp
mov
movsb
lahf
stos
xchg
mov
ret
sar
xor
dec
xor
loop
inc
xor
or
push
fbld
stos
movsb
push
mov
xor
pop
push
inc
mov
xchg
sub
nop
int3
mov
sbb
insb
dec
lods
fisubl
out
pop
mov
mov
ficompl
xor
jg
and
adc
stc
std
lea
push
or
lret
inc
mov
lock
pop
pop
mov
lods
fwait
xor
into
dec
loop
xlat
xchg
outsl
inc
cli
or
xchg
lret
adc
pop
jg
xlat
imul
popa
scas
out
pop
cmp
adc
cmp
cmovbe
insb
push
data16
push
jnp
inc
scas
adcb
adc
push
mov
mov
in
lahf
movsl
in
test
cltd
inc
adc
mov
and
orl
jo
mov
vandps
fnsave
inc
js
fbld
xor
pop
cmpsl
xor
xchg
bound
add
addr16
enter
jbe
pushf
imul
fdivp
lret
rcrb
sub
arpl
and
xor
pop
dec
xchg
xor
sbb
mov
test
js
and
and
mov
push
jmp
sbb
and
xlat
xchg
dec
int3
push
xor
xchg
jnp
loop
jbe
enter
ret
fmull
lcall
pusha
mov
fdivrl
push
jo
cwtl
movsb
in
jnp
sub
iret
repnz
js
mov
pop
xor
aad
and
aas
mov
lock
pusha
add
jl
aaa
fwait
cltd
nop
icebp
in
xchg
sbb
lock
pusha
push
aaa
int3
outsb
and
lods
jl
xchg
aad
inc
ss
or
js
mov
popa
mov
orb
xor
data16
mov
mov
cltd
mov
jno
dec
sub
pop
push
fists
push
jp
loope
mov
cltd
add
add
in
out
subl
xor
lea
dec
pushf
cltd
add
lods
insl
and
jo
in
or
inc
sbb
dec
or
mov
inc
shll
lods
dec
xor
aas
push
mov
cmp
jg
adc
mov
mov
ja
popa
push
pushf
leave
gs
mov
movsb
push
dec
cmp
popf
dec
inc
pop
pushf
add
mov
std
jne
add
ret
xchg
bound
dec
cmp
mov
jmp
lock
xchg
add
cmp
popf
das
insl
bound
lods
imul
sahf
jmp
lcall
bound
dec
mov
xor
mov
jp
inc
add
imul
adc
mov
inc
add
or
scas
sub
lea
sub
cld
mov
mov
subl
mov
notb
and
mov
and
push
fs
mov
gs
xor
in
in
jmp
decb
pop
int3
xor
rclb
inc
xor
cltd
add
insb
push
fadds
cltd
mov
inc
pop
repz
add
test
int3
fisubl
mov
xlat
dec
pop
rcrb
out
ljmp
iret
fwait
rolb
repnz
cwtl
incl
or
jo
mov
mulb
test
adc
jae
jmp
inc
jae
hlt
shll
sbb
arpl
cli
jb
xchg
mov
scas
ljmp
sti
pop
pop
sbb
cmp
xlat
adc
jb
or
mov
daa
mov
frstor
inc
mov
sub
ds
test
cmc
ror
movsl
repnz
pop
xor
mov
adcl
filds
xlat
sbb
jo
cmpsl
sbb
movsl
mov
jb
movsl
lret
pop
xor
addl
jb
test
jmp
adc
and
and
test
int
push
hlt
xor
dec
test
sub
pop
and
xchg
leave
inc
repz
jbe
jb
insl
mov
sub
rolb
or
xor
xorb
pop
and
jb
sub
pop
sub
cwtl
lock
jge
pushf
les
pop
push
into
out
ficoms
outsl
shr
adc
enter
test
arpl
and
sub
lret
sub
and
mov
icebp
into
sub
push
data16
mov
jecxz
icebp
push
dec
insl
cli
sbb
jg
mov
cmp
or
xchg
stos
fwait
dec
mov
cmp
cmp
sub
das
popf
add
movl
lahf
testb
dec
sbb
popf
imul
jo
dec
pop
je
mov
test
insb
mov
and
in
xor
std
mov
loope
stos
inc
fcomip
mov
jne
add
adc
out
xor
mov
shll
push
add
xchg
dec
bound
add
dec
jbe
ljmp
aam
pushf
jb
pop
movswl
push
dec
lcall
dec
add
jno
xlat
xlat
js
pop
mov
inc
push
xchg
bound
xorb
and
mov
lods
das
ret
jb
pop
ja
jecxz
nop
lahf
jle
push
add
loope
outsl
fs
aam
lods
or
adc
test
mov
scas
js
movsl
sarl
fwait
pop
ret
fsubp
lods
and
jle
arpl
aas
push
jno
rolb
inc
aaa
mov
orb
inc
jp
mov
mov
fstpl
test
pop
std
aad
aad
inc
popa
push
cld
out
scas
outsl
std
adc
cmp
dec
and
das
adc
or
ret
cmpsb
jl
icebp
int
inc
imul
cwtl
sub
sub
push
jbe
popa
pop
sahf
mov
gs
dec
cli
out
fisttps
cld
xorl
jp
and
loope
or
mov
pop
push
adc
xlat
mov
fs
sti
pop
rclb
and
add
jne
cmc
pushl
lods
call
lea
push
cwtl
outsl
mov
imul
nop
xor
in
sbb
dec
adc
jnp
pushf
push
cmc
lcall
jp
movsb
mov
and
addr16
ljmp
xchg
cmc
push
inc
xchg
loop
pop
jge
inc
cmc
lods
xchg
movsl
es
cmp
cmp
push
je
push
xor
in
inc
nop
and
out
ret
mov
loopne
jmp
jb
xor
fs
adc
cmp
pop
cmp
or
stc
jns
div
xchg
das
test
lds
ds
cmp
pop
repnz
inc
xchg
inc
push
mov
push
frstor
dec
xor
mul
mov
adc
lock
mov
jno
pop
cmpsb
sbb
add
std
push
mov
pop
xchg
jo
sbbl
test
mov
add
cmp
bswap
test
in
out
xchg
xor
addl
fisttpll
enter
sbb
pop
or
lret
fimull
sahf
xlat
add
add
out
test
add
leave
push
sub
in
add
addr16
loop
mov
daa
movsb
out
out
test
faddl
jne
jg
inc
mov
in
in
scas
sub
add
and
push
xchg
fsubs
xor
and
lods
ds
fsubrp
decl
sbb
sbb
cmp
add
rorb
dec
pop
adc
xchg
dec
lods
movsb
mov
push
sbb
cmp
fisttps
mov
push
loopne
sbb
mov
jle
cwtl
mov
mov
repnz
sbb
xor
addb
mov
mov
push
aas
push
ja
xor
push
cld
jle
xchg
cmp
sti
imul
mov
or
loopne
push
push
xchg
inc
adc
pop
pop
pop
adc
out
test
loopne
subl
push
mov
ret
add
test
cmp
lret
lods
into
mov
cmc
clc
int
andl
pop
mov
add
mov
in
repz
jno
ss
cwtl
stc
stc
or
pop
xchg
test
jb
push
and
clc
stos
lds
mov
jnp
fstpl
loopne
adc
sub
fsubrp
sub
mov
push
inc
xchg
in
mov
lret
push
push
sub
shl
mov
popa
ja
push
xorb
fisttps
mov
nop
xor
sbb
pop
aaa
add
test
push
lea
fmull
or
push
push
fistps
shlb
and
je
and
jne
push
sbb
rolb
push
das
or
fs
or
and
xchg
pop
push
inc
mov
push
pop
stos
cmp
mov
sub
fldenv
out
ljmp
dec
scas
nop
fdivrl
mov
push
dec
icebp
mov
jne
repnz
add
addr16
iret
scas
test
mov
jbe
xchg
scas
jb
or
mov
add
mov
sbb
cmpb
add
testl
inc
mov
scas
add
fistl
pusha
sbbb
add
push
int
repnz
repz
sbb
push
negl
daa
clc
in
and
mov
call
jne
xchg
shlb
pop
arpl
push
lea
imulb
sahf
movsl
dec
inc
imul
cli
daa
jmp
insb
out
jnp
xor
aad
test
xchg
sub
mov
fistpl
hlt
or
mov
dec
jno
adc
ret
aam
add
rclb
jne
leave
and
je
mov
pop
inc
sbb
push
fwait
iret
inc
ja
mov
loopne
add
xchg
xchg
in
cmc
shlb
adc
gs
adc
jmp
and
dec
pop
cltd
jl
xor
cmpsb
ljmp
cld
pop
cmpsb
jae
inc
jbe
aaa
addl
push
sarb
movsl
out
movsb
aas
adc
imul
movnti
dec
pushf
bound
jmp
or
cli
pop
pusha
cld
adc
jo
daa
pop
outsb
mov
call
mov
call
inc
scas
leave
sub
xchg
sub
sub
sub
adc
scas
cli
jbe
addl
pushf
adc
int3
sti
ja
adc
mov
mov
arpl
iret
jae
add
push
leave
mov
push
hlt
pop
repnz
imul
cmp
push
push
xchg
mov
aad
push
rol
dec
addb
xchg
pop
xor
in
sbb
mov
sub
xchg
inc
push
mov
lahf
addr16
lcall
cmc
jae
std
lods
cmp
loopne
lock
test
push
insb
mov
fsubrl
loope
fnstcw
in
cmp
and
shld
ror
or
lcall
xor
ret
sahf
enter
clc
jl
sbb
rol
or
negb
xchg
add
scas
je
mov
bswap
orb
in
xchg
insb
cmp
xor
jge
pushf
sahf
mov
cmp
and
xchg
dec
call
out
dec
fsts
sub
or
dec
adc
mov
ds
leave
jmp
push
out
mov
xchg
push
push
xchg
jbe
sti
adc
mov
add
int3
mov
mov
cwtl
sub
jle
sub
push
int3
cli
arpl
pop
jle
dec
jmp
xor
add
sbb
lods
pushf
and
dec
adc
add
xchg
mov
addb
leave
xchg
mov
sbb
test
mov
jae
pop
js
fwait
push
cmp
das
imull
push
sub
cmp
std
popl
adc
ret
xchg
in
or
ds
mov
lcall
iret
push
jl
dec
dec
mov
outsb
sub
icebp
lea
or
xchg
lret
xor
ds
idiv
xor
movsl
push
inc
dec
dec
dec
imul
movl
out
ja
add
stos
in
cmp
test
cmp
jne
stc
add
aam
mov
mov
out
test
xor
dec
pop
pop
jp
add
xchg
lods
xor
lret
notb
mov
jge,pn
stc
sub
push
orb
and
sbb
add
dec
mov
mov
cmp
pop
fisubrs
cmp
loop
aad
dec
pusha
lcall
cs
cltd
movsl
and
into
xor
sub
push
or
mov
add
xchg
in
push
lret
jge
xchg
addr16
sub
xchg
or
orb
adc
xorl
cmp
mov
sti
cmp
or
xchg
cld
leave
loopne
fidivrs
or
push
ror
inc
mov
fisubrs
push
dec
into
stos
mov
movsb
loop
fucom
mov
orl
cs
xlat
test
pop
in
push
inc
sub
inc
and
test
jne
xchg
or
ret
mov
fidivl
dec
xor
ja
lock
clc
int
testb
in
push
xor
mov
push
loop
jmp
jb
pusha
cltd
sbb
pop
mov
jnp
adc
and
push
mov
pop
jno
fld
mov
sbb
fnsave
jns
out
lds
mov
adc
stos
ficomps
push
or
daa
inc
repz
mov
jge
sub
jmp
pop
into
xor
dec
fisubrl
lea
or
xchg
ret
les
dec
xchg
into
jns
push
sbb
pop
repnz
sbb
mov
jg
addr16
push
test
repz
cltd
dec
loope
adc
xchg
add
cmp
lahf
pop
xchg
dec
sbb
orl
xor
iret
aas
shlb
mov
andl
fildl
adc
jge
pop
pop
mov
dec
nop
add
in
cmp
aas
add
dec
lods
ficomps
jbe
lret
and
or
adc
addr16
enter
stos
inc
std
sub
add
xor
adc
das
pop
lret
xor
in
sbb
gs
dec
fisttps
cmp
jge
mov
push
pop
lcall
rolb
test
cmp
jmp
inc
jo
mov
xor
push
adc
stos
or
pop
mov
scas
leave
mov
xchg
in
popa
fsubrl
dec
out
pop
push
sbb
daa
inc
inc
lds
loop
test
inc
pop
inc
and
shlb
inc
ljmp
cmp
clc
lds
xchg
cli
and
pop
lods
jbe
jbe
adc
jns
roll
xor
inc
fwait
xor
jmp
mov
push
cli
sbb
je
idivb
jmp
or
les
jp
lea
xchg
pop
stos
fcompl
loop,pn
cmp
adc
jo
push
push
mov
pop
mov
test
imul
sahf
sbb
in
or
stc
push
or
fildll
fstps
nop
mov
inc
dec
rorb
inc
mov
aad
repz
aam
arpl
stos
addr16
xlat
jae
dec
cmp
int3
fcmovnb
and
int
and
dec
ret
pop
dec
test
or
mov
hlt
xchg
cltd
dec
sub
xchg
test
cmc
nop
inc
mov
insb
push
mov
and
push
inc
sub
jne
mov
add
sub
mov
add
sarl
mov
notb
mov
mov
jl
xchg
mov
enter
xchg
add
pop
add
stc
jge
cli
or
out
jle
iret
mov
stos
push
and
pcmpgtw
xor
aad
xchg
xchg
push
dec
lds
xor
or
inc
sbb
mov
mov
sarb
add
fisubs
jl
fwait
sti
in
xlat
inc
out
mov
jl
dec
push
mov
mov
pop
cld
mov
jbe
sub
pop
out
sub
ror
pop
les
push
cmp
jne
insl
popa
stos
mov
cld
daa
xor
out
into
xchg
pushf
push
pop
xchg
cmc
rorl
shll
ret
fdivr
scas
dec
cltd
cmp
lret
cwtl
loope
insl
stos
xor
pop
enter
jo
in
int
sbbb
sub
mov
sub
push
test
cmc
fucomi
data16
mov
xlat
adcb
fiadds
imul
jle
addb
mov
ss
sbb
jmp
rcl
and
cmp
mov
lret
jecxz
enter
enter
xor
mov
das
movsb
sbb
movsl
adc
push
dec
mov
nop
mov
scas
xor
iret
pop
loopne
mov
dec
out
aas
cwtl
fcomi
mov
inc
loope
push
sub
add
cld
cmp
xchg
les
xchg
pop
aas
jmp
enter
xchg
ret
pop
lret
imul
push
stos
pop
jbe
std
xchg
pop
cmp
push
jbe
xor
mov
sti
scas
dec
xor
add
push
jp
iret
fnsave
adc
jns
jmp
inc
fnstsw
mov
mov
bound
gs
cmpsb
push
cmpsb
icebp
lcall
enter
dec
jno
push
push
inc
mov
fwait
push
ret
out
rolb
jp
addr16
inc
xchg
sarb
lods
mov
jns
testb
outsb
mov
std
and
in
incb
dec
xchg
aam
aam
cltd
cwtl
mov
jb
rorl
push
fnstenv
das
dec
sbb
dec
out
dec
sub
inc
inc
xor
movsb
cmp
sbb
out
mov
testb
mov
aad
lock
mov
iret
daa
out
adc
je
scas
mov
roll
pop
sub
lret
test
push
xor
add
xchg
dec
jecxz
mov
mov
mov
mov
pop
pop
inc
sub
insl
movsb
jb
int
push
adc
add
xor
aaa
and
jl
inc
popa
adc
in
xor
cli
push
xchg
mov
adc
adc
push
or
faddl
test
scas
xchg
das
movsl
xchg
pop
jbe
js
xor
outsl
int3
or
mov
jno
addb
movsl
sbb
push
in
dec
xchg
mov
pop
adc
les
jbe
cli
imul
mov
mov
dec
pushf
xor
cs
int3
orl
mov
dec
dec
stc
mov
sahf
stos
rclb
scas
sub
jbe
dec
or
imul
push
into
lcall
jmp
push
cmpsb
and
and
cmp
leave
xchg
lahf
lods
pop
mov
out
mov
cmovp
push
mov
push
pusha
daa
scas
sbb
aas
xchg
scas
scas
xchg
cmpsb
pop
sbb
or
lds
bound
cmc
test
mov
repz
cmp
xchg
mov
fs
push
push
mov
cli
imul
jae
sahf
sub
cld
stos
lret
mov
mov
int3
jno
jns
pop
faddl
push
movl
lods
mov
shl
push
cwtl
test
push
pop
pop
dec
adc
push
fidivrl
dec
enter
ret
pop
jle
pop
cs
ret
pop
push
rcl
inc
fs
mov
ljmp
xchg
scas
mov
sbbb
mov
pop
daa
scas
push
xchg
fadd
mov
ja
out
or
loop
test
mov
inc
cmpl
lret
and
out
sbb
sbb
leave
add
inc
cmp
cltd
push
xor
jae
and
mov
pop
test
mov
movsb
inc
inc
andl
cmp
cwtl
jge
sbb
jnp
cmpsl
dec
push
loope
lods
outsb
cld
loopne
shlb
ja
pop
jnp
pop
push
imul
out
and
and
sbb
sub
outsb
pop
cmc
mov
dec
mov
stc
mov
iret
outsl
dec
mov
lock
pushl
subsd
aad
mov
pop
ror
mov
pop
cmp
or
xor
mov
sub
lret
mov
mov
pushf
cli
pop
movsb
mov
mov
mov
xor
es
add
pusha
add
bsr
sbb
scas
xchg
scas
xchg
dec
mov
cmp
lcall
push
jge
mov
mov
inc
test
mov
xor
xor
fsub
mov
pop
sahf
and
ja
jb
lds
lret
push
out
inc
and
jmp
cmpsl
mov
and
stos
imul
stos
std
test
aas
andb
adc
stos
icebp
rcll
insb
dec
pop
dec
cli
mov
xlat
ret
lahf
jb
mov
jbe
scas
adc
int3
cmp
clc
xor
cmpsl
leave
dec
xor
xchg
sub
scas
int
push
pushf
pop
aas
call
clc
mov
mov
fucom
insl
xchg
xchg
or
mov
mov
sub
add
lcall
leave
loopne
cwtl
jl
xor
out
in
or
and
mov
mov
or
std
rol
insl
loop
sbb
shrb
xor
adc
sti
adc
ja
lods
popa
push
inc
pop
adc
xlat
dec
and
xadd
shll
and
test
daa
jp
add
sub
cmp
mov
lock
adc
mov
scas
filds
stc
mov
cmp
pushf
cmp
fmull
push
lea
and
xor
push
cmp
jb
mov
jge
lret
aad
bound
cmp
lods
clc
pop
cmpsb
mov
adc
jo
vshufps
arpl
sub
pop
scas
add
stos
push
das
stos
push
xor
pop
orb
lahf
imul
inc
inc
ss
jo
jns
push
sub
xchg
jo
sub
in
mov
sub
loop
data16
sbb
xchg
out
lret
fistl
cltd
add
mov
or
adc
cmc
push
inc
rcr
push
insl
mov
xchg
mov
mov
and
pop
mov
mov
mov
add
add
lods
sti
add
or
outsl
jb
lret
pop
or
test
lods
xor
and
jecxz
mov
push
outsb
enter
mov
cmp
vmwrite
repnz
mov
les
xor
scas
cld
cmp
mov
and
fcoml
outsb
xchg
andb
lds
pop
push
outsb
jecxz
add
in
jmp
dec
inc
rorl
push
xchg
sti
lret
xor
lcall
mov
inc
sub
enter
and
sub
lret
sub
cmp
das
adc
int
data16
repz
es
pop
inc
adc
lret
shll
mov
dec
push
jmp
push
jge
jl
and
in
fmull
adc
pop
lds
and
and
pop
xchg
repnz
ljmp
sbb
ss
int
jge
sub
mov
enter
cmp
nop
add
lcall
int
push
inc
mov
or
sbb
scas
cmp
aas
aam
dec
sub
jb
rclb
mov
dec
xor
xor
movsl
xlat
mov
and
push
fwait
outsb
jecxz
or
adc
cltd
inc
ficoms
dec
rolb
sahf
cmpsl
mov
xlat
repz
call
movsl
sar
scas
mov
leave
adc
push
push
jecxz
push
popa
mov
mov
lea
pop
or
push
xchg
imul
mov
pop
mov
mov
roll
xor
outsl
cld
lret
fistpl
mov
ret
pop
adc
mov
pop
std
test
repnz
add
xorl
mov
dec
call
js
addr16
pop
mov
repnz
mov
out
xchg
cmp
jmp
fcomip
movsb
push
cmpsl
out
aaa
mov
mov
pop
mov
les
fildl
rolb
push
je
dec
aam
push
ja
loopne
fxam
and
adc
cmp
shlb
testl
out
lock
test
gs
push
push
lods
xor
cltd
jb
mov
ljmp
pop
nop
or
mov
clc
mov
test
push
and
adc
cltd
insl
jne
out
pushf
add
push
jmp
js
pop
add
inc
clc
enter
xchg
daa
cld
popl
mov
dec
test
stos
push
pusha
mov
in
shrb
xchg
jge
rcll
fidivrs
mov
int
mov
cmp
mov
and
inc
cmp
inc
cs
icebp
addr16
sti
push
xchg
aam
insl
sti
push
jle
cmc
cwtl
pop
sbb
adc
pop
jmp
stos
insl
ret
push
pop
cwtl
gs
les
pusha
stos
notl
mov
mov
xchg
mov
pop
insb
adc
mov
loop
addr16
nop
jbe
mov
xlat
sbb
je
sbb
cltd
leave
outsl
out
add
stos
rolb
popf
and
mov
or
jnp
fwait
out
test
movsb
sbb
mov
xor
daa
mov
bound
stc
lret
jle
sbb
mov
mov
mov
out
in
xchg
in
add
popf
add
lods
mull
mov
sub
fnsave
addr16
xchg
sub
add
shlb
xchg
push
cmp
cli
pushf
mov
xchg
fildll
xor
not
and
mov
scas
xor
pop
iret
roll
xchg
dec
out
pop
cmc
or
icebp
clc
imul
pop
cmpsl
mov
fidivl
xchg
fistps
fildl
sbb
sahf
adc
shl
sahf
imul
mov
pop
jmp
dec
sti
mov
mov
lds
xchg
bound
mov
xchg
sub
mov
insb
je
push
or
daa
xchg
sbb
stos
xchg
std
hlt
pop
push
dec
in
push
push
jl
and
lods
push
xor
aaa
mov
cmp
dec
adc
push
inc
gs
jg
leave
rclb
out
ss
cmp
mov
lea
fwait
dec
cwtl
push
or
jnp
pop
loopne
shll
mov
aas
dec
pop
mov
idivl
mov
push
and
je
lret
or
pop
fimuls
push
adcl
and
or
mov
psubq
in
or
sub
leave
jge
xor
loop
sbb
aaa
pop
sbb
and
jo
sbbl
fcmovnbe
loop
xchg
mov
mov
outsl
push
sbb
out
out
cmp
cwtl
push
ret
mov
and
inc
lods
mov
dec
inc
cmpsl
sbb
subl
mov
push
mov
and
cld
or
ja
pop
lds
xchg
es
call
cmp
mov
pop
popa
sub
mov
cmp
jg
jnp
cld
cmp
lahf
addr16
popf
lock
clc
inc
push
pushf
lret
rcrb
dec
cld
sub
stos
cmpsb
sub
leave
testl
dec
cmp
test
mov
mov
push
push
mov
out
dec
lock
loope
mov
test
sub
mov
mov
inc
pop
aas
or
les
cmp
cld
call
sbb
aad
outsl
fmull
sbb
cmp
arpl
xchg
and
adc
daa
bound
lds
cmp
ret
jg
push
lock
fstp
xchg
jns
in
sub
cmp
inc
call
cmp
xor
testb
push
rcl
mov
add
fwait
cmp
movsb
shl
pop
fldcw
fistpll
outsb
shrb
sbb
xor
dec
das
inc
sbb
pop
sahf
mov
sbb
fistl
pop
dec
adc
addr16
out
cli
push
cmp
fldcw
js
pushf
js
pop
fadd
adc
fnstsw
mov
sahf
ret
xchg
jb
addb
jbe
cmp
aad
stos
nop
jno
pop
jo
jne
mov
add
jno
enter
and
inc
mov
cmp
push
notl
jo
test
enter
inc
pop
pop
not
scas
lcall
mov
lcall
cmp
xchg
int3
sbb
add
jnp
in
hlt
cmp
mov
out
or
in
jp
inc
daa
addb
cmp
or
xchg
movsl
iret
cmp
scas
cmp
jns
movsb
cltd
shrl
loopne
inc
jo
int
inc
imul
repz
jne
lret
in
gs
insb
push
inc
adc
mov
xchg
inc
loope
inc
js
sti
mov
push
sbb
arpl
jle
hlt
inc
shlb
jmp
pop
push
mov
ss
aad
cmp
rorb
or
dec
or
mov
jnp
test
ret
jp
aad
or
aam
mov
mov
cmpsl
and
jno
fnstsw
or
lret
pop
icebp
jne
shll
cmp
int3
push
jl
or
and
jle
popf
push
lods
and
inc
pop
test
adc
sub
cld
mov
imul
xorb
mov
fbld
imul
xchg
fs
or
loope
loop
lock
mov
in
push
stos
imul
jp
xor
or
negb
mov
push
nop
ja
push
cmp
mov
push
xchg
jbe
mov
sub
push
mov
out
sub
addr16
scas
xor
pop
dec
mov
aam
dec
sbb
xor
ljmp
lock
test
sbb
lfs
xchg
or
and
cmpl
hlt
mov
lods
or
xchg
sbb
adc
dec
lea
push
sbb
mov
out
std
fistl
xor
xor
fs
sti
dec
jne
stc
mov
aad
jle
mov
repnz
hlt
scas
or
popf
out
jnp
loope
xor
ljmp
in
test
jb
loop
fcomps
addr16
outsb
push
cmp
popf
hlt
hlt
push
cld
xchg
xor
scas
push
mov
push
cltd
shlb
data16
icebp
mov
push
mov
dec
cmpl
cmp
jge
enter
mov
or
mov
into
push
loope
lds
jbe
ja
jle
les
ljmp
es
lcall
sahf
subb
popf
add
mov
stos
xor
lret
cmp
and
loope
fs
stos
jno
cmpsb
in
adc
dec
push
mov
imul
jge
int
or
mov
cli
cltd
mov
pushf
repnz
out
popf
lock
dec
in
xchg
pop
testl
ret
out
imul
gs
mov
cwtl
xchg
int
and
pop
nop
add
xor
pop
popa
clc
and
dec
xchg
inc
push
test
iret
pop
mov
jmp
jns
push
add
inc
je
jbe
fnsave
jno
in
in
cmp
stos
out
jne
xchg
sub
rcll
fisubl
cli
in
leave
pop
inc
loope
ds
jno
mov
scas
sub
aaa
popf
dec
rclb
mov
cmpb
push
imul
cld
jl
popf
imulb
ja
repz
repz
inc
push
pop
inc
sbb
push
xchg
xor
dec
sub
bound
ret
mov
or
lods
cmc
sahf
and
mov
jb
nop
imul
sbb
and
out
mov
into
repz
shr
inc
aas
js
xor
add
inc
insl
scas
aas
push
push
xchg
inc
mov
push
test
in
shrb
jns
sahf
outsl
jle
push
sbb
loopne
nop
out
call
push
adc
js
icebp
mov
mov
fs
cmpsb
int
in
jg
fisttps
jge
in
negl
add
pop
inc
xchg
out
pop
pop
fucomp
rolb
fdivl
inc
dec
fwait
movsb
ret
scas
jae
clc
push
sti
dec
and
ret
cmp
or
mov
xor
ljmp
add
mov
mul
lret
rolb
pop
xchg
push
clc
pop
adc
cmp
out
push
insb
push
stos
and
inc
dec
roll
inc
nop
mov
and
add
jl
outsb
gs
pop
mov
xacquire
sub
push
outsl
inc
repz
mov
xlat
jbe
sbb
mov
cmp
imul
cmpsb
xchg
or
sbb
inc
nop
xchg
repz
leave
idivl
xchg
xorl
inc
out
sbb
aaa
mov
push
in
cltd
add
cmp
dec
pop
daa
xchg
lret
inc
pusha
leave
push
cwtl
lock
pop
mov
rcrb
cmp
or
insb
test
jecxz
push
dec
inc
mov
pop
adc
pshufw
ds
sbb
xchg
dec
jb
and
cltd
jb
mov
mov
dec
out
xor
pop
lret
rcrb
jl
inc
aad
dec
fnstenv
outsl
fwait
adc
mov
adc
sbb
pop
push
in
iret
lods
mov
cmp
cmp
push
in
dec
ja
inc
scas
sub
push
xchg
test
or
pushf
lds
push
ss
mov
or
jmp
mov
sbb
pusha
ds
stc
mov
jno
jnp
dec
inc
push
loopne
out
jb
leave
sub
mov
mov
ss
cmp
cmp
call
add
xchg
lds
jle
std
jl
sbb
call
mov
mov
rorl
mov
shll
or
lea
mov
mov
mov
stos
pop
ret
dec
jne
mov
mov
xchg
mov
fisubrs
sarb
mov
divl
mov
insl
cmp
and
mov
pop
movsl
repz
mov
mov
or
lcall
jge
inc
and
lds
mov
subl
push
rorl
lock
cli
jnp
pop
adc
adc
mov
sbb
insl
cmp
push
sbb
add
aad
xchg
adc
cltd
fcomp
xchg
pusha
lds
repnz
push
mov
lea
mov
push
xchg
call
int
lea
jnp
in
sub
std
add
stos
jns
adc
cwtl
lret
loope
inc
dec
les
imull
push
pusha
aam
sub
rorl
sub
imul
pop
jne
cmpsb
gs
inc
imul
shrl
and
lahf
xchg
aad
push
lods
and
sub
and
in
inc
hlt
xor
dec
jno
hlt
daa
mov
mov
mov
rcr
sub
daa
pop
popl
jecxz
jo
sar
adc
mov
push
hlt
inc
or
xor
dec
inc
iret
sbb
pop
out
in
cmp
jo
in
cmpsb
lods
mov
pop
jecxz
lret
mov
and
movsb
imulb
pop
lahf
popf
and
dec
rcll
int3
jle
ds
lds
mov
pop
xor
xchg
push
and
les
mov
pop
icebp
add
insb
push
cltd
xchg
cmp
rcrb
or
xor
mov
push
out
and
jmp
jle
test
ficompl
int3
add
xchg
xor
cs
and
pop
jmp
inc
mov
inc
das
cmp
lret
lret
sub
out
mov
push
minps
pop
push
ljmp
rcrb
daa
ret
sbb
data16
movsl
and
call
xchg
fildll
push
push
mov
clc
mov
pop
jle
dec
mov
out
sbbl
incb
adc
mov
nop
in
add
pusha
sbb
test
dec
int
stos
mov
mov
sbb
pop
xor
mov
adc
add
inc
pop
dec
iret
scas
push
aas
outsl
clc
xchg
addr16
cmpb
dec
xchg
cmp
cmpsl
dec
inc
xor
xchg
add
gs
mov
inc
mov
and
icebp
jbe
imul
int
mov
jmp
out
add
enter
or
pop
pop
and
push
pop
add
sbb
dec
jbe
fstpt
outsb
les
movsb
dec
outsb
and
add
addl
push
mov
imul
sbb
rolb
icebp
cmp
iret
xchg
das
rcll
jb
mov
pop
xor
sub
fwait
mov
sbb
orb
inc
or
loope
inc
mov
mov
cmp
gs
inc
and
or
clc
cs
mov
jg
pop
fnsave
std
das
addr16
lods
insl
dec
mov
xchg
rolb
dec
cwtl
pusha
rcrl
pop
xor
and
mov
data16
std
mov
popf
xchg
fimuls
vmptrld
mov
jno
dec
aam
call
mov
add
pusha
sub
push
inc
or
sub
jae
mov
mov
adc
in
pushf
jecxz
dec
xchg
xlat
mov
mov
leave
movsl
sub
imul
add
ja
xlat
xchg
movsb
pop
jo
ljmp
xor
cmpsb
sbbl
pop
jecxz
lods
and
or
arpl
or
aaa
out
xor
icebp
cltd
sub
aaa
fbld
sub
and
mov
lcall
sub
imull
dec
imul
pusha
push
sub
test
pusha
push
repz
imul
cmp
sahf
pop
pop
xor
mov
push
cli
out
shlb
adc
out
aam
je
cld
lods
stos
sub
neg
jle
xchg
sarl
mov
and
cli
cmp
xchg
adc
fistl
movsl
push
pop
out
mov
mov
jae
mov
cwtl
shrl
jp
cwtl
jno
sub
mov
mov
add
int
pop
int
mov
ja
js
inc
and
mov
and
int
aam
in
sahf
data16
mov
cmp
popf
sahf
movsl
lsl
lahf
inc
call
xlat
mov
jnp
mov
pushf
fisttpll
sub
lock
sbb
lods
mov
inc
push
cld
mov
pop
ss
stos
clc
ss
dec
fdivl
loopne
mov
jg
push
in
inc
xor
icebp
cmp
bound
push
and
sub
test
jge
pusha
fidivrs
arpl
add
repnz
movsl
push
cmpsb
es
pmaxsw
ret
lock
repnz
mov
dec
dec
xchg
arpl
mov
lret
push
ljmp
imul
arpl
jg
fidivl
pop
pusha
inc
imul
mov
mov
sub
js
adc
add
lcall
dec
rorb
pop
or
xlat
dec
lret
adcb
outsb
shl
cmpsb
lods
xor
cmp
xor
mov
in
dec
ret
jl
fdivs
lcall
or
pop
sub
rcl
and
lds
fwait
call
xchg
push
mov
push
out
divb
shlb
xor
mov
dec
mov
lret
out
rclb
dec
lcall
jno
lea
hlt
out
push
fistpl
repz
jmp
add
rcll
cld
push
pusha
add
mov
out
ret
shlb
call
mov
push
sti
fnstcw
sub
das
pop
popf
scas
divl
xchg
push
cltd
add
ss
add
nop
adc
shll
mov
push
or
or
in
ret
jg
cmpsb
rclb
rcll
lds
loope
jno
outsb
stc
mov
jge
and
insb
or
ss
push
xchg
test
mov
loopne
push
daa
popa
outsb
lds
jmp
lahf
movl
or
iret
aam
mov
lock
sub
sar
shl
xor
pop
rorl
out
xchg
shrb
imul
add
mov
jge
loope
rcll
mov
dec
jne
sub
aaa
shlb
cmp
inc
ret
or
fisubl
into
cmp
or
ds
cmp
loop
mov
mulb
xchg
and
push
mov
movsb
xchg
mov
pop
sub
pop
dec
xchg
push
ret
and
xor
pop
jle
jg
cwtl
mov
sarl
inc
std
jbe
mov
subb
loope
nop
pushf
hlt
and
add
mov
dec
pop
add
cmp
sbb
into
or
jmp
or
and
sub
or
xchg
mov
lock
nop
cmpsb
ljmp
inc
fdivrp
cmp
ret
shll
lods
mov
jp
or
jecxz
xor
clc
sub
mov
jno
mov
mov
sub
pushl
js
bound
mov
loop
dec
add
jnp
and
sbbb
lods
mov
and
add
rorb
sub
in
and
mov
shll
ret
xchg
xor
sbb
stc
fisttpll
iret
adc
and
push
cwtl
push
add
cmpl
fimull
lea
fmulp
mov
sub
shl
sbb
mov
cmpsb
mov
movsl
test
outsl
jo
and
pop
xor
jbe
lds
jecxz
push
ss
leave
js
ficompl
stos
lret
lahf
xor
clc
jg
pop
fscale
pop
sbb
dec
mov
fistpl
shlb
out
dec
loopne
in
imul
sub
adc
pusha
inc
stos
gs
push
stc
adc
lahf
ret
adc
xor
lods
lods
push
cltd
fadds
mov
push
and
cmp
push
mov
in
adc
mov
lods
lods
stos
mov
sti
push
inc
jns
adc
sbb
jnp
sbb
outsl
and
ss
push
push
cltd
mov
push
jo
push
and
inc
cld
fwait
sbb
and
mov
xchg
push
loop
jge
push
fcoml
adc
pop
adc
fdivr
pushf
mov
xchg
sahf
inc
sub
add
mov
sub
mov
ja
mov
lahf
je
mov
cli
adc
jmp
jp
cmc
xor
and
test
xlat
loop
jge
lds
xchg
xchg
push
mov
scas
dec
jb
and
push
nop
in
mov
stos
ja
or
xor
push
int
lret
jp
shrb
notl
dec
pop
mov
inc
inc
cmc
sbb
pop
sbb
sub
test
xchg
imul
cld
ss
out
cli
or
int
js
dec
jl
dec
cmp
scas
mov
sbb
cltd
sbb
or
js
scas
inc
data16
or
rorb
sahf
movsb
mov
dec
mov
int
lds
jbe
movsb
push
rolb
jo
mov
loop
sub
cli
ret
sti
lahf
mov
ljmp
popf
fwait
mov
fnsave
inc
shlb
pop
jae
test
iret
sbb
out
pop
mov
and
ljmp
in
or
loope
je
fiadds
sbb
pop
dec
hlt
xchg
lahf
mov
ds
lods
push
in
adcb
dec
sahf
pusha
stc
rorb
into
dec
std
jmp
out
mov
cltd
adc
add
push
punpckhbw
test
and
out
xor
in
or
jl
xor
or
or
lock
jo
data16
mov
dec
dec
sbb
ss
rcll
lret
lods
or
insl
je
or
add
lods
or
mov
out
inc
int3
js
xor
mov
add
fimull
cmp
pusha
push
mov
inc
outsb
mov
ret
pop
sbb
out
mov
push
adc
push
pop
fadds
incb
insb
or
jno
jns
std
into
fisubs
adc
out
xor
xchg
scas
lds
xchg
pushf
loop
pop
pop
jmp
mov
outsl
addr16
aas
stos
rorb
cld
addr16
imul
mov
inc
movb
outsl
dec
sbb
ret
fucomi
repnz
mov
jbe
fs
push
jmp
movsb
inc
pop
addl
vmovq
mov
jae
stc
gs
cmpsl
adc
cmp
xor
cli
sub
mov
xchg
lods
sub
jp
xor
outsb
cwtl
sbb
xchg
push
fidivl
pop
jg
adc
lret
stc
aam
push
stc
jbe
out
adc
mov
xchg
and
shlb
repnz
mov
in
or
je
push
inc
rcl
inc
mov
imul
mov
in
mov
sbb
jns
clc
push
cli
mov
aaa
imul
mov
mov
xchg
xor
pop
add
push
imull
push
pcmpeqw
push
div
je
int
push
outsb
aam
ror
xchg
aaa
in
lcall
rolb
loop
cmp
dec
bswap
jp
ljmp
mov
movsl
sub
mov
push
rorb
add
mov
js
sbb
dec
mov
jp
jne
push
mov
pop
aam
xor
push
or
mov
xchg
jno
or
popf
xlat
iret
scas
mov
fxtract
lock
mov
dec
bound
jo
dec
fmul
fldt
and
sub
fbld
push
lds
hlt
js
bound
dec
xchg
cmp
mov
dec
xor
mov
xchg
jp
lods
repnz
push
notl
outsl
out
out
popa
repnz
mov
cs
stos
lret
roll
push
inc
mov
gs
insb
test
arpl
inc
and
fisubrs
xor
push
adc
or
mov
sbb
dec
loope
mov
cmpsb
insl
fsubs
iret
rcr
mov
inc
out
jbe
pop
add
cmc
int
and
push
imul
out
sahf
jle
jmp
xchg
out
hlt
aam
out
and
fistl
fsub
ja
mov
lea
xchg
add
mov
xchg
sbbl
fs
adc
int3
popa
inc
icebp
scas
mov
jae
std
pusha
sbb
xchg
in
hlt
movsl
or
dec
cmpsl
lret
into
lods
jbe
ret
xchg
jno
sub
aaa
dec
je
inc
cli
xor
mov
aad
mov
jle
jle
push
jno
loope
scas
cmp
xor
jbe
cmpsl
jl
fistl
mov
lcall
sbb
dec
repnz
out
adc
cmp
push
add
out
notb
popf
inc
ja
xchg
jg
push
enter
adc
xor
lcall
sti
cmp
xor
cs
es
mov
and
xchg
xor
movsl
push
add
aas
jbe
jo
or
mov
sbb
or
jecxz
or
es
fwait
mov
shlb
rorb
mov
jbe
mov
mov
dec
jnp
mov
xchg
pop
insl
pop
adc
push
stos
dec
inc
repnz
adc
pop
fs
ror
jno
mov
mov
es
add
test
iret
fs
jo
push
cmp
decl
inc
pop
out
repz
pop
dec
or
cmp
lret
sub
adc
icebp
ret
sub
idiv
push
mov
fsubrl
dec
and
in
jg
push
mov
mov
les
or
mov
dec
jno
rcrb
pop
cs
jg
mov
shll
pop
mov
das
xchg
xchg
ret
cs
xor
mov
push
xlat
cmp
mov
test
adc
push
fdiv
stos
arpl
lods
test
adc
std
arpl
xchg
int3
jns
pop
add
pushf
or
ret
nop
nop
or
inc
ret
mov
jl
das
cmp
adc
insl
mov
jecxz
push
nop
mov
cmp
imul
jae
push
icebp
sub
mov
and
mov
out
test
mov
fsubl
xchg
movsb
lahf
outsb
movsb
inc
stc
hlt
lds
notl
mov
jno
push
add
jae
pop
enter
push
xchg
orb
test
das
jns
add
call
cmp
mov
jl
sbb
repz
rclb
aas
subb
cs
jo
in
mov
je
xchg
xor
mov
cmp
sub
push
test
int3
pop
mov
pop
inc
inc
jb
repz
adc
push
in
sub
jle
ret
pop
loopne
and
push
sarb
pop
imul
adc
or
xchg
ss
mov
aad
mov
jge
and
dec
test
push
xor
mov
or
mov
in
js
dec
pop
cld
out
or
adc
sbb
jp
push
cmp
and
jle
mov
ret
mov
pop
adc
and
lds
fsubrs
icebp
adc
out
and
sub
movsb
andb
sub
xor
in
addr16
int
mul
lahf
xlat
adcb
insb
add
adc
or
lds
andl
pop
xchg
aam
cli
cltd
cmp
push
out
out
iret
xchg
pop
nop
pop
ss
je
addb
push
mov
mov
ret
pop
mov
mov
out
xor
in
mov
loope
and
sub
pop
jmp
push
dec
das
mov
sbb
sti
loope
and
int3
scas
es
daa
push
mov
rclb
add
dec
push
nop
dec
push
lods
xor
inc
push
xchg
je
daa
shll
jne
mov
adc
cmc
jp
into
dec
mov
pop
sbbb
dec
sbb
inc
in
hlt
xchg
test
adc
in
dec
pop
imul
in
mov
sar
adc
int3
dec
mov
or
out
testb
ja
fcoms
cmc
bound
insl
xor
pop
sbb
in
xor
or
dec
xor
jae
stos
mov
jp
mov
and
int3
arpl
rclb
xor
aas
and
fimull
jmp
shlb
xchg
sti
outsb
adc
mov
in
cmp
test
cwtl
mov
dec
or
pop
test
mov
cli
test
int
mov
rorb
leave
sbb
pop
fidivl
cli
mov
push
sbb
or
jp
scas
lods
jne
jecxz
rorb
cmp
or
rcl
push
push
fdivr
nop
jb
xlat
jg
or
fdivl
push
push
dec
lret
fistpl
sub
je
std
stc
hlt
mov
imul
sbb
andb
cmp
and
es
je
mov
mov
inc
les
adc
mov
adc
adc
ja
mov
scas
xor
das
cmp
push
push
aad
clc
movsl
cld
rcll
fs
jge
and
jns
stc
fnstcw
add
xor
fwait
xchg
mov
loope
out
ret
fists
movsb
jbe
inc
ds
ds
into
xchg
inc
sub
dec
sbb
js
xchg
call
inc
mov
lea
jmp
add
lock
dec
inc
and
inc
dec
mov
pop
xchg
cmp
enter
insl
stos
inc
andl
mov
sub
and
ret
popf
mov
mov
fmul
jbe
loopne
pop
imul
in
mov
sar
adc
int3
dec
mov
or
out
testb
ja
fcoms
cmc
bound
insl
xor
pop
sbb
in
xor
or
dec
xor
jae
stos
mov
jp
mov
and
int3
arpl
rclb
xor
aas
and
fimull
jmp
shlb
xchg
sti
outsb
adc
mov
in
cmp
test
cwtl
mov
dec
or
pop
test
mov
cli
test
int
mov
rorb
leave
sbb
pop
fidivl
cli
mov
push
sbb
or
jp
scas
lods
jne
jecxz
rorb
cmp
or
rcl
push
push
fdivr
nop
jb
xlat
jg
or
fdivl
push
push
dec
lret
fistpl
sub
je
std
stc
hlt
mov
imul
sbb
andb
cmp
and
es
je
mov
mov
inc
les
adc
mov
adc
adc
ja
mov
scas
xor
das
cmp
push
push
aad
clc
movsl
cld
rcll
fs
jge
and
jns
stc
fnstcw
add
xor
fwait
xchg
mov
loope
out
ret
fists
movsb
jbe
inc
ds
ds
into
xchg
inc
sub
dec
sbb
js
xchg
call
inc
mov
lea
jmp
add
lock
dec
inc
and
inc
dec
mov
pop
xchg
cmp
enter
insl
stos
inc
andl
mov
sub
and
ret
popf
mov
mov
fmul
jbe
loopne
hlt
js
inc
mov
xor
test
daa
dec
out
xor
int3
fwait
arpl
pop
adc
outsb
and
ficompl
fsts
jnp
and
cli
mov
fiaddl
mov
aas
add
jno
and
dec
loop
ret
pop
adc
pusha
out
out
jns
inc
push
lcall
icebp
hlt
jns
push
push
fstpl
mov
dec
and
je
dec
addr16
movsb
pop
out
out
jmp
or
mov
push
cmc
iret
xchg
call
imul
pshufw
sub
jp
lods
push
std
scas
jl
inc
sub
test
xchg
add
mov
cmp
das
lret
nop
adc
jb
add
lret
in
add
divb
lds
scas
leave
inc
mov
xchg
sti
inc
js
scas
jno
fldcw
ficompl
xchg
mov
or
push
push
ss
sub
or
cld
pop
push
cmp
das
pusha
ds
inc
fmuls
ss
mov
cmp
sarb
popa
cmpl
jae
rcl
and
mov
xchg
and
cmp
xchg
lds
test
enter
pop
pop
and
aaa
sbb
leave
and
xchg
add
ss
dec
sbb
scas
dec
iret
les
fimull
jb
mov
in
testb
and
stc
les
sub
xor
lcall
cli
add
cmp
scas
cld
jae
dec
test
stc
inc
fisttpll
mov
push
push
add
add
mov
imul
ret
fnsave
add
loope
jge
adc
lods
mov
push
push
popf
mov
pop
mov
mov
push
pop
jmp
cmpsb
sbb
int
mov
lahf
xchg
test
mov
fmuls
mov
sub
int
mov
ffreep
shll
jmp
xchg
lcall
or
adc
stc
arpl
mov
lret
mov
push
inc
aas
shrl
aas
dec
mov
ja
data16
dec
or
sbb
add
mov
jno
sbb
fs
xchg
jecxz
push
xchg
icebp
xchg
loopne
test
pop
or
std
notb
es
js
xor
push
popf
cmp
into
xchg
andl
inc
pop
insl
cmp
roll
popa
bswap
test
popf
jo
int3
popa
std
addr16
testl
and
jns
cs
xchg
sbb
xchg
stos
jg
fsubrs
dec
mov
ds
sbb
cmp
iret
mov
push
inc
and
or
xchg
es
push
add
js
jecxz
xor
fstpt
cmp
mov
xchg
xchg
jmp
fsubl
mov
push
in
test
jb
pop
xchg
sarl
icebp
xchg
xor
xlat
popf
fisttpl
pop
inc
pop
scas
fistl
mov
test
sti
imul
dec
pushf
cmp
cmpsl
repnz
push
enter
pop
add
or
xchg
rolb
test
rorl
pop
fcomps
xor
hlt
mov
lcall
pop
inc
mov
and
or
mov
pop
in
xchg
rcrl
out
loopne
cmp
lock
imul
mov
and
mov
lods
mov
cmp
jae
add
pop
push
cmp
mov
mov
cmp
or
cmpsl
shll
mov
sub
int
mov
ffreep
shll
jmp
xchg
lcall
or
adc
stc
arpl
mov
lret
mov
push
inc
aas
shrl
aas
dec
mov
ja
data16
dec
or
sbb
add
mov
jno
sbb
fs
xchg
jecxz
push
xchg
icebp
xchg
loopne
test
pop
or
std
notb
es
js
xor
push
popf
cmp
into
xchg
andl
inc
pop
insl
cmp
roll
popa
bswap
test
popf
jo
int3
popa
std
addr16
testl
and
jns
cs
xchg
sbb
xchg
stos
jg
fsubrs
dec
mov
ds
sbb
cmp
iret
mov
push
inc
and
or
xchg
es
push
add
js
jecxz
xor
fstpt
cmp
mov
xchg
xchg
jmp
fsubl
mov
push
in
test
jb
pop
xchg
sarl
icebp
xchg
xor
xlat
popf
fisttpl
pop
inc
pop
scas
fistl
mov
test
sti
imul
dec
pushf
cmp
cmpsl
repnz
push
enter
pop
add
or
xchg
rolb
test
rorl
pop
fcomps
xor
hlt
mov
lcall
pop
inc
mov
and
or
mov
pop
in
xchg
rcrl
out
loopne
cmp
lock
imul
mov
and
mov
lods
mov
cmp
jae
add
pop
push
cmp
mov
mov
cmp
or
cmpsl
shll
add
rcr
xchg
sarl
clc
out
int3
jl
int
aam
sahf
dec
jb
nop
jmp
in
std
sub
dec
fs
movb
mov
mov
rolb
movsl
test
lret
rol
ret
shlb
bndldx
push
notb
xor
pop
scas
sbb
mov
fists
sub
adcl
or
xor
dec
mov
mov
mov
shlb
sbb
shll
jne
mov
ret
mov
orb
loope
addb
mov
lahf
pusha
cmp
xchg
repz
jbe
insb
outsb
pop
rolb
push
das
fldenv
adc
daa
mulb
out
xchg
pop
test
push
pusha
inc
mov
cmpsl
bswap
pushf
jle
idivb
or
fildl
lods
sti
test
cwtl
dec
dec
adc
sahf
inc
ss
data16
push
and
jp
repnz
aad
jmp
add
std
sub
lea
xchg
pop
test
shll
fucomi
out
mov
je
scas
and
xor
test
mov
pusha
mov
mov
rorl
call
xor
cmpsb
je
mov
mov
add
pop
cmp
xchg
pop
pop
cmp
add
hlt
xchg
iret
inc
lea
and
fmul
mov
pop
add
js
cmp
push
aam
fimuls
sbb
pop
loopne
sub
adc
xchg
jbe
cmp
lods
data16
push
imul
jns
push
dec
jmp
and
push
imul
scas
movsl
jmp
repnz
xchg
inc
fcompl
inc
loopne
cld
or
mov
jb
ja,pn
pop
iret
xchg
adc
fistpll
js
js
sahf
and
and
lock
mov
mov
mov
sti
pop
pop
push
mov
test
jo
push
in
and
cli
cli
jne
daa
test
out
jae
sbbb
mov
dec
in
lock
sub
out
mov
in
in
lods
jne
aaa
inc
faddl
hlt
inc
sub
mov
pop
lahf
pop
insb
sbb
data16
sbb
sbb
test
mov
test
sbb
push
and
js
xchg
or
test
and
xor
iret
and
push
es
sbb
dec
arpl
jg
push
shlb
or
sti
adcl
in
mov
cmp
pop
sub
ret
cwtl
ret
dec
adc
addb
jmp
xorl
inc
fsts
mov
and
adcb
inc
bound
repz
stc
or
fbld
sbb
call
adc
and
sub
xchg
insl
push
mov
addr16
test
xchg
clc
shr
int
mov
push
leave
inc
pop
aad
jl
das
addr16
lret
fcmovb
movsb
mov
xchg
sbb
aas
stos
mov
popf
rcr
mov
jb
inc
aaa
js
xor
sbb
popa
fsubrs
adc
mov
repz
arpl
mov
arpl
insb
fadds
dec
aad
andb
imul
dec
and
jmp
add
sbb
addr16
loop
dec
jecxz
xchg
pop
mov
outsl
in
mov
jmp
mov
push
jge
lea
subl
push
jmp
dec
fistpll
sub
lock
inc
and
mov
push
sahf
lock
pop
arpl
mov
sti
pop
pop
push
mov
test
jo
push
in
and
cli
cli
jne
daa
test
out
jae
sbbb
mov
dec
in
lock
sub
out
mov
in
in
lods
jne
aaa
inc
faddl
hlt
inc
sub
mov
pop
lahf
pop
insb
sbb
data16
sbb
sbb
test
mov
test
sbb
push
and
js
xchg
or
test
and
xor
iret
and
push
es
sbb
dec
arpl
jg
push
shlb
or
sti
adcl
in
mov
cmp
pop
sub
ret
cwtl
ret
dec
adc
addb
jmp
xorl
inc
fsts
mov
and
adcb
inc
bound
repz
stc
or
fbld
sbb
call
adc
and
sub
xchg
insl
push
mov
addr16
test
xchg
clc
shr
int
mov
push
leave
inc
pop
aad
jl
das
addr16
lret
fcmovb
movsb
mov
xchg
sbb
aas
stos
mov
popf
rcr
mov
jb
inc
aaa
js
xor
sbb
popa
fsubrs
adc
mov
repz
arpl
mov
arpl
insb
fadds
dec
aad
andb
imul
dec
and
jmp
add
sbb
addr16
loop
dec
jecxz
xchg
pop
mov
outsl
in
mov
jmp
mov
push
jge
lea
subl
push
jmp
dec
fistpll
sub
lock
inc
and
mov
push
sahf
lock
pop
add
aaa
insb
filds
fmull
aam
add
xlat
stc
movl
pushf
out
outsb
cmp
adc
lahf
insb
xchg
sbb
push
cltd
lods
push
int3
inc
xchg
xlat
cwtl
sub
inc
cmc
add
jnp
inc
ss
push
xchg
push
sub
xchg
js
mov
hlt
nop
mov
pop
imul
nop
sbb
and
subl
mov
mov
or
add
mov
adcb
jb
mov
jb
test
push
sub
xor
sub
ficomps
divl
adc
in
or
cmpsl
inc
xor
lods
mov
pop
clc
sub
add
inc
mov
xchg
sub
iret
lahf
lret
pop
rclb
sub
inc
scas
push
ret
ret
pushf
push
mov
add
fwait
iret
jl
xchg
in
fmul
inc
insb
jmp
xchg
insb
inc
aaa
or
pop
inc
push
xor
out
data16
enter
data16
loopne
or
out
movsl
js
insb
cwtl
xchg
enter
pusha
frstors
sbb
subb
lds
jbe
aaa
cli
xchg
hlt
gs
xchg
imul
dec
and
cmc
daa
xchg
pusha
aas
bndldx
mov
cmpsb
js
jle
popa
out
push
inc
fisubrl
fs
iret
dec
ret
lahf
je
add
in
mov
cmc
mov
lea
hlt
mov
add
pop
sbb
sahf
mov
sbb
inc
sbb
popf
add
push
pop
insl
inc
test
add
cmp
in
loope
mov
inc
push
rorl
cs
cmp
repnz
sbb
negb
fcompl
add
movb
stos
jecxz
dec
inc
pop
ljmp
jl
fpatan
stc
and
int3
shl
push
lea
jecxz
imul
pop
xchg
cmpl
mov
cmp
aad
or
sbb
cmp
jae
or
sahf
mov
push
sbb
pusha
add
inc
push
and
and
js
loop
mov
sub
aaa
mov
push
push
sbb
pushf
mov
add
jo
dec
jg
cmpsl
inc
adcb
pop
mov
mov
mov
xchg
and
sti
dec
push
scas
in
xor
sarl
jg
nop
mov
ljmp
psubsb
mov
test
push
xchg
pop
pop
jnp
negl
cmp
outsl
leave
bswap
jmp
sub
mov
mov
and
fs
divb
cmp
pop
mov
popa
jg
rcll
jns
lock
and
pop
mov
adc
cmp
sub
je
sub
call
cmpsb
lea
xchg
cmp
negl
pop
push
pop
dec
dec
sub
pop
push
ljmp
loope
fs
push
fld
jge
and
xchg
jp
pop
and
pop
fsubs
xor
imul
test
je
fisubrs
adc
hlt
push
mov
push
jno
fildl
push
push
xchg
testb
xchg
fucomp
jae
cmp
jb
enter
push
push
pushf
iret
les
push
aam
aas
jmp
in
subl
jecxz
mov
aam
inc
enter
inc
pusha
push
fstl
pop
jnp
ret
jg
mov
out
add
insl
imul
pop
pushf
cmp
or
int
push
pushf
mov
xor
mov
xlat
jge
sbb
push
out
sub
sub
adc
or
xor
popa
push
xor
ja
loope
add
lea
jecxz
imul
pop
xchg
cmpl
mov
cmp
aad
or
sbb
cmp
jae
or
sahf
mov
push
sbb
pusha
add
inc
push
and
and
js
loop
mov
sub
aaa
mov
push
push
sbb
pushf
mov
add
jo
dec
jg
cmpsl
inc
adcb
pop
mov
mov
mov
xchg
and
sti
dec
push
scas
in
xor
sarl
jg
nop
mov
ljmp
psubsb
mov
test
push
xchg
pop
pop
jnp
negl
cmp
outsl
leave
bswap
jmp
sub
mov
mov
and
fs
divb
cmp
pop
mov
popa
jg
rcll
jns
lock
and
pop
mov
adc
cmp
sub
je
sub
call
cmpsb
lea
xchg
cmp
negl
pop
push
pop
dec
dec
sub
pop
push
ljmp
loope
fs
push
fld
jge
and
xchg
jp
pop
and
pop
fsubs
xor
imul
test
je
fisubrs
adc
hlt
push
mov
push
jno
fildl
push
push
xchg
testb
xchg
fucomp
jae
cmp
jb
enter
push
push
pushf
iret
les
push
aam
aas
jmp
in
subl
jecxz
mov
aam
inc
enter
inc
pusha
push
fstl
pop
jnp
ret
jg
mov
out
add
insl
imul
pop
pushf
cmp
or
int
push
pushf
mov
xor
mov
xlat
jge
sbb
push
out
sub
sub
adc
or
xor
popa
push
xor
ja
loope
add
shrb
sarb
test
adc
mov
movsb
addr16
out
sarl
cmpsb
dec
fldt
mov
bound
xor
sahf
mov
ljmp
bound
imul
jp
sti
jns
mov
mov
arpl
ja
sar
or
mov
in
fnsave
out
sub
sub
test
adc
jge
push
movsb
dec
xor
cmp
sbb
enter
popa
push
pop
lahf
xchg
fucomi
popa
sahf
insb
pop
fbstp
repnz
fucomp
sbb
addr16
gs
stos
sub
lock
insl
aad
dec
shll
dec
add
pop
add
add
jne
popa
mov
and
daa
es
mov
loope
adc
test
out
subl
dec
mov
das
jo
fsubrs
enter
push
mov
cwtl
mov
or
xlat
stos
data16
leave
inc
test
aaa
push
pop
jno
lret
out
mov
out
and
shlb
or
xchg
mov
bswap
nop
mov
jmp
xor
shrl
adc
sub
xchg
lods
jae,pn
inc
leave
xchg
stc
cld
stc
mov
outsb
ret
xlat
mov
dec
adc
jp
mov
adc
cmp
pop
xor
enter
pop
aaa
dec
mov
enter
mov
in
mov
clc
in
jne
test
adc
xchg
in
add
mov
sub
je
int3
or
aas
ffreep
jmp
outsl
enter
jae
fdivrs
mov
lcall
mov
xchg
pop
fcomps
pop
mov
push
jae
xchg
sub
in
add
iret
pop
lret
push
outsl
jo
cmp
inc
inc
inc
push
push
jg
sbb
stc
xor
lret
dec
xchg
adc
xlat
push
inc
jne
mov
push
in
xchg
repz
sub
jge
popa
icebp
push
cld
xchg
aas
push
cli
pop
dec
je
loop
cmp
mov
rcrb
cmp
jns
push
adc
test
test
pop
or
test
push
icebp
push
push
mov
jmp
mov
or
jl
or
cmc
cld
out
jnp
imul
jge
inc
test
cwtl
lcall
shr
jl
lods
pop
and
shrb
inc
pusha
add
lcall
outsb
mov
roll
sub
dec
jmp
sub
jg
cmp
xchg
adc
mov
inc
sbb
sbb
gs
pop
cmpsl
iret
cli
in
je
pushf
push
das
add
adcb
cmp
lea
cld
das
les
mov
push
mov
xchg
push
out
loop
cmp
xchg
in
push
or
push
pushf
call
xchg
test
dec
cwtl
jno
shlb
xor
pop
pop
fs
enter
pop
popa
jecxz
xlat
leave
mov
je
jl
pop
push
pop
pop
mov
mov
mov
and
iret
and
in
pop
cmpsl
test
mov
dec
add
cmp
test
jnp
sbb
cmp
test
or
stc
stos
and
mov
push
add
lret
inc
inc
fsubl
orb
mov
add
jae
and
push
cmp
mov
sti
out
cmp
add
dec
xor
dec
push
mov
adc
mov
cmp
cwtl
jp
lahf
stos
dec
push
cmc
inc
push
add
pop
and
loopne
xchg
push
and
mov
in
add
xor
popf
or
mov
scas
into
pop
cli
push
jg
sbb
stc
xor
lret
dec
xchg
adc
xlat
push
inc
jne
mov
push
in
xchg
repz
sub
jge
popa
icebp
push
cld
xchg
aas
push
cli
pop
dec
je
loop
cmp
mov
rcrb
cmp
jns
push
adc
test
test
pop
or
test
push
icebp
push
push
mov
jmp
mov
or
jl
or
cmc
cld
out
jnp
imul
jge
inc
test
cwtl
lcall
shr
jl
lods
pop
and
shrb
inc
pusha
add
lcall
outsb
mov
roll
sub
dec
jmp
sub
jg
cmp
xchg
adc
mov
inc
sbb
sbb
gs
pop
cmpsl
iret
cli
in
je
pushf
push
das
add
adcb
cmp
lea
cld
das
les
mov
push
mov
xchg
push
out
loop
cmp
xchg
in
push
or
push
pushf
call
xchg
test
dec
cwtl
jno
shlb
xor
pop
pop
fs
enter
pop
popa
jecxz
xlat
leave
mov
je
jl
pop
push
pop
pop
mov
mov
mov
and
iret
and
in
pop
cmpsl
test
mov
dec
add
cmp
test
jnp
sbb
cmp
test
or
stc
stos
and
mov
push
add
lret
inc
inc
fsubl
orb
mov
add
jae
and
push
cmp
mov
sti
out
cmp
add
dec
xor
dec
push
mov
adc
mov
cmp
cwtl
jp
lahf
stos
dec
push
cmc
inc
push
add
pop
and
loopne
xchg
push
and
mov
in
add
xor
popf
or
mov
addr16
repnz
out
jg
xchg
hlt
cmp
loope
mov
mov
jmp
and
fwait
pop
loop
jo
insb
add
jl
mov
add
mov
jmp
inc
xor
popf
pop
push
mov
mov
cli
add
inc
ja
mov
leave
icebp
shll
data16
rcll
xor
dec
cwtl
insl
js
push
or
push
jg
sub
insb
xlat
dec
cmc
add
cmpl
mov
xchg
pop
mov
int3
and
in
mov
ljmp
xchg
inc
mov
mov
mov
inc
push
sub
fsts
sti
aaa
stc
xchg
pop
dec
fmul
sbb
sahf
mov
mov
test
int3
push
ja
add
mull
mov
negb
icebp
je
outsb
mov
bound
rcrb
cmp
mov
dec
aad
jno
sbb
xchg
cmc
icebp
xchg
pop
movsb
and
sahf
mov
iret
xor
inc
dec
fcmovnb
aad
imulb
stos
in
lock
mov
scas
scas
das
loop
lcall
add
xor
pop
adc
lcall
mov
fiadds
fnstsw
dec
cmp
nop
test
jne
jbe
and
or
xor
stos
inc
test
fisttpll
fyl2x
and
ret
pop
pop
mov
pusha
outsb
arpl
add
rolb
push
xchg
sahf
in
and
adc
pop
outsl
dec
push
inc
jl
sbb
or
incl
push
ja
cltd
cli
dec
lret
xchg
push
shl
dec
shlb
push
aad
je
dec
dec
push
push
push
and
out
jno
arpl
mov
xor
lods
sub
int
shlb
lods
jo
xor
pop
fistl
dec
push
movsb
cmp
iret
sti
fstpt
rcll
add
clc
jl
xchg
aad
and
icebp
test
sbb
lret
jmp
adc
aaa
int3
jmp
loope
add
daa
lret
mov
xchg
pop
scas
jge
and
and
jo
xchg
loope
add
xor
and
scas
mov
data16
xchg
subb
rcll
inc
xor
rcrl
push
cmp
xchg
cmp
xor
int3
and
roll
int3
sbb
test
pop
inc
dec
xor
pushf
sbb
inc
jne
and
mov
pop
test
cmpsb
add
add
popa
jle
and
aas
add
in
rclb
jae
xor
nop
sbb
mov
pop
popl
xchg
push
dec
inc
jecxz
cld
push
mov
cli
push
mov
enter
loopne
stos
lcall
in
mov
push
and
std
bound
sbb
mov
cld
cld
push
xor
cmc
jo
aam
rorl
add
out
mov
fs
stos
out
in
fucomi
mov
icebp
pusha
arpl
loop
clc
ljmp
in
fnsave
and
cmpsl
mov
sub
mov
insl
stos
mov
sub
cmpl
xor
pop
fldz
fidivl
mov
fs
xchg
cmpsb
fists
in
lret
js
cmp
lret
fcmovu
mov
arpl
adc
adc
pop
bound
jp
in
pop
sub
mov
inc
and
mov
int
mov
test
outsb
jns
imul
loope
and
cmp
ret
push
add
in
int
and
or
mov
jno
icebp
jmp
mov
rcll
add
clc
jl
xchg
aad
and
icebp
test
sbb
lret
jmp
adc
aaa
int3
jmp
loope
add
daa
lret
mov
xchg
pop
scas
jge
and
and
jo
xchg
loope
add
xor
and
scas
mov
data16
xchg
subb
rcll
inc
xor
rcrl
push
cmp
xchg
cmp
xor
int3
and
roll
int3
sbb
test
pop
inc
dec
xor
pushf
sbb
inc
jne
and
mov
pop
test
cmpsb
add
add
popa
jle
and
aas
add
in
rclb
jae
xor
nop
sbb
mov
pop
popl
xchg
push
dec
inc
jecxz
cld
push
mov
cli
push
mov
enter
loopne
stos
lcall
in
mov
push
and
std
bound
sbb
mov
cld
cld
push
xor
cmc
jo
aam
rorl
add
out
mov
fs
stos
out
in
fucomi
mov
icebp
pusha
arpl
loop
clc
ljmp
in
fnsave
and
cmpsl
mov
sub
mov
insl
stos
mov
sub
cmpl
xor
pop
fldz
fidivl
mov
fs
xchg
cmpsb
fists
in
lret
js
cmp
lret
fcmovu
mov
arpl
adc
adc
pop
bound
jp
in
pop
sub
mov
inc
and
mov
int
mov
test
outsb
jns
imul
loope
and
cmp
ret
push
add
in
int
and
or
mov
jno
fcompl
xchg
or
push
in
mov
and
pushf
scas
mov
pop
mov
out
lods
loopne
mov
xchg
push
daa
sahf
lods
cli
sbb
pop
ret
pop
fwait
cmpsb
cwtl
sbbb
pop
add
cli
sahf
mov
mov
push
sbb
mov
insl
gs
popa
and
mov
cli
mov
stos
insb
mov
jnp
aas
scas
mov
lds
out
sbb
filds
mov
stos
andl
jl
data16
dec
cltd
out
add
fnstsw
adc
repz
and
push
xchg
jnp
scas
lock
aaa
mov
push
mov
enter
lods
loope
cli
test
push
shlb
pusha
out
sarb
push
lret
add
xor
push
in
inc
jne
push
hlt
sahf
mov
jg
add
fildl
loope
jne
test
sub
mov
sub
jp
xor
nop
mov
les
in
dec
jge
fwait
enter
ret
push
stc
or
notb
xor
int
out
xor
loope
inc
nop
je
inc
es
call
dec
out
cmp
pop
loop
jg
xor
hlt
repnz
xor
insb
idiv
cmpxchg
leave
xor
lea
pop
aaa
loop
dec
adc
leave
jne
adc
mov
imul
add
mov
jge
fistpl
enter
push
dec
or
dec
ds
mov
sub
push
sbb
imul
mov
lret
mov
cltd
out
fidivl
mov
lahf
cmp
js
lods
xlat
fwait
pop
add
cmpsb
add
std
inc
sub
sub
adc
pusha
push
out
mov
lods
xchg
push
adc
add
sti
enter
push
fsubrs
data16
mov
lret
jmp
cmp
scas
or
jg
dec
jle
loope
fisubl
arpl
dec
cmc
mov
or
mov
push
push
insl
lahf
push
push
push
push
mov
popf
in
popa
cmpsb
fistpl
mov
in
and
ja,pt
scas
incb
adc
lods
frstor
sarl
push
xchg
adc
fs
jnp
stc
push
add
popf
je
xlat
or
mov
push
out
dec
dec
out
pop
in
pushf
aad
iret
sub
and
movsl
sarb
idivb
out
dec
pop
out
js
les
sub
adc
in
and
mov
insb
movsb
fdiv
cmp
dec
add
cmp
inc
dec
imul
ss
iret
addr16
lea
xor
xchg
out
inc
push
dec
inc
int3
inc
mov
jne
sti
push
inc
lret
add
sbb
cld
cmp
xor
mov
xchg
enter
sbb
leave
sbb
insb
movsw
add
icebp
fs
sbb
icebp
ja
or
push
adc
bswap
sbb
push
xchg
adc
fwait
mov
xchg
cmpsb
cmp
mov
jbe
mov
sarb
ds
outsl
ficomps
out
stc
xchg
aas
mov
out
int
loop
je
lahf
ljmp
pop
push
aam
daa
mov
lods
and
push
pop
lret
mov
dec
jmp
test
jae
mov
mov
mov
lods
mov
jno
loop
ret
or
out
mov
mov
arpl
insl
jl
cmp
add
lods
sub
push
je
pop
inc
xchg
mov
cmc
call
sahf
xor
sbb
cli
cmp
pop
mov
movsb
push
aas
cwtl
rcl
lods
aaa
insl
jmp
loopne
jecxz
fstp
xchg
pop
add
rcrb
or
int
pmuludq
scas
mov
cmp
scas
or
jg
dec
jle
loope
fisubl
arpl
dec
cmc
mov
or
mov
push
push
insl
lahf
push
push
push
push
mov
popf
in
popa
cmpsb
fistpl
mov
in
and
ja,pt
scas
incb
adc
lods
frstor
sarl
push
xchg
adc
fs
jnp
stc
push
add
popf
je
xlat
or
mov
push
out
dec
dec
out
pop
in
pushf
aad
iret
sub
and
movsl
sarb
idivb
out
dec
pop
out
js
les
sub
adc
in
and
mov
insb
movsb
fdiv
cmp
dec
add
cmp
inc
dec
imul
ss
iret
addr16
lea
xor
xchg
out
inc
push
dec
inc
int3
inc
mov
jne
sti
push
inc
lret
add
sbb
cld
cmp
xor
mov
xchg
enter
sbb
leave
sbb
insb
movsw
add
icebp
fs
sbb
icebp
ja
or
push
adc
bswap
sbb
push
xchg
adc
fwait
mov
xchg
cmpsb
cmp
mov
jbe
mov
sarb
ds
outsl
ficomps
out
stc
xchg
aas
mov
out
int
loop
je
lahf
ljmp
pop
push
aam
daa
mov
lods
and
push
pop
lret
mov
dec
jmp
test
jae
mov
mov
mov
lods
mov
jno
loop
ret
or
out
mov
mov
arpl
insl
jl
cmp
add
lods
sub
push
je
pop
inc
xchg
mov
cmc
call
sahf
xor
sbb
cli
cmp
pop
mov
movsb
push
aas
cwtl
rcl
lods
aaa
insl
jmp
loopne
jecxz
fstp
xchg
pop
add
rcrb
or
int
pmuludq
scas
mov
es
sti
mov
mov
pusha
imul
jmp
rcrl
insb
fdivrl
xor
cmpsb
and
fidivl
mov
fcmovu
ret
lods
adc
sahf
adc
outsl
jle
out
jns
lret
jbe
xor
sub
jbe
stos
xor
sbb
fldcw
mov
outsb
pop
arpl
add
cmp
mov
xor
je
imul
inc
mov
in
rolb
pop
dec
stc
mov
ret
lods
adc
jnp
jmp
int3
scas
cmc
pop
sbb
or
nop
rcrl
pop
push
mov
pop
push
fdivrl
mov
out
mov
subb
std
sti
sahf
sbb
xor
mov
fldl
imul
scas
cmpsb
jne
xchg
mov
aas
push
movb
sbb
pop
dec
xor
sbb
das
je
in
adc
hlt
lcall
cmpsb
jbe
gs
jae
dec
fs
in
push
jbe
aad
lcall
or
push
leave
pop
xchg
push
fldl2t
loop
sub
int
aas
ret
int
cmp
and
add
mov
les
add
add
mov
daa
add
lock
call
lds
pop
adc
add
jmp
shlb
adc
aad
sub
mov
test
dec
daa
sub
sbb
shr
out
sbb
add
push
adc
out
in
cmp
in
mov
sub
add
mov
push
and
movsl
xor
aas
jb
lret
adc
dec
cmpl
ja
ja
cwtl
xchg
enter
dec
aaa
xchg
mov
ds
mov
and
push
repnz
and
imul
aaa
push
mov
jae
mov
and
sub
aaa
push
imul
sbb
pushl
jae
or
cmp
push
ss
out
jmp
mov
loop
int3
xchg
mov
push
push
add
jge
jmp
push
mov
mov
fimuls
lcall
pop
stc
jae
and
jbe
push
jp
pop
or
fsubrl
shrl
movsl
xor
push
int3
popl
inc
cli
vmovsd
adc
leave
andb
mov
stos
cltd
mov
sub
push
pop
cwtl
orl
mov
in
repz
mov
adc
ljmp
push
mov
out
rolb
pop
in
scas
adc
jl
jnp
call
outsl
negb
xchg
jae
xchg
adc
shll
sbb
xor
push
mov
bound
testb
mov
push
pop
or
mov
add
push
ljmp
pop
mov
inc
je
aaa
leave
fcoms
pop
adc
aas
dec
mov
and
scas
pop
pop
or
and
outsl
xchg
repnz
add
mov
idiv
adc
clc
scas
inc
mov
orl
daa
mov
sub
fcmovnb
xlat
les
sahf
adc
xchg
shll
push
dec
adc
push
mov
sub
ficoml
bound
aam
xchg
push
inc
gs
fisttpl
and
or
push
push
add
jne
mov
mov
add
push
mov
std
lock
add
int
popa
lods
sub
dec
pop
add
je
bound
hlt
adc
fsubrs
xorb
mov
jae
mov
and
sub
aaa
push
imul
sbb
pushl
jae
or
cmp
push
ss
out
jmp
mov
loop
int3
xchg
mov
push
push
add
jge
jmp
push
mov
mov
fimuls
lcall
pop
stc
jae
and
jbe
push
jp
pop
or
fsubrl
shrl
movsl
xor
push
int3
popl
inc
cli
vmovsd
adc
leave
andb
mov
stos
cltd
mov
sub
push
pop
cwtl
orl
mov
in
repz
mov
adc
ljmp
push
mov
out
rolb
pop
in
scas
adc
jl
jnp
call
outsl
negb
xchg
jae
xchg
adc
shll
sbb
xor
push
mov
bound
testb
mov
push
pop
or
mov
add
push
ljmp
pop
mov
inc
je
aaa
leave
fcoms
pop
adc
aas
dec
mov
and
scas
pop
pop
or
and
outsl
xchg
repnz
add
mov
idiv
adc
clc
scas
inc
mov
orl
daa
mov
sub
fcmovnb
xlat
les
sahf
adc
xchg
shll
push
dec
adc
push
mov
sub
ficoml
bound
aam
xchg
push
inc
gs
fisttpl
and
or
push
push
add
jne
mov
mov
add
push
mov
std
lock
add
int
popa
lods
sub
dec
pop
add
je
bound
hlt
add
shr
out
pop
jmp
test
sbb
dec
iret
jne
sub
push
or
jne
aas
dec
mov
mov
dec
outsb
push
mov
fs
daa
adc
push
mov
push
cmpl
insl
adcl
test
inc
cmpsb
xchg
push
push
pushf
xchg
jecxz
inc
mov
pop
adc
pop
sarb
mov
and
repnz
movsb
test
addl
inc
cwtl
sbb
mov
fmulp
adc
sub
dec
or
insl
fidivl
inc
adc
xorl
mov
or
std
mov
out
fistps
lods
repnz
push
or
xchg
fpatan
mov
jg
xchg
dec
bound
mov
mov
mov
stc
gs
adc
fldenv
jb
dec
int
test
stos
mov
or
and
cmp
jbe
out
mov
jne
add
fisubrl
sub
cmp
mov
dec
cli
cwtl
or
push
or
nopl
incl
inc
sbb
push
pop
mov
idivb
jle
xchg
out
and
stos
movsl
inc
inc
int3
pop
inc
rorb
pop
addr16
rolb
mov
test
xchg
mov
or
xchg
fiadds
sub
je
lods
cmpsb
jmp
lods
jno
jle
add
pushf
and
dec
add
sti
dec
fbstp
test
loope
leave
je
jg
ret
or
inc
ljmp
xchg
movsl
lcall
inc
inc
push
xor
mov
cltd
stc
inc
xlat
cmpsl
jb
sbb
sub
das
pop
call
jae
je
push
add
mov
faddp
sub
mov
xor
clc
imul
out
rorb
dec
repz
pushf
xor
das
dec
sub
push
nop
dec
aam
cmc
jbe
push
iret
adc
xor
fdivp
adc
outsl
xchg
in
test
mov
or
push
pop
push
inc
xchg
mov
pop
inc
mov
dec
filds
push
enter
pop
dec
jmp
xchg
mov
inc
aam
sbb
add
outsb
mov
rcl
out
sbb
cmp
mov
dec
and
rorl
jnp
or
aam
jb
push
out
in
into
pushf
aaa
and
icebp
bound
and
mulb
jge
jo
push
xchg
lret
aas
test
xchg
inc
adc
push
out
jbe
cwtl
xor
and
stos
or
into
jp
adc
dec
sub
loope
mov
int3
adc
in
ret
inc
or
sub
mov
pop
or
add
repnz
nop
sbb
addr16
jp
stos
adc
inc
sub
mov
jns
inc
mov
sub
pop
adc
out
add
fs
loop
adc
mov
dec
mov
mov
stos
fcmovb
mov
sub
jl
push
js
jb
pop
push
dec
inc
mov
sti
mov
std
and
xlat
inc
sbb
xor
popf
push
out
xchg
mov
dec
push
inc
add
add
xor
ret
in
sub
hlt
stos
ja
push
dec
push
xchg
adcb
mov
adc
push
insb
sbb
jbe
call
loopne
fwait
mov
inc
cli
lahf
push
cmp
imull
jp
lock
push
jbe
push
aad
jo
sahf
das
and
cmp
jns
sbb
mov
call
adc
rcll
dec
push
mov
pushf
fimuls
inc
sbb
push
test
pop
inc
out
mov
mov
push
movups
push
iret
adc
xor
fdivp
adc
outsl
xchg
in
test
mov
or
push
pop
push
inc
xchg
mov
pop
inc
mov
dec
filds
push
enter
pop
dec
jmp
xchg
mov
inc
aam
sbb
add
outsb
mov
rcl
out
sbb
cmp
mov
dec
and
rorl
jnp
or
aam
jb
push
out
in
into
pushf
aaa
and
icebp
bound
and
mulb
jge
jo
push
xchg
lret
aas
test
xchg
inc
adc
push
out
jbe
cwtl
xor
and
stos
or
into
jp
adc
dec
sub
loope
mov
int3
adc
in
ret
inc
or
sub
mov
pop
or
add
repnz
nop
sbb
addr16
jp
stos
adc
inc
sub
mov
jns
inc
mov
sub
pop
adc
out
add
fs
loop
adc
mov
dec
mov
mov
stos
fcmovb
mov
sub
jl
push
js
jb
pop
push
dec
inc
mov
sti
mov
std
and
xlat
inc
sbb
xor
popf
push
out
xchg
mov
dec
push
inc
add
add
xor
ret
in
sub
hlt
stos
ja
push
dec
push
xchg
adcb
mov
adc
push
insb
sbb
jbe
call
loopne
fwait
mov
inc
cli
lahf
push
cmp
imull
jp
lock
push
jbe
push
aad
jo
sahf
das
and
cmp
jns
sbb
mov
call
adc
rcll
dec
push
mov
pushf
fimuls
inc
sbb
push
test
pop
inc
out
mov
mov
push
movups
and
xor
fisubrl
scas
xchg
sub
and
dec
cmpsb
js
sahf
es
xchg
pop
enter
andb
inc
mov
dec
jo
adc
rorl
cltd
aam
xlat
and
pop
lea
shl
dec
ja
lock
dec
and
cmp
out
pop
lods
jge
add
inc
cmp
das
xor
scas
sbb
push
stos
jne
outsb
ljmp
sbb
stc
adc
bound
or
arpl
jnp
aad
cmpsb
cmp
jge
pop
add
sbb
leave
or
rcrb
lret
es
add
push
mov
and
divl
dec
testl
movsl
adc
cmp
push
flds
aaa
mov
jno
push
xlat
test
int
mov
dec
popa
imul
dec
arpl
push
pop
rorb
sub
mov
cs
cmp
add
subl
mov
imul
rcl
adc
dec
je
aad
test
xchg
mov
jg
mov
mov
xor
adc
imul
fisubrl
arpl
and
xor
stc
ja
inc
insb
in
shlb
fists
daa
dec
adc
and
lret
jne
ret
lds
es
cmp
int3
icebp
mov
cmp
mov
inc
mov
sarl
sbb
push
and
add
mov
call
and
push
push
mov
fists
push
or
mov
push
pop
sbb
mov
dec
sub
frndint
rclb
stos
push
add
icebp
or
mov
inc
cwtl
cmpb
pop
adc
sahf
mov
push
ss
sub
adc
push
sbb
jnp
std
sbb
sub
in
jp
cmp
push
test
jne
xchg
aaa
ljmp
push
xchg
jg
outsb
fildll
popa
pusha
jl
push
jl
mov
jb
cmc
cs
inc
bswap
adc
test
sbb
jecxz
jle
inc
movsb
xchg
push
sti
pxor
or
push
arpl
mov
test
sub
mov
xor
and
rorl
jg
sub
mov
adc
push
or
jl
xor
lret
xchg
jae
dec
and
sbb
dec
movsl
push
dec
adc
xchg
xchg
add
adc
jo
movsl
adc
xor
fs
mov
xor
ljmp
test
aam
mov
fisttpll
in
pop
jg
shlb
outsl
or
push
pop
xchg
stos
bswap
sahf
cmp
pop
mov
scas
mov
aad
sbb
lods
mov
cwtl
aad
pushl
lret
dec
and
mov
sub
mov
aam
mov
dec
lock
fiadds
xor
inc
mov
cmp
int
repz
mov
out
xor
adc
sbb
and
fwait
in
jne
negl
jb
fistpl
inc
xchg
push
ret
push
cmpsb
mov
imul
jmp
lcall
jns
push
loope
fidivrs
ja
add
sub
hlt
cmc
rcrl
xchg
test
inc
pop
movsb
out
call
call
dec
das
rcll
jmp
xchg
add
jge
lret
std
adc
les
mov
cmpsb
imul
shlb
mov
sub
push
in
mov
push
push
mov
xchg
adc
push
sbb
jnp
std
sbb
sub
in
jp
cmp
push
test
jne
xchg
aaa
ljmp
push
xchg
jg
outsb
fildll
popa
pusha
jl
push
jl
mov
jb
cmc
cs
inc
bswap
adc
test
sbb
jecxz
jle
inc
movsb
xchg
push
sti
pxor
or
push
arpl
mov
test
sub
mov
xor
and
rorl
jg
sub
mov
adc
push
or
jl
xor
lret
xchg
jae
dec
and
sbb
dec
movsl
push
dec
adc
xchg
xchg
add
adc
jo
movsl
adc
xor
fs
mov
xor
ljmp
test
aam
mov
fisttpll
in
pop
jg
shlb
outsl
or
push
pop
xchg
stos
bswap
sahf
cmp
pop
mov
scas
mov
aad
sbb
lods
mov
cwtl
aad
pushl
lret
dec
and
mov
sub
mov
aam
mov
dec
lock
fiadds
xor
inc
mov
cmp
int
repz
mov
out
xor
adc
sbb
and
fwait
in
jne
negl
jb
fistpl
inc
xchg
push
ret
push
cmpsb
mov
imul
jmp
lcall
jns
push
loope
fidivrs
ja
add
sub
hlt
cmc
rcrl
xchg
test
inc
pop
movsb
out
call
call
dec
das
rcll
jmp
xchg
add
jge
lret
std
adc
les
mov
cmpsb
imul
shlb
mov
sub
push
in
mov
push
push
mov
xchg
in
out
insb
fadd
and
dec
xchg
push
out
cmp
int3
adc
mov
inc
pop
jnp
push
in
outsl
lods
lods
adc
cmp
leave
fdivl
sub
adc
fmuls
dec
mov
idiv
aas
cmp
aad
out
das
mov
shr
imul
test
mov
mov
adc
rcl
iret
inc
int
xor
push
shrb
pusha
jae
pop
outsl
sarb
sub
cwtl
out
dec
sahf
fdivrs
pop
push
cmpsb
loop
or
add
or
jmp
mov
adc
sub
adc
jmp
mov
cmpsl
inc
stos
and
adc
push
and
popf
addb
mov
mov
pop
sub
sub
imul
push
stos
sarl
sbb
outsl
push
dec
scas
notl
sahf
fisttps
dec
fcomps
rcrb
sub
mov
test
add
lods
es
lods
sub
jmp
push
frstor
cmp
xchg
xlat
or
push
cld
and
and
stos
jns
mov
insl
repz
pop
cmpl
pop
jge
or
dec
int
mov
icebp
fmuls
mov
iret
pop
dec
add
fsin
push
lods
push
stos
sub
adcb
mov
add
mov
push
push
mov
dec
es
in
repz
pop
sbb
cmpsb
out
sbb
insb
pusha
sub
adc
xor
stc
xchg
in
sub
pop
cmp
out
lds
int
test
bound
push
pop
cmp
out
sahf
xchg
mov
clc
les
sbb
adc
or
aam
bound
inc
push
xchg
sub
scas
mov
icebp
std
lret
xchg
shrb
iret
sbb
mov
stos
xchg
xchg
mov
pop
shlb
and
xor
mov
test
push
pop
xchg
dec
mov
repnz
pop
lds
sbb
lds
pop
rclb
mov
xorl
ljmp
mov
xor
fldl
cmpsb
inc
loop
add
in
add
fsubrs
cltd
push
push
stos
jl
xchg
imul
fistpll
inc
dec
pusha
xor
cs
int3
mov
cwtl
xchg
movsl
adc
sbb
xchg
push
push
int
out
adc
xchg
insb
sub
lcall
mov
in
mov
sub
jp
insl
stc
xchg
cmp
pop
out
fwait
and
jmp
pop
je
sbb
mov
mov
loopne
cmp
out
sub
fistl
aaa
push
popa
jnp
aas
xchg
xchg
in
inc
inc
inc
adc
adc
enter
cmp
in
mov
pop
das
rclb
pop
push
imul
insb
sbb
push
fildll
xchg
jo
roll
and
xchg
idivl
inc
pop
or
xchg
mov
aaa
inc
adc
pop
pop
cmpsl
mov
lret
cmovp
ret
xlat
jge
pop
adc
arpl
ss
pop
roll
lahf
call
outsl
popf
or
add
mov
mov
out
idivb
ljmp
dec
call
xor
lds
sahf
pop
pop
and
scas
rorb
aad
mov
cltd
mov
jl
mov
jg
cmp
faddp
std
or
sahf
adc
xchg
push
rcll
in
ret
jl
push
add
xor
mov
jnp
jbe
aaa
lret
inc
jne
out
cltd
adc
or
mov
pop
xchg
inc
push
jmp
popa
lods
das
aam
bound
inc
push
xchg
sub
scas
mov
icebp
std
lret
xchg
shrb
iret
sbb
mov
stos
xchg
xchg
mov
pop
shlb
and
xor
mov
test
push
pop
xchg
dec
mov
repnz
pop
lds
sbb
lds
pop
rclb
mov
xorl
ljmp
mov
xor
fldl
cmpsb
inc
loop
add
in
add
fsubrs
cltd
push
push
stos
jl
xchg
imul
fistpll
inc
dec
pusha
xor
cs
int3
mov
cwtl
xchg
movsl
adc
sbb
xchg
push
push
int
out
adc
xchg
insb
sub
lcall
mov
in
mov
sub
jp
insl
stc
xchg
cmp
pop
out
fwait
and
jmp
pop
je
sbb
mov
mov
loopne
cmp
out
sub
fistl
aaa
push
popa
jnp
aas
xchg
xchg
in
inc
inc
inc
adc
adc
enter
cmp
in
mov
pop
das
rclb
pop
push
imul
insb
sbb
push
fildll
xchg
jo
roll
and
xchg
idivl
inc
pop
or
xchg
mov
aaa
inc
adc
pop
pop
cmpsl
mov
lret
cmovp
ret
xlat
jge
pop
adc
arpl
ss
pop
roll
lahf
call
outsl
popf
or
add
mov
mov
out
idivb
ljmp
dec
call
xor
lds
sahf
pop
pop
and
scas
rorb
aad
mov
cltd
mov
jl
mov
jg
cmp
faddp
std
or
sahf
adc
xchg
push
rcll
in
ret
jl
push
add
xor
mov
jnp
jbe
aaa
lret
inc
jne
out
cltd
adc
or
mov
pop
xchg
inc
push
jmp
popa
lods
das
loope
or
cmp
pop
fisubrl
xor
mov
les
cmp
xchg
cmpsl
popl
test
je
xchg
jecxz
and
inc
mov
add
mov
cmpsb
je
jp
mov
xchg
or
and
popf
adc
lcall
scas
xchg
cmp
jo
repz
pop
mov
xchg
push
push
sbb
adc
mov
dec
sbb
clc
xchg
les
movsb
mov
mov
cmp
mov
sub
jno
adc
inc
mov
add
pop
push
fnstsw
push
jnp
repnz
dec
incb
jne
xchg
test
mov
aad
pop
fstpt
xchg
cmp
sbb
mov
sbb
jge
mov
dec
inc
jb
and
xor
sahf
xor
push
push
arpl
mov
or
test
xor
push
hlt
adc
leave
lahf
aas
loop
mov
mov
imul
push
daa
pop
or
ror
imul
sub
dec
adc
sbb
loop
push
jno
fistps
leave
xchg
int
sarl
sub
cmp
adc
out
fsubrs
mov
lret
aaa
or
sbb
sub
xor
aas
adc
loope
xchg
mov
lods
push
cmc
jp
mov
xor
xor
call
adc
fmuls
popa
mov
das
mov
imul
or
push
in
or
push
sbbb
push
fists
std
adc
or
aaa
pop
pop
fnstenv
xor
clc
adcb
in
sti
add
das
mov
jmp
mov
aas
loop
fstpt
aaa
incl
stos
mov
lds
es
jle
dec
in
in
dec
jge
push
mov
mov
push
outsl
ja
int
popa
shlb
cmp
sub
pop
jmp
lods
mov
push
or
mov
int3
movsl
jno
xchg
jno
or
mov
sub
dec
std
out
imul
push
mov
jmp
jb,pn
and
insl
xor
in
mov
push
cmpsb
mov
lods
in
dec
sbb
wbinvd
mov
jl
and
jmp
ss
inc
notl
addl
dec
fisubl
cs
popf
fs
lds
inc
jno
stos
mov
mov
mov
pop
ret
out
push
sub
hlt
mov
cmp
cmp
xchg
fimull
imul
enter
xchg
out
xchg
ret
out
jge
mov
roll
lcall
andb
sbb
lods
cmpb
xor
std
mov
jb
clc
sub
fistps
mov
mov
stos
xor
xor
pop
add
cmp
mov
inc
les
adc
aas
lea
cmp
xchg
cmp
add
push
or
out
nop
sarb
test
pop
xchg
in
adc
inc
and
sti
pop
movsl
cmp
jl
push
mov
and
dec
push
sub
pop
sub
cmp
push
or
pop
in
mov
jl
and
inc
lret
mov
sarb
mov
jmp
in
dec
pop
out
es
inc
sbb
cli
inc
inc
add
mov
inc
xchg
xor
sbbl
pop
in
ja
pushf
loopne
sbb
in
dec
jge
push
mov
mov
push
outsl
ja
int
popa
shlb
cmp
sub
pop
jmp
lods
mov
push
or
mov
int3
movsl
jno
xchg
jno
or
mov
sub
dec
std
out
imul
push
mov
jmp
jb,pn
and
insl
xor
in
mov
push
cmpsb
mov
lods
in
dec
sbb
wbinvd
mov
jl
and
jmp
ss
inc
notl
addl
dec
fisubl
cs
popf
fs
lds
inc
jno
stos
mov
mov
mov
pop
ret
out
push
sub
hlt
mov
cmp
cmp
xchg
fimull
imul
enter
xchg
out
xchg
ret
out
jge
mov
roll
lcall
andb
sbb
lods
cmpb
xor
std
mov
jb
clc
sub
fistps
mov
mov
stos
xor
xor
pop
add
cmp
mov
inc
les
adc
aas
lea
cmp
xchg
cmp
add
push
or
out
nop
sarb
test
pop
xchg
in
adc
inc
and
sti
pop
movsl
cmp
jl
push
mov
and
dec
push
sub
pop
sub
cmp
push
or
pop
in
mov
jl
and
inc
lret
mov
sarb
mov
jmp
in
dec
pop
out
es
inc
sbb
cli
inc
inc
add
mov
inc
xchg
xor
sbbl
pop
in
ja
pushf
loopne
sbb
pop
cwtl
out
inc
fsubrl
sbb
fcomi
nop
stos
add
cmp
adcb
push
lahf
js
loopne
push
sub
inc
xor
into
jp
sahf
push
cmp
dec
or
dec
cmp
mov
enter
dec
mov
pop
adc
push
sub
inc
jb
loopne
repz
cmp
js
sub
pop
jae
mov
ljmp
icebp
and
and
push
leave
push
push
pop
jle
sbb
xor
iret
stc
out
pop
je
and
mov
mov
sub
lods
cli
into
pop
fcompl
pop
mov
xor
popa
fildll
xorl
sub
aas
divb
clc
mov
xlat
jae
mov
test
xchg
xor
daa
xchg
sti
imul
jo
inc
mov
push
push
in
dec
and
xchg
stc
and
pop
stos
push
sbb
or
adc
pop
loopne
mov
inc
xor
sub
pop
mov
ljmp
fnstsw
cmpsb
push
sbb
xchg
cld
push
into
addl
sub
cli
cli
and
inc
cmp
adc
mov
xchg
mov
icebp
xor
scas
test
cld
loope
mov
cmp
xchg
outsl
cmovno
jo,pt
xchg
jmp
xlat
scas
loopne
jo
enter
es
cmp
sahf
mov
sub
and
mov
push
inc
fdivl
movsl
enter
pop
mov
call
lret
lret
xor
jno
sahf
fidivrs
inc
adc
gs
je
imul
in
mov
dec
add
pop
nop
stos
jecxz
cmc
lret
or
les
in
xchg
xchg
push
fsubrs
rol
fs
out
add
adc
lcall
add
mov
dec
call
movl
xchg
xchg
xchg
push
popf
movsl
sub
stos
repz
cmpsb
mov
inc
push
bnd
outsb
inc
xchg
jne
popa
jp
sbb
movsl
push
jb
cmp
hlt
jg
push
outsl
fldenv
push
fiadds
adc
add
popa
ret
notb
xor
adc
insl
fidivs
bound
jecxz
scas
subb
sbb
mov
sahf
ja
lret
enter
xchg
je
ja
adc
daa
rcr
xchg
stc
aas
add
xorb
inc
or
pop
xor
cmp
lock
push
div
ret
popf
xchg
xlat
jo
shrb
cmc
dec
push
xor
rcll
rclb
push
dec
xchg
or
dec
call
jns
push
cs
dec
fwait
inc
jno
jo
jmp
insb
sahf
jmp
mov
cli
mov
inc
push
mov
sbb
dec
jp
ljmp
jmp
lahf
mov
repnz
hlt
mov
xorl
jae
jns
mov
sarl
mov
pop
fidivrl
cmp
testb
fildll
je
adc
insb
fsubr
fisttps
pop
push
and
insb
sbb
shl
xchg
fldl
imul
push
out
out
jge
and
stc
fcmove
in
mov
rorb
idivb
fstpt
lock
lcall
push
cmp
adc
cmc
idiv
add
mov
sbb
mov
cmpsl
add
cmp
xchg
mov
inc
in
push
ret
pop
scas
popa
push
sub
xor
cwtl
and
cltd
pop
outsb
sbb
inc
adc
bound
fcomps
enter
imul
fdivrs
add
fisubs
aad
loope
es
jo
jmp
pop
test
movb
fildll
sbb
js
daa
rclb
push
popf
movsl
sub
stos
repz
cmpsb
mov
inc
push
bnd
outsb
inc
xchg
jne
popa
jp
sbb
movsl
push
jb
cmp
hlt
jg
push
outsl
fldenv
push
fiadds
adc
add
popa
ret
notb
xor
adc
insl
fidivs
bound
jecxz
scas
subb
sbb
mov
sahf
ja
lret
enter
xchg
je
ja
adc
daa
rcr
xchg
stc
aas
add
xorb
inc
or
pop
xor
cmp
lock
push
div
ret
popf
xchg
xlat
jo
shrb
cmc
dec
push
xor
rcll
rclb
push
dec
xchg
or
dec
call
jns
push
cs
dec
fwait
inc
jno
jo
jmp
insb
sahf
jmp
mov
cli
mov
inc
push
mov
sbb
dec
jp
ljmp
jmp
lahf
mov
repnz
hlt
mov
xorl
jae
jns
mov
sarl
mov
pop
fidivrl
cmp
testb
fildll
je
adc
insb
fsubr
fisttps
pop
push
and
insb
sbb
shl
xchg
fldl
imul
push
out
out
jge
and
stc
fcmove
in
mov
rorb
idivb
fstpt
lock
lcall
push
cmp
adc
cmc
idiv
add
mov
sbb
mov
cmpsl
add
cmp
xchg
mov
inc
in
push
ret
pop
scas
popa
push
sub
xor
cwtl
and
cltd
pop
outsb
sbb
inc
adc
bound
fcomps
enter
imul
fdivrs
add
fisubs
aad
loope
es
jo
jmp
pop
test
movb
fildll
lods
jbe
dec
cmp
or
jo
and
enter
inc
inc
sub
ffree
sub
lea
cmp
sbb
xchg
mov
xlat
mov
outsb
push
inc
cmp
ret
cmpsb
sbb
jne
int
xchg
aam
mov
mov
xor
lods
or
mov
aas
fucomi
in
push
xchg
rclb
in
in
lods
ss
lret
dec
mov
mov
xchg
add
lea
mov
aad
lea
pop
loop
out
pop
jecxz
cmpsl
xchg
jbe
enter
lods
pop
pop
dec
out
mov
xor
cmc
add
shrl
mov
ds
sbb
leave
sub
jbe
movups
rolb
add
jnp
push
test
mov
pop
push
add
cs
in
pop
outsb
movsb
jl
cwtl
xchg
push
adc
icebp
xchg
mov
pop
mov
cmc
fildll
add
hlt
cmp
data16
mov
pop
cwtl
daa
xchg
clc
cmc
rcl
jns
popa
xor
sbbl
xor
jge
jno
rcrl
outsl
push
xor
stc
inc
sub
fisubs
pop
bound
dec
hlt
movsb
out
notl
lret
jmp
dec
icebp
mov
xchg
mov
sbbl
sti
mov
adc
nop
es
cmp
ja
or
or
fsubr
call
mov
cs
sbb
cmpb
scas
pop
out
es
mov
out
fwait
pop
shl
jmp
cmp
push
sub
insb
outsb
mov
add
xlat
out
xchg
leave
iret
jne
mov
pop
xchg
cmc
push
pop
dec
cmp
into
mov
out
sahf
xchg
dec
fdivs
leave
fidivrl
test
pop
jg,pt
test
cmp
push
or
int3
arpl
mov
jo
dec
pusha
ret
je
inc
mov
mov
or
mov
gs
sbb
xchg
xchg
push
mov
lods
test
mov
add
mov
xor
hlt
sub
stos
in
dec
sbb
test
sub
and
mov
es
pusha
cmp
das
pop
sbb
test
inc
dec
loope
xor
pushf
push
dec
movsb
or
jnp
bound
test
push
cmpb
sub
xchg
xor
mov
sub
or
inc
cs
enter
je
leave
ja
mov
mov
cs
ret
sub
pop
mulb
mov
lcall
aad
or
ljmp
pusha
andb
lea
shll
push
rcrb
dec
fldcw
ljmp
cwtl
std
orl
aaa
nop
cld
xor
pusha
cmpsl
aas
mov
dec
inc
fs
jnp
mov
loop
inc
jp
fdivl
xchg
lcall
sbb
pop
jns
dec
jmp
jns
inc
fcmovu
divb
dec
imul
outsl
cltd
int3
push
lahf
addr16
js
icebp
push
ljmp
hlt
jecxz
or
in
sub
gs
adc
xchg
xchg
and
xchg
negl
in
push
imul
bound
cltd
and
and
rcrl
xor
or
jp
jb
cs
shl
daa
out
cwtl
ret
pop
shlb
aad
push
pop
scas
cmpsb
mov
mov
xor
pop
sar
xor
mov
inc
pop
mov
popa
repnz
pop
sbb
or
push
cmp
adc
cmpsb
scas
xor
jae
pop
adc
adc
cmpsb
cmp
ja
sti
mov
pop
mov
push
js
enter
pusha
ret
je
inc
mov
mov
or
mov
gs
sbb
xchg
xchg
push
mov
lods
test
mov
add
mov
xor
hlt
sub
stos
in
dec
sbb
test
sub
and
mov
es
pusha
cmp
das
pop
sbb
test
inc
dec
loope
xor
pushf
push
dec
movsb
or
jnp
bound
test
push
cmpb
sub
xchg
xor
mov
sub
or
inc
cs
enter
je
leave
ja
mov
mov
cs
ret
sub
pop
mulb
mov
lcall
aad
or
ljmp
pusha
andb
lea
shll
push
rcrb
dec
fldcw
ljmp
cwtl
std
orl
aaa
nop
cld
xor
pusha
cmpsl
aas
mov
dec
inc
fs
jnp
mov
loop
inc
jp
fdivl
xchg
lcall
sbb
pop
jns
dec
jmp
jns
inc
fcmovu
divb
dec
imul
outsl
cltd
int3
push
lahf
addr16
js
icebp
push
ljmp
hlt
jecxz
or
in
sub
gs
adc
xchg
xchg
and
xchg
negl
in
push
imul
bound
cltd
and
and
rcrl
xor
or
jp
jb
cs
shl
daa
out
cwtl
ret
pop
shlb
aad
push
pop
scas
cmpsb
mov
mov
xor
pop
sar
xor
mov
inc
pop
mov
popa
repnz
pop
sbb
or
push
cmp
adc
cmpsb
scas
xor
jae
pop
adc
adc
cmpsb
cmp
ja
sti
mov
pop
mov
push
js
enter
stos
sbb
xchg
cmp
aaa
mov
dec
pushf
data16
movsl
fisttps
sub
push
inc
push
lods
jp
mov
mov
stos
xor
adc
jmp
inc
shll
and
je
insb
daa
add
sbb
jns
jno
fwait
and
adc
test
inc
scas
lods
arpl
dec
mov
mov
cmpsb
std
scas
lahf
int3
outsb
xor
roll
es
testb
or
lods
dec
ret
pop
ja
movsb
pop
xchg
mov
add
or
lret
lea
mov
mov
cltd
inc
daa
cmpsb
dec
cmpsb
out
into
dec
in
dec
ja
dec
cli
push
jno
xor
scas
sbb
in
push
dec
in
pop
enter
mov
mov
sbb
adc
dec
push
fwait
enter
aas
dec
rorb
in
shl
push
movsb
jge
shr
add
inc
cmp
adcb
int
dec
out
cltd
int3
aad
lds
cltd
pop
aaa
fidivl
aad
pop
xor
sbb
jae
mov
cmp
ja
les
xor
mov
adc
mov
pop
in
adc
inc
sti
inc
add
sbb
jno
cmp
adc
push
fwait
sahf
out
sbb
repz
je
pop
pop
sbb
jns
push
xchg
out
push
adc
mov
add
outsb
adc
stos
cmp
mov
mov
testb
into
in
pop
lods
push
pop
lret
in
test
fxch
leave
pop
int3
push
xchg
xor
insl
rcll
jbe
sahf
aad
mov
das
sub
sbb
or
adc
out
cs
inc
adc
cmp
hlt
or
lcall
popf
filds
shll
mov
aas
icebp
push
subl
ret
cli
adc
scas
ret
and
jecxz
ficomps
inc
inc
out
dec
outsb
imul
std
aas
scas
stos
loopne
fsubrs
outsl
iret
pop
xchg
mull
pop
in
sub
pop
jmp
arpl
rolb
cmc
cmpsl
loopne
sbb
pop
filds
cmpsb
xlat
lahf
and
inc
je
ret
test
sbb
fisttpl
and
daa
or
icebp
adc
lods
lret
mov
push
push
sub
or
or
jmp
jl
insb
stos
shlb
inc
inc
jo,pn
sbb
and
mov
dec
xchg
in
mov
test
mov
das
sub
subl
out
jnp
fcompl
ljmp
orl
cltd
adc
popf
cmp
xchg
fstps
add
lds
adc
jo
pusha
roll
jl
jg
jecxz
out
pop
shll
push
or
xchg
adcb
lret
and
sbb
push
and
pop
loopne
sbb
nop
and
xchg
mov
pusha
jecxz
jno
mov
int3
dec
imul
adc
sbb
fwait
push
imul
daa
jmp
and
mov
mov
jo
xor
out
push
inc
sub
out
test
subb
pop
clc
in
repz
jmp
dec
cmp
mov
cli
scas
xchg
mov
add
push
adc
pop
xor
pop
adc
aam
rorb
lds
jmp
mov
divl
sub
sahf
hlt
mov
xchg
cmp
adc
xorb
call
xor
adc
or
adc
roll
pop
pop
cs
pop
fidivs
in
pop
test
into
lcall
or
cs
test
inc
inc
out
dec
outsb
imul
std
aas
scas
stos
loopne
fsubrs
outsl
iret
pop
xchg
mull
pop
in
sub
pop
jmp
arpl
rolb
cmc
cmpsl
loopne
sbb
pop
filds
cmpsb
xlat
lahf
and
inc
je
ret
test
sbb
fisttpl
and
daa
or
icebp
adc
lods
lret
mov
push
push
sub
or
or
jmp
jl
insb
stos
shlb
inc
inc
jo,pn
sbb
and
mov
dec
xchg
in
mov
test
mov
das
sub
subl
out
jnp
fcompl
ljmp
orl
cltd
adc
popf
cmp
xchg
fstps
add
lds
adc
jo
pusha
roll
jl
jg
jecxz
out
pop
shll
push
or
xchg
adcb
lret
and
sbb
push
and
pop
loopne
sbb
nop
and
xchg
mov
pusha
jecxz
jno
mov
int3
dec
imul
adc
sbb
fwait
push
imul
daa
jmp
and
mov
mov
jo
xor
out
push
inc
sub
out
test
subb
pop
clc
in
repz
jmp
dec
cmp
mov
cli
scas
xchg
mov
add
push
adc
pop
xor
pop
adc
aam
rorb
lds
jmp
mov
divl
sub
sahf
hlt
mov
xchg
cmp
adc
xorb
call
xor
adc
or
adc
roll
pop
pop
cs
pop
fidivs
in
pop
test
into
lcall
or
mov
sti
xor
out
xchg
mov
jb
out
and
subl
lea
test
lret
clc
mov
nop
stos
xchg
out
mov
cmpsl
mov
std
sub
xor
mov
jne
fdivr
ds
adc
pop
in
aam
lods
popa
xor
mov
lods
add
adc
insb
push
adc
sub
popa
outsb
loope
lea
xchg
jae
or
pusha
repnz
pushfw
int3
mov
xchg
ret
pop
imul
mov
add
loop
in
sbb
mov
mov
fiaddl
cltd
cmpsl
int3
inc
and
ficoms
dec
sbb
dec
or
clc
inc
insl
xor
xchg
frstor
imul
xchg
sbb
jl
push
in
inc
push
push
repz
test
pop
pushf
gs
int
push
es
xchg
js
adc
data16
jne
xchg
cs
mov
xchg
mov
or
mov
add
jl
imul
lods
sbb
mov
int
xor
and
lcall
sbb
stos
jns
add
ja
xor
sub
gs
dec
shrb
jmp
std
jmp
mov
jb
adc
pushf
mov
imull
stos
adc
sbb
pushf
cli
rcll
cmp
adc
pop
xchg
pop
out
mov
int3
in
xor
jecxz
xor
lret
aam
cmp
cmp
xor
xchg
push
jle
mov
scas
add
jmp
ret
cwtl
loopne
aas
mov
je
adc
lahf
rcr
cmovp
ds
pushf
jmp
mov
mov
inc
mov
push
or
jmp
xor
sbb
mov
iret
and
sub
jle
inc
push
lret
mov
ljmp
cwtl
mov
adc
jbe
or
scas
sbb
xor
or
pop
test
ljmp
pop
jnp
in
jno
je
ret
push
dec
mov
in
push
shlb
jp
push
orl
add
rorb
pop
push
outsb
xchg
out
push
cmp
jl
or
jmp
jmp
sub
dec
adc
inc
scas
stos
mov
cmp
mov
out
cmpps
pop
loopne
imul
push
or
push
jge
xchg
push
or
leave
cli
xchg
stc
fisubrs
mov
aaa
xchg
ja
jne
mov
adc
enter
dec
xor
cmc
push
push
cwtl
sub
ror
mov
pop
shll
mov
mov
ror
xor
cmp
mov
pop
fwait
xchg
bound
fstl
insl
cmp
js
in
inc
out
or
lret
ficompl
inc
ds
adc
and
sbb
outsl
aam
pusha
out
cmp
push
aad
enter
dec
mov
pusha
inc
addb
push
int
rorb
clc
push
std
scas
xor
popa
pop
mov
sbb
ds
cmc
dec
inc
aad
imul
rep
jnp
push
add
push
sbb
pop
dec
mov
daa
call
shl
roll
and
pop
sub
add
pop
lret
das
jle
pop
out
into
sarb
mov
fadd
inc
sub
icebp
fmulp
or
xor
mov
pop
outsl
aad
xor
stos
xchg
test
arpl
ss
adc
and
cvttps2pi
jae
icebp
xchg
push
cmp
js
sbb
mov
iret
and
sub
jle
inc
push
lret
mov
ljmp
cwtl
mov
adc
jbe
or
scas
sbb
xor
or
pop
test
ljmp
pop
jnp
in
jno
je
ret
push
dec
mov
in
push
shlb
jp
push
orl
add
rorb
pop
push
outsb
xchg
out
push
cmp
jl
or
jmp
jmp
sub
dec
adc
inc
scas
stos
mov
cmp
mov
out
cmpps
pop
loopne
imul
push
or
push
jge
xchg
push
or
leave
cli
xchg
stc
fisubrs
mov
aaa
xchg
ja
jne
mov
adc
enter
dec
xor
cmc
push
push
cwtl
sub
ror
mov
pop
shll
mov
mov
ror
xor
cmp
mov
pop
fwait
xchg
bound
fstl
insl
cmp
js
in
inc
out
or
lret
ficompl
inc
ds
adc
and
sbb
outsl
aam
pusha
out
cmp
push
aad
enter
dec
mov
pusha
inc
addb
push
int
rorb
clc
push
std
scas
xor
popa
pop
mov
sbb
ds
cmc
dec
inc
aad
imul
rep
jnp
push
add
push
sbb
pop
dec
mov
daa
call
shl
roll
and
pop
sub
add
pop
lret
das
jle
pop
out
into
sarb
mov
fadd
inc
sub
icebp
fmulp
or
xor
mov
pop
outsl
aad
xor
stos
xchg
test
arpl
ss
adc
and
cvttps2pi
jae
icebp
xchg
push
cmp
js
xor
inc
loopne
aam
andb
popf
imul
fisttps
jnp
leave
pop
push
jne
xor
jbe
cmp
sub
call
push
push
iret
loopne
xchg
xor
sahf
and
sbb
add
cmp
clc
pushf
rcrl
int3
jp
xchg
leave
mov
and
jnp
pop
in
into
inc
cmp
xor
imul
and
cld
js
int
add
mov
fs
dec
jl
cs
aad
stc
pop
mov
movsl
pop
aad
mov
pop
roll
faddl
out
cmp
xor
fldcw
movsl
push
jne
xchg
xchg
daa
out
jp
or
sbb
leave
fmuls
in
cmp
and
add
out
mov
rorl
mov
dec
dec
pop
out
hlt
popf
cmpsl
mov
and
push
cmpb
fwait
dec
or
jp
sbb
stos
push
jo
mov
cmp
xor
dec
mov
sbb
push
adc
pop
dec
stc
push
fmul
adc
out
push
push
pusha
add
sbb
popf
iret
das
stc
roll
xor
std
scas
je
into
and
xor
xor
jbe
push
outsb
mov
aad
or
in
js
loope
fsub
push
ret
cmp
mov
jecxz
loope
repnz
inc
inc
aad
inc
mov
loopne,pt
sbb
mov
sub
xor
out
mov
xchg
jns
mov
daa
inc
fistpl
adc
xorl
popa
inc
mov
mov
sbb
pop
pusha
mov
inc
mov
jbe
inc
lods
xchg
and
push
ljmp
jge
jno
insb
mov
bound
pop
sbb
repnz
cltd
pop
popa
jecxz
xor
adc
mov
or
imul
ja
fbld
cmp
mov
or
jo
daa
shrb
add
sub
int
cmp
xor
aas
or
jno
mov
shrb
rcrl
and
aas
fs
jecxz
mov
sbb
iret
inc
iret
rclb
push
inc
add
xor
jo
lahf
data16
testl
xor
mov
xchg
mul
rorb
cmc
inc
push
push
cmpsl
xor
ret
pop
rcll
fdivs
shll
mov
out
call
dec
sbb
ds
push
cmp
add
mov
xchg
in
lds
mov
out
test
out
fcoms
out
sub
lock
inc
xchg
cld
sub
xor
into
dec
dec
outsb
inc
mov
stos
cmpsb
rcrb
shlb
in
mov
push
jmp
dec
cmp
lret
out
sub
leave
ljmp
lea
imul
and
sub
xor
iret
xchg
mov
sbb
add
je
xchg
div
pop
aaa
into
dec
orl
xchg
mov
mov
push
xchg
mov
jbe
inc
xchg
int
jg
cmp
pushl
jmp
add
cld
push
inc
jecxz
and
xchg
ret
nop
lods
ret
jecxz
or
lods
xchg
cmp
and
movsl
fldz
pop
sub
xor
js
sbb
enter
aas
adc
xchg
outsb
repz
pop
iret
jno
data16
push
aam
ss
jg
inc
lods
aas
fmulp
push
pop
jno
js
jmp
shl
and
test
add
add
sub
add
adc
xor
jne
add
bound
pop
sbb
repnz
cltd
pop
popa
jecxz
xor
adc
mov
or
imul
ja
fbld
cmp
mov
or
jo
daa
shrb
add
sub
int
cmp
xor
aas
inc
jae
ucomiss
jo
inc
aam
push
jg
push
enter
inc
adc
dec
cmp
pop
ret
and
fwait
cli
cs
lods
sti
out
push
inc
jmp
sbb
pop
xor
out
pop
pop
addl
add
inc
ret
sub
aaa
lds
xchg
push
les
inc
mov
or
and
shrl
test
push
xchg
fs
fistpll
push
push
mov
jne
pop
fs
push
call
pusha
mov
sub
cli
xor
and
jle
std
adc
mov
sbb
divb
adcl
dec
pop
sub
pop
or
mov
and
or
and
pop
sub
cmp
les
shll
push
add
lds
inc
add
xchg
and
adc
rcl
mov
mov
pusha
into
xlat
xchg
lock
xlat
mov
xchg
lea
inc
out
insb
adc
inc
data16
jmp
mov
mov
pusha
xor
sub
call
inc
je
std
fsts
cmpl
stos
or
loopne
out
cld
mov
lock
ret
jns
sbb
inc
adc
xchg
pop
cmp
test
notb
fdivr
or
push
or
in
add
cs
lret
lcall
icebp
enter
mov
loopne
push
or
adc
gs
push
add
cmp
rcr
insb
add
rorl
insl
ja
sti
mov
enter
outsl
jno
lret
inc
sbb
mov
leave
cmp
lret
rcll
jge
std
adc
and
jl
les
test
jns
or
fdivp
sub
or
pushf
dec
imul
lcall
loop
lahf
fwait
imul
pop
dec
add
cmc
pop
add
xchg
ds
jg
adc
scas
ficoml
push
mov
out
lock
popf
jno
aad
shll
sbb
repnz
es
lea
inc
mov
add
repnz
jle
mov
out
or
scas
jb
mov
in
outsl
inc
and
ret
jo
push
lds
xchg
scas
in
push
jnp
subb
push
bound
in
dec
in
adc
div
out
dec
mov
int3
out
jno
pop
jno
and
shrl
enter
call
push
mov
sub
out
stc
mov
lret
out
xlat
aam
xor
in
ss
enter
lret
adcl
jle
mov
popf
push
jnp
xor
inc
cmp
arpl
adc
mov
xchg
push
xchg
xchg
xchg
and
inc
xchg
xor
sbb
testb
jl
push
push
clc
sbb
jmpw
inc
es
mov
bound
add
xor
cltd
mov
sahf
sub
data16
add
gs
out
pop
sbb
or
mov
mov
cwtl
dec
xchg
adc
stc
lea
aas
mov
pop
lock
push
jnp
jp
les
xor
ss
call
and
jae
arpl
adc
pop
out
lret
dec
jmp
imulb
out
xchg
das
pop
int
sbb
or
and
inc
shll
mov
imull
dec
sub
mov
cmc
jb
loope
std
inc
adc
add
push
push
jno
das
lods
sub
es
and
cmpsl
lock
int3
mov
movsb
scas
mov
mov
cmpsb
sbb
data16
hlt
leave
cwtl
cli
jle
cmc
add
icebp
repnz
dec
add
add
sub
int
mov
xor
jnp
sub
inc
push
xchg
or
add
leave
movsl
fstl
popf
inc
push
aam
push
cmp
or
pop
ret
fsts
pop
orb
push
add
push
rcrb
movsb
dec
shrl
or
dec
ret
mov
lret
je
adc
sbb
pop
mov
and
rol
push
daa
leave
stc
fdiv
int3
in
fistps
fs
clc
xor
jmp
outsl
jg
sahf
xchg
push
fidivrl
into
gs
aam
dec
pop
and
sbb
pop
xor
push
jnp
test
das
cmp
xor
in
mov
sbb
pop
add
mov
dec
pop
lods
jb
psllw
dec
push
mov
scas
mov
pop
leave
out
jp
daa
adc
aad
mov
test
arpl
or
dec
in
test
nop
rol
in
movsb
decb
int
repnz
cmpsb
xor
push
dec
dec
ds
outsl
movsb
loope
flds
bound
xchg
sub
ja
ret
push
dec
xchg
daa
not
lock
leave
aas
aas
in
sarb
jnp
shrl
jae
repz
clc
xchg
addr16
xor
outsb
js
test
or
xchg
bound
pop
push
pop
xlat
or
das
sbbb
int3
mov
push
dec
sahf
mov
or
int3
jne
xchg
mov
mov
notb
cltd
scas
push
push
leave
int3
mov
adcl
outsb
out
aad
sub
out
or
enter
adc
pop
xor
rcrb
xor
pop
andl
aaa
icebp
mov
pop
or
fidivrs
fstpt
dec
imul
mov
sub
jge
out
dec
or
popa
jno
ret
mov
pusha
xor
push
ret
js
jno
push
add
aaa
xchg
ficompl
push
xchg
aaa
dec
out
cmp
cmpsl
push
mov
movsb
fdivs
adc
pop
cmpsb
popa
pop
dec
scas
out
xchg
push
xor
lret
inc
ljmp
js
movsl
add
addr16
repnz
adc
adc
mov
xor
xchg
xor
pushf
test
push
fldln2
xor
xchg
lahf
push
push
ss
call
inc
cmp
mov
sub
scas
adc
pop
dec
nop
xchg
or
add
push
out
stos
loop
sub
lods
jae
dec
into
das
scas
icebp
subl
push
inc
or
rcrb
mov
leave
movsb
add
rcrl
ds
mov
mov
push
jg
addr16
sahf
push
repz
dec
cli
movb
outsb
dec
sub
cmp
psllq
or
mov
fildll
push
sub
js
nop
std
data16
outsb
sub
rolb
test
or
pop
dec
imul
jl
cmp
pop
adc
mov
pop
pop
stc
add
lret
cmp
mov
lretw
cld
dec
insl
or
jmp
adc
xor
adc
rcrb
xor
mov
shr
cmp
and
lock
es
cs
pop
lret
test
cmpl
enter
iret
das
sub
in
das
sbb
rclb
sahf
test
insb
ds
outsb
cmp
out
xchg
fidivrs
lcall
mov
sbb
push
les
icebp
movsl
pop
pop
insb
orl
test
and
xchg
pop
jge
movsb
lret
mov
sub
xchg
sub
sbb
fsts
and
jle
and
repz
pop
mov
push
push
scas
push
mov
xor
sbb
push
test
fcompl
jmp
or
test
jne
sbb
mov
add
xor
mov
test
pop
lods
add
xor
xor
hlt
sbb
mov
negl
mov
aad
mov
fwait
cmp
lret
orb
xor
mov
jnp
fcoms
sub
dec
adc
sbb
jge
dec
inc
movsb
sub
fnstenv
loopne
stc
loope
or
jnp
inc
test
popf
cmp
cmp
dec
aaa
cs
movsb
ds
fimuls
stc
cltd
sbb
idiv
or
cmpl
int
push
insl
push
sbbl
aas
mov
push
inc
jp
jne
cmpsl
inc
cmp
loopne
push
and
jge
jg
cmp
add
jmp
inc
pop
outsb
push
sbb
xchg
mov
adc
les
mov
mov
sar
xchg
dec
xchg
scas
mov
pop
lea
outsb
imulb
jmp
cmpb
add
add
mov
ret
ja
into
pop
in
xor
mov
ja
adc
sahf
stc
les
gs
or
inc
in
push
sub
mov
dec
mov
mov
jae
mulb
add
je
pop
ds
and
inc
pushf
push
paddb
ja
mov
das
lret
mov
test
sbb
push
test
xor
push
adc
or
adc
inc
mov
mov
push
inc
mov
stos
push
not
mov
jo
sub
and
jecxz
popw
push
xor
pop
adc
loopne
fbstp
sahf
inc
ss
pop
mov
pushf
mov
dec
fnsave
add
push
mov
outsl
outsl
inc
cmp
pop
jns
daa
sub
push
sub
ja
or
stc
or
mov
dec
mov
or
or
cmp
mov
xor
or
cmp
dec
test
xchg
pop
dec
frstor
lea
jbe
xor
loopne
cmc
clc
sub
push
push
stc
or
pop
outsl
gs
add
pop
mov
test
push
xlat
cmp
sbb
in
test
push
or
mov
lds
mov
js
in
add
loope
test
adc
dec
jb
sub
icebp
mov
push
fs
adc
fsubrs
push
cmp
ljmp
mov
test
pop
pop
mov
sar
jno
ljmp
test
outsb
fcomip
or
xor
xor
sub
xchg
xor
and
or
push
into
shll
enter
push
loop
ljmp
mov
push
leave
jl
and
or
pop
push
push
push
cld
and
jnp
sub
inc
hlt
sub
xor
sbb
xor
dec
imul
and
insl
mov
out
test
pop
push
popf
sub
repnz
sbb
stos
or
adc
lea
adc
repz
adc
cmp
mov
ret
int3
pusha
rcl
leave
xchg
movsl
fidivs
xchg
sarb
xor
or
sbb
or
inc
xchg
lcall
loopne
mov
leave
or
cmp
cmpsb
pop
mov
lock
bound
shl
cmp
xchg
aad
cmp
ret
mov
cmpsb
cmp
insl
cmpsb
xchg
insb
pextrw
mov
fwait
jg
xor
imul
cmp
cld
mov
loopne
iret
movl
fadd
mov
call
or
adc
enter
ficoml
movsl
inc
movsb
add
std
or
dec
adc
adc
movsl
inc
jl
sub
stos
xor
pushf
and
insl
fisubs
addr16
imul
and
pop
add
adc
and
or
dec
sub
push
xor
das
cmpsl
jno
cs
mov
jb
mov
fstpt
fnstcw
mov
mov
jecxz
push
addl
stos
rcrl
add
cltd
add
and
sbb
inc
data16
cmp
dec
jo
test
sbb
push
pop
loope
leave
jns
ljmp
or
xor
bound
push
pusha
pop
lret
test
in
jmp
xchg
xchg
out
rclb
imul
mov
ror
add
sub
lret
loope
notl
xchg
sti
xchg
movsb
sbbb
pop
outsl
add
sbb
pop
pop
in
push
cmp
add
imul
popf
xorb
xor
fcomps
popa
inc
and
cld
or
mov
mov
test
jl
fsubl
jo
pop
