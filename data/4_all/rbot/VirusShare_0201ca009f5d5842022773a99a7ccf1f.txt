adc
enter
dec
xchg
mov
lods
insb
fildl
pop
ja
fisttpll
xor
and
mov
mov
rcl
mov
xor
and
and
bound
jg
push
lock
xchg
cmp
lds
cmpsl
sbb
adc
mov
rorl
dec
mov
mov
mov
pop
cli
ja
leave
mov
and
dec
sbb
pop
mov
movsb
shlb
std
loop
ret
cmpsl
and
dec
and
jmp
out
stc
mov
out
sub
enter
mov
mov
loope
or
test
mov
dec
mov
push
mov
add
outsl
jb
add
push
lock
dec
por
xchg
add
bound
addr16
out
ret
in
mov
inc
lds
inc
sub
mov
pop
test
je
jmp
pushf
inc
cmpsb
sbb
scas
xor
and
mov
mov
gs
jmp
inc
pop
push
or
sbb
aam
shr
ret
push
iret
insb
cmp
or
mov
fisttpl
sbb
push
mov
and
arpl
arpl
sub
or
outsb
mov
sub
dec
mov
xchg
clc
enter
adc
test
stos
mov
sahf
adc
aam
xor
xchg
ss
cli
enter
aam
inc
jno
pop
mov
cli
xchg
shll
pop
pop
aaa
jns
xor
sbb
and
pop
fwait
and
pop
stos
cmc
ret
mov
aas
inc
pop
sbb
lea
iret
mov
sub
in
es
add
xor
sub
jns
pop
test
cli
sub
or
xchg
sti
push
jo
pop
jno
cwtl
por
call
or
fsubs
dec
mov
sbb
sub
push
xchg
popf
fs
xor
call
dec
mov
rcrb
lods
aam
mov
bound
cmpsl
xchg
idivb
fwait
in
fidivl
sar
push
call
lret
mov
xchg
xchg
xchg
mov
mov
std
mov
ljmp
jo
add
inc
cmp
xchg
cmp
inc
and
dec
rolb
je
pop
push
pop
ja
and
push
test
pop
dec
inc
lea
or
and
and
or
call
jmp
inc
addl
sub
mov
mov
inc
cmp
adc
or
push
call
iret
movsl
fwait
out
andnps
stos
outsl
jmp
inc
push
xchg
aas
testb
xor
fidivrl
leave
pop
lods
cmp
inc
add
pop
push
pop
push
call
out
pop
aam
ljmp
fdivrl
dec
mov
and
out
and
fst
dec
in
sahf
and
sub
jbe
out
mov
addr16
lds
or
jmp
mov
call
push
call
sub
pop
jae
ret
or
scas
mov
lcall
xlat
cmp
int
dec
inc
aad
jge
xchg
push
shl
inc
or
movl
movl
push
call
pop
xor
dec
mov
pop
fbld
das
popf
into
lcall
mov
add
add
or
les
stc
movl
push
call
pop
lcall
dec
push
rcrb
add
xchg
push
pop
test
adc
sbb
adc
dec
xor
push
xchg
out
cmp
les
dec
jne
push
mov
jmp
pop
xchg
loopne
hlt
jno
shll
push
and
adc
cmpb
xor
sub
jg
and
das
add
sbb
sbb
mov
sub
pop
add
add
mov
pop
jns
pushf
mov
sub
push
sahf
jno
in
jo
es
or
mov
jnp
rcrb
mov
mov
jge
enter
add
mov
and
cmc
stc
test
je
push
mov
jmp
jle
ret
and
insl
outsb
out
lock
pop
xchg
insb
sbb
je
sub
mov
mov
push
fadds
hlt
cmp
dec
imul
fistl
pusha
ja
or
and
push
andl
xor
aas
outsl
hlt
mov
popf
cs
cmc
bound
push
lds
mov
stc
outsl
jb
xchg
inc
cmpsb
push
or
pop
or
rol
mov
xor
jmp
adc
xorl
and
mov
icebp
mov
jns
inc
xchg
lret
rcrl
in
cltd
fcompl
mov
xor
std
mov
cwtl
inc
pop
mov
in
mov
xchg
test
jo
subl
or
testl
inc
dec
seta
je
mov
push
add
leave
outsl
xchg
pop
push
pop
xchg
jmp
adc
mov
outsb
scas
lock
adc
pop
rorl
stc
shr
adc
jb
sbb
lds
scas
mov
pop
int
sbb
fsubs
test
out
jmp
jne
jae
pop
pop
dec
sbb
sbbl
pop
leave
outsl
test
jmp
sbbl
xor
scas
mov
jmp
fists
bound
xchg
fidivs
test
mov
mov
pushf
xor
fs
or
push
dec
sbb
js
jns
into
sub
sub
out
nop
cs
mov
movsb
mov
add
inc
push
jns
cmp
pop
sub
cld
dec
jne
loop
jecxz
adc
cs
loopne
fcomps
out
jmp
pushf
push
pop
xlat
pop
dec
cmp
jge
in
rcrb
adc
adc
inc
push
and
pop
push
push
pop
call
movsb
into
insb
leave
and
in
mov
dec
ret
push
inc
jne,pt
cld
cmp
mov
lret
pop
mov
or
cmp
lods
lcall
cmp
lcall
mov
in
dec
test
popf
mov
inc
xchg
mov
mov
adc
lret
push
xchg
sbb
ror
lahf
cmp
cmp
pop
pop
pop
jmp
push
mov
call
imul
shrl
mov
ljmp
sub
mov
ja
adcl
jbe
xor
and
mov
das
pop
inc
daa
call
mov
sahf
push
test
jge
xorl
inc
push
xchg
add
inc
mov
cs
mov
fucomi
je
movsl
arpl
js
out
test
sub
mov
mov
or
stos
and
adc
jmp
lahf
dec
dec
xor
jnp
test
int
push
cmp
dec
std
inc
mov
and
adc
or
push
mov
pushf
stos
inc
jo
push
sbb
sub
dec
jmp
mov
jmp
mov
xchg
xchg
push
mov
call
dec
jnp
pop
adc
pop
movl
in
or
push
leave
inc
mov
ret
sub
scas
jp
lea
and
dec
outsb
daa
fwait
push
sub
psraw
inc
addb
pop
xchg
pusha
arpl
ljmp
or
or
dec
adc
in
dec
cwtl
xchg
or
dec
pop
data16
jnp
mov
fcmovb
add
ret
and
adc
int
imul
cli
xchg
fstl
cmpsl
xchg
push
in
sub
sbb
cmp
pop
add
push
movsl
leave
and
rorb
cs
jae
jne
mov
jmp
inc
nop
cmpsb
scas
fldt
adc
imul
sub
jmp
arpl
iret
mov
lea
and
int
bound
pop
xor
add
call
mov
cmp
out
popf
test
movsb
sub
lods
pop
cmp
movsb
push
jecxz
jp
gs
into
leave
in
iret
push
scas
cmp
sub
pop
jbe
sbb
xor
xor
aaa
movsb
xor
push
pop
shlb
xor
push
fcmovu
dec
and
mov
mov
add
andl
adc
xor
push
cmpsl
bound
fdivl
out
dec
dec
and
out
mov
and
stos
sahf
jnp
inc
ja
ja
cmp
pop
sar
scas
ljmp
or
movsb
popa
jo
fnstsw
int
jbe
add
mov
pop
mov
ss
ss
idivl
sbb
pop
outsb
cmp
lods
cli
add
xor
test
je
orb
inc
leave
push
or
lcall
mov
out
stos
ljmp
fldl
repz
jg
jnp
in
dec
jmp
dec
ss
xor
or
dec
mov
mov
inc
mov
mov
sbb
pop
mov
pop
or
mov
jns
and
ffree
cli
ja
imul
scas
cmp
mov
adc
aad
hlt
mov
mov
or
xor
in
xor
bound
and
xchg
js
dec
leave
dec
and
mov
mov
andl
adc
xor
pop
cmpsl
bound
test
incb
push
mull
mulb
addr16
icebp
sti
push
pushf
insb
push
lock
vunpcklps
adc
xchg
sub
add
insb
movsl
test
jp
sub
lds
lods
inc
sbb
mov
mov
aam
and
sub
sbb
mov
ja
jle
xchg
sbb
pop
ss
adc
push
orb
xchg
push
add
xor
data16
lock
rorl
fidivs
or
dec
outsb
call
ss
dec
cmpsl
stos
dec
sbb
loope
mov
push
pop
mov
inc
jmp
mov
or
int
lods
stc
push
ds
scas
mov
cli
rcl
cli
mov
imul
call
lret
cmp
cld
mov
cld
mov
xor
cltd
mov
shlb
xor
push
add
dec
and
and
cld
mov
push
repz
xor
mov
sarl
test
mulb
negb
idivb
data16
lock
push
dec
insb
push
lock
adc
popa
adc
xchg
loopne
xchg
adc
nop
cmp
cmp
insb
jp
fnstsw
xor
jbe
inc
out
stos
cmp
lods
inc
mov
mov
mov
aam
and
sub
jmp
mov
sbb
sbb
shlb
adc
xchg
int3
mov
imul
mov
movsb
mov
out
add
repnz
jle
jnp
jecxz
dec
and
dec
ss
ss
sti
cmpsb
stos
dec
loope
dec
mov
mov
dec
mov
mov
cmc
cli
sbb
mov
cmp
mov
fists
pusha
cli
inc
sar
ja
push
leave
cwtl
call
lret
cmp
cld
cmp
cld
mov
mov
outsb
xor
dec
mov
shlb
xor
push
mov
dec
and
mov
mov
sbb
andl
adc
xor
insl
cmpsb
bound
lds
lret
fiadds
mov
daa
cmp
cld
fs
lret
inc
rcll
push
xchg
cmc
adc
adc
jp
outsb
xor
sub
xchg
cmp
sbbl
pusha
outsb
xor
addr16
mov
lods
in
xchg
lret
pop
lahf
in
js
dec
sub
scas
cmp
push
movl
cs
jne
sbb
push
mov
test
dec
mov
lods
push
mov
push
cmp
cmp
cmpsb
ds
push
je
sbb
shrl
cmp
lea
adc
cmpsb
or
ss
scas
dec
cltd
adc
in
jp
pop
aas
mov
or
jmp
xchg
jae
sbb
movb
xor
addr16
push
pop
repnz
push
fs
clc
jne
xor
or
mov
sbb
out
movsb
rcl
cld
repz
jno
repz
xlat
adcl
or
add
xchg
push
sbb
inc
sub
xor
xor
lock
jge
in
jle
inc
das
jns
cs
out
insb
jae
insl
sub
add
add
pop
fidivs
mov
inc
dec
jle
add
repz
or
xor
mov
xor
xor
push
or
faddl
out
cltd
push
add
adc
dec
and
test
mov
jo
mov
push
iret
in
push
cmp
pop
mov
add
sub
dec
loop
sbb
incb
ss
mov
in
outsb
adc
pushf
xor
aad
push
ja
pop
dec
ret
mov
les
fiaddl
and
and
stos
mov
fldcw
mov
mov
movsb
xchg
shll
xchg
iret
inc
rolw
adc
jne
inc
push
mov
push
outsl
cmp
fisubl
data16
cmp
xor
aam
mov
loopne
idiv
jo
dec
xchg
push
jnp
mov
mov
enter
outsb
mov
sbb
in
sarl
rclb
ret
call
aam
mov
setle
xchg
ljmp
add
int
mov
leave
inc
mov
test
or
testl
test
push
dec
inc
fld
add
int
jmp
jns
sti
xor
test
out
pusha
popf
mov
lods
xor
cmp
xchg
and
mov
jnp
mov
push
lods
cmc
scas
xchg
push
sbb
call
loopne
aad
add
push
mov
mov
and
int3
sti
dec
nop
lahf
out
lods
sbb
in
clc
fnsave
jle
pop
xchg
dec
xchg
or
sbb
push
cmp
xor
pop
pop
dec
add
push
pop
pop
xor
daa
imul
jb
aad
xlat
das
sarb
mov
cmc
and
js
mov
int
inc
jb
roll
pop
pop
out
addl
mov
jmp
mov
repnz
pop
xchg
or
xchg
call
lock
jns
fistl
shlb
xor
mov
das
sub
loope
xchg
addr16
adc
mov
int
hlt
xchg
mov
std
imull
inc
ds
dec
pop
hlt
mov
andb
lcall
push
inc
push
rorb
lahf
addl
sbb
fcmove
adc
stc
or
or
mov
lods
cmpsl
adc
maxps
ss
das
push
adc
fcoml
mov
xor
add
pusha
mov
fnsave
pop
dec
jbe
out
cmp
test
adc
pusha
add
outsb
das
adc
push
cmp
in
sub
iret
add
and
mov
insb
sub
fnstcw
das
outsb
sub
popf
out
sbb
lcall
mov
les
test
sahf
loop
repz
xchg
push
loope
lods
lods
xor
das
pop
stc
jle
adc
dec
repz
push
push
mov
cmpsl
cli
loopne
pop
jl
stos
movsb
pop
mov
mov
jl
daa
xchg
mov
loope
xor
sbb
jne
mov
cld
or
or
inc
push
sub
jnp
insl
mov
dec
test
jmp
xchg
jg
icebp
sbb
cmpsb
mov
iret
sbb
repnz
jo
jmp
and
push
dec
mov
jno
pop
sub
aas
mov
sub
jle
mov
mov
or
xlat
jl
clc
dec
fisubrs
or
out
dec
xchg
xchg
fadds
sub
mov
add
pusha
sbb
jl
add
mov
cltd
test
gs
test
inc
lret
adc
pop
mov
pop
int
dec
rclb
jb
push
in
nop
test
mov
push
pop
adc
gs
iret
cmp
aas
jno
add
inc
xor
mov
ss
loop
lcall
adc
inc
or
and
jmp
cltd
loopne
ja
push
test
mov
std
scas
mov
leave
subb
out
xchg
jnp
adc
or
sbb
pop
movsb
cmp
pop
push
addr16
or
and
inc
xor
stos
test
int3
stos
jl
into
imulb
scas
test
push
icebp
dec
or
scas
cmp
lock
mov
or
ficoms
or
fsubrs
fstpt
lcall
call
xchg
push
sbb
daa
pop
mov
lcall
sub
push
cmp
lods
ret
sub
loope
ds
sbb
xor
js
fcmovu
out
cmp
out
mov
adc
jno
dec
or
jp
sub
sahf
add
and
ljmp
int3
test
scas
test
aad
pop
lret
push
mov
push
mov
movsb
mov
rcrl
negb
push
add
popf
jmp
pop
xor
cmp
scas
pop
or
mov
imul
movsb
sbb
fistps
dec
mov
inc
jmp
add
stos
xor
xor
pop
inc
and
shl
pop
cmp
sub
stos
rorb
andl
adc
pop
sbb
loopne
mov
and
push
jmp
test
mov
fcmovb
inc
aas
push
mov
jnp
rcll
jle
mov
lahf
jmp
mov
or
ret
push
push
push
adc
out
sbbb
jecxz
and
inc
mov
inc
cmp
inc
fsubrs
hlt
rcrb
out
arpl
stos
xchg
mov
ljmp
xlat
push
sarl
rolb
ficoml
lcall
insl
sbb
mov
mov
aaa
pushf
xchg
adc
cwtl
aas
inc
xchg
and
push
movsb
mov
cltd
and
cmpsl
cld
mov
mov
in
loop
cltd
mov
fisttpll
arpl
je
repnz
jnp
xor
lds
mov
or
fwait
js
xchg
cmp
out
arpl
mov
int3
push
shl
in
js
cmp
fsubrs
shll
fmuls
test
int
ss
mov
and
xor
mov
mov
scas
les
fwait
inc
jp
cmp
in
cmpsl
in
fdivrs
or
stc
in
xchg
cmp
inc
mov
ja
pushf
jo
lods
ljmp
or
and
out
xchg
mov
xor
adc
imul
popa
adc
dec
int
sub
pusha
add
add
push
inc
loopne
jns
lock
adc
popa
jns
pop
add
out
loope
and
dec
lahf
jo
mov
jbe
inc
sahf
lds
mov
fdivrs
add
repnz
ss
outsl
loopne
mov
iret
test
jl
imul
jg
fucom
inc
mov
fstpl
mov
hlt
cmpsb
sbb
pop
add
cmp
dec
lea
call
sub
es
push
pop
jae
jo
xchg
adc
mov
in
dec
loopne
dec
dec
jecxz
int
mov
shll
decl
outsb
jbe
aam
fimull
notb
mov
dec
loopne
and
inc
lahf
cmp
aas
or
xor
inc
sbb
push
ljmp
pop
fisubrl
fcmovu
roll
les
jmp
insb
inc
outsw
in
sub
adc
inc
stc
cmp
mov
or
icebp
jo
aad
outsb
and
cmpsl
bound
les
adc
mov
lds
or
jae
mov
aas
das
xor
and
aad
xchg
cmp
and
push
sub
jl
or
cwtl
push
in
mov
add
ret
loop
pop
rolb
mov
jmp
in
scas
cmpsb
add
mov
int
xchg
aad
jno
pop
pop
pop
dec
cli
pop
in
push
dec
jne
add
mov
scas
add
add
sub
or
mov
push
mov
pandn
push
dec
pushf
pop
dec
lods
aad
test
xchg
in
sub
inc
pop
or
insb
xchg
aam
push
dec
and
lahf
dec
xchg
ja
hlt
mov
mov
jnp
sti
lret
pop
push
clc
or
inc
jecxz
push
push
subl
les
out
push
mov
add
ret
rcl
sub
sbb
dec
xchg
enter
mov
fisubrl
test
ljmp
cltd
xchg
shrl
adc
js
xor
add
stos
stc
ds
ret
sbb
sbb
inc
add
mov
outsl
pop
cltd
xor
mov
sbb
sbb
xchg
adc
xchg
add
sahf
inc
jno
decl
and
push
comiss
mov
xchg
insl
push
je
push
push
mov
popa
adc
push
das
lret
cmpsl
mov
call
and
mov
test
lret
inc
dec
pop
sub
cmp
sub
pushl
sbb
aaa
jmp
xor
cmp
outsl
adc
dec
pop
jg
pop
cmp
mov
mov
std
inc
lea
rclb
mov
stc
addr16
sub
inc
add
rcll
or
stc
je
pushf
sbb
je
mov
push
rcll
int3
scas
xchg
insb
lods
andb
xchg
mov
sub
sbb
std
cmp
inc
xor
jecxz
mov
jl
call
adc
sti
cltd
in
sahf
outsb
cmp
test
std
ja
sbb
cmp
loop
scas
dec
mov
hlt
inc
sarl
sub
iret
aam
inc
into
adc
mov
and
and
out
adc
mov
xchg
shlb
dec
sahf
faddl
or
sbb
pop
cmp
rcll
addl
aas
addr16
daa
sub
dec
push
and
int
mov
lock
fldcw
fmuls
inc
shr
mov
lahf
mov
xlat
xorb
cli
pusha
outsl
mov
push
push
inc
rcll
insb
sbb
lahf
test
shlb
jbe
dec
mov
push
dec
mov
ds
rolb
add
test
inc
cmpsl
push
jns
dec
in
push
or
test
pop
orl
jne
pop
jmp
daa
jl
push
iret
or
xchg
into
adc
cli
fs
mov
sub
or
push
push
push
shll
clc
xchg
mov
or
decl
mov
lret
aas
sti
dec
lret
inc
fisubrl
xchg
jge
pusha
jmp
test
stos
inc
pushf
adc
push
cs
insl
inc
mov
insb
add
or
xchg
aaa
mov
or
inc
sub
and
mov
or
inc
out
rol
xchg
dec
fiaddl
jecxz
out
xor
pusha
mov
and
cmpsl
mov
test
sti
jae
sahf
in
lods
inc
iret
cmp
fstl
vrsqrtss
push
sub
push
mov
push
lods
popf
mov
adc
and
pop
dec
repz
sbb
push
jnp
mov
or
ljmp
pop
inc
push
lahf
dec
cmpsb
sub
scas
jg
mov
cmpsb
push
mov
cld
add
or
and
jg
cwtl
mov
dec
sbb
inc
xchg
or
test
or
lods
inc
mov
leave
mov
lahf
mov
or
jne
test
adcl
adc
aam
sub
imul
fildll
lret
cmp
push
lock
xchg
pop
push
test
xchg
cli
testb
cmpl
xchg
xor
sub
pop
lock
jo
movsl
mov
movsl
sub
dec
outsl
cmp
pop
in
bound
cld
outsl
and
push
out
cmpsb
test
inc
xor
cmp
es
aas
enter
cmp
in
mov
fsub
ret
out
sbb
pushf
sub
and
fldl
xchg
cmp
dec
xlat
dec
addr16
mov
fs
into
xor
jne
inc
fimull
or
dec
ja
jne
jo
jb
mov
fucom
sub
pop
imul
push
jge
scas
cmp
dec
loop
xchg
jb
push
adc
jns
add
cld
test
xorb
pop
fidivrl
jl
mov
test
jbe
adc
mov
or
addl
push
xchg
mov
insb
pop
call
sub
xor
push
push
test
push
sub
xor
add
cli
movsl
cmp
in
shll
data16
sub
in
pop
xchg
ret
popa
pop
jo
jmp
fcomp
shr
mov
push
mov
stos
ret
xchg
out
push
jnp
sbb
loopne
loopne
adc
hlt
jae
jmp
mov
dec
gs
lods
out
jne
testl
out
adc
dec
and
das
stos
dec
mov
xchg
bound
insl
lods
add
or
pop
lock
cs
pop
lcall
pop
sbb
lret
xchg
mov
jg
mov
fldenv
add
out
aaa
test
jp
lret
dec
stc
lods
or
mov
pushf
insl
daa
mov
imul
in
adc
ret
lcall
sar
xchg
push
mov
ret
pop
adcl
imul
fsts
fs
sahf
add
inc
xchg
jge
out
add
or
pop
sub
rcl
test
test
and
mov
mov
xchg
lds
jmp
mov
loop
jb
or
sahf
repnz
or
xchg
sub
lds
arpl
in
push
stc
add
fistps
in
pop
stos
sub
or
sbb
jp
movsl
imul
fs
jbe
pop
adc
pop
push
mov
out
loop
rcll
insb
pop
in
xor
and
sbb
test
add
add
dec
data16
nop
and
fbstp
icebp
aam
sbb
dec
fistps
cmp
push
scas
pop
es
xchg
push
lea
dec
aas
xchg
aas
pop
das
jo
rorl
jns
jo
ss
sti
aaa
fcoml
lods
lods
out
mov
sbb
pop
notl
fmulp
xchg
std
pop
cmp
lret
and
fcmovu
jmp
sbb
mov
sub
ret
xchg
scas
fs
pop
loop
mov
mov
fwait
and
or
mov
jno
movsb
xchg
adc
mov
adc
call
mull
push
add
cmp
test
mov
push
pop
loope
mov
mov
mov
idivb
inc
and
pop
orl
lret
inc
mov
inc
adc
jb
in
xchg
push
adc
add
cli
data16
inc
mov
push
push
xchg
nop
fstpl
rol
daa
xor
int
lahf
ret
cmp
xor
ss
jmp
loop
stos
add
cmp
dec
add
cld
cmpb
mov
sbb
fldl
mov
and
cmp
xchg
out
nop
jbe
test
in
or
sbb
xchg
lret
fwait
xor
sub
push
ds
pop
sbb
enter
fmuls
xchg
or
add
mov
pushf
sbb
adc
addr16
cs
jno
cwtl
inc
cmp
inc
xor
outsl
insl
hlt
test
cmp
mov
inc
loop
xchg
mov
and
sbb
insb
enter
lock
repnz
cmc
loope
sub
addr16
fdivrl
jg
and
jbe
jnp
aaa
insb
nop
lret
mov
fcomps
hlt
fidivs
xor
das
push
lret
mov
sbb
jns
ljmp
mov
mov
xchg
pusha
mov
stos
sbb
out
bound
jl
aaa
pusha
loop
dec
or
fbld
shl
repnz
popf
xor
xchg
pop
jno
hlt
mov
and
movsb
hlt
iret
mov
cmp
pop
mov
push
inc
mov
subl
cmp
add
je
mov
sbb
mov
lods
bound
in
lret
cltd
dec
sbb
fucomip
lock
jp
push
add
lcall
sub
pop
enter
mov
in
loopne
shrb
inc
idiv
and
pop
mov
mov
xor
mov
mov
das
or
xchg
and
pusha
and
mov
inc
je
imulb
ficompl
loopne
inc
out
lret
sbb
sti
daa
mov
popf
sbb
cmp
scas
pop
push
pop
xchg
or
push
imul
adc
insb
mov
aam
mov
js
fsub
mov
inc
je
sbb
mov
nop
jb
dec
xchg
inc
jge
xlat
aam
mov
jg
pop
insb
or
sub
and
fsubs
idivb
int
jl
ss
jae
pop
pop
adc
jbe
shlb
sbb
sbb
test
xchg
cli
pop
push
xchg
iret
or
cld
mov
mov
mov
xchg
arpl
ret
fwait
stos
jo
or
pop
push
mov
test
mov
clc
xor
jnp
sbb
ja
and
add
repz
std
or
and
loop
jmp
pop
xchg
mov
pushl
pop
mov
popa
iret
lods
jno
hlt
movsb
orb
mov
jb
push
or
push
out
pop
arpl
scas
xchg
pop
xor
adc
pop
nop
cwtl
pop
lea
call
inc
pop
pusha
fxch
and
mov
sub
movsl
inc
mov
loope
enter
insl
fsubs
pop
orb
test
xor
jecxz
fsubrl
lea
push
scas
dec
repz
and
mov
loope
inc
js
add
dec
pop
jle
push
and
jns
xchg
add
cwtl
aaa
mov
out
add
fwait
ss
out
cld
scas
mov
lret
int3
jne
leave
mov
dec
pop
xchg
ljmp
loope
mov
mov
mov
js
pushf
jno
inc
push
fdivrs
mov
mov
stc
or
pop
add
stos
sbb
loope
mov
ffree
vcvttss2si
lock
rcrb
mov
mov
mov
jo
mov
hlt
cltd
nop
ljmp
mov
mov
in
lret
jle
and
fmull
dec
sarb
cmp
and
lods
jb
es
aas
mov
xor
xchg
dec
sub
int3
jecxz
add
adc
or
sarl
fsubs
aaa
adc
xchg
cld
jbe
jle
pop
jl
int
js
push
rolb
loope
loope
cmp
popf
jl
xchg
inc
pop
shr
out
mov
pop
movsb
lahf
stos
loop
subl
rcrb
adc
add
imul
repz
xor
fsubrl
mov
out
inc
scas
mov
popf
dec
or
xor
lea
scas
inc
mov
clc
sbb
call
mov
popf
pop
adc
stc
push
ret
dec
pop
fisubrs
jp
addb
leave
loopne
das
and
push
jmp
aas
lcall
in
hlt
and
out
pushaw
add
fdivrl
push
or
shrb
xchg
sbb
cltd
inc
fnstcw
jecxz
shll
adc
mov
jp
mov
mov
sub
sub
mov
pop
mov
ds
fs
mov
push
cmpsl
xchg
dec
mov
jp
pop
jne
divb
pusha
aas
lcall
mov
cltd
test
xchg
lcall
cmpsl
cwtl
leave
mov
push
in
aaa
dec
daa
loopne
push
cmpps
push
push
adcl
fisubrl
mov
jbe
adc
jb
jnp
dec
pop
push
jno
push
sbb
sahf
sbbb
xchg
outsl
jge
mov
fildll
mov
mov
push
mov
cmpsl
push
outsl
pop
cmp
add
cs
cs
mov
pushf
pop
jno
mov
jns
xchg
adc
pushf
repnz
lcall
push
outsl
stos
pop
cmp
push
dec
cmc
int3
mov
push
inc
and
daa
movsb
sub
xchg
and
xchg
pusha
std
jno
mov
and
insb
jns
test
aaa
mov
push
fidivrs
imul
aad
test
movsb
dec
xor
stos
scas
sbb
adc
mull
mov
jns
pop
push
sbb
inc
push
in
addr16
lret
iret
fsubs
cmpsb
mov
and
lods
ds
inc
rolb
mov
cltd
filds
fcmovnbe
push
in
test
sbb
xchg
dec
out
inc
xchg
sub
mov
xchg
fidivrs
lahf
mov
xor
sarb
int
lds
rol
cmpsb
test
arpl
stos
push
push
xchg
xor
leave
jge
daa
xchg
ret
lods
les
or
adc
daa
mov
mov
loope
gs
pop
dec
into
or
xor
stc
mov
roll
jno
insb
call
cmp
into
hlt
add
xchg
push
pop
in
in
popa
xor
sbb
mov
or
or
pushf
pop
movsl
shr
mov
push
fcmovnbe
jmp
sub
fsubs
aaa
ret
adc
mov
sbb
cmp
sub
movntq
pop
sbb
pop
lea
mov
scas
adc
repnz
mov
cmp
or
mov
cli
lret
ss
xlat
pop
mov
mov
jae
les
xor
jnp
daa
dec
rcrl
rclw
xchg
jmp
sub
lahf
adc
jnp
pusha
faddp
pusha
push
mov
push
mov
jno
and
push
adc
pop
mov
rclb
lds
adc
mov
outsl
inc
aam
gs
enter
rol
orb
outsl
scas
popa
mov
xchg
sub
jge
lods
decl
icebp
adc
mov
mov
rcr
ds
negb
xor
stos
pop
mov
cli
sarb
imul
push
fs
negb
adc
push
adc
scas
es
stos
sbb
jo
ret
push
enter
aam
sti
jmp
insl
sbb
in
dec
adc
cmc
xchg
pop
or
xor
mov
and
jl
in
cmp
cmpsb
pop
jno
stos
mov
out
in
mov
ja
sbb
fcompl
idivb
mov
dec
das
test
in
inc
mov
dec
data16
jnp
call
push
adc
popa
fdivrl
add
scas
xchg
sub
sti
div
jmp
mov
sbb
jecxz
jle
movsb
les
loopne
xorb
jno
fistps
mov
ss
adc
scas
jge
cmp
add
lock
xchg
or
dec
cmp
in
iret
ror
or
scas
out
xor
addb
push
nop
dec
inc
in
or
fwait
cs
out
mov
popf
je
mov
add
mov
notl
imul
out
bound
dec
js
pop
push
cmp
jae
aaa
inc
in
mov
std
stos
mov
ss
test
push
xchg
sub
sbb
xchg
mov
dec
dec
push
or
pop
lods
xchg
aam
sahf
stc
or
mov
push
shll
jge
nop
js
outsb
es
repz
pop
push
sahf
sbb
xchg
dec
shl
lcall
out
sbb
xchg
mov
and
aas
mov
mov
mov
sbb
test
xchg
sar
or
sarb
int3
lret
inc
ret
cmp
cmp
ja
maxps
dec
inc
push
lret
divl
and
xorb
dec
gs
fs
scas
fidivs
lahf
seta
mov
lds
adc
dec
sub
mov
mov
nop
push
push
in
lock
xchg
js
out
push
mov
int3
subb
mov
out
aam
into
cmc
shrl
dec
jnp
dec
push
adc
pop
xchg
mov
cli
scas
xchg
dec
or
rolb
jo
push
jg
dec
cmp
push
jecxz
pushf
mov
sub
mov
cmpsl
insl
sbb
xchg
stos
mov
and
xchg
jae
fildll
add
addr16
add
push
jno
shl
inc
movsl
sti
out
add
out
out
loopne
mov
leave
mov
mov
jo
subb
and
or
cmp
ljmp
test
pop
pop
popa
hlt
loopne
sub
pop
movsb
sub
add
fldl
jae
stc
mov
out
xchg
fwait
xchg
jno
adc
xorb
push
jle
iret
push
inc
fwait
jns
divb
mov
shrb
mov
fs
push
out
in
mov
popf
lcall
lret
fidivl
sbb
out
mov
xor
les
push
xchg
aam
inc
and
and
andl
arpl
jae
in
xchg
enter
aas
mov
les
jecxz
xchg
cwtl
std
je
pop
xchg
inc
jle
into
xor
movsl
or
outsl
add
pushl
push
cmp
xchg
xchg
mov
sub
testb
andb
push
push
mov
push
test
xor
cmp
push
push
inc
mov
dec
cltd
xchg
inc
aam
mov
ljmp
cmpsb
mov
addr16
sub
and
cltd
cmpsb
lock
dec
pop
jge
or
jmp
popf
cmp
push
push
mov
cmp
push
ljmp
pop
bswap
xchg
adc
xor
push
rorb
lods
adc
xchg
mov
ljmp
call
aas
or
cmp
sbb
rorl
push
clc
pushl
lock
ret
int3
jp
dec
push
add
push
lret
mov
loope
and
jmp
enter
and
mov
jne
pushf
ja
leave
pop
and
shll
icebp
jnp
cmc
rolb
scas
dec
sar
adcl
xchg
xchg
push
call
dec
jns
xchg
test
arpl
jmp
fwait
xlat
fnstenv
mov
jmp
or
cmp
or
adc
mov
mov
aas
xchg
and
cmpsl
xchg
jbe
ret
xor
jg
mov
dec
or
dec
mov
mul
push
out
jo
lahf
push
mov
mov
mov
shld
mov
xchg
nop
insb
sbb
dec
pop
std
adc
loopne
lcall
test
jle
adc
pusha
add
and
lcall
add
dec
inc
hlt
pop
mov
or
out
mov
sub
add
mov
pop
gs
out
push
rcl
cltd
pop
dec
popf
sbb
add
push
ja
jp
in
shll
lds
xchg
add
notb
cmp
mov
aad
into
jb
cwtl
sbb
cmp
xor
std
adc
sub
movsb
jp
loopne
mov
addr16
mov
pop
xor
jge
dec
fadds
fsub
push
fldl
mov
mov
add
mov
jne
lcall
push
xor
test
imul
jp
pop
cmp
dec
sahf
loopne
or
sbb
mov
movsb
arpl
outsb
push
sbb
xor
in
mulb
fidivl
fdiv
stos
xchg
lret
stc
fwait
or
stos
inc
lock
mov
sub
jno
std
fnstsw
lods
add
into
xchg
flds
mov
jge
outsl
sub
rorl
push
aad
orl
push
add
cs
mov
cli
notl
mov
nop
dec
iret
mov
xor
scas
mov
mov
xchg
sbb
mov
call
shlb
sahf
fmul
jmp
xor
js
jbe
dec
jne
jmp
inc
fdiv
add
cmp
aam
mov
ja
xchg
stos
push
cmp
cmpsl
sbb
rclb
pop
and
mov
sbb
loopne
fxch
dec
je
ret
jno
int
movsb
sbb
roll
add
insb
out
clc
xchg
cmp
lods
test
outsb
jae
mov
dec
sbb
inc
sbb
jns
dec
sub
inc
clc
sub
mov
cli
xchg
pop
mov
push
sub
lret
sub
add
aam
and
push
aam
popf
aas
pop
test
out
dec
int3
add
lret
or
dec
push
data16
inc
adc
shrl
cmp
jns
outsl
mov
fwait
sub
push
push
lods
popa
mov
sbb
mov
scas
js
ret
sahf
or
ds
stos
sbb
loopne
adc
pop
adc
mov
fistpl
push
jno
sbb
or
cmp
cmc
out
mov
test
inc
jle
mov
lock
mov
mov
popa
aad
lock
outsb
fidivrs
push
mov
test
mov
js
out
add
les
cmp
enter
sbb
das
arpl
insb
jecxz
add
ss
mov
adc
jp
pop
dec
adc
push
out
add
jp
xchg
lock
mov
andb
jl
sbb
aas
adc
cmp
mov
cmpsl
mov
rclb
cmp
jnp
loop
mov
rorl
dec
fmull
movsl
fistpll
adc
xor
fst
aad
push
out
dec
mov
pop
push
js
add
inc
mov
xor
xor
mov
dec
aaa
or
gs
or
push
add
stos
xchg
sub
sarb
push
fcmovb
outsb
and
add
idivb
sbb
mov
xchg
testb
jg
sbb
leave
lea
jno
xor
test
mov
xchg
jmp
sub
pop
mov
das
popf
loope
fsubrs
movsl
bound
and
and
mov
pop
enter
enter
xor
cltd
xlat
clc
call
push
lret
cmc
in
inc
dec
add
fdivrp
sub
sbb
or
shl
xor
daa
std
mov
scas
pusha
rorw
jg
xor
or
adc
mov
mov
xchg
rol
sysret
mov
xor
cltd
push
adc
sub
add
sub
gs
repz
xor
push
sbb
mov
add
in
xor
fnstenv
lods
xor
xor
sbb
cmp
enter
cmp
dec
xchg
dec
stc
mov
out
mov
inc
xlat
cmp
ficompl
call
pop
popa
popf
pop
hlt
cmp
sub
cmp
lahf
inc
test
and
sbb
push
sub
xchg
pop
movsb
call
inc
sub
pop
pop
test
mov
enter
mov
sbb
out
aad
lds
insb
enter
add
cltd
scas
pop
xorb
jbe
or
mov
and
cmp
pop
enter
xchg
and
les
fildll
push
xchg
and
push
xor
xchg
mov
in
jecxz
sub
int
jle,pn
xchg
lds
jmp
lret
jle
movsl
das
popl
icebp
xor
int3
push
mov
repz
or
xchg
bound
sub
lret
out
or
add
jnp
xchg
xor
js
pop
lret
outsb
push
sub
xor
xchg
sub
xor
das
mov
inc
dec
out
add
inc
adc
mov
fdiv
and
out
jo
fmull
xchg
lcall
nop
outsl
ret
outsl
and
xchg
lcall
and
jno
rcrl
cltd
negl
lahf
xchg
mov
jne
vcvtdq2ps
push
sbb
jne
xlat
cmp
mov
push
sarb
push
jo
mov
aaa
test
jmp
push
pop
arpl
aas
and
fs
or
inc
fstpt
mov
fs
and
push
jmp
int
shl
loopne
negb
mov
lret
sub
inc
mov
arpl
into
mov
push
dec
cmc
cmpsb
fstl
popa
test
outsl
mov
cmc
stos
push
das
inc
inc
clc
xchg
xor
imul
cmp
or
ljmp
cmpsl
outsl
in
arpl
repnz
scas
or
nop
xchg
and
jo
sub
or
and
int
pop
xor
movsb
jg
jecxz
jae
jno
ror
sbb
mov
fimuls
rorl
fsubrl
test
out
sbb
cmp
mov
notb
movsb
xchg
xchg
adc
mov
aam
xor
popa
pop
fidivl
bound
decb
jb
lret
rclb
or
add
mov
aaa
mov
idiv
scas
mov
popa
in
jns
xor
xor
mov
lods
mov
inc
loop
mov
push
dec
xchg
jge
pop
lret
sbb
mov
inc
jae
jg
inc
imul
fiadds
int3
xchg
sbb
pop
cmc
dec
ljmp
in
cmpl
cmp
test
dec
xlat
ret
add
adc
cmp
sub
pop
xchg
and
ljmp
push
xor
xlat
cmp
jbe
into
xchg
xor
stos
movsl
mov
mov
add
sahf
mov
pushf
fdivl
or
mov
sub
cmpsb
mov
cld
or
push
scas
mov
inc
add
sti
jge
inc
les
dec
addl
test
jle
psrad
in
ret
mov
jle
rcl
xchg
bound
int3
jmp
lret
imul
cld
std
sbb
inc
xchg
inc
out
sbb
repz
or
adc
fucomip
add
repz
fwait
fistpll
mov
sahf
xchg
mov
stc
shlb
cmp
pop
xor
pushf
push
adc
repnz
gs
fcoml
pop
shrw
adc
mov
dec
outsl
sahf
dec
mov
sub
and
adc
addr16
pop
jle
jp
cli
jge
pop
cmc
mov
inc
push
xor
inc
stos
andl
push
sub
fcmovb
add
sbb
and
insl
and
imull
cmpsl
mov
pusha
bound
inc
lcall
push
lcall
insb
jle
mov
mov
push
pop
je
in
into
sahf
outsb
fmull
das
jg
jne
mulb
test
cmpsb
push
test
mov
icebp
or
imul
lcall
shl
cwtl
test
xchg
cmp
add
lahf
add
out
inc
jp
out
aam
or
pop
cld
adc
pushf
hlt
mov
push
lods
mov
or
mov
xor
pop
cmp
shlb
lds
std
add
lcall
lock
lods
inc
adc
mov
aas
mov
sbbb
cmp
push
loopne
inc
or
mov
nop
sbb
daa
xchg
cmp
sbb
in
je
mov
or
jb
lret
dec
mov
mov
int
mov
dec
sbb
mov
push
push
in
ja
jg
push
xlat
adc
nop
in
jecxz
mov
lods
pop
sub
addr16
mov
mov
mov
push
inc
sbb
daa
cs
mov
push
xchg
inc
in
cmp
sbb
les
scas
std
inc
jecxz
imul
nop
and
mov
sti
push
jge
fwait
leave
mov
push
jmp
add
dec
add
dec
sbbb
xor
mov
stc
lods
test
popa
jne
push
pop
test
popf
sub
cltd
scas
inc
aas
and
cmp
dec
rol
ret
add
adc
fsubrs
xchg
in
jae
inc
jp
leave
inc
lods
push
mov
aam
lcall
fdivl
and
jg
push
adc
sub
adc
xchg
scas
xchg
das
imul
xor
mov
inc
imul
adc
mov
jbe
mov
arpl
mov
sub
bound
or
mov
ficoml
lret
pop
or
dec
stos
in
out
insb
jle
sbb
adc
mulb
dec
mov
push
arpl
cmp
or
or
bound
mov
add
push
add
xchg
std
mov
xchg
loop
pop
xlat
sbb
pop
sarb
pop
push
outsb
dec
inc
lock
insb
mov
arpl
out
add
or
shlb
adc
xor
je
stc
xchg
or
loop
mov
clc
or
mov
sbb
inc
pop
lcall
dec
xlat
cltd
sbb
mov
ffree
hlt
je
into
fimuls
add
negl
pushf
outsl
xchg
fistps
dec
mov
int
jne
xchg
jle
jge
inc
mov
cmc
or
hlt
sub
inc
sbb
shrl
loopne
fidivrs
mov
popa
or
pop
xor
jne
jge
push
inc
fcmovbe
mov
test
test
mov
and
cmpsb
pop
lods
sqrtps
sahf
sub
jne
jbe
dec
push
xor
add
ja
cmp
cmpl
inc
xchg
bound
pop
enter
cmp
sbb
or
jmp
jb
fists
cmp
mov
add
in
insl
in
fnstenv
fwait
cltd
adc
or
mov
mov
pop
loopne
sub
jge
pop
stos
or
xorb
movsl
notb
pusha
adc
movsb
xchg
mov
pop
and
scas
push
psubusw
xor
les
push
xor
icebp
in
and
xlat
push
cmp
dec
loopne
scas
imul
out
jo
pop
mov
imul
rcrl
dec
js
adc
repnz
test
ja
mov
cmp
xchg
push
lahf
clc
stos
mov
insb
pop
or
enter
cmp
rcrb
mov
ss
andl
fwait
jmp
xchg
movsl
xchg
imul
jecxz
add
cmp
mov
cmpsb
jnp
das
sub
lods
nop
dec
shlb
add
mov
out
inc
jmp
pop
or
enter
jmp
ret
leave
jbe
lret
jae
test
jge
dec
jl
and
es
adc
and
rolb
rorl
lahf
fisttpll
xor
rolb
gs
inc
pushf
cmp
je
sub
int3
out
push
mov
out
mov
mov
jo
pop
into
push
push
sbb
leave
lahf
mov
and
xchg
rolb
push
xlat
bound
xchg
adc
and
mov
imul
cwtl
mov
pshufw
or
jle
rcl
push
rcll
std
xchg
ljmp
pushf
adc
push
lret
jecxz
arpl
std
outsl
test
sub
push
mulb
stos
out
cmp
pop
aam
inc
jmp
pusha
xchg
and
and
mov
fmuls
push
loope
push
xchg
into
in
mov
xlat
xchg
pop
jo
ss
push
add
pop
jecxz
and
dec
xchg
filds
xlat
mov
mov
and
and
xchg
daa
fsubrl
ret
sbb
mov
xchg
xor
and
mov
nop
mov
insb
inc
test
mov
fs
insb
into
add
adc
pop
dec
sub
cmc
sub
in
and
loopne
out
out
push
scas
in
shr
or
scas
cmpb
push
and
fiaddl
ffreep
mov
pop
mov
fsts
dec
push
adc
pop
sarb
mov
and
subb
push
int3
pop
xor
mov
xor
out
jnp
mov
dec
test
ja
je
sbb
rclb
dec
es
fcoms
or
imul
mov
jno
sbbb
insl
mov
push
push
dec
aad
mov
sarb
push
and
jns
dec
jecxz
sbb
jbe
lcall
outsl
jp
pop
and
inc
in
scas
stos
xchg
mov
mov
insb
divb
fldl
scas
sti
xor
cmpsb
insb
mov
xlat
adc
cmc
stos
mov
lods
pop
inc
hlt
jae
xor
popf
popa
sahf
punpcklwd
jne
lods
std
xchg
mov
nop
mov
push
cmp
mov
inc
shrb
adc
mov
ds
pop
sarl
mov
sbb
std
xchg
fwait
mov
jmp
call
insl
adc
cmp
insb
mov
das
pop
movsl
scas
out
push
push
pop
inc
rcr
lahf
bound
inc
jmp
ja
dec
out
fcmovnu
ret
aam
sbb
and
imul
xor
mov
popf
testl
popa
cs
int3
jmp
jl
aas
fistl
movsl
add
fmull
sahf
je
iret
xlat
in
std
int
and
and
cs
mov
adc
out
dec
xor
push
repz
shl
data16
adc
pushf
repnz
pop
dec
pop
jns
xchg
and
mov
or
setae
repz
mov
sbb
fstpt
in
ficomps
push
les
imul
push
xor
lcall
mov
cmpsb
rclb
adc
leave
mov
scas
pop
int3
pop
imul
pop
inc
sbb
ret
push
gs
inc
push
mov
cltd
or
sub
jmp
jmp
insb
int
push
fdiv
xor
xor
lods
push
fdiv
pop
insl
jle
les
push
out
jne
idivb
add
stos
dec
cli
or
aad
loopne
pop
sub
sbb
loope
inc
pop
ret
xchg
lods
fimuls
add
sub
sbb
int3
xlat
push
in
sbb
notl
pop
std
mov
xorb
push
inc
cmp
pop
lods
ljmp
sarl
pushf
or
push
cmp
or
icebp
xor
out
push
inc
outsl
stos
inc
daa
jns
cmp
fwait
sbb
push
cmpsl
cmp
add
adc
push
repnz
test
js
lods
mov
insl
movsl
fsubrl
into
lea
lock
jno
outsb
loopne
mov
xor
sarl
mov
aad
dec
fadds
mov
inc
icebp
cmp
add
adc
jmp
inc
insb
lods
sub
out
push
jnp
or
mov
xchg
push
xchg
repnz
push
mov
dec
in
fstpl
negl
and
ljmp
add
mov
sbb
sub
cmc
mov
sbb
aas
roll
pop
lret
dec
js
hlt
outsl
std
mov
inc
mov
cld
sub
mov
aam
lcall
scas
shlb
insl
je
std
fsts
loopne
pop
mov
mov
rol
mov
dec
push
add
lea
lock
popa
inc
push
and
sarl
xchg
xchg
rcrl
lods
push
and
xchg
adc
adc
jge
adc
ret
xchg
adc
dec
and
mov
jae
dec
cli
std
mov
loope
std
push
sub
pop
test
push
or
add
decb
in
push
pop
aaa
stc
pop
sbb
iret
lahf
inc
pop
je
popa
das
xchg
clc
or
das
insb
test
stos
jno
and
in
and
cmp
faddl
in
bswap
or
cmp
daa
dec
movsb
mov
sbb
mov
sbb
add
loop
dec
cmpsl
dec
push
add
xchg
jb
sbb
cwtl
and
ljmp
pushf
ja
inc
add
add
pop
and
pop
xchg
fs
add
xchg
rcll
push
sbb
or
enter
loop
icebp
insl
js
push
out
inc
inc
mov
fldt
or
fsqrt
cmp
stos
jno
xor
mov
xorb
lea
scas
adc
sub
fcoml
and
adc
jecxz
and
dec
insb
outsl
xchg
mov
test
xor
out
mov
fldt
and
jb
fstl
jae
dec
mov
jmp
cmp
dec
fidivl
pop
jecxz
sub
mov
in
inc
add
loop
in
dec
or
jge
test
pop
sub
jbe
ds
in
dec
lods
arpl
ror
sub
jge
out
call
lods
push
test
or
sbb
out
pop
dec
and
fwait
inc
and
mov
dec
jbe
sahf
or
jl
mov
fstpl
aaa
ret
es
pushf
lcall
cmp
mov
lock
shl
fwait
sub
mov
sbb
jge
aam
rcrb
hlt
lock
sti
sub
push
movsl
mov
cmp
push
push
nop
sbb
jle
and
push
cmp
pop
xor
sbb
cmpl
imul
cwtl
into
insb
mov
adc
sbb
mov
nop
ja
nop
movsb
jno
pop
popa
inc
push
dec
xchg
in
adc
sub
xor
fnclex
cmp
xlat
insl
mov
push
aad
lods
pop
into
pop
fs
xor
jo
ljmp
jb
inc
fwait
dec
or
dec
or
dec
das
inc
or
cli
push
out
sub
ja
mov
and
or
cmp
xchg
addr16
xchg
mov
sub
out
xor
jnp
cli
dec
std
add
or
pop
dec
addl
pop
push
movsl
push
test
test
xchg
cmp
or
sub
inc
lcall
inc
and
popa
outsl
sub
and
xchg
jae
mov
sbb
rcll
jb
sub
mov
add
test
sahf
xor
enter
add
and
or
es
lahf
das
jne
xchg
les
shl
movsl
and
add
jbe
fsub
push
fld
sbb
and
xor
mov
dec
enter
scas
xchg
mov
ret
xor
call
imul
test
mov
pop
pushf
les
insb
sbb
cmp
fsubs
outsl
iret
cli
scas
aas
sahf
dec
frstor
push
jmp
into
repnz
sti
dec
xor
jne
add
mov
xchg
dec
cmp
sub
mov
stc
cld
sti
rcll
pop
xor
popa
fsts
xchg
xchg
mov
push
bound
cmc
les
mov
loope
or
dec
inc
leave
jns
addr16
mov
pop
enter
dec
mov
sahf
or
ret
mov
push
xlat
push
aad
mov
push
callw
push
and
sub
fcmovbe
pop
mov
imul
jge
popf
adc
lods
mov
cmpsb
or
cmp
cltd
xchg
bound
sarb
subl
xor
icebp
je
inc
outsl
arpl
hlt
or
sub
lds
pop
out
push
mov
out
sbb
js
xor
in
and
jl
outsb
repnz
mov
sbb
lret
lock
lock
stc
push
ss
leave
xor
out
rclb
enter
jg
or
adc
testb
push
fcmovnu
jno
or
cmpsb
pop
add
and
test
dec
xlat
lods
js
cmp
aad
divl
lcall
je
insb
pop
fidivrl
mov
rcrl
sbb
loopne
and
jnp
push
pop
cs
inc
clc
lock
and
cld
dec
and
inc
push
pop
xchg
jmp
jb
imull
movsl
and
mov
and
test
add
and
ds
ljmp
popa
outsb
or
lret
ss
dec
mov
ljmp
jne
pop
push
sbb
pop
pop
out
and
das
adc
jo
pop
jns
and
mov
dec
add
cmpsb
mov
push
cmp
jl
loopne
arpl
push
dec
and
repz
push
subb
iret
mov
dec
push
int
sbb
lods
xchg
pop
and
xorl
sub
adc
bound
shlb
pop
mov
sbb
shrb
int
push
out
out
pop
aam
iret
lea
hlt
arpl
push
xor
push
ss
mov
mov
push
sbb
mov
sar
cld
aas
mov
leave
push
jmp
dec
scas
jmp
adc
xchg
mov
movsb
in
lret
pop
inc
pop
repnz
ljmp
sub
push
jns
inc
es
jg
leave
popf
add
stc
jp
ss
xchg
jno,pn
sub
vpaddb
mov
es
inc
lods
cmpsb
xchg
mov
jb
stos
cmp
mov
rorb
add
sub
fs
ret
in
inc
stos
mov
jmp
dec
scas
stos
or
mov
mov
xchg
or
xor
sbb
nop
jl
test
xor
cli
addr16
cmp
imul
adc
cmp
push
pop
inc
lcall
mov
mov
aad
in
or
xor
bound
xor
push
cld
dec
jns
pop
dec
movsb
lcall
pop
cltd
dec
pusha
nopl
insl
inc
xor
mov
adc
nop
push
jge
je
scas
xchg
jne
lods
dec
lahf
mov
push
and
sub
jbe
dec
sub
sbb
mov
inc
jne
pop
inc
mov
jnp
mov
push
push
jbe
xchg
loop
xlat
pushl
push
das
and
pop
mov
inc
rcll
bound
int3
sub
xor
inc
fstpl
jg
pop
fsubl
push
rcrb
pop
leave
into
aaa
xchg
push
and
fsts
push
adc
mov
das
inc
sbb
jle
pop
imul
lahf
pushl
dec
in
aad
mov
cmp
loope
call
mov
frstor
add
or
sbb
scas
psubd
mov
mov
in
in
add
push
enter
movsl
fwait
out
lahf
or
sbbb
sbb
xlat
sbb
mov
sahf
jmp
mov
jecxz
jl
ret
dec
or
sbb
jns
lea
out
pop
call
scas
push
insb
sbb
movsl
jmp
cmp
sub
iret
vmovsd
mov
push
lods
sub
sahf
pop
mov
xor
inc
ds
aam
shl
xchg
sub
and
repnz
mov
sarl
nop
jmp
jnp
push
mov
outsb
xor
ret
add
inc
and
int3
jae
arpl
sbb
and
pop
jmp
push
stc
push
xchg
cli
ret
sbb
xor
push
sub
and
sahf
mov
xor
pop
mov
adcb
int3
pop
dec
cmp
test
jge
push
jg
in
aad
push
fidivrl
insb
inc
xor
sbb
lods
cmp
jbe
insb
cmp
enter
inc
aas
jo
std
sbbb
pop
ds
pop
adc
mov
das
sarl
sub
out
in
rcll
pop
scas
mov
adc
ss
stos
mov
rcr
sub
dec
loope
cmpsl
test
push
sub
not
in
jmp
rorb
adc
aaa
into
movsb
inc
jo
dec
xchg
inc
pop
lods
adc
push
andb
adc
pop
add
cmp
mov
mov
sub
pop
pop
add
das
cmp
enter
push
mov
xchg
and
xor
movl
cmp
mov
pop
icebp
cli
fwait
in
rcl
push
dec
cmp
sti
sahf
adc
xor
push
push
cmp
and
fdivp
fadds
jno
or
les
enter
jg
push
repz
fwait
jmp
mov
pop
je
setno
test
inc
scas
call
add
popa
inc
jns
fidivl
xor
test
adc
jb
int
add
fiadds
mov
ss
cmp
shll
aas
sub
pop
add
sub
mov
arpl
push
hlt
mov
loope
inc
ror
sahf
push
movsb
fcmovu
mov
das
mov
adc
and
fmul
cmp
cmp
mov
pushf
cmp
rcrl
mov
pushf
mov
push
dec
es
out
cmp
pop
test
push
into
loope
lds
mov
sbb
cli
cmp
jmp
push
and
lret
flds
xsave
loope
out
xchg
push
push
sbb
stos
dec
xchg
in
dec
fcmovnu
out
fistpl
pop
sbb
add
pop
add
or
mov
jecxz
cmp
repz
inc
sub
inc
and
xchg
jle
daa
add
push
xor
lcall
mov
cltd
mov
jmp
std
movsb
mov
fs
add
xchg
cmp
fiadds
inc
pop
scas
xor
adc
loop
xor
cli
pop
stos
inc
es
jmp
mov
mov
push
aam
gs
jns
outsb
ret
xor
or
cmpb
jns
jg
cli
xchg
test
inc
xorl
cmp
and
mov
out
dec
cmpsb
js
jns
pop
out
xor
inc
clc
xor
cwtl
ja
pop
xor
or
dec
jl
adc
fcomip
sti
xlat
sub
pop
jnp
fidivl
mov
mov
aas
xchg
in
mov
xchg
popl
leave
push
cmpsl
fsubrs
cmc
mov
jge
pop
shlb
out
or
fcoml
stos
sub
xchg
mov
in
cwtl
sub
cltd
sbb
out
inc
push
jg
mov
inc
add
cmp
push
out
xchg
aad
push
nop
hlt
insl
push
aam
imul
xor
loope
jle
xchg
xchg
out
mov
add
push
aaa
popa
test
adc
sbb
xor
stos
push
xor
sahf
inc
pop
sbbb
push
mov
stc
mov
push
xor
cli
shr
subb
jl
fwait
pop
idivb
arpl
lret
popl
fiadds
in
add
inc
push
ret
or
in
dec
loop
jecxz
push
cmp
daa
call
scas
out
repz
mov
dec
stos
andb
push
es
aaa
jbe
inc
sbb
adc
lods
int
iret
jbe
add
xor
add
sub
mov
mov
push
fmul
movsl
scas
mov
xor
adc
into
xchg
jo
add
lds
ss
pop
imul
aaa
lahf
cmpsl
jne
cmp
cmp
and
clc
add
jbe
dec
sub
fcoml
pop
jg
cltd
and
ja
xlat
outsb
nop
testb
clc
dec
xchg
enter
xchg
xlat
loop
lcall
ret
ret
in
sub
jle
ljmp
xchg
xchg
lds
imul
push
jp
cmp
aaa
and
jae
mov
adc
lock
dec
adc
mov
and
movsb
or
push
movsb
in
orb
pop
sbb
adc
add
adc
mov
cmp
out
daa
fnstenv
jne
xor
mov
fmul
lods
std
stos
push
jg
xlat
shll
stos
out
jno
fisubrl
in
in
inc
les
ret
push
lcall
es
roll
andl
push
jbe
xor
xchg
adc
jns
push
jns
jmp
test
call
xchg
cmc
loope
shlb
cld
mov
jne
cmp
ja
push
repnz
sbb
cmc
sbb
jne
dec
aam
xchg
cmp
aam
pop
jns
sub
subl
mov
pushf
cmp
bound
push
push
outsb
sub
bound
cwtl
iret
jmp
lahf
mov
jmp
in
mov
push
or
dec
xor
jmp
dec
arpl
xchg
out
mov
adc
adc
or
jp
push
inc
jnp
push
dec
lahf
pushf
inc
xor
xor
arpl
sub
pop
or
cmp
add
stos
jb
jns
dec
lret
js
mov
xchg
loope
jno
iret
pop
xchg
mov
repz
jle
adcb
and
bound
xor
movsl
add
imul
ret
lret
testl
in
andb
or
enter
out
test
jo
adc
imul
jbe
ficoms
inc
rcrb
mov
inc
mov
pop
or
lds
pop
mov
jmp
sub
hlt
and
outsb
pop
pop
sbb
cmp
jg
stc
cmp
pushf
xor
jns
daa
vpcomd
xchg
pop
stos
push
lret
sub
sbb
xor
xchg
jmp
add
cld
inc
call
cmp
add
jmp
in
pop
fcompp
ret
out
push
cmp
shl
sub
push
mov
scas
cmp
mov
cmp
fldt
mov
dec
out
cmp
jp
or
and
fs
inc
call
daa
mov
adc
adc
sbb
iret
xchg
dec
stos
inc
mov
pop
jp
test
pop
repnz
mov
mov
popa
add
sarl
adcb
loope
lock
or
push
mov
fwait
ja
add
test
cmc
add
adc
sti
jp
sbb
mov
xorl
mov
bound
pop
adc
fisttps
arpl
test
cwtl
aaa
sbb
sti
jecxz
push
rclb
stos
cmp
mov
jle
inc
sbb
shll
mov
cmp
gs
mov
mov
sti
lds
sbb
xor
stos
xlat
mov
mov
enter
jae
mov
jae
and
inc
mov
stos
std
push
mov
aaa
inc
fisubl
xor
rorl
in
clc
leave
jle
aas
inc
push
add
data16
mov
mov
mov
fiadds
or
pop
aad
fcoms
jge
fnstsw
adc
mov
adc
xor
lds
rolb
sbb
cmp
mov
fidivrl
mov
sbbl
inc
adc
xor
orl
scas
jb
stos
arpl
adc
push
and
push
push
cmp
jmp
xchg
pop
pop
inc
arpl
mov
scas
cmp
sub
fxch
sahf
jmp
addr16
mov
mov
push
xchg
jbe
sbb
fmuls
rclb
bound
hlt
fwait
iret
repnz
inc
ret
xor
aas
jp
test
pop
fistl
lahf
roll
clc
dec
imul
hlt
scas
push
out
inc
adc
add
add
lock
pop
les
lret
inc
repz
fwait
cmp
add
cli
jle,pt
sbb
lret
or
jb
and
nop
cmpsb
ret
mov
jns
aas
iret
mov
xor
es
add
ficomps
cmc
sbb
ja
in
inc
cmp
or
cmc
sub
shll
cwtl
out
push
adc
xchg
fcoms
pop
stos
xchg
mov
adc
popa
sar
push
jo
jge
xor
sbb
mov
stc
js
int3
push
xchg
cld
std
sbb
or
xchg
aam
mov
inc
sahf
ret
pop
ficompl
jl
inc
add
ljmp
loopne
push
push
or
outsl
outsl
addb
clc
xlat
adc
xchg
nop
or
orb
cs
lods
mov
popf
test
je
push
mov
mov
lret
addr16
adc
sbb
push
in
jp
and
dec
loope
jae
push
jg
jg
xchg
fisubl
push
and
pop
sbb
jb
je
jp
jl
sub
mov
adcl
inc
cmpsb
add
aas
pop
popa
mov
pop
pop
pop
out
xchg
mov
cltd
bound
aaa
push
sbb
je
mov
lret
imull
fildl
cmp
add
sub
out
icebp
cmp
in
jb
call
mov
ja
test
adc
adc
lods
sar
into
push
loopne
icebp
cli
xchg
jns
mov
cmp
lret
or
mov
cmc
mov
rcrl
push
sqrtps
push
loopne
lahf
scas
mov
gs
inc
cmc
cmp
std
ljmp
in
lods
jne
arpl
pop
jae
rol
adc
inc
shlb
movsb
out
cmp
fcomp
mov
lea
jo
loop
test
jne
pop
in
jne
aaa
stos
repz
sti
sbb
jno
call
test
dec
pop
cwtl
in
jmp
mov
mov
jo
pusha
dec
push
lret
filds
push
mov
fwait
insl
fadds
leave
in
test
sbbl
or
mov
pop
inc
in
mov
inc
aad
xchg
aad
hlt
je
fmul
xchg
xor
imul
ss
xchg
dec
orb
inc
mov
cmpsb
negl
mov
push
cmp
mov
rclb
sub
cmp
lret
dec
push
xchg
add
pop
xchg
inc
test
lock
push
jbe
in
pop
pop
pop
inc
pop
mov
jmp
aad
popa
jp
dec
in
int
les
in
cmpsb
push
andl
mov
xchg
and
mov
push
insb
xchg
or
shll
std
mov
test
jle
in
dec
fwait
sub
pop
mov
in
sub
mov
cwtl
sub
mov
or
dec
adc
sbb
xchg
insb
iret
or
push
sub
rolb
inc
in
popf
neg
mov
pop
adc
repz
rclb
ficompl
jecxz
arpl
lods
fists
push
ljmp
cmc
bound
xchg
jb
orl
cmp
aad
pushf
jne
push
mov
jmp
jp
pop
cmp
sub
xchg
cmp
lods
mov
xor
inc
pop
push
inc
jb
xor
cli
cmpsl
or
jecxz
sbb
inc
mov
lods
xchg
mov
jp
jmp
push
and
fsubr
cmpb
or
jl
aam
xchg
ss
mov
or
mov
push
mov
movb
leave
mov
scas
cs
inc
or
movsb
mov
pushf
mov
hlt
jp
lret
pop
mov
lcall
dec
stos
xchg
ret
dec
xor
xor
cmp
test
mov
pop
lods
xchg
outsb
jo
adc
dec
cs
xlat
xor
lret
mov
das
mov
sbb
mov
dec
inc
frstor
dec
mov
jmp
rcl
stos
push
adc
mov
mov
outsl
mov
and
imul
inc
push
push
or
mull
and
adc
jle
xor
mov
pop
jae
loopne
xor
sbb
faddl
test
pop
pop
and
movsb
xchg
mov
pop
mov
mov
xchg
dec
les
cmp
xor
outsl
xchg
sbb
imul
or
rorl
test
mov
jns
adc
cmpsb
arpl
or
lret
sti
mov
call
popf
les
mov
test
push
imul
ret
fsubrl
xor
icebp
mov
int3
dec
xchg
jl
xchg
int3
mov
push
jo
fistl
pop
loopne
sbb
add
cmp
into
add
pop
inc
cmp
inc
jle
cmc
bsf
mov
xor
sbb
jge
andb
inc
add
out
xchg
je
out
cwtl
dec
repnz
jne
out
dec
fdivl
push
pop
shll
xchg
add
jno
pop
jbe
dec
cmp
ljmp
ds
cltd
lods
imul
sbb
jl
xchg
mov
add
scas
jbe
push
pushf
mov
or
cltd
pop
mov
add
shlb
out
cmc
lret
or
in
shlb
xor
imul
jmp
sub
and
iret
pusha
out
and
cld
cltd
and
out
jns
pop
and
pop
ljmp
das
mov
fsubs
and
jg
mov
arpl
sbb
dec
mov
cmpsb
pop
int
mov
cmpsl
cli
dec
sub
stos
mov
cmp
or
jae
mov
pop
leave
je
pop
cmpsl
mov
testb
push
dec
out
push
bswap
shlb
dec
enter
or
lahf
test
repnz
pop
xlat
jo
fisttps
mov
mov
or
xorb
test
xchg
leave
test
mov
or
shll
adc
dec
testl
std
xchg
inc
cmpsb
insb
dec
jecxz
jbe
imul
inc
push
outsb
jle
movsb
adc
xor
xchg
add
addl
or
test
dec
fcomi
push
in
pop
ror
pop
cmp
sub
cld
dec
icebp
mov
shll
mov
js
jecxz
or
inc
mov
mov
adc
inc
out
ss
out
orl
cs
jg
adc
mov
popl
dec
cmp
dec
cwtl
pop
adc
sti
add
sub
sahf
jl
mov
mov
inc
xor
aad
movsl
add
mov
cs
xchg
mov
fsub
rclb
mov
mov
scas
fildll
scas
aas
popf
dec
mov
xchg
dec
popa
addr16
sub
and
je
aas
jge
jecxz
test
jp
loop
loopw
fcmovnbe
adc
mov
pop
sub
cltd
add
or
movsb
je
test
and
xor
cwtl
mov
add
mov
loopne
ds
push
add
or
lret
lods
lcall
jmp
pop
divl
and
pop
dec
adc
sbb
iret
or
xlat
insb
sub
lret
pop
pop
loope
adc
push
xor
or
cmp
dec
mov
cli
repz
jle
in
and
jg
cs
xchg
or
in
sbb
mov
sbb
pop
dec
sub
aaa
mov
mov
mov
andb
mov
mov
jae
in
test
mov
jo
sub
inc
ficoml
mov
cli
cltd
pop
mov
jno
pop
mov
or
mov
inc
dec
lea
dec
push
pop
xchg
cltd
push
cwtl
xor
adc
xor
mov
sub
testl
inc
out
adc
shlb
rorb
push
inc
add
xchg
xchg
scas
mov
hlt
mov
std
xchg
test
idiv
clc
iret
fimuls
sbb
ljmp
cli
gs
mov
iret
nop
xchg
or
jnp
sub
cltd
add
pop
imul
mov
sbb
mov
add
adc
sbb
out
clc
mov
sarl
add
sub
push
push
addr16
xor
dec
stos
decb
jmp
push
fcomps
mov
xchg
sub
inc
lods
in
jne
stos
bound
call
lods
push
inc
lods
movsb
aam
pop
cwtl
stos
sub
dec
inc
test
loope
sbb
scas
inc
push
fistpl
mov
mov
in
mov
mov
divl
sub
jl
popa
nop
and
in
mov
pop
lods
dec
sahf
cmc
inc
lcall
int3
push
shrl
push
sub
sbb
dec
sbb
pop
xchg
mov
xchg
mov
scas
lods
pop
xorl
insb
inc
sahf
pop
insb
sbb
jl
cmp
xchg
fldcw
dec
mov
int
arpl
inc
jg
add
add
cmp
cmp
movq
pop
insl
lods
outsb
cmc
xor
mov
lahf
cli
adcl
out
ret
and
das
inc
and
shll
insb
pop
ds
loope
jbe
pop
jno
inc
jno
add
inc
call
jl
jmp
jno
out
dec
sti
cmc
cmc
in
pusha
dec
pop
xor
insl
imul
push
dec
imul
insl
cmpsb
outsl
ss
fcmovnbe
das
leave
fcompl
jo
mov
sbb
xor
jmp
mov
push
sub
repnz
pushl
xorl
fcoml
xor
xor
shl
daa
ror
sub
inc
mov
int3
pop
stos
xor
xchg
rclb
ja
int
or
xor
test
out
fidivl
pop
and
stc
dec
cmp
adc
jmp
jnp
setbe
adc
comiss
fcoms
les
sub
dec
int3
lods
shll
ficomps
data16
aad
call
fstps
push
dec
test
call
lret
pop
push
jns
mov
sub
loopne
xor
mov
mov
adc
sbbb
out
inc
add
cmpsb
mov
ret
in
fs
ds
add
pop
test
add
int
adc
sbbb
rolb
push
mov
arpl
jne
mov
inc
test
dec
test
lock
pop
or
lret
aad
sti
mov
int
sti
mov
mov
not
js
jle
pop
out
test
outsl
mov
push
push
test
xchg
xor
sbb
mov
jno
mov
adc
sub
fnsetpm(287
aaa
push
and
push
out
push
mov
or
inc
cs
push
ss
sub
inc
push
decb
loop
pop
cmp
push
pop
mov
repz
nop
dec
dec
cli
scas
aad
sbb
jl
fbld
jnp
dec
in
icebp
push
mov
or
imull
and
mov
mov
sbb
sti
sub
les
in
jge
inc
or
jae
in
cltd
and
jp
adc
fdiv
mov
pushf
xlat
xchg
ret
mulb
xchg
movsl
roll
push
popf
addr16
push
popf
in
pop
ljmp
jg
jg
bound
jg
stos
adc
mov
movsb
add
push
test
ret
push
js
cmc
or
out
enter
lea
inc
and
add
lret
in
adc
or
pop
xchg
inc
insl
test
into
js
xlat
adc
fwait
das
mov
jo
popa
sarl
into
and
lods
dec
test
lock
dec
daa
add
inc
rcrl
lcall
in
jne
cmpsl
jle
xchg
fidivs
test
mov
imul
dec
push
sahf
lods
lea
cwtl
xchg
mov
call
mov
iret
aaa
push
lods
mov
pop
xrelease
pop
xchg
repnz
sbb
mov
add
int3
adc
jb
jl
ds
xorb
repnz
or
push
adc
sbb
dec
push
or
pop
mov
ret
push
mov
inc
loope
data16
out
adc
cmp
cmp
into
sti
dec
repz
xchg
dec
std
pop
sub
adc
xchg
inc
imul
and
jnp
sarb
inc
and
popf
push
lods
fbstp
add
inc
lods
jne
sub
movsb
xchg
mov
sub
cmp
or
dec
push
pop
fwait
sub
and
cmp
mov
xchg
jno
stos
popl
repnz
outsl
mov
lret
mov
int
loop
adc
lcall
dec
pop
sbb
jbe
das
jg
xchg
xchg
push
jno
loope
cmp
inc
pushf
das
in
cmc
idivl
in
fidivl
sub
popa
icebp
jle
jne
in
mov
outsl
scas
int
sar
jbe
push
cmp
xor
sbb
mov
test
adc
int
pop
repnz
out
dec
push
sub
sub
dec
mov
mov
aam
inc
in
or
loop
mov
xor
stos
pop
stos
gs
pop
pushf
mov
xor
push
mov
add
inc
aam
cmp
mov
push
lods
cwtl
insb
mulb
mov
sti
test
add
pop
push
push
pusha
push
cmp
adc
or
pop
inc
dec
push
xchg
jbe
mov
add
jmp
ja
les
add
aam
inc
loopne
adc
out
lcall
mov
adc
push
sti
jmp
pop
push
inc
push
stos
bound
inc
stc
pushw
push
sub
negl
ss
or
mov
divl
in
out
jg
xorb
test
pop
or
and
jge
ss
pop
out
dec
shrb
mov
inc
out
int
mov
sub
jno
pusha
push
push
std
loop
fsubl
cli
xchg
test
inc
xlat
lret
ret
testb
pop
popf
add
jle
push
mov
xchg
mov
dec
mov
xor
mov
mov
loopne
addl
xchg
mov
or
movl
add
imul
add
push
and
imul
xlat
out
fcomps
mov
inc
cmp
xchg
xor
ret
pop
xchg
lret
add
ds
mov
mov
ret
cli
lahf
gs
push
mov
mov
push
int
lea
mov
out
fwait
jne
add
popf
pop
lahf
mov
sub
or
cmp
js
push
xchg
xor
into
mov
push
inc
lcall
mov
xlat
fs
movsb
es
loope
dec
mov
lret
out
mov
fmull
dec
fcomi
sbb
mov
push
out
sub
mov
rcl
add
cmc
dec
daa
or
cli
aad
fmul
cmp
jge
sbb
xchg
imul
inc
pop
into
mov
xchg
int3
lret
cmp
stc
lods
mov
inc
adc
sub
iret
adc
in
mov
xchg
or
adc
sbb
jp
test
cmc
inc
sub
enter
mov
lahf
pop
jecxz
test
mov
ss
nop
ss
lret
loopne
cmpsl
in
lcall
jl
mov
inc
and
push
push
addr16
lret
popf
and
aam
fnsave
inc
dec
ds
fs
fs
or
fsubs
dec
inc
pop
fbld
in
and
and
mov
mov
lock
mov
and
lcall
pop
inc
iret
push
dec
pop
imul
lods
sub
jno
out
shlb
push
pop
cmp
pop
std
test
adc
in
push
lods
inc
or
bound
hlt
sub
pop
in
outsb
out
ficoms
sub
push
push
xchg
cmc
dec
inc
jbe
jo
or
fsubrs
sbb
and
push
out
mov
lret
mov
fcmovnbe
js
lods
xchg
cwtl
xor
fsubp
adc
fucomp
sbb
leave
or
or
jbe
lcall
mov
sbb
fwait
in
pop
pop
les
add
lea
cmp
bound
std
jge
sahf
push
movsb
fnsave
xchg
hlt
pop
rcrb
mov
pop
test
xor
cmp
mov
dec
int3
popa
clc
repnz
xor
jno
rcrb
xor
mov
sub
jae
int
lret
pop
mov
sbbl
pop
lahf
push
lea
sti
shrl
popf
inc
movsl
mov
ret
sub
cmp
mov
idiv
hlt
jmp
test
lret
inc
push
repz
mov
repnz
roll
mov
jl
repz
xchg
push
or
mov
cmp
or
cmp
outsl
inc
sub
dec
in
and
inc
mov
stos
daa
jge
cld
xchg
push
mov
add
inc
jle
jb
jl
mov
flds
pop
xor
icebp
iret
test
jmp
stos
movsl
sbb
pop
and
inc
dec
sub
popa
fstps
jecxz
push
ret
mov
jb
adc
jg
leave
bound
fimull
in
xchg
or
lods
hlt
mov
mov
push
ffree
dec
mov
sub
mov
and
filds
aaa
ljmp
imul
add
mov
sti
aas
or
clc
xlat
sti
pop
bnd
scas
lds
xor
or
loopne
stc
xor
je
ss
and
leave
push
shll
jne
lods
cld
lds
cmpsl
pushl
fxch
outsl
aas
call
pop
std
popf
insl
lret
push
jb
xchg
dec
inc
addr16
push
cld
push
fimull
movsl
incb
in
mov
mov
ror
loope
mov
fimuls
stc
push
testb
xlat
cli
ss
es
imul
and
mov
arpl
push
ja
inc
ret
or
psubq
mov
arpl
inc
add
jp
mov
add
imul
xor
movsl
mov
sub
in
mov
fcomp
push
out
and
movl
mov
out
lret
push
sbb
xchg
and
clc
push
mov
xor
flds
xor
bound
lahf
inc
push
push
jae
sub
or
in
jl
outsl
ret
and
stos
pop
push
mov
scas
xor
dec
loope
push
and
sbb
jge
fwait
pop
inc
and
test
adc
xchg
add
fistl
add
mov
jle
mov
adc
cmpsl
in
test
or
inc
cmp
mov
das
arpl
imul
xor
pop
pop
imul
pop
lret
cltd
mov
or
repnz
or
movsl
push
testb
popf
sub
xlat
sub
mov
insb
out
push
das
lcall
repz
lret
jnp
mov
xor
ror
and
inc
sbb
sbb
nop
sbb
repz
pop
jecxz
cmp
imulb
dec
in
jle
insl
and
ss
aas
pusha
sti
in
cmp
xlat
jae
test
loope
mov
lret
sbb
in
xchg
jnp
mov
jo
fstpl
movsb
insb
dec
inc
or
jbe
fldenv
xchg
xchg
enter
cmpsl
stc
mov
pop
stos
test
ret
out
loopne
aas
fstpl
jmp
js
and
add
sub
dec
jle
mov
and
loop
js
fistl
push
loope
and
loope
insb
push
arpl
pop
mov
sbbl
jg
lds
clc
lcall
in
xchg
push
sbb
out
dec
add
fwait
mov
jle
fistps
les
es
cli
and
cmc
out
dec
cld
lahf
push
jecxz
sub
push
ds
push
xchg
repz
add
adc
mov
xchg
push
xor
adc
jno
movsl
insl
add
enter
aas
movl
xor
bound
and
ljmp
push
mov
iret
pushf
dec
imul
jbe
arpl
xchg
int3
jle
cmc
xor
repnz
push
aaa
loope
xchg
cmp
shl
mov
cmp
lret
stos
mov
pop
push
cs
mov
enter
das
push
cmpb
jmp
sbb
loopne
mov
pop
xor
cmpsb
movsb
shll
or
sub
pop
pop
es
push
pop
mov
cmp
cltd
cmpsb
mov
inc
cmp
mov
addr16
outsb
cmp
test
and
sti
sarb
xlat
mov
cld
mov
mov
cmp
xor
fs
jb
shrl
ds
dec
sahf
dec
jns
test
scas
mov
mov
add
jns
mov
cmpb
popa
sbb
xchg
mov
shrb
popf
xchg
hlt
out
das
push
and
dec
arpl
pop
fwait
fnstenv
or
adc
pop
inc
jnp
in
sub
jnp
xor
mov
cmpsb
shll
jno
jle
fstp
aad
push
sbb
push
jmp
ljmp
jmp
sbb
sub
sti
push
nop
pop
adc
pop
insl
pavgw
je
ljmp
shll
xchg
dec
jbe
cmp
outsl
fldlg2
xchg
adc
dec
and
jmp
aas
pmaxsw
decl
cmp
sbbl
jl
leave
outsl
mov
dec
push
dec
fiadds
cmp
int3
movsl
fs
jle
ret
xor
dec
sbb
popf
das
push
imul
out
loop
dec
mov
mov
mov
test
pop
and
mov
push
cmpsb
frstor
aad
xor
xchg
dec
movsb
sbb
outsb
or
test
daa
pop
cmp
in
or
pop
mov
jne
push
cmpsb
mov
mov
xchg
test
push
cmp
xchg
push
movsb
xchg
push
and
mov
jno
icebp
cli
sub
stos
or
cmpsl
mov
call
arpl
jl
pop
hlt
lock
or
sbbb
add
push
mov
lcall
pop
mov
xchg
mov
lods
cmp
andl
insb
jecxz
pop
pop
mov
add
call
push
add
mov
push
adc
add
xlat
fdivl
mov
aad
les
int
inc
arpl
mov
pop
out
int3
sbb
mov
or
push
int
dec
shl
sub
in
sub
mov
lahf
shlb
sub
rcrb
mov
jmp
sub
scas
push
pop
stos
movb
bnd
push
or
scas
mov
loope
sub
adc
jg
push
sub
lea
pop
scas
out
xchg
sti
inc
cld
mov
cli
in
jmp
mov
push
daa
adc
mov
fsts
clc
cli
sub
sbb
pop
mov
sbb
pop
std
pusha
cmp
cmp
pop
jg
scas
dec
jnp
xchg
push
sub
test
in
push
add
add
adc
in
push
stos
out
dec
scas
into
outsl
int
mov
addb
lahf
movsb
xchg
inc
imul
repz
enter
enter
insl
orb
jecxz
outsl
mov
test
inc
leave
jge
adc
les
cli
aad
lock
cmpsb
mov
mov
mov
sti
adc
shrl
and
outsb
les
fcmovb
test
sub
mov
out
jecxz
lds
mov
jecxz
outsl
mov
outsl
dec
ds
insl
cmpsl
push
xchg
loop
and
dec
ljmp
inc
sarl
movsl
or
fcomp
in
lret
fildl
jmp
call
call
cmp
cmp
sbb
xchg
je
stc
insb
inc
mov
inc
inc
rcrb
xchg
pop
std
ljmp
mov
mov
inc
and
jno
cmp
cmp
ret
orl
push
sub
dec
enter
arpl
push
xchg
pop
scas
cmp
push
pop
xorb
fs
cmc
xchg
scas
das
pop
xchg
in
fsubl
sbbl
push
movsb
mov
sahf
cmpsl
repz
pop
add
cld
mov
sbb
in
lcall
or
pop
and
mov
imul
fistps
out
lds
cmpsl
push
mov
mov
int3
addr16
mov
xlat
cmpsl
testl
rcl
mov
out
int
data16
out
sub
xchg
arpl
test
outsl
push
xchg
addl
mov
mov
sbb
jmp
mov
stos
and
push
test
call
inc
loopne
dec
int
out
scas
int
mov
mov
fs
push
dec
cld
in
outsl
loope
ja
int3
shrb
dec
add
cli
xchg
adc
jnp
in
addb
imul
fsubs
jecxz
cmp
incl
stc
rorb
inc
fisubl
lds
push
lea
lock
mov
dec
adc
stos
inc
pop
sub
push
outsl
xor
fisttps
inc
inc
insl
std
push
fiaddl
xchg
xchg
scas
out
stos
cs
repz
cmp
pop
loope
je
sahf
mov
xchg
out
push
mov
cld
mov
int
inc
rcrb
js
ret
outsl
bound
push
add
lds
cmp
pop
fs
or
jmp
or
addr16
xchg
fildll
sub
hlt
jbe
sub
sahf
mov
fadds
inc
ja
jno
iret
pop
inc
jae
ror
popf
or
push
mov
ja
scas
scas
cs
dec
push
aad
sub
lret
std
out
push
push
dec
add
push
push
and
xchg
adcb
mov
pop
int3
push
mov
jecxz
inc
stos
ljmp
popa
mov
and
orl
ret
out
cmp
mov
rol
ret
push
push
mov
outsb
or
outsb
dec
jnp
in
dec
clc
addr16
outsw
adc
lcall
pop
loope
mov
fimull
sub
push
movsl
lock
cwtl
xor
inc
int
cmp
push
cmp
sub
sbb
push
stos
test
scas
adc
sbb
shll
xchg
adc
mov
sbb
add
lret
outsl
jb
pop
lock
aaa
ret
jg
bnd
test
and
sbb
xor
dec
mov
test
ret
jp
push
insl
dec
or
inc
lods
sti
frstor
mov
xchg
jmp
and
lcall
push
jnp
stos
out
cmp
mov
and
jno
aam
or
cmp
not
ret
insb
adc
add
in
int
ds
in
fwait
repz
push
leave
add
out
jae
jae
fstpt
mov
inc
movsb
les
call
aas
pop
outsl
enter
sbb
rcll
scas
ficompl
dec
and
mov
push
add
add
sbb
out
movsl
jge
ds
cmp
dec
repnz
fdivrs
pop
push
dec
pushf
adc
jmp
jge
cmc
je
in
enter
cmpsl
and
outsb
mov
loope
stos
lds
imul
mov
push
pop
imul
push
icebp
les
out
scas
xor
out
mov
dec
nop
and
or
es
iret
cmc
mov
in
mov
loop
shlb
cmpl
aaa
mov
cs
mov
add
mov
clc
xchg
pop
sar
mov
pop
out
test
push
xchg
dec
and
inc
inc
es
and
mov
add
cmpsb
popa
sbb
loop
pop
fistpll
into
lock
xchg
sarl
sbb
cmp
mov
pop
push
xor
fwait
pop
sub
mov
and
sub
cltd
lock
in
fcoml
cwtl
jg
addr16
mov
leave
inc
mov
ret
sub
sarl
cwtl
in
sub
lcall
clc
push
jp
div
pop
and
cmp
mov
jo
int
dec
ja
and
lahf
mov
mov
mov
mov
push
scas
dec
mov
dec
mov
cs
inc
scas
fisubl
inc
movsb
jecxz
sbb
lret
test
add
mov
adc
dec
lods
jae
imul
ret
testl
sbb
inc
cmp
cmpsb
and
rcrb
loop
mov
lret
ljmp
xchg
jno
or
ljmp
or
out
movsb
lock
dec
push
int3
sbb
stc
and
stos
test
scas
shlb
das
rolb
pop
and
pop
adc
xchg
xor
mov
adc
push
adc
or
inc
sbb
mov
lods
push
lods
sbb
gs
xchg
lods
stos
rclb
dec
dec
int3
mov
fidivl
sub
sub
inc
sub
test
loopne
cmp
jl
jo
test
daa
ljmp
or
mov
cmp
shrb
jnp
data16
fwait
mov
jb
add
inc
test
fistpll
imul
scas
pop
insl
mov
add
inc
inc
adc
repz
push
inc
pop
add
std
inc
leave
out
dec
scas
or
jl
out
inc
mov
je
into
leave
xchg
mov
and
bound
xor
push
push
pushf
jbe
add
mov
daa
hlt
mov
xchg
mov
and
add
xchg
add
sbb
push
nop
iret
cmc
mov
lds
cmp
push
pop
dec
pop
xchg
fdivrp
out
daa
pop
movsl
rorl
cwtl
xor
xchg
adc
stc
cmp
pop
mov
inc
out
stos
push
jo
in
ret
in
insb
mov
pop
cmp
imulb
fsts
fwait
pop
xor
and
in
cmpl
mov
mov
call
sbb
roll
inc
loopne
jp
sub
mov
jo
xchg
pop
xchg
pop
mov
xorl
lcall
jge
scas
ret
call
movl
call
ja
push
adc
adc
mov
sub
inc
mov
fisubs
add
mov
jg
stc
sbb
pop
bound
ds
movsb
add
mov
icebp
fdivl
sahf
scas
sbb
jg
mov
inc
lret
and
pushf
outsl
cmp
push
out
repz
or
testb
sbb
sarl
cmp
cmc
fldenv
cwtl
mov
pop
push
mov
jl
adc
sub
jns
iret
inc
fistps
inc
sbb
into
adc
push
inc
adc
sbb
arpl
loop
ret
lods
adc
test
cmp
dec
pop
loope
mov
iret
cmp
jns
add
popf
mov
push
fstps
mov
or
stos
xor
aaa
jb
ds
frstor
xor
add
shl
mov
aas
mov
sbb
pop
les
enter
lods
add
ret
adc
dec
fldenv
and
test
jbe
adc
pop
push
fsts
pop
andl
movsl
xchg
fcmovne
jge
ds
and
push
stos
insb
mov
inc
dec
lods
outsl
xor
in
mov
jp
or
jbe
mov
mov
test
outsb
dec
jp
ret
jmp
cmp
rorb
daa
rcrb
lcall
js
xor
in
jne
popf
ljmp
ja
addr16
arpl
sub
leave
lock
mov
dec
inc
mov
arpl
roll
adc
mov
into
aaa
notl
popf
ficomps
mov
dec
cmp
add
push
adc
cmpsl
adc
outsb
aas
jp
lods
enter
xor
push
adc
mov
jb
push
xchg
push
xlat
mov
or
out
mov
loopne
stos
repz
fwait
fs
push
divb
push
cltd
and
lea
test
push
lods
aaa
dec
fistpl
call
push
into
cmp
sahf
flds
jns
or
cmp
xlat
int3
hlt
leave
fiaddl
or
jl
inc
mov
mov
in
insb
rcrl
lock
xor
je
inc
mov
aam
mov
sbb
lret
dec
in
fldenv
cmpsl
repnz
test
int
add
mov
icebp
dec
and
insl
sbb
xor
pop
xchg
in
repz
inc
cmp
jnp
cmpsl
ss
lea
test
pop
aad
dec
cmp
dec
sub
fdivl
test
out
inc
push
jecxz
sbb
cs
mov
pusha
add
dec
sahf
add
stc
dec
cmp
add
push
sbb
jae
and
add
mov
jl
adc
xchg
sbb
xlat
pushf
sub
leave
mov
movsb
mov
pop
lahf
mov
in
scas
popa
sti
mov
mov
iret
cld
xor
jb
mov
in
mov
mull
pop
decb
mov
imul
add
xchg
fsubl
cmp
outsb
sbb
call
pop
fs
cwtl
data16
push
mov
pop
adc
in
mov
mov
mov
cli
outsl
cltd
sub
pop
repz
lds
aaa
shrb
adc
insb
pop
inc
xor
mov
dec
fldenv
push
xor
adc
xchg
jmp
and
testl
fsubrs
dec
int
stc
fbstp
testl
fnsave
movsb
ljmp
inc
dec
push
mov
cmp
outsb
add
fiadds
mov
sbb
adc
adc
out
xchg
and
popa
pop
pop
mov
decb
scas
neg
xchg
jg,pn
mov
int3
adc
jge
mov
daa
push
push
fidivl
pop
inc
cs
add
roll
lret
xchg
push
jns
inc
push
sbb
xchg
testl
lods
fiaddl
in
clc
imul
out
jo
sti
ds
jecxz
popf
add
adc
scas
fidivs
mov
mov
mov
movsb
out
sbb
std
sar
lds
jecxz
inc
fsts
xchg
inc
push
adcb
pop
pop
or
xor
sub
movsl
sub
xchg
mov
test
pop
xchg
cld
xor
jmp
insb
test
shrl
cmp
push
dec
xchg
or
push
dec
mov
dec
mov
popf
lods
xor
cmp
in
gs
andl
out
xchg
jle
pop
or
cmp
popl
or
adcl
dec
jb
aam
adc
push
in
in
xor
mov
and
fimuls
int3
pop
push
loope
fstl
sti
cmp
std
mov
scas
xchg
jp
push
jae
rcrl
add
cwtl
inc
mov
lock
mov
add
out
adc
cmpsl
mov
stc
inc
imul
or
int3
mov
cwtl
dec
jns
stc
mov
jnp
sub
xor
mull
push
call
xchg
cld
incl
sub
push
or
xor
add
sti
sub
cwtl
rcl
scas
test
sarb
xchg
stos
push
sub
and
and
into
pop
or
adc
lods
adc
and
pop
scas
ja
or
sarl
mov
pop
sbb
call
aad
jecxz
pop
pushf
lods
pop
xchg
or
insl
dec
push
pop
int3
shrb
call
fnsave
pushf
pop
jne
lret
pop
xchg
dec
sub
or
filds
xor
nop
pop
out
fnstsw
imul
mov
lods
out
sbb
je
pop
leave
xchg
sub
inc
insl
adc
xchg
cmpsb
jno
xchg
or
rcll
scas
fdivl
inc
mov
mov
lods
and
outsl
cli
pop
mov
aas
push
sbb
mov
mov
call
mov
inc
push
mov
xor
xor
ja
mov
hlt
adcb
sbb
inc
sub
adc
in
pusha
xchg
loope
jl
mov
ret
adc
inc
mov
xor
lods
fisttpll
scas
mov
test
loopne
sbb
pop
mov
mov
mov
addr16
mov
adc
test
jne
cmp
mov
iret
scas
pop
fcmove
xchg
movsb
add
icebp
xchg
xchg
xchg
insl
cmpsl
dec
push
imul
or
dec
lods
int
cmp
sub
xor
lds
or
repnz
pop
aad
jo
mov
lahf
mov
mov
fdiv
sbb
xchg
clc
lahf
popa
mov
push
dec
sbb
push
jae
and
pop
adc
cs
out
and
mov
xchg
lds
jmp
je
lea
jp
adc
xchg
xchg
mov
stos
scas
or
jae
xchg
fcmovnb
add
lods
push
or
jmp
jbe
aad
aaa
pop
push
inc
mov
jmp
call
hlt
pop
shl
dec
cmc
dec
xchg
scas
repnz
sti
push
and
mov
jmp
lmsw
push
cmp
sbb
sbb
and
roll
xor
push
mov
mov
xchg
xchg
dec
xchg
insl
incb
cwtl
rorb
mov
mov
or
pop
cmc
add
out
lret
mov
and
xor
in
adc
addr16
aas
pop
xlat
push
out
and
and
push
outsl
add
mov
hlt
cwtl
ss
pop
sub
test
jecxz
xlat
xchg
mov
pop
das
pop
xchg
js
xchg
sub
and
aam
dec
in
test
mov
add
sbb
xchg
push
iret
sub
daa
lahf
push
inc
xchg
and
in
dec
call
adc
push
push
sbb
lret
inc
mov
int
xchg
pusha
lods
int
dec
mov
inc
loop
mov
fs
repnz
shll
rcr
pop
inc
pop
push
add
mov
xlat
pop
cli
sub
lea
xor
adc
xchg
cmp
aam
fsubs
dec
inc
ja
sbb
ss
fcoml
mov
sub
int3
ds
cmp
xchg
mov
popf
mov
xchg
in
lahf
add
add
in
cwtl
mov
jl
jns
pop
fsts
or
jl
push
test
rcrb
pop
or
addb
movsb
add
inc
push
dec
mov
out
imul
jno,pn
cltd
jo
into
add
and
push
pop
shrb
xor
dec
mov
inc
iret
negb
add
jns
cmp
mov
or
xchg
mov
fnstcw
daa
das
adc
movsb
insl
lods
pop
popa
shr
loope
jmp
addl
test
mov
mov
out
bound
mov
pop
xor
adc
rorl
ds
or
push
stos
pop
shrl
mov
lahf
jecxz
aaa
push
inc
lods
push
rclb
scas
test
xchg
mov
inc
dec
push
sbbb
flds
jg
dec
mov
mov
xchg
sarl
ret
cli
out
test
aas
mov
dec
xchg
mov
fptan
je
sbbb
mov
jnp
sub
mov
sub
xchg
fcoms
xchg
out
std
dec
xchg
mov
leave
dec
ficompl
and
sub
dec
mov
and
ds
lods
shr
mov
loop
and
dec
cmpsl
mov
cmp
roll
and
dec
sub
dec
dec
fisttpl
enter
xchg
mov
sub
movl
test
orl
imul
out
xchg
add
push
mov
add
pop
adc
and
lods
push
arpl
dec
mov
ffree
fistl
push
dec
movsl
lods
dec
fsts
jp
fsubrp
daa
mov
and
pop
cmpsl
jl
cs
gs
sti
xchg
insb
lret
cmp
jo
nop
fimuls
cltd
sub
lcall
divb
mov
sub
aaa
in
jns
lds
xchg
arpl
dec
and
adc
inc
and
cs
push
incb
incl
sub
xchg
add
or
xchg
mov
cwtl
lcall
jnp
mov
call
mov
mov
sbb
hlt
cli
xchg
lret
nop
xor
sbb
shlb
lock
in
lock
pop
xchg
push
pop
push
addl
add
jmp
les
mov
fistl
xchg
arpl
cmp
out
lods
add
xchg
stc
out
mov
mov
push
test
out
repnz
out
inc
aaa
jp
imull
add
shll
lret
xchg
dec
dec
mov
test
jno
pop
fstps
lahf
imul
in
sbb
imul
jg
jnp
out
cmpsl
lods
push
dec
std
sti
mov
xchg
shlb
inc
mov
sbb
loop
xor
cmp
std
movsl
fwait
fs
rorl
pop
daa
hlt
xlat
mov
or
mov
inc
addl
ljmp
and
xlat
icebp
xlat
test
stos
pop
lods
test
add
int
imul
inc
sbb
xchg
sub
cmp
mov
pushf
dec
loop
popf
mov
push
xchg
imul
cmc
push
push
roll
jl
cltd
mov
mov
out
jl
mov
dec
or
pop
mov
adc
cld
repz
adc
dec
pop
popa
scas
fucom
pop
mov
scas
xor
xor
mov
inc
push
cmpsl
test
enter
xchg
insl
ds
and
cmc
fwait
or
movsl
cmp
push
mov
inc
cltd
and
and
xchg
data16
xchg
stc
mov
mov
lret
fiadds
lock
aaa
das
push
inc
sub
bound
pusha
dec
xchg
cs
testl
dec
add
xlat
pop
sub
stos
adc
pushf
repz
insl
push
hlt
sub
sbb
mov
pop
sahf
jp
lcall
out
and
fs
mov
jp
lahf
mov
sub
testl
int3
dec
push
ljmp
xor
cld
rcll
cmp
outsl
stos
jns
pusha
aaa
pop
add
add
lods
sub
xchg
lods
aam
adcl
divps
mov
inc
ds
int3
in
inc
out
jns
lods
lcall
mov
jl
test
cli
rcrl
fsubrs
inc
dec
flds
sub
pop
std
and
addr16
cmp
mov
mov
lret
jge
ret
or
psubusb
mov
mov
mov
stc
sub
push
sbb
sub
sbb
addr16
mov
leave
mov
es
js
in
dec
imul
mov
pop
sbb
std
scas
mov
fiadds
xor
adc
add
lret
inc
rcrb
incl
dec
fadd
mov
mov
int
ja,pn
push
inc
dec
into
xchg
and
adc
jae
lcall
clc
xlat
mov
cmp
mov
jle
and
jmp
out
das
addr16
lret
dec
cmp
adc
push
test
sub
sbb
pop
adc
and
mov
inc
sbb
outsl
pop
mov
push
xchg
aaa
mov
jae
mov
pop
mov
inc
xchg
gs
sub
stos
cs
xor
add
jo
push
mov
lock
imul
lcall
and
add
dec
jo
or
push
lods
xor
fs
data16
dec
mov
test
push
xor
test
in
xchg
testb
loop
popf
push
cmpsb
or
jo
add
xchg
xchg
cmp
add
mov
ret
icebp
cltd
aad
jns
dec
sbb
xor
mov
push
cmp
and
sub
mov
std
out
ss
push
lds
shll
adc
and
adc
and
push
dec
push
fcoms
dec
mov
push
jne
scas
add
stos
mov
xchg
mov
jmp
lahf
std
popa
mov
push
mov
xor
push
dec
push
jge
or
mov
add
dec
iret
dec
push
inc
cmpl
outsl
add
sub
into
adc
adc
xchg
fimull
mov
insl
loop
mov
inc
popl
jle
out
mov
repnz
out
jns
arpl
pushf
add
mov
and
popa
pop
or
imul
mov
testl
sub
sahf
push
or
clc
cld
out
loop
xor
test
lods
testb
ficomps
inc
mov
xchg
fimuls
inc
jo
stos
ret
pop
pop
adc
pop
addl
mov
sub
inc
push
inc
pop
dec
pslld
lahf
sahf
mov
push
fcoms
hlt
jno
lahf
insl
aad
add
cli
cli
hlt
mov
not
es
insl
push
mov
xchg
rcrb
in
add
shlb
rol
pop
inc
pop
sub
shlb
xchg
dec
xor
xor
sbb
cmpsl
mov
mov
nop
push
jbe
add
pop
cli
or
fcmovnu
aaa
and
jle
add
sub
out
mov
inc
mov
aaa
inc
sbb
out
jbe
or
dec
inc
cs
fdivrl
insl
pop
movsb
hlt
fdivrs
outsl
lcall
adc
pop
sbb
sbb
dec
mov
sub
xchg
dec
mov
gs
push
cwtl
jb
pop
push
dec
xchg
data16
pop
push
aam
mov
adc
mov
or
inc
lret
lret
jns
mov
inc
mov
jle
xor
movsl
jae
cli
jno
mov
mov
inc
add
push
les
adc
push
xchg
jae
mov
xor
xor
inc
pop
aam
mov
pop
adc
push
lahf
mov
xchg
std
jae
out
sbb
ss
cmp
cmp
dec
movsl
xchg
mov
cmp
xor
mov
and
mov
sub
outsl
mov
inc
xlat
jae
hlt
rcll
pop
stc
mov
cltd
pop
jne
and
push
nop
xchg
push
sub
aaa
xchg
sarl
dec
mov
cmc
adc
sti
jnp
adc
lcall
out
inc
xchg
cmp
mov
jmp
xor
cmp
loopne
sub
mov
addr16
dec
test
xchg
imul
xchg
aaa
lock
sub
iret
jecxz
mov
cmp
dec
jb
mov
xor
icebp
push
std
mov
loope
pop
push
in
cmp
loopne
je
test
mov
cld
adc
jne
mov
pop
lcall
push
mov
mov
mov
orl
in
push
mov
loop
pop
sahf
shl
xor
data16
jmp
xchg
jae
sbb
ss
out
and
xchg
aaa
pop
arpl
mov
sti
cmp
iret
and
mov
shlb
mov
pop
mov
cmpsl
fcmovne
mov
adc
mov
or
lea
cli
popf
inc
std
ljmp
insb
push
mov
xchg
les
daa
cltd
pusha
faddl
test
imul
pop
xorb
mov
clc
roll
and
call
push
aas
cmpsl
out
scas
mov
shrl
div
mov
pop
push
push
add
jecxz
jno
dec
dec
add
ficoms
mov
test
pop
shl
cwtl
es
or
cmpsb
inc
mov
push
fistl
aad
sbb
roll
push
clc
outsb
or
arpl
pushl
sbb
jmp
and
jg
fstpt
mov
es
loopne
add
xlat
pop
push
sub
sbb
clc
iret
in
xor
dec
jns
insb
flds
mov
jbe
test
push
shll
clc
test
push
and
jne
or
out
mov
mov
cmp
cmp
adc
stc
xor
scas
jg
xchg
cmc
nop
mov
inc
bound
adc
scas
push
dec
sbb
mov
test
movsl
pop
mov
fs
adc
repz
sbb
jp
ds
jg
js
jns
hlt
pop
lods
push
push
push
mov
and
lock
xor
mov
xor
jbe
xchg
push
push
nop
in
jmp
decl
jnp
jne
sbb
jae
cmpsb
pushf
mov
jbe
addr16
sbb
jp
ds
sub
in
arpl
xor
add
data16
call
push
pop
leave
cltd
imul
push
cwtl
loopne
js
cltd
adc
jp
xor
subb
mov
add
jno
sti
mov
mov
or
dec
mov
in
jecxz
out
sub
xorl
and
test
jp
addr16
dec
std
fmull
and
xchg
adc
repz
sahf
loope
fldcw
and
test
add
xchg
adc
testb
sbb
xchg
test
jno
sub
jne
mov
pop
cmpsb
fmuls
cld
test
sbb
xor
jnp
cmp
jg
pop
imulb
stos
add
outsb
loopne
pop
xchg
cld
fdivr
mov
cwtl
rorb
lods
inc
test
pop
shrl
cmp
mov
mov
or
cmp
xor
mov
mov
scas
or
nop
sub
sbb
cmpsb
test
fs
addr16
jae
or
fstps
mov
push
and
test
lahf
sbb
into
cmp
loop
jae
out
dec
jb
aam
xlat
in
xchg
mov
pop
mov
sbb
rorl
dec
jbe
test
push
popa
inc
sub
out
clc
push
scas
cmc
adc
inc
xchg
nop
adc
push
mov
jo
push
adc
mov
push
inc
dec
fcmove
repz
xchg
shrb
cmpsl
jg
insl
and
inc
xor
jmp
jmp
ss
xorb
fadd
repz
cli
loope
repnz
adc
fldenv
xor
mov
test
xchg
dec
roll
cmpsb
dec
mov
loop
mov
fcomip
add
lods
xor
sbb
lcall
ds
or
sbb
mov
cmp
fstps
int3
or
out
ret
aam
add
hlt
and
push
or
aad
and
adc
fdivrl
or
xchg
inc
stos
mov
xchg
pushf
lods
xlat
popa
xor
fucomi
mov
out
pop
add
mov
inc
xlat
ljmp
rol
cwtl
ret
mov
fisttpl
test
dec
pop
das
stos
push
mov
dec
cli
lret
cltd
add
mov
and
sbb
lock
inc
xor
shlb
cmp
mov
aam
lret
xlat
std
iret
das
bound
adc
jecxz
sbb
mov
stos
or
inc
inc
push
cltd
xor
xchg
gs
int
bound
jmp
test
ds
mov
out
scas
mov
add
jp
pop
mov
add
jbe
lahf
es
aaa
fbld
xor
inc
popa
inc
push
add
sbb
adc
insl
cmp
ds
sbb
sbb
pop
xchg
adc
jnp
dec
xchg
divb
imul
xchg
mov
jns
insb
movsl
mov
push
ret
loop
dec
mov
inc
cltd
insl
sarl
mov
ffreep
adc
scas
pop
popf
pop
cwtl
mov
xchg
ds
dec
lods
inc
leave
ss
fstpl
aam
pushf
jae
aas
adcl
insl
mov
adc
pushf
jns
pop
pop
mov
push
jmp
mov
pop
cmpsl
stos
repnz
or
icebp
mov
in
lods
lds
in
push
adc
sbb
dec
or
push
shl
mov
cmp
adc
into
push
imulb
and
scas
mov
cmp
aam
push
stos
mov
shlb
jb
ret
mov
cmp
push
and
mov
xor
ja
lret
jb
xchg
mov
test
aam
adc
sbb
imul
lret
shll
and
sbb
je
jb
scas
jno
out
popf
adcl
adc
in
mov
and
mov
mov
xchg
adc
cmc
or
pop
pushf
inc
push
imul
sbb
cltd
xor
loopne
or
xor
repnz
insb
orl
and
aad
arpl
jo
subl
mov
mov
cmp
add
shl
or
loop
adc
loopne
jnp
shlb
dec
insl
cs
adc
sub
mov
mov
sub
jae
fnstenv
mov
mov
xor
je
and
or
add
mov
mov
inc
jne
sub
push
xchg
arpl
cld
fdivrl
cmp
pop
xor
jo
lock
repnz
dec
push
ss
or
in
mov
dec
hlt
push
ret
jo
dec
xor
xlat
sub
ss
test
add
inc
push
fs
inc
jo
outsl
fadd
bnd
sti
fs
rcrl
arpl
enter
mov
jmp
jnp
lock
data16
push
jecxz
mov
icebp
in
notl
lret
out
sub
add
mov
sbb
push
pusha
add
dec
test
ljmp
or
lahf
mov
sbb
jne
mov
add
push
clc
xchg
add
notl
aam
loop
lods
mov
adc
cmp
idivb
or
imul
xor
testb
dec
mov
xchg
sub
out
mov
cld
sti
insb
mov
das
clc
dec
push
cld
inc
jp
pop
push
sbbl
mov
dec
sub
cmp
subl
and
gs
xchg
lods
ss
add
mov
dec
jnp
imull
jle
cmp
xchg
scas
es
cmp
js
fwait
repnz
bound
cmp
sub
out
jle
push
dec
ljmp
shr
push
xchg
adc
push
cmc
mov
jg
add
lahf
fcompl
shrb
out
scas
xchg
xchg
cld
mov
mov
test
lods
fwait
xchg
push
push
outsl
rol
or
sahf
cmp
inc
fiadds
mov
xchg
jmp
xchg
or
scas
hlt
push
inc
mov
sub
out
cmp
jbe
into
iret
loopne
sub
sbb
lcall
push
mov
mov
push
clc
adc
dec
cmp
ss
pop
fsubr
rol
adc
popf
fs
cwtl
sub
mov
leave
jl
hlt
jbe
je
push
or
nop
lock
push
loopne
jp
repz
mov
cmp
repz
aad
pop
and
sbb
std
loop
pop
push
sub
repnz
test
bound
and
ss
les
ljmp
repz
in
push
mov
pop
push
ffreep
inc
jns
pusha
adc
sbb
testl
jl
ficoml
and
cwtl
das
adc
adc
xor
ret
mov
push
mov
pop
mov
mov
mov
add
xchg
inc
cmp
xacquire
mov
data16
test
mov
scas
cmpb
call
pop
or
clc
jno
jg
cs
xor
push
fistpl
or
test
xor
cli
stos
mov
dec
mov
in
xor
inc
mov
cmp
pop
andl
pop
sub
push
inc
fdivrl
into
shll
cmp
cmp
dec
repnz
lds
mov
xchg
in
sbb
xlat
and
rcrl
adc
and
cmp
jg
int
or
into
fcoml
xchg
insb
mov
cli
inc
mov
gs
ficompl
pop
xor
repnz
in
and
pop
imul
mov
inc
aad
jae
inc
adc
loopne
mov
aad
sbb
lret
xlat
and
out
outsl
adc
push
in
cltd
movsl
clc
jg
inc
xlat
sub
addr16
mov
mov
test
xor
loope
xlat
lret
popf
insb
pusha
add
es
mov
push
sbb
xchg
pop
add
or
nop
fidivs
sbb
push
ds
xchg
and
call
ret
jb
inc
jno
call
jle
cwtl
lret
loope
ljmp
sub
call
jns
jle
cmp
or
inc
jmp
pop
cmp
pop
sbb
inc
ja
xchg
xchg
mov
aas
sub
jae
aas
rol
cmpsl
inc
daa
jecxz
jb
roll
in
mov
xor
ret
xor
movsb
mov
outsb
mov
and
jbe
scas
add
mov
push
mov
sbb
test
negl
cwtl
jo
add
xchg
cmp
sar
cld
imul
mov
lock
sub
push
xchg
into
fstps
insl
sbb
popa
xor
sbb
icebp
adc
lea
and
push
add
pusha
sbb
sahf
xchg
sbb
rclb
push
cwtl
shlb
xor
and
xchg
fwait
cltd
xchg
fwait
jp
fwait
pop
aas
cwtl
hlt
or
sbb
mov
and
fldl
imul
cmp
dec
fbld
je
repnz
xchg
int3
xor
mull
orl
xlat
aaa
cmpsl
dec
mov
cmp
cmp
mov
inc
jno
mov
push
jge
sub
pusha
ret
enter
lods
dec
add
dec
or
cmp
push
movsb
adc
mov
mov
xor
or
xorb
pop
int3
rolb
mov
cld
in
cld
jg
jae
fidivrl
daa
xor
clc
mov
pop
les
add
mov
stc
loop
jno
pop
mov
xor
jecxz
fildll
loopne
pushl
rorl
jecxz
adc
dec
fyl2x
and
push
mov
cmp
mov
dec
cmp
andb
mov
insl
ret
push
fidivrs
pop
sub
lret
fs
lods
pop
cs
imul
adc
sbb
rcrb
fwait
nop
stos
sub
shll
xor
incb
mov
add
jb
jmp
jne
fistpl
arpl
push
push
sahf
outsl
fwait
rorl
cmp
mov
cmp
loope
add
sub
jno
inc
jnp
xor
add
mov
dec
sub
xor
xor
popf
test
out
cs
repz
jo
popf
pop
mov
cmp
test
dec
inc
mov
mov
cmc
je
sub
loope
push
add
inc
lock
sarl
add
mov
and
cmpsb
xchg
aaa
sub
test
mov
or
aam
jo
leave
or
imul
inc
add
jbe
arpl
xor
or
movsl
sub
inc
aas
mov
shrb
pop
cwtl
inc
movsb
hlt
sar
push
push
sub
cwtl
and
jne
icebp
pop
and
push
xchg
jno
lret
imul
mov
stc
mov
enter
ret
loop
adc
or
jmp
mov
mov
mov
adc
push
add
push
adc
in
add
adc
lods
push
add
sbb
jg
mov
xor
fists
inc
test
sahf
xor
adc
cmp
movsl
addr16
mov
mov
add
mov
sbb
popa
lcall
jmp
or
mov
add
pushf
mov
add
out
rcrl
pop
scas
jno
pop
fs
scas
push
in
and
or
sbb
lea
mov
mov
xchg
mov
lahf
dec
addr16
jecxz
fwait
xchg
scas
or
shlb
into
mov
adc
dec
adc
cltd
out
or
mov
lds
jo
pop
dec
push
cmpsl
out
pop
sbb
dec
inc
shl
sub
sub
clc
das
lock
lods
and
mov
add
fcomip
scas
ss
adcl
mov
aaa
ret
push
sbb
mov
aad
push
jne
jge
insl
fisttps
cmp
dec
aas
pcmpgtw
mov
pop
and
ljmp
cmp
out
or
pop
out
cs
jge
popf
sub
mov
call
cmc
mov
and
mov
and
jne
in
das
scas
in
add
push
mov
jmp
push
or
mov
out
sbb
iret
iret
std
fs
cmpb
mov
enter
mov
push
push
jae
les
dec
xchg
cltd
and
nop
ljmp
mov
mov
mov
and
rorl
add
popa
jno
inc
mov
into
cmpsb
dec
lea
clc
sub
orl
neg
iret
or
ficompl
mov
imul
push
loop
jl
stos
pop
jmp
or
in
jae
ss
lods
fildl
sub
ret
outsl
sbb
pop
cmp
cltd
sub
repnz
test
sbb
pusha
enter
test
andb
add
cmp
jg
sarb
js
sub
mov
in
jb
jp
pusha
jg
mov
adcl
sub
mov
aad
add
adc
insb
mov
xlat
repz
inc
or
hlt
pop
jne
xor
jl
stos
ja
das
pop
jbe
jns
icebp
sub
sar
outsl
enter
sbb
push
mov
push
push
cwtl
fldenv
xorb
repz
cmp
dec
push
stos
insl
cld
mov
call
push
test
les
mov
mov
out
pop
mov
jge
sbb
push
ljmp
clc
adc
inc
lock
out
dec
lods
cld
loop
xor
insl
mov
mov
addr16
lret
sub
fcmovnbe
sahf
nop
or
sbbb
sbb
loop
nop
jle
add
insl
ret
jmp
lods
xchg
xor
adc
test
add
cmp
mov
jno
popa
movsb
lea
insb
sub
rcrb
mov
sub
mov
lret
lods
in
push
insl
pop
mov
push
pop
out
call
out
cltd
mov
mov
ljmp
ss
push
dec
mov
lods
mov
js
pop
out
mov
add
stc
mov
adc
insl
mov
or
pop
loopne
inc
push
cwtl
jle
mov
pop
mov
sbb
imul
and
xor
flds
sub
mov
sub
fbstp
movsl
outsb
lock
test
xor
movb
imul
shrb
mov
shlb
inc
push
adc
push
pusha
cmc
jbe
cmp
mov
lea
negl
inc
mov
repz
xchg
mov
xor
xchg
ret
mov
cli
mov
sbb
cltd
mov
ja
mov
sub
aaa
fildll
dec
sbb
jno
pushf
xchg
or
xchg
or
push
rorl
xlat
outsb
mov
popf
xchg
push
inc
mov
xchg
popa
ljmp
adc
nop
lock
mov
sbb
fnsave
aad
push
mov
sub
rolb
mov
repnz
scas
nop
je
jecxz
mov
pop
fnsave
mov
rcll
aaa
dec
pop
loop
or
icebp
mov
inc
sub
orl
cs
gs
test
cs
or
aam
pop
push
dec
push
in
jl
sub
les
mov
xlat
lock
pop
test
jae
in
leave
mov
xchg
mov
dec
sub
pop
push
sub
rolb
sub
repz
jp
adc
int3
mov
cmp
mov
in
mov
cli
cmp
jmp
insb
out
mov
sub
pushw
fnstenv
mov
fwait
aad
sbbl
lcall
out
inc
movsl
cwtl
insl
in
push
push
leave
int3
jle
mov
in
mov
dec
push
mov
or
jo
and
lret
sub
jmp
sub
or
sub
jnp
mov
loop
mov
push
sub
add
or
xchg
loop
aaa
std
mov
loop
icebp
push
jle
mov
push
enter
imul
hlt
lret
aam
rorl
imul
loope
dec
sahf
dec
cmp
push
push
aad
cmc
sbb
adc
popf
cmp
andl
dec
test
scas
lea
pop
jns
fmuls
adc
mov
test
dec
dec
inc
fwait
movb
shlb
lret
sti
dec
xor
lds
push
xlat
add
xchg
arpl
test
xchg
fidivrs
mov
pop
dec
out
dec
outsl
in
add
push
bound
jb
mov
int3
jae
cli
shlb
sub
add
sub
xor
pop
je
pop
clc
popa
or
sub
jge
arpl
inc
adc
push
sub
insl
and
lcall
int
inc
jmp
xchg
test
outsl
fucomp
inc
inc
mov
idivl
out
testl
std
xlat
das
insb
and
push
adc
jb
push
out
fnsave
mov
add
mov
or
lcall
inc
mov
sbb
cltd
cld
nop
mull
out
push
pop
into
mov
lea
cwtl
inc
mov
or
sbb
hlt
mov
dec
mov
mov
cltd
mov
jg
push
in
sbb
mov
sbb
adcb
cli
in
jge
imul
and
fs
push
push
fcmovnb
es
cld
aas
fisubrl
cwtl
xchg
mov
je
ret
inc
sarb
or
pop
cltd
fisubrs
daa
inc
sbb
iret
sub
cmp
popf
push
test
dec
ret
lret
sti
and
ffree
es
lea
enter
jge
mov
test
stos
shlb
cmp
push
dec
cmp
ret
xchg
mov
sbb
mov
mov
mov
pop
sub
pop
pop
popa
push
pop
push
lods
jge
mov
push
pop
adc
mov
mov
sub
ss
pop
mov
push
xchg
or
jmp
cmp
sub
stos
stos
int
jae
add
mov
dec
and
int3
mov
pop
xchg
jae
or
fsubrs
pop
jp
popf
or
cmp
insb
mov
push
add
mov
int3
out
dec
mov
roll
mov
arpl
lds
lods
sub
ret
pop
push
insb
add
xor
mov
dec
xorb
repnz
xlat
sub
mov
sub
out
pop
aaa
mov
cld
pop
jno
sub
das
popf
aas
jb
rclb
pop
adc
push
push
mov
ljmp
popa
imul
dec
dec
notl
xchg
out
jmp
mov
sub
add
sbb
mov
mov
out
fsubs
add
icebp
imul
push
jns
je
in
insl
outsb
aam
inc
mov
or
stc
xor
add
movsl
cmp
xchg
push
hlt
fdivs
insl
add
cltd
lret
xor
mov
movsb
sahf
lods
sub
lock
add
inc
mov
aam
das
les
sar
cmpsb
inc
aaa
out
fidivrs
mov
dec
idivl
mov
xchg
push
cld
mov
mov
sbb
jnp
jecxz
fists
aad
mov
jb
repnz
divl
scas
dec
into
leave
mov
mov
aad
inc
mov
add
jbe
inc
jmp
sub
enter
inc
dec
dec
shl
aaa
and
mov
inc
insl
cli
and
sbb
imul
pop
out
outsb
rclb
or
dec
add
mov
cmp
mov
and
push
shlb
cld
mov
int
enter
mov
sbb
sub
shlb
cmp
movsl
dec
out
sahf
notb
mov
pop
leave
pushf
into
xor
mov
cld
dec
jecxz
test
add
mov
cmpsb
sbb
jo
imul
fisubl
sahf
sbb
push
iret
out
ds
mov
je
add
sbb
pusha
pop
fxch
jmp
push
sub
mov
inc
cmp
pop
jge
outsb
xchg
xchg
out
add
xchg
mov
sub
jne
pop
repz
mov
mov
insb
int3
push
sbb
sub
movl
push
notl
les
adc
mov
sbb
push
rcrb
push
sub
pop
push
xor
xchg
and
loope
out
pop
cmp
add
and
aas
fstpl
mov
test
mov
lcall
jns
clc
loopne
sub
leave
add
daa
inc
sbb
xchg
push
push
jmp
gs
popa
popf
in
aas
ret
adcb
push
fsubrp
aam
fsubl
mov
sub
or
popa
fiaddl
and
clc
data16
test
or
cmpsb
sarl
imul
lods
popa
xchg
fs
mov
ds
jb
mov
dec
mov
mov
xor
rol
roll
insl
out
outsb
xchg
dec
icebp
xchg
sbb
out
subl
sub
pushf
sub
adc
push
das
mov
and
stos
out
pop
daa
cmpsb
lods
out
loopne
es
add
pop
cli
cwtl
cwtl
push
scas
pusha
cmp
sub
test
loope
mov
subl
lahf
inc
xchg
jmp
stos
or
stc
pop
dec
push
sub
xchg
and
sub
jno
sbb
rolb
movsb
pop
ret
sub
mov
out
xor
int
jo
lahf
pop
jge
xchg
mov
insl
jmp
inc
sbbl
sub
push
xor
adc
jg
stos
jp
add
ljmp
les
insl
pushf
outsl
mov
mov
orl
bound
cmp
mov
and
inc
lahf
adc
mov
mov
add
cltd
sbb
jl
ds
sbb
aas
adc
fisubrs
scas
xchg
das
pop
add
sub
shl
sub
inc
rcrb
cmp
movsb
sbb
or
jns
adc
daa
or
xchg
cmp
jl
nop
inc
mov
xlat
jnp
sub
out
add
inc
push
cmp
jecxz
fs
xchg
into
mov
hlt
xchg
and
adc
pop
icebp
outsb
cmpl
jge
leave
lock
jbe
push
scas
loop
xchg
ss
shl
lcall
jbe
and
sbb
xor
push
xchg
icebp
push
mov
sbb
aad
push
out
lcall
cmp
out
jnp
adcb
xor
push
jp
jle
cmp
add
pop
sbb
mov
cwtl
pop
stc
push
negb
xor
call
lods
dec
xor
enter
jmp
mov
insb
cmp
int3
lods
jg
cmc
add
stos
js
fsubr
pop
fisttpll
mov
fldl
mov
xor
jp
scas
pop
push
int
inc
aad
sahf
vpminub
lock
ds
push
out
insb
aaa
mov
jle
ficoml
cmp
pop
and
inc
jge
shl
or
insl
cs
into
dec
aam
insb
push
sbb
das
jle
xor
jmp
daa
dec
xchg
sti
lret
call
sub
fsubrs
lret
test
fcompl
arpl
cmp
cmp
inc
push
hlt
ret
cmp
lods
add
push
shlb
adc
inc
mov
mov
pop
lcall
adc
rorl
int
call
into
repz
inc
movsb
test
std
ret
push
dec
lcall
adc
push
pop
xchg
mov
pop
adc
int
cmpsl
fcmovb
xor
mov
outsb
aam
ja
dec
or
mov
mov
jb
sub
loope
add
lret
adc
lret
cmp
cli
adc
jns
nop
cmp
cmp
dec
ljmp
mov
jo
mov
mov
shll
inc
push
mov
push
push
call
mov
stc
cmp
inc
enter
loope
xor
xor
jb
icebp
or
dec
aaa
in
sub
push
popf
mov
flds
outsb
mov
sub
add
xor
dec
ja
movsl
sbb
mov
roll
push
in
adc
mov
test
dec
dec
aad
in
mov
popa
or
adc
cmp
push
jle
mov
and
pop
js
mov
test
jnp
mov
or
sub
jno
dec
rcrb
arpl
in
lea
xlat
or
jmp
sti
jae
shrb
hlt
pop
orl
clc
inc
xchg
jp
push
push
pop
add
push
testb
fmulp
xchg
aam
xor
fisttpll
std
jne
xchg
pop
sbb
jb
xor
sub
and
xor
arpl
pop
sbb
sub
xor
lahf
dec
fsubrs
mov
loope
sti
fstpt
ja
mov
pop
adc
xor
sub
cmp
mov
xchg
mov
hlt
arpl
arpl
test
push
sub
jne
pop
adc
xlat
stos
cmpsb
imul
sub
divb
shl
mov
xchg
sub
jmp
mov
inc
ds
lods
xchg
fwait
mov
mov
cs
dec
sbb
aam
ret
movsb
adc
mov
pop
cmp
ret
pushl
and
addb
ret
sub
and
push
mov
fmul
fildll
adc
push
es
in
jmp
push
and
inc
ror
sub
cmp
loop
and
and
push
push
sbb
cmpsl
jge
enter
fsubrs
rorb
and
into
inc
leave
fwait
inc
mov
cmpsl
in
inc
aam
push
fldt
inc
xchg
sar
arpl
test
or
cmpsl
loope
sbb
cmpsb
mov
inc
aas
pop
sbb
xor
fstps
pop
test
cmpsb
cmp
out
add
xor
xor
xor
fisttpl
lods
and
push
xchg
mov
test
cmp
jbe
push
xor
jns
xchg
arpl
sub
mov
inc
out
and
mov
pop
inc
mov
xchg
xor
rcll
inc
ljmp
mov
lds
sub
ret
fwait
sub
in
nop
push
mov
pop
mov
cmp
insl
into
ret
ficoms
pop
popl
rorb
mov
fldl
ret
cmc
inc
mov
es
std
add
out
rcll
adc
leave
mov
into
stos
outsl
test
sbb
testl
ret
daa
xchg
add
mov
mov
pusha
sub
jo
xchg
xchg
in
and
daa
xchg
cmp
xchg
in
mov
push
into
mov
xor
lahf
or
jmp
push
ret
imul
push
sbb
je
stos
lds
scas
jmp
mov
cmpsb
addr16
mov
jge
push
or
sbb
mov
or
jbe
sub
pop
stos
ret
gs
sbb
sub
fmuls
inc
jle
cmp
mov
jmp
ss
in
push
out
add
cmpsb
add
clc
add
mov
nop
push
sub
in
les
mov
aad
flds
adc
inc
inc
sub
adc
add
imul
xor
xor
xchg
pop
repnz
mov
call
ss
and
pop
rclb
pop
lock
mov
adc
pop
mov
xchg
insl
jno
push
lcall
mov
pop
mov
jbe
mov
jmp
pushf
imul
movsl
inc
cli
mov
mov
loop
jno
jl
iret
mov
dec
cmp
ss
das
mov
cmp
add
or
mov
sbb
inc
xchg
mov
push
imul
lcall
stc
add
shlb
pusha
adc
js
sub
call
adc
add
jl
pop
xchg
fxch
mov
dec
lret
mov
jne
clc
xor
loope
call
imul
enter
dec
mov
xor
dec
adc
inc
sbb
pop
sub
aaa
xor
cmp
ja
ret
push
cmp
jmp
jb
xor
inc
jle
push
xor
int
leave
ds
arpl
push
adc
inc
rorl
fwait
mov
out
jne
pop
jae
sbb
fs
pop
push
cmp
mov
dec
ljmp
sbb
jns
fcomps
push
xchg
mov
insl
inc
dec
mov
pop
and
shll
xor
cmp
or
cmp
jb
shlb
jns
dec
pop
insl
jno
jne
lahf
cs
adc
clc
cmc
inc
or
repnz
adc
es
push
xor
lahf
int3
fldz
jl
ljmp
scas
jnp
imul
dec
push
outsb
sub
mov
data16
ds
mov
push
aaa
faddp
leave
insb
lret
adc
outsb
jcxz
or
test
nop
or
data16
mov
imul
sub
mov
add
push
xor
sbb
hlt
cmpsl
xchg
push
mov
xor
cmpsb
out
or
mov
rcl
sarb
or
out
cmp
repz
sbb
test
add
clc
fsubl
idivb
or
cmpsb
test
push
jge
lods
pmulhuw
and
sbb
idivl
pop
adc
mov
pop
pushl
mov
popa
in
addr16
mov
mov
popa
pop
xor
out
mov
les
icebp
xor
shll
ficoml
in
aam
fsts
ret
lret
xor
ja
mov
cmpsb
testl
jmp
and
sub
loopne
lret
psubusw
jmp
pop
jecxz
push
rolb
incb
fldt
data16
pop
dec
mov
negl
xor
jo
outsl
pop
cmp
popa
dec
mov
jb
es
push
xor
inc
push
push
jnp
das
jne
sti
dec
cmp
mov
push
shl
cld
stc
imul
jns
sbb
push
iret
jns
ret
and
test
loope
mov
xor
mov
pop
out
dec
xchg
pop
inc
imul
mov
out
sbb
inc
mov
cmp
lea
xchg
sub
aaa
jo
xchg
sti
sub
add
jno
xor
jno
jno
loope
pop
mov
mov
cmp
out
dec
mov
xchg
mov
fucomp
pop
insl
ja
push
inc
insl
sub
xchg
fimull
data16
pushf
fwait
movsl
sbb
test
mov
lea
cld
inc
in
sub
es
sbb
jg
push
arpl
repz
or
inc
or
pop
rcll
sbb
scas
jo
setns
mov
jnp
cmp
cli
inc
cld
int
sbb
jb
loope
dec
rcl
mov
es
repnz
leave
pop
popa
sub
sub
cmpl
add
notl
insb
mov
mov
movsb
sti
push
mov
mov
int3
rcrl
jp
and
xchg
inc
inc
fs
inc
add
lods
shrb
dec
cltd
test
fiadds
mov
sbb
stos
or
loope
dec
test
jns
jo
scas
and
stc
xor
mov
jmp
test
jno
dec
jae
mov
mov
in
adc
adc
popf
xor
sub
jp
lret
cmc
outsb
sub
outsl
das
hlt
test
add
dec
imul
rclb
mov
lods
push
xlat
or
fwait
nop
jo
xlat
cmp
xchg
pop
lahf
and
aas
nop
neg
or
push
or
das
push
cld
mov
add
dec
lcall
or
ret
pop
ss
imul
jne
out
cmp
hlt
imull
push
jg
sub
adc
aas
mov
test
inc
mov
inc
mulb
ret
sbb
adc
sbb
test
mov
inc
xchg
hlt
jge
bound
lret
and
push
mov
jmp
push
rcl
loopne
sub
repnz
jl
dec
leave
add
inc
adc
fs
aas
rorb
inc
fimull
mov
rcrl
bound
dec
sub
sahf
clc
gs
xor
dec
or
test
inc
mov
in
jb
orb
jge
fisttps
mov
dec
insl
ds
mov
enter
mov
jae
and
cmp
pushf
int
movsl
loope
dec
xchg
out
xlat
ret
mov
fdivrl
mov
pop
mov
fwait
or
mov
cmp
subb
out
sbb
sub
inc
lcall
push
sub
mov
sub
jo
inc
or
movsl
push
das
push
lea
ror
jo
sarl
mov
aam
jg
out
stos
xor
jb
xchg
mov
xchg
adcb
pop
das
xor
bound
lods
cwtl
pusha
or
sbb
int3
icebp
int
mov
jae
jmp
inc
pop
inc
faddp
xor
stc
jne
scas
or
insl
mov
iret
out
lea
mov
hlt
adc
movb
jle
and
std
jp
jnp
xor
sarb
orb
sbb
sbb
and
mov
test
xchg
ja
push
inc
mov
mov
mov
int
aad
lahf
gs
js
jns
sbb
jnp
shlb
data16
cld
cmp
pop
stos
lock
stc
xchg
sbb
js
push
xchg
loop
pop
sti
jns
adc
cmp
xchg
dec
cmp
xchg
aad
fistpl
cmc
push
cmpsb
mov
nop
pop
stos
pushf
sti
push
dec
fucomi
inc
in
cmp
fwait
outsb
aad
mov
sbb
dec
adc
dec
orb
pusha
and
mov
mov
js
jb
stc
cmp
push
shl
dec
sub
push
dec
loopne
movsl
inc
lea
add
push
or
mov
jg
popf
aas
call
call
dec
mul
sub
xchg
insb
out
dec
xchg
inc
cmpsb
mov
cltd
jecxz
cmp
mov
fstpt
push
loop
jne
aad
and
push
ja
jns
fsubs
ds
addr16
mov
popa
shll
inc
fisubl
add
movsb
movsl
je
push
or
loopne
jg
sahf
mov
movb
xchg
addr16
outsl
das
iret
insl
xchg
push
push
xor
es
xchg
jb
jg
pop
jge
sub
push
cmc
stc
bound
jecxz
xor
shl
and
sbb
push
sub
or
mov
cmp
fwait
dec
test
inc
repz
into
test
aam
push
sub
push
xchg
out
into
cs
lock
cmp
sti
mov
xor
and
mov
push
movsb
inc
das
mov
cmpsb
mov
mov
add
jecxz
cmp
lods
in
fwait
xchg
out
jbe
gs
aam
or
out
sbb
xchg
mov
xorb
gs
ja
mov
movsb
xchg
jo,pt
jecxz
mov
bound
xchg
jmp
pop
sub
movsl
lock
shll
es
or
jg
mov
push
cmp
mov
test
cld
lock
jne
jo
cmc
pusha
mov
sbb
jecxz
dec
stos
mov
pop
incl
mov
fcomip
inc
xchg
pusha
inc
sub
xchg
xchg
adc
add
cmp
xchg
xchg
syscall
or
push
xlat
mov
mov
mov
jge
add
sahf
lods
inc
cmp
test
stc
js
lods
fwait
push
and
jae
into
jp
cmp
jo
fwait
cmp
stos
sub
out
lods
nop
ficomps
cmpsb
mov
lret
out
aas
push
mov
stos
xchg
mov
std
jle
mov
cmp
loop
jle
and
pop
adc
mov
loopne
mov
push
cli
mov
inc
aas
or
mov
lcall
jmp
outsb
dec
mov
js
in
pop
outsb
and
jp
test
jg
push
test
lea
inc
out
sub
inc
sbb
imul
fadd
nop
shl
aas
and
ret
fbstp
jno
inc
jge
lds
mov
fdivs
mov
jge
adc
push
sbb
inc
mov
loop
cmp
jl
sarl
push
repnz
in
sub
pop
xchg
adc
push
xchg
xchg
incl
sub
lret
mov
inc
das
inc
hlt
pop
push
negl
jnp
lret
outsb
fwait
jg
sarb
lea
movsl
sarl
data16
adc
mov
test
rcll
pop
mov
cld
lahf
add
gs
inc
insl
cli
add
cmc
xchg
out
aas
fdiv
or
mov
mov
out
daa
jg
lret
jbe
negb
aas
jle
das
inc
fnstcw
out
push
mov
call
stos
dec
dec
mov
out
jne
popl
movsl
xor
and
call
or
mov
mov
cmpsl
mov
dec
mov
daa
sub
sub
inc
hlt
add
cltd
fadd
leave
and
pop
fwait
test
aad
js
mov
jecxz
pop
cmpsl
inc
loope
inc
in
cmpsl
repz
ret
bound
adc
add
jp
dec
mov
push
or
pop
imul
adc
or
rolb
sbb
rcr
in
pop
fisubrl
inc
loopne
clc
sbb
or
pop
hlt
xor
sbb
lcall
add
ja
mov
lret
gs
decb
mov
and
push
cmc
dec
aaa
inc
lcall
pusha
ss
test
out
or
movsb
push
xchg
or
xchg
xor
adc
shlb
fcoml
ljmp
xor
sbb
test
xorl
popf
pop
into
xor
jnp
jbe
test
stc
mov
inc
movsl
out
cmp
mov
gs
addl
mov
fidivrl
fwait
loope
cmpsb
push
xor
lahf
mov
pushf
cli
stos
sub
lods
aad
mov
imul
test
mov
pushf
lcall
les
mov
repz
not
sbb
and
mov
push
sbbb
testl
pusha
repz
dec
inc
inc
sti
repz
mov
lahf
out
or
push
fldenv
loope
jo
stos
add
add
pop
adc
push
pop
repz
aam
arpl
sub
sbb
xor
dec
fstps
and
push
test
imul
push
push
xchg
in
or
lock
xor
mov
dec
pop
es
sub
mov
fiadds
test
pusha
sub
cmp
jge
inc
inc
jo
pop
in
testb
inc
ja
sbb
mov
add
lahf
lods
out
sbb
mov
stos
rcl
insl
pop
mov
bound
scas
jle
lea
inc
pop
add
mov
in
sbbb
xchg
add
out
daa
xchg
mov
imul
jge
adcl
aaa
or
imul
cmp
dec
inc
cmp
negb
mov
jp
xchg
cmp
int
add
jns
sbb
insl
mov
cmp
das
shrb
mov
test
movups
xchg
test
mov
cmpsl
mov
out
sub
in
cli
lods
adcl
ljmp
ja
pop
xlat
arpl
adc
push
in
adc
icebp
xchg
sti
lahf
pop
ja
inc
out
test
cmp
pusha
mov
fldenv
jbe
push
jge
add
lcall
je
jl
push
and
mov
fsubrl
fucom
and
jl
out
inc
ja
adc
push
add
add
xor
cwtl
sub
sub
xchg
push
test
orps
xchg
and
das
xchg
xor
les
enter
clc
cmp
dec
cmc
jns
mov
and
inc
test
aad
mov
xchg
jnp
testl
dec
inc
and
add
mov
dec
mov
adc
jnp
dec
adc
cli
mov
test
cli
xchg
out
xor
sub
sti
mov
push
inc
cmc
ljmp
jno
jmp
subb
dec
pushf
in
cmp
pushf
stos
add
mov
pop
or
xor
sub
lock
dec
fs
mov
loopne
pop
cs
mov
or
stos
cmp
dec
les
xchg
mov
xorl
push
dec
jb
add
pop
add
js
xchg
cmp
push
jmp
lds
cmpb
loopne
fwait
test
jne
aad
pop
in
push
movsb
lcall
adc
cld
jno
xchg
xor
and
lret
xchg
comiss
cmp
xor
add
adc
cmc
mov
imul
jne
mov
sub
pop
mov
pop
cmp
stc
imul
pop
xchg
xor
inc
xchg
loop
jno
fwait
mov
faddl
jo
ret
faddl
enter
sbb
jl
lret
out
outsl
fistpll
gs
mov
jnp
cmp
dec
cmp
push
jl
inc
xchg
lcall
mov
mov
fwait
push
pop
mov
cltd
xor
ja
cmp
inc
push
cwtl
cwtl
mov
ja
nop
outsl
call
stos
cmpsb
dec
ret
out
hlt
mov
pop
es
jmp
scas
xchg
lods
mov
xor
lcall
cmpl
mov
nop
insl
jnp
ret
inc
dec
mov
jo
fnstenv
mov
dec
jmp
and
push
adc
sbb
mov
ss
mov
or
arpl
sub
inc
xor
orl
out
cmpsl
push
adc
adc
mov
adcb
or
int
mul
add
stos
push
mov
xor
xchg
out
or
sahf
dec
push
outsb
sbb
lret
out
test
xchg
test
mov
shrl
mov
xchg
out
xor
pop
movsl
cmp
test
popfw
and
aas
cwtl
xor
je
mov
scas
jp
rorb
insb
xlat
dec
ret
fldcw
inc
jle
addb
adcl
jecxz
xorb
mov
mov
dec
push
cmc
xor
adc
adc
jo
push
jo
cmpl
and
jno
inc
lret
shrb
mov
xchg
jno
inc
and
or
rolb
testb
subb
ds
xchg
mov
leave
sub
xor
push
andl
fbstp
adc
inc
stc
hlt
inc
out
lahf
lret
cltd
loopne
cli
pop
mov
repz
das
nop
lahf
je
filds
xchg
and
pop
pushf
pushf
out
push
mov
fdivrl
clc
hlt
jno
xlat
cld
add
bound
mov
cmp
push
xchg
jecxz
icebp
hlt
sbb
pop
daa
mov
int
mov
arpl
jmp
popl
imul
pushf
mov
pop
and
shlb
mov
call
sub
xchg
inc
imul
test
pop
cltd
mov
arpl
xchg
cmp
sub
sbb
jge
mov
sub
loopne
jmp
xor
movl
mov
int
pop
imul
push
or
sbb
mov
aaa
pop
test
mov
pushf
mov
dec
mov
inc
add
and
dec
fnsave
jno
sub
push
sbb
or
fildl
xor
add
dec
out
sbb
inc
mov
or
fwait
or
fisubs
hlt
xchg
dec
jp
xor
fxch
data16
or
ret
js
repnz
sbb
xchg
cmp
rclb
xchg
sar
xchg
lods
pop
push
psrld
scas
push
out
pusha
and
and
push
push
lret
mov
subb
sbb
out
dec
arpl
shlb
jbe
or
dec
mov
out
mov
xor
sbb
inc
in
arpl
jp
mov
mov
lods
sub
mov
push
inc
or
inc
in
and
xor
pushf
ficoml
dec
or
or
cltd
loopne
add
cld
xchg
or
out
movsb
mov
jnp
dec
xchg
ficomps
cltd
movsl
mov
adc
es
xor
int
rolb
mov
in
leave
fadd
stos
test
jl
bound
cmp
fs
push
outsb
or
out
pop
pop
pop
cli
sbb
jmp
mov
stos
inc
pop
cmp
cmpsl
ja
or
adc
data16
jmp
xchg
jle
push
mov
repz
and
mov
mov
cmp
or
jb
pusha
lock
imul
push
pushf
ret
popa
test
add
inc
andb
rcl
into
clc
cltd
cmp
aam
jo
and
iret
jge
xlat
sub
add
mov
sbb
ret
aam
dec
out
scas
outsb
imulb
nop
pop
pop
inc
cmp
jo
adc
or
pop
sbb
cltd
push
into
adc
pop
push
cmp
add
mov
push
insb
test
shll
stos
cmp
mov
dec
jo
dec
jle
sbb
cmp
inc
clc
pop
mov
loop
mov
cmpsl
imul
fistpl
je
fsubrs
js
sbb
and
adc
std
fcmovnbe
sbb
xchg
xchg
lock
dec
pop
test
xchg
repnz
xor
pop
adcl
and
and
inc
ja
loop
arpl
mov
jb
aad
fs
sarb
orb
fcoms
mov
mov
cltd
dec
sbb
fucomip
out
ds
fwait
cs
icebp
movsl
mov
mov
movsl
cmp
ljmp
scas
mov
jnp
jl
push
lods
cmp
push
cltd
lods
out
cltd
lea
leave
mov
arpl
imul
lock
push
and
lret
enter
mov
je
rclb
xchg
in
xchg
push
add
sub
cmp
inc
fst
decl
andb
addr16
je
and
fistps
rcrb
aas
jp
pop
enter
mov
fcmovnb
inc
arpl
inc
mov
rcr
lret
iret
inc
or
xchg
sbb
out
imul
and
xchg
cmp
stos
sbb
mov
xor
cmp
sbb
cwtl
aam
in
cmp
pusha
mov
outsl
das
out
scas
mov
inc
adcl
mov
xor
mov
add
decl
xchg
lcall
push
jp
std
xlat
and
testb
or
xor
or
push
cmp
addr16
out
fisubrs
je
push
sbb
mov
insb
shll
jne
inc
bound
inc
cld
or
jns
rcrb
icebp
push
xchg
mov
aas
out
outsb
pop
or
xchg
add
ljmp
in
push
andb
inc
cmp
cmp
mov
ds
into
movsl
mov
jno
xor
or
xchg
fs
shll
inc
pop
cmp
in
les
les
mov
sahf
jb
dec
sub
push
jbe
push
jp
push
cmpsb
mov
xor
add
xlat
sub
fpatan
inc
jmp
xchg
pop
lret
and
sub
mov
ror
add
addr16
push
sbb
jmp
daa
mov
mov
fldt
call
pop
roll
cmp
loop
lret
loop
jmp
jne
add
in
pusha
mov
std
cmp
push
dec
pop
cld
mov
test
mov
cmp
and
pop
cmp
or
xchg
and
xor
cmp
inc
mov
push
jno
je
inc
push
xor
adcb
fcompl
xchg
jl
push
aaa
test
jns
out
xchg
inc
add
clc
pop
xor
into
dec
imulb
add
sbb
mov
scas
sbb
xchg
cli
arpl
aad
out
pop
xor
stc
sti
cli
cmp
cmp
xor
cltd
xor
inc
lea
push
sbb
cld
add
push
cmp
arpl
ret
test
xor
cmp
jg
fnstsw
js
push
fwait
pusha
cmc
scas
es
push
jle
ja
jmp
sbb
cmpsl
push
pop
gs
inc
scas
mov
xlat
pop
pop
push
dec
mov
pop
test
pop
xchg
sbb
std
loop
sahf
dec
push
mov
stos
insl
pop
filds
mov
mov
inc
int
aaa
xlat
std
mov
mov
fildl
test
fisubl
sub
pop
pop
cmpb
xor
mov
repnz
xchg
jle
dec
jl
mov
sub
mov
cli
in
sbb
shl
clc
inc
lcall
mov
and
and
mov
cmpsb
rorl
push
dec
fs
jo
xchg
movsb
jg
fwait
mov
loope
ja
jmp
fninit
jg
and
adc
call
pop
jecxz
push
xchg
dec
add
xchg
adc
mov
and
mov
adc
stos
mov
icebp
mov
cmp
or
leave
pop
mov
mov
push
clc
ss
ret
arpl
lea
pop
call
push
mov
jl
in
sbb
std
xor
dec
mov
xor
sbb
aaa
scas
mov
sub
lea
push
sub
dec
ret
out
mov
loope
or
jns
add
std
mov
sub
addl
daa
push
notb
scas
arpl
xchg
cmp
mov
es
mov
fstpl
xor
nop
push
pop
loop
or
xlat
lods
aaa
or
jns
outsb
js
outsl
sbb
ss
mov
loope
mov
adc
pusha
cwtl
int3
loop
add
lea
notb
and
repz
hlt
inc
push
lods
dec
dec
cmpsb
call
jmp
cli
mov
xor
sub
dec
and
nop
out
into
loope
or
inc
push
ds
test
dec
shlb
push
jae
pop
pop
in
push
into
add
inc
dec
dec
jbe
mov
nop
inc
mov
or
cmp
mov
test
jg
pop
cmp
mov
pushf
mov
jp
xorb
cmp
std
rclb
addb
or
loop
es
lahf
aam
sub
add
ljmp
dec
int
loopne
add
jns
cmp
in
mov
leave
xchg
repnz
push
dec
adc
mov
pushf
mov
dec
repnz
pop
fdivrp
scas
dec
cmp
dec
dec
push
mov
aas
mov
gs
jns
sbbb
xchg
test
sbb
mov
or
pop
not
lds
mov
mov
stos
nop
sub
push
sarb
jmp
leave
js
jne
add
aad
sbb
ror
jno
pop
in
xchg
mov
movsl
mov
mov
divb
jg
int
mov
lcall
sbb
fs
dec
pop
bound
sbb
in
scas
dec
sub
pop
lahf
add
adc
pop
scas
xchg
mov
notl
les
decb
popa
ror
adc
aas
pop
mov
int
add
push
pushf
roll
sub
jp
sbb
iret
pop
jmp
mov
loopne
xchg
gs
sbb
movsl
inc
cmpsb
mov
jp
inc
xchg
inc
cli
pop
lahf
jnp
lds
inc
enter
lods
sbb
jl
push
adc
out
out
idivb
jb
pop
xor
pop
pop
cmpsb
and
scas
mov
js
xchg
lea
wbinvd
cltd
outsb
iret
clc
sbb
shrl
cmp
xlat
and
bound
lcall
lret
xchg
sbb
sub
lcall
imul
outsb
rcr
cs
mov
xchg
fs
negb
mov
std
push
xor
mov
sub
js
cmpsb
sub
mov
xchg
out
sbb
add
negb
mov
ja
sub
sbb
adc
dec
decl
int
scas
ljmp
je
mov
dec
push
mov
daa
addr16
outsl
mov
arpl
es
mov
mov
xchg
jmp
mov
filds
lods
mov
push
mov
cld
inc
sti
cwtl
icebp
into
sub
ljmp
sbb
out
pop
mov
and
mov
cld
ret
adc
push
loopne
mov
popa
jns
adc
mov
out
sbb
data16
push
loopne
xchg
lcall
mov
out
in
cmpsl
and
out
test
or
push
jno
jmp
scas
cld
mov
mov
pop
mov
js
xor
jmp
jmp
sbb
fwait
cwtl
pop
cmp
jb
rcrl
shrb
inc
dec
mov
cmp
pop
jecxz
mov
sub
in
stos
lods
outsb
or
pop
scas
mov
mov
stos
test
jle
pop
mov
sbb
insb
xchg
aad
ljmp
or
aam
in
pop
and
fsubs
xor
dec
dec
pop
gs
fcmovbe
xchg
or
fwait
lds
cwtl
bound
xchg
enter
xchg
inc
jg
xlat
test
mov
ds
xchg
imul
add
and
adc
cmp
rorb
mov
or
jnp
aam
sbb
mov
out
lea
push
cmp
mov
jns
dec
jae
mov
push
mov
out
mov
mov
sti
out
jle
cmp
pushl
xlat
mov
sbb
popa
imul
mov
adc
mov
dec
xor
inc
sub
push
sbb
fnsave
paddd
xchg
cmp
add
fucomp
into
and
subb
pop
and
add
pop
add
jge
pop
addb
cmp
mul
push
imul
sub
lods
sub
call
test
xchg
hlt
loop
orb
pop
mov
adc
rorl
lock
pushf
clc
jle
insl
addr16
xor
mov
pusha
mov
test
add
sub
cli
aas
pop
dec
mov
loope
fldcw
jle
sub
scas
shl
sub
scas
jno
jmp
out
pushf
push
fsts
ret
lcall
xor
cmc
and
les
into
aam
sbb
add
mov
pop
jp
inc
mov
repnz
lods
cmp
lods
pop
fisubrl
mov
xchg
ja
pushf
sahf
andb
stc
add
xchg
cmpsb
mov
addb
and
xor
or
rcll
xchg
lea
xor
push
jbe
fdivl
adc
cmp
or
rolb
in
pop
test
popf
mov
inc
cmp
ss
ds
loop
loop
and
adc
jge
inc
std
xor
and
xor
or
mov
std
ljmp
mov
sub
adc
mov
mov
cmp
out
mov
add
mov
fstps
sub
aaa
jg
add
pop
jmp
adc
addr16
adc
imul
popf
arpl
movsl
movsl
je
push
cmp
mov
sub
fisttps
cmpb
int3
ljmp
int3
ja
mov
inc
in
pop
and
sbb
inc
add
loopne
pop
cwtl
fs
pop
cmp
inc
pop
popa
push
enter
cld
loop
sub
out
mov
cmp
call
lret
cs
xlat
ds
adc
mov
and
aad
out
push
cltd
out
xor
mov
adc
movsb
insl
roll
or
bound
fs
lret
jecxz
cmpsb
into
pusha
shlb
pop
lock
addl
addr16
xlat
jg
inc
les
lea
lds
out
in
jle
adc
movsb
mov
fs
cwtl
pop
es
js
xchg
jb
push
sub
jno
mov
je
add
js
imul
stos
std
in
shll
xchg
negl
aaa
jbe
popf
mov
xchg
jge
sbb
inc
fmuls
push
pop
or
mov
mov
ljmp
jle
xchg
inc
ret
ret
and
cmp
or
test
mov
out
and
push
add
in
jle
mov
jle
dec
andb
lahf
lahf
and
adc
stos
jl
cmp
std
xor
inc
fnstenv
mov
out
out
add
add
std
or
pop
mov
fldenv
cmpsb
repnz
arpl
jg
rorb
pop
mov
out
sub
stos
jne
adc
pop
dec
mov
jnp
test
or
inc
gs
fidivrs
addr16
fwait
das
sub
pop
sarb
pop
test
jne
xlat
and
fmulp
repnz
scas
fwait
call
mov
mov
cmp
push
sub
dec
test
jmp
roll
or
fimull
add
mov
cmp
daa
xor
mov
iret
cmpsb
pop
dec
or
fldenv
out
mul
clc
pop
mov
mov
mov
pushf
movsb
adc
into
icebp
xlat
dec
push
out
orl
sub
push
push
jo
rcrl
loopne
push
xor
fsubp
fidivrl
aam
dec
test
push
outsl
cmp
sbb
adc
fnstenv
lcall
repz
sti
jnp
sub
call
jns
cmpsl
sbb
xor
fbld
lea
and
or
movsl
mov
repnz
ficompl
or
dec
stos
mov
cmp
push
daa
lcall
out
mov
pop
mov
add
outsl
cmp
addr16
clc
pcmpgtb
or
inc
int3
nop
mov
pop
jb
ret
imul
mov
cmp
mov
jg
sbb
fdivs
cmp
or
loop
shrb
dec
xor
pushl
fnstenv
mov
sub
mov
and
adc
loope
fisttpll
mov
loopne
push
and
push
ret
dec
mov
fdivl
sbb
mov
in
movsl
xchg
xchg
je
xchg
fstl
jle
pushf
loopne
cmc
pushl
dec
mov
or
jmp
mov
movsl
cmp
into
jb
push
sbb
mov
jnp
pop
adc
xchg
or
leave
in
hlt
jno
mov
mov
mov
inc
adc
mov
loopne
or
cmp
inc
pop
jnp
in
push
xchg
ret
sbb
push
popf
mov
js
pop
dec
pop
add
decl
ret
bound
add
stc
cld
jb
xor
xchg
xor
mov
out
das
or
into
jbe
or
stos
dec
dec
jb
and
addb
mov
inc
jo
xlat
fcompl
push
ror
hlt
inc
daa
and
dec
mov
das
mov
inc
roll
pminub
dec
out
and
adc
push
daa
gs
sbb
mov
jb
mov
add
cmp
daa
or
and
repz
mov
inc
push
sti
std
or
jl
icebp
cwtl
jecxz
xor
ret
adc
sbb
addr16
inc
repz
cmpsl
mov
pop
fdivl
clc
pushf
popf
jp
bound
mov
add
stc
xor
movsl
rcll
pop
mov
lahf
xor
sub
lret
pushf
outsb
js
rcl
out
cmp
mov
outsl
cmpsb
rorb
xor
pop
mov
add
cmp
pop
into
sbb
ss
jl
cmp
xor
dec
sub
jg
imul
jge
cmp
aad
push
pop
lock
dec
mov
xchg
pop
sbb
jl
xor
jle
push
mov
imul
ror
jecxz
loope
sub
fstps
jg
cmpsb
mov
sbb
push
jns
pop
stc
push
lret
into
adc
jp
test
inc
cmp
cmc
add
rorl
adc
push
mov
add
or
in
lods
testl
cmp
lret
mov
sub
movsb
fildll
jge
sbb
loopne
push
cld
in
jge
daa
and
cmpsb
jno
frstor
mov
dec
jmp
outsb
inc
xchg
adc
or
hlt
movsb
or
mov
sbb
jne
add
pop
push
fsts
dec
into
cli
sahf
mov
jno
xchg
dec
and
push
push
pop
inc
xor
cmp
out
dec
dec
xchg
sub
out
sarl
add
in
loope
stc
mov
cltd
rcrl
jb
dec
adc
push
fcompl
pop
repnz
jmp
pop
inc
xchg
jle
ljmp
cmp
or
int
mov
icebp
shlb
mov
sarb
inc
in
aas
in
xchg
and
cltd
clc
jmp
xchg
xor
dec
or
test
push
cmp
adc
mov
cmc
jp
cmp
fidivs
mov
add
mov
ret
push
outsl
jge
xchg
lods
xchg
aad
imulb
lret
adcl
insl
jle
popa
jle
inc
rol
pop
cltd
ja
mov
repz
insb
sub
cltd
or
sub
pop
or
xchg
inc
or
clc
adc
mulb
mov
inc
sbbl
cwtl
push
or
sahf
mov
xchg
add
xchg
mov
jb
mov
mov
pop
sub
rolb
out
int3
jle
int3
inc
mov
sbb
jnp
xchg
mov
add
lods
data16
dec
jae
pop
leave
cmc
sub
leave
inc
int
into
filds
repnz
ja
movsb
cmp
mov
mov
sub
out
les
jg
pop
inc
xchg
mov
iret
and
xchg
mov
jae
adc
add
loop
lea
xor
daa
xchg
insl
in
xor
popa
push
xor
cmp
dec
icebp
rolb
mov
arpl
stos
rep
xchg
mov
sbbb
sub
andb
mov
mov
mov
out
mov
fcomps
gs
xor
inc
add
xor
pop
cmp
prefetchwt1
xor
add
push
mov
jbe
fdivl
mov
mov
push
adc
lret
mov
sahf
adc
test
push
outsb
loopne
dec
dec
mov
mov
xchg
stc
ss
scas
fbstp
jecxz
std
pop
cli
and
fs
add
mov
out
ret
fcomps
dec
test
popa
adc
adc
repnz
icebp
sub
inc
inc
sub
inc
pop
out
out
pop
in
imul
add
or
ret
insb
cmpsl
push
shll
das
fldcw
cmp
adc
push
pop
xchg
test
mov
pop
ret
imul
jns
subl
jmp
add
aam
mov
fidivrl
sub
xorl
jno
and
sbb
xor
cmp
pusha
sub
cwtl
xchg
dec
loope
std
lret
jmp
ss
pop
push
dec
jns
int
jo
push
pop
les
pop
jle
out
int
cwtl
sub
shl
iret
loopne
out
or
xchg
aad
movaps
mov
dec
or
mov
jno
pusha
cld
mov
xor
cmp
test
addr16
adc
testl
imul
popf
leave
cwtl
adc
les
popf
push
and
inc
mov
stc
int3
jmp
mov
adc
mov
xchg
mov
mov
jne
and
dec
gs
add
mov
nop
xchg
add
pop
mov
inc
stos
repnz
sbb
repz
stos
mov
inc
dec
ja
sbbl
mov
adcb
leave
xchg
test
sbb
sbb
adc
jbe
out
sahf
cmpb
popf
adc
aaa
sub
dec
leave
pop
push
mov
ja
call
arpl
int
es
push
jns
inc
movsb
and
pop
add
jp
cmc
pushf
jno
push
mov
mov
aam
cmp
cltd
jbe
add
and
lahf
jnp
pop
shlb
cwtl
iret
js
ret
imul
dec
inc
mov
jns
addb
push
std
out
ds
cmp
mov
push
mov
xchg
add
cmp
xchg
or
mov
js
mov
insl
test
ds
lea
xor
cmp
fsubrl
or
out
call
mov
jl
cmpsb
insl
sahf
push
outsl
sbb
adc
fwait
sti
push
jmp
dec
in
daa
mov
sarl
fwait
lods
shrl
call
xchg
xor
mov
mov
ret
cli
pop
imulb
pop
into
dec
lret
roll
shll
fs
adc
lea
mov
push
adcl
inc
pop
out
mov
mov
push
and
lret
pop
mov
mov
popw
adc
in
mov
dec
mov
das
jge
xchg
jg
push
ljmp
xchg
call
clc
cli
cmp
jae
jae
fistpll
fildll
push
loope
jecxz
mov
pop
jg
lcall
addr16
mov
std
rcrl
movsl
add
mov
push
adc
lods
and
mov
rcrl
call
cmpb
push
rorb
xor
xor
mov
imul
test
enter
mov
jns
adc
cmp
cwtl
jecxz
lock
pop
adc
popa
stc
lock
jo
neg
inc
pusha
scas
push
in
cld
cmpl
jno
xchg
inc
lcall
and
xchg
mov
mov
jo
out
gs
iret
and
call
dec
xchg
xlat
loop
pop
and
lret
inc
clc
cmp
push
or
adc
lahf
out
in
inc
xchg
xchg
jns
sub
pop
std
fs
cltd
inc
mov
inc
push
mov
shrb
ficoms
sub
lret
cltd
inc
jp
int3
and
out
cltd
inc
shlb
ljmp
jl
rcrb
stc
or
mov
stos
iret
push
aad
push
and
dec
or
test
loop
je
scas
adcl
inc
dec
push
xchg
test
xchg
sbb
int3
test
pop
mov
push
jns
arpl
int
lahf
pop
stc
sbb
pop
mov
cltd
in
movb
outsl
inc
and
mov
cmp
mov
lea
cmp
push
insl
hlt
ljmp
mov
lds
out
jo
mov
inc
adc
das
mov
mov
sti
mov
xchg
add
popf
cmc
lret
mov
push
jb
pop
shrl
gs
jmp
inc
mov
xchg
sahf
in
mov
or
inc
arpl
popa
sbbb
sbb
js
sbb
push
clc
pop
xchg
into
cmp
cmpsb
ficomps
fwait
pop
and
dec
fmull
dec
and
pop
mov
arpl
mov
mov
daa
xor
les
aaa
int
and
bound
outsl
jb
push
sbb
push
test
mov
les
jp
outsb
orl
sarl
adc
adc
movsb
mov
push
pop
push
adcl
pop
out
cmp
imul
dec
cwtl
sbb
and
push
fcmovne
xchg
stos
adc
loope
rcll
mov
xchg
clc
scas
shr
in
dec
std
inc
mov
jle
pop
add
adc
shl
insl
pop
roll
dec
xor
pop
loope
inc
dec
in
shll
movsb
pop
hlt
or
out
jp
pop
outsb
les
cmp
sub
subl
dec
scas
cld
mov
fs
ret
daa
roll
mov
dec
mov
les
rcrb
es
jo
cmp
cld
push
int3
fcom
ret
push
xchg
es
das
fnsave
and
xchg
gs
out
stc
repz
push
mov
test
inc
push
jl
pop
cmp
push
leave
ds
jno
shlb
jp
add
push
imul
xlat
sub
xchg
mov
subb
in
sahf
js
mov
jno
aaa
push
adc
dec
push
rol
mov
add
xor
mov
adc
addb
cmp
mov
mov
fcomps
jne
loopne
cmp
nop
rol
orl
pusha
incl
hlt
js
mov
clc
shll
cmp
test
mov
pop
mov
push
sbb
cmp
pop
mov
into
cmc
out
cltd
fdivp
ds
mov
cwtl
mov
and
imul
sbb
rclb
fwait
mov
xchg
jp
mov
clc
xchg
lret
jl
cmc
ds
into
push
mov
sub
sbb
bound
fisubrs
nop
inc
adc
xchg
sub
pop
stos
pop
ljmp
cwtl
pop
scas
xorb
jp
adc
imul
xchg
cmp
movsb
xor
mov
addr16
es
jge
add
adc
cwtl
insl
dec
das
jge
sti
icebp
fidivrl
fisubl
add
dec
adc
xor
push
int3
dec
je
aas
jae
add
fstp
inc
jnp
enter
mov
loop
popa
clc
stc
imul
dec
nop
jo,pt
enter
push
sbb
push
pop
stos
push
outsl
xchg
mov
or
cltd
scas
pop
mov
sahf
stos
inc
dec
sub
mov
cltd
jecxz
imul
adc
mov
sbb
cmp
inc
std
cmpb
inc
mov
rolb
jle
ds
inc
stos
movsb
mov
add
fcomip
incb
fistl
imul
outsb
shr
test
sbb
dec
jne
leave
mov
in
loope
stc
outsl
pusha
push
jecxz
xorb
aaa
lret
loopne
mov
imul
push
movsl
push
pop
pop
cmp
add
mov
jge
movsb
je
or
mov
cwtl
cmp
push
fnstenv
ret
xor
stos
je
xchg
sbb
xlat
fisttps
cmp
fisubrs
pop
daa
ficomps
adc
or
fdivrs
fnstcw
mov
orb
sbb
cld
rcrl
fcoml
sub
rorb
jecxz
test
stos
jecxz
fwait
testb
xor
xchg
pop
mov
add
mov
mov
push
inc
cwtl
adc
ja
xor
or
jmp
js
mov
jg
pop
ljmp
inc
nop
fdivl
stc
mov
pushf
push
inc
dec
lods
imul
push
fidivrs
push
sbb
cmp
mov
add
cltd
add
aam
push
lods
stos
xchg
adc
in
mov
in
movsl
and
rol
cmp
fstpt
inc
mov
add
cmpsb
loop
mov
test
cmp
test
hlt
xchg
lock
mov
shll
insb
mov
icebp
mov
or
mov
jg
dec
cmp
call
add
rorl
rcrl
pop
inc
sub
aam
jmp
insl
mov
xor
adc
mov
sub
lret
idivb
bnd
out
outsl
xchg
push
movsb
aad
and
popa
push
mov
inc
ja
stc
bound
xor
xor
repnz
pop
mov
add
add
iret
mov
mov
dec
sbb
push
jae
push
or
pushf
loopne
adc
dec
in
es
lock
lcall
ficoml
inc
push
ljmp
into
cmpsl
and
pop
mov
mov
cmp
mov
xorl
inc
xchg
xchg
subb
jmp
and
mov
pop
mov
cmc
lock
xchg
pop
mov
jo
std
les
mov
fsubrl
ds
sbb
sti
test
sub
cmc
lret
mov
push
test
ds
rcr
pop
jb
movsb
scas
xlat
add
sahf
pusha
dec
leave
loope
in
hlt
sarb
mov
push
loopne
nop
and
push
int
jl
divl
sbb
stos
test
mov
and
jmp
insb
lahf
push
pop
inc
pop
data16
jl
mov
iret
roll
sbb
adc
inc
jle
lock
faddl
lahf
in
cmpsl
push
into
cwtl
out
xor
mov
daa
cmp
outsb
lret
mov
icebp
lret
outsl
mov
jmp
push
loop
push
push
fistps
lret
movsl
mov
xchg
lret
and
lret
rorl
push
pop
lret
dec
jl
inc
ret
push
data16
push
mov
lret
call
xchg
rcr
stos
mov
in
stos
adc
xchg
rep
sbb
mov
ja
and
movb
and
or
sti
scas
mov
mov
mov
call
adc
mov
rol
jg
push
xor
test
cld
cld
xchg
dec
mov
dec
dec
jle
das
xor
cmp
mov
pop
inc
pop
jle
dec
mov
or
push
decb
xchg
dec
cli
pop
mov
push
mov
add
jnp
nop
bsr
roll
outsl
adc
cmp
cmp
pop
or
or
dec
add
aad
ja
push
fs
xor
mov
dec
xchg
xor
outsl
aaa
pop
insb
das
mov
xchg
xor
xor
push
cmpsl
cld
bound
dec
or
ficompl
cmp
or
cmc
lods
scas
mov
mov
cmp
xchg
imul
push
mov
sub
mov
jns
add
pusha
jne
xor
pop
imul
outsb
sbbb
pop
out
or
stos
mov
packuswb
bound
test
sub
out
mov
arpl
lret
mov
shl
jo
sub
out
js
mov
outsl
sbb
bound
or
mov
mov
xlat
lcall
es
mov
in
arpl
aas
cltd
pop
mov
jno
out
and
push
pop
hlt
enter
hlt
mov
dec
add
sbb
mov
xchg
cmp
rorb
loopne
ss
or
inc
inc
fs
or
ret
jno
push
adc
orl
jae,pn
scas
ja
js
inc
sbb
ds
xor
sub
cwtl
rol
mov
clc
mov
jp
in
xor
xchg
cltd
xchg
mov
mov
jg
test
pop
add
lahf
test
add
lret
out
jmp
mov
shll
add
jg
push
ret
xor
mov
or
int3
out
jno
arpl
pop
rcll
jg
pop
or
mov
fs
lahf
loop
jno
insb
adc
pop
cmp
sub
ret
mov
mov
ljmp
mov
mov
jb
dec
ja
or
sahf
xchg
shlb
nop
and
mov
jns
pushf
insb
sbb
cld
cmpsl
pop
rorb
jmp
inc
pop
inc
mov
adc
bound
in
mov
jmp
jbe
mov
call
mov
mov
lcall
insl
jnp
fnstcw
pop
xor
pop
adc
xchg
imul
aam
div
insb
xchg
iret
js
test
daa
and
lret
leave
ret
cmp
xchg
add
lods
jp
push
mov
or
inc
je
out
mov
imul
sub
push
test
mov
imul
loop
in
cmc
cli
xor
push
scas
dec
dec
daa
fistpll
std
aad
jns
loope
xor
pop
test
mov
mov
mov
lahf
or
push
sbb
sbb
test
insl
outsb
sti
leave
test
push
push
imul
cltd
push
popf
adc
mov
rcll
popa
jmp
in
fisttpl
push
icebp
adc
xlat
jmp
aas
aas
test
jge
xor
fbld
mov
test
mov
mov
out
mov
das
cs
sub
dec
dec
add
out
mov
loope
sbb
lcall
ds
add
xor
lds
pop
rcrl
xor
xor
repz
leave
out
jb
xor
cld
sbb
sub
sbb
repz
push
mov
sbb
push
mov
leave
ret
mov
mov
sbb
mov
cmpsl
wrmsr
dec
adc
inc
aam
adc
push
daa
call
dec
scas
add
mov
dec
rorb
test
pop
sbb
pop
mov
sub
pop
sbb
dec
push
ds
fnstcw
jno
test
sub
xor
xor
mov
shrl
add
and
out
jne
mov
js
add
sbb
jl
loopne
lret
sbb
in
lea
sbb
or
or
or
insl
sub
aaa
inc
mov
pop
hlt
rol
jge
and
sub
inc
mov
xchg
rclb
cltd
cmp
into
jae
insb
iret
in
adc
mov
adc
ljmp
mov
loopne
test
jecxz
imul
xchg
add
aaa
push
mov
mov
xchg
in
mov
fcmove
xchg
xchg
and
jge
lcall
inc
loop
aad
scas
test
aaa
sub
jb
jae
movsb
mov
mov
sahf
ds
test
daa
jo
pop
outsl
cltd
shlb
add
mov
push
adc
mov
lods
cmp
mov
adc
cld
loop
inc
lea
cmpsl
repnz
lahf
mov
mov
mov
clc
push
clc
pop
jns
xlat
sbb
pop
mov
pop
add
adc
adc
xor
lahf
add
fstp
mov
addr16
iret
push
push
or
dec
dec
dec
cmp
sar
js
cmp
push
andl
jge
pop
adc
and
push
push
leave
js
aaa
int3
add
test
mov
mov
jns
outsb
push
adc
cmp
push
pusha
out
sbb
fidivl
jae
dec
jb
mov
and
mov
add
cmp
pop
sub
fldenv
cltd
insl
cmpsl
xchg
mov
xchg
add
incl
or
sub
cmp
xchg
dec
pop
push
out
sbbl
lret
movsb
popf
inc
jae
jb
push
and
loopne
mov
adc
and
push
sub
xor
cmp
push
xchg
mov
pop
fdiv
dec
insb
fmul
hlt
fildll
mov
inc
in
jg
jbe
ljmp
push
sbb
ja
pop
mov
insb
dec
sbb
fnstsw
dec
push
push
iret
test
sbb
xchg
mov
repz
pushf
push
cmp
xchg
pop
ficoml
repnz
push
sbb
sbb
testl
cmpsb
int3
dec
jnp
lret
and
inc
repnz
add
mov
cmc
sub
lea
inc
pop
sub
jg
sub
xor
sub
or
jne
rcrb
push
xchg
mov
dec
mov
in
mov
mov
ror
jae
fcmove
stos
cwtl
orb
test
out
jbe
mov
inc
sar
jnp
sbb
test
fwait
xchg
ret
orl
push
stos
mov
sbb
add
subb
xor
imulb
mov
mov
lea
popf
cmp
lods
arpl
push
mov
fwait
xchg
rcrb
mov
sub
stos
cmp
cmp
scas
nop
or
dec
insl
fdivr
sbb
mov
cmp
dec
jecxz
js
sbb
shlb
cmp
jecxz
in
pop
rcrl
ja
xlat
or
cli
jbe
sbb
mov
jecxz
in
dec
xchg
cmpl
decb
scas
clc
scas
mov
ret
jo
push
or
punpckhbw
inc
lret
jge
inc
in
outsl
dec
cmp
and
pop
jo
pop
jae
xchg
jae
out
insl
push
stos
rcrb
mov
mov
outsl
shlb
lea
fsubs
add
cmpsl
imulb
xor
jl
push
shl
out
push
mov
loope
mov
sub
mov
icebp
push
adc
sub
sbb
push
lret
ja
subl
jo
inc
cmpsb
xchg
xor
mov
mov
jnp
and
cmp
cmp
push
jo
shl
inc
push
testb
push
inc
lahf
iret
pop
repnz
shll
fisubrl
inc
sbb
mov
push
mov
cmp
xchg
or
add
cltd
test
mov
jo
push
icebp
subb
iret
test
xchg
insb
repnz
adc
fwait
jmp
cmp
or
mov
lods
fnstsw
dec
add
and
lods
xor
inc
or
in
mov
inc
ret
sbb
shl
loop
in
ficoms
inc
inc
mov
push
mov
lret
cmp
decb
xchg
mov
xchg
lret
loop
cmp
xchg
cmpsl
mov
ret
xor
and
sbb
pop
sub
not
pop
mov
cmp
test
pop
rorl
test
jns
xor
mov
addr16
repnz
adcl
aaa
and
push
add
and
pop
mov
aad
mov
test
mov
ret
sahf
cmp
push
sti
es
or
push
xchg
push
rcll
xor
lret
inc
mov
icebp
insl
jo
mov
add
dec
psubb
lcall
sub
jne
push
lcall
sbbl
mov
jg
movsb
push
rcll
inc
test
jnp
dec
or
xor
cmp
jge
cmp
out
jnp
add
sbb
adc
xchg
jns
or
rclb
mov
xchg
mov
insb
mov
add
xchg
dec
fnsave
mov
mov
push
xor
aad
jmp
popa
bound
imul
out
sub
outsb
add
test
test
pop
lret
inc
mov
aaa
popf
lods
jns
sbb
dec
jbe
cmpsb
jo
ffree
jle
insb
xchg
add
repz
jge
push
inc
xor
inc
xchg
push
imul
dec
pop
xor
jnp
lods
xor
lods
sub
shrl
dec
mov
mov
add
push
mov
fidivs
pop
mov
rcll
inc
sbb
mov
jbe
subb
aaa
mov
gs
mov
ds
insb
scas
ss
leave
xor
iret
out
and
movsl
xor
mov
pop
or
add
dec
push
test
shrb
fcoml
jns
int3
cli
les
jle
inc
pusha
imul
in
mov
inc
xchg
dec
or
or
adc
jbe
adc
push
aas
and
and
loopne
xchg
lcall
int
punpckhbw
clc
xlat
push
jg
andl
and
inc
inc
push
subb
out
mov
shl
mov
push
jb
fptan
inc
repz
inc
aas
ss
jle
roll
mov
xchg
icebp
mov
adc
push
push
ret
pushf
cwtl
push
cld
into
push
mov
jp
jno
insb
aas
out
movl
sbb
lcall
pop
stos
push
xor
movsl
mov
fdivr
dec
insb
cmp
cld
ss
ljmp
cmc
pop
mov
lahf
pop
push
mov
jnp
pushf
test
mov
or
frstor
xchg
xchg
jne
ja
xor
mov
dec
inc
repnz
mov
ret
mov
sbb
test
int3
pushf
into
cli
cmp
leave
sahf
sbb
sub
cs
jp
xchg
enter
mov
movsl
cmpsl
addr16
repnz
mov
fstpl
mov
lock
jne
push
mov
pop
stos
out
or
stos
call
jl
in
xchg
fnstcw
out
cmpsl
scas
popa
lret
adc
push
lahf
std
and
adc
ja
into
mov
sub
aam
aaa
out
lcall
testb
add
loop
data16
scas
and
cmp
add
fsubs
pop
mov
icebp
push
out
sbbb
add
repz
and
shll
push
js
fwait
dec
vucomisd
fs
mov
mov
inc
mov
add
aam
pushf
inc
divl
inc
imul
jne
je
jecxz
cmp
cmpb
mov
pop
jnp
dec
cs
inc
ud0
or
sub
dec
outsl
pop
iret
insb
cld
ret
cwtl
xor
adc
in
or
movsl
cltd
faddl
adc
inc
adc
push
and
daa
sbb
adc
cwtl
sbb
push
repz
cmp
int
hlt
sub
jne
fbld
stc
xchg
xorl
popa
outsb
xchg
faddl
cltd
adc
add
inc
jo
mov
test
jmp
leave
stos
fiadds
out
pop
shl
imul
cli
adc
adc
push
sarb
fnstcw
and
push
rorb
add
lods
sbb
fstps
ror
jge
mov
dec
jne
lods
adc
xchg
imul
cli
clc
pop
push
iret
or
cli
jmp
push
and
add
jmp
mov
inc
stc
xchg
mov
push
inc
sub
je
push
mov
pop
repnz
inc
fstpl
jbe
test
pushl
add
xchg
sbb
pop
and
inc
and
jecxz
push
scas
sub
in
and
daa
subb
test
fwait
testb
mov
cmp
nop
mov
loopne
and
lcall
mov
mov
divl
shrb
xchg
push
das
ja
cmp
mov
subb
dec
cwtl
mov
dec
lret
pop
push
add
sarb
iret
lods
in
inc
mov
or
icebp
mov
aad
shl
pop
xchg
mov
xor
in
cmc
jne
js
rcll
add
std
insl
xchg
imul
lock
stos
pop
scas
jae
lret
ds
test
stos
fistpl
and
loopne
clc
cmc
push
mov
fistl
mov
and
es
xchg
lea
cli
dec
test
fisubrl
mov
xchg
in
or
movsl
xchg
aaa
cli
outsl
add
pushf
out
jbe
imul
xchg
or
fucomi
rorl
mov
pop
jge
mov
ror
cwtl
ret
fstsw
out
xchg
inc
dec
stos
out
inc
xor
fidivs
fcompl
ds
jge
fmulp
subb
pop
inc
mov
cltd
pop
pop
or
lds
repnz
push
daa
stos
dec
xchg
xchg
movl
xchg
pop
nop
fwait
mov
sub
add
aad
sbb
jnp
test
or
out
mov
aaa
dec
pop
in
add
jmp
loopne
mov
mov
lods
sbb
mov
jae
lea
lret
into
jl
mov
aad
pop
in
in
mov
adc
rcrl
mov
shrl
iret
repz
out
pop
xchg
sub
pop
mov
jns
cmp
jg
out
je
xorb
mov
inc
das
jge
xor
icebp
ss
inc
fsub
pop
das
out
out
insb
in
or
pop
cmp
loop
xchg
inc
fwait
jae
jnp
add
rorb
pop
or
dec
xchg
jo
push
xor
jg
divl
repnz
cld
in
or
pop
shl
sub
aaa
jge
addr16
cmp
and
icebp
shl
test
and
sub
aam
push
push
test
and
aad
movsb
divb
sbb
mov
pop
mov
sbb
cltd
popa
rcrb
dec
pop
inc
fwait
inc
lods
aas
test
mov
adc
shl
sbb
adc
mov
sbb
in
push
dec
jecxz
out
mov
mov
cmp
adc
icebp
fldt
dec
sub
out
je
sti
sbbb
cli
sub
push
jnp
add
bound
dec
push
ret
bound
xchg
push
int
insl
jmp
lret
mov
push
in
push
or
mov
icebp
cmpsb
pop
testl
loope
push
out
pop
mov
add
stc
mov
add
mov
out
sub
leave
movsb
dec
push
or
sub
loope
clc
repnz
inc
or
mov
lahf
jnp
xor
dec
pcmpgtb
cmp
in
pop
js
adc
adc
xchg
cli
jae
cs
cmp
insl
aad
push
in
cmpsb
add
hlt
adc
or
icebp
jle
fxch
mov
jp
and
push
aam
dec
ss
push
cld
xor
xchg
mov
out
jmp
lret
adc
sub
lret
mov
mov
jl
mov
lock
adc
adc
xor
push
mov
bound
jmp
jno
cmp
mov
sti
lock
xor
mov
and
mov
shl
cmpb
sub
xchg
jp
imul
ss
mov
mov
sbb
lret
pop
push
test
sbb
int
xchg
sbb
aas
mov
es
ss
rcrb
mov
stos
js
out
rcll
popl
or
xchg
xchg
fsub
adc
lcall
sub
pop
hlt
int3
imul
push
aaa
add
push
and
addb
sbb
addr16
or
push
bnd
xlat
movsb
mov
sub
rorl
int
mov
adc
push
stos
loope
jmp
push
mov
call
dec
cmp
cmc
stos
xor
arpl
mov
push
subl
leave
ja
orb
jo
sbb
inc
adc
lahf
mov
cmpsl
test
popl
fldz
mov
adc
idivl
cs
jo
hlt
aaa
aaa
xchg
imul
das
test
or
and
pop
rcll
jmp
push
jmp
xor
mov
idivb
negb
fstl
leave
sub
mov
and
nop
pushf
popf
adc
mov
fcoml
sbb
inc
pop
adc
fs
je
mov
push
sti
add
sbb
xchg
repnz
lret
xor
xchg
cmpsl
int
push
adc
sbb
das
shll
ret
scas
or
xchg
sbb
adc
pop
hlt
push
or
dec
cli
std
stc
fs
mov
mov
xchg
or
fcompl
repnz
insb
jbe
jne
fstps
cmp
xchg
mov
aaa
cmp
lods
cltd
mov
mov
xorl
hlt
mov
or
mov
xor
mov
push
xor
adc
or
aas
pop
into
into
push
pop
add
xor
add
and
fwait
pop
cli
mov
call
sbb
mov
xchg
clc
rcll
mov
scas
pop
and
sub
jge
dec
fistps
cmp
lea
mov
repz
add
pop
sbb
xorl
std
in
pop
mov
pusha
outsb
inc
test
dec
cwtl
leave
mov
sbb
mov
lret
push
das
or
jge
aas
or
push
bound
inc
popa
xor
xor
outsb
sbb
mov
mov
mov
jno
ds
mov
cmp
pop
xchg
mov
push
lds
ja
xor
mov
jge
movsl
jae
cs
jne
or
mov
divb
add
and
xchg
sbbb
ljmp
sbb
dec
lret
xor
sti
pop
inc
add
int
jo
push
mulb
aaa
dec
sub
xor
sarb
filds
xchg
int
mov
scas
fmull
push
adc
int
in
loop
in
inc
gs
test
add
dec
jmp
loop
xor
dec
and
lcall
dec
or
popa
ficoml
outsl
je
and
repnz
add
adc
jle
aad
sbb
lods
sbb
cmp
inc
pop
loope
in
out
mov
dec
jl
outsb
aaa
lret
ss
mov
cmp
inc
nop
inc
push
jo
aam
rcr
xor
shrl
adc
mov
fiadds
inc
icebp
xchg
dec
enter
lahf
pushf
inc
jmp
lahf
mov
add
cld
cwtl
jge
loopw
push
pop
in
shlb
outsb
mov
cltd
dec
xchg
inc
lods
push
pop
inc
out
cmpsl
sbb
cli
insl
das
xor
sbb
cmp
fimuls
adc
mov
shll
cmp
mov
femms
idiv
and
in
fdivl
js
testl
xchg
push
xchg
sub
lods
adc
aam
icebp
cmp
sub
sub
loop
mov
popa
cs
jge
jo
dec
js
dec
or
xor
mov
int3
mov
push
xchg
cmp
pop
in
popf
pop
les
xchg
xchg
aas
sbb
push
jns
fstpt
push
repz
push
mov
sbb
stos
lret
fadds
pop
lock
xor
pop
lods
mov
inc
and
jecxz
dec
push
inc
fwait
dec
sub
push
adc
jmp
and
flds
fwait
mov
inc
aam
cli
movsb
push
push
aas
das
out
notb
ret
xor
in
shll
push
loope
jbe
mov
mov
rclb
sub
sbb
loopne
dec
dec
xchg
ret
jle
lahf
repnz
testl
call
sub
lcall
xchg
pop
shlb
fnstsw
xor
test
fsubr
stos
push
jecxz
test
fninit
ret
mov
out
filds
cmp
jno
enter
mov
jle
inc
mov
iret
sbb
mov
aad
jne
pop
loope
divb
or
test
loopne
insb
mov
mov
xor
mov
imul
test
iret
dec
std
jmp
cmpsb
adc
and
popa
sarl
add
push
xor
add
inc
std
fildl
lock
mov
imul
xchg
cmp
dec
inc
xor
movsl
stos
push
clc
inc
push
and
imul
lcall
jmp
imul
es
inc
pop
ja
add
sbb
pusha
push
cmpl
stc
xor
pop
push
xchg
sbb
sub
int
int
movsl
lret
fdivs
fdiv
shlb
clc
dec
lock
xchg
pushf
xchg
mov
push
fcomps
aas
inc
cli
add
decb
cmp
arpl
lods
mov
pop
daa
jnp
dec
clc
je
adc
sbb
push
imul
mov
hlt
je
sub
in
xchg
push
mov
adc
mov
fdiv
mov
cwtl
inc
jbe
mov
cmp
loop
inc
test
xchg
push
mov
ja
inc
sub
or
xor
xchg
jle
in
inc
inc
dec
push
std
xchg
cld
js
pop
in
faddl
mov
stos
xchg
adc
stc
mov
xchg
mov
js
xchg
rcrl
jg
jbe
ficompl
dec
sub
pushf
aam
mov
xchg
mov
inc
cld
scas
std
in
scas
jmp
mov
cwtl
imul
scas
roll
push
xchg
cld
rcl
js
sbb
inc
mov
jle
out
lods
mov
xchg
movsb
pop
or
dec
shr
cmc
inc
in
cmpsb
mov
mov
or
test
popf
mov
xchg
loop
and
in
push
xlat
test
sbb
lahf
jbe
das
aaa
incl
fwait
jg
out
push
mov
xlat
shr
jb
nop
cmpsb
jle
xchg
repnz
pop
fsubrs
mov
daa
adc
push
mov
and
adc
pop
cltd
lret
sub
pop
sbb
sub
lods
mov
cmp
push
xchg
mov
bound
in
daa
and
mov
cmpsl
lahf
js
dec
pop
and
or
jbe
dec
repz
dec
je
or
pop
fildll
stos
xor
mov
divl
cmpsl
push
mov
and
jnp
out
lds
sbb
pop
shlb
enter
sbb
pop
gs
push
sbb
add
xlat
outsl
and
adc
sub
xchg
icebp
call
subb
fimuls
call
xchg
in
subl
xor
int3
popa
rolb
pop
sub
je
add
sbb
add
cli
pop
lcall
aaa
mov
fsubl
fs
push
lods
adc
call
push
pop
fsubp
adc
cmp
push
lea
addr16
addr16
in
into
mov
dec
and
lcall
mov
imul
jmp
xchg
and
xor
pop
mov
mov
cmp
jae
lods
mov
cld
rcll
outsb
ja
in
cmpsb
in
sbb
pop
leave
fistpll
ret
add
jns
sub
jmp
add
int
repnz
sub
outsb
mov
pop
mov
jl
scas
add
in
fistpl
push
jmp
cli
jno
lods
rcl
add
jmp
and
call
mov
and
mov
add
xor
xor
rcll
jno
jae
push
mov
inc
lret
in
loopw
outsb
movsl
ror
scas
loop
popf
dec
test
sub
clc
add
idiv
ja
push
add
ret
jecxz
mov
pop
not
rclb
movsl
pop
push
add
jmp
jp
jle,pt
xor
mov
mov
cmp
dec
or
cmc
xor
outsb
fcoml
pop
jg
imull
mov
cmp
mov
pop
stos
repnz
lahf
dec
roll
aad
in
xor
sbb
xor
js
int
and
stos
push
test
mov
jb
mov
mov
aas
inc
add
push
cmpsl
cmpsb
pop
adc
insl
xor
jo
loop
nopl
insl
push
and
lock
mov
popf
imul
movsl
adc
loop
lret
adc
jge
lds
sbb
outsl
mov
mov
cs
inc
ja
jp
xchg
xlat
cmp
pop
xor
shr
popf
orb
lods
jne
jae
aad
stc
into
pop
shrb
out
scas
mov
test
pop
daa
add
dec
inc
je
cmp
and
cmp
mov
out
cli
fiadds
rcrl
insl
in
or
push
pushf
add
stc
or
push
cmpsl
insl
out
cltd
lea
test
f2xm1
rcl
leave
into
dec
sti
mov
dec
add
push
add
mov
into
sbbb
mov
aaa
sbb
or
std
loop
inc
sbb
cmp
mov
pop
xchg
in
jge
jmp
mov
arpl
push
xor
test
mov
ror
and
mov
jg
fsubs
mov
andl
mov
xchg
ficoms
jmp
ja
mov
jmp
pop
pop
sbb
or
outsl
orb
in
and
jecxz
xlat
mov
in
popa
jne
sbb
inc
aas
mov
dec
in
ljmp
imul
dec
hlt
scas
stos
adc
add
out
pop
and
gs
lods
mov
fidivrs
int
insl
adc
xor
mov
iret
test
fimull
inc
pop
xor
cmp
xor
lret
fwait
mov
xor
mov
sbb
and
rolb
ret
pop
xchg
loope
test
push
mov
jg
data16
or
mov
std
adcb
lods
xchg
cld
daa
inc
mov
sbb
add
dec
fs
cmpsl
call
inc
in
in
jno
fimull
push
xchg
adc
or
out
dec
inc
push
cmp
xchg
push
inc
mov
ja
repnz
aas
mov
punpckhdq
pushf
dec
sbb
cltd
mov
xchg
jecxz
dec
dec
mov
cld
xchg
lods
je
loope
ss
pop
ljmp
pushf
xor
and
addr16
shr
cmc
push
mov
imul
inc
fldt
andl
popa
push
rcrb
sahf
lock
in
lahf
hlt
push
cwtl
sbb
jp
in
and
adc
add
lock
in
outsb
fcoml
hlt
test
sbb
pop
ljmp
mov
test
fiadds
pop
enter
mov
and
push
movsb
insl
cwtl
fwait
es
enter
push
jp
jnp
iret
sahf
or
adc
pop
dec
ret
lret
lret
push
adc
sub
andl
hlt
push
iret
xchg
int3
push
cmc
jns
mov
ret
cwtl
into
cs
shll
push
in
je
addb
add
movb
sbb
inc
jmp
push
xchg
popf
mov
sbb
fs
bound
or
or
xchg
les
mov
adc
pop
xlat
mov
xor
sbb
cmc
push
shl
int3
sahf
xchg
rcll
scas
pop
addl
add
and
xor
lea
out
push
in
cmpsb
mov
jl
mov
push
xor
pop
mov
nop
mov
lret
mov
lret
imull
fcomps
xchg
xchg
push
mov
mov
push
out
bnd
push
int
and
enter
pop
les
mov
or
add
mov
jbe
je
jb
mov
jno
insl
insb
pop
pop
pop
iret
pop
dec
add
adc
fisubl
sbbb
inc
mov
out
fxch
mov
xor
inc
or
aad
dec
out
gs
mov
js
jne
pop
mov
fs
addb
aas
test
cmc
push
mov
sbb
shl
cmc
xchg
lea
cwtl
out
cltd
lcall
loopne
mov
sub
dec
mov
pop
dec
or
testb
stos
lods
pop
and
push
test
ss
ret
fcomps
sbb
cld
fs
fcmovnu
xchg
sbb
mov
or
fisttpl
inc
call
jbe
jl
ja
aaa
movsl
mov
repz
jnp
xchg
dec
outsl
jno
jae
or
ror
xchg
add
rcrl
inc
lea
adc
push
xor
fdivrp
cmp
test
dec
test
fs
test
out
sbb
loope
and
xor
ja
lods
ret
mov
scas
mov
xor
loope
inc
xchg
sbb
addl
xor
push
repz
mov
xor
cmp
mov
jge
jp
sbb
mov
out
and
in
sub
enter
or
cwtl
pop
jecxz
sahf
repz
sbb
fldt
dec
mov
mov
movsb
and
nop
xor
lods
xchg
lahf
pop
adc
pop
add
in
mov
mov
lods
loope
ret
push
out
pusha
pop
hlt
shll
in
pop
sahf
testl
sbb
inc
mov
xchg
mov
out
jmp
jl
pushf
insb
adc
and
cmp
pop
inc
xchg
adc
aas
dec
pop
inc
shll
dec
fstpl
shl
mov
cmpsb
pop
mov
enter
loop
stos
mov
inc
add
xorl
fsubl
out
xchg
mov
leave
repnz
ds
wrmsr
jne
xchg
lods
sbb
pop
testl
mov
iret
sti
jnp
js
lcall
mov
fcompl
mov
xchg
mov
imul
leave
pusha
shll
imul
mov
pop
push
adcl
sbb
and
or
jg
xchg
jno
pushf
aas
cli
sbb
inc
mov
mov
mov
andb
fcoml
insb
das
jo
add
adc
aad
mov
test
jne
test
bound
adc
mov
loopne
cmpsb
lahf
bswap
and
push
addr16
or
xor
add
mov
xchg
outsb
xchg
xchg
pop
adc
cwtl
cmp
fbld
sub
xor
cmpsl
es
add
mov
xchg
push
rcll
aad
sbb
push
push
jb
lea
or
add
jle
and
pushf
dec
stos
std
cmp
into
xchg
das
and
jg
in
pop
adc
pop
gs
lcall
push
aaa
test
aaa
into
inc
mov
dec
scas
cmp
xchg
push
shlb
sbb
lods
mov
scas
inc
call
cmp
adc
adc
out
pop
xchg
mov
sbb
movsl
or
shrl
lcall
jmp
pop
inc
ja
cwtl
push
fdivs
aam
lcall
ss
shl
lock
push
xchg
adc
and
scas
vmovntdq
push
inc
pop
lret
pop
addr16
inc
or
inc
mov
pop
ficomps
xlat
mov
test
pop
xor
ljmp
dec
jbe
not
call
mov
and
push
pop
or
dec
fmul
mov
inc
repz
jg
push
imul
mov
nop
jle
lods
adc
sub
jo
cmp
mov
dec
insb
mov
push
fildl
popa
enter
mov
mov
es
aaa
sti
xor
mov
and
icebp
jle
xor
popa
mov
lods
test
xchg
mov
fildl
or
test
sub
push
arpl
pop
sub
loop
je
dec
or
push
pop
xchg
add
inc
lds
jb
sub
cmp
jge
fisubl
dec
adc
pop
out
lea
pushf
adc
jecxz
xlat
jo
sub
mov
shl
call
lahf
cmpsl
les
faddp
xchg
insl
jno
imul
fs
jge
mov
fadd
jmp
jo
es
xchg
sbb
xor
divb
ja
xor
in
mov
jne
vmovss
js
loop
jne
hlt
test
daa
add
mov
enter
lods
adc
stos
stos
sbb
int
xor
sub
adc
mov
xchg
mov
sbbl
outsl
pusha
xchg
lods
push
test
out
outsl
test
lods
icebp
mov
add
add
or
cmc
insl
inc
pop
pop
loopne
sub
ljmp
loope
mov
loope
outsb
pop
mov
xor
imulb
xor
ja
cli
mov
stos
or
mov
push
jns
ja
push
cmp
pop
add
jg
pop
pop
dec
data16
rcr
out
popa
and
test
jb
or
call
iret
xor
cwtl
loop
aas
dec
inc
ljmp
inc
cmp
xor
sbb
imul
outsl
ret
jecxz
sbb
pop
fdivrp
scas
test
xor
icebp
pop
xorb
jmp
jle
push
mov
xchg
sbbb
pop
xor
imul
mov
add
xchg
jnp
dec
aad
inc
sbb
inc
mov
mov
push
fs
movsb
arpl
mov
call
test
movb
push
repz
dec
and
mov
or
sbb
in
dec
xor
lea
pop
push
xchg
ja
mov
adcl
mov
fsubp
dec
rcrl
das
mov
mov
or
loope
jmp
sbb
nop
sub
add
orps
and
lods
sbb
decl
sub
and
or
jb
and
rcrb
cld
out
movsl
inc
nop
mov
jmp
push
lods
adcl
mov
fldenv
es
push
cmp
movb
iret
xor
sub
scas
cmp
lea
into
lods
mov
and
fsub
ja
push
ds
cwtl
fwait
xor
inc
sarl
cmp
je
cmc
mov
data16
inc
xchg
cmp
xchg
cld
jo
jp
adc
push
test
rorl
pusha
jne
jno
aaa
ja
mov
jae
stos
jne
xor
inc
and
hlt
hlt
jg
nop
pop
fistps
cli
stos
push
mov
aas
rcrb
xor
push
fisubrs
and
lea
loope
pop
in
or
push
lret
sbb
jne
imul
outsb
dec
push
adc
mov
repnz
and
inc
mov
nop
cmpsb
or
and
inc
lret
sbb
sahf
loope
pop
push
mov
cmc
push
mov
xchg
int
adc
scas
inc
dec
cmp
jge
fsts
mov
mov
das
cs
dec
mov
mov
cmp
mov
es
lock
and
insb
pop
inc
jmp
jo
std
mov
xchg
iret
das
cltd
fiadds
cmpsl
jns
cwtl
xor
fidivrl
int3
popf
fistpl
inc
adc
pop
cld
mov
imul
mov
jne
push
sti
daa
data16
pop
add
es
sbb
clc
mov
int3
add
mov
js
sbb
jo
addr16
push
mov
lds
jns
hlt
mov
lods
dec
les
mov
xchg
cltd
jae
push
lcall
jp
insl
xor
xchg
adc
mov
cmovs
je
test
sbb
aaa
xorl
add
add
mov
testb
dec
pop
mov
ja
int3
jge
sbb
or
sbb
jno
cld
aas
decl
mov
lods
inc
dec
sbb
jae
clc
incb
ret
sti
insb
add
sbb
push
add
out
out
cmp
push
clc
out
lcall
repnz
push
clc
dec
cli
pop
mov
mov
iret
pop
or
loop
notl
adc
adc
xchg
push
test
xor
and
mov
aad
xorb
call
lds
test
sub
mov
and
gs
mov
sub
sub
outsl
add
or
xor
into
jne
shlb
insb
jge
roll
in
gs
in
inc
mov
mov
or
cmp
fcmovnb
test
sbb
sbb
cli
lret
loope
mov
pop
insb
or
iret
pop
decl
fldenv
lcall
add
movsb
add
repnz
test
rcll
xchg
mov
loope
pop
push
sbb
jle
test
inc
add
mov
jnp
test
sbb
mov
jl
pop
pop
testl
ljmp
or
loop
xchg
inc
ja
xchg
adc
mov
adc
inc
rolb
mov
cmp
mov
test
subl
sbb
les
iret
or
mull
xchg
fdivr
and
jp
xchg
add
sub
scas
cmpsb
mov
mov
mov
int3
xor
pusha
and
sbb
add
jno
jns
sub
add
loop
insl
xor
test
mov
lods
and
loope
fiaddl
push
xor
and
sub
fsubs
lcall
sbb
xchg
cs
hlt
add
add
dec
mov
mov
sbb
push
jecxz
sub
dec
lcall
add
fisubrs
mov
mov
aad
dec
stos
cmp
inc
hlt
std
sahf
andb
xor
lds
mov
data16
xor
testl
clc
xor
dec
dec
out
cmpsb
lahf
mov
lds
mov
andb
outsl
lret
adc
jl
sbb
scas
sub
push
pop
cmp
cmp
mov
setg
mov
fisttps
cmc
out
jp
popf
leave
sub
fcmovbe
aam
inc
pop
hlt
loopne
sbbb
fmuls
rclb
cmpsb
mov
hlt
ret
push
xchg
and
jae
xchg
lea
and
pusha
push
add
cmp
adc
das
add
mov
lock
cwtl
pop
adc
jb
sbb
stc
mov
jmp
add
fdivl
imul
cmpsb
mov
inc
cwtl
aas
mov
xlat
ret
mov
dec
lods
fiadds
sbb
call
xchg
lret
xchg
cmpsl
push
es
shl
lds
sub
adc
fstp
fimuls
stos
mov
adc
push
data16
enter
ljmp
mov
je
jl
cmp
iret
scas
nop
cmp
insb
or
push
or
scas
mov
fucomi
in
pushf
cltd
and
test
dec
leave
ljmp
xchg
mov
nop
orb
cwtl
imul
cli
dec
aaa
mov
int
and
mov
out
sbb
adc
dec
lods
mov
push
mov
and
cmp
js
xchg
dec
lret
insl
sbb
ljmp
stc
into
call
mov
push
jle
push
inc
push
xchg
je
in
ror
xchg
jns
lret
jle
cmp
pop
pop
jbe
pop
xchg
xor
in
cld
xlat
lea
sbb
xlat
pop
push
test
sub
add
mov
punpckldq
dec
lock
cmpl
pop
xchg
push
test
cmpsl
mov
cmpl
or
sbb
lret
inc
add
pushf
stos
sbb
xchg
xor
fs
in
insb
mov
scas
clc
push
shll
mov
cmp
mov
stos
sbb
mov
xchg
cmp
cmp
sub
xchg
jp
scas
xchg
xor
shlb
xchg
std
hlt
movsb
cmp
mov
stos
hlt
ret
cmpsl
xchg
cs
mov
xor
inc
xchg
inc
in
jne
adc
mov
jb
mov
das
sub
mov
lcall
or
aaa
mov
stos
and
ret
mov
mov
xchg
aad
arpl
out
jo
cmpl
mov
int
sbb
lods
dec
jp
orb
lods
popf
xor
mov
je
shll
jnp
cmp
mov
je
jb
push
stos
je
fsubs
mov
dec
inc
cmpsb
sbb
jge
into
das
pushf
jmp
or
lcall
hlt
fldl
jge
das
stc
push
aam
in
daa
mov
dec
pop
xlat
inc
push
shrb
mov
pop
insb
add
cs
bound
in
push
jge
xchg
sub
outsl
dec
adc
inc
cmpsb
pop
hlt
cmpsl
cmpsb
xchg
xchg
ror
insl
jmp
nop
pusha
inc
sbb
mov
mov
mov
in
les
mov
xor
xchg
push
xor
test
sahf
aad
dec
imul
je
mov
outsb
dec
jno
sub
in
cli
test
jbe
jno
lods
fcomip
in
ss
adc
hlt
xchg
dec
sti
and
ja
pop
scas
rorb
sub
lahf
jmp
push
dec
xlat
cli
mov
pop
in
cmpsb
dec
imul
orb
subl
mov
add
lahf
mov
xorl
push
in
mov
add
roll
xchg
rclb
adc
fsts
pushf
scas
int
mov
sahf
addr16
lret
inc
jno
out
cmp
push
sub
adc
jmp
adc
gs
stos
pop
lods
out
dec
fnsave
inc
jb
and
xor
push
cmc
and
aam
fxam
xchg
xor
fdivl
je
insl
add
stc
addr16
jb
dec
cmpsl
sbbl
roll
mov
sbb
ficoms
dec
nop
fstps
fnstenv
addl
test
xor
fs
xor
mov
test
pop
mov
adc
out
cld
aad
fs
fdivrl
xchg
and
mov
cmp
mov
mov
or
sub
inc
cmp
sahf
divl
mov
sbb
xor
lods
mov
pop
insl
lds
dec
testb
pop
sbb
test
cmp
loop
dec
sbb
push
shrl
aaa
nop
dec
jmp
fbld
xor
mov
mov
or
sti
mov
jp
inc
insl
adc
push
push
xchg
and
lea
inc
jbe
roll
cmp
adc
aam
and
dec
xchg
and
inc
and
shl
jecxz
sbbb
jmp
imul
or
leave
cmp
mov
adc
mov
pop
addr16
pop
push
xor
jg
out
push
fisttpll
and
adc
jo
sbb
mov
dec
subb
dec
pushf
sub
jle
add
push
aad
push
xchg
arpl
in
sub
std
xchg
aam
push
shlb
lods
xchg
addl
or
pop
lea
cmp
pop
mov
je
push
aam
pop
mov
std
arpl
dec
std
cs
shlb
repnz
adc
mov
sbb
pop
dec
cmc
das
out
add
mov
pop
mov
sbb
popa
add
test
inc
cmp
push
lret
mov
in
cmp
imul
xor
pop
xchg
out
pop
mov
subl
push
mov
add
ss
stc
inc
les
push
mov
sub
ss
lahf
inc
lret
cwtl
jl
mov
xchg
or
fmul
mov
adcl
dec
ret
cli
sti
inc
cmp
dec
fisubrs
stos
testl
lahf
dec
dec
and
mov
aad
enter
inc
leave
and
scas
shlb
sbb
or
je
out
test
test
push
xor
jno
jge
push
lods
lret
mov
movsl
mov
cld
cli
pop
lods
mov
test
daa
add
jmp
ja
lods
push
xorl
pop
push
cmpsl
xchg
stos
mov
imul
out
lahf
cli
cmp
enter
mov
mov
loope
and
subb
bnd
pop
jl
adc
and
ja,pn
mov
imul
ds
test
mov
imull
test
enter
fcmove
int3
loop
leave
dec
adc
mov
lahf
faddl
pop
sub
dec
hlt
pop
popa
loop
dec
adcb
clc
ljmp
mov
mov
sub
dec
shlb
xor
sub
or
rolb
leave
icebp
rorb
mov
outsb
das
insb
movsl
fdivrs
dec
scas
and
mov
pop
dec
ss
lock
xchg
out
xchg
and
cltd
push
sbb
sub
call
sarl
xor
scas
push
sbb
insl
repz
or
cmp
sub
bound
std
int
or
sbb
out
add
mov
mov
push
pop
jne
jmp
popl
adc
das
push
rorl
call
or
aam
scas
xchg
sbb
cmpsl
xchg
jo
rcrl
out
sbb
xlat
mov
mov
js
push
add
and
bound
out
add
jae
or
sarb
and
ret
js
dec
jge
lcall
aas
daa
fnstenv
sbb
scas
orb
xlat
leave
add
out
int3
or
pop
arpl
adc
xor
pop
add
sbb
xchg
inc
inc
cmp
fnsave
das
shrb
aas
aaa
mov
lods
pop
lret
push
mov
stos
sub
jl
sarl
inc
loopne
jge
sbb
pop
out
dec
das
mov
push
cld
cmp
push
hlt
adc
and
ret
lods
cmpl
mov
push
in
mov
imul
push
cwtl
mov
mov
or
bound
js
mov
jns
out
mov
dec
cmp
jp
sbb
arpl
movd
ret
dec
cwtl
push
cli
pop
xor
xor
loop
cmpl
pop
sbb
mov
lahf
in
mov
push
addb
arpl
and
adc
pop
sbb
lds
lret
fstpt
xchg
movb
push
mov
imul
add
dec
push
arpl
mov
mov
jae
dec
jg
xchg
and
xchg
xchg
add
inc
stos
cmp
in
mov
xor
and
aaa
pop
dec
push
insb
clc
push
xor
fwait
popl
push
and
inc
ljmp
fistpl
int3
mov
push
lret
sub
dec
and
orl
jo
insb
jge
fs
pop
push
xchg
xchg
rclw
cmpsl
divb
or
inc
out
test
jp
lock
xor
loope
mov
addb
or
test
mov
and
pushf
dec
lcall
or
dec
and
mov
xor
push
in
xor
ss
in
lea
aad
push
faddl
xchg
cs
insl
add
push
scas
mov
imul
sbb
icebp
sbb
mov
mov
loopne
inc
decl
push
sub
cltd
outsb
mov
es
out
jmp
add
sub
andl
mov
pop
lds
mov
std
mov
add
xchg
cmpsb
imul
sbb
cltd
mov
lret
sub
bound
jne
test
jbe
arpl
sub
push
aam
pop
leave
loopne
subl
je
aas
xor
pop
aas
mov
lret
gs
loop
cmp
icebp
push
push
inc
mov
add
js
and
inc
lahf
cmp
add
out
cs
sub
fisubrs
cmp
lds
cltd
in
pop
in
jmp
hlt
jae
or
jge
pushf
jmp
popf
mov
jne
mov
pop
sub
cmc
jle
xchg
popf
shll
jnp
repnz
repz
add
stos
inc
mov
in
mov
adc
gs
mov
mov
lock
inc
sahf
pop
repz
mov
mov
sub
rcll
sbb
jp
push
fistps
xchg
pop
mov
inc
mov
sahf
insb
inc
mov
cs
xor
mov
in
sbb
jg
enter
in
sbb
mov
xchg
stc
lahf
cwtl
xchg
adc
jmp
jbe
add
cmovg
adc
push
adc
adc
push
cmpsb
sbb
xchg
add
adc
inc
clc
roll
in
jge
jecxz
mov
adc
out
add
cs
imul
aas
in
in
mov
cmc
repnz
sbb
sbb
xchg
ret
aad
jno
in
imul
cld
cld
outsl
fs
outsl
jno
fstps
add
jg
push
or
ret
stos
iret
imul
outsl
sbb
inc
and
imul
and
sub
inc
inc
lret
mov
xchg
push
fwait
adc
mov
std
mov
and
rolb
push
aam
lret
xor
lea
les
adc
cmp
fimuls
sub
das
xor
aas
daa
inc
mov
xchg
data16
ss
mov
scas
pop
sbb
or
stc
pusha
mov
jecxz
leave
jno
pcmpeqw
inc
aas
jns
mov
clc
mov
insl
inc
mov
or
in
in
inc
lods
rorl
sarl
cmpsl
into
ss
inc
cmp
add
mov
lret
dec
pop
sti
cltd
push
jge,pt
xchg
xchg
xor
inc
jbe
jmp
out
or
xlat
mov
xchg
and
jno
xchg
movsl
push
jmp
out
loop
loope
xchg
jge
xchg
cmp
and
dec
or
or
inc
fwait
fs
int
push
cmpsb
push
xchg
imul
incl
pop
popf
cltd
mov
and
mov
in
pop
fs
mov
jg
xchg
mov
lds
mov
jno
mov
sbb
ss
pop
jmp
ljmp
pop
pushf
les
sti
mov
gs
lods
mov
popf
jbe
pop
sarl
pop
rcll
sub
push
test
add
lds
jle
out
mov
pop
call
cmpsb
rorl
sbbb
arpl
ret
or
stc
lds
sar
cltd
pop
push
lds
je
ja
cmp
ljmp
cmp
xor
test
mov
popa
adc
stos
stos
sbb
push
pop
inc
cmp
sub
loop
rcr
jl
fsubr
pop
adc
jno
push
lret
mov
cmp
cli
dec
aam
mov
iret
push
adc
or
or
mov
jecxz
test
mov
mov
cmp
testl
mov
push
aam
popf
int
jle
and
outsl
popl
or
nop
push
sub
lock
add
inc
push
enter
sub
cmp
adc
out
jle
aas
add
shl
pop
fstps
in
mov
xlat
mov
xchg
out
roll
scas
ss
pushl
insb
int3
lea
lret
in
ja
lods
ret
cmp
add
mov
dec
mov
dec
add
int3
pop
lcall
xor
cli
pop
stos
je
inc
jmp
rcrb
adc
fiadds
push
movsb
dec
aaa
pop
dec
and
push
push
lea
fwait
xor
jecxz
mov
sbb
repz
js
ja
stos
sti
push
mov
das
ss
pop
mov
inc
or
pop
adc
movsb
jg
mov
sub
les
lret
pop
jbe
imul
cwtl
xchg
jnp
mov
mov
xchg
and
adcl
jecxz
xchg
jnp
pop
jg
push
add
jo
or
mov
iret
pop
xor
pop
jb
push
das
pusha
mov
and
imul
mov
pop
add
add
ret
pop
cs
gs
movsl
xchg
mov
pop
mov
mov
inc
inc
dec
pop
out
div
push
sbb
outsl
es
movsl
popf
xor
test
sahf
xor
pop
je
add
jb
dec
mov
dec
inc
lds
push
cltd
sti
cmp
xchg
js
fbstp
push
daa
or
cmp
push
push
ret
mov
int
mov
push
cli
push
cmp
push
fldcw
in
jo
push
xor
rclb
aaa
hlt
loopne
es
lock
pop
mov
inc
ret
lret
das
lea
data16
and
dec
xchg
sbb
pushf
sub
xchg
dec
fwait
sbb
sbb
outsl
dec
test
adc
fidivrl
aas
mov
in
iret
xorl
cmpsl
pusha
pushf
mov
push
sbb
or
fcomps
fmull
xor
dec
xor
ljmp
mov
inc
daa
jns
adc
inc
imul
mov
rcrb
rcll
cs
adc
iretw
mov
xlat
repz
pop
nop
stos
and
cwtl
add
leave
jmp
sarb
aam
xchg
xor
cmp
dec
loope
pop
mov
jmp
mov
pop
jl
int
scas
in
sbb
xor
fstp
xor
xchg
pop
mov
mov
and
jl
jae
ret
fnstcw
lcall
push
lds
popf
mov
push
ljmp
mov
add
adc
and
cmc
pop
fistl
fsts
sbb
jmp
jbe
mov
lret
icebp
push
xor
sbb
adc
je
test
jbe
out
mov
int3
popa
fidivrl
fildl
out
jns
adc
pop
fs
les
mov
mov
sub
stos
cmp
or
or
sbb
insb
ficoml
push
inc
or
lea
andl
mov
fnsave
mov
add
or
das
scas
int3
test
or
fcos
faddp
sbb
ljmp
test
pop
push
cmpsl
sbb
loop
jg
sahf
inc
mov
sub
cld
push
dec
in
push
and
adc
imul
sub
rorb
push
cmp
bound
in
push
icebp
bound
mov
sbb
sub
mov
push
push
jl
pop
inc
fs
in
scas
jae
xchg
xchg
scas
jb
xor
add
rcl
add
dec
in
sbb
jecxz
inc
dec
and
fdivrs
dec
adc
outsb
jmp
mov
sub
lock
pop
pop
mov
cld
shll
lcall
mov
jmp
xchg
sbb
std
jb
xor
adc
and
cmpsl
push
flds
and
lret
cmp
or
inc
mov
out
divl
pop
mov
mov
popa
push
inc
sub
ss
addr16
and
cmp
test
push
pop
test
mov
test
cmc
xchg
insl
jmp
scas
repz
test
fisubrs
fdivl
pusha
imul
cmc
fldenv
or
push
dec
xor
lods
mov
pushf
mov
xor
add
pop
mov
xchg
and
cmp
shlb
test
mov
inc
add
and
outsl
in
stos
lahf
stos
and
insl
mov
and
out
adc
lds
clc
outsb
fwait
hlt
stos
inc
aas
xchg
sbb
dec
fs
xlat
mov
inc
insb
jecxz
jae
jbe
dec
hlt
jge
pop
mov
jns
mov
pop
pusha
mov
dec
test
ja
fdiv
sbbb
es
lcall
outsb
stos
or
push
enter
jb
stc
imul
sar
mov
mov
dec
shll
jmp
arpl
cmp
or
dec
jne
stos
stc
fisttpll
dec
push
sub
push
xchg
stos
adc
xor
mov
int3
rcrl
mov
xor
and
in
push
in
pop
push
mov
sbb
dec
pop
cmp
cmc
sub
jl
xchg
ss
fs
lret
mov
or
repz
xchg
inc
inc
xor
xchg
xchg
lods
repz
test
mov
add
pop
jne
int
sbb
cmpsl
cs
jg
imul
adc
clc
mov
or
sub
in
adc
icebp
out
fs
je
pop
push
push
sub
lods
or
push
xchg
pusha
or
jmp
lea
jmp
lock
xchg
cmc
pop
aas
cmp
jecxz
adc
test
jb
out
xchg
es
sub
jo
and
pop
adc
lahf
lods
fistpl
sub
mov
sbb
rcrb
mov
mov
cli
test
js
or
call
mov
adc
shll
jge
std
int3
imul
in
jns
sub
das
sub
inc
cld
mov
jl
ljmp
cmp
jmp
ds
nop
cmp
pop
jne
push
pop
sbb
rcr
in
out
mul
mov
dec
nop
lods
push
test
jae
test
addr16
pop
sub
js
out
xchg
cli
sbb
cmc
rorl
lds
jmp
cmp
fnsave
mov
jp
les
and
mov
test
incb
in
movl
and
loope
clc
mov
inc
sbb
adc
or
cmp
jge
mov
dec
repz
push
inc
scas
dec
pop
or
jle
pop
sbb
ret
shll
mov
sub
jg
mov
mov
mov
pop
inc
mov
orl
test
jbe
hlt
mov
cmc
mov
dec
lock
aad
xor
push
add
mov
mov
push
lcall
adc
imul
cmp
sub
sub
sbb
cwtl
or
cmp
cmp
test
and
pop
mov
cmp
fs
bnd
out
scas
lcall
jbe
fcoms
cwtl
fs
out
aam
or
mov
or
es
fdivl
mov
xchg
ret
push
fcmove
mov
jbe
lds
arpl
test
cmp
test
jae
sti
lods
les
cmp
sub
ret
cmp
call
sbb
cmp
hlt
or
or
mov
mov
xor
pop
mov
push
cld
pop
ljmp
xor
popa
fistpll
add
loope
je
add
xlat
fstpt
jne
and
mov
icebp
xor
mov
push
daa
sub
xchg
ds
pop
adc
fistl
mov
push
mov
cmp
mov
addb
dec
jge
and
jecxz
aad
push
push
mov
aaa
pop
jl
sub
inc
movl
mov
dec
out
scas
test
add
scas
ss
cmp
das
and
movb
mov
xor
inc
icebp
add
sub
addr16
sahf
push
push
iret
jbe
push
mov
push
jnp
icebp
xchg
test
cmp
sub
pop
cli
test
in
lock
adc
pop
sbb
push
test
scas
loopne
and
imul
stos
jg
xchg
xor
add
loopne
push
std
inc
test
adc
or
arpl
rolb
xchg
pusha
mov
repz
or
nop
mov
scas
rcrb
ja
xor
pop
insl
scas
or
out
add
mov
leave
cmp
adc
xchg
outsb
or
jle
xchg
scas
xchg
popf
or
sbb
repz
adc
popf
imul
pop
mov
inc
xchg
fsubrl
cmp
imul
push
lcall
movsl
ss
add
xchg
sahf
cmc
inc
cmp
pop
stos
test
rcrl
jo
cltd
push
pusha
leave
ret
dec
int3
jle
movsl
cmpsl
test
repz
pop
pop
xor
cmp
rcrl
pop
and
mov
cmpsl
divl
jmp
ficomps
orb
iret
add
imul
xorb
sub
jo
sbb
push
dec
mov
jnp
add
cmp
pusha
repz
sub
or
outsl
add
je
arpl
cld
push
inc
rclb
jbe
lret
inc
xchg
addr16
cmp
lds
inc
ss
dec
ljmp
movsb
rdmsr
sub
stc
jb
add
jge
dec
lea
jg
xor
and
jmp
outsl
sub
addl
sbb
mov
sub
mov
test
pop
xchg
jae
mov
bound
jnp
ljmp
adc
in
ret
xlat
into
dec
pop
cmp
dec
pop
mov
mov
xlat
fs
ds
or
pop
aad
push
std
mov
aad
addl
stos
cmpsb
popf
and
xor
push
stos
pop
ficoml
or
and
in
daa
pop
mov
in
mov
pop
push
enter
cwtl
mov
sub
mov
push
and
jne
jb
shl
jmp
dec
push
sbb
loop
dec
lret
mov
adcl
mov
imull
add
add
jno
stos
push
fiaddl
xor
jns
ret
add
dec
lods
sbb
fstps
out
inc
pop
popa
inc
sar
push
repnz
lret
insl
push
and
dec
cwtl
insb
rcrl
ret
cld
mov
popf
movsb
ret
test
insl
and
test
adc
cmpsl
sbb
dec
mov
outsl
scas
in
inc
push
add
ss
jge
arpl
loope
xchg
pop
mov
xchg
dec
bound
outsl
inc
repnz
test
cmp
cmp
es
sbb
test
mov
cmp
xor
shr
sbb
sub
inc
sbb
xchg
stos
xchg
dec
jb
push
rclb
xor
sub
jecxz
int
rorl
push
pushf
bound
dec
cwtl
jns
pop
ds
mov
cli
mov
cltd
imulb
sbb
test
or
cmp
hlt
pop
lods
std
daa
mov
push
add
xor
lods
mov
xchg
cmp
fisubs
or
mov
fisubl
scas
add
je
pop
pop
in
loop
roll
imul
aad
mov
out
add
outsl
popa
jecxz
pop
imul
inc
movsb
push
mov
insb
lock
dec
or
clc
or
cmc
and
out
push
out
jne
loope
outsb
sbb
dec
jecxz
inc
pusha
cltd
push
sbb
jne
call
xor
test
lret
stos
mov
mov
adc
jno
fstps
or
mov
xchg
and
or
add
jnp
ds
ror
das
jp
je
mov
dec
inc
cmc
xchg
push
fcoms
mov
dec
int
and
push
popf
lea
xchg
cld
in
hlt
sub
lock
js
leave
sbb
loope
sub
pop
xor
xchg
jl
pop
aad
mov
dec
mov
pop
loopne
bound
and
fsubrl
sbb
scas
scas
scas
call
inc
sub
fs
stos
mov
jae
lahf
mov
add
sbb
cld
sbbb
push
clc
xchg
xchg
cmp
mov
lahf
mov
out
inc
test
jg
in
jge
pushf
das
int
aaa
push
add
dec
int
adc
es
dec
xchg
flds
xchg
mov
or
inc
lahf
cltd
scas
out
push
mov
mov
mov
stos
push
dec
fcompl
popa
dec
mov
scas
scas
sbb
inc
xchg
scas
xchg
dec
call
and
fcoms
xor
lock
xchg
xchg
inc
pop
jns
test
scas
jae
fstl
jl
sub
pop
call
lock
and
jo
fwait
pushf
adcl
jge
outsl
and
xchg
mov
mov
icebp
insl
cltd
dec
sbb
bound
pop
pop
imul
mov
aaa
addr16
cmp
dec
mov
or
cmpsb
daa
stos
mov
cmp
popf
fdivl
mov
bound
cmp
cmpl
lods
mov
int
cmp
ret
cmp
or
or
lcall
mov
mov
pop
hlt
inc
ja
jno
jg
add
pop
mov
pop
dec
movsb
or
into
mov
mov
jg
sbb
loope
std
pop
push
push
mov
jmp
jbe
or
jg
mov
addr16
decl
mov
loopne
push
loopne
pop
ja
push
addl
push
pop
push
pop
push
jle
adc
and
jns
dec
mov
in
push
scas
imul
out
jge
fisttpl
mov
mov
cwtl
pop
into
push
mov
jecxz
inc
mov
dec
gs
push
xchg
in
ffreep
jmp
dec
daa
mov
pushf
pop
out
sbb
dec
bound
mov
mov
stos
aad
xchg
mov
les
mov
push
addr16
push
cmp
push
test
daa
rcll
sub
xor
ss
fisttps
or
lahf
push
out
addr16
lea
into
sub
cltd
lods
add
test
popf
stc
xchg
movsl
nop
xchg
sub
jmp
ljmp
push
loopne
pop
lods
aas
notl
cmp
sub
stos
ds
inc
push
scas
sub
xchg
ret
pop
int
adc
xchg
cltd
pushf
stc
jp
inc
inc
dec
dec
icebp
jge
mov
xor
repz
insl
sub
mov
out
daa
ret
inc
ds
mov
pushf
mov
fbstp
cmpsb
sti
jge
rolb
addr16
lock
es
sbb
jge
mov
iret
fcmove
adc
add
test
jo
aad
outsb
ja
mov
or
rorl
ret
std
cwtl
loope
mov
and
jg
push
adc
iret
push
mov
out
aad
clc
mov
jg
pop
adc
jle
sbb
ret
xor
roll
test
pop
sbb
pop
rep
popf
sub
mov
or
cmpsb
mov
pop
pop
mov
ret
adc
mov
fcomi
test
add
xor
out
repz
pushl
add
sarl
xchg
ds
test
repnz
les
aas
jo
jle
and
sahf
ficompl
cli
pop
sbb
cli
test
lret
adc
out
inc
adc
test
mov
ret
lods
mov
in
pop
movsl
rcll
mov
lods
xor
xor
test
imul
mov
adc
cld
mov
mov
pop
or
pop
outsl
mov
pop
out
xchg
outsb
push
or
sbb
or
in
push
or
and
xlat
pop
call
subb
arpl
mov
xor
cmp
jmp
in
dec
lahf
xchg
jnp
pop
andl
pop
inc
pop
xchg
popf
mov
stos
loopne
sbb
imul
mov
jmp
rcrb
fimuls
xchg
jg
mov
xchg
cmp
jg
mov
mov
adc
shlb
cmp
call
jmp
fisttpll
les
jge
mov
setl
scas
call
push
or
addr16
into
and
jnp
jne
jo
mov
jnp
aaa
inc
and
mov
in
dec
fs
jl
cwtl
imul
cmp
push
inc
sub
pushw
sbb
imul
jecxz
mov
mull
fs
push
sub
in
mov
xor
mov
into
cmc
xlat
js
data16
ret
sub
fldl
xchg
sbb
fiadds
addr16
lret
xchg
lret
repz
jecxz
sbb
popa
mov
aaa
in
pop
testb
aas
pop
clc
mov
lock
loope
mov
mov
inc
rcll
imul
mov
push
and
loop
test
mov
mov
jo
in
sub
pop
pop
mov
pop
dec
shrl
lret
mov
dec
scas
sahf
into
pop
loopne
popa
dec
push
sahf
mov
mov
lods
xor
and
jmp
inc
int
sub
cmp
and
jle
cwtl
add
adc
push
fdivs
sbb
add
jnp
out
imull
xchg
mov
pop
test
popf
push
out
mov
sub
jo
insl
leave
xchg
or
aad
loop
inc
jno
sub
and
or
shrl
xchg
jbe
roll
or
adcl
jo
in
movsl
bound
rcrb
fbld
adc
pushf
test
fucomip
les
dec
cmpsl
mov
sub
pop
xor
mov
cmpl
imul
rorb
xchg
xor
out
dec
or
lods
xchg
sub
sbb
mov
xchg
mov
jmp
push
sub
mov
push
mov
xchg
enter
and
sbb
cltd
xchg
loop
not
push
lcall
jne
cmp
jo
mov
xchg
in
mov
dec
pop
movsb
pushf
imul
mov
cmpl
ljmp
ljmp
sub
fsub
push
sti
mov
adc
lds
test
data16
in
and
std
mov
sub
pop
sahf
enter
dec
stos
sub
dec
shll
je
insl
dec
dec
jp
imul
testl
cmp
jle
cmp
dec
or
pop
test
sub
int3
mov
fcompl
mov
sbb
loop
ret
mov
dec
or
fistpl
pushf
cmpsb
cltd
cmpsl
cmpsb
jb
adc
inc
ficoml
fnstsw
cmc
pop
xor
inc
jae
inc
jne
jb
jp
and
test
mov
xor
sbb
mov
sub
mov
mov
inc
xor
mov
out
insl
mov
sbb
fdiv
push
dec
mov
cmp
ss
jle
add
sub
call
jg
xchg
push
cmpsl
or
pop
je
and
int3
add
xchg
fstps
cld
popa
lahf
les
loope
mov
cmc
jno
cli
adc
pop
fisttpl
outsl
rcll
and
mov
xor
sti
pop
mov
mulb
in
pop
lcall
fsts
xorb
sbb
push
inc
jmp
push
mov
mov
mov
sar
jecxz
pop
outsb
inc
sbb
lds
sbb
pop
aaa
in
cmc
add
rcll
movsb
cwtl
iret
mov
cmp
jbe
shrb
inc
aaa
xchg
stc
test
adc
lcall
lret
cwtl
jl
push
jbe
push
sbb
call
rcrb
jae
int3
int
in
lods
xchg
mov
push
pop
mov
mov
dec
es
lods
jo
sub
movsl
pop
sbb
jbe
cmp
in
sbb
out
jo
xchg
loopne
xchg
insl
jns
jns
sub
rolb
mov
push
sarl
push
cld
inc
add
and
pop
cmp
iret
add
jb
mov
cmpsb
xor
pop
jno
inc
outsl
fmuls
leave
dec
pop
leave
bound
addr16
dec
std
adc
or
jge
cmp
stos
jno
jne
push
stc
xor
outsb
dec
push
lahf
lcall
xlat
adc
mov
cmpsb
dec
mov
jo
pop
jl
add
dec
fldt
or
adc
movsl
loopne
and
sbb
not
cld
rorb
idivl
aaa
mov
arpl
jmp
cmp
jg
sub
mov
and
push
lret
shrl
cld
into
lahf
mov
push
pop
sahf
jp
push
adc
mov
push
xchg
push
shll
enter
sbb
rol
jg
insl
js
movsl
mov
mov
and
xlat
mov
int3
dec
repnz
scas
or
jno
ror
inc
cld
xchg
imul
sub
ljmp
inc
push
adc
adc
loop
cmp
xchg
enter
hlt
or
xchg
xlat
xlat
sbb
stos
jl
mov
js
inc
sti
push
insb
fimuls
rorb
int3
cmp
mov
jo
mov
insb
cmpsl
mov
std
scas
inc
add
pop
inc
loopne
push
outsl
mov
pop
xor
addr16
lods
lock
cmp
xor
lcall
aam
jle
push
test
pop
nop
mov
pop
orl
ret
sti
mov
mov
iret
mov
mov
mov
stos
test
inc
sub
icebp
push
fsubrl
push
mov
xor
jmp
push
push
mov
ljmp
sti
sub
dec
push
mov
cmp
movsl
sti
scas
mov
adc
mov
push
lock
jmp
dec
test
rclb
cld
daa
and
rcl
jle
mov
scas
mov
les
jae
mov
pop
mov
insb
ficoms
dec
das
lock
pop
jae
cmpl
dec
shlb
sub
outsb
push
rorl
into
push
sbb
fcoml
cwtl
adc
or
mov
ror
sbb
dec
sub
xor
loope
xchg
test
cld
jbe
push
stos
dec
cmpsb
ja
cmp
addr16
dec
xchg
ljmp
iret
xchg
add
aaa
pop
jl
pop
jae
inc
daa
dec
mov
dec
jle
add
movsb
movsl
lea
push
push
in
aas
push
sbb
cmc
push
loopne
cmp
insl
push
push
add
addr16
pop
out
xlat
sub
inc
outsb
mov
mov
bound
mov
xchg
in
and
sbb
jge
pop
insb
mov
cs
jno
roll
nop
push
mov
xor
push
jo
dec
push
dec
sub
sbb
mov
xor
ret
mov
test
rcrl
jnp
cmc
unpckhps
adc
xchg
push
addr16
ds
or
pop
in
xchg
pop
xchg
mov
xchg
imul
cmp
stc
push
jl
jmp
in
in
dec
orb
cmp
mov
pop
xor
mov
sub
mull
mov
xor
test
rol
inc
jo
jecxz
xor
aam
mov
out
or
stc
ljmp
xchg
or
fmuls
inc
stos
pop
push
ret
fucom
push
hlt
inc
dec
and
das
adc
fldcw
aas
sbb
jnp
ljmp
insb
fcmovnb
push
mov
fucomp
bound
lods
adcl
dec
lds
test
sub
pop
outsl
sahf
fs
fsub
dec
popa
mov
jno
xor
arpl
lock
dec
push
andb
adcb
or
fwait
jbe
les
mov
push
lret
aam
pop
xadd
inc
mov
xor
pop
nop
int3
testl
int
mov
cwtl
add
push
push
xchg
les
addr16
fidivrs
inc
push
and
dec
popf
cmp
or
shl
lahf
push
cwtl
add
andl
or
push
adc
fcompl
pop
ja
mov
mov
ret
cwtl
sbb
mov
xchg
add
and
mov
jo
cwtl
or
xchg
jl
imul
and
or
gs
sbb
std
push
pop
daa
rorb
push
daa
mov
out
mov
adc
flds
push
dec
rclb
hlt
es
pop
sbb
sarl
aas
stc
and
push
or
insl
mov
or
inc
adc
aas
mov
stos
ss
or
pop
add
push
mov
aad
or
ljmp
mov
pop
in
or
cli
ja
dec
cmp
movsl
ret
pushf
jae
iret
push
outsb
sarb
adc
in
arpl
lahf
call
xchg
iret
popa
lret
add
mov
pop
fldenv
push
jbe
xchg
sub
and
outsl
xorb
mov
in
imul
push
jle
dec
mov
sti
mov
sub
xchg
addr16
mov
and
sbb
xor
loop
lret
int
in
xchg
rorb
mov
les
stos
xor
jae
xor
cmp
jle
or
mov
test
lds
push
sti
repnz
push
pop
and
add
add
and
inc
pop
in
mov
mov
jle
lods
pop
rolb
orb
jmp
and
inc
jbe
add
jg
fwait
cmp
fbstp
cld
lgs
nop
adc
outsb
repz
out
and
nop
mov
frstor
cmpsl
icebp
inc
fildl
sti
aas
dec
xlat
loop
and
mov
xchg
xor
add
push
push
frstor
lods
shrl
dec
push
fisttps
dec
ja
enter
pop
push
xor
add
ret
loopne
les
scas
dec
nop
dec
fucom
xchg
cmp
setg
sbb
pop
xlat
and
js
adcl
lods
fsubrs
dec
aas
lret
dec
sarb
push
cmpsl
push
jecxz
adc
rorb
xor
outsl
test
xchg
mov
pop
sub
pop
push
jp
mov
idivl
in
shrl
or
rcll
push
shll
sub
inc
rcrl
jle
loop
xchg
popa
sub
push
inc
mov
jnp
cltd
stos
fsubp
dec
and
outsl
add
xor
jo
xchg
pop
adc
jmp
pusha
add
movsb
sub
or
aad
push
mov
dec
inc
xchg
and
pop
test
push
dec
jp
dec
lret
xor
push
dec
mov
lods
push
sub
outsl
pop
push
and
inc
push
add
popf
lea
mov
push
ret
popf
add
std
popa
loopne
sbb
or
xchg
mov
and
xor
cld
ss
xlat
push
adc
push
inc
pop
mov
fmuls
rcr
dec
mov
or
icebp
sbb
dec
jle
pop
inc
mov
add
stos
adc
cld
scas
in
mov
adc
outsl
test
fsub
mov
inc
jp
shll
lods
pushf
adc
insb
mov
mov
push
cld
dec
jl
stos
je
outsl
xlat
xchg
scas
add
stos
in
add
xchg
push
pop
jns
jne
in
jb
adc
adc
mov
mov
cmp
leave
adc
in
mov
fistl
repz
cmp
mov
jo
sub
push
and
loop
fs
or
xchg
or
adc
or
xor
mov
js
insb
and
push
rolb
cmp
loopne
jbe
cmp
sbb
je
pop
jb
popf
cwtl
dec
lds
lods
cmpsl
mov
add
and
mov
es
mov
loopne
int
inc
in
cli
push
pop
dec
mov
popa
push
push
xchg
or
cmc
lret
adc
mov
jo
icebp
movsb
inc
xlat
enter
mov
mov
je
adc
jns
jl
daa
out
stc
mov
xor
mov
push
fsubs
popa
mov
rorl
xor
push
orl
pop
cmpsl
aas
dec
dec
mov
mov
js
mov
popa
stc
imul
add
push
je
loopne
dec
xchg
std
jo
in
xor
and
mov
gs
sbb
xchg
add
shll
clc
movsl
cmpsb
lea
sub
push
mov
jecxz
cmp
push
mov
bswap
aas
gs
mov
fwait
icebp
aaa
das
mov
shlb
cmpsl
insb
out
sub
sbb
mov
ret
push
enter
jge
jae
xor
jg
cmc
mov
mov
mov
loop
inc
xorb
inc
inc
pop
int3
sti
fwait
xchg
pusha
pop
push
int
std
pop
test
lahf
js
jecxz
outsb
jl
add
cltd
xchg
fmuls
enter
lret
xor
in
repnz
aad
xor
jbe
sbb
mov
mov
ljmp
pusha
jg
ds
cmp
sub
ds
ja
pop
loop
cltd
les
sbb
cli
rcrb
pushf
mov
push
sbb
and
inc
subl
fcmovb
xlat
sahf
ret
mov
push
cmpsb
inc
mov
mov
jb
mov
mov
pop
lea
fwait
and
repnz
mov
inc
push
xor
inc
add
jg
lret
cmc
xchg
xor
mov
repz
stc
dec
leave
cmp
dec
ss
or
add
fisttps
stos
mov
shrl
jae
adc
movaps
pop
addr16
push
repz
ficoms
movsl
push
rcll
mov
test
jmp
mov
mov
cmc
cmpsl
call
xchg
testb
shll
movsl
lods
je
push
lret
fbld
in
bound
scas
ja
jno
and
push
fnsave
mov
dec
xchg
and
cmp
xor
xchg
pushf
mov
int3
sbb
cmc
or
gs
or
add
and
adc
ja
hlt
ja
jae
inc
int3
push
push
pop
dec
stos
lcall
lret
and
xor
gs
xor
add
and
sbb
cmpl
bound
dec
pop
es
cmpsb
mov
cmp
cmp
push
pop
pop
andps
pop
rol
fs
scas
mov
mov
ja
into
pop
dec
cmpsl
bswap
insl
xchg
ljmp
imul
shrl
xor
ss
scas
and
xchg
stos
adc
sarl
pushaw
icebp
je
add
test
jg
cmp
push
mov
inc
mov
mov
orl
sbb
lret
popa
pop
lock
mov
dec
ljmp
sub
in
loop
xchg
pop
mov
add
movsl
xchg
adcl
dec
pushw
gs
lret
pusha
push
mov
cli
mov
mov
rclb
xor
negl
pop
dec
sub
dec
add
clc
test
or
dec
outsb
repz
lds
dec
dec
dec
addr16
xor
push
scas
mov
or
and
xchg
jp
out
out
in
push
imul
mov
sub
ret
inc
sub
mov
push
xor
add
dec
pushf
loopne
mov
push
push
jg
push
cwtl
in
mov
addr16
gs
cmp
shl
aaa
fldenv
mov
xchg
inc
jle
xchg
pop
fdiv
jno
enter
sbb
cmp
pop
mov
in
push
test
inc
jecxz
push
adc
fwait
add
std
in
lret
cwtl
mov
or
scas
mov
cmp
repnz
jmp
in
ds
ret
jb
fmulp
dec
icebp
in
in
stc
dec
inc
pushf
mov
add
test
sub
cltd
mov
inc
inc
add
push
or
call
push
jne
mov
repnz
insl
jle
mov
fnstenv
aas
sbb
pop
js
adc
ss
popf
sub
jo
lahf
pop
sbb
hlt
mov
lods
dec
clc
test
push
sbb
mov
loop
jns
outsl
mov
push
das
shrb
orl
dec
popf
and
imul
jne
jmp
divb
lds
cmp
add
sarl
jno
jo
sbb
in
enter
pop
nop
dec
and
jl
test
insl
inc
enter
mov
jnp
sbb
jmp
mov
cli
test
int3
fstl
jo
add
sti
pop
cmpsl
sti
leave
jl,pn
pop
push
sarb
sbbb
and
xor
pop
sar
cmpl
or
hlt
inc
push
or
sbb
pop
pop
jmp
push
jp
mov
out
hlt
inc
and
or
out
aam
into
mov
mov
scas
lcall
dec
lods
loopne
cli
movsl
cld
mov
js
sbb
test
cwtl
mov
sub
fcmove
cmc
mov
lea
ret
mov
cmp
test
enter
aaa
cs
mov
loopne
mov
jno
in
scas
adc
cltd
outsl
jmp
jp
movsb
add
pusha
roll
test
inc
inc
popf
mov
jno
push
push
fldl
outsl
xchg
in
fidivrl
adc
and
fmuls
pushf
dec
ror
mov
inc
mov
aaa
sbb
std
sbb
sub
scas
xlat
push
pushfw
xorl
mov
mov
pop
xor
xor
ret
fs
inc
and
pop
imul
jns
outsb
dec
in
xchg
add
outsb
in
arpl
in
adc
push
add
repz
mov
mov
push
cmpsb
ss
pop
jge
pop
dec
inc
cmp
xor
fwait
and
jg
mov
mov
fisubrl
int
pop
outsb
xchg
mov
bound
jne
orl
lret
out
mov
xor
test
loop
lret
hlt
adc
jb
fld
xchg
gs
sub
xchg
push
ret
sti
mov
mov
cmp
mov
popf
out
fs
jne
lahf
imul
cli
fsubl
ret
and
loopne
mov
pop
jno
fildl
lahf
in
ret
add
add
cmpsb
jmp
pop
movsb
dec
fsubrl
loopne
rep
mov
sub
fists
jmp
pusha
shlb
scas
sbb
mov
in
xchg
pop
xor
repz
in
push
xor
cmpsl
pusha
push
popf
jae
stos
jae
movzwl
push
pop
or
mov
xor
mov
xlat
scas
nop
shrl
bound
test
ja
xor
push
inc
xchg
je
cmp
sarb
shr
inc
cmp
mov
gs
cmp
test
cmp
and
xchg
inc
inc
std
inc
mov
ds
stc
mov
loope
repnz
in
mov
hlt
push
pop
or
sub
mov
dec
fs
dec
das
scas
outsb
roll
inc
orl
cmp
ret
in
xchg
mov
jo
pop
push
jns
aad
cmc
arpl
cld
add
lret
xor
push
lea
in
cmp
adc
pop
xor
inc
test
fs
jb
adcl
mov
xchg
daa
xor
rcrl
cmc
mov
hlt
push
int3
xor
and
test
mov
fidivrl
stos
les
dec
movsb
imul
popf
mov
adc
movsl
cmpsl
xor
xor
sbb
mov
xlat
inc
xchg
insl
std
xchg
dec
adc
inc
pop
lock
loope
lahf
dec
xchg
add
jmp
psadbw
bound
push
jnp
pop
cmc
pop
jne
xchg
push
xchg
shlb
decl
mov
or
ja
mov
mov
or
cwtl
test
push
dec
in
pop
lea
imul
pop
adc
insl
push
stos
cmp
shrb
jle
sbb
sub
les
mov
int3
xor
fsubrl
popa
push
ror
xchg
inc
jecxz
and
pop
jle
idiv
pop
and
mov
imul
decl
cmp
push
std
fidivs
add
pop
movsl
pop
clc
js
repnz
xchg
lods
fildll
out
cltd
inc
stos
leave
loop
sbb
popf
je
hlt
popa
xorl
xor
and
cmpb
sub
mov
mov
sub
jmp
xchg
inc
call
rorb
popf
sbb
inc
xor
pop
xchg
or
fsubl
mov
and
shlb
jbe
adc
lret
negl
push
push
adc
jns
mull
fs
repz
shl
outsl
adc
sub
hlt
test
std
daa
int
shrb
dec
adc
int
movsb
pop
jb
insl
adc
dec
inc
daa
or
inc
add
dec
jno
or
jg
movsl
adc
inc
add
out
and
inc
add
and
sbb
xor
xlat
dec
add
stos
loopne
iret
iret
dec
push
dec
shr
inc
rcr
or
shrb
cli
je
stc
sub
or
xchg
push
rol
push
inc
pop
xchg
cmpl
loopne
fdivrs
jno
dec
icebp
scas
cmp
mov
cmc
cmp
xchg
push
jbe
aas
adc
lret
xchg
adc
jae
inc
int
mov
enter
iret
enter
sbb
aaa
cli
lret
outsl
fcoms
data16
dec
ret
lret
outsb
xchg
mov
jbe
jo
jp
je
stc
into
adc
gs
cmp
aad
xchg
cmp
cmp
mov
mov
insl
les
aas
loop
in
pop
xchg
fcomps
sbb
and
into
aas
and
mov
out
popa
mov
xor
mov
xor
mov
rcl
push
mov
cmp
mov
out
pop
idivl
ss
or
inc
dec
out
and
je
and
aaa
or
fyl2x
push
paddd
push
sbb
adc
xchg
and
nop
fisubrl
aaa
xchg
mov
jne
jle
fsts
dec
gs
or
inc
jb
pop
leave
add
add
cmp
sahf
leave
cmp
into
hlt
xor
aaa
mov
sub
sub
pop
mov
fstpt
and
stos
mov
dec
mov
cltd
xchg
movsl
push
sbb
xor
imul
jb
sbb
jge
divb
jecxz
xor
sbb
gs
movsl
movsl
nop
divl
mov
fnstcw
xchg
call
fsts
push
and
gs
mov
push
daa
mov
ds
andb
mov
pop
mov
lcall
sub
inc
mov
je
pop
shlb
jp
aas
daa
xor
push
lods
cmc
and
ret
add
add
cli
mov
add
jns
jmp
and
repz
mov
jecxz
pop
push
mov
cmpb
popa
sbb
call
clc
xchg
inc
xchg
mov
xlat
adc
adc
cmc
mov
mov
mov
cld
lret
cmp
or
add
jle
mov
decl
das
xchg
test
push
pop
inc
fwait
in
outsl
cli
aaa
outsb
xchg
test
mov
mov
mov
gs
mov
ss
cmpsl
dec
out
jbe
sub
out
mov
pop
lret
imul
cltd
popf
mov
lret
or
into
arpl
add
xchg
jle
fdivs
mov
popf
xor
sahf
insb
or
shll
mov
sarb
push
cmp
inc
roll
shl
dec
gs
xchg
xchg
and
mov
inc
jmp
cmp
popa
push
and
rcrb
mov
jle
negb
jae
and
sbb
inc
icebp
adc
imul
sarb
xorb
cmp
jns
push
sbb
cld
mov
jle
call
shlb
stc
into
es
stos
lds
sub
jb
out
sub
mov
xchg
jl
andb
mov
daa
test
cmp
or
sahf
and
insb
jb
and
ja
sti
cmp
and
cmp
mov
fidivrs
loope
shrl
sbb
test
int3
lret
adc
push
pop
mov
addr16
jecxz
je
xor
xchg
iret
sub
ret
xchg
fstpl
inc
rolb
leave
jge
add
cltd
icebp
inc
aad
mov
inc
dec
inc
dec
jns
out
or
jp
fdivs
shlb
jo
into
xor
imul
aad
insb
mov
sahf
dec
in
xchg
sub
fsubr
scas
stc
push
push
sbb
xor
sbbl
xchg
mov
adc
inc
fbld
lret
sub
stc
pop
mov
loop
lcall
fwait
and
xchg
push
sbb
sub
mov
cltd
mov
xorb
mov
lods
imul
ret
pop
imul
lds
inc
incb
lret
lahf
add
ret
out
or
cwtl
jae
push
cmp
and
das
cmp
sub
inc
sti
pop
das
xor
add
jo
mov
addl
in
dec
shrl
xchg
leave
jb
or
cwtl
dec
andb
jae
das
fstp
sti
and
mov
mov
loopne
stos
inc
lods
sub
gs
mov
out
xchg
popa
notl
push
das
pop
aas
iret
sub
lods
push
es
enter
outsb
mov
sub
call
and
push
fcomp
in
dec
inc
xlat
out
mov
sbb
xor
add
push
mov
lcall
pushf
adc
dec
xchg
imul
aas
ret
mov
and
cmc
xchg
jno
or
push
xor
imul
sbb
mov
popa
sub
xchg
popf
sti
mov
out
sub
push
push
pop
xor
sbb
sbb
adc
jne
push
out
push
fldz
fldcw
out
aas
shrl
stos
data16
cmp
cmpsl
jo
je
loope
mov
stc
push
adc
ret
xlat
inc
pusha
test
and
sub
ja
scas
mov
leave
sahf
cli
into
dec
pop
xor
mov
scas
notb
mov
fs
lcall
mov
push
and
nop
mov
cmp
ds
pushf
jnp
lret
cwtl
pop
sbb
mov
popf
inc
mov
lahf
pop
pushl
pop
add
imul
pop
mov
inc
loope
ds
or
fisubrl
sub
jp
pop
push
xchg
jo
mov
pop
push
push
add
loopne
mov
mov
mov
cmpsl
pop
iret
movsb
inc
out
fs
aam
mov
sub
stc
mov
add
repz
jmp
loop
inc
sbb
adc
push
mov
mov
jne
mov
mov
push
and
xor
cwtl
sub
pop
int
mov
inc
cmp
xor
or
repz
stc
or
outsb
push
loop
test
cs
xchg
push
mov
int
shrb
xor
or
loop
push
inc
in
scas
repnz
xchg
and
mov
xor
dec
inc
inc
cmp
pop
mov
out
or
mov
pop
insb
xor
movl
js
ja
sti
fistl
call
cs
inc
mov
pop
ret
inc
cmc
into
xor
lods
and
cs
push
add
mov
xchg
rcll
cltd
sbb
fisubrl
lcall
je
leave
jae
cli
mov
sub
mov
pop
das
push
fcmovne
mov
mov
pop
lods
idivb
adc
ja
insl
stos
xchg
fucomp
aas
stc
pmullw
or
inc
or
repz
std
jbe
xor
pop
inc
pop
pushf
jnp
sub
lret
xchg
xchg
sbb
mov
sahf
add
jno
xchg
xor
imul
mov
mov
push
js
inc
ja
in
ja
orb
into
daa
popf
pop
bound
imul
add
stc
repz
stos
xchg
push
dec
dec
and
jmp
xchg
mov
push
fdivrs
movsb
push
lods
pop
nop
mov
dec
clc
mov
mov
pop
sbb
mov
popa
lods
or
sub
jle
xchg
cmpsb
cmp
mov
mov
cmpsl
testb
pop
jecxz
pop
inc
mov
cs
pushf
sbb
xlat
push
aaa
loopne
fbstp
or
aaa
rclb
lods
adc
pop
fcomps
push
lea
add
pop
shrl
sub
xchg
dec
rclb
and
lahf
lret
shll
inc
roll
sbb
pop
popa
pusha
in
sahf
mov
jmp
fadds
add
dec
call
dec
and
cld
pop
testb
inc
pusha
mov
dec
mov
in
mov
mov
stc
push
rcll
adc
pop
inc
push
ss
jle
sub
ret
stos
insl
jg
in
movsb
repnz
adc
xchg
add
dec
sub
test
movsl
das
jl
sbb
mov
push
fiaddl
pop
dec
sub
test
xor
mov
cltd
mov
fs
sti
ret
jmp
push
xchg
sti
aam
data16
jmp
hlt
adc
enter
pop
cmpsl
mov
mov
shrl
push
lahf
je
fldcw
cli
mov
sbb
imul
js
xchg
lcall
repnz
cmp
push
jle
shlb
mov
sbb
in
aad
dec
imul
push
es
inc
cmp
bound
loope
in
and
ljmp
jle
repz
jp
lods
xor
push
lahf
fld
ss
rorb
pusha
and
roll
rclb
add
sub
aaa
test
jle
and
repnz
sub
jp
leave
push
pop
and
sbb
mov
bound
inc
rcrl
lret
mov
lret
and
js
daa
mov
lahf
jmp
scas
push
sub
push
sbb
std
enter
les
dec
cli
lds
dec
sub
mov
mov
pop
cmp
lcall
adc
add
lods
pop
into
lock
rolb
pop
xchg
push
nop
ljmp
ds
ret
xor
out
push
xchg
xchg
inc
xor
adc
pop
cmpb
jmp
cmp
test
cmp
jp
movsl
pxor
sahf
pop
movsl
imulb
out
inc
cmp
cmp
ffreep
cmpsb
ficoms
xor
scas
sbb
sbb
jnp
setns
mov
les
adc
outsl
dec
cltd
xchg
pop
add
imul
insl
jae
in
jo
int
shrb
mov
test
cs
lret
in
scas
imul
or
mov
mov
push
jns
pop
nop
push
clc
in
mov
xchg
mov
push
jne
push
mov
pop
xchg
scas
xor
xchg
cld
push
ljmp
cwtl
cmc
daa
xadd
mov
aam
stos
call
jle
cwtl
push
xor
adc
adc
scas
push
xchg
int3
pop
xor
xchg
jp
push
mov
aaa
and
movsb
in
andl
aaa
rclb
add
mov
push
pop
cmpl
or
addl
aad
xor
push
mov
mov
jl
inc
stos
test
push
push
loop
pop
fistpll
imul
xchg
lret
jmp
or
sub
pop
mov
clc
sub
ljmp
inc
xchg
in
stos
mov
pop
fs
test
out
scas
push
push
imul
mov
mov
sbb
call
adcl
xor
mov
in
mov
xchg
inc
aaa
lods
repnz
sub
scas
bound
in
stc
sub
dec
or
lock
out
push
cmpxchg
xchg
call
and
push
mov
jp
ret
scas
push
imul
cmc
inc
xchg
adc
or
jl
xor
xor
shl
inc
mov
jl
outsb
std
sbb
add
int
aaa
dec
jg
pop
or
add
call
les
pop
popa
ljmp
push
xchg
inc
inc
movsl
mov
push
lcall
sti
idiv
scas
movsb
adc
pop
jnp
and
stc
int
and
into
aaa
push
add
aas
push
outsl
neg
and
jbe
out
xchg
xor
ret
pop
xor
add
or
or
sub
sti
mov
sahf
adc
call
or
pop
cmp
dec
mov
std
aas
adc
xor
adc
adc
adc
xor
sub
cltd
add
data16
cmpsl
aaa
push
cmp
cmpsb
jb
add
jmp
fsubrs
cmp
push
ljmp
dec
mov
stc
push
shl
jno
jmp
sub
pusha
cmp
dec
jmp
xor
lock
mov
jmp
mov
cmp
cmpsl
roll
mov
cli
arpl
or
sahf
inc
cmp
cmc
mov
int3
jp
mov
jne
inc
xchg
xor
or
add
movsb
add
adc
inc
stos
mov
xor
sub
bound
mov
jne
mov
xorb
fdivs
and
test
dec
gs
pushf
push
jbe
pop
hlt
inc
ret
clc
xor
push
jo
add
cmp
or
mov
out
pop
sub
inc
stc
xchg
repz
push
xor
sub
test
lea
mov
lds
ret
add
sbb
push
imul
mov
cwtl
inc
push
jge
push
pop
clc
inc
fcompl
test
pop
fs
fstpt
shrl
jnp
lahf
mov
bound
insb
dec
jl
inc
enter
int
pop
les
dec
not
push
movb
xchg
jp
aad
lcall
add
xor
sub
add
inc
inc
jmp
sbb
mov
mov
ds
stos
cmpl
push
mov
pusha
hlt
push
loope
std
dec
ficoms
orb
mov
cs
pop
fucomi
adc
push
or
es
push
pop
lahf
and
adc
dec
andl
ss
or
leave
mov
xlat
dec
cltd
aad
adc
mov
imul
out
pop
mov
out
ds
mov
or
aas
pop
mov
in
or
or
xchg
outsb
inc
cwtl
cmpsl
add
mov
push
test
inc
push
ds
cwtl
and
inc
push
lods
shl
mov
lcall
pop
cs
lret
push
or
loope
inc
add
sbb
pop
in
push
mov
pop
inc
andb
rolb
testl
xchg
in
repnz
ror
repnz
mov
fbstp
leave
cmpsl
sarl
in
rcr
mov
mov
dec
and
fadd
pop
xor
or
fadd
push
ja
cs
hlt
jl
mov
add
mov
xchg
mov
sbb
dec
mov
sbbl
jmp
adc
cmp
mov
dec
cmp
aaa
jecxz
les
imul
cltd
xor
pop
popa
addb
pop
adcb
or
mov
stc
dec
fadds
dec
and
sbbb
push
sub
into
testb
call
push
xorl
jns
daa
mov
mov
sbb
add
mov
insl
jns
cmp
movsl
gs
and
and
in
sbb
jo
test
sub
inc
sub
mov
out
nop
xor
stc
jmp
mov
sbb
sbbl
mov
iret
xchg
sbbb
gs
lods
mov
mov
test
mov
cld
and
inc
ret
push
jne
add
lret
js
mov
rorl
push
leave
cmp
int
or
mov
cmc
orl
lds
mov
aas
and
dec
pop
jmp
dec
lret
sub
sub
out
jne
inc
sub
test
addr16
mov
sbb
inc
rclb
aad
cs
sub
mov
mov
scas
cmp
into
iret
out
pop
xor
xchg
dec
and
adc
inc
dec
xchg
cmp
imul
pop
xchg
or
repnz
mov
jge
bound
xlat
cmp
jg
mov
pop
popf
enter
lahf
loop
push
pop
orb
bt
enter
scas
and
dec
test
mov
adc
mov
or
insb
mov
xor
fldt
pop
xchg
jle
pop
addb
lock
orb
fidivrl
lcall
and
pushf
pop
nop
inc
clc
movups
or
out
sub
rolb
fld
cwtl
scas
mov
xchg
or
pop
dec
das
ret
xor
mov
hlt
mov
arpl
or
mov
push
ficoml
sub
xchg
cmp
dec
push
lret
ficomps
mov
cmp
mov
es
ret
std
dec
inc
mov
addr16
int3
jmp
outsb
lret
mov
sbb
in
add
inc
arpl
xor
int
sub
jl
enter
imul
repnz
mov
dec
fidivs
ret
sbb
push
cmp
les
pop
inc
lahf
inc
aad
dec
sbb
into
or
enter
mov
mov
adc
xor
push
lods
mov
je
pop
imull
inc
xor
in
mov
sub
bound
insb
loope
xchg
add
sub
jns
daa
push
mov
mov
mov
and
js
mov
or
and
or
mov
mov
sbb
js
mov
rcll
je
lcall
mov
cmpsb
pushl
lret
push
add
push
data16
pop
test
xchg
into
iret
imul
repnz
cmp
or
ljmp
stos
adc
jbe
push
pushf
mov
inc
sti
repz
jl
dec
insb
in
lock
sub
es
jnp
adc
and
cmp
jp
mov
xor
out
mov
mov
pop
clc
or
aad
pop
push
and
mov
enter
and
add
addl
pop
lods
mov
and
push
and
or
pmaxsw
dec
mov
and
pop
dec
or
xchg
fisttps
ret
jo
stos
inc
mov
outsb
fsubrs
inc
inc
fmul
jno
repnz
and
stc
and
xor
mov
jge
and
loop
push
stos
test
aas
dec
and
jecxz
xchg
sbb
mov
adc
inc
jp
jb
loopne
shrl
cmp
mov
or
sub
sarl
cmpsb
mov
xor
aaa
mov
in
fimull
es
xchg
addr16
into
inc
aas
fisubrl
cmpsl
inc
aad
js
jne
shlb
lods
test
jge
ret
push
mov
mov
xchg
pop
mov
loop
adc
add
iret
repz
mov
adc
pop
das
dec
ret
and
fisttpll
hlt
or
jmp
cltd
hlt
nop
clc
call
pop
push
cmp
cmp
jns
clc
inc
push
lods
ljmp
cmc
mov
pop
cltd
mov
arpl
inc
dec
popf
shlb
pop
jb
loop
jbe
dec
out
mov
cmp
fmuls
lea
xlat
into
inc
adcl
mov
adc
rcrb
lret
jle
pop
outsb
imull
and
test
sub
xor
ja
mov
jb
lahf
icebp
test
bound
popa
xchg
mov
in
add
xor
lret
mov
test
and
aas
mov
popa
and
xor
sahf
fsts
push
mov
or
rorb
or
cld
sbb
arpl
repz
out
insl
data16
int
in
out
addr16
aam
and
popf
pop
dec
sub
add
mov
subb
push
test
push
hlt
push
aas
sti
movsb
xor
fwait
cmp
and
jbe
out
cmp
or
loope
jb
mov
imul
lret
bound
arpl
fldcw
out
pop
mov
jmp
sahf
lock
fstps
or
mov
push
and
lret
movsl
jecxz
push
into
popa
xchg
icebp
xchg
adc
outsb
movsb
jno
je
push
dec
mov
xchg
mov
xchg
into
bound
popf
jmp
sbb
call
xadd
dec
inc
xchg
stc
mov
insl
fistl
jp
ret
push
ja
ret
xchg
shrl
cmp
inc
inc
fstl
icebp
mov
cmpl
jbe
inc
lahf
or
adc
pop
cmc
clc
mov
jmp
cmp
loope
pushf
enter
fisubrs
sbb
push
mov
aam
rcll
ljmp
popf
dec
call
out
mov
outsb
cwtl
pop
ret
mov
arpl
sbb
and
xchg
xor
sbb
inc
iret
sub
pop
sbb
inc
dec
sti
arpl
push
xchg
sub
pop
popa
push
sbb
subb
out
lock
jecxz
lea
sysexit
in
sbb
or
xor
mov
pop
lret
fistpl
mov
jae
mov
popf
add
es
xchg
test
divl
cltd
sbb
cli
lods
sub
orb
pushf
jo
or
inc
scas
icebp
cmp
fimull
pusha
jle
jmp
or
or
dec
negl
pop
dec
push
out
adc
in
in
stos
into
outsb
mov
fadd
dec
inc
gs
jnp
and
mov
jle
shlb
stos
push
mov
cltd
jp
inc
cmp
pusha
out
add
fisttps
mov
push
insb
mov
lahf
jg
jno
or
xor
imul
fwait
xor
aad
push
ja
mov
imul
xchg
inc
mov
sahf
push
xor
adc
repz
mov
mov
jmp
aam
mov
sbb
jmp
es
pop
sub
sarb
imul
loope
jecxz
rcr
jns
pop
xchg
mov
rcrb
mov
fs
daa
lea
int
push
stos
xchg
dec
jo
jbe
sub
ret
fmull
mov
sub
pushf
repnz
stos
xchg
pop
ret
lock
cmp
lcall
pop
lds
enter
pop
pusha
xor
pop
xchg
mov
out
movsb
hlt
stos
inc
add
pop
jbe
test
insl
test
and
scas
xchg
jno
sbb
scas
shl
cmp
xor
push
std
or
decb
dec
xor
pop
dec
mov
in
out
rorb
rorb
sahf
jp
test
in
cmp
and
in
sti
sbb
mov
push
xlat
dec
xor
sub
and
xchg
jp
push
mov
xchg
test
or
xor
filds
dec
jecxz
sbb
sbb
mov
or
add
mov
lret
das
pushf
mov
test
push
arpl
aaa
in
sahf
adc
andl
cmpsb
dec
enter
cmpsb
mov
cmpsl
cs
cmp
movsb
sub
xlat
insl
push
cwtl
push
lret
in
pusha
fcomp
call
mov
mov
add
mov
imul
xchg
leave
xchg
xchg
sbb
inc
push
dec
jo
js
cmpsb
cld
lret
les
out
push
sub
inc
dec
and
addr16
jo
inc
sub
test
insl
call
xor
in
xorl
in
or
in
cmpsb
mov
not
in
sbb
mov
cmc
inc
es
repnz
push
xchg
lcall
mov
int
push
aas
xchg
ret
jecxz
xchg
inc
test
dec
mov
shll
lahf
jge
mov
fdivs
pop
test
inc
div
push
xor
inc
jno
xchg
push
sub
jb
pushf
cld
sbb
dec
nop
adc
andb
jp
jae
add
lahf
negl
into
jae
gs
shll
rcrl
or
into
call
clc
out
into
xor
jl
cmpsl
inc
cmp
xlat
rcrb
push
subb
jno
mov
inc
mov
add
xor
jp
push
cld
add
pusha
movsb
cmp
cld
cmp
or
aas
imul
aad
cmp
test
jnp
in
adc
jmp
mov
jl
adc
mov
fwait
stos
std
push
movb
xor
and
in
add
js
adc
fbld
jno
cli
xchg
adc
out
or
or
push
xor
outsb
in
pushf
scas
or
mov
insl
and
sbb
sbb
or
dec
in
mov
scas
cmp
ljmp
xlat
iret
mov
insb
das
scas
stos
mov
repnz
push
push
enter
ret
add
fs
pop
inc
stc
mov
cs
sbbl
ljmp
lret
pop
or
jle
jmp
loop
jno
cmpsb
add
pop
outsb
fcompl
lret
enter
dec
jb
unpckhps
dec
clc
in
jo
dec
and
rclb
jmp
iret
cmpsl
push
pop
pop
ljmp
rcrl
hlt
dec
cli
sbb
push
inc
rorl
fxch
mov
cmp
mov
mov
ljmp
rcrl
jns
stos
push
sarl
mov
sbb
adc
inc
insb
movsl
dec
rorl
scas
fwait
cmpsb
jo
and
roll
inc
mov
or
in
imul
addl
jnp
movsl
pop
cld
test
xchg
xchg
and
pop
jbe
mov
mov
mov
arpl
and
cli
adc
pushf
adc
add
pop
push
adc
jmp
xchg
push
sahf
push
add
ret
ss
sbb
dec
or
cmp
sub
or
iret
insb
stc
and
lret
iret
imul
push
pop
mov
fstps
andl
and
popl
cmp
out
jp
jg
sbb
cld
xor
jl
cmpsl
shrd
das
adc
mov
sbb
or
jge
shll
in
and
xchg
loop
mov
jbe
sbb
enter
mov
rclb
pop
jnp
push
enter
push
or
sub
push
mov
das
mov
push
gs
jecxz
xor
or
cmp
push
movsl
push
lea
push
out
lret
pop
dec
idivl
xchg
ja
push
push
sbb
push
gs
int3
ja
inc
xchg
sub
and
int3
cmp
lea
push
sbb
lret
in
xchg
cs
orl
fdivs
push
and
xor
adc
lret
xorl
inc
daa
adc
icebp
out
lds
es
cmpsl
mov
add
rcl
mov
push
insb
xchg
test
inc
rorb
gs
jno
xchg
push
scas
xchg
dec
and
cs
cmp
and
adc
rcl
test
add
sar
and
mov
imul
gs
frstor
mov
dec
in
push
jmp
mov
xlat
sub
addr16
or
jecxz
dec
mov
jle
add
out
xor
xor
push
fstpl
jae
xor
jg
cmp
mov
ret
xchg
out
fimull
xor
xlat
sbb
clc
clc
lret
cwtl
push
pop
and
aad
dec
mov
rorl
ds
notb
cmp
sub
movsb
mov
sbb
mov
mov
fidivrs
stos
mov
lea
adc
cmc
leave
imul
lret
push
cmp
add
daa
loop
mov
mov
bound
mov
dec
push
out
dec
enter
inc
dec
icebp
aam
shrb
inc
push
lods
pop
arpl
jl
jl
inc
loope
sub
js
sbb
hlt
clc
dec
xor
nop
push
sbb
testl
out
jb
andb
dec
lds
movsb
push
xlat
popa
inc
ret
fsts
mov
mov
mov
pop
sbb
mov
imul
into
imul
pop
add
fst
adc
ljmp
aas
pusha
enter
test
int
jbe
repz
push
add
loope
jecxz
cwtl
xchg
insl
sbb
push
xlat
inc
add
mov
adc
mov
inc
xchg
add
cld
rorb
pop
outsl
mov
sbb
ljmp
les
xchg
mov
mov
aaa
in
in
mov
imul
xchg
mov
sub
sbb
cmp
rcrb
movsb
xor
aam
in
add
addb
push
or
xorb
insb
loope
add
jo
mov
clc
push
jne
pop
pop
arpl
push
pushf
cmp
cmp
cltd
rorb
pop
out
and
divl
cmp
xor
cltd
adc
jg
xchg
jnp
data16
rcrb
jge
pusha
imul
jns
imul
jg
dec
aaa
mov
adc
fcmove
jnp
test
sbb
jmp
bound
xor
sbb
mov
pop
jp
jb
scas
jno
xchg
push
rorb
pop
in
mov
shlb
mov
fists
push
or
xchg
fsubrl
cwtl
mov
arpl
jmp
or
mov
ficompl
sub
aaa
mov
cltd
out
add
cmp
dec
adcb
ja
js
dec
push
int3
imul
ret
push
push
pop
scas
cltd
shr
in
xor
repz
testl
imull
xchg
cmpb
cwtl
and
test
cmp
std
js
push
fsts
shlb
xlat
pop
std
sbb
scas
rorb
jmp
jl
mov
jg
loop
sub
pop
loope
add
xor
mov
lret
movsl
dec
jae
mov
vcvtsi2sdl
sub
mov
xor
xchg
lods
popf
xchg
lds
xchg
les
mov
shrb
xchg
mov
jns
add
repz
cmp
jbe
add
pushf
repz
cmp
xchg
aaa
cli
leave
mov
sbb
fadds
lock
jnp
xchg
sub
adc
pop
push
lahf
xchg
test
outsl
adc
or
sbb
adc
push
xor
inc
mov
xor
inc
add
push
sub
ds
fstl
push
cbtw
leave
sahf
inc
mov
mov
mov
sub
pop
mov
mov
or
je
mov
stos
cmp
int
inc
add
popa
mov
and
mov
fs
ficomps
addl
push
out
in
inc
nopl
bound
jae
fcmovu
cmp
jp
or
mov
push
mov
cmp
jl
call
add
sub
lods
sti
popa
cs
jmp
std
pop
ret
aad
fcoml
dec
in
sbb
sbb
out
cmp
mov
sbb
or
hlt
outsl
stos
jge
jle
lcall
mov
dec
and
mov
or
and
mov
inc
xor
cltd
mov
or
and
jl
cmp
sbbb
fisttpl
popf
daa
sbb
lods
cmp
jno
movsl
mov
dec
lret
inc
xor
mov
cmovp
xchg
aaa
mov
sub
sub
scas
sbb
jo
xchg
and
and
pop
popf
dec
jmp
cmp
and
das
sbbl
dec
aas
jp
xlat
mov
sbb
adc
cmp
push
push
cs
iret
push
pop
mov
dec
sub
xor
or
sbb
jg
pop
mov
inc
jo
push
jo
xchg
pop
mov
xchg
fildll
adc
mov
cwtl
sub
orl
scas
sbb
adc
sub
dec
or
inc
add
jns
push
pop
fcoms
inc
dec
ret
mov
adc
mov
lcall
stos
std
in
shlb
insb
insl
dec
aad
cmp
mov
test
rcll
icebp
dec
adc
jbe
repz
jb
pushf
fcomps
stc
aaa
mulb
cmp
dec
jno
shrb
aam
xchg
mov
fsts
cs
shrb
or
cli
cmp
pop
mov
mov
cwtl
add
out
push
aam
addb
stc
aaa
xor
ljmp
cld
push
sub
cwtl
test
mov
fisubrs
pop
into
pop
bound
adc
xchg
inc
adc
dec
add
xor
push
popa
mov
aaa
mov
dec
sub
mov
jbe
daa
cmpsb
jnp
hlt
pop
jge
mov
mov
cmp
lock
jae
leave
shll
inc
adcl
dec
popa
loope
repz
mov
mov
scas
lds
adcb
std
cmp
adc
dec
insb
pop
pop
xchg
cmp
clc
adc
iret
loope
testl
enter
cmc
arpl
add
sub
jnp
stc
addr16
add
dec
cmp
adc
cmpl
sbb
scas
mov
mov
das
jae
repnz
sub
xor
sub
enter
sub
mov
xor
xchg
xor
loope
sbb
push
inc
adc
mov
mov
pop
xchg
mov
call
pusha
mov
xor
pop
repz
add
and
inc
push
inc
pop
test
xchg
cmp
push
andl
dec
pop
adc
and
outsb
jg
sub
in
pop
inc
fs
shl
pop
mov
dec
push
test
cwtl
test
xchg
xlat
das
popa
mov
fldcw
dec
cmp
lock
fdivrl
out
xor
fists
in
inc
cli
int
popf
inc
dec
jno
pop
lea
loope
jnp
xchg
push
xor
movsb
sub
dec
jge
inc
sti
jge
aaa
mov
pop
mov
shll
pop
aas
mov
sbb
adc
adc
add
inc
popf
xchg
rcll
mov
mov
scas
bound
jl
test
xchg
int3
mov
movb
lea
cld
lret
xchg
mov
and
xorl
sti
test
dec
js
inc
mov
lret
movsb
loope
cmpsl
mov
inc
repz
add
test
mov
lret
stc
dec
dec
xor
test
call
ficoml
add
mov
jmp
mov
mull
inc
fwait
mov
neg
or
jg
and
xchg
jae
outsb
adcl
fistpll
sbb
fs
orl
cs
lcall
ds
pop
bound
mov
daa
data16
and
scas
jmp
add
add
add
pop
jl
or
dec
push
leave
dec
dec
push
insb
dec
xor
enter
jecxz
lods
jno
mov
ss
xor
subl
mov
inc
pop
scas
inc
in
mov
push
rolb
test
mov
sahf
fstps
in
insl
cli
xchg
xchg
inc
mov
add
stos
and
sbb
xchg
dec
pop
dec
out
ds
adc
in
scas
call
jmp
test
jmp
ss
bound
jecxz
push
jb
imul
daa
stos
scas
sub
sub
pusha
iret
push
icebp
jmp
push
mov
imul
lret
leave
lret
lea
js
mov
mov
pop
ds
aad
sahf
jge
cltd
ljmp
jno
imul
clc
loop
popf
or
lahf
cwtl
mov
or
stc
stos
mov
pop
sbb
mov
aad
sti
push
xor
arpl
loop
xchg
cmpsb
push
sub
gs
leave
dec
lret
movsb
test
mov
mov
add
je
fldl
inc
cmp
add
lahf
adc
adc
mov
shlb
xchg
call
sub
fstpt
andb
push
sub
mov
rorb
pop
or
pop
icebp
push
mov
out
cwtl
jo
push
jp
push
pop
add
call
push
mov
rorb
repz
pop
sub
inc
jg
mov
stos
xchg
loope
fcmovu
mov
jecxz
xchg
mov
inc
inc
pop
pop
jae
lods
or
test
xchg
sbb
pop
jne
in
jb
mov
and
push
mov
xor
dec
orb
lods
nop
xchg
daa
push
mov
pop
and
lods
call
out
aad
test
repnz
clc
jae
in
jmp
lods
ja
and
sbb
jae
repnz
and
xchg
cmp
aam
rep
scas
in
xor
imul
insl
push
and
pop
cmp
hlt
cmp
mov
std
mov
ja
mov
je
and
pop
sbb
iret
test
in
adc
push
aam
sbb
repz
icebp
jmp
mov
hlt
arpl
jge
movsb
xor
mov
loopne
pusha
sti
pop
push
xchg
bound
test
bound
push
adc
insb
sub
or
push
sub
lret
mov
xchg
divb
push
je
mov
imul
add
negb
add
and
es
sub
mov
add
push
std
sub
popa
xchg
out
ljmp
fcomps
cmp
jecxz
mov
mov
push
ja
sbb
fwait
outsb
inc
daa
cltd
ret
jae
out
xchg
add
adc
xchg
lods
lods
push
imul
loopne
dec
popf
mov
or
lea
pop
push
mov
adc
jl
imul
dec
mov
test
lods
dec
adc
dec
xchg
test
adc
jecxz
add
mov
ja
mov
cwtl
lds
xchg
ret
push
push
cmc
mov
icebp
pop
subb
jnp
xchg
push
add
mov
stos
scas
xor
sbb
and
xchg
push
fwait
ret
push
mov
mov
in
or
lock
add
pop
push
enter
mov
pop
clc
and
add
rcrl
sub
outsl
jl
pusha
adc
stos
pushf
enter
cmp
add
sub
fnstenv
mov
int3
xor
mov
push
fwait
cwtl
push
push
into
loopne
cwtl
xchg
dec
rorl
shrb
ret
push
in
mov
iret
int3
dec
mov
rol
inc
push
out
cmp
insl
jnp
out
ds
loopne
outsl
cli
imul
into
inc
and
cwtl
stc
cmp
cltd
cmpsb
inc
shll
cmp
xchg
jmp
sahf
int
outsb
lret
sbb
sbb
sarl
sti
out
test
adc
in
adc
push
repz
movsl
inc
xlat
roll
pop
shll
out
jmp
and
or
repz
xchg
pop
jecxz
stos
insl
mov
push
push
cmp
popf
push
mov
pop
das
out
decl
or
cmp
cmp
lds
cmp
sbb
les
shl
fdiv
and
and
clc
adc
mov
xchg
or
nop
ss
loope
xlat
inc
repnz
insl
add
mov
cmpl
sub
rcrb
stc
ja
daa
shll
pop
mov
cld
or
dec
cmc
fwait
lret
push
test
push
xor
cmp
shl
mov
dec
enter
mov
clc
cmp
push
jns
stos
inc
mov
jne
mov
adc
xchg
adc
lds
pop
in
push
pop
in
mov
out
mov
pop
notb
daa
addl
pop
imul
pop
lahf
pusha
fdivrs
aad
out
xchg
inc
inc
fistpl
and
fdivrs
or
or
jmp
inc
popf
lahf
lock
scas
sbb
not
adcl
xor
das
out
push
adc
lret
lods
mov
cmp
sbb
push
lahf
mov
xor
pop
jp
xlat
mov
dec
lock
push
out
jnp
mov
sub
out
scas
leave
lret
and
sarb
cmp
shlb
sub
xchg
clc
adc
in
test
fcompl
add
aam
push
and
or
imul
cld
dec
mov
xor
cmp
rclb
out
cmp
ret
sbb
dec
cli
je
sarl
rorb
or
dec
int3
mov
xor
sub
and
movsb
pop
sbb
cmpb
xchg
jbe
add
mov
lret
ljmp
pop
or
hlt
adcb
adc
leave
and
xor
sub
mov
scas
js
dec
loop
push
fdivrp
mov
cld
sub
ret
fimull
loop
out
add
loop
ret
dec
pop
mov
int
dec
scas
push
push
shll
mov
adc
dec
or
in
mov
add
or
int3
fsubrp
cmp
mov
test
push
ljmp
mov
pop
ror
pop
add
push
dec
shll
xchg
or
cs
lea
jle
pop
out
cmpsl
sub
xchg
pop
xlat
ljmp
js
outsb
add
ret
outsb
fadd
into
push
les
fistpll
or
mov
in
loope
xchg
cmpsb
jne
stos
add
or
in
out
cmpsl
lods
pushf
aaa
cmp
jle
and
cli
mov
or
sti
ret
ficomps
int
lea
mov
cmc
stos
adc
cs
je
insb
pop
and
insb
lret
insl
cltd
mov
dec
pop
into
lds
sbb
js
cmp
jp
xchg
push
cmp
sbb
cmp
push
mov
ds
cmpsb
mov
sbb
movsb
cwtl
xlat
test
mov
div
cld
and
adc
enter
in
jo
cs
jp
stc
xor
dec
dec
mov
inc
sti
xor
adc
aad
lods
jns
ret
aam
ret
pop
cmc
lea
xor
popf
cmp
test
push
mov
loop
inc
pop
pushf
cmp
pusha
dec
mov
int
shlb
notb
or
and
pop
push
xchg
jo
mov
or
and
mov
adc
divb
fcoms
mov
inc
rolb
enter
imul
sub
adc
xchg
push
arpl
rolb
popl
cmp
jns
lcall
mov
loop
pop
das
andl
cmp
sbb
outsl
inc
adc
mov
push
or
lcall
lahf
pop
rolb
sarb
adc
add
xchg
or
sub
mov
shl
out
push
lock
rcll
push
mov
iret
sbb
jo
int
cmp
jnp
add
addr16
pop
ror
adc
fwait
jnp
lods
pop
ror
ds
adc
leave
adc
not
lock
popf
jge
sub
xor
not
not
daa
push
pop
mov
xchg
aad
iret
push
lcall
sub
adc
mov
loop
insb
jo
add
lahf
jne
das
mov
movsl
add
lea
xor
push
stos
es
adc
or
nop
jb
mov
push
push
cmovno
rclb
stos
int
mov
push
pushf
out
jae
scas
mov
xlat
repz
int
outsl
into
into
shll
mov
enter
mov
sub
inc
mov
add
gs
or
jae
movsl
push
int3
in
pop
fucomp
sub
repnz
loop
lcall
push
sub
inc
sub
mov
enter
adc
sahf
xor
aas
lods
adc
data16
movsb
jge
leave
mov
cmpsl
lods
psubusw
dec
addr16
pop
lds
mov
lds
xchg
adc
inc
cld
inc
inc
or
movsb
pushf
push
inc
xchg
test
adc
inc
stos
adc
mov
sbb
mov
or
jae
xor
aaa
add
test
or
adc
and
inc
fdivl
xor
and
into
test
inc
cmpsb
xchg
xchg
daa
pop
push
or
sub
adc
jo
mov
scas
sahf
dec
jg
mov
into
insb
gs
test
leave
movsb
adc
das
insb
jmp
into
add
loope
icebp
pop
mov
bound
icebp
sub
outsl
mov
mov
fcomps
xor
sub
dec
sub
adc
mov
inc
and
ret
or
and
pop
mov
adc
jmp
and
aaa
adc
sub
sub
xchg
ret
mov
out
sbb
push
push
lret
lea
push
icebp
cs
repz
dec
mov
jno
into
hlt
xor
inc
jnp
mov
std
pop
mov
int3
sub
out
jnp,pt
das
mov
aas
mov
sub
xchg
and
nop
stos
aad
outsb
cmp
repnz
jmp
xchg
dec
mov
push
pop
movsb
hlt
shrb
out
add
xor
inc
xchg
xor
mov
loope
fdivrl
aad
mov
and
mov
xchg
fs
adc
jmp
or
fidivrl
push
mov
add
add
cmc
aas
adc
and
dec
enter
mov
adc
add
scas
rclb
or
lods
loopne
xor
or
lods
out
mov
push
dec
cld
and
dec
jbe
push
aad
pop
push
and
cmp
xchg
add
fsubp
pop
lret
pop
arpl
xlat
push
jp
dec
in
test
mov
push
adc
sarb
jnp
cmpsl
stos
jp
out
fcmovnb
jle
test
mov
or
or
adc
pop
or
pusha
clc
adc
xorl
mov
shlb
cmp
addr16
mov
mov
xor
push
sbb
ljmp
pop
es
lret
and
xor
in
data16
int
aas
stc
mov
jno
filds
test
inc
enter
ljmp
leave
mov
cld
icebp
sub
jg
sbb
push
sub
outsb
cmpsb
jmp
xchg
imul
and
fcomp
xchg
cmc
fdivl
dec
in
cmc
sbb
lock
ss
es
xchg
fdivrs
divl
cmp
in
mov
into
fildll
outsb
push
inc
xchg
fdivs
mov
add
jg
cs
xor
push
roll
rcll
jmp
cmp
icebp
into
std
push
dec
fcomps
cmpsb
fstpt
cmp
pop
xor
mov
jb
cmpsl
insb
or
sub
cmc
cltd
icebp
pop
into
insl
pop
xor
or
push
pop
lret
clc
mov
sub
negb
leave
add
ret
inc
push
scas
push
shr
imul
lahf
nop
in
cltd
imul
idivb
pop
xor
cmc
inc
sub
lret
sbb
dec
and
mov
movsb
fmull
cmpsl
fldl
mov
aaa
fcoml
mov
push
cmc
das
cmp
pop
and
lds
push
jg
inc
sub
add
nop
mov
cmc
mov
sarl
std
rcll
enter
aas
lahf
lcall
jnp
mov
test
mov
cmp
cs
outsb
popf
or
cmp
mov
mov
ret
sub
ss
sub
inc
pop
mov
sub
pop
lds
mov
jp
inc
dec
imul
mov
cmpsb
jle
mov
xchg
les
lea
divb
fadds
ret
test
mov
jo
into
pop
inc
mov
xor
xor
loope
cld
lock
ljmp
push
pop
mov
leave
iret
pop
out
lock
pop
jno
add
addps
pushf
insb
int
mov
rorl
xlat
stos
enter
mov
popf
xor
push
xchg
mov
sbb
pop
jno
dec
pop
imul
and
mov
lahf
push
test
in
jge
rcr
aas
mov
or
js
stos
add
sub
test
lods
mov
test
or
sbb
fisttpl
or
add
mov
or
jle
fwait
jmp
dec
sub
pop
adc
mov
jae
and
adc
fsubrl
cmp
jge
std
or
add
cmp
loope
sbb
mov
mul
das
mov
pop
dec
sbb
sub
xorb
pop
sbb
mov
mov
push
adc
sub
lock
adc
jae
sbb
ror
data16
shl
outsl
adc
adc
lods
xchg
cmp
test
mov
sub
cmpsl
push
cwtl
incl
movsb
notb
sub
pop
popa
mov
and
mov
call
bound
inc
or
lcall
pop
xor
sarl
push
jnp
dec
or
pop
ret
outsl
jae
or
int
clc
xor
out
and
jb
jb
arpl
mov
nop
lret
and
rcrl
inc
int3
mov
mov
cmpb
mov
jp
sub
inc
mov
xchg
aad
push
hlt
pop
fcomps
test
int
popl
test
cmpsl
push
xor
aad
fsubrl
sub
pop
je
pop
add
adc
in
jo
pop
jle
mov
mov
sub
dec
inc
xor
loopne
adc
mov
pop
xor
or
js
mov
nop
xchg
rolb
push
test
mov
mov
mov
lahf
shrl
push
inc
or
iret
sub
insb
xchg
fstl
add
hlt
addl
inc
loop
pop
lahf
scas
push
jae
and
pop
sahf
jecxz
stc
add
aaa
xchg
pop
lahf
mov
xlat
jns
js
pop
sub
movsl
mov
sbb
mov
xchg
jle
pushf
decl
jp
fucomp
das
pop
jbe
sti
sbb
je
pop
pop
out
out
and
mul
jmp
dec
or
movsl
outsb
push
mov
call
push
mov
mov
mov
xchg
cli
mov
movsl
in
jo
mov
inc
mov
push
add
hlt
lret
and
jmp
int3
aas
jnp
cmc
roll
inc
aad
mov
dec
std
ljmp
lahf
pop
jb
push
cmpsb
pop
add
in
lds
std
jo
jbe
movsb
testl
imul
xchg
int3
xor
inc
pushf
adc
lret
inc
adc
inc
loope
push
pop
lahf
mov
out
jle
out
xchg
aam
adc
adc
nop
adc
push
mov
loopne
sub
loop
into
pop
mov
adcl
xor
add
sbb
lods
sbb
fdivrl
hlt
es
xor
adc
fists
add
and
arpl
enter
jb
rorb
dec
xor
nop
or
adc
mov
test
and
pop
xchg
cmp
sahf
or
cmp
sbb
jl
add
dec
popf
dec
jg
scas
pop
out
push
push
cmpsl
pop
push
dec
stos
jae
sahf
mov
adc
xor
cld
insl
inc
aaa
push
test
xchg
sbb
loope
mov
inc
orb
adc
test
lret
xchg
cmpsb
mov
aaa
outsb
mov
ds
mov
rcrb
xchg
push
je
loop
jecxz
pop
xchg
cltd
inc
inc
nop
rcrl
fs
loope
cwtl
enter
xor
or
push
mov
cmc
popf
inc
xchg
into
scas
sub
jae
test
insl
mov
sub
push
adc
push
fstpl
call
int
lock
lock
add
stos
or
bound
push
in
sub
add
and
mov
mov
jb
lcall
cmpsb
sub
mov
or
or
inc
movsl
iret
subb
jge
in
jbe
daa
xorl
jbe
sub
mov
mov
test
push
addl
push
xchg
ds
jmp
xlat
sbb
in
das
sahf
out
ret
jg
sbb
sub
outsb
std
aad
add
jbe
xor
push
xor
xchg
dec
inc
inc
aas
imul
in
shr
and
shlb
cltd
imul
out
mov
cmp
pop
movsb
mov
mov
ja
out
add
test
cmp
dec
xchg
inc
pop
hlt
in
cltd
lret
outsl
lret
xor
popa
pop
cmp
adc
and
je
out
xchg
jg
dec
or
idiv
addr16
or
je
lods
das
mov
les
pop
stc
sbbb
call
fmull
pop
popa
popf
sbb
dec
push
jne
mov
push
filds
mov
sbb
inc
repz
inc
aaa
xor
pushf
sbb
decb
xchg
xchg
fwait
daa
push
mov
shll
lret
lds
push
add
sub
sahf
addb
pop
mov
inc
or
fldenv
and
fbld
xlat
push
daa
jns
int
movsl
lods
icebp
bound
ret
add
mulb
sub
mov
sbb
dec
xor
dec
push
test
lret
sub
jno
jge
adc
jno
jecxz
inc
aad
inc
mov
cmp
push
xchg
pop
jge
or
mov
add
adc
cmp
nop
mov
mov
jo
popa
mov
mov
push
xchg
pop
cmp
in
jl
xlat
fisubl
dec
hlt
xchg
xchg
inc
dec
xchg
xor
shrl
and
lahf
enter
jecxz
cmp
in
adc
das
sub
sub
sahf
out
les
mov
mov
jno
aad
push
pop
pop
lcall
cmpsl
in
outsb
pop
inc
inc
bound
aaa
mov
push
rcll
cli
out
xchg
fsubrl
mov
jle
adc
out
jecxz
xor
or
inc
lods
push
dec
mov
inc
xor
add
in
sarl
imulb
adc
xor
fidivl
je
xchg
inc
mov
cmc
loop
in
int3
xchg
insb
push
movsb
stc
insl
push
popa
out
pop
out
add
mov
cmp
mov
cmp
test
leave
fiaddl
push
mov
imul
inc
call
daa
insl
jb
mov
out
fwait
popf
ljmp
pop
mov
push
movsb
std
push
jge
mov
roll
push
dec
lahf
int3
lea
mov
in
repz
aad
sub
dec
mov
out
push
cld
inc
jmp
enter
daa
push
cld
cld
iret
dec
rcrl
out
cltd
ret
cmp
rorl
lret
sahf
stos
mov
imul
cmpsb
jno
sahf
hlt
and
outsb
mov
add
mov
cmp
loope,pt
das
data16
cmc
ror
push
or
out
add
lods
jge
outsb
mov
add
jne
out
push
mov
aam
add
aam
decl
pop
cmpsl
push
or
rclb
stos
lock
cmp
or
into
sub
push
pop
sbb
dec
aaa
xchg
adc
inc
aam
cmpsb
gs
cmp
cmpsl
jmp
cmp
and
mov
sbb
mov
clc
lret
cmp
loopne
mov
cltd
mov
fimuls
and
lods
and
leave
pop
pop
aas
push
int
mov
and
out
sub
test
out
xor
push
andnps
adc
push
sbb
iret
fstps
sub
dec
and
sub
mulb
cld
xchg
js
adc
mov
icebp
push
sbb
and
adc
shrl
adc
cs
cmpsb
dec
mov
mov
xchg
int
and
aaa
mov
push
pop
in
sbb
xor
xor
in
imul
jns
sbb
jnp
leave
movb
daa
pop
shlb
test
lods
pop
wrmsr
in
sub
jns
dec
pop
xchg
cmc
and
out
sub
and
cmp
loopne
daa
sbb
loope
cmovs
in
scas
insl
jb
les
test
add
mov
cmpsb
fisttpl
and
sbb
jb
ret
push
push
mov
cld
lahf
in
movsl
inc
jno
test
mov
xlat
sub
roll
movsb
jnp
shrb
inc
cmp
fdiv
cmp
xor
popa
ds
inc
sub
sub
or
arpl
repnz
sbb
scas
cmp
fdivs
jg
lcall
jp
and
sbb
mov
sbb
sbb
out
jns
jnp
call
sub
out
adc
jp
dec
push
xor
out
add
mov
cmp
and
add
or
push
ficoms
pop
mov
jae
dec
sarb
ret
pop
loop
pop
loopne
add
dec
sbb
fs
xchg
inc
cmc
cmpsl
sub
insb
sahf
adc
dec
test
push
ja
test
add
leave
push
test
xlat
or
aam
sub
add
dec
adc
sbb
je
push
mov
mov
jnp
adc
dec
insb
and
imul
sarl
cmp
xor
js
inc
ds
cmc
rorl
shll
jmp
pushf
ja
push
pop
jle
adcl
in
jle
je
mov
sbb
sub
call
rcr
lds
clc
fadds
lret
mov
insl
pop
subl
test
pop
jp
cwtl
mov
adc
lock
lret
insl
push
xchg
out
pushf
hlt
mov
outsl
pop
xor
ds
cmp
and
or
fistpll
pop
dec
js
add
adc
sub
jne
sub
sub
aas
dec
pop
stos
ret
mov
int
xchg
mov
hlt
out
fnstsw
sbb
push
lret
sahf
push
dec
mov
jle
cmp
jle
pop
xor
push
mov
fildl
mov
dec
xor
push
rcl
jno
sub
stc
jnp
mov
fsubrl
aad
mov
ret
sbb
lock
inc
xor
outsl
call
xor
ljmp
lds
fbld
imul
xchg
cwtl
das
mov
add
jo
sbb
push
push
pop
rorl
dec
xchg
dec
and
pop
test
sbb
mov
cmpsb
mov
add
dec
sbb
sti
cmp
sbbb
dec
rorl
xor
out
dec
jo
jnp
jnp
add
in
sbb
dec
mov
mov
jl
popa
cmpsl
xchg
jo
mov
in
js
and
nop
sbb
mov
jno
mov
mov
mov
xorb
dec
xor
xchg
lods
xor
fdivs
fwait
rorl
mov
out
mov
imul
mov
push
mov
inc
push
fnstenv
pop
popa
popa
stos
clc
orb
mov
outsb
jno
push
push
xchg
int
jecxz
outsb
aaa
jbe
outsl
fwait
cmp
icebp
lods
push
dec
and
push
and
cmp
scas
addl
mov
cmp
in
dec
test
add
loope
mov
mov
dec
pop
scas
inc
mov
xchg
xor
push
cs
frstor
or
xchg
inc
ret
sarl
sbb
cmp
mov
leave
jnp
stos
ja
pop
mov
ds
lcall
adcb
push
iret
xchg
add
add
int3
pop
push
cmp
xor
iret
divb
or
jbe
fcompl
adc
or
xchg
dec
dec
fst
out
sub
and
lock
test
into
leave
xor
xchg
mov
add
add
ja
dec
add
subps
fs
jmp
sbb
subl
lods
cld
mov
push
xor
mov
test
mov
clc
movsl
xchg
jae
mov
in
lods
mov
mov
sub
sbb
cmp
cmp
and
in
mov
fsub
mov
mov
sub
lock
ljmp
or
movsb
les
push
mov
sbb
jecxz
inc
sub
rorb
lock
push
add
mov
imul
mov
push
add
int
lds
cli
sti
mov
push
lret
push
add
push
sub
or
out
hlt
or
lret
dec
lcall
pop
pop
sub
sbb
sti
int3
fidivrs
les
and
adc
sarl
inc
inc
fnstsw
mov
js
adc
jmp
aas
fisubrs
push
mov
sub
cli
mov
jbe
cwtl
and
mov
add
das
inc
jns
or
xor
cmpb
pop
jle
cmpl
mov
mov
cld
mov
int3
mov
add
rcrl
inc
shlb
cmp
xor
fimull
das
jecxz
mov
jl
xchg
jecxz
mov
mov
mov
inc
aad
daa
jl
aaa
mov
mov
and
cli
incb
das
nop
mov
inc
cmp
cmpsb
jnp
imul
mov
pop
xlat
jecxz
fidivs
popf
sub
ds
popf
stc
mov
fnstsw
mov
je
push
jge
jle
adcb
xor
mov
sbb
pop
imul
fsubrp
stos
pusha
movsb
aam
decl
mov
lret
std
mov
lds
push
enter
adc
xor
inc
or
lods
xor
push
loopne
or
xor
sar
mov
pusha
lret
pop
inc
xchg
loopne
je
mov
ja
push
sbb
or
arpl
ja
or
and
imul
test
jge
jp
sub
mov
cmpsb
roll
cmp
clc
fmul
adc
cmp
add
negb
negl
and
popa
in
lods
jne
out
stc
fwait
xchg
dec
out
add
rcrl
jb
sti
pop
call
cmp
cmc
outsl
pop
out
rcll
jp
xlat
leave
imul
pop
mov
add
inc
rcpps
jbe
adc
nop
mov
xor
cmp
push
ret
je
mov
lea
icebp
call
xchg
inc
addl
xor
add
ss
imul
movntq
jne
jg
or
notl
notl
or
fcomip
adc
sti
jle
mov
mov
adc
sub
jge
loop
sub
mov
mov
push
cmp
pop
adc
xchg
xlat
call
inc
insb
push
add
popa
ret
and
and
adc
cs
fdivr
nop
pop
shl
sbb
push
roll
inc
mov
xor
int3
popf
orl
dec
sbb
adc
jmp
sub
negl
adc
dec
lea
popf
lds
lock
movsb
out
or
and
jns
and
add
xchg
cmp
loop
clc
add
inc
add
xor
xor
inc
pop
out
aad
notb
adc
je
mov
or
cmp
shlb
and
mulb
xor
inc
sub
pop
repnz
mov
and
lods
cli
testb
push
add
pop
and
jle
xchg
lcall
cmp
sahf
sub
test
add
push
loop
push
outsl
adc
cmpsl
mov
les
push
sbb
inc
pushf
insb
fstl
out
sti
int3
cli
lahf
xlat
shlb
mov
sbbb
push
cwtl
jnp
adc
out
lret
mov
scas
imul
les
pop
ss
jo
sbb
std
je
sbb
push
jo
cli
mov
int3
jno
and
push
push
scas
jp
adc
dec
xor
popf
sub
loope
sbb
and
or
xchg
adc
inc
pop
outsb
cmp
pop
cltd
xchg
or
push
shll
pop
mov
adc
and
mov
and
insw
cmp
stc
arpl
sub
sub
dec
enter
sbb
jns
sub
mov
push
adc
pop
mov
add
push
aam
into
mov
popf
test
ffree
out
push
scas
shll
test
xor
push
add
stos
pop
add
in
lods
jl
mov
mov
jnp
cwtl
jg
or
dec
lock
lret
inc
xor
mov
inc
jb
repnz
jecxz
loopne
xchg
aaa
inc
pop
out
cmpsb
xor
movsl
push
mov
into
mov
xchg
enter
dec
mov
mov
xchg
adc
adc
outsb
xchg
sub
icebp
adc
fstpl
jp
adc
xor
mov
mov
lods
jae
or
roll
out
cmp
cmp
pop
pop
push
scas
icebp
cltd
mov
mov
notl
xchg
movsl
mov
lods
push
inc
jae
into
stc
out
mov
and
cmpsb
shll
stos
icebp
pop
repz
movsb
addl
cmp
cmc
adc
fwait
adc
jmp
into
iret
xchg
add
inc
lcall
test
jge
fstpl
sbb
scas
je
xchg
dec
lea
push
mov
popa
das
sbb
cmp
jge
pop
arpl
sbb
out
inc
xchg
rclb
popf
lret
push
pop
mov
add
add
movsl
inc
stos
adc
pop
or
and
add
std
test
insl
dec
pop
test
jnp
jb
sbb
or
cltd
mov
sbb
fstps
jp
data16
add
push
lods
pop
pop
shlb
fwait
jp
and
dec
rcrb
out
add
cld
pop
mov
adc
rolb
pushf
in
adc
mov
fs
xor
push
jl
mov
jp
sar
fdivrl
fwait
aas
or
lods
adc
ds
adc
pop
repnz
daa
jle
outsb
or
sahf
ret
pop
stc
or
testl
adc
sub
iret
jecxz
sbb
mov
sub
mov
add
sahf
xchg
fildl
out
jns
popa
dec
gs
insl
mov
loopne
ficompl
call
push
mov
mov
dec
inc
push
mov
pushf
push
sbb
jge
cmp
data16
push
xchg
out
jb
pop
push
fwait
cmpsl
ret
jns
mov
into
repnz
jmp
jmp
mov
iret
sarl
ret
js
jne
push
scas
sti
add
leave
mov
int3
iret
sub
mov
mov
inc
pop
or
sbb
and
filds
cwtl
or
js
inc
xor
out
dec
scas
gs
add
loop
jo
sub
jle
and
out
cmp
ja
or
nopl
mov
jns
movsl
xchg
stos
xor
adc
int3
sbb
sti
insb
inc
iret
and
daa
aas
xchg
std
repz
push
lret
and
pop
movsb
lret
pushf
and
xor
ficoms
or
jbe
rorb
mov
push
cld
mov
sub
and
xchg
mov
mull
je
inc
out
das
std
dec
fistps
leave
les
daa
fstl
pushf
jo
es
push
jnp
xorl
jle
jns
xor
out
sub
js
push
pop
push
pop
push
cmpsl
mov
lea
pop
mov
xchg
jne
cmp
addr16
es
jecxz
iret
and
mov
add
cmpsb
fdivl
mov
dec
inc
lret
lea
loop
fnstsw
cmpb
ds
bound
sub
out
and
push
ret
or
dec
push
fnstsw
jecxz
cmpsb
les
pushf
dec
and
fwait
sti
cwtl
int
sbb
gs
cmp
stos
pop
pop
mov
popf
mov
mov
jge
movsl
cs
lods
test
lahf
inc
dec
xchg
mov
aam
jb
dec
xor
fwait
mov
scas
push
add
sahf
filds
dec
adc
sti
xchg
mov
addb
lcall
mov
add
jb
inc
cs
imul
cmp
cmp
adc
andb
and
aaa
fxch
mov
out
mov
bound
or
les
int3
lods
fildl
mov
inc
sbb
add
aas
sbb
pushf
bound
loopne
jne
aad
dec
and
pop
and
into
mov
cmp
test
mov
mov
jl
or
push
jne
notl
inc
pop
and
ret
push
cld
push
mov
movsb
loop
xchg
pop
psraw
test
in
fs
cmp
sbb
mov
sbb
iret
sbb
repz
mov
add
pushf
roll
push
and
or
test
add
xor
roll
gs
jns
and
dec
daa
negl
lods
imul
jmp
or
xchg
sbb
mov
jp
jmp
iret
push
mov
sub
jne
pushf
sti
add
inc
ret
pushl
fbstp
xor
leave
or
ret
sub
xor
les
xchg
inc
or
add
addr16
bound
aas
ret
stos
push
inc
addr16
mov
in
pop
xor
and
mov
jne
outsb
push
mov
and
pop
sbb
ljmp
cmp
lea
les
rolb
fbld
pop
xlat
ja
jmp
or
push
mov
add
push
lret
jno
fs
ljmp
or
pop
rcll
in
cmpsb
daa
aaa
jbe
jo
ja
push
sbb
lea
mov
fistpll
int
sbb
adc
loope
jge
mov
pop
ds
mov
mov
add
push
xor
push
fistps
cmp
xlat
and
cmpsl
adc
test
cmp
mov
mov
jge
add
cli
pop
sti
cmpsl
sahf
cmpsl
mov
mov
pop
stos
and
dec
scas
mov
jecxz
js
insl
or
outsl
mov
adc
movsl
or
cwtl
sub
arpl
cmpsb
adc
xor
jl
lahf
push
sub
fld
leave
xor
hlt
leave
out
stos
call
push
sbb
dec
lret
outsb
sbb
arpl
pop
mov
insl
fdivrp
inc
add
adc
cs
aam
jo
mov
mov
cli
push
lods
mov
mov
jle
je
sarb
jg
mov
rcl
fidivs
xor
fstps
mov
daa
and
adc
lcall
push
mov
mov
xchg
out
sbb
icebp
mov
jno
adc
inc
jns
imulb
aad
fimull
andb
cmp
inc
and
inc
add
pushf
fs
or
and
jmp
nop
xchg
pop
mov
mov
jl
cmp
dec
push
mov
shlb
nop
pop
mov
aad
filds
jg
mov
jecxz
dec
pop
inc
sbb
test
push
mov
push
xor
cmp
jnp
mov
xchg
sub
sbb
add
sub
inc
imul
testl
iret
or
rcrl
movsb
mov
mov
out
sbb
sbb
pop
push
cmpsb
arpl
dec
mov
clc
aad
and
movsb
pop
mov
mov
add
out
adc
adc
pop
push
mov
add
jo
test
xor
outsl
in
orb
add
or
sbb
cmpsl
jnp
mov
mov
icebp
jmp
test
adc
adc
push
sbb
inc
inc
mov
lods
jg
mov
add
cmpsl
aad
je
into
aam
or
mov
arpl
filds
aaa
ret
pop
lods
test
jae
fdivrl
jle
imul
dec
dec
iret
inc
icebp
fnstcw
adc
and
inc
ss
dec
mov
stos
lret
sub
into
js
inc
data16
adc
jo
mov
add
fsubrs
dec
scas
in
adc
xchg
xchg
lds
leave
dec
pop
stos
fmuls
ljmp
xlat
sub
test
es
mov
mov
icebp
mov
xchg
push
mov
mov
sub
arpl
jns
or
lea
cmp
in
push
fwait
icebp
pop
iret
andb
adc
leave
mov
mov
pop
ror
dec
test
in
jl
mov
arpl
pop
mov
cs
dec
fs
jns
push
mov
and
jmp
xchg
popf
or
sti
pop
push
mov
jbe
push
pop
sbb
hlt
bound
test
aam
fadd
aas
gs
inc
xchg
and
popf
push
mov
jl
push
inc
pop
fists
inc
cld
cld
testl
xchg
lds
loopne
sub
icebp
outsb
int3
adc
xchg
sbb
jge
shll
cmc
inc
sar
addb
adc
push
xchg
push
ljmp
mov
insb
orl
mov
pop
jmp
cmp
fbld
xlat
pop
jne
fndisi(8087
shll
ljmp
dec
popf
test
jge
pop
lcall
aas
cmp
fwait
jp
movsl
mov
into
sub
sbb
ljmp
push
dec
jne
seta
adcb
sub
cmp
push
pop
xchg
cltd
rcrb
push
out
mov
xchg
inc
xchg
mov
hlt
mov
loop
stc
cmp
call
stc
nop
pop
push
pusha
arpl
jle
lea
stos
loopne
loopne
or
jecxz
jmp
jne
outsb
jb
adc
fadds
push
addb
leavew
fisubrs
enter
arpl
mov
and
and
push
lret
out
push
dec
jmp
and
nop
in
mov
mov
pop
loop
bound
pop
repnz
mov
xor
stc
jecxz
scas
mov
test
jo
in
movsb
loopne
mov
pop
inc
xchg
stos
push
fisttps
ficoml
push
jg
push
testb
sub
ljmp
jno
jle
mov
ds
in
call
jmp
into
test
adc
and
pop
mov
and
xor
cmp
andb
sbb
cmp
inc
pop
mov
notl
xor
adc
or
cmp
xchg
mov
cli
scas
mov
push
ss
lods
inc
fcomps
and
or
cmpsb
outsb
pop
cli
add
gs
cmpsb
adc
imul
lods
ss
adc
sub
cmp
movsl
jmp
lret
push
test
insl
xlat
mov
sahf
sub
push
fcompl
and
inc
mov
mov
fcompl
push
pop
imul
jmp
sbb
pop
scas
insl
push
cltd
sti
pop
fldcw
ljmp
jbe
scas
sub
jns
jmp
cmp
push
fsubrs
das
push
jno
jbe
aam
test
int
pop
mov
mov
fsubrs
mov
stos
mov
imul
arpl
jae
mov
test
je
dec
sti
jo
dec
mov
fsubrs
in
in
xorl
or
mov
inc
mov
das
nop
ds
cmpsb
cs
das
or
cmp
add
sub
in
iret
ljmp
ret
gs
into
xor
jae
mov
hlt
mov
jge
xchg
inc
fbstp
repnz
or
mov
ret
dec
sub
sub
ljmp
shll
mov
movsb
push
and
std
std
test
jbe
call
fcoms
in
lret
fisttpl
cmp
cmpsb
shll
cmc
std
xchg
rol
hlt
lcall
jne
cmc
jbe
fisubrl
lahf
mov
xchg
subl
das
jle
jmp
fsts
dec
xor
mov
inc
popa
sarb
xor
add
imul
jle
add
lods
or
mov
push
shl
pushf
mov
outsl
insb
hlt
fwait
rcl
xchg
cmp
cmp
test
das
xor
jns
inc
xorl
or
push
aaa
test
add
aas
fbld
cmp
lds
or
in
mov
sti
dec
cmp
xchg
loop
test
aas
sbb
movsl
loop
or
adc
pop
pop
cmpsb
and
stos
sbb
fcomip
inc
sub
js
dec
sbb
xchg
repnz
sbb
add
mov
ds
inc
add
test
jbe
shl
out
mov
mov
andb
icebp
cmp
sbb
sahf
idivl
dec
inc
addl
fistl
lea
ret
sub
sbb
and
mov
pop
popa
bound
repz
fbstp
clc
inc
sahf
fistps
sbb
inc
sub
out
ds
sbb
lret
dec
mov
and
mov
nop
loop
lods
mov
pop
fmull
stc
xor
and
in
and
push
fadd
mov
lods
clc
mov
jl
pop
jbe
adc
and
sub
hlt
fs
ret
pop
jns
ja
sbb
adc
jmp
outsl
or
cltd
imul
push
inc
jg
subb
or
sbb
and
insb
enter
xor
jbe
add
sub
fidivrs
lea
test
cmp
mov
mov
xor
aam
nop
sbb
inc
mov
jmp
and
loope
xor
mov
aad
nop
movsb
pop
lods
movsb
dec
das
and
mov
popa
cmpsb
pop
mov
in
mov
lahf
mov
cmpb
pop
loop
test
mulb
xchg
repz
pop
out
testb
push
mov
fidivs
fcomp
stc
jbe
jg
and
or
cmp
aam
int3
outsb
pop
rclb
orl
or
fsubr
xchg
jne
xchg
jg
push
xchg
fstpt
fildll
mov
bound
adc
into
es
push
stos
and
xchg
fisttps
lcall
mov
dec
inc
ds
std
cwtl
inc
loope
add
ss
test
dec
inc
fbld
mov
aaa
lret
sbb
sahf
rcrl
adc
xor
adc
sbb
jmp
xchg
inc
fwait
in
not
les
das
push
pop
in
xchg
sbb
push
ficoml
arpl
pusha
mov
mov
lds
xor
loop
mov
lds
daa
movsl
mov
xor
xchg
jne
jnp
out
sbb
push
jne
and
cmc
fcomps
movsl
cs
fsubp
mov
cmp
sub
addb
fdivs
lods
popa
xor
xor
push
int3
xchg
inc
hlt
insb
dec
js
ja
sub
flds
mov
outsl
xchg
stc
cmp
adc
sbb
into
mov
xor
add
testl
mov
and
cmp
sbb
xchg
jo
jecxz
sub
xchg
mov
jecxz
movsl
or
jp
cmc
cmpsl
mov
push
subl
pop
movsb
pop
repz
xor
in
lods
inc
in
fsubrs
mov
scas
jp
jl
sub
in
push
imul
mov
cmp
dec
xchg
scas
xchg
into
ds
es
clc
aad
les
sbb
cmp
sbb
lea
leave
repnz
push
loope
and
mov
xlat
push
pop
pop
and
into
ss
mov
jns
lahf
sarl
sub
mov
outsb
push
and
push
in
adc
mov
or
mov
push
dec
in
fstpl
xor
shlb
pushl
mov
jp
sub
movsl
mov
jo
add
outsb
pop
in
insl
out
aam
jg
mov
and
outsl
lds
stc
cmp
jne
daa
cmc
inc
sbb
aad
xor
cmp
subb
mov
mov
or
repz
test
xchg
mov
mov
data16
adc
cs
sbb
push
add
ret
sbb
sub
mov
sti
mov
mov
mov
push
add
in
fcmove
bound
pushf
int3
dec
ja
mov
stos
jg
lock
aam
lea
out
mov
xchg
js
in
xor
jge
xchg
lret
cmp
adc
or
jg
test
sub
lret
cmpsb
dec
int
jne
inc
out
data16
inc
iret
fsub
divb
lahf
pop
pop
in
cmp
ss
fdivrl
push
add
mov
dec
jb
inc
nop
enter
cmp
xlat
lret
mov
cs
pushf
arpl
mov
pop
out
push
xchg
xchg
and
add
loope
mov
pop
sti
xor
xchg
jle
insb
sub
jmp
and
sbb
mov
sbb
subb
call
ss
dec
test
cltd
pop
fmull
jl
arpl
add
decl
cwtl
aas
inc
mov
lea
pop
mov
mov
pop
loope
xchg
cmpl
lea
lea
and
dec
sbb
in
ror
adc
pop
popf
or
mov
sub
jo
push
and
stc
add
sbb
xchg
pop
call
and
jo
outsl
icebp
mov
aam
inc
enter
xor
inc
add
les
pop
insb
add
fnsave
mov
and
sbb
call
cli
inc
je
jle
enter
ja
sbb
adc
mov
into
jle
in
aaa
loope
mov
push
out
inc
cmpsl
sahf
mov
jo
xchg
test
or
loop
and
jp
stos
std
mov
and
loop
rcll
dec
mov
and
into
push
ja
fnsave
or
adc
cmpsl
clc
xor
lock
push
std
shrb
aam
cmp
cmp
ljmp
stos
xor
cmpsb
sbb
xor
add
in
mov
mov
rsqrtps
stc
sbb
and
repnz
cwtl
jge
ret
sarb
dec
dec
mov
pop
dec
cmp
lret
push
jg
cmp
es
lds
aad
adc
cld
dec
pushw
jns
in
mov
pop
add
inc
movsl
inc
insb
dec
fwait
jbe
jae
push
sbb
mov
or
push
test
out
sbb
rorl
jns
push
repz
daa
mov
jp
icebp
mov
inc
dec
mov
mov
cmp
cmpsl
aaa
test
jno
adc
lret
sbb
cmp
hlt
and
dec
mov
das
xor
movsb
jle
mov
mov
push
cli
insb
mov
inc
lcall
push
ret
push
xchg
inc
pop
nop
jb
pusha
inc
push
aas
dec
repz
xor
inc
daa
adc
and
and
inc
out
test
adc
xor
inc
clc
and
cvttps2pi
xorl
dec
lahf
adc
into
pop
jg
inc
and
xchg
ret
jne
fs
insb
out
xchg
sub
or
xor
cmp
pop
out
into
fcos
jns
loop
add
sbb
faddl
pop
or
out
test
xor
out
adc
cmpsb
into
xor
lret
push
je
jne
jecxz
adc
push
and
call
cmp
les
and
gs
xor
cmp
cmp
jge
stos
cli
adc
push
pop
push
mov
idivb
push
cmp
cmp
test
mov
movsl
jle
ret
scas
cmp
xor
dec
xchg
mov
mov
pop
inc
push
das
mov
scas
and
stos
xor
add
xor
mov
dec
outsl
xchg
pop
in
dec
cltd
lock
sub
sub
push
les
sub
in
inc
jno
inc
popf
test
or
out
jno
mov
xor
imul
mov
cwtl
xor
sub
pop
xor
lret
les
xchg
fmull
xor
jmp
xlat
jmp
test
movsb
stos
icebp
movsl
dec
cmp
fs
xor
scas
stc
stos
fimull
push
test
xlat
adc
jno
inc
cmp
stc
flds
pop
sbb
mov
cmp
and
mov
mov
loope
xor
daa
cwtl
jbe
xor
filds
test
pushf
jmp
jge
mov
mov
in
jmp
xor
pop
jle
mov
nop
jbe
sbb
rcrl
lods
test
movsl
add
cmpsl
cmp
push
leave
fildl
pusha
mov
dec
pop
and
jmp
lcall
rep
jns
pop
cmp
js
fcmovne
mov
xchg
add
movsb
and
xor
movsb
jp
dec
cwtl
inc
mov
jle
ss
or
sbbl
sbbl
imul
or
imul
out
pop
insb
mov
aaa
lock
add
add
lock
xor
ss
cmp
lods
xchg
fwait
test
sahf
sub
jecxz
xrelease
sub
jne
repz
sarl
jecxz
aad
data16
sahf
ss
and
mov
jp
scas
cmpsl
cs
es
push
or
mov
nop
xchg
sub
imul
ret
test
lret
push
mov
inc
sbb
dec
mov
or
inc
addl
stos
stc
mov
cmc
leave
mov
in
add
jp
xor
pop
push
lds
jnp
pop
mov
pop
in
jl
outsb
xor
jbe
test
repnz
mov
cmp
pop
pop
int
sbb
mov
jg
loop
jmp
stos
fbld
push
in
adc
int
jl
rorl
or
jne
test
cwtl
inc
cltd
sbb
xchg
bound
and
movsl
xor
sub
dec
in
inc
out
fimull
xor
mov
mov
jnp
mov
xchg
fmuls
and
jl
ljmp
jmp
mov
sti
and
or
ret
repz
jp
cmc
cmp
mov
mov
sub
mov
sub
cmp
push
add
jmp
loope
outsl
frstor
cmpsl
fidivrs
push
push
cli
or
push
push
xor
jns
pop
adc
jae
jns
shlb
shr
pop
stc
loope
ljmp
jmp
sub
insl
sub
pop
mov
or
insl
mov
cmp
rolb
push
in
cmpsb
jle
daa
repnz
add
cli
pusha
pop
test
sti
jbe
xchg
and
or
fnsave
dec
push
repz
pop
loopne
out
fwait
pop
int3
mov
pop
lcall
sub
mov
inc
pop
sub
enter
aas
in
ds
or
in
add
mov
push
mov
cmp
xor
adc
arpl
aaa
and
adc
jbe
into
sbb
lret
sarl
or
dec
lods
jnp
jp
jle
sahf
lds
das
mov
aaa
test
outsl
mov
dec
inc
repnz
cmp
iret
pusha
pop
and
sbb
mov
xor
xchg
jl
fisubl
cmp
or
scas
das
call
cmp
subl
lret
mov
sbb
fs
xor
dec
cmp
imul
jb
stc
pop
mov
ja
xchg
mov
dec
adc
lods
dec
or
mov
sub
mov
sarl
jl
push
mov
jg
xchg
iret
movsl
or
push
cmp
daa
jo
pop
dec
push
xchg
es
shl
sbb
rolb
xchg
xor
pop
ja
stos
and
out
jl
test
loop
push
in
fs
xlat
mov
mov
lods
das
xor
adc
lea
pop
outsl
movsl
xor
aas
call
push
in
push
sbb
mov
lds
pop
cltd
xor
dec
and
mov
std
cmp
sub
xor
cld
adc
fiadds
inc
and
bound
femms
ljmp
cmpsl
mov
xor
ret
mov
push
xchg
xchg
xchg
pop
add
and
pop
and
pop
pop
popf
jno
out
mov
lahf
sbb
mov
imul
xor
lods
aas
shlb
mov
lahf
xchg
xchg
add
jno
in
inc
mov
fwait
jp
dec
lcall
adc
or
insb
lods
fwait
nop
dec
sub
xlat
and
fmull
lret
push
and
popa
rcr
mov
mov
cld
dec
pushf
loop
lcall
movsb
pop
jo
xchg
and
push
std
cltd
cwtl
or
insb
xchg
lahf
test
cmc
cmp
out
adc
cmp
cltd
lret
inc
mov
in
mov
test
scas
pop
sbb
addr16
xchg
arpl
lcall
mov
xor
inc
sahf
cli
mov
enter
jecxz
fisubrs
push
or
mov
daa
push
scas
int3
inc
sbb
xor
jno
fst
pop
mov
xchg
adcb
push
jno
std
mov
loopne
push
cmpsb
shlb
fidivl
lcall
in
lods
fistpll
cwtl
shl
mov
push
shll
rcrw
and
negl
or
adc
jge
in
push
or
push
push
sub
popf
mov
out
mov
stos
pop
push
dec
jecxz
jbe
pop
add
cmp
addr16
jno
dec
lret
mov
push
xor
fistps
cwtl
cmp
dec
inc
xor
mov
into
jno
jmp
cmpsb
wrmsr
in
jns
jp
mov
repz
fmull
pop
dec
sub
call
addb
and
or
adc
mov
pushl
adc
inc
adcb
daa
mov
data16
stos
inc
imul
fsubs
adc
in
ror
mov
push
fiaddl
mov
aas
pop
pushl
cmp
popf
pop
add
subb
nop
dec
jne
pop
into
mov
lret
push
push
iret
and
dec
js
adc
push
pop
popa
jb
popf
mov
add
fcomps
data16
jmp
cmp
and
add
sub
loopne
cmp
sarb
mov
js
pop
fdivs
ret
or
push
repz
aaa
out
xchg
jno
mov
mov
std
aam
adc
gs
lds
push
pop
add
mov
adc
jmp
sbb
nop
sub
shlb
into
sub
fs
sbb
cli
std
in
hlt
retw
push
ljmp
fnstsw
sub
fsubrl
rclb
mov
xchg
xorb
sub
das
lcall
test
pushf
xchg
popf
push
sbb
je
cmp
notb
cmovns
repnz
cwtl
or
jne
push
pop
ret
sub
mov
inc
insl
jo
mov
out
cld
je
mov
jae
mov
lcall
add
repnz
pop
testb
jg
es
sbb
insl
xor
das
pop
pop
xchg
xchg
sbbb
loop
shlb
mov
xor
shl
push
pop
inc
adc
frstor
pop
lds
or
jns
dec
loope
jg
jae
mov
roll
sub
add
mov
mov
movsb
sahf
das
push
fdivl
sahf
mov
loopne
and
pop
fcmovnu
pop
sub
btc
mov
or
adc
mov
bound
imul
pop
and
fbld
mov
push
ficoml
out
dec
sbbl
lock
xor
aam
addl
mov
inc
pusha
rorw
lret
jmp
aam
mov
push
pop
aad
es
lcall
loop
push
jo
js
inc
ret
mov
js
sbb
push
pop
dec
fsubl
mov
lcall
add
subl
xor
lds
lock
dec
push
out
jo
loopne
rolb
ljmp
cld
jge
nop
repnz
add
sbb
jno
ret
test
cmp
lock
add
pop
popa
or
imul
mov
loope
cmp
out
mov
sub
std
mov
dec
int3
sbb
xor
test
cmp
das
mov
daa
jb
iret
sub
or
sbb
inc
push
movb
push
rol
addb
adc
mov
sbb
lea
cltd
sahf
aaa
jle
inc
outsb
mov
jge
dec
aaa
inc
jb
jecxz
jae
aad
icebp
movsb
inc
mov
in
in
das
imul
inc
fcomip
cmp
add
cmp
ja
icebp
jne
mov
add
push
mov
and
call
jmp
add
pop
pop
mov
in
cs
inc
cmpsb
repz
rorb
clc
aaa
clc
dec
xor
push
idivb
divl
push
or
mov
inc
pop
stos
mov
jle
arpl
pop
roll
leave
stos
outsb
or
mov
adc
nop
movsb
rcrl
test
and
xor
jnp
enter
cmp
inc
push
pop
call
outsb
and
xor
and
imul
lods
ss
dec
jns
pop
and
cmpsl
xchg
xchg
sbb
fwait
iret
xlat
jmp
out
subl
and
jae
mov
mov
pop
jo
push
sub
test
dec
xchg
in
shlb
cltd
icebp
lds
test
fwait
sti
cmp
jb
ret
add
xchg
pusha
loope
xchg
or
cli
fimuls
mov
fsubp
push
or
jp
sbb
and
adc
sbb
icebp
roll
jle
scas
fmuls
aaa
push
paddusb
mov
sbb
stos
iret
test
push
imul
cltd
add
outsl
fldenv
sarl
call
sbb
pop
push
insl
sub
lods
jmp
enter
call
push
and
fdivrs
test
addb
jb
add
data16
jbe
test
push
mov
scas
je
test
lods
inc
in
sti
push
jl
mov
push
push
in
cmc
fstl
ret
stos
fstps
mov
clc
in
xchg
xchg
mov
sub
sahf
cmp
pop
adc
xchg
call
pop
call
leave
jecxz
cmp
loopne
push
or
mov
pop
adc
xchg
cld
test
xor
bnd
add
pop
xchg
xor
out
idivl
or
inc
or
ljmp
or
nop
jp
shll
mov
xchg
sti
loop
and
cld
sbb
dec
dec
jae
je
daa
xlat
loopne
xor
inc
aam
add
les
or
clc
cmc
xor
or
push
cld
pop
inc
cmp
lcall
lret
ljmp
fwait
fs
pfmax
adc
jecxz,pn
push
adc
xlat
lods
fnsave
mov
pop
sbb
scas
pop
pop
fs
int3
out
aam
sub
dec
cmp
xchg
cmp
incl
xchg
or
xchg
clc
sbb
clc
into
aad
aad
andl
pop
xchg
sbb
daa
mov
and
mov
js
lds
fs
outsb
scas
dec
cmpsb
fstl
stos
jno
pop
dec
les
sbb
mov
test
testb
fists
jbe
push
imull
jbe
fs
int
cmp
rcrl
es
cmp
jmp
enter
sbb
pusha
jns
stos
addr16
jmp
dec
cmc
loope
jle
fdivs
std
out
scas
mov
jo
imul
mov
dec
in
jnp
mov
in
mov
mov
sbb
sub
cmp
mov
mov
jle
movsl
rcrb
dec
insl
ficomps
pop
xchg
hlt
sub
push
adc
push
std
fld1
jecxz
mov
je
idivl
inc
add
xorb
rorb
or
xor
into
push
lahf
je
jae
xchg
imul
push
dec
sub
sub
xchg
mov
and
adc
sbb
ja
jnp
adc
cmp
stos
int3
popa
inc
mov
push
or
sub
movsl
pop
dec
imul
mov
jno
add
and
icebp
push
gs
xor
xchg
std
pusha
pop
pop
sub
arpl
jo
inc
add
inc
fidivrl
test
or
mov
shll
add
dec
mov
inc
pushf
loope
mov
add
pop
mov
inc
mov
shrl
and
sub
push
inc
and
test
sbb
dec
mov
addr16
cmp
test
push
and
fcmovnb
jne
js
xor
mov
xchg
push
iret
pusha
mov
adc
adc
jb
cmp
das
push
jae
decl
movsl
mov
mov
lock
xchg
sbb
sbb
call
dec
and
mov
andl
xlat
js
xchg
addr16
stos
mov
mov
sub
and
cwtl
ljmp
arpl
fists
and
jae
repz
push
jns
andl
jne
pop
push
ja
push
mov
sbb
xchg
push
scas
jne
pusha
gs
add
mov
repnz
lea
sub
iret
in
inc
cmp
pushf
repz
fwait
sbb
pop
cwtl
sbb
jbe
mov
add
fs
ljmp
ja
pop
bound
cmp
push
add
xchg
cmp
fcoml
dec
dec
arpl
lret
mov
dec
sbb
xor
rcrb
or
xchg
and
dec
or
push
gs
imul
icebp
xchg
or
mov
push
xchg
sbb
sub
pop
aas
movsb
mov
in
call
mov
adc
icebp
add
andb
out
xchg
pop
into
jle
shr
cmp
sbb
aas
sti
xor
pop
mov
int3
lret
xchg
mov
dec
dec
xchg
dec
sbb
orb
mov
sahf
push
inc
lret
dec
sti
ja
push
xchg
sbb
jns
sub
std
cli
stos
cli
loop
in
or
loopne
mov
filds
jo
lcall
adc
jo
mov
cmp
call
xorl
xchg
movsl
addb
cmp
sbb
lret
in
jge
cmp
xor
subl
mov
jne
push
xlat
in
xor
out
int
adc
adc
inc
xor
xchg
add
test
ret
adc
test
xchg
fwait
jg
and
call
aas
ret
push
stos
fs
fildl
push
stc
mov
or
sub
int
movsb
sub
mov
xor
jnp
mov
mov
xchg
sub
sub
cmp
aas
jno
push
lock
or
lcall
pop
push
pop
jl
lahf
ja
or
data16
addr16
addr16
cld
dec
xchg
push
inc
addr16
ret
and
add
pop
mov
jo
mov
call
ja
xchg
addr16
pusha
or
mov
mov
or
clc
sbb
leave
xchg
movsl
push
sub
rcll
push
fldcw
dec
out
stos
mov
test
push
insl
jbe
mov
lret
pop
clc
mov
popa
jp
clc
sbb
pusha
mov
testb
xor
sbb
push
sbb
xchg
fistpl
fwait
pop
iret
es
lahf
cltd
mov
addr16
test
movsb
mov
or
or
add
test
cmp
fwait
ret
jnp
mov
dec
pop
adcl
mov
test
adc
pushf
fadd
lret
fs
scas
lahf
cli
hlt
or
enter
inc
add
or
fldcw
fcompl
push
push
mov
mov
int
clc
or
repz
mov
mov
xor
ret
push
jmp
add
push
pop
inc
jecxz
adc
inc
xlat
clc
repnz
xor
int3
jbe
ds
inc
and
pop
lahf
pop
push
jb
movsb
ss
jnp
add
stc
out
arpl
cmpsb
cmpsl
pusha
xor
lahf
mov
jge
mov
xchg
sub
xor
xorb
in
ffreep
adc
sub
inc
fsubrl
adc
arpl
mov
jno
push
xchg
imul
mov
sbb
scas
xchg
cmp
mov
hlt
mov
repnz
mov
jmp
das
rol
jg
xchg
push
dec
mov
lods
jmp
data16
iret
mov
pop
inc
cs
xchg
enter
movsl
and
scas
push
pop
flds
hlt
hlt
rcrl
loope
push
shrb
pop
fcoms
xchg
inc
cmc
xchg
jb
inc
fadds
pop
mov
adc
push
stc
mov
stc
imul
sbb
add
scas
in
inc
stos
test
fs
ss
lds
push
xor
or
mov
xchg
jmp
lock
test
sbb
movsb
inc
dec
sbb
mov
inc
mov
pop
in
data16
adc
loopne
popa
adc
mov
clc
adc
sub
mov
outsb
dec
daa
mov
add
int3
mov
mov
xchg
je
enter
test
jge
mov
push
or
add
xor
dec
sbb
push
pop
int
xchg
loop
mov
jno
cmp
pop
aam
xchg
in
push
push
xor
fidivl
addb
sbb
xor
cmc
push
pop
leave
cmpsb
ljmp
push
movsb
push
fildll
mov
pop
dec
adc
sub
into
xchg
jno
jae
or
push
dec
sti
push
call
xchg
and
sti
inc
mov
out
pop
ffree
insb
dec
pop
jecxz
inc
or
mov
sbb
mov
cmp
leave
sub
sbb
mov
dec
mov
sub
outsl
cmp
cwtl
push
push
add
jge
pop
and
sbb
cmpsl
dec
cmc
sbb
push
loopne
repz
jbe
or
jns
sub
and
sbb
pop
pop
inc
lock
xorb
mov
xchg
push
pop
jl
sbb
sti
mov
cld
inc
cmp
test
mov
pop
and
mov
jno
dec
lret
xchg
jno
adc
fcmovne
iret
push
mov
repnz
ss
inc
fists
adc
lcall
sti
jecxz
lahf
jae
adc
cmpsb
ss
inc
dec
mov
call
clc
cmp
add
cmp
jne
ljmp
lret
test
cmp
lods
sub
sbb
cmpsb
es
mov
dec
cltd
sub
xchg
push
inc
inc
daa
imul
sbb
jno
enter
mov
lahf
sbb
push
mov
rol
cs
jecxz
pop
sbb
push
cmc
leave
daa
out
mov
test
mov
mov
push
je
outsb
jge
ds
dec
pushf
lods
jge
ljmp
mov
dec
adcl
jns
iret
popa
sbb
je
lahf
std
inc
stos
cmp
shll
cmovb
sbb
shll
in
cmc
and
cmp
jo
add
jge
imul
jmp
inc
lods
lds
daa
es
bound
popf
adc
pop
ret
jo
cmc
imulb
and
pop
pop
sahf
shll
or
outsb
jo
cmp
fidivl
mov
loop
in
imul
or
es
lods
mov
out
and
sbb
add
cmp
sub
push
cmpsl
or
cmp
cmc
xchg
add
aam
addl
sbb
xor
movsl
push
mov
adc
cltd
mov
mov
es
xchg
push
xchg
mov
pop
sub
xor
ljmp
ja
sub
pop
sub
mov
cli
fsubrl
ror
cmp
mov
jne
shll
mov
dec
imul
ja
out
or
pusha
subl
jnp
out
imul
or
ret
ss
ret
clc
pushf
or
rol
push
loop
gs
mov
jle
pop
add
popa
jp
mov
cmpb
adc
ds
icebp
das
mov
or
mov
mov
pop
cmp
int3
xchg
mov
push
mov
js
mov
out
outsb
mov
mov
psubsw
pop
adc
incl
mov
pop
lea
add
fstp
movsb
ss
ss
dec
es
mov
or
mov
sub
inc
movsb
xchg
das
fsubrs
and
mov
in
cmp
push
test
movsl
mov
jecxz
sub
mov
mov
les
in
inc
lock
cmpl
shlb
out
stos
and
sub
mov
jp
movsb
pop
repnz
outsl
lret
jl
in
dec
rcr
push
cli
daa
inc
gs
out
into
mov
out
adc
or
jle
popf
imul
jno
dec
shlb
sbb
sbb
mov
insb
push
orb
lea
popf
rcr
sbb
cli
xchg
pop
in
inc
loope
mov
xor
stc
inc
sub
in
repz
push
sub
popa
fistps
mov
enter
xchg
imul
mov
divl
cmp
and
mov
mov
cmp
pop
insb
mov
ss
mov
push
outsb
and
adc
mov
mov
mov
and
insb
push
add
jg
or
out
mull
pop
test
pop
lret
cld
shll
shlb
call
popf
fs
cli
xor
pop
jne
sub
jns
jg
mov
subl
movsl
incb
stc
dec
out
je
dec
fldt
xchg
mov
mov
xor
into
icebp
cltd
aad
cmp
jl
mov
pop
cltd
test
popf
outsl
shll
test
movsl
ret
mov
scas
push
xor
push
xor
and
mov
pop
jecxz
rcr
and
scas
mov
pop
clc
jecxz
ljmp
xchg
arpl
andb
incb
adc
pop
mov
or
cmp
aas
aaa
bound
fldenv
lods
divb
sub
ljmp
xor
rcl
sub
scas
out
mov
dec
jecxz
cld
push
es
clc
in
cmp
stc
inc
jo
insl
sarl
push
mov
dec
lret
jmp
ss
les
sbb
cwtl
jmp
mov
out
push
adc
jp,pn
ja
and
icebp
mov
jl
pop
dec
subb
fisttpl
movsl
test
mov
movsl
shll
popfw
incl
push
jae
mov
fldl
push
repz
stos
test
ret
lahf
imul
mov
mov
fstpl
push
jb
jne
push
pop
mov
lock
stc
mov
mov
cmovbe
or
xor
lods
jge
cmp
popa
insb
dec
repnz
ret
xor
out
repnz
cmpsb
hlt
cld
cmp
loope
mov
sarl
or
xor
inc
add
loopne
push
shrb
das
imul
mov
fucomip
jp
iret
sub
mov
arpl
sub
cmp
jb
scas
divb
xor
xor
adc
ds
mov
ret
imul
push
ja
aas
and
adc
inc
inc
mov
push
sub
inc
push
addr16
push
xor
cltd
gs
outsb
shlb
rcrb
pop
xchg
mov
fistpll
jbe
ret
adc
cmp
sub
psrlw
sub
or
mov
std
mov
sbb
idivb
pop
call
sub
call
dec
aaa
or
push
fstpl
and
test
arpl
sub
push
in
fistps
push
cmp
imull
push
aad
mov
cli
es
ss
xchg
jge
dec
xor
mov
jp
inc
lret
out
dec
jo
sub
fs
pop
cmc
or
jbe
ret
mov
mov
pop
scas
jbe
mov
das
adc
add
lret
cmp
fsubs
push
pop
cmp
divl
mov
xchg
adc
and
sub
lds
inc
in
mov
out
inc
xchg
lahf
testb
pusha
lret
ljmp
mov
mov
iret
or
adc
mov
fimuls
out
jp
pop
ds
lea
adc
adc
mov
and
leave
adc
dec
sbb
in
subl
xor
mov
xor
dec
mov
pusha
lahf
das
xchg
pop
arpl
hlt
sub
adc
lcall
pop
sbb
cmp
push
jnp
sub
icebp
subl
adc
mov
cmpsb
data16
add
and
mov
fstpl
arpl
inc
adc
sbb
lahf
push
cmc
or
inc
jbe
inc
fisttps
jecxz
cmp
test
pop
stc
mov
vcvtpd2dq
ret
adc
sub
mov
xor
pavgw
inc
scas
pop
bound
push
add
pushf
xor
xor
lret
dec
in
and
dec
popa
dec
aad
sti
xchg
dec
dec
mov
mov
call
imul
pop
xchg
sarb
jge
sbb
jo
cmp
pop
aad
cmp
in
outsl
cmp
xchg
push
pusha
pushw
push
int
push
jbe
cmpl
and
cmpsb
lret
testb
pop
sub
jo
jne,pn
bound
jbe
push
leave
cmp
sti
mov
call
test
add
mov
mov
and
and
inc
rolb
loopne
add
nop
scas
orb
xor
xchg
repz
inc
lea
popf
hlt
xchg
push
fcoml
jne
jmp
repnz
mov
dec
out
out
sub
in
cmp
divl
imul
dec
loopne
push
mov
shl
leave
inc
fs
jmp
or
in
mov
stos
fisttpll
mov
out
xor
fsub
test
push
push
pop
and
cmp
push
xchg
xchg
nop
add
pop
ljmp
lds
out
mov
in
push
lods
inc
pop
lock
lea
adc
shrl
xchg
push
and
jp
loop
jle
mov
inc
mov
and
aad
xchg
mov
xchg
mov
rcr
xlat
call
dec
sub
inc
sub
icebp
xchg
cli
lret
adc
jo
into
dec
jae
mov
jl
rep
lcall
mov
and
push
icebp
push
pop
adc
xchg
pop
insb
insl
adcl
pop
or
pushl
ljmp
cltd
push
fmuls
in
lret
mov
test
cmpb
xchg
not
or
jne
or
dec
mov
mov
out
loop
aam
lcall
xor
push
jae
js
push
xchg
pop
scas
andb
sub
push
or
jo
repz
mov
into
push
cli
jbe
mov
clc
cmpsb
in
xor
adc
test
nop
mov
cli
call
dec
mov
mov
out
xor
lret
pop
adc
dec
test
pop
jae
add
daa
mov
pop
sbb
js
sub
scas
dec
lods
ja
dec
mov
pop
lea
push
jbe
in
ret
incb
jp
testb
cmp
mov
mov
dec
adc
push
pop
xor
sahf
add
jo
aas
push
inc
cmp
jecxz
xor
cmp
shlb
jge
sbb
je
js
cmc
inc
ja
sub
test
ss
rcl
cmpsl
das
daa
testb
js
adc
cmp
jbe
add
out
aas
dec
int3
aas
sti
subb
fs
int3
and
xchg
jae
outsb
fldcw
lahf
push
rcrb
test
sbb
push
sbb
ja
inc
movsb
rcrl
cmp
lret
mov
out
lods
inc
das
add
in
mov
xor
frstor
push
adc
test
mov
sub
repnz
outsb
adc
aad
jo
aas
rcrl
int
adc
mov
and
mov
jg
scas
xor
or
mov
mov
or
cvtps2pi
mov
xchg
jnp
xor
mov
inc
mov
xchg
testb
rcr
iret
ret
push
inc
adc
mov
mov
jae
push
sub
dec
outsb
adc
push
pop
jp
jp
sahf
and
xchg
push
xchg
mov
pop
cmc
in
icebp
imull
jno
adc
cltd
add
cmc
xor
ds
xor
call
jae
sub
fs
inc
mov
sbb
adc
imul
imul
or
xchg
cmp
lahf
movsb
push
ljmp
xchg
clc
mov
sbb
ljmp
pop
adc
xlat
shll
add
xor
int3
add
sarb
sahf
andl
cmp
xchg
adc
xor
and
xchg
xchg
or
mov
mov
cmp
inc
xor
fidivrs
mov
or
loop
outsb
add
cmp
dec
ret
cmpsb
mov
cli
adc
cmp
mov
clc
cmpsb
fidivl
jbe
dec
int3
sbb
scas
add
cmpsl
test
clc
push
adc
imul
ljmp
imul
add
es
pushl
push
imul
and
mov
fdivp
mov
adc
push
push
adc
jnp
rorb
jnp
add
arpl
lahf
insb
mov
js
push
push
fisubl
js
pop
jae
xchg
mov
out
jmp
jns
cld
sbb
fdivrs
and
iret
add
mov
add
notb
movsb
ss
in
pop
aad
dec
mov
mov
mov
iret
mov
xor
sub
mov
pop
or
dec
ss
mov
and
xchg
mov
inc
popa
gs
mov
and
aas
dec
enter
arpl
subl
shlb
testb
fdiv
stos
xchg
sub
idivb
add
lret
pop
ficoms
cld
test
mov
and
es
fbld
icebp
push
add
push
dec
fmulp
push
mov
fisttpl
sub
pop
imul
mov
popa
adc
xchg
insl
xchg
push
inc
or
adc
and
sqrtps
enter
push
dec
adc
mov
mov
adc
inc
gs
add
jmp
mov
mov
out
lcall
lds
push
mov
cld
adc
sbbb
nop
mov
inc
adc
mov
jae
bound
jmp
pop
sub
push
mov
pop
mov
add
mov
pop
xchg
or
or
adc
cmc
xchg
mov
scas
or
insb
inc
test
jb
rcl
push
hlt
jae
cmpsl
and
gs
xlat
out
lahf
cmp
ss
sbb
sub
insb
lret
mov
orl
adc
mov
outsl
mov
test
mov
leave
sub
sahf
stos
pop
scas
rorb
les
int
mov
jge
sub
or
mov
jmp
lret
imul
xor
cli
rcll
loopne
adc
xchg
xor
data16
pusha
cmpsl
in
popa
and
shl
mov
xchg
out
movsb
imul
or
or
rcll
outsb
inc
fmulp
arpl
insb
push
cmp
mov
mov
and
add
out
xor
bound
in
adc
pop
int3
jnp
push
adc
jns
ljmp
aas
sti
cmpsb
xor
lods
mov
in
jne
xorb
cld
test
es
inc
push
test
dec
test
xor
add
scas
test
fadd
pop
les
adc
push
repz
bound
cmc
pcmpgtw
cmpsb
pop
mov
pop
mov
and
test
jb
hlt
jg
mov
pusha
cmovle
and
dec
out
sub
add
movsl
lea
or
pop
dec
or
sbb
ds
jne
shrb
ret
pop
sarb
pop
not
cwtl
cmc
cltd
push
jb
int3
xor
loope
ja
stos
movsb
stos
inc
repnz
inc
mov
std
mov
sub
rcrl
test
out
mov
cs
mov
sbb
push
ds
mov
and
hlt
jno
dec
xchg
xor
loope
loopne
jmp
cmpsl
inc
xor
cwtl
dec
iret
add
icebp
mov
jg
xchg
push
push
and
gs
sbbb
nop
fnstsw
sub
pop
inc
cmp
xor
loope
dec
repnz
ror
lods
mov
mov
adc
pop
mov
fsubl
test
lods
mov
xchg
fdivrs
add
cmc
das
dec
jg
das
outsb
inc
xor
xor
into
int
icebp
cs
xor
fcoml
jmp
lds
aad
in
dec
adc
mov
bound
popa
fcoml
fistps
xlat
pushf
out
mov
decb
and
jne
add
das
icebp
or
push
lcall
mov
mov
or
xchg
push
loopne
dec
mov
je
fs
push
mov
ds
lcall
mov
aaa
dec
dec
dec
inc
sbb
fsubrl
add
sub
les
mov
dec
mov
add
inc
aad
push
pushf
dec
mov
mov
cs
popf
push
mov
cmp
lds
addl
add
dec
ret
lea
jae
fdivs
dec
cmp
push
ss
pop
aaa
stos
dec
std
stos
dec
mov
dec
mov
push
mov
mov
mov
adc
mov
push
jnp
push
mov
mov
sti
mov
cli
ja
sti
ja
mov
leave
leave
xor
leave
mov
andb
mov
mov
xor
xor
in
shlb
shlb
jo
push
and
dec
and
mov
mov
sub
xor
mov
pop
mov
test
mov
and
jg
idivb
xchg
cmp
push
cld
push
lock
push
lock
lock
mov
xchg
jecxz
cmp
nop
cmp
insb
jp
insb
jp
add
lds
ja
stos
or
stos
inc
pop
lods
inc
mov
inc
mov
shll
cmpsl
arpl
cmpsl
sbb
sbb
sbb
sbb
mov
push
adc
xchg
fwait
dec
xchg
push
xchg
push
sbb
mov
xor
shll
rorl
push
jae
mov
dec
movsb
sbb
lret
das
ds
lret
dec
mov
dec
mov
dec
mov
mov
das
sbbb
mov
mov
lea
push
ds
mov
aam
push
cli
cwtl
add
ja
cli
ja
fs
dec
jecxz
leave
mov
jbe
arpl
and
mov
cmp
add
jg
pop
rclb
insb
add
or
sti
sub
mov
push
dec
out
lock
ret
out
ret
dec
sti
leave
xchg
mov
lea
xchg
inc
bound
bound
mov
incb
neg
and
jg
idivb
dec
cmp
sar
push
lock
push
lock
lock
aas
adc
xchg
xchg
xchg
cmp
cmp
insb
jp
insb
jp
mov
jbe
ret
stos
mov
lods
inc
mov
inc
mov
xchg
cmpsl
push
sub
mov
push
mov
sbb
push
mov
adc
mov
xchg
push
xchg
push
lret
push
mov
xor
shr
rorl
or
jnp
mov
dec
ss
jge
stos
dec
arpl
mov
je
dec
mov
dec
mov
ja
sbb
inc
mov
push
ds
push
mov
popa
mov
cli
ja
cli
ja
sbb
leave
xchg
leave
leave
mov
out
push
cld
mov
mov
lock
xor
xor
rorb
and
and
and
xor
dec
and
mov
mov
xchg
mov
xor
mov
insl
mov
test
push
xchg
testb
jg
cld
jg
push
test
push
lock
adc
lock
repnz
xchg
adc
sub
add
inc
loopne
add
add
dec
loopne
add
add
add
add
dec
loopne
add
add
add
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
add
dec
outsl
popa
fs
imul
