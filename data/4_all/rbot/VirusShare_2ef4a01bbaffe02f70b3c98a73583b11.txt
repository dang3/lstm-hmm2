push
pushf
pusha
call
xor
sbb
add
add
add
add
sbb
add
sbb
add
sbb
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
je
jb
arpl
fs
jae
add
add
fs
imul
add
add
jb
jne
insb
push
jb
je
arpl
pop
cmpl
jne
cld
mov
mov
xor
call
mov
jecxz
lea
lea
mov
lea
mov
push
dec
jne
mov
push
push
pushl
call
add
add
loop
add
mov
mov
call
mov
test
je
mov
jecxz
push
call
test
je
mov
mov
mov
jecxz
test
jne
add
inc
inc
jmp
and
push
pushl
call
stos
jmp
add
jmp
mov
lea
lea
lods
xchg
jecxz
push
mov
push
push
push
lods
xchg
lods
push
push
call
pop
loop
pop
popa
popf
ret
sub
mov
mov
mov
lods
test
je
stos
jmp
call
and
je
outsw
jne
add
stos
test
jne
push
push
push
push
call
inc
jb
outsl
jb
pop
lods
stos
test
jne
call
push
push
inc
push
xor
cs
dec
dec
add
push
sub
or
add
dec
gs
popa
addr16
outsl
js
add
push
sub
rolb
enter
pusha
mov
mov
lea
mov
push
xor
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
rep
push
pop
call
dec
jne
push
pop
mov
mov
mov
and
shl
add
lea
call
jae
call
movzbl
imul
xor
mov
inc
cmpl
lea
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
lea
lea
call
jae
call
add
test
jne
jmp
call
test
lea
je
cmp
jl
jmp
mov
lea
call
jae
call
add
jmp
call
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
call
mov
mov
lea
call
jae
call
cmpl
mov
mov
mov
mov
mov
mov
jge
andl
jmp
push
popl
mov
add
jmp
call
mov
mov
lea
call
jae
call
mov
add
shl
mov
add
lea
call
jae
call
mov
xor
cmpl
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
call
jmp
call
mov
mov
lea
call
jae
call
mov
jmp
call
mov
mov
lea
call
jae
call
mov
jmp
call
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
call
jae
call
push
shl
lea
jmp
call
add
call
jae
call
shl
lea
push
push
jmp
call
lea
push
push
pop
mov
push
call
pop
xor
inc
mov
shl
pop
sub
add
cmpl
push
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
push
popl
call
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
push
call
shr
add
cmp
jb
sub
or
pop
loop
mov
add
shl
push
popl
push
popl
call
inc
mov
pop
je
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
pop
mov
jmp
pop
mov
jecxz
push
mov
mov
pop
add
cmp
jae
lods
inc
cmp
je
cmp
je
cmp
jne
cmp
jae
lods
inc
cmp
jb
cmp
ja
cmp
je
mov
cmp
jne
xor
bswap
sub
mov
add
add
jmp
popa
leave
ret
cmp
jae
push
mov
mov
movzbl
shl
or
shl
incl
mov
pop
ret
call
mov
mov
shr
imul
cmp
ret
mov
mov
sub
shr
add
ret
call
mov
ret
sub
sub
mov
shr
sub
ret
call
mov
ret
xor
inc
push
call
mov
call
jae
call
mov
add
pop
jmp
call
mov
lea
pop
or
shll
decl
jne
ret
call
add
add
add
inc
add
push
add
pop
add
add
add
adc
xchg
or
add
add
adc
add
mov
xchg
add
outsl
dec
add
loopne
add
jg
add
mov
mov
add
sbb
adc
cmp
add
insb
adc
xchg
adcl
add
dec
adc
pop
dec
adc
mov
add
cmpsb
adc
out
adc
push
push
adc
add
push
adc
lret
ss
pop
cltd
inc
mov
add
loope
inc
cmpl
ds
ret
mov
push
fnstcw
js
mov
cli
sub
push
sub
out
leave
mov
jecxz
outsl
xchg
test
and
sub
mov
cmp
pop
dec
fildll
push
stc
pop
pop
ret
std
lahf
into
iret
daa
fcmovnu
mov
sbb
popa
jnp
les
xchg
cmp
fisubrs
lret
repz
cs
mov
pop
lods
cltd
push
jecxz
stos
leave
ret
xor
mov
fadds
stos
dec
sbb
enter
push
mov
xchg
dec
or
jno
inc
lods
insl
shll
sub
dec
cmp
cld
daa
test
mov
jo
push
andl
sbb
call
xor
divb
orb
sbb
test
ja
lret
jg
aas
out
fdivr
lahf
cmpb
icebp
push
adc
cmp
cmp
clc
push
movsb
dec
sti
mov
insl
pop
aas
notl
ret
inc
sbb
call
rcll
mov
xor
into
push
jg
mov
movb
inc
push
xchg
lcall
fwait
dec
inc
sbb
lock
cmp
test
and
pop
pop
mov
fcompl
int
icebp
ljmp
push
xchg
dec
pop
int
dec
jb
and
mov
push
xchg
in
or
roll
es
lea
xor
testl
out
mov
dec
movsb
pop
dec
lock
cltd
insb
push
cli
mov
mov
dec
cwtl
push
js
insb
pop
imul
cwtl
push
cmpsl
out
mov
sar
popa
ret
add
jg
xor
outsl
movsl
cmp
xor
cmpsl
in
in
pop
fs
mov
add
sbb
jb
jns
enter
mov
mov
imul
popf
insl
popa
mov
stc
lock
mov
dec
test
add
jns
xor
ljmp
dec
sbb
repnz
lret
cmp
sti
lahf
leave
sub
outsl
shll
stc
jbe
push
adc
sub
gs
insl
and
xchg
imul
add
cld
push
decl
or
ds
add
push
pop
inc
add
sub
xchg
ljmp
outsl
ja
jmp
fcoms
sub
mov
loopw
xchg
or
xor
cmp
enter
iret
sbb
sub
mov
xchg
mov
repnz
enter
aam
aaa
mov
xor
adc
inc
push
sub
fwait
mov
mov
icebp
addl
outsb
movsb
xor
adc
repnz
cmp
pop
sub
pop
push
daa
pushf
scas
push
test
test
push
ja
dec
mov
daa
scas
xor
xchg
test
test
xchg
xchg
leave
test
jge
jmp
inc
out
dec
jp
testl
xchg
lret
aas
lcall
cli
mov
inc
hlt
xlat
gs
lods
dec
pop
push
push
cmp
mov
cmp
cs
scas
adc
adc
arpl
fisttpll
bound
sti
rorb
sbb
mov
mov
sbb
cmp
adc
add
push
adc
cmp
lods
xor
jge
imull
cwtl
je
jb
arpl
jae
pushf
jnp
jno
rorb
repnz
inc
and
adc
in
insl
rorb
dec
mov
in
imul
divl
das
aaa
or
subl
es
sbb
repz
lock
enter
sahf
jmp
cwtl
sub
int3
and
pop
loopne
dec
ret
outsl
mov
fcmove
dec
lcall
imul
lea
ja
popa
or
subb
mov
mov
fnstenv
cli
cmpsb
mov
stos
lahf
aad
cmpsb
push
push
jnp
clc
mov
sub
loopne
mov
cmc
les
pop
test
pop
sbb
ja
xor
or
imul
out
mov
popf
push
dec
divb
push
test
jne
enter
jno
or
adc
mov
rorl
sub
jecxz
inc
jle
dec
hlt
les
lea
cmc
mov
inc
fcoml
mov
inc
mov
loope
shl
nop
mov
sbb
arpl
sarb
negl
fchs
pop
pop
pop
and
loop
adc
push
jo
xchg
mov
xchg
imul
mov
insl
std
daa
add
sub
movsl
dec
inc
sahf
cmp
pop
adc
adcb
sbb
daa
xor
aad
sub
rcll
and
cmpsb
adc
xor
movsb
add
cmp
sti
inc
arpl
or
jno
dec
in
pop
dec
and
push
mov
mov
out
les
adc
loope
pushf
adc
mov
jno
repnz
cmpsl
in
adc
push
jbe
or
jmp
fistpl
xor
mov
lea
lret
in
inc
cmp
cmpsb
ret
cmp
cmp
lods
jl
fstpl
xchg
sub
mov
or
test
fxch
jmp
insb
iret
push
in
clc
cmp
movsl
pop
sbb
int3
rolb
or
sbb
lret
ss
sbb
push
popf
test
xlat
pop
mov
sub
dec
jno
js
std
mov
pop
outsl
pop
adc
jnp
jg
xchg
sub
imul
pop
cmp
push
xor
mov
or
aad
jbe
and
cmp
stos
pop
std
mov
push
lahf
lock
mov
into
xchg
push
repz
cwtl
add
xchg
xchg
mov
push
jb
add
mov
lods
iret
out
push
shl
sbb
adc
call
insl
xchg
push
cmpsb
repnz
or
sti
rorl
jg
repz
xor
mov
sbb
imul
andl
cmp
lods
dec
mov
dec
es
pop
mov
lods
popf
xchg
icebp
and
ret
sub
jbe
imul
jecxz
fbstp
or
or
sbb
std
data16
or
cmpl
xchg
jle
adc
sub
shlb
scas
jp
imul
nop
jb
cmpb
icebp
push
stos
shlb
loopne
adc
mov
xchg
push
je
fs
xchg
mov
mov
pop
push
cld
lret
push
sbb
dec
or
xor
pop
fidivrs
pop
adc
inc
jno
and
and
pushf
imul
mov
lock
call
adc
into
or
std
dec
pop
dec
test
jb
hlt
mov
mov
int
je
rcll
jp
shl
nop
or
jle
mov
rol
loopne
call
ret
sub
jl
cmp
mov
jmp
mov
xlat
mull
cwtl
and
mov
xor
in
xchg
mov
mov
add
sub
adc
mov
jo
pushf
lea
push
pop
scas
outsl
mov
jnp
add
adc
push
jnp
cmp
mov
or
add
idivl
es
push
cld
xchg
push
xlat
xchg
hlt
xchg
outsb
subl
cld
cmp
sbb
neg
mov
call
pop
pop
add
mov
aad
packuswb
mov
or
clc
push
jecxz
dec
data16
mov
gs
insl
flds
mov
adc
insl
subb
bound
ds
cmp
jo
push
jbe
xchg
sub
data16
xor
outsb
mov
xchg
push
cmpsb
sub
add
cmc
outsl
ret
js
cwtl
push
dec
pop
pop
not
add
adc
aad
cmc
jb
imul
mov
sbb
jno
ja
mov
scas
inc
pop
dec
push
and
jnp
push
xor
jbe
loop
push
push
subl
into
scas
mov
inc
ds
sub
cmp
aas
cmp
adcb
scas
scas
cmp
sbb
sub
rcr
fld
das
filds
and
xor
scas
mov
pusha
in
stos
mov
mov
inc
or
cmpsl
and
sub
sub
push
adc
cwtl
lahf
xchg
adc
or
shll
or
and
xchg
cmpsb
cmp
mov
cmp
lods
sti
dec
pop
mov
leave
cmp
fsts
arpl
adc
push
inc
rcr
aaa
adc
data16
movsl
or
xchg
add
icebp
sbb
cmpsl
rcll
mov
shl
jns
shlb
in
inc
rcl
rcrl
or
mov
push
into
pop
push
int3
sbb
pop
mov
stos
dec
imul
or
js
xchg
test
xchg
jp
outsb
int
addr16
xchg
mov
dec
lods
js
cld
loope
push
lds
in
mov
sti
xchg
test
cmp
mov
stc
or
jo
add
jecxz
add
movsb
das
stos
dec
jg
sub
xor
insl
das
mov
scas
mov
dec
popf
scas
clc
inc
aam
sbb
data16
pushf
rorl
aaa
mov
jns
aas
jnp
mov
push
xchg
mov
mov
andb
ficoml
loop
dec
sub
mov
sti
shlb
loopne
popa
clc
out
nop
mov
adc
lea
inc
out
sbb
inc
scas
popf
jae
aad
mov
test
sbb
aad
inc
movsb
push
and
cli
mov
or
xchg
cmpsb
mov
cmpsl
int
sti
jno
ret
mov
sbb
push
test
ror
jmp
rclb
sti
aas
rcll
sbb
mov
enter
mov
jecxz
sahf
mov
add
or
pop
inc
xchg
shll
xor
pop
mov
inc
inc
mov
dec
inc
ret
pop
or
pop
arpl
pop
sti
dec
cmp
cld
push
test
adc
lcall
mov
or
pop
push
or
cmp
fcomps
sahf
jne
push
es
push
arpl
mov
xchg
cltd
imul
imul
xchg
inc
cmpsb
sub
imul
movl
popa
sbb
ja
repnz
test
push
in
ss
sub
mov
test
xchg
jle
mov
outsb
push
or
jmp
dec
pop
ret
fistpl
push
dec
pop
mov
enter
pop
jne
mov
xchg
mov
out
jge
cmc
loope
jmp
add
sbb
jge
ffree
cmpsb
jecxz
adc
movsb
aaa
arpl
adc
mov
pop
mov
pop
pop
add
movsb
push
add
sbb
ljmp
xchg
xor
and
fimuls
das
pushf
push
xchg
icebp
outsb
lret
sahf
int3
push
mov
xchg
push
mov
mov
inc
and
test
scas
pop
std
cmp
pop
mov
push
sbb
xchg
sbb
retw
jge
shl
mov
xor
stc
sbb
pop
mov
pop
movsb
cmp
fstps
jo
shll
mov
stos
loope
hlt
lock
lods
add
cmp
pop
shrl
cmp
shl
ret
ja
mov
out
inc
nop
mov
daa
cwtl
cmp
push
pop
mov
inc
in
test
jg
test
pop
lods
cmp
ja
xor
aaa
sbb
mov
adc
mov
loope
lret
outsb
subw
stos
inc
int3
sub
pop
dec
cmc
daa
sub
add
mov
and
bound
stos
inc
jb
bound
arpl
inc
mov
mov
std
in
divb
popf
push
movsl
bound
lahf
loope
mov
xchg
out
aas
jecxz
pop
cltd
fdivrl
inc
add
jle
adc
test
lret
lret
test
icebp
loopne
lret
sub
jp
or
xchg
dec
xchg
and
test
xchg
mov
push
mov
out
out
dec
jmp
lret
sarl
xchg
sub
sahf
adc
or
cmp
cmp
popa
not
iret
xchg
add
popf
gs
push
xchg
xchg
jle
jle
rorb
in
les
jle
mov
push
cmp
mov
dec
fistpl
or
and
xchg
inc
ret
mov
inc
cmp
xorb
sub
or
add
cmp
movsb
xchg
out
adc
imul
into
aaa
ror
aam
cmpl
pusha
xchg
mov
test
xor
push
cld
mov
mov
or
aam
xchg
xchg
roll
inc
es
pop
pop
push
pop
xor
mov
mov
fbstp
mov
rorb
sub
or
hlt
inc
push
jmp
xchg
pop
out
ja
lret
mov
mov
scas
test
ficomps
shl
or
jmp
faddp
dec
ss
jbe
mov
jmp
sub
xorps
push
cmp
dec
out
inc
push
lcall
mov
adc
ret
add
into
std
mov
mov
test
and
ljmp
in
dec
jnp
std
pop
xor
adc
mov
xchg
mov
test
je
clc
dec
cmp
std
cmpsb
jnp
dec
dec
mov
pop
int3
xor
inc
mov
pop
test
out
repnz
add
sbb
cmp
pop
inc
dec
shld
jae
rdmsr
enter
add
fdiv
push
jl
insl
mov
sbb
test
mov
out
xor
fwait
jnp
xlat
cmpsl
mov
loop
pop
cmp
pushf
jae
call
fs
mov
sub
stos
mov
fisubrl
and
stc
or
ljmp
fisubl
stc
or
mov
jnp,pt
mov
xchg
outsb
cmp
stos
mov
xor
fdivrp
jp
cmp
jno
pop
dec
hlt
je
out
in
mov
sbb
jne
push
mov
aam
jae
leave
mov
xchg
lahf
cmp
push
ret
pop
ret
dec
nop
xor
push
jo
pop
pop
sbb
mov
ds
lods
cmp
pop
fisubl
loop
pop
sub
sub
mov
jo
cwtl
mov
mov
out
xor
shlb
sub
insl
pop
mov
test
mov
and
cli
hlt
push
in
inc
and
push
cmpsb
pop
sub
xlat
mov
addr16
je
fiaddl
inc
into
sbb
lret
sub
ret
in
xor
lods
ret
lea
lcall
jmp
jmp
or
aam
jae
data16
fistps
xchg
or
pop
mov
add
mov
xor
jo
mov
arpl
adc
sub
mov
outsb
aaa
ret
cmpsb
ret
xchg
aad
jp
sti
insl
enter
cltd
rcrb
shll
inc
aaa
mov
xor
mov
push
mov
out
push
push
insl
std
pop
cmpb
rcrb
das
in
pop
dec
out
pop
xchg
cwtl
sti
and
andb
pop
add
jb
icebp
push
adc
movsl
push
pop
js
test
inc
xchg
xor
out
test
fisubrl
mov
imul
stos
cmc
mov
push
aas
dec
into
jne
pop
mov
mov
sbb
scas
call
dec
push
movsb
pushf
das
push
das
jne
mov
mov
push
insb
cmpb
in
lds
rorl
imul
pusha
movsb
into
jne
or
pop
xor
loop
mov
mov
popa
xchg
dec
imul
pusha
pop
push
cmp
and
cmpb
push
or
lret
dec
test
dec
mov
mov
sbb
cld
jnp
xor
pop
mov
repnz
sbb
xchg
shl
rorb
or
adc
dec
out
or
shrl
in
mov
pop
negl
sti
std
xor
out
push
add
cmp
lret
gs
leave
sub
imul
cmp
add
add
dec
jbe
ret
loop
push
mov
and
xchg
mov
cmp
xchg
hlt
nop
jle
les
aaa
jbe
stos
adc
jmp
rcr
pop
mov
out
and
mov
rcr
cmp
mov
aam
out
pop
cmc
sbb
rclb
repz
pop
and
lea
cmp
mulb
cltd
mov
push
add
mov
iret
dec
lret
ds
lret
movsb
pop
stos
imul
xorl
into
lcall
lea
cltd
inc
out
lds
aad
cmp
mov
lods
and
movsl
lcall
xchg
out
inc
bound
sbb
aas
pop
jp
dec
sub
sub
aaa
inc
lock
call
mov
xchg
pop
call
scas
mov
aad
fldt
fisttpl
push
sub
repz
pop
aad
jo
loope
inc
ljmp
jmp
xchg
adc
add
jb
jb
cmp
inc
mov
loopne
xchg
push
mov
adc
aam
pop
sar
inc
shrl
add
ror
sub
pop
lods
add
pushf
mov
cmp
icebp
rclb
call
nop
jle
imul
shrb
cmpsb
pushf
xor
enter
jg
jo
aad
fmuls
mov
rcrb
inc
inc
lcall
push
xchg
push
mov
xor
pop
out
test
enter
adc
pop
faddl
fadds
in
stos
lds
movsl
call
repnz
push
xchg
push
fdivrs
sub
mov
movsb
xor
mov
imul
daa
pop
lock
shrb
inc
adc
mov
mov
fs
xchg
push
or
add
xlat
movsb
or
xchg
adc
outsl
fimull
rorl
pop
sbb
and
mov
or
mov
push
or
std
addb
and
xlat
and
or
lahf
nop
cmp
jo
icebp
mov
ds
cmp
inc
mov
inc
fwait
mul
cltd
ja
cmp
jae
test
cmp
add
out
roll
cld
mov
mov
add
mov
icebp
repnz
sahf
pop
pop
out
lahf
add
aam
ret
mov
mov
xchg
adc
push
outsb
inc
jb
push
fcomps
xchg
mov
pop
ror
pop
mov
mov
std
iret
mov
xchg
push
je
sarl
cmc
push
insl
jns
push
mov
test
inc
mov
dec
mov
ja
rorb
ss
enter
and
add
jmp
in
xchg
in
adc
mov
jg
and
out
xchg
push
lods
xchg
pop
dec
popa
and
subl
or
jo
lcall
mov
push
out
pop
adc
out
pusha
js
pop
xchg
mov
push
jmp
ret
daa
je
jb
test
xor
and
push
inc
sub
js
mov
jecxz
and
jns
fmul
jo
pop
ss
movsl
sub
in
inc
mov
test
je
das
dec
mov
push
sbb
outsl
out
pop
adc
xlat
aaa
dec
frstor
leave
pushf
pop
rorb
imulb
aam
jge
mov
dec
in
inc
daa
sub
inc
push
or
pop
xchg
fldt
lock
mov
push
outsl
imul
dec
aad
je
push
stc
xchg
jbe
add
dec
mov
mov
and
in
stos
mov
mov
push
lcall
popf
popf
push
and
lahf
pop
mov
jb
mov
xchg
cmpsb
pop
jns
mov
and
addr16
jns
popl
xor
mov
xor
xor
add
andb
and
popf
adc
and
int
pop
push
jo,pt
sub
lods
out
mov
lds
cmpsb
testb
cmpsb
inc
arpl
or
test
shll
mov
sub
dec
test
stos
icebp
dec
fs
faddl
out
sbb
ss
or
in
inc
or
hlt
xchg
mov
jle
fidivs
lea
jp
js
sub
hlt
mov
sub
into
movsl
rcl
mov
sub
inc
mov
popa
hlt
add
jecxz
mov
ret
arpl
jmp
adc
xchg
test
call
mov
inc
lods
xchg
sbb
inc
sub
mov
test
xor
clc
sbb
es
icebp
popa
out
mov
jg
adc
mov
out
or
pop
lea
stc
push
xor
sub
xlat
dec
cmp
stc
mov
shrl
lahf
or
fidivl
or
mov
imul
or
je
mov
pop
clc
mov
or
mov
imul
pop
or
cmp
dec
add
sahf
rol
cld
sbb
fisubrs
pop
sub
xchg
xor
pop
loopne
xchg
sub
in
push
dec
int3
das
lcall
jle
inc
inc
xchg
mov
lds
lock
aas
repnz
in
in
adc
movsl
test
push
and
std
xchg
clc
movsb
jno
sbb
cmp
jl
mov
adc
shl
adc
pop
mov
xor
jg
mov
sbb
sub
roll
gs
add
movsb
das
scas
sarl
xchg
stos
gs
pop
outsl
or
adc
push
xchg
xchg
mov
pushf
dec
cmpsl
xlat
push
cmc
sbb
lods
lea
loopne
push
jl
mov
push
aas
add
sbb
cmp
repnz
dec
repnz
or
cmp
push
lds
xor
push
test
inc
cmp
lds
outsb
pop
imul
xor
decl
push
pop
icebp
add
mov
inc
xor
shll
and
jbe
pop
lea
inc
in
jg
or
leave
pushw
out
lock
insb
sub
std
hlt
aas
or
repnz
sub
xchg
pop
sti
in
ds
add
and
cmp
sahf
adc
shl
jg
stos
xor
mov
scas
ret
fcmovnu
adc
into
or
sbb
mov
xor
scas
add
xchg
out
push
and
ss
mov
in
adc
popa
jle
rcll
nopl
inc
inc
sahf
adc
je
mov
mull
cmc
mov
movsl
mov
sub
dec
or
aas
test
call
push
mov
pushf
jmp
inc
dec
xchg
push
sbb
pop
fldt
sarl
lods
xor
stos
push
lods
shlb
mov
jne
adc
nop
loope
add
sub
das
jmp
add
out
adc
cmp
cmp
jno
add
xchg
aam
movsl
sbb
add
or
ret
daa
cli
dec
jg
fiaddl
lea
jnp
outsb
loop
sbb
je
lock
pop
aad
out
jecxz
int
iret
imul
push
aad
mov
enter
stos
nop
jp
and
inc
clc
lds
roll
roll
push
dec
idivb
data16
or
jb
or
adc
lcall
lds
sub
lret
frstor
out
sti
cmc
nop
call
and
mov
mov
add
hlt
dec
out
ljmp
push
out
or
rolb
cmp
adc
xorl
fildl
outsl
test
mov
clc
inc
cmp
sbb
cli
add
pop
cmp
cli
cmpsl
dec
jns
sub
and
mov
push
pop
inc
test
add
sbb
add
mov
outsb
mov
out
xchg
jg
xorb
in
pop
iret
roll
scas
pushf
idiv
add
popa
add
push
adc
jnp
loop
test
lret
adc
inc
cmp
jmp
sub
and
pop
and
and
push
movsl
sbb
dec
sti
insl
fst
or
jae
pop
les
xor
sbb
imul
sub
dec
into
inc
and
cmp
jg
lods
dec
mov
push
push
movsl
dec
dec
rolb
dec
mov
out
push
movsl
subb
jbe
mov
les
cld
into
mov
mov
xor
or
push
or
out
sub
adc
xchg
fwait
adcl
movsb
bound
mov
jg
pop
and
in
push
daa
xor
das
mov
push
icebp
mov
mov
add
sbb
aas
rclb
xchg
push
inc
sti
repz
sbb
fcmovnb
jo
sbb
jmp
pop
cmp
mov
push
clc
pushf
mov
and
pop
push
push
jle
or
cmp
mov
mov
sbb
push
das
adc
fists
shrl
repnz
mov
dec
pop
jbe
mov
popa
push
pop
repnz
cli
stos
inc
mov
out
add
popf
sub
jmp
fiaddl
dec
pop
pop
xor
mov
pop
in
sbb
mov
mov
rcr
inc
lods
push
xor
xchg
and
in
lea
das
dec
add
pusha
cs
sahf
clc
mov
stc
jle
push
jecxz
push
pop
jbe
lcall
cs
mov
out
int
dec
mov
mov
pushf
cmp
lods
test
rep
push
jne
in
and
dec
dec
scas
sbb
out
dec
cmp
or
or
mov
or
sub
mov
inc
scas
shlb
adc
pop
loop
jns
lcall
mov
xor
cmp
aad
jb
xor
stc
scas
sahf
and
adc
lods
lcall
xchg
lcall
push
out
mov
mov
xchg
mov
loope
cltd
arpl
outsb
and
push
dec
out
mov
rcrl
out
or
imul
inc
pop
sbb
aad
test
shlb
ss
mov
subl
mov
enter
sub
inc
cltd
xor
sbb
arpl
jmp
ficomps
mov
fs
aas
sbb
cmpl
add
or
pushf
stos
insb
fmul
rcl
cmp
pop
aam
sbb
in
lods
mov
pushl
mov
push
addr16
cmp
test
cmp
dec
xchg
mov
sbb
test
cmc
es
repz
xor
sarb
fstl
or
popa
jae
outsl
stos
add
cltd
adc
mov
ds
rcrb
out
ret
orb
mov
lcall
insl
mov
mov
push
sti
dec
xchg
xor
mov
add
xor
push
dec
cmpb
out
jne
sbb
ficoml
shlb
push
cmp
xor
cmp
jae
cwtl
add
dec
out
mov
or
pop
pop
adc
cmp
loopne
or
pop
in
dec
mov
mov
mov
test
fdivrs
movsb
mov
mov
rolb
and
ret
shlb
sub
sti
jno
gs
sbb
shll
adc
push
push
dec
icebp
jmp
sbb
sbb
mov
xchg
pop
dec
mov
adc
sahf
inc
repz
xor
int3
fwait
jnp
mov
lock
jmp
lahf
mov
out
in
cwtl
scas
and
aaa
jp
xchg
inc
lcall
cmp
test
mov
fcmovu
mov
and
je
cld
xchg
push
pop
push
les
shll
hlt
mov
cmp
mov
mov
dec
stos
or
mov
or
pop
jae
in
mov
pop
insl
lahf
inc
pop
xlat
and
sahf
jbe
test
and
mov
lcall
lods
lcall
and
test
push
insb
and
xor
bswap
out
dec
pop
push
jle
imul
mov
push
lock
or
pushf
mov
cs
push
and
hlt
add
sti
add
jb
sarl
dec
je
arpl
lahf
subl
xchg
fiadds
and
jo
stc
leave
or
dec
adc
mov
or
rcrb
subl
pop
sbb
repz
ljmp
enter
bound
repz
jb
rcrb
sub
adc
popf
out
add
jo
in
push
pop
push
pusha
inc
mov
notrack
dec
xchg
pop
or
dec
lahf
call
add
fcoml
push
mov
cwtl
xchg
fs
push
adc
mov
jge
jg
stc
sahf
fisttps
add
fstpl
andb
or
mov
add
test
jmp
xchg
lret
enter
fnsave
jmp
repz
xor
fwait
cmp
and
lods
jp
fistpl
repz
and
mov
xor
push
mov
ljmp
fs
dec
cmpsl
je
imul
pop
inc
movsl
testl
dec
sbb
stos
or
jb
rep
pop
xor
push
mov
add
push
rorl
fcomip
inc
push
xchg
push
add
pushf
jl
jo
and
out
mov
xchg
sbb
jae
stos
cmp
insl
scas
je
fdivr
jmp
in
int
mov
lock
mov
mov
cltd
inc
mov
test
cmpsb
cld
jbe
inc
or
out
cmpsl
xchg
mov
inc
stos
std
pop
fidivl
in
mov
push
insl
in
outsb
scas
lret
mov
ds
pop
call
movsb
cli
in
xchg
sub
inc
mov
je
xor
pop
xor
pop
jno
ret
stos
inc
cmpsb
aas
add
es
push
icebp
xchg
pop
push
push
popa
xor
inc
mov
dec
adc
ss
es
cmc
lock
dec
fdivrp
and
jno
jle
orb
push
xor
dec
fldl
mov
mov
rcr
test
xchg
xor
xchg
jp
xchg
or
decl
in
jmp
stos
mov
mov
or
jnp
xor
mov
add
into
xchg
mov
sbb
scas
stc
imul
cltd
loope
lea
fidivrs
pop
pushf
inc
lret
inc
popa
mov
mov
and
sbb
push
rol
ja
movsl
mov
iret
loopne
clc
dec
push
aad
and
daa
xor
pop
jmp
loop
scas
adc
insb
sub
aam
ljmp
movsl
orl
lock
push
into
mov
cmp
push
and
sbb
dec
shl
clc
sub
decb
mov
xchg
in
jmp
ds
test
mov
int3
jg
inc
adc
lret
int
cmp
stos
test
addr16
xor
loopne
loopne
adc
xchg
int3
mov
mov
idivl
mov
cmp
stc
insb
push
or
jo
iret
sbbl
push
in
push
call
sti
cltd
dec
shlb
jg
push
and
inc
mov
out
leave
mov
icebp
std
dec
mov
push
fidivs
ret
sub
mov
rcl
aas
out
mov
daa
xor
lds
cmp
mov
stos
data16
mov
add
dec
xchg
push
push
pminsw
mov
pop
xchg
jmp
xor
and
pop
add
sti
jecxz
sub
mov
subb
dec
inc
push
shll
cmp
in
xor
xchg
mov
or
mov
add
inc
add
fldenv
ret
sub
push
mov
and
lret
fldenv
fstps
pop
mov
xor
xor
movups
adc
stos
sub
and
adc
pop
dec
dec
mov
lods
sub
xchg
mov
xchg
push
nop
imul
shl
ss
and
jb
cmp
inc
mov
lds
pop
and
pop
inc
jae
and
aam
test
aad
mov
fs
add
fld
mov
sub
sbb
rcll
xchg
xor
sarl
iret
iret
dec
in
sbb
and
lret
loopne
movsb
mov
jns
aad
filds
mov
dec
bound
xchg
inc
cmp
jno
or
dec
scas
fimull
pushf
int
push
mov
sahf
out
jle
cmp
leave
addr16
dec
adc
fsubs
jecxz
or
and
jnp
pushf
enter
dec
movsb
mov
inc
jnp
pop
loopne
or
mov
xor
push
and
jg
adc
in
cld
fwait
xchg
data16
into
push
add
mov
cmp
out
insb
cmpl
jne
sbb
mov
xlat
lret
popa
sub
out
mov
mov
mov
cmc
into
pop
push
int3
pop
bswap
jl
adc
lods
mov
mov
mov
aam
xor
std
fwait
movsb
rep
gs
decl
in
xlat
xchg
mov
xchg
in
push
mov
sbb
mov
fcompl
add
xor
add
xchg
leave
pop
mov
jnp
cld
xchg
in
mov
into
dec
imul
fcoms
scas
xor
filds
loope
rcll
sahf
pop
pshufw
mov
pop
rorb
sub
sbb
inc
add
ret
and
pop
cs
mov
xor
pop
or
lods
sub
in
inc
and
sbb
fisttps
insb
ljmp
int
ljmp
dec
mov
repz
adc
es
cmc
pop
scas
dec
mov
das
aaa
popf
and
adcl
orb
pop
mov
in
das
adc
fdivp
int3
jl
push
fdivrs
jg
push
fwait
outsb
nop
jnp
fadds
add
inc
iret
add
test
push
sub
cmp
lret
in
mov
cmp
repz
arpl
fwait
xor
and
lcall
inc
fdivs
pop
lock
outsb
mov
push
adc
jecxz
into
rcrb
aas
cmp
int
ret
lods
lret
gs
loopne
lock
xor
push
cmp
scas
dec
jg
or
cmc
jne
js
and
mov
in
dec
mov
dec
pusha
les
pusha
lret
cmc
in
insb
mov
aas
jmp
fsubrl
cmp
mov
jmp
test
inc
hlt
cmp
mov
dec
insl
mov
mov
aad
rolb
add
xchg
cmpsb
adc
pusha
jg
dec
cmp
jl
sbb
std
decb
mull
testb
mov
dec
push
adc
test
enter
les
mov
cwtl
dec
mov
rcll
loope
sub
push
mov
xchg
lods
loop
das
cmc
push
mov
dec
fxch
int
cltd
mov
lock
add
jmp
aas
addb
shl
xorb
xor
pop
mov
in
cmc
and
mov
add
aam
outsb
dec
fsubl
insl
add
sbb
sub
add
cmc
cmpl
jbe
bound
xchg
or
adc
sbb
lds
pusha
and
test
push
bound
in
lcall
jge
shlb
mov
repnz
xchg
lahf
stos
call
les
stc
in
aam
add
inc
idivl
rclb
in
jae
mov
cmpsb
icebp
rsqrtps
shll
jge
adc
mov
jae
call
aas
jne
scas
loopne
testl
gs
fdivrs
pop
push
mov
out
jl
push
mov
aad
jb
mov
ja
cmpsl
movaps
out
mov
mov
stos
adc
sub
loope
inc
mov
jo
pop
mov
xorb
enter
ja
shlb
hlt
js
mov
jecxz
or
lods
imul
pop
sbb
outsl
cli
dec
jb
lds
add
cltd
js
sbb
add
std
sub
lds
jo
outsb
pop
and
lret
push
jg
add
scas
int
rclb
loope
jo
sub
dec
fbstp
mov
mull
shlb
fistpl
pushf
mov
imul
add
imul
or
aas
jmp
bound
jecxz
add
pop
div
cmp
pop
aaa
or
stos
push
push
pop
push
ss
push
sbb
add
outsb
pop
jecxz
xchg
addr16
mov
test
jp
mov
popa
ljmp
inc
sbb
rcrb
pop
push
les
in
scas
outsl
ljmp
add
loopne
sbb
mov
out
adc
mov
imul
adc
rcrl
mov
adc
ret
push
addl
mul
repz
sbb
sahf
subb
rclb
mov
sbb
add
sbb
ret
lock
jns
mov
test
jp
xchg
repz
gs
cmpsl
into
add
dec
pushf
in
stc
and
add
and
xchg
mov
mull
push
cmp
frstor
shlb
negb
cs
xchg
jns
sub
xchg
mov
imul
cmpsb
pushf
scas
stos
std
xchg
and
push
ljmp
hlt
push
pop
lods
bound
xchg
imul
std
fcompl
add
je
insb
out
bound
lea
mov
push
mov
aaa
sbb
int
and
or
xor
inc
adcl
or
adc
push
test
mov
pop
push
pop
aam
pusha
cmpsb
xchg
and
push
rcll
xchg
inc
pop
pop
push
inc
sti
pusha
cmpsb
jno
push
mov
stos
sub
jnp
sarb
xchg
out
inc
ss
cwtl
jl
nop
mov
in
push
in
fimuls
movsb
test
mov
cmp
cmp
xorl
xor
mov
jns
sarb
mov
fnstenv
out
fimull
testl
xchg
jle
push
pop
jnp
and
call
jno
es
pop
xchg
leave
fwait
clc
mov
and
mov
or
and
jae
adc
fstpt
lahf
fs
sub
imul
xchg
and
jno
imul
sub
pop
mov
mov
push
mov
dec
mov
dec
mov
rol
cmp
push
divb
popl
cld
fnstenv
xchg
dec
cmp
cwtl
fimuls
dec
mov
xchg
sub
jnp
mov
jo
pop
xchg
xchg
mov
leave
sbb
sub
inc
add
jb
jns
out
mov
in
xchg
mov
mov
jecxz
pushf
jbe
mov
jmp
aas
insb
bound
out
xchg
int3
lods
test
xlat
mov
aas
pop
jmp
cli
stos
inc
cmpb
shll
ret
mov
das
cmpsb
cmc
sub
insb
xor
mov
jmp
call
xchg
and
insb
cmp
mov
xchg
arpl
push
dec
adcl
add
ss
pushf
in
mov
lcall
shlb
loop
push
xor
jecxz
loopne
and
sub
sarl
xchg
mov
icebp
out
arpl
sub
cmc
repnz
cli
cmp
sbb
int3
pop
push
std
dec
aad
jle
pop
jg
add
sbb
in
ja
fcomps
arpl
lods
lcall
dec
add
lods
pop
test
mov
xlat
and
and
sbb
mov
push
xor
xchg
dec
push
xchg
in
push
or
add
ljmp
dec
jg
jb
mov
jbe
addr16
in
add
xlat
mov
imul
xchg
in
fimull
jle
testb
push
sarb
icebp
cmp
pop
stc
cmp
push
jb
dec
orl
scas
cmp
xor
loop
jb
or
stc
push
xchg
cmc
sbb
or
mov
sub
push
sub
loopne
jle
idivb
js
add
filds
mov
or
movsb
int3
dec
ljmp
fwait
adc
pop
stos
test
lcall
decl
and
aaa
cmp
incb
mov
shll
xor
sbb
sbb
cmp
mov
aad
push
into
aad
leave
and
mov
cwtl
ret
xor
cmp
mov
ret
xchg
push
arpl
ret
aam
lods
mov
or
repnz
into
xchg
cmpl
jns
xor
mov
push
pop
repz
sarb
dec
mov
in
fmul
in
shl
mov
pop
push
cld
das
xor
adc
adc
lahf
movsb
push
xchg
fsubr
movsb
hlt
or
sti
push
pushf
lock
movsl
pop
add
and
cmc
incb
inc
ss
mov
ljmp
cmc
cwtl
push
xchg
dec
push
inc
mov
push
leave
je
adcl
mov
pusha
gs
out
into
adc
mov
or
aaa
roll
out
mov
inc
data16
aas
js
test
aas
outsl
jns
lods
push
ja
gs
fcoml
inc
jg
fdivrl
mov
cld
adc
xor
mov
adc
aad
mov
dec
lahf
push
test
pusha
sahf
add
xchg
add
in
daa
mov
out
lcall
test
lock
je
movsl
xchg
pcmpeqw
xchg
ficomps
xchg
inc
inc
ss
js
clc
mov
rcrl
fidivl
scas
xor
or
cltd
or
push
sbb
pop
mov
sub
arpl
mov
lahf
cmp
mov
stos
or
xor
dec
and
add
pop
dec
jb
jp
outsb
xchg
test
dec
push
lds
cld
repz
test
lods
aad
movsl
xor
paddsw
movl
and
sbb
pop
pushf
es
mov
jmp
or
mov
mov
imull
fnstcw
adc
js
ja
rcll
add
pushf
cltd
mov
jo
icebp
gs
out
push
cmp
sub
fidivl
orb
mov
dec
fstp
shl
pxor
loopne
loopne
dec
sub
jmp
or
xor
push
nop
hlt
test
test
je
jbe
insb
pop
inc
jo
xchg
cmp
sub
inc
pop
fildll
repnz
mov
and
outsb
out
mov
imul
leave
mov
lea
jb
aad
mov
sub
es
and
or
or
pop
add
out
je
cmp
cs
test
into
stc
pop
adcl
cli
push
xor
mov
hlt
addl
push
sbb
movsl
call
push
push
stos
data16
add
cmpsl
xchg
loop,pt
push
mov
pushf
daa
sbb
les
aaa
sahf
jnp
dec
stos
insl
adc
hlt
mov
jno
lret
xchg
fistps
add
in
rcrl
je
pop
jl
sbb
or
fisubrs
jle
scas
lcall
adc
sub
in
mov
repnz
aaa
loopne
push
je
pop
xlat
and
stc
pop
sbb
dec
inc
dec
xchg
fs
xchg
out
fwait
and
pop
pop
dec
cmp
pop
dec
call
shl
mov
out
mov
lds
out
in
sarb
aam
cltd
sbb
out
push
clc
daa
rcrb
xchg
dec
sub
rcl
sub
push
pushf
jle
je
push
aas
adc
stos
cmp
lcall
or
aas
push
loope
outsl
loop
add
jge
pop
jl
fldl
and
jg
ret
pushf
push
xchg
imul
addl
rorb
rcr
xor
jb
js
lret
mov
mov
add
sub
or
loopne
jl
cmpsb
jbe
adc
fldln2
ret
mov
cmp
pop
loopne
loop
xchg
adc
or
mulb
shlb
jp
or
cld
ret
test
sbb
subb
or
pushf
push
push
mov
shll
jne
lea
or
arpl
inc
pop
repz
pop
mov
shll
cltd
icebp
in
xchg
sbb
jae
ss
ljmp
aad
fildll
gs
popf
in
movsb
jne
rolb
lods
mov
je
lcall
iret
sub
push
push
lret
repnz
inc
sub
ss
arpl
mov
mov
jge
cld
add
xchg
inc
cmp
jle
cltd
pop
data16
js
out
int
push
ffree
mov
push
mov
jo
inc
fwait
mov
adc
daa
gs
push
adc
std
addr16
add
mov
fs
push
add
sar
arpl
test
ret
cmp
mov
jmp
ss
divb
dec
movsl
aaa
icebp
nop
push
push
in
sbb
fldt
dec
jg
cmp
xchg
pop
in
lods
dec
mov
ja
cmpsl
jecxz
push
push
inc
jbe
adc
ja
shlb
mov
push
sbb
sbb
test
adc
loope
inc
mov
lcall
adc
aad
push
add
shrl
in
xchg
add
loopne
sub
xchg
cmp
aad
lods
lret
pop
push
adc
cli
push
loope
dec
cs
cs
out
clc
jle
aam
lcall
insb
and
sbb
xchg
push
movsl
ror
add
jl
out
aas
arpl
sbb
inc
call
jle
mov
mov
data16
push
pop
pop
and
dec
lea
mov
pop
outsl
push
shr
insb
xchg
mov
cli
cli
fstpl
dec
insl
inc
cld
test
dec
mov
movsb
pop
cwtl
pop
xchg
adc
xor
mov
xor
in
fwait
lods
popf
shlb
add
mov
lret
xchg
and
inc
mov
lret
gs
call
xchg
leave
cmp
lods
daa
sbb
aaa
inc
sbb
push
jge
pop
fnstsw
addr16
call
push
test
leave
lret
icebp
dec
sub
fiadds
mov
lds
push
in
inc
sub
xor
cmp
xchg
cmp
arpl
push
lret
add
fsubs
or
mov
insl
fistpl
jnp
in
clc
inc
mov
dec
subl
test
dec
inc
stos
movsb
mov
jmp
and
jmp
out
jns
jmp
mov
adc
cmp
adc
arpl
sbb
stos
sarl
out
and
sub
dec
dec
insb
stc
mov
push
mov
jmp
jg
cmpsl
test
mov
push
pop
ds
jge
or
leave
cmp
push
rolb
or
cmp
mov
andl
cmp
push
mov
dec
mov
je
mov
and
adc
loop
mov
push
xor
jmp
je
imul
inc
jg
xorl
add
push
pop
iret
push
es
int
add
ljmp
pop
dec
push
mov
pusha
popa
stc
add
andb
shl
test
stc
rcr
jle
mov
divps
dec
aam
sub
inc
in
pop
dec
xchg
aaa
in
jg
xlat
push
mov
add
and
pop
int3
les
mov
roll
pop
int3
popa
arpl
xlat
push
clc
test
dec
add
lea
sub
xor
daa
out
ja
xchg
dec
sub
pushw
add
cmpsl
xlat
adc
dec
add
mov
cmp
xor
mov
add
loop
adc
xor
jns
loopne
popf
xor
nop
lcall
cmp
xor
rol
mov
pop
lahf
les
dec
cmpsl
sti
insl
popa
pop
xchg
push
loope
mov
mov
mov
ljmp
les
cmc
lret
inc
pop
fistpl
pop
in
add
or
movsb
push
sbb
stos
push
adc
or
push
push
push
sub
adc
mov
gs
add
movsl
imul
dec
fadd
les
mov
xchg
add
or
repz
loopne,pt
shrl
jae
sbb
sub
and
push
aas
fstps
and
pop
mov
mov
add
cli
test
fld
fisttps
jg
add
mov
pop
push
jae
shrl
fdivp
inc
cwtl
or
pop
push
nop
std
jo
sbb
push
cmp
mov
test
pop
imul
into
add
inc
cmc
add
aas
cmc
shlb
getsec
imul
dec
sbb
jmp
xchg
or
arpl
les
adc
sahf
xchg
xor
test
lahf
lds
addb
push
adc
and
sbbb
mov
test
sub
movsl
divb
push
sbb
imul
adc
inc
out
sti
adc
cltd
jbe
cli
sub
xchg
push
adc
fldz
mov
xor
scas
push
dec
adc
jecxz
shrb
fisubrl
loope
repnz
adc
mov
pop
or
mov
sub
cmp
push
push
pop
or
ret
add
mov
jge
scas
mov
mov
lret
ficoml
test
jl
sub
fsubrs
cli
mov
push
into
bound
aam
pop
cmc
movsl
pop
and
lds
loope
es
movsl
shll
loop
ja
mov
je
pop
aas
jnp
add
and
adc
arpl
add
stos
sbb
xchg
cwtl
xchg
ret
and
and
out
icebp
mov
adcb
inc
shl
lock
pop
inc
dec
push
or
movsb
add
repnz
dec
outsb
jns
aaa
movsb
push
inc
adc
xchg
and
cmpsl
dec
adc
orb
test
outsl
stos
dec
cmpsb
je
push
scas
in
xor
fidivs
xor
adc
lahf
sub
lea
xor
add
jno
mov
xchg
push
test
sub
pop
sub
leave
mov
mov
fistps
mov
pop
lock
xor
dec
sbbl
sbb
movsl
inc
outsb
sbb
xor
cmp
das
cmp
clc
sub
mov
push
adc
es
sub
pop
and
xor
jp
loopne
inc
dec
mov
xchg
jg
negb
mov
mov
dec
loopne
popa
stos
and
push
fidivrs
popa
rorb
outsl
popf
cli
sub
push
outsb
icebp
scas
push
into
and
xor
cmpsl
and
push
mov
loope
mov
pop
enter
test
hlt
mov
sbb
mov
sub
aad
cmpsb
gs
insl
sub
movl
test
les
xchg
adc
dec
pop
loopne
mov
mov
loopne
push
mov
fs
iret
mov
push
icebp
cmp
inc
test
fnstenv
aad
pop
lahf
sahf
test
jo
mov
jb
xor
cmpsb
jb
push
mov
inc
or
pop
jl
sbb
adc
push
cmp
and
fiaddl
fidivrs
mov
inc
scas
xor
pusha
ljmp
cmp
and
je
jae
xor
hlt
loop
faddl
fldl
pop
push
in
popf
inc
test
shl
rclb
lock
mov
push
das
push
add
aaa
out
nop
int3
pop
mov
pusha
cmp
sbb
pop
push
push
or
mov
add
jo
dec
xor
ja
sbb
push
in
xchg
clc
push
stc
enter
fldt
adc
into
inc
add
lret
cld
push
shll
leave
lods
push
adc
cltd
lret
adc
pop
rcll
push
adc
aam
imul
fmull
movsb
mov
dec
jb
cmp
daa
iret
push
clc
cmp
sbb
jno
dec
jge
push
aad
jo
cmp
in
popa
sub
fs
mov
mov
cli
test
rcl
sub
aam
or
add
movsb
mov
dec
fdivr
adc
in
sub
fbld
dec
sub
inc
into
push
outsb
cwtl
jmp
and
insl
lret
or
mov
inc
mov
test
pop
hlt
and
inc
or
addl
imul
cmp
cmp
push
xlat
mov
cmp
call
mov
inc
arpl
call
shll
xchg
mov
into
dec
pop
bound
cmp
add
mov
jne
stc
inc
dec
aad
fdivl
xlat
std
mov
cli
je
jns
push
int3
es
add
popf
outsb
cmp
sub
push
into
inc
add
pop
rcr
stos
add
pop
mov
call
cmp
loope
mov
imul
stos
cmp
push
ja
negb
adc
mov
shll
cmp
jnp
inc
stos
jae
xchg
outsb
push
jno
es
xchg
dec
pusha
mov
mov
dec
ds
test
repz
ljmp
in
pop
jns
xchg
stos
lock
jb
push
mov
orl
mov
push
lds
add
in
pop
inc
fsub
mov
xchg
ret
dec
pushf
cmp
repnz
bound
jo
jns
mov
imul
mov
outsb
xchg
test
stos
cltd
xchg
push
imul
pop
mov
mov
int3
out
pop
mov
jge
jb
pop
dec
mov
or
dec
nop
popa
xchg
sbb
lds
fwait
jmp
cmp
movsb
rol
aas
sbbl
sub
fsubrs
test
mov
mov
es
jbe
leave
ficompl
lahf
push
subl
fmull
cmp
dec
mov
mov
outsl
xor
dec
push
mov
adc
imul
sbb
ret
add
out
scas
out
es
sbb
pop
pusha
leave
push
ljmp
call
rcl
ret
lahf
pop
test
mov
jl
js
lea
imull
data16
daa
fidivrs
stos
and
xorl
out
push
das
fbstp
dec
sarl
push
ja
pop
test
and
aaa
in
arpl
cmp
sub
add
pop
inc
cmp
nop
scas
mov
cmp
ss
ror
sub
lods
cltd
in
pop
adc
add
ficomps
sbb
cmp
stc
aad
cli
dec
mov
cmp
repnz
jbe
push
shll
pop
imul
xchg
subl
clc
add
insl
int
rorl
jno
sti
ret
pop
stc
xor
std
jle
or
cmp
jl
sar
notb
sbb
lret
cmp
jae
jae
push
fisubl
mov
lds
and
icebp
sbb
fxch
inc
dec
xchg
lods
sbb
rcrl
mov
bound
loop
ja
fmull
jmp
cmp
fnstenv
cmpsl
sub
jmp
fs
xchg
xlat
sbb
jns
fistps
push
or
or
inc
jecxz
add
push
xor
or
pop
push
push
push
mov
popa
adc
shll
mov
mov
pop
sub
call
push
mov
hlt
mov
fcoml
aam
ds
fmuls
mov
lea
fwait
std
fwait
ret
xchg
mov
add
stos
jmp
push
sub
xor
xchg
xchg
sub
jecxz
push
stos
push
xchg
arpl
and
xor
iret
stc
push
fcom
outsb
mov
pop
adc
or
and
lahf
pushf
pop
and
hlt
ljmp
dec
stos
cs
jbe
lock
dec
jae
sahf
xor
sub
jns
mov
push
lea
mov
nop
inc
iret
leave
stos
inc
popf
insl
cltd
jno
push
shlb
and
pusha
mov
rcll
lods
sub
mov
test
aam
or
dec
pop
mov
add
push
adc
mov
sub
movsl
sbb
out
mov
push
ja
adc
push
or
fcomps
mov
add
into
in
sahf
outsb
out
lahf
jge
mov
cs
inc
xor
mov
fstp
arpl
fwait
pop
add
in
mov
xor
jp
lret
sbb
and
fisubl
orl
imul
jno
lret
xor
ss
int
xchg
mov
pop
ljmp
pop
repz
fisubl
jecxz
jp
fdivp
push
adc
mov
rolb
xchg
mov
add
sti
push
hlt
mov
jecxz
inc
or
xor
aam
mov
fldcw
cmp
insl
test
int3
jg
scas
out
inc
or
add
adc
or
mov
aas
imul
mov
sbb
xchg
pop
shll
bound
sub
cmp
add
mull
inc
repnz
pop
pop
dec
mov
jae
fsubrs
fistps
adc
mov
int3
fsubs
and
and
les
jno
in
dec
add
mov
adc
ret
xor
pop
mov
cltd
inc
push
popf
sbb
ficoms
push
imul
loope
jmp
gs
push
jl
push
loopne
scas
mov
xchg
cmp
mov
bound
and
xchg
rcrl
mov
hlt
leave
or
jbe
int
cmp
mov
ret
sbb
or
sbb
popf
aam
jo
scas
dec
out
dec
add
mov
stos
push
int3
jo
sbb
test
mov
mov
adc
fstl
test
sub
jp
adc
cmp
scas
lea
push
fnstcw
inc
pop
test
outsb
jl
movsb
inc
icebp
outsb
cltd
cmp
std
push
fistpll
sub
insb
aaa
mov
fisttps
cmp
andb
jecxz
add
jb
sub
cmc
inc
push
dec
jmp
inc
enter
outsl
es
std
andb
sbb
int
inc
xchg
es
add
xchg
xor
cmp
mov
outsb
inc
dec
dec
mov
xchg
cli
jb
jp
arpl
and
bswap
lods
test
mov
push
push
jae
dec
les
dec
mull
lods
and
cmp
loope
cmp
lock
xor
mov
mov
xor
push
imul
mov
inc
pushf
inc
jg
adc
mov
leave
dec
add
mov
adc
fxam
xor
int3
mov
jne
dec
adc
fiadds
lahf
lods
sub
mov
push
add
in
js
orl
mov
es
stos
aam
stos
sub
mov
cbtw
xor
mov
xchg
jnp
fmul
jbe
leave
push
addr16
lcall
mov
int
or
mov
repz
and
dec
xor
add
jns
cmc
mov
mov
jmp
rol
inc
inc
hlt
inc
jbe
and
jae
jle
mov
ss
adc
cld
add
inc
sarl
mov
pop
fisubrs
push
push
sbb
xor
cmp
out
sti
adc
fildll
scas
pushf
and
push
popa
fsubrs
inc
sbb
lds
push
ret
push
ficoml
scas
imul
push
int
dec
adc
mov
inc
push
jmp
cmp
daa
dec
stos
or
and
pop
shrl
lret
repz
subl
cmp
sbb
ret
xchg
mov
mov
lcall
dec
or
sub
pushf
cmp
orb
sub
inc
pop
cltd
sub
test
push
test
push
xor
stc
das
push
inc
mov
loop
adc
in
data16
fstpt
push
dec
pop
mov
jp
push
mov
icebp
in
stos
jns
sbb
fldt
or
jne
addr16
mov
jb
push
fxam
imul
cmp
in
in
xor
outsb
mov
dec
or
xchg
ljmp
pop
cltd
out
push
dec
stc
jg
into
out
daa
jmp
xchg
adc
inc
loopne
imul
pop
sbb
mov
add
int
out
es
sar
jno
das
add
mov
fsubs
fldenv
jl
cmp
cmp
negb
cmp
pop
and
sub
sub
mov
dec
push
pop
pop
ja
iret
aas
test
xor
outsb
jns
js
push
test
adc
icebp
fs
loopne
push
repnz
mov
cmc
mov
lods
and
testb
sbb
aaa
pop
jmp
xchg
fsub
rorb
outsb
pop
lcall
pop
and
sbb
sbb
mov
sbb
pop
mov
dec
aas
add
xchg
imull
popa
addl
sbb
xor
in
fstl
mov
jnp
in
sarl
pop
push
sub
and
cwtl
push
dec
movsl
clc
dec
xor
sbb
xchg
incl
sbb
in
mov
neg
jbe
jns
jecxz
clc
in
shlb
mov
xor
add
sub
mov
xchg
test
xchg
and
lret
pop
push
dec
dec
and
ja
jle
nop
push
add
sti
dec
or
call
xchg
call
mov
fldenv
inc
stos
mov
out
lock
fisubrl
fistpll
enter
pushf
aad
lods
ds
incb
pop
push
xchg
aad
es
mov
in
loope
xor
sbb
leave
jp
push
sub
mov
ds
sarb
inc
fwait
or
or
cmp
test
fists
dec
xor
std
std
mov
repnz
bound
mov
in
cwtl
je
ja
push
iret
into
jle
jne
inc
popf
fistps
cmpl
loop
shlb
dec
sahf
jge
mov
mov
in
das
lods
notl
lret
orl
mov
nop
cmc
sahf
clc
sbb
fdivrs
mov
test
hlt
and
lods
and
test
mov
xor
cmp
clc
sahf
sbb
in
pusha
xor
mov
cmp
hlt
sub
sbb
mov
ljmp
fisttps
stos
push
mov
pushf
inc
adc
xchg
or
lods
pop
adc
stos
mov
test
divb
ret
push
jle
xor
sbb
add
stc
test
mov
std
lret
push
mov
mov
inc
notb
inc
in
test
enter
cmpsb
decl
mov
out
push
pop
ret
ret
mov
pop
push
and
xchg
insl
in
push
adc
mov
rcr
or
aas
or
mov
pop
cltd
repz
mov
stc
fwait
ret
cli
insl
loopne
dec
fisubrs
lods
repnz
jg
push
cltd
xchg
mov
xchg
and
icebp
stos
sub
mov
in
jl
inc
ret
jg
imul
out
add
shrl
testb
in
lret
dec
mov
adc
push
mov
imul
mov
ja
sub
jbe
xlat
push
fwait
xor
push
or
inc
sub
push
loop
ret
mov
pusha
or
aam
or
popa
icebp
mov
dec
sbb
faddl
xchg
fsubl
lds
lahf
xchg
pusha
pop
cmp
inc
mov
in
pop
xchg
add
icebp
aas
icebp
xor
hlt
lret
mov
cmp
int
into
dec
sbb
mov
sbb
adc
les
push
pop
push
icebp
cmc
insb
mov
std
pop
fdivrs
iret
xor
mov
aam
cmpsb
ljmp
lret
mov
xchg
ja
js
mov
mov
addr16
ljmp
xchg
sub
push
insb
inc
and
xchg
cmp
adc
push
data16
out
gs
arpl
pusha
andl
cmc
iret
dec
dec
inc
push
fsts
jle
sbb
cwtl
idivb
add
gs
imull
dec
inc
scas
pop
push
xor
subb
pop
sub
into
pop
add
imul
sbb
jnp
imull
dec
in
sti
xorl
movsb
mov
aam
sub
mov
adc
imul
jne
or
adc
pusha
loop
vpunpcklbw
jne
cltd
out
sbb
mov
cltd
in
cs
arpl
inc
movsl
pop
aaa
cmpb
and
mov
cmpsl
imul
jns
add
subl
rorb
pop
jge
push
pop
bound
xchg
mov
lea
xchg
mov
mov
mov
dec
jmp
movsl
xor
pop
ss
push
orl
add
cld
popf
dec
mov
xchg
int3
or
dec
pop
sbb
push
outsl
dec
ss
ljmp
mov
xchg
push
inc
std
cmp
popa
popa
jbe
mov
fmul
iret
ret
jns
in
sub
test
stc
mov
fistps
clc
pop
cmp
push
pop
sbb
mov
in
mov
push
test
mov
jno
test
repnz
vpor
pop
xor
dec
inc
gs
lret
daa
jmp
xchg
js
fwait
insl
fbstp
mov
or
add
adc
out
jmp
fmul
dec
xchg
mov
scas
and
out
push
and
insl
repnz
jbe
xor
pop
inc
daa
jne
mov
jbe
stc
les
sub
sbb
jno
dec
imul
and
sar
loopne
mov
cltd
jae
int3
jb
das
adc
and
rorb
enter
xchg
cld
pop
movsb
sub
xor
lea
xchg
cmc
loope
mov
jecxz
cmc
xor
popf
repnz
mov
and
jp
rcrb
addb
loop
ret
fdivrp
jp
dec
jmp
jne
loope
inc
repz
mov
xchg
lahf
lods
in
jbe
cmp
test
lea
jbe
scas
xorb
xchg
sbbb
hlt
jno
push
sbb
mov
sbbb
xchg
ds
mov
inc
fisubrl
ret
ds
iret
hlt
jbe
aas
xor
pop
push
mov
ret
xchg
loop
adc
pushf
sub
dec
or
pop
cmp
dec
movsl
pop
mov
sub
stc
fmuls
insl
lret
and
jns
ret
dec
xor
in
push
xor
xchg
iret
fldcw
cmp
sarb
xor
dec
insb
andl
dec
shll
imul
xor
push
testb
mov
inc
lea
iret
iret
fisttpll
adc
cmpsb
out
lods
dec
and
sub
iret
out
push
out
jae
rcll
xor
or
pop
cmp
push
ret
xor
mov
xor
add
gs
mov
add
fmull
cwtl
pop
mov
fsubrs
fdivrp
xlat
mov
pusha
mov
clc
mov
jnp
jo
push
or
push
dec
dec
outsb
push
xchg
jnp
add
fidivs
sbb
pushf
test
out
movsb
push
add
pop
cmp
fcmove
dec
mov
or
push
mov
cs
pop
fwait
jbe
mov
ss
xlat
add
shlb
xchg
push
or
repnz
jno
lret
pop
mov
push
jp
adc
aam
fs
cmp
fwait
jecxz
push
dec
adc
pop
xchg
clc
jae
pop
pop
bound
in
mov
push
out
dec
or
enter
cmpsl
sbbl
jge
stos
test
sahf
sbb
and
jecxz
and
int3
lcall
stos
and
rclb
into
mov
inc
xchg
test
fstl
cmp
lcall
js
je
out
cmp
xor
rcrl
push
movzwl
je
inc
ds
sbb
fxch
pop
adc
mov
mov
int3
cli
dec
mov
add
fdivrl
jge,pn
gs
xchg
and
xchg
sub
inc
push
mov
rcrb
jle
cmc
rcrb
test
stos
stos
bound
lahf
loopne
add
addr16
aaa
test
or
lock
cmpl
mov
xor
arpl
xchg
roll
shr
add
scas
and
lahf
lock
mov
push
out
aaa
icebp
xchg
or
jno
inc
rcr
dec
xchg
arpl
pop
popa
pushf
data16
movsl
into
mov
mov
mov
or
dec
and
sub
shlb
inc
loope
negl
jp
mov
in
call
adc
xchg
sbb
mov
dec
pop
sbb
cmp
sbb
push
jb
mov
cmp
adc
sub
push
inc
fcompl
mov
imulb
or
push
mov
dec
ja
mov
mov
out
in
mov
xchg
aad
push
lret
ss
sahf
pop
ljmp
cmp
enter
mov
pusha
loop
jo
aad
orl
pop
xor
gs
into
aaa
insl
cmpsb
into
mov
adc
xchg
xchg
xchg
fisttpll
shrb
and
xlat
pushf
pop
add
mov
mov
cmp
cmp
addb
push
push
jbe
mov
cmp
jb
push
push
xchg
mov
cltd
sub
cmc
mov
jg,pn
std
dec
push
cmc
add
pop
sti
ds
dec
repz
and
andb
sahf
lret
jae
add
sbb
sahf
add
add
push
cmp
test
push
popf
enter
jl
dec
aas
inc
std
stos
inc
jg,pn
mov
gs
test
mov
sti
lods
jecxz
aaa
dec
fisubrl
fninit
nop
out
les
inc
mov
lahf
lret
ds
or
orl
sbb
add
lret
into
sub
les
xchg
imul
or
test
cmp
outsb
je
mov
js
cwtl
sub
ja
add
cld
std
cmc
sbb
call
popa
and
bound
mov
lret
aad
add
xor
mov
addr16
mov
adc
in
hlt
mov
xor
push
mull
in
xchg
pop
mov
mov
out
pop
xor
negl
pushl
mov
mov
mov
jnp
dec
inc
negl
fstps
mov
fsubrs
scas
iret
out
fwait
xlat
sub
and
decl
or
and
leave
xor
fwait
jle
push
mov
test
inc
pop
inc
mov
mov
pushf
mov
pop
mov
xor
mov
jns
and
jmp
mov
pushf
test
ret
ja
cmp
cmc
rorl
test
pop
cmpsb
cli
sbb
inc
jp
aaa
roll
or
enter
lock
fiadds
sub
loope
sub
inc
cli
adc
xchg
leave
push
push
lret
repz
xchg
mov
leave
lret
imul
push
jp
pop
jno
pop
adcl
pushl
xor
sub
mov
jl
in
xor
fcoml
cmpsl
bound
rol
fidivrs
ret
adc
lea
dec
mov
int
sti
push
xchg
sti
push
mov
ljmp
subl
and
movsb
int3
fcompl
shl
adc
and
fnstsw
mov
adc
das
and
mov
cmp
stos
adc
mov
lahf
in
rol
adc
icebp
ljmp
push
add
dec
add
jecxz
andb
inc
push
mov
xor
shrl
std
int3
les
dec
in
aaa
jo
je
std
xor
push
repnz
mov
test
dec
cmp
pop
fmull
add
inc
pop
adc
call
jl
lea
scas
adcb
dec
jmp
inc
sub
mov
in
stos
xlat
adc
xor
jb
lcall
divb
leave
call
adc
sbb
divl
mov
jl
mov
ror
mov
test
adc
pop
xor
clc
or
sti
movsl
into
test
push
or
xchg
mov
mov
add
das
out
inc
sub
shr
jns
pop
fmuls
es
cmpsl
mov
fildll
push
adc
mov
mov
js
mov
flds
scas
xor
fs
mov
pop
mov
inc
cli
lahf
jmp
fisttpll
dec
xchg
mov
mov
test
lret
sub
je
adc
test
dec
mov
rorl
lcall
inc
fxam
mov
scas
jecxz
xchg
adcl
pop
ja
mov
inc
rol
adc
xlat
xchg
pop
lock
sub
aad
test
mov
lahf
pop
mov
ja
inc
inc
hlt
jp
xor
data16
gs
sbb
and
jbe
rorl
fsubrs
jns
ds
aaa
jb
sahf
or
pop
cmp
and
stos
popa
iret
insb
and
jne
pop
adc
xor
inc
dec
in
mov
rorl
lods
in
xor
imul
in
push
push
pop
xchg
in
out
add
test
pushf
je
int3
data16
scas
jbe
or
xchg
xlat
cld
inc
js
dec
loopne
notl
fcmovne
aas
push
inc
lock
push
cmpsb
mov
or
sti
cwtl
jnp
dec
jno
pop
inc
out
movsb
inc
mov
mov
add
xchg
rcrb
scas
jo
adc
mov
fnstsw
mov
push
icebp
cmp
push
pushf
mov
es
push
popa
scas
ret
adc
incl
and
ret
and
enter
xchg
out
jp
pushf
neg
or
aaa
sub
ja
out
pop
rep
imul
push
pop
xchg
mov
mov
lahf
push
cmc
inc
mov
mov
pop
stos
pop
sahf
mov
sbb
push
jg
push
sub
push
repz
mov
xor
loopne
pop
leave
mov
std
sti
xor
sbb
gs
xchg
or
sbbl
repnz
out
repz
stos
ffree
lcall
sbb
cmc
cli
adc
cmpsl
mov
rorb
adc
sub
gs
repnz
push
xchg
mov
std
mov
sub
repz
mov
sub
push
jbe
out
jae
jecxz
repz
pop
and
push
pop
sbb
ror
fs
push
cltd
add
movsl
pop
xlat
rclb
push
and
out
push
add
cmp
pop
pop
dec
xchg
inc
mov
inc
mov
xchg
jg
cltd
lret
cmp
xor
nop
mov
jnp
fs
push
test
xor
iret
icebp
scas
mov
inc
out
push
lock
and
pop
sahf
shr
mov
int3
std
mov
and
xor
sbbb
mov
fimull
sbb
mov
out
incb
out
out
mov
push
add
mov
add
xchg
ljmp
popl
scas
test
cmp
inc
rorb
jg
push
sub
mov
xor
jmp
fidivl
scas
cltd
mov
add
push
mov
or
aaa
lea
rorl
and
pushf
fstl
mov
and
adc
adc
aaa
cmpb
mov
inc
les
fcompl
out
neg
out
je
stos
mov
inc
sbb
mov
lods
and
stc
xor
aam
popa
push
int3
sti
mov
sub
call
sub
ffree
inc
pop
jge
mov
lds
pop
push
dec
mov
jb
ljmp
jb
out
mov
fbld
cmc
cmp
push
and
pop
or
sub
fcoml
ljmp
out
mov
dec
je,pt
cmpsb
inc
in
outsb
test
ret
pop
lret
mov
sub
sbb
xor
jge
lods
ds
out
mov
xor
adc
addl
cmp
repz
loope
jmp
adc
fs
push
sub
dec
shl
sbb
cli
shl
ljmp
pop
popa
pusha
inc
or
shrl
push
sub
pop
call
xchg
scas
loop
mov
lea
and
xlat
adc
xchg
push
dec
fstpt
bound
jl,pt
fsub
aaa
adc
add
enter
aad
or
leave
bound
outsb
movsl
push
fs
jb
jo
pop
mov
push
pop
jg
insb
or
inc
and
dec
int3
ret
shr
add
jg
cltd
jecxz
mov
data16
pusha
repz
idivb
movl
lcall
aaa
add
pop
loop
dec
outsl
pop
mov
pop
xchg
cmpsl
cmc
inc
aad
psubusb
push
and
mov
stc
clc
mov
xlat
pushf
add
mov
mov
mov
inc
mov
push
mov
mov
and
mov
ja
insb
movsb
xor
out
rorb
ffree
cmp
pop
es
add
adc
pop
mov
xchg
push
jge
push
inc
sub
mov
int
push
sub
jle
fdivs
outsb
lea
adc
aaa
into
and
sub
xchg
mov
mov
ljmp
cmpsb
xor
and
add
ja
lds
add
scas
mov
pop
aam
imul
repnz
push
js
pop
add
mov
iret
lods
jecxz
inc
sbb
popa
repnz
pop
je
mov
pop
out
les
in
addb
stos
nop
stc
adc
mov
movsb
lods
in
mov
mov
bound
rolb
mov
mov
dec
push
lcall
std
cmp
popa
sbb
rorl
into
out
test
mov
repnz
jp
imul
or
decl
mov
lock
lock
cmpsl
test
jo
xor
mov
xor
cltd
mov
lods
in
gs
xchg
dec
popa
lahf
dec
outsb
arpl
jp
xlat
mov
call
loope
inc
sahf
push
adc
cmp
sub
lods
mov
pusha
pop
push
mov
lods
adc
roll
pop
inc
add
cli
pop
into
add
sub
jle
imul
hlt
jg,pn
fildl
or
das
push
daa
xchg
push
add
out
push
push
rorb
in
cmpsl
scas
daa
push
ret
ret
js
pop
adc
mov
neg
js
test
jbe
sub
push
aad
jp
repz
call
mov
sbb
inc
iret
mov
pop
cmp
pop
fisubl
lret
dec
lahf
pop
cmpsl
mov
loope
sub
push
ficoms
pushf
sbb
addl
mov
cwtl
add
fstpl
push
xchg
push
rolb
mov
xlat
in
sub
pop
inc
xorl
inc
jb
loope
shlb
test
scas
add
cmpl
dec
out
fiadds
push
icebp
roll
sub
xchg
and
mov
lret
loope
fnstcw
das
pop
dec
inc
push
rorl
rcll
outsl
scas
xorb
sbb
sbb
sbb
ss
adcl
mov
xor
negb
inc
gs
push
inc
push
rclb
inc
pop
cmp
pushf
mov
lea
mov
adc
popf
mov
mov
add
mov
sbb
jbe
aad
test
and
insb
fs
in
arpl
jge
push
movsb
cmp
test
dec
pop
or
ss
loope
mov
jmp
dec
xor
addr16
cld
add
mov
sarl
sti
inc
je
orb
inc
aam
add
push
cmp
xchg
ljmp
cwtl
popf
out
adc
imul
stc
stc
xor
mov
mov
dec
sub
push
mov
sbb
mov
mov
dec
les
or
sbb
mov
test
push
push
outsl
into
push
into
imul
call
adc
iret
into
nop
cld
loop
lret
mov
push
xchg
xchg
bound
imul
jle
or
jmp
fldt
cmp
push
arpl
xchg
push
dec
subb
inc
sbb
mov
xor
movsl
hlt
mov
jp
xor
mov
clc
push
ret
test
test
rclb
faddp
jno
or
mov
push
cli
int
lods
mov
test
push
pop
pop
jae
xchg
or
in
lret
pop
hlt
es
jmp
and
fst
xbegin
mov
int3
lods
out
dec
xlat
sti
fldl
push
dec
addr16
push
xorl
or
push
fnstcw
add
pop
sub
jne
sbb
sahf
mov
negb
cmpsb
xchg
mov
sbb
lret
lret
popf
test
mov
fdivrl
gs
sub
dec
sub
push
cmp
mov
rorl
push
add
data16
xchg
adc
xor
add
in
mov
rcrb
fdivrl
mov
jecxz
dec
inc
lret
inc
scas
push
addr16
xchg
xor
out
dec
inc
movsl
cs
stc
jg
rcl
jo
mov
mov
add
popa
arpl
enter
xlat
ds
jae
int
into
lret
imul
mov
lds
out
lods
pop
jbe
loope
rcrl
lock
pop
and
loope
push
cwtl
and
pusha
scas
scas
push
outsl
pusha
ficoms
std
pop
je
or
lcall
iret
ja
inc
mov
aaa
xchg
dec
inc
add
je
fwait
bound
dec
cld
ret
rorb
sarl
insb
dec
add
into
stos
and
jmp
loopne
into
xchg
outsl
mov
inc
int3
lods
mov
dec
int3
sub
fcomps
xor
ja
out
cmpsl
movsl
imul
mov
test
sbb
inc
and
lock
or
insl
pop
xchg
dec
iret
mov
testl
stos
jmp
cmp
mov
daa
cli
fcomps
movsl
fwait
dec
pop
leave
xchg
jle
arpl
lods
std
mov
adc
inc
mov
and
xchg
push
xchg
clc
cmc
sbb
cmp
jl
call
in
adc
scas
inc
bnd
sbb
insl
dec
mov
out
fiaddl
jne
ucomiss
cmp
sbb
out
fs
jns
and
mov
enter
ja
push
push
pop
enter
push
fs
hlt
cld
sub
xchg
and
fidivrl
roll
out
push
xchg
in
fcomi
mov
sbb
out
mov
cmpb
push
sbb
xor
lret
cmp
fwait
lods
pop
shl
cltd
lret
mov
xchg
fmuls
int3
inc
andnps
jno
rcrl
bound
mov
dec
ficoml
cli
test
xor
mov
adc
mov
andb
pop
inc
fs
popa
or
push
and
fcoms
mov
xchg
pop
xchg
mov
ss
push
xchg
sub
lods
hlt
xchg
fwait
push
mov
inc
jle
mov
xorb
pop
sub
jg
popf
aad
shl
rcll
jp
add
adc
fsubs
cmp
inc
sbb
mov
ss
test
and
test
outsl
sub
push
in
addr16
or
push
push
mov
push
in
push
add
pop
test
push
loope
lret
xchg
out
jne
addr16
push
sub
mov
push
jmp
insb
sbb
ljmp
pop
mov
test
jmp
aas
idivb
fcmovu
pop
cmc
dec
jbe
ror
or
arpl
cmp
out
popf
or
into
das
inc
sbb
mov
xchg
cmp
cmp
rorb
ljmp
sbb
test
mov
fstp
daa
mov
bound
cli
push
ficoms
pop
flds
mov
arpl
into
xchg
and
flds
or
sub
push
inc
sbb
mov
cmp
cmp
xchg
xchg
fbld
jge
adc
push
mov
out
jo
mov
inc
add
xlat
aam
inc
cmp
push
int
jo
rorl
lret
hlt
loopne
clc
mov
push
sub
pop
daa
in
mov
in
or
out
sub
cmp
xchg
icebp
cmp
enter
adc
and
adc
jb
mov
xchg
repnz
cmp
push
lds
shll
jle
jb
sbb
or
xor
inc
rcr
repnz
jge
cwtl
jne
dec
push
rol
mov
stos
fwait
jg
jg
outsb
xchg
dec
mov
push
push
mov
ja
insl
mov
cs
cwtl
inc
pusha
hlt
jl
pop
sub
rcrl
xor
adc
pop
or
xchg
enter
pop
lock
push
sbb
push
push
orl
stos
push
lods
std
pop
jbe
out
lods
loopne
inc
push
lods
xlat
dec
cmp
repnz
sub
cmc
jmp
push
movsb
and
jno
popf
add
fcmovu
aas
adc
pop
inc
in
add
fidivrl
divl
mov
int3
push
fwait
mov
adc
hlt
call
sti
jno
inc
int
int3
pop
mov
fs
mov
in
movsl
mov
xchg
out
push
sar
jp
fucomp
inc
out
xor
push
inc
and
xchg
fst
mov
cmpsb
sahf
cmp
fwait
popf
pop
and
pop
mov
out
enter
sub
scas
cmp
xor
ljmp
test
xchg
push
mov
dec
pusha
hlt
daa
addl
out
adc
decl
dec
inc
sub
dec
cmp
call
lock
bound
cld
sbb
pop
add
mov
and
lods
push
or
push
roll
mov
or
lock
mov
out
sub
fldcw
lret
insb
add
add
jns
lret
or
jns
lret
jl
inc
test
push
cmp
inc
jnp
pop
or
adc
mov
and
aaa
jge
and
ret
pop
cmc
jge
mov
jb
imul
shlb
push
int3
sti
xor
lahf
and
and
mov
mov
fsubr
xchg
sub
shll
pop
jmp
push
mov
sbb
ucomiss
push
fdivl
add
lods
testb
call
push
sbb
out
leave
stc
lret
pop
dec
dec
or
cmp
gs
ds
fsubs
pop
sub
sbb
adc
popa
int3
sbb
lds
insb
imull
mov
js
ret
mov
shrb
jmp
jmp
mov
and
xchg
test
enter
mov
mov
aas
test
ret
jo
repnz
mov
dec
push
cmpsl
cmpsb
push
jmp
push
mov
sbb
sub
inc
xchg
ljmp
pop
stc
pushf
xor
sbb
stos
lods
pushf
and
sbb
pop
imul
negl
xchg
call
pop
aas
xor
push
sbb
test
jle
out
push
add
mov
xchg
pop
mov
subl
jae
mull
out
imul
push
dec
rcl
mov
push
and
or
pop
mov
fdivrs
push
adc
in
leave
sbb
mov
sti
out
ja
dec
arpl
pop
mov
pop
xor
jns
mov
dec
lea
push
faddl
sub
xor
lods
das
es
test
idiv
mov
jmp
push
sarb
mov
fidivs
mov
sub
test
adc
aad
cmpl
and
jo
sub
jbe
loop
inc
or
xchg
in
inc
decl
mov
test
mov
pushf
sub
aam
adcl
bound
and
xlat
aas
and
pop
adc
cwtl
repnz
out
push
call
jo
les
xor
add
mov
inc
push
mov
test
mov
mov
in
mov
push
push
stos
mov
js
pop
and
sub
cmc
and
mov
fcmovu
sbb
mov
test
cmpsl
dec
add
jo
xor
add
cmp
adc
pop
and
ret
mov
jmp
adc
push
mov
xchg
fcompl
pusha
sbb
mov
push
sahf
jg
outsl
jmp
enter
add
mov
or
mov
aam
xchg
mov
push
incl
dec
lahf
push
incl
loop
sbbb
or
xor
jmp
or
and
inc
dec
outsb
add
pmaddwd
push
lret
push
push
aaa
add
xchg
mov
push
mov
sbbl
insb
add
jle
push
xchg
popf
cmp
repz
jle
xor
sub
cltd
mov
push
sub
pop
pop
ret
outsl
test
jp
xlat
inc
push
xor
repz
jne
test
mov
mov
in
les
or
or
push
jl,pt
push
int3
std
cmc
or
pop
lea
and
sub
dec
or
call
flds
sbb
outsl
pop
lods
or
cmp
dec
pop
ds
xchg
lahf
jo
sbb
mov
dec
mov
fistl
enter
xchg
mov
ds
loope
adc
inc
xor
or
add
and
popf
xorb
xor
and
daa
jle
cli
xlat
negl
movb
scas
fidivl
fs
in
or
inc
adc
pop
sub
lcall
pop
inc
and
xor
sbb
xor
fstpt
inc
xchg
dec
dec
fisttps
jbe
testl
xlat
mov
xchg
dec
jns
pop
ficoml
push
vmulsd
popf
add
int3
int
lock
or
shlb
idivl
fildl
mov
das
pop
pop
sub
in
push
mov
in
and
loope
and
pop
popa
nop
loop
in
or
xchg
inc
add
scas
pop
sbb
je
push
in
mov
ficoml
mov
in
fistpl
inc
add
in
jl
aaa
fs
int
xchg
push
sbb
das
movsl
xor
stos
mov
xor
aad
movsb
insl
or
lea
loop
neg
cmc
cmpsl
fs
out
ss
inc
mov
pop
add
aam
stos
mov
gs
inc
rcrl
cmp
xor
fmul
sbb
push
scas
adc
push
fwait
adc
jp
xchg
pop
leave
xchg
and
sub
push
test
push
rcll
adc
loope
push
xor
rclb
loope
pop
cmp
dec
das
mov
aad
lcall
or
mov
jge
xchg
jae
mov
cmp
mov
cmpsl
push
pop
mov
faddp
ret
not
xchg
enter
enter
ljmp
cmc
sbb
mov
inc
adc
lret
in
sahf
xor
js
jge
ss
adc
pop
addl
out
push
ret
mov
adc
cmp
jno
sbb
in
dec
aas
idivl
fwait
jo
lcall
and
and
into
xchg
inc
test
stos
pusha
inc
jo
fucomp
cli
dec
xor
push
jl
inc
add
jo
cli
lcall
mov
fmull
mov
mov
sbb
mov
pop
fldl
pushf
nop
imul
push
push
push
ja
mov
xlat
mov
ljmp
fsubrl
call
push
mov
jae
jae
mulb
pop
imul
adc
addr16
je
in
mov
incl
xor
stc
aaa
mov
and
inc
fildl
clc
push
or
xor
es
popa
push
sbb
test
icebp
mov
scas
push
pop
add
pop
les
sbb
mov
mov
cmp
scas
int3
inc
pusha
stos
sbb
repz
jne
add
or
gs
out
cmp
mov
cmp
dec
ds
mov
mov
js
cmpsb
cwtl
nop
xchg
fbstp
push
mov
inc
mov
jp
and
and
pop
in
jne
cltd
data16
sar
sbb
in
subb
scas
xchg
dec
jno
sbb
out
or
pop
mov
out
inc
int
cmpl
push
jae
gs
les
add
mov
push
in
out
lea
xchg
xchg
ret
inc
sar
mov
cwtl
xlat
jns
jecxz
orl
test
test
jnp
sti
inc
xchg
clc
lea
addb
stos
push
ljmp
xchg
dec
dec
cld
mov
mov
out
xchg
sub
sub
cmp
xor
jge
sbbb
pop
push
cmp
mov
mov
inc
pop
or
xchg
test
addl
mov
push
and
lods
cmp
jbe
pop
iret
pop
mov
popa
cwtl
jno
inc
sub
xchg
das
cmp
cs
mov
mov
pushf
lock
xlat
sub
add
scas
or
pop
sbb
movsl
push
lds
in
rolb
push
popf
pop
push
std
xor
mov
sarl
and
test
inc
cmp
hlt
ds
jne
ret
push
std
sbb
imul
add
xor
jl
shl
cmc
push
adc
pushf
out
push
insl
das
mov
jle
dec
aad
fmul
mov
xchg
mov
aas
test
xlat
push
sahf
das
ja
adc
lcall
dec
pop
lret
jb
pop
test
adc
xor
pop
mov
or
fisubrl
scas
mov
jp
das
jge
inc
push
pop
jmp
lcall
in
xchg
out
sarb
inc
test
data16
sti
pop
inc
outsb
in
mov
fldt
ret
cmpsb
in
lods
mov
adc
shrb
jno
popa
icebp
aas
lods
add
das
dec
std
push
add
out
rorb
outsl
fldcw
xchg
ret
cmp
pop
mov
jp
mov
in
ret
jns
andl
inc
sub
jno
aas
mov
gs
adc
sub
out
scas
adc
ss
mov
ror
sti
jb
mov
xchg
sub
add
arpl
cmpsl
lock
push
stos
jp
icebp
cltd
stos
shlb
xchg
daa
ja
pushw
push
and
jns
cmp
ret
cmpsl
leave
sub
pop
test
cmp
pop
mov
test
frndint
leave
pop
out
push
mov
and
xor
cmpsl
mov
add
sbb
in
daa
push
push
inc
in
xchg
push
int
mov
adcb
es
call
xchg
xchg
sbb
pop
dec
scas
es
or
pop
jle
jbe
das
gs
sbb
shr
cmc
dec
icebp
mov
insl
and
push
xchg
lock
andb
sahf
adc
or
outsl
dec
and
ret
fwait
pop
popf
or
pop
adc
lret
push
inc
in
sbb
sub
add
mov
sahf
jnp
pushf
dec
aad
mov
leave
and
and
test
dec
mov
lods
or
mov
inc
mov
push
add
dec
cli
repz
nop
inc
sbb
pop
pop
lcall
loope
mov
sbb
out
adc
mov
out
push
push
mov
and
lds
test
in
imul
arpl
push
or
push
xchg
pop
gs
fbstp
xchg
push
jno
sub
xchg
and
or
mov
pop
shll
adc
les
dec
aas
ss
mov
pop
cltd
jmp
push
mov
movsb
out
nop
cli
xlat
jbe
pop
push
sti
xlat
mov
ret
js
xlat
aaa
push
in
jmp
mov
js
push
bound
push
push
in
add
xchg
push
int3
mov
mov
xchg
stc
test
and
pop
mov
lds
cld
enter
out
arpl
aad
jle
cmpsb
scas
cmc
into
and
jne
movsl
lret
xor
xchg
jb
in
repnz
fs
outsl
dec
adc
xchg
mov
notb
pusha
push
test
mov
nop
mov
cmp
test
and
adc
cmp
lret
pop
sbb
dec
xor
cmp
mov
loop
mov
sbb
aad
mov
jne
ja
mov
push
cmp
mov
sbb
enter
addl
adc
lret
add
cmp
mov
inc
jmp
and
fcmovbe
test
pop
aad
xor
sbb
loope
jb
rcr
jno
out
or
mov
mov
roll
adc
add
mov
rcr
es
push
add
lds
aam
add
sub
xchg
cld
adc
fsubs
cmpsl
inc
aad
mov
mov
or
stos
jge
or
and
jb
xchg
mov
xor
inc
pusha
dec
cmp
and
call
or
popa
dec
psubsw
int3
ljmp
popf
jae
std
lods
in
pop
fisttpl
jmp
mov
scas
mov
push
add
test
shl
and
cmp
inc
cmp
insl
mov
cmp
movsb
xchg
xlat
add
pop
adc
jl
fnstenv
je
adc
fwait
sbb
aaa
sahf
mov
imul
push
sahf
clc
icebp
pop
nop
or
mov
mov
adc
inc
daa
cmpsl
sub
push
cwtl
xor
cmpsl
cld
insb
xchg
xchg
xchg
sub
xchg
jg
or
stos
int3
xor
fsub
inc
cmp
and
cmp
xlat
inc
outsl
subb
gs
cmpsb
jp
popa
sbb
iret
push
jnp
loop
lahf
cmp
popf
dec
and
add
shrb
and
in
rcl
inc
dec
repz
lahf
jb
pop
and
adc
iret
xlat
mov
jns
xlat
jb
test
push
jne
xor
jae
lds
leave
lret
ror
test
lock
inc
dec
xchg
mov
in
pop
or
dec
stc
add
sar
aad
mov
cmpb
leave
push
bound
mov
pop
jns
dec
pop
or
testl
inc
test
in
xchg
add
leave
and
jne
jb
mov
call
imul
stos
or
fstl
adc
jo
dec
jb
pop
pop
stos
adc
xor
sahf
repnz
pop
xorl
pop
adc
mov
mov
pop
pop
fidivrs
add
cmp
mov
cli
rcll
loope
sbb
pop
inc
in
in
movsl
fsubs
loope
mov
int
popa
fwait
add
jbe
xor
pop
test
cmp
cmpl
xchg
pop
xor
push
shlb
and
hlt
imull
add
mov
adc
ret
xchg
leave
pushf
andb
mov
int
popa
push
inc
nop
mov
adc
std
pop
pop
data16
iret
das
mov
mov
sub
mov
or
pop
fstpl
fnstcw
and
cmpsb
inc
in
dec
stos
and
mov
pop
test
out
pop
test
enter
mov
insb
pop
insl
pushl
scas
add
es
jo
divl
pusha
pusha
pop
inc
addb
addr16
and
std
and
dec
enter
mov
xchg
pop
nop
negb
lock
mov
clc
mov
je
ds
jne
jb
movsl
jnp
pop
ljmp
jmp
clc
mov
nop
xchg
int
lea
jle
rcr
pop
iret
jg
data16
mov
pusha
mov
jp
mov
loopne
lea
mov
jo
outsb
sub
daa
inc
lds
xchg
stos
mov
adc
pop
test
clc
cmpsl
dec
mov
mov
mov
push
sahf
mov
jns
loope
loope
out
sahf
cmp
aaa
mov
pop
jbe
movb
popa
push
jge
aaa
adc
rolb
pop
mov
dec
fstps
pop
mov
mov
inc
cmc
mov
push
neg
pop
popa
cwtl
mov
outsl
bound
lcall
mov
cmp
mov
jp
jno
aam
loop
push
mov
pop
clc
adc
and
aas
mov
hlt
pop
addb
mov
cmc
xchg
int
add
insl
mov
sbb
pop
popa
sbb
or
jge
or
je
in
test
jp
adc
inc
mov
xchg
test
xchg
or
aas
adc
pop
hlt
sbb
dec
xor
rep
jne
add
gs
int3
xor
pop
jl
roll
cmc
ror
and
xor
divl
orb
cmp
pop
push
mov
mov
pop
stc
je
xchg
mov
mov
pop
test
xor
xchg
sbb
cmove
cli
mov
inc
jbe
mov
sbb
sub
daa
cwtd
pmuludq
cli
inc
push
je
ja
or
jecxz
cs
gs
mov
pushf
sub
shl
shr
or
int
pop
mov
xor
aam
jno
lea
cmp
xchg
jno
sub
sub
add
jp
into
jae
fsubr
or
cltd
inc
in
sub
jle
cmp
xchg
push
test
mov
outsl
and
out
cltd
test
pop
push
test
mov
fadd
push
push
call
insb
test
clc
shll
inc
in
mov
dec
insb
jae
cmp
lds
int
pushf
sahf
push
aas
es
adc
stos
fidivs
fcmovbe
jl
aas
mov
inc
jp
dec
xor
in
pop
ds
iret
aad
add
loop
mov
fcoms
mov
and
pop
cmp
pusha
pop
and
jmp
xor
mov
bound
xchg
icebp
ljmp
cs
les
clc
pop
xlat
push
sub
cmc
mov
cwtl
xor
out
or
inc
scas
adc
repnz
or
aas
mov
inc
mov
inc
cmpl
loopne
mov
out
and
sbb
movsb
xchg
jbe
addr16
cmpsl
mov
stos
jg
push
ret
daa
mov
or
lea
sar
push
pop
mov
iret
icebp
movl
pop
pusha
push
aad
testb
mov
bound
add
movsb
push
cmp
je
aad
cmp
gs
dec
pushf
addb
inc
jg
adc
adcl
xchg
mov
cmpb
xchg
pop
mov
adc
jb
jle
loope
cld
loopne
enter
loop
imul
xorb
sub
jmp
or
mov
mov
pop
jecxz
lea
fwait
mov
dec
dec
mov
jge
ljmp
sub
lahf
xor
mov
pop
aaa
pusha
sti
ret
lods
or
outsb
mov
cmp
lods
cmp
es
adc
call
add
inc
mov
hlt
idivb
and
cmp
jne
mov
imul
jbe
scas
decl
lahf
insb
das
fs
lds
mov
add
data16
cmp
es
lret
mov
mov
or
daa
dec
mov
loopne
cmc
push
push
aaa
mov
jae
sub
or
or
js
sub
cmp
sbb
popa
loop
loopne
sub
jle
cmc
sub
test
or
jae
shl
cs
pminsw
mov
mov
in
cld
push
shl
push
aad
iret
xor
fsubp
aad
in
lret
mov
mulb
jg
adc
or
pop
inc
dec
pop
test
mov
sti
xlat
fs
shl
dec
fwait
inc
stos
jecxz
inc
mov
mov
push
pop
iret
mov
daa
push
ss
dec
adc
rclb
pop
sbb
pushf
inc
adc
sub
xchg
xchg
or
aas
jbe
push
out
add
dec
or
push
roll
jl
push
lods
fsubl
push
xor
cmp
clc
jne
loopne
fidivl
mov
cmp
xlat
push
xor
mov
mov
sbb
mov
xor
push
mov
mov
stos
rorl
shll
les
ja
cmp
icebp
pop
sti
in
lret
pop
xlat
ret
movsb
xor
mov
sub
std
popl
cmp
or
jmp
ficompl
insb
xor
lret
repnz
jb
stos
inc
jne
repnz
and
xor
add
xchg
lcall
mov
pop
mov
xor
inc
ss
enter
fsubrs
xchg
es
notb
xlat
pop
mov
push
xchg
dec
bound
push
jnp
cmp
jbe
out
cmpsl
mov
xor
push
mov
fdivl
fimull
xchg
push
push
sub
pushf
fstpl
out
or
in
add
subb
sub
inc
ja
vmaxpd
inc
and
stos
or
xchg
xor
iret
jle
lds
repz
push
adc
roll
std
ds
cmpsl
jo
fs
cli
jecxz
int
subb
sbb
fildl
xchg
dec
push
out
invd
test
subl
sbb
ficomps
jl
lret
es
jae
push
jmp
inc
movl
arpl
incb
mov
push
das
pop
outsl
in
push
cli
dec
mov
adc
or
fistl
sbb
xor
cmp
aaa
pop
lahf
loop
getsec
sub
out
icebp
cs
aad
xor
aaa
int
push
inc
aas
dec
push
cwtl
loop
sbb
insl
and
cmp
xor
cmp
cmp
mov
mov
mov
xrstor
lea
mov
add
sbb
scas
lds
repz
cmpsb
cld
jo
sbb
les
push
or
outsl
cmp
andb
sub
mov
lock
and
inc
jb
ljmp
imul
cmpb
mov
scas
add
dec
push
mov
fs
mov
and
call
lcall
fsubl
aam
push
inc
inc
movsl
or
js
sub
sarb
jo
cli
call
sbb
repz
lea
lret
sahf
xchg
jbe
loopne
mov
rorb
jo
insb
mov
push
insl
pop
xchg
mov
clc
push
iret
fs
fdivrs
and
ja
outsl
mov
call
stos
mov
xor
lods
les
in
outsl
adcb
inc
mov
imul
or
cwtl
mov
inc
mov
dec
lods
loope
arpl
rcll
and
and
jge
cmp
xchg
xchg
adc
je
int3
mov
lret
inc
sub
xchg
pushf
test
dec
outsb
movl
xor
pop
xor
in
jp
lods
cmovbe
arpl
adc
lods
inc
sbb
cmc
aas
push
das
sahf
pop
call
push
jle
repnz
sub
sbb
push
mov
rcll
cmpsb
cmp
imul
andl
lret
lret
shlb
cmpb
mov
out
stos
cwtl
outsb
rcrl
popa
mov
dec
iret
cmp
lods
add
mov
jl
add
mov
jb
bound
mov
adc
std
add
push
addr16
and
into
cli
es
pop
mov
xor
out
loopne
xor
pop
or
mov
mov
mov
call
icebp
pop
lds
mov
inc
shlb
repnz
jmp
xorb
mov
sub
push
mov
in
std
jns
jo
ret
cmp
mov
xchg
outsb
jmp
mov
xchg
mov
lock
rcrb
xchg
test
or
out
fiadds
xchg
addl
dec
dec
xchg
jo
inc
cmc
aas
scas
vfmsub132pd
push
xchg
mov
sbb
dec
inc
lods
jle
sbb
inc
mov
fildl
les
dec
subl
loope
jnp
push
je
adc
int3
jo
in
mov
or
fcoml
inc
divps
loop
cmp
out
cs
pusha
lock
mov
dec
fwait
xor
mov
hlt
imul
imul
sbb
das
je
cmp
mov
xchg
mov
stos
mov
push
inc
clc
sub
es
cmc
and
sbb
adc
test
inc
out
popa
sub
dec
fdivs
int3
fcmovbe
and
mov
fimull
test
stos
cmp
mov
jbe
xlat
imul
inc
xchg
or
adcl
xchg
repz
movsb
pop
adc
jnp
fwait
jno
test
daa
push
mov
inc
ljmp
adc
sub
xor
push
loopne
or
add
test
pop
inc
leave
push
xor
les
sbb
xchg
pushf
leave
inc
in
xchg
orb
push
clc
pop
or
divb
dec
jmp
jbe
aaa
sti
jb
iret
out
or
test
or
mov
xor
shrb
inc
adc
xlat
push
mov
std
jnp
arpl
and
push
or
shl
jecxz
xor
sub
fists
pop
and
daa
ja
sub
mov
push
mov
cmp
cltd
add
pushf
mov
adc
enter
andb
mov
fucomip
loope
mov
stc
fdivs
pop
inc
pop
andb
insb
loope
mov
loopne
inc
hlt
out
lret
jp
lds
pop
ja
ffree
add
loopne
pop
adc
mov
cmpsl
add
div
xor
and
arpl
dec
cmp
push
pop
pop
and
add
xchg
jp
and
mov
xor
mov
and
gs
cmp
lahf
mov
push
fneni(8087
mov
mov
sbb
lods
inc
leave
lods
push
xor
enter
sub
push
add
lret
mov
dec
jle
lods
jne
decl
sbb
test
out
test
adc
or
and
sub
jmp
insl
push
mov
test
jae
fsubrs
enter
repnz
fs
loopne
xchg
pop
shrb
mov
in
cltd
faddl
repnz
mov
push
imul
add
sbbl
sbb
sbb
out
arpl
loopne
fdivr
ror
lret
inc
les
xchg
imul
jecxz
call
lahf
xchg
scas
cld
cmp
push
lods
cmpsl
shll
dec
enter
adc
sbb
addr16
sub
mov
popf
faddl
xor
jl
mov
jecxz
mov
call
or
push
mov
stc
repnz
pop
out
mov
shll
jecxz
or
and
popf
loopne
iret
mov
lds
fmuls
enter
sbb
enter
mov
pop
xchg
sub
push
cltd
daa
sub
fsubrp
mov
repnz
out
sbb
insl
arpl
xor
fsubrs
mov
mov
in
inc
and
cltd
test
sub
xchg
jge
scas
in
jg
leave
jns
sub
fldenv
cmp
in
lcall
xor
insb
pop
adc
mov
cltd
mov
xor
mov
sub
pop
sub
stos
ljmp
ret
cld
loope
jne
cmpsl
mov
push
xchg
pop
scas
dec
cmpsb
xchg
cmp
nop
aam
cmc
nop
pop
push
vaddpd
aam
mov
dec
or
cmp
jge
push
pop
negl
repnz
hlt
jno
pop
xchg
repz
les
fistl
dec
jmp
push
enter
enter
push
inc
mov
xchg
cmp
add
mov
jmp
xbegin
sti
mov
rorb
xor
cmc
stos
jae
push
into
xchg
or
mov
adc
cmp
cli
jo
xor
leave
sbb
test
insb
aad
cltd
mov
das
and
out
xchg
push
outsb
mov
xor
xorb
cmp
pop
jle
hlt
jge
adc
push
imul
or
and
lods
loope
jl
mov
or
sub
testl
fisttps
fistpl
inc
add
decl
cmp
out
mov
lods
cwtl
lods
insl
pmulhuw
xor
mov
pushf
pop
pop
mov
sbb
lret
fcomps
dec
fstpl
das
xor
in
xor
push
pop
in
daa
mov
mov
cs
lock
sbb
das
shll
dec
stc
sbb
mov
stos
and
jne
sbb
rcrl
xchg
mov
ss
cmp
inc
addr16
ljmp
movsl
push
sbb
or
inc
jmp
sub
insl
outsb
stos
shrb
sub
movb
loope
xor
aas
insl
lds
imul
mov
jmp
popa
sahf
mov
jmp
push
adc
push
xor
or
cmp
dec
aad
xchg
in
pop
cmp
pusha
call
push
repnz
push
gs
notb
fdivs
outsb
dec
mov
and
test
cltd
pop
xchg
std
cwtl
inc
jg
shr
inc
jmp
push
into
add
pusha
push
test
mov
sti
and
pop
pop
shrb
shr
dec
cs
cld
lods
jge
dec
out
sub
cwtl
pop
mov
sub
dec
push
lahf
rcl
cld
insb
sti
cld
or
mov
rcll
xlat
ljmp
add
mov
fmull
push
xchg
out
into
pop
and
fsubrp
add
test
jae
mov
cmp
cmp
jo
outsl
testl
xchg
xor
mov
and
jl
out
jp
mov
jg
gs
inc
mov
pop
jae
lcall
and
shrl
push
sbb
push
xor
movsl
fisttpl
mov
jae
ds
xchg
sti
cld
or
and
inc
cmpsl
into
stc
std
sbb
es
popf
ficoms
nop
jp
rorl
lcall
test
lret
jbe
int3
add
mov
lahf
add
fsts
mov
inc
jno
adc
and
inc
sahf
add
roll
sbb
sub
xor
cwtl
cli
pop
push
xchg
sub
mov
or
sti
mov
popa
or
loop
jmp
inc
ficoms
mov
and
sbb
dec
out
stos
xchg
out
mov
movsl
jbe
popa
mov
popa
je
idivb
sbb
les
loop
hlt
or
push
out
inc
je
ret
mov
test
mov
push
ljmp
gs
repnz
stos
in
and
mov
jp
icebp
sahf
xlat
icebp
push
mov
es
xchg
cltd
pop
mov
stos
jecxz
orl
xorl
fwait
popf
int
push
jecxz
push
push
ret
imul
sahf
in
adc
jne
add
mov
fsubl
pusha
pop
adc
cs
inc
push
and
xor
sbb
mov
push
jmp
mov
adc
lea
and
pop
out
mov
or
imul
sbb
adc
xlat
pop
adc
jnp
outsl
insl
mov
ret
stc
cmpsl
test
pusha
mov
stos
clc
hlt
mov
pop
ds
mov
mov
mov
xchg
xor
sarb
std
aaa
loop
push
out
es
jno
ret
jno
inc
mov
push
aad
cli
mov
mov
dec
jg
fsubrs
pop
ljmp
lret
mov
or
cmc
sbb
sbb
scas
push
cmc
out
stos
jae
sbb
cwtl
sub
add
and
xchg
cmp
xchg
xor
sbb
ljmp
test
test
jp
cmp
ds
pusha
pop
insl
leave
add
shlb
adc
jge
cmpl
nop
jl
inc
mov
int3
mov
sbb
cli
sbb
mov
ss
clc
int3
push
jle
dec
mov
cs
fistl
ret
push
aam
jge
int3
add
rcl
lret
cli
push
in
xchg
mov
push
and
loop
jb
jno
dec
das
jmp
sbb
popa
ljmp
stc
lahf
test
out
cmp
or
adc
sbbb
xchg
fs
out
ja
cmp
aas
insb
mov
loope
ds
inc
jo
mov
push
pop
mov
ret
inc
sub
rclb
mov
repnz
jae
xor
aam
and
fcmovnu
mov
pop
push
fnstcw
xor
fs
dec
pop
cmp
jb
adc
cltd
out
dec
popa
in
push
inc
sbb
xor
mov
xchg
in
fwait
inc
mov
rol
xor
stos
mov
mov
push
pushf
dec
xor
pop
loop
mov
jno
mov
leave
push
int3
adc
scas
leave
cmpsb
or
add
push
and
cltd
xchg
jns
dec
push
xor
pop
das
lcall
push
pop
jne
push
jo
out
and
xchg
or
mov
dec
outsb
test
mov
lret
fstpl
addr16
inc
ss
sti
sbb
sbb
dec
fsubr
push
roll
mov
iret
push
inc
call
sub
inc
jmp
inc
or
or
loopne
aad
idivl
js
dec
add
cmpsb
inc
mov
xchg
cmpl
ret
ljmp
add
ja
jmp
and
pop
xchg
and
xchg
shlb
cli
jo
xlat
and
adc
pop
cs
js
push
push
lcall
psadbw
push
lea
ret
icebp
add
ljmp
adc
push
mov
mov
xlat
sbb
push
mov
sbb
call
addr16
mov
cmp
xchg
jmp
scas
mov
jb
push
and
inc
mov
pushf
mov
aaa
pop
sbb
inc
sub
xor
lods
fmuls
test
shll
dec
dec
add
fcmovnb
and
stos
pop
fcoml
cmp
fcompl
cmp
push
mov
or
jecxz
jle
sbb
call
cmpsl
je
addb
jbe
xlat
xchg
sub
je
pop
fidivrs
lods
lcall
dec
xor
dec
add
jns
or
add
repz
iret
icebp
gs
movsb
into
nop
scas
pop
xor
add
pop
mov
sub
mov
jne
add
movsl
sub
pop
sbb
mov
adc
pop
popl
pusha
inc
pop
mov
jae
xchg
popa
stos
daa
mov
loope
in
ljmp
std
sub
rorl
add
dec
xchg
add
popa
or
jle
shrb
mov
sbb
and
adc
mov
les
xchg
sbb
dec
jns
push
ljmp
jmp
mov
loopne
out
push
mov
push
cwtl
sbbl
mov
xchg
and
loope
fisttpll
inc
insb
jne
dec
dec
cmpb
imul
push
out
popa
xchg
add
je
lds
in
inc
call
scas
xchg
insb
scas
or
cmp
dec
dec
arpl
sbb
cld
mov
insl
xlat
push
sub
xor
cld
js
repnz
sbbl
jg
jmp
loop
stos
xchg
fistpl
lock
mov
mov
lcall
dec
lea
ljmp
add
sub
outsb
inc
imul
lods
mov
push
sbb
pop
xor
push
sti
movsl
mov
lock
insl
push
stos
add
in
out
mov
add
cmp
jno
gs
inc
lods
jno
xchg
mov
es
imul
jl
push
fdivr
push
pop
es
mov
repz
scas
xor
sub
dec
sub
out
packuswb
jns
ret
dec
out
lret
adc
cmp
sub
mov
test
adc
adc
cmc
jbe
fdivrl
and
inc
and
subl
mov
sub
repz
inc
mov
push
sbb
das
xchg
clc
push
int3
out
out
call
cld
mov
ret
adc
sbb
push
jmp
or
imul
lret
cmp
sar
inc
fstpt
stos
in
jne
rcrl
xorl
inc
call
sub
sub
add
in
sbb
iret
lods
pop
push
push
call
fyl2x
pop
sbb
jp
xchg
sbb
dec
xlat
and
fsub
xor
adc
sbb
es
les
xchg
fmul
jne
sub
shrl
mov
outsl
mov
pop
out
dec
xchg
jbe
dec
adc
add
add
sub
xchg
adc
out
pop
lret
daa
lahf
sbb
inc
sti
out
inc
outsb
cmpsb
mov
jne
sub
xor
fildll
mov
das
in
xchg
sbb
cli
addb
fimull
pushf
adc
mov
and
or
les
sahf
mov
addb
sub
jno
popf
mov
dec
popa
adc
loop
cli
gs
and
flds
mov
aad
adc
xor
xchg
popf
loop
cwtl
add
push
mov
cmpxchg
cmp
aad
xchg
add
jge
pop
pop
arpl
cmpb
inc
movsl
push
cld
js
lret
or
sbb
clc
dec
roll
mov
dec
je
lds
and
gs
outsb
in
rol
int
or
add
nop
sahf
imul
dec
mov
inc
sbb
push
mov
sub
lcall
push
and
cmpsl
inc
and
mov
add
ret
clc
mov
rolb
inc
das
ret
pusha
movsl
and
lods
jae
inc
mov
push
repz
icebp
ret
pop
stos
lret
into
bound
notl
test
aam
mov
icebp
jecxz
mov
cmpsb
xor
jg
out
in
xchg
ljmp
jnp
and
rcrl
bswap
popa
lahf
inc
and
fnstcw
pop
fsubp
xchg
jecxz
jmp
sub
arpl
test
pop
ret
ret
push
mov
iret
insb
in
mov
inc
or
mov
xchg
sbb
ret
push
add
in
or
cmpsl
push
clc
dec
push
rorb
pop
jge
sbb
ja
repnz
adc
pop
scas
gs
clc
jb
pop
out
sti
popa
pop
xchg
jge
sbb
xchg
cmp
mov
sbb
les
shrb
dec
shrl
push
jecxz
xchg
daa
jmp
mov
data16
cmp
adc
push
sbb
xchg
push
jle
xchg
mov
jmp
ret
and
xor
inc
mov
adc
mov
sti
cmpsl
push
repnz
cmp
jb
cmp
and
fxam
jne
fwait
mov
loopne
mov
adc
mov
repz
jo
push
xchg
mov
pop
gs
adc
sbb
into
fstl
loopne
jmp
jo
test
pop
stc
and
fs
int3
js
xchg
pop
andb
sub
cmpsl
ds
addr16
outsb
fimull
fcmove
int
push
mov
mov
pushf
or
loope
add
mov
daa
shll
cld
dec
sbb
fidivl
sub
push
outsb
imul
push
stos
addb
mulb
shl
xor
fwait
adc
mov
jne
das
mov
xor
pushf
pop
lods
jl
jecxz
cltd
aam
adc
icebp
lcall
aas
repnz
xor
push
cmp
pop
lret
cwtl
sti
sub
test
in
or
subb
andl
ret
or
mov
das
insl
xor
sbb
cmp
pop
inc
and
mov
jae
push
mov
xor
imul
pop
in
xchg
das
out
out
mov
cs
push
aad
push
mov
xchg
pop
or
push
adc
aaa
or
and
in
mov
pusha
or
add
into
cmp
push
inc
jg
sub
mov
je
xchg
add
mov
test
arpl
imul
mov
push
dec
in
mov
outsl
inc
or
sub
lds
orb
mov
cli
sbbb
repz
outsb
testl
lds
adc
push
xor
adc
sarb
and
mov
shl
neg
lods
rcpps
mov
or
outsl
mov
fsubp
mov
lcall
fwait
mov
daa
sti
enter
mov
lock
rclb
mov
mov
xchg
cmpsb
fs
pop
clc
xchg
lods
in
mov
pop
pop
xlat
sahf
cmp
or
mov
jecxz
mov
in
push
mov
aam
lea
xchg
push
stos
inc
push
xor
sbb
daa
jle
inc
jno
idivb
and
pop
sti
pop
and
push
or
jno
pusha
vunpcklpd
scas
dec
outsb
jae
int
sarb
pop
jb
pop
inc
mov
fsubs
cmp
cmp
mov
adc
mov
in
adc
sbb
and
push
mov
imul
and
inc
mov
and
sub
arpl
jg
pop
sub
cmp
pushf
sbb
mov
stos
ss
paddq
rclb
aaa
jmp
xlat
sti
in
mov
stc
popa
ret
lcall
push
and
jnp
cmp
lods
xchg
movsb
outsl
and
jne
pop
sub
sub
sarl
or
jmp
cmpsl
dec
in
sub
inc
xchg
test
jecxz
jbe
cld
clc
xorb
mov
jmp
bound
inc
dec
cmp
pop
dec
mov
loop
xorl
xor
cs
or
sbb
out
jmp
dec
or
or
mov
lcall
pop
pop
and
rcll
mov
ss
mov
mov
into
cmp
es
ret
int3
sbb
jp
arpl
sahf
jl
int
addr16
xor
jbe
or
cmc
cmp
dec
arpl
fwait
mov
mov
or
jno
push
mov
add
aas
cld
dec
stos
mov
gs
xchg
dec
push
dec
jmp
mov
enter
or
in
jecxz
in
rcl
adc
ja
or
mov
jp
add
data16
data16
out
push
cltd
cmp
stos
in
js
cmp
std
mov
aas
mov
push
insl
aam
fidivrs
popa
jg
push
cmp
mov
orl
movsl
xchg
rolb
les
pop
adc
push
pop
cmp
jns
cli
mov
fmuls
arpl
mov
cmpsl
adc
mov
imul
xorb
cmp
pop
sahf
mov
pop
fstps
movsb
out
pop
adc
lods
insl
lock
nop
and
cmp
lods
jnp
pop
int3
inc
adc
mov
and
fstl
push
jnp
push
mov
push
orl
call
lcall
jbe
mov
mov
xchg
in
jae
loopne
inc
cld
dec
rdmsr
sub
jp
cwtl
dec
mov
out
rcrb
push
sti
jg
mov
sub
aas
jbe
mov
push
xor
loop
popf
in
push
aad
movsl
loop
loope
push
pop
inc
inc
mov
shl
popa
jno
aas
cld
sti
pop
call
pusha
ret
inc
cld
imul
mov
jle
mov
mov
adc
adc
push
icebp
sbb
push
mov
cmp
icebp
dec
jo
xchg
fwait
adc
lock
movsl
mov
inc
xchg
imul
xchg
mov
pushl
jbe
imul
or
clc
dec
lret
rorl
outsb
sub
subl
push
mov
nop
rcl
add
inc
sub
andl
mov
div
lock
popa
daa
loop
push
stos
and
dec
sahf
dec
dec
dec
shr
fisttps
mov
cmp
ja
into
push
ret
fstpt
imul
ss
lahf
stc
gs
call
jae
mov
xchg
dec
ja
popa
call
sub
mov
mov
rolb
mov
adc
iret
push
cmp
sarl
int
movsl
ficompl
fisubrs
sahf
out
sbb
push
js
inc
pop
pop
sarb
push
cmp
xor
jmp
xorl
ljmp
clc
test
xor
and
je
aad
push
jmp
test
mov
hlt
inc
mov
in
repz
scas
cmp
dec
sbb
push
in
daa
into
out
pop
mov
lods
insl
sub
jge
nop
push
ss
movsb
jmp
popf
cmp
outsl
jne
xor
out
mov
pop
xchg
out
xor
mov
insl
aaa
imul
enter
dec
sbb
mov
mov
and
sbb
push
pop
adc
mov
arpl
jo
sub
aam
frstor
mov
dec
xor
int3
xor
mov
roll
push
push
xor
lahf
push
mov
adc
push
cs
call
add
sub
mov
cmc
jmp
jecxz
orl
dec
lret
adc
test
push
mov
cmp
inc
sti
cld
mov
sub
adc
cltd
add
or
sub
fwait
leave
ja
xlat
mov
xchg
cmp
push
leave
aad
adc
lret
cmp
gs
cmp
adc
insb
push
insl
dec
or
adc
lahf
loopew
fdivr
jnp
icebp
stos
es
stos
inc
rcrb
push
dec
cmp
push
out
xor
mov
fisttpll
xchg
sub
shl
cmpsb
mov
xchg
imul
cmpsl
jecxz
xchg
inc
or
nop
or
mov
icebp
ret
out
in
xlat
dec
mov
xor
or
mov
rorl
sahf
and
mov
aaa
neg
je
mov
pop
push
aas
xor
das
insb
int
ss
ret
push
jne
add
bnd
loope
rcrb
ds
rolb
mov
pop
inc
cmp
cmpb
sbb
cmc
ja
test
arpl
test
dec
arpl
cld
lcall
fildl
testl
pop
clc
nop
std
daa
into
mov
rcrb
vcvtpd2dqx
sub
mov
pop
movsl
adc
xor
stc
sti
fidivl
jns
pop
or
sbb
xchg
jmp
adc
and
add
outsb
inc
rcll
sub
and
pop
sub
pop
and
test
gs
push
xchg
aaa
outsb
lret
adc
xchg
insl
ficoml
mov
es
and
popf
out
cmp
dec
mov
jg
out
scas
stc
sub
adc
mov
mov
jmp
scas
ret
sahf
push
sbb
push
mov
cmp
cmp
mov
shrb
push
sbb
push
mov
scas
mov
cmp
jb
cmpsb
mov
xchg
push
jnp
add
add
mov
in
push
mov
jmp
in
pop
outsl
ret
data16
pop
insb
fsubs
sub
movsb
pop
int
dec
shl
pop
leave
sbb
pop
dec
fs
aas
mov
addr16
rorb
push
andps
jbe
int
ja
fbld
mov
repnz
mov
sub
int
pop
pop
push
faddl
fmulp
aad
es
icebp
add
and
dec
mov
ljmp
cmc
pop
add
cmp
pop
sbb
mov
or
shr
nop
sti
add
inc
mov
or
lcall
shll
jb
pop
stos
std
int3
sbb
mov
out
mov
mov
lods
mov
add
xor
xor
adc
xchg
shrb
push
push
or
pop
sbb
jnp
mov
xchg
test
push
mov
push
adc
mov
mov
push
dec
push
and
xchg
mov
test
mov
mov
or
sbb
test
cmc
cmpsb
sbb
push
dec
pop
out
pop
test
or
xchg
inc
cwtl
dec
sub
lahf
test
sti
sub
arpl
mov
idivl
xchg
xchg
jno
pop
xchg
fwait
testb
fwait
sub
test
ret
jae
cmp
cld
in
icebp
int3
cli
sub
jecxz
pusha
ret
jo
adc
add
fldenv
fildl
inc
fwait
int
icebp
sub
repz
data16
inc
mov
fadd
mov
repz
icebp
arpl
pop
mov
mov
out
out
xor
stos
jge
repnz
adc
and
cmpb
in
sbbl
lcall
fmul
stos
dec
mov
test
jno
insl
push
mov
push
loop
pusha
mov
add
xlat
mov
int3
xchg
cmp
out
dec
push
cld
fs
stc
lret
stos
sub
jb
cmp
cmp
cmp
xchg
add
out
push
fwait
rcl
and
pop
mov
pop
test
stos
leave
leave
mov
imul
and
paddsw
or
inc
insl
adc
inc
inc
jb
adc
scas
cltd
cmpsb
pop
insb
ret
mov
xchg
ljmp
push
sbb
push
in
xchg
pop
pop
ret
mov
mov
adc
enter
pop
jnp
push
push
stos
fcomi
jge
and
loop
call
add
mov
add
dec
or
jle
push
sub
pop
pop
mov
cmp
mov
jl
pop
jb
inc
in
mov
cli
divb
push
inc
sbb
aam
pop
addr16
lret
xor
out
xor
andb
jmp
pop
cmp
xchg
scas
jle
pusha
cmp
cmp
cmpsl
xchg
out
add
mov
mov
or
mov
or
lds
jno
push
pop
mov
and
les
arpl
mov
mov
leave
test
mov
adc
xor
int3
loop
mov
cwtl
loopne
or
mov
xchg
push
pop
roll
imul
sbb
repnz
divb
push
mov
out
cltd
or
sbb
jns
mov
popf
mov
inc
clc
popf
ljmp
scas
jne
cltd
and
fidivl
leave
push
xor
inc
cwtl
or
sbb
inc
inc
test
cwtl
fs
dec
rcrb
mov
inc
iret
and
and
iret
sbb
imul
jne
inc
dec
mov
clc
bound
add
push
int
sbb
cmc
jecxz
dec
rolb
sub
mov
add
gs
inc
and
lcall
or
xor
and
subl
xchg
outsl
imul
dec
mov
cmp
in
dec
out
stc
jmp
or
cmp
imul
push
mov
push
movsb
test
loop
xchg
je
mov
or
push
mov
cmpsl
fidivrl
xchg
or
shrl
sbb
adc
loop
scas
decl
leave
subb
jo
and
lahf
pusha
fidivrl
jecxz
jge
ja
xchg
jbe
jp
pop
sbb
dec
dec
mov
stos
pop
shlb
jp
xor
repnz
jmp
popa
push
or
movsb
or
sbb
mov
test
outsl
stos
sub
add
dec
loop
in
xchg
pop
lret
fcmove
out
nop
push
int
mov
dec
fsubr
lods
jl,pn
scas
or
push
out
xchg
rorl
jbe
ret
dec
or
push
inc
andl
std
cmp
xchg
stos
in
mov
cwtl
dec
push
popa
fiadds
cmp
in
push
les
push
xchg
mov
out
pusha
clc
lods
sub
cmpb
lock
data16
xlat
es
inc
cmp
lcall
and
lock
xlat
rol
sahf
lods
inc
jg
cmp
dec
mov
sub
pop
outsl
sbb
or
cmpsl
pop
es
sub
fdivs
sbb
movsb
add
movl
mov
jne
inc
mov
stos
scas
xchg
inc
xchg
dec
sub
or
pop
lods
xorl
inc
gs
testl
push
xchg
sarb
out
push
dec
mov
call
mov
add
in
mov
lock
mov
sbb
loop
jmp
adc
fwait
sub
jnp
mov
jbe
popf
mov
xchg
incl
add
mov
mov
sub
push
adcb
roll
inc
movsb
test
cmpsl
add
inc
or
pushl
pushf
mov
mov
gs
mov
sub
cmpl
int3
inc
int3
and
ret
add
sub
repnz
inc
ljmp
pop
lock
in
mov
cltd
sbb
push
lahf
int
pop
adc
push
sti
lods
aam
and
dec
movsb
dec
and
movaps
in
xorl
ret
push
jo
lock
aad
sub
jae
xor
int3
pop
pop
sub
loope
mov
mov
mov
imul
jge
mov
xchg
mov
pushf
push
test
sbb
mov
iret
cmc
shrb
cmp
loopne
mov
and
mov
dec
jo
push
sbb
aad
outsb
in
pop
mov
push
mov
int
dec
mov
mov
loopne
sti
lcall
mov
sub
xor
pop
cmp
sub
dec
sarb
xor
scas
shl
add
cmp
xlat
fadds
pop
rolb
push
and
push
and
xor
mov
adc
popa
inc
dec
or
mov
call
xor
lret
jns
sub
iret
adc
fmulp
cmp
mov
lret
jecxz
cmp
pop
mov
mov
negl
pop
pushf
dec
call
pop
xor
aam
mov
dec
aaa
jp
dec
dec
int3
imul
cld
push
mov
mov
test
sub
pushf
xor
xlat
jno
int
add
jb
sbbb
push
dec
xor
inc
test
je
cmpsb
push
fdivrp
enter
sub
pop
jge
dec
mov
in
xlat
push
and
clc
aad
jecxz
jl
daa
cmp
cmp
mov
inc
xor
orl
sub
mov
adc
popa
mov
jl
or
xchg
pop
mov
xchg
sub
out
fucomip
test
in
out
dec
aaa
dec
mov
dec
fwait
or
popl
add
dec
insb
cmp
lods
cmp
fwait
loop
mov
mov
xor
pop
sti
fdivrs
sarb
int3
jno
mov
xor
mov
cwtl
out
sub
mov
ds
xchg
adc
sbb
dec
xchg
ja
popf
stos
push
mov
loopne,pn
sbb
and
repnz
mov
ret
pop
dec
ds
push
arpl
or
or
and
addr16
jle
out
push
popf
dec
sub
sahf
xchg
orb
sub
adc
mov
jmp
dec
cltd
and
pop
and
mov
lods
jecxz
add
push
cmp
je
mov
nop
bnd
jb
jmp
shlb
pop
mov
adc
mov
lods
addb
sbb
xor
inc
test
pop
sub
into
mov
dec
fwait
out
fsubrl
xchg
pushf
or
xchg
xorl
xchg
jbe
loopne
dec
cltd
or
fwait
out
adc
out
xchg
daa
jg
test
dec
adc
aaa
in
jns
sub
pop
add
cmp
fs
inc
xor
int
push
ret
sahf
xchg
or
or
cmp
aam
mov
dec
jmp
cs
fldl
inc
pop
pop
or
xchg
or
cmp
adc
dec
roll
mov
outsb
pop
ret
or
xchg
scas
lea
push
inc
daa
mov
out
leave
or
mov
sbb
push
lret
arpl
mov
cmpsb
cmp
xor
inc
lea
mov
push
shlb
mov
les
test
repz
data16
jmp
lahf
push
add
mov
jge
or
lock
inc
pop
test
aad
scas
mov
cmpb
mov
xorl
nop
jg
push
cld
lods
or
or
fistl
xor
add
xchg
jo
insl
or
adc
add
das
add
pop
mov
push
std
shll
dec
pop
cmpsl
insl
or
push
jecxz
in
adc
test
outsl
ljmpw
enter
dec
dec
fnsave
pop
dec
aas
xor
adc
std
or
cmp
loopne
in
outsb
dec
out
cmp
pop
mov
jne
out
loopne
push
out
js
xor
dec
xchg
add
add
mov
push
push
fistps
shrl
and
jns
aad
mov
call
stos
dec
test
xlat
jb
xchg
adc
mov
hlt
jne
mov
inc
lock
std
fs
int
jno
jge
jp
mov
inc
lcall
mov
lea
cmp
xchg
jle
jl
mov
or
rcrb
add
push
ds
dec
pop
dec
push
xchg
mov
leave
add
sbb
push
sahf
sub
je
add
icebp
adc
jne
jb
mov
adc
and
fmul
push
jmp
xchg
out
mov
mov
outsb
mov
dec
and
call
sarb
adc
jge
in
sti
addb
sbb
ja
lods
push
mov
cwtl
mov
idivl
in
jnp
mov
jnp,pt
sbb
push
lahf
dec
push
pop
aas
inc
notb
xchg
test
incb
sbb
and
push
cmp
leave
jecxz
xchg
arpl
adc
jecxz
popa
hlt
adc
cmpsb
pop
or
or
aas
leave
push
dec
push
mov
and
mov
shlb
test
imul
and
dec
and
outsb
pushf
add
icebp
mov
inc
dec
pop
mov
in
mov
popf
cli
lea
stc
lcall
jg
repz
or
pop
mov
and
lea
jnp
stos
add
ljmp
int3
rorb
adc
or
sub
stc
dec
sbb
pop
lods
pop
sarl
add
or
pop
or
sbbl
in
cltd
mov
xor
out
outsb
stc
and
sti
or
ss
xlat
mov
pop
pop
and
cmp
getsec
into
dec
mov
inc
inc
sti
xchg
daa
pop
push
push
iret
mov
bound
mov
test
cltd
mov
icebp
push
xchg
insb
pop
fwait
pusha
stc
adc
mov
jl
test
pop
push
rorl
push
push
inc
pop
and
insb
mov
iret
mov
xlat
inc
outsb
pop
xchg
or
xor
or
aas
test
cmpsl
xchg
cmp
lret
mov
xor
and
mov
jmp
repz
inc
loope
test
sbbl
aad
push
lret
pop
out
repz
xchg
jmp
outsb
in
jl
add
lahf
dec
mov
mov
inc
fsubrl
mov
or
dec
mov
test
sbb
rcrb
fcompl
adc
xor
mov
push
sub
mov
shlb
xor
or
int
jno
rcrb
cmc
push
aad
xchg
ljmp
bound
mov
leave
pop
fwait
inc
aas
cmpsl
adc
or
push
cwtl
outsl
daa
ss
clc
mov
xchg
adc
sarb
fcoms
in
fmull
or
cmp
jmp
arpl
fcmovnb
sbb
fwait
jno
sub
adc
adc
mov
jb
push
mov
jmp
inc
hlt
cmp
jg
loopne
push
xor
or
push
mov
flds
gs
fwait
arpl
std
dec
arpl
ffree
iret
mov
iret
gs
outsb
dec
les
cld
js
ds
test
js
arpl
dec
mov
data16
cmc
jmp
cmp
mov
xor
mov
add
ret
leave
adcl
jecxz
jmp
ret
xchg
mov
add
xlat
cwtl
les
cmp
fwait
fs
icebp
cltd
cmp
aam
out
leave
mov
sub
sbb
cmp
leave
mov
aad
popf
cmpsb
jp
psllw
mov
push
sahf
sbb
sbb
test
out
mov
sub
xor
pop
loopne
imul
push
gs
out
orb
pop
jo
jecxz
jbe
es
xchg
js
adc
imul
outsb
mov
mov
cwtl
aam
inc
aaa
dec
andb
push
iret
jg
and
test
cmp
pop
fistl
mov
loope
out
dec
out
adc
xor
add
push
mov
cmpb
movsb
jae
fcompl
loope
in
adc
xor
pop
icebp
lds
arpl
jo
or
and
add
cmp
and
data16
inc
cmp
loop
lret
ficomps
cmp
stc
lock
scas
xlat
add
cmpl
shll
js
xor
addr16
dec
xchg
push
stc
mov
insl
add
xchg
in
pop
push
and
push
or
mov
negb
sarb
mov
sbb
push
or
mov
jle
jge
ficoms
in
aad
scas
enter
pushf
test
xchg
xchg
in
int
test
fwait
in
push
cmp
and
loop
mov
dec
fmul
push
jns
das
xor
xchg
inc
inc
push
imul
scas
xlat
mov
push
jno
cmp
out
in
sbb
imull
cmc
jnp
sub
dec
jle
push
inc
mov
push
pop
shlb
inc
psraw
fldl
pop
pop
sbb
xor
test
ljmp
call
fcomp
loope
pushf
push
mov
dec
in
cmp
andb
push
sbb
outsb
ja
in
adc
and
xor
cld
sarb
xor
js
mov
mov
scas
xlat
cmp
test
in
xchg
adc
cmp
xchg
cld
jne
mov
cli
fidivrs
popa
test
fwait
xchg
pop
mov
pop
scas
imul
or
enter
stc
mov
mov
mov
sbb
stos
sub
fistpll
movsb
sbb
mov
dec
jp
mov
sahf
aaa
jg
sbb
pop
je
cmp
popa
push
movsb
insl
jo
popf
inc
loope
push
sbbb
imull
mov
cli
pop
rolb
xchg
push
and
rcll
addr16
xchg
cmp
fs
and
test
pop
add
jno
sub
mov
nop
sub
out
inc
aad
mov
lret
xchg
stos
sahf
loop
jae
das
xchg
imulb
sub
mov
lds
ret
test
lds
pop
jge
add
pop
adc
sbb
clc
in
jnp
or
in
cld
cltd
aaa
leave
test
and
sbb
test
leave
mov
hlt
mov
jp
jnp
jle
stc
stos
jmp
lret
xchg
pop
dec
data16
in
or
test
jp
jnp
fsubrl
jbe
and
movsb
xchg
in
mov
adcl
icebp
inc
cmp
out
inc
dec
xor
mov
outsl
fnstcw
mov
inc
jle
dec
cmp
stos
mov
mov
jp
push
or
jbe
pop
aas
xor
aam
out
sub
or
icebp
std
and
pop
sub
ret
jl
pop
fidivrl
fsubrl
or
mov
pop
add
inc
add
shrl
xchg
jno
jp
test
jae
sub
pop
loope
sti
inc
jp
sbb
stos
adc
mov
rorl
jnp
aad
mov
lret
mov
aad
testl
je
fwait
jne
mov
mov
adc
cmp
cmp
lock
push
mov
int
faddl
fs
bound
addr16
das
dec
cli
mov
outsb
or
es
pop
mov
mov
lahf
pop
lock
cmpsb
shll
test
jecxz
jb
sbb
add
mov
lods
mov
or
faddl
es
push
xlat
and
aad
scas
xlat
xor
pop
mov
or
mov
xor
leave
lods
fdivr
inc
mov
xchg
lock
adc
out
or
push
xchg
call
inc
cmp
lods
push
adc
movsb
int
lret
xor
jmp
push
inc
movsb
test
stc
scas
les
mov
in
adc
lret
testb
out
rorb
scas
mov
push
or
jmp
inc
enter
add
lcall
mov
mov
adc
xchg
insb
cmp
dec
sbb
dec
ds
enter
rcrb
xchg
movsb
loopne
cwtl
and
add
imul
test
mov
sub
scas
or
adc
movsb
ljmp
jae
jmp
sub
sahf
push
mov
popf
inc
sbb
jnp
adc
jo
popa
fists
movsb
insl
push
and
pop
mov
in
push
xchg
iret
pop
adc
jecxz
lods
in
xor
dec
add
inc
or
rolb
mov
and
insb
cmc
lret
outsl
pop
mov
mov
daa
jmp
int
rcrb
and
mov
cmc
mov
inc
adcl
fstl
sbb
rol
sarl
imulb
sbb
enter
jae
icebp
or
jecxz
in
pop
jl
mov
das
sahf
dec
sbb
imul
mov
popf
vcomiss
push
aam
push
loop
inc
sahf
jbe
cmp
and
pop
das
mov
dec
jp
std
int3
adc
stos
ss
js
sbb
mov
inc
fcompl
mov
and
ljmp
mov
mov
jecxz
scas
fisttpll
test
add
flds
in
push
hlt
stos
dec
push
push
push
mov
movb
push
adc
fisubrl
iret
popf
mov
push
mov
mov
das
mov
test
xchg
mov
test
rcl
mov
mov
jp
repnz
ret
das
dec
sarl
dec
sub
insb
or
repz
popa
cld
aaa
adc
mov
stos
mov
mov
es
jmp
mull
shlb
ret
stos
xor
dec
xorl
mov
sub
jo
roll
rcr
pop
push
dec
dec
push
push
out
add
in
add
enter
xchg
xor
jmp
xor
int3
call
dec
pop
pusha
je
cmpsb
sbb
pusha
aaa
jbe
add
insb
cmp
xchg
jecxz
xchg
xor
fwait
xchg
sahf
cmp
adc
test
jle
popa
pop
jb
adc
test
js
jle
cmp
adc
divl
pop
sti
mov
mov
dec
outsl
add
ret
push
mov
cs
mov
test
xor
in
xor
imul
push
mov
pop
loopne
popf
in
cmpsb
arpl
out
mov
ljmp
sub
cli
inc
incl
push
and
xchg
pop
jns
loopne
je
xchg
mov
mov
lods
into
jg
arpl
lcall
xchg
sahf
pop
inc
test
lret
ret
insb
fldenv
sbb
push
mov
xchg
add
repz
nop
mov
ss
lcall
mov
subl
scas
xchg
jbe
std
ss
and
out
cltd
data16
lock
hlt
test
xor
cmp
jns
in
cmp
jg
or
pop
xchg
sub
inc
jnp
incb
pop
lret
sbb
mov
cmpl
dec
mov
ljmp
push
sbb
adc
mov
iret
jno
pop
push
mov
sti
pop
and
out
mov
cmp
or
jmp
pop
pusha
cmc
push
mov
dec
xchg
xor
mov
gs
adc
sbb
mov
sar
mov
mov
mov
sahf
pop
sub
lcall
cmp
je,pn
jae
sub
ret
dec
or
test
mov
jg
add
aas
ss
stos
es
sub
push
add
cmpb
lahf
fidivrs
mov
cmp
loopne,pn
movsl
xchg
insw
mov
shl
int3
and
pop
jmp
jbe
push
out
fcmove
je
test
cmc
sahf
dec
sar
hlt
add
push
pop
jo
rorl
rcl
jne
cs
jl
pop
push
sbb
in
fcoml
pop
mulb
fimuls
pop
fcmove
repnz
cmp
andb
inc
das
aad
dec
cmp
stos
mov
shlb
mov
mov
push
outsb
shll
inc
aas
mov
jp
fisubrs
jle
mov
scas
rcrl
pop
sahf
sub
dec
dec
lods
inc
gs
jge
mov
inc
jnp
and
add
movsb
cmp
cmpl
xor
sahf
call
pop
pop
ja
mov
out
mov
outsl
and
cltd
jecxz,pn
xchg
mov
lret
es
push
sbb
xchg
into
nop
sbb
sbb
lret
push
sbbb
rep
mov
loop
fadds
adc
cltd
pop
lea
and
mov
in
push
or
cmp
mov
addr16
loopne
pop
inc
and
add
ret
scas
iret
js
push
sbb
pop
pop
or
out
mov
dec
and
inc
cmovb
notl
cmpsl
and
pop
fnstcw
scas
xchg
xor
into
pop
sub
fcomi
mov
addb
std
jns
aaa
fldenv
cmp
cli
pop
loop
test
shrl
rcrb
out
cwtl
mov
fcoms
out
fstpl
les
xor
inc
sub
rolb
fwait
and
pop
subl
jl
sub
xor
lea
scas
cli
sbb
insb
mov
mov
lds
es
out
and
mov
add
in
fcompl
iret
and
repz
loop
sbb
mov
mov
in
push
rolb
jnp
test
add
jge
cld
jl
outsl
mov
or
in
in
xor
xor
inc
out
pop
jmp
lcall
cmpsb
dec
loop
xor
mov
pop
pop
sbb
inc
loope
mov
adc
test
mov
rcrl
ja
dec
bound
sbb
inc
push
rorl
ret
cmp
js
jp
aas
push
or
pop
insl
jnp
es
std
outsl
add
in
in
out
js
popa
lret
add
mov
cmp
jmp
clc
xchg
add
icebp
mov
iret
int3
cmp
data16
sub
ljmp
inc
sbb
cmp
dec
nop
jns
pop
movsb
adc
mov
sub
loop
inc
lahf
js
xor
pop
mov
shl
rol
sub
or
xchg
shl
mov
xchg
dec
notb
mov
stc
and
sub
add
fidivrs
ds
add
and
das
addb
cmpsb
iret
dec
mov
lcall
mov
sub
mov
scas
movsb
fldcw
inc
pusha
fsts
jle
pushf
out
xchg
dec
mov
sti
jg
scas
inc
ja
outsb
mov
xor
lret
daa
out
adc
out
mov
lods
fiadds
imul
sti
das
sub
push
lds
pop
int3
cmpb
or
xchg
xchg
push
fcmovnb
xchg
push
fwait
popa
sarb
cld
jno
insl
jg
jns
sub
push
outsb
jle
aad
aas
dec
fxch
push
outsl
pop
adc
es
sbb
push
adc
pop
ds
xchg
fsubl
jecxz
pop
push
mov
or
jno
shlb
sbb
xchg
pushf
incl
hlt
loop
out
rclb
or
insb
mov
scas
xchg
lods
movsb
jo
scas
cmpsb
lods
jle
mov
push
mov
data16
sub
inc
adc
aad
mov
cmp
jle
or
mov
std
xor
xchg
xchg
mov
cwtl
push
shl
dec
inc
in
mov
jmp
adc
pop
cmp
mov
xor
pushl
jae
push
stc
mov
xor
dec
popa
xor
sbb
mov
jecxz
xchg
jne
mov
fldl2e
daa
gs
and
inc
and
repnz
test
fadds
daa
scas
filds
dec
add
sbb
out
sub
xchg
inc
xchg
mov
roll
xchg
and
inc
jecxz
inc
jo
cmp
adc
loop
cmpsb
push
movb
rcr
xchg
push
fcmove
and
push
sbb
lock
sarb
mov
add
pushl
fldl
test
jecxz
pop
pop
pusha
fs
and
inc
ret
cmp
dec
push
push
inc
outsb
inc
nop
stc
in
popf
dec
fcomi
sbb
nop
dec
mov
out
das
xor
out
jmp
lahf
sbb
mov
mov
jp
rolw
dec
jae
pop
enter
out
mov
add
pop
sub
xchg
mov
xchg
cmp
xor
jle
lock
cwtl
sub
jo
fstl
sub
sbbb
xchg
test
ud2
pushf
sbb
fmuls
mov
and
and
or
dec
cltd
fisubrl
iret
pop
stos
movsl
pop
dec
jmp
pop
push
sbb
add
popa
mov
cmp
fcoml
pop
nop
mov
fwait
cld
mov
xchg
imul
mov
subb
cmp
mov
scas
mov
fcmovb
arpl
aas
and
popf
jo
jp
data16
fisttps
in
push
mov
enter
out
std
faddl
test
push
pop
pushl
push
xchg
cltd
push
lahf
decb
xor
mov
add
pushf
and
test
pop
push
loope
push
data16
mov
sbb
stos
in
cmpsb
mov
or
cltd
mov
sbb
cmc
and
loope
push
stos
sbb
push
lods
lods
scas
or
jbe
jmp
and
cmp
lods
inc
xor
or
add
outsl
fs
mov
aad
jne
je
rorl
in
pop
scas
les
pop
dec
mov
test
movsb
cs
mov
or
mov
andl
add
cmp
pop
dec
inc
data16
sub
repnz
cmp
aas
je
and
pop
stos
and
aaa
orb
mov
lcall
mov
out
pop
insb
je
lods
cmp
dec
dec
dec
jb
sub
sub
xchg
dec
cmpsl
or
cltd
shl
jno
add
test
sarb
jge
jb
aaa
xlat
mov
mov
sub
movsb
pop
add
pop
dec
add
out
jno
dec
jns
test
jnp
shll
test
xchg
je
cmp
xor
mov
push
cmp
jne
xchg
dec
sub
cmpsl
and
pop
lret
push
push
xor
adc
and
jmp
jecxz
add
and
andl
cmovle
stc
pop
sti
nop
sub
jle
mov
loope
das
or
add
add
test
jbe
lds
les
push
and
and
in
adc
push
xchg
jecxz
push
xchg
cs
leave
mov
stos
std
xchg
insb
dec
inc
outsl
xlat
cmpsl
je
add
in
stos
fmuls
jecxz
hlt
mov
jb
pop
cli
and
gs
and
inc
or
jmp
mov
loope
icebp
jecxz
sbb
in
js
and
and
fcoms
int
xor
or
pop
push
out
cmp
imull
or
jmp
aam
pop
cmp
add
mov
es
mov
adcl
orl
dec
ss
loop
lret
or
pop
mov
xor
sbb
xchg
hlt
pop
repnz
inc
mov
sarl
inc
add
sbb
push
mov
pop
mov
and
js
jb
push
leave
inc
jb
test
test
into
sub
mov
sahf
popa
push
mov
in
jge
shl
cmp
push
dec
jae
lret
aam
fisttps
imul
hlt
out
jb
mov
ljmp
pusha
fistl
pop
lea
divl
and
inc
fisttpll
inc
out
sbb
mov
imul
aam
imul
push
push
enter
pop
jnp
xchg
subl
inc
pop
outsl
es
sbb
cmp
dec
aad
and
jg
mov
mov
out
dec
lock
jns
icebp
into
and
add
ror
sbb
cmpsl
scas
scas
mov
xor
push
jb
test
cs
sti
cmp
xor
mov
add
mov
pushf
dec
mov
xor
or
fisubl
insl
test
cs
or
idivb
lock
dec
add
out
pop
cld
add
rcll
sub
pop
neg
sbb
jle
sub
mov
lods
cltd
or
push
push
jbe
out
call
stos
cld
sbb
mov
lahf
mov
xchg
inc
jg
lods
mov
and
int
lods
pop
rol
out
mov
sbb
lods
cmc
outsl
jbe
lahf
mov
push
ds
cmp
icebp
mov
xor
inc
mov
xorl
repnz
inc
inc
sarb
mov
popa
pop
cltd
jae
pop
sub
and
or
sbb
por
mov
shll
add
sub
xchg
fs
ret
jg
jge
cld
ret
jno
xorl
pop
mov
pushf
sbb
movsb
ret
jecxz
xchg
stos
nop
sbb
xchg
addr16
sbb
and
mov
or
cmp
addr16
mov
adc
jp
andl
jae
cmp
mov
xorb
xlat
jb
push
add
mov
xor
jns
jnp
gs
stos
inc
subb
cmpsl
inc
mov
inc
pop
aam
fsubs
pop
mov
jge
lcall
cmp
repnz
mov
ljmp
iret
je
mov
dec
pop
fisttpl
add
test
mov
dec
pop
mov
xchg
testb
es
inc
push
in
bound
fnstsw
adcl
mov
push
fstp
lock
mov
fnstsw
ret
sarb
xor
sub
fisubrl
lods
rclb
ja
mov
jae
ficomps
fs
pop
ja
das
shrl
mov
loopne
sub
xchg
test
arpl
dec
xor
popa
jns
pop
aas
lfs
jae
xchg
dec
mov
cli
and
inc
aam
mov
pop
dec
daa
dec
push
subl
gs
ljmp
adc
out
or
push
mov
jno
adc
cmp
leave
or
fldcw
inc
lea
nop
add
mov
adc
cmc
loop
adc
mov
stos
jmp
adc
push
enter
mov
mov
mov
aas
out
into
cmp
push
nop
ret
dec
ret
mov
mov
dec
push
jmp
mov
in
adc
adc
mov
fs
testb
dec
dec
mov
lods
addr16
or
movsl
adc
cmpsl
jecxz
push
lret
push
insl
popf
pusha
lock
xchg
out
rorl
pop
jb
out
mov
out
jg
imul
hlt
mov
fildll
push
mov
cld
inc
mov
mov
mov
fnstcw
fstl
data16
dec
or
popa
into
and
orb
call
pop
mov
pop
pop
push
flds
push
movsl
pop
fs
push
sbb
test
jl
mov
lahf
sub
nop
test
push
insl
jbe
jg
sbb
ja
mov
push
sbb
sahf
shlb
xor
push
int
into
sub
sbb
cmc
mov
cld
in
xor
sbb
push
cwtl
shll
imul
pop
or
mov
aad
xor
js
xor
and
jo
negb
cld
orb
pop
lea
push
xor
inc
ss
ds
call
jl
ss
mov
xor
es
imul
in
fistl
xor
into
push
xchg
ds
sub
pop
stc
push
rcll
pop
mov
fidivs
mov
pop
insl
ds
jg
imul
push
inc
ficoms
pushl
mov
nop
icebp
inc
loopne
out
scas
ret
mov
xchg
adc
jb
pop
pop
fistl
push
gs
xchg
inc
jle
jb
mov
out
jbe
inc
out
mov
or
xlat
adc
imul
sub
mov
xor
ret
out
push
jnp
add
pop
pushf
dec
and
or
add
dec
jnp
cmp
aam
cmp
sub
mov
jl
pop
shll
lds
dec
sbb
dec
push
inc
sbb
cmpsl
cmp
in
pop
scas
pop
fnsave
xchg
and
outsb
jle
inc
aaa
sti
repnz
insb
filds
pop
dec
cmpsl
push
nop
pop
inc
shlb
lods
pop
jge
and
or
shlb
inc
scas
cltd
mov
cs
add
aaa
mov
enter
test
mov
xchg
and
cmp
stos
xchg
ret
cli
lock
loope
into
dec
pop
popa
jo
jb
sbb
bswap
loop
sti
cmpsb
addr16
jns
cmp
insl
inc
sub
pop
ljmp
sbb
push
mov
xlat
jo
mov
add
rclb
and
cmp
loope
mov
pop
ret
pop
out
pop
in
sub
dec
xchg
nop
int
add
sub
or
int3
jbe
ja
pop
add
sbb
sub
pop
ja
mov
mov
pusha
pop
sbb
scas
push
cmpsb
xor
dec
sbb
sub
lea
dec
stc
sti
mov
scas
mov
mov
sarl
fstpt
aam
add
fcmovnbe
xlat
fsubrl
push
orl
sub
push
dec
xchg
movsb
imul
and
stc
mov
ja
jecxz
jmp
sub
inc
mov
pushf
sbb
or
shlb
repz
jne
aas
push
mov
fwait
adc
addr16
sbb
and
sub
dec
mov
cmp
jae,pn
xchg
adc
jo
leave
fnstsw
push
in
in
adc
daa
add
popa
imull
mov
xorb
aaa
test
nop
sbb
jmp
xchg
sti
movsl
jl
mov
mov
scas
and
pop
cmp
sbb
or
je
sub
stos
adc
enter
cmc
and
lret
ljmp
mov
push
mov
mov
imul
hlt
test
std
ljmp
aas
jp
push
jl
out
and
and
or
cmpsb
mov
xchg
lea
orl
cmp
clc
dec
gs
adc
sub
cmp
imul
in
sti
pop
rclb
and
and
sti
pop
mov
imul
pop
mov
sahf
flds
outsb
sbb
ds
mov
dec
cli
les
movsb
adc
push
push
loop
sub
daa
push
fs
outsl
je
aam
inc
shlb
mov
jno
xchg
adc
lahf
mov
inc
lcall
and
inc
mov
add
jecxz
push
jle
adc
fistpl
xlat
stc
ret
adc
add
js
dec
adc
iret
leave
cmp
inc
pop
pop
aad
pop
aas
push
ljmp
inc
add
cmc
mov
dec
mov
lds
xor
loopne
mov
cld
fstps
js
adc
int
int
loop
inc
cli
dec
sarb
out
movsl
aas
int
enter
inc
ret
lods
stc
fsubrs
lret
ret
lahf
ret
sub
pop
nop
sbb
adc
or
mov
js
inc
mov
test
xor
cmp
xor
das
dec
pop
sub
xor
jne
cmp
pop
daa
cmp
mov
leave
arpl
or
cmpsl
inc
pop
movsb
loope
xchg
push
cs
test
dec
cmc
iret
inc
jg
fsubr
sbb
sub
arpl
dec
push
ja
add
ret
or
cli
cli
call
push
mov
fmulp
cmp
ja
out
pop
int
xor
lret
and
rcr
iret
jns
xchg
cmp
cmp
stc
bound
ds
loop
and
pop
jnp
xor
mov
push
sbb
inc
cmp
dec
sub
sbb
pop
aad
clc
xchg
adc
cmpsl
sarb
fcomp
mov
or
div
aas
ss
jecxz
cltd
xor
lods
lcall
pop
lock
test
pop
divl
lea
add
dec
enter
sbb
lods
jmp
dec
cmpsb
daa
decb
andb
jno
mov
pop
mov
das
or
push
mov
xchg
pop
outsl
and
sahf
xor
or
es
inc
sub
xor
aad
mov
cltd
pop
jno
js
jnp
test
cli
out
mov
jns
jge
or
testl
cmp
test
cmpl
ja
in
jle
lret
mov
mov
jo
sub
mov
mov
in
into
and
cli
ljmp
push
inc
dec
lds
mov
cmc
pop
cmp
mov
aaa
leave
js
jge
jmp
inc
cld
in
sahf
dec
jb
mov
sbb
into
xor
jmp
test
aad
jne
ja
aaa
out
lret
pop
or
xchg
std
mov
lock
cmp
iret
cmc
arpl
cmp
mov
jge
mov
test
sbb
mov
jg
stc
sbb
add
les
cltd
jne
pop
mov
or
outsb
pop
sbb
mov
out
cld
mov
push
and
aas
sbb
mov
rcll
cwtl
ret
cmp
push
cli
lcall
les
call
inc
lods
add
pop
lds
ret
dec
mov
pop
sub
pop
adc
adc
inc
lods
aam
xchg
nop
jle
jl
pop
std
fistpl
popf
lods
test
sub
dec
cmp
das
mov
push
xor
inc
push
lock
mov
add
or
rcrb
mov
mov
cmc
add
rcrl
mov
cmpsb
adc
loopne
cmp
dec
mov
and
jge
sti
adc
push
pop
xor
cmpsl
xor
dec
push
mov
adc
mov
mov
lock
push
xchg
clc
sti
lahf
shrl
fbstp
pop
mov
inc
lret
leave
inc
fmull
shrl
sub
std
add
jmp
clc
cwtl
jle
pop
mov
mov
jmp
in
pop
jg
jb
sbb
sub
fadds
cli
mov
mov
out
dec
leave
add
xor
or
xlat
inc
pop
js
mov
out
aad
sub
fs
push
inc
into
movsb
testb
add
test
ffreep
rol
imul
mov
pop
out
outsl
call
insl
out
call
das
dec
in
nop
xorl
stos
add
adc
and
stc
sub
ss
stc
cmp
dec
roll
call
push
mov
icebp
dec
cmp
xchg
push
sahf
mov
hlt
scas
lods
cmp
xor
mov
jecxz
mov
push
outsl
imull
je
int
or
push
sub
push
cmc
mov
mov
clc
jp
pusha
int3
inc
aad
call
mov
int
daa
inc
ja
test
cwtl
iret
or
push
dec
test
jns
mov
loop
cwtl
push
aaa
rcll
icebp
pop
lods
fdiv
mov
scas
mov
cmp
popa
and
in
xor
fisubrs
xchg
jge
adc
cwtl
daa
adc
jo
or
mov
sahf
xchg
xor
adc
pop
fwait
int3
pop
xor
loope
and
stc
fcomi
fucompp
inc
mov
insl
insl
es
shll
cmc
push
cmpsb
sbb
pop
mov
in
lods
daa
xchg
xor
mov
mov
inc
rcll
pop
cmp
cmp
inc
mov
repz
sub
pop
cmp
fcomps
rorb
out
cld
xchg
roll
jb
inc
jmp
xlat
jle
pop
pop
adc
add
in
cs
mov
testb
pop
mov
popa
inc
mov
pusha
xchg
xchg
jle
mov
xor
cmp
jb
wrmsr
mov
mov
sub
xor
jg
test
jbe
sbb
repnz
loop
xor
xor
or
adc
adc
arpl
cli
and
fucomip
pop
insb
fdivr
cld
cmp
popa
push
in
xchg
mov
add
stos
jae
cmp
out
mov
hlt
push
jne
rolb
or
out
and
mov
ds
inc
loopne
jg
mov
mov
rclb
loope
jae
mov
hlt
pop
je
rcrl
into
lret
push
jns
hlt
enter
push
in
xchg
jb
cmp
jne
xor
add
cmp
mov
sahf
fs
sbb
xchg
xchg
mov
dec
add
pop
dec
xchg
pop
jbe
sbb
xchg
push
lock
je
cmpsb
imul
or
test
sarb
fmuls
lock
xchg
rolb
mov
rorl
sub
xchg
xchg
es
fsubrl
aas
fistpll
add
sub
xchg
orl
mov
icebp
movsl
gs
test
and
fs
xor
les
into
out
pop
pop
jp
xor
aaa
xlat
out
int
push
sarl
jb
xor
lds
jae
lds
and
leave
sbb
dec
jne
mov
ret
pop
inc
imul
add
adc
cmp
push
ljmp
jg
lods
push
insl
pop
push
jo
fists
dec
fadds
in
je
or
scas
sahf
pop
int3
outsb
mov
pop
xor
ret
mov
push
xlat
add
rolb
hlt
mov
cmp
fwait
aaa
lock
push
push
or
pop
dec
rolb
cmp
mov
xchg
pop
pusha
jno
mov
rcrl
pop
in
xor
mov
mov
push
xchg
fwait
ret
cwtl
mov
dec
jns
faddl
stc
stc
ds
js
xchg
cmp
push
adc
jnp
ror
pusha
fistps
cwtl
xchg
cld
cmp
rcll
push
adc
or
push
sub
minps
mov
add
add
xchg
push
sarl
push
jmp
xchg
and
mov
push
add
mov
lods
add
mov
push
mov
mov
add
inc
int
push
dec
fnstenv
mov
dec
push
stos
mov
mov
and
xchg
pop
adc
cmpsl
imul
xor
pop
dec
fldz
or
bound
sub
imul
jle
adcl
push
pop
add
jl
dec
mov
adc
jns
addr16
adc
push
and
cwtl
add
sahf
mov
ret
xor
inc
orl
xlat
rep
mov
gs
ljmp
cmpsl
mov
mov
inc
mov
xor
ljmp
jnp
and
jmp
fidivs
add
xchg
add
shll
jg
sub
insl
pusha
mov
cmp
lock
pop
iret
mov
out
mov
pop
sbb
stos
jp
and
lret
add
xchg
rcr
cwtl
iret
xchg
push
add
out
jns
mov
fwait
movsl
xchg
lcall
xchg
push
loopne
sub
in
jg
add
lahf
lea
jo
xchg
mov
or
mov
add
mov
addr16
adc
ss
push
push
rcll
fdiv
push
mov
sahf
inc
xor
mov
lahf
sub
data16
imul
daa
dec
out
aam
out
mov
pop
in
add
push
stc
in
jno
fbld
xchg
daa
mov
and
dec
aad
nop
int
push
mov
cmpsb
inc
loope
int3
jbe
and
dec
sti
mov
out
sbb
aad
shl
xor
mov
mov
ljmp
je
lea
jl
jb
sbb
jge
pop
rol
push
testl
add
aaa
jbe
mov
pop
pop
imul
and
out
fyl2x
test
test
imul
lods
rcrb
jle
bound
adc
fistl
shrl
sbb
pop
sbb
push
leave
fs
scas
adc
fisttps
push
mov
sub
hlt
icebp
jne
fmul
insb
scas
pop
rcll
stos
lock
and
rolb
adc
xchg
std
cmp
pop
pop
leave
std
stc
rcll
jns
or
sbb
dec
les
nop
jge
sub
mov
dec
frstor
push
mov
dec
je
mov
andl
inc
xchg
mov
and
jns
mov
or
jg
in
in
icebp
movsb
jae
fnstenv
pop
xor
stc
adc
aam
mov
dec
dec
push
or
mov
pop
dec
push
aas
clc
xor
loop
inc
fwait
cmp
fadd
sbb
mov
fdivs
ss
lret
sub
xor
pushf
or
andl
in
xor
jnp
adc
adc
jae
pop
cmpsl
mov
mull
sbb
sub
mov
jp
into
gs
mov
cltd
rcll
sbb
xchg
mov
xor
subb
push
pop
xor
jne
addb
xchg
push
jmp
cmp
xor
pushf
push
sub
jns
out
push
mov
inc
das
fsubs
mov
mov
sbb
push
adc
xchg
cmc
or
fsubl
push
cmpsb
adc
lods
fimull
dec
stos
out
idivb
inc
push
insb
ret
rclb
xchg
jmp
jns
jg
in
jl
cwtl
lea
sti
add
xchg
cli
push
cmpb
cmp
sahf
xchg
pop
adc
xchg
push
xchg
pop
sub
fldl
jmp
shrl
xor
push
add
test
dec
adc
or
subb
xchg
cmpsl
push
xchg
mov
js
pop
insl
fdivr
mov
add
xchg
dec
inc
mov
inc
push
gs
test
popf
xchg
jl
xchg
mov
xchg
adc
mov
cs
cmp
jl
lds
dec
push
inc
xchg
mov
mov
aaa
dec
mov
addl
sub
idiv
fbstp
cli
xchg
pushf
adc
data16
in
mov
popa
xchg
into
lcall
sti
stos
mov
enter
sbb
sarb
jbe
adc
mov
insl
sub
xor
int
inc
sbb
aam
jecxz
rclb
and
sbb
mov
inc
mov
call
xchg
mov
xchg
or
mov
dec
jno
adc
sbb
ficompl
outsb
mov
push
xlat
loopne
and
sub
cli
ficomps
jae
sbb
addb
lods
mov
push
ucomiss
arpl
or
hlt
pop
repz
pop
inc
mov
lds
pop
add
mov
fnstcw
stos
sbb
xchg
int
xchg
subl
pusha
pop
mov
fdivs
xchg
or
mov
jno
cli
sahf
sarb
scas
int3
push
xchg
or
insl
cmpsb
aad
adc
jmp
xchg
inc
xor
insb
fs
dec
adc
push
stos
ds
cmp
fadd
adc
xchg
cmp
int
adc
lods
and
dec
xor
add
outsb
xchg
push
mov
mov
jecxz
or
adc
pop
add
icebp
dec
ds
jb
xorb
pop
inc
mov
sub
mov
iret
mov
iret
pop
cmpl
dec
ret
jb
push
into
repz
sbb
stos
ljmp
and
xor
inc
sti
inc
mov
pop
cmp
cmc
pop
repz
jae
push
imul
xchg
out
es
jecxz
adc
mov
xchg
add
add
jo
in
pop
jl
repz
testl
xor
clc
leave
mov
pop
and
shll
xlat
xchg
push
pop
fs
sub
loopne
ret
inc
imul
adcl
mov
mov
lret
ja
inc
mov
and
xchg
mov
leave
mov
or
jne
xchg
loop
push
inc
push
pop
aas
pop
loope
nop
pop
pop
cmp
jno
mov
icebp
xchg
test
subb
out
clc
sub
pop
in
xor
shlb
jo
and
mov
mov
loop
pop
pop
add
adc
cmp
fucomip
fs
mov
cmp
jb
subl
mov
imul
lds
or
lret
add
pop
outsl
or
inc
mov
xlat
gs
pop
push
ficoms
xor
test
out
cmp
push
mov
lret
jl
mov
faddl
test
jbe
rcr
and
lret
and
lcall
cwtl
loop
icebp
dec
or
call
les
aam
pop
pop
ret
inc
mov
lock
push
xchg
lahf
ret
cli
rorb
dec
or
dec
aam
pop
dec
test
fistps
inc
es
repz
fldt
insl
cli
sub
divb
and
jo
mov
xor
in
lcall
jo
sub
bound
fs
scas
sub
aas
aaa
mov
push
call
pop
mov
sub
pop
loopne
mov
inc
out
movsb
dec
inc
mov
pop
ljmp
dec
lret
data16
arpl
popa
and
frstor
pop
stos
jns
jg
jb
push
mov
inc
pushf
mov
loopne
jae
shrb
mov
xchg
int3
movb
aad
movl
adc
inc
popf
pop
adc
bound
sub
mov
test
jb
nop
repnz
aas
jg
out
xor
dec
rep
aas
aam
hlt
ficompl
les
jb
jg
imul
bound
ficoms
addr16
mov
insb
pop
jns
or
sti
mov
loop
mov
aam
es
and
fidivl
jo
lods
sar
mov
js
push
pop
push
dec
add
insb
push
lahf
or
pop
jb
and
subb
adc
mov
xchg
data16
jecxz
iret
adc
jno
jecxz
or
mov
test
dec
xor
aad
jle
lock
mov
dec
dec
jbe
cmp
and
mull
dec
iret
xchg
and
xor
cs
inc
push
xorl
push
test
dec
cld
sarb
push
inc
stos
mov
xchg
pop
sbb
sbb
js
push
or
cmpsl
dec
lds
shll
cs
loop
lods
fiadds
xchg
cmp
sbb
out
inc
mov
in
push
jmp
sub
lock
lahf
mov
in
jae
sahf
popa
mov
sbb
and
stos
lods
jle
cmp
or
ja
sub
or
mov
test
sub
mov
call
mov
inc
out
mov
add
aam
in
jmp
jle
and
add
mov
lahf
push
test
rcrb
in
xor
mov
lock
in
dec
push
jnp
js
enter
pop
out
sbbb
outsb
xor
out
push
mov
fldenv
divl
adc
dec
sbb
cwtl
pop
in
test
add
stc
in
sub
popa
arpl
aam
hlt
cmp
loopne
mov
jnp
sbb
add
lea
cli
sarb
ja
in
ljmp
cmp
sti
xchg
imul
inc
hlt
jno
jle
jne
mov
jb
adc
fs
leave
das
orl
movsb
mov
pop
mov
inc
andl
les
scas
cmp
es
inc
push
or
mov
mov
cmpsb
pop
std
or
push
jnp
sub
loop
add
pop
push
hlt
push
lret
outsb
or
ret
mov
ss
nop
adc
mov
cli
push
mov
mov
and
dec
pop
dec
in
dec
fidivs
gs
or
mov
dec
mov
pop
mov
and
jl
jl
push
mov
out
fadd
in
aas
scas
es
mov
xchg
jo
adc
shrb
stc
jmp
not
cmp
dec
fcomp
sahf
test
cmp
jno
dec
mov
pop
add
push
popa
mov
pop
push
mov
insb
ds
lods
std
jle
mov
inc
add
es
jg
subps
add
cmpb
outsl
xlat
adc
imul
xchg
add
add
mov
test
lds
sbb
in
push
jg
mov
les
stos
jp
xor
jg
push
jb
mov
add
mov
and
incb
jmp
sub
pop
outsl
aaa
mov
dec
jl
dec
sahf
or
mov
or
orl
data16
adc
nop
scas
lea
adc
add
or
pusha
mov
adc
and
aas
out
sbb
pop
into
jp
adc
or
movsb
movsb
aaa
add
lahf
out
int3
aaa
jmp
cmpsl
jae
fisubl
cltd
mov
divl
aas
dec
jo
icebp
jae
cmpsb
rcll
xlat
lea
mov
int
xor
inc
mov
sub
mov
leave
lret
push
push
jge
xor
inc
inc
js
push
sti
mov
pop
out
int3
and
mov
mov
sbb
mov
cmp
dec
or
mov
xchg
dec
xchg
jg
add
sub
and
dec
call
call
and
out
in
dec
sub
sbb
jle
or
xchg
add
hlt
fwait
xchg
scas
cmp
bound
in
adc
sbb
jno
inc
imul
mov
mov
int
ja
test
out
pop
loope
xorl
cmpsl
cmp
sub
adc
sbb
das
inc
or
push
cmc
pop
xor
aaa
xchg
pushf
jb
movsb
add
cld
inc
push
cmc
sbb
dec
aaa
jns
adc
push
push
and
xchg
jbe
repnz
or
sub
sahf
loop
adc
push
xor
mov
add
mov
mov
jl
les
outsb
test
stc
pop
ret
pop
aam
repz
inc
nop
sbb
and
mov
mov
roll
add
add
xlat
rol
lea
les
adc
filds
daa
les
aad
sti
and
push
out
push
cli
notb
xor
test
fisubrl
movsl
fs
pop
jmp
inc
jno
lods
clc
es
cltd
jp
jle
jnp
sbb
adc
test
loopne
arpl
inc
fs
lods
lret
inc
sti
imul
pusha
jb
pop
inc
xchg
in
lock
int
cmpsl
or
jb
dec
enter
mov
push
dec
shlb
in
xchg
xchg
roll
aaa
inc
sub
push
inc
je
mov
push
dec
or
outsb
sbb
jmp
aam
add
xor
ljmp
adc
push
dec
pop
jo
mov
cmp
stos
cmp
in
mov
add
push
adc
add
inc
inc
sbb
outsb
push
xchg
add
loopne
shrb
mov
or
mov
lcall
decb
mul
mov
jecxz
inc
mov
roll
or
ffree
sub
jb
outsb
mov
cmp
cmpsl
xor
pop
outsl
dec
mov
xor
cltd
pop
roll
test
push
inc
push
jg
and
sti
icebp
push
push
xor
loope
lea
outsb
cwtl
and
fisttps
fs
out
jge
lret
jb
inc
cmp
cmp
and
shrb
lcall
cmp
dec
adc
ss
fnstcw
cs
aaa
xor
dec
lods
test
nop
pop
cmp
mov
mov
add
clc
adc
jb
push
int
imul
cwtl
hlt
jnp
icebp
pop
jns
xchg
testl
in
repz
fimull
outsl
jl
cld
xor
mov
sub
push
leave
inc
or
orb
pop
mov
test
or
push
hlt
ss
dec
sub
cmpsl
cwtl
push
stc
insl
mov
xor
xchg
add
out
jno
test
or
cmpb
fnstenv
xchg
pusha
movsb
jnp
or
aam
icebp
cmp
and
aaa
sbb
dec
mov
push
jge
sbb
jno
inc
mov
scas
or
xor
sbb
pop
out
xchg
orl
ret
pop
cmovnp
mov
adc
les
cmp
adc
jns
test
mov
xor
fidivrs
insl
adc
xchg
jmp
cmpsl
enter
pop
add
adc
adc
outsb
inc
ret
add
fists
lcall
dec
outsl
scas
rorb
nop
xchg
fnstcw
cmc
mov
add
mov
sub
pop
imul
jge,pn
daa
mov
lods
jl
addl
ffree
sub
clc
sbb
mov
aas
dec
lahf
movb
sbb
cmp
pop
xchg
mov
add
inc
lret
int
mov
in
pop
loop
and
mov
jnp
lcall
push
cwtl
movsl
pop
xchg
adc
inc
repnz
inc
jp
sbb
sti
jmp
jmp
pop
test
pop
or
dec
aad
loopne
dec
shlb
mov
sahf
xchg
rorb
test
push
imul
test
or
movsb
cli
repz
push
es
xchg
pop
lahf
jmp
mov
xchg
addl
jmp
rcr
fldcw
loope
leave
test
insb
iret
and
dec
addr16
fldt
adc
lds
outsb
arpl
jl
mov
cld
and
out
dec
cli
add
int
push
push
xor
fstpt
fucomp
jo
movl
lret
imulb
fldenv
adc
cmp
sarl
pop
mov
ret
add
cmc
push
add
ljmp
push
addr16
cs
int
les
push
sbb
sub
add
pop
ss
add
cmc
and
popf
lods
pop
jecxz
cmp
cmp
xor
cmp
data16
jne
pop
out
das
cmc
jo
push
out
ds
or
dec
jns
icebp
arpl
std
inc
mov
sbb
dec
es
or
shll
les
and
arpl
fistl
inc
and
xor
fsubrs
ds
hlt
mov
and
cmp
mov
roll
sub
jno
xchg
ds
and
or
fwait
insb
push
mov
dec
jp
fwait
xchg
jnp
scas
xchg
fcomp
jecxz
jo
fcoms
sub
std
xor
add
mov
cli
pushf
xlat
add
dec
sbb
dec
xchg
fcmove
xchg
push
ds
sub
mov
lahf
dec
and
xlat
int
dec
push
movsl
or
stc
sti
hlt
ficomps
push
lret
dec
repz
hlt
pop
imul
loopne
jnp
pusha
cs
pop
gs
push
int3
pop
jae
pusha
movsb
in
mov
mov
dec
cltd
lods
je
movntq
xor
mov
adc
aad
cmp
test
fmul
or
inc
shrb
inc
jg
mov
sbb
js
mov
dec
cmpsb
adc
xor
pop
movsl
pop
jne
enter
and
mov
mov
dec
push
cwtl
xor
lds
test
xchg
cltd
rcrb
ficomps
jno
out
jmp
inc
mov
lea
lds
and
and
fistps
fadds
xor
pop
insb
loop
shl
cmp
popf
in
xchg
out
push
jns
pop
test
and
mov
and
stos
scas
pop
add
into
push
add
dec
adc
lret
inc
sti
cmp
enter
pop
jge
lds
in
cmp
jp
cmc
rclb
jecxz
sbb
pop
pop
push
mov
lock
test
jmp
divl
cmp
dec
aas
xor
lods
push
inc
xor
pusha
nopl
jno
ds
int3
mov
lock
push
fadd
call
adcl
sbb
push
and
jno
sti
jle
enter
or
stos
into
lahf
push
test
shrl
jnp
sar
pop
sarb
xchg
sub
jae
jg
mov
inc
dec
sbb
dec
adc
fstps
and
dec
push
and
mov
iret
out
and
ret
lods
jmp
loopne
cli
ljmp
popf
mov
mov
or
push
imul
shrl
fs
aam
test
and
pusha
lock
stc
arpl
xchg
xchg
adc
pushl
stc
cmp
cmp
pop
xchg
jne
into
push
sbb
cmpb
mov
adc
jp
and
mov
aaa
test
cli
outsl
sub
sbb
jbe
mov
mov
push
cmpsb
call
mov
adc
and
dec
pop
add
call
in
imul
inc
repz
jle
mov
mov
mov
aad
mov
cwtl
and
shlb
xchg
enter
sbb
push
sub
dec
icebp
inc
imulb
xor
je
inc
loope
jecxz
cltd
es
adc
icebp
rclb
xor
iret
push
hlt
sbb
rorl
and
cmpsl
aaa
mov
mov
push
dec
cltd
sbbb
xchg
add
cs
leave
mov
pop
je
adc
test
pop
loope
cmpb
idivl
out
or
pop
jg
incb
sub
pop
sti
das
outsl
addr16
xchg
mov
shrl
mov
fcmovnb
mov
insb
mov
mov
xchg
jno
xor
aad
es
xor
push
adc
sbb
push
mov
outsl
jnp
jmp
push
cmpsl
mov
out
lds
movb
clc
jbe
lret
mov
jmp
or
subb
and
jb
inc
sub
adc
std
aas
aad
add
add
xor
cwtl
sarl
cmpb
mov
cmpl
push
stos
or
shl
add
lahf
nop
or
and
push
iret
insb
and
in
inc
lods
fstl
insb
fistl
cs
lods
popa
sti
and
dec
pop
add
insw
mov
xlat
movsb
mov
pop
cli
or
cmp
test
push
push
sub
jge
aas
mov
out
fcoms
pop
inc
arpl
xor
aaa
jge
dec
popa
movsl
int3
sbb
pop
rcr
call
rcrl
aam
sub
cmp
cld
fs
ja
push
je
pop
ja
pop
imul
xchg
ret
add
scas
cmp
push
xlat
inc
xchg
loopne
cmp
sbb
test
jb
bound
push
aam
repz
adc
cmp
jbe
test
xchg
int3
mov
ret
repnz
lahf
jg
hlt
aam
mov
dec
mov
adc
negl
fildl
jl
inc
dec
dec
pop
hlt
mov
lds
int3
sbb
mov
mov
mov
test
jge
jb
xorl
pop
stos
stc
loop
call
lret
push
inc
pop
ja
mov
mov
mov
dec
in
jl
mov
mov
jb
imul
call
add
nop
or
sti
and
or
jno
out
xor
dec
pop
and
int3
and
out
scas
cld
pop
ss
mov
shlb
fwait
xchg
and
add
inc
pop
sub
push
sbbl
mov
mov
sub
or
mov
xchg
in
outsb
jbe
lret
inc
je
xorb
cmp
incl
lea
ret
push
or
test
into
mov
mov
mov
xor
add
or
pop
cmpsb
outsl
pmaddwd
mov
dec
mov
mov
mov
jecxz
adc
cmp
insb
pop
adcl
sub
sub
call
pop
enter
iret
bound
push
das
xor
std
mov
outsb
mov
mov
mov
aaa
jecxz
ret
fisttps
daa
popa
scas
jl
test
xor
lods
push
jbe
add
cmp
push
fistps
into
imul
lret
mov
subl
sti
mov
fsub
fbstp
arpl
sahf
adc
push
jne
int3
push
and
idiv
xchg
das
pop
pop
pushf
jnp
movl
aam
cmp
push
lcall
add
xchg
mov
jmp
cmp
dec
shrb
jmp
xchg
cmp
sbb
adc
ficoms
mov
cmp
fsts
mov
push
mov
rorb
cmp
hlt
inc
and
mov
lods
enter
hlt
pop
push
ja
push
daa
sub
pop
mov
ffree
add
imulb
mov
cli
mov
stos
xchg
fistpll
jle
mov
push
out
mov
dec
push
cmp
add
mov
mov
gs
xchg
xor
lds
jae
std
xchg
pop
mov
mov
test
mov
int
or
lods
lahf
pop
outsb
int3
in
insl
xchg
notl
hlt
adc
lcall
pop
xchg
or
jne
mov
mov
stos
or
addr16
out
out
out
mov
shlb
rcrl
push
or
push
or
mov
push
adc
fsubr
aad
clc
adc
sahf
jp
jbe
lret
ret
adc
jbe
lds
jbe
pushf
mov
mov
mov
jb
out
push
imul
cmp
dec
in
aas
imul
dec
dec
mov
adc
jge
lea
mov
sub
cmp
jns
shrb
leave
mov
mov
push
push
and
or
push
scas
add
xadd
xchg
xchg
jns
sbb
ja
in
mov
cld
inc
cmp
sti
push
ljmp
popf
pop
dec
test
insl
mov
lea
adc
mov
andb
mov
fmuls
popa
lods
inc
mov
mov
data16
inc
xor
xchg
jmp
lds
fistpll
sbb
mov
lds
sarl
sbbl
pop
add
dec
lds
sbb
mov
stos
fs
aas
ret
fcoms
out
jg
sarb
enter
movsb
cwtl
cmp
imul
loop
pop
mov
call
push
pop
sbb
insl
cwtl
jp
or
fwait
push
mov
xor
fildll
outsl
jecxz
shlb
mov
push
lcall
mov
call
jno
lret
adc
adc
enter
imul
pop
push
xchg
imul
inc
hlt
daa
or
jl
mov
or
mov
mov
sub
outsl
lcall
and
sbbb
xchg
daa
sub
jns
addr16
pop
cmp
sub
std
data16
orl
and
dec
pop
out
xchg
arpl
mov
in
push
repnz
sbbb
pop
pop
sarl
test
adc
add
scas
test
push
dec
mov
mov
cld
cs
or
movsl
rcll
pop
dec
jecxz
push
mov
mov
mov
sub
push
fmull
arpl
or
add
sti
dec
sti
daa
xor
mov
nop
leave
shll
shr
mov
nop
es
adc
jns
jno
iret
inc
test
addb
pop
nop
movsb
stos
cmp
cmp
hlt
movsb
cmpsb
push
rolb
sbb
add
xchg
test
sub
out
popf
in
and
leave
pop
dec
bound
adc
push
jnp
fmul
lds
and
or
xor
outsb
xor
test
inc
add
pop
stc
mov
ljmp
mov
test
jno
xor
test
dec
lret
enter
mov
into
push
mov
nop
dec
bound
into
mov
aas
mov
jb
lret
xchg
add
hlt
dec
test
jne
and
sbb
in
sbb
mov
mov
movsb
mov
dec
adc
xor
push
xor
js
or
pushf
scas
aaa
jg
inc
cwtl
mov
jo
inc
cmp
mov
and
aam
add
xchg
fistpl
sarl
ret
lahf
cs
mov
sbb
add
stos
cmp
repnz
adc
and
out
or
fimuls
movsb
jecxz
bound
mov
mov
inc
jne
push
dec
dec
cs
inc
xchg
add
xor
jle,pt
jle
out
pop
jecxz
and
inc
nop
cmp
arpl
in
sbb
jmp
mov
out
pop
lea
stos
inc
add
addr16
ret
pusha
xchg
sub
bound
fs
mov
jle
lods
sbbb
and
cwtl
xchg
push
hlt
sub
sub
lahf
subl
sbb
imul
lahf
loope
pop
fs
xchg
sbb
xor
and
out
sbb
jo
inc
adc
inc
jae
stos
flds
dec
fcmovbe
popl
into
gs
cld
jp
cmp
repz
xor
cmpsb
adc
out
push
lcall
add
jg
fisubs
in
adc
xlat
dec
ret
ljmp
add
movb
shll
nop
aad
push
mov
daa
mov
inc
fbstp
xor
ret
dec
push
movsb
rclb
test
cmpb
mov
jno
mov
push
mov
cmp
xor
movsb
jne
cmpsb
mov
jae
fldl
mov
sub
push
daa
cmp
out
sub
xchg
scas
push
fdivrs
in
sbb
fwait
xor
xor
movsb
jp
add
sbb
sahf
das
xor
mov
stc
cli
clc
mov
mov
aam
xchg
jo
insl
xchg
xchg
in
xor
nop
cld
outsb
and
mov
adc
in
jnp
lock
adc
iret
push
adc
test
lock
divl
sub
dec
push
daa
dec
popa
jg
and
push
xchg
loope
test
mov
into
into
addr16
jg
stos
popa
push
stc
jmp
aaa
xor
dec
movsl
cmpsb
jb
sub
dec
fadds
out
xchg
rcll
dec
pop
les
imul
popf
stos
stos
andl
mov
andb
pop
push
add
jge
inc
ja
jb
push
into
sarb
stc
lock
mov
repz
jno
dec
ljmp
out
test
loop
xor
xor
cmpsb
es
add
pop
fisttpl
leave
or
lret
add
leave
pushf
push
jo
pushf
or
mov
push
dec
repz
sbb
lods
dec
ror
dec
test
out
push
add
mov
aaa
mov
dec
pusha
xchg
fbld
jl
dec
movsl
or
mov
in
mov
mov
xchg
pxor
leave
jg
jb
dec
gs
adc
icebp
scas
cmp
int
shr
mov
mov
sbb
jns
dec
xchg
fbstp
jno
jg
ret
mov
mov
sub
test
test
mov
test
add
ds
iret
push
xchg
sbb
mov
in
xchg
push
fists
adc
mov
cmp
in
cld
iret
xchg
ret
call
incl
lea
xchg
inc
leave
je
push
inc
loop
dec
mov
jo
sub
imul
cmp
insb
mov
xor
inc
dec
lret
sahf
dec
mov
pop
test
cmp
push
clc
or
std
out
divl
xchg
nop
push
mov
pusha
cmpsb
adc
lock
xchg
icebp
cmp
daa
repnz
loope
test
outsb
divb
stc
repnz
sarl
cltd
jl
push
fsubl
adc
push
test
adcl
mov
sub
and
cmp
xor
pop
in
mov
dec
jne
jae
popa
pop
lds
cmpsl
pop
fs
cli
fstpt
xlat
repnz
xor
out
inc
xchg
pop
lret
push
fsubrs
jne
int
adc
ret
push
cmp
inc
ds
lcall
outsb
insl
fldt
push
cmpsb
fidivrs
pop
gs
sub
mov
dec
bound
xchg
enter
sub
call
loope
push
data16
mov
jecxz
es
enter
icebp
mov
adc
andl
push
pop
inc
loope
cmp
das
sub
jb
nop
pop
inc
in
shl
ret
xor
shrl
xor
ret
jecxz
aam
hlt
jns
add
mov
cmp
mov
jle
in
xchg
jbe
lret
lahf
cmc
cltd
inc
pop
pop
sbb
inc
in
mov
lahf
faddl
aaa
adc
jnp
and
cmp
int
mov
std
repnz
sub
mov
out
sbb
outsb
lods
cmc
xchg
add
or
ror
arpl
outsl
sub
push
rcll
push
inc
sbb
mov
cld
mov
loope
jbe
pop
add
push
imul
lds
lahf
imul
jbe
pusha
push
clc
mov
cmp
cs
inc
das
adc
out
fnstenv
es
cmp
out
jmp
pop
add
jno
sbb
sbb
mov
ja
xchg
push
pop
push
mov
jb
jne
lret
sub
fsubs
rcrb
repz
shrb
mov
adc
enter
mov
iret
cmp
mov
je
xor
in
mov
add
mov
pop
ud1
mov
pop
dec
push
loope
push
lahf
enter
dec
sbb
adc
mov
cwtl
shr
xchg
jne
scas
sbb
test
dec
mov
jne
gs
sbb
rclb
or
fisttpll
shl
movsb
jo
adc
or
mov
jae
jg
xor
aaa
repnz
dec
xor
or
xchg
add
jns
add
out
inc
mov
jge
pop
fcompl
aad
insl
mov
in
into
xor
loopne
movsl
mov
loopne
add
xchg
fs
ret
mov
neg
data16
pop
fsubrs
les
lret
leave
loopne
cmp
xchg
int
pop
pushf
fisttpll
in
int3
pop
mov
icebp
fdiv
insl
rcll
popf
add
test
test
mov
jo
fistl
ljmp
fistpll
jg
pop
mov
add
jno
hlt
push
or
adc
imul
xchg
lcall
shrb
inc
pop
sub
push
adc
pop
cmp
scas
mov
scas
jo
aas
push
jnp
pop
lahf
sub
jno
mov
push
inc
or
int
pushf
mov
enter
sub
dec
xor
xchg
out
jae
push
cmpb
insl
movsl
lods
movsl
aad
les
inc
dec
mov
popa
nop
jg
lods
inc
test
inc
fcomps
dec
xchg
adc
mov
dec
push
fnsave
subb
mov
iret
push
idivl
es
incb
adc
xchg
fsubrs
es
push
in
sub
mov
ret
lds
adc
jl
in
enter
push
popf
fmull
jg
inc
sarb
insb
or
je
fcompl
ret
mov
insb
jo
mov
sub
adc
mov
mov
shr
std
sub
in
pop
fnstenv
inc
loope
movsl
lea
stos
mov
pushf
mov
dec
xchg
xor
movsl
sbb
orb
call
dec
mov
aad
jbe
dec
test
scas
scas
inc
scas
adc
add
lcall
adc
adcb
out
inc
fmuls
jnp
lret
inc
jbe
shrb
popa
loop
mov
imul
lahf
cwtl
cmp
sub
int
or
cs
cmc
subl
xchg
push
leave
cmp
gs
mov
leave
adc
ljmpw
push
sbb
mov
scas
pop
sbb
dec
out
cmpb
add
mov
xchg
jo
insl
in
loop
push
stos
mulb
pop
add
mov
xor
jmp
mov
loop
dec
inc
movsb
shl
aam
mov
popa
xlat
data16
xor
pusha
cltd
mov
jg
cmp
ret
fisubrs
daa
pop
add
mov
and
std
and
in
leave
sub
sbb
pop
sbb
xor
and
adc
xchg
test
test
xchg
xor
les
xorl
pop
jbe
xchg
test
push
cmpsb
popa
push
lret
lahf
and
dec
add
lods
outsb
xchg
jnp
fimull
loope
xor
adc
mov
jbe
pop
aaa
cmpsb
jnp
mov
or
xor
and
test
lcall
or
rol
and
cwtl
and
dec
incl
inc
fbstp
imul
jp
mov
leave
out
rcll
sub
aaa
stos
push
ret
sub
lds
lcall
dec
inc
jmp
aaa
leave
lcall
adc
out
adc
out
ds
xchg
jmp
lcall
cmp
popa
adc
arpl
xchg
pop
pop
xchg
aad
mov
leave
mov
fidivl
xlat
adcl
ss
arpl
push
lods
inc
addr16
and
xchg
push
push
and
inc
sub
loopne
push
pop
clc
cmp
xor
sbbl
xchg
inc
dec
lock
xchg
ss
xor
cld
dec
xor
out
sub
xchg
pop
iret
push
test
pop
xor
cmpsl
out
sub
fisttpl
pusha
sbb
adc
jno
loopne
stc
pop
pop
sub
sbb
loope
outsb
mov
fs
inc
ficompl
inc
daa
neg
sarb
jbe
lret
adc
add
push
push
adc
cltd
lcall
jmp
or
pop
xorb
jnp
leave
outsl
lahf
dec
mov
fdivrl
xor
push
lcall
aam
insb
adc
daa
shl
jmp
cmp
jno
das
jl
jbe
stos
stos
loope
and
jbe
fcom
lock
pop
nop
jne
out
and
mov
std
std
xor
mov
cs
leave
roll
hlt
xor
mov
mov
cmc
jge
push
fwait
popf
lock
or
cs
faddl
xor
stc
enter
push
xchg
jecxz
cmc
lock
jae
inc
jns
leave
and
hlt
test
rol
lock
cmpsb
xlat
dec
push
add
cmpsl
aaa
push
scas
xorb
jbe
stc
pop
mov
cwtl
ret
repz
loop
mov
inc
inc
std
xor
out
mov
or
push
xor
movsb
out
sarb
add
mov
iret
jbe
push
scas
mov
outsb
dec
imul
adcb
mov
pop
xchg
sbb
aaa
sbb
insb
call
ret
sahf
mov
decl
xchg
push
notl
data16
pop
iret
dec
jne
adc
loopne
inc
ss
or
faddp
pushf
out
adcl
ljmp
pop
pop
lcall
pop
loopne
xchg
or
das
jmp
adc
rcrl
xchg
enter
fwait
jne
sub
fnsave
jle
arpl
jo
sbb
xor
xchg
shll
cmpsb
aaa
loopne
sub
pop
inc
stos
test
jno
stos
inc
cmc
cmp
or
lcall
lea
fisubrs
inc
cmpsl
test
sahf
jns
hlt
push
xchg
adc
imul
ss
add
loop
adc
in
mov
xlat
call
sti
dec
or
imul
lcall
mov
fidivrs
xchg
mov
jp
ret
cmc
pop
adc
xlat
add
fdivrp
leave
mov
pop
sub
push
adc
dec
dec
jge
outsb
ret
push
js
lds
or
or
mov
rorb
push
clc
insb
or
sub
mov
in
loopne
jns
add
mov
and
fsubrs
and
jo
data16
mov
lahf
sti
dec
clc
xchg
rcll
dec
rol
jns
movsl
insl
inc
pop
mulb
dec
cmc
popa
push
sub
hlt
repnz
jne
mov
jne
mov
aam
test
scas
into
call
inc
mov
sbb
sub
sbb
outsl
je
pop
arpl
jge
jle
mov
mov
push
hlt
inc
shlb
insb
repnz
and
mov
jnp
sbb
mov
and
jbe
sarl
push
sub
mov
inc
adc
lock
or
cltd
stos
aad
stos
push
call
mov
mov
cmp
push
inc
or
sbb
mov
loopne
popf
int
xchg
sub
push
inc
ror
jmp
push
inc
inc
rcrl
imul
adc
pop
xorl
je
repz
mov
push
mov
fucomip
pop
add
push
fcoms
mov
sbbl
adcb
iret
loopne
jb
cmpsb
addr16
pushf
inc
and
sub
or
addb
loop
fs
push
int3
mov
push
jle
orl
lcall
addr16
idiv
leave
sbb
movsb
inc
test
negb
fsubrs
outsb
scas
push
adc
je
in
loope
arpl
xchg
add
add
lret
fs
rclb
mov
fistpll
mov
cmpsl
push
addb
inc
sub
pmulhuw
pop
mov
mov
mov
stos
adc
mov
in
sbb
lea
cli
adc
and
mulb
xor
call
stc
mov
stos
fwait
sarl
out
mov
enter
les
cmpsb
hlt
cmp
insb
sbb
gs
inc
jnp
cmpb
lret
std
and
xlat
mov
inc
popa
add
ror
insb
and
movsb
imul
mov
andb
sub
push
pop
lret
mov
popf
jg
lods
jg
or
out
or
movsl
addr16
and
cmp
je
test
pop
adc
mov
jno
fdiv
mov
das
sti
lret
jnp
dec
je
in
pusha
dec
push
das
or
jmp
lods
test
rorb
fldcw
jge
enter
negl
xor
push
mov
negb
mov
arpl
lret
and
rclb
inc
xchg
mulb
mov
and
lods
test
jbe
lods
jbe
lret
dec
fsubrl
mov
xchg
and
arpl
ljmp
std
mov
lds
shrb
ljmp
shlb
cmp
sti
push
push
pop
in
pushf
xor
or
dec
sbb
push
arpl
fnstcw
lods
hlt
or
imul
aam
insb
test
dec
lods
mov
xchg
jne
add
outsl
fs
adc
adc
cmp
cmc
out
pop
push
xchg
jle
mov
popf
push
call
test
xchg
arpl
or
sub
cltd
cltd
dec
jae
mov
jecxz
fldl
test
mov
mov
jb
pop
mov
or
add
test
shl
adc
rcll
jle
mov
mov
ja
aam
push
daa
ja
fs
mov
shrb
pop
xor
cmc
mov
test
inc
inc
popf
add
rcl
call
imul
out
imul
aam
lea
in
inc
push
jl
pusha
movb
jmp
aad
fbstp
ret
call
roll
cmp
sti
dec
sti
mov
and
dec
mov
sub
pop
dec
mov
push
sub
fisttpl
fisubrl
mov
test
lret
dec
out
xor
ss
test
dec
mov
pushf
in
sub
icebp
scas
shll
xor
push
mov
jl
adc
scas
push
mov
repnz
aam
fnstsw
mov
cld
mov
mov
aam
cmp
rclb
mov
xchg
sbb
outsb
cmp
or
or
add
adc
fisubrs
dec
mov
sub
or
dec
jbe
sbb
pop
nop
cwtl
loop
jbe
inc
sbb
jp
arpl
testl
adc
sahf
lret
mov
dec
pop
aas
in
sbb
xor
xchg
inc
adc
je
sahf
or
lea
out
nop
mov
jecxz
pop
pop
stos
and
out
jge
sub
pop
mov
into
mov
enter
jmp
fnsave
rcrl
out
add
mov
int
cli
in
push
loop
sub
cmpsl
inc
call
pop
loopne
into
sbb
scas
sbb
insl
mov
pop
in
insb
inc
cwtl
je
push
add
add
mov
sub
add
mov
mov
mov
fmul
xchg
test
add
lahf
mov
xchg
sbb
pop
je
test
lcall
push
ljmp
outsl
cmpps
gs
ficoml
push
xorb
mov
pusha
dec
pop
mov
pop
negl
andb
jge
xchg
in
jo
sbb
or
inc
ja
jg
repz
or
push
sbbb
mov
push
pop
pushf
lret
dec
xchg
push
cld
cmpsl
sarb
lods
jo
sbb
fadds
sbb
dec
ret
push
mov
ds
mov
repnz
movl
push
mov
shr
cmp
sbb
and
xchg
lods
push
mov
push
and
dec
pop
mov
jecxz
inc
push
repz
jb
fdivl
sub
add
lods
shll
mov
pushf
aad
xlat
fwait
outsb
xchg
imul
xor
ljmp
cmp
pusha
fidivrl
or
and
fwait
lret
mov
leave
or
sub
ret
addr16
adc
imul
adc
ljmp
dec
test
xchg
gs
aaa
les
push
lods
pop
and
add
xor
sbb
inc
imul
std
cmpsb
dec
mov
jo
inc
ret
xor
rolb
lods
les
add
je
fidivs
xchg
xor
pusha
mov
pop
jae
or
fdivrs
aad
aas
xor
mov
lock
fdivrs
mov
and
out
movb
push
stos
pop
cmpl
mov
icebp
js
lahf
faddl
xor
int
add
pusha
cmp
ljmp
sub
sbb
push
mov
shll
push
mov
cmp
sbb
jb
or
je
push
jae
mov
cmp
cwtl
mov
xorb
push
mov
enter
xchg
cmpsl
mov
cmp
pop
cmpsl
mov
loope
iret
ss
loopne
sbb
push
aaa
cwtl
jmp
js
enter
out
test
loope
sahf
jmp
sarl
dec
es
or
jno
xor
jmp
add
pop
sub
cmpsb
fidivs
pop
fcomi
sbb
ljmp
mov
sbb
cmpsb
xorl
es
sarb
int3
call
fdivrl
cmc
mov
cmp
mov
cmp
outsl
add
aaa
mov
shl
inc
inc
jo
testb
cmp
mov
cli
dec
sbb
adc
inc
insl
shrb
lock
sti
lods
dec
fisubs
mov
das
repnz
leave
jne
jno
mov
mov
push
arpl
movsl
test
fs
outsl
lock
jno
add
jb
lds
push
out
inc
push
inc
repz
daa
prefetch
lcall
stc
jbe
gs
sub
mov
cmp
sub
sbb
mov
and
outsb
jo
orb
xchg
xor
test
cmp
jno
mov
jl
xchg
jmp
xor
movsl
stos
sub
push
push
loopne
stos
sbb
leave
iret
xor
jbe
jmp
cmp
loopne
xchg
cmp
jae
adc
jns
in
outsb
jmp
gs
sti
pop
neg
mov
push
push
sbb
push
xlat
xor
aas
sub
jecxz
movsl
scas
fs
pop
je
sbbb
fisubs
lds
inc
or
push
inc
fisubrs
push
lret
pop
hlt
andb
pop
add
mov
outsl
addr16
rcll
les
cmp
or
lods
into
inc
pop
jae
imul
adc
cltd
shr
sub
cmpl
cmpsl
sti
xor
xchg
int3
movsb
into
test
test
in
push
fidivrs
in
xor
or
add
clc
xchg
sub
movsb
cmpsl
fs
dec
je
call
imull
mov
pop
add
lcall
lods
in
mov
stos
sub
repz
cmpsl
mov
push
add
xchg
in
lds
fnsave
push
sub
or
repnz
rorl
sbb
mov
cmp
push
out
jg
lahf
cmpsl
fistps
or
or
lds
or
iret
or
xchg
loope
inc
shlb
sub
ss
fwait
in
and
sarb
jge
xor
sub
loop
xchg
arpl
mov
fs
popf
shll
dec
mov
pop
adc
dec
pop
stos
jg
cmp
int3
push
pop
in
mov
ja
dec
sahf
pop
out
movsl
jne
sub
dec
orb
dec
mov
xor
sbb
int
data16
pop
fmull
jge
pop
sub
js
or
ds
fsubr
sarl
fwait
shlb
mov
scas
jnp
push
mov
ret
jns
add
inc
jle
lds
sub
xor
rcll
mov
xor
rclb
cmpl
pop
pop
in
cmpsb
je
cmp
jo
dec
dec
adc
shll
test
dec
clc
rcrl
xlat
pop
loop
js
mov
outsl
js
insb
clc
gs
in
enter
pusha
insb
movsb
add
and
pop
xchg
sbb
mov
pusha
sub
jecxz
sti
sbbb
and
dec
jns
mov
dec
int3
vcvtss2sd
push
stos
imul
js
mov
fneni(8087
xor
and
or
loop
in
mov
and
fcomi
fbstp
cs
lret
push
push
adc
rcrl
mov
rolb
mov
int
dec
fsubl
mov
sbb
lret
xor
mov
in
sbb
sub
iret
add
test
sbb
push
mov
jnp
fsts
cs
inc
push
mov
push
cmp
testl
pop
ja
inc
pop
pop
mov
mov
add
adcl
dec
mov
sub
xchg
mov
push
in
sub
jle
sti
ja
arpl
pop
loopne
or
adcb
sarb
out
inc
add
test
inc
movsl
push
pop
xor
pop
in
dec
mov
fimull
dec
push
mov
dec
dec
jnp
in
sbb
in
test
cmp
sahf
cwtl
dec
jbe
in
mov
sbb
xchg
ja
cwtl
adc
jmp
or
inc
loop
stc
mov
xor
and
inc
mov
leave
insb
mov
lcall
xor
pop
xchg
cli
and
sub
cld
mov
shr
push
shrl
dec
test
xor
mov
mov
xlat
lock
cmp
add
punpckhwd
add
js
cmp
cmpsl
pop
add
aam
push
mov
lcall
add
sub
inc
inc
sbb
add
bound
mov
orl
push
inc
loopne
scas
icebp
sub
outsb
sub
js
dec
popf
fwait
insb
cmp
add
outsl
aas
jecxz
sbb
xchg
ss
sbb
nop
sti
hlt
loopne
inc
xchg
push
dec
mov
lcall
xchg
xor
cmpsl
sub
xchg
rcrl
sbb
mov
mov
mov
popa
add
lahf
push
xchg
aaa
mov
mov
lret
add
out
leave
pop
lret
mov
aam
adc
add
sti
add
xor
cmp
mov
orl
lods
mov
jno
push
lods
dec
jbe
pop
xchg
movsb
mov
fisubrs
lahf
push
mov
jne
loop
push
std
pop
inc
pop
rolb
jb
add
push
fwait
sub
cmc
fcompl
jno
jecxz
inc
clc
push
mov
in
repz
rclb
xor
lods
cli
iret
mov
jmp
incb
mov
mov
xor
pop
sti
fldl
add
sar
iret
fcoms
cld
ret
add
xchg
pushf
test
icebp
out
or
in
std
imul
cwtl
imul
lds
insl
mov
sub
cmp
lahf
movsl
add
data16
push
mov
sbb
dec
fisttps
insl
sbb
mov
iret
lds
mov
and
xor
scas
in
dec
in
cmp
push
mov
adc
adc
dec
ja
cmp
mov
loopne
cmp
sub
dec
push
jne
sbb
sbb
sub
data16
mov
in
mov
data16
sti
xchg
or
dec
pop
jae,pt
mov
mov
lahf
mov
inc
lcall
mov
push
cli
and
mov
notb
test
mov
jp
adc
sub
es
inc
or
js
data16
and
sub
adc
lock
in
pop
shrl
insl
ret
mov
push
sub
and
inc
dec
lcall
sbb
jmp
adc
into
scas
adc
mov
xchg
sbb
sub
out
push
push
pop
scas
hlt
fcmovne
pop
les
das
jno
ficompl
pop
popa
mov
cld
cmp
movsb
roll
rcll
fdivs
mov
lahf
pop
enter
inc
fistl
push
xchg
push
mov
lahf
es
and
leave
bound
lret
add
scas
mov
popf
or
mov
pushf
dec
cld
addr16
fcoml
push
pushf
icebp
movsb
jo
lahf
loop
aaa
mov
hlt
cmp
lock
ss
insl
sbb
popf
inc
mov
cmc
cmpsl
jmp
cwtl
bound
sub
pop
fdiv
mov
xchg
inc
or
fisubl
push
add
sbb
in
jo
jecxz
decl
mov
enter
xchg
pusha
inc
xor
push
iret
loope
xchg
dec
lcall
inc
xchg
cmp
shr
in
ss
je
lods
and
sti
inc
cmpsb
jns
std
push
pop
cmp
and
mov
inc
bswap
and
cmp
clc
out
imul
outsl
add
in
mov
dec
call
push
inc
clc
fdivrl
je
mov
mov
xchg
dec
xchg
out
jb
inc
and
xor
xor
in
xor
and
addr16
fnstcw
test
outsl
stc
arpl
rcll
push
xor
lea
xchg
cs
xchg
mov
dec
cmp
call
xor
movsl
pop
mov
push
jnp
mov
inc
and
ds
xchg
std
cmp
xorl
sub
into
cs
iret
add
stc
push
in
fcoml
cmpb
adc
sbbb
cmp
cmp
jne
fdivs
xor
iret
arpl
and
push
lds
inc
lods
mov
pop
subl
sbbb
outsl
or
into
jno
lahf
mov
mov
mov
mov
xchg
xchg
ret
mov
dec
dec
inc
pop
gs
jnp
jne
test
aaa
sub
in
inc
lcall
and
ja
aam
popa
orb
inc
std
aas
ds
inc
or
or
lcall
dec
jle
out
pop
call
mov
jecxz
sbbb
add
sub
jp
enter
call
jge
jb
xchg
jae
fmull
mov
cwtl
and
inc
mov
cltd
mov
cs
stc
hlt
lea
lods
pop
mov
sub
jp
inc
xchg
mov
les
popf
repz
lret
in
sbb
push
pusha
ja
js
les
mov
pop
out
and
jg
add
pop
sub
daa
cmp
rcll
push
or
cld
xor
dec
inc
mov
out
or
jo
pop
fwait
lret
push
inc
pop
icebp
popa
add
add
in
inc
mov
dec
sub
jb
hlt
jl
leave
stc
or
fsubs
pop
inc
mov
xor
jns
popa
add
or
ret
stos
lret
xor
cmpsl
and
add
sti
jmp
adc
pop
fsubs
test
jmp
lods
xchg
int3
mov
cmpsl
aas
pop
iret
xchg
jb
in
mov
sub
out
mov
cli
and
popf
icebp
sar
mov
cmp
push
insl
fidivl
mov
sbb
popf
cltd
cmp
adc
into
push
add
jge
mov
gs
xchg
pop
ret
pop
mov
movsb
fdivp
icebp
push
fsubrl
sarb
fcmovb
sub
xor
mov
mov
mov
xchg
sti
mov
enter
pop
cmp
jo
into
fbld
aad
notl
add
int
in
inc
ret
fsubrl
ret
pop
sub
xlat
scas
sub
pusha
sbb
sbb
mov
mov
pop
mov
xor
pop
cltd
test
push
iret
sbb
pop
pop
das
mov
filds
insb
das
or
add
mov
sbb
jecxz
fnsave
xchg
cltd
je
stc
dec
xchg
jl
push
cs
loopne
or
andl
jmp
mov
dec
push
lcall
xchg
fstps
jno
insb
es
mov
sbb
and
mov
movsb
mov
clc
xlat
or
movsl
mov
movb
incb
ja
adc
loop
xorb
stos
into
cmp
imul
cmp
adc
sbb
push
stos
cmc
and
adc
jae
gs
cs
and
out
gs
sarb
jmp
sub
stc
push
xchg
pop
out
pop
iret
in
push
adc
mov
add
arpl
dec
or
xchg
adc
popf
stos
mov
cwtl
mov
jb
pop
push
test
jnp
mov
out
sbb
mov
stos
push
xor
inc
xchg
add
aaa
out
mov
test
popa
and
hlt
mov
test
mov
enter
ds
cmp
mov
ss
adc
xor
pop
decl
out
testb
push
sbb
lcall
xlat
sbb
insl
mov
adc
push
mov
and
add
cld
pop
sbb
aas
stc
jg
fsubr
pop
sbb
shll
fcmovnbe
fidivrl
mov
arpl
rcl
push
filds
adc
out
jbe
loop
add
out
cmc
insl
stc
or
or
mov
in
add
aam
jb
adc
dec
and
cwtl
pusha
jb
push
fnstsw
pop
sub
stos
loope
inc
adc
stos
sub
jae
cmp
lock
fs
sbb
pop
ret
inc
pushf
imul
jo
pushf
fimuls
xor
cmp
divb
inc
in
mov
mov
lock
fistpl
gs
lods
add
dec
jne
cmpl
cmp
fisubrs
fmuls
dec
daa
cmp
and
addr16
add
cmpsl
mov
aam
xchg
mov
mov
adc
dec
mov
jmp
arpl
or
int3
pop
mov
add
out
dec
adc
xor
pop
cmp
and
xlat
and
ljmp
jbe
xchg
testl
sar
pop
cmp
push
fadd
mov
mov
cmpsl
adc
addr16
push
mov
ret
aas
add
and
mov
jecxz
int
arpl
fldl
int
mov
ds
out
inc
cwtl
repnz
jbe
mov
int3
sub
out
sbb
lds
sbb
popa
mov
loopne
das
shrb
inc
push
stos
dec
aas
add
add
clc
pop
xchg
lret
sbb
xchg
mov
and
push
repz
inc
movsl
xor
jmp
or
je
jecxz
xchg
lock
add
mov
shll
jg
ret
dec
xchg
in
jecxz
into
cltd
sub
aaa
pop
adc
and
mov
out
andl
mov
insb
jns
leave
adcb
out
movsl
inc
or
loopne
maskmovq
mull
pop
sti
rolb
lcall
fucomi
push
add
cmp
daa
xchg
iret
pop
pushf
dec
loop
mov
fs
add
int3
sub
cwtl
push
idivl
jne
out
ret
dec
ss
jg
fistpl
add
push
push
xor
inc
and
dec
rcrl
fildll
sbb
or
lcall
repz
data16
add
in
mov
jnp
inc
mov
icebp
adc
mov
add
std
sbb
push
fldt
lahf
pop
adc
scas
pop
scas
pop
cmc
cmp
imul
scas
sbb
das
sarb
cmp
test
repz
mov
int
in
popa
sbb
or
std
sti
sbbl
stos
in
inc
or
jg
pop
clc
in
xchg
scas
cmp
loop
jmp
push
lret
in
sbb
lods
and
mov
push
icebp
aam
out
dec
cmpsl
add
into
scas
pop
enter
mov
imul
lock
mov
orl
inc
mov
stos
adc
test
fnstcw
ss
dec
sti
int
cmp
loopne
push
lret
lret
push
addr16
adc
insb
xchg
and
lods
push
xchg
pop
jmp
ds
movsb
pusha
call
lea
pop
jecxz
dec
hlt
and
in
push
cmc
ja
and
sarb
push
lock
lea
mov
add
out
or
fnsave
adc
into
jmp
jb
scas
jno
lock
jp
inc
dec
xchg
pop
pop
mov
mov
inc
push
adc
enter
cmp
xchg
int
aam
icebp
mov
sahf
xor
arpl
popf
neg
cmp
mov
in
jo
mov
pushf
pop
notl
sbb
xor
fstl
les
sbb
mov
mov
outsl
xor
xchg
cmp
push
pop
pop
mov
ss
xor
mov
mov
pop
xor
hlt
mov
insl
xor
fiaddl
inc
test
ds
inc
fsubrp
fmul
mov
jne
ret
sarw
pop
mov
call
div
pusha
xchg
dec
adc
cmp
cmpsb
call
adc
pop
ss
xchg
xor
test
in
jg
mov
addl
dec
lcall
pop
jp
int
sub
in
xchg
lret
cmp
jne
lahf
jb
pop
fsubs
xchg
inc
data16
decb
cmp
test
sub
loopne
mov
cmp
iret
out
mov
into
pop
dec
push
je
cltd
and
lahf
push
and
push
and
jg
in
xchg
cwtl
jp
lahf
insb
mov
cmc
dec
mov
jp
scas
int3
cltd
mov
sahf
std
mov
mov
insl
fimuls
adc
cmp
fiaddl
jl
pushf
test
out
push
loopne
xchg
mov
xor
xor
mov
inc
ret
xor
negb
pop
repnz
dec
mov
xchg
psllw
add
aaa
mov
subl
dec
dec
xor
adc
faddl
mov
std
jl
std
sbb
mov
mov
js
leave
xchg
fldl
movsl
push
scas
or
jno
in
inc
ret
jns
mov
jp
fstpt
push
dec
mov
lods
sub
incb
and
cltd
cmc
pop
lcall
out
outsl
loopne
xchg
pop
push
jecxz
mov
add
cmpsl
adc
sahf
xor
lock
pop
je
jbe
xorb
repnz
or
or
adc
push
adc
sbb
and
jmp
xor
out
adc
out
inc
outsl
dec
sub
lret
cld
xchg
mov
loopne
push
jb
je
rorl
ljmp
mov
repz
lods
jg
loopne
push
jne
iret
push
push
xchg
jno
enter
in
bound
cli
sbb
loopne
icebp
and
arpl
sub
leave
test
out
addr16
std
push
repnz
add
cmp
cmp
sbb
pop
mov
jbe
jb
fnstenv
popf
mov
push
xor
xor
pop
bound
push
inc
stos
frstor
and
mov
std
mov
test
jbe
inc
imul
cs
mov
push
loopne
test
std
sahf
xchg
cmp
sub
xchg
in
cs
lock
shrl
sti
or
mov
add
fldenv
jnp
mov
add
rorb
dec
gs
mov
mov
in
out
cltd
lcall
aad
fadd
add
mov
clc
or
dec
outsl
cmpsb
xor
push
add
jo
xchg
popa
sub
iret
rep
scas
enter
jmp
xchg
inc
and
idivl
pop
adc
push
push
and
xor
ret
add
xchg
pop
jp
leave
lds
aad
pop
aaa
imul
mov
adc
xor
sti
adc
mov
and
adc
mov
out
dec
adc
inc
fs
int
daa
sahf
shl
and
add
ret
jmp
int
sub
sub
xchg
xchg
sarb
stos
add
pop
push
data16
ficoms
inc
loope,pn
mov
les
cvtdq2ps
outsb
cmp
jnp
sarl
scas
xchg
sub
ljmp
mov
add
xchg
jp
mov
pop
pushf
sbb
add
pop
movsb
outsb
or
and
in
xor
ret
shl
sbb
lret
mov
lret
push
xchg
loop
out
mov
pop
xchg
andb
mov
mov
loop
mov
cmp
pop
ficomps
pop
mov
and
ja
sbb
cmpsl
fs
and
sbb
sub
cmp
fwait
orb
das
inc
ret
jp
stos
subl
mov
mov
pop
mov
jp
sbb
sbbl
or
or
pop
movb
in
add
leave
mov
push
push
or
push
mov
mov
mov
ss
das
imulb
xor
sbb
loopne
adc
stos
call
incb
jne
adc
mov
add
rcr
cmp
sub
loope
or
test
js
sti
jnp
mov
hlt
mov
xor
ljmp
pop
in
shl
sbb
jp
insl
sub
lret
xor
aaa
cmp
adc
je
xor
cmc
ret
popa
mov
pop
movsl
mov
or
jnp
push
fdivrl
stos
xchg
ja
xchg
shrb
jnp
fs
sti
sbb
das
fs
adc
cmpl
dec
sarl
adc
adc
jo
adc
pop
fldt
jb
mov
mov
es
fwait
test
pop
enter
clc
push
subl
adc
das
sbb
adc
mov
fsubl
enter
pop
sub
cltd
hlt
add
sub
addr16
out
mov
cmp
sub
fcompl
sbb
jl
repz
jmp
cmovnp
and
xor
add
mov
nop
loope
clc
rcrb
mov
int3
add
and
mov
ret
sbb
push
stos
out
jnp
or
jnp
rorl
dec
mov
mov
aas
cltd
ret
pop
mov
xlat
popf
lods
subl
jbe
inc
into
lods
mov
cmp
inc
popf
dec
mov
push
mov
lods
ljmp
mov
loope
mov
add
arpl
lea
shll
lahf
push
cmp
and
mov
lock
pop
repz
repnz
nop
ljmp
jp
into
xchg
pop
jbe
push
mov
xchg
fsub
mov
dec
stc
xchg
sbb
jecxz
pop
pop
nop
scas
push
xchg
aad
adc
xchg
adc
cmc
mov
adc
out
push
jnp
les
xchg
hlt
mov
pop
pop
push
adc
jmp
cmpsl
cltd
ds
stos
icebp
aam
cmp
in
popf
adc
add
cld
push
mov
pop
jmp
jecxz
repnz
push
sbb
xchg
xor
aas
mov
or
repz
dec
xor
cmp
xor
xorb
je
loope
roll
jge
pop
into
xor
cmp
in
movsl
jae
rclb
sbb
push
rcrb
inc
mov
dec
cmp
pop
mov
push
pop
sti
in
sbb
scas
add
loope
dec
jge
lods
xchg
fwait
mov
or
lock
mov
es
loop
sbbb
rcpps
cmp
lds
inc
lcall
xchg
nop
pop
in
xor
mov
mov
mov
mov
add
cmp
push
ja
stos
andl
sti
add
mov
cmc
cmpsb
enter
cmp
or
dec
jg
test
adcl
mov
arpl
jecxz
mov
cmp
std
sub
ss
sti
jne
stos
and
sbbb
pop
jge
and
mov
jno
jns
adc
lret
iret
xchg
loop
cmp
mov
cmp
mov
fldenv
lret
cltd
adc
mov
insl
dec
pop
add
cs
sub
fcmove
ljmp
push
pop
pop
push
sbb
push
jbe
jbe
xchg
jle
add
clc
add
mulb
mov
js
mov
add
inc
pop
mov
inc
cmp
loope
inc
add
addb
and
sbb
dec
scas
cs
mov
pop
mov
pop
add
shl
fcoms
pop
bnd
outsb
rorl
scas
icebp
and
cvtdq2ps
rorl
mov
out
ja,pn
mov
or
inc
sbb
mov
out
fisttps
xchg
pop
bound
pushf
cs
outsl
cmp
cmc
jb
int3
sbb
push
insl
test
int3
aaa
lds
xorl
pop
les
movsl
js
inc
iret
sub
adc
dec
push
icebp
mov
adc
aas
inc
push
out
daa
addr16
cmp
leave
nop
push
dec
pop
add
jl
xor
call
mov
adc
sbb
mov
xor
jle
gs
je
adc
mov
inc
adcb
repnz
adc
cltd
rcl
lods
push
xor
lock
mov
shlb
cmp
data16
into
fdivrp
push
das
stos
lods
push
sub
shl
test
pop
or
sub
icebp
dec
mov
xchg
mov
sbb
loopne
sarb
aam
mov
sbb
and
cmpsb
ret
setge
or
xchg
movsl
ja
dec
adcb
inc
cli
std
or
bound
fistpll
sub
das
in
stos
repz
ljmp
stos
push
mov
daa
jns
out
ret
mov
push
xor
out
push
clc
loopne
and
push
lret
loop
mov
adc
cmpl
ss
hlt
test
inc
bound
mov
push
mov
push
mull
insb
jae
negb
aam
imul
and
xchg
clc
push
inc
outsl
scas
pop
rorl
jo
nopl
pop
ds
and
or
xlat
cmpsl
popa
or
inc
fisubrl
outsl
fimull
rorl
push
lret
pop
pop
mov
mov
in
sarl
jecxz
rcl
jecxz
jl
rcll
gs
sti
mov
and
js
das
inc
les
mov
lret
and
xor
mov
xchg
data16
xor
dec
es
mov
jmp
popa
push
jg
iret
popa
lds
add
add
mov
adc
ret
ret
dec
scas
mov
cmc
clc
mov
movsb
and
mov
mov
mov
mov
pop
and
repz
push
sar
pusha
pop
lret
mov
cwtl
push
cmp
lods
mov
icebp
icebp
pop
add
mov
xchg
in
add
sbb
push
fadd
lods
int3
mov
nop
mov
inc
pop
sbbb
andb
dec
ljmp
pop
ljmp
filds
aad
orb
xchg
jg
pop
jp
andb
or
pop
adc
jge
sbb
popf
xchg
push
and
mov
push
mov
jp
nop
ja
popa
hlt
loop
call
adc
mov
sar
popa
jno
js
je
xor
xchg
inc
jge
mov
fsubr
jmp
icebp
fsubrs
jp
lock
or
std
dec
adc
pop
addr16
add
inc
sub
sub
call
imul
add
pusha
sbb
loope
shlb
or
jle
mov
mov
jge
push
xchg
cmp
aas
pop
cmpb
out
push
jno
inc
cmp
mov
ret
jo
xor
mov
dec
fimull
fimuls
add
sub
dec
jne
jo
in
mov
repz
pushw
scas
mov
repnz
sbb
pop
test
sub
mov
mov
jnp
mov
fmull
cmpsl
stos
or
inc
xchg
push
mov
push
pop
scas
out
das
and
dec
scas
lcall
cld
inc
or
aaa
int
addr16
adc
stc
jne
fstl
ja
mov
adc
mov
dec
jge
jl
dec
std
mov
sub
inc
jo
rclb
out
loop
enter
jp
int
pop
out
mov
push
mov
push
loope
dec
xchg
and
inc
cmp
enter
stos
ss
pop
cmpsb
es
lods
and
cmpb
inc
cli
fs
inc
aas
or
stos
mov
enter
std
pusha
push
push
or
stos
fwait
pop
sahf
push
push
aad
int3
push
inc
dec
pop
adc
push
dec
cmp
sub
loopne
cmpsl
addr16
cld
mov
fsubrs
lahf
pop
jns
clc
filds
in
mov
mov
imul
xor
cltd
pop
mov
adc
pop
mov
xor
adc
inc
das
int
pop
xor
xorb
shll
ljmp
pushl
out
lret
lret
cmpsl
fdivrs
int
rclb
and
and
and
aaa
outsb
stos
sub
xor
das
sbb
test
cmp
mov
popa
pop
shr
arpl
mov
add
aam
or
xchg
dec
lock
std
pop
aad
push
pushf
popf
mov
pop
inc
imul
sbb
movsl
jl
das
or
movsl
jo
jb
sbb
mov
pusha
loop
push
fcomps
pop
xchg
jge
leave
push
js
out
loope
push
lea
mov
pop
loop
repnz
inc
pop
enter
mov
inc
push
mov
jmp
inc
nop
inc
add
enter
dec
lahf
push
pop
inc
xchg
jl
lahf
xor
xorl
inc
jle
insb
or
xchg
cmpsb
inc
push
cmpsb
neg
cs
jbe
imul
pop
xor
fwait
mov
cmp
mov
in
lret
or
fisubl
mov
mov
les
data16
or
jl
outsl
add
ret
xchg
sbb
hlt
fmul
loop
decl
xor
pop
jl
test
cmc
jmp
dec
push
test
inc
push
sub
insb
jo
push
addr16
std
mov
loope
lock
shlb
sub
add
jns
mov
popf
mov
pop
and
push
jle
add
fxch
testb
arpl
cmp
daa
leave
adc
inc
in
push
inc
mov
inc
movsb
incl
sbb
lock
pop
or
jle
loope
imul
jnp
ja
push
push
inc
mov
cmpsb
loopne
xor
adc
cmp
xchg
test
pop
pop
repz
fdivr
dec
mov
dec
cltd
jne
int3
in
loopne
pop
mov
xor
sub
and
ja
sub
or
add
dec
cwtl
jb
clc
dec
xchg
lahf
and
mov
mov
test
js
pop
inc
jno
aad
pop
mov
out
fwait
arpl
push
movsb
test
jae
push
add
into
fistl
cmp
push
push
sbb
daa
dec
pop
test
jno
push
pop
fbld
stos
pusha
mov
dec
dec
mov
dec
test
adc
inc
cwtl
xor
xchg
pop
or
mov
es
data16
ja
or
hlt
stos
aaa
jp
xor
push
repz
adc
out
inc
push
std
mov
mov
lcall
add
div
test
xor
int
pop
sbb
fxch
dec
gs
fs
dec
xchg
lds
xchg
dec
push
lcall
lods
mov
test
cmpl
loopne
shlb
mov
adc
sub
sbb
in
sbb
cmp
addl
pop
xor
in
ret
xor
jge
cmpsl
ret
mov
aaa
mov
fists
std
mov
xor
repz
shrl
adc
push
jae
add
pop
in
adc
pop
push
fwait
fs
divb
add
xor
repnz
push
adc
movsb
pop
and
insl
rcrl
adc
push
mov
stos
pop
cwtl
or
jge
jg
mov
push
mov
add
inc
lds
adc
aas
aam
dec
jecxz
sbb
bound
daa
inc
cmc
cltd
insb
xchg
and
jb
std
xor
push
popa
sub
push
inc
lret
sub
xchg
sbb
test
sbb
and
mov
mov
into
jg
loopne
push
fucomip
mov
jne
xchg
adc
xchg
push
mov
push
sub
xor
test
leave
cmp
pushf
mov
int
gs
sbb
jbe
aaa
aas
adc
andb
stos
fdivrs
fisubrl
sub
mov
icebp
jo
add
daa
push
cmc
xor
fucom
in
repz
mov
nop
jo
push
cwtl
pop
cwtl
in
add
and
dec
insb
adc
xchg
addr16
xchg
loope
out
in
xor
into
iret
test
lcall
lcall
jae
inc
xor
loope
sbb
nop
mov
and
mov
scas
in
mov
aam
push
pusha
call
mov
add
stos
sbb
in
mov
or
push
push
push
mov
xor
xor
cmp
sub
cmc
mov
aad
scas
shll
mov
ret
cmp
lahf
rcrl
int
inc
mov
movsb
jo
scas
aaa
lcall
jae
in
push
sahf
lea
add
xlat
bnd
cmp
cmp
icebp
push
pusha
es
xor
pop
fst
push
repz
jp
aas
adc
add
jb
xorb
xor
dec
enter
mov
loop
in
aam
int
mov
cmpb
call
push
lods
pop
cmp
out
shrl
jmp
inc
mov
hlt
movsl
ficoml
xchg
mov
xchg
push
fwait
xchg
fdivs
les
pop
mov
int3
cli
sub
mov
cmp
cltd
sarl
and
push
pop
xchg
les
in
and
cmpsb
mov
mov
push
jecxz
std
push
test
pop
repz
fsubrl
aas
push
stos
ret
out
inc
cmpsl
fistl
sub
and
xchg
lods
mov
hlt
push
xor
cmp
idivl
adc
sub
es
pop
dec
xchg
push
mov
xchg
push
lret
ffreep
sub
adc
sbb
cmpsb
std
fstpl
sahf
push
clc
mov
iret
repnz
adc
push
mov
hlt
ret
loopne
mov
roll
insb
xchg
loop
xchg
lods
pop
inc
rorl
push
xor
pushf
gs
out
mov
rorl
lret
sub
mov
mov
sub
xchg
mov
sti
sarl
sarl
mov
or
int3
aam
gs
mov
loopne
mov
mov
sub
jo
enter
cmp
das
bnd
jns
push
pop
pop
addr16
roll
dec
call
dec
in
mov
xchg
sub
xchg
xchg
in
sub
mull
fildll
sbb
mov
out
notl
shrl
push
pop
xlat
iret
jecxz
and
cmpsl
xchg
leave
stos
jl
inc
lahf
in
cltd
lcall
fsubrl
ss
dec
push
and
mov
lods
push
mov
lds
xchg
inc
mov
test
push
arpl
push
jnp
je
jnp
or
mov
popf
inc
test
mov
testb
lret
jns
aad
jge
xorl
mov
repz
pop
fwait
les
aaa
xor
repnz
in
movswl
aaa
sbb
in
jb
or
cmp
xor
and
cmc
add
or
sub
add
idiv
sarb
inc
fsts
imul
mov
int
out
cmc
xchg
sub
xor
fcompl
lahf
lret
sub
shrl
dec
lods
mov
loop
jle
sub
jle
arpl
sub
add
adc
aam
xor
aas
jg
ficomps
addr16
mov
lret
mov
and
das
inc
outsl
pop
cmpsb
cmp
cmp
out
nop
adc
pop
inc
and
adc
mov
mov
rclb
mov
adc
int3
movsw
fistpll
xor
rolw
in
mov
push
pop
icebp
pop
adc
xchg
push
sub
dec
mov
int3
rorb
mov
les
aad
lcall
sbb
jmp
cmpsb
inc
mov
xchg
mov
fucomp
mov
cs
xchg
aas
out
inc
test
sbb
insl
mov
mov
sbb
aad
and
mov
ret
xlat
lcall
and
add
mov
andb
call
les
pop
repz
je
mov
inc
xor
dec
lock
push
jl
push
mov
loope
mov
mov
inc
mov
inc
xchg
mov
fwait
sbb
ret
imul
push
dec
adc
sbb
mov
mov
test
gs
lods
scas
in
push
sbb
aad
mov
mov
repnz
jcxz
pop
push
add
cwtl
inc
test
call
mov
dec
or
sub
cmp
inc
testb
jns
leave
sbb
or
scas
jns
cmp
or
in
pop
dec
sbb
xadd
in
mov
dec
fucomi
in
std
xor
sbb
popa
inc
pop
dec
negl
mov
push
ss
xor
mov
mov
push
or
ljmp
out
test
addr16
fdivrl
push
xor
cmp
adc
dec
cmpsl
xor
pushl
popa
dec
push
push
lock
ds
stos
div
jnp
xchg
arpl
mov
jecxz
cld
popf
xchg
xchg
in
arpl
jo
add
lahf
mov
in
cmpsb
stos
ficoml
cli
mov
test
mov
lods
cmp
andb
jo
mov
into
xchg
stc
sub
ljmp
ret
cmp
in
pop
pop
add
loope
push
push
test
mov
shlb
push
push
fsubrl
jmp
dec
jmp
call
pushf
cs
addl
test
arpl
or
xchg
sub
clc
popf
stc
es
imul
mov
out
jmp
lret
js
pop
std
loop
push
aaa
pop
inc
pop
fidivrs
mov
dec
cli
xchg
std
xlat
jno
fnstsw
jecxz
dec
vdivps
leave
mov
add
ret
leave
or
ret
dec
fs
xchg
mov
rcr
push
rep
cmpsb
mov
lahf
xchg
fldl
mov
pop
cmp
mull
push
popf
out
xchg
push
dec
pop
pop
push
ret
subl
lret
mov
jnp
gs
mov
aas
rcll
adc
in
cmpsb
xor
popf
xchg
ljmp
pop
insb
test
pop
mov
xchg
inc
sbb
pop
add
pusha
mov
dec
fadds
pushf
mov
ds
negb
mov
lret
jmp
enter
int3
mov
jmp
je
int3
sub
add
push
inc
int3
mov
mov
lock
pop
out
sahf
cmp
mov
mov
imul
sub
mov
add
outsl
aad
add
mov
mov
pop
inc
adc
dec
inc
imul
int3
dec
pop
mov
ja
mov
pop
std
cmp
cmp
movl
fwait
sub
dec
sub
aam
int
mov
inc
icebp
orb
inc
xchg
cs
xchg
lcall
aas
aas
xlat
incl
fidivrl
in
insb
lret
push
in
inc
or
hlt
out
xor
scas
lea
ror
push
and
or
xchg
sbb
mov
out
add
push
inc
lds
pop
lea
insb
xor
clc
arpl
push
sbb
lock
or
fistl
stc
xor
lock
out
or
aad
inc
sub
ljmp
xchg
insb
shlb
hlt
xchg
mov
mov
lds
mov
test
in
in
inc
and
add
jecxz
insb
sub
xchg
popf
add
sub
fidivrs
imul
mov
jo
iret
loope
pop
cmp
xchg
rorb
jo
mov
ret
cmp
cwtl
insl
push
std
clc
adc
pop
jmp
ja
cli
test
lock
out
jbe
add
or
call
jl
cmp
test
imul
jge
out
negl
jns
sub
mov
insl
shrb
pop
bound
incl
mov
shrl
sbb
in
ficomps
push
loop
mov
decb
jp
repz
add
jb
jl
into
out
rol
fisubl
das
pop
arpl
inc
daa
xchg
fimuls
pop
push
or
mov
jne
inc
inc
lcall
and
or
pavgb
mov
jg
or
pop
aaa
mov
data16
xchg
cmpsb
fidivrs
mov
les
dec
jns
inc
or
mov
int
pop
and
mov
sub
testb
pop
mov
sbb
aas
dec
xchg
xchg
pop
xor
bnd
aam
dec
add
fsubrs
sub
ja
mov
lods
leave
scas
sbb
call
fnstsw
pop
sub
push
pop
test
fbld
jle
sti
inc
stos
rcll
mov
push
fdecstp
sbb
mov
mov
stos
aaa
sbb
call
out
in
pushf
jge
jl
pop
push
mov
into
mov
sbb
pop
mov
out
loopne
push
cld
decl
mov
imul
sbb
aas
sub
xor
loope
push
push
aas
movsl
dec
lods
dec
mov
xor
add
out
adc
jns
jns
pop
test
inc
mov
push
pop
pop
push
ret
adc
jl
or
pop
lods
xchg
pop
and
fcomip
add
pop
movsl
fdivl
pop
dec
jl
test
stos
call
or
std
cmp
lret
jnp
xor
xchg
jne
insl
inc
jl
fs
loop
lods
push
adc
adc
xor
adc
int
xor
push
in
mov
into
test
orb
xor
adc
cmc
dec
arpl
push
je
xchg
xlat
js
inc
xor
push
dec
leave
cmpsb
daa
mov
fldenv
inc
stos
jge
loope
xor
fisubs
cmpsb
loopne
iret
cmp
fisttpl
out
cs
cmp
shrb
sar
in
mov
sub
sub
mov
sbb
push
jecxz
repnz
shlb
xor
push
adc
sub
ja
fldl
hlt
pop
sti
mov
xchg
sub
fdivrl
inc
dec
inc
loope
roll
sti
rcrb
sbb
mov
aam
mov
push
push
pop
fs
xchg
fdivrl
push
in
es
push
mov
insl
mov
insl
pop
push
in
mov
out
mov
fsubrl
or
xor
dec
out
dec
call
clc
imul
sub
push
jp
gs
nop
ret
cmc
dec
lret
movsb
or
test
jp,pn
dec
dec
push
jp
popa
push
add
mov
out
cmp
js
jmp
jg
clc
mov
mov
addr16
dec
movsbl
jge
movsl
notb
dec
cmpsl
push
xor
add
decl
pusha
mov
jne
xchg
mov
xor
pop
fs
je
add
test
xchg
or
xor
mov
mov
popl
and
ss
aas
adc
paddq
call
cmpl
in
movsl
pop
das
add
sbb
jl
mov
and
jnp
pusha
pop
fimull
mov
aam
jb
enter
fmuls
xchg
inc
mov
js
push
pop
xor
xor
rol
xchg
push
rcl
ret
xchg
movsl
outsl
mov
cmp
call
pop
je
ret
in
dec
mov
xchg
push
test
add
rclb
lods
sbb
jnp
out
pop
fs
lods
sbb
outsb
xchg
mov
lds
pop
jns
and
jae
test
sub
xor
out
push
and
mov
hlt
pushf
addl
imull
adc
xor
pop
dec
fnstenv
movsb
xor
and
rcll
ss
call
jmp
fildll
xor
mov
notl
cli
xor
xor
inc
sbb
mov
and
lea
push
pop
out
outsl
imul
push
lods
ret
sub
ret
test
outsb
mov
in
jae
push
push
rcll
mov
pushf
mov
adc
stos
gs
mov
in
loop
inc
sub
pusha
sbb
fld
insb
ret
fildl
lock
rcll
push
mov
stos
imul
push
pop
sbb
xor
jmp
je
push
pop
jmp
cmc
cwtl
shrb
cltd
jo
or
outsl
pop
out
cmpsl
cmpsb
rolb
xchg
cmp
imul
or
mov
xchg
cmp
fwait
jb
mov
mov
xchg
mov
scas
scas
and
lock
fists
int3
sbb
in
sbbl
iret
pop
sbb
shl
out
fs
pop
mov
pusha
addr16
add
mov
push
adc
xchg
add
shl
and
repnz
inc
fldl
jnp
jmp
xchg
xchg
lds
aaa
lret
inc
fs
mov
aaa
inc
adc
jnp
jg
movb
add
or
scas
or
int
mov
xor
lods
jns
pushf
sarl
sar
pop
test
inc
dec
and
test
loopne
pop
sub
cmc
jno
outsl
mov
push
jl
cmp
sbb
mov
outsl
dec
jae
xchg
dec
add
rcrl
mov
fcomps
push
lahf
add
int3
mov
push
in
in
loop
in
xor
jge
mov
leave
push
cld
mov
call
push
fwait
sbb
leave
mov
mov
test
outsb
push
lock
xor
sbb
gs
ret
sbb
mov
jnp
lret
mov
mov
or
jg
dec
inc
pop
xchg
out
scas
or
jmp
scas
ljmp
addr16
mov
insl
ljmp
xchg
lea
out
fcoml
push
mov
fcmove
scas
push
fistps
push
cmc
xchg
fdiv
int
testb
dec
sub
mov
fsubrl
pop
add
ljmp
add
pop
mov
xchg
arpl
xchg
je
stos
or
out
mov
jns
ss
mov
imul
rol
int3
jge
pop
xchg
push
popl
insl
movsl
in
push
imul
daa
push
cmc
and
mov
dec
int3
fimull
mov
in
stos
ret
adc
pop
call
lock
jl
pop
inc
in
push
jmp
bound
jo
jo
cmp
mul
in
mov
jle
hlt
fbld
pop
dec
xor
mov
jg
jge
dec
and
andb
mov
cmc
and
xchg
cmp
push
xchg
lcall
mov
sub
arpl
cwtl
adc
xchg
stos
mov
adc
fdiv
mov
sub
add
cmpsl
cmp
popa
fsts
add
cli
push
cwtl
into
repz
jae
imul
add
and
jmp
mov
and
add
in
adc
push
pop
in
pop
sub
sub
fucomp
and
sahf
es
lahf
mov
in
ja
mov
stos
jg
cs
jl
adc
sub
pop
dec
adc
cmp
aaa
inc
sub
sbb
std
test
cmc
pusha
inc
dec
shrb
inc
xchg
inc
mov
aam
jns,pn
add
sub
fbstp
and
sbb
cwtl
fsubr
jne
adc
loopne
adc
mov
popa
pusha
xchg
aaa
enter
push
push
inc
inc
xor
dec
jb
into
pop
xchg
jbe
jmp
cmpsb
fiadds
push
pop
and
add
adc
mov
xchg
or
fwait
popa
and
mov
daa
aam
pop
fidivrs
dec
and
sub
cmp
mov
imul
dec
fdivr
cwtl
cmc
dec
fwait
pop
cltd
icebp
out
movsl
addr16
mov
js
jno
mov
je
sbb
test
test
fnsave
aas
mov
cmp
push
add
inc
push
out
sbb
test
cs
and
fisubs
lret
clc
ss
or
out
sub
repz
pop
cmc
std
xor
idivb
push
and
cmc
mov
push
pop
jo
jecxz
fcomps
sarl
jp
add
shrb
adc
mov
out
and
pop
in
mov
std
dec
mov
add
dec
sub
lret
and
ret
cmovns
call
push
and
subb
fninit
sbb
dec
push
jecxz
inc
call
call
hlt
scas
out
stc
push
pop
adc
mov
stos
or
jge
test
xchg
pop
ficompl
sbb
adc
outsl
mov
adc
nop
push
adcb
cmp
in
mov
rolb
xchg
test
fidivrl
or
adc
enter
jp
icebp
mov
in
pop
int3
push
je
adc
fldcw
push
mov
std
mov
pop
das
jl
aaa
inc
out
mov
mov
data16
cmp
in
push
stos
push
or
cltd
fdivrp
push
pop
lds
and
fnstsw
scas
pop
loopne
sbb
add
jo
inc
or
rcll
popf
inc
push
mov
dec
lods
clc
mov
push
jnp
sub
sarl
das
inc
dec
out
inc
jnp
lods
stos
lods
ds
lods
fildll
test
nop
mov
sub
jle
sar
mov
sbb
jo
jecxz
fbstp
lret
ljmp
mov
adc
aam
and
pop
jo
inc
inc
pop
scas
sbb
jg
xor
mov
add
mov
mov
inc
fcompl
call
mov
push
lods
pop
das
inc
adc
xchg
lds
ds
lods
push
mov
inc
in
adc
add
push
mov
pop
mov
and
movsl
das
test
dec
jae
cli
rolb
push
cmp
leave
dec
out
int
dec
add
pop
iret
rcl
add
sahf
inc
push
insl
enter
fst
dec
in
push
outsl
std
cmc
ja
push
push
js
and
rclb
stos
push
mov
clc
out
loope
inc
sbb
ret
pop
jg
jno
adc
jno
jp
les
cli
cs
shrl
fcoms
or
push
dec
inc
sbb
pushf
mov
dec
jge
or
repnz
scas
repnz
jle
pop
arpl
dec
or
xchg
cmp
roll
mov
xor
lock
std
rclb
loope
arpl
mov
adc
mov
fisubrs
std
adc
add
cmp
sub
icebp
repnz
pop
repz
cmc
pop
dec
mov
cmp
out
je
or
and
decl
insl
in
cmp
or
lcall
add
mov
dec
cwtl
test
enter
lods
outsl
cs
aam
outsb
aad
jge
lods
pop
stc
push
push
or
cmpsb
lock
shl
mov
out
je
ljmp
shl
test
je
adc
dec
mov
outsl
es
push
push
inc
fimuls
mov
pop
mov
mov
or
sub
ret
test
in
mov
sahf
clc
sub
mov
inc
push
aas
addr16
mov
out
icebp
jnp
repnz
data16
cmpl
scas
mov
int3
sar
push
hlt
lret
push
lcall
mov
pop
push
insl
outsl
xlat
dec
dec
push
mov
pop
mov
fsubr
outsl
repz
cltd
pop
pop
pusha
lret
test
mov
add
xchg
add
mov
mov
sub
mov
aaa
push
fwait
ret
dec
pop
sub
and
pop
mov
test
xchg
out
out
ss
pop
or
push
xchg
imul
add
bound
mov
xchg
aaa
sbb
into
adc
cmp
mov
pushf
and
sub
gs
sti
cltd
lret
stos
jp
xor
pop
or
jecxz
orb
pop
out
sbb
mov
push
shlb
std
xchg
out
sub
push
jne
je
test
pop
dec
arpl
popa
iret
leave
push
stc
pop
mov
inc
mov
mov
xor
push
xor
lock
cli
jp
jmp
sub
jle
inc
push
stos
out
test
outsb
pop
ffreep
sbb
fistl
jl
push
xchg
lods
and
xchg
in
jp
cmpsl
and
scas
into
imulb
out
ret
dec
dec
xchg
adc
mov
jne
in
out
sti
cs
not
and
or
jno
adc
sub
mov
and
rcrl
xlat
hlt
ljmp
xor
sub
sbb
push
xchg
jae
lcall
mov
int3
xor
xorl
subl
xor
mov
mov
popf
push
les
pop
sbb
in
repnz
push
cld
dec
out
sbb
xchg
cmp
add
xchg
inc
fcmovnbe
loopne
and
sti
sub
loopne
and
test
mov
pop
and
pushf
push
sub
inc
sub
adc
xor
mov
mov
xor
xchg
add
test
lcall
bound
clc
dec
movsb
dec
das
adc
sub
ljmp
push
shl
adc
inc
add
insl
mov
xchg
imul
dec
adc
shrl
dec
xor
das
cmp
xchg
sub
pusha
jo
xor
lds
in
in
mov
mov
sbb
ret
ret
insb
pop
pop
dec
sarb
lret
sbb
push
jo
jp
lahf
out
xor
mov
outsb
jmp
addl
and
iret
xor
subl
and
enter
and
xlat
xor
cmp
jle
int
xor
repz
push
jnp
cmc
inc
mov
lds
dec
es
mov
arpl
out
jmp
mov
les
xchg
loopne
jbe
int3
push
xor
cltd
cmp
sub
mov
sbb
and
and
and
jecxz
fistps
inc
push
cmc
cmp
mov
pop
cmpsb
cmp
into
movsb
mov
cmp
adc
jmp
inc
xchg
cwtl
ret
pop
stos
fidivl
cmpsb
movsb
pop
inc
or
jnp
clc
stc
mov
lret
mov
mov
sbb
mov
jne
xchg
and
mov
sbb
jne
xchg
lret
aaa
bound
outsl
and
iret
jge
clc
add
lahf
jp
sbb
imull
mov
inc
jns
inc
popa
in
adc
add
jb
inc
test
jbe
cmp
xchg
xchg
adc
movsb
jecxz
stc
std
js
sbb
scas
out
data16
lretw
mov
xor
call
data16
jp
cmp
push
mov
push
sbb
mov
cmpsb
into
lahf
and
jnp
nop
gs
xor
rcrb
outsl
mov
jmp
stos
ret
xor
mov
jmp
movsl
or
rorb
movl
lret
sub
lret
jge
cmp
mov
cmpsb
fwait
mov
cwtl
ss
jns
cmp
or
push
enter
in
cld
out
push
pop
push
fs
movsb
xlat
jbe
sbb
frstor
incb
imul
int
clc
shrb
jmp
cmpsl
add
enter
cmpsl
cld
jb
or
aam
pushf
push
jnp
or
int
xorl
mov
in
dec
sub
mov
loope
pop
dec
mov
fsubrl
xchg
out
inc
test
pop
repnz
scas
mov
fwait
xchg
cmpsl
mov
push
and
cld
mov
sbb
aas
push
xor
lods
sub
fnstsw
jg
sub
sahf
int
mov
cwtl
adc
das
dec
push
mull
pop
lods
xchg
push
jno
add
add
pop
and
pop
push
int
leave
xor
sbb
and
scas
ljmp
or
popa
mov
mov
pop
stc
clc
xor
mov
icebp
xchg
adc
cmp
movsl
lcall
jl
ljmp
rol
cwtl
push
mov
fwait
mov
insb
adc
fwait
shll
iret
jae
xor
fistpl
out
cli
pusha
xchg
subl
neg
frstor
cmc
or
test
push
popa
lods
ret
decb
sub
test
sub
vpmulhuw
sahf
mov
cmp
dec
shlb
es
xchg
push
pop
ljmp
xchg
clc
fimuls
mov
mov
xor
dec
adc
pop
in
sbb
loop
mov
scas
adc
xor
cmpsb
push
dec
or
sbb
int3
and
scas
ja
cmc
and
xchg
dec
std
faddl
cmp
bound
mov
stos
cmpsl
mov
xor
jecxz
clc
mov
rcrb
mov
pop
scas
inc
cld
sub
push
test
aas
test
in
loope
bound
jae
add
aad
imul
dec
inc
cmpsb
xlat
xor
xorl
lea
dec
in
xchg
aas
in
mov
addr16
xor
mov
cmp
jle
aad
xor
cmp
int3
out
pop
stos
jp
cmp
pop
les
mov
xor
cmc
and
adc
scas
pop
mov
push
sti
mov
mov
in
push
pop
add
xchg
test
jno
and
push
or
idivl
sub
xor
dec
xchg
mov
je
adc
push
adc
outsb
clc
dec
fwait
sub
scas
push
mov
mov
push
jg
aaa
jo
xchg
je
popf
rcrl
imull
mov
pop
cs
cmp
adc
push
and
mov
scas
push
cmp
jns
push
push
cmpl
xor
or
outsb
cmpsb
xlat
and
cmpsl
mov
add
in
xchg
cwtl
or
inc
dec
bound
popf
sub
div
jmp
add
pop
mov
jmp
mov
cs
sbb
icebp
jno
pop
jmp
outsl
push
mov
idiv
and
mov
movsb
mov
das
lock
sahf
sbb
out
jno
arpl
mov
pop
pop
enter
pop
int
insb
xchg
gs
nop
aaa
mov
add
sbb
jecxz
std
mov
sub
sbb
sti
dec
push
inc
das
pop
orl
xchg
mov
mov
and
lcall
loopne
lods
mov
cmp
jg
jmp
adc
jns
hlt
jnp
mov
cmovnp
test
ja
and
and
inc
mov
ret
inc
shrb
push
push
out
adc
leave
sbb
rol
adc
aas
cmc
or
out
push
imul
fisttps
xor
out
mov
mov
pusha
dec
mov
push
adc
push
or
int
mov
inc
mov
loopne
fstpt
xor
sbb
scas
adc
shll
adc
aaa
imul
push
les
aad
add
xor
jl
mov
push
inc
testl
push
loop
mov
pop
scas
insb
jns
outsl
popa
adc
pop
pusha
loop
dec
dec
movsl
aam
mov
cli
push
mov
lret
sbb
pop
repnz
test
pop
aas
push
xchg
sbb
dec
fldt
and
enter
dec
cmp
dec
mov
notb
add
xchg
jns
pop
mov
jge
test
stos
enter
les
lret
adc
add
clc
loop
inc
dec
lahf
vphaddubw
sub
ret
xchg
iret
repz
mov
mov
push
jle
and
or
add
pop
pushf
fimuls
jno
dec
fidivs
imul
mov
push
jb
or
mov
pop
pushf
movsb
adcb
mov
cmp
mov
jge
fildll
pop
arpl
addl
in
pop
xchg
cmp
sub
call
mov
fdiv
outsl
aam
xor
adc
icebp
mov
ja
gs
test
push
daa
loopne
adc
leave
sbb
mov
movsl
mov
mov
adc
repz
lcall
sub
fs
fs
jg
xchg
addb
subb
push
sbb
jge
mov
jns
mov
inc
or
dec
pop
leave
xchg
test
stos
dec
dec
lcall
mov
or
mov
leave
mov
in
subl
call
mov
cmpsl
jns
das
sub
mov
dec
test
sub
and
iret
icebp
jb
lea
sbb
cmc
dec
roll
mov
adc
push
aaa
scas
push
outsb
xor
sbb
mov
jno
push
jl
mov
shrb
jns
fstpt
xchg
inc
inc
fcoml
cld
jecxz
cld
cwtl
incl
negl
mov
bound
stos
subl
insb
clc
lahf
es
std
test
fnstcw
sub
sbb
rorb
int
add
insl
leave
out
xor
cmc
fdivrs
sbb
and
lods
ss
sahf
push
lcall
push
sub
movsl
insb
lea
dec
mov
dec
push
push
gs
push
jns
pop
bound
test
push
mov
or
ja
pop
insb
sbb
sbb
je
cmp
add
loop
cmp
sti
cmp
and
push
cmp
push
idivb
cmp
sbb
mov
xor
pop
xlat
jns
lcall
test
ja
outsb
stos
pop
ljmp
add
ret
cltd
out
inc
mov
scas
and
daa
fildl
lcall
jl
in
fwait
push
call
push
inc
or
sbb
loopne
sbb
pop
dec
fs
nop
dec
dec
mov
repnz
js
xchg
xchg
mov
cmp
in
fdivrs
jo
rol
xchg
rclb
mov
mov
push
xchg
xchg
jg
imul
inc
in
dec
add
lea
dec
test
mov
in
sbb
movsb
pop
pop
adc
lds
jge
stos
jae
test
jae
mov
pop
pop
pop
imul
call
mov
faddl
in
mov
mov
xchg
orl
fildl
inc
adc
mov
dec
xor
dec
jo
xor
and
push
and
jmp
test
xchg
mov
mov
shl
mov
inc
push
mov
test
cmp
loope
pop
sub
scas
sti
and
fiaddl
xchg
and
push
jae
pushf
push
test
sub
cmp
je
test
inc
mov
adc
cld
movsl
xor
xor
mov
xlat
push
sub
ja
mov
fwait
xor
push
cmp
mov
cs
sti
xor
movsb
sub
aam
mov
shl
mov
jno
or
in
jmp
inc
mov
push
cmp
or
pushf
outsl
repnz
push
insb
pushf
rclb
scas
stc
xor
in
sbb
dec
popf
xchg
fucomp
and
and
in
imull
outsb
imul
push
push
dec
out
adc
cltd
inc
xorb
sbb
mov
pop
les
or
out
icebp
mov
cli
in
sahf
out
filds
sub
sub
inc
out
dec
cmp
insb
sub
adc
sub
lea
lahf
lods
faddl
cs
stos
and
mov
xor
bound
iret
in
ret
daa
add
scas
push
test
fsub
fisttpl
push
icebp
inc
inc
stos
xchg
jae
cld
inc
adc
lea
repz
scas
popf
nop
xor
int
push
push
push
pop
push
in
mov
out
jbe
pop
test
stos
fwait
mov
test
pop
aad
in
loope
in
aam
rolb
xor
sti
out
xchg
fsubr
test
push
jge
dec
cmp
icebp
into
add
push
pop
mov
push
xchg
les
mov
mov
bnd
mov
cld
cmpsb
and
rol
jnp
pop
rolb
jno
cmp
je
mov
xor
sbb
xor
inc
in
fistps
iret
sub
sub
out
push
nop
push
add
cmpsb
adc
adc
das
adc
imul
inc
ljmp
int3
dec
dec
sbb
add
sahf
dec
shrl
cs
fwait
mov
jmp
out
adc
lret
ds
or
nop
out
jmp
cmp
dec
aad
popa
pop
rol
xor
mov
cmc
sbb
mov
loopne
or
stc
sub
std
dec
in
push
stos
sbb
inc
into
loope
notl
mov
xrelease
js
xchg
xor
inc
data16
jl
push
dec
pop
xlat
push
push
idivl
movsl
or
fmull
mov
push
or
mov
scas
push
je
jno
data16
vpcmpeqw
jb
cli
sub
mov
mov
fs
inc
cwtl
in
jp
shll
push
shrb
mov
addl
jecxz
test
ret
add
lods
cmp
das
jbe
lods
ficoml
sub
cmpsb
aaa
jns
push
lret
and
sbb
cmp
dec
cmpsl
or
das
add
fwait
lret
inc
lret
cmp
push
push
jg
xor
mov
andb
xor
ret
sbb
aaa
cli
sti
and
stos
or
mov
cmpb
push
orb
adc
xchg
pop
jecxz
mov
stos
jae
daa
sbb
or
add
or
sub
mov
or
test
or
jo
xchg
sbb
xor
xchg
mov
lock
bound
and
and
xor
mov
out
xor
out
adc
sub
movsb
inc
sub
mov
dec
ja
into
and
cmpsl
lea
out
mov
dec
mov
subb
daa
mov
dec
jb
mov
shl
cld
std
dec
mov
movsb
push
pop
sbb
dec
push
sbb
mov
loopne
das
xchg
jle
dec
xchg
cmp
icebp
loopne
pop
mov
and
push
mov
mov
pop
and
cltd
cmp
loopne
dec
rclb
ljmp
or
mov
pop
popa
push
mov
movsb
fwait
test
xlat
xor
stos
xchg
pop
or
xor
stos
mov
sub
xor
cmp
std
push
xchg
sarl
cmp
mov
repnz
jnp
sub
cltd
mov
lods
pop
dec
inc
in
or
enter
into
lret
inc
lahf
hlt
ljmp
cmp
and
pop
cmp
out
les
ror
arpl
mov
sbb
or
stos
cmp
push
scas
bound
mov
fidivrs
mov
cmp
xorl
std
xchg
mov
arpl
push
mov
cli
jecxz
push
jl
mov
clc
jne
xchg
imul
loopne
subl
cs
rorl
mov
inc
xchg
push
lods
inc
aad
mov
repnz
inc
cmp
add
inc
inc
movsb
int
sbb
lds
fwait
xor
je
enter
daa
xchg
pop
dec
bound
popa
arpl
mov
daa
mov
pop
arpl
push
repnz
shll
pop
sahf
cmp
es
imul
push
push
loope
pop
mov
mov
cmpsl
loop
inc
cwtl
lods
cmp
and
mov
or
aas
cld
mov
inc
dec
mov
filds
sub
gs
cmp
outsl
inc
outsl
fisttpl
out
imulb
mov
ljmp
mov
movsl
cmpsl
or
add
scas
jne
jb
sub
loopne
xchg
cs
rcrl
add
and
mov
sbb
ret
call
push
cmp
lods
pop
and
or
outsl
mov
mov
lods
notb
lods
add
dec
mov
lock
mov
xchg
into
sub
addb
clc
mov
fdivs
testb
sub
add
sbb
inc
pushf
or
call
add
shlb
fstpt
inc
sbb
and
mov
jecxz
mov
stos
je
pop
sbb
adc
fucomp
cmp
pop
int
dec
pop
mov
jge
aaa
in
stc
sahf
mov
icebp
xchg
shll
cmp
mov
arpl
dec
stos
sub
mov
xchg
enter
mov
imul
mov
ret
inc
jmp
cld
jl
pop
mov
lret
outsl
scas
jecxz
fstpt
xchg
je
xchg
dec
mov
inc
cmc
negb
mov
dec
and
scas
or
movsb
and
sub
js
dec
inc
ret
xor
jae
sub
int
add
in
negb
cmpsb
push
or
mov
mov
mov
mov
ja
stos
add
mov
xchg
daa
stos
fistps
leave
inc
cli
mov
movsl
push
arpl
inc
sub
pop
add
popf
sub
push
lock
add
clc
dec
mov
and
and
aad
or
mov
xor
push
jg
mov
mov
ss
adc
lods
pop
out
mov
nop
and
decb
push
adc
ret
sar
mov
and
add
insl
inc
cli
cmpsl
push
adc
int3
test
xchg
in
call
xchg
sub
aam
fdivrl
xchg
lret
mov
pushf
push
pop
jo
mov
pop
pop
addr16
stos
sub
push
sbb
dec
test
mov
popa
dec
in
aas
inc
sub
xor
mov
push
cwtl
js
or
ljmp
jb
mov
ret
xchg
cwtl
and
test
das
adc
adc
out
mov
cs
rclb
dec
or
mov
push
stc
sbb
mov
xchg
jle
cmp
add
mov
mov
stc
mov
sahf
adc
push
xlat
sub
leave
pop
ret
cmp
pop
int
ds
outsl
pop
pop
ljmp
outsl
inc
nop
push
mov
dec
or
xchg
test
ret
mov
stos
cmp
cmp
add
sub
cld
cmp
adc
pop
idivb
xor
jmp
in
test
adc
push
test
outsb
scas
inc
lock
enter
sbb
outsb
jecxz
les
ficomps
mov
call
and
outsl
bound
mov
mov
cmpsl
mov
mov
pop
shrl
shll
sbb
adc
stc
bound
push
je
adc
adc
scas
dec
aaa
leave
dec
inc
cld
or
shl
dec
mov
add
test
dec
test
sub
outsl
pop
cmpsb
shl
movntq
scas
xor
xchg
or
pop
fxch
cmp
sti
mov
test
cltd
jae
je
roll
mov
std
call
push
push
pop
sub
jnp
stos
pop
or
mov
push
pop
fmul
out
mov
sbb
ja
mov
lcall
clc
mov
add
mov
arpl
jge
mov
popf
jns
push
ljmp
enter
int3
je
mov
pusha
and
and
and
ds
adc
shll
cmpsb
addr16
insb
dec
inc
adc
mul
ds
fcompl
aad
dec
addr16
iret
mov
jecxz
xorb
mov
mov
rcrb
mov
pusha
sub
inc
pop
scas
popf
push
mov
jle
mov
loope
lcall
sbb
mov
bound
jg
pop
rol
adc
dec
xchg
orb
inc
call
std
roll
add
ja
cltd
pop
dec
add
stos
pop
sub
in
outsl
mov
xchg
orb
mov
sbb
repz
or
nop
mov
and
std
pop
jno
sahf
fbld
js
sarl
jl
xor
mov
mov
add
xchg
mov
push
dec
imul
aad
mov
add
jge
mov
dec
add
cltd
or
add
dec
xorl
in
sti
rcl
mov
add
mov
mov
outsl
xchg
or
sti
mov
arpl
pop
loope
add
jle
inc
in
xor
pop
add
cli
xchg
ljmp
push
fistpl
mov
adc
lods
adc
test
in
push
dec
jnp
jmp
xchg
push
push
pop
mov
sbb
mov
int
test
cmp
aas
xchg
insl
adc
add
xor
insb
outsl
jmp
xchg
addr16
push
push
bound
adc
push
pusha
adc
add
or
sub
mov
into
mov
repnz
fistps
dec
jge
movsl
out
aas
add
mov
ds
sub
mov
out
ljmp
sub
pop
loope
cwtl
mov
dec
mov
cmp
cmpsl
or
or
mov
push
pop
mov
pop
int3
inc
cwtl
loop
or
push
push
popf
ds
std
and
add
lock
sbb
xor
adc
popl
xor
nop
nop
inc
and
and
dec
jae
je
bswap
mov
push
fs
out
in
xlat
je
hlt
inc
lods
les
shll
test
or
add
xchg
and
lds
pop
ds
xchg
inc
rcrl
repz
dec
movsb
prefetcht0
jnp
inc
jmp
cmp
add
jecxz
push
jno
icebp
clc
out
cmp
push
je
sti
add
call
jecxz
mov
jg
mov
mov
repz
push
and
data16
cld
cmpsl
xchg
mov
cs
mov
sub
sar
sbb
cs
pop
push
dec
dec
loopne
popa
sub
cmp
icebp
mov
ret
dec
repz
jbe
pusha
push
decb
mov
push
push
sbbb
ret
leave
insb
lods
xchg
ljmp
jnp
icebp
fs
mov
add
sahf
je
jp
andl
cmp
pop
xchg
inc
in
or
enter
into
xchg
jae
es
cmpsl
or
adc
add
mov
ja
lock
stos
test
lock
cli
sti
arpl
xor
divl
adc
int
icebp
and
out
sub
dec
push
sub
mov
jnp
cmp
inc
ud0
and
adc
test
hlt
inc
adc
dec
test
jo
inc
stos
shl
or
xlat
jmp
cmp
sbb
cmp
pop
pop
mov
rcrl
ret
bnd
sub
scas
scas
lahf
movsb
and
es
mov
sub
in
xor
mov
add
jmp
fstl
test
das
pushf
rclb
leave
sub
and
or
xchg
aam
or
ljmp
jp
mov
cmp
jno,pn
add
mov
dec
mov
jns
cmp
xlat
loop
test
pop
xor
jns
xor
jae
dec
insb
mov
and
inc
and
icebp
rcll
or
mov
in
adc
xchg
icebp
sbb
pop
imul
cld
jno
dec
xor
jg
mov
jecxz
xor
out
pop
mov
sub
iret
imul
mov
insb
ret
dec
mov
dec
mov
stos
mov
aas
pop
cltd
pusha
dec
stc
push
out
jne
dec
pop
mov
inc
push
ret
mov
or
xor
cmpsl
sbb
xchg
les
pop
lcall
lods
icebp
jecxz
cbtw
adc
xchg
stos
cmpsl
inc
xorb
hlt
or
fstps
cld
les
xchg
push
pop
ja
stos
xchg
lret
xchg
in
jg
ret
pop
push
jmp
stos
push
mov
mov
pusha
inc
jmp
sub
iret
add
cmpsl
mov
into
push
rcrl
mov
add
jae
insb
sub
test
push
dec
sti
dec
ja
or
mov
les
int3
jne
lods
pop
enter
leave
popf
movsb
xor
lea
cmpsb
jg
mov
add
dec
sub
mov
std
mov
pop
add
cs
jg
sbb
test
cmp
movb
sti
pop
lds
mov
outsl
fldcw
inc
dec
sub
jb,pt
je
cmp
dec
dec
aaa
fstpl
push
mov
hlt
sbb
mov
dec
push
fldt
pop
adc
sti
jns
mov
out
mov
xor
dec
fstps
or
pop
rorl
xchg
daa
adc
fs
lret
in
push
dec
fstps
ret
in
jno
xor
or
data16
shll
leave
cld
jnp
in
fsts
cmp
and
in
xor
mov
imul
adc
xchg
sarb
jns
test
mov
int
xor
add
orb
pop
arpl
jno
decb
int3
mov
xchg
pop
lcall
jne
sbb
lds
jp
lods
out
lds
sbb
in
je
cmp
adc
adc
pop
dec
jae
push
insl
push
mov
mov
dec
rclb
fs
push
shll
rcrl
cli
popa
lret
mov
fs
pop
mov
add
dec
movb
inc
mov
and
adc
sub
pushf
aam
or
mov
imull
dec
sbb
test
dec
push
jp
sub
push
rorb
scas
pop
mov
adc
push
mul
sahf
push
in
fnstsw
pop
inc
sub
popf
mov
cwtl
xor
xor
and
adc
dec
cltd
loope
sub
sub
add
xor
jns
push
lock
add
dec
jno
ret
cld
test
sub
rclb
cmp
mov
hlt
sub
or
pushf
es
inc
arpl
mov
xchg
shl
push
lahf
ja
fld
push
insl
data16
or
nop
ds
mov
aad
inc
adc
lea
or
lret
or
jne
mov
push
lds
sbb
mov
in
into
pop
loopne
add
add
imul
sahf
mov
mov
scas
leave
or
or
test
aaa
icebp
or
jo
xor
push
scas
daa
mov
daa
lods
subl
push
rcr
mov
push
and
sbb
adc
icebp
xor
repz
push
sahf
jns
xor
outsb
dec
imul
rorl
cmp
pop
cmpsb
mov
test
mov
mov
push
iret
dec
arpl
hlt
ret
int
mov
mov
arpl
daa
push
into
add
mov
and
addl
mov
movsl
sub
arpl
lea
fstpl
clc
arpl
subb
mov
or
jnp
repz
xor
in
and
pushf
das
addr16
jl
jmp
sub
loope
lcall
loope
mov
mov
cltd
mul
mov
lods
lea
and
ja
sbb
ss
testb
push
mov
imul
dec
cmp
jl
jg
les
jne
mov
outsl
pop
pop
data16
cwtl
xchg
and
popa
mov
jbe
out
sub
movsl
mov
aas
not
inc
inc
in
xlat
in
movsl
cmp
or
dec
loopne
lock
inc
das
aaa
xor
mov
and
mov
ds
cmp
xchg
insb
dec
nop
or
adc
jns
lahf
pop
cmp
jmp
and
jbe
xorl
mov
sbb
dec
imul
scas
shr
mov
inc
cmp
sti
or
loope
sahf
sub
inc
mov
and
mov
cltd
jle
xor
test
xor
jbe
or
cmp
sbb
sahf
ja
test
in
outsb
mov
call
mov
popf
fadds
cmc
mov
divl
xchg
and
inc
cmc
inc
aam
jge
push
lods
pop
mov
inc
jns
mov
jecxz
ds
test
lcall
ror
sbb
les
shl
adc
push
imul
and
and
pop
insb
fistpll
leave
inc
pop
aas
scas
lods
mov
ret
hlt
mov
cwtl
aas
cltd
cmpsl
clc
sub
or
popf
lock
sub
fnstsw
sbb
and
adc
icebp
mov
cltd
sbb
aaa
push
lret
cmpsl
test
je
mov
sbb
data16
push
aad
sahf
mov
inc
sbb
push
fdivr
test
inc
and
jnp
cmpsl
icebp
or
ja
outsl
adc
or
ss
call
leave
loope
inc
imul
ja
lds
pop
leave
sbb
mov
imul
mov
aas
fadd
inc
jns
icebp
xchg
lods
cmc
test
daa
loope
or
cmp
mov
aad
xor
data16
aad
sub
sarb
jge
roll
das
addb
push
adc
mov
sahf
test
outsl
aaa
push
xchg
cmp
cmp
push
push
jmp
iret
call
xlat
inc
loopne
fdivs
loopne
mov
mov
pop
roll
jge
fsubs
nop
push
jns
in
adc
add
adc
nop
cwtl
jle
dec
popf
jns
and
ljmp
je
push
cs
pop
mull
pop
dec
mov
data16
xor
loop
add
fbld
js
lret
inc
mov
in
dec
cbtw
cmpb
xchg
cmpsl
into
and
shlb
fwait
mov
mov
fcomps
or
pop
ss
pop
cmp
jmp
or
mov
dec
cld
dec
pop
outsb
dec
in
filds
mov
xor
dec
cmp
scas
push
loope
fistpl
cmp
mov
sub
cmpsb
dec
pop
pop
and
xlat
sub
repnz
mov
test
lahf
adc
loop
push
test
add
jecxz
dec
aaa
loopne
insl
movsl
jae
fldenv
xor
scas
dec
mov
push
clc
lods
jnp
adcl
xchg
add
xchg
rorl
pop
mov
pop
fistpl
fwait
mov
stc
inc
andb
mov
pop
dec
push
add
int3
pop
mov
insb
push
mov
sbb
sbb
adc
jmp
sbb
and
sarl
push
lret
test
shr
push
mov
or
test
hlt
xchg
clc
jb
pop
adc
push
jl
cs
fldl2t
and
bound
mov
shll
jo
or
inc
and
sub
sub
add
cmp
mov
pop
decl
cmpsb
pop
pop
push
lea
in
jge
sbb
or
or
mov
push
test
cmp
repnz
push
mov
in
insl
lods
stos
inc
push
imul
jl
mov
mov
ret
mov
jle
ret
mov
aas
cmpsb
cmpsb
repz
scas
xlat
pop
test
sbb
aaa
scas
jge
pop
out
push
addr16
jnp
sbb
jno
fsubs
lock
xchg
cmp
in
data16
jno
addr16
in
mov
jno
jns
fs
jp
adc
lods
iret
lods
mov
fwait
sub
push
repz
push
mov
je
cmp
icebp
or
test
fstpt
push
adc
push
pop
vmread
into
insb
cmp
lock
popf
xchg
add
lret
aaa
sbb
mov
push
rorb
lock
jo
or
scas
dec
adc
jns
mov
cmp
mov
sub
inc
mov
lcall
pop
push
lret
in
jp
and
xchg
ficoms
add
out
cmp
cmp
jmp
jns
ss
add
mov
dec
jbe
mov
les
xor
fsubrl
ss
jb
addr16
ss
hlt
in
cs
mov
mov
mov
jge
sbb
dec
mov
pop
enter
int
or
gs
call
paddsw
xchg
cmc
xor
xor
add
adc
push
xchg
and
xor
pop
or
mov
pop
test
jo
int3
pop
and
add
or
mov
nop
insl
jmp
unpcklps
xlat
ds
jbe
sahf
dec
mov
rcll
push
das
lock
cltd
cmc
out
in
jle
pusha
fists
insl
aaa
and
mov
insl
in
std
adc
popf
adc
or
inc
push
or
fiadds
inc
sub
sub
fdivl
out
sbb
adc
in
xchg
or
aas
adc
push
fdivrl
mov
out
mov
push
sbb
int3
bndldx
fcmovb
icebp
inc
add
cmp
cmp
pop
test
push
lea
mov
unpcklps
inc
test
xchg
hlt
shr
mov
fs
fistl
insb
ss
sub
test
push
add
loop
adc
outsl
jecxz
dec
outsl
arpl
xchg
movsb
and
xchg
cli
jns
jge
mov
adc
cltd
sub
and
test
xor
imulb
inc
mov
pop
scas
mov
pop
lea
sahf
jg
jnp
fildl
ss
sub
xchg
and
cld
mov
mov
mov
xchg
gs
jae
ret
rclb
push
xor
ds
inc
clc
jge
andb
mov
ret
cltd
adc
inc
cld
mov
pop
mov
scas
pop
or
and
lock
sbb
cmp
jp
xchg
pop
or
outsb
cld
aad
push
int
adc
push
rcll
fdivl
cltd
xchg
jo
pop
push
mov
aam
push
dec
jns
and
sbb
add
out
xchg
push
scas
imul
mov
insb
fwait
sub
fstpl
gs
dec
scas
dec
shll
andb
les
js
aas
and
mov
js
stc
mov
lret
pop
dec
pop
stos
pop
popf
mov
lds
dec
test
popa
fildll
js
fldcw
mov
lret
mov
adc
sbb
jp
or
in
or
addb
in
cltd
test
and
lea
iret
push
jl
pop
int
mov
jmp
out
subb
ss
in
mov
std
dec
test
jnp
outsb
push
xchg
ret
push
push
lods
shlb
xor
inc
lds
dec
dec
in
pop
mov
adc
mov
adc
mov
outsl
dec
fistps
cmp
scas
aaa
jmp
leave
movl
push
aaa
pusha
lret
ds
sahf
out
stos
and
pop
add
jae
mov
fcmovne
cltd
daa
or
sub
shll
adc
cmpsb
or
imul
lret
mov
mov
rcrl
leave
xchg
sti
push
or
xor
mov
mov
jge
stc
jle
sub
push
push
inc
mov
into
xchg
jp
pop
dec
les
push
pop
lret
mov
fidivs
lahf
cltd
jg
imull
push
sahf
or
add
jae
fisttps
mov
pop
movsl
loop
inc
pop
test
inc
lock
stc
sbb
lods
cld
ljmp
push
popa
into
rcr
lahf
faddl
xchg
arpl
lcall
cmp
sarl
gs
inc
inc
cli
fs
ret
add
inc
sbb
dec
mov
bound
mov
jo
cmp
incl
cmp
inc
sbb
insl
mov
bound
lret
mov
mov
addr16
adc
daa
or
sub
jb
in
lcall
push
into
pop
jbe
lahf
daa
sub
inc
outsl
gs
test
xchg
add
pop
andb
ss
pop
stos
in
xor
leave
xor
mov
dec
mov
cmp
fwait
stos
orl
insb
pop
hlt
scas
fmuls
pusha
insl
sbb
fstpl
loopne
mov
sub
lods
adc
ucomiss
rep
jecxz
push
fstpt
inc
jo
lret
jne
mov
nop
loopne
mov
xorb
and
mov
xor
je
insb
loop
test
aaa
fistps
jmp
aaa
jno
mov
add
mov
mov
es
jg
cmp
je
sub
pop
jecxz
divb
pop
lea
mov
mov
ret
cli
sub
xchg
pop
outsb
sbb
repnz
negl
daa
fdivr
push
jl
adc
mov
imul
mov
xor
fiadds
xchg
insb
js
fs
cmpsb
test
inc
sbb
movsb
pusha
gs
cwtl
in
ss
lods
mov
mov
adc
mov
xor
xchg
sahf
dec
arpl
retw
das
cmovle
movsb
push
sbb
testl
popl
div
ficomps
sbb
sbb
pop
cmp
fiadds
popa
mov
and
xorb
push
ja
movsl
call
mov
insb
inc
bound
dec
imulb
mov
repnz
call
mov
scas
mov
inc
push
push
clc
jbe
ss
popf
mov
outsl
mul
pop
hlt
cmp
movsb
cwtl
xor
push
xor
and
cld
cmp
shll
leave
adcb
das
sar
or
data16
mov
lods
xor
and
and
sbb
sub
xlat
cmp
jo
outsb
xchg
test
rcl
cmp
mov
ret
aam
test
mov
xor
jae
push
pop
add
add
cmp
xchg
fdivl
mov
je
loope
push
iret
cmpsb
mov
or
rolb
cmp
int3
or
cmp
repnz
lret
out
xchg
add
xchg
pop
xchg
xchg
mov
jmp
lcall
loop
xchg
fbld
mov
outsl
inc
call
or
xchg
cmp
in
cs
inc
mov
addr16
xchg
dec
inc
xor
add
test
out
jae
jo
orb
loope
pop
mov
inc
mov
xchg
dec
pop
jb
jl
jp
xchg
mov
scas
inc
pop
notb
jecxz
imul
shll
aas
sbb
lods
xlat
xchg
jne
loop
add
and
push
mov
pushl
lods
add
in
add
push
mov
push
shrl
repnz
mov
out
nop
xor
cmp
pop
pop
shlb
movsl
add
add
addl
mov
insb
sarl
mov
test
pop
inc
mov
imul
test
sub
push
aas
sbb
fs
lret
popf
test
mov
dec
push
testb
cmpsb
inc
pop
movsl
pop
pushf
icebp
lret
out
mov
stc
or
jns
andb
pop
mov
hlt
movsl
cmpsl
add
push
stos
mov
jle
cmp
mov
lahf
pop
and
and
mov
out
push
imul
inc
ficoms
loope
inc
inc
mov
mov
jmp
cmp
adc
xor
xor
mov
outsb
or
movsb
pop
cmp
inc
fstpt
mov
jl
das
and
outsb
insb
xor
mov
xlat
ret
movsb
push
sub
in
idivl
leave
or
pop
into
icebp
xlat
sbb
dec
jmp
jle
test
shrl
lods
addb
int3
lods
addl
in
add
xorb
orl
enter
repnz
or
pop
ret
in
movl
cli
add
xlat
dec
xchg
jmp
jp
xor
mov
mov
pop
pushf
jmp
jmp
nop
movsb
mov
sub
push
dec
rclb
and
ss
mov
xor
xchg
adc
pop
cmp
ljmp
pop
andb
in
push
adc
ret
mov
add
push
mov
jae
mov
ds
mov
fwait
notl
push
iret
leave
insl
pushf
xor
jne
cli
js
in
xor
outsl
mov
xor
or
loope
cmpsb
lahf
loope
sbb
idiv
leave
inc
jnp
push
add
cmp
mov
mov
fidivs
lret
mov
xchg
add
test
fiaddl
or
dec
cmp
dec
popa
scas
sahf
aas
pop
loopne
add
push
int3
add
inc
and
dec
lcall
loop
insb
pusha
aam
mov
xchg
test
test
dec
aas
in
dec
inc
inc
jle
lods
adc
xor
repnz
in
pop
sbb
add
dec
or
xchg
fdivs
inc
into
in
loopne
or
push
sub
fs
dec
mov
rorb
xlat
lock
sub
idivl
movsl
and
out
pop
pop
hlt
adcl
dec
mov
mov
add
add
sbb
mov
movsb
cmp
pusha
mov
sbb
or
fidivrl
pop
movsb
or
xchg
insl
fdivrl
push
out
push
pop
xor
jnp
mov
xchg
jp
int
and
outsl
pop
xchg
mov
test
gs
cmc
mov
push
jae
hlt
jno
es
lcall
lods
loopne
push
in
pop
shrl
and
jbe
lret
xchg
cltd
xlat
cmp
xor
inc
js,pt
pop
xor
mov
and
pop
cli
cmp
addl
mov
fdivp
test
sahf
fidivrs
sub
sub
icebp
ss
inc
aaa
lret
xchg
push
mov
fwait
aaa
into
das
push
xchg
jbe
xchg
add
sub
inc
call
cli
sub
jle
cmpb
das
ds
fdivrl
icebp
inc
in
enter
sbb
sbb
jmp
inc
js,pt
mov
xor
fisttpl
imul
lcall
fcomi
inc
mov
inc
sbb
mov
dec
ret
xor
mov
mov
andb
xor
mov
push
push
mov
sbb
cmp
mov
jle
mov
mov
lcall
fcompl
or
loope
cli
out
icebp
mov
bound
out
mov
fcoms
ljmp
or
mov
mov
xchg
clc
jae
lods
mov
rorb
jp
fwait
cltd
adc
lret
pop
xchg
ret
call
pop
gs
lret
xor
cld
mov
inc
notl
fwait
xor
popf
into
in
data16
das
xor
lahf
movsl
out
pop
sub
mov
arpl
jae
jecxz
cmp
lods
out
inc
pop
aam
js
add
inc
mov
add
mov
pop
hlt
push
enter
or
push
inc
fisubrl
dec
mov
adc
lods
testl
subl
imul
mov
fimuls
stos
inc
je
push
movl
push
test
mov
imul
cmp
outsl
jge
xchg
adc
lret
in
enter
mov
out
movsb
jnp
insl
in
movsb
or
aaa
dec
fbld
pop
ficompl
stc
repz
jae
in
adcl
xorb
pop
mov
or
xor
lods
inc
out
add
pop
cmp
fildl
push
xlat
push
cwtl
sahf
mov
xchg
inc
addr16
call
clc
lea
jl
call
ljmp
call
jno
test
pop
sub
imul
xor
push
ret
mov
pop
pop
movsb
fnsave
inc
out
insl
push
push
es
inc
or
pop
jmp
xchg
add
mov
dec
jns
nop
mov
cmovle
imul
out
outsl
scas
xor
sbb
jnp
inc
loop
xor
mov
out
in
dec
out
insb
adc
xlat
lods
adc
repnz
push
xlat
fs
dec
xchg
fs
push
xchg
insl
popf
stc
cltd
cmp
push
mov
je
pop
push
shlb
sbb
into
stos
pop
and
lods
mov
hlt
jnp
std
repz
fwait
les
nop
xor
pop
aam
ljmp
push
imul
pop
insb
or
insb
icebp
xchg
inc
aas
ret
fistl
jmp
mov
xchg
add
sub
stos
fsubr
aam
push
and
int
sahf
repnz
mov
leave
xchg
xor
fcomps
jns
inc
mov
movsb
mov
jno
fwait
icebp
in
cs
jl
gs
cmpsb
fs
or
dec
sbb
mov
lret
pop
cmp
int3
lock
clc
xorb
push
xor
mov
repz
inc
leave
push
mov
jo
popa
loop
nop
cmc
js
push
jne
sbb
lock
xchg
xchg
xchg
or
test
push
cmpsl
sbb
test
sarb
in
in
mov
jp
inc
xchg
cmp
js
clc
mov
mov
push
in
out
jbe
or
or
call
mov
mov
sbb
inc
sahf
ds
xor
xchg
addr16
pop
xor
insl
xlat
push
xor
pop
push
je
testl
inc
data16
mov
les
lea
inc
adc
add
xchg
pop
cmc
and
addl
jmp
jns
mov
jb
adc
adc
in
stos
add
loop
sub
mov
mov
mov
test
xor
pop
test
xchg
xchg
faddl
lcall
rcl
fadd
test
cli
and
fmull
movsb
inc
in
mov
add
popa
push
xor
add
inc
xor
in
ror
das
mov
sub
aam
xchg
fsts
pop
sbb
pop
divb
mov
rcrl
outsb
sbb
dec
pop
push
mov
pop
add
pop
sbb
clc
mov
mov
add
push
cwtl
sets
rcrb
inc
lret
add
ss
in
mov
jg
fwait
cmp
xchg
lret
or
pop
mov
mov
add
mov
jns
adc
iret
shlb
jle
adc
scas
std
sti
lret
fwait
sbb
add
push
jmp
pop
enter
loop
roll
movd
xchg
aam
js
xchg
out
hlt
jge
adc
lret
adc
cltd
jae
fnstsw
pop
or
push
jmp
mov
aaa
aas
out
sbb
aas
std
aaa
shl
fdivl
icebp
dec
ss
loope
mov
daa
ja
jge
jg
cld
add
aas
add
mov
addr16
mov
cs
addb
test
dec
add
xchg
js
xor
and
ret
aaa
pusha
lods
imul
inc
aaa
movsb
in
ret
aam
dec
add
push
add
mov
jns
pop
js
adc
shl
pushf
loop
lock
mov
addr16
jnp
sarb
xchg
mov
stos
mov
inc
mov
std
js
fbld
cmpsl
inc
push
repnz
push
fdivr
xchg
mov
mov
push
sub
nop
xchg
pop
pop
in
sub
jno
and
mov
pop
jmp
into
and
repz
sub
adc
ja
sub
nop
and
push
xchg
int3
dec
in
dec
enter
mov
loopne
push
loopne
or
cltd
add
or
fwait
and
pusha
enter
gs
or
hlt
dec
les
arpl
mov
adc
repnz
addl
sti
pop
xor
test
enter
add
movsl
cmp
decl
or
xchg
and
stos
pop
jb
sbb
lret
movsb
xchg
nop
dec
int3
loope
push
adc
pop
cmp
sub
sub
sarl
loopne
jge
dec
jecxz
outsl
aas
add
push
lds
jnp
or
pop
jl
pop
mov
xlat
cld
dec
mov
divb
dec
sub
setge
repz
push
push
add
cmc
cmp
cmp
repz
test
push
add
shr
mov
and
mov
ja
movsb
jno
sbb
and
add
jle
nop
dec
fistps
js
decb
ja
hlt
push
es
jae
ficompl
or
pop
xchg
pop
cmc
mov
aaa
sbb
sub
pushf
dec
cmp
divl
sub
xor
and
addr16
xor
insl
lar
loop
push
mov
sub
mov
add
lds
lea
lds
pop
cmp
xor
xchg
mov
push
rcl
sti
insl
jno
mov
pusha
stos
popf
mov
lahf
sub
xorb
pusha
adc
push
mov
sbb
stos
add
or
out
pop
mov
cltd
push
inc
mov
xor
or
mov
cli
jns
jo
test
and
xchg
cmp
jmp
loope
cwtl
cmp
pushf
add
jp
sbb
out
jo
testb
mov
adc
jb
adc
sbb
ss
imul
movsl
push
sbb
mov
daa
cmc
lcall
mov
les
pop
or
call
sbb
das
push
shlw
cltd
lods
cmp
xchg
inc
push
adc
jne
xor
out
daa
lahf
inc
enter
movsb
adc
mov
lea
es
fisubrl
arpl
cmc
cmp
jecxz
jo
inc
outsb
jp
das
xor
mov
adc
xor
inc
mov
jge
sbb
sub
xor
scas
lea
xchg
pop
hlt
iret
loope
cmp
cmp
xlat
out
xchg
lea
mov
dec
jb
loop
sbb
inc
fdivrl
out
xor
sbb
popa
fwait
scas
push
pop
cmp
pop
lds
and
inc
ret
mov
test
mov
and
stc
clc
mov
jns
aad
ss
dec
xlat
adc
push
or
xchg
cltd
sbb
notb
adc
or
dec
lret
cmp
fidivrl
ljmp
cmpb
fst
das
dec
xchg
mov
pop
imul
scas
aad
mov
inc
add
xchg
inc
adc
jl
andb
aad
stos
pop
ljmp
ret
lods
sub
in
mov
stos
loop
lock
lea
shll
ja
push
and
lea
outsl
xchg
fwait
xchg
mov
pop
rolb
fucom
push
ljmp
std
js
jo
mov
push
jb
inc
mov
prefetch
dec
and
cmp
adc
push
cmc
adc
std
das
jns
cmpb
cmpsl
mov
mov
push
adc
jno
pop
mov
popf
int3
push
adc
cmp
adc
in
aas
dec
sbb
dec
addr16
sbb
loopne
repnz
je
nop
xchg
mov
in
aas
pop
sbb
adc
pop
xchg
mov
dec
and
arpl
adc
or
lahf
inc
mov
fildl
mull
mov
ja
and
push
int
lret
iret
js
pop
in
pop
sub
push
mov
xchg
mov
sbb
push
nop
pop
and
call
add
shrb
cltd
rcll
sbb
ljmp
es
or
jo
call
cmp
fcmovne
xchg
inc
loopne
or
adc
mov
cmp
es
xor
xchg
fisttpl
std
lahf
fstpt
out
inc
hlt
adc
scas
mov
mov
repz
sub
notl
push
inc
pop
adc
js
cmc
inc
adc
or
push
out
jbe
push
andb
and
mov
popf
popa
dec
sub
fdivrl
add
adc
stos
mov
pop
xor
rolb
push
adcb
ficoml
mov
insb
push
mov
jecxz
js
lret
jno
push
or
mov
sbb
cmp
or
push
or
or
xorl
ret
jg
sbb
cmp
das
je
push
push
sbb
ja
pop
xor
pop
test
cmc
push
imulb
cmc
add
jmp
inc
scas
mov
xor
mov
sbb
pushf
loop
jmp
xchg
mov
adc
hlt
fldenv
and
xor
and
pop
cmp
pop
and
push
jl
or
sbb
fwait
mov
cmp
jl
les
mov
aaa
daa
pop
xchg
xchg
pop
dec
inc
shrl
inc
lea
leave
aas
shlb
mov
rol
sub
push
fnstcw
fdivr
pop
sub
idiv
out
mov
jge
adc
sbbl
add
shr
push
mov
mov
popa
jns
lds
ud1
lret
jae
adc
loope
xchg
add
add
mov
into
push
dec
sahf
xor
xor
lcall
jb
mov
push
add
mov
mov
jns
pop
mov
or
mov
inc
adc
push
ror
imul
xor
in
sbb
push
stos
repnz
imul
xchg
pop
in
fs
sbb
and
fidivrl
mov
lods
cli
retw
test
test
mov
jle
xchg
dec
imul
push
or
shlb
xchg
mov
inc
xor
pop
xor
dec
ret
push
pusha
jnp
iret
outsb
inc
test
jbe
pop
lahf
fwait
push
jae
inc
xchg
mov
cs
leave
aam
rcl
fmull
popf
shll
dec
push
nop
fstps
cwtl
sbb
inc
outsb
dec
call
mov
sub
inc
mov
and
cmp
mov
jne
insb
rclb
sarb
xor
pop
aaa
lcall
cmpsb
loope
and
stos
in
or
inc
add
cwtl
mov
xor
movsl
xchg
int
push
dec
insb
cmp
arpl
test
adc
jo
add
fnstsw
sub
popa
mov
loop
test
dec
das
bound
ret
xor
bound
repz
test
mov
lcall
cld
ja
in
push
loopne
cmpsb
push
in
lret
xchg
lds
shld
and
ljmp
sbb
push
outsb
mov
dec
sbb
sub
adc
into
jo
or
decl
iret
frstor
xlat
sub
sub
and
fnstenv
sub
jns
inc
cmp
mov
rcrb
out
mov
repz
add
lds
dec
mov
jb
subb
and
mov
daa
rcrl
mov
pop
mov
push
decb
pushf
and
xchg
adc
rorl
pusha
rcrl
cmc
sbb
imulb
mov
mov
popl
inc
pop
js
jns
fnstcw
daa
jns
push
and
sub
test
out
loopne
icebp
stos
fisubrs
sub
jne
jge
adc
dec
shr
pop
or
inc
add
pusha
int3
xchg
jl
pop
cmc
xchg
adc
mov
ss
pop
fcom
xchg
outsb
mov
pop
cld
call
sahf
shl
loope
or
mov
ret
rorl
shll
ja
mov
dec
rorb
pop
subb
cs
outsb
int3
int
jnp
xchg
or
imul
dec
adc
cmpl
iret
hlt
sub
and
mov
loop
adc
scas
jo
inc
inc
push
dec
inc
xchg
jl
push
xor
ljmp
xor
sarl
ljmp
repnz
cltd
inc
cwtl
mov
sar
outsl
repnz
bound
xchg
outsl
outsl
stos
and
jle
xchg
cmp
and
out
fsqrt
xchg
dec
clc
enter
leave
cmp
push
or
dec
icebp
leave
mov
jmp
movsb
test
clc
sub
mov
movsl
pop
dec
sub
pop
aaa
add
pushf
scas
ret
mull
dec
add
jb
push
push
inc
add
or
sbb
cmpsl
jbe
mov
push
cmp
call
push
loop
sub
stc
add
sar
and
cwtl
push
push
nop
add
add
sub
popa
js
cmp
push
repnz
hlt
cmp
test
inc
aad
test
sub
shrl
xchg
jns
inc
push
sub
and
in
flds
mov
hlt
mov
pop
sub
xor
gs
lahf
jnp
mov
sub
push
xlat
push
sbb
mov
cmp
dec
jle
inc
add
jne
mov
popa
fs
mov
xchg
mov
mov
pop
ss
ficompl
cmpsb
sub
sub
cmp
cmp
mov
dec
test
jmp
mov
and
aas
call
icebp
fcompl
xchg
loopne
out
mov
iret
lcall
xor
fsts
jne
movsb
in
push
jp
push
inc
cld
out
loopne
xchg
shr
fs
nop
nop
addr16
cmp
dec
push
lds
aaa
adc
mov
fsub
repnz
cli
fwait
popf
pop
sub
leave
push
sbb
pop
cmc
ret
addl
xor
xor
mov
scas
mov
inc
lret
mov
and
das
push
sbbb
pop
cmp
jb
or
push
mov
fildl
movsb
push
aas
in
repz
push
mov
je
sbb
inc
mov
les
mov
mov
sub
or
push
and
push
adc
mov
clc
xchg
push
xor
movsb
cmp
shlb
xchg
add
jnp
mov
aad
mov
lret
imul
jbe
enter
imul
orl
lret
xor
out
jmp
bound
push
repz
shlb
add
inc
mov
dec
sbb
iret
mov
xor
inc
popf
data16
aam
mov
xchg
cmp
rcll
cmp
addr16
sbb
aad
xchg
dec
pop
ficompl
iret
sbb
dec
jb
push
jge
inc
insl
in
fmul
aam
pop
add
jmp
push
hlt
xor
clc
cmovg
or
xchg
outsb
jecxz
arpl
insl
fsubp
xor
movsl
xchg
push
push
mov
repnz
or
and
fcmovu
jecxz
cmc
push
fsubrs
add
xchg
xchg
enter
js
mov
sbb
std
jnp
lcall
popa
mov
or
pusha
inc
inc
test
xchg
pop
jl
test
mov
sbb
data16
out
sbb
cmpb
and
jl
int3
sub
jmp
addb
aad
push
xchg
inc
jo
mov
jge
pop
sub
stos
inc
dec
add
mov
pop
repnz
std
mov
cld
negb
xchg
push
pop
loopne
insb
pusha
cli
or
aas
rorb
sbb
shrb
cltd
stc
sti
mov
in
flds
and
and
movsl
gs
jae
test
sub
jae
adc
jb
push
daa
adc
fcmovnb
hlt
mov
js
sbb
and
mov
push
pop
enter
outsl
rcll
adc
dec
ret
repnz
xchg
or
jae
movsl
dec
xchg
outsb
ret
daa
jbe
rolb
xlat
push
push
dec
jl
inc
out
and
ja
push
nop
jecxz
fwait
shr
cwtl
inc
shrl
pop
clc
and
xchg
pop
pop
cmc
push
fldl
dec
fwait
andb
stos
leave
in
xchg
in
and
bound
cmp
sbb
adc
add
pushf
into
addr16
jb
rclb
call
lods
ljmp
push
test
xchg
std
and
adc
out
gs
inc
mov
lock
sbb
testb
js
mov
adc
cmc
test
mov
lret
mov
out
mov
push
xor
inc
mov
sbb
inc
fwait
push
daa
repnz
mov
adc
loopne
mov
test
dec
or
icebp
dec
lcall
jbe
mov
adc
ficoms
repz
mov
pop
popf
xorl
aad
add
imul
outsl
ror
mov
push
dec
out
xor
cmc
fldenv
xor
je
inc
inc
or
sub
outsl
icebp
out
mov
sbb
pusha
and
repz
mov
mov
imul
mov
mov
test
xor
inc
shr
mov
dec
mov
pusha
test
add
dec
cmp
jo
cli
imul
push
aad
add
or
aaa
inc
inc
sub
or
inc
cmpb
cmp
jno
les
iret
lahf
adc
out
mov
adc
pop
leave
jmp
cli
daa
pop
xchg
mov
cmp
stos
cmc
xor
or
dec
movsl
xchg
out
leave
aad
idivl
shrl
out
mov
arpl
add
bound
dec
xchg
outsb
mov
and
out
leave
sahf
sahf
sbb
fcomps
pop
ret
sbb
push
add
adc
rcll
jmp
inc
mov
pop
add
ss
call
clc
je
pusha
in
xor
mov
jecxz
cwtl
enter
je
in
push
in
in
ljmp
inc
add
out
xchg
sbb
popa
lahf
sub
popf
pushf
jecxz
mov
lret
hlt
shll
stos
aam
xor
pushf
adc
aaa
mov
xchg
jns
movsl
or
test
ljmp
inc
out
fidivrl
xor
inc
jge
adc
jg
sub
jb
orb
mov
ljmp
arpl
repz
adc
fs
mov
imul
fwait
sub
mov
nop
cmp
cmp
dec
aas
xlat
scas
mov
es
lds
xchg
mov
pop
clc
xor
lock
dec
fcomp
mov
or
shl
pushf
cmp
or
mov
rcll
push
mov
daa
push
fwait
shll
mov
out
pop
pusha
hlt
hlt
push
jl
jge
test
xor
divl
mov
fs
stc
arpl
inc
jb
adc
xchg
inc
sub
push
aad
iret
mov
push
imul
movsb
popl
or
stos
sti
or
mov
fdivr
and
idivl
pop
daa
nop
add
shl
push
and
lret
repz
push
xchg
loop
notb
cmp
sahf
enter
cmp
and
outsb
pop
loope
xchg
mov
idivb
in
jp
mov
jle
cmpsl
test
or
fwait
scas
fwait
cli
mov
dec
xor
fxtract
loope
or
push
dec
pop
lret
and
icebp
rolb
xor
lahf
jmp
push
xor
in
jge
mov
pop
dec
and
fcmovbe
push
out
inc
mov
icebp
push
js
and
jmp
fucomi
in
lds
jne
pusha
icebp
fisubrs
add
lods
call
inc
inc
mov
xchg
xor
insl
icebp
cli
inc
das
push
call
xor
xchg
shr
mov
icebp
mov
cmp
jle
in
shrb
push
xchg
dec
nop
mov
mov
cld
scas
dec
or
inc
inc
cmp
fs
pop
sahf
jg
push
adc
cli
cmp
loopne
jno
push
or
xor
subl
and
fildl
inc
cwtl
arpl
sub
sub
xchg
lock
scas
test
repnz
push
cld
adc
in
test
add
cmc
push
mov
gs
mov
lret
mov
mov
xchg
sti
jp
inc
popf
ljmp
movsb
xor
adc
and
xchg
cli
stos
mov
sbb
adc
xchg
mov
xor
cmp
lahf
scas
xlat
cwtl
cmp
aam
cmp
cmp
pusha
ret
jmp
mov
xor
add
in
out
or
jno
dec
repnz
mov
push
mov
and
loop
mul
imulb
rcll
mov
loopne
jnp
cmc
inc
mov
xorl
mov
push
sar
fildll
and
or
repz
in
add
sbb
outsb
add
lret
mov
jb
xchg
pop
inc
test
and
jns
dec
xchg
cmp
loope
loop
jp
ret
push
inc
imul
mov
mov
fs
mov
insl
adcb
lods
cs
mov
loopne
or
out
jno
pop
sub
jp
lret
inc
dec
insb
mov
pop
int3
cli
cli
lods
pop
or
xchg
pop
xor
aaa
in
xor
std
mov
push
loopne
fnstcw
mov
cmp
arpl
sub
and
adc
or
daa
test
cmp
and
hlt
test
dec
mov
xlat
jns
pop
add
imul
mov
lret
out
add
iret
rorl
mov
bound
cmp
out
les
dec
cli
add
xchg
mov
ret
cs
rclb
xlat
fisubrl
mov
xchg
mov
cmp
repz
hlt
mov
scas
fimull
sbb
sbb
add
and
push
cmp
push
fiadds
adc
cmp
mov
mov
test
pop
pop
pusha
sbb
call
sub
xor
out
push
lcall
aas
fmull
std
adc
push
mov
dec
addl
push
push
test
fstpl
dec
cmpsl
dec
les
pop
cltd
fldcw
scas
xchg
pushf
sub
pop
inc
adc
cmpb
fucomip
cmp
mov
jno
mov
test
add
jnp
daa
in
mov
call
push
adcl
pusha
lock
inc
das
cld
movsb
xor
out
ja
icebp
movsb
test
sbb
mov
jne
pop
mov
fcompl
aad
inc
rcrl
inc
addr16
jmp
jnp
mov
test
xchg
xorl
cmp
jge
sub
pusha
add
lds
andb
xchg
jecxz
mov
addb
cwtl
jnp
int3
idivl
repz
dec
leave
out
pop
fcomp
hlt
pop
pop
and
jnp
and
movsl
lea
movb
and
xchg
xor
sub
or
pop
fstps
mov
popf
cs
push
jnp
jmp
cmpsb
mov
dec
std
test
sbb
mov
test
jne
aas
push
jmp
jae
jmp
xor
push
lret
jbe
pop
cli
shlb
jp
gs
mov
jb
push
push
sbb
mov
sub
scas
mov
repnz
pop
jnp
cmp
test
dec
dec
jo
or
jnp
mov
jns
mov
ss
jo
shlb
lock
aam
mul
aaa
in
int3
int3
add
inc
lcall
out
mov
shlb
push
sub
std
push
call
sbb
ret
xor
adc
push
mov
out
push
xchg
and
repz
xchg
mull
sub
les
cmp
imul
push
xor
pop
int
sar
fidivl
leave
and
in
movsb
shrl
aas
jo
mov
das
mov
adc
ret
cvttps2pi
push
into
ret
cmpsb
adc
adc
cmp
cmp
test
cli
cld
mov
je
inc
repnz
pop
sub
dec
outsb
data16
jnp
xchg
popf
iret
sbb
and
add
push
add
cmp
or
fstpt
push
pop
lret
and
lret
xor
sti
lock
inc
and
pop
mov
inc
into
mov
push
into
addps
push
rorb
push
scas
rcrl
aad
movsb
shl
xchg
push
or
xchg
cltd
lods
into
fcmovbe
dec
jnp
das
adc
ds
sahf
push
or
jl
mov
mov
mov
les
inc
out
scas
icebp
fdivrl
leave
dec
xor
inc
sub
dec
rclb
xor
pop
xor
aam
scas
mov
dec
call
cmpsl
pop
addr16
adc
sub
dec
sti
outsl
push
das
aad
imul
and
ljmp
inc
sub
mov
fadds
jns
lret
mov
mov
sub
sbb
jg
arpl
enter
outsb
mov
sbb
mov
inc
xchg
jge
jecxz
push
insb
push
out
je
jne
mov
mov
xor
push
fs
ret
cmp
adc
sub
add
jno
call
push
outsb
je
popf
mov
push
loopne
cli
enter
mov
mov
outsb
mov
sub
es
add
stos
dec
je
and
mov
xchg
sub
loop
inc
xchg
mov
adc
jb
popa
cs
ss
jnp
movsb
aas
mov
mov
clc
iret
mov
sahf
test
scas
sbb
mov
push
jnp
fcoml
sub
das
out
int
int3
in
movl
sub
cmp
es
sub
or
insb
leave
jo
jno
aaa
jmp
xchg
lock
lahf
push
imul
cmpsb
outsl
xor
mov
add
adc
sahf
mov
in
jmp
aad
pop
adc
scas
push
and
out
push
or
lds
in
add
cmp
test
lea
sub
fnstcw
jle
add
cwtl
inc
and
inc
or
jno
inc
pop
bound
dec
lahf
lds
jg
mov
mov
xchg
inc
cmp
nop
jo
imul
test
sub
jge
les
inc
push
in
js
and
sahf
outsl
ret
loop
lret
and
cmc
dec
push
inc
cwtl
sarb
jno
pop
xor
inc
mov
push
int3
add
xchg
and
push
int
es
push
and
fisttpl
jp
cltd
loop
iret
in
inc
fisubl
xchg
xchg
fsubr
add
sbb
bound
stos
inc
stos
cmpsl
mov
int
div
jmp
loop
xor
arpl
cmp
xchg
and
out
xchg
ljmp
cmpxchg
loop
inc
test
loop,pn
int
cwtl
fsubs
mov
pavgw
ja
adc
push
push
sarw
mov
aad
or
push
out
adc
add
lret
lcall
mov
sbb
gs
mov
cmp
adc
test
testl
or
mov
add
xor
cwtl
jp
adc
stc
jmp
cmp
js
inc
dec
and
fidivs
jmp
jecxz
push
insb
sbb
jmp
push
or
mov
cmp
pop
pop
add
je
dec
xor
sbb
sahf
test
aas
nop
jbe
or
jns
sbb
imul
test
sbb
pop
out
std
sbb
mov
in
pop
cmpsb
movsb
xchg
xchg
sub
inc
jnp
and
leave
nop
arpl
mov
shlb
sbb
push
lock
adc
lret
xchg
pop
sbb
or
xchg
testb
fisubrs
jae
cmpsb
inc
imul
test
add
cwtl
sub
mov
push
stos
arpl
dec
out
mov
pusha
sbb
repnz
std
leave
lahf
mov
ds
add
pop
fcompl
xor
stos
in
frstor
adcl
xor
stos
jmp
push
pop
pop
pop
cld
xchg
add
pop
subl
sub
mov
pop
cmp
shrb
xchg
push
je
jb
xor
adcb
xchg
add
pop
cmp
repz
out
add
inc
lods
cmp
fcmovu
mov
cld
add
fldl
outsb
lods
jge
imul
arpl
pop
push
jl
lock
rcrb
and
xor
adc
out
pop
sbb
dec
pop
imul
xchg
out
inc
cmp
cmpl
pusha
and
push
movsb
mov
test
gs
lods
aas
xor
add
dec
repnz
dec
divl
subb
enter
mov
inc
mov
lea
iret
fildll
icebp
fs
testb
add
jmp
push
out
xor
std
push
cmp
cmp
jno
sub
cmp
lea
shrl
add
mov
mov
out
lret
mov
hlt
mov
add
repnz
add
xor
pop
mov
jns
icebp
adc
sbbl
les
in
bound
lahf
push
pop
mov
testl
dec
or
es
pop
or
push
fiaddl
cmpsl
ret
add
cmp
push
fwait
adc
sbb
sti
out
xchg
rcrb
xor
roll
shlb
fisubl
push
fldt
mov
aad
push
mov
and
push
xchg
push
test
jo
cmc
loope
sub
mov
in
add
testb
rclb
add
cmpsb
mov
xchg
xor
in
mov
aaa
imul
cwtl
dec
adc
push
push
push
enter
das
je
nop
mov
push
inc
daa
rorl
xchg
js
add
lds
jns
pusha
in
cmp
popf
test
aas
adc
call
das
push
pop
sub
lret
pushf
cmovbe
and
and
push
je
mov
push
outsl
mov
add
lock
outsb
fisubrl
mov
lcall
sbb
clc
xchg
or
js
js
xlat
push
popa
cmpb
mov
lods
sbb
icebp
mov
adc
dec
mov
pusha
and
sbb
fs
jns
into
xor
pop
xchg
inc
imul
mov
push
pop
loop
mov
mov
lcall
push
mov
sbb
pop
add
inc
bound
mov
aad
ja
std
sbb
les
mov
pusha
pop
in
bound
int
call
jne
and
enter
jle
push
add
ja
push
xor
jb
je
test
cmp
shl
lcall
das
in
mov
xchg
jo
js
xchg
mov
and
push
ljmp
sub
in
mov
inc
in
cmp
mov
aad
push
xchg
add
les
xchg
int3
and
fbstp
pop
or
push
cmpb
popf
fmuls
or
sbb
pop
jle
adc
mov
jmp
xchg
mov
sbb
add
mov
mov
mov
xchg
andb
sub
sarl
out
sub
fdivr
pop
mov
adc
test
add
int
lods
repnz
mov
and
push
pop
inc
jae
idiv
jnp
dec
adc
adc
ret
or
invd
cmp
dec
out
adc
cltd
call
cmc
shlb
mov
xchg
dec
sub
mov
cmp
push
fldt
dec
jnp
cmp
out
sub
sbb
daa
sahf
xor
shlb
xor
cmp
xorl
cmp
inc
add
cmp
xchg
adc
adc
adc
mov
mov
sbb
sub
les
mov
test
icebp
loop
lret
lds
lods
mov
mov
mov
sub
mov
mov
stc
ret
push
pop
lods
dec
push
int3
mov
sahf
ret
mov
cwtl
cmp
je
movsl
jb
mov
dec
mov
shl
enter
dec
pop
push
mov
cmp
pop
xor
push
scas
ret
sub
mov
imul
mov
shrl
adc
scas
sbb
xchg
jb
cmc
sub
sub
and
lds
jae
mov
mov
push
scas
pop
xor
pop
mov
fsubrs
mov
or
sahf
dec
xor
je
pop
aad
push
nop
popf
jb
push
in
into
lahf
lret
ds
lcall
out
xchg
pop
sarb
rorl
addb
mov
xor
pop
incl
dec
push
pop
sbb
das
pop
jnp
mov
xlat
or
pop
dec
sbb
xor
xchg
dec
pop
sbb
cmpsb
jae
adc
outsb
mov
cmp
orb
push
cli
push
outsb
fisubrs
xor
sub
and
sti
inc
cmp
pop
xchg
adc
loopne
aam
sub
lcall
fdivp
pusha
gs
adc
fisttpl
icebp
mov
inc
jns
sti
jmp
test
js
sub
std
out
pop
nop
dec
dec
movsb
je
test
fstpl
clc
popf
adc
pop
icebp
fndisi(8087
xchg
cmp
je
lods
jne
sti
lods
pop
cld
mov
call
cmpsl
fisubs
sbb
mov
das
cld
or
flds
lret
mov
or
xchg
jge
jbe
mov
sub
jo
int
cmc
scas
xchg
push
jge
cmpsb
inc
and
inc
setne
jne
cli
popa
sbb
cmc
mov
add
sub
and
mov
or
mov
fadds
inc
push
loop
rcrb
cmpsb
and
daa
or
or
cmp
inc
addr16
movsb
add
mov
xor
test
inc
pop
and
cmc
xchg
sbb
mov
int3
or
fs
shll
mov
iret
int3
lock
dec
testl
mov
xchg
sti
sub
and
rcl
fiadds
shlb
les
arpl
rclb
or
popa
ja
std
inc
jo
gs
cmp
cmpsb
stc
popa
fldcw
sub
cmp
dec
aam
jns
xchg
mov
dec
jae
int3
insl
xor
inc
xchg
fldl
insb
lahf
fcoms
shll
jmp
adc
popf
std
mov
aas
dec
stos
adc
mov
negb
dec
jae
push
jmp
clc
push
and
shll
jge
cmp
sub
pushf
adc
pop
push
and
sbb
push
push
sub
mov
inc
push
jns
jle
pop
mov
jb
xchg
addr16
aas
add
inc
out
les
sti
ja
sbb
mov
ljmp
mov
jne
ret
xchg
movsb
lea
xchg
repz
shrl
cmc
adc
cmpsb
fdivr
jl,pt
ss
movsl
pop
pop
mov
movsl
adc
fiaddl
cmp
pop
lcall
nop
lods
sbb
cmp
jns
mov
pop
lea
imul
fnstenv
in
stos
scas
out
negl
call
ljmp
sub
jae
data16
cmpsl
ljmp
dec
mov
adcl
cmpsl
addl
sbbb
or
cmp
sarl
rcll
decl
sti
sbbl
mov
ss
cmp
jns
insb
aaa
mov
lock
inc
imul
fsubrl
lahf
xor
popa
xor
repnz
dec
inc
js
add
lret
inc
stos
int3
mov
mov
cmp
stos
repz
add
push
xor
dec
inc
jbe
dec
mov
fildll
test
and
xchg
xchg
lahf
cmp
adc
cmpsb
fidivl
inc
jnp
fimull
xor
mov
subb
rcr
in
mov
cmp
dec
pop
lahf
aam
andb
dec
xchg
test
shrb
and
je
int3
or
and
fldl
sub
loope
daa
mov
push
mov
and
movsb
fsubl
jnp
pop
pusha
jle
and
adc
and
sub
mov
in
dec
dec
mov
leave
mov
das
loopne
fdivl
pop
loope
cmpsb
pop
popf
xor
aam
imul
dec
cli
sbb
mov
and
sti
sarb
and
push
push
inc
pop
dec
or
inc
outsb
xchg
testb
cmp
daa
ja
push
inc
pop
xchg
shrl
loope
neg
dec
movsl
movsl
in
inc
xchg
push
sbb
lcall
dec
ficoml
in
ret
ret
enter
jl
jmp
push
mov
pop
sub
iret
iret
xor
xchg
ficomps
std
push
into
sahf
test
inc
push
xchg
shr
mov
iret
lret
insl
in
insl
xlat
mov
rclb
repz
cs
cwtl
andl
into
and
add
test
jbe
stc
jae
pop
add
jecxz
sti
pop
cmp
or
mov
pop
pusha
adc
int
loop
cmpsb
adc
push
dec
movsl
pop
mov
int
nop
and
jnp
sahf
push
sbb
or
inc
shrl
ret
lds
jne
sbb
popa
ss
js
movsb
jmp
into
into
gs
in
sub
fistps
cli
inc
xor
xor
lock
xchg
mov
neg
dec
jno
mov
jno
jnp
jbe
mov
test
out
mov
fldenv
aam
daa
jbe
mov
lds
jb
aad
cwtl
cs
xor
pop
in
jo
sbb
out
jnp
sbb
xchg
aam
pop
mov
sub
shrb
daa
sub
mov
in
call
popf
inc
loopne
out
mov
xchg
cmpsb
mov
dec
daa
sub
pop
arpl
inc
pop
inc
push
xchg
xor
stc
in
popf
sarl
loopne
iret
dec
jl
fwait
dec
dec
sub
sbb
mov
sbb
call
es
push
jnp
xor
add
or
aaa
mov
popa
int3
out
shrl
aaa
and
stos
shrl
out
mov
xchg
pusha
sti
sub
sti
cmp
cmp
pop
xor
pop
aas
mov
lcall
xor
test
mov
dec
ret
les
fucom
nop
pop
lahf
popa
out
push
in
mov
sub
xchg
fdivrl
mov
adc
popf
and
xor
pop
sub
add
cltd
add
add
add
pop
test
mov
inc
mov
aam
or
mov
pop
bound
push
xor
pop
mov
add
push
movsb
and
dec
push
inc
pop
jg
pop
pop
mov
push
push
in
out
fwait
mov
mov
jno
jp
jo
mov
bound
add
add
rorl
cmp
and
sbb
add
mov
aam
fwait
jge
arpl
push
xchg
lcall
repnz
xchg
xchg
adc
pop
xchg
insl
push
sub
sbbb
cwtl
daa
ljmp
push
cmpsb
mov
adcb
add
fmuls
pop
stos
mov
mov
sub
fmuls
mov
mov
sbb
pop
sub
testb
pop
or
sub
cmp
aad
sbb
lret
in
cmp
dec
mov
inc
adc
adc
mov
adc
clc
inc
jmp
repz
sub
adc
sub
cmc
adc
push
pop
mov
sahf
daa
jb
ja
cmpsb
out
inc
sub
cmpsl
and
xchg
cmp
pop
and
je
jne
mov
and
and
sbb
mov
push
ss
call
jns
fstl
cli
cli
push
pop
in
push
add
imul
rcrl
stos
inc
shr
cltd
shlb
mov
adc
ja
jmp
mov
in
ja
sub
cmp
stc
mov
jnp
push
mov
sbb
mov
or
mov
jge
sbbl
jns
daa
dec
insl
and
and
inc
shrl
out
mov
out
lods
sbb
push
push
jecxz
int3
jle
lahf
lret
in
adc
bound
data16
xlat
push
mov
push
shrl
jle
xchg
mov
adc
and
pop
jg
faddl
add
cmp
out
jb
xchg
movsb
jge
push
push
xor
pop
add
mov
inc
xchg
mov
jge
or
add
imul
ja
inc
sub
mov
in
lea
sbb
jbe
cmpsb
dec
jne
sub
ja
jno
and
loope
rolb
adc
jecxz
jbe
sub
sub
test
stc
inc
andl
jl
scas
xor
filds
mov
fisttpll
outsb
es
pushf
push
test
in
imul
orb
sbb
ss
sbbb
and
cli
or
pop
in
xchg
test
into
and
add
into
xor
dec
mov
push
push
test
stc
cwtl
sub
fs
inc
cld
iret
stc
aad
movsl
out
fldlg2
into
in
fistl
sub
imul
xchg
in
inc
add
movsb
std
jle
dec
xchg
in
add
and
stc
lock
daa
or
mov
mov
mov
fisttpl
push
xchg
add
push
mov
cmp
test
xchg
test
std
pushf
lods
inc
lea
repnz
aaa
addr16
pusha
jnp
icebp
nopl
sub
mov
ret
sti
or
out
call
popf
jg
cli
call
jmp
and
imul
pop
testb
sbb
ret
pop
loopne
data16
jo
mov
popf
and
adc
add
test
lret
les
mov
adc
sarb
and
imul
inc
cmpl
add
es
xchg
das
outsb
fiaddl
mov
xor
sbb
in
ret
nop
out
xchg
push
and
das
or
push
in
mov
clc
bnd
pop
or
test
pusha
or
aad
bound
mov
ss
add
push
clc
xchg
loopne
push
sub
mov
push
add
xchg
pop
out
mov
or
push
mov
push
sub
xchg
push
stos
xor
mov
pop
adc
or
lock
mov
aaa
out
ret
mov
mov
mov
lock
inc
pop
jo
or
fwait
inc
cmc
pushl
sbb
pop
mov
cmc
mov
in
and
outsb
xchg
stos
arpl
jecxz
mov
adc
sub
int3
push
call
aam
xlat
outsb
inc
push
jg
loope
popf
adc
fsubl
addr16
lods
push
dec
push
jno
test
std
jge
jmp
imul
jmp
jbe
pop
inc
into
leave
out
les
push
xor
push
aam
fldt
push
xchg
adc
subb
negb
fs
daa
addr16
push
mov
mov
dec
xor
jg
shl
sbb
jo
movsb
ja
push
and
or
or
adc
rclb
out
lcall
in
or
sti
xchg
or
jge
addb
push
in
mov
fildl
sbb
js
idiv
enter
fisttps
inc
testb
cli
js
jo
dec
cmpsl
cmc
inc
jge
mov
and
adc
inc
adc
cmp
jle
cmp
out
sub
into
dec
dec
xor
inc
xor
cmp
mov
daa
dec
sbb
mov
lcall
adc
add
sub
adc
icebp
sbb
mov
lods
in
xrelease
cmp
fxch
sbb
xchg
dec
pop
cltd
rcrb
dec
cmpsl
sub
push
xchg
push
outsl
push
jg
sbb
scas
pop
pop
mov
jmp
push
xchg
mov
mov
cmpsb
aaa
xor
lret
or
sbb
jge
std
fldl
or
cmp
fwait
pop
push
negb
xor
sbb
mov
hlt
sbb
sarb
imul
cwtl
push
les
jg
adc
jbe
push
xchg
mov
sarb
sahf
mov
scas
popf
divb
ficoms
inc
cmp
cltd
mov
sub
xchg
or
xor
bound
dec
jp
cli
sbb
stc
movsl
sarb
push
push
cmp
dec
cld
cmp
sbb
inc
and
int
adc
stc
sbb
aas
jp
mov
fnstsw
popa
jmp
into
mov
lods
mov
in
pushf
out
and
mov
fs
mov
pop
int3
cmp
push
mov
scas
mov
addr16
je
popa
decb
cmp
jmp
test
adc
imul
xchg
iret
jnp
in
add
pop
push
int
test
popf
inc
mov
test
and
test
lahf
push
dec
push
push
mov
jne
vmovntps
sub
fisttpl
pop
fstpl
in
popa
rcr
out
bound
out
in
xlat
nop
mov
fyl2xp1
or
das
daa
in
cli
mov
add
rcl
test
repnz
add
mov
cmp
movsb
inc
xchg
roll
cmpsb
int
out
dec
jmp
mov
xlat
pop
lock
xchg
fs
shrb
insb
test
adc
hlt
std
nop
lahf
cmp
sub
das
inc
or
in
mov
imulb
mov
in
adc
jle
addl
inc
int
lcall
or
jmp
sbb
ds
xor
lahf
jo
cmpsl
aam
fidivrs
repnz
or
negl
sub
cmp
sahf
pop
xchg
jp
aaa
mov
jp
sub
subl
cmp
idivl
push
add
cwtl
pop
jg
mov
in
lahf
mov
add
sub
test
jp
mov
lret
ds
push
push
outsb
cmp
ret
cmp
aad
outsl
mov
lcall
and
sbb
test
pop
jmp
jecxz
mov
adc
aad
pop
pop
nopl
sub
lods
dec
popf
idivb
jmp
imul
shrl
popa
outsb
mov
adc
je
mov
int
lea
ret
cmpl
push
clc
ret
cld
mov
rol
sbb
call
leave
jbe
lock
cmp
mov
dec
xor
std
or
dec
arpl
into
inc
push
and
rorb
pop
out
mov
push
gs
ljmp
mov
repz
mov
inc
mov
repz
pop
shl
int
sbb
jo
adc
sbb
adc
pop
jae
xchg
icebp
fsts
fidivl
dec
mov
pop
fs
insb
pop
mov
push
pop
stos
dec
fsubl
testl
mov
mov
fnstcw
xchg
adc
aad
test
cmp
mov
fs
aas
in
int3
pop
in
jne
mov
nop
fadd
daa
xor
test
cli
or
lds
clc
rol
dec
std
loop
mov
arpl
pop
loop
push
sbb
push
or
shll
xchg
push
mov
cltd
push
jne
push
push
add
clc
pop
leave
cmpb
and
mov
dec
push
fcomp
pop
fs
enter
insb
out
mov
cmp
jne
push
jmp
xchg
lds
cmc
cs
mov
pop
mov
icebp
call
xorb
push
out
aas
pop
adc
mov
mov
adc
mov
sub
push
out
or
xchg
xchg
repz
addr16
pop
mov
in
icebp
fwait
rcr
shlb
enter
clc
fmull
xor
in
dec
mov
inc
sub
mov
and
ror
mov
or
test
cmp
aam
and
jne
add
ret
in
pop
add
leave
and
gs
jge
add
dec
push
ljmp
aad
sbb
stos
lods
stos
xor
fstp
jecxz
jl
dec
mov
xor
int3
out
movsb
and
sarb
rcr
divb
inc
mov
push
int
scas
mov
mov
inc
mov
adc
add
insl
pop
lcall
je
sbb
and
test
push
cmc
sbb
mov
cmp
xchg
add
sbb
inc
inc
or
jp
aaa
imul
cld
cmc
sub
add
rcll
dec
lods
inc
nop
test
xor
push
pop
push
mov
mov
stos
xchg
loope
xchg
inc
imul
js
sub
adc
scas
cmpsb
and
inc
or
bnd
es
cld
dec
xor
jo
sub
pop
repnz
sbb
es
lock
jg
cs
pop
push
dec
mov
cwtl
ss
insl
test
testl
bnd
cmp
xor
dec
ds
cmp
mov
pop
ret
push
ja
mov
pop
dec
loopne
pop
inc
es
cmpsl
repnz
xchg
loope
insb
jne
enter
mov
pop
ret
rorb
pushf
xchg
rolb
clc
pop
imulb
das
mov
iret
fistl
inc
xchg
adc
clc
jne
push
fwait
xor
mov
icebp
mov
mov
sbbl
aad
push
xchg
es
insb
push
xchg
pop
xchg
popa
xchg
sub
imul
cmp
das
test
sbb
insl
xchg
js
jecxz
add
imul
cmp
cmp
mul
lock
fidivrs
push
sub
adc
push
test
and
mov
scas
push
push
outsl
or
pop
push
movsl
adc
dec
popa
out
shl
xor
js
add
and
sbb
inc
mov
in
frndint
enter
push
cli
rorb
sbb
inc
xchg
or
push
pop
andl
xlat
mov
inc
mov
or
pop
sbb
les
stos
add
lret
lock
push
push
out
test
test
push
roll
cld
mov
inc
mov
movl
ds
lods
aas
cld
xor
imull
add
xor
arpl
pushf
pop
fimull
mov
dec
int
mov
clc
inc
stc
testl
enter
mov
test
sbb
ret
icebp
mov
leave
jne
mov
fnsave
jg
or
scas
pusha
add
adc
mov
mov
in
std
add
int
inc
in
stos
lahf
je
xchg
into
imul
popa
out
sbb
or
mov
lahf
xorl
xchg
mov
loopne
in
pop
push
ss
les
jg
icebp
xlat
push
test
xchg
pop
pop
mov
lods
cmp
loop
gs
stos
xchg
mov
adc
jo
add
mov
test
ljmp
scas
gs
adc
ja
stc
ja
or
lret
stos
dec
cmpl
push
pop
sub
sub
mov
xor
movsl
inc
in
or
fwait
stc
push
sti
test
cmp
inc
xor
xorb
mov
add
add
mov
cld
or
cmp
sub
pop
push
push
rcr
out
loopne
ret
mov
pop
shrl
pop
cmpsb
lret
jae
dec
das
sbb
xor
cwtl
sub
data16
mov
rolb
mov
or
sbb
cmpsb
aam
jb
outsl
imul
mov
leave
sbb
idivl
cmp
and
mov
push
or
mov
je
inc
sub
push
iret
mov
rcll
or
xor
lods
sti
cmp
in
int3
rcrb
js
pop
sar
dec
fcomip
dec
pop
mov
jmp
lds
jbe
inc
stos
idivb
mov
xchg
dec
xor
cmpsl
sub
xor
inc
stc
js
jbe
inc
add
xchg
jmp
pop
add
rorl
push
out
daa
notl
add
ret
sbb
bound
sbb
lret
ret
xchg
jmp
outsb
mov
movsl
bound
loop
mov
repnz
xor
sub
pop
mov
ja
jp
cmp
out
pop
mov
sub
xor
mov
test
int
add
xor
fcomi
lcall
enter
or
inc
xchg
ds
xchg
cmp
arpl
idivl
pop
pop
mov
pop
ficomps
pop
popf
scas
scas
mov
mov
pop
loopne
enter
adc
mov
cli
insb
fidivs
sub
sub
adc
je
jae
push
or
xchg
xor
movlps
mov
out
push
inc
push
ret
idiv
and
cmpsb
adc
addl
inc
jno
imul
rep
jge
jae
nop
pop
adc
dec
repz
inc
idiv
xchg
call
les
ficoml
into
movsl
shll
mov
pop
push
sbb
cld
fcomp
xor
xchg
inc
loop
nop
pop
push
call
test
bound
mov
mov
jmp
sti
fbld
jo
in
ljmp
push
lret
ret
pushf
mov
add
push
iret
or
mov
rorb
dec
sbb
xor
enter
push
or
sbb
xchg
mov
test
mov
in
loope
or
sahf
dec
rolb
pminsw
lods
inc
test
in
fnstcw
nop
pop
mov
adc
hlt
bound
inc
add
mov
and
sub
sbb
mov
pop
cwtl
and
into
decl
and
hlt
inc
jp
mov
pop
lea
or
mov
cmc
movsl
imulb
mov
push
lcall
and
mov
je
stos
pop
lds
jge
inc
jg
fbstp
inc
cmp
jnp
int3
pop
pop
addr16
mov
cmp
clc
xor
push
pop
xor
pop
mov
pushf
and
stc
xchg
pusha
std
incl
idivb
arpl
inc
mov
movl
sub
rorl
mov
imul
sub
mov
lcall
rcrb
mov
pop
push
cs
pop
repz
mov
jmp
and
mov
stos
jp
cmp
mov
xor
mov
lahf
mov
push
adcl
out
jl
jno
jnp
mov
scas
inc
mov
pop
test
cmp
and
cld
dec
fiaddl
jmp
sbbl
incb
push
test
pop
xchg
or
mov
lea
push
dec
stos
aad
mov
mov
push
mov
cs
add
int
cmp
push
aad
sahf
scas
imul
ds
sub
mov
out
jae
add
ds
jnp
cmpb
mov
fmul
daa
sbb
bound
mov
mov
add
push
inc
jns
xor
mov
sub
mov
mov
add
xlat
shr
test
pop
fs
adc
lods
in
mov
stc
scas
cmpsb
xchg
pop
sahf
or
addr16
js
or
lret
pop
mov
test
cltd
jmp
jb
and
cmp
push
in
js
lret
xor
imul
jo
dec
cmp
inc
fwait
rolb
sbb
daa
fisubl
push
stos
push
sub
fmul
ficoms
cmp
das
jle
dec
frstor
vpshlw
xor
bound
test
mov
movsl
mov
and
xchg
scas
pop
loope
clc
outsl
pop
add
jle
inc
jae
add
fnstenv
rcl
paddq
cmpsb
adc
out
xchg
push
les
repnz
inc
daa
sbb
cmp
enter
and
jg
lea
add
jmp
sarl
add
push
dec
inc
scas
decl
add
pop
ret
jmp
stos
gs
bound
mov
mov
jecxz
out
shlb
inc
sti
pop
add
leave
sub
ret
clc
xchg
cmp
outsb
nop
push
xor
sub
jge
cld
fidivl
loope
cmpb
xor
outsb
repnz
incb
adc
ljmp
cmp
cltd
fldt
jnp
bound
gs
lods
or
inc
pop
fiaddl
cwtl
cmp
mov
fistpl
lock
inc
xchg
ret
xor
data16
cmp
and
aam
mov
out
mov
push
fdivrs
sub
loopne
cli
inc
xchg
shll
or
push
shrl
mov
xor
inc
fldenv
sub
aad
loopne
or
int3
sar
pop
lahf
add
sbb
fninit
insb
jno
inc
nop
lcall
mov
jae
mov
stos
ja
imul
call
and
add
xlat
lods
jge
mov
cmp
movsl
jnp
xchg
ret
addl
mov
push
or
pop
pushl
mov
add
imul
cmp
incb
dec
std
sahf
or
xor
cmp
out
adc
adcl
add
cld
jp
fisubs
mov
xlat
mov
call
xor
les
or
loope
or
cmp
xor
lret
push
jecxz
dec
rcll
mov
lahf
sahf
lods
test
ljmp
adc
add
or
int3
idivb
inc
pop
or
mov
mov
fsubl
dec
mov
xlat
mov
adc
fcomi
shl
shrl
aas
ja
add
mov
lret
xor
and
std
imul
sbb
jge
adc
movsb
xchg
xchg
dec
movl
loope
xabort
and
cmpsl
daa
mov
cmp
dec
popf
leave
pop
xchg
jle
movsl
std
fdivp
aas
adc
leave
add
iret
pop
xor
les
mov
xor
inc
out
xchg
dec
xchg
jae
cmp
pop
jmp
sub
mov
jp
fdivs
sahf
cmp
adc
sbb
pop
insb
xchg
mov
pop
mov
outsl
pop
imul
movsl
push
push
addr16
add
pop
mov
jns
lods
mov
movsb
movsb
mov
out
or
jb
gs
cmpsb
cmp
xorl
orl
push
push
jmp
es
lock
out
jle
mov
inc
and
inc
ss
scas
test
and
adc
fists
bound
add
add
jmp
sub
sbb
pop
inc
xor
adcl
xor
aaa
cli
pop
pop
int
jbe
repz
test
xchg
stc
dec
and
xchg
and
dec
call
mov
jp
pop
pop
bound
lods
jecxz
cld
rcrb
lret
pop
push
lcall
in
ret
repnz
ljmp
jae
jmp
push
xorl
push
add
cmp
shll
ret
push
jmp
test
adc
pop
repnz
add
leave
ficomps
add
in
aas
negl
jb
or
and
std
icebp
add
cmpsl
dec
cmp
int
mov
jbe
sbb
pop
sbb
xchg
mov
movsl
sub
loop
dec
add
decb
scas
adc
mov
mov
andl
imul
lcall
in
les
aaa
std
pop
ss
jge
outsl
inc
mov
bound
into
repz
jmp
dec
mov
push
xchg
movsl
jl
iret
mov
lea
push
movsl
pop
insb
jo
xchg
pop
mulb
int
mov
push
xchg
or
int3
mov
fnsave
fsub
xadd
call
dec
cmp
out
push
testb
cmpsl
cmp
dec
xchg
mov
sub
mov
adc
outsb
pop
sub
mov
pusha
mov
push
outsl
cmpl
jg
xor
divl
cs
mov
lods
negb
cmp
test
cmp
push
mov
and
movsb
dec
add
sub
mov
and
fisubs
sbb
sbb
add
test
xchg
mov
cltd
cmpsb
repnz
out
addr16
das
push
push
fldt
xchg
cmpsb
in
pop
data16
movsb
fwait
ret
ja
fsubs
and
xchg
mov
shrl
or
lret
cmp
xchg
sub
hlt
mov
pop
pop
inc
cmp
add
iret
adc
test
stc
add
ret
lock
mov
aam
sbb
xor
les
cmp
jno
out
iret
fcomps
shl
inc
inc
push
and
clc
lret
imul
inc
lcall
sbb
sbbb
out
fimuls
mov
ret
and
scas
testl
gs
lods
out
mov
mov
sub
cli
cmpsl
cmp
sub
xor
pop
push
cmp
les
dec
xchg
jecxz
mov
mov
fimull
xor
insl
push
subb
mov
pusha
shll
jno
pop
sub
adc
imul
mov
stc
fcmovu
aad
inc
xlat
jns
gs
mov
das
cli
ficoms
test
movsb
jg
pop
jp
push
cltd
push
je
mov
sbb
sbb
and
mov
jecxz
enter
stos
movsb
jb
push
fdivr
mov
cmp
mov
ret
test
inc
xchg
mov
xor
push
aam
and
sub
mov
adcl
sarb
mov
frstor
xchg
popa
sub
pop
xchg
jb
sub
mov
movsb
or
mov
sahf
fcompp
xchg
lcall
lahf
xor
outsl
cmp
or
jp
les
mov
test
daa
fsubrl
fsts
sub
inc
rolb
stos
push
xor
cwtl
push
test
sub
jle
clc
mov
aad
xor
sti
into
push
loope
arpl
test
out
lds
mov
sub
xor
xor
jg
cmp
lret
push
mov
mov
ss
jb
and
lods
fdivrp
push
test
jb
cwtl
cli
data16
lcall
adc
test
xchg
adc
xor
out
popf
mov
scas
mov
std
cmp
or
mov
out
xor
xor
and
pop
lds
jnp
cmpl
jp
jle
xchg
mov
pop
cmpsb
push
ds
or
jne
int
pop
adc
add
nop
cmp
mov
aas
adc
test
into
pop
aam
add
jmp
mov
pop
pop
mov
lods
push
push
clc
mov
adcl
add
pop
sti
fwait
out
dec
nop
and
jl
mov
pop
xor
aam
aad
mov
mov
fsubs
push
xchg
adc
and
popa
aad
rorl
sbb
jl
dec
icebp
sub
or
mov
jns
pushf
ret
filds
cmpsl
and
adc
xchg
pmaxub
insb
xor
jnp
push
pop
jne
test
adc
addl
shl
mov
sub
inc
dec
add
mov
js
je
mov
aam
scas
push
fldl
addr16
cmp
lcall
mov
jecxz
jle
nop
ss
sub
push
adc
xchg
push
mov
add
and
mov
lock
or
int3
push
rolb
out
xchg
dec
cmp
jp
dec
lahf
fldenv
sub
ljmp
addl
jge
andl
aad
cwtl
sbb
add
mov
movsl
mov
lret
adc
sarl
imul
mov
nop
lock
jmp
mov
sbb
lret
es
cltd
lret
jae
stos
pop
mov
mov
outsb
sbb
popa
push
into
pushf
add
outsl
push
mov
fistpll
out
popa
lcall
xchg
mov
inc
mov
push
xchg
pop
mov
adc
loopne
push
xor
inc
push
push
jbe
aam
in
loop
stc
push
mov
outsl
sub
test
les
pop
pop
cmp
gs
imul
repz
xchg
cmc
cmp
out
push
xchg
xchg
hlt
mov
stc
and
push
sub
sbb
mov
push
add
rcl
jne
add
mov
in
movsb
pop
mov
xchg
ja
sub
or
clc
mov
or
jg
cli
pop
clc
pop
mov
ret
or
out
test
cmp
sub
js
mov
int3
or
lods
test
xor
outsb
rcrb
movsb
adc
lds
jmp
nop
jmp
mov
and
pop
pop
pop
je
cltd
cmp
shlb
push
mov
pop
cmp
loope
fstl
inc
push
adc
push
test
xchg
sar
aad
fsubl
popf
push
cmp
inc
jmp
scas
jns
test
test
jmp
loop
or
pop
xlat
adc
fimull
jnp
rcrb
and
jno
dec
stos
in
gs
imul
pop
or
mov
inc
in
enter
adc
sbb
mov
popa
pop
clc
js
jb
adcb
or
cmpsl
push
mov
mov
sub
lea
arpl
mov
out
int3
sbb
lods
push
aas
ds
rclb
cmp
ret
mov
push
xlat
or
es
xchg
sbb
popa
jge
ds
sub
mov
in
shll
cmc
movsb
mov
outsl
adc
xor
xor
pop
repnz
pop
mov
cmpsb
mov
cmp
xchg
dec
sbb
push
cwtl
or
mov
fcomip
xor
ret
pop
out
jbe
cmp
in
and
mov
je
dec
push
xor
inc
xchg
xor
jno
or
push
insb
ja
test
aad
in
lods
inc
ds
mov
cmpsl
dec
arpl
push
xchg
in
pop
in
xchg
inc
stos
dec
int3
addr16
inc
lret
ret
push
or
jmp
pop
jbe
inc
push
jl
and
adc
enter
jne
push
movsb
xor
into
mov
inc
adc
pop
sti
sbb
scas
out
lods
push
icebp
add
lods
sub
mov
fld
mov
rorb
inc
shrl
into
shl
fs
ds
pop
mov
or
sarl
int
push
enter
push
icebp
in
pop
test
push
lock
data16
fstps
cmp
xchg
pop
sbb
cmp
push
cld
aaa
mov
pop
out
mov
or
xchg
push
or
cmc
rol
outsb
and
sub
inc
cmpsl
cmp
daa
sahf
lcall
push
mov
jl
and
roll
je
push
leave
test
pop
movsb
gs
sub
mov
dec
jbe
out
popf
xchg
add
insl
std
add
mov
popa
or
dec
pop
inc
xchg
jo
fbld
repnz
lds
push
mov
pop
mov
jmp
fwait
adc
aam
cltd
enter
test
add
dec
mov
or
mov
mov
aaa
xor
out
in
shrb
into
mov
sbb
mov
dec
repz
sub
push
lcall
cli
call
decl
xor
inc
call
adc
and
xlat
gs
xor
xor
jg
xor
enter
or
stos
adc
dec
lahf
mov
push
js
pushl
jo
add
pusha
xor
orl
add
xchg
loop
imul
jo
repz
subb
pop
mov
dec
hlt
inc
cmp
shll
jo
iret
push
cmp
sub
fistpl
mov
rolb
mov
mov
jb
pop
push
fs
rorl
rolb
loop
push
loopne
sub
ret
adc
push
mov
cmpb
add
or
jnp
xor
imul
scas
jmp
mov
push
test
xchg
hlt
and
nop
movsl
xchg
loop
ret
mov
mov
int3
ljmp
cld
xchg
adc
mov
push
mov
rcll
and
adc
adc
ds
cmp
insb
ljmp
addr16
in
mov
loop
and
add
vdivss
pop
mov
jo
mov
xor
mov
cmpsb
push
cmp
daa
nop
sub
leave
or
outsb
in
ret
and
jmp
aad
dec
push
sub
ds
je
clc
loopne
sahf
push
mov
sub
jecxz
ds
insl
sti
jns
pop
pop
pushf
and
ret
js
enter
sbb
out
sub
jecxz
dec
xchg
int3
and
push
adc
lcall
push
mov
sbb
mov
add
lahf
push
push
cmp
daa
mov
jle
test
sbbl
dec
inc
xchg
jns
notl
stc
adc
jo
and
sub
mov
in
mov
cwtl
xchg
mov
xchg
xor
push
sub
int3
test
into
adc
repz
scas
dec
jecxz
test
sbb
push
in
mov
push
movsl
test
push
pop
xor
lds
inc
push
add
ret
sbb
push
outsl
pop
lods
jo
jo
adcb
adc
out
push
sti
ss
xchg
push
adc
insb
mov
test
bound
lret
test
sbbb
notb
push
cs
push
xor
sarl
xor
shrb
jle
or
jns
jl
dec
repnz
popf
cmpsl
sub
inc
adc
push
xor
mov
ljmp
mov
pop
lcall
adc
jg
cmpsb
clc
out
or
mov
mov
push
xor
loopne
mov
xchg
xchg
subl
ret
xchg
push
push
mov
fistps
ret
xor
cmp
jge
loop
inc
cs
addr16
mov
xchg
cld
ja
das
xchg
fs
jge
inc
inc
fstpl
addr16
mov
sarb
pop
sbb
es
aad
stos
adc
dec
pop
arpl
dec
out
out
daa
sub
or
push
pop
or
into
fcmovb
mov
enter
fstpl
xor
mov
sbb
jecxz
test
jbe
inc
aad
pop
push
imull
xchg
sub
aaa
sbb
scas
jo
sbb
inc
sbb
test
mov
insl
mov
mov
aaa
icebp
aas
mov
add
push
push
push
push
negl
nop
mov
int3
xor
cmp
cmp
bound
mov
ljmp
push
sbb
rcll
adcb
notb
addb
inc
out
mov
xor
or
sub
lea
or
mov
cltd
ljmp
xchg
xor
movl
test
aad
add
sti
mov
out
push
cmpsb
add
idivl
lods
push
and
and
jmp
rorl
lods
rorl
jae
or
dec
xchg
popf
pop
cmc
dec
adc
mov
das
pop
add
test
imul
push
scas
push
and
sbb
dec
adc
icebp
test
xor
popf
enter
add
or
push
mov
pop
test
jmp
bts
aas
or
stos
mov
hlt
inc
cli
jae
pop
dec
ret
jo
inc
testb
loope
or
pop
ds
sahf
inc
sub
jl
lods
lret
adc
leave
mov
mov
leave
inc
xchg
bound
test
fs
fnstcw
xchg
mov
popa
pusha
dec
in
je
sahf
imul
fmulp
mov
jb
mov
fimuls
inc
movsl
js
imul
in
pop
dec
fs
cmp
or
fwait
xchg
pop
adc
mov
mov
push
insb
dec
shll
stos
lret
adc
cwtl
mov
xchg
and
lods
mov
in
addr16
mov
dec
dec
ds
xchg
aam
movups
into
adc
dec
test
pushf
add
xchg
jmp
jns
fld
xchg
or
push
mov
lret
shll
dec
add
inc
nop
clc
push
or
xchg
in
cmp
mov
sbb
je
add
xor
test
sbb
dec
fmuls
sarb
out
aas
lahf
andnps
jno
test
inc
jne
aaa
icebp
inc
mov
mov
shrl
repz
das
xor
hlt
xorl
jo
pop
pop
sbb
add
pop
mov
mov
fs
jno
sbb
movsl
ds
xor
dec
lds
dec
mov
xorl
hlt
pop
scas
cmc
mov
scas
pop
vcvtpd2psy
inc
scas
pop
pop
aad
in
jns
pushf
mov
add
and
mov
jg
pop
or
lret
jb
fadd
test
mov
lea
sbb
sub
ljmp
stc
sbb
daa
pop
mov
fwait
in
pop
xchg
out
pop
hlt
mov
xor
test
xlat
repnz
xor
or
inc
les
dec
mov
fistpll
fnstsw
aas
clc
int3
out
mov
sbb
adc
push
test
pop
inc
cmpsl
jno
mov
mov
pop
ss
fildll
mov
ss
lods
in
in
jno
adc
leave
xor
insl
shrb
jg
sahf
mov
iret
mov
sbb
testl
les
lahf
dec
push
data16
dec
cmp
shrl
pop
aam
push
mov
push
outsb
sub
xor
mov
loop
mov
shll
adc
mov
mov
push
add
sub
xchg
push
cmp
icebp
ret
ja
mov
mov
jg
xchg
lods
mov
mov
addl
repz
testb
stos
repz
shll
nop
lahf
loope
movb
lods
cwtl
cmpsb
out
push
mov
mov
stc
test
ret
lahf
mov
xor
or
sbb
mov
xchg
ret
das
push
call
scas
sub
fldt
jae
fidivrl
xor
sub
push
orl
sti
call
stos
jge
movsl
push
xor
jecxz
xor
sub
push
aam
sbb
pop
insb
pop
sarb
subb
call
into
push
insb
jne
sbb
movsl
data16
inc
js
mov
mov
test
aad
adc
jno
lea
clc
leave
mov
loopne
sub
mov
test
cmpsl
ljmp
mov
lock
inc
mov
cli
sbb
mov
xlat
or
fxch
add
jnp
std
aaa
inc
nop
adcb
scas
rcrb
movsl
movsb
fildl
js
mov
push
sbb
sti
adc
sbb
es
and
pop
daa
push
out
xlat
pop
pop
add
pop
mov
test
jg
enter
push
cmc
and
xchg
imul
ljmp
repnz
enter
xchg
scas
jno
pop
dec
pop
xchg
mov
lcall
insl
cli
mov
push
pop
sbb
outsl
mov
cmp
cmp
xchg
add
stos
mov
rcrb
arpl
xorb
mov
dec
mov
into
or
scas
fsubl
pop
dec
push
inc
mov
mov
push
sub
lods
pop
jge
xchg
cmp
add
xchg
pop
jmp
mov
adc
idivl
dec
aam
push
stos
imul
mov
pop
mov
xlat
adc
fisttpll
movsb
std
aaa
fucomp
insb
or
sahf
out
sbb
fbstp
push
and
add
jo
leave
xchg
out
push
push
sub
push
push
lcall
cltd
or
xchg
xor
insb
inc
ljmp
out
or
cmp
ljmp
lock
icebp
cmp
adc
sub
je
add
stos
sbb
shlb
nop
addb
or
mov
push
das
ds
in
cmp
jb
sbb
cmp
xchg
bndldx
shll
sbb
imul
xor
loope
ror
mov
sbb
cmp
mov
clc
jp
repz
jl
cmp
lods
mov
mov
cmp
mov
test
addr16
loop
push
cmp
sbb
nop
adc
cmp
pop
adc
push
outsb
mov
xor
push
push
sti
ljmp
push
or
clc
fsubrs
and
gs
and
addr16
and
insb
mov
fistps
daa
jb
cld
dec
cmp
out
cvtps2pi
jecxz
scas
das
sti
pop
push
lret
aaa
outsl
enter
insl
xor
inc
lcall
inc
add
jnp
loop
jmp
mov
cmp
out
sbb
fbstp
pop
mov
adc
test
pop
jg
iret
inc
stc
insl
nop
sub
scas
cmp
test
aas
jle
ja
adc
repnz
fucomp
cmp
pop
pop
aad
push
lock
sbb
out
mov
leave
ret
push
pop
cmpsl
sbb
fnsave
decb
test
ss
cmp
stc
inc
in
jmp
sub
fstpt
cmp
adc
jg
mov
pushf
cmp
fisttpll
out
sbb
lock
clc
cmp
test
xchg
orb
xchg
adc
pop
jns
add
or
loop
sbb
movsl
sahf
int
clc
in
xorb
andl
xchg
xchg
fsubl
inc
addr16
mov
in
rcr
nop
xchg
push
adc
cmp
mov
test
lret
push
push
stc
ret
leave
out
adc
in
xor
sub
adc
adcb
sbb
mov
cmp
out
clc
aad
ljmp
adc
jne
or
xor
mov
ret
fcmovnu
sub
push
mov
cmp
dec
pop
dec
push
xor
jo
mov
ljmp
ss
out
jl
stc
inc
jge
and
jns
mov
fs
lds
pop
adc
insl
pop
xchg
and
psrad
xchg
je
inc
into
mov
or
push
mov
push
iret
mov
jp
imul
or
pop
frstor
mov
fldl
dec
cmp
xor
arpl
incb
ss
jbe
sub
aam
sub
sub
sub
jbe
pop
mov
and
shll
cmpsb
int3
adc
add
cmpsb
push
adc
pushf
push
popa
scas
fbstp
jl
and
cwtl
arpl
mov
xchg
inc
add
or
push
pop
xor
nopl
es
xchg
cmp
es
mov
mov
xor
xchg
or
jmp
push
sbb
dec
sbb
and
cmp
fisubl
push
jle
xlat
mov
aam
mov
aad
xor
rolb
stc
mov
add
repz
aaa
add
outsl
repnz
andl
xor
into
gs
xchg
adcl
aam
xchg
rcr
jb
jae
sub
xchg
addr16
aaa
ja
pop
dec
push
and
mov
fldenv
inc
xor
push
je
cmpsb
push
cmpl
xchg
lcall
movsl
enter
lods
pop
int3
stos
xor
mov
mov
aam
jbe
shll
mov
cmp
sub
jecxz
push
lock
cmpsl
cld
xor
dec
les
es
outsb
pusha
sub
pop
xchg
push
sbb
and
adcl
cmp
xor
pop
dec
aad
xlat
fs
lock
lcall
aas
in
cmp
fldcw
push
cli
rcrb
sbb
mov
in
shll
in
das
jp
cmp
scas
cmp
shll
popf
cmpsb
jmp
les
or
in
out
sub
push
iret
mov
sub
jmp
sub
out
mov
cwtl
push
neg
jmp
mov
cmp
lds
fidivrs
inc
push
in
inc
inc
xchg
mov
int
ret
out
push
pop
popf
fs
or
icebp
int
mov
repz
push
mov
jbe
insb
sbb
mov
in
pop
pop
sbb
loope
fidivrs
addr16
popf
xor
mov
jae
sub
fwait
lock
and
sub
sbb
data16
adc
push
xchg
and
push
push
sbb
rcll
sahf
push
mov
cld
aaa
mov
ja
dec
and
js
and
sub
arpl
sub
dec
frstor
cmpsb
test
dec
cmp
xor
xlat
xor
dec
mov
sbb
xor
sahf
pop
or
fs
ret
mov
das
jb
call
xor
outsl
jo
xchg
hlt
pusha
sti
ds
push
js
inc
imul
pop
add
sub
idivl
ja
sbb
int3
jno
inc
cmp
mov
sbb
je
jb
mov
daa
sarb
jo
or
iret
push
cmp
subb
add
ljmp
pop
inc
mov
ja
cmp
out
insl
rcrl
lcall
lea
pop
lods
rorb
scas
daa
jnp
gs
add
mov
xchg
scas
xchg
inc
dec
int
mov
ret
xchg
stos
iret
popa
or
insb
imul
mov
mov
cwtl
rcr
jp
dec
mov
cmpsl
addr16
outsl
or
xor
mov
xor
nop
loop
cli
cld
xchg
mov
add
mov
scas
lret
rcrl
rcll
jl
mov
xor
jbe
mov
pop
pop
xchg
js
enter
cwtl
mov
cltd
sbb
aad
cmp
sti
xor
ss
jns
push
fldl
dec
bound
mov
lods
loope
lahf
jae
pop
das
ret
out
fwait
fsubs
nop
outsl
out
cld
arpl
inc
lds
xchg
mov
pop
mov
aaa
jle
push
jp
jl
in
xor
aas
test
push
mov
rol
repz
push
pop
stc
push
and
lret
inc
orl
add
lret
and
cmpsl
in
outsl
mov
mov
pop
cwtl
nop
mov
inc
xchg
movsl
xor
jb
ds
test
movsl
mov
es
sarb
pop
jp
jg
dec
push
or
mov
clc
xor
fwait
dec
rcrl
cs
into
test
ret
add
sub
mov
lock
inc
cmpsl
xor
jg
aad
lahf
mov
add
push
lahf
xchg
mov
sub
es
das
or
jo
pop
cwtl
iret
push
fnstenv
pop
outsb
add
ret
cmpsb
inc
mov
lods
or
inc
mov
cwtl
push
mov
dec
or
push
decl
sbb
add
dec
push
inc
sbb
mov
aam
sti
dec
je
outsl
jp
das
lret
shll
fistl
ja
andl
sbb
push
mov
call
pushf
dec
inc
call
and
sbb
dec
pop
xchg
fiadds
cmc
mov
push
dec
neg
xchg
stos
cmp
jnp
push
xchg
mov
or
cmc
pop
call
insl
and
cs
mov
pop
int3
loop
xchg
shlb
lcall
fucomp
and
xchg
fcompl
or
add
mov
pop
pop
ror
xchg
pop
ret
les
popf
int
test
int3
fcomps
sti
test
in
fs
mulb
adc
push
lret
in
mov
cmp
movsl
and
cmpsb
hlt
mov
gs
loop
mov
out
mov
cmp
jne
jmp
adc
shll
in
sbbb
repnz
movsb
insb
enter
push
and
or
dec
cli
scas
push
stos
and
loop
mov
outsl
fnstcw
repnz
and
push
rol
and
jbe
xchg
hlt
add
fistps
sbb
adc
inc
push
push
fimuls
int
outsb
pop
loope
pop
mov
dec
lcall
inc
pop
lret
in
jae
mov
add
lds
lods
lods
and
aaa
fs
mov
mov
repz
or
ja
pop
arpl
popf
and
sbb
or
cmpsl
cs
pop
jle
lock
or
loope
push
lret
mov
sub
pop
imul
mov
scas
mov
cmp
cmp
mov
leave
jne
int3
or
or
shrb
sbb
cmp
test
insl
and
xor
sub
outsb
addr16
xchg
sbb
je
jp
xor
outsl
sarl
in
mov
pushf
sbb
stos
mov
xchg
mov
add
arpl
aam
pop
in
jl
pop
and
sbb
cmp
cli
fstpl
enter
outsb
sbb
mov
sub
mov
or
add
stc
jo
ret
or
mov
push
lods
mov
jge
rorl
cltd
inc
idivb
sbb
mov
fwait
inc
daa
sbb
cmp
test
jg,pn
push
insb
or
enter
mov
xor
imul
bound
in
movsb
adc
insl
imul
jge
mov
jmp
xchg
xlat
popa
mov
xchg
adc
xchg
xchg
cmpsb
and
js
mov
adc
cmp
in
xchg
lret
xorl
dec
xchg
cmp
sbb
jg
push
push
mov
sbb
loopne
int
xor
lods
mov
lcall
sti
lds
mov
sti
mov
sbb
dec
mov
inc
adcl
add
jnp,pt
xor
sbb
inc
sbb
and
mov
mov
sbb
nop
mov
cmpsb
dec
cli
inc
les
dec
pop
cmpsb
cmp
enter
sbb
lds
sbb
test
insl
cmp
lret
in
jecxz
cmp
cmp
aad
add
sub
outsb
cmp
stos
sub
or
sub
insb
cltd
or
shrl
or
gs
adc
cmc
sub
add
jbe
pop
push
push
fsubrs
jo
cmp
or
push
test
int3
cmp
pop
xchg
or
add
and
lock
pop
cltd
mov
cmp
fbld
mov
dec
icebp
in
mov
fadds
jg
xor
aad
sub
pop
and
dec
hlt
adc
lahf
repz
push
sub
cs
sub
xor
dec
xchg
scas
imull
jne
xchg
pop
repz
adc
movsbl
mov
jecxz
xchg
das
into
bound
mov
jbe
or
push
xchg
or
stos
sub
hlt
mov
je
cmc
popa
stc
cmp
mov
andb
sbb
add
mov
push
push
jp
stos
rcr
mov
ret
mov
dec
mov
ja
sbb
mov
adc
in
arpl
loopne
sub
pop
cmp
stc
shlb
test
push
sar
shl
mov
cli
arpl
imul
xor
jecxz
xor
int
cwtl
xchg
out
imul
fldl2t
adc
outsb
xchg
ljmp
mov
mov
jmp
mov
loopne
ficomps
mov
scas
testb
pop
inc
sbb
xchg
ss
test
adc
inc
rcrb
inc
sbbb
aas
xor
add
jecxz
repz
mov
fwait
shlb
cmovb
push
jno
inc
int3
mov
pushf
jl
push
ljmp
dec
jge
shrb
push
jmp
bound
pop
mov
gs
rorb
adc
push
jne
test
movsb
cmc
or
fnstsw
scas
mov
mov
je
outsb
sbb
mov
scas
fists
jecxz
aam
scas
js
nop
push
fimull
and
dec
and
add
sub
sarb
sbb
mov
add
inc
pop
insb
or
mov
cmp
jnp
cmpsl
ds
mov
lcall
dec
sbb
loop
push
fistl
inc
adc
test
xchg
aad
push
shll
pushf
sub
stc
jmp
xchg
dec
ret
gs
mov
jg
jecxz
subl
adc
push
pop
adc
popl
popf
mov
fwait
icebp
cmp
push
outsl
in
nop
jbe
inc
inc
mov
lahf
loop
mov
xor
pop
vphaddudq
call
pop
mov
gs
enter
mov
pop
sarb
push
dec
jge
mov
enter
popf
enter
popf
jno
dec
lods
pop
call
ja
xor
int
arpl
popf
push
sbb
sbb
xor
loopne
scas
xchg
sbb
lock
mov
jo
xchg
cmp
or
cmp
mov
dec
sbb
dec
in
out
push
fstl
jle
std
sbb
sahf
popf
shll
jne
add
push
insl
lods
xlat
fiaddl
jge
js
dec
addl
rorl
flds
rcr
xlat
push
data16
das
addr16
aaa
mov
dec
insb
cwtl
into
xchg
xlat
stos
push
popa
cmpsl
iret
pop
mov
sbb
add
pop
lea
imul
mov
test
inc
xchg
fidivrs
and
mov
or
fwait
jno
mov
shl
loop
sarl
ja
inc
lock
out
pusha
mov
push
in
es
inc
loopne
xor
add
xchg
mov
not
loopne
fisttpl
dec
cmpsb
arpl
fiadds
and
mov
sbbb
push
orb
imul
pop
inc
mov
ret
cmpsl
in
in
pop
insl
test
mov
push
test
fimull
add
sahf
fidivrs
fisttpll
fisttpl
divb
repz
jbe
lret
stc
ret
lods
cli
dec
or
test
stos
lret
ja
js
insl
cmp
sub
dec
decl
adc
inc
negl
sbb
sbb
mov
jl
ret
mov
loopne
test
dec
jp
push
or
ja
fucomi
test
add
mov
fnstsw
xchg
inc
lock
out
and
and
inc
cs
shlb
cmc
xchg
mov
outsl
push
arpl
dec
inc
out
leave
not
sahf
mov
fiadds
mov
xor
cmp
sahf
xor
inc
add
dec
loop
lea
out
jno
insb
sub
sub
mov
cmp
sub
imul
mov
test
fidivl
xchg
mov
ss
xchg
shll
mov
inc
movl
add
dec
jnp
push
dec
das
mov
arpl
mov
outsb
mov
mov
cwtl
mov
mov
dec
mov
mov
xlat
mov
push
push
cli
mov
fisubrs
mov
aam
andb
jbe
jg
jb
inc
addr16
push
in
fs
stos
in
mov
mov
in
loop
inc
adc
push
cltd
incl
mov
imul
xchg
out
push
lods
into
and
stos
jp
sub
cmp
fldcw
mov
aad
int3
adc
movsl
jbe
dec
les
out
mov
xlat
dec
test
mov
sub
xor
push
mov
icebp
aam
sbb
sub
arpl
call
push
cmp
xor
nop
and
outsl
or
and
lret
pusha
mov
sub
fiaddl
scas
loop
pop
mov
mov
pop
shlb
insl
cli
into
movsb
pop
mov
adc
mov
mov
aas
ljmp
popf
mov
inc
mov
xlat
adc
xor
cltd
and
jae
outsl
adcb
call
testb
push
jle
xchg
pusha
xor
repnz
sbb
push
cmpsl
jmp
push
imul
lock
rorb
mov
in
clc
lea
cmp
pop
dec
sbbb
rorb
es
cwtl
cmp
or
mov
aas
repnz
mov
popa
pop
cmp
lock
xorb
and
mov
jo
stos
inc
xor
and
inc
aam
jge
push
jno
sbb
cs
fwait
mov
fnstenv
sti
fs
dec
jns
mov
pop
cld
sbb
cmp
ffreep
out
pop
mov
jno
mov
out
push
push
js
int
xchg
sbb
push
out
jno
sahf
mov
xchg
sti
add
sbb
or
icebp
pop
xchg
dec
ss
jmp
xchg
pusha
imulb
stos
xchg
xor
and
mov
mov
jp
jge
jnp
pop
call
pop
data16
in
xorl
sbb
cs
cld
jmp
cmp
fadds
cmc
jmp
xchg
and
mov
lcall
in
inc
loop
add
mov
ljmp
out
jns
lods
js
mov
xchg
popf
aam
das
mov
roll
enter
inc
mov
inc
push
or
jb
fidivrs
in
add
mov
clc
or
ds
test
mov
add
dec
mov
inc
lods
out
sbb
movsb
jne
xchg
aaa
push
xor
adc
cmp
and
cltd
leavew
jge
dec
add
ljmp
shlb
xchg
mov
cwtl
stos
outsb
addr16
scas
sub
push
dec
xor
mov
fucom
ficoms
and
mov
bound
les
or
test
je
or
xlat
mov
lret
mov
sub
and
dec
mov
xchg
fwait
andb
adcl
cmp
test
out
jnp
sbb
fimull
lret
push
cmp
mov
jecxz
jae
push
fwait
pop
mov
cltd
std
repz
mulb
pop
outsl
xchg
mov
adc
pushl
mov
add
adc
arpl
mov
add
pushf
leave
mov
inc
adc
iret
sub
and
pushl
push
leave
pop
cmc
cmp
in
dec
cmp
ds
popa
jae
mov
repz
loop
rclb
and
mov
add
xchg
jmp
push
imul
jbe
push
lcall
insb
mov
addr16
mov
scas
add
inc
cmpsb
push
pushf
pmullw
xor
jp
insb
gs
mov
cmpsl
add
addr16
cli
ret
mulb
pop
pop
push
mov
js
adc
jecxz
cld
lahf
jne
movsb
adc
xor
cmpsb
rol
jo
test
jns
push
or
subl
jb
xchg
and
ljmp
outsl
xor
push
lds
loope
push
pop
mov
and
xchg
neg
pop
enter
cmp
gs
mov
iret
inc
cltd
and
rcrl
xor
pop
xlat
xchg
push
cmp
mov
test
js
in
outsb
inc
xchg
in
pop
insl
cmpsb
jo
int3
xlat
mov
mov
pop
daa
mov
push
mov
push
jno
repz
push
scas
cli
dec
out
push
xor
dec
fsubp
shr
pop
cmpsb
xchg
inc
lret
push
cmp
pushl
jecxz
lret
pop
adc
dec
mov
mov
leave
std
xor
popa
mov
imul
xchg
fldenv
popf
pop
sbb
xchg
scas
adc
lods
sbb
std
test
movb
xchg
lea
aaa
push
rcll
and
in
push
sub
xor
in
lods
fdivr
shrl
and
aas
add
and
or
cmp
cmpsb
mov
xchg
sbb
xchg
xchg
inc
orl
ljmp
sub
push
push
idivb
xor
inc
test
jle
pop
std
jbe
jp
inc
cmpsb
cmpsb
xchg
sub
dec
gs
mov
into
add
and
jnp
sbb
lcall
fdivl
mov
clc
lahf
jo
int3
sub
mov
je
mov
aas
cmp
cs
jge
clc
jge
sbb
or
mov
mov
inc
shrl
fsubp
xchg
bound
mov
jecxz
punpcklbw
mov
add
mov
rcll
out
lea
mov
hlt
xchg
test
ja
pop
pop
cmp
scas
mov
jmp
push
stos
xor
pop
inc
xchg
push
mov
sti
aaa
jecxz
lods
adcl
into
jge
icebp
xchg
lods
jno
and
lds
push
pop
inc
pop
dec
dec
nop
pop
jg
add
add
mov
add
clc
or
int
aad
jp
sbb
mov
sbb
or
int3
mov
imul
push
pop
in
addr16
repz
lds
push
stos
in
dec
in
in
clc
mov
sbb
out
jns
les
pop
shrb
mov
xor
sahf
jno
mov
cmpsb
and
pop
pop
mov
mov
movaps
roll
enter
jmp
rcrl
movsb
mov
into
dec
jno
icebp
xchg
xor
mov
mov
lret
jae
lea
mov
popf
pop
pushf
popa
xchg
sbb
mov
popa
adc
push
leave
xlat
mov
cmp
xor
test
dec
scas
inc
daa
jns
cmpsb
push
popa
ja
adc
adc
pusha
lcall
clc
mov
mov
cmp
mov
movsl
std
imull
pop
mov
movsb
xor
out
orb
pop
sub
sbb
cmpb
mov
fwait
mov
lds
ja
icebp
jmp
adc
cmp
mov
mov
xchg
or
cmpsl
inc
aad
ds
push
loope
fsts
push
aam
sbb
les
cmc
outsb
mov
sti
cmc
mov
sub
jnp
add
adc
int3
and
or
out
and
in
addr16
jge
fsubrs
adc
scas
push
sbb
xchg
inc
in
sub
into
xchg
pop
testb
or
mov
out
xor
pop
jae
push
outsl
outsl
fsubs
dec
int
jo
in
jecxz
stos
shlb
int3
pop
ficoms
cmp
dec
xchg
dec
cmpb
inc
xlat
loop
sub
push
movsb
dec
adc
jge
arpl
push
cmp
in
fs
les
adc
ja
or
jecxz
lock
daa
jecxz
jnp
jno
fistpll
push
lods
sub
insl
lods
mov
loope
inc
mov
aad
jnp
inc
dec
mov
xor
in
cmp
jmp
aas
jns
out
inc
push
lea
neg
jne
mov
imul
add
mov
mov
xchg
fldt
inc
xor
add
xor
insb
movsl
add
inc
out
bound
stos
add
imul
in
ja
jmp
lock
adc
test
mov
or
pop
pop
xchg
push
pop
push
cmp
lds
mov
push
shrb
insb
adc
iret
add
sub
xchg
scas
sbb
mov
push
xor
psubusb
pop
fst
lret
test
dec
into
int3
mov
sub
inc
mov
jns
mov
mov
or
fwait
mov
mov
loop
jns
loope
sar
rolb
push
xlat
out
sahf
sbb
push
xchg
call
stos
or
jecxz
mov
mov
cmp
stos
pop
sbbb
movsb
xor
pop
mov
cli
xor
popl
popf
js
ss
adc
scas
lods
mov
inc
jl
cltd
fists
lret
imul
lock
lret
jne
or
and
leave
push
jle
xlat
add
scas
push
jmp
push
pop
movsb
or
insl
repnz
and
adc
mov
stc
mov
je,pt
rcr
push
cmovb
ret
xchg
mov
int3
pushf
test
faddp
adc
fistpll
jmp
sar
jnp
mov
jmp
test
test
xor
adc
push
and
into
push
aam
mov
ljmp
loope
mov
sbb
dec
push
or
and
ret
mov
mov
add
and
or
in
push
cli
dec
daa
gs
loope
insb
dec
cwtl
in
pop
push
jecxz
pop
clc
push
ss
ljmp
sub
sbb
test
push
push
cmp
sbb
mov
mov
cmp
mov
jbe
mov
cmpsb
mov
outsb
test
mov
scas
call
sbb
testl
faddp
inc
mov
cmp
fsubrl
sbb
ret
das
jecxz
pop
fcompl
int3
mov
mov
ret
sub
dec
xchg
adcb
add
push
mov
xchg
adc
je
or
xchg
mov
xchg
xchg
jecxz
mov
test
xlat
fwait
mov
or
ljmp
jp
sub
sub
jmp
outsb
adc
sti
adc
nop
cltd
dec
fidivl
mov
insb
pop
cmp
mov
inc
or
pop
retw
daa
adc
or
enter
xor
addl
dec
push
mov
stos
aaa
push
pop
das
fwait
adc
cwtl
fcmovnbe
add
jmp
test
cmp
mov
mov
fsub
rol
push
xor
or
call
imul
in
rclb
or
adc
fcmovbe
pop
mov
mov
xchg
jns
push
das
fisubrs
pop
js
lds
mov
mov
loope
push
mov
mov
mov
dec
cmp
mov
push
insl
lock
mov
jb
sbb
sahf
sbb
pop
iret
add
push
xlat
iret
dec
je
inc
lea
sbb
pop
sub
aaa
mov
fucom
pop
mov
and
out
stos
and
int3
jb
or
xor
push
lar
fsubl
push
inc
outsl
push
sub
dec
js
pop
mov
test
mov
jnp
imull
shlb
mov
pop
sarb
or
ret
enter
rcrb
sub
icebp
mov
aaa
mov
mov
xchg
fsubl
xor
push
fldt
cwtl
out
lahf
cld
or
mov
adc
incl
sub
negb
mov
repnz
pop
and
lret
add
shrl
xchg
adc
push
xlat
subb
and
rcll
push
add
out
subb
cmpl
into
xor
or
xchg
shl
lcall
loope
cmpsl
pop
fnstcw
jnp
or
pushf
cs
lock
sahf
sbb
xor
leave
mov
cltd
push
rcll
nop
jecxz
cmpsl
enter
mov
int
ja
mov
shr
sarb
pop
inc
or
fdivrs
into
je
das
or
add
leave
stc
pop
mov
cmp
cmp
les
dec
mov
lret
mov
mov
test
fistps
mov
imul
dec
stos
cwtl
in
fnstenv
pushf
sahf
push
pushf
jle
pop
rcl
mov
xorl
shlb
adc
xchg
jns
lcall
mov
pop
fsubrl
in
cs
and
movsb
icebp
fstl
xchg
testl
cs
test
in
add
shl
aam
pop
movsl
cmp
fwait
ret
repz
fstps
add
test
pusha
lds
hlt
pushf
sbb
pop
aam
rcrl
mov
movsl
push
mov
psllw
adc
push
rorb
lods
inc
sbb
popf
mov
or
dec
out
jnp
pop
cmpsb
push
mov
lret
add
jecxz
jnp
int3
pop
sbb
push
inc
nop
daa
leave
sub
mov
cmpsb
and
push
aad
cmc
das
je
mov
mov
inc
rol
loopne
cltd
mov
add
and
cmp
pop
loope
orb
arpl
shlb
call
mov
jno
mov
loopne
je
mov
les
sub
sbbl
jmp
cwtl
movsb
sbb
das
dec
xor
imul
and
sti
xchg
in
xchg
xor
loop
scas
lds
adc
repnz
lods
scas
scas
int
call
ret
cmpsb
addl
pop
scas
mov
mov
mov
push
popa
and
dec
iret
cmp
mov
jg
jp
loop
outsb
sti
cld
jo
and
rcl
jne
lock
mov
mov
into
sub
sbb
adc
dec
aam
or
sub
sbb
adcb
mov
xchg
shrb
jbe
or
lds
ja
cld
push
add
push
jo
and
xchg
push
mov
xorl
add
xor
jecxz
rcl
lcall
dec
adc
pop
ret
addr16
cmp
jp
cmp
or
push
mov
aas
mov
enter
ljmp
outsb
out
dec
xor
add
lods
pop
sarb
push
dec
jle
cmp
nop
cmc
icebp
pop
add
and
addl
mov
inc
testb
and
sbb
mov
jne
xlat
xchg
cld
inc
jle
fnstenv
xchg
mov
imull
mov
add
stc
pop
sbb
mov
hlt
mov
pushf
jmp
aam
cmp
or
push
push
jg
aad
xor
dec
xor
cmpsl
mov
inc
jle
jecxz
mov
mov
daa
sbb
setb
rcrl
push
xor
jne
xchg
mov
add
aas
push
sub
ret
cmp
inc
fdivr
xor
mov
into
or
jge
ljmp
pop
cmp
fcomps
xor
push
mov
add
sbb
push
cmp
rolb
jmp
outsb
mov
mov
inc
push
cwtl
outsb
cmp
and
lods
mov
xchg
adc
pop
pusha
lahf
or
shrl
xchg
fdiv
xor
repnz
jno
mov
clc
mov
inc
insl
out
xor
loop
call
pop
adc
inc
xchg
lds
mov
out
or
repnz
jne
out
inc
adc
movsl
out
fs
andl
push
jae
ret
test
jmp
gs
push
and
enter
rcl
push
xor
dec
add
mov
insl
test
aad
lret
stos
pop
push
and
scas
inc
add
bound
in
shlb
push
mov
inc
pop
sub
fs
xchg
mov
xor
dec
fs
sub
jp
jbe
fdivr
movsl
adc
fcom
ret
fisubrs
lds
dec
cmp
arpl
lods
outsb
ss
mov
out
add
dec
ds
push
test
test
stos
adc
xchg
push
shl
push
push
movsl
mov
mov
mov
adc
sbb
fdivr
fcoms
mov
scas
pop
inc
jo
cmpb
repnz
xchg
sbb
aad
mov
fwait
add
nop
xor
in
sahf
adc
mov
push
adc
inc
mov
mov
imul
cmp
push
and
inc
imul
test
mov
loopne
aam
sbb
sbb
mov
aad
std
gs
push
add
xlat
add
adc
mov
inc
mov
push
ret
jbe
mov
pop
ret
and
push
jno
pop
jecxz
mov
ret
jecxz
or
push
je
sar
out
test
inc
std
nop
stos
xlat
pushl
popa
fdivrs
dec
cmp
xchg
jae
sub
aam
out
cld
imul
ds
and
cmp
adc
adc
cmp
ficoml
adc
mov
pop
dec
and
xchg
lock
pop
in
aam
leave
lds
pop
xchg
mov
mulb
push
jle
sub
loope
sub
sub
push
pop
mov
addr16
xor
dec
inc
sub
jle
test
add
sbb
lods
adc
and
mov
push
mov
jnp
pop
add
movhps
popa
sub
pop
nop
add
push
push
iret
ficoms
sub
cld
jns
fs
pop
dec
sub
mov
inc
in
fldpi
ffree
adc
fistpll
int3
scas
inc
jb
outsl
xchg
rcl
leave
insl
jp
xor
jmp
mov
frstor
pop
imull
cwtl
add
jno
sbb
shll
mov
call
jno
shlb
test
out
cmp
xor
mov
call
cmpsl
stos
jl
fildll
cmpb
les
and
sbb
test
imul
in
inc
jl
add
decb
xor
xchg
adc
adc
mov
fists
pushf
or
mov
loope
movsb
lea
in
dec
lcall
and
add
push
cmpsl
stc
cmpsl
repz
adc
sahf
es
mov
xchg
and
lcall
stc
stos
mov
add
cmpsl
loope
mov
sub
or
mov
cmpsl
xchg
popf
add
ss
nop
add
lock
mov
push
adcb
push
mov
push
jae
stc
jnp
pop
xchg
jnp
dec
mov
adc
inc
push
icebp
xor
cld
out
enter
pop
or
push
mov
jns
xor
push
xor
repnz
push
iret
nop
dec
jp
test
repz
shl
adc
ja
pop
pop
sub
pusha
mov
stos
andl
stc
sub
cmc
aaa
push
mov
dec
sbb
pusha
sub
jae
add
negl
mov
repz
lahf
and
movl
loope
fnstsw
xor
mov
mov
mov
and
in
and
mov
cmp
inc
fnstcw
das
push
sar
jp
jo
je
or
frstor
ljmp
out
push
pop
mov
adc
xor
insl
lds
in
ret
jge
je
mov
cmpb
mov
sbb
imul
adc
pop
test
xor
jne
sub
ret
std
sti
repz
cmp
les
mov
ljmp
test
dec
icebp
fbld
test
popf
outsb
aam
inc
outsl
lahf
mov
jne
mov
inc
stos
add
inc
jg
sub
sbb
lret
aad
jmp
sub
inc
mov
jns
jl
fstpt
fwait
and
in
aaa
jle
clc
clc
adc
mov
lock
push
pop
arpl
sbb
mov
inc
lcall
in
mov
or
mov
aam
out
in
mov
pop
mov
or
jno
and
or
push
ss
xchg
xor
out
std
cmc
add
adc
aas
lock
or
popf
fnstenv
bound
movsb
mov
mov
xor
rclb
mov
inc
out
imul
cwtl
mov
push
fwait
inc
sub
ljmp
imul
gs
gs
notl
jg
es
jecxz
add
dec
rorl
scas
mov
and
cltd
std
cmp
xor
mov
adc
sub
add
xor
push
shrb
mov
test
lahf
jne
dec
mov
pop
out
mov
sub
mov
mov
icebp
adcb
mov
loopne
scas
and
lds
and
jae
fistpll
and
xchg
cld
adc
add
into
xor
aad
int
cmp
mov
imul
inc
xor
mov
arpl
mov
test
mov
push
hlt
jbe
test
sbbl
cli
sub
adc
push
nop
insb
push
lahf
fdivrs
jecxz
cmp
fidivrs
arpl
push
mov
xchg
pop
out
jmp
mov
repnz
mov
pusha
ljmp
jecxz
pop
rclb
and
sbb
xor
lcall
sbb
push
icebp
arpl
mov
cmp
fwait
lods
shrl
call
xlat
aam
test
std
or
mov
add
xlat
mov
aas
arpl
arpl
call
pop
adc
adc
pop
into
aam
jl
cs
adc
int
adc
frstor
out
neg
mov
mov
inc
xchg
gs
rcll
xchg
pop
lahf
jb
jle
jg
xchg
fsubr
xchg
outsb
and
cvtpi2ps
repz
pusha
movsb
es
imul
iret
aas
scas
popl
mov
mov
push
ja
jb
adc
lea
repnz
add
pushw
pushf
test
lret
mov
lds
mov
mul
ficompl
test
push
adc
and
out
and
fbstp
sahf
test
mov
xchg
push
sub
push
push
ret
xchg
xchg
dec
subb
pop
rcrl
xchg
mov
fdivrs
popf
mov
iret
cmp
ret
es
mov
or
xlat
add
subb
cmp
nop
sbb
mov
sbb
jne
test
dec
or
and
jo
lahf
cmpb
push
movsb
inc
push
xor
push
mov
popf
xor
std
xchg
push
push
cmp
cmpl
adc
mov
inc
and
sub
movsl
popa
xchg
xor
pop
mov
insb
daa
inc
mov
cmp
mov
ja
inc
aas
sub
pop
aaa
adc
dec
mov
mov
and
pop
xor
cwtl
in
or
mov
mov
mov
sbb
xchg
mov
decl
or
mov
data16
sub
lock
nop
in
mov
mul
ret
pushf
cltd
cmp
inc
mov
inc
adc
mov
ljmp
sub
add
lret
jbe
rcrb
and
mov
adc
cmpsb
or
cmp
js
xor
xlat
xor
icebp
rolb
cmp
insb
mov
mov
add
push
out
adc
jmp
push
mov
fadds
dec
sub
fwait
stc
push
loopne
mov
cmpsl
roll
push
in
mov
outsb
mov
push
cmp
jmp
jl
movsl
movsl
icebp
sub
or
jle
or
inc
or
ds
jmp
inc
jbe
inc
out
outsl
adc
inc
sbb
push
mov
fldt
popf
daa
cmpsb
mov
sub
ret
xchg
int3
and
or
outsl
pop
add
test
dec
ds
or
js
push
and
xor
xchg
cli
inc
out
lcall
dec
mov
mov
or
adc
and
out
gs
jbe
fstpl
cmp
push
cmp
jecxz
mov
jno
into
mov
repnz
jle
push
decb
and
jo
je
iret
ret
mov
mov
stos
lods
fadds
loop
outsb
pusha
outsb
cli
add
hlt
cmpsl
leave
xor
je
sti
inc
test
pop
adc
cwtl
outsl
sub
lds
dec
inc
xlat
imul
mov
cmp
jns
lock
les
iret
adc
jg
xchg
pop
arpl
xchg
dec
faddl
mov
in
push
hlt
addb
add
popa
bound
dec
insb
cmp
dec
scas
mov
cmp
mov
cmpsl
mov
out
xchg
mov
mov
hlt
fidivs
sub
cmp
mov
and
xor
test
ss
adc
and
add
dec
mov
fistpl
pop
mov
test
dec
ljmp
fst
push
fidivrl
jbe
xor
jmp
adcl
sub
jmp
stos
add
fdivrs
jo
add
pop
fidivl
lret
fnstsw
insb
push
call
std
clc
sub
sub
cmpsl
vpmadcsswd
add
ds
fcmove
mov
fcomps
push
sbb
stos
inc
push
sub
fnsave
loop
xor
xlat
mov
dec
sub
sar
mov
push
ljmp
cli
repz
fcmovu
mov
inc
daa
mov
pop
imul
in
push
out
cmp
cli
pushf
xor
or
jmp
pop
inc
test
fildll
das
fwait
scas
cwtl
enter
mov
push
jecxz
call
jge
fcmovbe
xor
mov
xor
xchg
ss
roll
inc
inc
mov
data16
pop
cmp
test
int3
mov
insl
cmp
add
xor
and
test
push
shrl
test
push
lds
lods
mov
stos
jnp
insb
out
sub
js
push
pop
rcrl
sbb
clc
jno
push
xor
sbb
mov
adc
jns
push
and
or
jo
test
adc
inc
scas
lea
xchg
mov
cmp
xchg
or
mov
popf
jl
sbb
dec
out
mov
aaa
jge
xchg
movsl
cwtl
imul
scas
xchg
or
and
xor
sub
xor
ja
mov
movsl
lret
data16
sti
mov
jmp
xor
inc
sbb
imul
mov
hlt
or
clc
imul
cld
push
cmpsl
xchg
mov
daa
mov
stos
testl
andl
into
int3
mov
sub
cmp
stc
aam
push
xchg
leave
clc
popf
imul
enter
push
sbb
jae
mov
loope
adcl
fwait
jle
and
dec
add
pop
pop
and
lods
ffreep
inc
xor
push
leave
sub
sub
stos
nop
and
sub
clc
pop
cmp
mov
icebp
fcoml
or
aam
inc
xchg
sub
sbb
fs
mov
jnp
cmp
filds
cmp
mov
add
jge
icebp
jns
add
enter
jg
bound
pushf
cld
outsb
xlat
ljmp
inc
add
movsb
in
xor
leave
inc
or
ds
daa
mov
les
fisubrl
hlt
and
mov
pop
fdivrl
or
dec
fistpl
test
sbbb
mov
loope
pop
adc
and
or
sbb
xchg
fwait
outsb
pop
jb
xor
shll
imul
ja
sti
outsl
enter
mov
cmc
test
jnp
sub
push
je
or
out
sub
push
sbb
and
jge
and
cltd
call
in
xchg
jae
call
mov
sbb
adc
push
jp
mov
adc
jle
aaa
loope
add
mov
fstp
imul
cmp
stc
mov
popa
fsts
cli
jo
popa
add
sti
jp
cwtl
int
dec
stc
xor
mov
mov
lods
mov
inc
in
push
sahf
ljmp
add
test
repz
mov
jbe
jbe
push
out
or
outsb
lret
out
iret
sub
les
dec
movsl
enter
inc
repnz
sub
aas
call
in
dec
xor
decl
mov
aad
jo
jns
out
hlt
sarl
mov
lahf
inc
setne
cmp
fwait
mov
jg
inc
cwtl
ljmp
addr16
mov
out
adc
idivb
push
jle
arpl
sub
fbld
ljmp
xor
pop
cwtl
leave
test
lcall
xlat
mov
xchg
and
sbb
cltd
or
xor
fldt
sub
cltd
getsec
popf
dec
xorl
test
lahf
cwtl
dec
jbe
jae
pop
jo
pop
js
hlt
ret
pop
xor
lods
cmp
adc
push
mov
fisubrl
cmp
jae
dec
and
adc
popf
cmpb
pop
ljmp
mov
imul
mov
add
icebp
cld
adc
rcll
inc
pop
add
aam
pusha
pushf
mov
std
xor
lock
mov
jp
adc
lcall
ret
incl
xor
nop
je
inc
xor
repz
fimuls
jae
cs
sarb
popa
push
xlat
dec
jle
loop
cmpsb
imul
ljmp
nop
imul
out
inc
in
scas
add
js
test
stos
call
pop
mov
test
stc
daa
outsb
outsb
push
ja
mov
mov
subl
in
aam
or
sarl
dec
fcoml
inc
in
push
mov
push
pop
sub
rcll
add
sbb
dec
adc
dec
push
outsb
sahf
insl
mov
jmp
cwtl
mov
cld
cld
arpl
cmpsb
mov
jae
xchg
jns
pop
int
shll
xor
xor
idivl
lods
mov
adc
not
test
cmp
push
inc
imul
push
mov
int
mov
adc
xchg
jg
xchg
xlat
adcl
cmp
mov
mov
repz
test
rclb
mov
pop
xor
jecxz
jl
aas
xchg
gs
inc
dec
mov
jge
pop
dec
loopne,pt
cmp
ds
and
xor
loope
and
adc
sbb
pop
push
cmp
fistl
jle
aad
mov
add
addb
pushw
lret
notl
pop
ljmp
lret
jb
aas
shrl
mov
enter
push
nop
xchg
subb
andl
pop
sbb
push
cltd
mulb
jns
inc
or
fsts
repz
mov
mov
in
cmp
jecxz
jne
sub
ret
jge
inc
ja
dec
mov
js
lock
dec
cmpb
aad
mov
jno
out
pop
mov
jge
jo
or
push
push
sub
jo
push
jne
lods
adc
stos
push
and
cmp
arpl
test
push
jbe
insl
adc
outsl
push
out
and
inc
and
or
ss
mov
mov
mov
inc
insb
pop
or
jns
pop
cmp
adc
addr16
rcrl
jp
shrb
mov
cld
inc
inc
mov
xchg
pop
std
iret
fcmovbe
stos
gs
xor
in
mov
jo
popf
rorb
sarl
add
arpl
inc
adc
mov
xor
std
clc
jp
add
xor
cmpsl
andl
insl
xor
cwtl
fidivs
xor
decb
cld
iret
jecxz
hlt
lods
xchg
lds
xchg
cmpsl
mov
jge
pop
add
cmpsb
push
pop
icebp
popa
es
mov
inc
mov
or
add
lock
ja
and
mov
pushf
push
adc
sub
movsb
pushf
push
dec
cli
add
mov
fs
ja
out
int3
mov
out
xchg
pop
lods
mov
insb
ret
fsubrs
cli
xchg
pop
cmp
mov
xchg
mov
cmc
imul
mov
iret
xchg
jecxz
pop
pop
mov
or
scas
sub
cli
inc
dec
jecxz
lods
ret
movsl
sbb
inc
push
xor
jp
pop
cmc
pop
insb
hlt
adc
int3
cmp
imul
jb
dec
js
mov
das
or
loop
mov
xchg
push
pushf
test
int
data16
insl
rcrb
inc
jmp
or
ds
pop
loopew
ss
popf
adc
fs
in
arpl
imull
cmp
inc
enter
scas
push
jno
jmp
jl
imul
inc
cltd
fcmovnu
jns
arpl
or
push
outsl
ret
lea
inc
sar
adc
lcall
mov
in
push
adc
cmp
or
lds
inc
cli
subb
pop
jmp
rcr
das
popa
pop
loopne
mov
bound
lahf
xor
loop
into
sub
cmp
push
addr16
pop
jle
test
mov
xchg
mov
or
lods
push
xlat
ljmp
mov
pop
outsl
xor
jg
js
sbb
mov
pop
je
loopne
jmp
andb
sub
jns
loope
ss
push
insl
mov
cmpsb
xor
cmp
nop
in
sbb
fsubrl
clc
sub
xor
sub
add
lods
push
add
ffreep
test
out
dec
test
out
int3
stos
add
pop
ret
jmp
scas
ds
cmpl
xorb
pop
xchg
and
sub
pop
or
mov
dec
in
xchg
dec
cmpsl
pop
push
out
xchg
in
enter
aad
pop
jmp
lods
loope
jg
mov
jge
call
cltd
out
pop
xchg
mov
xor
push
mov
mov
fdiv
adc
lret
lock
sub
xor
testl
jp
xchg
aad
ja
jle
aaa
xchg
sbb
add
sbb
and
mov
cmp
popa
push
faddp
pop
dec
popf
out
mov
and
pushf
sahf
and
mov
push
shll
sub
std
fistpl
iret
aas
inc
push
mov
sub
mov
cltd
popf
xchg
out
xchg
hlt
out
nop
cld
push
orb
sbb
xor
inc
jecxz
cmp
in
sub
lret
and
xchg
xchg
pop
dec
dec
add
cmc
sbb
lret
mov
mov
inc
nop
adc
lahf
push
pop
cmp
mov
sahf
shlb
sub
pop
and
mov
movsb
sub
cmc
xor
xor
dec
imul
push
add
or
mov
sbb
push
mov
shl
mov
inc
cmpsb
iret
out
push
pusha
add
jb
cmpl
inc
lods
lds
jbe
stc
js
outsl
imul
cwtl
xchg
or
popa
mov
lea
and
lret
add
push
ljmp
inc
into
lret
inc
mov
cmpsl
sub
adc
pop
movsb
inc
mov
aam
repz
pop
add
push
add
add
sub
js
pusha
push
or
mov
cs
shrl
push
ud1
shll
mov
inc
adc
out
inc
lret
call
xchg
mov
push
dec
xchg
les
movsl
dec
in
stc
and
push
xchg
sub
cmp
inc
mov
andb
stos
jmp
sub
fildll
jno
fldl
mov
insb
out
push
hlt
fadds
mov
aas
shlb
mov
out
les
rcl
push
sub
inc
iret
mov
andb
xchg
push
fldt
mov
mov
sbb
cs
in
cmp
subb
adcb
jg
mull
push
je
sbb
mov
mov
int3
pop
mov
iret
jb
dec
lea
sbb
ss
xchg
push
mov
sarb
stc
pop
test
xchg
or
loop
jg
in
movl
mov
sbb
adc
xor
adc
and
dec
push
hlt
adc
sub
mov
fildll
mov
cmp
inc
sbb
pop
xor
call
stos
and
outsl
jle
nop
pop
cmpb
sbb
sarb
adc
clc
sbb
hlt
shrl
test
push
mov
dec
adc
pop
stc
sbb
pop
insl
cmp
xlat
cmpsb
icebp
lcall
dec
sti
lods
cmp
insl
daa
mov
daa
test
mov
jns
aaa
out
mov
stc
push
pop
ss
enter
or
jge
out
jne
cmpsl
nop
call
lcall
mov
add
js
mov
mov
dec
sbb
and
cmc
xchg
xchg
out
mov
fistl
dec
cmp
jl
sub
out
jbe
xchg
ss
arpl
cs
push
xchg
sti
fwait
jae
push
jo
xchg
lods
inc
scas
imul
outsl
test
xchg
rcr
sbb
and
or
mov
lods
fiadds
push
pop
fwait
ds
ljmp
inc
or
ror
push
jns
imul
test
lock
push
mov
icebp
and
popf
icebp
roll
add
dec
es
cmp
pop
test
push
pushf
mov
jmp
dec
pop
add
arpl
xor
xor
test
xlat
dec
int3
or
and
or
out
pop
cld
xchg
sbb
pop
addl
movsb
outsl
mov
mov
xor
pop
enter
jno
lahf
in
jno
mov
mov
sub
mov
repnz
cmp
in
xlat
jge
out
xchg
mov
push
sub
je
push
xor
in
out
std
or
fsubrl
fistpl
das
sub
nop
mov
sbb
xor
xchg
popf
dec
btc
mov
prefetch
popf
push
cmp
lea
mov
lods
push
js
pushf
fcmovnu
mov
pop
imul
hlt
mov
fwait
and
insl
test
dec
pop
cmpsl
xchg
jb
or
pusha
sti
dec
jmp
jnp
sbb
ds
les
aas
pop
mov
lahf
adc
int
dec
out
mov
jo
xor
or
mov
imul
push
and
enter
das
xchg
xchg
imul
outsb
push
scas
mov
decb
lods
fisubrl
roll
mov
dec
add
sbb
dec
push
cli
or
sbb
push
xlat
imull
jne
stos
xchg
adc
hlt
int
lds
bnd
jmp
dec
fdivrl
lahf
js
mov
inc
ficoms
cmp
cltd
shll
hlt
pop
and
aam
jp
iret
es
into
sub
scas
data16
jnp,pt
sub
jb
xchg
add
cli
cmp
rcrl
and
dec
aas
pop
mov
jno
cmp
mull
mov
cmp
jl
add
or
rorl
cwtl
fcompl
fimuls
shrl
adc
divl
call
fwait
pop
es
cmc
add
cmp
mov
je
fmulp
cld
stc
push
pop
movsb
sbb
into
cmpsl
in
shrl
aaa
add
lock
sbb
mov
sub
mov
les
in
cmp
mov
adc
fs
cmpsl
xor
cld
mov
std
loope
add
pusha
cli
jl
les
xor
js
pop
repz
jmp
jae
push
xlat
xchg
push
gs
test
sti
sub
jge
incb
cmp
fnstcw
in
add
sub
shlb
int3
jecxz
jb
inc
cmp
pop
std
push
cmp
ss
pushw
or
and
mov
dec
push
jo
cwtl
xchg
mov
insl
mov
inc
jo
pop
into
jle
jge
insb
int
das
in
push
scas
pop
aaa
movsl
enter
jbe
cs
in
fwait
out
dec
lds
add
fst
outsb
adc
imul
aaa
jbe
xlat
xchg
mov
push
jne
push
repz
mov
push
push
dec
jge
dec
pop
pop
scas
dec
sbb
push
pop
pop
repnz
adc
aad
sub
and
cmp
bswap
dec
mov
adc
and
pop
fnstcw
inc
insl
imul
outsb
addr16
nop
jp
sbb
pop
inc
lcall
pop
inc
mov
lds
jns
fmuls
cmp
clc
aad
arpl
xor
insl
or
dec
fldt
pop
pop
clc
inc
clc
jbe
ja
movsl
mov
mov
jle
or
sub
out
push
sub
xor
dec
repz
cli
ds
adc
and
xor
movsl
jae
lods
into
imulb
nop
xor
mov
and
or
pop
fnstsw
mov
faddl
cwtl
aas
movsl
xchg
sbb
insl
lds
push
insl
inc
ret
or
or
pop
dec
add
xchg
mov
dec
mov
repz
adc
shll
and
lea
imul
in
inc
jle
push
adc
mov
ds
pop
jl
sub
push
ret
jb
rcl
imul
add
insb
jns
and
out
pop
mov
push
mov
mov
xchg
daa
cmp
add
push
mov
int3
push
popa
mov
adc
mov
jecxz
fiadds
mov
popl
jmp
aam
pop
repz
cmp
scas
in
sti
push
int
and
ffree
lcall
mov
pop
cli
test
mov
cs
stc
inc
test
push
adcl
inc
xlat
icebp
cli
mov
xor
xor
or
lds
movsl
stos
jl
icebp
or
pop
jae
mov
fcmovnb
rol
jae
xchg
inc
arpl
cmp
fldl
ret
jp
add
xchg
xchg
push
cmp
push
cmp
ljmp
imull
loopne
and
dec
cmp
stc
push
das
movsb
lds
pop
lret
and
cwtl
stc
add
mov
lea
jbe
cwtl
and
int3
jmp
lret
ss
adc
xor
lea
repz
mov
pop
aaa
or
out
xor
inc
push
adc
in
enter
pop
cmpsb
jecxz
fadds
cs
fstps
jle
ss
mov
mov
xchg
in
mov
inc
test
rorl
mov
imul
out
mov
cmc
comiss
push
mov
mov
je
lods
and
jno
into
sbb
mov
stos
lods
cmc
add
sahf
dec
or
xchg
mov
push
push
cmp
sbb
inc
jl
inc
cld
dec
cmpsb
ficoml
lods
sub
cwtl
mov
or
mov
faddl
or
mov
mov
scas
out
xchg
xlat
jo
add
rcll
or
adc
cmp
pop
xor
js
inc
pop
adc
jecxz
mov
pop
stos
adcl
mov
push
movaps
aad
cmp
ret
mov
dec
out
in
xchg
push
cmp
ret
inc
inc
cld
clc
insb
lret
inc
cmpsb
stos
mov
push
xchg
test
inc
mov
push
mov
iret
addl
lods
inc
roll
lret
mov
fisubl
stc
xchg
iret
adc
mov
add
imul
mov
xchg
leave
xchg
lret
icebp
fcoms
das
sbb
movsb
push
jg
push
call
loop
push
jnp
push
mov
lock
xor
push
pop
xchg
pop
sbb
sarb
in
repnz
loop
cld
dec
add
int
rclb
out
fisttpl
enter
mov
or
iret
sub
movsl
lahf
adc
sub
cltd
aad
lds
mov
roll
pop
repz
pop
out
xchg
push
out
aas
and
sbb
shlb
xor
mov
adc
stos
sub
lcall
cmp
sub
stc
jb
int3
push
push
fadds
movsb
xlat
jmp
lds
gs
mov
fwait
pushf
xor
xor
jg
and
out
pop
mov
shlb
dec
adc
mov
fwait
mov
ret
data16
lahf
inc
inc
call
and
mov
xchg
dec
filds
xor
sbb
mov
ss
into
jb
mov
jnp
cmp
pop
roll
movsb
jnp
imul
add
aad
popa
xor
mov
mov
shl
faddl
lahf
xor
fildl
push
data16
movsb
lods
and
enter
shll
xchg
notl
xlat
mov
xor
daa
mov
mov
mov
inc
subb
mov
mov
pop
ljmp
jns
adc
lock
enter
xor
mov
vexpandps
push
or
push
not
sahf
mov
ss
push
shlb
scas
mov
rcr
out
push
push
sub
decb
jb
xor
scas
movsb
negb
lret
sbbb
or
ffree
stc
setns
mov
push
negl
add
fildll
out
inc
shl
test
fs
mov
mov
fistps
pop
daa
mov
negl
scas
add
stos
movsb
mov
dec
jge
aas
push
bound
mov
push
sbb
mov
mov
aad
pop
jns
sbb
lea
faddl
mov
pop
or
repnz
jl
cmpsl
dec
incl
sbb
es
ljmp
fsub
xor
or
pop
sti
clc
mov
push
cmpsb
je
push
movsb
xor
add
push
js
arpl
aam
jge
in
ret
pop
loop
cld
in
or
mov
sahf
mov
mov
adc
arpl
lods
xchg
int
ficoml
xlat
mov
and
pusha
cltd
clc
push
push
mov
mov
fstpl
iret
xor
in
push
lcall
aam
out
or
dec
sub
fwait
mov
aas
sbb
mov
nop
mov
es
out
xchg
ret
cltd
jno
cli
sub
cmp
add
outsb
add
test
into
xor
sbb
cmc
jg
out
xchg
or
mov
jge
jp
loopne
jmp
sbb
rcrl
push
popa
or
idivl
mov
dec
test
sahf
jl
in
std
lods
cld
imul
aam
xchg
push
xchg
aaa
jno
dec
add
pop
fidivrs
icebp
sub
xorl
test
pop
outsb
cli
adc
inc
dec
lahf
mov
clc
arpl
pop
cld
fadd
lahf
popa
mov
je
sub
adc
xchg
inc
sub
fldl
lock
xor
mov
inc
sbb
mov
mov
push
and
cmp
ret
insb
adc
fnstsw
dec
imul
dec
movsb
lock
js
pop
int3
mov
repz
mov
cmp
pop
imul
pop
in
into
imul
jno
adc
movsb
nop
xchg
pop
cmp
jp
dec
fcmovne
dec
mov
shlb
int3
shl
dec
arpl
fcmove
adc
adc
mov
sahf
jmp
out
adc
push
pop
popa
add
test
push
hlt
pop
inc
push
pop
repnz
fcompp
sub
test
jno
scas
xor
cmpsl
mov
dec
pop
cmpl
cmp
mov
repnz
xor
pop
sbb
xor
fildl
xchg
adc
mov
mov
mov
fidivrl
ffree
jns
insl
push
addr16
sbb
xchg
in
jnp
out
jmp
mov
lret
jle
pop
mov
cmp
cmpsl
cltd
enter
jnp
ss
popf
loopne
mov
and
mov
adcb
into
into
xchg
mov
or
push
push
andl
add
xchg
sub
jge
leave
mov
pop
pop
xor
in
mov
jmp
pop
out
or
fwait
lret
cmp
dec
out
dec
std
in
xchg
int
push
ret
lds
push
dec
stc
movsl
sti
cmp
xchg
ds
ljmp
aaa
pop
not
mov
loope
mov
sub
dec
imul
clc
xlat
daa
rorl
push
mov
jle
stc
mov
lcall
inc
es
adc
mov
adc
je
fwait
lods
stos
xchg
xchg
and
repz
mov
and
in
sub
sarl
into
pop
mov
arpl
push
add
and
mov
xchg
aaa
sbb
aam
xor
ja
into
iret
and
push
mov
ret
inc
mov
cmp
inc
adc
jo
mov
ret
push
int
lea
insl
cmp
std
add
scas
mov
iret
mov
inc
insl
mov
lret
and
or
jle
out
mov
pop
sbb
adc
inc
add
insl
adc
ja
sti
mov
scas
jge
xchg
inc
sbb
push
push
jb
cli
wrmsr
cs
cmp
push
testb
ds
push
sbb
fwait
mov
and
xor
pop
das
dec
inc
add
imul
loopew
sbb
inc
int3
bound
push
das
add
and
jmp
insl
mov
cmp
mov
ja
or
push
lret
mov
negb
mov
jnp
das
aam
ljmp
repnz
mov
scas
stc
pop
out
mov
xchg
iret
adc
shlb
lods
xchg
ret
jno
stos
ret
push
sbb
push
pop
mov
pop
pushf
cmp
rcll
xor
in
sub
sub
adc
fstl
jecxz
push
cmp
jno
fidivs
outsb
daa
outsl
cwtl
mov
cld
push
lret
add
push
xor
inc
jno
sub
mov
leave
xsaveopt
and
inc
out
xor
or
jb
xor
in
ja
add
std
cmpsl
push
sub
inc
shrb
mov
pop
je
pop
dec
xor
sub
jl
mov
sbb
push
test
jp
inc
sbb
inc
cmpsl
adc
lock
lcall
mov
lcall
jmp
adc
mov
in
sarl
jg
or
pop
repz
sti
out
jo
in
fisubl
push
xlat
ret
ljmp
mov
push
fcompl
lds
add
sbbb
popf
mov
adc
insl
stos
cmp
push
aas
aam
in
loopne
dec
push
test
sbb
out
sti
dec
dec
dec
sbb
mov
cs
movsb
jmp
xor
adc
jb
fiaddl
push
outsl
fsubs
pop
mov
call
mov
fidivrl
lods
icebp
je
out
ss
test
xchg
xchg
mov
mov
cmp
sbb
cwtl
dec
imul
push
ja
out
mov
and
push
rcrb
mov
and
jle
xor
adc
lret
adc
xlat
xchg
adc
push
add
or
xorb
cmpsl
jne
add
aas
ret
jecxz
pop
mov
jmp
in
adc
sbb
push
inc
cmp
jns
aad
ret
mov
jmp
cmpsb
aad
sbb
add
xchg
dec
mov
mov
mov
mov
idivb
xchg
mov
xor
mov
out
stc
sahf
xchg
adc
jb
int3
adc
adc
push
mov
stos
add
sub
inc
das
xlat
out
xor
and
xor
dec
mov
insl
and
push
xor
in
aaa
lods
xor
mov
imul
sarl
sub
cld
call
aad
pop
xchg
fnstsw
adc
push
mov
pop
aam
jns
int
nop
xlat
lret
cmp
add
stos
inc
int
outsl
dec
mov
mov
fstl
ret
aaa
fstps
adcb
mov
into
fisubrl
mov
fs
cmp
inc
into
xchg
lock
lret
and
and
pop
pop
push
inc
inc
fldt
jo
or
subps
aad
lret
call
loopne
mov
or
lds
jo
sbb
mov
adcb
sbb
mov
cld
int
divb
ffree
inc
and
sub
pushf
or
xchg
out
or
ja
mov
loop
push
push
dec
pop
push
jne
adc
inc
fstl
mov
outsl
fildll
imulb
cmp
scas
add
pop
ret
shlb
mov
jbe
aas
adc
inc
imul
sbb
ds
rorl
dec
push
inc
xchg
nop
inc
lods
adc
mov
ljmp
sahf
inc
dec
xor
cli
push
mov
aam
dec
jns
fistpll
jb
adc
push
xorl
push
sub
pop
cld
sahf
shll
jp
and
imul
and
cmp
pushf
jl
jo
push
add
add
enter
out
or
fwait
inc
mov
mov
fcmovnu
clc
test
rcl
out
inc
js
lods
lret
aam
pop
cmp
xor
jb
lock
and
insl
out
ljmp
clc
sbbb
inc
std
mov
aas
jo
jne
loop
xchg
xchg
jns
push
mov
adc
es
mov
sbb
push
add
jbe
dec
stc
rorl
lret
jno
stc
xchg
nop
lea
stc
push
push
dec
movsb
mov
fisubs
fmull
out
xchg
in
out
add
jmp
pop
fdivs
cwtl
xor
pop
push
adc
push
lret
pop
sahf
adc
jb
pushf
aas
es
mov
or
xchg
inc
xchg
add
mov
lcall
ljmp
cmp
xchg
test
jge
xor
in
les
jecxz
mov
hlt
jno
mov
lock
pop
fs
pop
negb
sub
subb
sahf
push
imul
sbb
add
orl
cmc
cwtl
aaa
iret
lds
mov
cmpsl
add
inc
mov
stos
or
jmp
adc
cmp
aas
add
add
or
movsl
sub
lock
int
pop
push
and
xchg
push
push
dec
cmc
int
sub
test
outsl
push
data16
pushf
jnp
les
in
cld
push
pop
jnp
aam
pop
xchg
and
add
push
fldt
pushf
aad
inc
pop
or
cwtl
pop
mov
xor
pusha
cmp
pop
icebp
shlb
sarb
adc
pushf
add
push
fimull
lret
xor
imul
mov
and
sti
inc
dec
or
lcall
xchg
pop
inc
lahf
pop
aam
ds
repnz
mov
scas
into
sti
aad
pushf
out
inc
xorl
pop
mov
push
dec
sub
mov
push
mov
sub
inc
mov
sarl
orb
cmpsb
int
insb
add
xchg
jae
rcll
mov
pop
not
pop
loope
imul
lock
inc
xor
out
cld
jno
mov
pusha
and
dec
mov
dec
jno
fwait
cmc
nop
mov
and
into
outsl
mov
dec
test
out
and
mov
xchg
imul
cmp
or
mov
or
fucom
adc
xchg
hlt
lret
jmp
sarb
jbe
add
push
mov
pop
pushf
cmp
xor
cmp
mov
or
mov
and
mov
testl
fwait
imul
or
inc
mov
xorps
scas
push
or
add
lock
inc
xchg
push
jp
ret
sbb
add
loopne
mov
sahf
xor
xchg
jl
xor
dec
sbb
sub
fs
arpl
dec
hlt
repnz
push
ljmp
negb
shrb
lea
mov
shl
and
movsb
and
cmp
xchg
je
sub
fldl
aaa
mov
pop
sar
xchg
aas
ret
mov
dec
into
xor
mov
aas
xor
out
popa
cmp
mov
in
scas
dec
mov
or
sbb
repz
and
cmp
dec
daa
mov
mov
lret
decl
fwait
xchg
enterw
sbb
adcb
jmp
adc
pusha
pusha
mov
xchg
xor
inc
scas
cld
push
xchg
pop
in
mov
mov
jno
push
inc
fdivl
and
xor
pushf
lock
jnp
rcrl
into
sbbb
lods
xchg
fcmovu
cmc
lods
pop
js
test
adc
xchg
dec
imul
dec
xor
push
popa
mov
fld
lods
es
mov
movsb
push
loope
push
push
orb
xor
cwtl
sbb
jmp
enter
testl
pop
add
mov
mov
jns
shll
or
inc
je
push
sbb
mov
movsl
out
sub
or
dec
or
and
pop
les
mov
lret
dec
scas
cmp
and
dec
ret
adc
mov
stos
pop
jnp
je
and
fiaddl
or
ret
test
adc
mov
test
clc
dec
ljmp
pop
cli
sub
cwtl
bnd
mov
mov
add
sar
pop
call
cmp
fwait
cmp
daa
stos
xchg
call
sub
inc
test
jns
jmp
mov
das
push
or
cmp
popa
aam
mov
pop
and
stos
jne
sub
fidivrs
sbb
lea
lahf
outsl
cs
movl
mov
ja
ja
leave
xchg
push
xor
insl
sbb
xor
movsb
test
ss
xor
insb
mov
sub
jle
mov
and
clc
and
xchg
clc
loope
out
adc
mov
inc
or
sub
push
xchg
pop
sti
cmp
add
adc
mov
lret
push
xor
decb
mov
pop
sub
in
mov
adcl
pop
cmpsb
dec
stos
insl
mov
rcrl
add
pop
aaa
sub
xor
dec
ret
dec
inc
inc
lods
cmp
inc
jmp
cmp
mov
sahf
imul
cmpsb
xchg
fsubs
aas
pop
pop
jg
xor
jae
adc
std
xchg
xor
push
shlb
jno
outsl
adc
push
les
cltd
dec
jmp
mov
ret
pop
les
xchg
ss
out
stos
push
xchg
movsl
icebp
jge
fildl
stc
cmpsb
lea
jge
cli
ljmp
add
xor
cmp
mov
pop
jecxz
add
push
inc
ffreep
sub
lea
scas
in
les
testb
aaa
mov
popa
and
outsb
and
test
lock
les
dec
es
fsub
rcl
push
inc
out
fimull
mov
xor
mov
movsl
divl
xchg
aad
or
loopne
pop
xor
jmp
loopne
xchg
add
xor
jbe
loope
sub
dec
jmp
into
addb
adc
and
mov
add
pop
in
sbb
jmp
cmpsb
imul
movsb
pop
pop
or
dec
mov
gs
aam
aad
int3
mov
or
ret
jle
xchg
fwait
test
xor
insb
jae
fucomp
or
sub
ljmp
add
or
sbb
sbb
cld
dec
daa
sbb
mov
and
dec
fimuls
dec
outsl
sub
mov
int
movsb
ficomps
and
sub
out
xchg
xchg
xchg
inc
je
adc
iret
sub
call
cmp
cld
leave
test
sub
loopne
nop
gs
in
leave
pop
sti
jns
mov
jo
add
or
add
cmp
jmp
add
es
imul
mov
jg
js
or
push
je
or
jmp
fwait
cmp
repnz
ss
std
add
sbb
fucomi
push
inc
test
ret
and
mov
inc
sbb
scas
data16
cmpsl
add
inc
xchg
mov
mov
loope
inc
fisubs
jecxz
cmp
repz
repz
xchg
xlat
imul
mov
add
shrl
pop
into
cld
adc
in
test
out
jnp
pusha
or
xchg
jecxz
add
mov
or
jne
jl
test
paddw
xlat
xchg
push
dec
push
ficoms
push
xor
call
dec
or
adcb
xchg
hlt
test
and
jl
jge
int3
jb
cltd
and
ret
shrb
inc
gs
adc
dec
outsb
or
and
fwait
push
mov
sbb
movsl
cmp
xor
aad
dec
inc
fsubrl
mov
xor
ret
iret
sbb
jge
imull
rcr
add
cmp
leave
lock
lret
sar
addr16
aaa
arpl
or
sub
xor
and
test
xchg
test
jmp
les
in
cmp
imul
add
insl
pop
gs
adc
adc
jb
xchg
mov
dec
sub
dec
fisubl
xchg
rcrb
rorb
sbb
xor
scas
mov
push
lret
sbb
jno
mov
xchg
mov
sbb
xor
test
xor
out
out
lret
pop
hlt
ffree
dec
scas
xchg
xchg
sub
loope
fnstsw
insl
xlat
js
fisubl
sarl
ficompl
stos
push
xor
iret
in
repnz
hlt
jl
inc
repz
xlat
dec
cmp
cmpsb
in
mov
fwait
mov
dec
shrb
mul
mov
aaa
aas
sub
dec
les
dec
xor
adc
dec
popf
mov
mov
xor
dec
rcrb
ljmp
and
cmp
fistps
xchg
pop
inc
jg
scas
movsb
daa
gs
mov
mov
fistpl
pop
sbb
es
scas
xchg
push
fdivl
test
push
test
cmp
push
push
xor
mov
bound
call
ja
adc
jb
sbb
in
test
or
aad
loope
pop
mov
test
dec
xor
cmp
fmull
mov
lds
jle
pop
int
das
mov
pop
into
sbb
movsl
mov
std
repnz
cld
pop
mov
cmp
xchg
cs
jae
insb
and
sti
mov
or
lods
push
pop
sbb
call
cmp
mov
push
out
mov
jb
push
cmpsb
insl
jno
sub
adc
xchg
jb
lahf
xor
xchg
adc
pop
xchg
push
or
loop
xchg
fcmove
fldcw
fucomip
jle
push
in
jl
push
sbb
repnz
in
popf
gs
shrl
or
in
cli
lcall
inc
sub
scas
fwait
mov
sarl
in
cmp
popa
cli
pop
pop
cmp
leave
stos
sub
push
mov
clc
mov
push
and
xchg
mov
push
shll
mov
rcll
movsb
daa
stc
rcr
sub
xchg
jge
xlat
dec
xor
mov
movsb
xchg
ja
decb
lret
sub
pop
addr16
jl
cmp
sub
ss
into
and
dec
push
aas
xchg
pushf
idivb
lock
jge
or
cs
xorl
xchg
jne
pop
or
mov
mov
mov
xor
jo
jae
lea
mov
pop
lods
add
xor
jp
dec
push
call
ret
add
in
es
pop
les
scas
das
ja
cmc
fstp
push
inc
cli
mov
div
es
leave
and
orb
inc
inc
inc
pop
xchg
dec
inc
leave
xchg
in
push
push
jp
xor
jle
fsin
jg
and
in
sbb
lret
fistps
cltd
shlb
lock
push
push
mov
fcmovnu
mov
icebp
jmp
sahf
pop
sbb
and
cmpb
mov
push
stc
lock
xor
out
mov
stc
jo
cmp
fs
push
ret
ds
jecxz,pt
pop
and
fistpll
inc
mov
pop
push
adc
dec
mov
out
movsb
inc
cmp
icebp
ds
adc
cmpsl
xchg
dec
mov
push
xor
int3
loope
cli
add
dec
inc
mov
dec
enter
add
sbb
mov
mov
adc
aaa
cmp
pop
sarl
cli
push
sub
or
sbb
lods
inc
inc
xchg
sub
xchg
inc
sahf
bound
imul
out
cld
inc
xor
data16
mov
jno
cltd
mov
cmp
push
sti
cmp
rolb
sbb
inc
scas
bound
pop
xchg
sub
movsb
jecxz
pop
test
iret
jnp
imul
xchg
xor
push
xor
test
sarb
push
add
mov
lret
or
cs
inc
es
es
pop
or
push
std
pushf
mov
sub
lds
xchg
mov
cmp
mov
int3
cli
in
mov
sbb
cmp
rcl
fwait
jecxz
inc
jecxz
xor
scas
adc
sbb
and
das
sub
push
div
and
dec
mov
xchg
add
push
mov
clc
mov
lock
mov
outsb
sbbl
movsb
xchg
jecxz
adc
bound
cmp
ret
inc
test
push
sbb
sub
pusha
cmc
int3
jns
pop
fidivrl
pop
jo
push
sbb
sbb
pop
jns
xor
and
rcll
aad
mov
outsl
cs
xor
std
lret
movsb
sub
pop
mov
jp
popf
mov
mov
andl
rclb
cmpsb
add
leave
push
xchg
jne
xchg
push
mov
xchg
mov
and
sub
je
sarl
push
popa
inc
fdivl
fwait
out
pop
sbb
pop
leave
std
sbb
mov
arpl
sub
arpl
xor
jns
push
pop
pop
pop
mov
sbb
fdivs
orl
xchg
mov
inc
push
sbb
xchg
test
sub
mov
lahf
adc
mov
out
loopne
or
clc
out
fsubl
push
fisttpll
mov
nop
mov
loop
mov
xchg
mov
mov
adcl
fcoml
or
cld
lahf
jmp
testb
out
jp
add
loope
js
in
dec
add
xor
or
iret
sub
add
clc
or
add
mov
cmc
fwait
jb
cmp
jle
xchg
test
sub
cmp
aas
sbbb
fisttpll
lock
shl
mov
or
or
xchg
test
and
out
sbb
add
inc
stos
fbld
repnz
mov
dec
xchg
cmc
mov
cli
dec
lret
frstor
and
pusha
add
push
mov
mov
sbb
pop
divl
inc
gs
push
sub
push
jnp
aam
jmp
popf
add
or
mov
cmp
cmpsb
stc
pop
or
and
stc
lret
fsubp
pop
xor
daa
inc
sub
call
mov
cmp
mov
mov
dec
xor
mov
cltd
imul
cmpsl
inc
loope
jb
jbe
lea
int
jle
test
xchg
inc
mov
cltd
lahf
mov
mov
sub
mov
pushf
or
loopne
out
rolb
fimuls
inc
push
aas
addl
cmpsb
sub
push
cmc
inc
in
and
xchg
pop
cmp
ja
or
pop
out
pop
in
shll
mov
ret
loope
xor
popa
cmp
sub
pop
daa
loope
add
push
out
mov
xor
mov
mov
mov
add
imul
pop
push
lcall
sti
outsb
stos
jb
jecxz
push
mov
push
dec
in
insl
jl
fwait
sub
sub
rol
sbb
sub
outsl
lods
xor
stos
or
std
movsb
mov
lods
mov
cmpsb
cmp
jnp
mov
jle
loope
dec
mov
hlt
scas
mov
outsl
push
int3
lret
sahf
push
mov
sub
push
inc
add
movsl
sbb
int3
ljmp
sbb
jae
sub
int
loopne
cli
adc
push
jo
in
inc
iret
xor
out
jae
popf
cmc
dec
lods
imul
movl
sbb
lea
js
out
aad
in
cmpsb
push
std
jle
mov
imul
xor
push
imul
sahf
das
fwait
cmp
decb
enter
insl
ljmp
lods
loopne
outsb
hlt
cmpsb
fiaddl
clc
ret
mov
stos
loope
fs
push
in
cltd
xlat
arpl
jne
pop
loopne
ffreep
push
mov
dec
test
and
mov
jb
and
icebp
mov
pop
out
xlat
cmpsb
cmp
pop
sub
loop
mov
repz
push
and
fwait
insb
xlat
xor
out
xchg
push
or
ljmp
fildll
inc
jge
cmpsl
outsl
test
mov
dec
loope
mov
fs
jno
addr16
push
stos
dec
les
inc
push
add
clc
ja
imul
jns
cs
js
add
push
cmp
jmp
and
sub
adc
mov
inc
sbb
push
add
sbb
cmp
shrb
int3
dec
lret
and
cmc
xor
ljmp
movsl
mov
shl
mov
mov
push
std
sub
das
loopne
jbe
rolb
and
jp
jmp
cmpsl
and
xchg
xchg
mov
ljmp
dec
dec
xlat
sbb
pop
pop
sub
sbbb
jle
fists
cld
cmpsl
sbb
inc
push
xchg
mov
cmpsb
inc
xor
jnp
xchg
pop
scas
fistpll
movsb
push
or
ds
in
mov
jae
test
test
int
push
mov
shl
cmpsb
add
lcall
sti
repnz
inc
jg
jns
daa
scas
hlt
ret
or
inc
sbb
dec
mov
movsl
add
fidivrl
sarl
add
sbb
bound
stos
shlb
stos
mov
xchg
xor
shll
sahf
lea
xor
push
jp
cli
or
mov
shlb
dec
push
cmpb
mov
subb
jnp
push
into
adc
lret
jb
and
or
stos
decl
mov
inc
and
and
and
sahf
jg
sbb
hlt
or
aas
pop
adc
or
lods
out
outsb
inc
lea
sub
mov
lahf
add
outsl
xchg
and
loop
mov
outsb
je
test
and
cwtl
daa
leave
mov
xorb
adc
aaa
movsb
int
push
fiaddl
cld
and
test
sub
stos
dec
inc
xchg
enter
adc
call
push
mov
sahf
push
pusha
inc
xlat
int
cmp
fildll
pop
iret
push
arpl
dec
inc
inc
std
inc
lds
or
sub
pop
popl
idivl
es
jae
imul
mov
rcll
repz
and
or
xor
aaa
lods
lcall
testb
pushf
test
icebp
les
out
push
lock
jl
adc
cs
fsubr
cli
cmc
mov
xlat
jb
mov
push
jae
rorb
dec
pop
sbb
mov
aaa
daa
ret
shll
xchg
inc
shrl
push
mov
jo
jns
sbb
mov
mov
jne
aad
dec
jecxz
movsl
inc
ja
jnp
mov
mov
movsb
adc
mov
xor
cmpsl
or
or
mov
leave
sarl
xchg
jle
xchg
add
call
out
popf
xchg
mov
cmp
pop
xchg
aaa
sub
insl
aam
dec
jle
pop
add
inc
fildll
stos
adc
movsb
push
das
insl
xor
jmp
pushf
jl
jl
sub
fcomps
pop
push
outsl
or
fsubrp
je
dec
out
cmp
jmp
ret
jno
sarl
adc
inc
aad
adc
jg
cmp
insl
out
pop
or
sahf
fwait
adc
mov
mov
out
pop
es
cmp
imull
push
iret
and
inc
rorb
xchg
and
je
or
xorb
mov
add
add
adc
inc
push
add
fcmovnbe
lds
xor
outsb
cli
js
aad
mov
push
pop
xor
ss
add
pop
mov
or
sub
sbb
clc
mov
xor
ja
scas
inc
lods
fisttpll
js
dec
sbb
or
pushf
cmc
adc
pop
jmp
gs
loop
pop
mov
cmpsb
imul
addr16
xor
mov
ljmp
jl
jp
movsb
inc
ljmp
ret
sbb
add
add
jge
pop
mov
bound
invd
pop
add
das
xor
and
sub
inc
sub
stc
xchg
xor
stc
popl
das
add
or
push
idivl
les
jecxz
sub
nop
test
cmp
pop
scas
add
cs
pop
js
inc
jo
sbb
aas
lahf
dec
add
psubusb
jnp
xor
and
cld
sub
mov
xchg
mov
inc
mov
jbe
cmp
cli
je
insb
subb
push
pop
jo
aad
and
dec
leave
mov
fidivrl
xchg
imul
xor
jge
outsb
mov
bound
sub
jecxz
outsb
fs
push
popa
into
out
stc
and
xchg
pop
mov
lahf
cmc
fisttpll
push
jnp
pop
rorl
ss
mov
push
std
gs
fld
mov
add
mov
rclb
in
or
pop
dec
mov
push
dec
in
pop
out
sub
adc
inc
lret
fnclex
xor
sti
inc
mov
fs
clc
jo
movsb
in
cmp
cmp
xor
stos
pop
outsl
or
fadds
je,pt
cmp
push
and
ss
divb
jge
pushf
jg
lahf
mov
xorb
lahf
sahf
adc
mul
adc
and
pop
fsubr
mov
xchg
js
jle
dec
loop
icebp
push
aad
jmp
jnp
sbb
adc
and
jbe
sub
dec
xor
out
dec
inc
push
aas
cli
outsb
ret
test
xchg
cli
lds
ds
push
ror
mov
cwtl
sbb
pop
xor
mov
xor
xor
aad
jge
xchg
lret
sub
add
das
cmp
cmovns
rcl
adc
mov
test
jne
mov
dec
mov
sbb
or
pushf
rcll
jmp
test
into
xor
jnp
pop
aaa
mov
mov
in
mov
insb
sti
xor
push
nop
cmc
aaa
aaa
and
jnp
cltd
xchg
fiaddl
decl
push
scas
dec
aam
mov
sahf
mov
push
jbe
icebp
jae
leave
adc
cmp
cmp
js
add
outsl
and
mov
pop
lret
insb
mov
movsl
dec
dec
cwtl
mov
pusha
jle
pop
insl
js
addr16
inc
inc
rcll
pop
jno,pn
fwait
loope
cmc
pop
aam
ror
lret
dec
sbb
jg
jno
and
cmp
adc
das
fwait
jnp
aad
push
cld
sub
shrb
insl
inc
mov
push
sbb
add
dec
fnstenv
addr16
xchg
adc
inc
in
lock
sub
pop
push
andl
test
mov
dec
xchg
sahf
and
in
mov
ja
cltd
ds
pushf
or
ret
nop
ss
cwtl
push
lods
inc
movsb
lret
pop
or
push
sub
xchg
enter
or
inc
sub
mov
jp
jne
mov
and
inc
fstl
jbe
xor
add
ljmp
clc
fs
movsl
mov
repz
jns
inc
cmp
push
push
sub
das
pop
rcrb
aam
in
and
aas
jne
mov
and
rcr
and
and
push
cmpb
mov
lahf
neg
jmp
outsl
cld
xor
bound
sbbb
sub
cmpl
jbe
dec
lods
aad
fdivr
int
push
out
fpatan
test
jl
push
sub
je
adc
repnz
xor
mov
repz
xchg
rolb
movsb
rcrl
mov
xchg
addb
pusha
hlt
outsb
cmp
mov
std
shrb
mov
enter
into
mov
push
mov
push
add
das
adc
clc
dec
iret
push
ret
jge
inc
lea
pusha
and
mov
pop
ljmp
dec
mov
in
addr16
aad
jnp
and
daa
add
mov
outsb
add
outsb
in
jns
in
jno
cmc
es
sahf
xor
sbb
lcall
andb
lods
mov
nop
adc
mov
sar
in
pop
add
cwtl
pop
jns
mov
sahf
sub
xlat
loop
rsqrtps
or
icebp
les
les
mov
inc
xor
push
inc
xor
roll
cmp
cli
data16
stc
clc
jb
mov
shll
mov
aam
xchg
adc
xchg
push
jo
dec
fistl
movsl
push
mov
push
ja
xchg
pop
jo
mov
xchg
cmp
ret
mov
push
push
cmpsl
cs
cmpsl
in
dec
add
es
push
pop
loope
cmp
ljmp
dec
aaa
pop
xchg
stos
das
pop
gs
int
rorb
sahf
lock
rcrl
hlt
push
mov
pop
movsl
adc
loope
push
and
movsb
test
jnp
rorl
and
stos
movlps
lret
push
sub
mov
pop
es
or
sbb
fisubrs
jae
clc
jecxz
es
cltd
pop
shrb
loop
lods
lret
sub
push
push
xor
mov
shll
flds
out
cmc
jecxz
push
sub
jne
sub
xor
insl
add
js
dec
jnp
sub
stc
stos
jmp
dec
mov
jnp
mov
clc
lret
inc
decb
add
inc
push
dec
loop
xchg
adc
fdivs
adc
lcall
repnz
ret
loopne
cltd
push
out
adc
lahf
imul
jb
ror
test
mov
xchg
repz
addl
call
and
mov
dec
or
or
xchg
dec
xchg
mov
pop
loop
les
mov
mov
test
repz
cli
add
icebp
and
scas
int
mov
mov
nop
pop
xor
mov
popf
fnstenv
stos
xor
fisubrs
ret
cmc
shlb
mov
xlat
out
dec
mov
xor
fnstsw
data16
jge
sub
ljmp
aad
stc
mov
cmp
and
push
test
jmp
and
jae
movsl
leave
mov
gs
add
mov
pop
fimull
push
jl
sub
push
xchg
fmull
mov
adc
mov
sti
pop
loope
rolb
mov
imul
inc
and
pop
mov
xor
inc
mov
add
sub
dec
sbb
cmp
xchg
outsl
jp
dec
aas
int
jnp
inc
test
mov
pop
mov
add
sub
mov
jnp
mov
add
cltd
test
push
outsl
ret
pop
lods
sti
sbb
mov
je
mov
sti
enter
add
sbb
jmp
movsb
shll
pop
test
test
mov
into
xor
outsl
in
not
jg
add
jge
push
lods
mov
fldl
pop
xor
mov
xchg
lock
add
test
arpl
dec
mov
test
loop
push
xor
gs
inc
aam
inc
push
stos
mov
shr
mov
jns
lods
mov
fisubrl
imul
clc
gs
repnz
push
insl
xchg
ret
jmp
adc
jno
sarl
or
mul
sti
jmp
ret
dec
mov
aam
ret
xchg
and
mov
mov
shlb
bound
mov
aaa
rcrl
dec
and
stc
fistl
xchg
add
mov
hlt
push
das
cmp
inc
pop
leave
push
stos
cmp
xor
in
xor
cs
test
mov
jp
add
test
test
cmpsb
fiaddl
test
jle
das
or
addr16
dec
inc
sti
stos
sti
pop
cmc
add
lods
mov
jo
cwtl
adc
jae
push
mov
lods
rorb
in
sbb
cld
pop
sub
in
inc
scas
mov
leave
jge
adc
inc
pushf
jae
popf
stos
test
subb
push
std
cli
icebp
cmpsb
ret
dec
test
in
cs
stc
mov
fwait
test
movsb
stc
sbb
and
cmc
push
js
orl
pop
xchg
dec
stc
gs
sti
push
jno
les
stc
mov
xchg
lock
sar
test
les
dec
test
or
jne
xlat
dec
mov
ljmp
ss
xor
subl
jmp
pop
mov
dec
clc
dec
mov
mulb
hlt
push
lods
jge
enter
and
cmp
movsl
xchg
pop
mov
cs
aas
fwait
jo
popf
mov
mov
fprem
jno
pusha
push
out
jno
push
mov
add
pop
aas
lds
mov
mov
or
gs
xchg
push
iret
movsl
mov
js
mov
sub
ret
shl
mov
mov
sub
jnp
jge
scas
jge
mov
jbe
xchg
fisttpll
jp
sti
mov
add
xchg
les
sub
data16
hlt
shl
popl
add
push
and
push
mov
call
das
xchg
addl
mov
les
or
adc
push
and
sbb
cwtl
mov
popf
pop
das
scas
in
pop
or
or
scas
test
mov
mov
fwait
xchg
mov
cli
jnp
test
add
mov
mov
xor
aam
add
push
in
jecxz
pop
cmp
xor
pop
add
adc
mov
sarb
fistpll
test
mov
jl
repz
stos
mov
xchg
sbb
fldt
popf
pop
movsb
cmp
cli
xor
gs
dec
cwtl
mov
fmuls
gs
mov
sub
sahf
cmp
jne
stc
jecxz
or
mov
mov
mov
jp
jae
xor
sub
dec
repz
jp
mov
int3
push
adc
nop
pusha
cmp
jo
jg
push
rol
pop
pop
push
roll
fmuls
ret
xor
mov
cbtw
sub
jne
push
popf
mov
or
outsb
shr
mov
xor
mov
cmpsl
dec
movsl
and
in
nop
rcll
mov
push
ror
mov
rcr
pop
fsts
ds
movsb
inc
fs
adc
cmp
sub
fdiv
push
rep
xchg
movsl
xchg
mov
in
rcrl
add
mov
inc
pop
imul
nop
push
out
cltd
dec
fstl
jl
mov
imul
mov
dec
mov
sbbb
repnz
fs
aad
divb
mov
lds
xor
loopne
dec
xchg
jecxz
sbb
jle
lds
cmpsl
push
pop
cmp
sbb
inc
clc
movsb
loopne
push
xor
jbe
jo
jnp
out
jne
mov
mov
pop
imul
push
jo
cmp
mov
jb
mov
xchg
jle
cld
lret
stc
pop
fcomip
loop
jge
cmpsb
lock
scas
das
adc
mov
add
aam
negl
dec
pusha
cmp
leave
rorl
rcr
xlat
jb
rcrl
lahf
xchg
repnz
mov
xor
sbb
sub
ja
add
dec
out
mov
mov
sub
mov
outsl
pushf
aaa
mov
stc
jae
inc
cmpsb
inc
or
scas
jmp
pop
fwait
decb
sub
xor
pop
fidivs
cmp
out
addr16
clc
xor
mov
enter
shll
shlb
fldenv
add
jl
movsb
push
or
jle
xorb
stc
ror
mov
mov
aas
fsubp
das
sub
loopne
cmp
pop
lods
cli
inc
lcall
pop
xor
ljmp
test
xchg
rorb
call
frstor
test
adc
dec
inc
pop
mov
mov
xchg
push
jle
clc
sti
and
mov
cld
out
jno
enter
xor
shlb
iret
jae
lret
xchg
into
add
mov
call
movsl
push
xchg
mov
sbb
das
ret
sbb
sub
aam
ja
fptan
inc
or
dec
test
mov
dec
andb
insl
sbb
rcrb
cmp
lea
outsl
inc
jae
adc
adc
aam
push
jbe
outsl
mov
and
arpl
cltd
pop
icebp
mov
call
mov
hlt
xor
push
inc
shll
add
and
jmp
mov
xor
mov
lods
lods
popa
pop
mov
inc
mov
mov
adc
cmp
shll
inc
xchg
loope
pop
push
mov
cmpb
cmp
jecxz
cmp
add
sbb
cli
test
dec
pop
inc
mov
je
sub
jle
rolb
movsl
lds
adc
inc
dec
nop
pop
dec
jp
ret
jo
jne
subb
cmp
cld
pusha
adc
cmp
xchg
pushf
mov
in
gs
movsb
divl
add
mov
iret
pusha
mov
pop
jecxz
data16
lret
js
mov
test
cmpsl
sbb
inc
insl
imul
jb
mov
jg
lock
gs
jg
jecxz
aaa
adc
out
jb
loopne
cmp
dec
push
sub
xor
mov
or
ljmp
hlt
xchg
fldenv
ficoml
loop
in
cmc
sub
cmpsb
xor
xchg
movsl
jmp
daa
iret
fwait
popf
cmp
inc
and
cmp
cmp
inc
mov
adc
in
dec
cld
mulb
daa
fmull
ret
icebp
dec
pop
dec
xchg
dec
mov
test
icebp
inc
mov
sbb
adc
into
push
jmp
inc
insl
ret
js
ds
outsb
pop
cmp
push
inc
nop
pusha
sub
mov
gs
fnstenv
cmpsl
outsb
mov
rolb
xor
mov
popa
dec
dec
jo
cmpsb
and
mov
jb
mov
sti
fisttpl
enter
and
pop
jnp
ror
in
xor
repz
mov
mov
jne
xorb
out
stc
sub
sub
scas
test
aas
test
fs
mov
insb
inc
jnp
pop
inc
sbb
pusha
mov
icebp
pop
aas
push
inc
icebp
mov
adc
xchg
or
xchg
imul
push
shl
xchg
push
lea
jmp
xlat
or
sbb
xchg
idivl
mov
mov
lods
bound
pop
dec
adc
pusha
subl
xor
cmc
and
push
das
mov
pusha
arpl
push
push
jno
adc
ja
daa
mov
ljmp
jns
jb
inc
jg
addb
movsl
cli
dec
arpl
pop
pop
lods
lea
xor
mov
push
mov
in
roll
repz
cwtl
jb
xchg
test
mov
std
sbb
mov
fisubs
dec
nop
gs
and
sahf
movsl
mov
sub
xchg
mov
insl
cmp
idiv
cltd
and
inc
jmp
mov
lds
xchg
push
add
sarb
cmp
movsl
xor
in
dec
fwait
add
xor
add
add
divb
aas
dec
out
xor
stc
push
testb
jbe
and
in
inc
or
xor
fadds
jp
test
sbbb
decb
and
mov
pop
arpl
mov
popf
fstpl
js
xor
jle
ja
adc
cli
xchg
push
lcall
cld
lods
aaa
inc
adc
mov
jb
out
je
iret
iret
fisubs
jo
stos
lcall
insl
or
cli
sub
xor
fstps
ret
push
es
outsb
adc
inc
lcall
rcr
rorl
mov
pop
repnz
cs
sbb
es
lock
mov
movsl
or
pop
jecxz
loope
fadds
call
xchg
mov
outsb
push
cld
mov
mov
pushf
mov
and
push
mov
jg
sub
mov
aaa
xchg
adc
or
xor
fsubr
stc
inc
jns
lret
sub
mov
and
jge
mov
pop
stc
add
stos
sub
lea
clc
daa
xchg
jnp
out
cs
or
cmp
mov
jp
dec
pop
mov
jns
arpl
imul
iret
dec
sbb
enter
mov
stos
sbb
movsl
adc
push
mov
ljmp
negl
hlt
add
popf
mov
jge
pop
add
dec
cmpsb
into
mov
les
or
les
or
or
mov
adc
out
aad
pop
jl,pt
in
xchg
mov
lea
lea
adcb
adc
std
insl
jmp
lahf
mov
js
in
push
push
cmp
or
jecxz
dec
cmp
shl
jnp
popa
fldt
or
sti
jmp
iret
inc
mov
icebp
outsb
cmp
repnz
pop
mov
es
loopne
mov
sbb
mov
adc
xchg
test
pop
sahf
lods
mov
push
sbb
paddd
in
xor
dec
in
lcall
jns
mov
inc
inc
or
mov
xchg
lcall
pop
dec
mov
rorb
cltd
addb
les
sbb
xor
ljmp
pop
dec
in
add
inc
push
push
and
clc
dec
jo
cli
mov
fnstsw
test
lods
loope
call
lret
push
scas
mulb
and
sbb
les
shll
mov
mov
test
mov
daa
jb
jns
cmp
pop
mov
movsl
jae
push
mov
xor
jle
or
sbb
push
xchg
sbb
lret
pop
ja
cmp
sahf
adc
or
or
daa
js
sbb
pop
iret
popw
sub
subb
insl
mov
xchg
outsb
inc
jecxz
sbb
loop
nop
or
push
ret
dec
adc
mov
jge
mov
jge
outsl
mov
jmp
jmp
cltd
insl
jp
pop
or
cmpsl
mov
pop
dec
fsubrs
pop
test
xorb
sub
ffreep
stc
jmp
pop
insl
movb
push
mov
adc
insl
mov
pop
inc
jne
cmp
out
call
sub
jle,pn
cmp
add
pop
ljmp
pop
lahf
pop
je
push
idiv
addr16
je
fildll
stos
movsb
dec
sub
xor
sub
popa
ljmp
mov
out
pop
ss
pop
jmp
insl
in
inc
movsb
and
cmpsb
inc
fs
fldcw
imul
inc
jecxz
add
into
inc
jb
pop
je
aad
int3
pop
jmp
shrb
jae
push
pop
in
xor
inc
and
lret
mov
sbb
ret
add
in
insl
gs
stos
stos
xor
cmpb
loope
mov
sbb
mov
aas
fidivs
or
outsb
sub
lcall
and
sbb
cmc
add
ljmp
stos
in
in
jge
jmp
xchg
lret
push
or
repnz
aaa
rorl
je
fdivrs
sbb
mov
adc
adc
jmp
dec
test
inc
sahf
xor
inc
cmp
in
xor
push
cmp
pop
icebp
scas
fsubrl
idivb
mov
aas
scas
xchg
push
pushf
sbb
jo
mov
pop
shll
jae
gs
idivl
std
cmp
xor
cmpsl
mov
push
jnp
jmp
cmc
mov
fisubrl
xchg
js
int3
shrl
jo
xchg
xor
js
add
fs
or
pop
mov
aas
push
adc
mov
loop
add
xlat
pushl
add
mov
jecxz,pn
loopne
or
adc
bound
arpl
hlt
aas
jg
mov
nop
ss
clc
mov
lea
add
push
xchg
jge
cmpsb
into
test
jae
movups
fwait
xchg
and
scas
mov
repz
aas
test
mov
adc
add
adcl
das
push
add
cmp
in
sti
movsb
les
movsl
addb
in
rclb
aad
insl
lods
and
jecxz
movb
outsb
mov
adc
push
xchg
mov
or
xor
rolb
in
jg
and
aad
fsubl
imul
jge
xchg
mov
cmpsb
cltd
and
shll
mov
push
scas
sbb
movl
xlat
pop
imul
xchg
cli
sti
pop
nop
mov
testb
and
mov
sahf
add
subb
std
pop
xchg
mull
jmp
pop
lods
inc
sub
mov
jmp
mov
jg
repnz
and
add
add
xor
daa
pop
pop
jmp
aas
jmp
lods
imul
mov
mov
out
cld
les
dec
mov
sub
into
cmpsb
dec
je
push
into
scas
ja
add
xor
pop
push
xchg
int
dec
ret
aad
inc
popa
aad
mov
test
sub
pop
movsl
mov
dec
testb
mov
and
stc
sub
push
in
imul
xchg
mov
mov
imul
push
pop
pop
loopne
sub
fwait
out
push
in
mov
jg
cli
mov
xor
roll
enter
and
scas
push
push
dec
sbb
sub
stos
cmpb
sub
xchg
jmp
bound
cmp
daa
push
dec
mov
js
cltd
dec
clc
lret
movsb
popf
push
inc
and
jb
mov
and
lcall
loope
daa
scas
mov
push
mov
pop
pop
mov
outsb
sub
add
cmp
pop
int
sub
fidivrl
pushf
and
das
mov
leave
mov
rcrl
inc
movsl
mov
sbbb
mov
int
pop
xchg
popa
cwtl
iret
arpl
pop
jns
mov
ret
clc
inc
ljmp
xchg
clc
clc
adc
pushf
inc
test
xor
stos
int
popa
pop
movsb
popf
xchg
inc
cmp
ljmp
roll
sub
and
inc
push
stos
cmpsl
mov
pop
cmp
mov
push
adc
test
sar
movsl
dec
adc
orl
lods
ret
fists
outsl
mov
in
out
js
fildl
call
test
dec
xor
mov
loope
int3
std
sbb
sbb
push
jmp
fldt
push
ret
ja
mov
dec
mull
or
or
mov
pop
dec
fcmovnu
push
xchg
imull
sbb
loopne
and
test
jns
xor
mov
cmpl
inc
into
jmp
mov
dec
sub
mov
xchg
dec
cmp
sbb
jl
adc
pop
das
adc
clc
jne
out
fwait
jl
insl
xor
mov
test
xchg
popf
pusha
cs
ss
fnstsw
dec
jg
and
push
lock
pop
mov
sbb
into
scas
cmp
scas
nop
cmp
stos
or
push
push
sbb
jmp
mov
cmp
fwait
dec
mov
mov
cld
imul
or
cli
xorb
mov
jge
mov
mov
enter
or
lahf
call
std
push
add
pushf
ret
dec
push
fidivs
lea
sub
loop
fnstcw
xchg
in
in
jnp
push
dec
push
bound
test
lret
or
popa
mov
sbb
adcb
shrl
pop
ja,pt
int
mov
inc
cmp
jnp
sbb
push
clc
add
scas
inc
jb
mov
dec
outsb
push
out
add
testb
cmp
xchg
je
inc
sti
xlat
fisubrs
mov
add
mov
imul
jo
xor
dec
and
xchg
ret
punpckhbw
popl
out
jae
inc
pop
sbb
rcr
jne
negl
dec
mov
sub
shll
inc
jge
stos
lahf
pop
xchg
js
xchg
xorl
mov
push
mov
push
mov
icebp
cld
xor
in
popf
int
push
cld
into
cmpsb
xchg
and
cld
loop
mov
in
fwait
shrb
mov
fs
mov
pop
out
subb
pusha
mov
xchg
psadbw
inc
test
scas
int3
sahf
mov
imull
and
fnstcw
dec
mov
mov
cld
cmp
add
mov
dec
jmp
cmp
movsb
repz
push
lret
sub
jecxz
shrl
aam
mov
adcb
lea
mov
fdivl
ficomps
aam
jmp
inc
lea
lahf
push
ljmp
jne
aad
enter
outsl
jecxz,pt
sti
jg
and
and
aad
ja
out
xchg
clc
das
add
push
pop
adc
cmp
pop
fcompl
popf
fadds
pop
cwtl
cmpsl
xor
shr
dec
je
mov
cmp
imul
mov
push
filds
lret
es
mov
inc
mov
lea
lea
push
mov
sub
pusha
xchg
xor
inc
aad
pop
inc
xor
inc
fcompl
inc
push
cmp
push
repz
or
in
sub
mov
dec
push
std
jg
pop
stos
daa
inc
movsb
aaa
scas
aam
push
xchg
popa
std
adc
sbb
pop
fwait
cmpsl
sub
or
scas
mov
lcall
loope
jbe
push
mov
add
xchg
mov
decl
dec
pop
fidivs
repz
pop
mov
cld
or
rcll
in
jg
mov
adc
and
stos
iret
out
out
mov
in
movsl
in
cmpsb
shl
outsb
and
sub
je
in
lahf
add
pop
xchg
pusha
sarl
lret
in
and
dec
xchg
jmp
sub
roll
ss
push
sahf
insb
movsl
adc
jg
dec
mov
nop
imul
adc
lock
dec
dec
movsb
add
adc
push
cmpsl
dec
sub
mov
pop
dec
mov
nop
inc
cmpsl
jne
subb
xchg
fcoml
popf
adc
in
aaa
pop
imul
push
sub
xchg
add
in
mov
adc
sarb
sbb
adc
inc
insb
insb
and
mov
dec
fstpt
ret
cmp
or
int3
push
icebp
push
test
int
cmp
lcall
into
aam
jnp
or
repz
jecxz
sarb
xchg
jnp
and
ret
mov
inc
scas
fwait
and
sub
cmc
call
mov
imul
xor
lds
push
inc
mov
enter
stos
pop
mov
cmpsb
into
and
test
imul
mov
inc
adc
lods
jp
popa
int
jle
mov
or
mov
mov
adc
and
aam
inc
je
mov
out
xchg
xchg
and
daa
sub
fisttpll
test
add
mov
ret
popa
adc
pop
jb
or
mov
clc
mov
inc
xor
outsl
sbb
or
aam
fwait
lock
fiaddl
cmp
xchg
stos
lret
lock
jb,pn
out
daa
and
cmp
jge
pop
daa
pop
mov
aad
xchg
cmpsl
gs
adc
lret
dec
xor
mov
push
idivb
push
dec
and
insb
mov
in
lods
testl
out
mov
adc
jne
xor
xchg
aam
inc
pop
adcb
test
mov
pop
mov
jno
pop
adc
dec
jecxz
data16
add
psrlw
mov
cmpsb
jmp
xchg
jecxz
fwait
popa
lahf
loopne
loop
sbb
out
idivb
sahf
dec
into
and
repnz
lods
movsb
sub
in
mov
pop
mov
in
frstor
int3
ds
sbb
push
es
mov
test
mov
push
mov
je
fidivl
insl
sbb
push
leave
aaa
xchg
cmc
add
movsl
sbb
xlat
jl
sbb
mov
cmc
add
scas
int
inc
fcomps
mov
adc
lods
jno
loop
inc
cmp
gs
lret
ljmp
mov
jae
push
or
add
adc
and
cmp
xchg
iret
xchg
push
daa
jae
and
push
xchg
int
rcrb
xchg
shll
push
sub
arpl
push
sbb
xlat
in
xchg
insl
sbb
xor
mov
test
aaa
fwait
dec
insl
dec
dec
cmp
add
pop
imul
mull
cmp
xchg
ror
push
pop
or
out
xchg
add
mov
sub
pop
iret
pavgb
lock
scas
sub
imul
test
sub
call
and
or
inc
or
iret
inc
pop
push
mov
xchg
jle
mov
test
fimuls
aad
movsb
push
hlt
sbb
pop
inc
xor
int3
mov
jo
mov
je
leave
push
clc
testb
sub
call
test
xchg
outsb
shlb
jae
ficomps
jp
mov
out
xchg
adc
cs
mov
outsl
sub
inc
std
add
ret
loopne
fldenv
std
orb
imul
xor
lods
jl
xchg
jns
xor
loopne
jno
cwtl
arpl
testl
pop
iret
jnp
sbb
insb
insb
jl
ret
fs
popa
imul
test
test
addr16
xchg
scas
in
jg
mov
sub
mov
cmp
in
xchg
xchg
xor
hlt
pop
insb
inc
jno
ja
push
ljmp
shl
add
lock
dec
leave
or
dec
nop
ja
mov
inc
int3
xchg
mov
inc
movsl
adc
mov
ss
mov
int
sub
mov
imul
jbe
sub
add
pushf
cmpb
and
cmp
lcall
andb
cltd
and
test
std
bound
cmc
lods
in
or
sbb
ret
inc
fidivrl
mov
push
jbe
test
ds
push
dec
inc
notb
and
push
shlb
mov
fucom
sbb
or
imul
push
dec
jne
sbb
mov
adc
dec
sbb
iret
mov
aad
in
push
inc
xchg
xchg
fs
hlt
mov
lea
pusha
xchg
inc
das
int
mov
push
dec
mov
cmpsl
mov
pop
adc
add
lock
xor
fimuls
ja
ljmp
int3
iret
push
cli
xor
push
lea
pop
xor
fimuls
mov
push
sub
inc
imulb
jg
clc
cmp
iret
mov
adc
inc
inc
xor
lahf
shlb
out
pop
pop
movsl
jbe
test
out
fst
mov
icebp
jo
xor
cwtl
jae
or
cmp
jl
and
es
repz
rclb
fidivrs
mov
push
cltd
mov
fldt
int3
mov
xor
aaa
lret
adc
push
out
cwtl
xchg
xor
cwtl
xchg
xchg
inc
fcoml
movsl
lret
dec
sbb
shl
or
xchg
lret
dec
or
sub
mov
xor
cmp
fmuls
mov
push
pop
pop
mov
mov
or
jle
sub
sub
xor
daa
cmp
jecxz
jl
fisttpll
dec
cmp
mov
lods
addl
mov
fstpl
aam
cmp
inc
or
lcall
mov
loope
ljmp
mov
stos
fiaddl
es
in
fs
lds
push
idiv
negl
xchg
adc
pop
insl
clc
mov
jae
ret
xor
std
cmp
push
cmp
xor
sbb
and
add
dec
aaa
sbb
aad
xchg
pop
jnp
fchs
or
in
or
je
mov
or
test
xchg
test
mov
movsb
pop
xor
inc
stos
adc
iret
imul
sub
mov
std
push
ficoml
lods
fld
add
sbb
add
fs
sub
scas
pop
push
and
roll
repz
xchg
in
sub
sub
dec
mov
add
cltd
xchg
cmpl
andb
push
nop
dec
xchg
lcall
mov
cs
adc
push
push
pushf
dec
fcmove
sub
pop
jne
adc
push
xchg
xor
pop
inc
push
mov
ljmp
lret
mov
sahf
out
adc
cmpsb
fnstenv
pop
out
nop
dec
cmp
sbb
ret
sbb
inc
lret
loopne
leave
frstor
cmpsl
dec
xor
int
mov
jl
fisubs
add
mov
imul
sub
cmp
andb
test
add
add
lret
js
out
jbe
jne
out
cs
inc
cmpb
push
insb
mov
sub
test
and
fadds
inc
bound
out
inc
mov
push
jge
jecxz
mov
repnz
or
push
add
jg
cltd
mov
mov
stos
les
pavgb
and
fcoms
imul
das
xchg
push
xor
lea
dec
imull
sub
movsb
mov
jae
or
test
pusha
push
sub
jmp
inc
das
popf
inc
subb
test
mov
test
rolb
dec
scas
push
adc
push
inc
jo
xchg
and
adc
add
cmp
push
add
pop
push
or
decb
in
imul
cs
add
push
icebp
ljmp
outsb
mov
enter
lret
js
add
sub
clc
jle
mov
insb
addr16
xchg
pop
xchg
shll
or
inc
cltd
jle
stc
xchg
repz
outsb
mov
push
xor
jns
pop
and
cwtl
push
enter
sbb
sbb
dec
stos
sub
f2xm1
cli
cmp
incb
jnp
jecxz
xor
xor
inc
out
push
jnp
sub
adc
mov
nop
cmc
sarl
cmp
add
js
ds
aam
mov
notl
jno
mov
or
xchg
push
cmpsb
mov
mov
xchg
mov
mov
js
call
mov
loope
inc
jg
call
outsb
cmp
nop
shrb
inc
or
jge
mov
xchg
sbb
xchg
inc
in
dec
paddusw
stc
pop
int3
js
mov
xor
pop
cmpxchg
mov
fdivrl
or
add
or
fdivl
out
mov
or
rcrl
jb
enter
orb
jecxz
mov
test
add
imul
mov
mov
lahf
pop
sbb
imul
repnz
stos
jne
test
outsb
ret
push
movsl
rorl
aaa
call
pop
push
jmp
testl
adc
int3
inc
mov
lock
or
inc
push
xchg
jl
sub
pop
pop
add
mov
cltd
enter
mov
add
pusha
sbb
ficoms
test
fcmovbe
pop
jns
lret
jmp
sbb
push
imul
psrad
pop
xchg
add
sbb
movsb
insl
xlat
call
add
into
mov
mov
pop
xorb
push
es
xchg
xor
hlt
and
and
rorb
push
sbb
adc
fdivp
dec
out
add
addr16
jmp
pop
std
mov
aam
jle
adc
inc
inc
pop
loopne
xchg
jecxz
cld
daa
inc
adc
sbb
cmp
cmpsb
lds
addr16
loop
inc
test
mov
in
cld
into
cmc
mov
sub
loope
sub
sub
mov
or
adc
xor
lds
shrl
fidivrs
or
mov
jnp
mov
mov
sub
or
adc
inc
dec
dec
jl
add
xchg
arpl
fsubp
repz
pop
sub
mov
jle
stos
mov
leave
repnz
lret
hlt
rcl
addr16
jmp
dec
pusha
mov
andb
je
jp
jo
push
push
push
adc
mov
scas
fdivs
rcrl
jg
das
xor
mov
in
cmc
mov
fdivs
or
imull
aas
out
pop
sbb
in
dec
jle
pusha
mov
int
dec
inc
aas
add
insb
fisubl
lock
pushf
bnd
cmp
shrl
cmp
mov
pop
mov
fidivrl
lock
dec
mov
dec
in
push
mov
or
std
pop
fisttpl
ljmp
adc
cs
hlt
lret
mov
call
jle
sub
ret
andl
push
nop
and
jg
jo
mov
jns
mov
pop
aas
stos
in
mov
mov
lret
popf
jb
sub
fsubrp
or
mov
push
xor
scas
lods
fimuls
lret
mov
add
and
push
pusha
imulb
and
mov
jo
js
jns
or
xor
xor
rcl
int3
mov
addb
and
mov
test
insl
dec
loopne
gs
inc
mov
cmpsb
lahf
push
outsb
push
jmp
pop
into
mov
cmp
insl
shr
out
nop
aad
push
popa
popa
dec
jge
cmp
xchg
mov
iret
scas
pop
push
fmull
lcall
fld
mov
les
cmp
sub
cmp
inc
into
out
xor
add
inc
add
push
data16
mov
data16
xor
mov
mov
push
cmp
inc
repz
in
not
and
lcall
jno
jae
push
notb
ds
inc
pop
in
push
jne
sub
jno
loope
testb
lods
mov
and
inc
int3
je
cmp
lea
cmc
add
inc
push
add
mov
out
sahf
xchg
pop
pop
push
and
stos
jg
adc
pop
jmp
mov
sahf
cmp
push
shll
stos
mov
jl
pop
xchg
inc
imul
divb
bound
xchg
jns
mov
xchg
or
pop
pop
loope
and
into
dec
cmp
add
jbe
mov
pop
cld
push
push
mov
dec
enter
add
stc
sbb
push
and
loopne
aam
in
sbb
dec
or
mov
mov
xchg
sub
mov
xor
aas
cmp
aas
add
test
inc
cltd
lods
or
cmpsl
jle
dec
xchg
lds
push
inc
adc
ret
imul
cmpsb
cld
ds
lret
xchg
shrb
mov
fyl2x
jo
loope
rcll
jg
ficoms
dec
ret
iret
ljmp
inc
jge
and
popf
sbb
rorl
icebp
mov
adcl
incl
dec
out
push
sbb
stos
sahf
cmc
ret
scas
pop
mov
mov
adcb
pop
xchg
sbb
loope
jp
cmp
adc
add
iret
aad
lds
cmpsl
inc
jge
stc
jae
or
shlb
xchg
mov
lea
and
clc
shll
jge
mov
inc
pop
lret
xor
insl
movb
jl
insb
cmpsb
pop
repnz
mov
inc
lock
jl
sub
in
lods
sub
and
jecxz
xchg
push
mov
enter
call
sub
mov
call
cmpsb
sub
loopne
lea
push
xchg
sbb
lods
jle
dec
imul
das
xchg
fnstsw
out
pop
push
sbb
imul
push
pop
mov
aam
insb
cmp
mov
inc
fsubr
and
push
sub
out
mov
loopne
cmp
lcall
inc
dec
pushf
pop
push
cs
mov
pop
pop
fisttps
stos
xlat
jge
pop
or
push
sti
pop
jge
fwait
lds
dec
stc
mov
mov
xor
callw
std
pop
call
mov
and
mov
shr
add
insl
lods
pusha
or
inc
push
movsl
lret
clc
xor
cwtl
loopne
andl
jl
fbld
das
inc
inc
push
mov
pusha
arpl
loope
aad
ja
mov
push
or
pop
test
pop
pop
xor
jo
mov
mov
dec
insl
mull
sub
lahf
xchg
cmc
outsl
cmp
hlt
adc
popa
xchg
mov
stos
leave
or
xchg
adc
mov
mov
and
mov
out
push
cmp
sbb
push
in
test
xor
xorb
loopne
push
in
push
mov
sbb
loop
sub
mulb
fnstsw
pop
mov
add
jno
xchg
dec
add
test
mov
adc
or
mov
fs
ret
je
hlt
fs
jnp
add
ss
or
sub
dec
stc
sub
lea
out
aas
imul
and
aaa
pop
decb
pop
lds
xor
xchg
pop
xchg
es
dec
insb
sub
adc
sub
je
jecxz
pusha
dec
and
insl
sub
mov
jl
or
popa
je
sub
test
shlb
push
test
jmp
or
rol
cmpsl
clc
sub
cmp
and
mov
sahf
mov
fdivrs
mov
mov
es
repz
mov
sbb
lret
pop
nop
lahf
mov
xor
push
ljmp
xlat
inc
cmp
in
imul
mov
xlat
sub
je
push
icebp
adc
mov
lods
mov
jns
loop
add
jg
ss
sbb
loop
mov
adc
sbb
mov
fs
add
push
call
push
pop
loopne
mov
cmc
mov
xlat
mov
stos
aaa
lods
or
cltd
shlb
paddb
xor
mov
or
adc
dec
out
imulb
sbb
jb
dec
jae
fsubrp
je
inc
into
idiv
adc
data16
imul
ret
stos
cli
mov
es
cld
inc
test
std
xchg
cmp
or
sahf
adc
push
dec
ja
mov
add
popa
in
pop
pop
jge
repnz
in
add
dec
bound
xchg
popf
fucomi
and
push
lea
fsubrs
cmpsl
int
jle
or
xchg
cmp
jne
mov
movsb
sub
js
arpl
xor
out
xchg
leave
dec
filds
ds
rorl
pop
or
hlt
mov
mov
jb
out
push
paddd
xor
cmc
out
push
dec
fcmove
sahf
mov
in
adc
mov
cmc
cmp
push
stos
movsb
dec
xlat
in
fwait
mov
push
les
mov
in
sti
adc
loopne
sub
pop
cwtl
cmp
fidivl
shlb
cmp
lret
cmc
in
imul
mov
cmp
mov
and
in
sbb
aaa
in
out
mov
mov
insl
xchg
orb
push
std
push
sbb
sub
xor
icebp
fimuls
sub
stos
repnz
cld
sahf
test
lret
jle
adc
or
adc
jle
stc
jnp
outsl
push
popf
mov
ds
cmp
inc
imul
pop
jmp
cltd
ret
dec
add
imul
pop
xor
pop
lods
pop
mov
incl
sub
icebp
xchg
or
pop
jne
mov
mull
xor
sbb
lea
push
pop
push
push
cmc
sahf
mov
mov
imul
roll
fstpt
adc
outsb
decb
sub
sub
sbb
ret
or
sub
xor
jbe
push
out
or
adc
add
push
popa
fnstcw
xchg
push
dec
adc
fidivrl
pop
mov
push
inc
call
xor
mov
sbb
or
das
mov
push
cmp
pop
cmpsb
jo
dec
fwait
cmp
add
cmpsl
stos
xchg
shl
rclb
pusha
lea
mov
push
jne
mov
dec
xor
sbb
mov
nop
push
gs
cmpsb
inc
sub
rorl
push
cmc
dec
dec
dec
test
cvtdq2ps
jb
std
data16
into
mov
pop
dec
push
mov
mov
pop
push
xchg
sub
iret
lds
cmp
cmp
or
jl
subl
sub
cmpl
out
sub
bound
cmpsb
xchg
dec
hlt
mov
add
cmp
popa
jns
sub
jg
call
jmp
fnsave
in
mov
sbb
pop
dec
add
pop
repz
add
xor
mov
xor
xchg
dec
sub
test
xor
sub
mov
lret
fmul
test
faddp
cmpsl
out
jno
dec
sahf
and
jp
lods
and
xor
mov
xchg
cmp
xor
or
leave
inc
insb
pop
pop
xor
aas
pop
aas
cmp
mov
insb
xor
cmpsl
test
std
inc
cs
fildl
ffree
fstpl
out
std
js
int3
mov
push
sahf
add
mov
or
sub
pop
das
cs
mov
popf
jno
push
nop
lcall
or
xchg
mov
out
mov
push
rep
out
loopne
sbb
jecxz
cmovbe
cmc
ja
lcall
insb
xchg
in
sub
add
daa
adc
icebp
add
test
in
out
mov
mov
push
xchg
test
pop
cmp
inc
mov
fsubs
fsubl
sbb
sub
push
adc
cwtl
or
cltd
add
in
loopne
fs
orl
mov
cmp
in
sahf
pop
cmp
popf
mov
xor
xchg
push
ret
movl
sbb
pop
lock
adc
out
mov
xchg
sub
mov
in
es
xlat
push
das
ss
cmpsb
hlt
fimuls
jmp
mov
and
fdivs
int3
call
aam
outsb
push
out
stos
push
and
sub
ss
add
jno
and
and
clc
aad
mov
icebp
jg
test
dec
sub
xchg
pop
mov
movsl
popf
dec
add
test
or
aam
mov
sbb
jle
pushf
add
mov
mov
sahf
add
dec
xor
xchg
sub
rorb
ret
push
sbbb
es
sbb
enter
push
mov
mov
arpl
mov
xchg
add
and
cs
dec
jb
mov
insl
dec
addl
mov
mov
mov
stc
ss
cmp
jmp
in
or
mov
xchg
jp
jmp
jmp
pop
in
push
xor
fisubs
push
dec
jne
and
out
fcmovb
add
cwtl
or
imul
push
xor
scas
mov
jns
xchg
jmp
jb
loope
mov
push
jmp
popa
in
push
leave
mov
int3
sbb
xor
inc
pop
outsl
iret
cld
int3
bound
xchg
fcoms
sub
mov
inc
mov
push
jg
mov
push
push
scas
fsub
js
inc
push
int3
or
sar
das
mov
mov
push
xchg
outsl
and
out
leave
cmp
add
inc
push
cmpl
and
test
popf
mov
and
mov
jl
cmpsb
rorb
cmp
outsl
xor
cld
fwait
jmp
xor
xchg
mov
sbb
pop
roll
add
inc
cmp
push
inc
fisubrl
jbe
ja
sahf
jne
jbe
mov
sbb
jne
loopne
xchg
xor
daa
das
mov
or
pop
jae
sbb
jne
sub
repnz
push
out
push
xlat
in
int3
pop
cs
add
out
push
test
and
test
ljmp
test
fucomp
mov
pop
xchg
add
add
push
into
cmp
movsl
jns
icebp
ljmp
jno
rcrl
ja
fcmovu
jg
mov
loopne
setnp
int3
or
movsb
icebp
scas
fistps
lret
cltd
movsb
shlb
rolb
adc
push
pop
shl
jbe
jl
mov
into
xchg
push
cs
or
hlt
mov
ljmp
in
dec
popf
lret
lds
test
ret
mov
adc
fdivrl
fcom
adc
and
imul
stc
adc
jbe
xchg
cld
repnz
push
into
mov
inc
or
fiaddl
adc
add
lods
lds
mov
es
int
rcll
stos
lahf
pushl
nop
test
and
int
sub
add
psraw
leave
mov
push
icebp
or
loop
xchg
pop
dec
pop
test
nop
fcompl
mov
movsl
push
rolb
pop
push
xchg
and
clc
sub
out
cmp
rol
rcr
adc
or
sub
filds
scas
lock
dec
xchg
cld
sar
sbb
fiaddl
inc
stc
jg
fwait
sub
add
xor
test
jl
xorl
pop
jl
mov
dec
jno
ret
js
pop
dec
dec
jbe
or
and
push
jo
xchg
iret
ret
cmp
fdivrs
in
cmp
testb
add
int
cmpb
mov
mov
push
xor
sbb
xchg
push
cmp
test
lds
mov
or
leave
sub
cmp
jns
popa
popf
test
mov
leave
push
ret
dec
popa
negb
mov
mov
or
push
jb
aad
lret
int
xor
xchg
xchg
lcall
out
mov
push
in
xor
add
ret
sbb
xchg
add
in
or
or
adc
lods
call
jp
dec
lcall
pop
jge
pushf
popf
jne
add
sbb
scas
or
mov
xor
imul
adc
and
jge
ret
dec
and
xchg
push
pop
cmc
adc
mov
cs
jnp
pop
mov
and
and
mov
pop
xchg
add
mov
lcall
mov
sub
daa
mov
bswap
test
push
sub
fildll
jb
jno
sbb
lret
mov
push
sub
lahf
aas
js
jo
pop
sub
xlat
and
push
sbb
inc
and
add
loope
add
lcall
adc
fimuls
sbb
cli
or
xor
out
xchg
mov
pop
inc
testl
mov
and
ja
popa
pop
daa
stc
add
popf
adc
jp,pt
cmc
mov
pop
add
jns
cmc
repnz
xor
jmp
mov
outsb
mov
fimuls
adc
das
pop
xor
jg
jp
jne
sbb
and
mov
cmpsl
adc
mov
data16
sbb
add
inc
mov
sub
sbb
decb
pop
push
out
mov
add
push
imul
jne
shrl
movsl
in
inc
xor
scas
mov
adc
push
je
mov
decl
test
in
stos
shrb
cmp
loopne
mov
adc
lea
daa
inc
mov
aad
add
mov
sub
inc
mov
popf
shlb
xor
xchg
adc
or
lds
popf
pop
out
cmpsb
sub
add
xchg
lret
test
arpl
and
jno
cmpsl
repz
pop
push
cltd
mov
nop
scas
sbb
sbb
stos
insb
es
adc
mov
push
push
das
mov
mov
lods
pop
rolb
call
dec
clc
push
in
sbb
stc
mov
mov
cmpsl
mov
cmp
xchg
jbe
js
xchg
insb
pop
imul
lret
xchg
aad
movl
ljmp
inc
push
and
push
sub
bound
not
js
faddl
pushf
push
xor
and
jge
imul
aam
cli
and
pop
out
aad
or
push
pop
adc
lahf
shl
adc
pushf
lock
mov
xor
cwtl
ds
cltd
hlt
pop
dec
out
popl
aas
adc
xor
or
and
dec
mov
push
pop
ljmp
pop
push
movl
outsb
rcrl
lcall
pop
push
pop
cmp
pop
cmp
je
mov
les
inc
push
pusha
or
push
push
dec
adc
rcrl
ss
sbb
aaa
lds
stos
lahf
notl
inc
mov
mov
jne
push
dec
dec
mov
pop
fxch
mov
fisttps
inc
mov
icebp
out
mov
dec
paddusw
push
mov
das
jp
push
inc
gs
mov
ljmp
fistpll
pop
mov
movq
mov
xchg
test
inc
pop
mov
xchg
sar
stos
adc
into
jnp
xor
bnd
out
pusha
pusha
lods
scas
sub
gs
pop
sub
dec
pop
jo
or
imul
loop
iret
inc
imul
adc
mul
mov
sbb
cli
cmp
mov
stc
stos
mov
rorl
mov
mov
sbb
pop
mov
fcom
addr16
out
cld
dec
lahf
mov
sub
push
mov
repnz
xor
mov
out
push
hlt
in
add
pusha
mov
in
add
add
in
cs
pushf
xor
push
loopne
cmp
fwait
sbb
push
pop
dec
ret
jae
js
dec
mov
addr16
adc
aad
stos
insb
dec
frstor
data16
jp
dec
push
dec
gs
push
cmpsl
mov
int
jecxz
push
aaa
pusha
xlat
in
inc
jnp
mov
lcall
out
pop
push
jns
or
fimull
or
push
rcll
pop
fsubrl
xchg
stc
xchg
fwait
outsl
mov
cmp
inc
ss
xchg
mov
orb
ret
sbb
test
adc
das
jns
pop
scas
dec
loope
sub
inc
xlat
out
xor
mov
add
mov
xor
add
scas
int3
je
or
cmpsb
aad
xor
xchg
jmp
pop
insl
pop
insb
mov
aaa
jp
lock
sub
imul
dec
aam
jmp
xchg
mov
push
adc
push
mov
sub
in
push
sti
jne
jmp
mov
and
sbb
ffree
sub
lock
lock
and
aaa
pop
dec
lret
inc
and
jbe
jmp
and
jns
sbb
in
sub
mov
jb
enter
jbe
inc
sbb
sub
or
pop
dec
jns
xlat
adc
movsb
dec
daa
mov
sub
jmp
aad
or
lods
mov
xchg
call
xchg
js
sbb
out
out
xlat
push
out
mov
inc
fwait
call
popa
pop
repnz
bound
inc
flds
inc
xchg
idiv
repnz
iret
inc
mov
mov
xor
cmp
pop
lret
insb
rorb
stos
out
call
xchg
dec
mov
push
lcall
mov
mov
sub
mov
xchg
mulb
mov
xor
ja
aam
rcl
push
lea
imul
sbb
aam
ror
pop
xor
lcall
adc
and
mov
dec
fadd
cld
aas
les
cld
mov
push
into
popa
ss
jp
out
dec
es
jo
pop
mov
outsl
xchg
sub
mov
cmpsb
in
outsb
jo
ljmp
int3
inc
xor
add
dec
lahf
iret
or
dec
push
adc
ss
daa
add
outsb
fistps
sbbl
mov
dec
lds
add
push
pop
std
sti
out
push
cmpsb
fwait
jb
subb
add
add
test
fimull
sbb
xchg
scas
adc
and
lahf
fadds
js
daa
inc
aam
ret
push
sti
jnp
mov
push
icebp
sub
lock
push
xchg
adcl
in
int3
stos
mov
icebp
inc
pop
lods
test
sbb
xchg
int3
pushf
mov
imull
aaa
ret
push
stos
push
shrl
inc
cs
in
jl
jno
rorl
mov
fadds
in
mov
and
jmp
xchg
push
xor
pusha
daa
xor
dec
sbb
addl
test
xchg
jmp
sub
divl
pop
jbe
xchg
mov
call
xchg
mov
and
stos
icebp
dec
add
fucom
push
and
lcall
and
or
fdivrl
test
addb
inc
jb
xchg
cmpsb
insl
dec
and
call
popf
enter
loopne
mov
fadds
mov
push
inc
sarl
add
jmp
dec
xor
into
xor
sub
pop
outsl
stos
sbb
add
sbbb
jbe
pop
into
dec
lahf
bound
push
gs
push
or
rclb
sbb
pop
jno
cs
push
adc
jnp
mov
pop
mov
sub
cmc
add
iret
popa
insb
mov
insb
or
mul
mov
dec
fwait
push
mov
clc
test
shrl
jae
lcall
pusha
push
mov
into
push
rorl
test
insl
out
mov
push
ljmp
xor
dec
mov
or
jo
jns
push
xor
jmp
mov
sub
xor
cmc
dec
sbb
ret
and
push
push
lea
lea
hlt
mov
dec
popf
out
push
std
inc
in
loope
pop
push
push
sbb
jb
xchg
outsb
or
inc
sbb
fs
mov
dec
mov
dec
hlt
test
add
roll
add
dec
shrl
lahf
mov
mov
mov
jle
jg
pop
mov
sub
cmpsb
fldl2t
loop
popf
mov
dec
push
fimull
std
mov
cwtl
jg
mov
stos
out
aam
ret
addl
loope
xor
sub
daa
in
imul
push
into
scas
xchg
vpcmpgtw
nop
mov
loopne
dec
add
xchg
fildll
movsl
lret
pop
inc
das
in
inc
xor
cmp
aam
sbb
es
dec
es
imul
mov
mov
call
sahf
shl
inc
cmpsb
mov
push
enter
cmp
out
popa
cmp
xor
xchg
imul
xchg
dec
pusha
sbb
loopne
outsl
xor
xchg
call
mov
push
pop
pop
jae
pop
mov
mov
ret
or
mov
insl
loopne
add
mov
xchg
es
sbb
ja
and
decb
mov
push
nop
cmp
leave
inc
sub
mov
out
out
sti
jne
cmpsb
cmpsl
negb
out
pop
dec
pop
add
push
nop
std
push
pop
mov
std
pop
sti
mov
jecxz
pusha
pop
sbb
mov
das
sub
xchg
jo
fbstp
scas
push
push
inc
data16
addr16
cmpsb
and
pop
das
outsb
ljmp
mov
xchg
mov
sub
in
dec
sub
cwtl
scas
es
sub
push
pop
mov
mov
shrl
pop
jns
mov
sarb
dec
add
cmpsb
in
das
push
xchg
stos
or
ret
xor
pop
data16
add
adc
xor
in
cmp
or
bound
pop
cmp
mov
dec
fcmovne
js
and
cmp
pop
jge
inc
jp
stos
jle
sti
xchg
add
shrb
testb
ljmp
or
rcll
adc
dec
sub
std
int3
sti
fcmovu
mov
pop
mov
jnp
cmp
adc
jo
cmp
adc
insb
jecxz,pn
lahf
fldcw
xor
loopne
and
ret
xor
movsl
and
push
pop
pop
data16
or
repz
cmp
xor
mov
dec
pop
xor
dec
out
in
loope
dec
mov
cmp
ret
jge
out
test
add
in
fsubs
and
flds
loopne
adc
pop
popa
and
jge
xchg
jnp
push
int3
jbe
add
scas
mov
popa
shlb
shrb
es
adc
fisubrs
sbb
pop
outsb
sub
xchg
mov
inc
mov
xchg
fidivrs
call
sub
adc
fstpl
add
fsubl
je
push
xchg
inc
dec
daa
lods
ffree
jb
and
mov
xor
and
dec
sbb
pop
add
mov
cmpsb
mov
jl
andb
int
lret
out
test
lret
sbb
pop
push
les
je
out
adc
inc
or
sub
add
dec
mov
mov
pop
jno
mov
sbb
add
xor
adc
pop
jmp
cmp
rorl
dec
pop
cs
and
hlt
cmp
pusha
jno
cwtl
mov
mov
lret
lret
loop
cltd
and
inc
in
and
push
jo
xchg
sub
add
pop
pop
test
fiadds
into
sbb
out
cs
mov
jp
popf
sahf
insl
repz
xor
cmp
xchg
lods
mov
jg
icebp
jl
jmp
and
xor
nop
icebp
dec
push
mov
int3
dec
xor
ret
fstpl
rorb
mov
ret
xchg
xchg
sub
sbb
jnp
add
add
lock
js
cmc
mov
dec
or
inc
mov
mov
lock
jmp
nop
scas
xchg
add
push
mov
stc
push
jg
ja
loope
xor
dec
mov
or
imulb
pop
sahf
loope
jge
pop
dec
lea
lret
pop
stos
jle
scas
and
or
push
ja
pushw
mov
out
dec
insl
sub
xchg
lcall
inc
or
out
sub
xchg
scas
sub
xor
dec
add
iret
cmpsb
xlat
and
je
sbb
and
cli
mov
pushf
dec
sbb
jno
shlb
lret
out
andl
and
jae
xchg
inc
shl
ficoml
sub
shrb
int3
fisubs
aam
pmaxub
mov
into
mov
push
scas
sbb
fadd
les
mov
f2xm1
test
push
xchg
jmp
jle
cmp
mov
xor
ret
je
mov
sub
iret
das
sub
out
ljmp
fisttps
in
pop
imul
xchg
repnz
testl
lret
insl
inc
outsb
jp
mov
lds
js
xchg
fsubs
fstpt
push
mov
jns
iret
pop
cmc
jl
push
adc
mov
shlb
aam
fdivl
test
arpl
in
cld
cmpsl
loop
dec
mov
call
idiv
and
jns
cmc
push
jne
int3
dec
mov
addl
inc
test
nop
or
test
popa
cmp
inc
mov
xchg
xchg
fcoms
icebp
xor
mov
outsb
ror
dec
xchg
mov
test
push
rcr
push
sbb
push
and
inc
and
xor
and
add
push
cld
mov
lret
mov
lods
sbb
repz
mov
daa
hlt
sbb
mov
cmp
rcrb
sub
test
mov
jb
xor
pop
int3
sbb
subb
mov
jmp
fwait
loopne
and
imul
mov
outsl
xchg
xchg
xchg
mov
ljmp
pop
rclb
jne
imul
dec
sbb
insb
adc
dec
mov
dec
xor
or
insl
or
dec
pop
cmpb
mov
sub
leave
cmp
push
out
dec
ja
push
addr16
jg
xchg
xor
outsb
arpl
mov
data16
add
adc
lods
mov
stos
inc
pushf
mov
test
outsl
lods
out
movsb
xor
jb
cmp
cmp
cli
out
cwtl
popa
fs
cltd
lea
cs
mov
test
in
shll
adc
leave
add
jbe
roll
mov
jbe
cmpsl
inc
shll
dec
sbb
pop
outsb
lea
imulb
call
dec
hlt
iret
ret
and
mov
std
sarb
pushf
js
out
adc
mov
jmp
push
adc
lods
lods
popa
shl
ss
clc
pop
bound
mov
mov
imul
es
mov
or
fnstenv
cmpsb
add
enter
xchg
js
notb
push
mov
fstpl
repz
jne
pop
mov
mov
cmpsb
jmp
adc
test
xchg
out
push
ljmp
in
dec
pop
sbb
insl
dec
xchg
ss
fdivrs
clc
pop
sbb
pop
dec
push
and
and
fadds
sub
aam
add
sbb
mov
adc
xchg
push
outsl
xor
sbb
inc
ljmp
repnz
or
in
repnz
iret
jno
mov
dec
pop
xchg
xchg
inc
filds
out
arpl
jbe
cmpb
push
cmc
loopne
jg
push
add
cli
mov
jmp
test
movsl
xor
outsb
inc
inc
ja
subl
cmp
xor
enter
outsb
mov
dec
jno
mov
sbb
mov
mov
sbb
sub
sub
mov
paddusb
or
sub
cmp
leave
fiadds
cmp
jl
leave
or
xchg
int3
jnp
add
push
push
and
push
cmpsb
scas
dec
insb
xchg
pop
push
aas
pop
test
push
add
mov
xor
inc
lds
push
addr16
out
inc
imul
mov
xor
adc
arpl
dec
jmp
inc
xor
mov
xchg
xor
and
movsb
jne
icebp
imul
sti
movsl
nop
call
fnstenv
mov
mov
mov
mov
and
lea
out
dec
into
call
aam
mov
push
lock
add
out
inc
lods
incl
test
dec
mov
cwtl
xchg
sub
pop
test
mov
ss
ds
pop
lcall
adc
fcoms
jbe
inc
push
cld
xchg
adc
mov
std
stos
mov
cld
push
loopne
das
imul
pmulhuw
cld
in
dec
sar
cmove
adc
repz
sbb
ret
int
and
mov
and
pusha
imul
enter
cmpsb
loopne
pop
xor
cmc
push
fldl
sbb
imul
xchg
into
jle
mov
xchg
dec
xlat
sub
adc
jl
mov
sbb
aad
movsb
xlat
sbb
fsubrl
loopne
mov
dec
in
ret
cwtl
mov
imul
sub
or
daa
lahf
xchg
lods
pop
mov
mov
test
mov
sbb
push
jge
nop
mov
mov
into
addl
or
pop
out
scas
sbb
pop
dec
pop
xchg
and
fcomps
dec
frstor
add
cmp
fisttpl
jb
stos
or
shl
mov
xchg
popf
xor
pop
push
and
ss
mov
xchg
jbe
lret
cmpl
push
insl
fisttps
dec
xchg
jo
sub
cmc
sub
push
push
sbb
loope
push
or
push
cmp
mov
push
movsl
enter
mov
adc
imul
jle
arpl
stos
enter
jne
outsb
out
das
pushf
jnp
daa
and
daa
sbb
pushf
or
imul
xchg
sbb
mov
cs
mov
mov
fcomi
sub
inc
jg
dec
mov
test
jns
or
push
mov
push
xchg
lods
aas
xlat
push
aam
add
or
or
cmp
sahf
popa
int
divb
sbb
mov
nop
pushl
pop
fs
fdivrs
pusha
push
mov
insl
cmpsb
mov
pop
sub
adc
icebp
mov
loop
loop
pop
inc
jbe
mov
adc
daa
test
and
stc
sar
cmp
or
loopne
cmp
ds
lcall
xchg
jne
std
loope
mov
dec
out
or
jne
inc
adcl
sbb
into
jns
jl
inc
es
lret
adc
js
in
mov
lods
adc
xor
mov
fists
jmp
mov
xlat
test
fdivl
fs
jb
popf
add
or
xor
and
fidivrl
xor
orl
jo
pop
inc
and
jp
fucomi
sub
test
add
add
pop
add
jl
xor
pop
and
insb
cmc
xor
add
cwtl
xchg
int3
xchg
mov
stos
xchg
lods
mov
jge
dec
rcll
das
fdivrs
lea
pop
xor
mov
and
sbbb
aam
mov
cs
xchg
nop
xchg
jno
out
mov
pop
insb
inc
enter
or
adc
into
and
mov
jp
leave
adc
pop
sbb
jle
mov
cmpsl
jl
es
lret
inc
push
imul
mov
and
das
adc
stc
jmp
add
mov
jl
pop
call
fs
inc
dec
sbb
mov
in
add
loope
dec
test
mov
int
jmp
iret
rorl
mov
push
sbb
or
and
nop
pop
pop
dec
mov
and
sub
stos
daa
stos
pop
fadds
jge
cmovs
pusha
adc
pop
mov
mov
pop
xchg
aad
je
xchg
and
xor
add
or
loope
push
adc
push
gs
sarb
xor
bound
xchg
mov
les
pmullw
sbb
xchg
movsb
call
mov
out
mov
sarb
pop
dec
sub
ret
sub
fsubr
push
push
push
mov
jl
popa
sti
pop
jmp
push
mov
sub
push
xchg
cwtl
out
stos
test
sub
sub
inc
lret
fistpl
sub
fisubrl
imul
sbb
gs
movsl
int
mov
cmpsb
loope
jbe
sahf
and
movsl
icebp
mulb
xchg
test
imul
std
sti
cmp
cwtl
push
out
outsb
jp
or
inc
pop
fisubrs
cwtl
ljmp
decb
cmp
outsb
push
mov
in
push
cli
pop
clc
lcall
clc
inc
call
into
shlb
xchg
xor
jo
sub
add
xlat
pop
jae
cltd
popa
loope
xchg
lret
rcrb
mov
clc
jno
lock
aam
sti
mov
repz
inc
xlat
sahf
or
enter
add
stos
cmp
lret
inc
aad
les
or
xor
out
and
mov
lea
pop
aad
or
add
lret
mov
push
adc
mov
lods
cmc
xchg
popa
test
mull
cli
rorb
push
nop
xor
pop
jle
cmc
pop
cmp
mov
cmp
lods
push
out
sbb
push
jnp
jg
adc
push
icebp
mov
push
push
insb
lcall
jmp
dec
cmp
sub
cmpsl
mov
out
mov
lea
pop
lock
xor
ss
rol
cli
push
cmp
testl
mov
loop
or
loope
popa
in
or
dec
sub
enter
jle
pop
aam
mov
cs
xchg
mov
aad
movb
push
dec
add
not
inc
int
fwait
push
dec
test
mov
out
mov
jbe
xor
test
pop
fdivrl
ret
xlat
cld
test
jae
push
xor
mov
dec
dec
gs
leave
push
inc
movsl
or
push
dec
in
or
or
add
das
fstps
flds
jl
in
and
and
sub
mov
or
pop
jle
andb
adc
pop
dec
aad
loop
gs
repnz
daa
mov
pop
loopne
iret
mov
add
int
jbe
and
push
push
mov
gs
test
xchg
inc
mov
cmp
xchg
lock
data16
mov
push
cmp
cmpl
movsl
js
sbb
addr16
test
rolb
pop
notb
cmp
xchg
mov
daa
pop
sub
xor
pop
fmul
jle
out
int3
rolb
inc
inc
mov
jae
movb
add
mov
mov
xchg
shrl
cltd
icebp
add
fnsave
scas
inc
sub
xchg
bnd
pop
loopne
shrl
int
scas
jmp
inc
lahf
push
xchg
in
or
icebp
mov
jle
subb
push
or
cmp
sub
adc
mov
or
je
dec
cmc
in
xchg
rcr
fbstp
pop
jb
mov
dec
and
mov
xor
mov
in
push
leave
jg
aam
push
push
mov
lcall
cmp
lock
dec
mov
jne
xor
adc
not
pop
sti
mov
pop
add
cmp
dec
xchg
push
test
sub
pop
cs
cmp
popf
and
mov
clc
mov
sbb
aaa
xchg
jmp
aad
shr
jmp
dec
pop
out
dec
or
sbbl
add
lods
xchg
idivl
ja
and
pop
sbb
scas
dec
xor
movsb
aam
lea
jb
repz
sti
loop
cltd
outsb
sub
iret
xor
lret
add
and
lahf
repz
and
adc
in
shlb
sub
shll
out
jo
sub
in
enter
xchg
cmpsb
fnstenv
dec
mov
xchg
or
addr16
and
sti
lahf
outsl
cmpsb
push
jae
enter
mov
mov
cmp
and
adc
pop
or
pusha
movb
rol
pop
pop
inc
xchg
les
js
icebp
sub
xor
out
sbb
jno
sbb
xlat
frstor
test
xor
jae
push
imul
xlat
addl
pop
xchg
shl
rorl
aad
orb
ja
shrl
mov
dec
loopne
and
sub
ljmp
push
push
enter
popl
mov
scas
or
rorb
mov
cmp
jge
stos
scas
push
cld
inc
xor
leave
andl
xchg
lea
push
loop
insb
bound
arpl
or
int3
insl
pop
ljmp
xor
pop
sbb
sar
cmp
jo
lock
mov
mov
pusha
jns
xchg
mov
inc
push
dec
icebp
lods
adc
aas
insb
pop
sub
mov
jle
rcl
fildl
mov
mov
dec
idivb
jmp
push
int3
xchg
aad
sub
adc
fisubrl
test
xchg
das
jmp
pushf
add
ror
arpl
daa
rcll
or
pop
je
or
jns
loope
pop
loope
test
jno
sub
into
add
inc
int
cmp
ss
lret
hlt
mov
or
lock
or
stc
shl
std
push
data16
inc
mov
or
jae
dec
inc
inc
inc
enter
dec
subb
jecxz
push
and
arpl
jbe
pop
aas
incl
xlat
clc
adc
xchg
out
scas
inc
lahf
jnp
mov
jae
imul
rorb
pop
imul
cmp
xchg
lahf
mov
call
cwtl
fldl
loop
lock
cli
pusha
test
push
imul
fidivrs
jp
and
adc
or
pop
sub
stc
adc
mov
or
and
cltd
insb
inc
jb
icebp
aad
out
jg
xchg
or
cmpsb
add
aad
fs
std
into
cs
sbb
jmp
int3
insb
fadds
cmpsl
pop
xor
mov
in
jno
pop
punpcklwd
cwtl
addr16
mull
adc
cmp
shrb
add
inc
adc
mov
mov
adcb
mov
pop
testb
out
fistl
lahf
daa
adc
cld
ds
mov
pushf
mov
push
mov
mov
insl
sub
adc
test
mov
and
flds
pop
fnstsw
mov
cld
add
int
fwait
xchg
roll
outsl
hlt
mov
stc
fdiv
mov
lea
hlt
and
jg
jmp
aas
xchg
inc
movsb
pop
mov
mov
insl
xor
je
imulb
xchg
fcmovbe
push
dec
int3
mov
into
lods
or
mov
daa
rcrl
xor
sbb
mov
hlt
cmpsl
sbb
push
fiaddl
xor
dec
test
dec
fucomp
rorl
xchg
add
arpl
push
adcb
cwtl
xchg
pop
sub
or
ffree
jge
pop
xchg
data16
outsl
in
sbb
sbb
dec
int3
in
add
inc
rcrb
xor
add
adc
dec
inc
sbb
aaa
jmp
or
gs
fiadds
scas
enter
push
and
movsb
cli
xchg
jecxz
data16
inc
push
movsl
or
fs
outsl
addr16
int
jl
xor
and
sarb
lcall
xor
or
jns
sbb
push
clc
pop
jg
pop
sub
shlb
ds
mov
jge
xor
loope
lret
test
pusha
insb
fdivrp
aaa
dec
outsb
pop
xor
outsl
aam
add
clc
out
xor
xchg
xchg
jl
pop
lcall
sahf
cmpsl
call
add
dec
or
sub
ror
scas
clc
shlb
ja
mov
cmp
sbb
aam
ficompl
in
adc
push
xchg
adc
lret
jnp
sub
pop
aad
lret
mov
test
jg
mov
leave
pop
fstpt
hlt
pop
cmp
lcall
pop
out
push
popf
pop
enter
jne
add
call
js
sub
pop
adc
xor
xchg
lret
mov
mov
mov
dec
pop
mov
or
mov
pushf
in
add
and
dec
push
jns
sbb
jne
inc
mov
xchg
test
inc
jecxz
in
jb
stc
fdivs
aaa
les
das
call
sbb
add
xor
hlt
loop
icebp
aaa
movsb
test
bnd
mov
mov
or
std
cltd
roll
mov
cmp
sbb
pop
sub
scas
mov
out
inc
jb
int
xchg
jmp
fcompl
xor
repnz
xchg
adc
mov
loope
andb
lcall
ret
inc
popa
repnz
nop
insb
dec
cmp
or
lock
or
ljmp
cmp
and
insb
pop
push
leave
test
xchg
daa
lahf
fistpl
lcall
cmp
adc
int3
jmp
jle
shl
sub
sbb
lods
inc
repz
mov
jnp
cs
mov
or
into
dec
push
or
dec
lods
aam
mov
les
sar
sbb
loop
pop
xchg
out
je
outsb
sub
pop
stos
pop
js
pop
mov
and
adc
es
xchg
sub
popa
sub
jb
stos
frstor
and
mov
mov
mov
sbb
scas
sbbl
dec
es
inc
adc
sbb
ja
xor
inc
in
mov
mov
mov
insl
outsb
les
dec
imull
inc
dec
push
mov
pop
pushf
sub
aam
adc
out
rcrl
mov
sti
out
lcall
repz
stos
inc
aas
in
sbb
push
movsb
imul
or
aas
call
push
push
mov
add
inc
xchg
loope
fnstsw
mov
mov
pop
ljmp
sbb
mov
jae
add
pop
iret
and
cmpsl
sbb
rol
cli
lret
inc
mov
xchg
lea
aas
data16
adc
es
pop
pop
div
outsb
mov
mov
imulb
cmp
and
push
leave
push
and
icebp
and
in
lods
dec
mov
dec
xlat
mov
insl
in
in
sbb
push
mov
mov
cmp
andb
test
stos
mov
add
jae
insb
movsl
or
sar
adc
in
ds
dec
scas
movsb
xor
dec
out
xchg
gs
add
xchg
rclb
popf
mov
dec
pop
nop
lahf
bound
xchg
iret
cmpsl
and
cwtl
xor
pop
cmp
pop
cmc
daa
test
sbb
repz
cwtl
cmpsb
add
and
dec
push
pop
xchg
addr16
pop
adcl
scas
fbstp
ja
dec
popf
pop
popf
xchg
cmpl
stc
jl
stc
fadds
popl
xchg
les
inc
aad
sbb
rcr
push
pusha
cmp
subl
enter
aaa
cld
mov
jg
arpl
mov
inc
pushf
cmpsb
test
lock
inc
test
adc
movsl
fdivrs
lcall
push
mov
pop
int
movsb
es
dec
add
mov
out
pop
sub
dec
mov
push
call
test
outsl
or
daa
fmul
pop
push
iret
push
sbb
dec
rol
cs
arpl
xor
pop
movsb
dec
inc
jb
cld
shrl
pop
rclb
divl
sub
push
rclb
xor
std
mov
pop
call
or
movsb
mov
xor
inc
jo
sbb
jbe
in
push
in
rolb
and
jno
mov
push
jl
divb
cmp
addr16
mov
scas
cmp
push
scas
mov
pop
outsb
repz
fucomip
and
xchg
adc
xchg
pop
cmpsb
inc
dec
mov
dec
pop
mov
cmpsl
add
push
add
sarb
push
movsb
push
cmp
inc
je
dec
sbbb
test
pusha
cld
inc
sub
shrl
mov
adc
je
adc
inc
aas
repnz
inc
dec
insl
xor
mov
popa
aas
sbbb
pop
mov
addl
push
mov
pop
mov
mov
jge
loopne
int
test
jno
sub
leave
mov
pop
jbe
sbb
adc
or
xchg
push
jmp
or
incb
add
and
adcl
dec
adc
pop
push
test
inc
mov
jo
xchg
pop
roll
repz
mov
cld
lods
ss
cmpsb
xor
or
jg
dec
cmp
mov
shl
je
xchg
cld
les
inc
lods
cmp
rcll
daa
inc
adc
mov
lods
in
imul
cmp
mov
loope
repnz
movsb
pop
repz
inc
imul
inc
lea
or
ja
out
xchg
fmull
jp
sbb
inc
mov
xchg
jecxz
or
test
mov
cmp
push
and
push
into
inc
mov
movsl
in
xchg
xlat
lahf
dec
andl
call
mov
xor
popf
pop
add
jg
mov
aad
shll
dec
pushf
cmp
mov
push
lods
push
bound
icebp
add
pop
jg
aam
into
xor
sub
and
fadd
inc
lods
fimuls
rolb
jne
push
gs
mov
mov
jmp
mov
cmp
xor
call
sub
dec
push
push
loope
lods
lahf
and
dec
lods
inc
push
daa
xchg
cmpsb
pop
adc
mov
or
shl
push
and
mov
cli
das
xlat
or
jmp
das
mov
jp
push
pushf
sub
jl
push
adc
in
adc
add
adc
orl
push
fdivrl
fidivrl
fwait
in
jbe
call
mov
dec
cmp
jns
in
lea
cmp
xor
out
test
fbld
inc
and
lret
and
sti
stos
dec
dec
or
test
adc
es
add
mov
lret
ds
pop
lea
jl
push
clc
mov
and
jo
ret
int
fisubrs
je
pusha
in
xchg
xchg
add
stos
sbb
sbb
pop
into
fcomps
mov
stos
adc
imul
sub
stc
adc
loope
ljmp
int
movsl
ss
jo
push
notl
fsubs
inc
push
pop
xchg
insl
cli
cmp
push
fs
test
push
jle
jp
popa
mov
sub
or
add
xchg
out
or
xchg
dec
push
aaa
das
pushf
rorl
sub
aas
test
test
nop
lahf
es
cmp
ficoml
cmp
mov
fcomps
fcmovnb
cmp
dec
sub
aas
cs
xor
test
jb
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
mov
fld1
punpcklbw
xchg
cmp
outsb
push
or
xchg
fbld
cmp
into
lea
in
sub
icebp
jo
jb
push
ljmp
mov
sub
sub
scas
imull
fldenv
ds
stos
mov
pop
push
xlat
xlat
inc
or
jmp
outsl
pop
les
test
xlat
xor
lahf
xor
push
pop
inc
pop
pushl
push
xchg
repz
sahf
cmp
cmp
negb
rorl
lods
test
add
into
lea
push
pop
fdiv
leave
mov
cmp
jns
xchg
aad
adcl
adc
jecxz,pn
mov
sbb
imul
dec
dec
lret
push
aaa
push
aad
fnclex
sbb
cld
mov
les
add
imul
ret
mov
jne
mov
mov
sbb
pop
sbbb
popa
fistpll
or
dec
gs
mov
divl
adc
stos
lods
lods
test
inc
inc
push
dec
adc
xchg
loopne
xchg
sub
cmp
add
or
jl
flds
ljmp
cmp
out
aam
adcb
mov
xchg
xchg
or
mov
xchg
ss
cmp
add
mov
push
dec
mov
mov
push
stc
bound
adc
cmc
pop
ficoml
sub
xchg
xor
scas
jae
out
movl
adc
jno
sub
xchg
ss
aam
push
lea
int
pop
imul
jecxz
xor
xor
data16
or
ficompl
and
or
test
xchg
insb
mov
imul
xchg
fdivrs
das
outsb
push
xor
mov
dec
xchg
jne
sbb
and
jecxz
shll
orl
dec
dec
pusha
jg
mov
leave
pop
pop
push
fsubrs
sub
call
dec
push
jg
push
dec
aad
cmc
dec
xchg
orb
lods
lret
lret
or
inc
push
cmp
sbb
xor
addl
add
lock
xor
or
loope
fwait
jecxz
dec
lcall
cmp
jbe
and
jmp
xchg
out
dec
or
sub
jle
popf
jl
imul
sti
mov
xor
test
and
mov
and
xor
nop
sahf
inc
movsb
dec
jle
sbb
push
fildll
dec
subb
test
movl
add
lret
pop
sbb
and
in
sbb
pop
shrl
mov
cltd
mov
mov
insb
das
jb
jge
movsb
xor
mov
push
aaa
flds
sbb
adc
scas
xchg
cltd
arpl
xlat
mov
out
push
cmpsb
xchg
fldt
mov
aad
or
push
notb
dec
cli
add
movsl
mov
inc
sub
out
add
adc
mov
loopne
pop
imul
jns
scas
aas
mov
sbb
xchg
cmc
add
adc
mov
aad
jle
cmpsl
cwtl
or
nop
inc
jg
mov
sub
or
out
hlt
push
pop
or
xchg
jp
and
dec
inc
cs
ret
jl
adc
or
fstps
xchg
call
mov
subb
rol
negl
fnstcw
outsb
cltd
pop
adcl
in
pop
xor
ja
imul
jne
mov
sub
inc
cmc
push
sub
cli
loopne
sub
pop
add
arpl
push
int
inc
insb
out
sbb
bound
pop
mov
decb
or
sub
xchg
icebp
shll
sub
rcr
aad
jecxz
inc
or
push
fists
aaa
shr
movsb
jg
call
lahf
stc
mov
shl
mov
inc
mov
ja
mov
stos
and
popl
push
test
mov
xchg
xlat
push
push
ucomiss
es
mov
fbld
or
addr16
std
add
mov
pusha
cwtl
mov
std
cmc
popf
in
push
and
es
test
mov
fisttpl
jl
gs
fstps
inc
fwait
pop
sbb
cs
mov
sti
rol
fisttpl
clc
dec
hlt
push
lea
outsl
jnp
adc
sbb
and
mov
into
mov
daa
sbb
pop
add
or
mov
rclb
or
scas
mov
xchg
cmp
mov
movsl
mov
cwtl
sbb
int
mov
stc
lcall
pusha
hlt
outsl
loop
add
add
adc
pop
push
push
sti
in
cmpsb
jl
in
or
mov
xchg
pop
rolb
push
sbb
addr16
fldl
xchg
aas
and
adc
into
pushf
mov
mov
lahf
lret
hlt
insb
adcb
mov
scas
es
and
push
in
or
test
jp
arpl
scas
shll
sbb
stos
cmp
add
and
mov
test
xchg
cmc
fsubrs
jae
cmpsb
mov
dec
or
fwait
xlat
cmpsb
adc
mov
ss
ljmp
cmpsb
and
fwait
jbe
insb
fwait
clc
pushf
xor
test
cmp
test
mov
xchg
jmp
in
and
push
outsb
cmpsb
cmp
mov
sarl
pop
cs
leave
inc
fwait
and
cmpsb
jae
cli
jl
push
lods
push
or
xchg
jmp
cmp
sbb
xlat
xchg
cmp
aaa
sub
xor
arpl
mov
push
or
xor
fwait
data16
dec
or
subl
int
cmp
jae
mov
mov
inc
push
mov
push
xchg
push
ja
jp
imul
mov
dec
dec
into
adc
cmp
xor
xor
sbb
add
loopne
pop
mov
cmp
xor
push
loopne
ret
mov
or
sub
inc
arpl
neg
gs
cmc
pop
fcmovu
pop
outsl
imul
js
sub
dec
fcomp
xchg
sbb
je
xchg
dec
rolb
daa
aam
stos
pop
add
sbb
inc
or
stos
xchg
repnz
pop
aaa
pmaddwd
lods
imul
aad
int3
mov
andl
adc
mov
add
repz
mov
out
xchg
scas
ljmp
into
in
sti
imul
icebp
adc
mov
cwtl
cmp
xor
pop
jo
outsl
mov
sbb
inc
add
xor
cmp
jg
sub
xchg
adc
enter
push
mov
cwtl
int
push
sti
cmp
mov
pop
xchg
dec
stos
mov
test
rorl
outsb
sbb
addr16
pushf
dec
ret
js
or
fucom
in
cmp
mov
cmpsl
nop
addr16
jnp
loopne
fistl
dec
mov
push
daa
out
and
push
and
mov
aad
test
push
jno
cs
cmp
push
mov
mov
xor
insb
pop
sub
andl
mov
and
push
push
lds
adc
jb
shrl
xchg
and
lret
lods
push
inc
adc
inc
cmp
mov
xchg
and
aaa
pop
out
pop
outsl
fiaddl
jne
pushf
xor
cwtl
inc
out
xchg
sbb
xchg
pop
cmp
imul
lret
cmpsl
movsl
push
hlt
pop
aaa
ljmp
mov
sub
test
sbb
jl
stos
adc
jge
jb
mov
inc
rorl
mov
ror
jns
mov
push
pop
xor
std
popf
arpl
lahf
out
xor
mov
fldt
push
aas
lcall
dec
mov
shll
rcll
inc
movsl
sub
mov
rcr
inc
or
cmc
ret
dec
xchg
sbbl
loop
dec
fiaddl
iret
jl
incl
es
ret
cmp
repnz
pop
pop
ds
mov
or
popa
inc
pop
mov
ja
cmp
mov
fldl
mov
repz
jmp
mov
xchg
xchg
adc
cltd
insb
cmp
sub
les
test
mov
outsb
rolb
scas
or
lret
xchg
fcom
mov
sbb
out
mov
add
adc
pop
js
sub
sub
xor
mov
adc
mov
imul
sbbb
bound
cmpsl
cltd
mov
fstps
loope
js
leave
shl
testl
gs
dec
mov
pop
popf
mov
cs
xchg
push
cmpsl
pop
lea
dec
stos
mov
pop
mov
loop
lret
and
xchg
cmp
dec
xor
mov
xor
mov
jmp
adc
sar
add
add
or
out
test
stos
test
ret
arpl
std
cs
std
cs
orl
imul
pop
in
push
mov
push
je
and
fs
push
out
sub
cmpsb
adc
stos
add
cs
mov
scas
enter
les
mov
sbb
sti
fs
jmp
mov
popf
dec
fdivs
xor
lcall
sbb
sti
and
adc
es
roll
cwtl
aam
imul
adc
sbb
cmp
xchg
out
sti
adc
dec
mov
cmpsl
cld
mov
xor
add
dec
sbb
div
icebp
inc
outsl
lahf
sbbl
sub
push
daa
out
pushf
push
and
loope
mov
cld
fwait
mov
out
arpl
lock
in
push
clc
inc
jg
inc
daa
out
jb
call
xchg
push
adc
cmp
sub
lahf
unpcklps
jmp
fisttpll
or
cld
mov
fldt
sahf
iret
ljmp
out
test
push
sub
test
or
hlt
xchg
mov
insl
push
shrb
fs
xor
rorl
in
divl
mov
fldl
xor
test
test
sbbb
xchg
jno
mov
lcall
or
mov
xchg
mov
mov
mov
stos
xchg
inc
stos
jnp
dec
xor
or
ret
push
int3
notb
mov
dec
pop
leave
faddl
imul
jo
div
fmuls
jl
xchg
fidivrl
nop
mov
sbb
or
sahf
nop
dec
das
in
and
mov
inc
dec
int
loope
add
push
sub
mov
nop
jo
xorl
fs
or
or
sbb
std
xchg
mov
outsl
je
pop
sbb
xchg
leave
and
xchg
and
insb
xchg
adc
sbb
stc
dec
pushf
mov
dec
jne
sbb
fbld
xor
stos
mov
sub
daa
cmpsb
sbb
xor
sub
test
mov
addb
inc
xchg
inc
or
xor
mov
out
xchg
cld
push
push
jge
jbe
lcall
aam
inc
dec
pushf
test
and
popa
xchg
adc
pop
movsb
andl
aas
mov
xchg
leave
add
cmp
cmpsb
out
adc
push
int3
mov
push
cli
not
sbb
pop
add
add
leave
ja
mov
add
pop
in
sarl
cmp
xchg
mov
xor
fs
jbe
outsb
mov
lods
in
mov
dec
mov
imul
xor
fucomp
test
xor
pop
clc
inc
jno
shlb
ja
stos
mov
and
inc
stos
fldenv
and
add
xchg
or
dec
pusha
cltd
cmpsl
or
sbb
icebp
call
xor
mov
ret
scas
inc
mov
outsb
test
loope
shl
dec
push
dec
or
jb
push
das
movsb
push
pop
xor
mov
pushf
jg
mov
add
in
testl
repnz
movsl
rorl
aas
cmpsl
dec
dec
pop
lods
jne,pt
xchg
push
push
rorb
push
iret
scas
mov
cmpsb
inc
test
pop
push
loope
or
sub
aad
cltd
lret
sbbl
push
ds
adc
enter
mov
rcl
inc
pop
cmpsb
dec
in
mov
push
addr16
scas
aaa
movsl
adc
loop
pop
mov
xor
loope
mov
push
outsl
lret
cs
sub
xor
pop
outsb
adc
int
repz
push
outsb
insb
pop
dec
mov
jno
cltd
notb
sbb
addb
das
pop
movsl
or
and
fnsave
inc
js
sahf
inc
xchg
jbe
or
xchg
sub
pushf
add
out
lods
sub
ficomps
sbb
imul
out
enter
dec
mov
adc
pop
movsl
stos
cmp
xor
jl
cltd
jnp
xor
call
jmp
jne
pop
cld
mov
jno
pop
lds
and
cmpsl
sub
jmp
subb
mov
push
and
cmpb
cmp
aaa
inc
pushf
lret
pop
nop
pusha
or
add
lret
xchg
push
mov
imul
lods
mov
pop
iret
xchg
add
jno
loope
mov
jge
pop
pop
mov
orb
jnp
pop
jle
xor
mov
stc
and
or
xchg
mov
adc
xchg
cmp
inc
mov
pop
imul
mov
scas
je
rcr
jmp
mov
cli
ja
or
xor
sbb
cli
mov
push
out
sub
lock
push
aaa
mov
jbe
mov
aaa
scas
fnsave
repz
xchg
inc
xor
dec
adc
xor
jecxz
jmp
xor
mov
pop
aam
daa
mov
and
mov
jp
push
loop
push
movsl
lods
cmp
sar
add
mov
fadds
push
in
mov
jmp
push
insb
mov
dec
jmp
imul
adc
stc
data16
push
cs
bnd
push
mov
das
pop
lahf
iret
jo
cmp
push
and
lret
jmp
incl
sbb
xor
pop
xor
ja
subl
out
daa
add
std
rolb
mov
jle
out
and
xor
jp
arpl
add
fldenv
mov
in
daa
sbb
jnp
ret
push
inc
or
addl
or
insb
out
cwtl
daa
adc
jecxz
out
enter
and
insb
cltd
sub
mov
push
enter
in
outsl
outsb
mov
aad
jmp
or
arpl
xor
call
cmc
sbb
mov
insb
jne
cltd
ficoml
push
test
iret
xorb
repz
cmp
jno
mov
stc
mov
mov
and
pusha
mov
dec
push
loopne
test
add
add
mov
push
rorb
ds
js
iret
scas
negl
or
pop
pop
sub
inc
mov
mov
fmul
sbb
jo
xchg
mov
stos
cmc
sarb
adc
loope
and
lods
es
testb
pop
dec
mov
loope
jb
jns
mov
lds
int3
aam
ds
push
outsb
mov
leave
aaa
jb
adcb
shlb
aad
sub
jmp
pop
stos
fs
sub
mov
xchg
mov
push
es
sbb
lods
xchg
adc
testb
add
jecxz
fidivl
and
jmp
cmp
xchg
pusha
shll
aas
mov
popa
lods
fldl
xchg
mull
sub
sbb
jle
imul
push
add
sbb
sti
daa
icebp
adc
outsb
popa
xchg
mov
mov
push
outsb
sahf
cmpsb
lods
jmp
mov
sti
pop
lret
push
pop
xor
pushf
jb
dec
pop
inc
stc
xchg
arpl
insl
into
lahf
daa
add
dec
mov
jp
xor
and
loope
rcrl
xchg
ret
sub
dec
push
sahf
xchg
xchg
imul
lock
es
into
cmp
push
jbe
rcrl
dec
push
add
mov
js
cltd
pop
inc
push
add
rcrw
repnz
xchg
rcll
pop
inc
cmp
dec
cmc
push
aaa
clc
push
insl
and
xchg
add
dec
add
xchg
pop
pop
imul
dec
cs
sahf
mov
mov
xchg
jmp
inc
mov
jmp
add
jnp
mov
ja
repz
mov
mov
jle
add
sub
sub
cmpl
adc
std
test
jp
loopne
mov
in
xor
rorb
shll
mov
push
xor
inc
loopne
shll
inc
ljmp
mov
cltd
cmp
hlt
mov
inc
sub
jo
jp
neg
movsl
jb
je
fwait
stos
aas
outsl
xchg
push
test
lcall
xchg
add
sti
out
fildll
xor
fmuls
pop
testb
add
mov
jmp
insb
cs
ss
xor
sbb
dec
dec
jno
add
inc
xchg
fists
addl
jbe
mov
cmpsb
loope
rcll
mov
sar
or
rorb
ss
mov
shll
push
mov
or
pop
xor
dec
lock
add
test
cmp
cmp
sbb
mov
lcall
sbb
js
mov
rorl
and
pop
cld
pop
adc
fwait
cli
outsb
pop
pop
push
mov
adc
subb
xchg
gs
push
lcall
xchg
jno
push
xlat
dec
arpl
mov
jmp
xor
aas
fadd
ret
xchg
inc
iret
inc
cmp
or
mov
clc
pop
das
jmp
pop
leave
mov
lret
dec
aam
outsl
fmuls
rcrl
xlat
clc
xchg
inc
gs
inc
pushf
in
leave
in
pop
pop
jo
pop
mov
sbb
jle
cmp
mov
pop
and
rclb
lods
or
ds
pop
inc
test
je
pusha
adc
ret
stos
lcall
pop
lret
add
out
ljmp
loop
mov
lahf
inc
or
mov
mov
out
jmp
mov
xlat
lcall
lods
sub
xor
lock
in
adc
lret
mov
mov
push
mov
call
jl
pop
xor
dec
cmp
mov
scas
ret
cmpsb
sub
ss
leave
mov
or
icebp
icebp
sbb
inc
cmp
lock
into
or
dec
stc
add
mov
mov
pop
subb
mov
lock
cld
pop
xchg
repnz
and
mov
lahf
ljmp
test
orb
mov
das
gs
xchg
sub
in
xor
jns
xlat
mov
clc
jnp
add
and
cwtl
int3
shll
outsb
insl
mov
arpl
pop
inc
les
int3
fsubp
inc
dec
jmp
jmp
mov
aad
pushf
push
add
clc
mov
mov
push
adc
sti
clc
out
outsb
ret
inc
lods
aam
inc
pop
jne
xor
loopne
mov
cmp
jbe
gs
dec
mov
lods
jno
into
call
mov
cmp
xchg
movsb
push
push
iret
lret
dec
ffree
fimull
jge
and
iret
pop
mov
mov
adc
mov
jns
sub
fisubl
jg
lcall
insl
or
in
shll
shl
into
addb
add
mov
cmpsb
mov
repz
pushf
and
cmp
std
fnstsw
adc
jbe
pop
les
nop
sarl
inc
inc
in
gs
cmp
mov
jle
lods
jmp
sbb
icebp
fistps
xchg
adc
jb
cmp
adc
mov
leave
mov
cmp
hlt
ss
rorl
cmp
push
pop
cltd
lds
xor
jmp
ss
dec
fidivl
test
xchg
out
jl
pop
xor
xchg
test
lods
xor
pop
xor
push
push
loopne
add
insb
push
mov
dec
outsl
xor
mov
cmp
movsl
xorps
loop
js
xchg
popa
cmp
inc
cmp
aam
leave
popa
lret
mov
xor
ret
int
fstpt
aas
push
jmp
shlb
mov
outsb
xor
pop
aaa
gs
shrb
pushf
push
jno
push
sbb
mov
dec
orw
call
adc
loop
lods
jle
xorl
test
add
cmp
pop
xchg
in
jb
pop
xor
ljmp
in
xchg
sub
loope
mov
pop
movsb
filds
adcl
mov
lock
movsb
xor
push
or
mov
jecxz
sbb
sbb
mov
inc
jl
pop
mov
js
lods
pop
sbb
out
mov
aam
outsl
mov
sbb
scas
dec
xor
fs
inc
inc
fcomp
jg
shrb
inc
or
sub
inc
or
add
dec
add
into
adc
ds
outsl
jo
cmp
lock
mov
shll
jae
mov
sub
or
xor
cmp
leave
push
pushf
leave
xor
fdivrs
sbb
add
test
in
icebp
fcmovnb
adc
into
xor
dec
roll
in
ret
or
stos
aam
filds
jl
pop
and
daa
aad
imul
cld
pop
pop
sti
aam
into
icebp
adc
into
pop
xor
add
sub
or
push
loop
mov
std
lock
sar
outsl
sub
adc
imul
cmpsl
mov
mov
adcb
enter
xor
std
loopne
popa
test
mov
scas
lock
mov
insb
std
sbb
pop
jno
mov
into
sub
std
in
sti
inc
lret
sub
and
cld
push
subb
inc
cli
popf
and
cmpsl
adc
jbe
ss
push
push
mov
or
fildl
jo
mov
jge
test
jns
dec
shrb
in
inc
lods
lds
adc
dec
pop
cwtl
cmp
hlt
adc
aam
mov
adc
xor
pushf
pop
loop
mov
clc
std
out
inc
xchg
stos
int3
add
push
stc
adc
rorb
divl
mov
and
int3
sbb
jae
in
daa
push
cmpb
das
and
adc
pop
insb
or
adc
je
std
mov
push
ficoml
jb
inc
cld
xchg
subl
jg
mov
jp
mov
push
test
mov
jno
aas
jl
mov
mov
inc
fists
push
dec
or
ret
push
cmp
jmp
lcall
jns
and
jge,pn
lea
sti
incb
movsl
mov
sbb
sbb
cltd
sahf
jnp
movb
xchg
insl
mov
insb
mov
add
ljmp
cld
pop
or
jg
cltd
shlb
or
fiaddl
clc
popa
mov
inc
rorb
pop
je
dec
push
sbb
or
push
jp
popf
inc
test
push
xchg
cs
pushf
or
sbb
cmp
fcmovnb
xchg
sbb
outsb
call
movsl
imul
daa
stos
or
out
fnstcw
push
stos
dec
insb
or
dec
push
in
adc
xchg
outsb
jl
jno
push
add
clc
scas
stos
xchg
jg
dec
fistps
pusha
scas
push
into
and
lcall
mov
imul
fildll
mov
bound
pop
lret
inc
xchg
sahf
sbb
in
mov
cli
adc
cmp
out
leave
xor
mov
and
jg
std
mov
mov
and
and
mov
sbb
mov
movsl
cmp
mov
insl
dec
pushf
push
dec
pop
jb
scas
es
dec
fidivl
or
scas
stos
icebp
push
aad
push
clc
pop
xchg
sub
xlat
or
mov
pop
test
and
stos
jge
std
add
cld
push
pop
or
add
push
mov
gs
outsb
xlat
xor
or
jp
ret
cmc
and
pop
in
mov
and
loopne
cmp
cwtl
adc
mov
sbb
fst
pop
mov
cmp
xchg
scas
loop
dec
mov
or
loopne
add
sub
mov
fcmovb
out
popf
in
inc
loope
or
sub
cs
mov
ret
xor
pop
sub
push
jnp
dec
fcoml
aaa
std
pop
outsb
dec
push
pop
mov
pop
cmp
adc
ret
pop
mov
jne
push
int
xor
cmpsb
mov
in
sti
adcl
mov
mov
and
into
movsl
stos
or
in
mov
rcrl
mov
push
xchg
fcomip
cli
addr16
jne
sahf
cltd
xchg
sbb
or
lods
lahf
pusha
ret
sti
nop
mov
dec
push
mov
aad
aad
push
fadds
sub
rcrb
dec
jg
test
sbb
xchg
mov
ss
add
jns
xlat
cmpsl
mov
cs
outsb
addr16
pop
adc
adc
sahf
jne
inc
push
adc
xchg
popl
insb
xchg
leave
bound
divb
lea
jnp
mov
adc
xchg
fadds
adc
fs
xchg
fsubrs
incb
and
test
pop
test
adc
or
sub
mov
mov
mov
pop
pop
sub
ret
inc
cmp
xchg
fnstenv
test
adcb
out
pop
mov
stc
jp
pop
fldt
and
adcl
popa
xchg
call
mov
mov
mov
sbb
pop
or
fmuls
js
movsl
mov
incb
int
push
inc
shlb
fldcw
ret
enter
movsl
or
sbb
fnstenv
pop
ret
jbe
mov
push
enter
mov
dec
push
adcl
lahf
push
mov
loop
test
cmp
ret
or
fdiv
cmpsb
cmp
add
sar
xlat
add
gs
daa
fmull
aam
adc
pop
inc
xor
cs
decb
sbb
ret
adc
and
push
cwtl
xchg
ja
pop
sbb
andl
outsb
xor
ret
ret
pop
rcrb
jp
pushf
push
int3
lock
scas
lea
sub
repz
sub
inc
int3
adc
rorl
je
scas
jp
scas
int
push
xchg
mov
mov
xor
arpl
jecxz
pop
cmp
xchg
cltd
xchg
js
sbb
mov
ljmp
push
jne
sub
push
or
flds
push
jae
xchg
mov
xor
add
fs
ds
pop
pop
popf
sub
and
inc
mov
adc
in
fstpt
jne
xor
lcall
push
fisttps
into
adc
pop
shl
mov
jecxz
jo
jp
adcl
mov
ds
leave
sbb
fnstenv
mulb
push
push
lcall
inc
or
ret
jp
push
loopne
mov
or
sti
out
cmp
or
inc
push
adc
pop
aad
adc
js
test
in
fmuls
stc
stc
sub
add
int
mov
adc
jmp
pop
xor
mov
fidivs
sbb
imul
das
jp
sub
lret
xchg
xor
cmp
lods
in
fwait
and
pop
mov
pop
lret
mov
insl
mov
pop
sbbb
mov
inc
scas
and
push
pop
sti
imul
mov
dec
js
jge
xor
sbb
lock
mov
aaa
mov
aam
inc
insl
sbbb
push
cmpsl
push
jne
imul
mov
arpl
add
shll
jne
popa
dec
jl
ret
imul
fnstcw
adc
adc
push
mov
daa
loopne
inc
sub
rcrb
mov
pop
xchg
sarb
mov
push
sbb
sti
sub
xor
xchg
stc
inc
repnz
xchg
ja
lcall
dec
sbb
adc
ficoml
add
lcall
pop
fidivs
cmovb
lss
xchg
scas
xchg
xor
adc
stc
mov
inc
xchg
cs
frstor
outsb
pushf
insl
shrb
inc
sbb
lock
xor
scas
fmulp
jmp
int
notb
push
cmpsl
lds
testb
cmp
cmp
cwtl
loope
movsb
call
mov
aam
or
mov
lcall
mov
fistps
clc
scas
xor
push
or
push
shlb
cmp
dec
inc
je
and
scas
cmc
lcall
xor
mov
or
push
and
mov
dec
aad
outsb
jnp
or
cmp
inc
pop
or
or
lcall
mov
jne
les
stos
push
or
inc
or
pop
hlt
aas
repnz
dec
into
push
addr16
test
pop
push
jle
or
mov
ds
fisttps
and
aas
push
or
fidivrl
mov
jecxz
pushf
fidivs
popl
pop
xchg
cmc
lea
arpl
jl
jmp
stos
lea
xchg
xlat
xor
cmp
sbb
dec
std
mov
xor
adc
out
inc
cwtl
mov
lret
xor
adc
movsl
test
cmp
pop
int3
aad
int3
xor
adc
jnp
or
cmp
insl
hlt
pusha
sub
push
and
sub
mulb
ret
mov
pop
lcall
inc
xchg
rorb
stos
sub
jle
mov
pop
pusha
or
arpl
lret
push
pop
sbbl
fdivrs
push
stos
jb
les
test
out
jecxz
dec
jge
pop
stos
and
idivb
xchg
daa
jg
jns
sbb
or
push
movsl
or
or
jp
dec
and
cli
pop
jl
cwtl
jno
xor
aaa
sbbl
inc
ret
push
mov
dec
push
sahf
add
xor
xchg
mov
subb
fnstcw
fwait
mov
daa
xchg
gs
push
loope
rclb
adc
push
outsb
push
mov
push
imul
rcl
loope
lods
xor
pop
jge
ja
fwait
pop
clc
mov
mov
fidivl
sub
mov
jge
fidivrl
mov
lea
mov
std
sub
push
dec
dec
xor
cmc
rcrb
mov
repnz
cmp
ja
call
xchg
sbb
mov
mov
call
pop
mov
fwait
outsl
movsb
cmpsb
jmp
fsubrs
pop
int
jae
cld
aaa
xor
into
and
subl
xchg
or
js
and
xlat
lods
clc
push
test
nop
mov
popf
cmp
insl
repz
dec
xlat
xor
xor
inc
pop
ss
and
push
pop
das
and
cmp
and
daa
pop
roll
dec
in
in
sub
jp
fwait
jg
testb
fsubrs
sahf
mov
js,pn
in
lret
mov
lea
scas
sbb
gs
hlt
adc
shlb
xor
lock
push
jae
jae
addr16
mov
jae
inc
ret
mov
mov
insl
add
mov
shl
hlt
pop
pop
stc
cmp
pop
mov
jl
and
mov
sbb
fsubrl
aam
adc
mov
popaw
mov
pop
aam
jg
cmp
fmuls
sub
jne
cmc
xchg
sub
sub
sbb
pop
call
pop
cmp
sub
fdivs
or
mov
clc
mov
mov
dec
loope
fnsave
mov
arpl
pop
push
sub
mov
stos
jb
sub
cmpb
add
and
push
fcompl
inc
mov
test
je
aaa
add
jae
cmp
adc
add
enter
das
pop
jae
xchg
out
pop
dec
andl
clc
aaa
add
cmpsl
xchg
mov
dec
out
gs
fcomps
sbb
lods
js
je
pop
aaa
test
jbe
testl
iret
push
popf
cmpb
push
sub
push
repz
cli
lcall
outsb
and
imull
and
mov
testb
aad
sub
pusha
cmpsb
adc
inc
hlt
adc
xchg
daa
imul
fistpl
sahf
movsl
jle
mov
add
in
xor
movsl
jle
push
pop
cltd
adcb
adc
data16
hlt
into
jecxz
pop
sbb
mov
popf
lret
aas
xor
jmp
inc
inc
daa
push
adc
enter
lret
mov
les
jae
lds
repnz
sbb
and
ljmp
dec
ljmp
pop
and
cmp
inc
inc
and
ret
fbld
lahf
sbb
pop
push
lods
cwtl
test
sub
push
push
stos
inc
inc
push
negb
loopne
inc
pop
jle
movsl
cmp
dec
in
xchg
test
sbb
jae
cmpsb
adc
popa
xchg
sti
inc
repz
jo
pop
mov
outsb
out
or
lcall
add
dec
or
add
ljmp
daa
xchg
dec
sub
mov
jp
out
je
call
leave
xor
and
pop
mov
lret
and
ret
pop
mov
dec
lods
xor
pop
ret
lcall
and
dec
imul
call
inc
mov
adc
jmp
mov
clc
cli
dec
ret
push
aad
pop
jl
mov
or
mov
push
mov
hlt
clc
jmp
movsb
pop
sti
adc
jle
or
add
test
cmp
jne
int
xchg
adc
cmp
dec
roll
inc
pop
dec
in
jno
mov
test
mov
lods
mov
mov
dec
pop
scas
arpl
testl
in
out
outsl
add
push
mov
push
push
aam
jl
sti
out
mov
jb
outsb
cmpsl
fdivrs
pop
add
inc
mov
imul
cs
aad
push
jbe
fnsave
fsubr
cmpsb
in
cmp
out
inc
pusha
test
jmp
mov
xor
or
hlt
jb
scas
hlt
clc
clc
jge
lcall
add
add
xchg
imul
pop
xchg
dec
out
setns
fcmovb
int3
mov
mov
inc
lret
outsl
cmp
lods
push
leave
dec
or
xchg
or
or
and
mov
inc
js
add
mov
cmp
ret
mov
popf
lcall
mov
push
adc
les
dec
data16
jae
ds
pop
mov
mov
es
rorb
out
mov
mov
cs
in
jl
dec
and
mov
cmpsl
in
js
into
jns
jne
dec
or
inc
into
push
cmp
loopne
mov
aaa
lds
mov
xchg
lock
clc
outsb
dec
leavew
test
dec
xchg
cwtl
fildll
clc
je
mov
orb
xor
xlat
or
pop
mov
cmp
int3
gs
lea
lret
mov
scas
push
push
push
sub
sbb
fstp
mov
inc
sbb
mov
pop
cltd
subb
mov
popf
icebp
shl
ror
sar
stos
jmp
test
lods
std
cli
push
or
iret
sbb
xor
xor
enter
sub
sahf
add
insb
cli
push
add
xor
cmp
cwtl
loopne
stc
out
cmp
rorl
push
mov
mov
fdiv
xlat
nop
repz
adc
xor
int
lcall
and
cmpsl
jl
xchg
repnz
popf
fisubrs
mov
mov
sbb
hlt
inc
mov
inc
lahf
jb
scas
jmp
sbb
pop
imul
jecxz
into
jno
es
dec
cwtl
mov
push
lea
jno
in
icebp
mov
mov
mov
jo
stos
xchg
sbb
mov
jbe
icebp
dec
hlt
inc
xchg
jno
sub
lods
cmp
imul
xchg
push
adc
cmp
loop
mov
ret
shl
insl
pop
movsb
mov
add
adc
xchg
lods
in
popf
cmp
sti
push
addr16
cltd
cli
jmp
dec
fwait
out
pop
and
addb
push
adc
outsl
inc
in
mov
repz
jnp
mov
xor
and
mov
mov
lahf
mov
dec
dec
dec
sahf
add
mov
cmpsb
movsb
insb
cmc
lds
scas
mov
adc
jns
pop
push
mov
mov
add
out
nop
inc
aaa
sbb
pop
sbb
roll
stos
fmull
nop
mov
cmpsl
xchg
dec
cwtl
xchg
jmp
cld
enter
sbb
mov
xor
dec
mov
imul
sbb
shrb
ja
rol
insl
movsl
or
or
dec
inc
cld
xchg
stc
mov
push
push
fdiv
dec
aad
xchg
pop
push
jns
pushw
add
fwait
movsb
into
xor
push
sbb
pushl
lcall
jb
or
xchg
dec
mov
jmp
push
clc
imul
inc
or
pop
inc
mov
aam
xorl
pop
decb
adc
mov
clc
or
xor
mov
cs
xor
cmp
add
ljmp
stos
js
adc
dec
imul
into
push
jl
mov
cwtl
mov
or
mov
or
or
mov
push
mov
pop
loop
js
inc
sbb
cmp
push
pop
sbb
ret
cmpb
xchg
push
aas
xor
mov
lret
inc
sahf
sbb
leave
push
scas
jg
scas
inc
mov
inc
test
sub
mov
sbb
mov
adc
dec
test
cli
jns
lds
jns
jo
push
hlt
xchg
push
ret
dec
fildll
dec
and
idivb
in
fildl
jecxz
push
adc
dec
popf
sub
rcr
pop
pushf
faddl
pop
mov
aad
arpl
scas
inc
adc
adc
movsb
cmpsb
loopne
in
mov
jns
xor
dec
add
das
adc
push
push
movsb
cmpsb
add
push
mov
out
movsb
pop
popf
jo
sbb
scas
mov
out
ret
idivb
fs
push
pop
movsl
cmp
mov
adc
leave
jo
aaa
into
xchg
mov
adc
fisubl
ss
ficompl
out
sub
cmp
js
xor
pop
fbld
sub
outsl
sbb
add
into
push
jnp
pop
mov
in
popf
int
std
cli
ja
stos
mov
mov
mov
cmp
sbb
or
sub
mov
fwait
mov
data16
mov
out
or
sbb
movsl
xor
xchg
xchg
jo
xor
jns
cmp
adcl
aam
pop
sub
or
dec
pop
sti
out
xor
dec
fstpl
and
xlat
jg
aam
jnp
cld
in
dec
push
xor
push
push
je
xor
jle
gs
or
pusha
sbb
and
xchg
push
mov
dec
push
andb
mov
xchg
inc
fbstp
das
lea
loopne
addr16
fcomps
shl
jo
rolb
shrb
xor
cmp
lcall
lods
adc
mov
test
push
out
mov
ffreep
out
shl
jle
pop
cmpsl
jbe
cltd
je
xor
dec
std
bound
fadds
add
pop
cld
xor
cmp
iret
sar
cmpsl
add
fisttpll
pop
pop
leave
sbb
or
mov
dec
scas
mov
daa
push
lods
xchg
cltd
scas
jae
mov
pop
sarb
int3
cld
outsb
dec
cmp
orb
xchg
dec
adc
sbb
pop
jle
inc
push
xor
mov
jno
fs
repz
pop
lods
cwtl
jmp
mov
enter
push
and
rorb
sub
inc
lods
imul
push
add
stos
aas
ret
fwait
shrl
add
out
in
nop
fsub
pop
or
fldenv
add
insb
jp
loopne
xchg
dec
ljmp
jbe
movsl
je
add
out
sti
es
stos
mov
imul
sbb
rcr
jp
std
mov
sahf
ja
into
divps
jns
push
popa
adc
in
push
pop
xlat
test
in
cli
shrl
or
loope
cld
int3
cmp
shlb
out
push
ja
pop
sbb
push
cli
cmp
std
pop
ja
mov
pop
pushf
fldl
xchg
pop
lret
xchg
ljmp
push
pushf
mov
loop
jnp
mov
out
or
push
mov
lahf
pop
and
inc
xchg
cwtl
bound
xchg
ds
stc
popa
mov
cld
and
pushf
or
lret
dec
pop
pushf
jmp
es
enter
pop
fcomps
xor
cltd
lds
dec
or
es
sub
sahf
cmpsl
pop
xchg
call
stc
pop
mov
cmpsb
fcomip
inc
dec
adc
out
imul
call
adc
call
aam
ds
pop
xor
mov
mov
aam
fildll
jno
or
daa
ds
cmp
dec
out
in
adc
addr16
arpl
repnz
adc
adc
daa
or
cmc
imull
sub
mov
mov
inc
adc
cmpsl
stos
mov
jecxz
repz
push
mov
mov
mov
mov
xor
in
push
jg
test
or
pushf
mov
add
mov
pop
ljmp
mov
lahf
inc
into
outsb
in
add
xor
in
insb
shlb
xchg
fisttpl
out
popa
rcrb
sbb
and
xchg
mov
and
or
sub
ja
stc
dec
outsl
and
jl
adc
enter
pop
jb
cmc
inc
in
rcl
jne
xchg
pop
sahf
xlat
sbb
popf
xor
shlb
push
jp
jmp
pop
mov
sbb
or
fs
inc
xor
bound
push
test
pop
test
dec
inc
mov
test
into
and
bound
dec
scas
repnz
push
imul
push
add
xchg
mov
or
popf
shrl
push
jo
xchg
jl
sub
movsl
inc
push
rorb
clc
mov
or
adc
fidivl
loop
or
fsts
jbe
adc
lret
cmpsb
pop
ljmp
scas
xorb
fs
insl
dec
push
aam
jl
bound
orb
pusha
mulb
xorl
pusha
inc
cltd
ret
mov
push
xchg
das
pop
scas
sahf
xchg
aam
fs
mov
jb
mov
mov
lods
aaa
in
lea
push
mov
mov
movsl
js
xchg
or
mov
dec
lds
popa
jae
cld
mov
in
sub
and
scas
mov
or
push
jmp
or
fwait
mov
mov
and
test
jmp
or
test
cmp
jl
mov
mov
mov
aam
imull
cltd
mov
xchg
xchg
std
lcall
add
movsl
jns
stc
dec
lods
nop
xchg
jge
or
dec
add
xlat
enter
hlt
loope
xor
lds
xlat
xchg
push
ds
inc
mov
rolb
mov
mov
std
cmc
in
imul
std
dec
or
adc
in
lcall
xchg
inc
xchg
les
lret
cmp
push
inc
ds
leave
sub
inc
aam
jne
sbb
enter
sahf
inc
cltd
adc
insl
aaa
xchg
and
sub
jbe
mov
jb
lcall
nop
mov
jo
imul
sbb
adc
cs
ljmp
jns
mov
or
xlat
or
jmp
jle
cmc
dec
dec
std
push
std
sbb
lds
dec
fcmove
sub
mov
push
mov
testl
shlb
test
lods
incb
mov
xor
inc
sub
dec
mov
fidivl
jbe
loope
popl
sub
pop
sub
mov
jbe
aam
rcrb
int
push
push
pop
mov
out
pop
inc
cwtl
mov
xchg
dec
orl
decb
faddp
push
in
add
sub
xor
xchg
push
and
cli
cs
rcr
dec
dec
dec
jno
push
lods
das
mov
cmpsl
outsb
add
int3
push
xor
filds
shl
sbb
inc
push
pop
xchg
icebp
or
jno
and
push
and
xor
in
mov
cmp
lods
aaa
push
insb
cmp
fsubp
jecxz
mov
cs
out
cld
adc
pop
dec
push
and
add
sti
mov
dec
out
rcrb
cld
dec
cmp
pop
mov
xchg
and
push
iret
aad
insb
call
lods
lea
sub
je
push
jl
pop
outsl
mov
mov
cmp
jg
arpl
aaa
das
jp
push
out
dec
and
bound
aad
lock
push
stos
dec
xor
jle
sbb
dec
adc
or
cld
je
adc
ss
mov
repz
out
jp
out
mov
jno
test
mov
insb
scas
pop
add
and
cmp
jecxz
xchg
ss
repz
mull
xchg
mov
cmpsb
je
arpl
cmp
pop
nop
mov
push
adcl
or
adc
push
test
lods
loop
mov
js
je
jns
popf
jmp
sahf
pop
mov
push
cld
push
inc
mov
pop
les
jp
pop
cmp
xchg
roll
sub
lret
cli
dec
pop
sbb
jp
add
lock
cmc
xchg
loopne
xchg
ficompl
enter
inc
aam
cmp
popf
xor
push
mov
jecxz
mov
mov
pop
ds
or
inc
cltd
jle
jnp
in
xchg
pop
int3
push
cmp
lahf
cmp
inc
cmp
mov
aad
js
xlat
mov
xchg
jmp
loop
rcll
int3
push
inc
sbb
outsl
sarl
dec
pop
fldenv
jns
add
lea
cld
mov
or
fmuls
mov
stos
push
adc
pop
pop
repnz
pop
aaa
dec
fisubl
aam
mov
sbbb
mov
inc
rorb
aad
test
jg
sub
std
cmp
rorl
xor
xchg
imul
pop
cmpsb
in
jnp
sub
push
ret
dec
js
push
inc
pop
or
loop
jo
out
adc
leave
cltd
jl
aam
xchg
dec
mov
and
or
push
es
dec
test
icebp
pop
clc
mov
std
jge
inc
mov
divb
shll
scas
push
sbb
pop
mov
push
adc
das
dec
cmp
inc
xchg
aad
add
pop
subl
xor
movsl
xchg
push
daa
push
push
in
sbb
xor
in
into
push
xchg
lds
mov
xchg
or
dec
ds
cmp
mov
pushl
je
shrb
sbb
xchg
gs
sbb
add
push
scas
addb
inc
mov
and
or
inc
in
xchg
aaa
mov
test
cmpsl
les
add
inc
loopne
jg
mov
mov
sysenter
xor
mov
xor
push
cmpsl
lods
xchg
xor
push
sar
xor
fcomps
arpl
testb
inc
push
gs
add
enter
scas
je
jecxz
in
bound
jns
jno
fs
xchg
cwtl
jl
add
mov
shlb
outsl
jge
mov
fsubr
fs
fmull
cmp
addl
neg
fcomps
fwait
mov
or
fisubrl
sti
call
leave
and
movsb
add
in
fcoml
add
add
and
push
mov
orl
mov
ja
out
mov
xchg
pop
fisttpl
mov
mov
das
subl
mov
popf
loopne
sub
aam
mov
lds
sbb
jnp
js
shlb
dec
shlb
jg
xlat
xor
adc
call
into
lods
sub
fldcw
in
push
xchg
loopne
pushf
push
clc
pop
or
and
and
mov
pusha
cmp
decb
push
dec
jnp
jnp
pop
insb
in
pop
gs
mov
push
push
fsubr
fmul
adc
out
cli
dec
mov
mov
or
jmp
inc
sahf
int3
dec
dec
nop
scas
push
mov
xlat
pop
or
xor
and
sub
pop
xor
jno
mov
xchg
sub
repz
add
movsl
mov
arpl
cld
cmpl
add
lock
shl
ror
loop
dec
mov
cmp
fldcw
jmp
xchg
adcl
stos
stos
lahf
leave
and
sub
lea
clc
mov
pop
pop
inc
stc
ret
scas
cmpsb
hlt
push
enter
test
loopne
daa
xor
loopne
and
jecxz
cmp
ss
imul
cwtl
mov
lods
lods
cwtl
jne
arpl
xchg
repz
loopne
inc
and
xor
pop
pop
ds
test
mov
rorl
mov
or
sbb
cmp
sbb
inc
div
push
shl
cmp
mov
mov
adc
out
mov
clc
cmpsb
or
imul
stos
adc
shr
and
cmp
lret
int
imul
xor
call
pop
leave
ss
mov
push
lea
or
add
push
sub
aam
sub
out
popf
push
pop
xchg
pop
inc
xchg
dec
fsubrs
xor
dec
add
inc
andb
cmp
mov
push
shll
sahf
rcrb
pop
fcmovne
pop
iret
sbb
and
push
mov
test
sbb
popa
xlat
or
sbb
inc
pop
sub
loope
arpl
fwait
or
testl
xchg
test
xchg
and
dec
addr16
add
decl
lods
ret
sub
daa
loop
stc
mov
dec
jne
cmpsl
or
std
adc
fimull
mov
lea
cmpsb
rep
lahf
push
shlb
das
das
ret
or
in
mov
mov
mov
ss
mov
ja
pop
testb
lret
into
xor
fld
dec
repz
test
gs
imul
inc
sub
cmp
and
adc
mov
and
je
cmpsl
loope
mov
mulb
mov
js
js
dec
es
push
xchg
cmp
out
xor
test
lods
sub
pop
jge
push
shrb
push
popf
pop
xor
dec
jbe
xchg
ret
imull
in
ds
insl
xor
mov
stos
xchg
bound
lods
mov
pusha
out
jmp
jo
xchg
mov
lret
cmpsb
outsb
les
mov
pop
das
sbb
movsl
cmc
mov
stc
daa
stos
adcl
xchg
push
stos
nop
jg
xchg
leave
pop
inc
pushl
adc
bnd
push
jp
das
mov
mov
ret
inc
adc
pavgb
mov
popf
mov
jg
test
in
cmp
mov
mov
push
movsl
sub
jb
jmp
repz
out
ficomps
ret
in
xorb
pop
mov
jne
jne
jl
cmp
fisttpl
ja
cmpsb
or
mov
dec
movsl
test
jl
ljmp
pop
cli
repnz
sub
test
xchg
call
mov
add
sub
rol
cs
jecxz
inc
sti
pop
pop
cs
imul
mov
lock
outsb
and
stc
divb
shll
andb
cwtl
fadds
test
mov
stc
push
or
sbb
pop
pop
xor
popf
mov
mov
mov
push
mov
jb
push
cmpsb
orb
sbb
pop
dec
or
xchg
cmp
or
in
sub
xchg
das
iret
mov
cmp
adc
call
gs
cld
cmc
cmp
mov
lcall
cmpsb
or
sahf
mov
fadds
lea
xlat
sbb
loopne
das
jo
fcompl
or
pop
push
es
xchg
aaa
pop
lods
enter
sti
jp
fs
mov
jl
cmp
inc
add
repnz
daa
cmp
jo
jge
lds
movb
repz
cli
add
aad
mov
cmp
js
inc
fdivs
jnp
or
xor
inc
fsub
jl
inc
insl
imul
bnd
mov
lock
dec
in
dec
test
mov
cmpsb
cmp
or
cmp
pop
divl
out
int
sar
inc
je
jmp
mov
mov
add
stc
sarl
sarb
mov
out
cmp
cltd
enter
pop
xor
aad
cmpsb
or
pop
stos
lods
fsubrs
call
jne
jl
in
sti
or
jno
ljmp
pop
xchg
mov
ljmp
sub
inc
push
pop
sub
ja
cmc
xchg
loope
push
rclb
pop
mov
loopne
cs
inc
push
aaa
push
jg
sub
mov
cmp
ret
test
add
or
sub
hlt
in
or
inc
rclb
xchg
insb
and
mov
in
cmpsl
dec
repnz
and
enter
lods
push
int
pop
xchg
int
adc
movsb
jg
jg
loop
lahf
ficomps
test
mov
adc
or
repz
icebp
fs
sbb
dec
mov
shl
xchg
adc
stos
add
inc
pop
push
jmp
mov
pop
movsb
lcall
cmpsl
cmp
arpl
arpl
rol
mov
les
xchg
or
enter
push
add
cli
lock
shr
jecxz
js
mov
jbe
and
add
or
sarl
add
push
fwait
test
inc
push
scas
push
sti
xchg
shrl
jmp
cwtd
push
dec
outsb
jle
push
outsb
jbe
nop
adc
leave
inc
xor
cmc
mov
sbb
cmp
inc
addr16
std
xchg
or
hlt
inc
and
push
push
fcomps
std
jl
xorl
stos
xchg
lcall
fsub
push
clc
fwait
push
push
push
jle
push
daa
orb
fdivs
push
push
pop
or
mov
aam
sub
jns
sbb
imull
mov
dec
addl
test
insl
cmpl
hlt
leave
mov
sub
push
pusha
into
fsubr
jmp
cmp
dec
sbbb
out
ds
adc
outsb
cmp
in
dec
pop
mov
dec
jo
xor
jmp
cmpsl
test
mov
scas
mov
xor
adc
neg
dec
jb
cld
adc
jne
add
add
or
cmp
push
outsl
cmp
push
inc
mov
cmp
icebp
sub
pop
jno
inc
ficoml
sbb
add
mov
punpckhdq
pop
clc
lret
imul
in
leave
adc
sbb
dec
icebp
sahf
sub
and
popa
fxch
daa
vmwrite
mov
in
xlat
pop
jmp
push
adc
inc
jb
mov
push
jmp
int3
pop
imul
jge
sub
gs
inc
push
fwait
xor
or
sub
xor
mov
inc
fsubs
cmpsl
stc
or
add
dec
lcall
enter
aad
push
loope
cmpsl
stc
std
mov
aaa
lret
mov
xor
jns
mov
imul
push
stos
into
ss
stc
dec
jmp
dec
cmpsb
scas
out
xchg
fisubl
shlb
ret
pop
jno
xor
mov
cmp
push
insb
push
aad
adc
add
push
or
jne
popa
pop
cmp
fcom
out
add
adc
ret
loop
xlat
ret
lods
xor
xchg
stos
sahf
dec
jne
sbb
pop
mov
dec
push
add
pop
dec
mov
push
jecxz
aam
popa
add
notl
stos
insl
add
scas
into
stos
mov
or
in
push
clc
mov
push
push
cmpsb
jecxz
inc
dec
out
sub
dec
adc
cmpsb
mov
mulb
sub
shl
stos
push
lahf
in
andb
mov
cwtl
or
mull
mov
xchg
mov
jle
mov
jmp
mov
push
ret
call
xor
lret
movsl
inc
mov
dec
inc
add
fwait
push
fistpll
jne
ja
jmp
sub
add
rorl
out
mov
cmp
leave
outsl
xor
std
jns
cli
aad
fistpll
imulb
lock
and
pop
out
dec
bound
rcrb
or
push
sbb
cmp
hlt
aad
sbb
mov
sbb
and
jb
fcompl
or
or
lods
jb
pop
xlat
out
sahf
jo
adc
mov
jmp
pop
inc
push
cmpsl
insl
insb
sbb
cmp
xchg
push
mov
shr
iret
mov
loop
js
sub
sbb
outsb
fs
push
jmp
inc
cwtl
or
jge
sub
xor
inc
das
mov
fadds
xor
es
lret
xchg
jmp
rorb
fiaddl
xchg
sti
pusha
mov
adc
clc
jge,pt
mov
or
push
scas
mov
stos
cmpsl
cmp
shll
add
or
xor
loopne
jecxz
loopne
popa
aaa
aaa
fimull
loopne
pusha
or
fsubrs
lods
stos
mov
jns
lods
fs
out
rorl
sub
xor
daa
loopne
mov
test
call
fwait
enter
pop
fxch
inc
ja
fcoms
adc
adc
pushf
insb
fisttpll
fbstp
pop
bound
in
shrb
sub
aas
lea
popa
cs
or
dec
gs
inc
push
cmc
dec
imul
loopne
add
orl
jae
cld
cmp
ja
fstpt
cmp
adc
sbb
and
testb
loop
imul
mov
ja
cmc
xchg
popf
xor
lea
icebp
ds
pop
and
mov
jnp
test
add
scas
mov
push
test
inc
orb
cmp
shll
mov
jnp
mov
fbld
inc
das
test
dec
lcall
jmp
mov
movsb
fisubrl
nop
aam
or
hlt
add
mov
jns
jne
and
lods
fisttps
jge
mov
push
and
mov
mov
mov
lods
jge
cli
jns
in
lock
fwait
jg
xor
pushf
mov
cmpsb
in
dec
inc
mov
imul
inc
xchg
cmp
push
add
mov
mov
imul
xor
sbb
inc
push
dec
insl
mov
mov
mov
sub
mov
cmc
xor
xchg
jle
dec
jge
call
mov
push
insl
pop
cmp
push
paddusw
fnsave
mov
xor
dec
or
lock
inc
mov
mov
mov
adcl
lcall
cmp
cltd
int
xchg
sahf
cwtl
loop
sub
push
sbb
mov
inc
jo
dec
mov
jbe
add
sub
cmp
das
shl
loopne
decb
inc
fadds
add
test
mov
jl
movsb
movsl
or
test
xorl
loopne
mov
adc
repnz
jne
xor
subl
sub
cmc
mov
ret
jnp
pop
fldpi
out
inc
enter
sbb
cmp
into
fucomip
add
mov
add
sbb
jns
adc
jmp
sbb
outsl
xlat
iret
dec
mov
mov
push
mov
xor
mov
dec
dec
inc
inc
sub
imul
add
sahf
cmp
fwait
pop
imul
out
packssdw
mov
sbb
stos
enter
xchg
lret
inc
fs
nop
movsb
xchg
lock
enter
adc
insl
pop
or
pop
pop
ss
push
dec
lock
jmp
mov
and
xchg
fs
pop
jns
xlat
xchg
loopne
pushf
call
aas
and
insl
repz
push
or
lahf
test
lret
push
push
ret
mov
jns
mov
pop
icebp
int
cmc
xorb
outsl
mov
cmp
sub
enter
xchg
dec
stc
mov
call
jno
mov
fstps
jl
jg
jmp
cli
fcmovnb
mov
shrl
test
std
push
pushf
pusha
or
push
xchg
test
cwtl
pop
pop
rcrb
cmpsb
inc
xor
xchg
fdivrs
iret
and
mov
xchg
scas
xlat
adc
ds
cwtl
decw
inc
pop
cmp
sbb
lods
lods
clc
push
cmp
inc
sub
ror
cwtl
sbb
out
cld
mov
xchg
fs
and
sahf
out
dec
test
sbb
repz
or
or
stos
xlat
mov
imul
lret
les
adc
div
push
adc
mul
jnp
xor
xor
imul
out
in
sbb
scas
stos
js
cmp
imul
popf
sbb
sarl
sbb
sub
mov
imul
ret
push
pop
adc
xlat
adcb
xor
iret
js
jl
loope
lock
xor
and
add
cmp
ja
notl
adc
mov
xor
imul
in
arpl
inc
mov
or
cmpsb
or
or
cwtl
jp
movsb
push
mov
les
jb
add
push
or
jno
leave
into
mov
jmp
shlb
xor
fsubp
jmp
cmp
ret
lret
int3
fidivrs
mov
mov
daa
nop
inc
and
or
inc
dec
jns
fprem1
icebp
pop
add
lods
test
sbb
pop
lahf
repz
or
pop
loope
sahf
out
movsb
cmpsl
push
cwtl
jns
mov
cmc
arpl
mov
mov
inc
out
sub
xorl
pop
jge
mov
jmp
out
adc
sbb
mov
clc
jp
sbb
inc
aaa
add
mov
fnclex
insb
fildll
mov
cmp
jns
jnp
mul
or
mov
pop
popf
xor
stos
aas
and
popa
dec
sbb
lret
xor
inc
or
sub
mov
sub
cmp
or
cmc
and
ds
sub
lret
std
lea
aas
pop
iret
push
jae
mov
fsubrp
enter
cltd
adc
cmp
int3
sbb
mov
hlt
loope
xor
mov
add
mov
and
nop
outsb
ds
jge
sub
pop
clc
ja
aam
test
gs
test
stos
std
arpl
mov
sbb
add
xchg
std
in
aam
imul
mov
xchg
ljmp
and
mov
pop
test
orl
sub
xor
mov
jb
or
cmp
mulb
pop
pop
xlat
and
sub
pop
xor
push
inc
cmp
fstl
hlt
stc
ret
lahf
mov
sti
xchg
push
xchg
nop
xor
sbb
stos
push
push
or
xor
lods
xchg
mov
jns
sub
inc
xchg
adc
incb
ljmp
push
negl
lds
mulb
inc
stc
xlat
lods
addr16
and
shlb
mov
aad
pop
in
add
fisubs
cmpsb
cmp
daa
ret
xor
adc
daa
cmpsl
mov
rcr
stos
sub
sbb
inc
or
sub
pop
add
sbb
dec
cli
in
push
pop
push
loop
cmp
aam
xchg
push
xorl
notb
shl
loop
mov
movsl
adc
jne
push
lahf
adc
dec
test
hlt
les
jae
or
jbe
pop
lcall
and
subl
jge
fimull
addr16
mov
add
xchg
fdivrl
aas
mov
je
pop
nop
mov
fdivl
inc
add
cmp
je
mov
lcall
cmpl
shll
and
mov
shrl
and
mov
mov
mov
mov
out
rcll
push
rorl
cmp
loop
push
and
sti
jmp
jo
adcb
jo
jno
movsb
lcall
xor
and
inc
aaa
hlt
in
and
cmpsb
test
cs
stos
icebp
adc
andl
or
add
push
inc
jecxz
cmc
cli
xchg
mov
outsb
imul
sarl
jno
daa
push
lock
xchg
cltd
pop
popf
push
jl
cs
shlb
insl
mov
push
es
in
test
push
cltd
ljmp
shrb
test
in
cmpsl
mov
or
dec
cmpl
loopne
testb
leavew
je
ret
stos
add
cmpsb
sbb
icebp
sub
or
repnz
jg
xchg
mov
inc
shrl
int3
and
addl
add
inc
push
mov
jnp
test
or
in
ljmp
push
out
mov
pop
dec
xlat
and
or
xchg
sub
push
jnp
xor
dec
mov
push
movsb
ljmp
inc
mov
inc
mov
dec
lods
movsb
add
jg
or
addr16
xchg
mov
push
das
push
cmp
push
mov
lock
pop
mov
inc
lahf
mov
arpl
mov
mov
sbb
and
arpl
cmp
fstpl
sahf
stc
xchg
mov
js
scas
test
sbb
fstps
xor
std
jle
sub
pop
rcr
pop
lods
insb
mov
jp
sbb
pop
xor
adc
mov
js
sar
aas
scas
mov
in
xchg
push
lahf
inc
data16
mov
or
fcoms
cwtl
mov
dec
aam
xor
push
dec
aad
fmuls
icebp
sbb
mov
mov
fisubs
ret
ret
pop
mov
int3
xor
je
mov
pop
test
mov
xor
loop
test
sti
push
dec
dec
inc
cmpsl
sbb
cmp
clc
test
pusha
test
sbb
lret
pop
jo
cld
cld
rep
xlat
xor
cmc
dec
aaa
dec
lret
cwtl
out
or
add
inc
jle
or
jp
iret
xlat
nop
pop
inc
in
cmp
push
sbb
mov
fsts
push
xchg
xchg
in
xor
iret
ror
ljmp
aam
clc
outsl
mov
je
icebp
arpl
ja
dec
mov
cmp
fs
add
ret
xor
pop
push
shrl
xchg
testl
xlat
lods
xchg
sbb
sbb
test
adc
decl
push
pop
xorl
das
outsl
or
mov
or
add
adc
xlat
jmp
or
ficomps
lods
inc
sbb
pop
ja
and
push
or
pop
sbb
push
popf
rorb
out
xchg
bound
inc
inc
or
mov
xchg
dec
mov
xor
sbb
sbbl
insl
leave
imul
inc
and
mov
jno
xor
lcall
sbb
in
push
out
ds
dec
test
push
and
leave
push
ret
jae
or
adc
push
xor
xorl
and
sub
es
dec
add
fisttpll
pop
cli
xlat
cmc
ss
fistl
pop
jbe
shll
adc
dec
mov
fs
mov
pop
mov
data16
jmp
rol
inc
jmp
stc
test
adc
sub
fldt
mov
mov
push
insb
aam
jecxz
xor
lret
mov
popf
addb
mov
loope
call
jp
push
mov
stos
stc
sub
jl
icebp
pop
fistl
lahf
int
pop
cs
push
or
aad
lret
scas
cmp
dec
push
bound
je
lods
push
cmp
mov
xor
push
mov
and
mov
jbe
jns
aas
cmpsl
push
fstpl
ficoml
xor
adc
jbe
sub
add
xchg
int
imul
jo
add
cld
jno
std
dec
in
std
pop
sbb
inc
icebp
mov
andl
gs
subb
ficoms
lret
int3
mov
enter
loop
mov
aam
shrl
popf
mov
jnp
sbb
loop
push
pop
into
and
lock
inc
loope
pop
lret
out
pop
xor
repz
push
mov
jb
pop
mov
jbe
or
xchg
xchg
cmp
and
mov
inc
cmp
jne
xchg
insb
lcall
mov
sahf
or
pop
push
mov
jo
je
mov
faddl
lret
pop
pop
xchg
or
pop
imul
mov
pop
sub
imul
je
fsts
and
mov
cmpsl
pop
xor
out
cmc
adc
mov
sar
outsl
mov
incb
lret
push
adc
std
fistl
lret
xor
mov
mov
dec
mov
add
sbb
dec
adc
les
dec
sub
js
icebp
xchg
stos
jle
lods
aam
xor
xchg
push
xorb
lcall
rcll
or
lods
mov
or
ljmp
popa
xor
xor
icebp
mov
cld
dec
cmp
dec
shl
cmp
jl
das
jns
stos
mov
popf
fisttps
push
fdivs
stos
je
jl
rcl
add
repz
jns
xchg
cmp
lock
test
shll
pop
adc
insl
int3
dec
add
sbb
push
loope
mov
outsl
sbb
in
adc
push
xchg
sub
lahf
enter
testl
adc
pop
and
push
lea
ljmp
test
jnp
cmp
es
xchg
mov
xchg
into
jg
les
push
lock
push
sub
aas
add
jns
jl
ds
movsl
outsl
xor
imul
jl
popf
test
jae
lea
test
sub
adc
cmpsb
dec
jge
aas
aam
dec
out
sub
ljmp
sahf
test
gs
or
loop
xchg
fstpt
xchg
std
inc
or
es
mov
aad
add
xchg
lods
mov
xchg
jb
mov
pop
mov
jg
pop
adc
ds
xchg
add
rolb
aad
int3
add
fdivr
and
cmp
and
cmp
scas
adc
arpl
add
fdivrl
jmp
stc
out
aaa
jle
mov
icebp
push
fldenv
mov
jle
sbb
out
add
movsl
bound
aam
push
mov
in
xchg
inc
out
das
cli
adc
jp
aas
mov
and
mull
cwtl
xor
jle
leave
ja
jne
sahf
sub
test
pop
clc
pop
outsb
cs
aad
push
jne
rcrl
inc
jno
mov
push
mov
lods
mov
mov
add
fidivl
mov
cwtl
adc
enter
fsts
pandn
cmp
mov
je
popa
out
mov
push
ljmp
in
jl
jns
lea
add
jo
mov
sbb
gs
mov
jnp
sbb
pusha
lods
xchg
or
jnp
insb
xchg
aas
xchg
push
dec
gs
add
lret
dec
add
push
aad
inc
ret
iret
sub
jge
xor
jmp
pop
mov
pop
lods
xchg
sub
jl
dec
in
mov
mov
ds
into
nop
outsl
pop
inc
iret
inc
add
xchg
push
movsl
xchg
hlt
imul
stos
rcrl
lcall
sbb
call
cmp
push
dec
scas
xchg
data16
lret
sub
xchg
push
negl
dec
add
nop
lret
xchg
cmp
push
add
jg
cmpsl
pop
jge
and
mov
xchg
lock
xchg
add
ljmp
inc
mov
loop
jge
dec
adcb
mov
inc
aad
inc
daa
xchg
adc
int
sub
inc
daa
cmpsb
push
mov
sbb
or
mov
aaa
xrelease
xor
pop
scas
pop
lds
sub
push
popf
xchg
cmp
jne
enter
cld
push
mov
adc
test
stc
or
insl
ljmp
lock
ficompl
cs
adc
pusha
dec
imul
stos
ret
cmp
cli
and
loopne
add
jmp
cmp
les
sbb
ss
sti
push
addr16
mov
enter
mov
sbb
jecxz
mov
stos
xor
mov
cmp
push
mov
scas
sub
dec
ret
adc
fwait
mov
dec
enter
jmp
sub
add
popf
sub
push
mov
stos
loop
mov
adc
into
sub
mov
mov
aad
and
stos
fisttpll
rorl
enter
loop
sbb
adc
fs
and
jne
lcall
fwait
popa
and
pop
cmpsl
ret
mov
cmp
mov
hlt
mov
pop
ret
cwtl
into
cli
pop
cmp
xchg
aaa
push
jle
jmp
loopne
sbbl
loope
pop
adc
mov
inc
jmp
mov
add
lods
js
add
adcl
inc
sbb
mov
mov
xor
mov
xor
dec
pop
and
aad
fcoms
testb
xchg
gs
jnp
add
scas
test
sub
lret
test
out
in
adc
jns
push
divl
jno
mov
mov
xchg
test
mov
mov
push
mov
adc
jecxz
ficoml
dec
outsl
lret
imul
mov
ja
push
outsb
dec
jmp
leave
sbbb
xor
idiv
xchg
pop
imul
insb
aam
cli
dec
nop
dec
xchg
cld
xorl
push
sbb
pop
mov
fdivs
mov
pusha
ss
cld
popa
dec
out
ficoms
iret
cmpsl
jno
cmp
fcmovne
push
outsl
mov
ss
jae
push
pushf
and
mov
fwait
mov
subb
xor
sbb
jmp
add
sti
idivl
test
loope
jecxz
imul
adc
movsl
clc
test
sub
aaa
adc
sbb
dec
rorl
inc
push
fisttps
pop
ss
dec
fsubr
adc
imul
aas
rcrl
fsubrs
and
adc
sbb
mov
mov
pop
leave
call
into
pop
shll
nop
pop
jbe
insl
push
mov
and
cld
and
testb
mov
mov
dec
mov
shrl
pop
push
xchg
xchg
pop
fsubrs
cmp
movsb
cmp
aad
cltd
addr16
hlt
stos
xor
addb
test
adc
inc
fs
xchg
cwtl
ss
add
dec
in
jge
andb
sti
sbb
test
add
cmpsl
pop
repz
cmp
inc
cmp
jbe
mov
and
loope
pop
pop
sbb
loopne
out
stos
stos
mov
fstl
mov
out
xlat
push
lea
pop
sub
sbb
cwtl
inc
repz
in
int3
outsl
shll
xchg
mov
aas
pusha
cs
or
mov
sbb
cmp
lret
jge
inc
pop
jbe
jecxz
cmp
sbb
lods
push
pop
jne
mov
stc
inc
push
clc
popa
push
aad
pop
dec
cmp
aad
ret
and
cmp
in
cmp
rolb
leave
das
mov
mov
cmp
mov
mov
mov
sbb
test
adc
xchg
xor
daa
imul
negl
in
jnp
add
push
jae
xor
mov
sub
movsl
add
adc
aad
ja
jne
and
or
mov
mov
leave
ret
icebp
fwait
mov
outsb
sub
xor
sub
icebp
adc
add
xor
cmpl
push
aaa
cmpsb
cltd
mov
jbe
loope
dec
inc
mov
push
rcrb
fsub
cmpsb
stc
loop
sbb
mov
or
cmpsb
shlb
incl
fldcw
cmpl
out
aaa
and
or
data16
xor
sbb
push
inc
out
aam
dec
cmpsb
mov
cmp
pop
inc
mov
jb
mov
imul
negl
stc
ror
lret
icebp
mov
sub
push
cmp
cltd
xor
stos
les
enter
push
in
pop
cmp
cmp
imul
lea
mov
in
repnz
dec
sahf
pop
loop
pop
sbb
push
push
push
mov
mov
adc
cmc
xchg
in
mov
fiadds
xchg
push
sbb
sarl
insb
fimull
fstpt
stos
xor
jle
inc
inc
xchg
mov
cmpsl
pop
aad
out
aaa
stc
cmpsb
gs
fucomi
sub
inc
mov
fs
cmp
ds
nop
jo
xor
mov
xor
enter
jne
sub
adc
cli
sbb
push
cmp
mov
and
add
lds
mov
hlt
repz
jmp
lret
les
push
shll
jne
dec
stos
inc
cmpl
add
subl
xchg
push
mov
and
and
adc
add
mov
loope
mov
lahf
xor
jb
xor
push
test
ds
push
sbb
jno,pt
fldenv
stos
lods
lahf
sub
ss
pop
ss
sahf
inc
data16
imulb
addr16
cltd
out
pop
dec
push
add
cmp
push
jnp
and
stos
sahf
popa
xchg
fiaddl
ret
push
into
jo
add
arpl
aaa
and
dec
jle
test
sub
dec
sub
sbb
scas
adc
mov
pop
fstps
dec
inc
xor
sbb
das
int
fs
out
jmp
call
xchg
ffree
out
xlat
jae
jge
in
fsubrl
and
mov
adc
incl
rorb
popa
cli
pop
jbe
or
cltd
sub
imulb
dec
jo
mov
jb
inc
fwait
adc
mull
push
enter
pop
inc
pop
push
dec
xchg
clc
xlat
jle
cmp
ja
aam
cmp
cmp
dec
add
dec
pop
jo
dec
lea
pusha
sbb
mov
mov
insl
out
sub
aad
jnp
imul
cmp
lea
ds
sbb
shlb
sub
leave
push
dec
cs
scas
in
in
pop
mov
mov
sub
pop
fcmovb
bound
pop
xor
mov
cmp
rcll
test
or
int
pushf
lds
out
inc
fildl
loop
inc
and
ja
outsb
mov
mov
dec
mov
or
xchg
xchg
jge
loope
cmc
xchg
sbb
cmp
xor
push
les
cmc
es
ficoml
arpl
fsubl
dec
test
add
push
xchg
xchg
fsubrl
test
inc
inc
in
or
lock
mov
loopne
call
inc
inc
mov
pushw
xor
lods
mov
sub
push
hlt
jo
xchg
and
xchg
dec
aaa
loopne
fwait
and
push
jbe
fst
ljmp
sbb
call
cmp
cmp
and
adc
je
pop
pop
and
jne
into
cmp
sbb
or
or
add
aaa
mov
add
mov
dec
pop
xorl
and
dec
xor
xor
inc
push
inc
stos
cltd
gs
out
mov
ja
out
inc
mov
loopne
pusha
ljmp
dec
cmpsl
inc
jmp
popa
pop
dec
jg
jb
lock
dec
sbb
inc
roll
pushf
insb
jmp
push
lret
ret
sbb
pop
mov
inc
cmp
cmp
scas
jb
pusha
jp
in
scas
mov
pushf
inc
and
in
xchg
push
cmp
cli
xorb
lods
xchg
ds
in
push
add
insl
and
add
fbstp
adc
int
pop
xchg
addr16
and
out
xchg
cli
sahf
js
nop
cwtl
mov
aaa
mov
pop
sbb
push
out
pop
and
xchg
cmp
xor
mov
mov
pop
movsb
xor
in
push
xor
loopne
jge
mov
dec
adc
mov
std
add
lea
mov
std
xchg
fwait
out
jne
mov
enter
mov
jbe
pop
cmpsb
xor
outsb
ret
pop
cmp
adc
mov
and
movsl
sbb
mov
ret
mov
pop
mov
jnp
jb
mov
dec
cltd
push
mov
fs
xchg
and
push
jl
imul
dec
xchg
fmul
mov
out
enter
test
repz
mov
fdivrs
lcall
sub
xchg
ret
flds
cs
cs
test
imul
shr
subl
jl
push
mov
in
adc
js
call
sub
inc
mov
aas
push
enter
gs
andl
loop
testb
test
lods
xor
popa
js
insb
mov
lret
jns
test
mov
push
inc
sub
sbb
push
push
test
push
add
out
push
call
shlb
aam
xor
fcmovu
push
roll
mov
fdivr
out
iret
mov
lcall
mov
lds
cmc
lds
jae
imul
jmp
cmp
ficoms
push
fistps
mov
movsb
sub
pop
loope
cwtl
sti
dec
inc
insb
loop
xor
add
sub
jne,pn
das
outsl
sbb
sbb
add
xor
cmp
mov
aaa
shl
cmp
divl
mov
add
adc
mov
jg
sbb
pop
lret
cli
rolb
ret
push
jle
xchg
sub
out
andl
das
push
popf
popf
fistpl
fcmovne
mov
sbb
enter
and
push
aam
and
push
add
imul
pushf
mov
sbb
or
pop
mov
cmp
outsl
pushf
lods
aad
mov
adc
inc
sbb
mov
mov
mov
cltd
bound
das
push
roll
xchg
pushf
sub
aas
pop
adc
in
daa
xchg
in
push
out
ret
pop
out
lock
test
push
in
mov
sbb
popl
add
jg
gs
test
fs
jmp
ret
cltd
mov
and
cmpsb
je
and
nop
jno
and
pop
pop
fstps
push
test
scas
leave
inc
sbb
insb
and
jmp
jp
flds
sbb
cmp
push
push
mov
xchg
xchg
hlt
cmp
xor
ds
loope
xchg
push
mov
es
ret
push
fbstp
xor
and
mov
clc
rcrl
pusha
dec
jns
add
xor
adc
sbb
iret
repnz
cwtl
das
xchg
pop
out
data16
test
in
jp
jecxz
push
cmc
mov
adc
sbb
aas
mov
or
lods
rcll
sub
pop
mov
fildll
loop
call
sbb
movsb
inc
push
mov
test
lea
mov
cmp
mov
scas
mov
adc
imul
mov
popa
out
jno
mov
jbe
inc
imul
fdivrs
ds
push
cmp
push
shlb
pop
jp
mov
xchg
xchg
cmc
les
inc
add
adcl
rcrl
push
mov
cmp
jno
repnz
mov
dec
repz
mov
aas
dec
xlat
jecxz
ret
int3
fisttps
jecxz
ljmp
mov
cld
inc
shlb
out
pop
dec
fdivp
mov
imul
xchg
dec
jmp
loop
and
cmpsb
sbb
stos
push
dec
out
push
mov
lret
lahf
or
sahf
jmp
or
sbb
in
push
sub
sbb
lret
xchg
mov
sbb
leave
dec
je
sub
shll
notl
mov
cmp
add
ljmp
add
std
xchg
xlat
enter
sub
pop
sahf
mov
fildll
and
ret
xor
cmpsb
jo
jne
imull
outsl
push
movsb
jo
cmp
push
xchg
incl
sub
pop
test
popa
repnz
xor
dec
aad
mov
mov
data16
pop
add
xchg
inc
lods
jle
jmp
sub
mov
fcompl
mov
cltd
fwait
clc
push
iret
mov
push
imul
ljmp
inc
int
cmc
and
mov
sbb
cmc
pushf
aad
outsl
mov
pop
mov
mov
addr16
insl
shrb
js
jbe
dec
in
outsb
push
sbb
dec
out
movsb
xlat
ljmp
mov
pusha
xchg
jmp
xchg
and
roll
inc
sbb
dec
cmp
xchg
jbe
cwtl
out
sbb
cmp
mov
cmc
adc
adc
insl
push
aas
push
call
or
push
out
fwait
jg
jo
aas
mov
enter
adc
idivl
mov
mov
xor
inc
fdivs
imul
ja
inc
fdivrl
sti
clc
gs
popa
sti
pop
mov
pop
scas
insb
cmpsb
cmp
mov
cmp
pop
push
nop
aaa
enter
jo
xchg
xor
add
push
mov
xor
out
ret
xchg
adc
mov
sub
mov
mov
lret
xchg
mov
push
inc
int
sbb
in
mov
nop
outsb
ret
into
ret
sub
dec
aam
jge
mov
push
or
iret
push
mov
shlb
adc
push
lea
jns
shrl
push
repz
add
cmp
je
mov
mov
adc
and
mov
mov
dec
fcoms
out
adc
shrb
jecxz
cmp
or
clc
outsb
repz
adc
sbb
in
les
call
push
call
xchg
xchg
loope
icebp
test
les
stc
out
push
add
add
int
push
mov
mov
stos
adc
and
aad
loop
out
and
pushf
aas
int
adc
dec
or
lret
mov
divb
fwait
test
popa
inc
lahf
mov
push
je
das
mov
out
xlat
xor
inc
daa
dec
stc
xor
sub
les
rcl
jecxz
jle
out
cld
jbe
mov
test
mov
jge
fdivrl
push
push
sub
dec
mov
dec
iret
or
fisttps
fs
xchg
scas
dec
gs
sbb
rol
or
call
push
xor
jmp
sbb
mov
inc
lods
lock
imul
mov
inc
cli
and
out
adc
add
vmulps
push
mov
adc
and
popa
cmpb
sti
mov
mov
mov
xor
imul
ret
mov
div
lea
rcl
lret
adc
sub
sub
inc
pop
sub
dec
rcr
mov
dec
mov
dec
sub
insb
insb
loopne
std
sub
mov
inc
xchg
aaa
pop
push
enter
add
jns
sbb
lahf
test
adc
cmpb
scas
mov
andl
rorl
mov
shrl
fwait
inc
mov
cmp
leave
jl
aaa
pop
nop
and
pop
pop
cltd
fwait
and
and
icebp
std
jle
pushf
mov
mov
pushf
cmp
sub
pop
lods
arpl
cmpsb
inc
inc
inc
test
sbb
and
jle
nop
mov
js
jmp
notl
cmpsb
push
gs
xchg
pop
jp
mov
push
sbbb
fildl
xchg
stc
or
je
push
enter
xor
dec
std
jbe
fsubl
xchg
mov
add
inc
cmpb
and
pop
or
push
hlt
scas
lods
push
jns
fmull
imul
sbb
lahf
push
pop
daa
xorb
mov
pop
jb
icebp
adc
sub
repz
push
xor
mov
clc
mov
sahf
xchg
sub
lods
cmp
pop
mov
push
jmp
xchg
mov
xlat
mov
mov
int
dec
insb
or
stos
lcall
ret
adcb
pop
mov
out
repz
pop
and
push
repnz
jge
stos
outsl
loopne
jmp
jl
mov
cmpl
test
outsl
outsb
orb
les
mov
icebp
sub
outsb
lods
cmp
and
mov
pop
mov
xor
sbb
adc
mov
ds
jmp
lods
xor
outsb
jecxz
mov
sub
pushf
xchg
or
mov
add
addr16
or
inc
int
xor
mov
fcompl
push
call
lret
pop
jg
mov
cmpsb
outsb
ja
push
inc
jb
lea
stos
scas
iret
mov
ja
test
rclb
fmulp
xor
lahf
push
pusha
cwtl
and
or
addr16
inc
mov
aas
push
movb
cmp
es
lret
or
inc
xchg
movsl
mov
xchg
or
inc
mov
shl
push
mov
in
dec
scas
mul
push
sbb
jp
int3
jno
aas
arpl
pop
push
pop
and
jbe
cmc
popa
bound
scas
pop
cmpsb
xor
popa
fstpl
jno
dec
pop
and
shll
sub
mov
lods
sbb
sahf
je
mov
jno
or
int3
fcoml
xchg
int3
xor
enter
push
imul
dec
in
jge
mov
int
insb
push
xchg
sbbb
ds
xchg
das
jb
sbb
sti
aas
stos
dec
or
imul
div
cmp
in
fisubs
test
push
pop
adc
rcrb
or
incb
ss
and
jo
leave
ja
mov
sahf
aad
push
pop
xchg
push
shll
or
hlt
imul
popa
sahf
xchg
mov
cltd
lods
arpl
pop
loopne
cmp
inc
jle
adc
xlat
jb
mov
popf
adc
inc
sbb
mov
cmp
or
in
push
sbb
sub
jno
andl
outsb
push
int
inc
ficoms
fstl
push
iret
clc
mov
in
fsts
push
lret
adc
rorb
sahf
jae
cmc
in
xor
mov
adc
popf
sbb
rolb
shlb
rcrl
test
jae
call
hlt
mov
pop
sahf
lret
cs
cmpsb
jp
movsb
pop
enter
pop
shll
inc
es
shll
je
push
fadd
ja
cmp
stc
push
fsubs
jae
fsubrs
cld
movsb
push
mov
or
fbld
xor
add
ret
add
inc
push
shlb
es
pusha
mov
fnstcw
jecxz
sarl
mov
sub
xor
stos
xchg
out
mov
dec
mov
cmpsl
loope
cmp
jle
fwait
iret
mov
pop
jo
jo
and
scas
push
outsl
pusha
add
jnp
lds
test
enter
lret
stos
xor
cmpsb
sub
scas
add
rclb
dec
imul
pop
jle
push
xchg
xor
inc
adc
subb
inc
mov
jns
sarl
and
das
stc
inc
repz
es
jle
popa
xchg
adc
data16
adc
or
mov
and
aas
jbe
or
add
xchg
inc
sub
or
add
adc
enter
mov
xchg
repz
in
stos
adc
call
subl
inc
push
xor
inc
test
dec
inc
outsb
xlat
sub
pop
mov
sbb
repz
and
xlat
jmp
fimull
in
sbb
repz
xchg
ljmp
cld
mov
aam
mov
mov
mov
ljmp
shlb
inc
sub
add
sbb
leave
nop
imul
inc
jno
jecxz
xchg
mov
push
mov
jno
ret
mov
mov
outsb
jp
outsl
jo
repnz
leave
sbb
clc
push
cmpsb
push
push
sbb
pusha
out
mov
aam
push
sub
jae
pop
test
je
ja
mov
cmp
incb
mov
push
jp
lock
out
xchg
adc
xor
repnz
cltd
and
mov
andl
je
mov
shll
dec
repz
repnz
jbe
fwait
mov
or
jae
inc
inc
and
xor
test
out
add
cmpsl
inc
arpl
ds
jp
xor
fistpll
pop
mov
adc
fisubrs
sbb
movsl
or
mov
or
xchg
test
stos
pop
dec
mov
and
mov
sub
repz
and
sbb
es
popa
movsb
push
jecxz
in
icebp
in
sub
and
mov
ljmp
mov
xchg
cld
loop
repnz
mov
jo
or
add
jle
in
pop
dec
sbb
jae
arpl
cli
and
outsl
dec
adc
stos
dec
fimull
popa
pop
jno
dec
das
mov
or
inc
aam
xor
push
ret
popa
dec
fdiv
ljmp
std
dec
pop
mov
pcmpeqb
adc
xor
shll
leave
adc
sbb
std
int
mov
insl
dec
sbb
lods
vmread
outsl
sub
inc
lea
fcmove
lods
nop
inc
lock
mov
mov
push
lea
stc
mov
mov
mov
icebp
cmp
fisubs
mov
cmpsl
jnp
cmc
shlb
stc
mov
cltd
xlat
popf
shlb
loope
sbb
mov
mov
arpl
adc
lods
es
mov
xchg
icebp
pop
pop
push
xchg
xor
in
xor
inc
push
cmpsb
push
jle
sarl
push
pop
inc
aam
stos
fsts
fcmovu
popa
scas
outsb
xchg
mov
lahf
sub
sub
lods
aad
ss
repz
mov
or
adc
jno
sbb
xchg
inc
cmpsl
jnp
mov
or
sbb
jl
js
and
aaa
xor
nop
pop
in
mov
ja
cmp
scas
call
mov
out
add
mov
mov
out
xlat
cmp
xlat
hlt
xchg
pop
popf
jge
or
arpl
push
test
sbb
repz
mov
dec
or
push
push
out
jl
jne
mov
cmp
push
jmp
jo
dec
int
jns
std
adc
es
repnz
xchg
jmp
mov
add
pop
lods
hlt
dec
jae
arpl
dec
test
jo
and
jmp
adc
sti
inc
fiadds
jbe
mov
dec
mov
mull
cmp
fst
daa
jp
ficoml
rorl
xor
adc
sbb
lahf
fimull
jo
test
psubusw
inc
pop
in
fistps
jbe
xlat
mov
pushf
cltd
push
adc
ds
mov
bound
movb
cmovs
mov
push
dec
inc
pop
cs
sub
sbb
sbb
and
mov
inc
in
fsubrs
aad
mov
out
xchg
scas
popf
stos
gs
push
pop
sbbl
loop
xor
out
mov
divl
pushf
sub
or
sbb
das
nop
mov
and
pushf
out
adc
push
stc
lea
mov
dec
jmp
sub
sub
cmp
and
in
push
sbb
sub
andl
outsl
add
mov
inc
mov
sarl
nop
ss
popl
in
cld
pop
int3
cvtps2pd
mov
mov
idivl
gs
adc
mov
pop
js
adc
xchg
out
inc
imul
and
pusha
jp
push
shr
out
mov
dec
int3
fs
push
lcall
enter
fcmove
mov
push
subl
mov
std
scas
fdivp
in
add
xchg
in
pushf
ljmp
pavgw
imul
push
repnz
xor
les
pop
xor
mov
jp
scas
in
sbb
into
imul
mov
lock
cltd
sbb
stos
push
gs
mov
sub
dec
jnp
jno
jne
mov
push
fiadds
mov
inc
mov
int3
cmp
xchg
jns
cmp
lahf
sub
jle
and
pop
scas
xchg
insb
dec
adc
push
push
add
sbb
cmpb
icebp
mov
dec
pop
imul
jne
stos
mov
inc
sbb
adc
mov
arpl
jno
adc
mov
inc
adc
inc
push
js
xlat
pop
dec
jmp
mov
pop
mov
add
xlat
push
and
stos
scas
js
test
or
jno
xchg
or
shr
fdivr
push
sbb
ja
sub
arpl
insb
in
inc
ja
mov
aad
int
and
push
sub
sub
lea
in
lret
popa
adc
aad
jg
pop
into
sub
fwait
lcall
or
in
dec
dec
mov
push
popf
cmc
in
shll
dec
out
ret
aaa
pop
pop
xor
jne
xchg
cs
jnp
pop
push
or
sar
repnz
arpl
stos
stc
mov
bt
sti
int3
jp
xchg
adc
int3
push
rol
push
cmp
addr16
sbb
iret
rcrl
aaa
dec
adc
pop
adcb
dec
cmc
fcom
mov
or
imul
in
sbb
mov
inc
sub
scas
xor
movzbl
fstps
mov
push
lods
aas
mov
cmp
jns
inc
mov
mov
movsb
int3
xlat
jecxz
clc
jb
mov
mov
and
arpl
adc
jo
jecxz
mov
jmp
js
test
push
mov
into
inc
adc
stos
out
push
and
js
std
lods
sbb
gs
pushf
dec
popa
lea
in
mov
adc
je
idivb
loope
jns
pop
insb
test
mov
fidivrs
jp
cmpsl
jo
data16
or
mov
dec
sbb
aam
xor
sti
movsl
cmp
dec
jecxz
sarl
mov
ret
push
inc
xor
mov
jbe
stos
mov
clc
xchg
popf
push
stos
bound
lret
mov
addr16
dec
push
or
pop
or
leave
and
mov
sbb
jmp
inc
outsb
in
dec
add
imul
xor
push
out
pop
jnp
ljmp
lods
notb
aas
les
inc
aas
loope
outsb
cmp
pushf
dec
push
shl
cld
loop
and
sti
cmpsb
cld
pop
adc
xchg
and
pusha
jmp
push
and
xchg
test
es
dec
jo
in
adc
jle
push
and
push
inc
xchg
adcb
aas
dec
jg
lahf
sub
mov
mov
shrl
sub
fisubs
or
jecxz
push
pop
pop
shr
lcall
sub
sub
push
inc
outsb
cmp
loop
add
insb
fisttpl
sub
mov
sbb
insb
jne
inc
or
ja
xchg
addb
mov
add
fdivp
loop
hlt
test
out
dec
xchg
pop
xchg
daa
aad
je
imul
ds
push
std
mov
push
mov
sub
push
jmp
adc
repz
ficoml
jle
or
or
std
and
or
push
int3
push
mov
dec
cwtl
ss
xchg
lock
and
sbb
addr16
in
xchg
scas
and
mov
ret
lret
rcrb
mov
xor
cwtl
mov
sub
lcall
cwtl
mov
test
pop
sub
test
stos
pop
dec
jmp
mov
cli
pop
repnz
mov
and
push
sub
adc
jb
outsb
stc
int3
stos
rcrb
sub
mov
push
inc
xor
mov
addr16
insb
sub
xchg
adc
sbb
pop
xchg
and
int3
loop
outsl
or
adc
pop
sub
mov
inc
add
imul
hlt
mov
adc
mov
daa
pop
std
xchg
jne
xlat
test
add
or
test
cltd
push
movsl
jge
mov
test
cmp
call
in
push
mov
xor
push
push
mov
out
push
xor
add
jp
cmp
xor
inc
repz
lcall
push
test
shlb
mov
outsb
adc
push
lock
out
lock
xor
test
in
mov
and
inc
gs
xchg
ret
adc
inc
ds
cmp
or
sub
cmc
mov
int
arpl
xchg
cvtps2pd
ljmp
cmp
jge
jmp
mov
fxch
adc
dec
ja
clc
stos
movsb
scas
stos
cli
adc
imul
ja
push
xchg
rcrb
loopne
negl
adc
inc
arpl
mov
adc
cli
push
and
leave
adc
sub
cmc
js
push
dec
mov
ja
sub
or
cld
pop
lahf
jb
popa
scas
cli
xchg
les
pusha
daa
xlat
decl
cltd
push
xchg
ja
xchg
leave
jb
les
in
cmp
cmp
mov
inc
dec
les
dec
into
pusha
cmc
addl
lock
sbb
xor
cmc
mov
and
add
mov
adc
and
popf
push
es
loopne
sbb
aam
sahf
clc
mov
jae
mov
inc
push
in
out
xlat
mov
mov
mov
and
loope
sahf
subb
mov
enter
jb
stos
int
or
mov
mov
jmp
sub
push
addl
cmp
push
dec
lock
xchg
mov
push
dec
lock
out
jle
and
insl
sbb
in
push
inc
stos
push
jo
int
and
lahf
iret
out
sub
fsubrp
hlt
and
xlat
subl
sarl
mov
fisttpl
rol
movsl
adc
and
leave
sub
inc
sbb
fsubrs
adc
cltd
pop
mov
mov
fcompl
testl
mov
in
jb
cwtl
sub
movsb
push
in
arpl
push
lret
push
pop
mov
sub
imul
xchg
rorb
cmp
bound
mov
lcall
and
es
jns
pop
std
jb
out
pop
xor
dec
imul
rcr
dec
rclb
std
icebp
out
add
inc
pushf
add
ret
jmp
mov
mov
popf
stc
pop
pop
mov
or
and
out
sbb
xchg
push
insl
sbb
add
loopne
data16
inc
iret
in
inc
test
ret
js
into
sbb
cmp
in
subb
cs
mov
push
imul
xor
dec
cmp
xlat
loop
mov
ljmp
fidivrs
add
add
sub
shll
sbb
mov
ss
loopne
or
adc
test
push
and
mov
out
sahf
sbb
aaa
pusha
jb
cmp
and
test
cli
inc
jbe
mov
push
push
popa
mov
scas
adc
and
pop
dec
pop
push
adc
aad
cld
inc
push
clc
cmp
rcrb
js
enter
fnstenv
lds
push
push
pop
dec
mov
jmp
inc
jae
xor
cwtl
sub
fwait
adcl
sub
adc
pushl
pop
fsubr
mov
mov
push
mov
loopne
inc
inc
pop
add
shll
mov
imul
jmp
ss
gs
xor
cmp
add
outsb
sub
xor
fisubl
inc
stos
dec
mov
jmp
push
bound
call
ss
call
icebp
push
test
test
nop
inc
pop
gs
push
inc
mov
jl
pop
clc
jg
push
lds
sub
lea
and
ret
stc
jmp
cmpsl
call
aaa
lcall
enter
outsl
dec
jo
leave
add
mov
xlat
mov
or
out
adc
or
fcmovb
js
xchg
push
or
int3
cmpb
lret
sbb
inc
outsb
es
std
xor
xchg
xchg
xchg
lahf
and
fbstp
aad
and
pop
sbb
int3
xor
int3
fistpl
and
ficompl
dec
sub
rolb
and
mov
cmc
hlt
xor
dec
int
sub
or
add
pop
push
popf
lds
pop
inc
inc
sub
mov
sti
and
mov
fdivl
xchg
fyl2xp1
movsl
ret
xchg
mov
dec
push
fdivp
out
outsb
out
decl
imul
popa
pop
fnstcw
test
ret
lahf
cmp
mov
lock
ljmp
stos
ret
push
std
out
jne
xchg
push
cmp
ss
lock
mov
cmp
jg
sub
fildll
push
adc
or
push
popf
fwait
mov
movsb
jns
dec
xor
jno
jecxz
push
fnstcw
push
add
lcall
dec
cltd
data16
jl
lret
pop
inc
cmp
popf
push
jmp
inc
push
cmpsb
adc
cmc
inc
and
xor
mov
pusha
inc
pop
pop
fidivrs
mov
je
lahf
cmc
addr16
rol
fdivrp
popf
mov
aas
pop
adc
or
ret
jp
or
cld
fistl
pop
cmp
lahf
in
cli
nop
sub
dec
sub
push
sti
cli
push
cmp
mov
bound
dec
sbb
divb
xor
push
jecxz
mov
sbb
dec
je
aas
mov
add
xchg
orl
cltd
mov
in
lods
wrmsr
aam
inc
push
lods
lock
fs
lret
mov
orb
sbb
repnz
pop
clc
cs
stos
mov
sbb
xor
sbb
inc
jno
mov
bound
das
add
cmc
fnstsw
ja
rcrl
mov
int3
loope
incb
xchg
jb
sti
jmp
int
incb
sbb
push
loope
xor
ja
ret
outsl
cmp
in
test
ljmp
sub
sahf
testb
rcl
and
popf
sbb
push
adc
call
sub
and
inc
iret
es
inc
or
pop
mov
aam
jno
or
mov
mov
xchg
cwtl
pop
dec
clc
cmp
sahf
cmpsl
int
push
sbb
sub
sub
cmp
icebp
adc
push
xchg
push
xchg
outsb
pushf
mov
js
imul
sub
and
jae
pop
and
pop
ret
dec
push
mov
int
int3
xchg
mov
movsl
add
mov
add
jl
and
pop
dec
mov
dec
rclb
cmpsl
movsb
and
gs
les
push
push
sti
push
jns
or
inc
inc
jle
insb
aas
mov
xchg
lret
int
inc
mov
jno
addl
jmp
sbb
insb
sbb
push
cmc
add
adc
or
lahf
adc
sahf
das
xorb
cltd
push
dec
in
fidivl
shll
icebp
in
add
pop
les
fdivr
mov
leave
mov
fdivrs
mov
mov
sbb
xor
test
pop
add
test
add
push
out
cmp
out
pushf
mov
cmpsb
push
ljmp
cmp
and
jae
sarl
xchg
fidivs
inc
aas
out
das
popa
addr16
pop
into
sbb
xor
in
iret
in
dec
pop
movsl
mov
or
pusha
inc
fsubs
sbb
adcl
xor
add
iret
out
xchg
jns
mov
dec
xlat
mov
cwtl
ret
pop
stos
lret
popf
scas
mov
mov
daa
sbb
xchg
test
fwait
aam
iret
and
repz
mov
mov
inc
sbb
jle
dec
and
push
inc
adc
sub
push
int3
into
stc
outsl
xchg
dec
decb
inc
pop
adc
jbe
in
xor
in
ljmp
addr16
mov
jl
adc
cld
add
int3
push
sbb
pop
rorb
xor
add
shl
cmp
outsl
sub
mov
push
jne
pop
fs
pushf
cmp
dec
out
movsb
jl
jl
mov
cmp
or
push
lds
push
xchg
sbbl
xor
lret
movsl
add
sbb
mov
jmp
xor
or
mov
jnp
mov
mov
push
addb
cli
add
ret
loopne
inc
push
mov
jne
test
dec
jmp
cmpsb
les
scas
mov
outsb
cmpsb
xchg
push
out
jp
and
add
and
sbb
mov
jbe
or
dec
stc
cmpsb
dec
xchg
enter
aam
ret
or
pop
dec
insb
pushf
push
add
sbb
mov
add
push
add
mov
xor
outsb
ficompl
mov
jl
cmp
inc
aaa
lea
add
cmp
out
pop
clc
jmp
xchg
call
xchg
jns
xlat
cmc
int3
pop
sub
ficompl
adc
inc
aad
adc
sbb
mov
leave
jnp
or
stos
pop
cmp
in
mov
vsubss
push
movsl
outsb
in
push
pop
dec
ss
xchg
je
cmp
fisubrs
shrl
dec
popf
clc
clc
cmp
shl
and
mov
sub
stc
xchg
xlat
push
stc
in
mov
sbb
test
xor
sbb
inc
sub
adc
out
inc
aam
frstor
push
movsb
xor
cmp
mov
inc
je
call
insl
cld
sbb
popf
jae
sub
aad
cmpsl
into
in
rcl
or
in
and
sub
xchg
cmp
mov
aas
mov
mov
loopne
imul
xchg
lods
jnp
dec
xchg
lahf
add
in
out
jecxz
lock
cs
add
lahf
xchg
pop
cmp
jbe
or
cwtl
dec
sub
inc
pop
dec
pop
fldenv
push
dec
lods
mov
xor
xor
cmp
loop
xor
fildll
popa
pop
fbstp
rcll
dec
call
sbbl
sbb
pop
cmc
mov
push
cltd
outsb
cmp
push
lret
jo
mov
inc
mov
mov
lret
out
pop
lods
out
inc
in
mov
jge
outsl
test
sbb
pusha
fsubl
push
jecxz
push
sbb
xchg
cmp
jo
cmp
pop
aas
sub
push
mov
mov
ret
fisubl
xchg
mov
mov
mov
fcoms
add
loop
pop
int
sub
cmp
lds
push
aam
stos
stos
cli
lret
mov
mov
adc
stos
les
xchg
sbb
add
xor
sub
stos
iret
cmpsl
sub
addr16
mov
xchg
pop
repz
clc
leave
xor
push
inc
loop
push
movsb
push
mov
lock
movsb
mov
add
push
sbb
popa
dec
sbb
fisubl
inc
jle
stos
js
lret
pop
pop
cli
xor
jp
je
into
xchg
fsubs
xchg
pop
mov
xor
shr
jo
jecxz
lea
cld
adcl
pushf
notb
rolb
shr
dec
pop
xchg
daa
cld
sbb
hlt
imulb
arpl
incb
pop
test
jmp
mov
mov
jecxz
mov
data16
cmc
hlt
push
xor
xchg
leave
int
pop
insl
xchg
hlt
rolb
stos
in
lret
xor
outsb
mov
add
je
ja
push
lock
movsl
ljmp
lea
mov
push
sbb
ja
cmp
add
add
mov
xchg
push
sbbl
sub
mov
cmp
lret
adc
cmp
mov
out
pushf
jne
out
cmpsl
mov
and
test
pop
lahf
call
jne
sarb
inc
and
lret
sub
add
add
inc
inc
mov
outsl
mov
push
les
push
fisttpl
in
hlt
xchg
or
or
pop
rep
jle
icebp
mov
and
mov
lock
pusha
call
cmpsb
out
mov
fs
pop
cmp
dec
ss
pop
nop
mov
adc
testl
movsb
aaa
cmpsl
test
push
inc
push
jb
ds
outsb
jae
cmpsl
lret
sub
push
mov
sub
push
cwtl
cld
jb
jle
bound
les
rorb
jb
insb
sub
xor
movl
test
dec
push
in
xchg
xor
mov
mov
xchg
pusha
ljmp
aam
testb
test
jg
dec
je
xor
sbb
pop
je
push
mov
and
jnp
jmp
dec
mov
xchg
decb
xchg
xchg
je
mov
nop
ss
jno
dec
call
inc
xchg
nop
push
push
bound
test
outsl
jo
cmp
fists
insw
fdivl
repz
sub
mov
jb
cmc
je
adc
adc
popf
dec
fcoml
push
xchg
jnp
fdivl
mov
bound
mov
jne
ljmp
ja
and
arpl
cmp
std
movsl
ja
add
lahf
jmp
sbb
icebp
popf
push
pop
lock
ret
add
ss
mov
xor
sub
pop
daa
adc
rorl
inc
mov
lcall
xor
xchg
ret
lcall
push
adc
jno
mov
fisubs
mov
js
jo
lret
pop
jo
ret
fcmove
mov
push
ret
cmp
hlt
xor
dec
in
mov
jns
xchg
cli
lcall
and
mov
test
dec
mov
scas
xchg
push
in
mov
and
imul
push
dec
push
or
dec
and
sub
mov
jmp
jp
push
shll
icebp
xchg
in
sbb
jae
pop
popf
rclb
imul
pushaw
das
rcll
jl
pop
sbb
stos
cwtl
sub
aas
fistpl
jnp
gs
dec
and
mov
add
sbb
cld
pop
cmp
lock
dec
pop
lods
jle
cmpsl
pop
and
loope
test
ljmp
mov
aad
data16
xchg
xor
ja
xor
mov
mov
add
xchg
in
addl
in
inc
mov
rol
xchg
push
xor
add
xor
jnp
roll
sub
push
xor
xchg
sub
and
inc
stos
out
jo
cs
lret
cmpsl
aaa
repnz
push
push
stos
xor
xor
xor
sub
arpl
adc
jge
fsubrp
jns
orb
dec
sbb
mov
pushf
jp
jp
lods
sbb
push
add
inc
fldcw
lods
mov
dec
leave
mov
or
xchg
clc
aas
adc
repz
mov
repnz
rcrl
movsb
rol
sbb
or
dec
lea
sbb
pop
andl
mov
adc
nop
roll
add
mov
cmpsl
das
mov
in
push
jl
add
inc
and
outsl
cmc
xchg
pop
gs
jmp
cmpsl
cmpb
and
fdiv
sbb
push
pop
je
out
iret
das
dec
sbbb
sti
pop
sbbb
push
loope
lock
pop
gs
out
pop
out
mov
es
insl
and
inc
xchg
or
xchg
mov
pop
popf
cld
test
clc
xchg
pop
dec
jb
dec
icebp
pusha
jno,pt
add
cmc
aad
jno
leave
popa
or
outsb
pop
cltd
hlt
xchg
out
jo
in
imull
cmp
test
ret
cmpsl
push
push
fldenv
inc
pop
add
andb
xor
lahf
loope
sbb
movsl
inc
arpl
mov
pop
leave
or
sbb
andl
push
call
pushf
push
adc
lods
pop
fwait
in
stos
jae
push
shrb
insl
lds
sbb
push
mov
fsubs
sbb
xor
pop
imulb
or
pop
push
mov
jg
jo
les
fwait
cltd
mov
mov
mov
in
adc
stc
enter
ljmp
iret
push
loopne
mov
fdivl
mov
js
jp
add
mov
mov
sub
dec
xchg
test
add
xor
push
cmp
cmc
mov
lret
jo
stos
jge
sbb
test
jo
arpl
adc
xor
add
data16
or
pop
sahf
add
jg
addr16
push
pop
inc
and
fwait
pop
daa
jl
dec
cs
aas
bnd
sbb
pop
add
pushf
mov
and
mov
shll
sbb
mov
rcll
adc
je
loop
test
notl
popf
push
push
lock
lret
or
subl
jmp
cwtl
jae
xchg
adc
jmp
xchg
mov
enter
jnp
lock
xchg
mov
add
xlat
leave
test
arpl
loope
xlat
dec
lods
xor
cmpsb
mov
inc
outsl
lret
mov
add
mov
cmc
jle
dec
sub
sbb
xchg
sbbb
out
mov
add
adc
cmp
movsb
mov
adc
pop
stos
push
mov
pop
sbb
ret
mov
out
andl
fnstsw
mov
sub
fcmovu
setge
scas
imul
aas
test
push
push
cmp
lcall
add
arpl
cmpb
sub
mov
xchg
scas
int3
xchg
inc
popf
pop
lret
bound
mov
in
into
arpl
mov
cmp
mov
inc
mov
push
sbb
andl
xchg
lcall
dec
sti
jns
int
or
sub
jmp
xchg
xchg
cwtl
nop
push
mov
sub
jnp
fucomip
es
pop
sbb
xchg
pusha
mov
ds
jne
pop
andb
mov
sahf
adc
ret
pop
fwait
repz
cwtl
add
mov
out
rorl
mov
mov
adc
mov
add
mov
mov
lahf
pop
fs
mov
leave
mov
xor
sbb
and
cmpsb
pop
pop
out
loope,pt
sarb
fs
mov
mov
mov
rcrl
or
stos
xor
stc
adc
dec
loope
lret
sub
shr
ja
adc
inc
add
xchg
sbb
mov
data16
push
in
in
imul
and
adc
cmp
fsubrs
lcall
out
in
sbb
cmc
jge
xlat
jle
sbb
pop
xchg
mov
dec
fdivrl
sahf
rolb
lds
lods
jp
mov
in
cld
mov
iret
gs
icebp
jmp
mov
fcoms
jo
pop
xchg
jo
call
jle
or
lods
loope
fld
gs
std
xor
shrl
cmp
arpl
xchg
dec
ret
push
jns
lods
push
dec
mov
cwtl
push
loopne
fistps
ja
lret
pop
stos
jg
mov
add
mov
xor
xchg
xchg
jle
inc
mov
loope
arpl
insb
inc
loope
mov
xchg
in
cmp
test
ds
and
and
shl
lods
dec
or
push
mov
adc
enter
in
lahf
sbb
xchg
push
xorl
push
or
add
outsb
sar
icebp
jecxz
xlat
das
mov
dec
rclb
push
call
dec
jp
mov
pop
daa
push
pop
fucomi
and
xor
gs
pop
in
std
inc
into
lret
cmp
pop
add
push
shll
lret
es
dec
ja
cmc
jo
outsb
nop
lds
movsl
cld
sub
mov
push
jmp
fildll
pop
ret
dec
cmp
call
add
loope
add
iret
pusha
aas
lock
fbstp
cltd
jo
mov
mov
ljmp
jnp
pusha
loop
pushf
nop
dec
pop
mov
jb
icebp
les
int
xchg
mov
mov
fisttpl
test
out
test
lret
fistpl
cmc
inc
xchg
xor
push
pop
sarl
and
rclb
xor
movsb
push
pop
mov
and
mov
cmp
and
adc
lret
push
out
fdivp
rolb
mov
call
idiv
shl
jle
lret
jge
mov
ret
loope
xchg
lock
dec
fwait
push
mov
xchg
lret
out
scas
mov
xchg
out
mov
cmp
out
fdivrs
sti
lods
xor
or
cs
test
paddq
and
sub
pop
fs
cmp
imul
xchg
in
repz
jnp
mov
ds
push
leave
inc
adc
movsl
mov
out
test
out
pop
inc
cld
mov
push
jae
jmp
xchg
pop
sbb
inc
ljmp
cmp
push
arpl
jb
and
sbb
xchg
jge
inc
dec
xor
ja
add
lea
stos
cli
ljmp
cmp
es
xadd
mov
push
push
and
dec
out
push
fwait
and
scas
adc
incb
jmp
jmp
daa
popl
and
push
sbb
mov
clc
dec
in
xchg
mov
and
or
mov
insl
lret
insl
divb
lods
and
inc
or
sbb
iret
fstpl
repz
jne
sbb
mov
mov
pop
aam
inc
inc
mov
push
pop
fstp
push
pop
push
sbb
aam
ss
cld
ret
adc
and
pop
scas
lcall
sbb
xlat
fsts
inc
add
pushf
fwait
popf
xor
or
jnp
mov
sbb
sub
xor
cmpsl
lock
stos
js
orb
pop
jp
sti
cmp
es
aaa
aaa
pop
iret
popa
sbb
and
push
lret
loop
sbb
repz
sub
mov
jbe
cmpsb
or
dec
push
dec
out
daa
loopne
outsl
mov
mov
xlat
dec
cmp
add
mov
cwtl
jne
outsl
scas
into
shlb
test
fcoms
mov
xchg
icebp
out
stc
sub
and
push
push
cli
mov
sub
xchg
stos
ja
stos
movsb
xchg
fstpt
ljmp
pop
iret
mov
iret
jl
nop
arpl
cmp
mov
pop
or
and
pcmpeqw
sti
gs
mov
xor
sbb
icebp
dec
ljmp
xor
fdivs
and
insl
imul
dec
push
xor
fwait
outsl
daa
inc
pop
add
inc
imul
sbbb
dec
mov
and
mov
jg
ds
cltd
pop
fwait
xor
xlat
mov
cli
outsb
cmp
cmp
lds
pop
and
mov
shl
insb
jmp
das
fistps
sub
push
negl
xchg
out
in
mov
loop
lret
stc
sti
and
mov
out
mov
mov
ds
mov
out
jg
cmp
movsb
dec
dec
push
mov
cmp
daa
test
fmul
test
decb
sbb
xchg
out
add
sub
mov
sbb
sub
mov
mov
fmuls
scas
aaa
lods
sub
insb
mov
daa
ret
fwait
mov
push
inc
add
or
int3
ffreep
mov
xchg
aad
mov
push
in
mov
jns
in
outsb
dec
pushf
cmp
jecxz
ret
mov
inc
fadds
int3
mov
jp
mov
divb
jo
imulb
icebp
dec
pop
inc
lods
pop
fwait
cmp
aad
enter
test
movsb
mov
push
call
push
mov
or
jl
ja
dec
mov
jns
sbb
mov
clc
mov
jno
jo
call
out
jle
popf
xchg
adc
jno
nop
repnz
lock
imul
movnti
ljmp
add
stos
popa
mov
leave
stc
cmp
pop
xor
in
insb
sbb
pop
dec
ja
loopne
bound
sub
xchg
pop
jle
xor
mov
stos
lcall
mov
sbb
popa
sbb
xorb
push
push
pushf
mov
mov
outsl
inc
mov
repz
test
pop
xchg
pop
imul
adc
xchg
test
test
test
mov
ss
jmp
jo
in
popa
jmp
aas
push
inc
sbb
xlat
xor
pop
mov
push
push
inc
xchg
pop
and
xchg
push
lret
scas
stos
int
or
lods
mov
push
flds
xor
sub
out
repnz
xchg
pushf
fprem
jp
loop
lds
pop
rclb
dec
xchg
out
imul
sti
sub
xor
lret
mov
fwait
push
cmp
out
mov
xchg
cmp
sub
jl
jo
jb
xchg
scas
lock
sahf
cmp
cmp
in
mov
cld
push
ss
cmp
xchg
fiaddl
daa
lahf
push
and
pusha
repz
inc
mov
sub
jg
jp
movsl
inc
cmpsl
dec
scas
add
imul
shl
idivb
pop
testl
adc
test
insl
xchg
leave
sbb
ss
pop
cmp
not
lods
aas
mov
inc
push
adcb
sbb
sbbl
test
push
je
push
mov
shrl
jb
mov
daa
jnp
cld
mov
adc
scas
das
imul
cltd
pop
insb
pop
int3
add
repz
hlt
mov
pop
pop
ds
incb
pusha
mov
push
mov
in
ljmp
pop
test
jno
rorb
fwait
pop
mov
out
sbb
pusha
lahf
ret
rcrl
idivl
mov
loop
flds
shlb
jl
cmc
sub
out
push
or
mov
out
call
sbbb
sbb
add
repnz
fsubrl
adc
adc
les
sbb
loope
and
or
fs
insl
pop
bound
in
sti
mov
jbe
ljmp
pop
add
imul
mov
sbb
mov
push
test
std
je
cs
and
loope
dec
jl
jne
pop
cld
jbe
iret
out
je
shrl
dec
cmpsl
int
jecxz
push
loope
fdivp
add
out
mov
pop
mov
pop
scas
add
fcoml
fs
inc
and
insb
mov
jnp
sub
mov
repz
pop
mov
xchg
lret
popa
add
fsubrs
movsb
jnp
cli
frstor
imull
fnstsw
cmp
adc
cmpl
ret
je
jae
xchg
dec
add
mov
pop
outsb
out
out
movsb
mov
mov
das
inc
pop
fnsave
aas
mov
push
jo
andl
and
into
int3
xchg
push
lock
paddsb
push
jle
adc
inc
and
push
pop
bound
or
scas
mov
in
psllq
and
leave
rorl
or
xchg
pusha
bound
lret
pop
xchg
mov
or
mov
adc
adc
cmpsb
lret
out
push
enter
cmp
imul
push
mov
into
lea
shll
hlt
ret
ja
add
iret
movsb
push
inc
cmp
cmp
dec
outsb
lcall
and
jge
flds
fs
iret
and
mov
pushf
add
test
jecxz
aas
pushf
push
shll
fstpt
shlb
mov
jmp
rorb
sbb
iret
jo
lcall
test
rcl
out
sbb
sub
xchg
call
jbe
bound
add
xchg
add
stos
fsubrs
jno
mov
xor
js
mov
xchg
inc
adc
loop
icebp
pop
push
sahf
aas
push
sub
adc
and
push
cs
sbb
in
add
out
mov
pushf
lahf
xchg
jnp
out
cmp
adc
push
sub
outsb
fstps
fcmovnu
push
push
nop
std
divps
sbb
pop
or
lods
pop
add
cwtl
shll
into
xor
fbld
shrb
push
out
notl
imul
test
xlat
cmp
jp
scas
or
cmp
mov
xor
ds
fwait
rcl
loop
cmp
idivb
sahf
or
hlt
mov
std
cmp
push
mov
lods
xor
out
nop
dec
mov
mov
dec
lcall
mov
cltd
hlt
lret
jns
mov
in
mov
inc
lahf
sbb
test
push
mov
mov
fwait
dec
xlat
arpl
ret
push
fsubrl
pop
or
sub
xchg
fs
movsl
ret
enter
add
xlat
mov
gs
adcb
or
mov
sysret
xor
aad
sti
sbb
and
addr16
mov
cmp
imul
adc
sar
jecxz
aad
ret
aas
or
mov
sahf
shll
int3
pop
sub
movsl
cltd
addl
jmp
mov
ficomps
push
adc
pop
int
int
mov
imul
mov
into
jo
into
mov
jae
adc
pop
lods
xchg
call
les
add
add
adc
fadds
jnp
rorl
int3
add
xchg
bound
mov
xchg
mov
xchg
push
ljmp
icebp
pop
push
sub
push
pop
lods
xchg
bound
addb
dec
test
adc
int3
bound
sarl
out
loop
mov
xchg
and
pusha
adc
inc
jo
jns
imul
mov
repnz
mov
mov
or
mov
lds
or
iretw
pop
mov
cmp
add
enter
mov
icebp
add
loop
mov
scas
mov
jecxz
and
lret
mov
ja
mov
enter
adc
loop
test
je
add
divl
movsl
mov
test
xchg
pop
mov
daa
adc
outsl
mov
cs
mov
pop
sbb
and
stos
es
icebp
inc
sar
mov
add
push
lock
repz
mov
xchg
add
xor
cmp
xchg
out
loope
out
pop
cmpsb
lock
jecxz
xchg
xchg
inc
fstps
out
sub
pop
loope
push
setge
daa
out
test
push
push
lret
sbb
mov
xchg
inc
cwtl
mov
je
and
push
or
jbe
enter
xor
mov
jo
mov
fisubl
inc
sbbb
or
cmp
xchg
stc
mov
inc
cmp
xchg
cld
sub
fildl
fisttps
sbb
mov
xor
dec
jae
ds
dec
test
cltd
push
inc
add
pop
pop
push
sub
je
and
adc
movsb
cli
ficoml
jge
mov
rcll
mov
hlt
jp
xchg
and
inc
mov
xchg
insb
fnstsw
sti
xchg
std
push
hlt
push
mov
imul
or
sub
dec
ja
stos
jne
aas
xchg
adc
xchg
add
pop
lahf
or
mov
lcall
jmp
xchg
lods
dec
inc
sarb
dec
out
imul
stos
fcomi
mov
loope
cmp
mov
ficomps
sbb
mov
inc
aam
ja
out
jnp
adc
pop
mov
push
in
std
and
enter
mov
pop
xor
mov
push
adc
adc
pop
dec
out
jo
imul
inc
xor
subl
sbb
sahf
fsubs
add
jle
fiadds
pop
shlb
pushf
out
lret
out
andb
outsb
cmp
and
das
xchg
push
stc
aaa
rolb
dec
lret
mov
pushf
xchg
xor
cmpsl
dec
fcmovnb
xchg
insb
push
sub
jmp
test
jae
inc
lret
pop
and
stos
xor
mov
pop
sahf
xor
sub
and
push
add
or
dec
mov
imul
mul
arpl
in
cmpsb
into
rcrl
test
daa
and
sti
push
aaa
pop
xor
inc
fisubrl
push
fistps
inc
cwtl
aad
and
push
push
mov
sti
mov
insb
mov
icebp
out
pop
test
push
cmp
ja
mov
push
xor
push
orb
cmpsb
daa
xchg
push
add
xchg
dec
shl
dec
and
pop
dec
ljmp
inc
fidivs
pop
ja
cmp
and
mov
and
or
xchg
mov
mov
mov
xchg
xchg
loope
inc
push
or
loopne
push
ds
out
sbb
and
adc
mov
orl
es
xchg
mov
iret
xor
insl
cmpsb
movsb
jmp
dec
push
test
push
inc
and
addb
cmp
adc
push
enter
cli
cmpsl
inc
outsb
loop
int
mov
cmp
or
movsl
add
sub
push
sbb
pop
std
aam
fimuls
cli
subl
push
es
cmp
mov
inc
loopne
test
adc
incb
mov
adcl
int
in
xor
push
fstp
into
or
mov
fdivrs
sub
daa
xor
repz
push
sub
popa
or
jl
xchg
pushf
mov
xchg
cmovge
push
pop
scas
dec
ret
cld
jns
test
fs
or
je
lds
call
sub
iret
adc
lock
dec
mov
ljmp
stos
arpl
inc
mov
or
push
cmp
pusha
daa
jmp
repz
pop
repnz
jge
xor
xchg
jle
rcrb
xchg
dec
sbb
shll
test
pop
movsl
sbb
setb
push
ror
xor
pop
hlt
cmp
outsl
mov
roll
es
mov
outsl
popa
and
es
into
sub
push
jl
mov
lds
fwait
dec
xchg
add
add
movsl
enter
ret
shll
add
add
les
incl
cmp
mov
jl
js
cmp
test
sbb
test
out
fisubrl
xchg
lea
mov
aad
sub
out
cmp
jno
sub
mov
mov
shll
push
push
mov
xchg
push
pop
push
push
test
xchg
in
or
xor
push
loopne
outsb
push
scas
push
outsb
addl
jno
movl
daa
ds
loop
xchg
sarb
cmp
int3
test
popf
jl
dec
fs
pop
arpl
mov
adc
out
mov
mov
jns
mov
push
mov
mov
hlt
mov
aas
pushf
je
stc
jmp
inc
movsb
orl
outsl
jo
add
sub
xchg
loopne
pop
fwait
jb
lea
aaa
arpl
sarl
pop
push
inc
add
addr16
mov
lahf
fadds
lock
adc
sbb
xor
lret
cmp
xchg
inc
adc
out
outsl
mov
into
pushf
mov
jg
insl
mov
sahf
mov
push
into
cltd
jmp
das
std
stc
out
inc
or
aas
xchg
in
mov
cld
push
sbb
xor
fsubrl
adc
loopne
dec
push
sbb
imul
nop
lods
mov
pop
icebp
mov
xorb
mov
push
ficompl
insb
or
add
lret
ljmp
fwait
test
push
xlat
les
xchg
pop
lods
dec
aad
add
inc
call
mov
unpckhps
cli
in
iret
xchg
fisubrs
sub
gs
inc
add
aam
cmp
push
es
or
into
fwait
and
leave
ss
inc
jp
pop
mov
es
in
insl
mov
push
pushf
int3
scas
inc
repnz
addl
popf
notb
jb
iret
add
and
test
sbb
inc
jne
push
in
aad
cmc
roll
jl
mov
lock
scas
lods
in
imul
push
stos
adc
arpl
cmpsb
push
bound
push
xchg
jl
lret
push
enter
mov
jo
in
sbbb
lods
mov
aas
lock
lods
push
add
mov
inc
call
and
or
push
and
jge
pop
xlat
out
icebp
ficoms
movaps
mov
mov
push
mov
add
rcll
mov
out
test
mov
insb
pop
icebp
test
clc
inc
add
pop
xor
and
aaa
loop
or
shlb
shll
iret
ss
in
adc
imull
leave
ja
inc
fdiv
mov
mov
mov
inc
cmp
cmp
movsl
push
fwait
add
push
add
jecxz
int
ljmp
push
in
add
int3
pop
lret
pop
pop
mov
cli
hlt
cmpsl
cmpsb
js
testl
mov
cmp
fsub
fldenv
fnstcw
push
inc
rcrb
mov
popf
xchg
sbb
notl
adc
mov
sbb
rcr
pop
and
pushf
out
jns
in
mov
dec
mov
test
insb
xchg
mov
adc
inc
jp
mov
push
lcall
add
mov
xor
mov
sarb
push
and
sub
add
hlt
jg
cmpb
ljmp
rcr
jp
xchg
adc
xchg
imul
add
shl
push
icebp
cmpsl
or
jle
movsl
inc
xchg
into
enter
rorl
lahf
sub
aad
mov
jmp
xchg
test
adc
or
mov
cmp
adcb
mov
orb
std
or
lahf
mov
mov
addr16
bound
insb
popf
xor
adc
jb
test
sahf
cmp
std
out
dec
dec
cs
scas
jle
dec
pop
outsl
iret
movsb
outsb
into
lcall
jge
out
cmpb
out
test
mov
xlat
ss
loopne
leave
fsubs
or
push
inc
aaa
inc
cmc
jnp
lahf
add
dec
into
imul
nop
fidivrs
test
inc
sub
pop
ret
scas
aam
ss
out
clc
arpl
iret
push
movsb
data16
aas
adc
faddp
sar
fsts
jne
pop
sti
sub
or
mov
bound
movl
mov
dec
std
pop
jge
cmp
sbb
mov
into
pop
call
in
in
sub
pop
mov
mov
ds
mov
jmp
mov
adc
mov
sarl
icebp
push
push
push
and
xchg
adc
pop
sbb
fnsave
ret
mov
mov
outsb
xchg
or
jl
adc
scas
nop
je
mov
adc
pop
mov
mov
xchg
sbb
pop
sbb
and
push
xchg
fmuls
popf
xchg
inc
mov
out
cmp
in
loop
or
nop
mov
mov
cltd
jno
into
cltd
mov
cli
stos
addr16
fstpl
sbb
loope
inc
cltd
jno
jmp
cmpsl
loop
popf
pmaxsw
pop
adc
shlb
mov
jle
and
insb
adc
jecxz
sub
lret
movsl
adc
mov
pop
push
jp
mov
dec
insb
inc
xchg
das
and
lods
cmp
enter
data16
jbe
das
jae
mov
insb
jns
or
dec
and
popa
dec
roll
lods
repz
and
inc
rcl
fdivrs
loope
xor
in
mov
lds
repz
mov
xchg
xchg
stc
cmp
in
fxch
sub
lret
shl
stc
out
jb
jne
mov
xchg
in
fisubl
aaa
popa
fidivrs
pop
and
xor
lods
aaa
ja
sub
cmp
and
push
test
out
pop
insl
sub
int
and
int
imul
xorb
adc
iret
int
fcomps
addr16
pop
xor
pop
mov
arpl
xchg
filds
mov
lods
roll
and
bound
mov
cmpsb
pop
push
nop
xor
call
sbb
pop
or
enter
mov
sbb
sti
xlat
imul
pushf
jns
and
inc
add
loopne
push
push
sub
scas
add
push
pop
gs
xor
in
ja
cltd
das
xor
loop
in
mov
das
sbbl
das
and
xchg
pop
mov
inc
rorb
test
xor
and
or
sbb
stos
repz
popf
sbbb
jmp
sbb
sti
or
lret
jnp
push
pop
mov
insb
dec
xchg
aam
test
adc
lret
xor
fst
xchg
inc
jno
test
and
cwtl
sbb
cmp
dec
mov
jb
jns
inc
jg
dec
sub
dec
mov
leave
mov
cld
aas
push
jmp
imul
xchg
push
sbb
push
and
jle
and
and
rclb
cli
mov
mov
mov
mov
das
xchg
or
clc
rol
inc
loopne
and
pop
mov
nop
pop
sahf
clc
xchg
or
aaa
mov
add
daa
lahf
xor
inc
push
test
andl
cld
sahf
sub
inc
or
fdivrl
cmp
mov
sbb
les
cmpsl
fidivrs
testl
fiaddl
fdivrs
jno
add
mov
testb
shlb
jmp
fcomip
sahf
bound
xchg
sub
stc
rorb
mov
bound
pop
lret
add
push
adc
lock
mov
add
xchg
insl
sbb
imul
add
mov
push
xchg
cmp
xor
popf
stos
dec
aas
lea
fwait
and
xchg
cmp
jae
daa
in
add
scas
pop
outsl
jns
add
push
add
or
mulb
les
xor
sbb
enter
out
les
cmc
push
jg
js
scas
dec
iret
cmpsl
mulb
movsb
push
aam
cltd
addb
gs
add
xchg
cli
sub
cmp
imul
in
fdivrl
imul
lea
pop
pop
sti
stos
pop
mov
or
in
je
outsl
cwtl
xchg
bnd
cs
mov
jo
adc
xchg
lea
xlat
adc
loope
mov
pop
lods
hlt
daa
arpl
push
mov
lea
sub
movsl
adc
add
jg
xor
push
inc
mov
fisubrl
jbe
push
sbb
jbe
sahf
cmc
aas
dec
lahf
std
or
sahf
cmp
jl
push
aaa
sub
xor
into
or
fwait
outsl
or
outsl
sahf
mov
dec
sbb
out
mov
adc
call
arpl
cwtl
push
push
lret
arpl
lcall
ret
lret
ds
push
loope
adc
pushf
into
popf
shll
xchg
stos
enter
sub
mov
pop
enter
mov
inc
pop
rorb
sub
mov
sub
sub
jne
repz
mov
daa
fsubrl
adc
fsubrl
jg
mov
dec
sub
or
arpl
mov
cmpsl
cmpsb
or
insb
nop
fstps
jnp
faddl
mov
mov
scas
mov
pop
jno
cmpsl
add
xchg
rcrl
xor
loopne
xlat
outsl
stc
mov
mov
aad
xchg
or
sahf
mov
roll
jb
ds
int
cmp
fwait
sub
test
movb
imul
and
inc
ror
test
mov
add
jo
xchg
sub
shll
inc
mov
pop
jno
cmp
push
or
jno
add
cltd
cmpsb
inc
movsl
repz
dec
arpl
add
in
mov
shrl
mov
mov
js
adc
jle
jg
and
sub
rol
adc
nop
mov
mov
rcr
xor
cmp
mov
mov
test
cmp
dec
fwait
push
repz
fisubl
mov
pop
icebp
pushl
shl
movsb
lret
push
mov
mov
mov
mov
loopne
mov
rcr
into
push
push
enter
sub
fwait
hlt
xchg
xchg
vmwrite
xor
or
dec
insl
jl
repnz
cli
mov
popf
dec
rorl
push
sahf
loopne
int
inc
xor
mov
xor
andl
fcomps
stos
repnz
je
inc
orl
stc
sub
push
dec
push
or
ficoms
pushf
lds
xor
jbe
or
add
movsl
inc
mov
or
add
daa
addb
add
pop
push
sbb
inc
aas
adc
out
fcompl
mov
fsts
push
xchg
cli
sbb
out
pushf
mov
inc
mov
cmpsl
outsl
adc
push
push
rorl
xor
ljmp
dec
mov
adc
or
adc
jg
sbb
dec
and
push
int
push
mov
sti
loopne
sarb
xchg
arpl
fwait
loope
push
push
cld
pushf
jge
outsl
pop
in
sub
fnstsw
lds
mov
ss
cwtl
inc
iret
jb
int3
mov
fildl
cmp
rolb
push
and
mov
hlt
cld
insb
xchg
test
jp
jmp
insl
ss
inc
xor
jns
or
fadd
mov
aad
or
fistpl
out
loop
into
push
sahf
jns
ret
aas
pop
cmpb
std
test
xor
xchg
les
pop
add
or
enter
into
cs
xchg
xor
mov
mov
imul
lock
mov
mov
sbb
sbb
sbb
cmpsb
lret
shlb
adcb
cld
and
scas
jp
cmp
dec
out
repz
jae
cmpsl
iret
pop
adc
mov
jnp
dec
adc
jb
sbb
push
out
sub
incb
lret
test
xchg
psrlq
and
dec
sub
add
jge
xor
dec
cmp
cwtl
mov
inc
repz
xchg
and
xchg
mov
jns
cmp
inc
sti
in
scas
int
jecxz
mov
jle
outsb
push
pop
ftst
xchg
xchg
cmp
fucomi
adc
sub
mov
loopne
jmp
push
in
fdivl
ds
mov
ljmp
push
lahf
mov
and
mov
xchg
xchg
dec
aam
adc
cmp
movl
idivl
xchg
iret
lahf
jg
add
aad
fwait
mov
out
or
and
jae
mov
shll
in
insb
idivl
clc
repnz
inc
stos
or
cmp
inc
mov
lcall
jmp
jns
shrl
mov
mov
aam
inc
xor
ret
stc
xchg
mov
sbb
mov
rcrl
push
test
sub
add
sub
ds
lahf
cmc
sti
dec
mov
rorl
sbb
sbb
mov
jb
xlat
mov
add
ret
adc
arpl
fistpl
sub
cmp
cmp
pop
std
xorl
pop
mov
pusha
stos
mov
push
movsb
pop
mov
pusha
fcmovnbe
dec
nop
iret
out
outsb
out
jp
fs
daa
fsubs
mov
adc
divb
or
lock
adc
pop
jle
cli
cli
adc
rclb
mov
sub
xchg
gs
sub
sbb
mov
sti
cli
sbb
pop
call
test
stc
adc
rcrb
out
jne
mov
push
loopne
and
mov
ja
inc
xchg
cmp
pushf
and
es
test
cld
mov
loop
iret
in
ret
or
or
ja
dec
mov
mov
jge
cmp
xor
push
leave
xor
push
xchg
outsb
test
jl
cld
gs
mov
out
mov
pushf
lea
jle
inc
imull
mov
outsl
mov
and
mov
lock
ficoml
scas
ret
sub
sub
arpl
jge
je
pop
std
cmc
nop
mov
lods
fstp
inc
mov
pusha
ja
xor
mov
repnz
mov
fisubs
pop
cmp
sti
mov
cltd
in
mov
sbb
or
iret
stc
dec
jmp
out
cwtl
dec
loope
pop
jno
push
inc
pop
mov
or
sub
xchg
fcmove
xchg
adc
movsl
imul
ret
div
ja
mov
ss
out
sti
movaps
repz
xlat
dec
inc
sub
std
movsl
pusha
mov
stos
sub
dec
cmpsb
bound
adc
xorl
fists
std
pop
ss
inc
push
in
pop
fdivrp
sahf
pop
adc
push
movsb
mov
pop
lcall
das
js
mov
int
or
adc
xor
div
out
into
pushf
xlat
mov
jmp
cmp
rolb
rolb
push
xor
sub
rol
pop
repz
cli
cmc
xlat
fsubrs
push
ljmp
dec
std
xor
jo
pop
cwtl
adc
std
push
xchg
outsl
test
stos
pushf
cmp
fwait
out
jb
std
xor
test
fdiv
out
dec
inc
ds
in
push
cmc
mov
and
pop
fwait
push
pop
mov
bound
out
and
sahf
in
cmpsl
mov
mov
jg
inc
jns
cwtl
jnp
dec
iret
int
xor
xor
and
and
xchg
les
aad
add
cmp
jge
mov
inc
cmp
ja
mov
icebp
ja
cmp
repnz
insl
fsts
test
pop
xchg
mov
popa
std
hlt
cltd
push
mov
sub
inc
mov
mov
call
sub
fisttpl
pop
call
mov
popf
inc
roll
mov
testl
scas
sub
out
push
cmp
mov
cmp
out
xchg
aad
add
sarl
enter
ss
mov
mov
add
in
mov
sub
inc
in
adcb
jno
aaa
stos
dec
xchg
div
pop
loop
push
add
in
sub
sub
bnd
or
mov
fstps
mov
cmp
dec
std
stos
add
jge
jp
push
shlb
ljmp
xor
inc
icebp
ja
mov
or
adc
dec
add
loop
and
sub
stos
sbb
mov
sbb
mov
add
lahf
xchg
dec
pop
ror
sbb
jmp
dec
push
push
mov
dec
pop
gs
inc
xlat
mull
loopne
bound
sub
lock
outsl
iret
aaa
lods
test
adcb
add
sbb
pop
pop
fcoms
pop
stc
cmc
decb
dec
inc
lods
xchg
inc
pop
insl
add
push
push
cmp
xchg
mov
pop
jmp
and
mov
dec
shrl
rolb
pop
jns
mov
es
push
data16
enter
repz
cmp
ficoms
push
mov
push
pop
dec
mov
imul
jle
inc
fsubs
sbb
gs
or
pop
dec
cmp
in
pop
mov
dec
or
out
daa
roll
or
adc
inc
movsb
lahf
pop
inc
mov
and
mov
call
repnz
mov
repz
into
rcrb
push
mov
mov
jbe
sub
cwtl
xor
shl
mov
mov
aam
mov
test
stos
mov
xchg
out
pushf
xor
nop
push
jno
or
jmp
jle
ljmp
mov
jmp
jmp
insl
es
ret
leave
aad
xchg
cmp
fidivrl
mov
cmp
jnp
loope
lcall
jbe
mov
jmp
mov
in
insl
lcall
push
fdivrs
fisttpl
push
cs
sbb
xchg
lea
pusha
jge
sbbb
out
enter
fwait
sub
insb
inc
int3
stos
test
enter
inc
mov
mov
ja
aam
or
fstpt
add
mov
test
jae
mov
pop
sub
loop
arpl
outsb
ds
ret
push
cwtl
imul
lret
fs
mov
mov
push
adc
shrl
mov
fbld
inc
cmpsb
inc
lods
pushf
xchg
loope
fldcw
div
fistps
mov
mov
stos
adc
mov
xchg
das
lret
insl
mov
lds
xchg
or
negb
inc
and
data16
pop
lods
and
outsl
dec
arpl
int
cli
mov
lds
outsb
pop
loop
dec
mov
loop
loope
pop
push
sub
orl
jns
mov
shrb
aas
pushf
loope
movsl
loopne
push
jne
or
imull
xchg
jl
sbb
add
lods
loop
rol
mov
fs
lahf
sti
stos
out
jo
inc
ds
jl
push
pop
add
xor
stos
sti
pop
add
sub
adc
cli
sahf
sbb
push
inc
lods
mov
mov
or
add
jbe
cmc
push
movsb
mov
inc
cli
outsb
mov
movsb
das
in
out
and
int
pop
call
mov
pushf
lods
jmp
push
lods
scas
lods
aaa
lds
cmc
lcall
popf
mov
cmpsb
jecxz
mov
pop
push
jb
dec
stos
cmc
in
dec
jp
icebp
arpl
lds
dec
aaa
or
sbb
pop
pop
or
out
push
mov
xchg
fldcw
sbb
pushf
xchg
cltd
xlat
mov
hlt
stos
inc
test
mov
jo
dec
rclb
movsl
adc
dec
sbb
clc
adc
arpl
mov
shl
outsb
cli
ficomps
nop
sbb
jg
andb
fnsave
cmp
movsl
fcomps
iret
cmp
int3
xlat
sbbl
sbb
pushf
out
ljmp
aaa
push
adc
lods
add
popf
jge
pop
inc
sub
popf
add
sub
mov
lock
in
sbb
outsb
jge
int
imul
arpl
mov
pop
aam
inc
mov
loopne
jge
movb
inc
xchg
aad
lods
in
fsubrl
cmp
inc
inc
inc
pop
jae
mov
adc
call
pop
push
sbb
incl
inc
in
arpl
ret
inc
cli
jno
cmp
add
xor
jecxz
lds
into
xchg
push
lahf
mov
test
push
les
lods
jle
add
jnp
cmp
daa
daa
lods
xchg
add
imul
int3
pushl
scas
out
xchg
aaa
jns
cmp
mov
xor
mov
and
das
inc
pop
out
pop
sbb
and
out
adc
cmp
mov
daa
int
jae
daa
int
push
daa
mov
pop
jns
stos
sti
cmp
fcmovnu
mov
sbb
mov
scas
movsl
add
test
cmp
das
pop
sub
lods
out
fptan
xchg
mov
pop
ss
mov
aad
lret
sarb
test
pop
out
jecxz
add
pop
test
jg
fmulp
sbb
insb
loope
or
cmp
mov
gs
rcrb
je
mov
lahf
xor
test
test
mov
fisubs
pop
xor
push
std
enter
xor
adc
mov
mov
fs
sub
rol
repnz
dec
fisttpll
jge
inc
sbb
inc
cmpsb
leave
sbb
shll
mov
test
add
adcl
sti
pop
lcall
jo
sbb
bound
mov
cmp
imul
cmp
cmp
mov
shrb
scas
and
cmp
add
push
mov
adc
imul
mov
lods
push
cmpsb
mov
sbb
mov
fwait
and
mov
pop
mov
popl
std
sbb
pop
adc
mov
inc
es
pop
roll
das
dec
jae
jno
dec
pop
cwtl
loop
test
push
push
xchg
shrl
push
sbb
jg
mov
sbb
arpl
push
fildll
arpl
popa
adc
clc
pop
mov
or
mov
icebp
cmp
sbb
es
stos
ljmp
jecxz
popf
jp
sahf
out
sub
popf
pop
adc
cmp
roll
incb
cmp
push
stc
lock
dec
cli
and
stos
push
fimuls
fnsave
mov
dec
sub
adc
sub
frndint
pop
inc
incb
inc
dec
loope
mov
shrb
dec
mov
cmp
jecxz
sbb
inc
jbe
jbe
cmp
fsubrl
sub
mov
xchg
stos
sub
icebp
mov
icebp
push
mov
push
je
sysenter
xchg
std
mov
gs
xor
mov
lock
popf
ds
pop
inc
ficompl
dec
or
out
sub
pop
xchg
fstps
xor
shrl
sub
cmp
xor
jne
int
in
sub
cmc
mov
pop
test
cmp
lock
adc
xchg
fidivl
mov
push
mov
pop
xor
shll
dec
add
fs
incb
ds
mov
xchg
xlat
out
inc
add
lds
sub
mov
mov
cmpl
add
sub
movb
into
cmp
mov
outsb
adc
add
adc
sub
mov
gs
sub
in
dec
and
bound
xor
dec
push
add
decb
xorl
mov
lfs
adc
pop
insl
cmp
loopne
pop
mov
xchg
inc
inc
and
aaa
shll
fwait
cmp
cwtl
and
dec
aad
lds
and
in
inc
fsub
stc
jle
mov
stc
data16
and
repnz
mov
test
push
push
and
nop
mov
and
pop
ljmp
xchg
loope
imul
pop
fadds
mov
cmc
ret
sbbb
popf
inc
add
sub
inc
outsb
adc
mov
xor
pusha
dec
mov
ret
jne
nop
mov
sahf
insb
ficomps
daa
xchg
push
mov
dec
push
aas
xchg
push
loopne
jmp
iret
das
rcr
mov
and
inc
or
inc
adc
cltd
inc
in
jbe
ds
pop
pusha
mov
repnz
sarb
adc
sahf
gs
ret
cltd
je
push
cs
pop
push
xlat
mov
rcl
push
dec
or
stc
jo
or
mov
stos
add
fsts
push
or
jmp
jno
ljmp
aam
mov
cmpsb
and
stos
mov
jp
rorl
incl
pop
lahf
jmp
jp
sub
pop
fistps
sbb
clc
je
cltd
cmc
test
out
xchg
or
add
dec
add
gs
inc
jp
out
ja
fisubrs
cmc
jae
aam
xchg
inc
or
fmull
mov
dec
xor
lock
outsl
dec
test
push
sahf
jae
pop
xchg
push
gs
sar
push
sti
sarl
sub
sbb
int3
mov
clc
mov
jns
repnz
sbb
inc
cmc
shlb
push
cmp
mov
xchg
addr16
add
jne
xchg
adc
xor
or
inc
js
frndint
jle
lret
cmpsb
mov
jmp
cmp
movsl
add
aam
mov
or
adc
in
fwait
cmp
jl
xchg
je
in
insb
pop
mov
repz
ds
cmp
in
packssdw
pop
fsubrl
cli
and
mov
xor
mov
ja
fidivrl
aaa
mov
sub
push
stos
xchg
cmp
and
mov
hlt
lds
fsubs
bound
aaa
xor
dec
fndisi(8087
aam
test
inc
push
mov
mov
sub
ja
das
jnp
incl
add
icebp
cs
repz
mov
test
iret
lods
push
pop
mov
add
pop
js
xchg
pop
or
mov
mov
lcall
in
xor
je
int3
mulb
sbbl
push
ljmp
sbb
mov
dec
jge
and
sahf
jmp
stos
xchg
mov
inc
loope
inc
push
jecxz
in
aad
mov
inc
dec
icebp
inc
test
cmp
add
loope,pn
cmc
xor
xchg
stos
sbb
jae
sub
movzbl
aas
or
pushf
fwait
das
aas
add
aaa
push
pop
xor
movb
sbb
outsb
data16
outsb
sub
cmpsl
mov
lods
dec
test
and
dec
pop
mov
xor
push
jg
rcr
sub
xor
dec
mov
jb
loopne
inc
js
add
ret
and
sub
push
jmp
push
xchg
xor
in
xchg
push
jecxz
sbb
fwait
mov
mov
sahf
aaa
xor
ja
cmp
int3
mov
lea
lcall
mov
dec
loopne
lds
repz
xorl
test
push
je
pop
cmpsb
mov
fdivr
stc
pop
test
bound
lds
inc
pop
inc
shl
or
lcall
and
dec
and
jo
out
or
icebp
pop
pusha
xchg
cmc
jecxz
xchg
add
mov
pop
sbb
sbb
push
sub
inc
and
leave
cmp
adc
icebp
lea
out
xorl
add
add
push
data16
inc
cmp
xor
sbb
jmp
adc
jmp
mov
stc
adc
aad
xor
js
les
and
push
lahf
incl
out
xor
inc
push
subb
stos
ret
lret
mov
cwtl
mov
rol
push
mov
pusha
push
xor
daa
push
fdivl
cmp
jge
push
test
sub
js
mov
sub
ss
lds
js,pt
or
mov
push
std
pop
dec
xor
and
jg
ds
xor
iret
mov
inc
dec
push
and
loope
call
add
inc
hlt
cltd
pusha
mov
decb
add
addr16
out
dec
push
arpl
aas
lcall
loopne
sbb
add
adc
std
lds
jmp
cltd
sbb
setnp
orb
dec
xchg
mov
pop
lea
pushf
sbb
das
sbb
ja
mov
push
into
and
jns
call
iret
into
je
inc
mov
in
pop
stos
lock
pop
push
cld
and
divl
lods
dec
rolb
in
jge
out
fidivl
gs
dec
sbb
push
sbb
cmp
sub
mov
int
int3
push
outsl
jp
cmp
jno
sub
popf
les
incb
pop
fsts
mov
sbb
loope
xor
push
xor
addr16
in
dec
mov
dec
and
popf
movsb
std
or
pop
iret
lcall
dec
stos
inc
lcall
fldl
xchg
lods
inc
add
rol
addr16
addr16
fidivrl
icebp
xor
rcrl
fdivs
xchg
rolb
push
cmpl
mov
xchg
push
push
les
xchg
or
xchg
sbb
jb
cmp
xor
inc
out
mov
shrl
out
arpl
hlt
outsb
loopne
call
jmp
mov
lea
push
dec
mov
leave
sti
movsb
cltd
add
loop
lds
jae
push
test
fbstp
pop
lret
mov
push
movsl
xchg
inc
sub
mov
rorl
aaa
aas
lret
cli
inc
lods
test
es
in
out
add
rcll
cmpsb
jle
inc
int
inc
push
xor
outsb
push
pop
stos
mov
inc
pushf
fnstsw
sbb
out
mov
inc
adc
dec
push
sub
mov
cmp
add
lret
sbb
lcall
mov
icebp
pop
test
sbbl
scas
sub
idivl
mov
mov
dec
push
fs
or
push
repnz
add
dec
pusha
and
fstps
outsb
ds
xlat
push
imul
outsb
dec
xchg
mov
fs
push
inc
mov
cmpsb
jle
aaa
mov
addl
jp
nop
xchg
clc
pusha
leave
jl
arpl
inc
jge
sbb
hlt
or
xor
lock
dec
push
xcrypt-ofb
cmpsl
out
pusha
shl
jmp
test
loope
out
jl
call
adc
mov
xor
mov
jo
lcall
inc
mov
adc
pop
call
clc
jo
popa
stos
es
aam
stos
sbb
lret
int
sub
cmpsb
stos
mov
or
cmpb
or
popf
cmpsl
sub
std
jo
inc
pop
outsb
arpl
popa
hlt
test
sub
mov
xor
inc
shll
les
sbb
and
loope
cli
fdivl
insb
test
or
pop
movsb
mov
xor
sub
pop
mov
popa
jp
cwtl
xor
xor
insb
daa
dec
mov
loope
lret
lds
cmp
lret
sti
je
dec
pop
and
orb
cmp
in
aad
das
mov
inc
es
lahf
pushl
cmp
cld
bnd
xor
rcl
out
xchg
jecxz
icebp
lret
lret
aaa
jns
jb
int
outsb
or
mov
adcl
sbb
andl
pop
popa
push
pop
sarl
jno
pop
xchg
mov
lret
cwtl
dec
mov
mov
dec
add
xor
sub
cmp
mov
jle
jne
out
pop
cmpsb
mov
clc
shl
add
lret
pop
jne
or
mov
dec
mov
imul
jne
xchg
leave
ret
push
pop
leave
or
scas
jl
popa
sbb
int3
fdivs
jge
push
and
mov
inc
lahf
rcl
add
lea
mov
leave
fnstcw
iret
jb
out
cmp
rcll
xor
lods
hlt
out
sub
and
adc
sbb
and
cltd
pop
inc
inc
jge
cmpsl
out
mov
mov
inc
mov
push
loope
into
mov
mov
int3
pop
hlt
fcoms
add
jns
sbbl
les
and
jbe
sti
lret
adc
sub
int3
stc
aam
cmp
xchg
fnsave
dec
bound
in
fdivs
pop
std
push
fdivrs
cmc
xchg
fstl
and
xchg
mov
in
insb
cwtl
mov
pop
cwtl
push
sub
out
mov
or
sbb
mov
jae
out
lods
mov
fisttpll
or
mov
pop
adc
test
stos
and
adc
adc
xor
xor
arpl
ja
lds
cmpl
call
pop
into
sbb
xchg
fnstcw
mov
sub
push
test
insl
cltd
mov
xchg
in
xor
loope
add
leave
repnz
jne
ljmp
and
mov
test
popa
leave
push
cwtl
jge
dec
rcll
scas
sub
dec
and
pushf
call
jo
jne
cmp
pop
push
push
add
fnstcw
lods
mov
jge
push
sbb
xchg
push
mov
cmc
imul
shrb
pop
jo
lret
inc
cmp
mov
ja
lahf
push
js
lea
outsl
add
outsl
ret
leave
ss
movsl
jg
aam
jg
add
or
movsl
data16
jecxz
mov
adc
cmpxchg
mov
adc
mov
daa
frstor
int
adc
cmc
rcll
mov
sbb
icebp
add
sub
push
pop
cmp
pop
bound
in
subb
cltd
sbb
adc
fisttpll
fisubrl
and
fdivr
testl
inc
fs
jae
cmc
xchg
inc
xor
iret
aad
jno
fwait
mov
pop
inc
test
dec
imul
iret
sbb
mov
inc
imul
outsb
test
int
ret
add
pushf
aam
and
ret
stos
xchg
mov
rorl
hlt
xchg
adc
xlat
arpl
jb
xor
scas
push
or
aas
xor
or
ds
dec
mov
cmp
clts
inc
lods
push
loope
jns
popa
in
mov
jle
jge
dec
aaa
jbe
cwtl
mov
cwtl
push
adc
xchg
add
cmp
pop
mov
sbb
inc
dec
jecxz
movsb
mov
add
mov
insl
push
scas
push
adc
pop
clc
mov
adc
inc
mov
inc
cs
lods
sahf
sub
lds
and
fnsave
jmp
xchg
das
push
add
jbe
mov
cmp
sbb
dec
in
jns,pn
test
mov
adcl
xor
mov
mov
outsb
inc
test
fs
dec
push
sahf
dec
adc
cli
xchg
mov
dec
xlat
sub
mov
xchg
imul
add
jne
mov
dec
mov
fs
addl
cmp
imul
jmp
xor
stos
adc
rclb
rcl
push
adc
jmp
addl
call
xchg
inc
rcll
mov
sbb
inc
daa
js
mov
jmp
fildl
xchg
ss
push
adc
leave
es
outsl
ret
scas
push
mov
xlat
fdivl
daa
sub
sbb
lret
icebp
ss
add
pop
add
inc
ret
imul
jecxz
imul
ljmp
adc
dec
adc
pop
popa
sbb
push
imul
mov
push
stos
add
adc
mov
push
and
cmp
or
mov
or
insb
fsts
adc
push
mov
js
push
scas
incl
loope
ja
adc
cli
xlat
sbbb
cmp
dec
std
mov
jmp
xchg
daa
dec
xor
inc
pop
fsubrs
sahf
jl
lret
and
mov
inc
out
lcall
mull
mov
or
dec
mov
lock
sbb
mov
in
stos
aaa
sub
aaa
sbbb
push
out
jnp
mov
sbb
bound
insl
ret
push
mov
jo
aaa
adc
fscale
jg
pop
not
sbb
dec
add
cmp
test
lea
sbb
jbe
jmp
dec
les
incl
sbb
sub
dec
fisubl
insb
and
cld
sbb
pushf
add
fwait
push
jne
loop
pop
sub
in
xchg
fsts
ret
or
mov
mov
cld
test
icebp
sub
jg
in
push
pop
dec
or
pop
divl
int3
xchg
lea
dec
mov
xchg
fisttpl
mov
bound
test
sub
xor
pop
mov
inc
imul
mov
push
stc
dec
mov
jb
dec
or
inc
out
ja
jmp
pop
scas
mov
ss
aaa
stos
repnz
fucomi
les
pop
mov
and
cmp
and
sbb
cmp
mov
ljmp
cmpsb
xchg
popa
fst
inc
fwait
jno
dec
repnz
hlt
cs
inc
lea
js
jno
daa
mov
dec
mov
sti
adc
sub
mov
clc
jae
insl
in
inc
pop
or
ja
mov
scas
jne
add
inc
or
scas
fidivrl
mov
cld
les
mov
cltd
push
lret
and
paddw
jo
sbb
iret
pop
jae
sbb
mov
jns
mov
mov
outsb
test
js
sarb
sahf
or
mov
push
icebp
roll
mov
pop
jne
out
mov
arpl
sub
sahf
mov
mov
int3
sarb
push
jns
xchg
loopne
cltd
and
dec
adc
das
add
sahf
mov
xor
lock
in
stos
cmp
dec
sahf
cli
icebp
ret
and
lret
dec
xchg
adc
jns
loope
jp
sub
push
jb
xchg
sub
push
pop
into
std
loop
inc
inc
int
sbb
jmp
jo
jbe
fldl2t
call
les
pushf
or
mov
and
mov
pop
out
loopne
out
and
jno
pop
loop
pop
lcall
scas
je
out
xchg
or
orl
outsb
xor
movb
stos
das
imul
mov
pusha
test
add
mov
mov
jne
lock
loop
xchg
mov
mov
jb
adc
cs
sub
mov
add
leave
inc
push
aad
imul
add
jecxz
inc
shrl
jno
sub
imul
sub
loope
lcall
jg
sub
jmp
lea
mov
sub
pop
int
jns
xchg
cmpsl
mov
jnp
jnp
mov
jecxz
cmc
gs
push
push
sub
or
mov
movsl
les
stc
pusha
ret
adc
icebp
outsl
test
push
jns
adc
ret
adcb
pop
mov
imul
cmp
dec
push
pop
cmp
popa
xchg
dec
jbe
xchg
scas
ret
loopne
push
aam
sahf
loop
mov
fs
imull
dec
sbb
out
or
cmp
into
fisubl
ret
inc
jp
out
roll
mov
xchg
mov
or
pop
sub
fs
movntps
add
das
lods
xchg
and
mov
cmc
cwtl
in
pop
xor
popa
outsb
arpl
in
shll
imul
push
inc
out
mov
inc
sbb
fmuls
add
xchg
add
xchg
cli
sub
cmpsb
mov
push
lods
and
inc
notb
sub
in
aaa
shl
mov
sub
cmpsb
cmc
lcall
aaa
insb
pop
sar
pop
orl
adc
xor
mov
inc
rorl
mov
std
bound
nop
xlat
dec
sbb
and
xor
cmp
mov
fcomps
inc
addr16
aaa
fcmovu
scas
add
jns
fs
fistps
cmc
imul
mov
inc
ret
dec
inc
in
out
or
add
add
sbb
lods
arpl
data16
jbe
jmp
lods
push
scas
xchg
push
pop
xorl
insl
push
out
mov
test
test
dec
lods
scas
push
dec
mov
test
roll
popa
inc
aas
lods
push
inc
lar
cltd
cmp
inc
test
jae
jns
pop
int3
test
insl
mov
mov
inc
push
test
dec
cmp
out
jl
inc
sahf
test
es
testb
xchg
sarb
mov
faddl
shl
in
jns
mov
sbb
or
daa
out
nop
sbb
xchg
push
jmp
cmp
gs
dec
adc
out
mov
fdivrs
loope
sub
sub
inc
ljmp
jmp
sarl
mov
aas
fisubrs
cmc
pop
and
dec
push
pop
aam
sub
xor
dec
jle
mov
xor
fwait
or
sarl
mov
mov
jns
xor
sbb
push
mov
push
decb
mov
fwait
rorl
push
fwait
cs
mov
dec
hlt
add
int
jl
lcall
jno
dec
loop
push
jle
xor
enter
sbb
mov
jb
inc
popa
jg
leave
sub
jnp
push
std
add
in
std
imul
popa
std
mov
push
and
and
sahf
aam
add
jmp
push
dec
imul
mov
or
pushf
jno
mov
std
outsl
mov
mov
mov
mov
sti
in
ds
lahf
test
movsl
aas
scas
lock
leave
xlat
in
ficoms
test
sbb
xor
stc
jge
call
dec
stos
out
push
cmp
push
cltd
outsb
mov
jae
loop
jno
dec
mov
sbb
jge
sarl
and
xchg
jb
inc
add
add
jl
out
rcr
xchg
mov
or
mov
in
sub
in
inc
shlb
idivb
push
in
mov
adc
pop
jno
mov
adc
clc
test
jmp
ja
cmc
int
pop
jle
enter
mov
jmp
fisubrl
cmpsl
mov
add
sbb
mov
movsb
inc
xchg
sub
or
cmp
and
scas
jp
adc
xor
loopne
mov
jb
mov
jnp
and
or
push
ja
pop
int3
ror
jbe
sub
adc
sti
in
aad
mov
movsb
lahf
sbb
and
notb
sti
in
jae
es
mov
add
shll
sahf
pop
aaa
xor
rcr
xchg
jnp
roll
sbb
dec
fbld
push
jecxz
ret
mov
jbe
jbe
addr16
adc
adc
fst
push
movsl
pop
cmp
std
and
and
popf
cmpsl
push
lock
aad
popa
addl
cltd
test
inc
hlt
and
push
and
roll
sub
or
xchg
sbb
add
mov
cmc
mov
stc
shlb
lret
or
sub
bound
jl
divl
filds
outsb
stc
and
das
mov
fildll
cvtpi2ps
repnz
inc
pop
aaa
mov
loopne
fs
test
push
negl
out
xchg
fisubrs
xor
arpl
inc
lds
pop
dec
mov
and
imul
jg
jp
inc
psadbw
add
inc
mov
out
mov
cmp
fiaddl
xchg
sub
je
add
leave
pop
es
getsec
push
xchg
shll
or
and
cli
jge
lea
lea
inc
ljmp
stos
xchg
stos
cmp
scas
sti
movsb
jmp
cld
aad
mov
or
fidivrs
jbe
or
movsb
sub
shll
lcall
mov
cwtl
xor
outsb
cli
pop
std
aad
xor
in
fcoml
cld
xor
into
mov
cwtl
push
pop
gs
sub
add
push
cmp
lods
lret
or
cmp
jmp
sub
vmwrite
and
jl
xchg
insb
mov
or
in
push
sub
dec
push
in
out
cmp
test
jb
fmuls
fldt
lret
xchg
dec
xchg
pusha
mov
sub
scas
cld
dec
icebp
incl
push
aaa
pop
lahf
fstpl
xchg
or
icebp
gs
mov
fistps
enter
mov
fcompl
or
xchg
push
or
bound
pop
cmp
icebp
rcr
fwait
jns
test
pop
pushf
stos
inc
or
add
add
ret
add
pop
in
inc
lahf
and
sahf
add
shlb
je
cs
xchg
lret
rorl
mov
cmp
add
mov
rol
xchg
mov
sub
mov
mov
rcr
outsl
mov
jg
and
test
out
into
inc
sub
js
pop
add
pop
icebp
into
sti
lock
loopne
dec
imul
mov
or
xchg
arpl
mov
das
mov
leave
pop
lret
or
int
mov
ja
lcall
jnp
cmp
jmp
ss
pop
cmc
cmp
xor
add
fnstsw
in
pop
mov
jl
ror
loopne
mov
jnp
fsub
andl
jbe
lea
sbb
clc
push
mov
or
pop
das
mov
lods
xchg
mov
out
test
pop
in
sub
xchg
rol
ret
in
pop
and
popa
mov
cmp
jmp
idivb
mov
enter
jb
stos
repz
inc
hlt
inc
xchg
icebp
mov
sbb
insl
insl
popl
out
out
lret
andl
dec
insl
mov
push
out
es
std
fistps
push
inc
mov
mov
jge
ret
xor
pop
push
adc
addb
push
sbb
shl
fwait
enter
fisttpll
jecxz
mov
sbb
fs
xlat
sbb
sbb
add
xor
or
ret
lods
add
scas
cmc
or
test
jne
mov
mov
sbb
adc
rcl
sbb
mov
inc
fchs
fs
addr16
test
je
adc
sti
xlat
rolb
arpl
ret
sbb
mov
xor
roll
xor
aaa
fwait
jne
popf
into
xor
mov
mov
cmpsl
out
clc
fcmovbe
out
push
mov
jle
xlat
pop
mov
std
lcall
jo
in
idivl
add
jg
or
mov
call
sub
popf
loop
xlat
inc
xor
test
bound
and
pusha
repnz
pop
dec
add
test
cmc
pop
lods
xchg
push
test
xchg
xor
push
incl
popf
push
xor
push
stos
stc
jo
push
and
dec
lcall
into
stos
lcall
cmp
push
lock
daa
jbe
fidivl
iret
jbe
mov
test
xchg
mov
jl
in
aad
push
fs
dec
cmp
pop
mov
push
push
sbb
in
loope
dec
aad
cmp
push
adc
jp
popf
cmp
xchg
sbb
out
mov
cmp
xchg
push
jns
test
lahf
ja
mov
cs
sub
in
mov
nop
out
pop
testb
pushf
sub
repz
lea
mov
jle
pop
xchg
insb
test
mov
sti
xchg
dec
in
cltd
sbb
push
mov
lock
in
loopne
mov
call
add
and
in
inc
sbb
cwtl
into
movsb
leave
mov
push
lahf
cltd
fmull
cmp
jns
outsl
mov
adc
sbbl
pop
xchg
mov
pushf
cmp
shrl
cltd
jae
push
mov
and
sub
mov
push
sbbl
shlb
iret
outsl
mov
jp
call
test
imul
xchg
aaa
mov
push
sahf
jns
xor
out
movsb
xorl
in
fdivs
addr16
and
sbb
jns
arpl
mov
jns
out
dec
imul
fnsave
mov
out
push
jb
fidivrl
sahf
sbb
mov
xor
stc
outsl
pop
pop
adc
cld
arpl
xchg
mov
jae
and
sub
fdiv
test
insl
and
pop
jl
add
sub
push
push
mov
push
mov
xchg
aaa
imul
pop
inc
int3
jnp
inc
pop
incl
aam
rol
push
jbe
inc
jbe
jae
or
outsl
fcoml
adc
out
loop
push
rorb
jmp
or
bound
subl
loopne
fwait
add
adc
fisubrl
out
lea
pop
nop
adc
xor
cld
shl
push
testb
aad
sub
fistpl
push
sbb
jp
enter
dec
lock
jle
mov
pusha
inc
hlt
xchg
test
push
ljmp
pop
les
sub
push
xchg
fcomip
mov
jbe
loope
sbb
xchg
cmpsl
pop
dec
jmp
ja
fsubs
fsubs
sub
ret
fiaddl
sub
inc
cli
mov
idiv
jns
mov
push
sub
sahf
jb
jmp
out
and
xor
lock
pop
cld
lds
add
dec
out
fdivrs
xchg
sub
mov
hlt
testl
bnd
push
cltd
shlb
xor
add
enter
adc
push
imul
add
rolb
xchg
sub
out
iret
push
addb
in
popa
dec
or
ja
fldenv
mov
pop
mov
bound
xor
add
out
mov
lods
push
jnp
lcall
pop
or
sub
dec
sbb
xchg
xchg
jbe
mov
ds
mov
fabs
popa
bnd
pop
mov
xor
push
mov
sbb
jl
jns
roll
cwtl
jbe
ud2
xchg
xchg
stc
cmp
bound
aaa
adc
jle
xchg
lods
pop
lock
jae
push
lahf
sar
lcall
jb
insb
loope
cwtl
dec
mov
loope
je
xor
enter
inc
and
push
in
fadds
in
cld
mov
add
movsl
test
lds
jl
data16
mov
mov
dec
out
jecxz
shrl
icebp
pop
push
aas
mov
lea
push
inc
test
stc
pop
sahf
outsl
adc
cld
push
add
insb
or
lods
adc
cmp
mov
std
mov
adc
arpl
out
rcrb
pop
push
or
arpl
stos
mov
add
loope
xchg
jge
jl
push
or
mov
sbb
or
adc
adc
movsl
gs
fwait
dec
inc
dec
inc
push
popf
jne
aas
arpl
or
lods
adc
add
shll
stos
test
inc
pop
push
lock
xrelease
shlb
mov
and
sahf
cmp
add
add
mov
jo
dec
mov
jp
or
adc
inc
rcpps
test
lods
fldcw
add
push
push
dec
ss
in
add
push
mov
aad
mov
or
mov
push
outsb
outsb
fnstcw
cmpsl
xor
sub
lods
sub
adc
fistl
mov
adc
fwait
pop
enter
test
cmp
push
incl
or
adc
xor
pusha
fdivl
scas
int3
int
xor
mov
adc
imul
mov
aaa
dec
xchg
daa
push
test
push
mov
sbb
popf
shll
ljmp
jecxz
sub
sbb
fildll
xchg
sbb
andl
fsubrl
negb
sbb
ret
leave
cwtl
pop
ret
lea
cli
xor
push
push
or
fnstcw
jne
shl
cmc
jne
sar
sbb
pop
loop
lea
out
xor
and
mov
arpl
xor
pop
scas
jns
add
push
data16
cli
scas
in
jns
and
icebp
lea
push
fs
popf
hlt
aam
addr16
jnp
dec
inc
hlt
enter
mov
popa
mov
shrl
test
in
xlat
bound
push
dec
sbb
or
xor
in
stos
pop
mov
fs
sbb
mov
test
add
std
sbb
jnp
mov
popa
mov
loop
ds
lock
xchg
arpl
inc
jne
sub
sbb
in
lock
jns
cmpsl
out
cld
jmp
mov
sbbl
pop
mov
xchg
ds
mov
jo
adc
push
cmp
ret
dec
dec
imul
iret
add
outsb
and
sar
lds
repnz
stc
dec
add
aad
dec
xor
add
xchg
cwtl
test
movsb
scas
ljmp
nop
mov
outsl
cwtl
test
xchg
push
ds
jnp
mov
and
cmp
xlat
xchg
xchg
mov
mov
mov
xchg
ljmp
outsb
mov
shl
dec
xchg
out
mov
push
out
mov
mov
sub
jp
out
mov
into
je
repnz
inc
mov
movsb
dec
xchg
dec
dec
or
leave
pop
dec
and
rclb
push
rcrl
mov
testl
xchg
sub
add
and
pop
imulb
test
shl
leave
clc
xchg
pop
xchg
xchg
fstpl
dec
gs
sub
hlt
dec
out
cwtl
pusha
mov
add
sbb
daa
and
add
and
mov
sub
mov
xlat
cmpsb
mov
pushf
addr16
push
lret
ret
jo
je
rorl
test
ljmp
fdivs
pushf
popf
ds
loop
sub
or
inc
pushf
mov
out
xorl
pop
sub
pop
mov
inc
xchg
push
xor
sbb
sub
test
jo
adc
lret
leave
mov
mov
jmp
add
jno
cmpsb
out
nop
les
and
andps
or
bound
add
mov
mov
sub
jb
sub
mov
stos
ret
jecxz
xor
in
ja
sub
fwait
arpl
popf
jns
fwait
or
ret
mov
xchg
pop
inc
pushf
pop
or
add
leave
les
push
js
push
mov
fdivrs
ja
sub
fs
inc
mov
adc
inc
test
scas
lahf
xchg
nop
mov
cmp
sbb
pop
int3
outsb
shrb
arpl
or
adc
jecxz
or
ret
cld
cmc
mov
sub
into
fstl
lods
and
cmp
push
pop
sub
push
dec
mov
push
mov
mov
les
or
push
js
jne
mov
mov
lock
outsb
test
inc
scas
jnp
lcall
jp
adc
sbb
cltd
cmc
mov
mov
mov
ret
nop
add
negb
out
xchg
push
fdivr
ss
sbb
lds
dec
push
loop
stos
daa
gs
test
jmp
xor
push
das
fcomps
lods
push
xchg
xor
mov
fldenv
sub
jb
mov
lods
mov
sub
movd
leave
push
int
and
icebp
jmp
push
es
push
mov
mov
or
int
fisubs
and
mov
popf
pusha
and
xchg
xor
xchg
sbb
add
pusha
lds
sti
les
outsb
or
dec
mov
jg
ljmp
push
and
sub
jbe
or
in
popf
bound
pushf
sbb
mov
inc
mov
jnp
lret
lcall
in
push
jl
pop
mov
or
sub
jae
rcrb
mov
dec
repz
push
pop
push
in
or
pusha
mov
sbb
jecxz
mov
loop
cmp
push
push
jo
ret
ja
jb
pop
cmp
push
mov
cmp
cli
mov
jae
jo
es
jns
repnz
push
imul
lret
cmp
xchg
push
xchg
adcl
adc
xchg
pop
push
retw
fsubl
loop
jmp
subb
mov
in
insb
jmp
push
repz
in
push
pop
je
fistpll
xor
push
or
cmpsl
jne
fcmovnu
add
xchg
adc
insl
aaa
add
rcl
in
push
sbb
adc
push
or
scas
mov
or
sub
adc
test
orl
loop
jle
dec
das
xchg
add
sbb
outsb
add
in
lea
xchg
ljmp
mov
shll
and
push
cmp
xchg
mov
sahf
int3
insl
ret
out
lds
scas
jmp
in
jb
inc
push
scas
ss
movsb
in
ss
hlt
stos
adc
mov
mov
and
es
stos
xor
or
scas
outsl
pop
xor
mov
push
jmp
aas
test
jmp
mov
mov
cmc
pop
pop
leave
push
sbb
mov
mov
cmp
into
and
adc
pop
pop
add
sub
orb
or
add
repz
repnz
add
cwtl
push
or
mov
push
mov
pop
xor
test
add
sbb
add
inc
out
cmc
pop
mov
or
jg
das
shll
mov
jbe
lret
cwtl
mov
decl
loopne
je
sub
mov
fiadds
fists
or
insb
xchg
push
rcll
call
mov
fbld
dec
xchg
mov
mov
cld
test
or
pop
dec
jg
cmp
loopne
ret
aaa
into
pop
xchg
pop
lret
lock
pop
sbb
lock
mov
in
cmpl
jmp
push
incb
shlb
ljmp
xor
sub
dec
testl
mov
mov
and
push
andb
push
mov
adc
sub
push
or
adc
mov
xlat
mov
in
mov
enter
cs
jmp
ja
dec
pop
mov
pushf
inc
xor
cmpsb
mov
jae
insl
push
lea
rolb
mov
das
xchg
out
ja
xchg
adc
dec
andl
frstor
mul
cmpb
inc
and
cmpsb
test
jnp
dec
mov
jo
cmp
rcll
xchg
xchg
icebp
xchg
js
mov
aam
dec
mov
cmc
subl
popf
jmp
pop
mov
sti
cmp
pop
xor
add
in
mov
push
fiaddl
mov
mov
sbb
scas
fidivl
outsb
shr
adcl
jp
xchg
inc
adc
std
and
pusha
xor
ja
mov
or
xor
rcrb
std
cltd
pop
movsl
lock
notb
push
mov
ljmp
push
inc
lods
cmp
sub
add
loope
add
in
adc
les
pop
cmp
roll
dec
pusha
sub
sbb
and
cmpsl
int
movsb
jmp
sbb
jbe
pop
jnp
and
mov
scas
push
jmp
faddl
jp
nop
pop
adc
adc
or
in
test
pop
and
es
iret
xchg
stc
aam
sahf
push
scas
int3
fdivs
inc
push
andl
lock
add
cmp
and
mov
in
out
daa
inc
cld
or
mov
movsb
in
mov
add
mov
imul
or
aas
in
pusha
push
cmp
inc
stos
imul
or
inc
and
xchg
and
loope
loopne
pop
sbb
imul
data16
call
and
mov
jg
mov
xchg
ja,pt
cmpsl
loopne
lods
lret
in
pop
adc
lods
stos
pop
pop
jmp
xchg
adc
pop
jns
ja
push
mov
inc
mov
out
cs
inc
mov
mov
push
push
pop
sub
das
cli
test
pop
fisttps
shr
jb
add
cli
adc
jl
jae
test
and
sub
mov
dec
and
adc
sub
roll
cltd
xchg
cwtl
add
jno
bound
jle
lock
xchg
add
sub
lret
sub
lods
lret
xor
fs
jne
test
sbb
push
lret
pop
or
rcll
das
into
fists
mov
test
sub
or
inc
dec
mov
cmc
mulps
sbb
pop
andl
add
data16
sub
mov
mov
or
aaa
mov
push
mov
adc
push
dec
imulb
sub
jb
mov
cmp
repz
jo
cmpsl
add
jns
dec
pop
mov
push
push
sub
into
jbe
insb
ficomps
jbe
fcoms
mov
mov
pop
mov
lock
jecxz
test
mov
out
sub
mov
jl
or
add
in
addr16
pop
aas
jns
andb
cmpsl
add
lods
test
fucomp
roll
pop
push
in
mov
pop
dec
pslld
pop
pop
adc
fldcw
insl
pop
ljmp
icebp
shrb
movsb
scas
es
sub
loopne
push
je
or
lcall
ljmp
cmpb
nop
stc
sub
test
inc
sbb
mov
sub
ljmp
aaa
ret
das
or
into
push
pop
dec
sub
cltd
loope
into
jo
and
in
pushf
arpl
js
jbe
aam
xor
push
adc
stos
inc
or
adc
inc
pop
cwtl
xor
push
andl
lods
jge
mov
clc
push
cvtps2pi
mov
jl
sbb
adc
stos
imul
adc
inc
hlt
jae
mov
sub
daa
lods
mov
or
xor
cmc
movsl
fs
push
jb
fs
jne
inc
lret
and
lcall
sub
leave
shrb
xor
push
add
loope
jne
or
mov
mov
lret
push
dec
sbb
inc
cwtl
sbb
jl
out
mov
aaa
sahf
insl
jo
adc
dec
jns
cmp
mov
out
adc
pop
shrb
push
mov
addr16
pop
lahf
pop
xchg
out
repnz
and
clc
add
out
push
scas
inc
inc
jg
ja
xchg
xorb
cli
adc
sahf
adc
add
adc
clc
mov
es
cmp
xrelease
cmpsl
subb
xchg
mov
or
into
cld
gs
fcoml
mov
js
pop
mov
pop
pop
sbb
xchg
mov
jne
pop
insb
xchg
sbb
xchg
ret
add
and
xor
cld
sub
jle
mov
movsb
push
xchg
pop
mov
stos
scas
mov
xchg
or
ret
jge
lret
cmp
or
mov
push
lds
stos
aaa
test
or
hlt
inc
jg
sbb
sub
call
xchg
outsb
sarb
fs
add
adc
aad
mov
les
adc
dec
add
sbb
incb
loopne
popa
mov
nop
fs
mov
push
out
mov
out
mov
push
push
mov
dec
stc
sbb
leave
cmp
adc
mov
cwtl
sbb
and
mov
dec
std
push
mov
pop
xor
xchg
or
mov
clc
orb
pusha
and
and
mov
adc
nop
adc
stc
ja
addr16
stc
push
xor
mov
negb
out
outsl
pop
fsubr
sbb
fs
xor
mov
mov
and
es
in
pop
cmpsb
outsl
data16
xor
inc
lods
repnz
or
and
mov
cmp
stos
pop
mov
mov
aam
fidivs
xchg
repnz
pop
loope
sbb
loop
inc
adc
repz
pop
push
ss
jecxz
and
push
push
inc
stc
leave
lret
dec
mulb
shrw
lds
mov
xchg
mov
jbe
inc
add
add
xchg
jno
sbb
cmpsl
push
mov
and
pop
pop
or
mov
push
push
jecxz
roll
fs
xlat
push
xchg
push
movsl
cmp
shlb
pop
mov
pop
sub
pop
test
pop
stc
jnp
push
cwtl
dec
sub
stos
adcb
xor
dec
je
and
in
mov
pop
mov
push
sub
adc
sub
repz
push
jge
add
lret
sbb
mov
pop
int
push
xorl
pop
mov
repnz
iret
mov
test
xor
aam
cmp
jbe
cltd
movsl
fstl
lock
xor
pop
add
ret
xchg
inc
push
mov
inc
inc
in
dec
add
pop
push
test
push
or
dec
lret
mov
std
ja
xchg
dec
inc
ret
xor
test
out
addr16
sbb
imul
nop
aas
adc
xchg
push
dec
arpl
jnp
in
inc
shl
roll
cli
fistl
jmp
mov
ja
xchg
adc
ja
cmp
jmp
int
xchg
inc
in
int3
ljmp
and
dec
push
iret
jmp
jl
jno
popa
and
ja
movsl
shr
ror
in
mov
xchg
sbb
inc
loop
push
imul
cmp
shrl
jmp
stc
pop
das
test
aaa
jecxz
add
xorb
cmpb
xchg
jb
jno
inc
or
pop
and
sbb
into
cmpsl
mov
and
mov
dec
lret
enter
aaa
push
add
push
jbe
movb
insl
hlt
push
and
repz
inc
push
call
pop
jbe
sti
xor
mov
jno
jecxz
in
fisubl
pusha
pushf
insb
daa
sbb
add
or
push
jmp
mov
shr
js
movsl
movsl
push
mov
pop
ljmp
mov
psubw
inc
adc
or
enter
bound
adc
repnz
and
cmc
popa
jmp
cmp
stc
cmp
mov
xor
inc
jge
bndstx
clc
ret
negb
jae
daa
pop
lods
lea
or
stos
scas
jmp
ficoml
mov
lcall
jl
movsb
in
out
insl
test
push
xchg
add
pusha
popa
int
adc
ror
cmpsb
mov
inc
xchg
xchg
mov
movsb
pop
test
and
add
test
std
popa
or
sub
lret
sub
xchg
inc
fnsave
test
dec
mov
scas
push
shll
test
push
lea
cmp
int
mov
and
pusha
pushw
xor
xor
pop
rcll
pushl
dec
mov
xor
add
pop
insb
cmp
cmp
mov
in
sahf
pushf
mov
xchg
cmpsb
xor
inc
out
jmp
mov
cmpsl
cmp
xor
hlt
jo
sub
dec
mov
xchg
xchg
mov
jp
pop
jo
fiaddl
aam
sbbl
cmp
aas
fistps
mov
ss
lcall
jmp
xchg
jbe
mov
dec
mov
xchg
lods
stos
xlat
sbb
fdivrl
data16
mov
in
stos
popf
decl
xchg
cmp
fwait
sub
mov
sahf
stos
sbb
rcrb
imul
xchg
or
inc
sub
mov
xor
xchg
inc
jno
cmpsb
int
lcall
in
inc
mov
xor
mov
les
push
lret
mov
sub
cld
mov
ficomps
cmp
scas
pop
addr16
aaa
push
jle
mov
cs
cmp
cmpsb
repz
dec
sbb
clc
div
loop
test
lret
or
int
rol
push
mov
mov
xor
jecxz
into
jb
js
testb
cli
in
mov
negl
pushf
cli
sbbl
ja
dec
lcall
mov
or
loope
xchg
mov
sbb
cmp
lea
mov
lds
mov
mov
stos
test
aam
imulb
xlat
insl
cmc
stc
loop
mov
outsl
and
mov
out
inc
out
cwtl
stos
xchg
popf
dec
loopne
add
add
mov
push
push
xor
mov
xchg
gs
outsb
xor
jmp
fsubr
movsb
inc
int3
mov
fdivl
filds
repnz
outsb
enter
push
mov
loop
jo
fdivr
call
sbb
inc
std
pop
subl
add
cli
jecxz
sub
nop
js
dec
movsl
xchg
fists
push
sub
push
mov
adc
sbb
add
fisubrs
mov
ss
cmpsb
fdivl
mov
pop
lock
and
pop
inc
leave
and
jl
inc
pop
adc
push
stos
out
jmp
stc
push
sub
cmp
push
rcrl
stc
mov
daa
jecxz
mov
xorl
sub
out
dec
jbe
bound
mov
xchg
in
mov
cmp
leave
pusha
jle
push
div
inc
mov
sbb
adc
dec
sub
divb
fiadds
jp
push
add
hlt
cs
scas
xlat
or
jmp
cld
je
push
hlt
and
pop
xchg
sub
mov
lods
ret
push
xchg
mov
inc
adc
es
ret
push
and
ret
jne
xor
inc
jg
repz
add
clc
dec
adc
or
test
hlt
movsl
icebp
mov
lcall
test
test
je
mov
lcall
xchg
aam
lret
xchg
add
jp
pop
pop
sbb
push
jb
adc
ja
aaa
push
pop
loopne
hlt
dec
fnstenv
lods
sahf
dec
sub
loope
cmc
insl
lock
jg
pop
cmc
mov
mov
jbe
mov
std
outsl
shl
xchg
jmp
das
sub
cmp
jne
and
shrb
sbb
sub
xchg
sub
jmp
movsl
faddl
call
push
mov
fiadds
aas
jmp
out
sub
jno
cltd
sbb
test
pop
clc
push
mov
jns
xor
adc
popf
sbb
pop
jg
pop
dec
pop
dec
in
sub
enter
or
aam
dec
insl
fs
adc
gs
into
pop
cmp
int
in
orl
mov
aas
cmc
test
in
jne
jp
in
lcall
dec
push
mov
sub
xchg
cmpb
and
fldl
inc
js
loope
and
shlb
mov
movsl
neg
mov
int
xor
push
jge
test
insl
jmp
mov
loopne
fimull
lea
dec
scas
pop
movsb
in
push
mov
stos
dec
adc
mov
cmp
clc
mov
shrl
add
data16
icebp
jbe
xchg
mov
mov
xor
fs
aas
js
int3
repz
mov
enter
icebp
push
xchg
mov
ss
popf
xchg
jbe
insl
push
and
movsb
imulb
sbb
push
pop
stc
out
xor
sar
pop
jl
xor
sbb
fdivs
stc
jo
jge
pop
into
clc
cmp
cmp
ss
test
mov
and
js
stos
push
shr
push
push
or
leave
jl
addr16
aad
imul
dec
adc
out
shll
mov
cmc
lret
sub
mov
sub
push
push
je
mov
mov
add
mov
mov
inc
sahf
in
adc
add
lds
bswap
je
aam
pop
pop
or
mul
out
mov
inc
mov
stc
sub
xor
insb
mov
fistpl
ss
mov
sub
xchg
sahf
sub
mov
hlt
add
stos
and
and
or
jo
xchg
pop
test
addr16
pop
xlat
pop
int
bound
fcmovne
adc
fmull
add
jmp
scas
mov
out
sub
insl
push
or
sbb
mov
popf
sub
cmp
dec
add
mov
push
aaa
sbb
inc
xchg
lock
les
seta
scas
push
xchg
add
push
int
les
mov
dec
repz
push
mov
or
in
jae
add
push
icebp
cmc
inc
cmp
inc
mov
gs
and
aaa
out
pop
aas
cs
outsb
cmpb
push
lea
adc
cmc
push
notl
add
dec
jp
sub
int3
inc
sbb
popf
jbe
mov
lret
stos
dec
mov
cmp
push
and
dec
sub
fistpll
repnz
add
mov
push
shll
push
in
loopne
fcompl
outsl
lock
stos
jae,pt
lahf
sbb
jne
lahf
ret
sbb
imul
pushf
in
cmpsl
pop
xor
dec
xor
icebp
nop
lahf
push
lods
mov
icebp
test
loope
inc
add
in
dec
mov
pop
jno
xor
mov
and
and
pop
cmp
dec
mov
mov
jmp
and
leave
bswap
dec
push
aas
xor
jmp
imul
add
push
dec
cmp
lods
das
in
sub
xor
mov
mov
pop
mov
sub
jl
test
lret
dec
jns
iret
sub
call
stos
sbb
mov
mov
ret
pop
sbb
jle
mov
pushf
jle
pop
xchg
fbstp
xor
notb
jecxz
push
jae
bound
mov
xor
mov
in
jg
iret
add
push
xor
out
test
mov
cmpsb
pop
pop
in
add
add
sbbb
enter
jmp
pop
pop
or
cmpsb
dec
push
sbb
jmp
mov
push
scas
mov
jge
adc
out
call
mov
and
inc
jmp
sbb
insb
jle
mov
xchg
cmp
sub
sub
mov
loopne
cld
cmc
push
in
xlat
push
jns
mov
stc
popl
lcall
dec
pop
cltd
add
and
movsb
and
icebp
jnp
inc
fstps
mov
add
mov
push
mov
cwtl
dec
push
xchg
jns
push
out
jno
jb
jmp
xchg
push
jne
push
add
lds
outsl
xchg
jb
imulb
popf
sarb
repz
sub
sbb
loopne
mov
dec
mov
sbb
popa
fsubs
in
push
ret
stos
es
addr16
jbe
lret
mov
stos
adc
inc
pop
divb
outsb
xchg
jg
ja
idivb
mov
stos
dec
pushf
sbb
outsb
push
nop
xchg
cmp
into
xor
sbb
loope
mov
mov
mov
sar
mov
sahf
jecxz
js
mov
je
addr16
sub
call
leave
add
mov
and
xor
mov
push
jbe
aam
pusha
mov
lret
sbb
sarl
mov
pop
aam
and
cltd
sbb
int
push
mov
movq
shrl
bound
pop
xchg
cmpsl
pushl
popf
cmp
fmuls
xlat
cmpsl
adcl
imul
sahf
fcmovbe
rclb
and
pop
popf
push
inc
jne
lea
xchg
mov
cmp
les
xor
pop
sub
jbe
ret
lock
mov
test
rorl
ret
xchg
inc
aam
imulb
andb
rcll
popl
sbb
cmpsb
cmp
shll
out
xchg
jne
jecxz
out
xor
inc
movsl
fnstenv
fcomip
xor
push
pop
lods
lods
and
inc
mov
addr16
and
add
sarl
pop
cltd
cmp
fcoml
inc
pop
jp
test
jg
xor
jl
bsr
sbb
sbb
sub
cltd
inc
inc
pop
stc
sar
adc
jmp
jns
xor
data16
popa
mov
ds
imul
mov
int3
popf
xchg
pop
xchg
lret
pusha
jo
sub
jno
aad
xchg
jnp
lock
push
bound
sbb
rol
loop
mov
scas
mov
fimuls
pop
inc
int
loope
mov
imul
add
inc
sub
adc
int
icebp
cwtl
lods
inc
jo
or
pop
mov
cltd
or
int
cmp
xchg
jns
test
repz
mov
repz
xchg
je
cld
bswap
push
loopne
adc
incl
adc
inc
daa
int3
loop
pop
xchg
and
js
cmp
jbe
shll
mov
shll
dec
sbb
xchg
shl
leave
test
adc
movsl
jns
repnz
pop
jge
sbb
adc
dec
cltd
loopne
jecxz
dec
adc
inc
xlat
ljmp
dec
sbb
pop
gs
xchg
fcmovbe
repz
test
shl
fsubs
dec
decl
mov
cmp
fs
cld
dec
fs
dec
or
dec
sahf
int3
sarl
sub
lock
push
inc
test
push
mov
insb
mov
inc
fs
aam
pop
jmp
mov
and
sbb
mov
popf
jg
imull
js
inc
jge
adc
cli
ja
sub
mov
and
dec
adc
mov
dec
inc
jge
cmpl
mov
xchg
jno
test
sub
or
add
data16
popa
hlt
loopne
ficoms
adc
sub
int
mov
xchg
sbb
fistl
ss
ret
int3
jne
sub
add
pop
push
jl
js
mov
cs
sub
repz
mov
or
jge
xor
cmp
sbb
xor
sub
add
jae
rcll
mov
cmc
addr16
xchg
shll
jge
call
fisubrs
pop
out
xlat
push
lret
inc
push
loopne
inc
pop
adc
mov
sti
or
and
fildll
les
loop
sbb
dec
inc
jl
jo
adc
repnz
popf
mov
fldl
mov
callw
sbb
lea
sub
or
fs
loopne
lods
sbb
push
lods
sub
ljmp
lds
test
repz
dec
dec
stos
or
add
push
in
push
ret
cmp
xchg
fistl
adc
push
add
pop
mov
mov
xchg
sbb
add
cmc
lods
cs
xor
mov
cwtl
pop
xchg
idiv
mov
mov
dec
xor
xor
push
add
adcl
imul
outsb
sti
mov
xor
lds
adc
lahf
in
int3
testl
into
negl
inc
shll
pop
xchg
jmp
pop
pop
sub
cmp
subb
cltd
fsubrl
stos
jbe
mov
jno
lcall
pop
ror
inc
xor
or
mov
dec
jno
enter
lahf
shrb
xchg
pushf
xor
push
mov
test
and
mov
pop
xchg
in
call
cmp
shrb
push
sub
dec
stc
pop
stos
loopne
ret
cmp
stos
lret
fst
xchg
jg
cmp
cltd
sbb
dec
add
cmpsb
cmp
test
push
jge
out
lock
outsb
pop
xor
popf
in
push
mov
scas
push
rclb
js
sti
ret
loope
sub
sub
mov
lods
pop
inc
stos
rorb
mov
push
jbe
test
dec
lds
mov
adc
dec
outsb
pop
adcb
sub
xorl
in
inc
xor
mov
lods
and
adc
pushf
test
cs
cmp
rclb
out
shrl
loopne
inc
mov
push
lahf
add
mov
mov
fcomip
xor
addb
mov
sbb
dec
sbb
and
das
out
in
fsub
es
mov
ret
iret
cmp
lcall
ret
mov
adc
xchg
cmp
mov
xchg
cld
gs
pop
movsl
ja
adc
adc
xor
cmp
lock
stc
push
movsb
loopne
int3
add
dec
jmp
jb
jecxz
clc
cwtl
mov
mov
out
nop
ret
mov
xchg
and
negb
pop
jne
hlt
xchg
lcall
sub
dec
cmp
sahf
adc
lcall
pop
mov
mov
sbb
outsl
cmp
xchg
call
add
mov
push
mov
sbb
repz
xchg
mov
in
and
inc
es
mov
push
pop
les
adc
push
fisubs
mov
lcall
test
ret
inc
mov
jo
mov
dec
pop
jl
mov
js
stos
and
imul
push
imul
cmp
push
xor
xchg
fnstcw
hlt
pop
test
pusha
lods
push
sub
xor
mov
dec
push
xor
sbb
jo
lahf
imul
jae
lods
and
mov
cmc
cmc
inc
and
jno
in
fcomps
sbb
xchg
imul
movsb
hlt
inc
out
fucomi
mov
scas
jo
sahf
or
pop
jecxz
push
push
aam
hlt
dec
sarb
add
dec
cmpl
mov
xchg
fdivrl
push
inc
mov
je
daa
cmp
inc
xchg
aas
test
and
sub
fcoml
fsincos
push
imul
sbb
std
lea
fisubs
mov
push
jmp
jns
mov
push
outsl
jnp
sub
sbb
pop
inc
fcmovnbe
std
adc
add
xor
sub
jg
pop
jb
movb
bound
mov
sbbb
or
mov
mov
cli
inc
nop
adc
hlt
and
pop
movsb
push
mov
mov
cmp
and
lods
cmp
clc
jl
fbstp
mov
fst
cmp
jmp
cmp
and
jl
sbbb
xchg
mov
mov
cmc
pop
insl
or
push
ficompl
stos
cli
mov
or
mov
xchg
xchg
jbe
mov
mov
stos
sbb
rclb
dec
dec
out
das
fadds
pop
cmp
mov
cmc
mov
xchg
aad
cwtl
jns
out
jnp
movsl
pop
hlt
je
stos
lds
pop
jae
test
aad
inc
push
mov
pop
mov
jecxz
outsl
and
mov
lds
add
imul
sti
push
insb
push
adc
cli
xor
int
xchg
icebp
or
or
sbb
mov
sbb
cs
hlt
fisttps
mov
dec
xchg
insl
in
imul
push
in
xor
xor
aam
pop
stos
cwtl
dec
lock
push
andl
mov
sub
or
xchg
cmp
cmp
mov
fisttpll
pop
sbb
sar
lret
jo
outsl
roll
int
pop
testl
aas
push
es
out
es
ret
addb
or
inc
icebp
or
repnz
nop
xchg
fcomp
mov
mov
sbb
inc
inc
fisttpl
addl
push
add
dec
mov
add
lock
xchg
loope
ds
mov
sub
xor
jbe
cmpsw
or
fcompl
imul
lret
jno
scas
sar
call
lock
int
lahf
test
movsb
roll
neg
not
mov
out
mov
sahf
ret
fisubs
cltd
mov
or
push
jp
in
ror
out
pusha
arpl
rcl
adc
ljmp
sub
shl
sbb
test
jns
pop
xchg
mov
push
ljmp
insb
dec
leave
outsb
rcrb
mov
clc
sbb
mov
and
jmp
fcomi
push
ret
mov
jecxz
pusha
outsl
int3
cmpsb
fisttpl
aaa
stos
mov
mov
mov
xchg
je
fldl
insb
repz
sub
les
push
inc
int
push
hlt
push
imul
push
subb
add
pop
scas
xchg
in
sub
mov
mov
out
sub
pop
nop
jecxz
lods
cmpsb
scas
mov
repnz
cmp
jmp
rolb
hlt
std
jmp
flds
sbb
andnps
es
pop
sub
add
xchg
xlat
in
push
or
sbb
xchg
add
inc
scas
call
pop
lds
cmpsl
test
dec
inc
lea
lret
cmp
leave
mov
mov
out
xor
mov
pop
pop
adc
scas
shrl
fmul
jns
out
xchg
xor
push
add
dec
dec
in
or
cwtl
bound
xor
stc
cmc
xor
fsubrs
dec
sbb
aas
push
es
sub
sahf
popa
movsl
push
add
fs
jl
jno
mov
call
cmp
dec
arpl
je
cmc
out
repnz
inc
fld1
cli
and
imul
push
dec
adc
mov
xchg
test
xlat
mov
push
pop
pushf
or
repnz
and
mov
dec
jecxz
outsb
xchg
in
and
pop
out
pop
push
mov
mov
jl
movsb
ljmp
jp
push
xor
pop
inc
and
dec
das
fs
ret
test
jbe
mov
pop
pop
and
test
ret
pop
cli
xchg
sub
loopne
jg
ret
fidivs
cld
inc
cmpl
pop
mov
pop
inc
iret
mov
jbe
add
lock
arpl
adc
hlt
fsub
aaa
not
adc
mov
and
jb
pusha
hlt
fsubl
sbb
fs
bound
push
and
pop
test
repz
flds
es
fwait
mov
xchg
push
rol
sbb
and
inc
jge
imul
int3
shll
mov
ret
inc
loope
jne
add
aad
push
test
xlat
pusha
jne
adc
rcll
fldcw
xchg
xchg
push
xchg
sbb
outsb
lcall
push
adc
cmp
test
mov
scas
aas
scas
lea
xchg
pop
roll
popf
mov
push
jne
mov
jns
arpl
test
cmp
es
shrl
xchg
mov
and
out
test
pop
mov
repz
call
push
addl
ret
lahf
jecxz
push
test
adc
fwait
xchg
leave
fs
pop
popa
push
dec
mov
nop
in
mov
adc
sub
mov
xlat
jno
or
jbe
or
inc
mov
sub
stos
ret
mov
fldenv
scas
inc
adc
leave
lds
sub
leave
dec
loop
pop
nop
outsb
in
in
dec
mov
pop
aaa
xlat
inc
hlt
cmp
pop
push
sub
mov
loopne
lds
mov
fnstenv
push
xchg
out
imul
cmp
js
lahf
sbb
pop
or
les
sbbl
pop
pop
mov
sbb
fidivl
test
test
push
adc
push
rcr
cmc
fcomps
sub
xchg
cltd
fimull
push
shrl
push
scas
mov
push
add
pop
test
pop
shll
add
jnp
out
lret
mov
xor
dec
xor
sub
cmp
aad
lahf
add
xchg
dec
or
aad
xchg
inc
out
or
fwait
lret
mov
adc
xor
sbb
push
push
in
push
cmp
imul
dec
stos
sbb
xor
out
mov
jb
adc
lods
cmpsl
cwtl
xchg
cmpsl
fisubrl
jp
and
xchg
data16
fucomi
in
addr16
inc
loopne
mov
cmp
in
push
fdivrs
xchg
fldt
cltd
sahf
out
imul
xlat
cs
sub
fs
adc
xor
mul
push
mov
in
aaa
sbb
js
in
push
fwait
leave
push
cmp
iret
or
mov
sbb
xchg
push
mov
in
adc
hlt
leave
lods
pop
cmp
push
jno
dec
pop
sbb
jmp
jbe
sub
xorl
jb
dec
call
pop
push
inc
pop
adc
push
or
mov
cmp
nop
mov
int3
pop
daa
dec
mov
cmp
fcoml
xchg
jge
push
mov
push
xchg
jmp
add
js
or
mov
fiadds
fldl
jmp
cwtl
or
jo
test
cli
je
imull
pop
out
popa
fwait
add
mov
js
xchg
or
and
mov
jb
push
sti
adc
add
out
mov
jmp
xor
repz
mov
mov
push
add
jne
in
test
loopne
mov
ret
out
cmp
push
stos
in
fistps
movzwl
out
imul
and
imul
sbb
xchg
clc
xchg
fnclex
dec
lret
loopne
mov
ss
pop
or
fs
cmp
xorb
jge
insb
mov
les
leave
sbb
mov
xor
push
dec
into
pusha
mov
jo
mov
add
insb
negl
and
jno
add
ror
fisubrs
or
aaa
rcll
push
js
std
pop
jmp
push
std
inc
mov
inc
inc
mov
push
push
rolb
fs
ds
push
jle
imul
and
pop
inc
mov
ljmp
adc
sub
and
dec
pop
or
adc
popf
jae
xchg
sbb
pop
clc
jg
inc
neg
pop
dec
inc
dec
and
and
cmpsl
mov
iret
mov
pop
and
push
daa
dec
dec
dec
xchg
pop
sbb
sub
lds
pop
mov
ficoms
xchg
adc
arpl
aaa
sbb
enter
and
repz
dec
in
inc
cmp
scas
pop
pushf
sar
shr
rcrb
and
sub
fsub
dec
mov
sub
shll
outsl
dec
ljmp
or
test
sub
jne
and
orl
xchg
xor
cli
icebp
int3
mov
test
rcll
inc
cltd
mov
pop
popf
fstl
jo
imul
mov
ror
shlb
pushf
mov
repz
sbb
cmp
cmpsb
ss
mov
xchg
icebp
xor
xorl
mov
push
push
push
lea
orl
mov
jge
lock
out
inc
xchg
push
adc
jmp
outsb
pusha
fs
mov
xchg
sti
adc
dec
push
fstps
sub
int3
pop
mov
outsb
adc
shlb
push
or
lret
push
add
push
xchg
or
loop
fistpl
pop
and
push
mov
add
sbb
jnp
add
pop
test
pop
adc
scas
sbb
adc
cmp
pop
inc
insl
sbb
inc
out
mov
pop
sub
cmp
push
xchg
bound
fldt
add
out
push
pop
push
xlat
push
ret
stc
into
sub
adc
adc
fnsetpm(287
pop
mov
test
lods
enter
mov
insl
cmp
rcl
or
imul
jae
mov
movb
sub
sub
xor
pop
mov
mov
mov
aad
fcompl
ds
jb
xorl
outsl
inc
repz
sahf
sbb
xchg
rorb
pushf
in
add
cmp
in
and
cmp
test
clc
fstps
jge
mov
iret
lret
cld
pop
es
adc
push
inc
test
push
ljmp
rcr
sbb
xchg
cmpsl
mov
inc
mov
sub
sub
subb
in
fisubs
movsb
std
loop
fdivs
or
mov
mov
or
fnsetpm(287
ret
xchg
dec
pop
sub
mov
mov
cli
jb
ds
xchg
sub
xor
and
pop
add
jge
dec
lea
jg
lret
and
or
mov
jne
in
add
xchg
push
pop
cmp
lahf
or
and
fbstp
push
pop
std
jl
mov
movsl
ror
clc
jnp
jge
dec
push
and
sub
push
or
push
xor
jne
dec
cmp
xlat
pop
sub
ljmp
lahf
cmp
xor
adc
mov
xor
aad
sbb
pop
frstor
sub
lahf
popa
mov
pop
test
out
cmp
xchg
dec
out
iret
sbb
int
cmp
mov
mov
mov
rcl
addl
and
out
inc
xlat
scas
or
jnp
jge
sahf
xchg
xlat
mov
ret
fidivrs
add
xchg
loopne
mov
ret
stc
xchg
jmp
sbb
sub
es
pop
and
xor
aam
push
icebp
cld
repnz
in
pop
dec
push
fcompl
hlt
lret
cmpsb
outsl
xchg
sbb
fiaddl
lods
ljmp
testb
es
lods
test
xor
or
xchg
gs
mov
test
insl
ja
lahf
cmc
insl
push
add
lea
out
and
mov
sbb
cs
and
lahf
mov
imul
and
adc
arpl
mov
mov
pusha
fsubs
outsb
outsl
rol
imul
cmp
addr16
mov
sbb
pusha
jle
scas
adc
xchg
jo
loope
test
fdivs
enter
aam
or
jecxz
addr16
mov
sbb
repz
and
push
inc
nop
inc
xor
jne
dec
sbb
fadds
and
lea
jbe
dec
push
sbb
mov
mov
sbb
lcall
test
sub
in
xchg
fldcw
call
mov
rclb
leave
inc
or
clc
adc
in
fdivl
and
addr16
je
pop
inc
inc
insl
int3
pop
push
cld
into
js
push
pop
gs
cli
sbb
out
push
dec
sbb
test
pop
loopne
sub
leave
sbb
pop
loop
call
aad
or
xor
mov
xchg
mov
mov
sub
test
andl
adc
xchg
push
dec
mov
int3
or
bound
test
es
jbe
nop
mov
in
cmp
ret
aad
adc
or
insl
dec
mov
sarl
test
rcrb
inc
sub
inc
xchg
and
or
aam
inc
inc
cmpsl
inc
arpl
pop
xchg
add
popa
push
pop
adc
jmp
mov
ftst
sahf
stos
sbb
sub
mov
push
xchg
cmp
js
loope
aaa
cld
and
inc
mov
iret
ljmp
mov
jnp
into
fistpll
rcl
sbb
test
out
rcrl
fimuls
push
dec
fcmovu
imul
gs
sbb
push
xchg
push
dec
jle
xor
into
rcll
xor
mov
adc
push
hlt
adc
inc
aaa
orl
pop
mov
je
push
or
sbb
xor
cmp
cmp
inc
fmul
dec
out
insl
xchg
and
adc
inc
push
cmpsl
add
lods
xor
mov
and
jmp
add
out
sub
js
mov
in
add
arpl
test
cwtl
mov
cltd
scas
test
dec
lret
sub
outsb
out
push
popf
xor
push
les
repz
push
cli
je
mov
imul
adc
fstp
ret
test
sub
inc
inc
cmp
xor
incb
repz
push
lods
insl
cmc
and
pop
rorb
mov
imul
pop
or
ja
adcb
push
adc
data16
or
adc
jae
in
xchg
fildl
and
jbe
mov
shll
add
cmp
push
sub
pusha
lahf
rcrb
faddl
xchg
aad
dec
push
aam
sbb
ret
mov
ljmp
mov
repnz
aas
sar
xchg
insb
add
jbe
fdivs
xor
or
aaa
push
scas
cwtl
cmp
pop
stc
jne
xchg
scas
jg
out
inc
int
cmp
jmp
cmp
jecxz
lret
jns
pushf
push
mov
sbb
push
mov
aaa
jae
and
push
pop
test
push
lds
jnp
pusha
add
cs
sub
inc
mov
xor
fwait
inc
xchg
mov
sub
jmp
push
addr16
out
adcb
lcall
or
push
rorb
pop
or
roll
repz
push
jne
icebp
cmp
jmp
dec
push
dec
in
iret
leave
adc
jecxz
cmp
lock
push
sub
aaa
pminub
sbb
fs
scas
or
fcmovnu
hlt
mov
mov
imul
sbb
loope
repnz
in
or
pop
and
mov
xor
mov
out
sbb
mov
int
out
ret
addl
pop
ret
sbb
jae
movsl
mov
outsb
sti
dec
mov
xchg
call
fisttpll
lock
arpl
sti
jb
js
movsb
das
inc
mov
sarl
aas
mov
dec
mov
out
push
xor
loope
nop
adc
lahf
adc
lret
xchg
hlt
sbb
mov
gs
xor
mov
dec
daa
test
imul
stc
outsl
lock
inc
clc
repz
adc
mov
lahf
dec
insl
out
pop
test
pop
sbb
push
js
fimull
dec
sbb
out
mov
fst
outsb
jae
add
fnstcw
sahf
in
pop
dec
dec
sub
mov
ljmp
mov
push
jmp
imulb
outsb
add
xor
sbb
push
sub
dec
cltd
xchg
add
or
inc
mov
push
push
call
pop
loope
std
cwtl
orb
in
out
scas
inc
pop
add
and
xchg
sbb
xchg
fisubs
movups
leave
mov
outsl
aaa
movsl
cmp
sub
aaa
jnp
aas
mov
outsl
mov
sbb
or
insl
pop
loop
jmp
mov
pop
enter
clc
leave
pop
sarb
es
dec
test
pop
rcr
adc
in
ljmp
xor
lock
cmp
cmp
jmp
dec
jae
jg
fmuls
xchg
fcomip
and
mov
mov
push
jnp
cmpsl
pushf
pop
mov
mov
or
insb
pop
daa
mov
mov
les
ja
push
pop
repz
push
jge
pop
jns
andb
mov
jmp
lret
std
mov
add
cli
int3
jecxz
adc
jb
inc
mov
mov
adc
jl
inc
call
mov
clc
stos
test
sub
adc
mov
lret
repz
jnp
cmpsb
int3
mov
xchg
jp
xchg
iret
add
or
outsl
pop
jmp
das
fdiv
add
jmp
jo
mov
popw
cmpsl
jmp
inc
pop
into
mov
rcr
call
jl
pop
fidivrs
mov
sarl
sub
fcmove
js
fldcw
test
push
push
mov
mov
lahf
fld
xor
inc
mov
cmp
nop
xlat
ja
les
xchg
mov
cld
movsb
fnstsw
xor
sbb
lahf
cwtl
in
ret
dec
bound
test
dec
je
adc
xor
sub
sbb
mov
icebp
mov
filds
cmp
inc
xor
mov
xlat
flds
roll
icebp
stos
jno
add
pop
mov
scas
and
in
lret
mov
je
bound
ret
jo
inc
dec
xchg
inc
xor
loop
fidivl
inc
ss
leave
int
adc
mov
adc
test
fisubl
mov
add
jnp
sub
bnd
int3
maskmovq
pop
cmp
push
and
pushf
jo
xor
leave
push
lock
int
ret
sub
xchg
dec
cmp
pushf
xchg
testl
lds
pop
pop
push
jno
js
mov
gs
cs
stos
scas
pop
cld
push
dec
test
loopne
sbbl
inc
jb
testl
in
test
mov
lods
lret
add
and
mov
push
fwait
mov
push
stc
mov
jnp
sub
mov
inc
mov
add
xchg
jbe
addr16
dec
repz
lcall
rol
nop
or
and
xchg
mov
cs
cmp
pop
mov
addr16
xor
inc
xor
mov
in
xchg
adcb
dec
sub
gs
test
fcom
pop
xchg
adcl
loop
push
daa
xor
pop
push
jb
push
push
mov
push
aas
jnp
aaa
mov
cmpsl
mov
adc
pop
cmp
sub
loopne
pmulhuw
pop
insb
jge
sub
pusha
lds
std
dec
sub
aaa
dec
jb
out
mov
scas
xor
dec
inc
inc
fdiv
fmull
cld
push
sbbl
arpl
das
mov
lret
pop
sahf
bound
in
mov
sets
lods
sbb
imul
lods
cmc
or
jg
jecxz
aas
nop
mov
enter
inc
arpl
add
sbb
rcl
push
int3
xchg
fbstp
mov
cmpsb
nop
cwtl
imul
es
xchg
out
fs
dec
mov
dec
add
or
and
loopne
testb
sub
jg
jo
add
mov
iret
popf
notl
shlb
jne
loope
dec
les
bound
in
ret
test
xchg
mov
fidivrs
xchg
add
pop
rorl
cwtl
add
mov
rclb
test
scas
adc
jb
dec
xchg
mov
popf
sub
sub
sbb
push
sahf
loopne
xchg
mov
cmp
inc
inc
icebp
inc
stos
daa
mov
xchg
sub
sub
mov
sub
adc
mov
mov
data16
push
mov
ret
incl
inc
push
xor
cmp
mov
cmpsl
mov
pop
mov
fwait
push
xor
cli
out
mov
ljmp
pusha
jne
add
add
dec
dec
int
add
and
mov
sbb
jecxz
inc
cmp
jle
dec
idivl
pop
test
pop
sbbl
mov
xchg
ret
popl
nop
out
mov
stos
pop
sbb
add
jo
mov
fldl
jbe
aam
test
xor
out
cli
in
cmp
add
ljmp
shrb
lods
mov
ljmp
addr16
fstl
jae
cmp
sahf
ficompl
test
je
cmp
mov
test
repz
jmp
add
inc
outsb
and
scas
sarb
std
imul
sbbb
sbb
out
shrl
inc
and
je
lret
push
xchg
lods
cmpsb
jns
mov
loope
mov
push
jge
pop
mov
pause
js
cmp
ja
xchg
and
lret
gs
xchg
andb
adc
leave
mov
movsl
test
out
imul
push
mov
push
jnp
jle
xchg
mov
jne
fistpll
int3
test
mov
test
jne
fsubr
xchg
dec
in
mov
xchg
mov
mov
movsl
cltd
xor
dec
ret
mov
push
mov
sbb
stos
testl
xor
pushf
subl
mov
xchg
jne
pushf
pop
outsb
pop
dec
aad
clc
mov
push
sub
add
jl
cmpsb
push
das
ds
or
fs
sub
inc
inc
adc
mov
sbb
jne
mov
inc
outsl
bound
jg
outsb
jno
pop
mov
sbbl
orps
or
ds
mov
jbe
gs
or
sahf
dec
push
dec
add
aam
ljmp
or
imul
push
and
jp
arpl
std
xchg
jl
sbb
loop
mov
mov
mov
mov
xor
push
xchg
pop
pop
lods
pushf
pusha
push
mov
cli
in
lret
inc
add
adc
sgdtl
jl
xor
xor
mov
shlb
jno
leave
xchg
imul
sub
push
in
pop
dec
cmp
adc
testb
out
ret
adc
or
cmp
and
adc
std
sarb
stos
mov
mov
imul
dec
jge
fdivl
cmpsl
fadd
lea
fucomip
outsb
sub
inc
xlat
int
cli
jne
xchg
je
movsb
push
xchg
pop
push
dec
stc
stc
adc
mov
adc
ret
shlb
add
dec
fsub
adc
stos
aad
pop
inc
mov
and
mov
xchg
in
mov
cli
mov
int
lods
mov
jecxz
aas
pop
pusha
xchg
and
loopne
and
push
sbb
fwait
xchg
pop
xlat
sub
xchg
push
outsl
jg
mov
fnstenv
cmpsb
loopne
adc
aad
push
outsb
jb
stos
cs
pop
repz
jbe
rorl
nop
inc
or
in
push
jnp
out
mov
push
mov
dec
call
dec
shlb
mov
and
pop
test
mov
cmp
and
in
stc
inc
mov
in
add
outsb
repnz
or
call
je
cmp
dec
adc
or
test
cld
sub
mov
xadd
lret
push
int3
cmp
pop
std
xor
jecxz
imul
cmc
mov
lret
xor
bnd
cltd
cld
inc
jmp
pop
int
pushf
insb
cmp
popf
inc
insl
xor
loop
clc
fs
in
insb
sbb
push
lods
mov
mov
imul
outsb
add
js
adc
dec
xchg
dec
test
ror
loope
scas
cmp
test
sbb
mov
adc
rolb
xchg
push
xlat
add
jle
mov
push
fstpt
ds
xchg
mov
xor
and
xchg
lds
addb
lret
lea
mov
arpl
sti
subb
gs
and
sbb
sbb
xor
aaa
or
pusha
add
cmp
nop
fwait
or
lcall
arpl
add
xlat
or
pop
push
movsl
out
push
rclb
push
addr16
outsl
ja
es
adc
adc
scas
cmpb
xchg
inc
ljmp
xlat
das
test
and
cmp
addr16
or
cmp
or
or
pop
aam
shll
pop
push
stos
mov
mov
pop
add
cs
jp
addr16
ficompl
cmc
inc
insl
ja
sub
add
test
pop
pop
pop
in
popf
sub
mov
dec
mov
add
push
dec
add
xchg
jecxz
inc
mov
push
push
push
or
mov
mov
loope
fdivp
out
cmp
pushf
mov
jo
adc
sbb
sub
into
jmp
rcrl
mov
ja
js
and
xor
add
jno
clc
icebp
add
outsb
sub
aad
imul
adc
shlb
push
xchg
fimuls
pop
sub
and
jo
push
bound
aas
mov
ror
icebp
mov
fmuls
ret
rep
popa
loopw
lret
pushf
mov
pusha
pop
into
icebp
das
ret
mov
mov
push
in
out
xchg
sti
mov
into
idivl
add
negl
in
or
rcll
mov
iret
xchg
cmovge
adc
jp
inc
xorb
sub
ret
cmp
mov
stc
cmp
push
hlt
mov
mov
cltd
inc
loopne
je
fldt
add
fmull
jbe
jno
mov
jnp,pt
xlat
fs
imul
scas
scas
pop
inc
and
mov
sbb
into
push
sbb
jnp
hlt
cmp
pop
jae
mov
lea
add
or
pop
xor
daa
pusha
mov
xor
pop
sub
mov
sub
xlat
dec
in
push
push
mov
in
pusha
mov
or
ja
mov
cwtl
aad
jne
mov
lahf
int
mov
push
int3
add
push
lods
xchg
xor
dec
mov
rolb
mov
mov
jl
in
mov
push
mov
lahf
fwait
leave
leave
push
ljmp
xlat
pushf
test
fucomp
lods
pop
add
xor
fsubrl
mov
mov
dec
sub
push
mov
xchg
sub
jo
cs
inc
hlt
lods
push
adc
adc
cs
test
cld
pushf
mov
cmc
and
mov
pandn
int3
into
insl
add
int3
pop
les
ljmp
nop
adc
mov
mov
mov
out
adc
ljmp
int3
push
lods
fldenv
rol
jecxz
cld
inc
fwait
push
mov
lods
xchg
int
sub
movsb
inc
fsubs
dec
pop
div
inc
iret
mov
in
mov
cmpsl
cli
leave
clc
lcall
insl
fs
xor
sbb
shlb
jbe
pop
and
lahf
add
mov
imul
loopne
decb
imul
leave
cmp
mov
sahf
outsb
jne
pushf
mul
cmpsb
mov
mov
je
bound
sub
stc
and
in
jbe
into
outsb
mov
fldl
and
push
cs
xchg
repz
mov
pop
ja
pop
jb
hlt
popa
or
divb
fisubrl
test
mov
in
lret
pop
negb
xchg
inc
not
cwtl
cli
mov
cmp
int
sub
fisubs
adc
pop
int
xchg
enter
pusha
lods
add
mov
push
aas
nop
jno
jae
jge
lret
pop
popf
xlat
clc
divl
scas
dec
pop
out
fidivs
lret
divl
test
xor
push
adc
xchg
mov
frstpm(287
mov
lods
lea
pop
fdivl
jo
jle
scas
sbb
dec
in
pop
and
into
sbb
sahf
rcll
movl
lods
mov
shll
inc
xchg
pop
cmp
arpl
ds
jge
adc
aam
fcmovb
jae
xlat
sbb
lret
dec
mov
cmp
fst
fs
lret
dec
push
insl
mov
out
inc
fcomi
pop
pop
movsl
xchg
adc
stos
xor
insl
xlat
mov
stc
mov
cmp
inc
test
pop
mov
add
repnz
test
adcb
shl
pop
icebp
sbb
dec
imul
aad
test
outsb
test
sarl
out
pop
adc
insl
mov
imul
jb
sbb
mov
lods
fdivs
inc
shrl
add
jg
int3
mov
or
lcall
adc
clc
leave
xor
pusha
jns
cwtl
or
lea
fsts
lea
pop
pop
je
push
jle
push
xchg
push
sbb
sbb
pop
sbb
das
lret
int3
mov
rorl
xchg
mov
lahf
xchg
jge
sbb
inc
loopne
popa
dec
popf
xor
rcll
xorl
ds
sahf
xor
push
adc
sub
or
fcmovnbe
add
repz
movsl
aas
mov
sbb
int
and
gs
jl
inc
jae
jb
dec
xchg
shrl
sbbb
lcall
pop
in
pop
jmp
movsb
inc
cwtl
mov
mov
push
or
out
jmp
mov
mov
js
mov
dec
and
and
sti
cmpsb
mov
js
xchg
push
jbe
adc
mull
int3
mov
add
sub
pop
xchg
xlat
inc
push
pop
add
sbb
add
loopne
adc
hlt
std
and
jmp
fdivrl
repnz
popf
in
imul
arpl
je
inc
les
xor
sub
xorl
sbb
xchg
jnp
and
push
dec
lret
sbb
in
or
les
icebp
mov
or
cmp
adc
xchg
xchg
add
mov
insl
dec
fwait
push
push
cmp
js
insl
ficoms
int
pop
sti
inc
data16
ret
xchg
xchg
push
xchg
cmp
add
xchg
rorl
fwait
sub
xchg
int3
out
jno
xchg
or
dec
add
sub
in
adc
or
fistpl
mov
xor
sbb
push
mov
xor
imul
sbb
dec
pop
dec
fiaddl
dec
fs
xor
mov
mov
jns
cmp
xor
dec
push
fcmovne
sub
mov
lods
mov
cmp
pop
pop
sti
add
loop
add
adc
cmp
mov
xor
or
jno
mov
inc
mov
sbb
add
mov
add
sub
and
repz
push
dec
xchg
mov
dec
gs
outsl
js
push
test
push
inc
into
xchg
ds
stos
popf
hlt
pop
sub
xlat
outsb
cmp
cwtl
add
jb
pop
push
mov
cmpsl
out
sbb
stos
push
jne
pop
xor
movsl
jecxz
fistpl
sbb
decl
stc
ret
mov
sub
lods
mov
adcb
xchg
xchg
or
lock
popf
icebp
repnz
inc
push
xchg
fsubs
bound
lock
xor
sti
movsb
outsb
ss
pop
imul
in
cmp
out
or
sbb
shll
loop
mulb
cwtl
push
jno
push
test
lahf
adc
jno
inc
mov
pand
pop
outsb
adc
xchg
inc
leave
dec
add
mov
and
xchg
sahf
lahf
out
adc
rcrl
test
xor
rclb
stos
mov
into
pop
push
lods
mov
std
inc
jmp
or
mov
or
or
inc
stos
aas
in
push
mov
inc
or
icebp
sarb
xor
jns
aaa
push
mov
mov
int
push
dec
inc
push
filds
in
adc
ret
mov
push
insb
fisttps
xchg
gs
pop
mov
mov
mov
sub
jbe
fwait
xor
xor
push
fiaddl
stos
push
loop
ret
lods
sub
out
test
cltd
adc
adc
mov
ljmp
inc
mov
ljmp
loop
mov
sbb
adc
xchg
outsb
xchg
mov
cli
hlt
inc
mov
ror
rcl
add
jp
clc
je
mov
push
pop
shl
lods
gs
out
dec
adc
adc
fistl
out
clc
add
dec
cmpsl
sub
and
cwtl
daa
fists
daa
sbb
push
mov
bound
mov
cmpsb
add
test
cmpsl
testb
scas
add
sbb
or
test
fstpl
jmp
pop
mov
shrl
dec
sub
mov
cltd
dec
sub
int
das
dec
xlat
aad
and
scas
cmp
add
aam
pushf
or
inc
push
test
das
enter
pop
sbb
test
adc
adc
cmc
jecxz
adc
int3
js
mov
and
jne
cwtl
fsubr
dec
dec
mov
mov
dec
insl
push
push
and
fwait
and
xor
inc
pushf
xor
mov
jp
das
xchg
mov
scas
mov
jp
jp
add
pop
jg
pop
outsb
scas
xchg
mov
mov
cmp
adc
out
mov
iret
add
mov
mov
sbb
inc
xor
mov
bound
jecxz
or
mulb
popa
inc
jo,pn
imul
push
outsb
pop
in
sub
jmp
int3
mov
int3
xchg
das
out
mov
les
pop
cmp
cmp
hlt
jmp
mov
dec
aad
enter
xchg
push
cmpsb
test
ret
cmp
mov
dec
inc
inc
mov
fs
jp
mov
push
arpl
and
push
aaa
xor
pop
and
mov
pop
mov
lods
mov
loop
dec
mov
rorb
sbb
faddl
hlt
imul
adc
jmp
xor
scas
pusha
out
jo
ret
mov
add
push
jmp
mov
dec
es
int3
into
imul
ja
sbb
shlb
xchg
popf
sbb
mov
outsl
mov
pop
mov
add
in
cmp
xchg
movsl
aas
dec
xchg
xor
out
xor
stc
fs
mov
rcl
pop
xchg
jle
cmpsl
pusha
iret
data16
or
jp
add
fwait
mov
aas
fmuls
iret
or
dec
test
xchg
outsb
sbb
or
sbb
xor
mov
adcb
fnstcw
cmpsb
cmpsb
adc
fs
dec
cli
lret
xor
xchg
or
add
imul
addl
push
ret
pop
icebp
imul
mov
scas
xor
es
and
lods
sub
insb
or
out
repnz
sub
aas
testl
jno
lret
push
stos
mov
icebp
das
jp
push
xor
ret
push
mov
add
xchg
sub
aad
jo
mov
xchg
shl
lcall
inc
in
sbb
pop
push
outsb
icebp
mov
mov
add
mov
fdivp
push
xchg
pop
push
xor
push
pusha
inc
xor
add
mov
cwtl
test
pop
mov
daa
or
or
cmp
adc
push
inc
popf
shrl
add
xorl
push
int
lods
pop
repz
aam
sbb
jmp
lret
rcr
int3
cmp
adc
sti
and
mov
and
shll
push
mov
rclb
rclb
inc
dec
mull
or
cmc
cld
sbb
ss
and
mov
imull
sub
jmp
pusha
sbb
mov
adc
stc
mov
scas
aad
add
scas
jne
mov
into
insb
rcll
cli
daa
inc
push
stc
jmp
jb
cwtl
jns
sbb
bndstx
insl
outsb
popa
mov
leave
mov
jl
mov
hlt
iret
add
pop
lods
loop
pop
sub
shlb
lret
sbb
pushf
jns
call
clc
jmp
add
loope
notl
lret
xchg
dec
sbb
push
lods
add
hlt
shrb
sub
cmp
data16
jne
pusha
adc
pusha
mov
cmp
lods
cmp
fisubs
cmp
out
mov
sahf
stos
aad
pop
pop
pop
xchg
popw
sub
mov
mov
clc
push
inc
cmp
das
mov
mov
mov
shrb
js
cld
lea
aas
jg
repz
sbb
push
and
aas
cmpsb
jnp
fs
into
dec
add
shrl
add
xchg
outsl
mov
or
leave
imul
lock
dec
sbb
fld
int3
dec
ljmp
les
xor
shlb
xchg
adc
jo
sahf
jg
add
mov
fs
pushf
push
mov
jle
cmp
cwtl
adc
mov
cld
enter
pop
adc
jb
pop
loopne
sub
scas
ret
sbb
inc
in
jle
in
cmp
ss
xor
mov
lea
xchg
pusha
xchg
adc
loope
adc
cmp
xor
sub
adc
mov
call
lds
ja
into
adc
jnp
cmpsb
cld
into
lock
cmp
sub
lret
sub
mov
xchg
xchg
jl
sti
loop
push
mov
je
jae
push
dec
loopne
aas
int
sub
push
mov
sahf
adc
or
xor
jg
aaa
push
sti
inc
or
aad
mov
lods
loope
jns
adc
movsb
int3
and
push
push
loop
addr16
mov
in
psubsb
pop
fsubr
mov
xchg
add
dec
adc
enter
mov
xchg
popa
fstp
lret
pop
pop
sbb
cmp
push
pushf
mov
cmp
mov
and
out
push
pop
xor
test
inc
loope
lret
ret
push
sahf
add
xchg
push
jmp
jp
fwait
inc
adc
pop
cmp
aam
jp
and
lods
shrb
ficoms
icebp
iret
inc
rorl
das
data16
dec
pop
xor
sub
je
and
lcall
inc
or
xchg
push
cmpsb
xor
mov
les
inc
add
loope
cmp
push
scas
push
sbb
cs
push
and
pop
mov
lret
xchg
xchg
scas
out
daa
dec
cmp
push
jns
jnp
xchg
mov
mov
sbb
jge
push
out
push
loope
hlt
or
lret
insb
lea
mov
add
fwait
incl
push
cmp
mov
sahf
ljmp
in
mov
jne
xor
mov
or
cmp
pusha
xchg
cld
in
jmp
sub
inc
mov
dec
repz
jmp
into
and
lea
cmp
mov
cltd
dec
scas
dec
sub
imul
push
pop
cmp
lahf
mov
ss
fimull
and
mov
fcmovb
mov
mov
jnp
push
jmp
sub
cld
pop
jp
popa
pop
sub
fstpt
insl
mov
mov
insb
fsubl
push
mov
pop
mov
xor
push
or
ljmp
and
jbe
cmp
adc
push
dec
hlt
outsl
sub
aas
dec
rolb
inc
inc
sbb
xlat
fistpll
inc
out
js
pop
push
jo
push
and
inc
or
mov
lahf
stc
dec
aam
xor
cmp
outsb
and
or
mov
cltd
mov
shl
xchg
push
mov
mov
fistpll
mov
xor
mov
jmp
jp
pop
sahf
push
fmul
and
dec
pop
movsl
gs
push
rol
cmp
pop
std
and
xchg
sub
push
dec
hlt
fiaddl
jb
sbb
sub
cs
std
sbbb
mov
inc
pop
repz
notl
outsl
je
jmp
ja
outsl
cmp
repz
fisttpll
stos
nop
mov
xchg
xchg
test
addr16
pushf
in
mov
mov
jge
iret
jmp
cmp
pop
dec
dec
dec
mov
push
fiaddl
jbe
out
mov
test
ret
outsl
imul
aaa
push
out
rol
aas
push
int3
pop
fsubr
jo
sub
aam
jl
mov
scas
rcrl
mov
push
jg
push
lcall
add
jl
push
inc
xorl
xor
test
fdivr
out
xlat
mov
out
mov
push
or
mov
lcall
cmpsl
xor
pop
je
imulb
mov
cmpsb
sbb
cmpsb
cmpsb
cs
cwtl
cmp
xchg
adc
js
pusha
test
adcl
lods
es
mov
xor
jmp
outsb
jbe
jl
in
lret
lea
xchg
jmp
out
scas
ljmp
cmpl
sti
loope
mov
in
ljmp
ljmp
gs
cmp
int3
push
pop
sti
mov
int
in
cmp
inc
dec
sarb
jb
dec
jae
pop
jl
jecxz
jmp
test
fldt
rcrb
pop
mov
in
call
mov
mov
sbb
xchg
fst
out
sahf
add
leave
popa
test
pop
outsb
mulb
cmc
jle
push
sub
jle
pop
push
inc
mov
add
lcall
or
bound
sbb
pop
add
repnz
mov
inc
bnd
xor
add
cmpsl
pop
fwait
sub
insb
xchg
push
stos
popl
psraw
in
cli
daa
inc
cmp
cld
lret
int
pop
lahf
sbb
in
xchg
pop
into
fisubs
sahf
test
push
int
lds
push
xchg
mov
mov
nop
out
std
pop
mov
inc
cmp
mov
in
into
cmp
pop
addr16
adc
mov
out
adc
adc
mov
pop
push
dec
ljmp
adc
xchg
jae
pushf
dec
xchg
jl
out
push
and
mov
lods
std
sahf
adc
aaa
xchg
mov
cmp
ret
adc
mov
frstor
and
and
lret
pop
push
rcl
add
aad
rcl
cmp
stos
movsl
imul
push
cmp
insl
fidivs
in
or
push
into
cmp
pushf
push
shll
jae
jo
call
test
pushf
mov
pushf
lahf
ja
jbe
jns
mov
mov
fimull
mov
arpl
xchg
add
aas
xchg
adc
fwait
data16
sbb
cmp
push
pushf
fimull
push
xor
adc
aaa
fisttpl
loope
sub
cld
mov
sub
mov
mov
mov
push
in
push
sbb
push
cld
xchg
xchg
mov
dec
jl
inc
jne
ljmp
outsl
fcmove
add
xchg
xor
adc
into
ss
addr16
mulb
add
jmp
leave
pushf
cmp
lcall
fistpll
push
es
inc
dec
hlt
mov
in
loope
test
jno
xor
push
pop
pop
pushf
pop
mov
bound
jl
jle
arpl
inc
sarb
mov
jle
or
sbb
sub
inc
fdivs
jl
sbb
test
cld
mov
aam
cmp
adc
cmpsb
push
xor
push
xorl
cmp
daa
popaw
mov
jl
sti
fdivp
mov
icebp
push
inc
add
cli
cmp
xor
or
sub
dec
xchg
aam
adc
in
popf
or
negb
xchg
pusha
or
xlat
sub
xchg
negl
test
mov
in
ds
push
mov
inc
sbb
mov
aad
jmp
xchg
inc
js
daa
out
insl
mov
sub
jnp
into
jne
xor
mov
pop
jne
inc
stc
jo
inc
push
stos
outsl
popa
addr16
or
push
mov
mov
mov
adc
scas
pop
aas
adc
iret
test
jg
adc
pop
loopne
add
cld
pop
cmc
mov
jg
inc
mov
pop
mov
in
insb
mov
fcomi
fnstsw
lock
xlat
dec
add
lock
pop
mov
mov
ljmp
sbb
or
fsubrs
es
add
out
mov
jp
rclb
jge
aas
jb
lcall
iret
fstl
testl
pop
sub
pushf
sbb
ja
pop
fmulp
imul
or
sbbb
mov
ljmp
cmp
xchg
cli
adc
xchg
ficompl
inc
das
cmp
or
shr
subl
incl
mov
mov
ret
mov
cmp
in
fisubs
mov
rolb
cmpsb
push
sbb
or
sbb
pop
pop
mov
iret
or
xchg
mov
mov
lahf
dec
ss
sub
popa
cmpsl
inc
xlat
aad
sarb
or
push
mov
shlb
push
cmpsl
popf
cs
inc
clc
cmp
mov
aaa
in
and
add
sub
in
in
cmp
gs
movsl
pop
pop
imul
push
jl
mov
test
sub
pop
cmpsb
movb
xor
xchg
add
popl
imul
mov
jp
jb
cmp
shlb
mov
mov
fcomps
xchg
dec
fwait
std
or
add
out
add
fildll
gs
push
mov
and
push
cmp
loope
xorl
add
jl
loope
pop
cmp
dec
jne
mov
lret
lahf
imul
sub
das
lock
mov
cs
test
andl
loop
lahf
pop
mov
ret
xor
mull
sti
cmp
mov
hlt
arpl
mov
ss
stos
stos
mov
mov
and
cltd
mov
fadds
dec
inc
out
dec
flds
sub
and
mov
fcmovnbe
cmp
jbe
push
fs
dec
cld
mov
adc
in
sbb
fcmovnu
jp
loopne
xor
mov
gs
sbb
push
stc
pop
dec
pop
jb
scas
jp
dec
adc
add
fdivs
xchg
pop
mov
fidivl
add
mov
xor
mov
js
in
out
loop
out
push
push
lret
out
xchg
cmp
xchg
ljmp
ss
dec
xchg
pop
mov
inc
push
in
aam
lret
and
sahf
mov
pop
fwait
shlb
lea
jecxz
shll
sarb
fimull
inc
lea
xchg
pop
xchg
daa
call
mulb
mov
or
stc
into
dec
or
jb
push
cmp
in
pop
push
inc
sti
mov
mov
xor
and
xchg
aad
pushf
cld
xchg
mov
pop
ss
dec
in
dec
outsb
add
add
mov
sti
pop
cmp
cmc
cmp
sbbb
std
ja
movsl
in
inc
push
cmpsl
and
jnp
adc
sub
leave
push
shrl
jmp
loop
push
xchg
jle
pop
test
jb
in
and
loopne
or
dec
in
pop
push
mov
and
sbbb
sub
out
scas
jg
loopne
jp
mov
dec
adc
adc
push
test
cmp
aaa
sbb
mov
jg
xchg
mov
xchg
clc
mov
outsb
mov
in
cwtl
sbbb
add
xor
or
cld
imul
mov
dec
pop
cli
add
xchg
dec
xor
mov
out
push
mov
push
adc
xchg
out
ds
jl
cmpl
pop
dec
decl
or
cmp
ja
xchg
pop
ja
aas
sub
cli
mov
jno
add
in
cmp
and
pushf
rcr
mov
jmp
mov
jb
adc
pop
and
fstl
adc
ss
inc
xor
sti
jge
scas
xchg
scas
jae
xchg
rolb
test
fbstp
dec
sub
push
mov
jne
sbb
mov
mov
stos
fstp
das
mov
shlb
dec
add
aaa
pop
cmpl
cmp
jns
fwait
push
movsb
mov
pusha
fstp
xchg
fsubp
and
jbe
imul
sbb
and
fwait
hlt
rclb
out
mov
aaa
nop
pop
mov
ljmp
das
mov
int3
mov
leave
xor
inc
es
pop
mov
xchg
sar
push
imul
leave
pop
ret
push
jl
es
add
and
adc
mov
dec
xlat
mov
into
pushf
jmp
jge
xchg
mov
jmp
push
aad
lret
dec
cmp
xchg
iret
jne
push
lea
xor
repnz
fld
incb
jae
sbb
nop
sbb
and
scas
bound
mov
dec
stc
dec
shl
pop
xor
jmp
jmp
in
mov
dec
lret
cltd
pop
xor
int
push
clc
push
ficomps
paddb
aaa
mov
gs
and
bound
shll
xchg
lcall
cmpsb
cmp
mov
inc
subb
movsb
xchg
bnd
enter
lcall
addr16
dec
test
fistps
inc
cli
inc
popf
xchg
jno
xchg
scas
sbb
xor
insb
outsb
mov
lret
inc
or
int
mov
pop
and
sub
ja
inc
fstp
lret
popa
sahf
cmpsb
scas
and
aaa
cs
add
fwait
push
enter
insb
and
sti
and
cmp
inc
and
pop
pusha
ret
or
ja
and
adc
call
mov
popa
shll
into
jle
or
mov
add
push
xchg
jecxz
shrb
filds
dec
ret
cmp
add
outsl
test
mov
push
loope
jmp
popa
sbbb
adc
add
adc
push
push
andb
in
lret
mov
lret
mov
xchg
pop
mov
xor
cs
lret
push
fimuls
les
jns
shlb
add
jle
push
cli
bound
sub
inc
int
movsb
leave
daa
cmpsl
jl
std
hlt
push
lods
sbb
lret
out
imul
pop
jae
out
pop
and
mov
in
pop
faddl
out
push
je
or
push
scas
pop
lcall
out
mov
jecxz
mov
jnp
iret
rclb
xchg
cwtl
repnz
sub
inc
stos
daa
lock
repnz
stos
ret
out
fs
bound
aaa
fdivl
sbb
xor
scas
sub
js
fs
dec
jae
xchg
lods
cmp
adc
mov
cltd
aad
std
stc
push
mov
outsl
mov
add
in
mov
sub
int
cmp
and
leave
and
mov
inc
iret
pushf
push
inc
aad
pop
iret
repz
mov
js
xor
cmovns
pusha
movl
idiv
sar
int
rcl
les
mov
pop
sub
jne
and
nop
cmp
mov
dec
sbbb
sub
test
sbb
sti
fstpt
push
daa
ja
cmp
adc
push
es
leave
das
inc
pop
cmp
int3
outsl
push
and
cld
pop
xor
inc
push
test
cmp
push
dec
popa
sahf
xchg
jo
dec
push
xor
dec
push
negl
push
fistps
add
lods
fidivrl
jnp
in
mov
insb
flds
jl
stos
mov
stos
sub
ja
popf
hlt
aas
xchg
add
mov
lret
xchg
dec
mov
cmp
push
aad
xor
jnp
adc
xor
push
mov
sub
xchg
mov
fidivs
cwtl
jle
in
pusha
dec
jne
movsb
inc
movsl
sbb
push
mov
jo
div
fisubl
cmc
jne
adc
lret
adc
or
lret
das
aaa
mov
inc
mov
clc
sti
xor
imul
cwtl
mov
jae
iret
test
push
sbb
dec
daa
cwtl
arpl
jb
or
and
adc
xchg
cmp
mov
mov
outsl
dec
jle
dec
je
or
aas
or
imul
xchg
xchg
xchg
lahf
or
arpl
mov
scas
jne
and
inc
pop
ret
je
sbb
mov
dec
mov
pop
pop
mov
lea
mov
cmp
pop
dec
clc
or
enter
das
outsb
inc
insl
jmp
js
mov
mov
mov
adc
loopne
ret
inc
sti
add
movsl
repnz
inc
stos
add
jb
movsl
lret
movsb
dec
popf
repnz
push
xor
cmp
setb
mov
stos
call
imull
out
lret
add
sahf
loopne
lret
mov
mov
jne
loope
pop
add
cld
pop
data16
inc
jmp
inc
push
or
mov
dec
mov
cmp
addr16
lahf
pop
mov
std
nop
and
jp
enter
push
cld
imul
mov
dec
sub
lahf
popf
inc
scas
enter
xchg
out
pusha
pusha
sub
dec
xchg
cli
icebp
cmp
in
xchg
ret
leave
mov
mov
sub
push
call
les
mov
sarl
add
int3
int3
xchg
pusha
lock
cltd
mov
adc
mov
or
stos
clc
xchg
in
push
mov
arpl
pop
dec
test
mov
sbb
jmp
rolb
out
push
in
rorb
lea
cld
or
sbb
mov
out
lock
ja
rolb
mov
or
xchg
repz
mov
jns
sub
push
or
push
xor
add
push
or
loope
mov
enter
jge
nop
sbb
inc
or
xor
jmp
mov
shll
das
ljmp
ds
and
mov
fcoml
jne
sub
fucomp
add
orl
popf
ret
dec
xchg
fidivrl
je
divb
das
mov
fisttpll
iret
vcvtsi2sdl
add
sarw
lcall
push
xchg
ret
xchg
and
jecxz
pop
xchg
imul
push
sti
push
adc
inc
rolb
push
push
and
inc
mov
mov
cmp
mov
nop
pop
or
mov
jns
or
add
das
addr16
shlb
xchg
cmc
mov
ja
test
adc
xor
dec
insl
mov
pusha
push
xor
jp
aaa
orl
loopne
mov
shl
ror
push
pop
and
push
ljmp
xchg
lcall
sub
dec
or
shlb
imull
into
push
cltd
mov
pop
enter
add
rcr
imul
cli
xor
decb
out
dec
add
shrl
xor
mov
cmpsb
das
sbb
inc
pop
cmpsb
mov
sbb
scas
insb
jl
add
insb
xchg
jnp
sub
or
insb
fst
popf
jae
push
in
pop
inc
rorl
aaa
shl
cltd
sbb
pop
jbe
in
bound
jb
mov
mov
lods
fs
sbb
dec
xlat
dec
mov
dec
xchg
xchg
adc
mov
shr
xor
mov
ret
cwtl
sub
pop
loope
dec
ja
or
xchg
loope
aas
outsb
push
push
mov
bound
test
movsb
mov
leave
xchg
int
in
mov
sub
mov
push
scas
xor
sbb
jno
mov
push
popf
jo
push
inc
jmp
dec
int3
movsl
or
mov
sub
xchg
sti
in
xchg
push
in
out
movsb
out
jle
ss
add
iret
mov
mov
jb
jnp
cli
jo
xchg
je
pop
loope
imull
loop
cld
adc
rcl
ds
xlat
adc
inc
enter
stos
mov
loope
add
xor
les
mov
and
mov
pop
push
sbb
mov
mov
lea
fcompp
hlt
repnz
insl
fadds
pop
test
mov
orb
cld
mov
or
xor
fwait
insb
mov
adc
or
mov
repz
push
imul
mov
add
xchg
outsb
push
dec
pop
xchg
call
mov
push
rclb
ljmp
sub
pop
lds
add
jbe
imul
xchg
fdiv
push
sahf
cli
in
or
repz
sub
lahf
cld
shl
ljmp
scas
push
xchg
incb
in
mov
or
sub
lods
push
fnsave
ja
inc
test
ds
add
xor
fdivrs
inc
ret
inc
jae
jg
outsb
arpl
sub
adc
push
mov
adc
pop
ret
xchg
mov
insl
neg
cwtl
dec
inc
sbb
pusha
in
xor
jo
inc
xchg
loope
aaa
cmp
dec
mov
xchg
cmp
push
cmp
lea
cli
into
sub
lock
call
mov
imul
shlb
test
fisubrs
fcmovnb
xlat
mov
pop
or
loopne
dec
push
jmp
data16
sub
stos
cmp
out
and
ljmp
pop
pop
xchg
jg,pt
adc
or
addb
in
int
push
mov
and
dec
test
or
je
cwtl
cld
popa
in
xorb
cltd
jle
xor
das
mov
notb
movsl
ret
lock
je
daa
xlat
or
mov
cwtl
test
xchg
xor
jae
in
aad
mov
movsb
daa
lock
in
js
sub
f2xm1
leave
and
xor
or
jbe
push
jo
mov
in
push
jnp
adc
outsb
hlt
test
pop
movsl
mov
das
xor
sbb
jp
xor
mov
scas
scas
out
movsl
sub
pop
repnz
mov
or
loop
xlat
shll
das
stos
xor
fcom
pop
fucomi
push
sbb
addr16
and
outsb
dec
jb
push
jns
stc
rorb
and
fbstp
jp
repz
es
xchg
and
test
pop
jo
test
cmp
sbb
mov
inc
mov
out
into
daa
addr16
scas
ja
es
mov
add
rcll
repz
movsb
bound
lcall
and
popa
push
xor
stc
setns
mov
in
js
xchg
hlt
cltd
sbbb
inc
movsb
and
inc
and
and
adcb
out
mov
icebp
rorb
dec
mov
mov
and
and
pop
mov
add
sbb
andb
inc
addr16
cli
shl
adc
sti
cmc
or
stos
pop
loope
adc
dec
ja
inc
and
fdivrl
cmpsb
int
inc
out
out
pop
call
mov
jge
lods
out
mov
jnp
jbe
jle
xor
int3
jp
xorl
xor
mov
mov
dec
inc
sub
xorb
push
jne
jae
je
inc
cli
lcall
divl
aaa
pushf
xchg
movsl
cmp
sub
mov
inc
inc
packsswb
fistpll
pop
or
lret
lahf
loopne
les
adc
jae
mov
daa
mov
pop
mov
cmc
jmp
lea
sbb
ret
xchg
and
pop
repz
into
jmp
sbb
mov
daa
push
mov
outsl
into
sub
leave
mov
movsl
insb
rcll
adc
clc
inc
sti
js
push
mov
jnp
dec
lret
xchg
mov
xorl
add
cmp
or
cmp
lods
and
dec
repnz
lret
jmp
add
sahf
sub
pusha
dec
dec
add
call
mov
aam
push
sub
shlb
mov
stos
xchg
aad
cmp
fwait
xor
dec
sub
or
ss
stos
lret
fiaddl
mov
icebp
jns
push
mov
insb
cwtl
inc
stos
imul
adc
push
pushf
enter
jmp
loop
adc
dec
int
xchg
and
xor
fmull
and
dec
push
out
xchg
call
rcll
jbe
ds
ret
test
shll
ret
or
imulb
orb
test
movsl
mov
mov
pop
mov
xor
pop
pop
lds
cwtl
popf
push
push
and
cmc
push
cltd
jg
je
idivl
cmp
jne
ljmp
push
sbb
mov
sub
jmp
adc
mov
pushf
sub
pop
and
sub
mov
lods
pop
sti
addl
adc
push
enter
loope
sbb
roll
test
daa
and
xchg
xchg
fnstcw
xor
jecxz
or
mov
pop
xchg
jmp
jmp
adc
dec
inc
add
cmc
xchg
pop
jae
pop
push
mov
push
push
fwait
sbb
push
ret
int
pop
pop
adc
aaa
push
aas
mov
cltd
test
cmp
jmp
push
add
xchg
negl
lock
or
sbb
mov
fs
jecxz
cs
and
pop
pop
orl
adc
in
mov
gs
jge
xchg
data16
jnp
sbb
dec
xchg
adc
dec
jecxz
sub
pop
into
xchg
es
repz
cld
jecxz
movsb
xchg
imul
sbb
sbb
fisubrl
push
in
sub
sbb
je
pop
push
xchg
out
addb
sahf
test
lock
aaa
xor
lahf
adc
pop
es
or
outsb
mov
jg
pop
test
adc
or
fistpl
std
jmp
push
cwtl
cmp
imul
imul
push
jns
xor
sbb
and
or
mov
cs
lahf
mov
mov
movsl
inc
jg
dec
popa
dec
mov
cmp
out
movb
xor
pop
test
mov
dec
enter
jecxz
cmc
dec
sbb
out
out
or
cmp
cmp
add
mov
mov
cld
cmp
push
xor
cwtl
and
nop
fbstp
insl
push
es
in
sbb
arpl
adc
loope
and
ret
mull
add
jae
jl
mov
cs
iret
and
hlt
xchg
ss
lcall
clc
mov
jno
pop
imul
fsubs
test
dec
jge
shl
pusha
out
insb
lret
xor
lods
mov
sbbb
das
icebp
iret
cmpsl
push
dec
and
popa
mov
xchg
add
lret
sarl
data16
clc
imul
cmp
push
mov
xorb
or
lret
insl
inc
pop
xchg
lcall
jbe
sub
popf
out
mov
jp
mov
pusha
fwait
in
mov
ret
movsb
ds
pop
fs
lcall
in
cli
loop
call
dec
loop
lahf
data16
inc
sbb
mov
pop
sub
mov
and
test
gs
addr16
cltd
push
lea
cmp
les
cmp
mov
push
cmp
ja
scas
mov
sbb
ret
iret
push
gs
enter
out
dec
adc
add
test
mov
test
out
mov
inc
loopne
test
mov
in
testb
sub
lcall
mull
push
push
mov
imul
mov
aas
sbb
inc
mov
jns
pop
mov
cld
shlb
jmp
jnp
mov
sub
inc
outsl
and
cmp
pop
or
idivb
fsubs
mov
xchg
xchg
int3
jbe
cli
and
push
fidivs
mov
imul
lods
mov
ja
ljmp
ret
call
js
cwtl
setb
in
lcall
pop
sbb
adc
mov
imul
lret
fsubrl
fs
inc
sbb
fnop
jl
std
pop
shlb
loope
xor
mov
fucomip
adc
mov
push
jmp
loop
xchg
insb
repnz
sbb
adc
mov
xor
push
add
scas
out
dec
sub
lcall
bound
fadds
mov
mov
xchg
xlat
bound
push
jnp
movsb
xor
lods
sub
pop
aaa
xor
mov
insb
stc
pop
xchg
add
jge
xchg
mov
lret
cmpsl
jne
push
mov
lret
ret
or
pop
pop
pop
div
movsl
mov
mov
cs
cmpl
je
add
add
push
insl
fdivr
add
repnz
sbb
jnp
push
ja
xlat
test
jle
pop
movsl
daa
push
sbb
addr16
sbbl
movsl
xlat
hlt
cmp
das
inc
cltd
pop
jbe
out
cwtl
xchg
mov
inc
xor
mov
mov
stos
lahf
adc
pop
mov
int
mov
das
out
and
mov
sub
xchg
sub
imul
fstpt
add
jp
xchg
mov
stc
inc
rcrl
adc
lret
cmpsb
ud0
cmp
sub
xchg
jp
out
push
mov
es
ror
shll
orb
fildll
fmuls
mov
mov
ss
xchg
sahf
sbb
push
mov
test
or
inc
xor
pushf
and
mov
jnp
cmp
xchg
enter
fimull
cmp
imul
ss
iret
in
scas
mov
sbb
jno
mov
cmp
outsb
daa
in
ret
and
cmpsl
cmp
xor
ret
jg
cs
data16
in
and
cmp
mov
test
cli
pop
in
push
repnz
and
sbbb
push
out
fwait
cmp
cmp
test
mov
ljmp
inc
adc
dec
cmc
lahf
mov
mov
repz
repz
lock
pop
fists
mov
mov
pop
dec
sar
push
add
decl
sbb
inc
cli
pop
add
es
cld
or
gs
or
sub
mov
loope
add
jp
das
add
subb
outsl
iret
dec
fsubrl
adc
outsb
cmp
mov
fistps
mov
jecxz
int
cld
sbb
les
loopne
ret
mov
neg
enter
push
jae
add
inc
ss
lea
pop
outsb
mov
sti
mov
mov
adc
dec
fnsave
pop
lea
push
ja
ss
imul
add
jmp
dec
rep
pop
add
add
data16
inc
aam
jne
xchg
subb
pop
jmp
sahf
imul
cmp
add
ror
sbb
xchg
xchg
push
sbb
fsts
and
fwait
stos
push
inc
dec
iret
mov
add
fcmove
cld
out
mov
or
bound
ljmp
push
cmovno
popa
outsl
aam
cwtl
clc
mov
and
aaa
shll
fucomp
mov
lods
pop
ljmp
rol
inc
xchg
jo
jp
xchg
aas
mov
sbb
lret
arpl
out
and
push
leave
imul
sub
and
xchg
xor
cmpb
jle
dec
adc
lock
or
ror
inc
loope
pop
and
aam
xchg
inc
push
xchg
jb
xor
in
bound
lods
pop
jecxz
xchg
xchg
inc
test
xorl
add
lds
and
dec
mov
push
ret
ret
pop
dec
jle
loopne
inc
dec
push
clc
mov
mov
mov
xor
clc
stos
cltd
bound
nop
inc
mov
aas
popa
sbb
aad
imul
xchg
cmc
push
fisubs
sub
hlt
call
adc
add
jne
cmp
xchg
push
leave
dec
clc
pop
aad
cwtl
inc
inc
inc
in
stos
shl
leave
mov
out
stc
jne
loop
inc
sbb
adc
jp
xorl
pop
orb
push
mov
es
stc
sahf
jae
shlb
out
scas
pop
outsb
paddb
cmpb
push
js
popf
int3
add
mov
lea
stos
fdivrl
jp
inc
dec
mov
cmp
test
xchg
lret
mov
cs
mov
inc
push
cmp
dec
inc
jnp
xchg
pop
add
push
es
pop
ljmp
xchg
xor
addr16
test
mov
push
popa
dec
hlt
jns
add
outsb
jns
lods
cmp
and
push
hlt
or
cmpsb
mov
pop
mov
xchg
cmp
sahf
mov
outsb
test
pop
xchg
lds
cmp
cmp
jl
call
insb
stos
out
mov
adc
fcoms
inc
in
divb
fcoml
fisttpll
jmp
jns
daa
ret
mov
xchg
sahf
mov
push
hlt
mov
int
and
push
in
lret
inc
je
shlb
inc
mov
js
push
jge
inc
insl
sub
mov
mull
jbe
or
dec
mov
mov
fisttps
test
jae
adc
dec
sahf
or
sub
out
or
cld
mov
std
inc
add
hlt
sub
lock
aad
adc
add
into
ret
cmp
sub
or
and
addb
push
call
je
dec
popa
jmp
xchg
add
and
pop
inc
int3
mov
divl
ror
sbb
dec
adc
jl
and
sahf
fisubs
and
cmp
mov
lret
rcl
hlt
xchg
fisubs
ss
lahf
mov
mov
pop
das
push
push
gs
dec
rcrb
adc
fmul
xor
xlat
add
pop
mov
int
add
or
and
mov
mov
push
lods
clc
shl
jbe
sub
push
adc
pop
adc
sti
popl
aaa
sbb
xchg
pop
push
leave
int
aad
mov
sub
std
aad
movsl
jbe
rol
ljmp
fidivl
imul
fidivrl
mov
adc
add
into
decl
sub
outsb
test
scas
mov
daa
ja
mov
ljmp
sub
shll
mov
outsl
in
mov
inc
pop
lfs
int3
inc
pop
es
in
addr16
hlt
add
ja
lret
pop
daa
sbb
ss
pop
sub
xchg
jne
imul
add
stos
int
cmc
xor
lds
enter
mov
sbb
push
fstpl
inc
dec
lret
mov
sbb
jl
xlat
jnp
pop
test
test
adc
and
lret
divl
loope
sbb
xchg
pusha
rolb
test
aam
inc
xor
ret
icebp
jle
fwait
sbb
aas
fwait
sahf
lods
mov
subb
push
jecxz
pushf
push
jg
sbb
jge
in
incb
jg
dec
mov
out
dec
push
or
mov
and
mov
mov
jle
adc
sub
sbb
scas
sar
jmp
int3
jno
xor
icebp
cmovns
mov
out
js
mov
jmp
stos
jmp
inc
call
dec
sahf
pop
pop
adc
mov
sub
in
imull
xor
popf
shr
xor
imul
cmp
xor
orl
fs
xchg
and
adc
sahf
pop
jne
adcb
push
cmp
rcrl
in
adc
into
out
outsl
mov
mov
sub
shrb
mov
hlt
int3
or
loopne
imul
mov
mov
mov
cwtl
fldcw
pusha
xchg
cmp
imul
out
inc
in
jns
add
cmp
fmulp
sub
dec
and
jb
ja
xchg
popf
mov
es
fildl
int
add
fcompl
pop
inc
jns
adc
cmpsl
sbb
mov
int
jle
jo
out
pop
cmp
xchg
add
dec
sahf
sbb
push
xor
pushf
into
xchg
cmp
repnz
sbb
cmp
jo
stc
mov
push
sti
shl
push
sbbl
nop
out
pop
sbbb
jno
lcall
ret
xor
sbb
fisttpll
sub
sbb
push
sbb
push
out
out
pop
xor
repz
cmpl
lret
sub
pop
pop
jns,pt
mov
pop
les
and
pop
subb
sub
call
outsl
dec
or
mov
jne
aaa
out
sbb
inc
xorb
pop
push
movsb
int
dec
push
stos
cmp
sub
xchg
cmp
outsb
mov
scas
xchg
xor
mov
push
loop
pop
fstpl
adc
cmpsb
pop
dec
sbb
notb
push
sbb
aaa
imul
imul
stos
outsl
add
push
into
test
fcmovb
mov
lea
mov
adc
hlt
test
mov
ds
xor
mov
fbstp
icebp
add
xchg
cmp
sbb
xchg
mov
inc
in
ret
jnp
repnz
sti
jo
aam
lods
xchg
dec
push
leave
pop
cmpsb
xor
jae
scas
mov
xchg
mov
das
push
in
xchg
inc
jae
pop
cltd
xchg
push
mov
xchg
or
xor
stos
and
jae
lret
cwtl
mov
dec
in
mov
pop
iret
dec
sub
negb
dec
loopne
jno
fwait
leave
hlt
pop
les
dec
mov
out
pushf
sub
sbb
inc
inc
scas
mov
roll
mov
pushf
push
xor
push
subl
and
push
repz
in
pop
adc
cmp
jns
mov
xor
clc
sub
push
aad
cmc
mov
jne
outsl
or
sub
dec
loop
lock
sub
std
fdivrs
gs
rorl
sarb
xchg
adc
test
inc
adc
push
cmp
sbb
faddl
xchg
dec
iret
cmpsb
inc
cmp
xor
xor
addr16
test
push
sbb
sbb
adc
push
push
and
loope
push
push
test
negb
mov
pop
fidivrl
xor
xchg
sub
sbb
push
jnp
jg
xchg
mov
test
push
push
fdivrl
loopne
ja
pop
adc
pop
enter
fcoms
insl
icebp
push
stc
xor
push
test
fcomps
lods
icebp
jmp
mov
int3
ret
fiaddl
test
ss
shlb
mov
sahf
cld
dec
lahf
pop
inc
xchg
arpl
repz
xchg
ljmp
idivl
in
or
jmp
test
test
cs
cmp
addl
xor
adc
xlat
adc
mov
ficompl
jge
add
addr16
roll
mov
and
mov
inc
and
call
jp
adc
sub
jns
rcrl
cmpsl
sub
enter
lock
mov
gs
ds
add
inc
lods
mov
push
in
xor
scas
loopne
mov
lahf
fisubrs
dec
aas
enter
pusha
mov
or
dec
mov
icebp
ja
xchg
nop
iret
ss
std
mov
jo
popa
jp
mov
fisttpll
out
lea
dec
cmc
sub
xor
pop
aaa
pop
push
test
pop
mov
jmp
ficomps
ja
xchg
mov
adc
xor
lods
mov
imul
jge
jno
out
arpl
inc
dec
fmuls
stc
clc
and
cld
nop
push
sub
test
cmpb
jbe
lahf
inc
aaa
and
int3
lods
in
add
pusha
and
sub
adc
xor
call
inc
mov
lock
insl
es
pop
add
pop
mov
mov
xorb
push
int
into
pop
push
and
mov
cmpsl
mov
and
pop
test
stos
push
int
cmp
sahf
adc
ds
xor
pop
add
push
mov
jecxz
mov
lea
loope
leave
daa
pusha
cmp
dec
gs
cmc
or
mov
mov
add
scas
xor
call
shll
pop
push
sbb
xor
jecxz
push
mov
dec
in
lea
fldt
testl
test
into
sbb
adc
adc
jno
add
or
shll
cli
rorl
cmp
mov
popf
stos
xor
or
jl
popf
scas
jecxz
scas
mov
cmp
pop
ss
mov
imul
mov
je
sti
lods
xchg
mov
aam
xchg
clc
push
stc
ss
jge
add
insb
cmp
frstor
cs
xor
testl
loopne
jle
add
test
jns
lods
cld
neg
xor
mov
iret
addr16
aad
and
stos
cli
insb
mov
xchg
into
ficoml
xor
es
xor
aaa
and
adc
fbstp
test
inc
adc
in
sbb
in
jno
xor
rcll
aas
sarl
sub
sbbb
repnz
xchg
adc
lret
cwtl
enter
xchg
int
pop
pop
fcom
pop
aad
sbb
sbbl
push
jl
cmc
mov
int3
push
cwtl
mov
insb
out
repz
mov
fwait
xchg
and
add
lahf
push
hlt
loope
mov
dec
popf
clc
sbb
mov
cmp
pushf
fxch
push
and
test
fistpl
aas
jl
jg
andl
xor
push
enter
adc
dec
sbb
fcmovb
xchg
push
out
jnp
cmc
popa
mov
test
pop
inc
adcl
and
fistpll
pcmpgtd
dec
add
fwait
push
pop
movsb
jl
int
repnz
aas
inc
mov
in
stos
push
fcompl
cmpsl
mov
jno
inc
mov
addr16
pop
mov
or
pop
xor
push
mov
and
pop
insw
push
push
adc
mov
stc
push
xchg
fildl
rcrb
xor
in
jae
pushf
sub
fnstenv
jle
adc
js
jl
dec
hlt
lret
mov
adc
icebp
jl
lds
leave
push
sub
inc
cmpsb
fwait
shlb
mov
aam
addr16
es
int
jo
adc
mov
loopne
jl
out
mov
push
pusha
dec
mov
push
sub
cmpsb
pop
pop
mov
punpckhbw
lcall
leave
outsl
and
fsincos
pusha
adc
xorb
push
pop
dec
or
lahf
hlt
sbb
gs
inc
sbb
cltd
xchg
mov
xchg
dec
inc
mov
imul
in
dec
push
xchg
mov
pop
bound
mov
daa
xchg
adc
ret
fstps
rclb
xor
push
push
or
adc
xor
xlat
js
jns
inc
adcb
mov
xor
mov
enter
sti
scas
dec
mov
mov
cmc
sahf
push
imul
cmp
pop
pop
cmp
cld
ror
neg
out
shlb
orb
xor
sbb
adcl
and
mov
jecxz
popf
sub
aaa
inc
fistpl
fcom
aam
cmpsb
in
shlb
in
test
xchg
push
cmpsb
lret
pop
and
loopne
cmpsb
sbb
push
fldenv
repz
test
es
dec
dec
stc
dec
sahf
add
fistpl
cwtl
sbb
jo
inc
or
add
iret
or
mov
or
ja
inc
inc
vpsubusw
hlt
jb
outsl
mov
imul
jb
dec
jmp
push
jmp
shll
cwtl
clc
inc
add
jge
mov
mov
mov
and
mov
movsl
lods
sti
push
lahf
push
dec
jmp
mov
std
push
iret
sbb
sub
mov
pop
or
and
jecxz
add
sbbb
icebp
dec
xlat
jnp
in
dec
scas
cltd
leave
aad
pop
adc
mov
fs
stos
mov
xchg
and
push
out
pop
out
in
add
dec
arpl
test
jne
nop
jns
andb
adc
icebp
loop
push
dec
push
subb
lock
push
pop
dec
xchg
inc
out
js
pop
and
inc
mov
out
imul
aas
mov
jecxz
pushl
sbb
lods
sbb
xor
and
cmp
mov
mov
adc
frstor
je
setbe
jmp
std
mov
aam
or
ss
iret
dec
add
jmp
mov
add
add
fistl
jnp
enter
mov
adc
cmp
testl
mov
jmp
adc
lahf
pop
dec
xchg
lret
sub
push
or
call
mov
lgs
add
mov
jno
push
ret
push
hlt
sub
push
negb
mov
jmp
pop
dec
mov
fnstenv
mov
push
and
mov
xor
vdivps
cmp
add
cs
clc
cmc
fbstp
mov
sti
xchg
sub
scas
out
inc
orb
lea
sub
lods
arpl
xor
xor
adc
pushf
js
in
pop
cli
inc
cli
cmp
cmp
addr16
lahf
ds
cmp
pop
cmpsb
and
cs
fisubl
aas
orl
icebp
mov
testb
icebp
cmp
inc
adc
add
fcoms
cmpsb
push
sub
xor
ror
rcrb
test
dec
popf
decb
dec
push
jp
sti
cmp
cmp
jl
aad
rcrl
cwtl
test
jl
sub
daa
iret
out
pop
and
fnstsw
sti
std
call
cmpsl
test
imul
mov
aaa
into
cmc
xchg
mov
inc
pop
jmp
lds
sbb
leave
out
sbb
test
push
xlat
loop
shl
or
sub
in
jnp
shll
push
and
loop
and
and
mov
lods
jo
jbe
daa
movsb
pop
or
mov
or
mov
es
xchg
push
pop
cs
pop
inc
hlt
pop
mov
jmp
mov
push
pop
xchg
fisttpll
mov
and
cmp
mov
ret
mov
mov
divb
fwait
imul
jo
mull
out
dec
test
jnp
or
inc
mov
adc
push
into
mov
cmp
fiadds
inc
sbb
leave
jmp
roll
fwait
cmp
jg
pcmpgtb
dec
test
inc
rol
mov
insb
out
push
add
dec
add
fwait
ss
cmp
push
and
out
std
es
out
incb
xchg
xor
mov
xor
call
lods
je
imul
mov
mov
dec
ljmp
das
sti
sbb
adc
pop
cmp
cmpsb
mov
das
adc
enter
cmpsb
pop
cs
inc
ja
or
mov
jb
outsb
ror
pop
aas
cmc
push
test
mov
int3
add
fsubrl
outsb
dec
cmc
fs
sahf
inc
outsb
mov
into
sbbb
fidivl
stos
mov
fisubrl
jl
and
mov
xor
dec
cwtl
sbb
adc
movsl
rorb
mov
fs
leave
jmp
add
imul
or
in
nop
pop
xor
jbe
inc
mov
jnp
test
popa
sbb
call
negl
add
lcall
cmp
dec
pop
or
push
or
push
rcrl
shll
add
pushf
mov
push
dec
js
mov
ficoms
stc
rolb
push
jg
hlt
or
and
inc
jmp
add
xchg
adc
push
push
out
loopne
xor
and
xchg
scas
out
xchg
mov
loopne
jl
push
xchg
ds
add
push
cwtl
popf
mov
insb
out
push
inc
mov
ret
sub
repnz
add
out
adc
and
movsb
leave
mov
stos
inc
sbb
sub
adc
mov
scas
lret
outsb
sti
push
inc
adc
test
xchg
push
xchg
loope
inc
cli
pop
mov
sub
adc
daa
in
lods
mov
add
add
and
test
push
fsubl
lds
adc
inc
shll
adc
and
add
pop
roll
lock
shlb
add
es
push
aas
cltd
rcr
out
and
inc
and
or
jne
out
loopne
mov
imul
xchg
dec
sbb
sbb
test
shll
push
bnd
dec
test
lcall
mov
jle
in
mov
mov
xchg
lcall
lret
inc
movsl
ja
in
arpl
nop
add
xchg
dec
lods
mov
inc
adc
iret
add
sbb
mov
fisttps
movsb
andb
push
gs
cmpsb
ret
mov
cs
into
jbe
xor
dec
filds
sahf
mov
inc
fmull
xchg
or
xor
mov
jmp
sahf
cmpsb
jne
adc
sub
inc
fdivl
cmp
lret
mov
mov
hlt
dec
imul
fbstp
dec
sub
fs
lds
push
test
hlt
rcrb
cwtl
rolb
movsb
fcomps
mov
pop
in
and
dec
nop
sub
ficomps
pop
mov
movsb
adc
gs
rol
sbb
cltd
jno
ljmp
push
dec
sti
mov
dec
mov
idiv
jae
xlat
xchg
push
cmpsl
mov
or
push
mul
mov
sub
and
push
or
sbb
ss
push
test
out
and
adcl
lret
xchg
mov
lcall
ja
pop
cmpsl
or
cmp
outsb
add
mov
mov
lods
pop
cwtl
mov
int
mov
es
or
iret
stos
hlt
or
cmc
push
fsubl
or
mov
lock
sub
aad
das
cmp
xor
sahf
icebp
mov
ret
adc
jnp
sar
dec
add
push
cmp
in
xor
jge
sub
repz
adc
pxor
icebp
mov
mov
popa
adc
sbb
push
jmp
xor
mov
aas
jno
push
in
cmp
sbb
jnp
hlt
test
mov
pop
pop
sbb
mov
jnp
adc
movl
jno
and
scas
sub
movsl
cmp
push
nop
sub
fcmovnbe
and
adc
fwait
cmp
in
jg
fwait
mov
ds
into
dec
inc
or
push
lret
decl
cli
jae
enter
pushf
add
and
add
into
push
cs
or
cli
mov
add
stos
cmp
cld
bound
pop
adc
test
push
imul
mov
xchg
outsl
mov
test
pop
mov
xor
pop
push
jle
push
cmpsl
loope
mov
inc
aam
pop
push
cmp
xchg
or
ret
dec
movb
jnp
sbb
aad
fisttpll
lods
xchg
sbbl
aas
out
hlt
push
adc
dec
cmpsb
ljmp
arpl
sbb
test
fidivl
mov
push
push
push
data16
dec
aam
xor
sbb
into
das
loope
pop
mov
shll
pop
pop
add
aas
lds
insb
arpl
inc
mov
cmp
das
sbb
test
aaa
adc
inc
stos
je
adc
out
test
inc
push
mov
xchg
xorl
fwait
mov
xor
lcall
pop
lods
in
fadds
scas
mov
mov
mov
xchg
dec
ret
iret
inc
jp
xor
push
jo
jbe
sbb
inc
inc
insb
adc
movsb
jne
xor
mov
inc
in
rcrb
xchg
pop
ret
fdivp
or
and
aas
das
add
add
mov
push
adc
mov
das
mov
shlb
imul
stc
je
adc
xchg
dec
and
inc
into
xor
mov
pop
ds
mov
adc
or
mov
psrlw
xor
inc
mov
xor
ljmp
test
in
lret
xchg
loopne
test
dec
nop
std
data16
call
sbb
cli
add
or
out
and
loopne
stos
jp
xchg
movsl
jg
addr16
jmp
sbb
push
mov
dec
adc
jb
mov
dec
jae
idivb
fisubs
push
push
ss
es
ss
jecxz
cltd
stos
dec
pop
repz
or
inc
dec
std
dec
push
adc
ja
push
or
pusha
mov
movsl
fiaddl
cmp
out
lret
mov
sub
arpl
pop
sub
test
cmp
dec
fstps
sbb
inc
jnp
stos
xchg
jge
push
push
adc
sbbb
daa
ds
popf
inc
ret
mov
xor
sbb
aam
jg
fistl
mov
xor
bound
push
dec
jmp
rcr
add
xchg
or
hlt
in
mov
sbb
frstor
jge
cmpsb
call
add
in
bound
add
sub
sub
daa
jmp
inc
push
je
rorb
xchg
int
fs
or
flds
insl
call
adc
shrl
dec
clc
pop
xchg
leave
sti
jmp
filds
fs
pop
mov
push
push
mov
ljmp
iret
jns
jo
add
ds
sar
bnd
xor
rcll
jg
and
orb
dec
icebp
cmp
xchg
and
stos
andb
cwtl
dec
je
dec
adc
lcall
mov
mov
scas
scas
jl
cmp
sub
add
outsl
jns
dec
jb
push
add
shlb
or
mov
mov
jns
popa
inc
mov
xor
jg
insb
adc
scas
mov
insl
cmp
and
lock
dec
add
pushf
mov
xor
cltd
xchg
xchg
scas
push
aas
aaa
sub
cltd
cmp
adc
int
call
add
mov
enter
testl
aam
dec
nop
jmp
icebp
jae
rcrb
outsl
mov
mov
add
inc
add
pop
add
xor
or
push
mov
dec
pop
adc
sub
pop
int3
in
insl
fsubp
adc
arpl
test
or
jae
out
pop
jge
js
imull
push
inc
fldt
enter
sub
mov
inc
pushf
fsubs
push
pop
sub
inc
mov
enter
inc
xor
test
insl
mov
inc
sub
daa
jb
sbb
xchg
cmpsl
adc
incb
jge
sbb
pop
pop
pop
daa
and
cmp
sbb
or
or
sarl
stos
mov
cwtl
rorb
cwtl
mov
adc
mov
fwait
jae
xorb
dec
mov
addl
leave
rcrb
mov
in
icebp
add
or
xor
rorl
aas
jmp
xchg
nop
into
jbe
loope
mov
sbb
mov
fwait
insb
add
mov
mov
cwtl
std
jb
push
enter
out
sahf
andl
push
outsb
ljmp
xchg
push
jge
shrl
test
lea
mov
int
cmp
in
rorl
jne
push
dec
or
push
fwait
inc
mov
pushf
aaa
psubsw
mov
ss
out
sub
mov
aas
cltd
dec
push
pop
xor
xchg
push
jmp
movd
mov
cmpsb
push
cmp
pop
sbb
test
stos
addr16
mov
lret
xchg
mov
stc
and
lea
bnd
sub
xchg
jno
in
das
pop
out
lods
imul
dec
adc
clc
in
dec
jnp
arpl
jmp
mov
scas
adc
inc
or
mov
test
push
mov
xlat
incl
call
lods
movsl
inc
mov
inc
or
push
pushf
scas
mov
mov
gs
xor
push
adcl
jno
cmp
xor
nop
rolb
ret
addb
jge
enter
je
add
ret
mov
xor
mov
mov
cmp
cmpsl
rolb
xor
fistps
mov
jg
mov
iret
int3
pop
pop
rep
sub
repnz
mov
insb
xlat
mov
inc
js
out
sbb
insb
rcll
mov
sahf
mov
int
push
adc
push
xchg
push
dec
icebp
sbbb
int3
add
adc
int
incl
loop
imul
pop
adcb
popf
xorb
movsb
int
loope
sbb
dec
sub
mov
and
inc
jbe
and
sarl
ror
cli
cmp
jo
and
mov
push
loope
push
push
sub
sub
xchg
nop
mov
repnz
ficomps
pop
mov
inc
out
and
mov
mov
pop
push
std
lret
test
sbb
sti
sbbb
mov
mov
lahf
push
call
push
stc
addb
cs
loope
pop
imul
and
andb
pop
add
adc
sbb
fwait
pop
loopne
cmp
jmp
inc
into
push
dec
mov
ret
push
sbb
sbb
mov
scas
sbb
dec
mov
sub
in
fcompl
push
pop
lods
enter
sti
aam
dec
arpl
push
pop
ljmp
xchg
call
or
mov
out
mov
push
lds
xchg
push
lods
int3
xchg
dec
stos
cmp
icebp
arpl
imul
dec
inc
add
shl
sarl
rcrb
cltd
outsb
or
pop
mov
int
pop
rorl
mov
lods
call
in
jno
add
repz
and
adc
popa
test
leavew
test
addr16
out
adc
aas
dec
inc
add
ret
inc
mov
dec
ror
or
repnz
ret
push
test
mov
xor
pop
jo
lods
dec
inc
pushf
gs
je
insb
xchg
cmc
mov
cwtl
iret
out
mov
pop
ret
scas
add
jmp
xor
andl
xor
ss
cmc
pop
out
daa
and
inc
push
xorl
negl
test
mov
jge
insl
pop
mov
adcb
pop
inc
sbb
outsb
or
xor
cmp
and
mov
or
add
aad
dec
imul
jle
sbb
jl
in
fstl
out
xchg
fs
inc
andl
imul
push
sbb
xor
ret
fnstcw
mov
scas
imul
scas
imul
lods
loopne
dec
pushf
sbb
mov
stos
mov
xchg
jae
adc
pop
push
fs
inc
lods
subl
add
sbb
jae
dec
inc
ss
dec
xchg
push
lcall
in
addr16
repz
cwtl
jl
sahf
daa
int
stos
dec
scas
lods
sbb
xchg
adc
decb
lea
xchg
xchg
mov
in
out
adc
enter
test
movsl
pusha
iret
enter
mov
mov
pop
stos
fwait
inc
xchg
adc
inc
mov
xor
sbb
sub
add
mov
jae
xor
in
arpl
data16
inc
sbb
mov
xor
inc
fwait
roll
mov
sub
outsb
mov
insb
insb
icebp
or
adc
mov
aas
leave
out
inc
aam
rorb
int3
jecxz
ret
aam
shl
and
adc
nop
mov
mov
ret
shr
inc
jns
mov
adc
mov
xchg
mov
pop
cs
xor
lds
fwait
push
push
fcmovu
push
and
dec
sti
adc
push
push
add
dec
jecxz
pusha
pop
pop
add
xor
fstl
fcoml
test
sti
shlb
out
inc
movsl
lea
cli
lcall
hlt
mov
jle
xchg
mov
and
scas
mov
mov
mov
and
push
stos
mov
scas
loopne
push
fldt
dec
popa
push
adc
and
mov
insb
rcll
adcb
in
insl
lods
gs
sbb
jne
mov
in
push
js
test
in
pop
jne
and
xor
cmp
into
aaa
sbb
push
dec
std
js
pop
adc
adc
adc
ljmp
repnz
dec
rol
mov
out
js
lcall
xlat
cmp
sub
data16
imul
les
fdivrl
pop
adc
pop
add
inc
lret
add
mov
popa
pop
sub
xchg
adc
rcrl
repnz
pop
fimull
or
ror
nop
pop
loop
and
pop
lret
inc
push
cmc
les
sbb
movsb
inc
negb
out
push
mov
das
cmp
push
jecxz
nop
rorb
lea
testl
dec
jo
cmp
inc
push
or
xchg
stc
test
movsl
cmpsb
sbb
add
pop
xchg
pop
sbb
add
aaa
sbb
push
push
lret
sahf
je,pn
popa
ficomps
inc
xor
fmull
push
adc
or
jge
dec
ss
dec
adc
dec
stos
mov
leave
cmp
cmpsb
shrb
push
inc
ss
arpl
sbb
div
jecxz
sub
movsl
cmpsl
and
lods
push
pop
jns
repnz
jns
ljmp
in
cmp
push
sar
loope
dec
in
shll
xor
push
mov
cwtl
call
sub
sub
pop
repz
int3
add
lea
rcrb
pop
jmp
mov
mov
loop
dec
add
push
adc
and
cmpsl
call
jg
in
nop
cld
mov
stc
add
mov
xchg
mov
ret
jl
cmpsb
mov
jno
jb
adc
jnp
pop
and
xlat
loope
jnp
repz
iret
adc
out
rolb
add
mov
stos
jns
jmp
sub
test
mov
out
push
repz
mov
jp
test
cli
mov
or
daa
fsubr
add
sub
pop
cmp
imul
aaa
cmpsl
outsl
push
dec
aaa
sub
mov
cmp
aad
push
lea
and
pop
inc
push
cmpsb
pusha
adc
addl
push
aam
xchg
mov
push
fs
popl
icebp
in
rclb
jo
or
push
sub
xchg
sub
int3
hlt
jp
call
imul
out
adc
out
scas
pop
push
arpl
ja
insb
push
fiaddl
adc
sbb
scas
in
xlat
adc
sub
mov
fsubr
sbb
sahf
add
mov
inc
and
rcll
es
imul
inc
pop
jae
jbe
sbb
fbld
fbstp
mov
jbe
cld
mov
or
jno
xchg
xchg
out
cmp
fistps
and
adc
jecxz
rcrb
push
xchg
push
test
ret
mov
mov
bound
js
sbb
or
cwtl
jnp
mov
lock
in
inc
or
fbld
mov
pop
sub
call
fidivrs
nop
pop
ds
dec
mov
pop
fnsave
xchg
test
xorl
inc
jne
icebp
mov
ss
dec
aaa
ja
in
jp
int
mov
xchg
add
cmp
push
adc
push
jae
notb
jp
cmp
push
iret
lret
in
mov
in
mov
cmp
adc
and
push
insl
xchg
jbe
xchg
jbe
xor
jb
adc
test
or
mov
out
jns
or
inc
jg
xor
mov
or
xor
xchg
dec
xchg
sub
out
insl
fnstenv
stc
ss
enter
mov
in
mov
scas
or
xchg
pop
dec
testb
pop
lds
imul
xchg
js
adc
fcoms
andb
jg
in
mov
push
push
cmp
repz
sahf
shll
cltd
fxch
and
mov
mov
fnstcw
sub
sahf
xor
test
dec
adc
sar
lds
jmp
es
pop
pop
xor
sub
mov
cs
std
lcall
jnp
mov
sub
dec
hlt
lret
dec
or
dec
iret
jp
add
xchg
je
jbe
mov
xchg
idivl
adc
push
aad
fistpl
xchg
arpl
ret
push
fcoml
sbb
cli
or
sbb
sahf
fucom
in
dec
or
stc
mov
jnp
add
mov
arpl
test
insl
imul
adc
out
gs
xchg
movsb
in
loope
int
ja
addl
loope
ljmp
fdivr
pop
cmc
paddw
mov
je
sub
mov
popf
adc
xchg
dec
inc
add
insb
push
add
jmp
js
mov
dec
or
inc
pusha
jb
jg
pop
lock
les
popa
adc
push
adc
jp
cmp
divps
fs
hlt
scas
jge
cmp
mov
je
dec
add
or
xlat
xor
adc
xchg
mov
test
rcrb
mov
stos
ja
adc
push
adc
mov
jo
jmp
pushf
mov
jge
and
cli
sbb
inc
insb
addl
jl
and
lret
cmp
pop
mov
push
inc
mov
xchg
push
and
pop
cltd
pushf
inc
aad
sub
mov
adc
cmp
adc
lea
mov
dec
add
mov
mov
dec
imul
fadd
jb
stos
icebp
je
sub
xchg
dec
int3
mov
dec
adc
dec
xor
mov
add
loop
lock
push
push
insl
cwtl
bnd
jg
into
push
cmp
mov
js
ss
adc
pop
out
add
sbb
icebp
mov
idivl
jecxz
sbb
sbbl
or
ss
jae
push
dec
sub
daa
add
and
sub
out
scas
or
inc
inc
pop
dec
sti
fsubrs
adc
test
lods
cmc
nop
aaa
mov
mov
add
jecxz
pop
leave
cmp
jge
js,pn
mov
inc
mov
mov
scas
push
push
rorb
jp
xor
bswap
imul
lahf
cmp
push
cld
dec
jb
mov
or
ds
jmp
add
mov
iret
mov
hlt
jmp
or
add
xchg
xchg
jg
xchg
sub
adc
mov
ss
dec
cmp
js
enter
je
xchg
nop
stos
arpl
jns
scas
mov
data16
aam
repz
repz
in
mov
jle
in
inc
in
sbb
dec
div
xchg
call
sbbb
das
pop
or
call
push
fwait
jecxz
sbb
adc
cmpsb
mov
rcl
mov
test
mov
ret
not
loopne
and
cmp
mov
sub
sbb
cmp
inc
out
test
in
inc
hlt
fisubrs
add
mov
xchg
pop
push
nop
test
xchg
gs
lret
inc
cltd
cmc
cli
pop
sub
jns
jge
xor
push
ja
push
mov
lods
inc
inc
gs
xorb
push
call
pop
stos
mov
out
cld
ss
pop
cld
test
xorb
or
in
repnz
lods
mov
pop
fcomps
loop
mov
cwtl
pusha
mov
pusha
sub
rcll
cld
xchg
push
jae
add
nop
sar
xchg
insl
out
mov
push
imul
mov
out
and
mov
push
sbb
sbb
sbb
ljmp
sbb
pop
js
or
fwait
pusha
negb
popf
cmp
je
dec
xchg
sub
std
sub
or
pop
repz
cmpl
sbbl
mov
xchg
push
cmpsl
gs
std
mov
sub
sarb
fldt
mov
mov
sub
push
call
fdivl
shrb
fiadds
scas
stos
sub
dec
repnz
sti
xchg
mov
bound
sti
mov
sbb
out
jne
sub
aam
test
inc
add
or
cs
xchg
and
repz
in
push
jne
add
scas
jecxz
lahf
dec
sbb
jmp
lods
pusha
sbb
sbb
adc
mov
sub
cmc
insb
mov
fidivs
pop
fdivrl
insb
mov
inc
cs
ficomps
fdivr
push
add
into
les
mov
or
notb
mov
xorl
add
icebp
lock
adc
cmc
xchg
das
fwait
mov
imul
xchg
cltd
jnp
pop
shlb
ds
jae
sub
xchg
add
test
push
loope
sub
add
dec
lock
adc
out
pop
xor
cld
jp
mov
mov
fnstenv
mov
lahf
dec
mov
jnp
outsl
push
imul
fmuls
cld
sbb
xchg
into
jne
sub
lret
aam
mov
imul
sub
jecxz
frstor
xor
inc
das
jmp
jge
nop
loop
jnp
or
sbb
in
lock
and
hlt
and
and
sar
sbb
lock
xor
and
push
mov
cmp
sbb
mov
insb
fidivrl
inc
adc
mov
push
cld
pop
cli
cmp
jbe
cmpsl
push
xchg
pop
inc
out
pmuludq
sub
mov
jle
push
addr16
imul
inc
cmc
lahf
outsl
les
jbe
fisttpll
mov
pop
pop
xlat
sbb
fucomp
mov
lret
pop
cmp
rorl
push
sub
cs
aaa
lret
mov
shll
inc
lock
pop
dec
mov
xor
arpl
mov
mov
push
pop
jp
lods
iret
scas
ret
mov
inc
mulb
fisubrs
stos
idivb
sbb
cld
loop
lock
mov
mov
xchg
daa
pop
insl
mov
std
xchg
iret
jmp
cs
or
outsb
mov
jbe
outsb
rcrl
add
jbe
lods
popa
flds
mov
and
add
fsubr
sbb
xor
push
mov
adc
nop
out
dec
inc
lds
filds
mov
jp
int
cmp
mov
outsb
stc
lea
xor
mov
bound
sbb
dec
mov
gs
jmp
mov
cltd
jae
pop
repz
nop
movsb
fs
clc
loopne
pop
shlb
sbb
xor
jecxz
adc
push
sub
inc
notb
jae
popa
or
test
mov
sahf
xor
adcl
lret
sbb
push
fucomi
sbb
push
ss
test
vmovdqu
or
enter
pop
fstl
sbb
mov
mov
push
scas
adc
xchg
aad
mov
mov
pop
inc
xchg
das
mov
ds
cmp
cmpsb
loope
rcrb
mov
icebp
ret
sub
dec
xor
sti
stos
sbb
call
xor
adc
mov
rcrl
aad
lea
movb
push
lahf
mov
jnp
loop
movsl
ja
xlat
add
ds
and
jo
imul
inc
fsubl
xchg
push
in
pop
push
mov
leave
ja
mov
cmp
pusha
jecxz
jae
ret
cmp
add
test
sub
or
ror
sbb
push
in
pop
and
dec
jae
sbb
addb
add
outsl
pop
fnstenv
sbb
push
lods
shl
test
out
imul
mov
std
scas
adc
shr
mov
rcrb
xchg
mov
push
adc
aas
push
push
mov
cmpsl
stos
test
inc
or
sbb
loop
or
ss
jns
in
loopne
mov
dec
enter
adc
ret
call
les
or
fdivrl
mov
cmpsb
in
repnz
jnp
mov
xchg
lock
fmull
mov
push
mov
dec
mov
cmp
pusha
loope
mov
inc
xchg
movsl
pop
xchg
in
sbbl
lds
xor
and
cmp
jle
sbb
mov
cmpsb
hlt
xor
iret
pop
hlt
lock
dec
jle
and
xchg
mov
popf
jmp
outsl
scas
fs
je
insb
jb
adc
fstl
and
lahf
mov
dec
push
or
lea
mov
mov
jg
mov
push
mov
vcvtps2pd
pushf
js
adc
loopne
jbe
xlat
shr
rcr
mov
push
push
xor
mov
arpl
insl
jecxz
lret
mov
xorb
pop
push
pop
fxch
xchg
adc
out
jae
inc
cs
pop
jns
xchg
outsl
adcl
ja
inc
mov
lret
cmp
dec
in
fdivl
outsl
cltd
mov
xchg
fmul
ljmp
into
cld
std
and
dec
movsl
xlat
aam
mov
mov
jo
iretw
movsb
cmpsl
push
inc
repnz
xchg
xchg
dec
inc
xchg
jb
mov
and
out
push
push
add
and
je
cs
pop
dec
jae
les
repz
cmp
mov
aam
mov
cmp
mov
jmp
xor
mov
aad
rcll
and
stos
or
movups
into
lcall
xchg
dec
or
testb
pop
push
add
ret
jne
cli
add
xor
xchg
jne
out
enter
popf
insb
jmp
jle
dec
sub
nop
cmpsl
mov
mov
cmpsb
jle
or
lods
outsl
add
mov
es
pop
out
xor
push
imul
js
add
in
or
xchg
lods
xchg
in
test
fwait
jns
ret
jbe
xor
inc
gs
scas
cmp
inc
add
inc
pop
add
dec
push
cmpl
jb
insb
sub
fwait
mov
push
pop
sahf
adc
cmp
xchg
mov
adc
push
int3
mov
or
xor
scas
out
sbb
movsb
lahf
outsb
lahf
inc
iret
in
mov
arpl
push
imul
sub
or
leave
dec
sbb
ret
add
jmp
jl
inc
popa
jnp
outsb
lret
movsl
push
inc
sub
mov
push
adc
and
and
inc
mov
sti
in
rorb
adcb
or
mov
cmp
cmp
mov
scas
dec
sbb
insb
push
imul
mov
push
into
adc
dec
jnp
mov
add
inc
int3
mov
es
pop
sti
fidivrl
jb
sub
and
sub
jl
jp
insl
fsub
repz
and
push
push
or
cmc
repz
out
div
jecxz
loope
or
ljmp
fsubrl
popf
push
mov
dec
int
inc
mov
xchg
aas
lods
and
imul
leave
jmp
pop
or
frstor
inc
mov
stos
mov
xor
ret
in
fldt
ffreep
pushf
and
aaa
jbe
sbb
cmc
or
xchg
or
dec
inc
enter
add
push
xchg
mov
adc
dec
or
sbb
mov
add
loope
and
lock
fs
adc
out
in
aam
das
out
roll
mov
test
adc
sti
jecxz
pusha
or
cmpsl
jl
sub
push
pop
push
xor
outsl
aad
push
leave
cmp
ds
nop
lret
mov
fsts
lret
hlt
imul
cmp
inc
push
dec
enter
mov
pop
aad
sub
cld
xor
out
mov
pop
mov
mov
cli
outsl
xchg
int3
inc
aas
add
jo
dec
mov
xor
xlat
loopne
xor
xor
push
or
stos
das
pop
pop
insb
scas
outsl
pusha
mull
mov
test
pop
imul
loop
jmp
out
xchg
sbb
fucomip
mov
shll
mov
push
jo
mov
lret
push
xorl
repnz
xchg
jns
mov
cmp
push
xor
stos
mov
jae
repnz
and
or
mov
adc
ficoml
fldl
pop
nop
mov
into
xlat
cmpb
out
jnp
jge
add
inc
repnz
xlat
and
pop
jae
add
cmp
outsb
pop
pop
in
cs
repz
aad
sti
jp
es
pop
or
mov
orb
mov
dec
imul
sbb
rclb
jp
cmp
mul
aad
int
popa
and
mov
pop
pop
pop
nop
out
adcl
pusha
in
fcomp
idiv
push
gs
inc
xlat
dec
xchg
mov
sub
jge
add
add
bound
and
or
sti
seto
adc
dec
or
lret
in
pop
jge
fcomp
inc
data16
fimuls
nop
bound
or
rcll
and
hlt
imul
popa
xor
jp
fildll
inc
jb
sub
dec
stos
stos
mov
push
mov
repz
stos
data16
out
pushf
mov
rclb
xor
fsubrl
dec
fistpl
sbb
ljmp
cmp
jbe
push
inc
adc
push
stos
das
fptan
inc
cltd
xchg
pop
jmp
xor
insb
fwait
ret
subl
jae
mov
jg
ret
lret
imul
cmp
xchg
fsub
popf
mov
add
mov
idivb
sbb
stos
add
pop
lahf
cmc
scas
cld
cs
jmp
mov
cmpsl
mov
insb
xchg
sbb
fldt
sahf
jb
ds
imul
inc
scas
adc
adc
or
dec
and
sbb
imul
add
mov
and
movzwl
and
sub
mov
add
push
mov
shrb
cmp
pop
fldcw
lods
mov
push
sub
int3
andb
popa
daa
scas
leave
add
lcall
sub
add
or
jge
jns
rcrl
idivb
pop
jns
jge
lock
stc
xchg
sub
mov
push
fisttpll
outsl
adc
outsb
mov
xor
push
add
or
or
lahf
rcr
getsec
and
stc
dec
lods
fadds
and
push
js
jne
and
add
sbb
adcl
pusha
adc
add
xor
les
dec
and
xchg
sahf
lock
cmp
pop
cmpsl
mov
sti
repz
cmpsb
fldln2
sub
fisttpll
jecxz
inc
filds
aaa
pop
mov
push
cld
daa
imul
iret
andb
ret
call
shll
pop
enter
icebp
sub
or
fnsave
es
jo
xlat
mov
push
pop
aad
mov
ja
scas
push
rcll
ja
scas
fisttps
xchg
dec
or
mov
mov
fimuls
out
pop
dec
imul
pop
ficoms
out
fdivs
imul
and
insb
ljmp
loopne
inc
jg
pop
mov
jecxz
mov
mov
dec
stos
leave
dec
mov
pop
fstpt
dec
rorl
cmpsb
movsl
fdivrs
pusha
mov
test
and
lods
int3
out
cmpsb
shrl
mov
dec
test
insl
out
mov
ljmp
cmc
sbb
pushf
leave
mov
fcomps
inc
popf
dec
repnz
imul
pushf
jae
mov
cmp
or
add
pause
push
inc
aaa
mov
xor
xorl
mov
call
jbe
sbb
jno
movl
imul
lcall
rol
mov
sub
popf
sbb
pusha
jmp
les
jb
lret
cwtl
lret
push
cld
jne
gs
mov
shrb
push
rorl
sub
pop
fsubl
push
mulb
pop
and
mov
out
add
icebp
cmp
or
sbb
add
cmp
and
dec
and
insl
xchg
leave
int3
add
xor
xchg
mov
mov
dec
mov
outsb
out
pop
stc
pop
loopne
jmp
scas
fucomp
fadds
sbbb
int
mov
cli
sub
out
inc
pop
gs
jecxz
jno
mov
dec
push
into
and
cmc
in
ret
daa
and
insb
dec
in
xchg
jno
inc
dec
clc
lahf
out
adc
xor
mov
jge
shrb
xchg
out
movsb
aas
fs
dec
and
aam
aas
mov
xchg
mov
sbb
std
inc
dec
popf
repz
nop
rcll
leave
push
sbb
push
jo
add
mov
loope
xor
test
enter
dec
and
rorl
loopne
or
dec
fistpll
scas
pushf
xchg
push
fwait
scas
and
insb
cmp
push
fwait
jns
fldt
push
cmpsl
mov
pop
andb
xor
jno
in
jne
xchg
mov
mov
and
lahf
repz
ficoms
and
and
popa
adc
imul
dec
add
ror
jae
sbb
lock
int
data16
subb
jecxz
push
out
subb
dec
inc
jge
loopne
xchg
adcl
xchg
jo
mov
mov
mov
popf
loopne
aam
mov
sbb
xchg
icebp
mov
jne
loope
pop
mov
push
pushf
mov
stos
and
xor
inc
sbb
jle
push
sub
addr16
test
jne
pop
mov
repz
pop
and
cmpsb
or
push
mov
idivl
inc
and
faddp
dec
dec
sbb
mov
out
push
add
movsb
sub
and
lea
xor
add
or
lcall
movsb
lahf
aaa
insb
aam
out
imul
or
cmp
aam
dec
jl
lods
cltd
aad
loopne
or
pop
sbb
mov
cltd
test
movsl
add
xchg
pop
pop
mov
jmp
and
push
je
cmp
int
xchg
cld
fisubs
dec
xor
lods
pop
mov
mov
int3
mov
inc
push
hlt
lock
movsl
xchg
scas
js
into
sbb
in
ljmp
jne
inc
das
xor
pop
push
daa
cmp
ret
add
sbb
insb
dec
int
add
inc
jbe
insl
mov
push
or
pop
ljmp
adc
mov
icebp
mov
movsb
into
call
addr16
mov
inc
cmp
push
adc
pop
int3
mov
icebp
js
pushf
mov
dec
addr16
pop
sbb
fs
sahf
sub
xor
mov
xor
cs
imul
adc
xlat
ret
jl
mov
push
ret
mov
shl
rolb
xlat
dec
inc
out
roll
insl
mov
dec
movsl
bound
jp
inc
xlat
test
call
adc
fidivrs
aaa
std
add
dec
test
xchg
inc
sub
xor
jo
shll
jecxz
xchg
mov
sbb
xchg
imul
orb
outsl
sub
dec
clc
inc
imul
stos
mov
jecxz
lds
pop
cli
mov
imul
ss
jge
push
sbb
setg
mov
jbe
iret
adc
dec
arpl
sbb
inc
pop
xor
outsl
mov
call
mov
xchg
stos
or
sub
xchg
mov
in
dec
and
ret
cld
aaa
mov
shlb
leave
xor
movsl
aaa
jg
and
outsl
push
ret
push
jb
popa
mov
lret
jbe
and
xor
ficompl
sahf
lock
inc
je
repz
sub
rcl
outsl
add
mov
add
bsf
mov
mov
ret
inc
fwait
out
inc
gs
outsb
sbb
jp
cwtl
xchg
sahf
lret
xchg
cs
stos
in
xchg
movsb
inc
push
test
cli
cmpb
ret
lea
dec
and
stc
das
sbb
mov
stos
cmp
jne
lret
xchg
call
les
test
andb
dec
pushf
testl
mov
insb
inc
push
stos
cs
push
jl
fdivr
pop
movsb
cmp
xchg
mov
and
inc
pop
negl
xor
adc
xor
arpl
rcrb
jnp
adc
in
ljmp
cmp
movsl
mov
sub
push
sub
sbb
adc
push
cmp
xor
imul
push
int
orb
call
xrelease
dec
and
pop
lods
cltd
lds
repz
mov
sahf
idivl
jle
cmp
nop
fsubrl
inc
push
daa
jmp
subb
imul
aas
jns
icebp
out
in
loope
mov
jns
cmp
test
cmpsl
sbb
das
fsubrl
popf
imul
sub
push
or
mov
xchg
imul
mov
out
inc
aas
sarl
subl
or
xor
popa
or
shll
push
cltd
jge
pop
out
aas
je
mov
dec
pop
ja
dec
mov
lods
cmp
cmc
in
shrb
sbb
cmpl
sti
inc
inc
out
cmp
mov
mov
sahf
mov
fiadds
pushf
adc
cmpsb
shlb
iret
sub
fcoms
es
push
ret
pop
out
aad
mov
push
je
cmp
xchg
dec
in
sbb
xor
lret
add
xor
subb
jne
mov
and
push
mov
push
xorb
fstl
int
pop
dec
repnz
mov
and
xchg
sbb
inc
subb
cmp
inc
ja
jno
xchg
imul
int3
test
imul
in
repz
pop
jae
mov
jae
fdivr
xchg
lods
sbb
arpl
sub
mov
testb
xchg
jnp
lock
pop
dec
cmpb
loope
mov
das
mov
cmpsl
jecxz
xchg
outsl
movsl
xor
or
lods
stos
sahf
pop
jg
test
testl
dec
repz
call
mov
cmpsl
inc
jae,pn
in
sub
out
sbb
movsl
adc
cwtl
lods
lods
sarb
and
imull
jp
stc
sbb
push
xlat
ret
es
rdtsc
cs
lock
cmp
ja
jle
add
jg
mov
loop
lods
into
xor
fimull
in
aam
dec
dec
loopne
shl
fwait
pop
cwtl
adc
fstpt
ds
xchg
cmp
stos
lret
adc
outsb
addb
faddl
int3
jecxz
or
ss
add
adc
sarl
idiv
push
dec
lock
shlb
mov
mov
cs
xchg
dec
adc
sub
dec
movsb
stos
adc
adc
outsb
jg
sbb
push
faddl
mov
sbb
into
mov
mov
mov
dec
mov
lret
sub
enter
test
adc
add
lret
mov
les
roll
jecxz
mov
or
adc
push
or
sahf
xchg
insb
icebp
jnp
sbb
mov
mov
jnp
adcb
pop
fmuls
ja
push
cli
sub
je
mov
stc
push
faddp
jne
push
add
or
lahf
inc
pop
mov
push
ss
ljmp
loopne
cmp
repz
int3
dec
pop
cltd
xchg
mov
inc
dec
xchg
lea
rcrl
xor
repz
or
stos
sub
pop
jle
jp
xchg
out
rolb
rcrl
in
push
loopne
mov
add
fsubs
cmp
push
sbb
out
mov
fdiv
and
cli
lds
xchg
sbbb
nop
or
push
call
mov
sub
int3
push
pop
adc
inc
dec
push
addl
and
loopne
pushw
fwait
cmp
pusha
xorl
inc
pop
jne
mov
mov
cmp
sub
xchg
mov
pusha
xchg
add
or
or
scas
fwait
bnd
icebp
jae
arpl
lds
pop
cmpsl
ror
push
lahf
lret
out
arpl
pop
push
ficompl
mov
cltd
mov
pop
rclb
cmp
out
or
jb
cmp
cmp
outsl
iret
push
push
pusha
mov
sub
adc
mov
dec
fimuls
repnz
jg
fdiv
jno
ret
jl
mov
addr16
xchg
mov
xlat
aaa
inc
lcall
aas
add
inc
jmp
sahf
dec
pop
lds
pop
sbb
cltd
movsb
jne
push
pusha
sub
mov
push
mov
loop
add
sub
out
pop
mov
imul
insl
stos
fwait
cwtl
add
imul
clc
mov
adc
sub
nop
dec
inc
jmp
dec
push
in
mov
sub
dec
dec
cmp
aam
xchg
shrb
scas
aad
and
loopne
push
popa
pop
decb
mov
adc
int
xor
jns
aas
cli
insb
mov
shr
daa
das
insb
cwtl
mov
imul
test
mov
push
or
les
push
push
add
push
sub
mov
int3
xchg
and
and
fucomip
in
mov
pop
adc
dec
insb
in
fldt
mov
and
inc
inc
adc
idivb
push
lcall
xchg
call
mov
stos
lds
callw
gs
cmpsl
add
daa
fcmovnu
sub
mov
sub
out
fs
cld
outsb
test
popf
sub
adc
mov
cld
into
mov
lock
mov
aad
arpl
dec
das
aas
popa
or
fcmovne
adc
out
das
idiv
sahf
fsubrs
mov
pop
xchg
pop
xor
jecxz
pop
mov
icebp
fisubrl
xchg
sar
pop
inc
fsubrs
pop
xor
icebp
xor
pop
pop
mov
cld
call
xor
sti
cmc
fldt
out
aam
and
mov
sub
test
add
lea
test
imul
out
dec
inc
sti
pop
jns
sub
xor
adc
daa
push
mov
mov
xor
dec
sbb
insl
and
dec
loopne
addr16
sbb
fdivs
rcr
jns
fadds
out
and
fldl
sahf
test
cmp
sbb
outsb
push
mov
jl
and
inc
jmp
inc
cli
das
jmp
in
xchg
divl
in
mov
jb
adc
cmp
mov
daa
test
dec
cmpsb
mov
pop
xor
push
mov
shl
ss
push
mov
or
xor
push
jle
hlt
stc
dec
xor
lea
pop
movsl
clc
pop
jnp
shrb
mov
test
and
inc
orl
scas
mov
cli
movsb
aad
popf
pop
jbe
imul
mov
fcomp
add
cmpsb
push
repnz
jl
in
cld
xchg
pop
sar
jno
dec
xlat
daa
sub
push
add
xor
es
lds
outsb
ja
scas
pop
jge
jmp
stos
cli
xchg
jl
add
nop
xchg
mov
outsb
sbbl
lock
xchg
add
aaa
icebp
sbb
mov
and
outsb
mov
add
pop
and
addb
nop
push
mov
ror
adcb
jg
das
jb
bound
add
mov
fsubp
push
lret
inc
add
sbb
sahf
xchg
popl
mov
jl
sub
out
mov
add
fs
push
and
and
arpl
mov
jp
inc
mov
sbb
das
pop
inc
inc
sub
and
into
test
jg
imul
lods
stos
push
cmc
or
outsb
mov
int
mov
call
ror
jns
out
xchg
cmpsl
jo
dec
cmpsl
and
inc
mov
sbbl
enter
bound
xor
movb
imul
loope
ret
repnz
or
imull
pop
add
es
fwait
mov
xchg
add
in
imul
mov
mov
dec
or
movsb
pop
inc
bound
xchg
enter
xchg
cmp
dec
mov
cmpsl
xchg
jecxz
pop
out
lahf
in
pushf
cmpsb
insb
jl
jae
pop
movsl
mov
mov
fcmove
mov
mov
inc
ret
mov
scas
cmc
mov
sahf
mov
repz
mov
pusha
push
bound
mov
lahf
xor
andb
or
je
iret
xlat
js
mov
adc
push
jecxz
je
xor
clc
lods
mov
xor
mov
data16
xchg
sub
push
mov
sbb
mov
nop
in
inc
add
mov
jmp
pop
adc
sub
pop
nop
arpl
pop
push
repnz
pop
push
mov
mov
daa
pop
mov
js
dec
sar
xchg
in
jne
out
ret
pop
xchg
into
lds
lret
aas
inc
vpxor
scas
inc
push
mov
outsb
or
aas
dec
jb
notl
mov
or
mov
pop
dec
daa
mov
xor
in
ret
mov
ss
xor
jno
dec
adc
xchg
add
dec
jbe
pusha
negl
dec
cld
lds
dec
adcl
cmp
push
mov
and
es
adc
and
lret
xor
imul
fcompl
cmp
out
scas
lods
loope
lret
iret
and
mov
lcall
mov
pop
push
cmp
push
inc
dec
fsub
push
adc
sti
mov
jmp
aaa
xchg
in
sub
pop
ror
lahf
push
ds
lods
lahf
xchg
fucom
insb
xor
popa
sbb
or
es
or
pop
cwtl
xor
loopne
ret
jg
cld
dec
into
jmp
pusha
xor
push
mov
pop
cld
clc
ss
arpl
or
fcmove
jg
les
addr16
pop
lock
frstor
mov
js
test
jae
dec
shlb
xor
aas
pop
lret
sbb
lods
ror
pop
and
stos
dec
out
jns
mov
mov
push
push
outsl
loop
pop
icebp
jns
pop
cld
mov
stos
mov
mov
jmp
movsl
jae
into
add
mov
pop
andb
outsl
cmpsb
sarb
in
jmp
xor
mov
aas
push
pushf
arpl
mov
lahf
jecxz
movsb
sub
aad
outsl
nop
es
test
mov
fidivs
fwait
out
std
and
popf
insl
popf
mull
adc
sbb
xchg
mov
scas
test
test
ljmp
jb
push
mov
xor
dec
out
daa
nop
push
shl
ljmp
out
fs
fwait
dec
pop
or
push
cmpb
loopne
lcall
push
jmp
sar
mov
sub
test
lret
int
xchg
clc
jge
std
mov
adc
jno
jmp
adc
movsl
sarb
jbe
sbb
frstor
pop
rcll
cmp
pusha
in
jae
clc
sti
int
adc
test
xchg
cs
adcl
or
das
jl
inc
jnp
jmp
xchg
or
or
aad
push
mov
xor
lahf
xor
adc
push
je
push
cmpsl
cmc
divl
ss
imul
mov
cmpsl
xlat
cltd
nop
icebp
adc
divl
aam
lods
mov
data16
cltd
xor
sbb
push
ss
jo
insb
mov
rolb
rolb
frndint
shlb
movsb
filds
rcl
mov
push
dec
jne
mov
or
cmp
das
daa
pop
popa
out
ret
popa
pop
fdiv
dec
jle
pop
cmp
sbb
jle
addr16
dec
out
scas
movsl
aaa
dec
jae
pop
add
xchg
push
or
push
cltd
xorl
jbe
sbb
aad
or
mov
sbb
pop
cmp
int
jno
and
data16
out
mov
sub
icebp
les
mov
mov
shrl
aam
popf
in
nop
popf
es
pop
mov
inc
dec
jp
sarl
fldt
jne
and
sub
cmp
add
inc
stc
mov
aas
add
rep
or
mov
and
xchg
adc
and
jne
inc
mov
xchg
add
sarb
mov
or
push
jb
xlat
icebp
add
jno
sub
cmp
shlb
xchg
xlat
xor
insl
outsl
movsb
xchg
subl
in
cli
ret
cmp
xor
fisubl
add
xor
jae
fisttpl
pushf
cmpb
aad
sub
pop
test
aam
shrb
jbe
cmp
add
jecxz
xchg
mov
jmp
sahf
fldl
repz
fidivs
push
adc
dec
adc
mov
pop
jge
jmp
cs
or
iret
insl
jmp
and
mov
mov
loopne
cmpsl
popf
adc
mov
aam
rclb
push
lock
pop
loope
push
out
inc
scas
add
jae
push
jnp
inc
sbb
jbe
nop
jmp
sbb
loopne
mov
mov
stc
ror
nop
adc
orb
and
jb,pn
mov
mov
repz
in
icebp
push
and
movsl
icebp
incb
lret
outsb
dec
mov
pop
cmp
jmp
jmp
xchg
mov
insb
gs
cmp
and
pop
dec
negb
xchg
sbb
xor
ljmp
push
rcrb
aad
xor
or
sub
stos
push
popf
out
push
push
inc
cwtl
movsb
das
mov
jo
test
les
add
push
in
add
int
flds
in
or
xchg
test
dec
pop
inc
push
mov
imul
xor
sub
mov
lock
cmp
pop
adc
fsts
stos
scas
cmp
ret
dec
sub
dec
dec
sub
pusha
adc
jg
std
in
xchg
or
mov
das
and
lods
repz
aaa
adc
sbbl
test
daa
das
jnp
and
mov
inc
cmp
or
or
mov
jmp
nop
jnp
xchg
add
jae
xchg
sti
push
aas
orb
pop
mov
jg
mov
jg
pop
cmp
dec
add
sbb
push
mov
testl
dec
pop
mov
dec
cmp
loope
pop
push
xor
xor
push
push
in
jmp
add
in
xchg
dec
in
or
shl
fimuls
test
insb
sub
test
insb
ret
popa
cli
push
xor
and
into
mov
cld
fisubs
push
cld
fcomps
gs
xor
aam
in
out
mov
pop
repz
cmp
dec
xchg
ss
inc
rorl
cs
data16
les
pop
mov
sahf
mov
out
and
mov
out
hlt
in
sub
inc
cli
test
lods
stos
cmc
insb
je
fistps
repnz
push
sub
xor
ja
sbb
cwtl
jno
push
fcoml
dec
pop
int
leave
sub
idivl
push
push
push
push
mov
popf
mov
fisubs
test
sub
mov
mov
loop
cs
push
fiadds
push
cmpsb
pop
add
inc
iret
imul
and
and
mov
stc
mov
fs
insb
ret
xchg
dec
add
aad
gs
cli
fidivs
mov
mov
add
jns
fldenv
lret
sub
aam
dec
insl
sbb
out
je
and
adc
flds
popa
loop
add
cmovg
repnz
sbbb
xchg
std
mov
pop
fistpll
and
push
jle
filds
cmpsl
cs
mov
xor
pop
rorb
test
test
pop
cmp
cmc
pop
pop
mov
out
lea
sbbl
out
mov
jne
xor
and
sub
mov
mov
stos
xor
in
inc
cmp
lea
popf
popf
push
enter
jp
pop
jo
mov
sti
fstps
mov
out
xor
push
push
fstp
outsl
xchg
pop
sbb
aas
xor
pop
dec
lret
jnp
fwait
stos
cmp
push
mov
jge
je
add
xlat
rclb
aam
mov
test
jle
mov
arpl
cmpsb
mov
je
pop
or
mov
cmp
dec
jbe
js
mov
and
ret
or
jae
scas
pop
scas
lea
dec
cmp
mov
ret
imul
clc
ret
lcall
outsb
loop
test
or
int
cmpsb
pop
cmpsb
ret
or
pop
xchg
xchg
mov
out
out
mov
outsl
fiaddl
sbb
cmc
ja
into
repz
mulb
inc
dec
sahf
fisubl
and
lock
sub
js
mov
xchg
aam
imul
mov
ret
lock
leave
and
push
fs
xchg
nop
sbb
inc
cmp
or
cli
repz
shll
inc
dec
jns
rcll
fistpl
nop
sub
xchg
adc
lret
ret
adc
ja
jle
pop
mov
inc
cmp
push
mov
scas
outsb
inc
mov
push
fs
imul
filds
js
stos
test
jno
sub
mov
repz
mov
les
loope
mov
imul
scas
movsb
push
push
jb
mov
push
lock
je
jbe
test
mov
fadds
mov
mov
mov
cs
movsl
pop
mov
fcomps
push
adc
cmp
cmc
inc
icebp
aam
in
ljmp
movsl
and
imul
insb
push
add
movsl
jmp
inc
fbld
xchg
or
and
xor
insl
lcall
push
dec
incl
icebp
pop
xchg
mov
xor
and
test
jns
lods
adc
repnz
xchg
roll
cmc
int
or
fstpl
lcall
mov
xor
fidivl
add
mov
push
or
sub
adc
adc
in
mov
cmp
inc
sub
jbe
cmp
add
push
mov
xchg
outsb
fwait
xor
inc
jl
repz
jg
add
call
cmovo
stos
rclb
jge
lret
inc
hlt
enter
pop
out
xchg
lahf
push
das
in
je
into
mov
arpl
pushf
in
lcall
pushf
mov
outsl
cli
cli
push
jmp
push
push
mov
test
repnz
sbb
adc
outsl
nop
xchg
test
int3
dec
out
adc
mov
mov
mov
dec
add
sbb
inc
outsb
test
les
pop
mov
shl
dec
adc
push
or
add
push
bnd
cmc
imul
add
adc
push
mov
stc
cmpb
ds
notb
add
inc
fildl
in
jns
xor
cwtl
or
push
inc
test
stos
incl
inc
xchg
in
mov
push
xor
push
cmc
je
push
jmp
lret
push
and
cmp
mov
cmc
sub
out
pop
xchg
scas
es
or
sbb
gs
sar
jg
push
and
dec
and
sbb
es
mov
int3
mov
pop
test
and
mov
push
gs
cmc
lcall
xor
adc
ss
sub
stos
fldt
sub
mov
push
stc
adcb
mov
btl
mov
pop
or
and
roll
add
mov
pop
test
loopne
ret
add
inc
mov
xchg
xor
add
je
mov
in
adc
loop
pop
into
leave
fistpll
scas
add
imul
push
xor
out
dec
js
cmc
mov
push
iret
cmpsl
xchg
outsb
fstl
push
repnz
pop
insb
sub
mov
xchg
push
sbb
ds
or
sbb
shlb
xor
popf
ss
adc
and
xchg
mov
lods
xor
mov
jne
int
aas
pop
aas
das
push
int3
daa
add
test
nop
imul
mov
das
jno
dec
and
shrl
movsl
mov
xor
aam
cmp
test
repz
call
inc
daa
mov
sti
xor
jecxz
dec
xchg
subb
in
jne
insl
lcall
inc
add
pop
ds
scas
sub
sarb
dec
add
ljmp
ja
fiadds
mov
les
pop
mov
stos
add
dec
mov
pop
sub
mov
pop
xor
add
mov
sbb
std
es
out
cltd
sti
push
or
jle
dec
pop
xor
pop
push
pop
mov
and
fwait
dec
das
mov
scas
xchg
out
mov
mov
gs
fistpll
sbb
outsb
cmp
mov
xchg
loope
int
mov
rcrl
mov
mov
xchg
and
xchg
sbbl
test
test
and
ret
add
lret
add
mov
rcll
and
pop
loope
or
scas
or
mov
jo
leave
arpl
int
push
adc
cmp
lahf
dec
push
push
lret
pop
in
cmp
out
testl
mov
jg,pt
and
mov
xor
mov
lcall
mov
adc
pusha
push
inc
out
sbb
xchg
cltd
popf
push
xchg
pop
adc
cmp
mov
add
aad
inc
movsb
sbb
lea
loopne
mov
jge
aam
rcll
lods
sub
popf
push
aas
pop
gs
adc
mov
inc
mov
lret
jns
pop
and
dec
jb
and
xchg
test
xchg
dec
or
pusha
and
mov
push
sub
push
outsl
ret
decb
push
adc
or
shll
fbstp
mov
adc
cmp
push
dec
sti
out
js
jmp
jge
out
cmp
lahf
and
imul
repz
push
push
testl
adc
in
bnd
mov
fs
loop
out
std
mov
stc
pop
mov
xchg
and
loope
mov
inc
sub
pop
fdivrl
adc
add
or
or
push
jo
fucomp
xchg
loop
pop
xor
push
cmp
roll
clc
or
shll
xchg
fwait
rol
mov
xor
cmp
in
adc
je
sub
in
and
mov
dec
push
and
add
outsb
repnz
xchg
test
pop
xor
loop
enter
xchg
add
test
xchg
rcrb
push
cld
cmp
mov
mov
xchg
xchg
cmp
xor
in
pop
sahf
je
xor
out
mov
and
cltd
inc
fldcw
jmp
and
inc
faddp
daa
out
xor
cli
mov
ds
repnz
sub
pop
jg
sahf
adc
mov
je
pop
push
iret
loopne
ja
inc
add
cmc
cmp
pop
lea
mov
scas
daa
stc
xchg
add
mov
mov
add
arpl
pop
dec
aam
mov
ja
or
push
sub
dec
push
sub
sbb
ja
aam
inc
cmc
addr16
sub
mov
scas
aad
xor
ljmp
dec
xchg
sarb
loopne
xlat
xor
repz
aam
push
lea
mov
arpl
mov
fsubrs
adc
jl
add
push
mov
sbb
xlat
pop
in
mov
add
mov
xor
add
js
cld
push
add
addr16
int
movsl
mov
dec
roll
loope
cmpsl
mov
xchg
sbb
movsl
faddl
xchg
cs
aas
push
dec
adc
icebp
jecxz
or
dec
lods
ficompl
bound
clc
pop
mov
push
jecxz
cmp
xchg
cmp
add
testb
movsb
iret
scas
mov
mov
sbb
pushf
adc
pop
sahf
pop
mov
push
out
jno
adc
push
imul
dec
outsb
sub
stc
shlb
cmpsl
sub
test
jno
sahf
sahf
shrl
push
adc
loope
mov
aas
inc
aaa
dec
subb
dec
pop
imul
add
sub
call
sub
mov
jne
inc
test
inc
shl
add
bound
pushf
add
mov
je
fwait
push
mov
push
add
lea
add
mov
jle
push
jge
cmp
shl
push
lea
dec
je
adc
stos
inc
in
push
adc
dec
mov
cmp
in
inc
adc
push
xor
mov
daa
jl
adc
mov
cs
sbb
sahf
lds
push
insb
repnz
aad
cwtl
stos
mov
dec
fcmovnbe
cmpsl
imul
push
add
mov
lahf
jo
lock
sbb
and
add
fcom
aaa
xchg
loope
mov
je
adc
in
mov
jne
xor
mov
pop
add
jmp
dec
adc
in
std
in
movsl
movsl
notl
enter
fistpll
insb
mov
push
fwait
popa
jl
lock
push
mov
nop
stos
inc
call
ficoml
in
loopne
ja
pop
adc
jno
push
lret
xchg
sahf
js
fwait
rcl
sbb
mov
ds
dec
subl
mov
cwtl
lret
lea
icebp
mov
mov
ss
pop
sbb
dec
into
xor
jo
je
inc
aaa
sub
rclb
bound
add
out
xor
stos
or
in
push
int
push
loopne
imulb
loop
fwait
pushf
dec
dec
sub
adc
incl
adc
push
adc
and
lret
movsb
pop
xchg
add
mov
xor
push
sti
jge
sbb
outsb
xor
and
std
pop
daa
fs
loopne
loopne
enter
push
in
fcmovb
arpl
pop
sub
adc
jg
mov
inc
lods
out
lahf
aas
add
cli
loope
rorb
or
ljmp
test
test
cmp
jg
je
xchg
movsl
fidivrl
mov
lds
mov
in
lahf
lret
mov
into
pop
jl
shr
pop
cli
xchg
mov
mov
popf
push
pop
fisubs
or
push
js
jnp
mov
sahf
es
sub
pop
lret
add
inc
cmpl
mov
rorb
mov
les
inc
pop
push
sub
test
adc
jbe
adcl
xor
enter
sti
and
pop
fiadds
or
jae
stc
cmp
add
add
mov
dec
or
jbe
xor
decb
insl
shl
cmp
jmp
outsb
hlt
mov
call
and
cs
repnz
lods
mov
pop
jne
aad
jns
mov
add
ja
enter
sbb
jecxz
mov
jl
aas
fdivs
popa
cmp
fwait
inc
jne
dec
outsl
dec
dec
and
repz
std
stos
push
scas
mov
sarl
jecxz
int
cli
push
in
bound
lock
sbb
shlb
pop
sbb
repz
scas
icebp
out
or
xchg
add
call
flds
lds
mov
xor
sub
iret
pop
sub
inc
dec
sub
mov
cwtl
inc
mov
push
inc
add
mov
sub
clc
out
sbb
gs
je
sub
insb
dec
dec
xor
push
gs
mov
enter
xor
xchg
xchg
cmpsl
movsl
hlt
xor
pushf
scas
cmpsl
jecxz
sub
scas
cmp
jnp
inc
sbb
mov
js
push
in
mov
mov
pop
push
jns
push
fidivrs
xor
cmp
and
iret
add
adc
ljmp
testb
or
mov
cli
mov
and
jae
rorl
fildll
xchg
mov
mov
dec
loopne
jne
mov
data16
pop
jo
iret
movsl
pop
fsts
pusha
les
push
cs
mov
xchg
xlat
mov
iret
inc
mov
pusha
mov
test
xor
xchg
movsb
stos
ss
shlb
and
inc
in
pop
adc
mov
lods
dec
sbbl
xor
ss
xchg
adc
add
mov
push
movsb
sbb
sbb
or
and
jg
mov
fisttpll
jge
lds
out
sub
aas
in
sbb
test
aas
mov
loopne
lret
dec
aas
in
sub
icebp
jecxz
fistpl
test
push
out
sub
pop
leave
cmc
stos
icebp
test
inc
mov
sbb
cmp
fs
data16
push
stc
sub
xchg
sahf
iret
pop
ja
push
sbb
movsl
pop
aam
dec
mov
xor
imul
dec
out
movsl
cmpsl
and
add
orb
jne
mov
lods
hlt
dec
inc
adc
mov
xchg
test
lea
xor
sub
inc
lods
cmpsb
divps
jae
scas
inc
and
push
scas
mov
mov
mov
movsl
std
sbb
push
fs
in
xchg
sti
popa
out
jne
int
pop
inc
popl
or
out
or
ja
xor
lds
repz
insb
jnp
movsb
xor
aas
cmp
call
jnp
repz
push
stos
repnz
aaa
sbb
shll
add
sub
or
leave
addb
xchg
stc
pop
xchg
and
mov
lds
lods
adc
dec
pop
pop
pop
cs
sti
imul
sub
mov
scas
mov
push
mov
clc
imul
adc
jns
pop
fwait
dec
mov
movsb
fstpt
dec
and
jbe
add
cmp
jp
xchg
test
adc
or
std
push
pop
and
roll
fwait
mov
rorb
sbb
popf
mov
cwtl
push
cmp
add
lods
inc
popa
add
inc
shll
sub
xor
nop
ds
sub
sbb
lods
adc
mov
imulb
adc
lea
push
pushf
js
mov
pushf
or
xor
adc
pusha
aad
push
dec
and
mov
daa
jmp
fsts
sahf
fs
cwtl
stos
lock
enter
ss
mov
mov
mov
cmpsb
scas
jae
lahf
stos
adcl
lea
push
sbb
adc
add
daa
sar
sbb
test
in
aad
jmp
cmpsb
mov
mov
mov
lcall
pop
sbb
icebp
and
sub
dec
or
sbb
mov
lods
outsb
pop
inc
fisubl
xor
pusha
cmpsb
inc
jns
leave
jnp
lret
mov
jnp
or
imul
lahf
cmc
mov
lock
push
imul
jb
call
push
gs
sarl
mov
mov
mov
enter
jb
outsl
loope
test
clc
dec
push
daa
sub
out
sbb
aas
fnstsw
push
clc
out
sub
lret
je
mov
add
or
nop
cmp
inc
xchg
imul
in
sub
jl
adc
mov
sti
xchg
cltd
adc
fxch
push
lock
sub
cld
mov
pop
lahf
sub
test
dec
mov
push
cmc
es
fidivs
je
jg
je
pop
imul
jae
mov
add
pop
mov
cli
repz
into
or
popa
rorl
mov
xchg
flds
pop
mov
or
cmp
in
adc
jb
les
dec
pushf
and
adc
in
movsb
sbb
sbb
and
adc
fwait
sub
ret
add
push
jns
ljmp
dec
mov
add
sti
ja
ja
cmp
test
mov
sub
mov
mov
in
inc
mov
pusha
sahf
in
jmp
lret
dec
push
outsb
jmp
fldln2
imul
dec
in
hlt
xchg
cmpsl
js
inc
stos
mov
cli
movsl
add
cmp
cmp
test
je
xor
jbe
pop
lock
addr16
mov
inc
xor
inc
lret
jnp
idivl
test
adc
ret
in
cmp
jno
int
lret
addb
lods
stos
inc
mov
in
sbb
dec
out
lods
fistpl
movsl
in
shrb
mov
clc
cwtl
push
mov
push
into
mov
dec
fcoms
sbb
sub
test
mov
les
imul
or
in
stos
xor
sti
popa
clc
jno
lcall
pop
sub
push
call
cwtl
fldl
rclb
mov
movsl
into
sbb
lea
jecxz
cwtl
ljmp
popa
push
adc
into
or
popf
fstp
xlat
jb
xor
cmpsb
jmp
cltd
inc
xchg
cmc
sbb
pop
mov
dec
cwtl
sub
pcmpeqb
mov
pop
pop
dec
mov
dec
inc
popf
mov
insb
dec
dec
add
push
mov
mov
push
dec
dec
enter
test
or
stos
outsl
sbb
ja
push
push
fldl2e
mov
mov
fs
lcall
in
sub
inc
test
sub
out
sub
in
sbb
jae
out
or
adc
pop
lret
mov
cmc
test
push
jge
ret
sub
or
dec
dec
roll
scas
popa
inc
xchg
inc
pop
jb
or
sub
xlat
push
push
dec
and
xchg
sub
in
mov
mov
lea
inc
mov
and
sub
inc
fdivs
jle
fld
jp
sbb
jmp
rolb
adc
data16
pop
pop
xchg
test
or
aad
popf
xchg
iret
push
orl
fcomps
push
daa
mov
in
and
mov
idivl
test
mov
in
push
pop
lcall
inc
sub
sub
push
cmp
in
shrl
push
jns
xchg
cmpl
jg
insb
mov
adc
int
fs
cltd
push
fwait
mov
add
sahf
jae
sbb
jge
dec
int3
xchg
add
xor
lock
cmp
cmp
enter
jns
fstl
sub
pop
push
into
outsb
pop
test
pop
dec
adc
jb
cmp
mov
sahf
getsec
out
scas
inc
jle
lock
jns
jmp
push
xchg
push
inc
aaa
jge
xchg
loop
jo
xor
mov
inc
pop
jmp
in
loop
nop
xor
rolb
mov
pop
mov
ljmp
xchg
push
mov
fstp
or
xor
mov
jb
rcrb
xchg
push
leave
divb
outsl
and
jl
lds
cmp
pop
mov
mov
and
jne
jbe
in
repnz
std
sahf
and
and
mov
ret
in
add
cltd
cmp
adc
popa
ja
fimull
pop
call
push
push
repnz
pop
mov
or
cmpb
push
jp
xor
rcrb
mov
cwtl
inc
in
popf
add
pusha
shll
mov
mov
mov
sbb
add
in
sub
mov
mov
rcrb
cli
orb
shll
adcb
or
xor
cmpb
arpl
fs
mov
jb
add
mov
mov
jl
adc
movsl
test
mov
push
negl
lea
jecxz
adc
sub
add
mov
int
leave
sarb
shrb
mov
cmpsb
push
sarl
addr16
inc
cmpl
mov
push
jne
mov
push
nop
stc
and
sbb
add
fdivrs
mov
and
jae
or
push
inc
mov
dec
outsl
pushf
sub
pop
xor
out
sbb
sub
je
cmpb
add
sahf
sub
or
test
jl
mov
fldt
pushf
into
or
negl
pop
pop
lret
mov
dec
stos
test
mov
pop
inc
stos
adc
pop
or
aam
fstpt
jae
xlat
mov
push
push
push
adc
fstpt
pop
mov
adc
sbb
fucomi
mov
cmp
pop
mov
dec
lcall
inc
out
inc
dec
adc
fwait
enter
fwait
xchg
les
dec
aas
enter
adc
pop
push
push
fldl
jbe
cmpsb
pop
loope
imul
xchg
adc
xor
in
fcmovne
leave
and
pop
sbb
hlt
and
call
mov
jbe
pop
cs
push
fidivs
cmc
ds
in
outsb
stc
mov
in
dec
jl
ss
inc
mov
cmp
cmp
clc
imulb
fs
sbb
sub
push
cmpsb
fnsave
inc
mov
in
cmp
adc
mov
sub
int3
ja
adc
je
push
imul
lret
add
cmp
ret
mov
les
in
ret
pop
inc
xor
lods
dec
xchg
inc
and
push
fcmovne
lock
out
adc
insb
stos
shll
mov
jl
fwait
inc
mov
cmp
xchg
xchg
cmp
xor
ds
jmp
orb
mov
mov
int3
daa
push
mov
adc
dec
into
add
pop
mov
fwait
xor
aad
fistl
sbb
mov
push
mov
sub
sub
xor
push
je
insb
jae
and
sbb
cld
gs
fsts
jl
mulps
pop
xchg
add
stos
pop
lods
pusha
push
and
mov
mov
addr16
das
aas
sub
mov
das
cmp
mov
sbb
add
xlat
push
int3
jge
add
pushf
xchg
add
lea
cmp
daa
or
inc
xchg
inc
mov
xchg
imul
rsm
mov
stc
push
sti
add
jmp
add
push
adc
sbb
orb
shrb
sub
gs
mov
inc
xchg
out
sbb
ret
lock
dec
movsl
mov
jg
sahf
loope
xchg
inc
and
jae
inc
out
inc
cld
or
ss
dec
lcall
add
inc
call
dec
xorl
cltd
adcb
push
test
out
test
shlb
sahf
jnp
test
mov
sub
imull
aas
mov
jb
jmp
fisubl
add
sub
repz
cmovl
andl
pop
sbb
mov
or
cmp
mov
enter
out
jnp
test
je
ds
cmpsl
out
cmpsb
fs
test
or
aam
pushf
push
aam
inc
ret
loope
mov
hlt
cmp
loopne
fstpt
xchg
pop
xchg
je
repnz
lret
sub
inc
lods
pop
sbb
jmp
sti
pop
adc
je
jae
inc
call
xchg
call
sti
leave
sti
lea
cmpsl
test
stc
mov
fildll
mov
leave
lret
jnp
lds
testl
pop
mov
ja
es
jecxz
xchg
jle
clc
test
mov
xchg
pusha
xor
xor
daa
outsl
iret
push
mov
fcoml
fwait
in
cs
push
stc
cmp
xchg
cltd
btc
cmp
fsubrp
xchg
stos
and
xchg
sarl
imul
cmp
ret
cli
outsl
into
or
pusha
sub
mov
lret
aaa
dec
mov
stc
jne
or
ror
enter
push
loope
divps
cmp
out
push
sti
mov
les
jl
push
in
jp
das
lds
scas
rcl
mov
cld
mov
scas
inc
pusha
ss
scas
test
insl
pop
add
jo
movsb
gs
jg
xor
popf
jb
das
pop
out
sbb
out
add
push
mov
xchg
cmp
push
sti
iret
out
ss
dec
xor
jne
out
push
mov
mov
cmp
push
pop
sbbb
jg
into
mov
out
or
mov
mov
fwait
mov
outsl
pushf
in
adc
aaa
mov
push
repnz
mov
repnz
imul
popf
mov
movsl
mov
sbb
push
xchg
scas
dec
mov
movsb
sbb
inc
cmp
bound
aam
stc
test
jae
cmpsb
out
in
jo
movsb
and
movsb
scas
mov
fs
mov
sub
mov
sbb
int3
pusha
push
pop
or
jle
loop
bound
or
scas
mov
jle
push
push
js
mov
int3
incl
dec
shl
jmp
divb
or
or
addr16
mov
sbb
ss
ud2
mov
lods
sub
mov
and
inc
mov
inc
or
mov
test
sbb
inc
inc
push
arpl
cltd
push
leave
mov
shll
dec
mov
xlat
fcmovnu
sarb
mov
push
inc
in
cmp
dec
xor
xchg
icebp
inc
ds
je
out
inc
sbb
stos
movsl
adc
cmp
inc
dec
xor
mov
loop
not
and
mov
pop
inc
test
mov
aaa
and
iret
scas
push
sti
add
xchg
xor
lret
cld
loope
xor
lret
pop
lds
or
outsl
jns
stc
bound
dec
xchg
mov
pop
xorb
cli
dec
movsb
cwtl
and
rcll
lock
jbe
and
sub
lods
cmp
push
mov
jno
cwtl
out
add
jle
imul
mov
sahf
dec
sbb
loope
xchg
xchg
lcall
loopne
dec
mov
nop
mov
lret
sbb
cltd
mov
and
shr
bound
ficomps
cmc
sbb
mov
hlt
adc
int3
imul
cltd
and
mov
lahf
push
cmp
cmpb
mov
push
int
and
jecxz
xchg
jo
push
popf
ljmp
rcl
into
mov
loop
or
xor
pop
daa
ljmp
fcmovb
push
mov
rorb
insb
or
jmp
mov
jno
outsb
aaa
cmpl
rcr
push
mov
mov
fisubs
and
fistps
stos
dec
aam
push
adc
addr16
movsl
mov
lcall
mov
imul
xchg
cmp
jb
jmp
outsb
cmp
add
mov
mov
lahf
jmp
lock
das
xor
pop
sbb
jge
xor
adc
movsl
mov
gs
notb
xchg
into
inc
sub
popa
pop
scas
mov
aam
adc
gs
cs
rep
ds
lea
inc
jp
pop
movsl
mov
and
adc
scas
cltd
repnz
inc
and
mov
test
adc
pop
fnsave
and
xchg
hlt
xchg
mov
sahf
fcmovnbe
push
mov
outsb
add
pop
adc
xor
mov
enter
insl
push
sub
sub
and
stos
rorl
adc
push
xorb
and
push
cmp
jo
mov
xor
lods
mov
icebp
ret
sub
addb
sub
fldenv
mov
or
xchg
ds
sbb
mov
dec
fldenv
dec
add
outsb
pop
adc
dec
lcall
movsl
jno
imul
cmp
mov
inc
push
adc
xor
test
and
add
xor
rsqrtps
pop
ljmp
lret
and
and
mov
xchg
xchg
addr16
pop
xchg
mov
ljmp
pop
je
mov
mov
xor
and
stos
cmpsl
pop
jae
xchg
shlb
add
je
dec
aam
arpl
lahf
xchg
inc
dec
into
cmp
xchg
mov
sarb
fisubl
pushf
lret
or
add
std
repnz
loopne
popa
and
sub
push
test
and
push
repz
xlat
inc
fisttps
stc
adc
data16
insl
xor
push
cmp
jp
fstl
mov
add
jp
jnp
arpl
arpl
pop
or
pop
scas
rcll
sbb
jb
lcall
std
adc
call
dec
into
xor
inc
or
dec
test
loopne
mov
cmp
popf
pop
icebp
cld
pop
mov
mov
or
push
mov
and
lret
into
xchg
and
lea
pop
cvttps2pi
ljmp
xchg
jne
stos
imul
push
fnstsw
jno
inc
dec
lods
or
xor
daa
test
addr16
mov
imul
inc
js
fcoms
icebp
sbb
leave
push
jge
add
or
add
fs
sub
xchg
xchg
pusha
dec
les
inc
movsl
bound
in
ljmp
pop
outsl
popa
add
inc
out
and
pop
hlt
fdivrs
and
jae
jb
push
inc
ficoms
loop
cld
outsb
out
dec
xchg
push
jecxz
mov
cltd
cmp
mov
mov
push
mov
add
insl
iret
inc
dec
lds
dec
out
xchg
cmpsb
or
pop
js
mov
inc
push
daa
decb
lret
clc
fsubrs
jno
push
shlb
jle
jbe
lods
pop
pop
nopl
xchg
fwait
lds
push
mulb
mov
test
xchg
sbb
scas
je
lea
cmp
fists
cmpl
xchg
dec
std
jo
hlt
sbb
push
sub
or
pop
pop
or
shl
arpl
cmpb
pop
sub
push
aam
repz
leave
sub
bound
or
mov
sub
cwtl
popa
or
adc
pop
mov
addr16
xor
idivl
cmp
rcrl
ficoml
test
pop
es
mov
push
sbb
popf
dec
andl
loope
cld
gs
mov
dec
data16
or
push
daa
sbb
cmc
rol
mov
jle
jmp
arpl
fldt
mov
jecxz
mov
push
sub
jl
dec
sbb
xor
aaa
sbb
mov
mov
je
scas
sysexit
sbb
pop
shll
cmp
in
aaa
adc
or
dec
push
mov
lock
sbb
mov
sub
sbb
rol
mov
add
mov
push
out
mov
inc
clc
stos
dec
cld
out
loopne
mov
aam
aam
adc
lods
std
xchg
cld
xchg
popa
shlb
sub
xchg
add
dec
repnz
loopne
mov
test
aas
add
pushf
lret
in
or
xchg
dec
cmc
test
faddl
push
enter
call
push
adc
jno
lods
pop
mov
pushl
test
orl
xor
call
xlat
lods
testl
or
repnz
in
or
outsl
adc
lods
call
push
fcompl
mov
movsb
jb
fcomi
popa
adc
mov
jae
add
lods
xchg
and
adc
fisttpl
pop
jp
mov
nop
fwait
insl
std
dec
imul
xchg
inc
mov
aas
cli
movsl
aad
dec
es
dec
adc
movsl
aas
sub
into
and
rorl
rol
push
mov
and
ja
daa
push
or
rorb
mov
add
fwait
dec
in
fs
or
es
pop
fucomp
addr16
or
lds
jbe
push
inc
mov
popa
mov
outsl
jle
push
shr
mov
pop
mov
mov
movsl
mov
mov
xorb
jne
mov
pop
mov
faddl
in
add
test
repz
add
mov
cs
jle
das
mov
aad
push
ss
cmp
cmpsb
push
stos
int3
mov
adc
push
push
out
repz
rcrl
fmull
imul
in
fimuls
jbe
arpl
loopne
je
and
aam
sbb
bound
enter
ficompl
out
xchg
adc
adc
sbb
xor
bound
mov
dec
out
rorl
push
sub
mov
int
test
data16
mov
aaa
jge
leave
inc
imul
insb
test
dec
leave
in
or
push
xchg
popl
mov
pushf
js
cli
mov
dec
inc
cmpsb
mov
jno
inc
adc
fs
push
dec
dec
push
lret
or
adcl
shll
fsubrs
adc
stos
pop
mov
push
cli
add
mov
jne
and
xchg
rclb
fwait
adc
pop
xor
pop
pop
sti
into
xor
jmp
add
aam
imul
sub
insl
inc
stos
inc
xlat
dec
pusha
inc
bound
int
dec
lahf
pop
and
adc
inc
jp
repz
imul
xor
dec
sub
push
lods
test
jmp
pusha
pushf
jo
aaa
pop
mov
in
mov
and
ja
add
cmp
sub
mov
push
fcompl
insb
dec
cmp
repz
stos
daa
inc
cltd
arpl
movsb
in
lods
push
push
lods
stc
mov
in
aam
fstl
hlt
mov
and
test
dec
cld
sub
fwait
sub
cmp
jno
imul
lret
and
pushf
fsubs
inc
ret
ja
xchg
dec
lret
cld
push
loop
movsl
cmp
inc
jle
mov
xchg
shlb
clc
dec
aad
in
xchg
cmp
out
shl
xor
mov
mov
cmp
sub
jno
xchg
cli
es
es
dec
push
jno
das
jns
push
pop
stos
fcomi
inc
dec
sar
test
test
std
push
daa
xchg
fsts
test
or
int
addl
sbb
sti
inc
icebp
gs
das
jb
mov
add
adc
je
jl,pt
xor
pop
xchg
mov
pop
mov
daa
mov
iret
push
cmp
cmp
jno
sbb
fistps
add
shl
jbe
pop
push
stos
dec
sub
jle
imul
pushf
insl
cmp
inc
sbb
gs
xchg
xchg
mov
mov
push
mov
movsb
push
add
mov
fcoml
loope
mov
ljmp
scas
mov
dec
mov
xor
push
nop
sub
and
adc
mov
xor
push
es
add
sub
sbb
icebp
push
xchg
ds
loopne
pop
pop
arpl
pop
test
push
sbb
and
pop
pop
jg
repz
je
das
or
scas
push
cld
lds
adc
adc
iret
out
out
insl
push
pop
mov
fidivs
push
cld
ljmp
push
adc
arpl
push
dec
xchg
inc
xor
push
jne
xorl
mov
add
ret
outsl
fdivl
cld
rcl
in
add
sbb
add
and
sahf
push
or
pop
dec
test
movsl
inc
push
addb
sbb
in
sub
idivb
aas
sub
cmp
sahf
jnp
sbb
push
push
dec
xchg
cmp
cli
jp
jp
mov
xlat
dec
mov
pop
xor
or
ret
outsl
cmp
or
add
js
add
jp
mov
andb
inc
push
fstp
mov
pop
inc
mov
xor
fdivrl
fwait
mov
sub
and
mov
loop
movb
test
out
sarl
cltd
loopne
push
clc
push
out
aad
mov
add
wbinvd
jg
out
loopne
rorl
mov
dec
push
jmp
mov
pop
jne
sub
jp
and
iret
mov
or
mov
psrlw
movsl
mov
scas
pop
data16
jae
sub
ljmp
jae
or
dec
lock
or
and
adc
cmpsb
and
nop
leave
lret
call
cs
jns
gs
xchg
cmc
fdiv
mov
call
sub
pop
aam
dec
ds
daa
inc
adc
fwait
in
cmpsb
loope
call
nop
stos
and
cmpb
loope
shlb
cmpsl
leave
xor
std
arpl
out
push
outsl
icebp
cld
mov
jo
push
push
adc
rorl
arpl
jl
mov
push
jb
je,pt
jne
jg
in
pop
pop
pushf
das
lret
movsl
mov
pop
pop
mov
scas
stos
and
push
pop
push
loop
dec
mov
jmp
or
mov
xchg
iret
cmp
and
and
loop
push
xorb
sbb
sbb
mov
pop
ja
sbb
mov
pop
pop
jb
sub
cmp
sbb
and
fwait
dec
rorb
shl
leave
add
sbb
daa
sub
jae
inc
pushf
push
or
jg
or
inc
movl
mov
sbb
adc
xchg
loopne
add
mov
mov
push
xchg
sbb
subb
sbbb
mov
inc
xor
shl
xchg
je
iret
mov
mov
cli
adc
nop
arpl
dec
insb
daa
iret
sbb
inc
xchg
mov
mov
push
jns
fistl
sbb
int3
nop
scas
in
psadbw
aad
adc
cld
stos
in
push
subl
repz
ret
imul
add
in
xchg
in
insl
and
sbb
test
add
pop
cmpsl
aam
int
jae
fcompl
adc
inc
outsb
and
mov
fnstcw
xor
roll
nop
adc
adc
insl
pop
fstp
sbbb
stc
mov
nop
cmpl
mov
sub
js
addr16
loopne
push
in
out
std
popa
daa
xchg
in
dec
pmaxsw
push
aas
daa
lods
xchg
and
shlb
sub
sti
std
sbb
loop
jns
movsb
sub
cli
pop
stc
inc
ret
or
inc
pop
and
out
rorl
stos
jl
xchg
lock
call
adc
sub
sbb
mov
iret
push
inc
fdiv
inc
jno
arpl
in
cli
push
loope
lods
or
push
lea
jno
cli
ja
and
out
xchg
push
int3
ret
dec
daa
call
lock
push
outsl
std
lock
mov
sub
inc
xchg
cmpsl
orb
sti
sbb
sbb
les
subb
sub
or
in
mov
mov
ja
xchg
or
mov
lds
mov
xchg
lods
insb
decl
in
xor
cmpsl
cmp
xchg
aad
loop
xchg
jmp
out
mov
addr16
daa
jbe
xchg
jecxz
push
jo
inc
loopne
popa
mov
pop
push
lahf
xor
fisubl
jg
mov
sub
sarl
pop
repz
or
jne
push
iret
mov
mov
inc
push
mov
and
popa
shl
xchg
subb
inc
xor
sub
div
add
and
mov
inc
bound
fwait
mov
inc
insl
ret
cs
sbbb
xchg
mov
sbb
fsubrp
and
mov
mov
adc
or
and
push
insl
jmp
pop
fldenv
adc
jl
fwait
and
lret
into
int
pop
sub
lods
mov
out
out
cmc
movsb
leave
inc
out
inc
push
outsl
shlb
push
push
test
and
cs
sub
pop
fcomps
fcomip
or
call
xchg
cmpsl
sahf
inc
roll
push
lods
je
inc
mov
dec
js
test
lahf
mov
fisttpll
cwtl
xchg
leave
in
cs
popl
into
nop
mov
mov
leave
add
pop
leave
call
xor
sarb
pavgw
and
sahf
sub
shll
adc
xor
inc
outsb
rorb
pop
pop
jb
sbb
daa
push
adc
jmp
addr16
in
xor
fs
orl
clc
push
test
icebp
and
dec
pop
push
cmp
sub
sbb
loop
xchg
dec
xor
jg
loop
andb
loop
add
scas
pusha
dec
call
pop
scas
sarb
sbb
add
idivb
or
sub
xchg
and
push
pop
pop
outsl
inc
ss
test
inc
sub
pusha
lahf
lret
xchg
ljmp
jo
js
sbb
mov
bound
xchg
dec
int
lahf
mov
cmp
xchg
push
sahf
push
es
pop
adc
lret
jbe
shlb
mov
add
mov
lret
ds
pop
sbb
xchg
inc
inc
mov
dec
jmp
out
jno
push
imul
xchg
mov
and
dec
pop
add
or
jge
in
nop
pop
pop
pop
and
or
inc
je
stos
mov
mov
sub
int
popf
sbb
mov
das
and
or
inc
sbb
je
lods
ret
testb
je
or
gs
scas
mov
outsl
jbe
stos
push
and
or
insb
stc
rclb
subl
jp
addl
cmc
add
pop
mov
push
mov
ds
xor
jmp
xchg
imul
fcmovne
out
ror
pop
mov
neg
es
jae
xchg
or
mov
stos
add
xlat
pop
stc
inc
es
xchg
push
xchg
sbb
scas
sahf
dec
add
adc
ret
stc
rcr
clc
jns
ljmp
std
inc
cmp
aam
dec
pop
mov
xor
and
push
xchg
jp
and
and
cmpsb
jg
pop
loopne
loopne
test
jnp
out
sub
adc
and
gs
mov
mov
hlt
std
test
jb
and
sub
mov
mov
push
pop
subb
mov
jnp
adc
out
cld
and
mov
mov
mov
sarl
mov
sub
push
mov
sub
in
das
xor
adc
xchg
mov
lds
jns
xchg
mov
daa
jno
loope
cmovs
mov
cmp
loope
mov
lcall
sub
xlat
jle
pop
pop
or
pop
push
leave
cmpsl
xor
pushf
hlt
pushf
movsb
fisttps
rcrl
in
daa
cmp
mov
xchg
sahf
lret
xchg
sub
and
inc
mov
or
jmp
pop
jge
xchg
lret
mov
cmpsl
insb
mov
push
test
movsb
mov
cwtl
cmc
dec
data16
or
in
addb
int3
std
out
into
pushf
push
lds
lret
shlb
push
add
xor
les
loope
js
test
test
sub
adc
in
jae
stos
lods
mov
repz
repz
call
mov
adc
lret
mov
int
ja
iret
or
and
mov
lds
call
xchg
ss
add
or
and
cli
or
sbb
and
lock
cmp
sbb
mov
sub
int3
inc
ljmp
test
cmpsl
addb
jecxz
dec
sarl
fsubp
ss
cmp
xor
push
mov
aam
mov
test
and
das
in
lahf
subl
sbb
sub
adc
and
sub
mov
addr16
xlat
jmp
cmp
arpl
ja
or
jecxz
popf
mov
and
cmp
inc
and
stos
repnz
sbb
inc
cmp
xchg
cwtl
adc
into
lret
sbb
aad
loopne
sub
popf
sbb
fistps
test
adc
add
xorb
pop
dec
notl
pop
add
mov
xor
ror
mov
mov
test
cmp
xchg
dec
fnsave
scas
ljmp
shll
test
and
mov
sbb
mov
or
sbb
add
out
pusha
cvtdq2ps
xor
cltd
mov
push
dec
jbe
repz
ss
cmc
push
or
dec
mov
inc
pop
pusha
repnz
into
std
adc
lret
mov
xchg
rcrb
jge
lea
pop
int3
pusha
adc
or
or
pop
mov
cs
fwait
icebp
sbb
or
pop
jle
arpl
in
mov
ret
lar
sub
leave
call
roll
je
mov
and
inc
test
push
mov
xor
cmp
push
int
movsl
icebp
fwait
test
and
mov
add
fdivrs
int3
dec
out
or
scas
xlat
cmp
in
mov
cltd
jo
mov
mov
xchg
pop
and
mov
js
and
test
in
push
jle
dec
das
fsubr
push
outsb
cmpsb
mov
push
inc
pop
ds
mov
bound
clc
cmc
mov
cmp
movsb
mov
ja
dec
setge
cli
sub
hlt
std
es
daa
lods
aad
mov
sbb
mov
mov
mov
daa
lods
dec
mov
or
and
jecxz
ja
xor
sub
push
sub
bound
daa
push
and
mov
mov
mov
inc
dec
pop
jae
push
mov
sub
je
xor
mov
popa
jl
lret
jle
jl
add
mov
pop
lods
je
pushf
mov
mov
jecxz
mov
xor
nop
in
dec
mov
cmp
sub
inc
add
das
and
popa
add
ret
pop
jo
pop
shl
data16
xor
in
adc
cwtl
leave
add
ret
mov
inc
sub
subb
imul
pop
mov
add
inc
cld
aad
das
inc
cli
out
xchg
sub
fdivrl
inc
pop
mov
cmp
push
xchg
cmc
gs
das
add
cmc
dec
data16
sbb
int3
outsb
out
les
cmpl
cmpxchg
jp
pop
stos
mov
pop
jmp
adc
mov
int
sahf
idivl
add
dec
lods
add
stc
jmp
sarl
test
push
stos
daa
cmpsl
cmc
inc
jno
jns
jge
lods
add
fs
xchg
inc
xor
aam
scas
dec
shrl
jae
push
popa
and
push
lcall
xchg
cmp
enter
mov
xchg
out
dec
js
das
or
cli
sub
cmp
inc
sahf
cld
mov
push
fnstsw
popf
out
sub
or
add
aam
mov
insl
jbe
shll
dec
or
scas
jbe
inc
in
jae
jmp
pop
xchg
aam
daa
mov
addl
xor
dec
pop
test
push
test
mov
jmp
inc
add
cmp
aaa
jp
jg
mov
pop
push
aam
pop
into
enter
xacquire
jno
xchg
jg
push
or
add
adc
test
clc
ficoml
ret
hlt
cmp
inc
stos
test
insl
or
adc
jle
js
addr16
loope
out
int
mov
flds
clc
jmp
out
mov
shll
jbe
out
rolb
aad
stc
inc
jbe
fwait
mov
ljmp
rorb
inc
adc
es
cmc
fildl
push
lcall
cmpsb
jp
out
insl
xchg
cmp
sub
push
nop
incl
bound
in
add
and
or
movsl
insb
mov
out
nop
sarb
pop
dec
lods
xor
sti
pop
clc
dec
enter
dec
xor
push
sub
adc
push
dec
lcall
in
add
pinsrw
jp
idivb
test
jb
pop
frstor
jne
insl
adc
and
in
andl
bound
mov
into
xor
repnz
dec
sbb
bnd
fiadds
aam
hlt
push
inc
pop
outsb
lret
or
push
insl
xchg
sbb
xlat
daa
imul
jne
sub
jl
ljmp
inc
mov
xor
xorb
outsl
mov
fcomi
jg
cmpsb
jnp
xlat
cmp
cmp
xchg
inc
loopne
pusha
sub
fisttps
int3
mov
mov
add
hlt
sahf
imul
sub
loope
pop
shrb
jg
add
shrb
je
insl
jecxz
out
cmpsb
movsb
aam
sub
movsl
push
sbb
cmpsb
inc
mov
jne
call
dec
imul
loopne
fldenv
popf
test
lret
stc
inc
jg
pusha
dec
jo
int
jb
mov
xchg
push
mov
mov
xchg
lods
out
mov
mov
sbb
inc
mov
scas
adc
xlat
pop
jne
add
outsl
dec
ds
xor
dec
jl
mov
sbb
mov
xor
and
push
imul
and
xchg
imul
mov
insl
js
sub
stos
sub
sbb
inc
inc
js
ja
push
push
xchg
or
push
inc
pop
rorb
imulb
pop
push
push
into
dec
push
mov
jns
out
jne
fbstp
les
jno
inc
and
call
stc
sub
bound
and
fdivs
cmp
jb
sbb
pop
and
sub
movsb
mov
cmp
inc
dec
aad
sar
push
or
sbb
roll
xorb
outsb
xor
xchg
mov
les
and
push
push
test
dec
cld
ss
fucomp
in
pop
mov
loopne
repnz
cld
jno
or
sub
decb
mov
scas
insb
and
rcrl
inc
popa
adc
dec
cmp
push
orb
mov
mul
push
inc
pop
lods
pusha
shlb
and
dec
dec
out
pushf
pop
mov
ret
out
xor
shl
and
mov
mov
pop
add
inc
sbb
adc
jb
aam
int3
push
mov
sbb
cmp
or
pop
popa
repnz
mov
mov
inc
enter
mov
mov
and
push
and
aam
xchg
jecxz
xor
cli
daa
imul
pop
push
dec
xor
inc
rcrl
test
xchg
arpl
and
dec
gs
push
mov
gs
adc
pop
sarb
inc
xchg
aad
jg
je
aad
xor
insl
or
pop
sub
inc
mov
lahf
pop
cmp
mov
icebp
notb
xor
out
ja
mov
sti
sbb
rclb
adc
sbb
mov
jns
jns
gs
push
or
mov
xchg
fnstenv
test
pop
xor
lret
mov
movl
xchg
xchg
push
in
enter
pop
jge
pop
jg
daa
jo
call
mov
into
mov
out
movsb
push
push
cmp
xchg
push
jecxz
out
and
and
inc
gs
movsl
pop
sti
adc
lock
cmp
xchg
stc
inc
lods
add
mov
sbb
inc
jns
sub
jno
pop
mov
sbb
sub
mov
lret
sbb
test
lock
or
adcl
jno
rcll
fbstp
imul
or
test
out
es
aaa
jnp
cli
icebp
stc
mov
and
dec
and
pop
add
test
and
xchg
pop
jae
in
ret
cmpsl
mov
push
sub
pop
mov
jle
inc
jge
cmp
inc
fwait
js
jecxz
xor
cld
cmpsb
icebp
pop
pop
dec
xorl
dec
not
lds
in
fldt
and
and
ss
cmp
cli
mov
inc
jmp
fs
dec
xor
leave
inc
fildl
push
stos
stc
xchg
jns
inc
cltd
add
fcmove
daa
or
adc
jle
inc
jmp
jl
cmpb
xchg
fwait
mov
jmp
andb
out
incl
in
pop
sbb
sub
inc
jbe
sbb
or
rcll
dec
shl
push
hlt
cmp
and
nop
inc
scas
mov
dec
pushl
mov
cltd
or
xor
in
in
mov
sub
or
and
cmpsl
aaa
in
push
cs
adc
hlt
pop
xchg
lods
jo
and
test
dec
cli
dec
and
dec
pusha
xchg
or
cwtl
mov
inc
mov
outsb
cmp
jbe
icebp
inc
es
aaa
imul
xor
sub
ss
mov
cs
out
rorb
lar
dec
pop
lock
pop
rcr
cmp
fnstenv
jns
mov
push
es
insb
arpl
aas
cmp
movsl
out
out
xor
loope
add
data16
xor
enter
add
cmp
sub
cli
enter
movsb
popa
into
jns
shll
int
arpl
lahf
dec
inc
pop
cmp
fcomip
pushf
push
inc
je
jmp
andb
daa
mov
and
int
adc
adc
into
lock
fists
les
data16
jecxz
dec
mov
stc
sub
mov
stc
aad
dec
aaa
ss
stos
ds
outsb
das
imul
sbb
mov
push
shlb
push
mov
jecxz
xor
ljmp
mov
cmp
fsubrl
mov
cmp
mov
insl
sahf
pusha
repnz
mov
sub
cwtl
cli
pop
inc
bound
mov
xchg
or
fistl
and
arpl
popf
or
shrl
outsl
pop
jae
jae
dec
je
cwtl
sbb
outsl
jno
mov
scas
movl
push
cmp
push
data16
insb
lock
cld
add
dec
add
mov
adc
mov
push
cmp
xchg
call
data16
sub
mov
and
das
ret
pusha
push
mov
das
add
rorl
sub
icebp
jl
shr
sub
fldcw
lock
in
jecxz
sub
js
scas
mov
and
stos
movsl
mov
pop
inc
out
pop
mov
mov
dec
into
or
into
xchg
pop
mov
pushf
lahf
cmpsb
sbb
cmp
xor
mov
lods
pop
dec
rclb
cmpsb
push
mov
xor
xchg
mov
mov
inc
mov
jno
mov
icebp
lret
push
dec
sub
cmpsb
and
dec
fcomps
out
inc
test
adc
sbb
into
mov
es
jo
repnz
jp
insl
shll
imul
cmpsw
lret
jb
arpl
scas
stos
jno
adc
test
adc
test
xchg
or
mov
icebp
add
adcl
pop
inc
nop
enter
icebp
adc
stc
les
xchg
add
push
call
sarl
lret
imul
and
mov
add
or
stos
mov
js
mov
sub
leave
add
cmp
out
sbb
cmpsb
xor
jne
and
inc
xchg
add
in
fcompl
decb
push
hlt
push
daa
call
ss
sbb
stos
test
outsl
pop
push
movsl
add
fcoml
cmp
and
inc
test
mov
mov
out
mov
aad
dec
aas
idivl
jne
mov
adc
push
lret
mov
mov
mov
pop
fdivl
xchg
push
mov
jno
cltd
lods
aad
scas
mov
bound
jg
mov
cltd
stos
pushf
dec
fidivrs
jmp
mov
dec
jnp
pop
jb
inc
push
mov
jl
loop
push
icebp
and
repz
imul
aad
fwait
aam
sbb
call
cmc
adc
loop
arpl
sbb
pop
mov
lret
jmp
mov
hlt
push
enter
int3
mov
sar
inc
aam
std
fcomip
fs
negb
lahf
xchg
push
inc
ljmp
adc
ljmp
jae
and
mov
xchg
mov
jle
lret
mov
in
movsl
inc
xor
shl
std
and
rcll
test
ja
fdivl
mov
jl
push
mov
outsl
cld
xlat
mov
sbb
or
in
xchg
cmp
cmp
mov
lods
repz
push
push
jae
rcrb
popf
pop
xlat
fisubl
mov
in
fidivs
pop
mov
sbb
daa
inc
jmp
sub
push
jmp
inc
andl
mov
cmp
xor
pop
clc
inc
in
leave
pop
test
mov
xlat
inc
inc
mov
iret
push
int
inc
fs
pop
jne
mov
aad
in
fimuls
mov
repz
lcall
adc
mov
test
fildl
sbb
xlat
sub
xor
dec
pop
mov
mov
jne
lret
push
cmp
aam
in
rcll
movl
mov
lcall
jns
xor
pop
jne
test
adc
dec
dec
mov
jno
aaa
ret
fbstp
pop
and
orb
dec
movl
pop
fwait
sarl
sbb
roll
sub
sbb
fcompl
push
lods
jmp
sbb
mov
mov
scas
rcr
dec
cmc
mov
lcall
lahf
add
cli
inc
dec
mov
clc
sbb
mov
mov
fs
jae
and
scas
scas
cltd
rol
loope
mov
mov
sarb
ss
subb
push
mov
loope
sbb
cltd
ffree
clc
mov
dec
aam
scas
rolb
ss
adc
pop
jecxz
loope
clc
insl
cmpsb
cltd
xchg
loop
dec
in
fsts
cs
xchg
clc
addr16
dec
mov
pop
lods
pop
jp
mov
xlat
movsl
icebp
push
cmp
sbb
bound
dec
dec
test
or
mov
cmp
mov
inc
outsl
enter
popa
dec
cmc
ret
pop
aas
mov
pop
xor
lock
add
jbe
dec
pop
sub
iret
iret
out
faddp
aas
les
pop
mov
adc
nop
fwait
xchg
sub
jb
jb
push
mov
mov
xlat
sarb
add
sahf
xchg
cmp
jno
call
adcb
adc
outsl
inc
fwait
xor
ss
test
mov
insl
jb
ds
xchg
mov
scas
sbb
mov
dec
fcoml
js
fs
call
sub
jb
fsub
inc
jno
ljmp
adc
pop
cmp
sub
pop
sbb
or
push
cwtl
mov
push
in
cmp
insl
pop
sbb
jbe
rcll
xchg
mov
sub
pop
in
push
andb
cmc
dec
out
test
es
sub
xor
xchg
pop
sti
or
dec
lcall
sub
push
rcrl
jl
mov
push
jae
lret
mov
fwait
push
enter
push
repz
xor
add
push
adc
fisubl
jmp
call
lahf
lea
fcompl
mov
std
pop
out
les
int3
mulb
imul
push
mov
ljmp
idivb
sar
lret
ja
addb
push
std
xchg
mov
mov
imull
sbb
js
ret
repnz
or
adc
jge
inc
hlt
adcb
sub
pushf
xchg
jns
imul
inc
or
ret
enter
dec
xchg
cwtl
les
mov
leave
cmp
fsub
imul
mov
sub
or
inc
not
fimuls
js
dec
and
or
mov
jle
aas
push
aaa
jae
pop
in
jb
mov
mov
mov
arpl
jmp
jmp
shrb
push
xor
loopne
test
movsl
adc
mov
call
push
mov
outsb
jno
fbstp
addr16
cmp
add
xor
jne
cmp
lock
clc
in
cmp
jl
or
mov
push
mov
mov
insl
mov
clc
cmc
sub
out
mov
push
pusha
imul
push
test
fstpt
mov
fimull
cmp
fisttpl
cmc
or
pop
hlt
dec
inc
mov
cmpsl
jnp
push
pushf
and
lock
imul
rolb
cs
mov
add
sub
pop
rclb
idivb
loope
mov
movsl
cmp
mov
rolb
call
aad
loop
jno
ss
into
mov
and
sbb
sarb
les
inc
std
xlat
add
sub
inc
lcall
pushf
sub
xchg
mov
or
and
out
pop
addr16
push
mov
lea
fldenv
mov
sti
xchg
rorb
in
jnp
das
pop
dec
pop
inc
jae
hlt
pop
push
std
inc
pop
iret
out
movsb
push
xchg
scas
xchg
dec
movb
loopne
pop
shlb
fnstcw
adc
and
adc
adc
and
ja
ljmp
and
pop
popf
mov
leave
dec
ret
sbb
pusha
add
inc
dec
movsl
mov
pop
movsl
hlt
rcrb
mov
inc
sbb
ret
ret
mov
mov
push
push
mov
inc
push
sbb
pop
adc
pop
ljmp
add
xchg
out
aam
int
aas
ja
sbb
lret
jmp
repnz
inc
out
js
test
daa
or
jle
and
int
test
popa
daa
mov
push
mov
or
movsl
pop
mov
mov
dec
xorl
jns
movsb
dec
jg
sbb
push
jne
es
xchg
jge
sbb
xchg
jp
shlb
sbb
rclb
in
sti
and
notl
mov
xlat
outsl
xor
sub
adc
add
pop
sbb
scas
pop
lea
xchg
pop
cmp
cltd
icebp
pop
out
xchg
cmc
iret
out
and
cli
add
adc
movsl
add
je
aam
lcall
adc
out
leave
lods
adc
jmp
pop
leave
sbb
mov
push
lahf
icebp
movsb
fisubs
add
nop
fsubr
lds
lds
repnz
cmc
and
sti
push
jb
adc
jp
xor
pop
adc
imul
sbb
or
fimull
adc
jbe
add
clc
les
or
inc
in
push
pop
lods
push
pop
push
pop
push
fnstenv
neg
cli
inc
dec
mov
inc
aas
sbb
dec
add
imul
out
cmp
jno
sbb
in
push
dec
enter
and
mov
mov
push
sbb
jle
sub
xor
loopne
iret
call
mov
imul
test
test
cmp
shrb
into
test
inc
test
xchg
data16
mov
lret
push
cmpsl
push
loope
in
rorl
add
cltd
movsb
add
sub
sub
test
jae
push
mov
fs
xchg
fs
arpl
aam
lret
xor
jmp
je
or
out
push
or
sub
mov
lock
out
pushf
cli
pop
or
imul
imul
pusha
in
ljmp
jo
mov
iret
mov
dec
ja
loopne
out
mov
in
stos
xlat
test
outsl
xchg
add
insb
or
dec
mov
add
adc
call
and
jae
mov
cmpsl
pop
xchg
test
ljmp
loope
pop
inc
mov
cmp
in
or
dec
sbb
xor
in
repz
xchg
xor
dec
pushf
push
lods
pop
mov
xor
dec
mov
mov
fdivl
sub
cmpl
inc
push
lret
dec
mov
int3
pop
out
xchg
in
add
cmpl
ds
push
icebp
mov
ja
dec
sbb
jmp
adc
jnp
js
ret
jl
dec
nop
jbe
xchg
push
mov
xchg
rol
int
xchg
fs
push
xchg
lret
inc
jecxz
jle
ljmp
mov
arpl
aad
push
loopne,pt
cmp
dec
sbb
add
or
nop
mov
mov
dec
jbe
xor
add
rorb
inc
adc
mov
das
jecxz
ret
daa
jnp
repnz
push
xor
or
push
mov
roll
ja
adc
mov
ds
in
popf
mov
push
mov
mov
imul
sub
mov
mov
or
sarb
loope
add
rolb
cmp
sbb
in
adc
ljmp
cwtl
xchg
push
js
sub
inc
cmp
out
mov
push
mov
test
insl
bound
lret
or
dec
push
push
frstor
xchg
push
dec
ret
clc
lea
sub
fstpl
dec
cmpsl
xchg
pop
in
das
test
adc
xor
cmp
iret
inc
jnp
iret
enter
adc
adc
lcall
adc
mov
mov
push
idivl
push
icebp
icebp
mov
idiv
outsl
fildll
push
pusha
aam
jg
xchg
add
or
cs
aam
popf
or
jmp
loopne
and
popa
mov
xchg
jmp
mov
cmp
aam
sbb
sub
pop
mov
xor
fstl
fldl
push
and
lods
test
imul
mov
and
push
iret
call
mov
mov
jge
dec
xchg
sbb
sbb
dec
lods
xchg
xchg
movl
push
jo
repnz
mov
cmpsl
sbb
icebp
dec
inc
cmp
sub
mov
mov
mov
icebp
add
cmp
or
push
push
add
test
ljmp
xchg
adc
jl
jae
mov
xchg
mov
mov
mov
jae
imulb
jg
leave
dec
aad
inc
hlt
add
cli
jmp
icebp
lea
scas
in
sbbl
iret
push
int3
imul
xchg
adc
sub
cltd
popa
scas
stos
mov
fdiv
sarl
mov
or
xor
cmc
fists
call
sti
xchg
sub
push
test
mov
pop
es
or
dec
popf
sub
pop
push
int
inc
cmpsb
dec
rcrb
outsb
adc
dec
jo
loop
and
xlat
lock
pop
add
push
sub
xor
adc
nop
fsubs
and
dec
and
sub
js
test
adc
sbb
dec
xchg
jbe
sbb
inc
mov
xor
cmpl
iret
enter
jge
hlt
das
push
out
ss
adc
cmp
fcoml
mov
inc
dec
ds
out
push
ja
mov
sbb
js
loope
mov
aam
or
enter
push
mov
fninit
mov
ss
add
bound
test
ret
dec
icebp
andb
xchg
orb
adc
push
inc
cld
jb
icebp
mov
sarl
xor
mov
xchg
xor
jecxz
dec
dec
xor
mov
sbb
test
nop
mov
inc
fbstp
les
aaa
xchg
and
or
fwait
int3
xorl
aas
std
inc
adc
sbb
popf
nop
mov
cmp
jg
out
rclb
xchg
inc
sbb
nop
jmp
mov
jp
sub
fs
mov
ret
lret
stc
mov
lods
ficomps
movsb
sbb
adc
adc
pop
push
scas
dec
cmp
and
and
dec
cltd
icebp
inc
or
add
and
mov
cltd
into
sub
dec
test
fisubs
jp
mov
or
adc
inc
popf
mov
xchg
shlb
aaa
in
xchg
jb
mov
test
inc
cmp
fsubrs
pop
dec
mov
gs
fs
outsb
scas
pop
adc
mov
mov
adc
push
shll
pop
test
sar
mov
call
ret
leave
test
addr16
ja
mov
pop
mov
push
add
rorl
adc
out
inc
mov
adc
inc
notl
xchg
test
data16
scas
adc
fnstsw
std
lret
mov
jo
add
push
sub
sar
call
cmpb
dec
out
cli
das
jl
call
repz
mov
mov
push
inc
xchg
mov
or
pop
je
mov
sbb
inc
lods
int3
mov
dec
add
push
mov
imulb
shlb
push
rcrb
jns
xor
sti
out
mov
test
nop
mov
or
gs
jns
xchg
loope
bndldx
repnz
mov
out
mov
ljmp
insb
es
gs
xchg
cmc
mov
pop
cmp
cmp
mov
mov
adc
sahf
and
roll
cmp
addr16
fimuls
mov
jl
mov
shl
inc
mov
add
mov
mov
in
lea
ret
clc
mov
aam
mov
or
lcall
divl
hlt
lret
andb
jg
lods
push
xlat
fldt
insb
add
xchg
mov
adc
out
fmul
add
hlt
add
fbstp
sub
lds
add
xchg
imul
cmpsb
out
aaa
jmp
daa
jo
mov
or
fildll
adc
cmp
and
jno
push
and
aaa
outsl
or
hlt
adc
pop
cmpsl
adc
inc
lock
xlat
mov
or
jb
xor
pushf
mov
adc
push
jbe
push
aaa
jl
xchg
pop
pusha
xor
les
push
lods
in
inc
leave
sub
mov
fstpl
repz
jmp
add
aam
lret
mulb
cmp
mov
out
add
cs
dec
and
fdivl
nop
pop
enter
dec
stc
mov
aas
dec
mov
push
or
jp
mov
ss
fwait
adc
mov
lods
cmp
orl
addr16
xor
ds
push
inc
dec
lcall
adc
sub
rcr
xlat
in
or
jecxz
cltd
nop
add
push
adcb
add
mov
fbstp
jecxz
aad
adc
in
jae
dec
in
clc
ljmp
into
mov
sahf
ja
jns
daa
scas
fwait
lds
sub
aam
and
je
add
pop
pop
nop
xchg
icebp
rcrb
jg
ror
jns
addr16
inc
mov
cmp
xorb
int3
push
sbb
into
hlt
loope
adc
push
test
push
push
ss
into
movzwl
pop
into
dec
or
or
icebp
daa
rorl
adc
cmp
cmp
push
push
in
mov
xchg
jnp
sbb
xor
cmp
jmp
inc
lahf
fcompl
ret
pushf
or
popf
out
cltd
int
lods
xor
int3
stc
pusha
fistl
jb
pusha
test
inc
push
cmp
add
push
ds
js
dec
in
inc
imul
or
lods
aaa
cmp
jnp
xor
add
insb
cltd
push
shrl
imul
es
xor
pand
xorl
hlt
inc
mov
xor
mov
pusha
cmp
mov
pop
enter
push
push
xchg
aas
ljmp
popf
xor
cmp
cli
enter
or
ljmp
xchg
aad
adc
add
mov
dec
inc
sub
add
mov
mov
js
lcall
cs
pop
add
sub
test
movsl
jns
cld
andl
enter
ret
jle
loopne
xchg
arpl
out
pop
lods
sbb
lret
and
in
out
mov
addr16
out
loope,pn
mov
mov
xchg
into
mov
and
mov
sub
adc
dec
test
and
jle
lcall
or
scas
xchg
loope
push
mov
mov
inc
pop
lahf
dec
div
nop
fs
inc
xchg
add
aad
rcrl
dec
sub
mov
pop
cmpsl
loopne
jae
icebp
faddp
bound
push
insl
sub
sbb
xor
mov
sbb
xchg
out
pop
xor
jle
clc
shlb
test
jle
cmp
sub
fnsave
push
leave
pop
loop
inc
test
cmpsb
sahf
pop
mov
jb
iret
mov
out
idivl
repnz
test
push
ret
or
movsl
jae
icebp
cmc
cmpl
xlat
mov
mov
pop
testb
and
rcl
fsubr
jecxz
mov
push
inc
hlt
call
inc
cmp
in
xchg
mov
mov
imul
sbb
aam
mov
fldt
adc
ret
bound
xchg
inc
inc
icebp
adc
dec
fldt
mov
movsb
test
and
fwait
jg
daa
inc
cmp
xchg
pushf
adcb
jp
push
xchg
je
addb
and
jns
jnp
sub
lock
inc
mov
push
sub
sti
movsb
mov
mov
faddp
and
shl
sub
jnp,pn
dec
add
icebp
mov
sub
cmc
mov
and
pushf
jecxz
lods
push
fiadds
mov
pop
test
lea
rcrl
test
leave
mov
int
sbb
outsl
lcall
cli
nop
push
push
out
pop
jno
sbb
fisttpl
xchg
ds
movsb
stos
fwait
pop
rep
adc
mov
cmp
es
xor
push
xchg
push
mov
cmc
inc
inc
fsts
fcomps
mov
loop
sub
int3
sub
push
les
mov
js
sbb
jo
xchg
mov
pop
mov
leave
daa
imul
sahf
pop
xorl
lds
repz
rclb
cmp
ret
and
jg
mov
adc
dec
fadds
fbld
dec
mov
mov
ret
add
adc
xor
pop
fisttps
inc
cltd
mov
sbb
push
push
add
mov
sbb
js
gs
or
stos
icebp
or
insl
or
mov
popf
fstl
or
mov
cmpsl
sbb
rcll
aaa
stc
sub
sub
mov
push
sub
mov
sbb
fidivrl
xchg
sub
cli
xchg
xchg
xor
imul
cwtl
js
dec
movsl
pop
ror
test
cmp
sbb
sbb
dec
xchg
mov
add
aam
push
inc
repz
xor
loope
push
loope
insb
fsubp
mov
insl
and
popa
into
sbbl
cmpl
cmpsl
xchg
mov
dec
sbb
lret
push
mov
pusha
cmp
fdivl
incl
push
pop
inc
pop
in
push
decb
lods
inc
lcall
insl
mov
out
shlb
jecxz
bound
mov
add
in
rolb
stos
sbb
adc
or
ja
loope
insb
stos
inc
adc
push
negl
jne
mov
mov
sbb
aam
pushf
out
push
out
push
xorl
and
jmp
js
jg
inc
repnz
xlat
and
lds
icebp
in
fmul
into
loopne
hlt
adc
push
rclb
dec
pop
ret
xchg
mov
add
xchg
sbbl
cmp
mov
jae
sub
adc
jb
jmp
push
xor
jb
inc
cmc
cwtl
loop
xor
pop
pop
pop
mov
mov
mov
int3
xchg
mov
mov
mov
imul
aad
fidivl
xchg
cmp
add
mov
call
add
lcall
cmp
pop
mov
mov
mov
mov
pop
and
loop
test
shr
out
sub
insb
push
pop
ds
lahf
fisubl
lock
push
or
stc
out
jae
fisttps
xchg
fwait
sbb
sbbb
pop
fs
fisubl
jnp
out
cmp
std
es
stc
add
aad
movsl
cltd
xchg
outsl
or
mov
sub
add
dec
mov
inc
mov
jb
push
add
dec
das
add
inc
sbb
addr16
test
repz
data16
push
pop
pushl
popa
rcrb
push
mov
jae
inc
xchg
out
push
jecxz
adc
addr16
xchg
out
or
cli
inc
popa
sahf
stos
arpl
pop
sub
shll
mov
cmove
mov
xor
ret
ljmp
inc
xor
mov
lret
aad
aas
mov
mov
push
jl
mov
sbb
cwtl
xchg
lahf
ja
jne
xchg
xchg
clc
lock
mov
pop
imul
sarb
sub
mov
mov
or
mov
fidivl
adc
pop
fisubrs
aam
sub
xchg
mov
stos
jb
pop
and
fidivrl
fidivrs
cmp
sbb
inc
addb
das
pop
cmp
insb
lea
clc
cwtl
push
xchg
test
repnz
dec
mov
dec
out
cwtl
sbb
clc
incb
push
ficoms
cmp
push
ds
mov
cmpsl
insl
sahf
ffreep
cmp
fsubp
imulb
jo
out
push
mov
cmc
mov
and
mov
roll
mov
pop
jmp
xchg
jecxz
lahf
aam
repnz
imull
cwtl
les
out
test
out
mov
dec
fwait
loopne
or
xlat
jbe
dec
xor
leave
shll
leave
cld
clc
sbb
jns
pop
sub
dec
inc
cmp
mov
jp
cwtl
inc
xchg
pop
jge
jecxz
adc
mov
lahf
pusha
ja
sub
mov
popf
repz
std
sub
mov
aam
out
hlt
mov
lock
inc
jg
imul
icebp
cmp
and
mov
cld
in
cmp
sarl
jo
shll
xor
mov
ret
hlt
add
dec
std
leave
inc
add
cmp
fmuls
ficomps
divl
not
pop
cld
cli
imul
push
pop
fcmovb
test
test
cmp
out
rcll
inc
out
mov
sub
and
jp
add
pop
sub
ds
add
inc
cmpb
jb
dec
fstl
loope
sub
adcl
outsb
movb
dec
push
fdivl
hlt
dec
loop
jg
rol
adc
jmp
xorb
mov
cltd
dec
jb
loop
cmp
cltd
inc
add
daa
je
or
jmp
in
xchg
cvtps2pd
add
jge
and
jecxz
loopne
cltd
jne
iret
insl
cmp
outsb
jo
sbb
push
cmp
sub
pop
jne
adc
leave
sub
add
mov
shlb
mov
mov
mov
inc
incl
jo
adc
mov
pop
in
mov
and
addr16
cltd
mov
sarl
test
jmp
popa
aas
cmp
mov
test
fidivrl
movsb
lret
pop
xor
ret
xchg
mov
or
xlat
push
mov
sub
adc
rol
dec
cmpsl
add
int
and
mov
orb
xor
dec
mov
mov
repz
cwtl
les
mov
fwait
inc
mov
and
in
shrl
jno
int
arpl
inc
inc
jae
mov
pop
dec
lds
addr16
repz
dec
sub
int
in
xchg
sub
fdivs
dec
je
clc
jnp
lds
add
ss
xor
sarl
rcll
iret
inc
xlat
xchg
loop
add
push
pop
jae
add
or
into
inc
lret
sbb
or
scas
sub
out
pop
mov
mov
sbb
adc
mov
pop
stc
popf
sti
leave
push
pop
aaa
cmpb
test
aaa
and
jp
fsubp
jmp
pop
movsl
xor
popa
and
push
loop
out
lret
arpl
repnz
cmp
xchg
push
dec
inc
shl
sahf
arpl
push
and
sub
pusha
inc
sbb
xor
mov
mov
sub
xchg
jmp
dec
mov
outsl
cmp
sub
in
aaa
je
mov
mov
lea
and
inc
jmp
shll
dec
mov
dec
push
adc
nop
xchg
xlat
or
mov
add
sti
xchg
fdiv
pushf
push
mov
mov
xor
movsb
jno
out
inc
je
gs
mov
xchg
or
jl
push
out
out
dec
outsb
pop
jnp
rcl
mov
test
fldenv
lcall
aas
pop
pop
mov
rcll
mov
sub
cltd
cmpsb
in
xchg
out
jl
pusha
dec
jle
or
scas
or
rorl
or
pop
stos
cmc
cmp
shl
xchg
mov
rclb
scas
inc
cmp
stc
mov
sub
sub
ss
insb
push
inc
xlat
rorb
xor
mov
rcl
pop
lods
add
adc
ffreep
mov
dec
jle
pusha
rorb
jbe
xchg
loopne
add
cmpsb
sub
or
icebp
mov
or
pop
sbb
xchg
cmpsb
insb
insb
imul
dec
sbb
lds
pushf
iret
sub
mov
sub
in
cli
jnp
repz
ja
movsb
xchg
adc
in
insb
push
cmp
xlat
fmull
pusha
pop
pop
or
aad
imul
mov
sub
outsl
enter
mov
into
loope
shll
xor
test
mov
mov
mov
inc
clc
mov
cmp
pop
inc
add
cmc
push
inc
ds
mov
mov
jmp
popf
js
ja
push
repnz
add
jp
lret
ja
das
out
mov
fisttpll
mov
out
push
test
mov
mov
xchg
mov
lret
imul
je
scas
or
xchg
push
dec
jg
mov
lcall
jno
fldcw
pushf
dec
daa
and
enter
push
cmpsl
sarb
sbb
push
mov
xor
add
adc
icebp
mov
add
sar
mov
mov
xchg
adc
daa
mov
xor
inc
loopne
std
jo
jns
xor
and
lret
fs
pushf
and
fisubrs
popf
jno
jle
xor
adc
call
xchg
push
jl
sub
jg
add
cmp
cmp
mov
mov
mov
cltd
sahf
pop
xor
lods
lahf
mov
popf
outsl
movsb
int3
or
jmp
data16
jecxz
pushf
dec
push
adc
mov
mov
fnstenv
adc
aas
push
aas
xor
cwtl
sbb
cltd
shll
mov
addb
mov
mov
sub
sti
sub
test
push
enter
js
repz
enter
jge
mov
data16
call
cmp
adc
arpl
leave
sub
inc
mov
shr
in
lcall
sbb
pop
mov
ret
jmp
int3
loopne
movntq
ljmp
in
xlat
sub
sub
fisubrs
sub
mov
push
lret
or
notb
ficomps
cwtl
cmp
pop
dec
push
xchg
hlt
movsb
sub
aad
popf
adc
jne
cmpsb
pop
cmp
dec
mov
pop
movsl
ret
push
fisttpll
xlat
imul
ret
pop
test
stos
dec
loopne
mov
add
and
shlb
mov
sbb
pop
pop
mov
xor
popa
inc
xchg
and
adc
adc
jle
jns
inc
divl
gs
push
stc
or
mov
sub
sbb
dec
arpl
inc
and
pop
push
sahf
adc
daa
lea
jne
xor
fnsave
out
imul
aad
ds
int3
sub
arpl
nop
outsb
lods
mov
and
push
adc
mov
mov
lret
jbe
loopne
jb
cmovo
stos
icebp
int
adc
xchg
mov
mov
mov
jne
mov
dec
loopne
pop
lcall
push
js
xchg
inc
insb
stos
adc
jp
idivb
jbe
hlt
arpl
scas
ret
or
imul
adc
pop
mov
jnp
repnz
dec
mov
jge
mov
imul
outsb
mov
dec
cli
enter
test
push
push
add
dec
xor
xor
fldt
rcll
mov
push
mov
xchg
addr16
rclb
cmc
xchg
out
mov
add
bound
inc
mov
fcmovu
stc
rclb
insb
xor
fdivs
fsubr
imul
scas
pop
loopne
cmp
xlat
sub
ja
mov
mov
aas
dec
sub
pop
cmpsl
inc
dec
enter
out
push
jae
push
mov
xchg
out
dec
rcrl
movsl
inc
inc
popf
dec
mov
fmul
mov
dec
dec
mov
movsb
xchg
mov
add
pop
aas
bound
xchg
insl
mov
jo
adc
pop
cltd
lock
lds
adc
mov
mov
lret
sbb
add
test
cmp
push
lret
xor
jp
data16
aas
in
jge,pt
cwtl
shl
mov
cmp
sub
sub
xchg
vpavgw
mov
and
mov
pop
fdiv
mov
push
xor
int
scas
xchg
mov
lcall
mov
sbb
pop
push
mov
jb
xor
and
jnp
mov
mov
add
pop
test
ja
jno
sub
fistpll
dec
sub
dec
push
cmpsb
adc
out
das
or
aaa
xchg
icebp
push
lods
lahf
fbstp
arpl
sbb
mov
cmp
xchg
jo
push
inc
dec
dec
pop
and
insb
insb
jg
rcrb
cmc
movsl
add
dec
mov
fcompl
loope
repnz
fwait
mov
and
icebp
xchg
jg
jge
data16
test
mov
stos
sub
xchg
inc
mov
je
dec
lods
push
mov
jbe
pusha
xor
lods
bound
sbbb
hlt
arpl
lahf
iret
rorl
insl
out
mov
xor
xlat
inc
sub
je
sbb
xor
sub
push
sahf
clc
jae
int
xchg
mov
xor
js
xchg
push
scas
dec
sub
xchg
xor
and
pop
ja
int
fcompl
orl
push
sub
push
jl
mov
inc
cwtl
test
nop
push
pop
scas
orb
lret
std
ss
ret
sub
iret
jg
insb
or
push
pop
into
gs
pop
inc
pop
push
dec
adc
jmp
lret
flds
div
out
inc
sti
mov
mov
xchg
xchg
stc
ror
rcll
cwtl
cmp
pusha
xor
pop
push
jmp
push
in
adc
add
inc
sbb
push
mov
lcall
test
ret
jle
stos
or
iret
add
imul
scas
fwait
push
ret
add
jp
inc
cmc
test
adc
popf
outsl
lret
xorl
mov
cmp
pushl
add
xlat
cmp
dec
mov
lret
jmp
js
jmp
inc
sti
addr16
add
lret
or
stc
dec
sbb
repnz
rcr
mov
mov
ss
repz
jmp
stos
pop
fwait
in
mov
jp
ret
ds
mov
sub
divb
sbb
imulb
data16
pop
mov
int
push
jp
nop
mov
jae
inc
icebp
sbb
mov
xchg
aad
mov
jl
mov
data16
ja
sar
rcr
inc
push
lret
mov
sbb
cltd
pop
xchg
mov
jno
testb
daa
popa
or
test
jl
xchg
dec
jle
scas
cld
in
ljmp
cmp
and
xor
inc
outsl
in
jmp
adc
les
dec
jl
mov
add
push
dec
mov
mov
ja
mov
lods
sti
lret
adc
daa
sbb
or
clc
gs
lret
mov
lods
lret
insb
add
std
popf
and
inc
insl
jnp
adc
xor
fwait
or
xor
and
fnstsw
mov
adc
push
loop
mulb
fwait
xchg
cmp
lret
loope
es
jmp
imul
shrl
adc
xchg
pop
mov
arpl
xor
push
roll
xchg
add
or
test
pop
mov
jno
inc
shll
jbe
test
lahf
mov
cmp
sub
cmp
lea
jne
fstps
cld
dec
or
fsubl
lea
and
ret
inc
jae
mov
repnz
and
mov
ljmp
enter
shlb
ja
push
std
xchg
sub
mov
jp
test
push
mov
cmp
xchg
lcall
call
mov
in
dec
test
xchg
mov
stc
and
xor
dec
rcrb
jge
push
xchg
daa
push
icebp
or
test
push
or
cmp
cmp
push
or
mov
pop
inc
adc
mov
in
inc
jp
sub
sub
addb
pop
push
hlt
mov
sub
mov
pop
mov
dec
pop
cmp
psubd
lds
shll
push
arpl
aam
push
in
lods
mov
lock
aas
lds
movsb
movsl
xchg
inc
push
frstor
mov
mov
and
dec
xor
pusha
dec
jl
cmp
mov
or
mov
scas
shlb
fwait
lcall
adc
fdivp
push
fidivrs
repnz
repnz
jp
nop
and
das
add
mov
in
mov
dec
xchg
sarb
add
jge
nop
insl
dec
or
std
sub
je
sbb
outsl
sbb
push
adc
jmp
es
insb
insl
hlt
jg
fcoml
mov
ss
imul
dec
push
mov
mov
ja
mov
movl
jo
pop
rcll
mov
add
xchg
rol
daa
jb
pop
and
push
mov
fidivs
cwtl
sub
jle
aad
xchg
pop
cltd
xchg
sbb
mov
test
pop
jmp
xchg
mov
sbb
nop
or
sub
lea
sub
lret
dec
fsubr
int
push
ret
pop
fucom
mov
fistpll
int
stos
insl
hlt
dec
sub
fsin
fmull
int
sbb
lahf
push
cmp
mov
lods
stc
inc
notb
mov
loope
xor
testb
stc
cli
mov
iret
inc
add
pop
pavgb
lea
inc
add
and
sbb
test
gs
shl
hlt
or
out
jne
jle
pop
lea
sub
popa
xchg
ja
cwtl
inc
jae
push
dec
fsts
cmpsb
aam
inc
push
sarl
ja
hlt
ret
or
and
jne
dec
push
mov
mov
xchg
xor
dec
lods
mov
jnp
inc
push
popa
icebp
iret
enter
jl
dec
push
out
out
aas
cmpsb
aas
lcall
inc
push
stc
and
fnstenv
push
jmp
jo
xor
and
stc
jno
sub
push
leave
cltd
push
aaa
test
aas
or
adc
mov
adc
sbb
in
aas
lods
stos
jns
rclb
sahf
shl
std
cmpsb
sbb
negl
inc
repz
pop
jnp
mov
mov
push
ljmp
dec
jg
test
push
rol
sub
xor
pop
add
xor
mov
cli
pop
fidivs
jb
sahf
negl
dec
push
mov
lods
cwtl
pop
in
sbb
movsb
mov
sbb
pop
and
dec
lret
push
es
push
pop
hlt
xchg
fldenv
push
dec
and
sbb
es
mov
add
test
call
addl
xchg
loop
divl
icebp
or
xchg
dec
dec
push
je
daa
jno
and
in
ret
scas
nop
out
out
adc
int3
inc
ss
inc
cmpsl
shll
insl
bound
xor
popf
loop
inc
push
adc
jg
stc
mov
sub
jp
repz
mov
mov
es
outsl
icebp
cmp
and
sub
scas
pop
inc
pop
les
sub
inc
xchg
fists
cmp
or
jne
mov
pop
inc
pop
cld
outsb
mov
stos
testb
imul
sbb
add
jnp
mov
sbb
mov
test
push
xorl
adc
xchg
adc
daa
int
lock
fdivrl
stos
inc
sbb
cmp
aam
xchg
iret
jg
ljmp
int3
dec
out
shrl
cwtl
fwait
pop
mov
cmp
jb
xchg
xchg
push
pop
lcall
lret
jecxz
fildll
sbb
pop
mov
xor
js
cmc
lods
fcomps
rclb
outsb
pop
outsl
dec
xor
cmpsl
out
xor
dec
jae
pop
loop
xchg
popl
sub
aad
in
cmp
push
cmpsl
movsl
push
push
xor
loop
mov
por
mov
sarb
pop
or
jmp
jmp
and
cmpsl
arpl
stc
jmp
adc
push
push
sub
xchg
dec
int
mov
and
imull
mov
rcrl
cld
xchg
cmpsb
cltd
clc
in
leave
rcl
ret
xor
call
popa
mov
adc
ds
int
jg
loopne
or
popf
pop
jae
inc
push
sub
inc
jl
lret
jecxz
jne
in
popl
outsl
sub
mov
cld
add
inc
fnstsw
jp
ja
lcall
adc
mov
hlt
add
arpl
mov
and
jg
inc
push
jo
push
mov
lret
movsb
sub
mov
sbb
xchg
mov
int3
or
imul
dec
inc
adc
mov
jnp
add
decl
int3
mov
jno
dec
cltd
mov
loop
push
rcr
add
and
loope
xchg
mov
and
cmp
sar
jg
dec
ret
xchg
mov
xor
mov
daa
add
movl
inc
pusha
mov
daa
pop
pop
outsl
int3
je
loope
arpl
shlb
gs
enter
push
xor
push
scas
jge
sub
dec
and
xchg
test
mov
lock
out
into
xor
and
imul
sub
sahf
insb
mov
cmp
flds
lret
subb
fwait
sbb
add
add
dec
push
sub
mov
jecxz
adc
push
jnp
ret
les
inc
inc
sub
fiadds
lcall
sarb
and
std
mov
mov
mov
inc
stos
pop
pusha
mov
inc
test
test
ss
jmp
or
dec
mov
sbb
jns
xchg
add
sarl
xor
shrl
roll
sbb
out
xchg
xor
mov
in
enter
mov
sub
mov
neg
or
mov
test
sub
and
imul
loopne
adc
inc
sbb
add
rcrb
pushf
inc
fsub
sub
mov
sub
gs
sbb
aam
push
call
adc
insl
int
or
or
or
addr16
mov
cmpb
test
cli
push
icebp
dec
pop
xor
mov
fs
leave
push
lahf
dec
adc
pop
mov
xor
in
inc
sub
adc
in
dec
jp
outsb
iret
aam
sbb
lock
fwait
mov
or
aaa
in
cmp
fdivl
sbb
hlt
movl
dec
push
repz
adc
sub
push
cld
lds
xor
sbb
lret
xchg
lock
les
xorb
fcompl
inc
push
test
orl
cmpb
pop
mov
push
pop
daa
mov
xor
or
add
inc
aas
aaa
mov
call
cltd
push
cwtl
aam
sub
push
sbb
xorl
sub
aaa
shrl
pop
pushf
mov
sub
jge
sti
mov
pop
add
outsb
xor
fildl
imul
jge
rcr
pop
ja
or
test
xor
addr16
dec
cmp
fsubrs
inc
sub
div
pop
imulb
lea
or
or
popa
jb
xlat
dec
mov
adc
sbb
cmc
loopne
out
mov
cmovo
mov
pushf
xchg
mov
and
rcrb
adc
icebp
jmp
in
icebp
add
clc
mov
test
inc
out
push
loopne
pop
arpl
subb
sarb
cmp
jns
cltd
jmp
dec
mov
dec
in
cmp
call
add
dec
out
divl
inc
popa
jae
pop
mov
mov
xchg
out
movsb
add
enter
mov
pop
cmp
shl
clc
cmp
add
scas
jmp
in
test
insl
mov
inc
mov
imul
in
push
xor
push
sub
sub
sbb
aad
test
or
test
mov
shlb
add
push
lea
enter
fbstp
lock
xchg
inc
lret
fsubl
adc
mov
outsb
lds
arpl
sbb
cld
dec
mov
mov
movhps
rorl
loope
push
cmp
inc
mov
out
test
jp
insb
inc
imul
pop
add
inc
mov
sub
subb
pop
and
xchg
jmp
or
and
ja
mov
fwait
rcrb
mov
jg
lret
enter
aas
mov
fldenv
out
push
cmp
popf
mov
pusha
icebp
sub
out
sub
shrb
sbb
mov
jp
enter
mov
sub
lea
or
loopne
jbe
std
or
das
int3
lret
insb
xchg
daa
sub
lahf
clc
xchg
xor
add
das
cmp
test
clc
mov
aam
push
pop
gs
das
push
jae
mov
pop
adc
cmp
lds
xchg
dec
or
or
or
and
inc
mov
test
int3
inc
fcomp
frstor
mov
stc
sub
fnstenv
sub
aam
or
xchg
js
dec
jns
loop
es
je
leave
out
adc
scas
push
mov
iret
scas
addr16
leave
push
cmc
mov
aam
xchg
lods
pop
cmp
popf
pop
aad
pop
add
out
push
inc
into
sub
inc
dec
cli
loop
popf
test
fisttpl
sub
loope
mov
lahf
jae
outsb
cld
sub
mov
and
adc
in
movsb
sti
aas
dec
loopne
xlat
pushf
xchg
xchg
jb
arpl
loop
mov
pop
jne
ds
fbld
ds
mov
roll
cmpsb
fldt
leave
push
in
orb
cli
aam
mov
fstpt
loop
iret
mov
mov
mov
outsb
push
inc
mov
int3
pop
sub
jae
mov
inc
pushf
out
ljmp
adc
int
sti
sbb
inc
cmp
jmp
sub
sub
jp
and
push
not
jecxz
xor
fidivrl
or
mov
pop
push
sarb
lock
adc
xchg
and
cmpsb
sahf
push
test
or
filds
scas
xchg
and
sbb
pusha
push
lcall
mov
cwtl
call
rol
in
push
push
lcall
lcall
jb
mov
popa
sti
sbbl
repz
xchg
ret
pop
inc
xor
dec
loope
fidivs
mov
imul
cli
mov
gs
pop
push
cmpsl
cmp
adc
lods
daa
pop
dec
subl
mov
mov
rcr
inc
sbb
js
insb
adc
push
test
popf
mov
ffree
dec
mov
mov
lret
dec
mov
je
inc
dec
notb
push
sub
pop
lods
ja
xor
ss
shl
das
or
pop
sti
jne
jmp
mov
inc
xchg
cmp
push
popa
jl
push
fisubrl
lahf
and
std
jae
dec
cltd
sub
scas
ljmp
insl
dec
mov
inc
add
jns
xlat
jmp
movsb
movsl
clc
xchg
stos
lock
xchg
mov
scas
sbb
pop
sub
in
insl
mov
and
mov
pop
lret
daa
dec
push
adc
or
xor
xchg
or
dec
out
mov
outsb
mov
mov
jns
paddw
xlat
jns
or
sbb
rol
lds
fimull
repz
popa
incb
adcb
add
cli
iret
nop
sbb
aam
adcb
arpl
inc
aam
and
ja
rcll
mov
mov
aas
out
cmpsl
pop
test
or
jecxz
notl
xchg
cmp
push
std
cwtl
sbb
addr16
out
cmc
out
adc
inc
jno
fnstenv
lahf
outsl
imul
enter
dec
xchg
xchg
mov
scas
call
adc
pushf
test
sub
call
aaa
xchg
adc
or
sub
lods
sbb
add
inc
scas
or
mov
int
jbe
ret
faddl
xchg
aas
xchg
inc
lret
mov
mov
lock
clc
adc
inc
sub
fistpll
mov
loope
push
xchg
dec
xor
lcall
shrl
dec
mov
in
scas
clc
test
pop
pushf
push
jecxz
outsl
push
push
inc
xor
aas
jb
rol
cmp
into
dec
ret
mov
dec
test
pop
loopne
mov
push
aad
movsb
mov
shlb
mov
popaw
sahf
and
scas
lods
mov
sbb
pusha
out
mov
movsb
icebp
cwtl
xchg
mov
push
xchg
jl
and
or
popa
sbb
and
call
add
sbb
out
xchg
andb
aad
push
mov
add
fwait
popa
sbb
lahf
push
dec
shl
and
pop
pop
les
ds
mov
dec
daa
push
adc
pop
shlb
adc
push
mov
cli
xor
mov
add
ds
adc
fsubl
stc
call
mov
icebp
or
scas
in
cli
ss
lret
in
pop
push
adc
dec
int
std
scas
mov
stos
xchg
loope
lock
push
cwtl
sbb
and
pushf
mov
xchg
aam
jno
addl
sbb
iret
std
jg
pop
mov
push
push
lret
jp
cmp
mov
pop
stos
mov
in
mov
sbb
test
in
jo
push
orl
imul
mov
fwait
and
xchg
cmpsb
inc
notl
stc
sbbb
xchg
test
rol
push
sbb
jecxz
mov
sbb
fistpl
int3
subb
aam
sbb
shlb
int3
fwait
sub
mul
cmp
cmp
jno
out
adc
call
sti
scas
repnz
dec
ja
bound
push
mov
or
lea
sub
fisubrl
int
pop
jns
daa
mov
push
sbb
push
dec
mov
imulb
test
push
aad
out
push
pop
in
mov
mov
icebp
les
insl
pop
push
repz
jne
out
or
push
jl
ljmp
sbb
sbb
pop
out
xchg
dec
cmpsl
dec
stos
rcl
adc
imul
lahf
daa
mov
mov
mov
cmp
push
fisubrs
push
jg
mov
push
and
sarl
and
pop
pop
lock
in
mov
lcall
enter
push
push
insl
inc
and
pop
fisttpl
out
push
and
mov
les
dec
sbb
in
popa
xor
jl
mov
shll
fsubr
add
dec
test
int
rcrl
xchg
into
xchg
sbb
inc
lret
sahf
imul
fadd
jl
pop
xor
inc
lcall
ja
loop
dec
xor
mov
jnp
std
push
fwait
mov
aad
aaa
lahf
sbbb
mov
icebp
mov
cmp
movsb
shrb
cmp
data16
mov
xchg
mov
test
jecxz
jns
pop
imul
mov
scas
lock
mov
sbb
or
lock
outsl
roll
cmovge
or
cmpl
mov
xchg
sbb
fimull
inc
sbb
push
sahf
lea
push
stos
or
xchg
push
sbb
sbb
sub
mov
push
dec
mov
cmp
xor
jge
sbb
pushl
mov
bndldx
scas
dec
arpl
jnp
lcall
sbb
pop
mov
loop
adc
inc
nop
icebp
pop
add
mov
sbb
adc
pop
scas
and
pop
mov
add
pusha
jno
push
push
mov
pop
mov
loopne
and
xor
in
shll
add
into
pop
dec
jbe
mov
shll
sti
fbstp
fstpl
adc
insl
scas
adc
sub
adc
push
mov
push
inc
fwait
and
xor
add
pop
jns
xor
inc
aad
fistpl
mov
int
jae
ficoms
push
sbb
or
addr16
cmp
sub
std
push
into
shrb
add
sar
jmp
push
loop
in
jnp
inc
fidivrs
bound
jmp
push
add
lahf
out
loop
imul
cltd
mov
aas
push
cmp
push
lds
or
or
pop
xchg
cmp
or
and
ss
adc
imul
inc
enter
mov
pop
aaa
inc
aam
test
mov
mov
ljmp
out
cmp
subl
in
xor
fld
add
ficoms
ds
jns
fs
dec
mov
or
jbe
xchg
cmp
shld
add
into
movsb
dec
addl
xchg
jns
movsl
push
and
xchg
mov
out
cmp
mov
lock
aad
test
mov
pusha
jo
mov
cmp
repz
xor
aam
rorl
aas
adc
cmp
lea
hlt
cmpsb
pop
mov
xchg
sub
outsw
pop
jae
outsl
jle
ficoms
adcb
dec
sub
fwait
add
push
aam
repz
push
pop
in
fwait
fwait
iret
jbe
xor
xchg
pop
icebp
std
push
iret
jae
and
rep
imul
push
push
data16
and
shrl
jle
call
pop
or
rorb
lret
popa
iret
pop
pop
xchg
xor
dec
mulb
mov
dec
into
loop
pop
xchg
pop
rorl
rcll
shrb
insb
scas
jne
mov
pop
out
rcr
sbb
xorb
pop
iret
xor
int
mov
mov
addr16
cwtl
dec
cmp
push
dec
sbb
dec
push
lcall
test
pop
inc
bound
mov
cmp
cmp
xchg
adc
jae
mov
call
jo
adc
je
adc
xor
jecxz
ja
mov
sub
jg
mov
inc
dec
mov
push
stos
test
fisttpl
test
or
in
inc
mov
mov
jb
mov
fistps
notl
mov
test
test
add
cmp
test
mov
xchg
popf
stc
push
lock
pushf
insl
out
lahf
repnz
aam
add
fildl
inc
push
cmp
int
imull
lds
mov
xlat
dec
in
push
pop
jl
cltd
fwait
imul
lret
pop
gs
fincstp
int
aas
js
xor
in
aam
int3
mov
sti
scas
mov
es
dec
int
cmp
loope
xor
clc
in
fwait
gs
pop
imul
inc
xor
aad
fdivrs
test
aam
arpl
cmpsb
xchg
xchg
sub
dec
xlat
in
loopne
cmpsl
cs
pop
mov
jno
push
jg,pn
and
jle
daa
cmc
sti
iret
sbb
xchg
adc
lcall
or
pop
lcall
push
fisubrl
jmp
shlb
push
hlt
pop
jns
divl
mov
outsl
or
xchg
in
loop
mov
jae
je
xor
or
pop
inc
std
mov
mov
int3
jo
ficoms
sti
cmp
data16
sbb
loope
or
xchg
sbb
movsl
mov
xor
mov
outsl
cmc
mov
jnp
decl
psadbw
mov
inc
inc
ret
jecxz
enter
xor
sbb
xchg
lcall
out
and
sub
cltd
xor
lret
xchg
dec
or
jecxz
adc
lea
rcll
mov
jne
lfs
cmp
mov
mov
add
test
mov
pop
pop
sub
mov
xor
je
adc
adc
pop
mov
inc
fxch
jns
outsb
pop
ljmp
or
shl
mov
xor
push
lret
shll
std
int
pop
dec
xlat
scas
mov
jge
out
xor
in
cmp
je
mov
ret
cmp
pop
lds
outsl
mov
dec
icebp
inc
jmp
mov
leave
rcl
and
add
add
fistpll
jge
inc
sub
loopne
enter
leave
aad
dec
push
sbb
mov
roll
push
ficomps
ss
mov
cltd
dec
lods
xchg
rcrb
mov
pop
inc
and
scas
dec
daa
jp
mov
fisubl
orb
mov
lret
mov
fisttpl
imul
in
adc
loopne
jg
fsubr
xchg
insb
adc
fs
or
sbb
cmp
rorl
dec
inc
sbb
mov
mov
ds
xor
scas
jmp
mov
test
or
lods
sub
cmp
mov
leave
add
xchg
mull
mov
and
js
addr16
or
cwtl
sbb
adc
adc
push
rcrl
jne
mov
adc
or
das
lret
loop
sahf
repnz
push
in
aad
das
aas
sarl
cmp
dec
and
scas
fsubr
xlat
mov
inc
jge
dec
addb
repnz
stos
mov
add
cmc
and
jl
mov
cmpl
aas
adc
lret
or
sar
mov
add
outsl
inc
scas
push
cmp
dec
out
mov
clts
test
adc
pusha
adc
jl
sbb
lods
test
add
adc
sub
pushf
pop
arpl
jl
mov
jl
dec
and
cmc
adc
fdiv
jo
mov
jbe
les
push
sar
xor
stc
aaa
mov
adc
sbb
add
jae
mov
andl
das
or
int3
out
cmpsb
xchg
add
pop
stos
roll
sbb
rcr
jns
cmpsl
mov
and
xor
add
pop
aaa
mov
adc
xchg
inc
ss
push
jbe
jb
sbb
fs
inc
mov
dec
xchg
push
in
xor
mov
aaa
cmp
adc
fnstcw
or
cmp
pop
or
mov
lret
cmp
push
std
xchg
les
or
mov
adc
fldcw
mov
and
inc
test
clc
imul
ret
xlat
lret
lods
outsb
jmp
inc
mov
add
cs
into
add
push
xor
dec
decl
aas
ud0
jle
jge
cmp
xchg
pushf
inc
xchg
test
ds
movhps
inc
cld
ja
movsl
stc
push
lahf
jle
push
test
out
mov
jae
enter
pop
in
aaa
fnsave
fs
push
push
add
xorps
mov
mov
mov
sub
jnp
mov
mov
inc
shrb
dec
pusha
repnz
orb
ret
lcall
movsl
sub
aaa
mov
sub
lods
loope
mov
add
in
ss
cmp
add
repz
mov
xchg
xchg
mov
push
aaa
pushf
xchg
fstl
movsl
dec
push
or
or
insl
cmpsl
pop
pop
loop
sbb
or
add
push
and
les
into
sahf
popf
out
test
fidivrl
icebp
add
arpl
movsb
fbld
add
cli
jecxz
adc
aam
sti
fiaddl
ss
imul
jne
push
cli
push
shlb
push
mov
ficoms
mov
inc
xor
idivl
rcrl
pushf
jb
mov
dec
or
subl
or
shl
xchg
jno
pusha
in
pop
jge
jecxz
test
and
mov
xchg
cmpb
lret
call
jno
movsb
cmpsb
scas
mov
or
outsl
dec
push
out
dec
imul
addr16
les
call
sbb
mov
or
xorl
out
pop
dec
add
scas
cld
mov
pop
aam
and
ret
sbb
std
sub
out
out
push
fdivp
cmp
aaa
pop
gs
push
adc
sub
es
jecxz
faddl
out
aaa
cmpsb
movsb
lret
jp
repnz
stos
xchg
jnp
popa
jge
dec
cld
ret
inc
push
cmpsl
cld
dec
out
sarl
aas
pop
pop
sbb
jb
ds
lods
mov
push
push
imul
lret
jg
add
push
icebp
lods
pop
sbb
in
jle
mov
jns
repnz
or
lret
cmp
sub
dec
dec
add
xor
mov
mov
adc
jg
repnz
dec
test
dec
adc
sbb
aaa
inc
enter
add
sarb
es
push
add
ror
cmp
mov
cmpsl
sbbb
adc
sbb
or
rcr
adc
test
rorl
dec
push
ja
jmp
push
loop
dec
test
outsb
int3
mov
pop
daa
xchg
mov
notl
in
dec
ror
jae
mov
pop
dec
insb
outsb
sbb
hlt
jge
xor
outsl
xorl
and
aaa
cmp
inc
outsl
jle
sbb
mov
pop
insb
sti
cmpsb
loope
cmpb
add
fadds
ja
es
mov
push
cmp
pop
xorb
sub
adc
adc
mov
push
sbb
in
pop
and
hlt
mov
ljmp
stos
jmp
xorb
gs
mov
jg
stos
iret
xor
rclb
sbb
xor
popf
jb
mov
insb
sub
movsl
mov
lds
loopne
push
dec
push
shl
les
cmp
mov
mov
xchg
fistpll
jle
imul
jp
shll
dec
lods
mov
mov
repz
xchg
lds
push
imul
cmp
leave
into
fwait
jmp
xchg
not
mov
pop
hlt
xchg
lret
in
lds
adc
cmp
inc
movl
ss
daa
subb
rorb
adc
movsl
sbb
mov
lea
stc
cmpsl
and
mov
cmpsb
das
data16
fmuls
cmp
push
sub
movsb
push
pop
add
les
rcl
popl
adc
sbb
inc
jbe
cmp
pop
clc
xor
test
push
xchg
insl
ljmp
jmp
loopne
add
inc
mov
xorl
mov
sbb
push
add
add
mov
adc
pusha
stc
ret
int3
insb
xorl
loopne
fstps
dec
sub
lods
in
les
mov
shrb
orb
clc
pop
cmp
and
push
add
jb
outsl
sbb
push
arpl
stos
mov
mov
outsb
xchg
add
repz
stos
inc
loope
shlb
sbb
mov
sub
leave
mov
inc
in
jmp
sbb
addw
or
or
dec
in
mov
jg
or
in
push
rolb
and
in
sub
lret
fmul
add
leave
movsb
pop
and
mov
dec
push
mov
or
push
and
and
popa
shl
scas
or
imul
dec
xlat
pop
inc
inc
scas
std
cmp
mov
add
add
dec
cli
mull
fwait
sub
cmp
sbb
pmaxsw
js
test
imul
stos
cmp
dec
pop
das
cld
cmp
mov
nop
ret
mov
loopne
sbb
rclb
sbb
pop
js
outsl
ljmp
mov
call
sub
arpl
arpl
cmp
mov
push
sbb
push
mov
jmp
xchg
add
dec
cwtl
jne
jge
pop
mov
cmc
mov
pop
pop
dec
mov
in
leave
mov
cld
popf
mov
into
mov
jno
pop
sub
dec
sub
lret
insb
mov
xor
sahf
inc
loop
stc
in
sbb
mov
pop
test
ljmp
jp
and
movsb
xchg
cs
and
fmulp
cmp
lods
push
stos
xchg
popf
cmp
pop
pmulhw
adc
jae
or
cmp
dec
ja
cld
push
inc
int3
andb
into
adc
inc
xchg
adc
je
mov
push
mov
lock
cmpsb
enter
pop
aas
xchg
fsubrs
scas
ja
out
mov
nop
dec
or
stos
int3
xor
daa
in
test
fs
and
cmp
xor
inc
test
repnz
cmp
ss
fstpl
popa
fiaddl
add
stc
imul
mov
jo
out
pop
shlb
mov
push
mov
cmpl
pushl
or
jmp
add
add
xchg
xlat
and
mov
jbe
mov
push
jae
and
lods
in
ljmp
xor
imul
mov
sub
rcrb
inc
movsb
adc
out
iret
lds
sbb
inc
imul
push
xor
lods
xchg
pop
cmpsl
inc
std
lret
inc
test
push
jmp
fists
sbb
push
stos
cmp
and
xlat
mov
loop
inc
in
das
pusha
jae
or
rol
cmp
jge
mov
nop
shll
and
cmpsb
insl
adc
dec
sub
push
fwait
mov
push
sub
sbb
adc
addr16
fnstsw
jne
movsb
pop
out
mov
push
push
jne
jl
and
filds
mov
loopne
loopne
scas
in
push
in
pop
xchg
ss
inc
jno
outsb
fisubs
push
sahf
xchg
out
dec
jns
ljmp
outsb
xchg
add
xchg
ret
jo
dec
sub
mov
loope
addl
test
cmp
repz
xor
dec
sbb
cmp
dec
cmp
aam
shlb
and
divb
rolb
sar
fldt
adc
sbb
popf
mov
sub
jbe
mov
inc
in
pop
xorl
push
dec
mov
mov
lods
std
test
test
movsb
pop
xor
decb
jecxz
ds
ljmp
xchg
rcrb
mov
outsl
mov
inc
inc
pusha
mov
js
ja,pt
jae
pop
xor
and
in
push
jl
sub
push
dec
cmc
rorl
shll
shrl
insl
xchg
sbb
repnz
xor
mov
sbb
xor
xchg
and
jle
pop
hlt
cmp
xor
sub
roll
inc
in
add
push
aad
rorb
or
mov
shlb
leave
push
jp
add
hlt
outsb
daa
lds
adc
jno
inc
xor
test
push
rclb
pop
pop
xor
loop
cmp
in
movsl
pop
clc
not
movsb
pop
cltd
lods
rcrl
xchg
mov
jmp
mov
xchg
xchg
xchg
jns
ret
xchg
xchg
push
scas
xchg
xchg
jge
mov
or
jecxz
mov
fidivrl
xchg
xchg
mov
inc
leave
rcrb
jmp
push
insl
fwait
push
xchg
in
mov
mov
jecxz
clc
cmp
ret
cmp
xlat
pop
or
mov
pop
mov
dec
or
mov
iret
xchg
and
sub
popf
mov
movsl
push
ss
in
xlat
ljmp
icebp
inc
add
push
imul
in
inc
incl
sbbl
dec
jb
jp
xlat
dec
in
mov
lock
xchg
scas
pusha
mov
cmp
mov
test
xchg
test
sbb
das
popa
push
xchg
mov
push
cmp
jns
dec
mov
jl
xchg
roll
out
in
shrb
cmp
and
sbb
lods
sbb
jnp
pop
addl
mov
outsl
mov
int
test
add
adc
and
ja
std
mov
adc
and
inc
iret
shrb
pop
insb
push
sub
cmp
sub
std
lock
mov
adc
mov
lods
js
and
jne
mov
imul
or
loope
pop
adc
mov
push
cmp
fcmovbe
shll
rclb
mov
sbb
pop
rcll
cmp
lahf
test
adc
movsl
lret
add
and
mov
or
add
inc
and
adc
ljmp
out
scas
es
cmp
shlb
cmp
pop
add
dec
inc
negl
mov
cmc
mov
insl
out
dec
mov
int3
inc
jnp
stc
rolb
sarl
push
jns
pop
push
mov
xchg
push
pop
add
xor
sub
and
leave
outsb
pop
dec
jns
sub
pop
dec
push
push
mov
add
fs
push
sub
lea
into
xor
mov
xchg
clc
xor
xor
imul
repnz
mov
enter
xor
enter
jo
hlt
stc
cwtl
sub
inc
mov
push
negl
and
fldz
iret
xchg
mov
pop
push
dec
sarb
cld
mov
je
mov
cli
ds
xchg
inc
loopne
mov
xor
add
int3
mov
cli
and
jb
out
jbe
xchg
cmpsb
add
push
dec
adc
push
pop
in
sbb
das
sub
stc
cmpl
lds
add
lret
sub
ljmp
in
jmp
or
pop
xchg
add
mov
fdivrs
cmc
jbe
fidivrs
test
xor
cmc
cli
cmpb
cmp
mov
loope
add
xor
mov
pop
sahf
cmp
inc
in
and
lcall
out
mov
push
int
fs
faddl
ret
mov
pusha
push
mov
sbb
push
push
pop
sahf
cltd
xchg
add
sbb
ret
xchg
roll
std
add
xchg
aaa
icebp
repnz
dec
jo
cwtl
int
dec
in
pusha
dec
subb
pop
xchg
movswl
cmpsl
adc
mov
jecxz
outsb
pop
add
push
adc
mov
dec
jb
aas
push
inc
dec
in
xchg
mov
mov
xor
pop
repnz
into
lods
lret
jno
xor
fstps
mov
push
lret
add
popa
imul
pop
pusha
inc
and
xor
jnp
and
add
and
inc
aas
add
jbe
fwait
cmp
adc
jmp
add
adc
pop
mov
lret
pop
push
mov
jecxz
and
fs
leave
mov
adc
lret
and
or
pop
inc
pop
jo
xchg
aam
loope
xorl
leave
jb,pt
pmullw
xchg
mov
mov
adc
int3
mov
fisubrl
cld
int
jns
xchg
pop
inc
imul
mov
lock
fidivrl
lods
dec
imulb
xor
and
je
dec
jbe
sub
add
imul
in
into
insb
popa
imul
fisubrs
sti
lar
dec
lods
xchg
je
sbb
push
inc
sbb
fistl
push
ds
shl
jg
sub
pop
aad
ljmp
and
jge
out
incl
xchg
mov
lods
cmc
inc
pop
pop
data16
in
jle
test
cltd
test
or
mov
push
jne
push
out
cmp
adcb
mov
insl
js
es
mov
sbb
insl
cmpb
pusha
mov
pop
pop
xor
push
daa
lock
gs
or
mov
test
call
pop
add
sub
mov
rolb
sbb
in
arpl
adcb
add
adcl
ds
cli
inc
insl
jecxz
mov
adc
scas
out
cmpsl
adc
out
xchg
rcrb
in
adc
movsb
push
sub
xchg
iret
popa
ja
inc
mov
jb
ss
outsl
stos
in
loop
pop
cmp
or
idivb
push
sub
mov
pop
pop
test
arpl
push
out
test
jb
out
cmc
or
push
repz
cmp
xor
dec
clc
mov
mov
add
cmp
test
and
loopne
icebp
daa
inc
jl
les
or
daa
stc
jnp
xorl
ret
sar
sbb
insl
in
gs
jae
jb
pop
sub
repz
data16
jnp
dec
and
fwait
aad
mov
pop
push
lods
xor
cltd
inc
iret
lods
lods
cli
lahf
mov
jmp
cld
imul
pusha
outsl
out
push
std
clc
stos
mov
jb
adc
xchg
inc
xor
cwtl
or
adc
xorl
jnp
aad
cmpsl
int
pop
xchg
inc
mov
sti
mov
or
hlt
adc
adc
mov
jge
jns
adc
xchg
mov
pop
push
push
adc
ret
adc
gs
pop
mov
popf
ss
js
mov
lds
fwait
adc
push
fiaddl
cmp
mov
mov
rcll
ds
fxch
cmp
cmpsb
loop
jle
fnstenv
orb
inc
dec
cltd
gs
mov
dec
adc
pop
cli
push
outsl
dec
jecxz
js
add
cmp
pop
xrelease
dec
addr16
movsl
add
push
sub
xchg
pop
ja
adc
roll
mov
shl
cmp
xor
jp
lcall
mov
dec
cmpsb
xor
jge
adc
push
sbb
pop
adc
in
or
or
lahf
push
fdivrp
mov
mov
jp
push
mov
jle
cmp
mov
xchg
mov
shrl
cmpsl
out
cmp
out
mov
test
mov
adc
push
int
or
dec
sub
je
mov
push
pusha
or
outsl
and
push
sti
sub
pop
xchg
cmpsl
out
sub
push
out
pop
dec
les
push
aad
adc
xor
pop
ljmp
test
mov
ja
or
and
jg
inc
movsb
and
fsub
mov
sbb
repz
roll
push
les
mov
mov
sahf
mov
mov
mov
testb
int3
inc
mov
scas
repnz
push
or
xchg
jno
inc
dec
cmp
outsl
fisubs
sub
mov
aad
push
xor
inc
and
sbb
in
pop
adc
xor
pop
push
loopne
xlat
mov
xlat
push
shlb
mov
jmp
int
push
cmp
jne
pop
xor
and
into
jg
xchg
test
sub
push
in
xor
sub
cmp
rolb
sbb
cmp
or
xor
pop
add
dec
or
dec
mov
mov
jle
and
lret
je
and
xchg
mov
xchg
testl
adc
div
jmp
push
xor
xor
andb
jo
dec
in
andl
jnp
imul
dec
cs
pushf
lret
lret
movl
xchg
in
jbe
lock
divl
pop
jnp
into
cli
xchg
arpl
jnp
xchg
push
mov
mov
mov
test
inc
jg
xor
cmc
adc
daa
call
test
movsb
loop
mov
mov
sub
jmp
les
xlat
enter
add
mov
mov
mov
fldenv
push
xlat
outsb
add
pop
sahf
mov
cwtl
push
aaa
mov
pop
test
mov
lea
jnp
jmp
clc
jno
sti
les
insl
out
idiv
orl
mov
lock
inc
adc
or
mov
mov
test
adc
cwtl
loopne
mov
shld
inc
movsb
inc
js
mov
fidivs
cli
jge
les
and
push
scas
int
hlt
adc
lcall
inc
loopne
repnz
xor
mov
fs
mov
test
or
std
and
jno
mov
lock
popf
negb
je
adc
cmp
push
dec
test
cmp
mov
jmp
jg
mov
aas
mov
mov
outsl
jmp
je
sub
dec
add
or
cmp
jae
push
pusha
pop
sbb
aaa
lahf
incb
adc
pop
jbe
mov
sahf
push
or
jns
inc
divl
sbb
pop
pop
mov
add
jp
sub
decl
dec
orb
mov
in
or
sbb
inc
mov
sub
xor
jae
clc
inc
add
cltd
lds
loop
out
test
add
call
jne
xchg
sbb
or
or
rcll
fistpl
stc
mov
xchg
mov
mov
fxam
sbb
or
inc
adc
and
sub
mov
test
jmp
xchg
sti
pop
xor
arpl
dec
or
mov
imul
rcll
pusha
or
lods
dec
scas
pushf
gs
lret
sub
ret
cmp
xor
js
jmp
lods
movsl
loop
sahf
jmp
hlt
mov
subl
lret
push
mov
jbe
fcomip
imul
pmullw
xor
dec
mov
je
mov
test
int3
jle
push
fs
out
insb
xchg
bnd
dec
cmpsb
outsl
sbb
shr
lods
pop
cmp
push
jmp
fcoml
xchg
adcb
and
add
pop
and
sub
fwait
gs
scas
cmc
push
jg
and
out
int3
jns
sub
and
aad
xchg
addr16
testl
push
lret
jp
loope
mov
leave
dec
adc
insb
testb
popf
xor
aam
cmp
xlat
shll
cmp
adc
xchg
jge
pop
call
fisttps
and
rclb
nop
pushf
xor
mov
das
insb
xlat
jl
int3
xor
mov
jge
cmp
cmp
cs
outsb
lea
inc
jbe
lods
pop
pop
mov
sbb
adc
xor
mov
inc
stos
xchg
jmp
arpl
lret
outsb
or
bound
sbb
mov
sbb
xchg
addr16
xchg
cmp
xchg
rolb
shr
test
mov
in
or
xchg
fisubrs
push
fwait
lds
pop
mov
stos
push
jl
rcr
cmp
fcoml
ja
dec
fcompl
sahf
rolb
js
mov
aas
mov
hlt
in
mov
pop
sub
and
and
xor
inc
xchg
movsb
push
dec
mov
and
lret
sbb
xor
jle
mov
and
xchg
cmpxchg
mov
clc
fnstcw
orb
fcompl
enter
dec
fbstp
pusha
stc
pushw
or
mov
imul
cmp
subl
test
mov
cmp
push
jecxz
sbb
dec
in
and
mov
dec
dec
xor
xchg
lds
shl
dec
inc
cmp
outsb
in
inc
xor
mov
pop
xchg
ljmp
dec
imul
dec
pusha
inc
stos
sti
mov
or
pop
adc
pop
rorl
imul
fbld
and
mov
dec
pop
notl
daa
fsubrl
mov
fstl
cli
add
aas
and
push
and
sub
pop
ss
cltd
mov
mov
push
mov
push
jae
push
sbb
mov
jns
ret
adc
pushf
cmpsl
push
mov
pop
adc
xor
insl
push
mov
fidivl
adcb
insb
pop
and
cmp
push
jo
popl
jbe
sub
inc
xor
aam
sbb
jmp
mov
sub
cmpsb
sub
lcall
jno
pop
mov
in
sub
mov
add
shl
loop
jecxz
outsl
cmp
test
dec
lds
push
dec
cmp
sbb
lcall
cmp
movsb
outsb
daa
fsubrp
gs
inc
mov
mov
inc
mov
cmpsl
adc
repz
aas
mov
in
sbb
adc
int
shl
mov
out
inc
cmp
int3
int
mov
in
outsl
push
sahf
divb
aad
pop
mov
and
daa
sub
or
test
cmpsl
cmp
inc
push
int3
jnp
sub
dec
mull
mov
sbb
test
xchg
sub
pop
aas
mov
jge
mov
cld
adc
adc
aad
add
mov
jne
jecxz
push
outsb
jns
xchg
movsl
add
testb
lahf
cmp
inc
sub
cmpsl
enter
repz
push
add
out
add
scas
pushf
jnp
pop
mov
cwtl
scas
test
lods
mov
sbb
xor
sbb
lods
inc
and
loopne
add
imul
add
fiaddl
and
push
in
pop
fisubrl
mov
iret
movsl
jne
push
or
mov
mov
in
hlt
out
pop
inc
mov
sub
mov
cmp
fldenv
icebp
adc
scas
push
mov
cmp
ljmp
out
aam
pop
mov
in
mov
out
dec
sub
jne
xchg
lcall
xor
fs
dec
fidivrl
inc
cld
cld
sbb
pop
enter
add
sti
push
out
mov
call
cltd
add
vprotb
idivb
sbbb
adc
stos
popa
jg
cmc
or
cmp
fsubs
sbb
xchg
stos
sbbb
jg
faddl
xor
test
mov
mov
inc
lds
pop
or
cmpsb
outsl
outsl
out
jo
mov
xchg
or
adc
mov
ss
dec
push
mov
fisttps
mov
loopne
sti
mov
jae
fidivs
cmpsl
xchg
les
icebp
in
out
test
dec
mov
js
in
mov
in
pop
ljmp
loop
adc
std
fldl
test
ficoms
pop
jnp
mov
or
inc
or
push
pop
out
hlt
pop
sbb
jp
outsb
fdivs
xchg
scas
rolb
mov
cmp
out
fcom
rcrl
jle
mov
scas
jl
das
out
jno
sbb
mov
or
push
jbe
jecxz
sbb
xchg
mov
add
xor
jo
mov
lahf
xor
add
inc
cmp
adc
mov
jns
cmp
dec
xchg
adc
scas
insb
xor
mov
add
cmc
arpl
mov
mov
inc
outsb
xor
push
jne
xchg
pop
testb
and
lods
imul
jnp
adc
mov
fcomps
icebp
loope
sub
mov
nop
jbe
fucom
adc
or
divb
pop
pop
daa
test
jp
scas
clc
sub
lods
xchg
jecxz
mov
xchg
xor
mov
add
xor
das
xchg
bndldx
jge
fsts
ljmp
jl
nop
push
imulb
cmp
insl
loope
int
jg
loop
mov
add
ret
xor
pop
adc
cwtl
clc
mov
dec
popa
and
movsl
cmpsb
lods
pminub
mov
or
mov
jecxz
out
es
jp
sub
adc
push
daa
jo
mov
test
ret
pop
lods
mov
aam
arpl
rcl
push
gs
pop
sahf
in
sbbl
ficoml
ss
mov
xor
gs
lret
insb
pop
mov
scas
lock
ret
inc
popa
addr16
fs
rcl
or
sahf
push
mov
sub
loopne
fcoms
inc
push
and
fwait
push
inc
dec
dec
ja
jg
push
inc
jge
xor
ja
dec
mov
mov
pop
cmp
popf
pusha
es
xchg
mov
das
mov
inc
stos
xchg
sbb
sbb
std
push
push
fnsave
mov
pop
je
aas
add
ss
movsb
cmp
or
cmpsb
add
jae
push
mov
ret
ret
fsubrl
ret
mov
test
dec
jo
or
aad
and
sti
insb
fs
mov
add
std
je
andl
xor
sub
xor
popa
or
adc
sub
lods
test
outsl
lods
adc
push
inc
hlt
jmp
test
frstor
push
or
and
sahf
scas
fwait
xor
ss
imul
rorl
sar
xchg
les
mov
jg
push
jo
dec
shrb
icebp
xor
pushl
adc
and
jp
cwtl
in
addr16
fistpl
push
lret
jg
sub
adc
mov
test
lret
test
push
aad
adc
lods
jmp
inc
xor
pusha
sub
jno
sub
aas
int
or
fwait
inc
inc
inc
rorl
dec
insb
sahf
dec
inc
cmc
jmp
and
xor
loop
fbstp
gs
in
xor
shrb
dec
jge
push
jbe
ljmp
loope
lea
loop
cmp
ficoms
jp
bswap
out
and
idiv
adc
pusha
mov
adc
imul
add
dec
call
and
call
jl
fsts
and
push
mov
add
push
add
sub
add
xchg
repnz
xor
add
adc
sub
and
mul
jg
out
mull
daa
jb
popf
je
xchg
and
xchg
rol
adc
in
sti
xchg
int3
jno
lds
adc
add
lods
dec
stos
outsb
mov
mov
jp
cmp
addl
xor
inc
push
in
add
stos
xor
add
adc
xor
cmpsl
mov
int
jp
jne
sbb
sub
loopne
jecxz
iret
lcall
fst
push
cmp
shl
ljmp
lcall
insb
in
push
mov
push
add
in
dec
inc
xchg
xchg
mov
mov
jge
icebp
pop
popa
mov
aaa
movsl
jae
add
jp
and
jg
lret
adc
jns
add
jg
fcompl
jp
xchg
cmp
jl
cld
lret
add
push
cmpsl
fsubrl
mov
dec
mov
movsl
sbb
stc
out
push
xchg
sarb
sub
cmp
js
inc
and
mov
mov
mov
push
push
xchg
stos
mov
scas
les
push
inc
or
fldl
and
mov
or
push
addr16
xor
push
js
jns
xor
pcmpgtb
sbb
aad
mov
fcoms
lret
pop
pushf
daa
stos
lods
mov
jmp
xchg
ret
mov
dec
out
dec
jle
push
adc
aas
jle
cmpsb
in
sub
mov
pop
mov
aam
and
add
lea
cld
dec
aad
xchg
sbb
xchg
xchg
dec
stos
and
and
inc
adc
je
std
inc
fs
lods
add
jg
cwtl
mov
arpl
shr
les
cmp
mov
adc
mov
xor
scas
les
mov
mov
outsb
and
push
mov
ja
outsl
pop
es
push
and
enter
movsb
stos
sbb
lds
sarb
cmp
pop
dec
js
ret
mov
int3
in
test
xchg
mov
scas
pop
xor
aaa
stos
xor
mov
popa
testl
dec
mov
insb
xor
divb
mov
insb
insb
mov
jl
lret
popa
pop
cltd
xchg
cld
stos
daa
mov
push
adcb
or
and
shrb
test
fidivrl
sub
add
inc
out
jmp
shlb
xlat
adc
mov
aam
sbb
pop
sti
in
repz
dec
inc
jecxz
pop
imul
jae
les
roll
cmp
daa
out
push
xor
jae
jno
test
xor
xchg
stc
leave
jge
movsl
sbbb
bound
in
mov
xchg
iret
mov
mov
dec
or
stos
imul
dec
xor
out
lea
xlat
fistpll
mov
rorl
mov
lock
gs
aam
and
test
dec
cmpsl
jmp
xor
fnstsw
aam
xchg
outsb
push
adc
xor
jp
fwait
inc
mov
sbb
pop
lock
icebp
xor
xchg
sahf
aam
adc
adc
mov
adc
mov
inc
mov
xchg
xchg
movsb
adc
dec
xchg
aam
pop
mov
in
in
push
lea
push
inc
mov
cmp
les
dec
jnp
push
stc
mov
in
xchg
jecxz
ret
shrb
pop
cmp
mov
sub
hlt
cmp
lods
inc
aam
scas
fcompl
inc
mov
add
cs
sahf
movsl
ficompl
andl
push
mov
mov
fcomps
pop
pop
shr
ss
fidivrl
cltd
dec
mov
jno,pt
or
jne
loopne
fstl
aad
pop
test
lahf
int3
mov
loop
pop
mov
pop
sbb
movsb
dec
lcall
jg
adc
jo
rorb
pop
in
xchg
push
jecxz
inc
leave
into
mov
shr
mull
int
cli
lds
aaa
add
cmpsb
jg
sub
aad
mov
dec
and
ss
mov
xchg
adc
pop
repz
mov
or
lock
jbe
inc
cmp
mov
mov
call
fdivrs
leave
mov
insl
loope
mov
rcr
sub
stos
xchg
cmc
testb
pusha
aaa
cltd
jg
ljmp
push
lock
push
xrelease
lods
nop
add
cmp
out
mov
sbb
in
mov
sahf
xor
dec
test
insl
push
out
sub
xchg
adc
mov
into
mov
inc
and
cmp
dec
dec
ljmp
fcmovbe
dec
jg
insb
lds
inc
adc
adc
jmp
xchg
jl
mov
sarl
dec
or
dec
cmp
mov
scas
adc
cmpsb
or
lahf
in
es
jo
adc
in
xchg
leave
jmp
dec
xchg
loopne
repz
cmp
les
mov
cltd
stc
popa
shlb
scas
xchg
mov
adc
mov
and
loope
inc
sbb
add
xor
sbb
imul
ss
lea
mov
mov
cwtl
pop
das
and
cmp
add
xor
fidivrl
lods
movsb
fdivrs
shll
push
idiv
sbb
add
lahf
lods
mov
in
adc
push
sahf
aas
das
jmp
insl
fstp
cmp
mov
lcall
and
lcall
cs
ljmp
jo
ljmp
mov
sub
mov
imull
cld
out
lcall
sbb
xchg
and
mov
or
or
out
jmp
dec
ds
stos
aam
sar
push
xchg
call
jmp
dec
and
pop
dec
gs
fidivrl
das
idiv
mov
cmp
in
lahf
iret
xchg
outsb
add
ja
aad
js
sbb
aas
call
cmp
jbe
loopne
mov
pushf
arpl
pushf
mov
shlb
fsubl
mov
testl
test
repz
pusha
jb
dec
shl
out
xchg
push
add
jno
inc
add
mov
vmread
jno
out
outsl
movsb
std
cmp
push
jo
movsl
in
loopne
or
add
jl
jns
fs
les
inc
movsl
div
fnsave
leave
pop
out
call
sub
xor
and
daa
popf
adc
lcall
adc
cld
mov
scas
mov
adc
shll
mov
cmpsb
sub
dec
int3
cmpsb
cmp
sbb
mov
jo
cmpsb
xchg
fs
inc
bound
shll
sub
pop
ljmp
test
pop
push
cmpsl
sub
sbb
loop
cmpsl
daa
xchg
outsb
add
or
sub
rcrl
sarl
jle
out
lret
jnp
into
aaa
loopne
xchg
xchg
in
in
test
pop
sahf
imul
adc
mov
jg
adc
shlb
lret
mov
bound
inc
push
mov
loopne
pop
push
les
push
jle
cmpsb
add
xor
lahf
xchg
xor
cli
lret
push
pop
jle
out
cmp
addr16
and
xor
andl
pop
addr16
mov
shll
dec
rorl
push
hlt
aad
xchg
out
cld
rorb
pop
or
iret
dec
add
push
cmp
sub
dec
aam
leave
pushf
lds
xchg
movsl
add
jns
imul
push
iret
clc
push
dec
mov
inc
repz
fwait
and
sti
sbb
cld
adc
jge
fsubrl
in
rolb
mov
call
pop
sti
add
jno
insb
push
push
or
cmpsl
push
test
lahf
enter
pusha
gs
adc
pushf
bound
dec
sub
push
sbb
add
sbb
js
aad
in
inc
inc
sbb
jo
into
inc
pusha
inc
mov
inc
shr
mov
test
popa
mov
rcrb
xchg
push
jge
adc
cmp
jge
aam
xor
dec
adc
push
lcall
dec
imull
or
popa
test
adc
jns
jmp
mov
jns
lret
push
ss
imul
lock
fwait
out
aam
pop
xorl
aad
out
fsubr
pop
jecxz
ret
cmp
shll
stos
xorb
xchg
jbe
mov
cmc
or
out
gs
nop
stos
mov
jb
lock
icebp
imul
add
pop
inc
stos
pop
mov
stos
fldenv
loope
lods
scas
adc
jnp
mov
jmp
fistps
repz
dec
mov
inc
test
inc
mov
jb
cmp
adcb
sub
ljmp
adc
pop
lret
movsb
scas
arpl
fxch
outsb
fs
dec
lret
mov
iret
imull
jbe
or
adc
inc
movl
push
cmpsl
inc
adcl
xor
out
aas
sub
jl
push
orl
ficoml
rcrl
jge
mov
xchg
jne
psubw
and
fcomps
push
jecxz
dec
xchg
enter
cmp
ljmp
mov
lcall
xor
ss
inc
mov
iret
sub
loope
mov
mov
sub
xchg
and
arpl
fstps
test
xchg
dec
lret
cmpsl
shrb
in
push
mov
insb
test
push
out
lock
cmp
or
mov
imul
sub
xchg
leave
mov
movsl
mov
bound
add
data16
xchg
adc
je
clc
adc
mov
mov
mov
sub
push
fadds
pop
push
or
out
call
lcall
mov
shlb
call
stc
mov
pop
xchg
xlat
push
fsubl
stos
insb
xchg
xchg
es
mov
dec
repnz
mov
mov
xlat
mov
mov
cmpsb
sub
ja
cmpl
xchg
dec
in
int
mov
gs
fcomip
jns
inc
scas
popf
in
sbb
sahf
shrb
lcall
out
icebp
adc
adc
xchg
mov
fnstcw
setle
push
mov
std
ja
adc
ss
sub
dec
add
push
adc
dec
fistl
mov
pushf
ret
mov
rorl
test
add
test
ss
faddp
insb
adc
and
xchg
push
int
xchg
mov
add
cmp
rcll
movsb
leave
lahf
scas
rorb
outsl
sub
dec
shufps
inc
or
mov
add
sbb
addr16
movnti
xchg
jbe
aas
imul
repz
fisubs
daa
sbb
dec
sbb
sub
cmpsb
sub
xchg
sub
arpl
or
and
fwait
mov
pop
pop
push
out
movsb
push
stc
sub
and
push
and
and
loop
inc
mov
or
inc
cmp
jne
ret
repnz
pop
mov
inc
pop
in
mov
fimuls
insb
lret
ret
subb
jge
jne,pt
sbb
pop
mov
ljmp
mov
or
movsl
inc
loope
repnz
jnp
jg
and
scas
js
addl
imul
adc
lahf
insl
int
cmpsb
incb
scas
or
mov
fcmovbe
cmp
out
pop
inc
ds
pop
mov
fmuls
hlt
fs
pop
mov
sub
mov
daa
xchg
mov
outsb
in
movsb
push
jg
adc
ret
jle
dec
sbb
and
ljmp
cmp
cli
out
sbb
push
test
jmp
jmp
sub
dec
mov
mov
cmp
jl
cmpsb
push
jmp
jge
jbe
and
ss
sbb
sbbl
push
imul
sub
stc
mov
movsl
pop
cwtl
xor
push
in
jae
aas
add
xchg
cmp
jecxz
jbe
mov
inc
test
es
cltd
loope
mov
nop
pop
jae
psadbw
and
mov
fdivrl
mov
dec
mov
cs
test
dec
adc
xor
mov
sub
or
and
fstp
aaa
call
outsb
mov
loope
mov
jbe
adc
movups
sbb
bound
or
arpl
and
jbe
ss
sub
lods
xor
fldenv
pop
inc
scas
ja
xor
mov
inc
insl
pop
iret
mov
jl
xor
xchg
sahf
jle
pop
sbbb
cmp
push
ret
repz
repz
xor
in
popa
insb
push
pushf
mov
pushf
xor
pop
jecxz
xlat
cmpsl
lods
rol
sub
mov
push
push
adc
repz
xor
xor
dec
fucomi
out
dec
push
sub
inc
lcall
pop
outsl
repz
scas
sub
cmc
ja
inc
cs
add
or
cmpsb
enter
push
leave
xor
pop
pop
or
inc
inc
adc
dec
cmpsl
xchg
in
cmpsl
dec
out
and
enter
jno
les
xchg
jle
mov
adc
not
je
icebp
mov
hlt
rcll
push
mov
jne
mov
mov
mov
adc
bound
cmp
cmpsl
repz
pop
dec
jo
fsubl
adc
daa
mov
ficoml
lret
shrb
inc
mov
cwtl
movsb
xchg
mov
dec
shll
add
leave
sub
ljmp
aas
pushl
cmp
loopne
mov
repz
jno
dec
xchg
shrb
jg
nop
and
adc
movsb
cli
lcall
jecxz
out
lock
out
xlat
jge
xor
mov
in
and
adc
in
fisttpl
xchg
add
mov
lahf
mov
dec
and
xchg
pop
jae
mov
test
push
shll
aas
pop
ss
test
pop
mov
js
ds
out
push
add
inc
or
ret
fcoml
js
xchg
loop
repnz
stos
or
mov
lahf
arpl
fiaddl
and
jns
push
inc
jge
gs
pusha
mov
sbbl
inc
mov
dec
or
divb
xor
icebp
ror
xchg
cmp
daa
mov
inc
and
ret
and
or
and
std
add
leave
push
stos
sbb
je
subl
xchg
and
jbe
dec
fists
nop
jp
or
sub
hlt
gs
inc
in
clc
test
call
outsb
pop
popf
dec
clc
push
pop
std
pop
add
jmp
cmc
shrb
popf
inc
and
push
or
sub
movsl
aaa
xor
fists
ljmp
clc
dec
pop
jnp
mov
adc
cmp
in
sbb
out
mov
das
mov
int
out
aam
negb
xor
inc
mov
mov
ret
sbb
hlt
add
push
jne
mov
xchg
adc
jo
cmp
bound
xchg
pushf
cmp
cwtl
inc
ljmp
out
dec
dec
mov
sbb
xchg
insl
jg
or
ds
ds
fldenv
orb
cmp
pop
add
mov
leave
jg
lret
inc
push
popa
push
aas
in
xchg
int3
lret
cmpsb
outsb
std
enter
mov
pop
jp,pn
inc
mov
jp
push
js
inc
pop
imul
aas
inc
shr
xchg
inc
cmp
aaa
sub
adc
xchg
scas
sub
pop
jns
mov
cld
lahf
sub
out
inc
and
push
flds
aam
cmc
dec
cltd
test
sub
add
xor
push
mov
cltd
faddp
cld
imul
mov
inc
mov
aaa
out
push
rorl
call
out
arpl
icebp
jmp
cmp
shrl
push
addl
add
jns
mov
pop
push
mov
clc
xlat
or
inc
pushf
sub
iret
pop
scas
adc
ficoml
movsb
stc
lcall
pop
jne
mov
mov
daa
push
jge
stc
aam
dec
aam
loop
fwait
xchg
test
fcompl
clc
stc
push
lods
psubsw
push
pop
pop
jmp
sub
pop
push
sub
arpl
push
out
xchg
mov
pusha
enter
dec
xor
je
stc
test
cmpsl
cwtl
jmp
sub
xor
sub
dec
or
ror
adc
push
les
in
sbb
cmp
mov
mov
inc
stc
push
loop
stos
and
clc
cmp
in
repz
icebp
or
mov
scas
push
add
xor
xchg
jl
out
jmp
jns
push
sbb
std
mov
jp
and
xchg
mov
jmp
hlt
sbb
out
cli
sbb
dec
cmpsb
insl
sbb
rcl
pop
inc
pop
jp
rcl
xor
and
insl
loopne
and
daa
dec
mov
mov
enter
lahf
out
mov
mov
sub
pop
push
sbb
fldt
jns
adc
inc
jnp
cwtl
fwait
outsb
mov
jmp
adc
aam
sbb
popf
and
bsf
mov
cmp
test
xchg
sbb
test
push
adc
adc
lea
adc
sbb
push
js
shrb
mov
mov
cmp
ror
mov
addl
push
cmp
adc
mov
adc
mov
lret
lds
push
roll
bound
test
add
add
push
lcall
ffreep
dec
notb
popa
pop
cmpsl
int
pushf
xchg
cs
xchg
adc
xchg
and
mov
jge
mov
insb
shll
xchg
addb
pop
lret
dec
xor
jmp
out
cmp
jmp
inc
jp
int
cmp
scas
push
adc
ret
pop
jmp
shll
ror
aaa
test
xchg
inc
fisttps
stos
add
cmc
cmpsb
das
sbb
dec
dec
cmp
fsts
into
sti
jno
mov
jb
arpl
cmpb
aas
mov
inc
adc
aas
daa
and
push
in
iret
xor
push
pop
repz
mov
inc
xor
pop
or
cwtl
dec
mov
mov
aam
out
je
mov
mov
pop
popf
jne
hlt
bound
into
mov
std
push
ret
mov
iret
inc
and
and
loope
mov
mov
mov
fucomp
add
lcall
add
dec
push
fldenv
int
mov
enter
xlat
xor
aaa
fwait
jb
ss
inc
jns
xor
fsts
idiv
sarl
jle
in
xor
ret
scas
inc
and
inc
mov
xchg
addr16
xchg
in
jge
pusha
jo
add
lcall
xor
jecxz
lods
pop
stc
pop
ret
jns
inc
push
movsb
or
pop
push
xor
orb
ja
outsl
mov
or
or
mov
mov
inc
or
bound
call
mov
sbb
gs
sahf
dec
lret
into
test
das
or
pop
test
inc
scas
pop
sub
std
inc
lock
mov
cmc
xlat
sub
cmp
push
mov
xor
leave
mov
leave
loope
insl
push
repz
fdivs
arpl
inc
pop
stc
loopne
cmp
lcall
inc
inc
sub
in
idivl
in
inc
adc
mov
mov
stos
fisubrs
out
loop
pop
add
dec
cmc
inc
inc
aas
cltd
pop
or
jo
bound
sub
pop
inc
aam
data16
sahf
test
or
jmp
out
xlat
mov
and
push
sub
jp
stc
arpl
or
push
pop
andb
mov
insb
stos
movzbl
mov
shlb
push
fcmovbe
lcall
xrelease
mov
testl
jg
sahf
shlb
imul
xchg
loop
jle
loopne
fldl
int
xor
in
xchg
fstl
or
cmc
adcl
cmp
push
cmpl
jecxz
dec
lret
pop
push
xor
jle
inc
ret
out
jl
loop
xchg
movsb
sub
mov
inc
loopne
shl
xchg
push
dec
faddp
in
sbb
fninit
adc
mov
jnp
std
arpl
mov
push
xchg
inc
jo
in
sahf
push
dec
mov
cmp
out
test
rorb
jl
rol
mov
sbb
or
mov
stos
or
test
cltd
in
jecxz
in
js
pop
arpl
mov
sbb
outsb
fsubl
dec
xor
fstp
jno
mov
mov
cmp
mov
in
jmp
push
mov
push
pop
cmpsb
outsb
inc
mov
scas
iret
pop
jge
cwtl
jae
pop
sub
xor
push
pop
shrb
lock
testb
or
shll
adc
mov
cmp
shrl
jmp
sbb
sbb
push
jecxz
sub
or
xor
mov
pushf
fistpl
mov
jbe
and
mov
pushf
sub
mov
aad
add
push
shlb
push
cmp
scas
push
sbb
fs
sbb
insl
fucomp
mov
pushf
sbb
mov
sbb
push
pop
push
popa
out
sub
test
test
and
or
ret
xchg
gs
mov
divb
outsl
dec
add
in
leave
and
sub
movsb
pusha
cmc
aas
daa
repnz
loope
and
adc
xchg
push
out
nop
pop
movsb
xchg
and
jbe
sbb
in
adcl
jge
inc
pop
popa
xchg
and
sbb
mov
dec
das
cltd
int
cmpsl
loopne
das
ljmp
sbb
insl
enter
sti
or
mov
sub
fs
push
dec
popf
push
leave
sub
test
aaa
add
je
movsb
mov
test
loope
cld
and
add
dec
sbbb
add
mov
aaa
mov
jae
pop
lahf
pop
jle
aad
mov
xor
push
inc
xchg
pop
lds
scas
push
jmp
in
fstpl
push
fisttpll
ret
icebp
mov
test
sbb
ja
cmp
mov
in
sub
test
and
add
mov
add
mov
nop
push
cltd
mov
in
mov
pushl
inc
frstor
insb
scas
pop
ficomps
jmp
outsb
popf
lods
inc
inc
jno
dec
adc
sbbb
push
mov
cmpsb
adc
adc
test
push
mov
shrb
or
cmp
mov
movsb
pushf
pop
mov
fcmovnu
xor
in
cs
push
mov
xor
mov
popf
sub
and
testl
push
in
xor
imul
dec
xor
cmc
icebp
imul
or
xor
add
mov
pop
xchg
mov
shrl
cmp
mov
and
imul
sbb
fmulp
mov
inc
in
test
clc
push
cltd
lret
cmp
cmp
mov
subl
pop
insb
loopne
pop
sbb
push
imul
insl
icebp
shlb
adc
lock
leave
iret
outsl
iret
dec
xor
cwtl
mov
push
mov
les
cld
push
out
stos
push
imul
in
mov
mov
xlat
loope
jns
sbb
adc
clc
sub
roll
dec
mov
nop
les
das
orb
sbb
add
and
inc
mov
pop
xchg
mov
incl
in
jecxz
call
inc
andl
js
arpl
inc
dec
dec
or
sbb
mov
cmp
lret
mov
rcl
addl
decl
inc
repz
inc
xchg
xlat
lcall
jo
aas
sbb
lods
leave
mov
test
cmc
xor
xchg
sub
sahf
adc
pause
push
sub
inc
dec
mov
scas
dec
mov
in
jo
and
arpl
jmp
mov
fnsave
adc
push
add
or
aam
add
aas
mov
scas
pop
pusha
cmp
inc
daa
popf
popa
divl
inc
bound
or
in
inc
or
dec
cli
daa
jb
rcl
mov
out
mov
xchg
cmp
mov
shrb
aad
hlt
push
maxps
dec
out
test
dec
std
xchg
dec
xor
pop
and
out
dec
mov
pop
push
ret
cli
push
sbbl
repnz
jle
add
sub
push
mov
sub
pop
xorb
jo
imul
divl
or
adc
imul
lret
imul
lcall
jmp
test
clc
aam
dec
loop
scas
and
int
cli
leave
jge
dec
jp
jge
ss
xor
js
sub
jge
scas
into
outsl
leave
and
dec
repnz
and
pop
xchg
add
cmc
push
mov
xor
in
add
pop
test
jecxz
ja
leave
nop
jae
ds
cmp
mov
std
call
popf
xchg
shlb
pop
ret
add
and
sbb
loop
cmpsb
mov
and
mov
stc
or
cld
lock
shlb
xor
outsb
fucomp
xlat
cmpsb
shl
sahf
int
stos
mov
test
call
jp
das
popa
mov
mov
push
mov
ret
or
cltd
repnz
push
nop
leave
repnz
jne
enter
xchg
daa
sub
cmp
cmp
xchg
shl
or
scas
xchg
decl
ja
xor
pop
movsl
cltd
cmp
gs
xchg
add
shrl
in
stc
or
and
sub
pop
adc
fimull
sti
out
mov
addr16
jns
mov
pop
sbb
int
inc
mov
xor
jnp
jl
jnp
subl
cwtl
xchg
sbb
aad
and
mov
dec
daa
pop
mov
andl
lcall
mov
sub
jl
sbb
and
sbb
push
into
cwtl
ret
flds
xor
lods
sub
ret
mov
insb
repnz
mov
and
pushf
lock
adc
push
jae
in
pop
ljmp
test
nop
dec
cltd
leave
movsl
mov
ja
ljmp
arpl
pop
test
mov
jb
insl
fisubrl
sub
outsl
pop
fwait
aad
dec
dec
pop
daa
dec
dec
movsl
test
add
cld
les
pop
and
pop
xchg
and
mov
xor
loope
push
pop
lods
pop
cmp
adc
lods
mov
iret
cmp
fcmovne
xor
in
mov
sbb
pop
or
mov
test
dec
mov
xchg
ljmp
fdivrs
inc
lahf
mov
data16
xchg
movsl
test
data16
jns
pop
push
mov
mov
jmp
je
sbb
cld
imul
and
mov
cmp
adc
pushf
jnp
push
icebp
cmpsl
push
rolb
sbb
push
mov
adc
add
sub
loopne
punpckldq
adc
and
ja
xchg
cli
mov
ret
add
jmp
loop
inc
inc
push
imul
xchg
sub
xchg
shlb
out
rclb
adc
jge
cmpsl
stos
mov
fnsave
aad
subb
mov
adc
fstp
and
loop
or
adc
mov
lock
pop
scas
ret
inc
js
dec
stos
xor
inc
cmp
dec
jbe
dec
jns
ds
daa
and
jno
test
pop
adc
insl
clc
push
aad
push
ds
out
mov
mov
loop
test
or
xchg
dec
lret
sbbl
and
fs
cmp
inc
inc
popf
pusha
pop
mov
sub
ret
imul
add
ret
imul
repz
mov
mov
fiaddl
adc
jge
mov
lock
aad
ret
jne
inc
xchg
mov
mov
aam
xchg
data16
roll
dec
dec
test
pop
or
mov
orl
std
mov
push
dec
arpl
mov
jmp
inc
mov
inc
add
movsb
fidivrl
pop
lcall
enter
notb
xchg
add
or
mov
ds
push
mov
mov
cld
or
inc
sub
push
movsl
das
xlat
sub
mov
pop
push
mov
ja
lret
push
jl
pushf
cmp
and
inc
pop
iret
ds
int3
sqrtps
cwtl
cmp
sub
loop
mov
mov
push
andl
dec
out
mov
sub
adc
mov
das
mov
lahf
xchg
test
push
roll
cmpsl
lock
mov
cmpsb
mov
out
mov
sahf
cmpb
mov
outsl
out
insb
clc
mov
cs
push
xchg
and
lcall
hlt
and
and
xchg
sahf
jl
cmp
lock
cwtl
and
inc
cmp
pop
pop
fwait
cmp
pusha
repnz
push
inc
loop
xor
push
jge
and
dec
nop
shlb
nop
adc
lcall
add
jbe
imul
sub
dec
jo
inc
loope
and
cmp
test
ret
loop
pusha
add
and
pop
imul
cmp
popf
and
xchg
lcall
insl
cmp
and
sub
das
ds
xor
cmp
lret
dec
rcr
mov
iret
pop
adc
stc
xchg
cmp
movsb
or
inc
int3
test
xchg
fists
mov
ljmp
xchg
sub
out
je
daa
inc
inc
test
divl
push
cli
mov
pop
std
pop
jecxz
aam
inc
test
sub
jne
cli
shr
mov
mov
jbe
jl
cmp
sbb
sahf
xor
aaa
rorb
stos
adc
lds
in
inc
idivl
jg
add
adc
scas
sbb
fimuls
mov
inc
sub
js
pop
repnz
in
lods
adc
jo
js
lods
andb
inc
lret
jg
xor
sbb
inc
lods
pop
add
in
stc
jo
dec
jnp
inc
std
aas
insb
sbb
mov
jmp
jne
mov
cmc
jbe
lret
push
or
mov
fdivrl
jae
adc
pop
mov
add
loop
mov
insb
xor
inc
popa
in
jno
flds
jge
push
daa
movsb
mov
out
jae
ja
pushw
je
in
movb
nop
mov
pop
loope
lret
dec
scas
stos
call
cmc
test
enter
mov
sbb
sbbb
lahf
sbb
jl
icebp
hlt
testb
ror
inc
mov
out
adcl
dec
call
test
movsl
and
in
lea
lret
xchg
add
std
imul
xor
mov
cltd
xchg
push
pushf
ret
cwtl
in
jnp
inc
mov
in
xor
pop
mov
xchg
dec
xor
mulb
out
cltd
mov
jbe,pt
jl
ret
ret
xor
push
cmp
mov
subb
adc
addr16
clc
pop
out
imul
in
addl
daa
mov
and
cmp
mov
adc
jp
or
fwait
xor
pop
repz
add
dec
fwait
mov
fwait
push
mov
or
leave
je
sti
inc
fbld
mov
push
cs
lods
aad
loopne
loope
js
push
ret
inc
push
pop
add
pusha
push
test
sub
cltd
sbb
jle
jmp
pop
fsubrl
or
movsb
push
ja
xor
testl
cltd
push
xchg
lahf
sbb
repnz
nop
loop
jmp
xor
adc
stc
fsubp
jbe
es
cmp
in
mov
bsf
dec
mov
divb
cltd
jp
mov
divb
movb
push
outsb
outsl
in
cmpsl
mov
xchg
outsl
mov
jmp
pop
mov
sbb
jp
lret
adcl
mov
pop
jmp
cmc
ret
in
dec
data16
cld
pop
add
subb
or
xor
in
pop
cs
lock
lea
jae
test
or
xchg
sarb
inc
push
das
adc
cltd
sbb
cmpsb
or
inc
inc
dec
cmp
push
mov
add
dec
jo
js
sub
xchg
adc
jo
pop
push
shlb
push
nop
dec
jno
and
push
mov
or
xchg
scas
popl
mov
repz
movsl
or
lea
mov
fsubrl
push
loope
ret
mov
sbb
es
xor
pushf
xor
int3
loop
pop
mov
adc
inc
sbb
adcb
fimull
aam
inc
je
push
in
movsl
outsl
nop
xchg
sub
inc
testb
xchg
ret
out
outsb
xchg
in
fsubrl
rorl
sub
and
xlat
lcall
mov
push
fstpt
xor
dec
mov
sti
outsl
jb
loopne
mov
scas
out
repnz
test
xchg
mov
sbbb
pop
sub
addb
cmp
pop
enter
sub
hlt
add
push
pop
jp
ss
outsb
loope
shll
pop
out
pop
sbb
movl
and
stos
cmp
je
and
inc
mull
sub
fldl
mov
jle
lock
jge
push
push
and
gs
testb
stos
sbbb
fistpl
jl
or
fwait
dec
lahf
fiadds
out
sbb
fs
xor
xchg
inc
aad
push
call
cmpsb
js
pop
int
jmp
jmp
push
lcall
mov
pop
mov
or
gs
out
sub
insl
add
add
push
jp
imul
fcomip
xor
cmp
testb
lcall
ja
inc
dec
jae
xchg
jbe
inc
push
jle
adc
aas
pop
adc
fwait
sbb
xor
xchg
cmp
mov
xor
jno
cltd
sbb
pop
lock
out
sbb
or
adc
add
jle
test
sub
cmp
dec
sub
mov
lods
xchg
pop
mov
sub
lods
push
in
xor
push
pop
mov
xor
rcrb
loope
add
orl
adc
push
dec
test
cld
sahf
pushf
sahf
mov
loop
nop
es
incl
fimuls
cmp
inc
or
cmpsb
ja
sahf
gs
add
and
adc
lea
rcr
xchg
cltd
push
inc
enter
jmp
mov
test
adc
pop
mov
sahf
cld
dec
das
stc
cmc
orb
pop
add
xchg
add
mov
push
push
lods
sbb
push
cmp
adc
ja
or
xor
scas
jb
js
push
stc
mov
jns
out
sub
sarb
fstl
xchg
pop
ljmp
inc
xchg
inc
ja
cld
pushf
mov
dec
jns
jl
sarb
or
sbb
insl
pop
add
cld
fildll
sbb
lods
into
hlt
inc
dec
inc
add
rcrl
mov
push
popf
in
out
and
inc
nop
outsl
cmp
aad
shrb
in
or
xor
dec
xchg
in
lea
jb
adc
in
mov
xchg
add
idivb
imul
sarb
xchg
leave
inc
fdivs
pusha
jne
orb
jne
and
aaa
cmp
aam
cmp
add
les
cmp
hlt
push
and
pop
fdivrl
je
add
or
add
jmp
loop
xchg
je
stc
mov
dec
sub
mov
popa
push
push
daa
push
or
ror
imul
lds
ret
shll
int
in
sarb
enter
add
adcb
fistpll
push
jge
mov
lret
mov
ss
std
sub
fs
mov
out
push
jl
inc
test
dec
sbb
push
into
add
cli
fwait
inc
sub
js
movsl
jge
sahf
insb
xor
sub
cs
idivl
clc
nop
clc
or
mov
fs
sbb
and
sub
push
push
into
sub
pop
stos
pop
cmp
inc
testl
subl
or
in
pop
lret
and
mov
sahf
addr16
xchg
push
add
mov
ret
repz
stos
dec
cli
adc
sub
push
inc
jno
shrb
xor
js
pop
ret
cmp
lea
stos
xchg
hlt
dec
jo
sbb
pop
xchg
daa
jecxz
testl
je
pop
lcall
inc
lahf
in
dec
inc
push
imul
mov
cld
inc
jae
shlb
mov
adc
icebp
push
cmp
mov
mov
hlt
jns
mov
test
and
inc
xor
push
scas
iret
fldl
test
jae
adc
pop
mov
add
xchg
cmp
jns
movsb
hlt
jmp
rcrb
lret
testl
cli
sbb
outsb
xor
stos
cmp
or
ja
fnstsw
out
pop
vcvtdq2ps
jp
clc
sub
int
ja
jle
sub
insb
movsb
mov
shl
pop
sub
sbb
es
sub
jg
jmp
cmp
clc
bound
push
daa
divb
sarl
xchg
or
mov
inc
xor
push
ficomps
out
or
scas
sub
mov
jb
rorl
push
ret
loopne
pop
and
xchg
xchg
sbb
sbb
adc
mov
adc
mov
dec
out
push
popa
shr
mov
xchg
or
mov
test
insb
lods
ljmp
sub
mov
icebp
out
pop
jb
clc
test
lret
mov
data16
repnz
cmp
push
out
xchg
hlt
xor
and
clc
adc
movsl
subl
fwait
cmp
sub
data16
adc
dec
lds
xchg
stc
mov
cmp
push
sub
add
xlat
sbb
inc
mov
fs
orb
das
fdivl
jne
mov
outsb
ret
mov
rcll
js
sub
push
hlt
insl
push
fcoms
inc
sub
mov
or
xor
ljmp
fbstp
jl
movsl
xlat
outsb
out
cmpsb
sbb
sub
mov
sub
roll
xchg
jb
imul
andb
inc
pop
fnstenv
inc
or
lcall
fwait
xor
mov
inc
lds
add
adc
mov
aas
test
add
fistl
xchg
gs
ret
movb
mov
inc
mov
fildl
cmc
shl
inc
cmp
ss
out
add
flds
dec
xchg
in
in
notb
jg
pop
xlat
mov
inc
xchg
sbb
lahf
ror
and
mov
andl
xor
test
int
movsl
xchg
cmp
ret
or
jbe
fwait
stos
jne
hlt
and
sub
or
xchg
pop
adc
dec
movsl
jmp
bsr
push
mov
fnstcw
icebp
and
int
pop
inc
pop
js
imul
psrld
cwtl
push
subb
jmp
add
inc
jge
scas
xor
push
jge
enter
leave
adc
jp
jnp
pop
jl
cld
mov
pop
clc
pop
xchg
repz
js
add
xlat
mov
arpl
lcall
imul
push
pop
dec
xchg
shrb
or
push
std
mov
pop
cmp
loop
inc
and
adc
stos
stos
adcb
adc
je
pcmpeqd
sub
inc
dec
mov
add
pushf
push
inc
loop
hlt
push
dec
mov
ret
mov
lods
and
orl
mov
inc
negl
jo
xchg
jmp
subl
fs
jp
insl
cmp
scas
loope
mov
ds
cli
stos
inc
stos
gs
lcall
inc
sbb
mov
roll
nop
add
lcall
inc
das
lods
repnz
fisttpl
mov
negb
add
mov
in
js
jnp
pop
lods
fistpl
mov
bound
pop
jecxz
mov
lahf
sbb
cmp
das
adc
lcall
lods
add
int
test
dec
jmp
xchg
shr
xor
mov
jl
adc
xor
lock
or
pop
testl
jp
ficoml
mov
je
int3
ret
pop
rcrl
jne
jae
jle
imul
clc
mov
pop
pop
or
shl
arpl
inc
dec
bound
xor
insb
cmc
aad
cmp
pop
jg
ret
imul
fsub
mov
adc
sti
into
pusha
popa
aaa
cmpl
enter
fidivrl
push
addb
pop
adc
add
icebp
lahf
mov
jne
push
ja
sub
sub
cmc
bound
in
ret
fdivrl
outsb
or
inc
test
pop
repnz
pusha
stc
call
jns
xchg
jne
pop
jle
lds
pop
nop
sarb
jecxz
push
jg
stc
pop
je
xor
jl
xor
mov
insl
mov
jno
jnp
inc
jp
push
movsl
adc
pop
js
popa
xchg
xor
xlat
push
adc
rclb
dec
lock
push
mov
xchg
push
mov
push
dec
test
jl
pop
sub
test
xchg
pop
and
push
sarb
sub
in
test
scas
and
test
aas
cmc
xor
sub
push
insl
pop
mov
popa
scas
xor
xchg
imul
cmp
lahf
icebp
sbb
imul
in
sub
push
out
test
cwtl
cmp
inc
inc
shr
sbb
pop
push
lds
ja
ja
jg
in
inc
xor
inc
in
outsb
pushl
mov
xor
imull
jg
jl
add
repnz
lahf
inc
pop
pop
xor
push
mov
xchg
in
and
add
lods
mov
pop
dec
adc
incl
xor
mov
fwait
aam
popa
inc
sahf
lahf
andl
fs
push
xor
fidivrs
xchg
ja
jbe
popf
ret
shl
xorl
add
mov
sbb
mov
sbb
xchg
dec
fiadds
sbb
mov
xor
mov
call
sbb
sbb
lret
scas
hlt
pusha
or
stos
mov
ljmp
ret
sub
insl
stos
dec
test
or
adc
daa
xor
fwait
mov
jbe
mov
push
dec
xchg
push
int3
arpl
xor
inc
hlt
leave
cmp
mov
insb
pop
inc
je
fistps
mov
and
arpl
frstor
add
jo
or
add
insb
dec
mov
movsl
xchg
seto
push
aas
pop
jle
out
dec
ds
iret
js
das
mul
xchg
lds
add
xchg
je
mov
push
inc
es
sub
mov
mov
ss
mov
ja
mov
cmp
int
outsb
mov
into
roll
dec
xor
sub
fists
push
popf
js
jb
loop,pn
sti
ljmp
mov
movsb
jb
sbb
decb
or
fsubrl
cwtl
cmpsb
pop
push
int
mov
test
popa
xor
loop
fcoms
pop
xchg
xchg
popa
adc
push
mov
lods
std
scas
pusha
pop
in
std
sbb
xchg
dec
loop,pt
pop
in
popa
jno
cmp
ss
inc
test
adc
push
jne
dec
sarb
sub
push
mov
daa
repnz
pop
jb
insb
adc
ds
push
mov
lret
je
gs
xchg
xchg
scas
xor
test
popf
je
popa
std
pop
cmp
xor
popa
leave
insb
jle
jecxz
flds
mov
xchg
xor
sbb
je
pop
rcrb
popf
dec
lcall
and
mov
aad
cs
xchg
mov
xchg
pop
cmp
inc
ror
jmp
lahf
into
pop
int3
lea
sub
sarb
clc
xorl
and
cmp
stc
sahf
or
push
cmp
mov
push
xchg
lret
inc
cmp
mov
daa
jg
xor
jle
loopne
xor
and
or
mov
xchg
pop
sbb
add
xlat
pop
fdivrs
or
scas
bound
jp
shr
xlat
scas
and
nop
les
int3
add
sub
mov
sbb
push
movsl
sti
dec
loopne
xchg
lds
xchg
xchg
mov
dec
jns
sub
add
shrl
ss
push
mov
dec
jge
xchg
repz
push
or
out
orb
cmp
stc
push
and
jo
adc
shll
cmpsb
test
ret
outsl
aaa
lret
js
cmp
xchg
subl
pop
stos
cmpsl
jb
xchg
mov
int3
dec
jmp
cwtl
sbbl
xlat
popw
pmaxub
xchg
or
pusha
xor
das
ret
jnp
ss
fidivs
outsl
jp
stc
mov
add
bound
push
hlt
add
pop
mov
xor
mov
push
rorl
out
sbb
sbb
hlt
inc
mov
sbb
push
jae
mov
push
rolb
fcoms
mov
push
or
stos
repz
stc
jmp
add
mov
gs
std
je
jnp
dec
lahf
pop
sub
add
push
mov
ljmp
xchg
mov
push
pop
xchg
fidivs
cltd
mov
enter
or
stos
jb
inc
fistpl
adc
iret
pop
movsb
push
out
mov
ret
sub
test
mov
inc
xchg
xchg
add
or
push
adc
sub
xchg
jnp
sub
mov
and
mov
dec
xchg
pop
mov
adc
xor
loopne
cmp
mov
out
adc
imul
out
das
sbb
ss
push
pop
mov
jns
pop
inc
lahf
xchg
dec
fiadds
lods
inc
xorb
push
or
mov
mov
jl
mov
cwtl
push
rorl
mov
jl
in
lret
and
out
out
pop
inc
sub
aaa
sbb
lds
stos
mov
push
iret
loopne
mov
aaa
clc
lret
fbld
cs
mov
xor
inc
out
repnz
jno
aaa
xor
and
lea
popa
xchg
jns
loop
sbb
ret
sub
and
inc
add
push
fistl
lret
aaa
stos
ja
das
sub
lods
lds
sahf
leave
shl
push
imul
ret
jne
sbb
push
lods
sarl
mov
in
push
hlt
sbb
mov
push
popf
sbb
test
jne
sahf
mov
fs
and
leave
mov
fdivp
mov
push
jns
insl
aas
push
adc
add
ret
push
lahf
in
in
xchg
pop
inc
mov
xchg
aam
inc
adc
pushf
iret
mov
jae
mov
adc
out
ret
inc
jle
in
xor
ss
incb
mov
insb
mov
and
rorb
icebp
sbb
stc
rcrl
clc
rcrb
dec
push
addr16
xchg
stos
fisttps
lock
sbb
inc
repnz
cmp
sbb
bound
jns,pn
push
xchg
insb
inc
pop
out
xor
adc
out
scas
enter
mov
jo
imul
and
sbb
mov
movsb
out
fidivl
js
sub
adc
cs
xor
out
push
mov
jge
insb
mov
push
push
mov
jnp
outsb
je
push
or
movsl
push
fsubrs
test
mov
sbb
adc
xchg
xchg
mov
mov
mov
pop
loope
imul
cmpsb
filds
mov
sbbl
clc
pop
daa
mov
pop
outsb
sbb
mov
repnz
into
push
cs
inc
mov
dec
inc
es
jecxz
cmp
push
sbb
arpl
ud1
mov
jns
lahf
fwait
mov
sub
sbb
ja
push
xchg
pop
push
je
les
or
sbb
mov
shrb
imul
dec
or
aaa
stos
mov
xchg
push
lcallw
xchg
xchg
shrb
insl
or
lahf
sbb
cld
mov
data16
adc
lret
outsl
fldcw
jo
cltd
push
std
sti
out
mov
or
jl
lods
scas
cmp
inc
push
push
pop
add
pop
xchg
mov
push
push
inc
arpl
es
push
in
sarb
sub
iret
gs
mov
inc
cltd
cmp
push
cmp
sbb
out
adc
dec
leave
clc
dec
sbb
adc
inc
and
mov
xlat
int3
mov
repnz
add
int3
outsl
inc
aad
cmp
inc
push
stc
dec
cli
mov
push
jbe
notb
pop
ds
dec
orl
adc
lds
gs
mov
mov
popf
jae
ss
xchg
iret
mov
mov
je
push
mov
cmp
sub
sub
cmc
lods
mov
xchg
loope
bnd
lcall
mov
xchg
lock
sbb
popa
daa
push
xchg
dec
addr16
lahf
lods
sbb
adc
jp
mov
ds
outsl
push
and
sbb
add
sub
jge
mov
fstpt
out
xor
rcr
lahf
jae
sub
or
cld
scas
dec
xchg
sbb
mov
call
add
lret
jno
lcall
mov
mov
sbb
das
pop
rep
lock
xchg
les
mov
mov
loop
out
xchg
dec
mov
dec
sub
add
ljmp
and
mov
pop
push
xor
add
das
and
mov
stc
cmp
inc
das
es
pusha
cmpsl
mov
push
loopne
inc
outsb
pop
jle
mov
lds
fsubrp
push
lock
aad
and
ds
cwtl
fcoms
fwait
or
xchg
pusha
enter
fldcw
inc
dec
jg
adc
cmp
pusha
loope
out
jnp
xor
mov
xchg
fsubrp
cmpsb
in
rclb
and
push
arpl
inc
sbb
loopne
jno
push
jae
xchg
pop
push
in
add
loopne
mov
and
xor
add
mov
mov
faddl
push
pop
inc
cli
dec
push
cwtl
sbb
subl
inc
lret
orb
dec
inc
and
cltd
sbb
mov
hlt
hlt
jb
mov
sti
sub
fldt
jno
inc
adc
xor
and
and
mov
push
jno
push
xchg
daa
inc
pop
popf
jo
add
lret
lret
fidivs
repz
loope
repz
les
sahf
aaa
bound
ja
daa
dec
sahf
sahf
jl
dec
adc
scas
mov
cwtl
out
loope
in
jnp
mov
and
mov
sub
push
inc
scas
idivb
into
dec
andb
add
lds
sub
sets
cmp
aam
test
cltd
jnp
cmpsb
pop
arpl
inc
jbe
push
and
add
das
xchg
push
pop
lret
adc
outsb
stos
fnsave
xchg
jno
sub
push
lods
add
fdivrs
pop
mov
outsb
loopne
std
imul
fcmovnu
mov
daa
ja
loopne
inc
hlt
popa
dec
scas
add
xor
xor
dec
inc
inc
mov
cwtl
add
scas
in
and
rcrb
xor
cmpsl
fdivl
repnz
inc
sbb
jns
jb
sbb
cmp
into
pop
pushf
mov
jbe
mov
dec
push
loope
clc
test
cmp
xchg
aas
fldenv
int3
movsl
decl
pop
cmpsl
dec
mov
sbb
cmpsb
push
mov
cmp
test
xchg
cs
aas
jb
push
mov
insl
xchg
push
mov
les
pop
mov
ja
add
sarl
or
jae
mov
mov
push
sbb
or
mov
adc
push
lods
fistpl
and
xor
pop
lret
mov
and
out
xor
int3
xor
push
jno
test
add
jnp
mov
push
cwtl
ret
lcall
inc
aad
cmp
xchg
rorb
mov
jbe
lods
cli
repz
insl
mov
les
sub
pop
in
mulb
les
enter
pop
nopl
and
rclb
and
sti
push
jge
popf
rcll
add
scas
subb
push
sbb
lahf
sub
loop
out
popa
mov
pushf
and
clc
mov
test
and
fiadds
int
xor
fnstsw
test
sub
mov
push
jmp
outsb
dec
icebp
div
pusha
mov
aaa
and
dec
pmaxsw
xor
repnz
sub
aam
loope
cmp
in
cltd
aas
dec
ss
iret
push
add
inc
mov
sub
in
das
pop
aad
lods
xor
cmp
inc
or
push
lock
jge
int
cltd
mov
stos
leave
mov
inc
shl
mov
and
frstor
dec
stos
xchg
and
mov
sub
orb
mov
cmp
popa
push
in
lods
insl
push
cmp
mov
mov
mov
pushf
cmp
xor
mov
sub
xchg
lcall
dec
sub
push
sub
lret
nop
jbe
std
or
dec
mov
mov
pop
inc
dec
jg
mov
sub
aas
lcall
mov
jbe
dec
aaa
loope
mov
out
ret
jmp
jmp
je
and
das
add
sub
xor
dec
arpl
inc
push
mov
pop
inc
adc
add
xchg
shl
rolb
and
or
popf
pusha
popf
les
out
out
sbb
pop
cld
push
std
btsl
xchg
or
push
cmp
aam
cmp
push
movsb
mov
mov
mov
xchg
insb
cwtl
push
mov
adc
dec
mov
sahf
xlat
add
cmpsl
lock
lahf
xor
out
shll
sub
into
imul
inc
inc
imul
cli
imul
sbb
mov
mov
dec
and
xor
mov
and
mov
sub
and
sarb
nop
sub
cmpsb
pop
or
daa
jne
data16
jmp
add
pusha
or
cmp
push
cwtl
xchg
and
xchg
mov
outsb
mov
sbb
imulb
adcl
xor
and
inc
daa
sbb
in
cmp
xor
loop,pn
lods
dec
add
roll
jno
jg
idivb
push
jge
fldcw
pop
and
in
adc
or
cmp
pop
ja
into
lret
pop
bound
dec
add
add
mov
fisubs
into
and
js
sub
inc
inc
lods
test
xor
lret
mov
stc
cmc
popl
and
outsl
sbb
sbb
lea
arpl
add
or
imul
daa
mov
push
pop
addl
pusha
sbbl
cwtl
mov
fcmovu
pop
mov
sbb
popa
out
or
int3
adc
inc
adc
mov
cmpsb
jnp
sub
and
mov
in
and
popf
lods
inc
sbb
mov
and
and
push
loope
push
sub
ds
xor
push
pushf
xchg
mov
subl
sbb
and
mov
jb
cld
lret
mov
enter
in
out
cmp
imul
dec
mov
and
inc
icebp
inc
in
mov
lods
jo
xor
and
arpl
mov
push
jno
cli
lahf
ret
cli
in
std
mov
adc
and
jle
dec
rcrb
cmp
lahf
push
mov
jecxz
jo
lahf
mov
negl
cs
fildll
mov
pop
push
xor
popf
sub
outsl
mov
xchg
pop
sti
jnp
adc
ret
mov
test
bound
ficompl
jmp
js
push
insb
mov
mov
and
push
adc
addr16
jecxz
lds
sub
cmpb
inc
pop
push
or
mov
dec
cmpsb
repz
mov
jo
shl
shl
push
sbb
sarb
jb
jge
pop
pop
mov
jmp
push
in
adc
mov
cli
ja
pop
cs
ficompl
xchg
pop
sbb
jp
out
jae
frstor
sbb
sti
adc
sub
mov
sbb
pop
sbb
sub
mov
aam
inc
icebp
dec
rorb
push
sub
imul
mov
push
fsubrl
fcomps
ret
cmp
jl
pop
inc
add
ja
out
and
mov
sbb
push
repz
bound
cli
push
int
inc
pop
stos
nop/reserved
inc
fisubrs
sarb
out
mov
cmp
ficompl
xchg
mull
imul
je
test
inc
jbe
or
jmp
fistps
out
lods
idivl
mov
rol
push
stos
adc
mov
arpl
add
out
push
or
test
push
mov
mov
and
in
inc
mov
pop
inc
fucomip
push
ds
push
sbb
stos
jb
mov
jg
cmpl
sti
mov
push
shrl
cmp
cltd
rolb
dec
dec
les
pop
arpl
ret
das
nop
int
jne
or
dec
jns
cltd
pop
mov
mov
xchg
lret
push
ret
test
fbld
aad
popl
or
pop
testl
sbb
lds
rcrl
pop
jnp
inc
lock
loopne
pop
or
call
jmp
sub
mov
nop
cmp
sub
mov
xor
mov
sbb
int3
jns
push
mov
xlat
sub
and
arpl
aaa
js
nop
fnstsw
dec
sub
mov
addl
lods
inc
xor
sbb
pop
jo
add
lcall
imul
mov
cwtl
xrelease
mov
neg
call
les
cli
jle
in
mov
or
test
in
mov
stc
and
sub
sub
mov
mov
rcrb
mov
sub
sub
frstor
je
int3
test
mov
dec
jge
int3
insl
test
pop
lods
repz
xor
dec
mov
push
sahf
ja
sbb
xchg
mov
mov
ss
push
jae
aaa
dec
mov
mov
call
push
pusha
dec
jmp
int3
es
fldenv
shrl
lret
daa
lds
dec
ret
sub
inc
dec
xchg
std
sbb
adc
add
mov
aad
orb
data16
push
sbb
push
sub
rclb
iret
js
cmp
stos
push
inc
mov
fidivrl
out
or
xchg
or
push
mov
ret
xor
lcall
pop
or
jbe
shll
jmp
lock
xor
decb
dec
push
imul
pop
call
mov
mov
cld
mov
fnstenv
nop
mov
mov
push
mov
fwait
push
sub
lods
cmpsb
and
mov
adc
push
pop
rcl
popf
sbb
push
mov
movsl
jo
mov
dec
jne
adc
push
add
mov
fs
out
call
xchg
loop
cwtl
in
outsb
push
push
aaa
pop
iret
and
inc
in
aad
in
cli
sub
test
adc
push
and
call
pop
mov
mov
pop
into
lcall
out
imul
sbb
fs
stos
out
std
dec
nop
xchg
push
out
loop
stos
lret
in
fs
in
cmc
loop
pop
inc
je
push
pop
pop
jb
jnp
add
rolb
xchg
es
mov
push
pop
mov
cmp
lock
shll
dec
int3
mov
scas
push
xchg
xlat
sub
xor
jge
out
mov
addr16
add
ret
push
das
in
mov
andb
in
inc
enter
mov
mov
mov
daa
das
cmp
cmc
pop
pop
repnz
in
aad
pop
mov
js
sub
adc
cmpsl
push
lret
jmp
scas
xchg
in
mov
sbb
out
je
pushf
es
repnz
gs
push
or
je
cld
inc
cwtl
mov
mov
insb
mov
xchg
dec
cltd
pop
data16
rcl
inc
mov
je
pusha
lcall
fcoms
add
ljmp
mov
pushf
popa
frstor
mov
sub
pop
les
jns
jmp
or
inc
test
rorl
mov
scas
out
mull
add
mov
test
cmpsl
inc
dec
or
mov
inc
iret
sub
pop
or
popf
jp
repz
cmp
cmpsb
sub
lret
add
jne
aam
pop
mov
push
mov
or
mov
lods
xor
jl
xadd
daa
xchg
push
hlt
inc
stc
xlat
xor
mov
adc
in
fldt
lea
jno
jmp
nop
jl
pop
pop
jl
cmp
push
sub
pop
andl
push
enter
bound
ret
xchg
pop
pop
sub
jp
adc
inc
sub
mov
ljmp
shlb
out
inc
sbbl
fildll
pop
mov
addr16
daa
das
sub
pand
jbe
mov
sahf
es
push
jmp
lea
cmc
dec
cltd
mov
ret
lods
icebp
add
adcb
mov
mov
js
jl
rclb
xchg
inc
in
push
cltd
mov
mov
fs
lock
es
enter
in
jecxz
aam
shrb
clc
mov
in
push
mov
call
dec
inc
out
add
sbb
xlat
stos
and
jbe
rep
or
inc
add
cmpsl
xorb
inc
xchg
cmp
pushf
add
mov
aad
mov
pop
fsts
sbb
lds
call
lods
sub
sbb
push
mov
jge
pop
jge
inc
xlat
orl
aas
mov
ret
push
cmp
push
repnz
push
movsb
cmp
mov
or
sahf
push
out
lods
pop
pop
adc
lret
daa
imul
sub
and
pop
lock
sbb
mov
ret
jp
popf
and
push
int3
mov
ljmp
fsts
and
add
inc
jo
or
pop
xchg
jecxz
inc
add
adc
or
pop
sbb
sbb
in
ficoms
jae
sub
and
xchg
cld
repnz
loope
xorb
pop
outsb
xchg
imul
push
outsl
jl
repnz
js
insb
adc
popf
leave
fwait
dec
sbb
mov
dec
push
ret
pusha
iret
mov
mov
add
xor
cmp
lahf
or
iret
in
xchg
sbb
cmpsb
cwtl
mov
mov
jo
push
push
jnp
push
xor
fst
mov
mov
int
xchg
mov
cwtl
inc
jmp
outsl
cmp
into
iret
push
dec
sbb
cltd
lret
inc
out
data16
inc
inc
subb
movsl
sbb
sbb
pop
push
mov
xchg
push
imul
cmp
inc
jg
imul
mov
and
sbb
mov
push
test
lret
ficompl
pop
add
pop
push
insb
enter
sti
cmpl
cmc
fidivrs
lret
mov
inc
dec
dec
and
dec
lret
mov
push
int
xchg
mov
sbb
dec
bound
mov
arpl
scas
cwtl
sub
ja
es
pop
test
mov
xchg
inc
in
scas
adc
xor
ss
and
andl
or
hlt
xchg
lahf
mov
dec
or
stc
fcompl
mov
xchg
in
mov
pop
lock
push
movsb
out
enter
lea
mov
loope
adc
push
inc
in
push
cmp
mov
call
pop
outsb
cwtl
inc
sahf
push
out
shll
mov
lock
movsl
ljmp
outsb
fldt
mov
mov
incb
lods
mov
mov
lds
shrb
loop
jecxz
das
or
int
jno
fldt
sub
jb
jnp
xlat
fdivrs
sbb
push
mov
stos
mov
mov
push
jb
es
pop
lock
enter
sarl
nop
popf
mov
push
jp
xor
xorb
dec
jno
mov
out
icebp
mov
stos
jne
std
jae
pop
push
xor
addr16
add
adc
ljmp
cmc
out
out
lcall
outsb
nop
fsubs
dec
lea
imul
imul
stc
mov
out
fwait
push
andb
jecxz
in
mov
xor
lds
sub
adc
inc
xchg
pushf
insb
outsl
xorl
insl
mov
insl
aad
inc
test
outsb
mov
sbb
stc
jnp
cmove
outsl
sub
aas
out
and
push
lret
dec
add
cmp
bound
push
pop
sbb
xor
iret
xchg
push
pop
test
pop
add
outsb
pushf
xchg
movsl
dec
repz
push
loop
mov
incb
and
in
addr16
mov
jge
adcb
adc
jns
inc
cmp
push
pop
ja
jp
std
pushf
scas
lea
jl
icebp
sbb
nop
and
outsb
sub
jo
jmp
sub
dec
lods
out
mov
and
and
mov
icebp
sbb
mov
push
in
and
arpl
mov
add
fwait
add
pop
out
int
pushf
inc
fs
call
mov
push
sbb
push
je
pop
insl
lods
scas
dec
fiaddl
pop
mov
mov
cmp
sahf
es
repnz
push
cmp
adcb
notl
rorb
adc
lret
adc
dec
push
xlat
repz
ret
cld
out
sub
jmp
insl
ret
pop
lds
lcall
pop
or
ljmp
xor
mov
sarb
les
jmp
and
jmp
cmpsl
and
push
lcall
adc
mov
adc
mov
adcl
pop
xchg
outsl
orb
mov
inc
rcll
roll
rcrl
xor
pop
lret
enter
jmp
mov
cmp
popa
push
inc
sub
xchg
jmp
pop
sub
in
nop
das
pop
pop
pop
cmp
in
pop
insl
lods
loop
jg
negl
jg
jnp
push
pop
mov
sub
xor
repnz
xorl
sub
aad
or
pop
adc
pop
icebp
mov
pop
ss
mov
filds
testl
inc
jecxz
cmp
cmp
adc
js
mov
push
and
stos
inc
mov
jl
sarl
fst
shll
sub
mov
cltd
stos
stos
jmp
dec
mov
movsb
dec
pop
adc
pop
mov
mov
xor
adc
jns
lods
mov
add
cs
sti
mov
outsl
inc
shrb
movsb
jne
fwait
movsl
jnp
in
pop
pop
add
insl
and
lods
xchg
mov
push
cmp
sbb
in
inc
sub
mov
aam
mov
and
sbb
fidivrs
dec
lcall
out
aas
cmp
mov
mov
mov
sarb
aaa
test
cmp
cmc
aad
call
je
dec
push
cmpsb
lret
rcl
cmp
lds
sbb
clc
gs
rcr
mov
rclb
sti
adc
imul
adc
dec
lods
gs
loop
lods
outsb
dec
xchg
xchg
mov
cmpsb
lahf
pop
mov
into
push
mov
mov
add
movsl
lret
repz
fbstp
ljmp
or
xor
out
push
lods
fisubl
and
pop
enter
rorl
rorl
xchg
lret
shlb
aad
xchg
mov
or
cmpsb
imul
sub
call
mov
lcall
or
fscale
jo
adc
xor
xchg
in
stc
mov
inc
ficompl
loopne
pop
sbb
lds
dec
js
sub
ds
jmp
xchg
outsb
movsb
inc
mov
fcomi
pop
inc
out
or
xor
inc
or
es
ljmp
cltd
leave
cmp
pop
pushf
scas
popf
int3
outsl
pop
mov
std
sbb
mov
inc
jae
add
xchg
mov
and
dec
xchg
outsb
arpl
cs
lds
push
push
leave
mov
in
cltd
and
add
mov
fincstp
or
and
ja
mov
jae
inc
push
cmpsl
jp
push
call
sub
popa
xchg
inc
mov
pop
xchg
stos
out
pop
enter
pop
jbe
andl
jb
test
add
outsb
dec
push
xchg
add
shr
jl,pt
nop
negl
and
std
sbb
jmp
mov
iret
in
in
xchg
daa
mov
cs
sub
sbb
fldl
mov
jp
bound
dec
roll
fcmovu
mov
out
pop
xchg
mov
cwtl
in
and
sarl
and
shl
scas
pushf
cmp
rcll
jp
frstor
orb
add
add
xchg
push
hlt
cmp
sbbb
sub
xchg
pushf
outsb
das
add
nop
jl
push
lea
mov
and
dec
xor
ficoms
lret
sbb
aam
int3
dec
lcall
xor
int3
lcall
mov
jbe
cmpl
shll
mov
or
sub
enter
lahf
shr
sub
loop
pop
wrmsr
ret
add
pavgw
iret
push
addr16
adc
test
imul
icebp
inc
out
adc
js
and
fidivl
fs
jae
and
iret
pop
pop
mov
clc
sbb
aad
lds
in
shlb
test
jo
shll
out
xchg
jo
sbb
cmp
sub
ret
test
pop
int3
sub
in
add
outsb
bound
inc
push
mov
lcall
mov
and
adc
push
mov
shlb
xorb
ret
imul
jle
lds
sbb
pop
sub
popf
jne
or
xor
popf
mov
or
or
xlat
inc
data16
ss
and
ljmp
adc
mov
cmp
xorl
sbb
mov
sar
adc
and
cwtl
cltd
dec
lock
rcl
pop
sub
pusha
sti
push
outsb
int
lds
ljmp
push
repnz
and
popf
loopne
loopne
push
sbb
movsb
daa
orb
jnp
dec
adc
cmp
pop
dec
cmc
mov
and
mov
inc
int
ss
jno
out
cs
sbb
push
lods
addr16
ret
mov
adc
scas
or
xor
xchg
inc
hlt
mov
fistl
sub
jl
popa
add
mov
mov
or
decl
dec
gs
mov
xor
movsl
rcrl
mov
sbb
stos
adc
int
fwait
jae
lods
or
mov
xchg
loope
outsl
fs
jl
jp
mov
aaa
hlt
scas
loope
mov
pop
sub
and
push
cli
iret
test
jns
mov
sahf
outsl
and
or
mov
or
lds
sar
sbb
pop
dec
pop
cmp
ss
xchg
in
mov
push
aad
mov
mov
stos
into
xor
movsb
mov
mov
inc
outsb
out
adc
mov
pop
ss
pop
sub
dec
sahf
or
xchg
loope
push
lds
dec
cmpsl
cli
xchg
mov
clc
sub
aaa
push
repz
icebp
out
mov
push
dec
inc
jge
push
mov
negl
nop
sbb
inc
sub
pop
int
flds
mov
jl
cmp
in
dec
icebp
mov
dec
push
loop
lahf
fcomip
loop
gs
data16
lock
jbe
and
cs
sub
cmpsl
mov
jge
sub
xchg
mov
stos
test
aad
push
push
pop
pop
shll
dec
sbb
arpl
mov
roll
jno
xchg
nop
jecxz
and
scas
dec
incb
rcll
jecxz
int3
mov
scas
notb
movsl
cmpsl
sti
push
xor
in
bound
lcall
lea
sbb
insb
fldt
jmp
xchg
xor
push
loope
jno
cltd
adcl
adc
jne
std
mov
fistpll
ss
idivl
adc
cmp
and
std
cltd
mov
adcb
ret
gs
xchg
dec
jmp
in
movb
sbb
add
call
adc
loope
sbb
mov
push
add
push
and
mov
dec
or
popa
ja
ds
mov
mov
mov
mov
outsl
popf
fsubr
or
incb
test
or
int
xor
jbe
xor
dec
call
test
ja
sbb
mov
or
cmp
xor
mov
shlb
ja
in
pushf
mov
loope
push
jle
and
mov
mov
in
ljmp
fnstenv
inc
mov
mov
loope
lcall
cwtl
fs
mov
std
hlt
inc
cmp
xor
push
punpckhdq
aaa
test
in
rcrb
ljmp
outsb
das
cmp
jns
adcl
xchg
inc
xchg
lcall
test
push
mov
ss
imul
imul
pop
js
hlt
aas
and
pop
daa
push
sbb
imul
int
and
push
mov
std
xor
push
jnp
iret
lock
inc
push
stos
xchg
pop
pushf
movsb
loope
dec
jno
loope
jge
push
pop
fists
lock
ljmp
out
fstpt
push
sarw
or
scas
mov
hlt
sub
jl
xorb
push
xor
scas
cltd
adc
add
addr16
inc
dec
dec
and
pusha
mov
inc
mov
mov
insl
cmp
add
mov
jecxz
call
dec
jg
mov
push
push
jl
aaa
pop
push
es
imul
mov
pop
scas
into
or
dec
and
jp
pushw
pop
pushf
fbld
and
fidivrl
inc
push
and
ficompl
jg
mov
dec
scas
pop
aad
push
sbb
mov
mov
addr16
fdivl
loope
in
mov
cmp
pop
mov
cmp
dec
mov
repz
push
inc
jg
xchg
movsb
stc
adc
adc
cmc
repz
pop
adc
xor
jne
rcr
xor
xchg
xor
jmp
icebp
inc
push
enter
jno
cmp
xchg
jne
mov
dec
mov
fwait
push
jnp
fs
sahf
imul
stc
dec
and
xor
rclb
je
mov
jb
lcall
or
sbb
leave
pop
test
xchg
fdivrs
scas
push
out
pop
pop
mov
or
jp
mov
jbe
arpl
xchg
jge
arpl
scas
outsl
shufps
nop
stos
ret
jg
mov
in
daa
mov
mov
mov
ljmp
sub
xchg
jnp
out
int3
lcall
sbb
or
xor
add
leave
fdivr
shlb
pop
or
fnsave
in
aam
sbb
xchg
mov
insb
aaa
fildl
xchg
insl
inc
xchg
test
aas
sbbl
ss
repnz
fbstp
pop
cmp
in
xor
adc
add
bswap
pop
imul
sub
xchg
pop
arpl
sahf
xor
fstpt
jo
hlt
ss
lock
cwtl
sub
sub
addr16
icebp
jl
pushf
mov
popa
mov
icebp
divl
cmp
or
inc
sarl
push
js
out
and
and
cmp
xor
cmp
push
mov
push
pop
jl
rcl
mov
in
push
and
iret
negl
pop
adc
mov
scas
fldt
cmp
cltd
vxorps
inc
scas
enter
pop
sti
dec
stos
shlb
lds
stc
or
cmp
inc
dec
and
cmp
dec
not
stos
inc
clc
lcall
dec
mov
push
pushf
lock
out
fs
pop
loope
inc
fisubrl
or
sbb
test
lahf
and
mov
adc
cmp
xor
nop
mov
iret
daa
inc
inc
faddp
mov
gs
mov
dec
mov
sub
cmpsb
jl
sbb
pop
jp
inc
push
and
outsl
and
in
loope
xor
pop
outsl
stos
add
insl
sbb
mov
jge
cmp
inc
push
nop
xorl
hlt
test
dec
mov
mov
xor
add
pop
popf
mov
or
lds
pop
dec
mov
xor
push
mov
sub
js
sub
mov
gs
imul
jmp
in
mov
xchg
shl
xchg
or
xchg
cltd
shll
lds
sbb
cmpl
cmc
push
nop
or
jge
push
mov
xchg
sub
mov
push
aaa
dec
addr16
lods
in
daa
xor
out
scas
or
lods
loopne
and
jge
mov
out
insb
cmp
xor
adc
and
pop
addr16
sbb
xchg
cmpsb
std
nop
push
add
out
mov
hlt
rclb
in
xchg
pop
out
dec
in
incb
negl
stc
jg
add
nop
push
cmp
fucomi
lea
mov
jg
xchg
pop
jbe
xor
in
ljmp
negb
ret
cld
scas
loope
in
fldcw
cmpsl
imul
enter
xchg
lds
push
pop
aas
pop
sahf
mov
or
dec
mov
fsts
jae
and
popf
pop
xlat
es
push
and
mov
xor
fisttpl
dec
mov
movsl
inc
shll
js
sbb
jmp
jle
inc
movb
clc
fisubl
outsl
movsb
rcl
cmpsb
rclb
mov
push
xor
lock
dec
loopne
cmpsb
mov
and
fcomip
jns
cld
jnp
mov
jge
sub
or
cwtl
out
adc
xchg
repnz
dec
add
scas
adc
xor
popa
stc
push
outsl
lret
in
and
dec
jne
cltd
test
rorl
inc
in
add
test
inc
mov
in
dec
ljmp
mov
ret
and
test
mov
mov
inc
ret
push
test
jle
fiadds
mov
cmpsl
mov
mov
push
mov
and
inc
mov
gs
call
adc
iret
cmp
sub
cmpsb
movsb
pop
ret
cmc
xchg
sub
push
ds
mov
fs
aam
es
sbb
les
cld
stc
insl
push
loopne
sub
and
mov
lods
das
push
sub
ret
pop
mov
add
push
push
jbe
sub
sub
popa
lret
xor
adc
fdivl
dec
mov
or
sbb
hlt
jmp
or
mov
pop
adc
mov
dec
inc
sarb
in
icebp
xor
jo
push
push
fistpll
mov
lods
movsl
rcrl
push
sub
add
out
cmp
jecxz
gs
push
adc
leave
lret
mov
fdivl
mov
adc
sbb
jp
and
xchg
or
xchg
dec
xchg
rorb
mov
push
xchg
add
leave
cld
scas
fstpl
push
fldl
dec
sbb
call
mov
les
inc
xlat
test
add
sbb
fistpll
xor
lret
pop
mov
jecxz
add
call
movsb
xor
xorb
add
nop
or
cmp
xchg
xchg
mov
or
fimuls
xlat
mov
sub
ss
jno
nop
fucomip
bound
negl
nop
fisubrl
pop
clc
das
push
dec
aam
cld
dec
daa
popa
mov
outsl
xchg
mov
jno
cmpsb
or
enter
mov
and
push
sbb
and
cmp
nop
std
inc
jmp
pop
loopne
addr16
push
jecxz
aad
shlb
in
ljmp
fisubrl
shl
fimuls
mov
gs
insl
jno
adc
es
pushf
and
push
aad
and
cmpsl
stc
movsl
imul
into
repz
out
push
outsb
enter
fldt
movsb
sbbb
int3
call
inc
int3
inc
je
sub
inc
in
or
or
aaa
cwtl
dec
pop
jno
mov
lcall
test
push
sahf
mov
imul
movsl
andl
shrl
pop
bound
ljmp
jmp
mov
adc
jge
test
mov
lea
fldt
mov
divl
mov
push
bound
add
cmpsb
dec
fwait
dec
pop
or
mov
data16
jg
push
insb
mov
lods
shlb
pop
and
stos
sub
push
ret
inc
out
scas
mov
cmpsl
dec
test
decb
loope
jb
cmp
arpl
jbe
mov
lods
pop
mov
mov
mov
jg
push
popa
nop
lods
sbb
lret
das
sub
loopne
repnz
dec
add
jle
adc
inc
xor
fbld
out
inc
and
loop
mov
out
lahf
xchg
adc
insb
sub
cs
xor
bswap
mov
xor
adc
cmp
push
and
shll
pop
das
outsb
pop
pop
mov
push
idivl
insb
data16
xchg
inc
push
hlt
mov
ficompl
nop
cmpsl
jno
fimuls
jne
sbb
sahf
dec
fwait
add
sti
ret
mov
fs
adc
jp
das
ret
adc
push
jg
mov
in
or
pushf
mov
test
push
xchg
xchg
pop
and
mov
scas
inc
cmp
inc
jns
push
in
mov
fisttps
cmp
adc
out
mov
fwait
lods
mov
ds
mov
test
lret
fwait
dec
cmpsl
dec
inc
and
aam
mov
fildll
cmp
iret
repnz
fwait
pop
and
jns
lcall
ljmp
dec
lods
nop
scas
ds
sbb
fcmovnbe
leave
xor
push
xchg
and
and
cwtl
bound
adc
loop
and
sub
cmp
fwait
pop
ror
shll
add
pusha
test
pop
ret
jnp
or
push
or
jne
lea
fidivs
data16
jo
cmpsb
je
mov
pop
or
adc
scas
in
insb
inc
jg
jmp
repnz
xchg
inc
adc
daa
push
push
fldl
mov
push
dec
in
inc
aam
aam
iret
sbb
leave
ret
insl
insl
xchg
iret
cmp
push
fistps
sbb
sub
xlat
ficomps
fisubs
sbb
push
add
leave
cltd
inc
xchg
mov
mov
pop
jmp
dec
push
cmp
lock
divl
cltd
jecxz
leave
je
mov
push
pop
mov
xor
jl
add
out
lock
sbb
daa
call
lcall
xor
fsubs
xor
xor
cmp
into
or
ds
mov
mov
lds
insb
xchg
les
cld
dec
rolb
mov
das
mov
push
orb
cld
imul
cmp
push
mov
inc
cltd
mov
mov
xor
pop
push
lar
inc
jl
sbb
and
call
jmp
mov
sub
gs
sti
cwtl
mov
fimull
lcall
arpl
mov
and
mov
gs
xor
add
cmp
out
jo
sub
or
sarl
pop
pop
adc
pop
data16
mov
push
iret
jns
push
cmpsb
movsl
dec
arpl
sti
bound
mull
cmpsb
iret
push
pop
jp
in
sarb
inc
jnp
jb
fs
xor
cltd
lods
paddq
scas
add
iret
imul
jne
fimull
test
js
hlt
add
outsl
xchg
mov
roll
adc
lods
fsubrs
mov
sbb
jl
es
mov
mov
push
xchg
xchg
push
pop
popf
pop
in
adc
nop
xchg
lea
mov
pop
test
dec
out
dec
add
bound
dec
sbb
leave
cli
jo
adc
sub
outsb
clc
stos
shrl
mov
xor
mov
push
flds
negb
push
push
call
push
push
lahf
xor
arpl
je
push
out
into
ret
mov
mov
in
adc
push
mov
mov
mov
leave
cltd
sub
cli
fistps
popa
sbb
shl
sbb
jo
shl
dec
jge
out
jo
fiaddl
xchg
loopne
rcr
xchg
push
pusha
pop
int3
sbb
das
mov
loope
inc
je
shr
or
scas
adc
sbb
push
popf
dec
mov
jns
test
cmpsl
jne
push
movups
movsb
sub
mov
outsl
movsb
dec
enter
jmp
bound
cmpsl
repz
xchg
push
shl
push
fldl
sbbb
in
subl
gs
mov
dec
inc
xor
icebp
jb
mov
jecxz
stos
sbb
xchg
push
mov
push
sbb
js
mov
je
sbb
cmc
push
fimull
es
jmp
imul
fs
cli
ds
push
xchg
cmp
add
dec
jmp
stc
push
sbb
adc
mov
push
fsts
aad
ja
inc
rorb
pop
imul
lea
sysexit
les
jmp
jne
inc
pop
jo,pn
jns
jmp
mov
aad
pop
arpl
gs
shlb
pop
adc
js
insb
jg
dec
into
dec
mov
testb
data16
popa
repnz
into
pxor
jne
movsb
cmp
dec
cs
repnz
stos
add
es
jae
mov
or
int
jnp
clc
ficoml
push
mov
movsb
add
mov
lcall
inc
fnstsw
es
or
iret
xor
cmpsl
imul
hlt
imul
push
in
xor
movsl
lea
jl
inc
lock
pop
sbb
xor
test
ss
and
cmp
call
roll
mov
or
push
mov
push
in
xchg
sahf
lret
or
pop
mov
mov
pop
enter
stos
and
adc
or
rcr
lods
add
int
cmp
insb
lock
dec
out
call
cwtl
imul
push
sub
nop
jno
mov
pushf
roll
jle
push
add
ret
fs
cli
adc
mov
mov
pusha
aas
jp
mov
int
push
test
jnp
sbb
mov
test
adc
inc
inc
icebp
sbb
sub
cmp
ret
jg
lods
xchg
ljmp
push
jae
jecxz
xchg
stos
pop
adc
inc
xchg
mov
xchg
inc
test
and
add
ret
rorl
mov
jne
pushf
push
sbb
sub
out
add
adc
stos
xor
adc
jmp
add
sarb
enter
cmp
mov
lods
scas
stos
push
dec
inc
push
push
sub
out
push
imul
dec
xchg
xchg
jns
int
mov
into
das
test
xor
adc
add
push
setp
mov
outsb
inc
push
subb
pushf
xchg
mov
or
inc
test
lods
inc
add
dec
and
push
std
shll
sub
dec
inc
out
mov
inc
addr16
ljmp
and
lcall
fcomps
aas
add
mov
pop
ds
xchg
or
push
and
pop
xor
out
mov
adc
pop
and
inc
nop
xchg
inc
mov
jae
ljmp
fnstcw
jo
mov
leave
mov
jge
mov
inc
test
cmpsb
test
mov
or
xchg
je
jl
popf
repz
sub
mov
sarl
adc
loop
cmpsl
insb
xor
pusha
test
xchg
xor
ds
ds
shll
mov
bound
shlb
or
sub
jb
adc
xor
mov
mov
pop
insl
ret
pop
dec
in
add
lods
jne
out
mov
test
mov
xor
sbb
dec
sub
adc
xchg
in
test
cmp
pop
or
add
loopne
jns
add
mul
ds
pushf
or
lcall
sub
adc
add
out
lret
inc
sub
leave
adc
adc
popa
inc
cmp
dec
data16
xchg
enter
lea
push
push
jne
cmp
xorb
outsb
mov
push
gs
jp
aas
aad
cmp
pop
mov
imul
call
int3
lcall
push
cltd
insb
in
or
or
xor
adc
repnz
push
pop
ret
test
mov
std
popf
mov
rol
stos
xor
push
fnstcw
fcomp
mov
movsb
mov
fs
loope
pop
jle
shr
jmp
jnp
or
inc
loop
sub
xchg
xor
call
xchg
or
mov
imul
push
and
in
addr16
mov
fcmovbe
addl
sahf
leave
imul
cs
fld
cld
cmc
shlb
inc
cmc
test
add
xchg
push
pop
pinsrw
pop
je
out
js
push
mov
sub
lahf
push
mov
ss
push
in
scas
incl
mov
shll
mov
into
or
and
jbe
ljmp
icebp
or
notb
test
and
das
test
aas
sbb
out
xchg
aaa
mov
es
push
test
push
movl
xor
pusha
shrb
fs
in
sub
sar
and
mov
push
inc
push
push
jae
inc
stos
in
aad
xor
adc
cs
dec
orb
mov
cmp
dec
cwtl
dec
ret
pop
inc
in
or
add
das
shlb
xchg
pop
xor
inc
adc
or
gs
jle
jo
iret
aaa
xchg
les
jb
mov
adcb
insl
mov
shll
test
xor
dec
mov
gs
mov
xchg
dec
fcoms
movsl
and
stos
lock
gs
jmp
mov
lret
lds
ja
pop
and
daa
ds
test
out
sub
push
ficompl
push
xor
call
cltd
mov
inc
mov
dec
inc
ss
and
cmp
mov
shl
cmovae
nop
push
ret
out
movsb
jae
in
jb
xor
jne
inc
pop
lcall
addr16
mov
jb
and
daa
int
aaa
xchg
das
xor
mov
daa
rcrl
stos
adc
lds
cmpsl
aaa
aaa
mov
mov
dec
fbld
mov
sbb
daa
out
mov
dec
xchg
cltd
ftst
mov
pop
imul
mov
add
push
dec
jg
adcb
inc
jge
push
movsl
jmp
pop
pop
or
push
cmp
shr
js
ds
xor
inc
inc
jg
cmp
mov
into
mov
and
sub
ja
mov
dec
inc
jne
test
xchg
dec
adcl
fcoms
xor
cmp
cli
push
add
les
cmp
mov
adc
jp
and
icebp
shl
stos
mov
testb
pop
int3
cmpsl
push
inc
jecxz
push
jne
adc
popf
mov
or
jle
or
sbb
mov
hlt
and
das
insb
adc
mov
push
add
int
and
mov
stos
jmp
jmp
mov
ljmp
mov
pop
arpl
mov
int
mov
aam
daa
lods
mov
add
in
pop
lods
cmc
push
or
jne
push
mov
sub
stos
and
lcall
sub
into
loop
fwait
add
aad
lahf
pop
into
inc
lea
pop
mov
insb
test
add
ficoms
jno
dec
push
popf
mov
cmp
sti
test
movsl
inc
aad
mov
xchg
in
fistl
int3
inc
mov
xor
fimull
pop
mov
jnp
fisubrs
cmp
adc
mov
jmp
cli
or
mov
cltd
and
dec
mov
xchg
outsb
xchg
test
inc
xchg
js
test
xor
sbb
jmp
stos
mov
lahf
sarl
lock
jl
jo
ja
les
and
lds
shll
inc
sbb
adc
gs
cmp
push
mov
scas
lods
mov
repz
jo
jns
and
sbb
and
lock
xor
in
out
lods
out
mov
lret
or
pop
and
scas
xor
dec
mov
aam
aad
repnz
push
mov
ret
shlb
xlat
daa
push
mov
aas
js
test
xchg
icebp
mov
jmp
cmp
pop
xchg
loop
and
rorl
mov
mov
cmc
int3
mov
mov
fnstsw
jmpw
cltd
sub
out
mov
shlb
pop
or
mov
push
dec
mov
faddl
dec
push
xchg
clc
mov
insb
lcall
xor
push
lock
pusha
xor
dec
mov
add
dec
add
push
jno
jo
rclb
mov
xchg
loope
mov
xchg
dec
xchg
dec
test
in
adc
and
lods
push
ljmp
rcrl
aad
sti
lret
mov
xorl
push
add
or
push
stos
pop
mov
jmp
jo
pop
movsl
xor
pusha
pop
scas
fwait
imul
xchg
adc
cmp
jge
mov
sti
ja
ss
arpl
jno
jbe
rcll
mov
cmp
mov
lret
in
mulb
mov
icebp
inc
fimull
aam
sahf
add
ret
scas
aas
jle
rcrb
repz
push
movsb
xchg
push
jp
xor
arpl
imul
aam
jg
cs
loope
movsb
mov
outsl
cmp
xchg
lods
cmp
icebp
dec
pop
mov
pop
xor
pop
hlt
xchg
jo
negb
rorl
out
xchg
wrmsr
and
inc
fsubl
push
sub
negb
movsb
cmpl
sub
popa
inc
es
mov
mul
test
shll
loopne
push
inc
sub
test
insl
jge
adc
stc
dec
sbb
jp,pn
xchg
push
add
leave
fcomps
dec
pop
or
xor
jb
xlat
mov
gs
mov
push
shll
fnstsw
or
cld
adc
push
movsb
fs
xchg
dec
lods
mov
xor
mov
ret
arpl
inc
dec
mov
lods
adc
sbb
adc
test
push
mov
cmp
addr16
xchg
sbb
mov
xchg
insl
cwtl
xorl
dec
inc
lcall
pop
divl
jbe
dec
jg
mov
stc
pop
lods
test
inc
out
cli
out
arpl
cmp
add
mov
mov
pop
jae
xchg
xor
movsl
jmp
inc
cmp
mov
out
dec
lods
aam
insl
xchg
sahf
icebp
pop
les
mov
adc
add
lahf
push
imul
mov
inc
mov
or
es
xchg
lret
vpcmpeqb
xor
shlb
out
sbbl
inc
dec
cmpsl
cmp
mov
add
out
test
mov
mov
test
push
dec
sarb
sbb
jp
add
xchg
subb
push
imul
xor
adc
jno
jno
in
orb
insb
or
clc
fwait
or
mov
mov
fldenv
adc
rcll
mov
repz
rep
inc
sub
hlt
sub
mov
lods
pop
mov
adc
or
daa
je
shlb
push
xchg
stc
jae
daa
sar
mov
daa
gs
jp
imul
or
out
ret
pop
cmp
lcall
pop
push
jl
lods
bound
xlat
add
adc
jnp
scas
or
adc
cmc
popf
dec
mov
xchg
cmp
adc
add
fcmove
xorb
mov
into
cs
cmp
dec
pop
adc
jne
fldenv
mov
data16
call
push
mov
fdivrl
or
xchg
inc
pop
jmp
jg
sbb
arpl
or
aas
decl
mov
inc
push
pop
mov
xchg
push
push
cmp
cmpsb
jg
or
mov
call
pop
cmp
ret
repnz
ja
loope
repnz
test
add
shrb
test
and
lret
mov
loope
lcall
dec
repz
in
xchg
adcl
pop
and
push
dec
les
dec
xchg
les
mov
cmp
jp
mov
add
adc
xor
adc
jae
nop
inc
mov
leave
out
mov
mov
push
jp
adc
jmp
mov
test
mov
xchg
out
pop
dec
leave
rcrb
hlt
sbb
and
cs
push
xchg
jmp
cs
dec
jb
jle
xchg
popf
or
ficoml
aam
or
in
cli
pusha
or
push
jl
jae
leave
insb
pushf
sahf
test
mov
adc
jecxz
aas
lods
sti
ljmp
mov
int
pop
aas
or
sbb
cmp
mov
mov
in
cmp
or
add
gs
cmpsb
fsubs
in
mov
enter
sub
mov
jno
int3
mov
pop
dec
fimull
imulb
sub
lds
daa
dec
lret
and
hlt
xchg
inc
jae
cmpsl
lret
sub
ds
sub
jns
shl
ds
pop
inc
cli
add
into
je
xchg
int3
mov
decb
xor
pop
jbe
pop
cs
inc
push
roll
loopne
mov
shr
sub
ds
sub
xor
cmpsl
subb
shl
movsb
inc
jl
orl
rol
mov
cs
inc
add
shll
or
ret
stc
ds
xchg
test
sbb
insl
mov
sbb
cmc
adc
or
mov
adc
lds
mov
scas
add
xchg
lcall
jl
and
int3
loope
cmpsb
lea
mov
or
cmpsl
dec
insb
adc
push
movsl
push
divb
xchg
pop
mov
inc
mov
test
xlat
inc
sbb
sbb
int3
mov
pop
lods
xor
xchg
jns
mov
sub
jl
jbe
das
in
sbb
sbb
cmp
fs
push
aad
fmull
mov
dec
and
iret
mov
sbb
and
add
push
testl
mov
inc
and
pop
jbe
jg
daa
leave
pop
sub
in
lods
xchg
out
not
and
push
fwait
and
lahf
cli
scas
sbb
xor
jmp
int3
inc
xor
inc
call
imul
sub
iret
insb
sbb
mov
jns
mov
addl
push
xchg
sub
leave
arpl
add
sbb
pop
cmp
push
jle
mov
data16
lods
jo
in
addr16
ret
sbb
inc
mov
and
xchg
and
movb
outsb
cmp
in
inc
add
pop
icebp
lcall
in
les
dec
ret
std
incb
mov
inc
sub
add
adc
push
cmp
pop
adc
sub
sbb
in
mov
sub
test
dec
mov
or
cld
push
xor
pop
shrl
comiss
inc
xorl
cmp
arpl
xor
mov
dec
inc
fs
cmp
cmp
sbb
xor
or
pop
cmp
xor
ja
or
ret
fs
fldcw
jns
pop
aad
pop
inc
arpl
loop
ss
aaa
mov
out
push
outsb
popa
dec
fwait
mov
push
sbbl
push
or
mov
inc
push
movl
testb
rolb
sub
scas
les
fstl
and
fidivrs
adcb
inc
lea
lret
rcr
in
roll
pop
sbb
cmpsb
mov
std
ret
sbb
push
fisubl
bound
or
add
imul
sub
push
in
push
xlat
mov
cmpsl
xor
cwtl
cmp
sub
jb
mov
pop
push
idivl
loop
fwait
adc
jbe
lea
std
aaa
filds
int3
cmpsb
std
pop
jo
inc
push
dec
ret
mov
add
xchg
insl
lea
cmp
jg
and
mov
notl
loopne
jnp
push
dec
and
xlat
popa
mov
ja
fldenv
bound
ss
clc
movsb
mov
xchg
sub
mov
test
out
cltd
pop
rolb
cltd
lds
inc
imul
sub
mov
cltd
and
lret
dec
pop
mov
es
jmp
dec
mov
mov
sbb
sub
cmpsb
xchg
adc
test
mov
sub
cmp
js
nop
jo
dec
dec
push
loope
mov
mov
stc
into
and
ja
adc
mov
push
lret
out
push
adc
jbe
imul
and
mov
cmpsb
cld
pop
pusha
out
int
sahf
mov
clc
mov
int3
test
inc
sbbl
dec
push
mov
mov
ret
pop
ds
dec
int3
sahf
mov
movsl
repnz
mov
jo
add
movsl
adc
xor
aas
dec
jmp
dec
push
push
aaa
mov
sbb
inc
pop
lcall
or
out
dec
xchg
push
cmp
cmp
jl
inc
aaa
mov
lea
xchg
or
pushf
jecxz
call
mov
arpl
in
daa
out
mov
outsb
push
pop
or
rcrb
lret
je
pop
xlat
mov
fyl2x
pop
mov
xchg
or
adc
push
mov
hlt
bound
inc
filds
cld
sbb
mov
jge
push
cld
je
pop
aas
pop
aad
or
ret
shrb
xchg
scas
jecxz
xchg
cmpsb
mov
out
cmpsl
jle
push
adc
aam
xlat
hlt
dec
ds
pop
lock
rorl
mov
mov
jb
out
sub
bound
xchg
fisttps
stos
stos
push
dec
outsl
and
cld
dec
cmc
sbb
dec
in
and
cmp
loopne
mov
hlt
loope
addr16
push
xchg
xchg
test
imul
xchg
xor
enter
sahf
daa
ficoml
pop
push
jne
sbb
out
sbbl
orl
xchg
stos
pop
clc
mov
adc
sub
xchg
jl
sub
ds
out
mov
imul
pop
rcrl
orb
pop
out
sbb
test
mov
and
shrb
mov
push
jmp
repnz
stos
jno
mov
adc
jns
loop
lods
nop
sti
iret
movsb
mov
imul
jo
rcrb
stc
xchg
adc
pop
scas
roll
pushf
add
aam
outsb
sbb
pop
mov
pop
mov
jmp
dec
push
mov
fs
js
cmpsl
jl
add
push
mov
sti
fsubl
xor
or
imul
cmp
ljmp
andl
hlt
mov
add
into
cmpsl
jge
cmp
subl
sub
and
ss
inc
sub
das
cmp
es
ret
mov
aas
lahf
outsb
hlt
inc
inc
sti
loope
mov
jns
dec
jnp
aaa
imul
int
in
mov
and
pop
ret
jg
das
popa
jle
xor
mov
in
ss
aas
insb
lret
in
mov
addr16
outsl
or
int
cmp
fnsave
pop
xchg
dec
mov
leave
push
movsb
loopne
outsl
shrl
loope
mov
jge
mov
add
jle
and
jecxz
cmp
mov
lds
jecxz
pop
test
dec
pop
loopne
or
cli
pusha
xchg
mov
mov
jae
xchg
subb
mov
push
dec
inc
jg
and
rclb
pop
dec
add
sub
negb
nop
iret
test
test
add
loop
in
lods
inc
lret
jns
shlb
sbb
mov
lcall
fbld
inc
mov
sub
or
pop
stc
data16
js
cli
add
adc
xchg
jp
jne
xor
cmp
push
or
es
stos
out
iret
or
push
pop
rcrl
lret
push
jae
mulb
shrb
stos
mov
in
cmp
mov
ljmp
push
pop
mov
cmp
pop
mov
scas
push
xor
push
test
push
jae
in
test
test
enter
out
dec
fwait
push
pop
popf
cmpsb
cmp
inc
fistps
inc
or
dec
insl
push
sbb
cli
fnstcw
adc
fs
lods
aaa
test
fsubs
ds
std
leave
arpl
in
push
or
sbb
cmp
shl
mov
shll
sub
rorl
movsl
xchg
mov
jecxz
xchg
js
push
ret
pusha
es
ficomps
xchg
mov
call
push
push
adc
lret
mov
adc
push
or
leave
cmc
sahf
xlat
xor
je
popa
mov
inc
push
es
roll
mov
out
bound
loop
repnz
jno
mov
outsl
pop
dec
jge
xor
jecxz
mov
sub
and
sub
xchg
test
sub
adc
push
push
hlt
push
adc
sub
sub
inc
fwait
mov
inc
xchg
imulb
jnp
out
mov
jmp
inc
add
in
iret
imul
xor
mov
lret
out
jmp
dec
dec
das
dec
cld
and
mov
dec
scas
inc
jbe
loop
in
cltd
rcrl
es
cmp
and
jp
and
cmp
ret
cmp
sar
add
sub
bound
jp
inc
mov
and
adc
lahf
push
add
xchg
adc
ja
and
lods
movsl
test
dec
jl
fadd
add
push
xchg
mov
sub
pop
inc
imul
jns
mov
cmp
shlb
jle
outsb
mov
push
mov
in
push
cltd
xlat
cwtl
xchg
jo
pop
mov
dec
and
movsb
dec
rcr
sti
enter
pushf
mov
loop
aas
xchg
mov
xchg
jne
sahf
adc
inc
mov
ret
sub
xchg
jbe
xchg
outsb
es
adc
jl
out
jmp
outsl
push
movsl
inc
rol
mov
in
test
and
test
in
sbb
mov
into
jecxz
loop
in
insl
mov
lcall
fiaddl
or
test
jp
es
loopne
pop
add
imul
push
mov
out
insl
shlb
add
mov
je
push
mov
pop
mov
cltd
ljmp
int3
lods
mov
popf
and
push
cwtl
mov
lcall
outsb
imul
and
cmp
mov
in
fsts
rolb
mov
out
leave
sub
fcompl
inc
outsl
lds
xchg
hlt
nop
in
roll
or
cmp
mov
cmc
adc
dec
lods
ss
adc
mov
pop
xchg
fidivl
test
data16
stc
je
loope
cmp
cltd
pop
clc
fs
dec
ja
sub
and
or
ljmp
lahf
lds
in
aam
inc
jecxz
push
mov
lret
cmpsb
xor
insl
jecxz
mov
push
in
push
inc
sbb
xchg
adc
sbb
xor
test
mov
hlt
in
push
push
in
sub
arpl
pop
shl
je
dec
ret
push
and
popf
pop
bound
xor
pop
fdivs
dec
mov
fistps
shlb
adc
pop
add
and
adc
push
jl
js
and
das
pop
mov
roll
out
idivb
and
mov
stc
adc
pop
loopne
mov
sub
push
xor
je
lods
xor
push
mov
jo
loopne
das
das
pop
or
stos
mov
cmp
in
pop
arpl
or
mov
push
stos
jne
push
sbbb
sarl
js
xlat
in
outsl
adc
jg
pop
jb
mov
mov
jge
adc
cmp
fwait
or
push
xor
mov
inc
dec
lock
popa
sbb
sbb
into
nop
xchg
mov
mov
rcrb
mov
leave
xor
mov
mov
inc
je
repz
sub
movsl
push
jmp
push
movsbl
stos
mov
repz
inc
std
mov
jno
or
std
adc
push
int
push
test
lock
mov
data16
xchg
adc
test
push
ja
sub
lods
sti
dec
mov
lods
out
push
test
fucomip
out
lret
in
out
cmp
lock
cmpb
arpl
in
mov
fs
adc
jns
xor
mov
popa
mov
mov
pop
jne
adc
lods
popa
gs
arpl
subb
andl
lcall
or
jg
add
dec
aad
sub
add
or
insl
mov
pop
ds
cmp
cmp
inc
xchg
imul
sbb
jae
cmp
cmp
inc
push
bnd
jge
outsl
repz
lret
stc
popa
jmp
imul
xor
xor
popf
or
imul
push
dec
sbb
cmp
pop
sbb
js
xchg
mov
mov
cmp
adc
mov
or
outsl
sbb
jmp
or
rcr
push
jge
lods
gs
imul
rcll
pop
inc
fdivp
test
and
inc
inc
mov
xor
in
xchg
cli
jb
and
adc
scas
push
adc
adc
lds
mov
std
pop
push
bound
inc
mov
fmull
cmp
loop
dec
xor
fmuls
xchg
mov
testl
sbb
jo
filds
daa
mov
add
mov
sbb
lret
jl
mov
rorb
sbb
imul
outsl
addl
lods
jle
xlat
pop
jle
ret
js
dec
outsl
mov
xor
decb
js
mov
stos
jne
mov
sub
jnp
bound
movsl
jb
mov
xor
shl
mov
out
sbb
mov
pop
cmpl
lock
movsw
mov
cmp
sbb
mov
scas
repnz
xchg
and
inc
jp
mov
mov
mov
pop
std
mov
fs
push
cmp
inc
inc
fwait
test
jl
test
xlat
sub
stos
sbb
add
cltd
clc
sbb
add
pop
repnz
icebp
xchg
pushf
scas
push
push
mov
or
mov
subl
jle,pn
stc
or
mov
add
push
xchg
xor
adc
fidivrs
lods
popa
aad
mov
sub
loope
inc
pop
xchg
sbb
call
lret
in
inc
sbb
int3
cmp
inc
or
pop
sub
mov
cmp
cmp
sbb
pop
shrb
push
pop
xlat
test
jae
loope
push
mov
pop
shll
ljmp
push
push
inc
mov
ja
iret
mulb
out
or
loopne
js
jnp
lret
push
cmp
mov
dec
ja
aas
jg
hlt
lods
mov
lret
push
inc
jge
xchg
jno
daa
cmpsl
jns
clc
mov
add
jle
xor
or
call
jl
sbb
idiv
cmp
outsb
shl
lahf
pop
and
lret
sbb
mov
mov
dec
mov
dec
idivb
jle
xchg
push
inc
push
inc
pop
shll
mov
xchg
icebp
jbe
es
dec
dec
repnz
xor
aad
sbb
aad
add
dec
lea
es
andb
out
add
cld
sar
or
outsb
sbb
cmpl
repnz
daa
arpl
jl
xor
sub
sahf
cmp
dec
xchg
shl
cmpsb
mov
loop
clc
xchg
cltd
fnstenv
cs
popa
clc
sbb
stc
aad
cmc
pop
jg
push
push
push
sub
jmp
mov
mov
xlat
ret
rcll
das
inc
fcos
or
mov
xchg
xor
fdivr
fldenv
xor
test
fwait
pop
and
ljmp
sub
mov
jns
xor
pop
cmpsl
movb
xor
add
test
imul
mov
jmp
jnp
pop
insb
sahf
jo
shll
push
fbstp
inc
ds
nop
add
ljmp
loop
pushf
fimull
push
data16
dec
jne
test
xor
dec
inc
sarl
fnstsw
mov
rcrb
movsb
pop
jno
aas
movb
sub
jecxz
fistpll
stc
lds
mov
push
or
inc
jns
add
fsubl
sub
xor
push
dec
jae
mov
mov
call
lods
cmpsb
xorb
pop
xor
push
xor
ret
scas
push
fmul
out
push
fiadds
or
dec
sub
add
fs
mov
icebp
dec
mov
jo
inc
jle
leave
jbe
mov
lods
std
fwait
je
ja
ss
pusha
pop
mov
xchg
pop
and
mov
jnp
lcall
fsubl
fdivl
mov
add
dec
fisubrl
pop
data16
sbb
or
sub
aad
adc
aaa
and
sbb
xor
sub
xor
add
xor
leave
in
in
sbb
or
inc
mov
cli
jae
stc
aam
pop
mov
sahf
xchg
inc
or
push
stc
pusha
bound
and
push
mov
or
leave
and
mov
cmpsb
daa
stc
mov
pop
mov
jl
xchg
in
je
out
mov
push
pop
push
ret
fdivrs
xchg
test
loop
push
gs
sar
lods
inc
push
cwtl
movsb
inc
or
add
mov
sarb
add
std
jecxz
and
sub
rcrl
lock
inc
sbb
pop
aad
mov
sub
arpl
aam
pop
jnp
ljmp
xchg
cmp
xchg
push
pop
xlat
sub
inc
sahf
insb
mov
dec
sub
iret
mov
aam
bnd
inc
cmp
mov
repz
jnp
dec
stos
cmp
sbb
xchg
jge
lea
lea
sti
fidivs
push
mov
cltd
enter
dec
mov
pop
pop
xor
add
mov
rcrb
fsubrs
or
xchg
pop
rcll
scas
test
mov
nop
es
lcall
mov
cmp
push
fsubrl
mov
lret
and
mov
icebp
rorl
xchg
mov
fs
adc
mov
stc
int
into
jo
jmp
std
loopne
sub
scas
ja
das
push
test
repz
jmp
xchg
push
bound
add
pop
sbbb
ljmp
cli
dec
mov
pop
xorb
into
fistpll
lea
cs
fdivl
sahf
adc
add
lods
dec
arpl
lcall
jo
cld
sub
clc
repnz
sarl
mov
ror
mov
adc
cmovne
push
mov
push
jno
xchg
cmp
aas
xor
scas
pushf
push
xor
xchg
negl
pop
shll
push
cmp
jb
clc
push
sub
mov
ljmp
xchg
je
test
dec
push
mov
dec
push
imul
addr16
xor
push
jbe
hlt
lods
cmp
hlt
mov
jne
es
repnz
mov
int
fldl
call
cmp
ss
shlb
jb
dec
and
aad
mov
dec
mov
loope
jmp
pop
jo
insl
data16
and
push
fwait
clc
clc
hlt
pop
daa
std
cmp
add
jecxz
and
xchg
dec
or
dec
push
lcall
stos
roll
sbb
mov
jnp
jo
xor
adc
fadd
movsl
mov
addr16
out
addb
add
outsl
pop
jae
push
push
loop
std
inc
pop
pop
popa
mov
test
xchg
adcb
add
sbb
xchg
cmp
mov
xchg
add
ret
out
jo
inc
sbb
or
lahf
popf
xor
lea
test
rcll
cmp
jnp
sub
sub
cmp
mov
hlt
or
rcrb
push
xlat
mov
add
and
pop
sbb
cs
pop
and
cmp
and
and
ficoml
push
mov
jo
cltd
mov
adc
outsl
icebp
mov
xchg
repnz
dec
pop
aam
pop
push
pop
inc
pop
out
and
pop
lret
mov
bnd
mov
fldl
pushf
shll
cmpsb
push
dec
pop
xor
js
pop
sbb
pop
push
add
lahf
jnp
std
andl
pmullw
outsb
push
push
out
int3
sub
data16
cmp
cmp
add
js
and
push
and
lds
jo
fs
mov
stc
inc
jle
inc
add
lea
cmpsb
cmp
push
mov
gs
hlt
xchg
adc
dec
cwtl
insl
mov
je
xor
jp
sub
cmp
or
pop
pop
negb
popa
or
and
xchg
sub
cs
cmp
push
fucomp
push
mov
inc
mov
push
xchg
xor
and
push
imul
fwait
cmp
clc
push
fs
nop
adc
sbb
adc
mov
push
arpl
xor
repz
push
bound
xchg
xor
mov
push
sbb
bound
pop
push
sub
jg
shl
mov
sti
mov
ret
push
sub
aaa
ljmp
mov
adc
stos
imul
mov
popa
mov
hlt
mov
sbb
adcb
flds
mov
push
inc
dec
iret
cmp
lret
pop
mov
je
cmp
pusha
js
mov
xor
repz
test
cwtl
lods
and
dec
sub
es
dec
ljmp
and
test
sbb
hlt
insl
out
adc
roll
mov
and
sbb
jge
jge
lods
movsl
xchg
imul
inc
sub
data16
and
pushl
mov
push
and
dec
jb
cmpsb
mov
xchg
ss
add
xor
int
push
das
and
cltd
push
sub
iret
add
jo
jge
sub
leave
ljmp
push
push
scas
pop
ret
ss
fadd
jle
aad
xor
jmp
xor
mov
cmp
adcb
fcmovne
push
dec
aaa
loopne
push
mov
int3
call
fwait
enter
sbb
sti
inc
test
mov
fstp
popa
arpl
aas
mov
imul
lea
cld
js
xchg
or
stos
dec
sbb
cmp
sub
std
sub
fcoml
push
push
aaa
sahf
jg
xor
sbb
and
xchg
js
inc
jb
lods
mov
clc
je
adc
fsubrs
inc
daa
push
lock
add
ja
movsl
aaa
xor
xor
test
outsb
xor
push
pop
pop
mov
dec
or
int
jo
rcrb
shlb
aam
adc
inc
sub
adc
gs
test
mov
mov
adc
jle
scas
test
xchg
jae
ret
insb
push
cmp
push
scas
sub
je
or
lret
sub
lds
bound
inc
sbb
scas
and
int3
insl
in
or
repnz
lods
mov
add
ds
lock
imul
pop
inc
out
xor
jp
or
push
pop
push
jns
adc
xor
mov
sub
mov
movsb
jae
sbb
xor
or
mov
lahf
jns
fcoml
xor
mov
push
jge
inc
xor
adc
jbe
xlat
ret
mov
cltd
fldcw
xor
movsl
movsl
adcb
mov
pop
loop
pop
cmpl
fildll
imul
clc
out
lock
pop
out
mov
cld
sub
push
mov
cmpb
add
inc
mov
mov
xor
repnz
add
test
popf
mov
mov
mov
dec
daa
popa
add
jp
sahf
add
test
dec
dec
call
out
sub
xlat
daa
xchg
adcb
mov
mov
popl
inc
cmp
fwait
test
loope
cmp
mov
test
cmp
cli
cltd
jae
repz
adc
xor
inc
outsl
inc
pop
pop
out
or
cmpxchg
inc
add
xor
das
sbb
cmp
xor
aad
data16
aaa
sub
xchg
icebp
dec
jge
les
mov
es
out
pop
jmp
pop
inc
les
lds
xchg
add
inc
nop
xchg
sahf
mov
adc
lcall
xor
or
imul
xchg
pop
sbb
es
pusha
or
outsb
xchg
sarb
or
add
scas
inc
inc
xlat
aaa
cmc
lods
inc
lds
dec
mov
or
pushf
pop
into
es
movsl
mov
dec
pop
mov
das
stos
shll
addr16
leave
inc
sbb
sub
xor
dec
xor
scas
gs
push
adc
cmp
loop
and
inc
xlat
repz
mov
cmp
in
into
add
mov
ljmp
sti
jl
sub
and
in
push
pop
sarb
idivb
icebp
adc
pop
insl
rcr
xchg
sbb
xchg
sbb
jp
pusha
and
outsl
std
push
ret
add
lock
push
mov
add
push
add
sub
push
jae
stc
mov
xorl
mov
cmpsl
pop
mov
mov
mov
sub
outsb
pop
loope
shll
filds
add
cmp
fwait
push
fimuls
dec
hlt
dec
xor
std
inc
cmp
pop
mov
inc
dec
outsl
cwtl
fstps
xor
das
dec
pop
sub
jge
lock
int3
popf
and
lahf
sbb
aaa
cld
mov
imul
repnz
test
daa
mov
jp
and
test
loopne
hlt
sbbl
lcall
jle
push
inc
das
std
scas
stos
jb
mov
je
rcrb
shll
lock
and
rorl
cmc
inc
mov
xchg
sbb
add
mov
cmpb
dec
js
fistpll
das
psubusw
fdivl
cmc
xlat
xchg
mov
xor
adc
sub
out
push
andl
ds
mov
bound
repz
ss
xor
mov
dec
mov
ret
push
ss
sub
dec
push
addr16
xchg
pop
loope
adcl
lock
pop
addb
jl
sbb
or
jns
ret
movsl
fistl
pop
out
loopne
sub
push
cmpsb
xchg
call
xorl
imul
in
lret
push
add
sarb
add
xchg
adc
popa
cs
dec
push
mov
mov
pop
not
mov
push
adc
mov
pop
jle
xor
mov
inc
cmp
in
rcrl
sbb
sbb
mov
loope
xchg
push
rol
in
sbb
mov
jne
add
and
inc
in
and
xor
stos
xor
icebp
imul
mov
and
push
ja
mov
push
jnp
fs
fisubrs
aas
xlat
mov
mov
pop
push
xor
daa
push
fistpl
mov
jae
lock
inc
pop
xor
stos
rolb
hlt
pop
pop
dec
mov
rorb
dec
sbb
mov
mov
mov
cmpsb
dec
hlt
iret
xor
les
lret
fimuls
xchg
imul
rolb
cmp
sbb
std
mov
mov
sub
xchg
xor
xchg
clc
jp
jmp
out
mov
call
mov
fisubrl
adc
je
lret
mov
int3
push
sub
mov
cmp
dec
in
cmpsl
xchg
mov
test
xchg
push
pmulhuw
mov
mov
jno
sub
std
cltd
pushf
mov
mov
push
push
cld
cmpsb
adc
mov
pop
xchg
jnp
popf
and
inc
jp
movsb
fdivs
jae
mov
jmp
mov
jo
loopne
sbbl
xchg
adc
in
lea
mov
mov
insb
repnz
out
adc
dec
je
jno
jl
xchg
mov
mov
jo
dec
ja
stos
dec
cmp
ret
push
mov
daa
cltd
aam
push
adc
adc
cmpsb
sti
or
mov
jnp
xor
push
fprem
lods
fnstsw
js
mull
push
ds
fcoml
inc
push
test
jmp
imul
scas
inc
fcmovbe
jl
jmp
or
jle
jne
adc
test
pop
ds
push
movsl
arpl
sub
add
lret
jp
or
stc
sbb
fwait
jne
iret
lret
add
lret
imul
fsubs
das
xor
dec
mov
jnp
aaa
pop
adc
sub
test
fwait
pop
test
nop
jge
xor
pop
pop
leave
mov
push
mov
sub
xchg
int
divb
add
ljmp
cmp
mov
mov
ljmp
push
out
mov
adc
popa
and
sub
jge
repnz
call
push
mov
in
in
icebp
fnstcw
pop
pop
dec
inc
gs
fldt
add
fwait
jns
int
popa
xor
add
jge
in
test
fs
js
clc
mov
xchg
sbb
mov
xchg
lea
push
ds
arpl
popa
stos
pop
movsb
adc
push
ds
pusha
push
mov
in
sub
jae
mov
test
inc
cmp
std
sub
jns
cmp
jo
mov
dec
stc
fwait
pushf
pop
xor
subl
push
lods
clc
jecxz
sub
scas
jbe
mov
push
jp
imul
cmpsb
or
dec
inc
add
cmpsb
hlt
or
adc
or
push
fs
data16
or
sub
jo
es
add
int
add
xor
mov
notrack
bsr
stc
or
pop
inc
mov
outsl
rorl
sbb
movsl
mov
xchg
fstpl
and
shll
xor
loopne
insb
sub
into
ds
ds
push
mov
aas
sahf
jbe
cmp
shrb
mov
pop
leave
mov
ret
add
aam
fildl
or
les
arpl
cmp
sti
psraw
sub
insb
je
jge
push
out
pushf
dec
fmull
jl
scas
jp
adc
push
dec
call
fsubrl
adc
test
inc
dec
in
subb
jge
mov
add
or
aas
xchg
jns
add
repnz
xor
dec
or
xchg
and
arpl
jb
push
fs
scas
sahf
inc
dec
xorb
aas
in
and
faddl
mov
cmp
cmp
test
das
mov
inc
enter
ja
xchg
es
je
cmc
fcoms
cbtw
in
dec
push
in
sbb
push
mov
pop
jmp
jne,pn
rcrl
xor
jae
fisttpl
cmpsb
push
or
jp
fimull
mov
mov
inc
cmpsl
push
adc
pop
fwait
bound
pushl
adc
add
sub
mov
ja
jl
sbb
dec
push
pop
and
mov
adc
test
jno
xchg
xchg
jo
sub
into
fstl
bound
jle
push
es
lcall
pshufw
cmpsl
nop
pop
mov
mov
popa
les
mov
clc
sbb
inc
mov
movsl
lret
sbb
and
dec
pop
movsl
sbb
lahf
jne
push
push
outsl
stc
mov
in
sahf
or
pop
sub
je
fisubl
data16
xor
gs
dec
cmp
test
mov
add
lahf
pop
add
pop
push
jno
dec
mov
jmp
mov
imul
adc
xchg
jge
or
leave
jne
mov
mov
xorb
add
fsubl
xchg
enter
or
or
mov
fdivrs
and
inc
repnz
mov
xor
sub
insl
xchg
adc
test
mov
ds
in
add
lahf
jnp
mov
cs
inc
jbe
inc
cmp
repz
insb
cli
sbb
inc
shll
inc
sar
in
bound
mov
xchg
fucomi
rolb
roll
mov
or
fbld
mov
test
je
adc
sbb
loopne
add
push
dec
cmc
pop
pushf
mov
ret
clc
or
data16
cmp
icebp
jb
pop
fistpl
adc
inc
jb
in
mov
in
stos
and
andb
sbb
arpl
dec
outsl
es
shl
loopne
xchg
xchg
dec
lret
cmp
mull
inc
mov
xor
mov
cli
push
in
hlt
lods
mov
clc
jle
jbe
scas
aas
adc
push
pop
lret
push
shlb
sbbl
mov
sbb
adc
sarb
loope
into
ja
in
test
adc
xor
mov
xor
ret
arpl
stos
mov
cmc
xchg
sbb
add
popa
in
mov
shlb
movsb
je
adc
mov
cs
mov
mov
mulb
or
jge
fwait
lods
jno
jo
lock
loop
jbe
loop
cmp
push
out
insl
sub
iret
mulb
lea
lcall
add
inc
pop
fcom
insb
mov
addl
scas
add
arpl
sbb
dec
mov
cmp
pushl
aam
inc
rcr
xchg
call
bound
push
inc
stc
out
scas
mov
inc
into
stos
and
sahf
and
and
dec
xorb
rolb
mov
imul
or
sub
mov
shll
xchg
inc
cmpsl
stc
jno
or
dec
xchg
mov
mov
icebp
sub
sub
cmpsb
cmp
push
hlt
sub
aad
loopne
or
lret
mov
jl
scas
stos
and
sbb
rcl
out
xor
cld
sbb
cmp
notb
adc
ret
movb
sbb
andb
fisttpll
lret
push
sbb
shll
movsb
cli
pop
jb
push
dec
mov
cld
xor
hlt
lea
cmpsb
pop
and
or
sahf
stc
jo
jg
xor
maxps
out
pop
xchg
and
mov
jb
push
iret
or
mov
aaa
pusha
push
cmp
pop
es
cmp
imul
test
lds
aam
mov
xor
sbb
stc
mov
cld
pop
mov
sti
inc
movsb
js
scas
cmp
inc
movsl
fstl
adc
or
shll
decl
sub
inc
and
ret
hlt
leave
pop
and
push
xchg
in
mov
sub
mov
fs
mov
test
lods
es
out
dec
sarb
inc
jle
adc
mov
inc
shlb
in
imul
popa
jno
and
xor
nop
movl
loopne
inc
pop
mov
addr16
or
push
out
cld
add
jne
cmp
lods
ja
cld
hlt
insb
test
js
loope
cmp
scas
aad
sub
mov
repnz
rcrb
add
push
xor
cli
hlt
mov
stc
mov
sbb
cld
lahf
mov
mov
push
in
sub
in
jle
imull
mulb
mov
jle
sub
sbb
nop
cmp
nop
pop
mov
jp
and
in
cs
setno
xchg
push
mov
imul
add
movsb
push
andb
push
dec
dec
psrlq
loopne
push
pop
addr16
jmp
add
adc
push
adc
mov
push
mov
cmp
enter
and
inc
mov
out
cwtl
xchg
cmpl
aaa
mov
fsubrs
imul
divl
dec
sbb
and
in
xchg
mov
rcrb
push
mov
imul
cmp
nop
jecxz
xchg
sub
add
xor
pop
test
dec
addr16
rcll
cmp
or
cltd
mov
or
int
pop
xor
out
mov
outsb
ss
aam
lcall
jne,pt
mov
inc
add
mov
xor
adc
scas
xchg
cmc
dec
jle
push
xor
es
jmp
aad
jo
stc
lret
push
adc
add
pop
es
xor
scas
pop
int3
jge
shrl
mov
add
mov
sbb
mov
lahf
pusha
sub
push
jp
inc
mov
jno
popf
into
mov
enter
xor
mul
aaa
mov
mov
sbb
fcompl
outsl
cltd
and
iret
aam
xchg
lock
pop
jecxz
xor
pop
pop
or
jl
lock
mov
add
xchg
and
daa
inc
jmp
lock
or
adcl
dec
sahf
shll
inc
mov
cs
and
pop
shll
mov
pop
jnp
mov
test
inc
rcr
fs
or
and
push
mov
lret
fisubrs
filds
cmpsb
sarb
scas
adc
inc
lock
and
movsb
cmpsl
arpl
adc
and
cli
fnstsw
lods
shrl
mov
movq
pop
xchg
xor
inc
jle
mov
push
pop
push
xchg
inc
fidivrs
test
pop
fcmovne
jg
or
adc
lcall
fimull
repz
jae
pop
inc
call
popa
push
xchg
sub
pop
out
mov
fdivrl
cmp
xchg
dec
jmp
or
cmp
inc
mov
xchg
fcoml
push
xchg
mov
repz
mov
mov
and
out
mov
data16
pop
scas
inc
cld
add
dec
pop
icebp
and
and
imul
or
int3
ret
notl
test
inc
aad
mov
test
stos
pusha
jp
fdivs
out
or
std
movsb
sti
push
insb
dec
aaa
dec
cmp
int
jne
cmc
call
cmp
sub
fisttpl
push
dec
loop
cli
and
fisubrl
pop
into
mov
mov
into
fsts
mov
mov
leave
lcall
or
pushl
dec
sbb
dec
daa
aam
notb
movsb
add
les
sub
loope
cli
lods
addr16
fcompl
push
mov
les
adc
inc
dec
stc
out
test
adc
movsl
ljmp
mov
mov
rorl
outsl
lahf
test
push
add
lock
or
jmp
mov
jp
lods
cmp
cmp
lds
fmull
mov
mov
xchg
and
cmova
movsl
add
cmp
cmpl
and
popf
mov
xchg
jno
cmpsl
jl
fistps
jp
or
add
addr16
xchg
negb
test
into
je
mov
mov
lds
xor
jno
sets
push
or
aam
mov
lcall
xchg
lods
enter
loopne
xor
pop
mov
imul
sub
fcoms
rcrl
cmpsb
out
add
fcmovb
leave
cmpsb
sbb
test
call
push
jns
and
mov
xchg
mov
clc
xchg
or
shl
and
shlb
jo
rcrb
xchg
aam
jl
push
sbb
push
aas
jnp
mov
dec
popa
mov
sub
mov
std
cmpsl
or
imul
test
sub
xchg
aaa
imul
scas
pop
fsubl
push
push
out
xchg
fs
lods
ret
fmul
and
fdivrl
or
bound
inc
cmp
jge
scas
pop
nop
and
sub
shrb
test
mov
and
cmp
leave
dec
stos
shll
in
xor
int3
addb
xor
rolb
push
or
fimuls
nop
ds
adc
pop
push
loop
lds
jae
or
cmpsl
cmp
popa
mov
or
loopne
jne
mov
xchg
inc
outsb
cmpsb
hlt
fsts
xor
addr16
xchg
adc
pop
xchg
inc
call
jg
and
cli
test
xchg
pop
inc
and
adc
lcall
mov
idivl
nop
push
lock
dec
sbb
add
movups
div
leave
mov
xchg
daa
pop
stos
inc
or
cmpsl
and
adc
adc
xchg
sub
mov
inc
jecxz
mov
and
nop
movsl
sahf
sarl
xchg
and
filds
mov
push
pop
jnp
shlb
arpl
dec
pop
xor
pop
inc
ss
sub
es
pop
inc
sbb
or
or
call
add
cmp
hlt
cli
push
test
das
popa
push
push
add
inc
xchg
in
push
mov
and
push
adc
arpl
ljmp
adc
jno
push
into
sub
js
stos
sbb
and
xor
sti
mov
push
push
fstp
rcrl
fisubrl
mov
int3
lea
stos
ret
jecxz
jno
ds
push
imul
repz
cltd
js
jmp
pushf
adc
mov
movsl
lahf
cli
and
shrb
or
sbb
mov
out
lea
jnp
roll
sbb
repz
pop
mov
sbb
sbb
inc
fwait
stos
ret
and
mov
cmpsl
sbb
adc
lods
add
push
decl
xchg
jae
test
es
test
pop
int3
shlb
jb
cs
les
je
push
lahf
pushl
rclb
xor
mov
push
or
jae
mov
mov
movsl
mov
mov
es
imulb
mov
incb
test
jl
xor
inc
push
mov
and
insl
mov
not
pop
mov
insb
movsb
ss
inc
popf
cltd
pop
adc
and
sti
mov
adc
imul
xchg
gs
mov
pop
inc
fwait
xlat
push
mov
cmp
fisubrl
nop
push
adc
and
xchg
movsl
repz
mov
push
xor
lcall
cmpsl
cmpsb
push
jb
bound
fstps
lcall
int3
cmp
mov
shll
movb
cltd
mov
mov
push
jno
add
jb
loop
and
and
push
adc
sbb
dec
lcall
sub
push
push
sub
mov
dec
test
sub
cmpsb
mov
divb
add
mov
movb
lahf
add
in
pop
jbe
inc
mov
push
popa
pop
dec
mov
and
stos
mov
popa
or
daa
call
lcall
pop
xchg
dec
scas
popf
mov
xlat
gs
mov
scas
add
lds
aaa
add
sbb
inc
jg
add
add
adc
movsl
xor
insl
pop
fwait
jns
test
dec
fsubl
outsl
dec
push
push
pop
ret
mov
insl
and
or
inc
into
test
push
outsl
sahf
test
pop
daa
sti
aam
loop
sti
lcall
inc
nop
sub
mov
mov
gs
daa
pop
das
aaa
dec
dec
cmp
stos
xor
btc
aam
add
or
lcall
jo
stc
shlb
adc
mov
push
push
daa
std
xlat
mov
xchg
cmp
push
aad
aam
dec
or
daa
icebp
je
sbb
xchg
out
pop
jl
jmp
ds
test
push
insl
sarb
jecxz
in
and
sub
movsl
gs
xchg
cmp
fidivrs
mov
es
add
jp
pushf
lret
and
push
js
out
pop
ljmp
shrb
mov
jae
dec
inc
lods
push
sbb
in
andb
jae
cli
cmp
repnz
outsb
or
out
fcoml
insb
loop
cmp
repz
pop
pop
sub
mov
dec
jg
and
inc
out
stos
adc
mov
int3
outsl
lret
xor
sbb
sub
and
enter
fimuls
dec
data16
loopne
push
sbb
shl
fwait
mov
arpl
gs
pop
pop
sti
outsl
mov
mov
add
push
mov
adc
out
jb
inc
jl
and
and
pop
dec
pop
mov
xchg
aaa
adc
fsubrl
mov
jns
add
das
mov
cmp
jmp
cs
add
xor
push
insl
mov
mov
arpl
lods
ds
inc
xchg
xorb
lods
sub
addr16
dec
aad
jmp
and
iret
or
clc
add
popa
jno
cld
ss
add
pop
ret
and
addr16
xor
inc
xchg
and
add
in
fs
int3
xchg
lcall
cld
or
and
mov
pop
adc
sbb
sbb
leave
mov
adc
imul
and
lahf
pop
mov
inc
fwait
scas
mov
push
push
stos
mov
xchg
jge
aam
pcmpeqd
jae
dec
inc
pop
xchg
mov
jmp
inc
mov
jp
dec
jl
cmc
inc
push
in
add
loop
sub
aaa
fxch
jb
shll
jo
jb
daa
xchg
cmp
out
into
push
test
ljmp
xor
push
adc
pushl
add
data16
nop
pushf
in
cmp
inc
call
push
out
inc
les
adc
mov
clc
mov
jno
rclb
jecxz
pop
inc
jnp
sbb
icebp
shr
xor
or
and
repz
test
push
push
popf
push
sbb
ja
or
fistpl
mov
adc
les
push
pusha
sub
xor
mov
mov
mov
insl
fdivrl
cmp
jecxz
repz
dec
sbb
push
jecxz
lds
std
js
in
imul
inc
sub
sub
adc
in
xor
ret
mov
cmp
rcl
cmp
xor
enter
push
mov
outsl
lret
ss
loopne
outsl
test
popa
sbb
sbb
dec
mov
ret
sbb
ss
cmp
xchg
ss
orl
push
or
adc
mov
nop
dec
lea
inc
fstl
mov
and
add
and
xchg
test
pushf
ss
inc
int
sahf
xchg
popf
sbb
leave
adc
push
inc
adc
lds
push
ja
loope
xchg
adc
call
out
or
sbb
movsl
push
aaa
mov
sub
sbb
jle
cltd
stos
mov
mov
jp
imul
xlat
test
mov
aas
in
lret
enter
cmp
mov
xchg
add
mov
lcall
ds
cmp
sub
rclb
test
repnz
pop
inc
adc
sub
dec
inc
lcall
test
dec
pop
jne
or
or
ficomps
stos
xor
sti
cmpsl
dec
mov
mov
cmp
cmp
dec
inc
rolb
inc
les
rclb
dec
dec
add
push
jmp
jbe
ja
and
jnp
cld
sbb
std
mov
popa
dec
pop
stc
in
and
sarb
mov
xor
gs
mov
and
jmp
xchg
sub
ljmp
xor
add
add
ljmp
lock
mov
in
or
scas
sub
lahf
inc
cs
push
stc
mov
fldl
xchg
jge
push
dec
sub
push
sar
dec
xor
int
lds
add
adc
stos
or
mov
stos
push
daa
sbb
dec
or
gs
test
lcall
sarb
mov
fmul
cmp
enter
and
cmp
mov
fs
bound
std
cld
mov
rclb
ja
xor
fistl
jnp
rorl
mov
push
adc
sbb
lea
mov
testl
pusha
insl
xor
jno
sub
scas
pop
popf
ds
pusha
xchg
popa
pop
cmp
mov
addl
repnz
ss
cmc
scas
mov
das
lcall
fidivl
and
jl
stc
inc
add
int3
add
pop
sub
adc
jecxz
jg
pop
adc
jecxz
cmpb
cmp
lea
sbb
jno
xchg
cltd
int3
ret
mov
mov
cmc
sbb
subb
sti
clc
dec
cmp
pusha
cltd
sahf
loopne
out
pop
adc
hlt
mov
mov
push
jmp
int3
adc
sub
pop
adc
test
lods
cli
inc
iret
mov
stos
out
push
cmc
out
pop
daa
xchg
test
insl
xlat
into
jae
push
movsl
std
xor
int
outsl
addb
push
fsubrs
and
xchg
jecxz
icebp
add
movsl
pusha
outsl
test
add
and
xor
mov
xlat
pop
subb
xchg
out
dec
mov
das
ficoml
lret
adc
sarb
pop
dec
imul
into
in
imul
enter
rep
mov
mov
sub
std
xor
cmp
mulb
jb
inc
xchg
subb
xor
stc
pop
dec
ficoml
adc
bound
cmp
sub
stos
movsb
pusha
movb
or
xchg
jp
xchg
leave
lock
fildl
and
pop
xchg
dec
adcl
or
mov
shl
mov
and
addl
sbb
or
dec
mov
fistpl
iret
and
faddl
ret
add
jbe
dec
shlb
out
fisubrl
push
std
icebp
inc
mov
mov
lods
rcll
cmp
lahf
lahf
jp
sahf
bsf
shr
ds
sarb
scas
push
fcmovnu
stc
mov
rol
push
sbb
push
cld
leave
add
arpl
jle
out
out
leave
fdivr
inc
inc
xlat
lea
daa
mov
dec
in
scas
sahf
clc
shlb
mov
mov
xor
rolb
cmp
shlb
jnp
mov
or
and
das
pusha
push
mov
fadd
stos
add
clc
bound
mov
xchg
push
dec
vfrczpd
cmpb
jno
cmpsb
mov
jb
std
popa
inc
subb
inc
js
inc
adc
pop
mov
xchg
shll
lods
or
mov
add
in
mov
data16
repz
jge
cmp
int
movsl
mov
scas
in
cmpsb
mov
mov
mov
nop
push
leave
add
add
es
shll
add
adc
daa
adcl
push
sbb
push
fpatan
push
and
pop
test
aam
push
push
push
fucom
pop
aas
push
push
popf
rorb
int3
jnp
repnz
jns
add
add
lcall
cmp
sub
adc
jp
orb
mov
jecxz
or
dec
mul
pushf
stos
push
xchg
lods
imul
outsb
adc
sbb
inc
mov
jne
imul
icebp
sbb
cwtl
add
dec
stos
mov
mov
jecxz
cmc
jmp
sti
pop
ljmp
movsb
aad
sahf
pop
adc
and
outsb
xchg
cld
jmp
mov
or
loope
cwtl
insl
inc
std
fldl
push
imul
es
pop
nop
outsl
sub
jecxz
nop
push
dec
mov
cwtl
js
ja
dec
xchg
fsubrl
add
sub
mov
data16
pop
movsl
and
and
cmc
mov
mov
shlb
test
sbb
sub
stos
lret
push
fsubrl
inc
popf
loopne
in
push
lret
push
cli
adc
jno
scas
pop
jge
push
in
mov
sbb
subl
mov
mov
les
fsubrl
sub
and
sub
inc
inc
cmp
xchg
arpl
pop
aad
mov
inc
lea
mov
dec
dec
mov
push
xor
pop
add
mov
pop
mov
lret
enter
mov
inc
sbb
pushf
xor
cmp
or
shll
icebp
je
mov
cmp
ljmp
push
loop
or
aas
fdivl
xchg
mov
aaa
push
pop
sub
fdivl
hlt
cmpsb
dec
dec
out
mov
lcall
jp
movsb
mov
pushf
adc
jb
jne
leave
sbb
ret
adc
inc
or
je
lds
inc
test
outsl
mov
xor
xor
or
jecxz
cmp
jns
xchg
inc
ret
push
and
jnp
adc
push
xchg
jge
sbb
cmp
xchg
sbb
cli
add
out
ljmp
pop
cwtl
push
dec
mov
out
in
ret
roll
inc
fimuls
mov
mov
out
in
mov
adc
outsl
push
push
mov
lahf
pop
fdivs
inc
jmp
mov
push
add
out
dec
fwait
lahf
add
mov
inc
adcl
divb
sub
inc
push
lods
mov
add
movsl
stos
aad
dec
dec
icebp
xchg
outsb
outsb
js
jl
sub
pop
sarl
jecxz
out
inc
dec
aas
cmp
add
xchg
enter
jle
xor
loopne
cs
jmp
icebp
in
push
cltd
aad
and
jae
test
sahf
push
jns,pt
fnstenv
rcll
or
mov
adcl
lcall
inc
pop
xchg
pop
and
ljmp
stos
sub
movsl
dec
push
push
push
pop
mov
jbe
mov
aam
push
cld
movsl
ret
cmp
ret
ud0
jnp
ss
fxam
mov
cmc
dec
lsl
or
pop
and
mov
push
not
add
test
bound
push
rclb
lret
mov
inc
mov
mov
idivl
mov
lcall
mov
mov
jg
fs
inc
cmpl
aad
or
stos
adc
mov
mov
test
mov
cld
ret
bound
adc
popf
and
or
xor
enter
inc
and
cmp
mov
aad
sahf
push
add
ds
ficomps
shlb
pop
or
or
ss
pop
sti
adc
add
enter
scas
cmp
adc
pop
cmp
stos
mov
dec
pop
jp
sbb
test
push
hlt
push
inc
adc
insl
scas
xchg
insl
push
addr16
icebp
ret
mov
popa
xchg
movsb
or
testb
or
sub
cltd
ljmp
outsb
arpl
cmpsl
fs
test
imulb
arpl
add
push
in
dec
scas
push
ret
mov
lret
pop
adc
cmp
das
fildll
mov
fmuls
xchg
pop
sub
jecxz
xor
xchg
sub
jb
adc
jo
nop
in
insb
lahf
mov
add
and
lds
cmpsb
sbb
decl
ror
sub
fcomi
das
enter
pop
ret
jle
fld
je
lret
outsl
test
sarl
cmp
xor
xchg
jecxz
orl
push
or
es
imul
lahf
or
add
cmpsl
push
push
rolb
push
sub
pop
lods
jmp
mov
or
idivb
xor
pop
mov
mov
pushf
stos
ss
inc
jnp
mov
xchg
in
and
xor
pushf
sbb
int
mov
push
sahf
lahf
mov
and
dec
push
push
imul
xchg
mov
mov
cmp
jne
out
test
push
es
sub
pop
ss
inc
pop
jne
mov
outsb
sbb
pop
jo
fs
jmp
hlt
or
or
sbb
jle
cli
lds
mov
pop
xor
mov
cmp
hlt
ds
repz
mov
adc
outsb
pop
push
js
push
lods
cmpsl
mov
xchg
stos
xchg
jl
stc
or
pop
xchg
jbe
stos
push
cmc
fimull
mov
xchg
jmp
pop
out
shll
fdivrs
imul
jns
cmc
add
add
mov
sbb
std
iret
jb
addl
jecxz
arpl
sbb
popa
inc
jmp
call
ss
cmp
mov
lods
cs
push
pop
adc
lret
fcmovu
sub
push
inc
mov
loopne
mov
or
mov
add
aam
std
mov
or
imul
outsl
xor
and
sarl
push
cmp
int
cli
je
cmp
pop
loop
in
imul
clc
mov
stos
xchg
xchg
shrb
in
mov
stos
mov
daa
cltd
jecxz
mov
xchg
cmp
pop
sti
mov
mov
les
sub
push
shrb
nop
fcomip
test
or
cld
inc
pop
and
sbb
iret
xchg
lret
test
jle
xlat
jb
mul
das
jo
popf
imul
or
scas
sahf
ret
sahf
jp
push
arpl
repnz
dec
in
jmp
dec
in
je
lahf
mov
arpl
outsl
cmp
xchg
out
cmp
dec
out
dec
arpl
or
pushf
mov
inc
jno
loop
and
in
pop
fcoms
sub
std
repnz
mov
shll
outsb
dec
out
daa
add
imul
mov
dec
lods
mov
scas
int3
repz
jno
add
cld
mov
inc
nop
cmpsb
pop
push
shll
into
stos
sbb
imul
cmp
test
in
or
pop
or
fstl
or
push
sbb
fldcw
jb
push
inc
test
sbb
xor
stos
adc
xor
js
mov
mov
inc
in
sub
leave
add
std
dec
ret
sub
imul
dec
in
jo
std
mov
das
mov
push
lock
cmp
cmpsl
pop
ss
cmp
push
enter
lods
stos
test
pop
jnp
nop
inc
notl
imul
aad
out
fwait
lahf
mov
pop
jp
mov
sahf
adc
cmp
mov
test
fmul
mov
xlat
je
cmp
out
sub
or
adc
popa
pop
xor
cmp
add
popf
int3
add
cmp
xchg
sbb
mov
mov
adc
test
sbb
mov
sub
enter
jns
imull
in
fdivs
out
mov
je
fcomip
push
fistpl
js
mov
test
sub
lods
mov
jmp
mov
in
push
movsl
fcmovnb
ja
xchg
or
mov
and
dec
mov
pop
aaa
cmpsl
aaa
mov
mov
lock
cltd
inc
adc
mov
mov
push
lahf
fstl
jp
mov
add
dec
mov
mov
cld
jle
mov
push
sarb
dec
push
dec
xor
add
cmp
push
dec
mov
jle
sbb
loope
jmp
in
in
daa
fisubl
jp
out
sub
out
cmp
test
jns
sub
adc
mov
popa
pop
lock
out
adc
cmpsb
mov
out
mov
arpl
pop
cmp
insl
and
jne
dec
repnz
rcll
bound
jne
jnp
dec
ja
sub
cmc
cmp
repnz
int3
call
insl
xor
rol
or
xchg
movsl
push
pushw
sbb
pop
mov
mov
xor
scas
xor
aad
int
cmp
xchg
mov
sbb
pop
pop
mov
out
fisttps
stos
adc
aam
adc
mov
ret
jmp
cmp
mov
mov
popf
xchg
sbb
jae
stos
push
push
fwait
decl
mov
or
sub
adc
xchg
cmp
negb
imul
sub
pop
cmp
push
out
shrl
add
sub
orl
shl
aad
add
push
cmc
mov
mov
or
arpl
push
inc
cmp
cmp
jecxz
movsb
or
pop
xchg
testb
aaa
add
data16
pop
adc
add
data16
adc
lret
jae
pop
inc
int3
pop
leave
addr16
mov
lahf
mov
mov
into
adc
adc
dec
mov
xor
in
sar
lcall
mov
jge
daa
ds
outsl
fs
mov
sbb
loop
sbb
popa
add
pop
fidivl
fwait
mov
aaa
cmp
pop
daa
mov
mov
jle
aaa
or
mov
repz
sub
mov
dec
aam
in
mov
cmp
xchg
lock
das
jmp
dec
popa
cmpsl
mov
fbstp
ds
fiadds
lock
or
cmp
stos
and
push
sub
cwtl
mov
xor
test
push
adc
cs
jae
sbb
dec
cmc
pushf
loop
xor
adc
and
xchg
or
sub
ds
inc
xor
data16
stc
push
sahf
ljmp
xchg
lds
and
jge
stos
mov
xchg
sub
test
lahf
mov
sbb
sbb
in
test
repz
mov
movsl
mov
pop
lret
add
cmp
mov
enter
popf
mov
mov
fstl
and
or
xchg
out
sub
cwtl
xor
mov
xchg
cmp
xor
ds
dec
mov
pop
rclb
dec
je
add
lcall
sbb
or
xchg
jno
and
jp
or
jo
and
pop
sbb
cmpsb
addb
insb
in
adc
scas
dec
push
add
mov
movsb
rcrl
mov
fmull
and
sbb
or
in
xor
in
adc
push
das
std
dec
loopne
in
mov
sub
cmpsl
dec
dec
stc
inc
bound
sub
loope
or
in
imul
jmp
das
cli
test
movsb
push
jae
sub
shll
std
sti
test
rorl
cmp
adc
jmp
push
pop
stos
mov
fldt
cmp
cmp
cmp
es
mov
aam
jns
dec
push
je
testb
push
sti
jg
loopne
adc
mov
xor
in
push
scas
adc
sbb
movsb
xchg
ret
cwtl
push
rcr
dec
adc
clc
push
rcrl
push
pop
clc
dec
xor
adc
or
pop
xor
or
cmpsb
les
inc
jbe
push
int3
mov
cmp
andb
call
ret
das
cmp
clc
jae
enter
fcmovnbe
pop
cmpb
or
jp
fldt
insb
push
or
sub
inc
jne
fistpll
fidivrl
fsubl
mov
scas
push
mov
jns
adc
cmp
ficomps
mov
jge
sub
cld
dec
mov
mov
nop
push
ljmp
ds
push
jb
fsubrl
push
mov
push
imul
or
imul
lret
jo
rorb
fs
shll
pusha
fistps
mov
mov
pop
fcmovb
loopne
xchg
dec
js
jbe
push
inc
push
sbb
pop
cmp
repnz
ja
js
shrb
pushf
or
lock
aam
sbb
ja
inc
xor
or
xchg
fists
incb
sub
icebp
or
mov
popa
pop
aaa
push
push
neg
repnz
cmp
dec
stos
orl
dec
jp
push
and
inc
sbb
sti
jmp
or
mov
fwait
jb
and
jmp
mov
xlat
and
aaa
mov
cmp
mov
push
ds
mov
xchg
mov
imul
jbe
add
fxch
test
dec
inc
cwtl
inc
iret
out
ja
jo
daa
and
ror
lret
ficomps
mov
xor
adc
or
loope
push
push
sti
mov
subl
inc
push
sbb
sarl
loope
push
mov
sub
push
xchg
stc
aaa
pop
aas
xor
popa
repnz
movsb
iret
push
mov
fidivl
add
ret
jnp
stc
lock
imul
add
std
cmp
cwtl
push
xlat
and
push
push
mov
push
push
xor
adc
iret
out
leave
dec
adc
add
and
jg
fiadds
pop
shl
add
mov
out
jge
sbb
xchg
loop
aas
inc
fs
rcl
add
inc
pop
mov
cmp
lahf
add
mov
in
xchg
imul
fsubl
and
mov
out
lock
mov
jns
stos
lret
outsl
adc
jg
pop
inc
inc
imul
ja
push
pop
inc
xchg
mov
push
push
pushf
xchg
xchg
mov
xor
sahf
inc
andl
in
nop
or
cld
sbb
or
inc
xchg
inc
jo
test
lret
ljmp
pop
sub
add
jns
jae
pop
sub
push
out
lcall
mov
jbe
mov
shrl
std
jg
pop
xchg
leave
inc
and
push
or
mov
pop
aam
fcompl
iret
mov
sub
pop
xor
mov
sub
or
lods
jbe
ret
sub
imul
andb
mov
imulb
mov
add
sti
icebp
ja
popf
mov
stos
loop
pslld
adc
dec
shlb
shl
out
xchg
es
cmovg
and
cmpsb
call
out
lret
aad
jae
test
rorl
nop
test
dec
pop
jecxz
dec
inc
insb
mov
fdivs
lret
pop
and
int3
mov
and
lock
xlat
sub
mov
popf
inc
cmc
xor
mov
test
test
mov
jp
insl
cmpsl
sbb
xor
push
cmp
add
xchg
outsb
mov
sahf
insl
lahf
lds
lret
mov
bound
fistpl
out
jg
imul
rorl
popa
ss
out
adcl
outsl
mov
xchg
mov
out
push
sub
sbb
jecxz
jno
adc
mov
cmc
inc
je
pusha
into
xor
push
dec
pop
sbb
xchg
adc
jae
mov
mov
mov
push
xchg
aad
push
loope
js
out
sarb
fucom
mov
test
jg
insl
dec
push
loopne
inc
sub
mov
fldcw
sti
push
cmc
dec
aas
int
xor
jmp
test
xchg
push
adc
addl
add
lret
fsubrs
pop
ret
mov
cmc
cmp
adc
adc
rolb
fimull
out
insb
cmp
sti
pop
or
stos
mov
xchg
dec
test
outsb
mov
push
jnp
cmpsb
xlat
mov
adc
ficomps
pop
sub
inc
lahf
stc
jle
lret
mov
inc
jp
cmc
pop
xchg
test
fildll
mov
outsb
inc
or
fnsave
mov
inc
pushl
sbb
mov
pushl
xor
cmp
in
out
cmp
push
xor
imul
in
xor
mov
lds
sub
popa
xchg
mov
fildll
loope
imul
test
fsubrl
bnd
lods
jno
jl
aas
sbb
ret
leave
pop
mov
out
sbb
lret
jle
test
mov
or
jo
pop
adc
popa
and
mov
and
jb
ja
mov
cmpsl
int3
loop
test
fisubl
nop
xchg
addr16
pop
mov
in
or
mov
hlt
mov
mov
push
ficompl
or
xor
or
jp
mul
push
or
ja
addr16
inc
pop
jecxz
adc
xor
lcall
adc
inc
inc
ss
cs
fdivs
leave
pop
mov
lahf
mov
dec
je
hlt
out
mov
mov
mov
xor
add
and
push
ffree
call
jp
cmp
pop
or
or
sub
and
cmpsb
and
insl
push
xchg
push
add
jge
out
mov
sub
stos
inc
sbb
mov
loop
mov
sbb
xchg
cld
xor
jb
lds
xchg
and
mov
xor
mov
scas
mov
inc
incb
pop
rorb
mov
out
sbb
push
fcmovu
ljmp
mov
and
stos
dec
lea
addr16
icebp
sub
mov
jns
xchg
cmp
dec
movsl
or
pop
xchg
inc
scas
dec
pop
out
scas
sbb
mov
and
jl
les
xchg
add
or
arpl
sbb
rcrb
xor
push
xchg
aam
pop
loopne
pop
xchg
adc
pop
cmp
in
and
into
jns
mov
xor
imul
shlb
arpl
sub
out
push
push
jbe
pop
aaa
dec
mov
sbb
adc
jne
lds
xchg
and
sbb
in
xchg
adc
adc
push
imul
jbe
pop
ret
pop
xor
adc
hlt
sub
inc
dec
pop
sbb
cmpsl
mov
pop
mov
xchg
es
and
xchg
mov
or
mov
and
xor
xor
rolb
loop
rcrb
xchg
and
push
adc
lds
out
outsl
cmc
xor
fdivl
fstps
xor
jb
call
cs
cld
mov
and
fsts
sbb
pop
in
fldt
or
mov
shrl
lods
sti
loope
inc
pop
push
loope
xor
ss
mov
or
pop
add
clc
pop
xchg
fs
sar
fwait
jge
cli
fidivrs
sahf
mov
xchg
add
cld
mov
push
push
stos
lret
in
movsl
lret
pop
cs
iret
xchg
adc
sbb
clc
lods
daa
dec
je
sahf
lahf
dec
jp
mov
mov
in
xor
das
lods
xchg
ds
negl
mov
dec
cmpsl
push
xorb
mov
cmp
lea
mov
mov
hlt
and
pop
leave
mov
out
hlt
shlb
push
jb
mov
mov
xchg
imul
in
inc
out
mov
rorl
cmpsl
jle
inc
cmc
or
mov
shl
dec
enter
hlt
aaa
cmp
sti
les
xchg
add
sbb
lock
out
in
lret
lret
xor
dec
jbe
int3
xchg
cwtl
add
in
mov
nop
adcl
fsubs
cs
pop
adc
das
fbld
or
cmp
loop
mov
jmp
pop
sbb
mov
sbb
repnz
fldenv
mov
shrb
movsb
inc
mov
loop
cld
adc
mov
sbb
test
mov
inc
mov
cmpsb
jbe
jnp
fdivrl
push
test
into
inc
mov
mov
mov
inc
xor
or
stc
push
and
call
jbe
mov
sub
loop
das
xor
ljmp
les
pop
and
or
inc
jnp
and
aas
and
push
push
push
add
cmp
out
ficomps
fbld
js
loopne
mov
lods
fucomip
aad
std
xchg
lock
nopl
mov
sub
ja
hlt
addb
into
fs
jne
and
xor
cmp
jmp
add
rcrl
pop
xchg
movsl
stc
pop
insl
adc
jmp
popf
paddsw
subb
insl
or
dec
test
rcr
add
pop
stos
jle
or
scas
ss
mov
sub
sarl
popf
int
neg
jecxz
add
in
pop
mov
add
push
sub
and
jmp
mov
mov
jae
xchg
push
xor
insl
jecxz
inc
pop
aas
adc
movsb
mov
sub
in
imul
mov
cltd
or
mov
fcompl
push
xor
cmpsl
in
sbb
dec
enter
push
fsts
pop
adc
add
adc
xchg
lock
pop
xchg
mov
sbb
add
fdivrl
inc
int
divb
mov
mov
jb
std
jnp
xrelease
adc
sbb
scas
pop
fwait
jbe
pushl
mov
sbb
bound
enter
jle
outsb
jge
xchg
xor
mov
xchg
cmp
add
notrack
sub
xor
hlt
pop
mov
lock
adc
loopne
push
rorb
mov
sti
pop
xor
mov
inc
decb
jmp
or
xchg
xor
sbb
movsl
test
popa
jb
xchg
popa
jmp
das
or
pop
xchg
ja
sub
jbe
jb
into
test
push
push
push
std
es
push
xchg
lock
mov
add
add
push
scas
jecxz
jmp
pop
cmp
cmp
cmc
lock
mov
pop
out
test
mov
cmpsl
xor
mov
call
fsubrl
es
dec
mov
loopne
and
jp
cmp
or
adc
jecxz
incb
cmpsl
std
aam
mov
imul
mov
pop
or
stos
insb
push
dec
xor
mov
pop
inc
pop
cld
jbe
dec
repz
hlt
xchg
pop
scas
mov
repnz
pop
inc
mov
push
push
xchg
les
push
or
ret
add
and
icebp
mov
mov
cs
cwtl
push
xchg
stos
sub
xor
xor
jae
sub
test
out
jge
jo
pop
aad
or
ret
out
inc
sahf
repnz
and
sbb
test
cmpsl
outsb
in
xchg
sahf
push
and
aaa
sub
lea
pop
fimuls
in
mov
push
rcl
fdivl
push
mov
out
aad
push
cmc
mov
and
std
mov
fwait
add
dec
push
mov
dec
mov
rcr
mov
popa
scas
cmpsl
nop
sbb
test
inc
mov
outsb
and
add
out
test
xchg
mov
lret
or
adc
xor
inc
rorl
sbb
iret
mov
add
xlat
lahf
out
inc
or
push
inc
jae
jle
inc
mov
mov
data16
cmp
mov
mov
sub
jbe
ret
inc
into
push
mov
xor
fsts
scas
pop
repnz
bound
xor
and
insb
rcrl
fsubrl
lods
push
outsl
push
jnp
dec
xchg
inc
addl
pushf
mov
pop
pop
or
das
inc
adc
cmp
inc
mov
mov
imul
push
cmp
mov
adc
jle
cmp
test
and
jno
outsl
int
cmpsb
lds
outsb
mov
shll
pop
orl
cwtl
pop
in
xchg
nop
and
imul
scas
rorl
and
or
mov
and
sbb
out
sub
and
push
add
xchg
out
iret
mov
pop
popf
push
mov
nop
push
into
adc
mov
icebp
or
mov
pop
addr16
dec
xchg
aad
imul
xor
push
bound
imul
mov
xor
pop
aam
xchg
mov
mov
lods
dec
cmp
dec
clc
lret
pop
cmpsl
shll
mov
das
fidivrs
jge
mov
std
sub
push
sbb
add
pop
xlat
inc
or
jg
aad
cmp
or
sub
test
ds
cmp
mov
and
jo
nop
lret
push
dec
push
inc
scas
testb
xor
fbstp
adc
sub
xchg
icebp
dec
add
lret
add
push
in
jno
xchg
sub
out
test
xlat
xchg
inc
cmp
mov
dec
xor
jecxz
enter
mov
pushf
xchg
cmp
jns
jmp
pop
dec
push
aas
enter
sbb
lret
aam
clc
aaa
shll
lods
loope
dec
dec
testl
adcb
push
mov
xchg
pop
loop
ret
sbb
loope
sbb
ret
fs
sub
jno
mov
imul
sbb
pop
sahf
and
imul
adc
jbe
sbb
sbb
cli
cmp
shl
cmp
mov
inc
outsb
ret
test
mov
jae
lods
jnp
repz
fld
pop
xchg
scas
stos
sti
mov
mov
rolb
sbb
pop
lock
adc
mov
cmp
mov
add
jge
fists
mov
cmpsl
dec
pop
push
fs
mov
inc
call
ljmp
popf
lret
inc
push
fwait
leave
mov
cmpsl
xchg
push
addl
int
add
pop
enter
rol
rorl
lds
xchg
scas
in
adcb
rcrl
sbb
jns
in
pop
outsl
dec
dec
ljmp
add
repnz
add
sub
repz
inc
jb
pop
pop
sub
lea
lret
int3
lds
loope
inc
add
pop
cmp
or
test
jne
hlt
inc
jmp
sub
mov
sar
bound
cmpsb
xchg
stos
jns
cmpsb
dec
xchg
dec
mov
xlat
cwtl
pushf
sbb
and
lock
mov
mov
xor
cmp
adc
jo
xchg
jmp
sub
adc
push
mov
and
add
push
lahf
ds
xchg
cmp
pop
add
dec
sahf
xchg
clc
push
addr16
pop
outsb
and
inc
ja
adc
leave
gs
sti
int3
adc
fmul
js
rcll
mov
adc
mulb
sub
divb
aam
cmpl
fwait
loop
push
jne
pop
scas
cmp
jns
mov
pushf
fbstp
data16
sub
inc
sbb
fldenv
adc
xchg
push
adc
xor
fisttpl
fdivl
cli
aas
jnp
outsl
pop
mov
movb
sbb
jecxz
pop
adc
jbe
ds
clc
xchg
lret
hlt
mov
loop
lods
fiadds
pusha
mov
outsb
pop
rcl
btc
cmpsb
je
lcall
jnp
ficompl
stos
add
xor
adc
mov
aaa
std
jns
pop
insl
xchg
mov
je
dec
fdivrl
ret
hlt
push
pusha
lods
int3
xchg
in
ja
out
stc
ret
jle
xorb
and
push
and
lcall
sub
mov
scas
sbb
jl
mov
push
in
mov
fs
cmc
push
sbb
mov
pop
movsb
sub
das
cmpsl
iret
fcmovnu
insb
cwtl
scas
mov
and
pop
je
into
push
cmp
add
and
stos
cmpsl
iret
js
and
mov
pushf
xorb
fsubrl
cs
hlt
js
popa
push
aad
jns
and
rcll
pop
jmp
sub
popa
dec
mov
int3
popa
cli
mov
loop
push
push
andl
arpl
lea
or
push
aaa
je
push
add
lret
ret
mov
dec
adc
add
imul
cs
jl
push
pop
daa
bound
out
sub
out
mov
fisubrs
insb
outsl
loope
lods
daa
popa
hlt
cmc
ret
xchg
dec
pop
icebp
lds
pop
adc
bound
adc
adc
mov
loopne
outsb
mov
lock
fsubr
into
lret
fwait
loopne
mov
out
jns
inc
movsb
mov
lcall
in
cwtl
push
scas
push
lea
mov
dec
clc
sub
fwait
xchg
pop
mov
mov
ds
daa
and
fsubrl
testl
fsubl
sbb
cmp
or
xchg
cmp
push
pop
push
add
mov
imul
in
cmp
movsl
xchg
cmc
mov
mov
jmp
lea
and
out
das
test
jmp
mov
sbb
and
sub
stc
loop
xor
push
inc
addr16
popl
aaa
addr16
xorb
jbe
lods
add
std
mov
repnz
pop
dec
movsl
test
xor
aaa
adc
ret
rorl
call
jecxz
or
mov
popf
lret
xchg
sbb
or
std
sub
aad
lods
bound
and
je
mov
jp
pop
add
pop
pushf
add
movsb
push
sahf
xor
mov
mov
sbb
imul
aad
mov
dec
sub
sbb
dec
testl
nop
xchg
cmp
inc
pop
pop
mov
ljmp
cmp
xor
mov
pusha
mov
sub
cltd
xchg
xchg
aam
or
imul
sub
ss
mov
sar
xchg
test
ss
push
cmp
jge
xchg
fidivl
sub
cli
pushf
mov
testl
mov
mov
dec
cltd
mov
push
arpl
xchg
cld
sbb
lods
rclb
in
cmc
sti
ja
das
mov
enter
jp
inc
push
xchg
ret
pop
xchg
jae
cwtl
fsubl
mov
unpckhps
sub
in
dec
pop
jbe
jg
jle
fisubl
inc
mov
sbb
insb
popf
mov
cmpsb
inc
repz
hlt
mov
and
xor
cltd
movsb
jo
xchg
xor
xor
dec
in
fisubrs
cmc
lahf
bound
fs
mov
xchg
std
jle
or
lods
inc
lret
das
jge
mov
lea
ja
int3
leave
stos
lcall
addr16
xchg
xchg
std
mov
lcall
lret
dec
xchg
hlt
add
mov
daa
mov
push
lahf
idivl
sub
mov
add
lds
sub
dec
mov
or
into
ret
mov
xor
imul
sarl
out
and
push
cmpsb
rorl
push
jbe
dec
in
jl
inc
sbb
ja
mov
pop
lret
rclb
movsb
testl
lcall
std
shlb
lret
repnz
test
xchg
andb
add
push
lods
test
mov
adc
sbbl
inc
hlt
in
shlb
pop
cmp
push
mov
mov
and
mov
push
insl
and
dec
and
inc
xor
mov
xor
push
jmp
cmpsl
fsts
pop
leave
sarl
arpl
pop
jo
jne
dec
out
fmuls
or
and
fistl
test
pop
inc
lods
in
es
mov
jmp
inc
out
jp
loop
dec
loope
fwait
jg
jle
cli
mov
and
push
or
aam
lds
rol
mov
jo
daa
lods
jmp
out
lods
xor
mov
jl
push
xchg
push
sti
pusha
sbb
add
je
adc
xchg
das
cltd
xchg
push
adc
jl
mov
xchg
or
push
cwtl
icebp
or
call
xchg
in
cmpsl
add
ja
sbb
stos
jno
mov
sub
xchg
push
push
scas
sub
lods
add
mov
push
jg
xchg
filds
ljmp
jp
sub
or
push
adc
ss
stos
and
pop
outsb
ror
pop
jmp
mov
loopne
cltd
and
out
imul
js
stc
xchg
and
mov
hlt
int
fsub
or
xor
repnz
and
jp
je
into
ret
fidivrs
xchg
xchg
aam
call
adc
jecxz
push
ret
push
xor
add
adc
cmp
stos
es
test
or
lds
loope
pop
mov
push
and
ds
jnp
into
add
mov
or
aaa
popf
leave
mov
cmpsl
xor
adcl
divb
fcos
xchg
xor
test
pop
movsl
jl
push
aas
xchg
mov
inc
push
mov
ror
andb
push
adc
jge
mov
and
fistpll
jne
bound
mov
push
mov
aaa
das
ret
outsl
ret
hlt
xchg
cmpsb
or
pop
fstpl
jecxz
and
cmp
push
out
inc
mov
push
jo
clc
lea
inc
xor
xor
xor
mov
mov
cmp
jbe
push
nop
bound
or
xchg
xchg
xchg
pop
cs
stos
sbb
sub
aad
push
mov
xchg
adc
mov
add
repnz
loopne
xor
jo
mov
dec
xchg
jne
and
arpl
adc
push
pusha
in
mov
sbb
cld
insb
mov
mov
jnp
lret
inc
pop
cli
xor
pusha
xor
cltd
sarl
pushf
dec
sub
mov
push
js
pop
mov
ja
out
fnop
inc
xor
add
pop
cli
cmp
aas
out
in
les
sarb
fisttpll
xchg
enter
mov
cmc
dec
mov
sbb
int3
or
adc
loop
add
inc
mov
mov
inc
imul
bnd
int3
and
lahf
or
fstpt
mov
clc
ljmp
xchg
icebp
je
add
fnstsw
add
test
in
pushf
xor
scas
mov
mov
lods
rcrb
dec
iret
out
pop
xorb
jbe
loop
leave
fwait
jle
enter
mov
push
lret
lods
ret
pop
dec
cmp
mov
dec
loop
inc
ja
outsb
ds
or
sahf
pop
ds
ficoms
fnstsw
adc
jp
push
leave
push
mov
cmp
popa
push
cmp
lret
mov
sbb
mov
inc
push
jg
jge
in
ss
loopne
sub
mov
mov
sub
shlb
or
pop
xor
hlt
fsubrs
stc
fidivs
adc
mov
int
xchg
cmc
mov
pop
sub
fisubrs
lret
insb
scas
xlat
xchg
mov
push
dec
adc
in
cmc
shrb
lcall
mov
in
sub
dec
sub
loop
lods
dec
xor
in
leave
mov
bound
sub
and
cmp
xchg
adc
push
mov
xor
insb
lds
loope
ja
jge
rcl
frstor
test
mov
icebp
lret
pop
je
leave
in
pop
rcr
jne
xor
mov
and
imul
mov
ss
popf
and
or
adc
fstps
loopne
jp
inc
cwtl
cmc
mov
or
leave
shll
insl
pop
mov
into
aam
aad
insb
outsl
mov
cs
xlat
mov
negb
pusha
lods
imul
in
jns
add
lret
not
pushf
add
push
ds
bound
movsb
mov
cmp
mov
xor
int3
pop
in
lds
xchg
inc
mov
xor
mov
fstpl
mov
xor
push
xor
cmp
in
shrl
xchg
fmuls
jl
or
mov
sub
jg
adc
dec
dec
push
fsub
cwtl
in
inc
or
jb
pop
aam
frstor
fisubrs
popa
jo
addr16
lahf
xchg
les
repz
jmp
or
ret
ret
loopne
or
jb
ljmp
mov
adc
jo
dec
and
insl
mov
jmp
pop
jecxz
add
add
mov
xchg
lock
lret
push
icebp
dec
dec
icebp
in
cmp
movsl
jns
fs
pop
pushf
push
roll
mov
stos
xor
cmp
icebp
or
dec
inc
outsl
mov
cltd
mov
cltd
or
sbb
sbb
cmc
incl
fisttpl
jne
inc
fs
aam
or
inc
pop
outsb
sbbl
cmp
push
popf
mov
push
jl
es
inc
mov
fwait
push
pop
xlat
mov
mov
cmp
push
inc
cwtl
int
mov
pop
xor
jns
add
mov
xor
lahf
outsb
sub
pop
jp
inc
jbe
mov
mov
scas
mov
inc
leave
ret
scas
adc
addr16
mov
jbe
test
pop
idiv
lret
sbb
pop
fstpl
imul
vmwrite
jns
jecxz
cli
sub
loope
push
shll
xor
loop
out
lret
out
ljmp
xchg
sbb
mov
dec
sti
in
aad
scas
sbb
imul
push
in
insl
in
cmp
fwait
sub
mov
or
testb
loop
inc
in
arpl
jmp
pop
sub
cs
test
mov
cmp
cmc
mov
icebp
mov
lds
jp
mov
mov
jmp
dec
inc
movsb
push
and
push
test
jns
jge
mov
push
push
cld
mov
or
jnp
lods
xchg
in
add
scas
xchg
repnz
sahf
jbe
dec
rol
sbb
cmp
inc
jmp
jl
dec
cmp
cmp
fwait
loop
jno
pop
fildl
ficoms
mov
flds
or
ret
imul
outsl
jecxz
push
and
aaa
aad
mov
lods
mov
out
in
jno
mov
xchg
pop
inc
cmp
cmpsb
in
stos
mov
adc
sbb
xor
fcmovnbe
add
sar
jno
loope
xor
xor
dec
ss
add
and
fistps
cmp
push
in
add
jle
addr16
xchg
arpl
lods
cmp
cmp
or
mov
mov
leave
call
sbb
xchg
insb
push
aad
push
and
sbb
cmp
pop
imul
dec
sahf
sub
inc
in
push
pop
outsl
sbb
mov
lods
sahf
pop
xor
es
cmpsb
mov
sbb
cld
pop
sbb
ja
xor
stc
ret
mov
pusha
jmp
nop
push
std
popf
cmp
inc
mov
dec
es
and
xchg
nop
sub
outsl
add
mov
sbb
dec
jnp
jp
enter
loope
pop
mov
sti
jae
push
fsubrs
imul
cmp
gs
pop
pop
adc
mov
idiv
cmp
sub
bound
sahf
sub
call
xorl
sub
rcrl
dec
imul
fxam
rcrl
mov
jno
rorb
repnz
inc
stos
or
call
add
jmp
sbb
imul
lock
and
cltd
imul
pop
dec
and
scas
mov
add
les
xchg
imul
mov
insl
aam
cmpsb
lret
nop
inc
inc
stos
lahf
pop
adc
neg
in
mov
jmp
mov
push
pop
adc
fists
adc
fstps
test
roll
inc
pusha
arpl
mov
mov
icebp
hlt
imul
mov
enter
mov
adc
std
sub
cs
dec
sahf
es
ficomps
insb
sbb
outsb
mov
dec
addb
dec
mov
data16
adc
mov
mov
pop
inc
xchg
clc
dec
push
sub
push
mov
bound
xor
repz
data16
repz
mov
data16
lret
mov
xor
jl
fs
jns
sub
push
outsl
fsubp
bound
pop
mov
jmp
jge
pop
ss
popa
mov
imul
jns
adc
jno
pop
scas
push
mov
cs
andl
push
sbb
mov
jne
roll
fwait
iret
clc
adc
stos
aad
ljmp
mov
in
xor
xor
in
rolb
adc
in
add
push
xor
js
mov
cli
imul
cmpsl
cmpsb
mov
subl
push
inc
mov
aad
and
in
pop
ret
imul
pop
fs
das
loope
sub
mov
cmpsb
sbb
push
cmpsb
push
mov
or
jb
imul
rorl
inc
into
arpl
scas
repnz
sbb
int3
mov
in
sbb
int
ret
and
roll
xchg
push
ss
rorb
orb
leave
aas
xchg
imul
out
pusha
cmc
enter
gs
rcll
lods
sub
add
xchg
or
scas
mov
out
adc
or
data16
sub
test
bound
dec
fldl
cmp
xlat
bound
xor
sub
test
mov
fdivl
movsl
int3
dec
xchg
fdivl
fisubrs
pop
dec
andl
push
cmp
add
sti
mov
cwtl
nop
and
add
xchg
xchg
xchg
add
aas
cmp
jle
pop
pusha
pop
rcl
or
mov
dec
leave
arpl
and
xor
and
popf
fcomps
fisttps
fstpl
adc
push
shrl
push
enter
sbb
xchg
mov
mov
addb
cmp
mov
and
and
cwtl
xor
pop
pop
cmpsl
int
pop
push
cwtl
lock
cld
mov
lods
or
in
jne
mov
out
pop
or
adc
add
mov
push
sbb
cmpsb
pop
mov
or
aas
and
shrb
ret
adc
sub
sbb
out
scas
lock
and
lods
add
xchg
mov
jge
jg
shll
and
inc
dec
out
mov
inc
dec
loop
clc
and
dec
call
pusha
and
or
stc
test
sarb
into
mov
push
push
scas
stos
fs
pusha
jo
dec
stos
ret
xor
pop
cmc
int3
inc
dec
cmp
dec
mov
adc
rcrl
mov
inc
stos
test
xchg
mov
fbld
or
or
imul
cli
push
push
push
stc
data16
test
cmpsb
adc
add
adc
sub
jo
daa
sahf
dec
cmp
gs
and
daa
xchg
mov
bound
stc
mov
mov
pop
loop
sar
movsb
out
pop
adc
mov
rcrl
mov
push
jle
adcb
jle
insl
stos
stos
jbe
outsl
push
mov
adc
ret
pop
das
pop
xlat
das
into
mov
push
inc
sahf
mov
mov
aaa
sub
pushl
mov
and
add
sbb
mov
nop
xchg
addl
shr
sub
push
lods
mov
adc
sbb
mov
lods
ss
add
dec
das
dec
xor
sub
shlb
sbb
pushf
xchg
lock
outsb
push
orb
pop
mov
cs
aas
mov
outsl
mov
emms
push
inc
pop
int
mov
cmpsb
test
cld
pop
loop
pop
sub
inc
outsl
jge
push
pop
xchg
mov
outsl
mov
jecxz
cmc
int
je
sbbb
sub
lcall
stos
js
or
gs
mov
jnp
push
adc
inc
in
int3
push
mov
pop
xchg
or
mov
jae
loop
shll
xor
xchg
jb
repz
cmp
mov
mov
shll
pop
clc
lds
sbb
sbb
pop
cmp
push
aaa
rclb
cmp
cmp
mov
push
pop
adc
in
bnd
inc
pop
push
add
or
scas
movsb
in
andb
add
addb
jb
inc
icebp
addr16
jge
sub
arpl
cmp
popf
jp
dec
push
pop
popa
or
cmp
pop
xchg
inc
popa
dec
jae
je
ret
cmpsb
jl
imul
xchg
sbb
outsl
lret
xchg
cmp
add
jne
sbb
sub
or
and
aas
and
cltd
jecxz
sub
in
adc
and
pop
in
outsb
xor
jge
mov
cmpsl
test
insb
stos
imul
inc
xchg
stos
ds
and
inc
bound
sub
rcrb
mov
xor
pop
push
add
xor
sub
mov
mov
adc
jg
jge
in
arpl
sub
orl
es
ret
jnp
out
fidivrs
test
lret
xor
xor
repnz
sub
pushf
rclb
movsb
sahf
fadds
xlat
cmpsb
loop
mov
and
repz
sub
imul
jecxz
pop
das
inc
insl
or
jno
out
lock
lods
and
mov
es
test
sub
mov
fsubs
pop
ret
mov
push
jnp
and
mov
aaa
and
fisubl
lods
xchg
mov
xchg
iret
pusha
xor
cmp
mov
into
mov
into
xor
shll
mov
rcl
mov
push
cmp
loopne
leave
dec
mov
mov
test
in
sbb
mov
cmp
push
push
mov
or
inc
loopne
mov
mov
dec
xchg
adc
add
cld
andl
pop
call
ds
pop
pop
aaa
pop
loopne
int3
and
push
fs
push
ret
sub
test
arpl
jmp
mov
ficompl
pop
lahf
or
cmpsb
xchg
mov
mov
xor
loop
dec
mov
in
in
outsb
sub
push
jb
stc
lods
sub
test
into
call
add
in
push
mov
jb
adcl
inc
lods
push
xchg
jns
add
cltd
out
mov
outsl
pop
adc
mov
mov
dec
out
pop
add
sarb
xchg
pop
push
outsl
jg
dec
sub
test
cmp
sub
xor
fucom
xorl
mov
ljmp
int
shlb
int
pop
inc
dec
add
jmp
call
xor
inc
add
sarl
enter
fcmovbe
pop
repz
xchg
push
inc
pop
sub
lock
hlt
push
add
inc
jecxz
jmp
ds
call
sub
xchg
daa
adc
stc
push
stos
cmp
iret
push
mov
mov
jno
dec
cld
sub
inc
shll
pop
pop
pop
jp
cmp
fsubrl
sarb
dec
mov
sub
xchg
in
mov
dec
sahf
dec
jbe
bound
inc
jbe
sarb
sbb
xor
mov
add
ret
mov
push
scas
push
or
loopne
aam
fwait
negb
mov
ja
jo
call
adc
iret
dec
ficomps
cli
cmpsl
or
and
in
ss
test
je
test
mov
loop
and
pop
iret
push
and
mov
rorb
cmp
mov
jl
sub
loop
xorb
mov
mov
std
imul
imul
or
push
adc
dec
aas
or
add
arpl
neg
mov
das
dec
xchg
sbb
test
push
fdivs
rcrl
xor
jno
xor
pop
or
xchg
pop
aas
outsb
and
sbb
ret
enter
xchg
leave
inc
loopne
int
cli
pop
jmp
cld
aaa
jns
pop
mov
popa
pop
dec
mov
js
add
les
addr16
int
lock
xor
call
femms
sbb
push
aaa
movsb
lock
mov
fistps
mov
xchg
das
aas
jns
dec
cmp
xchg
mov
xchg
repnz
xor
inc
push
mov
cltd
imul
cmpsb
mov
sbb
out
xorl
add
inc
jno
xor
inc
ret
sub
pop
test
mov
sbb
mov
shl
out
adc
bound
inc
dec
cld
add
cltd
sbb
add
mov
mov
push
sti
int3
imul
movsb
idivl
test
jmp
sbb
stos
cmp
sub
adcb
cld
jno
jl
stos
ljmp
mov
sub
lds
add
sub
jnp
dec
shrb
cmp
push
and
lret
adc
or
fs
xchg
adc
dec
mov
jo
sarb
stc
sub
cld
xor
test
push
bnd
push
push
outsl
lods
inc
stos
pop
paddusw
and
push
popa
clc
sub
lret
in
cld
lods
push
hlt
dec
pop
dec
add
je
lret
xchg
mov
lock
out
popa
mov
leave
push
fildll
jl
mov
cmp
popf
fs
faddl
rcrb
or
movb
movsb
pop
nop
xor
jb
or
mov
scas
mov
jl
mov
rcrb
pop
mov
into
push
sahf
jb
sarb
push
or
test
scas
inc
stos
std
push
xchg
movsl
or
fcomp
pop
fstps
fwait
or
cwtl
mov
mov
fwait
sub
jae
or
sbb
mov
push
or
lret
shl
repnz
adc
xchg
mov
jge
xchg
loop
fldl
pop
adc
push
dec
mov
jg
dec
mov
jge
mov
push
lods
sahf
ffree
inc
pop
or
or
sub
bound
mov
pop
jo
addl
rcl
int
mov
and
dec
xor
cld
frstor
inc
pop
aaa
gs
inc
jge
ja
pusha
stos
push
xlat
lods
jnp,pn
insb
mov
mov
jns
pop
inc
ja
clc
stos
fdivs
cmp
shll
out
insb
mov
pop
js
push
and
and
aaa
push
cltd
mov
sahf
popf
lods
pusha
repnz
mov
int3
shrl
adc
leave
dec
cmp
ljmp
or
scas
jb
xor
push
outsb
imul
repz
inc
sbb
leave
mov
lret
or
push
cwtl
lock
mov
cmpsb
loop
jne
insl
shrl
mov
sub
push
add
fisubs
aas
dec
xlat
setae
jb
inc
fadds
faddl
scas
jp
je
dec
scas
rol
sbb
xchg
add
push
inc
addr16
jecxz
roll
ss
mov
fidivrl
fmuls
xorl
shll
call
dec
mov
and
adc
repz
jns
push
aad
xlat
adc
ret
adc
ljmp
push
sub
jbe
mov
cmp
dec
cld
or
jg
ret
xorl
mov
xchg
mov
dec
inc
out
pop
arpl
arpl
hlt
pop
or
xchg
sahf
push
das
aaa
cmp
inc
xor
mov
test
cli
data16
mov
loope
lahf
xchg
jo
sti
in
mov
nop
mov
movsl
sub
andb
mov
fildl
pushl
stos
or
aaa
arpl
jmp
push
dec
push
inc
pushf
mov
cmc
cwtl
sub
cmp
push
xchg
or
and
jbe
movsb
mov
xchg
fs
fisttps
adc
loop
push
nop
sub
lock
sarl
add
cmc
bound
and
cmp
in
clc
or
mov
ret
daa
or
jns
push
lock
fiadds
loope
leave
adc
aaa
xchg
adc
imul
pop
out
and
bound
pusha
sbb
mov
jae
dec
sub
scas
and
sbbb
enter
jge
adc
jnp
out
ljmp
call
arpl
push
cmpsb
pop
push
shlb
outsl
adc
adc
mov
mov
mov
add
lret
ja
pusha
out
ror
push
jp
cltd
xchg
out
xchg
push
jae
bound
inc
stc
pop
fisubrs
leave
xchg
mov
xchg
mov
movsl
and
xor
pop
jle
filds
xor
mov
insb
adcl
out
negl
int
jo
dec
sub
sbb
add
out
shrl
mov
inc
jl
repnz
mov
sbb
cmp
mov
mov
mov
jb
pop
jg
stos
mov
mov
sub
int
or
mov
mov
jle
pusha
xchg
mov
xchg
arpl
pop
sbb
mov
scas
imul
mov
loopne
pusha
push
shl
adc
cmp
adc
ror
cmp
ret
adc
gs
cmp
and
inc
cld
xor
int3
adc
adc
test
push
mov
dec
xchg
mov
adc
dec
popf
dec
mov
cmp
or
push
cwtl
add
sub
cmp
jnp
mov
in
mov
test
jge
mov
das
pand
or
pop
pop
sub
aam
minps
sub
sub
lret
enter
sti
jno
pop
or
mov
jae
xchg
xlat
push
mov
push
fisttpl
ljmp
jns
ret
cmp
jmp
popa
or
test
sbb
insl
jb
xchg
jge
inc
push
jo
sbb
mov
push
cltd
roll
subl
inc
add
in
and
sbb
imul
cmp
fidivl
adc
pop
insb
and
sbb
popa
icebp
cmp
aam
xchg
es
push
xchg
bound
mov
hlt
mov
jbe
insb
push
push
popa
pop
xlat
aaa
xorl
aas
ret
xchg
outsb
pop
fmul
lret
cs
mov
inc
fldenv
mov
in
neg
sub
ds
imul
cmp
push
mov
and
mov
mov
aam
lret
scas
fiaddl
jns
cmp
jge
or
insb
pop
inc
rcl
push
insl
cmpsl
cmpsl
push
push
dec
jno
push
push
and
vmwrite
jmp
fistpl
pop
sbb
je
xchg
adc
stos
sub
or
mov
inc
xor
xor
sub
mov
push
xchg
leave
sub
std
cmp
push
cwtl
imul
xchg
push
idivb
call
adc
xchg
orb
test
mov
movsb
push
lahf
or
adc
sarb
jmp
fidivrl
pop
mov
xchg
scas
sub
or
test
ljmp
mov
fnstenv
or
pop
std
int3
popf
push
dec
inc
pop
push
sub
sub
insl
lock
ffreep
sbb
add
jae
adc
xchg
add
out
fcoml
jae,pn
fldenv
xor
mov
mov
inc
fildll
es
mov
fwait
adc
in
and
and
xor
push
sbb
out
sarl
xchg
pxor
lock
out
in
insl
dec
sbb
adc
imull
jg
jns
iret
mov
dec
mov
sub
xchg
and
rcrl
pop
lcall
pop
push
rcrl
gs
inc
xchg
popa
inc
pop
mov
mov
int3
cmp
adc
pop
push
arpl
xor
lret
add
push
cmpsl
xor
jbe
adcl
or
add
les
cmpsl
or
mov
push
cmp
addb
mov
push
mov
jne
pop
sbb
push
mov
dec
mov
std
and
stc
loop
std
adc
js
xchg
outsl
pop
push
mov
mov
clc
loope
subl
stos
std
add
pop
or
repz
push
mov
mov
loopne
mov
jge
xchg
ljmp
xor
mov
pop
popa
mov
lahf
xchg
add
and
in
mov
shr
mov
loopne
fwait
push
pop
das
dec
clc
push
sbb
jecxz
sbb
insl
test
ficoml
inc
adcb
arpl
jb
pop
js
stos
stos
js
ret
gs
or
imul
xlat
dec
dec
mov
pop
das
lock
mov
scas
xor
jl
dec
adc
xor
andb
ret
and
pop
mov
test
inc
add
mov
adc
das
inc
xchg
hlt
or
out
fcmovnbe
cmpsb
stos
push
pop
push
mov
gs
pusha
sub
in
sub
push
jbe
xor
inc
fwait
xor
cltd
scas
jae
jne
lret
mov
lcall
cmp
roll
inc
je
sahf
pop
int3
mov
les
pusha
in
ret
ret
shll
insb
dec
arpl
test
leave
lods
pop
shr
stc
mov
clc
inc
inc
loopne
pop
jns
rcl
daa
loop
das
jp
adc
and
mov
push
add
xor
add
jbe
pop
in
jmp
sub
lret
stos
pop
popf
pop
out
out
adc
push
lods
repz
sarl
ffree
sar
sbb
aam
add
nop
push
sbb
xorb
mov
out
dec
test
sbb
dec
int3
add
mov
sub
fdivp
pop
lfs
mov
nop
and
out
dec
adc
xchg
ss
mov
rolb
out
addr16
mov
xorb
popa
sub
gs
jecxz,pn
inc
jno
jns
xchg
xchg
cmp
adc
dec
pop
cli
in
push
lea
xchg
jmp
dec
fnstenv
mov
sub
stos
and
push
cmp
lret
loope
in
inc
pop
mov
inc
sti
inc
test
outsb
push
mov
inc
cmpsl
pop
lcall
push
fdivs
shlb
test
idivl
lods
fisubrl
push
ja
cmpsl
hlt
fnsave
pushf
push
fidivs
jle
adc
push
or
sbb
lahf
push
scas
int3
sub
stos
and
pop
aam
and
push
inc
add
sarb
add
loop
pop
repz
lods
add
or
xchg
test
rcll
jp
sbb
outsl
lods
out
or
test
sub
rcr
dec
sub
add
loopne
jne
fbld
sbb
add
mov
cmp
dec
sti
push
outsl
aam
repz
add
or
adc
pop
nop
and
adc
filds
mov
test
ljmp
js
mov
shll
mov
cmp
cmc
push
lock
lods
mov
shll
movsb
push
cmpsl
fsubrl
mov
push
cltd
repnz
rcrl
loopne
pop
mov
cmp
or
adc
inc
in
sub
push
icebp
cmp
sti
addr16
pop
outsb
sbb
loopne
addr16
xor
inc
inc
sbb
adc
lahf
scas
sub
xchg
jp
xor
in
sub
lea
inc
jmp
in
mov
subl
cmp
stc
aam
fsubrl
nop
cmpsb
push
ljmp
inc
aaa
xor
pop
lods
xor
mov
mov
mov
and
add
jmp
or
cmpb
dec
es
cmpsl
cld
mov
cli
or
loop
lret
pop
dec
xchg
std
scas
std
mov
inc
dec
pusha
mov
xor
scas
aam
jp
in
push
mov
cmp
dec
mov
sar
ljmp
fsubr
pop
adc
lahf
mov
xchg
mov
add
and
fisttps
lea
push
enter
ljmp
add
xchg
jmp
jae
jo
fnstsw
pop
int
and
push
push
fsubrp
test
scas
pop
int
push
shrb
cmp
sub
mov
mov
xchg
and
mov
inc
mov
std
lods
in
push
add
out
cmp
xlat
aam
arpl
test
xor
ret
in
sbb
pop
str
fs
xchg
or
or
ss
sbb
inc
pusha
mov
pop
dec
arpl
sub
jno
pop
ds
scas
jmp
mov
sub
gs
xchg
add
les
pop
adc
sti
shlb
and
add
cmp
decl
or
fwait
in
push
loop
xlat
fdivr
dec
jg
data16
mov
aad
pop
std
loope
mov
add
sbb
and
lock
xor
loop
clc
test
mov
push
cmpsb
jo
fcom
and
pop
stos
mov
stos
in
cmovb
cmp
pop
pop
inc
outsb
push
mov
lret
adc
lods
fadds
add
mov
in
or
rcrl
xchg
jne
add
les
ficompl
jnp
mov
xchg
xchg
dec
movsl
repnz
pop
adc
lcall
test
fcoml
pop
ss
xor
stc
out
aaa
jbe
add
add
lret
sbb
sbbl
adc
cmp
mov
xor
negb
lcall
sarb
fxch
adcl
mov
call
andl
cmpsb
mov
idivl
adc
push
add
out
push
sub
mov
fisttpl
sub
push
fnstenv
daa
sbbb
mov
hlt
insl
and
in
push
mov
sbb
loop
xor
cmp
jle
jnp
gs
imul
push
xchg
stos
rorl
in
mov
sub
push
mov
arpl
fnstenv
lret
vaddsubpd
xlat
and
jbe
mov
out
sub
repz
loop
xlat
push
outsb
sbb
rcl
in
cmp
pop
xor
nop
inc
es
pop
aas
push
cmp
aaa
scas
in
or
pop
test
sub
push
test
sub
lcall
sbb
es
xchg
cld
xor
jp
loope
push
adc
bound
push
in
inc
and
pop
fwait
dec
in
idiv
out
mov
xchg
add
and
lret
sete
cmp
inc
pop
out
jle
ja
push
mov
push
sbbb
jae
mov
inc
cwtl
ret
outsb
insl
mov
bound
mov
cltd
jp
in
or
out
ja
cs
pushf
test
push
jno
jo
mov
adc
push
les
aam
dec
das
jno
jecxz
insl
sub
and
add
sub
jno
test
sub
rcr
movsl
pop
sbb
mov
sahf
xor
pusha
dec
pushf
adc
repz
popa
stc
outsb
mov
das
sbb
insb
dec
stos
subb
mov
xor
fsubr
pushf
xor
cltd
sbb
clc
in
or
xchg
rcll
lods
dec
dec
into
jae
mov
inc
stc
push
jo
scas
es
cmpsb
xor
lcall
push
pop
icebp
lahf
mov
test
and
lods
sbb
aad
jb
hlt
xchg
push
loop
sbb
xchg
jg
cli
xchg
mov
inc
insl
jno
mov
das
sbb
cwtl
sbb
cmp
popf
pop
jo
out
fs
aad
icebp
loope
jne
ljmp
in
xlat
int3
arpl
bound
shrb
jmp
test
xchg
int
cmp
mov
inc
or
dec
sub
mov
ret
add
les
xchg
out
shl
data16
es
nop
shlb
pop
and
mov
roll
int
mov
cs
pop
xor
ss
lret
mov
xlat
adc
addr16
inc
shlb
sbb
loope
and
and
testb
jl
test
stos
mov
das
std
dec
inc
call
mov
ja
and
outsl
cli
jbe
enter
mov
int3
lods
mov
xchg
pop
pop
jmp
sub
mov
xchg
ret
leave
in
lds
out
jmp
mov
pop
push
lcall
es
std
add
mull
fwait
mov
lret
add
enter
and
rep
pop
lret
loope
loopne
js
dec
nop
cmp
jbe
inc
sbb
in
int3
and
into
mov
les
inc
pop
sbb
mov
mov
sbb
cmp
push
adcb
lahf
or
sbb
dec
test
xor
fstps
xchg
test
mov
inc
push
push
push
in
cld
push
mov
mov
js
jg
inc
daa
inc
dec
sub
in
push
push
jbe
and
movsl
iret
jg
sbb
fcmovb
sbb
jne
dec
pop
in
inc
ret
sahf
mov
lret
push
outsb
aam
mov
push
mov
mov
les
in
out
outsl
bound
pushf
xchg
xchg
cmp
jge
sbb
inc
cltd
scas
test
imul
xor
dec
cmc
add
dec
les
dec
testl
adc
push
fldenv
sti
dec
inc
mov
ficomps
jns
pop
jecxz
mov
dec
into
aam
stos
mov
xor
and
cmp
dec
adc
inc
pop
aaa
inc
insl
pop
push
xchg
mov
adc
xchg
insl
or
cmp
or
arpl
and
lds
out
fldt
in
clc
not
add
cmp
shlb
lret
insb
fimull
arpl
mov
sub
aad
pminsw
cld
bound
push
mov
adc
mov
loope
sbb
sbb
dec
sub
xor
cmp
fisttpll
sbb
lahf
xchg
xchg
ljmp
push
fisubs
mov
insl
mov
hlt
jbe
imul
jae
dec
push
xor
leave
mov
mov
sbb
popa
fcmovnu
sahf
mov
pop
inc
repnz
dec
pop
dec
insb
push
jne
jo
les
cmp
xchg
xchg
xlat
into
xlat
adc
scas
hlt
pusha
sub
je
sahf
sub
dec
sub
cwtl
xchg
mov
shll
sbb
ja
sub
repnz
in
push
sub
cltd
push
jl
aad
negb
scas
jns
ret
pushf
cmp
push
test
or
inc
mov
xor
push
inc
stc
rorl
mov
sahf
lahf
lea
and
dec
jne
mov
mov
test
jge
xor
push
jmp
mov
push
popf
mov
jmp
jnp
js
repz
fstl
pop
mov
aas
or
fidivl
add
jo
add
and
sbb
loop,pn
mov
cmp
std
je
mov
inc
mov
cmp
mov
in
jae
mov
or
push
loop
mov
jmp
xchg
add
ja
mov
mov
cmpl
add
ret
movsb
sbb
sbb
fs
mov
stos
push
cli
outsb
or
fcoml
pushf
imul
testb
lret
sbb
int
sub
mov
int3
out
mov
mov
fldcw
daa
sbb
push
sub
in
roll
ds
sub
mov
jecxz
repnz
jp
adc
dec
daa
out
scas
push
iret
push
into
jl
inc
icebp
or
pop
pop
pop
rorb
aam
aas
dec
pop
push
push
pop
repz
jecxz
pop
enter
or
pop
xor
mov
scas
mov
pushl
inc
sub
dec
jle
into
jbe
fisubrl
inc
inc
pop
fimull
push
add
push
sub
outsb
loop
pop
idivb
sbb
cltd
in
mov
jnp
scas
jmp
xor
jg
mov
and
push
jecxz
lock
xorb
pop
dec
adc
cmc
rcr
js
insb
into
sbb
add
imul
adc
and
push
cmp
push
sub
outsb
stc
pop
or
xor
hlt
mov
popa
cmp
fistpll
loop
and
dec
jle
packssdw
mov
insb
cmp
andl
push
sbb
rcl
mov
cs
fs
push
ds
add
dec
fdivs
jmp
stos
dec
jle
push
loopne
fcompl
mov
bound
fsubrs
dec
mov
inc
or
iret
out
add
out
fcompl
mov
mov
mov
xor
fistpll
mov
and
xor
icebp
imul
sub
lds
gs
insb
or
fs
pop
das
nop
mov
fs
pop
inc
fstpt
roll
cmp
pop
fst
mov
dec
stos
movsl
and
mov
push
sbbb
notrack
test
out
jle
test
inc
jp
ret
and
lods
fcmovb
add
and
lcall
push
jbe
cmpsl
sub
xchg
icebp
movsl
jnp
cmp
sbb
mov
adc
dec
ret
dec
insl
popl
je
ja
lahf
mov
cmpsb
fdivs
push
leave
xchg
lock
lcall
and
sub
lds
push
push
fmuls
jns
xor
pop
mov
jg
push
mov
pop
mov
xchg
mov
pop
xor
push
pop
xor
lcall
outsb
shlb
lods
mov
movsb
push
mov
into
xchg
scas
mov
clc
pop
sbb
sbbb
add
xor
ficomps
js
dec
mov
fidivl
mov
mov
mov
lods
aas
xchg
popf
in
imul
js
mov
xor
jp
es
int3
cmp
mov
sub
das
lret
aad
adc
mov
jb
mov
aad
fisttps
clc
lcall
popf
orl
int3
rcrb
adc
pop
sub
rclb
movsb
loop,pt
fwait
gs
mov
adc
lret
mov
lcall
js
icebp
mov
xlat
xchg
push
pop
incb
dec
test
test
and
bound
imul
cwtl
mov
lret
iret
sbb
xchg
add
leave
inc
into
mov
inc
jmp
sub
in
in
je
aas
mov
xchg
sub
mov
adc
ret
mov
ret
sub
xor
push
addr16
push
and
pushf
mov
pop
mov
sbb
mov
add
dec
xor
jns
pop
adc
jne
dec
mov
pop
out
outsl
test
inc
or
mov
adc
jg
cmp
into
mov
add
mov
jp
es
pusha
xorl
inc
or
ror
roll
stc
mov
or
mov
hlt
pop
xlat
mov
stc
jl
out
xor
popa
sbb
popa
scas
push
fldln2
cmp
adc
pop
sti
je
loopne
lods
hlt
add
inc
mov
out
sahf
push
add
std
dec
dec
rcll
push
enter
and
push
test
xchg
in
ljmp
les
inc
insl
inc
sub
fistpll
fidivrl
xor
push
jbe
mov
inc
lcall
pop
sbb
jbe
pop
enterw
mov
test
neg
cmpl
mov
xchg
cmpsl
out
ret
std
sub
inc
aaa
or
adc
mov
sbb
inc
push
cltd
aas
out
daa
adc
sbb
cmp
les
movsb
cmc
pop
and
test
ljmp
push
adc
ret
test
aam
mov
clc
mov
add
dec
cltd
xor
sub
mov
fsubrp
ss
mov
pop
jmp
add
inc
cmpsl
jae
xchg
fnstsw
ljmp
mov
sub
add
adc
cltd
mov
shll
sbb
dec
out
gs
shl
hlt
sbb
dec
jmp
sbb
or
repz
jle
inc
jl
fmuls
sbb
mov
clc
mov
push
xchg
push
gs
and
sub
pop
fsubr
int
loop
hlt
lds
test
nop
imul
in
cmp
pop
dec
in
cmp
ret
fcmovbe
inc
in
add
cmp
cmpsl
dec
and
lahf
stos
stc
movsb
dec
aad
shrl
inc
pop
daa
aad
push
in
mov
rolb
and
je
jecxz
je
cmp
rclb
movsb
inc
fiadds
insl
and
test
mov
xchg
in
pushf
jae
pushl
cltd
push
pop
push
rorb
cmp
into
add
push
cmp
push
inc
psllw
sbb
push
and
out
icebp
lea
mov
add
mov
fdivs
dec
mov
outsb
test
cmp
mov
rorl
inc
push
insb
fbstp
mov
nop
in
bound
loopne
or
loopne
jp
test
sbb
dec
mov
push
pop
inc
gs
or
dec
push
mov
dec
fwait
mov
repnz
add
pop
cmp
repz
push
xor
and
bound
sub
adc
cmp
sti
frstor
xchg
and
sbb
xor
stos
pop
dec
adc
or
and
ds
jge
mov
bound
sbb
xor
gs
jecxz
ljmp
ret
jae
fdivl
or
sub
jb
repnz
ljmp
into
andl
mov
xchg
out
popf
and
mov
outsl
adc
ss
fcoms
dec
cmc
fidivrl
cmc
gs
pusha
icebp
pop
rorb
test
jl
mov
lock
add
ret
pop
ret
fistpll
and
sbb
aad
sub
repnz
add
fwait
sub
push
dec
push
inc
or
push
cs
pop
pop
cwtl
out
fdivs
mov
xlat
mov
adc
imul
pop
ja
lret
cltd
sub
xor
stos
cmp
inc
loop
sbb
cltd
mov
pop
mov
div
in
lds
mov
ret
lds
adc
icebp
lds
in
xchg
adc
shrb
or
std
es
icebp
loopne
fldl
sbb
pop
push
ljmp
pop
mov
xor
loopne
mov
lods
jle
les
nop
pop
mov
add
jae
aas
push
imul
or
fsts
cmp
je
sti
nop
lods
jne
aas
pusha
jge
mov
fisttps
test
cmpsb
je
mov
xor
cmp
adc
adc
mov
arpl
iret
and
xchg
sub
and
sub
cs
xchg
xchg
faddl
mov
sbb
or
mov
jecxz
mov
cmp
push
jecxz
inc
in
inc
xchg
mov
dec
lods
sbb
xchg
sti
out
in
add
lods
mov
push
lods
cmp
inc
shrb
pop
jns
add
pop
jne
mov
lods
jl
popa
mov
andl
dec
insb
mov
movsb
cli
or
mov
lods
or
into
mov
inc
jg
repz
mov
je
es
repnz
mov
push
cs
mov
ret
jmp
aas
jo
jmp
mov
aaa
cltd
mov
pop
jnp
stos
and
clc
mov
loopne
cmp
aaa
and
dec
loopne
cmpsl
xor
fcoml
repnz
mov
cmp
fsubl
or
mov
or
jns
mov
sbb
pushf
cmp
cmpsb
push
mov
rorl
lret
jns
in
mov
inc
jle
addb
or
xchg
outsl
xor
call
movsl
dec
push
and
mov
addr16
arpl
rcrb
xchg
xchg
xabort
fs
push
int3
rol
mov
or
daa
stos
sub
and
sub
jmp
adc
inc
lahf
xor
and
ret
repz
sub
cmp
pop
adc
mov
dec
xor
push
xor
adc
add
sbb
add
cli
mov
test
loope
cmpsb
dec
idiv
popa
pop
push
mov
mov
xor
xor
add
lods
in
or
adc
adc
fs
adc
jg
push
movsl
js
clc
fidivrs
test
or
cmpsb
fbstp
xchg
pushf
mov
jp
push
test
inc
mov
add
jle
mov
test
sbb
mov
jbe
inc
mov
jae
pushf
gs
je
lcall
std
inc
bound
add
stos
sbb
pop
subb
mov
loopne
loop
hlt
mov
sbbb
ret
xor
jnp
cltd
xchg
out
movsl
pop
cli
add
mov
sub
xchg
mov
or
bound
repz
jae
xchg
aaa
dec
mov
cs
imull
cli
cmpsb
push
out
icebp
dec
push
lds
lock
push
dec
mov
pop
fs
inc
incb
fwait
push
jno
daa
lcall
leave
dec
xchg
jnp
inc
jno
ljmp
jbe
inc
in
xchg
push
xchg
mov
fsubr
aam
insl
lods
xchg
inc
shl
test
inc
loopne
pop
call
add
mov
ret
mov
loop
adc
xchg
xor
sub
out
mov
in
cmp
xchg
push
pop
cmp
sbb
jne
seto
scas
in
add
mov
mov
leave
xchg
mov
push
in
andb
leave
andb
adc
and
dec
adc
add
int3
pop
bound
cmpsl
test
mov
call
mov
stc
lret
jge
sub
cmp
sub
cmc
mov
sbb
inc
mov
movsb
jb
ja
push
icebp
pusha
inc
add
aas
or
cltd
outsl
xchg
and
in
inc
adc
roll
push
xor
in
xchg
ss
pop
cmc
imul
inc
xor
cmc
sbb
dec
jb
dec
mov
inc
nop
lahf
adc
mov
lods
in
push
aad
jecxz,pn
cli
arpl
cmpl
ljmp
cmp
sub
pop
xchg
stos
into
std
dec
jno
mov
lds
push
or
mov
mov
fstl
mov
and
and
mov
notb
fwait
pop
cwtl
and
in
pop
mov
shlb
and
das
fsubs
loopne
int
lock
fwait
push
jl
clc
adcb
stos
pop
ficoms
gs
jge
int3
rcl
add
popf
pop
xor
enter
je
lcall
in
cmpb
mov
inc
mov
cwtl
mov
pushl
in
mov
dec
jae
cli
addr16
ret
test
xlat
clc
cmc
divb
and
movsb
mov
ffreep
xchg
sbb
test
divb
jno
dec
stos
sti
jmp
adc
icebp
sbbl
into
dec
cmpsl
scas
xor
pop
pop
iret
enter
les
xor
sets
cmp
inc
jne
ds
addr16
pushf
leave
mov
popf
jnp
pop
add
in
mov
int
int3
incl
out
lret
cli
push
lods
lcall
jecxz
mov
push
movsl
lcall
cwtl
xchg
mov
mov
pop
aad
pop
and
lcall
ja
cmpsb
addr16
daa
mov
mov
or
int
pop
fwait
mov
mov
adc
scas
and
push
jo
movsb
inc
cmp
pushf
fucomp
rorl
xchg
test
inc
sbb
xor
pusha
cltd
enter
fisttps
jp
data16
insl
cmp
inc
or
mov
jle
cmp
cwtl
mov
mov
xchg
jle
lods
sbb
jle
cmpl
mov
das
lock
gs
inc
fcmovnbe
mov
push
push
xor
repz
fwait
popf
jp
mov
mov
shl
xor
rorl
cwtl
test
xchg
mov
push
pop
lods
test
lock
into
mov
scas
push
sbb
xcrypt-ofb
cmpsl
jmp
cmp
push
lods
out
aas
add
jle
sbb
loopne
xchg
mov
insb
dec
adc
inc
mov
lods
mov
stc
cmp
xchg
sub
mov
pop
fnsave
xchg
std
pop
sub
cmp
mov
iret
in
or
jge
enter
mov
out
adc
dec
fistpll
and
lds
pop
mov
mov
jno
repnz
rcl
push
out
xchg
dec
jge
movsb
fists
scas
test
adc
adc
in
mov
fistl
cmpsl
adc
int3
mov
or
mov
ds
stos
sub
mov
ret
mov
mov
mov
or
add
cltd
insl
das
cmp
pop
dec
inc
cwtl
mov
iretw
adc
icebp
mov
pop
and
aas
xchg
and
inc
lahf
cld
fs
pop
cmp
mov
in
fiadds
xbegin
stos
mov
add
add
jno
lret
cmovae
xchg
aaa
push
add
ret
and
mov
lcall
es
ja
mov
jp
insl
insl
gs
push
sbb
and
push
mov
ja
pop
mov
push
push
lahf
jle
mov
js
mov
inc
les
sub
xchg
test
xor
inc
mov
shlb
adc
add
add
jl
mov
aam
das
push
insb
arpl
mov
and
xor
mov
sub
repnz
std
mov
cmp
push
rorl
cmp
jmp
mov
pop
xor
shll
rclb
mov
data16
adc
icebp
lods
adc
mov
inc
fiadds
xchg
pop
cli
pushf
dec
fdivr
lret
sub
fistpl
inc
insl
ss
pusha
fstpt
or
stc
sbb
jmp
out
push
cltd
cmp
shll
inc
lea
and
test
push
aaa
lods
in
xor
es
pop
fs
cmp
xchg
sub
cli
mov
out
stos
mov
adc
pop
inc
pop
sub
mov
int
or
adc
jg
jmp
insl
nop
sti
sub
sub
cld
negl
cmp
pushf
jle
sub
mov
lret
movsb
clc
andb
imul
and
dec
sub
sti
fndisi(8087
mov
push
mov
mov
dec
mov
loop
subb
mov
sbb
icebp
mov
sbb
std
dec
push
sub
mov
ret
push
push
xchg
loope
dec
lret
test
pushf
test
movsl
inc
inc
outsb
test
xor
fists
xor
jge
pop
loope
dec
adc
sbb
lret
fnstenv
loope
or
jae
push
lret
icebp
push
jae
pop
std
and
outsl
shrl
push
jno
fcmove
mov
inc
aas
push
inc
mov
movsl
add
fwait
mov
frstor
cld
lahf
lahf
and
test
fwait
sbbl
adc
rcrl
insb
push
dec
sub
xor
inc
je
xor
das
adc
xchg
push
cmp
pop
add
stos
stos
in
lret
jo
push
jmp
push
and
add
or
enter
getsec
push
pop
es
mov
mov
addr16
xor
jb
add
ss
xorl
pop
jle
fisttpl
xchg
xor
push
or
mov
and
sub
adc
xorl
and
mov
sti
in
xchg
out
pop
imul
push
nop
mov
xor
out
push
jb
jo
mov
mov
mov
or
dec
lcall
mov
insb
sbb
adc
and
pop
hlt
sub
jo
cmp
test
cmp
sub
inc
enter
sub
in
inc
aaa
jae
clc
popf
je
les
jno
test
arpl
push
jle
les
lret
push
fstpt
sub
repnz
pop
sub
add
ret
jecxz
stc
int3
cmp
pusha
call
or
scas
mov
jmp
mov
fs
cmp
or
jp
stc
sbb
mov
daa
ret
xchg
push
gs
inc
insb
inc
sbb
push
dec
or
ret
fwait
jmp
dec
lods
shrb
frstor
dec
pop
mov
sub
ficompl
cmp
xor
ljmp
jne
pop
sub
outsb
stos
pop
aaa
iret
mov
rol
imul
xchg
jge,pn
cmp
mov
pop
sbb
sti
loope
test
pop
cmpsl
pusha
jg
lret
jp
jbe
mov
ret
mov
cmp
lock
mov
sub
xor
addr16
push
sub
pop
les
sar
lret
loope
jp
jo
out
xchg
inc
mov
push
scas
xlat
cwtl
lods
cltd
scas
ja
mov
pop
dec
xchg
scas
or
insb
mov
push
and
push
pop
xchg
cmp
inc
in
cmp
and
cmp
sub
or
ret
in
push
lcall
jns
add
sub
imul
adc
sub
iret
int3
and
fld
fmuls
out
imul
fnstcw
push
into
daa
xor
sti
mov
xchg
xchg
jecxz
xor
inc
mov
call
int
int
rorl
dec
enter
and
fidivrl
inc
fwait
popa
movsb
push
inc
shll
jno
mov
adc
push
ficoms
ret
faddl
in
leave
xor
stos
push
jno
repz
adc
ds
or
popa
stos
xchg
push
fwait
add
or
addr16
sbb
clc
push
out
fucomp
cmp
out
loope
in
pop
outsb
cmp
pushf
add
stos
push
aaa
fdivrl
js
dec
dec
aam
sbb
mov
mov
pop
ja
imull
jge
jns
rcll
icebp
jp
jge
cmp
or
push
pop
xchg
pusha
fwait
add
sub
cmp
imul
cs
xchg
les
nop
jo
dec
stos
jbe
xchg
lods
cmp
addr16
cmp
scas
stos
stos
cmp
lret
imul
dec
pop
dec
fistl
push
or
cmp
into
aad
jnp
mov
cwtl
mov
jge
pop
jge
mov
xchg
jae
jae
mov
lcall
fs
mov
cltd
push
and
aad
lea
leave
adc
cmp
stos
mov
fldt
pop
addl
jge
shr
and
out
inc
inc
mov
jns
push
fimull
adc
mov
repnz
hlt
sub
arpl
sbb
jnp
movsl
and
dec
mov
int
nop
mov
mov
add
test
loope
mov
pop
rcrl
sub
cmpsb
cmp
mov
lock
outsb
pusha
adc
mov
pop
pop
mov
int3
jmp
sarl
outsl
cmpsb
in
pushf
push
or
incl
mov
aaa
push
sti
mov
cmp
pusha
sub
daa
pop
int3
sbb
or
push
movsl
xchg
pop
loopne
fidivrl
sub
sbbl
ret
dec
mov
cmp
sub
adc
fwait
stc
pop
call
ret
and
loop
xchg
aad
add
fwait
and
mov
xchg
add
das
loope
fs
mov
adc
test
aam
mov
inc
lds
fcmovbe
nop
and
pop
jle
sahf
mov
repz
leave
pop
jmp
adc
clc
push
cmp
jmp
pop
cmp
and
incl
not
dec
sub
xchg
dec
push
es
hlt
xor
jnp
mov
out
mov
stos
mov
sbb
mov
and
cltd
adc
loope
and
rcrb
inc
xchg
je
pop
push
adc
add
stos
scas
pop
enter
dec
mov
lods
lret
add
cltd
mov
mov
push
mov
cmp
pushf
testb
cs
sbb
lahf
icebp
data16
mov
sbb
mov
cld
add
mov
icebp
jo
lock
inc
ud2
xchg
xor
pop
cmp
or
xor
lock
in
and
lcall
cmp
fdivs
lret
adc
adc
or
xor
adc
loop
popa
fsts
scas
cmp
cmp
jnp
hlt
xchg
sub
ss
insl
inc
dec
iret
jae
cwtl
pusha
clc
mov
push
sbb
xor
sti
scas
add
add
cmp
aas
mov
fsubrl
stc
mov
cmp
cmp
fidivrl
add
daa
or
mov
push
in
cmp
mov
dec
lock
mov
pop
cmp
mov
or
cmp
adc
arpl
xchg
pop
sub
jp
adc
ss
sbb
insl
pop
ss
shrb
or
fiaddl
mov
xchg
sbb
popa
mov
outsl
adc
xchg
or
jne
xchg
js
jo
sbb
pop
outsb
pop
cli
mov
ret
inc
cmpb
mov
push
je
jmp
or
cmp
add
lds
sub
clc
out
mov
mov
dec
sub
inc
dec
jbe
or
decl
mov
sub
and
mov
ja
adc
mov
adc
gs
icebp
cmp
mov
dec
dec
inc
mov
jmp
rorb
mul
into
outsb
inc
lret
les
ljmp
stos
jb
loopne
mov
or
test
push
cmpsb
pop
push
add
mov
imul
adc
sbb
push
mov
dec
lock
inc
in
cmpsl
add
add
push
push
ret
xlat
in
mov
push
fdivs
aaa
js
lcall
mov
cmp
sarl
movsb
sub
lcall
push
fisttpll
jle
mov
ret
xor
xor
cld
pop
push
fcmove
xchg
icebp
in
in
mov
adc
stos
sbb
cmp
scas
mov
xor
out
hlt
mov
std
xchg
push
ret
dec
into
pop
xor
mov
pop
push
add
jo
sub
jb
stc
negl
sahf
and
mov
mov
out
pop
lret
addr16
adc
and
adc
mov
cmpsb
add
dec
lcall
outsb
jae
push
add
stc
or
mov
xor
sub
xorl
add
js
sbb
sahf
push
dec
stos
pop
sti
push
adc
sub
push
fisubl
push
inc
mov
fldl
jge
or
jmp
xchg
xor
aad
roll
and
stc
cmp
lret
mov
pop
in
stos
dec
outsb
out
sbb
lret
mov
mov
rcrb
add
and
xor
pmaxub
aaa
cmp
push
pop
out
ljmp
ficoml
arpl
mov
mov
mov
roll
adc
orl
ss
out
loop
inc
mov
jle
jl
lods
add
clc
pop
test
lock
je
mov
inc
jl
lret
fisubrs
mov
aas
aad
scas
lods
inc
cmp
mov
in
push
js
sbb
iret
sub
add
outsl
cld
mov
movsb
cs
xlat
inc
mov
lcall
adc
adc
insb
sar
aam
pop
loope
cmpsl
xor
clc
adc
adc
pop
xor
and
inc
push
cmp
sbb
push
sbb
faddp
pop
xchg
mov
lcallw
adcl
pushl
mov
call
orl
inc
in
es
cmp
lea
lods
jnp
cltd
mov
mov
add
int
pause
loope
add
cmp
icebp
mov
mov
hlt
mov
push
push
jb
pop
mov
push
mov
or
add
jbe
sbb
cmc
in
ret
imul
enter
int
cld
outsl
dec
sbbb
sahf
fwait
popf
push
sub
imul
sbb
rcr
stc
pop
je
add
inc
ljmp
movsl
fnsave
leave
cmpb
mov
add
dec
adc
mov
hlt
fstps
iret
inc
push
xacquire
js
mov
pop
rcll
sahf
pusha
sbb
push
ja
call
xor
jmp
scas
jae
add
add
dec
fidivs
or
test
cmp
jno
gs
call
mov
pop
cmp
ret
xchg
addr16
push
dec
xchg
push
dec
jo
jne
mov
fcomi
fisubl
xchg
add
movsb
ds
add
sbb
sbb
or
jmp
pop
es
jb
test
inc
adc
and
push
nop
mov
xchg
dec
shrl
mov
inc
xor
pop
es
or
pop
pop
add
and
fwait
pop
xor
pop
in
adc
sub
cmp
test
dec
adc
aaa
addr16
jmp
mov
loopne
mov
mov
sbb
jge
pop
cmp
xchg
in
push
jns
stos
or
push
aaa
mov
xchg
insl
movsb
jg
les
test
cmp
jno
ss
xor
repz
out
push
xor
sub
mov
and
cmp
adc
fistpl
inc
inc
xchg
add
in
push
dec
cltd
mov
int3
or
jbe
rorb
inc
int
push
loope
fs
enter
jbe
push
adc
push
ss
loopne
repnz
jne
dec
ja
in
lock
adc
jmp
pop
cmpsl
push
popa
insl
xchg
adc
sahf
lret
pop
mov
add
xchg
push
lret
pop
gs
test
in
xchg
out
lret
mov
stos
mov
cmp
mov
pop
rolb
cld
lea
sub
or
rcrl
stos
pop
pop
std
fsts
xor
cld
mov
rorb
cmp
out
xor
sub
es
stos
xchg
out
aas
mov
mov
lret
test
cwtl
nop
ret
stos
jmp
in
mov
lret
clc
jg
mov
ficoms
inc
rorl
dec
dec
push
jae
inc
cmp
add
xchg
inc
sub
xchg
mov
jnp
iret
cltd
popf
push
jg
ljmp
cwtl
sbb
test
popa
lcall
mov
lods
stc
jp
xchg
xor
mov
imul
insl
js
cmc
or
test
leavew
sbbb
test
iret
in
pop
push
in
insb
out
test
jo
mov
lds
lret
or
pop
add
xlat
or
mov
movlps
add
xor
js
or
aam
rclb
pop
cwtl
pop
jne
inc
stos
sub
call
pusha
pop
stos
out
enter
pop
add
xor
loop
testb
cltd
add
insb
cld
lret
pop
outsl
xorb
out
test
test
adc
iretw
fdivr
imul
jmp
mov
aad
jbe
jno
iret
hlt
fadd
pop
arpl
rclb
fcomi
fldt
lahf
jmp
aad
push
out
sbb
pushf
subb
xor
pop
dec
or
pop
lock
cs
lds
mov
lahf
and
sbb
lea
dec
int
xlat
adc
lods
mov
mov
jo
pop
repnz
dec
lea
popa
add
xor
lcall
mov
mov
outsb
enter
mov
push
scas
jge
fdivrs
push
ss
adc
loopne
mov
pop
mov
or
jne
sbb
mov
outsl
inc
inc
daa
xchg
inc
sbb
roll
fwait
bound
leave
add
inc
lcall
xchg
test
das
cs
push
or
popf
cmp
cs
push
jl
outsb
push
pop
daa
ret
popa
sbb
ss
mov
icebp
xorb
pushf
pop
jge
pop
lcall
int
int
das
add
mov
lods
out
push
sti
daa
jg
mov
insl
xchg
jp
ficoms
mov
fistl
push
add
mov
inc
cmp
out
adc
insb
fldt
cwtl
cltd
sub
jne
sub
enter
push
aaa
dec
sub
xor
mov
into
aaa
jmp
jb
mov
jns
mov
and
dec
mov
imulb
aas
pop
iret
scas
or
mov
fnstenv
iret
push
lcall
pop
mov
out
std
imul
pop
inc
sar
jmp
xchg
inc
adc
das
shll
repz
dec
xorb
jmp
test
mov
loop
loopne
call
js
test
pop
and
pop
cmp
pop
nop
jecxz
xchg
dec
add
into
push
add
mov
loopne
xchg
fadds
repnz
jg
mov
push
repnz
movsb
xchg
lods
cmp
dec
icebp
decl
aam
pop
out
mov
rcr
cmp
scas
cld
inc
imul
sbb
enter
push
push
inc
sbb
lods
movsb
mov
add
sub
pushf
and
mov
jmp
orb
xor
es
push
fiadds
test
call
ljmp
lcall
cli
mov
scas
insb
test
les
cwtl
test
sbb
mov
cmc
testb
jbe
iret
stos
mov
sub
lret
push
inc
lock
cli
add
mov
add
bswap
inc
dec
jg
ljmp
mov
mov
lcall
inc
pop
into
and
loopne
mov
adc
les
mov
add
mov
pushf
add
fstl
xchg
dec
out
fistpll
popa
sbb
or
jge
fs
lahf
sub
loopne
setge
mov
mov
jnp
mov
gs
push
es
aaa
mov
and
hlt
dec
inc
push
inc
shrb
icebp
adc
adc
mov
cmp
fistpll
aad
add
test
jl
fbld
mov
insl
pop
das
enter
xchg
xchg
xlat
mov
lods
lcall
or
jnp
cmpsl
mov
rcrl
popf
call
adc
je
dec
test
and
out
push
pop
push
outsl
dec
jo
xor
adc
push
jl
lret
out
push
mov
xchg
lods
dec
stos
leave
cwtl
mov
push
lods
bound
push
arpl
jmp
fisubl
push
fwait
stos
test
jle
adc
cld
arpl
dec
popf
into
push
cmpsl
int3
fisubrl
mov
push
insl
mov
mov
pop
scas
mov
push
xchg
or
icebp
dec
push
sub
xchg
loope
dec
leave
je
sub
mov
xchg
lds
sub
cmp
jmp
fwait
mov
lea
add
addr16
insl
jmp
nop
jb
neg
cmp
sub
js
shl
xchg
lret
addr16
xor
lret
push
sub
and
cmp
aad
or
push
adc
insb
jp,pt
hlt
add
data16
mov
cmp
pushf
push
mov
inc
icebp
aaa
or
mov
pop
test
orl
xchg
and
ret
out
int3
cmpsb
push
xchg
jle
sbb
mov
mov
inc
sub
int3
aam
fdivrs
cld
icebp
mov
xor
out
lahf
jg
add
dec
jge
dec
mov
notb
cmpb
outsl
rcl
lcall
leave
sub
lret
push
dec
ret
cmp
sbb
xchg
aad
and
xorl
jge
orb
int
adc
cmp
inc
push
cmp
mov
movsl
jg
or
popf
nop
mov
jnp
xchg
mov
dec
andl
and
mov
out
pop
pop
mov
in
mov
test
dec
xorb
adc
add
jne
filds
fs
pop
in
cmp
stc
es
pop
test
into
push
rclb
fdivrl
mov
lahf
ja
pop
fisubs
jg
jecxz
idivb
cwtl
leave
sub
daa
xchg
dec
sbb
aam
int
sti
subb
sar
fidivrl
in
cmp
fcoml
repnz
mov
jb
inc
adc
in
xchg
push
movsl
je
jmp
add
repnz
icebp
mov
inc
or
add
adc
test
fldt
xor
add
sbb
loop
sub
pop
cmp
xor
mov
mov
cld
xor
outsl
push
es
and
mov
jns
jp
pop
xor
or
out
xor
insb
psrld
sbb
popf
and
push
fnsave
adcl
push
addr16
pop
adc
jecxz
cmp
out
jmp
xchg
aam
shl
jmp
aam
cmpsb
mov
sub
call
mov
sub
lods
xor
int3
sub
out
ss
cmp
lahf
xchg
mov
in
sub
pop
das
inc
inc
dec
pop
push
inc
ret
ret
nop
mov
or
lcall
je
fadds
iret
push
push
cmp
dec
fcoms
insb
pushf
mov
mov
popa
fwait
stos
repnz
imul
test
ss
pop
xor
lds
add
imul
mov
movsl
rcll
aas
inc
shl
inc
jnp
hlt
scas
pop
mov
jecxz
insl
mov
sub
mov
cmp
pop
adc
into
cmp
jae
or
aad
adc
in
or
loope
out
jp
loope
cld
push
push
fcmovne
xchg
inc
enter
mov
dec
xor
pop
outsb
clc
xchg
in
enter
into
mov
inc
adc
cmp
mov
in
in
xor
or
push
in
out
add
and
in
mov
fcmovu
movsl
xor
int3
test
dec
rclb
mov
cs
inc
fwait
imul
sti
out
cli
mov
push
sbb
outsb
or
mov
ds
pop
push
lods
repz
sub
cs
sbb
xlat
decb
sub
bound
clc
dec
jns
cmp
mov
mov
sub
or
sbb
cmpsb
xchg
test
imul
addb
push
fwait
pushw
inc
outsl
push
loopne
cmc
jp
sub
ds
xor
aas
popf
jo
insb
sub
shll
negb
jb
and
cmp
xchg
das
jnp
stos
shlb
xor
std
sbb
repz
lds
cmp
test
and
sbb
dec
sub
mov
les
push
test
mov
mov
inc
sbb
xor
jle
out
or
into
cmp
test
clc
cs
jnp
lcall
mov
dec
xchg
push
insl
mov
pop
adc
pop
sbb
scas
xor
jno
imul
repz
xchg
js
rclb
push
gs
push
cld
adc
aam
dec
cmpsl
sbb
jmp
sbb
rolb
jb
mov
mov
hlt
pop
push
inc
test
inc
inc
xchg
lcall
cmp
lods
nop
xlat
imul
loopne
rorb
ss
hlt
lock
pop
aad
mov
outsb
sub
sbb
push
mov
xchg
push
mov
mov
mov
hlt
dec
incb
push
movsb
daa
cmp
into
jns
mov
lock
lahf
test
in
jns
mov
dec
insl
jns
jae
jbe
xchg
sub
mov
jae
cmc
mov
pop
mov
jge
in
mov
mov
push
imul
dec
push
hlt
lcall
leave
mov
mov
pop
xchg
loope
xor
jmp
xor
rcl
idivl
hlt
sbb
push
push
mov
ss
sbb
xchg
icebp
xchg
leave
xchg
cmp
sub
pop
stos
sub
shlb
adc
add
nop
adc
js
sbb
push
aas
push
scas
xor
xorb
mov
jle
dec
cmp
inc
cmc
ret
push
cmp
roll
mov
insl
push
icebp
icebp
inc
jge
mov
or
cmp
or
xchg
insb
cmpsb
mov
int
fidivs
mov
jg
pop
in
in
and
xor
sub
into
ja
pop
sub
lahf
lods
fistpl
imul
movsb
mov
sub
dec
xchg
push
mov
out
add
daa
jae
mov
mov
xor
push
sbb
sbb
or
ret
mull
mov
push
mov
lea
mov
cmp
pusha
pusha
mov
icebp
in
sbb
jo
or
jge
xor
and
jns
sbb
lret
pop
push
inc
mov
adc
pop
insb
scas
push
mov
cwtl
add
pop
popa
bnd
loope
sarb
ljmp
repz
ljmp
ja
cld
stc
repz
loopne
enter
or
stc
idivl
fisubs
xor
scas
push
sub
mov
mov
mov
push
in
xor
repz
push
lock
aas
mov
rcrb
xor
fidivrs
je
int
shlb
loope
add
xchg
lret
push
and
arpl
pop
push
mov
int3
out
aad
ret
add
pop
jg
xor
imul
hlt
std
loope
data16
mov
faddl
pop
les
mov
adc
pop
es
fistpll
cltd
fdiv
sub
sbb
data16
out
inc
sub
pop
push
xchg
jg
jecxz
test
js
arpl
sbb
imull
pop
imul
sahf
das
pop
cltd
aas
les
or
jge
mov
aam
mulb
jl
pop
loop,pt
rcrb
cli
aad
fdivl
mov
mov
sub
cmp
add
jbe
jns
incb
out
sarl
outsl
fists
add
pop
cwtl
pushf
push
push
inc
imul
sub
mov
unpckhps
xchg
push
xchg
adc
sbbb
cltd
ret
and
popa
fwait
pop
testb
stos
int
xor
add
insl
test
into
pop
xchg
push
out
aas
jle
fwait
sti
popa
pop
xchg
icebp
cs
cmpsb
leave
inc
adc
fwait
hlt
sub
cmpsl
add
adc
es
loop
or
aaa
enter
xlat
xor
in
movl
arpl
bound
aas
mov
lahf
mov
jbe
mov
xor
aaa
jmp
fs
pop
xor
aaa
decb
cmpsl
push
js
pop
es
sbb
das
mov
sbb
mov
xchg
aas
flds
jns
dec
test
push
stc
xchg
cld
jge
and
add
jge
movsl
dec
jb
leave
in
cwtl
std
mov
jae
inc
jecxz
xchg
push
pop
push
cs
cwtl
rcrl
and
test
sub
inc
and
mov
mov
adcb
cwtl
inc
adc
sub
mov
cmp
jo
shl
in
cmp
push
push
jnp
out
sbb
mov
jb
les
orb
gs
push
dec
push
aas
repz
sub
jae
mov
bound
movsl
mov
hlt
clc
and
pop
bound
sub
push
inc
pushf
fwait
mov
andl
repz
cltd
inc
divb
xchg
aad
bound
arpl
orl
sub
aad
or
inc
xor
xor
dec
mov
mov
scas
sub
rcrb
mov
out
push
mov
adc
sbbb
add
dec
adcl
pop
jmp
and
test
ffree
push
loope
ja
aam
mov
bound
into
mov
imul
lods
inc
cmp
push
test
int
pop
test
ss
xchg
int
jae
outsb
sbb
js
pop
jno,pt
xchg
call
iretw
adc
push
mov
shrl
sbb
xor
push
into
mov
popa
xchg
sub
xchg
movsb
sub
jb
pop
hlt
dec
sub
cmp
fstpl
daa
pop
popa
aas
jo
mov
xor
popa
cmp
sbb
daa
mov
out
std
cs
dec
unpckhps
addr16
fcoml
fsubrl
aas
jp
mov
movsb
jns
pop
inc
xchg
out
ss
add
mov
stos
sbb
sbb
push
std
ret
or
cmpsl
sti
dec
scas
cmp
dec
fidivl
sbb
xor
mov
jp
outsl
sti
mov
mov
or
push
movsl
std
jnp
lods
sbb
lahf
icebp
loope
cld
mov
addr16
int3
or
pusha
mov
sarl
sbb
add
pop
mov
and
xchg
stos
lret
nop
pop
not
sarl
mov
stc
int3
data16
jns
dec
dec
fmulp
adc
out
xor
pop
repnz
cmpsl
lcall
xchg
pop
cmc
pcmpgtw
mov
xor
mov
push
pop
inc
adc
iret
mov
or
js
pop
lea
inc
push
mov
cs
xchg
dec
sbb
fldenv
push
sub
and
ss
scas
jl
inc
aam
pop
shrb
int3
aaa
rcrl
aaa
das
rcll
icebp
aaa
xor
and
lods
xor
mov
into
pop
lea
lahf
xor
jae
xor
insb
mov
or
arpl
enter
sbb
dec
lds
xor
xchg
xor
sbb
jo
push
fldenv
xor
jle
mov
lcall
outsl
sub
pusha
out
int3
mov
bound
cmp
rcl
xorl
jo
push
ret
or
out
lods
add
test
or
sahf
mov
cmpb
insl
pop
lcall
adc
mov
js
mov
addr16
gs
and
mov
mov
imul
int
or
movsl
fadd
inc
xchg
fistpll
fs
dec
lds
jecxz
or
mov
dec
je
movsl
lret
ret
lret
int3
aas
and
das
pop
jl,pn
stos
in
push
lods
xchg
idivl
loop
ja
push
scas
clc
or
mov
mov
fidivrs
mov
fisubrs
adc
jo
inc
push
inc
dec
lahf
dec
mov
sub
into
and
push
pop
jle
cmp
jo
jmp
in
outsb
jne
push
sbb
rclb
repz
pop
aaa
dec
mov
hlt
inc
inc
sbb
insb
lcall
and
xchg
loop
mov
sbb
loope
or
sar
or
cmp
mov
pop
popa
lds
pop
xlat
dec
das
std
dec
jbe
stos
adc
mov
dec
call
je
mov
out
jge
or
leave
mov
add
cmp
cli
pop
or
sbb
hlt
int3
lea
xchg
loop
lds
fcmovnb
jecxz
mov
cmp
xchg
xchg
dec
mov
mov
push
ret
notl
popf
imul
lret
fnstsw
lods
ljmp
lea
fwait
cmp
cmp
push
adc
or
repz
push
fcmove
outsb
xor
and
dec
inc
add
xchg
popa
add
add
jmp
mov
mov
inc
xchg
jnp
jo
sub
pop
in
jne
jl
cmp
inc
mov
add
mov
stc
mov
fcompl
subl
orb
shll
sbb
mov
sub
push
xchg
xor
lea
imul
arpl
and
mov
add
into
pop
push
xchg
iret
add
cmp
jb
pop
jge
std
aas
pop
fcomps
push
xchg
imul
jne
punpcklbw
mov
sbb
sbb
push
add
call
cmp
adc
or
mov
mov
aam
xlat
js
xchg
jns
aam
ss
enter
fisubs
inc
push
jb
mov
lahf
fsubrl
push
push
insl
or
sti
mov
sub
xor
adc
inc
outsl
push
nop
sbb
cmp
lods
cmp
fmull
add
fistps
push
push
or
mov
sub
fisubs
mov
adc
test
mov
andb
inc
gs
popa
mov
out
sbb
inc
insl
or
dec
int3
popa
mov
push
pushf
data16
cwtl
fiaddl
das
jp
scas
add
add
int3
dec
adc
cmpsl
jecxz
lret
add
rcrb
inc
pushf
add
out
sarl
inc
add
fsub
mov
addr16
mov
lods
repz
repz
movsl
and
adc
cmc
int
stc
xlat
mov
push
jg
lret
bound
loopne
ds
movsl
lods
test
jmp
or
je
into
in
mov
hlt
scas
fwait
dec
jns
cmc
loope
jne
popa
mov
outsl
mov
fldt
or
inc
jl
movsb
jnp
adc
insl
mov
xorl
cld
stos
das
xor
dec
jle
add
push
mov
cwtl
jb
jecxz
or
sub
mov
sbb
je
rorb
xchg
clc
adc
sub
or
ficoml
push
stos
sbb
fcoms
out
mov
lea
fcmove
and
push
mov
push
mov
mov
sbb
xlat
repnz
call
je
lock
pop
mov
imul
out
lea
ljmp
cltd
sbb
rol
sub
stos
add
add
insl
mov
cmp
xor
sbb
pop
or
inc
jle
inc
mov
push
ljmp
cmpsb
test
xor
cli
sbb
mov
lcall
lret
push
jo
insl
mov
imul
inc
inc
stos
clc
adc
cltd
sub
add
stos
mov
bound
inc
inc
loop
xchg
xor
outsl
inc
jno
rcr
orl
cmp
push
popf
lods
pop
das
xchg
pop
ret
fs
jo
fdivp
in
inc
push
mov
and
dec
pop
cmp
bound
push
sub
das
sti
mov
push
cwtl
addr16
push
divb
mov
jmp
sarb
jb
and
sbbl
inc
jle
xlat
mov
faddl
inc
data16
jmp
mov
xchg
sub
xchg
dec
xor
aad
int3
in
xchg
dec
and
out
xor
or
addb
or
stc
and
int
push
mov
mov
fs
rorl
mov
leave
mov
mov
push
fwait
xchg
push
out
out
ss
push
pop
sbb
pop
mov
rcl
pop
push
rcll
arpl
les
fsubrs
divb
adc
and
outsl
add
sub
dec
cli
cmc
mov
mov
fcmovu
cli
sbb
sbb
inc
std
mov
sub
bound
dec
outsb
adc
int3
lods
sub
fsubrs
push
fnstcw
lret
pushf
ret
and
or
xchg
adc
out
xchg
xor
in
pop
pop
leave
or
ljmp
sarb
push
jb
mov
scas
mov
jne
sbb
cmp
cmpsb
mov
pop
inc
xlat
xor
lcall
sarb
jp
push
orb
scas
inc
jge
adc
mov
pop
mov
lods
push
pop
cmp
mov
sub
push
adc
or
fbstp
mulb
and
andl
divl
xor
fmul
sbb
and
pusha
sbb
fistps
inc
loopne
and
cmp
lods
mov
shr
rclb
int
mov
pop
mov
adc
add
insl
xor
cltd
mov
or
pop
rcll
lret
pop
cli
dec
pusha
das
pop
inc
test
push
sbb
cli
icebp
mov
sub
jge
rorl
cltd
push
push
jnp
cmp
test
mov
sahf
and
and
or
dec
jge
pop
lods
pushf
xchg
mov
adc
inc
rcrl
lcall
push
loope
and
xorb
loop
les
mov
and
xchg
and
popf
mov
aas
nop
or
sbb
setno
lahf
imul
dec
repnz
inc
jnp
adc
push
stos
cltd
aam
jno
imull
xchg
cmp
xchg
sbb
mov
ljmp
cmp
popl
cmp
stc
and
jno
cli
mov
jae
sub
mov
inc
or
inc
aas
stc
movb
inc
outsl
add
movsl
push
mov
xor
xlat
inc
movsl
add
mov
hlt
mov
push
ja
fstpt
xor
fnstenv
xchg
test
arpl
or
pop
cld
mov
dec
daa
cmp
mov
test
jge
in
fidivs
cmpl
xchg
rsqrtps
cmp
jbe
push
lods
int3
sti
push
pusha
movsl
push
push
fisubrs
std
xor
sahf
lock
mov
cs
mov
mov
outsb
test
es
sahf
fwait
lods
outsb
bound
andl
cmp
xchg
push
xchg
cltd
xchg
jge
mov
hlt
jle
ja
fcmovu
imul
lock
jp
pop
xor
jp
mov
daa
xchg
aas
aas
sbbb
clc
addr16
stc
lret
sub
imul
pop
prefetchnta
xlat
inc
dec
test
lret
dec
imul
and
jmp
or
into
xlat
xchg
das
aas
dec
in
ja
sbb
in
jge
inc
pop
jnp
push
popa
test
xchg
iret
ds
ret
mov
push
push
stos
push
movsl
jns
dec
stc
outsl
rol
pop
lret
sbb
sub
xchg
xchg
push
push
sub
mov
bnd
repz
es
adc
movsl
call
and
jae
hlt
xchg
pop
pop
sub
lret
lahf
xorb
xchg
lods
and
test
mov
test
call
imul
repnz
jne
cmpsb
xchg
push
and
jbe
test
pop
sub
lea
xor
xor
int3
push
mov
adc
rorb
xlat
shrl
leave
out
and
and
or
mov
push
dec
mov
stos
ret
inc
rcl
jns
mov
mov
jg
mov
dec
add
test
lods
push
dec
xchg
jne
and
stos
ja
addr16
mov
stos
mov
sbbl
jbe
jns
movsb
pop
push
or
outsl
outsb
mov
sub
aas
push
nop
dec
enter
mov
loop
les
cmp
jecxz
push
pop
jae
pop
mov
cmp
cwtl
mov
iret
cmpl
push
cmpsl
xchg
mov
lahf
adcl
jne
cwtl
sub
xor
xlat
mov
arpl
jbe
sar
pop
xchg
stc
lahf
dec
push
adc
imul
or
and
dec
pop
cmpl
add
sar
popf
test
cmpsb
push
pop
inc
dec
loop
add
mov
xor
mov
cmc
xchg
mov
jl
mov
movsl
mov
inc
pop
sarl
lods
or
movsl
or
movb
lods
cld
inc
xchg
daa
or
pop
jno
out
outsl
int3
or
mul
jne
xchg
enter
es
shrl
xchg
xchg
mov
js
dec
int3
sbb
call
rcrl
pop
mov
inc
arpl
lret
sub
in
push
xchg
aad
lds
arpl
ror
movsb
lods
ficoml
addr16
push
inc
int
aaa
mov
cmp
cmovb
inc
aad
pop
sar
pop
iret
mov
xor
imul
and
push
fs
aas
mov
leave
scas
xchg
mov
cltd
sbb
roll
test
jb
mov
lret
mov
adc
sub
hlt
fistpl
pop
inc
out
cmp
jle
adc
pop
and
push
sub
add
loop
jmp
sbb
or
adc
jge
ret
xor
hlt
jno
aam
aad
in
icebp
mov
xchg
imul
mov
cmpsl
fs
out
xor
movsb
mov
nop
iret
push
mov
lds
ret
jmp
xor
lods
imul
fistpll
and
mov
and
mov
outsl
sahf
imul
mov
cmpsb
mov
cmp
rolb
adc
pop
pop
aas
stc
add
mov
dec
and
decl
mov
pop
xor
xor
xlat
xchg
fdivrs
jmp
fldcw
rol
or
scas
mov
mov
xchg
int
daa
mov
push
int
dec
dec
mov
cmpsl
je
hlt
sub
jne
push
imul
push
mov
adc
push
cmpsb
push
incb
rclb
add
xchg
xlat
int3
xchg
cmp
fwait
and
dec
inc
jecxz
and
push
test
insb
lods
rorl
lock
xchg
popf
pop
js
fisubl
repz
fsubl
cli
mov
cltd
or
int3
cmp
pop
lret
push
dec
mov
pop
push
lock
mov
dec
icebp
push
insb
repz
lahf
cmpb
and
shl
inc
in
daa
inc
cli
iret
pusha
in
ret
es
adc
mov
mov
cld
lods
fldl
cmp
icebp
imul
push
mov
pusha
rclb
out
testb
and
mov
mov
push
fbld
inc
lcall
scas
and
adc
addb
ret
js
rcr
dec
push
stos
sub
sbb
adc
dec
mov
loope
lods
repnz
nop
cltd
popf
mov
dec
mull
sbb
arpl
outsb
ficoms
aam
shrl
and
mov
rcll
dec
clc
test
xor
sbb
mov
sub
push
ljmp
jp
fisubs
mov
fimuls
pop
push
mov
dec
mov
cmp
lahf
fidivs
dec
mov
pusha
cmc
xor
repnz
loopne
jg
inc
mov
push
hlt
sub
ss
popa
pop
or
lret
nop
addr16
xchg
ss
jge
mov
jl,pn
inc
or
mul
sub
jno
and
lods
pop
xor
mov
mov
aam
repnz
jecxz
cmp
cmp
int3
inc
inc
adc
mov
xchg
iret
dec
lods
add
lods
in
push
xchg
jo
ds
dec
std
mov
pushf
mov
int
in
hlt
dec
adc
mov
mov
xor
sti
sub
pop
push
jle
adc
and
pop
sub
cmpsl
fnstsw
dec
mov
repz
adc
fbstp
dec
jge
imul
stos
fcoms
cmp
jne
bound
mov
push
push
iret
cmp
daa
dec
data16
mov
jmp
xchg
add
das
sbb
mov
push
mov
xchg
sahf
push
out
fprem
cld
xorl
mov
pop
mov
xchg
cli
in
mov
mov
cmp
hlt
mov
fstl
or
fistps
jnp
or
lret
jg
adc
leave
mov
aas
mov
push
sub
arpl
jbe
aaa
jo
sbb
adc
push
into
push
cmp
orl
stos
pop
jb
outsb
mov
ret
icebp
out
clc
adc
sub
mov
es
sbb
jge
iret
dec
gs
mov
dec
lods
sbb
lds
xchg
pop
test
popa
sub
jb
arpl
in
adc
outsl
xor
mov
jl
es
cmp
mov
mov
xchg
cmc
pusha
lea
aaa
ja
xlat
push
bound
scas
inc
add
cli
sub
loopne
and
adc
sbb
arpl
mov
push
in
popa
and
mov
test
enter
fiaddl
xchg
mov
pushf
out
mov
loopne
repnz
aas
cwtl
cwtl
leave
pop
ss
xor
rclb
and
pop
out
movsl
mov
mov
test
add
push
out
popa
popf
sub
ret
xor
inc
inc
add
and
jle
ret
fildl
loope
xor
or
mov
test
xchg
mov
xchg
in
adc
sbbb
adcl
jmp
lods
and
jmp
pusha
mov
inc
roll
arpl
loop
sub
out
iret
add
and
sbb
mov
faddp
jae
fmul
mov
sub
xchg
ja
push
xchg
mov
jl
dec
jg
into
sbb
je
mov
js
iret
inc
mov
xchg
imul
xor
jle
ljmp
mov
mov
clc
xor
sbb
adc
fisubrs
pop
stos
cmp
or
mov
into
jmp
and
jp
dec
adc
fimull
adc
fildl
sbbb
mov
jmp
inc
fs
std
sbb
push
scas
jnp
int
cli
bound
outsb
mov
mov
mov
dec
or
loopne
push
inc
cmpsl
jno
adc
mov
cmp
inc
popf
into
dec
xchg
mov
dec
js
sbb
shlb
push
test
inc
and
dec
xchg
dec
pop
rorl
inc
cmpsl
std
mulb
mov
out
ss
mov
pop
mov
xlat
xchg
cmc
inc
inc
repz
addb
hlt
movsb
pop
test
fimuls
scas
cwtl
xor
pop
xlat
sarb
and
mov
adc
dec
mov
lcall
pop
adc
xchg
mov
lods
mov
sbb
hlt
jmp
mov
mov
mov
adc
mov
out
add
mov
xchg
adc
dec
add
and
lock
sub
cmp
movsb
dec
push
insl
adc
in
movl
cmc
rol
add
stos
pop
icebp
or
leave
sti
mov
leave
xchg
dec
insl
repnz
icebp
and
fcmovnbe
call
mov
std
mov
sub
fadds
cmp
dec
adc
jo
ret
inc
inc
je
mov
mov
movl
mov
pop
stc
jle
lock
mov
push
xchg
sbb
dec
iret
xlat
jecxz
repz
jae
jb
gs
add
pop
lahf
mov
xchg
mov
lret
es
imul
or
fnclex
pusha
lods
in
loopne
xor
and
enter
aas
mulb
cmp
std
inc
out
jbe
mov
mov
mov
hlt
popa
xor
inc
aad
in
mov
iret
in
ja
insl
cmp
pushf
and
fwait
pushl
mov
cwtl
mov
mov
fnstsw
push
scas
xor
dec
fldcw
push
daa
stc
adc
jg
mov
or
js
pop
cmp
lods
push
arpl
std
adc
or
pop
insb
mov
jecxz
add
pop
or
pop
in
push
ja
imul
lods
adc
ret
mov
cltd
inc
push
ljmp
and
test
stos
xchg
and
jecxz
add
insb
mov
dec
in
mov
adc
vucomisd
mov
mov
dec
mov
popf
das
cmp
es
inc
shr
cwtl
or
cmp
sub
xor
and
push
adc
inc
dec
flds
dec
and
loopne
mov
leave
imul
fcmovne
test
aam
mov
test
pop
cmp
test
lcall
sbbb
cmp
xchg
add
jl
aaa
fwait
mov
loop
shl
jg
ljmp
cmp
fwait
cmp
repnz
cmp
repz
outsl
notl
cmp
pusha
xchg
mov
dec
jo
inc
sbb
ficoms
ja
shrb
mov
mov
mov
jge
inc
insb
push
xchg
ret
pop
call
lods
test
outsb
sub
pop
and
cli
out
mov
stos
mov
mov
xchg
lods
fucomp
lods
repnz
cmpsl
repnz
mov
stos
pop
shll
std
leave
xor
es
aaa
and
push
mov
cli
pop
or
add
scas
push
lods
fwait
loop
out
idiv
dec
pop
aas
and
lds
push
mov
les
test
mov
out
lcall
mov
dec
movsl
jmp
dec
bound
mov
stos
and
popa
leave
daa
jae
outsb
les
daa
lahf
sbb
repnz
push
gs
mov
mov
notb
aam
stos
inc
push
jl
dec
mov
jo
enter
in
lahf
pop
dec
adc
dec
cmc
sub
stc
rolb
xor
xchg
jne
cmp
xor
xor
mov
dec
add
add
pop
inc
test
cmp
mov
mov
rcrb
push
pushf
sbb
mov
adc
repz
or
inc
loopne
add
outsl
roll
push
and
leave
cmpsl
lock
fldl
sbb
repz
in
cmp
lcall
stos
pusha
and
test
xchg
pop
nop
cli
fisubrl
adc
aas
lods
push
push
ret
pusha
out
fwait
sub
loope
lds
jo
shlb
pushf
push
fistl
out
scas
sbb
popf
jg
pushl
hlt
mov
cmp
adc
fimuls
mov
adc
sbb
jb
lret
adc
mov
xor
rcr
xlat
rorb
lds
call
push
sbb
jg
into
add
adc
jecxz
add
les
dec
pop
inc
jbe
adc
mov
adc
jl
push
mov
jns
lock
pushf
out
pop
aam
addr16
out
and
cwtl
daa
in
jmp
cmp
loopne
mov
nop
push
sti
xchg
stc
jle
sti
bound
loopne
ret
jns
hlt
sahf
inc
jo
movsl
outsb
fimuls
sbb
gs
push
and
cmp
orl
into
test
je
push
push
jbe
xchg
adc
es
push
jmp
std
xchg
das
dec
imul
mov
push
leave
cmp
and
or
inc
stos
mov
and
popf
pop
enter
bound
jae
add
lret
xor
and
lcall
mov
add
sub
mov
cmp
daa
loopne
xor
scas
std
cmp
mov
cmc
sbb
jbe
push
jnp
jle
loopne
fs
lret
jno,pn
loop
out
mov
dec
dec
mov
xor
inc
mov
cmpsl
jge
xorb
cmp
pop
jecxz
stc
imul
pop
rcrl
ds
add
mov
and
roll
int
movsb
add
mov
test
imull
test
pop
or
add
test
mov
repnz
mov
mov
sub
fildll
jbe
sti
iret
push
outsb
jnp
and
xor
jae
leave
jge
pop
nop
repz
jg
bound
sub
pushf
xchg
sbb
mov
shlb
pop
sar
xchg
xor
loopne
cmp
xor
out
pop
push
andb
cs
pop
mov
xchg
jl
mov
mov
jno
add
mov
dec
xchg
and
mov
and
mov
adc
pop
popf
call
rorb
out
push
out
outsb
lret
sub
insl
insl
jb
cmp
or
jmp
mov
scas
std
sbb
mov
enter
sahf
adc
test
hlt
shr
xchg
gs
mov
es
xchg
ja
pop
shrl
je
mov
inc
pushf
or
testl
les
fcmovnbe
push
mov
mov
dec
adc
clc
jb
or
mov
loopne
int
fdivrs
insb
inc
mov
call
sub
faddl
out
dec
push
jnp
jne
pop
popf
mov
jge
roll
push
repz
popf
jp
push
mov
pusha
popa
or
flds
cmp
xchg
daa
outsb
cmp
push
xor
sub
and
pop
and
pop
aas
insb
cmp
dec
mov
lock
cmp
in
das
inc
adc
gs
or
je
imulb
add
inc
leave
pop
add
ljmp
mov
adc
dec
aad
int3
lahf
push
add
jb
jae
clc
or
and
mov
pop
push
mov
cmp
fcoml
outsl
das
adc
dec
or
aas
adc
mov
movsl
sub
adc
gs
gs
mov
jmp
test
or
dec
push
loop
and
sbb
lods
adcb
and
mov
push
cmp
mov
in
jne
cmp
mov
fistpl
nop
dec
nop
es
addb
enter
adc
xchg
jns
jmp
aad
js
inc
push
das
fcompl
aad
pop
mov
sbb
jno
cmp
sub
lret
push
repz
fwait
jb
xor
xchg
mov
xor
hlt
add
mov
shlb
push
or
add
lret
push
add
into
mov
lods
pop
mov
mov
pushf
iretw
jmp
pop
lea
xor
fstl
mov
mov
mov
push
mov
js
jg
sbb
in
decl
int
je
repnz
mov
jmp
adc
xchg
push
sub
jb
xchg
add
inc
test
mov
mov
xor
or
lods
jbe
xor
pop
xchg
inc
xor
add
aas
mov
iret
adc
push
cs
cmp
xchg
daa
jnp
push
dec
and
mov
sbb
jbe
aaa
test
mov
mov
outsb
add
mov
and
in
gs
mov
pop
mov
sbb
arpl
pushf
repnz
pop
add
aad
mov
sbb
stos
sbb
dec
lret
jg
jo
aaa
das
mov
xor
shr
mov
mov
rcll
xor
xchg
lea
cmc
mov
pusha
iret
out
inc
shlb
pushf
sub
imull
xchg
pop
scas
daa
xchg
negw
pop
pop
sub
repnz
subb
add
enter
sub
sbb
dec
sbb
ljmp
js,pn
and
scas
jb
js
inc
xchg
adc
and
or
lret
leave
call
shll
mov
lret
xor
adc
dec
dec
mov
out
sub
dec
gs
dec
jae
hlt
jge
mov
xchg
daa
rorl
push
mov
ss
mov
lcall
mov
aaa
inc
xchg
sbb
or
mov
aam
or
test
mov
aaa
cltd
das
inc
gs
xchg
fs
leave
lcall
out
push
adc
lds
adc
jge
aad
test
cld
aaa
xchg
rcrl
jmp
loopne
repz
jmp
pop
or
push
movsb
lahf
sbb
enter
push
mov
in
jmp
in
mov
mov
call
sub
lcall
xchg
in
mov
cmc
movsb
faddl
aam
xor
sub
pop
pop
mov
mov
sti
in
movsl
mov
pop
adc
inc
push
adc
cmc
les
xor
cmp
or
rol
sub
mov
stos
cmp
mov
sub
fistl
adc
xchg
imul
jo
gs
xchg
mov
addl
jle
jecxz
adc
sbb
loopne
jge
test
dec
dec
jp
fildll
jb
push
jle
loopne
nop
mov
pusha
sti
test
loopne
test
pusha
cmpsb
out
xchg
pop
fsubrl
mov
call
push
cmpsb
sbb
stc
cmp
add
loope
jnp
stos
push
pop
es
pop
les
or
pop
rclb
scas
sbb
pop
shrb
into
fsubrl
stc
pop
cli
dec
push
insb
sbb
das
test
xchg
xchg
inc
sbb
in
cmp
out
das
mov
jecxz
outsl
stos
or
loopne
fildl
negb
mov
jp
sub
push
jbe
sub
std
inc
adc
xor
cld
sbb
sbb
sub
jns
sbb
filds
sti
push
inc
divps
aam
push
lea
jo
bound
insl
std
loopne
cmp
shl
add
rorl
sbb
rcrl
dec
call
adc
outsb
mov
jns
xor
sbb
lods
imul
xchg
xor
push
jo
sbb
lods
cltd
lcall
sbb
xor
or
out
addb
pop
and
mov
lock
js
cmp
jne
sbb
mov
dec
repz
iret
xlat
pop
inc
push
mov
addl
loopne
inc
xchg
sti
mov
mov
inc
push
rcrb
int3
testl
add
add
jbe
insl
fcompl
lock
andb
pop
xor
pop
pop
call
inc
sarl
es
jl
mov
mov
js
sti
movsb
in
mov
movsl
dec
popa
in
adc
add
popa
imul
ret
imul
jmp
mov
and
jmp
int3
subb
icebp
sub
xchg
mov
fisttpl
cmp
mov
push
jns
xchg
fidivs
sbb
lds
cmp
pop
push
das
pop
mov
test
jp
into
push
outsl
cmp
jae
lret
push
out
cmp
inc
push
stc
fwait
xor
push
inc
hlt
clc
scas
out
inc
cs
cmp
pop
mov
add
pop
add
mov
or
dec
xor
ja
das
jo
mov
aad
cs
cmc
sbb
es
in
mov
push
ret
int
shrb
cmpsb
dec
add
stos
mov
and
enter
lods
in
mov
mov
sbb
call
imul
insl
or
jg
ret
or
mov
rcrb
lods
sub
out
jl
mov
pop
pop
cltd
pusha
iret
or
and
or
in
mov
inc
fcoml
sub
std
xor
cmp
fucom
pop
mov
int3
inc
mov
in
popa
out
mov
repz
test
rcll
les
ss
insl
cltd
and
and
aad
mov
xor
mov
push
jb
pushf
lret
cmpsb
fcomi
into
push
push
fsts
out
xchg
xor
cld
cld
add
aaa
outsl
fsub
jo
add
inc
and
js
in
mov
inc
call
push
int
adc
orb
subb
test
sub
pop
fisubs
jb
push
push
fsubrs
mov
fnsave
or
fisttpll
shlb
pushf
sahf
push
jne
mov
cld
adc
sub
hlt
pop
pop
inc
rcrb
cld
mov
imul
ss
out
jo
jns
in
cmpl
mov
out
xchg
dec
jae
fiadds
lods
stc
jmp
inc
out
mov
ret
sub
cwtl
repnz
pop
imul
sbb
jmp
add
mov
sahf
push
mov
push
push
sbb
gs
rcrb
das
xor
push
and
fnstenv
jnp
push
incl
lahf
or
cmp
rcrb
popf
pop
insl
adc
sbb
fstl
pop
add
mov
push
gs
stc
ss
xor
pop
dec
into
pop
push
or
popa
add
imul
stos
xlat
cmpsb
mov
subl
mov
loopne
insl
pusha
stos
adc
loopne
jle
ja
xor
sbbl
cmc
adc
lock
test
dec
sahf
bnd
in
aam
push
lret
loop
push
loopne
pop
sub
aas
enter
jne
int
pop
adc
mov
cmp
cmp
cmp
jge
or
repz
fldt
mov
mov
xchg
pop
mov
jle
leave
lods
push
testl
xchg
push
lods
dec
mov
dec
dec
cwtl
sub
adc
push
dec
cltd
xchg
data16
push
cli
es
insl
jo
es
loop
ret
pusha
aaa
add
std
int
in
mov
rcr
adc
cmp
and
int3
inc
xchg
mov
leave
aam
mov
mov
shrl
std
es
aam
cmp
dec
sbb
jbe
inc
dec
xor
dec
popf
sub
cmpb
push
xor
pop
arpl
or
int3
movsl
push
out
dec
mov
fdivs
scas
rolb
sbb
add
and
shlb
imul
jmp
mov
push
mov
arpl
xchg
push
jp
shrb
out
xchg
adc
inc
cmc
bnd
inc
or
sti
xorb
cs
enter
lock
loop
leave
adc
subl
jae
sbb
or
into
leave
movl
into
lods
sub
outsb
jne
clc
call
cmpsb
cmp
cmp
and
icebp
sub
loope
jp
shrb
in
jae
mov
cmp
mov
scas
dec
inc
or
xchg
mov
xchg
shl
std
lcall
out
or
je
lock
jne
pop
out
addr16
pop
push
inc
adc
div
mov
adc
sbb
mov
lret
inc
xor
xor
mov
popa
sub
rclb
mov
pop
inc
push
add
cmp
fs
fimull
test
xor
insl
pop
loop
push
aaa
xchg
push
enter
jns
lock
ja
or
mov
dec
dec
and
lods
sbb
fldl
test
loop
cmpsb
jns
out
pop
jo
mov
in
or
jmp
icebp
sbb
out
and
mov
ficoml
out
ss
add
or
cmp
xchg
rorb
ds
mov
imulb
push
nop
cmp
lock
pop
fistpl
pop
pop
jle
xchg
and
xor
push
fwait
out
aad
rcrl
rolb
cmpsl
mov
aaa
out
insb
mov
xor
xor
fmul
popa
loope
movsl
xchg
xchg
pop
inc
pusha
cmp
push
pop
add
inc
lret
inc
je
sbb
mov
jnp
loop
push
mov
in
test
sbb
fcmovbe
mov
popl
clc
lods
and
std
test
inc
mov
in
flds
faddl
adc
lret
jg
sub
adc
mov
mov
lods
sub
orl
dec
outsl
scas
ficoml
in
cmp
out
xchg
test
cltd
popa
repz
jo
sbb
dec
push
xor
push
scas
lds
iret
pop
jnp
adc
out
inc
cmp
out
lods
out
cmp
dec
rorl
in
sbb
add
xchg
pmaddwd
imul
mov
jae
leave
fistpl
sub
js
adc
les
push
xchg
dec
clc
adc
idiv
jnp
xchg
popf
xchg
movb
add
pushf
aas
mov
inc
mov
adc
lds
jbe
lods
ret
xchg
cmpb
or
out
jp
les
push
pop
or
add
add
adc
pop
in
pop
add
fisubrs
cmp
aaa
loop
std
loop
pop
mov
lcall
imul
xchg
fisttpll
mov
je
jecxz
aad
cmp
xchg
jb
mov
jnp
pop
sbbb
xchg
xor
and
mov
pop
jbe
cli
aad
fnstcw
jnp
ss
in
push
ljmp
add
mov
xchg
sarb
push
filds
js
cmpsl
or
es
subb
cmc
mov
jge
add
add
bound
clc
cmp
outsb
pop
pop
call
into
mov
jmp
clc
sahf
pop
stos
in
js
hlt
mov
pop
pop
out
add
and
sbb
cmp
push
cmp
imul
pusha
arpl
enter
mov
adc
decb
push
inc
adc
shrb
mov
sub
xchg
call
adc
pop
stos
sub
jne
sbb
rolb
clc
jb
add
cli
cmpl
jbe
mov
std
insl
adc
popf
rcr
jb
cmp
mov
je
mov
bound
out
push
cli
cs
pop
jne
or
sub
sbb
mov
cmpsl
scas
lcall
xor
mov
out
mov
dec
sbb
sbb
es
loopne
jg
fimull
jb
xchg
mov
movsl
sbbl
mov
jg
or
jecxz
leave
push
pop
testl
sbb
ljmp
xor
fldenv
mov
cmp
xchg
lcall
push
cmp
rcll
aaa
xchg
push
adc
sub
xchg
sbb
cmp
hlt
out
sbb
pop
mulb
and
aam
jl
lods
inc
into
pop
movsb
orl
dec
pop
dec
movsl
sbb
cmp
ss
mov
mov
cmc
xor
mov
jle
loopne
mov
dec
mov
das
jbe
movsb
or
insb
js
pop
repz
mov
cwtl
adc
daa
mov
mov
sbb
sub
ljmp
jg
inc
dec
repnz
test
mov
adc
add
insl
xchg
mov
or
or
jmp
jnp
mov
outsl
sub
xor
jecxz
nop
add
stc
cli
mov
xor
ss
movl
sarl
arpl
pop
xor
sbb
cmp
jne
dec
es
fidivs
sub
outsb
pushf
cld
inc
sub
test
cmp
les
xor
outsb
push
in
mov
rcll
mov
inc
push
jle
je
mov
lret
sbb
arpl
jge
dec
xchg
xor
pop
cmp
xchg
and
addb
xor
or
and
inc
mov
sbb
mov
rcl
push
mov
or
inc
fisubs
cwtl
dec
popa
fs
xchg
notl
out
dec
pop
mov
decl
mov
mov
mov
jecxz
and
mov
push
jle
subb
pop
dec
push
les
xchg
stos
shlb
push
cld
push
jnp
std
xor
jns
and
arpl
add
sub
pop
mov
push
mov
push
sub
jne
dec
cmp
pop
int
jge
imul
xchg
aad
js
adc
in
inc
int
das
mov
das
cmp
lods
sbb
call
out
fstl
ror
adc
xchg
std
lock
push
popa
and
loopne
stc
sub
mov
push
lods
mov
imull
push
data16
mov
add
loopne
sbb
cmp
add
dec
insb
loopne
cmp
mov
push
dec
cltd
mov
add
mov
mov
mov
push
and
and
mov
repz
sub
shlb
jns
loopne
aad
add
dec
inc
loop
sub
cmpsl
fcoml
push
imul
roll
das
cs
lcall
test
les
mov
mov
cmp
mov
incb
daa
add
sub
xchg
sub
test
push
jb
lcall
lods
bnd
sahf
mov
aam
mov
push
incl
cli
adc
dec
adc
dec
xor
loopne
insb
lret
pop
imul
cmp
cmp
xor
mov
mov
mov
pop
ud1
push
mov
mov
imul
int
popa
stos
pop
fwait
push
or
sbb
div
ss
les
lahf
pop
mov
mov
sahf
or
and
js
and
pushf
or
dec
mov
sti
pop
dec
fcmovnu
lret
lock
mov
inc
out
push
es
ja
enter
cmp
fisubrl
lods
out
mov
push
leave
inc
jmp
stos
js
push
or
int3
int3
dec
fidivrs
jp
adc
imul
mov
mov
popl
xchg
icebp
jle
jo
dec
icebp
aam
jge
mov
inc
dec
mov
pop
jge,pn
adc
fisubrs
insb
xlat
add
std
add
lcall
fmull
mov
push
adc
dec
jns
cmc
fdivrl
dec
xchg
mov
faddp
popf
movsl
cmp
push
xorb
out
sub
arpl
push
sbb
cmp
xchg
pop
push
add
adc
push
imul
int3
jno
push
ret
adc
es
sbb
push
add
insb
pusha
push
inc
mov
imull
jbe
jns
or
cmp
cmp
mov
mull
aad
xor
in
cmp
lcall
fildll
enter
rorl
add
es
mov
and
js
jmp
adc
jge
repz
inc
inc
push
test
push
das
andl
stos
in
xor
lcall
ficoml
cli
lret
icebp
fdivrl
ret
stos
xchg
cwtl
inc
out
aam
sub
mov
invd
cmpsl
mov
push
andb
pop
jae
cmp
push
in
aaa
fwait
dec
adc
mov
test
daa
xchg
into
dec
mov
ja
inc
push
push
jnp
mov
mov
pop
fistpll
jge
sub
xchg
adc
jmp
popa
cld
push
cwtl
inc
cmpsl
cli
pop
mov
sub
xor
fwait
ljmp
inc
dec
mov
ljmp
icebp
push
push
fsubrs
and
push
loop
loopne
inc
dec
std
xor
inc
jo
test
jge
sbb
or
mov
mov
inc
pop
pop
into
divb
mov
mov
jl
jge
in
xchg
mov
mov
je
push
mov
enter
xor
movsb
dec
xor
pop
stos
lret
jb
jbe
int
subb
stc
mov
pop
jae
or
add
xor
xchg
cmp
lahf
jbe
stos
arpl
xchg
repnz
fucomp
hlt
adc
mov
pminsw
das
outsb
sbb
fwait
mov
cmp
fidivl
movsl
pusha
scas
jp
rcrb
movsl
iret
or
in
scas
fidivl
xlat
lods
pop
cwtl
shll
popf
inc
iret
inc
je
dec
loop
ljmp
movsb
das
jecxz
jmp
mov
lods
xchg
ljmp
add
jne
loope
jge
andl
xchg
push
repnz
int3
mov
mov
lds
aaa
gs
fstps
mov
push
leave
add
sbbb
push
pop
lds
les
pop
loope
fwait
mov
xchg
inc
mov
push
jl
icebp
adc
cs
and
lcall
mov
inc
rcrl
lds
jae
lds
pop
aad
cli
xor
dec
gs
std
jae
sub
jmp
inc
hlt
das
and
or
mov
mov
ja
test
ljmp
jl
movb
xor
ljmp
cmp
sub
aaa
fiadds
shrl
adc
movsl
daa
vmwrite
adc
dec
adc
inc
mov
pop
movsb
loop
jns
insl
mov
add
dec
sbb
dec
repnz
dec
mov
sbb
push
adcl
cmp
stos
or
les
iret
test
popa
fdivs
mov
fs
sbb
pop
adc
mov
dec
mov
jbe
outsb
insl
call
repnz
das
mov
sub
and
xlat
mov
stc
push
icebp
test
sahf
and
adc
mov
mov
test
mov
fiaddl
inc
xor
add
sbbb
dec
xor
push
cmp
dec
bound
cmpsb
xchg
test
adc
test
imul
mov
sub
inc
adc
or
xor
filds
push
or
sbb
fwait
sbb
inc
dec
scas
pop
sbb
add
xor
xchg
jmp
out
stos
rcl
icebp
addl
ret
divb
mov
xadd
pop
daa
push
fwait
cmp
pop
fwait
cmp
add
jmp
roll
xchg
test
iret
push
aad
in
or
leave
xchg
test
adc
repz
mov
js
ja
mov
jb
stos
xchg
push
adc
push
inc
adc
mov
adcb
mov
jecxz
out
mov
test
arpl
xchg
bound
mov
mov
jae
mov
clc
xor
subb
movsl
mov
jne
stc
pop
jp
and
fcoms
in
jecxz
lods
pop
arpl
shrl
and
repnz
shlb
push
adc
xchg
mov
mov
push
and
push
and
mov
int
xor
or
mov
xor
int3
mov
enter
psrld
out
mov
arpl
mov
inc
lods
pop
jae
out
cmpsb
sbb
sbb
movsb
push
xchg
sbb
out
fst
andb
outsb
jae
ljmp
out
out
push
dec
xlat
push
jbe
jmp
mov
je
lahf
ret
dec
clc
mov
push
xchg
or
mov
test
iret
mov
push
lret
pop
out
mov
cmp
mov
or
les
leave
push
jb
addr16
push
xlat
mov
inc
es
cltd
sbb
ljmp
jg
lods
push
leave
cltd
xorl
cmc
loope
stos
mov
int
in
jne
std
nop
sbb
mov
push
adc
sub
insl
gs
inc
fdivs
insl
xor
sub
add
mov
movsb
jp
js
mov
xchg
inc
sub
aam
pop
int
xor
ss
push
pusha
fnstenv
cltd
jns
ljmpw
cmp
and
mov
push
test
pushf
cli
loopne
addb
adc
test
xchg
sub
fmuls
sbb
cmp
sbb
push
sti
fimuls
cmp
pop
jb
sti
adc
dec
sub
mov
fxch
icebp
enter
jg
push
into
push
scas
aas
adc
xor
arpl
mov
ljmp
mov
xchg
sub
sar
and
or
fwait
loope
push
shll
jnp
xor
fsubrl
fmull
ret
or
jo
and
fwait
xor
mov
movsb
fisubrs
push
sub
fnstsw
inc
push
ja
out
or
fcoml
lods
daa
dec
les
inc
mov
call
in
and
push
lcall
jle
ljmp
jg
stos
xchg
sbb
mov
sub
xor
pop
add
xchg
xchg
mov
pop
enter
jmp
pop
stos
mov
loop
sbb
and
push
fcomp
mov
jno
lds
push
insb
push
xchg
jmp
scas
stc
sbb
cmpsl
mov
jb
enter
adc
mov
pop
call
cmp
and
pop
sub
dec
hlt
jo
mov
fwait
push
pop
jg
push
or
nop
jno
test
cld
nopl
jecxz
dec
lret
pushf
bound
bound
std
fwait
add
std
and
bound
or
and
iret
push
mov
mov
fsts
pushf
lods
mov
sub
data16
stos
push
push
outsl
cmp
std
xchg
gs
jl
jge
ljmp
or
lahf
les
xchg
xchg
popf
xchg
xchg
jmp
fwait
pushf
jecxz
cmpb
push
mov
xor
and
dec
test
inc
test
jecxz
mov
sbb
push
push
mov
xchg
iret
rorl
and
mov
lahf
cmp
mov
xor
mov
xchg
jae
out
push
cmc
fiadds
arpl
pop
lds
inc
gs
test
dec
insb
fbstp
fs
cli
mov
rorl
repz
rcr
cmp
mov
clc
adc
dec
sahf
push
sbb
pop
and
or
xor
ss
icebp
push
imul
cwtl
mov
sbb
in
push
sbb
and
push
jns
sub
test
out
out
lret
fisttps
aas
jmp
cmpsb
mov
ret
pop
pop
jnp
ja
or
movups
push
push
jmp
mov
and
cmpsl
jg
out
fisubs
dec
push
cmp
dec
lea
sbb
adc
sahf
fdivs
xchg
inc
pop
lea
or
push
jns
mov
ss
mov
dec
cs
popa
pop
cwtl
bswap
lods
inc
cwtl
repz
out
mov
js
sub
or
mov
aad
pusha
out
movsl
pop
cmpsl
sbb
imul
add
xor
ljmp
bound
je
mov
fwait
bound
xchg
xchg
jno
cmpsb
dec
repnz
sub
js
jo
and
in
inc
test
mov
adc
fwait
inc
enter
test
push
imul
push
push
xor
push
xor
xor
mov
loop,pn
sbb
jbe
lret
cmp
fwait
lret
cmc
nop
cltd
aaa
xor
addb
mov
mov
mov
inc
cwtl
ja
push
add
dec
icebp
adc
fs
nop
ret
in
jg
in
push
lods
xchg
push
push
fucom
mulb
sub
jnp
gs
loopne
data16
scas
pop
cltd
imul
xchg
int
mov
mov
xlat
inc
inc
adc
pop
je
aas
mov
jbe
jo
not
jae
test
sub
adc
pop
push
mov
mov
fisttps
cmp
pop
data16
pop
inc
jge
xchg
das
gs
gs
adc
scas
hlt
and
xchg
popa
mov
sub
ret
das
dec
mov
xor
sub
cmp
subl
xchg
and
std
push
sbb
enter
mov
adc
xchg
push
xchg
jbe
mov
ja
popa
add
lcall
ficompl
test
js
or
inc
lods
ret
inc
push
or
push
lods
inc
stos
mov
sbb
or
mov
mov
fwait
and
mov
out
jb
imul
sub
jle
stc
fmuls
inc
adcb
inc
in
xor
ljmp
insb
lret
ficompl
inc
movsl
cmp
cmp
aam
sub
add
mov
push
inc
cmp
inc
mov
addb
mov
fldt
mov
dec
in
test
mov
xchg
jecxz
int3
addl
push
pop
cltd
mov
inc
test
in
loopne
add
lcall
test
add
xchg
pop
out
mov
push
je
jbe
stos
adc
lods
hlt
cmpsb
xor
idivl
std
cmp
mov
je
dec
movsb
inc
pop
sub
sub
aas
push
aad
or
outsl
addl
cli
popf
jp
adc
xorl
movb
imul
fcmovnu
std
jp
orb
push
lahf
pop
aas
icebp
mov
mov
xchg
dec
push
mov
lds
pushf
mov
imull
aaa
adc
xchg
into
dec
jnp
pop
cmpsl
movsl
fs
add
lcall
jle
cmp
dec
push
fistps
sbbb
adc
out
pop
lods
das
mov
xor
arpl
dec
nop
rcll
loop
cmc
stos
jmp
push
and
add
stos
aad
es
data16
mov
mov
push
lock
xchg
mov
mov
lds
dec
add
dec
push
cmp
in
adc
mov
cmp
pusha
cmp
mov
sbb
xchg
and
or
add
lock
add
add
add
in
fistpl
cmc
jae
notl
jmp
repnz
dec
and
nop
mov
aas
and
adc
mov
xchg
movsl
stos
pop
bound
jbe
popa
lcall
or
xchg
and
addb
int
ret
jb
out
mov
imul
leave
orl
sbb
icebp
and
imul
add
pop
ja
cmpsb
test
mov
test
jne
inc
cmp
sub
and
jno
cmpsl
sub
in
inc
popf
sbb
ja
subl
loop
or
and
jge
int3
cmpsb
fdivrp
or
sbb
sti
mov
adcl
sbb
sub
or
dec
clc
int
add
mov
cs
dec
in
fwait
push
pop
add
imulb
mov
sub
cmpl
and
loopne
xorb
pop
rolb
out
das
sbb
rclb
push
cli
add
popa
movsl
imul
jo
cmc
add
sub
jne
scas
lcall
iret
in
jmp
scas
xchg
cwtl
js
lcall
scas
jp
test
scas
mov
repz
aad
jae
icebp
fwait
cmpsb
xor
imul
cmpsl
dec
xor
mov
or
push
mov
xchg
not
pextrw
mov
jno
lret
adc
sti
and
cmp
sub
movd
notb
fsubs
ret
insl
sub
sub
rorl
bound
stos
sbb
decb
xchg
dec
test
scas
fidivrs
mov
pushf
mov
sbb
sub
sahf
mov
sbb
leave
fisttps
jmp
inc
inc
out
loop
xchg
push
scas
ret
inc
lcall
pusha
and
push
iret
das
inc
movups
mov
adc
fildll
popf
jne
mov
dec
and
clc
test
shlb
sbb
add
push
flds
jo
lahf
mov
pop
iret
jo
loope
mov
addr16
lret
movb
inc
std
in
pop
ljmp
cs
lock
dec
adc
test
mov
es
cmc
test
jns
add
sub
ss
jle
cmp
mov
or
jmp
aas
cmp
int3
shrb
push
lret
xchg
into
xchg
call
jle
mov
cmc
daa
add
out
cmp
arpl
fwait
rorb
nop
out
insl
pop
aad
jle
adc
cld
arpl
jmp
pop
bound
add
ja
inc
adc
lcall
test
jg
xor
scas
shll
mov
jl
jp
xchg
jns
sub
sub
mov
jge
inc
mov
jmp
movsl
mov
jae
or
pop
orb
insl
dec
out
test
jmp
icebp
sar
xor
shl
inc
or
jae
aas
sub
dec
pop
cwtl
xor
cwtl
cmp
xlat
sub
mov
lahf
or
or
mov
mov
testb
std
arpl
mov
sbb
dec
mov
push
ret
out
jmp
jbe
sub
rorb
pop
test
repz
repz
and
inc
xchg
sub
insb
sub
mov
std
mov
mov
fbstp
ja
cli
into
icebp
into
dec
fnstenv
pop
push
mov
cmp
ljmp
loop
add
jns
icebp
mov
int
cld
xchg
cli
rol
fisttpll
lahf
mov
adc
insb
insb
mov
aaa
sbb
pop
xchg
pushf
xor
xchg
pop
movsb
sub
cwtl
fldt
mov
cmp
and
sub
or
cld
xchg
mov
mov
mov
cmp
xchg
pop
out
jns
pop
jb
and
pop
cli
inc
adc
dec
jmp
test
add
dec
xchg
loopne
cs
cli
gs
out
dec
push
lock
xor
xchg
call
cmpsb
pop
adcb
mov
dec
in
outsb
push
pop
in
fwait
jmp
rclb
mov
int3
push
mov
insl
popa
lods
xchg
inc
fcoms
push
mov
out
cltd
xor
scas
cmpsl
push
into
js
jp
nop
dec
inc
gs
push
shll
jnp
lock
sahf
lret
bound
and
adc
addl
ret
add
mov
icebp
jno
addb
mov
or
xor
pop
imul
jmp
sti
push
inc
ljmp
enter
arpl
add
mov
fs
mov
xchg
subl
insb
cltd
pop
clc
jle
cmp
mov
pop
cmovo
cmp
jmp
mov
sbb
jns
js
rcrl
mov
push
mov
lahf
loope
add
cwtl
push
xchg
mov
out
aam
pop
insb
mov
orl
hlt
pop
lret
mov
sbb
flds
aad
adc
push
mov
xor
gs
xchg
pop
mov
inc
dec
test
js
dec
xorb
push
in
lret
cmp
inc
stc
sbb
jmp
movq
jns
and
ja
or
mov
stos
inc
xchg
push
push
fdivs
mov
mov
mov
nop
repz
imul
or
dec
pop
cmpsl
in
push
add
cld
std
clc
xchg
and
fs
in
and
jbe
je
jno
adcl
test
fwait
pop
cld
mov
scas
or
imul
inc
pop
je
lods
adc
mov
sbb
sbb
fldz
movsl
dec
dec
mov
and
xor
push
mov
test
test
inc
cmc
enter
add
mov
inc
sahf
je
ss
sub
movsb
test
sub
sbbb
notl
dec
popaw
mov
pop
dec
cmp
popa
aaa
shl
test
rcr
int3
bound
shlb
int3
push
rolb
sbb
out
xchg
stos
pop
and
mov
aas
or
fildll
lret
int3
lcall
in
leave
adc
add
cmc
cltd
sbb
mov
mov
sbb
loope
ss
adc
lahf
pop
xor
js
outsl
pop
dec
xor
repz
adc
fidivl
in
add
jle
and
les
dec
in
sbb
mov
fbld
ret
test
mov
in
pop
dec
xchg
jns
and
cmp
pop
mov
mov
je
bnd
das
add
pop
rol
stos
mov
fwait
sti
cli
adc
mov
fdivrp
push
jnp
pop
push
add
xlat
outsl
cmp
jmp
imul
popaw
shll
fcomip
int3
sarb
repnz
test
push
pop
jmp
arpl
jo,pn
pop
mov
add
adc
ret
leave
xor
sub
xchg
ficoms
sub
or
cmp
mov
pop
xchg
js
shr
xchg
scas
add
into
or
xchg
lods
dec
inc
dec
out
mov
stos
cmp
fsubrs
adc
jge
sub
push
and
push
repz
call
pop
and
sub
inc
push
cmpl
inc
sub
push
aas
push
mov
das
cmp
pop
pop
jne
mov
sbb
dec
roll
imul
push
sub
jmp
and
std
xchg
movsb
xor
test
inc
jae
loope
or
inc
inc
xor
test
pop
mov
mov
push
fistps
lods
gs
shl
adc
inc
mov
mov
cmp
mov
insb
push
mov
mov
mov
mov
xlat
insb
fs
dec
inc
jle
nop
or
inc
jmp
push
sbbl
push
out
idivl
adc
cmp
out
nop
out
jns
jmp
jae
les
call
xorb
push
popf
lods
fs
cmp
sub
inc
dec
sub
xor
pop
mov
xorb
and
mov
aam
je
xchg
cmp
pop
cld
aam
aam
mov
mov
pop
pop
adc
and
mov
adc
xchg
pop
imul
mov
divb
jmp
shl
sub
lret
lds
loop
dec
jle
jmp
dec
adc
jmp
pop
inc
repz
stos
xchg
xor
mov
push
mov
outsb
aad
mov
pop
stos
hlt
into
addr16
adc
rcrb
sbb
mov
es
lret
in
scas
lcall
add
popa
adc
loopne
jno
jg
cmp
adc
cmpsb
sub
or
notl
adc
dec
or
lods
inc
dec
jo
shll
dec
int3
sub
adc
mov
and
push
jmp
dec
add
mov
ret
inc
cmp
std
cmp
mov
pop
or
loopne
fs
repnz
cwtl
and
jno
pop
push
pop
or
in
push
lods
fsts
mov
mov
or
imul
cmp
test
xchg
in
cli
sub
int
movhps
or
add
adc
sbb
inc
jl
inc
jp
inc
mov
sub
ja
mov
inc
xchg
dec
sbb
ret
xlat
stc
cmp
cwtl
ret
adcl
shr
add
int3
ficompl
push
xor
xchg
in
jge
lahf
xchg
ja
cli
jne
fsub
loopne
pop
repz
scas
cwtl
in
jae
jno
or
and
addr16
mov
pop
mov
call
cmp
imul
adc
mov
lcall
outsl
lahf
pop
mov
inc
roll
aaa
adc
aad
dec
push
dec
mov
addr16
pop
gs
dec
fisubs
xlat
pop
and
jno
jae
pop
dec
add
mov
add
fcomip
rcrb
clc
mov
rcll
jnp
sub
push
aas
insl
les
add
cwtl
sub
push
fstl
pop
jg
push
sbb
lret
outsl
rclb
or
jge
push
jg
xor
adc
fdivl
insl
lods
xor
cmp
shrb
fsubrl
inc
rorb
pop
fsubrs
cmp
aam
cld
mov
cmp
sub
and
enter
sbb
fisubrs
mov
xor
mov
das
mov
in
push
push
ds
xchg
packsswb
sbb
xchg
in
push
push
push
push
dec
push
aaa
lods
xchg
sbb
lods
fidivrs
add
xor
mov
incl
or
or
xor
dec
in
dec
or
repnz
xorb
popf
jno
test
insl
inc
add
lahf
xchg
mov
ret
sub
mov
sbb
or
and
ljmp
aas
gs
mov
jl
add
out
adc
pop
ffree
inc
ss
sub
cmpb
push
inc
fstpt
mov
aaa
fldenv
outsb
pop
jne
subl
xor
xor
pop
sbb
imul
sti
fsubrs
dec
mov
arpl
icebp
pushf
inc
lahf
fnstsw
ret
mov
xchg
rorl
add
push
jle
ficoml
aam
xlat
inc
and
aam
cltd
lds
xor
mov
add
outsl
mov
add
lret
mov
xor
or
cld
xchg
js
cli
andb
sub
sbb
jne
imul
jns
dec
push
pop
add
dec
lahf
mov
xchg
jne
test
mov
ja
pop
and
aaa
je
mov
fsubl
cmp
mov
and
dec
mov
dec
add
jns
and
insb
addb
ficoms
popf
out
call
mov
xor
mov
push
fwait
jb
push
mov
mov
fildll
pop
repnz
adc
lock
xlat
cmc
pushf
mov
movsb
jbe
loop
movsb
sub
or
jmp
xchg
fists
mov
shll
or
pop
sbbb
icebp
iret
push
inc
imul
mov
out
xor
jne
mov
xor
jbe
xchg
insb
rolb
mov
push
shlb
les
jae
addr16
mov
jb
fstps
add
into
push
insb
std
bound
sbbl
or
add
mov
outsb
mov
je
add
lods
pushf
jl
xor
arpl
jb
mov
xor
xor
xchg
shrl
repz
cmp
sarl
pop
cs
cwtl
dec
cmc
hlt
add
insb
test
adc
ret
loop
out
cmp
icebp
mov
push
push
repnz
push
lods
mov
pusha
sbbl
lcall
pushl
xchg
int3
mov
daa
sub
mov
sbb
ret
addr16
mov
lret
jge
inc
loopne
lea
js
add
je
xor
inc
sbb
xchg
adc
repnz
sub
hlt
pop
and
ret
xlat
shll
dec
jne
add
push
cmpsl
cmc
cmpb
int
sahf
xchg
aas
xor
loope
jecxz
inc
mov
push
inc
xchg
xchg
lea
inc
or
sub
jle
rcrb
push
mov
sbb
xchg
mov
jo
daa
mov
mov
nop
pop
pop
lods
hlt
xchg
jle
sbb
cmp
mov
mov
call
ljmp
mov
out
pusha
scas
jo
xorb
movsl
mov
ja
call
push
cltd
jmp
mov
in
arpl
mov
pop
sbb
inc
daa
in
xchg
lret
ret
cli
leave
mov
mov
xlat
inc
fwait
mov
hlt
or
ja
repnz
mov
xchg
mov
mov
jmp
mov
mov
xor
lahf
repnz
sbb
sahf
scas
enter
xor
xchg
aam
es
imul
or
cltd
push
es
or
or
mov
gs
sub
test
add
shrb
sbb
or
xor
mov
cli
sbb
xchg
test
fdivrl
fstl
push
xor
pop
xlat
insl
shll
pop
in
mov
fsub
sbb
icebp
les
push
test
call
mov
lcall
xor
hlt
out
mov
sbbl
dec
jle
popa
es
clc
fs
inc
stc
jnp
add
imul
mov
xchg
inc
jge
push
cmp
ret
dec
out
lcall
lret
imul
shrl
daa
or
ret
jle
sub
fcompl
and
add
pop
add
test
xor
mov
hlt
jecxz
loop
xchg
inc
mov
inc
push
xor
push
imulb
add
pusha
inc
or
inc
outsb
cmc
in
adc
sti
ljmp
leave
mov
dec
add
or
fwait
gs
push
mov
jg
lret
shrl
shlb
ljmp
lds
das
mov
aam
sbb
bound
jb
dec
shlb
adc
std
aam
lds
std
dec
xchg
xchg
mov
fisttps
pusha
add
cmp
add
mov
ret
fimull
sub
cmp
sbb
cmc
xchg
incb
lods
xor
cli
arpl
popl
sub
push
push
sbb
fldt
jae
push
mov
imul
mov
xchg
sub
shll
std
test
sub
dec
lock
movsb
jnp
or
mov
sub
dec
cmp
push
lret
insb
jns
jno
cld
ret
lds
push
sahf
sbb
iret
mov
pop
jbe
pop
dec
mov
cli
inc
mov
pusha
mov
cmpsl
pop
pop
sub
mov
cmp
shlb
insb
pop
aaa
out
setle
imul
pop
sub
xor
push
push
clc
jecxz
xchg
insl
fildl
in
xor
mov
or
das
or
fisubrl
mov
das
or
sub
loopne
mov
clc
push
faddl
or
xor
push
call
flds
call
sti
mov
pusha
lods
xchg
rolb
push
add
aaa
andb
out
pop
insl
shlb
sbb
fldenv
aas
ror
xchg
sub
and
cmp
push
fcomps
and
add
outsl
in
push
adc
xor
mov
or
adc
inc
push
popa
pop
ror
jae
xchg
xor
addl
and
mov
sub
popa
sbb
cli
popf
aam
fwait
xchg
jnp
adc
mov
leave
test
mov
inc
sbb
pop
movsl
sbb
repnz
std
cld
jmp
cmp
pop
inc
jl
pop
stos
pop
test
lret
hlt
outsb
sbbb
std
inc
test
mov
mov
cltd
scas
icebp
add
adc
mov
sub
cmp
shlb
sarb
dec
or
hlt
sub
xchg
in
mov
xor
sub
ret
push
mov
popf
in
jno
frstor
mov
sub
and
mov
pop
outsl
mov
dec
sub
cli
daa
jb
shrb
in
rcll
adc
in
sti
inc
ret
mov
adc
aam
rorb
aad
imul
shll
pop
sahf
jbe
push
cwtl
or
int
in
in
add
std
mov
pop
shr
add
push
fcompl
imulb
lds
cmc
and
adc
mov
pop
popf
cmp
rcrl
data16
stc
and
push
xor
shr
popa
mov
jecxz
xchg
xchg
push
pop
insb
cmpsb
aas
inc
out
push
inc
adc
and
std
jecxz
cld
mov
shrb
cld
icebp
insb
and
sti
mov
adc
push
pop
mov
or
pop
push
imul
fwait
dec
fs
out
mov
movsb
push
stos
insl
int
ret
lods
shlb
cwtl
mov
jg
js
xor
xchg
std
xor
scas
rcrb
dec
subl
cwtl
and
pop
xchg
leave
call
ds
mov
bndstx
pop
or
dec
mov
mov
dec
roll
pop
add
leave
push
addb
cltd
and
pop
sarl
orb
xor
sub
jo
adcb
and
cs
mov
mov
shl
push
mov
dec
fisttps
and
xchg
push
xchg
das
add
iret
mov
push
xchg
test
cmp
cmpsl
aad
cmp
jnp
pop
jp
inc
cs
mov
pop
sahf
push
dec
shll
loope
sarb
cmp
addr16
pop
sub
cs
sub
xor
mov
ficoml
xor
gs
enter
dec
xor
and
sub
cmp
sbb
push
stc
inc
jmp
cmpsb
adc
repz
jecxz
sbb
mov
push
arpl
add
cmp
dec
movsb
lods
mov
mov
cli
jnp
popf
xorl
pop
inc
fwait
pop
rcrl
mov
mov
add
das
push
cmp
pop
mov
jg
lods
sbb
iret
adc
ljmp
fwait
push
aad
mov
test
add
daa
mov
pushf
in
ret
lcall
mov
and
jge
jmp
decl
sbb
inc
and
or
jl
pop
and
das
mov
cli
in
push
xchg
inc
insb
xor
push
int3
xor
in
jbe
fnstcw
les
mov
xlat
pop
xchg
sub
shrb
xchg
jnp
mov
mov
push
out
xor
mov
and
imul
adc
xchg
pushf
pusha
aas
jl
add
dec
mov
or
cmpsb
sbb
dec
insb
push
test
fistpl
shrl
sbb
jecxz
enter
data16
sub
imul
adc
outsl
ds
xchg
pop
and
fchs
loopne
jne
test
repz
jo
movsl
adc
gs
lea
jns
idiv
push
fimuls
mov
mov
lods
mov
stos
test
push
push
pushf
out
jl
nop
add
jecxz
das
test
jbe
mov
or
sub
mov
mov
rorb
ja
and
pop
xchg
cmp
push
dec
repnz
add
shrl
or
sahf
xchg
mov
pop
stos
or
xchg
jb
push
int
lahf
aas
xchg
mov
add
cwtl
xchg
clc
push
or
cs
cmp
in
pushf
cmpsl
xor
outsl
push
and
cwtl
clc
mov
ror
divl
sub
rcr
adc
into
jp
popa
pop
scas
jg
add
sbb
cmp
xchg
mov
lods
scas
and
shll
xchg
mov
bound
and
int
sbb
mov
clc
and
sub
mov
mulb
out
jbe
ss
shl
popl
test
lret
add
pop
jae
aas
loope
mov
lods
pop
xor
adc
mov
insb
ja
outsb
repz
xchg
mov
aaa
sti
das
jl
cmp
jae
std
and
rcrl
mov
fisubs
add
ret
loop
dec
pop
and
pandn
in
ss
ror
lret
sub
in
daa
sub
push
push
cmp
xor
cwtl
lahf
push
jne
ds
dec
sbb
sub
mov
mov
mov
andb
mov
dec
popf
cmp
movsb
cmp
lods
leave
mov
and
data16
adc
push
cmpb
push
jnp
inc
and
sub
pushf
lods
pop
ja
test
fimuls
movsb
mov
mov
in
std
fisttps
jno
mov
cmp
and
and
mov
pushf
stos
xchg
std
and
or
bound
push
cmp
sahf
lea
jnp
inc
mov
push
insb
sbb
gs
adc
scas
mov
cmp
mov
mov
cmp
and
dec
addl
xchg
into
fs
leave
dec
popa
js
test
mov
js
pop
cmp
pop
imul
add
add
cmp
je
jg
leave
mov
push
add
arpl
shl
fnclex
jge
ss
stos
into
call
repnz
imul
gs
and
jmp
hlt
fcomps
aam
lods
jle
sub
shlb
cmpsl
cwtl
mov
call
bound
test
mov
jecxz
dec
insl
xchg
inc
push
dec
push
push
mov
scas
xchg
sub
inc
lock
jno
shlb
lds
xor
mov
sbb
jmp
xor
mov
inc
mov
outsl
ret
shlb
pop
mov
cli
lcall
xchg
daa
or
xor
int3
es
inc
mov
and
push
inc
call
push
in
and
rcll
les
xchg
or
loope
nop
cwtl
cmpsl
sar
pop
cli
adc
cmp
mov
test
mov
xor
xchg
lods
adc
cmp
sbb
lds
push
mov
inc
inc
testb
inc
or
sarl
xchg
roll
adc
popa
mov
dec
mov
mov
in
pop
addr16
int
or
mov
or
pop
fs
ud1
cmpsb
divb
sbb
push
jb
add
dec
and
or
pop
gs
pop
mov
xor
mov
sub
subl
movsb
in
xchg
std
cmp
in
adc
inc
or
scas
pop
pushf
sbb
insl
jne
aam
out
sbb
ljmp
push
test
pop
push
loop
pushf
lret
std
test
add
pop
and
aas
dec
xor
arpl
out
je
test
shl
jp
hlt
or
and
cs
sbb
stc
mov
aam
repz
inc
dec
mov
mov
aad
adc
out
repz
lods
imul
fwait
sub
add
add
insb
sarl
or
ret
push
dec
jno
mov
shll
cmp
cli
cmc
inc
insb
xchg
jp
fldcw
dec
adc
aas
ret
das
adc
mov
cmp
imul
and
test
push
sbb
ror
sbb
or
or
loop
cmpsl
push
in
mov
mov
outsb
in
sbb
jmp
sub
jb
cmc
insb
jo
add
nop
dec
in
sub
stos
and
dec
jle
enter
and
shll
and
sbb
pop
hlt
fidivrs
mov
btr
inc
dec
test
mov
mov
lcall
jns
xchg
arpl
inc
imul
jae
xchg
rcrb
insl
in
aad
les
mov
inc
std
xor
imul
cmp
fstpl
add
cmpsb
or
leave
mov
inc
cmp
xchg
les
outsl
leave
xor
jbe
and
xor
mov
cmovb
test
mov
loopne
push
dec
xor
jo
je
xchg
clc
int
and
add
dec
insb
ljmp
pop
loope
std
and
aas
out
sbb
jmp
scas
popf
add
mov
andb
jl
sub
adc
inc
nop
add
or
mov
orb
cltd
clc
andb
shrb
in
lock
lahf
cmp
mov
ret
stos
inc
sti
cmc
sbb
sahf
cld
xchg
clc
jbe
inc
call
mov
mov
sar
adc
inc
cltd
sbb
ficompl
cmpsl
jbe
mov
xor
mov
adcl
dec
pop
cld
sub
mov
cltd
lcall
mov
fisubs
dec
cmp
mov
ret
popa
test
mov
fcoms
mov
push
js
jle
sub
mov
sbb
cmp
fildl
inc
insb
outsb
dec
in
stc
cmc
pushl
lods
mov
cmpsl
stos
xchg
add
push
push
mov
mov
lods
inc
and
dec
xor
stc
xchg
sar
and
mov
lcall
mov
and
les
inc
cmp
imul
pusha
pop
mov
sub
rcrb
aad
popa
pop
ljmp
jecxz
jo
add
mov
out
subl
insb
test
xor
push
add
outsl
adc
movsl
iret
movsb
dec
and
sbb
cli
ror
jp
mov
xor
push
cmp
dec
or
push
and
push
test
repz
mov
mov
mov
cmp
inc
push
jns
xorl
mov
mov
lcall
mov
lret
and
jb
sahf
out
push
dec
sub
sbbl
pusha
sar
call
push
add
mov
cld
cmpsl
roll
pop
adc
add
cmp
push
xor
test
ret
cltd
pushf
pop
mov
mov
jge
mov
sbb
or
popf
fldl
fstpl
mov
cmp
lcall
popa
bnd
out
jnp
pop
int
push
test
jg
inc
or
fdivrs
cmp
insb
xchg
loopne
xchg
rolb
add
mov
push
mov
sub
xchg
andl
xchg
and
insb
test
mov
je
in
pop
addr16
lret
adc
mov
inc
cmc
movsb
fnsave
js
or
rorb
std
les
cmp
mov
std
add
inc
xchg
imul
cmp
pop
lcall
out
fiadds
jbe
jbe
and
inc
stc
testl
sbbl
jmp
in
push
pop
add
mov
jne
add
ss
jmp
mov
pop
arpl
push
popa
outsb
pusha
push
fmull
add
adc
jo
dec
dec
stos
repz
fcoms
cwtl
jns
dec
jg
aas
cmc
and
fwait
pop
psubusb
leave
cmp
jp
out
xor
push
push
sub
push
loop
xor
add
cli
test
movsb
cs
gs
mov
inc
popf
or
test
ljmp
fbstp
inc
mov
mov
popa
inc
push
xchg
dec
cmp
lcall
fs
pop
push
inc
out
sbbl
sbb
lds
sbb
call
cmp
mov
inc
xchg
shll
test
aaa
sbb
lods
lods
xchg
shl
pop
movsl
ljmp
ret
add
inc
jb
in
mov
rcl
xchg
lret
adcl
or
fildl
mov
lock
lods
dec
cmp
faddp
loop
and
mov
pop
push
mov
js
and
push
jnp
pushf
sti
xlat
pop
aas
out
inc
push
cmc
mov
add
mov
mov
lods
xor
fcoml
sub
pop
cmp
mov
inc
jl
adc
lsl
fstps
mov
lods
add
pop
mov
fwait
cmp
inc
push
xor
pop
fwait
add
sbb
pop
iret
out
mov
dec
ret
push
inc
ds
negl
fnstenv
and
xchg
xchg
cmpb
addb
test
lret
jmp
jne
jo
jp
push
push
movsl
jl
jae
jbe
clc
inc
test
movsb
add
pushf
in
lcall
push
xchg
lock
dec
sub
push
xchg
pop
scas
jecxz
out
mov
cmpl
push
out
stos
sbb
add
jo
fsubrs
pop
cld
xchg
cmp
scas
aaa
mov
or
add
mov
iret
ja
call
pop
mov
je
push
mov
sarl
xor
ret
out
ss
xor
jg
jbe
not
mov
enter
mov
ficoms
mov
jl
cli
sub
jmp
jnp
mov
xor
cmp
test
arpl
mov
stos
cli
mov
xor
dec
arpl
add
and
mov
mov
adc
imulb
xor
jbe
pop
xor
xchg
mov
es
sbbl
nop
mov
popa
push
js
or
adcb
jecxz
sbb
xor
cwtl
shll
sbb
gs
dec
push
jne
sti
and
sub
shrb
adc
test
ret
push
jle
mov
popf
mov
sub
rcrb
movsl
adc
pop
adcb
dec
pop
cmc
out
add
mov
pop
lods
jmp
pushf
xor
jbe
xchg
push
xlat
pop
loope
pmulhuw
subb
jge
push
test
imul
into
mov
inc
ljmp
add
cmp
push
push
or
das
stc
aaa
dec
inc
sub
dec
ljmp
jo
jnp
mov
sub
stos
pop
std
xchg
lods
int3
xchg
and
imul
lcall
xor
adc
leave
jb
dec
je
lods
xchg
movsl
nop
and
je
rolb
xchg
mov
and
mov
pop
xor
lods
aad
rcrb
fsubs
stc
mov
inc
or
xor
packsswb
mov
push
loop
add
or
in
cltd
movups
sub
add
lods
in
pop
lods
fisttps
filds
out
pop
mov
cmpsl
sbb
push
out
inc
inc
icebp
leave
mov
ds
or
pop
cmp
inc
xlat
xor
cmp
arpl
or
pushf
add
or
arpl
scas
cwtl
xchg
ret
push
scas
sbb
dec
icebp
ss
seta
jp
mov
lock
in
pushf
xor
push
aas
dec
pop
adc
xor
test
pop
es
mov
ss
mov
cwtl
push
mov
repnz
dec
cmpsb
xchg
adc
xor
mov
sub
mov
cmp
pop
in
mov
mov
push
or
shll
ficoms
mov
or
mov
xor
popa
loopne
mov
xor
popf
scas
push
int
jg
jns
lods
iret
das
int
outsb
das
dec
or
mov
lret
into
cmpsl
insl
aam
xor
inc
jno
sarl
mov
push
mov
pop
mov
rorl
mov
imul
xchg
nop
cmc
mov
call
pop
and
lds
movsl
mov
repz
ret
cmp
cmc
pop
mov
push
cmp
xor
testb
xchg
dec
mov
fdivl
inc
sti
ja
cmc
call
in
dec
rcrb
and
mov
push
dec
mov
shlb
test
xlat
pop
out
cltd
mov
ds
push
add
lcall
cmpsb
cmp
mov
inc
mov
sub
add
pop
adc
sbb
adc
in
add
pop
lods
fdivl
push
fsub
ret
mov
pop
sbb
dec
rorl
xchg
push
jp
fwait
jg
xlat
repnz
stc
add
sbb
sahf
jp
sbb
mov
sub
jge
ds
loopne
pop
xchg
pop
subl
shll
stos
add
hlt
shlb
xchg
jmp
shll
dec
jno
push
xchg
pop
mov
pop
int3
adc
push
sub
sbbl
pop
sbb
mov
add
xchg
xchg
mov
lret
fs
or
inc
pop
mov
pop
jl
xchg
std
cmp
dec
ds
pop
clc
cmp
stos
mov
jg
mov
cmpsl
xchg
loop
xchg
and
imull
lret
test
js
sub
adc
repz
loope
fwait
jne
enter
js
jns
lret
add
pop
jbe
jmp
cmp
jmp
xor
mov
or
jle
inc
roll
add
or
into
mov
pop
sarl
rorb
mov
xor
cld
push
xchg
add
jl
call
jnp
jmp
mov
in
xorl
mov
pop
push
xor
xchg
imul
add
lods
rcrl
cmpsl
mov
mov
stc
push
inc
xchg
je
jo
mov
aaa
and
xor
xor
and
lahf
out
jo
cmpsl
ljmp
clc
xor
cmc
fwait
test
jo
icebp
lea
pusha
mov
scas
xchg
lret
dec
gs
push
fs
sbb
dec
jnp
adc
sbb
dec
xor
fnsave
dec
sbb
repnz
sbb
cmpsb
and
mov
mov
and
outsl
in
xchg
stos
cmp
std
pop
arpl
scas
adcl
rcr
mov
inc
push
cmp
inc
les
and
outsb
pop
cmpsl
and
lret
dec
pop
cmpsl
arpl
add
sbb
ljmp
movb
movsb
dec
lds
add
xchg
push
lret
inc
mov
fbstp
mov
shrb
paddsw
and
outsl
mov
rcl
movsb
ficoms
and
pop
test
pop
adc
jge
loopne
stos
mov
lea
push
inc
lret
or
lock
push
inc
cli
xor
jbe
paddd
push
cmp
aaa
push
mov
jne
lock
popa
push
mov
bound
insb
in
jo
push
out
repnz
push
cmc
jmp
movsl
popf
mov
xchg
scas
push
jmp
dec
xchg
mov
jb
outsb
sbb
push
insb
int
rol
mov
mov
add
leave
movsb
inc
xor
pop
movsb
enter
jno
push
fiadds
xchg
cmp
jb
rcrb
iret
mov
fsubrs
fmull
adc
mov
pushl
hlt
xchg
mov
cld
outsl
jl
fsts
add
outsl
cmp
rcrl
sbb
les
jmp
push
xchg
cmpl
pop
adc
leave
movsl
xchg
xchg
ret
ds
bsr
inc
cltd
test
adc
cmp
addr16
cmp
inc
lea
js
sbb
push
cmpsb
fadds
nop
jne
mov
les
in
push
repz
push
out
mov
inc
idivb
xchg
fwait
hlt
mov
cwtl
fnsave
jmp
or
mov
cmpb
out
scas
push
and
xor
inc
cs
js
push
data16
mov
rcll
out
shll
sub
ret
clc
les
popf
dec
mov
test
sti
mov
ss
mov
cmp
jmp
jl
sti
mov
push
adc
in
imul
or
js
jo
cld
and
fmull
out
rcr
sbb
xchg
lret
mov
jecxz
adc
lea
rcrl
lea
pop
pusha
and
dec
add
inc
daa
clc
sub
dec
sbb
xchg
xor
dec
ljmp
outsb
sbbb
cmpsb
mov
imul
lods
push
out
repnz
popf
mov
lods
sbb
cmp
loope
mov
cltd
cltd
outsb
pop
lahf
xor
push
jg
aad
sti
and
mov
insb
xchg
or
dec
adc
out
push
leave
mov
pusha
inc
scas
xchg
add
fstps
xor
ja
add
jno
sub
into
dec
pop
jle
jb
fisubrs
pop
add
in
fldl
call
mov
add
or
inc
int3
mov
push
int3
cmp
idivb
push
jge
bound
cmp
movsl
sub
cmp
mov
xor
push
dec
leave
scas
outsb
cwtl
imul
pop
inc
jb
sarb
add
or
cmpsl
mov
arpl
ljmp
cmp
jmp
xchg
stc
mov
aaa
and
shl
jmp
dec
sub
mov
cmp
jmp
xchg
inc
pop
fldz
push
mov
shll
jge
push
xchg
xor
inc
xchg
xchg
ja
xchg
add
xor
test
sbb
inc
pop
mov
cmp
aas
out
pop
callw
nop
mov
sbb
in
test
in
rorl
rcrl
nop
pushl
pop
jg
fsubrl
xor
mov
adc
scas
fcom
ja
rolb
jnp
ljmp
xchg
cmc
mov
adc
xchg
fisubrs
icebp
push
xor
mov
sti
notb
cmp
mov
clc
adc
mov
fidivrs
mov
rcrl
jecxz
out
iret
in
mov
sbbl
div
sti
test
pop
jmp
push
mov
in
cmp
pop
outsl
push
pop
fidivs
add
inc
fimuls
aam
xchg
adc
and
lret
icebp
in
ret
xor
pop
pop
cmp
or
jae
inc
aam
movsl
or
out
xor
mov
sahf
pushl
mov
shrl
push
pop
jecxz
mov
imul
and
cmp
aas
xor
sbb
dec
bound
les
out
mov
hlt
pusha
sub
cld
shl
xor
sbb
cmp
push
cld
and
cmc
arpl
imul
mov
loop
mov
or
repnz
mul
adc
xchg
jnp
sbb
jg
xchg
mov
cmp
ja
sub
cltd
addr16
xchg
mov
sarl
jne
sbbl
insl
or
dec
pop
bound
inc
shrb
rolb
inc
cmp
pop
repnz
test
mov
xor
in
inc
xor
add
mov
inc
icebp
into
xor
movsb
arpl
loope
cmpsl
fsubp
ss
push
or
iret
jnp
mov
xor
push
call
test
stos
dec
adc
decb
lret
and
mov
jne
lods
out
shrb
iret
xchg
sbb
mov
lret
cltd
push
xchg
out
negb
popa
xchg
dec
jmp
mull
aad
stc
loopne
aad
rclb
mov
adc
cmpsb
push
mov
mov
fs
mov
stc
mov
loope
push
das
shlb
fildll
in
ja
jnp
mov
dec
add
dec
mov
dec
in
loopne
mov
push
mov
mov
lock
rcrb
outsb
xor
or
adc
jae
je
mov
pop
sti
mov
xchg
popf
shll
sub
shlb
pop
shll
add
mov
mov
enter
mov
call
sarl
cmp
scas
adc
fisubrs
push
cmp
ret
movsb
add
test
mov
mov
push
ss
inc
pop
push
add
pusha
out
adc
cmc
clc
fisttpll
or
movsl
sbb
rclb
push
popa
jnp
xor
rorb
sar
cmp
push
sub
or
inc
push
enter
add
adc
sbb
notl
inc
ret
rol
xorb
in
mov
or
push
jne
dec
rcl
or
loopne
mov
repz
pop
cs
popl
mov
adc
jp
dec
or
imul
jecxz
rolb
mov
mov
and
and
and
std
xor
xor
push
es
inc
lret
or
jp
sub
mov
mov
xchg
addr16
gs
mov
data16
push
mov
dec
push
repnz
push
out
pop
cmp
sub
inc
push
jnp
cmp
stos
push
shl
sbb
cmp
add
pop
fcoms
aaa
push
mov
loopne
xor
pop
lcall
mov
mov
fists
repz
repz
xchg
sbb
sub
ja
cmp
fstps
stc
jae
mov
cmp
and
mov
xchg
cmp
rcll
jbe,pn
cwtl
xor
sbb
mov
jge
dec
cmp
or
jle
shll
dec
sti
fsubrs
jmp
sub
mov
je
mov
dec
pop
or
js
loopne
pop
adc
fnstsw
pop
adc
dec
out
inc
jne
ljmp
and
sub
cwtl
xor
inc
cmp
cmp
fdivrl
movb
xorl
test
push
test
test
or
cmp
inc
xchg
in
cmp
out
add
dec
imul
cwtl
or
xor
out
and
imul
mov
movsb
and
lcall
pop
ficompl
lods
push
gs
dec
add
in
dec
push
sub
or
test
ljmp
mov
nop
movsb
pop
xor
pop
jecxz
push
dec
int3
lds
mov
jnp
cmp
add
inc
test
dec
mov
xlat
jno
es
ret
adc
push
xchg
js
repnz
jmp
add
lcall
dec
es
inc
loope
stos
outsl
mov
fisubrl
repnz
pop
hlt
mov
add
lret
jg
aaa
insl
jne
iret
pop
and
inc
inc
mov
in
inc
dec
mov
pop
inc
andb
inc
add
jle
testl
pop
repnz
in
jo
mov
xor
cli
loop
sbb
dec
xchg
ret
loopne
scas
sub
cmp
push
imul
mov
or
test
jbe
dec
dec
lds
pop
or
cmpsl
cmp
cld
adc
xchg
inc
inc
mov
lods
into
pop
or
xor
enter
xor
fldt
fucom
add
pop
mov
iret
jle
push
and
cld
or
lods
push
or
inc
jbe
repnz
fildll
pop
in
adc
xor
test
inc
jp
mov
pushf
dec
sbb
sub
bound
movsb
pop
jns
mov
in
scas
xor
test
inc
pop
aaa
scas
rcl
iret
inc
orb
mov
imulb
int3
xor
jp
mov
jecxz
in
mov
mov
lods
adc
in
jp
jl
mov
lds
and
mov
mov
push
pop
test
xchg
or
xor
inc
push
repnz
mov
pushf
aaa
imul
cltd
jae
or
and
mov
out
mov
jbe
xor
push
das
xorl
jle
in
sub
push
sbb
dec
int
add
lea
test
outsl
sub
out
jg
into
xchg
push
fcmovne
fdivrl
push
lret
movsl
mov
jns
mov
inc
adc
mov
ficoml
pushf
sub
push
loop
jmp
xchg
jp
push
inc
dec
jo
and
addr16
sub
adc
dec
inc
sub
add
dec
aad
adc
ret
or
clc
inc
shll
or
mov
ret
cmp
jne
sub
mov
lea
or
add
xor
int
fs
out
sti
adc
faddp
xchg
pop
ret
mov
mov
sbb
mov
aam
jae
mov
and
jns
inc
sub
lock
push
jb
insb
cmpsl
cwtl
push
pop
add
adc
insb
xor
scas
mov
add
fistl
inc
push
pop
adc
std
mov
aam
into
leave
xor
fistl
sbb
loop
jno
mov
xchg
mov
cwtl
cmp
add
mov
inc
aaa
mov
pop
inc
adc
sub
call
jl
pop
lret
sub
ja
adc
or
push
jno
jecxz
sbb
fsts
fstpl
fidivrl
in
sbb
push
stos
push
iret
insl
pop
aam
pop
or
push
mov
rcrb
jecxz
sti
inc
mov
outsl
out
mov
and
xor
pop
insb
fs
mov
push
adc
test
sbb
test
push
mov
std
jbe
add
adc
add
push
out
and
ror
lcall
psrlw
nop
xor
sbb
stos
sbb
jle
mov
add
out
aas
adc
test
int3
hlt
js
or
lret
jge
arpl
int
sbb
pusha
xor
jp
int
or
mov
jp
push
fsubr
xchg
lds
jge
sbb
shlb
mov
shll
inc
lret
xor
mov
or
xor
push
scas
xchg
pop
test
push
lret
lods
push
or
ret
push
xor
xor
lret
adc
or
push
std
pushf
jmp
fucomp
or
jo
lcall
dec
out
and
imul
sti
shlb
sub
mov
mov
sub
rcll
sbb
dec
and
mov
outsb
out
stc
add
mov
sub
shlb
pusha
movl
jae
xor
add
adc
jg
or
int3
nop
popf
inc
lcall
add
push
xchg
push
int3
ret
sub
jbe
add
mov
jnp
std
sbb
mov
scas
xlat
pop
xor
and
sub
pop
outsl
mov
ja
push
sti
ss
imul
movsb
imul
test
mov
xchg
mov
ret
out
xor
fsts
pusha
push
cmp
jno
test
bnd
loop
mov
lock
sub
aas
test
outsb
iret
xchg
or
mov
dec
aaa
pop
lret
arpl
mulb
roll
loopne
xor
dec
cld
fcoms
fcomp
pushf
fs
mov
push
jmp
fwait
cmp
sub
sti
pop
cmp
ds
add
ficomps
cmp
jnp
inc
lock
xchg
in
and
jno
jne
sti
out
int3
adc
cmp
xchg
inc
sarb
ret
mov
mov
mov
inc
jne
mov
insb
idivl
test
push
jecxz
popf
xchg
push
push
sbb
push
inc
cmp
cmp
lods
sbb
mov
inc
lods
mov
mov
adc
idiv
jb
fsubp
adc
dec
mov
stc
push
jge
xchg
mov
gs
ljmp
cmp
jp
jp
sbb
cmp
lock
dec
repnz
xlat
decl
push
or
aas
frstor
and
jne
cmp
ret
sub
jge
and
add
jmp
mov
lcall
cltd
cld
xor
stos
jnp
es
jg
roll
add
sbb
jmp
and
lea
mov
mov
mov
cs
enter
std
push
jg
jge
neg
fistps
xlat
cmp
push
inc
fldl
repz
jne
out
mov
jmp
cwtl
pop
cmp
mov
pop
addr16
rcrb
sbb
jl
pusha
jno
mov
shll
pop
sbb
aad
push
push
push
shll
lcall
leave
mov
fsubs
jg
push
jmp
jmp
cmpsb
xorl
mov
insl
scas
cmp
cpuid
fsub
push
hlt
push
push
push
mov
xor
sbb
daa
xchg
xchg
dec
shll
or
mov
dec
or
cwtl
icebp
or
jbe
std
inc
sub
fmuls
xor
mov
xchg
jbe
add
mov
jns
or
push
pop
mov
adc
sahf
lret
mov
push
pop
pop
inc
push
dec
mov
xor
out
inc
xor
mov
movsw
xor
in
sbb
rorl
cmpsl
mov
push
repnz
pop
cmp
clc
rcll
or
addr16
loopne
push
mov
and
in
lcall
sbb
xor
pushf
adc
std
mov
mov
vmulps
xchg
faddl
jl
pushf
ss
inc
pop
push
es
mov
adc
cmc
jle
clc
int
movsl
or
jb
jmp
popa
cwtl
cwtl
ss
pop
sbb
std
test
cmpsb
das
cld
xor
cmp
push
cmp
xchg
mov
je
push
ret
or
scas
clc
dec
arpl
sbb
aad
push
pop
aad
sbbl
sub
add
lcall
rcll
jno
inc
mov
dec
test
sbb
mov
sub
popa
jne
and
mov
lds
fimuls
mov
cmpsb
aaa
lea
and
incl
push
ljmp
push
shlb
lret
test
jne
or
aas
insb
lods
adc
pop
jp
daa
jo
adcl
adc
out
cs
bound
je
or
fwait
lea
pop
rcrl
test
icebp
xor
and
jl
add
fs
scas
fwait
rolb
push
or
leave
cmp
fwait
shrl
stos
jp
sar
movsl
aad
dec
sub
mov
mov
inc
fstp
push
dec
jns
lret
insb
sbb
flds
sub
adc
repnz
add
push
dec
cmpsl
test
ret
mov
pop
xchg
ja
xor
add
scas
in
adc
mov
jns
adcl
fildl
xor
jbe
popf
ret
inc
dec
in
lret
lds
cltd
push
arpl
mov
scas
mov
jno
cwtl
cs
and
adc
outsb
shlb
mov
aad
imul
jle
push
fcomps
dec
cs
sbb
addr16
data16
add
scas
cs
rorl
xchg
out
dec
sub
xchg
in
push
scas
icebp
scas
aas
adc
imul
insb
ret
sub
fwait
pop
dec
jb
jl
or
insl
xchg
scas
xor
inc
jl
out
inc
shl
mov
cmp
mov
adc
data16
movl
arpl
loopne,pn
lret
pop
push
and
lock
push
inc
enter
cs
cmp
test
mov
cld
pop
dec
xor
mov
mov
adc
lock
pop
mov
ss
inc
pushf
dec
or
cmp
mov
mov
mov
out
test
enter
insl
in
jbe
fstpt
movsb
cmp
out
ja
pop
inc
outsl
cmpl
es
jns
push
cld
adc
ljmp
jp
xchg
lods
and
test
out
sub
jae
insb
mov
or
stc
stos
adc
dec
mov
xor
enter
mov
sahf
icebp
cmp
dec
inc
arpl
push
insb
cmpsl
cmc
ljmp
jns
push
xor
cmp
sub
loopne
ret
and
rcrl
daa
daa
mov
out
mov
xchg
xor
scas
test
lahf
shll
inc
push
daa
into
and
fwait
sbb
daa
push
sub
or
std
jae
mov
jp
lret
push
cmp
sub
das
lret
test
mov
mov
and
pop
pop
pop
mov
or
addr16
push
pop
out
dec
pop
pusha
and
imul
or
mov
call
iret
lds
test
frstor
push
imul
jne
imul
jg
mov
int
ret
push
jmp
inc
jne
mov
push
ret
adc
fnstsw
gs
iret
notb
pop
mov
cmp
pop
cmp
je
arpl
insl
mov
fdivrs
push
cmp
repnz
testb
fistpl
ret
jns
ret
push
mov
aad
in
aaa
movsl
mov
lcall
jne
pushf
pop
jnp
out
repz
mov
push
inc
sub
in
imul
push
mulb
mov
pop
test
pushf
or
sbb
push
adc
add
cmp
sbbb
je
mov
aad
push
clc
mov
and
push
mov
stc
shl
lods
jbe
push
sub
xor
sub
mov
out
or
jmp
mov
fwait
mov
dec
xor
imul
dec
fidivs
dec
repnz
pop
mov
aam
mov
fwait
cli
or
ficoml
inc
aaa
bndldx
sahf
loope
stos
xor
out
imul
or
shrl
mov
andb
popa
pop
fldenv
in
adc
jl
aas
jnp
cmp
addr16
lcall
mov
pop
daa
dec
jae
int
or
add
and
outsl
out
xchg
add
test
mov
test
jle
ss
fsqrt
cmpsl
jg
jge
cs
xchg
mov
push
es
xchg
mov
mov
jb
mov
cs
into
in
pop
dec
lds
out
fxch
cmp
mov
out
dec
mov
xchg
les
cmc
fcoms
clc
push
stos
orl
arpl
adcb
stc
cmp
mov
pop
inc
pop
addr16
fwait
mov
pusha
ja
subb
test
and
xor
dec
xchg
push
sti
sbb
cmc
imul
cmc
sbb
std
ret
mov
inc
jg
je,pn
or
shlb
cmpsb
mov
mov
shlb
pop
dec
sub
arpl
ja
xchg
mov
ret
and
scas
rcr
es
xchg
scas
mov
lret
cmp
push
add
adc
xor
adc
movsl
pop
aam
mov
add
cs
jle
rcr
into
sub
in
imul
outsl
shlb
mov
push
lea
cmp
shlb
sub
stos
cmp
push
or
push
imul
out
addr16
in
dec
xchg
or
hlt
jle
jle
or
scas
adc
mov
into
jg
sbb
imul
les
mul
and
ret
mov
aaa
mov
push
push
sbb
pusha
scas
ret
xor
sbb
lret
in
xor
pop
push
rcll
not
mov
aam
and
adc
and
xchg
fiadds
cmpsl
movsb
adc
or
out
jg
adc
sbb
xchg
nop
add
push
inc
insl
jb
stos
inc
inc
repnz
mov
xchg
js
push
adc
sbb
ficoms
mov
mov
and
inc
cmc
lret
fs
inc
mov
cmp
mov
pop
sbb
mov
mov
lock
outsb
sbb
pushf
and
inc
gs
ljmp
jnp
mov
rcrb
mov
and
xchg
jo
nop
icebp
cld
push
sbb
jle
or
aad
sub
es
stos
dec
lods
sub
out
ljmp
fwait
gs
out
cwtl
xchg
xor
mov
cmpsl
inc
test
xlat
pop
xor
je
aam
stc
inc
je
and
jecxz
mov
hlt
sub
sub
mov
loopne
and
fistl
xorb
dec
adc
iret
jmp
dec
daa
out
lret
jg
iret
add
sub
xor
push
pop
fmulp
jl
jl
roll
dec
mov
ret
vunpcklpd
test
rorb
ss
cmpsb
push
data16
xchg
xor
cwtl
push
dec
adc
test
and
jg
xchg
mov
jb
pop
mov
mov
in
adc
mov
outsb
fs
add
lahf
movsl
fmull
push
cmovnp
mov
xor
inc
jp
mov
mov
inc
add
pusha
sub
sahf
ds
std
bound
and
xchg
add
pop
mov
xchg
push
sbb
fs
adc
clc
ljmp
enter
and
aaa
push
mov
iret
fisubl
fdivs
xor
and
stos
shr
cmp
leave
leave
push
ret
rol
subl
sub
push
fcmovb
and
fs
dec
js
out
or
jl
incb
sbb
cmp
data16
mov
or
push
imul
test
xor
jge
mov
fnstsw
dec
in
mov
and
jp
mov
ret
sbb
sub
xor
sbb
and
pop
mov
out
std
ret
push
and
push
bound
insb
arpl
cmp
mov
test
mov
lcall
bound
jge
mov
mov
sbb
sahf
add
adcb
mov
les
arpl
outsl
test
pop
scas
cmpsb
ljmp
stos
loop
push
and
lods
add
mov
mov
push
jmp
pop
nop
scas
mov
mov
pop
insl
xor
cmpsl
xor
fucom
mov
and
mov
adc
test
pop
adc
mov
out
sub
stc
xlat
fimuls
cmp
and
mov
dec
mov
cltd
sub
loope
sbb
cmpsb
mov
fdivrs
push
insl
sub
add
sub
rcrb
push
and
fnsave
lea
stos
push
leave
cld
subl
aam
popl
sub
in
loopne
fcomps
sub
jp
das
push
pop
test
pop
mulb
icebp
cmpsl
shrb
push
sbb
xlat
lahf
bnd
pop
jb
es
fnstcw
dec
inc
pop
add
in
xchg
inc
loopne
push
inc
sbb
xor
shll
sbb
cmpsb
cli
pop
push
dec
add
into
dec
out
pop
iret
ja
pop
sbb
iret
inc
or
mov
rcrb
sti
push
or
aaa
cmp
push
lcall
xchg
pop
in
mov
cmp
fs
jmp
stc
fcompl
cmp
mov
mov
repnz
stos
cmp
mov
mov
in
cli
sbb
mov
and
enter
cmp
mov
cld
add
aaa
pusha
in
into
or
jae
jns
mov
rcr
sub
push
jns
pop
loope
loop
mov
mov
stos
inc
xchg
nop
mov
call
pushl
jp
pop
test
push
ret
pop
add
jl
stos
pop
mov
mov
aas
lea
popf
dec
or
test
push
lds
sahf
in
movsl
cmp
adc
push
mov
les
leave
je
dec
push
and
cmc
enter
aas
cmp
clc
inc
loop
stos
mov
lea
fpatan
hlt
sub
mov
cld
mov
fisubrl
lret
xchg
out
push
mov
lds
imul
dec
dec
nop
bnd
enter
fwait
adc
jns
dec
es
outsl
and
test
jecxz
push
ljmp
adc
insl
mov
dec
out
inc
lret
shlb
xor
std
inc
adc
inc
mov
test
lret
add
loope
int
ret
mov
or
cmp
sti
mov
inc
loope
hlt
shrl
mov
push
ljmp
mov
push
inc
sub
jns
cwtl
cld
stos
sbb
jno
inc
insl
addb
testb
rcl
push
dec
mov
int3
test
mov
cmp
xchg
repnz
push
mulb
push
xchg
cld
ss
and
es
lret
dec
pop
pop
fucomp
pop
iret
fucom
jo
ror
lods
or
inc
cld
lds
mov
sahf
mov
imul
lods
mov
cmp
divb
jns
mov
repz
fs
test
xchg
xchg
push
inc
je
es
push
sbb
fisubrs
outsb
cmp
cltd
sar
jecxz
sub
test
icebp
gs
sub
sub
xor
ror
addb
sbb
adc
enter
cwtl
jae
int
cld
imul
pop
bnd
mov
dec
into
cmp
je
cmp
push
mov
xchg
dec
jno
test
cmp
jne
lcall
adc
lss
call
pop
rcr
sub
cs
fistl
fildll
stos
inc
jne
out
xchg
xchg
fwait
push
mov
inc
insl
push
movsl
popa
rcrl
mov
push
or
mov
jg
jne
je
dec
push
sub
jno
dec
gs
ja
push
add
xchg
xor
rcl
pusha
std
or
cmpsb
stc
stos
int3
mov
enter
mov
xchg
loope
dec
std
or
pop
jle
cmp
fcoml
scas
xor
jno
andb
or
pop
push
jp
push
add
bound
daa
mov
push
imul
sub
aas
in
pop
cmpsb
enter
mov
andb
je
mov
add
dec
cmc
xchg
dec
rcrb
scas
ljmp
pop
adc
ljmp
fwait
dec
jns
xor
mov
and
mov
lcall
pusha
mov
sahf
stos
lods
aad
or
push
and
mov
pop
int
ret
and
std
push
jo
push
mov
pop
sub
or
jg
push
testl
mov
sarb
mov
in
mov
outsb
xchg
aas
ss
pop
dec
xor
adc
sbb
sbb
fistl
mov
adc
sub
scas
sub
xchg
arpl
loopne
pop
jo
shl
out
cmc
popf
cmpsl
outsb
pop
das
jnp
and
lahf
xchg
pop
mov
incl
adc
mov
test
push
into
shrb
bswap
xchg
adc
stos
fnstsw
xchg
mov
mov
push
rclb
cmp
jl
cmp
sub
aam
es
xor
lcall
ja
dec
xchg
xor
into
lea
dec
dec
jg
mov
repz
popf
sbb
jb
imul
loop
inc
outsl
mov
andl
or
bnd
or
jmp
dec
dec
fidivrs
jl
fstpt
iret
or
cmpsl
aas
repnz
lcall
jecxz
and
stc
xchg
shlb
add
or
jns
add
in
xchg
lods
ret
xor
shrb
pop
pushl
shll
cli
leave
imul
push
ds
outsb
lds
add
cmp
adc
test
push
js
cli
fbld
lea
dec
xchg
and
cs
lea
or
xchg
adc
mov
std
push
pop
xor
rcr
mov
cmpsb
mov
and
roll
test
push
adc
rclb
add
in
push
dec
inc
fwait
cmp
sti
insb
das
loop
mov
lock
negl
push
movsb
pop
adc
shlb
xor
pop
pop
js
jmp
test
imul
mov
out
outsl
dec
cmp
pop
xchg
sbb
mov
rcl
fmul
cmp
arpl
fwait
iret
mov
xchg
cmp
stc
xchg
mov
repz
aas
jge
push
mov
sub
sbb
inc
mov
insl
dec
sub
bound
push
sub
add
xor
sub
negb
mov
sti
sbb
mov
and
add
mov
dec
jo
pushf
sub
or
xchg
pop
xor
inc
lods
sub
popf
adc
xchg
fstl
lock
mov
push
jl
jl
xor
pop
and
flds
scas
ds
pop
cwtl
or
repz
test
lret
xor
mov
int3
or
adc
mov
cmc
xor
out
sub
pop
xchg
mov
xor
push
insb
les
inc
mov
mov
shlb
insb
sbbb
add
jnp
enter
repnz
loopne
pop
push
sbb
outsb
stc
iret
loopne
xchg
test
inc
xor
jne
lds
mov
aas
int
jg
jae
dec
div
add
mov
aas
enter
lahf
sbb
ffreep
add
adc
lahf
outsl
dec
out
lds
lods
rclb
pop
add
sti
shlb
pop
pop
cmp
test
sub
pop
in
dec
xorb
pop
int3
or
push
add
out
sub
mov
inc
ret
lcall
enter
sbb
and
jae
xchg
inc
mov
jnp
in
aam
add
sbb
xor
push
std
adc
ret
aas
popa
jne
xchg
scas
and
cltd
xlat
sub
jno
mov
push
xchg
shl
test
ficoms
inc
adc
dec
movsb
inc
arpl
subb
mov
mov
lahf
jle
pop
or
mov
add
push
cmp
add
and
fprem
sbb
mov
xor
adc
jmp
xor
inc
mov
add
xchg
icebp
jl
sub
push
in
pop
pop
dec
ret
xchg
sti
inc
add
movsb
xor
shl
insl
test
inc
scas
rol
push
int
xchg
mov
adc
sub
xlat
loope
mul
pushf
push
stos
pop
xor
dec
sbb
pop
jo
add
push
sbb
or
out
or
jnp
fsubrs
jb
std
adc
xchg
sub
stc
or
lock
outsl
sub
push
jns
ret
mov
dec
leave
nop
aaa
out
filds
inc
mov
test
sub
pop
or
and
rcr
add
loope
inc
pop
nop
adc
sbb
xor
cmpsl
xchg
mov
cmc
repz
xor
or
xlat
mov
bound
inc
jl
add
shl
inc
stc
aaa
out
sub
inc
test
cmpsl
notl
cwtl
adc
mov
mov
push
ss
repz
cmc
cltd
in
loopne
fwait
dec
add
push
sti
js
jp
mov
sti
push
rcrl
iret
mov
fcmove
pop
push
adc
and
lret
std
mov
cmp
jle
mov
inc
xchg
xlat
push
jo
cmp
cwtl
add
push
add
jg
mov
add
adc
jecxz
sub
jb
adc
xor
dec
sbb
jb
mov
push
mov
mov
daa
cmpl
shlb
rcrb
pop
and
and
push
sub
aad
push
lock
outsb
dec
vmovsd
pop
adc
xchg
mov
addr16
mov
mov
stc
mov
lahf
in
push
scas
cmc
inc
mulb
cmp
hlt
outsb
push
or
mov
adc
pop
sub
daa
pop
rcl
clc
push
int3
enter
mov
aas
pop
out
mov
mov
test
out
clc
movsl
stos
jbe
pop
lret
out
push
push
or
mov
lock
cld
xor
pop
incl
cmpsl
cmp
je
clc
sbb
pop
xchg
mov
in
mov
repnz
dec
lods
scas
out
and
inc
sub
lret
sbb
lock
push
adc
lret
and
test
xchg
xchg
jbe
je
mov
cmp
inc
pop
push
lds
insb
or
adc
mov
adc
out
int3
ror
movsl
fbld
push
cwtl
inc
outsl
pop
in
xor
dec
out
test
mov
in
xor
nop
or
xchg
push
jns
pop
jp
mov
mov
xlat
int
arpl
mov
fcoml
add
inc
dec
std
leave
lods
push
jns
hlt
mov
rclb
nop
cmpsl
dec
push
popa
aad
inc
adc
data16
sub
std
pop
in
out
xchg
xor
mov
stos
inc
pop
hlt
imul
data16
mov
jo
outsb
jle
jp
repz
jmp
pusha
fwait
pop
movd
lea
pop
xchg
inc
mov
aad
xorl
inc
rcl
in
pusha
nop
add
outsl
popa
mov
je
fidivrs
sbb
movsb
shl
sbb
xor
int
cld
xchg
xor
mov
insb
stc
jg
xchg
ljmp
and
adc
movsl
push
xor
les
sub
loop
and
and
orl
inc
cmp
pop
jb
mov
cs
stos
adc
jg
repz
sti
sub
jno
push
movsl
ret
icebp
xchg
cli
loopne
movl
in
loop
jnp
lahf
icebp
cmc
out
mov
es
ffreep
cmp
push
fwait
lcall
sub
rclb
fs
lcall
dec
mov
add
and
test
iret
test
jle
xchg
jge
insl
jg
sub
movsb
sub
mov
aas
xchg
xchg
ret
loop
popa
aam
fldl
aas
add
mov
mov
jmp
inc
or
sti
or
mov
jns
xor
and
push
cmpsl
cmpl
jg
inc
mov
and
inc
stos
arpl
outsb
lcall
xor
cmc
fistpl
jnp
cltd
cmpsb
ja
sbb
mov
out
push
cmp
xor
cs
faddp
cmpb
cli
push
mov
jg
dec
cld
filds
lea
out
cs
loope
jle
and
cwtl
push
push
clc
pop
mov
push
popf
stc
dec
clc
push
xor
fs
scas
fidivrs
mulb
jmp
int3
xor
cmpsl
add
mov
lcall
in
sbb
std
push
push
jge
adc
imul
mov
cmpsb
ja
dec
mov
cmp
and
cmpsb
mov
popa
pop
sbb
ja
add
mov
push
dec
pop
dec
repz
cmpsl
ror
sbb
mov
inc
in
mov
xor
stos
iret
add
add
test
popf
iret
jge
loop
mov
inc
hlt
out
xor
push
cwtl
and
inc
push
xchg
pushf
popf
jge
inc
jb
adc
cli
or
sti
fdivrl
sbb
xchg
or
lea
jl
dec
ret
jnp
subb
imul
out
movsl
std
adc
rcl
jns
dec
xchg
lods
fsub
push
ret
faddl
pop
inc
out
cmc
add
in
push
push
inc
out
mov
sti
jge
inc
ss
in
popa
pop
fisttpll
imul
outsl
pop
ss
mov
loop
mov
mov
jb
mov
rcll
enter
mov
das
aas
insb
aaa
sbb
int3
push
test
push
mov
aad
and
mov
shrl
jo
test
jo
pop
popf
dec
push
sti
test
mov
xchg
call
jo
cmc
and
sub
dec
inc
test
lods
imul
dec
xor
jp
je
sahf
daa
aas
in
shll
pop
addb
das
dec
push
add
xor
je
cmp
shrl
or
test
pop
add
sub
jns
movsb
lret
subb
or
rcll
xor
daa
add
pusha
fmull
mov
enter
fildll
cltd
xor
addr16
jnp
pusha
push
jmp
pop
cwtl
fiaddl
add
inc
int
push
in
test
mov
negl
lods
sbbl
pop
in
mov
mov
adc
into
imul
mov
imul
hlt
mov
cs
mov
jle
and
fldt
pop
leave
insl
lahf
lock
sbb
xlat
xchg
push
mov
push
scas
xchg
es
add
jge
inc
and
sbb
mov
mov
leave
jno
lret
aad
outsl
ss
fs
pusha
inc
xchg
sysenter
into
dec
push
push
in
pop
push
jnp
dec
jne
cmp
or
add
and
mov
bswap
sbb
mov
push
pushl
in
or
jbe
pop
dec
dec
adc
xchg
out
mov
xor
cmova
dec
iret
xor
pop
dec
dec
mov
xor
sub
aad
shrb
movsb
mov
test
dec
cmp
cs
icebp
cwtl
movsl
sahf
mov
orl
inc
in
cmp
jge
inc
pop
pop
es
loop
in
mov
or
xchg
rep
adc
inc
push
in
popf
sti
inc
pop
add
or
cmpb
loopne
mov
call
cmp
mov
loop
rcll
push
adc
stos
popf
rorl
ljmp
repz
andb
mov
lret
mov
dec
cld
inc
pop
and
int
push
xor
push
sub
sub
adc
lock
sbb
jmp
and
adc
push
pop
icebp
call
sbb
das
cmp
xchg
jmp
mov
cmp
inc
fsts
mov
lds
imul
pop
mov
push
test
mov
inc
xchg
cmpsl
xor
loopne
stos
pop
or
lcall
dec
sbb
mov
jno
xchg
and
cmp
daa
inc
in
xchg
outsb
fidivs
cmp
xchg
lods
subl
stos
sbbl
cmp
adc
add
ja
jo
push
pop
dec
fldl
adc
int3
mov
push
mov
xchg
pop
push
shr
fildl
mov
lret
push
lods
mov
rorl
mov
mov
sub
stos
stos
xor
clc
mov
or
pop
popa
inc
addl
out
dec
lds
xchg
xor
push
xchg
fstpl
or
and
movsb
outsb
jge
jmp
xchg
xor
leave
insl
mov
xlat
sub
fstl
sub
aad
xchg
in
std
icebp
mov
aaa
or
in
and
push
cwtl
dec
push
jmp
xor
jmp
lret
inc
popl
pop
lds
rorb
mov
rcl
dec
push
in
mov
inc
mov
mul
fcomps
sub
cmp
mov
fwait
push
cmp
test
call
inc
test
cmpsb
pop
js
add
push
cmp
and
mov
popa
jae
imul
fwait
and
jb
mov
inc
pop
into
stos
xchg
mov
fnstenv
sub
scas
xchg
push
flds
lods
cltd
je
fisubs
idivb
insl
or
stc
xchg
xchg
add
mov
inc
clc
mov
add
fstpt
pop
dec
xchg
in
loop
cld
stc
popa
popl
mov
movsl
cmp
leave
mov
and
push
ss
out
hlt
mov
test
sahf
es
mov
insl
pop
les
mov
and
sbb
sub
movsb
mov
inc
nop
std
call
aaa
sub
clc
repnz
ret
cmpsb
ret
loope
sub
inc
sub
mov
sub
and
in
add
gs
ljmp
mov
hlt
sbb
pop
test
and
sbb
dec
dec
in
mov
xor
mul
mov
adc
aas
movsl
pop
mov
addr16
dec
xchg
jp
test
pop
arpl
push
in
insl
sub
push
and
xchg
jecxz
into
pop
xor
dec
sub
test
fistps
xor
xchg
mov
hlt
mov
add
jle
addb
dec
scas
popa
jp
popa
mov
cmc
and
sbb
lahf
mov
jnp
mov
loope
mov
popa
jo
push
jnp
enter
and
jg
outsb
loopne
push
adc
cmp
mov
pop
pop
push
cmpsl
add
xor
lcall
cmp
lock
andl
iret
insb
pop
push
push
stc
data16
push
lret
dec
push
mov
sbb
or
jo
jbe
pop
pop
jecxz
aad
into
inc
adc
loop
xchg
push
pop
dec
sahf
out
enter
push
ret
orl
lds
fstpl
jmp
dec
jae
mov
into
or
cmp
repnz
movsl
scas
mov
cmc
test
std
pusha
sahf
mov
jns
and
add
cld
mov
push
mov
out
push
adc
and
outsb
mov
jns
mov
add
push
fsubr
cs
mov
mov
inc
sub
fsubrp
stos
cltd
and
and
nop
mov
in
ja
adc
subl
js
je
jmp
scas
cwtl
xor
nop
push
sub
movb
push
test
xor
xor
cmp
mov
test
daa
sub
xchg
inc
adc
inc
nop
sbb
mov
pop
cmc
cmp
add
pop
or
mov
pop
xchg
or
jns
gs
imul
mov
cmp
in
adc
int
mov
push
aas
add
push
adcb
loope
adc
rolb
or
ljmp
std
ret
dec
iret
or
cmp
sub
cmp
cmp
pop
popa
mov
xchg
jecxz
mov
ss
jmp
orl
mov
adc
or
outsl
cmp
lods
lods
scas
or
iret
inc
test
jmp
mov
xor
fs
or
pushf
aam
shll
and
frstor
inc
icebp
andl
daa
jg
mov
pop
adc
xchg
sub
jno
and
dec
fsubrl
test
jmp
cli
jne
or
test
and
pushl
dec
sbb
jecxz
cmp
jb
shlb
mov
fsubrl
ja
fs
shld
ficomps
fcoms
cmp
stc
inc
les
dec
imul
dec
xchg
repz
decl
mov
inc
test
lds
xchg
jl
daa
clc
incl
push
and
enter
add
jle
and
sbb
ljmp
addr16
cmp
sbb
push
inc
pushf
pop
out
pop
sbb
add
inc
out
add
and
xchg
stos
lret
fimuls
outsb
cmc
jecxz
sbb
adcb
jo
jbe
add
jns
xchg
mov
fmuls
iret
cwtl
jb
xchg
inc
adc
dec
fst
scas
repz
jnp
inc
fisubl
dec
pop
pop
scas
enter
inc
insl
les
js
hlt
out
sbb
data16
add
add
adc
loop
or
jo
inc
fsts
and
mov
movsl
and
aad
and
jg
insl
jmp
lods
mov
ljmp
shrb
dec
lods
sets
pop
sub
movsl
fwait
rclb
jl
sbb
push
adc
mov
pop
pusha
inc
pop
add
mov
inc
les
add
lods
pop
jp
mov
fisttps
or
adc
sbb
adc
inc
mov
pop
xlat
and
clc
lahf
pusha
mov
sbb
jle
cltd
dec
xor
adc
cmp
mov
xor
shll
cs
fwait
adc
ljmp
in
cli
dec
ljmp
push
mov
lds
adc
sub
dec
stos
push
jmp
lods
pop
inc
pop
aaa
adc
add
scas
mov
stc
imul
rorb
out
xor
shll
push
add
subl
pop
cmp
je
nop
pop
and
cmp
ljmp
insb
mov
add
push
mov
popa
xor
ret
call
mov
les
sbb
xor
div
adc
dec
imul
cmp
pop
leave
inc
lods
repnz
fldz
pop
mov
sbb
xchg
in
push
push
cmp
or
leave
test
dec
call
cmpsb
sbb
ret
cmc
add
ljmp
out
cli
cmp
rcll
pop
enter
ficomps
aad
fstp
outsb
insb
mov
test
aam
jl
mov
sbb
insb
xor
cmp
mov
aam
inc
lods
pop
repz
mov
xor
inc
xchg
mov
ds
out
jns
xor
stos
dec
ljmp
mov
pop
pushf
xor
xchg
or
cmp
adc
scas
int3
loopne
ret
mov
lock
sbb
sub
push
rcrl
pop
js,pt
push
sbb
subb
mov
inc
dec
cmp
adc
movsb
imul
jmp
imul
cli
xor
pop
mov
jecxz
cs
push
push
fidivs
mov
xchg
sbb
xor
push
xchg
inc
in
mul
daa
decl
adcb
idivb
cmp
jp
mov
fwait
stc
mov
and
jbe
push
ret
repz
scas
or
push
pop
es
aam
pop
cs
mov
push
xor
pop
outsl
push
shlb
gs
ret
xlat
fstl
lods
inc
test
or
and
das
imull
push
inc
out
sbb
dec
add
pop
mov
hlt
inc
or
mov
push
shlb
cld
dec
ja
loop
ret
fwait
xchg
jns
dec
orl
lcall
mov
sbbl
outsl
or
ja
mov
and
or
add
pusha
sbb
rol
adc
mov
cmp
mov
xchg
popf
jp
xacquire
test
aas
pop
je
mov
push
loopne
push
std
xor
roll
push
fidivrl
xlat
fsubl
sub
lret
cs
ror
adc
lret
push
or
ja
mov
jl
pop
or
cld
and
jmp
iret
or
clc
sub
pop
stos
mov
fcompl
push
cmp
cli
adc
or
cmp
push
push
hlt
mov
sbb
pushf
fchs
sub
or
sti
fbstp
push
push
sbb
xlat
mov
movsl
aas
int
addl
pop
xor
pusha
mov
mov
and
clc
adc
clc
dec
int
test
fwait
mov
or
mov
mov
pop
add
add
and
movb
pop
test
sbb
pop
popa
pop
add
dec
mov
or
addr16
fidivl
add
nop
add
sbb
adc
sbb
cld
jle
outsb
or
adc
data16
dec
cmp
mov
jnp
lods
mov
push
in
outsb
xchg
movsl
icebp
pop
xchg
sbbb
xor
inc
push
jno
adc
mov
ret
xchg
pop
inc
iret
fnstsw
mov
out
es
arpl
mov
enter
imul
jp
xchg
or
pop
icebp
pushf
dec
int3
sbb
ss
dec
stc
ror
mov
mov
lock
sbb
and
pop
xchg
jp
shr
push
test
es
sbb
int
test
rcll
imul
frstor
xchg
insl
mov
mov
push
imul
insb
lds
sarl
pop
add
call
sarl
inc
cld
lods
popa
adc
sbb
mov
cs
popa
and
xor
fcmovbe
xchg
nop
iret
daa
mov
lret
fnsave
pop
int
rcrb
xor
cmpl
ja
and
sbb
push
iret
ja
cltd
daa
aas
adc
out
mov
ret
stos
cld
inc
mov
sahf
pop
mov
inc
hlt
out
jecxz
fldenv
mov
pop
lds
popf
adc
dec
jge
sub
jb
cmp
jb
scas
add
mov
adc
inc
adc
jnp
popf
subb
add
aaa
jge
imul
sbb
call
daa
lahf
pop
das
jb
mov
mov
outsl
jmp
push
or
stos
out
mov
movl
mov
push
jecxz
sbb
cmp
stos
out
or
sbb
mov
adc
jmp
jno
inc
orb
mov
rorb
out
push
pusha
push
in
js
dec
icebp
jmp
and
std
shll
jbe
nop
sbb
pop
mov
xchg
loope
push
push
mov
jno
inc
add
xor
push
xchg
sbb
sti
and
fwait
repz
sub
rcr
pop
cmpsb
push
jo
enter
sbb
inc
and
dec
or
jnp
les
aad
faddl
sahf
ja
push
scas
sbb
in
je
ds
repz
mov
out
roll
imul
int3
scas
inc
outsl
out
xlat
insl
jo
psubsw
les
mov
mov
icebp
mov
faddl
stos
add
pop
jns
fisttps
mov
pop
xchg
stos
adc
sbb
mov
mov
insb
jnp
lea
mov
adc
data16
mov
stos
mov
repz
enter
mov
adc
pop
dec
sub
adc
inc
mov
add
inc
inc
pushl
dec
mov
sbb
push
sub
jo
pop
and
sub
xchg
inc
in
push
das
or
jmp
mov
shl
lcall
inc
btc
mov
sbb
mov
adc
sub
cmp
adc
shll
aam
dec
and
aam
mov
adc
or
sbbb
adcl
sahf
loope
shll
jge
cmp
aam
cmpsl
dec
rorl
xchg
sbb
lock
addr16
sub
daa
jp
dec
fdivrs
sub
popf
inc
es
mov
imul
mov
jl
add
push
adc
inc
int3
leave
mov
mov
shl
mov
in
mov
test
nop
adc
cmp
test
jmp
jb
cmp
dec
push
fcomp
adc
jns
mov
add
lods
adc
sbb
repnz
fs
jno
inc
mov
sub
cli
orl
cld
loopne
inc
inc
dec
leave
je
and
ror
or
cmpsb
rcll
push
fidivs
lcall
xchg
lea
pop
or
sbb
and
sbb
xchg
out
ja
push
outsb
dec
jl
insb
movsb
dec
adc
jle
sahf
std
mov
mov
mull
dec
push
and
add
xadd
shrb
or
push
dec
lods
add
imul
add
fisttps
mov
lret
movsb
imul
sti
ret
test
jae
out
out
xchg
shll
insb
xchg
and
hlt
popf
dec
fdivs
les
stos
cmpsl
and
push
setge
and
inc
data16
mov
fiaddl
sarl
inc
dec
fistl
pop
ljmp
int3
jl
mov
inc
push
or
push
cs
stos
into
mov
stc
push
and
xlat
daa
jle
lea
cmpsl
jbe
cmpsl
push
movsb
dec
mov
fistl
lods
mov
cs
mov
testl
or
out
ret
jl
xor
cmp
mov
xchg
les
icebp
jle
xchg
or
push
int
add
push
sub
or
das
or
frstor
mov
mov
pop
mov
sub
inc
movsb
arpl
xchg
mov
test
or
mov
movsl
adc
adc
movb
stc
xchg
incl
xor
push
aad
mov
jmp
jns
lret
imul
xor
jnp
jae
nop
push
sbb
mov
mov
push
push
jge
mov
ljmp
test
mov
mov
out
ja
cmp
adc
and
or
pop
outsl
movsb
loop
data16
jg
push
aad
cmp
ret
imul
push
pop
jne
xor
repnz
pop
sbb
or
pop
popa
dec
push
jbe
add
idiv
lcall
repnz
push
jecxz
adc
aaa
stos
mov
adc
jbe
cmp
rorb
mov
xor
jmp
inc
jmp
push
and
popf
push
ror
arpl
leave
mov
int
inc
popa
je
fstpt
jp
subl
inc
inc
dec
ja
int3
sbb
scas
cmpsb
sub
pushf
dec
es
dec
pop
sbb
roll
movsb
push
xor
or
sub
insb
stos
stos
and
or
aam
add
adc
xchg
dec
push
and
xchg
push
add
mov
mov
push
gs
orl
jb
clc
add
inc
jmp
mov
or
test
push
add
mov
je
push
jmp
insl
pop
js
insl
adc
xlat
sub
xor
into
pushf
sub
jge
rcl
sub
cwtl
jo
arpl
cmp
or
lds
in
in
int
gs
push
mov
push
mov
cs
pop
cmp
push
or
ret
xchg
xchg
ljmp
shlb
mov
lret
and
out
mov
out
sbb
lret
jns
and
dec
pusha
lds
jae
stc
aas
test
adc
inc
out
xchg
mov
cmp
adc
cld
mov
lret
adc
mov
xor
add
jnp
cmp
adc
mov
or
arpl
pop
jp
popa
ficomps
jnp
add
movsb
jmp
xor
ror
rclb
ja
jae
inc
xor
xor
mov
rolb
jmp
fstps
int
cmp
ja
push
and
sub
xchg
xchg
pop
mov
fidivl
sub
test
sub
aad
out
dec
mov
jecxz
jae
jp
pop
adcb
fwait
mov
ret
or
pop
fldt
in
fisubl
inc
enter
mov
out
sti
or
shrb
loope
jbe
xorb
sub
or
push
adc
in
jb
mov
jle
sar
enter
xor
insb
loop
leave
add
clc
je
add
fdivl
xor
je
cwtl
sub
roll
addr16
jnp
int
sub
shrb
cwtl
popf
inc
xor
loop
sbb
xchg
cmp
mov
sbb
shrb
or
js
lods
movsb
jle
fldenv
pop
xchg
loopne
test
or
fdivrp
jmp
jbe
sarl
int
push
and
bnd
push
sub
mov
mov
jmp
lret
mov
fbstp
jecxz
mov
packssdw
cs
lret
loop
lods
jle
inc
ljmp
or
adcl
mov
movlps
movsl
mov
or
push
add
inc
add
scas
arpl
sbb
xor
fwait
sub
stos
mov
mov
sbb
data16
jle
push
out
push
fsubl
or
pop
lods
mov
sub
push
or
cmpsb
xchg
jo
incl
mov
and
sub
pop
mov
popa
xchg
jne
sti
dec
cmp
cmp
sub
push
pop
leave
sbb
inc
xchg
in
pop
lea
cmp
jp
xor
push
pop
cli
test
pop
push
outsb
cmp
mov
sbb
cmp
pop
inc
bswap
cmp
cmp
cltd
push
fadd
xor
cmp
adc
xchg
inc
mov
add
subb
add
mov
cmp
add
push
mov
es
dec
dec
sbbl
and
pushf
jecxz
mov
fimull
adc
loope
or
sbbl
stos
mov
lea
add
mov
and
jg
xchg
push
stos
and
jge
jo
cs
sub
jmp
orb
movsl
or
fwait
repz
cltd
ss
xchg
das
insb
push
fsubp
leave
jns
fmull
leave
fmull
push
ljmp
movsl
nop
or
adc
mov
and
xor
adc
inc
dec
iret
xchg
adcl
adc
push
dec
mov
movsb
stos
adc
add
mov
aaa
stos
push
sahf
push
fldl
mov
and
or
lods
dec
sbb
imul
pop
int3
std
and
and
fcmove
movaps
repz
sbb
cs
sbb
pop
loop
aaa
ret
addr16
xchg
add
push
sbb
fnsave
add
int3
loop
push
inc
scas
mov
inc
arpl
mov
mov
xchg
or
cmpsb
cs
rep
jo
lods
loopne
call
push
mov
push
xchg
push
loope
add
and
imul
aas
pop
cltd
out
test
mov
shrb
cmpl
shr
es
ficompl
mov
stos
push
add
rcrb
push
sbb
mov
add
shll
jns
loop
sub
sbbb
incl
or
or
jl
push
pop
clc
flds
xchg
aas
lea
lcall
shll
adc
pop
push
dec
mov
lds
pop
loop
inc
or
adc
addr16
fiadds
mov
test
push
aam
aad
arpl
test
das
stos
test
insl
iret
pop
lret
mov
pop
adc
cmp
not
mov
mov
dec
adc
xchg
mov
mov
mov
ja
push
fstl
divl
and
out
mov
fisttpll
or
into
push
frstor
les
mov
pushf
lods
and
cmp
rsm
xchg
jae
popf
mov
or
cmp
rcll
pop
jb
dec
fld
dec
cmp
sbb
add
or
lods
repnz
fcomps
pop
test
test
pop
xlat
ljmp
sub
cmpsb
stos
test
mov
sub
mov
mov
xchg
insl
ljmp
clc
loope
jbe
fidivrl
rep
add
arpl
subl
ret
pusha
loope
mov
fs
jne
insb
insb
add
cmp
or
xor
add
cmp
enter
push
int
add
out
data16
inc
jb
stc
scas
dec
sbb
xchg
mov
push
xchg
jbe
aad
imulb
cmp
cmpsb
cmp
lahf
sub
subl
inc
and
mov
hlt
pop
xor
out
test
push
imul
outsb
xchg
sub
sbbb
sbb
int
icebp
inc
or
ret
cltd
pushf
shrb
imul
lds
shl
inc
push
stos
and
cmc
cmc
out
xorl
js
jl
or
push
rcl
sti
test
jo
lret
fstps
test
lahf
xor
jg
fstpt
jmp
aaa
xchg
outsb
adc
movsb
mov
test
dec
call
cli
mov
cmp
jle
andps
scas
mov
pusha
dec
cmp
dec
xchg
cwtl
and
int3
in
jmp
shrl
sbb
mov
stos
pop
or
cs
xchg
lahf
mov
test
cmp
push
test
sbb
nop
dec
int
cld
stc
dec
rcrl
xor
fbstp
inc
rorb
or
xor
xchg
pushf
ficompl
addl
or
aas
mov
pop
adc
lds
jbe
fisttpl
adc
rcll
pop
dec
arpl
mov
hlt
mov
fs
inc
cmp
jl
xchg
inc
jecxz
imul
movsb
and
popa
pop
in
movb
xchg
lret
or
negb
lock
sub
sub
adc
dec
enter
insl
xchg
push
loope
nop
mov
sbb
inc
xchg
mov
jmp
cmovb
adcb
lock
outsl
xor
roll
lcall
mov
mov
lcall
lock
les
iret
daa
mov
fdivrp
stos
inc
in
cwtl
les
pop
pop
loopne
pop
fs
adc
rcl
es
ret
fiadds
jae
xor
test
clc
xchg
dec
loopne
daa
sub
cmp
enter
lea
rcrb
aaa
idivl
xchg
xlat
push
loop
jae
dec
inc
add
orl
cli
rorb
cmp
pop
xchg
add
frstor
mov
push
lret
in
adc
pop
pop
hlt
cmp
sti
and
push
mov
sub
xor
xchg
mov
jno
dec
jmp
and
or
insb
sbbb
sarb
add
lods
pop
rclb
shr
sti
fs
jne
into
push
lcall
aad
push
lea
jne
dec
sbb
test
sbb
jo
sbb
out
mov
or
shrb
cld
sub
insl
or
or
pop
inc
pop
xor
cmp
ret
mov
add
cmp
adc
xor
sbb
cmp
lret
in
scas
jb
lds
xor
dec
mov
call
mov
dec
jo
ficoml
aad
push
and
ret
outsl
popf
sbb
rorl
xchg
mov
xlat
sub
xchg
mov
fidivl
mov
mov
dec
mov
and
enter
jmp
xor
test
mov
mov
pop
xor
inc
xchg
mov
push
aas
fldenv
pop
in
inc
push
mov
js
or
mov
push
mov
adc
addb
xor
and
cld
fs
in
ss
pop
mov
push
jg
cmc
adc
ja
dec
fwait
movsl
xchg
fincstp
fldenv
sub
fistps
fwait
ljmp
and
sbb
push
sbb
xorl
xchg
test
icebp
scas
ret
loopne
shrl
xor
pop
or
add
ja
sbb
sbb
add
shl
shlb
mov
jp
adc
ss
dec
hlt
and
stc
outsb
sub
mov
fmul
or
push
cmp
out
or
inc
jp
push
cmp
push
outsb
repz
xor
fs
jo
xchg
push
push
inc
ljmp
fldl
or
adc
sub
lea
iret
enter
push
outsb
xor
dec
rcr
dec
clc
mov
shr
push
aas
inc
push
jle
or
jne
jecxz
xchg
inc
jl
and
pushf
xlat
cltd
popf
test
sbb
cmpl
jno
in
repnz
rcr
push
loop
or
cmpsb
inc
cltd
int3
inc
aam
lea
insl
dec
test
clc
adc
and
mov
ss
push
mov
loop
pushf
jmp
cmpsl
xchg
daa
jmp
repz
dec
bts
fbstp
iret
mov
jg
pop
mov
mov
loop
add
jp
jl
sbb
cmp
or
adc
enter
ds
stc
cld
mov
jecxz
xchg
mov
or
xchg
jecxz
sub
xchg
faddp
dec
push
push
scas
pusha
lret
or
stos
roll
sbb
insb
sbb
xchg
cmp
les
pusha
pop
dec
push
mov
inc
outsb
inc
jl
in
inc
cmp
add
xor
xchg
stc
sub
hlt
sahf
orb
push
sub
mov
pop
pusha
mov
inc
std
cmp
and
add
add
add
mov
dec
loopne
notl
es
jo
push
jl
sarl
pushf
iret
xchg
stos
sbb
mov
jl
iret
repz
mov
jl
pop
fiadds
or
dec
pop
cs
test
inc
push
pop
pop
cmp
xlat
dec
xchg
mov
xchg
gs
jp
sarl
out
inc
mov
pop
xlat
jge
pop
xchg
lcall
fisubrl
pop
jg
enter
mov
test
test
jne
xorb
adc
push
push
and
push
xorb
xchg
cli
sahf
push
push
idivb
pusha
lea
xor
popa
and
aaa
inc
mov
test
jns
repz
mov
jno
out
or
pop
adc
stos
in
mulb
push
es
in
enter
cmp
dec
push
pop
js
mov
add
in
and
cmp
cmp
stos
pop
mov
xlat
push
mov
out
inc
imulb
pusha
sub
filds
push
call
jnp
aas
jecxz
and
lods
xor
loopne
les
mov
adc
lods
push
test
jmp
ja,pt
arpl
jbe
jns
pop
iret
negb
or
mov
dec
inc
ret
jne
int
test
fisttps
add
cld
popa
pop
cs
xor
mov
cmp
rclb
ret
shl
lock
shrl
cmpsl
negl
in
adc
pop
or
pop
jo
jl
cmpsl
outsl
and
dec
test
mov
add
int3
mov
push
repnz
fmul
fmuls
push
outsl
jge
adc
test
dec
repz
mov
rclb
cmpsb
mov
xchg
rcl
adc
outsl
adc
stos
aaa
aam
aam
sti
jns
pop
push
jmp
push
ds
mov
adc
push
js
xor
in
mov
inc
sub
inc
adc
push
xchg
sbb
js
adc
xor
je
mov
imul
push
xor
xor
fdivrs
enter
jb
movsb
sbb
pop
push
and
pop
stc
repnz
bound
lahf
scas
test
sbbb
pop
negw
fildl
popf
fmull
loop
inc
lret
add
mulb
sbb
xchg
pop
lods
inc
cmp
jno
outsb
mov
pop
sub
xorl
inc
sbb
into
jge
fnstcw
mov
popa
imul
xchg
inc
pcmpeqd
stos
dec
push
mov
sub
xchg
xchg
inc
mov
mov
divl
cmp
leave
mov
repz
dec
jae
or
into
or
stos
leave
inc
je
test
insl
adc
cmpsl
xchg
dec
adc
lods
and
cli
push
inc
pop
mov
adc
cld
cmp
mov
jbe
dec
imull
push
incb
js
aad
dec
jmp
inc
xor
mov
sbb
push
sub
movsb
ret
mov
pop
insl
dec
xchg
mov
lea
call
jne
cmp
jmp
dec
dec
mov
mov
inc
iret
cmpsb
in
jg
int3
sub
cmp
xchg
or
or
xor
adc
dec
hlt
pusha
nop
int3
popf
dec
or
cmp
add
stc
jae
into
test
ds
or
push
mov
lea
mov
xor
out
jb
popa
pop
inc
adc
stos
cmp
scas
rcrb
fdivr
shrb
inc
sbb
aas
add
and
out
callw
mov
dec
lcall
dec
jge
into
and
or
cltd
lcall
xor
adc
notl
or
and
ret
or
mov
adc
je
and
fs
or
sbb
inc
into
cmp
lret
adc
mov
dec
sti
xor
testl
ret
pop
adc
adc
out
cmp
test
mov
sbb
mov
loopne
or
mov
push
mov
mov
xchg
push
push
fdivr
or
jmp
cld
adc
add
shlb
xchg
outsl
xchg
sub
mov
push
test
mov
mov
and
dec
lcall
das
icebp
sub
push
mov
xchg
jns
call
xchg
push
insb
xchg
fs
mov
bound
or
dec
inc
sbb
out
sub
mov
in
pop
pushf
mov
test
xor
out
jge
inc
sahf
inc
mov
dec
cmp
les
inc
jns
push
mov
fcmovu
inc
pop
sar
insl
mov
daa
arpl
sbb
dec
sub
ja
jge
je
rclb
test
cmp
push
lods
sub
pop
inc
push
pop
gs
jns
adc
mov
xor
mov
jae
in
jne
xchg
mov
insl
dec
sbb
inc
mov
je
pop
and
les
fsubrl
pop
mov
in
and
test
sbb
sbb
popa
push
xchg
mov
inc
mov
fs
sub
add
cltd
adc
aad
inc
mov
xor
or
leave
js
jbe
aaa
inc
lea
in
insb
sbb
frstor
push
jb
in
jno
outsb
cmpsl
push
jmp
cmp
sarb
vcmpss
mov
pop
sbb
ss
add
sbb
stc
imul
sarl
sub
push
mov
test
inc
nop
push
aad
cmp
int3
rcrb
add
cwtl
data16
fs
xor
iret
mov
cmc
jae
push
mov
xor
add
not
sub
inc
add
stc
pop
xchg
cld
cmpsb
jb
int3
pushl
rorl
xor
jge
mov
fstps
or
test
mov
cmpsb
subl
xorw
push
out
push
js
sub
jae
and
js
test
movsl
mov
inc
pop
jnp
sahf
adc
mov
bound
pusha
jecxz
and
cmp
mov
or
stc
and
xchg
out
jl
jne
imul
pop
mov
add
es
xchg
jbe
popa
es
mov
mov
es
pop
mov
pop
add
fadds
inc
dec
stc
imul
int
in
sbb
mov
and
mov
lahf
inc
stos
cvttps2pi
xchg
add
inc
in
xor
lcall
insl
push
fidivs
les
add
pop
mov
xchg
or
xchg
lods
inc
mov
sub
jae
mov
mov
dec
pop
aaa
cmp
cmpsl
pop
idivl
mov
and
fwait
aam
cltd
test
scas
adc
ret
test
or
roll
pop
out
push
dec
add
aad
fmul
std
icebp
cltd
push
add
mov
test
adc
test
stos
fcoml
add
push
nop
movsb
xor
xrelease
xlat
ljmp
aad
jecxz
aaa
out
push
and
out
sub
lahf
xorl
sub
imul
sbb
inc
jno
stos
ret
push
xchg
jmp
inc
add
sbb
sub
das
int
and
inc
xchg
out
mov
aas
mov
mov
int3
out
mov
xor
mov
mov
fldt
cmpl
mov
repnz
mov
push
pop
cmp
mov
pop
rcll
aas
mov
enter
fs
xchg
out
mov
and
jl
xchg
ss
push
std
sar
mov
inc
cld
test
ficoms
sbb
lds
inc
inc
dec
push
pop
dec
mov
inc
daa
ss
aam
pop
lods
outsb
push
cmpsb
mov
fidivrs
jge
push
xchg
fistpll
xchg
insb
fwait
push
push
xor
jp
les
xor
mov
xor
adc
insl
mov
fnstenv
out
sub
movsb
sbb
movsb
icebp
scas
fyl2xp1
lock
xchg
mov
sar
xor
aam
inc
fwait
cmp
and
mov
lea
jmp
lock
pop
les
pop
sub
dec
test
push
scas
aas
fldcw
std
cmp
fsubrl
addr16
pushf
insb
dec
or
sub
dec
xchg
bound
xchg
int3
out
out
xor
incb
xlat
pop
mov
sbb
inc
int3
movb
pop
fildll
rcrl
adc
leave
cltd
aaa
pop
cmp
sbb
and
shlb
xlat
adc
sbb
fildl
and
sub
push
and
xchg
and
movsb
sbb
adc
std
cli
cs
stc
out
pop
pop
push
jg
jns
inc
add
cli
fcoml
adc
orl
hlt
mov
cmp
sahf
mov
ret
cmpsb
pushf
adc
push
ret
and
dec
pop
xor
jb
sub
push
mov
cmpsb
push
adc
jbe
test
mov
cwtl
out
rcll
xchg
fwait
iret
and
bound
popa
or
fbld
xchg
add
outsb
je
sbb
cltd
lret
sub
aas
push
out
jge
pop
pop
xlat
add
push
addl
nop
mov
push
lods
inc
cmpsl
pop
pop
mov
pop
mov
xlat
mov
xchg
xchg
xor
push
xor
ret
das
aad
lds
mov
dec
pop
fwait
sbb
sbb
test
aam
fcomp
add
arpl
dec
cs
iret
mov
mov
scas
lock
pop
sub
ljmp
lret
xlat
adc
jg
mov
xchg
inc
std
clc
stos
push
repz
dec
dec
enter
sub
sub
dec
inc
pop
cmp
dec
sbb
mov
cs
cmp
xchg
fisttpl
jno
inc
xchg
insl
mov
fisttpll
fs
jo
cmp
ds
mov
fs
je
sti
or
popf
stos
sub
dec
xchg
cmp
fs
fisubs
mov
xor
add
test
push
mulb
inc
mov
and
fdivrs
int3
fdivs
nop
inc
mov
imul
lds
mov
es
mov
mov
mov
cmp
dec
int
cmp
add
aas
adc
lahf
jmp
inc
filds
adc
pop
andl
scas
push
mov
mov
pop
rolb
add
push
movsl
pushf
gs
xorb
fistpll
adc
or
aaa
dec
dec
andl
fwait
data16
fiadds
xor
lods
push
imul
nop
inc
dec
add
or
push
cli
push
xchg
mov
dec
mov
outsb
lock
sbb
adc
push
or
aaa
enter
jmp
or
sar
mov
inc
push
lret
imul
jl
fcoms
fiadds
inc
cmp
je
test
nop
push
inc
loop
jnp
or
mov
dec
test
addl
pop
je
jbe
mov
sub
dec
test
jmp
sbb
dec
stc
sbb
hlt
xorl
adc
fwait
es
inc
dec
adc
aaa
lret
jns
adcb
pushf
insl
sbb
adc
dec
cmpsb
xchg
arpl
or
jl
xorl
xorl
ja
xor
cmp
inc
outsb
adc
jo
popa
mov
test
xchg
mov
add
cmp
jmp
or
div
cmp
xor
sbb
jge
ret
fcompl
sub
loope
mov
jge
jbe
jmp
dec
and
and
push
mov
or
push
or
mov
inc
stos
mov
jg
or
push
and
add
rcll
or
pop
dec
dec
adc
pop
mov
cmpsl
mov
stc
mov
cmpl
or
rcll
dec
clc
inc
cmp
sbb
test
adcb
or
sub
mov
cmp
cmp
adc
leave
rorl
fcmovb
lods
das
out
or
push
adc
sbb
mov
pop
add
push
jle
test
inc
jmp
leave
adc
sbb
cmp
dec
das
data16
roll
fimuls
inc
mov
push
or
jno
push
adc
scas
sti
lea
cmpsl
shrl
pop
movsb
fwait
nop
and
adc
lea
iret
and
sbb
sub
mov
sub
inc
add
sbb
mov
mov
jp
jno
cmpsl
data16
sbbl
pop
cmp
sub
fcmovb
and
fwait
mov
sbb
push
mov
cmpsl
lds
ss
movl
cmp
adc
jae
imul
bound
sub
mov
arpl
sbb
jl
loop
inc
push
xlat
xchg
jns
sub
sbb
popa
cmp
repnz
pop
das
cmp
push
jmp
rep
mov
or
aad
pop
xchg
test
mov
cmp
lods
jmp
jge
scas
rol
mov
cltd
sbb
adc
dec
xchg
push
insb
out
jp
lea
adc
xchg
fcoms
cmpsl
cmp
mov
sbb
xor
sbb
fstl
lods
mov
outsb
jecxz
bound
sub
jae
rcrl
insl
ja,pn
cmp
mov
movsb
xchg
not
imull
adc
test
mov
mov
loope
jl
test
repz
in
inc
mul
mov
sbb
fstps
pop
das
data16
push
pop
cmpsb
lea
call
movsl
popf
dec
mov
jecxz
jo
mov
pusha
call
xor
sahf
cmp
mov
push
test
sti
jmp
dec
sbb
prefetch
or
push
cmp
addr16
sbb
imul
cwtl
and
fcmovnb
push
push
inc
cmp
leave
cld
pop
roll
pop
add
mov
lret
addr16
and
test
movsb
and
jmp
dec
push
stos
xchg
inc
es
xor
inc
fucom
ss
pop
jne
sar
mov
xor
inc
mov
xor
shlb
and
add
xchg
shlb
das
sub
inc
shll
loop
inc
add
scas
cmp
mov
sti
mov
je
cmpsb
lock
iret
orl
in
jmp
pop
sbb
cmp
pcmpeqd
cmp
loope
leave
add
gs
sub
sub
fstpl
jo
out
out
int3
jne
jl
je
sbb
cmpsl
rcl
loopne
idiv
pop
icebp
into
xchg
adc
sub
pop
push
or
add
mov
aam
cmp
ret
ljmp
fadds
mov
jne,pn
arpl
jbe
cld
mov
or
scas
xor
jno
pop
roll
jge
into
jbe
jl
stos
clc
push
notl
cmp
push
andb
out
push
icebp
mov
add
push
cmpsb
imul
sub
push
fld
addl
mov
or
sub
rclb
jle
push
jp
lcall
mov
mov
pop
jle
jl
xchg
das
add
int3
ret
jl
mov
movsl
in
stc
or
movsl
jne
in
and
hlt
out
and
xchg
or
test
mov
xorb
cmp
mov
movsb
jnp
xchg
mov
pop
pop
rcrl
imul
and
imul
cmp
mov
inc
add
cmp
in
pop
and
xchg
scas
outsl
icebp
jnp
adc
adc
mov
xor
ret
mov
lods
test
cmpsl
scas
mov
sub
icebp
lret
push
loope
scas
lahf
pop
sub
int
sub
pop
dec
push
fidivrs
cmp
lret
inc
sbb
push
bound
xor
test
xor
mov
pop
add
outsb
cld
mov
pop
imul
xchg
xor
fistpl
data16
mull
sbb
out
fs
push
scas
pop
sub
sbb
fyl2xp1
xchg
xchg
jge
in
outsb
sub
add
cmp
scas
push
ss
inc
fildll
test
notb
in
enter
dec
lret
inc
adc
or
movsl
fsub
xchg
int3
lods
xchg
xlat
inc
mov
push
lock
pop
adc
push
xor
mov
sub
outsb
inc
push
jge
loop
dec
mov
inc
pop
mov
mov
pop
mov
pop
ja
jge
add
enter
dec
leave
leave
rsm
adc
push
cli
lcall
rclb
sbb
xchg
mov
aas
jmp
jns
aas
jbe
movsb
fwait
imul
std
cmpsb
sbb
push
aam
arpl
sbb
inc
jne
mov
mov
xlat
push
aam
mov
sub
enter
movb
mov
in
ja
mov
ja
and
sarb
push
inc
pop
jmp
and
fwait
gs
mov
xor
sbb
repz
inc
push
ds
jmp
adc
enter
xorb
fsubrs
jno
push
inc
or
cmpsl
jno
adc
jno
jns
xchg
enter
cwtl
pop
rclb
jecxz
inc
sbb
jmp
add
icebp
pop
cmp
loop
mov
xchg
mov
sbb
mov
and
cmpsl
and
cld
xchg
mov
cmp
push
es
add
jp
sbb
in
or
and
std
stos
push
mov
mov
ret
movsl
scas
dec
dec
cld
add
cltd
test
inc
outsb
pop
jno
lds
ja
addr16
loopne
or
xchg
sbb
pop
xchg
rolb
in
or
and
xchg
enter
adc
out
scas
repz
call
or
jle
dec
and
pop
jmp
pop
rcrl
mov
xor
ret
lahf
push
outsl
ljmp
mov
jmp
pop
fidivrs
clc
ljmp
adc
es
out
aas
dec
push
mov
push
mov
adc
out
cli
xor
mov
pop
stc
pop
std
movsl
icebp
inc
and
fisttps
dec
pusha
sbb
test
mov
push
xchg
imul
mov
pop
sbbb
nop
pop
push
pushf
mov
and
out
dec
aas
xchg
jle
pushf
data16
lods
or
adc
int
in
fstps
inc
mov
js
sbb
push
inc
xchg
test
test
lock
jns
enter
cmp
lahf
call
xchg
in
pop
cmp
pushf
mov
mov
lret
mov
mov
jne
les
nop
sub
out
sbb
sbb
xchg
mov
test
xchg
cmpsl
push
fdivrl
loope
ja
mov
sarl
dec
stos
pop
lock
fmul
shll
cld
ret
and
out
add
pop
inc
mov
shll
imul
xchg
daa
arpl
das
xchg
fdivrs
pop
cmpsl
repnz
xchg
adc
mov
sarb
add
sub
adc
and
sbb
sub
mov
add
shll
push
adc
sub
cmp
ja
pop
insl
pop
mov
lods
adc
repz
dec
xor
insl
push
add
scas
dec
xchg
dec
test
xor
jle
cmp
arpl
subl
cmp
jae
and
sub
xchg
mov
lret
dec
dec
ja
xchg
mov
sub
popa
lahf
not
jmp
push
jmp
insb
aad
popa
jle
push
adc
js
adc
lods
stos
sbb
fisttpl
xchg
and
shlb
mov
sbb
cmpsl
xchg
pmulhuw
in
jge
mov
in
xor
lret
sbb
cltd
dec
lret
cmc
xchg
inc
imul
enter
repz
bsr
add
or
or
jp
or
js
stos
and
jecxz
aaa
ret
xor
push
jecxz,pt
insl
mov
push
and
jbe
popl
fwait
mov
xor
or
movsb
and
pop
pop
and
test
loop
sete
inc
dec
xlat
mov
das
jecxz
stos
ljmp
and
sub
fucomip
xchg
ret
adc
mov
jmp
xchg
cvtpi2ps
push
arpl
dec
fdivrl
jl
fnsave
mov
sarb
mov
arpl
cs
push
xor
pop
mov
lds
test
fs
sub
sbb
lret
iret
ror
adc
pop
mov
adc
xchg
mov
cmp
xchg
loopne
daa
sub
scas
xor
push
imul
mov
bound
ja
mov
mov
data16
sub
mov
sbb
sbb
xorb
pop
jbe
cwtl
stc
mov
notl
push
test
pop
inc
movsb
orb
in
test
clc
repnz
inc
arpl
outsb
test
push
sub
loop
ljmp
mov
adc
cmp
sti
addl
cmp
pop
lahf
test
loopne
jbe
push
shl
adc
js
insb
fcomps
sbb
jnp
imull
insb
xchg
in
or
sub
in
mov
shlb
jne
imul
adc
cmpsl
inc
mov
and
xchg
fwait
adc
sub
cmpsl
lret
out
or
push
into
adc
incl
jo
mov
dec
mov
push
lret
jp
add
pop
mov
pop
stc
fmul
sub
mov
scas
imul
xchg
insl
enter
outsb
sahf
and
xchg
mov
add
mov
or
and
aam
in
fwait
or
push
in
push
mov
push
int
rol
ja
cmpsb
mov
movsb
push
pop
repz
jnp
out
fistpll
sub
cwtl
inc
mov
and
cmp
mov
mov
mov
cwtl
test
xor
mov
fistps
out
subl
test
or
mov
push
push
fsubr
pop
pop
fcomps
mov
xlat
sarl
dec
sbb
sbb
out
pop
inc
iret
stos
jb
or
pushf
or
nop
fstps
mov
xchg
iret
jmp
jge
sub
add
or
sahf
aas
cmp
int
test
mov
xchg
sbb
lock
bound
js
int3
pop
in
xchg
mov
or
and
ss
idivl
or
mov
lret
inc
fwait
scas
popaw
pop
cltd
stos
clc
xchg
out
lods
stc
mov
mov
es
out
aad
pop
testb
lret
push
cmp
cmc
jb
gs
scas
pop
jmp
cmp
movsl
iret
xchg
jne
jnp
mov
sahf
das
pavgw
das
cmpsb
lret
andl
or
aam
pop
xor
fstpl
roll
sbb
in
cmp
jge
mov
inc
lods
lret
insl
bound
imul
mov
pop
sub
xchg
inc
xchg
sarb
in
lock
cmpsb
je
idivb
divb
std
daa
and
lods
inc
pop
das
sub
jmp
push
push
inc
lods
jp
adc
lret
gs
sbb
adc
mov
lret
jbe
cwtl
mov
sbb
jl
xchg
push
aad
bound
push
jbe
sarl
xchg
xchg
sarl
or
aaa
js
cmp
inc
rclb
and
mov
pop
push
cmp
jae
lods
mov
cwtl
sub
cs
ret
inc
rorb
xchg
lods
dec
jnp
lret
add
mov
les
xor
lock
aas
mov
test
and
adc
jb
sbb
stos
les
pop
sahf
adc
adc
xchg
stos
add
ret
fisubs
fcomps
and
test
lods
cmp
out
nop
jnp
cmp
pop
and
outsl
inc
lods
push
je
loope
mov
and
subl
imul
idivl
out
adc
add
loope
jae
cmpsl
jle
lahf
testb
fcmovnbe
repnz
inc
shlb
clc
pop
test
stc
fildl
jno
fldenv
pop
data16
xchg
mov
sahf
lret
lock
lods
push
fucom
sbb
pop
jge
fdivrl
cmp
idivb
pusha
aam
pop
jns
dec
movsb
pcmpgtd
arpl
pop
cmp
outsl
movsl
jb
ljmp
or
add
cmp
sarl
jbe
mov
lods
lret
jge
dec
jns
sbb
nop
push
mov
test
std
jge
into
fs
xor
addl
adc
fcoml
lods
je
data16
or
and
ficoml
lock
in
in
pop
push
sbb
add
mov
int3
jo
jb
cwtl
repz
sub
js
adc
out
cli
jbe
adc
repz
in
xchg
insb
decl
mov
arpl
pusha
enter
pop
cwtl
ljmp
xchg
xchg
inc
mov
fstpl
or
out
pushf
lock
sub
mov
mov
movsb
mov
pop
movsl
pusha
roll
sub
or
adc
mov
test
shrl
lcall
mov
sub
cld
int3
pop
cld
call
inc
outsb
stc
popa
mov
dec
lcall
callw
aad
inc
js
pop
imul
js
push
stos
sub
xchg
and
and
popl
repnz
testl
sbb
stos
orl
inc
arpl
sub
xchg
or
sti
flds
inc
xchg
and
xor
cltd
and
sub
sbb
rep
jae
mov
out
mov
cs
insl
lea
int3
adc
push
je
daa
ror
clc
cld
jle
or
xchg
cwtl
jle
mov
rcrl
dec
sbb
jge
pop
mov
insb
shlb
repz
sbb
sbb
mov
shrl
imull
sub
aam
les
sub
dec
or
outsb
imul
push
in
mull
out
xor
icebp
xlat
push
jne
dec
stc
testl
xor
cmp
xor
mov
enter
push
movsl
int
iret
cmc
push
ljmp
jne
test
mov
mov
xlat
mov
push
adc
dec
push
pushf
xlat
mov
out
and
lods
pop
mov
fmul
jns
mov
mov
sub
mov
leave
lret
adc
pop
cwtl
lds
mov
hlt
adc
or
mov
stc
add
repnz
das
adc
pop
ret
fbstp
stos
jle
fidivl
jbe
xchg
dec
ret
mov
adc
icebp
xchg
jmp
jg
mov
or
jl
push
cmpb
test
mov
shr
testb
push
add
sbb
outsl
aam
cmc
ljmp
clc
mov
sbb
aam
stc
insl
ja
mov
mov
mov
data16
dec
push
in
sub
lahf
cmpb
ror
push
or
pop
hlt
xlat
sahf
cmp
jp
xchg
or
dec
icebp
push
in
mov
sbbb
paddsb
mov
dec
popf
add
adc
es
sbb
loope
pop
rclb
mov
gs
cmpl
lss
mov
cmpsl
lock
push
das
add
sbb
sub
mov
notb
mov
mov
pop
mov
sbb
sub
sub
xor
mov
lods
push
or
sub
test
xor
ret
fimull
stos
jecxz
jns
dec
lcall
mov
inc
mov
fdivs
xchg
jge
jecxz
addb
lret
sbb
or
fcmovnbe
mov
repz
loopne
add
jmp
add
sub
xchg
js
pop
pusha
std
xor
test
imul
lods
outsb
sub
imul
test
cld
jg
scas
add
push
dec
fistpl
arpl
mov
jnp
andb
mov
rcrb
outsl
pop
add
cltd
dec
cmpsl
lods
bound
xor
adc
add
xchg
int3
cli
nop
gs
ret
in
cmp
ja
jnp
shll
xor
scas
fldl
lret
inc
call
aas
or
test
addr16
xor
cmp
mov
push
jns
xorl
hlt
cmpsl
xor
movsl
bound
add
fstpt
mov
pop
arpl
loop
xchg
imull
testl
mov
jne
xor
mov
sub
and
pop
mov
lods
cltd
mov
loop
pop
in
pushf
pop
ret
add
movsb
lds
mov
daa
cmp
subb
add
movsl
push
pop
or
mov
out
mov
cltd
pop
pop
dec
rcrl
add
mov
js
mov
inc
mov
test
cmpl
pop
pop
push
mov
jae
jns
sbb
mov
loopne
loop
fstsw
pop
stc
std
cs
push
push
xlat
push
xor
mov
push
imul
xchg
mov
jg
data16
lods
pop
xor
roll
sbb
pop
mov
les
lret
lods
cs
push
sahf
clc
xor
dec
mov
or
adc
mov
leave
cmc
dec
test
xchg
pop
lcall
sbb
insl
es
xorl
es
iret
lcall
insb
dec
dec
fnstsw
jnp
inc
les
lret
aas
xor
movsb
or
xorb
xchg
in
mov
mov
loop
add
sbb
xchg
sar
and
pop
dec
jmp
push
leave
adcl
dec
jl
and
in
add
shlb
and
sub
lahf
pop
aaa
cld
xchg
or
sbb
mov
jnp
fisubl
faddl
int
push
ja
pop
loop
mov
cmp
xor
dec
mov
pop
nop
jle
movsb
rclb
lods
sbb
in
ss
pop
add
push
lds
jno
ds
mov
aad
sub
shll
inc
imul
mov
aam
and
shlb
push
adc
div
addr16
out
aad
adc
mov
sbb
out
pop
icebp
outsb
shr
shlb
ljmp
movsb
jp
cmp
pusha
jmp
cmp
xchg
inc
mov
push
pop
jg
fcoms
repnz
inc
dec
test
push
pushl
bound
mov
mov
loop
jmp
xchg
xchg
in
fadds
or
call
push
test
daa
add
mov
pop
mov
sbb
jle
mov
dec
inc
and
lahf
sub
jle
pop
into
enter
out
mov
loope
sbb
inc
mov
lret
cli
mov
iret
sbbb
pusha
push
xchg
repnz
sbb
sbb
and
lods
mov
adc
imul
sub
shlb
push
mov
push
dec
dec
cli
enter
mov
xchg
add
aas
out
mov
pop
adc
arpl
das
xchg
cmp
push
push
test
inc
std
dec
push
repnz
adcb
loop
adc
or
fwait
inc
mov
push
jb
push
orb
adc
sub
xchg
adcb
sbb
stc
mov
pusha
cmp
pop
cmpsb
aam
sbb
dec
or
pop
in
dec
rolb
adcl
push
add
aas
add
dec
pop
enter
and
fiadds
jo
outsl
rorb
cmc
cmp
inc
xchg
call
testb
xchg
enter
clc
adc
ja
aam
sub
shrb
lahf
daa
xor
aaa
pop
andb
adc
sub
adc
aad
mov
mov
insb
enter
lcall
pop
rolb
fdiv
mov
push
jmp
jecxz
jno
je
sbb
mov
sub
xchg
jne
jge
pop
dec
dec
repnz
dec
mov
sub
mov
or
cmp
int
in
ja
xor
cli
adc
lret
push
not
cltd
sub
clc
xchg
sbb
movl
test
out
gs
repz
ds
pop
mov
xchg
or
cmp
push
jecxz
push
mov
fldz
xchg
cmp
or
mov
and
in
mov
cs
stos
rcrb
arpl
es
in
aaa
in
mov
push
add
mov
or
push
out
and
sbb
sahf
lret
xchg
aam
movsl
lret
and
cld
test
cmpsb
mov
nop
and
sub
sbb
cwtl
inc
mov
mov
xchg
std
movsb
imul
inc
ret
add
sub
test
cmc
rol
push
mov
call
inc
lret
hlt
sbb
push
inc
sub
sti
pusha
and
incb
cmpsb
lcall
pop
sub
xor
dec
out
test
pop
dec
mov
fisubrs
push
jge
add
in
jmp
dec
pop
sub
sbb
xlat
test
enter
push
jg
add
mov
sbb
shrb
cmp
cmpsl
mov
xchg
and
ds
fisttpl
cmp
inc
push
es
iret
push
push
je
jnp
mov
dec
cmpsb
sbb
pop
fisubrl
mov
and
loope
sub
mov
gs
mov
shll
jno
stc
or
aas
out
xchg
jb
scas
mov
pushf
insl
or
mov
pop
iret
jp
pop
mov
cmp
out
test
fnstcw
sub
jbe
sub
xor
mov
into
out
dec
add
ja
dec
mov
xchg
test
into
sarb
stos
and
pop
or
or
loopne
int3
xor
push
cmp
xor
xchg
cmpsl
sub
cmp
iret
jg
jnp
ret
aam
mov
sbb
push
sub
cmp
ficoml
mov
loopne
cmpsl
adc
or
xor
pusha
xorl
inc
rol
adc
data16
add
ficomps
addr16
loop
ja
mov
int3
lods
daa
scas
cltd
ljmp
mov
dec
std
in
std
mov
sbb
inc
fmuls
mov
fiaddl
out
xchg
push
and
cmp
scas
popf
mov
cmpsl
pop
sub
fstpt
mov
cld
mov
sti
lods
lcall
pop
movsl
xchg
mov
das
dec
addr16
push
hlt
das
addl
adc
or
lods
jge
push
aas
addr16
cli
mov
xor
mov
mov
outsl
fldenv
lock
push
fldt
push
mov
shr
clc
pop
les
sub
stc
cmp
mov
sub
push
xor
pop
pop
adc
icebp
jg
sub
cli
push
js
inc
xor
hlt
lock
dec
jno
out
mov
stos
inc
jbe
push
outsb
pusha
mov
xor
sub
xchg
test
daa
lock
dec
cmc
cmp
jl
divl
adc
jecxz
jns
inc
test
int
jmp
fisttps
scas
inc
test
push
iret
adc
imul
cmp
sbb
or
or
xchg
js
enter
mov
cli
xor
or
lahf
in
mov
fistpl
idivb
in
ljmp
mov
sti
imul
and
mov
dec
pop
jge,pn
test
fwait
xor
out
mov
mov
add
or
add
ljmp
subl
inc
xchg
lret
js
js
das
mov
adc
ljmp
stos
mov
jmp
add
mov
fsubrs
xchg
xchg
jb
std
mov
test
in
rcrl
jns,pt
test
test
popf
movsl
mov
dec
lock
push
pop
stos
jo
int
mov
lahf
push
bound
addr16
jns
dec
mov
imul
pushf
mov
gs
cmp
xor
mov
push
sbb
inc
ljmp
xor
push
jo
push
xor
inc
orl
jae
push
js
push
push
sbb
out
inc
aam
cmpsl
cltd
push
scas
xor
fwait
pop
pop
popf
loope
mov
mov
nop
inc
jg
cltd
out
js
mov
aad
std
jne
jmp
or
fldz
dec
jecxz
xchg
ds
into
pop
push
or
test
add
xchg
add
in
pusha
pop
pop
lods
mov
insb
lcall
clc
push
jge
addr16
mov
lods
shll
ds
cmp
cs
xor
popa
push
xor
test
test
cmpsl
sub
pop
shrl
loop
add
sbb
popf
movsl
cli
mov
xlat
adc
push
dec
and
sbb
test
call
mov
fsubr
mov
cmpsb
and
mov
jge
cmc
test
adc
sub
xorl
mov
or
cs
popf
pop
pop
aad
cmpb
sbb
mov
in
cmpl
int3
cmpsb
hlt
imull
rep
fwait
and
sti
and
mov
jp
mov
rclb
mov
testb
mov
add
jmp
inc
mov
js
leave
outsb
loope
jle
or
xor
add
xchg
clc
sarl
mov
xor
int3
dec
sub
cmp
fsub
out
std
ja
rorb
push
rcrb
jbe
mov
xor
adc
fsts
mov
xor
dec
mov
push
mov
xor
das
fistpl
xchg
sbb
mov
jl
inc
lret
push
lcall
lret
sub
mov
jecxz
push
aaa
pop
adc
push
push
mov
fimull
or
dec
rcr
divl
add
mov
sti
outsl
test
mov
repnz
mov
ret
icebp
push
add
push
sahf
or
mov
mov
ss
orb
lret
das
sub
inc
lods
xchg
sbb
mov
cltd
add
stc
sub
ret
or
jge
cmp
jl
cwtl
aad
into
and
clc
sbb
xchg
andnps
push
mov
jg
movd
dec
test
dec
fwait
xor
push
xchg
fstp
or
rolb
pop
and
roll
jge
mov
ret
mov
mov
push
or
rorl
push
inc
jmp
dec
inc
xchg
es
xchg
xchg
or
cmc
cli
insb
cmp
and
adc
xchg
shl
loope
cmpsb
rorb
mov
or
cmp
cmpl
push
sbb
push
test
pop
cmp
mov
sahf
xor
dec
sahf
jmp
dec
push
pop
mov
pop
psubq
fsubs
push
fcmovnb
lcall
movsb
cmp
xchg
jno
xchg
rorl
jae
aaa
out
pop
ja
pop
pop
lret
incb
in
mov
pop
mov
les
cli
and
or
sbb
pop
nopl
jecxz
mov
iret
popa
negl
sub
mov
jmp
adc
xchg
xchg
push
lahf
inc
mov
mov
cmp
pop
stc
inc
fwait
imul
out
pop
jno
mov
mov
out
lret
nop
cltd
dec
and
rcll
movsb
jb
inc
add
cmp
fistpll
pop
adc
push
stos
cmpl
call
push
or
loope
and
sbb
popf
mov
xor
mov
push
jecxz
cmp
lcall
mov
adc
dec
mov
mov
shl
push
mov
fistpl
push
ds
xchg
push
movsb
pop
in
inc
dec
adc
aad
inc
jno
dec
and
xlat
push
test
pop
xor
aad
push
adc
or
jl
testl
scas
push
mov
sub
lods
popa
jmp
test
popa
pop
mov
ljmp
dec
aaa
aad
and
test
mov
repnz
dec
fnstenv
scas
lret
imul
ret
mov
orl
xchg
pop
sbb
mov
jbe
fcmove
pop
sub
jno
pop
mov
shl
sti
sbb
sub
xor
popa
or
dec
sbb
in
or
filds
lret
mov
ret
jge
pop
cmp
mov
sub
mov
insl
xor
rcrb
add
leave
pop
sarl
jbe
xorb
mov
ret
xchg
je
decl
sbb
leave
cmp
add
ret
xchg
out
cmpsl
mov
pop
ficompl
jp
in
movsl
dec
jl
cmc
pop
stos
lahf
dec
inc
out
inc
jnp
dec
notl
movsb
lret
jmp
popa
pop
and
test
push
and
jne
xchg
adc
adc
mov
mov
push
scas
iret
mov
shrb
popa
jnp
stos
sub
dec
pop
jecxz
aas
xchg
int3
sbb
bound
or
int3
cmpsb
outsb
out
fdivl
jno
lock
xor
in
inc
jns
mov
outsb
pushf
fstpl
fucomip
arpl
and
stos
jbe
push
cmpsl
cmp
cmp
out
out
ror
xor
aaa
in
xchg
das
pop
fs
jl
push
movsl
movsb
shlb
fs
pop
lods
cmp
fbstp
pop
nop
aaa
or
fistps
repnz
push
insb
insb
adc
pop
or
bound
popa
cmp
dec
cmp
jle
jbe
test
cmpsb
adcb
sub
adc
cltd
cmp
cmpb
and
and
or
adc
xor
xor
dec
jbe
xor
mov
jno
cmp
clc
pop
mov
or
repz
dec
loopne
mov
lret
sahf
jge
shll
adc
cld
add
and
fwait
test
dec
shrl
mov
cmpsb
add
add
push
fimull
nop
test
les
or
in
aaa
add
cli
pushl
js
inc
xor
mov
lret
inc
mov
adc
inc
dec
aaa
scas
adc
or
xchg
pushf
lcall
push
dec
fcomp
cwtl
cs
adc
mov
lods
fldt
mov
fchs
leave
sbb
and
xor
or
fwait
cwtl
xchg
aaa
in
xor
jmp
mov
jecxz
push
cmc
loop
lods
fsubr
arpl
and
call
pop
cmp
sbb
jns
xchg
push
lods
jnp
cld
mov
sahf
and
es
xchg
xchg
arpl
insl
mov
lret
mov
bound
dec
sub
push
mov
inc
inc
dec
in
andl
jp
sarl
imul
ds
add
mov
movsl
cmc
and
push
mov
mov
mov
fadds
mov
jge
mov
jp
mov
nop
rcrl
lock
lahf
or
out
mov
andb
fwait
xor
jnp
pop
adc
cmp
xor
shr
inc
push
jp
sub
pop
and
xor
in
mov
pop
mov
push
pop
push
test
cld
cmpb
sahf
icebp
cmp
sbb
jno
sub
cmpw
ja
xor
add
es
lock
jb
pop
xchg
inc
push
leave
xor
sahf
jnp
sub
mov
pop
testl
ljmp
pop
fidivl
cwtl
sub
sti
and
ss
std
jmp
sub
pop
jno
in
dec
xchg
and
jne
leave
push
imul
add
inc
test
jmp
call
and
and
pop
push
sar
inc
in
mov
or
popf
cmp
out
out
ss
adcb
xchg
cltd
mov
or
inc
les
pop
dec
fs
andb
push
jge
arpl
aas
push
popf
sub
xor
and
push
aas
jo
sti
ja
movsl
cmpsb
idivl
xchg
aad
in
cmp
out
arpl
xchg
sarb
mov
fmulp
cltd
or
jb
stos
push
dec
xor
movsl
sbb
inc
jbe
into
mov
shlb
mov
pop
lods
pop
mov
scas
mov
cld
mov
pop
sbb
scas
jl
cmp
fistpll
test
dec
jo
mov
outsl
cmp
pop
rorl
lods
je
jae
popf
sbb
mov
cmp
inc
mov
push
cld
inc
push
adc
aam
out
push
ja
fdivl
outsl
jbe
xchg
mov
cmp
cmp
and
push
inc
pusha
push
mov
adc
push
ja
inc
sti
rcll
mov
loopne
sub
sbb
ja
and
mov
jae
cli
push
adc
jl
xor
mov
sub
jns
loope
jecxz
clc
pop
or
add
sub
push
jl
sub
xchg
fcmove
scas
push
jge
cmp
inc
jns
mov
pop
cmp
test
les
enter
pop
mov
jle
inc
xchg
sub
dec
xchg
mov
sbb
and
inc
jle
pop
push
jmp
outsl
fsub
enter
mov
lods
jl
pop
int
fwait
adc
sahf
jns
outsb
dec
test
add
or
rcll
gs
lret
lods
sbb
lods
test
loop
enter
movsb
or
push
jmp
xchg
aaa
xchg
lock
stc
test
mov
xor
inc
jp
repz
jle
sbb
xorl
jmp
jo
and
mov
test
push
in
jecxz
shlb
push
adc
lcall
sbb
bound
and
ja
mov
in
arpl
pop
stos
cwtl
gs
cmp
and
iret
add
add
lea
nop
fstps
or
mov
insl
negb
ja
lods
pop
std
cwtl
xor
lods
call
cwtl
stc
adc
xorb
fsubrl
mov
push
mov
dec
add
es
popf
mov
mov
out
xchg
frstor
repnz
out
mov
pop
pop
js
test
std
cld
cmc
leave
add
inc
into
aaa
jae
je
lcall
dec
jle
fs
sbb
out
cmp
fisubs
xchg
dec
mov
jle
scas
les
push
adc
test
jmp
sbb
and
pushf
in
or
dec
xchg
mov
sub
fdivrs
jns
dec
sub
data16
adc
push
out
and
adc
mov
fs
aaa
pop
sub
and
scas
mov
les
ljmp
cmpsl
sqrtps
or
push
jbe
icebp
call
lea
divb
aad
mov
leave
mov
mov
dec
and
xchg
sub
mov
enter
mov
clc
imul
inc
aad
xchg
mov
les
inc
fcoms
pushf
rol
xchg
dec
jle
xchg
adc
loop
mov
leave
pop
imul
repnz
adc
enter
movb
mov
mov
loope
pop
idiv
insl
test
in
xchg
out
pop
cld
inc
push
xchg
jbe
or
pop
shl
fsubs
sub
cmpb
inc
jge
add
xchg
subps
push
in
js
out
inc
fisubl
jne
repnz
add
xchg
scas
add
adc
pusha
fsubs
push
push
lods
nop
into
push
or
or
xor
call
scas
divl
adcl
popf
pop
add
jge
out
mov
data16
mov
in
inc
adc
fildl
inc
mov
in
cli
jns
sbb
mov
xor
adc
movsb
mov
jmp
pop
cmp
pusha
inc
jmp
adc
cwtl
sub
cmp
inc
or
jb
xor
pop
jns
lret
inc
inc
or
fstpl
push
add
jns
shrb
in
ret
ljmp
jbe
pushf
cld
pop
test
xlat
fiadds
and
scas
sbb
ret
rcll
sub
lock
das
sub
sub
sar
jo
or
negl
call
add
push
je
popa
sahf
ds
aad
imul
pop
and
inc
push
mov
cmp
sub
push
movsb
dec
pop
sbb
lds
mov
jg
adc
lds
popa
dec
je
mov
cli
lcall
xchg
sarl
mov
jns
icebp
mov
push
push
jb
inc
int3
lahf
cmp
std
xchg
mov
push
pop
push
jne
clc
jg
inc
push
sbb
jecxz
jl
xor
cs
pop
cmpsl
fisttpl
das
sbb
movsl
ljmp
clc
insl
call
push
sbb
cltd
cld
pop
insl
pusha
add
sti
call
inc
mov
mov
push
jp
adc
sub
hlt
cld
rorb
push
push
aam
mov
jecxz
add
xchg
cli
in
add
cmpsb
divl
xchg
iret
jecxz
dec
aad
inc
push
scas
aaa
out
pop
sarl
mov
insb
jo
out
and
sar
jb
into
sbb
fldenv
xchg
addr16
mov
lahf
dec
lret
sar
aam
pop
jns
bound
and
mov
inc
jle
dec
gs
push
mov
mov
cmp
std
es
sub
or
or
ret
sub
mov
std
and
call
push
mov
arpl
sbb
jae
add
sub
dec
movsl
iret
call
gs
xchg
sbb
push
sbbl
or
cs
fwait
out
dec
xchg
mov
into
xchg
mov
cs
sub
loop
fwait
int
sbb
mov
lret
mov
jl
jnp
scas
enter
lods
pop
scas
inc
jns
stos
adc
push
fistpll
jge
movl
cmp
dec
pop
scas
cmp
lret
jb
icebp
sarl
inc
cmp
jl
cs
dec
push
push
fs
push
jp
inc
mov
pop
mov
mov
leave
xchg
sbbl
into
pop
xchg
sub
movsl
sbb
mov
pop
add
repz
cld
scas
sbb
shlb
adc
iret
sbb
adc
bound
loopne
rcrl
jge
loopne
xchg
dec
mov
inc
popf
and
dec
pop
inc
mov
ljmp
pusha
jbe
push
sub
fisubrl
outsl
aas
fdivr
int3
lsl
popf
fwait
fwait
inc
push
call
xlat
push
ficoms
loop
leave
mov
sti
cli
lds
adc
xchg
lock
and
inc
out
cltd
dec
add
lock
sub
aam
dec
test
mov
or
mov
lret
leave
leave
andl
test
push
stc
nop
ja
cli
ret
neg
or
mov
pop
add
loop
push
push
or
mov
sbb
push
testb
or
xchg
push
sub
repz
stos
popf
inc
adc
and
push
add
push
xor
adc
mov
fs
adc
les
push
sbb
sub
sub
jle
addr16
xlat
xchg
add
ss
adc
mov
aaa
xchg
lock
dec
sub
enter
push
mov
test
test
cs
stc
shlb
clc
or
rolb
fistpll
test
jmp
jmp
or
stc
lret
popa
fcomip
sub
mov
mov
cmp
scas
enter
cmp
scas
outsl
jecxz
cli
jmp
call
xor
pop
out
or
or
dec
push
fcmovnbe
xchg
add
repnz
aad
scas
test
push
in
das
xor
push
ljmp
negl
int
mov
mov
into
xor
mov
xchg
inc
and
mov
sub
enter
pop
mov
pop
ds
mov
xchg
add
xchg
stc
push
bound
les
mov
ret
mov
imul
stc
push
sub
mov
popa
es
in
lahf
fildl
or
sub
movsl
xor
mov
fwait
inc
addr16
push
push
lods
dec
mov
mov
cmpsl
inc
xchg
jo
notl
push
negl
xchg
mov
loopne
sti
shll
aad
fnstenv
aaa
fcmovb
push
sbb
mov
pop
movsl
cld
fmulp
push
mov
loop
pop
ljmp
lock
roll
shll
xor
add
or
jne
jae
dec
inc
mov
loope
jle
mov
xlat
test
ret
jns
xlat
lcall
cmp
sbb
jmp
mov
mov
mov
and
xor
lcall
cs
pop
roll
sbb
mov
mov
fdivrs
cli
bnd
adc
scas
gs
pop
in
lea
cmp
test
pop
jno
ret
std
insb
hlt
je
jg
gs
in
xor
xor
shll
stos
sbb
mov
jns
inc
jo
cmp
pushf
orb
push
fnsave
add
cwtl
popa
add
pop
mov
fsubrs
movl
fcomps
stc
mov
mov
add
add
bound
mov
cmp
js
je
dec
inc
inc
cs
mov
jae
repz
test
xlat
push
sti
mov
out
cli
adc
movsl
nop
inc
mov
cmp
je
inc
sbb
adc
test
rep
popa
sub
sbb
xor
xchg
movsb
mov
pushf
es
insb
xchg
mov
push
push
movsl
add
adc
into
imul
mov
fidivs
call
mov
sub
pop
rclb
imul
mov
sbb
mov
jno
movsb
pop
mov
cmp
pushf
pop
out
inc
call
push
jmp
and
pop
adc
mov
int
je
movsb
aad
clc
adc
ja
das
mov
and
scas
icebp
xor
mov
jo
jl
int
pop
fwait
pop
cmp
add
mov
pop
aas
cmpb
cmp
dec
cmp
in
sub
mov
popf
mov
mov
dec
mov
ror
imul
adc
dec
rcrb
mov
aas
jge
mov
jl
push
xchg
mov
push
pop
mov
mov
clc
dec
jl
imul
or
push
xchg
xchg
outsb
mov
mov
hlt
mov
or
pushf
mov
stc
xchg
outsb
cltd
xor
outsb
inc
pop
push
sahf
cmp
inc
int3
inc
stos
ret
movsb
movsl
enter
sbb
dec
out
cmpsl
push
xor
rclb
lahf
jmp
je,pt
and
movsb
adc
mov
xchg
sbb
ficoms
int
mov
xor
dec
fs
xor
inc
rcl
mov
lret
cmpsb
negb
pop
mov
jle
cmp
jbe
dec
nop
movsb
lock
enter
mov
and
mov
jle
in
ret
xchg
out
dec
fisubl
xchg
or
outsl
or
mov
push
jecxz
out
push
in
adc
into
and
mov
out
test
pusha
add
mov
adc
imul
daa
and
lods
add
add
xor
xor
xor
adc
and
pop
data16
cld
repnz
xchg
je
jmp
idivl
leave
pop
sbb
dec
push
insl
and
mov
pushf
lret
sbbb
sub
out
fsubrs
push
movsb
jnp
mov
mov
jmp
pop
rdtsc
nop
imulb
sub
stc
adc
stos
mov
add
push
stos
mov
repnz
pop
loopne
jle
sub
xor
lret
add
inc
addl
mov
jecxz
mov
lock
sbb
lret
popw
xchg
cmp
or
dec
addb
jp
pop
andb
je
xor
shlb
fiaddl
pop
shll
nop
pop
or
add
stos
fldl
sub
mov
insb
jo
lea
jb
aad
cs
lea
ljmp
ds
das
jnp
sub
sbb
xor
jmp
sub
std
push
scas
test
lock
stos
push
mov
loope
lods
cmp
in
sub
jmp
mov
or
or
icebp
cmp
mov
shr
inc
jp
adc
lret
xchg
cmp
incl
ss
xlat
sub
clc
daa
jg
rcrb
aaa
mov
dec
sbb
mov
add
sbb
pop
and
aad
inc
aas
enter
sub
adc
cmpsb
lds
std
pop
imul
pop
cmpl
push
cli
out
inc
jns
sbb
enter
ds
push
je
fsubrl
or
stos
sub
test
pop
mov
cmp
fidivl
test
mov
in
xchg
xor
lock
xlat
mov
cmpl
ret
pop
imul
add
leave
cli
sub
dec
lcall
jne,pn
xchg
out
jns
lea
mov
mov
xor
insl
icebp
push
enter
mov
cwtl
loope
or
xor
mov
cmp
mov
out
push
xchg
pop
loopne
mov
dec
xor
jp
les
cwtl
mov
roll
adc
sbb
adc
loop
mov
pop
or
sti
dec
popa
lret
mov
inc
xor
jns
push
mov
mov
in
mov
push
sub
mov
aad
sbbl
movsl
std
cmpsl
and
fiaddl
insl
into
lcall
shr
int
inc
pop
imul
cmp
push
inc
sti
les
sub
std
adc
iret
push
shll
cs
push
dec
add
les
cld
out
scas
pop
push
mov
cmpsl
and
adc
push
adc
pop
mov
or
or
add
add
fsubl
push
sub
lcall
push
insl
js
lret
loopne
lods
push
mov
cmpsb
outsl
sbb
loop
shll
add
je
inc
pop
adc
fisubrl
mov
cmp
cli
les
fldcw
mov
cmp
stos
xchg
add
sub
scas
into
pop
sbbl
xor
push
movsb
sti
xchg
mov
pop
sarl
arpl
pusha
xchg
aaa
mov
fimull
out
shr
sarl
or
add
mov
out
das
jbe
lods
movsl
mov
iret
mov
sbb
mov
lret
fs
and
push
in
fwait
push
dec
hlt
mov
xchg
push
xor
clc
fsubrl
xor
mov
mov
fs
xchg
scas
mov
rorb
adc
dec
call
mov
js
mov
loopne
push
imul
pushf
into
sbb
bound
fstpl
popa
pop
in
mov
dec
in
std
in
and
sub
sbbl
lahf
lods
cmp
imul
push
sbb
imul
loope
movb
sbb
dec
inc
push
in
mov
pop
dec
mov
daa
inc
inc
nop
int
leave
ljmp
push
subl
inc
xor
icebp
xor
mov
mov
rclb
jns
adc
inc
push
rol
je
or
mov
xchg
clc
mov
sahf
out
jl
pop
adc
cmp
stos
enter
sbb
push
sbb
clc
xchg
mov
inc
loop
test
add
lret
test
adc
mov
jmp
pop
add
and
push
sub
in
jno
ss
dec
mov
stc
subb
push
push
lods
addl
xlat
dec
mov
daa
jle
sbb
push
stos
mov
aaa
js
stos
inc
dec
inc
and
outsb
and
pop
jns
pop
adc
mov
sbb
loop
mov
stos
inc
mov
ja
std
movsb
das
test
mov
das
fwait
adc
pushf
sahf
das
xor
out
stos
fdivr
repnz
adcl
repnz
pop
pusha
movsb
sbb
lea
sub
scas
inc
dec
stos
push
cmc
filds
cmpsl
sub
bound
push
in
mov
fwait
test
jp
imul
or
fs
xor
jge
xchg
sti
adc
pop
fmulp
xor
mov
clc
cmp
sbb
fstpt
mov
pop
aad
xor
mov
movsl
push
sti
push
xchg
lcall
fwait
cld
inc
movsl
fs
inc
pop
mov
add
inc
mov
mov
push
sub
in
pop
xor
xor
pop
jbe
sbb
adc
call
das
loop
adc
scas
inc
and
cmp
mov
mov
daa
mov
mov
repz
cmpsl
mov
xchg
pop
rorl
test
jno
mov
xor
add
mov
lcall
pusha
xchg
in
mov
mov
xchg
push
mov
mov
and
or
inc
or
or
and
test
ret
fisttps
gs
popf
pop
cmp
or
dec
in
in
cltd
sbb
arpl
orl
bound
shr
jns
movsb
mov
pusha
bndldx
add
lret
std
push
push
pop
outsb
inc
dec
jl
cltd
in
movsb
push
mov
bound
mov
imul
push
dec
in
in
sbbl
or
repnz
popf
lcall
sub
mov
out
in
xor
jae
in
test
outsb
rcl
xchg
pop
push
ja
pop
aad
call
sub
outsb
cmp
adc
push
pushf
hlt
mov
lock
cmp
insb
mov
mov
pop
aaa
call
xchg
dec
mov
or
push
sbb
dec
inc
add
das
pop
lcall
xchg
sbb
jp
je
xchg
xchg
mov
mov
push
das
imul
mov
jo
stos
shlw
movsb
pop
push
or
sbb
repz
or
push
and
popa
lock
xor
mov
cld
ss
enter
fwait
test
xchg
pop
std
jg
add
in
aas
mov
imull
pop
rcr
lods
shrb
and
mov
lcall
scas
and
fsubr
fs
in
mov
sbb
sub
sub
jle
sub
fwait
loope
mov
adc
aam
mov
out
or
pop
dec
cmp
divl
mov
and
out
mov
ljmp
loopne
data16
pop
cli
scas
cmp
jne
shrl
jae
popa
pop
jl
cmp
push
sbb
push
das
das
enter
sub
sarl
inc
loop
out
jl
jne
fistps
sbb
jns
shrl
xchg
push
cmpsb
adc
out
push
enter
int
les
arpl
lock
mov
jns
ret
repnz
fs
adcb
imul
idivl
add
loope
std
add
lret
aaa
movsb
imul
shrb
jno
sahf
sub
adc
jo
add
fs
sar
lahf
dec
bnd
xchg
dec
icebp
lods
loope
mov
or
outsl
andl
imulb
cmp
xor
mov
cmp
inc
subl
out
sbb
dec
nop
mov
or
fisttpl
cmp
test
push
jecxz
and
mov
mov
sbb
or
je
sbb
pop
jecxz
push
mov
call
ja
es
gs
ret
pop
ljmp
add
inc
movsl
xor
cld
loop
lea
lock
arpl
jmp
fldcw
icebp
movl
adc
jp
inc
in
jbe
adc
lret
cmpsl
data16
das
les
lods
inc
into
aas
push
stc
pop
or
xor
cmp
dec
dec
mov
adc
shl
dec
out
fsubr
es
enter
pop
jecxz
jmp
enter
mov
cmp
xor
pusha
sub
mov
jnp
subb
fldln2
jb
lods
repz
adc
jecxz
pop
mov
cmpsb
leave
sub
les
cmp
and
dec
xor
push
mov
mov
daa
fsubrp
mov
in
pop
in
xchg
jl
cmp
jp
jns
cwtl
inc
dec
ds
sahf
lcall
movsl
mov
sub
roll
rcr
inc
aaa
fisttps
shrl
repnz
push
push
mov
pop
and
out
mov
xor
hlt
in
and
dec
shlb
clc
xor
lret
insb
lret
lock
aam
xchg
imul
push
test
in
xor
mov
popl
icebp
xchg
ret
dec
inc
push
test
dec
icebp
sub
mov
insb
lds
push
mov
negb
gs
mov
dec
and
movsb
daa
jnp
lret
and
adc
sahf
sbb
dec
bound
cmc
adc
dec
push
ret
dec
lret
jl
jo
cmp
push
add
test
or
add
xor
imul
fucomi
xor
js
lods
in
push
xor
mov
xor
pop
ret
sub
aad
sbb
insl
cmpsb
daa
pop
pop
fistpll
xor
xchg
or
jle
xchg
lea
xchg
rcrb
xchg
ret
sub
xor
mov
test
jb
xor
jo
nop
or
mov
lret
mov
cmpsb
adc
lret
inc
pop
cmp
pop
adc
das
int
jb
cmc
enter
cs
js
adc
mov
mov
adc
lds
and
push
data16
push
jne
pop
push
jo
cli
jnp
cmp
inc
cmc
dec
cmp
int
dec
cmp
mov
popa
shlb
pop
paddusw
cmp
lock
divl
pop
push
add
ret
mov
arpl
adc
inc
fcomps
std
test
jge
not
cmc
addr16
lret
pop
repnz
ja
push
std
cmp
addr16
pushf
mov
xor
shrb
test
in
incb
cwtl
das
fisubrs
jle
cld
rclb
xor
push
and
mov
dec
aam
ret
sbb
bound
mov
xchg
ror
push
and
popa
lcall
aas
lret
inc
nop
xchg
dec
popa
test
inc
xchg
sbb
je
add
aaa
into
mov
ljmp
out
in
pop
popa
adc
icebp
sahf
enter
in
clc
ret
iret
mov
imul
test
int3
push
clc
gs
lret
movsb
insl
sbb
out
lods
push
fwait
aam
in
pop
stos
xlat
push
in
lahf
sbb
or
mov
int
lods
pop
sti
mov
mov
push
ficoms
pop
jp
test
jo
fiaddl
mov
aad
roll
mov
inc
add
cmp
es
das
inc
add
push
or
daa
scas
push
mov
inc
popf
dec
add
xchg
ja
xchg
imul
or
lea
js
js
sub
lret
mov
cmp
jmp
fcompl
push
sbb
pop
movsl
orb
lret
in
fisttpl
cld
cmp
pusha
imul
adc
mov
es
xchg
sbb
mov
ret
jp
push
aas
popa
push
scas
mov
enter
jne
out
or
out
hlt
pop
int
pusha
repnz
scas
mov
mov
outsb
jnp
rcl
cwtl
popf
aam
lea
xlat
stos
mov
mov
imul
stos
xchg
dec
ret
popf
ror
mov
rorl
xor
adc
lock
mov
shll
mov
xor
aas
sbb
jbe
xchg
cmpsb
sub
addr16
jo
push
jae
dec
cwtl
cmp
adc
rolb
xor
cmp
pop
aas
gs
push
mov
cmp
popa
push
addr16
ljmp
sub
lret
sarb
jmp
pop
cmp
icebp
orb
loope
repz
inc
push
or
test
mov
pushf
aam
xor
xor
ficompl
push
and
adc
outsl
mov
adc
mov
das
aam
jo
or
movsl
xchg
sub
pop
je
push
sub
shlb
jle
aad
jge
ficomps
mov
xchg
cmp
and
push
cmc
inc
or
adc
rorl
popa
in
jns
sub
cmc
or
push
xor
adc
cli
jb
xchg
sub
jp
xchg
xor
stos
dec
loop
pop
insb
xor
popa
push
stos
js
aad
hlt
and
mov
icebp
inc
mov
inc
testl
sbb
mov
or
jne
shlb
mov
jmp
jae
adc
cwtl
jbe
cli
xchg
cmp
mov
jge
adc
cmp
inc
push
insl
xor
aad
arpl
int3
stc
das
cmp
fs
and
xchg
jns
cmpsl
inc
pushl
nop
ret
mov
mov
stos
or
lods
cs
fwait
xor
fistl
rcrl
js
push
loop
repz
jmp
loope
repz
loopne
push
mov
mov
ret
js
push
mull
and
pop
xchg
push
mov
cli
jp
mov
sahf
add
jae
addl
stc
push
stos
sbb
hlt
add
jns
inc
lea
xor
outsb
cmp
push
jl
jecxz
xor
lods
pop
mov
stos
mov
shll
fsts
dec
shlb
push
in
and
lahf
bound
xor
out
es
push
sbb
pop
outsb
dec
pop
mov
inc
bound
jno
mov
cwtl
inc
mov
push
fstpl
std
and
aad
inc
pop
dec
xor
fldl
jne
and
jbe
ror
ss
sbb
mov
xor
imul
adc
push
js
mov
dec
fwait
xchg
pushf
push
mov
ret
mov
mov
cli
shlb
and
mov
xor
lahf
xor
pop
aam
xchg
push
leave
js
mov
or
mov
jno
cmp
loope
scas
mov
adc
sbb
fwait
cmp
fisubl
and
repnz
ret
sti
std
in
jg
inc
inc
sub
scas
mov
sbb
aas
repnz
mov
lret
out
loop
bswap
pop
xchg
and
push
enter
push
sbb
add
iret
loopne
lret
lcall
out
mov
pop
mov
int3
xor
jmp
pop
mov
repnz
jnp
sub
inc
adc
shll
int3
mov
xor
mov
and
divl
rcrl
test
hlt
mov
sbb
jmp
sahf
jb
fistl
or
mov
lahf
ss
xchg
gs
pushaw
inc
mov
gs
sahf
pop
ss
cltd
dec
jecxz
add
shrb
xchg
add
aas
inc
pop
dec
ljmp
adc
les
xchg
fsts
sub
cltd
cmp
jo
packssdw
loop
mov
call
fdivs
cld
pmuludq
test
hlt
iret
push
add
cmpsl
icebp
adc
add
lret
mov
or
jl
or
insl
and
pusha
test
jno
adc
fsubp
bound
sub
adc
out
jp
mov
pop
loop
lret
push
jno
mov
mov
jge
lds
call
push
jp
pop
jno
addr16
or
ficompl
and
pop
cli
in
cmp
mov
adc
adc
fs
xchg
mov
cmp
cmp
in
xor
fildl
mov
rorl
ds
adc
cld
and
das
or
scas
fmulp
test
adc
stc
in
inc
xchg
dec
mov
push
add
or
lret
push
enter
xchg
bts
loopne
int
dec
insl
add
ss
push
lds
inc
push
cmp
dec
dec
dec
pop
mov
push
sti
xchg
push
add
adc
cwtl
and
out
cs
sub
inc
pop
adc
adc
faddl
out
dec
mov
pop
pop
pop
daa
aas
sub
lcall
cli
js
add
mov
in
pushf
jle
rep
daa
fdivl
clc
pop
clc
pop
jp
and
stos
or
and
daa
pop
or
int
sbb
dec
ret
scas
xchg
adcb
cmpsl
js
divb
ss
jg
repnz
adc
mov
mov
cmp
sub
sub
pusha
xchg
out
loopne
cmp
shrl
sbb
sbb
test
mov
aas
mov
xlat
xchg
xor
mov
push
pop
push
ret
adc
call
enter
out
adc
fistl
out
jbe
jle
push
outsb
xchg
les
push
and
fadds
push
int3
orl
mov
mov
pop
push
jg
xor
inc
xor
push
lea
stos
xor
in
lods
mov
and
add
pop
or
dec
aas
sub
push
imul
jo
sbb
cmp
mov
pop
push
xor
sub
sbb
data16
adc
lahf
insl
fadds
fdivl
aas
push
and
and
jecxz
mov
bound
adc
pop
loop
repnz
scas
aam
insb
rcrb
stos
or
xor
es
arpl
gs
push
inc
pusha
sahf
pop
jo
in
testb
cmc
orl
test
xor
sbb
push
movb
push
pop
mov
cmpsl
fstps
push
fimuls
ljmp
sub
lahf
mov
movsl
pop
test
cmpsb
roll
dec
dec
rcr
test
jnp
cmp
ljmp
cwtl
mov
push
dec
movsb
mov
sbb
jl
push
sub
dec
sub
push
mov
sbb
movsb
cld
lods
add
xor
test
stc
roll
sub
cmp
lods
mov
xlat
imul
jmp
mov
jo
outsl
push
outsl
lahf
mov
sarl
pusha
add
fs
and
outsb
je
test
scas
mov
shll
inc
pop
loope
stos
das
iret
je
testb
mov
scas
fs
xor
pop
pop
and
xchg
cmp
jge
cmc
xchg
hlt
loop
sub
repz
cmc
mov
inc
dec
sub
or
test
mov
sar
ljmp
leave
cmp
fwait
bound
cmp
int
add
push
fnstsw
lret
stos
scas
push
push
cld
leave
test
outsb
cmp
xlat
inc
xchg
sti
stc
shrb
xchg
lcall
sbbl
popf
pop
out
and
shrb
je
es
and
frstor
pop
repz
pop
or
sti
and
or
ret
sbb
dec
pop
jp
push
mov
adc
into
push
xor
ds
mov
lret
xor
mov
push
mov
ljmp
fisttps
jb
jmp
mov
inc
gs
imul
arpl
ds
mov
ja
ror
iret
decl
xchg
in
cli
xor
xchg
cwtl
mov
ja
leave
clc
mov
xchg
or
out
lret
ds
push
xchg
sub
adc
sub
cs
sub
adc
sub
xor
jp
jae
call
xchg
mov
xchg
xor
dec
add
add
jl
clc
into
lock
lods
mov
repz
mov
ficoml
mov
test
push
xchg
jg
dec
and
sub
clc
imul
enter
dec
jbe
inc
js
in
cmpsl
jmp
jns
orb
jmp
mov
push
mov
loopne
repz
jbe
repz
or
fstl
mov
aad
push
mov
mov
mov
add
xor
popf
mov
jo
test
scas
jge
add
jbe
clc
cmp
inc
xchg
dec
jl
mov
push
sbb
test
xchg
std
sbb
shll
jecxz
push
xchg
lahf
adc
mov
idivb
pop
jg,pt
fdiv
clc
push
push
lock
lret
add
push
std
into
je
jb
add
mov
mov
rorl
mov
loop
insb
sbb
jae
push
inc
mov
lods
repnz
in
xchg
cld
adc
mov
xor
cmp
imul
pop
ja
fwait
out
vmwrite
mov
js
popf
jbe
ja
and
lahf
into
mov
sbb
loope
jb
jnp
add
inc
std
inc
out
jp
jne
mov
out
inc
dec
or
loop
mov
js
cli
sbb
pop
fcoms
lods
cld
mov
jns
je
cmp
xor
dec
push
ds
sub
shl
push
push
push
cltd
mov
xchg
ja
mov
data16
movl
in
mov
dec
inc
lods
repz
sbb
idivl
mov
inc
ljmp
aaa
data16
js
push
mov
push
sbb
push
push
add
adc
lds
into
mov
in
dec
lahf
inc
and
aad
mov
ret
dec
insl
pop
shll
dec
and
sbb
shlb
mov
add
mov
cmp
int
mov
pop
and
pop
adc
inc
and
dec
aam
or
cmp
sbb
dec
adc
or
mov
ffreep
cmp
mov
icebp
push
xchg
lret
xchg
and
mov
loope
jnp
push
out
cmpl
push
fisubrs
xor
adc
xor
push
popf
ss
dec
test
mov
dec
rcrb
out
xor
fldenv
fwait
add
test
imulb
movsb
xor
ja
out
ja
mov
cmp
cmp
add
pop
imul
jp
fwait
or
mov
mov
xchg
pop
or
iret
stos
cli
outsl
push
int3
lods
divl
or
mov
jb
sub
rorb
mov
aam
stos
and
mov
pushf
inc
ljmp
popf
sub
adc
cmp
pop
fldt
sbb
pop
push
imul
sarl
sbb
sbbl
in
jne
stos
jg
mov
or
pop
je
push
jmp
in
stc
lds
pop
xchg
adc
shrl
outsl
loope
mov
test
movsl
jnp
jb
ljmp
fcmovbe
cmpsl
faddp
push
dec
and
pop
xchg
jp
sbb
push
dec
repz
jne
sbb
std
sbb
jl
inc
js
pop
popw
ss
dec
clc
dec
push
insb
pusha
pop
addr16
jbe
in
in
pop
hlt
sbb
iret
popl
shlb
jae
cmpsb
pushf
dec
mov
add
icebp
mov
fisubl
popf
sbb
stc
mov
push
xor
cmp
leave
jecxz
jae
pop
cmp
test
insl
or
push
ja
mov
test
out
jno
pusha
loop
int
call
xchg
dec
and
je
inc
stos
loop
lea
iret
push
ret
in
inc
cwtl
pop
jecxz
dec
test
xchg
mov
aas
jne
mov
inc
mov
arpl
loopne
ja
sub
call
iret
pop
mov
aad
nop
jno
xchg
mov
leave
fstpl
xor
scas
in
mov
fcmovnbe
sub
nop
lock
lock
lret
push
push
mov
mov
arpl
cmpsl
lret
jge
stc
jecxz
mov
push
cwtl
stos
adc
xor
sub
pop
push
repnz
outsb
loop
mov
les
fsubl
dec
push
xor
mov
repz
pop
xor
mov
fs
mov
push
scas
test
lret
adc
xor
lock
cli
mov
adc
lcall
mov
gs
jb
pop
bnd
fcmovne
rolb
or
mov
pop
or
call
call
lock
push
push
dec
xor
add
inc
mov
mov
jg
iret
mov
mov
and
dec
jmp
jmp
loope
mov
sub
mov
cmp
jae
sbb
and
jns
xchg
mov
push
insl
mov
add
mov
ror
loop
or
filds
cmc
mov
outsl
in
repnz
push
inc
jmp
and
mov
mov
xor
sahf
repnz
ret
js
cwtl
daa
sbb
stos
mov
adc
jne
jecxz
cmc
jp
rcl
fiadds
jl
rorb
inc
mov
push
lods
inc
dec
inc
pop
addr16
enter
pop
inc
ret
xor
test
int3
xor
sub
clc
pop
inc
mov
push
and
push
or
jae
test
adc
aam
iret
daa
inc
lcall
push
into
call
mov
cmp
lcall
bound
clc
pop
and
cmp
enter
imul
and
mov
xchg
daa
ja
fbstp
xchg
xchg
and
dec
lret
add
ret
jmp
shl
push
cmpsl
enter
xor
dec
dec
imul
sbb
ficompl
xchg
xchg
push
adc
push
xchg
mov
mov
pop
add
pop
xor
jle
insb
pop
mov
mov
testl
mov
in
jmp
sbb
leave
fs
mov
xor
pop
movsl
out
in
jmp
js
lods
xor
xorb
mov
jmp
mov
filds
lock
pop
xor
sub
push
jecxz
sahf
out
cmp
arpl
inc
xor
push
mov
cltd
enter
mov
mov
bound
pop
push
or
test
jmp
adc
and
leave
fmulp
aaa
lods
stc
inc
inc
decl
cld
lods
shlb
and
cmpxchg
dec
and
aas
insl
icebp
pop
pop
mov
cs
push
pushf
lret
pop
push
adc
pop
dec
inc
cltd
mov
stos
aad
outsb
sub
pop
fs
dec
xchg
or
data16
pop
sub
ljmp
and
in
rcr
sti
jae
sbb
icebp
and
push
xor
negl
mov
and
in
push
lods
pop
ret
jecxz
fcmovne
shl
lods
movsb
or
clc
cmpl
push
sbb
and
roll
imul
fadds
mov
jno
es
movl
mov
out
push
xor
push
lods
aas
in
cmc
xor
icebp
mov
jno
ds
fcmovne
lods
pop
aas
inc
or
test
sbb
xchg
pop
push
rolb
jno
je
sti
lahf
jbe
arpl
dec
sub
sub
int
mov
sahf
ret
movsl
ljmp
sbbb
add
shlb
cmp
inc
call
clc
out
pop
push
stos
push
adcl
aaa
mov
aas
xor
mull
xchg
or
cmc
rorb
loope
mov
or
jp
jns
add
jl
je
sbb
pop
cli
and
rol
lods
cmp
popa
jno
jg
out
pusha
sub
test
ss
add
out
cmc
add
pusha
testl
inc
sub
cld
sbb
jge
sbb
jbe
sbb
lcall
lcall
xchg
sahf
shll
mov
fadd
mov
push
adc
add
pop
daa
push
or
adc
push
cld
xchg
in
adc
std
out
jp
push
lods
call
fcmovnbe
jl
pop
or
mov
ds
cwtl
js
jmp
into
and
sub
jmp
mov
sub
iret
aam
push
and
mov
or
dec
ss
xchg
int
aas
arpl
out
test
pushf
inc
ret
insl
jle
add
mov
inc
leave
pop
in
cs
add
cwtl
add
loopne
leave
rol
fs
std
pop
out
lods
jg
pusha
rorb
cmpsb
pusha
mov
push
mov
lea
ffreep
ret
icebp
jnp
add
call
and
lods
int
testb
mov
add
jp
outsl
mov
add
fbstp
add
clc
add
sub
and
sub
jl
inc
sbb
leave
push
mov
inc
fidivrs
cmp
mov
roll
mov
fistps
mov
insl
push
xchg
es
mov
cli
cmp
xorb
mov
cli
sbb
sbb
loop
addl
hlt
sub
mov
sti
mov
out
jo
pop
orl
mov
loop
sub
lret
inc
xchg
stc
pop
cmp
fsubrs
pop
xor
insl
loope
enter
call
xchg
push
jb
movsb
enter
cmp
sti
xchg
lcall
fadds
push
inc
adc
xchg
pop
loop
int
inc
incl
lods
pop
xchg
add
into
mov
mov
mov
sbb
sbb
addr16
add
pop
mov
jnp
mov
in
pop
cld
inc
sarb
negb
cmpsb
test
bound
mov
cwtl
lret
repnz
jecxz
bound
pop
std
je
mov
imul
lcall
jo
inc
add
jg
fiadds
in
aad
cld
out
popf
icebp
adc
xchg
push
or
shll
sub
cmp
xor
cmc
push
mov
in
jle
push
out
cmp
mov
push
or
les
xor
jo
lea
xor
xchg
cwtl
mov
sub
push
mov
cmpsl
mov
mov
mov
test
or
inc
mov
outsl
shll
mov
fcomp
dec
jo
pushf
xor
push
sub
sub
xchg
push
mov
mov
in
or
ficoms
es
sub
mov
and
int
repnz
decl
iret
lea
xchg
inc
lock
in
sbb
add
fs
out
scas
ret
mov
pop
add
push
mov
std
xchg
jo
lock
stos
lcall
sbb
cli
ljmp
xor
adc
ds
mov
pop
ja
jg
xchg
ds
xchg
cmp
les
xor
pop
arpl
xor
mov
cmp
lds
push
jle
push
dec
in
dec
popf
push
xor
xchg
ljmp
mov
arpl
jp
in
mov
mov
pop
aaa
jg
mov
xor
fmulp
xor
inc
icebp
or
addl
mov
fs
fdivrs
xchg
sub
mov
inc
sti
or
lock
insb
push
lds
popf
cmp
dec
fs
aad
lds
sub
movsl
stc
in
nop
adc
scas
bound
dec
out
repz
cmpsb
mov
mov
call
pop
mov
jo
iret
ret
mov
jle
lahf
inc
pop
aas
xlat
mov
sub
adc
fsubrs
xor
testb
shll
adc
pop
cmp
xchg
loop
das
divb
daa
ljmp
scas
xor
stos
shl
and
pop
in
xchg
pop
fists
movsb
sbb
adc
lods
punpckhdq
lock
ret
pop
movsl
mov
pop
add
outsl
dec
add
aam
add
stos
xchg
movsb
incb
dec
or
push
xchg
adc
test
xacquire
mov
mov
cmp
and
or
shlb
inc
or
xor
mov
int
fisubl
inc
out
add
add
outsb
mull
cmpsl
aam
movsl
insb
sbb
dec
jg
loop
pop
dec
xchg
mov
push
testl
mov
aas
jle
dec
lods
lcall
jmp
test
sahf
fs
xchg
mov
icebp
ret
cwtl
xor
ljmp
rcl
icebp
and
pushf
pop
sti
fcoms
mov
sbb
mov
push
test
shl
mov
stc
cmpb
push
and
fstl
dec
mov
and
ret
addr16
pop
jecxz
in
test
loopne
jmp
les
ficomps
inc
imul
clc
xchg
xchg
add
repnz
negb
aad
sub
or
jo
cli
push
sub
mulb
sub
out
adc
outsl
cltd
rcl
dec
rcl
and
mov
leave
repz
in
mov
addb
in
loop
pop
push
inc
rcl
mov
sub
xchg
fisttps
xchg
or
mov
add
out
jne
jmp
cmp
push
into
cmp
cmc
inc
mov
cmc
mov
lods
mov
mov
scas
in
mull
hlt
aam
jecxz
je
and
add
inc
fistl
leave
mov
aam
jo
mov
and
ljmp
bound
xchg
mov
leave
ret
in
cmp
outsb
sbb
dec
mov
sbb
cmp
and
loope
loop
push
fs
mov
cmp
mov
inc
mov
sarb
in
jecxz
mov
repz
xlat
mov
and
movsb
pop
mov
int
push
mov
in
xchg
push
lcall
mov
movsl
xor
dec
shll
push
push
inc
das
adc
xor
inc
aad
or
push
stos
cwtl
push
pop
jne
dec
or
jne
mov
add
inc
inc
fisubl
mov
fistpll
jnp
cmpsb
add
mov
in
or
test
pop
inc
mov
fistps
jno
jmp
pop
pop
stos
ret
pop
enter
push
or
cmp
xlat
jae
data16
arpl
cltd
outsl
in
or
icebp
xor
jnp
xor
xor
mov
mov
jg
test
fisubl
mov
adc
aam
cli
dec
inc
loop
pop
xchg
out
jns
adcl
add
fidivrs
cltd
movsl
fsubs
std
pop
in
jg
ja
jmp
hlt
dec
inc
sti
mov
sbbb
and
jne
nop
or
setne
pop
mov
in
jae
sbb
dec
dec
outsb
sbb
sbb
xor
mov
push
dec
dec
outsl
in
adc
lcall
mov
push
iret
in
call
pop
jbe
adc
pop
or
dec
sub
stc
jb
xchg
push
cmp
pop
jge
hlt
popa
or
push
lret
push
aad
jne
nop
fldt
jl
popa
jns
aad
and
loope
mov
mov
daa
sti
data16
shlb
push
jg
fcoms
jae
xor
shlb
mov
std
fiaddl
mov
dec
rorb
mov
lea
xchg
mov
mov
lds
js
cmc
xor
push
push
repz
arpl
fmul
pop
cmp
dec
dec
adc
mov
jns
inc
xchg
sbb
adcb
cmp
mov
xor
add
stos
pusha
inc
mov
in
adc
ret
movsb
mov
insb
and
sbb
sub
xor
addr16
jge
xchg
add
inc
sbb
repnz
and
pop
rclb
mov
divb
pusha
jl
add
sbb
test
mov
add
loope
jbe
adc
ret
push
mov
push
sub
movsb
insl
add
inc
inc
sbb
arpl
pushf
dec
xor
into
and
fcomps
sbb
call
data16
mov
xchg
mov
or
ja
test
pushf
inc
jle
into
push
scas
ret
std
push
aaa
dec
jle
cld
popf
pusha
rcrl
xor
addl
or
decb
add
mov
mov
push
xor
cmp
jo
jle
mov
mov
movsl
xchg
inc
sub
and
add
sub
aam
int
out
or
loopne
mov
inc
push
and
jno
rorl
fs
clc
ret
popf
sbbb
cmp
clc
adc
mov
mov
jne
out
pusha
add
hlt
jo
inc
out
pop
fsts
or
jmp
repz
mov
popf
mov
pusha
mov
js
push
mov
dec
call
out
adc
jo
and
pop
and
dec
cli
imul
push
stos
pusha
pop
rorb
iret
sahf
xchg
dec
dec
ljmp
sub
push
aad
mov
in
stos
ffreep
sahf
adc
inc
sbb
mov
rcll
stc
fmulp
and
pop
mov
jmp
enter
cmp
sbb
subb
out
xchg
sbb
mov
clc
cmp
ljmp
movsl
add
push
sub
popa
popa
xchg
mov
mov
aad
out
add
cmp
inc
inc
mov
mov
lock
push
xchg
dec
in
fwait
adc
hlt
js
test
mov
xchg
mov
pop
mov
mov
shl
inc
andl
call
lret
add
xchg
in
fwait
cmc
push
inc
inc
push
test
loopne
pushf
lds
push
or
out
xchg
xor
cmp
rcll
push
push
cmp
jmp
cmc
dec
pop
out
lcall
shll
sub
cmpsb
push
inc
sub
bound
mov
pop
or
or
or
mov
mov
push
xchg
out
fbld
addr16
add
mov
add
xchg
xorb
stc
xor
or
jg
arpl
stc
fistps
jmp
aad
mov
hlt
mov
or
xor
dec
push
movsl
mov
mov
mov
pop
sbb
sbb
ds
adc
andl
test
enter
repnz
aam
push
rcl
lret
into
jns
jb
out
iret
bnd
nop
mov
hlt
daa
popa
in
dec
movsb
in
mov
gs
fdivr
andl
movsb
pushf
dec
loopne
mov
and
mov
stc
xchg
mov
inc
pop
stc
push
pop
hlt
mov
jne
push
rorl
sbb
sbb
imul
push
fistl
iret
jg
adc
pop
repnz
stos
mov
inc
mov
jne
out
dec
pop
sub
fwait
enter
add
mov
xchg
and
push
hlt
jbe
mov
pop
fisubl
dec
push
test
adc
dec
imul
outsl
jp
ret
push
sub
xchg
adc
jp
xor
ja
pop
mov
pop
subl
cmp
pop
sbb
jb
out
mov
ror
sti
xorl
or
sti
mov
lea
mov
ljmp
stc
or
setg
in
nop
inc
and
das
inc
mov
or
cs
popa
add
jmp
or
movsb
adc
push
adc
jp
mov
cld
sbb
inc
loope
dec
adcl
cltd
inc
push
add
lock
xchg
pushf
sahf
in
fdivrs
pusha
mov
jb
mov
aas
xchg
cld
imul
aad
push
or
sub
test
jo
sub
mov
xor
adc
sub
call
jnp
mov
sbb
dec
mov
pop
sbb
ljmp
shrb
xchg
mov
int
pop
out
jo
fcmovnb
cmp
xor
enter
dec
cltd
shl
std
out
mulb
push
jbe
fadds
mov
jl
std
mov
pop
jge
dec
or
inc
stos
push
cmpb
push
shrl
stos
int3
sbb
jne
rcrl
std
int3
lcall
fisttpl
pop
and
sbb
les
sub
dec
ror
fwait
jle
insb
arpl
pop
lcall
addr16
or
cmp
sbb
pushf
and
fldt
and
inc
sub
hlt
imul
add
lcall
sub
fisttps
popf
jns
sbb
addb
mov
lahf
sbb
inc
pop
cs
adc
adc
jne
cmp
test
xor
sub
and
dec
sbb
pop
mov
lcall
xchg
aas
mov
and
nop
mov
clc
sub
mov
xchg
add
jnp
cmp
imul
inc
jo
stc
push
popa
aas
push
lods
data16
add
addl
mov
push
pop
mov
adc
ljmp
jne
add
mov
das
scas
repnz
sbb
cmp
jae
adc
and
mov
jp
and
mov
lock
xorb
pop
dec
xchg
inc
xchg
jecxz
aas
and
cwtl
dec
test
pop
pusha
call
or
and
mov
popf
sbb
lds
outsl
call
sbb
data16
jae
xchg
pop
cmp
aad
pop
into
jo
cmpl
or
or
add
pop
push
jmp
push
shr
bts
iret
xchg
ret
loope
mov
loope
jge
cwtl
cmc
cwtl
sub
inc
sub
lods
mov
sub
pmaxub
mov
inc
arpl
mul
js
sbb
in
or
cmp
mov
jmp
push
or
or
clc
or
repz
or
in
rorl
add
or
cli
or
stos
mov
cs
mov
int3
mov
pop
repz
sbb
test
dec
data16
mov
movsb
dec
stc
clc
and
pop
mov
xchg
push
loopne
pop
mov
and
in
rcrl
xchg
dec
add
filds
or
inc
xorb
sbb
enter
into
inc
mov
mov
push
xchg
ret
mov
les
fwait
pop
mov
test
pop
cmp
sub
cmp
dec
int3
jnp
rclb
jl
sub
ret
add
xor
jae
rcrb
xor
mov
mov
push
imul
or
notl
test
pop
add
dec
out
dec
gs
aam
lret
sub
lea
scas
jne
xchg
mov
adc
and
sub
dec
out
gs
lcall
lds
jmp
bound
sub
inc
ja
data16
int
cmpsl
sbbl
scas
add
push
int
dec
pop
pop
fdivrs
push
jge
sbb
jnp
push
adc
out
mov
sbb
sub
movsb
les
dec
mov
clc
pop
adc
add
ret
sub
scas
rolb
mov
call
rclb
mov
loopne
push
and
jg
inc
bound
int3
addr16
dec
stos
popa
cltd
popa
sbb
out
mov
pushf
add
xchg
pop
sub
les
dec
mov
out
cli
cmp
cmc
and
movsl
in
mov
stc
in
div
pushf
xchg
or
mov
lret
mov
add
fadds
movl
push
xor
push
cmp
inc
dec
shl
push
and
and
cmp
add
jb
ret
push
xor
fucomip
push
sbb
mov
adc
les
xlat
roll
xchg
dec
dec
lahf
out
push
bound
mov
push
div
pop
mov
push
push
sahf
jl
repz
or
jecxz
data16
mov
jbe
std
mov
push
sub
sbb
gs
cmc
ja
xor
add
mov
jns
int
sbb
aad
lds
xchg
jae
xlat
xchg
sub
dec
out
sbb
imul
cmp
jbe
call
out
adc
mov
jecxz
test
iret
or
inc
mov
mov
into
mov
adcl
daa
push
scas
pavgw
xchg
mov
fmul
addl
cmp
cmp
mov
inc
push
cmp
enter
inc
mov
pop
ja
shl
xchg
ljmpw
stos
fwait
notl
lret
sub
jne
cmp
and
or
pop
mov
call
mov
push
xor
fisttpl
sbb
pop
fldl
and
mov
mov
inc
mov
insb
fwait
and
and
lods
inc
cmpps
dec
inc
pop
inc
movsl
jns
daa
xchg
inc
rolb
dec
fstpl
fwait
hlt
mov
push
cmp
pop
pushf
jl
imul
fisttpll
movsl
rclb
gs
jae
mov
mov
sbb
mov
cmp
sbb
das
pop
scas
mov
es
mov
movsl
jle
mov
push
mov
mov
std
add
jnp
xlat
jnp
mov
shl
sub
pushf
mov
jmp
cmp
inc
inc
fs
imul
xor
mov
lahf
repz
mov
cld
push
loop
lods
icebp
inc
mov
out
out
nop
xor
jno
push
or
jg
xchg
push
enter
popf
sub
push
mov
mov
mov
mov
dec
addr16
inc
adc
inc
mov
out
and
cmp
xchg
push
add
mov
xor
ja
mov
xchg
in
xchg
cmp
fcmovnbe
pop
dec
mov
in
pusha
mov
mov
pop
outsl
ret
adc
sub
mov
xor
call
and
cmp
das
rclb
jbe
lock
or
inc
lret
pop
andl
lock
sub
dec
js
sbb
mov
iret
adc
add
jb
int3
adc
lock
and
jb
popa
std
pop
jle
or
mov
sbb
pop
imul
pop
fninit
lods
mov
lret
mov
je
push
mov
out
adc
and
mov
cmp
in
test
xchg
dec
arpl
pop
outsl
jo
adc
int
fisubl
ljmp
imul
icebp
mov
mul
mov
iret
and
mov
xor
jns
cmpsb
les
ljmp
outsb
pop
mov
mov
and
cmp
mov
or
ds
adc
testb
int
jmp
hlt
test
add
subl
outsl
pop
jne
test
fiadds
mov
xor
xchg
push
lods
pop
hlt
clc
jecxz
into
mov
push
sbb
sbb
jno
or
sub
mov
push
xor
rcrb
pop
ss
xor
ja
xchg
xor
xchg
xchg
push
jne
cwtl
pop
out
das
fdivrs
xchg
mov
clc
mov
enter
pop
xchg
jae
out
jo
mov
insl
mov
sub
jo
and
push
push
mov
adc
mov
pusha
insl
jae
cmpsb
mov
shl
pop
mov
add
lahf
push
jg
leave
test
and
or
stos
or
fiaddl
ljmp
inc
into
outsl
fdivrp
mov
test
pop
and
xor
andl
xor
icebp
ss
in
or
mull
mov
das
decl
mov
xchg
push
jp
jl
lock
call
mov
mov
dec
mov
push
out
test
test
adc
js
aaa
out
mov
jg
hlt
gs
mov
in
and
or
push
dec
xchg
ds
idivb
insb
cwtl
stos
int3
mov
xor
lock
push
dec
cmp
mov
data16
into
lret
call
fcmovb
ret
push
sbb
imulb
popf
pop
stc
fcompl
add
test
pusha
add
pop
dec
repnz
cmp
adc
or
or
dec
sbb
shr
push
jo
ret
je
iret
sahf
jno
cmp
or
insb
pop
bound
or
jge
adc
cmc
push
pop
xchg
leave
adc
mov
or
aaa
sbb
dec
lds
mov
clc
push
sbb
pop
mov
mov
sbb
mov
aad
push
dec
arpl
dec
pop
gs
loop
or
dec
and
clc
into
popa
and
push
push
mov
std
xchg
and
lods
nop
movsb
insb
jecxz
arpl
fwait
cmp
and
sub
in
sti
insb
scas
lret
inc
or
and
imul
pusha
jg,pt
push
enter
mov
jmp
mov
gs
imul
bnd
mov
rcr
xchg
outsl
subps
mov
jle
sahf
mov
dec
ds
jmp
movsl
jns
jb
lock
imul
inc
push
idivb
mov
push
mov
and
push
inc
or
fs
push
int
or
mov
dec
sub
add
cmp
mov
mov
jecxz
mov
ret
sbb
enter
popa
rcrb
add
pushf
out
dec
ss
or
in
outsl
push
mov
jecxz
and
mov
and
jmp
and
push
call
jo
fistl
stc
aas
fists
xor
mov
inc
iret
pop
jecxz
mov
in
aas
sbb
cmp
jg
imul
sbb
stc
mov
dec
pop
jne
mov
jecxz
pop
nop
mov
push
scas
int3
test
in
push
and
fsubrs
cmpsb
dec
shr
sbb
jbe
sub
and
push
or
inc
hlt
rcrb
popf
jp
sub
aaa
movntps
js
out
daa
lods
in
movsl
push
jns
mov
test
lret
loope
cld
mov
fs
rol
out
sbb
lock
cli
pop
fdivs
sub
pop
jbe
lret
nop
int3
test
aas
and
push
mov
jb
outsb
dec
int3
repz
mov
shrb
inc
test
aad
addr16
ret
lock
subb
test
cmp
outsl
sbbl
loopne
xchg
ds
fisubrs
inc
pop
ja
je
es
dec
dec
mov
aad
sti
push
mov
push
cmp
adc
adc
dec
pop
jge
or
das
cmp
jg
daa
repnz
mov
jno
dec
call
repz
jmp
mov
scas
aad
fiadds
pop
adc
aad
int
call
pop
and
loopne
mov
fmuls
mov
jle
fs
add
loop
loope
stc
imul
ljmp
andl
and
xor
push
cmp
push
pop
adcl
fwait
std
dec
mov
je
iret
mov
mov
cld
out
popf
rcl
or
stos
sar
imul
outsl
lret
aad
push
loope
xchg
cmp
mov
dec
add
push
dec
cmovp
or
add
fdivs
js
pop
xchg
push
xchg
popf
lods
shrb
aad
jb
sub
jae
out
inc
lods
repnz
rcll
inc
fistpll
xchg
xchg
int3
ss
cmp
xor
imull
mov
push
dec
mov
adc
mov
call
das
loop
inc
repnz
or
cltd
insb
jmp
mov
xchg
mov
xchg
mov
fists
push
mov
push
add
jmp
xlat
sbb
imul
ret
inc
xor
pop
fdivrp
aad
mov
test
or
xchg
dec
mov
jp
adc
sbb
je
aas
ret
jmp
cltd
inc
cmp
xchg
mov
push
xchg
inc
popf
cltd
out
jl
ret
pop
bound
fldl
bound
dec
scas
xor
xchg
aas
pop
jl
les
sti
add
sub
jne
xchg
adc
add
fisttpll
imul
mov
xchg
adc
or
push
sbb
test
sub
mov
lret
gs
dec
aaa
pusha
cmpsb
les
shlb
mov
xchg
inc
or
enter
mov
cltd
inc
xor
mov
and
loopne
sbb
test
sub
sbb
je
sahf
testb
jns
pushl
jmp
mov
je
xchg
pop
lret
out
sbb
xor
cmp
push
pop
and
shlb
mov
addl
sub
and
rclb
adc
stc
add
bound
movsb
pop
mov
mov
inc
lods
xlat
mov
mov
loopne
sub
xchg
flds
cli
fldcw
and
mov
pusha
and
pop
out
or
and
jb
pusha
or
pusha
aam
out
movb
pusha
mov
push
push
sub
mov
cmp
icebp
notb
sub
jb
ret
sub
mov
and
fiadds
fnstenv
cltd
cli
mov
xor
call
sbb
xchg
push
jo
iret
add
pop
add
sbb
mov
adc
cmovnp
push
jnp
subb
cli
fsubs
mov
xchg
xchg
ret
in
arpl
xor
xchg
sub
pushf
ret
add
ljmp
jle
in
test
jmp
xor
xor
jmp
add
jp
hlt
pushf
lock
sbb
xchg
icebp
xchg
xchg
jo
jp
gs
sub
mov
xor
sbb
ja
xor
dec
rcrb
xor
jp
into
movsl
mov
add
or
pop
or
fsubrp
fiadds
pandn
js
das
mov
xor
call
mov
pop
stc
mov
inc
and
cmp
and
loope
test
push
xchg
xchg
push
shrb
sbb
scas
or
aad
ret
mov
cmp
jg
testl
inc
push
xlat
les
imul
push
xchg
xchg
and
lock
mov
pop
push
xchg
mov
push
fldenv
mov
lahf
mov
lods
movsw
adc
in
dec
add
dec
cmp
pop
mov
jo
push
add
imul
and
in
jmp
popf
stc
add
sub
insl
arpl
addr16
dec
mov
jmp
sbb
push
push
test
es
les
jecxz
push
or
mov
fistpl
sahf
dec
mov
inc
repz
sub
ljmp
xchg
pusha
shll
cmp
loope
jp
aaa
and
pop
test
int3
outsl
and
fbld
mov
shrb
loopne
cmp
inc
std
sub
mov
pushf
mov
dec
je
fbstp
adc
ja
sbb
jns
inc
repnz
pop
inc
adc
jne
ret
and
pop
dec
push
xlat
cmpsl
xor
jnp
pop
scas
sarb
stos
popf
inc
jecxz
cli
mov
adc
out
fcoml
mov
xor
mov
hlt
sub
sbb
dec
pop
std
addr16
pop
adc
jmp
mov
mov
jg
adc
pop
repz
test
lock
sti
stc
ds
cld
shrb
xor
mov
iret
add
shlb
push
in
jle
fs
imul
mov
shr
rcrb
sub
sub
mov
daa
fisubrs
std
outsb
lret
inc
fdivrs
dec
cmp
sahf
ror
mov
pop
add
test
and
push
dec
js
mov
daa
push
mov
out
adc
add
jnp
inc
sbb
jl
dec
scas
addb
adc
aaa
jle
cmp
mov
adc
fimull
dec
lock
and
out
cli
fs
scas
push
sbb
into
insl
rcr
shrb
les
mov
dec
clc
xchg
lods
movsl
adc
fistpl
and
sbb
test
jae
dec
jecxz
mov
or
adc
xlat
in
jecxz
xchg
popa
js
sub
push
popf
iret
add
ficomps
loopne
mov
addr16
xchg
stos
stos
xor
mov
adc
es
sahf
mov
cwtl
sub
push
inc
dec
es
push
call
and
outsl
adc
adc
out
sbb
xchg
mov
dec
push
jmp
jg
push
push
pop
mov
ror
jae
js
mov
fimull
aas
xchg
std
or
cmovae
loopne
insl
mov
lock
sub
dec
sub
adc
or
hlt
sub
mov
fiadds
out
pop
push
pop
mov
lret
aas
daa
movsl
dec
mov
outsb
push
insb
cltd
inc
jo
push
mov
add
cmp
movsb
cmpsb
dec
xor
nop
mov
repz
cltd
push
aas
xchg
fdivs
les
mov
cmp
ja
cmp
mov
sbb
test
out
test
mov
dec
aaa
cld
dec
mov
dec
iret
mov
sbb
mov
lods
repnz
sbb
mov
pusha
popa
pop
xor
outsl
push
dec
push
clc
iret
adc
movsl
cmp
test
ret
xor
xchg
push
xchg
das
xchg
push
inc
mov
addr16
data16
sbbb
adc
fxch
push
iret
xor
iret
xorl
adc
andl
mov
adc
cmpsb
mov
in
mov
inc
js
xchg
or
or
int
outsl
enter
sti
loopne
in
mov
aad
imul
push
lds
add
jnp
lcall
leave
fistpll
jecxz
pop
xor
adc
sarb
pop
dec
inc
decb
test
xorl
movsb
jno
stos
jmp
jnp
int3
inc
fldt
loop
push
xchg
icebp
movsb
xor
vcvtdq2pd
inc
imull
sub
jbe
aas
movsl
insl
insl
out
sbb
imul
pop
and
fdivr
cmp
fdivl
pop
in
and
cmc
int
xchg
lret
adc
xchg
pop
ret
inc
cs
xor
adc
or
jno
out
cmp
dec
jne
bound
pop
mov
mov
pusha
call
popf
mov
add
ds
inc
imul
dec
out
and
pop
cmp
adc
test
or
mov
jl
xor
lds
scas
mov
inc
mov
inc
std
insb
mov
orb
cli
imul
roll
stos
je
cmpsb
push
mov
andb
or
xchg
cmc
stc
push
in
lcall
or
cmp
sbb
ja
cmc
std
nop
mov
out
ja
insl
sbb
or
jecxz
adc
xor
jns
or
mov
repnz
gs
push
push
in
xor
push
mulb
gs
cmp
test
xchg
pop
stos
out
insb
sbb
inc
and
inc
push
enter
add
push
or
test
movsb
inc
and
test
and
mov
int3
cmpsl
jge
repnz
out
xor
xor
jno
xor
mov
fwait
stc
push
sub
por
call
out
out
scas
dec
xchg
or
mov
push
bnd
lods
dec
dec
dec
xor
movsb
mov
fisttpl
test
int3
jl
fcomps
mov
jmp
je
sti
xchg
cwtl
out
testl
les
adcl
jns
inc
push
push
mov
aam
sbb
shl
jnp
xor
stos
xor
mov
cmpb
les
repnz
or
push
pushf
mov
jno
cmp
arpl
xchg
pop
add
pushf
fdivrp
pop
dec
mov
scas
lcall
or
sub
mov
ss
jb
adc
nop
push
inc
scas
lret
fnstenv
sbb
gs
daa
xchg
nop
mov
loopne
xor
inc
and
mov
adc
sub
xor
addr16
jg
dec
sub
in
sub
aam
daa
ret
jle
movsl
push
call
jno
mov
shll
das
ds
mov
arpl
add
or
xlat
and
test
cli
fdivrl
adcb
fistps
mov
aas
stc
mov
mov
in
out
mov
sbb
mov
subb
stos
and
cmc
lahf
mov
mov
cmpb
xor
cmc
je
push
std
rcrl
in
mov
imul
xchg
fwait
lods
xorb
mov
jp
jecxz
jmp
mov
insl
ret
cmc
inc
xchg
aad
lcall
test
out
aas
call
xchg
pop
sub
icebp
pop
test
aam
popf
pop
or
scas
mov
clc
push
outsb
cmp
pop
dec
or
sub
mov
adc
fimull
sar
ja
push
or
call
mov
inc
dec
ja
iret
shrl
cmp
push
call
inc
xchg
lcall
stos
mov
lds
aam
or
cwtl
stos
fldt
ret
push
aas
mov
fnstenv
sbb
adc
mov
xchg
iret
jo
sbb
cmp
icebp
pusha
jno
mov
sahf
or
test
mov
cmp
adc
push
or
xchg
cmpsl
inc
or
out
rolb
gs
stc
rep
loop
dec
jbe
cmp
mov
push
inc
cmp
xor
jg
std
in
ret
jmp
sbb
in
int3
xor
imul
hlt
or
ret
popf
pusha
pusha
inc
cmpsb
ljmp
adc
mov
xchg
psrlq
sub
cmp
inc
insl
pop
insl
fisttpl
dec
jecxz
mov
pop
push
ficoms
sbb
imul
cmpsl
lods
mov
push
sahf
es
xor
es
mov
xor
repnz
stos
push
sub
leave
jp
mov
cltd
mov
pop
inc
push
popa
sub
mov
mov
test
aam
sbb
mov
test
cmpsb
ret
roll
add
jae
test
xor
xchg
lea
mov
or
fdivs
std
ja
sarb
dec
mov
inc
test
out
and
adc
xor
xchg
pop
and
sub
inc
lcall
lret
xchg
cs
ud1
adc
aam
repz
pusha
adc
push
add
and
xor
pmulhw
lcall
aad
jae
nop
mov
dec
ja
js
add
push
cmp
cli
test
int3
adc
rol
imul
or
ss
imulb
push
sbb
push
fs
push
bound
mov
in
sbb
addr16
popf
ja
icebp
cmp
gs
mov
call
loope
addr16
js
in
repnz
add
mov
pop
or
or
shlb
push
test
aam
test
andb
mov
cli
in
shrb
mov
adc
shll
inc
rcr
lds
jle
sar
out
mov
push
lcall
repz
mov
push
sarl
scas
popf
jns
insb
loop
mov
insl
leave
push
mov
mov
shrb
leave
clc
or
inc
or
mov
negb
cmpsb
sbb
push
xchg
pop
test
aad
fidivs
mov
cli
in
sub
popa
pop
xchg
stos
stc
cmp
mov
sbb
movsl
dec
lods
mov
lock
sub
pop
ja
fabs
jb
xchg
repnz
fistpl
mov
dec
sub
iret
int3
push
push
xlat
add
popa
sbb
fsubs
and
icebp
mov
jo
adcb
xchg
dec
jl
jo
xor
cmpsl
xor
or
imul
inc
sub
xchg
xchg
out
push
mov
add
jmp
fdivrs
clc
or
mov
outsl
add
js
xor
test
js
jo
and
jo
jb
jl
push
add
fucom
test
test
pop
testb
xorb
cmp
iret
push
jg
mov
xchg
stos
je
sarb
mov
sbbl
jecxz
push
stos
stos
add
cmc
mov
xor
loopne
jnp
dec
scas
aaa
testl
movsb
clc
jae
sbb
ds
mov
push
add
add
dec
repnz
dec
jbe
ja
je
or
lods
lahf
cmpsb
jmp
pop
aad
fsubr
mov
sbb
jne
movsl
jb
lret
repz
call
pop
insl
int3
dec
shrl
mov
subb
mov
mov
cld
lahf
ja
mov
sarl
popf
shll
pusha
mov
mov
shl
mov
jmp
adc
stc
ds
sbb
pushf
xor
jmp
mov
jle
sti
mov
fbld
mov
jb
outsl
xor
dec
lea
ds
imul
test
and
mov
lahf
fcompl
dec
loop
fnstcw
and
ja
push
sub
xor
jbe
pop
in
mov
sbb
rolb
jg
mov
jbe
fwait
es
dec
jl
xor
dec
cmc
xchg
ds
dec
fistpl
xchg
nop
mov
push
adc
sbb
lock
rolb
aad
push
cmp
inc
iret
out
or
xor
lcall
mov
shll
pop
and
sbb
lock
mov
and
into
fsubl
push
les
xor
les
jmp
rcll
add
pop
dec
sbb
push
sbb
imul
test
mov
xor
add
inc
pop
xchg
pop
fsubs
int
or
pusha
in
loop,pt
dec
in
and
lcall
push
loop
clc
add
inc
cltd
or
jns
test
jns
pop
imul
sbbb
bound
icebp
arpl
popl
js
lret
dec
jp
hlt
shrb
and
aaa
gs
cmc
shr
push
inc
sarl
mov
les
sub
addr16
jno
fwait
jmp
cltd
jae
cmp
adc
cwtl
or
adc
fimuls
adc
xchg
jbe
mov
inc
js
pop
ljmp
lret
nop
sbb
ret
inc
testl
rorl
and
leave
add
scas
pop
add
in
or
stc
lahf
int3
mov
pushf
jge
or
push
stc
inc
ficoml
out
lret
cmpsb
push
pop
bound
imul
pushf
pop
cmp
fisttpl
das
outsl
xor
jnp
and
sub
cmp
sahf
in
jbe
cld
movsb
mov
push
jns
mov
repnz
fnsave
dec
ss
lds
push
mov
insl
imul
cmp
xchg
es
rolb
add
out
int3
insb
or
div
std
push
push
out
fld
addr16
jg
aad
cmpsl
loopne
pop
rolb
and
push
push
mov
push
pop
dec
sub
cmp
popa
sub
jl
adc
inc
inc
push
ds
adc
hlt
inc
stos
bound
lret
aam
add
dec
lock
jge
sub
stos
add
ret
rclb
mov
and
mov
pushf
and
mov
mov
rcr
mov
xor
mov
lret
cli
bnd
jmp
jnp
xchg
mov
fwait
cltd
cltd
sar
cmpl
add
mov
xor
divl
jmp
cwtl
cmpsb
loop
scas
repz
jl
stos
jbe
jno
cli
jne
and
std
popa
add
push
mov
or
test
push
divb
std
cs
daa
xor
pushl
sub
xor
fcmovnu
shl
bound
sbb
mov
repnz
xor
outsl
mov
fsubrs
call
in
pop
mov
sbb
mov
andb
out
sbb
pop
jl
scas
cld
ret
mov
out
ret
scas
inc
cmp
mov
sti
mov
inc
loop
mov
xchg
not
test
sub
fisubrs
iret
test
or
jnp
je
enter
inc
add
test
out
lds
sub
into
data16
push
pop
mov
inc
pop
int
imul
cli
lret
mov
sbb
inc
pop
fucomip
adcb
sbb
negl
adc
scas
add
pop
and
data16
lea
sbb
in
jb
out
inc
lock
sti
push
inc
fisttps
popf
xchg
add
lea
shll
cld
inc
outsb
loopne
and
dec
mov
xchg
pop
fisubl
cld
loopne
pop
inc
insb
and
push
inc
mov
lret
imul
mov
les
out
movsb
pop
xchg
std
psraw
lahf
loope
push
sub
je
mov
int3
jno
xchg
lods
jmp
inc
das
or
in
outsb
dec
add
mov
and
sahf
jmp
fstl
add
add
loope
xchg
test
add
jbe
xchg
loop
mov
je
into
cmp
loope
push
rolb
inc
stc
ja
shll
subb
jp
inc
inc
call
dec
xchg
xchg
adc
mov
fadds
mov
adc
icebp
scas
lods
adc
pop
daa
jle
xlat
jg
ja
sub
and
xchg
xor
rcl
mov
loope
mov
pop
inc
cmp
mov
sahf
pop
dec
mov
testl
jl
dec
cmp
push
sub
mov
enter
jp
pop
push
adc
negb
mov
add
jns
iret
jb
fmuls
push
sub
lea
lods
mov
imul
dec
std
sub
data16
mov
sahf
mov
ds
dec
mov
icebp
cmc
add
xchg
jecxz
daa
sbb
push
push
dec
ljmp
test
add
stc
and
jb
fiaddl
xchg
xor
loope
jg
ds
fbstp
push
pop
xlat
or
cmp
sarl
jecxz
sbb
mov
inc
sub
ja
insl
imul
inc
test
call
into
gs
mov
cmpb
jle
aas
inc
or
or
ljmp
cmp
jb
cmp
cs
mov
jmp
leave
and
ret
xlat
xor
imul
cs
sub
pop
push
jb
add
mov
mov
or
add
jnp
adc
sbb
mov
lahf
fisubrs
xor
mov
in
add
adc
dec
outsb
add
adc
inc
rorb
mov
jne
decl
pop
or
lods
add
mov
or
aad
mov
sbb
xor
addb
dec
stos
push
add
xor
xor
adc
or
int
stos
dec
shl
bndstx
aad
pop
pusha
push
mov
pop
mov
data16
mov
ret
cmpsb
lock
push
mov
pop
cli
fdivrs
push
mov
cmpsb
jnp
xchg
add
xor
pop
pop
pop
mov
push
mov
push
add
incb
mov
pop
pop
ds
jmp
pusha
xor
or
and
ret
stos
mov
mov
xor
dec
or
adc
cltd
cwtl
movsl
push
rclb
and
jo
subl
fwait
out
outsl
out
test
test
xchg
mov
xor
mov
pop
divl
jmp
je
pushf
mov
rcll
fs
jne
mov
jge
push
cmp
xchg
cmp
or
sbb
pop
mov
adcl
enter
cmpsb
sub
in
or
imul
subl
mov
in
jl
sub
adc
mov
xchg
aaa
in
shll
cmp
fildll
sbb
adc
outsb
scas
in
cmp
repnz
aad
or
xchg
jl
lods
mov
fcmovne
and
push
inc
inc
add
mov
inc
mov
sti
dec
pushf
dec
jmp
xchg
pop
sub
inc
in
shlb
clc
bound
les
shrl
xchg
adc
dec
sub
push
cmp
xor
ficoml
push
xchg
test
cmp
daa
arpl
sahf
aad
dec
lods
jle
xchg
mov
loopne
xchg
mov
je
aas
rcrb
loopne
in
addr16
add
jne
insl
addl
cwtl
pop
mov
ds
pop
add
jecxz
outsb
xor
adc
mov
enter
scas
jns
cmp
mov
pop
mov
leave
sti
repnz
xor
std
push
mov
popf
push
add
jne
and
pop
pop
xchg
gs
out
inc
in
ja
sbb
xchg
cmp
shrb
or
push
movsl
cwtl
lods
aam
ljmp
mov
sbb
scas
mov
mov
stos
lcall
cmp
clc
xchg
aas
aaa
insl
fbstp
xor
dec
std
mov
pop
xor
jne
add
ficomps
stos
mov
int
sti
popf
and
and
subb
cwtl
movsb
mov
jno
jmp
call
cmp
mov
add
mov
pop
aaa
push
sub
insl
sub
bound
mov
mov
inc
sbb
test
out
inc
jns
xchg
mov
bound
loop
data16
pop
lods
aad
push
add
andb
sarl
scas
in
icebp
mov
jnp
roll
bound
xchg
icebp
or
out
les
cwtl
push
les
insl
add
xchg
cmp
jl
loop
add
bound
sarl
push
cmp
fstp
fs
sar
bound
das
jle
lods
jg
movsl
loopne
xchg
scas
adc
aad
int3
dec
shlb
cmp
push
js
iret
adc
inc
mov
cmp
add
aas
pop
test
es
jmp
dec
gs
and
sarl
mov
cmp
pop
pusha
pop
xor
pop
aam
mov
pop
lock
sbb
xor
idiv
xor
cld
sbb
outsb
add
xchg
mov
arpl
mov
icebp
fstps
loop
pop
jmp
xor
cmp
fisttpll
insb
xchg
push
arpl
pop
cmp
inc
push
pop
sub
inc
test
lcall
jne
pop
js
popa
push
out
hlt
and
push
mov
pop
popa
jl
loope
popf
addl
add
lds
ja
test
jne
sbb
dec
lods
ja
fstpl
call
cmc
xchg
shlb
jnp
sbb
fst
push
add
lea
sbb
clc
daa
bound
stc
xchg
pusha
xor
shr
test
ret
xor
lods
int
je
or
aam
inc
lahf
jnp
mov
flds
aaa
mov
fmull
jmp
mov
js
imul
mov
pop
fnstcw
pop
insb
push
jle
push
popf
xlat
cmp
insl
mov
or
xchg
jnp
out
sub
leave
lods
js
inc
test
sbb
adc
dec
ret
cmp
cs
xor
aaa
fisubrs
push
daa
adc
out
xlat
jnp
mov
gs
xchg
adc
inc
test
or
pop
adc
xchg
lods
add
iret
mov
int
out
call
xor
pop
and
fs
push
push
mov
jg
xlat
adc
mov
add
scas
push
jmp
jl
jp
jae
adcb
aaa
inc
jne
shll
or
mov
or
mov
or
std
sub
lea
cli
add
and
fwait
aas
lock
cmp
popa
pop
cmpsb
xchg
mov
rolb
mov
mov
scas
je
jge
inc
cmpsl
or
outsl
in
sub
stc
shlb
out
inc
mov
fsubrp
dec
inc
outsl
into
sbb
dec
jge
iret
outsl
jecxz
movsb
int
stc
fisubs
mov
repz
scas
int3
push
ja
jge
sbb
fnstcw
lods
bound
sub
cmp
mov
add
dec
nop
sbb
xor
xchg
adc
inc
leave
jo
test
sbb
aaa
lods
xchg
ret
add
jo
in
sbb
mov
and
or
in
xchg
inc
jmp
jmp
sarl
xor
pop
sub
sbb
xor
leave
inc
fwait
pop
int3
sub
andl
mov
les
jo
or
fldcw
pop
dec
jbe
cmp
cmc
cmp
jp
js
mov
mov
and
sbb
pop
fnsave
leave
cmpsb
popa
mov
dec
lret
jl
mov
xchg
inc
sub
stos
fs
jns
jo
movsb
dec
jno
outsb
orb
rorl
pop
mov
leave
arpl
xor
xlat
aaa
pop
cmpb
inc
sbb
movsl
push
repz
rcr
mov
das
daa
leave
imul
in
push
or
arpl
aad
test
aaa
lret
mov
cltd
jnp
jo
cmp
sarb
push
dec
cmp
push
lds
pushf
and
ja
cmp
dec
cmp
push
scas
push
mov
cltd
add
pop
cmp
adc
pushf
leave
imul
in
rolb
adc
add
jle
je
lahf
imulb
adc
jmp
xor
cwtl
xchg
shlb
push
pop
push
nop
mov
pop
bound
insl
inc
or
frstor
dec
js
into
cltd
xchg
and
xchg
jo
and
iret
push
cli
and
push
loope
adc
lret
mov
pop
es
cltd
add
push
xlat
add
mov
movsb
mov
sbb
push
mov
insl
jmp
adc
insb
fdivrs
ffree
xchg
int3
aad
shr
xor
or
leave
xchg
mov
dec
inc
jl
or
das
mov
inc
pop
lods
mov
jle
lcall
xchg
sub
pusha
pushf
ja
sbb
inc
nop
dec
mov
repz
xchg
cltd
cmp
repz
stc
lock
jg
push
nop
sar
add
push
sub
scas
in
ret
js
imul
test
daa
mov
sub
and
test
xchg
mov
pop
int
lods
scas
shr
jg
dec
adc
jne
test
push
cmp
fstps
cwtl
sbb
sbb
les
ja
cmp
and
mov
add
pop
rcrl
dec
pop
into
inc
ficoml
repnz
call
ret
js
pop
outsl
push
aad
dec
push
les
mov
mov
ror
out
mov
lds
adc
push
out
stos
add
sbb
shrb
icebp
jns
shr
and
jg
xchg
iret
addr16
daa
xchg
fwait
in
xchg
or
inc
push
sub
std
push
cs
pop
icebp
test
sub
fisttps
jno
decb
dec
mov
cmpsl
dec
cmp
adc
mov
jo
adc
or
pop
test
or
ret
mov
pop
mov
iret
cld
arpl
outsl
sti
stos
push
add
jno
call
mov
repnz
jmp
aam
out
add
xor
rcrb
repnz
and
test
les
loop
mov
sbb
xor
mov
sarb
iret
push
repz
adc
jo
push
cmp
or
push
sbb
int
popa
or
dec
loope
enter
test
fwait
movsb
inc
mov
insl
mov
push
bnd
out
lcall
test
cltd
shll
and
outsb
inc
push
test
adc
xchg
mov
sti
loopne
and
sbb
in
scas
jl
mov
mov
jns
stc
adc
cmp
mov
mov
int
mov
dec
test
cs
je
mov
leave
ret
jo
daa
sbb
pop
pop
pop
mov
and
shl
jmp
shrb
xchg
xor
or
lret
mov
dec
sbb
fimuls
repnz
popf
popa
mov
sub
lock
push
testb
pop
pop
push
or
std
xor
scas
sub
fwait
push
mov
scas
lret
push
xchg
fmuls
push
test
xorb
add
xchg
pop
lahf
ds
dec
or
sti
inc
nop
cmp
mov
jns
out
or
bound
jnp
jnp
inc
jno
pop
repz
push
add
and
mulb
add
lahf
nop
xchg
xor
pop
into
sbb
dec
jp
mov
mov
repz
nop
pusha
push
push
add
out
jle
fnsave
pop
dec
incb
xor
add
repnz
stc
jl
hlt
dec
jg
loop
jne
sub
int3
jne
orb
jo
lret
jbe
je
mov
inc
push
mov
cmc
ljmp
dec
cltd
cmpl
das
jecxz
xor
dec
cmp
pusha
in
and
sbb
mov
xchg
pop
shll
mov
out
add
adc
push
popa
xor
lea
pushf
ja
mov
xor
ret
int
cmp
arpl
in
push
movsl
test
aam
sbb
push
adc
lahf
mov
xchg
stc
sub
or
xchg
jmp
mov
shrb
mov
add
and
push
scas
ret
imul
test
jle
imul
fwait
mov
mov
mov
pop
aaa
and
lret
insb
sub
sysret
mov
in
in
jg
sbb
jo
out
inc
out
adc
xorl
ss
insb
adc
cmc
xchg
cmp
xor
bound
mov
int3
pop
rol
rcrb
addr16
movsb
out
sbb
arpl
and
jge
inc
xor
pop
cmpsl
stos
icebp
xchg
scas
insb
outsb
xchg
repnz
mov
data16
jo
sub
mov
pop
das
lods
mov
and
dec
test
fcmovnu
mov
stos
aad
ss
in
insl
pop
push
movsl
or
sbb
xchg
mov
in
push
cmp
pop
dec
mov
loopne
mov
xchg
cmp
lea
xor
shl
fistl
xor
clc
lcall
cmp
push
outsl
into
mov
cmc
loopne
push
loop
pop
mov
and
or
aas
xchg
das
mov
pop
cld
sub
ror
and
sbb
xchg
cmp
dec
dec
lret
xor
sub
cmp
fwait
sub
cs
les
addr16
repz
repnz
in
mov
push
fstps
mov
jg
das
bound
mov
adc
xchg
push
jns
mov
mov
scas
flds
insb
push
or
mull
jb
push
andl
xchg
jg
ret
mov
xor
xchg
pop
sti
rcr
in
jno
xor
push
icebp
fnsave
test
fidivs
xor
fadd
add
fisubrl
lods
cmpsl
cmpsb
ljmp
cmp
in
jae
iret
cmpsb
sbb
sbb
jbe
jne
push
sub
loop
fsubs
jmp
lock
pmaxsw
lods
mov
subl
add
mov
fwait
or
leave
inc
int3
push
loopne
add
call
jecxz
pop
dec
sub
out
fisubl
xor
popa
loopne
pop
ret
rcll
orl
iret
loopne
test
fs
pop
repz
fisttpll
jp
push
push
sub
iret
in
pop
push
mov
sub
mov
fisttpl
inc
test
xchg
pop
sbbl
push
addr16
cmovle
aam
arpl
les
dec
cld
push
out
pop
int
cmp
jg
and
mov
jmp
inc
mov
neg
sbb
movsl
mov
scas
or
or
jnp
dec
pusha
sbb
inc
in
fs
xlat
andl
outsl
add
and
xchg
mov
rcrb
xchg
jmp
push
inc
aaa
xchg
inc
xchg
jle
push
dec
loope
decl
das
cli
add
stc
sbb
or
cmp
pusha
mov
push
push
mov
popf
lds
sbb
push
pop
mov
mov
fists
jecxz
add
pop
mov
add
adc
rorb
pop
sbb
xor
xchg
dec
mov
fadds
sahf
push
scas
jbe
inc
bound
cmp
xlat
lods
mov
adc
cli
js
xor
inc
js
out
lret
fldcw
push
daa
out
push
or
sub
addr16
fnsave
adc
sub
ret
cmp
xlat
inc
fiadds
test
sti
cmp
mov
shl
loopne
in
inc
pop
push
lcall
mov
lock
xor
fisubrs
leave
mov
sub
sahf
lret
sub
jne
mov
jge
mov
mov
movsb
xor
sbb
inc
outsl
repnz
dec
nop
jmp
xor
push
test
xchg
mov
xchg
inc
jle
push
push
andb
or
out
mov
mov
cmpsb
hlt
iret
adc
test
and
mov
daa
outsb
inc
pop
fisubrs
out
add
xor
sub
enter
test
sbb
jo
dec
xchg
scas
je
push
aaa
xor
adc
dec
fistpll
sub
ds
push
inc
or
xchg
push
adc
xor
mov
jne
add
and
int
and
out
cmpsb
fdivrp
pop
pop
push
adc
cmp
dec
icebp
adc
jg
adc
frstor
jbe
push
xchg
jge
inc
notl
call
lret
pop
in
add
inc
sub
and
jmp
cmp
sbb
dec
cld
hlt
mov
xor
adc
inc
mov
loope
push
mov
mov
xor
test
aam
shll
std
sti
adc
out
imulb
jns
pusha
in
sbb
mov
pop
xchg
ja
shll
xchg
enter
dec
sub
sub
rcll
popf
sbb
dec
test
fdivl
icebp
loope
mov
in
push
fidivs
dec
sbb
xchg
xchg
mov
cmp
xchg
inc
iret
mov
pop
xorl
hlt
add
add
mov
jnp
xor
hlt
push
xchg
push
xchg
or
idiv
pop
push
jnp
rcl
fdiv
aas
adc
inc
sbb
hlt
imull
and
bound
test
jae
jmp
adc
fisttpll
sbb
or
into
fsubl
loop
in
std
out
mov
mov
mov
xchg
push
or
sbb
ja
mov
lods
movsb
dec
push
sub
push
push
xor
imul
xchg
jnp
jecxz
add
cwtl
inc
inc
xor
mov
negb
pop
ror
jns
rcrl
mov
call
xor
push
sbb
jns
fbstp
inc
push
cmpl
fwait
test
icebp
and
jp
jne
mov
inc
sbb
enter
mov
insb
addr16
ds
repnz
adc
push
insb
in
jecxz
cmp
test
or
mov
fpatan
faddl
jge
jmp
sar
js
cmp
shl
push
xor
fsubl
lret
in
repz
imul
repz
rcrb
pop
sbb
xorl
ljmp
jbe
pop
mov
incb
sub
push
das
xchg
fsubrs
out
cltd
push
mov
pop
ja
or
ret
mov
mov
inc
cmpsl
xor
pusha
inc
add
out
scas
fcomps
add
xor
out
test
pop
sub
dec
cli
jge
jne
inc
mov
jnp
mov
mov
in
jae
mov
pop
add
jg
js
lret
pop
jmp
adc
mov
add
movsl
shlb
mov
repz
or
arpl
and
cmp
pop
xchg
jbe
ljmp
cmp
xchg
adc
dec
mov
jbe
jnp
out
jge
jns
cmpsl
or
dec
fiaddl
negb
xchg
cmp
and
inc
sub
sub
mov
cmpsb
int3
lods
sub
lock
mov
cmp
mov
mov
scas
adc
xor
push
insb
and
lahf
icebp
cmp
mov
mov
jp
hlt
pop
stc
cmpsb
mov
sub
aad
scas
stc
test
shrb
adc
divl
lock
imul
inc
hlt
frstor
subb
lret
push
dec
clc
and
mov
movsl
movsl
movsb
push
mov
lea
jns
inc
mov
xchg
ficoms
in
mov
push
push
fdivs
mov
sub
fdiv
or
out
push
jns
gs
repnz
sub
in
enter
push
ret
xchg
sbb
mov
jmp
adc
adc
fwait
xor
push
pop
jecxz
jns
rcl
adc
lea
push
sahf
sahf
pop
cwtl
mov
mov
mov
cmp
push
stc
pop
cmc
mov
insl
jno
int3
clc
mov
cld
mov
inc
and
push
jno
js
dec
int
movsb
xorb
sbb
out
arpl
ljmp
ds
jecxz
mov
in
mov
xchg
push
push
and
mov
movsb
daa
cs
lret
popa
addr16
jle
loope
adc
out
nop
xchg
xor
cmp
mov
and
out
repnz
sub
aad
mov
stos
sub
leave
scas
je
adc
cli
stc
roll
mov
xor
push
xor
sub
xlat
xchg
xchg
push
push
jo
add
sbb
out
sub
xchg
outsl
dec
xlat
jl
pop
mov
cmc
fcoms
fs
adc
push
mov
dec
orl
fs
xchg
test
mov
mov
sahf
pop
popf
pop
sbb
cwtl
mov
inc
ffreep
sbb
push
lock
les
sub
push
jmpw
pop
cmc
in
in
std
sbb
outsb
inc
mov
test
dec
sahf
test
jecxz
lahf
cmp
mov
inc
xchg
ficoms
adc
mov
xchg
pusha
or
popf
or
cli
stos
rcll
adc
das
cmpb
aam
jge
dec
cwtl
jp
and
or
jnp
les
dec
test
inc
xchg
pop
jge
pop
cmp
jae
cli
mov
or
dec
sub
pop
inc
into
sub
imul
ds
mov
sbb
test
ret
sbb
or
push
push
and
jb
test
and
dec
push
mov
rolb
inc
sbb
sahf
fistl
jmp
lds
pop
push
dec
hlt
pop
push
ja
frstor
cmp
gs
mov
and
adc
cmp
dec
mov
push
xchg
aad
dec
push
jns
mov
and
aas
imul
in
scas
rcrb
test
inc
lds
and
outsl
xor
test
push
mov
aas
and
mov
cmp
test
and
push
idivl
xor
mov
pop
mov
pop
xor
mov
aad
movsb
icebp
insl
jb
in
cmpsb
aas
cltd
in
lret
mov
lcall
add
mov
test
push
hlt
cwtl
and
test
mov
xchg
fcom
sub
scas
cmc
pop
out
xchg
fbstp
and
cmpsl
add
inc
xor
rcll
lea
mov
call
and
cmp
mov
push
popf
dec
cmc
cltd
std
outsb
push
cmp
add
ret
pop
lods
push
adc
cmp
movsl
mov
fisubs
sub
dec
mov
adc
mov
and
ret
movsb
jl
pop
std
mov
mov
fnstcw
jbe
pop
hlt
push
fsubr
mov
mov
fisubl
testb
add
add
or
xor
jecxz
aaa
insl
dec
loope
movsb
jmp
mov
popa
leave
repnz
push
push
cmp
pushf
mov
int
sbb
and
mov
cmc
pop
inc
fsubrl
add
je
sbb
xor
shlb
mov
xor
jb
sbb
sbb
in
xor
lret
jg
sub
jae
pop
push
add
mov
arpl
lcall
push
inc
das
je
jns
mov
aad
andl
xchg
xchg
lods
outsl
fadds
sbb
not
subl
test
pop
xchg
mov
push
push
pop
ss
scas
les
in
rcrb
ss
sub
jno
add
jns
dec
pusha
pop
jb
adc
push
cmpsl
stos
sti
fdivrs
cmp
ret
xchg
aaa
xor
mov
jnp
xchg
mov
sub
xor
popa
fadds
cltd
jns
mov
mov
aas
xlat
stos
sub
pop
or
xchg
shll
loope
or
aad
or
pusha
fnsave
push
dec
sub
jge
inc
js
imul
out
xchg
mov
adc
jmp
shl
outsb
ljmp
inc
dec
test
lret
adc
call
fcmovnu
push
in
inc
loopne
je
int3
push
and
rcrl
dec
roll
push
pop
jnp
lea
cli
sahf
aas
xor
push
mov
out
bnd
push
into
jle
lds
push
lds
sub
test
sub
ret
data16
scas
add
dec
mov
aaa
movsl
xor
sti
mov
sti
fldt
cmpsb
push
pop
jnp
xchg
data16
xchg
divb
sbb
imul
outsb
and
lret
jle
jne
sbb
sbb
and
js
cmc
das
add
rorb
out
dec
adc
es
mov
mov
jmp
sub
adc
les
repz
dec
jmp
sbbb
mov
stc
or
xor
xchg
rcll
fnstenv
mov
xor
lods
push
repz
jo
mov
pusha
xchg
lock
shll
int3
cmc
mov
dec
test
movsb
outsl
test
dec
jne
nop
aas
and
cmpsl
ds
andb
mov
out
loop
aad
les
outsl
movsb
or
hlt
cmp
xor
jmp
addr16
dec
fldt
adc
and
push
jns
xchg
dec
add
notl
out
out
dec
ret
jo
sub
xchg
jno
cmc
push
lret
std
rcl
sbb
push
cmpsb
lea
xchg
push
cli
push
push
sub
shlb
push
mov
sahf
sahf
jmp
lcall
mov
pop
aad
ret
inc
dec
ss
mov
cmp
aaa
loopne
insl
inc
xchg
inc
cwtl
push
pop
inc
lods
sarl
dec
subb
cltd
mov
mov
jle
test
push
inc
jne
in
mov
out
inc
in
cld
das
shlb
stos
inc
or
pop
lds
sbbl
and
insb
mov
icebp
cwtl
popa
pusha
cli
cmc
cmp
xchg
mov
cld
js
mov
jb
mov
jmp
sub
sbb
popa
repnz
loopne
dec
int
inc
add
lahf
or
cwtl
lret
push
mov
out
inc
faddl
xlat
sub
xor
flds
pop
aad
sbb
in
jp
push
pop
fistl
jns
xchg
scas
in
stos
leave
ds
cld
or
out
call
mov
add
push
lret
push
test
pushf
fldcw
push
xor
pop
mov
jne
andb
jl
xchg
out
dec
jno
inc
aas
adc
inc
in
push
add
push
mov
repz
fbld
mov
jl
cmp
sbb
aaa
call
push
movsl
fcoms
add
stc
sbb
cmovle
rcrb
into
fs
mov
mov
adc
sub
jg
xor
das
xor
cmp
in
fdivrl
mov
das
inc
sbb
es
or
or
jl
aaa
adc
int
into
cmpsl
or
dec
dec
xor
mov
push
bnd
mov
fwait
inc
cmpsl
push
stos
push
pop
xor
push
inc
subl
sahf
in
inc
shlb
xchg
out
in
xchg
outsb
js
dec
test
ja
pushf
daa
inc
out
mov
iret
or
inc
mov
lds
movsl
jns
outsl
int
jo
push
lcall
adc
dec
dec
or
jecxz
leave
push
aam
pop
gs
ja
xor
je
mov
or
push
inc
clc
xchg
xlat
je
rcl
sbb
xor
and
cmc
xlat
mov
ss
fistps
pmulhw
xlat
cltd
cmpsl
ds
cmpsb
add
jae
mov
and
dec
mov
pop
and
fidivs
pop
inc
cs
xor
imul
cmp
rol
aas
out
ret
aad
fildll
inc
push
sub
nop
adc
inc
add
xor
lods
loopne
stc
das
outsl
push
sbb
inc
scas
xchg
aam
scas
add
gs
adc
jmp
push
or
jno
int3
pop
test
xor
xor
loop
xchg
jns
lds
mov
divl
cmp
mov
daa
sarl
pop
cmpsl
inc
jne
jmp
add
cld
paddusw
inc
popf
aas
stos
repnz
cwtl
cmpsl
ss
divb
outsl
nop
pop
adc
ficompl
das
aas
jo
jge
out
pop
cmpsl
mov
out
arpl
stos
std
fwait
mov
fsubr
inc
into
ret
push
add
sub
sbb
mov
out
mov
popf
sub
push
dec
insb
and
cmp
rol
ss
ja
test
ljmp
enter
in
adc
cmp
lods
pop
adc
xchg
in
loope
sbb
jne
push
stos
pop
push
ret
mov
dec
mov
dec
add
mov
rclb
sbb
sbb
or
cvtps2pi
add
insl
fimuls
adc
mov
sbb
movsl
mov
notl
dec
adcb
fdivl
or
pop
add
lahf
add
adc
rorb
mov
in
lods
movsb
or
or
inc
jno
sbb
mov
xchg
pop
xchg
shrl
jns
sub
ret
cmp
jge
add
lea
mov
ljmp
iret
mov
mov
xor
testl
lds
rorl
or
push
lock
sub
lcall
testl
sub
scas
jno
cmp
pop
fsts
fidivrs
aad
out
ds
xor
mov
or
jp
sbb
push
ret
adc
cmp
jl
add
js
je
xchg
mov
mul
pop
idivl
xor
out
mov
ret
repz
and
mov
cmpsb
lods
lods
sub
pop
andl
rcrb
sbb
inc
mov
call
ja
std
lret
repnz
jmp
imul
push
je
jns
mov
int3
or
mov
inc
mov
sbb
adc
subl
imul
sahf
adc
xchg
xor
fdivs
insb
popa
mov
es
stos
jge
pop
dec
or
imul
pop
push
lock
movsb
cs
in
and
push
dec
je
das
ja
int
add
rcr
aaa
pop
adc
nop
loopne
imul
imul
push
js
and
movsl
or
test
addl
or
sbb
mov
test
push
aas
in
mov
lret
and
loope
add
bound
mov
add
jmp
xchg
js
jle
push
push
in
pop
jo
cmp
aas
mov
in
icebp
insb
mov
movsb
outsb
jp
add
push
add
aam
pusha
lods
sub
jge
and
int
push
cltd
xlat
and
jns
sub
ss
xchg
jmp
test
jbe
jno
fidivl
lock
jno
lods
mov
mov
push
lods
pop
idivl
in
and
in
cmp
mov
mov
jns
test
call
cld
dec
pop
jg
aas
sarl
cmp
insl
idivb
inc
pop
shrd
and
xor
pushf
insb
gs
mov
adc
inc
mov
adcb
lods
lods
ja
fldcw
aas
sarb
mov
jo
or
popf
mov
mov
adcb
dec
scas
shrl
mov
ja
shr
pop
or
in
ret
jo
inc
dec
add
sub
dec
push
sub
sub
adc
loopne
mov
popa
dec
mov
addb
stc
pop
cmpsb
fstpt
lods
dec
mov
jmp
mov
clc
sub
mov
and
sbbb
lods
mov
shll
and
jne
and
daa
push
fstpl
lcall
fs
xchg
out
mov
repz
ja
adc
sahf
ret
pop
jne
push
mov
std
lock
icebp
cltd
jnp
push
in
jecxz
aam
leave
std
mov
popf
mov
pop
lods
cwtl
popl
insl
arpl
push
outsl
loopne
das
aam
rcrb
sbb
jae
or
xor
inc
xor
lods
ret
jg
movsb
cmp
lcall
xlat
pop
out
nop
fsubs
sbb
rorb
fwait
xor
out
and
mov
mov
push
loope
mov
jle
adc
xchg
sub
lret
mov
mov
add
int
push
or
mov
dec
pop
pop
scas
out
es
icebp
lahf
push
adc
cmpsb
mov
mov
sub
xor
lea
int3
mov
stos
dec
inc
add
and
jg
test
cmp
push
adc
dec
in
pushl
int3
test
pop
mov
sub
cmpsb
cmp
int3
mov
iret
jg
push
xchg
ficompl
int3
popa
xchg
xchg
pop
inc
cmpsl
sbb
in
cmpsl
mov
pop
and
push
adcl
mov
mov
js
xchg
xchg
jmp
add
and
inc
rol
rorl
mov
sub
sahf
sub
mov
sbb
data16
and
mov
jo
mov
test
mov
fxch
mov
push
xchg
sub
mov
popf
popa
and
lahf
sahf
and
rolb
push
cs
mov
jl
push
gs
scas
scas
or
ret
call
or
imul
cmpsb
cwtl
lret
lea
fwait
leave
mov
pusha
dec
inc
popf
les
and
rorb
push
shll
hlt
add
shr
dec
inc
mov
cmpsb
adc
sahf
or
cmc
dec
dec
iret
xorb
cwtl
shrl
add
fistpll
lret
lds
cwtl
pop
push
mov
fwait
cmp
dec
mov
pop
rclb
dec
fsubl
lock
jae
aaa
and
daa
pop
sub
jns
cmpb
icebp
ret
aaa
lods
das
xor
adc
xchg
push
push
lcall
push
lret
cmp
mov
push
mov
push
fldt
shlb
jae
add
test
cwtl
mov
adc
movsb
dec
sub
daa
hlt
jo
and
fs
shlb
inc
lret
les
xor
jecxz
stc
pmulhw
std
shr
outsb
add
cli
int3
movsb
add
nop
dec
out
push
cmp
sbb
inc
cs
adc
cmc
insb
pop
gs
xor
cmp
les
or
jge
inc
mov
jp
jmp
mov
sub
call
leave
rclb
insl
test
mov
addr16
pop
in
jne
push
loope
mov
or
es
pop
aam
push
test
pop
jg
les
push
loop
lods
cmp
loopne
in
sub
test
and
sbb
jne
shlb
repnz
adc
dec
rorb
arpl
pop
cmp
aaa
fisttpll
sub
cld
iret
sbb
sub
and
leave
fdivrs
or
loop
stos
jmp
pop
testb
aas
pop
xchg
mov
loop
or
mov
and
jns
and
bound
or
lret
ds
test
in
ds
nop
jp
xchg
ret
mov
test
sub
fbld
in
sub
pop
mov
aad
fistpl
sub
jg
xor
sub
mov
xor
pop
outsb
adc
test
jne
arpl
hlt
fwait
enter
cmp
push
bound
or
aad
pop
jp
negb
or
rcrb
mov
scas
pop
or
mov
ss
movsb
outsb
repnz
sub
mov
push
les
popa
aas
inc
cltd
les
test
dec
dec
inc
sub
cmp
aam
and
enter
imul
push
lds
cmp
in
pop
sahf
pop
sbb
cld
jb
je
and
stos
mov
xor
dec
or
pop
adc
mov
and
xchg
loope
mov
in
clc
aas
dec
push
sbb
mov
loope
hlt
xlat
jge
pop
or
in
inc
fcomip
js
dec
fnsave
pop
stos
cmp
adc
rorb
loop
lahf
pop
bound
add
and
ret
sub
xor
or
pushf
jae
sbb
xor
add
and
idivb
cs
jmp
push
jns
pop
dec
fadds
pop
in
mulb
lea
cmpsb
cmp
sarb
dec
popa
fiadds
adc
incl
sbb
ja
test
dec
jno
repnz
call
movsb
pop
pop
out
inc
aaa
sub
cltd
ds
fs
push
xor
cld
lea
jno
pop
pop
lds
mov
jp
popf
out
mov
in
es
xchg
cli
iret
cs
mov
bnd
loope
and
fwait
js
xchg
jns
icebp
cmp
pop
stos
mov
pusha
in
mov
and
mov
inc
das
jns
outsb
mov
loop
mov
test
or
jmp
lcall
xor
fisubs
std
push
jbe
mov
mov
push
sub
shll
cmc
scas
gs
push
mull
inc
xor
mov
or
fwait
mov
fnstenv
cmpsl
add
scas
dec
push
mov
inc
pop
pop
mov
inc
addr16
inc
fstpl
pop
mov
cwtl
xor
pop
sbb
push
add
in
cwtl
fdivrs
movsb
push
popf
cmpsl
lods
test
xchg
jp
cmp
sub
daa
sbb
scas
mov
std
addb
in
mov
mov
pop
stos
adc
cmp
filds
test
xor
insb
sahf
xor
in
scas
adc
aad
and
jp
mov
stos
mov
je
adc
cmp
mov
aaa
mov
cli
jecxz
aas
icebp
dec
in
insb
add
add
cmp
pop
adc
call
jge
mov
jb
fsts
dec
ret
jle
aad
in
popf
movsb
bound
lfence
inc
rol
sbb
ret
and
xchg
cmpl
jae
in
test
jae
jl
jge
or
cs
cmp
daa
push
rcrl
das
jo
or
xor
mov
nop
mov
add
cmp
add
jno
pop
popa
mov
jl
or
addr16
xchg
scas
xchg
xor
inc
roll
lret
hlt
xchg
xchg
inc
dec
dec
outsl
lods
sti
andl
mov
push
adc
mov
sub
call
mov
and
dec
mov
cmc
cli
and
adc
movsb
fistpll
lcall
shl
in
or
sbb
fdivl
push
or
jl
jo
cwtl
xor
and
lock
lods
push
jne
or
xchg
repz
push
pop
stc
add
ret
mov
jp
push
sbb
adcb
fistl
mov
lods
shlb
xchg
int
push
dec
in
push
aaa
je
sbb
and
mov
dec
movsb
int
ficoml
stos
jge
andb
mov
pop
les
push
and
rcrb
and
jecxz
loope
jg
mov
xlat
sub
pop
pop
gs
sti
pop
lahf
and
lds
xchg
pop
imul
addr16
and
fs
mov
imul
inc
test
xor
xchg
fidivs
out
fincstp
popfw
into
cwtl
xlat
int
call
mov
jmp
lcall
pop
mov
push
push
cli
bound
push
adc
inc
loop
out
out
in
cld
xor
stos
cmc
cmp
movsl
aaa
out
inc
stc
movsl
into
call
cmp
pushf
and
mov
adc
fisubs
push
jmp
dec
jmp
mov
cwtl
mov
push
divl
ds
mov
out
pop
fidivl
cli
xor
or
mov
dec
mov
xor
out
jl
cmp
nop
add
out
adc
ret
movsb
jo
pop
push
inc
mov
mov
lods
lock
stos
outsb
lcall
in
lret
rcl
aas
ret
xchg
push
or
rcll
stos
push
jo
loop
cmpsb
mov
add
ja
arpl
sar
iret
rclb
mov
jecxz
fs
aaa
adc
mov
add
mov
iret
decb
and
rorl
nop
or
ss
pop
sbb
mov
jmp
cld
mov
arpl
std
pusha
xchg
test
adc
fdivrl
xchg
pop
jp
es
pop
sti
stos
pop
cld
loopne
mov
ds
std
push
adcb
scas
aam
sti
mov
mov
sahf
push
jmp
push
subb
hlt
inc
gs
push
mov
loopne
ret
ret
rclb
xchg
mov
scas
sbb
or
adc
push
je
xchg
jo
sub
or
insl
or
xlat
adc
dec
scas
jae
shlb
push
mov
sahf
jns,pn
mov
mov
lock
sub
inc
and
pop
daa
nop
sahf
lahf
mov
xor
xor
mov
mov
les
arpl
ret
aaa
inc
or
es
cmp
dec
cmpsb
out
pop
mov
fsub
ret
ret
sub
fldl
xchg
lock
sbb
or
shlb
pop
push
and
jl
adc
push
stc
fwait
or
push
mov
lcall
lea
and
jae
xchg
outsb
dec
popf
repnz
pop
push
xorl
cmpsb
xchg
sub
fiadds
into
cmp
test
adc
icebp
xchg
nop
arpl
fwait
stc
xor
mov
adc
subb
or
ret
arpl
add
jb
jl
and
pushf
outsb
sub
sti
dec
stos
cs
mov
aaa
shl
push
roll
sbb
std
sub
lcall
pop
xchg
add
xor
insl
and
stos
sarl
mov
adc
and
add
xchg
push
jecxz
xor
adc
mov
or
jle
outsl
mov
rorb
add
jle
sub
ror
mov
pop
mov
xchg
adc
jno
stos
cwtl
push
adc
adc
rorl
call
pop
call
pop
into
sub
mov
sbbb
mov
out
cmpb
cmp
insl
les
pop
mov
jp
jmp
dec
sbb
loop
subb
insb
call
fs
stc
jo
popf
adc
test
das
xchg
push
sbbb
ljmp
jo
ds
xchg
inc
ret
sbb
sub
sub
adc
leave
adc
lret
and
adc
aas
fisubrl
addl
loopne
mov
jbe
lods
dec
dec
shlb
pop
mov
lods
nop
loopne
sahf
mov
pop
mov
push
jg
or
cmpsl
std
or
dec
aam
je
mov
and
jbe
sahf
inc
icebp
adc
cmp
xchg
or
xor
in
xor
dec
enter
mov
stc
pop
aam
ja
scas
sub
aaa
lds
out
xchg
test
push
jl
fwait
mov
lea
shrb
mov
adc
ja
cmp
push
xchg
or
mov
jmp
inc
xchg
mov
icebp
out
and
aad
mov
out
adc
mov
ret
mov
iret
adc
push
jo
lret
pop
mov
xor
push
push
push
cmp
push
xchg
mov
outsb
loope
subl
outsb
inc
mov
xchg
push
jo
out
mov
cld
fidivrs
fdivl
mov
mov
stc
loop
jns
mov
xchg
cmpsb
or
mov
idiv
adc
xchg
fs
mov
push
stos
dec
test
es
or
imul
nop
cmp
outsl
pop
push
push
push
dec
jne
mov
pushf
sbbl
fld
aaa
inc
or
push
dec
mov
imul
lahf
cmpsb
ljmp
jecxz
out
adc
mov
inc
jmp
and
or
xor
jge
mull
or
fcmove
mov
repnz
je
dec
shlb
xor
mov
cs
ret
lods
fdivs
shrb
lea
xchg
push
xchg
in
loop
ja
inc
jbe
jecxz
adc
mov
mov
scas
jge
sub
imul
aaa
jg
ret
xor
mov
bound
je
jns
sbb
scas
lcall
or
cltd
test
call
mov
arpl
push
daa
les
add
das
mov
out
dec
int
push
aaa
test
fstpl
add
mov
xchg
rclb
fisubrl
add
insl
ds
or
scas
ja
xlat
jne
nop
mov
jae
pop
or
push
call
ss
in
test
mov
pop
push
aaa
outsl
push
in
test
mov
and
mov
mov
enter
sbb
add
mov
out
pop
mov
cmp
push
faddp
jecxz
lret
sahf
mov
ljmp
push
xor
out
scas
fprem
inc
lock
in
aaa
addb
rep
cmp
inc
outsb
out
scas
mov
sub
inc
xchg
dec
jns
cs
insl
pop
lcall
call
outsl
ret
loopne
inc
cmpsl
inc
jns
sub
or
mov
jmp
xchg
inc
mov
cs
movsl
and
xor
jmp
stc
fwait
push
repnz
das
jge
jae
xchg
sub
xchg
jb
mov
mov
jge
rcr
xor
xor
push
stc
dec
aas
mov
mov
xor
lcall
and
imul
sbb
push
jl
lock
jl
xor
pop
dec
imul
in
sbb
adc
push
and
iret
jecxz
pop
stos
aaa
push
fdivrl
cmc
out
negl
rcrb
xchg
out
aas
inc
or
das
clc
mov
insb
add
mov
xchg
js
inc
jge
xor
aad
adc
inc
sbb
popf
shlb
cli
sub
pusha
xchg
int3
test
pop
push
mov
mov
sub
inc
sub
popf
jae
xchg
mov
push
les
xor
inc
lcall
mov
lds
pop
push
popa
loopne
movsb
inc
or
cwtl
ds
mov
inc
push
or
push
out
dec
push
mov
push
mov
add
lods
and
fptan
lods
xchg
push
jle
repz
jno
adc
ja
cmc
cmp
cltd
fsubs
lods
lcall
test
call
dec
mov
jge
fcompp
sub
aad
hlt
dec
add
enter
ds
icebp
or
mov
sbb
add
in
xchg
sub
jmp
adc
test
leave
mov
fsts
aam
lds
in
decb
mov
xchg
sbb
out
mov
jmp
push
leave
add
outsb
lret
out
leave
add
mov
int3
faddl
test
cmp
nop
xor
test
xor
icebp
dec
or
sub
nop
dec
cmc
cmp
mov
mov
xor
jnp
push
dec
and
xchg
dec
adc
ret
mov
adc
xor
mov
xchg
dec
lods
sbb
out
imul
xor
sarl
out
inc
add
inc
and
stos
rcrb
xchg
int3
cwtl
sar
loope
jne
js
pop
sub
fcomps
xchg
mov
push
pusha
jl
mov
in
lahf
pop
xlat
std
call
push
push
fucom
inc
pop
jb
push
xor
lahf
mov
cs
mov
jo
add
inc
fcmovbe
cmp
cmpsl
leave
shlb
lret
mov
es
stos
mov
arpl
aas
mov
jl
pop
sbb
inc
ja
fmul
les
or
cmp
add
aad
add
inc
repz
data16
ljmp
inc
sbb
int
pop
cs
fs
aam
imul
int
or
cmp
jae
xchg
push
repz
aad
aam
sub
call
xchg
cwtl
and
xor
add
test
sub
in
int3
jecxz
push
je
ja
idiv
addr16
sub
mov
mov
js
xor
popf
fcmovb
outsb
fnstenv
orb
shll
cmpl
stos
push
inc
ss
daa
pop
sti
pop
loop
cmpb
sub
dec
mov
lcall
clc
stc
in
mov
sub
xor
pop
sbb
lock
mov
jg
out
inc
das
inc
push
clc
aas
sbb
xchg
imul
addr16
imul
sbb
int3
jns
xchg
cmp
push
xchg
cmp
mov
mov
jp
sbbb
xor
and
loope
mov
ret
dec
cmpsl
jecxz
dec
inc
jl
addr16
repnz
mov
push
test
nop
xchg
inc
out
std
inc
xor
inc
mov
xchg
hlt
rorl
add
inc
daa
loopne
int
call
mov
loope
add
imul
pop
and
lods
xchg
ds
add
outsb
and
mov
mov
in
loope
les
fists
and
fistl
dec
leave
in
movsb
push
out
aad
sbb
lret
adc
jae
inc
inc
fcoml
test
lods
lock
inc
out
pop
inc
and
jge
jbe
inc
in
and
gs
adc
mov
mov
add
push
es
pop
pop
imul
loopne
pop
xor
and
es
leave
cmp
sbb
out
xor
mov
dec
jmp
adc
xchg
cmpsb
ret
dec
dec
and
mov
or
sbb
sarl
jb
add
call
jo
imul
dec
mov
mov
push
pop
inc
lahf
int
mov
ds
dec
add
insl
inc
hlt
je
xor
sbbb
das
fwait
and
je
sti
xchg
sbb
addr16
push
ret
jge
imul
mov
iret
test
inc
mov
lahf
mov
jne
dec
push
jae
ljmp
nop
sar
in
in
inc
mov
addr16
and
lret
vmovups
aaa
out
pop
add
bound
jae
or
mov
xorl
adc
xchg
stos
into
in
xchg
addl
insl
test
aaa
scas
lea
xchg
mov
push
ljmp
push
aas
mov
pop
or
subb
xchg
or
inc
pop
leave
hlt
xchg
and
pop
push
mov
call
pop
bound
and
roll
fwait
push
repz
out
mov
bound
sub
sub
pop
xor
daa
shlb
sub
mov
aad
push
mov
jo
push
adc
stos
lahf
sti
inc
jge
test
mov
ss
push
inc
mov
cmp
popa
setle
push
jo
or
or
fwait
mov
lods
icebp
adc
push
add
icebp
mov
bound
nop
hlt
popf
test
sti
pop
test
addr16
push
in
sti
jmp
rclb
jne
lods
nop
ret
loope
jbe
xor
jbe
mov
mov
or
jb
mov
mov
mov
cld
mov
test
jo
cmp
or
lahf
imul
cmc
or
adcl
pop
les
scas
scas
fiadds
iret
adc
lahf
popa
dec
inc
xchg
test
xor
cmp
pop
test
in
sbb
xlat
mov
xor
pop
pop
arpl
mov
fisttps
dec
loopne
rcrb
or
inc
cld
mov
insb
add
scas
jmp
pop
lret
sub
gs
inc
xchg
lahf
xchg
movsb
data16
lret
icebp
test
mov
or
push
adc
fwait
lods
xorl
add
lds
jb
movsb
scas
mov
lea
dec
addr16
mov
dec
jmp
movsb
jne
out
cmpsl
int
lds
xchg
jl
leave
sub
fadd
test
iret
outsl
shlb
icebp
sahf
push
mov
pop
test
cmc
aam
inc
sbb
jo
aaa
inc
or
push
sbb
fld
xchg
scas
add
pop
mov
pushf
test
outsb
lret
xor
and
movsb
xor
bound
jne
insl
mov
lods
dec
nop
lcall
cli
gs
dec
jl
je
xchg
popa
ljmp
xor
in
sbb
mov
lock
dec
into
js
push
in
xor
and
lods
mov
push
xchg
sub
or
dec
inc
jp
xchg
incb
into
xchg
sbb
fstl
insb
incb
mov
mov
xlat
into
mov
fsubrp
inc
dec
int3
mov
mov
addr16
loop
pusha
out
rolb
pop
pusha
xor
mov
mov
ds
sbb
das
jae
mov
sbb
dec
jbe
mov
ljmp
rcrl
dec
cmp
mov
sub
gs
orb
mov
insb
push
std
jns
dec
mov
mov
cmc
jg
or
push
mov
in
sti
ret
jbe
push
stos
bound
pop
adc
push
sti
repz
jmp
mov
insb
pop
add
jle
dec
scas
jnp
mov
mov
adc
lds
pop
jmp
dec
ja
stc
mov
mov
or
pop
inc
xor
push
xor
inc
mov
int
clc
popf
and
test
and
jae
sub
pop
sub
mov
adc
cmp
push
mov
adc
and
fdivrl
call
fdivr
cltd
ficomps
and
jne
xor
stos
fisttpll
mov
pop
mov
mov
ds
test
pushf
adc
and
fucomip
addl
jnp
out
sub
and
sbb
in
pop
dec
mov
rolb
push
xchg
xor
cmpsl
std
inc
lea
push
xorl
or
jle
xor
fcompl
fstpt
orb
add
mov
mov
push
inc
add
inc
jmp
add
add
daa
or
jle
jne
or
ja
lock
and
jle
loopne
gs
aas
mov
aas
shrl
hlt
jae
inc
rorl
pop
rorb
sub
into
xchg
popl
rcll
xchg
inc
cli
daa
repz
nop
mov
adc
subl
cmp
mov
push
inc
inc
xchg
or
or
mov
jmp
inc
sbb
test
pushf
push
mov
or
enter
arpl
ret
out
out
cmpsl
mov
mov
aas
push
inc
mov
adc
cld
ror
inc
sub
ljmp
pop
ds
and
and
out
xchg
xor
movsb
inc
jbe
sbb
test
xchg
or
mov
sbb
sarb
and
jne
mov
add
push
lods
aas
shll
add
mov
das
push
push
dec
fmull
and
and
mov
out
pop
fbstp
std
mov
aas
adc
jne
test
lods
sub
jns
pop
test
mov
bound
loopne
add
sub
xchg
mov
sahf
testl
sbb
dec
scas
mov
push
push
xchg
scas
sbb
push
mov
jne
xor
push
fsubs
insb
cmp
push
cwtl
xor
idivl
jge
jno
shl
cmp
jb
lret
mov
lods
sahf
aas
or
call
js
add
dec
pop
jno
mov
sbb
stc
nop
inc
ja
out
ret
mov
mov
mov
sbb
repnz
jb
xchg
cmp
aas
dec
mov
sbb
pusha
cld
out
icebp
cmpsb
dec
fidivrl
je
mov
fs
xchg
fwait
push
xlat
rcll
xor
lock
pop
jnp
push
xchg
or
pop
and
or
mov
leave
jecxz
mov
and
das
iret
cmpsl
sub
mov
pop
ret
xchg
out
sahf
in
fcomps
lcall
or
scas
std
jo
aad
or
mov
fucomi
fxch
mov
push
outsl
pop
shlb
cwtl
loope
add
sub
push
mov
rorb
loope
cmc
or
sbb
and
jecxz
jl
xchg
mov
jg
add
dec
add
mov
popa
icebp
jb
in
jg
mov
sub
jge
add
into
xchg
mov
rclb
mov
inc
sbb
cmp
cmp
es
jecxz
popa
rcrl
and
sub
fldcw
ret
push
sbb
cmp
dec
in
ja
push
xor
jae
outsb
inc
insb
fnstcw
insl
xchg
shlb
pop
ret
xor
pushf
add
and
lods
sub
mov
dec
jle
lock
pop
das
mov
mull
cmp
arpl
cmp
sub
jge
dec
inc
mov
lods
ds
or
insb
adc
subl
outsb
jge
cmc
push
xchg
xchg
iret
dec
add
cs
test
and
test
outsl
pop
out
popf
pop
sbb
adc
inc
inc
cltd
scas
lea
out
xor
adc
fldcw
sbb
sbb
cmp
xor
shll
es
jge
push
out
popa
and
cmp
push
outsl
inc
add
orps
aas
ja
bound
inc
out
or
and
imul
pusha
mov
mov
movsb
push
call
or
jnp
sub
inc
mov
xchg
dec
sbb
dec
repz
sub
xor
push
out
stc
adc
mov
jae
cmpsb
or
lods
in
lods
xor
mov
enter
dec
bound
in
add
add
imul
mov
push
mov
fwait
or
ret
jae
inc
mov
jmp
xor
pop
je
test
loopne
popa
das
pop
addl
push
in
dec
pop
cmp
jbe
lcall
sarl
and
movsl
in
pusha
orl
fnsave
adc
mov
popf
adc
int3
pop
imul
and
mov
jne
push
dec
loope
in
dec
popa
push
sti
movsl
test
scas
popf
int
mov
add
inc
jg
add
fcmovnbe
xchg
cmp
inc
dec
cld
mov
outsb
fimuls
push
rcrb
das
aam
in
adc
fwait
jecxz
inc
dec
and
mov
jle
scas
test
add
popa
adc
cmpsb
ret
cmp
fdivl
je
addl
adc
sbb
push
ds
dec
hlt
dec
lcall
imul
mov
xor
repnz
xchg
out
mov
jmp
stc
popa
js
cmc
fidivl
inc
and
bound
mov
adc
insb
aad
lods
mov
jecxz
popa
orl
ss
mov
popa
cs
xor
push
leave
mov
sub
and
inc
fdivrl
test
mov
cmp
cmp
aad
divb
test
testl
xchg
andl
pushf
lods
xchg
mov
neg
push
mov
aad
loope
pushl
adc
mov
ret
adc
mov
aad
arpl
dec
push
inc
js
dec
xor
and
xchg
aaa
scas
pop
adc
adc
jne
sbb
inc
add
push
js
cld
inc
pop
arpl
outsb
daa
inc
fists
aam
loope
add
dec
push
pop
mov
subl
inc
cmp
insl
cmp
mov
sahf
dec
icebp
ficompl
and
out
cltd
xchg
mov
bsr
pop
pushf
push
sbb
ret
mov
ds
in
adc
mov
leave
fdivl
subb
shrb
lcall
jno
cmp
data16
and
jbe
dec
jnp
jb
scas
arpl
mov
lock
jg
pop
inc
jge
push
mov
mov
inc
clc
aad
aam
xchg
jb
loop
inc
dec
cli
jno
dec
push
xchg
jae
nop
shl
sbb
pop
bound
adcl
jp
dec
xlat
popa
sbb
xor
stos
arpl
in
push
and
ja
mov
stos
mov
leave
ficompl
aas
cwtl
lock
int
xor
shl
inc
aad
inc
xlat
out
push
out
test
ds
sbb
scas
adc
fimuls
ja
out
shll
mov
lock
and
test
mov
pop
mov
aad
jge
adc
xchg
pop
cmova
hlt
pushf
push
mov
lret
xor
ljmp
sbb
or
push
xlat
or
ret
test
or
sub
call
or
jle
sub
dec
inc
mov
imul
lret
cmp
mov
push
out
int3
inc
adc
fnsave
xor
aas
xor
cmp
inc
pop
pop
sub
cmpsl
sub
lret
stc
add
pop
jge
mov
out
mov
gs
mov
loope
aam
ret
xchg
pushf
stos
add
inc
aam
push
repz
pop
adc
mov
pushf
addr16
es
lods
xchg
mov
outsb
lods
mov
dec
push
bound
cmp
lods
loop
inc
push
push
insb
mov
jp
add
pushl
cmp
rcrl
insb
test
fiadds
jo
sbb
test
dec
mov
test
sbb
dec
loope
stc
stos
pop
mov
pop
cld
dec
pop
into
gs
iret
hlt
pop
mov
stc
cmpsl
outsl
cmp
rcl
pushf
dec
xor
sub
mov
iret
jo
movsl
mov
movsl
in
xchg
sub
dec
mov
and
jbe
shlb
repz
int3
mov
int3
mov
std
cmp
mov
lret
jne
iret
mov
sub
fcmovnbe
das
outsb
jge
mov
mov
sub
adc
mov
pop
bswap
sub
icebp
mov
or
lahf
fstps
mov
pop
dec
iret
call
jae
jae
pop
out
cmc
fisttpll
jmp
dec
sbb
frstor
fs
inc
clc
inc
cmp
mov
out
fs
fistps
mov
hlt
xchg
lods
pop
xor
mov
rorb
or
ret
xchg
ja
pop
popa
into
ret
adc
push
test
mov
lock
push
pop
fildll
in
test
arpl
xchg
test
jg
aam
lods
push
push
mov
lds
cmpl
sub
sbb
add
insl
or
push
pop
iret
cld
inc
adc
outsl
push
data16
xor
ss
add
pop
xchg
mov
ret
scas
pop
mov
jns
ret
mov
ret
aas
push
sub
ss
xor
ret
cld
outsb
lock
jae
cwtl
jg
mov
pop
movsl
js
ss
pop
imul
dec
negl
test
scas
mov
jae
leave
pop
fistpll
pop
mov
ffree
faddp
mov
pop
enter
shlb
fwait
push
xchg
fidivs
addr16
or
fmull
aam
lods
data16
pop
xor
push
sbb
pop
test
pop
xchg
add
outsb
das
adc
rcrb
pushf
cld
out
push
loopne
mov
push
out
push
dec
imul
jmp
inc
rcll
and
jns
in
int
rcrl
mov
iret
int
mov
mov
enter
insb
jg
xor
mov
push
les
jnp
pop
imul
inc
dec
sbb
aam
xor
rorb
ljmp
mov
push
sarb
sbbl
std
lcall
cmp
call
mov
loope
lea
pop
xchg
cli
shll
ficoml
add
or
jo
adc
push
or
xor
outsl
inc
push
sbb
xchg
roll
pop
push
dec
and
js
xchg
jecxz
fwait
push
jno,pn
xchg
leave
mov
out
add
push
iret
aaa
dec
push
shrb
jle
cmp
push
dec
push
lods
bound
psrlw
jb
out
sub
pop
clc
push
movsb
add
imull
push
in
push
push
out
dec
cmc
sbb
clc
das
into
lahf
stos
test
mov
sti
js
insl
stos
movsb
and
dec
xor
insb
mov
leave
adc
mov
dec
or
inc
into
push
sti
xchg
and
jp
rolb
cwtl
arpl
les
pop
popf
or
fdivrs
fmull
outsb
js
repnz
dec
movsb
push
push
jb
jne
jl
cmp
insl
dec
mov
and
roll
es
cld
and
or
loope
mov
push
adc
xchg
xlat
insl
das
mov
mov
mov
nop
shll
sbb
pop
inc
out
inc
cltd
cs
mov
sarl
js
push
sti
lret
sbb
xor
or
aas
cmp
pop
aam
jb
nop
or
je
ljmp
cmpsl
pop
sbb
les
jae
das
adc
push
and
mov
cld
js
jno
es
imulb
mov
lahf
out
mov
repnz
xchg
dec
cmpsb
sti
outsb
or
lahf
test
push
and
inc
jg
repnz
inc
sub
jo
insl
fs
sbb
dec
les
jmp
pop
insb
xorb
cs
popl
and
cmp
sbb
sub
dec
add
jle
push
bound
add
and
ljmp
mov
mov
hlt
adc
adc
cmp
lahf
fs
cmpsl
lret
xchg
into
lret
cltd
and
bound
dec
ficompl
stos
mov
and
cmp
mov
daa
rorb
test
test
jo
mov
fidivrs
in
sbbl
decb
jne
sbbb
les
in
push
inc
repz
loopne
xchg
pop
imul
mov
or
mov
jl
sbb
out
add
adc
aaa
fisubrl
sbbl
pop
popf
in
push
test
mov
hlt
mov
mov
mov
mov
mov
jecxz,pt
adc
xor
jb
sub
hlt
stos
mov
xchg
push
xor
lods
inc
in
add
rorl
cli
dec
cmp
adc
mov
movsb
das
outsb
lcall
adc
add
push
push
arpl
inc
stos
lods
and
inc
imul
jo
jecxz
push
xchg
pop
jp
cwtl
or
mov
fwait
lods
arpl
decl
xchg
insb
inc
mov
fdivr
pop
out
pop
sub
out
decb
mov
int
dec
dec
xchg
outsb
pop
or
jns
inc
enter
addl
jns
mov
fistpll
sbb
ror
jge
jae
aam
aam
xchg
lods
cld
xor
xchg
jg
dec
out
xchg
inc
aam
add
inc
mov
sub
push
jmp
cmp
daa
rcll
repnz
jns
stos
andl
mov
call
out
sbb
fsubrs
pushf
push
jbe
cmpb
repz
dec
movsl
jecxz
lar
push
sub
cmpsb
in
xor
fsubl
insb
sub
lcall
into
push
mov
sbb
lds
fcompl
enter
adc
inc
filds
jp
pop
xchg
inc
rcll
adc
sahf
dec
pop
dec
aam
insl
or
jle
int
stos
sbb
loopne
idivl
loop
xchg
push
xor
cld
sti
mov
cmp
dec
pop
je
out
pop
out
mov
sub
and
shll
adc
inc
mov
or
hlt
jecxz
test
fisubrl
xchg
lods
aam
push
popa
inc
and
push
cwtl
aad
fstpt
cwtl
xchg
inc
mov
enter
insb
out
mov
sbb
daa
or
cmp
inc
ret
inc
outsb
or
loope
xchg
imul
or
andl
leave
aaa
lock
xchg
mov
pop
fidivrl
in
imul
enter
fistl
leave
movsb
pop
lds
cmc
jmp
ret
sbb
sub
lahf
fadds
lret
inc
cmp
push
sbb
shlb
and
adc
sub
xchg
jle
mov
mov
inc
pop
pop
cmp
xor
jns
es
imul
test
fucomip
mov
filds
or
fcomps
pop
mov
sub
xchg
jb
lea
dec
testl
jmp
cltd
nop
jae
ret
mov
xor
test
gs
ss
lds
leave
pop
arpl
add
cmpsb
sbb
pop
fsubr
shlb
cmp
ljmp
mov
rcrl
mov
lret
in
dec
pop
cltd
sbb
in
mov
fnsave
pop
mov
aaa
notb
mov
or
push
mov
inc
hlt
mov
jno
mov
fiaddl
push
out
cltd
cmovnp
iret
adc
xchg
mov
or
dec
lret
xchg
fs
and
aas
mov
arpl
shrb
lret
inc
and
nop
sbb
mov
push
pop
jmp
sub
lds
clc
sbb
adc
xchg
or
dec
sub
and
orl
mov
jns
test
and
cmp
sub
inc
data16
xchg
cmpsb
fcmovne
xchg
xchg
jne
imul
mov
xor
mov
or
push
mov
loop
cltd
cmp
jne
xor
xor
lret
xor
loop
popf
fs
data16
lock
mov
je
fdiv
lock
lcall
ja
pushf
mov
sub
xor
nop
test
rorl
pushf
stc
mov
jmp
addb
sub
mov
sub
xor
lret
inc
in
adc
sub
outsb
inc
test
outsl
xlat
test
mov
inc
push
pop
and
lcall
jns
cmp
sub
jno
icebp
fstl
cmpsb
push
xor
cmp
fisttpl
pop
shlw
cltd
cmp
sub
inc
pop
xor
sub
fsub
out
sarb
adc
sti
fsubrs
or
push
xor
cmp
mov
stc
enter
push
outsb
or
jne
iret
fiaddl
push
mov
and
imul
mov
enter
mov
js,pt
mov
xlat
cmp
mov
inc
insl
mov
int
or
push
mov
nop
icebp
push
cmp
xchg
fimuls
nop
ljmp
mov
out
repnz
jg
mov
lods
daa
lret
cltd
mov
dec
inc
inc
inc
jae
and
inc
mov
cmp
sbb
inc
pop
bound
out
xchg
sbb
or
fsin
iret
sarb
pop
test
rorl
push
adc
sub
inc
ret
add
or
popa
push
dec
or
lock
inc
add
fisubs
pop
inc
rolb
cmc
ret
stos
jnp
sbb
stos
xchg
pop
mov
push
das
and
insl
lock
notl
push
push
stos
xchg
push
gs
xor
sahf
and
mov
lds
call
adc
inc
scas
shrl
mov
dec
int3
leave
inc
and
les
jmp
std
out
mov
bound
or
loopne
leave
xchg
out
jnp
int3
fists
push
dec
leave
ret
jnp
test
cli
lret
mov
dec
leave
jae
mov
cmpsb
test
cmc
pop
sbb
test
test
shlb
jno
xchg
xchg
shrb
adc
push
stos
and
adcl
stos
push
mov
test
mov
mov
mov
sub
mov
cmc
add
out
cld
scas
xor
jno
mov
adc
mov
mov
lds
and
add
lods
jns
xlat
and
pop
pop
cltd
xor
jb
mov
xlat
mov
out
pop
clc
dec
fldenv
fcmovnbe
lock
rclb
lret
jns
test
into
inc
icebp
pop
push
mov
fdivp
jno
cmp
lret
jae
add
dec
xchg
xor
je
dec
xchg
stc
add
clc
fsubs
into
pop
or
in
aaa
pushf
pop
setbe
les
push
lret
dec
xchg
ljmp
shrb
mov
in
sub
data16
pop
dec
jecxz
movsb
cltd
xchg
add
add
fcom
in
test
xchg
adc
stos
pop
adc
ret
pop
mov
jns
bound
mov
dec
std
adc
dec
push
and
and
mov
pop
pop
jge
out
jno
jle
mov
int
daa
cmp
push
mov
sub
mov
jecxz
std
jo
sahf
push
add
cld
jg
in
iret
mov
jle
das
push
xchg
daa
cmp
or
movsl
js
jbe
out
mov
dec
aaa
inc
mov
pop
cld
subb
mov
add
xchg
xchg
loopne
ja
aad
das
cld
scas
xchg
fdivs
push
sub
sbb
fwait
aas
leave
dec
jo
add
add
insl
movsl
lock
fidivrl
push
movsl
negl
arpl
nop
and
mov
and
addr16
dec
jbe
rcll
add
fwait
sbb
jge
inc
mov
dec
pop
xor
dec
fldt
xor
or
hlt
dec
sub
int
xchg
adc
lods
jne
je
push
pushf
in
xchg
es
pop
pop
ljmp
lahf
repz
or
xchg
xlat
jecxz
sbb
lock
mov
dec
push
lock
cld
movsb
ficoml
pop
dec
cmp
pop
fisttpll
and
mov
cli
nop
mov
loop
fs
adc
xor
fmuls
icebp
cmp
mov
repz
outsl
cmpsb
jmp
mov
add
or
arpl
sbb
or
popa
mov
test
mov
aam
xchg
add
mov
cwtl
dec
loope
jnp
aas
lcall
ret
mov
xchg
scas
ljmp
lds
mov
cli
outsl
sub
scas
clc
movsb
or
fcomi
cmp
fmul
adc
out
and
orpd
je
iret
xorb
cmpsb
ljmp
faddl
sub
push
xor
fbstp
xchg
push
add
sarb
pop
cld
enter
cmpsb
call
clc
push
fldl
jmp
clc
sub
out
imul
inc
ja
sarl
lcall
jae
dec
mov
lahf
testb
iret
testb
mov
jae
in
cmp
jne
mov
hlt
out
hlt
sub
cmpsl
mov
dec
pop
dec
pop
and
xor
add
lret
rcrl
dec
int
or
rcll
sub
mov
fucomp
imul
xor
sahf
nop
sbb
or
adc
cli
imul
in
rcll
cmpsl
mov
flds
nop
sbb
fs
push
cltd
cmpsl
sub
add
jecxz
jne
dec
and
std
jae
adc
sahf
pcmpeqw
push
or
xor
adc
mov
aaa
std
pushl
cmp
cli
call
inc
sub
call
test
aas
sbb
push
cmc
inc
pop
xchg
mov
jns
add
xor
xchg
imul
leave
sbb
in
or
push
popf
mov
lock
sbb
lods
pop
test
and
in
scas
xor
inc
pusha
mov
mov
daa
sub
fs
arpl
test
xchg
jmp
sbb
mov
test
mov
loope
jmp
adc
mov
sub
or
cmpsl
ljmp
push
mov
mov
dec
inc
sbb
xchg
and
aaa
push
outsl
jns
loopne
xchg
mov
mov
push
rcrb
mov
dec
std
pop
fistps
adc
mov
jne
sub
popa
mov
into
mov
mov
insb
repnz
sub
adc
inc
cmp
js
fdivrl
das
sahf
movsl
inc
xchg
lcall
jmp
or
dec
je
xor
inc
xchg
movsb
js
push
jo
push
adc
xchg
mov
shrb
pushf
sti
std
int
flds
push
dec
push
dec
aad
cmp
xchg
cmpsl
popf
movsb
lds
mov
lcall
dec
push
cli
sub
aam
or
pop
shl
ljmp
mov
sub
test
subl
pop
pushf
adc
mov
icebp
mov
dec
xchg
jne
lahf
or
addb
loop
inc
push
pop
call
testb
int
pop
cmpsl
enter
pushf
and
into
cmc
clc
sub
aam
js
or
adc
or
lock
in
dec
das
mov
movb
in
xor
dec
je
je
iret
mov
shlb
mov
cli
fwait
shl
outsl
xchg
xchg
jae
jmp
mov
jmp
mov
bound
sub
test
mov
pushw
mov
enter
fxtract
addr16
and
xchg
inc
fwait
push
push
adc
lahf
or
jno
aam
jne
sbbb
jno
jo
movsb
sub
arpl
addr16
nop
or
daa
stc
mov
xlat
adc
lret
stos
in
nop
aad
lock
push
stos
fisubl
inc
into
inc
ret
ja
mov
jo
mov
mov
inc
aad
xchg
sub
hlt
pushf
fwait
test
or
adc
xor
ret
out
es
xor
pop
imulb
sti
mov
push
enter
sub
sbb
adc
push
jns
mov
pop
lea
in
inc
orl
mov
dec
mov
std
rorb
fbstp
les
cwtl
sub
and
arpl
xchg
ljmp
pushf
mov
pop
shlb
fidivrl
iret
pop
fwait
jo
rorb
es
xchg
fidivrl
or
popa
imul
sub
sub
dec
out
cmpb
mov
aas
cwtl
jge
xor
xchg
in
xchg
mov
imul
adc
xchg
add
ja
xchg
pop
bound
pop
inc
js
mov
mov
cld
ret
dec
mov
clc
xchg
sub
pop
ret
push
mov
dec
clc
mov
insb
fwait
push
push
mov
mov
xchg
cmc
sub
lahf
push
ret
es
pushf
clc
mov
pop
inc
orb
not
dec
js
and
jge
mov
incb
out
inc
inc
rcrb
xchg
outsb
xor
dec
push
inc
outsb
inc
sbb
jge
sub
jp
loop
scas
push
mov
mov
das
adc
lods
gs
xchg
aam
stc
test
dec
mov
mov
jmp
enter
jp
scas
sbb
mov
lret
pop
das
push
test
in
pop
xchg
sub
pop
repz
lea
add
lret
neg
dec
dec
daa
add
lret
cmp
jno
lret
jg
jno
in
or
mov
dec
lcall
cmp
rorl
arpl
outsb
add
lcall
mov
mov
out
pop
mov
push
movsl
adc
out
mov
ljmp
stos
jno
sbb
icebp
push
ja
push
or
xchg
and
in
movsl
inc
mov
aam
xor
mov
cmp
pop
sub
mov
loope
inc
cmp
inc
xor
xor
pop
jp
stc
pop
movsl
leave
sbb
jp
fs
adc
notl
cmp
shll
mov
cld
das
imul
or
lahf
clc
ret
ficoml
xchg
pop
and
scas
jnp
push
mov
add
insb
mov
cmc
cmp
ret
jle
out
adc
in
out
mov
lret
mov
iret
movsl
xor
dec
or
repz
sbb
fildll
jns
jb
pusha
test
fimull
push
xchg
jno
xchg
cmp
divl
sbb
insl
adc
mov
into
dec
nopl
push
fnsave
push
mov
jno
mov
popa
mov
repz
mov
inc
stos
aas
xchg
push
leave
mov
and
and
mov
mov
lret
xor
mov
mov
rclb
cmp
lock
inc
mov
into
pcmpgtb
je
xor
insl
dec
push
mov
push
cmc
daa
js
mov
cwtl
rep
repnz
pop
mov
and
fdivs
jno
ja
xchg
mov
pop
out
aaa
inc
jle
lcall
push
cmp
and
sbb
rolb
pop
mov
sbb
in
mov
loopne
ljmp
add
sub
mov
fimuls
xchg
push
jns
ret
dec
xchg
test
in
jo
stos
pop
es
push
aam
in
mov
outsl
gs
inc
bound
xlat
mov
fisubrl
lods
cmc
je
mov
movsb
push
xchg
int
idivl
lea
jg
mov
push
std
pop
insl
add
lock
neg
mov
outsb
jnp
stos
imul
xchg
mov
inc
sar
xorb
xor
add
cmc
cmp
insb
pushf
mov
mov
mov
roll
pop
add
lretw
or
ds
fldl
test
sbb
mov
and
divb
jo
cmc
push
inc
movsl
push
mov
push
test
pop
jl
faddl
jg
adc
in
cli
and
mov
sbb
pop
or
stc
call
loop
ja
cmpl
add
sbb
call
out
xor
push
push
sub
and
fisubl
shlb
push
aad
sub
aad
pusha
aas
gs
pop
iret
inc
jo
cmp
sub
mov
loop
cmp
shlb
mov
lret
mov
push
test
outsl
mov
xchg
roll
add
push
fisttpll
rcl
gs
lahf
jecxz
push
aad
cwtl
mov
outsl
mov
xor
int
jge
in
scas
jge
mov
mov
jmp
stos
test
inc
pop
and
out
xor
jne
jp
fmull
test
rorb
jg
jnp
mov
xchg
repz
int3
ljmp
cs
aaa
xor
rorl
xor
or
iret
enter
push
ret
loop
and
in
push
xchg
jmp
pop
mov
cld
or
jle
sub
pop
and
icebp
test
pusha
rol
negb
stos
popf
mov
arpl
notb
stc
cmp
fmuls
dec
loopne
fmull
sarl
pop
xor
pop
sub
sub
jg
mov
inc
xor
arpl
lods
in
mov
lea
mov
mov
xor
fwait
mov
fidivl
or
xor
sbb
cltd
mov
mov
jns
sub
call
rclb
outsb
jp
insl
mov
push
sub
shll
inc
pop
loopne
push
mov
cltd
jno
in
fnsave
shl
loope
bound
jns
imul
dec
pushf
mov
xor
mov
add
stos
clc
inc
es
mov
shll
lds
mov
add
in
xlat
lods
jl
pop
cmpsl
scas
pop
notl
sbb
sbb
mov
cltd
sbb
insb
inc
cld
ret
in
push
pop
xchg
std
divb
scas
adc
adc
and
hlt
int3
inc
push
sub
shll
push
xchg
xor
sahf
fistpll
int
mov
scas
ljmp
jns
test
popf
das
lahf
outsl
or
enter
flds
mov
push
xchg
jge
fs
cmp
jmp
iret
jo
dec
xor
xchg
or
or
cli
lret
pop
mov
pop
mov
push
mov
sbb
sub
cmp
mov
mov
fidivs
pop
inc
jae
mov
aad
jp
add
in
xor
addr16
cmp
sbb
out
insb
push
out
test
stos
das
jmp
or
sbb
cmp
cmp
pop
test
mov
sahf
jp
aaa
push
adc
push
jne
iret
adc
scas
imull
arpl
clc
popa
and
cmp
jno
mov
mov
inc
pop
lods
sbbb
cmc
sbb
mov
cmp
in
cmp
or
int3
mov
jp
aaa
jge
imul
jbe
test
and
sarb
push
and
lods
repz
push
dec
adc
pop
cmp
ret
loopne
mov
fwait
and
dec
dec
repnz
rclb
es
in
mov
jno
cmp
dec
es
xchg
dec
inc
aas
jns
jae
cmp
mov
lods
jecxz
mov
push
pusha
push
hlt
out
mov
mov
repz
inc
jg
cmpsb
fsubrs
bound
push
movsl
pop
jnp
stc
test
andb
cwtl
in
fstpl
sahf
inc
cmp
mov
ffree
aad
jb
enter
sub
stos
push
int3
fwait
in
xchg
mov
dec
sbb
mov
mov
fimuls
jnp
idivb
push
dec
xchg
jne
outsb
sbb
aaa
sub
mov
dec
cmc
into
ret
push
popf
xor
pop
in
les
inc
lret
mov
push
mov
hlt
or
adc
jmp
push
loop
mov
movb
orl
xchg
loopne
cmp
cmpsl
into
inc
adc
mov
mov
mov
xchg
bound
lcall
shll
in
cmp
dec
sarl
insl
bnd
mov
push
push
sbb
push
cmpb
adc
mov
mov
outsb
inc
xor
or
sbb
cmpsl
ficompl
jns
add
jbe,pn
add
or
popf
inc
inc
clc
stos
cmp
mov
or
mov
sub
mov
sub
sbb
or
sbb
mov
and
dec
xor
push
insb
cmp
mov
in
push
xor
rol
sub
jg
sub
xchg
lahf
inc
jp
in
sub
mov
addr16
loop
insl
jno
jae
jne
jg
cmpxchg
sbb
lahf
mov
and
xchg
and
mov
testb
cmpsl
in
aad
adc
add
mov
push
imul
mov
mov
cmp
xchg
mov
shll
push
out
outsb
pop
mov
out
rorl
adc
or
mov
repz
out
movsb
mov
jg
sbb
mov
mov
stos
mov
call
int
and
jg
push
in
pusha
sub
push
aaa
addr16
sti
mov
xchg
jbe
div
test
add
loopne
scas
pop
cltd
lods
inc
fildl
imul
mov
push
cmp
jmp
jg
adc
fdivrs
std
shrl
fistpl
xchg
add
adc
mov
jmp
mov
push
loopne
leave
lds
shlb
cmp
cmp
pop
fs
jnp
adc
cs
notl
mov
jecxz
leave
ret
loope
add
mov
push
pop
out
mov
jo
xlat
and
out
sub
ja
outsl
bnd
scas
arpl
mov
gs
add
inc
sahf
mov
mov
inc
test
pop
cmpl
mov
mov
fadds
mov
andb
or
scas
jo
push
sub
and
cmp
xlat
gs
sbb
mov
inc
ret
push
in
pusha
xchg
das
ljmp
mov
xchg
aam
sub
shr
outsb
dec
xor
fcmovbe
lds
pop
mov
aas
ffreep
inc
pop
mov
mov
cmpb
sbb
imul
push
push
shrl
lea
ljmp
mov
add
out
cmp
mov
aaa
aas
imul
adc
stos
xchg
add
cld
lea
pushf
stc
sub
inc
pop
shl
sbb
cmp
inc
jge
dec
je
ss
ret
fwait
inc
jmp
sub
ret
cmp
andb
add
pusha
add
shrb
push
dec
xor
insl
dec
in
and
cmp
out
lret
loope
sbb
je
addb
jl
inc
ja
inc
dec
xor
cltd
cmpsb
xchg
mov
mov
pusha
jl
and
jno
sbb
enter
roll
aas
dec
jnp
inc
mov
in
out
loope
shlb
nop
cmpsb
arpl
shrb
shrb
fidivrs
fisubl
lds
push
lods
mov
mov
xchg
mov
bound
add
sbb
test
es
fmulp
in
xchg
sahf
adc
int
inc
xchg
bsr
ljmp
adc
sub
xor
mov
sub
cmp
sarb
mov
inc
stos
cmp
jne
pop
aam
pop
imul
inc
outsl
sahf
filds
aam
repz
xor
repz
dec
dec
int
into
loopne
sti
int3
sahf
sub
scas
adc
ret
in
cwtl
inc
inc
je
xchg
lret
repnz
mov
xchg
push
xchg
xchg
pop
sub
imul
addr16
adc
xor
jb
out
mov
mov
lds
or
movsb
mov
mov
adc
fidivl
adc
cmp
das
mov
cmc
aam
call
and
gs
fsubrl
aam
jge
lcall
cmp
jp
bound
add
outsb
mov
fwait
pop
jp
inc
sahf
cmpsb
xchg
sub
mov
push
das
mov
cmc
sbb
cmp
insl
aaa
arpl
fbstp
jg
sbb
pop
sub
jne
xchg
or
xchg
pop
std
and
scas
dec
enter
sub
jg
pop
pop
lods
jns
pop
cmp
mov
loop
cli
sarb
fcmovne
fnstcw
sbb
inc
addr16
repnz
das
push
dec
adc
xchg
pop
adc
cmpsl
pop
push
inc
push
shll
out
push
add
sbb
aad
hlt
mov
jecxz
push
imul
cs
repz
int
mov
and
add
sbb
cli
sbb
jge
inc
ds
pop
or
mov
test
insb
pop
and
inc
aad
imul
or
stos
test
mov
pop
cmp
sub
cmp
jo
pop
lea
xchg
je
xor
out
jg
push
inc
int3
mov
adc
in
adc
imul
movsb
inc
pop
repnz
push
mov
add
sbb
inc
push
pop
xchg
mov
and
and
and
lahf
cmp
mov
call
and
into
cmpsb
popf
sub
les
ret
lods
add
mov
loope
xchg
xchg
ret
jl
ljmp
mov
sbb
std
faddl
mov
mov
mov
lcall
mov
stos
cmpsl
ljmp
add
xlat
int3
jg
jo
xlat
arpl
push
pop
pop
das
adc
push
dec
mov
test
ss
dec
ds
cld
mov
push
pop
test
dec
bound
jne
pushf
jmp
mov
mov
mov
popa
repnz
or
or
jne
push
push
lods
sbb
or
xlat
ds
sub
outsl
and
loope
dec
rcl
or
ljmp
in
aaa
xlat
loope
fisttpll
fisttpl
int3
loopne
jmp
pop
popa
xchg
rcll
mov
imul
ss
arpl
xor
les
mov
movsl
pop
add
imull
mov
mov
shll
xor
dec
test
mov
add
jno
add
mov
int3
pop
xorl
cmp
push
xor
out
popf
and
xorb
test
ror
daa
cmp
mov
scas
test
xchg
fdivs
pop
iret
ret
push
rclb
loopne
pop
inc
ret
push
in
or
jmp
mov
stos
aad
fstpt
xchg
enter
cmpsb
jmp
xor
jg
repnz
jno
iret
adc
xor
push
mov
shll
sbb
sub
cmpb
xor
adc
sbb
das
xchg
test
mov
mov
add
add
clc
icebp
out
pop
sarl
imul
cmp
loopne
in
mov
add
hlt
mov
and
stos
stos
xor
ds
leave
pop
inc
sti
test
push
push
push
push
add
xlat
push
pop
or
in
das
std
loop
bound
icebp
xchg
shrl
test
sbb
cli
andb
push
add
shl
lret
faddl
adc
addr16
mov
cmp
lcall
sbb
jp
dec
mov
nop
cmpsb
into
sub
popf
dec
jno
mov
pop
dec
pusha
and
xchg
js
ret
das
fmuls
push
and
daa
mov
aas
fdivrs
test
mov
or
push
add
dec
pop
cmp
fsubrs
xor
pop
adc
popf
or
subb
mov
sbb
xor
xchg
and
pop
jl
cmp
mov
mov
pop
fistps
mov
nop
push
mov
sti
mov
cmpsb
repz
mov
inc
cmp
mov
aaa
hlt
mov
push
les
or
xor
pusha
cmpsl
scas
sub
pop
add
insl
imul
popf
push
adc
mov
jnp
stos
dec
arpl
loop
ds
jge
sub
outsl
mov
scas
xchg
sarl
xchg
adc
or
outsb
hlt
les
and
nop
cmpb
out
dec
push
in
test
mov
jne
mov
xor
jmp
xchg
out
add
jle
push
xchg
jno
cmp
mov
cwtl
add
rcrl
xor
cmp
ret
xlat
jle
loope
push
adc
in
and
ret
iret
gs
stos
aas
cmpb
push
xor
mov
jge
test
clc
fs
inc
push
sbb
mov
fs
sbb
ret
xchg
pop
sub
test
jmp
jl
jo
push
jg
out
daa
icebp
ss
je
xor
ficompl
cwtl
out
inc
imul
cmpsl
movsb
mov
and
mov
push
jne
scas
jne
mov
mov
pop
lea
jp
jbe
pop
ret
pop
js
mov
sbb
push
fimull
int3
pop
mov
aad
out
pop
setg
scas
flds
inc
sti
insb
or
pusha
hlt
test
roll
lret
mov
push
js
pop
stos
fildl
jo
fwait
outsb
jmp
pop
into
fs
rclb
and
stos
fcoml
popa
pop
cs
rolb
les
insb
jo
xor
lods
mov
lret
cmp
cmp
pop
repz
sahf
in
xchg
insl
sub
add
mov
ficompl
ljmp
iret
dec
lock
imul
pop
insb
jp
xchg
pop
fnstenv
add
sahf
test
ljmp
mov
or
stc
pop
cmp
sub
jns
mov
add
xchg
repz
xor
sahf
mov
and
bound
dec
or
int3
cmc
ret
imul
cmpsb
in
stos
push
mov
movsb
out
cmc
movl
inc
push
xlat
jl
lock
sbb
stos
sub
fmulp
dec
cmpsb
fwait
sub
inc
inc
in
pop
out
push
arpl
adc
shrl
or
mov
add
mov
in
and
fstps
loope
jo
mov
leave
daa
inc
add
or
bsf
hlt
pushf
setnp
stc
or
or
mov
xchg
adcl
movsl
jg
jl
sub
mov
test
jnp
and
lret
adc
push
lcall
pop
lods
fld
js
mov
shr
int3
jnp
or
sar
add
jns
fwait
outsl
lock
cltd
outsb
sub
xor
mov
inc
test
xchg
es
mov
loopne
and
ss
or
and
out
add
outsl
push
lahf
repz
push
mov
cli
xchg
test
movsl
xchg
insl
push
outsb
sub
test
sbb
lock
xchg
faddl
xchg
clc
pop
shl
xor
in
mov
add
movsb
pop
mov
rcr
inc
fimuls
pminsw
mov
scas
add
and
ficoml
cwtl
cmp
cmp
xor
cmp
outsl
outsb
mov
das
lret
add
shrb
mov
pop
inc
sar
bound
and
and
push
mov
in
cmp
cmp
shr
mov
pop
inc
and
push
xor
sub
std
pop
pop
fisttpll
movsb
shlb
adc
std
lret
fcoml
jbe
inc
xor
xchg
inc
mov
ljmp
in
xchg
xchg
pop
test
out
pop
or
and
repz
adc
popa
test
cmp
add
call
push
pop
push
mov
xor
jmp
imul
adc
enter
mulb
push
mov
arpl
inc
sbb
mov
outsl
aas
jmp
cmpsl
insb
icebp
fdivrl
and
push
movsl
cmp
ds
push
jecxz
jmp
dec
mov
into
or
fcompl
add
int
and
int3
push
sbb
cltd
push
inc
inc
push
cli
ret
or
sbb
subl
adc
sub
xor
sbb
sbb
push
xchg
mov
in
fcmovbe
sub
push
mov
repnz
or
xchg
push
push
push
test
shll
pop
xlat
fstl
repz
jecxz
pop
and
or
mov
jl
xchg
das
mov
mov
xchg
jg
or
out
mov
pop
pop
add
popf
fdivrs
sbb
mov
cmp
push
cli
cmp
and
inc
test
jnp
cmp
push
subb
push
lret
repz
pushf
add
sbb
orb
xchg
mov
cmp
ja
push
insl
xchg
mov
rcrl
test
mov
test
add
imul
mov
fwait
sub
dec
ja
nop
adc
in
bound
or
lret
jecxz
arpl
push
mov
jecxz
hlt
inc
sub
sub
fsubs
and
mov
fwait
lret
cmc
int
add
cmp
mov
push
xor
xchg
jl
xchg
jmp
sub
lds
mov
push
scas
insb
mov
aaa
addr16
sub
mov
add
mov
test
int
cmpsb
mov
test
dec
fs
test
out
pusha
outsl
inc
adc
pop
lea
sub
xchg
cmp
lret
pop
ret
inc
inc
movsb
pop
pop
es
mov
jl
insb
fistps
mov
jo
data16
add
fwait
ds
jns
mov
pop
jae
mov
xchg
xchg
mov
pop
inc
mov
cmp
push
movsl
out
adcb
jl
pop
sbb
xchg
sbb
insb
rcrb
push
dec
leave
scas
movsb
clc
inc
cmp
xor
mov
testl
dec
pop
out
cmp
sub
cmp
push
fs
dec
scas
lret
ss
inc
mov
mov
push
xchg
or
xor
mov
sub
mov
fdivrl
and
insb
push
addr16
push
jg
subb
in
loopne
loopne
adc
xchg
sbb
nop
loopne
xor
scas
push
repz
cwtl
insl
or
hlt
int
jmp
push
dec
mov
cmp
xor
mov
cs
inc
sti
stc
loopne
out
out
popa
filds
pop
divb
in
sbb
or
pop
add
push
and
xchg
loopne
and
ds
mov
xchg
add
in
lock
xrelease
or
adc
xlat
insb
jmp
sub
es
clc
movsb
xor
jecxz
inc
inc
sbb
movsl
clc
loop
pop
cltd
xor
pop
dec
lods
push
xor
jno
sub
dec
push
les
testb
outsl
jo
mov
mov
mov
cmp
iret
ljmp
add
jns
and
dec
sahf
jmp
fcmove
jo
cmp
xchg
jbe
and
int
push
inc
mov
jle
cld
pop
outsb
mov
adc
ret
jne
sub
and
idivl
gs
jno
in
repz
inc
pop
shll
adc
shll
push
push
test
adc
into
inc
mov
ja
rolb
repz
fs
inc
mov
sub
mov
lahf
or
jns
pop
sub
int3
scas
cwtl
out
adc
orl
jae
jnp
add
mov
scas
aam
or
fwait
xchg
xor
loope
cmp
in
ljmp
jnp
dec
xor
test
and
mov
test
pop
mov
dec
out
int3
sub
pop
outsb
jg
xchg
push
pop
mov
popa
mov
push
mov
inc
dec
div
int
lcall
mov
xor
push
lock
add
jns
mov
enter
adc
pop
cwtl
lret
cmp
cld
cmp
imul
jnp
adc
mov
vshufps
imul
fldl
popf
mov
std
cmpsl
jns
loop
inc
fxtract
stos
les
and
test
insb
sbb
ret
aad
cmpsl
sbbb
xchg
mov
cmpb
arpl
aam
or
inc
into
mov
and
out
xorps
cltd
sahf
jp
imul
cmp
adc
push
jo
mov
pop
out
iret
sbb
mov
or
and
outsl
lret
test
inc
and
and
xchg
insb
xor
pushf
push
outsb
pop
mov
fildl
cmp
jo
adc
in
idivl
test
xor
mov
dec
jg
and
lods
mov
jg
aam
ss
pop
fmuls
clc
adc
movsl
or
mov
sbb
xchg
jnp
push
flds
leave
and
mov
out
out
les
mov
mov
fidivrl
adc
movsl
pop
or
lods
aaa
sbb
cld
adc
or
push
stos
cmp
xor
cli
jecxz
pop
test
jg
cmpsb
cmp
lds
test
push
mov
add
lahf
fwait
sbb
xchg
sbb
add
pop
cmp
or
jmp
movb
loop
add
add
lods
cmpsb
push
in
sbb
dec
repnz
lock
push
in
daa
int3
lret
dec
pushf
mov
jae
hlt
lods
jle
iret
push
adc
lods
inc
push
and
cld
or
in
sahf
and
js
int3
add
sbb
fs
les
push
mov
cmpsl
addr16
mov
nop
leave
lods
fnsave
es
mov
nop
scas
push
xchg
xor
add
clc
mov
rcrl
cmp
xchg
add
dec
fwait
je
sahf
push
bound
lret
inc
dec
popa
or
mov
test
movsl
cld
lret
movsb
in
push
push
push
movsb
sub
add
outsb
sbb
leave
or
outsb
mov
in
sbb
mov
xorb
sbb
inc
rcll
test
popa
out
xchg
int
aas
out
lea
xor
dec
aad
test
gs
jg
mov
test
add
jo
es
arpl
test
jne
mov
lods
jg
add
scas
xor
ja
jnp
push
decl
stc
lahf
ss
inc
inc
stos
xor
mov
cmpsl
ret
gs
sbb
and
sub
adc
pop
loop
stos
sbb
cwtl
xor
stc
cmp
dec
adc
jo
imul
pusha
or
push
sbb
fisubl
shlb
orl
sbb
gs
sub
iret
pop
pop
movsb
jns
mov
adc
and
push
aaa
xchg
adc
adc
jge
lods
aad
inc
pop
mov
pop
push
call
and
adc
loope
mov
dec
mov
jne
push
xorb
lods
movsb
mov
add
xchg
xchg
insb
sbb
jbe
loope
jae
loopne
add
das
fs
mov
cld
mov
into
xor
sub
xchg
xchg
dec
rolb
mov
pop
mov
xor
sbb
xchg
sub
ret
in
lea
add
iret
jns
xor
popa
push
lret
xlat
pop
ds
pop
fistpl
icebp
adc
dec
sub
mov
scas
adc
clc
lods
popa
lahf
insb
loope
jae
jb
sbb
mov
scas
outsl
rclb
scas
je
sbb
sub
sub
outsl
jbe
fildl
cs
cld
bound
pop
ljmp
mov
ljmp
dec
sarl
fxch
test
jecxz
inc
add
add
in
mov
add
in
mov
xor
add
jnp
push
jno
push
xor
addb
cli
aad
jnp
lods
mov
pop
jg
pop
mov
scas
xchg
insl
push
ss
mov
scas
sbb
push
loopne
js
scas
pushf
fidivrl
pop
jbe
test
mov
or
xchg
subb
lcall
jp
xor
test
aad
lea
add
and
sbb
cmp
icebp
mov
mov
xchg
mov
pushf
jl
push
xchg
inc
pop
adc
jo
ficompl
jecxz
or
gs
sahf
push
shlb
mov
dec
push
sub
out
push
jbe
sahf
loope
add
or
mov
or
sbbb
mov
arpl
push
popf
test
jnp
sbbb
push
pop
mov
es
xchg
es
icebp
pop
das
pushl
repz
jnp
test
cmp
xorb
mov
push
push
shll
imul
into
sub
dec
add
stos
sbb
in
cld
mov
popa
sar
push
mov
lahf
cmp
add
push
popa
xor
pop
or
icebp
rorl
cltd
and
xchg
pop
outsl
out
andl
mov
dec
push
pop
test
ret
lcall
add
orb
dec
popa
fldz
adc
scas
adc
scas
dec
inc
and
jo
mov
lret
dec
das
jge
lahf
sar
div
rclb
test
jns
xchg
ret
popa
pop
jns
mov
inc
hlt
cmc
je
je
or
or
push
or
fwait
ds
adc
ffreep
jno
repnz
leave
mov
incb
repnz
xchg
cmpsb
xor
or
insl
lea
movsb
cmpsl
jo
mov
add
lret
mov
cmp
std
movsl
adc
clc
ja
cwtl
das
sub
cmp
pop
pop
mov
pop
inc
and
jb
mov
sbb
dec
push
insl
add
dec
mov
add
call
push
scas
stc
sub
jne
xor
push
mov
aad
jle
inc
xchg
sbb
mov
push
int3
ljmp
and
push
sub
cmp
xchg
aad
fcomps
in
out
mov
mov
or
jns
dec
repz
xchg
pop
jo
enter
movsb
out
sbb
arpl
xor
lret
push
xor
mov
jp
cmp
pop
enter
inc
lret
jns
xchg
enter
push
scas
sub
xchg
dec
inc
jge
cli
pop
adc
sbb
or
push
rolb
sub
std
lret
outsb
mov
dec
cmc
clc
mov
lods
lcall
ret
out
mov
popa
cmp
popa
xchg
mov
push
pop
sub
mov
jle
cmpsl
pop
pop
repnz
add
jne
imul
int3
pop
add
ds
imul
roll
jp
jno
dec
mull
add
xchg
xchg
addr16
inc
std
ja
fs
lds
lds
mov
cs
into
insl
ficoms
nop
mov
insl
mov
mov
jg,pn
out
out
xchg
into
lret
mov
xor
sahf
stos
mov
adc
rorl
ret
movb
or
mov
dec
adc
mov
fcoms
xchg
pop
sub
test
adc
int3
lds
cmc
sbb
jae
ret
xor
lds
js
cmp
test
cmc
cltd
fistpll
add
jb
or
std
push
mov
adc
gs
xor
shll
xchg
in
adc
xor
xchg
jo
dec
lret
js
shl
fnstcw
cmp
insl
test
das
iret
sub
mov
add
in
mov
scas
lret
nop
mov
lret
cwtl
in
out
pop
andl
aaa
pop
push
adc
sahf
mov
adc
and
xor
jg
mov
push
sub
mov
add
insb
fs
mov
mov
test
add
pusha
push
cmp
popl
inc
nop
aas
mov
jge
jae
xor
mov
fisubs
enter
sbb
sub
sub
cs
out
push
es
jge
push
pop
aad
out
jns
dec
and
mov
cs
mov
push
add
or
scas
mov
hlt
popw
sti
adc
and
paddusw
and
idivl
fisubs
fnstenv
sbb
orb
pop
or
sub
mov
push
push
scas
inc
push
cmpsl
mov
dec
das
mov
inc
inc
aas
and
jbe
xor
mov
fistl
or
lods
repz
push
int
jmp
adc
out
adc
xchg
popf
inc
sbb
mov
aam
push
lds
scas
dec
bound
test
movsb
add
and
das
fistpl
push
xor
ds
fcoml
cmp
cmpsl
mov
cwtl
pusha
push
jecxz
test
pushf
sbb
cmp
int3
icebp
cmpsb
mov
xchg
sbb
inc
test
fwait
dec
sub
outsb
adc
fwait
mov
fwait
test
into
jl
sub
and
sbb
jae
std
add
push
or
sub
lret
rcrl
xchg
and
jl
mov
xchg
fsub
jbe
cmpsl
and
nop
insb
mov
je
or
sub
fwait
dec
mov
into
shr
orl
leave
sbb
sbb
in
adc
push
int
and
cmc
dec
sub
inc
outsb
push
aam
call
jg
sub
aad
aad
cmp
pop
adc
push
add
cmp
fs
xor
push
out
dec
pop
mov
imul
xchg
or
out
push
xchg
adc
std
and
bound
sti
pop
mov
xchg
mov
in
fidivs
adc
aam
pop
xor
or
mov
arpl
hlt
jae
xchg
pop
popa
fcoms
push
int3
test
ror
sbb
out
fists
dec
popf
stos
gs
sub
out
out
sbb
repz
mov
pop
insl
mov
je
imul
stos
push
add
add
stos
xchg
jo
mov
insb
or
xchg
push
cmp
jecxz
xchg
mov
scas
mov
jg
xchg
xor
push
mov
rcrl
add
jp
fdivrs
mov
jmp
iret
dec
fs
jae
jno
inc
or
mov
sub
subb
ss
cld
adc
ss
clc
shlb
jne
push
xchg
jle
adc
je
cmp
push
iret
add
cmpsb
push
shlb
push
jge
mov
idiv
pop
daa
add
fwait
and
mov
and
insl
dec
ss
nop
scas
or
xchg
loop
in
push
mov
xchg
jmp
lret
cwtl
stos
push
out
xorl
js
xor
stos
les
pmuludq
or
pop
cmpsb
jns
test
push
ja
push
roll
lret
ljmp
mov
push
sbb
in
pop
jl
arpl
xor
push
jne
dec
cmp
mov
fstpt
fwait
es
into
aad
int
mov
jnp
icebp
cmpsb
sub
mov
jo
mov
add
pop
dec
xchg
iret
mov
sub
push
mov
sbb
aam
or
push
jae
call
push
out
pop
xchg
jg
repz
and
sub
inc
in
cmp
fcomps
das
enter
jae
mov
nop
pop
bound
mov
cmp
call
idivb
int3
sbb
sbb
jae
xchg
push
arpl
and
aam
jmp
cmpsb
cwtl
movsb
sbb
jae
xor
fs
es
addr16
lret
test
in
daa
mov
leave
loope
loop
sti
fbstp
imul
leave
cltd
sub
mov
fstpl
add
sub
or
pushfw
gs
jnp
mov
sub
rorb
or
repnz
hlt
jg
jmp
out
inc
enter
mov
leave
pop
sbb
aad
jns
gs
lock
movb
xchg
idivl
shrb
gs
repnz
sti
shrb
ret
lcall
pop
aaa
and
aas
and
nop
push
xor
mov
nop
pop
pop
xor
xchg
fs
mov
sbb
push
dec
js
and
call
jbe
xchg
sbb
pop
in
lret
out
adc
pop
and
jp
popf
xchg
pop
or
pop
jae,pt
ss
cmp
mov
cmp
dec
mov
inc
outsl
inc
xchg
call
xchg
xchg
mov
pusha
mov
xchg
lods
fsts
in
sub
decl
out
or
sub
into
dec
xor
adc
xor
push
outsb
jp
call
mov
shrb
xchg
or
clc
and
imulb
mov
mov
or
enter
out
es
les
cmp
cs
xchg
scas
mov
test
cmp
or
cmp
bound
js
dec
cmpsl
dec
push
rolb
jmp
dec
sbb
popa
add
xlat
std
and
cmp
inc
mov
push
adc
cmp
mov
inc
xor
sahf
mov
icebp
sbb
jl
cltd
cmp
test
lret
mov
and
push
fcomp
dec
sub
ss
sub
cmp
adc
outsw
stos
cmp
or
inc
les
inc
xor
data16
test
stos
cmp
mov
jns
and
leave
pop
push
jo
clc
xchg
loope
out
fimull
mov
int3
cltd
test
mulb
xchg
xchg
aam
leave
mov
or
ljmp
mov
mov
pop
jne
inc
mov
pushf
pop
sbb
popf
sbb
xor
stos
cwtl
mov
test
mov
pop
sub
mull
mov
and
les
jae
gs
stos
repz
loopne
sar
dec
mov
add
nop
mov
mov
ficompl
sub
es
xor
ss
movb
mov
loopne
jl
cwtl
push
push
mov
add
cmp
or
and
lret
fdivrs
push
add
xor
jg
stos
cmp
inc
in
jo
icebp
sahf
xor
and
xchg
movsl
adc
mov
inc
nop
repnz
mov
mov
adc
pushf
ja
sub
sbb
mov
ljmp
das
rcr
enter
push
out
cmp
sub
and
xchg
sbb
andb
push
mov
cmc
or
test
sbb
sbb
add
pop
cwtl
aas
pusha
cmp
mov
and
dec
adc
or
notl
sbb
testl
scas
pusha
cmp
inc
sub
lds
enter
sub
fcom
sbb
outsb
and
inc
enter
ds
push
mov
and
fcoms
adc
sahf
fiadds
add
fs
push
aas
cwtl
push
jge
jle,pt
scas
mov
scas
ret
cltd
movsb
cmp
add
dec
pusha
xor
push
xorl
sbb
out
scas
loope
pushf
inc
popf
mov
scas
add
shll
pusha
xchg
test
pop
mov
xor
rcrb
mov
lock
sbb
or
je
ret
lods
fldl
mov
xchg
aam
sub
stc
lcall
mov
push
xchg
rcl
out
or
repz
addr16
fmul
fadds
rcl
daa
out
adc
in
push
jno
call
popa
fildll
mov
inc
scas
xor
adc
cs
iret
xchg
in
and
pop
push
jl
in
pop
aad
xor
pop
int3
cmp
mov
push
push
lcall
aad
cmp
cmpsl
clc
jp
mov
pop
inc
mov
mov
outsl
and
xor
ja
sbb
mov
test
or
xor
les
outsb
pop
sahf
pushf
rclb
lret
inc
or
fsub
push
xor
cmp
fcomps
push
int
loopne
add
fistps
lods
ss
add
xchg
enter
dec
jecxz
imul
cmp
int3
sbb
dec
adc
fs
int
mov
pop
mov
mov
adc
movsb
mulb
xor
xlat
cmc
insl
lods
xchg
out
rolb
or
mov
fdivr
add
fisubrl
repz
inc
mov
or
push
mov
sti
push
jle
push
sub
ds
xchg
out
push
push
cmpsb
adc
push
add
xor
in
sbb
sub
imulb
faddl
notb
or
pop
push
cmp
leave
cli
out
sbb
addr16
jmp
inc
sbb
iret
iret
mov
es
addr16
ret
cwtl
xchg
mov
fsts
cwtl
repz
cmp
mov
cmpl
or
stc
das
dec
je
scas
mov
ret
mov
inc
sti
xchg
cmpsl
popf
dec
push
jp
sub
dec
dec
cmp
aaa
hlt
mov
xlat
mov
test
jbe
dec
stos
je
adc
cmp
outsl
cmp
cmpsl
mov
mov
or
sub
jbe
insl
xor
push
pop
dec
stos
fwait
lea
cmpl
mov
aaa
sbb
in
call
mov
sbb
int
sbb
fiaddl
xchg
pop
mov
cmp
mov
movsl
in
test
call
add
or
pop
push
addr16
add
push
jne,pt
or
pop
or
into
inc
fisubrs
out
and
mov
faddp
inc
push
dec
xlat
push
aaa
movsl
ret
mov
push
ja
and
cli
adc
enter
inc
cwtl
jno
stc
cld
rcl
inc
xor
mov
or
in
pusha
add
xchg
in
loope
and
mov
gs
cs
lods
mov
pop
and
pusha
sbb
aad
or
call
cmp
inc
in
xchg
es
mov
pop
mov
pusha
xchg
int
sub
mov
ds
fstps
pop
imul
mov
in
jle
xchg
fdivs
jge
mov
dec
sarb
cmpsl
test
xchg
jnp
inc
pminsw
inc
int
push
dec
pop
pushf
test
shll
fnstcw
push
pop
ror
sub
pop
fstpt
icebp
dec
rolb
mov
fwait
repnz
pop
xor
loope
call
add
jo
push
fsts
cmpsb
pop
sbb
adc
mov
jecxz
or
cld
idivl
xchg
jb
inc
sbb
pop
leave
xchg
ror
fs
xor
lahf
sbb
sbb
out
gs
xchg
out
pushf
dec
mov
inc
fucomp
mov
hlt
push
imul
fistps
dec
call
js
cmp
rcl
xchg
in
mov
xor
ret
lret
dec
std
mov
inc
adc
pushf
cmp
and
or
jl
push
adc
add
mov
mulb
jnp
js
pop
test
jp
add
jns
mov
add
dec
aas
insl
in
aaa
inc
mov
sub
push
aam
ds
repz
push
xchg
scas
lahf
stc
mov
arpl
lea
sub
dec
lahf
push
add
loope
and
arpl
xchg
pop
xor
bound
shll
jp
sarb
xchg
std
cmp
push
inc
out
cmp
mov
xchg
ret
dec
xchg
pop
sub
jbe
movsl
pop
ja
ljmp
mov
add
adcb
insb
jg
fs
pushf
leave
or
mov
stc
mov
lcall
mov
les
ja
mov
mov
jnp
push
push
lods
inc
pop
inc
cmp
xor
or
popf
insb
push
inc
das
popf
adc
int
sbb
ret
insb
xchg
outsl
pop
mov
imull
mov
or
pop
mov
dec
outsb
adc
push
arpl
mov
xchg
jg
dec
adcb
jmp
push
lds
push
and
cs
push
sub
push
iret
pop
scas
outsb
mov
push
and
movsl
int3
nop
jbe
and
pop
push
roll
push
or
test
push
dec
test
cmp
icebp
cltd
test
xlat
out
jmp
xor
and
sbb
imul
enter
xor
jbe
push
inc
fwait
in
or
add
mov
add
sahf
or
jle
call
or
jmpw
loopne
xor
xor
dec
xor
loopne
icebp
ss
nop
or
cmp
movsl
add
cmp
test
bound
xorb
test
lods
pop
cvtps2pd
xor
mov
and
push
inc
stos
cltd
push
mov
popf
and
cli
mov
push
nop
sbb
mov
test
push
out
lock
and
mov
sub
dec
xorl
push
jb
aas
out
adc
cld
jg
pusha
adc
and
add
cltd
adc
mov
mov
pop
mov
cld
pop
push
insb
inc
gs
sub
xor
push
xor
in
push
push
insb
push
jp
and
sub
adc
vhaddps
test
sbb
adc
mov
add
xchg
faddl
out
in
out
add
nop
aas
inc
fisubl
mov
lock
and
pushf
adcb
fdivrl
pop
sub
mov
xchg
cltd
inc
push
dec
pushf
stc
push
inc
push
insl
repz
fldcw
in
xor
cmpsl
lahf
call
ret
mov
pop
mov
mov
in
mov
jge
mov
mov
rorl
lea
inc
leave
xor
insl
popa
pop
mov
cmp
sbbb
repz
add
dec
jmp
jb
das
stos
inc
movsb
data16
es
jmp
call
jecxz
or
pushf
gs
push
push
adc
pusha
repz
fidivrs
fwait
or
std
leave
stc
adc
sbb
loope
pop
clc
inc
inc
sub
adc
scas
insb
and
and
cmp
jbe
and
test
inc
push
test
and
fstl
jae
inc
inc
mov
roll
sbb
cld
or
testb
scas
dec
popa
mov
ret
push
subl
add
mov
mov
cmp
mov
sub
jns
mov
clc
sub
adc
call
xor
xchg
bound
mov
add
dec
dec
xor
das
inc
sub
adc
std
stc
jns
imul
or
add
sbb
sbb
xor
sbb
adc
pop
xor
adc
inc
mov
and
mov
loopne
push
or
xchg
xchg
jno
mov
pop
in
in
fmull
dec
in
icebp
dec
gs
pop
movsb
dec
and
stos
cmp
sbb
and
loop
imul
push
jbe
out
test
insl
xor
xor
xorl
fwait
mov
addr16
push
push
pop
je
in
dec
mov
mov
in
mov
aas
add
cmp
out
mov
cmc
jge
sub
ret
ret
sti
sahf
push
inc
popa
cmc
xchg
mov
stc
pushf
push
mov
popf
adc
test
jnp
leave
dec
inc
imul
adc
cwtl
repnz
inc
mov
mov
ficoms
push
adc
fists
jmp
lret
mov
jmp
in
hlt
sub
jno
and
xor
jge
pop
xor
pusha
push
std
inc
or
sbb
je
push
mov
and
sub
sbb
fldenv
sub
dec
addr16
cmp
cmpsb
or
ja
movsb
pop
insl
xor
sbb
xchg
enter
xor
pop
and
mov
cmp
fwait
xor
mov
inc
add
push
push
ja
inc
repnz
shlb
xchg
adc
push
loop
rcll
fs
fbstp
clc
lods
pop
fs
fs
push
and
out
pop
push
in
mov
push
jge
or
jl
fcmovne
pop
cmpsl
jae
inc
lea
cli
lahf
pop
das
xor
notb
addr16
mov
xor
cmpsb
clc
cmp
mov
mov
and
mov
test
pushf
test
adc
clc
push
clc
push
cmpsb
sub
call
clc
mov
pushf
ja
movsl
push
in
int3
pop
lock
shll
mov
mov
sbb
adc
ljmp
in
repnz
mov
movsb
xadd
in
aam
fdiv
mov
mov
mov
or
ret
jge
mov
push
cmpsb
out
sbb
aas
mov
es
insl
leave
mov
pop
call
pop
pop
xchg
xor
shll
pop
aam
xor
xchg
repz
cmc
fcoml
cmpsb
stos
fdivl
mov
adc
lea
mov
inc
loopne
call
les
movsb
enter
scas
scas
lods
or
mov
add
ss
adc
push
or
mov
dec
xchg
mov
sbb
add
mov
stos
imul
inc
jo
in
mov
popa
cmp
aas
mov
inc
or
lods
pop
loopne
fildll
cmpsb
pop
hlt
das
mov
mulb
pop
mov
int
jb
sub
leave
cmpsl
hlt
je
fdiv
test
push
dec
jmp
pop
mov
mov
push
into
rorb
lret
sub
dec
ljmp
jb
inc
movsl
ficoml
sub
push
fldenv
push
loope
scas
cmp
std
lds
push
out
push
xor
bound
out
test
mov
aas
and
mov
enter
insl
loope
je
fdivl
fwait
data16
adc
loopne
loope
aaa
xor
dec
jmp
clc
aas
pop
sub
push
push
mov
or
jecxz
fs
insb
push
sbb
fbstp
and
ret
or
pop
stos
inc
inc
mov
pop
out
push
jo
in
mov
int
inc
and
xor
add
inc
mov
test
jg
sbb
pop
mov
push
xor
js
xor
shr
mov
or
push
sub
lret
push
cmp
unpcklps
ja
xor
inc
fstpl
ret
xchg
das
xchg
pushf
fcom
fs
int3
add
xchg
push
xlat
cmp
test
mov
adc
mov
fs
adc
or
int
mov
adc
scas
in
popf
lcall
mov
shrb
inc
sub
loopne
fcmovnu
mov
cmc
scas
jp
faddl
lods
inc
sub
lea
and
mov
or
sbb
int3
ja
inc
sahf
mov
pop
inc
xor
sub
push
cmpl
jns
push
jg
push
jp
out
lock
cmp
sbb
jecxz
mov
and
hlt
popf
cli
push
dec
mov
lahf
dec
add
test
pop
pop
push
cli
lahf
hlt
push
cwtl
sbb
cmc
jae
mov
in
loope
mov
xchg
dec
repz
les
dec
mov
sbb
imul
nop
mov
and
movsb
cmpsl
inc
mov
dec
pop
ret
aam
mov
aaa
popa
push
jmp
jne
leave
sub
add
shrl
inc
dec
cmp
dec
add
xor
mov
stc
shlb
je
xchg
lret
mov
addl
call
or
aad
push
mov
cmp
cmp
sarl
lods
into
dec
stos
pop
shrb
les
sti
push
jo
jle
movsl
push
cs
loope
adc
mov
mov
sub
xchg
ffreep
xor
pop
mov
xchg
call
nop
dec
sbb
rorl
adc
pop
jno
mov
and
mov
mov
cli
jae
inc
pop
ret
dec
iret
popf
inc
xchg
push
call
daa
jb
xorl
sub
clc
int3
xchg
add
jmp
inc
dec
cmp
movsb
movsl
inc
mov
cmp
loope
aas
push
sbb
fcompl
fwait
popa
mov
test
shrl
sbb
in
inc
test
xchg
xchg
pop
dec
jge
mov
pushf
sbb
mov
lock
daa
insl
cmc
jo
lret
jns
xor
out
jo
pop
jno
push
sub
xchg
xor
sub
mov
lea
mov
scas
jnp
pop
jmp
cmc
sbb
add
repz
push
jle
je
xorl
icebp
mov
popf
xchg
mov
dec
jno
test
aaa
push
cmpsl
lret
or
pop
jno
imulb
pop
shlb
mov
loopne
mov
xchg
rcr
sub
cmp
push
les
lds
push
popf
inc
roll
jecxz
pusha
xchg
add
sbb
xchg
cwtl
pushf
lods
sbb
cmpsl
ljmp
dec
xor
jb
cwtl
fnstsw
das
shrb
mov
test
lock
fdivrs
test
mov
insl
and
ficomps
inc
jmp
test
cmpb
outsl
das
addr16
pop
aad
xor
ljmp
popf
cmp
push
ret
cltd
test
mov
add
adc
rcl
jbe
push
ret
xchg
mov
jle
lahf
fstps
sbb
mov
pop
outsl
cmc
jae
flds
clc
xchg
push
pop
push
jmp
xchg
lods
andl
jne
jp
pop
cmpl
sub
pop
mov
xchg
add
mov
push
icebp
outsl
pop
rorl
out
jae
pop
sahf
mov
scas
in
sbb
jb
pop
fnsave
dec
lret
fldt
lea
shrb
xchg
and
xchg
sbb
lods
jmp
or
mov
pop
jg
pop
inc
jl
subb
iret
call
jg
dec
xchg
adc
bound
scas
shll
data16
cmp
and
pop
xchg
jbe
out
pushf
mov
xchg
push
sub
leave
jge
and
cmc
lret
jp
stc
aas
jl
dec
loope
jp
xchg
leave
daa
hlt
insl
or
stos
movsl
popa
jns
or
xchg
pop
out
enter
sti
mov
cltd
xor
test
aad
lret
mov
push
sarb
out
in
mov
das
jb
pusha
sbb
and
inc
push
sub
loope
sbb
cmp
mov
mov
or
adc
jecxz
dec
pusha
ficoms
mov
dec
in
popf
icebp
cwtl
add
orl
lods
inc
int3
ljmp
or
push
mov
int
push
loope
adc
jp
outsb
ficoms
add
mov
pop
out
mov
sbb
and
mov
jnp
aad
std
pop
mov
cmc
in
cld
fsubrl
scas
sub
add
loop
push
add
xor
mov
gs
add
jnp
in
movsl
shlb
jb
divb
shll
jo
scas
push
lds
shlb
push
leave
cmp
test
fdivrl
inc
or
push
lret
out
imul
movsb
and
insb
jge
nop
aad
xchg
das
dec
xchg
adc
cwtl
mov
add
sbb
pop
dec
ficoml
mov
xchg
mov
and
lret
inc
aas
ljmp
xorb
int
and
xchg
test
pop
test
rcr
lds
sub
cmp
sub
xchg
das
into
mov
mov
dec
push
ds
add
mov
and
loop
and
mov
pop
dec
or
adc
insl
add
mov
aas
jl
add
pop
sbb
or
pop
dec
xor
std
adc
mov
pop
sahf
dec
lret
push
pop
pop
sub
jbe
popa
enter
lock
insb
pop
lods
roll
test
gs
and
mov
movsb
add
in
mov
or
test
adc
pusha
jno
insl
notb
inc
jae
cmc
popf
pushf
fcompl
repnz
cwtl
adc
adc
cmp
inc
xor
jmp
jne
cmp
repz
and
outsl
adc
jecxz
insl
std
jmp
insl
outsb
push
jae
add
shll
ja
pop
adc
aam
fsubs
rolb
xchg
icebp
mov
lret
xor
dec
mov
mov
loopne
test
mov
adc
mov
sarl
cltd
or
sbb
test
mov
mov
jno
out
mov
or
stos
mov
nop
ret
stos
adc
mov
inc
popf
test
lods
xchg
adc
mov
je
subb
xor
lret
mov
pop
insl
dec
stos
mov
inc
mov
andb
inc
push
stos
enter
fsub
aad
idivl
flds
mov
fdivrl
or
or
negl
or
xchg
clc
lds
pop
mov
mov
loop
jne
mov
sub
jecxz
out
test
les
cmp
cmp
mov
lods
hlt
xlat
pop
mov
popf
sub
stos
xor
or
pop
add
ja
movsb
push
mov
inc
push
xchg
pop
or
in
ljmp
sti
stos
nop
xchg
mov
inc
mov
icebp
sub
jge
jnp
mull
jb
sbb
fsubr
outsl
inc
mov
jle
add
xor
ret
sbb
ficoms
int3
mov
cmp
outsb
cmp
push
push
cmp
pop
test
inc
jns
lea
mov
repz
or
lret
into
std
sub
mov
sub
adc
insb
or
push
xor
movsb
out
jl
pop
xor
loopne
sub
pop
mov
popf
lods
sub
mov
mov
push
sbb
push
sub
subl
sbb
sub
adc
lahf
xchg
jnp
shrl
pushw
sbbb
mov
addr16
xlat
sbb
add
pop
jnp
jo
push
xchg
dec
jae
jns
movsl
faddl
push
call
ljmp
cmp
push
into
jmp
push
jns
mov
fldl
repnz
fsubrl
mov
jmp
pop
cld
xor
push
sbb
cmp
inc
dec
inc
mov
xchg
and
loopne
imul
adc
mov
cmp
into
mov
out
mov
lret
jbe
or
and
xor
sbb
jne
adc
nop
arpl
push
stc
push
ds
outsb
sub
cmc
mov
fadd
push
push
jmp
out
dec
inc
xor
js
icebp
test
mov
popa
fnstcw
lds
fisubrl
repz
ffreep
fidivl
xor
cmp
xchg
xor
add
sbb
insl
push
sub
mov
or
lock
mov
add
imul
scas
rcl
jmp
pop
adc
inc
fld
test
sub
mov
mov
stos
ds
dec
fwait
mov
mov
lret
loope
in
cmc
xor
rclb
push
jg
mov
scas
ja
inc
out
iret
jno
pop
jne
push
push
ss
cmp
es
sub
mov
cmc
stos
pop
mov
xor
dec
faddp
icebp
jmp
and
enter
jmp
mov
loopne
xchg
cmp
pop
push
jl
mov
mov
rcrl
xor
cmp
xchg
sbb
push
les
mov
pop
addr16
jp
outsb
xchg
dec
rcrb
mov
mov
cmpsb
mov
jmp
aaa
inc
sti
ljmp
or
ss
fcomi
fwait
jle
fsubrp
or
adc
testb
dec
je
loope
add
iret
jecxz
mov
cltd
sahf
mov
shrl
call
jl
dec
push
or
jbe
or
add
mov
pop
test
gs
out
push
inc
loope
adcb
push
mov
lea
repz
rcl
inc
cmpsb
mov
fbstp
jecxz
mov
xor
ret
aaa
fdivrs
in
or
dec
stos
clc
add
mov
pop
or
nop
dec
or
ficompl
lods
fstl
imul
fs
push
aam
jg
mov
mov
and
xchg
je
mov
inc
xchg
inc
data16
imul
adc
adc
in
sbb
leave
xor
ss
insl
fldcw
inc
jge
push
hlt
xor
loop
adc
push
pop
fwait
inc
addr16
cmp
lds
mov
pop
push
stc
stos
ficoms
pop
leave
divl
sahf
or
jne
pop
clc
sbb
adc
pop
out
dec
insb
insb
outsb
sub
scas
sub
stos
cs
popa
and
pop
pushf
lret
xchg
loope
scas
or
dec
xchg
in
xor
loopne
in
lahf
jns
lret
mov
jo
dec
insb
mov
xchg
in
fstpt
daa
loop
dec
imul
dec
imul
out
adc
jp
jl
push
push
pop
jns
dec
push
mov
out
leave
bound
dec
xchg
faddp
xor
sarl
sbb
or
clc
ret
imul
scas
pop
out
ss
enter
vmwrite
adc
mov
cwtl
xor
pop
out
mov
mov
mov
sub
pop
scas
es
orl
ret
and
xor
insb
cld
and
pop
iret
scas
ljmp
in
loop
shll
mov
adc
add
cmp
cs
cmp
mov
jns
mov
xchg
das
sahf
pop
data16
sbb
popa
out
or
daa
mov
ljmp
mov
dec
pop
fisubrl
inc
sti
sbb
xchg
sub
ds
movsl
or
jb
xchg
sub
jge
orb
fdivrl
out
mov
jge
mov
ret
xchg
xor
push
cmc
mov
dec
fs
nop
arpl
adc
in
jmp
cltd
fisttps
pop
hlt
stos
mov
sub
pushf
out
loope
pop
js
outsb
mov
mov
inc
fisubrl
movsl
test
or
inc
je
sbb
ret
pusha
jl
ret
push
pop
fwait
ret
aam
dec
leave
push
add
inc
mov
jne
inc
dec
sti
stos
mov
xor
pop
add
cmp
pop
push
xchg
mov
lock
dec
mov
cmc
das
sub
jp,pn
std
sbb
adc
repnz
lea
js
outsl
mov
mov
ficompl
xchg
testb
sbb
sub
mov
mov
inc
mov
mov
je
rcrb
cli
dec
arpl
mov
cmp
int3
int3
push
lea
in
mov
inc
loop
inc
ss
in
jmp
leave
mov
call
mov
test
in
jmp
test
mov
xchg
lods
jmp
and
aam
mov
loope
push
and
shrb
adcb
jg
sbb
pop
leave
fnstcw
inc
jge
inc
clc
cwtl
fucomp
lahf
in
add
test
sub
fsubs
mov
inc
leave
enter
dec
idiv
insl
lds
test
in
xchg
sbb
lea
lea
aad
fst
pop
mov
hlt
sbb
pop
mov
iret
adc
cmpb
cmp
dec
in
sbb
fs
outsl
and
cmpsl
out
imul
sub
mov
add
cld
mov
inc
pop
pushf
neg
mov
stos
js
popf
ret
xor
repz
or
fldt
pop
gs
add
stos
fisubl
and
jmp
inc
pop
fwait
sub
mov
pusha
push
imul
fisubl
jl
je
jno
jle
sub
test
or
stos
mov
jo
dec
imul
and
int
movsb
mov
mov
adc
jmp
xlat
add
cmp
and
pop
scas
xchg
dec
aam
lcall
fsts
leave
sub
xchg
cmp
cmp
add
push
popw
popa
pop
and
jne
cmp
push
mov
pop
ret
jae
call
scas
lahf
daa
lcall
xchg
jb
ficoms
test
lea
test
adc
sub
xchg
sub
add
push
int
in
pop
ret
adc
stc
xor
cmpsl
mov
add
mov
pop
in
sub
jge
adc
rcll
cmc
inc
mov
std
xor
out
int3
cmp
dec
or
xor
out
outsl
push
in
loope
adc
mov
adc
sub
cld
push
inc
mov
jecxz
gs
push
setp
sub
cld
imul
cmpsl
dec
jmp
clc
loopne
push
sbb
aam
stc
lret
out
cmc
ret
inc
mov
test
mov
mov
mov
add
push
adc
jae
cmpsb
cmp
cmp
mov
pop
ja
pop
adc
scas
cmpb
aam
sbb
cmc
outsb
or
mov
pop
test
outsb
cli
sub
push
aad
cmp
or
inc
and
ficoms
push
push
test
adc
fmull
jne
mov
lods
inc
mov
dec
adc
and
add
scas
jae
out
fwait
les
sbb
les
xor
hlt
loopne
pop
fwait
nop
ficoms
adc
mov
mov
sub
push
aas
lock
fldenv
and
outsb
repnz
mov
push
sub
lea
sti
xor
sbb
pop
pop
rol
outsb
jg
sub
mov
push
sahf
mov
pop
fwait
jmp
mov
jno
es
sbbl
add
dec
fadd
pop
sbb
call
push
dec
push
mov
mov
dec
test
dec
cmp
sub
pop
push
std
enter
adc
jle
rep
aam
dec
mov
mov
dec
lock
je
inc
cld
cmp
nop
cmp
repz
clc
into
sub
mov
sub
inc
cmp
fwait
cmpl
xor
out
repz
rcr
adc
pop
orb
movb
ret
pusha
inc
sbb
loopne
sub
in
mov
mov
xchg
mov
adc
rcrl
push
rorb
sbb
inc
out
sbb
cmpsb
imul
subb
mov
pop
stos
mov
xchg
stos
ret
push
loope
pusha
clc
fdivr
mov
push
inc
bound
sub
sbb
adc
push
sbb
into
add
iret
mov
jg
cmp
fwait
hlt
sub
daa
icebp
fists
enter
rcrl
mov
lcall
ret
sbb
sub
je
pop
push
shrd
fdivrs
cmpsl
iret
outsl
cld
fwait
add
pusha
std
adc
jo,pn
inc
idivl
jno
int3
pop
addr16
lcall
ret
cmp
xor
into
sbb
subl
lret
or
jns
add
fwait
or
mov
add
xchg
pusha
pop
lcall
mov
jmp
or
addr16
pop
pusha
mov
mov
pop
jae
call
mov
rcr
andl
mov
pop
clc
nop
loop
fsubl
jle
jae
jae
or
popl
cmp
cmpb
lret
jge
mov
or
sbb
in
rorl
sbb
jne
mov
add
jnp
jno
ss
std
iret
fiadds
or
rcr
adc
movsl
ret
and
inc
or
mov
movsl
data16
mov
rcrb
mov
ss
inc
or
xchg
mov
fsubp
jno
ja
and
aad
out
test
mov
sub
test
icebp
andl
nop
jl
mov
ret
add
lcall
filds
xchg
adc
lods
sub
fwait
xor
insb
mov
movsl
ret
push
or
push
scas
push
push
mov
adc
push
arpl
in
int3
insb
push
mov
addl
lock
lock
jno
cli
sbb
xchg
rcr
sti
sub
and
mov
dec
xor
pop
xor
jno
call
push
div
ljmp
mov
and
data16
lods
pop
sbb
sar
push
iret
jo
adc
push
sti
fcmovu
out
push
adc
imul
jecxz
dec
xor
pop
clc
bound
mov
ret
leave
out
shr
mov
subl
les
cmpsl
lret
pop
andl
int
pop
mov
xor
xchg
out
xlat
loopne
add
adc
adc
xchg
nop
mov
int
mov
decb
fstpl
xor
mov
xchg
shr
adc
cmp
insb
push
int3
mov
idiv
pop
xor
cmpsl
push
das
ret
cs
cmc
sub
stos
or
lock
sub
fcomps
pop
xchg
xlat
mov
call
mov
fstl
sbb
push
add
push
daa
add
add
cmp
in
add
sarl
push
enter
pop
into
cmp
pop
sub
or
dec
xor
fbld
cltd
jg
or
pop
pcmpeqb
loope
adc
sub
das
shrb
mov
jno
in
out
cli
pop
mov
out
cmovp
dec
insb
dec
fs
mov
in
jg
fs
jne
ret
mov
push
and
es
je
mov
jbe
jl
jae
into
sarl
and
rol
mov
loop
mov
cmp
inc
xchg
adc
lret
mov
mov
test
test
scas
sbb
lock
pop
fldl2e
push
pop
lahf
mov
jecxz
in
pop
mov
cmpl
dec
sahf
xor
test
sub
icebp
lods
lea
adc
dec
test
and
and
in
sub
or
imul
sub
pop
cs
inc
sub
sbb
std
js
xchg
test
mov
xchg
nop
cmc
call
insb
ljmp
test
repz
pop
push
repz
push
mov
xor
icebp
xchg
addl
rol
push
mov
inc
leave
ficomps
jnp
jo
pop
aaa
clts
fsub
repz
mov
xchg
cmp
xchg
fwait
rcll
mov
mov
rorl
cli
lea
adcl
dec
loop
dec
mov
jb
pop
mov
fwait
sbbl
mov
daa
cmc
push
lret
mov
lock
xchg
mov
dec
aam
scas
add
fstl
or
stc
xor
xor
orb
pop
ss
lret
fcoms
adc
cmp
pop
adc
pop
inc
push
push
shlb
outsl
cwtl
sbb
sarl
loop
push
ret
imul
popf
test
fimuls
rorl
pop
push
std
icebp
xchg
int
jns
fistpl
sub
decl
scas
mov
sub
and
leave
sbb
sub
inc
mov
inc
ret
jmp
icebp
adc
fmuls
mov
push
cmp
rcll
es
adc
aad
lcall
inc
cs
imul
shr
xchg
stos
add
negl
pop
mov
pop
sbb
pop
inc
xchg
repnz
aad
es
mov
dec
jmp
sub
cld
in
mov
or
loopne
xchg
sub
jle
cld
push
out
xchg
and
ficompl
inc
data16
arpl
sbb
jl
aad
rorb
outsl
out
or
push
jae
mov
rolb
movsb
inc
sbb
arpl
cmp
ret
sub
sbb
out
mov
imul
lret
mov
adc
imul
bound
push
enter
lods
insl
addr16
mov
js
lock
loope
jg
xchg
stc
dec
std
inc
idivb
pop
lods
mov
xchg
mov
test
fiaddl
cmpsb
data16
mov
rcll
test
pusha
mov
adc
cmp
jge
daa
lea
icebp
xorl
xchg
sbb
dec
and
clc
jne
notb
outsl
or
loopne
sub
lret
mov
lods
mov
push
lcall
rolb
mov
dec
sbb
jbe
jmp
xor
inc
mov
stos
cwtl
mov
dec
mov
push
clc
mov
ljmp
ret
test
rcll
idivb
fistpll
leave
pop
and
xlat
push
loope
inc
out
cmpsb
inc
xchg
test
push
adc
call
es
xchg
hlt
cmc
daa
xchg
pusha
pushf
lret
test
jecxz
or
lock
dec
or
cmp
add
insl
xor
std
mov
mov
xorb
jecxz
arpl
loope
jno
arpl
negb
sti
sbb
aam
std
ja
jmp
xchg
pop
add
mov
dec
sub
aad
leave
sub
aam
pop
sti
imul
dec
add
and
out
cmp
lods
mov
sti
movsb
xchg
stc
sub
cmc
mov
scas
lock
lods
lret
dec
movsb
imul
insl
cmovae
repz
popf
add
lea
call
ljmp
les
mov
push
imul
dec
insl
enter
jg
xchg
jg
dec
aam
inc
jmp
icebp
mov
push
pop
sbb
and
inc
out
push
lcall
inc
outsl
push
cmp
mov
or
adc
push
call
int3
dec
inc
push
add
icebp
fisubl
or
or
xchg
outsb
ds
mov
xor
push
pop
arpl
mov
les
sbb
push
xor
mov
fidivs
in
adc
jne
jl
in
or
repnz
ss
and
mov
div
lret
jl
or
dec
testl
push
cmpb
popf
packsswb
jae
mov
mov
dec
xor
in
nop
rcrl
dec
jl
dec
bound
idivl
sarl
pusha
jbe
pop
das
mov
pop
mov
or
add
rcrl
shr
add
outsb
orl
hlt
jnp
pop
movsl
jnp
repnz
shll
adcb
pusha
call
add
push
mov
inc
jg
mov
dec
xchg
test
push
movb
and
stos
fsts
pop
push
lret
jbe
adc
sub
test
and
js
or
lcall
xor
push
nop
push
cwtl
xchg
fmull
in
push
pop
and
add
lret
pop
pop
movsl
dec
inc
and
imul
test
stos
pop
lahf
dec
xchg
in
data16
push
xor
pop
jmp
sbb
repnz
icebp
xchg
addr16
lret
arpl
ss
push
xlat
sbb
faddl
fadd
pop
repz
jp
dec
das
cmp
aad
mov
and
push
dec
sbb
fadds
add
test
fnstsw
cmpsb
cmp
sbb
jmp
into
mull
and
xchg
scas
push
ljmp
sbb
cmpsb
cmp
mov
das
pop
xchg
push
inc
lret
dec
call
nop
mov
jecxz
dec
fwait
into
sbb
or
idivb
outsl
inc
jp
in
cmp
cwtl
cld
loop
push
mov
cmc
negb
ret
es
std
hlt
cmp
adc
and
mov
std
adc
fstp
pop
mov
cmp
mov
cmp
push
clc
dec
push
insl
jne
sar
inc
testl
iret
and
dec
or
inc
loop
je
and
sbb
cwtl
sub
and
and
or
xor
in
add
scas
call
push
jb
sti
dec
scas
inc
icebp
fisttps
mov
rcl
push
jns
addl
movsl
add
add
int
cs
sbb
lret
jae
fsts
shrb
cmpsl
mov
ret
jmp
push
xchg
and
into
sbb
cmp
pop
pop
mov
pop
mov
stos
mov
ret
dec
insb
jns
les
jecxz
lea
into
mov
mov
adc
mov
xchg
in
dec
in
lret
and
pop
idiv
push
out
mov
loop
lret
xor
mov
data16
test
shr
pop
shr
ljmp
fistl
pop
out
int3
push
inc
gs
xchg
leave
pop
dec
insb
repnz
push
je
jp
mov
sbb
adc
mov
add
gs
aam
jnp
xchg
xlat
mov
push
cmpsb
push
push
icebp
jecxz
mov
dec
mov
mulb
jp
daa
pop
adc
sahf
es
xchg
pop
or
popf
pushf
and
stos
nop
push
sub
and
dec
xchg
mov
sbb
scas
lock
pop
aad
inc
inc
loopne
sub
sbb
mov
cli
repnz
ljmp
cmp
pop
xor
cmp
scas
mov
inc
mov
loope
adc
shr
and
or
cmp
sbb
sbb
sbb
jle
fucomp
scas
movsl
lock
sbb
dec
pop
pop
mov
popa
jo
iret
das
and
cld
dec
daa
stos
imul
and
and
jl
dec
sbbb
push
adc
sbb
popa
rcrb
insl
push
sub
cmp
xor
cwtl
dec
adc
jg
ret
dec
out
cmp
mov
mov
icebp
push
and
or
xchg
sahf
mov
and
into
mov
out
aam
lods
mov
mov
lcall
loope
je
ss
prefetcht0
dec
sbb
add
adc
jge
xor
mov
or
xor
fnsave
ds
mov
ds
xchg
popa
inc
pop
es
jno
in
xlat
das
pop
data16
xor
pop
sub
pusha
hlt
lea
shr
in
insl
sbb
fldt
shrl
cli
cmpsb
lods
dec
inc
and
mov
jns
loope
cli
xor
cltd
pushl
pop
repnz
cltd
mov
out
sub
pop
das
mov
push
lret
inc
clc
jp
jbe
push
out
das
sub
jg
and
cmp
js
mov
pop
cmp
dec
divb
lahf
dec
jmp
mov
dec
xchg
or
movb
xchg
and
out
adc
imul
mov
ds
pop
je
pusha
or
mov
cmpl
and
jno
lahf
xlat
lods
js
mov
add
xor
cld
std
ljmp
aaa
cmpsl
lock
mov
cmpsb
icebp
xchg
jge
cmpsl
ss
out
sub
cs
pop
cli
jmp
sbb
lds
adc
sbb
cmp
insl
jmp
aam
pop
xchg
xor
test
jmp
sti
xchg
mov
mov
repz
and
aam
aad
ds
mov
mov
movsl
lds
pop
push
pop
fsubrs
outsb
inc
popa
lcall
push
ret
jns
mov
adc
pop
cmc
rcr
dec
sub
dec
hlt
pop
sub
jnp
movsb
std
out
push
push
sub
mov
hlt
aad
sbb
pop
test
dec
sbb
push
lods
mov
aad
adc
mov
in
adc
push
jle
outsl
pop
mov
xchg
addl
push
ret
xchg
add
int3
inc
int3
mov
push
lods
out
divb
pushf
sar
pop
mov
sbb
fadds
sbb
pop
sbb
mov
dec
in
imul
xor
lahf
or
mov
cmp
movsb
adc
and
lahf
jb
je
xor
insl
dec
shr
icebp
pop
push
dec
jmp
xor
addr16
add
testl
into
or
mov
sbb
push
insl
test
cltd
dec
and
or
test
add
mov
push
out
xchg
push
push
xor
sbb
ljmp
lods
add
xor
add
test
sub
out
push
and
mov
jecxz
jnp
xor
movsl
mov
sbb
lret
lods
fdivrl
fdivrl
mov
jg
mov
cltd
pop
cmp
xor
lods
add
push
pop
sbb
inc
mov
jo
or
push
out
jno
lds
imul
inc
xor
shll
out
jne
jo
mov
inc
jns
mov
dec
aas
mov
fsts
and
call
cmp
push
mov
jo
push
cmp
in
or
adc
cmp
jb
rcl
lahf
mov
and
arpl
stos
fnstsw
in
or
fwait
mov
dec
out
jnp
outsl
out
pop
or
mov
mov
xchg
aad
ret
mov
pop
pushf
mov
inc
mov
jbe
lock
scas
inc
mov
sub
push
pop
inc
cld
pop
loop
pusha
ret
mov
shll
fldln2
fwait
mov
dec
pop
sub
pop
jnp
xor
sti
ret
xor
or
mov
xchg
scas
push
and
xchg
sub
mov
mov
out
push
clc
aam
pop
cmpsb
fptan
adc
stos
jo
jecxz
fsubr
cmp
jmp
sub
in
mov
dec
popa
xor
jp
dec
test
or
movsl
loop
inc
cmp
imul
out
cwtl
sub
sbb
idiv
jb
mov
sub
data16
out
or
cmpsl
scas
psrad
sti
lods
mov
xchg
jbe
out
mov
fldenv
imul
inc
jg
push
xlat
int
mov
cmp
sbb
jne
ljmp
pop
insb
add
lods
mov
and
cwtl
sub
pop
movsb
jle
in
int
push
jge
aaa
push
daa
jmp
cli
inc
out
popa
aad
pop
add
sub
pop
sarl
adc
mov
add
cld
add
into
mov
mov
inc
bound
movsb
dec
add
or
xchg
xor
xchg
push
xchg
scas
test
push
mov
or
subl
push
jns
cmpsl
inc
mov
or
ds
mov
ret
insb
stos
mov
mov
add
push
ds
pop
or
push
imul
mov
leave
pop
in
addb
in
sub
hlt
out
adc
adc
jl
ret
sub
lret
xchg
mov
test
call
aaa
out
insb
cld
xor
iret
inc
jl
lock
add
cwtl
cmp
popf
int3
dec
data16
inc
inc
add
leave
sub
int3
or
es
out
lcall
out
sub
dec
dec
mov
push
pushf
js
dec
mov
scas
iret
mov
push
sbb
loopne
xor
lret
mov
andb
or
jne
mov
jno
adc
push
clc
jno
repnz
mov
and
jae
out
jb
ja
dec
sub
lahf
xor
adc
jns
or
cmp
push
push
cmpsl
aaa
jmp
xor
or
sbb
lcall
sti
mov
mov
pop
dec
test
cmp
xor
jle
out
inc
enter
stos
out
leave
test
ss
pop
fldcw
insb
mov
mov
in
mov
repz
xchg
add
and
lret
data16
ror
faddp
sub
inc
xchg
out
cmp
lods
sub
movsb
pop
clc
dec
xchg
gs
mov
repz
pop
and
jg
sbb
dec
popf
and
repz
roll
jmp
fdivs
shrl
test
repz
fldpi
mov
mov
push
cmpsl
mov
addl
addr16
scas
aas
bound
aaa
mov
xor
pusha
push
cmc
loop
aad
fcmovu
dec
stc
ljmp
jmp
sbb
popf
pop
jle
mov
imul
jno
stos
mov
sub
scas
jge
bound
jmp
jno,pn
das
shll
fimull
pop
clc
jp
lcall
jp
loopne
cmp
xor
shr
push
popa
lds
fldl
sbb
je
xchg
and
push
jb
dec
lods
push
jns
pushf
mov
inc
insl
lds
mov
mov
add
push
push
fldt
and
cmp
mov
push
aad
add
idivb
mov
add
mov
insl
lahf
testl
hlt
stos
fs
loop
mov
shl
test
test
sub
call
outsb
add
cmp
ret
int
shl
mov
and
xchg
test
add
xorl
sbb
pop
lcall
pop
xor
xor
mov
pop
push
mov
cltd
mov
aas
imul
mov
xor
enter
test
aas
mov
add
cmp
pop
xchg
shrl
add
dec
mov
in
lds
pop
mov
arpl
mov
popa
cmp
push
lcall
ja
sti
fisubl
pop
xchg
pop
data16
lret
inc
push
xor
inc
xchg
rorb
sbb
push
ja
int3
jb
mov
je
pop
mov
adc
fs
jmp
rcl
mov
add
movl
xor
mov
das
pop
bound
mov
faddl
mov
pusha
in
test
pop
and
sahf
jae
mov
mov
sarb
pop
cmp
enter
push
adc
xchg
jo
mov
push
decl
adc
xor
shrb
ret
dec
or
mov
sbb
xchg
adcb
cmc
mov
xchg
sub
aad
icebp
and
pop
xchg
lea
daa
push
hlt
leave
jne
or
sub
or
aad
cs
stos
adc
mov
repz
lcall
cwtl
inc
jmp
adc
jns
into
jp
bound
cmp
mov
fs
push
sbb
cld
les
cmp
fstpt
scas
fmul
xchg
sbb
jne
mov
sbb
jb
mov
push
in
jecxz
cmpsb
inc
sub
fsubl
jmp
add
jmp
inc
xchg
jns
dec
and
sahf
test
sub
gs
xor
mov
pop
bound
pusha
addr16
adc
lret
stos
jmp
inc
lahf
sub
xor
fstl
add
ss
dec
loopne
fwait
jno
xor
aaa
adc
loope
in
or
aad
dec
mov
mov
notb
and
sbb
pop
hlt
xchg
jno
fwait
jno
rolb
ljmp
addr16
lea
dec
das
mov
popa
add
andl
pop
jns
lds
cmpsl
outsl
std
cmp
test
aaa
xor
cld
insl
fstpt
test
imul
je
mov
add
hlt
repz
lods
mov
adc
jge
iret
jp
ret
jmp
push
and
test
test
les
push
push
push
pop
ss
inc
and
lods
inc
movsb
dec
or
sub
gs
push
adc
and
push
outsl
dec
cmp
ret
shlb
xchg
inc
ds
mov
xchg
insb
mov
cld
dec
lods
nop
jnp
mov
cmpsl
dec
push
scas
cmpsb
jb
out
sbb
cmp
xor
or
popf
in
lahf
cs
mov
adc
mov
ja
insb
jle
jp
cs
repz
stc
aad
je
ret
out
pop
out
daa
mov
movsl
insb
int3
cmp
int3
xor
mov
ss
push
sub
jns
inc
xor
sub
dec
ds
cmpsb
fmull
xchg
outsl
cmp
and
push
xorl
xor
xchg
imul
adcb
mov
imul
cmp
sub
fimuls
loope
les
and
and
ljmp
sub
cmc
mov
popl
cmpsb
mov
pop
fsub
pop
sbb
cmc
adc
lods
push
repz
or
scas
arpl
mov
sub
pop
insb
popa
add
cld
mov
add
mov
jns
rcll
iret
and
mov
popf
push
mov
subb
push
or
mov
cmp
push
sub
call
iret
sbb
inc
punpckldq
icebp
pop
push
fimull
mov
xchg
push
test
jo
daa
pushf
mov
into
nop
mov
arpl
add
mov
ja
mov
mov
and
mov
scas
dec
push
sbb
out
scas
cmp
push
xchg
out
ret
lret
popf
decl
mov
iret
pop
jb
mov
mov
insb
out
call
xor
cmpsl
das
rep
mov
mov
lea
cwtl
jl
sub
fmull
mov
repnz
pop
mov
cltd
sbb
adc
pop
mov
push
es
push
mov
mov
pop
bound
mov
mov
leave
push
and
notl
imul
rcll
push
inc
ds
push
jb
inc
dec
lret
lcall
lret
lea
dec
jg
and
mov
sbb
repz
xor
mov
and
cmpsl
lahf
lods
dec
incb
int
bnd
stc
cmc
pop
mov
add
ds
sub
aad
inc
loop
push
pop
stc
jl
xchg
sahf
xchg
out
pop
loope
mov
jae
sub
cmc
lds
loop
add
mov
sub
insb
lods
ret
jp
fnsave
mov
push
lahf
mov
mov
fnstcw
mov
jp
frstor
popa
fwait
lret
jle
and
std
outsb
loope
int3
imul
jne
mov
aad
imul
xchg
lods
cwtl
rcrl
dec
movsl
sti
out
push
push
xlat
mov
jns
add
test
jo
push
push
or
mov
inc
adc
sbb
mov
mov
imul
mov
test
mov
jae
jbe
and
insb
stos
push
cs
sub
cltd
mov
push
jno
or
xchg
nop
insb
adc
jmp
addr16
ds
sbb
inc
cli
les
push
mov
push
into
adc
pop
adc
subl
push
ljmp
pop
add
add
mulb
or
lods
or
or
rcl
adc
xor
or
sbb
xchg
popf
xchg
pop
mov
sbb
pop
adcl
in
pop
in
out
sbb
inc
out
mov
shll
xor
int3
mov
mov
jo
jo
cwtl
jns
fnsave
add
imul
sub
insb
das
jne
lcall
xchg
or
mov
push
mov
xchg
adc
and
xlat
fisubl
dec
and
cmp
add
pop
xchg
repz
mov
into
sub
sub
jmp
imul
ljmp
stos
cmpsl
xor
cmp
mov
pop
adc
je
mov
sub
hlt
dec
jne
pop
lods
cmp
add
jmp
dec
lret
movsb
mov
cwtl
dec
fmul
popa
mov
out
or
or
cmpsl
cmp
or
mov
push
aaa
mov
jecxz
add
sub
push
inc
or
gs
sub
dec
ret
cmp
lahf
cmp
out
cmp
jns
cmpb
push
mov
notl
xor
das
adc
pop
jae
mov
int3
mov
nop
xor
arpl
inc
jo
lret
mov
mov
repnz
adc
pop
jno
cltd
inc
ja
sbb
sbb
popa
mov
cld
xchg
pop
mov
je
mov
nop
adcb
dec
loop
lods
add
lret
insl
fs
cmc
dec
sbb
and
bound
sub
or
notl
or
daa
clc
rcrb
or
ljmp
in
or
xchg
sub
hlt
cmp
add
sub
clc
cld
stos
push
or
ljmp
xchg
int3
dec
leave
cmpsl
jge
adc
jo
adc
stos
push
dec
sbb
andb
add
cmpsl
daa
cltd
mov
inc
hlt
out
push
sbb
mov
lret
fstps
out
adc
jecxz
test
hlt
dec
je
ljmp
test
mov
cmp
ret
and
lret
mov
sbb
popl
je
sbb
jp
xchg
add
sub
fimuls
xorb
daa
outsb
ret
add
leave
sub
xchg
arpl
sbb
cmp
jo
inc
lahf
imul
cmp
push
xor
or
jle
dec
fcmovu
std
add
mov
mov
push
xchg
inc
mov
faddl
inc
push
shl
bound
dec
dec
cmp
jg
loope
mov
add
mov
les
jb
test
js
out
int3
notb
fcomi
cwtl
sbb
hlt
addr16
fldcw
fcompl
xor
shll
ret
call
mov
add
aas
pusha
add
cltd
ss
cmp
nop
out
cltd
cmp
shlb
fidivs
cmp
mov
sub
cmpsb
mov
imul
mov
push
sub
push
pop
fdiv
cltd
stos
sbb
cwtl
insb
ljmp
lods
sub
testb
pop
incl
jnp
and
cmp
enter
movsl
inc
push
sub
pop
or
scas
imull
xchg
pop
xchg
lods
jecxz
ret
icebp
ficoms
int3
bnd
iret
xchg
out
cld
cmp
lea
or
int3
and
repnz
add
cmpsb
sbb
add
cmp
adc
aaa
push
push
dec
dec
mov
and
xlat
and
lea
lods
test
pop
in
mov
push
xchg
jns
ss
adc
or
jae
mov
sbbl
ljmp
lcall
dec
lret
push
xchg
gs
testl
jge
push
mov
mov
in
ss
stos
cwtl
jge
pop
aam
decb
mov
push
jmp
sub
ja
push
pushf
push
sbb
std
nop
xor
push
dec
inc
dec
call
cmpsl
mov
xor
xchg
inc
xor
hlt
es
mov
mov
scas
repz
in
jle
mov
sub
in
xor
push
cmpsl
and
mov
adc
fnstcw
push
push
cwtl
pop
sbb
mov
in
aas
push
mov
push
jp
add
xor
jmp
ljmp
lea
mov
jae
mov
sbb
into
pop
mov
or
outsl
mov
jnp
fwait
ret
or
call
add
xchg
enter
cmpb
xor
pop
fstpl
sti
pop
mov
mov
mov
mov
ja
add
xchg
in
repnz
mov
mov
cmp
outsb
sbb
push
mov
fistpl
adcb
dec
or
out
pop
outsl
or
jle
pushl
int
pusha
adc
pop
rcrb
dec
pop
loop
iret
jno
ljmp
sub
mov
xchg
jmp
les
add
cmpb
rcrb
ljmp
jbe
adc
into
fs
inc
fwait
mov
fdivs
arpl
lret
ja
stos
mov
mov
jmp
aad
lock
into
insb
test
dec
in
jne
dec
sub
movsb
sub
cmp
movsl
dec
mov
iret
mov
ds
fwait
loopne
sbb
add
lock
xor
jecxz
mov
test
outsb
ds
jb
sub
outsl
mov
sbb
mov
std
inc
enter
adc
or
stos
sbb
pop
or
aas
movsl
sbb
test
dec
and
sti
and
lcall
es
testl
jg
imul
shlb
mov
test
xor
xor
jg
jmp
adc
cs
xchg
js
jo
mov
dec
mov
sahf
clc
sbb
mov
mov
mov
outsl
mov
ja
mov
sahf
xchg
sub
pop
cltd
gs
push
insl
cmc
mov
or
xchg
inc
adc
sub
inc
aas
push
mov
xchg
daa
mov
iret
inc
loop
and
ror
aaa
adc
pop
hlt
incl
fisubrs
and
jcxz
dec
lahf
pop
sbb
filds
popa
push
test
jge
in
insl
xchg
dec
cmp
dec
loopne
add
cwtl
outsb
xor
jmp
push
add
mov
dec
xchg
gs
call
outsl
xchg
xchg
push
rcr
jno
adc
je
jnp
dec
or
xor
pop
scas
and
ja
mov
sarb
jne
outsl
cli
push
stos
aam
push
hlt
aam
popf
push
leave
mov
dec
lahf
sarb
xlat
leave
jp
pop
test
cmc
repnz
movsl
pop
and
cli
push
lea
in
mov
test
mov
loopne
in
je
xor
cmp
lods
push
outsl
and
push
ret
jp
addb
call
mov
mov
ds
jns
mov
cld
fsubs
dec
ja
push
mov
and
cld
ss
sti
fmul
cmp
out
inc
sbb
stos
dec
in
lret
mov
jmp
xchg
and
or
cmpb
int
sub
mov
mov
jecxz
iret
push
out
fwait
sbb
pop
int3
and
pop
cmp
into
mov
dec
into
xchg
xchg
repz
fidivrl
or
xacquire
xchg
fistpl
lds
bound
adc
jl
inc
rcr
cmpsl
mov
sti
cwtd
clc
mov
rcrb
sub
adc
xchg
and
jl
popl
sub
sbb
ficompl
sub
cmpsl
xor
pop
call
sub
test
and
push
pop
jnp
pusha
mov
fisubrs
adc
or
push
push
mov
xchg
scas
cmc
inc
mov
dec
xor
lods
dec
je
or
inc
in
jmp
xchg
push
mov
popf
imul
ret
inc
scas
dec
sarl
lret
jns
mov
jns
clc
mov
push
mov
call
pop
pop
sbb
xchg
mov
dec
adc
mov
std
push
dec
adc
ds
outsl
inc
rcrb
xor
sub
insl
dec
scas
xor
popf
sbb
arpl
xchg
hlt
xchg
imul
clc
test
add
add
push
ds
push
mov
pop
sbb
mov
push
jg
sub
addr16
fsubs
adc
dec
outsl
push
push
xchg
lcall
inc
mov
arpl
adc
into
push
in
repz
xchg
enter
or
pop
lret
addr16
mov
adc
dec
pop
imul
mov
out
jbe
popa
cmpsl
pop
das
add
jle
adc
jb
push
test
pop
fadds
push
dec
and
dec
mov
enter
lahf
ljmp
nop
fisubrs
das
adc
dec
mov
push
gs
xlat
addl
mov
fstl
push
jg
push
call
add
pop
data16
repz
js
push
pop
clc
fstpt
mov
and
xor
out
fidivrl
sub
add
pop
mov
inc
outsl
jbe
dec
add
cwtl
iret
push
into
in
and
push
adc
ret
pop
lret
inc
jae
or
shufps
mov
jg
mov
repz
in
mov
jbe
mov
les
push
push
adc
test
ljmp
sbb
inc
mov
add
mov
das
jge
jp
mov
push
nop
in
ds
sbb
incl
aaa
jmp
mov
push
mov
dec
and
xchg
mov
jmp
mul
mov
test
sahf
push
xor
aad
notb
sar
mov
xor
and
mov
out
mov
out
jp,pt
cld
lret
lret
fildll
test
lock
fisubrs
cli
mov
adc
lods
cmp
fsts
fidivrs
lock
push
bound
loope
out
loop
pop
cli
and
int
sahf
fnsave
jge
jbe
push
outsl
jnp
out
call
iret
jbe
in
pop
lds
rorl
test
test
mov
sbb
pop
or
cwtl
and
sbb
or
rcr
inc
push
adc
adc
inc
cmpsb
cmp
xchg
adc
clc
shlb
mov
jmp
mov
dec
inc
mov
mov
bound
xlat
sub
clc
jb
adc
test
xor
dec
xchg
adc
mov
rclb
fwait
imul
dec
inc
push
outsl
repz
mov
idivb
xchg
addr16
bound
xor
add
dec
out
hlt
fnsave
push
or
cmp
add
mov
jg
movsl
lret
pop
dec
mov
aad
test
fimull
jl
add
xor
pop
dec
pop
repnz
loopne
or
push
inc
insl
xor
test
cmpsl
bswap
rol
pop
add
ror
fdivrs
fdiv
adc
filds
cli
mov
es
mov
jae
stos
push
mov
lret
jge
daa
in
xor
jae
xor
lahf
push
push
mov
nop
mov
lea
dec
cmc
sbb
aad
push
mov
out
stc
insl
adc
pop
mov
xchg
or
loope
push
xchg
cld
pop
adc
loope
lret
mov
das
cmp
arpl
cli
call
cmpsb
push
inc
dec
push
in
add
aas
mov
add
aad
push
int3
or
stos
call
xchg
and
adc
and
gs
inc
loope
cmpsl
aam
sahf
cmc
enter
pusha
cs
popf
sti
mov
dec
pop
push
cwtl
adcb
pop
and
xchg
outsl
pop
shrl
pop
or
test
lahf
ja
popf
xchg
sahf
leave
sbb
mov
jle
sbb
xor
adc
sbb
push
push
lods
js
add
cmp
jmp
jp
jecxz
pop
pushf
xchg
daa
test
xchg
pop
fisubl
pushf
stos
jns
mov
insb
xlat
cltd
sti
sub
in
mov
insl
inc
jb
daa
dec
lea
xor
xchg
fcoms
lret
outsb
cmp
out
xchg
push
ja
out
test
std
push
pop
push
cmp
push
adc
popa
out
xlat
cmpl
pop
xchg
adc
test
idivb
jb
adcb
push
xchg
fwait
popf
inc
sub
jo
adc
mov
xchg
arpl
jmp
sub
rcll
cmp
xchg
das
jae
das
sbbl
enter
add
inc
cmp
adc
pop
or
mov
lret
add
jmp
ds
popa
int3
hlt
pushw
or
jecxz
sbb
xchg
les
adc
mov
lods
clc
shll
andb
pusha
mov
mov
pushl
je
stos
ss
add
push
pop
and
jle
rcll
or
pop
mov
loop
fsubs
cmp
jl
pusha
mov
mov
add
sbb
iret
pop
lret
sbb
adc
push
lds
div
dec
dec
test
repz
mov
iret
lea
test
pop
inc
into
xchg
call
sub
sub
das
lods
es
aas
jne
add
inc
mov
mov
cmpsl
cs
and
mov
mov
dec
push
jno
jmp
adc
xor
jp
cwtl
test
pop
inc
stc
pop
push
out
repz
xlat
xchg
sbb
call
vmovd
mov
out
and
jno
fwait
popa
pop
sbb
mov
mov
clc
mov
sbb
lcall
ret
mov
lret
mov
mov
loope
lods
data16
notb
in
orb
mov
push
pop
ret
mov
in
flds
sub
lds
pop
sahf
ret
cmc
cmp
sarb
cld
and
in
jno
sub
jns
mov
popa
and
rorb
dec
inc
and
scas
xchg
addr16
cmp
dec
cmpsb
call
mov
test
or
fs
pop
add
sti
scas
mov
push
leave
jp
cmpsb
mov
aam
cs
xchg
mov
push
or
pop
cmp
test
imul
cltd
aad
jns
or
mov
cmp
mov
dec
mov
cltd
bound
mov
lcall
mov
aad
lods
mov
paddq
dec
push
inc
rol
js
jae
arpl
in
sbb
mov
xor
cmp
jae
in
dec
enter
out
push
mov
push
push
add
nop
xchg
push
into
out
xchg
or
push
sbb
cmp
loope
cmpl
sahf
jp
adc
sysret
push
inc
cltd
orl
jmp
dec
mov
push
add
jno
cmpsb
test
aam
popa
adc
popa
push
int
dec
mov
clc
fildl
movsb
adc
sbb
jno
or
mov
insl
sbb
popa
pop
xchg
pop
jne
jns
sub
mov
add
push
mov
insb
jle
lahf
gs
cmpsl
xor
adc
loopne
mov
mov
jne,pt
shrl
aam
in
into
dec
pop
xlat
push
mov
int
les
nop
into
adc
sub
push
jno
mov
lret
ror
movsl
ret
xchg
idivl
call
xor
mov
sub
push
dec
pop
ja
fildll
es
jp
push
mov
clc
mov
jmp
push
xor
ljmp
mov
lret
nop
jno
cltd
dec
bound
mull
int
lret
in
jno
outsl
jmp
sarl
jmp
push
popa
mov
cmp
push
mov
lock
mov
loop
sbb
cld
adc
std
hlt
out
push
adc
mov
cmpsb
das
sahf
xorb
loop
mov
mov
xchg
hlt
clc
add
cltd
pushl
ret
xchg
xor
xchg
xor
mov
rcrl
sarl
adc
xchg
test
xchg
xchg
lret
scas
jbe
mov
outsb
sub
adc
pop
inc
insb
imul
adc
orb
je
inc
push
sbb
xchg
jnp
mov
mov
push
pop
repz
mov
leave
fcomip
lahf
xchg
jg
mov
dec
imulb
cmp
lods
in
arpl
jo
mov
mov
inc
jge
andb
mov
lds
in
stos
and
dec
mov
add
adc
dec
call
ljmp
push
movsb
jbe
fsubp
fnstcw
fcmovu
out
in
push
es
mov
das
mov
int3
mov
cmc
cmp
pop
daa
ja
negl
negl
test
mov
cmpsb
jmp
pop
or
loop
lock
push
push
insb
sub
outsb
pop
mov
test
loope
js
scas
jl
shll
jg
push
pop
xor
inc
cmp
call
cmp
cltd
enter
or
roll
jmp
xor
inc
sub
int
outsl
add
mov
ret
in
and
xchg
mov
xchg
sub
xlat
std
arpl
fwait
leave
outsl
hlt
and
lods
xor
dec
dec
add
std
inc
jne
dec
cmp
adcb
ja
inc
ss
cltd
fdivrs
cmc
sbbb
mov
jo
loopne
insl
cmp
loope
mov
sbb
daa
ret
and
mov
mov
scas
mov
mov
mov
aas
std
push
pusha
es
xchg
xchg
in
add
sbbl
pop
fsubrs
jnp
push
and
jp
mov
addr16
imulb
movsl
inc
push
sbb
movsb
out
pop
sti
xchg
sbb
repz
jmp
lock
inc
xchg
adcb
addb
push
mov
imul
jecxz
imul
sbb
and
andb
and
push
inc
mov
dec
ds
xchg
sbb
sub
and
movsb
ljmp
aas
push
sbb
adc
dec
int
sahf
adc
jg
testl
and
cmpsl
add
mov
mov
add
mov
flds
testl
repnz
pop
arpl
cwtl
cmp
lea
cmc
or
cmp
inc
and
std
or
jmp
inc
sets
test
stc
cmp
cmp
xchg
ret
lahf
addr16
pop
pop
aas
lods
xchg
faddl
xlat
mov
and
hlt
jb
pop
sbb
pop
movsl
dec
cmp
mov
push
fstl
loop
test
mov
and
push
push
fcoms
mov
cmpsb
jae
leave
dec
fisubl
xor
hlt
mov
lcall
adc
sub
xor
test
lcall
dec
fmull
xchg
mov
ficoms
repnz
and
popf
push
mov
add
lods
negb
std
shrb
aas
insb
pop
cmpsl
and
lods
ret
xlat
dec
mov
cmp
mov
and
push
jge
aam
es
mov
dec
xor
sub
adc
das
pop
adc
xor
test
inc
push
cmpsb
sahf
ret
movsl
jo
insb
stc
int
fists
cmp
jno
and
xchg
outsb
outsl
rcrb
xchg
fisubl
jl
sbb
dec
daa
adc
pop
test
add
test
add
mov
cltd
push
jmp
div
pop
push
pop
daa
mov
xchg
fs
and
test
mov
mov
fsubl
hlt
rcll
xchg
js
mov
or
pop
push
in
mov
in
ds
mov
ljmp
inc
jbe
roll
pop
cmp
pop
cli
sbb
sahf
stos
jae
not
sbb
fcomi
or
stc
mov
jmp
negl
lret
mov
fsubl
cmpsb
inc
xchg
mov
xor
and
jo
in
push
imul
mov
je
scas
mov
mov
and
in
push
or
lret
cmpsl
mov
icebp
data16
pushf
sbb
insl
mov
mov
sbb
lock
xor
and
push
jl
push
nop
mov
ficoml
add
push
test
imul
xchg
push
mov
shl
mov
out
subl
jmp
lret
mov
add
fwait
jg
xchg
movsl
adc
jbe
mov
or
fimull
fst
pop
js
rcll
and
xchg
pop
xchg
xchg
push
mov
lock
xlat
mov
adc
loop
cmc
xchg
fildl
sub
cmpsl
fistpll
imul
inc
aad
ret
mov
fucomip
and
or
sbb
cmp
aas
lds
fmull
jno
ljmp
adc
dec
cmpsl
and
inc
test
pop
imul
push
mov
sub
add
ljmp
mov
mov
loop
sbb
aas
pop
aas
dec
pop
mov
push
jecxz
adc
mov
dec
popf
inc
ret
das
and
adc
jo
xor
xchg
ja
ss
adc
pop
adc
into
inc
jbe
adc
or
mov
mov
fwait
add
out
lret
fsubp
cmpsl
popf
and
outsb
orl
dec
sti
lcall
sbb
bswap
daa
pop
into
out
push
inc
push
xor
and
dec
adc
aam
popa
pop
jmp
or
add
mov
out
push
lds
lods
imul
lods
pop
pop
mov
push
mov
xchg
pop
imul
shll
jbe
sbb
loope
int3
inc
push
xor
adc
cmpsw
imulb
outsb
das
mov
sahf
mov
mov
inc
in
and
insl
sahf
loope
mov
or
add
mov
fsubrs
pusha
lret
adc
negb
cwtl
add
out
push
dec
sbb
sbb
mov
adc
dec
lea
cmpsb
add
sub
repz
jb
dec
in
dec
ret
popf
ja
cmpsl
and
dec
or
push
movsb
add
jbe
loope
xchg
fs
or
push
mov
inc
xchg
test
in
push
lods
push
lods
rol
sbb
xchg
int3
sahf
cmpb
lret
dec
adc
sbb
lahf
pop
fstps
add
sti
ss
mov
call
add
mov
hlt
lock
jle
jmp
das
neg
or
sbb
cmp
pusha
mov
int
les
aas
lock
xor
add
inc
mov
and
inc
movsl
es
adc
test
jns
inc
int3
and
jae
add
mov
sub
out
xchg
out
jecxz
filds
cmp
mov
mov
mov
or
xchg
push
mov
out
test
dec
add
rol
enter
add
in
imul
jb
sub
sub
and
sbb
add
rol
fstps
jno
cltd
cmp
lret
xchg
sub
pushf
incl
and
hlt
lret
or
dec
hlt
in
insl
in
pop
mov
fiadds
dec
enter
xchg
imul
sub
popf
popf
or
mov
mov
sbb
mov
push
jl
xchg
and
mov
lahf
xchg
adc
lock
mov
xchg
push
lock
or
mov
inc
cmp
and
jo
push
ficompl
out
lahf
ja
ds
sub
adc
and
mov
jle
push
imul
and
jecxz
data16
mov
mov
xor
fucomi
mov
dec
xor
hlt
mov
or
add
xchg
mov
test
inc
stos
jb
pusha
lods
test
outsl
es
wbinvd
je
jecxz
int3
mov
xlat
mov
popf
adc
xor
inc
inc
lods
push
mov
stos
stos
je
xchg
sarl
pop
iret
push
aam
adc
push
scas
stos
jne
cmp
jbe
xchg
aam
mov
mov
cli
dec
mov
sbb
ja
xor
in
leave
push
sbb
in
int
ds
stos
cld
inc
push
mov
lods
mov
xor
fcoms
test
sarl
cli
fdiv
cmp
repz
jb
gs
pop
mov
mov
data16
mov
lret
mov
or
push
pop
or
xchg
or
cs
push
pop
addr16
lea
fscale
sbbb
ret
mov
lock
aas
negl
push
aaa
bound
or
dec
mov
pop
sbb
mov
jb
xchg
or
mov
cmp
repz
dec
roll
mov
jne
add
pop
dec
adc
dec
xchg
inc
pushf
adc
sarl
addr16
fistps
scas
out
add
es
add
lds
lock
fildl
ret
dec
fnstcw
mov
pop
lds
sub
xor
add
nop
enter
mov
js
push
jmp
data16
inc
arpl
shrb
movsb
out
pusha
xor
inc
movsb
into
sub
test
jb
xor
inc
jge
gs
mov
jecxz
jge
lret
fdivrl
subl
out
insl
cmp
stos
sbb
pop
aaa
dec
aas
sbb
sub
sti
sub
outsl
mov
or
cmc
ret
cwtl
dec
ljmp
xchg
decl
cltd
in
jne
dec
jmp
popa
ror
cmp
mov
xchg
xchg
add
sbb
inc
test
popf
cmp
pop
mov
xchg
mov
stc
xchg
out
jae
jnp,pn
add
stc
std
and
sub
mov
push
inc
jmp
lahf
hlt
push
and
dec
lret
add
mov
or
pop
lcall
cmpsl
addr16
loop
mov
int3
inc
adc
mov
lahf
inc
sub
mov
icebp
inc
sbb
fcoms
mov
adc
int3
addr16
xchg
fs
jo
xchg
sub
jno
sbb
js
test
test
ljmp
fsubrp
jl
in
pop
pop
shr
push
subl
xor
inc
out
xor
sbb
mov
xlat
into
int3
es
je
cmp
dec
hlt
cmp
daa
into
arpl
mov
or
int3
push
cltd
cmpb
lods
push
or
jg
lods
in
xor
sarb
imul
adc
adc
clc
inc
dec
pop
lds
mov
pop
push
fidivrl
jle
shrl
out
xchg
xchg
icebp
sbb
mov
xor
mov
dec
sub
jne
sbb
lret
adc
ret
xchg
mov
sti
clc
addb
int
insb
js
mov
pop
xchg
xor
aas
push
leave
cmp
adc
xchg
push
mov
inc
cmc
sarl
subb
movsl
inc
aad
adc
decl
dec
mov
fwait
mov
int3
jg
mov
out
and
shrl
shrl
ljmp
dec
ja
sbb
dec
xchg
sub
aad
rolb
pushf
xchg
cmp
lock
fidivrs
sbb
mov
adc
sub
sysexit
pop
inc
xchg
pop
in
insl
mov
mov
mov
jbe
fbld
inc
mov
test
xchg
addr16
push
stos
jmp
addr16
test
mov
iret
cwtl
iret
int3
mov
shrl
in
cwtl
dec
ja
les
pusha
out
in
jno
sbb
mov
pop
call
jge
mov
sbb
ja
int3
pop
lcall
hlt
popa
push
xchg
dec
push
in
adc
rcl
out
sahf
movsl
lret
jmp
pusha
and
test
test
xchg
aas
jecxz
loopne
lea
xchg
pop
push
jno
shll
insb
movsb
sbb
js
dec
and
and
es
stos
pslld
mov
int
adcl
adc
popa
push
pop
push
xor
cld
cwtl
mov
aam
fcmovnbe
daa
pop
std
sub
fwait
loope
or
mov
and
fisubrs
or
xor
and
pop
sar
cmc
rcrb
rcrl
cli
into
mov
iret
test
xor
repnz
cmp
in
sub
je
loopne
lret
jnp
aad
xchg
lods
mov
cmpsb
and
das
mov
or
sbb
push
ljmp
fstl
xchg
adc
addr16
add
scas
or
push
mov
xor
inc
daa
fs
or
test
sub
push
xlat
test
arpl
data16
adc
mov
je
jl
and
mov
repz
pop
jp
lock
mov
fwait
jg
jmp
iret
jmp
mov
cmp
cmpsb
fs
push
pop
mov
mov
fwait
dec
pop
rolb
push
mov
ret
sar
cltd
fildl
aas
jo
out
push
fstpl
mov
dec
add
imul
fwait
push
inc
orl
lcall
testl
fcoml
sbb
movsl
divl
in
add
test
cmpsb
lds
inc
loop,pt
mov
pop
add
add
push
mov
jns
and
xor
scas
aas
mov
leave
dec
push
cmpb
jae
jle
pop
or
lret
insl
aad
jbe
test
inc
mov
push
mov
xor
pop
add
out
push
pop
repnz
and
into
xchg
adc
in
sub
data16
jg
repnz
pop
xchg
lea
adc
movsl
mov
insl
ljmp
fwait
mov
rol
or
dec
xor
addr16
and
push
ret
sub
icebp
add
rcl
lret
movb
mov
cmp
inc
xchg
mov
mov
loop
cmp
test
cmpsl
mov
inc
xchg
mov
xchg
and
push
lret
clc
and
adc
repz
data16
dec
orl
sub
je
popa
inc
mov
cmp
mov
pop
or
push
adc
idivb
cmpsb
sbb
mov
addr16
add
aas
into
sub
pop
fsubrl
cmp
bound
fldt
loope
ljmp
rcrl
insb
movsb
sub
das
mov
aam
out
fwait
lret
outsb
mul
hlt
push
aam
sub
test
gs
dec
pop
loope
stos
scas
xchg
bound
das
loope
fs
ds
mov
dec
pop
daa
or
popf
cmp
outsl
call
aaa
xchg
xchg
pushf
jmp
pop
jp
cmp
nop
push
pop
fildl
imulb
add
sahf
inc
add
xchg
lock
movsl
sahf
jp
out
or
push
cmp
push
test
mov
xchg
addr16
fs
jns
dec
mov
fbstp
scas
cmp
pop
mov
pop
pop
xor
sub
ret
push
push
nop
and
in
shll
clc
shll
test
and
mov
test
sbb
arpl
adc
incb
mov
scas
mov
mov
out
movsl
push
cld
xor
fdivr
dec
sub
rol
fcmovnb
fwait
jp
push
sub
iret
ljmp
adc
or
jl
pop
push
inc
inc
fldcw
jecxz
fmull
push
mull
out
in
shlb
pop
and
dec
insb
jmp
xor
icebp
sub
or
ret
push
xchg
jge
mov
incb
and
inc
sarb
cmp
mov
inc
push
jae
cmc
cmp
rcrl
jbe
pop
lcall
sub
xchg
sbb
jae
into
mov
push
fprem1
imul
cmc
inc
lock
pusha
aas
pushl
outsl
cmp
dec
xchg
outsb
mov
int3
pop
add
ljmp
xchg
sahf
lea
sbb
add
mov
cs
pop
sbb
aam
cltd
int3
test
cmp
cmp
clc
jo
adc
ja
dec
push
jge
cmp
cltd
inc
lcall
nop
xchg
xchg
cwtl
out
gs
push
xlat
cmp
arpl
call
out
aas
loope
data16
dec
das
sbb
jnp
adcl
mov
mull
mov
and
bound
enter
dec
push
movsl
lahf
and
js
push
xor
data16
add
adc
imull
rolb
mov
add
loope
mov
clc
test
dec
insb
out
cwtl
or
push
pop
pop
test
bound
push
dec
movsl
mov
sbb
adc
pop
insl
xchg
insl
jbe
je
nop
pushf
je
je
cmp
ds
pop
jmp
xor
sbb
shl
lock
dec
mov
shl
xlat
xor
fwait
jecxz
sub
xchg
inc
cmpsb
xadd
repz
mov
push
jp
insb
je
dec
jb
aam
sbb
jnp
ljmp
scas
fidivrs
mul
and
lret
ds
in
jle
jp
loopne
mov
jo
pop
clc
xor
jecxz
xchg
lret
add
stos
ss
push
inc
in
pop
outsl
iret
or
cwtl
push
jne
sub
add
mov
dec
insl
loop
mov
cmpb
adc
jno
adc
out
and
fdivl
shll
jae
test
pusha
dec
loopne
loope
push
sbb
in
clc
xlat
push
ss
dec
cmpsb
push
jg
and
mov
add
push
addr16
sub
pop
xchg
lahf
shrb
in
loopne
cmp
jns
xor
outsl
cld
push
mov
shl
xchg
aas
sub
xchg
add
xlat
out
iret
jecxz
mov
insb
enter
out
fcoms
pusha
adc
mov
sbb
in
push
jo
jmp
cli
pop
push
sbb
lea
jge
cmp
shlb
add
jmp
pop
xchg
test
mov
jae
popf
pop
cwtl
lods
sti
jle
jno
jecxz
repnz
inc
scas
pop
out
jg
push
pop
adc
loope
pop
das
daa
sub
xchg
push
ljmp
pop
push
addr16
xchg
sbb
shlb
pushf
enter
mov
ret
ds
nop
es
pop
out
cs
iret
ret
jns
adc
in
lods
decb
stos
movsl
les
das
in
adc
push
cmp
jne
sub
shlb
push
push
dec
rorl
shl
cmpsl
sbb
shlb
nop
jns
fcompl
adc
jne
lret
mov
mov
mov
adc
mov
addr16
or
inc
in
mov
std
jmp
mov
mov
mov
scas
sbb
sub
push
imul
and
pushf
mov
push
int3
out
scas
sbb
push
sub
xchg
ret
insb
sub
inc
popf
xchg
jmp
fsubp
arpl
psrad
in
aaa
jno
add
xlat
imul
bound
xchg
xorb
das
sbb
dec
cmp
aas
jl
enter
gs
lcall
fdivl
xor
push
mov
stos
daa
and
imul
xchg
sbb
data16
mov
add
sbb
sbb
jmp
push
push
dec
je
pop
mov
inc
adc
cmp
xor
test
loopne
jno
cwtl
mov
jbe
insl
es
fiadds
daa
xor
sbb
mov
imul
scas
pop
test
fisubl
jecxz
sbb
lods
dec
rclb
jno
add
loop
std
aad
in
xchg
in
add
sub
mov
jmp
sbb
adc
jns
mov
sub
faddp
movsb
test
leave
into
dec
mov
xchg
stos
in
stc
addr16
sbb
arpl
pop
imul
add
or
cmp
filds
sbb
xor
lods
je
out
cmp
push
out
jmp
jb
sbb
pushf
pop
dec
mov
out
clc
cli
xchg
ficomps
sub
sbb
cltd
fdivrs
cmp
pop
cmp
cmpsb
gs
dec
push
bound
cwtl
xor
xchg
lock
int
xor
subl
sbb
jo
push
mov
std
js
jl
xchg
divl
aaa
pop
int3
adcb
stos
push
lock
pop
mov
xchg
stos
into
and
shll
fmul
dec
or
sti
fimuls
xchg
movsb
or
sbb
scas
insb
inc
popl
outsb
pop
and
mov
loopne
mov
push
xchg
imul
mov
inc
mov
dec
jns
inc
lea
cs
stos
outsb
cmc
sub
fcomps
outsb
sub
stos
push
lret
or
pop
mov
mov
xlat
addl
dec
xlat
jecxz
pop
popf
lods
shlb
in
loope
jae
in
sub
xchg
mov
rolb
push
pop
cmp
sub
lcall
cs
xor
cwtl
jb
mov
popf
fdivs
mov
call
mov
dec
xchg
popa
outsb
imulb
mov
popf
loop
pop
mov
lcall
out
pop
shlb
push
xchg
int
add
clc
data16
sbb
aad
jne
ret
inc
jne
sarl
ja
xchg
sub
xor
addl
and
mov
cmc
mov
pop
mov
xor
xor
repz
pusha
mov
lods
push
mov
mov
xor
push
fsts
xlat
and
js
jns
dec
dec
pop
dec
or
aad
leave
xlat
nop
mov
mov
sbb
jb
cld
xchg
jne
imul
or
pop
lea
cmp
cld
in
inc
test
mov
mov
xorb
mov
sahf
mov
sub
and
js
jne
mov
fadds
aam
int
cmc
xchg
fildl
stc
je
xchg
sub
dec
sub
push
jbe
xor
daa
lods
pop
fwait
push
ret
pop
rcr
inc
into
push
mov
outsb
repz
cmp
movsl
cmpsl
sbb
data16
and
fcomps
fs
or
pop
push
test
lea
dec
int
repz
push
test
fwait
popf
cmpsl
pop
jne
xor
mov
aas
and
and
pop
and
jno
lret
outsb
mov
popf
cltd
push
mov
idivb
testb
bound
repnz
push
aad
mov
pop
mov
adc
add
sbb
push
xchg
je
xchg
test
mov
icebp
sub
mov
push
inc
mov
mov
mov
pop
add
add
out
or
jo
adc
adc
js
mov
inc
sbb
jge
mov
jmp
btr
mov
les
inc
lods
mov
mov
mov
push
push
dec
ret
inc
sbb
fldt
nop
xchg
out
xchg
and
lcall
mov
jno
xor
add
movsb
jne
ja
repnz
punpckldq
push
dec
cmpb
mov
mov
divl
mov
mov
ljmp
in
iret
push
cmpsb
mov
jg
jmp
imul
or
sub
into
push
outsl
psrld
arpl
pop
out
jno
xor
xlat
push
push
add
arpl
adc
jno
aas
std
es
int3
xor
out
mov
dec
negl
sub
imul
inc
jbe
call
inc
mov
dec
or
iret
imul
ja
rcl
or
movsb
push
subl
jae
lcall
add
xlat
xor
rorl
mov
and
adc
push
jl
repnz
and
sub
push
mov
push
or
sub
mov
fwait
cmp
push
iret
lahf
xor
cmp
ret
mov
xlat
sub
test
addr16
sbb
outsb
dec
push
dec
inc
fwait
pop
cmp
push
xchg
data16
ja
int3
mov
cld
fdivs
pushf
xchg
xchg
insl
sub
cmpsl
movsb
mov
or
bound
fsubs
jp
lcall
cmpsl
fmulp
adc
xlat
inc
ja
xchg
xchg
inc
movsl
adc
scas
in
sub
lods
inc
xchg
ret
or
int
and
out
divb
out
cmp
cmpsl
ficoms
out
mov
repnz
mov
sbb
repz
or
test
jle
out
jl
nop
mov
cmp
icebp
add
jo
mov
shlw
out
xchg
xor
mov
ja
pop
mov
roll
adc
rcll
xchg
cvtps2pd
int3
cmpsl
aaa
nop
xor
push
cli
push
mov
sbb
repnz
dec
test
movl
mov
push
ficoms
pusha
les
sbb
stc
mov
or
mov
pop
lret
mov
andl
mov
dec
push
push
shlb
rclb
lret
fldcw
pop
xchg
adc
push
pushl
aas
pop
movsb
insb
scas
lea
jne
adc
push
test
mov
jecxz
pusha
sbb
std
scas
pop
and
fsubl
mov
push
nop
or
or
fstl
pusha
test
sbb
mov
add
jmp
in
push
cmp
inc
out
push
adc
pop
loopne,pt
mov
scas
cmp
mov
mov
pop
adc
cmp
rcrl
mov
pop
sbb
or
aad
mov
int3
nop
outsb
arpl
cmp
sbb
push
inc
pop
inc
out
adcl
dec
cmp
dec
push
cmp
jl
pop
xor
icebp
jne
jb
pop
aad
mov
fwait
cli
iret
or
jg
scas
arpl
sbb
sub
sbb
mov
mov
sub
add
lods
mov
dec
add
addr16
cmp
dec
out
test
cmp
inc
out
movsl
sub
test
testb
mov
pusha
push
xor
shll
mov
pop
out
lock
lret
xor
cmp
mov
push
xchg
cwtl
lds
dec
push
push
mov
sbb
or
xchg
inc
aad
jl
mov
into
cmpps
dec
sub
mov
jae
rol
mov
das
inc
popl
je,pn
outsl
lock
iret
lcall
rclb
mov
fwait
lods
out
xchg
xor
mov
pop
mov
pop
jg
repnz
mov
lods
fisubl
int3
ret
pop
call
loop
or
adc
roll
jo
fsubrl
inc
push
lahf
sti
lcall
lods
nop
sbb
push
adc
mov
lret
imul
cmp
sbb
data16
push
cmp
or
subb
clc
lret
cmpsb
aam
int
push
sub
std
dec
stos
call
adc
mov
adc
cltd
stos
fldl
inc
add
out
mov
sub
aas
adc
mov
adc
mov
test
mov
jmp
nop
mov
mov
pushf
aas
pop
les
and
bound
out
push
adc
aas
add
aam
mov
mov
xchg
ret
inc
int
out
cmp
aad
popf
ret
pop
cmp
les
es
mov
rclb
imul
push
inc
pop
mov
inc
mov
stos
outsl
fists
in
imul
sti
rolb
and
sarl
stos
in
shll
mov
out
cld
xchg
and
testb
fmul
pop
mov
cmp
xor
and
inc
and
mov
inc
dec
je
adc
data16
decl
stc
ret
sub
mov
push
orb
sti
xor
scas
cmp
lds
jb
and
push
jg
push
movsl
fistl
and
aas
cmc
jecxz
jge
sbb
mov
imul
cmc
cmpsb
mov
and
xchg
mov
bound
mov
fsub
pop
push
pop
jge
js
push
mov
adc
or
cmp
cltd
imul
sub
pop
fmuls
jnp
inc
mov
int
add
adc
jb
gs
loopne
pop
imul
push
hlt
leave
mov
and
pop
mov
push
xchg
addl
shlb
mov
xchg
xor
jne
add
pop
rcrb
xor
add
sbb
repz
aas
daa
and
test
xor
rcrb
cltd
arpl
push
mov
sti
and
push
sub
arpl
mov
xor
loop
test
add
inc
and
std
lds
push
aas
add
pop
iret
push
jl
push
mov
or
jg
xor
xchg
int
sbb
and
cmove
xchg
sub
int
push
pusha
out
arpl
pop
mov
loopne
fwait
shrl
xchg
repz
cmp
outsl
adc
inc
enter
fisttps
mov
xchg
xchg
in
fs
test
push
out
mov
test
les
int3
xchg
mov
add
sub
sub
adc
imul
mov
push
pop
sbb
mov
imul
dec
mov
push
lds
sbb
ror
into
push
push
push
xchg
std
jmp
out
or
bound
es
jae
or
mov
mov
jle
clc
insl
and
xchg
bound
cmp
or
es
leave
jne
ret
pop
ret
xor
insl
push
mov
add
pop
mov
insb
xor
mov
lret
in
jbe
inc
sahf
js
adc
lea
push
pop
mov
popa
xchg
fstl
repnz
bound
ljmp
lods
cmp
stos
push
xor
pop
xor
jl
loop
daa
cs
fs
pop
sub
jp
sub
gs
push
out
fmull
stos
iret
add
cmp
xchg
sbb
push
or
rcll
xor
aaa
xlat
mov
les
sub
cmc
fs
mov
mov
gs
popl
mov
mov
push
xchg
jae
sbb
aaa
add
sub
cld
cmp
gs
mov
cltd
inc
in
xchg
sti
mov
sbb
sti
push
adc
add
out
out
adc
test
add
shrb
mov
lea
repz
mov
inc
push
xchg
jb
mov
insl
andb
adc
sbb
daa
jnp
xchg
add
mov
add
pusha
mov
out
ret
adc
cmc
xor
leave
loop
push
popf
push
or
into
cmp
roll
popf
pop
loop
jo
lods
loope
lret
pop
inc
sub
push
scas
nop
mov
or
add
movsl
daa
mov
sub
out
xchg
inc
cltd
addr16
loop
in
mov
inc
xlat
decb
fsubrp
mov
out
cmp
cwtl
jecxz
push
cmpsl
gs
jnp
test
dec
sbb
dec
jl
or
push
and
sub
inc
mov
sbb
fwait
mov
jl
push
notl
stos
out
add
ret
jecxz
push
pop
add
push
mov
popa
jae
mov
push
pop
aas
cmp
inc
add
scas
fsub
jle
mov
fbstp
scas
sbb
gs
jg
cmp
dec
sbb
and
add
push
lcall
xchg
sti
xor
lahf
mov
icebp
lea
push
or
xor
mov
aaa
xor
test
mov
ds
mov
add
push
push
inc
movsb
sbb
jg
rclb
pop
loop
and
in
lods
jo
sahf
jo
mov
jg
dec
test
loope
inc
xchg
clc
rcr
mov
pop
pop
pop
cmp
lods
adcl
pop
aad
xchg
cmp
pop
push
cmpsl
xchg
xor
fdivrp
mov
andl
test
pop
xlat
inc
and
jge
and
leave
pop
nop
cmp
xchg
mov
cmpsb
lods
mov
sub
les
or
mov
clc
jmp
fsts
out
imul
loop
in
xlat
scas
pop
inc
out
add
jne
xor
jp
nop
aam
ljmp
sub
data16
clc
mov
loopne
cmpb
adc
arpl
pushf
stos
pusha
fldcw
add
xchg
mov
stos
inc
jmp
lcall
jae
cmp
addr16
or
fs
sbbb
cmp
in
rclb
mov
movsb
mov
cs
xchg
pop
or
mov
sub
data16
mov
or
mov
gs
xor
xchg
push
lods
mov
shlb
inc
jle
cmc
push
jmp
and
jbe
mov
inc
adcb
sub
mov
pop
ret
out
jno
test
mov
int
push
int
jge
je
pop
xor
addl
ljmp
or
std
mov
mov
loopne
stos
xchg
in
cmpsb
lods
push
pop
lret
pop
mull
cmp
pop
mov
push
cmp
lea
pusha
fisttps
dec
paddsw
pop
push
stos
fbstp
imul
inc
pop
add
popa
adc
xchg
mov
ljmp
mov
lret
test
cld
mov
xchg
cld
xor
outsl
sete
movsb
push
loop
ljmp
adc
jo
and
jnp
fiaddl
cli
and
jecxz
fidivrl
xor
bound
push
jb
jp
pop
inc
xchg
add
dec
dec
shlb
cmpb
push
ret
inc
or
subl
jae
in
pop
push
int
bound
repz
imulb
sub
sub
out
mov
aad
ror
mov
gs
lret
cmp
aas
mov
xor
inc
int
lret
cltd
adc
rcrl
pushf
sahf
xchg
or
fldcw
in
sub
loop
in
xor
cmc
push
xor
mov
xchg
push
imul
int
ds
xchg
push
or
aaa
in
arpl
repnz
sub
scas
test
push
jo
and
sub
mov
sbb
sub
xlat
jnp
shlb
je
outsb
mov
mov
xor
jno
push
and
je
ja
push
jmp
mov
pop
and
jno
push
fisubl
sbb
fisubrs
jns
fwait
popa
push
sahf
cld
push
loope
xchg
pop
test
add
into
jb
imull
setnp
xor
sbb
data16
jae
shrl
adc
int
dec
jg
mov
push
and
cld
shrl
shl
push
mov
imul
cmp
mov
nop
inc
sbb
ss
dec
out
xchg
mov
and
rcrl
sbb
rcrl
cmp
fscale
mov
imul
dec
mov
add
and
pop
mov
arpl
mov
inc
push
adc
and
stc
sub
push
cmc
sub
push
mov
pop
or
xor
cmp
mov
fstpl
xor
in
inc
xchg
testb
add
jp
loop
or
pop
xchg
ret
in
mov
aas
mov
pop
daa
pop
outsl
or
xor
int
lods
shlb
ret
add
jb
or
cltd
cmc
imul
mov
adc
fisubrs
or
dec
pop
xchg
mov
les
shrl
pop
mov
pop
outsb
out
push
mov
cld
ret
pop
inc
aaa
fisubs
push
sbb
cmp
jle
sub
xchg
add
fidivrl
imul
xchg
or
jbe
cmp
push
and
push
mov
test
add
dec
mov
adc
mov
scas
xchg
in
inc
pushf
fwait
xchg
xchg
test
aaa
xor
je
adc
cmpsl
sarb
lahf
push
push
mov
dec
xchg
fs
mov
push
test
mov
int
adc
xchg
test
adcl
nop
je
stos
in
fnstsw
cmp
or
je
js
mov
xchg
jnp
xchg
push
loopne
shr
pop
sub
out
or
jmp
dec
fsts
arpl
cmpb
sbb
pop
mov
mov
adcl
fcmovnb
sub
stos
sub
imul
out
push
xchg
cmpsl
mov
xchg
or
mov
cltd
pop
clc
sub
inc
pop
jge
adc
mov
pop
mov
imul
fildl
and
rcrb
mov
xor
cmp
mov
out
sub
cmp
lret
dec
pop
mov
xchg
mov
popf
popf
fmuls
sub
cmp
adc
ret
or
jae
outsb
test
sbb
mov
pushl
mov
ljmp
nop
bound
push
call
lds
sub
mov
cmc
imul
addr16
out
sub
pusha
jno
mov
arpl
cli
sbbl
lods
sbb
pop
fmulp
jo
add
ja
and
movsb
stos
mov
xchg
outsb
std
or
nop
into
sbb
mov
adc
stc
les
xor
sti
inc
nop
jle
daa
lods
insb
jmp
adc
pop
xchg
adc
mov
add
mov
pop
imul
lcall
cli
arpl
pushf
xor
stos
subl
popl
out
mov
enter
mov
test
pop
push
mov
popa
push
cmp
rolb
mov
add
push
pop
cmp
lock
mov
ret
lret
fisubs
mov
xchg
pop
cmp
inc
out
mov
jbe
dec
cmp
pop
out
cli
sub
mov
mov
sub
mov
imul
add
cmpsl
sbb
xchg
push
mov
xor
add
mull
gs
xchg
mov
mov
sbb
lds
outsb
lcall
pop
into
and
dec
dec
mov
insl
iret
xor
adc
imul
cmp
xlat
cmp
cwtl
add
shlb
mov
push
fldenv
in
mov
test
pusha
dec
ficomps
push
fwait
push
jmp
popa
aad
jmp
out
sub
lods
mov
mov
mov
xchg
cmp
fimull
sub
dec
cmp
or
imul
push
sbb
adc
ficoms
test
ret
dec
mov
cs
mov
mov
pop
mov
mov
mov
in
mov
lock
das
data16
inc
sarl
mov
hlt
gs
call
lock
dec
cs
les
sub
or
xchg
repz
mov
mov
cmc
mov
jbe
cmp
lods
call
pop
inc
shrl
push
test
adc
je
xchg
sub
gs
fdivl
fcomip
sbb
dec
insl
adc
lods
jbe
sub
subb
and
pusha
push
sub
adcl
cmp
adc
mov
rclb
and
xchg
ret
test
add
mov
ds
mov
push
cltd
mov
stos
outsl
push
sbb
xor
and
sub
pop
cmp
int
cmp
push
jge
jmp
pop
insb
out
ret
aad
push
enter
movsb
cmp
push
cmp
mov
lcall
adc
push
in
leave
mov
xchg
pop
or
arpl
sbb
adc
cmp
mull
pop
fwait
jbe
xor
lret
fstl
mov
fisubrl
rcrl
test
mov
rcrb
mov
jns
pop
cltd
adc
or
nop
adc
ja
mov
and
in
mov
nop
fstl
cld
adc
fdivl
push
adc
sarl
test
xor
jo
sbb
sarb
cltd
cli
jmp
stc
and
xlat
int3
sub
addr16
push
push
mov
sbb
loop
pop
and
push
push
xchg
out
shl
mov
push
jl
pop
shl
loop
jle
outsb
shlb
test
sti
fdivrs
fcomps
dec
imul
call
outsb
dec
cs
cmpsb
call
ss
add
rcr
add
fdivl
lods
lret
mov
pop
bound
repz
mov
or
aas
cmp
cld
push
inc
mov
outsl
js
lahf
mov
mov
bound
das
adc
nop
loope
dec
std
mov
adc
and
dec
jnp
push
xlat
adc
data16
cld
xlat
in
lock
cmc
push
jo
ss
pop
pop
lea
mov
push
mov
je
inc
inc
add
pop
mov
dec
jns
jmp
or
js
scas
mov
stos
push
in
imul
pop
mov
rol
rclb
mov
adc
mov
daa
push
daa
pushf
das
push
push
inc
out
aam
push
faddl
lret
int3
xchg
imul
pushf
sbb
mov
ja
adc
pop
das
sahf
cmp
dec
pop
jmp
test
inc
pop
dec
out
mov
jbe
push
inc
sub
js
lock
aaa
push
push
bsr
loopne
or
cmp
dec
and
outsl
rcll
mov
adc
jge
push
cmp
mov
iret
or
div
clc
mov
xchg
pop
call
or
fstp
sbb
cmpsb
mov
or
cmp
adc
or
jmp
ret
mov
cmpsl
aam
in
stos
push
mov
cmp
popa
adc
int3
je
aaa
rorl
nop
ss
jb
mov
push
mov
pop
stc
out
loopne
xchg
xchg
ror
push
std
ja
in
repz
outsb
test
idivl
bound
fs
xor
inc
repnz
cwtl
hlt
sti
jno
adc
stos
enter
je
inc
test
or
je
negl
sbb
fdivp
stos
sbb
lods
adc
pop
fidivl
jl
into
stos
sub
or
cmp
push
dec
testb
repnz
std
in
push
or
inc
ja
dec
iret
sub
sbb
and
xlat
fcomps
push
sub
lods
mov
pop
icebp
cmp
dec
cmp
jae
ret
inc
jmp
loop
out
mov
mov
cmp
fcmovb
mov
rorb
lds
ret
leave
testl
inc
mov
mov
ret
in
test
mov
iret
aam
js
sub
out
add
fs
fs
xchg
sub
sarl
insb
adc
inc
cltd
movsb
cltd
fcomps
cmp
ret
in
daa
fimull
pop
test
add
jnp
add
push
push
lret
lcall
pop
inc
mov
clc
fsts
loope
cli
mov
dec
sahf
jae
push
pop
inc
fmull
out
repnz
mov
mov
mov
sar
into
lret
nop
push
and
push
aam
pop
and
sub
inc
cmp
inc
and
pop
orl
jmp
push
enter
sbb
adc
xchg
push
fwait
pushf
aam
push
movsl
mov
gs
fnsave
sti
repnz
cmp
sbb
sahf
inc
xchg
js
xchg
fsubl
xchg
adc
push
fdivl
stc
repnz
xor
dec
adc
scas
mov
push
mov
adc
notb
push
lret
xor
add
cld
lods
fucom
pop
fsubrp
fcomps
loope
cmp
and
dec
cld
test
ltr
outsl
mov
idivb
test
inc
movsb
fwait
cmp
pop
lret
inc
jecxz
notl
popa
xlat
mov
ror
mov
xchg
xchg
ds
pop
enter
imul
lods
cmp
inc
pop
adc
lods
inc
mov
cmp
into
js
fdivs
pop
adc
xchg
stos
nop
mov
lahf
mov
hlt
in
andl
ret
test
call
imul
and
xor
popa
pop
push
test
in
mov
mov
and
push
add
or
lea
jg
std
decl
out
cltd
mov
dec
mov
mov
test
xor
jp
mov
test
mov
shlb
add
mov
jns
and
data16
scas
testb
in
sub
shr
data16
ss
jp
dec
xlat
adc
inc
push
jl
push
sti
cltd
jb
jmp
xor
xor
std
fstps
lods
gs
dec
xchg
mov
mov
dec
push
sar
jne
repnz
mov
scas
aad
sbb
add
jae
sub
dec
cli
fwait
test
jae
adc
jnp
aas
mulb
jns
add
dec
mov
mulb
call
lock
or
out
fiadds
and
push
movsl
sub
insl
or
lods
movsb
adc
add
mov
jmp
inc
xchg
test
mov
xchg
cmp
rolb
mov
nop
jl
cld
mov
lahf
xchg
mov
jecxz
addl
add
subb
jl
pusha
sub
fimull
ljmp
adc
mov
pop
pop
push
scas
jbe
lcall
cli
cmp
out
inc
pop
pushf
out
not
sahf
jecxz
int3
lret
cmp
mov
push
cs
mov
mov
andl
jns
xchg
icebp
mov
cmp
jge
fcompl
fcmovnbe
lcall
gs
mov
sti
imul
stos
mov
jge
outsb
inc
aad
scas
cmp
xor
xchg
xchg
and
call
int3
loopne
loopne
shrb
adcl
xorl
sbb
aad
sti
call
lahf
add
dec
adc
loope
outsb
popa
dec
stc
pop
mov
popf
pushf
xor
lods
mov
iret
ja
notl
or
stc
mov
xchg
jbe
sbb
add
adc
jbe
insb
cli
and
shll
adc
mov
pop
jb
mov
jo
loop
fstl
test
mov
adc
inc
sbb
pop
rcl
movsl
sub
xor
push
xchg
fstl
out
push
nop
add
stos
lds
xchg
scas
mov
aad
sbb
lret
push
aas
ss
push
or
fimuls
test
push
into
ja
pop
cmp
cmpsb
jne
adc
xchg
push
mov
mov
mov
ds
mov
inc
pop
or
fwait
add
xlat
jo
pop
xor
cs
repnz
adc
ljmp
mov
call
ud2
mov
test
xchg
push
mov
test
push
ljmpw
or
ljmp
or
sbb
dec
fnstsw
mov
arpl
fwait
cmp
dec
es
push
dec
cmova
cwtl
fimuls
cmpsb
stos
into
cmpb
enter
call
adc
ret
xchg
decl
and
mov
ljmp
lea
rorb
shl
pop
jmp
cltd
and
mov
scas
push
pop
jge
rclb
lret
and
out
jl
aaa
fistps
adc
imul
aad
push
mov
sub
jmp
pushf
mov
call
add
mov
popa
fsubs
scas
lret
ljmp
pushf
dec
in
xchg
ljmp
pop
xor
xchg
mov
insb
lods
out
or
adc
pop
jns
xchg
mov
test
jg
test
and
sarl
add
add
jae
mov
push
add
in
in
stc
adc
cmpsl
xchg
rcr
das
jge
ds
push
es
in
lock
jmp
push
push
adc
cbtw
pop
popa
and
jg
imul
std
push
cltd
inc
lahf
hlt
leave
jb
outsb
push
cmpsl
test
dec
ljmp
sti
sbb
sbb
mov
call
sub
mull
adc
cmpb
inc
and
pop
xchg
add
dec
fimuls
push
repnz
dec
jmp
add
xchg
fidivs
fidivl
cmpl
lahf
xchg
es
stc
das
add
mov
aaa
dec
mov
add
or
adc
jl
loope
mov
xchg
sbb
sti
stc
pop
stos
lea
js
test
jmp
outsl
movsl
inc
mov
sahf
fwait
into
cmc
int3
sbb
jns
call
sub
inc
mov
inc
sub
ljmp
cli
loop
jl
fsubs
repnz
shrl
inc
jl
pop
mov
insl
cmp
bound
mov
fs
xor
pushf
mull
mov
daa
das
cmp
xor
cmp
fidivl
vpsubb
cli
in
pop
xor
push
or
cmp
out
rorb
test
gs
push
inc
mov
fimuls
scas
std
adc
lods
mov
imul
jl
cmp
sahf
sub
aad
pop
rcrl
inc
imulb
mov
push
fs
and
mov
ret
fidivrs
push
sub
pop
mov
addr16
xor
incb
test
pop
push
adc
pop
or
mov
imul
jg,pn
mov
fcmovne
xor
shrl
stc
jo
data16
jnp
jno
xchg
dec
aam
movsl
push
fiadds
lods
xchg
test
ja
repz
rcrl
mov
sbb
sbb
inc
jae
ret
movsl
cs
pop
sbb
stos
je
xchg
outsb
mov
mov
pop
push
lret
mov
cmpsb
mov
mov
and
push
push
jnp
fcompl
orb
movsb
outsl
unpckhps
ret
jno
cmp
pop
mov
pop
pop
arpl
sbb
xor
rcrb
fisttps
inc
rolb
pushf
test
jg
jmp
pusha
ljmp
loop
lahf
adc
ljmp
into
fwait
dec
stos
fwait
popa
fistpll
mov
ret
jecxz
pop
scas
sbb
pusha
testb
jg
and
mov
add
test
nop
xchg
mov
cld
ja
cvtps2pd
mov
lret
mov
je
in
sbb
sbb
xchg
pop
mov
repnz
mov
in
fldcw
data16
data16
sbb
inc
xchg
fadds
sbb
out
jb
cmp
jns
adc
mov
mov
mov
sub
mov
cmp
or
mov
repz
in
sbb
adc
adc
lcall
jp
cmpsb
and
scas
cmpsl
push
inc
lret
dec
mov
shrb
xor
add
adc
push
into
mov
dec
inc
mov
pop
mov
sbbl
addb
adc
add
in
pop
insl
cmp
sbb
or
dec
mov
shll
sarl
arpl
in
pop
cmp
lods
scas
jl
test
je
jns
and
fwait
mov
sarb
rorb
push
ss
adcb
pop
sahf
jecxz
push
dec
arpl
addl
pop
xchg
shrb
fcoms
test
mov
data16
lret
dec
test
cmp
out
push
mov
dec
pop
std
or
push
hlt
lods
xchg
push
xchg
orb
call
rcrl
pop
lods
xchg
cmp
sbb
jecxz
aaa
call
iret
out
std
sub
or
addr16
mov
xchg
dec
fsqrt
aas
bound
lods
xor
and
ja
push
inc
mov
popa
push
in
jecxz
jae
hlt
push
sti
ds
inc
shlb
leave
mov
mov
push
idivb
clc
mov
loop
jne
xor
and
ds
push
sbb
cmp
jmp
xchg
xchg
aaa
push
xor
pop
out
and
adcb
cld
or
xchg
push
jmp
sbb
push
or
in
and
or
adc
cmp
add
xchg
and
mov
inc
dec
xor
in
dec
shlb
dec
jle
fucomp
dec
test
rcl
out
push
push
cwtl
mov
inc
pop
xchg
mull
adc
mov
pop
pusha
fistpl
xchg
pop
sub
mov
jnp
xor
xchg
mov
inc
adc
cmp
adc
test
test
insl
mov
xlat
arpl
sub
mov
dec
outsl
inc
push
sub
incl
mov
aad
hlt
push
mov
add
and
adc
push
pop
je
adc
xor
add
adc
mov
xor
push
repnz
jl
out
imulb
fwait
lahf
xor
sti
fs
sbb
mov
clc
clc
dec
sbb
in
lock
hlt
mov
ja
mov
in
mov
lcall
mov
push
pop
sub
cmp
aad
mov
stos
push
subb
cwtl
push
icebp
or
test
data16
sub
mov
enter
insl
xchg
adc
fcoms
xchg
dec
jne
fmuls
cmpsb
cmp
mov
les
dec
pop
jb
shl
imul
or
xchg
and
pop
mov
lea
rclb
add
aaa
cmpsb
mov
std
jmp
ret
fbld
pop
bound
addl
or
xchg
popa
adc
shl
mov
push
cli
sbb
xor
or
inc
pop
pusha
bound
data16
std
fdivr
mov
pop
fs
fcoms
in
and
aas
lahf
addl
daa
and
mov
popa
cmp
and
add
add
andl
adc
sub
sub
stc
movl
pop
scas
mov
rclb
inc
dec
adc
