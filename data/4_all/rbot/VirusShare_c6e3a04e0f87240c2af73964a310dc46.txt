mov
cmc
lea
adc
or
icebp
adc
and
lods
mov
sbb
imul
dec
pop
xchg
sti
pop
hlt
pop
xchg
outsl
sahf
jns
mov
and
xchg
je
frstor
lods
outsb
sbb
fidivl
loopne
mov
sbb
lock
daa
lods
ret
sbb
jae
imul
cmpsb
ds
imul
push
and
inc
add
or
aam
push
pushf
sahf
std
jge
xchg
xchg
inc
mov
fwait
fwait
iret
fldenv
lcall
pop
pop
lds
or
pop
mov
push
cmp
je
popf
lock
lahf
push
xlat
mov
fwait
jo
and
cmpsl
std
adc
test
and
and
insb
pusha
out
fmull
xor
aaa
mov
xor
dec
dec
movsl
daa
sti
popa
dec
stos
in
inc
push
fcomip
test
scas
mov
push
insl
xchg
pusha
lret
lcall
ss
sti
mov
or
in
outsl
std
lods
lds
std
pushw
das
pop
adc
inc
fs
das
js
inc
add
jge
into
jge
lret
test
addr16
sti
icebp
or
mov
rcrb
sub
dec
mov
aad
fcmovu
into
adc
pop
sub
vmovdqa
xchg
test
mov
sti
insb
push
mov
inc
lea
inc
test
sbb
mov
xchg
cltd
aam
movsl
push
ret
sbb
enter
mov
out
add
call
cltd
sahf
xchg
cltd
cmpsl
fs
test
pushf
lds
cmp
xchg
or
xchg
les
dec
mov
push
mov
mov
jo
xchg
jg
pop
cmp
les
mov
push
mov
mov
adc
loopne
xchg
sbb
xchg
lods
pop
xor
mov
out
jmp
inc
cmp
dec
push
add
pusha
add
lock
push
mov
fcompl
shrb
dec
push
iret
sti
ja
push
adc
jno
pusha
jbe
cmpsl
sbb
jle
mov
and
out
dec
mov
jno
push
stos
inc
rcrb
rcll
and
js
inc
push
shll
sbb
jge
in
addr16
stos
jae
mov
pop
imulb
dec
shll
aam
insl
pop
cwtl
imul
sbb
and
mov
pop
filds
adc
pop
imul
inc
idivb
outsl
dec
mov
cmp
iret
push
or
dec
push
pop
jnp
pop
fstpt
outsb
jecxz
jae
in
sbbl
jp
xchg
loop
adc
in
xor
rcrl
repnz
jne
mov
add
adc
loopne
out
icebp
inc
xlat
movsl
iret
mov
or
mov
daa
sti
jmp
repz
sbb
dec
fsubl
and
mov
push
arpl
or
stos
or
cmp
repz
or
sub
mov
mov
mov
loope
dec
arpl
mov
push
in
and
push
push
sbb
test
or
push
movsb
adc
arpl
in
outsl
cltd
addr16
addr16
jmp
shll
mov
ljmp
sbb
sub
pop
xor
jbe
xor
fsts
xlat
test
pop
or
inc
xchg
rol
mov
lret
or
out
sahf
sahf
cmp
xchg
push
sub
fs
out
in
xchg
sub
jg
aas
mov
js
pusha
jae
in
xchg
cmpsb
outsl
inc
iret
or
leave
pop
loope
pushf
mov
les
cmpsb
sbb
insb
std
out
jo
jge
cltd
into
aaa
fisttpl
and
lods
iret
adc
cmpsl
scas
mov
mov
test
add
in
add
push
sbb
adc
popl
es
mov
xchg
insb
push
and
outsl
sbb
adc
aad
cmp
mov
call
inc
sbb
or
in
inc
cmpsb
mov
mov
cmpl
jmp
addr16
js
mov
insb
icebp
inc
mov
mov
mov
test
push
cmp
cmp
mov
inc
call
jo
fwait
lock
icebp
mov
cmpsl
sahf
and
lock
stos
add
ja
aam
push
xchg
cmp
addr16
xor
iret
lcall
popf
lods
pop
xchg
mov
out
pusha
jp
gs
mov
cmp
pop
dec
sbb
push
xchg
xor
inc
jg
add
test
push
int
test
push
adc
sbb
cmpsb
push
mov
pop
xor
jne
xchg
jge
or
sub
xor
cmpsl
jle
mov
pop
push
ret
cld
cli
dec
jne
enter
jne
jp
inc
cmc
xchg
pop
outsb
xchg
mov
sbb
movsb
add
pop
les
je
nop
push
adc
fucom
enter
sbb
add
and
mov
add
inc
add
fadds
movsb
mov
xchg
jns
notl
inc
das
test
dec
aam
mov
or
movhps
arpl
xor
inc
repz
or
xchg
pop
pushf
es
mov
ljmp
sbbb
les
mov
or
and
leave
loop
xchg
xchg
ds
mov
scas
inc
or
inc
pop
subb
ds
addr16
es
and
fisttpll
xor
jno
jns
pusha
out
fisttpl
jae
push
je
scas
mov
push
fnstcw
sbb
test
add
mov
push
push
mov
add
mov
out
fwait
les
in
mov
push
mov
adc
aam
push
lds
dec
jo
inc
cmpsl
mov
mov
xchg
push
cli
push
nop
dec
adc
add
pop
loopne
data16
ljmp
xor
inc
bound
adc
call
mov
push
jbe
sub
or
leave
mov
loopne
adcl
pusha
sub
mov
daa
push
shrl
mov
mov
sub
jg
mov
ficoml
stos
data16
cmp
jmp
xchg
dec
fcmovnb
movsb
mov
mov
movsl
enter
out
jge
nop
push
call
push
jb
and
add
sub
jbe
arpl
out
push
and
testl
ss
ret
fucomi
and
xorb
push
push
push
lea
push
push
push
push
jge
push
rol
pop
push
push
pop
cmp
je
cmp
jne
int3
and
jo
jbe
push
test
pop
jo
jge
clc
clc
stc
inc
dec
loop
pop
js
nop
cld
mov
test
cmc
inc
dec
test
clc
stc
mov
xchg
push
push
pop
cmp
je
cmp
jne
int3
push
push
cmp
pop
pop
loop
pop
je
xor
push
pop
jns
push
push
mov
pop
pop
loop
jecxz
cs
dec
sbb
rcrb
xchg
cmp
test
or
addr16
mov
jns
add
push
movzbl
jns
test
jo
add
jno
mov
push
stc
pop
ror
cmc
jno
jno
cmp
push
jbe
push
rol
pop
pop
and
add
cld
lea
shl
add
test
push
jge
jle
xor
pop
push
push
xor
pop
pop
jbe
push
dec
pop
sub
jnp
push
mov
pop
cld
push
pop
loop
pop
sub
lea
stc
cld
mov
add
jmp
xchg
and
insl
jb
pop
fidivrs
xchg
add
mov
cmp
repz
and
aas
mov
push
push
data16
mov
and
jae
dec
pusha
cmp
clc
int
mov
fnstenv
aaa
rorb
inc
push
aam
and
sbb
call
adc
xor
lcall
sbb
cmpsl
cmp
push
mov
cmp
pop
push
movzbl
cmp
jle
push
test
pop
push
push
mov
pop
pop
cmc
shl
cmc
nop
nop
loop
pop
nop
nop
nop
and
push
pop
push
push
pop
cmp
je
cmp
jne
int3
and
jb
jg
xchg
xchg
inc
dec
xchg
xchg
push
push
and
pop
pop
push
jns
push
mov
pop
pop
jo
jae
push
dec
pop
loop
pop
rol
add
std
cld
pushl
pop
jmp
inc
pop
xor
push
xchg
cmp
jmp
sarb
xchg
scas
or
jg
mov
cmp
int3
cmp
insb
mov
mov
mov
ret
ljmp
pop
out
inc
or
dec
pop
pop
dec
iret
dec
cmp
cmp
repz
xor
test
je
push
movzbl
jo
push
mov
pop
xchg
xchg
jne
push
shr
pop
push
cmp
pop
inc
dec
loop
pop
push
inc
pop
stc
cld
cld
push
mov
add
pop
sub
loop
jecxz
ret
jbe
jge
push
loop
jmp
pop
lret
push
lret
fcomp
jno
mov
mov
imul
aaa
dec
ja
cmc
out
test
aad
mov
or
sub
pop
push
inc
xor
push
or
pop
jmp
jbe
das
dec
push
cltd
pop
stc
out
fdivrs
cmc
lods
push
es
adc
iret
cmpl
or
inc
aaa
sbb
xor
imul
out
leave
insl
push
xchg
movsl
xchg
cld
nop
ror
push
push
pop
add
pop
loop
jecxz
pop
xchg
xchg
je
jmp
lret
dec
mov
mov
popf
dec
fmul
sbb
les
dec
pop
pop
stc
scas
mov
pusha
jge
add
in
out
cmp
adc
ret
jb
inc
jge
or
loop
jecxz
stos
lods
cmp
xchg
cmp
mov
neg
jmp
fdivrl
shrb
cmc
xchg
fld
stos
mov
xchg
mov
add
es
add
push
dec
mov
cld
mov
sti
pusha
inc
or
mov
imul
call
stos
add
add
pop
test
push
das
loope
push
popf
jmp
jmp
imul
inc
scas
repz
mov
jle
popf
mov
jecxz
pop
pushf
mov
push
mov
sbb
sub
fistpl
jb
push
mov
aas
push
sbb
leave
adc
and
loope
sbb
lret
and
sub
lock
pop
out
das
pop
cwtl
insb
cli
inc
mov
testb
and
ja
gs
in
add
clc
push
and
lods
ret
je
lock
xchg
fldenv
pop
aam
push
pop
pop
add
nop
xor
je
push
call
dec
mov
dec
and
shrb
repz
mov
shl
add
inc
aas
test
dec
rcll
pop
addr16
xor
mov
mov
inc
cmc
outsb
jge
fsts
push
xchg
jge
or
mov
ficoml
insb
xor
je
iret
inc
popa
jp
xor
and
scas
xor
cld
stc
jecxz
sbb
lcall
sub
aam
add
mov
pop
lods
sbb
dec
push
in
arpl
data16
gs
nop
dec
inc
rcrb
push
cmp
stos
lea
pop
pop
lea
dec
pop
idivb
add
pop
cmp
push
sub
in
clc
jp
jae
scas
pop
mov
pop
cmp
leave
mov
out
pop
lcall
pop
push
inc
cltd
iret
and
int
mov
vaddps
mov
mov
pusha
add
jmp
cmp
repz
push
aaa
sbb
jecxz
in
pop
imul
call
push
mov
pop
std
jne
cmpsl
je,pn
dec
out
pop
mov
cld
mov
xchg
dec
jae
std
xor
xlat
adc
xchg
cld
outsl
icebp
out
arpl
sub
vunpckhps
adc
adc
pop
xchg
mov
outsl
mov
jnp
pop
test
xchg
mov
ja
xlat
jns
inc
add
pop
cmp
popa
push
and
popa
cmpl
mov
add
mov
sarl
in
dec
push
fcmovbe
pop
repnz
divb
mov
jbe
push
pop
adc
movsw
xor
or
fwait
mov
fs
negb
mov
mov
mov
imul
insb
dec
daa
cmp
cwtl
push
pop
std
shr
push
mov
out
sbb
add
pop
sbb
hlt
ret
push
fcmovu
push
ljmp
subb
leave
pushf
sbb
je
nop
lret
push
cli
push
xor
sbb
sbb
dec
xchg
pop
int
xchg
leave
lcall
cli
mov
adc
test
es
jnp
scas
repnz
dec
cmp
sahf
adc
xchg
xchg
pop
inc
andb
xchg
jno
adc
and
roll
cmpsl
mov
sbb
inc
clc
je
ret
push
repnz
stos
jnp
mov
cmpl
add
int
push
mov
imul
mov
jb
xor
lea
fstp
imul
xlat
fwait
sbb
or
jnp
mov
lock
mov
popa
jb
cmp
out
xor
enter
sub
fmuls
ret
xor
rcrb
test
adc
xchg
and
movsl
fistps
push
push
fstpt
push
cmc
bound
add
cmp
mov
inc
loopne
adc
mov
sahf
movsb
scas
fistpl
jle
pop
and
fstpt
pop
in
jl
jmp
xchg
out
dec
pop
loopne
inc
dec
jmp
fisubl
jne
dec
lahf
scas
sbb
dec
lret
enter
mov
sbb
mov
xor
sub
inc
fs
mov
xor
jge
pop
lods
xorb
insb
out
sub
lcall
fwait
and
imul
inc
dec
cmp
pop
into
ficoms
mov
adc
int3
or
loope
daa
jp
loop
mov
dec
xor
shrl
test
popf
mov
add
pushf
and
mov
xchg
mov
loope
push
jecxz
lret
mov
xor
mov
push
cmp
jo
sub
shrb
leave
sbb
pop
jns,pt
aaa
fldcw
xor
cmpsl
dec
dec
lods
inc
sub
sahf
addr16
movsb
jne
dec
in
ljmp
xor
mov
xor
mov
inc
fsubrl
lcall
aas
jl
push
data16
paddsb
and
scas
les
or
inc
mov
mov
jp
jnp
sbb
ror
out
mul
imul
pop
inc
ret
pusha
cmp
test
cmp
cmpsb
mov
jle
mov
jg
jecxz
insb
or
push
mov
push
add
fwait
cmp
or
jb
testb
xchg
push
cmpsl
popl
mov
pop
aaa
sbb
jge
add
pusha
and
and
mov
sbb
ja
mov
cmpsl
jmp
aad
mov
xchg
pusha
add
testl
mov
js
sub
fmul
mov
xchg
mov
movsl
push
jmp
mov
xchg
jbe
adc
inc
dec
and
mov
out
pop
push
jns
dec
cltd
xchg
xor
or
jo
adc
mov
test
adc
aam
out
push
sbb
mov
imul
aas
lea
out
cmpsl
or
push
loop
mov
pusha
adc
fsubl
sub
xchg
jb
cmpsb
mov
nop
icebp
or
test
test
out
jg
xor
fcomip
clc
adc
xchg
xor
gs
cltd
push
jns
jg
xchg
pop
popa
push
lods
outsb
jbe
scas
negb
stc
cltd
or
adc
cmpsb
lea
fwait
shll
adcb
cmp
xchg
gs
into
js
lods
in
pop
icebp
aas
cmp
std
pop
sbb
rcrl
outsb
addr16
mov
mov
dec
sti
cmp
jle
bswap
or
sub
aad
ret
test
sbb
add
clc
int3
xor
adc
inc
in
jo
std
mov
stos
push
and
loopne
fistpl
jo
jle
xchg
push
ljmp
cltd
stos
repz
ret
xchg
pop
lea
ss
mov
clc
inc
pop
aas
push
push
mov
outsb
adc
les
mov
xchg
sub
jmp
or
inc
inc
cmp
and
mov
mull
popa
jnp
dec
idiv
xchg
dec
cmp
fdivrp
jno
movsb
push
repz
aaa
js
stos
subl
adc
fwait
repz
aad
ljmp
xchg
xor
popf
out
nop
out
push
jbe
push
mov
lock
mul
lock
cld
push
mov
and
ret
jmp
les
jb
jae
add
push
fcoms
mov
loop
ljmp
popa
notl
in
pop
roll
repnz
stc
std
nop
xchg
scas
out
inc
hlt
sbb
pusha
clc
jmp
xor
cmp
movsl
leave
sub
fists
cmp
mov
outsl
lret
sti
push
cld
cwtl
inc
lahf
and
cmpsb
out
push
movsl
dec
mov
add
bound
mov
jle
cwtl
pop
nop
dec
lahf
cld
jge
mov
out
iret
jp
shll
rcl
sub
hlt
stos
mov
pop
and
pop
and
jge
jp
in
in
cmc
stc
cwtl
jle
dec
push
sub
xor
ret
sbb
add
test
clc
cmc
xchg
cmc
sarb
push
jmp
test
lock
push
fisubrs
add
mov
sub
sbb
push
bound
arpl
push
push
sbb
pop
pop
iret
aad
stc
mov
icebp
loope
sub
mov
ret
cmp
ds
mov
lds
in
xchg
push
testl
cmp
xchg
scas
jmp
mov
scas
xchg
int3
mov
xor
js
insb
xchg
jne
mov
stos
sarb
sub
and
or
xor
loopne
popl
jno
loope
push
jns
mov
jo
xor
sbb
push
pop
xchg
push
and
or
ss
or
push
adc
repnz
fcmovnu
fisubrs
test
jl
push
or
inc
lea
dec
scas
sub
inc
pop
cmp
mov
xchg
mov
jno
jmp
in
loope
lods
inc
shll
adc
mov
sub
es
adc
sbbl
lock
pushf
test
fadds
nop
subb
nop
push
shlb
sbb
cwtl
or
and
sti
dec
dec
cmp
test
ret
mov
pop
negb
jne
sahf
cwtl
clc
sub
mov
adc
push
pushl
rclb
scas
out
dec
sbb
xor
xor
jp
adc
outsb
cld
pop
mov
enter
cmp
mov
lcall
lret
cmp
pop
mov
mov
push
lcall
cmp
mov
cmp
aaa
gs
lcall
dec
pushf
xchg
lahf
data16
mov
pop
sub
xchg
ret
shrl
es
hlt
inc
pusha
fwait
jns
movsl
fcomi
sahf
int3
sahf
loop
pop
mov
scas
repnz
in
imul
stos
dec
cmpsb
lahf
inc
or
mov
jge
out
scas
or
inc
bound
je
rcrb
sarb
nop
pop
out
aas
fdiv
stc
arpl
or
testb
fildll
subl
insb
data16
popa
adcl
mov
cmp
jp
insl
jp
fwait
aas
mov
fs
fs
xor
and
lods
ds
rcrl
pop
cmc
push
insb
xor
lock
or
fdiv
mov
add
nop
ret
loope
sahf
shrb
or
cltd
add
into
movsl
dec
mov
into
push
test
add
insb
and
dec
daa
cltd
pop
inc
sbb
mov
scas
aas
pop
cmp
mov
imul
rclb
inc
jae
mov
and
add
fldt
std
sti
dec
lahf
sub
sub
sarb
stc
mov
sbb
mov
xor
div
addb
cmp
stc
xchg
out
test
push
sub
gs
cmp
mov
mov
and
lods
sbb
jnp
pop
icebp
subl
test
mov
mov
arpl
in
xchg
pop
inc
sbb
mov
stos
ja
add
mov
mov
mov
push
xor
rcr
xchg
or
gs
aam
xor
jnp
and
mov
mov
pop
push
stos
nop
aaa
lcall
xor
cmp
cmc
or
xchg
xchg
jb
imul
clc
xchg
adc
xor
xlat
pop
into
dec
ja
xor
add
mov
rcll
mov
divb
ljmp
idiv
cld
mov
pop
gs
push
movl
and
int3
dec
xorb
scas
addr16
adc
dec
mov
sbb
jo
aam
xor
mov
in
dec
jmp
in
movsb
add
nop
negb
sub
pop
nop
les
adc
ror
iret
xchg
sub
xchg
jnp
and
arpl
or
mov
push
adc
cmc
or
add
bound
cmp
lock
adc
je
out
push
jno
cmp
mov
mov
jg
mov
popf
inc
pop
es
aas
mov
mov
data16
arpl
add
sbb
cmpsl
xor
jns
sbb
out
or
mov
pause
stos
push
mov
xchg
sbb
jno
out
insb
sarl
push
inc
stos
decl
push
out
mov
mov
cld
test
or
dec
mov
test
sbb
sub
out
imul
pop
jbe
xchg
mov
negl
sbb
xlat
add
icebp
shll
into
aam
fs
call
in
adc
rcrl
sbb
inc
lock
aaa
repz
jbe
mov
sbb
or
push
dec
dec
add
adc
lahf
aam
je
mov
out
repnz
pop
arpl
jae
sarb
div
sub
cli
xchg
and
mov
aad
xchg
add
inc
in
mov
sbb
jo
jo
stc
lcall
adcb
cltd
in
pop
mov
addb
jne
mov
xchg
es
test
dec
movsl
test
mov
sbb
in
add
cmp
dec
add
and
aaa
xchg
in
adc
and
mov
dec
arpl
popa
or
push
sbb
enter
inc
hlt
cmp
lock
push
js
cld
ret
das
rcrb
fwait
imul
int
sti
add
jle
fildl
std
push
hlt
pop
add
xor
dec
fst
lea
shrl
lret
lret
ss
in
push
scas
jbe
and
fcom
or
jp
inc
fimuls
les
dec
and
sbb
mulb
mov
movsl
mov
enter
and
jl
cmp
test
mov
xchg
loope
jo
hlt
mov
jg
and
int
sub
sbb
add
ret
and
std
sub
xor
and
leave
xchg
jmp
cmp
push
nop
xchg
mov
mov
add
adc
test
push
insb
mov
in
js
mov
scas
inc
sbb
in
xchg
jae
cli
dec
adc
pop
shlb
rcl
test
lds
mov
xchg
movsb
add
mov
imul
scas
push
lahf
and
lahf
add
fistps
leave
sbb
jmp
xchg
inc
icebp
inc
pop
lods
dec
das
adc
mov
sub
movsb
mov
or
cmp
stos
lea
lods
adc
fstps
sarb
fld
push
shll
mov
xchg
cmp
jne
cmpsb
mov
adc
sub
pop
loopne
rorl
incb
mov
sub
daa
dec
sub
movsl
cmc
into
insb
sub
cltd
push
cmpsl
sarb
jns
xor
push
mov
mov
hlt
js
sub
imul
push
rcr
mov
jbe
jne
icebp
dec
fcmove
jns
arpl
pop
dec
pop
mov
std
cmpsl
ss
dec
rorb
add
popf
pop
pop
dec
sbb
inc
mov
mov
mov
push
add
pop
dec
sub
inc
mov
dec
fs
adc
mov
cmpsb
xchg
push
sbb
push
lds
sbb
testb
cmpsl
rcrb
iret
inc
mov
dec
xchg
insb
sub
iret
dec
mov
mov
lahf
negb
ss
xchg
lret
inc
fildll
popf
adc
outsb
fildll
nop
fiadds
fnstenv
xlat
lds
loop
pop
flds
fidivrs
jl
fxch
lods
ja
cmp
add
mov
xlat
rclb
scas
inc
aaa
mov
cli
lahf
add
js
enter
sub
insb
inc
inc
les
mov
dec
and
or
sbb
iret
lcall
call
adc
test
stos
notl
adc
push
cld
sub
nop
lahf
sbb
xchg
adc
or
push
sub
into
xor
mov
cmc
sbb
adc
jbe
ficoml
rcrb
pop
in
aas
cs
cmp
adc
push
push
rcll
mov
sub
or
stos
popa
je
nop
jne
leave
in
out
dec
icebp
rorl
add
popf
xor
and
mov
popf
push
or
out
pop
data16
test
jb
add
arpl
icebp
sbb
and
dec
sarb
pop
ret
ja
scas
ret
fwait
mov
cmp
push
addr16
adc
clc
movsl
or
or
or
push
mov
or
das
jle
ljmp
lods
mov
adc
ja
mov
popa
xor
clc
pushf
shlb
push
jb
iret
inc
subb
pop
test
mov
jmp
sbb
mov
lock
jns
mov
xor
jl
push
imul
mov
xchg
mov
add
push
clc
xlat
in
or
push
test
cli
rclb
dec
adcb
or
jb
mov
js
rcrl
cmpsl
jle
jle
push
icebp
push
sarl
das
ret
out
cmp
ja
inc
and
add
xor
lret
orl
sub
mov
idivb
das
dec
cmp
mov
js
mov
fwait
mov
xchg
mov
inc
push
inc
jns
pop
add
loope
sti
push
add
pop
add
and
in
xlat
pop
divl
cmp
jl
mov
jbe
icebp
push
mov
aad
jmp
das
pop
xchg
test
rcrl
fistl
sti
dec
push
repz
sarb
stos
xor
shrb
adc
loop
popa
aam
das
jns
mov
test
jae
xor
rclb
cmp
mov
mov
jecxz
jmp
js
xchg
aad
jge
cltd
imulb
and
xor
repnz
sub
sarl
negl
add
jge
pop
loop
outsb
rclb
pop
xlat
add
cmp
and
imul
add
mov
into
xor
pop
adc
xor
mov
aaa
gs
std
movsb
cmp
or
sub
insl
sub
mov
addr16
stc
jle
add
insb
add
pop
icebp
push
inc
mov
mov
xchg
adc
push
loop
inc
ffreep
fcompl
inc
mov
into
incl
clc
adc
daa
or
xchg
push
push
pop
mov
repz
adc
fucomi
jae
cmp
lds
mov
and
sbb
int3
adc
daa
xchg
aas
lods
xor
jbe
cld
enter
incb
jbe
ffree
es
sub
push
les
pop
iret
mov
mov
push
cltd
stc
call
mov
call
loop
cs
test
dec
insl
pop
js
cmp
jmp
daa
insl
xor
xchg
sbb
loope
lahf
leave
lahf
pop
fs
xor
pop
sub
rclb
inc
sbb
xor
std
pop
pusha
add
pop
pop
cmp
movsb
pushf
mov
movsb
push
adc
pop
out
jmp
dec
push
in
aaa
pusha
std
push
lds
cwtl
clc
das
push
inc
sbb
es
sub
xchg
jmp
sbb
gs
inc
lcall
ja
or
enter
xlat
cmp
in
incl
adc
push
and
repz
test
or
or
outsl
cltd
sbbl
mov
sahf
dec
adc
and
in
mov
je
push
cmc
push
or
mov
inc
and
pop
in
cmp
xor
xor
inc
out
push
in
bound
dec
jmp
or
sbb
mov
clc
push
adc
sbb
stc
sub
sub
adcl
mov
pusha
mov
cwtl
test
dec
movsl
jnp
cltd
xor
or
pop
or
adc
mov
jbe
and
imul
sti
popf
mov
mov
or
sbb
push
push
mov
dec
sbb
mov
stos
lods
adc
test
xchg
jbe
jns
jns
push
outsl
push
or
sbb
imulb
push
mov
mov
ljmp
clc
push
into
cmp
int
mov
lds
mov
push
pop
scas
add
ffree
je
fsubrs
xchg
pop
movb
test
gs
jg
ret
mov
shlb
sbb
jne
inc
loope
test
inc
push
ds
pop
xor
xchg
dec
mov
shll
push
ffree
mov
mov
or
dec
pop
nop
in
dec
mov
out
push
add
aas
cmp
dec
inc
mov
xor
and
mov
add
and
push
pop
push
fistpl
add
stos
mov
jecxz
js
stos
adc
dec
xchg
lods
add
mov
adc
aaa
leave
aaa
push
jb
mov
jp
push
sbb
dec
unpckhps
add
push
lahf
test
sbb
dec
cmc
out
lret
test
pushf
or
add
les
dec
cmpsb
mov
sbb
or
or
mov
in
xor
xchg
xchg
pop
call
mov
cmpb
sbb
pushf
mov
sub
xor
fwait
aaa
lret
inc
sahf
mov
jl
lea
iret
lea
fwait
mov
arpl
lock
aad
ss
push
rol
rorl
add
mov
sub
dec
add
jl
shl
push
and
es
push
std
or
xor
push
cmc
push
es
mov
push
pop
movsl
push
mov
ficompl
les
or
addr16
int3
sbbb
push
jo
imul
push
dec
jnp
test
pop
xor
push
jno
xorb
push
push
cmp
and
movsb
stc
mov
lds
pop
push
and
imul
ror
fistpll
add
mov
push
nop
in
or
stc
nopl
fwait
mov
fisttps
cld
adc
sahf
gs
sbb
sbbb
push
mov
sub
das
test
in
fcmovu
xor
into
fisttps
imul
fnstsw
pop
add
nop
fs
movsl
shlb
jne
sub
add
pop
pop
adcl
lret
into
inc
mov
mov
xlat
sub
pop
mov
das
cld
fwait
jo
sti
xor
jnp
sub
loope
lret
jno
insl
iret
mov
scas
push
mov
mov
push
inc
dec
push
aas
cmpsb
jns
add
inc
inc
rcrl
jbe
movsb
lea
call
jge
or
mov
or
in
mov
xchg
jge
aaa
sbb
xorl
in
adc
sub
add
mov
and
xchg
or
pop
fidivs
cltd
adc
mov
fimuls
addr16
cli
mov
clc
push
mov
or
lods
addb
ja
add
cmp
lret
xor
pop
push
adc
xor
out
ret
xor
and
call
arpl
pop
fsubs
jae
int3
fisubl
or
arpl
outsb
call
sub
pop
rol
pop
scas
jmp
inc
cwtl
shll
adc
out
ret
imul
xor
jp
daa
rol
inc
loopne
jbe
push
push
ja
les
mov
out
and
cmp
and
adcl
ljmp
pop
stos
add
data16
dec
stc
mov
push
mov
rep
sub
xchg
and
shlb
sbb
mov
shl
mov
popa
dec
in
mov
insl
adc
push
mov
pop
inc
ljmp
fldcw
mov
pop
data16
lret
sbb
das
mov
cld
movsl
jmp
xchg
cld
cs
sub
mov
mov
das
loopne
pop
add
add
mov
rorl
nop
sub
sahf
shr
pop
bound
pop
adc
and
jbe
xchg
jg
xcrypt-ofb
cmpsl
outsb
mov
stc
addr16
cmp
push
pushf
loope
sub
cmp
xor
stos
inc
scas
push
fsubs
dec
push
pop
mov
cmp
jge
mov
shl
sbb
repnz
sub
cmpsl
ficoms
jmp
cmc
aaa
mov
ja
test
xchg
insl
lcall
xchg
test
dec
andb
push
mov
cwtl
daa
and
push
push
cmc
push
pop
push
jge
sbb
sti
cwtl
sbb
clc
shlb
pop
rcr
xor
add
sahf
int3
insl
jno
or
cwtl
inc
in
imul
xchg
aaa
xchg
out
sub
xchg
lea
dec
sub
arpl
int
or
mov
hlt
lea
push
outsb
stos
mov
jge
sbb
frstor
cwtl
push
mov
cwtl
adcb
or
lods
movsl
jbe
dec
xchg
out
mov
push
and
or
adc
test
sbb
inc
fwait
repz
mov
repnz
popa
stos
in
dec
daa
dec
ljmp
xchg
lock
and
inc
pushl
adc
pop
jecxz
sbb
pushf
dec
push
out
jmp
sub
outsl
lods
mov
push
test
mov
and
loopne
push
pop
jb
rclb
adc
jns
into
push
jnp
aad
xor
out
idiv
sti
in
jns
jo
ljmp
subb
loopne
mov
out
into
mov
mov
mov
sub
add
popa
mov
mov
jne
push
mov
xor
dec
adc
xchg
sub
stos
push
xchg
js
or
ret
sar
notb
fsubrl
inc
mov
movsl
or
push
mov
cmp
and
fildl
mov
fisubl
mov
sub
sbbb
lock
lea
adc
pop
pushf
mov
clc
mov
pushf
dec
imull
and
ret
sub
ret
int
or
iret
xchg
sti
shl
dec
pop
dec
ss
aam
sub
std
and
xchg
jle
pop
cmp
pop
cmp
mov
shlb
inc
mov
dec
lock
or
xor
sbb
jl
pop
cwtl
add
lds
cmpsb
add
int
jno
push
sub
pop
inc
pusha
movsb
and
jmp
and
jo
mov
fimull
test
insb
xchg
cmpsl
mov
in
jp
push
call
sub
mov
aam
and
or
mov
loop
jg
popf
lahf
jae
mov
mov
out
push
insb
cmp
lret
cmpb
cwtl
jle
lahf
ja
insl
es
cmp
or
xlat
xor
arpl
xor
mov
sbb
mov
rcll
popf
stc
sub
push
out
push
mov
mov
lahf
popa
and
jmp
dec
ds
xchg
shrl
repnz
jae
mov
jno
mov
aaa
in
push
lock
xchg
stos
mov
les
sub
cltd
push
aad
and
jecxz
ret
pop
fimuls
pop
mov
sub
pop
or
mov
inc
or
mov
and
push
jb
cli
loop
sbbl
mov
push
xor
xor
out
test
clc
inc
mov
jge
sub
mov
testl
aam
push
popa
xor
mov
push
adc
int
inc
jl
xchg
fadds
lahf
aas
xchg
cmp
jo
xchg
mov
mov
out
movsl
sub
inc
mov
xchg
stc
dec
mov
mov
repnz
xchg
out
repz
movsb
add
out
imul
xchg
or
push
push
lahf
pop
idivb
loop
mov
movsl
or
push
fldenv
mov
in
fwait
inc
lret
pusha
cmp
into
mov
cli
cmp
in
sar
stos
outsb
jge
mov
out
es
les
mov
push
and
add
xor
loopne
mov
aam
orb
mov
jp
xchg
loope
inc
ret
rolb
lock
push
inc
repnz
lods
inc
and
inc
mov
add
cmpsl
out
into
adc
imul
xchg
mov
xor
sub
push
jae
test
sarl
cmp
shrl
js
ret
sarl
dec
mov
int3
jp
outsl
roll
mov
das
jno
daa
adc
js
stos
inc
or
popa
pusha
mov
pop
dec
cmpsb
push
test
inc
adc
ficomps
nop
mov
popa
sbb
pop
rorl
xchg
fists
and
rorl
cltd
enter
mov
fsubs
call
adc
cmpsl
xchg
pop
sub
pop
dec
mov
pop
push
sbb
mov
jge
stos
fcmovnb
cli
in
pop
aas
sbb
xor
lock
ror
xchg
loope
xchg
sbb
in
lock
xchg
mov
push
pop
xchg
ds
dec
adc
push
hlt
shrb
hlt
cli
jne
lock
adc
pop
gs
add
and
jp
es
or
dec
jne
ljmp
das
mov
mov
dec
adcl
add
pushf
push
xor
sub
out
test
imul
mov
cltd
xchg
sub
cmpsb
cltd
out
jl
push
add
push
push
je
cwtl
mov
loop
shl
push
jns
dec
pop
push
inc
daa
dec
clc
rcrb
pop
push
idivb
mov
in
bnd
xor
sbb
ja
lods
hlt
mov
cld
rcrl
sub
inc
testb
jl
mov
movsb
sub
dec
gs
lods
das
into
mov
dec
add
cmp
push
aaa
or
xor
stos
sub
hlt
and
xor
outsl
jbe
add
inc
inc
movd
gs
adcb
push
jmp
cmpsl
adc
mov
shlb
adc
sbb
or
and
ret
mov
push
mov
push
push
mov
xchg
cwtl
dec
mov
out
and
mov
subl
mov
addl
push
cmc
xchg
push
mov
push
xor
cltd
dec
lcall
or
jb
jmp
push
or
xchg
jo
addr16
xchg
ss
jns
sbb
push
adc
cmp
out
outsb
and
aad
or
hlt
xchg
adc
adc
fs
push
js
mov
fistps
jp
ret
adc
mov
sbb
inc
aaa
mov
fldt
mov
dec
pop
or
int3
xchg
aaa
xchg
scas
pop
add
cmpsl
ja
adc
push
or
pop
loopne
pop
jg
push
outsl
test
cld
sbb
test
or
loope
loope
scas
nop
mov
test
xor
jmp
push
mov
fldenv
pop
fsubrp
add
xor
lods
loopne
adcl
pminsw
lods
fsubl
inc
sar
stos
dec
or
lahf
and
xchg
and
cs
pop
xchg
test
sub
sbb
sbb
push
push
or
add
repnz
sub
shrb
add
push
cltd
push
leave
xchg
push
sbb
sub
out
xchg
pop
loop
movsl
sub
pop
or
inc
jo
xchg
iret
cmpsb
ss
int3
xor
out
jp
pop
movl
add
jae
pop
aam
mov
cmp
mov
cwtl
mov
push
cltd
add
mov
aam
mov
je
lods
mov
subl
dec
lods
xchg
and
push
arpl
dec
loopne
into
xchg
pop
inc
insl
out
test
icebp
daa
pop
mov
mov
push
insl
or
and
fsubr
adc
out
push
loope
cmp
or
stos
adc
sti
mov
in
adcl
je
jle
ror
aas
pop
loopne
pop
inc
movsl
inc
fadd
adc
jne
shll
dec
sti
dec
mov
sbb
stos
inc
adc
dec
stos
mov
push
xchg
dec
or
movsb
aaa
xchg
clc
jne
inc
dec
push
jno
popw
mov
movsl
sarl
lcall
and
lock
lock
ds
inc
test
pop
loopne
sbb
mov
add
lea
xchg
subb
rclb
ja
dec
xor
pop
or
xor
out
mov
aas
aad
loope
iret
test
scas
aad
test
bsf
sub
movsl
ljmp
pop
jecxz
arpl
out
mov
insb
mov
inc
dec
mov
inc
xchg
lods
cmp
out
xchg
lock
ss
xchg
aad
mov
into
icebp
pop
pop
pop
scas
pop
popf
push
loope
xor
jge
add
xchg
lret
push
clc
mov
test
movl
xchg
js
pop
imul
stc
jne
sbb
rcll
sub
lahf
mov
cmp
clc
das
cs
push
aaa
mov
mov
lret
fisttpl
in
shrl
mov
out
int3
mov
cli
mov
in
xchg
inc
xorb
aam
sbb
gs
dec
clc
popa
xor
rorl
jb
or
aad
or
icebp
jbe
aas
cmpsl
xor
dec
jns
idiv
mov
shl
fcmovb
dec
cli
clc
xor
shr
inc
int
das
cmp
xchg
and
push
mov
mov
push
insl
pop
inc
test
fmul
pop
addl
sub
push
mov
xor
adc
xchg
jl
shrl
add
add
xor
insl
dec
xor
cld
rolb
xor
dec
iret
push
shr
je
push
jmp
int3
ret
inc
add
cmpsl
inc
std
jmp
cmp
faddp
jge
cltd
int
lret
arpl
int
dec
mov
push
icebp
push
outsl
es
shrb
aas
cmp
faddp
sub
test
imul
jp
cmpsb
data16
aad
leave
fimull
icebp
mov
pop
mov
fs
dec
add
jne
xor
insb
cmpsl
ljmp
ljmp
pop
into
xchg
push
jmp
jnp
push
sbb
in
lahf
fisttpll
fiadds
mov
sub
lea
nop
mov
mov
push
push
ja
jmp
sarl
das
aad
mov
adc
mov
and
mov
cmp
and
mov
fistl
cmp
xchg
add
dec
out
or
add
fs
mov
pop
imul
in
fistps
data16
call
fistl
ljmp
lods
xor
fisttpl
leave
add
push
pop
pop
sbb
daa
sub
xor
in
jae
add
dec
cmp
dec
inc
pop
mov
inc
mov
pusha
xchg
ret
jmp
xor
aas
enter
xor
fadds
out
sub
aad
xor
mov
div
jo
es
mov
sbb
push
mov
mov
add
sub
adc
into
outsl
sti
pushl
negb
pushf
fnstcw
and
dec
loop
pop
mov
insl
out
pushf
in
inc
inc
fwait
mov
daa
gs
add
inc
inc
fsubs
out
mov
adc
push
ret
cmp
sbb
sbb
mov
ss
pop
in
repz
rcpps
sub
mov
mov
and
cltd
mov
es
in
and
ret
bnd
test
inc
cwtl
adc
pop
ja
cli
mov
or
out
lahf
leave
stc
jno
data16
dec
dec
xchg
xchg
cld
pop
in
loopne
decb
adc
in
rcl
lahf
pop
ret
mov
ss
icebp
jl
scas
mov
inc
jb
mov
sub
pop
int3
xor
cmpl
in
xchg
out
add
mov
rorl
mov
stos
inc
fcompl
lahf
ss
jle
xchg
out
xor
sbb
or
mov
xlat
pusha
cmp
and
add
or
adc
mov
mov
adc
pop
test
lock
sub
in
mov
in
out
repz
mov
rclb
dec
test
and
push
ficomps
ljmp
sub
stos
add
push
outsl
xchg
shlb
add
adc
add
adc
insl
jne
ds
loope
xor
mov
mov
and
loope
fwait
mov
add
mov
xor
jg
inc
test
lea
sbb
sub
dec
xchg
shlb
js
xchg
jmp
ret
ds
sbb
fwait
ror
cmpsb
sub
cmp
jmp
and
jecxz
mov
push
mov
mov
in
sbb
adc
add
or
ret
outsl
xor
mov
xchg
mov
or
mov
popa
and
sahf
and
mov
ljmp
adc
enter
int3
mov
aas
std
mov
xchg
int3
mov
sbb
loopw
mov
adc
enter
cli
push
sub
fmul
mov
lret
mov
jno
fnstcw
jbe
out
int3
mov
in
lea
dec
shll
rorb
fisubs
mov
lcall
ds
negb
mov
and
push
push
xchg
lods
in
ja
iret
loope
add
mov
jno
mov
jg
cwtl
in
sbb
lock
cli
stos
sub
sub
dec
dec
test
mov
xor
xor
popa
mov
and
inc
xchg
test
dec
inc
mov
shrl
loop
pop
fs
int3
lea
popa
pop
out
mov
and
scas
into
aaa
outsl
dec
inc
dec
imul
decb
pop
and
pop
mov
mov
inc
mov
dec
rcrb
sub
ds
mov
sub
jae
jp
sbb
cmp
lock
mov
ret
push
inc
fldl
shl
sub
rorl
push
inc
sub
jge
ljmp
call
pushf
inc
out
mov
dec
jmp
jecxz
push
hlt
xor
repz
arpl
lret
fucomp
in
jne
ljmp
pop
sub
loopne
hlt
cmc
aad
mov
clc
call
cmp
cmp
mov
adc
ret
repz
dec
push
mov
fldcw
nop
test
or
std
cvtdq2ps
and
popa
cmp
push
lods
inc
sub
add
xor
sbb
fnstcw
adc
jae
test
add
ds
cmp
mov
es
mov
jge
popa
bound
pop
lret
pop
arpl
js
in
lods
mov
and
or
aad
pop
lea
jecxz
mov
xchg
loop
clc
and
bound
fidivrs
adc
jne
fs
sbb
cmpsb
xlat
push
push
pop
mov
sub
aas
cmpsl
or
andl
mov
jp
hlt
pop
into
rcrb
or
outsb
dec
push
hlt
sti
push
xchg
or
in
or
fmuls
fnstsw
and
leave
push
clc
lret
ja
ret
ja
xchg
mov
pop
mov
adc
negl
or
add
clc
adc
lock
stos
nop
jns
pop
aam
insl
cmpsl
xor
icebp
sbb
jp
or
in
outsb
in
stc
xchg
xchg
adc
stos
cltd
jbe
pop
xor
xchg
mov
cs
adc
adc
adc
test
jmp
arpl
lret
add
ljmp
jnp
scas
jo
loope
adc
mov
sub
subb
jg
and
mov
ss
dec
or
jae
popl
or
pusha
jo
xchg
sbb
xor
mov
jg
imull
loop
dec
xor
cwtl
sub
jl
push
mov
or
xor
addr16
data16
mov
mov
orl
xchg
daa
jl
out
repnz
mov
mov
fldcw
nop
out
daa
jp
sbb
ret
aam
jns
fidivs
pop
xor
imul
enter
negl
js
or
stos
mov
pop
bswap
call
xchg
fidivrs
push
jns
lock
push
mov
inc
or
das
dec
mov
adc
nop
push
out
out
iret
shrl
enter
mov
cwtl
arpl
lret
and
and
or
xlat
fwait
iret
sbb
fldcw
das
inc
inc
mov
test
and
cmp
sahf
sub
and
sub
addb
aad
dec
xchg
mov
in
mov
lock
popf
sub
mov
sub
nop
jbe
sub
icebp
fdiv
xor
mov
fcompl
lcall
fidivrs
adc
xor
and
mov
add
js
dec
lock
out
dec
jbe
movsb
mov
fld
ljmp
pop
adc
ds
out
shrb
ja
sbb
fimull
fistpl
aaa
jbe
inc
mov
jl
adc
xor
jecxz
idivb
dec
mov
fwait
movsl
pop
aas
jle
sub
pop
call
xchg
and
inc
iret
sub
xor
mov
sub
lret
dec
pusha
insb
and
jp
pop
rorb
xlat
push
mov
or
bound
scas
clc
pop
int3
out
mov
cli
insb
jmp
dec
aam
gs
mov
addr16
pop
popa
push
mov
add
into
pop
jbe
mov
repnz
dec
cmp
nop
xchg
rcr
stos
gs
add
push
add
in
in
mov
sbb
fiadds
movl
adc
push
and
adc
adc
into
pushf
mov
sbb
mov
and
and
scas
daa
adc
or
or
sbb
ja
shll
or
and
arpl
cmp
mov
stos
and
cmp
int
pop
int3
sbb
in
scas
jbe
test
mov
js
cmc
cmp
fcoms
or
insb
rcrb
outsl
xchg
adc
into
and
cmp
sub
and
xor
mov
mov
sub
lods
arpl
pop
inc
and
and
aaa
sub
rcll
aas
bound
mov
sarb
xchg
fwait
mov
push
xchg
in
addr16
inc
xor
hlt
add
stos
pop
mov
in
jne
test
mov
mov
sub
fs
mov
jno
ret
sub
movsl
pop
inc
xchg
push
ss
in
ja
call
in
cmp
or
adc
sbb
or
or
mov
push
push
dec
push
jns
inc
loopne
add
jge
mov
adc
hlt
xor
jmp
xchg
sub
cld
fs
mov
xchg
dec
lods
mov
fstl
or
bts
adc
bound
pop
iret
popa
int
mov
insl
sbb
push
testl
mov
roll
pop
mov
and
and
cmpsb
inc
adc
sbb
xor
gs
jl,pt
push
and
fisubrl
mov
push
daa
inc
mov
cld
xchg
out
lcall
mov
cmp
push
jns
out
dec
fidivl
fwait
xchg
mov
mov
add
push
and
and
ret
mov
std
leave
test
mov
push
pop
sub
lea
push
stos
pop
mov
insb
jge
hlt
hlt
mov
out
and
inc
sbb
push
lods
push
sub
sbb
enter
inc
std
es
aaa
jp
pop
mov
mov
and
cmc
lods
stos
cmpsl
mov
pop
pop
push
cwtl
ss
test
cmc
xchg
adc
fmul
out
jb
nop
lea
adc
cmp
sbb
ljmp
pop
and
and
aas
enter
inc
iret
lods
fsubs
sarl
stos
mov
sub
pushf
inc
dec
arpl
mov
sub
or
add
mov
inc
lea
rorl
insb
dec
mov
fcomps
cld
lahf
pop
xchg
lea
xchg
mov
sbb
jns
pop
push
mov
jbe
decb
je
rcrl
mov
lds
push
bound
dec
leave
push
cmp
and
call
pushf
popa
icebp
lret
gs
jge
or
je
pop
vcvtdq2ps
add
cmp
pop
mov
in
cmc
dec
mov
mov
in
cmp
enter
or
in
fcoml
loope
sub
push
push
mov
mov
shrl
inc
pop
mov
sub
movsl
cs
jno
push
xlat
icebp
out
mov
xchg
jno
ds
out
mov
aaa
mov
push
push
test
and
push
out
cmc
jmp
mulb
sbb
shll
jecxz
fs
popf
dec
xor
add
test
call
adc
xchg
mov
outsb
int
mov
imul
cmp
xor
push
push
xor
stos
cmpsl
mov
outsl
mov
aad
daa
lret
push
int
pop
repz
push
cltd
lock
xchg
mov
or
fstpl
cwtl
and
mov
sbb
adc
int
sub
xchg
pusha
mov
loope
dec
in
iret
aaa
imulb
es
push
add
lret
xchg
adc
inc
xor
push
shl
and
xlat
roll
icebp
xchg
pusha
aam
jle
ljmp
add
jg
push
aaa
in
adc
imul
dec
leave
loope
jno
aam
dec
jb
loopne
xchg
jnp
or
iret
repnz
sbb
std
out
cmp
int
das
add
mov
in
subl
insb
cmp
in
mov
pop
dec
sub
insl
jecxz
out
vpunpcklbw
adc
and
out
js
mov
ds
jo
dec
xlat
sbb
jle
mov
repz
mov
xchg
popa
xchg
jbe
je
xor
popf
sbb
cmc
and
insl
cs
or
add
cmp
jmp
sub
add
and
jns
jecxz
push
push
scas
shrb
cmp
mov
idivl
jle
sub
cmp
loope
movsl
xor
mov
push
outsb
pop
gs
adc
sti
shrb
pop
arpl
push
or
cmp
fisubl
loop
sbb
scas
fmull
bnd
aam
incl
sbb
not
int3
mov
std
rcr
into
sub
lods
mov
push
dec
mov
sub
nop
loopne
inc
shlb
xchg
mov
adc
jo
dec
push
movsb
ja
in
std
adc
cmp
xor
out
lcall
mov
in
xchg
ds
arpl
xor
adc
inc
xor
dec
fadds
pcmpeqd
jmp
ljmp
mov
adc
ja
test
std
imul
pushf
xchg
repz
gs
mov
inc
pop
or
pop
xor
in
fwait
mov
inc
cmp
and
pusha
jmp
sub
cmp
shll
jb
lcall
pop
add
fildl
fldl
inc
popf
std
in
lock
sbb
fldln2
in
stc
scas
pop
push
sub
push
push
lea
mov
xchg
dec
subb
sti
lea
or
lret
das
inc
or
mov
mov
out
mov
jnp
into
jp
pusha
fldt
fnstenv
ret
mov
xchg
xor
lea
mov
into
filds
repnz
jle
loopne
and
xchg
mov
sbb
pop
mov
dec
cmp
ljmp
je
cmpsl
or
push
daa
filds
imul
out
movsl
push
add
std
sbb
ret
adcl
fwait
sbb
in
cld
imul
push
mov
xor
out
mov
dec
push
ret
mov
add
xor
xchg
lret
xor
mov
sub
mov
mov
mov
outsb
xchg
adc
and
jmp
adc
cwtl
and
enter
sub
adc
inc
fnsave
pop
ds
cmc
push
or
and
mov
arpl
jns
xchg
add
inc
jecxz
lods
lahf
mov
mov
mov
cmpsl
or
loopne
inc
std
lea
jnp
push
fisubs
xchg
mov
add
or
stos
jmp
fisttps
out
int
negb
cmc
pop
xchg
jnp
popa
fbstp
outsb
test
fdivs
xor
clc
jmp
push
mov
jg
mov
out
fbstp
movsb
leave
fsubrl
jge
jae
das
shlb
xchg
inc
jns
leave
sbbb
pop
mov
fldl
div
daa
icebp
jns
sti
scas
add
jo
cmp
xlat
insl
fildl
add
xlat
sub
inc
aam
imul
sub
js
xchg
jecxz
adc
inc
jecxz
mov
pop
xchg
adc
test
pop
mov
jb
fisttpll
add
mov
add
test
mov
dec
cmp
pop
dec
dec
lea
lahf
cmpb
cwtl
movb
mov
cmp
shlb
pusha
adc
inc
dec
adc
repnz
dec
ss
icebp
in
push
das
and
and
xchg
and
addr16
fsts
xchg
test
mov
and
fisubs
aaa
out
mov
dec
idivl
pop
sbb
scas
jecxz
in
or
into
test
adc
push
inc
mov
pop
add
xor
insb
in
ret
push
ljmp
stos
and
xor
je
mov
out
or
push
cmpb
sahf
jp
dec
lock
lret
lods
push
and
sbb
negl
cmc
jge
sbb
xchg
jnp
hlt
mov
mov
lods
mov
lret
mov
jecxz
mov
adc
mov
mov
aam
rol
divl
sbb
es
adc
mov
cli
push
ficoml
ret
xor
xchg
jl
lods
sbb
or
mov
bound
cld
adc
adc
pop
es
jp
repz
sbb
mov
push
mov
cmp
je
pop
cmpsb
push
rcrb
and
js
xor
pop
jns
mov
sbb
movsb
and
movsl
ljmp
stc
pop
inc
cmpl
lds
mov
int3
sti
sbb
push
push
icebp
shlb
jnp
ss
popf
inc
pop
sub
mov
popf
out
roll
jb
ret
lods
sbb
jo
push
push
lret
inc
xor
aaa
jnp
rcrb
inc
into
mov
das
sbbl
inc
pop
jg
adc
sub
pop
loopne
mov
fs
ljmp
das
je
mull
clc
ret
iret
cmc
dec
mov
insb
lock
mov
out
xor
mov
hlt
inc
fs
jae
negb
mov
fisubrs
ffreep
push
fnsave
adc
inc
or
shrb
jmp
aas
iret
hlt
arpl
shrl
aaa
and
xchg
xchg
push
inc
jecxz
insb
arpl
push
jge
inc
inc
sub
mov
sarl
outsb
mov
nop
mov
cmp
or
call
jns
jmp
sahf
and
clc
mov
sub
mov
add
mov
scas
jae
in
xchg
js
dec
cltd
mov
fwait
hlt
fwait
lahf
lock
xor
push
dec
nop
pop
sub
add
mov
mov
out
out
lods
inc
mov
cmp
xchg
int3
das
xor
outsl
lock
in
inc
inc
mov
clc
mov
es
and
out
cmp
cmp
or
push
testl
sub
imul
add
xchg
lret
mov
cmpsl
sbb
jo
and
xchg
nop
mov
stos
mov
cmp
lret
fsubrp
jno
rorl
dec
lcall
jl,pn
mov
sub
sub
cmp
andb
iret
add
in
inc
cmp
popf
push
jnp
jne
xor
jb
dec
or
out
adc
xchg
test
add
stc
std
push
add
or
xchg
data16
xorb
cmc
cmpsl
mov
cmp
pop
pop
int
and
icebp
out
cmp
lds
cmpsl
jns
cltd
sti
mov
inc
jp
lret
lea
cmovno
lahf
je
xor
fldcw
push
cmp
rcrl
push
bound
pop
test
loop
jmp
std
inc
push
mov
pop
jb
or
movsl
arpl
mov
mov
es
shll
xchg
sbb
adc
aaa
stos
insb
inc
sbb
ficoml
jae
lahf
aas
mov
push
jae
daa
icebp
xchg
mov
int3
jno
cs
sbb
jbe
xor
push
jns
out
adcl
push
inc
xchg
minps
sbb
pushl
pop
and
push
rcll
shr
loop
jb
dec
xlat
jg
sbb
sub
add
jns
sbb
xchg
lods
xchg
out
jle
cltd
add
push
sbb
add
sub
clc
lret
ja
push
pop
add
mov
lcall
pop
mov
shll
inc
enter
jg
dec
mov
ret
and
fimuls
fldenv
xor
cli
xor
pop
add
push
push
inc
push
mov
sahf
divb
adc
push
int3
shlb
ss
inc
mov
sub
add
stc
aas
es
cmp
sbb
jg
xor
mov
mov
sbb
dec
mov
aam
icebp
in
or
adc
mov
lret
lahf
xlat
adc
je
clc
dec
sahf
adc
mov
lahf
pop
push
pop
sbbb
loop
cmp
xor
adcl
or
pop
addr16
shl
sti
lds
dec
bound
jb
adc
or
arpl
test
je
adc
lret
push
subl
hlt
inc
xchg
cmpl
and
mov
sub
or
testl
mov
bound
mov
pop
addr16
jl
jecxz
jno
sub
pop
or
sti
das
mov
subl
inc
mov
jns
insl
sbb
mov
repz
jl
push
mov
jnp,pt
jno
pop
or
pushl
stos
xor
cwtl
lahf
adc
inc
popf
gs
mov
sub
xor
add
mov
cld
imul
repnz
das
mov
cmp
adc
or
xor
cwtl
in
es
test
dec
mov
imul
sbb
fldl
push
in
fildl
mov
and
nop
popf
std
xor
sarl
test
cmp
and
stos
out
ljmp
test
lahf
mov
add
inc
stos
pusha
sub
cltd
cmp
dec
js
mov
sbb
xor
jno
mov
scas
add
inc
imul
xchg
mov
and
pop
in
add
fdivrl
sub
cmp
pushf
int3
mov
movsl
cmp
add
sbb
jo
or
std
and
mov
xchg
inc
jne
mov
xor
leave
sub
add
cmc
imul
xor
mov
aad
xchg
and
out
sub
leave
rcr
jl
mov
xor
cwtl
inc
ret
push
ficomps
xchg
test
cmp
stos
inc
push
xchg
lahf
jecxz
imul
icebp
sbb
cmp
movsb
sar
jl
test
mov
sbb
mov
pop
jl
xchg
adc
jns
jae
fwait
fdivs
arpl
dec
xor
out
dec
in
mov
or
or
repz
cmp
jae
pop
std
stos
in
push
daa
stos
mov
sub
or
les
xchg
push
popf
dec
xor
mov
lods
push
pop
push
add
loopne
push
sub
sbb
fnstenv
add
mov
cmp
add
adc
ljmp
dec
sti
es
xor
cmp
sahf
mov
fwait
popf
mov
nop
mov
dec
int3
stos
pop
addb
adc
jecxz
cmc
divl
in
add
mov
lds
int
outsb
scas
insb
hlt
jne
xor
jg
inc
mov
aaa
xor
add
mov
inc
and
push
add
pop
pop
sub
out
sbb
stos
sbbb
ds
push
cmp
pop
ror
inc
je
xchg
in
xor
popa
and
lahf
sbb
cmp
roll
mov
jp
rcpps
in
testb
push
cmp
icebp
jecxz
and
fsubrl
lea
outsb
add
stc
pop
lods
in
jno
adc
dec
aas
mov
das
push
push
sti
pop
shlb
pop
jne
test
ret
xor
outsl
xchg
pop
jmp
lahf
add
cld
push
lret
push
jl
mov
lock
sbb
inc
xchg
adc
mov
popf
jl
and
jae
aad
jo
pop
inc
or
mov
mov
cltd
es
and
iret
xor
je
imul
lahf
mov
std
push
cmp
scas
test
inc
pop
mov
xorl
xchg
xor
adc
and
inc
xor
addr16
sbb
jbe
push
dec
dec
mov
int
pusha
pop
push
lret
js
pop
ljmp
adc
icebp
xor
dec
mov
mov
les
push
pop
dec
cmp
addl
mov
inc
xchg
fucomi
push
mov
adc
fistps
fs
adc
add
popa
imul
daa
inc
cld
sub
inc
and
pop
jl
xor
loope
rcpps
mov
dec
lahf
mov
push
and
xor
add
pop
or
inc
dec
and
loope
jmp
aaa
test
test
je
fwait
jle
adc
lret
xor
jmp
fdivrs
mov
xlat
cmpsb
or
idivl
adc
icebp
cmc
into
ror
jno
call
stc
mov
and
inc
jns
or
or
dec
cltd
movsb
shlb
xchg
xor
mov
popf
in
or
jbe
es
outsb
adc
push
sbb
add
enter
jmp
into
sub
inc
push
inc
movsb
iret
cmp
pop
push
aaa
icebp
in
xchg
push
in
imul
cmp
add
cmp
pop
or
fildl
fsts
loop
cmp
shlb
out
insb
mov
dec
fidivs
sub
rcrb
jmp
dec
ja
loop
mov
fistpl
adc
cmp
inc
mov
fnstsw
pop
inc
stc
popa
adc
sbb
jge
popa
filds
xor
xchg
stos
fadd
sub
inc
inc
inc
dec
imulb
inc
in
testl
cmc
loopne
imul
lds
sbb
jne
int
sub
fbld
testb
pop
mov
xchg
pop
mov
popa
decl
mov
xor
aas
cmpsl
sbb
fldenv
fwait
incl
int
lahf
dec
and
cmp
dec
in
mov
fisttpll
mov
and
scas
jne
out
clc
mov
popa
dec
or
sti
enter
iret
adc
int3
ss
jne
xor
push
cwtl
jo
mov
and
sub
pop
lret
je
xchg
inc
push
data16
outsl
xlat
push
xchg
dec
cld
mov
mov
stos
sahf
xchg
cmp
adc
mov
cmp
adc
cmp
and
cld
pop
loopne
or
scas
and
cli
movlps
insl
jno
jbe
loopne
mov
xlat
mov
sbb
sub
ss
sub
mov
sbb
cs
ja
push
lods
mov
dec
adc
out
fildll
scas
insl
sbb
les
cli
or
in
fs
daa
mov
pop
ret
ss
lcall
loop
inc
mov
mov
dec
cmpsl
jns
test
pop
cmpsb
push
dec
in
arpl
inc
aad
and
jbe
inc
cmc
dec
push
fcmove
idivb
sub
sub
ror
or
push
push
mov
popa
mov
mov
movsb
mov
cltd
mov
outsb
fucomip
movsl
cmpsl
vminpd
ja
fbld
inc
push
add
lea
add
cmp
es
cmovl
pop
adc
ljmp
cwtl
jns
adc
lret
and
xor
ljmp
movsl
sub
xor
es
mov
mov
insb
push
push
push
xchg
inc
push
sbb
sti
sub
push
inc
sbb
pop
lods
test
or
jae
je
fsubrs
and
imul
ja
inc
fsubr
mov
mov
rolb
imul
sbb
sbb
dec
les
repz
in
jp
mov
jae
sbb
mov
sub
jge
mov
outsl
mov
jns
cmp
xchg
orl
or
jbe
sbb
bound
mov
outsb
xchg
adc
cmp
or
jecxz
ds
stc
fdivp
pop
fwait
aad
add
sahf
mov
jns
rorl
int
fcmovnbe
inc
fs
insl
dec
pushf
ss
lds
out
lahf
xor
add
or
lahf
fldenv
dec
ja
jns
sbb
inc
and
push
cmpsl
repnz
hlt
push
ds
stos
xor
mov
cmpsl
jle
push
fdivs
sbb
jb
or
in
fwait
jg,pn
push
stos
std
shll
jo
mov
adc
add
or
and
jp
repnz
sbb
adc
mov
shll
push
mov
test
lds
arpl
lods
adc
jg
cmp
and
call
jl
add
shr
mov
push
data16
cwtl
jbe
ljmp
sub
sbb
sub
icebp
xor
mov
push
mov
or
inc
cmp
mov
or
jae
push
iret
push
out
jecxz
js
pop
in
dec
scas
xchg
andl
dec
fwait
loope
and
jnp
imul
das
and
lods
and
mov
and
push
sti
xchg
shll
aam
icebp
mov
sbb
lret
xchg
imul
jno
xchg
das
sbb
arpl
ljmp
fwait
dec
icebp
mov
sahf
insb
jp
das
ds
pusha
xor
in
gs
int
dec
mov
les
test
insl
push
dec
jp
pop
mov
popaw
cmp
das
in
pop
aam
jl
in
sbb
jo
sbb
mov
mov
loope
inc
adc
jmp
pop
lahf
lods
loopne
mov
xor
aam
push
push
push
fwait
das
aas
xchg
loopne
int3
mov
sub
cmpsb
add
inc
orb
jge
stos
jmp
mov
mov
push
sti
pop
out
push
sub
mov
out
inc
xor
gs
xchg
sub
lcall
fidivrl
sbb
test
jp
sahf
jno
cmp
cmp
sub
inc
push
cli
js
sub
lds
push
int
fdivr
adc
push
pusha
sti
sbb
das
stos
lcall
call
push
and
fs
rorb
dec
xor
xchg
pop
arpl
popa
mov
dec
cwtl
test
lods
cltd
dec
decb
mov
shrb
jmp
icebp
fcoml
xor
xchg
ds
je
jl
jle
fsubl
cmp
mov
insl
cwtl
jge
xor
jge
es
jb
xorb
mov
addr16
inc
xchg
add
aaa
orl
sub
or
filds
rcl
sub
repnz
repz
rep
clc
test
sbb
pop
mov
sahf
clc
mov
mov
pop
psubsb
out
xchg
enter
push
sbb
xchg
adc
out
pop
in
xor
cld
sub
jmp
add
push
cmp
aad
xor
push
mov
popf
mov
add
leave
bound
lock
add
scas
ss
ss
lcallw
sub
and
fidivrs
xchg
stos
push
rolb
cmp
lods
bound
or
mov
jecxz
add
jnp
mov
sub
rcll
pop
jbe
pusha
in
hlt
fldl
xchg
das
dec
cmp
data16
pop
data16
out
fcomp
repz
enter
jnp
inc
jb
xchg
stos
ljmp
scas
subl
std
push
leave
out
cmpsl
jno
das
sti
dec
add
dec
mov
mov
pushf
and
int3
dec
hlt
loop
cs
lahf
das
sbb
mov
or
jg
push
repz
push
sarl
out
pop
sti
mov
rcr
and
in
cmp
lods
pop
sub
jo
lcall
cmp
inc
orb
push
pop
arpl
add
cmp
adc
dec
cmpb
jge
cmp
cmp
inc
add
sarb
loope
cmpsl
mov
push
xchg
jne
mov
bound
add
dec
mov
stos
cmp
xor
mov
mov
cmpsl
mov
outsb
mov
dec
loopne
scas
cwtl
insl
pop
fstl
mov
pop
test
and
pop
add
call
mov
cwtl
jecxz
sub
or
adc
out
lret
add
je
cmp
ficoms
dec
inc
gs
and
insb
sub
xchg
lahf
pop
xchg
sub
out
lret
mov
jecxz
sahf
sub
jno
mov
notl
std
or
pop
lret
cmp
fldenv
add
rorl
es
fucom
inc
xlat
jecxz
xor
sti
jne
lds
sbb
fucomp
or
mov
lods
aas
jp
xchg
inc
jb
dec
inc
jo
stos
fisubl
and
addl
int3
cmp
jnp
or
iret
leave
inc
lods
push
inc
divl
lcall
jge
in
jns
stos
out
inc
push
sbb
lods
jp
xchg
xchg
jbe
test
mov
mov
mov
test
cli
pop
jp
test
fnstsw
mov
sub
stc
and
cli
shlb
pop
out
mov
pop
scas
xor
or
scas
adc
cmp
xchg
dec
subb
mov
pushf
push
mov
das
jmp
shl
das
sti
repz
jne
pop
cmp
movsb
aaa
inc
popf
xchg
mov
mov
pop
in
cwtl
inc
insb
sti
mov
imul
jp
and
or
sub
cmpsb
jg
idivb
inc
negl
popa
inc
pop
dec
cmp
xchg
dec
jbe
popa
shrl
xchg
and
pop
insb
ret
das
fwait
or
adc
out
dec
dec
sahf
pop
pop
leave
test
sub
fstpt
xchg
sub
daa
mov
leave
push
test
mov
cltd
jl
xchg
lea
sarb
mov
lret
shll
outsb
fldcw
outsb
pop
loop
je
imul
pop
jg
cmpsb
jmp
sbb
or
cmp
loope
imul
pop
jp
push
adc
jbe
xchg
mov
and
pop
cs
cmpsb
fstl
std
fidivs
shlb
cmp
test
jae
mov
adcl
mov
out
cltd
movsb
daa
sub
add
nop
cmp
cli
mov
out
dec
lock
and
sti
fs
jge
icebp
xchg
outsb
jns
push
ret
and
jg
mov
mov
dec
test
mov
or
xor
pusha
jae
imul
ja
fwait
sub
adc
shr
dec
daa
imul
xchg
mov
ret
test
mov
dec
ret
ret
cmovns
lret
jns
sub
push
sarl
ret
testb
push
pop
mov
repnz
jle
jle
sbb
scas
call
jnp
lcall
pop
aaa
gs
out
rol
dec
ja
sbb
xlat
sub
insl
xor
test
add
or
push
pop
jae,pt
notl
ret
mov
mov
ljmp
mov
add
pop
cmpsl
xlat
int
sbb
rorb
aad
adc
test
mov
popa
pusha
sub
shll
xor
mov
fs
push
iret
in
dec
aaa
and
inc
cmc
int3
adc
out
or
cmp
es
pop
repz
jecxz
jg
jge
pop
jp
dec
insb
shll
inc
lock
jge
test
out
repz
imul
fwait
pop
out
push
push
cmc
inc
shlb
sti
sti
sbb
pop
gs
mov
outsb
insl
rcll
mov
rclb
hlt
sub
dec
rorl
push
mov
mov
mov
jnp
scas
das
outsb
mov
in
aaa
clc
and
movsl
shll
cmp
mov
pop
mov
fisttps
fmuls
inc
dec
loop
xchg
sti
adc
dec
or
movsl
ljmp
dec
arpl
loopne
adc
mov
je
jmp
insb
jns
pop
outsb
nop
dec
jg
jb
sub
jmp
dec
shrb
adc
jl
add
cld
jl
inc
test
jno
mov
mov
mov
push
mov
out
jo
mov
jno
xor
fldcw
sbb
out
inc
in
pusha
cmpsl
add
pop
and
adc
pusha
xor
jg
dec
fnstsw
loopne
jne
shlb
push
shl
out
push
mov
rorb
ljmp
test
rcll
loope
sti
fsubr
adc
pusha
stos
sbb
fiaddl
movsb
or
div
mov
out
sbb
push
inc
or
xor
out
sbb
sbb
add
ss
and
pop
push
add
mov
arpl
sub
iret
pop
loope
data16
jnp
lods
sub
mov
mov
shll
in
pop
dec
mov
adc
inc
adc
xlat
mov
outsl
or
roll
stos
and
cli
add
cmp
jmp
and
jmp
adc
cmpsl
out
dec
stos
popf
sub
xchg
pop
xchg
fbld
xorb
adcl
ds
push
mov
enter
cmpsb
jmp
jl
dec
test
mov
sub
xchg
mov
lods
lahf
cli
push
jle
lahf
jg
repz
dec
push
jecxz
sub
jmp
mov
lds
lret
aad
lcall
sbb
lods
or
mov
dec
cmpsl
std
sub
mov
inc
cmpsl
mov
sbb
iret
shl
test
jne
mov
fiaddl
lock
dec
jmp
and
stc
pop
js
mov
or
push
jle
push
lahf
repz
cmpsb
in
mov
scas
xchg
sub
sbbl
pop
data16
arpl
mov
cmp
daa
pop
xor
cmpsl
ljmp
inc
adc
outsl
dec
fimull
mov
sbb
nop
mov
or
jnp
pop
scas
aas
mov
out
into
add
and
loopne
popa
jecxz
out
ds
sub
stos
or
lods
andl
jg
xchg
fdivs
mov
ja
cmp
pop
push
enter
and
mov
cmp
js
push
xchg
sub
fistps
les
hlt
popf
or
push
xchg
cmc
push
mov
push
jnp
or
inc
sbb
or
dec
enter
fcmovnbe
cld
call
loopne
push
fs
lea
push
xorb
nop
jecxz
inc
cld
pop
fbstp
movsb
call
jnp
jo
ss
xchg
jns
sub
scas
scas
adc
in
je
xchg
jmp
inc
xchg
pusha
push
cmpsl
cwtl
xor
jb
aas
loopne
jp
mov
dec
daa
mov
test
adc
rcrl
out
xor
dec
push
add
aad
jb
mov
lods
mov
pop
add
scas
popf
mov
movsl
push
sub
aaa
push
xchg
xor
push
sub
dec
pop
mov
leave
cmpsb
or
movsl
cmc
cli
fsubs
xchg
jg
sub
push
lret
and
cmp
aam
add
js
bound
stos
movsb
aam
cmpsb
jle
adc
nop
and
mov
and
dec
lahf
enter
xchg
add
add
sub
jmp
push
addr16
pop
xor
fwait
orb
clc
fldl
aad
mov
jmp
int3
stc
adc
sbb
push
adc
std
pop
pop
or
sbb
mov
aam
out
pop
and
mov
cmp
iret
mov
push
or
add
sub
hlt
aaa
or
add
mov
mov
loope
push
mov
rorb
aas
xchg
insb
popf
pop
pop
pop
sarb
mov
mov
ds
push
cli
jmp
pop
inc
ffree
cmp
pop
jne
repnz
xor
lret
jge
sahf
fmul
adcl
leave
ret
stos
into
sbb
inc
mov
shr
cld
push
mov
imul
cs
insb
adc
imul
cmp
adc
mov
sub
mov
xchg
cmpsb
adc
mov
mov
mov
fidivrl
mov
int
inc
mov
mov
push
in
outsl
or
lods
pop
cld
mov
pushf
nop
mov
cmp
cmp
fwait
sbb
sub
mov
xor
test
mov
pop
xchg
jp
js
iret
icebp
add
cmp
sbb
sbb
pop
jle
enter
xchg
into
lret
pop
call
pushf
and
pop
xlat
pop
or
or
fld
cmc
dec
jp
sbb
pop
addr16
mov
jns
dec
mov
rclb
inc
xchg
fstps
xlat
sub
mov
push
cld
mov
push
adc
push
mov
nop
adc
push
test
push
pop
pusha
mov
mov
nop
ja
xor
push
fbld
xor
cmp
cltd
mov
add
sarb
mov
jo
inc
pop
arpl
imul
pusha
int3
jmp
mov
into
and
xchg
pop
orb
mov
xchg
push
mov
inc
or
fisubs
sarl
add
stc
addr16
add
aam
int3
sahf
in
sbbb
addr16
leave
loop
imull
push
push
dec
pusha
pop
pop
outsl
cmp
jae
cld
mov
or
add
fnstsw
mov
xchg
test
ret
ja
leave
aaa
ss
scas
cmc
add
fsubr
iret
push
cmpsl
pop
xchg
and
mov
arpl
add
jl
jge
sub
sbb
mov
mov
sahf
dec
sub
or
ret
and
mov
repnz
or
popa
push
scas
mov
push
into
mov
leave
inc
cmp
imul
popa
hlt
shll
jb
gs
popf
je
add
cli
cld
popf
sbb
xor
movsl
aas
push
inc
pop
ror
cmp
mov
push
sub
pop
or
mov
dec
mov
rolb
into
cmp
movsb
dec
aas
mov
test
fcomp
xchg
data16
dec
movsl
cmp
cld
pop
or
mov
andb
add
sahf
in
in
out
inc
in
push
xchg
push
test
xchg
incb
jnp
loop
mov
xor
movsl
sub
xchg
jge
and
xchg
pop
sbb
bound
mov
popf
jbe
or
test
pop
push
scas
mov
push
out
mov
and
xor
sbb
sbb
jae
subl
dec
cmp
insb
in
mov
dec
ja
call
int
fldenv
int
xlat
lret
add
push
jg
xchg
test
leave
mov
das
repnz
aas
adc
sbb
sbb
dec
adc
mov
inc
xchg
lods
sbb
jns
nop
inc
mov
insb
jle
jns
mov
mov
pop
test
sbb
loop
arpl
loopne
fmulp
mov
push
mov
shlb
mov
outsl
bound
xor
iret
and
rcll
icebp
out
pop
xchg
xor
mov
sbb
mov
orb
add
scas
ds
mov
mov
scas
jmp
inc
stos
loope
popf
jnp
pop
xor
push
jmp
sbb
lock
fucomip
lcall
inc
xchg
int3
xor
fadd
hlt
inc
push
jle
fcomip
movl
adc
and
or
aam
sub
adc
cmp
les
stos
sbb
jnp
int
les
scas
xor
add
or
push
popa
les
add
lods
jnp
inc
jne
popa
das
fmuls
lret
lock
sub
adc
fcomps
sahf
stos
shll
shlb
cld
pop
int
mov
jne
push
jae
fadd
cmc
and
fdivp
stos
shll
cmp
cmovle
push
jmp
daa
stos
mov
mov
fwait
sbb
push
lret
sub
mov
or
fbstp
sub
sub
xor
int3
or
inc
in
push
int
sub
fbld
rcr
cmc
ljmp
rcr
mov
mov
inc
sub
mov
jmp
in
dec
xchg
mov
adc
cmp
fucom
cwtl
imulb
mov
add
jmp
ja
lods
sbb
pushf
std
shl
mov
mov
sbb
stos
mov
lds
dec
xchg
out
sub
xlat
loop
mov
adc
mov
xchg
popa
pop
scas
jle
sub
icebp
mov
pop
adc
sub
adc
push
enter
stos
fnstsw
sub
out
test
aaa
mov
lcall
fmull
pop
gs
pop
ss
push
sub
adc
sbb
loope
add
or
and
decb
mov
inc
je
xchg
pop
das
or
jb
jae
fbld
rcll
adc
test
aad
in
xor
inc
movl
fcom
and
mov
repz
movsb
mov
push
mov
cwtl
cmp
rcll
jg
cmp
les
out
arpl
jp
in
adc
jno
inc
cmp
rcr
push
mov
int
aad
sbb
int
aad
out
cwtl
mov
jo
mov
imul
insl
add
pop
cli
xchg
cltd
iret
lea
lock
es
cmp
mov
mov
push
int
mov
mov
call
into
shll
cmp
sub
in
test
fldcw
shlb
stc
push
dec
fwait
lock
jecxz
push
push
rcl
sub
push
or
xchg
movsl
sub
fisubl
and
jmp
add
xchg
cwtl
jp
in
add
jg
ret
scas
sbb
test
adc
insl
aas
xor
test
testb
mov
movsb
popa
outsl
ret
jp
jno
test
xor
filds
imul
popa
test
push
mov
pop
jecxz
dec
push
adc
xorb
inc
mov
sbb
xchg
int
mov
xchg
les
xor
push
add
arpl
in
test
pop
xor
or
lock
sbb
je
movsl
repz
call
push
data16
sbb
xor
xchg
shrl
lds
jne
mov
cmpsb
sub
aam
hlt
aam
or
and
test
sub
and
mov
cmpsb
xorb
inc
ja
sbb
in
cmp
and
fdivs
das
cmp
cmp
mov
pop
dec
inc
pop
cmc
xchg
lcall
jle
mov
pop
lcall
shlb
outsl
es
imul
pusha
arpl
mov
lret
xchg
add
outsl
lea
adc
jne
or
mov
mov
ds
or
ljmp
mov
add
arpl
and
repz
mov
or
sbb
mov
mov
dec
out
push
popf
lahf
fadd
jge
subb
and
std
call
mov
divb
addps
jle
mov
jg
inc
lret
dec
and
fcom
bound
xor
mov
stos
cwtl
xchg
mov
outsb
cwtl
andl
or
mov
pop
cmpsl
and
cmpsb
sub
xchg
inc
gs
outsl
or
add
test
lcall
clc
fucom
xchg
fists
lret
add
loop
das
shlb
xlat
dec
lea
mov
push
mov
lds
insl
xchg
ds
xchg
push
fldt
subb
imull
jmp
in
xchg
inc
pop
js
mov
aaa
stc
or
add
imul
icebp
pusha
int
xchg
jecxz
js
add
or
cmpb
and
test
shlb
push
sbbl
inc
pop
mov
sbb
mov
cmp
or
les
shrl
jmp
data16
rcl
repnz
xchg
adcl
arpl
pop
in
out
fists
adc
mov
hlt
or
adc
hlt
icebp
cs
rcll
clc
adc
pop
cmpsl
dec
adc
push
xchg
add
into
xchg
push
mov
mov
scas
xor
enter
jb
cmpsl
ljmp
enter
or
lea
adc
inc
nop
testl
enter
jae
jae
or
cmpsl
push
test
sub
in
je
add
dec
aad
lods
mov
mov
bound
xor
xchg
mov
add
inc
insb
popf
fwait
or
lret
es
addb
sahf
or
pop
cmp
mov
fadd
pop
les
jnp
xor
and
orb
jnp
add
out
pop
sub
fbld
in
aaa
fbld
mov
in
dec
popf
cmp
cwtl
fs
loopne
mov
arpl
fdivl
or
mov
adc
call
inc
push
inc
xchg
mov
insb
movl
sbb
std
cmp
and
stos
stos
push
sbb
fwait
and
add
push
call
scas
shll
pop
pop
cli
neg
outsl
ret
ret
mov
std
jmp
dec
fiadds
lret
pop
stos
ret
xor
sub
aaa
sbb
lds
dec
mov
imul
in
daa
xor
test
pop
push
push
test
mov
lahf
test
push
lahf
or
sbb
inc
out
or
cmp
test
insb
lcall
mov
sub
shll
and
mov
jae
insl
sub
std
lcall
sbb
xor
add
or
rolb
xchg
adc
add
sub
mov
sti
or
and
movsb
mov
adc
shll
mov
je
mov
adcb
enter
pop
and
xchg
iret
cmp
orb
pop
mov
xchg
xor
or
sub
sti
cmp
lods
jl
bound
cmp
mov
imul
add
ficompl
shll
movb
sub
in
mov
add
add
push
mov
subl
dec
xor
jle
jmp
arpl
sbb
in
push
cmc
fs
test
mov
bound
xchg
aaa
jge
sub
inc
leave
push
in
jbe
mov
leave
jecxz
lock
xchg
or
cld
dec
repnz
cmp
adc
test
xor
mov
inc
cmp
je
or
adc
or
aam
xchg
mov
push
xchg
xor
adc
jno
adc
jns
dec
cli
mov
ret
mov
dec
fisubrl
test
push
mov
jl
mov
clc
jmp
sub
pop
lds
lret
add
xorl
lock
mov
fcomps
lods
std
jae
push
or
xor
xchg
jle
or
mov
sub
ss
push
cmp
inc
repz
lea
jno
int
mov
xchg
test
lods
mov
out
or
ss
shll
sbbl
push
out
scas
lret
sub
cltd
clc
inc
data16
test
out
shl
sub
sub
xchg
daa
add
fdiv
fnstsw
jb
lods
sti
adc
mov
loope
daa
mov
clc
sub
mov
ljmp
xchg
push
scas
mov
and
shll
xor
aam
call
or
aas
ret
or
xor
mov
out
cmpsb
clc
fsubr
or
fs
mov
pop
jnp
imul
jp
jne
fiaddl
push
jp
add
nop
xchg
sti
fnstcw
into
movsb
test
cmc
nop
add
daa
dec
jae
push
rorl
in
inc
jns
pop
mov
stos
pop
in
ret
insb
mov
push
rcll
mov
or
jge
pop
test
jmp
jg
int3
filds
pop
repz
pop
lret
or
mov
lcall
cmp
mov
xchg
sti
cltd
test
rcrb
jle
jne
fstps
in
adc
imul
sub
std
bound
xor
inc
and
add
std
inc
test
pushw
rcrl
pusha
mov
mov
inc
or
imul
loope
sbb
imul
or
mov
jecxz
or
and
pusha
push
adc
cli
xor
fstps
std
sub
pop
mov
pop
test
mov
std
sbb
mov
pop
cmp
xor
pop
mov
pop
mov
jb
mov
outsb
cmc
dec
cmp
leave
push
cmp
mov
lods
mov
in
icebp
mov
hlt
sub
cmc
fldl
std
and
jb
and
ret
jnp
imul
and
push
push
jle
mov
pushf
cs
adc
dec
lds
inc
hlt
jnp
icebp
jae
lock
dec
cltd
add
cmp
push
adc
mov
cs
and
sbb
mov
pop
icebp
mov
mov
mov
shll
pop
inc
mov
jno
test
cltd
outsb
sahf
mov
xchg
shrl
int3
mov
jne
jae
orl
ss
push
jns
ret
testl
pop
jo
aas
adc
sbb
push
fstpt
fildll
repnz
sbb
out
fcoml
sbb
cmp
int3
mov
xor
cmp
jle
or
mov
ss
sbb
lds
fnsave
orb
fs
pop
mov
xor
shll
fs
test
pop
inc
xchg
xchg
rcl
pop
aas
push
cmpsb
ljmp
rcrb
cwtl
in
test
jmp
cmp
push
sub
xchg
push
out
xchg
fcmovnbe
fs
push
inc
mov
ljmp
adc
inc
repnz
push
int3
in
xor
rclb
sub
pop
mov
insb
add
dec
hlt
cltd
mov
xlat
popf
out
pop
movsb
mov
mov
mov
sub
sahf
dec
pusha
popa
push
adc
jle
fadd
xchg
aaa
sti
nop
pop
mov
push
pop
dec
sbb
sarb
iretw
or
xor
xchg
or
cmp
dec
icebp
jo
jne
cmp
stos
and
int3
jae
mov
sub
je
ror
in
xchg
sub
cmp
lret
hlt
js
adc
push
xchg
stos
pop
add
inc
call
sub
and
push
lret
nop
jge
cld
lahf
jg
inc
adc
jge
arpl
pop
pop
adc
jne
or
fsubl
jbe
inc
push
mov
mov
cltd
pop
aaa
ret
xor
mov
mov
cltd
in
stos
fwait
sub
add
dec
mov
xchg
enter
pop
roll
sbb
dec
mov
addb
or
data16
mov
inc
popa
ljmp
sbb
lods
scas
sub
loopne
inc
out
inc
pop
add
jl
arpl
push
call
out
frndint
jp
lods
scas
dec
lahf
jne
ds
cltd
mov
testb
test
out
inc
inc
pop
xor
movsl
les
iret
gs
dec
cmp
test
fs
faddl
mov
lock
push
pop
push
cwtl
sbb
lahf
or
pop
loop
push
and
add
loop
push
and
fwait
push
sbb
push
sub
shlb
xchg
mov
mov
insb
inc
xor
cld
cwtl
sbb
aaa
xchg
dec
mov
clc
mov
comiss
adc
cwtl
jmp
add
and
mov
push
fdivr
int3
xchg
add
movsbl
pusha
xchg
sbb
jbe
sbb
sub
dec
scas
xchg
mov
fwait
mov
mov
shll
outsl
stos
adc
dec
mov
jnp
cmpsl
xchg
mov
clc
out
cltd
inc
pop
xchg
sub
mov
inc
inc
pinsrw
loope
ds
cmp
cltd
dec
mov
arpl
in
shl
pop
jb
mov
mov
jno
std
out
repnz
sbb
and
xchg
in
jmp
push
push
sbb
nop
imul
pop
insw
lock
push
aas
imul
fdivrs
or
mull
xchg
movb
sti
cmp
cmp
pop
mov
push
push
sbb
push
cmp
lods
in
loope
aam
push
or
cli
sbb
rcrl
outsl
add
lds
nop
jle
out
loopne
pop
mov
fiadds
test
or
cmp
lea
push
popa
mov
fs
insl
fwait
push
outsl
mov
clc
push
aam
sahf
inc
ja
jl
cmp
movsb
inc
sub
cmp
jge
adc
or
dec
loope
leave
jmp
mov
sbb
not
cmp
idivb
enter
mov
enter
jno
rcrb
imul
std
jbe
mov
in
sub
jnp
sahf
push
and
xor
pop
mov
ljmp
xchg
aam
push
scas
mov
out
sbb
pop
dec
and
jg
dec
push
mov
test
int
push
mov
and
mov
jno
push
push
cmpsb
cld
mov
mov
loopne
add
sbbl
push
jmp
and
and
fwait
das
insb
aas
push
adc
mov
add
mov
loop
xor
imul
mov
or
rolb
mov
adc
stc
dec
cli
xor
inc
clc
add
and
adc
test
inc
mov
icebp
dec
ja
cwtl
or
pop
rclb
into
jl
sbb
addl
mov
aas
imull
out
dec
imul
fs
pop
pop
pop
inc
sub
sbb
outsb
mov
mov
test
fdivrs
cs
adc
nop
jge
or
dec
imul
stos
push
sub
push
test
mov
int
cmpsl
cmp
das
or
xor
push
xchg
mov
shll
mov
push
mov
xor
sarl
test
fwait
call
outsl
cwtl
insl
xchg
nop
push
pop
lea
dec
testl
inc
push
leave
out
mov
loope
mov
xorb
out
scas
push
jo
bnd
mov
loope
pop
sbb
out
adc
pop
imul
adc
mov
jno,pn
jle
ljmp
shlb
repz
icebp
jecxz
push
add
movsb
adc
adc
pop
repnz
popa
fucomp
xor
fwait
push
ss
enter
mov
das
das
ret
sub
loope
fldenv
xor
inc
push
inc
jne
mov
push
adc
negb
inc
and
repz
jbe
jb
call
pop
push
dec
sbb
add
les
imul
in
push
or
data16
lea
mov
jo
adc
es
jbe
outsl
bound
addl
mov
fimull
mov
add
inc
outsl
outsl
xchg
imul
sub
xor
inc
add
adc
aaa
cmpsl
inc
sbb
or
fwait
ja
pop
movsb
enter
iret
push
mov
or
dec
cmpsb
inc
inc
adc
lret
lret
stc
cmp
jne
push
lods
inc
mov
add
add
and
pop
inc
jl
in
dec
dec
shlb
cmp
xchg
je
out
sbb
sbb
jle
push
test
out
test
or
shl
cltd
das
cmpsl
gs
sub
pop
or
inc
scas
add
bnd
xchg
psllw
xor
repz
int
lcall
and
mov
jle
sub
rcl
pusha
add
ror
sub
outsb
adc
mov
fists
mov
sahf
loopne
cmp
sbb
arpl
and
sahf
loope
jmp
pop
std
pop
cmp
lea
test
xor
sub
std
cwtl
into
pop
gs
sbb
xchg
xor
addr16
mov
pop
or
xor
lods
imulb
inc
lods
add
inc
mov
mov
xchg
push
insl
popa
movsb
in
test
xchg
add
lods
mov
fs
js
imul
mov
test
pop
push
int3
loope
mov
cmp
pop
enter
aas
jbe
mov
outsb
add
and
dec
cmc
inc
test
movzwl
and
xor
aas
std
cmpsl
sahf
push
dec
rol
rclb
gs
xlat
xchg
push
insb
inc
pop
aad
aaa
or
in
push
nop
or
push
aad
lcall
jle
in
and
sbb
fisubl
jl
fdivp
push
int
fstps
push
cmp
push
mov
jnp
sti
movsl
jae
jle
mov
adc
popa
xchg
test
lret
adc
fs
loope
or
xchg
std
mov
mov
xor
pop
in
mov
push
push
ds
in
push
inc
jmp
daa
or
dec
and
add
xchg
or
shl
sbb
xchg
nop
jno
int
cmpb
mov
and
mov
sti
sub
divb
sub
cmpsb
sbb
mov
test
dec
lahf
cwtl
xor
jno
jno
add
mov
insb
call
jecxz
clc
int
cmp
cmpsb
sub
ret
sub
cmp
jge
sub
lods
jnp
fmul
pop
mov
rclb
loopne
dec
in
mov
add
jge
adc
jne
and
dec
and
mov
lahf
fcomps
sbb
lcall
stos
inc
sbb
dec
xchg
dec
lahf
add
inc
or
push
in
mov
sbbl
cmpsb
sub
repz
ljmp
stc
cmpsb
pop
dec
mov
dec
adc
xchg
shr
jl
cmp
add
pop
cltd
fstps
jb
push
cmp
jp
movsb
pop
psubusw
andb
or
subb
sub
das
or
mov
sub
push
pop
dec
addr16
inc
testb
mov
add
mov
in
pop
shlb
push
daa
int
fstl
mov
add
xchg
jp
dec
test
repz
pop
fbld
stos
js
out
xchg
pop
cltd
out
and
dec
scas
aad
data16
pop
je
insl
xor
inc
stc
mov
cmp
jmp
sbb
mov
cmp
insl
xchg
xor
fwait
cld
fildll
dec
lods
lret
imul
mov
xor
loopne
push
insb
inc
or
mov
loop
dec
or
fldcw
mov
in
cmp
or
repnz
repnz
fs
xchg
pusha
sbb
push
push
inc
aaa
pop
test
fadd
jb
pop
xor
test
add
addr16
lahf
pusha
mov
insl
std
and
test
insb
cltd
stos
xorl
rorb
and
inc
cmp
lret
daa
scas
jno
mov
pop
lds
mov
lret
adc
jns
sub
mov
sarl
in
add
dec
rcr
repz
fnstcw
inc
hlt
imul
cmp
adc
ljmp
jb
movsl
jecxz
xchg
fiadds
in
push
jle
jge
notb
fstps
xchg
jns
add
adc
cmpsl
test
mov
dec
test
test
mov
pop
sbb
idivl
pop
fsubr
cli
out
and
dec
pop
lds
mov
push
in
addr16
movsb
push
orb
jge
mov
mov
lods
jmp
iret
add
je
adc
pop
cmp
fidivrs
call
aaa
sahf
or
out
cmp
je
adc
pop
lahf
je
ds
jbe
sbb
jge
data16
insb
ss
push
and
aad
out
nop
into
in
xchg
js
popf
mov
sar
addr16
dec
inc
mov
out
xchg
fnstenv
push
push
int3
mov
xchg
mov
outsl
iret
xchg
cmpsl
in
mov
loop
add
ret
push
jnp
outsb
add
push
or
cs
in
fdivr
les
mov
xchg
clc
lods
clc
push
loop
sbb
popa
mov
ret
xor
xchg
sbb
push
dec
jmp
je
aas
pop
stos
test
hlt
lea
xchg
sbb
lret
adc
cwtl
mov
xorb
in
sbb
xchg
mov
pushf
cltd
mov
es
lcall
xchg
add
test
or
not
or
je
sub
or
and
add
scas
jae
xor
jl
jno
test
bnd
fidivrl
int3
shll
inc
add
ss
leave
outsb
ds
outsb
mov
test
es
inc
cli
jb
imul
mov
dec
hlt
mov
push
sti
xchg
repnz
sub
inc
jo
mov
sahf
lds
dec
mov
jp
and
dec
out
push
scas
sbb
incl
pop
popa
adc
in
cmpsb
cmpsb
nop
push
lcall
jmp
push
adc
jl
xlat
push
adcl
xchg
adc
mov
pop
ja
insb
mov
push
and
lahf
dec
cmp
fcompl
inc
mov
mov
mov
fsts
js
aam
inc
push
push
mov
mov
pop
push
in
adc
imul
push
cmpsl
lahf
xor
dec
out
xchg
inc
imul
ret
xchg
dec
inc
cld
dec
push
bnd
cmp
xor
fcoml
mov
push
rcll
lock
iret
insb
ret
mov
or
loop
shl
cwtl
shll
mov
cmp
pop
mull
inc
movsb
add
movsb
adc
clc
nopl
mov
aam
lods
cli
pushf
and
mov
mov
rolb
push
out
mov
jg
scas
fwait
mov
ljmp
jnp
xchg
test
cmp
clc
and
push
ljmp
mov
dec
movsl
add
cld
pushl
mov
and
mov
adc
mov
add
pop
jg
dec
fimull
gs
dec
or
push
inc
inc
leave
mov
push
int3
push
jl
in
popa
pusha
scas
hlt
dec
xor
fists
mov
sub
loopne
pop
test
pop
ficompl
js
or
jb
gs
adc
repnz
pushf
subl
rcr
mov
test
lret
sub
ljmp
fistpl
mov
daa
dec
imul
jo
xchg
and
sub
mov
fcoml
lock
out
pop
mov
in
add
sub
in
insb
add
jne
aaa
out
outsl
iret
repz
mov
pop
add
xchg
push
mov
xor
xchg
and
in
or
fisubrl
out
fldcw
jmp
nop
or
cmp
andb
scas
xor
daa
lea
movsl
mov
orb
pop
repnz
clc
addr16
mov
pushf
mov
jp
xor
call
inc
dec
mov
clc
inc
leave
push
cltd
cltd
insl
or
dec
push
es
sbb
leave
and
cwtl
into
inc
mov
xchg
mov
or
sub
adc
sarl
cmp
cwtl
daa
sbb
mov
int3
inc
and
clc
daa
xchg
jb
idivl
sbb
nopl
push
inc
mov
jae
add
out
cltd
jae
cmpsl
add
shll
dec
xchg
frstor
xlat
into
dec
adc
lcall
push
mov
std
adc
push
mov
rcrl
add
mov
lahf
ret
cmp
mov
rcrb
push
sbb
add
repnz
lds
pop
mov
or
lret
mov
ja
or
xlat
lahf
imul
iret
xchg
enter
mov
add
flds
jne
and
inc
cmp
adc
xor
mov
sti
mov
scas
pop
jecxz
xlat
pusha
imulb
sbb
imull
iret
pop
repnz
je
add
mov
lock
stos
sub
push
push
pop
sub
pop
cmp
cs
xchg
jno
leave
ss
mov
sbb
ret
lock
jecxz
ja
int
repz
jl
cmp
fldcw
inc
loopne
mov
sarl
cmp
pusha
mov
sbb
aaa
sti
js
mov
ja
mov
inc
mov
mov
in
rclb
xchg
lret
ret
stos
rcl
fcom
loopne
xor
inc
xor
and
lcall
out
stos
out
jge
daa
cwtl
in
push
ds
int3
leave
sahf
fcompl
lcall
and
push
aad
gs
sbb
push
or
jns
adc
popa
mov
dec
rolb
sbb
scas
pop
fs
lahf
shlb
loop
cld
insb
inc
movsl
sarl
xchg
sbb
dec
divl
scas
loopne
and
xor
cli
mov
jae
adc
dec
stos
add
insl
sbb
xchg
jne
pop
cmp
fwait
add
push
xchg
push
cmpsl
jns
cltd
xor
push
mov
fwait
and
loop
int3
sbb
mov
pop
sbb
xorl
or
int
jnp
sbb
fbld
xchg
sub
lock
pop
idivl
sbb
sbb
mov
stc
mov
decb
dec
andb
xchg
mov
pop
flds
rorl
add
cmp
sbb
arpl
mov
sbb
aas
in
lahf
xchg
mov
mov
pop
inc
cmpsb
adc
mov
lds
and
cmpsl
repz
std
nop
orb
inc
and
pusha
sar
imul
jb
push
xorb
inc
pop
push
dec
int3
stos
adc
xor
stc
aam
incl
jbe
mov
xchg
aad
outsl
fmull
dec
pop
bound
outsb
xor
call
cmc
or
push
aad
add
mov
jnp
push
mov
pop
push
test
test
dec
push
add
push
test
or
jbe
std
bound
xchg
jmp
xor
icebp
inc
and
and
dec
xor
push
in
in
pop
push
cmpsl
xchg
or
std
pushl
lahf
pop
xor
out
shll
jbe
cmp
repz
xor
aad
pop
enter
sbb
ja
pushf
inc
jae
pop
mov
sti
and
pop
push
jbe
addr16
sub
std
lods
jecxz
mov
addl
negl
outsl
push
in
sarl
into
push
cs
movsb
rolb
xor
jp
rcrb
pop
push
xchg
por
push
test
mov
iret
sahf
xchg
shlb
xor
ss
inc
aas
in
popf
enter
popf
cmc
ret
addr16
fiaddl
das
nop
xor
out
test
mov
inc
push
jp
clc
pop
pop
in
test
xor
int
dec
divl
sub
inc
dec
arpl
fiaddl
test
pop
andb
mov
add
lret
stos
je
fnstcw
daa
jl
adc
xchg
mov
mov
cs
test
outsl
dec
jge
push
jns
sbb
xchg
mov
mov
scas
arpl
imul
xchg
pop
cmc
sub
ja
andl
mov
in
dec
adc
cmp
lea
dec
daa
pop
mov
lret
xchg
mov
xchg
xchg
fst
xchg
sbb
icebp
aam
sbb
jmp
pop
lahf
daa
aaa
mov
push
sbbb
out
or
pop
cmp
add
jb
jo
int3
ljmp
in
repz
mov
loope
sbb
dec
aas
mov
ret
sub
xchg
lods
rcll
xchg
xchg
out
xor
sub
mov
sbb
dec
and
arpl
sbb
in
adc
mov
ss
mov
fwait
sub
mov
mov
cmp
faddp
loop
cmpsl
cmpsl
sub
xor
das
xor
ret
mull
sub
add
and
and
inc
pop
lret
xor
test
pop
adc
stc
pop
pop
pop
mov
std
add
mov
xchg
adc
shr
clc
jbe
xor
loop
mov
and
adc
cld
fs
or
pop
xchg
cmpsb
mov
add
cmp
shll
push
sub
jne
jae
insl
lea
out
cmc
push
cmp
pop
add
pop
mov
gs
dec
jg
sti
cmc
cmpsl
sub
jns
mov
or
push
pop
in
test
nop
sarl
enter
cwtl
test
out
insl
imul
loop
idivl
or
cmpsl
cmpsb
outsb
mov
insl
in
dec
mov
xor
daa
scas
imul
dec
jmp
jbe
rcrl
or
sbb
jne
loop
addr16
xor
push
daa
add
or
popf
add
sub
lret
loop
dec
jbe
inc
cli
je
subl
scas
inc
fidivs
xor
out
mov
inc
stc
pushw
lret
mov
aam
add
daa
outsl
sahf
sub
aas
cmc
cwtl
sub
enter
lods
add
jne
cmc
mov
in
mov
sub
push
mov
fiaddl
mov
push
dec
xchg
pushf
pop
jmp
cmp
fs
dec
repnz
mov
mov
jecxz
mov
mov
shlb
movsb
add
pop
arpl
outsl
aam
add
jl
and
ja
pop
xchg
jnp
jg
or
pop
lret
mov
insl
insl
xchg
in
fldcw
and
jl
mov
in
push
scas
push
push
int3
mov
lahf
inc
adc
loope
jl
cld
es
and
xchg
pop
lea
and
outsl
fwait
pop
mov
shlb
out
jmp
scas
js
pop
enter
mov
rcrb
ficoml
mov
imul
dec
lock
jb
and
lcall
xchg
js
scas
mov
into
dec
stc
loope
rclb
dec
fidivs
add
bound
inc
iret
push
jb
dec
mov
sbb
xchg
mov
add
mov
and
mov
sub
mov
or
iret
mov
sub
cmc
aas
cmpsl
test
lds
xor
xor
pop
xchg
push
mov
dec
fidivrl
jp
insl
sti
xlat
pop
gs
aad
lret
pop
and
and
cwtl
jle
daa
rcrl
pop
mov
outsl
insb
testb
pop
push
mov
lea
mov
aaa
and
arpl
in
fmulp
ret
cli
cltd
mov
dec
adc
jo
into
pop
ret
mov
jo
movsb
inc
in
loop
in
iretw
test
xchg
in
xchg
mov
push
je
add
lcall
mov
outsb
sti
loope
pop
mov
inc
mov
sbb
pop
xor
popa
mov
sbb
mov
adc
fisubrl
inc
in
mov
test
mov
mov
jmp
xor
jns
popa
push
aad
add
movsl
mov
mov
xchg
xchg
add
pop
push
cmpsl
cs
movsl
inc
decl
mov
sub
mov
fstpt
jb
iret
ljmp
mov
xor
jo
int3
lods
jo
xor
and
ljmp
cld
add
mov
xlat
lret
in
pop
pop
pop
jb
stc
mov
es
shll
pusha
jns
jne
dec
sbb
jg
out
dec
aas
orb
mov
inc
sub
imul
ds
std
xor
in
add
mov
add
jo
add
push
test
int3
das
push
notb
sbb
dec
int3
pop
adc
cmp
push
pop
movsl
test
addr16
mov
or
aam
add
and
out
outsl
xchg
mov
loop
out
xchg
cmp
push
push
xor
xchg
outsb
je
sarb
lcall
mov
cltd
jnp
jge
mov
mov
movsl
lretw
adc
mov
add
loop
ficompl
call
test
addl
sbb
push
push
or
mov
mov
inc
pop
or
sub
dec
jne
call
mov
pusha
inc
sub
jle
dec
sub
and
mov
lret
in
mov
mov
and
int
xlat
addb
shlb
lret
inc
rcr
cmpsl
push
mov
dec
jnp
mov
mov
addr16
dec
push
jmp
jbe
and
aad
xchg
mov
insl
lret
add
in
adc
leave
add
push
test
lret
cmc
bnd
xchg
sub
out
sub
sbb
scas
cmp
rorl
mov
cmp
lods
push
popa
push
push
and
dec
mov
std
add
push
push
mov
sbb
xor
mov
cmp
sub
sbb
inc
aad
aam
dec
cltd
mov
xor
dec
or
mov
popa
mov
lock
adc
cli
sbb
mov
sub
lods
xor
sbb
push
jnp
mov
hlt
push
rcll
dec
push
fiaddl
add
inc
or
pop
test
sub
xchg
or
fxch
or
xchg
scas
adcl
fistps
insb
or
mov
divl
leave
mov
movl
mov
sahf
pop
pop
sbb
lds
dec
adc
cmp
sub
jge
push
mov
xlat
movsb
sbb
xchg
jnp
lods
sti
xchg
cmc
or
fsubl
ja
pusha
roll
inc
mov
add
testl
jl
daa
jb
xchg
jbe
imul
xchg
push
dec
jp
pop
mov
inc
mov
sub
das
icebp
cmp
cmp
inc
inc
mov
xchg
or
daa
inc
pushf
add
sbb
fnstenv
and
pop
test
inc
push
imul
stos
mov
push
dec
mov
bound
std
sbb
fistpl
sti
mov
shr
das
sbb
sbb
rclb
das
pop
in
jae
and
arpl
mov
bound
xor
ret
push
sbbl
mov
scas
mov
clc
jo
push
xchg
in
mov
push
pop
and
add
dec
or
andl
jl
test
in
push
mov
jmp
leave
into
scas
out
arpl
stos
add
cmp
imul
or
ret
inc
outsb
push
subl
fs
inc
addr16
data16
or
test
out
outsb
in
test
or
mov
pop
or
push
shlb
pop
es
xchg
mov
sub
pop
xchg
hlt
mov
xor
or
and
ret
mov
mov
or
push
xor
insb
xchg
sbb
adc
cld
fldenv
movsb
out
dec
push
icebp
mov
shlb
sub
shlb
xchg
xchg
popf
pop
inc
cwtl
mov
adc
xor
ja
outsl
jo
mov
cmp
lahf
and
jnp
push
mov
loop
imull
shl
inc
push
mov
mov
and
inc
jb
jp
rcrb
sahf
subl
sub
testl
xor
fsubrl
icebp
pop
scas
cmp
imul
into
hlt
scas
fdivrl
sub
gs
ret
fsubp
into
lret
stos
jbe
add
sbb
xorb
pop
into
testl
in
rorl
push
cmp
jnp
inc
mov
in
into
and
mov
gs
fwait
jmp
xchg
lret
xchg
mov
notl
and
sahf
pop
or
mov
idivl
testb
xchg
pop
lock
int
pop
push
and
fistl
mov
push
mov
jb
idivl
xchg
int
add
sti
sti
mov
xor
mov
pusha
scas
push
pusha
xor
sub
sti
mov
and
ds
aad
mov
sub
xchg
rorb
rclb
mov
je
add
inc
call
mov
loope
insl
aam
add
insl
shl
ficomps
filds
andb
insb
jl
aad
data16
cmp
pop
add
fwait
mov
adc
sti
jne
icebp
sbb
jns
mov
or
push
hlt
call
and
add
mov
in
pop
dec
push
in
mov
in
sub
bound
lret
faddl
xor
out
mov
mov
adc
cmp
mov
mov
add
enter
stos
call
pop
push
icebp
mov
xor
and
data16
and
dec
xchg
adc
arpl
sbb
or
cwtl
mov
sbb
fldcw
cmp
test
mov
pop
add
adc
test
push
inc
lret
push
push
pop
test
push
jmp
xchg
shlb
imul
jg
cld
lahf
jecxz
lcall
scas
add
sbb
and
stos
inc
aad
xlat
gs
xchg
int
movsb
or
mov
rorl
jge
mov
cmpsb
adc
cmp
or
sub
pop
pop
cmp
push
outsl
mov
and
mov
inc
mov
sbb
push
xchg
push
cmp
stc
xor
sbb
pop
add
pop
repnz
lret
mov
pop
jnp
pop
adc
cli
pop
cmp
test
push
sub
int
stos
push
add
xorl
lret
push
mov
mov
cmp
dec
aad
test
xchg
push
xor
mov
je
repnz
jae
fildl
sbb
lds
pop
aam
jg
fsubrp
xor
insl
adc
rcrb
xor
and
inc
imul
mov
dec
mov
sub
pop
mov
das
cmpsb
mov
jne
clc
insb
jnp
jns
jae
test
fisubl
int3
add
mov
dec
test
pop
xchg
mov
imul
test
xor
movsb
leave
movsb
xchg
test
nop
ret
xchg
sbb
mov
out
mov
cs
insl
stos
mov
sbbb
out
or
push
cmp
std
pop
cli
std
aam
sub
lret
or
jg
xor
jns
test
loop
sub
clc
jp
stos
jbe
int
push
nop
cmp
pop
or
lret
dec
push
inc
xchg
xchg
in
ds
flds
or
adc
mov
inc
xor
and
jecxz
sub
out
cmp
jmp
ljmp
dec
sub
sbb
dec
stos
mov
mov
jecxz
and
xlat
sub
sahf
sub
inc
pop
inc
xchg
outsl
scas
push
stos
leave
jne
xlat
loope
scas
pop
pop
jno
test
mov
xor
mov
sub
xor
decb
data16
mov
adc
or
adc
daa
xchg
movsb
insb
pop
mov
lods
notl
int
cmp
fisubs
add
push
push
push
out
les
mov
sub
push
lret
mov
xor
push
stc
or
mov
test
lret
fsubrl
pop
xor
sub
mov
adc
mov
stc
mov
jl
bound
adc
rcl
pusha
xor
mov
enter
and
push
imul
pop
dec
jp
or
mov
or
xchg
pop
push
and
jle
subl
pop
cwtl
clc
movsb
mov
lock
mov
out
jge
js
jecxz
lahf
inc
das
xchg
imul
repz
sahf
rcrl
pop
mov
cld
jle
and
dec
cmpsl
mov
nop
mov
ja
and
mov
mov
imul
sub
or
push
cmp
ja
pop
jmp
out
lret
push
fldt
xor
jp
pop
scas
out
int
xchg
cmpsl
xchg
movl
jnp
jecxz
test
aam
fimull
mov
push
and
mov
ret
sub
movsb
xchg
in
jge
rolb
mov
sub
mov
mov
push
fst
in
mov
inc
pop
lock
mov
push
es
movsl
inc
cmp
mov
imul
mov
inc
cmpsl
add
push
mov
push
or
daa
xchg
add
pop
je
cmp
hlt
fwait
mov
pop
dec
xchg
push
sti
fisttps
mov
cmpsb
fs
cmpsl
pop
lock
xor
mov
push
xchg
mov
pop
mov
lods
adc
arpl
or
adc
sbb
or
xchg
es
lock
cld
jg
repnz
bound
cs
out
ds
lods
inc
fildl
in
mov
orb
gs
dec
mov
jecxz
scas
ret
pushf
shl
pushf
out
add
insb
outsl
inc
adc
xchg
cltd
test
aaa
mov
sete
adc
loop
lds
js
add
mov
pop
lret
xchg
pop
addr16
dec
and
and
shrl
push
push
arpl
lret
rcrb
push
push
scas
fidivrs
sub
outsl
cmp
dec
jge
xchg
in
sbb
int3
xchg
clc
sbb
scas
test
push
xor
stos
lcall
jne
adc
jne
mov
push
mov
imul
xchg
setl
mov
cmpsb
sarl
cmpsb
sbb
aas
cmp
sub
push
cld
inc
dec
jp
dec
xchg
adc
jmp
cmc
cli
in
mov
add
inc
faddl
dec
xchg
aaa
iret
jmp
pop
stc
adc
mov
sub
dec
repnz
mov
xchg
adc
outsb
inc
inc
mov
sub
inc
and
scas
sub
cs
cltd
idiv
in
pusha
inc
cltd
aam
or
fcoml
cwtl
mov
adc
gs
xor
xor
out
mov
sub
sub
push
out
lcall
sub
add
ljmp
mov
push
insb
fadds
test
fdivp
dec
movsb
sub
aaa
loope
push
js
mov
cmc
jg
pop
add
mov
imul
inc
pop
insl
loopne
shr
sub
lcall
test
test
test
jbe
add
cmp
sub
and
pop
mov
inc
adcl
mov
xor
mov
int
push
push
enter
rol
cltd
scas
cld
dec
loop
xchg
jl
stos
movsb
imul
outsb
xlat
jle
jle
push
xor
imul
jnp
xchg
inc
jge
fnsave
mov
push
push
cmpsb
jmp
mov
in
or
popl
push
jmp
push
pop
mov
inc
mov
subl
fistpl
filds
cltd
pop
mov
ljmp
or
xchg
into
or
popl
sti
and
mov
push
rcrb
push
xor
mov
clc
sub
sub
aam
stc
mov
add
std
js
aaa
mov
sarl
pop
mov
orb
scas
mov
xchg
lods
sub
ja,pn
out
repz
and
aas
xor
jbe
inc
nop
pop
mov
scas
cld
fwait
out
mov
inc
js
sbb
add
dec
pop
orb
rcrb
sahf
shrb
std
lret
hlt
stos
xlat
ljmp
stos
push
cmc
leave
movsb
imul
pop
negl
sbb
push
sbb
mov
pop
xlat
in
jp
out
imull
and
sbb
push
loopne
aas
sbb
arpl
movsl
push
mov
cltd
insb
mov
sub
add
out
fwait
out
vpmaxsw
sarb
subb
into
sub
jae
cld
test
sbb
outsl
push
sbb
js
and
test
das
in
test
fcoms
out
mov
fsubrs
aam
popf
xchg
jne
pop
ret
push
push
jecxz
into
je
ljmp
cli
xchg
and
iret
dec
rolb
and
pushf
mov
cmpsb
cmp
pop
movsl
movsl
fidivl
nop
or
push
mov
add
insb
mov
xchg
mov
call
xor
jmp
inc
mov
mov
cmp
push
push
add
sbb
cltd
mov
lods
ror
pop
data16
movsb
cmpsb
cmp
dec
shrl
inc
adc
lea
lock
arpl
add
and
repz
sti
daa
outsl
movsl
lret
stc
stc
xchg
imul
negl
fdivrl
cli
mov
bound
test
popa
test
mov
lds
cmp
pop
lret
mov
mov
out
adc
jns
stos
adc
dec
mov
sub
cmpsb
jno
rcll
xor
and
adc
fcoms
inc
rcrl
aam
leave
push
lds
cmp
ja
inc
cmp
or
xor
xchg
out
jmp
jmp
insb
ljmp
leave
addr16
andb
and
push
adcb
fstpt
or
lock
adc
das
xchg
stc
push
add
fiaddl
stos
cmc
sub
gs
mov
loope
cld
sbb
insb
test
cld
movsb
scas
movsb
adc
push
cmpsb
test
rcrl
push
jo
pop
movsl
mov
fcmove
aad
bswap
aas
cmp
daa
fnstsw
adc
lahf
push
cwtl
mov
adc
xchg
clc
cmp
mov
pop
sub
mov
pop
mov
inc
and
adc
cmp
mov
cld
fisubl
mov
mov
jge
cmpsl
mov
add
jb
adc
jnp
pop
jae
mov
aam
test
adc
add
xchg
adc
mov
scas
in
and
ss
out
or
js
std
sti
icebp
inc
jmp
imul
lret
or
hlt
mov
js
cmc
mov
ljmp
repz
inc
xor
push
cmc
and
sbb
shlb
stos
cltd
popa
mov
xor
mov
pusha
pop
cmpl
mov
cmp
incl
inc
and
scas
leave
push
xlat
dec
sub
std
imul
and
push
jnp
push
loope
cmp
xchg
repz
mov
push
imul
dec
fistps
push
sub
adc
stc
sub
mov
cmp
jg
cmpl
movsb
jns
push
pop
sub
sbb
gs
ret
mov
xchg
dec
pop
push
jne
xchg
js
push
inc
cs
cmp
push
clc
es
xchg
sub
ror
pop
loopne
push
dec
clc
jne
inc
xchg
pushf
movsl
fisttpll
aaa
scas
adc
addr16
and
mov
jbe
jae
sub
mov
push
inc
lods
xchg
ds
xchg
mov
mov
xor
inc
das
ret
pop
lret
jbe
and
sbb
ds
xchg
sbbb
inc
pop
lods
lock
jo
pop
push
in
jo
xchg
xlat
pop
lahf
addr16
clc
sarl
and
das
roll
mov
out
movsl
out
leave
ja
jns
xor
and
mov
mov
xchg
sub
xor
jle
rcll
pop
xor
ret
mov
inc
stos
adc
clc
pop
mov
adc
xchg
add
xchg
in
push
es
xchg
pusha
ss
ljmp
mov
xor
xchg
adc
fnstcw
and
push
ja
into
es
loop
xlat
std
add
stc
xchg
jl
out
mov
adc
das
arpl
test
xlat
popf
ss
inc
das
outsl
shr
push
je
adc
push
shl
scas
add
imulb
xorb
sbb
ret
pop
sub
stos
adc
clc
pop
xchg
std
cmpl
adc
mov
dec
adc
stc
add
repnz
lds
push
rcll
scas
cli
jge
pushf
pop
xor
call
cmpsb
enter
ljmp
jle
inc
icebp
pop
pop
mov
ja
imul
loopne
xchg
jp
mov
ss
and
aam
mov
dec
das
jp
fidivrs
xchg
movsl
mov
divb
add
pop
fbstp
mov
dec
inc
inc
dec
push
out
imul
mov
cmp
test
pop
jecxz
std
pop
int
cs
test
push
decb
push
inc
in
ljmp
sub
sbb
push
inc
inc
mov
xchg
dec
mov
mov
test
in
xchg
cld
mov
imul
in
sbb
mov
ret
shll
shll
outsl
imul
xchg
daa
in
gs
xchg
mov
test
pop
push
mov
inc
lar
sub
std
and
inc
negl
je
orb
inc
add
sbbb
ja
cwtl
mov
das
mov
or
mov
sti
iret
fdivrs
fdivrl
shll
mov
lods
cmp
test
cmc
jnp
adc
loop
rclb
std
mov
xchg
repnz
mov
push
xchg
push
pusha
ds
push
pop
inc
and
in
pushf
add
jge
pusha
adc
into
ror
out
adc
cld
or
pop
cmp
mov
aaa
dec
test
insb
pop
outsl
dec
dec
mov
push
lret
fildl
fimull
push
push
ds
mov
push
fmuls
adc
lds
mov
aam
mov
pmaxsw
hlt
pop
fadd
dec
stc
adc
jl
dec
push
xchg
mov
loop
insb
cmp
lret
pop
cli
jp
dec
stos
cltd
jecxz
shr
mov
mov
insl
pushf
push
sahf
jmp
ds
test
lock
ss
insl
pop
arpl
and
or
loope
xchg
push
addb
lea
aas
xlat
mov
dec
rclb
push
cmc
mov
or
stos
imul
rcr
hlt
xlat
aad
test
add
inc
add
sub
repz
std
xchg
dec
xchg
or
sarl
test
frstor
or
jb
cmpsb
jl
std
or
out
and
mov
pop
add
push
fcos
dec
aas
lret
sahf
popf
aaa
xchg
xor
decl
xchg
mov
fiadds
mov
clc
mov
mov
lock
je
inc
xchg
repnz
dec
fcompl
adc
icebp
jmp
add
loopne
outsl
push
push
andb
sbb
in
fsubrp
sbb
repnz
sahf
int3
loop
mov
push
lock
jo
js
rclb
int
orb
dec
push
dec
inc
xlat
aam
vrsqrtps
dec
and
jp
mov
dec
std
and
adcl
mov
addr16
dec
in
push
das
jb
mov
add
add
xchg
push
mov
out
ficomps
dec
jno
mov
inc
shll
popf
iret
fnstsw
outsb
fimull
mov
je
fiaddl
ret
xor
jnp
cmp
dec
nop
cmpb
xor
pop
xchg
mov
inc
cmp
sub
and
pushf
faddl
inc
inc
insb
lret
pop
lea
test
shl
sub
add
cmc
mov
inc
pushf
dec
aas
or
and
sub
sub
leave
stos
sub
xchg
shll
mov
mov
and
dec
push
ljmp
rorl
mov
inc
in
les
in
sahf
loop
inc
cmpsb
inc
out
fimull
in
dec
xchg
fisubl
js
sub
mov
mov
cmp
dec
fbstp
jg
fldenv
imul
cmp
push
aad
ret
jp
adc
testl
jb
sbb
into
test
stos
push
lret
xchg
adc
inc
repz
push
xchg
sub
or
sub
fs
int3
pop
enter
jns
aam
cli
test
adc
leave
pop
or
out
pop
dec
cmpb
xchg
or
and
cs
xchg
imul
mov
mov
fdivrl
push
mov
ret
jbe
nop
shll
and
sub
xchg
out
ss
repz
xchg
aad
pop
cltd
jecxz
xchg
mov
inc
call
icebp
mov
ss
jmp
lret
push
sub
cs
sub
inc
cmp
pop
mov
fwait
jnp
leave
pop
scas
popf
lahf
popf
bound
xor
adc
daa
shlb
or
inc
xor
dec
xor
sahf
rolb
cli
pop
fsts
frstor
sub
mov
sbbb
movsl
push
sbb
call
pop
loop
inc
fwait
rcl
cltd
cmc
lea
inc
lcall
fs
inc
leave
xor
vcvttps2dq
sub
or
out
cmp
iret
push
cmp
das
fadds
pop
test
mov
loop
ja
cmp
ret
sub
cmp
xchg
jbe
add
xor
movsb
int
fstp
insb
push
xchg
mov
dec
or
pop
cmp
or
cmp
ss
add
sbb
fsubp
and
push
inc
in
jno
in
inc
cmp
arpl
cmc
mov
jae
cmpsb
out
movsb
add
xchg
insl
hlt
andb
xchg
mov
pushf
arpl
fstp
jnp
data16
and
xchg
xchg
inc
jle
jno
xor
rcrb
pop
and
neg
test
mov
lret
push
lret
sbb
push
fildl
jle
xchg
mov
loopne
out
mov
stc
test
and
fcoml
xor
ja
cmp
and
or
xchg
aam
mov
addr16
push
cwtl
outsb
adc
ficoms
adc
or
call
mov
inc
hlt
mov
jmp
or
push
or
clc
add
push
aaa
mov
push
mov
or
aam
mov
cltd
mov
pushf
cmp
and
outsb
subl
imul
pop
pusha
ret
imul
and
ds
mov
and
dec
clc
mov
mov
stc
jns
fsubrs
cmpsl
addr16
cmpsb
inc
div
aas
add
int
adc
jo
movsl
pop
or
js
ljmp
inc
cmp
cmp
scas
adc
jo
outsb
rcll
test
xchg
lcall
cltd
dec
xchg
adc
mov
pop
scas
push
icebp
pop
xchg
push
gs
std
arpl
into
pop
push
sub
and
fldt
jo
xchg
jnp
arpl
inc
mov
pop
decb
je
or
aaa
push
push
sbb
loopne
sbb
std
bound
add
js
sarl
dec
cmpsl
in
out
je
std
and
push
icebp
idivb
sub
in
shrl
inc
mov
movsb
sbb
mov
pop
mov
inc
pop
icebp
add
pushf
or
sti
test
test
ja
cwtl
xor
cwtl
fnstsw
jbe
mov
jl
jmp
out
add
int3
aaa
pop
rcl
fbstp
loopne
sbb
push
adc
rcrl
jo
iret
jle
pop
mov
xor
ror
lret
lret
in
push
je
and
xor
xor
iret
mov
fsts
call
cmp
fidivrl
push
scas
xor
mov
test
std
mov
enter
lods
fmuls
sti
adc
xor
shll
xchg
mov
xchg
nop
int
orb
es
loop
stos
bound
rcrb
outsl
jle
adc
jmp
cmp
test
mov
lahf
sahf
lock
pop
in
inc
sbb
and
xchg
inc
mov
and
je
arpl
or
adc
enter
jbe
pop
lods
or
cld
push
je
stos
adc
scas
leave
pop
rorb
adc
stos
mov
rclb
js
shr
push
and
iret
int3
outsb
outsl
pop
xor
cmp
ja
jo
rcr
xchg
cmp
push
mov
clc
lahf
popf
pop
mov
stos
jbe
xchg
and
jecxz
mov
pop
aas
adc
loop
adc
es
ret
pop
ja
mov
shr
shlb
jl
dec
js
dec
in
lcall
loop
das
and
jne
mov
cmp
lods
mov
imul
into
pop
rcrb
in
js
mov
out
mulb
dec
les
mov
insl
pop
mov
into
scas
enter
popa
adc
repnz
jo
fs
mov
xchg
stos
sub
icebp
pop
push
mov
clc
nop
dec
pop
rcrl
xchg
add
push
imul
icebp
push
lret
add
aam
fs
fdivrs
rcr
pop
sub
leave
sahf
imul
int
jno
pop
jge
cmp
inc
ds
test
sub
sub
push
mov
mov
es
lret
xchg
dec
out
subl
dec
jne
pop
jo
or
int3
shlb
inc
dec
cmp
sub
push
xchg
arpl
mov
xchg
cli
mov
lea
in
inc
jae
outsl
mov
push
iret
std
or
and
jno
push
cltd
mov
or
aaa
or
sbb
or
repnz
xor
xchg
orb
sub
popa
fldt
cs
mov
rol
clc
clc
inc
mov
popf
push
mov
mov
std
nopl
sbb
in
rcll
jb
pop
inc
mov
dec
xchg
xchg
xor
mov
and
testb
xor
push
add
fildll
mov
pop
fdivl
inc
or
jbe
insl
addr16
js
or
xor
mov
xor
ds
cmp
add
adc
or
sbb
push
mov
lcall
ds
loopne
inc
mov
jecxz
into
lds
insb
mov
xchg
sahf
mov
sub
and
cmp
repnz
xor
popf
push
pop
sub
mov
add
stos
adc
cmp
mov
jmp
cs
or
pop
shrb
fisttpll
dec
fisubl
pop
shll
sub
mov
test
popf
xor
inc
ret
test
xchg
xchg
dec
out
stos
mov
adc
cmc
pushf
lcall
fbstp
adc
test
clc
jl
pop
jnp
sub
jecxz
adc
dec
or
sbb
adc
cmpsb
cld
inc
repnz
data16
sbb
movb
outsb
das
cmp
loop
add
iret
jne
das
sbb
int
mov
xor
rcrb
rcrb
mov
and
xchg
sbb
push
cwtl
jmp
loop
call
filds
outsl
jns
cmp
fldcw
rol
into
mov
repnz
fsubr
fildl
cwtl
mov
push
adc
ret
sub
punpckldq
sbb
cld
and
shll
xchg
mov
jbe
mov
loopne
pop
jae
mov
cmpl
les
adc
cmp
sbb
pop
fdivrl
inc
loop
sub
out
das
mov
cmc
js
add
je
sub
inc
sub
insb
jmp
mov
add
int
fdiv
pop
clc
xor
xchg
and
jle
mov
call
add
and
and
ret
cmp
inc
sti
sbb
aas
in
int3
mov
jmp
js
mov
imul
sbb
shll
in
mov
cmp
ss
imul
jmp
test
test
sub
fdivrs
xor
enter
and
cltd
or
in
shl
pop
ret
jo
and
shrb
aas
xor
sub
jecxz
sub
popf
sbb
xchg
test
lret
sub
xor
sahf
and
sub
stc
push
call
lea
or
push
adc
jbe
mov
cmp
cmp
jecxz
sbb
test
clc
ficompl
mov
xchg
gs
pop
inc
into
xchg
daa
cmp
mov
mov
test
and
xchg
sbb
scas
orl
data16
out
sbb
data16
idivb
shrb
push
jmp
jb
xchg
adc
lods
jge
aaa
stos
mov
jne
and
mov
xor
jmp
jno
cs
icebp
into
fwait
stc
in
mov
setl
dec
mov
push
adc
test
adc
pop
dec
xor
xchg
sbb
mov
cs
mov
std
dec
stc
add
jmp
add
and
cld
jp
xchg
mov
sbb
push
jnp
popa
sbb
popf
mov
mov
fsubs
mov
push
fisubrs
mov
cmp
mov
sub
inc
and
popa
xor
test
jb
jb
rcrl
cmp
mov
mov
xor
pop
aad
arpl
cli
adc
mov
dec
xor
sahf
jg
xchg
stos
ds
pop
aam
test
je
out
icebp
cld
ret
inc
pop
jno
mov
mov
cmp
pop
push
pop
test
lea
push
enter
bswap
mov
adc
mov
imul
sbb
iret
push
rcll
add
dec
mov
ljmp
push
pop
cs
jmp
pop
test
lock
icebp
push
add
pop
push
mov
jb
pop
cmpsb
daa
mov
fwait
push
sbb
lods
or
mov
mov
and
jbe
cltd
pushf
push
and
or
lods
inc
sub
iret
mov
dec
jns
ds
subl
dec
sub
movsl
outsl
dec
add
or
out
test
push
sbb
dec
dec
cmc
mov
aad
aaa
adc
add
or
xchg
call
add
movsl
mov
push
or
pop
into
fisubrs
andl
cmc
xor
into
scas
xor
pop
hlt
sub
xor
pop
sbb
push
test
xchg
push
sbb
pop
lock
add
sarb
stos
jmp
sbb
nop
adc
xlat
sub
insb
in
xor
push
inc
add
aaa
mov
mov
cmpsl
shlb
mov
data16
jp
iret
adc
int3
or
mov
jne
or
mov
flds
test
xchg
pop
sbb
ja
adcl
aaa
mov
enter
pop
clc
dec
or
rol
push
dec
icebp
dec
out
mov
xor
cli
mov
mov
daa
inc
ror
sbb
mov
jl
jecxz
sub
push
cld
adc
out
dec
xor
sub
lret
xor
sub
mov
add
imul
pop
stos
lods
mov
cmp
repnz
mov
mov
add
addr16
dec
pushf
xchg
mov
push
cs
xchg
or
fmull
sub
pushf
mov
mov
jmp
icebp
aaa
lods
in
jmp
stos
and
jb
sub
mov
and
outsl
pop
xchg
jl
lcall
dec
data16
stos
pushl
insl
popa
inc
mov
test
lods
push
cli
sub
stos
lods
dec
lea
das
jp
int
push
push
inc
xchg
das
out
xor
mov
stos
jge
add
das
xor
cmp
cmp
roll
mov
lods
das
notl
popa
push
sub
push
xchg
add
adc
mov
mov
sbb
push
dec
sbb
xor
out
adc
sbb
cmp
mov
add
jae
pop
call
lods
lds
popa
imul
jl
iret
jle
jg
mov
stos
in
fistpll
cmp
stos
orl
sbb
push
test
fsub
cmp
mov
lods
add
test
jo
push
ret
mulb
fidivl
jbe
mov
cmp
or
mov
out
stc
fwait
test
jmp
xor
xchg
pushf
push
xor
xchg
out
out
xor
add
jg
hlt
sbb
in
dec
cmp
mov
pushf
jno
sub
repnz
lea
les
inc
inc
das
pop
xor
dec
daa
xchg
out
push
ja
lcall
adcb
call
int
outsb
adcb
outsb
pop
pop
jb
flds
pop
adc
aad
outsb
add
fs
inc
das
int
jne
ficomps
subl
test
aad
dec
movsb
xor
icebp
sbb
test
sti
pop
dec
popf
mov
pop
adc
sti
outsb
xlat
mov
xchg
push
jecxz
push
rcrb
mov
cli
jmp
sbb
pop
dec
dec
pop
cmp
in
inc
pop
aaa
jle
mov
cmp
jl
outsb
or
or
fldt
sbb
stos
imul
inc
aad
je
push
and
inc
popf
cmp
add
push
jmp
push
loope
inc
xchg
out
out
inc
inc
mull
push
add
rorl
rcll
fildll
aaa
mov
popw
leave
pop
sub
lea
push
loope
adc
clc
and
jmp
add
jbe
insl
movsb
jp
xchg
cmc
pushf
cmp
pop
iret
repz
bound
jbe
adc
adc
movsl
das
and
sub
jbe
xor
dec
lds
mov
push
out
popa
dec
scas
scas
rcll
movsb
sbb
pop
pop
pop
mov
aas
incb
icebp
or
push
sub
sub
jle
adc
divps
and
cmpsl
fists
mov
or
or
push
inc
rep
stos
and
ljmp
fsts
sbb
movsl
push
or
icebp
test
jbe
and
cmp
add
xlat
dec
inc
mov
push
xor
shlb
add
jae
mov
jbe
jg
xlat
mov
sub
sbbl
xor
or
add
mov
cmp
negl
or
xchg
out
addr16
call
inc
shll
xchg
mov
push
add
loopne
sti
and
imul
xor
out
jg
es
cltd
and
cmp
aaa
push
and
lds
aam
mov
mov
inc
ss
jno
xchg
hlt
inc
dec
les
fiadds
dec
test
ror
mov
fwait
and
sub
jp
xchg
and
sub
shl
lret
paddsw
xchg
loopne
in
cmpb
xchg
orb
shrb
out
inc
in
dec
addr16
sub
jecxz
aas
mov
pop
orb
pop
mov
push
es
jle
movb
rcl
and
pop
setg
call
sbb
xor
imul
inc
jno
pop
xchg
sbb
cwtl
and
movsl
daa
pusha
ja
je
loop
sub
repnz
cmp
mov
pop
add
test
push
xor
je
mov
dec
movsl
pushf
pop
icebp
pop
in
add
inc
sbb
fs
inc
pop
xlat
cltd
arpl
ja
mov
aad
stos
jp
into
jnp
out
fs
and
and
sub
push
push
lock
jecxz
inc
jmp
xor
or
pop
cltd
sbb
dec
mov
pop
rolb
dec
mov
adc
jmp
sub
xor
jns
enter
dec
in
sahf
xchg
mov
mov
lahf
pop
dec
js
inc
mov
in
ss
push
fcoms
aam
mov
ret
jns
aaa
daa
sbb
ror
dec
mov
jno
bound
mov
clc
adc
mov
ljmp
push
sub
enter
scas
add
aaa
pop
jp
mov
push
add
pop
jb
popa
inc
test
jge
jmp
in
add
jne
inc
fidivs
xchg
pop
outsl
cltd
movsb
mov
ffreep
cltd
lahf
mov
xchg
mov
mov
ds
pop
adc
inc
cld
sub
sub
mov
xor
adc
pop
ficomps
dec
sti
mov
nop
mov
mov
repnz
outsl
ja
imul
jmp
push
mov
imul
xchg
movsb
repz
int3
loop
fwait
adc
es
arpl
mov
cs
mov
loope
xchg
or
div
push
cmp
in
ljmp
inc
cmpsb
cmpsl
adc
xlat
push
lret
ja
lock
scas
in
or
jge
lahf
cmp
sahf
mov
scas
and
gs
mov
sti
insl
or
add
bnd
lock
inc
das
in
decb
push
lods
daa
mov
sub
fmul
notb
out
sbb
pop
mov
lock
cmpsl
sti
mov
or
adc
sarb
mov
inc
mov
jge
mov
and
mov
adc
pop
sbb
clc
gs
inc
icebp
or
mov
xchg
pop
hlt
cmp
pop
jecxz
xor
xchg
ret
mov
shrl
lea
sub
inc
lret
dec
pop
das
dec
cli
sub
stos
test
adc
stc
les
push
fldenv
fdivrs
inc
mov
cmc
sub
pop
cwtl
aas
inc
andb
mov
popa
pushf
movsl
fldl
jno
push
mov
or
popf
mov
fs
pop
loop
mov
lock
xchg
mov
dec
cmp
add
xchg
jns
push
sbb
cmpsl
fiaddl
fwait
push
jo
rcrb
adcl
mov
mov
out
loope
sbb
push
fcomps
pushf
sbb
xchg
and
insb
out
insb
shll
mov
fs
leave
scas
cld
or
xchg
xor
cmpb
pop
jae
out
sbb
inc
or
outsl
jle
xchg
stos
inc
sub
fwait
push
int3
ljmp
sbb
sbb
push
mov
adc
inc
mov
mov
roll
fs
sub
ds
roll
sub
paddsw
repz
push
loope
xor
push
or
dec
notl
pop
fildll
int
scas
mov
arpl
and
std
cmp
push
mov
jmp
and
push
xchg
pop
sbb
arpl
dec
stc
mov
xor
add
xor
sub
iret
stos
daa
jb
and
faddl
sub
sbb
or
mov
mov
nop
jmp
adc
or
inc
mov
test
sbb
sbb
nop
pop
adcb
rcr
mov
jnp
stos
icebp
or
dec
bound
xchg
add
and
test
cmpsb
fsts
push
loopne
jle
add
ss
xchg
roll
lods
cltd
es
out
leave
std
push
into
jnp
xor
inc
jmp
insl
jl
jg
add
inc
shlb
inc
stc
sti
pop
fucompp
mov
xor
inc
mov
test
daa
bound
pop
test
pop
sbbl
pop
dec
in
scas
and
inc
sbb
mov
sub
inc
in
jle
mov
fsts
out
xchg
mov
jne
shlb
jg
iret
pop
std
mov
fcmovu
dec
pop
adc
outsb
out
mov
daa
cmp
xor
cli
data16
mov
xor
fistps
dec
or
or
pop
push
bound
lcall
push
insb
mov
xor
jno
xor
adc
pop
or
testl
je
mov
aad
ficomps
test
arpl
push
pop
rorb
fdivr
sbb
aad
jmp
dec
cmp
out
les
lahf
in
mov
mov
pop
dec
daa
enter
xchg
push
jl
cmp
pop
pop
add
xchg
pusha
stc
lea
jne
add
out
pop
add
or
mov
sub
adc
dec
xor
or
cmp
cli
mov
mov
das
jp
inc
dec
mov
add
jmp
sbb
lock
push
jns
int
push
sbbb
mov
adcl
shrl
test
repnz
mov
sbb
pop
lods
mov
sub
sbbl
hlt
add
add
cmp
lea
mov
inc
adc
dec
push
adc
pop
loope
sti
jge
inc
jbe
mov
cmpsb
sahf
lods
mov
mov
pop
add
cs
aaa
lret
fistl
xor
inc
push
xchg
or
xchg
shll
and
pusha
in
dec
pop
ljmp
pop
pop
or
cli
pop
or
mov
in
xor
jmp
inc
lret
push
dec
mov
jo
xor
or
push
gs
iret
lret
rorl
sbb
inc
ret
sub
scas
daa
sub
mov
orl
loope
mov
pop
cmpsb
push
cmc
xrelease
xchg
xor
cmp
and
std
inc
sbb
sti
mov
js
adc
iret
lcall
pop
mulb
add
incl
mov
mov
test
jg
xchg
push
popw
adc
push
mov
mov
movsl
mov
sbb
shlb
enter
lock
inc
loopne
div
or
jp
lahf
adc
aaa
fisubs
in
iret
icebp
fs
dec
js
mov
ss
fwait
addr16
pop
jecxz
push
adc
adc
hlt
and
sahf
xor
test
mov
mov
inc
sbb
mov
pop
xor
mov
hlt
aaa
repz
adcl
shll
pop
mov
pop
dec
mov
sub
enter
std
pop
ss
sub
xor
ror
aam
repz
mov
leave
in
mov
mov
sub
pop
lds
dec
loope
push
repnz
ret
div
mov
insb
clc
popa
shll
cmp
jl
jno
js
movsb
adc
dec
divl
sbb
and
js
mov
shl
adc
jp
ficoml
mov
les
fbld
adc
mov
push
xchg
push
cltd
lcall
and
jmp
fisubs
cmpsb
call
rcll
lods
xchg
ret
mov
test
aas
aam
sub
add
add
or
test
aam
psrlq
cld
push
jae
repz
push
in
aas
push
cmc
xchg
inc
out
cmp
das
and
jmp
cmpsl
sbb
ljmp
xchg
ds
cmp
pushf
dec
fs
lock
xchg
sahf
adcl
xchg
mov
in
pop
inc
js
orl
ljmp
fmul
add
push
mov
outsl
int
mov
negb
sar
adc
shlb
ficoml
fcomps
cmpsb
lret
jle
sbb
mov
xchg
sbb
aam
cmp
lds
pop
pop
xchg
cmc
fcomps
cs
and
sub
add
mov
inc
lret
cmpsb
dec
insl
jno
outsb
into
mov
xor
fwait
sbb
mov
lahf
xchg
sbb
mov
sbb
pop
sbb
enter
mov
add
adc
or
mov
pop
fwait
aam
jno
adcl
imul
les
mov
mov
sbb
movsb
push
add
mov
and
mov
fndisi(8087
aas
push
in
mov
cmp
in
adc
out
xchg
xchg
mov
and
xor
cmp
int
fsubs
fwait
push
xor
add
xor
xacquire
scas
cmp
addb
pop
xlat
mov
push
int
jg
aas
pop
jb
hlt
mov
movsl
fucompp
jmp
test
mov
mov
popa
in
insl
aam
pop
es
cmp
pop
push
pop
mov
push
cli
shlb
mov
push
ret
pushf
clc
outsl
cwtl
sub
or
dec
inc
ds
inc
mov
faddl
and
and
cmp
lea
cmpsb
adc
sarb
leave
pop
fistpll
add
xchg
add
repnz
lret
push
out
cmpsb
xchg
scas
mov
and
and
push
das
inc
sbb
div
or
mov
add
sbb
sub
adc
dec
cld
dec
xchg
je
mov
mov
js
or
inc
cmc
jo
out
and
mov
scas
jg
dec
push
mov
xchg
ds
ja
mov
or
push
jecxz
sbb
je
repnz
and
and
inc
orl
add
mov
xlat
and
enter
je
jbe
and
mov
push
lea
pop
rorb
out
mov
mov
sbb
fidivrl
in
cmp
mov
cmc
mov
ret
inc
nop
pop
xor
xor
mov
test
xlat
popa
inc
cmp
push
cwtl
divl
outsl
xchg
and
add
inc
jo
mov
push
mov
or
xchg
or
mov
lock
inc
and
add
sahf
sub
inc
iret
and
cwtl
and
push
pop
arpl
xor
ret
jp
pop
pop
pop
jle
cmpl
stos
pop
hlt
lahf
popf
pop
mov
push
mov
loopne
aam
mov
inc
adc
in
mov
call
cli
stos
mov
outsb
inc
ja
adc
jle
sbb
aad
jb
mov
fs
mov
xor
mov
cmp
cltd
xor
or
test
ret
mov
rcl
aas
adc
rcl
ud2
pusha
popa
jne,pt
pop
mov
jp
outsb
mov
add
mov
std
int3
imul
sbb
pushf
mov
or
pop
insb
shlb
and
subl
sbb
std
jo
and
repnz
leave
bound
call
mov
insl
popa
test
sarl
ret
lahf
sbb
or
jb
hlt
insb
pop
cli
jmp
shl
push
cmp
aam
mov
dec
push
xor
movsb
shr
fsubl
nop
add
rclb
mov
nop
js
ljmp
popf
inc
fimuls
in
add
rolb
mov
xchg
sbb
jb
xor
dec
push
ja
push
push
jne
sbbb
mov
movsb
into
outsl
popf
cmc
nop
shll
sub
out
jnp
scas
sub
adc
inc
mov
push
dec
pop
rorb
sbb
fcoml
xor
mov
push
mov
pop
sbb
mov
prefetch
ss
fs
dec
dec
int
jns
mov
dec
push
pop
xor
xor
cmpsl
push
mov
cmp
dec
cmc
inc
xchg
addr16
ja
mov
movsl
arpl
cmp
inc
inc
xor
daa
jmp
jle
pop
imul
push
enter
loopne
push
fadd
gs
jp
push
pushf
out
lcall
in
dec
stc
inc
stos
fidivl
mov
adc
add
adc
es
mov
cwtl
test
xchg
leave
test
test
rolb
shrb
mov
and
cmp
cmpl
xlat
or
inc
iret
mov
test
adc
sub
aaa
push
aaa
pop
lods
lcall
lcall
call
outsl
test
xchg
xor
mov
mov
lds
loopne
adc
or
push
and
movsb
lea
outsl
int
nop
mov
push
add
jmp
dec
mov
jns
push
shr
inc
lss
jge
adc
jecxz
int
mov
movsl
cli
mov
push
imul
dec
push
push
enter
mov
jne
rcrb
pop
lods
cmp
pop
xchg
or
inc
mov
jo
pop
push
or
aas
jp
mov
test
xor
aad
cmp
jbe
or
movsl
add
in
push
xchg
push
pop
dec
ds
stc
sbb
gs
adc
cmp
jge
push
push
mov
mov
neg
sub
js
incb
scas
fisubrs
pop
cmp
mov
adc
xchg
cmp
lcall
pop
aam
jecxz
xchg
imul
inc
jno
push
bnd
xor
data16
push
cld
test
jo
das
repnz
push
jmp
mov
lds
xchg
sbb
scas
mov
add
or
jle
sbb
sbb
int3
das
int
dec
fucomi
aad
aad
push
jge
icebp
icebp
cmp
enter
scas
fisttps
int3
sbb
data16
pop
pminsw
xor
stos
xor
in
clc
jp
mov
dec
adc
add
push
data16
sahf
push
cmp
lds
sahf
or
jl
int
xchg
in
lea
hlt
into
mov
add
pop
int3
jns
addr16
loope
sbb
mov
fbld
ja
mov
push
xchg
loopne
popa
add
mov
push
sub
pop
idivl
jb
mov
mov
jp
sbb
dec
imul
mov
push
jne
out
cli
ja
insb
adc
call
jg
stos
sub
cmc
movsb
shll
add
mov
aad
xor
xor
xorl
cmp
push
pop
aas
stos
or
xchg
dec
push
adc
sub
mov
lcall
test
fyl2xp1
cli
pusha
xlat
jb
js
cmp
es
pop
xor
movsl
sub
cmc
pop
xchg
out
push
fistps
lret
aaa
jecxz
movsl
push
or
lea
adc
lods
jb
mov
push
push
mov
cmc
mov
sub
add
sub
ljmp
insb
ss
hlt
cmp
ja
jle
jge
sbb
dec
fs
xor
mov
jecxz
xchg
shrl
mov
aam
filds
sbb
ljmp
outsl
in
fcmovnu
cmpsl
into
iret
xchg
push
fistps
call
gs
aad
pop
into
pop
and
dec
orl
cltd
mov
and
mov
enter
in
out
cltd
pusha
mov
out
xor
blcic
mov
adc
push
jecxz
mov
sbb
xor
in
cmpl
test
jo
pop
push
ret
pop
cmpb
jnp
cld
dec
mov
pop
or
mov
fisubs
aad
mov
enter
adc
push
pop
and
and
and
inc
cmp
in
inc
cmp
xchg
sti
mov
push
cmpsl
ret
testl
mov
cltd
aaa
roll
insb
xor
mull
jecxz
aad
push
cmp
inc
jne
insl
adc
sub
mov
jl
xchg
add
out
out
sbb
push
xchg
inc
frstor
out
push
std
add
adc
push
mov
filds
gs
cwtl
insb
les
sub
inc
xchg
call
mov
push
adc
mov
mov
sub
mov
push
add
fcmovu
mov
insl
fldl
inc
fidivl
sarl
pop
adc
sub
idivl
add
jle
jg
fisubs
sub
movl
inc
add
cli
inc
movsl
out
rcl
cs
inc
cmp
jge
xchg
push
sub
aas
ja
push
and
cmp
or
cmp
mov
movsl
pushf
aad
roll
fisubs
loope
incl
adc
jmp
lahf
pusha
negl
out
mov
adc
and
ja
push
xchg
xor
cmp
xchg
jmp
repz
dec
test
popf
or
movsl
std
das
push
mov
jno
std
inc
pop
inc
enter
jne
sub
pop
or
jecxz
fs
or
lea
aam
loope
and
sti
push
push
and
mov
push
rclb
add
sahf
insb
pop
fsubrp
pop
movsl
sarl
mov
in
fdivrp
lods
dec
mov
cmc
jbe
es
push
ficomps
xchg
js
xchg
js
xor
inc
cld
mov
jle
lahf
jmp
sahf
cwtl
inc
stos
pop
nop
iret
jbe
inc
push
bound
sbb
jns
jae
mov
mov
pusha
fistpll
push
shrl
stos
loope
movsl
sbb
dec
adc
repnz
cmp
push
fstp
xor
jbe
add
xor
pop
in
scas
sub
or
stc
dec
mov
ss
lds
call
and
inc
testl
jg
repnz
sbb
sbb
push
mov
fucom
je
add
mov
nop
pop
sub
test
add
cmp
dec
xchg
xchg
dec
lds
outsl
mov
mov
es
call
sub
cld
xor
out
mov
push
popa
ret
sub
mov
xor
push
and
push
mov
mov
movsl
cmp
push
fadds
fsubrs
divl
stc
adc
sbb
mov
add
insb
mov
xchg
dec
jns
jp
add
nop
mov
mov
test
inc
inc
cwtl
adc
mov
ret
dec
mov
cld
sub
push
cltd
adc
leave
std
sbb
jl
push
out
int
fstps
call
mov
mov
cmp
xor
inc
aaa
xchg
daa
repnz
js
das
cmpsl
idiv
adc
call
push
dec
jns
add
insl
adc
nop
sbb
pop
js
pop
ret
mov
aas
cmp
mov
pop
mov
ss
jno
pop
popa
flds
das
mov
push
dec
jnp
dec
inc
sbb
inc
xorl
pop
adc
push
shl
pop
xor
inc
aam
repz
test
mov
dec
out
loope
in
xchg
pop
push
inc
clc
fnstenv
in
call
dec
mov
or
addb
bound
jp
scas
int
das
jmp
jg
insb
data16
cmp
pop
lahf
adc
sbb
lds
sub
push
fwait
test
int3
and
outsb
mov
and
jl
inc
outsb
and
inc
sbb
jae
aaa
test
arpl
rorb
xor
shlb
stc
cmp
daa
pop
out
stc
mov
xchg
dec
out
mov
xor
sub
loopne
test
test
test
mul
clc
pop
fwait
adc
add
loope
jnp
mov
and
mov
sbb
adc
inc
xor
vrcpss
pop
out
xlat
leave
aaa
push
and
add
sbbb
push
call
sbb
das
dec
inc
xor
cmp
or
jnp
adc
mov
cmp
into
xchg
inc
fwait
xor
mov
fsubl
sbbb
xor
fisubrl
and
insb
lret
pop
cmp
push
repnz
sub
outsl
std
iret
cmc
in
jae
in
sub
in
pop
out
pushf
fucomp
jmp
shrl
and
mull
lcall
push
lcall
adc
sbb
inc
adcl
mov
movsl
add
xchg
push
adc
leave
into
cwtl
inc
test
push
and
jl
or
hlt
in
test
fwait
test
jg
jb
cld
mov
adc
jge
cmp
sub
xchg
inc
mov
int3
add
dec
mov
mov
cmpsl
in
fwait
jns
inc
shll
shlb
sub
lds
pushf
pop
push
mov
dec
mov
daa
xor
push
pusha
jecxz
es
cmp
dec
cmp
jae
lods
int
es
mov
push
imul
sub
lahf
jl
sbb
popf
std
outsl
scas
test
dec
orl
xorb
repnz
packssdw
jb
mov
push
clc
aam
inc
pusha
adc
es
pushf
mov
cmove
cmp
clc
cmp
inc
shrl
push
imulb
jmp
ja
std
sub
mov
fcompl
sbb
cmp
adc
fsubrs
daa
sub
rolb
sub
mov
pop
mov
ss
into
sbb
fs
cmp
inc
jecxz
and
sub
cmp
sti
cmp
cmp
mov
in
cmp
cmp
lcall
imul
es
lea
test
ret
fs
pop
ja
push
xchg
mov
mov
cmp
sbb
pop
pop
mov
call
mov
cmp
shr
cs
and
jle
lock
jg
hlt
mov
mov
sub
cmp
xor
sahf
in
jp
mov
stos
sbb
outsb
fidivrs
syscall
push
ret
cmp
orb
outsl
test
jl
bound
push
jb
and
ljmp
bound
xor
ds
xchg
mov
iret
loop
cmc
int
mov
push
iret
dec
push
push
mov
mov
das
repnz
xchg
dec
in
add
push
inc
cmpsl
dec
loopne
insb
inc
mov
pop
jns
inc
pop
addl
sarl
or
xchg
or
sub
sub
adc
rolb
inc
pop
xor
lods
add
int3
test
pop
sub
or
push
sbb
pop
cs
jecxz
dec
pop
cmp
jno
sarl
mov
jns
aas
scas
aaa
pop
lock
mov
jle
lret
and
shlb
pop
mov
mov
ret
jb
repnz
test
icebp
mov
fmul
mov
cmc
jno
fiaddl
rcrl
aam
push
imul
and
pop
xchg
std
jge
xchg
cmpsl
cmp
sbb
aas
xchg
clc
lret
shr
pop
cmpb
and
shl
mov
xchg
push
pop
xchg
sub
pop
mov
addl
insl
imul
movsl
jle
lret
faddl
fwait
clc
test
mov
rcl
cmp
mov
push
cld
bound
or
dec
cld
sti
rol
out
pop
jp
in
dec
inc
jnp
pop
mov
push
jb
cmp
shl
sahf
fistpll
pop
jl
fwait
inc
stos
out
pop
es
or
push
rorb
repnz
movsb
loopne
and
mov
das
mov
andb
xor
dec
add
loope
or
ret
sub
icebp
mov
xor
mov
scas
cmp
loope
xor
or
xor
cmovbe
rcrl
push
testl
addb
sbb
sbb
shll
sbb
mov
jnp
mov
or
loopne
clc
outsl
lret
jnp
sbb
ret
daa
ret
out
das
xor
sti
cli
sbb
push
or
andl
or
cmpsb
push
xchg
lret
out
fstpl
lods
hlt
pop
xor
insb
jle
pop
ja
outsb
clc
xchg
xor
adc
les
inc
iret
adc
and
mov
mov
cmp
fsubrl
xchg
test
jnp
cmpsl
les
sbb
add
dec
lds
sti
mov
push
push
cltd
xchg
das
jmp
add
adc
mov
push
add
xchg
flds
insl
scas
lcall
and
push
clc
int
repnz
mov
dec
nop
loopne
lret
lcall
js
and
sahf
in
sbb
sti
fcmove
fbld
sbb
xorl
addr16
push
je
mov
dec
mov
jne
rol
out
mov
fwait
mov
lret
push
mov
jge
push
testb
and
lret
xchg
pop
sbb
movsb
pop
out
or
jae
in
and
mov
aaa
shl
es
fcomip
mov
hlt
push
popw
cmp
movsl
rclb
pop
test
mov
shll
sub
mov
loop
mov
inc
dec
fdivl
sub
or
mov
aas
imul
adc
jns
or
or
mov
stc
clc
loop
inc
shl
xor
int
cltd
xchg
arpl
les
out
pop
mov
loope
loop
or
or
popf
and
in
push
adc
mov
test
movsl
mov
fists
push
or
out
sub
mov
xor
or
xchg
into
lea
les
movsb
push
int
leave
stc
mov
neg
xchg
int
int3
or
lock
aad
push
jp
lret
sub
popa
adc
jne
mov
add
lret
shrl
inc
or
and
push
push
xor
sbb
inc
loop
outsl
jnp
mov
paddsb
int
adc
sub
rcrb
lret
pop
cmpsb
dec
scas
in
jae
sahf
loopne
imul
ljmp
daa
repz
or
sub
mov
and
jge
repz
mov
repnz
mov
and
mov
enter
sub
mov
adc
inc
xchg
stos
cli
test
push
add
sub
pushf
mov
clc
or
in
popa
or
test
scas
jge
xchg
test
mov
dec
mov
rcll
dec
and
int3
mov
dec
jbe
pop
push
adcl
cltd
xchg
xchg
jmp
fimull
insb
je
and
mov
lods
push
sti
mov
push
push
adc
or
push
push
ss
jle
jmp
mov
push
icebp
icebp
addr16
test
in
ja
sub
mov
adc
add
jnp
pushf
fsubs
arpl
push
xchg
sub
cs
or
js
es
mov
mov
or
sarl
or
push
outsb
pop
out
popf
adc
xchg
push
and
pusha
addl
mov
mov
jmp
in
xlat
adc
cmp
sbb
jbe
mov
int
mov
scas
cmpl
js
cmc
and
sbb
das
pop
mov
pop
je
jnp
mov
int3
js
fcmove
imul
mov
aam
or
inc
push
and
cmp
je
add
adc
push
jae
fildll
lds
xchg
xor
sarl
lret
lret
inc
loopne
cmpsb
pop
in
int3
xor
fs
pop
enter
loopne
sbb
dec
jmp
pop
test
scas
xlat
adc
stc
sbb
orl
nop
push
adc
push
mov
aas
mov
jne
loop,pn
cmp
addr16
mov
andb
scas
mov
leave
int3
push
jbe
mov
mov
mov
aaa
jmp
das
stos
inc
pop
jg
in
popa
sub
jp
mov
in
cltd
aad
mov
ds
in
mov
popl
sbb
pop
push
jle
mov
aas
jp
mov
scas
fwait
repnz
xchg
rorl
and
das
rorl
or
sub
in
lea
int3
fldenv
addl
shl
push
rcrb
sahf
push
fisubl
in
xchg
mov
imul
fwait
dec
out
push
inc
testb
iret
adc
mov
sub
sub
mov
in
add
pop
or
sbb
xor
cmp
xor
jg
loopne
daa
mov
subl
es
rclb
cwtl
cli
jno
mov
test
and
or
stc
int3
sbb
push
and
ret
pop
ds
jno
adc
leave
inc
je
lahf
mov
stos
mov
shrb
cmp
mov
adc
loopne
movsb
cmp
lock
jbe
daa
stc
inc
call
aaa
pop
mov
add
xchg
fs
inc
repnz
orb
cmp
adc
pop
sub
cli
fdivrl
fwait
decl
pop
mov
jmp
pop
mov
mov
pop
and
popf
mov
leave
stos
shll
jo
push
add
repnz
fidivs
mov
jmp
and
pop
jbe
out
jne
inc
xchg
arpl
xchg
inc
xor
pop
cmp
cwtl
push
mov
mov
inc
sbb
xor
xor
pop
jge
push
mov
in
pop
adc
lret
mov
hlt
pop
dec
lahf
fnstsw
adc
cmp
enter
mov
inc
aam
in
cmp
inc
sbb
fdivrs
icebp
inc
stc
cmpsl
dec
faddl
mov
lods
pop
mov
dec
sub
xchg
pushf
xchg
movl
push
mov
and
cltd
mov
lock
hlt
sbb
push
jl
inc
test
adc
add
ja
jecxz
in
and
adc
repnz
pushf
or
lret
mov
divb
pop
sbb
cmc
push
pop
sub
dec
sub
dec
dec
addr16
jle
mov
insb
ds
jnp
cmc
fimuls
gs
adc
xchg
xchg
cmp
scas
lea
mov
fisubrl
pop
cmpsb
outsb
mov
sub
cmp
adc
add
cmp
divb
add
pop
or
cmp
out
pop
pop
test
mov
inc
inc
imul
add
push
js,pn
push
in
sbb
out
push
mov
icebp
push
sub
or
jns
inc
stos
hlt
lcall
pop
pop
mov
ja
fsub
fisubrs
out
imul
imul
mov
xchg
mov
cmp
fsubrl
cld
xor
sbb
lahf
std
fst
jno
sbb
icebp
pop
mov
stos
lods
lea
xchg
cmp
sbb
inc
dec
adc
or
adc
inc
mov
xchg
insb
fchs
sub
mov
sub
mov
fcoms
ljmp
icebp
cmpsl
lds
rep
in
mov
xchg
gs
cmpsb
jp
hlt
shll
lods
fisttps
rcr
addr16
jb
dec
mov
aam
or
into
outsb
stos
sbb
pop
int3
adc
test
jmp
es
mov
jb
xorb
inc
cld
dec
sub
sub
cmp
fnsave
fcomps
or
das
scas
mov
orl
and
stos
je
dec
and
cmp
push
insb
pop
xlat
jp
in
les
call
pusha
fidivs
lods
fstps
lock
jb
mov
ds
cwtl
loope
or
mov
aaa
pop
xor
cwtl
mov
add
popa
jo
jg
test
subl
mov
push
fbstp
lret
xchg
xor
inc
push
jle
rclb
test
jge
movsb
mov
xchg
in
pusha
shll
push
test
xor
mov
push
inc
mov
jge
push
pop
xchg
dec
popf
into
les
or
ss
les
xor
pop
fiadds
fiadds
add
add
insl
cld
int3
and
cmp
test
adcl
lock
or
inc
adc
test
mov
js
out
ljmp
lcall
inc
sub
or
mov
cmp
movsb
mov
movsb
out
jo
fstps
sub
cmp
add
fists
push
nop
pushf
push
lahf
add
int3
mov
mov
xchg
push
sbb
cmp
cmp
mov
cmpsl
in
in
jge
aaa
sbb
dec
and
mov
sbb
test
jecxz
cmp
push
push
inc
adc
push
daa
popa
sub
testl
jbe
jbe
jl
mov
push
in
jno
or
pop
push
sub
pop
xchg
scas
mov
xchg
add
stos
clc
scas
dec
push
sahf
mov
pop
nop
movsl
inc
jg
fxch
and
clc
sub
not
jo
test
enter
xor
dec
pop
mov
mov
jnp
jns
movsl
jecxz
cmp
dec
ja
xor
jge
mov
loopne
jnp
push
lret
outsl
call
stc
ret
dec
lret
fldenv
push
jbe
inc
ret
dec
pop
sarl
xchg
adc
inc
push
loope
sti
repnz
mov
sub
adc
jbe
adc
and
push
fldt
push
dec
popa
pop
cli
dec
push
leave
mov
bound
mov
xor
test
sbb
pop
iret
xor
std
jno
idivl
popa
cmc
sbb
lods
and
std
mov
rcll
call
sahf
sbb
scas
mov
inc
cmp
outsb
sub
xchg
cli
or
sub
jo
xchg
movsb
lock
inc
mov
in
mov
mov
lds
jecxz
jae
adc
lods
ljmp
setae
nop
or
insl
ja
sub
sub
enter
sub
xor
adc
scas
imul
cli
xchg
fidivl
lahf
bound
mov
jns
mov
sub
dec
mov
fmulp
mov
aad
xchg
sub
push
add
dec
repz
lods
dec
inc
lea
in
jg
jbe
xchg
popf
mov
je
fdivl
and
ss
or
rorb
dec
add
cmpl
push
lods
or
xchg
and
les
imul
adc
dec
jmp
test
addb
imul
testl
dec
xchg
jle
jae
sti
dec
loopne
jecxz
xor
push
arpl
jne
pop
jmp
insl
cmpsl
test
mov
mov
jp
daa
lret
cmpsl
movsb
mov
dec
inc
sti
lock
imul
js
lods
mov
nop
sbb
xor
or
lret
ds
cmp
dec
jl
out
in
sub
push
and
pop
push
pop
mov
test
leave
loopne
arpl
imul
and
dec
push
dec
adc
jle
pop
cltd
cmp
pusha
and
addb
insl
cmpl
inc
adc
jp
sbb
inc
xor
fidivrl
popa
add
in
int3
ret
and
sub
dec
data16
mov
ret
aam
or
xchg
in
dec
cmp
xor
ds
push
xor
cmpsl
aas
jp
enter
int
nop
or
jo
add
shl
cmp
ljmp
push
cltd
cmpsl
jp
mov
jne
test
and
push
sub
imul
insb
ja
xor
mov
ss
mov
lds
jae
int
push
pop
xor
js
push
call
push
icebp
xchg
and
std
sub
dec
jecxz
dec
xchg
cli
xchg
enter
inc
mov
bound
mov
pop
push
push
stos
ss
in
out
mov
xchg
pop
mov
lods
add
and
mov
pop
push
cwtl
fwait
out
or
sbbb
add
mov
subb
xchg
test
mov
dec
adc
sbb
add
and
les
xor
ret
jge
mov
pop
mov
lds
mov
lods
jb
add
push
xchg
xor
pop
repz
js
adc
inc
or
lret
nop
out
pop
jmp
sub
mov
aas
jmp
sbb
imul
cmp
fldenv
out
xchg
xchg
add
sub
cmp
xlat
mov
sbb
push
push
mov
dec
push
fcomip
inc
or
xchg
std
and
fwait
lods
sahf
push
mov
pop
dec
xlat
and
rolb
mov
push
fisubrs
push
sbb
jbe
mov
adc
and
pop
rclb
xor
sub
push
jg
shlb
out
inc
fcmovnb
enter
xor
sbb
inc
sub
rorb
ljmp
inc
xchg
xor
lods
pop
leave
nop
call
push
shrl
inc
arpl
fists
aas
add
mulb
or
addr16
aas
mov
cmpsb
mov
or
add
lds
lock
push
pop
adcb
xchg
jo
cmpb
cld
cs
test
cmp
add
stos
xchg
sbb
pushf
mov
cmpsb
test
adc
inc
mov
fildl
addb
adc
xor
pslld
jb
bound
imul
in
idivl
xchg
nop
mov
xor
cmp
pop
or
ret
xor
stos
cmp
pop
ret
repnz
mov
mov
lret
inc
lret
and
pop
fninit
std
cmp
popf
outsb
mov
loope
ds
les
xor
adc
icebp
out
test
fstps
xor
and
jge
ss
aaa
pop
or
jp
jno
fisubl
mov
cmp
add
push
aaa
xor
jbe
mov
insb
sub
xchg
add
push
decl
and
leave
pop
ds
fnstsw
test
aad
pop
subb
jne
rcr
popa
ret
fnstcw
push
pushf
push
repz
fs
dec
push
pop
dec
cs
cmp
insl
pop
mov
jge
pop
pop
int3
xor
jbe
pop
pushl
cmp
scas
sub
mov
push
int
adc
pop
sahf
sub
jecxz
ljmp
or
xchg
sbb
mov
mov
in
in
cmp
jmp
roll
sahf
add
cmpsb
clc
mov
ret
in
inc
pop
cwtl
push
jl
pop
mov
clc
inc
push
imul
jb
in
add
out
xor
mov
jp
and
sub
adc
xchg
xor
mov
pop
lcall
lock
mov
lea
cwtl
add
pop
pop
mov
out
pop
pusha
sub
inc
xchg
add
cmp
fcmovu
pop
sti
popf
mov
adc
mov
imul
xorl
insl
jg
out
sahf
add
mov
repnz
cltd
loope
fimull
fstl
mov
sbb
iret
xchg
add
mov
or
lret
cmp
lods
pop
insl
imull
push
aad
xchg
dec
mov
mov
fists
add
add
aas
cld
jbe
sbb
imulb
popa
popf
rcrb
add
or
arpl
stos
cmp
fcmovnu
mov
addr16
dec
or
add
mov
xorl
int
mov
xchg
push
sbb
push
inc
jb
adc
std
jbe
sbb
pop
nop
add
lods
popa
aas
loopne
in
add
adc
push
sub
sarb
insb
aam
mov
sbb
cmp
or
or
int3
adc
sbb
lods
xor
scas
repnz
mov
push
sub
adcl
xor
add
xchg
fnstenv
mov
mov
dec
push
cmp
or
xchg
rcll
aaa
aaa
mov
call
pop
or
cmp
xor
mov
repnz
add
add
cmpsl
jne
xchg
pop
pop
jl
pop
movsl
aas
test
lds
lods
mov
sbb
sub
cmp
and
shlb
int
pop
xchg
fdivrs
cld
lret
adcl
dec
push
shrl
push
lret
push
test
aam
fcompl
mov
ds
dec
add
cmp
ja
or
or
aam
ss
mov
xchg
ja
jmp
xor
adc
pop
cmp
dec
xchg
addr16
sub
stos
cmp
je
cmp
xchg
or
xchg
pcmpgtd
aas
leave
push
mov
push
pop
push
scas
iret
mov
sbb
iret
cs
adc
or
outsb
xor
lds
jle
movsb
ljmp
and
push
pop
sbb
jmp
enter
push
in
dec
outsb
cmp
test
cmp
pop
cmp
dec
push
int3
pushf
xchg
push
or
das
adc
fidivrs
pop
bound
imul
adc
cmp
push
stos
ja
mov
hlt
test
imul
pop
addb
icebp
adc
insb
jl
or
inc
aas
mov
sub
cli
jb
icebp
mov
mov
mov
popa
adc
pop
cmpb
fldl
test
sbb
test
jnp
xor
rcll
je
mov
pusha
cli
cwtl
mov
fcomps
sarb
mov
icebp
cld
sbb
loop
mov
movsb
mov
add
xorl
adc
ja
mov
cmp
add
dec
cmp
leave
or
adc
mov
push
ss
and
call
aad
mov
mov
inc
aas
repnz
aaa
mov
pop
fwait
cs
sub
clc
mov
pop
add
mov
ja
jno
lods
jns
scas
fs
and
cld
jmp
adc
cmp
clc
mov
xchg
xchg
pop
es
out
mov
outsb
mov
xor
push
xor
popf
jge
mov
daa
pop
fcmove
sbb
mov
jle
test
push
push
or
push
mov
ss
out
sahf
std
jno
xchg
cmc
ljmp
sub
cmpsl
icebp
mov
fs
mov
jae
in
adc
lret
dec
mov
movsl
mov
adc
sub
cld
cmp
repnz
add
or
push
fsubrs
rcll
cmpsb
mov
sub
iret
sahf
cmp
xorb
popf
lock
push
cmp
imul
pusha
sub
cmp
fiadds
jns
leave
movl
idivl
fsts
stc
xor
sahf
jnp
aad
jns,pt
aaa
lea
sbb
call
push
ljmp
addr16
into
test
xchg
adc
xorl
jnp
dec
adc
in
mov
jno
push
mov
mov
push
fwait
cmpsl
aas
jl
imul
cmpsb
cmp
mov
cli
xlat
dec
jo
sub
mov
lret
inc
movsl
sti
push
jnp
cmp
addr16
pop
xchg
and
push
shll
call
out
xlat
mov
add
mov
pop
pop
xlat
imul
jnp
push
sub
mov
xchg
popf
mov
ret
loopne
add
xlat
fistpl
push
ret
adc
dec
lods
mov
cmp
stos
mov
pop
sarl
idiv
adc
mov
dec
test
lret
adc
jle
xchg
cli
test
mov
inc
sbb
stos
fwait
outsb
inc
lcall
daa
adc
push
pop
and
outsl
mov
sarb
or
fst
dec
inc
leave
loop
pop
and
shll
out
ljmp
xchg
lds
scas
dec
ret
mov
inc
mov
push
mov
test
cmp
mov
outsb
daa
fldcw
stc
pop
mulb
cwtl
shr
push
icebp
xchg
adc
inc
inc
add
adc
push
jb
sbb
cmp
mov
and
out
push
ficoms
std
pop
fcoml
mov
pop
loopne
cmpsb
arpl
mov
test
or
mov
or
pop
int
xorb
mov
mov
mov
inc
mov
jb
inc
dec
mov
and
nop
mov
jmp
cmpsl
mov
adc
push
scas
sub
shll
fs
and
clc
fildl
repz
mov
mov
out
cmpb
jo
arpl
iret
in
fwait
ret
lds
mov
and
xor
xor
push
xlat
adc
test
sbb
push
pop
movsl
and
movsl
mov
popa
scas
inc
cwtl
sbb
fs
inc
repnz
out
jmp
inc
dec
dec
cwtl
adc
clc
insb
lods
xchg
cwtl
jbe
mov
lea
rcr
in
testb
popf
adc
dec
lret
es
mov
leave
push
daa
sub
inc
sarb
push
inc
mov
sbb
jmp
lahf
test
or
sbb
or
mov
test
push
pop
mov
adc
inc
ja
and
mov
adc
mov
cmpsb
mov
js
and
lahf
loop
test
xor
into
fdivrs
push
mov
mov
adc
push
aaa
ds
mov
mov
shlb
pop
out
shll
movsb
rorl
iret
push
daa
pop
xor
mov
sbb
roll
pop
cmp
ljmp
pop
repz
inc
fxch
data16
lret
dec
xor
bound
arpl
out
xchg
in
adc
clc
addr16
push
adc
and
mov
push
cmp
add
cld
xorl
dec
sbb
out
mov
mov
mov
ret
cmc
mov
test
loope
mov
mov
mov
insl
idivl
insb
sti
mov
ss
sti
aaa
das
arpl
test
rcll
or
inc
stc
nop
lea
xlat
sbb
mov
and
jno
int3
push
sti
mov
mov
xor
stc
int3
or
cmpl
dec
je
arpl
dec
sbb
psrad
out
pop
daa
push
ja
sti
test
into
jg
loope
mov
mov
mov
mov
in
inc
ficoms
pushf
rolb
xchg
fnstenv
jl
pop
xchg
sub
scas
das
push
hlt
dec
pop
in
sub
ds
jne
test
mov
out
lods
pop
cwtl
pop
xor
cmp
mov
mov
sbb
mov
xor
jp
fisttpll
dec
aaa
sbb
push
push
iret
shll
test
in
fmull
mov
cld
lods
fisubrs
imul
xorb
pop
sub
xchg
gs
fucomip
idivb
cmpb
xchg
dec
mov
cmp
push
sti
fnstenv
dec
mov
ljmp
nop
jle
out
iret
popa
push
in
fbld
jl
sbb
fidivrl
stos
popa
or
pop
inc
mov
sarl
dec
or
jno
mov
lcall
cmp
push
add
jg
cmp
pop
in
in
cmp
fcomp
std
adc
pushf
mov
jmp
pop
fs
mov
mov
shrl
aaa
or
mov
enter
add
sub
jb
fisubs
int3
push
mov
cs
fsubrs
das
add
loope
jns
sbb
or
fs
andl
adc
std
or
pop
mov
jg
inc
leave
dec
and
mov
sbb
jo
pushf
jecxz
stc
mov
add
jae
insl
and
stc
mov
or
cmpsl
xchg
test
in
das
adc
aas
cmpsl
mov
sbb
stos
dec
xor
lret
enter
or
xchg
out
movb
imul
jbe
sub
outsl
lcall
xchg
cmpsl
push
pusha
lods
jns
test
xor
aaa
adc
stos
sbb
dec
mov
inc
inc
shr
cwtl
out
daa
xor
add
adc
pop
push
dec
pop
out
xchg
jo
lret
cwtl
xchg
pop
scas
push
mov
dec
test
push
and
leave
pop
dec
sub
jp
sub
push
dec
int
or
mov
mov
loop
sub
sti
and
mulb
loop
push
in
pop
cmpsb
cwtl
das
mov
shlb
roll
or
xor
lods
arpl
push
testl
aad
sbbb
movsb
push
hlt
mov
mov
dec
sbb
fucomip
aam
lea
cmp
sbb
push
imul
dec
call
push
idiv
shll
or
mov
icebp
sbb
sbb
push
push
into
xor
outsb
push
pushf
sbb
leave
xchg
bound
sub
aam
testl
pop
or
dec
or
mov
and
fwait
sub
pop
test
movsl
out
xchg
lods
ljmp
inc
pop
and
mov
dec
cmp
dec
push
sbb
push
rcrb
xchg
outsl
sbb
stos
dec
rol
xor
stos
push
lea
sub
outsl
cmp
loop
add
cmp
mov
push
arpl
dec
dec
dec
mov
mov
sub
push
repz
sub
out
test
dec
jmp
dec
mov
sub
scas
mov
mov
movsl
push
pop
inc
push
and
sbb
sbbl
adc
mov
lret
shll
gs
lock
cwtl
mov
mov
popf
adc
arpl
fistpl
pop
sti
inc
lret
inc
rsqrtps
xchg
inc
sahf
dec
mov
xor
dec
scas
pop
lods
orl
mov
mov
insl
imul
fistl
mov
ds
aas
pop
cmc
and
inc
testb
push
or
and
adc
clc
xchg
lret
lret
insb
jne
mov
mov
jne
loopne
push
les
lcall
jle
lret
enter
movhps
inc
jbe
add
mov
fwait
iret
int3
mov
adc
scas
scas
or
mov
pop
mov
inc
fidivl
adc
sbb
and
or
out
gs
sub
notb
sub
cmp
scas
add
imulb
sub
add
inc
inc
mov
push
sub
sub
jnp
push
xchg
dec
mov
movsl
out
mov
dec
and
mov
pushf
es
popf
jne
or
stos
sti
pop
scas
push
inc
les
sub
loopne
divl
xchg
data16
test
fs
lret
inc
lret
mov
inc
fsubr
cmp
push
scas
pop
sbb
mov
add
inc
je
mov
inc
xchg
rcrb
insb
rorb
mov
mov
adc
outsb
cmp
lods
adc
lea
mov
sbb
xor
lock
nop
cmpsb
cli
cmpsb
lret
imul
xchg
out
ficoml
dec
jbe
es
ds
jo
jmp
or
test
in
mov
push
movq
cmp
push
xor
iret
add
cmp
push
sub
dec
pop
fcomip
xchg
inc
outsl
popa
es
movsl
shll
inc
xchg
inc
mov
sbb
stos
out
jmp
xchg
xchg
addr16
test
mov
aad
lea
mov
inc
xchg
pusha
xchg
cltd
cmp
and
cmp
sbb
xchg
add
lds
test
or
lods
mov
mov
in
sti
fwait
in
lods
push
rolb
pusha
int3
xor
cld
lods
xchg
jmp
adc
sbb
dec
xchg
aad
aad
test
leave
adc
mov
xchg
cmpsb
add
lods
pop
adc
adc
fldl
inc
pop
jge
xchg
fcoms
xchg
and
ret
push
add
out
sub
into
pusha
adc
leave
out
inc
mov
push
push
add
mov
cmpsl
push
cmp
mov
arpl
or
mov
mov
hlt
mov
es
add
and
xchg
test
cmp
in
bound
mov
push
sub
insl
into
dec
sub
mov
push
jo
jb
mov
mov
addb
lret
push
mov
adc
or
and
mov
icebp
test
pop
mov
mov
pop
xlat
scas
call
shrb
loope
xlat
xlat
add
mov
orl
adc
xchg
jg
lds
adc
add
inc
lahf
sub
addr16
sbb
xor
outsb
mov
lea
lods
roll
lods
push
in
mov
jg
mov
cltd
sbb
imul
mov
cmpsl
mov
out
xchg
nop
jmp
pop
insb
inc
push
and
bound
aaa
add
es
daa
inc
insb
in
in
push
mov
dec
mov
andl
pop
xchg
rcrl
cmp
fdivrs
lcall
movsl
fcmovbe
push
xchg
adc
xor
fcoml
int3
cmpsl
sbb
mov
add
in
xor
sub
std
cltd
adc
xorb
mov
push
in
out
add
pop
out
test
mov
sub
jo
test
dec
pop
adc
data16
mov
or
dec
repz
lret
rorl
ljmp
mov
push
aaa
xor
arpl
cmc
cmpsb
add
shll
pop
test
repz
xlat
mov
bound
lret
inc
ficompl
sub
fcmovu
int3
add
es
cwtl
xor
scas
mov
lods
inc
outsl
xchg
sarl
jnp
loopne
out
sbb
rcrl
nop
fbld
push
jmp
sbb
inc
jo
cli
shlb
cli
jne
or
lods
add
ljmp
enter
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
