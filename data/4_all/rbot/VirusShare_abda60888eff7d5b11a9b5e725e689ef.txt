push
push
push
call
jmp
inc
sub
sub
dec
dec
push
inc
xor
and
jo
jb
addr16
cmp
and
push
inc
push
inc
and
arpl
sub
inc
insb
insb
and
addr16
gs
jb
gs
and
gs
jae
outsl
outsb
cmp
and
add
dec
push
xor
add
adc
add
das
fsts
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
xor
adc
add
add
add
add
add
shlb
add
incb
add
add
push
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
call
xor
inc
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
dec
xor
pusha
xor
js
xorb
xor
in
divl
inc
ss
ss
imul
mov
ss
ss
stc
adc
and
cmp
dec
aaa
addr16
jp
nop
aaa
mov
aaa
fidivs
repnz
or
sbb
sub
inc
cmp
pop
cmp
jp
mov
cltd
cmp
sarl
out
out
cmp
cmp
cmp
cmp
push
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
stos
cmp
jmp
out
cmp
sub
ds
ds
ds
arpl
insb
cmpb
ds
ds
or
adc
xor
inc
aas
push
aas
insb
aas
cmpl
ret
aas
aam
jmp
add
and
add
add
adc
sub
cmp
dec
xor
ja
mov
fwait
xor
xor
xor
xor
xor
xor
xor
pop
xor
jle
nop
xor
sub
cmp
inc
xor
pop
xor
xchg
xor
xor
xor
xor
xor
popa
xor
mov
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
ss
dec
xor
xor
jbe
jle
xchg
sahf
xor
loop
into
cmp
cmp
cmp
cmp
cmp
push
cmp
imul
mov
cmp
cmp
cmp
aaa
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
les
cli
cmp
aaa
ds
jbe,pt
cmpb
ds
ds
into
or
adc
sub
jb
aas
fwait
aas
scas
aas
mov
mov
aas
in
add
add
add
mov
xor
xor
imul
xor
xor
xor
xor
xor
push
xor
insl
xor
xor
xor
xor
xor
xor
shll
cld
xor
sarb
fnstsw
in
cmp
cmp
cmp
pop
cmp
outsl
cmp
mov
iret
cmp
cmp
cmp
mov
cmp
cmp
cmp
mov
adc
pop
ds
ds
loopne,pt
out
ds
aas
push
aas
arpl
xchg
lea
stos
aas
int
fdivrs
add
add
add
xor
shlb
xor
xor
xor
xor
xor
xor
xor
jle
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
hlt
xor
push
ss
ss
ss
ss
ss
cmp
cmp
cmp
xor
inc
cmp
popf
cmp
cmp
cmp
pop
aas
ds
inc
aas
pop
aas
add
add
add
add
add
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insl
xor
fnsave
pop
ss
aaa
sub
xor
gs
insb
aaa
mov
fnsave
adc
cmpl
cmp
sbb
arpl
mov
xchg
cmp
cmp
cmp
push
cmp
test
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
adc
sbb
and
sub
aaa
ds
ds
jbe
cltd
ds
movsb
ds
sarl
fnstsw
or
and
outsl
aas
js
jge
mov
aas
sarl
in
add
add
add
add
add
xor
xor
push
xor
xorb
xor
int
divb
sub
lret
xor
xor
jno
lret
cmp
cmp
cmp
add
sub
add
mov
and
shll
lds
je
in
xor
xor
cmp
cmp
cmp
cmp
add
add
add
pop
xor
xor
mov
mov
aaa
aaa
loopne
lock
cmc
aaa
cli
aaa
or
cmpl
pop
cmp
cmp
cmp
cmp
cmp
cmp
mov
adc
cmp
cmp
cmp
cmp
cmp
jbe
cmpb
cmp
sbb
es
inc
ds
ds
add
nop
add
jo
add
mov
xor
jae
lea
add
sub
dec
xor
bound
fnsave
pop
xor
xor
xor
adc
push
aaa
pop
aaa
insb
aaa
jl
xorl
aaa
out
cmp
cmp
jb
jns
out
ret
cmp
cmp
xchg
cmp
cmp
bound
mov
ds
sarb
add
xor
cmp
dec
aas
add
add
add
xor
xor
xor
xor
xor
xor
xor
pusha
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
jb
lcall
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xchg
xor
mov
cmp
cmp
cmp
cmp
cmp
jno
xchg
cmp
cmp
cmp
cmp
bound
jl
xchg
cmp
cmp
cmp
and
cmp
push
cmp
test
pushf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
loopne
repnz
xor
inc
ds
jo,pt
xchg
ds
mov
ds
adc
sub
inc
aas
pop
aas
je
nop
aas
mov
aas
clc
aas
add
add
add
adc
and
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
push
xor
push
jb
jp
xorb
xor
mov
mov
xor
loop
ljmp
or
adc
sbb
and
sub
xor
cmp
inc
ss
ss
ss
bound
xorb
ss
ss
ss
shlb
fidivl
loop
ljmp
aaa
or
adc
sbb
and
cmp
jle
sahf
aaa
cmpsb
aaa
scas
aaa
mov
mov
aaa
aaa
fidivs
out
out
aaa
divb
aaa
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
outsb
cmp
jle
xchg
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
outsb
cmp
jle
xchg
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
outsb
cmp
jle
xchg
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
outsb
cmp
jle
xchg
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
ss
dec
cmp
cmp
jbe
jle
xchg
sahf
cmp
mov
mov
cmp
out
out
cmp
push
ds
ds
ds
ds
ds
ds
ds
ds
jbe,pt
jle
xchg
mov
xchg
ds
cmpsb
ds
ds
mov
ds
fidivrs
out
out
idivb
ds
aas
push
aas
push
aas
push
aas
es
cs
ss
ds
inc
aas
dec
aas
push
aas
pop
aas
data16
outsb
aas
jbe
jle
xchg
mov
xchg
aas
sahf
aas
cmpsb
aas
scas
aas
mov
mov
aas
aas
fidivrs
out
out
aas
idivb
aas
add
add
add
nop
add
add
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
bound
push
jb
jp
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
jb
jp
xorb
xor
xor
xor
xor
xor
xor
pop
xor
outsb
xor
mov
into
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jge
xchg
xor
divb
pop
outsl
xorl
mov
ss
cmc
ss
aaa
pusha
aaa
insl
aaa
xchg
aaa
lcall
aaa
mov
aaa
shlb
fidivl
loop
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
jb
jp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
xor
dec
cmp
pusha
cmp
js
cmpb
cmp
mov
lock
sub
dec
cmpb
mov
ds
ds
adc
es
xor
popa
aas
in
aas
repz
add
add
add
bound
add
inc
xor
xchg
xor
xor
xor
xor
xor
xor
ja
xorb
xor
xor
xor
and
sub
cmp
push
xor
jno
xorl
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
and
sub
xor
cmp
inc
xor
push
xor
xor
mov
aam
stc
xor
adc
sbb
and
sub
xor
cmp
inc
ss
ss
ss
ss
imul
lea
mov
shlb
call
aaa
and
cs
inc
aaa
pop
aaa
insl
aaa
xchg
xchg
aaa
mov
aaa
ljmp
cmp
dec
cmp
jns
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jnp
jg
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
cmp
push
cmp
cmp
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
cmp
jl
nop
cmp
mov
cmp
loopne
in
call
cmp
cld
cmp
or
sbb
cs
dec
ds
ds
ds
js,pt
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
ds
in
jmp
aas
adc
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
imul
mov
aas
fdivrs
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
push
add
add
xor
or
or
adc
adc
sub
inc
xor
pusha
xor
xorb
xor
cwtl
xor
test
lods
xor
xor
fbstp
hlt
xor
adc
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
jo
je
mov
pushf
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
pop
xor
xor
insb
xor
je
js
jl
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
sub
cmp
inc
xor
push
xor
nop
xor
mov
xor
les
aam
fdivs
lock
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
cmp
inc
xor
push
xor
pop
xor
push
xor
mov
mov
les
loopne
in
call
xor
cld
xor
or
or
adc
and
cmp
cmp
ss
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
les
fidivl
lock
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
pusha
aaa
jae
ja
mov
pushf
aaa
lods
aaa
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
cmp
cmp
cmp
push
cmp
pop
cmp
cmp
insb
cmp
je
js
jl
cmpb
cmp
cmp
fdivrs
call
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
cmp
dec
cmp
push
cmp
cmp
test
lods
cmp
cmp
aam
jecxz
out
cld
cmp
sbb
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
cmp
dec
cmp
cmp
insb
cmp
je
js
jl
cmpb
cmp
cmp
sarb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
dec
cmp
pop
cmp
push
cmp
jl
cmpb
cmp
aam
in
hlt
cmp
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
inc
ds
ds
ds
ds
ds
ds
ds
mov
lods
ds
mov
mov
les
loopne
sti
ds
ds
and
xor
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
nop
aas
mov
mov
int3
aas
in
aas
clc
aas
add
add
add
pop
add
add
xor
inc
xor
jno
jl
cltd
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
bound
jle
xchg
xor
xor
xor
xor
xor
arpl
jge
cwtl
xor
xor
sbb
and
xor
inc
xor
push
xor
xor
xor
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xorl
call
xor
sbb
sbb
sub
sub
xor
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
mov
movsl
ss
ss
sbb
ss
ds
inc
aaa
dec
aaa
push
aaa
pop
aaa
lea
mov
aaa
fidivl
repnz
add
sbb
sub
cmp
inc
cmp
cmp
cmp
cmp
cmp
sbb
and
xor
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmp
insb
cmp
je
js
jl
nop
cmp
sarb
aam
fdivrs
loopne
call
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
cmp
cmp
cmpl
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jb
test
test
cmp
lock
sbb
ds
ds
ds
ds
jl,pt
mov
ds
fidivrs
in
idivl
add
aas
sub
xor
aas
push
cmpb
aas
fwait
aas
test
aas
aas
in
repz
add
add
add
dec
add
add
xor
sub
xor
inc
xor
pop
xor
jne
xorl
xor
xor
xor
xor
xor
xor
xor
push
xor
je
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
jno
xorl
cmpsb
xor
xor
xor
xor
xor
xor
pop
xor
xor
jo
je
js
jl
xorb
xor
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jge
test
mov
xor
divl
and
sub
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
nop
ss
mov
fidivs
hlt
ss
or
and
ss
ds
dec
aaa
pusha
aaa
jae
ja
mov
pushf
aaa
movsb
aaa
lods
aaa
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
adc
sbb
and
sub
inc
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
xor
aaa
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
arpl
jns
cmpl
mov
mov
cmp
cmp
cmp
sbb
and
sub
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
adc
add
add
sub
mov
mov
xor
xor
xor
xor
xor
xor
out
ss
mov
cmp
mov
aas
in
ljmp
and
add
add
add
wrmsr
sbb
and
into
xor
xor
xor
xor
xor
xor
xor
xor
xorb
xor
xor
xor
xor
pushl
or
cmp
cmp
add
add
add
pushf
add
add
xor
pushf
xor
xor
xor
xor
xor
shlb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
mov
mov
cmp
cmp
cmp
cmp
push
cmp
pop
cmp
int
or
ds
ds
ds
ds
sarl
add
add
add
add
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
ss
dec
aaa
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
in
cmp
mov
xchg
aas
into
aas
sarb
aas
fidivrl
fidivrs
loop
out
ljmp
aas
cli
aas
aas
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
cmpsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
outsb
xor
movsl
xor
inc
aaa
jle
mov
aas
cmp
cmp
cmp
cmp
sahf
cmp
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
ds
ds
fdivrl
cli
ds
sub
pop
aas
aas
fnstcw
lock
add
add
add
xor
test
mov
in
divb
or
xor
xor
xor
xor
xor
xor
scas
xor
cmp
aas
ss
outsb
ss
mov
adc
dec
aaa
push
aaa
jnp
xchg
aaa
mov
enter
push
cmp
cmp
pusha
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
jno
mov
xchg
aad
sbb
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
xchg
cmp
das
cmp
push
jae
mov
aas
dec
aas
sahf
aas
aas
add
add
add
add
add
xor
xor
xor
xor
xor
js
adc
push
xor
xor
xor
xor
xor
xor
xor
xor
stos
xor
cmc
xor
and
sub
cmp
push
ss
aaa
test
mov
aaa
repz
sti
aaa
pop
cmp
dec
cmp
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
aas
cmp
pop
cmp
jae
jl
test
mov
ds
mov
ds
aas
test
mov
aas
cli
aas
add
add
add
add
adc
sbb
and
xor
dec
xor
mov
in
or
and
xor
fbstp
pop
xor
xor
xor
xor
xor
out
xorl
aaa
pop
cmp
mov
aas
cmp
cmp
cmp
cltd
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
xchg
mov
adc
push
ds
arpl
jb
cmpb
ds
cmpsl
ds
ds
add
add
add
pop
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
scas
xor
in
xor
add
or
cmp
cmp
cmp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
dec
cmp
gs
mov
sarb
cmp
ds
inc
aas
stos
aas
mov
sarb
fnstcw
add
add
add
add
or
inc
xor
xor
xor
xor
xor
jno
cltd
xor
xor
xor
xor
dec
xor
jne
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
hlt
xor
cmp
ss
fnsave
in
add
aaa
xor
pop
aaa
gs
xchg
aaa
jecxz
ljmp
cmp
cmp
insb
cmp
fnstsw
sbb
sub
xor
dec
cmp
lcall
cmp
cmp
cmp
cmp
cmp
dec
cmp
je
jle
mov
mov
cmp
cmp
cmp
cmp
cmp
fdivrs
lock
ds
aas
sbb
and
sub
sub
xor
cmp
inc
aas
inc
aas
dec
aas
push
aas
pop
aas
pop
aas
fs
push
aas
jl
cmpb
aas
mov
xchg
aas
cwtl
aas
mov
aas
mov
mov
aas
enter
aam
fdivrl
loopne
call
aas
clc
aas
add
add
add
add
add
or
adc
sbb
sbb
and
sub
xor
xor
cmp
inc
xor
dec
xor
xor
xor
xor
jl
mov
mov
xchg
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
sbb
and
sub
xor
xor
cmp
inc
xor
dec
xor
xor
xor
xor
jl
test
mov
nop
xor
test
lods
xor
les
int3
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
and
and
sub
xor
cmp
cmp
inc
xor
push
xor
xor
outsl
xor
xchg
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insb
xor
jl
xchg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushf
xor
or
adc
xorl
add
xor
aaa
in
sbb
pop
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
dec
cmp
pop
cmp
imul
cmp
cmpl
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
arpl
push
cmp
mov
cmp
stos
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
cmp
push
cmp
push
cmp
nop
cmp
lret
cmp
sbb
xor
inc
ds
ds
ds
xchg
xchg
mov
fnstcw
out
idivl
or
and
xor
inc
aas
push
aas
addr16
jne
cmpl
aas
movsb
aas
mov
ret
aas
out
aas
cld
aas
add
add
add
sahf
add
add
xor
xor
xor
xor
jbe
xchg
mov
pushf
xor
xor
xor
xor
xor
xor
xor
inc
xor
pusha
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
sub
inc
xor
xor
xor
xor
xor
nop
xor
mov
xor
xor
xor
xor
xor
xor
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
enter
shlb
aam
fdivs
fdivl
loopne
in
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
cmp
inc
xor
push
xor
je
xor
mov
xor
fdivl
call
xor
cld
xor
and
inc
ss
ss
ss
ss
test
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
ss
adc
and
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
mov
aaa
int3
aaa
fdivl
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
cmp
push
cmp
jo
cmpb
cmp
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
dec
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
jge
mov
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fnstcw
push
ds
ds
jno,pt
cmpb
cmpsb
ds
ds
sbb
xor
lods
aas
sarb
idivb
add
add
add
test
add
sub
xor
call
ss
and
dec
aaa
jno
cwtl
aaa
mov
cmp
cmp
jl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
xor
cmp
cmp
cmp
movsb
cmp
lret
cmp
xlat
cmp
jecxz
out
jmp
out
cmp
sti
cmp
pop
or
adc
pop
sbb
sub
mov
add
add
add
sbb
add
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
dec
xor
push
xor
pop
xor
xor
outsl
xor
ja
in
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
int
shll
mov
mov
sub
imul
aaa
in
aaa
sub
inc
cmp
fdivrl
sti
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
insb
cmp
cmp
push
cmp
pop
cmp
arpl
cmp
outsl
cmp
ja
jnp
jg
cmpl
cmp
cmp
cmp
cmp
cmp
lahf
cmp
stos
cmp
mov
sarb
hlt
ds
aas
mov
aas
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jge
xorl
lea
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
je
hlt
xor
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
cmp
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
dec
cmp
les
call
cmp
cmp
mov
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
xchg
add
add
add
add
add
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lret
xor
outsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
pop
ss
bound
ss
outsb
ss
jbe
jp
jle
xorb
mov
mov
xchg
ss
ss
ss
ss
ss
mov
aaa
dec
aaa
insb
aaa
mov
stos
aaa
in
aaa
push
cmp
cmp
cmp
cltd
cmp
cmp
cmp
outsb
cmp
cmp
pop
cmp
cmp
outsb
cmp
jbe
jp
jle
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
cmpl
mov
ds
ds
ds
ds
mov
add
add
add
rolb
add
addr16
xor
xor
xor
jge
mov
into
xor
xor
xor
pushf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
ss
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmp
outsb
cmp
jbe
jp
jle
cmpb
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
add
add
add
jle
add
xchg
xor
xor
xor
xor
lods
les
fnsave
cli
ss
jg
mov
aaa
out
add
or
daa
cmp
movsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
repz
xchg
idivb
cmp
dec
aas
jnp
add
add
add
aam
add
nop
xor
xor
xor
pop
xor
jge
les
repnz
and
ds
ss
jns
mov
fdivl
icebp
aaa
aaa
pop
cmp
push
cmp
mov
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
lea
pushf
cmp
cmp
cmp
pop
cmp
cmp
pop
cmp
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
dec
cmp
jo
mov
cmpb
ds
ds
les
fdivrs
out
lock
and
xor
inc
aas
pop
aas
insl
aas
cmpb
aas
cmc
aas
add
add
add
add
pop
xor
mov
mov
xor
xor
jne
mov
xchg
xor
xchg
xor
cmp
push
cmp
cmp
dec
cmp
xor
or
inc
cmp
cmp
cmp
cmp
mov
xchg
aas
hlt
aas
clc
aas
cld
aas
add
add
add
add
or
dec
xor
xor
xor
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
pop
xor
xchg
xor
adc
sub
xorb
ss
divb
cld
ss
xor
pop
aaa
je
cltd
aaa
stos
aaa
mov
aaa
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sub
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
sarl
call
cmp
cmp
cmp
cmp
pusha
cmp
js
jl
cmpb
cmp
cmp
mov
cmp
xlat
cmp
cmp
cmp
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
imul
xchg
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmp
insb
cmp
je
js
mov
cwtl
cmp
sarb
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
and
sub
xor
cmp
push
cmp
cmpb
cmp
mov
mov
cmp
int3
cmp
fdivrs
add
push
ds
sub
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
mov
cwtl
ds
ds
sarb
fdivrs
fdivrl
loopne
in
call
ds
ds
ds
add
add
or
or
sbb
sub
xor
inc
aas
push
aas
fs
insb
aas
jo
je
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
sarb
call
add
pusha
add
stos
add
add
xor
xor
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
jno
mov
cwtl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
mov
int3
xor
xor
xor
inc
xor
xor
test
xchg
xor
xor
xor
inc
xor
push
xor
pop
xor
xor
insb
xor
je
js
jl
xorb
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
xchg
mov
xor
loopne
call
xor
adc
sbb
and
sub
xor
cmp
inc
ss
ss
ss
ss
ss
xchg
xchg
mov
ss
in
add
adc
and
inc
aaa
push
aaa
bound
test
xchg
aaa
mov
aaa
xlat
aaa
ljmp
cmp
cmp
cmp
inc
cmp
pop
cmp
jnp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
outsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
imul
mov
sahf
cmp
cmp
idivl
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
jo
cmpl
into
cmp
add
sbb
sub
aaa
ds
ds
mov
lea
mov
loopne,pt
in
call
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
xor
inc
aas
push
aas
pop
aas
outsb
aas
test
xchg
aas
mov
aas
aas
lret
aas
fidivrs
out
out
aas
add
add
add
add
or
sbb
and
and
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
js
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
les
shlb
aam
fdivl
loopne
in
call
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
inc
xor
jno
jns
cltd
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
stos
xor
les
fdivs
in
call
xor
cld
xor
adc
and
cmp
ss
xorb
ss
mov
ss
jmp
aaa
pop
aaa
sub
xor
ss
push
aaa
pusha
aaa
fs
push
aaa
je
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
fidivs
out
aaa
add
cmp
pop
cmp
push
jb
jp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
outsl
cmp
cmpl
mov
enter
repz
cmp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
xor
inc
cmp
pop
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
enter
in
hlt
cmp
add
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
inc
ds
outsb
jbe,pt
jle
fwait
ds
mov
ds
ds
or
pop
aas
pop
aas
xor
dec
aas
dec
aas
pop
aas
addr16
imul
aas
cwtl
aas
pushf
aas
mov
aas
mov
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xchg
xchg
xor
xor
xor
sub
inc
xor
pop
xor
outsl
xor
jg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
jnp
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
push
xor
xchg
mov
lds
lock
sub
xor
inc
bound
jo
test
mov
ss
repnz
adc
xor
ds
dec
aaa
arpl
jbe
test
xchg
aaa
stos
aaa
les
shlb
out
add
push
cmp
cmp
cmp
mov
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pop
cmp
mov
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
data16
cmp
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
outsl
cmp
mov
iret
cmp
out
out
cmp
pop
ds
pop
ds
ds
ds
ds
ds
bound
jae
mov
xchg
ds
les
aad
fistpll
out
cmc
add
adc
sbb
sub
xor
dec
aas
pop
aas
insl
aas
cmpb
aas
mov
aas
xlat
aas
ljmp
add
nop
add
mov
xor
xor
xor
xor
xor
xor
jge
mov
lcall
xor
xor
xor
adc
xor
popa
xor
js
jg
xchg
lea
xchg
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
enter
shlb
aam
fdivs
fdivl
loopne
in
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
imul
xor
leave
xor
or
pop
ss
dec
ss
imul
ss
lods
ss
add
adc
and
aaa
push
jnp
xchg
aaa
mov
shll
aaa
repz
add
adc
adc
cmp
cmp
cmp
cmp
bound
mov
pushf
cmp
cmp
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
arpl
cmp
cmpb
cmp
cmp
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
and
xor
dec
cmp
pop
cmp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
pop
cmp
mov
lds
jmp
cmp
cmp
push
ds
je,pt
lea
xchg
movsb
lods
sarb
loopne
in
call
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
push
aas
imul
cmpl
test
aas
in
cmc
aas
add
add
add
adc
and
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
xor
xor
xor
xor
xor
xor
xor
data16
xor
xor
xor
xor
xor
xor
sub
sub
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
and
xor
imul
xchg
xor
test
xor
std
xor
cmp
inc
ss
ss
ss
xchg
xchg
ss
ss
fdivs
jecxz
jmp
stc
or
sbb
aaa
dec
aaa
pop
aaa
jae
xorb
aaa
xchg
aaa
mov
aaa
aad
loop
ljmp
cmp
cmp
cmp
push
cmp
jae
jg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jo
test
mov
fwait
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
je
js
jl
cmpb
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
dec
cmp
nop
cmp
aam
clc
cmp
sub
sub
xor
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
jl
mov
pushf
ds
ds
ds
ds
aas
es
inc
aas
dec
aas
push
aas
pop
aas
fs
jne
mov
cwtl
aas
test
mov
aas
add
add
add
add
push
xor
xor
push
xor
xchg
xchg
xor
xor
xor
xor
or
sbb
and
sub
xor
cmp
push
xor
xor
xor
xor
xor
pop
xor
xor
test
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jo
shll
in
xor
and
mov
mov
nop
mov
fdivs
cmp
inc
aaa
inc
aaa
dec
aaa
pop
aaa
push
aaa
cwtl
aaa
jmp
out
aaa
repz
add
cmp
cmp
inc
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
iret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
inc
cmp
cmp
cmp
pushf
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpl
cmp
call
sub
cmp
inc
ds
bound
push
jnp
mov
xchg
cmpsl
les
sarb
jmp
aas
adc
sub
inc
aas
push
aas
fs
jne
xchg
xchg
aas
sahf
aas
scas
aas
sarb
aas
fnstcw
ljmp
rolb
testb
add
xor
xor
xor
xor
xor
push
xor
outsl
xor
mov
popf
xor
xor
xor
xor
xor
xor
xor
pop
xor
xorl
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
jae
xorl
cmpsl
xor
xor
xor
xor
xor
daa
xor
xor
pop
xor
je
jnp
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
sub
xor
xor
cmp
cmp
dec
ss
ss
ss
mov
pushf
ss
ss
ss
ss
aaa
adc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
ret
aaa
fdivl
icebp
aaa
or
and
aaa
cmp
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
lea
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
jbe
test
mov
cmp
and
bound
jae
mov
lahf
sarb
fistpll
cld
ds
aas
inc
aas
pop
aas
insl
aas
jg
cltd
aas
cmpsl
aas
mov
aas
idivl
add
add
add
push
add
add
xor
xor
xor
xor
bound
imul
jl
xorb
xor
xor
xor
xor
xor
xor
je
js
jl
xorb
xor
xor
mov
xor
xor
xor
push
xor
in
xor
xor
xor
dec
xor
pop
xor
xor
insb
xor
je
js
jl
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
ss
dec
xor
xor
lea
int
fidivs
and
xor
ss
xorl
mov
ss
divb
or
sub
cmp
push
aaa
push
jnp
aaa
test
aaa
out
aaa
pushl
adc
daa
cmp
cmp
push
jnp
xchg
cmp
std
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
pop
cmp
cmp
insb
cmp
je
js
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lret
cmp
inc
ds
jo,pt
cmpb
ds
mov
aas
cmp
cmp
inc
aas
inc
aas
dec
aas
pusha
aas
jl
mov
mov
xchg
aas
cwtl
aas
pushf
aas
mov
aas
mov
mov
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
bound
add
add
add
or
or
adc
push
xor
xor
push
xor
jns
xchg
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sub
xor
xor
xchg
cmpsb
xor
xor
xor
xor
xor
xor
dec
xor
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
mov
shll
pushl
aas
ss
ss
ss
ss
mov
shll
fdivl
lock
add
adc
xor
push
aaa
pop
aaa
bound
imul
jle
test
mov
xchg
aaa
fwait
aaa
lahf
aaa
mov
aaa
in
aaa
lock
adc
cmp
arpl
mov
test
sarb
loopne
in
call
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
jl
test
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cltd
cmp
cmp
cmp
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
jle
mov
ret
cmp
add
adc
and
xor
cmp
dec
ds
ds
jno,pt
js
jg
xchg
ds
aad
clc
ds
and
xor
inc
aas
pop
aas
arpl
jo
jl
xchg
aas
fwait
aas
cmpsb
aas
mov
fnstcw
jmp
add
add
add
outsb
add
add
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
mov
xor
xor
xor
xor
pop
xor
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jle
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
and
sub
xor
push
xor
mov
mov
xor
enter
fdivs
lock
sub
inc
ss
imul
mov
ss
fnsave
in
repz
sbb
and
xor
inc
aaa
pop
aaa
imul
aaa
xchg
aaa
cmpsb
aaa
mov
shll
loope
hlt
aaa
adc
cmp
push
cmp
insb
cmp
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
into
aas
aad
add
add
add
or
add
cltd
xor
xor
popa
xor
sub
sti
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
call
ss
lods
ss
ss
std
or
pop
aaa
and
jb
mov
cwtl
aaa
mov
aaa
shlb
cli
aaa
adc
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
ja
jl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jle
xchg
cmp
cmp
cmp
cmp
pop
cmp
cmpsl
cmp
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
je
fwait
cmp
out
cmp
std
or
pop
aas
mov
xchg
aas
stos
aas
mov
lret
aas
cli
aas
add
add
add
mov
xor
xor
xor
xor
xor
xor
xor
xor
jne
xchg
mov
int3
xor
xor
xor
shlb
or
dec
aaa
mov
push
cmp
test
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
sub
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivb
xchg
ds
loope,pt
sub
aas
lods
aas
add
add
add
add
add
xor
xor
xor
xchg
in
cmpsb
xor
xor
xor
xor
xor
xor
shlb
aaa
mov
loop
cmp
cmp
cmp
cmp
out
adc
arpl
push
in
cli
cmp
xchg
ds
sbb
jae
ret
aas
fnstcw
add
add
add
addb
add
xor
xor
xor
xor
xor
xor
cmpsb
xor
xor
xor
push
xor
and
push
ss
mov
or
push
cmp
cmp
cmp
nop
cmp
cmp
cmp
cmp
cmp
test
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xlat
cmp
inc
xchg
stc
or
xchg
aas
mov
add
inc
add
pop
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
ss
jne
test
clc
aaa
adc
clc
cmp
cmp
cmp
cmp
sub
ds
ds
lods
ds
aas
cmpb
aas
fidivrl
loope
add
add
add
xor
xor
xor
arpl
pushf
xor
jmp
add
jmp
pop
xor
xor
xor
push
ss
ss
sub
xor
xchg
cmp
cmp
cmp
cmp
test
mov
scas
cmp
cmp
cmp
loope
fs
je
js
jl
test
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
sarb
jecxz
clc
adc
es
cmp
dec
aas
push
aas
pop
aas
je
mov
xchg
aas
test
aas
jecxz
hlt
aas
add
add
add
push
xor
xor
push
xor
js
jl
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
lret
xor
and
sub
mov
ss
aaa
pusha
aaa
jno
aaa
xchg
aaa
or
sbb
sub
pop
cmp
cmp
cmp
cmp
cmp
jns
push
cmp
cmp
cmp
cmp
pushf
ds
aas
xor
imul
add
add
xor
xor
pop
xor
xor
push
xor
xor
xor
xor
sub
cmpsb
ss
aaa
stos
aaa
leave
cmp
cmp
pop
cmp
jne
jns
jge
cmpl
push
cmp
and
cmp
mov
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
movsb
ds
lret
ds
add
xchg
mov
ljmp
add
add
add
xor
mov
xor
xor
push
xor
pop
xor
xor
insb
xor
je
js
jl
xorb
xor
xor
imul
xor
mov
iret
xor
xor
xor
xor
or
mov
loope
pushl
jg
test
sahf
aaa
repnz
pop
cmp
cmp
cmp
cmp
cmpb
cmp
cmp
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
cmp
iret
cmp
fstpt
out
jmp
out
cmp
sti
cmp
pop
or
adc
and
inc
aas
mov
nop
add
mov
xor
xor
xor
xor
dec
xor
push
xor
pop
xor
xor
insl
xor
jne
jns
jge
xorl
call
xor
xor
xor
xor
xor
enter
and
xor
mov
ss
bound
mov
mov
xchg
aaa
xchg
aaa
lcall
aaa
stos
aaa
scas
aaa
mov
mov
mov
aaa
aaa
lret
aaa
shlb
aaa
fidivl
fidivs
loop
and
sub
inc
cmp
adc
bound
mov
cmp
cmp
cmp
cmp
cmp
mov
adc
add
mov
add
xchg
xor
xor
xor
xor
xor
xor
jb
xchg
xor
xor
xor
xor
push
test
stc
xor
xor
sub
lea
jge
cmp
cmp
cmp
mov
cmp
cmp
jp
xlat
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
ds
and
inc
aas
push
cmpsb
aas
stos
aas
scas
aas
mov
mov
mov
aas
aas
lret
aas
add
add
add
cmp
xor
xor
xor
xor
xor
mov
cld
xor
xor
xor
lea
xor
xor
or
ss
ss
ss
aaa
pop
aaa
jo
je
js
jl
xorb
aaa
mov
mov
nop
aaa
push
cmp
cmp
pop
cmp
arpl
cmp
outsl
cmp
cmp
cmp
cmp
cmp
pop
cmp
sarb
and
dec
cmp
jb
iret
cmp
cmp
cmp
cmp
adc
dec
aas
out
aas
add
add
add
or
add
dec
xor
arpl
imul
sahf
xor
xor
xor
xor
xor
xor
xor
and
xor
aas
xor
xor
xor
xor
xor
mov
and
xor
xor
xor
xor
xor
ret
xor
popa
ss
ss
jmp
cli
ss
aaa
sbb
aaa
mov
sahf
aaa
fnstenv
in
out
aaa
and
sub
inc
cmp
cmp
cmp
cmp
dec
cmp
jge
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
xchg
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
push
cmp
sarb
cmp
inc
cmpl
ds
fnstcw
out
repnz
or
sub
xor
aas
fidivrs
add
add
add
xchg
add
add
xor
xor
xor
xor
xor
xor
xor
mov
shll
ss
in
cmp
aaa
insb
cmp
je
js
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
xchg
cmp
mov
int3
ds
ds
push
aas
lahf
aas
add
add
add
les
add
fidivs
push
xor
adc
xorb
ss
aaa
shlb
fbstp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
mov
popf
cmp
cmp
cmp
cmp
cmp
dec
cmp
jae
jnp
cmpl
pop
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fstpt
and
sub
xor
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
js
cmpb
aas
scas
aas
sarb
aas
call
add
lock
bound
add
add
sbb
xor
jl
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
and
xor
dec
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
insl
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
test
xchg
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
fs
je
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
xor
hlt
xor
pop
ss
inc
ss
ss
xorb
ss
shll
loop
divb
pop
aaa
sbb
sub
inc
aaa
inc
aaa
xorl
aaa
movsb
aaa
push
cmp
cmp
cmp
cmp
inc
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
jno
mov
add
add
add
mov
add
sub
pop
xor
xor
xor
xor
mov
lcall
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
das
xor
inc
xor
pop
xor
outsb
xor
xorl
xor
lods
xor
ret
xor
fidivs
repz
or
es
aaa
ss
ss
ss
js
test
mov
xchg
ss
ss
shlb
shlb
fbstp
in
icebp
divb
add
or
adc
aaa
sub
cmp
ds
dec
aaa
push
aaa
pop
aaa
bound
outsl
aaa
je
xorl
cwtl
aaa
movsl
aaa
stos
aaa
mov
mov
aaa
loopne
in
aaa
repnz
pushl
add
adc
push
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmpb
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
dec
cmp
pop
cmp
insb
cmp
jle
mov
nop
cmp
cmp
cmp
cmp
add
adc
pop
add
add
xor
xor
xor
xor
xor
cmp
dec
xor
bound
outsb
xor
xorb
xor
les
int3
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
xor
dec
xor
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jno
jge
test
test
xor
call
ss
sub
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
xorl
cmpsb
ss
ss
mov
ss
fidivs
out
pushl
adc
aaa
cmp
inc
aaa
pop
aaa
imul
aaa
xorl
lods
aaa
mov
aaa
jmp
repz
add
sbb
sub
xor
aas
cmp
push
js
cmpb
cmp
cmp
cmp
cmp
cmp
or
sbb
cmp
push
cmp
cmp
cmp
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
and
xor
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
cmp
pop
cmp
push
jnp
xchg
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
ds
lods
ds
mov
ds
sarb
aam
fdivrs
fdivrl
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
xor
pusha
aas
jns
jge
nop
aas
cwtl
aas
add
add
add
int3
add
add
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
je
nop
xor
test
lods
xor
mov
xor
aam
fdivs
in
call
xor
pop
xor
inc
ss
cmpsl
ss
ss
mov
xlat
fbstp
out
out
divl
pushl
pop
aaa
getsec
pop
aaa
pop
aaa
daa
aaa
das
aaa
inc
aaa
pop
aaa
insb
aaa
xorb
aaa
test
mov
mov
aaa
divb
add
sbb
xor
push
cmp
jno
mov
lods
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
je
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
arpl
jl
mov
cltd
cmp
cmp
cmp
cmp
and
sub
cmp
dec
cmp
outsb
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
test
mov
mov
cmp
daa
ds
ds
ds
ds
lods
aas
mov
add
xor
scas
add
add
xor
xor
xor
xor
xor
out
das
xor
adc
xor
xor
xor
xor
xor
movsb
xor
adc
ss
jecxz
adc
dec
aaa
fs
lret
aaa
fdivs
call
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
movsl
cmp
in
cld
cmp
cmpl
cmc
adc
pop
aas
jl
cmpl
aas
fidivrs
in
add
add
add
add
add
xor
pop
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
ret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
leave
xor
jecxz
pop
sub
dec
ss
mov
shll
getsec
sbb
cmp
mov
aaa
mov
aaa
or
sub
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
push
cmp
outsb
cmp
test
cmpsb
cmp
cmp
and
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
sarb
fdivrl
cli
adc
sub
cmp
aas
cmpb
aas
loopne
aas
add
add
add
add
adc
sub
xor
cmp
cmp
inc
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
imul
xorl
cltd
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
imul
xorl
cltd
xor
xor
xor
xor
xor
xor
xor
xor
popa
xor
jns
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xchg
xor
iret
xor
cld
xor
and
ss
ss
ss
mov
lahf
lods
ss
ss
ss
aaa
adc
sub
aas
aaa
inc
aaa
push
aaa
gs
js
xorb
aaa
lahf
aaa
mov
mov
aaa
cld
aaa
or
adc
and
xor
inc
cmp
push
cmp
jnp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
sbb
sub
xor
aas
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
ja
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
test
mov
cmp
sbb
xor
inc
ds
ds
outsl
jae,pt
xchg
mov
xchg
ds
mov
ds
or
das
aas
push
aas
push
aas
jp
cmpb
aas
mov
aas
aas
add
add
add
add
and
push
add
pop
xor
xor
xor
xor
xor
cmp
scas
ss
inc
aaa
xchg
aaa
out
aaa
mov
fnstcw
outsl
cmp
scas
cmp
cmp
cmp
cmp
cmp
cmp
jo
or
sub
cmp
pop
aas
add
add
add
add
add
xor
push
xchg
xor
xor
xor
xor
xor
xor
xor
out
xor
xchg
ss
aaa
dec
aaa
jle
mov
divl
push
cmp
cmp
je
xchg
cmp
les
out
sub
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
push
ds
cmpl
ds
mov
ds
lock
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
pusha
aas
jne
jns
nop
aas
mov
aas
mov
aas
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
add
addb
add
add
sub
xor
xor
xor
or
inc
xor
pop
xor
xchg
mov
test
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
insl
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
push
jns
mov
movsb
xor
mov
xor
int3
xor
fdivs
in
call
xor
daa
ss
ss
ss
js
mov
popf
mov
les
repz
sub
aaa
fs
push
aaa
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
jmp
cmp
cmp
cmp
cmp
pop
cmp
xchg
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
bound
cmp
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jnp
movsb
cmp
les
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
cmp
cmp
pop
cmp
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
and
inc
cmp
jge
mov
les
in
jmp
or
or
ds
ds
ds
outsb
mov
mov
ds
aaa
aas
inc
aas
popa
aas
mov
cmpsl
aas
add
add
add
mov
sahf
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
cltd
xor
xor
xor
xor
xor
xor
push
xor
xor
jne
jge
test
lea
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insl
xor
test
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insl
xor
popf
xor
les
stc
xor
das
ss
ss
ss
imul
ss
ss
mov
fdivl
ljmp
aaa
daa
aaa
cmp
dec
aaa
push
aaa
arpl
jne
xorl
aaa
fwait
aaa
cmpsl
aaa
mov
mov
aaa
out
hlt
aaa
add
adc
daa
cmp
cmp
pop
cmp
jno
cmpb
cmp
cmp
cmp
cmp
adc
sbb
sub
xor
inc
cmp
cmp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jns
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
js
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
and
sub
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
ds
ds
ds
aas
cmp
dec
aas
pop
aas
outsl
aas
xchg
aas
xchg
aas
lahf
aas
cmpsl
aas
scas
aas
mov
mov
aas
xlat
aas
fistpll
out
out
aas
idivl
aas
add
add
add
pop
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
jns
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
popa
xor
jge
lea
popf
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
mov
popf
xor
xor
xor
xor
xor
xor
sbb
xor
insb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
fs
mov
lods
xor
fdivs
adc
and
cs
inc
ss
imul
ss
mov
ss
shlb
fidivs
in
ss
aaa
adc
aaa
dec
aaa
push
aaa
pop
aaa
insb
aaa
jp
nop
aaa
sahf
aaa
test
aaa
fdivl
ljmp
cmp
inc
cmp
pop
cmp
js
test
mov
lcall
cmp
cmp
cmp
sbb
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jnp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
sub
sub
xor
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jbe
mov
leave
cmp
add
ds
ds
outsb
ds
mov
ds
jmp
stc
or
sbb
sub
cs
inc
aas
dec
aas
push
aas
push
aas
pop
aas
gs
insb
aas
jae
jp
cmpl
lret
aas
in
aas
add
add
add
wrmsr
cmp
pop
xor
mov
xor
xor
cmp
inc
xor
dec
xor
push
xor
pop
xor
xor
insb
xor
je
js
test
popf
xor
out
xor
xor
xor
xor
and
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xorb
xor
xor
xor
xor
xor
xor
push
xorb
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
scas
xor
divb
inc
ss
ss
xorb
ss
ss
mov
ss
shlb
fdivs
loopne
repnz
aaa
sbb
cs
aas
aaa
push
aaa
bound
jne
mov
pushf
aaa
mov
lds
jecxz
hlt
aaa
sbb
sub
cmp
dec
cmp
jp
mov
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
sub
cmp
dec
cmp
jg
xchg
cmp
cmp
cmp
cmp
cmp
sub
xor
cmp
inc
cmp
dec
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
and
sub
xor
inc
cmp
test
sarb
cmp
add
or
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
ds
ds
ds
or
adc
sbb
and
sub
xor
cmp
inc
aas
dec
aas
pop
aas
jno
cmpb
aas
test
aas
fistpll
idivb
add
add
add
adc
add
add
adc
xor
xor
mov
cwtl
xor
xor
xor
xor
xor
xor
dec
xor
push
xor
xor
xor
xor
xor
xor
inc
xor
jns
xchg
cltd
xor
iret
xor
xor
xor
xor
xor
sbb
and
and
sub
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
arpl
movsb
xor
fdivl
or
sbb
sub
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
adc
push
mov
cmp
cmp
cmp
cmp
cmp
aas
cmp
add
rolb
insb
add
add
ss
ss
ss
cmp
aaa
test
cwtl
aaa
lret
aaa
push
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
pop
cmp
xchg
cmp
cmp
ds
ds
ds
aad
add
cmp
inc
aas
jnp
mov
iret
aas
out
clc
aas
add
add
add
xchg
add
add
xor
xor
xor
xor
xor
jge
xorb
xor
xor
xor
jg
xchg
xor
xor
xor
xor
xor
xor
xor
lret
lds
fs
jno
cltd
aaa
sahf
aaa
lds
shlb
or
sbb
sub
cmp
cmp
jl
mov
sbb
xchg
fwait
cmp
cmp
jg
lea
into
cmp
cmp
cmp
cmp
cmp
cmp
stos
ds
ds
inc
aas
js
mov
add
lock
addb
add
xor
mov
repz
xor
mov
xor
xor
sbb
xor
xor
leave
xor
test
mov
ss
aaa
adc
xchg
aaa
mov
mov
cmp
cmp
cmp
dec
cmp
imul
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jb
jno
repnz
add
add
add
add
xor
xor
xor
shll
xor
xor
xor
xor
xor
loop
cmp
pop
aaa
jle
mov
cmp
cmp
mov
leave
cmp
ret
cmp
cmp
mov
ds
mov
sahf
ds
aas
dec
aas
mov
les
enter
aam
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
xor
xor
xor
xor
xor
insb
xor
xorl
xor
xor
xor
pop
xor
scas
xor
leave
xor
xor
xor
xor
ss
xorl
cmp
cmp
pop
cmp
test
cmp
cmp
cmp
outsb
aas
sarb
out
add
add
add
add
xorl
xor
xor
xor
repnz
xor
xor
xor
xor
xor
mov
aaa
adc
loopne
cmp
cmp
or
stos
aas
add
add
add
add
inc
xor
xor
aas
xor
xor
xor
xor
xor
data16
xor
xor
xor
xor
arpl
movsl
ss
aaa
fwait
cmp
cmp
cmp
imul
add
add
add
add
add
pop
xor
cmp
xor
xor
out
inc
ss
aaa
scas
aaa
mov
cmp
cmp
cmp
mov
cmpsl
cmp
cmp
cmp
cmp
cmp
push
cmp
jl
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarl
or
and
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
je,pt
js
test
xchg
ds
sarl
sarl
jmp
ds
aas
adc
and
aas
pop
aas
jne
xchg
mov
aas
aas
jmp
cld
aas
add
add
add
add
xor
xor
jge
mov
test
lock
xor
xor
xor
xor
push
xor
imul
xor
mov
xchg
xor
xor
fdivl
out
xor
add
pusha
add
add
cmp
cmp
cmp
push
cmp
cmp
mov
nop
cmp
in
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
jne
mov
sarl
pop
ds
ds
ds
ds
movsb
ds
ds
aas
sbb
aas
xor
aas
dec
aas
push
aas
pop
aas
gs
insl
aas
mov
aas
xchg
aas
xchg
aas
fwait
aas
lahf
aas
mov
aas
scas
aas
sarl
aas
in
idivl
add
add
add
add
add
xor
cmp
dec
xor
jns
xchg
xor
xor
xor
xor
xor
xor
xor
mov
cltd
xor
xor
xor
xor
xor
xor
xor
jae
test
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
sbb
sub
inc
ss
outsl
xchg
mov
lods
ss
ss
or
sbb
sub
aaa
dec
aaa
push
aaa
ja
jg
cwtl
aaa
test
mov
aaa
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
pop
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
or
sub
xor
cmp
jp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsb
cmp
lahf
cmp
fidivrs
or
es
cs
ds
imul
mov
xchg
ds
lods
sarl
idivb
sbb
cmp
dec
aas
pop
aas
xchg
lods
aas
sarl
idivb
add
add
add
sbb
xor
xorl
out
xor
xor
xor
xchg
scas
xor
xor
xor
xor
dec
xor
pop
xor
push
jno
js
jg
xchg
lea
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
daa
xor
xor
xor
push
xor
pop
xor
insl
xor
xor
xor
xor
shll
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insl
xor
mov
xor
loop
adc
push
sub
add
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarl
aas
push
aas
mov
add
nop
add
add
repz
xor
xor
xor
xor
push
aaa
and
aaa
repz
std
aaa
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jbe
jle
xchg
mov
xchg
cmp
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
push
cmp
jl
cmpb
cmp
scas
cmp
jmp
add
sbb
sub
inc
ds
ds
jle,pt
mov
cmpsb
ds
loop,pt
ljmp
aas
or
adc
and
aas
popa
aas
jb
xchg
xchg
aas
scas
aas
mov
aas
sti
aas
add
add
add
or
and
xor
dec
xor
imul
xor
xor
xor
xor
xor
xor
and
xor
xor
dec
xor
push
xor
xor
jb
jns
xorb
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
jno
xor
xor
xor
xor
xor
xor
push
aam
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
pop
xor
nop
xor
xor
xorl
mov
ss
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
stos
aaa
shll
aaa
jecxz
hlt
aaa
cld
aaa
add
or
and
cmp
arpl
jle
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
push
aas
out
aas
add
add
add
push
xor
xor
mov
xor
push
xor
mov
xor
xor
xor
xchg
stos
xor
xor
xor
xchg
xor
mov
xor
xor
fnsave
mov
fbstp
sub
push
aaa
jno
mov
test
cmp
dec
cmp
insl
cmp
cmpl
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
and
cmp
arpl
jp
cmpb
cmp
cmp
cmp
cmp
cmp
or
sbb
and
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pushf
cmp
mov
mov
cmp
int3
cmp
fdivrs
in
call
cmp
sbb
das
ds
ds
ds
outsb
jle,pt
mov
mov
sarl
loope
icebp
ds
adc
aas
inc
aas
dec
aas
imul
aas
xchg
aas
add
add
add
add
xor
xor
mov
xor
xor
xor
xor
xor
push
xor
imul
xor
xorl
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
pop
xor
mov
mov
xor
xor
xor
xor
xor
xor
insl
xor
test
lcall
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
push
xor
sahf
xor
push
ss
mov
aaa
cwtl
aaa
mov
aaa
out
aaa
or
pushf
cmp
cmp
insb
cmp
js
jl
test
mov
nop
cmp
test
lods
cmp
les
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
and
and
xor
aas
cmp
push
cmp
push
cmp
cmp
cmp
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
imul
cmp
mov
cmp
leave
cmp
in
ljmp
or
adc
push
ds
ds
xor
aas
ds
ds
ds
ds
imul
add
add
add
xor
int3
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
mov
xor
xor
xor
xor
xor
pop
xor
xor
xchg
xchg
xor
xor
xor
sub
cmp
dec
xor
xor
into
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
cwtl
xor
les
fdivl
lock
cld
xor
or
or
adc
adc
sbb
and
ss
ss
ss
xchg
mov
ss
ss
out
divl
or
and
and
aaa
inc
aaa
pusha
aaa
insb
aaa
jo
je
js
jl
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
push
cmp
cmp
cmp
cmp
arpl
ja
cmp
cmp
cmp
cmp
push
cmp
jle
nop
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
test
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
jb
jp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
pusha
cmp
mov
mov
mov
cmp
pop
sub
xor
inc
ds
ds
jo,pt
mov
xchg
mov
ds
fistpll
out
clc
or
adc
and
ss
ds
dec
aas
imul
xchg
aas
stos
aas
mov
sarb
aas
in
repnz
add
add
add
add
xor
xor
push
xor
outsl
xor
xor
jmp
out
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
imul
xor
xor
xor
xor
xor
xor
sbb
cmp
inc
xor
xor
xor
mov
lahf
xor
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
mov
xor
in
call
xor
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
outsb
ss
xchg
cmpsb
ss
ss
pop
aaa
xor
dec
aaa
push
aaa
pop
aaa
gs
insl
aaa
jne
jge
test
lea
xchg
aaa
popf
aaa
movsl
aaa
lods
aaa
mov
aaa
lret
aaa
xlat
aaa
in
aaa
cli
aaa
or
cmp
cmp
bound
js
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pusha
cmp
cmpl
cmpsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
pop
cmp
jae
jnp
cmp
ret
cmp
push
ds
dec
ds
ds
jnp,pt
jg
lea
xchg
ds
ds
mov
mov
add
or
es
cs
inc
aas
dec
aas
imul
aas
xchg
aas
mov
aas
iret
aas
aas
fnstsw
in
jmp
hlt
aas
add
add
add
add
xor
xor
jl
lcall
xor
sbb
sbb
and
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
pop
xor
xor
aam
fdivs
out
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cs
inc
xor
pop
xor
insl
xor
xorl
xor
hlt
xor
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
dec
ss
ss
mov
pushf
ss
ss
shll
in
hlt
ss
or
adc
xor
inc
aaa
dec
aaa
push
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
pushf
aaa
mov
int
in
aaa
add
add
mov
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
popa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
aas
xor
arpl
fwait
aas
lret
aas
sti
aas
add
add
push
add
add
xor
fwait
xor
xor
xor
xor
xor
xor
xor
xor
xor
out
xor
adc
push
sub
xorb
ss
ss
mov
getsec
mov
shlb
repz
and
aas
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
adc
aas
aad
ljmp
add
add
xor
cmpsl
xor
xor
xor
xor
xor
xor
xor
xchg
xor
xor
xor
xor
jg
enter
mov
cmpsb
aaa
insb
cmp
fnstcw
and
jns
mov
add
push
add
add
add
xorl
xor
xor
xor
xor
adc
out
aad
or
pop
cmp
cmp
cmp
pusha
cmp
lods
ds
aas
cmpb
aas
add
add
push
add
add
xor
jns
xchg
xor
xor
xor
xor
xor
xor
mov
xor
xor
mov
aaa
dec
cmp
cmp
cmp
movsl
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
add
add
add
iret
xor
xor
xor
xor
xor
xor
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
xor
mov
aaa
mov
cmp
cmp
cmp
sbb
xor
jns
ds
aas
add
add
add
add
add
mov
xor
jp
mov
mov
xor
xor
xor
dec
xor
insl
xor
xorl
je
xorl
add
or
dec
ss
test
stos
xor
mov
aam
add
cmp
pushf
cmp
cmp
and
inc
ds
ds
jbe
add
add
add
add
add
cltd
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmpsl
xor
sub
push
ss
add
aaa
mov
cmp
test
scas
cmp
inc
cmp
fidivrl
out
and
sub
xor
push
cmp
daa
cmp
cmp
int3
cmp
fdivrl
lock
add
or
or
adc
sbb
and
and
sub
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
js,pt
cmpb
mov
nop
ds
ds
ds
ds
mov
fdivrl
out
icebp
add
adc
xor
dec
aas
jb
pushf
aas
mov
aas
add
add
add
inc
xor
xor
xor
xor
xor
dec
xor
jo
xchg
mov
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
dec
xor
xorl
ret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
xchg
xor
aam
in
jmp
or
adc
sbb
and
daa
ss
ss
cwtl
ss
aaa
sub
dec
aaa
je
lcall
aaa
loopne
call
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
insb
cmp
cmp
cmp
cmp
cmp
and
and
cmp
inc
cmp
cmp
cmp
cwtl
cmp
test
lods
cmp
cmp
enter
sarb
aam
fdivrs
fdivrl
loopne
in
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
sub
inc
cmp
js
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
cmpb
cmp
iret
cmp
in
jmp
repnz
sbb
cmp
ds
fstpt
ds
xor
cmp
inc
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
cld
aas
add
add
add
or
and
daa
xor
dec
xor
push
xor
xor
insb
xor
je
js
jl
xorb
xor
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
xor
xor
xchg
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
shlb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
cmp
push
xor
cwtl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
dec
xor
mov
movsb
ss
sub
cmp
inc
cmp
mov
movsl
cmp
cmp
cmp
push
cmp
fdivrs
call
cmp
pop
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
popa
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pusha
cmp
jo
je
js
jl
cmpb
cmp
cwtl
cmp
movsb
cmp
mov
mov
cmp
pop
ds
ds
ds
ds
ds
outsl
jge,pt
xchg
ds
mov
ds
cld
adc
xor
ds
dec
aas
bound
jp
mov
xchg
aas
movsl
aas
mov
enter
fidivrl
jmp
repz
add
add
add
or
adc
sub
xor
dec
xor
insb
xor
jp
xorl
xchg
xor
xor
xor
xor
xor
xor
xor
mov
scas
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
xor
xor
xor
or
and
sub
dec
xor
push
xor
push
xor
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aam
out
xor
xorb
ss
ss
ss
add
or
sbb
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
add
push
cmp
cmp
cmp
cmp
inc
cmp
jae
cltd
cmp
cmp
inc
cmp
js
cmpb
cmp
cmp
test
lods
cmp
cmp
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
int
fstpt
in
cmp
or
sbb
xor
dec
cmp
pop
cmp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
outsb
cmp
scas
cmp
out
cmp
xor
aaa
lods
loop,pt
adc
aas
aas
dec
aas
pop
aas
pusha
aas
push
aas
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
jmp
add
add
add
add
push
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
sub
xor
xor
cmp
inc
xor
dec
xor
push
xor
pop
xor
xor
insb
xor
je
js
jl
mov
popf
xor
xor
xor
xor
insb
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
pushf
xor
jecxz
icebp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
pusha
xor
jbe
jle
sahf
xor
int3
xor
sbb
daa
ss
ss
ss
ss
xorl
mov
mov
shlb
loopne
lock
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
inc
aaa
push
aaa
pop
aaa
insb
aaa
je
xchg
aaa
mov
aaa
divl
pushl
add
and
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
sub
xor
test
mov
lea
xchg
cmp
cmp
cmp
cmp
insl
cmp
jne
jns
jge
cmpl
scas
cmp
fnstsw
hlt
cmp
cmp
cmp
cmp
pop
cmp
je
movsl
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
dec
cmp
mov
cmp
sbb
sbb
cs
dec
ds
ds
ds
mov
mov
fnstsw
jmp
hlt
ds
jae,pt
ja
jnp
jg
cmpl
aas
cltd
aas
cmpsl
aas
mov
mov
aas
in
add
add
add
inc
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
xchg
xor
xor
xor
xor
xor
popa
xor
imul
cltd
xor
xor
xor
xor
xor
push
xor
jb
xorl
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
mov
lds
sub
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
sub
xor
inc
aaa
push
aaa
insl
aaa
jle
mov
mov
aaa
in
std
aaa
adc
and
cmp
jnp
nop
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jp
nop
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
insl
cmp
cmp
cmp
cmp
cmp
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
xchg
cmp
cmp
daa
ds
ds
je,pt
mov
xchg
ds
movsb
lods
ds
mov
ds
fdivrl
in
in
ds
ds
ds
or
adc
sbb
and
sub
xor
cmp
inc
aas
dec
aas
push
aas
pop
aas
fs
insb
aas
je
jl
test
mov
xchg
aas
pushf
aas
movsb
aas
lods
aas
mov
mov
aas
aam
fdivrl
add
add
push
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
dec
xor
push
xor
pop
xor
xor
outsb
xor
jbe
jp
jle
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cwtl
xor
xor
xor
xor
xor
xor
xor
sub
cmp
dec
xor
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
arpl
mov
xor
push
and
sub
cmp
dec
ss
bound
ja
mov
movsb
ss
mov
ss
ss
aaa
adc
and
ss
dec
aaa
pop
aaa
jae
test
lahf
aaa
cmpsl
aaa
mov
aaa
lock
or
sbb
cmp
push
cmp
insl
cmp
mov
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
cmp
cmp
and
sub
cmp
push
cmp
jo
mov
xchg
cmp
cmp
cmp
cmp
cmp
dec
cmp
imul
mov
pushf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
xchg
cmp
mov
mov
cmp
push
ds
xor
cmp
inc
ds
ds
ds
ds
ds
jns,pt
cmpb
mov
xchg
ds
mov
ds
ds
aam
fstpt
loop
jmp
ds
ds
aas
sbb
and
sub
das
aas
ss
cmp
aas
push
aas
pop
aas
popa
aas
insl
aas
cmpl
aas
movsb
aas
lods
aas
les
int3
aas
sarb
out
repnz
add
add
push
add
add
xor
xor
xor
xor
jl
mov
xor
xor
xor
xor
cmp
xor
add
xor
pop
xor
xorl
scas
xor
xor
xor
xor
xor
xor
xor
bound
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
push
xor
stc
xor
aaa
ss
ss
test
mov
aaa
adc
sbb
xor
pop
aaa
js
mov
mov
add
cmp
cmp
cmp
xor
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmpb
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
insl
cmp
leave
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
lods
cmp
in
cmp
cs
arpl
jg
cltd
ds
lret
loop,pt
cmc
adc
sub
dec
aas
bound
push
jb
jp
cmpb
aas
xchg
aas
lcall
aas
mov
aas
sarb
fidivrl
loop
ljmp
add
loopne
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
bound
xor
outsb
xor
jbe
jp
jle
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
dec
xor
push
xor
pop
xor
data16
outsb
xor
jbe
jp
jle
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
xchg
xor
fnstenv
add
adc
sub
cmp
push
ss
ss
ss
ss
out
add
push
aaa
sbb
sub
aaa
push
xorb
aaa
cltd
aaa
mov
lds
loope
out
aaa
add
sbb
cmp
pop
cmp
ja
lea
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
dec
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
test
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmpb
cmp
add
sbb
and
cmp
js,pt
jl
cmpb
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
aas
jecxz
clc
aas
add
add
push
add
add
add
xor
xor
insb
xor
pushf
xor
xor
xor
enter
shlb
aam
fdivs
fdivl
loopne
in
call
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
dec
xor
xor
insb
xor
xchg
xor
xor
xor
xor
xor
xor
xor
push
xor
jge
mov
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
das
xor
pop
xor
insb
xor
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
xor
xor
dec
ss
ss
jg
xchg
ss
ss
cmpsl
ss
ss
shlb
loopne
call
aaa
adc
pop
aaa
cs
ss
inc
aaa
push
aaa
bound
jae
xorb
aaa
cwtl
aaa
mov
aaa
jmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
lea
pushf
cmp
cmp
cmp
or
sbb
and
sub
xor
cmp
push
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
dec
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
jle
xchg
sahf
cmp
ret
cmp
adc
and
aaa
ds
ds
ds
ds
movsl
lods
ds
or
sbb
das
aas
inc
aas
dec
aas
push
aas
addr16
outsb
aas
jne
jl
cmpl
aas
xchg
aas
cwtl
aas
lahf
aas
cmpsb
aas
lods
aas
mov
mov
add
add
add
add
add
add
xor
inc
xor
push
mov
mov
test
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
and
xor
xor
inc
xor
xor
pop
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
jns
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aas
xor
imul
xor
mov
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
and
xor
cmp
inc
aaa
arpl
jbe
jle
aaa
mov
aaa
leave
aaa
fidivs
clc
aaa
or
and
cmp
cmp
insb
cmp
cmp
cmp
cwtl
cmp
test
mov
iret
cmp
cmp
cmp
cmp
cmp
outsb
cmp
cmp
cmp
cmp
or
adc
and
cmp
jb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
popa
cmp
jg
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jl
mov
xchg
cmp
movsb
cmp
mov
mov
mov
cmp
int3
cmp
fdivrs
in
call
cmp
cld
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
sarb
fidivrl
jmp
add
pop
aas
sub
inc
aas
pop
aas
arpl
imul
aas
jnp
lea
xchg
aas
xchg
aas
cltd
aas
mov
aas
aam
out
aas
add
add
pop
add
xor
xor
xor
popa
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
and
cmp
xor
xor
xor
xor
xor
xor
xor
and
cmp
dec
xor
jns
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
mov
lret
xor
ljmp
or
adc
sub
cmp
ss
test
pushf
lods
les
shlb
in
sti
or
sbb
xor
aas
aaa
push
aaa
push
jnp
xchg
aaa
mov
aaa
loopne
divl
adc
pop
cmp
cmp
pop
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pop
cmp
lea
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
ds
adc
pop
aas
add
add
pop
add
add
add
daa
xor
jge
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
les
xor
xor
xor
xor
xor
sub
xor
insb
xor
jg
push
xor
xor
xor
mov
xor
dec
ss
ss
ret
aaa
dec
cmp
cmp
cmp
push
cmp
cmpsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
mov
add
adc
sbb
mov
les
sarl
fidivrl
jecxz
add
aas
mov
aas
mov
aas
fnstsw
idivl
add
add
pop
add
add
add
or
push
xor
xor
xor
push
xor
jb
jp
test
popf
xor
xor
xor
xor
xor
xor
xor
xor
xchg
cltd
xor
xor
xor
xor
xor
xor
xor
push
xor
imul
xor
xor
xor
xor
xor
xor
xor
jbe
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
int3
xor
cld
xor
cmp
dec
ss
ss
ss
ss
test
mov
xchg
ss
mov
ss
loop
cmc
adc
and
inc
aaa
js
test
xchg
aaa
lcall
aaa
shlb
aaa
out
icebp
aaa
push
cmp
cmp
cmp
cmp
push
cmp
jae
js
test
mov
xchg
cmp
iret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
sub
inc
cmp
out
xchg
xchg
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
popa
cmp
cmp
cmp
cmp
cmp
sarb
xor
dec
aas
pushf
aas
lds
ljmp
add
add
xor
push
xor
mov
xor
xor
xor
pop
xor
xor
xor
xor
lcall
xor
xor
xor
loop
adc
aas
aaa
push
aaa
push
cmp
push
cmp
ds
aas
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
clc
ss
cmp
cmp
outsb
cmp
cmp
ds
jb,pt
jnp
cltd
ds
ds
in
ds
ds
add
inc
aas
dec
aas
push
aas
mov
xchg
aas
xchg
aas
cmpsb
aas
add
add
add
add
ret
xor
xor
xor
xor
ss
ss
fwait
cmp
jno
jne
jns
jge
cmpl
mov
ret
cmp
repnz
mov
fwait
sarb
loope
out
mov
jo
add
add
iret
xor
xor
push
xor
xor
xor
xor
cltd
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
je
ds
push
xchg
aaa
ret
cmp
cmp
cmp
cmpl
lret
aas
add
add
add
sub
cmp
divb
cmp
xor
xor
xchg
movsl
adc
pop
aaa
ss
ja
cmpsb
aaa
mov
and
das
cmp
lret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fstpt
enter
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
ss
outsb
ss
mov
movsb
ss
and
cmp
xchg
aaa
mov
or
jb
cmp
cmp
push
cmp
lret
cmp
cmp
cmp
cmp
or
jp
ret
aas
add
add
add
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xchg
aaa
mov
cmp
cmp
cmp
arpl
cmp
cmp
sbb
es
mov
mov
sarb
add
add
add
add
into
xor
xor
xor
arpl
mov
xor
das
cmp
dec
ss
aaa
jns
xchg
aaa
mov
cmp
cmp
movsb
cmp
cmp
cmp
pop
ds
ds
ds
aas
add
add
pop
add
add
aaa
xor
push
xor
xor
xor
jge
popf
xor
xor
xor
ss
ljmp
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
adc
sti
ds
aas
sarb
add
rolb
add
add
add
xor
xor
xor
xor
jo
jge
sahf
aaa
stos
aaa
jg
aas
add
add
pop
add
add
add
xorl
xor
jge
int3
xor
cmp
cmp
cmp
ds
aas
mov
lock
add
add
mov
push
xor
fidivs
hlt
xor
pusha
aaa
jno
xorb
aaa
dec
cmp
cmp
jge
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lea
cwtl
ds
ds
aas
cld
aas
add
add
or
js
add
xor
xorl
aam
in
divb
rdtsc
and
aaa
xor
pop
xor
xor
xor
xor
xor
xor
jo
out
xor
xor
xor
pop
ss
mov
stos
ss
je
fdivs
jb
fnstsw
and
cmp
insl
cmp
fistpll
push
cmp
cmp
jp
cmpsl
cmp
xchg
aas
add
add
or
inc
add
add
xor
xor
jg
xchg
xor
xor
data16
cmp
cmp
cmp
cmp
cmp
inc
ds
add
add
or
dec
add
add
xor
xor
xor
cltd
xor
xor
xor
xor
push
ss
test
xchg
cmp
cmp
mov
or
inc
cmp
test
push
aas
je
add
add
or
dec
add
add
mov
iret
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
push
ss
cmp
cmp
cmp
sti
cmp
pop
aas
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
jb
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
cs
inc
xor
pop
xor
insl
xor
xorb
xor
lods
xor
scas
aaa
mov
cmp
cmp
cmp
js
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
pop
cmp
insl
cmp
mov
mov
lcall
cmp
cmp
cmp
cmp
cmp
push
aas
pop
aas
pop
aas
bound
data16
push
outsb
aas
jb
jbe
add
add
add
add
sbb
xor
xor
xor
xor
xor
xor
sub
data16
mov
les
out
aaa
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aam
in
cmp
lods
sarb
jmp
xchg
aas
popf
aas
mov
iret
aas
call
pusha
or
dec
add
add
outsl
xor
lock
xor
xor
jg
mov
test
xor
call
sbb
fdivrs
repz
dec
cmp
cmp
cmp
ds
add
add
add
add
add
xor
or
es
xor
xor
xor
xor
jnp
mov
cmp
cmp
pusha
cmp
cmp
cmp
add
orb
sub
add
sub
dec
xor
xor
xor
xor
mov
cmp
add
nop
or
in
add
add
xor
add
adc
and
cmp
dec
xor
xor
pusha
xor
xor
xor
xor
xor
nop
xor
aad
jmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
ss
dec
xor
xor
xchg
ret
xor
add
adc
ss
ss
xorb
cmpsb
ss
ss
aaa
adc
sub
aaa
pop
aaa
data16
xorb
aaa
lcall
aaa
loop
lock
cld
aaa
or
cmp
cmp
pop
cmp
jp
test
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
cmp
cmp
cmp
cmp
and
xor
inc
cmp
jae
xchg
cmp
aad
lock
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
cmp
pop
cmp
mov
mov
cmp
or
adc
and
xor
aas
ds
ds
ds
jge,pt
mov
mov
ds
xlat
ds
idivl
add
aas
cmp
inc
aas
push
aas
popa
aas
outsl
aas
xchg
aas
popf
aas
lods
aas
mov
aas
jmp
add
mov
add
pop
xor
xor
xor
xor
jae
xorl
mov
mov
xor
xor
xor
xor
xor
xor
xor
push
xor
jne
xorl
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jg
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lods
xor
push
xor
cmp
inc
ss
mov
cwtl
mov
ss
jg
fidivl
cmp
cmpl
pop
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
push
and
es
cs
ss
ds
ds
mov
mov
ds
ds
sarb
fidivrl
add
add
add
push
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
dec
xor
push
xor
pop
xor
data16
outsb
xor
jbe
jp
jle
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
shlb
fidivs
ljmp
xor
lea
mov
mov
lds
leave
ss
shll
aad
fnstenv
fnsave
and
sub
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
cmp
clc
cmp
adc
adc
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
test
mov
cwtl
ds
sarb
ds
clc
or
or
aas
das
aas
push
aas
je
nop
aas
enter
add
add
or
add
add
xor
xor
pop
xor
fdivs
in
xor
xor
xor
xor
xor
xor
lods
xor
xor
enter
shlb
aam
fdivs
fdivl
loopne
in
call
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
and
xor
jno
mov
popf
xor
xor
xor
xor
xor
jne
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jae
mov
mov
xor
pushl
es
inc
ss
ss
imul
mov
movsb
ss
les
aam
fdivl
ljmp
aaa
cmp
dec
aaa
pop
aaa
je
xorb
aaa
cmpsl
aaa
mov
lds
shlb
ljmp
cmp
cmp
cmp
push
cmp
jg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
pop
cmp
jl
lea
movsb
cmp
cmp
cmp
or
sbb
sub
cmp
dec
cmp
cmp
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
imul
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
inc
cmp
jnp
xchg
cmp
mov
cmp
adc
ds
ds
ds
jl,pt
mov
mov
ds
jmp
ds
aas
push
aas
popa
aas
jae
xchg
mov
pushf
aas
lods
aas
mov
aas
jmp
stc
aas
add
add
or
lock
add
xor
sub
inc
xor
xor
xorb
xor
xor
xor
xor
xor
xor
popa
xor
test
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
push
xor
xor
jb
jbe
xchg
xor
xor
xor
xor
xor
xor
and
inc
xor
xor
xor
xor
xor
xor
xor
call
shll
cmp
fnstsw
pop
cmp
cmp
cmp
cmp
cmpb
cmp
cmp
mov
cmp
cmp
cmp
cmp
insl
cmp
mov
fnstcw
pop
outsl
ds
ds
dec
aas
pop
aas
jae
nop
aas
lods
aas
enter
cli
aas
add
add
or
mov
add
xor
xchg
test
shll
in
xor
xor
xor
and
xor
xor
xor
xor
jne
test
test
mov
ss
ss
aaa
push
cmp
cmp
pop
cmp
fnstsw
or
adc
and
xor
data16
cmp
cmp
cmp
push
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
adc
and
cmp
dec
aas
jbe
xchg
aas
sarl
add
add
or
ljmp
xor
xor
xor
mov
mov
xor
xor
xor
xorl
inc
xor
xor
xor
xor
xor
xor
mov
xor
loop
out
xor
sbb
imul
insb
aaa
jo
je
js
jl
test
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
or
sbb
xor
dec
cmp
pop
cmp
push
jb
test
mov
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jno
jg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
test
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jne
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
dec
cmp
pop
cmp
fs
mov
int
jecxz
clc
cmp
das
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
add
push
aas
and
cmp
dec
aas
push
aas
push
aas
xchg
aas
cmpsb
aas
scas
aas
mov
aas
jmp
stc
aas
add
add
or
xor
add
or
and
daa
xor
xor
dec
xor
pop
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
cmp
push
xor
data16
xor
xor
xor
xor
xor
xor
and
and
sub
sub
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xchg
xor
lods
xor
shlb
or
push
ss
ss
inc
ss
ss
jl
mov
lahf
mov
lds
int3
shll
fidivl
loope
call
ss
ss
or
adc
sbb
and
sub
inc
aaa
dec
aaa
addr16
outsl
aaa
mov
mov
mov
aaa
std
aaa
and
dec
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
js
jl
cmpb
cmp
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
and
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmpsl
ds
aas
lret
aas
add
add
or
call
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
and
outsl
ss
xor
aaa
in
aaa
dec
cmp
cmp
cmp
cmp
cmp
cmp
js
jl
cmpb
cmp
cmp
test
lods
cmp
cmp
enter
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
jge
cltd
cmp
lds
sti
cmp
inc
ds
ds
ja,pt
jnp
mov
xchg
ds
ds
into
fidivrl
repnz
sbb
cmp
inc
aas
pop
aas
fs
push
aas
movsl
aas
mov
aas
in
add
add
or
push
add
add
xor
xor
xor
dec
xor
pop
xor
xor
jns
xorb
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
insb
xor
je
js
jl
xorb
xor
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
cltd
xor
cli
xor
xor
xor
xor
dec
xor
outsb
xor
jbe
jp
jle
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xorl
pop
ss
aaa
ss
ss
movsb
ss
int3
ss
divb
cld
ss
aaa
pushf
aaa
scas
aaa
mov
cmp
mov
lret
cmp
cmp
cmp
cmp
cmp
cmp
ja
jnp
lea
fwait
cmp
and
sub
pop
cmp
jb
jge
mov
aam
fnstcw
fnstsw
loope
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
ja
jg
xchg
sarb
cmp
and
ds
ds
mov
lea
fwait
mov
fdivrl
in
cli
add
sbb
and
cmp
inc
aas
gs
insb
aas
jae
jp
cmpl
xchg
aas
mov
aas
sarb
aam
fdivrs
fdivrl
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
or
xchg
add
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
xor
xor
dec
xor
jns
xchg
xor
repz
xor
xor
js
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
mov
fnstenv
xor
dec
ss
mov
ss
sub
inc
aaa
dec
aaa
push
aaa
pop
aaa
arpl
imul
aaa
jnp
xorl
aaa
xchg
aaa
fwait
aaa
mov
aaa
mov
aaa
shll
jecxz
jmp
repz
sti
aaa
add
or
adc
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmp
insl
cmp
jne
jns
jge
cmpl
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
arpl
je
mov
cltd
cmp
cmp
cmp
cmp
cmp
cmp
je
mov
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
jg
cltd
cmp
fnstsw
adc
ds
ds
ds
ds
movsb
ds
enter
fidivrs
in
add
pop
aas
sub
aas
jo
nop
aas
mov
aas
ret
aas
aas
lret
aas
loop
out
ljmp
add
xor
xor
xor
xor
xor
xor
xor
dec
xor
push
xor
xor
xor
xorl
xchg
xor
xor
xor
xor
xor
xor
xor
sub
dec
xor
pop
xor
jns
xchg
xor
xor
xor
xor
xor
xor
xor
xor
aas
xor
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
test
mov
shlb
adc
es
ss
ss
ss
test
ss
mov
ss
ss
aaa
das
aaa
aaa
aaa
pop
aaa
popa
aaa
gs
jnp
xorl
aaa
mov
aaa
out
out
aaa
repnz
or
adc
sbb
xor
cmp
pop
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
jo
je
mov
nop
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
imul
mov
mov
into
cmp
adc
sbb
pop
cmp
inc
ds
ds
ds
mov
mov
ds
in
sbb
inc
aas
push
aas
imul
aas
lea
cltd
aas
scas
aas
mov
add
push
or
add
add
add
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
in
push
xor
xor
xor
xor
pop
xor
jge
fwait
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
outsl
xor
test
cltd
xor
scas
xor
ret
xor
fdivs
in
xor
add
or
adc
pop
ss
ss
cmp
inc
ss
ss
ss
ss
ss
ss
xorb
mov
xchg
ss
mov
ss
ss
aam
loop
jmp
ss
ss
aaa
sbb
and
sub
das
aaa
ss
cmp
aaa
push
aaa
pop
aaa
pusha
aaa
addr16
outsb
aaa
jbe
jp
lahf
aaa
aaa
in
aaa
lock
adc
cmp
dec
cmp
push
cmp
pusha
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
arpl
xchg
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
mov
test
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
test
int3
cmp
add
or
or
adc
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
jl
mov
fwait
lods
ds
or
push
aas
ss
dec
aas
pusha
aas
js
lea
cmpsl
aas
les
fstpt
stc
aas
add
add
add
add
add
xor
xor
arpl
js
lea
movsl
xor
xor
xor
xor
bound
push
jb
jp
xorb
xor
xor
ljmp
xor
xor
xchg
xchg
xor
fnsave
jmp
stc
xor
sub
xor
inc
xor
insl
xor
xor
fidivs
in
in
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
stos
xor
out
xor
inc
ss
mov
mov
fnstenv
fnsave
add
and
aaa
push
aaa
jne
jns
pushf
aaa
mov
aaa
ljmp
cmp
cmp
cmp
pop
cmp
cmpl
mov
cmp
cmp
cmp
cmp
cmp
push
cmp
lcall
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
scas
cmp
mov
cmp
add
es
cmp
inc
ds
ds
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
ds
ds
fidivrs
out
out
idivb
ds
aas
pop
aas
sub
aas
jae
aas
movsb
aas
mov
aas
cli
aas
add
add
add
xor
xor
insb
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xchg
xor
xor
xor
das
xor
popa
xor
cmpsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
mov
shlb
sbb
ds
ss
ss
ss
ss
ss
jle
xchg
mov
xchg
ss
cmpsb
ss
ss
mov
ss
fidivs
out
out
divb
ss
aaa
push
aaa
push
aaa
push
aaa
es
cs
ss
ds
inc
aaa
dec
aaa
push
aaa
pop
aaa
data16
outsb
aaa
jbe
jle
xchg
mov
movsl
aaa
mov
aaa
icebp
aaa
add
sbb
cmp
cmp
cmpl
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
inc
cmp
jb
test
mov
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
lcall
cmp
es
cmpb
movsl
ds
sarb
loopne
out
ds
aas
pop
aas
ss
inc
aas
push
aas
jnp
mov
lahf
aas
cmpsl
aas
mov
enter
out
aas
aas
add
add
add
sbb
and
xor
push
xor
imul
xor
mov
les
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
imul
jle
test
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
push
xor
xorb
xor
xor
xor
push
xor
jg
popf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
bound
xchg
xor
add
ss
ss
xorl
call
or
aaa
aaa
data16
nop
aaa
mov
cmp
cmp
mov
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jae
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
jg
mov
movsb
cmp
lds
jmp
addr16
xchg
lods
sarl
out
dec
aas
mov
add
nop
or
pusha
add
add
xor
xor
xor
xor
xor
xor
xor
aaa
fidivl
fidivs
loop
out
ljmp
aaa
push
cmp
dec
cmp
or
cmp
cmp
cmp
jae
jge
pop
ds
ds
xchg
add
add
add
cmp
divl
test
cmp
xor
xor
xor
push
or
sbb
and
aaa
xorl
aaa
shlb
aaa
out
sbb
and
cmp
cmp
cmp
cmp
cmp
pop
cmp
or
js
mov
std
cmp
cmp
cmp
out
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
popa
aas
jne
cltd
aas
add
add
add
fdivl
sub
pop
xor
ja
jge
mov
xchg
xor
xor
xor
pop
aaa
jl
mov
mov
cmp
cmp
xchg
mov
cmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
add
add
or
push
xor
xor
sahf
xor
xor
xor
enter
fidivs
outsb
xor
jp
jle
xorb
aaa
sarb
cmp
and
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
fstpt
add
add
add
or
scas
add
add
dec
xor
xchg
xor
xor
xor
xor
push
xor
fidivs
icebp
xor
xor
xor
outsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
dec
ss
outsb
xorl
ss
ss
ss
ss
jnp
xchg
xchg
aaa
lods
aaa
aaa
repnz
add
push
cmp
cmp
push
cmp
mov
leave
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
leave
cmp
cmp
cmp
cmp
cmp
lret
cmp
daa
mov
imul
add
or
data16
add
xor
fdivl
and
xor
outsl
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
addr16
xor
xor
xor
ss
bound
jbe
mov
cmc
ss
loopne
pushl
sbb
sub
je
cltd
cmp
mov
and
fs
cltd
ds
add
lock
mov
add
push
xor
xor
bound
aaa
xor
pop
xor
xor
xor
xor
xor
adc
and
xor
dec
cmp
cmp
cmp
cmp
cmp
pop
cmp
jns
aam
out
cmp
cmp
test
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cld
cmp
xor
mov
xchg
aas
lods
aas
in
aas
add
add
or
addb
add
xor
xor
xor
xor
mov
adc
cmp
jns
xchg
xor
xor
xor
pushf
xor
jae
xorb
ss
aaa
das
aaa
ds
dec
aaa
pop
aaa
bound
jp
nop
aaa
mov
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
insb
cmp
cmp
in
ds
ds
aas
aam
add
add
or
je
add
jecxz
lock
xor
insb
xor
xor
xor
pop
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
jnp,pt
xchg
xchg
ds
ds
ds
jl
xchg
aas
ret
aas
jecxz
add
add
or
nop
add
add
xor
xor
xor
push
shll
adc
xor
xor
xor
xor
xor
mov
add
push
aaa
pusha
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jno
mov
std
cmp
imul
cmp
cmp
cmp
enter
in
cmp
push
ds
xchg
xchg
movsl
ds
mov
loopne,pt
repnz
add
adc
pop
aas
sub
cmp
inc
aas
add
add
or
out
add
mov
ret
xor
xor
xor
xor
outsb
xor
xorl
insl
xor
jnp
xchg
nop
xor
xor
xor
xor
pop
xor
out
xor
enter
fidivl
xor
adc
and
xor
ss
ss
ss
ss
ss
ss
jg
xchg
ss
shll
or
insl
aaa
mov
stos
aaa
adc
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
test
scas
cmp
cmp
cmp
cmp
pop
cmp
xchg
cmp
jmp
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
add
inc
or
xor
add
sub
ja
or
xor
xor
xor
xor
xor
push
cmp
dec
cmp
cmp
cmp
cmp
aas
add
add
add
xor
xor
insl
xor
xor
xor
xor
xor
shlb
ljmp
xor
xor
pop
xorl
mov
cmp
sarl
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fwait
cmp
test
movsb
loope,pt
jmp
aas
push
aas
ja
lea
add
add
add
add
sbb
mov
mov
fdivl
xorb
xor
xor
outsl
xor
xor
xor
inc
fidivl
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
add
add
pop
xor
outsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
xor
dec
xor
xorb
xor
xor
xor
xor
xor
inc
xor
jbe
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
inc
xor
insl
xor
in
or
xor
push
ss
xchg
ss
aaa
sub
dec
aaa
jae
cwtl
aaa
lds
int3
aaa
shll
fidivl
loope
call
aaa
std
aaa
add
or
adc
sbb
and
daa
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
insb
cmp
je
js
jl
cmpb
cmp
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
mov
cwtl
cmp
cmp
cmp
cmp
cmp
dec
cmp
ja
mov
xchg
cmp
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
push
cmp
cmp
cmp
ds
jne,pt
xchg
cltd
ds
ds
ds
aas
cmp
dec
aas
pop
aas
jno
cmpl
aas
mov
orb
fiaddl
add
xor
jp
mov
xor
stos
xor
xor
xor
pop
xor
jp
scas
xor
xor
xor
out
pop
ss
mov
shll
or
push
aaa
mov
xlat
aaa
jnp
mov
cmp
push
cmp
cmp
cmp
cmp
cwtl
cmp
test
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jo
xchg
nop
cmp
cmp
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
dec
cmp
cmp
insb
cmp
je
js
jl
cmpb
cmp
cmp
mov
cmp
cmp
adc
sbb
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
ds
insb
cmp
mov
xchg
cmp
mov
cmp
mov
mov
cmp
or
sbb
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
mov
fdivrl
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
cmp
pop
aas
pop
aas
js
mov
cwtl
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sarb
aam
fdivrs
lock
add
add
add
or
or
xor
push
xor
xor
xor
xor
xor
xor
xor
fdivs
fdivl
inc
xor
xor
xor
je
js
jl
xorb
xor
xor
test
mov
int
fnsave
repz
adc
and
cmp
inc
xor
imul
xor
xor
xor
xor
xor
xor
adc
cmp
xor
xor
xor
xor
xor
xor
xor
adc
sbb
and
sub
xor
cmp
inc
ss
ss
ss
ss
ss
xorb
ss
ss
mov
ss
shlb
fdivs
loopne
call
add
or
adc
sbb
and
sub
xor
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
pusha
aaa
push
aaa
xorb
aaa
nop
aaa
cwtl
aaa
mov
aaa
mov
aaa
shlb
fdivs
loopne
call
aaa
add
adc
sbb
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popf
cmp
cmp
cmp
cmp
sbb
and
sub
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
sub
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sub
cmp
inc
cmp
push
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
xchg
cmp
fdivrs
in
cmp
clc
cmp
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
jo,pt
jnp
cmpl
ds
mov
idivl
add
or
sbb
sub
cmp
dec
aas
push
aas
xchg
aas
movsl
aas
mov
mov
add
pop
xor
xor
xor
xor
xor
xor
xor
movsl
ss
cmp
stos
aaa
add
cmp
cmp
mov
cmp
cmp
cmp
jg
ds
adc
sbb
das
aas
add
add
add
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
hlt
xor
jb
fidivl
and
cmp
cmp
cmp
push
outsl
cmp
cmp
lds
in
push
aas
es
aas
aas
dec
aas
pop
aas
outsl
aas
add
add
or
cmpsb
add
add
xor
xor
push
xor
jbe
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
insl
xor
lea
popf
xor
xor
xor
xor
lret
xor
xchg
shlb
sti
sbb
das
aaa
inc
aaa
push
aaa
dec
cmp
or
sbb
mov
loop
hlt
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpsl
cmp
add
sub
popa
aas
push
xchg
aas
fnstcw
add
add
or
mov
add
adc
dec
xor
xor
adc
inc
xor
jo
jne
fwait
xor
xor
xor
xor
xor
xor
xor
xor
sahf
xorb
aaa
jnp
cmpb
cmp
cmp
cmp
cmp
push
mov
mov
fdivrl
out
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
ds
ds
lods
sarb
ds
lock
cmp
add
add
or
pushf
add
add
xor
xor
xor
xor
xor
mov
jp
jg
lcall
xor
xor
xor
xor
ret
aaa
cmp
inc
aaa
enter
inc
cmp
xchg
cmp
cmp
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fidivrs
push
aas
pop
aas
data16
jo
jp
test
aas
lcall
aas
int3
aas
sarb
aam
fdivrl
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
or
je
add
add
add
or
or
adc
adc
sbb
sbb
sub
xor
inc
xor
js
lea
stos
xor
xor
xor
xor
xor
xor
xor
je
lea
mov
xor
xor
xor
xor
xor
das
xor
push
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
cmpsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jle
lea
add
adc
sub
cmp
push
ss
ss
xchg
lea
pushf
divl
add
getsec
sbb
aaa
pop
aaa
imul
aaa
xchg
aaa
movsl
aaa
mov
or
pop
cmp
cmp
cmp
pop
cmp
jg
cwtl
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmpl
mov
sarl
cmp
cmp
cmp
push
cmp
jge
xchg
cmp
cmp
cmp
cmp
dec
cmp
imul
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
mov
cmp
pop
sub
cmp
xchg
mov
ds
ds
std
or
and
xor
dec
aas
pop
aas
mov
aas
loope
cli
aas
add
add
or
outsb
add
add
xor
xor
xor
push
xor
jo
ret
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jns
lret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xorb
xor
xor
xor
xor
xor
xor
dec
xor
ja
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
imul
xor
or
pop
ss
ss
mov
fwait
cmpsb
ss
pop
aaa
adc
pop
aaa
sub
aaa
insl
aaa
jnp
xchg
aaa
mov
aaa
sbb
daa
cmp
cmp
pop
cmp
cmpl
mov
aad
in
aas
cmp
push
cmp
jle
lea
movsl
cmp
cmp
cmp
pop
cmp
jae
cmpl
sarl
cmp
cmp
cmp
cmp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
mov
cmp
sbb
daa
ds
ds
ds
ds
ds
sarl
fistpll
in
ds
aas
adc
aas
push
aas
arpl
jne
test
fstpt
out
repz
add
add
or
add
add
xor
xor
xor
dec
xor
ja
mov
cwtl
xor
xor
xor
xor
xor
xor
popa
xor
mov
xchg
xor
xor
xor
xor
xor
popa
xor
xchg
mov
xor
xor
xor
xor
push
xor
jns
xchg
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jnp
mov
leave
xor
pushl
xorl
ss
ss
ss
aaa
pop
aaa
sub
cmp
lahf
aaa
stos
aaa
mov
lds
fidivs
in
aaa
add
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jl
fstpt
out
repz
cmp
cmp
cmp
dec
cmp
ja
jge
mov
sti
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
test
mov
cmp
push
ds
lea
movsl
ds
int3
fstpt
stc
or
jnp
xchg
xchg
aas
mov
aas
loope
out
aas
add
add
or
push
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
jl
repz
xor
xor
xor
xor
pop
xor
xorb
xor
xor
xor
pop
xor
xorl
shlb
xor
xor
xor
ja
xorl
stos
xor
xor
xor
xor
xor
xor
stos
xor
shll
adc
pop
cmp
inc
ss
ss
shll
fbstp
jmp
stc
adc
and
cmp
inc
aaa
pusha
aaa
outsl
aaa
test
xchg
aaa
sti
aaa
pop
cmp
cmp
cmp
cmp
popa
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
mov
movsb
cmp
cmp
cmp
dec
cmp
jbe
test
popf
cmp
cmp
cmp
cmp
pop
cmp
jne
mov
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
mov
into
cmp
add
sbb
sub
cmp
ds
sarl
loope
cli
or
and
das
aas
dec
aas
push
aas
imul
repz
aas
add
add
or
push
add
add
xor
pop
xor
xor
xor
xor
xor
xor
popa
xor
xchg
mov
xor
xor
dec
xor
imul
test
xor
xor
xor
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
cli
xor
das
ss
ss
imul
jmp
divl
add
aaa
inc
aaa
push
aaa
insb
aaa
jnp
xchg
aaa
movsb
aaa
sbb
daa
cmp
cmp
pop
cmp
cmpl
mov
leave
cmp
cmp
cmp
push
cmp
jle
lea
movsl
cmp
cmp
cmp
cmp
arpl
outsl
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
iret
cmp
cmc
cmp
xor
imul
mov
out
repz
ds
aas
dec
aas
pop
aas
je
cmpl
aas
movsl
aas
aas
add
add
add
add
or
pop
xor
xor
jae
mov
fwait
xor
xor
xor
xor
bound
jno
mov
xchg
xor
xor
xor
push
xor
insl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
ret
xor
divb
sub
inc
ss
ss
ss
out
repz
sbb
sub
inc
aaa
dec
aaa
push
aaa
mov
or
pop
cmp
cmp
cmp
pop
cmp
jg
cwtl
cmp
cmp
cmp
cmp
cmp
pop
cmp
test
xchg
cmp
call
cmp
insl
cmp
cmp
cmp
cmp
cmp
jnp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
jecxz
out
cmp
and
ds
lea
pushf
or
pop
aas
and
xor
dec
aas
pop
aas
jno
jg
cwtl
aas
cmpsl
aas
sarl
aas
add
add
add
add
aas
xor
push
xor
jle
lea
movsl
xor
xor
xor
jae
jg
mov
cltd
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushf
xor
int3
xor
pop
imul
test
fbstp
icebp
add
ja
xorl
aaa
popf
aaa
mov
lds
fnsave
jmp
add
adc
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
popa
cmp
xchg
mov
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
sarl
pop
ds
cmpsl
ds
sarl
ds
aas
sub
aaa
aas
inc
aas
push
aas
aas
sarl
fistpll
in
aas
add
add
add
add
push
xor
xor
xor
jl
repz
xor
xor
xor
xor
pop
xor
xorb
xor
xor
xor
xor
pop
xor
test
xchg
xor
aam
inc
xor
pop
xor
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
iret
xor
add
ss
ss
imul
sti
ss
aaa
adc
aaa
push
aaa
arpl
jl
mov
cltd
aaa
test
daa
cmp
cmp
cmp
data16
lea
fwait
cmp
loopne
pop
cmp
ja
test
sahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
lea
ret
cmp
outsl
jnp,pt
xchg
xchg
ds
ds
ds
or
sbb
aas
lahf
aas
stos
aas
mov
aas
stc
aas
add
add
add
add
add
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
je
out
repz
xor
xor
xor
dec
xor
ja
mov
cwtl
xor
or
adc
xor
xorl
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ds
leave
xor
sub
sub
mov
lea
cltd
ss
call
ss
push
aaa
pop
aaa
gs
xorb
aaa
mov
aaa
add
push
cmp
adc
push
cmp
cmp
cmp
sub
cmp
cmp
cmp
dec
cmp
cmp
pop
cmp
data16
jo
je
jp
jle
test
mov
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
push
cmp
sub
cmp
cmp
cmp
inc
cmp
dec
cmp
push
cmp
pusha
cmp
cmp
je
js
jle
cmpb
cmp
pushf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
push
cmp
sbb
push
cmp
cmp
cmp
xor
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmp
jb
js
jl
cmpb
cmp
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
push
cmp
cmp
cmp
and
cmp
xor
cmp
cmp
inc
cmp
dec
cmp
cmp
bound
push
cmp
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
cmpl
cmp
fwait
cmp
cmpsl
cmp
adc
ds
ds
ds
ds
ds
je,pt
jnp
cmpb
ds
ds
mov
sarb
fistpll
jmp
ds
ds
or
push
aas
sbb
pop
aas
sub
xor
cmp
inc
aas
dec
aas
push
aas
pop
aas
gs
push
jne
jp
jg
mov
aas
xchg
aas
lahf
aas
movsb
aas
test
aas
mov
aas
fnstsw
jecxz
jmp
lock
sti
aas
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
enter
shlb
aam
fdivs
fdivl
loopne
in
call
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
xor
imul
xor
lret
xor
pop
ss
ss
ss
ss
ss
xorl
ss
ss
lds
jecxz
icebp
add
adc
and
xor
aaa
jo
aaa
mov
aaa
out
add
sbb
xor
cmp
inc
cmp
jbe
jle
mov
movsb
cmp
cmp
cmp
cmp
sbb
sub
aas
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
insl
cmp
mov
pushf
cmp
cmp
cmp
cmp
and
xor
cmp
dec
cmp
jae
jnp
mov
sahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
mov
mov
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
fdivrl
in
ds
ds
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
pusha
aas
cmpb
aas
movsb
aas
mov
les
int3
aas
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
add
add
and
cmp
xor
xor
xor
xor
xor
xor
mov
fidivs
xor
ss
xchg
ss
aam
hlt
ss
adc
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
insb
aaa
test
mov
movsb
aaa
mov
mov
aaa
int3
aaa
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
xor
inc
cmp
push
cmp
data16
jbe
jle
xchg
mov
xchg
cmp
cmp
cmp
cmp
and
sub
xor
inc
cmp
push
jbe
jle
cmp
into
cmp
cmp
cmp
sbb
sub
cmp
inc
cmp
jo
test
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
test
lods
cmp
cmp
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
xor
dec
cmp
pusha
cmp
js
cmpb
cmp
mov
mov
cmp
idivl
and
xor
dec
ds
ds
xchg
lcall
xlat
fistpll
in
add
adc
aas
dec
aas
pop
aas
gs
jae
xchg
lcall
aas
xlat
aas
fistpll
in
aas
add
add
add
add
sbb
sub
cmp
dec
xor
push
xor
xor
xor
xor
xor
xor
xor
sub
xor
jno
xorb
xor
xor
xor
xor
xor
sbb
xor
xor
jp
xchg
xor
xor
xor
xor
sbb
sub
xor
inc
xor
bound
jne
lea
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jno
xorb
xor
std
xor
cmp
inc
ss
ss
mov
cmpsl
ss
shll
loop
stc
ss
aaa
and
aaa
pop
aaa
insb
aaa
mov
cwtl
aaa
test
aaa
fbstp
std
aaa
or
sbb
sub
cmp
arpl
jae
jnp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
insb
cmp
mov
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
jge
mov
pop
ds
mov
xchg
ds
in
or
cs
push
aas
jp
lahf
aas
sarb
add
add
add
add
sub
push
xor
mov
in
xor
xor
js
cwtl
xor
xor
xor
xor
xor
xor
jno
jle
sahf
xor
adc
and
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
outsl
xor
repz
fdivl
ss
push
aaa
je
jge
xchg
aaa
lret
aaa
out
aaa
or
push
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
jge
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loopne
add
xor
push
aas
mov
scas
aas
mov
aas
add
add
or
pop
add
add
xchg
mov
xor
jl
sahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aam
jno
mov
sbb
hlt
aaa
std
aaa
inc
cmp
pop
cmp
fwait
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
outsl
cmp
lods
cmp
enter
sarb
fdivrl
call
cmp
cld
cmp
daa
ds
dec
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
ds
ds
ds
ds
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
push
aas
xchg
aas
mov
aas
mov
mov
aas
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
add
add
or
lcall
xor
xor
arpl
js
mov
test
mov
xor
xor
xor
xor
xor
xor
xor
and
inc
xor
lea
scas
xor
xor
xor
or
or
adc
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
bound
je
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
push
jg
xchg
xor
mov
xor
fs
js
jl
test
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
gs
xorl
aaa
xchg
aaa
fwait
aaa
mov
aaa
mov
aaa
shll
jecxz
jmp
repz
sti
aaa
add
or
adc
sbb
and
sub
xor
cmp
inc
cmp
push
cmp
arpl
imul
cmp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
outsl
cmp
cmp
sarl
call
cmp
cmp
cmp
cmp
arpl
jno
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsb
cmp
mov
mov
fstpt
cmc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
jnp
cmpl
cmp
loope
out
cmp
push
ds
aas
ds
ds
imul
cwtl
cmpsb
ds
les
iret
xlat
ds
cmc
or
sbb
sub
ds
push
aas
pop
aas
insb
aas
mov
xchg
aas
test
enter
fidivrs
in
aas
cli
aas
add
add
or
add
add
sbb
sub
xor
jnp
mov
stos
xor
xor
xor
xor
xor
xor
xor
pop
xor
je
xchg
fwait
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xorb
xor
out
out
xor
push
ss
inc
ss
ss
outsl
ss
ss
movsl
ss
xlat
fbstp
in
pushl
sbb
aaa
dec
aaa
arpl
jge
mov
pushf
aaa
lods
aaa
ret
aaa
jmp
cmp
cmp
inc
cmp
jbe
xchg
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jo
xchg
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
fistpll
gs
aas
mov
add
lock
je
add
test
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
sbb
es
xor
ds
dec
xor
push
xor
bound
outsb
xor
jp
jle
xorb
xor
lcall
xor
mov
mov
xor
push
ss
xor
inc
ss
arpl
je
test
xchg
cmpsl
ss
ss
cld
ss
aaa
inc
aaa
push
aaa
bound
jae
test
xchg
aaa
mov
aaa
int
jmp
cmp
cmp
bound
or
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
sub
inc
cmp
cmp
cmp
cwtl
cmp
test
lods
cmp
cmp
fdivrs
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
cmp
pusha
cmp
nop
cmp
lods
cmp
mov
cmp
int3
cmp
fdivrs
or
cs
push
ds
jo,pt
js
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
lods
ds
les
fnstcw
fnstsw
cld
ds
sbb
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
jo
test
mov
test
mov
aas
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
or
sahf
add
add
xor
or
and
aas
xor
pusha
xor
xorb
xor
cwtl
xor
test
lods
xor
xor
pushl
add
and
xor
inc
xor
dec
xor
push
xor
pop
xor
xor
insb
xor
je
js
jl
xorb
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
push
xor
imul
test
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insb
xor
je
js
jl
xorb
xor
xor
shll
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jo
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
enter
in
add
adc
and
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
movsl
ss
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
cmp
dec
aaa
push
aaa
jo
xorb
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
in
aaa
pop
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
leave
cmp
cmp
cmp
cmp
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
sub
inc
cmp
cmp
cmp
cwtl
cmp
test
lods
cmp
cmp
in
add
or
and
xor
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
js
jl
cmpb
cmp
cwtl
cmp
movsb
cmp
mov
aam
idivl
sub
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
mov
ds
aas
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
jo
cwtl
aas
pushf
aas
mov
aas
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
or
xchg
add
add
xor
or
or
adc
adc
sbb
inc
xor
jb
nop
xor
xor
enter
shlb
aam
fdivs
fdivl
loopne
in
call
xor
aaa
xor
xor
push
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
inc
xor
dec
xor
push
xor
pop
xor
xor
insb
xor
je
js
cwtl
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
push
xor
insl
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
xorl
les
aam
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
cmp
push
ss
ss
mov
ss
ss
add
add
add
jmp
and
ss
ss
arpl
je
jl
test
mov
xchg
ss
movsb
lods
ss
mov
ss
fdivl
in
in
ss
ss
ss
or
adc
sbb
and
sub
xor
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
fs
insb
aaa
je
jl
test
mov
xchg
aaa
pushf
aaa
movsb
aaa
lods
aaa
mov
mov
aaa
aam
fdivl
in
in
aaa
hlt
aaa
cld
aaa
add
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
movsb
cmp
les
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
outsb
cmp
jle
xchg
mov
xchg
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
xchg
cmp
iret
cmp
idivb
and
dec
je,pt
cmpb
ds
movsb
ds
mov
aas
add
add
add
push
xor
xor
shll
inc
xor
aas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lods
xor
jge
xchg
ss
ss
divl
add
aaa
inc
aaa
mov
outsl
cmp
cmp
cmp
cmp
push
cmp
js
out
sub
cmp
es
cmp
inc
ds
ds
add
add
add
mov
xor
xor
xor
jge
xchg
xor
cmp
cmp
arpl
and
jne
lahf
aas
aas
add
add
add
adc
xor
dec
xor
data16
jle
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
outsb
xor
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
push
jbe
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
jle
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cs
push
xor
jbe
xorb
xor
lret
xor
cli
xor
push
sub
ss
ss
ss
ss
jle
mov
xchg
mov
ss
shlb
fidivs
ljmp
aaa
sbb
es
xor
ds
dec
aaa
push
aaa
bound
outsb
aaa
jp
xchg
xchg
aaa
sahf
aaa
stos
aaa
mov
ret
aaa
fidivl
out
repnz
aaa
or
push
cmp
cmp
cmp
cmp
push
cmp
push
jbe
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
outsb
cmp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
push
jbe
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
es
dec
cmp
outsb
cmp
xchg
cmp
mov
ret
cmp
repnz
push
and
cs
inc
ds
ds
ds
jbe
cmpb
ds
ds
loop,pt
cli
or
pop
aas
daa
aas
aas
aas
xchg
aas
mov
rorb
add
add
xor
xor
xor
insl
xor
add
adc
add
ss
add
cmp
inc
aaa
jl
mov
shlb
aaa
inc
cmp
cmpl
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
call
add
and
add
xor
xor
jg
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
cltd
ss
aaa
inc
aaa
pop
aaa
sahf
aaa
movsl
aaa
mov
cmp
out
cmp
cmp
cmp
ja
adc
cmp
cmp
cmp
cmp
out
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
inc
ds
sbb
aaa
aas
je
xchg
aas
enter
add
add
or
add
xor
xor
xor
xor
xor
xor
xor
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
ljmp
xor
xor
dec
xor
pop
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xorl
xor
int3
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
divl
xchg
ss
inc
aaa
test
mov
cmp
cmp
xchg
cmp
cmp
cmp
cmp
mov
cmp
cmpsl
cmp
cmp
cmp
cmp
cmp
cmp
inc
ds
ds
ds
ds
ds
jo,pt
je
js
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
fistpll
repz
aas
pop
aas
pop
aas
cmp
aas
jae
mov
cltd
aas
scas
aas
mov
aas
idivl
add
add
add
add
add
xor
xor
xor
xorl
mov
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
and
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
daa
xor
xor
xor
mov
xor
xor
sub
cmp
dec
xor
xor
xchg
xor
xor
xor
repnz
and
aaa
mov
les
adc
and
das
cmp
cmp
xor
dec
cmp
jle
cltd
cmp
dec
cmp
jno
mov
sarl
add
cmp
push
cmp
cmp
cmp
push
js
leave
cmp
cmp
cmp
add
push
add
add
add
xor
cmp
dec
xor
xor
xor
xor
xor
xor
xor
xor
jmp
xor
data16
mov
cmp
push
cmp
out
add
cmp
cmp
mov
or
xor
aas
aas
inc
aas
push
aas
pop
aas
insb
aas
jl
mov
xchg
aas
pushf
aas
movsb
aas
test
lods
aas
mov
mov
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
in
in
aas
hlt
aas
add
add
add
add
add
xor
push
xor
insb
xor
xor
xor
xor
xor
and
cmp
xor
xor
je
js
jl
xorb
xor
xor
mov
xor
xor
xor
xor
adc
sbb
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
test
xchg
xor
xor
xor
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
dec
xor
lock
inc
ss
ss
movsb
ss
pop
aaa
and
xor
aaa
insb
aaa
test
lods
aaa
mov
aaa
sub
das
cmp
cmp
push
cmp
js
mov
mov
nop
cmp
cmp
cmp
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
sbb
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
lea
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
cmp
lods
cmp
fdivrs
in
cmp
cld
cmp
adc
adc
sbb
and
sub
sub
xor
cmp
inc
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
ds
ds
or
sbb
daa
aas
xor
dec
aas
pop
aas
imul
aas
mov
lahf
aas
mov
int3
aas
sarb
add
add
add
add
add
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
add
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
fs
cmpsl
xor
cmc
xor
push
bound
lea
xchg
ss
ss
aaa
outsl
aaa
pushf
aaa
movsl
aaa
std
aaa
push
cmp
popa
cmp
cmp
cwtl
cmp
test
lods
cmp
cmp
enter
aam
fdivrl
in
add
adc
cmp
cmp
push
cmp
js
mov
cltd
cmp
cmp
cmp
cmp
cmp
iret
cmp
cmp
cmp
cmp
bound
mov
add
orb
dec
xor
int
ljmp
xor
lods
xor
shlb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
das
xor
push
xor
je
xorl
mov
xor
xor
xor
xor
xor
les
jle
test
xor
xor
adc
cmp
ss
fs
mov
cmp
cmp
cmp
cmp
in
add
cmp
cmp
cmp
cmpb
sbb
insl
aas
mov
add
add
add
sbb
jnp
xorl
xor
stos
xor
xor
xor
xor
xor
mov
xor
push
shll
adc
arpl
fwait
aaa
mov
aaa
in
aaa
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jbe
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarl
aaa
ds
xchg
movsb
ds
fstpt
clc
sub
dec
aas
fs
je
test
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
in
add
add
add
add
push
xor
sub
cmp
inc
xor
dec
xor
push
xor
pop
xor
xor
insb
xor
je
js
jl
cwtl
xor
rdtsc
adc
and
xor
push
xor
pop
xor
xor
je
js
jl
xorb
xor
xor
mov
leave
xor
xor
xor
xor
xor
xor
xor
xor
pushf
xor
mov
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
cmp
dec
xor
jb
xorl
xor
xor
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
mov
mov
xor
push
ss
ss
ss
ss
ss
ss
xchg
ss
ss
fdivl
ljmp
aaa
sub
cmp
push
aaa
gs
jne
mov
cwtl
aaa
mov
aaa
aam
loop
ljmp
cmp
cmp
dec
cmp
push
jg
lea
movsb
cmp
cmp
cmp
cmp
daa
cmp
cmp
pusha
cmp
xchg
fwait
cmp
cmp
cmp
cmp
cmp
and
cmp
outsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jne
mov
adc
jmp
aas
mov
add
mov
add
add
add
xor
xor
dec
xor
xor
xor
xor
and
xor
xor
xor
xor
xor
xor
sbb
dec
xorl
shll
ss
movsl
aaa
stos
aaa
mov
cmp
cmp
cmp
cmp
and
cmp
cmp
cmp
cmp
add
adc
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
cmpb
mov
ds
aas
sbb
insb
aas
jo
cmpb
aas
mov
aas
mov
aas
int3
aas
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
or
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
dec
xor
jbe
mov
pushf
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
and
and
cmp
inc
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
dec
xor
dec
xor
xor
xor
xor
xor
cmp
inc
xor
push
xor
pusha
xor
insb
xor
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
shll
sub
xor
cmp
inc
ss
ss
mov
movsb
ss
ljmp
aaa
dec
aaa
pusha
aaa
ja
jnp
xchg
aaa
mov
out
or
cmp
cmp
jb
cmpsb
cmp
cmp
cmp
cmp
cmp
cmpl
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
xchg
cmp
cmp
mov
mov
mov
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
dec
cmp
pop
cmp
fs
jp
cmpb
cmp
or
and
cmp
push
jno,pt
mov
sahf
ds
ds
loop,pt
cli
ds
aas
imul
lcall
aas
mov
aas
sarb
fidivrl
loop
ljmp
add
rorb
add
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
jb
jp
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
jb
jp
xorb
xor
xor
xor
xor
xor
xor
arpl
mov
movsb
xor
xor
xor
xor
xor
xor
xorb
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
jg
xchg
xor
mov
xor
or
and
ss
ss
ss
jle
mov
mov
xlat
ss
add
getsec
pop
aaa
cmp
dec
aaa
arpl
jno
test
cwtl
aaa
cmpsb
aaa
mov
int3
aaa
loopne
out
aaa
aaa
adc
daa
cmp
cmp
jl
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
sahf
cmp
fidivrl
jmp
cmp
cmp
cmp
cmp
cmpl
mov
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
jl
lea
ret
cmp
stc
cmp
sbb
xor
inc
ds
ds
ds
mov
pushf
ds
ds
in
in
ds
ds
pop
aas
sub
aas
push
aas
fs
jge
lea
mov
aas
aas
aad
jmp
add
loopne
add
add
xor
and
xor
inc
xor
insb
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
jnp
mov
sahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
mov
lods
xor
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
imul
add
adc
and
es
pusha
ss
mov
adc
cmp
addr16
outsb
aaa
jne
jl
xorl
aaa
xchg
aaa
cwtl
aaa
lahf
aaa
cmpsb
aaa
lods
aaa
mov
mov
aaa
shlb
xlat
aaa
fidivs
in
in
aaa
repz
sti
aaa
and
dec
cmp
fwait
cmp
cmp
cmp
cmp
xchg
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
dec
ds
jnp,pt
stos
ds
loop
cs
aaa
aas
pusha
aas
outsl
aas
mov
aas
jecxz
add
add
or
add
xor
xor
pop
xor
and
xor
xor
xor
xor
jno
fdivs
loope
sbb
test
mov
fidivs
divb
pushl
xor
xor
xor
xor
xor
inc
xor
dec
ss
sahf
ss
mov
aaa
cmp
inc
aaa
jno
sahf
aaa
mov
mov
cmp
xchg
cmp
cmp
cmpl
cmp
cmp
cmp
les
jmp
cmp
cmp
cmp
cmp
dec
cmp
inc
outsl
ds
jecxz,pt
std
or
sub
aas
test
fdivrs
out
aas
add
add
push
add
add
add
xor
xor
lcall
xor
xor
insl
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
sbb
mov
aaa
out
divl
add
cmp
fwait
cmp
cmp
cmp
bound
sbb
sub
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmp
insb
cmp
je
js
jl
cmpb
cmp
cmp
mov
lret
cmp
dec
cmp
cmpl
xor
cmp
cmp
pop
cmp
push
and
cs
ds
fidivrs
sbb
das
aas
inc
aas
push
aas
insl
aas
mov
ret
aas
add
add
push
add
add
xor
insl
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
xor
xor
test
mov
ss
aaa
je
mov
aaa
add
adc
inc
cmp
fnstsw
in
xor
sarl
cmp
cmp
cmp
data16
js
test
mov
mov
nop
cmp
cmp
cmp
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lea
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
pop
cmp
pushf
cmp
aad
call
ds
xor
inc
ds
ds
jae,pt
mov
cltd
ds
mov
loope,pt
repnz
sbb
cs
cmp
push
aas
push
jnp
nop
aas
sahf
aas
mov
lds
int
fstpt
in
aas
sti
aas
add
add
push
add
add
add
xor
xor
xor
pop
xor
ja
mov
mov
xor
xor
xor
xor
xor
xor
xor
pop
xor
test
cltd
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
jnp
mov
xchg
xor
xor
xor
xor
xor
push
xor
jbe
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
xchg
xor
fdivl
xchg
lahf
ss
aaa
inc
aaa
mov
aaa
cmp
imul
cld
cmp
cmp
cmp
cmp
cmp
inc
cmp
cwtl
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
cmp
xchg
ds
aaa
aas
test
sahf
aas
lods
aas
aas
loopne
in
aas
lock
hlt
aas
clc
aas
add
add
push
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
cltd
xor
xor
xor
xor
xor
jo
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
sub
inc
xor
fs
test
scas
xor
aam
out
sti
xor
xor
cmp
inc
ss
ss
ss
mov
pushf
ss
shlb
fdivs
call
aaa
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
dec
aaa
pop
aaa
arpl
xorb
cmp
cmp
cmp
jbe
mov
fstpt
sbb
cmp
cmp
test
mov
cmp
sub
xor
cmp
inc
cmp
push
cmp
pop
cmp
test
cmp
cld
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
pop
cmpb
lods
ds
les
int3
ds
fdivrs
fdivrl
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
xchg
xchg
aas
test
mov
aas
stc
aas
add
add
add
xor
xor
xor
push
xor
mov
pushf
xor
xor
xor
xor
xor
xor
xor
xor
xor
jnp
mov
popf
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
pop
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ds
ss
ss
xchg
movsb
ss
lret
ss
aaa
mov
xchg
aaa
fnsave
add
cmp
cmp
push
cmp
cmp
cmp
cmp
sub
inc
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sub
cmp
push
cmp
cmp
cmp
call
cmp
cmp
cmp
cmp
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
lea
cmpsl
cmp
cmp
cmp
cmp
sbb
dec
cmp
cmp
cmp
cmp
adc
jo
mov
aas
and
js
add
add
add
add
add
xor
xor
enter
shlb
aam
fdivs
fdivl
loopne
in
call
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
stos
xor
xor
xor
xor
xor
xor
push
jnp
xchg
xor
xor
xor
xor
sub
xor
jbe
jle
fwait
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
inc
xor
insl
xor
mov
mov
xor
push
or
sub
xor
dec
ss
ss
jge
movsb
ss
les
int3
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lret
aaa
out
add
or
and
sub
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jle
test
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
imul
in
or
pusha
push
add
add
add
xor
int3
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
sbb
sub
aas
xor
pop
xor
push
jb
mov
sahf
xor
xor
xor
xor
xor
xor
ja
mov
cwtl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
popf
xor
xor
xor
lahf
xor
and
gs
ss
ss
aaa
cld
aaa
or
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jo
mov
sarb
cmp
cmp
cmp
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
pop
cmp
xchg
cmp
lret
cmp
std
cmp
ss
ds
ds
outsb
ds
ds
fnstcw
clc
ds
aas
aas
popa
aas
imul
cltd
aas
mov
aas
mov
mov
add
jo
add
add
add
xor
xchg
xor
xor
xor
xor
xor
cmpsb
xor
xor
xor
xor
xor
leave
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
shll
dec
and
push
aaa
jecxz
and
cmp
jle
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
cmpsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
aas
ds
pop
aas
inc
aas
push
aas
add
add
add
add
xor
aaa
xor
xor
mov
xchg
xor
in
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
lcall
xor
into
ss
ss
aaa
fistpll
out
cmp
cmp
cmp
push
cmp
cmp
cmp
cmpl
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
aas
mov
ret
aas
xlat
aas
out
cli
aas
add
add
add
or
sbb
xor
xor
xor
mov
xor
xor
xorb
xor
xor
mov
xor
xor
xor
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
ss
ss
xchg
ss
ss
aaa
cmp
pop
aaa
jp
cltd
aaa
test
aaa
pushl
imul
dec
cmp
cmp
cmp
cmp
cmp
add
cmp
cmp
cmp
cmp
cmp
cmp
push
ds
ds
ret
add
push
aas
jns
movsl
aas
scas
aas
les
hlt
aas
add
add
add
push
xor
xor
enter
aam
fdivl
loopne
in
call
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
data16
xchg
xor
xor
xor
xor
xor
push
xor
popa
xor
jno
mov
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jb
cwtl
xor
jmp
xor
or
adc
sbb
and
sub
das
ss
mov
mov
fdivl
add
fidivl
jmp
or
cmp
popa
cmp
cmp
cmp
mov
or
sub
cmp
inc
cmp
push
cmp
pop
cmp
push
cmp
jl
cmpb
cmp
cwtl
cmp
movsb
cmp
mov
mov
mov
cmp
int3
cmp
fdivrs
in
call
cmp
cld
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
js,pt
cltd
cmpsl
ds
ds
aas
adc
and
sub
ss
dec
aas
pop
aas
arpl
jl
movsl
aas
mov
mov
aas
enter
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
add
add
or
or
sbb
sub
aas
xor
jnp
xchg
xor
xor
xor
xor
xor
xor
mov
cltd
xor
push
xor
xchg
xor
xor
xor
xor
xor
xor
popa
ss
loopne
or
or
inc
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
insl
cmp
jge
test
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
pop
cmp
xchg
cmp
cmp
cmp
cmp
cmp
sbb
and
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmpl
sarl
or
cmp
dec
ja,pt
test
pushf
ds
ds
sarb
loope,pt
idivl
add
aas
sub
aaa
aas
dec
aas
pop
aas
imul
aas
xchg
aas
cmpsl
aas
lds
sarl
call
add
rorb
sbb
add
add
sbb
xor
mov
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
mov
mov
icebp
xor
xor
xor
xor
pop
xor
adc
xor
xor
xor
xor
aam
pushl
ret
sbb
push
aaa
lea
xchg
aaa
std
aaa
arpl
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
sub
dec
cmp
outsl
cmp
cmpsb
cmp
fistpll
adc
ds
ds
je,pt
cmpl
lahf
ds
sub
stos
aas
sarb
sti
aas
add
add
push
add
add
add
xor
jecxz
adc
and
and
sub
sub
xor
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jge
test
lea
xchg
xor
xor
xor
xor
xor
sub
xor
jns
mov
mov
xor
xor
xor
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xorb
ss
ss
aaa
push
xorl
hlt
aaa
push
cmp
pop
cmp
jle
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popa
cmp
jno
jns
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
popa
cmp
mov
pushf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
dec
cmp
add
push
add
add
or
xor
inc
xor
pop
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
sub
inc
xor
xor
js
xorb
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
je
test
xchg
xor
movsb
xor
mov
mov
mov
xor
int3
xor
divb
and
ss
ss
ss
xchg
xchg
ss
ss
shlb
ss
ss
aaa
push
aaa
es
sub
cs
dec
aaa
pop
aaa
pop
aaa
pusha
aaa
push
aaa
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
loope
out
aaa
divb
or
and
cmp
cmp
dec
cmp
push
cmp
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
pushf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
or
cmp
cmp
cmp
cmp
cmp
popf
cmp
dec
ds
ds
add
cmp
aas
loop
add
add
push
add
nop
xor
xor
xor
pop
xor
xor
xor
sub
cmp
inc
xor
dec
xor
push
xor
pop
xor
xor
insb
xor
je
js
jl
xchg
xor
fdivs
call
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
dec
xor
jb
mov
test
shlb
sbb
xor
xor
xor
xor
xor
xor
xor
xor
and
xor
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
lret
xor
xor
cmp
pop
ss
nop
ss
shll
shll
fnstenv
loope
jmp
aaa
sbb
sub
inc
aaa
push
aaa
arpl
jns
mov
sahf
aaa
scas
aaa
ret
aaa
in
aaa
sti
aaa
push
cmp
cmp
cmp
push
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
push
cmp
lods
cmp
cmp
cmp
cmp
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loopne
repnz
xchg
ds
ds
add
push
aas
xchg
aas
aas
aas
add
add
sldt
add
add
xor
xor
xor
xor
xor
and
and
sub
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
fdivs
loopne
call
xor
xor
xor
xor
xor
jno
test
xchg
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
mov
mov
ss
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
pop
aaa
jb
jp
xorb
aaa
xchg
aaa
scas
aaa
mov
aaa
jecxz
cld
aaa
push
cmp
cmp
cmp
cmp
arpl
je
mov
pushf
cmp
cmp
cmp
cmp
test
lods
cmp
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
mov
popf
cmp
out
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
push
cmp
mov
mov
cmp
pop
ds
xor
inc
ds
ds
jnp,pt
jg
lods
ds
ds
jecxz,pt
in
ds
ds
add
or
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
outsb
aas
jbe
jle
xchg
mov
lahf
aas
mov
lret
aas
clc
aas
add
add
add
add
xor
xor
pop
xor
jno
js
jg
xchg
lea
xchg
xor
xor
xor
xor
push
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
sub
inc
xor
imul
xor
mov
mov
xor
loopne
clc
xor
cmpsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
inc
bound
xorb
ss
ss
or
and
xor
dec
aaa
dec
aaa
ja
jle
test
mov
xchg
aaa
fwait
aaa
shll
aaa
pop
cmp
jo
cmpb
cmp
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
insb
cmp
je
js
jl
cmpb
cmp
cmp
loope
in
adc
and
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
idivl
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
daa
ds
fidivrs
cmc
ds
aas
dec
aas
push
aas
lods
aas
mov
aas
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
repnz
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
mov
les
shll
in
repnz
xor
xor
arpl
jno
jle
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xorl
mov
xor
xor
xor
cmp
xor
lahf
xor
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
inc
xor
test
ret
xor
add
pop
sub
cmp
outsb
xorb
mov
les
stc
or
dec
aaa
jbe
xchg
mov
aaa
sbb
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
jp
mov
sarl
add
adc
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
xchg
cmp
loopne
in
cmp
clc
cmp
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
jle,pt
cmpsl
ds
ds
ds
and
cmp
dec
aas
push
aas
fs
mov
mov
mov
sarb
aas
loopne
in
aas
lock
hlt
aas
clc
aas
add
add
hlt
add
add
xor
xor
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
xorl
xor
xor
xor
xor
xor
xor
xor
dec
xor
arpl
cltd
xor
aaa
gs
outsb
aaa
lahf
aaa
aad
ljmp
cmp
cmp
cmpl
cmp
cmp
cmp
cmp
pop
cmp
jp
inc
cmp
cmp
cmp
cmp
cmp
cmp
aas
pop
aas
insb
aas
je
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
lock
add
add
add
add
or
and
xor
inc
xor
dec
xor
push
xor
pop
xor
xor
insb
xor
je
js
jl
xorb
xor
xor
mov
xor
mov
xor
xor
xor
xor
adc
adc
sbb
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
shll
jecxz
push
xor
xor
xor
pop
xor
test
xchg
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
divl
inc
ss
mov
xchg
movsb
ss
les
enter
aam
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
inc
aaa
pop
aaa
jb
xchg
xchg
aaa
lods
aaa
mov
aaa
loope
loopne
in
cmp
cmp
cmp
cmp
cmp
cmp
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
and
cmp
push
cmp
jae
test
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
pop
cmp
push
cmp
jl
xchg
cmp
fnstcw
push
imul
and
xor
aaa
aas
add
add
add
add
add
xor
out
jmp
pushl
daa
cmp
cmp
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
js
cmpb
cmp
mov
cmp
mov
mov
cmp
int3
cmp
fdivrs
in
call
cmp
cld
cmp
and
xor
ds
ds
ds
mov
mov
ds
sarb
aam
fdivrs
fdivrl
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
xor
dec
aas
pop
aas
imul
aas
xchg
aas
test
mov
aas
add
add
add
add
add
xor
push
popf
xor
xor
mov
xor
xor
xor
xor
je
js
jl
xorb
xor
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
xlat
xor
xor
arpl
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
mov
xor
hlt
xor
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
mov
fwait
ss
ss
aaa
daa
aaa
push
aaa
insl
aaa
xchg
aaa
mov
aaa
int3
aaa
fdivs
fdivl
loopne
in
in
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
mov
nop
cmp
cmp
cmp
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
pushf
cmp
cmp
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
sub
xor
cmp
inc
cmp
jae
mov
mov
cmp
aad
dec
aas
imul
aas
cwtl
aas
cmpsl
aas
mov
enter
add
add
push
xor
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
ret
xor
xor
xor
xor
or
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
shlb
pop
sub
cmp
pop
ss
test
xchg
ss
movsb
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
inc
aaa
push
aaa
arpl
ja
mov
mov
aaa
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
sarl
cmp
cmp
cmp
cmp
or
sub
pop
aas
add
add
add
test
nop
xor
movsb
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
xor
cmp
dec
xor
jle
xchg
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
jle
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
ja
jnp
pushf
xor
mov
xor
aam
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
inc
ss
ss
xorl
movsb
ss
ss
ss
ss
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
dec
aaa
push
aaa
je
mov
lcall
aaa
divl
sti
aaa
sbb
sub
xor
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmp
insb
cmp
js
cmpb
cmp
cmp
cmp
sub
sub
dec
cmp
cmp
cmp
jl
cmpb
cmp
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
addr16
lahf
cmp
loop
sti
adc
and
cs
inc
aas
push
aas
addr16
jbe
mov
mov
aas
jecxz
jmp
repz
sti
aas
add
add
add
add
xor
xchg
xor
xor
test
lods
xor
xor
xor
xchg
xor
xor
xor
xor
call
cmp
fbstp
in
ss
fdivs
cmp
lea
fidivrs
mov
pushf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
ds
ds
ds
aas
push
aas
pop
aas
pusha
aas
lea
idivb
cld
aas
add
add
add
or
adc
sbb
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
lret
xor
xor
xor
xor
xor
xor
jo
js
xorb
xor
cwtl
xor
test
lods
xor
xor
or
sbb
inc
xor
mov
mov
xor
xor
and
sub
xor
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
lock
xor
sbb
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
mov
adc
and
and
sub
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
inc
aaa
arpl
jg
xchg
cmpsl
aaa
mov
aaa
repnz
or
sbb
and
das
cmp
pop
cmp
jl
mov
mov
nop
cmp
test
lods
cmp
cmp
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jge
mov
mov
cmp
cmp
cmp
cmp
cmp
imul
fwait
cmp
jmp
cmp
cmp
cmp
cmp
cmp
fstpt
int3
fnstcw
jmp
aas
enter
add
add
add
adc
cmp
push
xor
xor
xor
pushf
xor
xor
je
xorl
cld
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
cmp
cmp
cmp
cmp
cmp
leave
cmp
cmp
cmp
cmp
mov
mov
cmp
xchg
mov
cmp
cmp
cmp
cmpl
ds
ds
ds
ds
ds
ds
or
es
inc
aas
pusha
aas
push
aas
aas
add
add
mov
xor
arpl
jo
js
mov
xor
xor
xor
xor
xor
xor
test
lds
inc
xor
mov
xor
dec
arpl
jnp
mov
lds
divl
sbb
mov
mov
leave
aaa
or
sub
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
test
cmp
xchg
cmp
cmp
cmp
and
jae
jnp
cmc
cmp
cmp
movsl
cmp
das
ds
test
iret
loope,pt
or
xor
aas
aas
jle
mov
xchg
aas
lock
add
add
ltr
add
add
daa
xor
jae
jnp
shll
adc
inc
xor
pop
xor
xor
xorl
shll
xor
xor
xor
xor
test
repnz
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
xor
xor
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
fstpt
lock
aas
push
aas
pop
aas
bound
push
jb
jp
xchg
aas
movsl
aas
lods
aas
mov
aas
std
aas
add
add
str
add
add
xor
xor
xor
xor
pop
xor
ja
jg
lea
sahf
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
jg
xorl
xor
mov
xor
xor
xor
xor
lods
xor
xor
enter
shlb
aam
fdivs
fdivl
loopne
call
xor
sub
cmp
dec
xor
jb
test
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
pushf
xor
xlat
xor
add
or
or
adc
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
les
loop
ljmp
aaa
xor
inc
aaa
push
aaa
imul
aaa
xchg
cltd
aaa
scas
aaa
mov
aaa
repz
divl
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
dec
cmp
jb
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmp
insb
cmp
je
cmpl
scas
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
fstpt
fistpll
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
enter
sub
mov
lret
sub
push
aas
popa
aas
aas
add
add
verr
add
add
push
xor
xchg
sahf
xor
xor
xor
xor
xor
xor
scas
xor
xor
xor
xor
xor
insb
xor
jl
xorb
xor
pushf
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
fs
mov
xor
add
adc
and
ss
ss
ss
jnp
mov
lahf
lods
ss
ss
add
and
aaa
mov
aaa
sbb
cmp
xchg
scas
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
outsb
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
jg
sahf
cmp
cmp
cmp
cmp
cmp
cmp
jns
mov
lahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
pop
cmp
push
cmp
jl
pushf
cmp
out
push
jae,pt
jge
mov
mov
ds
aas
add
add
adc
jo
add
adc
pop
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
fidivl
aas
aaa
dec
aaa
lods
aaa
int
call
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
jle
mov
lahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lret
cmp
cmp
fistpll
idivb
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
push
cmp
outsb
cmp
xchg
sahf
cmp
mov
cmp
das
ds
imul
ds
ds
lret
ds
ds
aas
sbb
xor
dec
aas
pop
aas
jne
mov
lahf
aas
mov
aas
std
aas
add
add
adc
movsb
add
add
xor
xor
pop
xor
test
xchg
xor
xor
xor
xor
xor
xor
xor
movsb
xor
les
int3
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
lahf
xor
xor
xor
and
cmp
push
xor
jne
xchg
cwtl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
mov
scas
xor
add
sbb
ds
ss
ss
in
add
or
es
cs
dec
aaa
push
aaa
jo
je
js
aaa
xchg
aaa
mov
xlat
aaa
cli
aaa
and
inc
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
jne
jl
cmpl
cmp
cmp
cmp
cmp
cmp
or
es
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
pop
cmp
push
aas
add
add
adc
mov
add
xor
pop
xor
xor
xor
xor
xor
xor
xor
jns
xchg
xor
xor
mov
mov
xor
xor
xor
xor
xor
pop
xor
test
or
test
lods
ss
clc
ss
xor
aaa
jbe
test
xchg
aaa
mov
aaa
cli
aaa
or
adc
daa
cmp
cmp
cmp
pop
cmp
xchg
fwait
cmp
cmp
cmp
cmpl
lret
cmp
cmp
cmp
cmp
imul
mov
fidivrs
clc
aas
aas
add
add
adc
add
add
xor
xor
xor
xor
pop
xor
xchg
xor
xor
xor
xor
test
stos
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
pushl
sbb
cmp
cmp
cmp
aas
cmp
pop
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
inc
jb,pt
fwait
ds
ds
pop
aas
aas
aas
dec
aas
push
aas
pop
aas
addr16
jb
test
xchg
aas
mov
aas
lods
aas
mov
mov
aas
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
xor
or
push
xor
xor
xor
xor
xor
imul
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jns
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
jp
jle
popf
xor
xor
xor
xor
xor
xor
xor
inc
xor
push
xor
pop
xor
xor
insb
xor
je
js
jl
xorb
xor
xor
mov
xor
fnsave
stc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
push
xor
ja
xor
and
xor
dec
ss
ss
bound
push
movsb
ss
lret
fdivl
divl
add
aaa
dec
aaa
push
aaa
imul
aaa
xchg
aaa
stos
aaa
shlb
aaa
loop
cmc
aaa
or
sub
xor
dec
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
sub
inc
cmp
xchg
enter
jmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
fdivrs
ret
ds
add
add
add
add
xor
xorb
xor
add
xor
dec
xor
mov
xchg
xor
xor
xor
jnp
lea
xor
mov
ss
ss
aaa
gs
jp
mov
mov
cmp
lret
cmp
cmp
cmp
cmp
cmp
test
lret
cmp
cmp
cmp
and
and
sub
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
jno
test
mov
cmp
clc
cmp
sbb
and
daa
ds
ds
ds
ds
ds
ds
int3
ds
ds
aas
das
aas
dec
aas
jno
jne
jns
aas
mov
fdivrs
call
add
pusha
adc
rolb
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
dec
xor
xor
xor
xor
xor
xor
xor
ja
xorl
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
ss
ss
ss
aaa
fnsave
out
aaa
dec
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmp
cmp
jno
cmpb
cmp
pop
ds
ds
ds
imul
lods
ds
aas
xor
jo
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
insl
xor
xor
xor
xor
xor
xor
sbb
sub
aas
xor
xor
jnp
mov
cltd
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jl
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jl
test
les
aam
fdivs
in
call
xor
cld
xor
xor
bound
ss
ss
mov
mov
ss
ss
aaa
push
aaa
pusha
aaa
jo
xorl
aaa
shll
cmp
cmp
cmp
jbe
cmpsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
popa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
jle
xchg
cmp
enter
idivl
and
ds
ds
ds
jl,pt
test
mov
xchg
ds
ds
mov
lods
ds
mov
mov
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
ds
aas
sub
xor
inc
aas
push
aas
fs
js
cltd
aas
popf
aas
les
aam
fdivrs
fdivrl
in
in
aas
lock
hlt
aas
clc
aas
cld
aas
add
add
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
jl
test
cmpsl
xor
xor
xor
xor
imul
hlt
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
push
xor
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
jne
mov
cwtl
ss
mov
ss
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
and
sub
xor
cmp
inc
aaa
dec
aaa
pop
aaa
jb
test
cltd
aaa
scas
aaa
mov
aaa
clc
aaa
add
or
and
cmp
inc
cmp
jne
xchg
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
xchg
mov
cmp
cmp
cmp
jo
nop
cmp
test
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
cmp
cmp
pop
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
dec
cmp
jp
mov
iret
cmp
pop
ds
ds
ds
jle
xchg
ds
mov
ds
fstpt
std
add
and
inc
aas
push
aas
mov
aas
enter
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
add
add
or
or
adc
adc
sbb
sbb
and
and
xor
push
xor
outsb
xor
jle
xchg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
arpl
outsb
xor
xchg
lahf
xor
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
pop
xor
jge
lcall
xor
xor
xor
and
sub
xor
xor
xor
cs
ss
ss
shlb
push
aaa
pop
aaa
jp
xchg
aaa
mov
shll
repnz
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
repz
cmp
cmp
cmp
cmp
cmp
les
jl
cmpsl
ds
pop
aas
jne
add
add
add
push
xor
xor
xor
xor
xor
xor
xor
je
lea
movsb
xor
xor
xor
xor
and
lahf
cmpsb
adc
and
xor
mov
aam
in
jne
cmpsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
gs
mov
cmp
enter
sarb
fdivrl
call
cmp
cld
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
inc
ds
jo,pt
mov
test
mov
mov
sarb
jmp
add
adc
sub
cmp
dec
aas
pop
aas
jae
cmpl
mov
aas
idivl
add
add
add
add
xor
xor
push
xor
jl
xchg
xor
xor
xor
xor
xor
xor
xorl
xor
dec
xor
xor
xor
xor
xor
cli
xor
inc
aaa
addr16
test
mov
and
dec
cmp
jns
test
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
js
jl
cmpb
cmp
cwtl
cmp
movsb
cmp
mov
mov
mov
cmp
int3
cmp
fdivrs
in
call
cmp
cld
cmp
adc
sbb
and
sub
xor
cmp
inc
ds
ds
ds
ds
cmpb
ds
ds
add
push
aas
and
cmp
push
aas
arpl
jbe
mov
lcall
aas
idivl
add
add
adc
pop
add
add
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
mov
sahf
xor
xor
xor
xor
xor
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
imul
ss
ss
xchg
ss
ss
ss
aaa
and
pop
aaa
data16
dec
cmp
cmp
sub
inc
cmp
jp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
arpl
jl
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
outsl
cmp
test
cmp
or
and
and
xchg
lods
fnstcw
add
sub
aas
jg
stos
aas
loopne
call
rclb
add
add
add
xor
xor
xor
jbe
xchg
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
push
xor
xor
jb
jns
xorb
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
xor
xor
jl
xorb
xor
xor
mov
xor
lret
xor
xor
xor
das
xor
xor
jb
jp
fwait
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
push
xor
mov
mov
mov
xor
aam
fdivs
in
call
xor
cld
xor
or
or
adc
push
ss
ss
ss
ss
ss
ss
jle
mov
ss
aaa
aas
aaa
push
aaa
push
jnp
xchg
aaa
test
aaa
ljmp
cmp
cmp
jb
mov
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
jle
xchg
mov
lahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
aad
fnstsw
adc
pop
ds
ds
fidivrl
out
add
add
adc
mov
add
xchg
xor
xor
xor
xor
xor
jl
jmp
or
xor
cwtl
xor
xor
xor
xor
xor
nop
ss
ss
ss
cld
sbb
sub
pop
aaa
jae
xorl
aaa
mov
aaa
add
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
cmp
ds
ds
ds
ds
aas
cmp
add
add
adc
add
add
sahf
xor
xor
test
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
pop
aaa
xor
icebp
aaa
or
and
inc
cmp
mov
xchg
cmp
cmp
jg
xchg
cmp
cmp
cmp
cmp
cmp
js
cmpb
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
pop
cmp
jge
nop
cmp
mov
cmp
or
adc
pop
ds
ds
ds
cmpb
ds
ds
fidivrs
out
hlt
ds
aas
sub
cmp
dec
aas
pop
aas
insl
aas
jnp
xchg
aas
cltd
aas
cmpsl
aas
mov
aas
call
aas
add
add
adc
hlt
add
add
xor
or
xor
inc
xor
mov
fdivl
in
xor
pusha
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
and
sub
xor
cmp
inc
xor
xor
fwait
xor
lret
xor
or
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
mov
ss
push
outsl
mov
lods
ds
ds
or
sub
dec
aas
addr16
xchg
movsl
aas
les
jecxz
add
add
adc
jp
add
add
and
inc
xor
jle
popf
xor
sbb
cmp
push
xor
xchg
xor
adc
xor
push
xor
xor
xor
xor
insl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
je
xchg
xor
add
adc
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
xchg
ss
ss
ss
shlb
fdivs
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
data16
outsb
aaa
jg
xchg
aaa
mov
aaa
repnz
or
sbb
sub
inc
cmp
insb
cmp
cmp
fidivrl
call
cmp
cmp
dec
cmp
mov
std
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jb
test
lea
enter
repz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
bound
test
iret
cmp
adc
pop
add
add
pop
xor
js
fwait
xor
xor
xor
xor
xor
xor
xor
popa
xor
xor
repz
xor
xor
xor
xor
or
sbb
sub
ss
xchg
nop
ss
ss
in
clc
ss
aaa
cmp
inc
aaa
push
aaa
popa
aaa
outsl
aaa
test
xchg
aaa
pushf
aaa
mov
aaa
cmc
aaa
cld
aaa
push
cmp
sbb
cmp
clc
cmp
cmp
inc
cmp
push
jnp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jns
mov
fwait
cmp
cmp
cmp
cmp
sbb
xor
inc
cmp
pop
cmp
cmp
cmp
loopne
cmc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
cmp
je
xchg
lret
cmp
adc
sub
ds
ds
xchg
mov
fdivrl
in
ds
ds
ds
sbb
sub
cmp
dec
aas
pop
aas
push
aas
aas
lahf
aas
scas
aas
mov
aas
stc
aas
add
add
adc
xchg
add
adc
sub
inc
xor
outsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
bound
jne
mov
pushf
xor
xor
xor
xor
xor
pop
xor
xor
xor
imul
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jg
xor
mov
xor
and
xor
ss
mov
ss
dec
aaa
fs
jns
xorb
aaa
cwtl
aaa
mov
les
fidivl
in
aaa
pushl
dec
cmp
cmp
cmp
cmp
jp
lea
sahf
cmp
cmp
cmp
sbb
and
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
xchg
mov
mov
cmp
sbb
inc
ds
ds
jp,pt
mov
popf
ds
lret
ds
add
sbb
sub
aas
fs
jl
mov
xchg
aas
mov
ret
aas
fnstcw
in
aas
aas
add
add
add
add
and
xor
inc
xor
insb
xor
xor
repz
xor
xor
xor
push
xor
jnp
xchg
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xorb
xor
hlt
xor
and
das
ss
ss
jl
lcall
aaa
dec
aaa
arpl
jae
mov
mov
aaa
in
cmc
aaa
cld
aaa
sbb
sub
cmp
dec
cmp
ja
lea
cmpsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
cmp
cmp
in
cmp
and
je,pt
jg
mov
cwtl
ds
fidivrl
in
pop
aas
or
aas
cs
cmp
inc
aas
push
aas
outsl
aas
jne
cmpb
aas
cmpsb
aas
mov
aas
add
add
add
add
add
push
xor
push
xor
mov
cli
xor
xor
xor
push
lea
test
xor
xor
xor
mov
icebp
xor
xor
aaa
xor
push
xor
test
sahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fidivs
sub
ss
ss
ss
xchg
ss
ss
ret
ss
fdivs
out
add
adc
and
xor
inc
aaa
push
aaa
addr16
cltd
aaa
stos
aaa
ret
aaa
lock
add
adc
daa
cmp
cmp
arpl
jne
mov
pushf
cmp
cmp
cmp
cmp
cmp
cmp
outsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cwtl
cmp
xlat
cmp
push
ds
ds
jno,pt
lea
mov
ds
cli
ds
aas
and
push
aas
cmpl
jmp
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
xorl
mov
xor
xor
xor
push
xor
xor
pop
xor
xor
xor
xor
xchg
mov
in
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jae
xor
aas
ss
ss
xchg
fwait
ss
shlb
ljmp
aaa
imul
aaa
lahf
aaa
mov
aaa
hlt
aaa
add
or
and
xor
inc
cmp
jno
cmpb
cmp
cmp
cmp
cmp
cmp
inc
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
mov
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
jo
js
jl
cmpb
cmp
cwtl
cmp
movsb
cmp
mov
mov
cmp
inc
ds
ds
cmpl
ds
ds
or
or
adc
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
gs
jle
xchg
test
aas
sti
aas
add
add
add
add
add
xor
xor
pop
xor
xorl
enter
aam
fdivs
fdivl
loopne
in
call
xor
xor
xor
xor
xor
or
sub
dec
xor
jl
mov
iret
xor
xor
xor
out
clc
xor
xor
xor
mov
mov
fnstenv
stc
xor
mov
shlb
xor
xor
jne
lea
test
xor
jmp
xor
and
sub
xor
ss
ss
ss
ss
xorb
ss
ss
mov
ss
ss
fbstp
out
lock
add
or
adc
sbb
and
sub
xor
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
addr16
outsb
aaa
js
jg
mov
nop
aaa
lcall
aaa
mov
aaa
aam
fidivs
in
out
aaa
divb
add
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
insl
cmp
jle
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
insb
cmp
jge
xchg
mov
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jl
xchg
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
je
jnp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
xor
dec
cmp
cmp
ja
cmpl
stos
cmp
lds
fnstsw
clc
cmp
adc
sbb
and
sub
xor
cmp
inc
ds
ds
ds
ds
jbe,pt
cmpb
ds
ds
mov
ds
ds
fdivrl
out
in
idivl
or
sbb
and
sub
xor
cmp
inc
aas
dec
aas
push
aas
pop
aas
fs
outsb
aas
jne
jg
xchg
nop
aas
xchg
aas
mov
aas
mov
aas
aam
fstpt
in
in
aas
idivb
std
aas
add
add
add
pop
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
insl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
insb
xor
jge
test
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
popa
xor
jb
jl
xorl
xor
mov
add
mov
mov
aaa
aaa
fdivl
in
jmp
icebp
aaa
stc
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
movsl
jl,pt
xchg
lea
add
add
add
xor
xor
cmp
inc
xor
xchg
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jl
lahf
xor
pop
ss
ss
push
aaa
aaa
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
imul
loope
repz
ds
js,pt
mov
pushf
ds
ds
sti
ds
aas
or
aas
cmp
ja
mov
cwtl
aas
movsb
aas
test
lods
aas
mov
mov
aas
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
add
add
adc
mov
add
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
cmp
pop
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
push
xor
xor
jg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
addr16
xchg
xor
mov
xor
pop
or
and
sub
xor
cmp
aas
ss
ss
ss
ss
arpl
mov
lods
ss
ss
ss
aaa
aaa
pop
aaa
jle
movsb
aaa
mov
mov
aaa
int3
aaa
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
add
cmp
cmp
jge
test
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jl
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
cmp
cmp
push
cmp
jbe
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmpb
cmp
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
cmp
out
std
cmp
and
xor
dec
ds
jne,pt
xchg
lcall
ds
or
xor
push
aas
jg
test
aas
mov
aas
sarl
fstpt
aas
add
add
adc
mov
add
sub
push
xor
xor
jo
js
jl
xorb
xor
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
and
cmp
push
xor
xorl
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jle
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jno
js
jg
xchg
stos
xor
lock
or
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
nop
ss
ss
shll
ss
lock
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
dec
aaa
gs
imul
aaa
xchg
aaa
popf
aaa
movsb
aaa
stos
aaa
mov
mov
aaa
into
aaa
aaa
fidivl
hlt
aaa
clc
aaa
sbb
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
and
daa
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
arpl
ja
mov
movsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
lods
cmp
lock
sbb
inc
ds
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
mov
fnstcw
out
ds
ds
and
aas
dec
aas
bound
imul
jg
cmpl
aas
test
aas
jecxz
out
add
add
adc
addb
add
xor
xor
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
int3
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
inc
xor
pop
xor
mov
cwtl
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
dec
xor
xor
xor
xor
xor
xor
xor
lods
xor
xor
xor
xor
xor
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
fdivs
fdivl
loopne
in
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
push
xor
pop
xor
push
xor
jl
xchg
xor
enter
call
xor
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
inc
ss
ss
mov
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
clc
adc
adc
xor
inc
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
test
shll
aaa
clc
aaa
add
adc
sub
dec
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
cmp
push
cmp
jnp
dec
ds
ds
jns,pt
test
mov
fstpt
loopne
repnz
ds
sub
cmp
imul
mov
aas
add
add
adc
xchg
add
add
xor
xor
jge
fbstp
pop
xor
xor
xor
jle
mov
lock
mov
ss
daa
aaa
outsb
aaa
xchg
aaa
xchg
aaa
sbb
pop
cmp
test
lret
cmp
mov
cmp
cmp
cmp
cmp
out
pop
cmp
inc
cmp
or
pop
ds
ds
ds
xchg
mov
ds
aas
es
xor
cmp
aas
imul
mov
add
add
add
add
add
xor
outsb
xor
lock
xor
xor
xor
push
xor
jb
xchg
xor
loopne
in
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
insl
xor
xchg
xor
shll
xchg
aaa
fwait
aaa
mov
mov
aaa
out
aaa
add
sbb
das
cmp
push
cmp
jbe
cmpb
cmp
aam
fnstcw
lock
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
stos
cmp
enter
std
ds
aas
imul
cli
aas
add
add
adc
mov
add
and
xor
xor
xor
xor
insb
xor
xor
jb
xorb
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
imul
jle
mov
loop
push
aaa
ja
ret
aaa
inc
cmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
insb
cmp
dec
cmp
cmpb
cmp
cmp
cmp
cmp
inc
ds
sub
aas
xchg
aas
movsl
aas
mov
aam
std
aas
add
add
adc
lret
add
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
xor
xor
xor
push
xor
xor
xor
cli
xor
xor
xor
xor
pop
xor
jnp
mov
xlat
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lahf
xor
ret
ss
aaa
jl
lods
aaa
enter
and
sub
dec
cmp
fidivrl
fidivrs
loop
out
ljmp
cmp
cmp
cmp
movsl
cmp
cmp
cmp
cmp
cmp
imul
lea
test
mov
cmp
cmp
cmp
cmp
cmp
je
js
jl
test
mov
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
sub
jbe
cltd
cmp
clc
cmp
add
or
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
outsb
jbe,pt
xchg
cwtl
ds
mov
add
sbb
xor
ds
push
aas
fs
push
aas
mov
aas
xchg
aas
sahf
aas
mov
aas
add
add
adc
inc
add
add
xor
pop
xor
xor
jo
je
js
jl
xorb
xor
xor
test
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
push
jno
jns
mov
xor
xor
xor
xor
xor
xor
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
lcall
xor
push
ss
jge
test
lea
xchg
ss
movsl
lods
ss
mov
ss
fnsave
in
in
ss
ss
ss
aaa
push
aaa
pop
aaa
jo
xchg
xchg
aaa
movsl
aaa
mov
lds
shll
lock
cli
aaa
add
or
sbb
sub
cmp
push
cmp
jo
lea
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
insb
cmp
mov
cltd
cmp
enter
out
cli
cmp
cmp
cmp
cmp
cmp
jae
test
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jns
mov
test
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
push
jl,pt
movsl
ds
ds
sarl
in
adc
inc
aas
gs
xchg
aas
lret
aas
add
add
add
sub
dec
xor
jl
mov
pushf
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xorb
xor
lock
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
push
xor
js
jl
xorb
xor
mov
xor
mov
mov
xor
int3
xor
loop
repz
dec
ss
ss
test
mov
ss
fdivl
fidivs
divb
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
idivl
inc
aas
gs
push
popf
aas
add
add
add
sbb
and
xor
cmp
pop
xor
jnp
mov
xor
xor
push
xor
xor
mov
xor
xor
xor
xor
xor
dec
xor
xor
push
xor
xorb
ss
movsb
ss
aaa
adc
dec
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
in
cmp
push
imul
popf
ds
ds
aas
jge
add
add
add
xor
push
xor
imul
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
ss
sbb
aaa
cmp
cmp
cmp
cmp
test
popf
cmp
pop
cmp
cmp
cmp
ja
xchg
loope
idivl
pop
cmp
inc
cmp
addr16
cmp
cmp
cmp
cmp
cmp
cmp
jmp
aas
xor
inc
aas
add
add
add
add
xor
pop
xor
xor
xor
ss
leave
aaa
into
aaa
loope
out
adc
jmp
cmp
cmp
cmp
cmp
pop
cmp
lods
cmp
cmp
cmp
cmp
inc
ds
ds
jge
jecxz
add
add
add
or
xor
mov
xor
xor
xor
xor
xor
xor
xor
mov
ss
aaa
arpl
jb
mov
aad
loop
repnz
cmp
push
cmp
fnstsw
hlt
cmp
scas
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
daa
cmp
lcall
cmp
mov
les
fidivrl
lock
inc
aas
pop
aas
add
add
add
xor
xor
xor
stos
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
cmp
cwtl
cmp
fidivrl
lret
aas
xlat
aas
fidivrs
lock
add
add
add
add
adc
adc
sbb
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
push
xor
pop
xor
jns
mov
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
pusha
cmp
cmp
cmp
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
or
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
mov
aam
fdivrs
fdivrl
loopne
add
or
or
adc
and
sub
sub
xor
xor
cmp
dec
cmp
insb
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
and
dec
cmp
cwtl
cmp
lods
cmp
enter
sarb
in
call
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
jl
cmpb
mov
mov
xchg
ds
ds
mov
lods
ds
mov
mov
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
inc
cmp
push
cmp
pop
cmp
push
cmp
jl
cmpb
cmp
cwtl
cmp
movsb
cmp
mov
mov
mov
cmp
int3
cmp
fdivrs
in
call
cmp
cld
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
adc
lock
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
sub
sub
xor
xor
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
dec
cmp
pop
cmp
fs
jo
je
js
jl
cmpb
cmp
cwtl
cmp
movsb
cmp
mov
mov
mov
cmp
int3
cmp
fdivrs
in
call
cmp
cld
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
ds
ds
ds
add
add
or
or
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
adc
lock
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
insb
xor
je
js
jl
xorb
xor
xor
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
test
nop
xor
pushf
xor
test
lods
xor
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
inc
cmp
dec
cmp
pop
cmp
fs
jo
je
js
jl
cmpb
cmp
cwtl
cmp
movsb
cmp
mov
mov
mov
cmp
sarb
fdivrl
call
cmp
cld
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
adc
loopne
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
shlb
fdivl
in
xor
clc
xor
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
mov
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pushf
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
cmp
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
sub
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
dec
cmp
pop
cmp
fs
jo
je
js
jl
cmpb
cmp
cwtl
cmp
movsb
cmp
mov
mov
mov
cmp
int3
cmp
fdivrs
in
call
cmp
cld
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmpb
aas
mov
mov
nop
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
clc
aas
cld
aas
add
add
adc
mov
add
add
add
or
or
adc
adc
sbb
sbb
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
jl
xorb
xor
cwtl
xor
test
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
and
sub
xor
cmp
dec
xor
pop
xor
push
xor
jl
xorb
xor
cwtl
xor
movsb
xor
mov
xor
shlb
fdivl
in
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
pushf
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
and
sub
xor
dec
cmp
pop
cmp
fs
jo
je
js
jl
cmpb
cmp
pushf
cmp
mov
mov
cmp
sarb
loopne
in
lock
add
add
or
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
jo,pt
je
js
cmpb
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
adc
in
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
enter
shlb
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
je
js
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
inc
cmp
dec
cmp
push
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
adc
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
cmp
cmp
inc
cmp
push
cmp
pusha
cmp
cmp
je
jl
cmpb
cmp
cmp
lods
cmp
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
and
add
add
add
push
xor
xor
xor
xor
xor
pop
xor
insb
xor
xorb
xor
xor
xor
xor
xor
xor
xor
adc
sbb
sub
cmp
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jae
xchg
xchg
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
popa
xor
xorb
xor
xor
xor
inc
xor
aam
jmp
aaa
cmp
dec
aaa
outsl
aaa
jne
xchg
nop
aaa
scas
aaa
mov
mov
aaa
loope
repnz
aaa
or
sbb
sub
xor
cmp
pop
cmp
jo
ja
cmpl
xchg
cmp
mov
mov
ret
cmp
push
cmp
cmp
jne
jl
lret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
pop
cmp
jno
jnp
xchg
mov
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
imul
cmp
sarb
icebp
cmp
and
sub
cmp
push
ds
ds
mov
ds
ds
aas
push
aas
push
aas
and
sub
ss
ds
dec
aas
push
aas
pop
aas
data16
jb
jp
cmpb
aas
xchg
aas
sahf
aas
stos
aas
mov
mov
aas
hlt
aas
aas
add
add
adc
mov
add
push
xor
xor
sbb
xor
xor
cmp
inc
xor
push
xor
data16
je
jns
test
mov
xchg
xor
mov
xor
xor
xor
xor
xor
inc
xor
pop
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
ss
ss
add
add
add
add
inc
xor
pop
xor
xor
insb
xor
je
js
jl
pushf
xor
sbb
cmp
pop
xor
aaa
fs
push
aaa
je
call
aaa
add
or
adc
sbb
and
sub
xor
cmp
inc
cmp
push
cmp
pusha
cmp
jo
js
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
lock
cld
cmp
cld
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
hlt
aas
add
add
add
xor
xor
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
xor
xor
xor
movsb
xor
les
int3
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
xor
xor
xor
movsb
xor
les
int3
xor
xor
xor
xor
xor
xor
xor
or
adc
and
sub
xor
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
sub
xor
cmp
inc
xor
pop
xor
je
jl
test
pushf
xor
mov
mov
xor
in
in
xor
add
or
adc
sbb
and
sub
xor
cmp
inc
ss
ss
ss
ss
ss
jl
test
mov
xchg
ss
movsb
lods
ss
mov
ss
fdivl
in
in
ss
ss
ss
or
adc
sbb
and
sub
xor
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
fs
insb
aaa
je
jl
test
mov
xchg
aaa
pushf
aaa
movsb
aaa
lods
aaa
mov
mov
aaa
aam
fdivl
in
in
aaa
hlt
aaa
cld
aaa
add
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
pop
ds
ds
mov
lods
ds
mov
mov
les
enter
sarb
aam
fdivrs
fdivrl
loopne
add
add
add
push
add
aam
fdivs
fdivl
loopne
in
call
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
dec
cmp
pop
cmp
fs
jo
je
js
jl
cmpb
cmp
cwtl
cmp
movsb
cmp
mov
mov
mov
cmp
int3
cmp
fdivrs
in
call
cmp
cld
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
pop
xor
jo
js
mov
mov
xor
mov
mov
xor
or
sbb
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
fs
js
jl
cmpb
cmp
cwtl
cmp
adc
scas
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
add
inc
xor
adc
call
add
sub
push
add
jg
jo
jno
in
pop
in
cs
filds
mov
js
roll
sbb
mov
ljmp
dec
adc
mov
fst
out
loop
mov
pop
leave
jbe
push
in
push
pop
jno
dec
and
pop
scas
les
and
xchg
loop
sub
push
push
mov
movsb
push
test
gs
mov
fdivl
mov
sbb
sahf
in
out
jnp
out
rcl
fst
fnsave
outsl
push
adc
sub
out
arpl
add
add
mov
mov
shlb
negl
dec
sarb
or
enter
repnz
xacquire
mov
inc
jmp
imul
fnsave
sbb
dec
notl
loop
push
fsubrl
sbb
or
jnp
ds
lock
int
adc
repnz
jg
xor
repz
or
insl
push
cmp
adc
sbb
insl
jp
aaa
fistpl
sar
ret
loope
jecxz
pop
push
insb
xor
add
mul
inc
cvtpi2ps
insl
inc
clc
mov
mov
jno
mov
fstpl
jmp
sbb
xor
mov
jno
fsubs
dec
mov
leave
loop
jnp
lds
out
jg
fs
add
push
shlb
out
stos
jo
gs
sbb
ret
pop
cmpl
push
sub
sbb
insb
push
loopne
pop
xor
push
jb
mov
dec
jns
sub
inc
jno
mov
push
fsubr
popa
pop
out
sahf
pushf
popa
ret
sbb
in
imul
cmpsl
jbe
das
or
stos
mov
pop
por
pop
push
dec
sbb
fiadds
or
add
push
loope
in
add
lods
xor
fucomp
add
daa
int
xchg
ds
lock
sbb
repz
into
movb
jl
xlat
jmp
sti
out
in
sbb
clts
sbb
aas
out
or
xchg
dec
imul
xchg
mov
mov
mov
mov
jg
aaa
into
lret
add
in
out
scas
sar
out
into
mov
into
pop
mov
adc
pushf
mov
popa
ficomps
fcmovne
dec
add
scas
ret
sbb
sub
fstpl
push
sub
fldt
fldt
adc
sahf
sti
cli
int
lock
outsb
ss
aas
je
jno
call
fwait
ficomps
push
mov
stos
mov
mov
inc
mov
jbe
popf
arpl
bound
fs
stos
inc
pop
sbb
jo
xorl
icebp
sub
pop
xchg
inc
stos
lahf
addr16
push
jbe
fisubrs
nop
mov
jge
push
and
dec
insl
or
movsb
cmpb
cmp
mov
add
mov
mov
add
bound
cmp
jp
addr16
mov
pop
mov
and
hlt
cmp
inc
sbb
aam
movsb
push
add
cmp
shll
and
nop
pop
and
inc
fstpt
data16
imul
pop
cmp
repz
mov
enter
cmp
and
adc
into
iret
enter
test
jbe
cmpsl
adc
push
inc
sub
scas
adc
pop
jmp
sti
mov
sbb
jo
mov
xchg
push
sbb
or
sub
fbld
and
hlt
pop
es
iret
push
mov
pop
cltd
in
or
sub
lret
jmp
loop
dec
hlt
sub
add
aas
mov
pop
adc
pusha
mov
xor
aad
mov
in
movsb
push
mov
mov
loopne
notb
cmp
push
cmpl
dec
mov
std
aam
inc
push
imul
xor
ja
push
pop
icebp
pusha
add
add
lahf
cmp
icebp
push
loopne
fcmovbe
lds
pop
or
rclb
mov
addr16
mov
pushf
xchg
lcall
pop
sbb
inc
lock
or
xlat
xor
xchg
xor
adc
dec
stos
and
mov
jno
pop
adc
or
orl
rclb
mov
lock
xchg
sub
test
in
push
push
sbb
insl
xor
pop
adc
cmc
push
mov
ret
xor
ret
cwtl
gs
aas
pop
test
sbb
cs
pop
pushf
dec
inc
call
sbb
pop
push
lret
xchg
outsb
into
ja
xor
xchg
sbb
lods
loopne
xor
mov
adc
push
std
xor
pop
push
sub
xor
add
lods
mov
mov
mov
lahf
jae
test
adc
or
push
inc
pop
inc
dec
xor
xlat
mov
ja
mov
cmc
popf
and
aas
dec
mov
lcall
push
inc
xor
shrl
push
jge
sti
ret
hlt
cmp
xchg
mov
add
iret
add
inc
and
dec
cwtl
and
mov
and
imul
xor
xor
jno
cmp
stos
mov
mov
or
inc
pop
push
pusha
das
or
add
mov
cli
inc
pop
js
sti
movb
test
cmpsb
iret
lret
inc
cmp
imul
push
push
testb
lret
mov
cmp
xor
pop
call
popa
mov
int3
or
sbbl
mov
ja
push
or
aam
inc
sbb
xlat
xchg
rorb
add
out
stos
jp
inc
aas
mov
xlat
ret
scas
lea
sbb
and
xchg
popf
loopne
mov
and
loope
xchg
jnp
xchg
lret
jle
or
jb
xchg
pop
dec
out
int
imul
jle
pop
xchg
xchg
jg
sub
nop
hlt
xor
cmp
inc
pop
dec
fnsave
in
push
xor
lods
aas
add
in
pop
and
xor
pushf
mov
mov
les
add
xchg
aad
pushf
mov
or
or
pop
lods
or
mov
test
sub
jmp
arpl
xor
cmp
or
dec
int3
test
xor
cmp
adc
xor
xchg
movsl
inc
dec
ds
ret
out
dec
xchg
sbb
movsbl
lods
jmp
dec
pop
and
lock
cmp
jp
dec
faddp
sub
ljmp
or
orl
add
or
and
nop
in
inc
inc
xchg
repz
testl
lahf
adc
in
aas
mov
jp
or
in
rorl
test
mov
enter
outsb
pop
mov
ss
mov
insl
jnp
jp
push
xlat
data16
jg
fcomps
iret
bound
jae
ja
mov
cli
inc
ret
rcll
lahf
lcall
movb
jns
adc
jmp
mov
sub
inc
lcall
add
adc
pop
inc
jecxz
insb
test
lds
cmp
add
mov
aad
mov
push
jmp
std
cwtl
mov
xor
inc
xchg
jmp
ret
imul
add
movsl
dec
xlat
sbb
test
dec
ret
int3
xchg
nop
mov
inc
mov
mov
jle
aaa
hlt
push
or
xor
cmp
clc
imul
stos
mov
nop
mov
out
loope
outsl
repz
jecxz
sahf
add
xchg
cmc
xchg
notl
rcrl
test
rcll
pop
movsl
xor
loop
jecxz
rclb
xchg
mov
pop
mov
cli
cld
mov
xor
add
jnp
popf
add
es
push
fdivr
xlat
scas
sbb
mov
fisttps
push
jp
inc
mov
es
xchg
pusha
jb
sbb
fcmovnu
int3
lahf
loop
pop
push
std
sub
inc
jp
lea
cld
std
xchg
cwtl
mov
add
insb
lods
scas
mov
movl
add
shlb
notl
popf
loop
sub
stos
xchg
lcall
lea
enter
jnp
fidivl
mov
pop
or
mov
imul
test
fsubl
cltd
jmp
int
dec
pop
sti
stos
adc
dec
test
fdivrl
push
cmp
addr16
in
and
lret
leave
add
lods
in
push
mov
scas
xchg
xor
xchg
gs
loope
or
movsb
adc
mov
xchg
push
testb
rorb
jp
or
inc
pusha
jae
xor
xchg
mov
lahf
data16
xchg
pop
mov
insl
js
push
xchg
mov
mov
pop
rorb
scas
mov
mov
into
jge
push
push
mov
and
stos
xchg
cld
push
mov
cmp
inc
int
shlb
add
aas
pop
ljmp
jno
dec
jp
xor
mov
pop
movsl
mov
adc
scas
in
in
add
stos
into
cltd
rorb
mov
jns
popl
cmp
enter
ja
dec
test
scas
mov
out
sub
lcall
test
iret
xchg
pop
mov
call
cmp
and
xor
sub
sub
xor
jecxz
imul
mov
mov
cmp
aad
mov
mov
pop
out
shlb
xor
push
movsl
cmp
mov
imul
aam
xor
mov
xchg
sbb
sarl
in
lret
lret
dec
popl
jno
imul
mov
inc
xor
adc
lret
jbe
jnp
pushf
push
jns
loope
or
inc
inc
enter
adc
pushf
pop
stos
fdivl
notb
aas
fsubrl
push
mov
test
mov
mov
sub
cmp
cmpsl
cltd
cmpsb
push
jnp
pop
cmp
push
testl
cmp
jp
xor
cmc
mov
mov
out
outsl
mov
jae
push
fisubs
xor
lods
cltd
or
mov
cmpsl
sub
mov
pop
dec
ljmp
push
mov
lods
jo
ffreep
inc
mov
inc
push
push
mov
inc
sub
rcrl
jnp
popa
xlat
xchg
cs
add
dec
push
push
mov
test
mov
push
testb
mov
ljmp
rclb
pop
pushf
dec
loopne
jge
mov
out
push
or
mov
cmpsl
sub
jmp
arpl
jle
mov
or
mov
pop
sub
adc
xchg
xor
dec
clc
or
shlb
sbb
dec
fisubs
push
mov
jle
push
jb
das
push
pop
jge
inc
cld
in
mov
add
insl
jge
inc
leave
inc
pop
mov
pop
jle
pusha
push
pop
ret
or
fsubs
scas
xor
fldl
jae
lcall
daa
int
ret
mov
cli
sbb
out
push
cs
push
sbb
cmp
pop
jmp
enter
jnp
shlb
loopne
fiaddl
dec
popa
xchg
mov
cmp
mov
xchg
lahf
push
fsubrl
aas
lds
push
adc
lock
sti
push
add
insl
lods
out
xor
jl
stos
or
bsr
cwtl
pushf
out
mov
cmp
jo
and
jae
jmp
mov
mov
add
cmp
ret
xchg
out
mov
push
mov
jecxz
push
shlb
pop
test
or
dec
rol
push
mov
adc
lea
js
xlat
sub
cli
int
pandn
pop
in
mov
jle
lret
dec
scas
mov
sub
ss
out
mov
cwtl
jno
lods
cli
stos
fs
lods
arpl
xchg
mov
cmp
jl
jae
mov
mov
dec
dec
cltd
mov
cmp
ljmp
loope
adc
push
divb
outsb
jg
ds
imul
leave
sbb
cmp
fsubl
push
jl
mov
add
mov
cmp
inc
bound
test
rcr
cmp
mov
or
out
inc
pop
jmp
int
cmp
add
jl
jb
dec
push
scas
push
mov
sbbb
int
xchg
repz
clc
pop
xor
mov
cltd
fsubrl
adc
fsts
or
mov
and
imul
dec
or
sbb
dec
fiaddl
js
push
addb
out
ret
inc
imul
fnstcw
jp
adc
es
push
sub
add
out
cmpl
push
repnz
add
inc
fsub
cmp
mov
push
in
xchg
mov
out
dec
pop
mov
shll
mov
sub
xchg
les
adc
addr16
loope
xor
out
mov
lret
loop
and
jle
pushl
in
ud0
mov
lods
mov
jo
adc
add
test
loope
testb
out
pushf
call
cmp
xchg
scas
inc
scas
pop
xor
pusha
fnsave
in
jnp
shll
adc
fwait
daa
xlat
mov
push
push
outsl
shrb
stos
push
aas
sub
inc
cmp
hlt
nop
lock
hlt
out
xchg
movsl
ja
cmp
fiaddl
imull
out
mov
in
pop
xchg
iret
lea
xchg
and
dec
cmp
shrb
push
mov
jge
movsl
add
push
sarb
mov
push
test
sbb
cli
sahf
in
mov
notl
pop
pop
popl
movsb
pop
in
push
or
insl
enterw
fistps
lahf
lods
sar
cmp
push
pop
adc
pop
in
mov
outsl
outsb
jg
pop
add
jno
loop
les
push
xchg
std
xchg
cmp
adc
sub
adc
push
out
jge
out
cs
out
or
push
push
push
arpl
mov
jae
rorb
add
or
cmpsb
std
pop
out
pop
mov
sbb
cld
gs
pop
out
inc
stos
jbe
sti
sbbb
xlat
aam
xor
loope
aad
jae
jge
pop
xlat
jge
xor
mov
push
add
cmp
popa
ljmp
out
mov
aam
lods
pop
sub
inc
leave
lret
das
iret
cmp
jl
test
mov
xor
mov
cli
jp
fisubrl
mov
jge
in
xchg
jl
in
stos
cmp
dec
addr16
outsl
adc
dec
stc
lcall
test
pop
push
fimuls
mov
push
popf
add
lock
call
mov
or
jno
cmp
xor
sub
es
icebp
mov
mov
xchg
lods
ds
xor
dec
popf
sub
movsb
test
insb
xchg
adc
xchg
cmc
sub
push
sti
cmp
xor
xor
popf
fisubrl
cld
push
cwtl
dec
sti
shrl
mov
mov
aaa
ficompl
int
out
sub
cli
insl
dec
clc
cmp
ljmp
dec
idiv
jle
mov
sahf
adc
jae
inc
ljmp
xor
clc
outsb
and
jo
aas
dec
leave
addr16
adc
fbld
lea
mov
jne
fmulp
pusha
test
push
sti
push
lret
imulb
dec
adc
mov
mov
cmp
jecxz
dec
int
sub
ljmp
jmp
xchg
test
lcall
push
xchg
ror
cmp
and
movsb
xchg
inc
lods
and
inc
jge
cld
fstl
sub
mov
mov
sahf
ficompl
or
iret
out
or
sub
ds
sub
pop
jp
repnz
mov
out
pop
test
dec
mov
jle
scas
ss
push
in
adc
ret
pop
dec
std
mov
jle
in
jae
not
shll
mov
cmpsl
into
nop
hlt
pop
push
mov
inc
enter
sarl
sub
sub
test
lods
loop
xchg
pop
popa
jmp
repz
mov
call
cli
push
cvtps2pd
sub
out
icebp
mov
scas
inc
in
data16
imul
div
ficoml
ss
push
pushf
lods
xlat
imulb
movb
push
mov
int
addb
stc
and
nop
das
pcmpeqd
lcall
sub
or
pop
or
adc
cmpl
imul
in
test
notb
mov
movsl
push
sbb
push
pop
fcmovnu
pop
lock
ds
sbb
js
cli
fldt
fmul
or
pop
xchg
pop
dec
clc
scas
sbb
jmp
out
test
in
mov
sbb
dec
xchg
pop
add
pop
xlat
scas
in
xor
clc
stc
loop
jno
inc
enter
inc
mov
lret
mov
push
sbb
subb
lret
lods
cmp
mov
outsb
push
cmp
mov
cmp
cmc
mov
shr
std
lret
rcrl
pop
inc
jecxz
jmp
pop
pushf
mov
or
je
outsl
ljmp
cmpsb
xchg
mov
lahf
jmp
sti
inc
das
testl
sbbb
mov
sub
mov
push
mov
pop
mov
out
push
in
mov
insb
sub
xlat
jmp
lcall
mov
lret
mov
in
pop
nop
fiaddl
movsl
or
ret
pop
ss
jmp
mov
mov
adc
push
push
jl
je
int3
cmp
dec
jnp
clc
jge
add
sbb
ret
sbb
cmpsb
icebp
fdivrl
dec
fstl
test
negb
pop
in
mov
cmp
adc
push
popf
adc
dec
pop
pop
mov
loop
pop
sahf
mov
pop
and
pop
ja
mov
test
pop
add
mov
in
add
mov
inc
mov
sbb
cmp
inc
mov
jp
les
jo
mov
add
ljmp
das
in
jecxz
fnsave
lret
xor
dec
push
push
mov
inc
int
pop
ror
inc
sub
sti
or
out
sub
cmp
mov
repz
mov
inc
ljmp
bnd
mov
testl
fs
sbb
jle
aam
ja
adc
pop
incl
aad
pop
jle
mov
in
xor
mov
dec
ds
sub
leave
int3
xor
cli
outsl
jne
jge
xchg
lret
das
aas
stos
ret
in
cmp
iret
pusha
mov
dec
jp
lods
pop
adc
dec
call
dec
rorb
xor
sti
and
mov
and
push
and
push
and
push
and
push
lcall
mov
out
loope
xor
aam
cli
scas
icebp
cmpb
dec
jecxz
adc
push
clc
mov
sahf
cmp
popa
inc
loop
std
out
out
ja
lea
movsl
add
dec
jg
add
imul
jbe,pt
xor
imul
push
and
push
lds
jns
cmc
out
jg
cwtl
lret
cltd
mov
adc
sub
ja
pop
jmp
pop
xor
rclb
in
stc
xchg
and
cmp
lret
in
sahf
pop
cli
adc
ss
jae
mov
mov
sarb
cmc
into
sti
jbe
out
mov
shlb
outsl
movb
dec
mov
or
sub
fnsave
xchg
js
sub
mov
jbe
in
mov
push
mov
mov
push
arpl
fildll
adc
xchg
mov
fstp
xlat
in
testb
clc
fnstsw
jmp
dec
fcmovnb
jg
flds
mov
dec
mov
daa
cld
repz
jle
int
movsl
cli
repnz
std
sti
push
pop
cld
push
into
xchg
sarl
insl
jo
jge
pop
cmp
push
mov
push
mov
cld
mov
push
scas
push
idiv
negb
pushf
loope
lods
out
pop
mov
sti
pop
mov
clc
sub
scas
adc
sub
test
scas
iret
pop
out
lahf
or
repz
imul
push
mov
ficompl
inc
lea
lods
adc
cmpsb
jns
aaa
or
sub
sbb
insl
jo
test
mov
push
fbld
movsb
jae
clc
xor
das
ret
mov
jg
cmpsb
dec
pop
push
ret
outsl
stc
lods
enter
nop
std
cmp
cmovp
test
xlat
stos
inc
jle
jno
in
rcr
js
cli
stos
inc
sub
mov
stos
fsubs
inc
sbb
inc
stc
sub
cltd
call
or
cltd
repz
lods
mov
mov
mov
mov
dec
xor
cltd
mov
inc
out
xchg
enter
mov
fs
mov
popa
mov
fs
jno
ret
out
mov
ret
fnstenv
insl
addr16
fnstenv
mov
int3
inc
outsb
cmc
jb
mov
out
pop
cltd
call
mov
into
push
or
pop
fimull
jmp
mov
adc
test
push
je
mov
mov
out
fidivrl
fsubp
insl
adc
loop
aas
pop
imul
push
or
fidivl
fidivl
pushf
lret
lahf
jg
sub
rcr
cmp
mov
lahf
add
sub
div
add
outsl
std
sti
loope
leave
add
inc
in
loopne
mov
sti
add
xchg
call
in
popf
add
imul
enter
push
loope
adc
push
icebp
adc
xlat
cmp
test
and
js
add
cmp
sbb
and
sbb
outsl
xor
add
xorl
xchg
add
scas
les
loopne
and
push
dec
pop
in
cmp
stos
shr
mov
sub
cmp
mov
enter
mov
pop
fs
mov
pusha
jg
xchg
mov
shl
fadds
mov
ss
stos
fldt
xor
mov
fisttpl
mov
cltd
clc
js
and
mov
jle
ljmp
jbe
out
insb
push
jp
mov
cld
cmp
loop
push
pop
lret
pop
ret
ds
les
int3
and
mov
mov
fmuls
es
fisttpl
pop
mov
pop
sbb
imul
xor
pop
imul
mov
mov
mov
mov
xor
inc
mov
mov
cmpsl
pop
shll
mov
movsb
jl
xchg
cltd
and
icebp
cmp
and
jb
cmp
out
xchg
movsb
cmpb
mov
cmp
outsb
stc
lock
cmp
iret
mov
inc
lcall
lret
je
pushf
cmp
cmp
out
sub
hlt
cld
adc
fbstp
jb
cmp
dec
rclb
xorl
add
cmp
iret
js
lea
jge
mov
test
jb
pop
mov
mov
mov
hlt
mov
in
push
xlat
mov
mov
mov
jmp
sbb
imul
fidivs
aad
fnsave
mov
js
inc
aaa
enter
cmp
jmp
sbb
fstpl
je
jbe
push
sbb
push
sahf
jecxz
adc
mov
stos
add
and
loop
jp
jnp
incb
push
les
imul
mov
mov
fwait
push
fsubs
pop
sahf
mov
pop
repnz
hlt
mov
dec
hlt
into
hlt
mov
movsl
ja
divl
loope
lret
push
iret
inc
out
data16
jg
cmpb
insl
imul
hlt
ss
into
xchg
pop
xchg
out
jae
fstpl
ljmp
jecxz
xchg
mov
and
stc
ss
sti
sbb
xor
scas
ret
mov
out
push
jne
ret
fnsave
fidivl
pop
stc
mov
pusha
push
cli
xchg
mov
maskmovq
idivl
pop
jnp
jge
cmc
pop
inc
xor
mov
xor
in
xchg
pop
test
cld
call
mov
add
mov
decl
lahf
out
lret
mov
xchg
inc
int
ds
mov
jmp
lods
scas
lea
aam
push
mov
fwait
jge
jge
jge
jge
push
adc
adc
jmp
push
imulb
xor
mov
sarl
sarl
fistps
mov
sarb
inc
jmp
pop
pop
sub
fsubrp
fucomip
fucomip
add
decl
leave
cli
fxtract
add
cmp
cmpsb
fstps
jmp
mov
int3
or
hlt
cld
add
pusha
insl
inc
lret
imul
pop
rcrl
subb
sbb
cltd
sbb
sbbl
sub
jecxz
xlat
jg
mov
cmpb
sbb
cmp
sbb
pushf
xor
dec
iret
pminsw
sub
enter
shlb
sbbl
xor
mov
cmp
cmpl
mov
adc
es
movsb
dec
mov
rcrb
add
push
push
xchg
aam
ljmp
push
push
pop
sbb
test
filds
test
lret
xchg
pop
std
fimull
cli
mov
in
movsb
mov
pop
push
mov
jb
rorl
jo
xchg
dec
or
xor
mov
mov
push
stos
jg
sbb
inc
cli
inc
add
adc
sbb
inc
xor
fstpt
sbb
cmpsl
xchg
add
mov
xchg
insb
jb
xchg
movsb
stc
adc
das
clc
movntps
stos
cli
adc
mov
and
and
arpl
pop
pop
adc
lea
push
je
xchg
and
popa
sbb
mov
and
xorl
hlt
xchg
jb
cmp
fcomps
shl
loopne
and
mov
and
and
pop
xchg
cmpsb
outsb
cmp
or
pop
test
ds
daa
sahf
mov
mov
add
rol
leave
out
adc
subl
xor
and
les
dec
mov
flds
mov
adc
movsb
push
nop
sbb
push
sub
rorb
out
ljmp
adc
or
dec
addr16
xor
push
cmp
clc
dec
loop
xor
mov
jbe
mov
je
je
inc
sbb
jb
pusha
or
push
mov
cmp
sbb
push
fcmovnb
cmp
jg
aam
inc
mov
sbb
outsl
push
cmp
shl
lock
jb
in
add
in
inc
bound
xchg
cmp
std
test
cmpsl
lahf
arpl
out
ljmp
push
push
je
xchg
push
jecxz
call
jae
mov
and
cmp
mov
ja
cld
and
jns
mov
adc
mov
jp
testb
sahf
xchg
dec
cmp
adc
mov
xorl
pop
lea
and
inc
add
or
fidivrs
addr16
popa
pop
sbb
pusha
push
sub
fsub
xchg
loop
in
push
rcll
or
adc
or
add
jmp
pop
ljmp
adc
mov
xchg
push
inc
je
fdivl
xchg
lods
das
ret
jl
je
push
clc
and
mov
sbb
push
inc
icebp
pop
lcall
and
pop
iret
ja
adcb
push
shl
adc
mov
mov
pushf
push
jl
adc
shlb
icebp
cmpsb
push
cmp
dec
pop
in
mov
add
aas
jne
arpl
lcall
orl
repnz
hlt
andl
sbb
jge
adcb
je
mov
jmp
xor
fisubl
test
imul
and
push
push
int3
add
inc
push
mov
adc
clc
xchg
decb
cmp
push
sub
pop
fists
stc
aam
xchg
in
xchg
pop
es
stos
mov
dec
mov
mov
mov
std
and
push
jge
mov
call
movsb
push
addl
push
icebp
xchg
shr
mov
ds
imul
cmp
pusha
icebp
mov
mov
lret
notb
pop
fstpl
mov
sub
int
push
dec
or
shlb
push
push
decb
adc
push
dec
jle
lcall
add
hlt
or
cwtl
push
or
xor
push
cmp
and
movsl
inc
lret
push
push
int3
insl
push
hlt
cmp
pop
or
aaa
mov
fwait
ss
lcall
push
xor
sub
pusha
and
xchg
push
adc
lock
lret
pusha
dec
outsl
pop
ret
fildl
pop
lahf
mov
and
dec
fwait
mov
and
rcrb
jecxz
inc
lods
push
aad
or
xchg
mov
inc
fstpl
mov
mov
adc
jl
jb
popl
rcrl
hlt
test
sub
sbb
int3
out
pop
dec
enter
adc
pop
aas
jecxz
ret
lds
iret
ror
xchg
xchg
pop
imul
dec
mov
fidivl
mov
aam
lods
xchg
sbb
xor
sub
or
les
xchg
in
cmp
adc
inc
mov
pop
pop
lock
sub
dec
cmc
cmc
mov
dec
ficoml
push
sub
test
fcoml
mov
mov
lahf
bound
arpl
or
or
adc
sbb
ret
rcll
cli
imul
and
inc
in
and
mov
std
jp
cs
xchg
adc
test
leave
loop
xor
sub
dec
pop
out
and
jle
inc
mov
rcll
inc
pop
push
dec
jge
or
xor
es
roll
xchg
cltd
aam
mov
adc
xchg
dec
sbb
or
mov
push
and
enter
push
ficoms
jae
sbb
or
xor
test
fwait
dec
stos
pop
arpl
xor
imull
es
push
xor
add
push
pushf
pop
cwtl
icebp
pushl
xchg
insb
rclb
or
enter
add
jno
dec
clc
stc
xor
decl
sbb
sarb
xor
dec
xchg
mov
add
xchg
cmp
or
mov
xlat
cli
push
pusha
cltd
loopne
cmpb
xor
movsl
daa
pop
xchg
mov
dec
movsl
in
icebp
mov
sahf
test
xchg
andb
std
cmc
sbb
jbe
je
fsubrs
dec
pop
loope
mov
or
fs
ja
int3
sbb
lcall
insl
xchg
std
mov
or
jge
jb
and
jge
scas
push
gs
sub
repnz
stc
xchg
pushl
movsl
xlat
lcall
or
mov
mov
cli
cmp
and
out
aaa
jg
mov
inc
daa
fiaddl
mov
adc
daa
push
or
stos
jge
aas
sbb
inc
cld
ret
es
testb
mov
dec
mov
xchg
adc
movsb
clc
das
jmp
inc
jle
mov
inc
jl
les
fildll
loop
and
add
push
push
adc
iret
mov
mov
cmpsl
inc
cld
sub
xlat
cs
pushf
dec
aas
addr16
mov
cmpsl
adc
cmp
inc
les
mov
jg
fistpll
xchg
xchg
pop
fwait
mov
in
xor
iret
pop
stc
scas
daa
jg
outsl
clc
pop
and
mov
add
xor
out
jp
lret
stc
imul
std
lahf
lret
sub
ljmp
aas
ds
mov
mov
ds
pop
movsl
jle
imul
jmp
sub
xchg
jg
mov
adc
fadds
cmp
fildll
fidivs
outsl
pop
pop
inc
sub
dec
cmp
fadds
fcmovnu
arpl
adc
push
sub
xchg
adcl
mov
jns
call
icebp
or
mov
icebp
adc
jae
jle
les
adc
xchg
xor
adc
mov
movsb
dec
dec
pop
jecxz
and
inc
jp
hlt
call
movsb
pop
js
movsb
inc
int3
into
mov
bound
movsb
iret
pop
jbe
cmp
push
loopne
push
push
movsb
outsl
cwtl
jbe
jmp
cmp
stc
jns
decb
repnz
adc
scas
cltd
jle
in
js
ret
stc
aaa
jns
lret
scas
lcall
iret
jg
movsb
incl
enter
paddw
arpl
fistpll
popf
mov
lahf
dec
stc
pop
xor
das
jmp
imul
sbb
fcmovnu
jb
outsl
pop
std
push
mov
dec
xor
pop
insb
idivl
sahf
int
pop
dec
stc
repz
mov
fmull
test
mov
cli
mov
cmp
es
loope
cmp
lods
pop
pop
mov
iret
add
outsl
cmpsl
dec
fldt
stos
cmc
bswap
aas
sbb
cld
mov
mov
mov
data16
mov
stos
pop
mov
pop
mov
imull
jle
popf
outsl
out
iret
insb
sti
sti
aaa
int3
lock
outsb
xchg
ds
mov
int
jbe
jmp
fildl
out
sahf
cmpsl
cs
lods
dec
jge
xchg
pop
pop
cmp
aas
or
or
iret
jp
into
imul
repz
test
xchg
aas
pop
ja
stos
cwtl
jnp
cmp
jge
and
sti
aaa
cmpsb
repz
stos
xchg
pop
jns
ljmp
sub
inc
adc
push
push
xchg
pop
jle
push
lret
inc
out
xchg
mov
fsubs
mov
addr16
mov
cwtl
jnp
repnz
test
push
cs
int3
std
fistl
pop
int3
jge
jp
nop
jmp
hlt
dec
jbe
cmp
xor
cmp
je
mov
pop
adc
out
bound
jg
stos
xchg
push
stos
cmp
mov
movsl
and
fnstcw
out
pop
iret
jns
jp
pop
bound
testb
jno
arpl
pop
cmpsl
mov
pop
or
mov
add
jge
adcb
jg
jns
nop
lahf
cs
pop
mov
enter
arpl
sub
sahf
pushf
sub
popf
inc
insb
mov
xchg
in
mov
addl
inc
cwtl
sti
cmp
out
addr16
or
adc
test
xor
arpl
xor
add
inc
addr16
jae
sahf
into
lahf
pop
pop
pop
inc
faddp
loope
pop
add
sub
xchg
push
add
imul
push
lret
repnz
dec
out
dec
cmc
ret
out
in
icebp
pop
pop
lahf
into
iret
dec
int
cmp
mov
in
xlat
adc
mov
and
xchg
pusha
out
or
or
repz
mov
and
popa
push
push
das
scas
int3
push
mov
pop
and
stos
in
aaa
mov
stos
shll
cmp
scas
jo
mov
out
int3
fs
add
imul
mov
cli
adc
cmp
movsl
jmp
and
andb
das
xchg
scas
and
pop
scas
jp
sub
jns
das
xchg
notl
mov
int
ret
orb
lret
scas
add
pop
jns
imul
jle
sub
nop
sub
push
int3
jge
pop
out
cld
das
dec
and
sbb
add
mov
dec
scas
add
xlat
sub
inc
scas
push
lahf
cmp
lret
sub
sub
testb
cwtl
mov
sub
push
rclb
mov
scas
scas
and
pop
cmc
shrb
out
in
mov
cld
scas
lret
jno
add
push
sub
clc
sti
xor
iret
push
mov
xchg
mov
cltd
cmpsl
add
mov
adc
inc
int
leave
adc
cmp
lea
push
mov
in
dec
xchg
int3
xchg
push
icebp
dec
aas
addr16
inc
cmp
push
cmp
push
xor
pop
xor
sbb
nop
mov
sbb
add
test
xor
testl
cs
jns
or
jl
arpl
xchg
xchg
cltd
jo
enter
xchg
mov
sbb
xchg
addr16
sti
adc
ja
cwtl
sub
pop
jl
pop
sub
xor
mov
loopne
rcll
subb
sahf
sub
rcl
lcall
add
int3
add
ret
in
mov
xchg
js
lods
jo
or
jge
push
mov
inc
dec
into
fwait
in
lods
sar
xor
data16
cmp
xor
aaa
ret
xchg
loop
push
inc
outsb
jb
mov
mov
or
out
cld
stc
ret
cs
pop
adc
inc
les
pop
das
fs
rcrb
enter
hlt
lock
insb
jo
or
inc
pop
inc
xor
iret
xchg
stos
sub
mov
jge
dec
lret
push
enter
in
int3
jge
lock
xchg
lds
pop
rolb
cmp
lea
xchg
stos
jns
cli
ljmp
pop
enter
sbb
xor
sub
jns
test
pop
cltd
sub
pop
js
lcall
ja
add
adcb
xlat
adc
enter
jge
fstps
fsubr
and
jmp
loopne
xchg
add
stos
loop
sbb
push
mov
add
add
add
jle
jp
mov
cld
add
sub
loopne
xchg
stc
mov
or
pusha
push
pop
add
push
in
clts
rolb
pop
cs
mov
lods
jp
dec
stos
pop
cmc
push
add
cmp
push
rclb
adc
aaa
fsubr
imul
in
fs
and
insl
mov
sbb
mov
push
dec
push
jle
cmp
movsb
or
fsubr
repz
add
out
add
leave
or
inc
cltd
add
pop
sahf
mov
cmc
mov
enter
sbb
adc
loope
adc
loopne
sti
fnstenv
adc
test
mov
std
pop
cs
int3
std
arpl
shll
clc
stos
pop
lock
fdivr
or
std
jnp
jns
repnz
leave
push
lods
loopne
sub
imul
adc
std
pop
lock
sub
pusha
lahf
stos
js
pop
add
test
js
xor
into
push
xchg
mov
repnz
adc
shrl
mov
mov
add
gs
xlat
mov
jb
jns
xchg
daa
inc
pop
jmp
rcrl
mov
dec
and
lds
rcr
insb
into
jmp
or
mov
xchg
push
into
iret
jge
ljmp
sbb
in
fcompl
add
push
ljmp
xor
add
test
outsl
adc
dec
jae
cwtl
lahf
add
imull
push
adcl
adc
mov
test
jb
into
jl
mulb
cli
jmp
fimuls
xchg
push
adc
popa
xor
ret
jno
cmp
fwait
xchg
out
repz
mov
jns
ds
pop
and
cmp
xor
in
or
mov
dec
jnp
and
xchg
loopne
dec
xor
lahf
inc
push
mov
cmpsl
out
jbe
iret
scas
mov
xlat
add
out
inc
and
test
pop
repnz
inc
pusha
mov
mov
shrb
sub
sub
jmp
dec
pop
idivb
mov
fimuls
jle
sub
adcb
call
mov
push
dec
out
cmp
out
jg
cmp
sub
lock
int
dec
cs
dec
cld
sahf
or
xchg
or
mul
inc
mov
inc
inc
push
push
pop
int3
mov
lods
stos
aaa
mov
enter
cmp
xchg
lret
rcl
ja
aam
pop
sbb
or
outsl
push
xor
cmp
or
scas
push
jl
into
repz
inc
repnz
nop
mov
dec
pop
sub
das
push
xchg
xchg
xor
incl
inc
xor
adc
dec
add
add
add
add
add
add
in
fwait
vmread
idivl
sbb
inc
or
nop
stos
adc
push
mov
and
add
adc
xchg
inc
mov
dec
shlb
ljmp
movsb
jne
dec
mov
jge
fidivl
fwait
cmpsl
lea
xor
pop
push
popf
rcrb
lea
mov
int3
mov
mov
sti
in
popf
out
out
cmp
into
mov
and
mov
ret
mov
cmp
std
mov
mul
std
div
xchg
loopne
into
xchg
lahf
into
cmp
inc
add
add
xchg
into
jno
push
fmul
push
gs
mov
jne
cmpsl
in
mov
ficompl
mov
xchg
cmp
xchg
mov
xchg
mov
lret
cmpsb
fstpl
out
pop
lret
cmpsb
fnstsw
sub
fsubrs
in
mov
jnp
lea
arpl
arpl
mov
rcr
sti
rcr
pop
rcr
jecxz
in
mov
outsb
dec
arpl
dec
arpl
mov
movsl
mov
rcr
and
shll
shll
mov
dec
arpl
mov
xor
aam
push
dec
arpl
cmpsb
mov
rcr
stos
cmpsb
movsb
jmp
test
aaa
cmc
clc
imulb
jnp
jp
mov
dec
pop
cmpsb
cmp
inc
xchg
mov
and
push
in
ficomps
xlat
jmp
push
mov
mov
neg
xchg
mov
fwait
jecxz
pop
jmp
dec
jge
in
pop
mov
outsb
mov
or
aad
mov
pop
push
sub
mov
mov
mov
jmp
xor
sbb
cmp
push
or
pop
std
test
dec
inc
std
push
roll
add
aam
jbe
jmp
pop
aam
push
mov
jle
push
mov
cld
arpl
cmp
push
mov
sbb
mov
pop
test
imul
and
inc
sub
xorl
jo
dec
sub
sbb
mov
inc
inc
push
cwtl
inc
test
adc
into
in
add
out
mov
movsb
dec
test
or
xor
push
sbb
test
or
rolb
cmp
pop
mov
cmp
das
test
cli
mov
loop
std
loop
std
loop
repnz
clc
or
in
pop
out
std
loop
std
in
aaa
cld
insl
or
jle
or
jecxz
sub
xchg
pop
xor
imul
jmp
adc
add
add
add
cld
lcall
cmp
pop
jae
xor
mov
loope
cmpsl
into
cwtl
cmp
xchg
sbb
dec
je,pt
cwtl
xor
int3
sbb
dec
cmp
icebp
xchg
sbb
mov
gs
xor
int3
lcall
sub
int3
jmp
int
dec
lahf
jb
hlt
jmp
dec
push
push
test
das
in
cmp
in
cmp
fs
sbb
dec
ja
in
cmp
jnp
mov
dec
jl
push
aaa
dec
jne
lret
pusha
xor
pop
jl
and
fstl
push
inc
jge
sub
pop
jl
lds
xor
dec
mov
pop
gs
inc
add
mov
cmp
or
adc
mov
ss
push
stc
push
or
loopne
xor
and
loopne
and
push
push
rorl
xor
outsb
xor
icebp
testl
fidivl
inc
in
ljmp
test
mov
inc
mulb
scas
incl
jno,pt
dec
jp
dec
xlat
cmpsb
icebp
dec
int3
push
clc
dec
imul
lods
jmp
cwtl
cmp
scas
push
sub
add
ljmp
jge
mov
cld
cmp
scas
out
lahf
xchg
xchg
cltd
imul
stos
out
cli
test
inc
xor
dec
push
mov
inc
lea
add
inc
ds
sbb
cwtl
push
icebp
movsb
imul
cltd
mov
bound
mov
cmc
addr16
xor
pushf
mov
cmpsl
stos
hlt
push
lea
sbb
cwtl
es
pushfw
dec
ficoms
push
icebp
daa
gs
stc
dec
xchg
cmp
pop
sub
add
call
mov
repnz
dec
rolb
jge
add
test
pop
mov
xchg
lcall
imul
or
pop
cmp
fmul
or
jl
push
stos
jne
adc
addr16
jecxz
mov
in
xchg
fdivl
inc
ds
cmpsl
hlt
ret
xor
push
inc
mov
sub
inc
ficoms
cmpsl
xchg
inc
adc
sar
push
cld
xor
adc
div
lea
mov
repz
lods
std
dec
cmp
jns
repz
shrb
adc
cwtl
mov
gs
cmovp
mov
movsl
sbb
sub
inc
test
push
adc
dec
lret
sahf
adc
cs
mov
cmpb
push
stos
push
cld
pop
loop
xchg
sub
xchg
push
xchg
mov
mov
jmp
xor
clc
and
xchg
or
jb
daa
arpl
jmp
jb
cmc
xchg
fucomip
jns
cmp
outsl
push
ds
inc
mov
xchg
mov
and
push
mov
and
mov
jl
inc
stos
fs
sbb
mov
adc
ljmp
inc
mov
int
jg
mov
xchg
push
mov
sub
repz
lds
sbb
leave
lock
jl
fcompl
dec
stc
inc
ljmp
xor
call
ja
and
cmp
xchg
sbb
mov
xor
scas
lret
in
cmc
jge
cli
arpl
inc
jnp
aaa
psubsb
mov
fldl
pop
fldt
pop
pop
mov
jae
lods
push
clc
bound
std
cwtl
dec
pop
mov
push
jecxz
ss
in
xchg
fimull
xor
xchg
mov
into
ret
popa
outsb
xor
xor
jae
mov
stc
cli
popa
leave
lods
jbe
int
push
out
mov
je
and
push
aam
push
repz
ljmp
add
lahf
in
add
sub
xchg
scas
xor
pop
sub
cmp
dec
orl
jecxz
mov
je
cwtl
enter
loopne
mov
paddusw
adc
mov
mov
leave
std
sti
and
xor
sub
imul
jle
outsb
movsl
jnp
sub
movsl
inc
aas
xchg
ss
out
rorb
push
outsb
repnz
push
loope
mov
loop
cmpsl
fidivrl
mov
jne
inc
shlb
push
repnz
ret
push
fcmovb
xor
stos
jns
sub
scas
sub
adc
pop
sbb
adc
in
adc
jns
push
jp
or
sbb
fwait
aaa
dec
mov
mov
and
ficoml
push
xor
mov
lahf
ja
lock
aaa
movsl
movsl
aam
jge
mov
mov
adc
test
pop
pop
cs
dec
cli
shrl
mov
nop
add
rolb
sbb
aam
xchg
outsb
hlt
mov
jge
mov
lods
das
xchg
lock
jo
add
stc
cmc
jmp
adc
hlt
mov
xchg
cli
pop
mov
push
lcall
sub
mov
dec
rorb
and
xchg
pop
fsubl
test
dec
movsl
repz
push
lea
or
lea
nop
jb
stos
dec
push
repz
popf
rolb
aas
dec
add
stos
jmp
mov
push
stc
fidivrs
sbb
jnp
cmpb
cli
add
inc
stos
mov
jns
xchg
ret
gs
mulb
add
pusha
lahf
je
test
dec
lret
ds
jmp
inc
xchg
insb
jle
sub
stc
ja
adc
sub
cli
fwait
adc
cld
iret
mov
scas
scas
xchg
adc
lret
dec
test
movsl
inc
test
shlb
jno
cmpsb
push
imul
mov
lahf
or
mov
scas
out
imul
inc
jg
cmc
outsb
icebp
mov
es
pop
mov
imul
dec
into
sub
add
test
lea
adc
movsl
rcl
and
mov
out
adc
out
adc
jp
call
imul
les
push
pop
aaa
xchg
lret
cmp
mov
cmp
sti
imul
xchg
ss
lods
pop
add
out
fwait
gs
push
mov
test
mov
aam
mov
dec
cmp
in
aas
lods
ret
pop
or
push
movsb
aam
cmpsl
dec
pop
or
xlat
pop
mov
sbb
dec
mov
xor
mov
mov
xor
mov
ds
mov
add
mull
and
or
rorb
push
call
imul
sbb
xchg
cmp
xchg
test
push
adc
cmp
or
mov
pcmpeqb
adc
xchg
lea
xchg
adc
push
mov
jge
xor
cmp
daa
mov
cwtl
cmp
push
sbb
loop
daa
xchg
repz
clc
icebp
out
sub
xchg
jne
pop
mov
xlat
aam
cmpsl
std
int
int3
jo
sbb
out
adc
mov
add
pushl
fimull
fists
sbb
in
mov
fisttpll
add
xor
test
or
inc
aad
testb
mov
inc
jae
pop
and
rclb
hlt
punpckhbw
aas
push
cmc
mov
push
pushf
mov
lea
insl
cmpb
in
scas
dec
int
or
js
rorl
in
imul
lcall
pop
fwait
jl
gs
ja
jb
lods
pushf
imul
ljmp
pop
xchg
jg
sbb
and
xor
mov
mov
cmpsl
lret
movsb
movsb
movsl
dec
sbb
jp
adc
pusha
jns
dec
mov
pop
or
pop
test
push
mov
inc
mov
in
mov
fcomp
insb
push
aas
xor
std
mov
mov
pop
xchg
pop
jle
ds
mov
ds
int3
pushf
popa
xchg
lods
ljmp
cmc
cmp
lods
push
jecxz
insl
lcall
ljmp
mov
xchg
daa
mov
sbb
mov
sub
xchg
iret
and
sub
pop
pop
mov
gs
repz
lret
out
cld
fdivrl
popf
out
cmp
stc
inc
int
aam
mov
or
in
mov
dec
xchg
enter
dec
loope
jae
pushf
xchg
push
dec
ds
sbbb
rorl
adc
xchg
bound
js
add
loopne
pop
mov
test
fistpll
sbbb
sahf
stc
xchg
cli
lods
out
push
sub
jg
push
jnp
push
dec
cltd
dec
inc
test
mov
loop
idiv
je
lahf
movsl
dec
or
leave
sti
jmp
pop
mov
adc
in
mov
mov
sbb
mov
scas
insl
lds
into
jmp
sti
mov
fidivrl
pop
lods
jns
stos
lahf
int
cmc
testl
mov
pop
dec
fsubp
jl
ljmp
add
mov
hlt
arpl
mov
bound
pop
sbb
cltd
jmp
aaa
add
adc
sub
cmp
jp
xchg
jl
add
lock
sbb
cmpl
add
push
jns
pusha
add
xor
daa
hlt
ret
popf
dec
pop
jo
sub
xor
fimull
xchg
push
pop
sub
mov
movsb
adc
push
push
aam
outsb
or
hlt
ret
out
pop
lock
or
out
push
jo
or
mov
or
push
stos
out
xchg
jl
add
xor
sbb
ret
sahf
dec
ds
adc
dec
jo
sub
pusha
lret
cmpsl
lods
loopne
and
push
inc
into
movsl
jo,pt
cvtps2pd
movq
push
pusha
add
into
ret
cmpsl
push
or
test
or
adc
pop
mov
pop
adc
cmpsl
cmp
add
test
cltd
dec
ds
and
adc
rorb
popa
adc
or
add
lock
and
and
and
inc
movsb
pop
loopne
sbb
sbb
mov
jb
mov
les
sti
out
aam
and
mov
and
inc
push
outsb
xor
pop
cmp
addl
sbbl
repnz
adc
rorb
or
mov
adc
jge
push
test
mov
mov
push
ljmp
repz
andb
sbbl
jge
jl
add
mov
and
call
rorb
mov
cld
push
xchg
adc
pop
inc
jmp
add
add
clc
mov
mov
roll
inc
adc
xlat
dec
cltd
loopne
xor
mov
sub
aas
xor
sbb
mov
or
or
sbb
scas
mov
je
sub
lret
push
inc
sbb
pusha
add
andl
and
mov
mov
adc
test
adc
mov
mov
jb
xchg
pop
mov
or
test
lock
add
xchg
or
adc
adc
gs
adc
addb
sub
out
push
inc
sbb
mov
mov
orl
xor
nop
push
mov
pusha
add
and
pop
or
je
or
shlb
sbbb
rolb
sbb
pop
ret
js
and
rorb
arpl
sbbl
cmp
ja
or
test
enter
add
js
add
rolb
jmp
mov
sbb
pop
dec
sbb
or
addl
clc
add
popa
push
jp
or
push
or
inc
or
sarl
add
popa
push
add
insb
mov
lock
and
mov
xchg
mov
das
or
add
cmp
or
rorb
and
adc
inc
adc
sbbl
adc
fstl
xchg
push
or
test
and
daa
hlt
ret
or
es
inc
daa
hlt
inc
add
push
jo
setp
add
rorb
inc
nop
in
vmread
add
rolb
mov
orl
or
bndldx
loopne
sub
je
or
and
aad
pop
lods
rorb
push
push
aad
add
adc
or
adc
fxch
xor
push
call
sbb
test
xor
add
call
mov
lcall
ja
or
or
sbb
imul
cmp
cs
lock
adc
in
fiaddl
gs
callw
les
out
movb
adcl
mov
scas
inc
add
sub
cli
add
xor
sti
push
hlt
inc
add
out
scas
inc
adc
addb
das
xor
pop
enter
add
addl
sbb
out
add
add
nop
adc
aam
sub
shrl
ds
jle
inc
add
jns
jg
pop
adc
cmp
xor
adc
enter
adcl
pusha
or
pop
ljmp
sub
gs
cmp
jns
mov
jnp
mov
repz
or
testl
cmp
std
mov
xchg
test
lds
mov
push
pop
sbb
sbb
out
adc
jne
mov
rcl
ret
pop
and
out
cmp
stc
xchg
cltd
insb
fldt
clc
cmp
pop
xchg
jge
cli
stos
jg
in
ljmp
inc
pop
sub
int
mov
out
inc
inc
sub
sbb
test
outsb
into
outsl
xor
push
mov
jns
adc
aaa
sbb
mov
xor
stos
inc
scas
adc
int
out
xor
out
inc
jne
jae
int3
outsl
sahf
jge
fisubrs
rcl
es
clc
and
bound
out
aaa
jg
lock
pop
push
cmp
aad
cmc
bound
scas
stos
iret
rcl
jg
inc
dec
push
sti
adc
cs
fsubr
sub
pop
rcll
mulb
mov
rolb
rolb
xchg
enter
sbb
or
jmp
xorb
orb
mov
std
xor
jo
imul
xor
mov
and
push
imul
xor
sbb
push
call
xchg
jbe
jo
xor
pop
rorl
addr16
fldt
repz
cs
sbb
pop
push
inc
mov
adc
jp
pop
rol
pop
aas
imul
stc
adc
mov
mov
or
xchg
daa
mov
sub
push
sub
aaa
js
or
push
cmp
jle
mov
or
inc
aaa
les
repnz
sub
sub
cmp
jmp
stos
cmp
jp
adc
pusha
jge
mov
lock
jnp
das
sbb
jns
lods
jge
sub
cmpsb
push
fisubrl
push
xor
cmpsb
sarb
stos
mov
pop
or
jmp
mov
push
aas
test
jbe
mov
and
or
shl
outsl
aaa
rclb
fwait
imul
in
inc
cmp
add
sbb
je
aaa
cld
inc
sti
inc
mov
std
sbb
jbe
mov
cmp
imul
xor
add
fwait
notb
push
fidivrl
mov
jb
out
xor
push
test
shll
and
cmpsl
shr
popf
inc
mov
jmp
fisttpl
cmpsb
sbb
imul
xchg
mov
lock
lods
int
pop
inc
fwait
rorl
test
iret
mov
push
jecxz
xchg
inc
fwait
lret
mov
stos
and
movsl
stos
jbe
jl
arpl
in
imul
cmp
mov
mov
mov
lahf
stos
fbld
jmp
jns
fnstcw
ds
aas
dec
aas
pop
mov
test
movsb
pop
mov
xchg
jmp
cmpsl
mov
ljmp
push
pop
mov
sub
jmp
sbb
or
mov
mov
jge
pop
mov
out
aam
fwait
pop
xor
cld
lahf
push
mov
mov
test
jle
pop
lods
pop
stos
xchg
call
push
mov
xor
mov
xlat
call
lock
ljmp
sub
lock
in
repnz
mov
cmc
lcall
cmc
jmp
jg
jg
fdivs
insb
fidivs
cmp
mov
jg
arpl
xchg
mov
pop
out
pop
leave
jecxz
out
insb
cmp
jmp
rep
inc
into
out
hlt
pop
sbb
mov
sub
cmp
std
popf
clc
mov
mov
es
mov
mov
hlt
sub
in
and
xor
scas
xchg
jmp
jp
enter
movsb
jle
mov
outsb
xchg
fwait
clc
mov
es
out
jle
mov
mov
repz
fldenv
ja
lods
fsubl
in
push
out
xchg
sti
and
xor
mov
pop
cmp
inc
lret
xlat
into
aad
imul
fidivrl
lods
push
pop
mov
mov
mov
insl
xchg
jbe
mov
sub
sarl
mov
ficoml
cltd
out
dec
mov
fimull
lods
dec
mov
rcrb
in
dec
insl
out
scas
rcl
push
pop
test
jbe
mov
stos
aam
aad
shrl
in
push
insl
adcl
aam
aam
shrb
fisubrl
mov
test
ja
imull
in
pop
in
ds
jle
mov
ds
xlat
lods
stos
jl
xlat
js
push
cmp
aam
gs
rcrb
mov
jo
pop
ret
testl
mov
push
or
shrl
insl
xchg
cli
rcrb
fdivrs
aas
outsb
mov
mov
stc
xchg
pop
or
jmp
out
jnp
movsl
lahf
jle
jp
mov
mov
test
sbb
or
fidivrs
jge
stc
xchg
mov
dec
int3
cmp
lcall
iret
mov
pop
jno
jle
cmpsl
mov
cmp
fnstcw
jle
mov
lock
repnz
mov
lahf
sbb
stc
lret
out
fucomip
fsubrp
pop
dec
mov
cld
lret
sarl
in
push
cmp
ret
divl
fsubrs
movsb
imul
xchg
cmp
push
lahf
mov
lahf
outsb
lret
sub
loopne
repz
arpl
stos
stos
push
push
test
cld
cld
sar
jg
pushf
addr16
lock
sub
sub
cli
cli
jg
shll
jnp
cmpsb
imul
popf
jae
sbb
mov
out
out
pop
adc
jp
xlat
pop
mov
sahf
jp
hlt
xchg
in
jmp
push
pop
repz
jmp
sarl
mov
sub
jns
cld
fildll
cli
shll
outsl
iret
sti
sti
fisttpll
push
mov
xor
mov
push
pop
push
cmp
fisubs
subb
scas
xchg
push
sub
addr16
out
cmc
jle
mov
repz
out
xlat
cmpsb
divb
sub
jnp
mov
in
in
xor
outsb
adc
outsl
sbb
jb
test
dec
xchg
je
loope
arpl
xlat
xchg
jl
pusha
mov
out
bound
push
das
loope
imul
cmp
xchg
push
std
dec
xor
push
sahf
fcmovb
push
dec
mov
sbb
out
mov
out
in
push
jne
push
and
xchg
push
pop
mov
cmp
mov
fisttps
bnd
add
cmp
ss
sbb
dec
pop
std
jmp
sub
sub
arpl
lods
cmpl
pop
aam
push
cld
and
loopne
xchg
jb
sub
sbb
outsl
inc
jge
jmp
popa
ljmp
pop
movsl
push
or
add
xor
in
xchg
mov
ljmp
push
mov
stc
aam
inc
mov
cmpl
aaa
mov
scas
cmp
repnz
outsl
popa
lret
mov
xorl
and
xchg
repnz
pop
sub
pop
push
push
jmp
push
psraw
fcmovbe
mov
xor
sbb
pop
push
sahf
fidivrl
cli
adc
pop
loop
xchg
cltd
and
or
xchg
xor
cmpsb
ds
mov
mov
add
mov
aas
jecxz
insb
loop
or
mov
pop
push
rorl
mov
mov
repz
pop
mov
push
cmc
push
mov
sti
add
les
xchg
push
bound
test
aad
cli
rorl
pushf
inc
test
mov
test
xor
in
mov
les
fidivl
sti
mov
push
push
dec
ds
push
sti
adc
pop
or
mov
mov
xor
adc
mov
pop
or
mov
mov
cld
xchg
out
ret
jg
xor
pop
jns,pn
sti
sbb
scas
es
xorb
pop
or
adc
jae
mov
fdiv
call
xor
js
inc
jle
outsb
cld
push
cltd
mov
mov
repnz
mov
cmp
inc
fldcw
pop
jno
cli
pop
movsb
out
loope
push
aas
imul
cmp
sub
cmp
out
mov
lret
push
xlat
jnp
sbb
dec
cld
push
mov
cmp
stos
or
sub
loope
or
or
xor
xchg
push
stos
mov
inc
jns
push
mov
mov
sti
icebp
imul
ds
push
jnp
repz
jecxz
loop
clc
es
lcall
ss
sbb
cmp
in
sub
mov
test
aas
jns
lret
xor
dec
pop
add
aad
push
mov
aam
sbb
xchg
je
in
jge
sbb
pop
pop
xor
ds
pop
or
sub
jo
pop
aad
imul
sbb
xchg
xor
cs
aaa
insl
fdivs
cmp
js
jns
enter
xchg
cs
xchg
mov
aad
lock
push
lods
inc
les
fcmovnbe
sbb
jg
cmc
add
lcall
repnz
inc
mov
push
dec
pop
std
mov
inc
mov
jl
dec
sarb
stos
mov
cld
mov
xchg
mov
push
mov
je
ljmp
lcall
outsl
aad
dec
cmp
loope
in
lds
push
add
cmpsl
sub
addr16
repnz
push
gs
cmp
test
pop
out
sbb
add
xchg
lret
aam
ljmp
add
fldl
sbb
jnp
aad
dec
pop
jge
fsubp
aam
repnz
addr16
daa
mov
fadds
add
test
push
test
pop
cmc
lahf
js
frstor
push
push
int
out
test
std
mov
or
int
jne
popa
repz
and
push
testl
inc
mov
cmp
clc
fildl
int
pop
sub
push
mov
aaa
test
movsl
sub
out
push
jmp
jo
mov
jp
std
shll
aad
push
jecxz
sbb
popf
repz
in
mov
add
jge
push
adcb
in
adc
leave
push
xlat
or
insb
and
clc
dec
test
lcall
mov
push
jmp
lret
push
sbbl
lret
fadd
insl
daa
mov
out
push
repz
jle
shlb
stos
dec
lods
xchg
movsb
or
mov
int3
sub
pop
int
push
jnp
bound
out
sbb
std
aam
push
imul
divl
xchg
imul
dec
pop
adc
loopne
mov
mov
lock
popl
inc
aad
pop
add
cwtl
mov
in
push
imul
test
adc
test
fwait
rorb
test
and
push
arpl
add
icebp
gs
cwtl
mov
das
rorl
add
ja
jle
ja
aas
pop
incl
inc
xor
adc
sbb
add
add
add
and
add
or
add
pop
push
push
jne
incl
inc
mov
sbb
or
add
and
dec
adc
and
adc
test
sub
mov
jae
jae
cmp
adc
push
dec
dec
iret
mov
dec
iret
jb
repnz
lahf
sti
jge
aaa
xor
cmp
std
fsubrp
out
jmp
fcoms
nop
or
pop
cwtl
cld
xchg
jp
sub
mov
jp
sbb
bound
and
addr16
sbb
or
jno
push
mov
jp
push
xor
xchg
loope
pop
addr16
mov
mov
outsb
cmp
fildll
lock
test
lret
or
in
mov
pop
iret
add
nop
cmc
and
popf
mov
jnp
out
popa
in
sbb
inc
dec
jmp
in
in
and
ja
xchg
lods
fsubrl
aas
jle
mov
fstps
xchg
push
bound
adc
push
push
lret
sbb
movsb
std
aam
cli
push
sub
subl
jns
test
shl
pop
pop
xorb
inc
dec
sub
data16
push
push
orb
adc
xchg
mov
jl
mov
ficompl
mov
mov
inc
jnp
loop
xor
insb
pop
jns
movsb
mov
mov
out
push
mov
xor
dec
lds
adc
cmpsl
mov
inc
pop
jnp
cmp
mov
jb
jecxz
sahf
xchg
or
lret
jnp
bts
outsl
ss
inc
xchg
insb
lahf
add
add
sbb
mov
popf
int3
data16
dec
inc
lods
xor
cmp
lods
cmc
pop
push
sbb
xchg
fnstsw
adc
mov
std
clc
stos
daa
xor
out
roll
ja
sbb
mov
rcrb
xor
push
faddp
and
mov
aam
xchg
arpl
cs
mov
pop
mov
out
xchg
push
inc
jge
insl
loope
xchg
sbb
call
aaa
lods
mov
sub
sub
mov
dec
popa
cmp
cmp
rcrl
xlat
rcr
imul
clc
outsb
jecxz
add
je
imull
jnp
jno
adc
mov
inc
inc
iret
imul
imul
test
call
xor
imul
cmp
xor
lahf
sub
clc
or
cmp
add
mov
sti
cmp
jae
icebp
pop
rolb
push
pusha
and
pusha
orl
and
popf
jns
inc
mov
add
sub
ja
inc
and
andl
mov
fwait
mov
xchg
xorl
pusha
mov
add
js
add
addl
jecxz
cwtl
xor
cwtl
jo
cmpsb
dec
adc
testb
adc
adc
shlb
cmp
adc
mov
mov
dec
mov
add
and
push
add
mov
add
outsl
adc
jmp
add
fsubl
cmpb
cmp
in
adc
sbb
pop
push
out
cwtl
enter
bound
sub
or
test
pop
adc
sub
testl
cmp
mov
mov
fsubrl
cmp
mov
mov
fsubrl
cmp
mov
mov
fsubrl
cmp
mov
mov
fsubrl
cmp
mov
mov
fsubrl
cmp
mov
mov
fsubrl
cmp
mov
mov
fcoml
enter
outsb
mov
repz
loope
add
out
mov
and
dec
xchg
and
sub
inc
les
sbb
push
dec
sub
push
aam
or
mov
xchg
int
and
add
and
jne
or
mov
adc
and
ljmp
cmc
daa
pushf
adc
mov
pushf
cmovl
mov
mov
nop
arpl
ja
lds
mov
and
out
mov
jo
cmpsb
aaa
jnp
imul
inc
adc
add
push
inc
test
xchg
pop
loope
pusha
sub
mov
es
jp
mov
insb
inc
mov
out
cmp
cmp
mov
gs
mov
sbb
lret
in
sub
dec
cltd
aas
rorb
lds
ds
mov
sub
sbb
addr16
jo
notl
inc
or
loope
jb
jnp
push
into
xor
xchg
ljmp
outsb
xchg
je
push
pop
mov
sbb
sbb
cld
mov
mov
xchg
and
roll
mov
loope
inc
mov
loope
adc
dec
cmp
test
adc
or
and
add
xchg
add
out
xchg
out
fstp
nop
add
clc
sbb
xchg
xchg
test
and
nop
loope
cltd
pop
adc
insb
xor
pop
iret
dec
lods
adc
aad
push
adc
repz
mov
shlb
mov
cli
lea
aad
mov
filds
cld
inc
repz
mov
mov
call
das
and
xchg
inc
add
jo
js
lds
sub
inc
mov
lods
jecxz
push
xor
xchg
lock
pop
mov
or
adc
popa
mov
testb
out
insl
loop
imul
cld
cmp
sub
or
xor
cmp
sti
dec
add
push
fidivs
iret
repz
aas
daa
popf
fadds
mov
mov
mov
adc
imul
pop
jb
es
pop
sbb
inc
mov
add
ret
scas
xor
stos
cmp
adc
mov
mov
pop
bound
mov
out
jnp
mov
and
mov
lcall
mov
fldt
shll
cmp
enter
ds
subb
adc
add
jg
jl
cmp
inc
es
or
jp
mov
out
fstpt
out
je
outsl
fwait
and
into
les
xchg
mov
rolb
jle
add
cmpsl
mov
xor
aas
popf
and
fisttpll
cmp
jns
fs
sbb
pop
call
test
mov
push
xchg
dec
repnz
mov
mov
mov
pop
out
test
sti
icebp
sbb
add
sar
mov
sahf
aam
arpl
lds
and
pop
imul
shll
pop
faddp
addr16
mov
jecxz
ret
and
imul
jbe
mov
mov
inc
aas
jnp
or
into
xchg
pop
xor
dec
cmpsl
mov
fdivs
inc
imul
es
scas
out
movb
jp
inc
mov
xchg
xchg
cmc
xor
push
shll
push
add
ss
cmp
addr16
into
jecxz
push
push
add
fstpl
rcr
sub
jle
inc
xchg
and
fdivrp
mov
push
sbb
loope
sbb
jnp
dec
jnp
daa
jp
imul
repz
das
adc
in
lret
sub
jnp
inc
xor
test
icebp
xor
mov
sub
xor
adc
sub
xchg
pop
pop
xchg
lcall
jl
inc
stc
mov
inc
scas
mov
in
mov
rep
xorb
lahf
sub
cmp
jecxz
push
cmp
xchg
mov
jbe
lds
sbb
outsl
dec
shr
cs
dec
gs
hlt
stc
sub
adc
pop
outsl
loopne
jbe
sub
pop
loop
adc
out
scas
xlat
repz
shll
cmp
das
cmc
outsb
add
test
in
dec
push
dec
out
outsl
test
lahf
idiv
inc
mov
inc
mull
lret
je
inc
xlat
hlt
add
cs
mov
popa
pop
push
arpl
xchg
adc
int
cli
push
rol
push
cmp
paddw
push
jb
rcll
and
call
fsubs
icebp
pop
rol
fnsave
jmp
adc
out
sbb
fcoml
in
dec
fistl
pop
dec
icebp
sti
push
shr
jl
scas
mov
in
movsl
jle
mov
pop
leave
mov
mov
adc
mov
mov
jmp
outsl
scas
xchg
xor
cmp
iret
push
jne
push
mov
push
pop
cmp
and
cs
add
pop
mov
loope
jo
sbb
fcoms
jo
lods
inc
lret
xchg
repz
mov
pop
pop
mov
sub
xor
pop
jg
or
popa
out
imul
imul
add
jo
fidivrl
repz
jns
je
cmc
xlat
fwait
mov
ja
xor
fists
xchg
mov
add
xor
pushl
idivl
lods
loop
ret
movsl
xchg
movsl
repz
push
out
push
push
xor
adc
sub
mov
jae
inc
cwtl
xor
xchg
pop
push
test
and
ret
repnz
ds
addr16
arpl
mov
call
pop
xchg
xor
pushf
ss
mov
ss
js
mov
or
mov
insl
movsl
mov
icebp
jo
jle
push
pushf
test
mov
ret
es
lahf
sti
pop
mov
js
add
fstpl
hlt
push
sub
mov
pop
sbb
mov
fcoms
aam
sub
call
imul
je
adcl
mov
gs
adc
orl
je
icebp
jns
jno
push
sub
out
aaa
adc
or
or
fcmovne
call
push
cli
sub
pop
add
stos
push
xchg
jns
jmp
outsb
cmp
mov
or
lcall
mov
mov
cld
aas
out
lock
mov
scas
mov
arpl
push
dec
aad
data16
cmpsb
lds
pushl
flds
clc
dec
adc
push
enter
mov
jecxz
pop
mov
mov
jecxz
stos
sub
sbb
push
sbb
mov
repz
rclb
dec
xor
cld
sub
xor
sub
mov
hlt
jns
cmp
or
iret
add
mov
push
xor
pop
cld
repz
lea
inc
test
cmc
loopne
xorb
dec
outsb
fldl
jmp
insb
lahf
leave
nop
push
add
or
bound
sub
jg
inc
sbb
rcll
jns
jno
int3
arpl
and
add
insl
ljmp
sti
test
mov
fsubp
xchg
or
das
gs
add
sti
in
fsubrs
adc
pop
xchg
push
mov
stos
cmp
push
xlat
mov
loopne
pop
inc
xor
adc
push
adc
add
add
add
add
jecxz
pop
add
aad
fstp
or
mov
dec
inc
mov
xor
and
xor
push
mov
mov
dec
fisubl
jl
xchg
mov
cli
mov
sbb
push
shrl
test
clc
mov
xor
mov
lcall
cmpsb
pop
jg
gs
pushf
cmp
int3
cmp
pushf
cltd
mov
or
mov
ret
add
clc
pop
xchg
xchg
sub
sub
jae
popf
lds
lds
add
mov
mov
movsl
test
push
jo
add
sub
icebp
jb
pop
pop
mov
cmp
mov
jle
mov
fwait
in
pop
fstl
test
test
push
sub
outsl
test
pop
push
mov
sub
push
lahf
xchg
mov
xchg
xchg
push
push
or
je
mov
or
outsb
xor
push
pop
pop
mov
jge
pop
mov
out
divl
mov
jbe
push
cmpb
cs
cmp
addr16
jge
rol
add
in
pop
or
pop
mov
ljmp
dec
mov
push
xchg
pop
out
jl
lods
fadds
cwtl
pop
jae
xor
gs
cli
xor
push
push
xor
cmp
sbb
rolb
je
in
and
bound
pop
sbb
mov
js
jae
or
mov
repnz
pop
pop
sbb
xlat
aas
dec
lock
cmpsb
adc
cmp
jnp
mov
cmp
mov
xchg
inc
inc
adc
pop
sbb
xchg
pop
ret
sub
push
shlb
inc
jae
lret
stos
test
inc
cmp
pushl
mov
aas
and
into
rolb
in
inc
jb
pop
cmp
fstl
loopne
push
mull
jl
jmp
mov
in
sub
xor
sub
sti
mov
add
lods
push
adc
lds
dec
xchg
dec
mov
ljmp
pop
aaa
popa
jo
scas
inc
jmp
dec
aaa
or
rcrb
push
data16
lret
sub
xchg
dec
add
and
xchg
xchg
xchg
stos
bound
sbb
adc
lahf
test
jnp
pop
add
xchg
pop
outsl
mov
shl
cli
or
jae
lea
sbb
dec
add
inc
jo
ror
popf
loopne
movsl
xor
pop
pop
pop
gs
inc
mov
mov
push
imul
mov
xchg
pop
adc
hlt
inc
test
insl
pop
push
call
daa
push
push
jbe
xor
mov
ret
mov
test
jle
lcall
int
in
ret
sbb
adc
mov
push
movsb
out
cmpsb
and
rcl
dec
mov
hlt
adc
and
sub
jp
dec
mov
rclb
mov
pushfw
push
mov
cmpsl
outsl
and
adc
icebp
jg
rcrl
lcall
xor
out
cmp
in
mov
scas
cli
in
cmp
lock
inc
mov
daa
jge
jmp
rolb
and
dec
push
pop
push
mov
push
dec
test
lds
pop
pusha
or
int3
sub
sub
add
push
pop
cld
fnsave
fists
mov
jle
lods
outsl
xchg
push
mov
mov
dec
and
insb
adc
add
push
lahf
nop
sbbl
lods
sbb
scas
das
les
rcl
test
mov
or
mov
jno
adc
mov
fldl
addl
pop
mov
cld
sub
pop
test
imul
push
sub
xor
adc
ret
mov
mov
jg
dec
mov
adc
push
xor
pop
sti
adc
lock
popa
or
sbb
mov
mov
scas
mov
mov
mov
inc
out
add
gs
xchg
cmp
stos
sub
or
sbb
in
mov
and
out
arpl
and
je
xchg
or
mov
adc
daa
insb
cmpsb
push
add
xchg
jns
mov
test
and
xor
aas
push
ljmp
enter
aaa
hlt
stc
cmp
cltd
in
sbb
xchg
push
xor
xor
fnstcw
ret
dec
xor
mov
sti
fmull
test
inc
ficoms
test
xor
test
enter
fcompl
cmp
call
cmp
add
test
fs
adc
jp
jb
insl
into
sub
inc
inc
loope
adc
ret
xor
jae
aaa
lods
sub
inc
pop
push
aaa
loope
dec
fwait
inc
adc
sahf
cs
inc
and
movsl
cltd
xlat
clc
dec
lret
inc
in
adc
xor
pop
mov
xchg
rcl
enter
repnz
loop
mov
int3
jmp
movsl
xor
stos
sti
popa
mov
mov
int
scas
adc
lds
jne
push
pop
jno
mov
clc
xchg
insl
mov
roll
jg
ret
ja
jne
mov
add
cmc
pop
and
cli
subb
add
cmpl
jns
or
in
pop
mov
sti
lds
shlb
mov
jb
nop
cmp
add
sub
add
ss
mov
mov
sarl
ror
lret
dec
aam
push
cwtl
test
pop
mov
decb
in
inc
cld
das
scas
sti
sbb
pop
or
xor
fwait
lock
lds
cmp
push
pop
les
icebp
mov
inc
mov
mov
sub
cmp
adc
loop
adc
std
sub
mov
cli
mov
mov
cmpsb
xchg
pop
cmpsb
or
jbe
xorb
adc
pushf
out
mov
data16
int
cmpsb
les
xor
loop
mov
and
fsubr
mov
test
sub
and
fisubl
mov
sti
pop
pushf
mov
xor
jbe
lea
xchg
mov
ret
ror
push
aaa
xor
into
pop
out
adc
lahf
lahf
rcrb
shrl
ljmp
icebp
icebp
pushf
pop
pop
push
cmc
and
loopne
cld
push
mov
fildll
adc
inc
sbb
add
sar
loope
sbbb
daa
je
push
icebp
add
loope
push
subl
rorl
push
int3
ja
loope
lret
xlat
jl
outsl
dec
push
iret
xor
lods
outsb
popf
adc
cmp
add
stos
inc
xchg
cltd
push
movsb
dec
orl
and
fld
push
lds
outsl
xchg
roll
stos
andl
xchg
pop
imul
mov
test
imul
xor
call
push
ss
das
or
and
or
xlat
sbb
sub
mov
cmc
mov
outsl
lods
out
push
xchg
add
sbb
aam
mov
std
not
xchg
outsl
inc
pop
shll
insb
cmpsl
insl
inc
cmp
xor
imul
mov
sub
add
scas
sarl
add
call
cwtl
aaa
addr16
mov
cmc
add
roll
or
stos
lret
sbb
jo
or
or
fadd
aad
outsl
xchg
inc
in
lock
add
aad
cmp
mov
icebp
jbe
sahf
dec
in
xchg
movsb
push
xor
fiaddl
ja
sub
xor
sbb
out
jo
push
lret
push
or
enter
cmpsl
dec
rclb
add
out
ret
sub
adc
adc
mov
mov
xchg
fildl
pop
faddp
lds
sbb
dec
adc
pop
or
push
inc
lret
cmp
push
loop
shlb
mov
sbb
mov
jbe
and
lock
inc
rcrb
and
cmp
addl
mov
fmull
sub
cwtl
iret
pusha
ds
sbb
and
adc
mov
leave
fiaddl
popa
pop
dec
testb
cmc
inc
mov
js
ret
jecxz
push
in
iret
inc
mov
pop
scas
push
jmp
xchg
sahf
jle
cmpsl
stos
sahf
pop
rcl
dec
cmp
aaa
movsb
in
jp
pop
dec
pop
cmc
xor
dec
psubsw
sahf
out
xlat
push
mov
mov
hlt
jne
sub
pop
jp
pop
cmp
aam
mov
jne
cli
arpl
cmc
xor
dec
ja
jmp
cmpsl
mov
sbb
pop
dec
aaa
jmp
cmp
xchg
idivl
cmpsb
dec
mov
xchg
stos
cmpsb
bound
shlb
sbb
jecxz
inc
ficomps
lock
mov
aad
and
inc
pop
inc
into
push
popa
xchg
mov
push
dec
push
gs
aad
mov
mov
clc
clc
jmp
and
add
test
mov
sub
mov
out
sbb
jns
jl
add
xchg
xchg
dec
sbb
ficoms
push
pop
inc
jmp
and
pop
pop
jecxz
pop
mov
jno
int3
adc
dec
xchg
push
or
lods
mov
pop
mov
xchg
andb
xorl
xchg
popa
insl
in
stos
bound
push
push
test
aaa
and
fimuls
pop
out
xor
mov
lret
xor
dec
int3
arpl
mov
mov
lret
dec
shlb
movsb
or
test
jmp
dec
loop
xor
adc
fs
xchg
sub
test
pusha
sbb
ss
or
xchg
push
mov
mov
sbb
inc
xor
push
xor
movsl
mov
jmp
sbb
int3
cwtl
mov
jmp
lret
repz
mov
sbb
shl
aam
test
mov
pop
inc
mov
aam
nop
incl
sub
xchg
fwait
mov
faddl
popf
shll
dec
cmpsb
mov
inc
aas
mov
bound
mov
xchg
sbb
push
jae
out
jae
lods
dec
mov
sub
and
lods
rorl
fwait
aaa
jge
inc
andl
jp
mov
mov
ss
sahf
mov
out
lret
pop
xchg
cmc
lea
negl
mov
mov
daa
call
push
adc
xlat
pop
mov
es
pop
int
pop
std
jo
mov
negb
add
pop
xchg
invd
adc
adc
inc
push
mov
sbb
xor
outsb
in
subl
into
jo
paddd
push
in
cmp
rorl
int
mov
ds
jo
sub
cwtl
fldcw
stos
mov
gs
push
rorl
pop
in
inc
and
mov
push
inc
test
sbbl
jae
outsl
jp
jb
mov
adc
mov
adc
or
pop
push
std
pop
mov
mov
outsb
xor
xor
pop
sbb
imul
sbb
mov
jl
cmp
mov
xchg
test
in
mov
sar
xor
and
stos
push
mov
xor
lds
push
popf
jb
inc
sbb
cli
lods
inc
mov
adc
and
aad
js
fcmovnu
sarb
nop
mov
rcrb
pop
jg
shl
sub
mov
pop
lea
add
cmp
nop
mov
sahf
xchg
loop
push
movsl
fsubrl
push
xchg
lea
jne
jno
adc
loope
xor
xor
fs
lea
scas
pop
mov
repz
jge
sti
iret
mov
stc
dec
fwait
lcall
call
lea
pusha
jbe
das
movsl
iret
cmp
dec
fstp
iret
cltd
daa
es
jge
in
jle
dec
jbe
pop
xchg
aas
jmp
loopne
pop
dec
dec
sbb
inc
ffree
loope
and
orb
leave
pop
outsb
or
out
dec
lods
fistpll
xchg
popa
test
adc
cli
sbbl
es
sub
mov
mov
jge
push
inc
es
stc
jl
in
mov
imul
cmc
pop
lea
adc
inc
lahf
xchg
jge
dec
enter
addr16
test
cltd
sbb
pop
icebp
sti
imul
ret
or
mov
xchg
jge
pop
dec
mov
mov
cmp
lods
cmpsb
sub
lret
sahf
sub
imul
ret
pusha
out
sbb
adc
call
imul
cmpsb
add
pop
pop
xchg
cmp
movsb
lods
stos
stc
jbe
test
insb
xor
shlb
or
mov
jle
xchg
mov
xchg
das
push
inc
mov
stc
sub
xor
fcompl
dec
adc
repz
xchg
sysenter
add
add
lods
test
pushf
cltd
xchg
sbb
jns
into
loope
cmpsl
xor
loop
pop
lods
outsl
cld
mov
mov
lcall
jb
xchg
push
mov
xor
cmpsl
pop
or
inc
sub
rclb
stos
arpl
ss
add
lcall
cwtl
push
or
lods
push
sub
repnz
fmuls
xor
mov
movsb
sahf
cwtl
jmp
iret
or
std
jb
inc
jns
inc
aam
inc
inc
mov
mov
test
dec
jge
out
or
push
add
into
sbb
jmp
add
or
in
add
push
xchg
push
and
and
je
aas
inc
sub
mov
xchg
adc
cld
aad
jmp
outsb
add
mov
push
xchg
mov
int3
movsb
adc
xor
mov
lcall
xchg
pop
outsb
xchg
mov
aam
pop
lea
or
iret
shl
jecxz
pop
loop
xlat
in
fwait
cli
sub
ret
mov
or
lret
mov
cmp
gs
iret
xchg
popf
dec
cmp
push
mov
pop
mov
adc
scas
cmc
frstor
xchg
ss
imul
sub
sbb
mov
dec
inc
xchg
lds
or
scas
dec
push
out
fwait
out
mov
out
shlb
fnop
sbb
jns
inc
jae
xor
cmc
insl
sub
mov
outsb
xor
cmp
or
add
js
fst
pushf
daa
pop
dec
test
outsl
jno
shl
outsb
pop
jo
das
push
scas
negl
lods
repz
insl
movsl
nop
sub
popf
mov
loope
mov
gs
jge
xchg
imul
add
push
cmpsl
pop
cld
xchg
xchg
jecxz
inc
adc
into
sub
lahf
xchg
cld
add
shrb
or
jb
test
push
dec
in
xchg
dec
jecxz
movsb
es
sbb
dec
in
rcll
popf
xchg
outsb
jne
mov
cs
xchg
push
cmc
add
mov
mov
std
sub
aam
mov
stos
xor
xor
inc
dec
inc
cwtl
push
lahf
mov
and
loopne
not
insb
mov
xor
movsb
imul
dec
popa
or
sbb
and
add
inc
sub
movsb
push
or
fs
movsb
out
daa
mov
xchg
xchg
fldenvs
pop
pop
testb
pop
xlat
mov
scas
iret
jmp
lods
insb
int3
in
daa
cwtl
lcall
jecxz
dec
test
xlat
clc
dec
lahf
xchg
ljmp
fnstcw
mov
pop
imul
adc
mov
arpl
mov
daa
push
nop
pop
mov
mov
into
pop
in
mov
dec
iret
mov
jae
xchg
pop
leave
loope
xor
repz
xchg
inc
adc
xchg
cs
mov
or
push
dec
mov
jno
loope
int
sbb
pop
jne
jno
fsub
pusha
icebp
pop
xchg
cs
sub
mov
jo
cmpsl
popa
fldenv
movsb
iret
in
call
ror
fdivrl
ret
cmp
dec
pop
popf
jmp
aam
dec
inc
decl
add
pop
xor
add
sub
dec
out
xchg
shll
fs
sarb
ds
ret
mov
out
mov
test
nop
imul
jbe
and
mov
dec
imul
in
shlb
hlt
and
pop
and
mov
cwtl
gs
ja
fsubr
mov
xlat
pop
mov
lods
icebp
repz
movsl
lret
lahf
xor
cmp
adc
cmc
cwtl
pop
mov
sub
imul
dec
lods
iret
pop
dec
xchg
cmpsl
inc
and
push
arpl
jnp
rol
shrb
ror
cli
ret
std
mov
mov
cmp
cli
adc
cli
dec
mov
jmp
cmp
cmp
sbb
sbb
or
dec
shll
adc
add
and
add
sbb
lret
in
pop
push
xor
test
cwtl
cmp
data16
and
and
jmp
in
adc
icebp
pop
mov
aaa
inc
xor
clc
rclb
popf
out
shrb
aaa
out
ret
jo
adc
repz
incb
imul
push
mov
je
mov
hlt
xlat
xorl
lods
nop
xlat
clc
fimuls
insl
or
loope
sbb
push
scas
xchg
dec
jae
push
xor
clc
jecxz
in
pop
fisttpl
sbb
mov
sbb
lret
fbld
add
push
es
xorb
push
cwtl
mov
aas
cld
and
rclb
aad
mov
or
sbb
inc
adc
insl
mov
jge
neg
jp
mov
jl
enter
sub
mov
rcrb
out
aam
jnp
jne
jno
fwait
ret
pop
and
cmpsl
dec
jle
push
hlt
dec
fldenv
aam
inc
jl
sub
insl
jo
pop
adc
sbb
cmp
shl
sbb
js
mov
lock
xchg
jns
xchg
sub
inc
or
mov
pop
aas
rcll
mov
push
fwait
ror
or
leave
add
pop
cmp
sti
inc
jbe
pushf
push
rcrl
sahf
push
jecxz
jbe
sbb
inc
stos
cmp
jo
sbb
sub
scas
push
jp
aad
xchg
xchg
mov
jae
aas
lods
testl
mov
cmp
xchg
push
stc
mov
lock
stos
adc
xor
les
or
js
addr16
addr16
daa
fdivl
jns
push
mov
mov
push
lock
mov
xlat
scas
fldcw
js
xchg
add
cmp
ret
mov
lods
outsl
cwtl
in
in
cwtl
fiaddl
sbb
jbe
shll
xchg
dec
add
cmpsb
jge
loope
jne
cmp
fcoms
sub
ret
xchg
lcall
mov
push
lcall
push
jb
aad
aam
mov
cltd
pop
jmp
and
aaa
pop
enter
mov
sub
ljmp
test
adc
cmp
pushf
scas
sbb
jbe
push
lods
les
jg
fistpll
pop
aas
imul
adc
rolb
pop
mov
repnz
arpl
sbb
hlt
mov
jae
in
into
mov
cmp
jp
push
xor
sub
std
mov
inc
ja
dec
cmp
hlt
das
out
mov
mov
adc
inc
sbb
dec
xor
or
or
jge
jle
fwait
iret
mov
in
fsubl
xor
bound
scas
jo
nop
push
into
sarb
popf
cmpsb
sbb
shrb
push
xchg
push
pusha
jge
jmp
neg
sbb
fsubrl
sub
pop
xor
jg
pop
aaa
mov
xchg
pop
mov
or
jle
mov
movsl
stos
shl
insb
inc
lcall
test
pop
in
ror
xchg
push
adc
int3
lcall
or
bound
std
sbb
sub
clc
fwait
shll
xor
inc
fucomi
jb
sbb
add
incl
cmc
push
jge
sbb
loope
mov
ja
push
sub
pop
xchg
pop
add
rcr
inc
xor
repz
jne
daa
leave
pop
fwait
sarl
scas
stc
inc
xor
lods
xchg
leave
cli
push
fisubrl
xchg
mov
inc
imul
sbb
push
mov
mov
cmpl
sti
out
fildl
or
addr16
lock
dec
dec
inc
dec
repnz
jmp
fwait
push
fdivrs
idivl
xchg
aam
inc
repz
not
fistl
pushf
pop
and
fwait
stos
push
iret
mov
ss
cwtl
jnp
aas
push
cmc
das
cmp
cld
cwtl
stos
lods
fldt
push
or
daa
fbld
jg
push
sbb
inc
inc
adc
mov
and
fs
and
out
jnp
pushf
and
xchg
mov
sbb
repnz
mov
push
sahf
jne
or
push
rcrb
je
mov
jmp
pushw
lahf
add
jnp
jns
mov
and
repz
jnp
jns
sti
inc
clc
in
or
cvtps2pd
in
out
fiaddl
in
and
xchg
jp
sub
push
add
dec
insl
inc
or
pop
dec
shll
sub
icebp
nop
sbb
movsb
ss
roll
xchg
mov
pop
pop
jl
and
cltd
xlat
fisttpl
add
mov
push
mov
fists
cmovb
mov
and
push
inc
push
inc
in
lahf
mov
jb
mov
cli
adc
out
nop
mov
pushf
and
xlat
jnp
ds
mov
xor
imul
adc
add
mov
push
lahf
push
push
lcall
and
xchg
mov
ja
pop
jae
mov
xchg
fwait
lcall
pmaxub
pop
sti
adc
insl
das
pop
push
mov
inc
data16
and
es
xchg
jne
jo
cltd
outsl
cmc
xchg
pop
push
insl
pop
pusha
push
and
pop
mov
add
sahf
mov
popl
cmpsb
sub
or
mov
jmp
jg
dec
outsb
mov
xor
pop
jg
ficoml
cmovle
push
gs
jne
iret
mov
les
stos
inc
xchg
cmp
sbb
rcrl
dec
adc
rorl
push
mov
cmp
loope
test
mov
mov
nop
repz
pop
call
xchg
lds
lret
mov
imul
repnz
stos
mov
xor
dec
mov
clc
xchg
mov
add
sbb
in
int
mov
inc
push
cld
outsb
das
adc
lret
jo
push
leave
xchg
lock
push
dec
daa
outsb
xor
jp
filds
arpl
fwait
out
lods
mov
stos
add
scas
and
and
inc
push
lcall
cmp
decb
pop
xlat
notb
xchg
call
ficomps
je
cmp
fs
cmpsb
mov
test
data16
mov
gs
daa
jbe,pn
fidivs
aad
loope
es
push
push
adc
pop
nop
xor
nop
jnp
or
cmp
cmpl
and
aad
xchg
mov
mov
daa
pop
test
push
fwait
pop
dec
sub
in
fadds
sub
ffreep
outsl
pop
sarl
and
notb
pop
pop
repz
add
cmp
xchg
cltd
sub
add
push
and
imul
and
jb
inc
jnp
push
cmpl
movsl
and
adc
testl
xor
jb
test
adc
lods
inc
dec
sbb
out
jmp
es
pop
pushl
test
jae
cmc
icebp
fmuls
roll
sub
gs
mov
xchg
hlt
jle
add
inc
inc
or
add
imul
pop
imul
inc
cmp
and
mov
out
sbb
inc
sbb
mov
mov
std
lcall
xchg
das
mov
jmp
mov
inc
pop
adc
pop
cmc
sbb
add
clc
fnsetpm(287
stos
into
mov
mov
int
push
lock
insb
mov
mov
test
sub
cmp
sarl
mov
and
fsubp
push
aam
push
aam
xor
je
jns
pop
inc
enter
cmp
sub
sub
inc
mov
shlb
inc
in
mov
adc
imul
mov
mov
mov
add
or
mov
adc
push
movntq
js
mov
loopne
or
cli
inc
cmp
lret
xchg
cmp
pop
out
cmp
jae
mov
push
imul
mov
inc
add
xchg
add
mov
mov
rolb
test
out
adc
mov
lds
fmull
jnp
jge
mov
aam
shll
jl
lret
aaa
daa
push
push
sbb
cmp
out
mov
jns
mov
lret
xor
cmp
xchg
test
jnp
cmc
stc
insl
jb
cltd
aaa
mov
push
jae
fdivrs
cmp
mov
xchg
inc
lahf
mov
ljmp
aaa
pop
faddl
incl
mov
and
inc
lcall
push
sbb
xor
cmp
pop
lahf
pop
repnz
aam
std
aam
pusha
inc
ljmp
shr
dec
push
adc
sub
sbb
lret
pop
repz
jg
stos
das
or
fwait
and
outsl
les
pushf
jl
mov
xchg
dec
loop
push
ss
xchg
popa
sbb
add
repnz
ret
lods
shrl
clc
mov
in
mov
scas
je
lahf
imul
xchg
lods
ficoms
or
jmp
mov
outsb
insb
mov
test
mov
adc
insl
cmp
cld
mov
jbe
cmp
cmp
cmp
push
ret
in
inc
in
movsb
sbb
push
sub
fs
sbb
dec
adc
shr
and
jo
cmp
mov
and
cmp
push
loope
cmp
cmp
in
cmp
mov
mov
mov
outsl
pop
mov
mov
cmpsl
test
stos
pushf
add
cwtl
lea
cltd
xchg
pop
outsl
mov
mov
jbe
fs
adc
or
sbb
add
bound
push
dec
sbb
xor
popa
add
lds
inc
aad
sub
mov
into
dec
movsl
and
ret
sub
ror
mov
aas
cmp
popf
dec
and
push
push
xchg
dec
mov
lcall
in
out
lret
push
fwait
cmp
sbb
ss
mov
mov
push
clc
and
adc
std
sbb
insb
aaa
fwait
push
adc
push
xchg
mov
push
fisubrs
fildl
mov
cmp
in
xchg
jp
or
addr16
ljmp
lret
cld
add
sahf
fcompl
cld
gs
int
pop
mov
imul
sbb
repnz
fsub
sbb
push
test
in
cmp
push
inc
push
lds
xchg
aam
jp
mov
das
xchg
mov
in
push
aaa
loope
sarl
push
aas
cs
out
add
test
ret
rcrb
rcrl
fldl
popf
inc
in
and
xchg
repnz
adc
in
mov
push
xchg
repnz
daa
pop
and
mov
movsl
sub
inc
mov
test
stos
stc
mov
cmp
jge
outsb
jge
cld
int3
sbbl
in
loopne
jae
inc
lret
dec
aad
push
stos
iret
insl
xchg
jb
decb
xor
inc
cmp
jmp
imul
jl
cmp
or
sub
push
xchg
hlt
loopne
repz
or
bound
into
or
int3
dec
pushf
add
xor
cmp
mov
insl
mov
dec
mov
loope
cmp
pop
mov
inc
out
mov
add
xorb
mov
sub
adc
mov
jle
imul
repnz
popa
push
inc
cmp
ss
sahf
rorb
outsb
mov
xor
imul
push
mov
pop
out
sub
rcl
or
sbb
push
push
pop
pop
adc
sbb
jecxz
lea
jle
cld
inc
loopne
rorl
lcall
push
mov
lahf
pop
sub
lret
loopne
cmpb
hlt
mov
xchg
mov
jb
mov
mov
pop
inc
jp
mov
jg
dec
xchg
clc
sbb
dec
clc
mov
stc
push
sub
cmp
add
js
mov
das
test
cmp
ret
aaa
dec
dec
ljmp
mov
insb
sub
scas
mov
outsl
sub
or
mov
jmp
dec
sub
popf
cmc
sub
repz
call
fisttpl
add
movsl
or
xor
in
sbb
pop
mov
dec
mov
mov
outsl
aad
mov
sti
dec
arpl
repnz
cmc
mov
gs
push
ret
pop
xchg
xchg
pop
push
call
popa
jbe
lea
dec
daa
stos
dec
xor
rcll
xchg
adc
mov
sahf
sbbb
xchg
aas
test
cld
sbb
fmull
popa
addr16
mov
in
push
jl
ljmp
mov
aam
imul
jne
pop
test
mov
aad
jnp
movsl
inc
ja,pt
inc
push
cmpsl
pop
int
cmp
cs
insl
rorl
xchg
dec
lods
xchg
inc
sub
aad
lods
pop
xchg
or
rcl
cmpsb
and
dec
outsl
cmp
fimuls
jmp
and
fisttps
jns
sbb
les
ret
ljmp
aaa
cmp
push
int3
push
sbbl
call
out
mov
iret
pop
sbb
in
fidivrs
pushf
xchg
fwait
repnz
das
cmc
sti
loope
mov
lock
jge
fidivrl
sti
jecxz
fs
mov
fisttpll
ljmp
in
fwait
lock
aad
jecxz
dec
jmp
pop
outsb
jns
cmp
push
fdivr
imul
cli
adc
or
in
dec
fimull
sbb
fsubl
push
lock
cli
lahf
cmp
lahf
sbb
lods
mov
jg
sahf
subl
imul
sarb
cmpb
mov
xchg
in
mov
int3
pop
mov
sti
jno
outsl
mov
xor
in
loope
sti
div
out
ss
dec
mov
pop
cmp
notb
mov
pop
fildll
aam
cwtl
std
out
xlat
int3
mov
cs
sub
push
pop
stc
lahf
add
cmova
rep
fst
jo
jb
das
jl
dec
cltd
sar
arpl
lret
ret
sti
jle
lret
stc
je
aam
mov
sarb
popf
fwait
push
jecxz
popfw
idiv
cmp
out
test
stos
stos
mov
sti
icebp
jge
push
sbb
xor
call
pop
mov
lcall
or
xlat
outsl
ljmp
mov
pop
div
cmpsl
das
jg
mov
in
movsl
popf
xchg
mov
push
mov
repz
in
ja
test
movsb
jns
iret
clc
ret
pop
jle
out
cld
lret
repz
pop
pushf
xor
leave
pop
je
mov
rcr
mov
lret
leave
in
xlat
aas
sub
sbb
out
jg
push
and
pusha
in
ja
push
scas
pushf
jle
out
repnz
out
scas
jns
inc
aad
jg
pop
xor
mov
xor
inc
ds
negl
dec
jge
out
frstor
jnp
xchg
mov
add
sbb
mov
cltd
cltd
aam
sub
rcl
pop
push
imul
lret
subl
mov
daa
push
xor
imul
das
push
bound
sub
std
in
push
cwtl
in
arpl
jb
std
inc
inc
cmp
aam
push
mov
jg
mov
ja
or
ret
cmp
mov
xchg
add
lcall
mov
clc
jl
mov
das
inc
sbb
fstps
add
popl
inc
popf
dec
mov
pop
icebp
cmc
or
or
jne
loopne
mov
jg
mull
fisubrs
push
js
sti
mov
and
jg
dec
adc
sbb
lock
mov
sbbl
mov
mov
xchg
fcompl
pop
jecxz
lret
jg
jg,pn
mov
cmp
push
mov
lds
ret
ljmp
jno
sbb
jnp
push
gs
mov
push
cmpsb
xchg
sahf
or
popf
test
sahf
paddusb
and
jnp
insl
push
es
mov
aad
loop
jp
or
push
shlb
stos
dec
sahf
pop
stos
or
mov
outsl
repz
ret
mov
mov
push
mov
push
mov
dec
xor
loopne
jbe
add
cmpsl
xchg
xchg
fucomp
movsb
orb
mov
cwtl
push
insb
jae
or
popa
ljmp
mov
shll
ljmp
dec
push
es
sbb
test
in
test
movsl
frstor
sub
xor
jbe
inc
repnz
fs
jno
imul
inc
gs
fsubr
xor
and
leave
and
dec
lea
inc
ret
add
push
mov
in
pop
dec
lcall
scas
mov
cmp
imul
dec
mov
gs
bound
call
jb
sbb
xor
xor
jbe
jecxz
scas
iret
int3
add
xor
out
push
xor
xchg
cli
sahf
mov
scas
and
jge
mov
mov
xchg
sbb
je
sub
push
popf
je
sub
jnp
inc
shll
jle
pop
iret
ret
movsb
adc
insl
mov
repnz
or
push
mov
mov
dec
lss
outsb
frstor
xchg
fwait
mov
mov
les
aaa
mov
lock
enter
inc
cmp
je
test
scas
xor
jmp
mov
dec
repnz
lret
nop
push
dec
cmpsl
popa
subb
mov
fdivr
and
xchg
lcall
push
pop
inc
push
stc
push
mov
cmc
sub
stos
mov
aaa
push
or
out
sub
fwait
insl
jge
xchg
insl
xchg
pop
ljmp
push
mov
in
mov
lea
cmp
or
push
dec
mov
or
cmpsb
rorl
call
andl
pop
adc
cmp
adc
pop
test
add
aaa
call
mov
addr16
xchg
loop
fmuls
ret
loope
into
scas
xor
or
and
xor
dec
inc
lret
jbe
inc
mov
filds
idivb
popf
pop
fistpll
and
cmp
jns
lcall
in
jl
pause
dec
mov
ljmp
xchg
jo
mov
inc
push
lods
orl
mov
mov
out
shrl
fwait
xchg
jle
outsb
or
imul
lret
mov
xor
or
fildl
push
sbb
inc
mov
dec
jae
or
pushf
xchg
xor
in
add
push
jecxz
mov
pop
or
rcrb
jmp
cmp
arpl
arpl
cli
xchg
int
mov
mov
mov
mov
fimull
mov
fdivl
mov
mov
lret
xchg
adc
cmp
lret
imul
and
repz
pushf
or
jae
scas
cwtl
int
frstor
daa
das
mov
xchg
add
sti
mov
pushf
xor
sub
mov
mov
inc
adc
sbb
fisttpl
cs
pop
mov
jnp
xchg
sbb
andw
sbb
clc
lcall
push
xchg
cld
mov
mov
add
or
mov
in
inc
sub
les
cmpsl
dec
sbbl
cmp
mov
pop
inc
jnp
lods
push
ja
sbb
in
fdivl
aam
or
bound
xor
fdivl
xchg
ja
sub
jns
add
ret
pop
and
adc
or
js
pop
bound
mov
jae
aad
pop
leave
push
popf
in
pop
lods
out
mov
mov
iret
divb
test
in
push
jno
jb
dec
add
sub
aas
pop
lods
das
add
add
scas
push
out
pop
cmp
in
jbe
push
inc
pop
imul
push
pushf
add
jbe
mov
inc
pop
inc
popa
loopne
ss
mov
lcall
cmc
mov
imul
ret
std
pop
lea
pop
popf
xor
loopew
sbb
cltd
call
dec
ss
enter
xor
stc
std
rorb
das
ds
aad
sbb
dec
or
fstps
cmc
adc
push
enter
jnp
inc
dec
mov
sub
cwtl
mov
jo
stos
dec
adc
icebp
sbb
fsubrs
push
push
add
outsb
adc
in
cmp
push
outsb
stos
lds
inc
mov
and
fisttpll
cmp
int
sub
scas
add
dec
sbb
mov
stc
inc
pop
xchg
pop
jns
fnstsw
mov
sub
xchg
jb
sbb
jl
pop
lret
mov
push
fadd
insl
clc
in
scas
pop
test
pop
pop
sub
dec
stc
or
addr16
cmpl
and
and
out
push
mov
stos
pop
jo
lea
pop
rol
out
insb
xchg
sbb
or
cmp
movl
ds
jae
jp
mov
out
cmp
cmp
jp
xor
mov
int
pop
jmp
es
adc
lcall
mov
jns
shll
outsl
loope
dec
add
loope
adc
pop
cmc
and
daa
lcall
sarl
dec
rcr
outsl
rcpps
pand
mov
dec
iret
daa
mov
pop
movsb
faddl
stos
xor
jo
ss
dec
push
sub
mov
test
ljmp
pop
mov
xor
xchg
out
mov
fiadds
lock
add
rorb
scas
shrl
fisttpll
pop
lret
jl
int3
aam
push
mov
insb
cmp
cmp
rorl
xchg
in
sbb
out
mov
lcall
xor
pop
adc
scas
mov
sub
or
scas
or
cmp
in
pop
in
into
cwtl
fdivrs
rcrb
sub
js
popf
mov
fld
aad
adc
jle
jle
roll
mov
enter
ljmp
pop
ret
pop
push
rcrl
enter
cmp
lcall
stos
mov
sbbl
pushf
sar
jns
mov
nop
cwtl
mov
dec
xchg
hlt
mov
pop
add
pop
mov
lahf
loop
hlt
mov
shlb
sub
push
xchg
mov
push
lods
push
outsb
jmp
cmpsb
fs
mov
xchg
add
push
fs
stc
mov
stc
cmp
dec
sub
cld
mov
out
int
inc
dec
mov
cltd
idivl
test
aaa
insl
ja
out
out
neg
mov
mov
sbb
ja
outsl
out
push
mov
cmp
cmp
outsl
mov
popf
ljmp
insb
add
mov
in
dec
mov
test
mov
add
sbb
inc
loope
sbb
or
inc
xchg
mov
mov
rol
jmp
mov
ss
imul
sbb
jmp
adc
or
cmp
push
test
inc
sbb
push
xor
push
sub
jae
mov
js
cwtl
xor
push
hlt
stos
xchg
lcall
mov
add
and
ret
sti
push
add
popa
loope
adc
pushf
fbld
imul
stos
imul
push
leave
popa
adc
dec
fistl
inc
push
outsl
sbb
movsb
push
adc
inc
loope
mov
mov
sbb
and
cmp
push
pop
mov
dec
ljmp
out
imul
insb
push
mov
adc
xchg
sahf
cs
jne
stc
push
rcr
shll
jne
test
lea
and
loopne
xor
nop
push
in
fidivl
inc
mov
or
push
cmp
lret
sbb
clc
bnd
jmp
je
hlt
sub
xor
jnp
xchg
and
adc
cmp
sbb
or
outsl
xchg
push
test
pop
imul
sub
pop
ret
imul
jo
outsb
rcrb
shrb
mov
jnp
and
pop
testb
push
fwait
xor
mov
inc
sbb
lds
ss
sbb
pop
mov
push
outsl
lds
jge
mov
xchg
adc
out
je
fldcw
loop
mov
cmc
or
push
sub
js
idivb
andl
data16
or
jo
pop
idiv
mov
cmp
xchg
jbe
xchg
add
mov
movsl
jno
mov
addr16
cmpl
jp
aas
xchg
mov
sbb
cmpsb
lea
lret
out
ja
mov
arpl
mov
jecxz
inc
sbb
rcrb
out
push
scas
dec
jo
adc
divb
enter
push
cmpsl
cmp
jle
dec
dec
lret
loopne
xor
xchg
push
cmpsb
and
insb
sbb
push
jmp
mov
pop
dec
in
sti
inc
lea
mov
xor
sarb
ljmp
push
popf
adc
sarb
dec
push
push
pop
sub
es
mov
cld
pushf
xchg
movsb
jmp
test
inc
cmpsb
sarb
mulps
clc
stc
mov
adc
mov
subb
and
pop
into
call
shll
in
cmp
mov
lret
inc
inc
or
cld
pop
loop
stc
xor
jb
rorb
mov
pop
pop
js
js
jp
je
jnp
xchg
scas
int
mov
pop
mov
xchg
and
and
cmpsl
incb
mov
push
imul
loope
cmpl
je
add
repnz
xchg
imul
adc
xor
ds
pop
jp
cmpsb
mov
aam
shl
sti
dec
or
lret
xchg
push
cmpsb
adc
addr16
out
push
ljmp
bound
sub
aad
or
imul
push
cltd
pop
movsb
faddl
sbb
aam
loop
mov
loope
push
and
jle
testb
jb
and
pushf
add
in
jl
jl,pt
mov
add
push
andl
test
fwait
sub
mov
mov
cmp
jle
mov
dec
cmp
push
push
and
roll
clc
jbe
add
icebp
add
mov
stc
xor
pushf
adc
push
push
mov
fisubs
into
hlt
and
or
icebp
dec
cmpsb
and
or
imul
push
add
mov
push
popl
daa
fs
punpcklwd
in
cmp
mov
test
int
pop
sub
scas
out
in
icebp
loope
push
push
xor
lea
mov
dec
jae
out
adc
mov
or
jno
push
xlat
leave
or
xor
add
mov
and
leave
fisubs
dec
mov
jmp
test
cmpsb
sbb
jo
jge
pop
std
adc
xor
ret
xorb
aas
mov
pop
int3
sbb
in
cmpsl
sbb
lret
cld
mov
mov
inc
xlat
cli
sub
jmp
insb
xor
lcall
push
add
mov
mov
jge
jne
sbb
in
sbb
push
push
dec
lret
lret
cltd
mov
push
mov
and
out
sub
mov
pop
js
xchg
sbb
dec
lret
dec
cmpsb
sub
aas
repz
cli
add
arpl
in
ret
add
sub
test
inc
sub
mov
mov
loope
inc
insb
into
popa
fucom
jno
inc
fdivs
inc
out
in
je
cmpsb
les
add
cs
imulb
add
add
lret
or
xchg
push
sbb
cmc
test
outsl
xchg
mov
loop
dec
insb
push
inc
or
jbe
test
imul
data16
stc
aam
aam
movsl
lods
and
es
mull
inc
dec
xor
jg
imul
out
sbb
aam
iret
pop
mov
mov
cmp
push
mov
cmpsb
add
jae
jo
hlt
jle
call
inc
add
xor
in
mov
push
cmc
inc
pop
sub
dec
xchg
adc
lahf
adc
fistpl
sub
push
lea
add
inc
jecxz
sbb
xor
ja
mov
outsl
or
sbb
xchg
pushf
and
rorl
inc
dec
in
cmp
xchg
xlat
lods
dec
and
insb
push
ljmp
xor
hlt
pop
cmc
dec
push
scas
dec
jmp
jno
jp
jb
cmp
or
adc
sahf
stc
in
or
lea
stos
mov
repnz
jle
mov
jmp
mov
jne
xchg
mov
sbb
jae
xchg
sbb
xchg
jbe
es
cmp
mov
sti
addr16
adc
insl
popa
mov
jnp
popl
mov
jo
mov
push
mov
and
imul
add
mov
out
and
mov
sbb
subb
cmp
push
lods
cmp
sbb
pusha
out
push
jmp
or
cmp
rorb
jecxz
cltd
mov
test
xor
cmpsl
stc
jp
jae
lods
movsb
push
pop
in
jno
push
ss
dec
cmp
add
mov
fimull
cmp
es
xor
push
aam
out
scas
jle
out
xchg
or
sti
xchg
xchg
mov
or
xor
aad
or
clc
ds
dec
call
mov
das
sbb
pop
jmp
sub
ljmp
ret
lock
shrb
mov
mov
cld
cs
inc
ds
pop
in
mov
sbb
stos
pop
push
jnp
imul
pop
dec
dec
cli
sbb
mov
notb
aaa
push
push
test
pop
jnp
sub
cmp
out
rcl
add
cltd
cmpsl
cmp
int
iret
mov
sbb
sbb
ds
insl
or
fucomp
stos
pop
int3
cmp
fldl
dec
scas
xchg
mov
movq
in
popf
jp
dec
push
mov
das
cli
in
pop
jns
add
push
fcmovnb
or
xchg
mov
mov
cmp
push
mov
pop
xor
jle
dec
jmp
dec
xlat
or
push
and
or
cmp
fwait
loop
loop
sub
rcrl
outsb
mov
insl
loopne
ds
push
xchg
imul
push
sub
rolb
icebp
or
inc
cmc
movaps
aam
mov
iret
jg
xchg
xor
in
sub
out
mov
cmp
mul
jge
test
add
cmp
scas
int
call
cli
push
mov
sbb
mov
fisubrs
cmc
jmp
jle
inc
in
pushl
sub
push
bound
orb
aad
add
sbb
mov
jne
adc
push
fadd
cwtl
xchg
mov
sbb
xor
div
call
aaa
mov
add
adc
or
outsb
xor
fildll
inc
bound
push
push
mov
popf
push
out
inc
dec
stc
jp
cmovle
clc
repz
ss
fsubrl
and
push
cmc
test
lahf
fisubl
push
push
idiv
and
in
xchg
xchg
bt
imul
gs
iret
test
rcr
jno
roll
popf
push
rcrb
xor
dec
mov
mov
loop
sub
loopne
add
cmpsb
sarb
imul
mov
cmp
test
cwtl
cli
ss
lock
adc
jl
nop
gs
xchg
xchg
sub
out
sti
fxch
jne
jmp
pop
pop
push
adc
jns
jne
orl
xlat
in
xlat
ljmp
ljmp
movsl
add
out
push
dec
loopne
xchg
cli
jns
rcrb
jns
jg
cmpsl
ss
sar
test
into
fldl
or
cs
cmp
cmp
mov
loope
cld
pop
jmp
movsl
sahf
fwait
call
jnp
cli
pop
jne
lahf
xor
push
push
into
xor
push
in
push
scas
hlt
js
mov
jmp
fidivs
jb
shlb
jnp
jb
cmp
lret
leave
mov
incl
pop
pushf
pop
fdiv
std
out
ljmp
stc
or
in
xor
mov
scas
shlb
cmpsl
or
rcll
shlb
mov
xchg
sub
enter
xor
fidivrl
es
xchg
pusha
loope
aam
xor
jne
pop
sbb
addr16
pop
fstps
je
and
add
cmpsb
mov
push
sub
lret
mov
pop
cli
lret
mov
popf
jae
fstpt
nop
xor
add
add
cld
pop
xor
jge
xchg
rcll
fdivrs
or
enter
jb
mov
xorl
loopne
adc
jae
cld
xchg
lcall
xchg
mov
add
or
imul
sti
outsb
mov
or
repnz
mov
arpl
lcall
ret
cmp
push
outsb
sbb
cltd
xchg
cmc
mov
dec
lcall
mov
jno
push
jbe
or
mov
inc
cmp
jge
lds
movsl
cmpb
cmp
inc
rclb
ja
call
and
jecxz
pusha
out
movl
in
push
fistpll
fildl
cmp
or
mov
mov
callw
lahf
sbb
in
out
jp
subl
repnz
inc
sbb
sbb
mov
push
out
lahf
loop,pt
push
std
in
adc
mov
fldenv
decb
dec
mov
orl
sti
mov
sbb
or
ja
bound
cpuid
call
pop
inc
mov
xor
and
aam
jo
cmp
imul
in
cmp
cmpsl
xchg
jle
mov
jno
mov
pop
mov
add
std
ficompl
sbb
or
and
mov
ror
out
sub
cwtl
inc
xchg
jg
lahf
mov
std
mov
mov
xlat
js
jmp
repnz
iret
xchg
cmp
test
mov
arpl
lods
mov
test
mov
mov
sub
imul
jae,pt
insb
or
call
cmpsl
push
dec
pop
cmp
mov
fidivrl
sub
mov
cwtl
loopne
je
mov
mov
sbb
adc
mov
mov
aam
rolb
lahf
pop
jge
ds
subl
xchg
enter
cmp
jno
sbb
dec
pop
cmc
sti
pop
cmp
mov
lahf
sub
pop
push
insl
xchg
add
pushf
or
and
es
ljmp
out
imul
lret
mov
test
fstpl
jge
es
xchg
jge
pop
pop
and
push
cmp
sub
xchg
and
mov
and
and
scas
push
outsl
jo
xor
repz
test
xchg
mov
lock
xchg
xchg
mov
cli
std
and
cmp
addb
stos
cmp
fmulp
xchg
pop
dec
test
fsubs
mov
cmc
aad
cmpb
sarl
cwtl
sbb
cmpsl
pop
incb
aam
leave
mov
sbb
and
pusha
xchg
aad
mov
jnp
pop
ja
sbb
adc
cwtl
das
add
mov
adc
add
push
xor
xor
cmpsb
ljmp
sbb
icebp
popf
std
add
rcl
dec
packuswb
push
jae
stos
roll
jno
std
mov
lods
imull
lods
push
aas
pushf
jp
inc
mov
mov
mov
test
pop
rorl
push
faddl
outsl
std
pop
arpl
xor
stos
call
mov
ljmp
jl
jmp
and
pusha
fcoms
inc
push
sti
jl
cld
mov
xchg
mov
insl
xor
pop
cli
cwtl
sub
xor
mov
lock
fidivs
outsb
or
leave
xor
push
cmc
and
pop
push
and
inc
jge
xor
pop
rcll
xor
ljmp
cmp
pop
mov
sbb
orl
lcall
and
int3
sti
lds
cmp
pop
xor
jge
pushf
das
scas
out
imul
cmp
aam
mov
inc
cmp
loop
shrb
sahf
divb
pop
mov
cmpsb
ret
loopne
mov
cmp
cmovne
dec
and
xchg
repz
sbb
or
andb
fucomp
cmp
movsl
stc
jo
adc
jne
lahf
sub
and
dec
or
fstpt
lcall
fisubrl
xchg
cld
imul
push
xchg
add
mov
adc
push
mov
test
mov
push
pop
or
and
sbb
lret
xor
adc
push
sub
test
in
icebp
dec
imull
adc
sbb
mov
jmp
pop
shlb
dec
arpl
jmp
cmp
jmp
sub
pop
mov
push
paddw
das
fldl
cs
mov
jle
mov
lret
lods
jnp
stc
jne
jle
aam
and
pop
jg
add
icebp
movsb
loope
or
inc
mov
mov
adc
dec
aaa
pop
cmp
fucomi
or
push
or
sbb
sahf
cmc
jae
sbb
mov
pop
add
test
push
shll
mov
sub
loop
xor
out
dec
mov
out
lock
leave
ja
dec
into
into
dec
add
subb
movsl
mov
repz
fwait
inc
imul
fs
mov
xor
pop
sarl
lods
ror
xor
cmp
call
xchg
pop
ret
movsb
movsb
sub
sbb
gs
dec
push
mov
movsl
adc
lret
cli
mov
inc
push
pop
dec
ds
fldl
pop
imul
insb
test
or
mov
aaa
and
scas
and
faddl
ss
clc
sub
stos
test
bound
mov
mov
inc
mov
mov
outsb
xchg
adc
add
fcos
cmp
sahf
cltd
popf
pop
adc
das
aas
clc
insb
mov
out
mov
out
outsb
pushf
inc
aad
cmp
lcall
xchg
rcrl
push
lret
cld
or
pop
pop
adc
jbe
push
std
inc
sub
cld
and
inc
mov
or
cwtl
jb
loopne
imul
dec
fcomp
and
sbb
cli
mov
mov
add
adc
pop
movsb
xchg
aad
sub
test
ja
test
add
pop
aaa
imul
int3
out
mov
xchg
cli
js
adc
ficoml
outsl
out
pop
xor
cli
cvtpi2ps
or
lock
ret
add
xchg
push
daa
or
inc
dec
mov
adc
divb
rclb
pop
cmpsb
pop
jnp
in
test
hlt
push
inc
push
adc
pop
ds
or
or
outsb
insl
outsl
rorl
in
sbb
jmp
std
loope
jne
mov
aas
sbb
dec
out
xor
push
inc
mov
push
xor
shl
dec
shlb
movsb
lods
lds
std
pushf
cmpsl
stos
cmpsl
addl
ret
inc
mov
lahf
adc
cmc
mov
hlt
sbb
imul
scas
rcll
mov
repnz
mov
xchg
ret
xchg
test
mov
outsl
dec
adc
xchg
sbb
xor
add
pop
pushf
scas
mov
les
xor
lcall
les
sbb
icebp
fst
jo
adc
ret
cmp
lods
scas
mov
dec
cmp
sbb
mov
in
add
lods
sarl
mov
lahf
movsb
imul
jp
out
jb
stos
roll
jecxz
mov
les
fdivs
frstor
ret
lods
lcall
pop
das
push
inc
dec
daa
jo
lret
sarb
scas
mov
or
orl
xchg
mov
sti
sub
mov
cmp
jmp
int
dec
and
sub
test
mov
fs
mov
enter
fs
push
stos
push
xchg
out
xor
sub
inc
xchg
sub
xchg
push
mov
out
xchg
push
repnz
xchg
cmpsl
and
imul
pop
shlb
push
std
xor
cmp
inc
push
mov
sahf
sti
mov
sbb
sub
ret
xchg
leave
push
dec
loopne
add
stc
adc
cmp
sub
test
movsl
dec
fdivl
push
or
adc
jge
add
mov
aad
pushw
std
out
test
xor
daa
loop
mov
pop
dec
or
aad
shl
out
mov
push
fwait
je
stos
into
lods
int
imul
xlat
jae
outsb
mov
xor
fistpl
pop
loop
mov
sub
add
sub
movsb
cmp
in
and
ret
xor
mov
pusha
popf
jne
mov
dec
dec
ret
xor
jmp
cld
int3
xor
lahf
lahf
jle
xchg
lahf
repz
clc
leave
fwait
sahf
add
mov
in
daa
mov
test
pushf
inc
lahf
or
xor
mov
movsb
sbb
stc
jb
jno
mov
fwait
lahf
cmp
mov
xchg
jle
dec
add
int3
dec
push
xorb
push
iret
in
subl
ss
in
and
ret
cmc
loopne
pop
insb
sbb
test
std
movb
push
es
fwait
addr16
xchg
xor
pushf
jge
in
icebp
rcrb
lock
inc
in
mov
lahf
jne
ja
sar
pop
out
aas
cmp
sbb
sahf
mov
cmp
aam
cmp
not
mov
pop
mov
or
xchg
lahf
faddl
inc
or
jg
mov
rsqrtps
repz
cwtl
lret
xor
iret
lahf
sbb
xchg
mov
cld
push
sbb
or
in
aad
sub
movsl
aas
test
addr16
jle
lock
jmp
imull
sbb
mov
mov
dec
icebp
imul
pop
xor
or
icebp
addr16
sarl
mov
int
loopne
out
lret
add
test
or
out
inc
sub
hlt
fldcw
bnd
aas
arpl
cmpsl
shlb
cmpsb
xor
push
jnp
fwait
ret
jb
shrl
jmp
mov
into
sbb
in
pop
cmp
mov
mov
orl
sti
in
loop
push
cltd
jns
jg
pop
dec
or
cmp
adc
cmc
xchg
ljmp
cli
push
ljmp
mov
aas
xor
int3
cmp
ljmp
or
sbb
movsb
sbb
sbb
popf
xchg
inc
or
sbb
inc
cmp
es
mov
aaa
pop
je
and
and
and
xor
add
insb
pop
xlat
movhps
lcall
inc
into
pop
ljmp
andl
adc
test
adc
fs
adc
jnp
inc
cmp
mov
sbb
mov
test
mov
pop
ljmp
sub
ljmp
popf
jne
imul
add
sub
mov
inc
lods
adc
jns
pop
xchg
inc
test
xlat
fdivrl
xchg
mov
mov
out
cmp
loop
push
lds
mov
ds
mov
sbb
movsl
lcall
insl
pushf
push
fnstsw
mov
rcll
sbb
shl
cmp
mov
out
or
fdivs
shrd
mov
iret
jnp
outsb
rcr
std
loopne
jo
mov
xchg
jl
outsb
mov
add
sbb
and
sbb
jmp
ja
scas
pop
rorb
loop
out
mov
pop
sub
xorl
fs
dec
mov
fst
into
jg
test
mov
js
and
sub
test
imul
dec
enter
retw
sbb
leave
xchg
jnp
loope
mov
xor
mov
add
test
sub
out
ret
cmp
loopne
adc
dec
scas
dec
sub
arpl
lods
cmp
cmp
or
xor
lods
incl
push
xchg
pop
out
xchg
mov
ret
outsl
in
outsl
rolb
inc
push
clc
imul
push
mov
iret
idivl
hlt
out
cmp
jp
negl
dec
jge
mov
rcl
outsl
dec
cmp
xor
hlt
mov
arpl
pop
xor
pop
and
adc
les
jbe
cld
xchg
addr16
rcrl
sbb
inc
imul
inc
cmp
dec
xchg
push
jo
sti
fsubrs
or
aas
out
and
mov
inc
sbb
mov
pop
or
jo
test
or
push
sub
push
in
pop
in
push
or
cmp
clc
cmp
cmp
jge
mov
xlat
cmpsb
sbb
xor
cmpl
inc
pop
adc
sub
movsl
int
loop
push
out
and
ret
push
dec
dec
dec
std
loope
push
std
jecxz
inc
rcll
flds
push
sbb
inc
lock
rcl
mov
and
arpl
sbb
fdivs
data16
clc
enter
shlb
adc
int
fidivrs
subl
shrb
cmpb
mov
fnstcw
hlt
push
je
mov
rorl
loope
mov
jae,pn
push
fsqrt
pusha
mov
int3
mov
cmc
notb
mov
mov
out
aad
adc
mov
pop
dec
sub
mov
xor
jno
cmp
ljmp
dec
test
and
leave
in
popf
push
das
cmc
jns
scas
lcall
fdivrp
aam
in
xor
aam
mov
stos
test
cld
stc
aam
cmpsl
scas
pushw
sub
xchg
ljmp
das
fiaddl
push
xchg
test
aam
dec
inc
test
jb
repz
ret
fisubrs
test
cltd
mov
stos
in
jns
fwait
xchg
fs
test
sub
movntq
mov
stc
aam
imul
push
ja
xchg
lea
inc
and
xor
div
push
xchg
jae
and
stos
roll
in
adc
and
fwait
icebp
inc
mov
inc
dec
outsl
cmc
dec
adc
and
jmp
cmp
out
lock
out
in
data16
jbe
les
in
pushf
mov
repz
ss
enter
int3
mov
int3
sbb
mov
mov
fsubrl
jnp
or
into
loop
fneni(8087
dec
jae
scas
push
scas
aaa
or
mov
mov
xor
outsl
mov
xchg
clc
push
lock
mov
into
adc
cmpsb
rcrl
sub
mov
mov
xchg
cmp
inc
xchg
sub
movsb
ja
lcall
mov
jae
ds
test
in
je
cmp
jb
incl
pop
mov
out
pop
loope
orb
or
and
rcr
and
pop
clc
and
add
js
enter
jle
cmpsl
cmp
adc
mov
insl
cli
cmc
imul
addr16
and
sub
lcall
push
inc
jne
ret
sub
fstpl
xchg
int
cmpsl
mov
repnz
sbb
jne
fisttpll
mov
sbb
push
sahf
sbb
jo
pusha
outsl
loopne
notb
sbb
mov
fwait
loope
mov
ret
mov
popf
mov
addr16
shrl
ss
les
int
pop
pop
adc
stos
push
les
loopne
int
test
lcall
nop
and
mov
xor
pushf
push
testb
std
sarb
xchg
scas
jns
lods
pop
jle
es
and
out
fwait
jle
push
mov
cmp
insl
cld
add
repz
pusha
or
stc
ljmp
bound
add
jl
or
jbe
int3
or
mov
pop
cltd
cmpsb
repnz
fcomp
mov
cwtl
or
insb
fiaddl
mov
dec
cmc
mov
dec
and
sub
mov
pusha
fsubp
rorb
jg
or
shlb
pop
cmp
jnp
xor
jecxz
mov
lea
iret
iret
inc
mov
pop
cmp
sbb
adc
jne
pop
mov
mov
ss
aaa
out
add
sub
sbb
popa
cmpsb
sbb
dec
lea
and
dec
fisubl
and
dec
scas
pop
jns
pop
jp
or
sbb
aas
mov
add
push
jle
test
cmpsb
lods
int3
add
inc
or
call
jo
pop
mov
push
nop
lock
xchg
cmc
test
repnz
push
pop
icebp
call
roll
dec
push
insl
les
push
cmp
lea
inc
ljmp
repz
repnz
sub
mov
iret
imul
ret
inc
shrb
jl
notl
shll
insl
sub
das
lds
jne
push
jmp
sarb
mov
in
dec
stc
adc
dec
mov
sub
repnz
int3
jp
lds
xor
aas
adc
sub
mov
ds
mov
cld
je
cwtl
jo
shrb
sti
lret
mov
pop
insb
jge
pop
sub
insb
in
ret
xor
jmp
call
in
mov
aam
das
lds
or
jno
cwtl
ss
dec
enter
sub
sub
std
in
pop
jbe
fucom
aad
mov
pop
sahf
incl
test
push
xchg
mov
aas
vmovq
adc
or
xchg
ret
mov
sbb
sbb
or
cltd
insb
shlb
jge
xor
movsb
fldl
int
rep
cmp
lock
out
test
test
call
andb
into
andl
push
xor
add
jne
test
or
rorb
or
aam
or
inc
cmp
sub
add
lods
lret
aaa
sbb
test
inc
lret
sub
dec
fwait
mov
inc
push
inc
rclb
arpl
push
bound
inc
popa
movsl
ja
xchg
in
std
idivl
push
sub
in
cmp
gs
enter
fs
sarb
jno
fidivs
sbb
call
push
divb
jb
cmpsb
adc
mov
ljmp
push
sbb
addr16
scas
mov
mov
xchg
and
stc
dec
testl
jl
adc
mov
shlb
inc
sbb
dec
sub
dec
addr16
imul
push
in
and
adc
repz
aaa
push
sub
push
shrl
or
mov
and
jmp
cmp
jns
lods
jo,pn
shlb
in
xor
ds
jo
fsubrs
out
sti
cwtl
jb
jae
insb
ja
mov
mov
push
sub
and
mov
jae
ret
mov
insl
shlb
loopne
add
outsl
insl
xchg
adc
loopne
pop
fwait
hlt
out
sub
xchg
rcl
xchg
pop
mov
mov
cld
lock
xchg
mov
or
rep
fs
in
sbb
dec
or
pop
push
test
test
sbb
inc
sub
add
int
stos
rclb
or
xor
and
jg
cmp
push
xchg
push
cmp
mov
lock
mov
mov
pusha
push
push
js
outsl
and
push
push
adc
or
je
in
sbb
aas
outsl
add
adc
mov
gs
pop
cwtl
push
xor
das
xor
push
fwait
mov
outsb
cmpsb
fists
push
sub
clc
jnp,pt
adc
loop
ds
pop
or
cmp
dec
inc
shl
adc
mov
in
mov
inc
jp
cs
dec
ret
mov
xchg
add
jno
aas
inc
jbe
sahf
mov
add
fstps
push
in
pop
adc
imul
add
mov
int3
add
jae
out
sub
mov
jno
pop
out
lea
das
aas
fucomip
inc
lods
push
cs
test
adcb
mov
and
add
add
mov
inc
add
loopne
or
ficoms
frstor
add
dec
dec
insl
scas
adc
aaa
cmp
in
sbb
jge
insb
scas
sbb
cli
loopne
fadds
stc
stc
cld
pop
gs
jecxz
inc
iret
push
adc
je
jne
jb
or
je
pop
dec
add
xchg
out
xlat
lock
popa
in
clc
sbb
fidivrl
mov
stos
adc
mov
jle
sbb
jmp
xchg
inc
jg
sbb
pop
fimull
xchg
cmp
mov
ss
int
stc
mov
icebp
ss
fwait
repnz
mov
mov
lret
cmp
nop
pop
mov
addr16
adc
jbe
mov
xchg
daa
sub
out
movb
aas
pop
push
dec
dec
cmc
sbb
jno
aaa
cwtl
popa
ja
add
inc
or
jg
jns
idiv
movb
and
rcll
stos
sbb
xchg
pop
xor
lahf
mov
out
cmp
pop
out
test
adc
mov
adc
movsb
cmpsl
jg
pop
mov
pop
mov
jle
inc
iret
mov
cmc
push
in
stc
jl
cs
push
jo
roll
jl
add
fisttpl
jge
pushf
add
xchg
push
shr
sbb
dec
iret
not
pop
sub
add
out
xchg
pop
js
cmp
leave
mov
loopne
xlat
shlb
inc
leave
sub
stc
lgs
lock
jg
mov
or
add
mov
out
in
jns
push
or
ss
sbb
insl
add
and
lea
push
sbb
dec
ret
and
mov
mov
and
addr16
lret
out
test
std
xchg
test
pop
stos
gs
insl
sarb
xchg
pop
ds
dec
sub
out
adc
adc
and
and
inc
lahf
fisttpll
mov
push
dec
or
xor
jns
ficoms
insl
outsb
pop
jmp
dec
insl
pop
loope
xchg
imul
addr16
cmp
decl
pop
jb
jbe
add
mov
mov
adcl
insb
mov
sarb
push
jnp
pusha
mov
xor
sub
mov
in
popf
cwtl
mov
int3
inc
lret
dec
rcrb
out
xor
jl
popf
pop
sbb
mov
dec
inc
mov
cs
push
fsubrs
negb
lahf
add
mov
jmp
bound
movsb
sbb
fdivs
lea
outsb
push
outsl
insb
xchg
mov
adc
inc
mov
ja
cwtl
test
fwait
loopne
hlt
loop
lods
test
mov
push
idivb
jge
jb
sbb
add
mov
sbb
outsl
add
xchg
ret
sbb
xchg
mov
pop
loope
cmp
test
sbb
int
adcl
cmp
jae
mov
push
pop
sub
outsb
inc
cs
in
fnstsw
out
insb
mov
jge
mov
in
sti
adc
movsl
mov
pusha
lea
push
shlb
and
inc
rclb
cmpsl
xor
sub
inc
sbb
jnp
xor
fdivrl
insl
xchg
add
es
add
sahf
scas
sub
insb
lret
cmc
inc
gs
push
es
dec
add
sbb
pop
subb
arpl
popf
jns
nop
pop
dec
lock
movl
push
les
cli
stos
loop
inc
iret
int
cmc
cmp
popf
jae
pop
std
xlat
test
addl
push
pop
negb
cs
mov
lahf
jbe
sahf
push
clc
mov
xchg
jno
enter
pop
dec
loopne
add
jge
mov
push
cltd
push
or
test
and
cld
iret
push
fnsave
imul
out
mov
push
inc
ss
int3
dec
out
negl
sarb
and
dec
js
mov
lock
stc
loope
mov
sbb
stos
out
mov
jmp
mov
xchg
jns
fisttpl
sub
fiaddl
out
xchg
fcomip
and
sbb
dec
mov
pusha
jle
out
xchg
pop
shl
enter
sbb
pop
mov
mov
iret
lcall
dec
xor
movsl
mov
pop
push
mov
scas
ret
xor
sbb
popl
out
push
adc
pop
outsb
mov
into
lea
sub
jle
in
mov
lret
negb
negl
cmpl
repz
repz
dec
lds
and
mov
cs
ja
jae
mov
jbe
dec
mov
and
push
sub
shrl
jl
inc
push
sti
cmpsl
jp
aas
mov
out
std
in
mov
das
repnz
adc
inc
adc
push
mov
clc
xchg
mov
mov
push
into
jbe
cld
rcll
pop
mov
or
pop
scas
js
loope
add
jnp
cld
das
lret
in
inc
push
popa
xchg
sti
adc
cltd
and
pop
xor
iret
mov
mov
sub
and
sub
loop
iret
cld
hlt
mov
mov
movsl
sub
repz
fwait
hlt
in
xchg
push
push
in
hlt
out
mov
add
cmp
jns
int
cld
xchg
inc
aaa
push
add
fidivl
int
shlb
dec
sub
and
flds
mov
or
xlat
mov
lahf
sub
xlat
push
faddp
sbb
leave
pop
shlb
and
movsl
fistpll
inc
jnp
test
or
xchg
push
imul
and
lahf
mov
push
cwtl
outsl
inc
sbb
sbb
lahf
stc
jecxz
inc
lock
stos
xor
or
add
jnp
xchg
cs
sarb
sub
xchg
rcr
popf
push
les
inc
adc
enter
out
inc
clc
lcall
repnz
push
dec
mov
jns
fildl
sub
mov
scas
loope
call
push
and
loope
lock
mov
loop
adc
jp
xor
xchg
dec
jno
aas
mov
xor
pop
mov
xor
test
lock
ret
pushf
adc
sub
loop
xchg
insl
mov
scas
push
push
call
xchg
pop
mov
xor
cwtl
popa
and
sbb
bound
or
sub
fs
rcl
orl
jle
mov
pop
cmp
scas
nop
lcall
cmp
add
loop
jge
lock
add
jae
dec
mov
mov
sbb
movsl
or
ja
mov
add
adc
adc
cmp
sarl
cli
xchg
insb
js
sbb
jnp
enter
fdivr
pop
lods
jl
mov
inc
sub
xor
aas
and
xchg
outsl
loop
sbb
pop
enter
test
sbb
or
pop
adc
sub
pusha
mov
xlat
fwait
add
dec
fimull
std
push
roll
lret
jmp
dec
mov
ficompl
xchg
xchg
loopne
mov
sahf
imul
xchg
adc
int
dec
aas
fnstsw
sbb
xor
jg
or
sbb
popf
call
mov
lock
and
stos
xor
lods
out
fs
inc
popa
jg
pop
pop
sbb
iret
push
decl
jmp
and
dec
roll
pusha
push
xor
pusha
outsb
shlb
das
mov
test
pusha
jno
test
mov
jecxz
xchg
jno
jmp
sbb
push
jecxz
lea
pop
and
xor
out
aad
jmp
or
orl
cli
dec
jb
dec
xchg
mov
xchg
pop
pop
dec
cli
daa
out
scas
sar
test
dec
pushf
push
popa
test
cmp
pop
scas
shrl
nop
outsb
push
fisttpll
jbe
fcoml
fwait
or
and
lea
mov
pop
ja
mov
hlt
jo
fwait
adcl
lret
cmpsb
pop
pop
scas
cmp
int
xor
add
jno
push
mov
adcb
xchg
sahf
test
mov
mov
ja
ret
movsl
inc
loopne
pop
negb
mov
jle
jg
push
cmpsb
sti
dec
jno
mov
sub
ret
sahf
imul
stos
adc
push
mov
pop
or
xor
ret
xlat
and
into
lret
mov
mov
pop
aaa
mov
push
mov
movsb
xor
testb
mov
jno
sub
divb
mov
xchg
mov
xchg
inc
push
pop
fidivrs
jbe
test
lcall
pop
inc
std
pushl
outsb
or
ds
add
daa
sbb
frstor
fs
pop
popf
fildl
rol
pop
enter
xor
fildl
cltd
cmp
lcall
cmp
ret
sbb
clc
xchg
mov
into
or
pop
mov
sub
and
fwait
andb
jecxz
out
jbe
mov
ja
outsl
iret
dec
cmp
sarb
adc
jge
or
scas
and
cmp
pop
push
in
or
aaa
rcll
jl
fisubrl
push
mov
cmp
rolb
or
inc
outsb
icebp
mov
mov
stc
pushf
sub
stc
mov
inc
push
xchg
mov
lea
sub
lods
inc
ja
sbb
jo
dec
and
fildl
inc
and
pop
sub
in
sub
xor
lcall
loope
clc
push
push
std
orl
xlat
lock
xor
sub
clc
pop
sbb
mov
jg
aam
mov
mov
lret
mov
xor
add
fwait
pop
cltd
adc
ds
fs
lcall
pusha
mov
in
imul
imul
inc
mov
popf
mov
cwtl
insl
or
mov
subb
rcll
pushf
adc
sbb
pusha
mov
sbb
shlb
adc
inc
out
or
orl
dec
dec
fdivrl
shl
push
rclb
scas
cwtl
clc
mov
xchg
jle
mov
xchg
cmp
lock
adc
adc
out
jo
sub
in
clc
out
and
mov
or
stos
push
mov
icebp
lock
lcall
dec
inc
divl
cmp
pop
int3
xor
bound
cmovg
jp
leave
cmpsl
dec
imul
insl
jmp
mov
push
lock
inc
jnp
pushfw
bound
movzbl
sahf
out
popf
jb
fcoms
cmp
pop
and
jns
daa
inc
sub
push
outsb
imul
xlat
pop
les
mov
fisttpl
adc
pop
add
addr16
cmp
pop
mov
jae
shlb
pop
mov
jecxz
mov
sub
cmp
ret
daa
sbb
jnp
pop
xor
pusha
fsts
adc
cltd
add
sub
jmp
mov
push
xchg
cmpsl
xlat
in
sbbb
mov
fisubl
fdivrl
test
fdivrs
lretw
cmp
fdivl
jecxz
sub
enter
pop
out
mov
inc
in
out
repnz
stos
sub
shll
add
jb
pop
pushf
cmpb
testl
push
jmp
in
shrb
lretw
and
cmp
jns
jnp
jg
mov
rcl
or
cmp
lret
imul
mov
test
lahf
aas
outsl
imul
xchg
mov
pop
dec
cmpsl
iret
push
sbb
mov
pop
dec
xchg
mov
ss
pop
out
scas
jno
and
test
rorb
test
push
push
pop
insb
sahf
fidivl
mov
mov
dec
icebp
mov
mov
not
mov
jbe
lea
jnp
pop
mov
push
xchg
mov
jns
add
sbb
mov
dec
push
push
lods
jmp
dec
cmp
mov
shl
mov
out
mov
add
lret
arpl
cmp
sub
outsb
push
push
fmull
xor
jns
repz
mov
je
pop
push
mov
xor
inc
jp
pop
push
push
mov
dec
inc
outsb
mov
push
je
pop
dec
mov
cwtl
xorb
sub
repz
iret
mov
cmp
je
sahf
sub
pop
mov
xchg
fbld
pop
dec
in
test
sbb
jbe
movsl
outsl
insl
cmpsb
iret
out
pop
out
idivl
xor
or
pop
adc
xor
movsl
cltd
push
inc
push
jle
mov
push
leave
shll
push
push
loopne
pop
loope
push
popf
out
sub
jecxz
xchg
jns
jmp
xchg
push
mov
jno
jmp
inc
cmp
adc
pop
lcall
jle
sub
test
sub
mov
jns
pop
lea
icebp
dec
dec
repnz
pop
setl
in
int
je
xchg
fdivs
loop
popf
pop
pop
in
sub
cmp
mov
push
dec
mov
adc
add
mov
or
sub
enter
jle
test
xor
add
jmp
pop
sub
cmp
xchg
lahf
xor
ret
test
data16
sub
lods
repnz
mov
rcll
adc
xchg
sahf
lods
adcl
xchg
sbb
xor
and
out
test
sbb
cmp
scas
lods
lret
shrl
popa
loope
pop
popf
push
jmp
mov
and
incb
mov
push
fs
xchg
cmp
iret
lcall
cmp
lret
sub
addr16
test
push
xchg
cli
mov
arpl
in
xor
jbe
jne
xchg
insb
inc
push
enter
out
mov
cmp
xchg
das
scas
sub
mov
cmpsl
ror
into
addr16
dec
push
pusha
mov
fimull
sbb
loopne
xchg
cmpsl
fsubr
jbe
push
lds
inc
int3
scas
scas
stos
cmc
clc
fdivs
call
fstps
mov
stos
sub
faddl
mov
out
cmp
push
pop
mov
lods
mov
or
lcall
shll
mov
in
loope
inc
subl
cmp
push
scas
jb
mov
rorl
or
cmp
repnz
mov
pop
pop
pop
gs
xchg
lock
popa
sbb
mov
jnp
jae
fcmovne
ds
add
cwtl
cwtl
add
cmp
sbb
lock
push
or
in
fidivrl
jbe
cmp
mov
xlat
cli
cmp
pop
out
push
fstpt
add
loop
fwait
sub
fcompp
mov
pop
out
and
icebp
into
icebp
xlat
push
mov
fs
or
mov
jecxz
xchg
pop
aad
cld
mov
add
pop
lds
test
lret
outsb
lods
cmpsl
cmp
popa
jg
and
cmp
lret
adc
jb
sub
hlt
gs
orb
xchg
ja
stos
add
xchg
mov
stos
jb
movsl
and
mov
das
mov
stc
jno
shlb
xchg
lahf
pop
enter
leave
sub
popa
jo
sbb
daa
das
js
fsubrl
cmpsl
rorl
cmp
and
and
pop
mov
popf
xor
iret
out
xchg
xor
imul
mov
leave
adc
lods
ror
sub
pop
adc
and
sahf
xchg
xchg
add
repz
stc
xchg
xchg
lahf
inc
cmc
sbb
fildl
gs
dec
jp
aaa
or
jne
mov
xchg
adc
call
xchg
in
pop
in
lahf
call
mov
cmp
pop
pop
stc
loopne
cld
cld
xchg
divb
enter
xor
push
lods
ficompl
xchg
add
push
cmp
mov
xchg
subb
mov
jmp
mov
inc
push
mov
mov
sbb
dec
xor
or
xlat
imul
je
or
mov
lcall
push
jmp
dec
test
gs
mov
mov
mov
repz
add
scas
subl
out
loop
mov
sub
xor
jo
push
jmp
sahf
jl
jmp
movl
loopne
je
and
aad
cmpsb
mov
jnp
test
add
mov
mov
mov
pop
xchg
ljmp
mov
iret
mov
sbb
lods
in
iret
sbb
mov
sub
mov
jno,pn
test
pop
popf
test
lret
popa
jne
lock
adc
popa
sbb
loope
ret
jnp
ja
ds
mov
jbe
insl
test
mov
adc
fcoml
or
or
jne
push
test
test
test
ret
int3
and
and
pusha
test
adc
test
push
push
lods
lahf
insb
push
fstps
sbb
loope
ret
dec
test
or
test
inc
and
sbb
adc
adc
or
lret
mov
fcomps
in
xchg
mov
jmp
xchg
lret
dec
insb
je
out
outsb
cmp
inc
ret
insl
or
out
fxch
pop
outsb
mov
loopne
int
in
jl
cmp
pop
lds
jp
mov
adc
and
and
fmuls
inc
fadds
lahf
jo
loope
ret
adc
and
dec
mov
push
ret
int
ja
outsb
faddl
pop
dec
mov
inc
pop
inc
pop
inc
call
mov
and
int3
and
and
and
loope
ret
leave
test
test
or
inc
xchg
call
adc
loope
popa
aas
popa
pop
mov
dec
js
mov
lock
loope
ret
ss
std
test
or
adc
es
jo
loope
ret
fisttpl
mov
outsb
and
mov
loope
ret
jp
xor
ret
or
loope
ret
movsl
test
inc
sbb
popa
push
popa
push
popa
push
loope
ret
xor
cmpsl
adc
and
xor
xor
ljmp
addl
adc
popa
aaa
loope
ret
arpl
or
adc
and
int
inc
cwtl
out
and
mov
sbb
jge
int3
ja
out
and
dec
mov
push
ret
mov
and
daa
pop
inc
call
and
pop
inc
pop
dec
call
push
adc
adc
adc
into
and
popa
sub
fs
dec
test
or
test
inc
mov
ret
adc
test
test
test
adc
popa
aaa
loope
ret
arpl
or
or
notl
out
and
inc
mov
pop
test
or
dec
mov
cs
fwait
or
or
or
adc
or
or
mov
mov
adc
bound
xchg
xorl
into
and
inc
cmp
popa
or
and
mov
inc
adc
adc
rcrl
and
add
popa
pop
mov
sbb
mov
sbb
loope
ret
ss
std
test
or
adc
add
out
fisubs
into
xchg
int
xchg
in
jno
pop
xor
cmp
mov
outsb
and
dec
mov
xorl
es
jp
xor
ret
or
or
and
dec
call
adc
adc
mov
addr16
and
xor
in
test
movsb
mov
xor
sub
iret
lds
testb
adc
dec
aaa
ror
mov
outsl
and
shrl
jle
fldcw
into
jne
xchg
mov
inc
xchg
xchg
insb
mov
sahf
sub
movb
sbb
push
clc
and
orb
mov
testl
push
hlt
loopne
fwait
cmp
mov
clc
outsb
lcall
fsubs
repnz
jbe
mov
pusha
and
jnp
cwtl
jo
add
filds
mov
in
pushf
fs
lea
setp
mov
fsubrs
rolb
jecxz
jg
adcb
data16
pop
clc
xchg
andb
mov
or
cmpsl
push
lock
jne
mov
ds
repz
arpl
mov
inc
rclb
mov
pop
mov
ds
loope
minps
mov
movsb
jl
fdivr
movl
mov
xlat
pushf
inc
xor
fidivs
fcmovnu
xchg
pop
shlb
inc
lret
cli
scas
int
jbe
sahf
or
add
pop
ja
loop
sbb
or
shlb
mov
mov
mov
mov
xchg
shr
std
insb
and
test
rcr
lret
dec
lgs
and
jmp
mov
icebp
and
out
jo
lahf
add
mov
movsb
xchg
mov
xor
xor
sbb
mov
mov
xchg
cmp
add
enter
push
mov
int
sub
mov
out
rorb
cmp
xor
fnstenv
or
imul
cld
pushf
mov
push
xchg
cmc
das
in
mov
lods
sub
int3
repz
jae
je
jnp
lret
fcoms
cmpsl
adc
test
stos
out
inc
push
xchg
sbb
stc
in
dec
frstor
je
test
sbb
and
into
inc
mov
add
filds
repz
fdivrp
mov
stos
stc
lds
loope
aaa
lret
dec
std
cmp
mov
and
ja
fs
mov
jns
stos
lret
push
pshufw
push
pop
pop
out
popf
cltd
xchg
fs
int
cli
and
cmpsl
sub
into
mov
jne
lea
jl
mov
inc
cwtl
les
dec
dec
fsubs
setg
push
js
or
and
adc
adc
pop
sbb
cmp
push
hlt
mov
mov
js
fdiv
insl
hlt
test
pop
daa
pop
into
adc
jecxz
in
lods
cmp
push
or
mov
sbb
dec
cltd
or
shrl
lcall
ficoms
push
adc
fs
scas
push
sub
outsb
or
xor
notl
popf
je
jbe
rcrb
cli
and
sub
inc
mov
sub
inc
cwtl
inc
cwtl
inc
cwtl
inc
cmp
ret
test
or
adc
dec
es
and
jp
xorl
inc
fmuls
inc
sub
divb
les
std
popa
inc
inc
cld
das
loope
ret
pop
or
and
loope
loope
ret
iret
adc
adc
cmp
in
es
lock
mov
adc
inc
fmuls
and
mov
lock
jbe
jbe
mov
sbb
stos
test
inc
clc
push
loope
test
or
mov
insl
ret
add
or
cwtl
mov
lock
pop
or
inc
js
lock
ret
pop
fmull
push
ret
popf
jo
loope
test
out
and
ret
decl
lahf
lock
ret
fwait
jo
loope
test
faddl
xchg
lock
cs
pop
and
ret
incl
and
xor
scas
or
and
test
adc
inc
mov
fists
xchg
jo
loope
test
add
inc
ret
or
outsb
and
and
or
test
ss
dec
clc
sub
cmp
fisttpl
cmp
mov
push
xor
dec
clc
or
jp
jne
jmp
aaa
adc
and
daa
sub
je
mov
adc
push
adc
mov
push
push
jg
xor
stos
lock
fidivrs
int3
mov
jge
push
out
in
bswap
lds
subl
mov
repz
cli
sarb
pop
cmpsl
cmp
inc
mov
mov
xlat
icebp
xor
dec
add
int
js
iret
pop
adc
movsl
and
mov
hlt
lods
repnz
jae
scas
mov
out
cmpb
ja
mov
mov
cmp
lods
sbb
shl
or
jl
orb
or
out
xchg
mov
in
mov
hlt
and
mov
xchg
sub
lret
jmp
pop
dec
repz
jns
push
hlt
bound
xor
push
mov
mov
pop
pop
cmp
or
mov
mov
lods
pop
jg
pop
sub
mov
or
jmp
jmp
aam
and
dec
lea
jbe
adc
jno
lds
cmp
inc
adc
mov
xchg
push
outsl
cld
sbb
sbb
stos
aaa
outsb
sbb
mov
lods
aaa
repz
sti
dec
xchg
cs
add
or
out
ds
add
fnsave
push
enter
or
mov
pop
stos
inc
cltd
xchg
fidivs
cmp
sbb
jbe
out
pusha
in
int3
jnp
movsl
push
test
js
fwait
jp
in
adc
idivl
insb
adc
js
push
xlat
mov
adc
loopne
cmp
jne
into
sbbl
adc
js
pop
in
push
ljmp
shrb
mov
push
sub
add
xchg
dec
mov
pop
cmp
test
xor
xorl
clc
add
sbb
subl
rclb
mov
mov
loopne
addr16
or
orb
xor
nop
leave
pop
scas
cltd
inc
push
mov
lods
add
test
loop
xlat
jl
pop
mov
mov
subl
testl
jno
and
push
clc
mov
imul
dec
fld
xor
sub
shlb
inc
repz
out
push
pop
lahf
adc
xchg
mov
int
das
lds
in
icebp
pusha
add
mov
gs
xchg
cltd
adc
push
cmp
mov
ja
insl
es
push
shrl
daa
pop
pusha
dec
dec
outsb
pop
xor
stc
adc
out
mov
das
jnp
int3
push
loopne
mov
and
les
mov
or
lods
xor
ss
fwait
shlb
std
mov
cmc
call
das
cmpsb
xchg
xor
xchg
das
mov
dec
ds
shll
mov
xor
mov
sub
int
mov
fadd
es
imul
jmp
notb
jns
jmp
out
and
sub
jno
popf
and
lret
push
mov
cmp
sahf
andb
nop
xor
ljmp
ficoml
cmp
mov
jb
imul
mov
pop
sbb
xchg
loopw
xchg
fwait
dec
inc
movsb
lret
xchg
nop
movsl
lds
lods
cmc
mov
std
xor
jecxz
xor
imul
out
hlt
cmp
hlt
sbb
inc
lcall
push
mov
sub
cld
aad
fstpl
adc
lret
dec
mov
pushf
je
test
fs
mov
test
cmp
jb
test
mov
push
lock
mov
pop
jge
lock
dec
das
std
jle
push
pop
cmpsb
rolb
aas
adc
and
sahf
add
subl
fcoml
insb
mov
push
pushf
fwait
pop
push
adcl
clc
je
jbe
pop
bound
mov
lret
outsb
jecxz
jo
pop
loopne
adc
mov
pop
loopne
xchg
mov
add
dec
test
scas
jae
adc
lock
mov
cmp
pop
cld
addl
add
add
sbb
and
sub
or
cltd
mov
cmp
xor
rcr
imul
xlat
data16
fmull
mov
cmpsb
rclb
mov
mov
cmp
data16
test
jmp
int
jl
xor
into
inc
xchg
or
sub
push
pop
je
cmpsb
nop
enter
fcoml
xchg
mov
stos
xor
movsl
or
inc
test
jb
adc
or
bound
lcall
adc
sbb
lret
test
cmpsb
pusha
push
stos
pop
insl
pop
es
inc
and
gs
or
call
cltd
jecxz
cmp
rcr
or
rcrl
push
loope
sti
push
mulb
fadds
push
jp
repz
ds
scas
mov
mull
jbe
xlat
mov
mov
and
mov
lcall
insl
loop
or
jno
enter
mov
pusha
addl
icebp
cmpl
aas
popa
cld
inc
fistpl
mov
ret
sbb
pop
lret
pop
pop
rorb
fisubrl
sub
add
jo
clc
xchg
mov
inc
stos
aaa
sub
ds
das
movl
test
iret
aaa
lods
test
pusha
xorb
inc
addr16
mov
or
mov
outsl
and
inc
inc
sbb
push
lret
mov
mov
test
into
cmp
xor
or
adc
stc
ficomps
fwait
xchg
scas
subl
jns
push
mov
inc
iret
jl
xlat
test
xchg
fsub
out
or
mov
sbb
push
push
in
push
cli
add
aas
fsubl
xor
xor
lret
repnz
push
cmc
outsl
inc
xchg
aas
sub
imul
push
int3
mov
mov
sub
cld
mov
aaa
inc
adc
push
mov
hlt
mov
inc
xchg
cs
ja
ljmp
ds
pop
mov
jg
sub
and
mov
dec
inc
loope
push
stos
fcoms
jbe
mov
pop
loopne
jmp
mov
pop
pop
and
loop
loope
push
push
and
cli
outsl
mov
mov
inc
lret
cmp
fwait
lret
sub
cmp
test
xchg
inc
xor
lcall
xchg
stos
and
mov
subb
sub
and
test
fimuls
out
js
lret
mov
sti
fwait
leave
xchg
push
mov
push
mov
mov
jns
push
add
sti
dec
test
arpl
out
out
and
sbb
movsl
cmp
aam
sahf
roll
pop
ljmp
jle
test
push
ss
fistl
and
sbb
ret
mov
out
daa
mov
rcrl
hlt
push
xor
mov
ja
enter
mov
cmc
dec
in
scas
pop
in
stos
je
scas
imul
sub
cmp
fstl
xchg
arpl
mov
sbb
push
push
leave
mov
push
xor
xor
rcrl
mov
imul
mov
out
inc
lret
jo
int3
jge
jnp
sbb
inc
xor
ss
call
jp
pop
mov
xor
dec
out
pop
pop
cmp
cli
add
in
mov
add
in
mov
aad
dec
mov
pmuludq
xchg
pusha
data16
pop
xor
int3
mov
insl
lods
adc
in
adc
aaa
inc
adc
adc
das
lds
data16
jne
or
imul
or
sbb
int
arpl
jae
sub
insb
jns
repz
pop
push
in
loope
inc
fiadds
adc
mov
push
mov
jb
mov
out
pop
data16
jg
or
sbb
xchg
sbb
out
fldt
push
mov
cmp
sub
test
xor
gs
mov
out
cli
mov
fists
dec
inc
adc
or
xor
xchg
xlat
or
adc
lods
popf
nop
mov
xchg
add
ficoms
and
out
cwtl
sti
insl
mov
xor
mov
jne
mov
or
mov
loop
mov
jle
ffreep
lret
mov
sub
mov
inc
inc
sbb
out
pop
mov
xor
jmp
insl
inc
mov
and
lea
jno
cmpsb
mov
jg
inc
pop
fcmovne
test
iret
push
cmpsb
js
data16
ret
xor
pop
push
aas
mov
mov
daa
cmpsl
rcrl
pop
push
jmp
insl
push
or
repz
xchg
mov
fs
shll
xchg
jmp
cld
cmpsl
push
or
sbb
and
cwtl
sbbl
mov
sub
sbb
xor
xchg
insl
inc
mov
insb
in
test
sbb
out
idiv
mov
sbb
mov
sbb
out
cmc
and
popf
fdivrl
mov
mov
xor
test
out
mov
in
ss
mov
cltd
mov
rcrl
cltd
jo
loope
ret
pushf
adc
in
lahf
or
js
scas
in
add
ret
lahf
scas
mov
xchg
leave
xor
and
cs
and
adc
cmp
jnp
sbb
push
cmp
lret
cbtw
cmp
push
pop
sbb
mov
in
lea
mov
lret
push
lds
leave
xlat
and
inc
jbe
fcompl
pop
lahf
les
shll
mov
sbb
sbb
or
jge
andb
nop
lods
inc
lods
cltd
jge
adc
and
dec
push
stos
jbe
mov
aad
xor
push
xchg
adc
sub
add
aad
sub
and
in
fwait
pop
jo
cwtl
mov
enter
dec
rcrl
jb
imul
xor
mov
rclb
pop
push
jmp
fnop
add
imull
jb
daa
sbb
js
lea
call
push
mov
fisubrs
cltd
mov
or
cmpsb
push
fsubl
mov
shl
fcomps
or
and
aas
hlt
mov
ds
mov
test
out
leave
les
jne
rcl
inc
xchg
push
mov
add
xchg
mov
int
jg
jns
mov
inc
pop
jo
movsb
aas
or
inc
loope
pop
clc
xlat
cmc
jge
cwtl
imulb
or
dec
pop
mov
sti
mov
test
test
shll
adc
iret
scas
jae
inc
imul
cmp
aam
inc
mov
aas
adc
push
andb
cmp
outsb
adc
stos
pop
out
xlat
ja
cmp
mov
push
sbb
popl
sub
les
add
jbe
out
sub
sbb
adc
rep
aas
sub
test
xchg
xlat
or
clc
cmp
in
pop
rcrl
pop
cld
ljmp
jmp
aas
cmp
sub
mov
enter
sub
pop
dec
sub
pushf
xorl
sarl
int3
enter
pop
inc
inc
scas
sbb
mov
lret
xor
in
call
pusha
cmpsb
pop
mov
push
adc
cltd
rcrl
imul
dec
xchg
daa
and
sti
mov
inc
sarb
mov
push
mul
dec
loopne
cmp
cmpsb
jno
lret
je
sbb
test
cmp
iret
repnz
push
jg
lret
shll
pop
sahf
jle
sbbl
push
adc
mov
cmp
xorl
imul
out
idivb
inc
add
push
lahf
test
arpl
pop
popa
filds
scas
test
inc
outsl
mov
add
imul
in
pop
outsl
adc
aas
es
fcomps
pusha
sub
sbb
lret
push
subl
jg
fwait
sub
jo
pop
adc
popa
inc
mov
test
add
roll
mov
mov
test
ljmp
pop
insb
sbb
pop
push
push
jmp
sub
and
or
sbb
mov
daa
mov
ret
push
adc
stc
sarl
rcl
cmp
inc
out
fldenv
jl
incl
xor
adc
enter
out
aam
lahf
jmp
sbb
cmpsb
lahf
cmpsl
cmpxchg
outsb
mov
adc
mov
sahf
jne
pop
jo
and
xor
loope
test
jmp
mov
or
and
fs
cmp
das
inc
push
arpl
das
movsb
push
mov
sbb
in
gs
sbb
fcmovbe
or
mov
scas
mov
jbe
cmp
enter
jnp
mov
cld
pop
pop
inc
jae
cwtl
push
xchg
adc
lods
gs
xchg
pushfw
add
dec
pop
clc
xchg
int3
push
xchg
and
pop
lcall
fcomp
ficoms
inc
sbb
and
rol
xchg
insl
pop
add
cmp
dec
mov
pop
loope
ret
inc
adcl
add
push
xchg
in
and
insb
mov
fwait
lock
ja
idivb
pop
bnd
daa
loop
cmpsl
sub
cwtl
sbb
fsubrs
vmread
je
loop
cltd
in
adc
xor
repnz
push
mov
mov
or
fistpl
fldcw
push
or
rcrl
lea
dec
xor
jbe
mov
fdivs
mov
or
mov
sti
mov
push
xchg
fwait
cwtl
jnp
sbb
pcmpeqd
mov
mov
and
in
inc
clc
inc
adc
mov
gs
sub
xor
jns
push
add
xchg
and
pop
lret
stos
sbb
int
or
or
mov
imul
aad
std
call
cmp
fdiv
inc
push
lods
mov
rcll
jb
sub
xor
ret
in
push
xchg
pop
and
stos
fdiv
daa
scas
push
push
pop
cmp
arpl
inc
movsl
inc
xor
inc
dec
mov
sub
stc
les
inc
mov
pop
lret
lahf
mov
mov
jg
call
sbb
aad
dec
es
lods
into
dec
jno
arpl
les
inc
sbb
gs
xor
arpl
sahf
lea
or
stos
out
cld
cmp
ret
adc
jg
fs
xchg
lret
xchg
out
sbb
sbb
iret
flds
scas
mov
xchg
loopne
popa
into
mov
mov
mov
push
popa
cmp
mov
sar
jecxz
imul
stos
rol
out
jl
add
int3
sbbb
xchg
push
popa
out
and
loop
lcall
cmp
push
orb
xlat
push
imul
outsl
in
outsb
stos
mov
xor
lcall
lret
and
sbb
push
cmp
into
int3
sbb
out
std
std
push
mov
cmp
cmp
cmp
repz
idivl
mov
leave
and
scas
fimull
xchg
pop
sbb
fisttpl
in
sbb
xor
and
add
mov
jl
fdivl
out
cmc
ret
fdivs
jo
cmp
push
scas
stc
jo
or
bound
add
cmpsl
mov
sti
dec
mov
jns
push
mov
sbb
daa
iret
std
aad
int3
xor
dec
jge
fmul
nop
dec
jae
xchg
fldenv
mov
push
hlt
ss
je
or
push
sub
add
mov
out
add
lahf
jmp
dec
lahf
pushf
xchg
jmp
lds
lcall
mov
fistpll
jb
lock
sub
jle
mov
ffree
popf
pushf
jno
mov
popa
pop
push
add
add
or
mov
jnp
mov
negl
pop
sti
adc
jae
xchg
xchg
mov
ret
mov
cmp
jg
dec
pushl
nop
out
xor
loopne
leave
ret
lahf
add
sti
loope
mov
scas
push
mov
pop
mov
ret
sahf
loope
push
repnz
sub
pop
jae
pop
hlt
gs
xlat
sub
xchg
mov
push
dec
mov
pop
ret
mov
cld
or
cmp
xor
and
hlt
jp
mov
xlat
pop
not
aas
or
pop
mov
pop
sub
hlt
pop
lods
jecxz
jmp
sbb
adc
mov
push
call
cmpl
rol
bsf
cmp
push
cmp
popa
insb
jnp
inc
jle
std
or
repnz
xor
mov
mov
mulb
fildll
fwait
xor
rorb
mov
aad
and
sub
scas
cmc
pop
jno
mov
jae
or
sub
shr
std
adc
jecxz
pop
lret
inc
pop
jmp
xchg
and
xchg
lock
dec
cmpsl
sti
clc
inc
movsb
jmp
xchg
movsb
ret
mov
dec
cmp
xlat
pop
jmp
dec
jmp
cmc
pop
std
insl
pop
fsubl
scas
xchg
out
fwait
cli
jo
int
test
arpl
lret
ds
in
lock
insb
in
ret
jmp
dec
add
out
mov
fisttps
shlb
add
out
sub
cmpsl
popa
xchg
shlb
les
rcr
jbe
lret
inc
xchg
pop
in
dec
inc
shl
ljmp
pop
mov
popl
pop
xor
negl
shld
pusha
aas
jle
inc
jbe
int3
sub
pop
lea
mov
cld
ret
adc
scas
adc
sub
data16
or
and
and
and
gs
adc
sti
push
test
leave
add
aam
out
or
xor
in
xchg
dec
gs
cmpsb
lret
jbe
sbb
push
scas
nop
dec
xor
movsb
jecxz
imul
sub
xchg
sub
les
sub
push
mov
stos
push
and
fildll
mov
mov
mov
pop
cltd
jp
push
mov
faddl
pop
ds
fprem
dec
into
mov
push
in
mov
ss
jmp
fwait
pusha
imul
or
or
add
lods
sbb
sbb
mov
sub
fmuls
mov
imul
sub
sbb
insb
std
add
and
cmp
das
cld
push
loop
dec
adc
enter
cmp
jns
jno
js
cmp
movsl
int
cmp
inc
and
mul
in
fdivrs
mov
xor
mov
sub
inc
jno
addl
popa
pop
pushf
inc
xor
jae
rcll
cmp
insl
inc
fdivl
mov
xchg
movsl
sbb
test
push
or
xor
or
adc
lock
movhps
sbb
lods
sub
push
jne
fisubl
pusha
jecxz
lret
das
jl
loope
pop
jbe
add
cmp
fcomip
inc
sbb
dec
out
jo
xchg
js
mov
cltd
lret
push
loope
xchg
pop
addr16
movsb
enter
mov
inc
je
mov
lcall
mov
enter
data16
jne
mov
test
pop
pop
insl
imul
hlt
xchg
in
xchg
mov
sbb
xor
or
pop
adc
lock
popa
pop
mov
cs
dec
sbb
ja
aad
and
push
mov
jno
mov
and
and
scas
mov
inc
pop
shlb
in
aam
pop
out
push
movsb
test
sub
and
cli
mov
clc
cltd
cmp
pop
ja
jg
scas
call
xor
push
insl
mov
lds
cmp
fisttpll
repz
or
dec
jecxz
sbb
insb
adc
ja
popf
cltd
test
sub
movsl
mov
sub
mov
jp
cld
mov
dec
xor
xchg
leave
in
rcll
js
push
nop
jbe
xchg
outsl
movsl
mov
out
cmp
movsl
ss
jge
adc
das
lret
js
movsl
inc
dec
mov
sbb
xor
pusha
pop
mov
mov
popa
shrb
mov
sub
jns
out
mov
ds
mul
arpl
icebp
loope
xor
icebp
or
jae
add
inc
inc
clc
mov
push
lahf
mov
cltd
push
in
jmp
sbb
xchg
fwait
mov
addr16
int
jle
pop
arpl
jge
pop
cli
jo
loop
mov
xchg
incl
aam
jae
fisubrl
or
stc
push
leave
repz
fisttps
cmp
mov
and
aam
pop
ds
jnp
mov
vaddsubpd
out
jno
xor
adc
mov
gs
cmp
sub
int
mov
mov
cmp
imul
xor
test
jmp
cmpsb
dec
dec
mov
and
sub
dec
hlt
dec
addr16
push
cs
inc
and
add
add
or
jno
cltd
dec
shld
in
mov
lret
ret
cmpsl
enter
cld
xlat
data16
outsl
out
jg
cld
jg
jle
cld
pop
dec
mul
or
cmp
mov
inc
dec
dec
call
jp
mov
inc
out
out
aaa
inc
scas
jp
pop
cmp
xorb
sbb
pop
cmp
in
rol
mov
mov
stos
mov
test
movsb
adc
fwait
lds
data16
inc
jno
stos
nop
mov
push
push
std
mov
leave
rorl
adc
sub
mov
mov
or
jl
lods
lret
popf
xor
fsubrp
mov
xchg
push
and
jge
mov
mov
add
jb
mov
int
nop
lods
dec
lea
mov
mov
test
xchg
lock
ret
inc
and
jle
xchg
movl
jae
imul
pop
pop
fcmovb
icebp
movsl
daa
iret
inc
lock
les
outsb
bswap
mov
jns
and
js
insb
pushf
ret
aas
or
pop
test
cwtl
sub
adc
test
sar
xor
push
data16
push
bswap
mov
aas
rcrb
cwtl
adc
or
addl
push
jg
movsb
xchg
mov
push
jecxz
adc
setle
xchg
daa
sbb
push
mov
sbb
fwait
dec
gs
daa
jp
js
mov
cmc
sub
mov
cwtl
xchg
push
stos
xor
fcomps
sbb
or
sub
dec
mov
das
push
mov
add
lods
sbb
shlb
loop
movzbl
jbe
ss
xchg
push
mov
into
lret
lret
sbb
fldcw
push
mov
mov
xchg
xor
scas
push
rcrb
out
xor
mov
or
push
adc
int3
add
cmpsb
mov
jno
pop
cwtl
jg
lea
or
fcomi
ljmp
lahf
test
int
testl
shll
repnz
push
or
mov
xchg
xchg
fildl
mov
add
fs
mov
shll
js
sbb
in
into
dec
adc
into
pop
and
loope
xorb
mov
sub
xchg
shll
int
popf
sub
lea
testl
daa
mov
into
pop
negb
jne
push
dec
out
mov
jae
jnp
jmp
lahf
xor
and
fildl
nop
sub
xor
mov
xor
testl
movsb
and
add
mov
mov
in
rclb
aad
pop
scas
add
out
push
dec
lahf
mov
pop
scas
and
inc
sahf
mov
xchg
cmp
inc
mov
ds
mov
dec
cltd
gs
jl
xlat
nop
cmp
xchg
cwtl
ljmp
cmp
inc
push
sbb
jb
jmp
push
loope
movsb
roll
call
jnp,pn
lods
lods
xchg
jp
sbb
add
dec
je
cmp
jno
insl
pop
addr16
push
mov
mov
mov
push
imul
popa
pop
xchg
shrb
mov
dec
int
in
std
shrl
jne
clc
aad
cld
or
in
and
in
mov
push
daa
sub
fldt
inc
sbbl
sub
mov
inc
lock
ljmp
add
scas
xor
push
push
loop
mov
arpl
sarl
aad
jp
outsb
icebp
sarb
icebp
mov
aaa
cs
leave
jns
dec
mov
jmp
jne
in
jmp
xchg
add
mov
push
bound
movups
or
mov
call
mov
mov
and
mov
loopne
cmp
out
aam
pop
add
mov
pop
mov
cwtl
xlat
jmp
enter
aad
int3
jecxz
push
repnz
jbe
xchg
jp
fsubl
mov
popf
sbb
push
push
jno
sbb
loopne
lahf
mov
mov
cld
lods
jne
sbb
sub
lcall
add
adc
add
sbb
pop
jae
repz
cli
aas
in
mov
ficoml
push
adc
in
rolb
xchg
iret
xchg
js
and
xchg
jnp
and
push
cmpsb
mov
pop
mov
dec
mov
int3
leave
testb
icebp
sub
fisubl
in
push
das
int3
push
mov
sbb
lods
arpl
cmp
and
sbb
insb
nop
pushf
and
mov
cmc
cmp
push
jae
fldenv
nop
pop
lret
mov
mov
jecxz
add
sbbl
jne
inc
clc
aad
lahf
xor
sub
xchg
pop
outsb
inc
test
sbb
sub
adc
pop
fs
push
or
sub
xor
pusha
jo
mov
push
xor
xor
mov
lock
add
mov
cs
push
das
das
and
push
lods
push
xchg
ds
adc
out
dec
jp
outsl
icebp
mov
jne
jg
out
stos
inc
xor
lock
cli
iret
xor
mov
shll
push
ljmp
xor
pop
subb
popl
jbe
flds
ss
pushf
lea
and
push
ret
ret
pop
divb
out
int3
adc
and
lret
and
jge
and
fstpt
lcall
cs
dec
stos
xchg
push
ja
sub
lods
int3
jp
and
and
add
sbb
cmp
mov
dec
sub
push
mov
test
mov
mov
push
dec
add
mov
and
stc
repz
lret
or
fs
add
leave
inc
call
push
test
fs
repnz
or
scas
sbb
stc
mov
sbb
cmp
fs
and
xor
adcb
cmp
loopne
jg
jecxz
cmp
pop
xchg
cli
mov
in
pop
fldcw
outsb
cs
xchg
jecxz
outsb
cmp
sub
arpl
cmp
aad
jo
repz
push
pop
jge
loopne
lea
mov
insb
push
hlt
cs
in
lds
jns
cli
inc
mov
mov
push
pop
dec
in
repz
or
xor
dec
mov
jnp
adc
inc
push
pop
mov
and
mov
add
xchg
stos
test
fsubr
sub
jmp
push
mov
mov
addr16
sbb
outsl
fisttpll
scas
in
adc
xlat
test
pop
and
subb
add
test
mov
jo
lods
mov
enter
cmpl
out
pop
push
push
leave
lcall
sub
enter
mov
xchg
scas
sti
sahf
jl
dec
pop
jne
aaa
cmc
xor
dec
mov
add
enter
aas
data16
mov
mov
mov
sub
out
cld
push
pop
fcom
jp
push
cmpsb
mov
mov
mov
in
sbb
pusha
jne,pn
push
xchg
test
add
mov
pop
pop
fistpl
xchg
add
mov
fs
js
inc
inc
pop
cmp
cwtl
push
jb
and
gs
mov
movsl
hlt
inc
xor
aam
test
cmpsb
mov
insl
xlat
sahf
mov
inc
js
or
mov
aaa
jae
outsl
mov
sbb
add
xchg
jnp
je
xchg
adc
inc
lods
shrl
ljmp
mov
xchg
rcrl
jmp
jnp
lcall
inc
xchg
xchg
inc
mov
scas
xchg
push
cs
jmp
mov
sbbl
mov
pusha
dec
mov
clc
loope
lods
in
stos
mov
sbb
inc
adc
push
in
inc
adc
fnstsw
insb
popf
outsb
call
outsb
cltd
arpl
bound
sub
daa
dec
jbe
insb
jbe
and
add
popf
or
icebp
or
movsl
inc
fisubl
mov
add
mov
add
cld
inc
adc
dec
xor
dec
out
xchg
push
fwait
cmp
pop
fidivrs
decb
fisttps
add
jecxz
lret
enter
sub
mov
mov
add
cmp
xor
out
sub
jl
mov
sar
fcoml
enter
cmc
cvtpi2ps
mov
test
fisubrs
lcall
inc
pop
and
mov
mov
add
fnstenv
pusha
out
dec
out
mov
popf
cld
mov
pop
lock
nop
jg
test
int3
repz
mov
repnz
out
jmp
xor
out
scas
aam
xchg
mov
imul
jne
mov
sarb
sub
mov
stc
and
repz
pushf
xchg
jnp
lods
xchg
ja
outsb
aas
lret
shl
iret
movsl
or
adc
daa
in
sbb
insb
in
adc
jne
sarb
in
mov
inc
and
mov
aad
outsb
inc
pushw
mov
es
pop
pop
add
dec
cld
cmpsb
cmp
insl
xor
in
aaa
sbbb
or
mov
xchg
inc
cmp
movsl
iret
inc
inc
cmp
pop
sbb
fsubrl
inc
mov
les
sub
push
xor
cmpl
test
imul
faddl
inc
outsb
inc
loop
push
sbb
in
mov
in
test
xor
mov
ljmp
pop
adc
push
push
out
adc
daa
mov
popa
scas
pcmpgtw
sbb
call
ds
dec
notb
push
stos
xorl
rol
pop
shrl
add
mov
popa
xchg
ljmp
push
xchg
stos
loope
inc
shrb
scas
sbb
stc
push
sbbb
lret
push
mov
jge,pn
push
and
mov
lds
cli
repnz
lds
mov
loope
pop
cs
les
decb
mov
cmp
aam
sub
adc
mov
adcb
inc
inc
pop
enter
out
dec
mov
test
outsl
pop
lock
outsl
ss
or
inc
movsl
mov
sub
jns
jno
pushaw
pop
lods
out
adcl
sahf
icebp
in
aaa
push
xor
jbe
ficompl
jge
xchg
xlat
shrb
xchg
mov
cwtl
adc
pop
add
cmp
sub
lret
test
mov
xor
sub
jne
test
push
jns
sub
adc
xor
adcl
data16
pusha
cwtl
test
sbb
add
shll
xchg
mov
dec
push
iret
sarb
or
cmp
sub
pop
subb
pminsw
xor
les
pop
enter
pop
sub
xchg
gs
and
pushf
add
jno
test
cmp
or
pop
pop
push
in
int3
mov
xor
cmpsb
mov
push
scas
cmp
sbb
out
dec
out
mov
cltd
mov
pop
cmp
xor
jbe
gs
mov
jg
loop
inc
mov
out
mov
dec
mov
outsb
insl
mov
in
je
and
jae
es
arpl
xor
fdiv
jne
in
test
enter
test
les
movsb
xchg
push
cmp
repz
add
cmc
jnp
sub
out
movsb
mov
push
insl
fwait
cmpsb
push
lds
push
mov
jae
dec
sub
je
cmc
call
xchg
mov
loopne
mov
out
fimull
rclb
test
enter
insb
and
scas
sub
sub
scas
or
cmp
inc
aas
sti
mov
movsl
jmp
jl
stos
and
or
pop
stc
or
inc
test
iret
loopne
sub
pop
out
xor
dec
mov
push
fwait
inc
inc
cwtl
andb
popa
jne
dec
push
mov
push
pusha
cmp
test
mov
lds
mov
in
xlat
mov
jb
bound
inc
cmp
lds
push
xchg
sub
xchg
ret
stos
and
adc
mov
mov
jno
stc
and
pop
add
stc
int
jbe
movsb
xchg
out
inc
pusha
cmpsb
negl
sbb
enter
jecxz
inc
outsb
mov
aas
adc
aam
jnp
jno
scas
aad
outsl
inc
sub
daa
adc
imul
pop
cmpl
jns
sarl
in
inc
int
mov
fsubl
sbb
xor
int
movsl
aaa
push
lea
adc
stos
popf
adc
in
mov
dec
test
out
cmpsl
cs
cmpsl
dec
jbe
das
push
and
insb
cmp
nop
push
xchg
mov
in
loopne
ret
mov
dec
ljmp
ret
in
outsl
and
push
and
out
jecxz
jae
loopne
push
ljmp
jecxz,pt
pop
push
std
imul
inc
xchg
xchg
xor
shl
insb
int
push
adc
or
cmp
pushf
xchg
in
aaa
mov
imul
cmp
mov
aaa
pop
inc
lahf
cld
cmp
popf
icebp
dec
lahf
imul
pop
xchg
roll
das
or
shll
roll
add
aad
fs
out
nop
std
sbb
insl
mov
pop
push
test
cmpsb
nop
pop
insb
pop
cmp
cmpsl
cli
jecxz
les
pop
cltd
push
push
ss
cmp
jecxz
xor
push
popa
mov
or
jb
cmpsl
test
ljmp
mov
jno
xchg
jb
xchg
clc
jne
mov
sbb
addr16
jl,pn
adc
test
dec
cmp
mov
aaa
outsl
fwait
outsb
std
dec
je
xor
inc
ja
sub
fs
repz
push
dec
mov
int3
cld
adc
cltd
aam
pop
mov
subl
in
and
ss
cmp
pop
mov
shrl
in
mov
xchg
mov
xor
or
xchg
cmpsl
mov
fisubl
xchg
jns
aad
mov
cmpsb
repz
mov
cs
mov
or
ss
mov
insb
test
push
cmpsl
adc
popa
xchg
mov
leave
cmp
pushf
mov
cld
push
jne
out
push
test
or
mov
lret
popa
orb
loope
mov
mov
fs
ret
add
add
dec
repz
mov
stos
sub
and
push
mov
sbb
leave
inc
lret
test
testl
pop
sub
sub
popl
mov
jo
add
mull
js
test
dec
mov
idiv
mov
mov
and
jnp
push
mov
mov
adc
decl
out
adc
lock
push
lock
jmp
lock
fwait
std
adc
insb
push
call
inc
jmp
push
pop
xchg
fstpl
pop
push
loop
cmp
nop
or
jno
mov
or
orb
or
push
out
mov
lret
pop
xchg
hlt
stc
cmp
or
lahf
pop
pop
shl
dec
jno
adc
xchg
enter
scas
and
jbe
aas
mov
pop
xchg
in
fmuls
push
push
pop
mov
dec
lcall
push
mov
push
adc
push
mov
xor
insb
push
jecxz
xor
cmp
inc
ficoml
and
jg
shlb
inc
and
pop
inc
imul
fistpll
mov
add
sub
fisttpl
clc
popf
ljmp
dec
popa
sti
dec
dec
lahf
ret
inc
push
push
clc
mov
pop
adc
pop
xor
or
addl
dec
cmpsb
jp
jge
mov
inc
aad
fs
mov
add
inc
rorb
or
inc
add
add
xchg
testb
inc
data16
sub
jns
pushf
sub
incl
xchg
aas
sub
sbb
cmc
jb
aaa
sub
clc
cmpsb
pop
xchg
test
out
pop
jge
mov
popl
das
sub
add
jge
insb
ja
out
pop
loope
cs
lret
outsb
gs
int
sahf
lret
clc
fiadds
gs
std
test
pop
push
jmp
repnz
movsl
ret
lods
out
pop
gs
test
clc
std
setne
or
sub
or
movsl
mov
stc
xor
mov
jb
stos
jnp
fistpll
jnp
xchg
dec
jbe
xchg
lods
test
mov
scas
into
stos
lea
out
out
mov
loope
aam
pop
cli
insb
test
add
cmp
xor
dec
xor
mov
cwtl
adc
inc
jecxz
pushf
xchg
push
push
pop
out
jecxz
pop
pop
out
hlt
lods
in
inc
popa
and
xchg
mov
clc
xchg
xor
je
mov
jge
or
stc
mov
jmp
outsl
cmp
push
pop
sub
dec
inc
adc
test
test
push
jp
cmpb
adc
dec
add
push
repnz
mov
test
imul
push
inc
ret
negb
push
dec
addb
or
xorb
jp
jnp
test
push
push
clc
shrl
popf
addb
push
mov
fwait
push
rcr
ret
jecxz
adcl
jecxz
mov
fstpl
loope
adcl
xchg
push
pop
cltd
mov
xor
movsb
pusha
or
add
idivb
or
cli
andb
imul
imul
pusha
repz
out
and
lods
push
lea
fstps
out
outsl
xor
divl
ds
fstp
push
pop
outsl
inc
fsubrs
sbb
aaa
push
daa
imul
pushf
ja
dec
xchg
add
mov
mov
js
mov
add
ljmp
cmp
dec
add
pop
mov
in
cmp
mov
jb
in
push
mov
sbb
aad
insb
popf
test
inc
les
imul
cmp
xor
les
lret
adc
jo
sub
out
cmp
cs
add
loop
outsl
cmp
test
pop
pop
and
cmp
jne
jae
adc
jae
in
xor
nop
xor
xchg
sar
into
out
or
pushf
test
test
dec
mov
xor
xor
adc
cmp
mov
enter
cmp
enter
shrb
popw
nop
jge
and
push
push
shl
sbb
mov
lock
int3
lock
dec
mov
adc
mov
ret
arpl
insb
js
cwtl
and
lock
cld
mov
mov
test
mov
loopne
cmp
push
or
test
data16
xchg
stc
lahf
inc
mov
sar
mov
aad
add
jno
push
add
arpl
gs
add
test
call
mov
mov
sbb
xlat
mov
sbb
xor
jnp
gs
add
jbe
dec
loop
xchg
decb
gs
push
push
mov
gs
fists
cmp
push
push
hlt
aaa
cs
aaa
lret
sar
and
enter
xchg
add
add
sub
call
or
sarb
pop
int
stos
dec
lods
sbb
add
lods
ja
fistl
popa
adc
das
js
pop
mov
push
pop
cltd
mov
scas
jne
mov
sbb
popa
and
idivb
inc
sub
fidivl
rolb
aam
inc
shrl
xor
pop
fldcw
pop
adc
mov
jae
pop
lods
int3
mov
outsl
fidivrs
gs
nop
xchg
xor
addl
cli
mov
cmp
lcall
movsb
daa
pop
inc
mov
fsubp
mov
sbb
es
repz
ret
mov
jno
jle
push
ss
movsl
push
mov
je
add
sub
mov
xor
push
imul
dec
icebp
dec
xchg
mov
lods
pop
push
jl
mov
sbb
adcb
push
clc
and
mov
out
jecxz
ss
int
jge
push
leave
mov
cld
iret
jmp
in
fcompl
lcall
jecxz
push
into
sub
pop
scas
xchg
jbe
ret
push
ret
mov
jle
pushf
pushf
sub
je
sbb
sarb
jo
es
ret
js
pop
pop
insl
test
xor
dec
mov
cmp
insl
cmp
push
or
add
lods
dec
mov
data16
loope
push
xchg
sarb
cs
jp
mov
daa
aam
pop
loope
popa
std
mov
and
xchg
testl
cmp
mov
adc
or
cmp
push
call
lds
push
mov
lcall
stos
adc
cs
insw
or
cmp
into
mov
sbbb
sub
stos
add
xor
xchg
out
and
cli
ret
inc
jnp
xchg
push
pop
aaa
or
or
pop
pop
jmp
cmp
mov
data16
mov
je
les
leave
xor
sti
or
adc
push
fmuls
sbb
or
sub
test
mov
push
xor
popf
mov
jns,pt
imul
cld
fsubr
adc
call
cmc
pusha
orb
fdivrl
cmp
out
outsb
cltd
ret
stc
push
hlt
std
lret
mov
xlat
in
add
mov
addr16
adc
or
lcall
insb
push
mov
mov
outsl
sub
sub
sahf
pop
jo
pop
out
inc
in
shl
stc
push
vmwrite
mov
jmp
pusha
sbb
loop
cwtl
mov
lods
cmp
pop
pop
repz
pushf
or
xchg
and
mov
clc
aam
int
add
fdivr
mov
jo
shll
xor
pop
pop
adc
bound
lock
jmp
lock
xchg
pop
aaa
daa
loope
jnp
cltd
loop
dec
adc
inc
sub
jns
jno
stc
sub
scas
imulb
loope
in
pop
xlat
insl
cmp
rcll
or
dec
add
fimuls
adc
jo
pop
sti
mov
int3
mov
add
mov
sub
adc
cmpsb
lcall
jne
dec
xchg
aaa
push
inc
mov
xchg
adc
daa
stos
pop
insl
subb
xchg
and
arpl
orb
cltd
pop
xor
mov
fmull
inc
mov
pop
xor
mov
mov
inc
mov
stc
cli
nop
sub
pushf
mov
test
mov
push
dec
mov
fstps
jmp
fsubs
loopne
testb
lock
sub
jo
mov
sub
mov
pop
mov
xor
lods
prefetcht0
cwtl
cwtl
mov
cmp
lret
jne
adc
cmp
insb
push
shr
inc
fsubrl
out
pushl
test
pop
movsl
jmp
aas
mov
jbe
xchg
jge
pop
sbb
sbb
lock
in
sbb
mov
scas
jle
sub
mov
dec
push
stos
pop
rclb
xor
cwtl
xor
dec
mov
sbb
in
insl
popf
dec
pop
pop
mov
inc
mov
cmpsb
cld
stos
pop
jae
inc
mov
mov
cmc
les
dec
lret
mov
adc
inc
mov
lret
repz
cmp
out
test
mov
fldenv
or
stos
fsub
sarl
inc
dec
xchg
push
sarb
inc
out
lret
dec
sbb
mov
imulb
mov
jns
inc
push
aaa
pop
inc
mov
iret
cmpl
ret
pop
loop
data16
aad
lcall
out
movsb
loop
stc
aas
fimull
mov
in
das
mov
jnp
mov
mov
dec
fildll
frndint
xchg
test
inc
nop
jmp
int
lahf
inc
out
and
add
lret
mov
call
cltd
xor
add
mov
fistpl
mov
test
rcrl
jmp
push
cmpl
testl
sub
sub
or
dec
dec
lock
xor
or
in
fcoml
push
cmp
adcb
in
hlt
lods
lret
add
js
pop
int3
jne
sub
cmp
mov
pusha
add
pop
fdivl
cmp
jae
int3
orb
es
xlat
les
idivl
xlat
shl
adc
imul
sti
jmp
fwait
ds
inc
dec
sbb
and
cmc
dec
dec
in
sahf
cmp
dec
mov
fadds
inc
jae
mov
xor
cmp
lds
popf
out
mov
stos
movsl
adc
out
sbb
adc
lahf
sub
or
lret
lods
ljmp
xchg
xlat
call
mov
xchg
sub
inc
cmc
xor
lock
jecxz
int
dec
out
pop
fsubl
call
arpl
out
inc
jne
mov
push
mov
scas
xor
add
and
leave
mov
xor
inc
insb
push
arpl
add
lret
adc
push
sub
popf
sbb
loop
fdivrl
lahf
lock
xchg
in
dec
sbb
adc
sbb
lock
fcmovbe
ret
add
sub
pop
sbb
aaa
mov
jnp
add
repz
scas
mov
pop
fldenv
into
scas
nop
xchg
mov
stos
in
cld
pushf
mov
and
js
sub
mov
je
mov
decb
jge
xchg
push
inc
jno
adc
push
xor
add
cld
adc
dec
nop
mov
lds
xor
lahf
mov
andl
adc
dec
pop
push
pop
movsb
leave
pusha
push
xchg
jno
or
mov
jo
fcompl
dec
jb
scas
fcomps
inc
mov
or
leave
add
ja
pop
test
call
sbb
sub
es
xor
pop
xor
mov
popf
mov
push
push
movsl
mov
cwtl
or
std
or
jp
pop
ret
jecxz
xor
imul
movsl
int
cmc
icebp
add
psrad
push
pusha
sub
loopne
push
jns
repz
mov
loop
jnp
cmpsl
aaa
cmpl
aas
mov
aam
jp
js
into
jg
rcr
add
lret
xchg
out
mov
test
adc
das
push
add
vrsqrtss
and
jmp
cwtl
std
or
inc
jl
xor
stc
sub
out
dec
cltd
xchg
push
sbbl
jge
adc
push
aas
lret
xchg
add
xchg
mov
dec
adc
or
add
push
dec
in
pushl
push
xchg
imul
lret
fdiv
pop
sub
push
and
dec
pop
fptan
fwait
popa
sbbl
lods
les
insb
out
les
xchg
test
popf
xchg
sbb
addr16
inc
pusha
outsl
push
repz
mov
push
or
mov
xchg
test
sbb
out
stos
mov
adc
push
pop
and
inc
jno
adc
add
sbbb
or
jecxz
jp,pt
jge
xor
cmc
imul
and
fldcw
sub
lock
aaa
shlb
out
ret
and
scas
loope
sub
incb
mov
cli
add
add
ret
adcl
push
jb
fimull
push
xor
xchg
test
sub
xor
jo
add
lock
scas
ret
scas
sub
or
dec
push
jnp
outsl
rolb
out
ret
cmp
jnp
out
rolb
adc
or
add
push
or
repz
lds
dec
xchg
and
or
sbb
xor
gs
fmul
rol
mov
mov
in
or
gs
and
and
pop
push
test
and
fs
xchg
push
and
insl
push
mov
inc
sbb
xor
fcompl
dec
loop
push
or
cwtl
pushf
aad
cmp
xor
ljmp
ja
inc
adc
scas
outsb
pusha
adcb
or
jle
and
add
or
int3
pop
inc
mov
cwtl
xor
dec
mov
sub
inc
test
push
outsl
xchg
cmpsb
shll
dec
ljmp
aaa
enter
jnp
add
cmp
ret
fwait
sub
fadd
add
and
pop
ret
fcmovu
arpl
jno
fadd
cld
roll
fnstenv
arpl
jl
mov
movsl
imul
loope
std
dec
xlat
mov
inc
xchg
sub
pusha
sub
add
lea
shll
mov
dec
pop
xor
push
out
adc
mov
arpl
ljmp
pop
jle
sbb
lods
push
mov
dec
pop
test
fs
inc
leave
jo
and
scas
mov
dec
push
cmpsb
jno
pop
mul
mov
mov
mov
dec
mov
sbb
pop
sub
es
push
xchg
mov
lcall
mov
push
sub
adc
sub
stc
mov
push
dec
sbb
mov
insb
xchg
sub
pop
jge
std
aaa
xor
subb
ja
lods
and
and
xchg
arpl
cmp
mov
cmp
push
inc
mov
ret
scas
arpl
dec
movsl
sbb
orl
inc
and
mov
mov
push
fwait
pop
mov
dec
stos
pop
dec
jo
sub
aad
sbb
mov
fwait
shrb
fnstsw
sti
inc
testb
scas
loop
outsb
aaa
xor
lods
sbb
push
popa
mov
mov
stos
mov
sbb
sbb
mov
add
lods
rol
cmp
xchg
jl
js
out
adc
sbb
push
cwtl
inc
add
insl
ret
cmp
lock
mov
out
jo
dec
sbb
psubusb
das
fcomp
or
pop
or
sbb
repz
lock
sub
mov
mov
call
cmp
xor
add
subb
aad
loop
sub
aas
movsb
gs
lcall
push
movsb
shlb
rclb
jb,pn
mov
fiadds
cmovs
mov
push
test
pop
nop
divl
adc
mov
mov
or
jg
mov
inc
jnp
inc
cs
shrl
jne
inc
push
mov
lret
shl
sub
daa
cmpsl
ds
inc
cwtl
pop
jge
mov
push
sbb
or
leave
or
fsubrl
call
mov
outsb
imulb
pop
daa
sbb
pop
out
add
lahf
dec
repz
push
or
jo
inc
xchg
push
dec
add
jae
and
cmp
daa
fistpll
and
inc
add
jmp
clc
hlt
push
div
inc
push
inc
jbe
jno
mov
fbstp
dec
and
and
mov
lock
push
movsl
cmpsb
int3
scas
sub
in
je
insl
dec
mov
test
fwait
cmp
jmp
mov
pop
push
mov
mov
repz
imul
out
sub
mov
sub
cmp
xor
push
into
pushf
iret
and
sbb
nop
out
in
xchg
fstpt
out
inc
notb
ret
jns
bound
addr16
nop
sahf
push
xchg
out
sub
mov
and
mov
push
mov
xor
fucomp
and
cmpsb
adc
adc
sbb
lods
sbb
stos
add
and
es
and
lret
mov
or
pop
loope
mov
mov
jns
dec
sub
test
ljmp
stos
push
dec
jle
mov
add
add
lods
pop
mov
jmp
mov
fnstcw
out
push
jo
jge
add
lcall
mov
sbb
xor
xor
bound
or
add
pusha
cmp
pop
add
xor
push
mov
push
into
jle
sbb
push
loopne
mov
push
in
adc
out
push
test
hlt
faddl
mov
outsb
add
ss
inc
int3
dec
sbb
xor
pop
xor
in
jl
sbbl
and
test
in
xor
jae
lea
pop
sbb
xor
popl
rclb
es
inc
iret
andl
or
inc
xchg
jg
add
adc
les
rcrl
xchg
or
cmp
xchg
test
sbb
and
ds
xchg
out
popf
add
into
out
jno
lcall
sub
push
mov
sbb
sti
push
ret
cmp
jbe
mov
mov
pop
arpl
jmp
in
add
fcomip
imul
mov
adc
in
ret
lret
nop
xchg
frstor
lods
or
sbb
sar
xor
xchg
mov
nop
jns
in
jns
sbb
mov
push
and
sbb
ret
jl
movl
cmpsl
add
test
and
cmpsb
repnz
and
xor
popf
add
jns
scas
mov
int
iret
sub
cmp
push
mov
pop
or
and
inc
ror
or
iret
xor
dec
inc
sti
popa
popa
cmp
mov
xchg
test
sub
adc
bound
scas
aad
shll
in
imul
out
xchg
push
xchg
lds
scas
loope
mov
sbb
push
cs
call
loop
subb
orb
pop
int3
xchg
pop
push
cmpsb
or
push
sub
cmp
pop
adc
add
loopne
push
xor
maskmovq
mull
mov
sub
mov
or
fists
imul
out
dec
xchg
lret
sub
sub
scas
push
scas
pop
dec
mov
pusha
push
xor
inc
inc
fadd
xor
lods
imul
ret
sets
mov
sub
pop
and
js
jne
mov
push
xchg
cmpsl
inc
sub
mov
mov
and
addl
sub
icebp
adc
mov
xchg
sbb
inc
mov
arpl
je
insl
sbb
fwait
push
ret
test
inc
mov
ljmp
mov
mov
xor
mov
jmp
rorb
ljmp
push
jg
lret
push
ret
jnp
xlat
ja
lods
cmp
cli
sub
and
loope
push
rorb
arpl
adc
les
push
mov
pop
fcoms
cmc
cmp
push
sbbb
sub
das
inc
adc
push
fisubrs
sub
and
xchg
push
roll
lahf
cmp
and
fdivp
and
mov
stc
sahf
inc
loopne
loop
movsl
dec
push
fst
fnstcw
mov
xor
mov
sbb
leave
push
lahf
loope
push
inc
shlb
push
push
cwtl
leave
add
mul
mov
mov
movsb
mov
adc
js
dec
ret
cmp
stos
sub
cmp
xchg
xchg
mov
fadd
cmpl
cmp
test
push
adc
cmp
je
pop
pop
dec
shrb
daa
enter
cli
add
cmp
mov
adc
xlat
insl
pop
adc
pop
vphadduwd
xor
daa
dec
or
rcrl
pusha
dec
movsl
mov
mov
popa
sbb
sbb
jle
sub
adc
dec
cmp
inc
idivb
stos
negl
sbb
fisttps
mov
fsubl
pop
int3
mov
incl
mov
pop
xor
pop
cmp
jle
xchg
mov
xchg
outsl
stos
bound
or
sub
xor
iret
mov
loope
iret
and
cmp
fists
lahf
ja
aaa
jns
jl
enter
jl
outsb
in
mov
lahf
dec
xchg
jno
dec
jnp
jnp
fisubrl
cmp
add
inc
insb
insl
push
jp
cld
jbe
lds
vpslld
adc
outsb
rcrb
jge
loope
pop
mov
xor
dec
mov
cmpl
out
cs
mov
ret
xchg
adc
mov
pop
sub
mov
or
push
pop
int
inc
fs
dec
xchg
cwtl
fisttps
xor
sub
pop
add
into
add
jp
mov
movsl
lds
and
or
les
push
dec
inc
sbb
mov
sbbl
div
sbb
mov
mov
dec
cmp
scas
mov
leave
mov
or
dec
lcall
out
jl
loop
mov
mov
orb
xor
pop
scas
sti
sub
or
lret
add
divb
jg
lods
in
sub
fldcw
jmp
fisttpl
les
js
and
out
call
insb
leave
sti
jno
addr16
push
cmp
push
lds
mov
imul
sbb
dec
mov
inc
jb
sti
dec
xchg
jbe
inc
mov
in
loopne
clc
test
mov
jecxz
pop
sti
add
imul
xlat
jae
test
xor
out
dec
push
or
jne
stos
cmpsb
jno
je
popa
fwait
push
lods
adc
dec
addr16
loopne
insb
js
mov
inc
aas
cmp
mov
mov
fdivrl
ja,pn
loope
cs
stc
add
add
pop
lret
and
mov
in
jmp
mov
lret
xchg
mov
leave
stos
mov
mov
imul
jg
nop
adc
adc
push
push
cwtl
pop
mov
push
js
inc
mov
les
pop
push
push
push
mov
mov
or
xor
adc
or
mov
mov
and
ja
pop
insb
clc
adc
xchg
xchg
mov
pop
pop
ret
and
call
inc
pop
loop
aam
mov
fdivs
negb
pusha
inc
arpl
cmp
lods
lahf
pop
and
scas
sbb
ret
push
rclb
cmpl
push
pop
aam
xor
and
or
outsb
cli
mov
movsl
lods
movsb
xor
rcll
push
lods
adc
pusha
jg
add
pop
imul
pop
mov
cwtl
lahf
pop
popa
sub
mov
mov
insb
adc
add
mov
jmp
sub
mov
pop
sub
xchg
int
adc
xor
clc
out
add
sbb
lods
sub
xor
xor
mov
jecxz
sbb
enter
jg
int3
mov
jne
pop
mov
cmp
mov
rcrl
in
xor
loopne
mov
lea
xchg
or
mov
ljmp
jae
pushf
and
push
push
cmpsl
pop
outsb
sbb
dec
aas
pop
inc
jg
lods
push
xchg
pop
jge
lahf
pop
inc
and
mov
mov
movsl
ret
int
std
shll
push
inc
aam
stos
outsb
jo
faddl
push
push
scas
pop
mov
adc
cmp
pop
stc
xchg
adc
pusha
jmp
cmp
dec
jp
xor
jne
add
mov
xor
and
sbb
pmaddwd
and
mov
push
add
inc
fcoml
push
ds
lret
gs
push
mov
or
or
movsb
je
push
pop
mov
add
shll
jp
dec
nop
pop
cmp
xchg
enter
adc
mov
xor
mov
fdivrs
int3
xor
push
sub
mov
pop
fldcw
sub
call
clc
add
cmp
outsl
jbe
jmp
adc
lods
lret
adc
cmp
mov
cwtl
fwait
push
lret
negb
adc
push
aaa
iret
jp
xorl
jp
loope
bound
pop
pop
push
gs
cmp
xchg
sbb
jmp
stos
rcll
pop
jnp
push
fdivr
sub
insb
push
sbb
imul
adc
mov
call
xor
and
lahf
gs
or
or
int
cmpsl
fistps
jae
neg
add
in
ret
pop
cmp
or
out
les
fistpl
sarb
movsl
dec
arpl
test
nop
inc
adcb
jle
add
fdiv
fiadds
or
mov
sub
mov
mov
push
and
push
cld
sub
jle
mov
sbb
mov
insl
xchg
adc
push
filds
icebp
fstl
jp
adc
call
leave
daa
cwtl
iret
mov
adc
push
add
push
mov
mov
popf
adc
scas
arpl
fcmovbe
add
call
orb
jae
add
or
xchg
sbb
sbb
aas
add
pushf
pop
mov
aas
cli
pusha
sar
pop
and
lock
popa
sub
sbbb
sub
jbe
mov
fbstp
cmp
mov
or
test
dec
es
in
mov
sbbb
cmpsb
aas
popf
fldl
mov
pop
aas
daa
and
or
jge
mov
mov
mov
and
push
jp
xchg
test
orb
test
cltd
mov
and
dec
ficoml
adc
or
add
or
adc
cmc
mov
repz
mov
push
cld
loop
aad
jmp
dec
add
or
add
mov
push
pop
pop
and
mov
adc
xchg
ret
cmp
ja
andl
insl
cmpb
test
sbb
mov
pop
xor
clc
mov
jns
xchg
adc
xor
iret
jnp
shlb
push
lret
xor
stc
cmp
add
stos
popf
mov
fidivs
and
cmp
shrl
cmpsl
std
ret
or
or
aaa
loopne
xchg
add
sbbb
push
sarb
jle
fwait
data16
enter
daa
int
jbe
in
push
out
push
idivl
sti
pushf
adc
negl
imull
fldcw
xchg
test
fidivrs
insb
push
sub
cmp
sbb
jecxz
icebp
stc
sarl
int3
int
shr
aas
pushf
cld
mov
xchg
cmp
mov
scas
adc
dec
shl
or
lahf
push
iret
cli
addr16
insb
out
dec
cmp
dec
imul
loopne
outsb
push
stc
cmc
sbb
dec
mov
popa
jecxz
inc
outsb
ljmp
repnz
stos
iret
or
idiv
push
xchg
popa
es
and
jnp
mov
push
gs
dec
cmp
push
clc
out
mov
mov
or
ds
adc
scas
out
or
insl
xlat
hlt
pushf
pop
out
lahf
insl
out
push
loope
dec
iret
addr16
mov
mov
jns
scas
jb
shl
dec
movsl
fidivrs
outsb
lret
repz
out
adc
and
aam
jmp
std
je
fcoml
clc
loope
mov
insl
in
and
int
mov
inc
sbb
out
mov
cltd
fxch
mov
inc
lahf
lds
inc
lea
mov
push
test
sub
pusha
add
push
shl
rcrl
stos
adc
pop
mov
clc
mov
test
or
fbld
sub
jmp
fsubrl
scas
xchg
jno
and
aam
aad
test
cmp
mov
fisubs
sbb
adc
adc
dec
ja
jl
mov
mov
repz
add
adc
lds
and
xchg
jecxz
inc
mov
int3
les
mov
scas
test
jnp
add
neg
movsl
stos
lods
mov
sub
mov
addr16
mov
sbb
push
pop
aad
stos
jno
mov
loop
shrb
push
mov
addb
adc
or
sahf
dec
sahf
mov
icebp
sbb
cli
test
iret
cld
hlt
or
inc
xlat
mov
xor
xor
adc
adc
jg
jg
or
pusha
rorl
in
incl
mov
cwtl
cwtl
dec
in
into
inc
subl
mov
dec
and
mov
xchg
and
jge
fsts
push
mov
loopne
mov
iret
adc
adc
and
jge
dec
push
pop
or
jl
and
add
mov
sub
inc
xlat
add
sarb
test
sbb
jle
push
and
push
push
sbb
daa
iret
dec
in
xchg
mov
fnsave
adc
loope,pt
add
add
data16
movsl
daa
popa
inc
push
cs
sub
xchg
lods
add
xchg
imul
jmp
hlt
arpl
cmp
add
out
cld
shlb
mov
jb
test
jle
pushl
in
cmp
movsb
cmp
ds
mov
xchg
or
dec
lahf
loope
in
push
pusha
rorl
testb
jae
sbb
jbe
pmaddwd
push
sarl
pushf
leave
jp
out
mov
int3
in
lock
xchg
mov
lock
cmc
add
inc
iret
lods
sbb
or
or
jecxz
xorb
dec
xchg
es
cs
fwait
sub
loope
jle
movsl
leave
and
jnp
std
xchg
aad
scas
lahf
inc
shl
jp
jge
xor
loop
insl
decl
ret
fmuls
sbb
cmp
jg
in
aaa
inc
das
jle
pop
rcrl
push
lahf
mov
dec
in
mov
mov
in
inc
bnd
or
inc
daa
lret
mov
cwtl
lock
and
js
pop
cli
pop
xor
mov
fs
in
dec
dec
mov
cmp
dec
inc
test
lret
or
adc
nop
loope
pop
bound
enter
jge
sub
pushf
test
ss
mov
cmp
sbb
add
je
sbb
sbb
hlt
mov
mov
loop
push
mov
push
cmpsl
xchg
xchg
xlat
clc
adc
or
popa
lock
movsb
jae
popa
lock
mov
push
loop
cmp
pop
dec
scas
xchg
out
fsubs
cmp
or
in
pop
outsb
cltd
push
jp
push
xor
xor
xor
cli
or
pusha
and
push
fimull
out
mov
xchg
repnz
mov
int3
ds
inc
and
push
in
outsl
sbb
stos
in
mov
cmpsb
mov
jmp
sbb
xchg
pop
xchg
shrl
cwtl
mov
ffreep
dec
mov
fistpl
jnp
sti
sbb
loope
pop
int3
cmp
adc
mov
add
push
and
push
fwait
enter
pushf
cld
jle
loope
mov
mov
sti
sbb
mov
mov
gs
mov
sub
sub
inc
mulb
lock
pop
loope
cld
scas
xchg
nop
pop
mov
std
out
xlat
mov
incb
sarb
fisubrl
xlat
cmp
cmp
cmp
adc
mov
or
add
int
mov
or
cli
add
pop
testl
dec
into
inc
lods
dec
xchg
arpl
notl
lock
fwait
mov
andb
push
or
lea
push
cmp
jecxz
pop
imul
jo
pop
rcrl
cmp
lods
dec
hlt
add
sbb
into
dec
popa
add
lcall
add
mov
mov
jmp
pusha
cmp
lea
mov
shrb
or
fptan
and
mov
inc
mov
push
dec
and
shl
push
subb
cmpl
decb
clc
xor
add
arpl
and
sub
push
roll
mov
mov
push
fabs
add
pop
imul
popa
sbb
clc
lock
icebp
fmuls
dec
jp
sbb
add
mov
mov
rep
rolb
fimuls
addr16
mov
adc
add
les
stos
std
pop
cmp
jg
jg
jecxz
cmp
push
cwtl
leave
push
popa
push
mov
sbb
fisttpll
mov
icebp
jne
push
push
mov
xchg
leave
push
jecxz
stos
xor
popl
mov
cmp
cwtl
sub
push
mov
repz
out
fwait
inc
aaa
sar
push
xchg
fldt
pop
outsl
add
xor
add
popa
pop
pop
add
daa
test
jp
imul
je
lea
lock
add
out
and
sbb
rclb
xor
rcll
jmp
push
xchg
leave
jbe
and
dec
adc
mov
pop
je
out
dec
ja
aaa
xchg
loopne
cltd
adc
hlt
inc
inc
inc
xlat
gs
sbbb
shll
into
sahf
ret
cmp
rcrl
daa
loopne
adc
push
and
rolb
movsl
int3
inc
imul
xor
adc
adcb
in
in
popa
lock
in
test
add
jp
into
sti
cmpsb
add
mov
and
stc
mov
out
jb
push
pop
sub
rcrl
cwtl
jnp
pop
sbb
shll
pop
sbbl
mov
inc
push
dec
push
mov
je,pn
cltd
loop
jle
rclb
daa
sahf
out
jecxz
mov
jg
mov
or
mov
decl
repz
adc
incl
mov
xchg
push
push
push
push
xchg
jne
shl
and
push
and
xor
cmpsb
imul
movsb
mov
aam
scas
xchg
lcall
push
xor
fcomps
mov
out
repz
out
gs
inc
iret
negl
cltd
addr16
cltd
jns
fidivrs
sbb
jo
mov
pusha
push
or
xchg
or
pop
dec
xchg
int
das
xchg
popa
stos
mov
mov
mov
pop
enter
scas
add
push
in
adc
insb
push
fdivrl
xor
dec
dec
popa
flds
sti
pop
push
mov
dec
shrb
inc
stc
mov
icebp
pop
das
mov
in
dec
inc
push
leave
cmp
fcmovb
jo
movsb
xor
lcall
jno
int
andb
mov
stc
adc
ret
movsl
dec
dec
dec
bound
mov
mov
push
je
lcall
insl
repz
mov
ret
add
inc
xchg
arpl
xlat
je
jmp
push
js
xchg
scas
lret
cmp
scas
cmp
cs
test
mov
imul
lds
cmp
std
orl
xorl
es
data16
xor
push
stc
push
cmp
aaa
mov
je
test
sub
sahf
xchg
xchg
jb
lahf
adc
mov
insl
and
ja
sub
sbb
sub
fisttps
pop
and
iret
mov
rcl
loopne
push
and
mov
cmc
lock
lds
repnz
jge
negl
xor
xorl
sti
rol
data16
xor
push
jle
and
sahf
lods
mov
aas
cmp
aas
orb
cmp
in
rclb
mov
shlb
and
int
add
and
cmp
daa
or
scas
in
addr16
inc
cmp
pop
mov
cmc
loop
fs
iret
in
neg
mov
xchg
push
jb
repnz
int
imul
cmp
jb
mov
jecxz
out
fbstp
popf
shll
mov
pushf
cli
fld
clc
jecxz
and
fbld
enter
jle
dec
cmc
push
xor
mov
sub
pop
mov
push
rolb
pop
xor
adc
xchg
xchg
daa
jecxz
sti
jno
cmpsl
repnz
sub
jmp
xchg
push
jae
iret
lcall
push
stos
lods
imul
mov
jge
cwtl
cld
mov
scas
mov
scas
clc
mov
gs
or
fnclex
dec
dec
mov
sub
jnp
inc
movsl
into
dec
icebp
dec
pop
jne
out
mov
lods
jnp
and
push
loope
jo
das
cwtl
jae
iret
stos
jnp
xchg
jl
or
add
scas
hlt
aas
iret
and
lcall
cmpsl
stc
push
sub
and
push
push
jp
out
mov
loopne
mov
pop
sbb
adc
and
jle
cli
mov
pop
cli
inc
add
mov
dec
push
jle
hlt
popf
and
xchg
mov
shll
insl
in
sbb
sahf
pop
test
xor
imul
sarl
pop
jo
das
aad
xchg
test
pop
xor
sub
lds
idivb
cmp
arpl
scas
mov
repnz
icebp
in
pusha
or
into
or
xchg
mov
ljmp
lock
insl
xchg
jo
push
outsl
sub
imul
outsb
mov
movsb
push
leave
cmp
pop
sbb
mov
jg
aam
aam
out
imul
jecxz
arpl
mov
xchg
lcall
int3
fsub
push
mov
mov
jp
sub
xchg
and
les
loope
clc
sbb
out
test
jbe
out
rorl
out
and
insl
mov
mov
test
pop
movsl
repz
inc
inc
rolb
clc
adc
fnstcw
sahf
mov
sbb
int3
mov
jne
aaa
push
pushf
and
cmp
sub
jb
mov
dec
bnd
sbb
mov
dec
pop
cmpsl
daa
popf
cmpsb
call
in
xchg
repz
arpl
ret
lret
cmp
mov
jp
movl
pop
imul
icebp
add
pop
addr16
mov
jecxz
inc
pop
pop
cltd
fnstenv
imul
into
cmpps
xor
outsl
incl
pushf
dec
fisubrs
stc
jge
imul
mov
mov
shll
mov
fldcw
out
and
imull
in
rcl
cld
mov
sbb
repz
mov
popa
outsl
jle
or
push
stc
dec
testb
je
jne
dec
mov
fnstenv
pcmpeqw
orb
mov
pushw
jno
pop
mov
cmp
test
dec
adc
dec
inc
pushf
sti
pop
clc
data16
enter
decb
sbb
cmp
nop
cmc
sti
pop
sbbl
insb
pop
pop
and
pop
sub
sti
push
push
mov
xchg
testb
jno
dec
mov
xchg
push
in
pusha
sub
mov
imul
jae
adc
xor
aaa
insl
popf
push
sbb
sbb
xlat
fisubs
jnp
fwait
int
push
sub
cmp
xchg
mov
push
mov
push
pop
ja
xor
xchg
insl
out
int
xchg
mov
fs
xor
test
and
jns
cmpl
inc
inc
fistl
dec
bound
adc
ret
xor
xchg
mov
dec
js
outsb
add
pop
sub
mov
fucomip
xchg
mov
enter
push
mov
pop
pop
les
and
cmpsb
test
add
cltd
dec
inc
fistpl
push
lahf
mov
fwait
mov
sub
mov
and
adc
shrb
adc
adc
cli
push
gs
or
pop
mov
add
cmp
xchg
sub
pusha
xchg
push
nop
jl
test
push
mov
sbb
sbb
inc
fidivl
cli
pop
cmc
ds
inc
outsb
call
pop
adc
and
xchg
lret
popa
fsub
sub
adc
sub
pop
and
gs
das
iret
push
fsts
aaa
ljmp
mov
fsts
mov
inc
loopne
outsb
mov
jle
and
add
lret
fmuls
add
pop
mov
mov
int
shl
add
sbb
jg
pop
mov
movsb
adc
fs
jp
xchg
popa
xchg
mov
push
shl
jp
jb
rcrb
jecxz
test
add
mov
or
mov
fisttps
jmp
fsub
add
bound
nop
push
pop
loopne
dec
jp
xor
xor
jae
test
repnz
inc
inc
shrl
int
es
lock
sub
ljmp
inc
mov
jecxz
dec
sbb
nop
pop
dec
mov
rcl
pop
lcall
pmaddwd
pop
and
shlb
cmp
dec
adc
lods
in
fwait
loopne
xorl
movsb
mov
leave
int
xchg
sbb
fwait
push
xlat
in
sub
mov
cli
sub
push
push
in
mov
aad
stc
push
cmc
sub
fsub
cmp
push
popf
jns
push
dec
mov
das
lret
aaa
sub
mov
add
insb
nop
es
fnsave
push
shlb
mov
dec
cmpsb
ja
outsb
add
mov
inc
clc
cltd
inc
imul
dec
lock
enter
jmp
jb
dec
push
mov
inc
cmpsl
dec
je
dec
ficoml
rcrl
inc
push
setae
xchg
mov
insb
xor
pop
jg
bound
push
loop
out
es
das
mov
je
clc
aaa
out
fs
or
popf
mov
inc
dec
es
fdivr
das
and
ds
jb
int
dec
loopne
mov
cld
jl
ja
xchg
out
shll
sahf
push
cmp
dec
push
test
cld
es
mov
xchg
in
imul
push
and
fimuls
js
out
sbb
arpl
loope
mov
out
ja
cmp
fcomps
jnp
pop
insl
push
dec
cmpb
xlat
dec
aam
movsb
or
mov
dec
dec
xchg
gs
in
mov
es
mov
lahf
sbb
into
cwtl
fwait
lret
cli
jnp
fbstp
neg
mov
arpl
cmc
hlt
repnz
jnp
enter
out
push
mov
xlat
loope
dec
inc
jmp
inc
sbb
mov
das
ds
xor
cmp
sbb
sub
in
cltd
pop
sub
jno
push
sub
mov
ret
mov
test
dec
ss
pop
mov
pop
cmpl
shll
xlat
arpl
lods
mov
popf
testl
shlb
popa
fcmovnu
outsl
mov
shr
fidivrs
leave
sbb
icebp
inc
jbe
inc
test
jg
insl
xchg
pop
mov
dec
scas
dec
mov
inc
outsb
cmc
test
xchg
jle
ss
aam
cld
inc
pop
jmp
mov
mov
pop
cltd
imul
ret
lahf
test
popa
add
pop
cld
scas
sbb
or
cmpb
stos
dec
inc
jecxz
xor
lret
xor
dec
xchg
jge
dec
or
jae
add
repnz
jbe
dec
rcl
sub
sub
xor
ljmp
cmp
inc
fdivr
xor
out
int
into
xor
or
in
xchg
int
inc
nop
std
into
push
cmc
pop
mov
sbb
dec
sbb
stos
insl
sbb
dec
test
or
leave
mov
popf
jb
loopne
sti
aam
sbb
mov
sti
push
xor
pop
call
inc
shll
out
lock
std
gs
jge
push
lods
call
push
inc
pop
and
ret
inc
mov
jns
scas
or
mov
and
xor
cmp
aam
hlt
push
daa
cli
aaa
add
sub
lahf
ss
mov
les
ljmp
imul
jns
movsl
pop
out
sarb
xchg
enter
gs
ja
lcall
pop
pop
sti
inc
mov
inc
setg
pop
adc
lea
sub
sqrtps
sarb
and
or
mov
cmp
sub
xchg
push
aaa
cli
mov
mov
sub
call
js
mov
mov
mov
cs
add
sbb
test
jecxz
sub
popf
outsl
xrelease
cmp
xchg
lods
lock
mov
or
xor
dec
mov
jl
insl
sub
shll
fistpll
pop
outsb
outsl
out
push
push
lret
out
push
test
fcoml
add
inc
push
repz
and
jne
jecxz
sub
push
pop
and
sub
sahf
out
jg
mov
sbb
aad
pop
fadds
lcall
repz
mov
xchg
bound
sub
mov
out
jo
loope
dec
cld
jle
sbb
outsl
into
in
addr16
shl
popf
nop
xchg
dec
and
xor
jb
add
push
mov
push
jns
scas
call
out
pop
xchg
mov
mov
mov
mov
xor
push
int3
mov
xor
pop
out
mov
and
popa
icebp
lods
ret
packuswb
cwtl
shl
mov
vmovss
push
inc
jle
int
jne
out
push
pop
mov
jmp
mov
arpl
jge
pop
push
cmp
sub
bound
inc
or
push
mov
mov
jg
jecxz
sub
jns
ret
lea
and
xchg
gs
test
ljmp
jne
add
loopne
jae
cltd
das
mov
cltd
adc
push
out
out
pushf
xchg
bound
jge
jbe
jns
mov
mov
andb
scas
push
jmp
sbb
frstor
fcomps
lcall
sbb
xor
inc
xchg
xchg
js
into
sbb
adc
jge
lea
xor
and
sbb
mov
mov
shrb
dec
adc
icebp
sub
inc
mov
xor
sbb
add
sahf
dec
fisubs
lds
insl
xchg
inc
js
and
mov
xchg
cwtl
call
inc
fwait
adc
dec
jp
pop
inc
shrb
xchg
and
inc
ds
or
mov
shll
push
nop
jbe
sbb
mov
lods
shl
xchg
loope
lds
fidivs
add
add
fstp
or
dec
push
repz
jae
outsl
orb
xchg
jmp
sub
cld
sub
jmp
aad
xchg
fists
dec
cmp
jge
addl
mulb
xchg
push
jle
xlat
or
in
xor
aas
cmpsl
xchg
adc
mov
mov
icebp
pop
addr16
fnstenv
cld
sub
fcompl
jno
cmpsl
out
fidivl
mov
ja
cmp
pop
ftst
jns
dec
mov
out
xchg
repz
xor
lods
mov
dec
mov
jg
push
push
lcall
cs
loopne
dec
cmp
arpl
pop
mov
sbb
cmc
inc
jg
and
and
pop
mov
insb
loop
aam
enter
fisttps
mov
dec
insb
push
jmp
xor
push
jle
xor
xchg
sbb
inc
mov
inc
rcr
mov
mov
xlat
sti
stc
std
add
sbb
jle
pop
addr16
sbb
filds
rcl
push
pop
lret
pop
xchg
das
mov
push
hlt
sub
lods
push
sub
sub
and
adc
popa
xchg
sub
push
popa
call
inc
test
mov
jno
jb
jae
cmpsl
ret
shlb
dec
faddl
lcall
loop
push
jae
into
sbb
dec
mov
or
cli
scas
xchg
lods
push
ljmp
pextrw
mov
pop
outsb
mov
jl
sub
push
and
je
cmpsb
repz
sub
sub
add
xor
in
into
fstpt
aaa
xchg
pushf
inc
inc
and
mov
icebp
jns
lcall
imul
cmp
imul
inc
cs
sbb
stc
push
mov
and
mov
mov
xor
mov
mov
jns
lcall
in
rolb
lcall
mov
je
mov
mov
sub
rolb
jbe
sbb
xchg
xchg
clc
mov
inc
mov
sbb
add
les
push
mov
jge
push
pop
loop
fdivrl
pop
addb
and
cli
cltd
fptan
loopne
or
addr16
stos
mov
adc
mov
out
sub
cmp
ss
adc
shrb
cmp
mov
inc
pop
stc
lods
dec
not
outsb
sarb
cmp
mov
xchg
lret
xlat
divb
arpl
add
mov
sub
aas
pop
jmp
mov
mov
mov
daa
emms
insl
or
aad
jne
xchg
sub
lahf
fisttpll
fnstcw
icebp
inc
scas
mov
fs
cmp
loop
loop
inc
jecxz
mov
stc
jns
adc
lret
adc
ret
enter
addl
adc
nop
mov
mov
gs
sub
cmpsb
dec
sub
dec
push
mov
push
mov
mov
mov
or
mov
movsl
cmp
imul
in
out
icebp
xchg
mov
pop
mov
sbb
repnz
inc
dec
das
andl
leave
fildl
and
ds
ljmp
and
pop
out
add
gs
jp
sti
rcrl
ljmp
xchg
fmuls
lret
inc
sub
cmp
lcall
jge
mov
sbb
out
aaa
insl
push
xchg
int
fmuls
inc
scas
inc
mov
jne
jge
mov
outsb
inc
dec
dec
sub
lahf
out
dec
pop
cmp
xor
scas
mov
ret
fs
sti
push
insl
push
in
cmp
sbb
stos
pop
fsts
rcr
stos
enter
out
jb
out
jl
jle
out
loopne
or
jb
mov
movsl
jne
mov
sbb
dec
pop
sbb
cmp
lea
dec
sub
xchg
xchg
fxam
out
pop
ljmp
aaa
ja
push
lods
add
mov
jle
xchg
je
mov
add
add
xchg
in
and
fistps
daa
xchg
sbb
jbe
jns
insb
data16
push
mov
insl
ss
cld
jne
test
scas
outsb
lcall
inc
adc
sub
lret
pusha
or
dec
aas
cmc
lret
cli
push
jecxz
test
stc
shll
jb
xor
adc
das
je
cmp
push
mov
rorl
loop
leave
dec
iret
pop
inc
ds
je
inc
xchg
repz
cwtl
sub
push
or
bound
or
jge
dec
xor
gs
mov
lock
lock
mov
pop
cmc
xor
dec
je
jge
xchg
into
lret
call
fninit
sbbb
sub
or
roll
xchg
fsubrl
mov
xchg
aad
incb
aad
jl
movsb
and
mov
fwait
stc
cmc
test
mov
push
filds
es
sub
das
lea
loope
mov
insb
cltd
inc
je
push
leave
ret
iret
cmc
push
fnstcw
pop
les
cld
xchg
cmp
mov
cld
adc
mov
xchg
pop
jmp
add
xor
sti
mov
pusha
sti
lods
mov
fsubs
dec
imul
test
ja
mov
scas
cmpsl
idivb
in
jp
cmp
xchg
pop
aam
hlt
push
jne
ss
mov
aad
shlb
dec
push
mov
lcall
cmpb
clc
jnp
out
in
popf
mov
add
loop
lcall
lods
fsubl
cld
in
out
dec
sar
add
call
sub
jb
loope
mov
adc
jp
adc
call
sbb
mov
xlat
push
cwtl
pop
mov
into
pop
mov
gs
test
mov
dec
ficompl
fcmovnu
mov
mov
outsb
pop
cmp
jbe
scas
mov
cmpsl
scas
dec
adc
pop
popf
loop
mov
aaa
sbb
sub
sbb
xor
xchg
jb
dec
jle
sbb
jae
repnz
push
cli
js
fbstp
outsb
cltd
xchg
jbe
das
add
mov
lret
mov
clc
xor
mov
outsb
lods
xor
fwait
fs
subl
rcrl
jnp
hlt
pop
mov
push
cmp
mov
pushf
popa
test
cmp
pop
xchg
adc
or
fistl
push
cmp
into
inc
out
push
out
dec
mov
sub
pushf
mov
or
sbb
adc
ficoms
rorl
sbb
and
mov
push
data16
pop
sub
mov
jg
pusha
sbb
and
push
insw
lret
insb
decl
arpl
repz
lahf
xor
cmpb
jp,pt
enter
fisubl
push
inc
and
add
movsb
and
dec
cmpsb
jns
insl
cmp
adc
push
pop
aas
mov
sub
mov
js
fadd
jo
movb
xor
lock
call
call
clc
adc
repnz
or
idivl
jl
mov
pop
jecxz
xor
add
xlat
ljmp
out
inc
jecxz
pop
jbe
stos
sub
sbb
xor
xor
test
inc
hlt
mov
mov
mov
mov
fwait
loope
push
cmc
arpl
jb
test
cli
xchg
xchg
out
dec
adc
shlb
mov
hlt
dec
pop
sti
sub
addr16
fnstcw
cli
mov
int3
cmc
dec
bound
inc
lods
jecxz
cmpsl
je
mov
adc
mov
daa
cmp
outsl
cli
cmpsl
cmp
cld
push
hlt
add
mov
jno
jg
jle
andl
lock
jl
mov
cmp
cmp
push
pop
adc
lcall
xlat
mov
xchg
push
cmc
or
add
inc
pop
xchg
sub
push
push
xlat
sub
ds
rep
mov
inc
ljmp
scas
xchg
fisttpll
repz
pop
xchg
fnsave
popf
jns
mov
dec
cmc
and
test
sub
pop
mov
jle
push
addr16
popf
mov
lock
jb
sbb
std
xchg
jp
icebp
mov
dec
test
mov
in
sub
adcb
cmp
or
movsl
fimuls
ss
stos
mov
inc
lods
test
push
mov
sub
hlt
stos
pusha
out
push
sti
iret
dec
cmc
xor
and
push
test
int
ljmp
dec
lret
adc
inc
test
rep
jp
aam
out
jne
test
popf
adc
xchg
pop
mov
pop
mov
push
inc
xor
ljmp
lret
or
in
lret
push
mov
cmc
cli
movsl
jp
aam
adc
push
add
test
adc
or
or
ss
in
mov
dec
ds
aad
mov
pop
aam
lret
mov
push
jne
jb
sbb
inc
adc
push
mov
push
shlb
xlat
int3
xchg
ljmp
test
xchg
sti
mov
push
scas
loop
push
xrelease
adc
dec
lds
lea
mov
fisubrs
and
pushf
pop
push
repnz
mov
mov
loop
xor
sub
clc
dec
mov
adcl
pop
dec
mov
int
pop
fwait
and
and
xor
int
inc
sub
xchg
movsb
ljmp
sub
mov
sub
ss
xor
push
inc
pop
lcall
and
lods
call
inc
jle
dec
ficompl
enter
adc
nop
add
dec
inc
repnz
nop
in
popf
ss
cmpsb
pop
iret
xchg
outsl
cli
pop
jmp
xor
push
inc
mov
loop
xchg
xchg
cmc
pop
enter
push
outsb
cs
roll
xlat
inc
xor
sub
repz
pop
mov
push
mov
in
ret
sub
inc
xchg
mov
sbb
iret
pop
xor
mov
pop
stc
sub
lahf
sti
scas
pop
movsb
jle
aad
inc
movsl
mov
jae
dec
and
mov
negb
sub
mov
sub
mov
cmpsb
ss
shlb
cltd
inc
test
push
push
repnz
rorl
out
movsb
daa
lahf
mov
xor
mov
jb
or
add
mov
mov
inc
clc
jmp
sbb
jns
repz
push
jge
nop
enter
cmp
jns
jp
hlt
jmp
or
mov
loope
in
stos
jns
mov
out
sbb
scas
push
sar
inc
stc
xor
mov
scas
in
xchg
jge
aam
imul
fwait
lret
fwait
cmc
jmp
repz
jne
jmp
pop
lods
cld
jp
out
cmp
add
jnp
imul
int
js
or
fildl
sbb
sub
xrelease
cmp
stc
mov
iret
aaa
push
xor
mov
mov
int3
fidivrs
int3
faddl
sbb
jb
dec
cmp
xor
lret
std
lock
jno
and
add
insb
xchg
mov
lahf
xchg
xchg
ja
xor
movsl
iret
test
cld
mov
jne
fbld
mov
mov
jle
aam
mov
aas
xor
mov
cs
loope
int3
add
push
out
adc
jmp
lahf
nop
scas
mov
lret
stos
pop
leave
push
mov
pop
into
shl
add
dec
xor
pop
sbb
sub
mov
ret
pop
jns
ret
jmp
mov
mov
push
mov
dec
or
dec
xchg
subl
daa
insb
or
xchg
mov
mov
sbb
fildl
inc
sbb
pop
jbe
arpl
lods
xorl
mov
dec
dec
insb
addr16
in
push
adc
dec
fdivs
outsb
xor
pop
mov
mov
jbe
mov
inc
fmuls
ffree
fcomps
in
inc
fmuls
sbb
fcomps
and
push
xor
sti
xor
xor
lret
test
push
outsb
and
insb
ret
push
xor
push
in
xchg
test
cs
adc
pop
int
pop
mov
dec
xchg
jl
fdivs
lods
arpl
xlat
adc
inc
cmp
and
fadds
pusha
shll
dec
nop
inc
jb
cmp
push
dec
insl
out
xchg
xchg
inc
fisttpl
mov
aaa
insb
rolb
ss
jp
jmp
dec
pushf
enter
pop
clc
ja
imul
negb
lcall
test
out
pop
cltd
rorb
aaa
imul
dec
jmp
adc
mov
adc
outsl
sahf
cmp
push
stos
jns
int3
lods
dec
shlb
cmp
sbb
mov
xchg
or
or
cli
mov
adc
daa
leave
xchg
fs
xchg
xchg
aad
outsl
cmc
pusha
out
dec
xor
inc
jl
cmp
cltd
cld
test
ret
pcmpgtd
loopne
and
scas
bound
test
aad
outsb
int
ret
sbb
xchg
mov
sahf
jb
sub
outsb
pop
lahf
mov
fsubs
rcr
scas
or
mov
adc
outsb
fwait
adc
mov
and
lahf
fbstp
jmp
xchg
test
shrl
pop
test
mov
aam
add
mov
sbb
push
cwtl
aad
mov
and
xor
mov
bound
sahf
call
outsl
or
lds
imull
in
push
ficompl
decb
pop
mov
push
fisttpl
xchg
icebp
lods
mov
movsl
hlt
or
dec
insl
mov
lods
std
mov
int3
lods
jmp
add
adc
js
fwait
cmp
xchg
pusha
mov
sub
aas
adc
sbb
das
fistpl
mov
cs
ret
int3
or
out
mov
mov
xchg
cmpsb
dec
lcall
lahf
imulb
mov
lret
push
cld
fldt
sbb
bnd
faddl
sub
mov
mov
cld
cmc
pop
nop
or
cmpsb
jmp
shll
ss
or
rclb
jp
aam
jmp
jae
mov
dec
cld
cmp
sbb
xor
popa
dec
lcall
xor
in
sbbl
cmp
push
mov
addr16
in
es
mov
mov
jmp
pcmpgtw
idivb
int3
or
push
jb
mov
mov
mov
push
popa
les
test
xor
cmp
inc
sub
or
cmp
mov
sbb
cwtl
cmp
lret
cltd
adc
and
push
fldenv
nop
jl
cld
sti
aaa
leave
mov
push
xor
mov
or
popf
sbb
movsb
mov
lcall
fwait
std
cmc
jne
in
rcrb
cmp
fstps
loopne
insb
mov
incb
dec
cmp
std
cmp
pushf
lcall
dec
add
out
insb
out
clc
in
nop
insb
mov
repz
adc
nop
pop
or
out
shlb
fisubs
incb
ljmp
mov
xchg
push
push
pop
jmp
js
fsubp
scas
outsl
clc
das
jns
sub
push
daa
fs
nop
aas
adc
sbb
xor
popf
add
mov
call
loop
jno
pop
push
xor
cld
clc
or
loope
les
rorb
push
rclb
pop
inc
movsl
add
and
fcompl
jnp
jg
imul
jne
es
and
pop
mov
add
cli
ljmp
iret
mov
mov
addr16
lcall
jecxz
add
mov
cmp
orl
das
stc
adc
aam
cmp
into
imul
jg
cli
add
cmp
pop
lds
mov
add
pop
jo
mov
lock
adc
insb
adc
imul
leave
lahf
mov
or
xor
jbe
xchg
add
mov
decl
addr16
cwtl
nop
cmc
pusha
xchg
and
lahf
mov
xchg
push
push
outsb
arpl
repz
fildll
in
shll
push
push
ret
hlt
rcr
push
in
les
or
lcall
jecxz
pop
mov
pop
dec
push
pusha
and
sbb
ja
fcoms
in
faddp
int3
inc
dec
andl
xchg
imul
mov
push
sahf
ljmp
cmc
sbb
pop
mov
mov
loop
test
add
inc
mov
add
and
cmp
mov
lods
and
inc
cli
mov
rcr
adc
cmpsl
inc
jbe
dec
aad
test
mov
cwtl
push
dec
add
loope
mov
sbb
adc
out
aad
dec
pop
dec
pop
inc
outsb
aaa
sub
mov
fiadds
js
fwait
in
sub
or
sub
ret
int
push
aaa
cmp
aaa
das
bound
aas
jb
aas
push
aas
test
pop
fwait
rcrb
shl
sahf
js
mov
pop
pop
mov
icebp
adc
in
rorl
dec
sbb
sti
xor
in
adc
dec
push
stos
mov
jecxz
into
mov
loope
mov
loop
lret
scas
fs
addr16
or
fistps
or
test
jg
cs
call
jle
ss
jmp
jmp
dec
lcall
mov
jl
jecxz
cmp
outsb
sbb
cli
sahf
daa
icebp
out
je
mov
out
sbb
shlb
or
out
push
addr16
push
mov
into
adc
cs
xor
in
and
aad
add
in
negb
imul
sbb
mov
dec
iret
or
test
jp
jg
or
pop
adc
or
cmpsb
test
int
inc
push
pop
stos
push
jb
and
cmpsb
stos
pop
pop
mov
cmp
xor
les
subb
jl
jge
gs
push
add
add
and
rcll
adc
inc
jne
push
mov
imul
call
ss
pop
imul
adc
xchg
xchg
and
cltd
xorl
popf
add
sub
mov
ficoms
pop
shrl
jg
pop
call
adc
lret
mov
fucomp
add
jae
out
cmp
jl
and
lds
or
jmp
sub
xchg
js
jg
ja
or
mov
in
das
lds
mov
in
ficomps
hlt
cmc
aaa
and
sub
sub
stos
inc
ror
pop
cmp
dec
or
sub
sbb
test
testb
mov
pop
jl
outsl
cmp
repz
jmp
sub
mov
mov
cmc
ret
aaa
cltd
int
xchg
fcmovbe
std
push
dec
sub
pop
les
es
push
or
movsb
dec
hlt
xor
mov
ret
das
jae
mov
adc
cmpsb
in
insl
sub
adc
outsb
lods
ror
shrb
outsb
imul
add
inc
push
fptan
sub
and
nop
add
xchg
jns
repz
sub
sahf
scas
repnz
and
ss
jb
mov
xor
jo
mov
push
push
mov
xor
jno
jb
test
adcl
into
stc
rcrl
testl
clc
jb
adc
lods
pop
pop
mov
inc
outsb
cmp
mov
jns
int3
lahf
mov
arpl
and
sahf
mov
test
push
mov
sti
fidivs
clc
mov
xchg
out
cmpsl
loop
bound
xchg
sub
mov
xchg
fstpt
jo
repz
jno
data16
sub
sbb
jle
sbb
xchg
or
incl
movsb
jge
ficomps
dec
cmp
xor
repz
cltd
xchg
out
ficoml
push
test
dec
mov
pop
push
inc
pop
int
xchg
fxch
aas
jne
out
lds
mov
pop
in
fucomi
je
gs
jp
push
inc
push
inc
arpl
bound
pushf
int
pushf
push
adc
jp
push
fiaddl
adc
insl
add
movb
daa
dec
imul
ret
std
cmpsb
inc
mov
mov
cmp
fwait
push
xor
movsl
iret
imul
fsubp
je
adc
xchg
adc
out
add
dec
bound
cld
sub
testl
daa
lret
jl
mov
xor
ret
xchg
lods
in
dec
sub
scas
xor
add
and
popa
jno
std
les
test
jnp
or
repnz
stos
subb
mov
hlt
lea
sti
ljmp
fstl
je
rorb
dec
mov
fwait
jle
adc
pop
lcall
fmull
dec
jmp
and
test
imul
sub
fstpl
cld
push
test
imul
cmp
sub
in
inc
sahf
cmpsl
dec
jno
iret
jle
lret
jne
mov
out
jp
adc
sbb
adc
lret
adc
xchg
stc
xor
call
add
test
inc
or
mov
popf
inc
pop
ja
adc
cmp
and
in
jbe
subl
jg
sub
push
cmc
pop
lock
push
ja
xor
mov
dec
popf
incl
cwtl
fmul
jb
pop
clc
push
mov
iret
test
fs
sbb
pop
test
sbb
lds
sbb
cs
push
add
pop
cmpb
stc
xor
ja
fistps
nop
inc
addr16
jmp
stos
and
ja
xor
dec
pop
sbb
lret
xchg
mov
rorb
inc
mov
pop
lods
sub
and
sub
push
jge
repnz
push
loope
enter
fs
push
shl
mov
and
mov
int
pusha
mov
leave
fcmove
jecxz
jecxz
data16
test
mov
push
je
cmp
sub
repnz
mov
js
ret
cmpsl
lods
mov
mov
jnp
inc
jae
cmpb
cmp
mov
mov
pop
sub
dec
out
rcrb
loope
push
jg
or
lret
repz
popa
test
sar
iret
or
out
xchg
jp
fsts
sti
mov
mov
in
into
inc
mov
xor
sub
in
imul
es
cmpsb
jl
loope
push
jg
jp
outsb
lods
sbb
jno
jb
insb
add
jg
je
outsb
pop
pop
imul
test
movsl
pop
pop
mov
cmp
mov
push
test
lods
leave
lret
push
jb
jl
outsb
jge
out
test
lods
outsb
jge
fdivrl
mov
jne
scas
cli
rcrb
repz
xchg
shlb
jp
test
lret
sti
rcll
int
fwait
outsb
fidivrl
xor
ret
std
popf
popa
jae
pop
popf
ss
and
fisttps
jne
xor
adc
sti
adc
or
pop
xchg
xchg
nop
mov
and
lds
jnp
push
ds
mov
mov
jb
lods
ljmp
popf
lds
pushf
loopne
outsb
loopne
lahf
adc
test
bound
pop
inc
lock
negl
out
xchg
pop
mov
pop
repnz
mov
das
add
add
insl
lar
pop
psubsb
aaa
add
add
add
sahf
add
movsb
out
test
or
sbb
mov
push
mov
xchg
push
mov
mov
stos
inc
adc
adc
call
jmp
dec
and
xchg
sbb
ret
and
mov
dec
mov
shlb
xchg
es
and
xchg
dec
cs
es
imul
out
dec
add
es
into
pop
outsb
mov
inc
es
and
pop
cmc
push
imul
xchg
insb
xchg
dec
inc
test
and
ds
enter
sub
fists
and
add
roll
pop
add
or
nop
pop
and
inc
fiaddl
scas
popf
ret
data16
in
or
sub
addr16
xor
xchg
gs
pushf
aad
xor
adc
xchg
call
mov
pop
adc
mov
pop
cmp
push
xchg
xchg
jb
or
dec
stos
mov
jmp
push
push
cmp
in
iret
leave
pop
loope
cmp
mov
div
pop
fistps
fisubrs
and
lods
cmp
dec
mov
adc
in
pop
jmp
xchg
dec
pop
sbb
pop
popa
mov
or
rcrb
sub
cmp
jns
or
fs
mov
and
out
mov
hlt
mov
jbe
and
inc
mov
mov
lea
jg
sbb
sbb
lea
fimull
bound
push
cmp
hlt
icebp
cld
dec
cmc
rcl
lret
sbb
sahf
je,pt
stos
sbb
jns
pop
cmp
and
dec
out
adc
fnstsw
or
mov
jp
addr16
aam
xor
aaa
sub
lock
stc
xchg
and
rolb
inc
adc
cmp
loopne
lret
wbinvd
fidivl
xorb
dec
rcl
pop
sarb
adc
popa
push
dec
loopne
pop
or
or
add
scas
xlat
sahf
arpl
jmp
mov
cmp
push
ret
imul
cmp
xor
cmc
into
lea
aam
movsl
out
pop
test
stos
pop
ret
dec
cmc
pop
loop
popl
clc
lret
leave
movsl
daa
push
adc
rorl
ss
lock
scas
mov
push
mulb
cmp
sbb
inc
mov
adc
ret
fwait
jns
sti
mov
lds
mov
movsb
notb
movsl
sub
mov
push
push
aad
cwtl
push
cli
inc
mov
mov
cwtl
sbb
push
scas
add
lahf
xor
adc
inc
std
jns
adc
jne
mov
in
enter
mov
jae
ljmp
mov
lods
hlt
pop
xchg
mov
sbb
sahf
adc
mov
hlt
insl
movsb
jmp
and
jecxz
xchg
ja
xchg
add
cli
test
cmpsl
mov
fmuls
cmp
push
dec
lcall
mov
add
push
add
and
movsb
mov
adc
inc
xchg
js
sbb
std
pop
pop
cmp
cli
cmp
pop
adc
std
dec
jbe
xchg
imul
pop
push
fidivrl
and
lods
outsb
cmp
dec
out
xchg
inc
lcall
jle
imul
ss
add
push
les
and
xor
fimull
mov
xchg
jb
lods
pushf
pushf
and
sbbb
and
cmc
add
scas
es
mov
scas
mov
cmc
les
cltd
pop
xchg
jp
xor
or
out
movsl
sahf
push
xor
les
in
icebp
clc
das
sub
mov
mov
insb
jl
out
ret
xchg
insb
in
nop
int3
enter
js
stos
lock
cmp
sbb
push
pop
mov
dec
pop
mov
mov
sahf
ja
jnp
repnz
ja
scas
pusha
or
jge
int3
push
nop
cmc
loop
cmc
test
roll
iret
cli
lock
in
or
out
gs
ja
hlt
mov
pop
mov
push
push
sbb
jmp
aam
sar
iret
sub
js
daa
jns
jmp
int3
mov
stos
scas
sbb
addr16
push
mov
in
lea
mov
jbe
push
mov
pop
fcoms
stc
repz
xchg
in
scas
jle
jnp
sbb
adc
loope
mov
clc
ljmp
fistpl
jo
loopne
inc
dec
inc
popl
cs
xchg
xchg
adc
bound
push
pop
xchg
inc
mov
xchg
dec
adc
stos
ficompl
iret
enter
or
inc
mov
fmuls
addr16
popa
pextrw
xchg
ret
mov
outsl
js
ret
xor
ret
pop
xchg
adc
mov
sbb
add
inc
jge
and
cmp
xchg
and
jne
dec
add
imul
fcompl
shlb
inc
ds
popa
push
dec
aaa
add
push
jmp
jle
sar
repz
imul
cld
addr16
jge
cmp
loope
shl
cmpsl
add
pop
cwtl
push
add
sub
push
pop
mov
clc
jg
or
stos
out
dec
cmpsb
push
insl
inc
test
xlat
ret
cmp
out
sub
clc
in
dec
loope
notl
or
fisubrs
jmp
popa
mov
or
rol
popa
insl
imul
fsubrl
mov
movsb
popf
push
lods
jns
fists
dec
fildl
daa
dec
or
mov
and
icebp
mull
jns
aad
not
push
mov
mov
fsubrl
mov
inc
xchg
loopne
jb
and
jne
in
cwtl
cld
and
push
pop
fs
jno
dec
test
outsl
sbb
in
inc
jecxz
push
cmpsb
in
lret
imul
pop
mov
and
lods
aaa
insl
cmp
imul
dec
mov
sub
or
inc
les
mov
shrb
jmp
xchg
inc
pop
jmp
jnp
rcll
lcall
lea
pop
and
insl
mov
in
aaa
out
cld
xlat
je
les
outsb
out
clc
jbe
dec
adc
out
xchg
in
in
std
and
loope
push
cmp
in
fs
jo
cltd
push
bound
leave
push
or
xor
cmp
xchg
data16
dec
push
rcrb
aas
pop
mov
mov
clc
ds
pop
aas
jg
int
ss
jecxz
stos
fnstsw
rcr
aas
lret
bswap
repnz
push
add
mov
add
lahf
and
pop
fadds
cmp
mov
dec
rolb
jo
loopne
shl
out
outsl
add
aas
and
incl
je
int3
lea
dec
sahf
fldenv
cmpsb
mov
je
std
mov
cmp
int
cmp
sub
les
ss
je
mov
adc
dec
jno
xchg
push
mov
lret
jmp
in
sbbw
sahf
iret
int3
push
mov
pop
outsb
mov
or
fcomps
pop
loope
or
dec
aaa
sbb
into
inc
cmpl
lods
sub
cmp
lea
lcall
push
fstps
adc
dec
push
dec
mov
pop
cs
pop
pop
sub
lret
test
and
add
xor
add
cwtl
xor
add
add
add
add
pop
fcmove
jp
mov
cltd
jne
aas
imul
mov
cltd
clc
sub
cmpsb
jmp
idivl
cld
rsm
sub
xorb
push
push
mov
fisubrl
xchg
sbb
ss
mov
jp
or
mov
mov
sub
adc
adc
scas
xor
dec
mov
fistl
aam
push
jnp
setns
movl
xchg
sub
jp
mov
push
test
das
pop
mov
cli
pop
mov
xor
mov
mov
and
xlat
es
mov
lods
scas
stos
push
jl
xor
cmpsb
pop
ja
xor
imul
jp
jecxz
arpl
mov
push
inc
xor
or
test
lea
pop
and
cmp
mov
push
cwtl
lahf
outsb
push
cmp
mov
fs
repz
ljmp
ds
sbb
mov
arpl
aam
push
outsl
mov
pop
nop
jl
jnp
sbb
lret
xchg
loop
rolb
pushf
xor
or
push
stos
mov
mov
sahf
clc
dec
push
imul
cmp
or
outsl
jmp
pop
fstps
xlat
mov
cwtl
push
fsubrl
cmp
pop
or
mov
in
flds
cmc
outsl
sub
inc
xlat
pop
arpl
aaa
icebp
testb
jmp
pop
sub
in
push
fwait
sar
aas
push
gs
mov
aam
mov
mov
aad
push
leave
jp
dec
sbb
push
push
dec
adc
jo
mov
fs
cld
mov
add
mov
sub
sbb
cmpb
mov
push
sti
sub
andb
add
pop
fadds
clc
push
lock
add
cltd
inc
mov
jno
leave
and
cmp
xlat
pushf
mov
sahf
lahf
mov
fstps
push
cmpsl
mov
pusha
sysexit
sarl
loope
add
popf
outsl
lret
mov
mov
mov
call
out
int
sbb
imul
xlat
mov
mov
dec
cs
pop
inc
rolb
out
xchg
movsb
sbb
jg
jno
dec
pop
imul
and
mov
gs
mov
imul
test
popf
mov
leave
fidivl
ds
xchg
adc
inc
in
add
add
mov
mov
imul
rcll
cmp
enter
js
lock
add
and
je
loope
ljmp
clc
sbb
rcrb
jg
adc
loop
inc
cli
jecxz
aaa
inc
mov
push
inc
ret
sbb
ds
mov
mov
sub
pusha
fidivrl
lcall
pop
ljmp
cmpsl
dec
cli
mov
rol
xchg
or
test
clc
sbb
adc
repnz
xorl
sub
ja
stos
mov
jmp
std
mov
in
sub
mov
pop
rcrl
dec
xchg
dec
sbbb
aad
ljmp
xor
fstpl
dec
cmp
jl
sbb
mov
jmp
mov
in
dec
icebp
pop
pop
daa
mov
icebp
pop
icebp
sub
scas
xchg
jle
or
pop
jae
dec
fldl
and
sbb
xchg
cmp
mov
subl
std
out
fildll
ljmp
in
mov
jl
clc
pop
testb
jbe
mov
nop
lcall
imul
jge
idiv
inc
test
std
inc
xchg
mov
lock
in
xorb
sbb
repz
out
add
cmp
push
xorb
push
cmp
or
pop
add
add
dec
repz
mov
mov
in
les
xchg
test
incb
lcall
sarb
shlb
jo,pn
fnstsw
mov
or
dec
notb
adc
jmp
jle
or
jmp
jg
jnp
jp
call
adcb
outsb
or
int
cmp
inc
push
adc
stc
mov
out
mov
jmp
xchg
jnp
and
lret
mov
push
pushf
and
push
rol
loope
hlt
and
jecxz
lea
loop
adc
popa
pushl
xor
jo
scas
call
jne
mov
add
sbb
into
lock
push
mov
lock
jge
push
rcrb
xor
xorb
inc
loop
push
sbb
add
mov
xchg
cmpl
push
mov
jb
inc
imul
xchg
pop
repz
dec
pusha
repz
jmp
xchg
mov
mov
outsl
std
jo
adc
movsl
inc
pop
stc
mov
aas
xor
fisubrl
jmp
jo
push
fiadds
xor
jg
dec
movups
idivl
pop
cltd
call
out
sti
lahf
cli
pusha
jge
call
fildll
adc
call
daa
movsl
lret
xchg
mov
mov
pop
mov
mov
pusha
pop
fs
ljmp
adc
loopne
shrb
fldcw
loopne
add
and
lods
test
sub
imul
cli
adc
fwait
adc
dec
cmpl
lea
jg
lods
xor
cli
adc
xchg
imul
popf
cmp
mov
int
lea
adc
xchg
lret
push
cmpsl
sbb
js
push
fbstp
inc
jo
es
xchg
iret
pop
sti
inc
rcl
jmp
xor
sub
loope
data16
xchg
out
jge
sub
xlat
jecxz
jge
std
pop
clc
sti
stos
jae
test
ds
lahf
push
insl
push
leave
or
cld
stos
fs
je
sub
ss
sub
or
pushf
iret
ret
icebp
aad
mov
and
jo
xor
outsl
jmp
xchg
and
fists
sbb
mov
std
mov
dec
pusha
mov
mov
jbe
outsl
mov
cmp
adc
pop
push
pop
shrb
dec
push
jg
jl
dec
push
fistpl
jae
sbb
add
jp
pop
fcoms
sarl
decb
push
and
sbb
aas
pop
popa
sbb
xchg
jl
lret
rcrb
lock
add
pop
aaa
fmull
orb
fnsave
mov
in
dec
pushl
in
iret
xlat
cs
mulb
dec
in
subb
test
jg
mov
aas
insb
pop
lods
xchg
in
or
add
add
sbb
jne
jnp
dec
sub
aam
test
aad
das
negl
mov
out
adc
subb
jg
and
add
sub
or
in
orb
mov
and
imul
pop
add
stos
idivl
or
mov
insb
mov
jg
sti
mov
push
scas
js
popf
mov
mov
and
xor
push
fwait
loopne
cmp
frstor
fwait
pusha
xchg
pop
or
xchg
insl
orb
xlat
sbb
xchg
add
mov
push
sub
and
ljmp
mov
ljmp
shlb
xor
xor
pusha
mov
jp
mov
mov
out
fdivrs
dec
stos
shrb
mov
mov
testb
idivb
adc
stos
adc
jl
xlat
data16
inc
jne
stc
or
ljmp
clc
jg
xchg
mov
mov
pop
xchg
mov
jle
fildl
mov
mov
lods
jne
cmp
int3
test
jb
adc
sub
adc
fwait
adc
mov
test
mov
test
mov
inc
push
add
sbb
clc
lret
mov
jge
nop
sub
cmp
mov
lea
sub
mov
outsl
jno
mov
ds
loope
negb
sahf
push
lods
in
ja
jne
lods
pusha
gs
mov
jg
pop
shlb
imulb
push
mov
mov
push
jge
movsb
in
aas
cmp
push
imulb
or
addl
fnstcw
or
sti
adc
push
jnp
xchg
std
add
sbb
ret
mov
movsb
sub
sbb
add
or
or
pusha
pop
mov
loope
pop
cmp
ret
dec
cmp
add
sbb
mov
pop
divb
mov
xchg
std
xchg
insl
loop
mov
mov
or
pusha
ror
cmc
inc
sete
cmp
shrl
xchg
icebp
push
movsl
daa
popa
xor
pusha
jno
mov
fcmovb
bound
mov
mov
jns
push
mov
out
pusha
cmc
test
jl
pusha
lods
jno
out
in
sbb
in
loop
pop
mov
inc
aad
inc
fcoms
lods
inc
testl
adc
lea
fstl
and
lea
and
pop
fsubs
lock
pop
sti
or
in
cmpsb
sahf
loopne
loopne
add
add
mov
xchg
push
or
xchg
add
mov
in
xchg
stos
pop
repnz
pop
sbb
pop
mov
movsb
pop
mov
push
xor
sbb
mov
xlat
xor
mov
cmc
int
jmp
incl
pop
mov
cmc
int
sub
mov
leave
cli
out
mov
sub
pop
add
hlt
aas
in
gs
mov
cs
int
gs
in
sub
mov
lret
mov
fisubrl
or
repnz
sub
dec
enter
sub
lods
pop
outsl
cmp
jb
fldl
stos
dec
cwtl
dec
cltd
push
xchg
pushf
inc
loope
push
sbb
leave
mov
mov
sub
mov
jge
cwtl
std
mov
cld
bound
xor
inc
out
pop
and
xor
fisttpll
movb
out
insb
test
sarl
fstpl
xchg
jge
jns
mov
ret
push
jp
js
lret
gs
into
inc
sar
in
add
mov
call
xlat
mov
pshufw
loope
arpl
xchg
xor
jp
aad
pop
shld
or
mov
pop
f2xm1
pop
mov
push
fldcw
repnz
push
ljmp
fs
shrl
pop
lret
adcl
icebp
jecxz
push
out
sub
add
cmp
popf
cmpsb
mov
addr16
cmp
xor
bound
mov
hlt
or
sbb
rorb
xchg
inc
adc
push
mov
push
mov
and
inc
xchg
sub
pop
sbb
jb
fucomi
ds
push
mov
add
sub
pushf
add
loopne
or
or
fmuls
outsb
xor
sub
imul
add
dec
add
orb
data16
jo
cmp
loope
mov
add
jns
inc
or
repnz
iret
and
jns
push
out
in
repz
xchg
xor
dec
repz
mov
inc
sbb
cmc
mov
sti
mov
pop
push
jecxz
xor
inc
push
fwait
push
cmp
xchg
adc
jo
in
xor
aad
push
xchg
xchg
cmp
sub
fisubrl
jns
sahf
xchg
ja
push
adc
inc
andl
cwtl
inc
call
pop
ret
ljmp
inc
cwtl
lds
and
dec
mov
xor
jno
and
gs
jns
aad
and
dec
out
mov
ss
cld
jg
jg
js
inc
mov
iret
fs
cltd
cmp
addl
mov
or
nop
aaa
popa
xchg
mov
and
dec
ret
and
cltd
loope
adc
push
pop
adc
adc
mov
mov
mov
mov
cmp
sub
add
lahf
out
js
std
repz
sahf
rcrl
pop
pop
pop
fstl
cmpsl
iret
cmp
test
movsl
mov
xadd
dec
adc
xor
push
cld
or
mov
lock
xchg
jne
jecxz
dec
fsub
xor
mov
icebp
xor
negl
leave
adc
mov
adc
loope
fnop
jecxz
pop
clc
cmp
jp
std
sub
cmc
and
jl
adcb
icebp
jnp
jecxz
sti
bound
jmp
sbb
xchg
cmpsl
fwait
test
xchg
or
jle
xchg
mov
loopne
sub
mov
leave
sub
dec
mov
sub
xchg
ficompl
jns
sbb
cli
aad
fcompl
mov
jbe
jae
mov
testb
sbb
sbb
jmp
add
mov
mov
out
mov
pusha
outsb
push
pop
sti
mov
pop
nop
outsb
pop
testl
das
int
int3
pop
mov
pop
mov
inc
push
enter
mov
adc
lea
insl
or
xchg
fwait
pop
lahf
xor
testl
xor
icebp
test
mov
jp
loopne
lret
jo
adc
pop
jecxz
je
jecxz
out
jmp
mov
xchg
xor
pusha
jbe
pusha
jbe
jg
cwtl
popf
xor
cmpsl
or
fisttpl
mov
ljmp
fldt
cmpsl
jnp
and
push
int3
sub
ret
mov
fwait
rolb
sbb
inc
fdivl
dec
jns
les
mov
es
pop
mov
js
js
repnz
nop
orl
dec
pop
int3
jp
or
aam
xor
adc
pop
sbb
and
insb
xchg
popa
sahf
shrb
push
pop
xchg
insl
rorb
lcall
jl
jne
sbb
mov
and
popf
fimuls
adc
inc
fucomp
or
loope
jno
fisubrs
jle
pushf
jmp
jnp
test
shr
push
pop
or
bound
aaa
setle
imul
cmp
shrb
sbb
push
decl
aam
pop
aam
dec
dec
jge
mov
dec
addr16
je
xchg
stos
leave
movsl
popf
scas
lds
jmp
mov
pop
dec
lcall
add
out
out
les
addl
cmp
loop
mov
mov
inc
popf
mov
mov
call
sbb
mov
push
jmp
inc
faddl
cld
sub
in
mov
sbb
or
in
ret
into
or
mov
pop
sbb
fisubs
into
dec
ficomps
cmpsl
into
in
dec
gs
fwait
shr
pop
xor
popa
popf
je
mov
xor
dec
pushf
mov
fsubl
test
popf
scas
jecxz
daa
adc
les
cmp
jns
lcall
or
lcall
dec
loope
dec
xchg
js
pop
or
mov
negl
mov
jno
xchg
loopne
sbbb
test
xlat
call
jo
add
sbb
leave
fs
inc
sub
pop
insb
jl
and
push
dec
mov
and
lods
cld
leave
sub
insb
mov
xchg
or
test
cmpsl
xor
lds
mov
pop
adc
lds
je
inc
cwtl
daa
rclb
add
mov
adc
mov
and
inc
repnz
xor
or
rclb
mov
mov
leave
jno
cmp
leave
xor
dec
jno
pop
sub
xor
sbb
ret
and
jae
imul
cmp
or
xor
arpl
test
cs
fiaddl
je
add
adc
inc
push
aam
push
das
mov
push
dec
ret
out
in
stc
add
outsb
push
cld
adc
clc
in
inc
incb
xchg
test
mov
shlb
imul
lods
cmp
fldl
rcl
fildl
orl
sub
adc
mov
xor
lcall
sub
or
test
xorl
and
lret
sub
and
sbb
jl
adc
xchg
sbb
cwtl
sbb
cmpb
push
sub
or
cmp
xor
dec
dec
pop
test
test
pop
lods
mov
push
outsb
adc
xor
inc
cli
push
adc
rep
inc
lock
mov
xchg
and
sub
xchg
mov
and
mov
pusha
and
arpl
pop
cmpsb
sbb
xor
inc
test
and
ror
jp
pusha
mov
jno
xor
and
mov
xchg
je
decl
jmp
dec
addr16
in
xor
or
test
fwait
inc
jp
mov
mov
sub
test
mov
pop
inc
add
sbb
aaa
fildl
rclb
movq
out
out
ret
push
nop
out
jp
dec
inc
lret
sbb
in
test
mov
bound
pop
in
in
rorb
xchg
cmc
cmpsl
sub
adc
inc
xor
js
sbb
xor
or
push
aas
add
fdivp
xor
push
aaa
daa
ljmp
cmp
sbb
mov
inc
mov
cmpsl
test
or
cmp
or
stos
cmp
loope
popf
dec
in
inc
jno
das
jno
cwtl
and
out
mov
cmc
int
sbb
dec
test
sarb
mov
inc
xchg
cmpsl
movsl
xchg
shrl
dec
jecxz
ret
sti
mov
imul
dec
inc
adc
sbb
sub
testb
sbb
push
dec
cwtl
movl
jb
ljmp
test
popa
dec
loopne
orb
rcl
xor
stos
sub
test
fdivrl
push
pop
iret
fs
cmp
mov
xor
stos
lret
mov
inc
push
inc
cmpsl
enter
add
push
xchg
out
lret
fbld
lcall
dec
push
xchg
adc
xchg
pop
iret
lret
stos
xor
and
push
fnsave
mov
mov
out
lods
sbb
dec
push
hlt
es
mov
out
outsl
pop
lret
mov
pop
inc
push
test
cmpsl
in
jp
psrlq
or
mov
xchg
push
and
lea
test
mov
leave
insb
sbb
pop
aad
test
cmpsb
mov
mov
cmc
out
shll
insb
inc
outsl
loop
cmp
mov
outsb
or
jp
fdiv
and
ss
loopne
add
pushf
mov
orl
int3
in
repz
lret
dec
jle
pop
mov
outsl
mov
clc
pop
mov
pop
cmp
and
das
sub
cmp
ljmp
xor
ja
and
daa
inc
outsl
out
xchg
cmpsb
xor
mov
mov
jns
cmp
xorl
sub
mov
mov
sbb
mov
mov
push
adc
sub
stos
fbld
push
add
out
rclb
cld
dec
push
sub
mov
pop
mov
mov
dec
in
sbb
pop
mov
mov
mov
aam
lret
ljmp
imul
flds
push
enter
mov
repz
xor
and
pop
ds
es
outsb
adc
adc
add
or
mov
or
cmp
mov
and
cwtl
or
lea
cli
sahf
in
push
lds
sti
cmp
lcall
inc
pop
mov
mov
xor
clc
push
mov
dec
xchg
push
movsb
and
into
cmp
inc
lds
insl
mov
jmp
mov
test
xchg
jl
or
loope
pop
jb
fsubs
xorl
lret
out
ret
and
jge
xor
orl
loopne
je
mov
adc
popf
and
and
xchg
sub
stos
mov
and
xor
sub
inc
xchg
fs
imul
add
xchg
sahf
fisttps
pop
fbstp
lret
and
push
sbb
test
ds
pop
stos
mov
jbe
fnsave
sbb
mov
js
mov
inc
and
or
adc
adc
cltd
hlt
ret
sub
mov
mov
push
jno
mov
mov
lods
xor
mov
jg
push
ret
lods
aad
pop
jl
sbb
push
fistl
mov
cmp
xchg
or
mov
dec
jge
xchg
cli
repnz
mov
mov
out
icebp
mov
sahf
inc
out
mov
clc
lcall
test
filds
test
imul
insb
and
push
xor
clc
clc
pusha
jns
popa
xchg
sub
adcl
cmpsl
fadds
push
es
and
jne
out
in
sbb
mov
sbb
mov
push
js
loope
loop
and
mov
scas
int
xchg
jnp
jb
xor
mov
pop
int3
mov
xor
jb
out
fsubp
popa
push
dec
fdivrs
inc
pop
sbb
mov
xchg
stc
lcall
xor
mov
fidivrs
jp
push
sbb
insl
clc
push
lret
pop
aad
add
dec
adc
test
cmpsb
imul
xor
out
test
ss
pop
imul
insb
mov
or
mov
out
lds
cmp
repnz
int
ffreep
mov
and
sbb
fnstsw
fs
insl
inc
sbb
aam
mov
dec
sub
xor
cmp
lret
lds
shl
cmp
cltd
pop
pop
test
xchg
movsb
std
nop
push
jl
dec
jae
adc
xchg
pop
mov
pop
ja
add
xchg
in
pusha
repz
mov
sbb
xchg
add
sarl
jl
popa
aaa
or
mov
repnz
aad
fnsetpm(287
ror
xchg
xchg
int
addr16
pop
scas
std
ss
sti
into
sub
mov
pop
cli
or
out
in
adc
jge
int
cmpsb
lret
out
paddusb
je
pop
mov
add
xchg
fwait
cmp
int
loopnew
jg
fmulp
adc
mov
add
fwait
xchg
mov
stc
mov
and
push
js
sub
cs
ja
or
std
in
jnp
out
and
inc
adc
adc
in
jg
or
cmp
and
popf
jno
imul
push
clc
xrelease
test
push
jmp
cmpsl
lods
lret
aas
mov
ret
xchg
inc
clc
sub
or
subb
push
jge
mov
xor
cmp
fbld
push
cmp
jl
cmc
cli
xlat
rcrl
lea
adc
out
cmpsb
incb
filds
out
inc
xchg
ss
hlt
in
popa
xor
inc
movsb
push
subb
aas
loope
sbb
xchg
divb
pop
dec
stos
insb
jbe
push
xor
insb
aaa
shll
push
push
lahf
jecxz
xor
pop
jp
push
test
sti
ds
xor
push
test
in
jnp
lods
mov
stos
mov
jno
lcall
fs
pop
fwait
add
mov
xchg
fldcw
sti
xlat
loopne
cmpb
xlat
popl
mov
cld
outsb
push
jae
sbb
push
hlt
call
cmc
jmp
xor
ljmp
push
loopne
xchg
mov
mov
sub
fldcw
sbb
xor
in
cli
and
fsubr
out
mov
push
jecxz
repnz
xchg
in
fs
scas
movsb
incl
xchg
xchg
jmp
dec
push
test
clc
ret
add
or
test
or
sahf
add
mov
adc
adc
pop
inc
cmp
mov
out
out
cmp
std
fwait
adc
jae
ds
fildl
dec
lds
cmp
arpl
dec
fwait
sbb
pop
xor
testl
mov
cmp
lret
cli
mov
ss
iret
jecxz
jp
or
pop
adc
mov
xchg
rorl
xor
mov
stc
roll
jb
sbb
or
icebp
out
call
sahf
fimuls
add
in
push
pop
or
outsl
test
cmp
mov
pop
lea
xchg
cs
ret
lcall
mov
movsb
adc
dec
adc
cld
sbb
fcoms
mov
aas
lods
sbb
mov
scas
push
mov
lds
int3
and
dec
aaa
lahf
add
adc
xchg
out
shrb
jmp
push
fsubrl
push
rclb
inc
andw
inc
and
loop
js
xchg
int3
adc
xlat
cmp
jge
cltd
pop
push
inc
dec
and
xchg
mov
cmc
aaa
xor
push
jmp
sub
xchg
xchg
push
aas
inc
or
ja
not
sub
cmp
ja
nop
push
push
addb
mov
push
lock
fistpll
cmp
or
outsb
aam
ja
je
pop
pop
movsl
inc
clc
push
test
mov
jmp
push
sub
mov
add
cld
adc
sub
stos
mov
shrl
sub
cmp
and
jle
pushf
daa
subb
dec
and
sub
cmp
sbb
jb
jnp
push
cmpb
mov
outsb
into
or
mov
dec
not
scas
sub
das
xchg
in
pop
inc
mov
sub
fldenv
shll
mov
sti
xchg
testl
icebp
andl
pop
xor
and
test
outsl
and
push
rorb
ds
and
scas
stc
sbb
pop
repz
mov
lahf
incb
pop
jno
adc
ret
mov
mov
inc
jle
ss
rcrl
into
imul
negb
xchg
sub
mov
bound
repz
pop
xchg
ret
icebp
data16
rclb
dec
or
xorl
mov
mov
negb
push
movsl
pop
inc
pop
jns
xchg
ficoms
adc
and
sub
je
enter
je
xchg
pop
jno
add
stc
out
xlat
sub
in
and
xor
push
mov
mov
adc
jg
mov
adc
adc
sub
outsl
mov
add
xchg
subb
lret
add
movsl
add
push
mov
xchg
gs
shll
sub
fsubr
or
mov
enter
xchg
pusha
icebp
mov
and
sub
mov
vmovaps
mov
xlat
cli
mov
insb
fbstp
sbb
sbb
xlat
faddl
jae
push
adc
cmp
dec
pop
or
mov
rolb
ret
rolb
loop
sub
addr16
mov
dec
call
or
mov
cmpsl
mov
jl
inc
ss
movb
xchg
shrl
ja
dec
pop
fucomp
mov
shlb
cmp
cmp
and
icebp
dec
adc
xchg
pop
inc
inc
ss
push
push
stos
or
mov
mov
push
push
das
mov
mov
add
pop
aaa
leave
dec
cltd
loope
and
inc
pop
dec
inc
sub
mov
lods
jl
xchg
dec
jbe
and
xchg
dec
enter
pop
sub
jl
shr
adc
sbb
jns
pop
scas
fiadds
mov
cmpb
mov
cmp
loop
dec
cmp
push
sahf
loope
push
xchg
mov
adc
inc
rcll
dec
mov
fsub
adc
jl
and
ja
stos
jns
or
jns
ss
test
ds
lret
sub
adc
addr16
pop
push
mov
fadd
jmp
push
loope
rolb
lcall
and
fisubl
jb
mov
sbb
inc
and
fs
add
cmc
repnz
pop
add
push
cli
pop
in
xchg
das
movsl
mov
xchg
fs
negl
mov
dec
mov
in
sbb
cld
xchg
or
mov
mov
adc
ss
pusha
dec
adcb
mov
mov
mov
and
and
inc
enter
inc
xchg
mov
lock
lock
xchg
aaa
repz
sub
sub
sbb
dec
mov
sbb
adc
into
sbb
inc
xor
notb
stos
dec
lock
fwait
movl
in
jle
idivl
inc
xor
and
dec
outsl
and
out
xor
mov
sub
mov
cmp
push
or
dec
cs
xchg
sub
dec
xor
mov
jbe
cmc
xorl
jge
shll
bound
popf
in
stos
cmp
adc
imulb
enter
adcl
movsb
inc
stos
sarl
lcall
lods
jns
jg
push
int3
lahf
sub
mov
or
jo
dec
icebp
pop
loopne
pop
cmp
push
repz
mov
push
notl
mov
sti
mov
jbe
rorb
sub
das
vrsqrtss
jmp
fs
les
or
repz
pushf
mov
push
dec
push
pop
fwait
shll
cmp
mov
dec
push
pop
mov
int
sub
lock
sub
jge
mov
icebp
loope
test
cmpl
push
stc
mov
int3
stos
lahf
pop
jae
repnz
jl
scas
and
loop
xchg
pop
jae
pop
push
es
dec
push
mov
jecxz
jg
mov
psrld
xchg
ljmp
insl
imul
ljmp
ds
and
ljmp
mov
sbb
or
pop
aas
test
sti
in
sbb
aaa
xor
std
cltd
jae
jp
cmp
aad
lea
ret
das
mov
lea
shl
dec
mov
push
insl
jmp
es
idivb
scas
pop
mov
inc
fnstcw
sub
lcall
lcall
xchg
popf
lea
ret
mov
into
jecxz
into
rorb
popf
push
mov
push
cmp
clc
lds
cmp
pop
fs
mull
div
cmpb
mov
jle
popf
movsl
pop
sbb
in
sbb
jl
jecxz
pop
fdiv
aam
out
inc
je
repz
xor
mov
stc
pop
xchg
xor
cld
or
push
ja
aam
das
das
sarb
lahf
shlb
lods
add
cs
cmp
mov
xchg
mov
testl
lret
subb
jle
out
out
mov
lret
cmc
and
out
sub
les
mov
mov
mov
or
jle
pop
sub
sub
sub
push
dec
mov
push
push
pop
jl
arpl
out
out
ljmp
cmp
imul
insl
mov
divb
out
pop
xchg
xchg
pop
iret
inc
pop
adc
out
push
into
dec
and
push
xlat
mov
add
lahf
mov
xor
pop
repnz
aad
or
imul
lods
stos
insl
pushf
fsubl
jg
mov
in
sti
jns,pn
loop
popa
adc
imul
iret
mov
insb
lods
or
js
test
test
xor
js
push
lcall
pushf
loope
push
in
mov
test
jl
push
hlt
pop
icebp
push
int
and
xchg
arpl
cmp
mov
xlat
outsl
loop
jns
daa
gs
adc
jae
cli
push
out
shl
xchg
sbb
and
push
mov
out
or
and
mov
jmp
jae
and
cltd
lock
nop
lock
push
cmp
dec
icebp
cld
mov
sti
dec
push
xchg
jle
pop
stos
jecxz
bound
cld
movd
js
sub
jge
jb
dec
mov
lock
lahf
rcll
pop
rorl
fsubr
or
ljmp
pop
mov
lods
mov
push
sub
add
pop
jns
in
sarb
adc
xchg
outsl
mov
or
clc
jns
test
popf
mov
clc
pop
pop
or
ja
sub
pop
push
push
mov
xchg
mov
popa
out
and
mov
sahf
movsl
clc
lods
repz
repnz
jns
pop
xchg
out
sub
pop
adc
aas
pop
outsb
or
mov
mov
popaw
push
xchg
int
loope
sub
xchg
mov
add
mov
push
push
inc
repnz
mov
pop
mov
mov
notl
xchg
adc
ret
sbb
das
rcll
mov
mov
mov
cmp
scas
push
cmp
shl
jb
mov
sbb
xlat
clc
jge
jne
push
scas
add
cmpsb
pusha
cld
cmpsb
cmp
mov
jl
jo
dec
cwtl
shrw
xchg
pop
mov
das
mov
xchg
or
push
mov
dec
xchg
icebp
loop
data16
inc
adc
add
lods
mov
roll
repnz
add
xor
and
pop
pop
jmp
in
rolb
inc
cmp
dec
ja
pop
jp
frstor
add
imul
ret
inc
adcl
mov
movsl
cmp
and
cwtl
orps
xchg
pop
push
cmp
mov
data16
repnz
push
sub
mov
and
pushf
lods
stc
inc
insb
pop
mov
push
je
daa
sbb
jne
mov
stc
sbb
out
mov
lret
leave
jb
stos
cltd
mov
das
mov
movsb
mov
xor
shlb
push
popa
pushf
sbb
mov
cld
and
add
mov
sub
leave
fisubs
jmp
fstps
stos
popa
les
push
enter
aas
mov
int3
ror
jecxz
imul
mov
lcall
sub
inc
xor
pop
sarl
jne,pt
sub
mov
jae
sbb
sbb
cmpsb
cwtl
jge
imul
mov
sub
bound
adc
mov
outsl
out
inc
js
pop
out
jnp
xor
repnz
xchg
lcall
faddp
arpl
and
out
cmc
iret
xchg
arpl
ds
orl
sbb
mov
mov
cmp
xor
and
sbb
sti
jl
jne
mov
rorl
sub
popf
push
fldt
fcoml
xchg
mov
cmp
repz
jb
fstp
jae
cli
jno
setle
hlt
enter
jmp
test
in
test
mov
cwtl
cmp
arpl
or
jne
popa
cmpsb
xor
fiadds
std
mov
sahf
mov
bnd
xchg
or
sarl
sub
xchg
rcrl
pop
jo
imull
sahf
pushf
push
xchg
mov
push
pop
scas
or
mov
xor
pop
roll
xlat
jle
div
test
and
lods
xchg
shll
imul
adc
xchg
leave
mov
mov
fwait
inc
movsb
outsl
movsl
add
into
fildl
jg
push
fnstsw
in
movb
insl
pushf
or
pushf
pop
popa
fists
cmp
fistpll
mov
cmpsl
stc
mov
aam
or
mov
xchg
mov
mov
fnsave
addr16
jl
out
mov
dec
call
popa
add
es
jl
outsb
sbb
repz
addr16
dec
hlt
jge
insl
sub
in
push
popf
outsl
sub
jno
jp
repz
mov
or
test
fs
mov
popa
mov
rolb
incb
ficomps
dec
jae
push
push
aam
xchg
int3
mov
jp
sbb
jecxz
cmp
xchg
in
mov
pushf
or
pop
jnp
inc
mov
mov
scas
outsl
pushf
push
sub
xor
xchg
ds
jp
push
movl
cmp
cltd
daa
movsb
jbe
shll
negb
cltd
sahf
out
xor
mov
jmp
mov
mov
jle
cvtdq2ps
divb
mov
lret
xchg
divb
xchg
cld
jno
std
pop
pop
add
stc
std
insb
arpl
data16
jp
mov
jne
cmpl
jnp
pop
push
mov
ljmp
xchg
jmp
ja
fdivp
fiadds
int
jae
inc
mov
jl
movsl
cltd
mov
adc
int
push
push
jg
out
popf
in
into
xor
inc
sub
adc
in
sbb
mov
in
test
fisubs
lods
fdivs
arpl
push
mov
mov
mov
out
lds
shlb
xlat
inc
inc
lret
push
sbb
mov
fidivl
insl
dec
gs
jns
or
sbb
outsb
mov
sbb
mov
dec
rolb
ret
push
decb
movl
jnp
dec
mov
mov
pop
arpl
mov
fwait
dec
out
ljmp
scas
ffreep
sti
jne
xchg
lcall
xchg
mov
out
call
test
xor
sub
int
jg
cmpsb
fwait
mov
ficompl
dec
dec
sub
push
xchg
dec
out
mov
out
dec
push
pop
divpd
leave
insb
insl
xchg
sub
test
jle
push
cmp
xchg
mov
pop
arpl
lea
sbb
mulb
adc
das
cwtl
dec
mov
and
int3
cmp
pusha
xchg
lods
adc
pop
gs
pop
jg
push
negb
mov
mov
insb
pop
stos
std
cmp
stos
sbb
sbb
int
sbb
lock
and
pop
loopne
mov
jo
inc
mov
cmp
push
add
lea
and
out
leave
ja
xor
inc
nop
repnz
jle
andl
xchg
xchg
stc
sbb
and
repnz
icebp
popa
mov
adc
mov
imul
lods
testb
mov
btcl
dec
cmpsb
inc
mov
pop
sub
mov
or
cmp
push
addr16
dec
jmp
sbb
sbb
sarb
or
mov
lret
xor
mov
aas
adc
jo
inc
inc
sbb
jecxz
lods
sbb
cmp
mov
addr16
stc
push
xor
mov
ja
push
lcall
mov
jg
cmpsl
cmp
push
movsb
inc
js
in
jnp
imul
mov
dec
mov
xchg
in
std
push
pop
inc
pop
xchg
js
lcall
inc
jmp
or
ret
mov
xor
mov
mov
outsb
mov
xchg
fwait
jnp
or
in
repz
cmp
pusha
mov
call
sub
out
test
test
cmp
call
fbld
mov
jmp
jl
sub
and
andl
jl
das
xchg
loopne
icebp
and
repz
loop
scas
scas
stc
or
dec
push
std
sahf
scas
fisubs
pop
pop
add
sbb
fdivr
repz
outsb
xorb
dec
sbb
jge
inc
pop
test
lcall
or
pop
bound
icebp
enter
jg
or
xchg
mov
sarb
cmp
fbstp
mov
fs
lods
popf
pop
mov
cmc
mov
jnp
stos
push
es
xchg
xor
xchg
pop
int
sarl
push
adc
pop
jg
pop
loop
mov
push
or
or
aad
mov
mov
rol
pop
rorl
insl
enter
iret
outsl
pop
in
add
or
je
mov
pop
out
ljmp
jg
add
xchg
out
mov
fmull
xchg
pop
lcall
sti
inc
fld
or
loope
imul
sbb
push
aaa
xlat
test
jle
pop
and
sub
ret
gs
xchg
pushf
cmp
lea
and
jo
repnz
cmp
stc
or
and
pushf
push
mov
adc
je
gs
rcrb
xchg
sub
imul
les
cmpsl
imul
clc
loope
or
je
mov
mov
jl
dec
mov
push
push
jmp
hlt
jb
mov
rcll
pusha
inc
mov
mov
mov
inc
lcall
int
or
sbb
sub
jg
mov
pop
aam
sub
mov
add
sub
scas
insl
jmp
fdivrp
rcrb
stos
das
imul
leave
dec
gs
xor
rcl
stos
lods
lods
cmp
fisubrl
stos
dec
in
xchg
jmp
mov
and
mov
hlt
aad
mov
mov
aad
push
or
ret
in
inc
je
ja
std
mov
scas
outsb
cmp
or
lret
mov
jecxz
mov
inc
int
aas
mov
bound
push
orb
loop
into
into
add
sub
cld
pop
xchg
hlt
adc
mov
filds
and
or
sub
lret
or
jns
ss
push
xchg
or
inc
sub
outsb
cmp
je
lahf
xchg
adc
mov
lock
adc
cs
clc
pop
lods
bound
lods
sbb
pop
aam
xor
repnz
cmp
ror
arpl
aaa
jns
mov
frstor
ret
lahf
test
stos
int
mov
loope
xchg
lock
push
mov
inc
call
and
int
adc
cmp
lds
jge
jo
lcall
js
mov
mov
cmpsb
jg
in
jle
stos
mov
je
add
mov
std
push
pop
sbb
outsb
xor
xor
ja
sub
ja
test
lcall
jle
inc
add
mov
jno
push
xlat
cmp
jae
xor
imul
bswap
jo
or
dec
mov
and
int
out
xchg
pop
jnp
shrl
je
divps
xor
jp
mov
cmpsl
in
cmovo
push
jo
cmpb
sahf
inc
mov
lahf
and
push
and
movb
imul
pop
dec
test
aaa
push
clc
sub
shrb
imul
inc
push
es
add
scas
push
fsubrl
in
or
das
dec
outsl
pop
add
mov
scas
ror
mov
int
cmp
jl
hlt
jne
int3
jne
xor
xlat
fxch
xchg
mov
or
cld
or
out
push
leave
stc
lahf
or
ja
sbb
js
bound
jp
pop
push
push
pop
lock
out
pop
pop
int
nop
pop
aaa
sbb
out
mov
xchg
loopne
shlb
dec
stos
cmp
sbb
insl
insb
in
insb
or
outsb
xor
sahf
bound
insl
add
jae
and
inc
out
popf
bound
cmpb
sub
fimuls
and
jo
and
repnz
inc
cmp
push
in
addb
inc
hlt
mov
add
cs
adc
and
mov
pop
rorl
mov
jecxz
push
insl
jle
testb
leave
xchg
jo
dec
mov
jmp
shr
std
jl
jg
out
inc
xchg
cld
mov
dec
jl
ret
notb
sbb
movsb
inc
jnp
mov
pop
push
and
fs
daa
ret
enter
add
lds
cltd
add
sahf
inc
cmp
xor
mov
addr16
adc
fscale
adc
pop
arpl
test
scas
test
lahf
out
sub
test
int3
and
jo
inc
dec
fs
mov
cmp
push
sahf
out
lods
je
mov
gs
push
lcall
les
xchg
aas
mov
push
mov
xor
inc
mov
adc
in
sub
jecxz
movsb
insl
dec
mov
mov
sub
push
xabort
je
ret
pop
xchg
push
pop
in
leave
fbld
test
call
jle
mov
lret
xor
pop
ja
lods
pushf
or
add
inc
pop
cmpsb
xchg
xchg
scas
push
mov
xchg
cltd
push
xor
xchg
lock
lret
push
or
lods
lcall
jae
xchg
addb
stos
stos
jb
mov
mov
or
lret
cmp
pop
push
cltd
lcall
iret
mov
iret
ret
dec
orb
mov
test
dec
push
imul
scas
shll
mov
dec
aaa
mov
jp
js
notl
in
mov
jle
aam
xchg
fiadds
repnz
je
jns
dec
jo
mov
xchg
add
test
imul
push
or
fs
jae
adc
lods
stc
shr
mov
fwait
lret
aam
gs
ret
adc
gs
sbb
jo
add
mov
popf
adc
dec
mov
sub
testl
dec
inc
std
out
nop
xchg
iret
cmp
or
and
loope
jnp
js
mov
xchg
rolb
sarb
cmp
dec
dec
pop
sbb
cmpsb
jmp
inc
insb
dec
inc
cmpl
mov
clc
lea
out
add
test
xchg
xchg
sti
cs
mov
popa
or
jae
gs
fs
cmp
jnp
xor
and
ljmp
jno
jmp
xor
std
jne
inc
cmp
cmpsb
push
mov
insl
aad
pusha
out
test
mov
xor
jmp
and
outsl
pop
dec
shlb
stos
adc
jb
test
mov
mov
or
jbe
jl
inc
mov
stos
or
mov
gs
cmpsl
cmpsl
and
jo
cmp
xlat
rcll
pushf
push
pop
and
jno
mov
cwtl
jns
mov
je
xor
xchg
je
lock
dec
inc
lahf
cltd
push
out
sub
stos
inc
cld
push
inc
loopne
push
enter
sahf
xchg
flds
sbb
fbld
pop
fiadds
les
pop
and
rorl
xor
shrb
jnp,pt
scas
in
mov
cmc
test
lods
mov
aas
out
sahf
outsl
nop
jg
jne
cld
pop
inc
pop
test
mov
push
jno
xor
stos
insb
or
outsl
mov
imul
mov
stos
or
mov
inc
ret
add
cmc
negb
push
lods
xchg
imul
cmp
cwtl
xchg
adc
sbb
ss
std
xchg
int3
mov
daa
outsb
mov
push
push
mov
lods
movb
sbb
sahf
mov
jp
sbb
cmp
hlt
aad
sbb
mov
and
inc
jnp
add
pop
out
jmp
pop
push
movsl
scas
cmpsb
push
dec
iret
ss
cmc
xchg
pop
mov
sbb
test
fiadds
int3
ret
sbb
andl
jnp
dec
dec
push
xorb
inc
dec
js
cmpsl
and
sbb
rcrl
or
call
rcr
test
mov
pop
test
test
sbb
imul
cmc
das
test
add
in
stc
lret
mull
xchg
test
inc
mov
scas
movsl
ret
and
xchg
shrb
hlt
idivb
cli
or
fld
xor
jo
dec
imul
xor
lahf
pop
push
add
inc
sbb
popf
cmp
jno
movsl
test
adc
daa
xchg
adc
push
ret
in
xchg
movsl
test
or
lret
repz
mov
xchg
fdivs
inc
push
xchg
mov
pop
mov
enter
aaa
insl
adc
les
push
mov
rorb
adc
enter
enter
inc
loope
test
repnz
xor
pusha
or
pop
cmp
xchg
cwtl
pop
call
push
mov
dec
imul
mov
shlb
xor
adc
add
cs
xchg
mov
outsl
add
leave
push
mov
data16
hlt
mov
sbbb
add
insb
or
imul
mov
roll
adc
cli
jns
jge
add
dec
and
pop
pop
in
mov
cmpsl
inc
sub
and
aad
out
clc
into
imul
inc
pop
mov
mov
xor
leave
jb
scas
sub
iret
dec
sub
mov
sub
mov
pop
push
jg
lock
xchg
push
cmp
push
enter
shl
jp
and
or
xor
roll
mov
sti
testl
or
out
pop
out
cmp
ret
jle
and
sbb
or
push
sub
inc
pop
xchg
pop
push
adc
pop
arpl
adcl
or
rcrb
addr16
xchg
insb
daa
add
fidivl
adc
or
int3
sub
push
xchg
cmp
fwait
mov
outsb
xor
nop
pushf
stos
inc
add
fldl
rcl
push
insb
sbb
popf
int3
stos
fwait
out
or
jbe
xchg
cmp
outsl
inc
cmp
pop
or
or
test
sub
scas
repnz
mov
xchg
test
xchg
data16
out
mov
nop
sub
ret
mov
push
pushw
scas
xor
pop
xchg
ss
xchg
push
lcall
add
mov
dec
shlb
lods
add
jno
jp
xor
or
movsb
lods
mov
adc
push
loopne
xchg
scas
pop
jg
fcoms
push
mov
dec
xor
xchg
sub
test
dec
sub
in
mov
dec
cmp
mov
shrl
in
rorb
sbb
fdivs
or
mov
test
mov
mov
sbb
rol
lcall
sub
movsb
aam
mov
les
add
addr16
nop
xor
jne
call
push
xor
aad
test
cmp
ret
and
out
sbb
sbb
or
out
and
insb
ds
mov
push
lcall
loopne
pop
das
fisubl
adc
mov
xor
rolb
inc
aad
inc
jb
or
std
stos
jae,pn
or
mov
sub
test
call
pop
mov
in
xchg
cwtl
mov
xchg
sbb
mov
pop
aas
add
sub
stos
test
iret
lret
push
clc
xchg
stc
stc
mov
and
ret
mov
mov
insl
inc
cltd
dec
in
adc
orl
xchg
sub
cmp
ja
loop
pusha
dec
popa
insl
add
jo
xchg
jnp
add
or
aad
shll
subb
lret
adc
sbb
inc
push
push
push
stos
adc
inc
addl
jp
orl
jno
pop
ret
cmpsl
pop
fmuls
push
cmp
outsl
dec
mov
sbb
data16
loop
jmp
iret
fnstsw
add
repz
xor
mov
in
xor
cs
aas
sbb
nop
xor
subl
test
sbb
out
shlb
and
mov
insb
out
lea
fldl
mov
icebp
div
jmp
or
add
test
push
mov
push
std
shl
aaa
mov
mov
mov
fldt
jbe
mov
fldl
cltd
add
xor
xlat
push
pop
add
inc
ret
mov
imul
fdivs
mov
cld
cmp
mov
cmp
addr16
cmpsb
add
clc
out
mov
and
xchg
cmpsb
jb
iret
fs
mov
mov
leave
and
sbb
mov
pop
or
ret
pop
stos
out
mov
pop
test
bnd
xor
imul
mov
add
sbb
cmp
mov
jmp
call
sbb
shl
cmp
rorb
mov
xchg
lret
mov
jnp
adc
aaa
movsb
mov
es
push
sbb
pop
adc
dec
push
cmp
push
movsl
repnz
outsl
sbb
adc
aas
stc
mov
sub
js
xchg
sub
push
or
shlb
inc
aad
fiaddl
mov
sub
dec
or
or
add
js
mov
sub
cs
sub
adc
loopne
and
dec
sbb
pop
mov
sbb
sbb
sbbl
shr
ja
cmp
push
push
es
sahf
sarb
lea
sub
jo
fs
lahf
xchg
incb
xlat
movsl
xchg
xor
xchg
jnp
gs
sbb
xchg
or
xor
fwait
out
out
jo
pop
lcall
adc
sub
outsb
insl
roll
sarb
inc
push
cmp
out
mov
int3
ss
aam
ljmp
and
sub
pop
dec
lock
test
jp
inc
fdivrl
daa
repz
setne
outsb
push
sub
movsb
or
int3
pop
jmp
inc
jl
push
outsb
shll
test
imul
sub
hlt
adc
jecxz
mov
iret
lret
or
movsb
jo
popa
arpl
mov
repz
daa
in
sub
xchg
sub
jbe
lret
lret
mov
cs
aad
fidivrl
ss
adc
push
push
sub
xchg
cmc
jb
mov
or
int3
dec
and
push
xchg
je
rcll
xor
call
stc
or
mov
push
xchg
fidivrs
mov
mov
movsl
jbe
push
jmp
add
into
test
jge
dec
adc
shrl
clc
pop
icebp
cmc
hlt
pop
lods
add
loopne
subl
adc
adc
shl
int
jbe
or
loope
inc
inc
xchg
push
data16
xor
push
sbb
in
mov
sub
add
inc
js
ds
mov
inc
fists
leave
test
lock
jb
loopne
stc
testb
cmc
jle
lods
fisttps
scas
pop
adc
leave
sti
jns
adc
mov
std
xchg
std
xchg
mov
pop
add
pop
lret
inc
test
cmp
sub
lea
ret
sbb
ret
sbbl
mov
icebp
inc
test
or
je
dec
sbb
stc
xor
or
andl
xor
leave
sub
or
sbb
inc
cmpsb
lret
xor
fisttpll
pop
push
jae
push
and
stos
pop
rorb
popf
xchg
jae,pn
js
data16
pushf
cmc
cmp
int
push
xor
push
pusha
cli
jmp
int
int
mov
in
insl
shl
aad
sbb
inc
sbb
test
xor
loopne
pop
pop
push
insl
repz
xor
loopne
mov
mov
lock
sub
mov
jle
mov
push
pop
divl
jo
das
call
das
sub
and
es
or
lcall
movsb
mov
enter
sbb
pop
pop
pop
insl
insb
sbb
icebp
cmp
mov
fistpl
sbbb
ret
imul
out
xor
inc
mov
negl
es
adc
push
scas
imul
iret
cmp
neg
lret
sub
int
paddw
test
xchg
arpl
outsb
ja
test
inc
mov
sub
loope
sbb
loope
std
clc
stos
and
push
sahf
or
push
rolb
mov
xor
mov
mov
sbb
add
cmp
xchg
inc
stos
and
out
jmp
push
jmp
pop
test
sub
pop
pop
cmc
jg
xor
and
loop
ret
xchg
push
mov
sti
out
mov
fsubr
and
scas
ss
shr
mov
push
pop
lods
lods
insl
int3
push
mov
xchg
xchg
dec
add
ljmp
test
mov
mov
js
push
sbb
sub
and
sbb
xchg
mov
je
sbbb
mov
xor
push
push
pop
pop
sbb
jle
test
mov
pop
aam
sbb
dec
cltd
xchg
lcall
push
inc
fisubrl
push
iret
leave
xor
jg
inc
sbb
sub
sub
stos
push
jg
cmp
push
cli
add
rcrl
lahf
pop
add
fwait
or
mov
leave
testb
and
in
add
cmc
int3
sbb
in
mov
addr16
popf
test
mov
and
inc
imul
xchg
mulb
sbb
xchg
in
data16
cltd
adc
clc
and
xchg
dec
mov
mov
sbb
push
sahf
and
mov
jl
mov
sbb
lret
pusha
xlat
repnz
sar
lds
loope
js
lods
ret
xchg
popf
je
iret
inc
xlat
mov
jle
push
inc
jle
negb
jmp
dec
add
mov
call
mull
xchg
fists
das
push
dec
jle
imulb
stc
jge
call
inc
mov
pop
sti
xor
aaa
xor
movsb
add
xor
sub
popf
cmp
jns
in
and
or
push
lods
rclb
pop
and
data16
leave
cmp
lahf
add
and
xchg
sub
dec
xor
dec
loopne
and
mov
adc
adc
mov
outsl
cli
fs
lods
mov
pop
cmp
iret
pusha
mov
xor
add
leave
mov
roll
mov
insb
inc
sbbl
in
mov
sahf
add
inc
inc
add
push
jno
fs
xlat
adc
inc
data16
or
ds
or
jle
or
push
mov
push
mov
sbb
ljmp
and
repz
outsl
adc
jb
push
lret
es
sbb
enter
xchg
dec
xchg
mov
fimuls
int
add
imulb
cmpsl
mov
stc
mov
xor
cmp
xchg
pop
pop
pop
test
xchg
sbb
sub
je
push
xchg
sbb
insb
push
movl
jl
jbe
shll
loop
sub
cmp
pusha
aam
xchg
sbb
xchg
or
xchg
sbb
scas
jo
sub
lea
mov
mov
jno
xlat
leave
add
dec
sti
or
xchg
int3
or
outsl
faddp
jnp
insb
hlt
rolb
adc
adc
jno
push
or
int
mov
cmp
jle
pop
loop
bnd
push
out
cmp
xlat
mov
sbb
pop
dec
sar
xor
inc
fidivs
andb
xchg
jno
mov
and
or
movsb
mov
cmp
jp
push
lds
sahf
sbb
cwtl
push
inc
mov
xor
xchg
bound
jle
add
pop
or
icebp
mov
pop
popa
test
into
add
lds
shlb
xchg
shll
loopne
mov
or
int
std
cmp
in
out
out
jg
cltd
into
pop
xchg
es
jno
dec
cmpb
mov
insl
lcall
lods
bound
pop
test
pop
jl
negb
fdivp
faddl
xorl
mov
pop
pop
xchg
push
movsb
jnp
lds
aas
mov
std
push
dec
mulb
or
adc
outsl
rolb
inc
mov
jb
in
pop
cmpsb
lods
jae
por
mov
add
mov
jecxz
push
aas
out
nop
xor
and
movsb
or
pop
ja
xor
dec
in
mov
outsb
push
mov
xor
mov
mov
mov
mov
jno
mov
pop
lret
jno
and
jne
pop
add
pop
add
fmull
jg
jo
ror
daa
data16
repnz
add
in
pop
lods
lret
add
lcall
fisubrs
add
or
scas
add
xchg
sub
sbb
cmp
xor
push
adc
in
test
jns
repnz
pop
les
sub
fbld
cld
pop
bnd
cmpsl
bnd
jmp
and
mov
inc
jle
es
aas
nop
or
ftst
daa
mov
in
fists
cmp
push
std
sbb
inc
adc
mov
flds
push
mov
jno
jb
xchg
pop
cmovne
jmp
push
loopne
ret
nop
ret
int
inc
cli
xor
inc
push
or
call
inc
jg
push
mov
and
jb
pop
scas
das
mov
leave
punpckldq
pop
dec
jbe
mov
and
add
mov
jb
mov
fldl
xor
movsl
jp
ret
push
insb
fstps
and
lea
je
mov
cli
mov
js
xlat
mov
jge
push
fldt
mov
in
mov
test
repz
mov
jnp
fmull
fcompl
add
push
pop
cli
and
ljmp
lahf
lcall
call
jb
leave
sbb
mov
sub
inc
stc
push
add
jmp
fnstenv
repz
adc
pop
ja
jae
pop
mov
dec
popf
mov
shll
xor
cwtl
xchg
cmp
mov
push
sub
mov
imul
add
lock
lcall
mov
stos
test
mov
inc
decl
mov
jg
fistps
push
or
jg
iret
arpl
lods
adc
bound
mov
xchg
add
xor
fdivrl
xchg
push
shr
add
cmp
in
pop
rolb
or
pop
in
sub
or
dec
scas
jae
enter
ds
or
push
loopne
out
dec
pop
sbb
in
shlb
pop
les
mov
adc
or
les
fmul
push
out
jl
mov
mov
stos
ret
js
push
xor
pop
rcrb
sub
inc
test
es
sbb
ret
inc
in
out
jns
cmp
je
sbb
or
push
stos
cmpsb
iret
insb
push
sub
shll
xchg
imul
ds
lods
cltd
add
ret
jge
fsubrl
add
lret
push
and
int
dec
arpl
push
jge
das
popf
ss
arpl
mov
or
xchg
lahf
pop
lret
test
jmp
and
inc
or
sub
adc
dec
ss
testb
mov
push
movsl
push
lret
adc
and
cmpsl
aaa
sbb
cmpb
out
nop
test
ss
add
lcall
mov
mov
jb
and
or
add
scas
cmp
or
sti
out
xor
cmp
imul
clc
cmp
popl
pop
shlb
dec
jo
retw
sbb
ja
lretw
pop
sub
data16
test
and
imul
loope
hlt
mov
adc
sub
mov
mov
rol
or
push
into
push
lahf
adc
or
inc
xchg
call
lret
je
scas
fcmovbe
movsl
adc
std
mov
lds
out
jp
xor
pop
out
mov
push
jp
mov
xchg
and
jecxz
ljmp
xor
insb
jne
inc
loopne
decb
pop
clc
or
jg
imul
popf
jbe
mov
sub
fwait
aam
lock
sahf
or
outsb
xchg
aas
ret
gs
lock
fs
fprem
pop
inc
out
popa
fsubrs
sub
jmp
push
mov
sahf
dec
test
mov
lcall
push
fwait
hlt
cmp
pusha
add
pop
sub
cs
imul
dec
or
addr16
jne
jbe
jae
jbe
ret
lret
ret
or
xchg
mov
fildl
jo
sbb
push
adc
and
xchg
push
out
lods
lret
jb
xchg
jns
mov
cld
push
jbe
pop
popa
clc
cmp
xor
jno
mov
xchg
jmp
lock
or
jne
insl
cmp
xor
ret
mov
rorb
push
cmpsb
mov
inc
arpl
pop
xor
test
dec
dec
mov
cmp
jns
push
jp
mov
jp
push
push
jmp
and
and
out
xlat
outsb
fdivrs
jb
jns
out
sub
stos
jb
in
into
xor
mov
mov
dec
aas
inc
adc
pop
jns
testl
lds
std
jb
cmpsl
add
shlw
and
adc
xor
outsl
shll
outsb
loopne
test
push
test
and
call
push
int3
in
lock
cmpsl
and
lcall
cmp
and
or
jno
xchg
cmc
fwait
mov
cmc
sub
push
cmp
mov
mov
dec
push
mov
ret
ret
shlb
ficoms
fstl
sbb
pushf
leave
add
lea
jne
xchg
shl
jnp
dec
mov
push
idiv
or
mov
adc
mulb
xchg
and
insb
inc
repnz
gs
icebp
das
imul
sbb
jl
mov
mov
and
lahf
jno
lret
pushf
pop
jb
xor
imul
cmp
push
sub
jp
in
add
inc
mov
cld
xor
mov
call
sarb
adc
iret
leave
jl
sahf
inc
out
mov
or
lea
mov
outsb
xor
or
imul
ja
shlb
out
out
insb
mov
lods
out
sub
xchg
mov
dec
rcrb
jmp
push
mov
jp
or
daa
jmp
aas
jmp
push
jle
ret
scas
jle
sbb
loopne
loopne
rcl
cmpl
sarl
xor
sti
jmp
mov
lahf
arpl
into
jne
cmc
fcomi
jnp
jbe
jp
push
mov
faddp
ret
fcompp
rcr
negb
pop
loopne
sti
sub
ret
aam
ret
cmp
lds
xorl
cmp
add
aaa
lcall
fists
std
and
sub
xor
pushf
das
jnp
fadd
pop
fmul
mov
or
lods
daa
ffreep
and
xchg
mov
mov
dec
leave
pcmpgtw
stc
enter
lods
in
or
insl
in
add
loope
ret
inc
mov
and
ss
push
imul
mov
icebp
stos
ret
rcrb
or
mov
xor
insb
or
dec
data16
jb
fwait
xor
pop
dec
add
test
out
mov
ret
xlat
xchg
pop
sub
fiadds
push
and
mov
insl
cld
rorb
lds
inc
lea
adc
lret
jmpw
sub
daa
lcall
pop
out
scas
fcmovnu
mov
stc
in
xlat
mov
fisubrl
sbb
sub
and
push
cs
int
pop
cli
xchg
fildll
out
pushf
negl
into
jae
repz
jns
cmp
repz
mov
rol
add
sar
xor
in
xchg
mov
decl
mul
gs
and
xor
inc
sub
andl
das
arpl
pop
push
fsubrs
bound
mov
push
cs
dec
test
addr16
ret
lcall
stos
lock
adc
pop
inc
fists
inc
mov
icebp
jecxz
mov
mov
orl
dec
jmp
dec
push
add
xchg
cs
lds
ja
ret
aas
xchg
es
or
dec
popf
add
jo
dec
mov
jl
inc
inc
pop
call
enter
adc
icebp
mov
out
mov
movsb
loop
roll
jecxz
and
inc
and
sarl
jmp
mov
jnp
mov
mov
xchg
je
cmc
sub
cmpsb
mov
clc
or
mov
fildll
xor
aas
bound
out
and
mov
and
lds
jno
pop
sub
and
mov
mov
adc
icebp
cmp
test
mov
jp
loope
orl
iret
or
lcall
popa
loop
mov
loop
pushf
mov
dec
jl
sub
dec
fwait
decb
fiaddl
pop
sbb
repnz
das
adc
mov
hlt
icebp
loopne
es
inc
in
mov
es
sub
fs
or
test
push
push
and
push
insl
mov
cmpsb
arpl
xchg
aaa
clc
in
cmp
xchg
push
add
cmp
loope
shlb
add
ret
add
or
mov
rcrb
je
aas
dec
xchg
push
lret
out
sbb
add
xor
aad
rorl
mov
jle
and
mov
fnstcw
ret
jp
xor
sub
dec
and
mov
pop
mov
and
aaa
sbb
in
lock
loop
xlat
mov
xchg
xchg
add
jl
xchg
pop
jo
adc
into
push
inc
mov
or
mov
xor
xchg
and
cmpsl
jl
lods
jmp
dec
jp
and
imul
jae
ret
mov
or
mov
shlb
nop
jl
inc
xchg
cmpb
cmp
lods
pop
dec
inc
add
add
pop
mov
pop
jmp
fistps
push
in
gs
mov
xchg
leave
mov
xor
mov
mov
rcll
pop
push
enter
inc
andl
push
push
jg
mov
inc
dec
lods
gs
mov
sbb
das
std
jnp
cmp
push
cmp
push
jno
iret
lret
jae
adc
pop
in
dec
mov
aaa
mul
lock
jbe
movsl
popf
lods
ja
pop
cwtl
jne
and
data16
xor
mov
push
xchg
adc
xor
in
jnp
dec
pop
mov
xlat
mov
add
mov
inc
inc
lcall
mov
xchg
imul
and
sbb
mull
pop
xor
sbb
fisubs
gs
mov
and
sbb
sbb
xor
mov
aas
inc
test
push
cs
add
es
lods
lret
aam
sub
cmpsb
mov
stos
mov
addb
iret
add
cmc
mov
lcall
sbb
repz
add
cmp
sbb
pop
pop
mov
ja
cmc
push
adc
cmp
sub
sbb
lahf
sbb
subl
sbb
dec
fldl
dec
push
stos
cmp
or
sbb
loope
sbb
jle
mov
sub
bound
mov
call
mov
movsb
nop
and
push
dec
insb
jge
sbb
ret
jnp
cld
or
mov
or
pop
jae
cld
add
push
cli
mov
xchg
lahf
inc
insl
pop
xchg
xor
daa
stos
sub
test
or
lret
sub
imul
xor
sub
popa
insb
inc
mov
xor
inc
fists
popa
or
mov
push
sbb
dec
push
fimuls
ret
jge
mov
sbb
mov
out
mov
and
dec
in
or
xchg
add
add
iret
sub
add
or
pop
push
jg
loopne
movsb
push
pop
lock
or
stos
cmp
pop
mov
stos
push
lods
cmpsl
outsl
mov
pop
mov
out
arpl
inc
xchg
aaa
sbb
cmp
ds
js
sub
mov
adc
mov
jmp
xchg
jge
scas
nop
imul
mov
je
dec
push
pop
test
gs
test
jo
popf
push
xor
push
jno
inc
and
into
ljmp
adc
mov
jg
pusha
jmp
sbb
mov
punpckhdq
in
add
push
inc
rolb
push
int3
adc
inc
test
jg
pusha
xchg
dec
je
pshufw
loopne
add
fldl
sub
inc
dec
jecxz
xchg
cmc
jle
lret
sbb
pushf
mov
xor
iret
sub
jb
sbb
adc
cs
jae
xor
scas
add
push
pop
icebp
fiaddl
or
stos
push
push
divps
dec
test
movsb
test
sbb
insb
into
adc
fisttps
fwait
and
addr16
pop
xchg
fildll
pop
das
fidivrs
repz
rcrl
jle
cmp
push
mov
scas
cmp
test
mov
cltd
mov
sbb
sbb
xchg
or
sub
aam
mov
lea
les
inc
and
add
ss
inc
pop
lahf
jb
aaa
pop
es
sub
cmc
into
cmpsl
roll
add
and
add
add
addl
mov
or
and
adc
jae
and
cwtl
dec
and
mov
mov
pop
mov
adc
sub
mov
pop
sahf
in
andb
fnstcw
cmp
adc
inc
adc
pop
pop
gs
ljmp
or
dec
out
stc
dec
imul
addr16
call
mov
xor
xchg
pusha
push
jmp
xor
es
gs
or
inc
xchg
cmp
sub
cmp
push
nop
popa
inc
and
ret
pop
sbb
sbb
pop
adc
sub
outsl
fs
fistpl
lret
xchg
lret
lock
cmpl
arpl
fsubl
scas
pop
popf
nop
int3
dec
movl
ss
dec
mov
addr16
leave
sbbb
outsl
xor
cmpsl
and
pop
in
imul
xor
cld
fwait
and
and
out
and
push
out
iret
xchg
and
sbb
imul
in
or
lret
popa
mov
test
shl
xlat
mov
cmpsb
jmp
leave
xchg
std
or
movb
and
lods
lret
adc
mov
xchg
adc
pop
out
or
fstl
jo
sbbl
in
mov
adc
insl
xlat
or
cmc
nop
xchg
mov
call
leave
and
sub
out
or
rol
xor
sub
pop
inc
inc
lock
jmp
imul
pushw
push
into
cmpl
sbb
jmp
rcrb
sbb
jmp
js
or
push
dec
scas
jne
sbb
clc
mov
jo
cwtl
push
sub
adc
sub
adc
cli
dec
cmp
lcall
cmp
test
lret
xor
and
fldenv
push
add
hlt
inc
xor
pop
push
shll
mov
in
das
sbb
or
sti
ror
loop
repz
push
cmpsl
imul
fcoml
xchg
out
ja
in
add
jns
mov
cmpsl
adc
inc
mov
stos
mov
dec
xor
jb
inc
push
stos
mov
aam
mov
mov
push
adc
mov
lods
xchg
dec
sub
xor
repz
loope
sub
inc
bound
and
test
push
dec
punpckhwd
inc
jl
test
into
lahf
lret
leave
adcb
cwtl
pop
arpl
lods
sbb
jae
mov
lret
pop
leave
xchg
cwtl
add
push
push
jl
movsl
add
push
mov
into
mov
xchg
ss
pop
imul
arpl
scas
pop
das
mov
or
or
jg
xchg
sub
sub
out
push
sub
push
out
dec
addl
andb
jecxz
sbb
inc
shll
jb
lcall
cmpsb
jo
cld
pop
inc
and
push
xchg
femms
and
fmull
mov
imul
pusha
pop
dec
sbb
leave
cwtl
dec
cmpsb
cmp
rcll
xchg
cltd
pop
xchg
sub
cwtl
ret
and
loope
push
push
pop
jb
xchg
inc
jmp
mov
scas
add
mov
mov
mov
mov
push
testb
mov
sbb
xchg
sub
pusha
push
ja
mov
call
xchg
mov
sahf
sbb
ret
mov
aam
gs
inc
lock
js
mov
mov
cmc
mov
sub
andl
xor
xchg
cmp
jp
mov
dec
and
pop
push
adc
aaa
inc
xchg
add
or
push
negl
sbb
and
adc
adc
add
nop
push
cmp
outsl
int
fcmovu
push
jo
or
js
ret
cmp
imulb
fildl
shll
jp
inc
or
daa
pop
scas
jmp
sbb
faddl
fisubs
cmpsl
and
test
jbe
sahf
xchg
in
jl
pop
movsb
and
not
divl
dec
addr16
push
add
jmp
push
ss
lock
pusha
jl
imul
dec
mov
xor
sub
fwait
pop
mov
mov
test
into
mov
pop
mov
insb
sbb
push
lret
xchg
out
mov
je
xchg
fsubp
mov
xchg
lret
lock
scas
ffree
popa
test
xchg
loope
xor
incl
xchg
aas
nop
mov
or
fisubs
ret
fs
mov
out
loop
dec
xchg
fs
mov
leave
push
ret
xlat
inc
xor
mov
jns
push
xchg
mov
cli
fbld
and
popf
inc
idivb
push
mov
sarl
sub
sub
repz
jno,pn
int3
ja
or
das
pop
push
shl
sbb
or
and
ret
xor
jbe
sub
adc
ja
dec
jg
sbb
mov
cltd
ret
leave
and
mov
pusha
dec
or
cmp
inc
mov
mov
sub
mov
push
imul
xor
popf
mov
xor
ja
das
and
nop
dec
xchg
orb
mov
imul
out
or
fldcw
int
ret
xor
addr16
sbb
push
clc
mov
or
xchg
push
add
mov
and
dec
and
dec
lods
andl
ja
and
cmc
mov
sbb
lock
lock
inc
rcl
ss
movsb
push
and
int
fs
xchg
pop
push
mov
pop
xlat
into
repnz
xor
mov
cmp
stos
in
inc
xchg
or
popf
pushf
fcmovu
pop
iret
inc
push
testl
imul
es
xchg
cs
js
insb
aam
movsb
pop
mov
enter
mov
out
lret
enter
inc
or
mov
int3
and
imul
mov
shlb
xchg
incb
aas
sub
mov
in
push
pop
mov
adc
pop
jns
leave
cwtl
test
adc
es
clc
push
mov
fistpl
inc
fbstp
out
mov
fwait
jg
add
jne
pop
mov
outsb
jle
icebp
loopne
ficompl
out
fsubrl
loop
or
push
aam
inc
sbb
dec
mov
std
mov
mov
das
add
mov
or
inc
jns
dec
ret
imulb
popf
mov
pop
call
inc
aam
in
iret
das
test
push
push
sub
fisubs
icebp
inc
popa
mov
int3
das
xor
and
sbb
jo
flds
rorb
fists
lahf
in
std
mov
icebp
pop
bound
sbb
mulb
jo
fldt
and
hlt
dec
mov
push
sbb
imul
mov
ret
cmc
stos
mov
rcll
out
fld
icebp
gs
mov
test
out
xchg
popf
add
fnstcw
lret
aaa
out
popa
andl
or
out
sub
fcmovne
iret
sti
xchg
mov
jno
mov
leave
inc
dec
fsubrp
inc
dec
test
out
mov
loopne
outsb
sub
cmpsl
mov
sahf
and
push
xchg
pop
mov
xor
push
scas
pushf
sbb
cmc
mov
js
and
pop
out
mov
xor
and
mov
push
mov
bswap
lret
out
push
or
push
inc
loopne
mulps
fadds
int3
test
out
xchg
loope
xor
add
pop
cmp
nop
popa
cld
inc
jns
xchg
jg
loope
pop
jno
nop
dec
jl
call
mov
iret
dec
loope
sbb
std
inc
push
or
xor
cld
clc
in
les
xchg
mov
mov
push
mov
ja
sti
or
test
and
inc
push
or
leave
xchg
sbb
sub
cwtl
cmp
dec
aad
mov
leave
outsb
adc
mov
insb
sarl
adc
cmp
jl
js
fisttpll
lods
push
decl
adc
mov
in
xchg
cli
push
sub
push
lds
jno
js
pop
data16
roll
push
scas
out
test
out
jg
and
inc
cli
pop
push
je
leave
call
jp
sbb
or
pop
add
mov
out
push
ret
mov
jne
rorl
xchg
mov
and
loop
into
and
stc
xchg
out
into
cmp
lods
xchg
inc
jle
call
rorl
fs
sbb
mov
cmp
loope
pop
mov
xchg
dec
pop
stc
add
jge
mov
dec
nop
adc
mov
adc
dec
rcrl
push
xor
lahf
add
push
xor
xor
dec
pop
sbb
mov
and
push
push
mov
sub
jg
fwait
pop
mov
push
incb
mov
mov
in
adc
and
cmp
and
pop
push
sbb
jae
dec
cwtl
ljmp
fldt
negl
popf
testl
cmc
adc
push
sub
or
out
pop
jno
ja
and
nop
cld
adc
addr16
cmp
mov
adc
fdivrl
fadd
test
movsl
add
jle
test
dec
ljmp
in
dec
ljmp
incb
jge
ret
mov
jle
unpckhps
neg
clc
test
mov
add
rorl
sub
or
or
push
mov
push
sub
test
dec
dec
cli
add
es
pop
mov
mov
push
push
mov
push
outsl
mov
addl
mov
outsb
gs
fwait
aas
mov
out
mov
jo
lret
lock
data16
jno
pop
and
sbb
sub
lret
adc
jmp
cs
mov
inc
sub
test
repnz
gs
jmp
sub
scas
mov
mov
sub
sbb
and
and
hlt
and
mov
inc
cmp
inc
xchg
addr16
movsl
fbld
sub
out
out
fbld
test
mov
aas
mov
mov
jne
outsl
xor
test
cli
dec
cmpb
lahf
in
jmp
cmp
mov
push
mov
rcl
sbb
pop
loopne
icebp
pop
xchg
clc
sbb
sahf
adc
lahf
imul
mov
jl
fninit
mov
jmp
pop
dec
sti
dec
out
outsl
inc
jl
gs
pop
popf
ja
mov
hlt
sahf
pop
jo
in
cmpsb
and
inc
pusha
push
inc
scas
or
xor
repz
or
sub
lahf
js
scas
sbb
sub
dec
push
out
loope
jo
mov
inc
and
cmc
cmp
aad
cmp
xlat
add
sbb
rcrl
scas
cmpsl
inc
cli
into
ret
out
xchg
dec
cltd
hlt
lock
or
and
shlb
inc
cs
ficoml
or
xchg
mov
repz
lcall
push
mov
pop
dec
mov
xchg
in
cmp
call
mov
in
into
mov
mov
mov
push
sti
mov
fcoms
adc
push
aas
cwtl
jbe
clc
icebp
js
fsub
lock
call
cwtl
sti
add
pushf
sub
push
pop
cli
inc
out
pop
enter
cld
xor
das
movsl
int
or
nop
loope
pop
jno
inc
xchg
jl
jmp
loope
orl
insl
sbb
popa
mov
arpl
adc
mov
call
or
aas
add
pop
dec
add
filds
jle
pushf
or
mov
add
ds
lock
pop
lahf
inc
lock
inc
vpcomq
sti
clc
sahf
or
in
sbb
nop
aad
shll
js
shr
pop
call
xchg
push
sub
push
dec
inc
in
iret
sub
pop
sbb
jno
pushf
adc
and
or
loope
push
add
jno
or
clc
mov
outsb
jmp
fsubrl
into
inc
mov
dec
pop
repz
mov
pop
xchg
aam
repnz
roll
out
test
rorl
mov
movsl
sahf
sub
pusha
jp
in
in
call
loope
adc
inc
or
mov
fsubs
test
xchg
in
xor
test
icebp
insl
sub
in
and
test
pop
dec
xchg
movsb
push
and
ret
cmc
sbb
dec
push
icebp
push
loope
pop
stos
push
data16
push
cmp
and
sar
repz
mov
and
sub
arpl
mov
pusha
inc
adc
cld
push
subl
sub
xor
sub
adc
cs
cmpsl
aas
dec
cwtl
jg
cmp
arpl
sbb
loope
pop
xchg
insb
cld
adc
mov
dec
dec
lock
jae
ret
data16
mov
bound
sub
movsb
add
push
insb
mov
insb
ds
jmp
ret
inc
fdivs
in
mov
xor
movsb
mov
xlat
pop
dec
sarl
orl
outsb
aaa
ret
add
mov
mov
push
jo
xchg
push
dec
pop
or
fists
std
and
cmpsl
sbb
aas
adc
jmp
cmp
repnz
xchg
cltd
or
sbb
popf
or
pop
mov
lods
mov
inc
mov
lds
sub
out
jb
je
pop
std
cli
shrl
sbb
std
and
gs
in
test
inc
cwtl
loope
or
lahf
loopew
add
jae
test
push
icebp
or
inc
xor
sbb
sbb
or
out
sub
rolb
jno
clc
rcrl
cmp
inc
pop
popa
cld
mov
or
lret
xchg
lds
mov
test
add
cmc
xchg
cs
inc
popa
adc
in
pop
and
jge,pn
in
push
pop
xchg
jp
movsb
ds
jg
inc
push
fisubl
and
loopne
push
fdiv
lea
and
daa
pop
sarb
dec
fs
mov
fsub
or
out
cmp
cmp
fldenv
int
pop
into
arpl
aas
pmulhw
arpl
push
popa
push
jnp
pop
mov
inc
mov
iret
push
clc
mov
movsl
dec
in
out
movsb
je
negb
lock
mov
nop
cmpsl
dec
in
lret
cltd
xchg
xchg
rclb
cltd
fistpll
sbb
adc
jns
int3
repz
in
jecxz
repz
pop
mov
stos
fwait
sub
in
andl
jae
pop
std
sub
out
cmp
ljmp
jno
daa
pop
mov
insb
enter
mulb
push
inc
loope
repnz
push
add
loopne
das
mov
icebp
ret
and
ss
repnz
mov
cmp
pusha
das
add
lea
mov
daa
push
shrl
add
jae
or
mov
data16
cmp
jp
dec
push
lret
and
jecxz
mov
or
sbb
test
sbb
shl
mov
and
std
and
adc
mov
icebp
pop
and
popf
pop
cmpsl
or
mov
xor
mov
push
sbb
jbe
dec
into
movsl
repnz
pop
loop
jbe
jbe
js
out
mov
lahf
sahf
pop
push
loope
loopne
cs
jns
pop
xchg
jge
inc
orl
clc
mov
sub
dec
ds
and
xor
mov
into
cwtl
ret
mov
pushf
cmp
in
cmp
adc
pusha
icebp
sbb
dec
lds
ret
push
push
scas
nop
pop
mov
xchg
pop
jge
sbb
jge
hlt
aaa
fcoml
stc
dec
mov
pop
mov
mov
mov
mov
xor
mov
mov
mov
sub
xlat
xchg
inc
jno
daa
in
jge
mov
das
mov
stos
xchg
mov
pop
mov
mov
xor
sub
adc
hlt
nop
pop
popf
and
ja
jns
cmpsb
cmpsl
inc
inc
ret
pusha
std
jmp
adc
fcomip
cmp
and
popf
daa
cmp
inc
xchg
sbb
and
les
push
or
lods
out
enter
xor
adc
and
insb
xor
xchg
inc
addr16
xor
mov
sub
das
dec
jae
cld
push
sub
int
cmpsl
mov
iret
mov
jl
dec
divl
cwtl
rep
mov
test
mov
int3
pop
or
pop
imul
jae
adc
cmp
cs
mov
cmpb
lods
subl
pushf
sarb
gs
insb
jmp
pop
add
add
xor
or
adc
jo
outsb
push
imul
mov
mov
mov
xor
notb
mov
fiadds
mov
pop
add
mov
pop
fwait
add
ljmp
scas
mov
sahf
shrb
ljmp
sub
out
aas
jne
out
xor
adc
cmp
inc
mov
shr
sbb
sub
stc
push
rcrb
sbb
in
rcll
daa
ret
sbb
in
nop
gs
cmp
mov
sti
jle
jg
ret
push
fs
mov
iret
enter
pop
push
or
jmp
and
and
inc
and
mov
mov
xchg
or
cmp
dec
pop
mov
inc
and
pusha
cld
and
mov
in
xorl
imul
dec
test
or
bound
push
or
jnp
inc
or
dec
arpl
les
pop
bound
lcall
cmp
cmpb
aam
jp
dec
jne
pop
inc
sub
imul
call
mov
les
roll
fstpt
pop
in
stos
out
test
sub
div
push
xor
lods
push
imul
inc
into
xor
aam
mov
movsb
cmpsl
mov
push
xor
pusha
mov
jg
popf
mov
movsl
jl
das
pop
cltd
loope
xchg
cmp
int
or
mov
ljmp
pop
in
aam
pop
mov
test
stc
adc
ss
inc
inc
sub
cmpsl
cli
ficoms
popf
cmp
fildll
fildll
lods
xor
pop
adc
ljmp
in
cmc
mov
in
mov
and
aad
div
stos
cmp
jg
fsubrl
les
lret
add
scas
sub
jb
out
subl
push
inc
cmp
jp
cmpb
push
loopne
adc
dec
mov
cli
or
adc
mov
cwtl
push
fildll
cmpsl
push
lcall
lahf
ret
repnz
ficoml
mov
sbb
mov
jne,pn
test
add
addr16
pop
adc
jl
lock
xchg
add
mov
mov
sbb
inc
icebp
cmp
fidivs
std
enter
hlt
test
xchg
fucomi
xor
dec
dec
pop
pusha
inc
inc
outsb
dec
arpl
mov
mov
pop
mov
adc
mov
sbb
sbb
push
adc
cmp
sbb
repz
cs
in
push
dec
jmp
ret
fidivrl
or
inc
jnp
cli
outsb
jle
mov
push
pop
add
xor
hlt
clc
into
inc
fwait
or
jne
sub
lahf
mov
cli
gs
mov
cmp
sub
data16
test
shll
jae
ljmp
pop
std
pop
sbb
push
in
mov
and
mov
pop
nop
pop
mov
sub
pop
loopne
insb
ja
dec
xor
pop
test
or
stos
or
cmp
lock
cmp
pop
pop
xchg
fstl
mov
inc
add
or
test
push
pop
add
test
jb
lcall
in
pop
outsb
incl
hlt
leave
test
push
in
and
rorb
jmp
jg
cmpsl
mov
pop
cli
gs
adc
movb
push
das
ja
lahf
pop
stos
mov
ret
shlb
or
mov
mov
and
std
pop
mov
dec
mov
sti
sar
sbbl
stos
std
add
hlt
push
movd
fs
xchg
mov
push
push
jecxz
ficoml
mov
sub
ret
add
les
sbb
cmp
pop
pusha
int3
mov
push
jae
outsb
stos
dec
mov
lahf
pop
mov
stc
adc
imul
jo
shll
nop
push
pop
orl
pop
xor
fiaddl
cmp
xchg
mov
out
call
sbb
mov
cmp
mov
jge
mov
sbb
jbe
loope
mov
jae
je
xchg
jbe
jle
mov
sahf
add
jmp
ja
iret
xchg
jecxz
js
fiadds
shr
dec
ficomps
push
push
push
push
push
pop
clc
mulb
pop
dec
fsubl
jno
push
jge
lcall
je
xchg
pop
push
scas
and
jle
cmp
mov
or
push
push
dec
xor
push
mov
mov
push
in
test
add
adc
jmp
std
ljmp
sub
popa
enter
mov
aad
pop
ljmp
mov
xchg
fnsave
insb
popa
pop
pop
dec
mov
add
sahf
dec
shlb
add
push
mov
dec
std
cmp
push
mov
ja
arpl
cmp
add
cltd
sbb
rorl
add
rclb
ss
testb
loop
mov
cmp
add
push
loop
xor
sbb
test
xor
lret
fsubrs
pop
inc
dec
adc
or
aad
push
insl
pop
jns
jns
ret
popf
rorb
inc
movsl
fidivrs
stc
and
xor
aam
ljmp
or
or
ja
in
add
test
stc
mov
add
int3
imul
rcrb
out
push
sbb
xchg
inc
push
jg
and
mov
xchg
mov
int
pop
shrl
scas
mov
adc
nop
add
stos
jp
mov
jl
or
cmp
jg
daa
fwait
xchg
or
xchg
loope
in
mov
mov
jge
adc
rcrl
shll
insl
outsb
mov
xor
shlb
push
jbe
mov
and
mov
icebp
pop
aad
push
imul
xor
mov
jge
jp
pop
mov
xchg
dec
lods
sub
jnp
nop
jge
nop
cmpsl
cli
push
xchg
aam
hlt
aas
lea
insl
add
stos
push
jmp
sub
or
popa
test
ss
mov
xor
ret
pop
cmc
loope
add
xor
and
pop
orl
push
cvtps2pi
push
pop
jg
mov
sub
xchg
std
sub
pop
ds
push
sarl
dec
stc
inc
fwait
push
sub
push
xor
fidivl
dec
fscale
hlt
mov
and
rolb
addr16
jp
scas
mov
mov
push
cmp
ljmp
ror
sbbb
pop
pusha
stos
inc
je
std
mov
ficompl
cmc
mov
mov
stc
add
cli
and
xchg
mov
inc
mov
jns,pt
xor
xlat
mov
fsubrl
cmp
pop
xchg
cld
mov
mov
in
pop
std
add
cmp
jbe
stos
out
adc
inc
cmp
lods
jo
outsl
pop
push
inc
inc
lods
add
sub
lock
pusha
mov
push
mov
mov
xor
xchg
lods
cmc
xor
mov
or
push
out
mov
aas
int
adc
aam
dec
xchg
mov
jb
lcall
or
popf
stos
icebp
cmp
mov
xchg
data16
and
or
dec
xchg
idivl
xor
pop
je
sbb
icebp
js
pop
dec
loope
notb
lock
mov
movl
jecxz
fmul
mov
fmull
stc
popf
int
pop
test
cwtl
shlb
addl
mov
enter
test
movsb
cmp
dec
pop
ret
andnps
out
outsl
inc
xor
es
fstpt
mov
cmp
xor
in
mov
adc
in
add
push
inc
in
pop
or
in
js
cmc
pop
and
mov
adc
divl
inc
fcomps
add
cmp
cmovo
call
pop
sti
ja
enter
out
sub
push
ret
jmp
ljmp
popf
rcr
aam
mov
pop
iret
jg
pusha
cmp
sarb
lds
xchg
stos
mov
mov
mov
addb
ljmp
mov
inc
and
int3
sti
mov
loopne
push
bound
cwtl
lea
jo
mov
rclb
mov
or
mov
sbb
cltd
insl
jle
repz
push
dec
xchg
sbb
enter
aam
bound
popa
jae
jp
test
adc
pop
aad
pop
aad
sarl
cmp
xchg
or
lock
in
mov
push
fildll
push
push
scas
push
fs
dec
lods
aaa
dec
cltd
push
arpl
aad
xlat
dec
mov
xchg
aas
pop
shll
push
xorl
inc
das
sbb
popa
aas
outsb
aad
stc
out
pop
repnz
cld
xchg
test
or
pop
cmp
outsl
nop
les
jnp
enter
flds
push
stos
xor
sbb
pop
sbb
mov
push
sub
mov
cmpsb
mov
cmc
int3
xor
or
adc
sub
cwtl
xchg
jecxz
imul
ficompl
into
jbe
push
leave
jae
out
loopne
pop
popf
xchg
imul
dec
lods
repz
call
push
daa
jbe
adc
fwait
pop
ja
je
mov
jne
push
and
jg
cmpsl
dec
outsl
out
push
cmpl
div
add
mov
add
decl
aaa
and
pop
clc
add
aam
cmp
test
or
not
jmp
jmp
push
mov
jmp
insl
pop
cwtl
mov
fisttps
xlat
fstl
pop
aaa
scas
xor
movsl
xchg
pop
icebp
cmp
mov
lods
fisttpll
pop
sahf
mov
sbbl
arpl
pushf
aad
into
test
orb
stc
pop
aas
or
push
xchg
cmp
pop
jg
int
xchg
sub
add
xor
lock
xchg
int3
inc
cmpsl
mov
xor
addr16
inc
push
loopne
mov
sub
lahf
rorb
xchg
cmpl
xchg
idivb
and
jp
xor
push
out
lock
mov
inc
xchg
ds
ficomps
leave
inc
cwtl
loopne
jp
adc
adc
out
sbbl
and
xchg
aaa
inc
imul
shl
leave
add
jmp
dec
out
icebp
inc
out
por
repnz
xlat
or
pop
xor
jns
inc
mov
cmp
fisttps
mov
and
idivb
fidivrl
or
pop
cmp
cmp
xchg
sub
insl
mov
repnz
mov
dec
xchg
jo
insb
mov
subl
icebp
adc
ret
pop
scas
test
lret
or
aas
pusha
mov
mov
pop
pop
sar
pushf
je
and
push
mov
lretw
jno
jge
repz
lods
jnp
jp
inc
movhps
push
sbb
jb
cmp
test
or
pusha
inc
mov
icebp
pop
dec
add
icebp
pop
or
cmp
fidivrl
jecxz
js
mov
pop
push
ljmp
push
xorl
jp
push
cmpsl
inc
dec
jne
or
pop
pop
cmc
divl
int
sti
loopne
xlat
lock
jb
mov
sub
mov
push
in
rcrl
jae
mov
mov
lahf
dec
dec
dec
inc
xchg
inc
or
jmp
cmp
test
testb
imull
jge
and
loop
xchg
jge
aad
shr
xchg
pop
ss
mov
add
sbb
xchg
mov
daa
rcll
adc
leave
gs
das
dec
add
mov
sti
cmp
pop
incl
pop
jo
mov
test
cld
or
add
mov
movsb
outsb
add
jo
hlt
shll
mov
idiv
arpl
mov
inc
pop
jl
xor
mov
mov
xor
sbb
fdivs
aas
test
addr16
test
insl
mov
pop
sti
push
je
dec
sub
jecxz
or
jo
out
push
test
insl
dec
pop
pushf
popa
aaa
ss
in
bound
inc
inc
outsl
imul
dec
mov
fs
push
mov
add
xchg
mov
iret
push
push
cmp
lret
cltd
outsl
rcrl
inc
ljmp
push
frstor
bswap
jmp
cltd
outsb
cli
aad
je
xchg
outsb
sbb
cmpsl
ljmp
dec
inc
enter
push
jmp
cmp
test
xlat
sub
xor
xchg
adc
int3
jo
dec
lret
mov
push
ss
insb
or
int
xor
cmpsl
adc
insb
cltd
xor
xor
js
xor
mov
outsl
or
fneni(8087
push
sbb
mov
dec
sub
sub
data16
cmp
or
cltd
call
aaa
or
stos
inc
mov
addr16
pop
jmp
jle
cmpsb
loopne
orl
push
lds
mov
mov
adc
mov
mov
mov
jl
inc
add
lahf
shlb
lahf
pop
add
or
inc
fistpl
lret
lcall
push
cmp
outsl
push
mov
add
test
aad
dec
ja
outsl
pop
and
jmp
call
hlt
xchg
mov
lock
inc
imul
in
add
cwtl
dec
cld
push
sbb
or
fcomps
scas
in
scas
pop
add
cmp
inc
dec
call
jbe
cmc
push
stos
mov
mov
insb
lcall
repz
xchg
xchg
and
mov
adc
add
jae
movsb
inc
mov
pop
sbb
ds
cmc
push
fistl
aad
popf
sub
jmp
sub
mov
xchg
and
push
scas
insb
shrl
inc
lret
test
hlt
cmp
jae
aas
push
outsl
movaps
jg
aad
jge
jne
cli
xor
cmp
adc
cmpsl
jp
and
lret
sub
cmc
mov
pop
arpl
add
jecxz
push
xor
insb
mov
pusha
outsl
push
xlat
or
or
adc
lods
je
dec
bound
adc
imul
icebp
sarb
xchg
enter
adc
add
mov
and
sub
cmp
push
pop
lret
fsubl
lea
popf
cmc
push
test
leave
inc
and
in
icebp
inc
add
aaa
xchg
stos
pushf
rol
nop
push
xor
add
ret
push
fisubl
pop
adcb
pop
lret
xchg
and
mov
push
inc
xor
cmp
lock
shrb
pop
cmpsb
lods
aam
aaa
or
mov
insl
sub
loope
pop
ret
mov
and
mov
and
mov
sub
cmpsl
mov
in
add
or
jo
xchg
push
xchg
or
in
icebp
sub
insl
jnp
jnp
inc
mov
jns
dec
ret
fwait
cmp
xchg
pop
lods
xchg
fldcw
in
dec
out
cmp
in
fiaddl
mov
addl
mov
call
roll
mov
pop
test
fcmovne
sarb
out
dec
leave
push
testb
mov
lea
movsb
fsubr
inc
movsl
mov
add
rcrl
jo
add
xlat
push
cmp
mov
daa
mov
mov
jle
jge
lcall
pop
jbe
outsb
adc
call
xlat
faddl
stos
mov
arpl
push
sub
mov
xchg
push
push
cmpsb
popf
test
pop
and
inc
add
xor
xchg
fcmove
adc
sub
mov
bound
cmp
and
inc
lahf
fndisi(8087
pop
jnp
cltd
cwtl
sub
inc
popf
mov
mov
in
aaa
sbb
mov
notb
add
lods
insb
outsl
fnstsw
mov
add
push
test
out
loopne
jmp
sbb
jl
mov
repnz
sbb
repnz
mov
jo
out
and
aam
xchg
and
lods
jb
fbstp
stc
and
adc
shl
mov
xlat
adc
inc
or
cltd
aas
xchg
dec
xchg
es
mov
loope
pop
scas
lea
rcr
sbb
adc
out
inc
addr16
test
mov
pop
rep
daa
push
add
je
or
push
pop
add
jge
cmc
mov
mov
mov
daa
add
stos
lret
xor
rcll
dec
sbb
aaa
jne
push
or
add
or
xor
movsb
insb
jg
mov
daa
xchg
jp
pop
cwtl
cmp
sub
sbb
mov
dec
aad
lret
push
pusha
daa
xlat
cmc
sbb
cld
mull
xchg
int3
mov
lea
stc
mov
dec
or
jmp
mov
testl
popf
out
xchg
fwait
stos
std
cmp
cmc
and
push
repz
dec
clc
pop
jnp
inc
int3
xchg
arpl
pop
fwait
call
repnz
dec
xor
push
sbb
sbb
xor
push
push
xchg
sub
sbb
aaa
stos
test
repnz
adc
inc
neg
inc
cld
andb
aas
movsl
fsubrl
mov
mov
jp
notl
and
insb
lock
dec
jle
arpl
ficoms
mov
pop
repz
out
or
stos
out
popf
imul
daa
xor
push
xor
lods
enter
dec
sub
sub
inc
jnp
test
xor
mov
xor
mov
xor
enter
dec
sbb
out
mov
rorl
add
imul
xchg
lods
int
pop
dec
stc
add
inc
adc
fwait
inc
adcb
shll
cmp
cld
pusha
xorb
wbinvd
mov
ja
imulb
cmpb
cmp
mov
xor
sub
cli
pop
into
into
lret
lods
aad
xchg
std
into
popf
imul
inc
clc
jmp
xor
je
mov
in
gs
lret
add
cli
inc
lea
ficomps
int
push
idivb
rorb
inc
sub
pop
test
aam
sub
in
jecxz
jmp
sub
mov
adc
push
push
std
adc
jo
stos
pop
or
xor
cs
popa
in
fwait
subb
push
decl
outsl
pushf
mov
in
pop
mov
std
mov
je
mov
pop
jb
cs
fwait
sbb
add
rcrb
negb
sbb
dec
adc
mov
das
jmp
xchg
mov
adc
les
mov
incb
cmc
cwtl
pop
xchg
mov
nop
imul
pop
je
push
inc
xor
pop
lahf
sarl
aad
and
jecxz
mov
aad
mov
call
ret
cmc
dec
cmpsb
dec
sub
sar
scas
cli
pop
mov
imul
inc
pop
push
mov
insl
imul
popf
fldenv
mov
loopne
pop
sbbl
leave
or
cmp
ret
inc
push
aaa
pop
mov
outsl
sarb
jle
sub
or
popf
stos
add
shll
addb
addl
cmp
add
jg
pop
xchg
shll
in
cmp
xor
xchg
mov
cmp
fimull
cmp
mov
push
inc
loope
out
mov
lahf
mov
mov
push
out
adc
sahf
movsl
mov
pop
push
addr16
dec
jmp
cltd
pop
pop
addl
cmpsl
shll
movsl
and
pop
jp
dec
mov
push
testl
leave
add
xchg
sub
mov
shll
push
pop
popa
or
imul
mov
dec
out
out
sti
xor
cwtl
das
fildll
shlb
and
fisttps
mov
mov
fists
and
or
mov
mov
jno
cmp
dec
xchg
dec
ljmp
inc
xorl
mov
pop
sub
scas
fabs
add
ficoml
mov
inc
dec
mov
xor
int
mov
fists
pop
inc
xchg
scas
xor
icebp
sbb
in
push
stos
stos
lret
push
dec
lahf
lea
lods
pop
pusha
and
dec
add
jecxz
inc
clc
mov
push
hlt
mov
ret
jb
mov
test
jge
cmp
addl
jmp
lock
add
or
aaa
loopne
pop
hlt
sub
adc
jns
cli
jmp
adc
pop
ret
or
ljmp
or
mov
mov
jmp
xlat
popa
clc
and
stc
cmc
lock
push
aaa
mov
mov
sub
cli
push
sbb
inc
cmpsb
cmp
pusha
or
adc
add
dec
jmp
mov
test
mov
daa
iret
not
pusha
mov
xchg
jp
je
or
subb
cmp
fistpll
xor
bound
pushf
sahf
cwtl
sbb
sbb
inc
cmp
mov
cwtl
test
fildl
jmp
xchg
cmp
and
jnp
dec
fldenv
xlat
lock
jno
ljmp
stos
xor
xchg
jb
pop
leave
pop
inc
sbb
push
inc
movsb
xchg
into
pop
lcall
popf
xchg
bound
pop
cmp
cmpsl
lods
jg
ret
lods
jg
aaa
dec
or
nop
mov
add
aaa
pop
ror
pop
inc
roll
in
shr
xchg
fcoms
cmpb
mov
push
mulb
add
pushf
cli
popa
jne
ja
std
xor
mov
mov
jl
or
pop
fwait
sbb
or
rcl
ds
call
add
push
mov
shl
jne
xor
xchg
aaa
mov
mov
add
jp
out
sub
cmpsb
cltd
icebp
loop
in
jecxz
aad
in
fisubs
dec
out
push
aas
lea
mov
cmp
aas
inc
adc
mov
push
xchg
add
imul
ret
sub
imul
xorb
xchg
push
aad
nop
out
push
je
or
mov
mov
adc
aam
je
das
and
push
test
cmp
lods
inc
mov
jmp
push
pop
pop
out
jns
icebp
mov
sbb
cmc
push
into
dec
dec
data16
popf
push
sbb
cmp
shrb
mov
pop
movsl
addl
mov
cmpl
inc
sbb
cmp
xor
stc
hlt
mov
mov
or
pop
repnz
inc
aaa
roll
mov
xor
jne
xchg
push
mov
femms
cmpsb
leave
jns
into
sbb
cli
and
jge
dec
inc
inc
dec
cltd
mov
push
cmc
pusha
aad
push
je
lret
inc
adc
push
xor
and
fisttps
test
mov
push
push
lahf
adcl
pusha
out
dec
sbb
dec
mov
movsb
cmpsb
xchg
jmp
shll
lds
sbb
add
daa
add
scas
cmpsb
ljmp
pushf
sbb
inc
xor
jle
jb
sbb
lret
xor
je
pushl
ss
out
aaa
pop
sti
sub
out
add
cmp
scas
mov
mov
adc
push
mov
xor
sbbb
adc
and
les
adc
daa
sbb
jae
aas
cltd
add
cmp
icebp
mov
cmp
enter
inc
inc
leave
xor
enter
jecxz
leave
push
cmp
cmp
mov
cs
or
cld
sbb
push
lret
adc
fisubl
lahf
dec
jno
cmp
inc
push
jl
insl
mov
int
adc
cmp
mov
movsb
push
jbe
je
pop
inc
ret
stc
jl
mov
push
or
sub
mov
shlb
push
clc
inc
cmp
xchg
rorb
add
xchg
stos
sbb
xor
or
cmc
popa
stos
pop
imul
xchg
icebp
adc
mov
mov
dec
pop
jno
mov
pop
cmp
or
xor
sti
push
add
add
adc
ret
mov
push
fbstp
add
push
cmc
dec
dec
popf
xchg
fucomp
dec
in
inc
jo
les
in
cmp
or
or
ljmp
mov
mov
fdivr
leave
xor
hlt
pop
jg
test
mov
inc
pop
movsb
daa
fwait
sub
xchg
push
ret
dec
pop
mov
xchg
jnp
xor
popa
cmpsl
cli
leave
and
jmp
lods
hlt
pop
jmp
push
cltd
push
jge
adc
adc
std
sbb
in
mov
adc
cmc
arpl
push
mov
scas
std
popf
out
jcxz
insl
das
inc
push
sub
adc
fimuls
popf
shr
mov
sbb
ss
nop
sbb
mov
cmp
mov
aam
push
add
sub
aam
imul
test
inc
shlb
insb
mov
or
sub
mov
aas
pop
ffree
in
dec
sbb
pop
sbb
pop
push
scas
push
sub
addr16
cmp
dec
pushf
jae
lcall
rcrl
add
cmp
icebp
std
pusha
lret
lea
xor
push
jg
pusha
xor
xor
mov
pop
cmp
testl
lret
fisubrl
iret
fisttps
mov
daa
ss
or
add
popf
aas
ficoms
scas
sbb
mov
cmpsb
jmp
add
rclb
js
dec
mov
imul
mov
test
dec
mov
mov
xchg
ret
dec
bound
outsb
xor
cmp
xchg
hlt
stos
and
adc
sbb
in
jge,pt
jae
fcom
in
pushf
xorl
popa
xchg
xlat
cmpsl
int
loope
stc
mov
mov
arpl
fwait
call
push
adc
pushf
xchg
repnz
pusha
pop
add
mov
xor
jne
mov
add
push
std
xchg
out
xchg
loope
inc
push
out
sub
sti
xchg
pushf
pop
mov
or
gs
inc
mov
inc
mov
sub
xor
or
lret
shlb
mov
mov
jmp
adc
mov
jno
sar
mov
pop
mov
xchg
xor
add
cmp
mov
adc
xchg
mov
or
fisubrl
mov
aas
mov
xorl
aas
movsl
rep
sub
mov
add
les
lret
stc
mov
xchg
sub
jp
inc
adc
aad
stos
mov
xor
and
jbe
inc
mov
nop
fwait
push
pop
cltd
mov
mov
out
rorl
cmp
js
lahf
orl
and
lea
je
sahf
xchg
call
or
inc
addr16
pushf
adcb
fadd
fdivr
push
inc
les
sar
mull
pop
cmc
dec
cs
pop
call
push
xchg
cmp
imulb
adc
addr16
xor
push
repz
mov
mov
mov
ja
mov
mov
push
pop
sarl
shrb
bound
imul
lods
out
daa
testl
pop
movsl
das
std
cmp
push
mov
inc
stc
or
je
pop
xchg
hlt
push
hlt
sbb
mov
pop
xchg
push
push
xor
xor
mov
mov
loope
lea
adc
mov
mov
add
jecxz
enter
mov
xor
data16
push
sub
test
iret
in
pop
mov
data16
popf
pop
xchg
pop
sbb
pop
mov
xor
mov
sub
mov
std
and
inc
sub
cs
fs
jbe
pop
cmpsl
mull
xor
lds
dec
movsl
js
xor
popf
inc
jae
mov
cmpsl
loope
inc
push
push
std
mov
iret
mov
mov
xchg
addr16
enter
push
sub
xor
stos
ret
outsl
push
insl
fidivs
repz
icebp
push
aas
neg
add
jl
xor
aaa
test
mov
jbe
fisttps
mov
pusha
out
outsw
inc
fwait
xchg
shll
stc
mov
and
lods
es
push
mov
daa
push
das
sub
push
sub
sub
xor
cmp
outsb
repz
aam
sbb
sub
jb
fsubr
jle
jnp
pop
shr
mov
adc
mov
outsb
inc
mov
sti
pop
and
dec
mov
add
add
add
fistpll
add
nop
sahf
mov
gs
sbb
adc
add
mov
and
jne
pop
imul
cli
shr
mov
cmpsb
ss
ret
mov
lods
inc
les
xchg
lock
rorb
mov
fnstenv
dec
push
andl
pop
stos
bound
cmpb
nop
fstl
enter
fsubrl
or
icebp
jo
mov
mov
and
dec
icebp
bts
cmpsl
fwait
adc
imulb
adc
push
cmp
rcll
fwait
pop
pop
add
mov
xchg
jmp
jle
cld
jge
jg
sti
jl
add
cmpsl
push
not
js
and
sbb
fmull
orl
dec
sbb
test
cmpsl
and
mov
rcrb
ja
lcall
sbb
cmp
mov
lods
ljmp
xlat
push
mov
out
sbb
pop
int3
push
or
mov
mov
xchg
and
mov
push
add
mov
adc
push
add
sti
or
lahf
fnstcw
repnz
pop
fisubs
adc
and
sbb
int3
xor
pushf
aad
push
adc
cld
push
mov
lcall
aad
cmp
es
dec
test
push
out
pushf
push
fwait
jge
imul
mov
dec
int
cmp
fdivl
jp
push
xor
js
daa
lret
or
jge
adc
ljmp
cmpsb
fdivrs
jno
mov
xchg
xor
loop
insb
mov
rcrl
aas
jns
dec
sbb
fdivrs
arpl
mov
mov
xchg
stos
leave
jne
pop
jnp
imul
cltd
cwtl
test
inc
insb
ret
sbb
shr
neg
pusha
lcall
cltd
mov
clc
scas
sub
imul
cmp
pop
out
fs
test
push
cmp
xchg
iret
inc
xlat
sbbl
pop
inc
add
mov
mov
out
leave
cmp
jmp
out
mov
hlt
sbb
in
inc
add
cmp
or
fdiv
mov
test
pushf
scas
dec
ljmp
pushl
sub
leave
xchg
jl
ret
add
add
bound
imul
scas
mov
mov
cmp
dec
ljmp
movsl
popf
add
aam
adc
mov
pop
mov
adc
jg
mov
mov
clc
repnz
jo
pop
imul
adc
sbb
lret
inc
dec
mov
dec
fiaddl
movsb
ds
cmp
jg
mov
daa
pop
aad
adc
out
mov
les
lret
nop
inc
xor
jg
aaa
leave
decl
or
ss
dec
das
jbe
pop
or
jns
orb
mov
jns
fstps
add
lods
jmp
in
inc
jbe
nop
adc
les
out
fwait
stc
shll
mov
mov
xchg
sub
jno
push
inc
jmp
adcb
sub
subl
push
in
push
push
cld
or
add
lds
in
and
fisubl
rcll
cmc
inc
or
sub
adc
popf
jns
arpl
or
and
jle
mov
fsubrl
ds
xor
pop
jp
shr
sbb
jmp
hlt
repz
mov
into
popf
imul
dec
call
pop
outsb
sbb
in
or
fistl
or
stc
pop
jne
adc
inc
adc
mov
push
fldcw
xor
push
jbe
loopne
mov
inc
xchg
xlat
rorl
ljmp
push
mov
mov
push
sbb
stc
jnp
sahf
mov
outsl
jecxz
pushf
push
xor
cmpsb
repz
xchg
push
and
lods
adc
inc
insl
add
pop
loope
inc
mov
jo
gs
adc
sbb
cmp
mov
mov
push
jbe
jne
xchg
jmp
pushl
sub
ljmp
dec
pop
pop
adc
mov
push
dec
add
pop
ret
lahf
pop
jl
xor
or
or
pop
fildll
pop
xchg
cmpsl
bound
pop
push
xchg
inc
pusha
mov
xchg
stos
mov
inc
addb
out
fcoml
cld
jg
mov
addr16
mov
int3
mov
daa
aas
bound
outsb
mov
cmp
sarl
xor
push
daa
and
or
cltd
jno
lea
dec
fmulp
or
jg
neg
std
and
lret
xchg
mov
or
or
fnstenv
xlat
cmp
jmp
cmpsb
fcmovne
sbb
out
lea
mov
jmp
mov
int3
push
jnp
mov
sub
mov
es
icebp
ja
mov
inc
cmp
sahf
lods
jbe
lcall
xchg
outsl
jmp
sbb
pop
pop
mov
aas
pop
ljmp
cld
inc
push
insl
or
jnp
mov
int
mov
rcl
in
or
cwtl
mov
jp
notl
and
sub
xor
cmp
ja
rolb
adc
mov
sub
push
test
leave
push
jmp
fisubrs
mov
and
dec
out
es
nop
rcr
and
mov
stos
jno
repz
sti
or
jp
jb
es
scas
adc
ret
xlat
repz
sub
push
dec
jae
popf
in
mov
shr
pop
push
sbb
dec
in
mov
ret
xlat
cmp
xor
lock
stc
ja
jnp
mov
mov
push
aaa
fwait
cld
jmp
ljmp
bound
aas
inc
aam
popf
jns
cmpsl
aaa
push
sbb
mov
test
lcall
adc
jae
jns
hlt
call
dec
test
iret
lea
mov
lods
dec
adc
pop
mov
call
inc
lret
jle
xchg
movsl
and
cwtl
push
sbb
jns
sub
scas
jle
pop
add
xchg
mov
inc
xor
xor
push
hlt
mov
mov
neg
sub
and
ficompl
sbb
mov
imul
mov
xor
jne
push
inc
and
shrb
mov
adc
out
outsl
lds
push
cltd
jl
cli
aaa
loopne
testb
add
and
pop
out
repnz
cmp
or
sarl
cs
mov
cmp
outsl
mov
push
test
aaa
in
imul
dec
rcll
shlb
jp
lock
test
test
aam
cmp
adc
sbbb
mov
push
pushf
fwait
call
inc
xchg
std
mov
add
and
ret
stc
dec
js
lock
aas
inc
pop
xchg
daa
xchg
cmp
push
sbb
imul
out
loop
push
out
adc
imul
xorb
fsubl
outsb
pop
cmp
pop
cmpsb
movsl
lods
sbb
mov
int3
icebp
push
lahf
leave
mov
js
call
and
cld
in
outsl
lahf
inc
mov
xchg
mov
xchg
xor
aam
sbb
lea
sbbl
imul
inc
xor
pop
pushf
cmp
fsts
push
fistl
mov
out
repnz
push
push
dec
push
movsb
jb
cmp
dec
push
jecxz
pop
sbb
call
mov
mov
jno
sbb
inc
hlt
add
sarb
outsl
pushf
mov
push
push
xchg
mov
push
cmp
and
push
rcll
in
aam
pop
mov
filds
loope
fiadds
mov
dec
pop
imul
xchg
in
add
stos
orl
jns
dec
adc
adc
arpl
jne
mov
lret
xlat
xchg
ds
pop
lods
jecxz
xchg
mov
sbb
enter
push
pop
sbb
fcmovb
mov
xchg
xchg
dec
out
dec
fnstsw
aas
sbb
loopne
repnz
idivl
mov
test
push
shlb
ljmp
pop
cmp
adc
push
and
nop
xchg
pop
cmpsb
cmp
clc
repz
into
jne
loop
imul
and
jl
dec
pop
lahf
push
andl
push
xor
enter
jmp
mov
sahf
test
push
stos
xchg
jne
in
stc
push
addr16
jns
daa
xlat
dec
ds
cmpsl
jmp
mov
fmuls
imul
sbb
aam
pop
xchg
ret
fst
movsb
cmp
mov
imul
and
mov
nop
stc
dec
xchg
aas
and
aam
pop
and
sbb
pop
fisttpl
sbb
inc
mov
bound
lods
lods
test
ja
dec
fld
into
pop
mov
mov
mov
push
jge
fidivs
call
cmp
lods
mov
or
mov
in
cmp
sbb
cmc
mov
shrl
add
sub
int
dec
mov
jmp
sbbl
iret
pop
sarl
fdivrl
inc
dec
xchg
inc
mov
dec
sub
push
repnz
adc
adc
jge
or
int3
xor
cmp
mov
dec
sub
movsb
mov
insl
xor
test
repnz
xchg
adc
adc
test
aas
inc
mov
xor
mov
or
popa
add
sbb
add
and
xchg
jp
cmp
loopne
push
arpl
ror
push
mov
lods
mov
and
and
push
mov
sbb
not
data16
or
xchg
xchg
xchg
xchg
ljmp
lahf
imul
stos
imul
cmp
sahf
xchg
lahf
add
imul
push
inc
int3
inc
in
xchg
xor
mov
xor
sub
lcall
lcall
cld
mov
fimull
jno
push
repnz
dec
fisttpll
sarl
addr16
add
cmp
fs
jg
mov
jno
aaa
inc
lret
mov
int3
inc
enter
insb
and
push
or
cmpsb
xchg
pop
or
popf
insb
and
mov
scas
daa
adc
in
inc
sahf
and
jle
jo
icebp
lds
aaa
rorl
sbb
mov
push
xchg
mov
sub
test
xchg
mov
cmp
xchg
pop
or
adc
jne
jns
das
add
jp
test
mov
enter
cmpsb
iret
cmp
subb
ss
aaa
and
cmc
jns
pusha
sbb
push
hlt
arpl
xor
es
mov
push
leave
mov
ljmp
imul
hlt
or
jmp
dec
insl
mov
scas
dec
mov
loopne
insl
sti
fstl
js
stc
mov
mov
out
and
xchg
repnz
pop
icebp
cli
mov
in
dec
mov
inc
xor
jmp
mov
mov
mov
addr16
fildll
or
in
jp
enter
out
sub
sub
lcall
clc
push
repnz
xchg
shll
mov
and
or
push
pop
mov
scas
imul
inc
sbb
cmpsb
out
jbe
mov
push
test
cltd
pop
dec
les
movsb
rol
sub
loop
dec
imul
xchg
jle
aam
out
or
into
je
sub
aaa
push
mov
es
inc
sub
xchg
rorl
cli
enter
jl
ret
lahf
out
call
push
and
pop
stos
test
mov
sahf
insb
inc
je
mov
in
lahf
push
mov
sbb
js
sbb
daa
cmp
xchg
std
cmpsl
sbb
adc
dec
stos
add
jnp
push
mov
jge
mov
ror
scas
mov
cmc
and
cmp
mov
shl
or
push
mov
mov
adc
mov
mov
out
mov
rorb
fldenv
mov
xchg
add
adc
out
mov
push
dec
scas
imul
sub
and
mov
fwait
mov
cmp
push
gs
cmp
jecxz
cwtl
shlb
xor
jnp
fisubrs
xor
stc
into
mov
lret
push
inc
dec
imul
pusha
mov
mov
imul
xchg
pop
dec
repz
imul
and
lahf
inc
loop
cmp
jns
pusha
cmpsl
pop
lret
int
mov
cltd
lret
adc
imul
sbb
jbe
push
mov
fistl
call
pop
pushf
add
adc
fidivrl
sbb
xor
cmp
gs
cli
cmp
xlat
pusha
js
incl
sbb
popf
ss
sti
jb
jb
or
xchg
iret
imul
rorb
mov
lods
and
mov
jecxz
lcall
mov
sahf
or
jae
mov
in
and
jae
pusha
jae
ret
sti
push
sbb
pop
std
sbb
pop
sub
mov
loope
jle
fs
xlat
jp
dec
xchg
xor
ljmp
call
mov
sub
test
inc
ja
mov
lds
pop
mov
mov
cmp
stos
or
mov
inc
adcl
push
push
jbe
dec
out
mov
pop
pop
out
mov
imul
mov
push
dec
dec
sbbl
adc
push
std
jle
sbbb
orl
sbb
icebp
mov
push
push
mov
xor
cld
inc
xor
dec
popa
xchg
arpl
push
adc
inc
clc
cli
jg
pop
fs
xchg
int
dec
cmc
adc
xor
push
pop
imul
aaa
sarl
aaa
les
ss
fdivrl
stos
xchg
dec
fdivl
outsb
lds
xor
sbb
dec
mov
fwait
jmp
or
push
jg
psllq
imul
in
jno
inc
out
push
in
mov
mov
shrl
lret
hlt
sub
jmp
cld
push
sub
daa
in
inc
loop
push
mov
add
aas
loope
repnz
arpl
dec
jmp
enter
ret
and
mov
sahf
fcoml
adc
stos
push
fiaddl
movsb
ds
or
inc
mov
inc
adc
push
gs
or
insb
mov
and
fstpt
or
jne
jmp
cs
inc
mov
aas
jnp
fistl
mov
inc
mov
je
and
pop
loop
mov
iret
push
jb
sub
mov
push
xchg
scas
add
xchg
mov
loopne
lcall
push
adc
add
lods
mov
cwtl
xchg
inc
jno
ds
or
stos
and
inc
inc
mov
ja
scas
cs
gs
fdivrs
inc
mov
stos
cmp
loopne
sub
fidivs
xchg
jmp
pop
add
sub
das
xchg
stc
test
jmp
addr16
cltd
jne
dec
or
fwait
sub
sbb
mull
jp
ds
mov
and
enter
movsl
dec
sahf
div
mov
in
xchg
mov
loopne
push
cmp
jmp
ds
cmc
je
insl
sub
and
js
lods
jecxz
sub
cmp
pusha
push
ficomps
rcrl
sbb
push
or
inc
xchg
lods
sbb
jl
decb
jle
fcomip
sub
mov
cmp
add
call
test
mov
push
in
or
adc
push
insl
xchg
arpl
stos
mov
add
clc
inc
fwait
cmp
lea
cmp
addr16
jno
test
in
mov
mov
aam
fistps
out
fadds
divb
cmp
movsl
imul
pop
mov
fisubl
mov
pop
icebp
in
push
lahf
mov
jp
xchg
lret
mov
cmp
out
add
sub
xchg
mov
arpl
test
shrb
cmp
sub
pop
loope
repnz
and
lock
stos
dec
cmp
mov
enter
int
sub
mov
test
cltd
sbb
pop
into
in
ret
dec
data16
inc
sub
adc
daa
jae
out
mov
cmpb
sbb
aas
inc
roll
cmpsl
iret
push
jns
pop
aad
jecxz
lock
dec
mov
or
test
inc
or
fucomp
dec
dec
mov
mov
int3
or
rorb
mov
in
std
jb
mov
popf
popf
jnp
data16
sbb
pop
xchg
mov
mov
adc
dec
dec
and
pop
push
add
mov
pop
push
sbb
ss
sarb
dec
test
rcrb
and
test
sub
clc
ds
xchg
sbb
cwtl
jb
push
add
fsubr
inc
xor
pushf
call
aam
sbb
inc
push
in
cld
cmp
xchg
cmp
cwtl
mov
dec
cltd
adc
and
xchg
sarb
imul
adc
adc
int
lcall
dec
inc
dec
pop
mov
sub
orl
add
cmp
aam
or
les
pushf
sub
dec
push
cmp
jbe
cmp
xlat
cwtl
cmp
sbb
leave
mov
mov
jmp
mov
popa
mov
push
outsl
xchg
pop
call
in
int
mov
fnstcw
fldcw
pop
or
das
push
cmpsb
dec
jl
scas
fsubrl
test
inc
mov
jae
adc
std
sbb
hlt
pushf
loop
loope
mov
sarl
pop
divb
inc
xchg
outsl
addb
and
add
mov
pusha
rcrl
cmp
int3
mov
xor
adc
xor
cmp
fwait
das
rorb
push
int3
sub
insl
rcl
mov
mov
dec
rcl
dec
rcll
push
push
popf
xchg
mov
and
nop
or
lret
dec
enter
ret
push
out
pusha
add
outsl
dec
sbb
fsubl
out
cmp
andb
scas
push
sbb
push
loop
xor
in
int3
inc
dec
cltd
sahf
je
out
mov
or
pusha
insl
push
loope
ret
inc
ja
pop
push
sti
jmp
cs
bound
out
xchg
cs
lcall
cmp
push
dec
mov
push
mov
xchg
or
mov
jecxz
mov
data16
sbb
mov
fidivs
xchg
rcll
sbb
push
add
mov
push
jnp
lds
pop
dec
dec
inc
or
icebp
xchg
sahf
cmc
stos
cmpsb
int
incl
fcompl
mov
sbb
fidivrs
in
les
stc
sbb
xor
rcll
test
dec
pop
xchg
ljmp
cmpsl
ljmp
shll
pop
sub
mov
fstpt
sbb
test
xchg
pop
xchg
sahf
divl
cld
sub
out
inc
cmp
xchg
push
mov
ficoml
in
imul
pop
or
js
out
mov
ret
movsl
iret
or
xor
dec
mov
lea
aas
test
icebp
xchg
mov
mov
push
daa
push
mov
divl
dec
jbe
mov
decl
cmpl
add
mov
sbb
rcl
sti
add
and
push
inc
out
jnp
and
xchg
jl
insb
in
repz
cmp
imul
arpl
mov
xlat
daa
loopne
movsl
xlat
aas
adc
and
cmp
stos
jnp
jge
sub
lock
sti
aas
jge
out
jle
aas
rcl
imul
jl
lock
loope
idiv
mov
pop
sbb
add
fimull
cmp
inc
les
imul
int3
push
add
cmpsl
movsb
test
pop
fs
push
push
iret
cmp
rclb
pop
adc
sbb
or
jne
ja
mov
mov
movsb
sahf
jno
out
jno
test
idivl
pop
mov
outsb
cwtl
dec
clc
pop
ret
lea
push
aam
pop
std
add
pop
imul
in
dec
inc
je
jl
mov
outsb
fisubl
mov
cmpsl
cli
push
pop
pop
jae
inc
outsl
inc
in
mov
dec
mov
jmp
cmc
sti
jp
sub
adc
jns
test
es
mov
pop
test
mov
mov
fs
inc
fidivrs
or
mov
xchg
popl
lds
es
ds
cmp
and
in
movsb
rol
movb
mov
and
pop
push
lret
mov
test
hlt
sbb
and
stos
cmp
jmp
lods
pop
stc
adc
outsl
jl
dec
add
dec
scas
ss
pop
jp
aaa
aaa
repz
cmc
xchg
xchg
xchg
sub
cmp
and
popa
xor
out
cmpsb
mov
cmp
icebp
notl
ds
sbb
in
push
out
lods
and
hlt
rorb
fidivl
mov
int3
add
ror
adc
aas
add
leave
cmp
negl
movsb
leave
mov
nop
inc
inc
add
insl
add
loop
xchg
pop
push
adc
nop
pop
faddl
gs
aas
fs
jns
pop
inc
popf
push
push
cmc
mov
and
in
xchg
rorl
mov
loopne
jae
dec
ss
xchg
jne
push
adcl
enter
xchg
pop
add
inc
dec
sbb
aam
ljmp
pop
bound
dec
das
in
add
mov
aas
sub
pop
into
imul
mov
sub
popa
out
push
xchg
inc
sub
imull
inc
rolb
enter
adc
fcoml
arpl
in
pop
stos
out
mov
mov
enter
in
aas
gs
lahf
sti
sti
cld
outsl
xchg
push
fstpl
bound
xchg
cmp
add
pmaxsw
repz
push
add
fwait
or
jecxz
mov
sbb
rorl
inc
mov
out
inc
dec
dec
jae
pop
imul
inc
sbb
movsl
mov
inc
and
jae
cmpb
test
jb
inc
mov
lret
mov
js
flds
inc
stos
mov
movsl
dec
dec
inc
aas
sub
dec
lahf
xor
roll
mov
push
inc
mov
mov
sarb
inc
mov
filds
ds
rclb
push
mov
inc
arpl
popf
mov
sarb
cltd
sbb
adc
inc
adc
rolb
insl
pop
sub
mov
xlat
sar
shl
nop
int
pop
fmul
or
lret
fcmovnu
insb
cmp
aas
out
cwtl
negb
dec
incb
and
cld
xchg
out
inc
cmp
outsl
imul
fmuls
push
aaa
jo
push
fcomps
lcall
mov
stc
sub
sbb
in
pop
mov
pop
push
gs
es
xchg
sbb
cmp
lods
std
repnz
adc
das
mov
icebp
ljmp
xor
mov
pop
mov
sbb
out
pop
in
mov
cmc
cmpsb
jge
push
mov
sub
dec
push
push
stos
out
xchg
xchg
lock
mov
xchg
lcall
push
mov
add
xchg
pushf
repz
movsl
add
mov
dec
lahf
push
call
enter
jb
cmpsb
stos
mov
aam
cli
cwtl
das
loopne
xchg
test
add
in
pop
insl
xchg
xor
push
leave
and
xchg
and
dec
mov
and
arpl
push
pop
sub
mov
mov
pusha
adc
sbbl
daa
cmp
xor
repz
out
jns
cltd
fisttps
mov
test
fsubrl
dec
pop
mov
xor
out
jo
mov
ljmp
mov
mov
fsubl
and
or
popa
lcall
jbe
mov
in
cmp
sti
inc
mov
xorb
sub
cmp
sub
rclb
loop
ret
jmp
jnp
cmc
xor
inc
mov
rcrb
stc
adc
add
cmpsb
mov
pop
inc
jb
xlat
sub
aad
inc
js
outsl
cmc
xchg
sub
gs
cltd
push
pop
jae
insl
call
cmp
testl
inc
fisubl
cmp
int
push
in
pop
jecxz
arpl
dec
sti
jge
sbb
jae
fwait
daa
dec
cld
je
stc
cmp
xor
mov
sbb
fwait
inc
je
cltd
stc
cwtl
push
fnstenv
scas
daa
dec
jns
pushf
loop
jne
mov
jge
shll
mov
daa
fisubs
mov
pop
jle
decl
test
jmp
mov
addr16
dec
or
out
cli
dec
ret
inc
dec
mov
sbb
or
jp
push
loop
lahf
out
inc
mov
lds
sbb
popf
es
mov
pop
pop
dec
jb
mov
mov
sub
pop
mov
fsubr
jno
aas
pop
xchg
cs
cmp
sbb
mov
jle
inc
pop
into
shll
fucomp
xchg
inc
dec
std
popf
sbb
or
movsb
pop
mov
fwait
xor
out
loop
xor
mov
pop
out
lahf
jle
or
push
aam
mov
jl
std
xchg
popa
bnd
pop
mov
xor
push
popa
stos
xor
mov
or
pop
aad
cmp
imul
pop
std
and
in
push
roll
js
sub
pop
cmp
sub
sbb
mov
jp
fcmovu
push
cmc
cmpsl
inc
mov
jnp
inc
adc
fcoms
mov
and
cmpsl
jb
sar
cs
ss
mov
xor
inc
sub
pusha
adc
test
out
and
call
and
ds
push
in
mov
outsb
arpl
orl
arpl
push
std
out
cs
inc
fsubrp
mov
sbb
xor
cmc
xchg
jne
cmc
rorb
fnsave
mov
dec
add
pop
fisubrs
out
push
fwait
push
and
arpl
test
loopne
mov
aas
push
or
jbe
and
out
in
adc
or
lods
data16
std
es
ljmp
lds
jl
subb
daa
jecxz
push
hlt
rolb
les
rorl
ss
mov
repz
mov
into
xor
mull
push
mov
bound
pushf
cmpsb
xor
imul
mov
mov
sbb
popf
movsl
sbb
mov
and
mov
cltd
subb
pushf
addr16
sub
or
and
call
out
dec
xchg
dec
and
pop
stos
sub
lods
popa
addb
or
xor
cwtl
cmp
out
dec
scas
mov
xchg
mov
insl
mov
pop
int
push
das
inc
xor
jb
inc
fldcw
inc
fwait
jbe
inc
cmp
arpl
cmc
andl
cmp
push
negb
sbb
stc
es
in
out
stc
nop
test
mov
popa
enter
mov
in
loope
sub
dec
push
push
lcall
mov
ljmp
repnz
xchg
idivb
cli
push
movsb
xchg
sub
iret
inc
xacquire
and
xchg
jns
in
cmp
out
mov
scas
xlat
test
shrl
pop
dec
pop
pop
test
mov
aaa
inc
pop
mov
fdivrs
xor
push
mov
xor
cmp
fdivl
jecxz
sahf
adc
xor
insl
pusha
gs
lods
cld
pop
int
test
cmp
push
mov
out
pop
push
cmpl
inc
cs
push
adc
js
in
dec
push
lods
push
repnz
ljmp
stos
jns
es
push
shrl
jecxz
pop
in
cmpsl
dec
push
mov
and
outsl
adc
mov
mov
bound
sub
aad
out
pushf
sbb
xchg
inc
pusha
lock
or
cmp
stc
add
inc
cwtl
dec
cmp
hlt
dec
js
pop
pop
sub
inc
push
xchg
gs
and
push
and
insb
pop
jne
and
pop
inc
mov
imul
pusha
imul
and
test
cs
push
jp
cwtl
jne
push
addr16
call
mov
es
inc
movsl
mov
xchg
testl
mov
or
dec
push
leave
gs
cmpsl
ss
in
jbe
testb
or
push
fs
out
mov
shrb
cmp
push
sub
es
push
stos
mov
xchg
popa
add
loopne
push
dec
inc
push
rorl
nop
ja
adc
lea
leave
andl
in
xlat
fldl
adc
pop
aad
decb
and
hlt
or
mov
or
insl
out
sbb
insl
dec
xor
cli
sbb
test
xor
mov
xchg
notb
sub
sbb
add
jl
add
jg
lods
in
dec
lahf
xchg
out
jne
loopne
inc
dec
mov
push
fldl
rcl
adc
pushf
roll
mov
adc
mov
lods
int3
and
loopne
shrl
push
test
sub
pusha
cmp
ficoml
mov
lahf
ret
testb
notb
imul
ds
sub
cmp
mov
fbld
icebp
jmp
cmpsb
xor
xchg
add
jae
mov
jg
lret
sbb
mov
std
sub
scas
jecxz
sub
iret
in
loop
sub
xor
arpl
mov
imul
push
inc
xchg
sub
jg
fbld
test
aas
pop
and
mov
push
mov
call
mov
push
les
push
push
pop
push
xlat
stos
in
adc
fidivrl
mov
dec
rcrb
aas
ret
in
jp
cmp
sbb
ss
out
or
sub
mov
scas
xlat
jnp
leave
push
aaa
ret
cmp
push
aam
bound
jl
and
test
sarl
inc
hlt
stos
sbb
mov
dec
repnz
sbb
seto
fbstp
inc
mov
ljmp
fstpt
push
and
popf
sbb
jecxz
das
je
mov
dec
inc
insl
mov
int
pop
pop
repnz
pushf
sub
jne
out
jl
out
in
sbb
std
std
adc
mov
dec
push
cmp
adc
sbb
movsl
lret
adc
shll
mov
hlt
leave
pop
jp
jnp
sub
adc
adc
jg
negl
jnp
jns
sbb
lods
mov
call
icebp
jge
into
shr
mov
fnclex
adc
xchg
imull
sbb
imul
xchg
xor
sti
add
mov
xchg
mov
ror
sbb
std
loopne
jl
and
push
es
adc
dec
in
ljmp
mov
ret
mov
cmp
mov
cmp
stc
pop
xor
lock
stc
movsl
jg
jg
or
add
bsf
inc
call
outsl
xchg
xor
pop
and
ljmp
cmp
push
in
scas
xor
aaa
or
fs
xchg
cmp
mov
mov
rorb
xchg
cld
sbb
mov
jge
nop
fadds
test
aas
xchg
das
or
out
push
pop
jp
sbb
lret
call
rcl
jp
cmpsl
cmpsl
inc
ljmp
ret
lds
mov
dec
bound
popf
add
repz
pop
fsubr
mov
data16
int3
aas
rorl
xor
insb
ja
xor
mov
repnz
sub
mov
xor
in
sahf
pop
xchg
or
mov
sti
mov
cwtl
scas
into
je
and
and
cltd
das
cmc
push
or
out
std
jae
sub
inc
cmp
js
repz
ss
movsb
inc
mov
or
cmp
repz
rclb
fwait
idivb
shlb
add
lcall
dec
iret
mov
dec
fstpt
adc
jnp
mov
cmp
jns
addr16
imul
aas
fwait
loope
icebp
and
xchg
int
mov
int
xor
adc
int3
in
cmp
movsl
in
mov
adc
inc
pop
repz
and
aas
pop
push
push
shrl
repnz
push
push
enter
aad
push
daa
rcrb
xor
addl
mov
jnp
push
sub
sbb
int
popf
sarb
jmp
mov
mov
inc
mov
pop
push
shl
lods
lds
data16
jb
imul
repz
subl
fcoml
out
adc
xchg
pop
sub
dec
js
outsb
jp
data16
cmp
ret
inc
sbb
lret
mov
adc
fsts
lret
mov
jnp
cmp
jae
mov
xor
add
es
xchg
stos
ljmp
or
pop
or
test
sub
js
aaa
jl
movsl
mov
outsl
adc
imul
std
inc
push
aam
lds
jge
fldl
xlat
xchg
cwtl
adc
clc
mov
mov
lret
cmp
sub
push
dec
cmp
or
loopne
decl
fsubrl
jge
mov
fistpll
inc
cwtl
mov
pop
xchg
in
sti
push
push
lods
fcompl
jmp
rcr
push
dec
mov
dec
out
add
pop
into
pop
test
push
into
mov
xor
sarb
int3
arpl
aam
push
push
pop
cmp
pop
push
xor
mov
dec
inc
rcrl
iret
mov
aaa
xchg
jns
aad
fldenv
sti
sbb
cmpxchg
in
push
adc
cmc
mov
cmp
sarl
stc
test
cmp
je
imul
adc
mov
out
xchg
andb
insl
imul
pop
inc
pop
fnstsw
push
push
mov
mov
dec
divl
insl
xor
sub
inc
push
loopne
stos
xchg
mov
xchg
mov
dec
aaa
popa
std
jp
repz
fstpt
sub
test
lret
mov
stc
lods
dec
pop
addr16
lods
xor
flds
bound
insb
sbb
fsub
cmp
in
mov
mov
ss
push
mov
test
fnsave
ljmp
ljmp
dec
ljmp
cmp
and
out
je
dec
sub
aaa
ja
aaa
pop
push
mov
mov
sbb
or
jnp
push
insl
mov
mov
adc
adc
mov
sbb
mov
test
into
pop
sub
xor
je
xchg
dec
cmp
dec
pushf
shll
dec
mov
lods
xor
aad
test
mov
cwtl
adc
adc
lahf
and
arpl
test
cmp
sbb
ljmp
lock
jge
or
movl
xor
in
inc
add
mov
in
inc
hlt
rorl
dec
sub
mov
cs
sbb
shll
les
push
pusha
and
and
xchg
sbb
jbe
lds
jg
push
jne
jge
aaa
fs
dec
clc
int
and
daa
push
cwtl
jbe
subl
inc
fmull
fwait
mov
jnp
dec
xor
sub
movsb
and
notb
pop
out
ret
push
fisubrl
je
sahf
sub
jo
mov
jge
push
pop
mov
jp
lcall
cld
call
shrb
jb
jb
loopne
outsb
or
mov
lret
bound
mov
and
test
jns
push
pop
leave
pop
enter
jne
pop
js
xchg
pop
test
movb
xchg
pop
shl
clc
out
add
xchg
ja
ret
call
insl
mov
mov
adc
frstor
pop
enter
and
xchg
or
push
or
ds
aam
in
xor
and
mov
std
fcmove
inc
stos
repnz
fdivrl
lods
cld
xchg
je
stc
scas
pop
iret
mov
push
scas
repz
inc
jbe
xchg
mov
add
jae
add
subl
ja
dec
cwtl
es
test
divl
call
jns
push
addr16
and
fstpl
out
les
mov
scas
inc
das
daa
cltd
rcll
mov
xor
daa
pop
imul
jmp
push
mov
lds
jne
outsb
leave
das
in
hlt
mov
inc
aad
movl
mov
ffreep
int3
aam
sbb
js
and
sti
mov
mov
push
ficompl
out
jge
das
add
sub
scas
pusha
jae
inc
mov
sti
insl
sbb
jmp
mov
jno
lods
push
in
pop
sarb
mov
inc
sbb
adc
shlb
adcb
inc
ljmp
inc
das
push
push
mov
es
inc
hlt
cs
pop
test
push
mov
stc
jmp
fnstenv
test
scas
mov
test
cmp
icebp
rol
and
sbb
pop
call
and
inc
bound
mov
lods
ss
jmp
sti
sub
icebp
add
fcom
mov
inc
fimull
ljmp
in
loop
xor
shrl
loope
sahf
push
aaa
xor
dec
sub
ljmp
push
lret
js
adc
cwtl
jnp
jmp
int3
jbe
repnz
mov
push
in
push
pop
jmp
xor
dec
add
adc
pop
mov
dec
arpl
jns
xchg
pop
cli
mov
sub
inc
js
push
sbb
lods
call
sbb
add
xchg
push
rorl
xchg
and
add
mov
sub
shl
mov
repz
xchg
mov
mov
push
fldl
enter
shr
jge
pusha
dec
iret
dec
lock
mov
adc
dec
xchg
pop
ss
stc
pop
and
ret
mov
cmc
add
sub
sub
jbe
fldt
pop
imul
adc
es
xchg
ret
hlt
cs
dec
cmp
inc
scas
popa
pop
sub
dec
push
xor
stc
fisttpll
jno
inc
shr
stc
sbb
ja
fcomp
pop
pop
and
aad
pop
or
cmp
jns
adc
adc
push
nop
push
xchg
shll
cmp
mov
xchg
lahf
addr16
stos
xlat
nop
xchg
jo
cmp
push
jnp
mov
sbb
cld
mov
lods
stos
int
in
fstl
cmp
sub
pand
je
loopne
rolb
sbb
xchg
dec
xchg
jno
or
push
int
enter
pop
rol
push
jl
add
adc
mov
stc
sahf
cmova
ja
scas
mov
push
stos
orb
icebp
jl
sub
mov
les
ret
add
mov
cwtl
fwait
mov
sarl
mov
add
sarb
mov
push
rcrb
jns
cmpsb
orb
out
loopne
sub
fbld
sbb
adc
ljmp
fmuls
ss
push
adc
inc
je
mov
stos
push
daa
mov
lret
dec
xchg
lods
cmpsl
sti
iret
xlat
push
and
lcall
loop
inc
jl
and
push
arpl
pop
push
push
jl
mov
ljmp
sub
aaa
out
ljmp
ljmp
push
fdiv
insb
rolb
add
gs
lahf
into
xchg
lods
imull
mov
add
mov
jecxz
xor
rol
aaa
enter
mov
xor
cwtl
and
fcmovbe
cwtl
int3
push
sbb
jae
fsubrs
ret
xor
or
scas
dec
sub
and
inc
pushf
std
pusha
and
jmp
sbb
outsb
aas
jb
push
aaa
dec
call
popa
pop
mov
xor
sbb
jmp
jns
aam
mov
fcom
stc
fdivr
add
push
out
iret
mov
inc
mov
popf
jno
test
push
pop
jecxz
dec
aam
vandnps
ljmp
es
cmp
ret
pop
adc
scas
mov
lret
xchg
cltd
insb
andb
sbb
mov
dec
or
aad
jbe
test
jne
iret
adc
mov
jne
mov
repnz
mov
outsb
add
mov
adc
fadd
pushf
shll
roll
call
jns
lods
cmp
pause
cltd
dec
sub
inc
lods
ja
daa
call
sahf
push
jnp
xlat
xor
fwait
lret
xor
cmp
adc
cmp
pop
cwtl
out
mov
fs
jne
inc
fldt
lea
in
cltd
ret
fsubrl
std
lods
jp
cmpsl
int
add
ljmp
xchg
andl
push
ret
jno
ja
cmpl
cmp
gs
pop
mov
data16
jg
jge
mov
lret
in
inc
repnz
push
xlat
hlt
fs
and
pop
mov
imul
fistpll
sbb
xchg
aad
loopne
sbb
mov
inc
sub
cmp
cwtl
sub
pop
insb
jns
fcmovne
fwait
cld
das
fldt
or
movsb
les
push
nop
outsb
in
pop
push
jae
int3
mov
mov
add
loop
cmp
ljmp
inc
mov
sarl
clc
mov
jmp
mov
mov
popa
jns
push
dec
pop
push
pop
push
xlat
fidivl
sbb
lea
scas
mov
test
xor
add
js
pop
add
inc
repnz
js
das
out
inc
loopne
adc
push
mov
mov
ret
jns
bound
js
sbbl
cs
xchg
cmp
and
xor
sbbb
mov
rclb
stos
or
insb
pop
lcall
and
xchg
out
jp
push
mov
in
addr16
arpl
out
push
inc
repnz
ret
or
popa
jmp
cld
fldl
enter
jns
sbb
movsb
push
lcall
mov
pop
mov
mov
mov
movl
fadds
ja
out
pop
pop
sbb
ds
and
push
fs
sub
mov
ds
je
fdiv
xchg
cmc
cs
das
mov
mov
mov
stos
jnp
inc
lods
xor
ret
stos
jg
fmuls
sub
mov
sub
rorl
mov
je
popa
mov
pop
pop
fsubs
dec
fisubs
and
sbb
jge
mov
jge
mov
sti
movl
loopne
xor
cmp
ret
jle
inc
roll
push
ftst
sub
mov
or
cmp
movsl
aas
xor
movl
adc
int3
stc
testl
pop
outsl
sti
leave
mov
cmp
cmpsb
call
pop
leave
dec
jp
test
icebp
xchg
aam
stos
jg
shlb
mov
mov
les
lock
jae
adc
xchg
pop
dec
xchg
inc
fists
sub
push
cmpsb
cltd
jb
xor
rcrb
ljmp
ds
addr16
orb
pop
in
inc
xchg
mov
cmp
push
dec
pop
mov
dec
loopne
dec
fwait
or
adc
mov
push
aas
aaa
aas
gs
xor
cmc
mov
test
data16
xor
mov
sbb
mov
and
js
int3
push
mov
push
xor
shrb
jae
sbb
or
mov
pop
push
dec
add
aam
mov
xchg
jecxz
mov
enter
arpl
out
jbe
inc
mov
pop
push
sub
orl
push
stc
xchg
or
call
mov
xchg
dec
mov
pop
lods
add
push
test
dec
push
aaa
push
pop
sbb
test
cmc
mov
jae
mov
mov
call
data16
jg
mov
outsl
cltd
mov
pop
adc
clc
das
pop
clc
mov
push
faddl
sub
repnz
xor
xor
int3
push
loop
stc
mov
sbb
insl
pop
sub
push
or
push
mov
cli
jle
and
insb
fnstsw
fnsave
in
loop
lahf
adc
xchg
in
stos
xlat
lcall
sbb
outsb
leave
jp
out
pop
jo
jge
repnz
mov
dec
sub
mov
jmp
inc
in
ficomps
pop
pop
incb
xchg
pop
nop
jecxz
pop
xchg
and
loop
pop
jnp
mov
mov
ret
sub
pop
aas
push
mov
lahf
jmp
pop
pop
and
sub
cmp
inc
cmp
hlt
mov
cmpsl
scas
push
pop
add
aaa
stc
sub
jbe
ljmp
aad
adc
rcll
cmp
loope
cmc
adc
cmp
rcr
cmpsb
stc
or
mov
add
stos
aam
repz
or
xchg
je
jne
out
sbb
mov
push
in
or
lret
repz
pop
pop
sbb
mull
data16
push
push
lret
mov
cli
and
scas
inc
rclb
paddb
jp
arpl
inc
fxam
clc
pop
jmp
fldenv
aaa
inc
test
aad
es
xor
mov
cwtl
jecxz
test
fwait
div
mov
mov
negb
sbb
mov
leave
cltd
mov
xor
ret
and
adc
test
dec
cmp
aas
out
loopne
call
mov
cli
sub
mov
fcmovb
pop
stos
clc
pop
icebp
test
and
adc
adc
jg
sub
js
and
iret
orb
and
sarb
xchg
jl
sub
mov
inc
push
mov
inc
scas
movsb
popf
mov
pushf
aas
ds
dec
outsl
or
adc
jp
mov
mov
stc
pop
jecxz
mov
fimuls
mov
fisttpll
lret
popa
mov
jp
popf
imul
rolb
ret
out
push
jp
jecxz
jp
out
sub
shl
pop
adc
dec
lods
fiadds
mov
dec
dec
mov
lds
daa
aaa
ret
mov
testl
and
std
mov
stos
or
mov
or
adc
inc
aam
pop
push
adc
lods
rcr
jecxz
add
xchg
mov
or
xor
jns
xchg
das
jmp
in
popa
mov
xchg
mull
inc
pushf
frstor
loope
insb
ret
movsl
add
out
mov
or
cmp
sub
jno
add
pop
mov
dec
test
add
or
mov
push
insl
les
popf
jecxz
stc
mov
out
mov
mov
xchg
lds
mov
mov
xor
add
fs
fmulp
xchg
xor
aaa
enter
test
mov
daa
cmp
nop
cmp
mov
xor
roll
pop
addr16
stc
stos
xchg
cmp
rolb
jne
stos
push
sbb
jo
int
lahf
fldcw
iret
push
jecxz
pop
add
negl
scas
movsb
add
mov
sarb
enter
lock
inc
out
mov
xor
sbb
sbb
cmp
jbe
gs
mov
scas
shlb
inc
je
das
adc
sti
pop
mov
xor
jno
aam
jo
or
stos
fwait
cmpsl
mov
fdivr
pusha
lret
mov
pop
push
or
leave
inc
pop
jnp
mov
and
inc
fwait
cmp
add
call
xor
gs
cs
divw
xor
mov
pusha
xchg
jg
bound
push
movsl
int3
mov
pop
sub
aad
addr16
sbb
jecxz
inc
push
repz
sbb
xchg
popf
mov
or
and
fwait
jl
dec
jnp
xchg
or
cmpl
cmp
pop
pop
sub
fdivrl
push
inc
mov
cmp
hlt
loop
sahf
push
or
jb
gs
sub
sbb
fstpt
sbb
mov
insl
and
andb
cmp
mov
push
icebp
jmp
adc
lds
mov
fistl
sti
ret
push
and
jmp
iret
fisubs
jp
outsl
and
mov
dec
loopne
pushf
adc
pop
adc
pop
mov
inc
dec
enter
xlat
mov
in
lods
std
xchg
push
mov
sti
jae
das
pop
out
inc
mov
ljmp
adc
rcrl
movsb
fnsave
jns
cmpsl
and
sarl
jae
rcrb
xchg
adc
arpl
push
rolb
pop
inc
xchg
inc
cltd
shll
cmp
pop
mov
pop
pop
idivb
cmp
sub
and
mov
les
sbb
hlt
pop
rcll
std
push
out
dec
dec
dec
aas
icebp
lret
test
jno
adc
cmp
xlat
mov
sbb
mov
ja
jbe
dec
arpl
fwait
ret
push
jp
and
add
jecxz
dec
mov
ret
rclb
test
inc
push
xor
add
fwait
adc
inc
jl
add
mov
gs
xchg
cli
push
inc
movsl
mov
sub
sub
stc
xor
repnz
sarb
xchg
adc
loopne
faddp
leave
cltd
pop
mov
in
ja
sub
cmp
test
push
mov
cmp
pop
out
shrb
cmpsl
dec
cmpsl
rorl
out
leave
mov
outsb
cmpsb
imul
sarb
int3
xor
out
lahf
out
xchg
mov
jae
jno
sahf
xor
push
mov
sub
addr16
aam
or
popf
fdivr
push
sti
stos
les
ja
pop
sbb
ds
shll
clc
mov
sbb
lea
mov
pusha
inc
xchg
scas
mov
call
mov
in
je
mov
and
fs
pop
mov
xchg
lahf
pop
jne
sbb
int
xor
sarb
sbb
in
push
mov
add
xlat
dec
pop
lods
cmp
in
and
xchg
or
mov
sub
vfrczsd
cwtl
cmp
push
icebp
ss
or
push
mov
or
xchg
cmp
sbb
dec
int3
mov
jl
jecxz
sahf
inc
arpl
sahf
xchg
push
lcall
or
pop
add
sbb
or
mov
pop
arpl
leave
arpl
push
mov
adc
jg
mov
movb
into
pop
sahf
adc
ss
jmp
dec
hlt
sbb
stos
inc
mov
push
add
jns
in
xor
dec
inc
mov
cs
gs
stos
mov
pushf
js
std
lret
inc
sbb
push
decl
aad
insl
jno
pop
sti
fisttps
lret
mov
movsl
aaa
fwait
sti
and
stc
lcall
icebp
lahf
push
fs
subl
mov
mov
xor
jl
pop
sbb
in
out
hlt
movsl
ss
out
dec
hlt
mov
sbb
rol
mov
mov
adc
gs
mov
div
rorb
sti
xchg
push
stos
jns
pop
add
js
outsb
mov
and
pushf
mov
std
jp
out
inc
out
adc
std
fisttps
dec
cwtl
sub
js
mov
in
insb
xor
push
mov
leave
daa
mov
mov
dec
gs
aas
push
sarb
ja
jl
mov
loopne
cmp
xor
push
int
jnp
sub
cmpsl
mov
pop
sub
in
loop
or
xor
lret
fwait
outsl
divl
dec
mov
push
out
add
mulb
call
xchg
adc
icebp
ljmp
out
or
gs
mov
cs
mov
arpl
mov
push
add
inc
cmpsb
es
sbb
mov
pop
dec
or
mov
add
mov
sarl
mov
sbb
imul
or
mov
out
or
in
fldl
and
cmpsb
outsb
cmpsl
xchg
ja
lods
mov
imul
loop
jne
xor
ljmp
das
add
cmpsb
cld
dec
xacquire
fs
call
fwait
mov
cmpsl
enter
mov
lret
jp
aad
mov
inc
fmuls
aam
repnz
push
cmpsl
inc
sbb
xchg
inc
mov
jl
cs
ja
sarb
mov
dec
jns
pop
ds
mov
sbb
dec
out
jge
xor
adc
out
fs
pop
or
push
mov
inc
mov
mov
movsl
cltd
xchg
jecxz
lahf
es
sub
popa
scas
outsl
aam
pop
test
out
mov
jmp
out
arpl
loope
test
dec
adcb
mov
push
ss
ret
pusha
xor
aas
clc
pushf
in
fadd
subb
popw
incl
mov
jo
pusha
mov
mov
int
mov
iret
add
fisttps
das
inc
in
push
push
mov
push
jecxz
test
mov
sbb
shrb
and
arpl
and
adc
mov
aaa
fs
cmp
out
cmp
sbb
or
xchg
aaa
sub
jp
andb
fdivr
lods
fsubrs
or
loop
jmp
dec
call
int
popa
sbb
adc
cltd
sbb
cli
std
outsb
jb
fyl2xp1
in
mov
std
adc
sub
icebp
adc
ds
mov
mov
jecxz
mov
adc
andl
rclb
push
arpl
mov
mov
lods
outsb
jmp
sti
mov
mov
sbb
into
cmp
inc
in
cmp
inc
addl
jo
push
or
mov
push
loope
sub
or
inc
or
nop
loope
sbb
xchg
inc
jg
sub
pop
dec
jno
rcll
loope
rclb
lods
lcall
push
mov
and
fsubrl
ljmp
jae
into
xor
sbbl
push
stos
pop
addl
sub
fwait
lock
test
push
jl
iret
aam
test
or
je
push
push
incb
sub
iret
cmc
outsb
int3
jg
out
mov
push
std
mov
adc
adc
sbb
pushf
dec
jp
dec
into
xlat
stos
es
push
push
mov
lret
test
stos
fiaddl
xchg
pop
jle
insl
push
xchg
outsb
sti
push
push
cli
jne
mov
idiv
push
es
mov
pop
test
jnp
mov
push
addr16
jns
lods
lret
leave
push
lret
lock
fsts
int
cmp
xor
dec
push
stc
fdivp
adc
scas
fcmovnbe
xchg
aad
icebp
ss
mov
and
fstl
push
sbb
cli
fildll
outsb
inc
jp
and
int3
jnp
push
pop
and
jnp
inc
ds
mov
das
inc
mov
in
sub
insb
jbe
scas
inc
ljmp
divb
loop
jecxz
sahf
loop
outsb
mov
add
mov
aad
movsl
cmp
in
fcompl
and
cld
mov
mov
jbe
std
and
mov
xchg
mov
mov
inc
pop
arpl
add
imul
test
ss
jno
mov
push
test
lea
sbb
xchg
mov
movsb
sar
cmp
cwtl
dec
cmpsl
mov
mov
add
ljmp
stos
shl
mov
or
mov
stos
jno
add
loopne
clc
sub
add
inc
pop
sti
jl
inc
mov
lahf
pop
sub
int3
mov
mov
and
mov
sbb
in
jae
cmp
leave
cmp
mov
add
pushf
push
into
cmp
pop
xor
mov
add
in
cli
mov
cmp
or
jmp
pop
push
jecxz
pop
cmp
imul
aas
fmulp
fbld
rcl
xchg
sub
cmp
push
add
cmp
xchg
jns
mov
and
mov
mov
lock
popa
frstor
adc
mov
ret
jae
sub
lea
movsb
sub
popa
mov
and
cmpsb
test
out
mov
cli
cmp
mov
dec
and
push
pop
jb
cmp
cmp
sub
fnsave
push
movsb
stos
push
mov
lods
cmc
mov
sub
fstps
pop
xchg
sarb
dec
insl
mov
jp
mov
imul
push
insl
inc
mov
push
es
imul
in
lret
jb
inc
hlt
mov
stos
adc
popf
fcomps
push
xchg
mov
test
cmpsl
pushf
cmpsb
insb
fidivl
adc
xchg
sub
inc
sub
sbb
popf
dec
cwtl
lcall
pop
hlt
out
pop
xchg
addl
data16
das
in
sbb
adcl
inc
pop
lods
aaa
xor
ret
pop
push
ja
mov
lret
and
out
push
push
test
push
mov
cmpsb
adc
adc
mov
lret
mov
pop
sarl
push
xchg
dec
jg
filds
dec
divb
in
adc
dec
lret
mov
cltd
leave
out
lahf
or
cld
int3
das
dec
call
aad
pop
test
mov
lret
sbb
sbb
imul
cli
pop
cmpsb
mov
aas
push
leave
push
cld
ret
adc
pop
loop
arpl
je
adc
mov
jmp
xchg
mov
loopne
dec
xlat
add
gs
xchg
push
adc
inc
jne
and
inc
fdivrs
mov
in
push
pop
fstl
cs
cmp
sbb
cmp
test
push
lahf
xchg
and
dec
xor
loope
popa
inc
dec
in
inc
dec
pop
movl
adc
mov
test
add
and
cli
or
popf
in
or
and
push
dec
enter
stos
call
pop
imul
sbb
lea
popa
popa
in
xchg
repnz
xor
and
inc
nop
mov
add
les
and
and
es
adc
test
sub
mov
mov
pop
jge
fmuls
mov
adc
mov
lock
sbb
xchg
pop
insl
or
pop
aas
jae
mov
das
outsb
sarl
repnz
stos
into
das
fbld
push
sub
mov
and
imul
sub
pop
push
pop
push
outsb
cmp
cmp
sbb
test
jl
and
fcmovnu
mov
xlat
jns
mov
loope
subb
scas
sbb
mov
stos
and
pushf
xor
inc
or
xchg
push
scas
adc
cmc
or
mul
es
inc
pop
lea
in
mov
or
cmp
dec
dec
je
sbb
aad
bound
jb
dec
mov
test
xchg
jle
sbb
sub
push
dec
call
lea
mov
jg
dec
stos
flds
dec
mov
idiv
cwtl
mov
pop
add
out
mov
mov
xchg
inc
adc
int3
push
xchg
xchg
mov
xor
int
push
aaa
ja
fistps
imul
scas
mov
inc
lret
rcrl
xchg
xchg
lods
pop
pop
sbb
xor
sar
iret
jecxz
sbb
int
mov
sti
jge
mov
divl
mov
clc
leave
int3
lahf
mov
xchg
movsb
popa
imul
loop
out
cwtl
or
sbb
mov
lret
or
jecxz
inc
jl
iret
push
adc
test
jno
adc
outsl
movsb
mov
add
outsb
xchg
lods
adc
and
xchg
sub
sbb
adc
fsubr
adc
inc
paddsw
push
out
cmpsl
mov
pop
xor
and
add
sbb
arpl
adc
lock
hlt
icebp
mov
sbb
jp
sbb
mov
pushf
push
xchg
movb
ficoml
inc
mov
cli
lods
divl
pop
dec
mov
mov
and
jo,pt
std
adc
jl
ret
dec
inc
adc
imul
sub
inc
pop
mov
jmp
popf
inc
jmp
or
xchg
cmp
or
les
leave
dec
cs
rcrl
mov
pop
dec
ficoml
and
jnp
xor
push
loope
sub
xor
jg
inc
in
adc
mov
lahf
adc
pop
outsb
and
or
and
pop
sbb
aas
push
mov
cmp
cmp
and
mov
sbb
add
mov
dec
mov
outsb
aaa
mov
xor
fmuls
xchg
inc
gs
jl
xlat
mov
push
inc
loopne
xchg
scas
fiadds
jo
xchg
or
pop
or
cmc
xorb
imul
enter
jge
leave
and
xlat
fisubs
mov
hlt
invd
or
outsb
add
cwtl
mov
dec
xor
sahf
shrl
sarb
push
sub
ds
or
mov
push
sub
fstps
inc
jnp
xor
stos
imul
pop
xor
outsl
lds
scas
cwtl
cmp
mov
repz
inc
pop
jne
xor
in
xchg
fistps
bound
test
into
xor
mov
pop
add
sbb
sbb
adc
in
lds
and
gs
je
fnstcw
movsb
xchg
ficoml
lcall
mov
adc
jno
xchg
or
outsl
lahf
arpl
cmc
jg
scas
push
jnp
mov
sti
mov
pop
outsl
adc
inc
loope
sub
or
jge
out
aam
out
test
insl
pop
popaw
xor
into
xchg
repz
cmp
mov
push
roll
stc
mov
mov
subl
mov
pop
pop
lea
jns
fsts
outsb
test
fsub
aad
cmpsl
stos
icebp
out
xchg
loop
iret
sbb
add
or
cs
xchg
lock
sub
lahf
das
mov
aam
mov
cmp
subl
and
mov
ret
pop
or
push
lret
gs
lcall
hlt
mov
pop
or
xchg
arpl
push
jne
cmpb
mov
cmpl
into
sub
neg
in
movsl
and
sbb
in
mov
adc
xchg
sti
out
stc
dec
pop
fbstp
jns
movsl
push
push
subb
lods
jb
xchg
ret
ror
cld
lcall
test
sbb
jmp
popf
pop
or
push
in
fbstp
adc
pop
inc
test
popf
movsl
xor
sub
cmp
xchg
inc
xlat
jle
inc
sub
idivb
mov
gs
dec
fnstcw
je
dec
dec
mov
mov
and
rclb
lahf
mov
loop
adc
shrb
out
cld
mov
cmp
cmp
sub
add
adc
sbb
inc
xchg
jno
fbld
add
les
jb
mov
dec
push
jne
and
cmpsb
cmp
and
loop
push
lea
pop
popf
push
jno
movsb
push
and
pop
sub
icebp
mov
fimull
push
mov
pop
outsl
daa
adc
push
adc
push
movsb
addr16
dec
ja
xor
fidivrs
sub
inc
insl
push
pop
scas
mov
stos
insb
jmp
imul
pop
movsl
push
mov
adc
clc
into
push
pop
mov
xchg
pop
inc
jno
xchg
sbb
int
mov
lahf
push
decb
aad
cmp
add
add
bound
fisubrl
jge
jne
adc
and
mov
jmp
shrl
stc
xor
lcall
mov
addr16
jle
pop
push
ret
cmpsl
sub
jl
sub
push
mov
mov
mov
mov
hlt
rorb
adcb
in
js
repnz
and
dec
adc
xor
lea
sub
xchg
inc
xchg
xor
mov
movsl
cwtl
mov
sti
pop
adc
pop
inc
cmp
inc
pusha
push
in
pop
and
inc
cmp
push
cmp
pop
sti
idiv
mov
and
push
cs
test
ljmp
mov
out
out
insb
dec
jno
xchg
in
mov
js
or
mov
fsubl
xchg
outsl
inc
jno
sub
jnp
outsl
sbb
iret
inc
lret
cmp
jl
mov
movsb
imul
scas
int3
stc
or
jmp
in
cmpsl
push
fistpll
out
xchg
shl
movsb
fisubrs
lret
and
dec
loopne
test
outsb
push
pushf
jge
cmc
cmp
push
test
outsb
popa
in
lock
cmp
es
data16
in
mov
and
adcb
jbe
iret
jge
loopne
sub
pop
mov
lcall
xchg
pushf
or
lds
dec
push
sbb
faddl
jo
dec
mov
and
lret
xchg
test
pop
cmpsl
lret
jbe
shlb
cld
and
or
nop
aam
out
push
scas
jmp
loope
inc
int
ljmp
cmp
lock
jne
mov
cmpsb
cmc
xchg
mov
outsb
inc
and
aam
push
add
inc
pushf
popf
inc
sub
gs
push
ja
xchg
jle
das
aaa
push
iret
cmp
mov
testb
cld
adc
les
push
icebp
mov
jp
hlt
adc
mov
dec
fisubrl
mov
xor
test
sbb
cld
popa
out
pop
inc
lea
push
repz
imul
aad
pushf
mov
mov
test
push
data16
rolb
xor
fsubl
pop
xor
stc
dec
testb
xor
mov
inc
xor
shll
xchg
sbb
lcall
popf
cmp
daa
pop
push
mov
loop
hlt
cmp
push
jne
fs
sbb
sub
stc
jl
add
loop
push
xchg
inc
int
fucomip
add
jl
push
push
pop
cli
xchg
or
add
or
sti
nop
add
imull
mov
xchg
adc
and
jg
cs
xor
loopne
fidivrs
sar
fildl
mov
sbb
mov
repz
es
insl
xchg
lods
adc
adc
mov
loop
jecxz
rcr
xor
dec
jl
or
mov
and
add
mov
mov
mov
mov
xchg
jp
add
inc
fwait
pop
lds
and
cmp
jne
mov
icebp
movsl
loopne
cmp
xchg
clc
cmp
jge
or
or
xor
setl
vmread
scas
inc
and
sbb
test
push
pop
jns
inc
imul
xor
je
push
fmuls
mov
cmpsb
cmpsb
test
pushl
jecxz
aad
aam
mov
jp
mov
pop
pushf
std
push
cmp
adc
sub
mov
mov
cmpsb
scas
jnp
in
lock
xchg
cwtl
mov
aad
nop
adc
push
mov
mov
inc
imul
gs
popa
addr16
cmpsb
icebp
inc
repz
ljmp
clc
inc
sbb
ja
scas
add
pop
rol
adc
ljmp
in
adc
jae
shll
jno
sbb
stos
jg
ja
enter
sbb
xor
ljmp
scas
jnp
xchg
add
push
in
push
addr16
pop
rcl
inc
les
cmpsl
push
inc
sub
ljmp
or
leave
sarl
sub
test
cld
repnz
push
fmul
stc
push
popa
lahf
mov
dec
sub
inc
in
repz
sar
stc
sbb
jae
jl
shlb
sbb
cmpsb
das
mov
cmc
pop
sub
test
mov
or
inc
cmp
push
outsl
pop
ss
add
insl
inc
inc
stc
and
scas
jae
popa
push
push
sub
pop
xor
dec
fisubrs
inc
imul
shl
iret
inc
push
or
outsl
pop
xor
sbb
fdivrl
cwtl
add
notl
sbb
xchg
or
inc
sti
push
xchg
pop
and
sbb
and
dec
ficomps
dec
ds
cwtl
mov
popa
sub
mov
ss
jns
mov
inc
imul
out
ja
xor
pushl
xchg
pop
ss
lahf
dec
ljmp
or
inc
mov
and
adc
sbb
cwtl
je
aaa
adc
movsl
pop
push
pop
cs
jmp
ret
sti
icebp
ja
jecxz
scas
jbe
es
jp
dec
mov
push
xchg
lret
adc
pop
cmp
pop
and
jmp
lea
cmp
dec
cwtl
lds
sub
icebp
xchg
sbb
push
and
insb
jecxz
clc
dec
pop
imul
sbb
repnz
sbb
ljmp
jge
testl
fdivrl
dec
inc
xchg
pop
xor
jp
loopne
imul
ljmp
or
adc
out
jb
inc
cmc
add
lret
ficoms
jmp
xor
or
cmp
and
cmp
mov
adc
fisubrs
addr16
icebp
dec
mov
fyl2x
inc
les
hlt
jne
leave
flds
xchg
jns
repz
mov
imul
pusha
xor
sub
lret
xor
mov
repz
stos
push
addr16
cmp
or
bound
xchg
or
dec
jl
inc
sbb
popf
popa
cmp
arpl
outsl
sbb
loop
cmpb
xchg
test
dec
jmp
mov
mov
dec
test
popf
xchg
sbb
mov
ficoml
cmpsl
es
mov
lods
cmp
loop
ret
jae
jecxz
add
das
add
fdivl
stos
in
push
pushf
mov
xor
or
inc
sub
or
nop
fucom
orl
pop
push
or
gs
inc
pushf
cmpl
lret
cmp
dec
cmp
push
sti
pop
push
adc
call
lock
imul
cmp
fnsave
dec
inc
repz
dec
add
adc
rol
jmp
jmp
andl
stc
push
push
or
inc
jecxz
fdivrl
adcb
xchg
inc
sbb
sbb
mov
pop
fsin
mov
cmpsl
cmp
cmp
mov
push
jecxz
push
jmp
popl
cmp
fsubs
cmp
cmpsl
leave
jle
fnstcw
ds
inc
and
lods
aam
and
sub
daa
pop
js
push
pop
add
in
adc
lcall
imul
mov
dec
sub
enter
cmp
and
outsb
mov
add
subl
fstl
cwtd
les
xchg
cmpsl
adc
or
jno
test
adc
inc
push
mov
sub
je
rorb
negl
lahf
mov
cmc
loop
loopew
lret
push
scas
push
das
jp
pop
cmpxchg
jbe
clc
cmc
out
cmp
or
jnp
pop
xchg
jmp
push
icebp
and
shlb
repz
sub
dec
orl
movnti
push
and
insl
push
pop
arpl
fdiv
lods
je
mov
ret
fstpl
fucomip
jle
pushf
sbb
mov
movq
int3
rcrb
fwait
rorb
fwait
push
stos
clc
sbb
out
or
dec
jl
out
push
fisubl
imul
hlt
xor
jle
and
je
adc
test
or
aam
ja
test
dec
fs
push
add
jle
mov
jecxz
es
cmp
movsb
cmp
je
clc
mov
sbb
aad
dec
movsb
xchg
cmpsb
inc
sub
test
mov
or
dec
insb
js
jg
cmp
fldcw
pop
fsts
pop
mov
sub
mov
add
jo
pop
cli
addr16
xor
mov
add
mov
sub
cmp
push
shrb
push
lea
xor
dec
stos
ds
clc
flds
mulb
jmp
xchg
dec
cmpsl
inc
jecxz
ret
mull
sub
add
or
or
mov
lods
xchg
push
je
popa
rol
mov
sbb
icebp
scas
inc
pop
xor
mov
shlb
jmp
lea
divl
pop
sub
ficoms
xor
in
add
jae
icebp
or
ja
es
jp
and
or
xchg
jp
add
movsl
dec
xor
sbb
adc
dec
shlb
xor
inc
insl
dec
scas
jge
cld
lea
push
aas
daa
adc
ficompl
nop
xor
mov
push
jb
jns
dec
stos
lods
pop
cmp
daa
bnd
sar
je
lds
push
jns
repnz
xor
lods
loope
sahf
cmpsl
xor
arpl
adc
stos
mov
cmpsb
loopne
pop
iret
addr16
mov
cmc
add
sahf
jge
cmpsl
push
ret
out
clc
mov
mov
arpl
in
arpl
pop
data16
movsl
lock
pop
stos
xorl
shrb
push
movsl
adc
dec
push
cmp
push
fwait
add
add
add
or
sbb
cmp
enter
and
pop
push
idivl
sub
mov
sarl
stos
mov
shl
mov
scas
lahf
mov
andl
ret
xor
outsl
xchg
iret
lods
lock
clc
dec
insl
jle
icebp
jnp
jg
iret
jg
std
cli
xlat
stc
fst
pop
sub
icebp
inc
xchg
and
aaa
cwtl
fnsave
cs
add
rcl
movsb
jnp
cld
cltd
popa
idivl
and
mov
sbb
inc
inc
call
daa
and
fstp
std
iret
sub
in
inc
and
lods
fwait
cmc
mov
adc
add
mov
adc
outsl
cmpsb
inc
sub
cmp
inc
dec
pop
inc
sti
stos
rolb
das
andb
mov
push
mov
das
sahf
xchg
jbe
ljmp
jns
jns
jnp
push
fildll
dec
sbb
addl
out
aaa
and
loop
pop
mov
les
mov
push
lods
decb
lahf
lahf
mov
cmp
icebp
push
lock
add
and
out
xchg
mov
push
and
or
mov
pop
fildll
ljmp
pusha
jge
sub
mov
mov
imul
stos
pop
ret
or
jno
jge
outsl
sub
add
ljmp
test
icebp
je
push
push
sbb
pop
test
inc
mov
xchg
cmp
fidivrl
scas
test
inc
aad
call
roll
inc
mov
add
in
sub
jbe
adc
scas
gs
lods
push
not
adc
mov
mov
pop
push
mov
xchg
nop
ret
popf
arpl
and
pop
idivl
loopne
xor
ret
push
push
call
inc
std
jle
jnp
je
lret
inc
xchg
iret
movsl
jle
and
std
jecxz
aam
sbb
mov
pop
push
sbb
iret
rolb
jg
sbb
out
dec
dec
mov
ret
int
cmp
rcrl
jecxz
sub
xor
ja
mov
das
xchg
js
mulb
aaa
sar
sbb
sbb
sub
fldl
push
add
out
loop
pop
lret
test
test
daa
mov
mov
fidivrs
cs
ja
jmp
mov
xor
or
xchg
mov
into
stos
jecxz
mov
pop
sbb
pop
push
add
push
lea
es
push
sub
clc
dec
inc
xchg
xchg
push
fcoml
or
xchg
pop
out
add
sti
aaa
insl
inc
pop
sahf
arpl
or
mov
aam
jns
lods
mov
sub
sub
push
jns
in
jne
iret
and
mov
mov
mov
leave
decb
xlat
add
pop
out
xchg
sbbl
test
iret
cmc
sbb
jae
adc
sub
ja
lock
push
xchg
adc
inc
imul
mov
jbe
int
cmp
daa
or
aam
inc
test
push
outsb
sahf
and
fiaddl
out
stos
mov
jne
daa
sbb
fstpt
out
cmp
and
or
aad
jmp
cmc
test
push
add
xchg
lea
mov
adc
shl
sbb
cmpsl
cmc
mov
xor
mov
insb
mov
mov
inc
es
popf
cwtl
int3
scas
jp
andl
loope
xlat
jnp
ds
xor
pop
lcall
in
shrb
pop
add
lods
aas
into
xlat
mov
sub
cmp
leave
in
fisttpll
mov
cmp
pop
out
shl
adc
rorb
pop
sbb
push
std
aam
dec
mov
ljmp
es
xlat
mov
jo
mov
ficomps
jl
cmc
sbb
sub
insl
ret
outsb
in
repnz
pop
bound
sti
outsb
jecxz
mov
sbb
int3
stc
stos
push
in
lahf
popf
pop
dec
mov
scas
and
lret
jecxz
aad
jae
pop
subl
jnp
push
into
sub
pop
cmp
mov
call
xchg
mov
addr16
xor
and
mov
ficomps
stc
sbb
dec
or
jnp
xchg
cltd
jbe
testb
mov
pop
sbb
xchg
push
pop
xchg
fistl
xor
lret
enter
mov
insl
sub
xor
pop
clc
int
inc
inc
xchg
imul
inc
mov
jae
mov
shll
test
stc
pop
sbb
dec
or
push
lcall
push
jge
inc
or
sub
nop
jmp
xor
sub
inc
ljmp
xor
push
cli
push
sti
mov
or
xlat
mov
popa
push
lea
mov
sub
in
add
hlt
push
out
sub
out
lcall
hlt
pop
lods
repnz
das
movsb
mov
dec
cli
cs
mulb
scas
ds
cmp
sub
mov
push
push
mov
and
mov
add
daa
mov
cmp
or
je
jae
cmp
das
das
push
jmp
loop
bound
cmpsb
rorb
xor
push
leave
mov
add
and
push
cmp
insl
lret
mov
xor
push
xchg
out
xor
inc
mov
xorl
lret
daa
int3
das
or
add
mov
inc
rorl
ljmp
pop
in
ds
out
ljmp
popa
xchg
inc
outsb
mov
jb
cmp
inc
mov
stc
xchg
dec
mov
mov
adc
mov
push
fistl
out
int3
xlat
inc
mov
mov
mov
xor
fimull
xor
sub
add
adc
mov
stc
mov
mov
push
inc
lock
stc
push
jp,pt
fisttpll
xchg
insb
pop
inc
test
pop
fimuls
adc
add
lret
bound
loop
or
nop
iret
mov
sub
dec
aaa
fs
mov
add
mov
and
lods
bound
mov
fwait
add
pusha
and
mov
add
fdivl
add
je
mov
iret
xchg
call
add
adc
je
loope
or
scas
jmp
movsb
mov
ret
pop
mov
stos
dec
add
mov
mov
adc
jl
popa
jne
data16
sahf
jp
cwtl
arpl
xor
dec
add
cmp
bound
and
pop
test
out
js
andl
sti
lcall
shlb
call
cmpsb
add
mov
out
pop
sbb
mov
outsl
rolb
clc
daa
push
jmp
fiaddl
ss
lret
sbb
cltd
flds
cmp
add
les
adc
mov
out
jmp
sbb
cmp
cmp
inc
sbb
jge
sbb
adc
incl
cmp
sub
mov
sbb
pop
outsl
lahf
movsb
fstps
pop
or
daa
fucomp
popa
mov
cltd
pop
mov
ss
fcmovb
out
jge
push
mov
inc
sub
push
pop
mov
add
rcll
sbb
jne
fmul
rorl
dec
test
aas
fiadds
sti
sub
lods
jo
add
iret
mov
imul
inc
mov
push
jne
fdivl
repnz
sub
shlb
sbb
inc
ja
mov
aad
ja
jae
and
mov
jne
push
xchg
in
or
int
sbb
movb
popf
lock
inc
inc
jg
xchg
jo
jae
fisttpl
jno
jae
cmp
inc
dec
pop
push
push
sti
stos
fwait
mov
or
es
mov
setge
cmp
sahf
mov
mov
imul
rcrb
cmpsb
xor
sbb
mov
shrl
es
sub
and
call
aam
sbb
jl
movsl
adc
xchg
sub
mov
push
sbb
lods
sti
add
adcl
lcall
test
out
mov
mov
es
adc
outsb
rorl
mov
fcoms
or
cmp
outsb
cmp
fwait
and
fidivrl
lcall
bound
in
pop
les
mov
push
sti
or
aaa
cmp
fstpt
inc
rorl
cwtl
shlb
aam
and
jnp
mov
xor
fwait
sub
push
dec
popf
fdivrl
decl
inc
outsl
cmpl
mov
aas
lock
push
sahf
movl
addr16
xchg
or
mov
stc
push
popf
addl
and
adc
and
jno
stos
stos
jg
and
aad
or
test
xchg
arpl
lcall
bnd
mov
and
pushf
mov
movsb
shrl
or
xor
out
dec
mov
mov
pop
mulb
pop
sbb
testb
aas
popf
clc
or
pmaddwd
pop
out
xchg
push
call
int
or
push
cmp
in
or
inc
shrl
jbe
pop
or
or
fiadds
jne
mov
mov
jmp
mov
lods
cmp
lret
sub
jo
push
mov
clc
and
idivb
jg
popa
sub
or
push
jno
pushf
mov
ja
in
or
jae
jo
cmp
xchg
les
and
sbb
out
dec
push
ss
scas
arpl
inc
sti
jg
sti
sbb
js
push
push
adc
fldt
cld
xor
bound
out
imul
enter
cld
pop
fbstp
outsl
and
mov
sub
pop
add
mov
mov
add
imul
mov
pop
xchg
stos
push
je
test
mov
sub
divl
aad
in
iret
fadds
ds
mov
jnp
mov
pop
stc
sti
or
lods
xchg
mov
jl
cwtl
xor
call
loop
push
test
cmp
lods
das
jle
fldcw
ret
pop
mov
lret
or
addr16
add
and
fiaddl
dec
push
fisubrs
fstps
jns
jne
dec
es
sub
fists
jg
fwait
ljmp
ret
inc
stos
cmp
andb
sbb
jne
ret
shrb
scas
lret
jecxz
outsl
aas
gs
add
inc
outsl
add
xor
jnp
fimuls
adc
push
in
imul
movsb
std
xchg
popa
in
cmp
sub
pop
mov
dec
repz
scas
rolb
pop
xor
setge
enter
repz
sub
insl
das
das
fwait
xor
outsb
icebp
insb
movl
sti
pop
addr16
mov
sub
clc
sub
xor
pop
pop
pop
pop
jno
sarb
and
and
data16
dec
jge
cmp
int3
fwait
push
pop
add
pop
sub
ret
xchg
test
in
and
sub
sbb
je
rcl
jno
jns
lods
ret
mov
pop
adc
test
mov
mov
bnd
jo
mov
mov
mov
bound
shlb
push
jp
jns
xchg
xor
sub
in
lods
dec
dec
sbb
xchg
pop
cld
lret
or
icebp
pusha
ja
mov
sti
add
or
sahf
mov
jg
imul
mov
fwait
out
test
fwait
dec
dec
and
lret
mov
inc
stc
add
aam
or
cmp
push
adc
es
inc
shlb
ljmp
and
es
std
cld
addps
and
lods
and
cmp
insl
pusha
jbe
add
or
lock
add
mov
pop
adc
mov
mov
mov
stos
out
jle
icebp
stos
out
cwtl
rorl
xchg
push
push
push
dec
add
into
js
sub
not
clc
mov
divl
ss
mov
mov
and
push
hlt
pop
movsl
inc
movsb
inc
cmpsb
and
aas
push
or
das
sub
add
daa
jmp
test
xor
mov
add
aas
xchg
inc
sub
enter
icebp
sub
mov
add
jbe
repz
pop
aad
adc
mov
cli
cmp
daa
jle
rcr
ror
cmc
jns
lret
call
ret
xchg
scas
lods
pop
ud0
cltd
jle
xor
das
repz
pop
stos
push
pop
or
mov
sti
jae
adc
in
fucom
sub
cltd
in
adc
push
loope
daa
stos
push
push
push
lods
xchg
xchg
adc
xchg
adc
out
and
push
test
andb
push
add
inc
sbb
addb
mov
clc
stc
or
pop
movsb
fcmovne
push
cld
xchg
lret
sbb
dec
or
xor
repz
add
gs
fcomps
ss
xchg
nop
enter
jnp
or
jg
fsubl
test
or
adc
jns
lret
xlat
jbe
icebp
int
jae
xlat
cmp
cmpsb
dec
fnstcw
lret
mov
mov
int
xchg
inc
add
xchg
loop
cli
sub
fildl
loopne
jae
daa
test
cmp
hlt
mov
rcr
cmp
sub
out
rolb
pushf
or
out
das
leave
pop
loopne
xlat
push
xlat
or
dec
cmp
out
ret
roll
cmpsl
pushf
inc
inc
mov
pop
fidivs
sbb
mov
mov
fisttpll
push
lock
adc
lds
mov
sub
lret
push
loop
mov
sbbl
mov
sbb
or
stc
push
mov
repnz
pop
test
test
jp
sbb
loopne
xor
adc
cwtl
dec
mov
cmpsl
aam
pop
lret
loop
fdivs
inc
mov
sarl
dec
and
or
pusha
fcoms
out
test
push
lcall
push
sub
sahf
and
pushf
push
pop
cmp
scas
mov
sub
aaa
imul
adc
fistpl
mov
xor
mov
cmp
or
and
mov
and
ret
sahf
mov
lods
leave
rorl
sahf
imul
dec
imul
cwtl
cld
insb
xor
fldt
lock
out
jo
sbb
mov
leave
push
jmp
push
mov
cmp
mov
out
mov
push
int
das
sub
lods
hlt
adc
inc
jle
stos
xchg
pop
in
daa
cmp
mov
clc
neg
add
pop
pop
xchg
mov
js
adc
ss
les
mov
inc
mov
add
sbb
pop
push
arpl
stos
ss
inc
nop
jne
pop
lock
push
jo
or
mov
jmp
jb
dec
adc
into
mov
or
jae
sbb
jb
adc
cli
loop
sbbl
mov
jbe
int
lcall
scas
xlat
mov
cmpsb
inc
arpl
sbb
lea
stos
cmpsl
imul
jnp
scas
cmpsb
int
ja
xor
imul
mov
xchg
push
pop
xor
in
loop
sub
push
sbb
xchg
and
mov
mov
pop
repz
adc
cltd
or
rclb
pop
or
xchg
addr16
pop
gs
pop
push
xor
and
inc
jge
adc
inc
out
insb
inc
in
pusha
sub
inc
xchg
push
adc
mov
les
test
add
xlat
dec
jmp
scas
test
stos
lret
lcall
imul
cmc
loop
mov
and
movsl
push
push
stos
ret
pop
xchg
insl
mov
and
bound
outsb
push
imul
sub
pop
dec
mov
sbb
add
mov
adc
or
jle
scas
outsb
adc
cmp
leave
mov
mov
loopne
add
daa
lret
cld
push
iret
flds
dec
bound
clc
or
and
ret
xchg
cwtl
movsb
fisttpll
mov
add
fmull
fidivl
outsl
cmp
rcl
xchg
and
das
adc
mov
shlb
mov
ret
sbb
imul
dec
xchg
jnp
cwtl
jnp
xlat
gs
in
push
addr16
in
test
mov
jno
and
xchg
xchg
sub
mov
add
pusha
hlt
add
or
xchg
sub
cli
int3
repz
or
cmp
lock
test
es
pextrw
and
adc
fdivr
push
push
or
mov
pop
movsl
add
cltd
jle
cmp
movsl
clc
add
mov
jno
xchg
mov
pop
cmpsl
stos
outsl
jge
mov
push
fsubl
ficoml
dec
sbb
sbb
add
shl
sbb
or
mov
and
cli
mov
mov
and
lds
outsl
icebp
mov
sbb
in
fs
icebp
mov
cmpsl
mov
outsb
mov
pushf
push
mov
repz
and
pusha
arpl
test
sar
jnp
push
lds
xor
lahf
fwait
mov
add
scas
sub
aas
nop
jp
sysexit
and
fwait
sahf
xchg
mov
out
lret
jns
std
xlat
imul
jo
repz
mov
xor
out
jns
xlat
push
aad
mov
hlt
cmp
pop
cmpsl
mov
call
movsb
xor
ljmp
popf
dec
imul
cs
rcll
sbb
js
int
fmuls
lahf
inc
cmp
ja
push
mov
les
cltd
out
lock
cmp
mov
inc
adc
unpcklps
test
jp
int
dec
inc
icebp
out
pop
fwait
xchg
pop
fistpl
xor
lret
cmp
fucomi
jle
fldl
fsubs
bound
call
sbb
fwait
fwait
popa
inc
fcoms
pop
cmc
mov
cli
repnz
mov
pop
sub
adc
imull
mov
test
sub
or
into
dec
repnz
lods
cmp
icebp
xchg
jne
mov
popf
clc
leave
out
mov
dec
aam
mov
sbb
mov
in
push
add
xchg
rcll
cwtl
or
lcall
xchg
dec
pop
lods
push
xor
popa
pushf
mov
dec
fsub
insb
mov
sarl
sbb
adc
sub
push
aad
mov
push
into
out
lock
pop
mov
mov
sbb
mov
jmp
icebp
jmp
xor
push
pop
pushf
inc
fwait
js
pop
add
and
adc
add
lea
ljmp
lret
sub
sbb
xor
outsb
inc
test
js
mov
int
fucomi
shrb
les
cmp
xor
fisubrs
or
mov
adcb
cmp
pop
dec
or
pushf
mov
jno
jnp
std
out
sub
mov
mov
cld
jne
push
test
or
mov
lock
sahf
xor
nop
mov
push
dec
pop
je
mov
pop
sti
xchg
pop
insb
cmp
lods
add
rorl
insl
loop
or
sub
movsb
das
inc
in
cmpsl
scas
sbb
andl
xor
sbb
mov
test
mov
inc
xor
adc
loop
mov
and
mov
pop
sahf
jns
pop
clc
push
jno
rcll
mov
cmpsl
popa
rcr
mov
mov
sahf
sub
jl
push
dec
or
xor
into
pop
inc
inc
movsb
arpl
call
inc
icebp
sbb
jnp
jl
pop
cmp
push
out
pusha
imul
xchg
xchg
jl
mov
in
jo
jecxz
sbb
mov
ds
rcl
jb
mov
je
jmp
std
xchg
sub
lret
icebp
add
and
push
or
leave
fbstp
jecxz
pop
pop
or
dec
imul
les
jns
mov
loop
dec
jne
insl
add
roll
mov
rorb
int
subl
inc
mov
pop
insb
push
and
shrb
outsb
lods
inc
pop
push
xor
adc
jnp
inc
xchg
pop
xor
in
mov
push
mov
and
jg
pop
cmp
xchg
mov
jo
loope
jl
arpl
or
push
fmul
movb
push
mov
cwtl
lea
fldcw
jecxz
sbb
pushf
bound
jno
lea
ss
fldcw
ret
lret
xchg
mov
mov
retw
ret
lea
loop
dec
pusha
and
mov
mov
and
mov
roll
mov
xchg
ret
inc
push
sbb
mov
sub
into
inc
sub
or
jo
mov
mov
int
ja
jb
test
mov
push
push
cli
ret
push
mov
imul
das
dec
in
mov
xchg
pop
mov
jnp
mov
pop
insb
jp
push
insb
mov
insl
mov
in
sub
cmp
sbb
push
sub
mov
sub
inc
sbb
sti
imul
fldt
insl
sbb
cs
pop
shlb
push
insl
mov
fcomps
xchg
and
adc
mov
sbb
fwait
movsb
int
push
xchg
ss
push
imul
roll
sub
xchg
pop
mov
out
roll
stos
lcall
mov
dec
fwait
jb
rorl
pop
shl
outsb
mov
mov
int
mov
push
dec
xchg
ss
push
imul
ss
pop
in
inc
shlb
push
insl
mov
fisubrl
movsl
dec
add
pusha
adc
lods
rolb
fstps
insl
dec
mov
mov
in
into
insb
repz
fisubl
mov
xchg
ss
mov
push
imul
xor
mov
fdivs
sti
movsl
dec
adc
pusha
sub
roll
sbb
push
push
ficompl
fmuls
insl
mov
xchg
ss
push
push
fidivl
sti
jbe
repz
and
inc
sbb
pop
sub
in
inc
sbb
xor
mov
insl
mov
shl
imul
aad
sub
inc
sbb
fcompl
insl
idivl
leave
jmp
push
push
inc
jg
pop
in
aas
pop
jle
or
bound
mov
mov
push
fcoms
sahf
lret
loope
xchg
loope
sbb
or
movsl
or
les
cwtl
mov
adc
sub
cmp
add
rcrl
dec
xchg
sbb
fsts
popa
lahf
dec
adc
cmp
aaa
cmp
mov
push
fisttpll
jnp
jno
shrl
in
adc
in
scas
icebp
pop
ss
fistps
lds
or
in
lret
outsl
jecxz
or
imul
les
push
pop
mov
test
jns
push
stos
sub
xrelease
stos
add
sbb
and
or
sub
lods
imul
sbb
cmp
add
sub
outsl
jecxz
xchg
sahf
dec
mov
ret
in
dec
push
push
outsl
mov
call
addr16
jp
in
fwait
pop
mov
pmulhw
pop
std
loope
filds
fildll
andb
xor
jecxz
and
pop
mov
fimuls
mov
adc
aaa
xorb
les
push
xchg
mov
dec
push
add
das
in
das
mov
sbb
mov
outsl
lods
cmp
lret
or
sub
push
cld
clc
sub
loopne
dec
or
shlb
mov
adc
lods
loop
push
aam
sbb
mov
mov
scas
inc
out
pop
outsb
cmp
stos
mov
fucom
inc
lods
add
lahf
add
cmpsb
xchg
jle
mov
adc
addl
or
sub
scas
cmpsl
das
push
jnp
cwtl
stc
inc
stc
loop
mov
pop
add
dec
addr16
jne
rcrb
pop
push
call
aam
mov
lea
cwtl
inc
mov
mov
mov
push
mov
lods
int
outsb
xchg
fwait
adc
jns
sbb
inc
sbb
call
push
mov
je
pop
lea
es
xor
fistpl
xchg
mov
cmpl
sahf
or
pop
out
jle
nop
cs
sbb
lcall
mov
dec
shrl
sub
rorl
mov
fisttpl
or
fsubp
cmp
mov
lcall
es
sar
push
lcall
inc
imul
jno
jbe
jecxz
icebp
adc
std
xchg
mov
nop
cmp
xor
in
pop
test
mov
je
jl
add
iret
popf
loopne
xor
test
push
out
jmp
popf
or
xor
jb
cld
inc
data16
pop
into
pop
jecxz
dec
sti
or
out
sahf
sahf
outsb
push
fcmovb
push
inc
jmp
mov
pop
test
xor
enter
mov
dec
xchg
pop
nop
loope
out
sub
pop
adc
jecxz
dec
jp
fcomip
sub
adc
gs
push
mov
mov
dec
lcall
cmpl
mov
sbb
push
sbb
lea
xor
mov
into
pop
lods
pop
inc
movsb
addr16
lods
adc
mov
cld
sub
adc
imul
dec
and
xor
jmp
lret
and
inc
stos
xor
push
adc
push
sub
inc
jb
aaa
mov
and
sarb
clc
jbe
or
lret
sub
gs
mul
iret
lahf
or
push
mov
in
sahf
mov
sar
jnp
adc
pop
pop
rcl
cmp
and
mov
popf
push
sbb
push
cs
arpl
lcall
loop
mov
repz
xchg
iretw
out
insb
mov
sbb
adcb
ja
pop
xorps
pop
bound
aas
daa
movsb
pushf
aaa
adc
movsl
imul
inc
adc
add
xor
adc
sarb
xor
sbbb
test
or
xchg
adc
mov
hlt
sbb
mov
andl
push
cltd
js
dec
icebp
pop
cmpsb
cmpsb
lahf
xchg
xchg
test
inc
xchg
bound
push
mov
js
aaa
jecxz
xor
lahf
stos
inc
lods
rcrb
pop
fs
cmc
les
rorb
jmp
testb
stc
pusha
pop
incb
aam
push
fidivrs
imul
leave
rcr
daa
loop
xor
jb
xchg
test
xor
mov
jnp
xor
ror
mov
sti
mulb
lcall
pop
push
pop
pop
pop
les
mov
add
inc
sub
inc
add
mov
pop
pop
cmp
cmp
scas
les
jmp
aam
jmp
lahf
xor
shlb
pusha
pop
lods
xor
adc
push
xchg
jecxz
mov
xchg
out
in
std
mov
call
out
stos
or
das
mov
pop
in
adc
vpsllq
jmp
insb
and
loopne
movsl
das
xor
ja
push
cmpb
sbb
ds
jmp
mov
xchg
mov
push
jmp
inc
push
hlt
mov
xchg
repnz
cmpsl
dec
pushf
stc
jmp
and
sbb
mov
ljmp
jnp
popf
fisubrl
mov
addr16
js
aas
cmp
inc
iret
aad
pop
push
insb
pop
push
shll
shrl
jo
daa
gs
jns
pop
xorl
out
ss
inc
mov
les
cs
jno
xchg
or
das
xor
pop
push
and
jbe
cmpsl
das
adc
je
inc
imul
xchg
in
xor
jo
inc
sbb
xor
xchg
mov
repnz
out
mov
imul
neg
cmp
lahf
fldenv
addr16
mov
mov
ficoms
jno
inc
loope
rcrb
and
lret
repnz
mov
and
sub
std
jno
jne
inc
add
lea
and
movsb
sbb
cwtl
or
inc
mov
xchg
pop
adc
or
sub
mov
das
cli
pop
add
lock
fnstsw
sbb
and
dec
lret
out
stos
iret
dec
inc
insb
in
ljmp
push
jle
push
inc
divb
sub
mov
adcb
or
shrl
sahf
outsl
add
fsubp
xchg
dec
add
test
push
xor
push
jns
icebp
les
inc
leave
pushf
and
jo
cmp
lcall
dec
loopne
pop
fcmovnbe
fwait
imul
pop
dec
mov
outsl
lea
mov
les
inc
cli
or
sbb
and
movsb
clc
mov
leave
sub
push
lods
js
mov
jbe
pop
mov
out
jle
mov
stc
jle
push
pop
and
lcall
mov
mov
mov
addr16
xor
fisubrl
jmp
ds
push
mov
call
fdivl
cmc
das
and
stos
sub
mov
fs
dec
adc
shr
inc
cmpsb
repnz
in
cmp
sbb
adc
dec
arpl
iret
jns
ret
jnp
mov
mov
lahf
add
sbb
and
cmpb
je
rcll
mov
negl
mov
adc
push
inc
jo
mov
into
loopne
mov
fistl
mov
inc
nop
cmp
ja
push
out
push
out
mov
stos
gs
and
lret
add
repnz
inc
push
mov
in
adc
mov
rcll
fildll
aad
js
aam
jbe
pop
xchg
mov
pop
pop
mov
shlb
cmp
lcall
mov
cmp
dec
test
adc
add
js
mov
std
sub
jl
pop
rclb
stc
jb
cs
jg
jecxz
into
or
jl
pop
push
push
mov
mov
sti
jns
mov
mov
into
and
dec
mov
dec
rorl
out
xchg
roll
stos
sbb
adc
js
cmpsb
out
xor
popl
mul
stc
adc
pop
test
hlt
jg
cmpsl
push
jb
sub
mov
cmp
xor
iret
cs
mov
sub
mov
xor
inc
dec
push
int
push
jp
sahf
pop
out
outsl
andnps
push
outsl
mov
mov
imul
scas
jecxz
test
jne
jns
mul
ret
out
fst
jne
repz
insb
pop
flds
in
nop
shlb
insb
fimull
mov
pop
rclb
data16
mov
jnp
cld
movsl
and
insb
ss
cmpsl
mov
xchg
js
pop
fidivrl
mov
xor
jmp
adc
jle
fistpll
sti
or
ret
outsl
jbe
xchg
pop
jle
loopne
or
push
clc
fchs
aaa
push
jle
lock
push
mov
mov
mov
aas
pop
cld
push
sbb
lock
or
insb
mov
daa
leave
mov
mov
jecxz
adc
pop
imul
setg
or
mov
mov
das
pop
aas
xor
or
outsl
imul
xor
jbe
sarl
cmp
fildll
push
andl
and
push
scas
xor
addr16
addr16
int3
loope
ret
and
les
aam
adc
xchg
inc
in
adc
roll
sub
jno
xchg
xchg
add
test
mov
imul
pop
pop
fnstcw
pop
movsl
and
push
inc
xchg
dec
pop
and
out
loopne
mov
mov
jae
xor
dec
mov
aad
fisubrs
int
movsl
fprem1
sbb
or
scas
xor
sub
rcll
xchg
popf
xlat
add
or
iret
add
xor
clc
push
add
cmp
mov
cmp
inc
icebp
and
mov
inc
xor
int3
stc
rclb
xchg
imul
test
aad
cmpsl
jno
rorb
inc
je
mov
repnz
push
dec
mov
aam
orl
add
lds
jno
push
mov
out
push
pop
jmp
ret
dec
push
jbe
xchg
mov
out
into
add
out
in
andl
sub
xchg
fnstcw
ja
inc
shlb
or
dec
jp
add
mov
jg
es
inc
or
xorb
mov
xchg
repz
stos
test
sti
push
addr16
push
xchg
test
and
test
dec
pop
nop
or
sub
and
xchg
xchg
adc
jecxz
addr16
test
jne
sti
mov
jno
xchg
add
dec
dec
push
lcall
dec
daa
sub
inc
lret
sub
filds
adc
inc
mov
push
pop
sub
jl
mov
popa
cwtl
xchg
xor
mov
mov
add
add
lea
xchg
xor
pop
pop
mov
fcoms
jp
pop
mov
enter
imul
xchg
std
es
xchg
mov
loopne
nop
cltd
sub
push
pop
pop
int
inc
test
sub
popa
cmp
sbbl
mov
cpuid
sub
sbb
push
mull
sbb
jno
das
mov
add
sub
or
shl
ja
pusha
mov
add
sbb
fninit
inc
fcompl
cmpsb
lds
mov
enter
test
dec
pop
push
cli
sahf
cmp
jge
cmp
daa
or
scas
sbb
mov
push
stos
xchg
test
and
andl
and
add
pop
orl
daa
fsts
in
push
fidivl
mov
mov
aam
je
sub
xchg
mov
cmc
or
push
fisttps
pop
cmpl
inc
icebp
or
sbb
lods
out
inc
aaa
mov
sbb
daa
push
aaa
mov
jecxz
add
ret
mov
aas
sbbl
loopne
clc
pop
and
adc
and
leave
cmc
stc
mov
jl
pop
mov
lock
lret
scas
cmc
hlt
sbb
xchg
or
push
test
mov
js
pop
movsb
pop
mov
or
jno
ss
pop
in
pop
fidivl
repnz
dec
pop
in
and
imul
dec
xchg
cmp
data16
xor
add
mov
push
jne
divl
jne
mov
jge
sbbl
mov
push
aam
mov
sbb
or
xchg
or
data16
js
sbb
icebp
mov
aaa
sahf
movsl
pop
mov
adc
add
add
pushl
xchg
in
inc
mov
repnz
loopne
addr16
mov
outsb
nop
call
sarb
push
loopne
scas
int
sub
xor
mov
lods
mov
or
movsb
enter
jecxz
fistl
pop
loopne
addr16
mov
push
enter
filds
xor
inc
pop
in
mov
ja
es
in
mov
jp
ja
cmp
insl
cmpsl
notl
stos
sbbl
frstor
xchg
xor
xchg
stos
shlb
jp
stos
es
cli
stc
adc
mov
lods
pop
sbb
dec
push
sbb
je
popf
jnp
sbb
test
push
faddl
cwtl
cmp
mov
pusha
in
xor
lcall
cs
push
movsb
mov
call
jae
ljmp
stos
fcomip
js
push
push
fucomi
popl
shl
repz
out
mov
pop
enter
mov
dec
imul
push
popf
call
xor
test
rcl
dec
js
hlt
and
test
push
mov
mov
and
xchg
and
dec
inc
cmpsb
mov
mov
fyl2xp1
das
push
imul
icebp
data16
lods
mov
push
mov
jno
sti
test
jo
sbb
sbb
cmp
and
mov
mov
stos
cmp
inc
xchg
test
repnz
cmp
jo
sahf
call
iret
jmp
scas
addb
in
and
jmp
adc
mov
fwait
or
mov
xchg
in
loopne
stos
mov
jae
je
mov
bnd
mov
and
in
js
pop
jl
mov
mov
pop
jnp
pop
psubsb
ja
aas
dec
stos
push
lahf
xchg
pop
sbb
mov
mov
jl
dec
mov
aas
mov
inc
push
out
test
dec
dec
ret
rolb
dec
mov
mov
mov
and
out
mov
pusha
jmp
clc
rcr
addb
push
lret
adc
sub
jo
jnp
es
mov
cli
cli
sbb
fwait
les
arpl
adc
or
inc
ds
in
sbb
shl
mov
mov
xor
scas
ret
mov
sarl
sarb
je
ds
xor
push
out
lds
outsl
aas
mov
xor
dec
ret
jmp
xor
mov
mov
in
sbb
insl
out
xor
sbb
mov
imul
addl
addr16
xchg
push
js
mov
xchg
orl
sahf
sub
ja
mov
jp
pop
xor
js
in
push
mov
sar
stc
pop
xor
push
xchg
popa
fdivp
cmp
sub
arpl
imul
flds
push
aam
das
movsl
inc
or
push
pop
dec
into
cs
movsb
stos
leave
imul
mov
or
out
leave
xchg
pop
pop
xor
ja
mov
push
rcrl
push
int
ds
jecxz
dec
aas
mov
mov
jle
xor
into
aas
out
sahf
sbb
mov
xchg
dec
push
pop
mov
xchg
out
or
cmpsb
jp
outsl
adc
add
fisttpll
shll
mov
xchg
dec
push
push
in
mov
mov
pop
mov
sbb
icebp
pusha
jge
imul
cmp
das
sbb
jmp
std
adc
std
push
pop
mov
inc
aad
fs
jae
add
pop
sbb
xorl
mov
xlat
nop
xchg
push
jno
and
xor
jecxz
sti
cs
data16
sahf
dec
jge
push
divb
inc
out
sbb
movsl
pop
in
inc
test
dec
jmp
imul
movlhps
xchg
mov
fcmovnbe
sbb
mov
jne
push
cmp
std
jmp
adc
push
sbb
enter
mov
xor
mov
andb
stos
mov
jp
and
sub
fsubrs
push
les
cmpsl
cmc
inc
xor
jmp
add
stos
xor
pop
lods
mov
test
imul
popf
jp
lahf
lds
ja
xchg
aaa
sbb
sub
mov
mov
xor
xchg
dec
mov
jmp
inc
std
inc
outsl
cli
cs
jno
cmc
call
shll
ret
ja
cmp
mov
jp
or
xlat
popa
aam
out
shl
sahf
mov
mov
aaa
mov
pop
pop
imulb
insl
mov
movsl
jae
jle
push
mov
mov
mov
out
andb
or
push
and
jne
sbb
or
mov
xchg
mov
cmc
inc
sbb
push
js
sbb
mov
cmc
sub
mov
cmpsb
pop
push
xor
push
stos
xchg
lahf
stos
setp
sub
cltd
fildll
cmp
push
fdivrl
xchg
jmp
ja
mov
adc
fldenv
pop
cmp
xchg
push
cmp
pusha
fld
adc
mov
pop
jno
or
push
jge
lods
fidivs
adcl
push
jns
and
pop
dec
outsl
mov
or
push
cmp
add
filds
in
ficomps
push
pop
push
or
jg
cmp
push
jmp
cltd
std
je
aas
jge
cmp
sbb
repz
ja
hlt
sbb
mov
loopne
cmp
rol
adc
push
jne
cwtl
cmp
push
xchg
test
sti
mov
mov
mov
cmp
je
shrb
xor
clc
dec
add
jne
insl
mov
mov
fcomps
xor
pop
or
jle
dec
lods
lods
pop
pop
or
sbb
cmp
sbb
shlb
imul
dec
or
je
lods
adc
dec
cmpsl
repz
xor
jns
jmp
lea
cmc
lock
push
or
in
jle
push
clc
negb
lods
ret
imull
push
jne
lock
arpl
jl
faddp
lock
out
add
xor
test
jp
subl
and
add
jnp
add
test
add
aaa
icebp
push
xchg
cmpsb
cmp
mov
imul
std
push
mov
movsb
dec
jl
mov
mov
std
inc
sti
loope
sub
out
shrl
mov
clc
ja
push
dec
pop
pop
psubd
cmpsl
push
repz
push
repnz
xchg
loop
imul
jg
popf
sbb
pop
adc
fisttpl
adc
stc
sub
dec
pop
mov
negl
dec
push
out
mov
jb
ret
mov
and
loopne
cmp
pop
lcall
xlat
clc
inc
mov
push
dec
dec
xlat
out
inc
or
jo
xchg
add
rcrl
add
inc
and
lea
lock
cmp
sbb
ret
mov
fwait
nop
stc
fnsave
xchg
repz
xor
jp
stos
sub
call
shrl
lahf
js
iret
mov
ds
jmp
jg
repz
push
jae
xor
fadd
dec
xlat
cli
fcom
inc
mov
negb
sbb
aas
icebp
filds
pop
push
jno
ds
xchg
sub
xor
test
adc
push
inc
inc
pop
out
sbb
and
pop
xchg
or
xchg
push
sub
mov
nop
push
xor
bnd
xchg
push
sub
sub
and
and
idivb
cltd
mov
cli
std
mov
into
jecxz
cltd
xor
mov
xor
iret
int
arpl
cmpsl
mov
sub
ret
cmpsl
sub
mov
out
lcall
ret
inc
xchg
jmp
push
xor
lcall
fwait
in
or
jnp
test
inc
add
xchg
jne
into
dec
movsb
dec
sti
call
adc
push
pop
clc
jmp
mov
call
popa
push
call
shl
cmp
cmp
or
fsubrl
xchg
jge
inc
mov
cwtl
sub
sbb
mov
loop
xchg
fadd
test
jae
rcll
jg
xchg
lods
lock
xor
out
lahf
ss
lahf
hlt
or
bound
dec
popf
bound
push
in
ret
sarb
movsl
or
mov
mov
aaa
into
scas
and
pop
lcall
imul
loopne
xor
mov
andb
sahf
pop
dec
jecxz
popa
dec
pop
mov
mov
jecxz
and
cmpsb
cmp
jno
test
sbb
fists
fists
inc
and
add
rcrl
sub
sub
cmp
icebp
and
jle
es
test
pop
cltd
cmpsl
xchg
idiv
dec
push
mov
pop
leave
test
jo
dec
or
cs
sbb
testb
rcll
inc
rcl
fwait
xor
andl
cmc
and
mov
or
testb
shlb
loop
sbb
mov
mov
stc
push
loop
outsb
scas
les
mov
xchg
rclb
stos
sub
lock
sub
sbbl
sub
lahf
add
popf
ja
popa
cmp
sbb
or
pop
fcomps
mov
ss
insb
rcrl
enter
jno
shl
dec
iret
mov
inc
mov
repnz
push
push
dec
ficoml
lock
divl
xorl
jle
nop
int3
jo
out
mov
outsb
cs
sahf
pop
rorl
rcrl
leave
or
movsb
icebp
sbb
loopne
pop
pop
movsl
das
push
push
shrb
jecxz
push
sbb
cmp
es
dec
cmp
xchg
inc
das
loopne
sub
sub
sub
fiaddl
add
push
dec
pop
xchg
scas
xor
add
lods
mov
pop
sub
fisubrl
lods
mov
xchg
lcall
fnstsw
lcall
test
push
mov
mov
mov
mov
jp
xor
std
mov
fistpll
xchg
out
cmp
add
cmc
jae
jb
ljmp
mov
mov
aaa
out
pusha
dec
cmp
out
movsl
sahf
movsb
rolb
and
cli
mov
test
fmul
mov
idivl
loopne
js
fwait
adc
mov
xor
jecxz
add
or
xor
insb
adc
fst
scas
clc
mov
cmp
not
inc
fbstp
mov
fwait
and
push
mov
xor
add
ja
mov
jle
aaa
jnp
testl
cli
push
adc
outsl
push
jl
mov
repz
out
jbe
outsl
lods
xor
pop
mov
jecxz,pt
jg
adc
or
aas
jbe
aas
out
shll
mov
cmp
inc
xchg
adc
jmp
mov
and
lds
fisubrs
xchg
cmpsb
aas
inc
cld
pop
mov
cmp
push
sti
dec
xchg
mov
imul
mov
sbbl
popf
dec
std
jmp
mov
lods
pusha
jg
push
or
inc
or
shlb
aad
cmp
or
and
sub
cmp
mov
fwait
or
mov
or
ss
pop
mov
mov
adc
add
leave
or
xor
mov
jae
or
ret
inc
jl
push
push
inc
ret
test
std
into
test
adc
daa
dec
or
test
xorb
int3
pop
mov
rcrb
rcr
into
adc
ds
pop
jo
orb
cmp
stc
add
cwtl
sub
sbb
fiaddl
or
jae
pushf
and
add
cmp
cmpsl
or
pop
shl
fisubrs
loopne
add
ja
cmp
mov
fldl
mov
jo
and
sbb
loopne
add
adc
adc
js
adc
cwtl
loopne,pn
add
adc
or
xorb
clc
inc
add
lock
add
loopne
add
sbb
loopne
add
or
das
adc
jb
push
add
or
subb
adc
and
xlat
mov
rcrl
inc
in
and
pop
sub
mov
out
jge
sti
fisubs
idivl
or
lock
cmpsl
mov
mov
mov
cltd
shll
ljmp
mov
sti
outsl
inc
imul
cmpsl
push
loop
iret
pop
sbb
mov
vmwrite
jp
dec
push
jecxz
popa
cmp
fnstcw
sub
or
stc
or
lock
lcall
sbb
aas
dec
xchg
int
jg
inc
fidivs
dec
sti
jle
mov
in
pop
cli
int
pop
adc
shlb
and
sub
fldt
sti
xor
add
aaa
lea
inc
dec
jecxz
stc
xchg
in
pop
sbbb
xchg
pop
sar
mov
cmp
pop
xchg
add
movb
and
cwtl
add
and
pop
fs
inc
or
fadd
sbb
aaa
push
subl
inc
xchg
shll
jns
addr16
cmp
push
mov
into
idivl
sub
and
fsubl
dec
ret
pop
roll
pop
pop
fs
push
cmp
sbb
dec
inc
xchg
movsb
loopne
es
xor
cmp
push
cwtl
icebp
cmp
pop
in
rcrl
lahf
mov
rcrl
int
lcall
addr16
inc
fwait
inc
push
daa
inc
fdivl
in
rorb
dec
inc
dec
mov
jecxz
push
inc
dec
or
aaa
cmp
dec
fidivrs
ja
pop
mov
xchg
cmpsl
int3
daa
or
shl
xchg
sub
mov
movsl
xlat
movsl
mov
mov
cltd
inc
inc
cs
sbb
test
idiv
sub
mov
pop
add
lahf
add
mov
pop
inc
je
orb
sahf
andb
sub
cmpb
leave
loope
add
lock
adc
lds
mov
rcrb
jno
and
das
add
fstps
or
mov
loope
pop
sarb
fists
lock
cmp
mov
cmp
mov
aad
inc
xchg
subb
js
shlb
jo
sub
xor
push
pcmpgtw
mov
aas
ja
sub
inc
cmpsb
pushf
fsubrl
movsl
mov
add
xor
pushf
cltd
sub
inc
fsubrp
aad
sub
cmpsl
cmpb
mov
adc
sbb
inc
fsts
jge
pop
add
insb
and
data16
xor
adc
mov
lahf
jb
push
cltd
pop
nop
sub
in
or
dec
sahf
jecxz
add
std
and
out
mov
sbb
cmp
and
pop
js
scas
test
mov
pop
rorb
push
xchg
xchg
inc
xchg
adc
fwait
rcl
test
mov
push
push
adc
sbb
sahf
stos
icebp
lea
fbstp
popa
shl
lock
cmp
add
call
movhps
outsl
das
pop
rcr
push
mov
arpl
js
leave
data16
and
push
push
mov
das
nop
pushf
jmp
mov
dec
aas
sub
outsb
pop
or
inc
inc
repz
xlat
in
dec
pop
adc
test
dec
lea
or
into
popa
movsl
stos
add
sub
push
mov
pop
das
jbe
jns
out
fistl
cmpsl
mov
cltd
orb
js
fistl
dec
repnz
outsb
mov
jbe
lock
lret
shrl
mov
scas
sub
addr16
add
sub
adc
mov
arpl
cmpb
pop
fsubs
shrd
rep
mov
or
repnz
xchg
push
pop
outsb
roll
pop
and
dec
enter
sti
pop
push
mov
cmp
repnz
sti
loope
or
jns
or
pop
jbe
cli
jmp
sub
shlb
jns
adc
das
jmp
out
pushw
lock
sbb
out
test
dec
inc
icebp
or
inc
sub
add
mov
in
sub
cmp
repnz
test
inc
xor
sub
jb
pop
stos
pop
sub
mov
mov
fnstcw
dec
pop
inc
xor
cmpsl
cmp
xor
jge
and
push
es
or
pop
cmpsb
jmp
pop
jae
and
cltd
cmp
sti
dec
int3
ret
movsl
sbbb
imull
test
pop
sub
pop
lods
pop
jb
int3
mov
outsb
or
add
mov
xchg
fsts
popf
mov
dec
push
stos
add
addr16
cmp
push
out
pop
enter
dec
pop
inc
hlt
push
jg
mov
mov
jno
mov
cltd
je
add
and
sub
pop
sbb
lock
lods
inc
mov
add
daa
dec
mov
and
cmpsl
adc
movsl
mov
movq
test
daa
xchg
stc
mov
inc
mov
cmp
push
icebp
dec
adcl
ss
inc
mov
or
movsb
fidivl
jne
mov
arpl
mov
inc
xchg
push
pop
sbb
shrl
push
sbb
int3
daa
jo
pop
stc
sbb
loopne
adc
sti
cmp
dec
mov
xor
add
or
push
sub
xchg
push
movsl
mov
jp
pop
xchg
ja
lea
repnz
cwtl
push
or
sub
mov
enter
and
xor
cmpsb
xchg
dec
testl
pushf
push
xchg
outsl
pop
loope
stc
into
cs
mov
add
fucomi
push
lock
je
mov
xchg
or
or
pop
mov
jae
push
sbb
mov
push
jo
notb
sbb
scas
mov
inc
mov
aaa
adc
insl
test
cs
roll
push
stc
emms
in
mov
popf
push
jg
push
inc
push
jne
shrl
popa
insb
dec
test
push
pop
inc
jne
adc
cwtl
xor
mov
and
cmpb
mov
jb
sub
mov
andb
xchg
sub
mov
push
and
sbb
cmc
sub
mov
cmp
inc
jle
dec
jb
push
mov
mov
lret
xchg
mov
rorb
pop
push
cld
lock
les
jne
jnp
cwtl
add
inc
sub
jne
push
addr16
ljmp
test
lock
sti
sbb
mov
insl
outsb
shrl
test
std
imul
test
push
movsl
mov
xor
jl
sub
cmpsb
fistl
inc
imul
push
push
mov
add
xor
mov
pushf
arpl
push
and
mov
add
lahf
out
mov
imul
in
dec
pop
mov
push
dec
and
popa
and
mov
hlt
mov
jp
movsb
push
roll
aam
out
loope
movsb
jno
inc
mov
push
lahf
insl
add
fldl
iret
pop
repz
rsm
push
popa
mov
cs
mov
pop
popf
pop
test
pop
xchg
cmc
icebp
push
das
cmc
fsubs
push
loopne
jmp
and
mov
push
repz
aas
in
adc
and
lret
bnd
and
xor
pop
sub
xor
mov
and
xchg
sbb
push
jle
sub
adc
adc
mov
adc
out
jecxz
sahf
sbb
sub
jnp
jg
jmpw
mov
dec
ret
jo
div
mov
pop
cmp
xor
sub
cmp
bound
aas
mov
sub
cmp
dec
cmp
cmp
cs
push
push
dec
leave
and
push
aad
cmp
adc
xchg
in
sbb
sbb
adc
dec
jne
sub
sub
mov
mov
adc
push
adc
test
pop
push
test
in
data16
pop
mov
cltd
in
test
jae
negl
cli
add
or
cmp
xor
lock
imul
mov
fisttps
and
pop
dec
pop
in
fwait
mov
push
popf
adc
into
jg
stos
mov
loop
xor
in
test
pop
mov
arpl
mov
sbb
fwait
mov
fiaddl
or
std
sbb
mov
jbe
dec
mov
adc
leave
adc
sahf
jmp
arpl
mov
incb
or
sahf
add
sbb
pushf
rcll
test
jne
test
roll
xor
mov
xchg
mov
sbb
jl
or
icebp
lock
loopne
sub
inc
aas
add
mov
or
or
mov
adc
push
out
sti
push
icebp
push
incb
pop
movsb
jb
sub
xor
jl
xchg
filds
test
jns
cmp
dec
mul
stos
aad
pop
push
fs
dec
fcomp
mov
mov
and
lds
pop
inc
lea
add
jle
add
mov
inc
xor
and
adc
addl
dec
sbbl
rcrb
add
lds
and
mov
into
mov
sbb
xchg
out
xchg
out
cmc
inc
ljmp
cmpsl
fisttpl
test
and
imul
cmpsl
and
scas
cmp
in
fildl
adc
mov
jae
push
cmp
js
or
mov
pop
movsb
insb
add
fwait
icebp
xchg
insl
addb
push
aaa
and
push
aad
pop
shll
push
mov
xchg
jbe
sub
mov
mov
loop
add
cli
in
adc
fs
fnstsw
inc
ds
jle
jp
cmp
inc
in
and
movsl
jae
int
addl
out
jmp
in
shll
and
jns
fwait
or
pusha
arpl
in
xchg
xor
in
push
and
lods
adc
sbb
repnz
pop
add
xor
cmpsb
fnsave
gs
mov
inc
dec
cmp
call
adc
xchg
std
xor
sbb
xorb
mov
dec
fdivrl
adc
ljmp
mov
popf
jb
cmpsb
subl
hlt
hlt
add
loopne
out
dec
movsl
xchg
xlat
lret
inc
into
pusha
push
fwait
rdpmc
xor
and
lea
fs
cmpsb
ret
jg
and
pop
pop
divl
ror
js
push
scas
out
pop
bound
aas
push
out
sub
xchg
cmpsb
ret
shrb
jle
dec
sti
lea
pop
out
cltd
scas
jae
pop
out
inc
jb,pn
sti
or
mov
xchg
in
pusha
outsb
and
xchg
stc
ror
ja
dec
jg
pusha
cwtl
push
js
roll
arpl
mov
pop
repz
pop
mov
in
pop
fildl
pop
cmp
jo
pop
inc
loop
fisttps
nop
or
lock
call
inc
into
jae
je
jns
movsb
enter
mov
cmp
xor
fwait
push
inc
mov
jns
iret
jae
rorl
and
jns
mov
push
mov
je
mov
cmp
das
je
xchg
add
inc
mov
popf
sub
add
pop
aam
pushf
sub
shll
jecxz
pop
pushf
sbbl
lods
shlb
subb
insl
xor
pushl
jae
inc
ja
loope
outsl
sbb
jmp
ds
mov
xor
fdivs
inc
sbb
push
mov
inc
push
inc
add
and
lock
xchg
adcb
mov
cmpsl
mov
cltd
cmp
add
dec
dec
xlat
mov
jne
push
xchg
xchg
addr16
sbb
sub
sub
sub
sub
dec
mov
sub
xlat
sbb
out
scas
fildll
mov
out
sub
inc
add
ljmp
nop
aas
xchg
ds
pop
jmp
adc
cwtl
icebp
pop
ret
das
fiaddl
cs
fnstenv
clc
or
and
xor
mov
xor
into
mov
aad
cmp
cwtl
sti
mov
adc
jl
mov
repz
add
mov
test
imul
sub
inc
xchg
inc
stc
movaps
outsb
outsl
mov
dec
icebp
or
scas
out
jb
or
fisubrl
cmp
inc
xor
pop
mov
std
or
or
stos
dec
iret
jle
in
je
cmp
in
fmull
icebp
add
cmc
jns
js
stc
leave
out
mov
jae
sarb
mov
test
enter
ljmp
sahf
iret
adcl
loopne
jno
push
mov
rorb
call
inc
sub
pushf
jno
inc
adc
std
pusha
mov
and
hlt
jbe
jg
mov
das
cld
jnp
pop
sub
and
dec
cli
sbb
sti
inc
sbb
or
mov
and
or
cld
fidivrs
dec
cli
loop
cli
test
out
jno
jmp
pop
fwait
ljmp
cmp
mov
stos
je
adc
xchg
icebp
ljmp
shll
insb
jg
pop
cld
mov
lds
cltd
addr16
jle
mov
cmp
xchg
jb
xchg
add
aad
data16
push
cmpl
addr16
pop
js
xchg
stc
iret
xchg
shl
pop
ret
cli
ret
sbb
pop
mov
hlt
js
sub
fimuls
in
xchg
jbe
fwait
mov
cmp
pop
insl
mov
pop
insb
cmpb
mov
into
movsb
sub
cwtl
mov
scas
sbbb
fldenv
in
out
push
lahf
aaa
inc
test
push
cli
int
or
lods
mov
xchg
dec
cmp
dec
cmp
rclb
sbb
mov
mov
sbb
xchg
push
inc
pop
andl
mov
out
fsubl
iret
adc
int3
mov
cmpsb
mov
dec
jecxz
jne
adc
inc
xchg
jae
jp
aam
test
inc
mov
mov
fcomps
in
cld
mov
mov
outsb
or
das
daa
mov
inc
in
movsb
mov
pop
imul
ljmp
adc
and
lcall
adc
cmc
xorl
rcl
stos
imul
rclb
cmp
sub
dec
cli
jg
pop
mov
sarb
sti
pop
fs
outsl
xchg
in
adc
stc
sbb
mov
lahf
shr
cmpb
movsb
cmpsb
and
sbb
pop
xor
loope
xor
sarl
into
dec
xor
add
aaa
and
ljmp
xlat
cmp
pop
jl
mov
mov
bound
mov
mov
mov
clc
pop
inc
notl
gs
fs
cs
xor
frstor
les
mov
and
dec
mov
cltd
mov
pushf
rcll
adc
xor
loop
and
in
sub
lods
mov
test
mov
inc
mov
nop
xor
ret
xor
push
xlat
push
mov
jns
das
xchg
sub
sub
and
out
dec
shr
cmp
rcr
lret
dec
dec
or
xor
daa
out
add
popf
mov
sub
jne
leave
cmpl
xlat
shlb
xor
xor
in
xchg
ss
stc
xor
sbb
gs
stos
es
fsubl
ficomps
movsl
cmp
mov
addr16
dec
fwait
sahf
aaa
dec
sub
js
int
dec
mov
lret
xlat
in
cmp
lods
jecxz
pushf
loopne
dec
push
push
jmp
sub
sub
jb
bnd
xchg
lahf
inc
popf
inc
gs
xchg
push
arpl
outsl
cltd
fdivl
or
jo
cmp
aam
jl
cmp
push
add
idiv
stc
lcall
shrl
popf
jns,pn
adcl
out
loop
fsubl
push
jmp
inc
mov
outsb
scas
mulb
xchg
das
adc
rol
ja
cmp
dec
je
mov
pop
rorb
inc
iret
aas
xchg
jle
add
jo
jbe
xchg
or
dec
ret
cmp
pop
xchg
lahf
clc
sbb
inc
pop
repnz
sub
je
and
mov
mov
jns
adc
sub
inc
iret
rorb
mov
ljmp
std
lods
es
sub
xor
jnp
hlt
adc
mov
add
insl
in
pop
jb
inc
push
pop
mov
lods
icebp
fildll
mov
inc
lcall
sub
inc
mov
sub
adcb
cwtl
mov
xor
leave
pop
mov
mov
cmpsl
jmp
mov
dec
ljmp
or
sbb
aas
fdivr
mov
sbb
pop
stos
scas
xor
int3
nop
rcrl
jmp
popf
dec
daa
dec
aam
movsl
mov
fwait
dec
aaa
mov
push
loope
imul
xor
push
fdivl
adc
push
test
lcall
repnz
cld
nop
pop
je
mov
mull
cmp
jp
ljmp
ja
dec
fistl
mov
outsl
aaa
jmp
mov
mov
add
and
sbb
xchg
inc
in
int
cmp
jle
mov
and
mov
fdiv
rcll
sbb
cmpsb
lods
sub
lahf
insl
jmp
push
sahf
movsl
sub
or
push
fildll
cmp
adc
scas
pop
int
jmp
sub
out
push
out
outsb
jmp
or
ret
mov
fmull
jns
cmp
lahf
scas
rorb
dec
jmp
popf
and
in
idivb
movsb
pop
xchg
std
push
stc
dec
icebp
out
add
in
pop
mov
fisubs
jno
push
icebp
pop
fsubl
sub
call
jle
push
xchg
jp
scas
push
push
cmp
std
or
xor
in
pop
pop
xor
shrb
lock
arpl
jmp
jnp
add
xor
inc
enter
jae
adc
jno
out
mov
inc
xchg
lahf
xchg
cmpsl
ficompl
dec
xlat
pop
loopne
jbe
pop
je
push
outsb
mov
pop
xchg
scas
mov
enter
xchg
pop
repz
cmp
ret
imul
sub
out
adc
xlat
leave
cmp
ds
push
mov
push
pushf
into
adc
mov
dec
adc
push
stos
int
das
or
adcb
les
loop
ja
stos
sahf
cli
cmpsl
mov
imull
push
je
sbb
out
test
push
sub
lahf
shll
out
imul
sbb
mov
ja
inc
xchg
sub
hlt
lods
out
aam
inc
shlb
arpl
in
jae
mov
sub
sub
inc
out
and
jnp
jb
inc
enter
out
mov
and
ds
pop
icebp
inc
rcrl
push
test
arpl
xchg
or
mov
or
outsl
lcall
add
lea
cmpsl
fdivs
ret
mov
aad
aam
rorl
or
es
adc
xor
movsb
sbb
in
xchg
xor
icebp
add
push
out
sub
sbb
loop
fdivl
push
mov
pop
out
mov
jno
cmp
insb
or
sub
sar
mov
xor
xor
or
or
pop
pop
push
pop
sub
loopne
adc
stc
mov
add
mov
icebp
push
xchg
pop
fwait
dec
mov
mov
mov
pop
push
loope
addr16
jns
xor
popa
pop
or
adc
add
xor
dec
out
adc
outsl
adc
daa
imul
cmp
in
xchg
loop
aas
jmp
mov
push
lret
popf
inc
dec
scas
stos
insb
push
test
popa
mov
sub
mov
push
pop
movsl
adc
xor
test
xchg
sbb
mov
sbb
and
xchg
and
lock
shl
push
pop
xchg
fldl
out
outsb
outsl
jle
in
sbb
add
xor
dec
pop
sbb
andl
sbb
jb
rcll
lock
adc
inc
sbb
shr
repnz
into
les
dec
lahf
out
xchg
push
xor
nop
push
pop
int3
dec
inc
xor
or
inc
pop
icebp
inc
xorb
mov
cli
fmull
sub
lret
jecxz
add
repnz
sahf
inc
cs
xor
leave
pop
xchg
out
ds
js
add
pop
bound
sbb
xor
adc
mov
jl
leave
ja
push
cmp
cmp
mov
adc
xchg
neg
sbb
ljmp
sub
jne
enter
sbb
lea
add
push
dec
and
es
dec
and
test
fmull
enter
clc
test
inc
xchg
xchg
pop
call
pop
push
push
shlb
cld
mov
cmp
pop
das
cwtl
mov
cmpsl
mov
ret
xlat
lds
inc
cmp
pop
mov
fidivrl
arpl
outsb
and
lods
mov
lret
testb
push
jl
inc
fsubrs
jno
test
sub
sahf
and
dec
js
lcall
stc
es
and
out
or
mov
or
dec
les
push
popf
xor
adc
mov
lcall
mov
sarb
add
lds
fs
push
pop
and
mov
adcl
sbb
out
arpl
ja
xchg
cmc
pop
jle
dec
lret
mov
push
mov
jl
mov
test
sub
out
push
push
test
in
or
ret
xor
xchg
test
in
pop
pop
hlt
mov
icebp
in
leave
add
add
lods
out
inc
or
pop
pop
pop
add
mov
sti
cwtl
outsb
in
inc
add
xor
fs
inc
pop
cli
es
pushf
pop
js
test
into
jno
adc
shlb
mov
ficoml
pop
inc
mov
jns,pt
jg
mov
lret
and
pop
mov
mov
out
sub
in
jecxz
std
push
and
inc
daa
xchg
mov
mov
sbb
loopne
outsb
jle
sub
mov
out
add
ss
incb
pusha
pop
mov
jb
sub
bound
mov
in
mov
pop
sahf
dec
adc
arpl
mov
adc
pop
mov
pop
fildl
mov
pop
pop
or
lcall
adc
pusha
in
stos
aad
ljmp
adc
sub
jl
jge
gs
xchg
sbb
addl
xor
sub
push
jae
cltd
lcall
inc
jp
dec
cmp
mov
fdivrl
pop
rcl
loop
xor
cmp
mov
mov
fsubrp
out
andl
pop
insb
lods
mov
dec
les
xor
fwait
push
bound
stos
push
jb
add
fldenv
push
cwtl
add
cwtl
shrb
xlat
cwtl
or
cmp
push
push
out
jecxz
and
add
loopne
push
out
push
ret
rcll
lcall
ffreep
cmp
fsubr
xchg
rcl
and
mov
insl
call
cmp
xorb
cmp
rcl
pop
dec
jns
aas
mov
lods
mov
ficomps
xchg
inc
push
cmp
pmulhw
pop
push
sahf
or
repnz
ret
sub
jb
inc
jno
sbb
sub
sbb
jno
jno
mov
or
push
cmp
lds
ljmp
sbb
loop
push
mov
push
sbb
aam
iret
dec
fs
jmp
loope
push
jnp
xor
test
inc
or
cld
pop
out
mov
es
inc
jge
ficompl
mov
ret
adc
mov
pop
dec
stc
test
inc
and
add
or
test
shrl
xlat
out
inc
loop
dec
rcl
mov
xor
push
xor
out
sub
cmp
dec
div
cmc
cmp
arpl
sub
testb
aas
push
pop
xchg
lock
cmp
inc
pushf
lea
out
push
cmp
add
outsl
xor
lea
repz
xchg
lret
movntps
pop
lods
xchg
iret
subb
xchg
and
daa
sub
or
daa
adc
or
mov
mov
mov
xlat
or
dec
aam
cmc
dec
lock
pop
jns
fisubrl
aas
mov
adc
arpl
mov
cltd
jno
xchg
push
xlat
jo
std
es
rolb
sub
mov
in
mov
mov
cmp
push
inc
xchg
and
xor
popa
dec
inc
stos
pop
mov
or
dec
sbb
inc
or
pop
mov
mov
push
push
cmp
fisttpl
and
xchg
mov
cs
inc
add
sub
lea
cwtl
xchg
ror
sub
stos
hlt
stc
sub
popf
in
xor
enter
and
inc
pop
mov
adc
lods
mov
out
xchg
jns
jl
mov
andb
hlt
push
rclb
imul
push
xorb
cmc
rcrb
mov
and
pop
clc
dec
fistps
or
adc
lock
iret
loopne
loope
pop
inc
mov
mov
outsb
stos
scas
inc
push
pop
jo
adc
and
test
jg
lea
mov
lods
mov
pop
inc
mov
aas
in
mov
pop
stc
jnp
mov
in
fisttpl
pop
adc
fcmove
insb
mov
xchg
rcll
cmp
pop
imul
sbb
ja
rcrb
fcmovb
movsl
icebp
xchg
jnp
ja
popf
in
sbb
jbe
mov
or
sahf
and
es
or
sub
sbb
xor
add
inc
addb
cmpsl
jns
cmp
punpckldq
jnp
loopne
mulb
xchg
xor
xor
fisttpll
int3
dec
xor
sti
mov
sets
ret
inc
subb
adcb
sbb
aad
test
xor
mov
ret
js
mov
scas
lahf
jecxz
jne
cmp
jmp
jmp
mov
add
daa
and
and
das
int
int3
testb
fistl
jmp
and
jl
pop
lcall
fnstenv
jae
out
xor
sbb
cmp
sub
pop
test
andl
test
stos
cwtl
jo
inc
pop
test
into
sub
sbb
test
fs
mov
mov
mov
jle
gs
mov
stc
add
jg
cmp
ss
jae
cmpsl
add
xor
shll
bound
lods
test
adc
pop
push
lods
inc
adc
pop
xor
mov
ja
xchg
stc
push
push
mov
gs
fistpll
subl
adc
cltd
and
lahf
lds
xchg
push
ret
scas
mov
mov
cmp
jle
addr16
dec
lret
sub
mov
xchg
adc
pop
push
mov
adc
dec
push
push
mov
cmp
aaa
add
mov
xlat
push
add
pop
js
je
arpl
rcrb
cmp
adc
negb
data16
fisttpll
sbb
fildl
cmc
ljmp
cwtl
icebp
sbb
in
popa
push
das
cltd
in
les
shl
imul
mov
and
or
stos
inc
inc
in
jbe
xchg
add
std
jg
out
faddp
pop
or
shl
mov
rorl
fstps
bound
lds
dec
gs
inc
jbe
xchg
add
add
repz
mov
cmp
or
xor
xor
mov
fwait
mov
fs
call
or
aam
sub
out
jmp
aam
mov
in
or
xor
push
call
fmull
aad
call
lea
mov
aam
adc
jp
cmpsb
adc
dec
stos
fcmovb
testb
stos
fldcw
rcr
cmp
clc
mov
outsl
rorb
in
bound
fdivrp
cwtl
jmp
mov
adc
sub
lea
cmpsb
vmovntpd
sbb
fmul
xchg
addr16
in
pop
adc
sub
or
xchg
notl
shll
xor
dec
sbb
mov
int3
inc
sub
cmp
fbstp
testb
inc
scas
pop
sbb
or
insb
loope
jb
hlt
cmp
sbb
and
sub
inc
repz
or
dec
ret
push
jmp
call
pop
pusha
rcr
mov
std
xchg
loopne
test
sub
mov
shlb
aas
adc
or
sahf
orb
and
imul
adc
add
push
add
add
push
jo
sbbb
adc
dec
sar
int3
pop
jo
xchg
iret
fstps
ss
or
out
fwait
insl
mov
insl
dec
inc
jmp
push
mov
fnstsw
imul
ss
sbb
sbb
or
dec
xor
stos
ljmp
clc
or
imul
xor
movsl
sahf
test
push
clc
insl
xchg
dec
clc
pop
fndisi(8087
sbb
or
push
clc
insl
xchg
push
clc
jne
out
dec
pop
loopne
mov
add
cmp
fcmovnbe
scas
stos
push
cwtl
jae
lods
aas
mov
std
dec
cmpsb
mov
lret
pushf
into
mov
ret
jo
mov
pop
push
jge
popa
cmp
dec
push
out
loop
push
ret
jl
xchg
shl
insb
sub
popa
ja
sahf
pop
mov
cmpsl
cltd
jle
cltd
dec
xor
out
es
adc
cld
pop
pushf
jae
imul
adc
subb
jo
cmp
test
fiadds
or
jmp
mov
mov
popa
sub
inc
lock
loopne
fdivrs
or
ds
cwtl
adc
aad
add
shll
into
fbld
mov
sbb
mov
test
js
push
lret
xor
insb
imul
sbb
lock
adc
xchg
arpl
add
sbbl
xor
mov
mov
inc
mov
mov
arpl
inc
cmp
imul
bound
xchg
push
xor
mov
decb
mov
push
test
popa
inc
aam
lock
and
aam
pop
pop
loope
mov
cs
sub
cli
and
dec
xchg
push
sbb
mov
enter
jmp
fcmovnbe
jcxz
xchg
aas
mov
xorb
jle
in
or
aam
lret
outsl
xor
jno
dec
mov
popa
jecxz
sbb
popa
cmp
sbb
test
ss
mov
sbb
test
sbb
sbb
in
push
pop
cltd
xor
jo
mov
xchg
mov
outsl
and
pop
aam
in
pop
ss
dec
dec
test
push
xlat
ja
push
popa
inc
sub
mov
xchg
mov
mov
pop
mov
sbb
call
push
jo
xlat
mov
mov
dec
add
and
xor
inc
lahf
sub
inc
sbb
jno
pop
pop
fcompl
bound
add
sub
pop
mov
sub
pop
pop
jno
dec
rorb
sub
jl
fildll
dec
add
push
add
add
inc
pop
les
xor
mov
push
sub
xchg
mov
cld
loop
test
sbb
push
mov
xorb
mov
adc
stos
mov
jne
pop
mov
lock
mov
sub
in
pop
push
jmp
or
sub
lds
mov
add
test
out
mov
mov
insb
adc
inc
jge
les
hlt
inc
out
cmp
outsl
in
les
xchg
sbb
jl
inc
popf
ss
jge
mov
mov
pop
push
orl
add
in
lret
jp
sbb
loope
lock
outsl
mov
out
jge
cmp
int3
xchg
jmp
jnp
shlb
rcll
mov
stos
sahf
pop
in
mov
mov
sbb
in
mulb
cld
jle
popf
lret
out
sbb
add
pop
aaa
push
fimull
jecxz
mov
fsubrs
fs
addr16
out
push
and
sub
sbb
jae
adc
andl
out
add
fistps
sub
dec
stos
xchg
in
dec
imull
imul
mov
movsb
lret
dec
lahf
dec
pop
pop
fimull
shl
lock
adc
loope
ja
jl
lods
lahf
cmp
sub
push
adcb
icebp
push
dec
push
ror
fucomp
clc
mull
aam
stc
mull
out
lcall
aas
shll
ss
loop
ss
lcall
mov
imul
test
mov
mov
mov
int3
icebp
push
loope,pn
push
enter
jp
mov
ss
adc
and
pop
push
jns
jle
xor
or
sub
pop
rorb
pop
add
inc
cmp
xor
mov
nop
das
shrl
mov
in
jno
popaw
movsl
rcll
pop
add
adc
lret
das
les
rcrl
outsb
jecxz
xchg
mov
adc
pusha
dec
incl
rolb
arpl
fdivrs
outsl
push
sub
jns
sbb
ret
adc
inc
fldl
jae
sub
pop
cli
sub
out
xor
loopne
push
xchg
ja
mov
cmp
shrl
out
and
fistl
ds
jp
xchg
jno
add
ds
dec
cs
enter
jg
sbb
mov
jns
xchg
dec
inc
sbb
push
sysret
pop
mov
push
pop
sub
push
dec
aam
adc
repz
mov
test
push
out
fucomp
dec
iret
jmp
push
pop
scas
adc
sbb
mov
shlb
js
xorb
in
adc
lods
lock
repz
pop
mov
mov
pop
inc
push
in
lcall
inc
in
inc
stc
outsl
pusha
scas
mov
add
sub
sbb
jg
movsb
dec
lret
sub
pop
arpl
sub
imul
scas
shll
aaa
mov
or
fcompl
pusha
cmp
pop
outsb
xchg
mov
gs
mov
mov
inc
fnstcw
sbb
adc
fwait
pushf
cmpsb
nop
clc
subb
loop
std
push
cs
pusha
inc
push
xchg
push
ficomps
pusha
cmp
mov
addr16
dec
in
cmpl
push
sub
pusha
cld
maxps
add
xor
mov
js
xbegin
push
out
mov
out
xor
jo
and
stos
sarb
loope
mov
mov
imul
movsl
addb
mov
lods
int3
out
adc
pop
mov
xor
push
xor
shl
add
js
dec
push
inc
faddl
adc
push
jp
test
cmp
int3
int3
jb
test
insl
cmp
cmp
sub
push
dec
mov
pop
mov
nop
pop
pop
ret
push
cmpsb
pop
les
push
add
mov
xorl
dec
cmpsb
fists
jmp
adc
push
ljmp
aam
sbb
pop
fcompl
imul
sub
stos
adc
or
aad
sar
pop
xchg
cltd
sti
es
jno
out
stos
xchg
fbld
imul
jb
out
stos
insl
sbb
fndisi(8087
xchg
jnp
popf
insl
mov
push
mov
out
or
popf
cltd
xor
push
jle
rclb
repz
sbb
push
cs
mov
scas
insb
mov
or
into
stos
add
sbb
nop
lds
loopne
clc
orb
push
loopne
fcmovne
xchg
daa
jns
and
and
mov
es
pusha
xor
pop
sti
fiadds
mov
daa
mov
lahf
or
and
push
fs
mov
jle
mov
sahf
inc
inc
rcrl
push
out
adc
push
inc
xor
jecxz
mov
arpl
sbb
adc
jae
cltd
pop
ffree
xor
xor
adc
xor
or
adc
jb
jnp
test
in
xor
in
cwtl
inc
jae
sub
jnp
js
sbb
sbb
out
xchg
out
cs
sarl
fnstsw
in
shr
mov
shlb
or
add
addr16
jle
mov
mov
fldcw
mov
lods
xchg
popf
sbb
arpl
fdivs
lock
and
mov
inc
or
test
pop
mov
out
je
arpl
mov
jecxz
inc
jmp
push
out
or
jae
loop
out
sub
adc
adc
test
or
pop
fcom
test
inc
add
lods
push
rorb
or
cmp
outsl
movsb
repnz
jmp
xchg
stos
mov
push
scas
adc
adc
mov
clc
or
loopne
sbb
mov
adc
iret
inc
adc
dec
jo
fwait
add
mov
into
test
int3
lea
ja
xchg
popa
fucomp
js
iret
and
and
lock
adc
xchg
add
add
lds
adcb
and
stos
lods
test
dec
les
popa
das
jecxz
cmp
cmp
cmpsb
push
add
sbb
adc
mov
sbb
inc
push
xor
inc
idivl
inc
push
sbb
std
xor
dec
sbb
sbb
daa
jge
loopne
mov
xor
daa
mov
mov
mov
mov
fnsave
push
xlat
xchg
xchg
out
push
jmp
movsl
pop
js
cmp
outsl
jecxz
pop
dec
pop
sbb
insl
mov
cwtl
push
push
pop
and
lcall
cmpsl
nop
mov
jecxz
jecxz
mov
mov
mov
aas
dec
call
or
loop
mov
aad
addr16
push
in
sub
lods
xchg
cmp
pop
imul
out
xchg
sahf
jno
imul
cmp
imul
mov
push
sbbl
fsts
mov
test
es
jl
fisubs
aaa
hlt
std
and
clc
sub
jp
paddusb
or
ret
inc
hlt
sti
fsubp
jge
stos
mov
mov
mov
mov
lea
and
or
dec
or
lret
fsubp
jge
xchg
add
fldpi
add
shll
mov
or
imul
xchg
je
mov
fdivl
js
arpl
aas
jb
mulb
ds
aaa
mov
and
aas
mov
adc
call
mov
or
adc
lret
imul
lea
mov
mov
movsl
adcb
fs
fcompl
inc
fwait
insb
cmp
jecxz
das
shlb
imul
push
mov
jo
push
push
div
es
shll
test
jnp
ss
bound
daa
fbstp
sbb
decb
inc
pusha
mov
cwtl
lahf
insl
loop
int
int3
cmc
cwtl
push
ret
ja
xor
insl
ret
mov
xor
mov
mov
int3
shll
sub
sbb
loopne
inc
jecxz
lock
pop
lock
xchg
add
add
push
xor
in
mov
xchg
xorl
cs
xor
dec
xor
sub
enter
and
out
jnp
and
ljmp
aaa
jne
cmp
outsl
xor
aas
mov
and
cli
sar
cmpsl
xor
pop
subl
xor
mov
pop
mov
inc
mov
scas
xchg
lds
jmp
xchg
xchg
xor
pushf
incl
xchg
fdivs
jno
mov
pop
lahf
ljmp
fimuls
jns
mov
cmc
mov
cli
cs
cli
repz
and
lea
lock
test
pop
not
mov
mov
xor
lcall
std
cmp
fwait
movsb
ds
in
nop
outsb
clc
mov
loope
jle
movsl
lock
push
pop
ljmp
cli
cs
fisubs
pusha
icebp
add
iret
daa
fidivrl
in
mov
imul
mov
test
imul
sahf
add
xor
iret
sbb
dec
mov
leave
mov
and
imul
cmpsb
mov
in
cmp
cld
jbe
int
adcb
sub
cmp
or
xor
and
jns
jmp
xchg
cmp
jbe
js
inc
mov
ret
movsb
insb
movsb
je
and
sbb
idiv
mov
mov
fdiv
sbb
mov
aad
push
mov
mov
mov
jmp
loopne
dec
sarb
cli
dec
mov
cmp
dec
fistpll
movsb
pop
in
cmp
lret
dec
sub
add
lret
cmp
fidivrl
std
leave
les
test
mov
popf
fldl2t
aas
sti
mov
movsb
jle
xchg
sub
cltd
dec
cmp
dec
add
repnz
addr16
jle
pop
push
es
xchg
xchg
lcall
jnp
cmp
pop
pop
sub
and
call
jnp
test
mov
aad
adc
fmuls
popf
dec
dec
and
cmp
in
mov
movsl
xchg
jb
clc
lcall
xor
cmp
mov
ror
or
add
mov
jne
adc
cmpsl
jp
add
scas
bound
imul
jb
shll
stos
mov
ja
xlat
shlb
pushf
dec
insl
pop
ja
aaa
and
cs
mov
mov
cwtl
and
shl
add
cmp
outsl
push
push
inc
mov
shlb
int3
jge
ljmp
inc
mov
jb
insl
push
arpl
and
insl
adc
jnp
or
subl
mov
out
inc
js,pt
xchg
adc
or
pop
pusha
or
rorb
scas
int
cmp
xor
loop
xchg
mov
adc
cs
cld
push
push
xchg
inc
pop
mov
fidivs
add
jl
rorb
cmp
push
push
je
pmaddwd
xchg
je
ja
insl
test
je
xchg
or
inc
pop
mov
push
out
setae
in
loope
cmp
ja
jb
nop
push
mov
ds
cmp
xchg
fdivrp
dec
daa
in
push
jbe
lcall
in
das
or
outsb
gs
scas
fcompl
aam
xchg
mov
daa
in
jb
cmpsb
mov
or
loope
nop
lahf
insb
ret
or
mov
pop
xchg
xor
aam
add
mov
adc
jle
movsb
clc
jb
test
aam
fsubrl
icebp
dec
in
insb
lahf
movsb
shrb
jbe
pmulhw
add
flds
inc
cmp
sti
jle
popa
jl
loopne
pushf
stos
out
inc
loope
in
sub
adc
xor
jmp
cmpsl
adc
je
adc
ficompl
dec
inc
xchg
xchg
enter
mov
sahf
mov
inc
mov
adc
dec
mov
pop
push
push
mov
jle
aad
aas
jl
mov
xchg
lret
jge
scas
and
xor
test
loop
push
faddl
cmp
lods
ret
cmp
lret
fwait
add
fistps
pop
test
lea
aam
and
push
aad
les
adc
arpl
xchg
cmp
sahf
or
sti
dec
xchg
clc
adc
aam
xchg
sarb
sub
gs
mov
insl
mov
loope
inc
ja
and
sub
xor
gs
imul
cmp
arpl
xor
daa
mov
in
orl
and
iret
cmpsb
icebp
outsb
scas
iret
mov
pop
cs
popf
xchg
lds
add
adc
movsl
mov
mov
stos
push
cwtl
cltd
aas
push
arpl
fidivrs
pop
dec
pop
sahf
out
fs
pop
xchg
dec
addr16
imul
lcall
adc
mov
and
rcrl
mov
daa
adc
clc
lock
sbb
lahf
dec
fidivl
mov
inc
mov
sbb
push
sub
ss
jno
or
out
sbbb
cld
in
sub
inc
je
adc
in
mov
mov
or
cmp
push
imul
push
jecxz
inc
cmpsl
sub
ds
test
pop
or
out
lret
mov
xchg
and
popf
xor
push
mov
out
or
arpl
jae
cmpsb
dec
out
hlt
pop
sub
xlat
ja
sbb
cmp
loopne
pop
add
xchg
or
ljmp
or
cmp
lret
push
mov
cmp
fldl
push
fmuls
push
mov
lret
out
mov
jp
outsb
out
cmp
mov
cld
xchg
or
loop
cmp
push
cli
add
out
in
lahf
rcrb
imul
into
fs
test
push
outsb
sbbl
mov
div
daa
push
aad
mov
lret
incb
jbe
std
cmp
jle
jecxz
and
pop
xchg
or
hlt
hlt
push
clc
sub
mov
daa
mov
ja
shr
jmp
icebp
cmp
insb
mov
in
into
mov
lods
outsb
inc
sarb
push
add
and
sahf
sub
stc
jg
in
cmp
jne
sbb
pop
sar
lds
iret
loopnew
jecxz
mov
mov
push
pop
xchg
cli
jl
int3
dec
in
mov
fildll
xchg
inc
sbb
mov
xor
in
inc
inc
imul
repz
jmp
std
leave
test
scas
jb
xor
mov
out
sti
aad
pop
clc
mov
or
xchg
inc
mov
mov
in
scas
jg
sbb
cmp
pop
cwtl
mov
cmp
jae
outsb
les
shl
rcr
add
cmp
in
xor
fidivrs
outsb
orb
dec
in
inc
push
mov
sbb
sub
cmpsl
pop
aas
mov
fldcw
xor
xchg
pop
rcrl
pushf
adc
sub
imul
sbb
repz
jae
in
mov
hlt
icebp
call
dec
mov
xor
add
bound
jp
pop
inc
stos
iret
pop
out
and
out
lret
adc
sub
pop
mov
adc
aaa
aas
cmp
cmp
pop
rclb
xchg
inc
loope
jp
iret
loope
aam
adc
cmpsl
cmpb
and
pop
pop
and
add
or
imul
aad
and
push
outsl
rcl
push
jp
lods
mov
lods
mov
and
xor
fidivl
arpl
imul
sub
leave
dec
aaa
fidivl
mov
repnz
ficoms
jg
aad
mov
mov
fidivrl
push
add
add
cmp
jns
cmpsl
sahf
out
fldl
push
dec
repz
and
mov
adc
in
out
std
mov
xlat
pusha
push
cltd
fldcw
insb
sbbl
mov
xor
iret
je
cmp
xchg
aas
dec
cli
sbbl
call
dec
outsb
xchg
jl
je
subb
sti
lret
lods
jp
es
icebp
outsl
mov
lds
fldt
int
xchg
lock
cmp
sbb
insl
xchg
data16
and
outsl
sbb
outsl
sbb
push
imul
mov
cmovo
xor
rcrl
and
lcall
jbe
stos
into
jmp
cmp
inc
xchg
jp
in
daa
sar
out
push
pop
inc
aas
test
pop
jnp
out
imul
popf
in
sub
mov
inc
popa
sub
xor
dec
testb
lods
arpl
sub
cmp
les
or
lock
sub
shll
lcall
mov
shll
push
dec
movsb
mov
lcall
sub
arpl
push
lods
les
and
loope
je
jo
jge
lret
mov
jmp
jmp
mov
inc
pusha
into
xchg
bound
dec
jns
inc
push
dec
das
pop
fadd
jecxz
xchg
imul
rcrb
iret
imul
jg
sub
cwtl
inc
ja
mov
jae
dec
cmp
cmp
inc
cmp
inc
fcoml
cmp
lcall
popf
sub
fwait
xchg
dec
mov
dec
fidivs
jmp
orb
imulb
push
imul
test
sub
dec
add
loope
fucom
add
stc
popa
aad
loopne
int3
xor
mov
mov
iret
into
dec
mov
mov
iret
sbb
jmp
jg
mov
add
enter
xchg
in
rolb
pushf
mov
sbb
cmp
xor
imul
in
push
fadds
cmp
movsl
or
out
into
ljmp
mov
dec
mov
lock
mov
leave
mov
ficompl
aam
cmp
pop
jae
cmp
push
sub
lcall
push
sbb
sub
sub
int3
insl
lahf
cld
dec
xor
out
cwtl
xchg
das
sbb
xor
push
rcrl
shlb
jmp
adc
or
adcb
add
cmpsb
rcrl
sub
aas
loop
pushf
xchg
das
cmp
mov
test
jns
mov
lcall
pop
dec
sbb
pop
pop
ret
daa
adc
out
push
pop
mov
mov
movsl
cmp
jnp
ja,pt
push
pop
xchg
test
mov
cmp
cmp
outsb
fisubs
xlat
mov
stc
xchg
add
push
ret
nop
ss
add
xor
data16
mov
aaa
mov
xchg
pop
pop
popa
sub
popf
ror
mov
mov
pushl
in
icebp
dec
push
dec
xchg
mov
test
inc
shrl
adc
dec
dec
pop
cs
inc
outsl
sbb
lods
pop
push
adc
inc
mov
jl
sub
add
xchg
fwait
test
mov
mov
jne
fdivs
mov
enter
out
repnz
pop
cmc
neg
stos
pop
lcall
into
int3
pushf
cmp
int3
int3
sbb
sar
sahf
sbb
vminss
xor
sbb
out
in
fisttps
pop
insl
mov
ja
mov
negb
mov
aam
sbbl
jne
sub
ds
and
aam
cmp
jnp
mov
mov
divb
cwtl
inc
loop
mov
xlat
mov
or
and
add
and
add
jge
lea
in
out
jecxz
les
idivl
jnp
add
xor
aad
xchg
aam
inc
lea
jg
imul
push
xor
lods
das
mov
out
movsb
loop
test
sub
xchg
cmp
jmp
daa
dec
cmp
shlb
imul
aam
stos
mov
pop
cs
mov
sub
stc
pusha
mov
push
and
rorb
fs
pop
mov
cmp
daa
or
jle
stos
xchg
out
rorb
sbb
fidivs
nop
sub
cmp
or
mov
push
stos
fisubrs
fwait
imul
xor
and
inc
fsubrl
fwait
sub
pop
xor
cmp
addr16
lods
jae
insl
mov
faddl
fisubrl
sbb
outsl
scas
rcll
sub
cld
lds
sub
sbb
repz
call
into
loopne
pop
out
fisubrl
mov
fldt
decb
jae
lea
pushl
clc
jbe
push
in
cmp
subb
cltd
lock
scas
sub
sbb
mov
je
adc
js
mov
stos
mov
xchg
insl
push
notb
fnsave
push
fnstsw
pop
adc
pushf
rolb
adcb
push
lret
xchg
cmp
pop
dec
or
mov
pop
and
hlt
add
loope
cltd
cli
or
and
std
scas
lcall
xchg
enter
dec
adcl
and
dec
mov
ja
mov
aad
push
into
mov
push
and
push
jb,pn
ret
dec
les
int
shrb
or
inc
adc
fsubrs
jl
mov
add
scas
fimuls
enter
insb
aas
jb
fimuls
into
std
inc
cmpl
mov
mov
inc
dec
cmp
pop
pop
jns
mov
jmp
sbb
push
cmp
stc
loop
jg
popa
hlt
cmp
pop
ret
sub
jnp
mov
rol
cmp
iret
scas
cmc
and
dec
mov
in
lahf
in
and
sub
add
dec
push
stc
jb
xchg
xchg
add
scas
arpl
pop
out
je
js
movsb
ret
cmpsl
lea
lock
push
or
jmp
xchg
jmp
push
out
jecxz
cmpl
pop
jl
jae
fucomip
dec
push
inc
inc
dec
xor
cld
jge
mov
popa
dec
loop
and
mov
fstl
adc
mov
icebp
jns
xchg
and
dec
push
xchg
cmpsl
mov
mov
pop
into
in
and
xchg
fiadds
push
sbb
xor
adc
fmull
faddl
clc
inc
dec
lret
xor
mov
sub
mov
andl
mov
sbb
fyl2x
cmc
push
jmp
fsubr
cmp
xchg
jmp
mov
out
pop
mov
push
push
xlat
and
movsb
insb
mov
repz
push
and
fcmovb
xor
push
fsubl
adc
xchg
push
xor
repnz
xchg
dec
mov
mov
xlat
addr16
les
out
scas
jne
xor
mov
fwait
cli
dec
push
dec
test
into
scas
fisttpll
pop
dec
or
icebp
das
ret
push
push
scas
in
clc
inc
sbb
inc
test
into
fisubl
dec
cmpsl
addb
loop
add
mov
jp
imulb
jae
inc
cli
popa
jns
mov
mov
or
sbb
inc
adc
push
and
sbb
rclb
inc
mov
in
test
ja
lds
test
jno
xchg
mov
nop
mov
repz
roll
xchg
mov
jle
pop
inc
xchg
in
jecxz
mov
leave
bound
gs
test
shlb
fwait
inc
loopne
pop
jp
in
movsl
rorb
cltd
sbb
and
dec
inc
popf
add
mov
push
xchg
ja
into
popf
cmp
in
insb
jl
outsb
add
aad
jbe
pop
jmp
shll
adc
mov
fxch
arpl
sti
inc
test
cmp
push
orb
sbb
daa
pop
inc
xor
gs
push
push
xchg
faddl
mov
cwtl
pop
nop
cld
out
push
xchg
aaa
ja
jmp
jg
mov
mov
stc
sub
and
enter
outsl
inc
mov
or
mov
test
inc
loope
jo
sti
aam
pop
inc
push
inc
negb
adc
das
and
das
inc
xor
mov
xchg
mov
mov
mov
mov
sbb
popa
jae
mov
sub
inc
xlat
insl
ret
jg
xlat
mov
jnp
mov
std
fdivrl
mov
sub
int
mov
loope
push
popa
arpl
sub
mov
cld
nop
lret
inc
lods
fdivrl
test
push
cwtl
adc
or
mov
mov
mov
lret
mov
jbe
outsb
cmp
mov
lcall
push
sub
stc
inc
xchg
push
adc
subb
sub
sbb
lds
in
mov
jl
bound
mov
pop
adc
or
sbb
xor
cmpsb
jmp
dec
mov
loop
pop
sbb
sarb
testl
fbld
mov
out
add
jmp
into
inc
aaa
pusha
pop
adc
popa
lods
outsb
test
dec
jmp
fisttpll
out
mov
sbb
sbb
pop
push
loop
bswap
mov
loope
cmp
mov
push
sub
stc
dec
add
imul
xorl
xchg
rolb
mov
out
jne
and
lods
mov
inc
mov
jle
sub
adc
inc
subb
or
inc
imul
jge
jmp
insl
out
je
jle
push
pop
popf
and
mov
jl
popa
pcmpeqd
jnp
scas
or
mov
mov
jbe
mov
xchg
jecxz
fbstp
ret
pop
lds
ret
popa
jno
call
out
mov
scas
pop
adc
outsb
push
dec
or
int3
iret
mov
clc
mov
rcrl
aad
cmp
mov
sub
pop
dec
idivl
fadd
daa
outsb
insl
cmp
movsl
shl
std
or
fs
cmp
mov
adc
inc
dec
or
mov
mov
ds
add
rclb
pop
sub
xchg
push
xor
mov
adc
movsb
mulb
push
mov
pop
lret
jg
cmp
insl
ds
adc
aad
fadds
sub
frstor
and
ljmp
icebp
jb
loopne
sub
enter
out
popf
movsl
mov
hlt
int
ja
ljmp
fnstsw
and
xchg
ffree
jmp
mov
or
jo
pop
and
clc
int
mov
ficoms
jl
dec
mov
sbb
or
aaa
jo
popw
cmc
adc
mov
cmp
pop
cmp
inc
icebp
cmp
jp
je
clc
fidivs
cmpsb
rorb
xlat
lock
es
cs
cmpsb
popa
jle
xchg
xchg
loop
xor
pop
outsl
pop
push
lahf
add
xlat
cmpsb
insb
enter
movaps
mov
loop
push
cmp
dec
fwait
call
dec
in
in
xor
pop
jl,pt
cmp
adc
jmp
xor
mov
out
sub
sbb
add
push
push
push
xor
lock
or
pop
push
xchg
out
adc
cmp
jo
mov
add
inc
std
rcrl
dec
dec
sti
inc
or
clc
test
shrb
repz
dec
fs
enter
pop
mov
cmp
bt
pop
add
mov
adc
iret
fidivl
sub
cwtl
jmp
popf
cmp
frstor
fidivl
mov
jle
es
je
fcoml
mov
pop
xor
adc
jno
push
in
imul
cmp
int
in
ss
fs
inc
inc
scas
in
pop
mov
int3
cmp
lret
imul
packssdw
pop
mov
fldl
sbb
cmpsl
addr16
addr16
cmp
scas
int
dec
push
nop
push
xchg
jge
lahf
lahf
add
aad
test
adc
mov
jmp
jmp
xchg
fistpll
cld
and
ljmp
jle
mov
mov
aam
fidivl
fs
movsb
aas
lods
into
pop
jle
into
mov
push
adc
mov
xchg
jnp
scas
pop
or
out
in
sarb
mov
rorl
pop
lahf
jno
into
into
iret
inc
cld
in
loopne
shl
in
xor
in
hlt
loope
aam
pop
xchg
imul
pop
daa
incb
stos
dec
jne
add
lret
ficoms
mov
add
inc
jmp
hlt
inc
mov
add
or
mov
mov
mov
pop
push
gs
dec
jae
mov
fwait
mov
fstpt
mov
xor
xchg
shrl
lcall
jle
push
lods
push
ja
pop
mov
mov
cld
jge
fdivl
jg
retw
fdivs
pop
xchg
cld
stos
gs
push
mov
ret
or
insb
enter
popf
lds
in
xchg
xlat
xor
pop
inc
mov
jns
aas
mov
xchg
cmpsl
les
mov
test
sti
jbe
push
cmp
cmc
jnp
add
adc
cmp
incb
lods
sbb
add
lds
sub
mov
mov
aam
in
jge
imul
jnp
loop
inc
adc
pop
mov
outsl
popa
fwait
xchg
popa
jb
popa
stos
icebp
add
cmp
int3
mov
or
pop
ja
xchg
xlat
dec
cmp
push
adc
jecxz
rcl
sub
pusha
sbb
mov
or
adc
dec
jmp
cmpsl
inc
xchg
popf
testl
adc
sarl
xchg
jbe
mov
mov
pop
and
and
ret
shr
push
and
loope
movsl
in
jno
les
pop
mov
xorb
pop
outsl
pop
inc
xor
and
cpuid
fdivrl
test
lahf
and
loop
aaa
test
jb
jg
imul
in
push
sbb
test
push
mov
push
cld
pop
cld
cmp
or
cmp
out
bsr
cmpb
xchg
das
mov
and
rcl
lods
gs
movsl
xor
cmp
sbbl
dec
clc
imul
rcrb
fnstcw
mov
shr
sbbl
sub
jle
aad
sti
lods
jno
sbb
cmp
mov
shll
pop
xchg
rolb
stos
xchg
cmpsl
gs
add
inc
std
xchg
lods
mov
pop
mov
sbb
cmp
add
jmp
xor
jl
lahf
test
cmpl
jp
das
loop
inc
fbstp
dec
inc
repnz
cmp
sub
xlat
test
and
push
jge
add
xchg
stos
imul
data16
jge
movsb
pop
inc
or
sub
add
dec
xchg
pop
nop
push
jae
shrb
fwait
pop
outsl
adc
mov
cltd
mov
and
adc
loopne
or
inc
mov
pop
mov
cmp
lods
adc
sub
pop
push
inc
fidivrs
or
mov
in
jne
je
bound
aas
xor
push
int3
stos
adc
ja
mov
inc
aam
lock
cmc
lret
or
ja
push
cmp
pop
mov
sub
push
dec
mov
sub
int
in
stos
add
jb
test
xchg
xlat
cmpsb
leave
or
lods
popf
fs
dec
test
sub
push
push
push
aam
fisubrl
dec
jb
mov
or
sahf
movsl
pop
cmp
jl
lret
push
jmp
mov
pushf
pop
sub
or
imul
les
dec
mov
inc
notb
jnp
mov
ret
imul
mov
addr16
sub
dec
dec
and
stc
inc
and
or
mov
inc
call
jnp
lea
test
fs
inc
dec
sub
push
push
fsubrs
fdivrl
mov
xor
movsl
in
std
ficomps
sub
cmpl
mov
ret
adc
mov
lods
jns
jge
sahf
dec
sbb
inc
sub
notl
adc
stos
data16
jp
ss
out
movsl
xchg
lods
mov
repz
mov
pop
dec
xchg
sarb
dec
jne
rcll
jno
out
ret
sub
cmp
xchg
pop
ret
jecxz
mov
dec
data16
paddusb
addr16
xchg
imul
mov
test
fildl
xor
and
call
cwtl
xor
ficompl
xchg
inc
lcall
pop
and
mov
jns
and
enter
mov
rolb
shll
xchg
mov
jp
lret
mov
lods
cld
test
test
and
sub
mov
inc
cld
xor
push
cmpsl
pop
or
mov
lock
call
or
xchg
insb
pop
pop
xchg
addl
pop
test
mov
aad
fsubrs
int
daa
ds
xchg
and
das
adc
ret
and
xchg
xchg
mov
fcmovnu
mov
cmpl
or
xor
pop
fwait
dec
mov
sub
repz
mov
movsb
aad
fsubrs
clc
aas
inc
mov
outsl
andb
cmp
movsl
push
notb
push
mov
jns
jg
nop
xchg
imul
mov
inc
cmp
and
or
mov
int3
ja
cmp
jecxz
inc
mov
cli
loope
int3
push
fistpl
cmpsb
repnz
cmp
push
rcrb
mov
stos
mov
clc
xchg
lods
test
mov
jnp
ljmp
mov
mov
pop
scas
dec
lods
mov
lock
lcall
add
test
sub
out
or
fbstp
mov
sbb
or
jmp
xor
mov
movsb
scas
mov
jp
xchg
insl
fildl
pop
sub
cmp
mov
pop
dec
jmp
stos
movsl
xor
xchg
popa
dec
pushf
stos
daa
fidivrl
in
and
xor
xchg
insl
enter
add
sub
add
or
and
cmp
push
add
scas
int3
pusha
inc
cs
mov
daa
icebp
pop
pop
sub
icebp
adc
sub
cmp
cs
hlt
push
adc
cmp
cli
lret
mov
mov
mov
sbb
int
test
mov
mov
lcall
jp
movsl
push
fcoms
test
push
fnstenv
jp
enter
mov
in
movsl
neg
outsl
mov
xchg
adc
mov
lcall
pop
stos
and
icebp
ss
push
fs
rclb
push
mov
sbbb
sbb
dec
shll
cmp
xor
push
cmp
fwait
sub
adc
arpl
jno
lret
dec
sti
dec
in
cwtl
hlt
mov
push
xor
movb
jb
dec
fdivrl
shr
dec
push
cmc
sti
jge
add
or
xchg
mov
or
je
les
pusha
dec
stos
mov
mov
ljmp
adc
xchg
sub
test
and
aad
push
adc
out
cs
mov
aam
cwtl
daa
lods
xor
mov
andl
xchg
mov
in
cmp
pop
fs
or
xor
into
pop
pop
js
jle
dec
cmp
iret
push
int
add
pop
adc
jb
mov
adc
inc
fdivrs
mov
clc
out
or
jns
sbbl
dec
movsl
rcll
pop
das
dec
xchg
xor
fcompl
fildl
add
mov
es
daa
faddp
stos
ss
or
repz
jno
imulb
jb
mov
pop
fwait
lret
mov
sti
xor
in
jo
ret
xor
cmp
push
push
ret
inc
test
lods
ja
cmp
mov
jp
clc
clc
and
lock
pop
cmpl
mov
sbb
in
cld
arpl
lods
and
and
or
sbb
test
repz
aaa
or
insl
ss
dec
cmp
mov
jne
dec
push
stos
cli
decb
jge
repnz
lock
mov
cmpsb
insb
loope
cmpb
cli
dec
insl
aam
shrl
mov
inc
dec
mov
dec
stos
dec
jge
sub
pop
dec
push
or
fcoms
inc
mov
test
pop
sbb
enter
add
jno
les
insb
push
inc
adc
or
push
sub
cmc
movsb
cmpsb
in
or
insb
std
and
ss
pop
sub
pop
inc
repz
cmpsl
shlb
mov
ljmp
xor
inc
jle
outsb
jle
jl
sub
sub
push
fstps
add
pop
ja
scas
out
inc
arpl
cmpb
std
sarb
mov
scas
fsubs
adc
int3
out
jg
jne
xchg
push
pop
test
mov
shl
mov
mov
push
dec
xor
fwait
insl
xchg
mov
push
add
dec
cmpsb
decb
lods
shl
xchg
add
push
or
jle
push
mov
pop
or
xchg
shll
cmpl
mov
pop
push
jnp
loopne
and
int
add
lods
xor
jbe
lds
data16
adc
iret
mov
ds
push
or
js
sbbl
xchg
and
repz
jl
pop
or
fst
dec
inc
icebp
call
stos
fwait
pop
out
in
in
pusha
lcall
mov
imul
hlt
jns
popa
je
movsb
push
shrb
cmpsb
mov
sbb
mov
testb
lea
sub
sbb
sbb
jp
adc
and
lret
scas
push
pop
or
cmp
inc
ret
add
pop
rorb
shlb
in
add
loop
jb
and
pushf
leave
cmp
insl
aam
mov
pop
or
aaa
dec
jge
mov
ret
jne
notl
push
sbb
testb
imul
add
adc
mov
call
mov
push
jmp
or
pop
cs
jmp
mov
and
pop
inc
fldt
clc
sbb
mov
mov
mov
dec
inc
pop
jbe
inc
pop
std
in
flds
mov
fsubs
data16
in
cmpsl
mov
pop
scas
jbe
adc
ja
inc
mov
jo
imul
stos
pushl
ljmp
imul
inc
mov
xlat
sbb
mov
jb
push
jge
cmpsb
mov
sbb
xchg
daa
mov
push
out
dec
and
inc
aas
fimull
cmp
iret
push
jmp
int3
mov
shrb
mov
push
orb
popa
shld
push
xchg
movsl
fisubrl
jge
ljmp
ja
lods
xor
cmc
and
rcl
mov
jl
js
scas
pop
xlat
sti
stos
out
push
iret
aam
add
inc
std
es
xchg
xor
stos
pop
xlat
and
out
imul
mov
and
add
add
sti
jae
std
add
mov
pop
cmpsb
or
sarb
sub
push
sub
push
js
dec
movsb
into
sbbl
fadds
dec
cltd
adc
push
jge
jp
jecxz
pop
call
mov
mov
rcrb
adc
imull
sbb
aas
mov
sub
lret
push
pop
scas
sub
outsl
xlat
jo
cmp
lret
fldenv
les
dec
pop
lods
ds
incl
pushf
lods
jmp
mov
ja
lods
jg
and
dec
insb
shr
xor
mov
add
pop
or
je
sbb
sub
xchg
or
clc
dec
jae
lcall
mov
sbb
popf
dec
mov
popf
mov
inc
icebp
lret
js
dec
daa
push
mov
pop
add
cltd
push
cmp
pop
adc
ss
push
pop
push
push
cmp
icebp
jb
rorb
inc
xlat
in
fcmovnu
mov
movb
pop
filds
push
aaa
mov
xlat
mov
outsb
xchg
mov
xchg
dec
push
pop
pop
out
call
imul
xchg
mov
popf
inc
out
push
mov
jae
sbb
jns
leave
pushf
pop
cmpsb
or
sub
fiaddl
mov
inc
lods
xchg
fiaddl
push
outsb
les
gs
dec
jnp
es
hlt
negb
mulb
sbb
or
push
jb
adcb
lods
mov
addr16
pinsrw
xlat
lret
fsub
es
dec
mov
cmpsb
dec
insb
mov
imul
sbb
or
std
cmp
push
dec
rorl
jle
fs
or
mov
push
mov
stos
or
mov
out
inc
hlt
gs
nop
into
xchg
xchg
repnz
ficoml
stos
fucom
lahf
daa
sarl
sub
fiadds
push
mov
int
push
sub
push
mov
push
dec
sbb
fiaddl
lods
inc
dec
mov
test
fidivrl
inc
cmp
mov
xor
xor
mov
xor
lret
jge
addr16
jae
lcall
ret
into
loopne
sub
cmp
cmc
sarl
lret
int3
push
sub
inc
fildll
sub
xchg
hlt
rol
jge
out
mov
lret
cmpsl
imul
jp
outsb
les
stos
test
loope
cmc
popa
push
push
shll
in
lds
loopne
mov
jg
push
lds
and
fcom
sahf
daa
arpl
out
out
bnd
jnp
fimuls
dec
add
pop
sub
test
add
xchg
call
xor
lret
fs
mov
les
sahf
out
push
pop
std
push
sub
fimull
ds
int
outsl
cmpsl
push
inc
loope
out
jno
mov
cmpsb
fdivrl
cmp
jbe
mov
mov
movsb
leave
int3
push
fisttpll
insl
pop
imul
aad
stos
mov
jb
in
fsubl
lret
testb
sub
test
lret
jne
and
dec
pop
jno
jno
or
jb
stos
xor
idiv
push
bound
xchg
icebp
sbb
out
xchg
cmp
vmulsd
jae
sbb
mov
out
xor
cmp
lea
sub
and
xchg
mov
rcrb
nop
test
pop
mov
sbb
xlat
mov
cmp
icebp
sbbl
pop
into
mov
push
pop
push
push
out
sbb
jo
repz
imul
test
sti
aam
lret
mov
cmc
in
jecxz
and
or
push
jb
xchg
mov
popa
jg
dec
ret
adc
cmp
jle
aaa
cwtl
js
dec
sti
jnp
aam
pop
mov
jp
push
cwtl
inc
cli
xchg
mov
andl
and
nop
push
sarl
int
xor
push
jb
pusha
gs
ja
xchg
xchg
nop
aaa
stos
cmp
adc
data16
lea
push
leave
call
popa
adc
mov
nop
adcl
dec
es
dec
xlat
pop
shrb
xlat
inc
fstl
and
cs
aaa
stos
mov
sub
jp
stos
push
pop
lahf
xchg
lds
enter
mov
test
in
xchg
xlat
out
imul
sbb
push
loop
xor
add
out
cltd
aas
sbb
stos
loopne
in
cmp
rolb
jmp
sbb
mov
jecxz
insl
cltd
rcrl
out
pushf
ficoms
xchg
or
pop
mov
sbb
push
out
dec
js
or
jnp
xchg
loopne
pop
stc
and
push
icebp
mov
fisttps
lret
lahf
push
dec
cs
or
dec
jmp
dec
jp
leave
pop
pusha
dec
xor
cmp
loopne
orl
addb
lahf
and
and
pop
ja
sbb
mov
xchg
dec
imul
pushf
and
sub
mov
adc
push
push
pop
mov
add
loop
lahf
and
in
lret
xchg
bound
jae
out
sub
adc
cmpsb
and
dec
sbb
and
sbb
in
add
rcll
repnz
sbb
in
sbb
psrlw
add
nop
mov
testb
hlt
adc
out
in
data16
mov
das
cmc
lds
xchg
push
test
fcompl
push
jns
sub
mov
movzwl
inc
or
dec
xchg
rol
xor
cld
repz
pushl
mov
mov
pop
shrb
and
jns
push
push
jp
xchg
dec
rcr
dec
rcrl
int
pshufw
jl
pop
arpl
push
scas
xchg
mov
adc
out
ss
bound
inc
sub
adc
ret
xor
mov
sbb
mov
enter
jge
push
jne
test
pop
fildll
jmp
rorl
lahf
mov
xchg
inc
jmp
inc
cmpsb
pop
cld
xchg
bound
fstl
pop
cld
inc
jbe
bound
cmpsl
and
sarb
lds
adc
push
loop
negl
lcall
and
lret
jb
shr
and
lret
shll
mov
leave
fistpl
inc
out
mov
xchg
inc
fistpll
dec
aas
aad
add
sbb
push
sbb
iret
jnp
adc
dec
cmp
mov
xor
adc
pushl
xor
fs
xor
pop
shr
in
leave
and
mov
bound
stc
int3
and
pop
sbb
sbb
push
aad
push
mov
xchg
loopne
inc
and
xchg
cmp
in
movsb
sarb
mov
loope
pop
cmp
test
dec
cmp
jo
xchg
lret
and
and
dec
lret
movsl
call
sbb
or
xchg
mov
sahf
fs
fsts
xchg
pop
push
dec
sub
sub
test
gs
or
mov
dec
lock
ret
cld
or
out
repz
mov
fiadds
pop
cmp
push
jns
mov
incb
ljmp
xchg
xchg
inc
lahf
pop
iret
xor
icebp
inc
inc
pushf
ljmp
push
xchg
in
shrb
fs
inc
sahf
sti
cmp
gs
push
xchg
mov
dec
out
adc
and
push
push
rolb
sbb
sbb
movsl
push
and
pop
lea
mov
pop
stos
mov
in
pop
mov
cltd
pop
jo
dec
int
shl
sbb
adc
adc
les
dec
xor
cmp
xor
test
cs
loope
sbb
push
in
addl
popa
sub
dec
and
in
sbb
mov
push
cmp
mov
cmp
ret
addr16
add
pop
cld
cmp
jb
punpckldq
in
jno
add
adc
test
inc
cmp
mov
dec
lds
jne
or
mov
mov
jnp
push
fldenv
rorb
push
cmc
stc
push
adc
fnstenv
in
xor
mov
lret
inc
sbb
xchg
sbb
add
mov
stos
arpl
out
inc
loop
aas
rclb
mov
xor
jp
adcl
pop
nop
sub
mov
bound
mov
iret
mov
xchg
roll
adc
nop
xlat
xchg
std
out
bound
adcl
fldcw
into
mov
lea
icebp
fnstcw
sub
dec
adc
inc
adc
repnz
sahf
xor
mov
insb
cmp
mov
sub
lret
loope
ret
dec
cmp
inc
fists
or
push
jl
xchg
aas
pop
sbb
pop
inc
and
sub
add
xchg
shll
js
loopne
adc
adc
int
lock
and
stos
hlt
fmul
pop
mov
dec
shl
xor
lret
adc
sarl
mov
cltd
and
ret
dec
sbb
xlat
mov
jp
stos
mov
mov
in
inc
jp
add
xlat
mov
mov
pop
jle
fstpt
jle
out
jmp
xchg
pop
push
xor
or
jb,pn
mov
sbb
rclb
out
xlat
sub
test
xlat
std
bt
cwtl
sub
mov
inc
in
mov
sbb
adc
pushf
out
bound
out
mov
mov
sbb
iret
inc
sub
dec
cmp
mov
pusha
add
jnp
inc
cmp
xchg
fsts
dec
inc
jno
lret
add
or
cmp
fisttpl
and
aad
pop
into
xchg
push
daa
inc
cmpsl
adc
mov
dec
xchg
jns
leave
xchg
stc
movsb
inc
mov
xchg
dec
or
aas
push
mov
cmp
inc
idivl
cmp
es
repnz
jae
psubsw
xchg
lcall
das
and
mov
jmp
ja
mov
push
sub
jmp
lods
sub
popa
jge
mov
pushf
push
cmp
enter
push
ss
int3
andb
out
jmp
pop
bound
cwtl
pop
jp
or
xchg
popf
pop
pop
jb
les
rclb
mov
or
mov
sub
pop
push
call
or
test
mov
in
dec
imul
xor
aas
mov
test
lcall
add
sbb
push
cmp
push
adc
pop
faddl
enter
jno
fnsave
mov
aaa
push
or
and
adc
jae
jne
lahf
or
lods
cmpsb
rclb
pop
mov
mov
lock
iret
mov
push
aas
jg
jb
sti
mull
andb
popa
sbb
leave
dec
repz
scas
daa
xchg
mov
out
loop
jne
lret
sub
mov
dec
inc
pop
or
ljmp
aad
xor
xor
cltd
jno
push
imul
in
jmp
int3
mov
sub
jne
cltd
jo
aad
subb
dec
stos
mov
pop
xchg
movsb
out
jmp
sbb
cmc
cmp
xor
push
jo
push
cltd
orl
rcrl
mov
aas
dec
and
ja
out
sub
repnz
outsl
ret
cmp
pslld
ja
or
imul
xchg
pop
mov
or
fcoml
stc
sahf
or
cli
inc
mov
jge
fdivl
sbb
adc
sub
lahf
lods
inc
jno
std
lods
mov
sub
cli
push
mov
shr
dec
mov
lret
int3
ret
sbb
jl
nop
adc
xor
loop
mull
mov
rol
xchg
shlb
cmp
pop
cmp
xchg
decl
movsb
xor
fwait
push
ficoms
cmp
ret
popl
inc
push
add
lds
dec
sahf
and
fsubrs
cld
cmp
pop
sar
js
ljmp
cwtl
mov
shrl
pop
bound
sbb
dec
int3
cmc
movsl
add
orl
inc
or
and
movsb
mov
fidivl
in
xbegin
xchg
loope
pop
inc
cmp
cltd
fs
push
cmp
mov
mov
lods
das
push
fxch
pop
push
mov
mulb
pop
and
orl
rol
and
clc
mov
jns
std
jmp
xchg
pusha
mov
fistpll
xor
fcoms
jno
das
in
insb
lea
gs
and
add
lods
repz
dec
in
sub
lret
test
sub
cs
sar
stc
jb
les
loopne
addl
ja
rcll
push
pop
pop
xchg
popf
xor
data16
out
dec
or
sub
sub
push
adc
xor
dec
jb
out
inc
dec
psrlq
mov
dec
inc
and
adc
cmpl
mov
addr16
pop
fwait
mov
inc
das
xor
outsb
gs
rcl
lds
adc
or
mov
inc
insl
inc
mov
cs
lret
xchg
mov
cwtl
callw
sarl
sbb
mov
in
add
pop
outsl
orl
stc
dec
rcr
mov
js
out
lahf
int3
add
mov
jo
loope
repz
jle
pop
cltd
test
cltd
mov
cmp
fnstenv
das
rcrl
rorl
mov
push
cli
inc
add
add
xchg
add
jecxz
pop
xor
in
xor
shrb
sub
add
lahf
scas
push
sbb
cli
std
sbb
pop
xor
sub
je
mov
push
push
dec
es
mov
stos
mov
push
mov
xchg
dec
rcrb
sub
dec
push
sti
lret
xor
add
les
add
inc
dec
dec
mov
pushf
or
shrl
popa
fwait
push
aas
sbb
aaa
lock
sbb
enter
test
lahf
enter
sbb
xor
inc
inc
test
jae
sub
ffreep
in
push
popf
or
pop
mov
rorb
loopne
dec
ss
inc
hlt
mov
push
out
pop
outsb
loope
xor
mov
jecxz
shll
jecxz
adc
test
into
or
ret
das
dec
movsl
stc
out
xor
es
dec
test
xchg
iret
int
push
cmpsl
aad
mov
shrl
shlb
and
mov
stos
fistpl
out
cwtl
and
pop
fs
in
xor
mov
cmpsl
jmp
orl
adc
les
loope,pt
in
sbb
mov
xchg
xchg
mov
rorl
xor
dec
and
dec
xor
xchg
push
mov
popa
or
mov
movsl
cmp
out
pop
mov
stc
loop
xor
dec
mov
push
pop
mov
inc
xchg
es
xchg
pushf
xlat
imul
pop
jmp
lea
cmp
dec
jnp
cmp
repz
mov
out
bound
testl
fldenv
stos
sub
fnstsw
mov
insl
es
inc
popf
loope
aam
mov
cmpsb
xor
pop
mov
inc
popl
add
sbbl
push
pop
sbb
cmp
scas
sahf
imul
inc
sti
lcall
loopw
or
push
repz
xor
adc
xchg
mov
mov
sbb
jnp
sbb
and
add
mov
lcall
sahf
mov
fcoml
push
jne
mov
test
mov
imul
jmp
push
frstor
rcrb
out
movsl
or
mov
pushf
dec
ja
insl
and
xchg
cmp
xchg
jb
pop
pop
xor
push
daa
cwtl
out
ss
or
out
arpl
xchg
mov
mov
cmp
es
xchg
iret
int
out
andl
dec
adc
ja
repz
jne
out
icebp
pop
jp
frstor
push
xchg
pop
jnp
movsl
div
sar
es
pusha
ljmp
push
aam
lds
ficoms
xor
sbb
cmp
das
xor
jecxz
xchg
sbb
ja
sbb
dec
movsl
cmpsl
xor
mov
je
mov
ja
pop
jmp
sbb
rcl
ret
aas
sahf
pop
scas
cmp
xchg
mov
outsb
ds
ss
dec
pop
dec
inc
mov
fs
in
xchg
mov
int3
push
jno
xor
xor
dec
jne
jmp
into
push
sub
cli
mov
mov
mov
stos
xchg
ja
ja
xor
cli
xchg
adc
lea
inc
outsb
dec
push
lahf
nop
pop
or
lcall
mov
pop
std
cltd
lds
and
and
dec
sub
jg
pop
mov
sbb
ret
mov
cs
shlb
mov
xchg
mov
jns
jbe
xchg
xchg
in
ret
lock
adc
jno
or
in
and
xor
jmp
test
out
stc
sub
inc
and
pop
sbb
popf
inc
and
adc
cmp
movsb
xor
divb
pop
cmp
scas
inc
repnz
sahf
inc
dec
and
push
xor
das
rclb
xlat
in
outsl
dec
gs
pop
das
xor
repnz
aas
fs
cmp
push
add
lock
sti
clc
fsubs
inc
shrb
mov
insb
clc
cmc
push
stos
or
jbe
std
mov
pop
aam
aaa
jnp
pop
bound
xchg
pop
pusha
jne
jo
fildl
pop
cmp
ja
jmp
and
lret
or
js
add
push
int
jg
fidivl
and
push
frstpm(287
lret
lds
pop
xlat
cmpsb
xchg
std
fcoms
pop
icebp
mov
aaa
rcl
pop
repz
sub
test
inc
adc
aas
mov
mov
add
mov
xchg
loope
push
adc
push
das
lods
mov
add
mov
jb
and
sahf
adc
or
addr16
cmp
mov
mov
movsb
push
xor
loope
popa
movsl
mov
xchg
out
cmp
adcl
pop
push
aas
test
call
aam
xor
jno
aaa
ret
xor
cltd
mov
xchg
sbb
icebp
scas
mov
push
sub
lea
xlat
adc
sbb
dec
xlat
and
inc
xor
ljmp
mov
pop
pop
cmpsb
loopne
jmp
cmpb
rcr
fwait
lret
icebp
cs
arpl
add
dec
repnz
xor
std
pop
or
stc
cmp
dec
cld
cli
mov
movlps
dec
sbb
push
push
jbe
jns
dec
imul
enter
sbb
fcomp
inc
popf
push
sub
inc
cmc
add
fnstenv
sarb
cmc
pop
and
jg
mov
pop
dec
jne
mov
adcb
dec
push
jnp
push
xchg
sub
clc
mov
xchg
lret
out
and
pushf
movsl
mov
xchg
repnz
into
imull
mov
test
shl
nop
adc
lret
rorl
mov
adc
jle
das
scas
adc
inc
adc
in
mov
cwtl
mov
xchg
hlt
mov
repz
jmp
cli
xor
lea
push
dec
daa
inc
insb
sti
dec
jle
sahf
out
pop
mov
cmp
daa
or
mov
hlt
ds
xchg
adcl
lock
pop
or
cmp
or
inc
cs
addr16
sbb
xchg
xchg
ror
adc
mov
or
sti
rcll
push
adc
cmp
push
mov
xor
inc
mov
clc
in
xchg
and
enter
pop
pop
and
pop
pop
xchg
fisubrl
lret
popa
mov
das
mov
in
rorl
add
push
popf
add
sub
rolb
fdivrl
repnz
sub
cmp
out
lds
jae
or
bound
decl
pop
mov
cs
pop
ljmp
jo
popw
cmpsl
sar
xchg
cmp
xchg
lahf
call
imul
inc
sub
adc
cmpsl
cmp
mov
sti
paddb
inc
push
push
xchg
and
and
adc
cmp
dec
lahf
call
inc
fs
mov
inc
imul
cmpsb
stc
sbb
mov
inc
cmp
mov
inc
add
and
pop
adc
sub
xchg
jp
movsl
ljmp
dec
inc
nop
push
call
and
inc
sub
and
inc
movsb
outsl
imul
xchg
and
in
cli
fcoml
repnz
xchg
cmp
repnz
jo
jnp
cmp
pop
and
mov
sub
add
shll
push
jb
push
lods
jle
insb
sbb
fistps
mov
inc
mov
stos
cmp
ss
sub
fwait
hlt
sub
scas
jne
mov
or
rolb
jns
iret
jl
out
and
es
xbegin
ffree
insb
daa
pusha
loopne
mov
fstp
sti
lods
push
dec
cmc
inc
add
mov
out
jge
jle
rol
and
fmuls
repnz
iret
aas
cwtl
nop
xor
jb
les
call
push
repnz
in
jg
lods
dec
mov
mov
lret
jns
lret
mov
mov
out
shrl
xor
fstpt
das
sub
cmp
fs
pop
aam
cs
mov
stos
aas
lret
xchg
lahf
rcr
out
cmp
inc
xor
iret
lock
aaa
adc
fsub
jge
test
outsl
push
jg
xchg
aad
adc
es
jb,pt
jp
and
out
cmpsl
jns
pop
jg
jp
and
push
xor
call
pop
jne
icebp
xchg
mov
dec
xor
mov
xchg
shl
jge
aam
sbb
aam
sbb
pop
int3
sbb
mov
gs
and
cld
mov
lea
movsb
cwtl
mov
or
imul
out
popa
icebp
je
adc
pushf
pop
cmp
push
xor
pop
ljmp
inc
push
jge
mov
imul
dec
mov
xor
mov
dec
sbb
jecxz
mov
outsl
and
lds
jecxz
inc
dec
popa
jns
mov
cmp
scas
xor
push
mov
inc
sub
adc
repz
add
dec
inc
inc
out
sub
jge
inc
imul
push
mov
aam
in
rcr
mov
clc
ss
lcall
push
movsb
cmp
adc
cmp
mov
mov
mov
push
jp
sub
loop
mov
jnp
repz
and
repz
dec
aad
pop
jge
lds
add
cmp
sub
mov
insl
lods
lret
jns
mov
mov
lret
pushf
cltd
in
data16
pop
xchg
sti
fstl
adc
iret
inc
jne
inc
pop
inc
arpl
sbb
adc
jae
mov
mov
sbb
xlat
shlb
jb
cmp
dec
push
xchg
add
pop
cmp
sub
out
mov
nop
or
lds
sbb
add
and
into
sahf
inc
mov
dec
mov
jns
xor
dec
sbb
fidivs
push
sbb
repnz
adc
shrl
mov
lods
cmpsb
dec
mov
ds
sbb
push
mov
pop
mov
addb
loopne
xchg
lret
xor
dec
movsl
pop
roll
pop
scas
xchg
push
mov
push
mov
out
xchg
pop
mov
jp
push
ss
inc
mov
insl
mov
fists
jle
filds
fsubr
ficoml
addr16
and
clc
movsb
xchg
gs
lock
das
sub
ss
jge
inc
leave
fistps
negl
dec
mov
mov
xor
cli
mov
popl
test
movsb
pop
sub
inc
cmp
sub
in
adc
cmc
js
call
enter
divb
insl
icebp
bound
fisubl
inc
add
lahf
inc
cwtl
int
into
cmp
fidivrl
movsb
out
dec
fucomp
fdivrp
inc
sub
gs
lret
aam
sub
cltd
shll
cmp
xchg
imul
jo
sahf
fldenv
test
mov
je
dec
repnz
shll
xor
cmp
mov
mov
rcrb
pop
and
loopne
add
mov
stos
adc
iret
mov
lret
pop
in
xor
fidivrs
aad
cmpsb
in
popa
scas
mov
xchg
push
xor
mov
pushf
cmpsb
out
jnp
sub
pop
jp
jp
sbb
call
pop
sarb
sarl
aam
jg
bound
test
mov
mov
or
out
mov
mov
scas
jmp
push
inc
push
cmpsb
int
add
mov
daa
jg
xchg
add
leave
mov
outsb
into
dec
leave
movsb
add
in
lea
les
incl
cmc
out
or
cs
outsl
inc
out
jnp
sbb
mov
pusha
aad
loop
rcll
test
push
fldenv
sbb
daa
cld
fisttps
xchg
movsl
std
lods
mov
dec
pusha
je
outsb
push
popa
pop
add
sub
cmp
mov
lahf
inc
lock
test
cmp
push
xchg
ja
daa
cmpsb
and
and
push
mov
rorl
mov
les
and
jns
sarb
add
push
dec
jg
lods
scas
sbb
roll
popf
dec
lods
jge
cwtl
les
inc
mov
add
add
cmpsb
add
push
repnz
and
or
mov
or
sub
jo
add
add
inc
out
xchg
mov
enter
push
call
xchg
cwtl
push
push
cmp
mov
pop
adc
loopne
jnp
inc
inc
mov
lahf
bound
sbb
inc
pop
pop
pusha
lcall
idivl
xor
xchg
js
imul
xchg
arpl
loop
in
aas
loope
push
jge
ret
adc
enter
pop
cltd
sbb
fld
jl
lds
jnp
negb
cvtps2pd
inc
int
sbb
mov
sub
add
das
dec
xchg
cli
pop
aas
not
jbe
daa
hlt
mov
mov
shll
movsl
cmp
dec
push
mov
jmp
iret
fldl
je
mov
mov
or
sahf
cmp
lods
pop
addr16
hlt
push
cmpsl
pop
and
int3
push
in
test
adc
pop
and
iret
movsb
xchg
data16
or
sub
push
jns
dec
scas
ret
nop
in
xor
add
mov
scas
in
les
nop
inc
rcrb
outsb
mov
jb
push
cld
mov
cmp
cld
not
std
cmp
out
xor
mov
mov
xchg
loop
and
adcl
xchg
xor
xchg
jmp
and
jbe
xchg
ret
sbb
test
xchg
mov
cmp
push
push
mov
out
cmp
lret
loope
lea
or
pop
add
in
jp
jo
ljmp
cmpsb
mov
xchg
push
mov
jl
adc
mov
pop
cmp
movsb
jae
or
push
jge
imull
mov
notl
fprem1
addr16
push
into
lcall
and
rorl
mov
icebp
xor
cli
mov
dec
or
pop
and
sahf
mov
pop
dec
dec
in
hlt
pop
push
push
inc
jb
jns
cmc
loop
sti
leave
call
pop
mov
inc
add
mov
inc
cltd
mov
push
adc
xchg
mov
adc
int3
jge
sbb
lock
loope
sub
daa
in
dec
mov
pusha
push
mov
mov
cmp
fisubs
das
mov
lea
dec
mov
sub
sub
pop
in
inc
lea
fbld
scas
jnp
sub
fdivl
and
adc
jecxz
dec
sub
ds
ret
cmp
and
movsl
imul
jg
jae
js
or
lods
lahf
cwtl
inc
pop
adc
mov
repnz
dec
fidivs
addr16
repnz
jmp
lret
push
cli
sub
fnstcw
sarl
out
push
or
sti
mov
aam
dec
jmp
es
xchg
jmp
in
fiadds
sub
int
jns
mov
popa
icebp
xor
cmp
test
cs
aam
pop
push
fsubrs
sbb
mov
xor
shl
push
cld
pop
and
mov
sub
sbb
ss
in
dec
arpl
mov
inc
out
mov
push
fildll
cmpsb
mov
rorb
js
imul
mov
scas
pop
or
fdivrp
mov
mov
outsl
cmp
mov
push
je,pn
imul
jb
je
dec
ret
pop
pop
jo
jo
pop
sub
into
cli
jno
pushf
inc
jl
test
lret
iret
mov
dec
mov
notb
mov
fs
pop
fnsave
rol
xor
push
adc
aas
stos
dec
mov
jbe
jb
and
lock
sti
cmp
bound
sub
push
movsb
xchg
xchg
outsb
out
and
adc
sti
fwait
xor
out
push
add
push
jmp
mov
in
xor
arpl
sar
lods
hlt
movb
stc
jmp
and
fiaddl
repz
push
es
fadds
adc
ljmp
xchg
fstpt
pushf
in
aas
pushf
out
xchg
icebp
jl
jb
lahf
jo
lds
loop
lret
sub
clc
push
imul
sbb
jl
es
jo
and
cmpsl
dec
insb
das
out
int
stos
xchg
cmpsl
and
cmp
sbb
mov
cmp
or
subps
cltd
jl
mov
outsl
and
sub
movsl
in
ja
mov
int
repz
push
int3
rep
filds
cld
movsl
mov
inc
std
inc
adc
cmc
lds
mov
movsl
adc
insb
mov
xchg
push
and
mov
sub
in
pop
jo
int3
xor
mov
jmp
sub
ss
dec
lock
cmc
jg
mov
iret
sbb
or
shlb
push
dec
inc
sbbl
sub
mov
cmp
mov
inc
std
out
push
mov
xor
and
pop
mov
popa
xor
movsb
jge
mov
xor
leave
stos
insb
or
je
push
mov
sbb
pop
sbb
adc
shrd
cmpsl
insb
jbe
pop
faddp
pop
mov
testb
inc
inc
ss
push
mov
cld
or
cmp
shlb
movsl
subl
pop
aad
jb
jb
lret
cmp
repz
cmc
or
jae
fidivrs
leave
int
lds
insb
mov
pop
fists
xlat
xchg
ret
xchg
mov
xchg
loop
jle
inc
negl
pop
js
int3
into
adc
mov
or
dec
fdivrl
popf
in
jl
mov
mov
and
outsl
jno
pop
cld
jns
iret
jns
sti
cmp
cmp
inc
sub
and
cmp
int
test
cmp
enter
add
mov
dec
cs
imul
negl
imulb
out
sbb
jmp
stos
dec
scas
imul
jne
cmpsl
jmp
stos
push
cmc
lret
mov
lea
mov
adc
aas
rcrb
aam
repz
mov
rorb
cmp
in
push
dec
pushf
loopne
ja
push
add
pop
lods
clc
mov
sbb
enter
aaa
dec
scas
mov
aas
xor
js
and
fs
pusha
daa
add
sub
cli
or
push
ljmp
sub
inc
cmp
inc
das
xor
mov
jae
jp,pn
in
js
popf
sbb
daa
xor
loopne
pop
loop
lahf
lcall
xlat
mov
xchg
push
call
jg
inc
mov
inc
ds
or
xchg
or
xchg
mov
push
imul
mov
pop
cs
fldenv
scas
and
mov
dec
sbb
adc
pop
pop
xlat
dec
imul
movsb
cmpsl
adc
xchg
enter
xchg
mov
out
cmpsb
insb
aad
jp
arpl
mov
xchg
fiadds
jnp
mov
fsubl
cmpsl
sub
inc
loope
mov
scas
in
imul
rcr
mov
mov
fidivl
nop
lea
dec
stos
mov
sbb
add
shr
sbb
jge
pusha
or
jp
js
cmp
iret
pushf
stc
pop
xchg
les
lea
or
shl
add
inc
mov
loop
sbb
out
xor
es
loop
adc
adc
nop
popf
sbb
lods
ffree
xor
test
hlt
jp
stc
mov
fcoms
fwait
mov
dec
bnd
out
inc
aam
int3
aaa
cmp
mov
les
sbb
fistps
and
cli
call
aas
je
xchg
lods
ds
sub
mov
fstpt
arpl
adc
jb
daa
mov
adc
add
push
mov
sub
scas
mov
int
jecxz
lea
xor
sbb
sub
mov
outsb
xchg
js
sbb
stc
pop
cmp
sbb
fwait
lods
mov
mov
fs
pop
sbb
mov
pop
sti
push
loop
out
jecxz
push
lods
fs
or
popa
jmp
pop
lret
mov
and
cmp
and
mov
iret
std
int
stos
jne
popf
sahf
outsb
push
dec
ja
mov
push
addr16
jo
pop
popa
shll
mov
xchg
mov
clc
dec
mov
fisttpl
jge
inc
cmp
sti
in
mov
mov
mov
aas
jle
sub
mov
xchg
stos
cltd
scas
mov
cmc
adc
daa
mov
adc
mov
xlat
arpl
xchg
aam
mov
es
repz
cmc
xor
and
jmp
push
in
mov
clc
jl
std
je
fstpt
add
push
mov
xchg
clc
jl
outsb
data16
cmp
shll
mov
add
iret
pop
mov
repz
xchg
lahf
outsl
aas
pop
jecxz
jl
es
fisttpll
add
or
jns
cli
xlat
push
mov
mov
shrb
divl
cmp
negl
repz
xor
jns
push
aas
xchg
sub
cmpsb
pop
adcl
call
pop
aas
aas
pop
ja
addr16
lcall
arpl
pop
mov
in
jno
push
mov
xor
std
lcall
jecxz
daa
jp
mov
xlat
clc
loope
push
jle
jne
out
outsl
loop
cmp
sar
stc
jp
pop
arpl
loope
scas
xchg
clc
jbe
mov
lahf
scas
fwait
clc
mov
mov
movsl
pop
push
mov
fwait
jg
sbb
movsl
js
xchg
sbb
fmull
std
jg
mov
std
adc
pop
jg
cmp
ds
stos
sub
fisttps
loopne
sub
fs
dec
ficompl
arpl
jle
js
pop
dec
aam
repnz
inc
adc
out
xor
call
xchg
xor
cmp
cmpsb
xchg
adc
xor
int
jne
imul
cli
fsub
fdivl
add
imull
into
fnstcw
mov
fstps
imul
or
ds
cwtl
inc
push
and
mov
and
lds
push
outsl
mov
in
pusha
clc
jnp
cmp
pushf
outsl
mov
xchg
pop
xchg
pusha
cmp
imul
movsl
mov
xlat
mov
xor
ja
pop
jae
or
jo
in
adc
mov
ljmp
into
fbstp
jmp
hlt
lds
adc
mov
aaa
xor
and
jle
cmp
test
mov
or
int3
adc
test
push
inc
enter
push
stc
push
jns
fcompl
int3
in
idiv
in
sbbl
pop
xchg
sub
cltd
pop
shrb
inc
sub
adc
add
sbb
fdivl
int
icebp
jnp
push
xor
mov
mov
mov
dec
push
out
jmp
pop
iret
cld
cmpsb
addr16
sar
lret
inc
jne
cld
pop
shlb
mov
xchg
push
cmpsb
das
mov
in
jnp
jo
jne
xor
mov
pop
cmp
sarb
xor
or
icebp
push
inc
pop
ljmp
sahf
lret
jle
scas
ret
or
arpl
out
das
ljmp
pop
xchg
dec
jecxz
loope
sarb
out
mov
sahf
hlt
stos
xor
push
stos
outsb
cmp
sbbl
fdivrp
inc
push
push
jmp
fcomip
das
int3
jns
gs
std
mov
jno
ds
jae
sbb
pop
or
cwtl
jo
scas
cmpsl
into
xchg
cmpsl
mov
jmp
aas
cmp
nop
xchg
aaa
addl
mov
ret
pop
mov
jp
pop
or
les
mov
bound
xchg
notl
xchg
sbb
mov
jns
xchg
mov
ret
fimuls
push
push
mov
adc
sbb
cmp
fidivrs
stc
xchg
xchg
pop
ret
pushf
mov
sub
stos
lret
and
mov
adc
pop
out
adc
shrl
mov
int
jecxz
inc
imul
pop
xor
mov
jae
mov
mov
arpl
fcomp
nop
sub
gs
popf
push
jle
lock
jno
xlat
dec
fs
loopne
add
data16
pop
loopne
jle
pop
cltd
and
repz
xor
sbb
enter
ficomps
sub
sub
lds
std
rcll
mov
mov
test
lods
add
jo
jno
push
dec
mov
xor
insl
cmpsb
enter
arpl
pop
bound
cld
ret
jnp
cld
repnz
iret
adc
fwait
xor
das
pop
mov
decl
mov
sahf
xlat
mov
int
sbb
pop
and
mov
arpl
lock
or
punpcklbw
cld
dec
shrb
cs
cmp
cmc
push
sub
out
pop
mov
mov
add
ljmp
mov
xlat
xor
lds
xorb
fst
sbb
mov
cmpsl
mov
cli
cs
pushf
popa
gs
insl
clc
ret
in
mov
movsl
leave
xor
push
cmpb
pop
sbb
sti
mov
insb
dec
push
xchg
fnstenv
rcrb
push
xor
cs
loop
out
mov
xchg
xchg
in
mov
fcmovb
xor
rcrb
pop
in
lods
repnz
jns
dec
lret
jge
mov
mov
aam
mov
add
or
inc
adc
shlb
lds
pop
shlb
enter
shrl
mov
sub
je
movsl
lods
addr16
mov
or
call
push
sub
subl
push
inc
xchg
test
clc
dec
and
add
fs
and
xchg
lock
or
dec
clc
in
popf
call
clc
cmp
mov
mov
fbstp
aad
aad
ud1
data16
xchg
in
adc
add
add
es
das
cmc
adc
test
adc
mov
or
aaa
lods
out
cld
insb
cmp
mov
mov
inc
sub
inc
rclb
dec
mov
insl
cmp
insl
inc
shlb
pop
leave
sbbb
int3
jnp
loop
mov
outsl
es
aam
fimuls
cwtl
adc
imul
ljmp
inc
pop
inc
cmpsb
push
mov
sbb
inc
jnp
repnz
or
pushf
iret
imul
xlat
inc
push
adc
jo
iret
das
das
stos
call
or
rcll
out
mov
adc
lret
xor
adc
add
sti
mov
jge
add
xlat
jbe,pn
orl
mov
int
jge
add
inc
push
sti
sti
xchg
push
rcrl
add
mov
push
add
popl
movsl
movsw
jp
lret
mov
dec
in
jo
js
xlat
pushw
sub
mov
dec
frstor
xor
inc
push
pop
loope
pop
pop
inc
mov
mov
pusha
jo
andl
mov
add
iret
push
rcrl
sti
inc
cmc
rorb
cmpsl
lods
into
aad
push
fists
ret
pop
les
mov
inc
mov
mov
mov
push
cmp
mov
pusha
or
std
cmp
test
fcmovb
jo
sbb
mov
push
xor
add
es
jnp
pop
sub
enter
xor
call
stos
sbb
jno
jle
fcoml
pop
in
inc
fisubl
jb
inc
xor
xor
mov
add
aad
xchg
sub
mov
pop
push
jmp
push
push
jmp
adc
shl
or
xor
xchg
jl
dec
les
test
jle
loopne
add
jmp
xlat
mov
jecxz
jae
xor
cltd
add
rorb
xor
orl
ret
popf
push
dec
lea
sbb
bound
fnstsw
and
dec
mov
ljmp
in
xor
popf
cmpsl
push
roll
sub
clc
sub
rclb
jge
mov
xchg
out
xor
cwtl
jecxz
xor
shrb
jbe
in
clc
fwait
test
iret
cs
pop
testl
pop
mov
adc
fimull
xor
adc
and
out
addr16
add
addr16
pushf
loope
aaa
int3
imul
xor
and
xor
and
bound
ja
and
test
xlat
out
test
mov
mov
push
pop
cwtl
and
mov
out
test
out
into
negl
jl
jg
and
inc
in
add
lcall
add
in
push
mov
out
mov
js
and
cli
mov
mov
add
mov
test
loop
add
cmpl
or
repnz
add
pop
dec
push
jge
push
orb
int3
js
inc
outsl
cltd
stos
push
jge
clc
add
lods
push
and
sub
or
sub
push
fiaddl
dec
loop
out
push
adc
test
adc
sub
mov
inc
dec
sti
pop
sub
dec
test
sar
add
test
cli
in
cmpsb
test
dec
cmp
xchg
xchg
mov
mov
outsb
cmpsl
sub
sbb
mov
mov
mov
xabort
dec
lods
mov
sti
add
out
pushf
xchg
mov
aam
stos
int3
xor
dec
js
lods
or
sbb
addl
rcll
add
mov
add
fs
cmp
and
clc
addr16
jns
es
dec
test
out
or
outsb
andl
mov
leave
test
pushf
jmp
push
push
push
push
lods
sbb
add
add
ret
sbb
addr16
pop
mov
int3
sub
test
cmpsb
sbb
pop
mov
xchg
addr16
mov
popa
das
ret
inc
out
ljmp
lahf
repnz
xchg
fs
dec
cmp
mov
mull
sub
cmp
shl
xor
push
adc
or
xchg
das
fiadds
xorb
mov
inc
or
xor
pop
cs
mov
data16
ficompl
xchg
sarb
adc
jp
push
ss
in
add
mov
mov
adc
jl
push
inc
les
mov
lea
mov
sub
pushf
fldt
pop
push
and
xchg
lock
inc
ds
dec
xchg
push
jmp
or
adc
lret
pushf
dec
adc
ss
push
xor
stos
inc
or
imul
adc
test
clc
outsl
subb
cmpsb
inc
fs
mov
inc
movsl
mov
fistps
mov
lods
mov
lds
call
pop
mov
sbb
jne
mull
xchg
in
add
arpl
cmp
in
repz
sbb
mov
push
popf
stc
fwait
push
cmp
clc
out
push
cwtl
mov
aad
imull
aad
mov
push
or
push
test
xor
xor
xor
lahf
mov
dec
loop
ret
sbb
cmp
cs
sbb
adc
fsubrl
int3
testl
in
mov
sub
je
cld
mov
frstor
sbb
lret
rorl
xor
inc
and
jmp
sub
add
sub
xor
fldenv
insl
sti
push
mov
xchg
push
mov
add
xchg
push
push
push
jns
ja
jno
adc
and
adc
cli
sbbb
or
or
int
jp
mov
push
push
and
or
xchg
mov
fcoms
test
and
shlb
push
pop
js
pop
mov
inc
xor
mov
pop
push
ljmp
pop
roll
jno
aaa
cltd
and
lahf
ja
inc
and
jno
js
addr16
fcoml
sub
inc
inc
adc
sbb
pop
adc
or
dec
outsb
or
and
push
push
cld
sub
test
push
les
lahf
pop
loope
mulb
repnz
outsl
mov
xor
cld
xor
call
lock
test
pop
mov
xchg
pop
jp
lea
xchg
adc
push
faddp
test
adc
fnstsw
cmc
inc
mov
cmp
mov
pop
mov
mov
fstl
call
pushf
mov
sbb
inc
add
dec
mov
add
or
mov
aam
divb
lock
adc
xor
push
cmp
sbb
sbb
enter
or
sbb
pusha
sbb
or
dec
pusha
sub
sbb
sbb
loopne
or
xor
mov
jge
push
into
loopne
push
cmp
jl
shlb
lret
sbb
iret
and
loopne
push
out
xor
jnp
dec
or
xor
jg
jo
shll
lds
andl
vmovntps
icebp
lret
or
or
iret
loopne
subl
sub
ss
lods
adc
call
dec
ss
mov
xlat
js
mov
cmp
push
repz
lahf
cmp
mov
inc
das
pop
repz
xchg
push
xor
push
adc
or
scas
cmp
in
pushw
jnp
cld
push
mov
xchg
add
cmp
insb
jmp
jne
or
cmpsl
movsb
cmp
sbb
mov
push
int3
sbbb
mov
rorl
je
dec
dec
xor
jle
lock
add
hlt
cmp
mov
cmp
mov
imul
icebp
adc
add
inc
adc
add
or
fucomip
adcl
nop
mov
or
popf
inc
inc
jbe
xchg
ja
cmp
scas
push
jle
mov
icebp
aad
sub
mov
psrlq
adc
dec
push
xchg
rolb
pop
xlat
jb
pop
call
mov
lods
lret
test
add
mov
xor
imul
shl
push
fsubrl
push
stos
push
pop
inc
fldt
sbb
mov
lods
stos
enter
mov
out
popa
andb
fdivl
pushf
fdivs
pop
test
mull
ret
mov
sbb
in
or
jbe
push
mov
push
xchg
lahf
aam
push
adc
mov
xor
or
out
xchg
std
push
fs
stc
sub
jb
dec
insb
inc
pop
sahf
insb
adc
notb
jo
or
jo
push
and
imul
add
sarl
icebp
sti
jl
ljmp
gs
xor
push
jns
or
insb
or
xchg
push
inc
adc
lock
pop
jmp
frstor
push
scas
inc
pop
jb
jae
movb
and
mov
clc
imull
xchg
xor
add
mov
and
pop
cmc
std
push
cmpsl
aam
jne
jecxz
xchg
push
inc
in
lahf
ljmp
xchg
adc
mov
fwait
pop
cmp
and
int
sbb
or
mov
aam
push
push
push
mov
dec
jo
test
outsb
or
mov
mov
jp
jl
pushf
sahf
gs
dec
outsb
and
mov
push
das
sbb
les
lea
enter
push
jb
push
nop
mov
inc
incl
mov
les
adc
popf
xor
clc
add
arpl
out
or
daa
aaa
nop
jb
mov
adc
inc
pop
inc
or
jmp
dec
in
inc
ret
inc
enter
jecxz
out
pusha
jl
stos
mov
dec
mov
jo
xchg
xchg
xchg
cmpsl
rorl
xorb
ss
test
xchg
mov
je
cwtl
mov
mov
in
les
mov
aas
repnz
test
fxch
in
in
insl
out
or
mov
fldl
ja
popf
lahf
in
mov
gs
fxch
into
jbe
enter
testl
fnsave
cmp
inc
in
mov
jbe
jge
in
sub
lahf
dec
loop
dec
pop
sbb
mov
imul
repz
js
jecxz
cmp
mov
sub
mov
xchg
xchg
jnp
dec
cli
lea
pushl
push
fdivl
dec
pop
or
jg
stos
testb
call
mov
push
out
push
test
sahf
add
loopne
rorb
add
sar
jmp
outsl
dec
jo
push
bound
popf
or
pusha
hlt
fldt
fs
aas
or
cli
push
ret
xchg
cli
in
mov
inc
imul
pop
mov
inc
add
test
mov
inc
cld
or
loope
std
data16
mov
lods
loop
adc
imul
pop
lds
shrb
xchg
movsl
pop
mov
repz
xor
mov
mov
das
sbb
sub
pop
pop
or
lds
les
jnp
mov
insl
sub
cld
mov
fucomip
in
sub
fndisi(8087
or
pop
jb
into
jecxz
and
cs
xchg
mov
push
mov
stos
outsb
fisubrs
sbb
aaa
das
outsl
dec
shrl
aaa
fiaddl
inc
addr16
lods
lock
adc
popf
sbb
loope
fldl
icebp
jbe
mov
mov
xlat
repnz
cmpsb
stos
xor
lret
nop
out
mov
js
cmp
push
sbb
pop
invd
dec
aas
pop
fmull
aad
cmpb
cwtl
fisubrs
fs
stc
jne
movsl
daa
and
insb
xchg
ret
outsl
jne
mov
sbb
ljmp
push
ljmp
mov
sbb
and
mov
aaa
push
pusha
jnp
push
pop
cmp
xor
icebp
ljmp
inc
leave
sbb
mov
and
test
les
pop
test
lea
scas
scas
mov
sbb
addr16
cmc
roll
dec
sbb
jg
stos
jne
hlt
or
test
push
jno
pop
ret
cmc
fstp
adc
or
jbe
mov
stc
test
adc
out
les
cs
popf
js,pt
cltd
inc
push
mov
xor
test
loope
jl
mov
xor
pop
mov
jmp
or
loopne
loope
mov
mov
pop
jnp
movsl
jmp
push
int3
mov
aam
out
adc
sub
dec
pop
adc
adc
pop
test
inc
shlb
xor
sti
jmp
push
int
idivb
rolb
xchg
sbb
cld
pop
stc
shll
insl
mov
out
lods
mov
mov
cld
sbb
lods
jnp
divl
shl
lds
pusha
inc
jl
loop
pop
lods
or
or
mov
push
lods
adc
mov
das
ljmp
mov
adc
mov
testb
cmp
dec
cmp
imul
xchg
jo
ja
aad
addl
mov
repnz
pop
andl
std
dec
loop
push
imul
in
popa
std
xchg
addr16
sbb
into
add
addr16
mov
dec
shrb
push
scas
fcoms
std
popf
mov
mov
add
scas
and
cltd
sbb
rcr
push
mov
push
sub
xchg
pop
push
pop
daa
imul
pushf
mov
dec
sub
sbb
out
pop
loopne
lret
andl
cmpsl
push
push
shlb
outsb
fdivr
nop
xchg
pop
cmp
inc
lret
jl
hlt
xchg
test
sbb
dec
pushf
sub
jne
sub
ja
mov
adc
push
cltd
inc
test
xchg
xchg
mov
jp
out
adc
leave
cmpsl
pushf
jns
jmp
mov
mov
outsb
cmp
push
outsb
call
xchg
loope
push
mov
loopne
sub
into
dec
push
ret
mov
fistpl
in
cmpsl
stc
fnstcw
call
add
dec
mov
push
sbb
nop
jmp
adc
mov
inc
or
or
mov
imul
inc
dec
mull
xor
cmp
mov
push
movsl
gs
push
arpl
es
mov
pop
test
pop
mov
insb
std
arpl
cmpsl
sbb
std
rcrb
lock
sbb
cmpb
pop
ret
push
rcll
rorl
inc
clc
dec
or
fcmove
push
add
repnz
mov
jg
cmp
shrl
pop
out
mov
cld
sub
dec
pop
inc
and
cmp
cmp
mov
and
pop
out
push
dec
dec
leave
sbb
insb
or
mov
mov
and
cmp
pop
in
popf
rorb
cmpsl
add
xchg
inc
shr
mov
loop
xor
adc
mov
push
pop
incb
dec
fldl
fldenv
pop
fimuls
psubd
imul
push
js
roll
ja
fprem1
add
mov
pusha
pop
dec
cmpsl
addb
add
test
imul
loopne
sbb
aas
stos
mov
fxch
or
dec
pop
sbb
outsb
cmc
es
ss
xchg
popf
movsb
or
rorb
rcrl
rolb
or
rolb
andl
sub
jns
mov
dec
in
loopne
out
insl
mov
pop
inc
sbb
mov
out
inc
push
push
pop
jbe
mov
cli
and
push
decb
sahf
loopne
stc
inc
sbb
cmc
lods
mov
and
aaa
pusha
icebp
pop
cmp
iret
xor
fwait
push
leave
dec
cli
aaa
inc
jl
dec
mov
icebp
fpatan
inc
data16
subl
ljmp
mov
nop
popf
in
in
aam
cmpb
cmp
cmp
sbb
push
jg
sub
gs
push
mov
shll
mov
inc
aaa
iret
mov
adc
pop
mov
and
gs
out
pop
or
mov
fs
push
in
int
in
insb
adc
ret
aam
imull
je
fidivrs
mov
test
cmpb
adc
push
movsb
cmpsl
lock
add
test
inc
loop
mov
movsb
fdivrl
mov
add
inc
push
pop
mov
enter
mov
mov
popf
aam
in
sti
aad
fildll
arpl
xchg
rcl
clc
pop
gs
loopne
repz
int3
add
xchg
aas
pop
ljmp
iret
sub
mov
iret
outsl
xchg
je
scas
mov
test
mov
cli
dec
push
ja
int
test
aas
popl
lods
lods
lods
negb
ljmp
movsl
movsb
add
jp
dec
pop
xchg
lods
jg
add
xchg
cmp
dec
bound
aam
add
jb
jnp
loopne
sbb
repz
jp
scas
pop
push
pushf
mov
xchg
sarl
xor
leave
popf
inc
adcl
cmpsl
jmp
enter
out
add
jg
mov
negb
test
out
xchg
pop
pushf
inc
or
mov
adc
or
xchg
jne
xor
adc
ja
loopne
imulb
enter
addl
mov
shll
or
lods
sub
mov
cmpsl
push
ljmp
mov
mov
adc
or
dec
sti
push
xchg
lret
cmp
sbb
mov
mov
lds
cmc
sub
dec
idivb
inc
cmpsl
inc
mov
cli
frstor
stos
mov
push
cmp
in
jg
shrl
push
and
int3
loope
sub
xchg
sbb
push
insb
ret
or
int3
jno
push
les
jb
jno
aad
js
cmp
out
inc
adc
mov
push
enter
popf
and
ss
mov
shll
inc
push
add
mov
cmpsb
dec
lds
in
xor
bound
xor
adc
sub
nop
lret
sarb
cmp
shll
loop
mov
mov
sti
std
push
test
and
popf
sarl
xor
aad
jecxz
les
fs
jl
gs
add
inc
aaa
outsb
xchg
std
pop
or
out
sbb
push
jns
cs
es
daa
out
lods
xchg
dec
js
mov
loop
out
imul
adc
stc
mov
dec
gs
jo
jmp
cmp
int
lods
and
xlat
fisttps
sub
aam
mov
cmp
fsubl
loope
andb
xor
leave
scas
aaa
mov
mov
sbb
out
mov
into
ds
loope
je
adc
lock
push
loop
imul
xchg
outsl
sub
mov
jecxz
cmc
mov
inc
lcall
add
pusha
pop
push
or
cld
js
cs
inc
mov
jg
jo
add
mov
shll
pop
lock
into
loope
bound
push
lods
lock
push
loope
push
pop
lahf
lret
and
cmpsl
mov
imul
call
addr16
xchg
xchg
cli
push
jmp
imul
pushf
pop
ljmp
push
pop
xor
sub
movsb
pop
inc
push
jl
sbb
outsl
inc
push
mov
cmpsb
pop
ds
outsb
je
addr16
jmp
dec
pop
frstor
xchg
lock
jp
inc
fisttpll
arpl
arpl
pop
lods
pop
mov
pusha
push
xor
adcl
pop
je
loop
ss
and
mov
push
pop
cltd
ss
aas
sub
ds
call
daa
out
hlt
fsts
adc
pusha
xor
xor
fwait
xchg
xor
dec
mov
daa
arpl
gs
ss
aam
or
aas
rol
jne
rcr
inc
jns
shrb
mov
mov
jmp
leave
sbb
aas
leave
push
or
lahf
in
imull
fsubl
fld
lock
or
dec
call
sar
fistpl
idiv
dec
fsubrs
repnz
sbb
adc
mov
cwtl
cwtl
add
mov
fldt
fsubp
inc
add
enter
nop
dec
repnz
xor
xor
int
lcall
push
mov
push
add
gs
add
add
mov
movsb
add
int
push
push
mov
les
pusha
icebp
xchg
pop
out
mov
jmp
dec
mov
xchg
std
adc
lret
jno
sahf
cld
push
lret
int3
mov
jp
lea
aam
add
xor
bound
loopne
push
fistpl
mov
clc
sahf
rcll
movl
inc
add
insb
lret
rolb
dec
xchg
shl
aad
gs
in
addl
mov
les
arpl
push
inc
adc
rcll
jo
inc
push
push
sti
mov
in
ret
jbe
loope
repz
bound
repz
cmc
test
leave
add
out
cwtl
and
movsb
adc
xchg
repz
push
push
xor
dec
mov
push
mov
cltd
inc
xor
push
out
mov
inc
sbb
sti
test
aam
jne
clc
push
pop
in
pop
sub
pop
rorl
stos
xor
sub
ret
mov
pop
or
popa
jg
pop
imul
or
lgs
pop
fnstcw
mov
stc
out
jbe
icebp
or
test
aad
dec
xor
adc
mov
pop
xchg
loope
lcall
movsl
stc
and
cmp
jle
out
dec
push
mov
sbb
insb
inc
mov
or
mov
jae
xchg
sbb
leave
cmpsl
fwait
cwtl
fbld
lahf
push
jo
rcll
dec
or
mov
jbe
jecxz
mov
adc
dec
sbb
out
rorb
aas
or
lcall
pop
dec
sub
mov
test
dec
sub
xchg
ja
fs
jl
jbe
xor
pop
jp
cmp
data16
cmp
cld
pop
in
fwait
clc
sbb
repnz
mov
lods
popf
into
stos
push
dec
and
push
cmp
and
dec
rcr
push
pop
jge
mov
sbb
pop
dec
dec
ss
push
pop
jp
gs
jle
sub
loope
mov
dec
shrb
mov
lahf
iret
mov
cmp
fimuls
fwait
xchg
mov
lods
out
push
and
hlt
add
mov
xor
sub
xor
adc
fiadds
xchg
jae
xor
cmp
scas
andl
sbb
xor
xor
adc
daa
aad
xor
and
sbb
pop
push
cmp
pop
cmpb
mov
ljmp
orl
pop
mov
outsb
sbb
ret
popa
jb
jb
sub
mov
dec
mov
mov
stc
and
dec
push
jmp
sub
push
cwtl
pop
mov
shl
popa
in
shll
mov
adc
scas
add
stos
sbb
data16
js
mov
lea
mov
fisubrs
mov
test
sbb
dec
repnz
push
dec
in
or
jbe
sar
inc
mov
xchg
push
lahf
cltd
inc
or
cli
std
aaa
jle
cwtl
fcomip
rcr
ljmp
cmp
xchg
mov
and
mov
jge
out
rol
cmp
mov
pop
orl
arpl
loopne
ret
and
xor
mov
jecxz
and
xchg
jge
and
loope
xchg
mov
fsubrl
mov
xchg
mov
xchg
imul
xchg
mov
pop
xchg
sub
sti
push
cmp
sub
clc
push
add
sbb
mov
in
lahf
mov
lods
inc
dec
jne
mov
dec
push
and
enter
loopne
iret
sbb
or
or
sahf
xor
pop
or
sbb
adc
ffree
cmp
scas
pop
stos
sub
shrl
repz
addr16
xadd
fidivrl
test
je
outsb
mov
int
push
mov
jl
add
xchg
xchg
pop
dec
rolb
mov
inc
or
mov
clc
sub
das
ds
fs
rcrl
decl
hlt
sub
or
in
xor
push
ret
xchg
stc
xchg
jo
pop
repnz
icebp
fbld
inc
inc
das
cmp
mov
sub
fdivr
ja
in
xor
push
cmp
sti
popf
mov
sbb
mov
mov
cld
add
jns
cmp
and
mov
iret
stc
mov
mov
sbb
adc
mov
out
pop
lret
ja
inc
into
mov
shll
push
sbb
cs
sub
push
mov
mulb
sub
je
sahf
call
insl
movsl
xor
pop
inc
mov
arpl
xchg
dec
push
or
jl
movsb
shlb
popa
mov
mov
push
mov
outsb
lods
and
pop
adc
js
std
add
stos
mov
mov
xchg
test
sub
adc
imull
mov
scas
mov
aam
mov
popa
shlb
mov
xchg
cmp
repnz
mov
pushf
orl
mov
jmp
ss
inc
jmp
repnz
xor
or
xchg
shl
adc
mov
mov
xchg
ss
sub
outsb
loope
cmpsb
jae
cwtl
dec
fbld
inc
cmp
dec
fstps
int
jle
stos
scas
push
push
test
push
push
push
push
push
sub
and
lock
sub
sub
add
xor
add
ja
test
inc
lahf
sbbl
dec
popa
mov
add
es
push
xchg
ficoms
in
push
or
ds
cmpsb
adc
push
add
push
lret
clc
stos
negl
sti
fildll
loope
nop
nop
and
cmp
and
mov
sub
movsl
push
sub
ficoms
push
lods
or
xchg
mov
mov
mov
fistpl
sbb
fisttpl
pusha
in
jnp
push
inc
addr16
inc
ss
out
aad
adc
cwtl
jae
xchg
jg
xor
ds
movsb
push
and
inc
and
fcomi
fsubrs
lds
scas
dec
out
mov
push
out
fs
mov
popf
push
jg
add
lahf
call
dec
xchg
mov
adc
mov
ficoms
mov
or
in
imul
fdivp
sbb
in
mov
xchg
sti
push
dec
bound
aam
lret
dec
test
test
scas
imull
lea
outsl
adc
xchg
or
mov
cmp
testl
cmp
aad
ficompl
clc
sub
jecxz
je
test
push
xchg
jge
or
pop
jg
das
ret
ret
push
xor
mov
sub
lea
notb
loopne
les
imul
lods
out
push
xchg
sbb
leave
adc
decb
add
fwait
lret
mov
test
inc
mov
and
xchg
jmp
gs
mov
rcll
jno
rorb
or
out
das
mov
dec
cmp
test
xchg
cli
lods
push
adc
fwait
mov
dec
lds
cmpsb
fwait
lret
loope
or
cli
xchg
push
call
inc
push
pop
xlat
push
push
call
ficomps
fidivrs
cmp
insl
fimuls
out
push
push
pop
sti
push
imull
mov
push
bound
test
icebp
popf
shrb
xlat
xor
dec
aam
imul
mov
fisubs
cmp
mov
lret
add
pop
into
mov
inc
mov
cmp
daa
test
scas
or
pop
or
mov
fadds
movsl
outsl
sbb
mov
or
xchg
mov
push
mov
dec
xchg
inc
rcll
push
ja
mov
sbbb
daa
sub
movsl
mov
lods
mov
and
sarl
call
lock
scas
les
cmpsl
popf
test
mov
cld
jnp
dec
cmpsb
xchg
fistps
mov
push
daa
les
imul
push
mov
sub
push
jmp
out
bound
rolb
inc
sub
out
xor
mov
faddl
les
mov
fucomp
inc
ja
lret
leave
test
xchg
icebp
xchg
add
jo
idivl
enter
push
cmp
out
cmp
mov
pushl
adc
jae
leave
push
or
fsts
xchg
mov
pop
add
iret
cli
push
dec
mov
xor
push
movsl
or
jns
insl
scas
outsl
in
sbb
dec
pop
push
je
test
les
dec
mov
mov
lret
clc
xchg
pusha
jg
sub
or
ficomps
subb
iret
add
pop
lea
push
dec
inc
xor
push
outsb
fsts
dec
jns
push
ret
inc
fstl
cwtl
sarl
ja
lods
pop
testb
mov
enter
mov
addr16
and
iret
js
sbb
adc
inc
icebp
movsb
dec
leave
pop
aam
mov
sub
push
jl
jp
stc
adc
xchg
mov
jmp
xor
push
lea
andb
cld
xlat
cwtl
cli
fisttpl
mov
push
inc
adc
loopne
pop
test
adc
mov
lcall
jl
push
daa
push
lea
mov
dec
call
push
xor
lret
mov
inc
lea
cmp
mov
les
outsb
mov
adc
in
pop
mov
add
and
in
fcoml
and
ss
inc
pop
cmpsl
mov
sub
dec
repz
mov
call
imul
mov
cmpsb
subb
xor
cmp
jns
cmp
ja
adc
repnz
adc
in
sbb
cld
xchg
adc
fdivr
sbb
dec
jl
push
cmp
pop
stc
lods
stc
sbb
pop
mov
imul
shll
cli
xchg
inc
cmpsl
push
ja
test
pusha
mov
sti
pop
pop
fdivr
test
stos
popa
in
sbb
push
cli
stos
pushf
mov
mov
fdivs
pop
lret
inc
testl
cmp
cmp
addr16
jne
push
or
mov
mov
insb
inc
ljmp
ds
fmuls
in
lret
jmp
jbe
pop
mov
xchg
dec
outsl
movsl
mov
les
shll
int
jnp
fwait
das
push
popa
push
xchg
loope
idiv
clc
pop
xchg
push
in
je
mov
add
push
push
xlat
add
dec
cmp
imulb
std
cmc
cwtl
mov
outsb
mov
jecxz
sbb
clc
scas
or
xor
mov
loopne
or
pusha
js
nop
sub
xchg
fistpl
and
js
pop
xchg
ret
es
mov
shrb
loopne
cmpsl
push
mov
clc
mov
and
add
mov
mov
dec
pusha
inc
out
ret
ficoms
mov
repnz
push
in
ret
jnp
xchg
mov
push
and
ret
xchg
adc
push
in
jb
cltd
sbb
ja
mov
ret
cld
push
sbb
cmp
push
mov
cwtl
xlat
pusha
test
stc
pusha
in
out
mov
cmc
cmp
divl
clc
shrb
ret
repz
jnp
lods
jnp
lock
popf
inc
dec
push
push
dec
push
push
xchg
inc
pushf
mov
lahf
xchg
mov
adc
or
jne
mov
lea
xchg
cs
xchg
gs
cltd
pop
ret
mov
in
loopne
aas
mov
mov
pop
dec
jns
jo
add
imul
div
rorb
pop
test
cmp
mov
movsb
push
sbb
dec
sub
inc
les
stc
push
mov
mov
stos
scas
les
xor
or
mov
mov
jne
repz
fbstp
pop
adc
lea
xchg
sub
sar
jo
push
xor
lock
into
mov
jae
mov
lock
dec
xchg
adc
pop
inc
pop
mov
repz
xchg
push
dec
mov
pop
add
fisttps
push
test
mov
enter
jmp
in
add
int
icebp
sub
hlt
cmp
sbb
and
or
jno,pn
dec
sbb
sub
mov
test
repz
gs
adc
test
int
sub
lret
sub
clc
jb
xchg
movsb
or
fcoml
repz
andl
adc
mov
mov
fwait
xor
and
add
iret
mov
or
flds
cmp
in
jmp
xor
out
outsb
xor
cmp
xchg
test
lret
push
test
out
sbb
fdivrp
xor
dec
xlat
mov
iret
cli
mulb
pusha
xchg
sbb
scas
jmp
pushf
mov
mov
add
jg
mov
jnp
xor
fucomp
mov
push
jae
call
dec
xor
mov
inc
mov
add
push
fcompl
negb
xchg
fsubs
sbb
es
mov
stc
cmc
jb
in
hlt
push
repz
and
xor
out
insl
sub
xchg
inc
cli
xor
fcomip
mov
clc
icebp
xchg
adc
loop
pop
pusha
pop
sbb
add
or
or
ljmp
std
cli
sbb
clc
cs
push
ret
fs
mov
lods
xor
mov
add
repnz
mov
push
sub
pop
sahf
inc
push
insb
fdivrs
cmpsb
mov
mov
fistpll
mov
stc
dec
sbb
mov
push
cwtl
js
adc
aam
xchg
inc
jmp
pop
cmp
rclb
and
adc
pop
stc
mov
jo
andb
jns
push
add
imul
mov
popa
mov
js
sahf
sbb
inc
mov
add
inc
in
push
mov
cmp
cmp
stc
insl
and
add
cli
dec
clc
cmp
push
dec
fistps
cwtl
add
or
add
adc
xchg
jge
mov
sbb
jne
add
jg
mov
sub
loop
scas
or
xor
fs
nop
jne
test
ret
mov
aam
jl
testl
lahf
std
mov
mov
pop
popa
les
dec
pop
shl
adc
lock
mov
mov
add
rorl
fs
lods
push
mov
add
xor
shll
sbb
mov
inc
and
popf
in
stos
xchg
cmp
add
int
rolb
fdiv
punpckhwd
jno
icebp
push
xchg
push
jns
clc
hlt
mov
popa
mov
mov
push
into
aam
jmp
inc
xchg
adc
pushf
gs
or
fisttpll
call
test
mov
cmp
adc
and
aaa
mov
jne
mov
jbe
leave
cmp
lahf
pop
and
mov
mov
enter
sub
or
ss
dec
outsl
in
inc
and
add
inc
aam
clc
stc
loopne
mov
and
lock
dec
or
sub
mov
push
iret
and
pusha
adc
xor
pop
rcrl
jae
inc
popf
fcomps
fisubrl
call
inc
push
stos
pop
inc
xor
push
add
leave
jnp
bound
adc
dec
clc
ficomps
sbb
mov
pop
into
push
push
test
pop
stos
fmul
dec
out
xor
sub
xor
les
lret
sti
test
adc
adc
jnp
xchg
sarb
pop
xor
mov
cmpsl
ret
sbb
mov
inc
or
dec
out
and
pop
add
iret
jge
pop
sbb
adc
mov
sbb
loop
xchg
or
daa
and
pop
adc
and
or
cmc
dec
sbb
mov
lea
sub
incl
inc
add
scas
dec
add
dec
jmp
sbb
imul
out
pop
ljmp
cwtl
ja
jg
inc
cli
movsb
mov
push
xchg
push
sbb
xor
cmp
lods
lret
mov
xorb
sbb
xor
or
mov
inc
jo
pop
jmp
mov
fisubrs
cmpsl
lds
xchg
mov
mov
andl
rolb
pop
loopw
push
outsl
in
mov
sbb
stc
test
or
sub
addr16
ds
lahf
push
xchg
cmp
inc
add
fstps
pop
es
fdivl
scas
daa
cmp
mov
mov
xorl
pop
mov
add
repz
pop
call
popf
test
repz
xlat
js
adc
addr16
sahf
mov
push
mov
mov
inc
cmp
pop
mov
jo
pop
cld
cmpsb
outsl
or
pop
push
xor
and
push
add
ds
sti
xchg
into
mov
outsl
orl
hlt
std
lods
scas
sarb
rcrb
add
xchg
cs
lahf
cmp
sbb
mov
out
push
bound
cmpb
insl
outsl
shll
sbb
scas
and
aam
pop
cmp
pop
cmpsb
lret
adc
test
loope
xchg
lds
sbb
ja
dec
xchg
mov
cmpsl
sar
or
cmpsb
mov
cwtl
or
push
movsl
xchg
daa
out
test
cmp
outsl
xor
push
in
push
mov
mov
out
lock
cli
mov
pop
dec
into
mov
push
fucomp
rcrl
dec
adc
xchg
mov
push
pop
inc
add
sbb
jb
rorb
jo
pop
mov
inc
xchg
js
push
stos
push
in
shll
push
aam
jp
and
push
popf
sbb
sub
nop
daa
xorb
in
fdiv
adc
mov
xchg
cltd
jp
cmp
xor
mov
sbb
and
mov
scas
enter
decb
clc
cmp
out
js
xchg
out
loopne
jnp
aas
ja
sbb
scas
loop
and
fcoml
leave
dec
jg
aas
daa
shl
mov
jns
cmp
xchg
popa
mov
push
flds
iret
jne
das
cmp
leave
addr16
ret
and
sti
mov
aad
loop
jno
lods
shlb
rorb
test
pop
daa
xchg
subl
xor
lret
icebp
mov
sub
sbb
pop
jge
fists
int3
add
std
cmp
mov
add
cld
mov
sahf
out
push
cmpsl
js
es
sbb
int3
push
xchg
icebp
fimull
mov
xchg
bnd
push
mov
pop
and
test
and
sbb
out
mov
bnd
cmp
pop
stos
mov
adc
push
pushf
push
cwtl
or
testl
mov
dec
cmp
xchg
sub
mov
mov
cmp
aas
rclb
inc
std
push
jnp
imul
outsb
inc
leave
mov
cmp
sub
loop
mov
shrb
push
or
outsb
inc
out
inc
idiv
clc
jle
icebp
cmp
sub
clc
sahf
dec
out
das
and
into
cli
jmp
adc
cmpsb
fcomps
loop
jl
sub
test
and
or
xor
fsubs
add
sub
add
inc
fsubs
xchg
pushf
and
ret
shlb
dec
and
push
add
mov
das
adc
in
inc
test
inc
and
ficoml
add
js
add
xchg
cmp
dec
jno
jo
and
push
js
xor
push
dec
jecxz
daa
and
sbb
sub
jecxz
sbb
icebp
dec
hlt
int3
mov
std
adc
ss
enter
jmp
imul
push
or
cwtl
sahf
xorps
mov
stos
mov
pop
or
ja
ret
jno
fbld
leave
andl
sti
xchg
nop
icebp
cmp
cmc
dec
xor
faddl
push
push
push
push
aad
mov
or
call
inc
mov
decl
loopne
shrb
mov
pop
sub
pop
int3
mov
sbb
inc
mov
mov
iret
fwait
dec
mov
ss
fs
pop
out
push
inc
in
imul
cld
push
jae
roll
movsl
sbb
push
jecxz
sub
mov
jne
test
sbb
xor
dec
adc
sub
cmp
gs
add
dec
inc
push
loope
call
push
mov
sbb
jge
cwtl
inc
in
jg
shlb
pushf
mov
sbb
cmpsl
and
sahf
inc
pop
fcmove
call
jmp
xor
repnz
call
adc
inc
cmc
adc
insb
fstps
jle
mov
fiadds
sahf
call
jns
dec
mov
adc
out
movsb
loopne
pop
adc
dec
dec
fidivrl
pop
xchg
sub
pop
mov
xchg
iret
mov
mov
cmc
xchg
push
jae
or
daa
push
xchg
ret
mov
js
mov
lcall
shll
out
jae
pop
lcall
hlt
jno
pop
xor
cmp
fisubrl
popf
jae
fstl
mov
and
loopne
mov
add
add
fimuls
aas
psubusb
shrl
adc
mov
subl
jle
lock
add
gs
or
or
pop
add
add
jle
cmp
add
loope
lret
sbb
inc
pop
mov
repnz
jns
dec
sbb
or
cmp
jnp
inc
dec
xor
arpl
sar
and
loopne
pusha
ss
lcall
aaa
shlb
or
cmp
mov
outsb
sub
dec
fsubp
lds
fcmovnu
out
sbb
dec
js
sahf
jnp
in
sbb
sub
mov
adcl
cmp
add
jno
lcall
ret
arpl
cmp
or
or
jo
aam
jl
dec
jl
dec
js
data16
xchg
fwait
lods
or
jp
pop
sub
mov
ret
sbb
sbb
cmpsb
jb
mov
iret
ljmp
in
aas
jb
mov
out
pop
outsl
xchg
rcrb
aaa
leave
cmc
mov
iret
rcr
mov
lahf
je
push
aaa
jge
and
in
xor
mov
push
push
push
movsb
dec
cmp
ja
rol
orl
mov
mov
jl
test
shrl
dec
inc
sub
cmc
xor
das
mov
ret
mov
mov
pop
les
xchg
or
nop
lea
sub
lods
shlb
hlt
in
shll
sbb
stos
or
xchg
insl
dec
mov
xor
pop
add
divl
xlat
shl
pop
jp
mov
xchg
sahf
inc
fstps
inc
and
jl
xchg
add
xchg
xchg
cli
xor
mov
xchg
jp
repz
cmc
mov
sahf
pop
cmp
cmc
inc
inc
roll
sbb
inc
outsl
arpl
insl
inc
in
mov
imul
sub
orb
inc
mov
inc
inc
push
pop
push
or
outsb
push
and
push
jmp
popf
add
adc
and
fs
jecxz
xchg
out
cli
addr16
inc
inc
adc
je
inc
push
lea
cmp
jnp
dec
pop
pop
test
sbb
pop
es
xchg
lea
in
add
push
xorl
cltd
sbb
jecxz
in
dec
push
jle
lretw
pop
sub
loop
cmp
jns
inc
or
popf
pop
jno
cmc
repnz
jns
icebp
or
idivb
fstl
jle
popa
loop
js
fdivs
jecxz
push
aaa
dec
clc
daa
adcb
cli
rorb
pop
mov
stc
decb
mov
fists
ret
cmp
mov
adc
sub
add
pop
cmp
or
push
mov
test
cmc
push
sub
push
stos
sbb
sub
addb
adc
xorl
dec
in
push
sbb
cwtl
pushf
loope
pop
enter
xchg
ret
lcall
pop
or
xor
rorb
out
test
push
in
pop
dec
jo
test
rcrl
dec
loopne
in
popa
jmp
inc
add
xchg
cmp
fcompl
inc
mov
fldcw
ja
sbb
lods
or
cmc
pushf
iret
out
movsb
jmp
adc
mov
js
jmp
outsb
test
pop
jp
sub
enter
sbb
sub
pop
imul
sub
shrb
in
icebp
popa
icebp
lcall
mov
dec
jo
insb
dec
inc
add
insb
mov
add
repnz
fs
test
lea
xlat
push
scas
sbb
mov
in
or
sub
push
mov
fdivs
adc
cmp
pop
in
sub
inc
addr16
icebp
je
push
sub
iret
stos
test
sbb
xor
aad
sub
add
nop
outsl
iret
mov
addb
add
shl
add
jnp
sub
mov
roll
push
sbb
nop
pop
dec
stos
fidivrs
subl
hlt
mov
dec
mov
divb
and
fiadds
xlat
xlat
mov
nop
sub
dec
mov
scas
sarl
pop
in
test
pop
jno
mov
enter
hlt
into
mov
daa
loope
lcall
adc
adc
push
dec
jb
mov
xor
xorl
adc
nop
notl
out
xchg
cmc
mov
pop
scas
jo
sub
pusha
lea
jge
mov
adc
aam
mov
or
aas
dec
rolb
arpl
add
arpl
lock
adc
cmc
es
and
rcrb
outsl
jb
add
fimuls
push
adc
sub
les
roll
in
aad
xor
and
pop
push
cmc
das
movsl
cmp
stos
cmp
dec
lret
sbb
jne
cli
test
sub
imul
fbld
out
nop
sti
cltd
xchg
mov
jmp
add
cli
or
pop
push
int3
push
xchg
cltd
adc
inc
jmp
cmpsl
xchg
rcll
repnz
orb
and
dec
lret
sbb
cld
out
or
repz
movsb
mov
es
aas
inc
inc
or
enter
jns
pop
mov
jl
xlat
test
pop
sub
test
push
push
cwtl
push
aaa
test
pop
and
lcall
test
jae
shll
and
fcomi
push
pop
fildl
jg
pusha
cmp
adc
imul
int3
loopne
push
cmpsl
sbb
add
or
xor
loopne
push
pop
sbb
mov
aas
or
push
dec
xor
lock
add
xor
popa
or
dec
dec
ljmp
fsubp
and
jp
mov
clc
lret
imul
jl
mov
adc
jbe
imul
jae
aas
test
mov
sub
pop
pop
add
mov
dec
insb
push
in
pop
sbb
pop
mov
pop
add
mov
sti
jae
js
jle
pushf
fwait
adc
cmpsb
lods
mov
dec
push
jnp
mov
and
adc
cmp
sbb
pop
or
imul
cmp
cmp
xchg
push
movsb
dec
pop
or
lea
dec
shll
arpl
push
dec
ss
into
rol
leave
mov
jecxz
insl
fldcw
adc
fldenv
outsl
jmp
fsubp
jb
dec
inc
adc
cmpsb
sub
outsb
sub
push
cmp
dec
mov
stc
jge
test
cltd
decl
in
or
es
adc
lds
xor
mov
out
cmpsb
arpl
lret
sub
ret
jg
dec
and
sbb
xchg
data16
fwait
add
xor
push
mov
inc
fistps
mov
dec
pop
lcall
mov
dec
ljmp
inc
lret
push
push
loope
pop
daa
inc
jae
sub
xlat
fadds
lret
xchg
sbb
add
and
sbb
cmp
xchg
stos
cmp
pop
nop
xor
push
ss
mov
inc
int3
pop
sub
int
sahf
cmp
jns
cmp
bound
arpl
jnp
fs
imul
in
mov
mov
cmc
inc
mov
mov
pop
xchg
iret
cmp
mov
insb
pushf
cli
je
xor
and
pusha
test
in
dec
push
das
add
cmpsl
mov
in
push
pop
sub
movsb
cld
rcrl
dec
sbb
pop
les
test
pop
aad
lret
sbb
loopne
push
cmpsl
sbb
rcrb
inc
add
fistpll
daa
xorb
push
int3
sub
test
ss
aad
ds
sub
test
ret
or
pop
and
aad
or
mov
addb
jle
xlat
lcall
push
jmp
lods
fidivrl
in
es
or
and
outsl
cmp
and
sarl
das
pop
ljmp
jo
clc
out
iret
cmp
fildll
pop
xchg
cltd
outsb
mov
int
fisubl
cmp
scas
aaa
push
in
sbb
loope
and
std
mov
xchg
adc
movsl
mov
sbb
lea
mov
fcmovnb
jge
sub
clc
push
dec
test
dec
mov
or
mov
inc
mov
inc
pop
mov
sub
mov
shlb
call
push
dec
jmp
cmc
iret
gs
les
out
out
loop
fs
xchg
inc
pop
fmull
pop
dec
outsb
sub
jge
jns
mov
lret
aam
ljmp
leave
les
test
inc
jo
mov
mov
adc
cmp
mov
push
sbb
and
lret
pushf
mov
bound
test
shll
mov
int
or
popa
pusha
sti
pop
lahf
dec
and
or
je
subl
push
pop
pop
loop
or
fwait
inc
push
push
push
fucom
test
je
mov
in
movsb
jae
rep
or
int3
pop
out
xchg
test
fwait
pop
mov
lods
outsl
ss
jecxz
and
lea
xchg
loop
popa
add
test
ret
inc
loopne
push
aad
sbb
push
jo
or
icebp
inc
pop
add
les
shl
jg
lcall
clc
test
imul
in
adc
or
in
addb
dec
xchg
rolb
insb
mov
or
add
sbb
adc
pop
lea
in
and
mov
iret
mov
imul
dec
insl
and
add
sbb
xor
mov
fsubrs
adc
inc
enter
int3
mov
jmp
pop
sub
mov
xor
pushf
cmp
mov
loop
les
pop
lret
mov
mov
mov
popf
sti
movsb
mov
mov
sarb
out
sbb
std
iret
rcrl
les
dec
push
push
pop
pop
xchg
sub
fcoms
out
and
adc
inc
fucomp
dec
sbb
rolb
push
mov
push
loop
mov
inc
stos
xchg
pusha
pop
fcomp
lret
in
cwtl
ficoml
cld
inc
sub
cmc
adcl
lahf
xchg
xchg
testb
jecxz
test
jae
test
jo
test
arpl
dec
inc
adc
daa
adc
fimull
xchg
repnz
sub
or
nop
sbb
lcall
mov
mov
push
out
xor
xor
dec
inc
stc
cmp
mov
push
cmp
jnp
sub
adc
insb
loopne
addb
aam
adc
cmp
inc
into
push
push
pop
popf
pop
pop
dec
call
sbb
and
shll
jbe
mov
iret
and
inc
mov
mov
flds
or
repnz
mov
repz
and
pushf
nop
aas
and
stc
out
stc
mov
insb
xchg
aas
scas
enter
dec
cmp
les
xor
and
jge
mov
loope
pusha
fstl
in
les
sbb
inc
sub
loopne
cld
add
gs
xor
addr16
mov
cmp
orb
insl
sbb
and
xchg
pop
iret
adc
jp
inc
loop
scas
stos
mov
subb
push
mull
jg
mov
jne
dec
pop
daa
jnp
pop
add
jae
inc
jge
stc
sti
sbb
cli
mov
std
mov
and
dec
scas
xchg
add
mov
pop
les
jno
push
sbb
repnz
loope
and
in
sarl
cld
cmc
out
xor
sbb
inc
mov
xchg
push
jno
xchg
stos
inc
xchg
xor
mov
mov
ds
testl
fwait
xchg
sahf
les
int
aam
jne
jmp
dec
lds
es
fcomps
jmp
adc
cs
out
or
jge
imul
scas
cmc
cwtl
push
addl
cmp
lret
hlt
cmp
ret
push
das
jae,pt
dec
jl
ret
test
jmp
imul
aam
ja
fs
mov
push
dec
sbb
mov
and
cmpsl
dec
int
and
movsb
imul
mov
dec
idiv
sub
mov
shll
dec
jecxz
mov
mov
hlt
sub
loope
leave
and
call
and
push
mov
in
push
ljmp
pop
addr16
data16
lds
repnz
mov
or
sbb
icebp
mov
sbb
jmp
in
cmpl
aaa
inc
dec
cmp
pop
pop
sbb
pop
pop
jb
mov
pop
push
test
sti
push
inc
or
xchg
adc
adc
in
fwait
dec
jmp
xchg
rorl
es
jae
jle
fwait
mov
jmp
das
in
adc
mov
or
pop
fcomp
sbb
mov
sti
pop
lods
hlt
jnp,pn
and
xchg
test
dec
pop
pop
xlat
ja
pop
stos
movsb
mov
bound
pop
xchg
nop
aad
lcall
aas
xchg
push
pop
stos
or
lods
bnd
rolb
cmp
or
push
pop
fildll
xchg
or
sbb
cmp
mov
or
xor
mov
subl
dec
fs
mov
inc
lods
adc
es
sbb
dec
xlat
lret
pop
mov
hlt
pushf
jns
ljmp
les
sti
jp
js
pusha
rcrb
jl
gs
into
or
sbb
into
mov
add
loopne
iret
je
jo
mov
sbb
into
shlb
pop
idivl
jb
fs
push
jns
xorb
or
repnz
xchg
mov
mov
and
mov
sarl
push
sub
mov
dec
or
mov
xlat
sub
std
les
jg
int3
or
cmp
adc
fistpll
sbb
popa
movsl
push
jmp
xor
jl
loope
mov
adc
scas
fwait
iret
sbb
sbb
stos
cmp
outsl
adc
addr16
pop
xchg
cmp
call
fstl
outsb
xchg
xor
stos
repnz
bound
jmp
xor
inc
cmpsb
jne
mov
jge
xchg
pop
div
das
js
add
clc
rclb
push
add
test
xchg
fwait
jle
mov
cmp
das
xor
clc
inc
mov
loopne
fwait
mov
nop
inc
adc
adc
jne
dec
ja
mov
shll
pop
stc
mov
rorb
pop
dec
test
pop
mov
ljmp
adc
jmp
jl
mov
in
push
xchg
movsl
popa
push
sbb
lea
sbb
cmp
ljmp
das
jnp
jae
loop
int
cmp
xchg
rol
mov
negb
pop
filds
hlt
faddl
mov
ret
hlt
push
mov
jb
ds
push
jmp
dec
cwtl
sbb
jbe
shrb
inc
and
dec
shrb
jmp
repnz
sub
sub
test
adc
and
dec
xchg
scas
jb
cmp
push
mov
shrl
andb
notl
sbb
das
cmp
ja
minps
adc
sbb
stos
outsb
xchg
mov
adc
sbb
and
lcall
loope
jp
sbb
dec
mov
inc
pop
movsb
add
mulb
inc
and
repz
push
fsubrs
push
std
push
pusha
mov
fidivs
xchg
xchg
test
mov
cmpsb
sbb
cld
dec
mov
lods
push
xor
adc
xchg
jge
int
cli
jge
das
or
stos
adc
inc
adcl
into
push
xor
into
adc
rcr
cs
xor
fldcw
xchg
sub
lea
into
cmp
popf
hlt
push
scas
push
inc
cli
decl
ljmp
jg
sti
lahf
rcl
pushl
jmp
icebp
xchg
das
cmpsl
pop
ficomps
aad
jmp
movsl
decl
push
cmp
outsb
mov
and
mov
inc
lods
clc
dec
and
push
sbb
scas
inc
test
pop
mov
adc
jle
rorl
popf
jge
fdivs
repz
pop
in
xchg
orl
inc
movsl
or
sbb
jl
rolb
es
mov
cli
pushf
cs
repz
movsl
mov
bound
cmp
cld
push
adc
out
js
fs
push
add
hlt
inc
mov
xchg
mov
lahf
out
xchg
cmpl
neg
sbb
cmc
clc
cmpsl
shlb
std
mov
mov
test
dec
sahf
repnz
imul
push
int
mov
xor
jle
mov
in
xor
mov
cmp
stos
dec
sub
xchg
adc
dec
clc
lea
aam
and
movsb
jle
mov
shlb
push
mov
fcmovb
popf
sub
insl
adc
add
and
push
xchg
movsb
pop
pop
and
pop
out
out
loop
hlt
loope
dec
pop
or
clc
out
stos
lret
dec
mov
sbb
ret
pop
lahf
loope
insb
push
fs
imul
cmp
push
mov
ficoml
pop
cltd
push
lahf
fildl
push
or
xchg
lods
das
out
jno
push
popf
ret
mov
in
inc
lcall
jmp
dec
shll
repnz
inc
clc
and
iret
inc
sub
xchg
push
cmp
add
sbb
fcomps
dec
ficoms
in
arpl
xchg
pop
in
stos
imul
mov
dec
fistps
mov
outsl
jnp
xchg
mov
push
shl
lret
test
dec
pop
repz
pushf
clc
outsl
outsb
mov
add
stc
inc
xlat
inc
mov
into
jnp
cmp
lret
and
push
loop
pop
ljmp
pop
cli
mov
adc
push
mov
xor
dec
jno
or
adc
mov
in
push
outsb
int
and
add
bound
mov
loop
fwait
cmp
jle
movsb
mov
sub
in
push
jae
mov
psraw
mov
adc
je
les
mov
in
fwait
out
cmpsl
inc
xchg
push
pop
sub
mov
stos
std
popa
cwtl
ret
fnstenv
dec
outsl
loop
je
pop
mov
pusha
xor
stos
lds
stc
xchg
push
aaa
fisttps
jns
frstor
fisubrs
jae
adc
out
outsb
mov
cmpsb
adc
loop
xchg
push
cli
stos
inc
sti
jae
es
aas
xchg
xchg
fsubrp
xor
fsub
mov
adc
fwait
out
jl
cmp
lods
cwtl
jno
fisubrl
mov
sbb
jb
adc
push
insb
pushf
lahf
cmp
jo
mov
and
xchg
xchg
fdivr
adc
or
push
adc
and
into
addb
into
test
jle
mov
sahf
push
jmp
jnp
mov
inc
sbb
imul
mov
imul
lods
pop
fwait
xchg
repz
imul
sub
into
leave
inc
dec
lcall
cs
aad
test
in
ret
fiaddl
loope
adc
mov
jno
xor
push
inc
xchg
mov
stc
mov
scas
lea
daa
push
scas
jno
adc
cmc
ret
outsl
insl
lret
rcrl
cltd
and
or
sub
jg
xor
clc
push
jb
xchg
insl
xor
lds
ss
ret
fcmovnbe
sbb
repnz
mov
xor
pop
jno
testl
es
repz
sbb
aad
or
mov
jle
cmc
and
leave
jmp
and
out
out
push
repnz
mov
and
fsub
xor
cmc
fidivs
cmc
sub
scas
ss
mov
and
icebp
mov
push
jns
hlt
xchg
sbb
mov
mov
fisttps
mov
jp
pop
outsl
xor
repz
sub
rorl
cmp
lcall
mov
movsb
testl
xor
in
insl
adc
dec
addr16
pushl
xchg
push
sub
mov
jnp
lahf
clc
sar
arpl
int
cmp
mov
lds
mov
imul
sbb
pop
lock
mov
xchg
jne
dec
loope
mov
cmp
gs
loope
stos
outsl
add
nop
cmc
mov
addr16
repz
sbb
into
sete
in
int3
push
pop
jmp
es
into
loop
mov
ljmp
add
popf
in
lock
test
mov
mov
xchg
adc
daa
mov
inc
stc
or
sbb
mov
mov
mov
cltd
xor
movsb
xchg
ror
hlt
es
iret
int3
fwait
mov
repnz
dec
mov
icebp
scas
and
scas
leave
and
loopne
pop
mov
outsb
not
cs
icebp
add
mov
pop
add
sub
add
push
stc
or
and
push
ds
pushf
xchg
jnp
imul
cwtl
inc
add
fnstcw
setl
out
daa
and
stc
adc
fdivrs
jp
test
mov
sbb
jp
imul
inc
test
js
mov
pop
push
into
mov
jns
cmpsb
or
lret
jl
push
jb
inc
lods
leave
addr16
sub
pop
push
adc
or
popf
or
and
ret
mov
jge
pop
ret
jns
pop
in
ficoml
mov
push
das
lods
mov
or
aad
jecxz
int
pushf
xor
pop
push
lahf
incb
movsl
pop
xor
stc
push
nop
mov
insb
popf
cltd
jp
mov
dec
pop
adc
pop
lods
imul
les
sarl
and
cmp
push
pop
in
add
int3
fs
popa
lds
cmc
mov
mov
dec
xchg
ja
pop
adc
je
dec
mov
mov
xor
repz
in
xchg
adc
dec
or
add
add
or
cmp
jle
pop
repz
mov
mov
pop
popa
and
lret
call
push
gs
inc
inc
ljmp
inc
dec
adc
movsb
push
xor
xor
pusha
dec
in
jne
cmp
fistps
adc
cmp
enter
mov
xchg
jge
data16
lret
cmp
jge
xorb
inc
pop
dec
fdivs
fsubrl
ficomps
xchg
rclb
jp
cmc
icebp
jge
jns
push
fistpl
stc
mov
inc
cmc
ss
push
in
sub
push
pusha
cmpb
adc
fildll
das
hlt
xlat
fistps
fbld
jmp
xchg
cld
test
daa
mov
leave
sbb
jg
das
xchg
mov
sbb
das
and
cmp
and
push
mov
out
xchg
insb
mov
scas
ss
int3
jns
in
pusha
pop
mov
pop
or
mov
imul
mov
bound
pop
aam
mov
in
notl
mov
mov
out
jbe
fwait
mov
cmp
fistps
mov
mov
nop
into
sbb
mov
movsb
sub
inc
cmp
or
sbb
jp
adc
lahf
test
cmpl
fsubrl
sub
mov
ficoml
cmp
push
pop
test
into
push
xchg
mulb
sbb
xchg
push
in
ss
aas
ds
adc
insb
mov
add
xchg
mov
dec
fwait
or
inc
sub
push
or
repnz
div
pop
sub
sub
enter
mov
ret
fwait
sub
cs
mov
outsl
jg
xor
lods
and
adc
dec
lds
inc
sarl
xor
and
jae
inc
sahf
xchg
cltd
in
mov
sar
jae
ljmp
fwait
ljmp
mov
sbb
jg
and
cld
cli
das
mov
imull
jmp
cs
icebp
daa
jmp
sub
loopne
push
cld
jp
and
adc
push
mov
aam
add
dec
pop
mov
jecxz
ljmp
imul
xchg
jecxz
push
sub
dec
mov
lahf
in
push
push
stos
lds
mov
inc
insl
lret
sbb
leave
cmp
dec
jg
inc
in
xchg
call
pop
jbe
ljmp
in
jb
jb
fadds
push
aam
loope
mov
aam
stos
clc
mov
cmp
inc
xor
fimuls
repnz
mov
cmp
cmp
dec
adc
testl
hlt
data16
inc
imul
ds
mov
add
test
filds
rcrl
adc
mov
lods
outsl
scas
sub
sbb
lods
out
stos
xchg
push
and
incl
aaa
stos
leave
and
out
jl
jnp
jnp
sbb
or
sbb
shrb
jne
sti
test
mov
push
mov
incb
mov
pop
jno
popf
dec
cmp
jl
call
inc
in
jno
cmp
repnz
fisttpl
xchg
lahf
xchg
gs
jae
push
xor
or
sbb
pop
ret
movsb
and
lods
cmp
inc
pusha
test
mov
jge
jecxz
fmull
cmp
pop
dec
dec
xchg
xor
mov
xchg
fbstp
jl
adc
daa
subl
cmp
loop
xor
aam
cmpsl
mov
loopne
jge
imul
lret
adc
pop
cmc
insb
das
and
movsl
jp
sbb
mov
test
ljmp
into
sbb
lea
stc
cmp
cmp
adc
dec
and
dec
jns,pn
sub
aaa
jo
ret
leave
jae
mov
push
fwait
movsl
inc
in
jo
aam
sbb
cltd
pop
imul
test
lds
sbb
and
dec
sar
push
push
mov
cmpsb
xor
and
dec
add
movl
mov
dec
fildl
test
mov
lea
push
sbb
out
fnsave
mov
fwait
ljmp
vsubsd
sbb
in
fsts
jne
mov
jmp
stos
and
loop
xor
repz
call
jmp
mov
iret
stos
inc
xchg
adc
inc
sahf
repnz
aam
mov
fwait
stos
or
cmp
jne
xor
aam
lods
pop
push
or
mov
add
xchg
lods
xor
imul
clc
lcall
dec
dec
push
into
sbb
les
push
sbb
sbb
sbb
inc
jae
or
imul
aam
aas
cmpsl
aam
cmp
test
and
faddl
je
xor
xchg
mov
mov
push
sbb
push
icebp
jno
popf
add
or
inc
loopne
sub
leave
jmp
cmp
and
xchg
popa
ret
push
sub
jecxz
shll
mov
pushf
call
push
imulb
shll
jmp
outsb
mov
xchg
in
push
loop
out
adc
stos
js
pop
pop
lock
inc
cmp
out
rcr
cwtl
mov
roll
inc
aaa
sub
loop
out
clc
loope
mov
and
js
ds
dec
into
faddp
negb
ret
xchg
test
jb
test
xor
jbe
adc
mov
inc
stos
or
push
lea
push
hlt
inc
push
cmp
mov
sub
testl
jns
jbe
and
inc
push
shlb
lea
inc
imull
cmpb
add
or
xor
mov
add
jno
push
xor
mov
daa
and
daa
jne
leave
adc
call
mov
out
cs
mov
outsl
mov
mov
rclb
fs
fwait
nop
int
xlat
inc
xchg
int
ds
pop
in
mov
pop
gs
pushf
movsl
cld
inc
xchg
fistps
aad
pop
cli
sbb
loop
or
loope
or
popf
ficomps
xchg
out
and
sub
fsubp
mull
negl
arpl
sbb
jnp
ret
fistps
sarl
xor
andl
inc
and
mov
lcall
mov
stos
in
xor
cmp
xor
aad
mov
jmp
jmp
out
adc
lock
cmp
aaa
dec
sub
negb
je
and
inc
into
movsb
xlat
mov
cmp
repz
inc
cmc
mov
in
mov
pushf
repz
inc
sub
movsl
je
pop
pop
aam
sar
pop
rolb
jns
stos
inc
mov
out
dec
jp
pop
pop
dec
push
xor
adc
insb
or
push
lea
in
movsl
jnp
cltd
add
test
or
fldt
movsb
xchg
or
iret
lcall
in
aam
outsb
mov
das
push
pop
scas
cs
loop
jnp
repnz
cmpsl
movsb
cmpsl
mov
push
lahf
pop
and
mov
insl
cld
adc
or
stos
mov
adc
inc
push
mov
bound
imul
dec
or
std
push
sbb
lahf
mov
aad
fwait
cltd
ds
sbb
inc
nop
inc
cld
icebp
stc
dec
lods
adc
in
and
add
ljmp
sub
xor
stos
mov
addr16
cmp
pop
xchg
dec
shlb
push
cmpsl
stos
mov
cmp
insl
dec
ds
icebp
push
mov
adc
cmpsl
dec
jno
ja
inc
into
in
pop
es
js
add
push
cmp
pop
add
ret
jns
dec
daa
das
push
jnp
xlat
cwtl
insb
mov
mov
sub
clc
push
and
mov
jmp
jae
cmpsb
jae
xchg
jg
cli
xor
enter
roll
inc
inc
jle
and
clc
ljmp
icebp
jg
jne
insb
push
xor
sbb
mov
out
js
jmp
out
dec
jno
fsubr
mov
and
cmpsl
mov
lahf
mov
daa
shl
insb
js
lret
dec
adc
xchg
lds
imul
mov
sbb
repz
in
dec
cmp
imul
in
insl
cld
mov
cwtl
sub
jmp
or
cmp
inc
pop
adc
add
les
pop
arpl
stc
pop
popf
lock
pop
dec
aaa
sbbl
sbb
in
add
divb
sub
add
pushf
sarb
jmp
xor
popa
repnz
sub
fsts
aad
incb
in
pop
hlt
pop
cmp
testb
jecxz
rcrl
or
scas
xchg
cmp
sbb
pusha
ljmp
pop
mov
repnz
mov
cwtl
lds
imul
mov
outsb
inc
add
dec
stos
jae
fstps
les
repz
push
loope
push
adc
jmp
stos
f2xm1
xor
test
pushf
or
in
inc
adc
sbb
je
push
dec
lods
dec
clc
jno
xor
and
cmp
adc
mov
sbb
stc
loop
daa
aaa
add
jne
fdivr
adc
adc
stos
stos
jmp
rorl
lcall
das
jg
adc
sbb
sub
sarl
rol
flds
push
mov
in
sahf
hlt
xchg
ds
pop
mov
or
aam
and
cli
fisttps
std
insb
or
dec
outsl
ds
inc
add
shr
stos
dec
test
and
lcall
mov
push
mov
dec
dec
ljmp
sbb
sub
rol
sbb
pop
xchg
adc
in
xor
pusha
mov
insl
xlat
lcall
sbb
scas
pop
push
sbb
enter
cmp
subl
xchg
jne
subl
mov
icebp
mov
sbb
das
jmp
ss
test
in
mov
loop
int
cli
hlt
js
cmp
pusha
idiv
sbb
and
jo
mov
rol
mov
cmp
push
push
pop
jb
cmp
push
ret
js
pop
int
mov
ret
dec
test
jmp
push
std
lds
sub
stos
lcall
outsb
sub
out
mov
call
cmc
lcall
mov
loopne
addr16
call
das
out
ds
add
out
jmp
adc
lahf
int
sahf
add
jle
aas
push
filds
mov
loopne
jae
adc
jmp
or
mov
jne
js
mov
cmc
lea
shrl
int
es
addr16
fisubl
adc
aam
mov
sbb
jae
out
jmp
pop
adc
mov
add
fsubs
jns
stc
int3
push
dec
add
int
push
in
lret
into
push
imul
and
add
push
call
shll
aas
stos
xor
subb
lock
inc
imul
scas
loope
lret
mov
pop
cmpl
ret
push
pop
mov
sub
out
std
and
push
adc
lods
loopne
in
pop
adc
cmp
mov
stos
lods
jg
sub
push
jbe
inc
out
push
sarb
inc
in
enter
in
add
ficoml
push
jp
inc
imul
loopne
pop
sbb
inc
shrb
add
cld
nop
inc
leave
int
outsl
add
test
xchg
and
test
lret
pop
ss
movsb
push
out
or
jnp
mov
or
jmp
jno
ss
push
test
dec
bound
das
fwait
repnz
stc
adc
loope
leave
cli
mov
es
mov
ret
jo
es
inc
inc
mov
roll
call
stc
mov
mov
push
adc
loope
fistps
add
insl
push
das
test
jecxz
xchg
aaa
dec
repz
outsb
xchg
jae
fwait
cmp
daa
jo
xor
cld
jl
jae,pn
lret
sub
lcall
dec
int
data16
cmp
mov
dec
cs
int
test
insb
jno
cltd
push
cwtl
jecxz
sbb
cmpsb
lods
inc
pop
jl
sbb
sbb
sbb
push
mov
mov
cmc
cltd
bound
xor
ds
mov
jae
dec
mov
stos
es
out
xchg
push
xchg
outsl
sub
test
mov
cmc
pop
mov
es
cmp
mov
mov
fisttpll
stos
dec
mov
sbb
jne
jbe
fidivl
cmp
mov
mov
ds
mov
loop
fdivr
push
leave
mov
loopne
push
outsb
mov
in
adc
and
jmp
mov
icebp
iret
push
mov
inc
mov
popf
mov
unpckhps
addr16
imul
push
call
and
dec
mov
jnp
xchg
lea
ficompl
push
adc
cwtl
and
bnd
lea
dec
inc
les
lret
mov
into
jne
in
adc
cmpsl
or
scas
fwait
lds
pop
insb
sbb
rorl
add
fnstsw
pushl
dec
mov
sbb
adc
mov
sub
lcall
or
mov
ljmp
mov
insb
pop
xor
cmp
adc
das
cmp
popf
mov
xchg
fwait
and
push
sbb
adc
out
sbb
sub
shll
aam
cmp
add
adc
mov
sti
add
adc
lret
or
cltd
insl
add
hlt
mov
jo
xchg
out
clc
cmp
cmp
movsl
je
mov
loope
add
loop
push
out
cmp
mov
insb
scas
lret
cmp
sbb
mov
push
sti
test
aad
jle
sub
cltd
push
sahf
ljmpw
mov
mov
mov
and
ds
loop
stc
inc
fcoms
aam
inc
push
xor
shrl
iret
mov
insl
cwtl
and
pop
loopne
sahf
and
mov
test
orl
cmp
xor
or
insl
mov
jb
mov
not
js
xor
or
xchg
add
scas
cs
jae
mov
xchg
in
cmpsb
test
rcrb
or
push
cmp
inc
mov
xchg
ja
pop
rolb
daa
popf
jnp
int3
test
cmp
mov
jae
stos
ja
stc
lret
arpl
clc
in
out
enter
sbb
adc
mov
lret
dec
cmp
mov
mov
sti
aaa
pop
das
adc
call
ret
pop
push
mov
add
add
cltd
rcl
shlb
pusha
cs
call
aam
add
jno
scas
push
cmp
test
mov
cmp
pop
pop
lcall
xchg
xor
mov
ficomps
repz
mov
xchg
hlt
fisubrl
mov
stc
sbb
fwait
loop
pop
jbe
pop
and
xor
xchg
dec
sbb
xor
out
jbe
leave
cwtl
lods
add
mov
ret
hlt
or
ss
mov
lods
rep
cmpsl
testb
insb
aas
out
inc
in
icebp
pop
sbb
jge
jle
bound
popf
adc
ja
into
add
sbb
fwait
sub
and
dec
inc
cli
loopne
cmc
pop
test
pushf
popl
pop
cmc
loop
or
xlat
sarb
movsl
bnd
mov
icebp
or
and
add
ret
mov
icebp
fdivs
xor
mov
repnz
adc
pop
out
out
cltd
fidivrs
jns
mov
and
cmp
pop
cld
adc
jmp
inc
jle
xchg
cmp
dec
push
jl
jg
scas
cwtl
mov
xor
int3
lret
ss
xor
and
popf
test
lea
loopne
dec
je
ja
lahf
jo
pushf
fcmovb
dec
lcall
xchg
ror
lret
mov
mov
mov
dec
loopne
inc
sbb
adc
mov
pop
and
or
mov
fidivrs
mov
mov
add
jb
jb
sub
pop
cltd
pop
cld
xor
aam
insb
decl
comiss
int3
repz
and
ljmp
inc
xor
shld
repnz
adc
insl
lods
pop
in
inc
cmp
pop
je
pusha
dec
ds
cmp
leave
push
pop
sub
jg
adcb
inc
insb
movsb
into
adcl
comiss
xor
outsl
mov
lret
rclb
or
out
adc
ret
dec
rclb
rorb
pop
btc
xchg
dec
popa
lods
mov
and
cld
mov
orl
dec
and
sub
cld
inc
dec
inc
es
adc
movsl
inc
aaa
and
add
das
mov
mov
cmp
repnz
test
push
in
xchg
shll
fiadds
mov
sbb
test
mov
xor
xchg
ss
adc
enter
sbb
fwait
mov
add
aam
xor
or
or
das
dec
pop
inc
loopne
int
mov
or
push
fistl
xor
add
in
xchg
fiaddl
mov
rol
gs
xor
dec
inc
mov
pshufw
pop
xchg
arpl
push
lret
and
add
lahf
dec
adc
cltd
daa
cmp
xchg
incl
les
cmp
sub
mov
jle
negl
adc
cmp
push
fidivrs
lcall
mov
pushf
mov
rorb
cli
xor
jg
jle
jns
cmc
dec
fcmovnu
sbb
jne
ds
xchg
inc
orl
cltd
sub
data16
pop
ss
in
fnstenv
in
out
je
gs
cmpsl
push
push
dec
push
push
das
fisubs
cmp
xor
mov
out
sbb
js
mov
pop
xchg
mov
pop
xchg
dec
cmp
leave
push
aam
adc
push
xor
out
sub
mov
pop
fucomi
enter
sti
out
in
jl
sub
cmc
jl
ja
ret
xchg
xchg
das
mov
or
pop
das
sbb
jl
mov
clc
xor
loopne
xchg
daa
mov
inc
imul
in
lods
mov
test
insb
scas
jl
clc
mov
mov
pusha
mov
xchg
in
xor
cmpsl
cltd
enter
fsubrp
test
cmp
jb
cltd
sub
push
lret
rol
test
icebp
push
mov
leave
out
cmp
lods
enter
adc
iret
adc
mov
or
dec
inc
mov
xchg
sub
and
ljmp
or
repnz
sub
mov
cmpsl
push
xchg
imul
rcrb
lods
cmc
outsl
repz
addr16
sarl
daa
xor
call
outsb
dec
ljmp
iret
ds
aas
cli
xchg
mov
jmp
lret
push
fbld
mov
push
pop
jb
pop
mov
pop
mull
out
test
pop
jle
add
cltd
aas
loopne
jmp
mov
mov
mov
lock
rorb
and
sub
test
je
test
dec
cmc
push
mov
ret
movsl
shlb
pop
xchg
or
pop
pusha
fwait
addb
outsb
ss
dec
push
das
push
inc
pop
mov
div
imull
addr16
shll
mov
clc
in
ret
cwtl
adc
cmp
push
stos
fists
adc
sbb
fbstp
mov
bound
push
xchg
clc
stc
imul
inc
sbb
push
mov
or
cmp
lds
fcomi
push
test
popf
mov
inc
pop
pop
sub
add
or
sub
popf
jns
cs
sbb
loope
popa
adcb
out
mov
inc
mov
push
and
push
aaa
sti
mov
out
loopne
push
push
adc
cmp
pusha
and
loop,pn
lea
loop
imul
in
in
loop
push
fildl
add
ficompl
push
jecxz
inc
dec
mov
mov
jg
movsl
add
push
test
shl
adc
out
cwtl
das
mov
jmp
aaa
sti
push
repnz
cltd
mov
mov
mov
adc
adc
out
pop
xchg
dec
jl
shll
xor
addl
jo
les
push
dec
mov
xor
and
std
mov
stos
mov
pushf
fwait
jl
nop
insb
adc
pop
in
scas
scas
pop
incl
movsl
aad
jb
jo
xchg
scas
les
mov
mov
je
clc
jle
ja
repz
aam
push
fimuls
mov
xchg
js
stc
mov
test
mov
adc
jge
aam
popf
jl
sti
sbb
jmp
jnp
in
pushf
jl
loopne
daa
fcmovnbe
divl
aad
dec
fs
insl
cmp
cmp
sub
out
xchg
mov
inc
ret
mov
mov
jg
pop
jno
out
lret
jnp
dec
call
push
dec
jne
addr16
xor
cwtl
jae
cwtl
rcrl
cmp
int3
sarl
imul
and
in
jp
pop
mov
mov
lods
or
out
bound
fldcw
lods
stos
jl
das
mov
cltd
jnp
mov
push
std
push
mov
cmpsl
mov
arpl
jle
fcmovne
nop
fisubl
iret
pop
repz
in
repz
decb
push
je
push
sbb
jae
loope
out
push
flds
xor
cmc
push
mov
inc
mov
pop
in
mov
testb
cmp
call
add
fnstenv
inc
test
cmp
sub
les
repnz
arpl
lret
sub
cmp
bound
fadd
mov
xor
loopne
push
cli
cmp
sbb
iret
aaa
lret
sbbb
mov
xor
xor
dec
dec
sahf
clc
adc
xchg
outsl
hlt
hlt
sahf
sti
cmpsb
inc
jp
push
arpl
rcrl
nop
pop
push
sbb
adc
into
stos
ret
sub
xor
lds
mov
addr16
push
sbb
add
xchg
mov
mov
imul
lcall
lods
push
or
xlat
sub
xchg
cmp
aam
rclb
addr16
cmpl
in
ss
enter
xor
fcomps
aaa
inc
jp,pt
je
clc
out
inc
xchg
int
push
shll
adc
xchg
mov
mov
out
sbbl
cmpsl
sub
pop
add
sti
aad
test
mov
or
mov
pop
mov
cltd
cmpl
fmuls
aas
sahf
inc
andl
sti
movups
test
mov
shrl
mov
mov
xor
pop
int
mov
xchg
outsl
movsb
dec
xchg
xor
test
push
jo
ffree
loop
fidivl
adc
lret
jmp
test
xlat
popa
mov
in
pop
mov
xchg
mov
push
xchg
xchg
into
mov
xchg
shl
rolb
jae
sarl
inc
ljmp
dec
mov
push
xor
xor
icebp
imul
xchg
js
pop
fs
adc
cmp
popf
stc
testb
lods
sub
jge
xchg
or
xor
or
imull
pushl
pop
pop
mov
ficoml
test
scas
jle
sub
mov
sbb
js
sysret
jg
mov
or
fs
in
inc
jmp
arpl
pavgb
cs
or
inc
in
cmc
xchg
mulb
cltd
outsb
pop
shll
cmp
mov
repnz
shll
dec
cmpsl
cmp
push
jae
je
jno
xchg
add
out
int
test
adc
lock
jmp
or
mov
mov
xchg
add
mov
imul
or
lret
lock
outsb
lods
mov
in
cmpsl
or
cmp
std
mov
sub
mov
imul
in
mov
mov
push
push
xchg
negl
mov
xchg
out
push
pop
fmull
push
in
xor
xchg
in
jno
jmp
ljmp
hlt
daa
xchg
lock
stos
stc
jns
es
or
sbbb
data16
ret
lock
es
addb
or
jl
inc
cmp
sbb
mov
xor
sbb
cmp
mov
jmp
cmp
inc
jge
int3
add
xlat
add
jb
sub
xchg
add
cmp
je
int
shr
sub
cmc
dec
fstp
stos
mov
fwait
cmc
ret
inc
adc
dec
mov
cmp
test
mov
jl
and
sub
push
or
lock
icebp
add
mov
cmp
jne
push
jecxz
mov
lea
in
add
mov
xchg
inc
cli
add
or
js
iret
stc
in
cmp
sysexit
mov
mov
scas
xchg
in
mov
outsb
cltd
in
lds
or
int3
lahf
fistps
jo
pop
shlb
orl
push
adc
xchg
orl
scas
sbb
pop
mov
scas
nop
adc
loop
cs
lret
pop
sbb
jne
sbb
mov
adc
lcall
ss
out
imul
js
xchg
inc
xor
pop
xchg
dec
outsl
lcall
daa
repnz
xchg
jp
dec
jge
fisttpl
jmp
xchg
hlt
jbe
outsb
loopne
out
xor
out
imul
and
lock
add
rcrl
dec
mov
mov
and
imul
aas
shll
xchg
inc
push
ljmp
in
pop
aad
inc
adc
addb
ret
or
cmpl
pop
rcrb
pop
nop
imul
dec
mov
dec
sub
ljmp
insb
mov
mov
dec
mov
aam
cmpsl
ret
push
out
and
or
push
xchg
ret
loopne
jl
shl
lock
bound
scas
lahf
cmpsb
orl
mov
mov
stc
push
pop
add
mov
in
mov
fcmovb
into
dec
sub
cmp
sbb
adc
adc
outsl
xor
pop
lock
jmp
push
out
iret
inc
es
sbb
sub
sub
mov
sub
pop
call
and
add
add
jno
sarl
je
int3
push
int3
imul
pushf
push
lods
adc
cmp
or
xor
pop
mov
mov
mov
ds
dec
mov
cltd
nop
in
xchg
mov
fcmovu
sbb
aas
mov
xchg
jg
sbb
inc
jns
xchg
jb
push
aas
sub
jbe
in
push
adc
push
aad
jae
dec
adc
ficoms
adc
sbb
push
and
hlt
adc
mov
bound
adc
xchg
jmp
in
push
pop
sbbl
inc
sub
add
dec
fiaddl
push
je
xor
cli
cli
arpl
stc
cmp
adc
mov
sbb
push
push
cmp
push
adc
xchg
adc
stos
stos
sub
mov
jmp
jecxz
sbb
jl
mov
fldt
mov
adc
es
jmp
xchg
sahf
pop
fcmovne
mov
jbe
mov
or
ror
xchg
pop
sub
out
mov
lahf
movsb
jl
stos
gs
add
cld
pusha
lret
dec
insl
xchg
cmpsb
test
adc
je
test
stos
int
add
cmp
pop
push
fsubl
enter
xchg
js
jbe
sub
xor
cli
or
push
xor
jmp
xchg
cmp
lcall
cmp
mov
outsb
lret
adc
pop
adc
aam
pop
sbb
ret
cmp
bnd
dec
imul
mov
jae
sub
addb
add
imul
stc
lods
decl
insb
call
pop
cltd
ljmp
in
cmpsb
cmp
cwtl
inc
cmc
test
jae
jmp
repnz
mov
jmp
imul
sub
pop
jb
adc
pop
imul
cli
fisubrl
xchg
sbb
lea
xchg
divl
pop
jnp
mov
stc
cmpsb
icebp
cld
mov
pop
icebp
dec
push
xchg
rolb
dec
lea
stc
lret
adc
ljmp
dec
dec
jg
jp
mov
jl
imul
mov
xor
push
push
xor
pop
ret
ja
mov
push
mov
sbb
push
stc
ret
pop
cmp
testb
movsl
lods
and
xchg
cwtl
mov
sti
stos
xor
pop
mov
jecxz
or
jbe
test
js
fwait
std
dec
insl
pusha
pop
imul
loopne
sub
xorl
std
push
lcall
popf
subb
pop
insb
es
inc
cmovp
mov
into
xor
add
movsl
jno
add
iret
sbb
pop
fidivrl
add
rclb
sub
movsb
pop
in
mov
fstps
mov
inc
stc
push
and
or
stc
stos
mov
dec
xor
cmp
mov
sbb
jno
sbb
lock
gs
inc
xor
push
mov
mov
cmp
xchg
repz
sub
mov
mov
out
out
bound
frstor
mov
imul
dec
rol
es
bound
xor
out
adc
inc
les
aaa
cmp
clc
mov
bound
jecxz
addl
mov
ret
push
sub
lea
mov
sub
push
arpl
lret
sub
dec
mov
sub
mov
mov
xchg
int3
push
push
aaa
stos
iret
int
clc
loopne
push
adc
ficoml
mov
jmp
pop
repnz
pushf
ja
out
jne
loop
scas
scas
stos
pop
rcll
cmp
cs
mov
cmp
jg
fists
and
sbb
and
shl
lahf
out
cmp
stos
ja
dec
mov
insb
and
sbb
dec
in
inc
sbb
scas
ds
fisubl
and
shlb
jle
loope
mov
out
imul
shrb
jae
jge
pop
pop
jg
jp
or
mov
mov
dec
repz
stos
xchg
jge
sahf
lds
out
sbb
jecxz
jb
add
push
add
cs
test
xchg
mov
jmp
sub
repnz
push
sbb
lock
mov
dec
outsb
sub
sub
andb
dec
dec
aas
push
aaa
mull
add
popa
xor
jl
or
push
pop
jl
pop
xchg
test
jp
xchg
sub
xchg
or
imul
ffree
test
mov
cmp
add
ret
test
enter
xchg
test
xor
cltd
jbe
mov
cmp
inc
mov
inc
jle
jmp
xor
aas
int
popl
je
out
adc
xchg
ret
pop
mov
dec
scas
xor
adc
sahf
mov
xchg
mov
cmpsb
dec
sbb
sub
addr16
push
hlt
jne
mov
hlt
rclb
arpl
push
insl
jo
jnp
movsb
shlb
inc
sub
adc
cmpsl
xor
sahf
in
xchg
push
xchg
sahf
sub
xchg
sahf
into
jb
in
ficoml
cli
ret
cltd
loopne
xor
jnp
lea
xor
popa
and
bswap
es
mov
mov
or
push
cwtl
stos
add
and
add
cmp
adc
sti
imulb
orb
sbb
call
sbb
stc
inc
cmc
das
aaa
xchg
and
jle
in
dec
pushf
pop
out
stos
fs
jge
dec
loope
notl
in
dec
cmpsb
mov
leave
push
dec
pslld
ds
out
mov
push
lahf
mov
push
enter
movsb
jno
and
xchg
mov
pop
adc
mov
test
sbb
loope
sarl
cmp
es
pop
loopne
jno
test
xchg
jns
dec
and
mov
or
dec
pop
ss
mov
lds
mov
mov
sub
inc
test
hlt
xchg
or
test
out
jo
and
lds
rcr
jmp
cmpsb
rorb
sbb
jns
movl
out
jp
sbb
pop
out
bnd
cwtl
adc
lahf
dec
push
cmpsl
xor
jnp
xor
ljmp
decl
test
ljmp
mov
cmp
movsb
std
mov
test
movsl
je
push
cmc
sahf
ss
inc
jle
inc
xchg
stos
daa
insl
mov
rorb
jmp
enter
adc
jne
nop
sbb
es
andl
mov
pusha
and
adc
xor
xchg
xor
jmp
inc
push
icebp
addr16
rcl
pop
lahf
xchg
adc
loope
inc
add
pop
fdivrp
outsl
mov
orb
mov
cmp
idivl
test
jg
pop
fcomip
sbb
adc
inc
push
out
jmp
scas
cmpsl
outsb
jmp
scas
xor
outsb
nop
stc
sbb
mov
inc
add
jae
and
into
and
adc
push
adc
or
ror
outsb
lods
push
sub
cmpsb
repz
sbb
pop
pop
cmp
add
addr16
or
mov
sbb
cmp
adc
orl
repnz
repnz
sbb
xchg
mov
cmp
les
pop
adc
adcl
hlt
add
xor
mov
mov
sarb
jmp
mov
sarl
data16
sarl
xchg
cltd
sub
xor
cli
and
fcmovnb
aad
push
out
jp
pop
hlt
push
sbb
in
jne
lods
test
push
bound
adc
out
push
aad
jge
sub
scas
add
adc
add
bound
insl
cmpb
inc
ljmp
cmp
int
pop
push
out
into
push
fsubrl
repz
subb
xchg
sub
mov
jmp
jl
add
jns
icebp
adc
lock
xor
js
mov
push
loopne
fisttpl
add
sarl
sbb
inc
or
cwtl
ret
sbb
shll
dec
jbe
jb
mov
mov
dec
mov
mov
xor
push
cmp
stos
dec
or
imull
inc
gs
mov
jne
mov
pop
mov
sbb
pop
mov
fimuls
inc
popf
rcrl
xchg
pusha
jmp
repz
mov
outsb
cmp
lods
test
mov
add
inc
xchg
push
sub
jbe
sbb
adc
sub
mov
jl
push
cltd
insb
inc
addr16
xchg
mov
pop
js
pop
popf
jg
dec
xchg
lods
insb
jg
test
pushf
dec
cmpb
call
mov
add
aaa
cli
incb
or
jnp
cwtl
push
mov
add
test
scas
lret
dec
push
pusha
loop
push
mov
sbb
fs
mov
jmp
add
mov
and
push
inc
idivb
jno
stc
movsl
cmp
cmp
mov
jae
mov
or
xchg
imul
into
cltd
in
clc
leave
ret
fwait
cltd
jmp
sti
pop
jne
mov
mov
sbb
out
xorb
dec
jb
dec
and
pop
cmp
cmpsl
movlps
jp
cmp
xlat
inc
cmp
adc
pop
nop
ja
ret
and
sbb
dec
mov
mov
xchg
push
outsl
dec
sbb
push
sti
leave
aaa
pop
mov
cli
push
push
sysexit
into
cmpl
stos
adc
sar
jmp
jle
imul
bound
sub
xchg
adc
mov
mov
sub
test
cmp
and
loopne
sbb
xor
adc
mov
ret
mov
mov
mov
leave
repz
rcr
push
bndstx
adcl
mov
and
pop
mov
lods
lods
scas
lods
test
xchg
fistps
or
jmp
mov
js
sub
mov
mov
mov
cmpsl
xor
repz
lret
mov
dec
add
enter
push
pop
xor
shll
pop
cmp
stos
xchg
pop
pop
pop
enter
ror
popa
mov
push
inc
fldcw
jbe
insb
sbb
sbb
cmpsb
lds
cmp
fsub
sub
test
icebp
mov
pop
imul
aas
ss
mov
pop
sub
mov
mov
aas
gs
push
fimull
sub
dec
cmp
pop
dec
aam
shll
add
dec
scas
mov
leave
pop
lcall
xor
gs
js
sbb
mov
pop
fidivrl
mov
push
jle
addr16
mov
xorl
cltd
inc
into
push
test
xor
shll
mov
js
scas
mov
jecxz
mov
cld
sti
bound
mov
mov
fstl
pop
cs
mov
test
sub
jge
cmpsb
enter
arpl
jmp
cs
addr16
and
pop
add
jno
lret
xor
cs
mov
push
hlt
les
push
inc
mov
jp
push
jb
mov
icebp
out
data16
sbb
jp
mov
inc
pop
adc
xor
sub
pop
xor
es
push
mov
imul
push
xchg
inc
scas
movsb
lods
test
out
in
icebp
iret
cli
test
xlat
sahf
mov
add
arpl
mov
fnstsw
ret
leave
rcrl
daa
mov
push
aaa
cmpsl
inc
stos
mov
and
pop
mov
inc
call
push
insl
xchg
ljmp
pop
cmp
sub
xor
cmp
inc
inc
decl
sbb
pushl
cltd
cmp
push
cmpsb
stos
lds
and
cmp
adc
lock
mov
jecxz
or
push
test
mov
hlt
sbb
add
pop
loope
adc
pop
sub
scas
mov
mov
push
sar
stc
insl
lods
insl
stos
pop
mov
jl
sbb
mov
pop
xor
sbb
xchg
andb
ss
mov
sub
setge
pop
shl
push
xor
lahf
xchg
iret
mov
jo
icebp
loope
aam
jns
dec
mov
xchg
lods
mov
lods
cmp
lret
pop
and
lods
push
xor
je,pt
jl
dec
push
or
mov
sbb
push
notl
dec
movsl
fbld
cli
adc
lock
enter
mov
pop
mov
sub
enter
outsl
in
sbb
daa
push
mov
mov
push
idivb
stos
mov
xor
pop
out
inc
fs
add
cmp
cmp
and
mov
pushf
mov
dec
mov
xor
push
rcll
pop
dec
xor
dec
fs
push
scas
pop
movsb
fwait
xchg
sub
repnz
loop
jmp
dec
adc
repnz
dec
lock
or
jae
les
test
insb
lods
das
sbb
cli
or
jo
rcrb
push
dec
push
jnp
dec
pushl
sub
enter
test
popa
in
xchg
jp
loope
inc
sete
mov
pop
push
lret
pop
jnp
popa
mov
outsl
mov
xchg
scas
inc
and
mov
adc
and
cmp
adc
test
sub
and
inc
cwtl
fildll
sbb
sub
fnstcw
test
pop
lock
dec
mov
mov
or
aaa
loope
cmpsl
mov
jo
div
push
rclb
out
adc
leave
imul
cmp
lds
sub
mov
xor
mov
xor
ss
mov
mov
loope
test
jmp
repnz
fdivr
stos
outsb
cmpps
imul
or
mov
mov
cmp
xchg
inc
out
cli
mov
pop
jbe
cmp
add
push
jg
inc
ds
ds
or
lock
mov
popf
pop
jmp
test
int3
lcall
xchg
scas
inc
inc
loop
loope
mov
mov
ffreep
mov
stos
int3
and
test
mov
push
jle
mov
data16
jbe
inc
dec
add
leave
in
nop
popf
push
mov
sub
cld
cmp
and
dec
data16
sbb
loop
pop
mov
lds
test
test
out
dec
pop
mov
in
mov
jae
sbb
fistps
test
jbe
loope
lahf
jg
sub
cld
cmpl
test
push
jmp
lds
mov
dec
mov
push
fbstp
int3
adcl
stos
mov
pop
int3
leave
mov
movsb
and
cmc
add
test
push
or
xchg
cmp
and
in
aas
shll
mov
pop
mov
pop
cld
or
lret
or
in
pushf
in
mov
popa
xchg
shl
lock
imul
cmp
stos
out
ss
mov
sub
mov
sub
cmc
roll
xchg
and
xchg
pop
mov
dec
sarb
or
jmp
inc
push
sub
aad
add
mov
stos
cltd
out
dec
dec
int
pusha
dec
or
xor
incl
out
rolb
test
dec
movsl
stc
and
mov
out
jle
and
aad
lahf
cmpl
pop
push
push
pushl
mov
xlat
stos
popa
mov
mov
cmp
dec
lcall
stos
mov
cmp
pop
das
testl
outsb
pop
nop
mov
test
mov
pushaw
cmp
pop
push
adc
scas
insl
push
xchg
mov
push
add
push
cmc
lods
sbb
mov
lods
int
arpl
ljmp
and
mov
pop
xchg
loopne
mov
cld
rep
hlt
dec
fdivrl
aam
jmp
push
cli
scas
loopne,pn
std
or
pop
jo
cmp
cli
lods
jo,pn
xchg
outsl
rcrl
test
jmp
mov
xor
sbb
fisttpll
cli
lock
fbld
jae
mov
jmp
out
ja
push
insl
neg
out
pop
popf
sti
mov
sub
dec
repnz
adc
adc
sub
lods
fcom
ss
cwtl
or
or
dec
pop
push
sbb
xor
loope
dec
adc
sbb
mov
mov
repnz
push
arpl
push
aam
sub
mov
jae
repz
dec
or
cli
out
out
jge
out
loope
jae
out
mov
mov
sub
dec
scas
cmpsb
addr16
jb
ss
mov
cmc
push
ret
xchg
cs
mov
outsl
mov
int3
in
inc
or
sti
int
mov
dec
in
add
dec
cli
lods
pop
cmp
outsb
pop
iret
lcall
rclb
mov
cld
xchg
out
loope
lds
pop
xchg
mov
add
push
mov
cmp
loope
xchg
xchg
mov
cmp
sahf
cli
mov
jns
scas
test
xor
insb
mov
mov
enter
scas
std
adc
mov
scas
cmpsb
pushf
in
push
cmc
scas
into
cmp
mov
scas
aam
xor
in
jo
cmp
pop
test
and
insl
shrb
push
mov
hlt
vcvtss2sd
stos
and
mov
or
cmp
call
scas
jge
sub
in
jp
push
cmp
fs
or
mov
add
and
pusha
mov
gs
out
xchg
mov
fsubr
push
mov
inc
sub
fists
lret
test
push
cmpsl
cmpsl
lret
xchg
xchg
movsl
xor
push
es
in
mov
cwtl
repnz
add
add
test
jle
jne
popf
cmc
cmp
decb
int3
scas
int3
mov
int
sub
mov
or
lcall
stos
cmp
lock
ja
sahf
cmp
xor
push
in
sti
xor
loopne
clc
mov
cmp
push
mov
sbb
cld
jns
pop
add
xor
popf
xor
fwait
mov
mov
cwtl
imul
dec
cmc
scas
dec
out
push
stos
loopne
xchg
jne
fnstcw
cmp
push
cmp
stc
sub
stc
lea
mov
xchg
add
sarb
mov
mov
jp
pusha
push
sub
or
mov
dec
repnz
movsb
stc
mov
xchg
int
in
push
adc
iret
cld
lock
fdiv
cmp
pop
pop
movsb
shll
inc
pop
sarl
lea
fildll
jecxz
pop
dec
loopne
or
xchg
pop
test
clc
es
fstp
dec
jo
mov
int3
jae
inc
hlt
test
mov
stos
lock
scas
mov
je
ja
pop
lock
xchg
int3
out
shlb
daa
pop
cmp
ljmp
dec
shl
fsts
outsb
pop
dec
sub
add
mov
add
or
or
inc
add
ljmp
push
and
xchg
addr16
mov
jmp
outsb
daa
mov
cmp
mov
arpl
pop
and
fwait
cmp
pop
xchg
outsb
dec
inc
rorb
sub
inc
movsl
mov
mov
pop
jns
mov
push
jne
xchg
cmp
mov
fwait
loop
or
adc
fdivl
andl
loopne
cwtl
jne
fs
nop
je
int
ja
push
mov
jg
xor
test
ss
cmp
cmp
xchg
jecxz
test
or
addr16
sub
in
push
adc
fdivrs
pushf
dec
cmp
and
mul
and
loopne
test
mov
sub
sub
mov
aad
mulb
mov
cli
outsb
xchg
divl
insl
jle
xchg
aam
orl
mov
fucom
addr16
push
lret
cmp
xchg
popa
dec
aad
jge
jge
jnp
inc
and
aaa
jnp
pop
lds
lock
mov
orb
movsb
xchg
sbb
lods
iret
jmp
js
mov
sub
or
mov
mov
dec
scas
aad
dec
inc
lea
push
outsl
icebp
shrb
inc
xor
xor
mov
popf
cmpsl
xor
dec
push
frstor
jecxz
lock
jg
jo
sbb
test
test
lds
lahf
fucom
outsl
jecxz
popa
orb
add
sbb
call
sbb
xchg
out
stos
cmpsl
cmp
xlat
dec
xlat
out
and
sub
sub
arpl
dec
jp
rolb
je
int
jle
mov
push
lret
jecxz
dec
ss
dec
das
mov
jae
dec
mov
repnz
pop
test
dec
loop
cmpsl
add
jns
xchg
lcall
loopne
repz
inc
sub
adc
xor
movsb
popa
stos
xlat
test
test
adc
jl
adc
or
sub
ja
clc
mov
sbbb
mulb
divl
or
push
popf
shl
mov
je
push
je
in
int
push
jo
in
stos
addr16
leave
inc
xchg
mov
xchg
add
rcll
fucomp
fisubrs
jmp
or
cmp
mov
push
cmp
push
inc
mov
stos
xchg
aas
loopne
ja
fwait
in
lahf
ss
lock
neg
adc
out
inc
cs
imul
test
aad
rolb
push
push
stos
ret
lret
pop
adc
push
inc
nop
mov
jbe
lret
int3
fnclex
push
pop
jecxz
xchg
jp
out
das
mov
xchg
mov
clc
pop
pop
icebp
cld
fistpll
xchg
into
inc
test
clc
sbb
pop
jl
aaa
negl
push
push
push
pop
sub
and
add
xor
out
popf
shl
cmpsl
aaa
dec
mov
push
or
aam
sti
outsb
pop
out
jns
push
mov
xchg
and
adc
jne
cmc
movsb
mov
pop
fbld
mov
dec
inc
in
adc
inc
inc
outsb
jae
ror
in
jno
jmp
fucomi
ss
fisubs
ds
mov
sbb
mov
sbb
sbb
mov
jno
sbb
insb
lahf
push
je
sbb
xchg
and
rolb
pop
dec
sbb
jb
push
pop
push
mov
sarl
lock
mov
int3
adc
shr
mov
xchg
xor
out
pop
dec
mov
fsubr
aad
xor
fidivrl
outsl
mov
cld
and
in
pop
clc
cmp
ja
xchg
lods
jl
fildll
fists
out
jge
scas
push
mov
push
push
xor
or
clc
cmp
out
pop
pushf
dec
jle
cmp
jmp
lods
sub
cwtl
lea
mov
in
shlb
and
dec
mov
mov
shll
xrelease
sub
add
push
data16
pop
aas
bsf
jle
xchg
lret
fdivrp
xchg
nop
jns
negb
test
xchg
xchg
das
in
cmp
adc
xchg
dec
inc
and
cltd
mov
jecxz
daa
xlat
jne
lods
add
sub
pop
adc
jae
pop
pop
clc
leave
pop
adc
push
add
in
fildl
mov
pushf
or
loopne
xchg
sbb
jo
jp
popa
push
inc
leave
call
inc
mov
or
push
shll
xchg
sbb
testl
dec
and
xchg
xor
pop
in
in
dec
mul
jae
inc
dec
sbb
pop
push
bound
adc
adc
push
jmp
in
cmp
bound
sbb
mov
mov
xchg
hlt
movsl
fidivs
inc
fistl
das
cmp
mov
insb
movsb
xor
andb
das
jb
data16
gs
and
jle
jp
cmpl
inc
icebp
pop
dec
push
xchg
out
and
sub
sahf
pop
pop
es
sbb
xchg
sti
aad
jmp
mov
add
pop
pop
test
std
pop
jmp
and
inc
and
dec
xchg
dec
adc
lret
loop
or
inc
dec
outsl
push
mov
pusha
fists
mov
mov
xchg
movsl
xchg
es
pop
addb
pop
or
mov
gs
mov
stos
scas
in
jmp
filds
aam
sbb
and
popa
pop
mov
pop
mov
gs
bound
pop
inc
pop
pushl
ljmp
ljmp
popf
das
lret
fcomps
inc
pop
jmp
daa
addr16
scas
in
pop
addr16
insb
cmp
pop
mull
mov
inc
push
or
mov
out
mov
push
mov
xchg
popf
bnd
jbe
lods
mov
sarb
pusha
pop
mov
int3
or
sub
inc
in
fs
adc
lret
dec
aam
call
xchg
mov
dec
push
sbb
lret
dec
cmp
popf
push
hlt
fsubrl
lcall
mov
fsubrl
pop
fcom
in
stos
jb
add
into
je
jg
jno
sub
push
mov
clc
push
shrb
cltd
pushf
xlat
fcmovnu
popf
in
mov
inc
or
pop
stc
dec
lods
in
push
imul
aam
sub
jg
sbb
enter
xchg
or
cld
or
mov
xchg
xor
push
dec
ror
sbb
inc
shll
mov
jecxz
rolb
jle
stos
pop
lock
loopne
dec
fidivs
jecxz
ljmp
and
xchg
aam
cmpsb
push
jb
push
testb
scas
lret
imul
cmpsb
jp
and
mov
nop
xchg
and
xchg
mov
and
insl
xchg
outsb
aam
rcrb
inc
mov
stc
dec
into
scas
int3
test
int3
sbbl
xlat
stc
mov
cwtl
out
inc
sub
test
add
or
sbb
outsb
and
or
dec
or
cmp
or
test
add
mov
faddl
nop
push
cmp
jno
sbb
push
jle
cld
sub
fdivrp
push
xor
rcll
dec
fdivrs
fbstp
and
inc
shlb
mov
ja
mov
imul
ficompl
int
sbb
enter
xor
jle
test
adc
test
sub
xchg
pop
dec
shlb
test
insb
jl
fldt
loope
loope
ljmp
rclb
cmp
jns
push
cltd
and
sbb
aad
in
xchg
xor
push
inc
pop
pop
lea
mov
testl
add
cmp
fucomi
sahf
arpl
nop
adc
sarl
jne
popf
adc
inc
lods
shlb
lods
hlt
mov
lea
mov
pop
aaa
pushf
adc
insl
mov
nop
mov
adc
mov
or
and
bound
sub
fcmovnu
or
es
shll
or
push
pop
mov
stc
xor
add
or
pushf
adc
jb
sahf
push
shll
or
sub
insb
cmp
out
popf
inc
sub
aad
cltd
jge
pop
cmpsl
mov
sbb
and
jmp
jbe
cmpsb
stos
rol
sub
dec
fldl
loopne
fdivl
mov
jge
daa
test
xor
popf
sub
cs
insb
dec
jne
rolb
outsb
imul
or
mov
pop
mov
mov
fcmovne
mov
and
call
add
leave
loopne
test
test
popa
pop
cmc
dec
and
push
dec
cmp
in
jg
push
fldenv
aas
push
and
ja,pn
inc
adc
pop
mov
pop
lret
sub
ds
lret
cwtl
daa
imulb
pusha
push
test
push
sub
hlt
pop
mov
add
inc
hlt
pop
mov
xor
mov
test
dec
mov
and
cmc
in
xchg
pop
or
gs
mov
sub
mov
adc
mov
add
push
pop
pop
pop
adc
lret
sbb
sbb
inc
mov
ficomps
inc
xchg
jne
cmpsl
popa
push
xchg
iret
lcall
push
scas
jmp
add
cmp
je
xor
mov
jnp
mov
and
aad
stos
mov
rorb
sbb
addb
ss
out
pop
fimull
jl
outsb
jp
mov
cmpsl
xor
or
lcall
fbld
xchg
mov
adc
in
mov
arpl
iret
leave
dec
jge
mov
ds
mov
adc
or
out
aam
mov
es
dec
cmp
scas
dec
icebp
clc
int3
scas
rolb
shll
dec
or
or
dec
fstps
or
insb
jmp
mov
inc
jmp
js
fwait
in
aaa
pop
mov
scas
mov
imul
push
es
lods
mov
fwait
add
or
jmp
repnz
outsl
cli
loope
adc
imul
add
outsb
lcall
ret
in
into
fnsave
jge
dec
xchg
cmp
sub
adc
fcom
std
test
mov
jne
jmp
je
aas
mov
lret
pop
inc
xchg
jmp
stc
stc
mov
cwtl
jo
add
and
or
mov
or
mov
popa
je
das
inc
adc
xchg
fstps
xchg
pop
fdivrl
adc
aaa
xchg
jl
push
loope
mov
int
mov
xchg
sub
popa
rep
shr
dec
pop
repnz
push
dec
int3
xchg
mov
stos
icebp
dec
jmp
mov
test
push
and
lcall
and
sbb
lea
popa
int
call
lcall
add
mov
out
clc
leave
xorb
push
sbb
xchg
pushf
sti
xchg
loopne
popf
lret
repnz
dec
jmp
push
push
xchg
cld
adc
jp
cmp
xor
and
test
sbb
push
ljmp
cltd
loopne
ljmp
clc
push
lds
or
pop
std
mov
imul
mov
call
test
or
jne
adc
push
lock
test
jmp
add
xchg
into
and
repnz
jmp
pop
je
mov
inc
cmp
cmpsl
mov
jmp
les
sub
jb
in
test
clc
cwtl
fs
fisubl
js
xchg
sbb
pop
sub
int3
cwtl
pop
cmp
int3
cmp
inc
push
pushf
push
lret
fstl
out
cmp
jp
in
pop
insl
jg
inc
cli
dec
sbb
xchg
shrb
outsl
dec
cs
push
fidivl
jp
cli
mov
cmp
hlt
sub
fcoml
mov
adc
push
mov
sbb
scas
loope
sbb
push
ret
lahf
push
cwtl
xchg
imul
loope
or
dec
xchg
sbb
xor
movsb
fwait
bound
mov
aad
jp
dec
xchg
inc
dec
mov
retw
fbld
clc
xchg
cmpsb
or
xchg
or
mov
jge
mov
fdivp
push
ret
xorb
sbb
pop
test
lock
adc
mov
lock
sbb
fstpl
cmp
cs
mov
aad
insb
mov
incl
xlat
lahf
js
fnstenv
ljmp
cli
cli
clc
mov
pop
mov
add
pop
mov
in
clc
stc
decb
cmp
out
movsl
pop
jo
mov
push
xchg
add
sbb
jge
sarl
fucomip
scas
rcr
jnp
push
int3
ds
cmp
push
out
pop
mov
sbb
xor
cmp
push
and
mov
mov
stos
imul
dec
mov
push
mov
add
daa
pusha
pop
inc
aaa
loop
mov
cld
nop
mov
jae
outsl
mov
ret
add
add
inc
xor
cmp
mov
outsl
cmp
pop
outsl
sub
jae
xlat
fsubl
sbb
sub
stos
xchg
lock
ret
leave
sbb
cltd
mov
xchg
push
idiv
test
cs
sbb
fimuls
dec
jo
icebp
inc
in
jecxz
test
pop
idivl
out
xor
push
inc
es
xchg
pop
lods
or
ficoml
test
xor
out
sbb
xchg
mov
lock
in
push
daa
adc
xor
adc
and
ja
mov
pop
cmpsb
cmp
shrb
cli
repz
or
retw
sbb
scas
xchg
adcb
add
mov
dec
or
push
pop
push
dec
addl
xor
jo
cmp
shlb
mov
jecxz
xchg
mov
sbb
push
sbb
pop
jmp
pop
lcall
push
rcl
and
or
sti
in
das
or
sahf
jbe
les
pop
lcall
decl
dec
push
mov
movsl
stos
pop
cmp
sahf
inc
ljmp
sahf
and
test
mov
jle
mov
xchg
iret
dec
or
sarb
jo
pusha
incl
pop
gs
enter
xchg
sbb
test
in
dec
lods
add
mov
addr16
xor
inc
out
push
aas
adc
sub
cmp
jl
cs
orl
bound
or
xorl
les
into
stc
and
aas
dec
push
inc
jae
inc
outsb
outsl
jne
leave
jne
jne
and
and
insl
xchg
fnstsw
xchg
mov
arpl
pop
or
mov
mov
hlt
nop
outsb
mov
stc
lea
mov
cmpsb
mov
test
inc
sbb
and
mov
mov
hlt
sbb
scas
mov
sub
dec
mov
inc
aaa
decb
loop
mov
mov
pop
daa
subb
sbb
mov
pop
mov
pop
xchg
lock
xlat
cli
je
test
in
xchg
cmp
mov
pop
int3
test
push
cs
cmp
push
or
xchg
cmp
push
mov
push
and
popa
pop
cltd
mov
cmp
mov
imul
dec
sub
ja
outsl
jnp
dec
jne
xchg
cltd
cs
std
jns
decl
scas
fdiv
or
sahf
jae
push
daa
adcl
cs
int
fs
lock
jmp
sub
ljmp
lds
jmp
into
mov
push
popf
lods
cmp
repnz
movsl
sahf
mov
bnd
daa
andl
jecxz
fscale
push
cli
rorb
cwtl
mov
push
int3
div
leave
jno
lret
fnstenv
outsb
jnp
mov
cmc
push
loop
adc
xor
cld
in
cmp
scas
fmull
push
clc
push
jmp
rcll
and
pop
cmpsl
cmp
popf
mov
sbb
cmp
je
into
dec
rcl
lods
fs
fistl
hlt
cmc
jecxz
daa
mov
mov
test
pop
or
pop
mov
mov
mov
push
jo
cwtl
push
pop
popf
sbb
cli
aam
bound
mov
dec
repnz
inc
sub
sbb
dec
shrb
mov
loope
cmp
xchg
cmpsb
and
mov
and
int
pop
data16
cmp
mov
lret
sbb
pop
repnz
cmpsb
and
adc
iret
mov
das
push
es
mov
lds
in
sub
std
outsb
inc
popa
bound
xchg
out
push
fsqrt
jg
mov
cmp
mov
popa
jbe
sub
rolb
cmp
xor
leave
rcl
mov
insb
aad
leave
cwtl
inc
rorl
aam
mov
pop
pop
jo
not
loop
addr16
stos
inc
sub
dec
mov
int
int3
dec
add
pushw
add
push
dec
pop
fdivl
push
in
arpl
sbb
push
ret
inc
jnp
jle
push
in
cmp
xchg
cmc
xchg
dec
sti
fldl2e
jae
xchg
cltd
fwait
fwait
daa
enter
in
sub
lahf
pop
stos
push
cmpsb
jb
mov
clc
fsubp
pushf
in
shlb
mov
dec
mov
gs
push
mov
pop
pushf
adc
mov
popf
push
fdivl
int
mov
rorl
push
lahf
lret
add
ja
ljmp
jg,pt
cwtl
insl
mov
aad
sub
cwtl
jmp
outsl
in
jne
jle
dec
pusha
fstpl
insb
and
std
ja
sarl
xorl
loope
stc
cmp
loop
add
push
ret
mov
and
jmp
mull
mov
fstl
es
pop
rolb
push
iret
out
push
clc
pop
mov
or
mov
std
fnstcw
cld
pop
shr
mov
mov
mov
in
in
idiv
dec
scas
cmp
jmp
push
call
cltd
and
stos
hlt
gs
shlb
fsubl
push
pop
insb
ret
popf
push
push
cmp
cli
clc
dec
mov
mov
jne
cmpsb
in
out
jge
lods
int
hlt
fcompl
rcr
in
sbb
lods
jns
das
fidivs
xlat
idivl
in
xor
ja
nop
mov
gs
mov
rcl
push
mov
hlt
mov
fwait
dec
movsb
mov
cmp
dec
call
mov
cmp
imulb
loope
les
sub
jmp
ss
enter
jle
dec
mov
andl
mov
cwtl
int
cli
aad
pop
push
movsb
mov
bound
sub
pop
dec
xor
bound
subb
rcrl
xlat
mov
std
pop
xchg
lret
add
enter
mov
andl
push
in
inc
dec
and
inc
inc
jnp
arpl
jae
fwait
adc
popa
pop
pushf
mov
sbb
xorl
pop
out
loopne
pop
xchg
sarl
sbb
cwtl
pop
sbb
popf
in
mov
xchg
and
mov
jge
pop
popa
ja
mov
fmull
dec
dec
mov
or
lahf
js
mov
test
rorb
call
dec
pop
sarb
lock
cmpsl
inc
pop
rclb
lea
mov
pop
scas
call
cmp
xor
sub
sub
out
shll
jge
inc
push
rcll
pusha
adc
int3
popa
dec
inc
adc
cltd
cmp
test
add
mov
mov
adc
ret
sarl
inc
sbb
mov
dec
dec
add
inc
lock
fs
ss
and
xchg
gs
jecxz
mov
push
fsubrp
in
adc
or
add
pop
xor
mov
xchg
adc
mov
jno
sub
jns
push
cmp
int
or
cmp
data16
je
fistpll
xchg
test
leave
jae
sbb
pushf
and
adc
aam
mov
lcall
fwait
dec
in
and
add
xchg
mov
jg
int
pop
push
xchg
dec
es
sbb
mov
push
stos
mov
dec
aaa
mov
lea
cmp
out
loope
jb
inc
rolb
inc
les
or
pushf
bound
xchg
fdivrs
cwtl
mov
mov
mov
xor
jmp
popf
std
cmp
mov
push
mov
mov
inc
mov
pop
fucomi
in
jbe
sbb
mov
in
add
imull
ljmp
movsl
bswap
adc
int3
pop
gs
out
push
or
xor
cmp
arpl
repnz
lret
sti
aad
jle
ret
out
in
daa
sti
inc
lea
xor
mov
outsl
arpl
test
cmc
jp
xchg
loope
cmc
sub
jg
test
pop
in
fildll
cmpsb
loope
inc
add
jmp
bnd
mov
adc
clc
jecxz
in
and
add
ret
rol
fsubrp
mov
shr
xchg
std
or
jle
int3
pop
xor
stc
test
imull
out
mov
scas
fildll
jns
loopne
sbb
ret
rolb
in
sub
pop
xchg
test
pop
push
adc
sbb
test
push
push
test
pop
push
mov
mov
push
cwtl
pop
push
sub
mov
sub
sti
inc
mov
popa
cmp
cmp
cmp
mov
iret
sbb
sbb
dec
sbb
xor
ret
clc
ja
test
dec
jecxz
adc
adc
jno
out
iret
mov
dec
lea
sbb
xor
cld
sarb
cmp
cmp
mov
cld
mov
cmp
sbb
add
mov
push
int
add
iret
sbb
out
add
test
push
stos
sbb
push
shlb
ror
lods
stos
or
sub
lock
je
add
lock
sar
inc
inc
jo
pop
icebp
ds
adc
mov
adcl
popa
mov
aas
clc
jge
outsb
push
ret
mov
add
mov
repz
or
maskmovq
idivl
popf
lock
add
popa
fadds
mov
outsb
push
and
rorl
sti
popf
out
inc
sbb
je
sbb
mov
mov
adc
xchg
mov
pop
stos
rcrb
mov
sbb
pop
or
ret
mov
js
rorb
scas
je
cmp
imul
and
sbb
xor
divb
icebp
and
ja
fmul
shr
xor
xchg
in
fwait
jmp
mov
stos
xchg
cmp
lret
pop
pop
sub
cmp
pop
dec
popf
subl
sub
ret
ljmp
ficoml
sbb
aam
sbb
inc
fs
ds
std
scas
dec
data16
pop
sti
outsb
xchg
push
pop
inc
sbb
shll
push
or
scas
daa
push
mov
jbe
lock
or
ret
or
sbb
push
mov
jbe
pop
add
cmp
movsb
pop
fdivrs
push
inc
cmpsb
popa
xor
push
loopne
mov
mov
popf
fildl
dec
lds
int3
js
fs
test
das
dec
pushf
mov
mov
jbe
rcl
push
push
xor
ds
cwtl
pushf
mov
adc
pop
jp
dec
fs
adc
jecxz
xor
add
ror
rclb
xchg
cmpsl
hlt
in
in
sub
push
add
xor
adc
mov
stos
mov
lret
pop
loop
push
mov
hlt
push
outsb
inc
jecxz
inc
shl
jecxz
outsb
je
test
mulb
mull
addr16
mov
sbb
pop
mov
ja
mov
idivb
into
data16
inc
and
pop
movsb
and
cld
ficompl
push
push
sub
bound
mov
inc
xlat
mov
pop
and
sarl
mov
movsb
push
test
fcompl
push
out
lods
movsl
sub
fdivp
xor
in
insl
popf
adc
fcoml
mov
and
icebp
jo
pop
pusha
push
jnp
jg
mov
popf
and
and
add
pop
arpl
jmp
cmp
ja
xchg
or
subb
in
xor
pop
nop
add
xor
sub
insb
mov
sbb
int
mov
fdivl
jl
scas
fwait
aam
sub
or
xchg
pop
xor
in
gs
xlat
mov
in
out
xchg
xlat
aaa
test
call
xchg
int3
rcrb
inc
mov
mov
push
pop
push
xchg
scas
icebp
pop
pop
cmp
popf
xor
rclb
xlat
mov
mov
insb
fsts
idivl
fxch
add
push
bound
push
cltd
insb
repnz
aam
cmp
pop
fcmovbe
in
sbb
jg
lcall
popf
das
ljmp
lcall
outsl
push
mov
mov
out
pushl
ds
arpl
pushf
fwait
scas
pop
mov
testl
jno
popa
pop
jp
mov
nop
and
push
mov
subb
movsb
dec
ja
push
and
pop
test
test
sahf
and
jns
fidivrl
mov
mov
push
cmp
test
or
fldcw
dec
aad
mov
mov
mov
mov
rcr
out
sub
mov
aam
loop
loope,pn
pushf
pop
jo
in
cmc
fcoms
xor
pop
jae
lret
in
mov
rorl
or
or
mov
mov
or
es
dec
aad
add
bound
mov
cmp
jb
push
and
rcll
jbe
pop
shrl
sub
lret
jne
mov
loop
mov
jle
lret
leave
sbb
cs
push
test
mov
xor
cwtl
test
in
add
fsubrs
loopne
add
rdtsc
js
andb
add
add
push
xchg
or
fsubs
loopne
add
and
adc
pop
or
out
adc
mov
fisttps
test
sub
xor
loopne
add
xor
enter
push
shlb
sahf
adc
sti
add
lods
adc
adc
test
and
dec
test
xchg
mov
cmc
cltd
push
mov
ljmp
frstor
dec
scas
push
shl
je
jno
sbb
mov
dec
mov
bound
shl
outsl
sub
imul
and
jno
les
imul
fimull
cli
jp
dec
aam
mov
stos
fisubrl
and
xchg
sarl
cs
aaa
call
jno
and
out
xchg
in
cmc
add
pop
and
fwait
cs
mov
and
jmp
dec
outsb
insb
repz
mov
adc
fisubrs
rep
add
adc
lret
ror
ja
sub
inc
xor
insb
mov
mov
and
or
in
xor
and
lret
jns
in
adc
jmp
or
xchg
jns
jns
or
add
in
xor
sub
sahf
add
jbe
test
sbb
iret
or
and
mov
sbbb
cmp
aaa
hlt
in
mov
or
jle
ret
xlat
int3
mov
loope
ret
aam
mov
push
rcrl
insl
je
mov
in
mov
in
stos
cli
pop
pop
sbb
xor
mov
leave
sub
cmp
outsb
jnp
sbb
leave
ja
mov
daa
pop
xchg
pop
mov
push
push
es
psllq
push
push
shll
sub
lcall
lock
pop
fildl
pop
fidivs
in
fidivl
dec
xchg
cmc
lods
pop
rclb
add
stos
mov
lods
pop
cmp
rcl
popf
adcb
jo
call
xlat
movsb
repnz
dec
add
call
loope
sub
or
cmc
das
xor
mov
dec
lods
mov
xchg
lcall
aad
xchg
pop
mov
inc
outsb
lods
sub
jnp
add
xchg
test
shl
xor
cmp
cmp
repnz
mov
pop
jo
out
fstpl
jle
outsl
ret
lea
repz
rcrl
sti
orb
push
lods
cmpsl
sbb
outsl
lret
outsb
dec
mull
pop
lahf
ljmp
movsl
jge
sbb
pop
adc
xor
cmp
sub
mov
push
fidivl
leave
jecxz
pop
imul
cmp
gs
leave
ret
stos
mov
pop
andb
shr
ljmp
out
ds
sti
inc
jno
push
sbb
stos
cmp
popa
aaa
test
cmp
jne
jb
xchg
clc
loopne
jmp
mov
lea
mov
lods
adc
sub
daa
pop
cmpsl
je
jo
loopne
xchg
dec
inc
xchg
rorb
pop
lock
pop
lods
das
mov
movsl
js
jns
loop
jmp
add
jp
or
cli
cmc
push
scas
mov
lods
ja
jmp
sbb
shll
lods
mov
mov
daa
rcl
es
jmp
fcmovnu
pop
adc
stos
adc
ficoms
or
mov
sbb
mov
cltd
inc
sti
es
push
add
int3
mov
push
popf
repnz
cmpsl
sbb
and
in
cltd
daa
insb
cmp
leave
or
xor
ljmp
roll
xchg
mov
jnp
fstpl
fbld
jecxz
mov
int
mov
mov
int
cmp
fisttps
int3
xchg
rcrb
std
mov
jbe
dec
lret
push
outsb
fstpl
fimuls
pop
mov
jmp
in
cmpb
pusha
testb
icebp
mov
jmp
in
aas
xchg
std
pop
je
mul
sar
sahf
in
pop
push
rep
les
aam
cmpsl
loope
pop
cwtl
cltd
shr
pop
shl
xlat
pusha
sub
imul
pop
push
rolb
and
aaa
iret
enter
fildl
ret
test
sti
add
or
fistl
sub
in
jle
js
das
dec
mov
jno
ss
xor
mov
inc
push
mov
mov
out
mov
fwait
mov
xchg
bound
je
cmpsb
les
adc
pusha
push
mov
jge
ret
ljmp
mov
aas
sti
mov
inc
sub
mov
inc
jge
inc
push
push
divl
mov
sbb
jecxz
xor
or
fldl
xchg
and
mov
cltd
sbb
push
mov
xor
dec
and
pushf
sbb
pop
sbb
inc
pop
lcall
cltd
pop
nop
iret
mov
scas
mov
pop
pop
sbb
cmp
mov
push
enter
push
push
ret
filds
mov
cmp
insl
cs
rorl
sbb
loop
fiaddl
rorl
stc
xchg
cmpsb
push
test
daa
push
add
lahf
jbe
cmp
test
lahf
xchg
mov
bound
ret
mov
push
pop
scas
add
dec
xchg
das
push
ret
mov
push
mov
inc
shll
push
mov
es
loop
xor
test
fs
push
and
loopne
pushf
mov
leave
clc
cli
and
xor
inc
cmc
ret
aad
call
jns
bound
leave
test
jne
add
push
in
popa
dec
mov
mov
mov
and
add
pop
jmp
dec
enter
pop
scas
or
lcall
fxch
pop
mov
rolb
push
fstps
cs
in
jne
ljmp
mov
jns
loopne
fidivrl
icebp
mov
pop
jmpw
scas
push
fbstp
jbe
mull
sbb
jnp
data16
mov
sub
mov
rcrl
sbb
js
loope
mov
or
bound
mov
lock
xor
fiadds
xor
jo
cld
jge
push
iret
lret
sbb
out
aam
pushf
push
mov
div
sti
gs
jno
add
push
jne
lds
push
dec
or
call
mov
xor
jnp
and
or
shlb
icebp
call
scas
outsb
ret
jl
xchg
movsb
dec
pop
in
cmc
sbb
aaa
nop
iret
lds
es
cmp
je
call
aaa
pop
dec
or
shrb
xchg
in
dec
test
inc
pop
mov
jne
or
scas
xchg
je
cmp
test
mov
adc
cld
inc
leave
add
mov
push
dec
or
test
popa
mov
dec
lods
div
pop
jecxz
jecxz
jle
and
inc
jecxz
test
sbb
shlb
addr16
clc
aaa
jecxz
sbb
fcomip
dec
jecxz
push
mov
icebp
pop
jecxz
push
mov
outsl
aaa
jp
int
insl
push
push
ret
jg
lcall
cmp
andl
lock
js
pop
inc
outsl
xchg
sahf
mov
ret
cld
daa
or
cli
sub
les
sbb
cmp
icebp
in
rcl
decl
jae
cmp
lock
jo
dec
xor
dec
loop
ret
add
mov
icebp
addr16
sti
adc
push
daa
push
leave
adc
js
loop
lea
jecxz
stos
sahf
inc
mov
and
lock
jbe
adc
jno
or
jno
jns
iret
stc
and
js
jecxz
loopne
add
jg
sbb
lock
jle
gs
popa
int3
sbb
call
or
pop
clc
cltd
mov
push
and
mov
jmp
out
push
call
pop
pop
cmp
movsb
sbb
andl
mov
sbb
or
and
mov
sbb
jb
lret
ret
popa
clc
cmp
mov
out
sahf
sbbl
xchg
je
mov
xor
test
scas
imul
adcb
xchg
outsb
xchg
scas
les
jb
outsl
es
push
in
bound
arpl
dec
jno
popa
dec
and
or
cmp
mov
xor
xlat
add
movsl
andl
cmpsb
adcl
jne
cmpsb
jb
and
push
stc
out
lcall
popf
out
sub
dec
or
push
cmc
cltd
push
xor
pop
into
xor
out
test
xor
mov
ja
xor
call
and
daa
adc
stos
lcall
fwait
push
rcrl
and
sbb
xchg
pushf
int3
push
adc
insb
gs
popf
clc
daa
movsb
pop
inc
iret
pop
rcrw
xor
pop
inc
mov
imul
cmpsl
adc
or
sbb
shrl
hlt
push
or
test
popf
int
sbb
iret
hlt
hlt
mov
jge
push
in
out
fsubrl
mov
gs
jl
jnp
and
decb
outsb
cli
xchg
push
iret
push
imul
iret
ret
mov
loopew
jo
shrb
leave
xor
dec
in
dec
pushf
lret
sbb
jg
aam
cwtl
jmp
loopne
inc
sub
js
mov
adc
jmp
mov
push
lea
test
push
loope
add
xor
sub
xchg
add
lret
mov
jbe
push
jecxz
mov
sub
mov
dec
push
loope
out
inc
loope
in
dec
into
mov
adc
icebp
dec
fistpl
lock
jno
test
cmp
movsb
rcrl
das
xchg
push
out
fdivrl
loope
sarb
addr16
loop
int3
cli
out
stos
sahf
and
mov
xor
push
push
mov
sub
pop
cmp
mov
pop
lcall
pop
or
rorb
xor
js
aam
les
setb
inc
popf
fnstsw
or
inc
cmp
repz
inc
data16
add
lock
add
into
sti
lods
jl
dec
sarb
push
jo
sbbb
das
mov
sbb
stos
inc
loope
fldcw
sbb
inc
or
fdivr
inc
out
hlt
int3
sbb
imul
jno
aaa
push
jmp
xchg
roll
out
in
shlb
into
mov
inc
jge
inc
imul
push
fs
pop
pusha
pop
iret
shrl
leave
mov
mov
sub
mov
or
shl
sub
xor
lahf
push
jb
scas
mov
dec
mov
pop
int3
add
lea
sarl
and
push
gs
lcall
cld
inc
mov
bound
xchg
std
mov
flds
icebp
testl
and
pop
push
sub
or
mov
xchg
mov
sbb
std
jne
test
in
ja
cmc
sbb
iret
and
or
aad
into
dec
xchg
or
cmp
adc
fwait
shlb
xchg
sub
adc
popa
ret
int3
xchg
and
push
int
mov
notl
lock
daa
iret
mov
pop
sbb
mov
ss
mov
out
pop
sbb
in
lods
sub
fbstp
shr
ljmp
out
loop
jg
push
cli
aas
mov
rolb
inc
mov
stos
nop
xchg
popf
mov
sub
test
xchg
es
call
pop
icebp
mov
sub
jb
pop
and
or
jge
lock
daa
inc
lock
cmc
xchg
aas
adc
adc
jle
mov
mov
rolb
and
nop
cmpsb
dec
rorl
cs
mull
sbb
pop
les
xor
and
in
push
sub
push
push
pop
arpl
movsl
subb
xchg
jecxz
adc
fmuls
sub
ret
clc
data16
nop
roll
jmp
push
push
stos
cmp
lretw
stc
ds
mov
cltd
xor
inc
or
sub
mov
aad
add
add
and
sahf
in
and
into
adc
cmp
add
pop
gs
mov
dec
insl
aaa
ljmp
pop
or
sub
push
inc
add
inc
push
scas
pop
mov
add
fadds
bound
mov
shr
and
mov
sbb
les
dec
ret
xchg
repnz
dec
add
dec
cmp
lea
mov
xchg
mov
pop
xchg
cmp
repnz
aaa
std
cmp
hlt
or
aas
mov
ja
mov
xchg
sti
ja
adc
aam
test
cli
sbb
loope
inc
popf
jle
jno
mov
jle
ds
push
shrl
test
cld
and
push
jne
pop
nop
mov
cmovno
movsl
xor
pop
xchg
xchg
xchg
jno
lahf
jmp
lcall
aam
lods
rclb
xchg
cmc
cmpsl
nop
adc
xchg
stos
pop
decb
imul
loopne
xor
pop
ret
daa
xor
sub
stos
roll
mov
scas
shl
mov
cld
xchg
cmp
imul
xlat
or
mov
lds
push
data16
adc
mov
and
sbb
adc
xchg
and
xchg
sbb
addb
les
sbb
repnz
adc
das
jl
xchg
cmpsl
push
mov
in
call
xor
repnz
arpl
sub
cs
mov
mov
and
push
jge
ficoms
ret
jnp
insb
les
add
aam
dec
adc
jecxz
popf
xor
and
and
mov
xchg
fisubl
xorl
loope
mov
xor
inc
fs
test
jbe
ror
test
xchg
outsl
shlb
lock
mov
in
hlt
mov
sar
idivl
lahf
test
fsubrp
scas
inc
pop
sub
fisubl
push
inc
mov
scas
xchg
mov
mov
mov
mov
sbb
inc
daa
jle
push
sbb
daa
scas
sub
jbe
and
andb
movsl
push
or
dec
mov
test
pop
insb
mov
ret
xchg
xor
rclb
mov
out
inc
popa
es
push
mov
lea
popf
or
jge
adc
mov
ret
inc
mov
xor
cmc
dec
xchg
popa
cs
sar
cmpsb
ficompl
sti
test
stos
and
insl
sub
fisttpl
push
sub
pop
dec
adc
adc
cwtl
stc
mov
jl
aaa
push
sbbb
jg
fcompl
xchg
cltd
mov
aas
and
or
add
hlt
pop
or
add
sar
jle
sbb
into
xor
insb
xor
mov
pop
js
sti
lahf
sti
test
mov
stos
inc
je
sub
loop
sub
mov
adc
das
mov
xlat
dec
imul
sbb
cmp
cmp
movsb
aas
mov
imul
hlt
mov
dec
xchg
cmpsb
inc
out
ljmp
mov
pushf
dec
js
sbb
push
mov
push
jg
outsb
in
in
das
jmp
scas
loope
or
and
mov
out
add
lcall
je
xchg
push
pop
jl
lock
test
ljmp
inc
shlb
dec
rcrl
mov
scas
add
pop
sbb
ja
xor
push
addb
push
aam
jb,pt
movsl
jge
cmpsl
outsl
push
jnp
xor
repz
testb
pop
mov
fmul
jae
test
mov
mov
or
push
push
pop
aaa
add
inc
rcr
xchg
push
stos
lock
or
movsb
test
ret
xor
push
pop
adc
and
mov
sbb
je
xorb
cwtl
and
mov
cmp
fcoml
cmc
mov
mov
rcrb
and
sub
xor
lods
push
into
mov
adc
jl
lock
or
ret
subl
gs
mov
daa
jnp
rclb
outsl
pop
pop
outsb
loope
shr
rcr
mov
mov
int3
imul
mov
stc
push
jmp
dec
cmp
cmp
cmp
cmp
jmp
xchg
pop
cmpsb
xchg
insb
jge
mov
pop
negl
mov
out
add
and
jae
sahf
gs
loope
loop
les
sahf
dec
loope
pop
dec
and
cmp
adc
adc
pop
ret
adc
xchg
dec
lret
popa
mov
jge
pop
call
je
cli
pop
int
pop
ss
outsl
mov
stc
nop
jge
imul
imul
pushf
data16
js
fwait
shrb
jae
xor
xor
jbe
dec
test
xor
jle
int3
xchg
or
mov
mov
cwtl
mov
jle
cmp
call
sub
sbb
in
mov
pop
mov
jo
popf
mov
movsb
push
cmpsb
cmp
xchg
jnp
push
push
shl
lahf
and
insb
mov
mov
mov
out
je
xchg
jge
sbb
sahf
or
std
push
inc
mov
xchg
test
pusha
popa
jnp
mov
pop
mov
outsb
pop
test
dec
mov
inc
push
xchg
mov
rol
xchg
adc
jb
aas
movsb
hlt
lods
in
mov
push
xchg
arpl
mov
mov
cwtl
jne
call
in
sahf
push
sbb
faddl
repnz
movsb
adc
cmpsb
inc
mov
xor
popa
adc
adc
or
lods
ljmp
jo
sti
jp
ljmp
cwtl
push
dec
test
mov
or
mov
cmc
dec
jge
mov
test
dec
push
xchg
jmp
test
jae
lret
in
ret
aas
lds
out
xchg
xchg
lea
xor
pop
es
fcmove
repnz
incl
fnstcw
xor
push
popa
in
enter
fs
inc
mov
push
insl
xor
adc
xchg
divl
jge
leave
lock
loope
ja
pop
adc
cmp
js
les
mov
aad
jl
mov
or
mov
xchg
push
es
mov
data16
sbb
repnz
add
mov
xchg
int
xchg
mov
xor
iret
ds
mov
into
stc
es
scas
adc
bound
dec
int3
mov
insb
aaa
mov
sub
cmpsb
lods
lea
mov
retw
addr16
imul
mov
dec
jmp
pop
dec
jbe
pop
dec
cmp
push
cmpsl
xor
mov
cmp
xor
rclb
jbe
dec
jmp
inc
inc
fcompl
arpl
fcoms
mov
sbb
insl
es
rorb
sub
adc
jp
add
pop
in
add
xchg
and
cmp
jno
lds
push
push
xchg
lahf
xchg
jp
pop
add
je
outsl
imul
aam
pop
mov
fwait
lret
leave
cmpsb
stos
fwait
and
mov
jmp
pop
push
mov
leave
lods
cmc
pop
add
and
xor
jg
jo
adc
or
adc
lret
dec
daa
and
test
out
pop
loopne
aad
xchg
mov
sbb
mov
add
dec
lret
sti
scas
and
lods
mov
rcr
cmp
add
pushf
sub
mov
sub
cmp
lret
arpl
sbb
jge
mov
aas
push
jmp
adc
or
jle
mov
test
jb
xor
aad
lret
mov
stc
sbb
outsl
movsb
cmp
add
mov
hlt
cmp
notb
push
jbe
pop
cmp
cmp
leave
add
push
dec
add
lahf
aam
outsb
repz
js
call
fnstcw
jae
int3
jnp
add
imul
dec
outsl
pop
and
sbb
sbb
cltd
std
in
aam
jnp
sub
mov
pop
and
xchg
lds
adc
mov
iret
push
mov
lret
in
int
pop
and
sti
push
jge
jns
hlt
and
cmpsl
aad
add
sbb
mov
sub
lret
push
dec
pop
pusha
pop
rcr
jg
pushf
xor
test
icebp
cmpsb
dec
fwait
aam
clc
mov
fxam
das
lods
fisubrs
scas
mov
dec
or
enter
inc
negl
stos
mov
or
sub
inc
aam
cs
andb
jne
mov
lods
orb
xchg
mov
outsl
mov
movsl
and
lea
lret
sti
sbb
rclb
pusha
inc
mov
jmp
fs
cwtl
jge
fwait
decl
push
jne
jle
pushl
loope
notl
add
pop
ljmp
sbb
cmp
repz
cs
jmp
shlb
int3
push
gs
sbbl
out
mov
and
insl
sub
pushf
mov
icebp
or
mov
popf
push
cmp
sub
mov
arpl
sub
push
lods
sti
cmc
sti
stc
push
cld
nop
sub
std
movsl
mov
cmpsl
std
push
xorl
mov
or
sub
and
inc
shll
sub
hlt
repnz
fisubl
inc
pop
outsb
dec
ja
cmp
aad
add
mov
test
shl
in
call
lcall
mov
clc
mov
lock
cld
xor
jns
jg
fildll
mov
dec
daa
movsl
dec
cmp
aaa
add
fbld
mov
xchg
pop
js
pop
mov
cmpsl
fldcw
out
jp
pop
gs
in
jecxz
xchg
mov
cwtl
out
jmp
rolb
cmp
mov
in
push
test
insl
sarb
into
adc
and
mov
xchg
and
inc
pop
daa
shrd
rcr
imul
gs
movsl
mov
push
pushf
daa
loop
rep
adc
mov
push
add
jnp
scas
or
or
push
repz
adcb
movsl
pop
daa
mov
mov
incb
repnz
cmp
test
imul
cmp
cmp
jl
shll
js
hlt
dec
out
push
mov
into
out
sub
dec
xchg
fidivrl
jb
xchg
sbb
jb
sbb
dec
mov
jo
stc
pop
pop
push
and
mov
push
das
out
and
xchg
mov
clc
mov
movsl
pop
popa
push
lret
mov
dec
or
adc
adc
out
xchg
popa
mov
adc
and
push
out
inc
aaa
pop
jecxz
sarb
or
in
aam
icebp
mov
xor
fnsave
pop
mov
cmpsl
lock
aad
shlb
xchg
stos
jb
xchg
and
into
addr16
loope
add
lock
push
xchg
iret
dec
lock
mov
cmp
lods
nop
dec
jns
adc
cwtl
in
sbb
fstps
pushf
rorb
loopne
add
sbb
fsubs
insb
repz
inc
insb
shlb
dec
fwait
cs
cltd
pop
lret
icebp
cmp
scas
je
out
rcrb
into
test
stc
vhaddps
cltd
mov
lret
bound
xchg
outsb
push
sbb
pop
jl
fildl
mov
push
fnstenv
jle
mov
mov
jns
pop
jge
dec
js
int
popf
bound
fisttpll
pop
sbb
test
push
cmp
cli
sbb
jmp
cmp
inc
and
pop
scas
inc
fdivrl
imulb
cmp
fcomps
push
bound
in
in
push
cli
lahf
decb
aaa
inc
mov
aad
xlat
or
sti
and
popf
jg
pop
aas
mov
jge
xor
adc
shlb
fdivp
rcr
inc
outsl
shlb
andb
int3
das
adc
jmp
arpl
jge
mov
sti
mov
arpl
das
sbb
aam
jns
cmp
out
mov
adc
xchg
sub
es
sub
arpl
enter
hlt
leave
shrl
fistpll
xchg
lock
mov
fistpll
int
push
cli
pop
pop
ljmp
ja
cmp
mov
xchg
inc
repz
jae
roll
sbb
cmc
cmp
outsl
add
leave
push
insl
aas
outsl
insb
xchg
push
sbb
in
push
mov
push
cld
jbe
shlb
movsl
adc
cmp
stos
jp
ss
fidivl
cmp
rcrl
repz
xchg
sbb
jb
mov
or
pop
movsl
mov
lock
fwait
inc
dec
fdivr
sub
lret
jbe
add
pop
or
sub
jge
sub
inc
fdivrs
sbb
idiv
push
and
fbstp
leave
and
ret
nop
inc
shlb
or
mov
push
dec
cld
movsb
sbb
call
add
in
inc
xorl
cmp
inc
lods
push
stos
inc
insl
fildll
cli
mov
sub
mov
or
aam
daa
mov
sub
or
out
cmp
fidivrs
xchg
inc
pop
sti
stc
sti
leave
pushf
jge
out
jmp
jge
pop
sti
push
pop
sub
divl
sbb
js
pop
sbb
ss
enter
sub
fidivrl
ljmp
insb
mov
in
mov
in
faddl
jl
sahf
pop
sahf
loop
insb
popa
icebp
lock
into
repnz
fcomps
aaa
mov
cmp
mov
xor
lods
aas
bound
pop
push
fisubl
xor
into
and
sbb
lea
fstps
mov
cmpsl
mov
ret
dec
leave
and
sbb
out
sub
pop
jge
imul
inc
fs
fucomip
jg
mov
adc
xor
or
insl
pop
popa
xchg
xor
jge
add
inc
ss
sbb
pop
inc
mov
sub
inc
mov
and
faddl
push
cld
shll
shrl
jo
and
loope
inc
lahf
pop
into
sar
dec
inc
negb
or
fs
mov
pop
shrb
xor
pop
test
scas
in
xchg
inc
js
fnstenv
aas
lods
clc
lahf
and
ds
fbstp
movsl
in
inc
mov
clc
or
lock
aaa
rorl
out
ror
loope
iret
or
and
repnz
jno
pop
inc
push
mov
push
sbb
adc
pop
ret
aad
xchg
inc
mov
faddl
sbb
pop
ficoms
lahf
pop
cmp
push
sbb
pavgw
std
dec
jns
xchg
xchg
fmuls
rorl
insb
lea
inc
popa
add
lret
and
jnp
pop
stc
pop
mov
sbb
dec
xor
dec
orb
aaa
ret
pop
mov
das
fdivr
mov
les
mov
mov
in
mov
aad
xchg
adc
es
push
fcmovbe
adc
and
jne
cmp
test
ljmp
or
add
mov
and
dec
mov
xchg
sysret
in
pop
aas
ret
push
sub
mov
addr16
mov
mov
sbbb
imul
out
xchg
dec
fistl
jbe
jge
push
imul
stc
dec
out
clc
adc
mov
and
stc
sub
inc
gs
xchg
cld
mov
mov
fsts
shlb
outsb
aad
add
jmp
fnstsw
mov
dec
adc
sub
push
in
jge
outsl
repnz
mov
xchg
aam
test
xor
lcall
jbe
xchg
dec
jmp
push
mov
pop
rcrl
jle
repz
out
inc
daa
rolb
loopne
mov
stos
mov
and
add
arpl
pusha
xorb
imul
mov
es
pop
sahf
push
and
push
je
pushf
push
push
aam
out
fwait
dec
data16
test
push
cmc
cmp
shlb
push
mov
cli
xor
fwait
xor
dec
aam
dec
push
std
xchg
mov
xchg
push
jmp
scas
ljmp
jecxz
sti
sbb
jb
les
cmpsb
iret
dec
cwtl
xchg
movsl
push
cmpsb
insl
sub
js
cld
jle
test
xor
push
jle
mov
jecxz
inc
dec
dec
cwtl
xchg
mov
cs
mov
xchg
mov
xchg
mov
gs
mov
cmp
lret
mov
mov
int3
std
dec
push
mov
and
repz
pop
aam
adc
mov
jne
mov
sbb
cmp
in
mov
int
cmp
mov
dec
test
pop
subb
outsl
xchg
jecxz
lock
and
push
pop
lret
mov
and
fists
push
inc
xchg
xchg
mov
push
xchg
mov
sub
jnp
mov
xchg
movsl
jns
out
inc
scas
in
pop
mov
les
and
mov
shrl
fcmovb
scas
jae
cwtl
data16
jg
dec
scas
fidivrs
cmp
cmp
push
sbb
or
out
imul
into
out
divb
test
stos
pushf
cmp
and
mov
sbb
std
jno
mov
popa
mov
pusha
fcompl
ss
lcall
sbb
testl
mov
mov
pop
jmp
je
mov
sbb
lods
adc
mov
addr16
fcom
pop
popf
scas
inc
andl
in
aad
jg
inc
call
shll
jno
sbb
sbb
adc
rol
add
in
sub
sbb
sbb
lock
sbb
fbld
dec
fcom
cmp
dec
mov
les
sbb
lcall
inc
push
xchg
jge
addr16
js
decl
bound
mov
fiaddl
cltd
jg
dec
sub
add
insl
loop
das
xchg
jne
xchg
mov
negl
loop
sahf
ret
icebp
inc
mov
daa
inc
mov
cld
iret
clc
cwtl
frstor
shrl
xor
xchg
es
hlt
in
mov
movsb
jl
imul
sub
sub
mov
dec
loopne
sbb
xchg
stos
enter
ljmp
das
mov
xlat
or
insb
mov
mov
pop
cwtl
mov
xchg
sub
mov
stos
mov
fnstcw
fsubrp
mov
fisubrl
jno
insb
stos
xchg
pop
enter
jp
scas
dec
testb
stos
dec
lret
mov
push
int3
es
mov
xchg
and
sub
lock
clc
sbb
pop
jne
cmp
push
xor
jb
enter
mov
sbb
inc
mov
ret
sahf
xchg
out
xor
push
mov
fcoms
jl
rorl
out
pop
aaa
imulb
fcos
mov
mov
scas
js
call
stos
sbb
inc
mov
and
cmp
lods
lret
mov
repnz
stos
stos
pushf
ficoms
mov
and
push
sbb
xchg
xchg
cltd
add
into
push
and
cs
out
mov
push
fs
sub
pop
lret
sbb
jge
mov
adcl
out
loope
pop
dec
adc
cmc
inc
or
sarb
dec
test
xchg
lea
lock
add
frstpm(287
scas
ja
dec
adc
mov
sbb
pop
jmp
jae
out
dec
inc
mov
fst
icebp
fsubl
or
pop
out
xchg
mov
mov
mov
nop
sub
xchg
mov
push
loop
fisubrl
rcrl
cmp
or
add
in
or
lods
jbe
inc
push
add
push
mov
pop
mov
scas
inc
mov
mov
sub
das
pop
fmull
fcompp
inc
jnp
leave
xor
mov
add
mov
dec
sbb
mov
lea
testb
cli
sbb
sahf
mov
adc
inc
add
data16
test
xlat
arpl
movsl
ffreep
repz
mov
test
pop
lahf
mov
cld
or
xchg
fildl
pop
cwtl
jae
int
xchg
insl
xchg
loop
mov
pusha
shlb
push
xchg
jae
in
sub
mov
addl
lahf
xchg
lea
je
pop
aaa
insl
jge
xor
and
imul
pop
mov
adc
les
shll
iret
add
mov
mov
pop
jge
shl
movsb
sbb
push
movsb
arpl
cmp
adc
mov
mov
sbb
divl
inc
pop
gs
aaa
pop
js
jmp
sbb
dec
mov
and
lahf
inc
and
pop
popa
push
xchg
adcl
int3
sti
push
fidivrl
or
dec
mov
jp
and
jae
jg
inc
out
sbb
dec
or
frndint
ljmp
add
jo
pop
mov
mov
pop
mov
xor
push
dec
insl
movsb
mov
fadds
cmp
in
push
dec
sbb
pop
insl
sub
mov
lret
mov
mov
arpl
int3
sbb
inc
mov
mov
adc
imul
sub
test
sub
cltd
mov
push
dec
aaa
mov
bound
jb
rcrb
jne
sbb
inc
xchg
xchg
jo
adc
scas
scas
je
xchg
lds
sbb
jb
push
cs
aam
mov
pop
out
sti
xor
lods
mov
in
sbb
mov
mov
sahf
dec
adc
jbe
dec
fdivrl
cmp
or
and
out
rcr
cmpsb
push
fnstsw
sub
testb
fisubs
movsl
mov
fsubrs
pusha
insb
cmp
sub
jnp
cmp
data16
out
adc
nop
sub
push
add
inc
int
pop
lods
ja
fwait
divl
xlat
dec
lock
jo
sbbl
xorl
mov
sub
lahf
pop
jge
inc
icebp
fstl
mov
movsb
add
fstps
pop
xlat
adcl
sbb
je
dec
push
filds
clc
mov
mov
nop
mov
or
aad
fucomip
inc
jns
and
in
xor
sub
add
andl
cli
repz
adc
data16
jnp
cli
inc
mov
or
imul
add
test
in
rolb
push
pop
pop
sub
sti
shrb
mov
mov
movsb
aam
inc
cltd
in
insl
adc
mov
xchg
inc
mov
and
sbb
cmpsb
sub
add
out
lea
outsb
jne
lcall
popf
ret
enter
pop
fwait
pushf
and
iret
divb
mov
sbb
fidivl
xor
cmp
jnp
cwtl
out
xor
jo
cltd
mov
xor
jecxz
add
adc
push
pop
hlt
jo
dec
xor
jecxz
xchg
sbb
jmp
xor
push
jmp
sub
loopne
jecxz
test
push
arpl
stos
mov
in
pop
push
cmp
dec
jecxz
cmc
dec
adc
ret
shrb
je
je
or
sti
xchg
ret
xchg
out
push
shrb
mov
sbbl
mov
mov
add
cmpsb
ljmp
sbb
scas
cmpsb
cs
enter
add
fstl
push
aaa
mov
dec
insl
int3
pop
adc
clc
scas
inc
repz
lds
xor
jno
in
add
mov
std
add
push
cmpsb
test
or
out
lret
xchg
imul
lods
gs
add
cmp
imul
cmpsl
add
sub
std
mov
xchg
lahf
push
inc
jp
cmp
aaa
loop
into
xor
mov
and
cmpsl
rcrl
loopne
adc
pop
call
das
shrl
lcall
inc
mov
popf
lcall
and
jno
mov
ret
xor
int3
lahf
clc
js
cltd
mov
add
push
sub
loopne
jle
popa
pop
fnstsw
in
dec
in
pop
dec
divb
inc
scas
subb
loopne
sub
push
mov
mov
pushf
mov
shlb
ret
sahf
call
inc
ror
dec
sub
inc
push
mov
rcrb
mov
lock
insb
pop
adc
adc
jl
movb
test
dec
mul
xor
roll
add
fsts
mov
aad
aam
fnstenv
mov
daa
xchg
adc
outsb
sti
cltd
fs
push
enter
jle
test
mov
rclb
jae
mov
fsubr
pop
mov
test
icebp
xchg
mov
xchg
pop
lods
test
inc
push
rorl
imul
sbb
xlat
arpl
mov
jg
add
and
jl
inc
xor
jmp
or
mov
lret
into
mov
sub
or
js
add
or
mov
ret
add
and
xchg
movsl
push
jbe
mov
jg
jbe
loop
mov
pop
adc
test
daa
fcoms
test
add
daa
mov
or
lds
and
ficomps
popf
mov
jo
pop
inc
xor
cmp
inc
scas
pop
imul
cwtl
cmpsb
xchg
mov
mov
or
cmp
inc
scas
xchg
icebp
or
loop
mov
shlb
push
pop
sub
test
pusha
lods
jno
pop
jne
aaa
push
jmp
addr16
int
cmp
fwait
test
out
xchg
sti
rorl
icebp
jg
jg
dec
lahf
lock
xchg
popf
sbb
arpl
xchg
out
mov
lock
sbb
punpcklbw
mov
sbb
jo
arpl
arpl
jbe
int
jecxz
repnz
gs
push
enter
sbb
enter
icebp
test
ficoml
aad
sub
and
adc
mov
rcl
data16
mov
pop
pop
dec
stc
xchg
jns
call
rclb
jae
lcall
xor
adc
cmp
jbe
insl
xor
push
icebp
jle
mov
int
jg
and
or
sti
pop
sbb
stc
mov
jb
sahf
and
jge
mov
insl
mov
mov
sub
cltd
sub
hlt
nop
icebp
mov
or
jnp
sub
pop
xchg
and
movsb
sub
lods
and
es
clc
scas
cmp
pop
xchg
and
inc
cmp
add
cmp
cltd
xchg
stos
or
xor
cmp
adc
testl
fwait
sub
stc
cmp
and
dec
sub
xchg
into
or
cwtl
sar
dec
sbb
adc
inc
arpl
cmpsb
je
lea
loopne
aas
rorl
mov
inc
sub
or
mov
and
pop
sbb
call
stc
and
mov
jns
adc
aas
outsl
scas
sbb
lcall
mov
mov
jmp
and
ljmp
dec
and
mov
popf
inc
mov
or
jmp
push
xor
xchg
sbb
sbb
dec
mov
icebp
jg
testb
mov
cmp
imul
insb
dec
aam
roll
in
mov
jae
fimull
ret
jmp
movsl
fidivrl
out
sub
je
sahf
cmp
mov
arpl
or
jb
dec
mov
fs
pop
xor
pop
enter
mov
push
sub
cmc
addr16
enter
imul
jae
mov
sbb
dec
testb
daa
fcomi
push
clc
inc
stos
insl
das
ljmp
add
jmp
mov
and
loop
iret
sahf
mov
push
adc
sub
xor
mov
jne
lods
xor
or
jecxz
mov
inc
mov
push
xor
daa
adc
jo
fs
push
lret
flds
dec
hlt
mov
inc
mulb
push
aas
mov
arpl
or
cmp
dec
dec
and
aaa
lahf
loope
in
mov
mov
cmp
mov
addr16
jbe
call
paddd
dec
cmc
jne
aad
cmp
ljmp
mov
in
cmp
or
or
iret
pop
out
data16
pusha
mov
shrl
faddl
lock
mov
add
xlat
cmp
adc
push
rcll
iret
ljmp
pop
add
lret
dec
movsb
adc
push
aam
or
jae
out
test
int
inc
adc
pop
jl
insb
in
dec
imul
fldcw
dec
mov
or
into
inc
add
mov
dec
mov
jo
mov
sbb
add
push
icebp
iret
flds
test
add
adc
xor
mov
hlt
out
stos
mov
xor
xor
std
pop
pusha
or
mov
inc
mov
adc
arpl
mov
hlt
out
jl
sarl
and
mov
mov
cmp
jae
loope
ds
and
stos
add
aam
rolb
push
imul
xchg
mov
push
fimuls
jae
subl
fdivrl
stos
xor
repnz
dec
sarl
jg
mov
or
addr16
and
repz
mov
mov
dec
test
lret
and
sub
inc
test
push
mov
cmp
mov
mov
mov
mov
add
sub
adcb
xchg
addr16
je
rol
rcrb
rclb
roll
sbb
int
adc
inc
pop
dec
dec
stos
add
push
sbb
jg
adc
movsl
mov
stos
fwait
ljmp
xor
arpl
push
fs
cmp
jg
push
mov
les
nop
xlat
push
aam
and
jns
sub
cmp
inc
pop
mov
mov
cmp
mov
test
lcall
mov
mov
imul
cli
mov
mov
cmp
gs
popa
arpl
mov
and
hlt
imul
dec
add
out
out
xlat
push
ja
adc
or
cmp
adc
dec
jnp
adc
mov
loop
stos
iret
call
popf
out
cmc
mov
push
jnp
rol
add
int3
mov
sbb
adc
xor
dec
sti
xor
movsl
mov
loop
sti
or
out
add
pop
mov
jns
jb
mov
daa
push
xchg
jae
sub
out
fidivl
nop
pop
cmp
mov
sbb
fwait
daa
hlt
push
sub
sub
hlt
imul
lret
stc
imul
in
imul
push
xor
outsl
cmp
fildl
gs
fcmovu
sub
cmp
jno
cmp
lret
xchg
jnp
mov
mov
xchg
add
cmpsb
in
je
out
jno
in
xchg
rorb
outsl
imul
je
sub
imul
loopne
movsl
mov
lds
sbb
inc
js
pop
xchg
dec
and
pop
pop
jmp
cli
fwait
or
jmp
arpl
fldt
sub
mov
cmp
jae
mov
hlt
cmpsl
scas
les
loopne
orb
lds
mov
outsl
jecxz
loop
sbb
shr
icebp
sub
insl
aaa
icebp
and
loop
ds
cld
add
mov
inc
stc
fwait
push
sbb
jmp
mov
popf
push
cld
adc
sub
ret
pop
pop
sub
cmp
adc
pushl
inc
dec
dec
xchg
jnp
push
sbb
xor
stos
stc
je
sbb
push
data16
mov
loope
cmpsb
dec
cli
adc
pop
rcrb
push
fs
shrl
add
outsl
aaa
iret
ficoms
pop
filds
hlt
insl
es
cmp
fsubrs
movsl
outsl
popf
xor
inc
fwait
sbb
sbb
ja
outsb
test
and
push
roll
gs
mov
arpl
add
div
or
shlb
mov
xor
out
sbb
stos
or
testl
xchg
push
lret
add
int3
in
pop
push
mov
test
into
std
push
xor
sbb
jmp
out
adc
xor
xchg
jb
and
scas
aad
sarl
adc
xchg
mov
mov
pop
lcall
enter
mov
mov
inc
cmpsb
xlat
push
fldt
je
dec
lret
lcall
das
mov
xchg
shrl
or
add
std
xor
push
xchg
jo
dec
into
jbe
adc
xchg
rorb
cwtl
fsubs
imul
inc
out
jo
cs
xchg
push
lock
cmp
pop
mov
addr16
mov
xchg
mov
adc
and
dec
push
inc
jnp
mov
nop
pushf
dec
mov
divb
popa
loope
not
sbb
push
mov
add
or
in
adc
mov
adc
pop
mov
shll
xchg
push
mov
mul
loopne
jge
fcmovb
xor
xlat
scas
out
mov
sub
pop
pushf
imul
sub
outsb
lret
imul
into
loop
shll
and
mov
fstpt
loope
pop
mov
andps
push
jbe
add
rolb
push
jb
out
pop
arpl
popa
shrb
shlb
cmp
jp
jbe
add
loope
inc
lea
dec
xchg
push
pop
int
movsl
add
std
int3
add
and
mov
rol
xor
or
popa
add
cld
stos
jae
in
ds
cli
jmp
std
enter
imul
dec
inc
cld
mov
lods
mov
jl
scas
xchg
pop
mov
flds
movsb
pop
lret
scas
sub
rcr
insb
imul
mov
push
push
jmp
mov
not
push
inc
stc
cmpsl
or
cmp
xchg
dec
in
mov
sbb
or
mov
and
subb
test
sbb
dec
jecxz
inc
jnp
add
out
jns
clc
sub
cmpsb
pop
or
pop
int3
out
mov
icebp
xor
adc
xchg
jno
sti
lock
or
dec
fildll
push
mov
jnp
pop
mov
xchg
imul
xchg
dec
push
fnsave
ja
cmp
aaa
test
sub
and
cmp
pop
pusha
cli
scas
xchg
xor
pushl
out
xor
add
jg
hlt
iret
xchg
jge
fwait
cmp
mov
sti
xchg
dec
rcrl
lods
pop
adc
mov
stos
shl
into
xchg
push
inc
or
dec
dec
icebp
shll
cmpsb
bound
xorb
scas
push
jns
movsl
jp
pop
loopne
cmp
dec
pop
pop
cs
cli
mov
mov
dec
movsl
aad
mov
rcll
mov
cwtl
xor
mov
out
iret
es
dec
int
stos
sahf
xlat
andb
aas
sub
mov
out
jae
iret
loope
popf
mov
cmp
xchg
movsb
imul
xor
ud2
mov
nop
xchg
mov
xchg
xchg
or
loop
push
mov
pop
imull
out
mov
lock
xchg
iret
sbb
popa
sub
sbbl
adc
mov
or
pusha
mov
push
movsb
popf
mov
jnp
cmp
jne
and
and
mov
pop
orb
cmc
mov
cmpsb
jns
mov
ds
mov
stos
loope
push
inc
out
xor
push
jmp
add
mov
sarb
mov
xchg
push
cli
dec
ja
cltd
mov
pop
lock
test
call
push
fmul
push
dec
ficoml
jp
imul
dec
mov
mov
xor
aas
inc
xchg
mov
in
cli
push
aaa
ss
dec
and
shrl
cmp
dec
fs
mov
mov
pop
in
dec
jp
push
test
jmp
mov
sbb
adc
movsl
cmp
ljmp
add
push
popa
mov
add
mov
movsb
les
cs
push
inc
push
movsb
push
xchg
lods
and
fdivrl
sbb
inc
inc
nop
roll
inc
setb
sbbb
dec
in
les
xchg
sub
pop
or
inc
xchg
scas
push
mov
ja
lds
jmp
lock
jl
cmc
test
pushf
data16
adc
test
pop
mov
mov
fwait
imul
mov
daa
push
inc
mov
cmp
into
mov
mov
cmp
and
and
das
leave
sub
mov
cmp
jle
push
into
mov
pop
add
mov
lret
and
hlt
push
aaa
jg
mov
daa
pushf
mov
rcl
mov
fisttpl
mov
pop
test
ss
adc
sub
push
fwait
cmp
xor
pop
pop
rcll
loop
pop
aas
lcall
stos
aam
pop
xchg
inc
bound
fmuls
mov
lods
pop
popa
or
loopne
nop
lea
aas
jbe
push
add
adc
scas
mov
shl
push
xchg
mov
imul
adc
push
popa
sub
or
jmp
bound
inc
mov
ret
jno
add
mov
jmp
int
ljmp
mov
nop
jns
sti
aam
int
test
jo
cltd
call
lock
dec
inc
xor
enter
into
xchg
jbe
and
lods
fsts
and
inc
lret
push
and
sub
cmp
jae
leave
adc
push
add
xor
or
addr16
and
mov
xor
in
popf
jge
in
pop
nop
jg
push
stos
jo
sub
mov
dec
sti
les
dec
icebp
inc
mov
pop
mov
aad
sub
pop
push
out
adc
mov
imul
push
dec
jmp
push
xchg
fistpll
daa
call
xor
cmp
pop
cmp
or
sahf
xchg
inc
insl
cwtl
and
insl
fisubrl
jnp
rclb
lods
fcoms
xchg
sbb
push
push
cmpsl
xor
jae
sub
xchg
dec
into
inc
push
push
lods
ret
xchg
jbe
lret
mov
dec
mov
divb
sbb
xchg
xchg
or
repnz
adc
mov
mov
xchg
jno
xchg
adc
mov
loop
lahf
scas
mov
call
xor
mov
outsl
shlb
cmp
cmc
jmp
aad
std
ljmp
bound
insl
mov
fbstp
mov
shll
jl
jnp
xlat
ror
negl
mov
lmsw
cltd
xchg
loopne
pop
cmc
mov
adc
and
loop
push
ja
cmp
rorl
les
sarl
js
mov
and
cmp
mov
and
add
mov
xchg
mov
iret
jmp
ret
sbb
imul
aam
ja
push
fcmove
add
mulb
jmp
notb
sub
jecxz
sbb
sbb
xor
pop
dec
inc
lods
mov
mov
sbb
mov
xchg
sbb
popf
cmp
xor
nop
inc
pop
pop
and
test
addr16
push
and
mov
push
xchg
mov
push
addr16
mov
add
dec
stos
adc
ja
jecxz
pop
push
dec
or
xor
xchg
sbb
and
popa
mov
mov
or
insl
fiaddl
int
adc
es
inc
out
sbbl
test
inc
mov
cmpsb
xchg
test
dec
fld
sub
dec
jb
ljmp
cmc
sub
popa
popa
in
push
icebp
lret
pop
les
rorb
cmpsl
mov
adc
mov
sbb
adc
or
push
in
in
cmpl
mov
cmpsl
sub
shl
hlt
hlt
rcrb
dec
mov
lock
push
or
pop
icebp
sub
push
cmpl
and
out
push
mov
jg
pop
jae
das
adc
or
lods
lock
cmpl
inc
fstps
sbb
jnp
xor
test
imul
mov
cmc
loopne
ret
add
and
int3
inc
lods
fadd
loop
jl
xchg
fs
negb
pop
push
inc
push
lcall
imul
mov
shrl
lret
or
gs
fld
outsb
loop
inc
cmp
push
iret
add
lea
dec
pop
mov
mov
out
sbb
pop
mov
andb
out
out
inc
sbb
repz
jbe
inc
fildl
cmpsl
inc
adc
pop
in
das
and
pop
inc
ja
hlt
dec
pop
jmp
inc
insl
fcompl
cmp
sbb
out
popa
mov
fdivrl
mov
adc
dec
mov
popf
sti
out
adc
mov
cmpsb
aaa
data16
loop
jbe
adc
aaa
adc
lods
cmp
add
ror
xor
out
push
inc
add
pop
repz
jg
test
mov
and
and
andb
cmp
in
lcall
cmp
mov
sti
dec
ljmp
sbb
aaa
mov
outsb
xchg
pop
push
sbb
mov
and
fcmovnu
fimull
out
mov
gs
xor
gs
mov
push
push
xchg
and
icebp
xchg
rorl
inc
fcompl
cmp
cwtl
sbb
mov
or
movups
push
mov
xchg
pop
mov
mov
sbb
mov
add
or
rol
fildll
xchg
repnz
sbb
and
sub
adc
testl
mov
sbb
xchg
sti
out
sub
repnz
jbe
push
jmp
add
pop
adc
out
mov
inc
mov
sbb
mov
imull
in
xlat
add
xlat
orb
inc
test
mov
sub
sub
movsl
mov
dec
adc
lcall
sbb
mov
in
pop
jmp
jmp
push
es
je
icebp
xor
pop
xchg
mov
lock
inc
lcall
sbb
repz
mov
xchg
push
xchg
jae
std
mov
loopne
jge
push
mov
cmp
xlat
lods
test
pop
sbb
pop
fdiv
mov
sub
push
pop
xchg
test
xor
aam
outsl
adc
adc
xor
enter
out
xor
adcb
mov
cli
jmp
jae
lahf
cs
jo
adcl
sub
outsl
cmp
negl
mov
sti
jae
imulb
cltd
cmp
repnz
les
je
nop
xor
pop
and
mov
push
dec
jns
data16
lock
shlb
sub
xchg
les
hlt
push
or
cmp
mov
and
loop
add
push
rolb
adcb
dec
add
add
orb
jmp
fwait
xchg
lcall
mov
jle
ss
add
fcmove
cmc
xor
stos
scas
sbb
xchg
add
scas
aad
push
xor
xor
fisttpll
test
sbb
out
cs
xchg
stos
and
loope
mov
sub
mov
out
pop
sub
xor
mov
mov
das
push
ficomps
gs
hlt
cltd
dec
jno
popa
fnstsw
mov
decb
and
nop
dec
pop
scas
cmp
ret
inc
xchg
pop
testl
test
dec
sti
add
xchg
add
es
test
push
add
addb
insb
adc
adc
les
cmp
mov
jl
sarl
sbb
xchg
loope
jo
jnp
jmp
pop
mov
movsb
hlt
sbb
push
sbbl
xor
inc
fbld
int3
movsl
push
sub
or
mov
push
mov
inc
cmp
rcll
or
mov
add
mov
jmp
je
outsb
jg
mov
xchg
icebp
push
pop
pop
ljmp
and
testl
dec
mov
insb
or
jp
add
add
mov
mov
arpl
sub
enter
cmp
in
fsubs
iret
mov
xor
mov
mov
movups
cmpsl
lret
fnsave
add
lret
rolb
ds
add
int
sbb
cli
lea
nop
push
dec
movsb
out
fs
pop
push
push
push
mov
pop
fcomps
addr16
xchg
lahf
mov
sbb
ret
push
dec
mov
jp
mov
xchg
mov
shlb
lahf
sub
test
or
imul
adc
xorl
push
mov
int
call
pop
xchg
test
fisttpll
out
inc
adc
cmp
push
add
xchg
cltd
inc
cmp
pop
bound
lds
rorb
test
sbb
and
mov
and
or
insb
lock
cmp
mov
es
sarl
rcl
sub
dec
outsb
test
and
inc
int3
stos
scas
and
ds
sbb
dec
out
jp
mov
pusha
adc
sbb
mov
pop
daa
aaa
push
repnz
jno
cmpl
ja
xchg
mov
subl
std
adc
cmpsb
adc
lret
xchg
js
std
out
dec
bound
xchg
jle
sub
cmp
sub
mov
fsubl
mov
xchg
aam
inc
cmpsb
idivl
rorl
data16
push
scas
pusha
cltd
lea
inc
or
and
js
adc
testl
push
and
xor
leave
xor
adc
push
mov
pop
xchg
jecxz
ljmp
in
mov
or
inc
cmp
and
arpl
and
lahf
sbb
dec
xchg
pop
mov
daa
push
sub
clc
roll
cltd
pop
stos
sub
mov
inc
or
pop
nop
in
cmp
stos
in
inc
xchg
cwtl
testb
dec
rolb
or
ret
cmc
push
xor
push
xchg
sub
and
dec
rcrl
and
push
xor
dec
cmp
dec
cmp
mov
lods
cmpsb
sub
ret
mov
adc
lret
dec
or
ss
and
movsb
sub
ficoms
inc
ljmp
stc
addr16
push
pop
xchg
xrelease
out
jae
lret
jae
adc
pop
rcr
jns
mov
jle
imull
push
rolb
insl
jecxz
dec
cld
rep
fcmove
and
and
aaa
jo
dec
lods
xor
pusha
pop
cmp
mov
ret
inc
out
in
jae
les
movsb
mov
pop
hlt
call
add
mov
sti
arpl
sbbb
pop
ret
cmp
xchg
jl
rep
in
imul
and
sub
inc
lcall
cmp
aas
inc
cmpsl
push
hlt
imul
push
mov
adc
mov
sti
add
dec
add
and
jge
and
cmp
jo
jne
out
aas
sub
popf
mov
inc
mov
mov
mov
imul
inc
imul
and
clc
int
stos
xor
push
jno
jle
sarl
cld
jecxz
add
outsl
pop
insl
ja
jg
das
dec
aas
fildll
ret
daa
pop
mov
mov
movsl
lods
or
sub
scas
sub
jmp
sub
pusha
sahf
adc
inc
push
cmp
push
mov
xor
mov
jge
ja
pop
sbb
subl
cmp
adc
popa
imull
mov
test
push
js
mov
and
cmpsl
mov
test
cmp
fstl
sahf
cwtl
mov
push
stos
into
call
fldln2
mov
xlat
fidivrl
dec
sbb
lcall
xor
out
ret
sbb
push
jl
inc
daa
test
cmp
cmpsb
add
and
lret
sahf
mov
gs
sub
mov
outsl
mov
cli
rcrl
ljmp
loopne
out
in
jg
push
fldl
mov
je
jp
test
nop
loop
jmp
adc
xor
mov
push
pop
dec
jno
jge
les
or
mov
ja
sub
cmp
fwait
lds
mov
cmp
add
and
add
lea
ljmp
cmp
pushf
aad
je
inc
sbb
and
mov
xchg
lcall
pop
jl
cmp
lret
inc
xchg
out
je
add
es
xor
push
inc
xchg
int3
daa
cmp
ret
pushl
int
lods
jb
shrl
fwait
loopne
jns
mov
rclb
lret
lea
gs
pushf
mov
inc
inc
inc
enter
imul
mov
dec
mov
cmp
aam
icebp
lods
loop
jg
rol
sub
adc
mov
jns
sub
sub
repz
push
testl
imul
mov
incl
in
sub
adc
or
ja
or
mov
adc
addr16
je
ja
popa
dec
sbb
daa
stc
pop
mov
sbb
mov
mov
sbb
or
aam
lret
iret
adc
inc
dec
sub
daa
out
repnz
cmpsb
loope
test
cmp
test
lcall
adc
cs
scas
pop
cld
negl
ss
cmp
push
mov
jne
shlb
adc
or
cmc
lret
push
xchg
sbb
repnz
gs
aaa
loope
fs
push
jmp
call
dec
out
rcrl
mov
or
hlt
sbb
inc
push
mov
sub
movsb
pop
in
and
inc
push
push
mov
xor
aaa
out
lahf
rcrl
add
jnp
fsubl
push
mov
cmp
je
dec
loop
cld
add
sahf
inc
xor
aas
jle
dec
out
mov
clc
ss
mov
pusha
add
imul
repnz
dec
sub
stc
mov
push
xlat
pop
outsl
push
fld
cli
lds
mov
imul
pushf
fbld
inc
pop
sub
cmpsl
shlb
pop
and
add
mov
mov
loop
jbe
inc
dec
scas
mov
and
mov
pop
jns
fistpl
lcall
jo
stc
in
ss
xchg
sbb
iret
jnp
fldcw
cli
xor
fisttpl
jl
fwait
add
inc
mov
dec
ja
ja
outsb
popa
xchg
xor
out
fildl
push
xchg
loop
add
cwtl
outsl
pop
ds
jmp
sti
adc
call
test
mov
or
scas
sbb
cmp
push
sub
insl
insl
mov
push
aaa
sub
insb
add
hlt
outsb
stc
push
cmpsb
sub
mov
fmull
out
out
int3
dec
or
outsl
push
xchg
mov
lret
mov
divl
imul
cwtl
adc
nop
out
dec
push
add
jb
jle
lcall
data16
stc
and
dec
pop
jg
pop
outsb
jno
aas
lahf
pushf
and
cmc
ret
add
sub
out
and
pop
xchg
les
xor
out
pop
xor
faddl
adc
sahf
inc
pop
inc
test
or
test
or
mov
sub
ret
int
push
add
sbb
and
jmp
pop
and
or
movsb
dec
push
adc
jne
test
mov
es
xchg
rolb
in
adc
mov
fwait
int3
ret
nop
insb
mov
shlb
xor
fildl
fildl
sub
movsb
xchg
fdivrs
push
xor
pop
cltd
xor
rcr
inc
addr16
dec
xor
xchg
ret
sahf
mov
or
xchg
xor
or
cs
add
jg
mov
xchg
mov
gs
ret
movsb
jl
mov
es
inc
outsb
xor
out
pop
adc
mov
adcb
and
adc
mov
ss
xchg
les
imul
cmp
sbbb
repnz
or
jle
fists
inc
icebp
xchg
stos
cwtl
xchg
leave
js
jno
lods
fbstp
push
xchg
or
int
std
adc
call
jl
add
jbe
pushf
rolb
nop
and
loope
ret
mov
frstor
loope
ja
jg
jmp
xchg
add
sbb
jecxz
lahf
lahf
and
push
ret
push
adc
cmp
daa
loope
mov
dec
into
sti
divl
adc
mov
sub
orb
leave
ljmp
pop
xor
fisttpll
decb
enter
std
ljmp
les
cwtl
repnz
xchg
popa
call
test
jle
jmp
mov
sub
lock
jo
nop
cwtl
add
cmpsl
mov
adc
lret
movsl
dec
stos
popf
or
cwtl
je
jno
enter
jnp
lods
imul
mov
adc
pop
adc
xchg
adc
push
jae
scas
js
mov
js
insb
insb
ds
rcrl
lods
shll
mov
push
mov
add
push
push
add
ror
imull
ret
mov
xor
scas
xchg
or
mov
movsb
outsb
mov
add
mov
mov
iret
lock
or
arpl
test
cmp
stc
xor
xchg
mov
push
insb
cmpsb
dec
mov
jae
out
push
xchg
inc
sbb
lds
sub
xlat
mov
and
dec
push
add
mov
pop
jle
imul
push
gs
stos
lahf
jnp
lock
dec
fmul
lret
fs
lcall
push
je
jmp
xchg
jl
mov
jg
insl
test
pushl
xchg
aaa
je
test
clc
xchg
and
jb
je
mov
fs
jno
inc
xor
and
loopne
inc
enter
mov
cmpb
aad
push
fadds
xlat
loope
xlat
ja
enter
out
mov
mov
cmp
adc
push
decl
push
insb
data16
movsb
pop
xchg
lods
ficomps
test
cs
in
and
pop
popf
iret
xor
dec
push
inc
shl
pop
dec
pop
dec
pop
adc
sub
fsubl
jne
mov
iret
pop
ja
jg
ljmp
fdivl
or
rclb
mov
sbb
sbb
mov
pop
push
fcmovnbe
mov
sub
out
cmpsl
sbbb
dec
or
adc
sub
inc
incl
sti
aam
cmp
int
pop
scas
cmp
stc
pop
mov
pop
repz
jecxz
es
jg
repz
lcall
sub
push
mov
pushl
and
test
mov
test
xchg
jo
sub
daa
push
mov
pop
fistl
or
jno
aam
popa
push
xor
jnp
les
xchg
cmp
sub
shlb
pop
leave
mov
pop
clc
mov
sbb
lds
gs
sub
lret
insb
mov
aad
repnz
push
pop
cli
in
imul
sbb
cmc
hlt
lret
out
repnz
mov
xchg
das
push
jmp
aaa
mov
mov
fistpll
shrb
pushf
out
imul
jmp
mov
leave
das
mov
loop
dec
xor
enter
stc
mov
loope
jns
pop
pushl
push
sti
cmpsl
stos
xor
xor
lcall
loop
or
xlat
cmc
inc
mov
nop
dec
or
mov
xchg
dec
or
or
aaa
dec
ljmp
popa
sub
sub
adc
aam
pushf
loopne
adc
push
or
mov
in
adc
mov
push
fdivrl
inc
adc
mov
fsub
in
xor
ss
outsb
enter
shld
or
xorps
ret
push
sbbb
dec
adc
out
add
jnp
imul
stc
dec
ss
xor
and
decl
out
pop
cmpsl
or
mov
testl
hlt
aam
in
scas
xor
aad
notl
out
ljmp
jbe
inc
je
push
cmpsb
cmpsl
lret
lods
sbb
pop
out
push
cmp
das
mov
inc
jecxz
jle
jo
and
push
pop
sub
push
xchg
daa
mov
lock
mulb
sbb
mov
mov
ja
xchg
cmc
sti
clc
mov
stc
test
enter
lock
xor
xor
test
hlt
testl
jge
into
lret
jmp
inc
subb
jmp
add
cmp
dec
inc
test
cmp
sub
lods
mov
add
test
sbb
mov
lcall
sahf
add
dec
sahf
push
cmp
dec
popf
xorb
pop
stos
aaa
cmp
nop
and
mov
and
adc
jmp
andb
and
cmpsb
fcomps
fcoml
movsb
loop
push
mov
sahf
mov
imul
jge
dec
sti
lods
xchg
add
cld
xchg
jb
loop
cmpsl
pop
arpl
sar
jle
xlat
test
push
mov
arpl
cs
int3
or
sub
push
mov
jns
ret
push
icebp
in
int3
and
test
cmc
jo
mov
lahf
pop
cmp
shlb
jge
pop
leave
sbb
push
hlt
fwait
pushf
mov
dec
call
and
pop
xchg
xor
pop
mul
cmp
addl
fiadds
fldt
push
pop
outsb
notl
mov
and
mov
das
sub
adc
push
lds
dec
dec
cmpsl
std
push
xor
cmp
pop
push
out
popa
or
ret
loope
movsl
xor
adc
xchg
adc
mov
aad
nop
and
es
mov
ficoms
scas
xlat
pop
das
adc
je
sti
sarl
fsubs
add
out
arpl
push
arpl
ret
bound
xchg
add
mov
add
mov
sbb
xorl
mov
push
mov
xchg
popa
mov
push
xor
jg
nop
aaa
in
add
adc
lret
mov
add
mov
cmc
out
adc
lods
imul
gs
mov
xchg
pop
xorb
inc
fidivs
pop
cmpsl
push
out
xchg
inc
je
push
and
jg
ret
cmp
adc
add
dec
in
test
movsb
mov
xor
les
inc
mov
sbb
pop
psubb
inc
out
inc
mov
xor
jge,pn
mov
xchg
xchg
les
es
sbb
sbb
ds
out
mov
sbb
jg
es
mov
or
or
push
repz
dec
add
cli
in
les
fldenv
and
cmp
push
add
jg
push
imul
cld
push
jno
xchg
addr16
cli
mov
mov
test
fildll
mov
imul
cli
mull
cwtl
mov
sub
xchg
fnstsw
lret
inc
dec
call
dec
push
jb
push
fidivrl
and
push
mov
test
cmp
int
cmp
imul
lds
shlb
sub
xor
push
loope
test
rcrb
imul
ljmp
and
mov
push
jno
scas
clc
fsts
cmp
fs
pop
push
xor
cli
pop
lock
popf
int3
nop
sbb
call
scas
and
sbb
sub
cmp
ret
leave
inc
dec
push
out
push
movsl
and
jg
scas
jmp
xchg
cmpsb
aam
or
cmp
hlt
sbb
mov
dec
xchg
daa
inc
mov
cli
popf
push
or
pop
sbb
cmp
push
dec
push
jnp
cmp
xor
add
testl
hlt
push
sub
xchg
pushf
mov
packsswb
repnz
mov
xlat
cmp
and
push
push
jle
psubsw
arpl
shrb
ret
test
shrb
pop
adc
jl
cmp
ljmp
jmp
stos
xchg
mov
test
xchg
fiadds
sbb
push
arpl
xor
js
fldenv
jmp
pop
rclb
sub
dec
jo
xor
xchg
mov
sbb
dec
out
and
sub
lock
xchg
push
cmpsl
jl
out
push
incl
sub
ss
ss
lahf
sub
jnp
mov
mov
sbb
int3
shll
jge
fidivl
icebp
lock
into
jo
scas
xchg
inc
bound
and
mov
das
pop
lret
test
mov
mov
xchg
iret
sbb
mov
rorb
enter
cmp
or
mov
es
repnz
jle
push
push
cwtl
pop
out
enter
ret
fsts
pop
jge
lcall
cmc
xchg
ficoms
or
xchg
xor
jp
dec
push
mov
pop
lds
dec
and
inc
and
sub
inc
lret
outsb
sbb
and
cmpsl
lcall
xchg
fldt
xlat
pop
pushf
jbe
paddb
scas
call
push
cwtl
insl
bound
sbb
imul
es
ss
inc
and
mov
pusha
js
adc
adc
cwtl
or
das
xor
and
cmp
fxch
pop
data16
sbb
es
rclb
or
mov
lret
insl
loop
ja
mov
ljmp
fidivl
mov
cld
je
or
mov
dec
loope
sub
imul
inc
push
add
mov
jecxz
ds
imul
push
xor
or
negl
add
jle
mov
dec
xchg
clc
ret
ja
and
push
add
jnp
sbb
fadd
into
push
adc
std
idivb
cmp
xchg
scas
dec
dec
push
ja
sub
mov
jmp
mov
loope
mov
pop
cmp
loop
es
aas
les
fisubrl
fiadds
jno
or
mov
sti
scas
lahf
fldcw
add
mov
mov
das
xor
add
dec
cmp
dec
push
xchg
lahf
mov
out
push
sub
sbb
mov
hlt
push
fcoml
fstpt
mov
adc
arpl
xchg
aas
dec
shl
lcall
mov
sbb
shlb
add
fldcw
dec
sub
pop
stos
sub
mov
in
inc
jle
into
fstpt
jp
sbb
mov
jg
std
push
mov
iret
mov
mov
bound
dec
mov
into
and
rcll
cltd
or
out
nop
jo
test
pop
sahf
lods
or
lea
xor
mov
mov
test
push
push
or
and
sbb
vandnps
sbb
xchg
adc
fbld
xchg
mov
out
in
enter
mov
mov
lds
add
out
mov
enter
dec
enter
or
sahf
test
clc
jecxz
push
and
ret
outsl
and
testb
insb
adc
xchg
mov
dec
and
leave
daa
xor
xchg
int
lret
xor
pop
ds
xchg
xor
shrb
push
push
movsb
mov
dec
dec
add
lret
popf
loop
stc
sbb
outsl
imul
mov
push
push
mov
andl
pushf
mov
or
sbb
jnp
leave
in
addr16
cltd
shr
sub
mov
std
adc
lods
enter
and
and
mov
push
mov
insb
push
xchg
call
js
and
orb
in
adc
add
push
lock
cmp
xchg
and
and
loop
push
test
pop
add
outsb
and
fcmovb
lods
xor
das
test
icebp
fsubr
fmuls
jle
insl
inc
les
add
fwait
int
xchg
mov
jo
mov
add
out
jo
ret
add
scas
aam
mov
mov
and
mov
pop
sbb
inc
daa
sbb
mov
cltd
out
stos
xchg
add
cmpl
jbe
sub
mov
in
xor
stc
lret
fistps
lods
xchg
cmp
push
add
in
inc
jnp
or
lea
or
mov
lds
mov
fwait
lcall
enter
cwtl
xor
out
stc
pop
sbb
incl
enter
cmp
sti
ret
fs
jge
js
insl
cld
lcall
mov
lahf
pop
cmc
roll
js
jns
icebp
mov
ljmp
iret
js
std
adc
fbstp
outsb
cmp
aaa
jnp
sarl
notb
icebp
mov
cmp
xchg
cmp
ret
push
jecxz
dec
repnz
inc
adc
ds
pop
mov
pop
sbb
ljmp
mov
sbb
addr16
mov
clc
cld
push
mov
sbb
movsl
das
clc
sbb
in
push
fwait
cwtl
sbb
cwtl
cmp
lock
dec
dec
sub
xchg
test
inc
mov
shll
scas
cs
pop
fdivrs
repnz
int3
std
xchg
loop
fdiv
in
pop
or
push
mov
mov
idivb
sub
jl
add
mov
jae
jne
mov
push
sbb
mov
in
fs
mov
cwtl
dec
jecxz
fstp
arpl
xor
and
int
cmp
or
cmc
mov
out
pushf
js
cs
sub
leave
cld
jae
xchg
xchg
shlb
push
fcmovu
ret
mov
div
or
cmp
pop
pop
js
pop
mov
xor
xlat
cmp
stos
imul
mov
imul
jle
inc
xlat
mov
and
mov
movsl
dec
leave
mulb
inc
jle
xchg
mov
mov
hlt
addr16
out
and
stc
stos
and
mov
in
cmp
sbb
cld
jecxz
dec
into
shlb
jbe
push
push
das
xor
mov
lds
sarb
sub
in
rcll
cmp
stos
mov
push
add
shlb
mov
das
sub
push
push
aad
cmpsl
nop
sti
add
xor
loop
push
add
jle
and
cmp
insl
and
cwtl
dec
jae
test
xchg
lea
and
inc
leave
lods
divl
pop
lds
xorb
push
ja
cmpb
adc
xorb
sahf
lret
cmp
push
stc
sahf
ret
push
or
or
push
jl
imul
jg
stc
in
dec
or
adc
xchg
inc
call
clc
outsb
arpl
and
mov
mov
mov
pop
int
cmp
loope
sahf
xchg
and
add
and
inc
outsl
leave
insb
push
xchg
cmp
mov
aas
push
mov
fisubl
popa
mov
arpl
fs
sub
adc
inc
fadd
inc
inc
cmpsl
jmp
xchg
inc
push
not
pop
imul
mov
push
dec
mov
sbb
scas
jno
sub
cmpsb
sbbb
movsl
aas
mov
das
push
jno
inc
cmp
sbb
std
ja
cld
jno
int
xor
ja
lahf
mov
mov
push
pop
jp
mov
fwait
mov
jno
pusha
pop
mov
xor
hlt
sbb
sbb
lahf
pop
pop
scas
sbb
icebp
push
xchg
add
add
pop
or
push
push
xchg
xor
test
cwtl
pushf
lret
and
xbegin
movsb
jg
adc
add
push
mov
sub
movsb
lods
dec
and
add
fidivs
push
lcall
mov
mov
sub
inc
push
stos
push
test
test
rcl
jl
negl
ja
ds
xchg
xor
xor
addr16
cmp
cmp
test
dec
and
mov
mov
popa
outsl
and
out
lock
sahf
dec
or
subb
ret
movsb
addr16
mov
pop
rolb
push
sub
adcl
and
lea
mov
loope
push
jb
or
mov
imul
jnp
add
fmull
pop
mov
adc
fnstenv
scas
push
mov
and
jg
aas
jl,pt
cmp
fmull
sbb
pop
insl
push
daa
imul
push
push
or
jmp
cltd
adc
and
sahf
jmp
lret
jbe
enter
cmp
dec
cwtl
outsb
push
and
mov
mov
shlb
jo
out
or
mov
outsl
xlat
notb
pop
aad
xchg
jmp
pop
clc
test
push
jb
fiadds
inc
arpl
and
sub
loop
lret
repz
sarb
mov
xor
push
jno
sub
sahf
push
cmp
pop
fucom
sbb
dec
lret
ja
out
xchg
adc
and
mov
outsl
xchg
daa
stos
mov
es
leave
mov
cmc
into
jnp
pop
repz
mov
lret
stc
ljmp
cld
test
std
clc
aas
cmpb
gs
das
cld
mov
sub
inc
sbb
or
or
mov
loop
pop
adc
in
add
orb
subb
push
sahf
data16
fcom
sbb
push
scas
push
sub
jae
cmp
test
cli
and
and
and
in
icebp
fwait
mov
sub
call
jmp
std
push
fwait
icebp
decl
push
adc
jbe
mov
in
mov
enter
loopne
and
enter
pop
mov
lds
idivb
push
outsl
jb
repz
cmp
stos
test
dec
cmp
push
cld
push
int3
adc
rclb
pop
hlt
sbb
xor
movb
scas
adc
dec
sub
cwtl
xchg
pusha
mov
sbb
ret
insl
dec
mov
cmp
xor
fidivs
sub
movsb
dec
jge
mov
fstpl
repnz
mov
or
incl
and
xchg
loopne
mov
in
jle
dec
imul
jecxz
jbe
addr16
xlat
arpl
int
mov
mov
cltd
and
stos
mov
sahf
mov
loop
lds
mov
sti
dec
out
jns
fimuls
fsubl
jge
push
test
lods
flds
inc
jl
out
cmp
push
lahf
or
popa
add
cmpsl
cltd
xor
mov
sub
dec
add
bound
mov
das
ret
cmc
imul
push
xchg
xlat
jecxz
iret
or
mov
pop
loop
cmp
fldenv
sub
xchg
cmp
shll
fcompl
int3
jne
sub
js
lods
loopne
fdivl
push
sub
loopne
jp
inc
dec
mov
mov
push
sbb
rcll
insb
xchg
jae
aam
cmp
int
mov
insl
xchg
leave
scas
jle
ficomps
xor
fsubl
pop
inc
cld
lahf
stos
les
jnp
xor
xor
or
inc
jmp
adc
fmuls
js
notb
lea
loope
hlt
or
adc
sbb
xchg
pusha
xor
insb
and
dec
add
popf
adc
mov
sbb
lret
cwtl
cmp
loopne
imul
adc
jecxz
iret
xor
cmp
mov
sub
inc
xchg
mov
js
pop
jns
jnp
jbe
icebp
rcrl
jo
in
mov
movsl
push
jnp
test
push
dec
push
leave
out
pop
lds
scas
outsl
xor
pop
mov
cld
nop
shr
jbe
xchg
push
insl
idiv
fbstp
inc
jns
bound
scas
lea
adc
fistpll
inc
das
and
or
lcall
bound
std
inc
ficomps
jle
lods
mov
cmp
dec
mov
mov
add
pop
inc
add
or
stc
mov
jne
mov
xor
mov
pop
lea
mov
addr16
movsl
pop
and
icebp
mov
cmp
lock
inc
mov
aad
xchg
test
fs
js
fidivrs
cmpsb
sbb
out
mov
mov
out
dec
lret
enter
add
push
loope
xchg
adc
shrl
leave
or
insb
mov
or
pop
sbbl
add
gs
add
jge
lock
mov
jp
inc
loop
sub
test
cmp
push
dec
adc
push
pop
mov
in
ss
push
dec
pushf
mov
enter
enter
in
es
lcall
dec
outsl
adc
adc
or
rclb
shlb
popl
cmp
roll
pop
pop
fdivrl
sahf
push
push
xor
pop
push
fiaddl
and
xlat
repnz
push
pop
mov
inc
add
mov
push
mov
inc
push
adc
in
insl
cmp
pop
sahf
cmpl
clc
xchg
nop
je
in
andl
mov
ret
das
sbb
xchg
xor
rol
dec
inc
or
cmp
adc
and
repnz
mov
enter
xchg
inc
lret
stc
sub
sti
movsb
jmp
enter
cmp
scas
sbb
mov
inc
or
popa
pop
or
mov
icebp
add
xchg
inc
in
xchg
int
jno
out
fwait
es
shl
inc
in
sub
or
aam
inc
mov
xlat
int
cmpsl
cmp
pusha
cmp
pop
and
mov
shr
xchg
add
sbb
mov
in
fldt
mov
dec
xorb
mov
fstl
pop
add
in
adc
cmp
mov
addr16
mov
fwait
jge
inc
cmp
push
out
add
pop
pop
push
dec
add
and
xor
and
xor
roll
andl
push
push
jns
mov
out
test
jmp
ljmp
pop
aad
sub
and
out
push
call
sbb
sbb
cwtl
repz
cmp
sub
data16
cmp
xor
sub
mov
repnz
push
movsb
xor
cmp
mov
dec
sub
into
inc
pop
adc
jge
inc
aaa
rol
lods
or
xor
pop
rcll
cli
sbb
orl
mov
inc
sti
out
add
movl
inc
into
mov
cwtl
pushf
pop
mov
push
roll
test
int3
pop
js
shl
inc
sub
fwait
xorps
jmp
cmc
aam
mov
jbe
rcl
mov
adc
lock
repz
mov
fs
jp
pop
cld
in
icebp
mov
aam
jno
jge
xor
jg
in
mov
iret
das
cmpsb
pushf
ja
and
mov
add
cmp
gs
test
mov
cmp
insl
mov
fnstsw
outsl
filds
mov
and
in
data16
sub
fldpi
mov
loop
idivl
cltd
lock
sti
dec
ss
lea
call
les
add
in
adc
jmp
lds
xchg
ret
arpl
dec
inc
xchg
cmp
out
stos
lret
push
push
sub
adc
and
pushf
addl
aad
fnsave
cmp
lock
arpl
cltd
je
jmp
pushf
gs
mov
cmp
cmc
cmp
and
xchg
mov
sti
arpl
lds
loop
mov
test
lfs
push
cmp
les
mov
in
ja
ret
or
popf
int3
jmp
in
ds
add
jb
mov
in
ljmp
lods
hlt
jecxz
rol
dec
aas
out
pop
jp
jmp
arpl
push
repz
dec
loopne
ljmp
add
hlt
movb
pop
in
andb
cmp
loope
mov
push
cmpsb
mov
call
aam
pop
mov
mov
xchg
xchg
int3
pop
daa
mov
aaa
and
rcll
push
loopne
in
pop
mov
aam
mov
ljmp
cmp
dec
call
fisubl
sbb
jbe
cmc
push
adc
lcall
test
ret
and
cmpsb
push
es
adc
adc
push
and
cltd
jae
and
cwtl
jl
mov
mov
xor
inc
jg
jo
push
push
leave
movsl
jbe
in
imulb
lods
mov
adc
sub
push
rcll
adc
es
and
loop
mov
push
ficoml
cwtl
test
sub
pushf
fs
clc
or
sbb
fcoms
xor
xchg
pop
push
mov
and
sub
idivl
jno
and
test
lods
imul
push
cmp
in
mov
mov
sub
cmp
mov
adc
movl
jae
insb
inc
pop
jno
repnz
push
xchg
pushf
xchg
jne
cltd
iret
mov
mov
fs
and
fs
in
add
test
mov
add
sbb
cmp
xchg
mov
cmp
pop
mov
and
dec
dec
jne
sbb
dec
loope
test
or
push
or
dec
add
jnp
push
mov
and
ficomps
out
mov
das
mov
pushf
inc
add
orl
fs
nop
outsl
insb
push
adcl
mov
pushf
pop
mov
push
sub
lret
jmp
sub
and
add
shll
shl
mov
ds
stc
xchg
inc
mov
and
xor
sbb
pop
push
insb
lret
jo
pop
dec
jns
sar
xor
cmp
inc
addr16
ret
hlt
mov
mov
jb
inc
ss
jns
test
movsl
push
lahf
mul
jae
fs
sub
xor
add
pop
dec
loopne
mov
sbb
in
outsl
aam
jo
lret
cmp
pop
jmp
aas
daa
aaa
jmp
stos
mov
lods
jo
mov
sahf
push
sbb
xor
fistps
and
xchg
push
xchg
sub
jmp
shll
and
inc
shll
pop
cmp
mov
stos
orb
ja
hlt
push
repz
sbb
cmpsb
dec
pusha
ret
fadds
cmp
dec
inc
xchg
cmp
stc
xchg
fldcw
fcmovb
mov
cs
test
push
and
xor
pop
orb
jp
mov
cltd
cwtl
mov
or
jbe
sub
and
notl
mov
scas
fmuls
outsl
das
xchg
xchg
add
inc
jbe
es
pop
jo
enter
fdiv
or
cmpsl
push
add
inc
repz
push
jnp
test
xchg
xchg
pop
jb
pop
mov
pop
shl
jg
insb
nop
inc
int
out
jecxz
sahf
push
adc
ss
fidivs
xchg
insb
sahf
mov
xchg
adc
inc
lcall
or
cltd
pop
lods
cmp
sbb
and
nop
mov
add
adc
icebp
sbb
stos
sti
es
enter
shrb
leave
inc
add
leave
cli
inc
int
inc
pop
jge
sub
repnz
nop
jmp
cmpsl
aas
clc
xchg
rorl
adc
dec
lahf
inc
push
in
popa
aam
addr16
sbb
xor
add
jne
inc
lret
dec
jae
or
adc
dec
lret
sbb
lea
sub
fmulp
leave
cmp
rclb
cmp
sub
mov
add
xor
addb
add
test
dec
iret
pop
sub
lahf
outsl
cmp
dec
stos
enter
lret
cmp
loop
jmp
ljmp
adc
daa
mov
int
jl
add
mov
lret
or
andl
outsb
imul
pop
push
pusha
and
sti
lret
mov
sub
adc
xor
mov
jl
js
int3
rol
ret
adc
dec
shr
xchg
mov
lret
sbb
push
add
inc
bound
shll
mov
sub
rep
dec
pop
push
sub
or
ja
loop
mov
push
xchg
lods
std
add
jle
pop
xor
cmp
mov
sarb
sub
outsl
sub
mov
push
fsubrl
adc
pop
mov
mov
or
nop
jns
test
std
pop
insb
js
adc
xchg
jns
xor
rclb
and
add
xchg
in
mov
shlb
lahf
push
movsb
xchg
movsl
mov
xchg
mov
mov
cld
mov
sbb
clc
jo
fisubs
lea
jle
sub
movsb
pop
mov
mov
mov
dec
in
ret
and
int
orl
repnz
mov
stos
pop
xor
loope
inc
ljmp
mov
mov
cli
lods
jno
push
dec
arpl
les
sbbl
popf
jg
mov
sbb
or
adc
sub
mov
into
xor
and
test
cmc
jp
in
mov
mov
and
popf
decl
adc
sbbb
xchg
cwtl
je
cmpsb
iret
dec
pop
or
scas
inc
push
xchg
fmuls
in
movsb
push
enter
out
push
std
or
push
movsb
loopne
int
lds
jbe
pop
js
push
int
push
jae
dec
out
test
cltd
flds
nop
mov
ljmp
fldl2e
inc
inc
mov
ss
pop
addr16
push
ret
and
gs
xchg
rorb
call
rcrb
xchg
mov
cmp
sbb
dec
popa
adc
leave
dec
push
rorb
cmc
fs
in
mov
insl
pusha
pop
bound
jno,pt
dec
call
lods
add
ret
divl
xlat
pop
mov
jge
lea
jmp
sti
movsl
int
add
inc
cmp
fwait
aad
fs
insb
inc
ds
test
lods
popa
sbb
jmp
stos
mov
out
imul
out
mov
jle
int3
lcall
xor
sti
es
fistl
dec
sbb
dec
fxtract
pusha
or
sub
cmpsb
idivb
dec
ljmp
jae
stos
pop
dec
outsb
stc
int
jns
mov
push
pop
push
rcrl
sbb
push
dec
fcompl
call
pusha
sub
loop
push
frstor
icebp
lret
mov
hlt
mov
notl
dec
jmp
insl
rcr
test
add
cmp
dec
stos
sbb
daa
out
jl
outsl
cmp
mov
test
cmpsb
in
or
adc
xchg
mov
rclb
outsl
je
or
fidivs
cwtl
push
push
and
scas
and
in
cmp
xchg
repz
push
mov
out
data16
repz
scas
call
add
mov
xchg
sbb
push
notl
ret
test
inc
xchg
les
jbe
sbb
adc
rcl
mull
jge
xorb
dec
stos
xchg
es
call
repz
leave
mov
mov
mov
sbb
shl
int
leave
into
lret
xchg
mov
fidivl
or
mov
push
adc
fildl
ficoml
push
cmp
cli
dec
repnz
roll
push
sbb
push
cmpsb
xchg
mov
push
push
mov
ficompl
sub
mov
int3
nop
jecxz
mov
jle
ljmp
out
push
inc
mov
dec
lret
pop
fisubrs
out
push
sub
pop
pop
daa
push
rcrb
test
mov
stos
sub
movd
les
mov
cltd
push
push
adc
adc
xchg
jae
sub
push
or
test
out
cs
and
jnp
sarl
sub
iret
adc
out
mov
mov
xchg
xor
sbb
inc
cmp
inc
shll
out
popa
cli
or
adc
test
out
or
sbb
out
sbb
sti
pop
test
adc
push
sbb
add
cltd
cmp
cld
adc
or
loopne
in
dec
or
je
mov
ret
mov
addr16
fisubrs
push
nop
sbb
xlat
orb
xchg
lahf
xchg
popf
aaa
dec
mov
add
dec
pop
nop
xchg
mov
daa
jle
or
push
mov
shlb
adc
sbb
out
dec
xor
rolb
icebp
mov
mov
push
pop
or
mov
fnsave
call
inc
jecxz
dec
mov
push
movsb
pop
push
mov
xchg
sarb
push
jns
xor
push
adc
repnz
adc
dec
push
rcll
mov
and
dec
push
fs
mov
mov
adc
in
xchg
inc
cli
sbb
lahf
pop
xchg
mov
or
mov
and
and
imul
pop
movsb
xchg
mov
sub
movsl
xor
ret
xchg
cwtl
xor
pop
sbb
test
adc
jbe
insb
sub
jbe
and
stc
cmp
and
or
mov
and
fisttpl
adcb
bound
sub
enter
jns
dec
cli
and
int
jle
or
pusha
dec
hlt
jne
dec
inc
inc
jmp
lock
dec
fcoms
adc
sti
dec
mov
sub
push
gs
or
out
sti
mov
and
loop
ror
mov
xchg
pusha
and
jns
loopne
dec
popf
mov
lret
sub
sti
dec
mov
in
mov
xacquire
pushf
aas
mov
inc
jle
data16
dec
mov
push
loopne
les
adc
xchg
test
loop
xchg
cmp
sbb
dec
daa
lea
dec
mov
in
in
jo
pop
shl
loop
xchg
mov
pop
in
push
and
sbb
mov
pop
das
fcmovb
popa
xchg
fidivrl
pop
jno
cs
mov
mov
aas
mov
repz
cmpsb
mov
outsl
xlat
imul
ja
inc
ret
cld
shrb
ja
jmp
pop
mov
lock
mov
pushf
hlt
jge
xor
adc
mov
into
push
cwtl
sub
nop
dec
ja
mov
leave
fcmovnbe
pop
or
test
pop
jb
cmpsb
repz
mov
jne
lods
jecxz
push
sbb
xchg
lods
inc
sub
aad
ja
sub
mov
cmp
mov
dec
loope
sub
sub
pop
fwait
dec
jnp
mov
mov
in
imul
mov
cld
cmc
icebp
cmp
and
mov
loopne
cmp
nop
mov
in
in
stos
fcompl
jno
aaa
jmp
movsb
outsl
imul
out
push
mov
sahf
xor
add
xor
sub
and
push
or
out
adc
push
pop
mov
movsb
mov
mov
xor
sbb
movsl
xor
mov
pusha
or
jecxz
pop
sbb
cmpsl
adc
mov
daa
fildl
iret
into
je
hlt
mov
jnp
mov
addr16
repnz
in
arpl
push
push
sub
jmp
pop
adc
xor
stc
in
pop
cs
pop
cs
and
push
dec
mov
ret
mov
jle
mov
mov
push
adc
loop
je
aad
shl
scas
xchg
cwtl
or
push
jl
dec
imul
push
mov
les
movsb
push
int
cmp
popa
stos
xchg
sub
mov
hlt
sub
adc
cmp
push
shl
movl
xchg
adc
std
call
test
or
in
mov
test
push
lods
in
mov
and
xor
sub
and
push
lds
filds
out
loop
push
mov
lahf
js
scas
test
icebp
adc
cmp
and
lods
pushf
push
imul
neg
outsb
mov
push
mov
and
test
pop
fsubl
cmpsl
or
sbb
mov
dec
add
xchg
in
pop
dec
push
arpl
enter
dec
push
sbb
in
and
into
jns
stos
pop
and
cwtl
fwait
xchg
xchg
int3
fs
out
cmpsb
flds
pop
dec
es
outsl
scas
mov
jle
popf
mov
fadd
outsl
arpl
rcr
out
and
int3
add
loop
aam
mov
xor
xchg
stos
fnstenv
sub
or
pusha
movsb
mov
jp
jns
jns
cmpsl
mov
js
les
repz
push
adc
jae
xor
xor
outsl
imul
jae
scas
xor
sbb
outsb
test
inc
mov
aas
sub
add
pop
jae
jecxz
jbe
icebp
xor
icebp
cmc
cmp
orl
fldenv
out
pop
sub
mov
in
test
popf
pop
lock
mov
std
push
sbb
pop
lahf
dec
push
int3
insl
xor
je
mov
jne
test
lds
idivl
dec
xchg
nop
push
dec
sub
outsb
xor
int3
fnstenv
dec
pop
lods
out
xor
and
js
arpl
cld
mov
xlat
sub
cmp
dec
push
insb
add
movsb
cmp
sbbb
dec
mov
xor
in
dec
nop
popa
xchg
adc
bound
in
jne
mov
es
mov
or
test
rcrl
pop
jp
movsb
data16
aas
inc
adcl
shlb
call
xchg
sarl
pop
int
into
ja
mov
xchg
in
mov
inc
repz
jecxz
lcall
sub
add
outsb
and
ds
addr16
data16
inc
int
and
xchg
leave
ja
shrb
xlat
sbb
jecxz
adc
or
sub
cltd
lods
test
mov
inc
push
xchg
les
hlt
xchg
xor
insb
add
xlat
rclb
fstl
xchg
inc
mov
outsb
lock
test
pop
jns
nop
pop
cld
dec
rcrb
adc
inc
out
lods
popf
ljmp
out
repz
inc
fdivrl
rcl
or
and
test
sbbw
repnz
sbb
push
ds
jno
or
mov
je
loope
loopne
fs
mov
mov
in
jns
lods
das
leave
mov
push
test
cwtl
je
sbb
sarl
das
or
push
inc
push
cmpsb
es
sub
xchg
imul
aam
out
cmpsb
jb
ljmp
sarl
jne
or
dec
ds
fmull
imul
pop
jmp
icebp
rcrb
movsb
push
sti
adc
loope
repz
mov
mov
add
push
cmpsb
popa
mov
arpl
js
dec
sbb
insl
loop
fdivr
pop
cmp
in
fnstsw
sub
mov
dec
fwait
mov
in
push
xchg
in
imul
aas
fwait
lcall
clc
movsb
push
lcall
ficompl
leave
and
cld
cmp
xor
mov
mov
je
les
arpl
orb
std
cmp
jmp
sbb
dec
jecxz
adc
shll
out
push
ss
jno
sub
fldt
inc
ret
jbe
jge
sbb
sbb
into
lock
xor
pop
inc
enter
jae
daa
add
cmpsl
mov
lods
lds
push
sbb
push
lret
repz
sbb
add
repnz
test
out
inc
xchg
jg
loop
or
cltd
subb
cwtl
cwtl
dec
sbb
jnp
add
jbe
stos
in
push
cmc
cmpsb
xchg
sbbl
jae
xor
pushf
jecxz
mov
cmp
pop
push
js
adc
arpl
addr16
cwtl
icebp
daa
or
iret
mov
mov
clc
iret
sub
out
nop
mov
or
ljmp
pop
popf
mov
std
arpl
imul
cld
call
iret
or
add
adc
aas
sbb
jl
arpl
testl
jge
out
cmp
and
push
iret
stos
xor
pop
sub
out
or
dec
adc
xchg
push
shlb
mov
adc
into
mov
adc
adc
inc
aas
push
lds
data16
scas
iret
das
incb
cmpsb
popf
or
mov
xchg
push
and
mov
and
icebp
filds
stos
mov
and
dec
cmp
inc
stc
subb
mov
cmp
push
int3
and
mov
xchg
scas
lods
sarb
inc
les
cltd
sub
call
ja
adc
cmp
push
sahf
jb
cmpsb
and
xor
xchg
insb
dec
or
jg
push
in
sbb
je
cmpsl
pop
cmp
shll
jecxz
lea
and
sbb
and
xor
mov
lret
xchg
arpl
cmp
icebp
mov
dec
idivb
fcoml
dec
cld
popa
loop
jp
mov
dec
push
fsubp
xchg
adc
loope
bound
out
and
cmp
lds
fstps
test
cs
scas
ds
mov
push
clc
xchg
aas
call
ljmp
cmpsl
sbb
pop
jmp
adc
aam
xchg
stc
sub
ror
xor
pop
cmp
or
xchg
pop
fists
pop
into
xchg
repz
inc
adc
ret
sub
idivb
testl
mov
ret
enter
dec
add
addr16
or
in
mov
outsb
mov
js
jae
or
inc
and
stos
jb
xchg
hlt
adc
sub
insb
fsubs
jg
sub
jecxz
pop
mov
mov
cmp
fildl
rcrb
lahf
mov
pop
loopne
xor
push
mov
pop
lods
enter
xor
movsb
cltd
sbb
stc
into
rclb
addr16
sahf
addl
dec
pop
mov
dec
add
daa
into
shll
je
aad
out
jmp
push
imul
add
dec
idivl
push
ljmp
push
dec
xlat
mov
adc
mov
xchg
mov
lret
jnp
dec
inc
jp
scas
and
fldenv
movb
lods
shlb
loopne
dec
jne
push
and
jp
mov
hlt
aad
push
test
pop
mov
cld
push
loopne
and
mov
or
pop
pop
or
inc
jae
push
dec
leave
test
dec
daa
fnstsw
repnz
cmpsb
hlt
mov
mov
outsl
pop
movsl
outsl
dec
cltd
dec
dec
test
xor
xchg
pop
mov
test
xchg
int3
cmp
rclb
sbb
mulb
fstps
push
iret
or
pop
xor
jae
xor
dec
in
dec
es
mov
xchg
into
mov
xchg
std
inc
jecxz
repz
out
cmp
sub
ja
daa
in
mov
sub
dec
stos
fidivrl
mov
ljmp
xchg
and
ret
lods
iret
and
lret
movsl
cmp
and
inc
or
movsb
decl
sub
xor
aaa
sub
scas
enter
pop
cmpsb
pop
insl
xor
cli
lret
adc
and
add
in
cld
cs
push
je
shlb
xchg
xchg
lcall
cmpsl
dec
mov
js
and
test
das
mov
xlat
jb
xor
cltd
out
sahf
or
lahf
sbb
lahf
mov
notl
ja
stos
jg
cltd
mov
je
lcall
mov
mov
fistps
addr16
test
into
pusha
or
ss
repnz
cmpsl
lret
mov
es
mov
int3
cmpb
test
or
das
sbb
adc
pop
loopne
sbb
xchg
mov
out
imul
and
sub
mov
int
repnz
adc
mov
out
out
sbb
mov
test
movsb
les
push
pop
ss
sub
lahf
fstl
lahf
cld
cltd
jp
std
and
cmp
adc
mov
stos
push
sub
lds
pop
test
adcl
pusha
add
jg
dec
xor
pop
hlt
outsl
jp
jle
jg
mov
jbe
iret
sti
inc
cmc
aas
and
ljmp
adc
mov
out
gs
push
stos
fisubs
inc
xor
movd
mov
add
mov
lret
push
mov
adc
xor
mov
mov
add
mov
sub
sbbl
sahf
sahf
dec
ja
mov
stos
or
pushf
and
or
loope
jno
adc
mov
sbb
clc
fwait
xchg
add
pop
push
cmp
sub
fnstenv
addr16
dec
pop
sbb
xor
in
sarb
int
pop
lcall
inc
add
movsb
jnp
rolb
inc
fwait
repnz
jae
xchg
pusha
movsl
pop
shrl
rcr
mov
mov
sbb
and
push
fstpl
insl
xchg
mov
inc
pop
iret
xchg
jge
js
divl
jno
push
out
jp
out
mov
pop
sbb
or
fstpl
imul
call
fsubp
movsb
ss
repnz
xchg
in
add
dec
push
pop
or
cmp
test
push
xor
mov
pop
jno
pop
mov
daa
sbb
push
imull
cltd
arpl
icebp
inc
pop
ficoml
js
imul
and
add
lret
ret
dec
sarb
sub
rorb
xor
mov
outsb
xchg
sub
pop
xor
add
fdivrl
dec
imul
lahf
sub
lea
shlb
pushf
aad
sub
push
add
jecxz
out
push
pop
lahf
inc
insb
lods
cli
notl
into
jnp
cld
fistpl
outsb
imulb
les
mov
jp
ja
push
mov
fsubrl
jmp
std
mov
repnz
lret
arpl
cmp
pushl
loopne
mov
rcll
adc
inc
aad
outsb
in
jp
jg
dec
test
fwait
push
push
cmpsl
or
das
les
add
mov
lds
jo
or
sti
dec
scas
loopne
adc
lahf
lret
gs
xor
or
rcrl
xchg
test
test
and
mov
shlb
xor
pop
je
adc
psubsb
dec
or
cmp
addr16
pop
and
push
and
fdivs
filds
sahf
popa
inc
inc
push
push
stc
mov
jle
in
nop
and
fwait
mov
mov
and
sti
les
jno
nop
js
or
sub
xor
pop
xchg
imul
stos
js
cltd
sub
subb
mov
or
sub
jno
testl
mov
mov
js
in
stos
or
xor
cmp
clc
and
ret
mov
lods
pop
or
mov
jno
or
dec
loope
sbb
or
fisubrs
sub
sbb
push
dec
fucomp
pop
pop
xchg
sti
loope
ror
dec
jle
cmpl
pop
imul
dec
mov
das
or
push
sub
lock
stos
push
cld
mov
rcrb
pusha
xchg
leave
mov
jg
into
test
mov
mov
icebp
push
mov
and
cmp
cmp
fistl
xor
es
fwait
mov
fcoml
pop
iret
popa
sbb
xor
inc
add
pop
sarb
out
mov
pop
iret
or
iret
aas
leave
jnp
xchg
push
pop
mov
sbb
int
ss
mov
inc
bound
push
mov
daa
jns
sbb
push
testl
mov
ds
lcall
lret
test
mov
jne
push
out
mov
push
mov
pop
gs
xor
dec
pop
lcall
sub
cmpsb
jmp
dec
ljmp
loop
fs
jp
jle
lds
cwtl
sti
mov
icebp
addr16
or
stos
popf
data16
dec
sbb
and
jae
cli
and
xchg
fcoml
roll
and
sub
sbb
and
mov
inc
or
xorb
gs
cmpsl
ds
ljmp
test
loopne
cld
xchg
pop
and
popf
mov
lea
dec
je
add
les
push
pop
popf
or
sub
inc
pop
divb
pop
and
mov
pop
pushf
mov
xchg
cld
inc
stc
in
rorl
cltd
js
in
dec
rolb
mov
mov
repnz
mov
sub
movsl
jg
or
cmp
stos
lret
jbe
mov
sub
jmp
add
fistps
add
stc
xor
xor
fs
mov
repnz
fimull
xchg
lds
jle
bound
push
jo
into
iret
jne
inc
shlb
sub
mov
aas
push
push
aam
jp
frndint
xchg
pop
sub
add
dec
xor
mov
or
out
jbe
dec
sub
call
fimull
arpl
jmp
xchg
repnz
adc
pushl
sub
int3
or
pop
jmp
pop
xchg
cmp
inc
xchg
xor
pop
lcall
shrb
push
rcrb
jmp
sahf
call
enter
cmp
imul
pop
in
mov
or
adc
repnz
jecxz
pop
jge
aam
mov
xchg
xchg
mov
int3
xor
aam
push
lcall
jle
and
jae
sub
mov
cmp
ja
sar
adc
mov
dec
sbb
pushf
jnp
jb
filds
out
mov
leave
lock
jno
out
js
and
fisubrs
in
sbb
stos
gs
sub
or
jo
shll
mov
iret
mov
jnp
std
xchg
cld
sahf
and
adc
fs
xchg
pop
jge
lds
dec
cmp
lods
data16
push
pop
cli
cmc
in
pop
cmp
out
cmc
sbb
fwait
pop
lcall
rclb
stos
xor
sub
orl
repnz
inc
imul
jmp
lds
outsl
jno
sub
popa
pushf
hlt
aam
test
xchg
fisttpll
movzwl
push
int3
ja
rcrl
pop
jns
adc
and
jl
jmp
push
loope
cs
ds
pusha
and
cmp
jb
cmp
push
lahf
add
cmp
mov
dec
subl
leave
xchg
cmc
cld
hlt
dec
adc
mov
int
push
push
jp
imul
je
push
jbe
loope
inc
lcall
add
pushf
xchg
repnz
push
pop
mov
pop
popf
clc
or
lods
adc
xchg
mov
push
adc
divl
jo
lcall
and
cmpsl
dec
pop
mov
ljmp
rcl
push
ljmp
add
adcl
inc
inc
sahf
inc
iret
aam
stc
repz
pop
pop
scas
iret
mov
shrb
mov
xor
dec
fsubrl
mov
popf
out
jne
mov
fistl
mov
xor
adc
mov
aad
pop
bound
ficoms
or
lds
xor
mov
inc
fwait
or
xchg
sbbb
mov
movsb
cmpsl
xchg
or
into
ja
fildll
in
into
fs
adc
sub
inc
into
fcom
pop
insl
xchg
mov
es
cli
xchg
dec
and
or
aam
cs
xchg
dec
es
daa
dec
jle,pt
sub
addr16
pop
sub
cs
xchg
stc
push
loopne
out
pop
out
jae
hlt
mov
cld
xchg
dec
popa
pop
pop
fsqrt
lods
dec
push
xchg
sbb
jnp
and
cwtl
push
daa
repnz
inc
aad
mov
scas
and
loope
idiv
sub
jae
out
int3
mov
hlt
jmp
adcb
mov
lock
inc
out
inc
test
psllw
push
mov
outsb
add
mov
cmp
mov
and
and
sti
and
clc
sbb
xor
mov
imul
int
stos
jge
pop
stos
sub
inc
jge
pop
push
and
mov
mov
das
add
mov
ss
xor
sbbl
mov
lea
mov
mov
sbb
dec
lods
jno
pop
test
xor
or
push
sub
or
mov
or
push
arpl
mov
mov
jl
cmp
iret
push
and
rclb
mov
xlat
dec
loop
pushw
imul
outsb
iret
or
adc
sbb
push
dec
pop
and
je
out
dec
jbe
aas
sub
cmp
cmp
sub
hlt
popf
outsl
or
add
and
or
or
jp
and
loope
cmp
clc
pop
testb
rorl
pushf
push
dec
shrl
push
push
ljmp
mov
ret
fs
xor
cmp
inc
sahf
jb
outsl
fdivrs
stos
cmp
icebp
mov
pop
and
pop
leave
jbe
add
xchg
mov
pop
in
xchg
sbb
mov
sbb
xchg
dec
ss
mov
enter
mulb
jb
in
jg
aaa
jo
ss
je
jo
outsl
dec
jb
out
dec
rcr
ror
sub
or
adc
pushf
addr16
jp
adc
jle
popf
push
lods
mov
mov
push
xchg
and
pop
into
loopne
mov
jle
fdivs
aas
mov
lret
ret
ret
js
fisttpll
movsl
int3
out
adc
adc
jecxz
adc
dec
pop
ljmp
loopne
mov
fisttps
in
imul
jns
xchg
dec
cmpsl
mov
aaa
mov
pop
pop
cwtl
inc
idivl
fwait
cs
and
jecxz
pushf
call
scas
xor
or
testb
ror
mov
push
icebp
cmp
mov
bound
daa
outsb
inc
or
jb,pn
or
icebp
nop
jo
mov
pop
cmp
test
loop
outsl
dec
fistl
pop
xchg
clc
add
les
mov
and
mov
xchg
fstps
add
xchg
js
lock
lods
jle
mov
cmpsb
push
dec
decl
stos
mov
call
jmp
outsl
push
in
mov
pop
sbb
in
xchg
in
insb
ja
fwait
lret
fisttps
lock
js
jge
mov
and
arpl
dec
jno
outsb
push
fnsave
sahf
push
insl
fldcw
mov
push
lods
adc
out
xlat
xorb
fs
dec
aam
sbb
jae
shr
push
inc
pop
je
inc
cmpsb
mov
scas
mov
pop
or
sub
sub
in
push
out
jns
xchg
je
cmc
lods
sub
movsb
leave
push
addr16
movsb
daa
inc
movsb
push
dec
out
mov
loop
mov
dec
fucom
fs
cmp
lahf
pop
decb
jp
pushf
outsl
jno
repz
imul
sbb
ret
ss
ds
jg
dec
sti
push
xchg
cld
aam
clc
pop
sub
jge
mov
popf
es
sbb
or
sahf
push
fimull
adc
fs
popf
mov
repnz
stos
cmc
js
sub
sub
and
wbinvd
nop
incb
int3
adc
xor
jge
cmp
or
sti
mov
pop
pop
ds
push
popf
fwait
iret
sbb
movsl
sub
xchg
mov
push
push
imul
and
test
outsl
dec
loopne
sbbl
imul
enter
lods
mov
and
jb
test
or
daa
jbe
insl
call
repnz
jno
addr16
outsl
loop
pop
es
mov
push
add
mov
dec
xchg
add
lahf
adcb
push
add
in
clc
fsubl
std
mov
fildl
jne
add
leave
ds
mov
dec
dec
lahf
dec
test
jmp
xchg
and
lods
mov
xchg
insb
pop
lahf
pusha
lcall
pop
push
mov
sbb
shlb
adcl
inc
xor
dec
jmp
movsl
lock
icebp
xor
fs
pop
lret
xchg
and
ss
lret
js
mov
jmp
mov
push
shlb
push
dec
sub
ds
and
cmpsl
or
xlat
pushf
stos
je
lahf
clc
out
sub
dec
jnp
sub
inc
scas
mov
and
test
mov
cmp
cltd
xchg
and
pop
ficompl
in
sbb
sub
fisttpl
mov
ficomps
outsl
push
sub
pushf
jl
pop
jp
out
jl
dec
xchg
jb
jb
sbb
pop
rol
aaa
cmp
push
fwait
test
mov
enter
mov
shr
mov
lret
dec
xchg
push
sahf
sbb
es
inc
orb
pop
mov
stc
sbb
clc
pop
scas
jg
and
test
sahf
mov
ds
lock
int
test
ficoml
stc
xor
cld
int
xchg
into
nop
xchg
out
sbb
out
mov
jo
add
push
mov
sub
and
sub
or
fs
mov
xchg
and
ja
cmp
adc
push
notl
cmp
int
lds
sub
insl
rolb
add
xor
scas
fldl
repnz
in
into
push
loope
xchg
enter
test
fxch
sbb
add
mov
inc
bound
fcmovb
imul
mov
jbe,pt
pop
mov
int
or
xor
cmp
or
dec
popa
mov
and
hlt
mov
xchg
cmp
xor
push
out
and
xchg
adc
dec
lods
and
bound
pop
mov
dec
out
mov
pop
shrl
lcall
and
arpl
cmp
roll
cmp
call
les
pop
xor
xchg
je
or
pop
xlat
jp
dec
push
sub
dec
push
dec
jge
loopne
fadds
sub
ret
mov
sti
xor
push
sbb
repnz
inc
xorb
out
outsl
jp
add
jge
les
xchg
pop
jmp
dec
js
or
pop
mov
les
xor
sbb
mov
mov
pop
sub
mov
addr16
nop
pop
xor
lret
xchg
sub
lret
sbb
mov
and
push
dec
mov
sbb
popa
testb
fs
pop
jo
bound
les
les
scas
cmp
and
lret
mov
push
lods
je
pop
ja
inc
in
fisubl
sub
adc
cmp
xchg
mov
pop
mov
ds
icebp
insb
aam
adc
mov
pop
nop
jmp
in
mov
sub
popf
pop
inc
sub
enter
movsl
inc
push
mov
jo
stc
test
add
out
adc
inc
add
scas
mov
xor
jnp
mov
push
ljmp
or
add
adcl
ret
loop
call
dec
cld
clc
jp
mov
xor
dec
mov
insb
flds
dec
xor
mov
lea
ja
add
pop
dec
clc
and
or
arpl
lea
push
pushf
xlat
xchg
jecxz
inc
or
adc
mov
jl
xchg
mov
insl
xchg
popl
cmp
jl
aad
insl
sub
push
outsb
xchg
jle
push
and
addr16
insl
jb
insl
jmp
pop
mov
icebp
cld
pop
enter
imul
xor
add
loopne
or
and
sub
cmp
adc
cmc
mov
sbb
ror
pop
loope
xchg
outsb
ficompl
js
xchg
and
icebp
out
pop
or
add
dec
aas
mov
loop
lahf
pushf
and
mov
fidivs
mov
dec
rcl
cmp
mov
inc
dec
mov
sub
push
cmp
mov
arpl
push
sbb
mov
dec
stos
call
adc
pop
cmp
bound
push
sahf
xchg
loop
push
in
scas
cmp
aas
imul
jmp
icebp
iret
data16
push
arpl
iret
lahf
in
and
cmc
cmp
inc
daa
jnp
mov
lcall
jbe
mov
int3
ficoml
stos
xor
or
movsb
roll
cmp
imul
in
imul
mov
dec
cli
fadds
je
imul
fnstsw
mov
jo
jmp
dec
mov
mov
inc
aad
mov
inc
mov
lods
mov
sbb
sub
mov
in
jl
and
and
ljmp
jae
sbb
sbb
movsb
or
mov
lret
ret
pop
sbb
outsb
fnstcw
push
mov
mov
fdivs
xor
jge
mov
ret
mov
arpl
sbb
call
adc
inc
movsb
lret
inc
movsb
sbb
stos
inc
je
dec
push
sbb
shll
sbb
sbb
cli
idiv
mov
ja
pushl
push
push
sbbb
xor
addr16
data16
push
scas
pop
cmp
leave
xor
inc
repnz
imul
ret
test
cmpsb
es
jae
mov
add
cwtl
inc
cmp
push
jno
ja
jne
and
xor
in
cwtl
popf
aam
jb
ret
mov
rcrl
dec
jno
outsb
inc
xchg
inc
push
mov
out
mov
mov
popa
ja
adc
or
in
pop
popf
xlat
shll
sarl
dec
add
shrl
popf
jl
cltd
stos
add
cmp
xor
jge
cltd
dec
add
ret
outsl
push
shrb
sahf
mov
lret
pop
jns
hlt
mov
and
push
jg
xor
xchg
mov
mov
jne
fidivrl
in
cmpsl
addr16
popf
xchg
movsb
jle
mov
clc
mov
jbe
popf
iret
test
xor
fmuls
xor
xchg
jbe
lahf
adc
cld
cli
mov
stos
cwtl
sub
call
jb
pushf
lods
jecxz
mov
sti
daa
push
shl
jg
in
cli
dec
sub
add
lcall
xchg
mov
fildll
and
stos
outsl
mov
das
jns
xor
lock
es
cmp
out
cld
push
nop
jnp
pusha
popf
daa
dec
popa
into
sub
cmp
or
inc
mov
cmc
les
insl
pop
lcall
in
into
imul
inc
lock
sub
idivb
jmp
push
pop
jno
cwtl
adc
pusha
add
cmp
adc
stos
xor
lret
fidivrs
mov
pop
or
sub
ret
jle
mov
mov
sti
sbb
rol
rol
iret
pushf
cmp
jmp
movsb
sbb
cmp
stc
leave
pop
push
push
jbe
dec
sub
movsl
repnz
repnz
sub
sbb
imul
loopne
icebp
xchg
fs
jg
and
jmp
shrl
cmpsb
dec
decb
ds
mov
data16
mov
inc
lea
mov
mov
sbb
jmp
fs
cld
popf
test
repnz
mov
in
jl
xchg
imul
lods
sbb
mov
into
adc
stos
loop
fsts
fdivr
sub
mov
fs
lret
mov
cmp
int
cli
insl
push
jns
repz
lock
cmp
mov
scas
pop
pop
je
int3
xor
mov
rorl
insl
cmp
jmp
and
jae
dec
lahf
stos
push
mov
sub
xor
pop
pusha
adc
lods
loop
aad
inc
pop
push
pop
cs
rclb
test
loopne
lcall
jbe
xlat
or
mov
jnp
sbb
or
mov
stos
es
xor
scas
jmp
push
ljmp
mov
dec
dec
out
testl
dec
shr
xchg
icebp
push
inc
test
cmc
in
cmpsb
fdivs
insl
mov
mov
dec
mov
fcompl
add
push
push
pslld
jp
mov
add
lds
stc
inc
in
and
dec
inc
rolb
and
orb
and
pop
pop
cmpsb
mov
pop
push
push
push
mov
xor
push
mov
pop
mov
mov
ljmp
js
rorb
cmpsl
mov
shrb
mov
dec
call
lea
inc
scas
xor
sbb
cmp
loop
filds
cltd
mov
pop
mov
psrlq
das
fisubl
scas
rolb
sub
push
ljmp
jg
pop
imul
int
loopne
mov
xchg
xchg
loop
stos
pop
lods
inc
aad
lods
push
pop
inc
mov
imul
imul
pop
pop
mov
or
or
inc
pop
push
test
sbb
jne
jb
aam
jo
les
dec
and
jns
jo
and
adc
gs
inc
adc
inc
sbb
xor
shll
dec
pop
add
lods
cmpsb
loopne
arpl
push
xchg
in
dec
sbb
loope
cmpsb
and
testb
dec
jge
popf
cltd
shr
loop
jne
dec
insl
inc
mov
cli
sub
sbb
addl
call
jmp
jno
inc
inc
jecxz
cmp
lahf
cld
adc
iret
sub
mov
outsb
pop
cs
add
notl
shll
sub
outsl
lea
fmuls
jb
or
sbb
add
pop
sbb
lock
filds
xchg
jne
mov
fs
push
mov
imulb
js
dec
xchg
xchg
ljmp
xlat
push
sbb
xchg
pop
lock
mov
jbe
pop
icebp
adc
xor
clc
jae
data16
rclb
pop
mov
loop
xchg
mov
pop
mov
and
std
xor
xchg
idiv
or
xor
pop
lods
push
inc
test
dec
cmp
shrl
sub
or
push
dec
and
stos
adc
push
sub
cs
jb
jmp
test
icebp
mov
push
jbe
sarb
pop
iret
pop
and
jb
orl
mov
aam
jecxz
adc
ljmp
aam
mov
sarb
rol
out
dec
and
mov
jl
jnp
mov
in
inc
hlt
lahf
mov
test
push
push
je
adc
jae
mov
cwtl
xlat
adc
aas
lahf
push
jno
pop
ffreep
mov
icebp
mov
dec
or
scas
aad
mov
cs
pop
inc
push
push
mov
shrb
push
cli
rcll
ljmp
jne
adc
icebp
adc
xchg
sahf
cs
in
rcll
stc
or
das
loop
out
repnz
dec
cld
imul
pop
xor
xchg
adc
xchg
rol
cmp
in
subl
pop
mov
pop
jmp
add
jo
rcl
mov
in
ljmp
fsubs
push
iret
add
and
in
je
ss
loopne
add
les
jmp
inc
nop
jecxz
inc
pop
push
push
mov
jmp
mov
clc
outsb
ret
add
shrl
stos
mov
out
ret
negl
iret
scas
dec
or
pop
popf
jp
jge
jle
mov
push
dec
mov
push
sbb
and
sbb
je
enter
idivl
jl
aaa
repnz
inc
test
sarb
cmpsb
mov
lods
iret
repz
jne
xchg
xor
rclb
or
pop
push
and
dec
push
mov
sbb
xchg
decb
int
mov
mov
shlb
pop
out
ss
jmp
fs
mov
dec
xchg
jp
repnz
mov
lods
mov
lcall
push
inc
into
mov
fsubs
out
stc
push
cmp
cmc
loop
jmp
inc
movl
inc
push
jno
sub
cltd
inc
cs
jl
mov
sbb
xchg
adcl
rorb
or
lods
push
das
mov
out
cmc
inc
lcall
jge
pop
ss
or
insl
pop
and
jecxz
aad
jecxz
aas
inc
add
lock
mov
lret
mov
pop
push
stos
stos
mov
push
dec
fwait
addr16
xor
fidivrs
fdivrs
outsl
lcall
or
aad
imul
push
sbb
mov
icebp
sahf
std
xorl
push
mov
sub
xchg
mov
mov
and
cwtl
sub
dec
adc
out
xchg
cmp
enter
loope
pushf
and
mov
add
test
cmpl
xor
ret
ffree
mov
outsb
in
and
outsl
adc
xor
inc
push
xchg
in
xchg
and
mov
push
mov
rorb
in
pop
test
jns
iret
xor
and
jb
aaa
pop
xor
sub
inc
jmp
lea
hlt
and
bound
inc
pop
idivb
cwtl
addr16
mov
mov
inc
cmc
bound
add
dec
dec
jecxz
rorl
icebp
fiadds
jo
int
cmc
mov
rolb
mov
shlb
mov
xor
in
pusha
leave
jg
test
gs
jo
pmaddwd
aaa
or
cmpsl
divl
mov
sbb
ja
jmp
std
int3
pushf
inc
mov
rcl
push
jle
fs
sub
mov
xor
mov
pop
out
push
sahf
fsubs
in
push
shll
dec
idivl
fistps
xchg
addl
pop
mov
dec
push
je
bound
add
mulb
mov
adc
xorl
pop
mov
xor
xchg
psadbw
fists
jbe
and
xchg
hlt
pop
paddusw
and
mov
mov
adc
pop
into
adc
and
or
cmp
icebp
ret
scas
adc
bswap
fimuls
adc
pop
sbb
jp
xor
into
cmp
clc
mov
and
cld
pop
xchg
sbb
adc
sti
faddl
out
nop
push
adc
sbb
leave
inc
pop
test
stos
lahf
xcrypt-ofb
cmpsl
push
jl
sub
sahf
xchg
lds
stos
dec
in
subl
ret
xchg
push
inc
jge
into
popa
pop
xchg
aaa
nop
lret
cltd
pop
xchg
das
sub
lret
xchg
ret
mov
mov
dec
lods
sahf
xor
sbb
mulb
dec
xor
cmp
jmp
pusha
lret
add
mov
lods
js
jmp
ficoml
fstpt
xor
movsl
xchg
pop
mov
mov
out
pop
push
xchg
fs
pop
fdivr
pop
cmp
xor
lds
lock
aas
sbb
test
mov
inc
dec
mov
xchg
adc
pop
mov
inc
cltd
dec
add
dec
daa
sbb
mov
xchg
lods
test
inc
mov
lcall
out
add
gs
dec
xchg
add
cwtl
xor
arpl
mov
jmp
sub
push
loopne
and
and
addl
or
sbb
fcmovbe
mov
insl
movsl
in
loop
mov
and
mov
cmp
outsl
sbb
arpl
out
out
mov
jmp
scas
lahf
xor
cmp
out
jp
cmp
sahf
arpl
dec
mov
push
cmp
and
iret
enter
bswap
arpl
mov
add
mulb
adc
outsl
in
lods
pop
cmp
scas
cmp
mov
outsl
fsubr
fsubr
add
jb
inc
andl
jle
sarb
push
int3
cli
fildll
inc
incb
icebp
or
cli
push
or
dec
enter
xchg
jbe,pn
push
gs
push
sbb
lahf
jl
mov
shrl
xchg
repnz
pop
enter
aas
rclb
and
fcompl
or
orb
cmpsl
cltd
cmc
mov
andl
sub
addr16
jmp
jbe
xor
pop
mov
pop
loope
dec
lahf
data16
call
adc
iret
test
mov
mov
aaa
mov
fsubrs
es
stos
cmp
mov
pop
dec
gs
xor
insb
loope
pop
test
add
frstor
adc
fnstcw
sub
daa
xchg
pusha
addr16
add
cltd
ret
and
cwtl
sub
adc
sti
les
stos
stc
push
int3
pop
mov
mov
jns
fcmovne
dec
mov
push
mov
lret
daa
test
lea
mov
in
out
inc
xor
cltd
cmc
push
fsubp
mov
jb
pop
out
ljmp
add
mov
ret
movb
pop
cmp
sbb
inc
inc
icebp
mov
scas
call
pushf
pop
icebp
jbe
orb
sti
out
xor
das
nop
push
add
cmc
hlt
nop
xchg
loopne
outsb
gs
cltd
mov
sarl
add
imul
movsl
xor
jnp
xor
lods
enter
dec
cmp
aaa
pop
lods
mov
mov
in
xor
pop
or
cmp
enter
mov
sub
jae
mov
enter
mov
lret
add
movsl
xchg
enter
popf
stc
sbb
push
jle
jbe
das
add
or
pop
mov
jle
ret
add
xor
ret
adc
fmull
xchg
dec
aam
mov
cli
out
inc
sti
pusha
mov
int3
push
nop
xchg
lods
ss
cmc
mov
aaa
bound
mov
push
loope
movsb
mov
negl
adc
xor
out
ds
repz
imul
mov
add
dec
dec
inc
xchg
xor
adc
jle
lret
push
cmp
test
mov
jle
aaa
push
pop
push
mov
ss
loop
rorb
lods
popa
stc
inc
xchg
xchg
out
insb
rcr
sbb
pop
push
dec
sarl
inc
daa
add
push
mov
out
into
in
xchg
outsl
hlt
leave
out
adc
dec
aas
dec
test
inc
jl
jge
dec
rcr
gs
pop
sbb
adc
movsb
in
sub
and
jbe
fcompl
std
push
adc
push
push
jo
xchg
sub
xchg
shrb
addps
pushf
lea
inc
mov
push
jns
cmp
cmp
dec
imul
cmp
inc
or
daa
pop
iret
imul
int
repz
cmp
leave
pop
sbb
xlat
dec
shll
cmp
lock
rol
sbb
add
add
iret
or
ljmp
test
test
sub
sbb
call
jnp
scas
ss
loop
daa
js
cmp
jp
test
mov
mov
imul
mov
and
adc
push
mov
xor
sub
lods
sbb
jnp
inc
mov
or
cmp
in
fcmove
cmpsl
cmpsb
data16
jg
xchg
idiv
imul
mov
sbb
fsubr
aad
mov
inc
mov
addr16
and
xchg
subl
ret
jnp
mov
in
jmp
aad
repz
inc
sub
loop
pop
not
shl
repz
sbb
xchg
sahf
pop
lods
shlb
mov
subl
inc
pop
xor
addl
mov
inc
fwait
mov
out
mov
mov
and
icebp
loopne
cmp
shl
inc
jno
dec
icebp
mov
daa
popa
ljmp
lcall
add
ret
cwtl
cmc
aas
mov
bound
cld
dec
out
shlb
pop
mov
test
loop
jno
dec
push
pop
pop
inc
fldenv
and
mov
dec
cmpsb
push
push
cld
xor
jge
into
mov
addr16
jb
jle
mov
pop
cmpsb
mov
jle
xor
inc
insl
jle
jne
push
in
adc
bsf
mov
nop
mov
xor
jnp
ffreep
mov
mov
push
fiadds
ss
out
out
inc
aas
lods
movsl
iret
aas
das
imul
add
stos
aas
mov
stc
mov
aam
add
or
sub
xchg
add
push
xchg
push
jbe
inc
lods
mov
cld
jmp
pop
adc
lods
mov
inc
fnstcw
in
cmp
pop
mov
mov
jmp
stc
add
fs
pop
xchg
mov
stc
fs
cmpb
out
sub
mov
das
sahf
inc
inc
inc
inc
push
adc
dec
push
dec
test
call
ret
mov
sbb
das
sub
inc
add
pop
fwait
lods
dec
imull
dec
pop
insl
jge
pop
dec
dec
fcmovne
stc
lret
mov
mov
xchg
adcb
in
add
out
fmull
xchg
sub
and
add
lret
mov
and
pop
push
lods
mov
xor
sub
dec
pop
ljmp
dec
sbb
bswap
jbe
mov
mov
add
ljmp
je
lcall
adc
dec
xchg
sub
mov
scas
es
scas
push
std
cmc
std
out
jle
adc
notl
pop
xchg
inc
cmp
das
add
rcrl
iret
adc
ret
or
xchg
leave
fstp
jl
orl
lds
or
pop
sbb
push
xchg
pop
push
pop
pop
jns
cmp
lret
jmp
dec
jns
aas
inc
in
sbb
lahf
mov
rcr
xchg
adc
orb
ss
adc
and
les
aad
jne
inc
lret
mov
jmp
mov
lret
adcb
cwtl
inc
xchg
int
faddl
stos
call
push
mov
or
pop
dec
fiadds
cmc
mov
xor
in
movsb
push
mov
repnz
jp
jge
adc
pusha
std
andb
arpl
ficoms
and
stc
sahf
xor
cmp
cltd
and
ret
shlb
hlt
int
pop
icebp
or
shlb
sbb
nop
xor
std
bound
cli
inc
cmp
rcr
hlt
mov
add
mov
push
in
test
xlat
mov
lret
rcrb
xor
xor
dec
arpl
inc
cmpb
xchg
mov
jmp
mov
push
std
aam
lahf
and
lret
fimuls
sub
or
xchg
and
or
shll
insb
mov
push
outsb
int3
sub
or
mov
adc
or
in
sub
mov
movsl
shlb
rolb
stos
ja
pop
or
sub
adcl
sahf
adc
or
adc
fsubp
push
pushf
fbstp
clc
mov
movsl
lcall
aam
in
je
das
out
stos
mov
sub
pop
ljmp
out
jge
inc
lahf
inc
arpl
pop
stos
push
lcall
adc
jg
mov
mov
aas
jle
mov
neg
xchg
inc
jle
pop
jp
fcoms
stc
add
push
mov
push
jb
js
hlt
out
call
jg
popa
lods
cmp
pop
cmp
clc
adc
lods
dec
lcall
psubd
bnd
aad
dec
fucomi
sarb
ds
jge
cmp
nop
dec
cld
cmc
bound
outsb
and
pop
fwait
cltd
mov
ja
je
xor
push
lea
add
subl
sbb
xchg
xchg
test
cmp
mov
ja
push
repz
loopne
xchg
jmp
mov
nop
aaa
jge
clc
sbb
cmp
or
jge
or
stc
fiaddl
ds
outsb
sub
call
sbb
push
push
out
push
aas
ds
jae
leave
inc
jb
sub
mov
and
inc
minps
jle
bound
jb
daa
popa
std
loop
xchg
cwtl
push
pushf
aas
xor
fstl
xchg
or
dec
cmc
imul
jnp
mov
jle
test
push
shll
mov
ret
enter
xor
ds
xor
adc
sub
rclb
icebp
in
jle
push
push
cmp
shrb
iret
insl
xor
pop
bound
cmp
or
xor
sahf
loop
pop
cmp
scas
cmp
xchg
mov
sub
xor
jne
cltd
push
pop
jmp
pop
pop
sub
mov
in
push
ficomps
dec
fs
out
pusha
pop
sub
shl
rcrb
sbb
cs
push
das
fidivrs
jmp
add
inc
ficomps
sti
and
fnstenv
mov
repz
jns
pop
mov
pop
push
clc
out
mov
popf
inc
pushf
mov
ss
mov
cmpsb
ficompl
sub
cmp
push
jae
or
adc
or
push
add
pop
int
subl
addr16
mov
push
nop
std
lea
mov
fldl
leave
mov
out
sub
xor
mov
push
inc
adc
in
movsb
mov
notl
xor
sbbl
cld
pop
xchg
mov
mov
stos
adc
cmp
out
gs
lea
pop
addr16
mov
or
xor
xchg
xchg
mov
push
adc
jo
bound
cmp
xchg
xchg
aam
imul
jge
shlb
sbb
sub
xchg
repnz
ss
sub
xchg
in
in
je
adc
mov
push
and
lret
into
mov
imul
sbb
sbb
xchg
mov
leave
fdivs
mov
cmc
cmp
add
jecxz
ds
adc
fwait
pop
nop
rcrl
fists
clc
sbb
ljmp
loope
mov
dec
dec
test
in
mov
xchg
repnz
jno
pop
xchg
cli
add
iret
xlat
daa
ss
inc
add
mov
pushf
shlb
add
es
popa
pop
push
aas
mov
lea
stos
xor
cmp
daa
dec
inc
jb
loop
mov
hlt
lret
shlb
cmpsl
test
push
cmpsb
pop
aas
pop
mov
xor
shrl
loop
xor
add
into
cmp
jb
movb
sub
cmc
xor
mov
std
sub
dec
or
mov
andl
aam
mov
ss
lods
jp
in
mov
jns
jl
lods
out
push
sub
outsl
jns
and
mov
icebp
mov
xor
fwait
mov
mov
insl
ret
add
jne
or
in
dec
mov
dec
cmp
lods
sahf
ljmp
or
jp
out
inc
inc
leave
pop
subl
cltd
enter
test
jb
sti
push
push
cmpsl
insb
push
mov
inc
arpl
xchg
or
ja
loop
pop
stos
imul
push
push
xorl
jno
push
jg
sbb
push
cwtl
push
in
in
jno
and
je
jge
arpl
add
mov
es
js
mov
adc
xor
push
mov
mov
mov
and
dec
and
fstl
cmp
leave
sti
adcb
push
arpl
daa
nop
in
roll
lods
fcoml
or
mov
sbb
mov
clc
bound
bound
jne
mov
sahf
sbb
xchg
pop
into
movsl
sub
mov
lds
add
jmp
pop
data16
jbe
ficoml
xchg
xchg
inc
push
pop
pop
and
sbb
fisttpl
adc
and
sub
xor
cmpsb
sub
mov
jge
nop
cmp
je
fwait
ss
mov
js
loopne
idiv
jmp
adc
std
testl
mov
iret
movsl
xchg
loop
fcomps
nop
rorb
icebp
neg
lret
cmpsb
test
ja
aaa
adc
jae
outsb
mov
cmp
push
pop
roll
nop
push
inc
shl
sub
test
mov
pop
xchg
in
movsl
lret
and
shlb
inc
idiv
sahf
mov
jb
mov
sti
icebp
cmp
fwait
icebp
sbb
sub
or
aad
inc
pop
jbe
sub
popf
inc
cmp
adc
ds
jecxz
in
adc
insl
jns
testl
mov
dec
lea
push
adc
inc
pop
mov
sub
fsubrl
inc
adc
inc
xorb
outsb
repnz
push
out
pop
sarl
decb
icebp
lds
adc
shlb
jbe
sti
icebp
subb
add
cmp
dec
dec
call
xchg
mov
mov
rcll
fisubrl
push
dec
mov
add
jecxz
xor
adc
sbb
outsb
dec
adc
fidivrl
in
out
jmp
movsb
fisubrl
lods
mov
mov
jno
jne
repnz
cmp
popa
jnp
pushf
bound
xchg
sbbl
lret
mov
sub
or
pushf
ja
test
rorb
cmp
sbb
das
mov
pop
pop
subb
js
mov
bound
ret
fsubrl
stos
inc
es
dec
jb
lcall
xor
push
inc
jo
les
popf
xchg
dec
xor
mov
lret
or
dec
jo
and
fisttps
or
mov
add
sbb
mov
lret
jno
in
xor
dec
lods
rclb
icebp
xchg
push
daa
lods
out
pop
cmc
lret
js
shll
cmp
mov
andb
sub
pop
jp
sbb
nop
mov
xchg
mov
loope
dec
das
lret
int3
jge
out
pushf
cmp
add
loope
jg
cmp
imul
push
jmp
aaa
sbb
push
mov
adc
rol
sbb
jg
xor
in
iret
call
add
je
icebp
cld
lea
rcrl
dec
repz
in
xchg
mov
pop
in
cs
adcl
lea
call
in
jnp
push
leave
mov
dec
mov
jmp
push
bound
arpl
xor
pop
enter
mov
sub
cmovbe
in
xor
mov
in
or
out
xlat
lock
mov
and
repnz
loop
imul
dec
mov
push
lds
popf
mov
mov
lods
mov
scas
push
insl
fsubs
xchg
mov
loope
cmp
idivl
repnz
jb
loop
dec
and
jo
pop
lock
scas
mov
sub
push
adc
dec
sbb
or
xchg
sbb
mov
sbb
lods
pop
fmul
jmp
xchg
cmp
and
inc
mov
std
push
lcall
call
inc
mov
lcall
jo
xlat
mov
push
jmp
jb
sbb
xchg
mov
xor
daa
xchg
lds
ljmpw
stc
pop
mov
decb
fisubs
push
pop
mov
jnp
jl
inc
mov
ljmp
dec
andb
pop
sbbl
int
jge
push
pop
dec
jge
or
xchg
out
push
and
movsl
shrb
cmp
addl
jne
clc
bound
pop
std
mov
mov
fnstsw
pop
ja
jno
outsl
ja
sbb
negl
iret
mov
dec
mov
or
sbb
ficoms
lock
adcb
pop
movsl
mov
sbb
data16
xchg
mov
js
sub
mov
aaa
adc
notb
ss
jp
push
mov
lret
test
popa
add
pop
inc
xor
mov
jns
jb
sbb
mov
fnstenv
dec
pop
ljmp
es
fadd
lds
jl
outsb
sub
lods
aam
xchg
std
clc
pop
xchg
in
cmpsb
sbb
mov
lret
mov
xor
hlt
movzbl
rorl
pop
push
sbb
repnz
je
jno
inc
and
aas
mov
push
adc
jns
in
jle
xchg
out
lret
int3
adc
loop
shl
mov
cmp
lret
fs
add
decb
inc
sbb
sti
iret
arpl
and
push
test
out
pop
sub
sbb
add
and
xor
cmp
addr16
in
out
movsb
pop
cmp
adc
in
clc
push
out
add
and
sbb
out
xchg
clc
rol
or
lahf
sub
decb
test
sub
xchg
or
mov
cli
lock
sbb
loope
scas
mov
aam
add
scas
fwait
int3
and
jmp
repnz
fstpt
jmp
loope
dec
js
sahf
cwtl
dec
mov
xchg
xlat
inc
lahf
mov
rolb
mov
mov
sub
mov
mov
addr16
scas
stos
and
sarl
loope
jbe
insl
cwtl
stc
xchg
or
sti
dec
mov
mov
sbb
jb
icebp
stos
out
dec
int3
xchg
decb
iret
xchg
rep
mov
cs
outsl
hlt
sbb
xlat
fldcw
and
popa
cmpsb
mov
ret
mov
dec
lcall
push
or
bound
sub
xor
fwait
jbe
aam
push
adc
push
sub
cmp
xlat
aas
xchg
dec
push
aaa
popa
lret
pop
or
roll
fists
cmpsb
test
mov
push
inc
xor
sti
movsb
pop
in
inc
aad
mov
xor
fisubrs
pop
in
mov
pusha
rorl
mov
test
pop
outsl
test
pop
lea
in
cwtl
sbb
lahf
mov
mov
push
adc
aam
xor
push
aas
daa
xor
xor
xchg
adcb
jmp
std
lcall
movsl
adc
push
jbe
dec
sbb
push
pop
and
lods
jns
adc
cli
les
into
mov
scas
aam
test
dec
pop
dec
mov
push
lock
mov
shll
negb
ljmp
sub
lods
cmpsl
xchg
mov
cmpsb
jg
push
repnz
mov
dec
movsb
mov
cmp
mov
cmp
int
test
push
cmp
stc
mov
or
cs
xchg
pop
fstpt
or
cwtl
movsl
inc
mov
andb
xor
jge
adc
mov
xor
inc
or
xor
mov
or
in
dec
jbe
add
imul
cld
mov
inc
jo
and
mov
out
insb
lods
ds
pop
scas
jle
xlat
xor
dec
fcmovb
push
loope
or
jmp
ss
xchg
pop
jge
adc
cmp
jnp
sub
in
fdivrl
mov
adc
push
rorl
and
xor
sub
jecxz
pop
or
adc
or
rcrl
outsl
lock
clc
dec
jp
mov
rolb
das
adc
icebp
and
push
in
adc
push
adc
fistpll
mov
aad
aad
xchg
mov
lahf
jbe
inc
pop
loope
daa
in
xchg
lret
sbb
adc
cmp
hlt
mov
in
inc
imul
arpl
ja
dec
xchg
and
jnp
rcrl
pop
pushf
jle
dec
test
sbbb
fcom
sbb
cs
in
jg
aaa
pop
cli
pop
loop
cmpb
pop
sbb
inc
pop
xchg
dec
loopne
jle
out
and
push
out
adc
sahf
outsb
push
mov
xchg
adc
mov
mov
out
sub
push
fcmovnu
pushf
daa
int
fmul
divb
int
sub
cmp
dec
sub
push
xchg
pushf
lret
aas
test
and
sub
nop
mov
pop
push
adc
aam
out
jo
inc
outsl
js
mov
mov
dec
call
out
vmovaps
sbbl
lahf
mov
push
and
xor
xchg
cmp
jo
je
idiv
mov
stos
loope
sbb
xor
into
jns
mov
dec
fisubl
mov
into
xchg
push
xchg
push
adc
jno
lods
das
mov
out
pushf
cmc
xor
stos
mov
inc
push
push
and
push
push
mov
lds
hlt
testl
xor
in
or
pop
xlat
fisttps
sbb
into
mov
mov
in
sub
mov
mov
add
clc
mov
pop
test
fnstcw
clc
mul
clc
mov
jle
push
sbb
fucomp
xchg
cmp
xor
or
or
add
jns
dec
lret
xor
or
lahf
or
mov
add
xorb
fldl
loop
mov
inc
mov
inc
inc
leave
shll
jl
mov
lock
bound
stos
dec
adc
pop
jb
enter
add
cwtl
mov
adc
adc
push
jns
test
push
daa
inc
call
cmpb
iret
inc
jbe
sbb
fdivrl
std
cmp
mov
add
mov
jmp
xlat
lret
inc
xchg
repnz
lea
fs
fcoml
adc
and
pushl
xlat
cmp
xchg
les
mov
mov
movsb
lcall
push
icebp
repz
movsl
inc
rolb
xchg
pop
mov
inc
adc
pop
je
aad
ja
jbe
sarl
fisubl
jb
out
sbb
xchg
cmpsb
mov
cmp
xchg
pop
ljmp
and
out
mov
loop
icebp
lods
das
sbb
xchg
imul
adc
sbb
gs
add
fcmove
jns
rolb
pop
arpl
outsl
push
repnz
xchg
addr16
and
out
mov
mov
mov
fiaddl
aas
pop
mov
mov
dec
cmp
into
imul
mov
clc
or
and
lcall
pushf
adc
xchg
mov
in
mov
mov
add
jb
dec
mov
mov
pusha
mov
inc
add
lods
jp
arpl
sub
cmc
sbb
loope
insb
fstpt
test
sub
rcrl
arpl
mov
repz
xor
cli
and
pusha
lds
out
xchg
inc
and
jnp
push
lock
jmp
add
or
stos
decl
mov
adc
hlt
sub
ja
aam
and
ljmp
lods
movsl
fsts
xor
in
cli
pop
test
and
adc
xchg
scas
and
sbb
rcrl
and
js
jp
out
adc
sbb
repnz
sbb
inc
adc
popf
push
das
push
repnz
movsl
adc
mov
jp
cs
sub
daa
pop
out
addl
push
adc
dec
dec
loopne
jno
sbb
lret
inc
or
add
popf
mov
inc
movsb
push
mov
sbb
pop
pop
sub
and
sub
ljmp
jbe
test
xor
aad
mov
dec
dec
lcall
aaa
lea
in
cmp
pop
es
scas
add
sub
cmp
outsb
loopne
sub
aaa
out
insl
es
nop
stos
cs
std
adc
popa
fdivl
lods
add
jle
rorl
ss
mov
cmpsb
jg
icebp
and
pop
mov
pushf
mov
imul
xor
sub
push
adc
jnp
aas
and
mov
pop
repnz
mov
shlb
push
cmp
dec
loop
fs
xchg
add
lods
test
xchg
sahf
clc
add
and
sbbb
cmpsb
push
inc
pop
insl
pop
sub
adc
push
xchg
pusha
lock
sbb
lret
mov
in
dec
push
jmp
hlt
bound
imul
loop
sbb
fldl
popa
mov
imul
je
sbbl
mov
xchg
xlat
and
sti
sbb
lock
push
mov
test
cmpsl
nop
dec
adcl
sbb
addl
mov
inc
mov
sub
pop
cmp
femms
rol
mov
jb
and
fcom
in
jle
insb
sbb
out
out
std
xchg
mov
sbb
in
pop
dec
popl
repnz
pop
pop
hlt
inc
pushf
gs
lods
sub
mov
mov
push
fisttpl
mov
lahf
mov
lea
call
rcrl
mov
icebp
orb
push
js
xchg
adc
inc
enter
cmp
or
add
jl
cmpsl
or
dec
pop
xchg
daa
mov
cmpsl
cmc
xchg
cmp
xchg
in
jle
push
lahf
add
mov
push
jecxz
cld
lret
adc
or
inc
rolb
out
mov
popf
mov
jbe
push
push
arpl
mov
cwtl
mov
sbb
adc
lock
sub
in
xor
push
mov
iret
scas
jg
sub
or
mov
jns
bound
pop
cmp
in
jge
mov
push
iret
add
subl
lret
mov
repz
std
sub
and
shrl
fnsave
les
jecxz
mov
add
ja
mov
cmp
lock
and
in
or
aas
mov
dec
lret
pop
sub
cmp
sbb
mov
fs
xor
imulb
push
leave
and
out
cmp
rep
rcrl
push
mov
cs
jo
dec
adc
scas
sbb
mov
sub
std
push
pop
loopne
mov
loope
fsub
lret
pop
test
mov
xor
fcmovu
cmpl
stos
push
inc
and
std
add
enter
jl
iret
popa
insl
xchg
inc
pop
xlat
rolb
dec
lea
stos
cmp
dec
or
jge
in
out
gs
fbld
mov
mov
mov
pop
mov
cmc
xchg
into
daa
xor
cmc
insb
cltd
in
jns
mov
inc
and
ja
loope
lret
js
jno
mov
mov
test
mov
testb
ds
pop
pop
push
sarl
in
icebp
adc
push
pop
jg
cltd
or
popf
mov
aas
xor
pxor
cmp
std
jmp
push
dec
jb
repz
rol
cli
ret
inc
sbb
mov
mov
cmpsl
orb
mov
mov
pop
sti
iret
leave
mov
rcl
bound
mov
xor
mov
mov
pop
mov
out
inc
add
scas
sub
sbb
nop
mov
ljmp
push
out
mov
int3
push
das
js
mov
rorb
jae
pop
es
fwait
pop
mov
leave
test
aas
jno
and
and
cli
adc
test
pop
mov
fldcw
push
jl
cli
push
adc
and
rcl
in
add
xor
xchg
or
nop
add
add
jmp
inc
and
das
test
fs
pop
int3
push
fstpt
or
adc
pop
sub
jnp
into
fucom
or
sbb
or
jecxz
jp
dec
push
les
test
je
fisttpll
xchg
ds
pop
lret
jle
xchg
sarl
sbb
bound
cmc
cli
call
xchg
adc
mov
push
fcmovnb
les
push
push
push
mov
xor
iret
into
and
mov
mov
ret
js
sub
or
mov
mov
xlat
sbb
cwtl
jecxz
scas
sub
ret
movsb
mov
or
in
and
mov
mov
pop
pop
lods
xchg
fld
dec
rcll
cwtl
das
ja
adc
aad
test
push
in
cmpsb
jae
ficompl
mov
xchg
lock
jb
lods
jle
adc
scas
lcall
scas
mov
imul
test
mov
xchg
sti
outsb
lea
or
push
cmp
sbb
jno
add
jno
jno
or
jbe
sbb
in
dec
pop
adc
cmp
xchg
mov
lods
adc
inc
es
rcl
mov
mov
aad
inc
lcall
adc
add
mov
pop
sbb
inc
jmp
lods
mov
test
testb
aad
ljmp
or
movsb
jae
fwait
addr16
lods
pop
inc
fldenv
mov
adc
call
imul
sbb
das
icebp
out
daa
es
std
gs
mov
or
lds
sub
jb
xchg
hlt
jmp
scas
dec
sahf
aas
mov
gs
nop
lods
movsl
js
aas
mulb
mov
aaa
in
ficoml
mov
mov
insl
pop
bswap
dec
push
out
add
pop
xor
cmp
cltd
aaa
shll
xchg
fsubr
bound
aad
jne
cmp
jge
scas
test
das
mov
cltd
sti
dec
clc
iret
dec
jl
in
inc
mov
fisubrs
sarl
dec
rolb
fs
test
adc
mov
mov
fs
negb
mov
sub
pop
jp
adc
ss
mov
dec
cwtl
testb
mov
stos
jp
fisubs
adc
mov
push
xchg
push
jl
fcomi
xchg
movsl
sahf
inc
shrl
sahf
inc
loop
movsb
push
push
xor
into
rol
bound
popa
repz
imul
mov
mov
xchg
sbb
mov
out
pushf
xchg
mov
aad
pushl
sahf
push
ljmp
mov
xlat
test
mov
dec
stos
repz
mov
pop
rcrl
push
inc
cmp
add
mov
insb
test
lds
enter
pop
enter
cmp
ljmp
leave
fs
icebp
inc
inc
pop
out
enter
loope
or
pop
enter
aaa
push
es
fcomp
push
xchg
jo
inc
hlt
sbb
fwait
enter
mov
mov
or
xor
mov
aad
mov
repnz
inc
push
pushf
mov
hlt
jbe
filds
pop
mov
sarb
push
rorb
outsl
aaa
addl
fwait
rcl
or
sub
adcb
lret
mov
popa
add
add
sbb
loopne
add
fmuls
pusha
cmp
push
pop
pushf
add
mov
mov
dec
jmp
cmp
lret
sbb
adc
push
cmp
ja
mov
loop
jae
jae
cmp
or
xchg
arpl
std
rcrb
aam
dec
xor
pushf
add
cmp
xor
fisubrl
mov
cmp
pop
cli
decb
jmp
adc
inc
or
xor
xchg
jg
mov
cmp
xchg
arpl
pop
popa
fstl
xchg
mov
push
clc
xor
adc
inc
js
test
sarl
jp
mov
popa
lret
call
jno
lds
mov
iret
js
cmp
sbb
add
popa
rcl
rcr
mov
pop
push
cmc
jne
add
jno
mov
jecxz
dec
jg
mov
or
pushf
subb
cmc
xor
mov
cmp
fmuls
cmp
mov
pop
pop
mov
inc
aas
sahf
outsl
cmp
jle
clc
scas
push
rorl
mov
add
push
nop
imul
dec
mov
push
rorb
sub
push
test
dec
or
hlt
xor
aas
adcl
aas
jae
and
and
ds
jnp
and
test
mov
leave
jge
ja
or
ret
adc
and
add
aam
cmp
push
xlat
sbb
sub
fnstcw
test
notb
arpl
mov
es
nop
xlat
dec
xchg
mov
cltd
sti
in
add
mov
lock
pushf
cmp
lds
push
push
faddl
stos
cwtl
pop
jp
lahf
push
mov
shlb
idivb
add
les
dec
adc
aas
cmp
fiaddl
nop
mov
mov
jge
test
lahf
sti
loop
in
pop
inc
mov
stos
pushf
cltd
mov
in
arpl
adc
xor
jb
xchg
mov
out
pop
and
inc
xor
push
and
out
ja
cltd
repnz
xchg
in
push
dec
pushf
dec
fiadds
pop
filds
sbb
out
js
inc
in
popf
xlat
dec
cmpl
rcr
sub
adc
int
call
mov
sbb
repnz
xor
jge
xchg
sub
test
or
jge
xchg
jp
pop
xor
int
aam
insb
in
sub
test
lods
out
movsb
mov
mov
adc
cmp
and
lret
out
scas
loope
movsb
mov
lret
inc
inc
ljmp
adc
das
jae
shlb
jns
and
gs
cmc
enter
mov
inc
fcmovu
cmpsl
bound
push
mov
es
clc
and
mov
adc
inc
xchg
sbb
xchg
jl
lret
dec
xchg
cmp
push
push
dec
inc
sbb
xchg
in
loope
pop
rcll
mov
stos
jb
insl
das
out
mov
ficompl
add
outsl
mov
rep
mov
jne
inc
xchg
push
das
jp
lea
add
xchg
jbe
scas
and
fwait
sub
sbb
test
mov
jl
or
mov
out
xor
adc
movsb
iret
push
cld
add
test
notl
xlat
inc
pop
repnz
cltd
cmp
enter
test
mov
leave
lret
push
xor
out
shrd
test
and
jno
mov
sub
sahf
jle
dec
pop
shll
ja
dec
je
fildl
lock
xchg
jns
cmpb
pusha
rorl
pop
stc
pop
xchg
fwait
aaa
inc
mov
mov
cwtl
sub
mov
or
das
lds
mov
nop
jne
fdivl
cmp
mov
gs
loope
pop
push
addr16
dec
mov
jns
fwait
and
nop
cmpsb
and
pop
pusha
test
mov
push
xchg
mov
enter
insl
je
out
setl
dec
pop
js
incl
ret
lret
push
sti
mov
push
mov
ljmp
in
pushl
sub
jb
push
dec
out
lods
out
aam
mov
pop
aad
and
stos
enter
loop
sub
sbb
outsl
mov
inc
ja
jp
jbe
mov
test
add
out
fdivrs
por
stos
scas
lods
jo
movsl
mov
hlt
divl
std
adc
rcrb
std
std
mov
lods
push
js
push
mov
jg
test
cmp
mov
xchg
negb
cmpsb
or
pop
loope
sbb
loope
push
aas
jae
getsec
sub
xchg
push
loope
jl
jge
pop
cmpsl
push
pop
cltd
push
loope
stos
enter
stos
gs
cmpl
shrb
sub
icebp
in
jmp
jb
ja
mov
mov
and
cmp
sbbb
loop
pushf
and
popf
sbb
jns
ret
imul
mov
lods
popl
lock
mov
xchg
in
xchg
push
xor
pop
pushf
leave
movsb
push
lods
in
xchg
inc
mov
cmc
ja
add
or
data16
icebp
xchg
repnz
hlt
mov
inc
insl
jnp
push
negb
call
mov
pop
add
push
pop
dec
dec
loop
pop
dec
mov
stos
sub
clc
movsl
lea
out
sbb
xchg
inc
inc
jnp
inc
nop
andl
std
je
mov
cli
or
outsl
mov
sub
popa
sub
push
insb
or
cmpsl
mov
out
notl
push
mov
fdivrp
bnd
jno
ret
push
pop
rolb
or
movb
aam
mov
arpl
ljmp
fwait
dec
cmpl
or
adc
and
mov
or
shrl
sub
xlat
repz
lds
xchg
ret
dec
mov
push
incb
pop
insl
mov
pop
and
or
inc
fcomps
mov
sub
std
cld
fwait
test
fwait
scas
aaa
in
lods
or
pop
stc
fs
adc
lret
daa
imul
out
outsl
out
outsl
cmpsl
inc
ds
stos
in
lcall
repz
xorb
pop
aam
je
lock
inc
call
dec
rcrb
and
pusha
icebp
int
lods
mov
aam
push
fistl
das
sbb
ret
xchg
fdivr
push
add
sbb
sub
sbb
mov
mov
cmp
iret
pop
mov
mov
dec
inc
xchg
ljmp
mov
add
leave
fwait
out
or
mov
pop
popf
cwtl
in
and
ror
insb
cmp
out
iret
pop
sbb
and
lds
loop
daa
loop
sbb
nop
mov
das
pop
adc
or
or
aas
leave
in
mov
pop
out
cmp
neg
mov
push
pop
jns
shl
push
insb
stos
dec
pop
dec
push
mov
sub
lret
or
inc
jne
iret
popf
sbb
in
fiadds
add
cmc
cmp
push
inc
sbbb
jb,pn
inc
test
aad
jmp
leave
jno
push
push
movsl
stos
push
pop
rcpps
js
adc
lea
out
pslld
notb
out
mov
mov
sbb
in
dec
xor
ja
pushf
add
push
insl
push
movsl
ja
pop
pop
jns
xchg
clc
jmp
sbb
push
int3
scas
lahf
dec
pop
pop
nop
xor
fisttpll
stc
das
mov
les
je
sub
pop
test
test
pop
inc
jnp
mov
mov
add
in
xor
jg
sbb
jmp
iret
jbe
mov
push
sbb
xor
sub
jb
lds
jp
sarl
jge
mov
ret
lcall
sub
jnp
push
mov
mov
push
inc
rcrb
sbbb
xor
adc
jb
jmp
mov
in
mov
pop
jge
aam
xchg
fdivs
xchg
fcomps
pop
pop
cmp
push
bound
push
arpl
cli
push
pop
clc
inc
test
lret
sub
push
xor
scas
xchg
and
clc
sub
sub
inc
insl
xor
mov
jmp
push
push
sbb
bound
mov
mov
mov
mov
jle
mov
rorb
in
call
insb
jmp
fcomp
dec
cmp
pusha
sahf
mov
popf
cmova
shl
jg
push
hlt
push
out
negb
je
stc
aam
add
lcall
jnp
jno
pop
xchg
inc
int
popf
xor
mov
movsl
cmp
nop
xchg
jle
xchg
or
vpmulhuw
pop
aaa
adc
arpl
jbe
cmp
lods
mov
cmpsl
xor
popa
scas
xor
movsl
push
lret
rcrl
push
xor
mov
push
pop
jne
mov
fsubrs
mov
pop
out
inc
std
andl
sarl
cmp
and
xor
mov
adc
adc
out
sahf
pop
in
lcall
jnp
add
or
mov
sub
inc
int3
mov
insl
xchg
mov
inc
faddl
cwtl
stos
mov
mov
hlt
sbb
mov
sbb
jmp
stc
xchg
es
cmpsb
pop
jecxz
xchg
stc
cmp
jp
decb
or
push
pop
fldl
or
les
adc
and
jo
jmp
add
xchg
fdiv
sti
add
fbstp
pop
bound
mov
fadds
inc
jl
sbbb
loope
sti
das
pop
dec
push
lods
movsb
sub
jb
or
mov
icebp
mov
mov
gs
mov
pop
jae
sub
push
mov
xchg
bound
xor
xchg
pop
adc
cltd
and
pop
lret
sti
movsl
rorl
sub
mov
inc
fstpt
rcrl
bnd
lds
push
outsl
adc
shll
add
loopne
cmpsl
adc
out
and
lret
std
push
std
lahf
std
jo
bsf
lods
mov
lcall
clc
stos
jmp
dec
jecxz
arpl
jns
outsl
mov
and
jecxz
in
jp
pop
adc
sub
push
cmp
fs
nop
push
test
dec
sbb
ds
push
inc
jmp
push
jp
icebp
adc
sub
jns
pop
sahf
push
mov
fdivrs
test
mov
pop
cmp
enter
imul
dec
push
adc
sahf
xchg
xor
push
shrl
mov
cmp
inc
cmp
xor
mov
dec
pop
leave
lods
xor
push
push
fadd
push
inc
xor
jne
add
mov
mov
sub
xlat
sar
lret
jl
pop
ds
andb
sbbb
gs
jg
sti
pop
lds
shlb
mov
mov
mov
or
or
pushf
fcmovbe
stc
addl
loop
shll
mov
arpl
jmp
mov
scas
movsl
jl
lret
jg
dec
mov
jmp
cmp
sti
cmc
cmpsl
mov
fwait
xor
cld
imul
dec
xchg
outsl
lock
insl
iret
cmpsl
push
arpl
sub
xor
les
sahf
mov
dec
ror
stc
inc
iret
out
lret
jno
aam
das
cmp
push
lds
mov
es
ljmp
cmp
call
insb
stc
pop
test
adc
out
dec
jne
cltd
xorl
mov
lcall
push
pop
xchg
in
test
xchg
lds
shr
sub
bound
addr16
shlb
inc
addr16
dec
xor
mov
pusha
ja
push
add
call
mov
test
mov
dec
out
sahf
xor
repnz
aas
popa
sub
xlat
lcall
imul
push
pop
das
jno
addr16
lock
mov
decb
in
test
xchg
push
pop
repnz
repz
xchg
loop
es
sbb
arpl
adc
and
push
xor
je
in
mov
jecxz
dec
ss
pop
cmp
mov
inc
ss
mov
mov
jnp
cmpsl
aad
in
cmp
pop
outsl
or
jae
std
ret
dec
jg
sarl
mov
cld
stc
fisubs
sbb
jne
push
and
xor
cltd
xor
sti
dec
nop
cmpl
lcall
psubsb
fs
pop
and
push
sub
fidivs
fistpll
outsb
shlb
sub
lock
jns
out
arpl
xchg
mov
outsb
mov
iret
cmp
dec
cltd
por
mov
mov
jae
push
repnz
in
add
pusha
in
or
dec
add
shrl
int3
movsb
stc
jnp
cmp
xchg
psrlq
jnp
pop
std
xchg
pop
lret
or
xchg
and
test
loop
mov
push
fisubs
sarl
in
mov
fldt
and
stc
out
fidivl
in
and
inc
inc
lret
popf
adc
xchg
inc
push
movq
cwtl
push
jb
lret
sbb
aaa
dec
subb
int
mov
mov
stc
mov
add
hlt
cld
and
xchg
jmp
push
pop
inc
adc
or
out
fldl
push
pop
aaa
sbb
cmp
shl
std
pop
loop
sar
pop
dec
jg
out
ja
fwait
repnz
push
pop
mov
push
sbb
xchg
xor
dec
mov
mov
in
sbb
cmpsb
lret
xor
data16
dec
and
frndint
into
or
sbb
sahf
aas
add
dec
fdivrs
cltd
sbb
stos
or
shlb
dec
je
sti
call
cs
ja
rcll
das
sti
push
aaa
cmc
cmpsb
mov
sahf
pop
into
push
dec
enter
aas
out
out
sbb
repz
fldt
into
dec
cld
lret
or
mov
enter
add
adc
aam
fadds
es
adc
or
insb
in
dec
fxch
jecxz
adc
mov
pop
jns
dec
mov
lcall
gs
sbb
adc
cmpl
lret
mov
sbb
mov
aas
filds
fs
addr16
jns
lret
sti
movsb
cmp
xor
lds
xor
lods
cmovge
push
xchg
and
lock
fcomps
lds
stc
adc
cmp
enter
inc
pop
mov
push
inc
repz
into
or
xchg
stos
sbb
sbb
outsl
loopne
jnp
dec
mov
sbb
aaa
or
out
add
jb
mov
fwait
dec
push
inc
pushf
or
call
sub
push
aaa
icebp
sub
shrl
faddl
syscall
outsl
jo
xchg
dec
rorl
mov
clc
addb
shll
pop
out
push
aam
incb
xor
sub
xor
das
insl
cmpsb
jg
pop
mov
pop
sbb
bnd
sbb
lret
mov
mov
jmp
jne
lds
dec
jmp
ret
mov
lods
mov
mov
push
xor
jo
push
ret
data16
aas
sarl
fidivrs
jnp
inc
pop
inc
mov
sti
les
push
push
add
sub
aam
cmpsb
lahf
jo
jnp
pop
xlat
rcl
in
bound
shlb
fcoml
mov
add
in
mov
jle
jle
push
imul
push
aad
xchg
in
out
sbb
fmul
lock
cmc
mov
arpl
mov
aad
sub
push
leave
dec
cli
cmp
scas
xchg
rclb
bound
or
mov
mov
imul
mov
xchg
andb
fwait
ljmp
js
aad
inc
cmp
popa
and
lcall
sbb
and
loope
cli
cld
lock
lods
adc
mov
or
jmp
jmp
cmpsl
not
cmp
push
cmp
popf
pop
movsl
aaa
and
inc
rcrb
ret
aaa
xor
cmp
and
ror
push
mov
ret
aaa
or
ret
repnz
mov
shlb
adc
lds
ds
notb
ficomps
imul
call
cmp
sub
es
outsb
aad
mov
mov
mov
dec
push
outsb
xor
ja
jge
shll
and
movsb
cmp
fs
outsl
cs
mov
or
imul
in
cmp
cmpsl
movsl
ret
stc
push
loope
lods
jns
add
test
cmp
mov
repz
dec
xchg
add
inc
mov
dec
pop
out
fildl
sahf
jb
push
test
mov
or
and
add
mov
je
add
xchg
out
sub
mov
and
mov
in
aad
xor
cs
add
fisttpll
cmpsb
xchg
pop
cld
je
jb
pusha
adc
sbb
mov
pop
mov
aaa
fiaddl
xor
sbb
adcl
pushf
imul
call
imul
cli
or
loope
lea
cmovg
xchg
pop
pop
pop
dec
jne
pop
lret
int3
test
push
mov
insb
pop
daa
inc
lret
out
push
and
pop
pop
fwait
scas
lcall
jmp
sub
pop
mov
cltd
inc
shrl
nop
mov
pop
ret
cli
cmpsb
push
add
addr16
shll
stos
aaa
lea
test
mov
cli
mov
xchg
xchg
push
cmp
xor
int3
cmc
mov
jo
addb
jle
jo
test
mov
aaa
insb
shr
les
loop
bound
sbb
mov
sub
ss
pusha
xchg
add
shrl
data16
or
jmp
push
sbb
mov
add
pop
fcmovnb
mov
fistpl
jecxz
mov
sub
pop
sarl
insl
xchg
mov
lret
cmp
add
aaa
fsubrl
in
lret
push
mov
add
pop
or
adc
int3
dec
xchg
pop
cld
icebp
mov
aam
adc
and
inc
xchg
outsb
push
fisttps
insl
fisubrs
ja
into
jo
iret
movsb
lock
sbbl
sub
add
cmp
cwtl
mov
add
icebp
test
imul
aaa
shll
loope
not
xchg
mov
mov
scas
mov
fs
sbb
mov
into
shlb
adc
data16
popf
enter
mov
pop
pop
and
mov
push
or
lods
sarl
mov
iret
xchg
dec
ljmp
and
insl
fildll
fistps
inc
aas
stos
aaa
mov
push
adc
in
insb
adc
out
arpl
and
add
in
xchg
lods
ja
cli
in
stc
push
add
outsb
mov
add
lea
lods
imul
and
sbbb
out
mov
ret
js
fs
mov
in
mov
rcrb
aaa
xchg
sbb
outsb
das
outsl
outsl
push
imul
sahf
adc
sahf
add
dec
pop
jg
jle
add
mov
cmc
sbb
sub
gs
xor
jo
sbb
sbb
sbb
or
cmp
add
mov
xchg
mov
lods
jle
jnp
mov
call
faddp
sbbl
inc
aaa
ja
adc
insl
sub
sub
popf
cmp
shr
push
cmp
scas
jnp
adc
mov
rol
imul
cmp
aad
xor
xor
cmpsb
inc
jns
bound
sbb
sbb
arpl
sbbb
jns
inc
int3
mov
xor
push
mov
xchg
add
outsb
outsb
push
ror
test
pusha
movb
outsb
mov
fdivl
mov
push
xor
mov
shl
fldt
fdiv
insl
test
ljmp
pushf
lcall
or
lret
scas
or
pusha
or
push
loopne
clc
lods
orl
test
adcl
jae
je
dec
scas
add
popa
nop
cmp
adc
push
xor
inc
scas
adc
pushf
push
fldcw
out
push
jae
in
push
jae
xchg
in
mov
test
ret
cwtl
push
cmp
xchg
in
mov
test
and
in
dec
popf
push
cmp
aam
fistpl
clc
dec
jae
leave
push
stos
mov
push
imul
jbe
repnz
iret
shll
jmp
push
outsl
push
nop
and
add
lea
iret
mov
cmpsl
mov
mov
dec
add
inc
push
andb
addr16
push
push
flds
xlat
lods
outsl
call
gs
out
aad
fnstcw
xchg
sbb
dec
xor
ret
call
push
jbe
stc
xchg
gs
fcompl
mov
testl
mov
in
push
cmp
fists
int
mov
mov
push
mov
imul
push
cmp
push
cmp
iret
inc
push
fabs
xor
test
cmp
fldl
cwtl
imul
pop
cmpsl
xchg
mov
std
mov
mov
test
roll
jne
mov
push
sub
addl
jmp
dec
xor
stos
adc
bound
jns
sub
imul
push
jo
sbb
jo
xor
push
test
shll
icebp
mov
insb
inc
jae
mov
push
add
lods
xor
addr16
sti
rol
jne
imul
stc
movsl
jl
pop
pop
aas
aad
repz
out
stos
xor
imul
std
mov
movsl
jle
mov
imul
aas
lds
test
mov
arpl
idivl
in
popa
lds
push
or
cmp
sub
pop
gs
cli
in
orl
jno
cmp
push
sarb
mov
idivb
xorl
or
jp
jge
xor
icebp
sahf
add
pop
out
dec
mov
push
pop
lds
or
ret
fadds
dec
out
mov
jbe
xor
adc
pop
cmp
fisubrs
cmp
adcl
ds
ret
xor
clc
test
addr16
lret
pop
test
outsb
or
xchg
arpl
repnz
test
jnp
adcl
adc
push
imul
fwait
sar
sbb
imul
lret
jg
gs
add
mov
mov
lea
addr16
mov
sbb
imulb
jmp
and
data16
add
out
pop
mov
loopne
xchg
mov
movsb
sbbl
xchg
call
pop
ret
or
sbbl
ds
lea
dec
lret
popf
xchg
cli
mov
or
cmc
push
sub
mov
scas
fcmovb
or
pop
jne
into
ss
int
pop
xchg
js
in
inc
test
fcoms
popa
push
lcall
ret
push
es
das
in
aad
cli
add
xor
jecxz
cmp
out
cmp
gs
sbb
shrb
jle
xchg
xor
fwait
imul
shrb
mov
lahf
push
xchg
or
lcall
adc
jmp
jae
mov
aad
popa
sbbl
movsl
xor
push
xor
cmp
cmc
cmp
es
lds
flds
rclb
ror
jecxz
adcb
loope
add
ret
outsl
loop
cmp
nop
xor
push
dec
fisttps
jo
pop
sbb
shlb
cwtl
inc
xchg
adc
rcr
aad
mov
mov
push
icebp
mov
inc
xchg
outsb
and
mov
inc
xchg
inc
mov
gs
pop
lods
push
xor
push
lock
mov
test
cmp
xchg
inc
shl
jp
mov
jo
pusha
mov
jb
xor
lods
iret
xor
test
adc
imul
fmulp
fwait
outsl
insb
imul
pop
scas
pop
decl
stos
dec
pop
out
or
or
int3
mov
push
lcall
pop
and
lret
push
push
mov
sub
stc
inc
mov
xchg
mov
fildll
out
out
push
data16
sub
mov
sbb
adc
outsb
adc
sti
add
jge
jmp
jae
negl
jnp
jae
out
cmp
cmp
jns
scas
notb
mov
mov
ds
jl
test
scas
cmpsl
andb
or
mov
push
push
mov
push
xchg
rorl
gs
and
loop
pop
mov
imull
push
inc
pop
cmp
mov
bound
movsl
or
rorl
outsb
jb
fistl
xchg
or
fcoml
ja
dec
call
cmc
and
xor
adc
pushf
sbb
push
orb
dec
out
sbb
stc
sbb
or
push
mov
xor
popf
push
jg
pop
scas
or
arpl
andb
or
std
lahf
arpl
jecxz
adc
test
xchg
adc
inc
xchg
mov
mov
mov
mov
pop
popf
jmp
sahf
cltd
sbb
mov
xchg
or
sbb
xor
adc
adc
or
imul
or
add
xor
push
pop
pop
mov
outsl
jne
push
pop
mov
adc
roll
hlt
iret
or
add
dec
or
inc
pop
sub
scas
or
push
call
hlt
or
jne
sbb
js
mov
in
mov
xchg
scas
push
mov
inc
scas
aam
xor
xor
jae
pop
or
add
xor
add
dec
mov
xchg
sub
adc
insl
dec
xor
push
xlat
jo
add
mov
inc
sbbb
lds
mov
mov
xor
fs
popf
shll
aam
add
fidivrl
and
xor
dec
jecxz
cs
cli
fisubrl
add
in
xchg
add
movsb
cmp
inc
cli
mov
rorb
int
imul
popa
movsb
mov
adc
mov
sbb
adc
lret
mov
jle
push
js
mov
and
gs
push
int3
cs
out
iret
iret
xor
inc
sub
arpl
mov
mov
lds
fs
je
cmpb
rorl
adc
cmp
jmp
insl
mov
pop
pop
les
pop
push
mov
ljmp
adc
lods
shlb
mov
pop
mov
ss
dec
lock
movl
sub
mov
aam
jbe
incb
xchg
nop
cs
or
daa
pop
fiaddl
data16
cwtl
andl
imul
cmp
out
outsb
xor
mov
testb
loopne
je
imul
ja
fucomp
jno
cmpsl
fidivs
loop
dec
aaa
adc
mov
dec
adc
mov
out
int
dec
arpl
xchg
in
sub
scas
xchg
ret
pop
in
pop
cli
mov
filds
cmp
lods
pop
jg
jbe
mov
or
das
fdecstp
or
push
popa
dec
jle
in
ffree
out
adc
pop
fdivs
jmp
ds
jg
in
lret
mov
pop
daa
in
xchg
test
adc
outsl
test
xchg
mov
pushl
scas
mov
ds
divb
popa
aas
daa
in
lock
fcomps
mov
into
negb
iret
std
or
sub
jg
sub
bound
mov
mov
clc
cmpb
vmovdqu
rolb
or
call
int3
test
cmpsb
push
sbb
xchg
dec
xorl
mov
ljmp
dec
and
dec
mov
or
add
ret
fldenv
mov
adc
pushf
cmp
shlb
adc
push
ret
rcll
fmul
or
xor
mov
or
or
repz
leave
lcall
xchg
mov
mov
or
xchg
cmp
or
pop
xor
enter
mov
dec
adc
mov
pop
mov
or
fldenv
pop
mov
movq
jno
shl
mov
lods
xchg
dec
stos
out
pop
in
adc
sahf
adc
inc
cmp
mov
pop
xchg
pop
cwtl
dec
mov
mov
test
test
fdivl
sbb
arpl
popf
push
enter
and
int3
ljmp
loop
dec
icebp
stos
fldenv
jb
subb
int3
aaa
dec
xor
push
imul
aam
in
or
push
dec
push
inc
jnp
dec
mov
sbb
or
icebp
or
xchg
mov
xor
cld
mov
rol
sub
mov
add
and
inc
push
mov
fsubs
js
inc
les
and
mov
cli
cld
and
mov
push
jnp
adc
xchg
test
xor
and
jnp
jg
inc
xchg
dec
adc
outsl
dec
clc
les
daa
adc
cmp
mov
and
push
cmp
test
or
orb
cmp
clc
nop
pusha
loope
nop
andl
cs
sbb
push
lret
mov
or
mov
cld
jno
mov
jno
nop
hlt
cli
rcll
and
cmc
shlb
push
push
sbb
adc
jne
push
pop
cmp
pop
dec
scas
fldl
test
mov
in
nop
pusha
and
jmp
cmp
enter
lods
lret
sahf
sbb
sub
sahf
sbb
enter
lods
jne
addb
mov
dec
cmc
inc
ret
pusha
mov
xchg
mull
or
repz
sbb
scas
and
ret
andl
dec
out
xchg
iret
push
add
or
gs
mov
push
test
insb
push
or
rcrb
push
cmpsb
mov
das
xor
xor
clc
mov
mov
ljmp
xor
sbb
push
xor
cmp
ret
ficoml
xchg
mov
pop
xor
pop
scas
stos
lcall
rcrb
dec
xor
lahf
faddl
jle
loope
inc
shlb
and
outsl
bound
xchg
lods
jnp
lds
mov
les
push
mov
dec
jg
and
xor
loop
sbb
inc
lahf
out
inc
jge
mov
lods
dec
sbb
addl
lcall
mov
rorb
test
roll
outsb
mov
test
xor
loope
hlt
sbb
pop
jmp
fsubl
sub
aad
and
mov
stos
xorl
aas
in
mov
add
jecxz
ljmp
out
xchg
mov
xlat
dec
aad
mov
mov
out
dec
out
and
lods
jle
cmp
ficoml
test
subl
and
sahf
testl
pop
sti
leave
aad
push
sub
imul
out
push
or
stc
imulb
push
mov
mov
out
jno
clc
push
scas
andl
fisttpl
test
sti
loopne
cwtl
push
sub
dec
sub
and
push
push
outsl
popa
andl
lret
out
sub
sbb
sbb
sbb
lret
mov
ds
enter
fwait
not
push
sub
imul
lahf
jae
icebp
cli
or
xchg
gs
mov
mov
fcomi
lahf
imul
cmp
pop
xchg
or
mov
daa
add
sub
inc
dec
xchg
sbb
pop
lcall
mov
dec
push
out
or
mov
mov
and
dec
or
cs
lahf
mov
add
pop
push
imull
out
lods
mov
out
imul
movsl
scas
cmp
clc
sub
push
mov
mov
mov
repz
cmp
xchg
jns
popf
testl
cmc
adc
add
loope
shl
ficompl
adc
ret
andb
insb
add
adc
loope
mov
addr16
ljmp
mov
mov
sub
adc
sarl
pop
mov
fbstp
divb
ja
aas
jno
mov
mov
jne
inc
and
jnp
mov
adc
mov
add
cs
push
iret
sbb
pop
adc
push
stos
mov
jle
sahf
add
mov
sti
inc
sarl
shll
fwait
or
int3
inc
mov
nop
adc
dec
in
setp
adc
xor
cmc
data16
idivb
mov
sub
add
pop
sti
xorl
pop
jmp
mov
sub
and
cmp
aaa
push
movsl
mov
xchg
mov
dec
std
sub
pusha
lock
fwait
mov
add
rcll
movb
adc
mov
fistpll
jp
jns
or
ret
filds
out
cmp
into
movsb
lods
jae
or
lea
les
add
daa
sub
orl
mov
push
or
xchg
dec
jle
cmpb
ljmp
into
mulb
jae
cmp
mov
in
push
push
arpl
flds
mov
xlat
mov
cwtl
fcmovnu
repnz
mov
ljmp
testb
add
cltd
or
rorl
ja
xchg
push
mov
repz
mov
imul
dec
cmp
mov
push
cld
fs
xchg
outsl
data16
pushf
imul
lods
mov
lds
ljmp
cmp
ficoms
jge
adc
stc
lea
dec
adc
mov
imul
test
out
dec
repnz
aas
addl
mov
insb
loope
adc
xchg
xchg
xchg
imulb
ret
xchg
insb
or
sub
ss
int3
mov
cmpsb
sbbb
xor
shrb
push
xor
test
add
inc
xchg
in
inc
imul
sbb
sub
icebp
js
pop
out
xor
cmp
fyl2x
cs
int
dec
test
jae
pop
les
pop
sbb
in
cmpsb
sbb
dec
mov
dec
out
mov
cmp
dec
pusha
sbb
sbb
xchg
push
stc
imul
sbb
push
nop
cmpsl
adc
data16
leave
out
adc
pop
or
sbb
lcall
mov
enter
mov
in
push
mov
push
xlat
out
test
es
aas
jmp
sbb
mov
inc
adc
dec
or
shlb
dec
dec
mov
lret
lret
push
in
or
arpl
cmp
dec
stc
adc
lahf
mov
lret
mov
out
in
inc
jg
cwtl
mov
or
inc
cwtl
sub
fwait
sub
lcall
es
out
cmpsb
xor
imul
fcmovb
loope
pop
mov
xor
aam
imul
cltd
mov
data16
repnz
ret
or
rolb
loopne
adc
imull
das
call
mov
push
and
das
cmp
mov
mov
cwtl
sbb
rclb
lods
pusha
jle
fs
cmc
mov
push
jge
stos
xchg
add
mov
test
bound
test
inc
push
je
lcall
andnps
test
inc
adc
test
cwtl
cmp
mov
incl
pushf
mov
andb
pop
pop
outsl
add
roll
out
xor
jl
cmpsb
pusha
and
pop
ret
or
or
xchg
push
pop
daa
sahf
adc
sub
mov
mov
mov
lock
xor
mov
lcall
pop
fsubp
test
inc
mov
dec
adc
mov
std
cmpsl
lods
adc
dec
movl
sti
roll
jg
mov
inc
inc
xlat
inc
fadds
fcmovbe
dec
shrl
adc
sbb
and
xchg
orb
add
add
cwtl
or
mov
sbb
arpl
push
imul
pop
fwait
call
pop
cmp
pop
cmp
je
incb
sti
inc
icebp
xchg
pop
or
push
xor
jmp
cmp
pop
cmp
push
fwait
mov
fcompl
jbe
inc
adc
push
sub
xor
mov
mov
xor
cs
out
xor
mov
and
push
xchg
or
rcrl
push
pop
inc
outsl
pop
cmpsl
stos
push
inc
sub
ds
cmp
nop
jl
mov
jo
jmp
out
iret
in
xor
jns
mov
jle
inc
pushl
pop
data16
sub
movsb
or
push
add
mov
sarb
mov
insl
cmp
mov
inc
cwtl
call
out
call
sbb
pop
mov
add
les
sti
ret
imul
daa
mov
mov
enter
sub
out
ficoms
ficomps
jns
mov
lcall
push
in
sahf
mov
jle
clc
cmp
aaa
sbb
icebp
lock
mov
outsl
and
into
sbbl
sub
popf
pop
mov
orb
mov
dec
xor
loope
call
sub
push
add
mov
add
insl
pusha
fcmovb
hlt
sbbb
and
xor
mov
push
cmpl
out
xor
cmp
dec
xor
cltd
add
adc
sub
sarb
add
add
idivb
sbb
sub
push
dec
push
in
adc
pushf
iret
push
sbb
mov
test
mov
sub
sub
adc
fcom
or
push
test
push
mov
mov
mov
adc
pusha
xchg
mov
pop
push
mov
xor
aam
add
mov
xchg
mov
mov
leave
push
mov
xor
fsubrs
push
inc
xchg
jae
cmp
clc
pop
int
shlb
xchg
sbb
sbb
loop
addr16
cmp
movsl
inc
xorb
loopne
aaa
out
ret
stos
in
sbbb
push
je
popw
dec
mov
add
inc
pop
ss
int
xchg
cmpsb
dec
jae
mov
mov
movsl
lcall
pop
lods
or
scas
inc
lods
pop
loop
push
lods
pop
mov
aaa
sti
aam
add
sub
ss
push
mov
ss
movsl
add
or
or
inc
and
scas
rcl
mov
push
xor
stc
cmp
push
inc
jecxz
lods
arpl
jmp
jecxz
repnz
arpl
sub
ljmp
lock
or
dec
sahf
aam
bswap
pop
call
mov
in
rorb
int
push
xlat
es
pop
or
lods
cmc
lods
int3
lds
nop
imul
xchg
jg
mov
cmp
pop
mov
ret
xchg
scas
cmp
outsl
dec
push
out
sbb
push
jnp
adc
jns
or
clc
mov
mov
pop
dec
pop
xchg
imul
pop
orps
cmp
pop
aaa
cld
mov
hlt
mov
inc
and
cmc
movsb
das
adc
icebp
dec
cmpsl
push
jns
cmpsl
popa
mov
lahf
out
shlb
and
add
divb
movsl
jecxz
push
push
sbb
or
imul
and
pushf
lsl
scas
or
pushf
imul
dec
daa
jne
loop
shr
lock
out
push
adc
movsb
stos
pop
and
cmp
add
gs
cmp
mov
hlt
std
orb
mov
out
lret
push
movsl
mov
sbb
jp
pop
xchg
jae
pushf
pop
jnp
rcll
jo
sti
pop
psllw
adcl
movsb
cli
loopne
fstpl
shrb
dec
ret
push
popf
dec
test
idiv
ret
dec
jl
xchg
fyl2xp1
ds
sbb
popl
stos
test
jbe
enter
cmpb
xorb
lret
jp
repz
mov
or
adc
repnz
or
jg
dec
movsb
xor
dec
adc
inc
jnp
and
stos
decl
outsb
mov
push
pop
inc
mov
dec
xchg
ja
das
scas
fadds
inc
jo
insb
scas
ljmp
lods
fldl
and
int3
imull
lock
pop
dec
imul
mov
mov
jmp
into
jnp
test
movsl
inc
or
mov
push
pop
ror
push
mov
push
and
xor
cmp
xchg
mov
pusha
xor
add
lea
mov
sbb
pop
jne
mov
xor
sub
push
jnp
int
jge
adc
dec
jecxz
sub
lds
pop
push
push
push
loop
jbe
sub
bound
aad
jno
sahf
call
pop
out
push
loope
pop
rorl
scas
pop
mov
cmp
stos
lods
jb
sbbb
fsub
mov
adc
lods
add
mov
xor
bound
jno
sub
push
ret
out
inc
xchg
jmp
cmp
dec
in
test
push
and
mov
test
icebp
cmpsb
inc
jp
xchg
or
mov
fcmove
insb
dec
dec
popa
jnp
inc
mov
imul
js
sub
lret
push
jmp
jle
je
or
or
je
ret
push
push
mov
cmp
xchg
sub
xor
pop
lock
fucomp
xchg
mov
jbe
pop
rcll
mov
or
add
jge
pop
xchg
repz
sub
xchg
incl
mov
in
lahf
sub
ds
mov
adc
lret
mov
lea
inc
push
dec
dec
roll
into
add
xor
arpl
push
fwait
insl
movsb
jg
iret
lods
addr16
pop
movsb
push
lahf
push
cmp
out
jnp
sub
ss
shll
dec
out
daa
mov
rorl
fs
pop
gs
inc
aaa
in
and
subb
std
cmp
repnz
push
pusha
xchg
test
dec
add
jo
movsb
rorb
lcall
les
fldt
and
xorb
xor
and
push
stos
rcrl
ret
ljmp
xchg
mov
icebp
scas
jo
clc
and
aaa
add
mov
outsl
cmp
testl
push
pusha
cmp
or
jge
inc
mov
pop
gs
xor
hlt
xlat
fcomp
cli
sbb
aas
pop
jp
fadd
std
in
xor
testl
into
testb
or
jecxz
mov
push
mulb
sahf
hlt
xchg
and
aaa
test
fwait
add
jg
in
mov
mov
sub
movsl
mov
test
loopne
andl
mov
fmull
mov
bound
mov
inc
xchg
imul
aaa
dec
popl
push
xchg
enter
or
xchg
sbb
loop
and
ficoml
push
add
add
or
mov
and
outsl
lret
inc
ds
jl
fidivs
adc
iret
out
inc
std
xor
sbb
adc
mov
leave
xchg
or
pop
loope
xchg
and
adc
inc
add
xchg
andl
cmpsl
and
sub
dec
in
inc
das
insl
push
cmpl
add
mov
sub
ret
push
cmp
outsl
imul
out
sub
arpl
mov
push
clc
mov
hlt
hlt
adc
jno
les
pop
and
ret
dec
xchg
call
mov
into
subb
popf
clc
sub
scas
loop
in
mov
push
pop
or
and
arpl
cmpb
push
jo
pusha
dec
cmovs
dec
mulb
xchg
mov
push
mov
lods
sbb
fldenv
daa
add
mov
pushf
stc
inc
ret
int
inc
jmp
cmp
es
add
push
mov
sbb
push
push
ljmp
push
ret
add
sbb
rcrb
rorl
test
divb
pop
bound
adc
inc
iret
adc
cmpsb
jecxz
fldenv
sub
push
jle
inc
in
inc
cmp
aad
adc
stc
jno
sbb
shr
scas
xchg
aam
pop
push
inc
jp
repnz
jge
add
pop
xor
and
hlt
push
adc
aad
clc
add
jne
and
lret
test
data16
or
subb
xor
xor
or
popa
jl
lods
cmpsb
fcmovbe
aas
movsb
notl
lock
mov
jae
adc
js
sti
mov
leave
mull
pop
mov
mov
mov
adc
dec
xchg
push
and
sbb
dec
sub
test
push
xchg
clc
add
pusha
jl
incb
out
xchg
jbe
pop
clc
nop
pop
test
shlb
repz
push
hlt
popa
mov
loopne
xor
cwtl
mov
adc
lahf
inc
push
add
bound
inc
ficoml
lret
mov
cli
cli
add
lcall
aam
jo
sbb
clc
cmc
fwait
dec
xor
popf
add
hlt
stos
in
rcl
ret
pop
stos
pop
scas
jb
insb
xchg
mov
mov
ljmp
xchg
inc
sub
mov
dec
adc
sbbb
fists
mov
cmp
pusha
in
scas
sub
mov
mov
in
pop
add
jnp
aam
imul
sub
push
lea
pop
jp
jmp
pop
ds
pop
loop
push
enter
jge
fiadds
pop
sub
jl
mov
add
outsl
adc
adc
mov
adcb
xor
xchg
out
add
mov
in
lret
mov
fs
loopne,pn
dec
cwtl
mov
xchg
cmpsb
adc
dec
mov
jmp
mov
mov
xor
out
mov
lret
call
in
stos
mov
pop
pop
xchg
adc
or
pop
or
dec
xcrypt-ecb
cmpsl
data16
into
mull
cld
jnp
mov
mov
orb
mov
scas
jle
iret
loopne
xchg
push
xchg
push
jne
cmp
rolb
add
push
mov
pop
sub
inc
inc
adc
add
jns
loopne
push
ret
adc
adc
imul
sbb
xchg
scas
sbb
push
fwait
xchg
add
mov
add
outsb
lahf
push
data16
xlat
das
push
pop
repz
xchg
rcrb
cli
ret
outsl
hlt
inc
je
xor
and
xchg
sbb
rcrb
inc
pop
movsb
mov
sahf
xor
imul
sti
ret
out
jp
add
test
adc
pop
sahf
mov
std
ljmp
push
adc
mov
or
push
movsb
loop
iret
cmp
addl
mov
shlb
pop
mov
lret
pushl
popl
dec
outsl
mov
cmp
and
xor
cmpsl
jae
jae
sbbl
add
idivl
jno
out
stc
fwait
aad
sub
sub
mov
jl
clc
popa
jne
pop
cmp
inc
cltd
pop
sub
ja
sub
jp
mov
pop
push
fnsave
outsl
jnp
int3
in
enter
sbb
pop
std
lds
es
mov
stos
pop
cmp
lcall
shrb
cltd
inc
mov
fcompl
jae
test
insl
fsts
imulb
sub
loopne
mov
in
xchg
mov
and
jg
adc
push
es
gs
dec
sub
mov
ret
push
xchg
sub
cwtl
aad
cs
stc
lahf
jne
shlb
cld
jecxz
icebp
dec
inc
add
sbb
iret
mov
gs
xor
int
mov
std
pop
adc
daa
movsb
aaa
dec
out
sbb
mov
ja
scas
ret
cmp
cltd
inc
mov
sbb
daa
mov
icebp
jmp
adc
sub
in
nop
out
dec
mov
jb
insb
mov
mov
sub
ss
mov
inc
icebp
rcrl
push
dec
out
data16
ret
lcall
cmp
insl
pushf
xchg
sbb
dec
adc
add
data16
rcrb
sub
aaa
adc
mov
mov
inc
test
cmp
sbb
inc
test
lret
and
inc
popa
lahf
loop
ljmp
popa
xor
cltd
cld
iret
mov
mov
rcll
pop
lock
and
add
loopne
shld
jb
or
push
cli
jl
fistps
outsl
icebp
insb
cmp
inc
and
xchg
mov
stc
lods
out
sbb
push
lds
loopne
sahf
lret
pop
jne
cmp
scas
in
insl
lea
dec
adc
sar
dec
jl,pn
pushf
mulb
in
adc
jb
sub
and
mov
int3
add
push
xor
cmp
int
sbb
sarb
popa
mov
das
clc
loopne
je
test
in
sbb
cmc
cld
push
dec
in
mov
mov
fcompl
test
out
or
mov
and
clc
lcall
mov
pop
pusha
shrb
push
jge
lcall
stc
mov
mov
sub
nop
cld
mov
adc
sub
or
outsl
or
ret
inc
test
and
mov
repnz
nop
lock
lcall
cmp
inc
psrld
adc
pop
xchg
in
sarl
shl
add
inc
mov
xchg
cmp
fsts
sub
je
mov
inc
sub
fldl
jge
rol
shl
std
hlt
mov
mov
xchg
pop
dec
mov
jg
ja
push
jg
stos
and
je
ljmp
test
push
cmpl
loope
inc
mov
adc
imul
pop
mov
or
cmp
inc
jno
movsl
cli
icebp
mov
ds
pop
lahf
icebp
aad
ljmp
stos
fbstp
pop
jge
or
ret
sbb
ret
ds
lret
inc
cs
mov
jb
in
pop
gs
fwait
das
cld
mov
bound
movsl
jno
aaa
jne
and
adcl
xor
lcall
jns
loop
push
out
adc
testl
out
int3
rclb
cmp
test
mov
push
imul
mov
pop
cmp
pop
pop
mov
and
outsl
scas
push
int3
dec
loope
js
add
stc
sub
lret
test
cmp
mov
jl
or
arpl
fcomps
mov
jb
gs
pop
outsl
sahf
scas
lock
inc
sub
mov
test
or
mov
push
and
ja
mov
jmp
xor
xor
mov
cwtl
dec
fidivrs
add
cmp
push
jne
dec
into
and
pop
je
inc
inc
xor
hlt
ret
loopne
repnz
mov
mov
jnp
in
cli
or
es
stc
rolb
fcomps
addr16
test
sbb
jmp
and
sbb
in
insb
push
js
pop
add
jne
filds
jmp
cmc
xor
ds
inc
frstor
stos
jg
inc
es
lods
push
cwtl
or
xchg
mov
hlt
mov
mov
aaa
push
shll
xor
fs
pop
mull
stos
and
cmp
or
call
bound
jmp
push
xchg
adc
sbb
lret
sub
movl
int3
fmuls
movsb
or
push
fsubl
add
cmpsb
imul
loop
stc
push
mov
inc
xchg
or
push
adc
xchg
icebp
and
hlt
enter
or
and
iret
in
movsl
fmul
mov
mov
call
pop
jl
mov
add
ret
jecxz
lcall
adc
mov
int
pop
lcall
repnz
jo
stos
adc
out
aam
push
out
cmp
cltd
out
cmpsb
xchg
cltd
pop
pop
ds
jg
jle
shrl
push
inc
push
lret
push
daa
decb
mov
jle
inc
push
sbb
sbb
or
pop
mov
mov
dec
outsb
cmp
insl
cmpsb
adc
sbb
pusha
push
inc
imul
add
push
push
dec
inc
push
jmp
ljmp
mov
dec
push
or
lds
or
or
scas
adc
in
in
pop
push
push
insb
lahf
daa
insb
sti
incl
xor
test
inc
stos
jge
cmp
lods
dec
mov
mov
xlat
sub
in
push
movsb
sub
add
test
sarl
cmpsl
sbb
outsb
and
pop
pop
xor
sbb
lret
mov
sub
mov
sbb
sti
es
js
imul
sbb
add
and
pop
push
sti
xchg
rol
push
cmp
lea
and
xchg
mov
sbb
out
fmull
cmpsl
pusha
in
cli
mov
mov
adc
mov
pop
clc
xchg
xchg
setbe
pop
cmc
xor
in
cmp
jmp
jmp
pop
test
sbb
jge
xchg
fidivrs
jns
ljmp
movsb
sub
and
xor
mov
je
mov
loop
scas
out
mov
sub
ret
jae
cs
xchg
sti
cwtl
cltd
test
cmp
push
pop
test
enter
and
push
in
sub
dec
test
jmp
test
push
mov
mov
test
sub
out
lock
fidivrs
inc
pusha
neg
imul
and
or
test
push
loope
xor
mov
xchg
popa
dec
ror
mov
arpl
ds
cmp
mov
test
sar
mov
repnz
test
cmp
or
fsubrl
jnp
add
imul
lsl
scas
sub
or
push
pusha
sub
pop
adc
sub
fs
mov
int3
inc
push
adc
cmp
xchg
rcrl
adc
sub
adc
sub
cmp
mov
in
jb
mov
xchg
inc
das
sub
ja
inc
into
dec
lahf
fnstcw
jmp
and
dec
sbb
popf
lahf
dec
shl
sbb
inc
sbb
push
imul
lods
push
movsb
ja
divb
out
pop
push
pop
mov
fisubrs
jmp
lods
pop
outsb
adc
jp
cltd
lock
push
fmull
inc
xchg
or
repnz
ret
mov
loopne
in
jmp
int
jmp
scas
rcrl
mov
lahf
lcall
fsubr
jae
jmp
mov
mov
sbb
sub
ss
sbb
cmp
add
mov
jle
flds
adc
out
jns
dec
loop
mov
lret
mov
mul
sarb
jl
mov
push
dec
pop
xlat
mov
lock
outsb
imul
mov
cmp
loope
stc
ss
xchg
stc
loope
hlt
mov
pop
add
pusha
pop
sti
test
mov
repnz
add
sti
jmp
movsb
pop
in
addr16
setnp
pushf
pushf
inc
jne
xlat
ja
repnz
imul
jg
test
divl
mov
mov
aas
inc
or
pop
cmp
fs
lret
xor
movzwl
xchg
push
sub
rol
test
cmp
jecxz
jb
es
test
mov
out
xchg
js
mov
xlat
jge
mov
sbb
outsl
lods
ss
sahf
jp
das
out
ret
stos
pop
insl
faddl
stc
in
jl
lods
push
sub
mov
xchg
xor
xor
imul
lcall
cmp
jp
dec
cmp
stc
and
mov
and
pusha
pop
repnz
push
out
mov
jb
jns
imul
aam
sub
js
jo
jl
push
stc
shlb
xchg
pop
icebp
and
pop
mov
lods
mov
adc
push
jle
cmpsl
repz
jle
cli
mov
xchg
jbe
xchg
pop
lods
cmp
movsl
add
pop
add
rcl
ror
mov
sbb
ret
bnd
ficomps
mov
ja
cmp
cs
fisttps
test
mov
xor
xchg
jbe
mov
and
pop
add
cld
lahf
das
adc
push
out
ret
or
int
mov
loopne
pop
jno
push
ret
fnstenv
leave
mov
sub
mov
test
int
mov
addr16
xchg
out
clc
xchg
clc
cld
fwait
lock
aam
or
cmp
xchg
subl
enter
mov
sbb
xor
xchg
je
lahf
push
aas
lret
sbb
inc
loop
int3
sbbl
and
mov
jmp
jo
icebp
daa
popa
cmp
jge
dec
dec
jp
jns
push
shlb
lea
pusha
sub
cwtl
out
mov
xor
mov
inc
mov
adc
cltd
push
js
xor
mov
xor
inc
les
or
sbb
lahf
icebp
pop
pop
jb
sub
nop
mov
stos
popa
cwtl
divb
cltd
cmp
xor
cmp
les
cmpsl
inc
jmp
inc
fucomip
mov
cmpsb
cmp
or
xlat
jge
clc
sbb
or
cltd
mov
popf
fidivrl
pop
push
sbb
xchg
add
mov
inc
gs
lret
xchg
xlat
shl
mov
cli
mov
cli
sbb
add
jge
shl
packssdw
imul
out
mov
icebp
push
popf
dec
je
mov
or
push
sbb
jbe
int
push
lret
push
dec
pop
imul
sbb
inc
and
pop
mov
out
mov
fimull
into
cltd
fdivr
ret
test
and
sub
outsl
mov
lock
push
sub
cltd
mov
adc
cwtl
icebp
in
cmp
xor
hlt
jge
je
cmpsl
mov
push
pop
cmp
rcrb
mov
or
xchg
ds
fisubs
loopne
xor
mov
sub
aas
subb
pushf
sbb
jmp
jo
adc
fstl
mov
sbb
pushl
int3
fs
mull
mov
movsb
cli
out
sti
aam
add
or
adc
pop
pop
inc
xchg
cmp
dec
imul
mov
popf
or
mov
adc
sub
adc
lock
scas
imul
inc
cmp
and
ss
adc
iret
and
cltd
and
pop
mov
loop
and
dec
mov
adc
mov
pop
shr
ljmp
sub
js
jle
pop
scas
bound
iret
jge
data16
pusha
lds
ret
push
popa
fnstsw
cld
sub
test
in
nop
add
es
mov
sub
rcll
outsl
ret
inc
pop
fwait
aas
stos
xor
popa
jns
decb
and
and
mov
lods
insl
jle
push
fstpt
dec
mov
test
shlb
out
xchg
je
sub
nop
sub
dec
pop
jp
jo
xchg
fcompl
mov
sub
xchg
nop
push
mov
push
pushf
dec
stc
sub
push
arpl
adc
inc
aad
leave
and
fildl
xchg
ret
addr16
and
xchg
roll
cmp
addb
fisttps
push
test
fwait
std
push
fsincos
imul
shlb
addr16
inc
loop
push
cld
mov
lret
lods
lret
daa
icebp
mov
jae
xorl
sbb
leave
adc
inc
cltd
test
or
outsb
test
cmp
cltd
push
jns
fsubrl
fimull
iret
xlat
pop
cmp
out
and
mov
cli
lods
popa
sti
push
inc
dec
xchg
jg
movsb
pop
jg
adc
mov
aam
stos
mov
leave
fldt
xchg
fcompl
scas
rcl
rorl
mov
cmp
pop
mov
pop
pop
outsl
sbb
cs
test
mov
push
mov
lds
cmp
std
lods
sbb
pop
sbb
push
sbb
nop
test
cltd
dec
sbb
shll
jecxz
cmpsl
push
dec
dec
clc
sub
mov
push
addl
cmp
in
xchg
daa
add
mov
lea
pop
fwait
mov
pushf
fldt
and
cli
push
sub
mov
lds
test
xchg
jmp
in
addr16
and
dec
mov
inc
lds
jmp
push
or
mov
stc
lcall
lods
push
mov
adc
leave
mov
xchg
test
leave
shl
imul
sub
mov
cmp
pop
push
lock
call
or
lock
sub
fldcw
jp
popf
inc
and
in
les
aaa
adc
push
popf
int3
push
push
jl
mov
push
xlat
out
push
mov
fdivl
xlat
push
scas
pushf
lock
clc
push
in
shl
shlb
lret
jmp
sarb
das
test
add
and
popa
cmc
xchg
xchg
mov
mov
outsl
leave
rcll
inc
sahf
cs
cmc
sahf
in
pop
pop
stos
mov
sar
fisttpll
rol
je
rep
shrl
scas
das
mov
pop
jnp
mov
xor
dec
xchg
mov
mov
les
int3
movsl
xchg
dec
or
xchg
add
rolb
mov
pop
je
ds
pop
cmp
aad
pusha
xlat
pop
in
test
push
xlat
sub
push
or
lea
ja
sbb
mov
out
sbb
push
mov
imul
loope
outsb
pop
jl
stos
fs
sub
sub
orb
mov
xchg
jge
mov
lock
jecxz
pop
loopne
push
cmp
ds
out
pop
fmuls
popf
or
test
stos
push
cmp
int3
jbe
lahf
mov
dec
imul
dec
mov
sub
push
or
ret
das
jne
push
jae
rolb
or
rcrl
jl
rcrb
gs
pushl
stos
jge
in
call
leave
lahf
lret
push
cs
lret
aas
aas
es
icebp
sub
jmp
popf
ja
cmp
and
sbb
loope
daa
xchg
mov
adc
call
sti
fists
xor
mov
add
pop
mov
jb
jge
popf
sbb
les
mov
jae
ficomps
shll
pop
in
and
mov
test
out
inc
sub
xchg
aas
mov
mov
or
inc
shl
out
mov
mov
movsb
dec
cmp
xchg
adc
ljmp
cmp
xchg
push
dec
rclb
jecxz
insl
cmp
xchg
sahf
call
sub
out
xor
loopne
loope
iret
jg
cli
scas
mov
and
lcall
pop
mov
mov
pop
mov
sub
adc
shrb
sbb
pop
push
jb
adc
xchg
lods
stos
inc
push
cmc
sbb
and
test
mov
mov
mov
mov
stc
int
mov
push
cs
push
in
scas
xchg
sbb
testl
imul
movsl
inc
imul
cld
ja
mov
lods
stos
rcrb
push
jmp
shrb
scas
cltd
imul
test
ljmp
dec
sbb
insl
and
shrd
loope
stos
push
jne
and
jb
test
pop
xlat
jb
add
or
clc
cld
jle
stos
mov
rorb
pop
cmp
mov
pop
rorl
negl
shll
movsl
enter
mov
cmpl
mov
stc
test
add
ret
cmp
adc
cmc
ret
iret
lret
and
in
lahf
fbstp
mov
enter
popa
int
jp
and
pop
add
out
loopne
mov
loop
jl
xlat
push
push
jo
int
push
push
shr
jo
cmpb
xlat
sbb
inc
add
mov
pop
icebp
mov
inc
cmpsb
popa
rolb
mov
popf
mov
or
xchg
jne
jl
push
insl
lcall
fsubrs
enter
imul
rorb
or
int3
push
sbbl
xchg
cs
jbe
dec
cmp
cmp
loopne
xor
cmpsb
pop
stc
ret
je
in
pop
dec
dec
bound
lods
gs
push
addr16
xor
inc
or
mov
inc
jge
in
add
bound
lods
in
or
add
and
dec
dec
outsl
fs
push
adc
mov
cmc
ret
push
xchg
dec
jmp
sbb
dec
mov
std
jge
jl
insl
or
pop
lods
jnp
push
pop
fwait
pop
push
dec
dec
insl
mov
add
imul
cmp
mov
jo
ja
sub
dec
lds
xlat
aad
notb
in
mov
jbe
adc
cmp
adc
push
call
xchg
lahf
cmpsb
lock
pop
jp
pop
jle
pop
mov
imul
hlt
push
push
push
sbb
roll
mov
stos
inc
andl
js
push
lret
dec
inc
inc
sbb
inc
adc
mov
mov
lret
jmp
pushl
sub
dec
rcrb
mov
push
xchg
sub
or
jne
outsl
cmc
xchg
shlb
movsl
or
pusha
xor
ret
add
xchg
sub
xchg
roll
dec
or
dec
shrl
jle
sbb
adc
test
jecxz
sbb
pop
test
or
sbb
jb
test
int
push
push
mov
imul
loopne
sbb
pop
mov
mov
lods
int
add
jg
insb
xchg
fmull
jge
mov
out
or
sbb
repnz
rolb
ja
cmp
sbb
push
fwait
fs
xchg
pop
mov
or
inc
es
outsl
inc
fmuls
adc
fldenv
pop
outsl
cmpsb
je
cmpsb
enter
int3
cmc
int3
xchg
cmc
mov
mov
pop
mov
dec
xor
mov
movb
insl
orl
mov
xor
push
jo
cmp
sbbl
out
leave
mov
incb
aam
cmpsb
in
call
cmp
mov
dec
out
pop
imul
decl
outsl
mov
add
adc
aam
pop
dec
pop
xchg
sti
cmp
sbb
xlat
push
lcall
adc
aam
cmp
push
subl
pusha
xchg
and
loopne
or
stos
push
inc
cmp
lock
aaa
inc
das
adc
mov
add
leave
mov
gs
sub
bound
subl
mov
das
shrl
mov
nop
test
fsubr
in
dec
mov
and
mov
xchg
out
push
mov
call
pop
mov
rorb
rorl
es
aas
lock
and
rcrb
dec
mov
adc
mov
mov
stos
sbb
inc
dec
call
je
add
fwait
and
dec
rorb
iret
xchg
testb
mov
mov
jo
out
popl
cmp
aaa
movsb
in
cmp
mov
adc
xchg
push
push
cmp
ret
imulb
in
pop
inc
lock
roll
cltd
sub
xor
or
sub
and
testb
xor
das
fmul
leave
dec
pop
xchg
dec
movsb
or
mov
adc
inc
in
lcall
js
test
push
xlat
aaa
daa
xorl
and
daa
stos
fisubrs
pop
xchg
outsl
repnz
pop
push
push
jecxz
ljmp
push
cmpsl
popa
icebp
push
add
pop
mov
and
dec
and
and
cmpsl
lods
mov
dec
fmull
hlt
aad
dec
in
int
add
lock
scas
jl
sub
repnz
xlat
lods
push
adc
mov
into
das
pop
scas
jne
aam
adc
ds
dec
icebp
mov
jg
and
rcrl
in
sub
sub
xchg
insl
hlt
and
add
fcmovb
imulb
mov
dec
pop
sub
mov
sub
iret
int
or
les
cmp
adc
rcll
cmpsb
pusha
push
jmp
xchg
pop
test
movsb
aaa
sub
pop
push
scas
and
adc
shr
mov
call
lcall
ret
mov
addl
mov
imul
insl
insb
jge
cmp
pop
mov
pusha
imul
outsl
mov
inc
xchg
jne
pop
push
sub
jo
mov
xor
rcrl
mov
push
cwtl
jge
lcall
push
test
mov
sub
inc
pop
sarl
add
call
sub
cmp
push
xchg
movsb
sbbb
xchg
lret
or
xchg
or
fs
jbe
pushf
mov
sub
daa
cmp
or
sub
or
xor
push
inc
daa
test
dec
sub
int
jo
shll
xor
nop
inc
pop
mov
movsb
test
inc
int
xor
out
out
push
push
out
inc
jb
stc
ds
jno
mov
mov
xorb
sbb
cwtl
popf
pusha
push
sbb
push
jecxz
rcl
jae
imul
int3
and
jle
dec
pusha
mov
pusha
push
cmpl
rcrb
xor
xchg
fs
aas
ja
xor
loopne
push
rolb
jns
in
pop
jne
lods
dec
mov
jnp
cmp
into
add
sbb
sub
rcll
ljmp
cld
fsubl
jl
and
lock
cs
pop
dec
xchg
lds
or
xorl
lret
xor
xchg
js
fcmovne
xchg
mov
fbstp
push
loopne
xchg
rcrb
push
pop
daa
jge
jbe
insl
pop
loopne
sbb
mov
out
sti
in
xchg
enter
xchg
push
cmp
aas
adc
loop
outsb
js
repnz
push
cwtl
test
fsub
sub
daa
pusha
rorb
cld
xchg
scas
inc
sub
sub
das
or
and
jle
cwtl
nop
sti
sbb
jge
sbb
sbb
repz
mov
pop
lods
mov
out
shlb
sbb
push
mov
ljmp
xchg
fistpll
xchg
mov
push
or
sbbb
adc
aaa
je
insl
into
mov
pop
frstor
mov
daa
push
pop
inc
push
imul
test
cmp
leave
or
sub
sub
and
daa
sbb
imul
pop
jbe
push
push
dec
shll
pop
mov
pop
mov
pop
leave
push
pop
mov
je
inc
add
pop
ret
in
lret
lds
push
rcll
lret
cmpsb
jmp
adc
hlt
or
shrb
aad
or
idivb
inc
inc
xchg
push
aaa
mov
nop
insl
das
test
movsb
leave
sarb
sbb
push
pushf
push
xlat
adc
inc
dec
stos
cld
and
jmp
andb
adc
mov
inc
fdivs
add
pop
cmp
adc
xchg
popa
mov
addr16
adc
adc
and
fs
fstl
add
lds
mov
sar
pop
sbb
lods
in
jb
enter
mov
mov
stc
mov
inc
in
stc
fs
bound
fmulp
adc
cmpl
lret
dec
mov
dec
cmpsl
out
lods
popa
stos
jl
sbb
sbb
xchg
mov
mov
out
inc
ds
cmpsb
aam
mov
jb
xchg
pop
jl
sbbl
pop
jl
scas
adc
xor
clc
mov
ret
dec
sub
lods
repnz
xor
es
push
push
mov
adc
iret
push
dec
adc
mov
mov
repnz
push
mov
xlat
sub
push
cld
nopl
dec
xchg
inc
add
in
dec
enter
fisttps
xor
icebp
xor
test
call
mov
pusha
pop
loopne
mov
xlat
hlt
mov
add
pop
jb
int3
sub
jb
jmp
sub
imul
je
sahf
jne
sbb
sub
dec
lahf
hlt
das
xchg
int3
adc
add
je
into
cld
cmp
fsubrs
idivb
mov
sub
jg
adc
add
sub
mov
es
xchg
daa
sbb
loope
xchg
jns
lods
xchg
aas
mov
xchg
sub
lea
shlb
int3
out
cmp
fucomip
fmuls
pop
sbb
jnp
mov
lock
fwait
dec
mov
push
adc
call
vmaxss
loopne
loope
popf
mov
jge
mov
loopne
enter
mov
aaa
mov
xchg
fsub
xchg
sbbl
repz
stc
loopne
faddl
adc
sbb
in
rcll
mov
push
cltd
ljmp
cmpsb
mov
aam
mov
lods
pop
mov
cmc
jecxz
insb
aas
outsb
mul
neg
std
mov
sarb
repnz
jno
lret
pop
lock
aam
jne
fnstenv
in
daa
pop
out
push
pop
mov
sub
adc
xchg
cmp
and
mov
jnp
mov
imul
loop
ja
shr
clc
insl
and
add
mov
les
xor
loopne
add
dec
pop
jae
mov
pushf
ja
shlb
jno
push
cld
les
inc
lods
add
jno
sub
mov
mov
subb
loope
or
cmc
rclb
add
cmc
jl
movsb
fwait
pop
or
out
cld
push
jo
or
rcr
push
mov
iret
inc
sub
ja
test
fldcw
ss
mov
gs
push
push
adc
movsl
aaa
loop
out
or
das
pop
jecxz
pop
jns
xor
or
push
cs
into
add
sub
jae
or
mov
mov
imul
jne
cmp
cwtl
and
dec
xchg
dec
mov
sbb
cltd
outsb
pusha
leave
jp
mov
xchg
mulb
sbb
enter
repnz
decb
or
movsl
push
add
or
mov
rcrl
adc
xchg
mov
xchg
fistps
xor
inc
lahf
xor
mov
ds
sub
test
adc
or
sbb
jle
push
add
ljmp
fs
fs
arpl
leave
das
jmp
jl
adc
test
ret
je
cmp
fstps
or
push
jnp
mov
add
push
fucomp
mov
loopne
dec
lret
test
cmp
pop
popl
imul
cmpsb
mov
pop
or
fcomi
xchg
inc
mul
mov
mov
loope
and
pop
push
pop
inc
xchg
ja
fcom
imul
jae
mov
jb
fidivs
out
adc
loope
add
add
cmpsl
mov
cltd
jnp
loopne
jl
cmpsb
dec
les
push
stc
add
mov
and
inc
subl
cltd
xchg
xor
roll
addr16
and
add
clc
push
pop
adcl
jge
imul
in
js
jo
ds
aad
cs
lock
pop
cmc
rolb
ficoms
and
andl
mov
inc
xor
sub
in
mov
jg
mov
lret
aam
sub
jmp
add
lea
rcrl
inc
mov
push
push
cmpsl
shlb
push
test
rcrb
test
sub
iret
xor
push
inc
xchg
xchg
cltd
ret
jp,pt
push
cmp
lds
imull
dec
roll
jp
fdecstp
rcrb
mov
pop
test
add
jb
jle
test
fsubrs
leave
mov
popf
in
jmp
stos
jns
xchg
cmp
aam
mov
imul
jnp
and
xor
jnp
popf
pop
insb
mov
jle
inc
xor
push
stos
frstor
lods
mov
push
clc
xor
inc
call
dec
mov
cmp
mov
and
ds
sbb
adc
mov
cmp
iret
scas
cs
jp
xor
cmpsl
daa
inc
fists
jle
imul
and
aad
push
iretw
stos
call
rcrl
int3
in
sahf
mov
lods
push
pop
scas
cmp
xor
popa
xor
test
scas
in
in
or
ds
out
outsl
fs
xlat
movsb
iret
sahf
or
aad
push
mov
dec
mov
adc
sbb
jno
jb
or
test
push
jns
xchg
lock
js
call
mov
rolb
mov
xchg
mov
fstl
gs
xchg
inc
inc
je
leave
fsts
pop
adc
outsl
mov
cmp
testl
iret
pop
push
rorl
out
push
std
mov
out
mov
pop
mov
xor
push
fwait
pop
push
in
scas
inc
xor
dec
subb
mov
out
and
add
setl
out
dec
sahf
iret
repz
imul
pop
ds
in
lret
repz
or
imull
jnp
cs
inc
rorb
jle
icebp
jns
adc
or
inc
aam
jb
cmpsb
dec
pop
jge
notl
cmp
push
aad
mov
add
ljmp
popa
fisubrs
sarl
dec
cld
and
aad
cmp
xchg
insl
xchg
fcomp
mov
mov
cmp
push
cmpsl
dec
sub
hlt
stc
xchg
js
jns
cmp
loope
jbe
push
push
lods
ljmp
pop
out
cmpsb
mov
leave
mov
cmpl
and
insl
cmp
xor
add
xor
out
ljmp
aam
pop
sub
jmp
lods
gs
test
mov
ret
mov
imul
loope
jns
std
ret
inc
adc
repz
inc
in
inc
xchg
xchg
sub
inc
mov
pop
je
out
pusha
pop
add
push
cmp
xchg
gs
test
fwait
and
test
lods
push
fs
mov
pop
sarb
sub
pop
sbb
movsl
pop
mov
mov
nop
jns
pop
rclb
ds
ja
cmpsb
rcll
lret
mov
pop
or
jnp
mov
dec
gs
mov
test
fnstsw
xlat
movl
ss
adc
insb
add
stc
mov
sub
and
fnstenv
dec
adc
add
mov
inc
xchg
es
inc
xchg
cs
rcll
pop
mov
push
push
inc
lea
rolb
test
mov
or
pop
xor
fdivrp
ret
idiv
cmc
mov
out
stc
xor
int3
cltd
cmp
xor
jb
xchg
cmp
sub
jbe
mov
push
jge
mulb
pop
cmp
lret
ja
add
scas
aas
xor
mov
inc
push
mov
and
xchg
add
test
hlt
or
xor
cmp
int
popl
fs
pushf
jp
fdiv
and
int3
mov
jno
imul
lret
pop
cli
dec
push
xchg
ret
or
shrl
in
add
jecxz
cmp
loopne
push
pop
xor
xor
push
xor
loopne
push
mov
jo
pop
jb
stos
outsl
shll
xor
pusha
cmpsb
xlat
cld
xor
mov
incl
mov
xchg
js
mov
shll
jns
repnz
push
push
xchg
js
ror
xlat
stos
fistpll
push
fimuls
or
pop
jle
inc
test
inc
std
cltd
mov
ja
sbb
jp
arpl
test
stos
adc
sbb
pop
or
add
mov
pop
out
ds
and
cmpl
xchg
aam
nop
repz
or
out
and
jle
jg
adc
jo
xlat
pop
and
or
add
push
push
and
xchg
adc
mov
xchg
fildl
js
rcr
inc
loopne
push
push
mov
fdivr
add
push
pop
xor
mov
xor
outsl
jnp
loop
sti
dec
jo
or
inc
dec
daa
les
jns
mov
adc
jg
mov
pop
aas
repnz
cmpl
fsts
jb
mov
loop
imul
mov
or
dec
or
cmc
xchg
and
push
cmpsl
inc
pop
stos
push
scas
stc
mov
cwtl
cmpsb
and
add
clc
sahf
pusha
cld
nop
and
lret
sub
jl
lret
lea
add
dec
jns
xchg
mov
cltd
inc
sbb
xor
lahf
pop
enter
mov
cs
cmp
and
or
add
int
fidivl
mov
cli
pop
cmc
ss
fsubl
clc
in
or
jb
mul
mov
and
push
movsl
in
xor
into
lds
decb
lret
mov
pushf
dec
mov
mov
scas
adc
mov
mov
push
aam
mov
pushf
sub
fiaddl
mulb
push
mov
movsl
les
dec
xor
and
cli
mov
xchg
enter
out
mov
scas
cld
sbb
push
aad
lea
jge
xchg
add
ret
push
pop
mov
mov
push
and
push
cltd
and
jge
sbb
dec
xchg
sbb
aas
push
adc
add
jmp
pusha
pop
popl
add
dec
int3
adc
pushf
sub
add
dec
mov
cs
sub
ret
stos
mov
rorb
inc
stos
or
jmp
pop
aam
xchg
arpl
mov
cmp
mov
cmp
add
mov
stc
pushf
lods
pop
sti
repz
pop
icebp
ret
nop
add
shrl
mov
insl
adc
sub
mov
mov
sub
lahf
mov
clc
mov
mov
lock
or
cmc
aad
add
out
push
cmp
sub
sbb
sahf
and
add
mov
sbb
and
sbb
sub
xorb
imulb
nop
das
xchg
daa
push
pop
xchg
ret
popf
aad
add
stos
outsb
inc
sub
push
std
outsl
sbb
lock
stos
jne
fdivrl
pushf
jl
fidivs
sahf
clc
out
and
bound
pop
mov
mov
pop
mov
sub
test
add
mov
xor
push
mov
es
mov
movsb
xchg
push
xchg
ret
lock
push
lods
dec
xor
xchg
push
and
lret
mov
in
dec
stos
stos
ljmp
push
xor
std
cmc
or
add
dec
sbb
inc
or
in
cs
sub
sbb
pushf
cli
mov
xchg
inc
cmp
xorps
pop
ds
push
sub
test
sbb
fcompl
pop
aam
jo
pusha
or
pop
lock
mov
add
xor
pusha
mov
mov
sbbb
pop
out
mov
std
les
dec
mov
sub
push
test
mov
call
dec
pop
lret
xchg
lcall
imul
inc
jne
mov
jge
fstps
mov
inc
std
adc
cmc
call
test
and
sub
rorb
add
xchg
mov
dec
mov
cmp
fsubrl
push
push
sub
outsb
dec
insb
movsb
cmp
loop
or
inc
mov
push
mov
cmp
lret
stos
aad
and
test
xchg
scas
jp
mov
test
mov
into
ds
push
aaa
fmull
push
sarb
je
scas
adc
or
fcoml
mov
aam
dec
mov
dec
aad
mov
fwait
dec
pop
imul
xorb
ja
or
push
out
xor
or
dec
movsb
push
cmp
out
call
jp
rorb
cmp
mov
mov
fs
inc
jo
xchg
cmp
scas
inc
das
mov
fldt
imul
inc
push
dec
jae
jecxz
fildll
inc
dec
push
mov
add
ss
xchg
dec
jge
cmc
test
jmp
adc
in
xchg
sbb
xlat
push
sub
data16
imull
int
mov
das
arpl
pop
pop
push
ljmp
xchg
dec
scas
das
adc
pop
notb
pushf
sahf
xor
imulb
fwait
inc
mov
lock
xchg
outsb
adc
ret
jb
aad
and
repz
fiadds
xchg
aam
push
stc
out
pop
aam
xor
mov
mov
testl
loope
test
pop
sub
fisubrs
test
add
lock
nop
push
test
mov
inc
and
push
mov
pop
popa
dec
jmp
cmp
and
jmp
ja
sbb
dec
rcl
cwtl
mov
shrl
inc
imul
xor
jb
dec
push
aad
outsl
insb
sub
xchg
or
fdivl
mov
ds
stos
lcall
sub
push
aad
jecxz
jbe
xor
push
daa
lahf
cmp
pop
daa
lods
jg
iret
cli
out
test
dec
lds
or
scas
and
out
cmpsl
xchg
adc
or
pusha
jo
mov
ret
iret
hlt
sahf
out
mov
mov
gs
xchg
sbb
ret
scas
mov
out
scas
pop
or
jo
loope
iret
out
rclb
jnp
dec
insl
stos
out
xlat
push
imull
rorl
shr
in
pop
push
test
into
imul
xlat
in
repnz
repz
jb
cmp
in
insl
out
mov
jnp
stc
xchg
xchg
out
fwait
xchg
mov
sahf
fnstsw
and
fmull
stc
inc
aaa
iret
cmp
icebp
loopnew
aas
ss
inc
aas
add
jne
fscale
mov
sbb
int3
cmp
and
pop
xchg
enter
add
je
addr16
xchg
sahf
push
and
out
push
mov
fisttpll
add
add
fmull
mov
add
push
lcall
icebp
leave
and
xchg
xchg
xchg
lcall
aaa
out
js
lods
lahf
popf
cltd
repnz
sub
add
pushf
popa
addr16
xor
ss
sbb
testl
imul
mov
loopne
add
jns
push
fxch
sub
iret
in
popa
xchg
popa
in
ss
jbe
pop
cmp
jno
xor
xor
xchg
das
fs
xchg
mov
loope
jno
idivl
ss
fwait
jno
xchg
stos
add
mov
sbb
xor
andl
jmp
mov
mov
xor
out
stos
std
addr16
aaa
xchg
repnz
repnz
add
pop
in
push
ffreep
cmp
xor
lahf
sbb
pop
fstl
negb
jnp
ljmp
jl
xchg
jne
push
xchg
push
int3
pop
test
xchg
shll
addr16
xor
in
daa
dec
jl
xor
xchg
scas
push
push
into
xchg
stc
adc
push
adc
fisttpll
mov
add
dec
push
stos
cmp
iret
cmp
shrb
stos
mov
fildl
push
in
cmp
mov
xor
dec
aaa
bound
gs
mov
or
xchg
cmc
enter
popf
jl
dec
or
inc
cmp
adc
jno
inc
inc
dec
das
loopne
cmp
cld
inc
aam
shlb
out
mull
cmpsl
lods
cmp
adc
sub
cmp
inc
xchg
mov
inc
or
mov
xor
sahf
test
lds
jno
sbb
repnz
push
nop
adcl
adc
gs
cmp
in
or
repz
mov
out
sub
push
popf
mov
sbb
imul
test
mov
call
push
sbb
ret
cmp
sub
stos
push
pushf
push
and
inc
jne
xchg
pop
inc
test
addr16
ret
mov
rcrl
push
push
mov
fdivrs
adc
dec
xchg
popa
nop
jle
sarl
dec
jne
push
push
dec
les
jle
xor
fcmovne
daa
adc
xlat
les
mov
popf
adc
dec
or
loope
out
cmp
jno
addr16
jns
daa
jle
sub
and
orb
shlb
jp
loopne
cs
std
inc
xor
jle
push
jns
and
lahf
rol
int
jnp
test
mov
imull
cltd
xlat
leave
jo
cld
mov
scas
dec
cmp
aaa
pop
fs
inc
cwtl
sub
jmp
xor
sar
mov
mov
add
sub
xor
sti
mov
add
push
fistl
add
sub
mov
adc
fsubs
mov
lods
fstpl
imul
addr16
call
and
call
xlat
mov
jbe
shlb
xchg
mov
mov
mov
jmp
scas
cs
jns
lahf
cli
aas
hlt
out
addr16
in
cli
xor
sar
das
hlt
dec
std
sub
dec
std
or
cmp
mov
je
in
push
frstor
add
je
sub
jle
shrb
jo
fists
cld
add
clc
mov
or
adc
cmc
cmp
pushf
incl
ret
push
loope
std
adc
or
jnp
xor
or
sbb
lock
cld
push
ror
push
xor
loopne
lods
subl
cld
cld
lock
mov
cmp
inc
sbb
loope
jno
xchg
call
pusha
inc
ffreep
out
mov
test
lret
subl
clc
xor
pop
scas
fmuls
int3
push
int
and
add
fnstcw
rolb
outsb
arpl
inc
fiadds
jmp
jl
add
jo
pop
push
mov
push
and
fcoms
dec
int3
into
xor
jne
adc
loop
cmpsb
addr16
test
inc
int3
or
enter
popf
inc
inc
rcll
imul
xor
out
popa
dec
inc
ret
daa
divb
in
in
cwtl
sbb
adc
jmp
fstps
inc
out
fdivrs
jb
out
xchg
rcrb
mov
pop
lcall
sub
sbb
jo
push
sub
sbb
pop
icebp
mov
fldl
bound
dec
xchg
fs
push
xor
and
mov
mov
outsb
or
test
out
inc
aam
xchg
pop
in
mov
dec
push
sbb
jae
xchg
popf
int
lds
test
aam
scas
ss
sahf
mov
das
sub
xchg
cmp
jle
jnp
pop
dec
cmp
mov
into
xor
push
cmp
mov
cmpsl
addr16
adc
aad
test
add
and
cmp
cltd
sub
inc
xchg
xor
inc
mov
aad
pop
adc
enter
adc
add
push
mov
shlb
arpl
test
push
aam
adc
int3
adc
sbb
jae
mov
adc
bound
les
mov
jne
sub
cmp
das
pop
xchg
jecxz
dec
push
test
mov
ja
mov
stos
test
mov
js
cmp
mov
mov
aaa
push
xchg
test
xor
mov
cmp
outsl
lock
pop
xchg
jle
cmp
lods
iret
pusha
xor
and
jb
pusha
arpl
dec
aaa
cmp
dec
or
enter
jb
leave
sbb
data16
mov
cmpl
pusha
pop
cmpl
daa
sbb
gs
sbb
loopne
cmpl
popf
dec
loopne
push
mov
push
ja
mov
cmp
aad
xor
iret
in
pop
fisttps
jecxz
les
test
dec
or
and
cmc
jne
jp
scas
decl
mov
xchg
pushf
mov
cmp
cmpb
sbb
jns
jo
mov
and
mov
xchg
sbb
aaa
or
ljmp
add
hlt
sahf
lock
aad
push
dec
shl
xchg
jae
mov
mov
inc
es
mov
mov
cltd
loop
xchg
xor
loopne
and
and
mov
jmp
cmp
test
mov
mov
enter
enter
ja
xor
dec
in
cmc
pop
adc
or
int3
hlt
jno
lock
in
and
jmp
xchg
in
popf
cmpsl
divb
cmpsl
xlat
mov
cwtl
test
mov
mov
mov
sub
jae
es
and
xchg
and
out
push
dec
adc
fnstcw
loop
pandn
lahf
in
mov
add
inc
adc
mov
adc
loope
or
imul
frstor
lret
mov
test
inc
call
mov
ret
test
jae
pusha
cwtl
jne
add
add
inc
dec
scas
adc
lret
pusha
adc
test
cwtl
cmp
dec
push
mov
cmp
mov
repz
popf
mov
mov
scas
imul
testl
push
mov
vpackuswb
test
cmp
cli
mov
sti
push
mov
mov
sub
mov
mov
mov
add
es
sbb
xor
cmp
mov
mov
mov
ret
lahf
or
sub
or
loop
shrb
inc
lahf
daa
pushf
dec
aam
and
sbb
fsubl
bound
shrl
adc
out
in
pop
popa
xchg
jl
or
inc
test
or
mov
jae
add
mov
push
jns
jne
xorb
fsubl
push
lea
inc
pop
cmp
test
and
push
cli
lcall
in
sub
xchg
xor
mov
in
std
add
push
flds
test
push
mov
pop
cmp
jae
cmp
lcall
push
cwtl
inc
sub
aaa
pop
inc
inc
movsb
stos
mov
sbb
push
push
sbb
adc
icebp
xchg
ja
inc
mov
xchg
inc
push
or
aas
aaa
dec
or
ljmp
stos
jb
aam
adc
sbb
adc
xchg
inc
insl
push
mov
call
xor
inc
or
pop
jle
negl
mov
gs
inc
sarl
loop
or
pop
sub
adc
push
cmp
mov
sub
xchg
fs
mov
dec
jns
fadds
inc
jns
inc
sahf
jmp
mov
push
sbb
push
jge
fimull
aad
in
test
push
jo
sub
push
test
fwait
data16
stos
mov
fistpl
repnz
push
loope
mov
adcl
dec
mov
cmp
jae
sbb
enter
test
mov
mov
xor
imul
pop
arpl
or
xor
cmp
inc
mov
loop
xchg
sbb
jp
repnz
ds
pop
leave
push
xchg
lahf
orb
leave
jae
loop
scas
adc
dec
scas
je
mov
cltd
cmpsb
mov
pop
push
add
ret
add
sbb
inc
insl
pop
fcmovbe
adc
sub
and
int
mov
std
insb
jp
sbb
pop
and
enter
xor
sub
imul
mov
inc
jl
jge
pop
lea
rcrl
loope
mov
sbb
neg
arpl
push
stc
xchg
cmpsl
adc
jbe
mov
js
sub
and
imul
lods
inc
and
or
and
inc
pop
dec
dec
mov
outsl
sub
pop
in
jg
enter
stos
dec
adc
jno
scas
mov
add
sub
fwait
jmp
insl
movb
test
inc
roll
ret
xor
mov
adc
pusha
push
data16
xchg
lock
popa
cmp
adc
lods
fdivs
inc
jae
xchg
das
add
je
pop
arpl
mov
and
cmp
jl
cmc
xor
aaa
mov
sbbb
xchg
push
adc
jp
and
rcrb
icebp
loope
outsb
ret
or
or
push
and
jnp
pop
xchg
push
pop
pop
and
popa
sbb
pop
iret
subb
adc
xchg
frstor
inc
je
xor
push
cli
repz
clc
gs
lret
push
into
js
and
and
in
dec
sub
add
addb
fimull
push
xchg
add
or
clc
jno
not
push
xlat
lret
inc
push
cmp
push
or
addr16
mov
cmp
mov
mov
aad
dec
or
xor
jp
ss
xor
lcall
xchg
xor
xchg
xor
and
adc
lods
fsubrs
stos
mov
sti
dec
pop
pop
das
rcll
xchg
sub
and
inc
push
and
outsl
adc
add
sbb
push
add
cmpsl
inc
ljmp
lret
mov
icebp
sub
fcoms
xchg
bound
push
pop
ret
mov
mov
ret
xor
and
hlt
ficompl
test
aad
lds
pop
mov
ret
pushw
xchg
xor
dec
sbb
adc
cmc
xchg
js
pusha
pop
push
xchg
arpl
dec
inc
mov
mov
stos
pop
leave
out
in
mov
xchg
dec
pop
cmp
insl
in
and
scas
and
imul
pop
sahf
hlt
cmc
fcomps
push
cmp
xor
test
sub
lahf
iret
das
sbb
lret
loopne
xorl
js
rcll
xchg
or
pop
shll
out
xor
int3
mov
mov
mov
mov
fmul
loopne
push
and
popa
rol
loopne
push
pop
xor
vcvtdq2ps
mov
shl
push
out
xor
pusha
jo
mov
int3
pusha
jo
cmp
cmp
loopne
push
jmp
sub
jo
sbbl
iret
loopne
push
mov
mov
push
xor
fisubs
adc
sbb
mov
sarl
jmp
ficomps
or
xor
shl
push
pop
xor
or
and
loopne
push
fisttpll
and
inc
scas
bound
movsl
or
sbb
xchg
fistps
and
and
cmpl
or
addr16
xchg
jo
xor
mov
ds
xor
loopne
push
add
sbb
lret
add
lahf
aaa
mov
xchg
xchg
mov
push
mov
pop
jne
xor
flds
ffree
mov
jp
test
push
arpl
icebp
rcll
sub
insl
mov
mov
push
outsb
xor
hlt
outsl
fcmove
jl
mov
out
enter
insb
jo
pop
inc
addr16
or
lcall
sub
movsb
mov
mov
xlat
mov
jnp
push
cmc
fnstsw
flds
sbb
jns
mov
inc
loop
pop
ja
dec
sbb
push
mov
and
push
pop
rclb
push
pop
cwtl
jp
sbb
add
mov
andl
dec
dec
out
insb
and
pushf
outsb
push
fcomps
cmpsb
jbe
pop
aas
or
sub
dec
xchg
sbb
push
test
push
sbb
ret
fimuls
notl
loope
in
jae
shll
repnz
aam
xor
xchg
cmpsb
xchg
sub
cmp
pop
pop
cmpsb
and
mov
mov
jge
and
scas
dec
push
aaa
xor
lock
loopne
xor
jae
lret
push
inc
pop
push
xor
dec
xor
dec
push
out
inc
jmp
lods
test
adc
jno
add
mov
sbb
sub
sub
mov
inc
add
movsb
scas
test
fsubs
adc
je
xor
pop
mov
mov
in
sti
call
es
jg
cmp
test
popa
jle
dec
into
bound
cmp
mov
or
cmpl
das
loopne
cs
roll
fcmovnbe
xchg
mov
lock
stos
lret
and
dec
incb
add
jo
test
fbld
jb
pop
ja
repz
out
dec
add
icebp
fistpll
and
push
stc
or
cmp
jns
ja
sahf
aas
xor
dec
pop
in
inc
aas
ss
mov
test
mov
rorl
sub
iret
jo
jne
adc
fldl
jg
imul
mov
adc
aam
cmpsl
ret
and
sbb
pop
xchg
enter
or
cmp
xor
push
jb
xchg
cwtl
push
pop
mov
mov
mov
fcoml
ror
adc
dec
push
emms
mov
imul
loopne
jb
xor
sub
pop
push
pop
pop
shl
push
bound
jg,pn
lahf
pop
inc
inc
add
movsl
pop
push
dec
ja
jns
adc
addr16
adc
scas
loope
jnp
addr16
lods
je
and
gs
sbb
jb
inc
jp
jno
mov
lds
pop
cs
sbb
aam
sbb
dec
jno
in
push
cwtl
mov
idivl
inc
mov
inc
mov
lds
rclb
lret
mov
fdivrp
lods
xor
mov
xchg
or
fld
out
pop
dec
int
mov
push
adc
hlt
lret
mov
stos
pusha
mov
notl
ror
mov
ret
cmp
ret
xchg
adc
and
bound
mov
scas
cmpsb
mov
xor
pop
jbe
push
sti
bound
xchg
lret
ficoms
imul
rclb
lret
push
mov
or
lret
in
loopne
inc
popf
das
cmp
sbb
clc
jno
push
ficoml
daa
add
and
cmc
adc
cmpsl
jne,pt
push
mov
or
insl
or
test
sub
fadd
push
je
jo
es
xor
or
into
xchg
sbb
push
mov
loop
gs
enter
in
push
pop
inc
sub
neg
mov
pop
push
sub
push
call
dec
adc
xor
jnp
cld
xchg
inc
pop
xor
sbb
mov
dec
xor
or
or
xor
rcll
xchg
imul
xor
popa
mov
ror
mov
in
lret
or
inc
push
lea
ret
rcrl
pop
sar
in
dec
mov
ret
mov
lea
lret
sbb
notb
mov
insb
inc
xor
shrl
and
sbb
sbb
mov
jmp
and
push
mov
test
mov
pop
testl
in
nopl
pop
arpl
aaa
sub
and
xchg
daa
mov
mov
mov
bound
mov
dec
push
mov
sub
imul
dec
jbe
dec
mov
lret
daa
xchg
sbb
inc
mov
xchg
insb
or
popa
jge
lods
test
nop
arpl
xor
rcrl
cli
les
xor
lahf
push
mov
jmp
adc
ret
sub
cmc
repnz
sub
and
sub
jle
push
push
xor
xchg
jl
aam
or
mov
cmpsb
push
jb
rcrl
pop
das
inc
dec
xchg
adcb
dec
jno
stc
fs
push
or
insb
bound
pusha
jae
sbb
scas
sub
aaa
inc
xor
rcll
and
add
fwait
and
inc
inc
xor
sub
cmp
imul
inc
cmpb
addl
ljmp
inc
jae
pop
push
mov
into
lea
aaa
xor
dec
and
mov
test
sub
popf
repz
pop
ljmp
mov
adc
mov
scas
clc
std
jg
popa
dec
dec
cs
test
mov
fisttps
pop
or
fwait
pop
int3
mov
scas
push
mov
pop
mov
imul
mov
loopne
in
xor
jp
icebp
cmpsl
sbb
mov
daa
ds
push
divb
push
jno
insb
xchg
das
jno
into
mov
scas
mov
addr16
mov
mov
pop
mov
cmp
mov
cmp
lea
lret
sbb
cmp
xor
jno
sti
jae
push
test
popa
movsl
ljmp
push
aam
xor
lahf
stc
jl
push
les
ret
je
mov
sti
cli
cli
xchg
ss
stos
push
adc
mov
jns
add
xchg
iret
adc
or
sub
int3
push
movsl
mov
mov
loope
or
sub
cmp
adc
dec
cmpsl
dec
adc
stos
out
loopne
inc
xor
into
sbb
add
xchg
mov
lret
leave
mov
push
icebp
xchg
rcll
cmpsl
dec
jbe
sbb
mov
xor
jnp
jp
sub
jmp
out
add
pusha
fstpt
xchg
ss
mov
movsl
push
xchg
xchg
xor
test
js
xchg
mov
inc
pushf
push
out
xchg
aas
xchg
sbb
dec
adc
push
ds
mov
xor
stos
rcrb
fwait
jno
xchg
and
xor
push
jg
and
lods
push
and
jge
cwtl
pop
fs
js
insb
out
jle
pop
or
adc
lods
repnz
jae
xchg
mov
fildll
fs
jae
mov
pop
fnstsw
xor
mov
into
sahf
rol
repz
shr
les
clc
and
fwait
sub
push
xchg
test
sub
out
mov
pop
test
mov
or
xor
clc
mov
jb
cltd
and
out
dec
nop
cmpsb
cmp
outsl
jecxz
sbb
jl
andl
mov
xor
das
les
and
cwtl
xchg
pop
ds
popa
pop
insl
ljmp
pusha
xlat
into
scas
add
mov
jb
scas
or
push
pop
addb
cmp
mov
hlt
xchg
lcall
xor
pop
jp
sub
stc
flds
ja
mov
gs
inc
fdivrs
stos
push
lret
jmp
inc
lret
sahf
adc
scas
add
daa
sub
movsl
and
loopne
mov
mov
inc
and
mov
xchg
pop
push
ret
outsl
fcoml
jns
mov
shlb
out
loopne
adc
jle
pop
push
fdiv
in
sub
fdivrs
add
aam
ja
shl
pop
xchg
xorl
movsb
rcrb
shrl
dec
gs
mov
stos
push
inc
xchg
scas
xchg
repnz
inc
add
je
ljmp
ret
notl
jmp
test
dec
cmpsb
lret
mov
sahf
repnz
pop
mov
mov
add
add
daa
sbb
mov
inc
and
rcrb
jl
or
push
movsb
sub
ret
jae
rsqrtps
xor
lret
pushfw
sub
or
test
xor
sub
mov
and
and
and
cwtl
sbb
cmp
arpl
insl
stc
jo
movsb
pop
adc
lahf
int3
mov
das
push
mov
dec
add
inc
ds
push
gs
je
les
fiaddl
pushl
scas
xchg
and
mov
mov
fsubs
pop
addb
sahf
cs
out
adc
mov
mov
mov
je
std
dec
sub
push
or
push
mov
test
cmp
cli
adc
inc
and
ret
push
jl
jno
jge
xor
mov
add
aas
ffree
mov
ror
mov
jmp
cld
sahf
test
dec
js
ret
xor
and
sub
adc
dec
clc
mov
add
pop
pop
sbb
push
ret
xor
xchg
lock
adc
mov
push
dec
mov
sbb
xor
outsb
xchg
jl
ret
push
xchg
jo
negl
xchg
dec
clc
jge
jnp
cmp
loope
sub
mov
bound
mov
lret
aaa
or
mov
mov
sbb
push
push
test
dec
sub
dec
mov
push
pop
sub
mov
push
jge
out
rclb
mov
aas
mov
lea
inc
fidivrs
xor
inc
fs
pop
and
lahf
fsubrl
cmp
imul
cmp
pop
add
dec
mov
iret
enter
cmp
enter
lret
lods
xor
or
int3
cltd
adc
mov
clc
add
dec
push
or
inc
xchg
pusha
mov
mov
test
stos
and
cwtl
icebp
dec
push
lds
outsl
and
out
cltd
cmp
daa
repnz
push
lds
cmp
pop
movsb
xchg
adc
push
lea
cmp
loop
and
gs
or
std
jb
test
xor
jecxz
jmp
fst
mov
mov
push
xchg
ja
sbb
xchg
mov
or
loope
xchg
adc
adc
sub
mov
xchg
loopne
add
test
mov
negb
pop
mov
iret
es
sbb
xor
or
pusha
adc
orl
addr16
jns
mov
mov
bound
test
mov
jp
dec
fwait
pop
and
and
inc
mov
add
sbb
pushf
repz
inc
adc
sarl
mov
test
mov
rcrb
mov
push
sbb
or
adc
xor
rcrl
pop
jp
adc
and
andl
adc
fists
and
dec
mov
in
es
mov
nop
sar
jne
nop
add
repz
fbstp
pusha
aaa
clc
dec
xor
sub
inc
aaa
mov
push
arpl
jge
dec
scas
sub
das
jns
imul
pop
ljmp
cmp
and
in
je
mov
mov
inc
aaa
push
mov
cwtl
les
xor
mov
arpl
and
adc
int3
sub
ret
mov
dec
int3
or
aas
adc
pop
pop
int
test
scas
adc
out
cmp
iret
adc
mov
imul
jmp
lret
dec
andl
mov
push
enter
call
mov
bound
inc
fs
gs
or
test
dec
adc
in
cli
data16
enter
int3
jge
mov
pop
lret
fcompp
lea
mov
xor
sahf
adc
es
dec
test
xchg
in
mov
dec
jmp
sub
and
adc
xor
ret
loopne
xorl
in
mov
sbb
cmp
add
dec
sbb
in
lock
or
xor
pusha
adc
out
cld
es
sbb
lcall
dec
bound
cmpsl
sbb
jbe
push
xor
loopne
push
dec
xor
sarl
rcrl
sub
enter
stc
pop
adc
xchg
sbb
arpl
mov
or
sub
ret
jo
in
push
je
out
push
loope
outsb
mov
aam
insl
in
xchg
mov
cmp
lret
adc
push
adc
cli
adc
bound
xchg
xchg
lods
xor
sub
fisttps
mov
inc
aad
add
repnz
stc
push
push
pop
lahf
cld
sbb
lods
test
ficoms
sahf
inc
cmp
pop
mov
hlt
sbb
enterw
das
lret
jb
js
lret
out
mov
dec
cli
jo
popa
mov
or
lahf
xchg
sti
jmp
inc
add
out
lock
in
inc
imul
dec
jl
xchg
pop
sbb
cmp
js
lods
push
loope
movsl
inc
or
in
mov
dec
test
insl
pop
and
push
push
scas
lods
ja
data16
dec
mov
push
gs
pop
ficoml
and
cmp
mov
mov
lock
lods
xchg
gs
mov
push
dec
or
sub
inc
xor
js
ret
mov
and
dec
mov
pop
xchg
inc
jo
out
call
dec
mov
adc
pop
xchg
xorb
mov
mov
pop
add
ss
jns
int
push
adcb
adc
inc
in
rolb
xchg
add
sbb
mov
mov
sahf
adc
inc
insb
shlb
sub
jbe
jp
add
mov
cmp
jne
add
xor
sub
test
aad
ret
xor
jne
fs
push
and
lds
push
xchg
imul
xchg
adc
mov
sub
aam
and
sub
imul
mov
xchg
ret
push
loopne
xchg
iret
dec
inc
idivb
outsl
rcrl
lahf
xlat
fucom
rcrl
sbb
mov
mov
insb
psubsw
mov
movsb
flds
imul
push
jnp
xor
stc
mov
and
mulb
ret
cmc
adc
rcrl
repz
jo
jne
addr16
sub
add
dec
inc
or
mov
mov
jnp
into
out
mov
aas
out
jne
or
lcall
das
ret
jle
sarl
and
out
les
aas
mov
iret
mov
lods
adc
jl
jmp
jne
push
repnz
sbb
pop
xchg
popa
pop
jae
and
dec
mov
cmp
fbld
xchg
dec
lods
jne
push
mov
dec
neg
lret
iret
or
xor
out
lret
loope
inc
fiaddl
ljmp
jg
mov
cltd
pop
mov
call
push
sqrtps
jb
push
mov
sub
rep
dec
jns
dec
push
sbb
shll
mov
ret
xchg
outsb
repnz
mov
sti
sti
jp
xor
stos
aaa
ds
push
fcom
mov
jo
push
sti
mov
inc
fs
sub
pop
mov
lock
add
lods
int
movsb
xchg
out
pop
shlb
lock
inc
mov
xor
rcl
jae
dec
outsl
or
out
sub
mov
daa
sub
scas
movsb
jb
mov
push
add
and
arpl
aaa
adc
inc
sahf
popa
insb
sub
cmp
sbb
lcall
jae
scas
cmp
in
jne
xor
dec
pop
loopne
divb
shr
outsb
mov
mov
ret
or
and
shlb
insl
lock
pop
or
add
jmp
pushf
aas
jno
ret
pop
data16
pop
gs
int
adc
popf
out
iret
repz
in
jae
mov
iret
leave
pop
in
or
dec
jns
ja
ret
push
jl
mov
cmpsl
cmp
sbbb
repnz
push
shld
ret
adc
jnp
loopne
das
pop
popa
or
es
fwait
cmp
push
pmaxsw
aad
cmp
lret
xorl
and
in
jo
pop
iret
sbb
imul
cmc
xchg
ja
dec
clc
js
call
pop
fprem1
jb
in
sbb
sbb
xchg
cmp
inc
gs
inc
mov
test
lahf
rcl
mov
std
sbb
and
or
out
ficompl
fdivr
es
add
fiadds
test
push
sarb
int
mov
push
sub
push
sti
fdivrl
scas
add
sbb
push
jp
je
sbb
mov
test
dec
pop
sub
cmp
bound
scas
sti
cs
in
or
cmc
inc
cwtl
sub
icebp
es
mov
test
jecxz
das
loopne
arpl
test
jmp
add
xchg
fwait
shlb
adc
xchg
cmp
mov
cltd
rcrb
popa
scas
subl
xchg
push
or
xlat
ja
out
mov
cwtl
int3
loopne
insl
enter
pop
sub
sbb
cld
rcll
aaa
imul
dec
mov
xchg
xor
mov
rorl
inc
out
cmp
mov
popa
add
jecxz
mov
pop
sti
jno
adc
test
imul
sbb
add
jo
dec
into
js
das
sbb
nop
xor
lds
repnz
imul
cmp
int
cmp
andb
sbbl
sar
es
fistpll
push
addr16
pusha
outsl
push
ljmp
mov
imul
lock
lret
xchg
jl
xlat
push
in
mov
inc
xor
imul
hlt
inc
cmpsb
mov
mov
or
pop
lods
es
pop
mov
ret
andl
mov
push
mov
dec
jb
jl
xlat
clc
adc
iret
ljmp
fcmovnu
xorb
nop
jecxz
xor
inc
pusha
bound
lock
mov
cmpb
test
outsb
pop
mov
push
insl
and
xlat
pushf
pop
add
jb
lock
movsl
stc
arpl
inc
mov
mov
fildl
cs
lock
push
std
xchg
pop
mov
fwait
test
mov
mov
popa
popf
mov
push
jp
lods
pop
sbb
cmpsl
lahf
dec
rolb
andb
or
or
add
dec
mov
dec
repnz
jb
or
mov
std
push
cld
mov
mov
out
xchg
inc
cmpps
add
nop
pop
out
into
sbb
jae
xchg
in
xchg
adc
pop
pop
arpl
mov
xchg
addl
daa
pop
jb
xchg
clc
dec
sub
jnp
inc
mov
bound
jns
and
out
lock
dec
rclb
xchg
ret
inc
lret
sub
cmp
lret
insl
test
xchg
ss
pop
dec
repnz
cmpsb
xchg
or
push
mov
loopne
fiaddl
out
scas
das
call
mov
mov
andl
lea
pop
enter
add
pop
fwait
arpl
stos
sub
test
add
cs
or
mov
cmp
sbb
jmp
pop
sub
add
adc
jg
std
loope
adcb
ss
leave
call
ret
fimuls
inc
aaa
hlt
ret
xchg
out
and
jmp
mov
repz
fists
inc
mov
into
dec
in
mov
jg
hlt
adc
sti
sbbb
orl
mov
ss
pop
pop
mov
test
jecxz
test
xchg
notb
push
and
jns
shr
pop
nop
push
repnz
jp
cmc
lret
mov
xchg
std
xchg
jge
pop
jmp
mov
dec
adc
mov
xor
arpl
dec
jns
movsl
sbb
cs
hlt
mov
push
lock
popf
fwait
loop
aam
fadds
test
cmpsb
mov
xor
xlat
push
mov
clc
cwtl
dec
xchg
push
adc
push
jp
je
sbb
jnp
jle
insb
mov
pop
int
or
fs
and
sbb
ret
mov
pop
stos
shlb
movsb
movsl
jns
push
in
ss
imul
cmpl
das
add
out
popf
in
and
inc
xor
shl
pop
arpl
and
sbb
mov
dec
xchg
jbe
xchg
iret
add
in
shl
daa
icebp
and
sti
leave
jle
adc
sub
mov
test
push
sbb
inc
lahf
mov
shr
lret
outsb
dec
outsl
sbb
cltd
ds
add
xor
or
test
lahf
pushl
cld
xchg
fstpl
push
dec
mov
jmp
ljmp
and
test
mov
and
jbe
test
pop
int
add
loopne
test
mov
dec
xchg
adc
loopne
cld
push
jo
mov
dec
ficoml
cmp
fnsave
arpl
mov
faddl
call
xor
xchg
jecxz
sbb
popa
mov
pop
jno
jle
insl
hlt
mov
loope
add
aas
cld
mov
out
iret
lock
jno
and
sbb
and
cmp
insl
jl
pop
movsb
mov
and
push
mov
push
stos
jl
mov
sub
and
mov
ror
mov
daa
lods
fistpll
or
add
pop
gs
repnz
add
and
jno
pop
adc
icebp
outsl
inc
xchg
out
outsl
xchg
call
inc
fiaddl
dec
ret
sti
jnp
jb
mov
adc
mov
push
shrl
lds
sbb
mov
in
ss
mov
fs
out
mov
popf
fisttps
call
cwtl
enter
in
int
adc
cmp
shl
fnstenv
aas
mov
xchg
or
jle
fisttpl
mov
std
ss
out
fcomps
cmp
jo,pt
and
aas
popa
ja
fildl
test
lret
mov
xchg
xchg
jge
aas
pop
mov
cmp
jp
movsb
lret
pop
xchg
fwait
hlt
push
faddl
mov
sub
decb
jo
out
add
lahf
mov
bound
movsl
loop
jns
ds
stos
outsl
arpl
icebp
pop
pusha
sub
cmp
dec
jmp
outsb
fmuls
add
adc
xor
push
gs
shrl
cs
mov
outsl
stos
sub
insb
fbstp
mov
dec
xchg
out
shll
jns
cmp
movb
sbb
mov
jnp
and
int
outsl
sar
inc
pop
pop
push
mov
sub
mov
cmp
pop
or
or
pop
jnp
pop
dec
mov
add
sub
sub
lds
loopne
into
push
call
push
or
insl
into
adc
mov
loopne
mov
jnp
and
cwtl
data16
push
loop
mov
loope
repnz
enter
test
xor
cmp
ret
addr16
and
and
mov
inc
push
lahf
aam
mov
dec
in
bsr
mov
adc
sbb
dec
rcl
adcl
xor
xchg
bound
or
dec
gs
orl
cvtps2pd
jno
lock
xchg
dec
add
mul
mov
cli
pop
mov
out
fdivrp
dec
jns
cli
in
insb
cli
les
rol
fisttpll
mov
push
repnz
loope
mov
call
xor
pop
mov
iret
lcall
add
rcll
lods
cmpb
cmpsl
ds
lret
and
sub
test
mov
rcrb
push
xchg
mov
jo
adc
mov
mov
add
xchg
xor
adc
rol
mov
sub
mov
sub
xor
call
push
mov
icebp
fistpl
add
pop
cwtl
push
add
xchg
add
cmc
notb
mov
push
fmuls
in
push
scas
mov
push
push
lea
push
jbe
dec
xor
stos
adc
xchg
hlt
xchg
pop
cli
in
incl
dec
mov
faddl
pushf
aad
mov
ljmp
jecxz
mov
movsl
sbb
pusha
sti
subb
mov
jp
mov
mov
out
mov
lods
outsl
jno
push
inc
xchg
sub
jmp
dec
push
iret
enter
cmpsb
mov
add
lods
pop
fstps
mov
mov
shl
dec
or
cmp
std
inc
dec
repz
xlat
adc
bound
stc
fistl
or
add
push
repnz
xorb
sub
jne
daa
data16
mov
lret
sti
aaa
pop
mov
fs
jle
lcall
scas
jecxz
movsl
or
cmpb
ss
mov
cld
sbb
cmp
mov
mov
test
stos
gs
lea
dec
lcall
aad
sahf
cmp
inc
jae
fsts
adc
nop
add
xchg
ljmp
xchg
addr16
test
and
or
in
ret
das
sub
xacquire
outsl
jl
cmpsl
mov
xchg
in
ja
cmp
inc
scas
int
loopne
frndint
imul
xor
or
inc
insb
adc
cmp
add
mov
ror
adc
pushf
adc
loope
int
and
adc
push
or
in
insl
and
fnstsw
pop
mov
xchg
or
nop
or
mov
cld
rolb
mov
mov
mov
rolb
push
mov
dec
nop
cltd
stc
xorb
popa
or
jg
sbb
outsl
push
fdivl
mov
mov
mov
inc
push
ljmp
leave
push
lea
mov
std
dec
push
jbe
shlb
jo
data16
pop
push
js
int3
jns
cmp
sub
aam
sbb
stos
sbb
shlb
push
arpl
fwait
dec
xor
cmpl
adc
cltd
push
lcall
test
xor
jg
xchg
mov
imul
adcb
add
or
adc
add
and
jmp
mull
or
icebp
push
out
fimull
adc
gs
je
fcomps
cmp
loope
mov
pusha
pop
sub
jmp
js
lret
aaa
fs
add
fidivs
outsl
jmp
dec
jmp
mov
out
sub
add
xor
std
push
fidivrl
jne
cld
fstpl
sub
mov
adc
dec
adc
dec
scas
ja
sub
sbb
outsl
inc
stos
fistl
xor
sbb
outsb
lock
jae
sub
movsb
mov
ret
testb
and
out
add
lea
adc
mov
sbb
loop
aam
imull
hlt
push
ficomps
cmpb
jo
push
xchg
mov
or
repnz
jnp
add
xor
dec
mov
add
jo
ret
fldl
inc
arpl
add
insl
sbb
pop
add
mov
inc
insb
mov
inc
test
movsl
jno
nop
pop
loop
icebp
lret
push
out
test
sub
push
mov
out
test
jnp
jecxz
enter
push
bound
jle
xchg
jl
sbb
lods
push
neg
enter
add
xor
jns
pop
imulb
pop
mov
sbb
mov
xor
mov
sbb
add
mov
sub
insb
lea
and
popa
je
daa
mov
lcall
pop
ds
in
ss
dec
cmp
xor
jg
hlt
out
push
insl
stc
daa
int
add
inc
or
push
rcll
adc
jb
insl
sbb
sbb
js
pop
or
adc
and
es
cmc
dec
cmpsl
or
and
jge
lret
divb
sub
add
cld
add
out
and
not
das
sbbb
lret
xchg
std
pop
mov
xchg
std
jbe
ret
jp,pn
cmpsb
sahf
rcrb
sahf
pushf
cwtl
dec
fistpll
fs
sbb
int
inc
sbb
xor
lahf
mov
jbe
stc
sub
or
sahf
movsb
dec
enter
adc
jo
sub
leave
jmp
fcompl
insl
mov
xchg
jo
xchg
pop
ret
mov
in
ds
iret
loope
das
enter
arpl
out
aas
lret
in
jo
ljmp
imul
and
mov
inc
jbe
movsb
mov
js
cmpsl
dec
sbb
adc
inc
ret
mov
cmp
dec
js
jne
ret
push
and
insl
mull
sub
mov
push
lahf
aam
repz
jle
cmp
or
xchg
jecxz
int3
mov
imul
std
xchg
push
push
fs
sbb
call
and
lret
rolb
add
cmc
out
add
imul
pop
in
imul
loopne
es
add
mov
sub
mov
xor
mov
jecxz
inc
add
and
mov
shlb
adc
ret
pop
mov
andb
enter
jmp
lock
popf
inc
xchg
neg
shll
sub
nop
inc
fdiv
or
hlt
shlb
adc
sti
inc
loop
jno
jmp
rcrb
mov
jmp
cwtl
jo
in
aam
aas
add
repz
in
sbb
fwait
lahf
outsb
cmp
shlb
or
push
xor
std
add
popf
inc
push
fistps
xor
dec
mov
push
aad
int
imul
imul
movsl
jecxz
pop
insb
lds
jo
adc
mov
sarb
xchg
sbb
clc
cmp
lock
mov
fisttpll
addb
outsl
sub
add
cmc
mov
loope
sub
ficompl
mov
add
sbb
adc
insb
mov
mov
loop
xchg
add
std
inc
jnp
daa
cmp
and
mov
lret
mov
mov
xchg
test
pop
pop
pop
out
out
jns
lods
xor
xchg
mov
aam
cmp
repz
orb
mov
pop
outsl
je
xor
push
cs
xor
dec
or
popf
xchg
push
mov
pop
jp
mov
mov
lods
mov
aaa
insl
scas
xor
pop
jmp
scas
out
push
xchg
mov
push
inc
mov
fwait
aas
gs
movsb
push
inc
add
ss
sbb
push
push
cwtl
or
scas
cmp
push
popf
stos
sbb
mov
or
inc
cmp
jbe
fwait
xchg
sub
iret
rcrb
insb
out
aas
ds
fxch
icebp
xor
mov
rorb
icebp
fldt
mov
mov
outsb
jne
xchg
mov
push
imul
hlt
pop
sbb
daa
pushf
testl
call
dec
mov
insb
lods
ja
and
push
ljmp
fnsave
in
mov
loop
inc
lahf
mov
mov
fdivrs
adc
cmp
clc
mov
stos
dec
jmp
icebp
fisubl
adc
xchg
adcl
mov
ja
xchg
push
xor
jmp
sti
dec
adc
mov
ds
lock
sbb
adc
cmp
aaa
ret
mov
lods
inc
adc
mov
scas
sub
imul
jge
adc
or
cltd
pop
pop
dec
stos
adc
dec
add
out
inc
rcr
mov
rcr
cmc
xchg
push
cmp
mov
mov
or
sbb
sbb
stc
pop
push
sti
mov
enter
das
popf
pop
adcb
stc
mov
push
push
idivl
mov
cli
and
inc
mov
neg
jge
rcl
pop
in
xlat
jecxz
cli
xor
out
inc
lods
fcomps
jmp
je
ss
shl
sub
and
and
sti
xchg
adc
js
sub
in
jg
out
popf
add
dec
sub
mov
stc
jmp
lahf
rolb
xor
push
je
scas
push
test
add
in
popf
js
xor
inc
sti
std
js
mov
jecxz
jmp
sub
je
jmp
xor
fnsave
orb
cmp
pop
fsubrs
add
xor
dec
jne
inc
outsl
jl
cmpl
sbb
push
cmp
mov
or
mov
dec
inc
insb
dec
ret
cmp
jbe
shlb
aam
mov
aad
xor
aas
jo
fisttps
mov
into
lock
dec
sbb
push
test
pop
lea
jnp
sahf
pushl
int
cmp
xor
iret
dec
repz
aad
xor
fidivs
movhlps
jle
push
dec
mov
xchg
add
mov
orb
mov
push
pop
movsl
repz
fldl2t
xchg
int
ret
mov
mov
incl
call
jg
push
mov
pop
adc
mov
push
hlt
je
push
sub
mov
xchg
or
jne
and
test
mov
or
popf
dec
into
xor
int
bound
shlb
push
pop
aaa
dec
shrb
and
add
inc
xchg
idivb
xchg
dec
pusha
add
adc
inc
andb
inc
push
adc
pusha
rolb
mov
push
pop
inc
mov
loope
daa
fidivs
or
loopne
mov
inc
lods
xor
inc
xor
stos
out
jmp
sahf
out
pause
jmp
out
ljmp
out
inc
add
jmp
jae
sbb
xchg
add
mov
outsl
add
jns
fwait
cld
addr16
push
scas
test
es
leave
fildl
ret
jg
mov
inc
sbb
jp
nop
push
pop
push
cmove
in
sarb
fbld
mov
jl
pop
fldl2t
ljmp
mov
pop
iret
mov
out
mov
rcrl
pop
nop
inc
cmp
lds
ss
pop
clc
mov
mov
cmp
jle
pop
xchg
testb
jno
sub
mov
scas
cmp
scas
in
push
inc
test
les
nop
xlat
mov
fwait
jge
arpl
call
leave
jb
xor
repnz
into
ss
adc
jge
stos
mov
int
out
je
int3
sbb
push
in
je
add
out
fidivl
push
cmp
xor
addr16
xchg
jno
xor
add
add
jp
iret
lfs
inc
add
push
fsubr
push
xor
add
leave
sahf
mov
arpl
icebp
call
outsb
jae
into
dec
int3
iret
adc
or
mov
es
mov
leave
mov
push
hlt
mov
pop
loop
add
loope,pn
pop
repz
negb
adc
jne
sub
xchg
dec
xchg
mov
adc
adc
xor
dec
cld
add
popl
ror
gs
insl
addb
lcall
and
xor
sahf
lock
inc
xor
rep
or
scas
incb
cmc
or
inc
xor
fldcw
jle
popa
dec
jecxz
pop
leave
add
outsl
mov
push
push
incb
pop
xor
sbb
inc
dec
xchg
sub
ret
sahf
push
das
inc
adc
cmpsb
push
ljmp
loope
int
arpl
call
iret
mov
jg
mov
push
in
ret
movsb
stc
mov
pop
in
mov
mov
mov
das
fmulp
ror
jo
clc
lods
add
dec
inc
insb
je
ret
mov
cmp
lret
fisttpl
push
ljmp
xchg
xlat
test
cmp
loope
out
divl
mov
mov
cmc
sub
addl
test
dec
daa
test
mov
insb
subb
or
cmp
lret
cmp
jmp
lahf
fwait
pop
shrl
lret
movsl
add
mov
xor
xor
bound
outsb
sar
aaa
stc
movsl
jno
mov
rorl
sti
pop
fimull
int3
rol
in
fs
adc
add
mov
mov
aas
lret
mov
xor
push
divb
push
mov
mov
and
lock
mov
dec
push
xchg
stos
rorb
push
pop
movsl
lock
and
sbb
adc
add
psraw
jno
or
xor
pusha
jl
pop
push
lods
data16
pusha
sbb
or
mov
ja
aam
dec
cmpsb
in
mov
pop
shlb
pusha
std
push
movsl
cld
xchg
pop
jmp
push
insb
fcmovbe
and
fimull
inc
cmpsb
jno
clc
xchg
xor
mov
mov
adc
mov
push
jg
jl
out
in
sbbl
inc
push
ss
xchg
xchg
adc
aaa
testb
aad
mov
adc
addl
clc
aaa
xor
pop
dec
mov
dec
jo
mov
aas
pop
scas
or
divl
imul
jp
inc
xlat
xchg
icebp
dec
ror
and
jae
jle
jns
xor
stos
test
fucomip
test
hlt
adc
mov
pop
sbb
xchg
push
cmp
add
test
mov
mov
hlt
or
add
cmpsl
xchg
adc
inc
ds
mov
nop
loopne
xor
xor
mov
lret
cld
daa
jb
outsl
xchg
dec
shlb
outsl
js
adc
mov
jb
and
jne
pop
dec
cmpl
sub
inc
jmp
pop
adc
lods
in
das
scas
outsl
xchg
jno
out
in
mov
shl
xlat
jge
int
cmp
rcll
push
xchg
shl
out
in
sub
mov
loop
filds
in
out
dec
jb
scas
jg
inc
mov
cmpsb
popf
loop
jae
push
aad
adc
or
fidivs
je
add
adc
mov
mov
les
push
push
push
jp
or
clc
sbb
pop
push
leave
cs
adc
jns
pop
mov
mov
gs
rorl
cmpsb
out
jp
add
test
adc
sub
mov
in
cli
inc
hlt
and
push
dec
add
je
ret
inc
jb
sbb
jge
jb
inc
xor
addb
dec
stc
sahf
xor
out
shlb
push
adc
les
adc
push
push
orl
mov
aad
sarb
out
push
jmp
sub
popa
dec
lods
lret
pop
daa
mov
mov
sbb
xor
xor
ljmp
and
cmp
cmp
enter
add
xor
push
repnz
mov
mov
mov
add
push
xor
push
mov
add
in
jno
movsl
jnp
aaa
je
mov
js
test
mov
sub
adc
add
jmp
pop
xor
add
shlb
jle
popa
cmp
rcl
pushf
pop
mov
or
aam
jbe
sti
aaa
adc
rorb
les
cmp
adc
shlb
xor
fcos
push
testb
mov
fsubrl
nop
jnp
pop
push
mov
mov
test
inc
repz
xchg
lahf
push
xor
popf
xor
sbb
rorb
inc
mov
fimuls
sub
sti
mov
fisubrs
xchg
dec
xchg
repz
repnz
dec
mov
add
gs
pop
stc
lcall
mov
aas
sub
das
or
sbb
pop
jecxz
ret
in
fmull
xchg
daa
aas
dec
addl
stos
mov
daa
enter
fisubs
xchg
sbb
test
loop
pop
lcall
fxtract
call
pop
mov
ss
repnz
xor
out
ss
inc
inc
pop
dec
dec
fadds
or
loop
gs
in
outsl
mov
inc
out
fwait
mov
jge
and
add
mov
mov
push
cmp
fcmovne
std
scas
ficoms
cmp
ss
icebp
push
cmc
fidivl
cmpsb
subb
stos
outsb
inc
sarl
dec
jmp
cwtl
std
loope
out
cwtl
sub
jp
xchg
sub
mov
cs
jecxz
in
xchg
loope
dec
jns
or
cmpsl
repnz
mov
repnz
lcall
fisttpl
mov
cmp
rclb
jns
push
cli
push
adc
and
arpl
push
sbb
push
and
dec
mov
movhps
inc
sarb
jns
cli
sbb
or
and
push
pop
xchg
inc
clc
adc
dec
pop
shrb
das
bound
in
fidivl
inc
mov
repz
push
loope
scas
or
mov
mov
int
or
mov
nopl
hlt
push
movsb
pop
xchg
mov
xor
scas
movsb
lret
aam
les
push
fs
mov
mov
repz
fcoml
loop
sbb
js
out
xor
sub
mov
int3
pop
movsl
mov
jae
loop
lret
ret
mov
or
mov
gs
mov
lret
sahf
mov
cmp
shll
xchg
lea
xchg
inc
sahf
push
sbb
xchg
xchg
in
inc
test
mulb
loope
lret
sub
xchg
pop
rcrl
mov
out
cmp
pushf
movsb
xchg
repz
divl
mov
push
pop
andl
push
out
dec
and
jae
popa
push
sbb
adc
mov
mov
lcall
loop
scas
mov
mov
mov
xor
xlat
inc
mov
mov
adc
adc
cmp
sub
lret
push
xorb
cmp
and
lock
repz
xor
xchg
fdivrs
xor
dec
hlt
subb
es
xchg
or
sub
xlat
xor
ret
punpckhbw
and
js
stc
int
mov
cmp
lds
fcmovnu
xchg
mov
dec
cmpsb
jmp
pop
aas
test
mov
addb
movups
icebp
sbb
dec
divb
pop
jp
in
push
into
cmc
ljmp
or
cmpsl
loop
std
add
ret
fidivl
movb
pusha
pushl
das
idivb
dec
pop
ss
jb
das
xchg
lods
pusha
scas
test
push
cwtd
shlb
jg
in
jmp
sub
aaa
mov
and
ja
loop
jns
push
int3
pop
aas
mov
jno
lds
inc
int3
xchg
add
inc
dec
cmp
in
push
sub
ret
inc
inc
out
andb
and
cmp
hlt
frstor
inc
cmc
ljmp
fstl
push
xacquire
sbb
negb
xor
stos
pop
xor
mov
movsb
in
cwtl
imul
xor
dec
mov
iret
sub
adc
push
sahf
mov
stos
sub
stos
out
pop
lods
es
pop
das
mov
adc
xchg
adc
aam
lods
cmp
or
testb
lods
jg
mov
cmc
jno
insl
addb
xor
ret
mov
mov
ret
jae
jecxz
addr16
cmp
add
push
in
xor
jae
mov
inc
rolb
push
in
and
sbb
mov
mov
mov
icebp
pop
test
xlat
xchg
testl
sbb
je
adcl
dec
mov
sub
mov
jge
jne
std
add
mov
mov
test
outsl
xchg
adc
iret
xchg
jp
and
insb
xchg
jne
jnp
cmp
pop
dec
or
jmp
jl
pop
imul
mov
sub
addl
or
mov
repz
pop
mov
sbb
sub
out
vhsubpd
rcll
dec
cli
and
shll
in
icebp
xabort
mov
lods
fistps
lahf
ljmp
mov
add
jg
lcall
pushl
iret
movsb
int
sub
cmp
pop
dec
aam
jg
inc
mov
shr
dec
pop
clc
xchg
fimull
loop
cld
jne
dec
adc
fiadds
jmp
mov
or
mov
sbbl
xchg
icebp
push
insl
lds
into
and
jbe
jbe
setge
pop
adc
mov
pusha
pop
inc
arpl
iret
xchg
inc
icebp
cmpsl
dec
push
mov
ljmp
fwait
cli
in
pushl
sub
mov
xchg
sbb
test
subb
hlt
pop
dec
cmp
dec
scas
sbb
clc
jmp
sbb
icebp
bound
adc
xchg
dec
shll
xor
jo
xor
mov
mov
lahf
adc
test
adc
mov
xor
mov
cmp
pop
jno
enter
xor
rolb
dec
stc
pop
arpl
shrb
gs
xchg
rep
negb
inc
jle
loop
scas
test
dec
mov
loope
es
sub
inc
cmpsl
stos
adc
pushf
repnz
sbb
jb
decl
testb
mov
inc
inc
sbb
sub
mov
xor
int
xor
cmpsl
sub
fldl
fs
fstpt
lods
fnstsw
pop
jle
lods
mov
cmpl
insl
divb
outsb
push
icebp
shlb
jno
movsl
enter
lock
sbb
es
inc
lods
sti
shr
aas
inc
or
imul
jmp
push
fisubl
lea
add
cmp
or
mov
imul
loop
or
fldl
cmpsb
lret
and
jne
mov
and
jmp
mulb
add
clc
arpl
sbb
adc
xor
mov
scas
sbb
repnz
push
add
add
add
dec
mov
adc
push
shll
xor
popf
aad
gs
cmp
mov
aas
pop
shrl
pop
pop
xchg
mov
leave
div
iret
xor
sti
mov
stos
hlt
lea
xchg
pop
jns
lcall
shlb
shlb
lods
dec
mov
mov
mov
sahf
xchg
lds
fisubs
fisubrl
dec
cltd
repz
inc
add
sbb
es
sbb
fs
aam
aas
lret
jnp
fcmove
push
xchg
imul
lods
or
sbb
int
lea
fistpl
mov
mov
fwait
pop
xor
loopne
insb
dec
inc
sbb
je
repz
adc
pop
adc
es
mov
int3
jb
cwtl
push
aad
rorl
fldenv
pop
enter
xlat
sub
mov
sti
pusha
mov
pop
jge
sbb
incb
aaa
mov
filds
jge
loope
mov
pop
aad
push
jbe
bound
xchg
adc
inc
mov
jg
mov
ret
cld
dec
jae
fiaddl
imul
dec
ljmp
xchg
sar
pusha
dec
shll
jge
rorb
lret
scas
add
mov
mov
push
cmpsb
mov
sub
inc
imul
repz
push
insl
dec
in
in
jno
inc
loop
outsl
sbb
rclb
stos
test
hlt
hlt
and
dec
movsl
iret
cmpsb
adc
cmp
outsl
push
jbe
mov
stc
xchg
dec
fsts
cld
dec
cmp
mov
jne
in
enter
mov
push
ss
fucomip
enter
enter
or
movsb
cmc
fwait
inc
pop
outsl
mov
jp
xorl
mov
jmp
pop
xchg
pop
pop
and
mov
xchg
out
scas
mov
lret
idiv
xor
int
ss
sahf
xlat
add
inc
push
mull
and
arpl
push
mov
jmp
mov
cmpl
cmp
das
dec
icebp
jo
lds
add
inc
and
rcrb
nop
in
and
cli
push
xor
jg
test
sbbl
leave
adc
inc
dec
inc
or
cmp
push
loopne
mov
xor
repnz
inc
mov
mov
int3
lds
jno
punpcklwd
sub
pop
jle
jne
loopne
sub
into
lds
ds
sub
insb
cmc
stos
fcmovbe
dec
insl
pushf
cli
mov
fldl
pop
mov
jge
mov
lds
fmuls
mov
mov
cmp
subl
imulb
add
pusha
dec
sbb
stos
negb
js
jno
push
scas
loope
int
xchg
jmp
jne
sbb
hlt
insl
dec
loopne
repnz
jmp
pop
sbb
mov
sbb
dec
stos
or
xchg
dec
call
es
icebp
cmp
inc
lahf
jns
xchg
repnz
jge
jns
rclb
movsb
lahf
aam
or
daa
lcall
cmp
dec
mov
and
sbb
xchg
pop
mov
fdivrp
lea
mov
push
shll
mov
xchg
jmp
add
aam
mov
jns
dec
out
sbb
stos
mov
cmp
enter
aaa
in
mov
xor
ds
xchg
fs
bound
cmp
adc
iret
leave
sbb
inc
dec
int
jb
mov
mov
mov
xchg
mov
mov
sbb
jbe
imul
scas
prefetch
sbb
mov
dec
dec
push
jl
insb
jb
arpl
mov
push
inc
imul
push
xchg
stc
je
xchg
add
fidivl
lds
leave
or
dec
xchg
cmpsb
nop
mov
jp
ret
sahf
pop
sub
shrb
call
jecxz
and
insb
aaa
sub
test
inc
call
ret
lods
aad
dec
and
push
jae
dec
pushf
sar
fcoms
mov
push
fdivs
sub
cwtl
lods
addb
sbb
loope
xchg
js
mov
xchg
repz
in
cmp
fwait
xor
mov
jecxz
in
mov
scas
mov
pop
data16
pop
sbbb
push
addr16
mov
aam
repnz
inc
sbb
test
fcom
lahf
pop
lret
fiadds
sbb
sub
xchg
cmpsl
xor
jae
inc
xchg
bound
call
jge
pushf
inc
sub
pop
push
sub
fs
xchg
jno
lahf
pushf
mov
sub
aaa
and
aas
jmp
jp
jle
mov
rolb
xor
cmc
mov
and
int
jne
mov
test
roll
sub
pop
cmpl
xchg
cltd
andb
jp
mov
fs
adc
mov
int3
jo
jge
mov
xchg
arpl
movsb
fldcw
xchg
xlat
sti
lock
repnz
leave
loopne
addr16
test
or
and
xchg
xor
insb
adc
xlat
aaa
int
hlt
xor
outsl
and
dec
fidivrs
jns
cmpsb
stos
and
inc
addr16
mov
sahf
dec
mov
sbb
mov
cmp
dec
aas
daa
mov
and
icebp
pop
push
jmp
adc
push
sbb
mov
push
pushf
dec
fisttps
insl
ss
lret
out
loope
jns
inc
cltd
jp
jb
stos
xor
jbe
popf
jge
jle
inc
pop
pop
lea
and
lock
push
or
outsl
aas
adc
movsl
inc
jl
cmp
inc
and
push
push
mov
adc
and
xchg
cmpsl
ret
xor
subl
mov
pop
sbb
ret
pop
mov
push
jp
xor
push
inc
dec
dec
popa
imul
stos
xchg
sbb
push
xchg
jne
lea
pop
sub
push
pop
mov
inc
out
repnz
mov
push
pop
ljmp
imul
add
jnp
leave
outsl
jo
fucomi
sub
pop
rorl
iret
out
adc
fbstp
inc
or
dec
fwait
inc
add
or
lods
cmpsb
or
sub
fnstcw
loopne
or
repz
xor
sub
lcall
loope
fstl
gs
mov
lods
ror
les
dec
push
popa
sub
pop
cli
aas
jecxz
stos
sub
mov
push
scas
pop
insb
cmpsb
notl
push
imul
sbb
mov
jle
ljmp
sahf
cmp
xor
add
mov
xchg
mov
test
addr16
adc
mov
jo
jecxz
xorb
in
add
test
fsubs
pop
imul
jbe
out
call
aaa
mov
leave
cmp
inc
inc
cs
shrl
push
push
mov
sbb
pop
fucom
mov
mov
js
loop
ret
mov
dec
cmp
out
dec
leave
cli
ret
dec
outsb
mov
mov
pop
jb
repnz
xchg
jle
dec
xchg
mov
aaa
or
scas
dec
xchg
dec
jg
mov
pop
repnz
cmp
pushf
xlat
and
dec
cs
rcr
and
imul
xchg
and
xchg
aam
or
sbb
mov
in
aam
inc
imul
test
int
adc
sarb
mov
mov
cmp
xchg
loope
sbb
sbb
mov
out
sub
xchg
pop
cs
push
hlt
mov
jae
pop
add
call
lods
and
mov
out
mov
mov
or
inc
xlat
sbb
lret
sbb
filds
hlt
hlt
arpl
cltd
stc
pusha
call
in
fistps
jae
push
dec
rolb
dec
inc
cmp
cltd
icebp
hlt
push
xchg
cltd
in
sub
sub
aaa
mov
aaa
loop
std
nop
out
add
lcall
mov
out
scas
cmc
sub
add
jl
and
subb
mov
in
imul
add
div
inc
pop
sub
inc
xchg
sub
je
ret
sub
clc
add
cltd
pop
in
mov
mov
jnp
dec
int
jnp
push
stos
aaa
jnp
add
je
addb
lret
jbe
rcrb
pop
jl
sbb
inc
add
mov
dec
rcrl
cmp
shlb
inc
or
xor
cmp
cmp
and
jns
sub
xchg
jmp
icebp
out
arpl
mov
cmp
or
mov
mov
mov
repnz
test
cmpb
dec
shrb
mov
stos
lcall
stc
filds
jg
lods
xchg
push
and
xlat
cmp
pop
and
or
out
push
ss
sarl
jmp
dec
mov
decb
fildl
in
movsb
sub
jmp
add
xchg
into
dec
aad
repnz
sahf
icebp
xor
xchg
scas
enter
xor
cmpsl
mov
pop
imul
aam
adc
scas
cli
mov
jge
fs
inc
orb
popfw
mov
fwait
mov
inc
neg
mov
mov
sbb
push
mov
call
sub
mov
fwait
mov
pop
cli
adc
push
pushf
mov
nop
sar
rol
loopne
int3
push
inc
lea
inc
aad
cmp
lret
cltd
std
add
inc
jno
xor
mov
mov
push
in
or
test
or
cld
dec
mov
jecxz
fadds
sub
dec
in
arpl
sub
cld
sbb
dec
push
push
push
jmp
xchg
ds
mov
dec
pop
lahf
mov
xchg
ret
lcall
push
pushf
mov
sbb
mov
inc
sti
push
cltd
sbb
or
cmpsb
push
imul
and
jecxz
push
and
mov
cmp
adc
test
lret
push
jb
subl
lcall
out
scas
std
pop
idivb
pop
mov
fcomi
adc
lods
and
stos
je
xchg
shr
cmp
xlat
out
add
iretw
mov
jbe
cmpsb
adc
fisttps
stos
movsl
loope
fstsw
pop
pop
and
and
xchg
xlat
lods
enter
sbb
scas
sbb
fwait
test
movsl
cmp
mov
lods
frstor
bound
pusha
arpl
inc
dec
cwtl
js
sub
outsl
xchg
in
iret
dec
ljmp
dec
jne
movb
mov
cmpsb
bound
stos
adc
mov
adc
sub
lock
pop
rorb
js
in
mov
call
inc
mov
mov
fidivs
adc
inc
fwait
mov
push
call
sub
rol
bound
push
push
mov
push
add
scas
movsl
jmp
ret
hlt
in
rcrl
or
in
movsl
push
dec
mov
or
jnp
repz
push
divb
mov
push
mov
mov
cmc
addr16
scas
mov
inc
dec
shlb
sub
mov
les
cmc
add
jno
ja
sbb
sbb
roll
dec
imul
lea
ja
xor
repnz
nop
jmp
in
test
fbld
jecxz
test
jl
out
pusha
dec
push
xchg
sarb
aad
negl
xchg
jne
fidivrl
enter
cs
jge
stos
pushl
jne
jbe
aaa
jne
cli
push
or
lock
in
mov
fcmovu
mov
sub
cmp
mov
dec
mov
pop
cs
inc
adc
jae
scas
adc
sub
mov
pop
push
adc
out
xor
rol
loope
sbb
inc
test
in
inc
or
idivl
mov
movsb
fimull
add
mov
cmp
push
int
adcl
fcoms
inc
fmulp
insl
adc
ljmp
lods
adc
mov
sbb
inc
sbb
and
lcall
shll
or
mov
cmp
int3
stos
aas
in
test
clc
xor
outsl
cmpsb
and
push
pop
aas
lock
inc
addr16
jmp
or
lret
xor
aad
pushf
cli
cld
add
cli
test
xchg
loope
pop
and
xor
inc
sahf
sbb
jge
pop
shrb
les
out
int3
and
cmpsb
outsb
mov
leave
or
cs
test
mov
bound
mov
sub
jmp
das
fcmovbe
lea
ss
mov
xor
jecxz
adc
push
mov
aas
push
sbb
ret
movsl
hlt
adc
push
leave
popa
jmp
or
ss
push
cld
mov
xchg
loopne
push
cmpsb
insl
pop
sub
std
or
dec
jg
sbb
lock
xlat
or
sbb
push
sbb
outsl
rorl
inc
jbe
sub
cld
pop
mov
dec
in
sub
or
mov
movsb
movsl
inc
lahf
and
adc
into
cld
rcrl
jnp
pusha
lock
lret
cmpl
in
ret
xchg
fists
lods
cmp
dec
enter
iret
dec
adc
pop
bound
adc
mov
ljmp
sarb
in
stos
jg
or
scas
add
icebp
cmpsl
fwait
mov
jp
int
jmp
or
or
cmp
idivb
and
jnp
shll
mov
inc
insb
roll
and
xlat
inc
sti
lea
xor
xchg
mov
ret
mov
mov
pop
lret
sub
fmull
mov
movsl
dec
rolb
test
mov
out
stos
imul
out
out
xchg
movl
inc
loope
xor
cmp
out
and
mov
dec
pop
or
sub
adc
andl
mov
cltd
mov
mov
lods
xchg
sbb
dec
lea
push
push
jp
sbb
pop
notl
adc
inc
lock
xchg
ds
jmp
jns
push
cld
push
mov
mov
dec
cld
inc
out
cmp
push
dec
loopne
dec
cltd
cmp
jae
adc
mov
sub
enter
popa
ds
mov
cmp
inc
push
push
cmpsb
sub
or
in
and
mov
push
dec
jae
push
mov
push
out
outsb
lock
add
outsl
pushf
and
jns
xchg
push
popf
pop
sub
insb
cmp
movsl
mov
mov
cmc
insb
mov
jbe
jg
mov
adc
push
jl
mov
or
fldcw
adc
adc
stos
inc
lds
jecxz
mov
sbb
vpsllq
jbe
push
fisttpll
mov
ja
jo
rclb
pop
out
xchg
jle
imul
push
outsl
xchg
lock
lahf
loopne
push
inc
or
dec
loope
stc
xchg
mov
jnp
or
lret
stos
xor
stc
cli
xor
xchg
jne
inc
mov
dec
movsb
or
movsb
inc
inc
cs
jl
jo
out
dec
xor
mov
pop
inc
mov
push
or
sub
mov
les
and
in
in
mov
mov
fistpl
ljmp
pop
xchg
hlt
dec
popf
sub
sub
mov
add
push
roll
lods
lcall
cmp
fadds
rcrb
xchg
cmc
cli
adcb
in
jmp
out
or
push
into
cmp
push
outsl
andnps
mov
popf
xor
xchg
sti
dec
adc
jo
inc
pop
cmpb
cmpsl
inc
fsubs
and
fidivrl
mov
pop
mov
dec
xchg
mov
mov
fcoml
dec
mov
adc
into
lea
fs
pushf
xchg
jns
ds
test
inc
pushf
les
jo
in
xor
pop
arpl
jbe
inc
lret
insl
push
cwtl
xchg
imul
jecxz
insl
insl
shlb
imul
xor
jnp
outsl
js
cs
jg
lea
inc
jae
sbb
popa
jge
outsb
call
sahf
bound
or
dec
xchg
and
incl
cmpsl
rcrb
lret
fldt
inc
adc
or
dec
mov
push
xor
mov
out
out
mov
cmp
dec
or
xor
jo
clc
test
xor
inc
cmpsb
sbbb
and
adc
adc
ds
xchg
in
incb
cli
dec
lods
insl
cltd
into
mov
test
add
lret
and
imull
push
into
mov
stos
decl
and
mov
mov
dec
jns
dec
iret
push
pop
sub
and
enter
inc
sbb
in
loopne
pop
xchg
les
lret
sbb
xchg
jmp
jo
mov
mov
sbb
sbb
and
bound
loop
mov
sahf
mov
repnz
aam
mov
faddl
pop
into
jl
add
sti
xor
fildl
cmp
cmp
aaa
xchg
pushf
gs
dec
dec
into
lds
lods
movsb
jge
sbb
or
loop
push
jnp
xchg
mov
adc
repz
mov
xor
jl
out
mov
fs
lds
jo
in
mov
int
mov
push
dec
add
jl
lcall
lahf
inc
fsub
cmp
imul
outsb
jg
xchg
test
jle
jae
je
mov
dec
repz
push
ss
dec
sub
icebp
jle
lds
mov
jge
and
adc
mov
sub
dec
push
jmp
dec
insb
dec
arpl
clc
psrad
dec
call
cmp
jns
xchg
aad
scas
xchg
dec
rcrb
add
add
adc
jmp
jg
fidivrs
ret
jb
sti
lret
dec
adc
pop
stc
inc
icebp
xchg
xor
xchg
bound
lcall
pop
sbb
imul
int
mov
std
push
dec
cmp
xor
fcmovnu
mov
pop
outsb
out
and
test
frstor
mov
mov
push
mov
in
addb
inc
out
repz
insl
subb
fwait
sbb
adc
nop
jge
orb
mov
inc
cmp
mov
je
cmp
pusha
push
lods
int
sarl
lods
iret
jb
dec
pushf
xchg
aad
fdivl
fcmovne
inc
mov
mov
mov
jne
lret
pop
cmp
inc
inc
pop
sbb
push
mov
test
xchg
dec
mov
jge
mov
nop
sbb
jmp
xor
in
iret
sub
sbb
lcall
movsb
in
push
ljmp
jb
insl
jg
mov
rclb
aas
push
mov
mov
mov
cmp
mov
jno
int
mov
pop
out
mov
sbb
mov
imul
and
xor
push
ret
adc
add
mov
cld
shll
pop
in
or
movsl
jae
leave
push
sub
xchg
push
mov
sub
roll
daa
mov
and
mov
arpl
or
jno
push
xchg
xor
cltd
pop
pop
shrl
pop
sbb
pop
mov
mov
mov
aam
and
inc
jmp
xchg
jne
out
popf
mov
push
jge
and
data16
pop
mov
mov
mov
sub
and
xchg
or
rcr
mov
int
test
stc
push
adc
push
cwtl
outsl
pop
icebp
sbb
roll
nop
push
fnstsw
or
pop
push
jecxz
sbb
mov
loope
xchg
jbe
mov
in
cli
pop
cmpsb
mov
push
xchg
orb
push
pop
inc
divb
and
inc
pusha
insl
mov
pushf
jl
add
lods
sbb
stos
sbb
popa
pusha
out
outsl
jnp
cmc
mov
popa
xchg
pop
cmpsl
mov
add
mov
cmp
lea
into
fidivrl
stos
mov
js
adcb
fs
push
shll
adc
push
leave
cmp
jbe
push
xchg
sbb
jnp
negb
add
jle
out
or
loop
dec
xchg
fs
adc
cmp
into
mov
cmp
xor
cmp
pop
fsubs
out
popf
inc
mov
movsl
stos
mov
mov
fistl
icebp
push
mov
ja
sbb
sbb
inc
js
jmp
fucomp
cmp
mov
sub
cmp
repz
lahf
inc
dec
lea
push
mov
outsb
sbb
mov
xor
into
pop
dec
mov
punpckhbw
push
push
push
and
jg
xchg
lea
in
sbb
rol
xlat
push
movsb
lahf
mov
imul
xor
leave
fs
fstl
xchg
cmpsl
gs
scas
sub
dec
jp
sbb
hlt
pop
or
mov
inc
jnp
rcrl
and
shrb
aaa
sbb
je
outsl
sbb
inc
ja
insl
jbe
mov
dec
sub
dec
mov
sub
xchg
das
jcxz
loop
hlt
cld
loop
lock
dec
lret
pop
in
xchg
sahf
cmp
pop
cmp
cs
call
fwait
movsl
jno
inc
xchg
mov
push
inc
rolb
fwait
out
pop
jmp
cmpsl
insb
bound
out
sub
rcll
andl
adc
xlat
imul
inc
scas
sub
imul
imul
call
sbb
sub
mov
outsb
mov
nop
inc
insl
das
adc
or
out
aam
adc
mov
mov
jbe
ret
dec
decb
add
dec
add
add
jl
cmc
add
int
push
xchg
cmp
test
pop
mov
enter
sbb
aas
sbb
mov
daa
push
cmp
adc
stos
mov
adc
cmp
mov
and
lea
imul
imul
adc
push
or
pop
inc
or
lret
push
xchg
repnz
dec
dec
call
jmp
out
dec
inc
in
xchg
push
test
popa
dec
inc
mov
pop
sti
mov
idivl
imul
add
andb
shrl
jecxz
xchg
push
sub
mov
sub
mov
adc
cmp
cmpsl
divb
test
cmpsl
inc
push
negl
cmpsb
cmp
inc
imull
xchg
ljmp
orb
adc
mov
adc
xor
push
mov
pop
stos
lahf
notl
pop
push
adc
idivl
add
dec
mov
sub
aam
mov
dec
sub
push
mov
xor
xor
pop
mov
cltd
inc
enter
xchg
mulb
mov
int
push
stc
jno
add
sub
imul
push
out
stos
movsl
jecxz
push
sub
insl
enter
pop
jns
add
push
rcr
adc
push
fistps
push
dec
push
adc
stc
sub
movsb
lret
cmc
les
xchg
push
inc
jne
ficompl
popa
outsb
lods
push
inc
outsb
xor
jmp
js
jecxz
pop
call
popa
xor
or
cs
fwait
daa
mov
loope
dec
sti
add
sbb
inc
xlat
loopne
rcr
mov
out
and
sbb
add
les
dec
icebp
jg
pop
mov
fsubr
mov
sub
iret
mov
jno
adc
xchg
jg
push
jmp
test
movl
in
dec
adc
jge
pop
aas
out
enter
aad
mov
testb
ss
test
aaa
leave
jl
loope
cmp
clc
dec
stos
lcall
outsl
pop
xchg
aam
dec
cltd
xchg
cmc
leave
cmp
inc
sbb
inc
popa
movsb
jnp
xor
sti
adc
sahf
mov
and
aas
sbb
dec
lret
adc
and
or
inc
rorl
jecxz
rcrl
scas
pop
sbb
pop
jge
shrb
jae
test
sbb
push
adc
daa
push
sbb
mov
cmp
dec
sub
std
adc
push
repnz
or
jbe
xchg
mov
into
xchg
pop
sub
gs
dec
pop
pop
into
cmpsb
cld
roll
pop
add
jno
pop
notb
add
dec
lret
inc
jmp
mov
inc
inc
jne
pop
ss
cltd
push
xorl
aaa
xchg
rorb
out
xor
pop
mov
movsl
ljmp
insl
movsb
call
divl
testl
test
inc
sbb
mov
mov
xor
adc
roll
xchg
push
shrl
xchg
gs
dec
xchg
mov
fildll
xchg
rcll
mov
mov
jle
adc
cmpl
jmp
xor
sbb
out
test
les
adc
jo
push
inc
mov
push
adc
cld
push
ja
mov
xor
lcall
adc
mov
shrl
xchg
fadd
outsl
and
push
mov
stos
in
jb,pt
mov
push
cmp
dec
fdivrp
ljmp
loope
sub
lret
gs
repnz
push
mov
in
pop
fdivrl
mov
shll
and
popa
rcll
inc
aaa
fdivrs
dec
ret
les
loop
mov
test
pop
clc
mov
mov
out
push
mov
push
andl
aas
cmp
sbb
jne
xlat
clc
test
bound
mov
sub
push
mov
xchg
daa
mov
jnp
dec
lods
cmp
imul
jp
push
cli
lahf
cli
xchg
jno
clc
rcrl
add
lds
or
lods
pusha
repz
out
mov
stos
pop
insb
in
test
inc
or
xlat
lods
or
adc
and
xchg
leave
movsb
jp
inc
aam
xchg
sub
cwtl
cmp
das
jo
xor
lcall
clc
fisubl
add
hlt
shrb
cli
lret
mov
mov
fwait
hlt
sub
push
inc
pushf
push
add
sbb
push
cltd
popa
lcall
push
jmp
jge
push
cmpb
jb
rcl
movsl
ret
int3
mov
inc
arpl
cmp
jmp
shrb
popa
mov
mov
xor
mov
push
mov
mov
in
push
movups
repnz
cli
f2xm1
mov
clc
movsb
movsb
or
or
push
sbb
mov
sti
fidivl
pop
or
hlt
shl
ftst
jns
aaa
or
movsb
fistps
stos
mov
mov
das
inc
pop
xchg
adc
int3
sbb
sti
dec
pop
stc
jae
mov
out
dec
and
ljmp
ss
jge
jno
sub
fisubrs
test
fistl
sub
daa
push
xor
xor
ja
xchg
xchg
test
ret
or
dec
jb
insb
fwait
imulb
mov
out
push
imul
mov
movsl
ret
add
mov
mov
sub
inc
sbb
xchg
outsb
cwtl
dec
pop
dec
repnz
and
mov
pop
aaa
inc
inc
orb
cld
lods
pop
daa
sbbb
and
out
inc
test
repnz
xor
cltd
out
bound
push
out
xor
sbbl
imul
adc
and
dec
sbb
sahf
pop
dec
es
mov
inc
inc
adc
xchg
popf
inc
out
mov
les
mov
aad
cmp
mov
in
pop
jns
or
pushf
es
sbb
cmp
push
push
push
jns
mov
mov
out
jmp
push
popf
ret
mov
scas
xchg
sbb
subl
inc
stos
popa
in
xor
xor
mov
jbe
icebp
xlat
stos
sub
push
cmp
sbb
xorb
add
sbbb
add
jno
clc
dec
outsb
add
movsl
adc
xchg
lret
mov
cli
nop
sbb
pop
shrl
pop
mov
cmp
imul
cltd
dec
push
sahf
loope
mov
lret
lahf
mov
and
stc
inc
add
inc
sbb
out
hlt
adc
sbb
jg
iret
daa
enter
dec
xor
mov
out
and
cmp
pop
sub
xchg
insb
jnp
aad
xor
inc
sub
mov
call
scas
mov
scas
fisubl
mov
inc
pop
mov
sahf
arpl
or
xchg
ret
aas
out
or
mov
data16
inc
push
xchg
dec
ja
jmp
jl
in
mov
lds
mov
ja
mov
and
fmull
cld
lret
je
xlat
push
jp
xlat
outsl
jmp
into
in
jg
movsl
fnstcw
rorl
mov
sub
subb
xor
adc
mov
out
inc
rcrl
imul
and
cmc
xor
inc
and
test
sbb
mov
fwait
addr16
jne
sbb
es
or
jecxz
jae
jnp
sub
lahf
cmp
stos
arpl
mov
test
inc
decl
cmp
jmp
imul
bound
lret
mov
inc
arpl
jp
fcoml
sahf
lods
out
inc
mov
mov
lcall
stos
in
xor
faddp
push
lret
arpl
scas
cs
sub
icebp
jp
dec
mov
mov
arpl
add
test
aad
dec
or
scas
mov
xchg
test
mov
pushf
int3
leave
outsl
xchg
push
jb
cmc
outsl
fmull
pop
dec
hlt
mov
or
sahf
clc
push
in
test
push
bound
aaa
mov
mov
adc
or
sub
imul
mov
xchg
pushf
xchg
or
insl
dec
int
adc
jae
push
pop
pop
cltd
frstor
jp
fisubrs
or
push
inc
shlb
mov
fxch
pop
inc
loop
adc
jmp
ss
mulb
pop
lcall
and
stos
shrb
dec
xchg
push
jmp
movsb
add
dec
add
and
aaa
jle
pop
mov
gs
enter
loope
and
xorb
ja
cltd
xorl
sub
fcom
loopne
xchg
jb
pop
aam
test
mov
js
xchg
inc
icebp
sbb
cmc
push
pop
imul
les
inc
mov
shlb
icebp
xchg
fsubs
les
inc
jbe
mov
mov
mov
adc
xor
adc
cli
sbb
jmp
cmp
cwtl
push
lods
cmp
and
lahf
pop
ds
sbb
push
shll
mov
mov
lods
push
jne
lcall
es
aaa
or
xchg
popa
xor
pop
sub
push
add
js
xor
or
adc
cltd
sbb
jne
fs
les
adc
dec
outsl
sbb
pop
imul
out
lahf
stc
push
adc
pop
fs
pop
xor
cmp
cmp
push
daa
cmpsl
push
sub
adc
add
mov
jp
les
out
sbb
addb
mov
leave
testl
sbbl
loope
mov
and
sbb
ficoms
adc
daa
movsl
std
in
loope
stc
adc
incl
jbe
jg
insl
dec
inc
dec
inc
push
xchg
into
sar
dec
test
fnsave
stc
nop
mov
and
add
imul
and
adc
xchg
dec
hlt
pop
lret
lods
mov
ss
or
lds
xchg
lock
add
jo
ljmp
in
lods
inc
inc
jno
jne
mov
add
neg
xor
inc
pop
popa
adcl
mov
cli
mov
scas
xor
out
lret
mov
inc
mov
xorb
jecxz
xchg
outsl
jmp
mov
jae
pop
fwait
movsl
cmp
adc
packsswb
lret
arpl
jbe
rcrl
lea
into
pop
stc
xchg
sub
inc
imul
imul
lods
xor
repnz
call
or
scas
in
popa
ret
push
pop
negb
cmp
outsl
mov
add
inc
mov
aad
xchg
lea
adc
cwtl
ja
test
xor
mov
lret
scas
pop
mov
cmp
and
mov
cli
ficoml
rolb
leave
sub
xchg
inc
lret
iret
inc
inc
dec
arpl
das
and
adc
mov
mov
jl
pop
iret
jo
jl
test
inc
mov
ret
mov
pop
pusha
pop
ljmp
inc
inc
bound
pop
or
mov
sbb
lock
fldcw
out
mov
out
push
stos
bound
out
sub
in
and
xchg
pop
int3
pusha
pop
inc
lahf
push
gs
dec
imul
lcall
out
repz
push
jle
or
gs
dec
xchg
push
cld
pop
push
jns
pop
iret
mov
sbb
popf
jle
movb
push
cld
je
push
les
push
xchg
hlt
add
stos
mov
mov
mov
popl
fistl
imull
xchg
xor
fs
pushf
in
sbb
sub
aam
xor
inc
out
out
jecxz
in
mov
lret
fidivs
dec
stc
push
mov
xor
xchg
pop
cmpsl
cld
call
imul
fldlg2
pop
in
push
jge
ret
mov
stc
xlat
test
daa
test
mov
jmp
jl
sbb
or
mov
stc
aaa
sbb
mov
shlw
enter
sbb
mov
cmp
mov
mov
xchg
cmp
les
jne
sub
movsb
xor
adc
adc
in
fidivrs
lods
cwtl
push
pop
mov
dec
pop
xchg
test
imul
stc
mov
out
lods
int3
cmp
jno
flds
imul
mov
dec
mov
sub
adc
adc
sbb
mov
cmpsb
add
and
mov
mov
push
and
faddl
xor
inc
dec
sub
outsl
movsl
shll
add
jo
xor
cld
sbb
jmp
cmpsl
in
fstl
mov
ss
aam
inc
mov
aad
loopne
sub
xor
mov
into
repz
xor
inc
loopne
adc
rcll
dec
cmp
shlb
adc
outsb
shr
push
mov
sub
mov
arpl
sub
mov
jo
jbe
ret
fimull
add
jecxz
loop
sub
mov
cmp
das
jg
add
cld
sbb
lcall
jge
sub
adc
jb
fdivrl
jge
xchg
ss
sub
xchg
sbb
mov
arpl
lahf
fnstenv
jno
jmp
and
xchg
and
test
push
xchg
enter
or
xchg
out
hlt
sbb
pop
in
daa
out
cltd
dec
xor
xor
or
push
sbb
sbb
xor
mov
pop
and
ret
cmpsl
xlat
sub
xor
add
pop
fmul
jo
mov
or
movsb
das
imul
icebp
xor
jecxz
lret
nop
outsb
xor
ret
jnp
repz
bound
jo
iret
xor
push
aaa
push
fs
lret
imul
imul
mov
in
in
or
sbb
or
popa
das
xchg
daa
das
pop
ret
out
es
shlb
mov
adc
icebp
cli
xlat
cwtl
imul
int3
push
adc
das
loop
mov
cmp
ljmp
in
loop
iret
mov
xor
xchg
lock
push
xor
mov
cmpsb
sbb
aas
inc
leave
leave
mov
add
std
push
mov
xchg
imul
fisttps
and
cmp
lcall
sahf
xchg
xor
repz
sub
mov
adc
stos
ss
pop
repnz
ret
dec
and
adc
mov
rorb
mov
and
repnz
jecxz
cmpsl
inc
gs
mov
pop
cmpsb
jg
pop
add
mov
movsl
aad
sbb
mov
push
push
add
mov
shll
cwtl
mov
out
loopne
mov
adc
mov
out
mov
cmpsl
in
jo
fucomip
jp
ljmp
sbb
test
mov
or
inc
lea
sbb
outsb
adc
sar
cmp
fldenv
popf
fdivr
mov
jge
repz
dec
mov
push
fidivs
mov
cli
dec
fstps
jnp
dec
inc
adc
pop
iret
push
inc
cmc
pushf
aam
stos
in
add
xor
fcomi
loop
inc
aas
adc
cltd
xlat
xchg
add
or
mov
test
repz
jp
or
jbe
outsb
lret
xor
loopne
mov
jne
sub
movsl
cwtl
xchg
scas
xchg
mov
sbb
jl
push
lock
mov
fldcw
out
mov
or
incb
xchg
mov
pop
push
emms
xor
arpl
fmull
mov
repz
lcall
cmpsb
lods
cmp
out
cmp
outsl
inc
inc
nop
xor
adc
shl
lahf
jmp
push
or
mov
fistl
loope
sbbb
scas
pop
lret
jns
daa
into
fbld
xchg
test
jae
loop
and
fldt
mov
imul
decb
lea
out
mov
jl
mov
sub
fwait
out
mov
mov
out
std
jne
ja
sarb
dec
lcall
lds
push
ljmp
std
call
jnp
jg
push
jae
xlat
dec
jns
cwtl
shrb
insl
or
push
lcall
xchg
cmp
call
addl
xor
aas
cmpsl
dec
jmp
pushf
dec
int
outsl
dec
or
scas
out
and
lret
lcall
jmp
cmp
xor
mov
jbe
in
xor
sbb
adc
cwtl
pop
daa
and
adc
cmc
cmp
sbb
jno
outsb
pop
dec
xor
cmp
pop
ret
xchg
mov
es
mov
jne
scas
je
cmp
adc
pop
xchg
sarl
cli
xchg
mov
in
in
dec
xorb
cltd
push
nop
ljmp
push
mov
cmp
in
push
push
jbe
popf
push
rcrl
lcall
cmp
cmp
dec
pop
jbe
mov
enter
mov
bound
fldt
rorb
rcl
cmp
mov
dec
cmp
lea
sub
nop
cmp
xchg
imul
test
daa
cmp
and
and
inc
jle,pt
and
sbb
clc
xchg
sbb
xor
fwait
jo
cmc
inc
cli
repnz
and
add
inc
pop
loopne
mov
jne
popf
lret
pop
mov
cld
inc
cld
mov
movsb
int3
mov
ret
rcr
mov
leave
jmp
cltd
imul
mov
shlb
out
ret
sbb
cmp
cmp
cltd
push
inc
xchg
repz
test
out
lock
fwait
loop
cmp
push
push
sub
jle
sahf
stos
aaa
xlat
xchg
inc
add
mov
mov
addr16
stc
movsb
sub
ret
test
fadds
les
mov
or
push
popf
xchg
repnz
lahf
lds
hlt
mov
or
jg
and
mov
inc
pop
mov
push
pop
pop
cmp
cli
inc
jmp
mov
out
fs
mov
sub
sbb
jae
ja
mov
mov
in
push
push
sbb
nop
jnp
jmp
dec
roll
cmpsb
adc
movsb
cmc
and
call
jmp
lock
mov
shrl
xor
inc
jb
sbb
in
aam
cld
sbbb
ja
lret
fsubs
rcll
adc
inc
in
lods
in
fcomi
jl
in
pop
in
faddl
adc
jo
int
add
jge
inc
xchg
nop
or
sub
testl
jne
call
data16
lret
inc
mov
shll
adc
mov
scas
scas
js
mov
sbb
mov
adc
mov
pushf
mov
mov
out
scas
jne
inc
dec
pop
in
pop
xor
lahf
and
mov
adc
mov
mov
mov
and
pop
dec
add
scas
fwait
cli
push
test
cs
mov
cwtl
and
xor
fiaddl
jbe
dec
fisubl
xlat
inc
mov
adc
jae
mov
pop
inc
mov
aaa
pushf
pop
adc
push
lea
xor
and
jmp
jp
mov
sbb
cmp
add
mov
push
cmp
aad
js
es
pop
imul
les
popf
pop
aam
jo
in
jne
out
test
or
mov
out
jmp
xor
inc
inc
mov
lods
mov
pop
dec
adc
shlb
add
int3
xor
xchg
add
xchg
sahf
sarl
hlt
jg
cld
jmp
decb
sbb
dec
lods
es
dec
cmp
mov
das
lret
imull
insb
movsb
mov
or
pop
dec
adc
or
jae
xchg
jp
loop
xor
xor
jp
fdivl
push
les
add
shll
ffreep
nop
jb
cmovne
cld
clc
shl
fdiv
out
int3
mov
inc
dec
push
stos
push
lock
lret
cmp
lea
fsubrp
or
shll
add
xchg
fs
and
pop
cmp
inc
test
pop
pop
sbb
cmovbe
mov
ret
daa
and
push
rorb
out
jge
jge
shll
pop
inc
cltd
xlat
jns
outsb
inc
popa
scas
lock
jmp
shlb
pop
sub
insb
adc
and
sub
xor
js
sub
dec
test
frstor
push
fnstcw
push
dec
cmp
test
jp
pop
adc
sbb
adc
jge
lea
jle
push
lods
dec
mov
sti
dec
mov
sbb
jno
test
jns
cmpsb
cmp
push
fildll
lret
mov
arpl
mov
ret
lds
loop
adc
int3
les
cmp
xor
repz
repz
fsubrs
fwait
loope
or
insl
dec
mov
cmp
add
inc
outsl
mov
movsb
mov
inc
pop
in
mov
push
sbb
mov
lret
xchg
sub
add
add
jb
roll
or
push
ret
lahf
xchg
loope
enter
mov
daa
lea
adc
inc
jnp
cmc
cmp
fcoml
jne
test
lds
xchg
out
andl
xor
in
aam
xor
fdivr
andl
jae
movsb
test
pop
sarl
inc
scas
test
negl
rolb
movsl
rcrl
jecxz
stos
repnz
out
shlb
and
sbb
pop
test
je
xchg
inc
inc
adc
ret
add
and
xor
inc
sbb
outsb
jmp
mov
and
pop
mov
fcomi
out
push
ret
or
popf
repz
fidivrs
ja
jg
hlt
xor
cmp
loope
ds
movl
js,pn
dec
ret
xchg
aam
adc
pop
int
and
xchg
push
inc
mov
jp
out
push
jl
mov
inc
fs
stos
mov
sbb
mov
and
dec
dec
xor
imul
ja
mov
lock
xor
pop
push
out
mov
ja
push
mov
cmpsb
push
xor
sbb
lods
cltd
cs
dec
gs
data16
inc
sub
cmpsb
mov
sub
mov
loopne
sahf
imul
mov
cmp
pop
cmp
dec
cmp
leave
adc
daa
test
into
call
addl
mov
pop
push
testb
rcll
dec
jno
cmpsb
cmp
mov
lret
dec
out
pushf
mov
xor
test
mov
xchg
and
push
test
cmpsl
add
mov
es
cmpsb
mov
lods
stc
inc
enter
pop
jge
and
cmp
in
jge
push
mov
repz
push
inc
add
testl
jl
dec
lea
imull
lret
lea
adcl
pop
sub
repz
sahf
sub
nop
jne
inc
or
mulb
pop
arpl
mov
jge
or
loope
add
stc
inc
cmpsb
jmp
mov
mov
jl
jo
in
test
mov
mov
divl
aaa
out
stc
add
jnp
out
xlat
cmc
mov
push
sub
xchg
push
rolb
jge
mov
mov
insb
or
inc
adc
ljmp
mov
xor
dec
jno
dec
inc
and
orl
fstpt
or
idivl
sub
repnz
stos
jns
call
repz
sub
push
mov
scas
aaa
jle
icebp
dec
and
xchg
cmp
xchg
int
outsl
mov
pop
adcb
mov
mov
push
sbb
adcl
xchg
int
mov
lcall
cld
xchg
out
push
rcrb
repz
pusha
test
inc
lea
pop
and
push
arpl
popf
mov
call
inc
cld
loopne
add
icebp
mov
xor
aad
jno
adc
subb
jno
nop
es
sbb
mov
xor
fwait
aam
popf
mov
sub
xor
push
mov
lcall
sbb
mov
dec
xchg
xlat
lods
insl
repnz
jl
jns
or
adc
cmovg
adc
lret
mov
int
mov
outsb
and
mov
fwait
subb
cltd
adc
stc
xor
je
lret
mov
out
fs
dec
lds
mov
movsl
leave
xchg
xchg
xchg
lods
mov
mov
add
cmp
and
fstpt
cmc
test
cmp
mov
adcb
loop
push
add
pop
xorb
add
or
addr16
jge
mull
mov
sub
cmp
mov
cmp
pop
lods
cmp
fcoms
aad
inc
or
incb
or
pop
cmp
repz
loopne
xor
pop
or
loope
shlb
rep
sub
push
in
aaa
fbld
pushf
roll
lcall
in
pop
cmp
mov
mov
inc
mov
jns
sub
cmp
test
int3
dec
jmp
inc
js
and
inc
xchg
xor
jae
mul
pop
cmc
test
push
into
fstl
pop
adc
inc
sbb
scas
mov
adc
adc
cmp
mov
pop
movsl
xchg
lret
mov
adc
cmc
imul
lcall
jl
push
sbbl
dec
sbb
adc
xor
cmc
in
cmp
in
adc
movsb
add
ljmp
dec
jmp
cmp
mov
xchg
sbb
sub
mov
es
hlt
aas
adc
fwait
insb
js
pop
insl
movsb
pop
cmp
dec
out
mov
pop
xor
popf
or
cwtl
popa
in
into
in
int3
mov
pop
mov
daa
es
shll
scas
xchg
lock
adc
dec
ret
repnz
adc
les
lds
mov
pop
aam
cld
cld
jb
dec
sbb
fcomps
lods
gs
cwtl
push
cmp
cli
je
test
mov
fs
xor
mov
add
test
jns
mov
cmp
mov
int
mov
xorb
cmpsb
jmp
out
sti
or
sub
je
or
dec
rcrl
adc
loope
mov
insb
std
leave
shr
or
sahf
sbb
push
fnstenv
cmpb
call
insl
fwait
cmp
shl
cmp
mov
divl
xor
xor
mov
adc
cmpsl
stos
imul
sti
inc
push
push
lcall
mov
lcall
xor
jnp
and
aaa
jno
push
push
mov
les
fcmovb
push
std
cmpsb
xor
sub
mov
and
xchg
loop
stos
loopne
inc
fisubs
stos
cmp
sbb
xchg
enter
xchg
sahf
cmpsb
push
cmovp
jne
dec
mov
test
icebp
cmp
pop
rorl
xor
aam
pop
xchg
inc
subl
pop
ljmp
sub
ret
xchg
dec
jne
mov
mov
fistpl
nop
cmp
jno
mov
add
and
xchg
scas
adc
cmp
mov
mov
adc
outsb
mov
sbb
add
je
dec
loopne
andl
sub
mov
repz
and
jb
je
jl
dec
sbb
ds
mov
fs
push
out
inc
mov
push
jo
insl
jecxz
adc
fcmovnu
mov
pop
test
jecxz
movsl
mov
je
adc
or
rcll
stc
ja
push
jp
and
xchg
std
cmpsb
rcrl
and
jmp
mov
mov
imul
lea
mov
xor
sbb
xor
pusha
mov
mov
fnstcw
repz
es
shlb
jbe
and
mov
pop
sbb
mov
push
cld
vmovlpd
pop
rol
jecxz
adc
dec
cwtl
fmuls
push
leave
dec
leave
xchg
not
sbb
in
cmp
sub
push
icebp
mov
inc
lahf
out
dec
imul
push
fcmovb
imul
or
xchg
add
je
lods
inc
inc
addps
inc
cmp
bound
lods
add
cld
in
mov
jle
dec
cmp
sbb
push
xchg
mov
pop
arpl
lcall
xor
sti
imul
jne
movsl
lds
xchg
scas
sbb
mov
adc
cmp
pop
cmp
dec
cmpl
cld
xlat
mov
pop
push
mov
bound
mov
dec
mov
push
or
mov
stos
in
mov
cmp
mov
add
add
nop
notl
fsubl
push
pop
xchg
mov
jp
mov
pop
popf
adc
into
add
push
xchg
sarl
loopne
in
test
arpl
insb
test
inc
xchg
ret
xor
in
imul
inc
sub
push
lock
xchg
sbb
lds
mov
mov
cmp
sbb
mov
aas
loopne
mov
test
int
xchg
enter
or
repnz
cmp
cmp
arpl
cmp
push
les
push
popf
inc
fisttpl
mov
mov
add
mov
movsl
imul
pop
dec
add
jl
pop
jbe
ja
fs
add
adc
xchg
xor
fimull
pop
mov
arpl
movsl
xlat
xor
adc
outsb
xor
pop
int3
and
rorb
ret
cwtl
push
push
mov
jb
cld
or
push
shll
mov
mov
scas
pop
sub
scas
sub
pop
push
les
add
faddl
mov
gs
lock
sahf
add
in
mov
icebp
sbb
jp
mov
lds
sub
inc
pop
iret
xchg
aam
les
push
movsb
lea
addr16
ret
sbb
fs
fxch
scas
cmp
nop
aam
shll
cmpsb
jecxz
and
enter
loope
pop
inc
pop
in
jb
adc
xor
xor
or
into
aas
push
lret
and
mov
mov
xchg
adc
push
pop
sub
inc
mov
icebp
pusha
ja
jnp
pushf
sbbb
cld
int3
ljmp
arpl
inc
lods
mov
loopne
sub
shll
push
mov
iret
jl
inc
rcr
sub
in
or
ficoms
gs
or
add
lds
fisttps
subb
cmp
rcl
arpl
je
push
push
cmp
iret
adc
je
in
cltd
cmp
add
jae
movsb
jb
ja
call
cmpsb
dec
inc
add
mov
movsb
int3
and
ja
movsl
nop
outsb
or
add
movsb
and
mov
xchg
push
pusha
mov
push
fldt
mov
dec
add
xchg
and
add
xor
cltd
orl
mov
in
mov
sub
xchg
in
icebp
mov
jne
mov
cmpsb
or
divl
xchg
jp
and
push
movsl
lds
neg
fs
fmuls
outsl
int3
bnd
push
repz
popf
push
movsb
loope
inc
mov
xor
xor
cmp
fadds
pusha
dec
out
adc
incl
imul
mov
fildll
cmpsb
mov
inc
inc
cmp
pop
or
inc
popf
stos
pop
mov
push
enter
xchg
fs
aaa
xor
sbb
jbe
cmp
rcl
push
sub
jo
arpl
adc
enter
lret
push
or
jmp
mov
push
into
mov
fbld
inc
sub
test
fldl
push
iret
sbb
and
cli
imul
and
shll
insb
insb
cli
add
bound
adc
xsha256
cmpsb
aad
insl
pop
imul
pushf
mov
cmpsl
lds
bound
dec
rol
mov
outsl
shr
push
testb
jecxz
push
push
and
jmp
add
pop
cmp
inc
mov
jns
dec
pop
fisttps
lahf
inc
jnp
mov
and
addr16
mov
mov
push
inc
or
data16
insb
jg
ljmp
test
aaa
push
aam
pop
fidivl
movsb
cli
pop
in
cmp
dec
xor
fcmovb
xchg
sub
cmp
sub
int3
arpl
mov
jp
rcl
cmp
and
mov
sbb
out
fsubl
ret
jae
out
movsl
cmp
sub
and
add
inc
push
adcb
dec
daa
in
adc
xor
ret
nop
add
sahf
xor
aad
sbb
pop
addr16
sub
xor
mov
jecxz
fdivrs
sbb
dec
inc
stc
or
rclb
psubsw
mov
sub
clc
jl
push
push
shr
push
outsb
jno
adc
xor
in
inc
mov
xor
cmp
inc
out
ljmp
sub
adc
out
xor
push
out
xchg
adc
mov
sub
std
mov
pop
lcall
ret
insl
clc
sbb
dec
jecxz
mov
movsb
mov
dec
and
sbb
cltd
loope
dec
sti
jo
inc
xchg
scas
and
mov
adc
cld
mov
int
mov
mov
and
pop
jg
xchg
fdivl
or
cmp
hlt
rol
fisubrs
cmp
lret
lock
inc
cmc
jne
inc
les
call
cmp
popa
mov
push
xchg
sbb
cmp
cmpsl
pop
push
std
js
aam
sbb
fdivrs
pop
mov
or
ljmp
scas
or
and
cmp
adc
xlat
inc
pop
pop
pop
gs
pop
cmp
in
sbb
xor
test
push
dec
cmp
push
pop
movsl
test
in
lahf
sub
and
aam
mov
mov
lret
xchg
pop
jmp
movsl
add
clc
and
mov
int
add
popa
inc
lds
inc
sbbb
jnp
jl
out
push
popa
add
rorl
inc
lods
insb
mov
mov
data16
jg
mov
cmc
mov
mov
and
xor
mov
shlb
add
in
negl
je
movb
jp
imul
mov
jle
pop
or
ss
and
pop
mov
movsl
filds
test
pop
cli
adc
jl
cmp
or
xlat
pop
lcall
lcall
dec
dec
or
ror
push
js
shrl
in
in
stos
inc
daa
mov
xor
ds
sub
fdivrl
js
popf
movsl
adc
xchg
imul
daa
lock
sbb
mov
js
cmc
in
repz
mov
jno
pusha
jmp
cmp
or
cli
adc
pop
add
lcall
popa
pop
decb
add
fidivs
xchg
test
jns
lods
imul
fists
jne
rorb
ja
xchg
and
mov
inc
inc
iret
pushf
gs
inc
pop
inc
xchg
mov
shl
lock
mov
out
and
adc
sahf
and
loope
cli
jae
cli
cmp
jne
inc
rcrb
inc
sbb
and
jo
add
add
mov
cmp
mov
in
push
pop
push
jecxz
outsl
push
mov
push
mov
loopne
pop
jne
mov
push
jge
xorb
jae
xor
in
adc
mov
shl
test
xchg
pop
cmp
loop
lock
stc
inc
and
dec
mov
lret
dec
pop
adc
and
xchg
or
push
mov
dec
jl
and
jge
cs
loop
out
roll
push
addr16
pop
sti
cmp
fisubl
int
ror
cld
pusha
push
out
cwtl
sbb
sub
xor
jnp
ret
sub
add
ficomps
ss
arpl
mov
out
and
jp
movsb
or
rorl
std
cmp
or
mov
jge
and
push
call
div
loop
push
hlt
xor
or
mov
push
xor
stos
nop
mov
leave
gs
xchg
paddq
mov
and
in
js
jns
mov
dec
add
sbb
addr16
in
mov
mov
mov
out
ljmp
xchg
mov
mov
dec
imul
loopne
adc
inc
mov
daa
loop
mov
insl
xchg
in
out
fadds
add
mov
mov
adc
sbb
sbb
adc
push
js
dec
mov
push
ret
and
mov
mov
movsl
loopne
repnz
int
and
lea
mov
pop
mov
rorl
jg
test
imul
data16
es
mov
or
sbb
cmc
jle
dec
movsl
out
xlat
pop
inc
ljmp
and
lret
leave
shlb
in
dec
push
lcall
pop
outsl
xor
push
stos
jae
xor
mov
data16
fs
pop
push
insl
pusha
test
cmp
xor
popf
loopne
xchg
and
mov
repnz
dec
fisubrs
in
and
xor
inc
movsl
cwtl
xchg
sti
ss
pop
imul
jnp,pt
mov
and
fistpll
pop
mov
or
adc
jmp
and
sbb
ljmp
jmp
push
cmp
inc
mov
jg
sub
push
cltd
pop
or
xchg
aas
or
fcompl
jecxz
test
push
addb
dec
pushf
cli
shll
mov
fxam
mov
fnstenv
leave
push
inc
push
jp
push
xchg
jecxz
push
movsb
sbb
jle
sti
pop
repnz
jbe
out
pop
leave
sub
fwait
ret
pop
jne
sbb
xchg
sub
cmpsb
add
pop
xchg
inc
xlat
bound
mov
arpl
je
sub
push
mov
or
loop
cmp
cmp
or
ret
mov
or
jecxz
push
jecxz
adc
imulb
push
sub
add
sub
mov
mov
rorl
insl
es
outsb
adc
cmp
fldt
hlt
bound
and
or
dec
lcall
das
and
shlb
call
mov
lahf
jb
sbbl
cmpsl
in
stos
add
xchg
cmp
ret
xor
ret
ficompl
aad
inc
lods
inc
xchg
dec
pop
inc
inc
pop
fwait
or
pop
pop
sbb
loope
sub
xchg
in
mov
mov
mov
mov
jae
fstp
or
pop
add
sarl
pop
clc
das
mov
xor
or
add
xor
cmp
hlt
add
pop
sti
mov
jno
mov
idivl
mov
dec
pop
mov
dec
dec
adc
out
int3
test
pop
ljmp
add
dec
and
cmp
es
cmpb
enter
or
ror
hlt
push
ret
jle
imul
or
xchg
mov
ret
daa
dec
out
mov
jp
in
mov
rorb
jo
dec
out
sub
movsb
testb
testl
inc
xchg
xor
clc
pop
push
sub
std
jb
pop
lea
lahf
or
inc
ret
scas
push
cmc
cmp
lret
xchg
dec
push
mov
sbb
outsl
fisttpll
mov
imul
test
jle
out
icebp
dec
mov
push
mov
mov
imul
data16
push
cld
adc
in
mov
adc
addr16
push
sub
in
sbb
pop
leave
cwtl
push
mov
enter
scas
out
mov
dec
mov
cmpsb
loopne
inc
push
ss
scas
rep
cmp
out
cmp
jge
jge
jbe
mov
out
loop
inc
ror
mov
or
adc
mov
jno
outsb
push
sahf
and
in
popl
inc
shll
psllq
xor
push
inc
popl
cwtl
jmp
and
jmp
stc
loop
test
adc
mov
mov
push
fbld
dec
loope
pop
mov
stc
xchg
lods
jb
dec
movsb
loopne
mulb
imul
or
idivb
dec
and
aaa
fwait
aas
data16
pop
or
repz
xlat
push
cmpsb
orb
in
ret
jne
test
jg
sbb
roll
imul
dec
stos
sub
jb
add
out
ljmp
adc
popf
movsl
xchg
sub
dec
jl
dec
cmpsb
mov
xchg
pop
es
mov
cmp
dec
stc
pop
fists
test
cmc
xchg
push
fists
mov
cli
mov
fdivs
dec
jno
xor
test
loope
add
insl
pop
xor
mov
int
add
add
arpl
cli
movsl
pop
stos
and
or
adcl
sub
pop
add
sbb
lock
sbb
mov
icebp
std
sbb
xlat
cli
lock
cmp
pop
loop
push
xor
and
and
js
in
pop
out
xor
cli
fstpt
addb
aam
pusha
add
pop
out
cmpsl
ss
mov
pushf
sub
dec
and
loope
call
pop
xchg
fs
xchg
or
int3
sub
push
xor
out
lea
les
xor
jns
jp
bound
jmp
ret
xor
arpl
jno
mov
outsb
daa
jne
mov
mov
mov
stc
or
into
jecxz
jle
insb
test
and
cmp
mov
pusha
mov
leave
adc
mov
paddq
mov
sbb
ss
ret
jmp
stos
push
sub
sub
pusha
fidivrl
add
sub
push
xchg
nop
cs
push
push
dec
mov
rorb
lods
sbb
inc
sub
insl
div
xchg
in
inc
or
and
ds
push
loop
mov
arpl
ret
mov
call
mov
jmp
in
pusha
mov
xchg
cmpb
es
and
sub
mov
and
push
adc
push
adc
sub
out
inc
mov
outsb
xchg
int3
daa
mov
push
daa
lea
push
mov
loope
add
mov
outsb
nop
insb
adc
adcl
lahf
rorl
xor
push
repz
icebp
mov
or
add
stos
and
sub
sbb
pop
pop
aaa
sbb
fiadds
xchg
cmp
cmp
add
pushf
add
mov
xor
jne
or
insb
movsl
fisttps
lret
sub
xchg
out
imul
push
cld
sub
pop
or
movsl
mov
jae
cmp
cmp
mov
dec
movsl
aaa
push
cmpsb
lods
sub
lahf
adc
out
xchg
jb
push
fsubrl
lock
addr16
leave
push
mov
mov
or
push
sub
cwtl
sub
les
mov
fistl
lods
adc
in
fisttps
aam
cli
inc
lahf
xchg
cltd
outsb
out
fildll
popf
addr16
popf
jl
push
shlb
and
adc
add
stos
cwtl
jns
movsb
or
stos
sub
shrl
jg
incb
mov
frstor
mov
cs
adc
mov
add
in
push
sub
arpl
fstps
jbe
movsb
xor
arpl
je
mov
fimuls
scas
fisubrl
sbb
inc
xchg
mov
inc
adc
xor
orb
sahf
insl
inc
xchg
jmp
push
xchg
jp
inc
pop
jb
mov
loopne
es
fidivl
and
cmp
xor
pop
outsb
and
lods
fisubs
lcall
ljmp
jg
cmp
mov
and
mov
shl
sub
aaa
test
out
sub
xchg
outsb
add
rclb
movsb
push
loope
scas
dec
lods
sbb
insb
and
stos
pushf
or
inc
push
movsb
out
jo
push
loope
icebp
loopne
pop
or
sahf
jno
iret
stos
push
repnz
mov
jp
jo
scas
push
test
dec
pop
push
nop
pop
inc
xchg
js
cmp
or
inc
hlt
mov
mov
or
arpl
into
sub
and
popa
jnp
xor
inc
les
inc
aaa
test
push
shlb
adc
or
xchg
cmpsl
cmp
or
xchg
adc
and
bound
add
xor
dec
xor
sub
insb
call
inc
movsb
rcl
loope
ss
mov
mov
or
xchg
hlt
adc
add
stc
push
bound
inc
jl
inc
mov
add
add
aad
add
mov
js
sub
loop
sbb
jecxz
xchg
in
cmp
jl
fnstsw
ja
or
popa
sbb
add
push
fwait
sbb
sub
ljmp
mov
stos
xor
repnz
mov
mov
mov
xor
mov
cmpsb
adc
cmp
xchg
and
mov
ja
cmpsb
pop
fwait
cs
iret
mov
inc
cs
pop
fld
lahf
sub
adc
mov
add
mov
js
imul
inc
and
sbb
andb
insb
mov
movsl
mov
outsl
das
pop
lds
cmpsb
cmp
decl
sti
andl
dec
fistpl
cmpsb
pop
bound
enter
dec
xor
or
xor
xor
shll
bnd
push
jg
loope
imul
popl
inc
adc
cmp
fstps
jg
inc
pop
loop
movsl
add
push
lcall
addr16
int3
in
mov
or
sbb
jo
push
ret
jns
xor
cs
push
lock
addr16
ja
popf
xlat
cmp
aam
xor
adc
jo
mov
es
mov
sbb
setbe
mov
cmp
jmp
sub
jl
orb
sbb
shl
adc
popa
data16
mov
mov
jg
add
sbb
int
arpl
mov
push
mov
orb
popf
mov
push
ret
les
ret
inc
adc
lret
call
ret
ds
push
fwait
inc
loopne
imul
sbb
out
adc
add
push
pop
add
mov
add
xor
dec
inc
mov
iret
xchg
push
sub
outsl
or
outsl
test
push
daa
es
aam
xchg
rcrb
adc
fisubs
pusha
mov
sar
dec
sti
cli
loope
xchg
rorl
push
ljmp
cmp
sub
mov
imul
loopne
sti
jg
movsb
pushf
subb
xor
pop
mov
add
add
lea
outsb
fmuls
jne
or
imul
je
dec
test
shll
xchg
dec
in
push
push
and
popf
imul
add
pop
sbb
xchg
fdivl
aas
popa
mov
scas
or
mov
jmp
mov
jp
fldcw
ss
sub
in
std
push
inc
in
lret
mov
dec
aad
arpl
push
xchg
pop
addr16
in
pop
fwait
jp
xor
hlt
nop
add
and
jmp
dec
pop
or
jmp
fisttpl
mov
xchg
pop
adc
jle
add
loop
jmp
and
fmulp
jae
fwait
mov
pop
aas
arpl
icebp
jl
inc
fisubrs
je
mov
loopne
fidivrs
int
sub
dec
push
add
xlat
adc
frstor
xchg
lods
movsl
mov
jmp
cmpsb
jle
bound
jb
sub
xor
dec
fstp
out
mov
stos
pop
pop
pop
rcll
xor
jl
xchg
dec
jne
jmp
pop
mov
push
cmpl
xor
push
rcrb
sti
inc
aad
lock
shlb
cmp
mov
mov
cmp
das
mov
hlt
ret
sbb
mov
mov
pop
fisubl
push
andl
and
push
add
push
lcall
and
sbb
pop
sub
icebp
aaa
leave
shll
sbb
inc
jns
fiadds
sub
mov
add
lret
sbb
jmp
adc
cwtl
push
sbb
es
aaa
push
pop
mov
ss
mov
jp
pop
movsl
fcomp
shll
dec
or
cmp
jno
pop
push
inc
loopne
in
rorb
arpl
outsb
insl
xor
xchg
mov
es
leave
add
out
inc
jge
negl
in
mov
inc
adc
setb
dec
jno
popf
mov
lahf
call
adc
mov
in
je
jg
in
push
xor
mov
push
icebp
jno
aam
fcompl
jns
sub
fdivrp
mov
pop
icebp
push
jae
adc
scas
imul
push
jge
xor
pop
cltd
arpl
out
mov
add
or
cmc
sub
jmp
xchg
rcll
pop
int
daa
push
push
dec
adc
pop
inc
dec
mov
jne
or
lods
jno
mov
out
aaa
andb
sub
out
dec
fisubs
mov
sub
sbb
shll
ja
cltd
inc
movsl
adc
jmp
jmp
in
repz
aam
notl
push
out
xlat
push
lahf
xchg
jge
and
adc
rcl
les
fmuls
push
ret
outsb
add
mov
out
inc
adc
jge
push
addb
js
dec
mov
push
lock
lea
cmp
std
jmp
jge
stc
adc
mov
mov
jns
outsb
mov
imulb
jno
jl
add
dec
cmp
outsb
test
ja
jno
imul
mov
add
sub
repnz
loop
loop,pn
and
sub
lret
mov
fwait
ss
xchg
iret
mov
mov
fdivrl
or
or
subl
fcmovne
pushf
ret
jb
scas
push
cltd
mull
aas
mov
sub
call
je
shll
scas
inc
aas
xchg
dec
and
pop
sahf
cmp
jecxz
push
leave
add
je
rcll
std
adc
frstor
jge
cmpsl
or
mov
pop
xchg
iret
popf
jmp
arpl
insb
mov
iret
push
shlb
adc
mov
xor
or
loop
bound
cmpsl
adc
jl
inc
popl
fbld
mov
pushf
iret
out
dec
pop
pop
dec
dec
adc
std
xchg
xor
scas
pop
adc
ss
mov
fs
insl
data16
sbb
xchg
mov
cmp
test
cmpsl
mov
lods
and
popl
icebp
pushf
dec
iret
hlt
mov
loope
sti
and
jo
mov
das
or
cs
xchg
push
jmp
test
aad
iret
mov
push
push
std
outsl
sti
dec
sti
jmp
jle
pop
incl
jnp
popf
jnp
sub
jnp
mov
fsub
mov
pop
int
test
lret
sub
aas
filds
push
fs
or
imul
dec
lock
fstpt
xchg
setns
mov
mov
hlt
mov
mov
pop
mov
out
ret
push
test
ja
cltd
adc
fdivl
mov
sti
cli
sti
ds
movsb
in
sbb
mov
jne
fsubl
jg
jne
jb
pause
ja
fwait
cmovnp
push
pusha
mov
outsb
sub
xchg
mov
sbb
jmp
ret
call
mov
mov
lock
and
cwtl
es
loopne
xor
fimuls
inc
dec
xchg
sub
sti
mov
pop
out
or
sbb
dec
ret
cwtl
and
adc
pop
sarl
mov
fwait
push
adc
ss
add
jp
push
mov
adc
and
shlb
sbb
into
pop
or
test
mov
enter
sbbb
jae
jecxz
std
jnp
shld
imul
sti
push
test
in
mov
cmpsl
push
out
push
icebp
dec
cmpsl
xchg
add
pop
add
enter
push
lods
stos
and
stos
pop
repz
fnstsw
je
cs
add
jecxz
in
test
call
lcall
fimull
arpl
xchg
movsl
inc
sbb
sub
fildl
sub
scas
ljmp
cmpsb
repz
stos
rcrb
imul
push
dec
mov
movsl
fs
xchg
in
jae
jle
xlat
inc
inc
mov
push
adc
pop
cli
ds
js
insb
cmp
jb
sarb
push
push
ret
mov
std
fimuls
icebp
add
movsl
lret
inc
insb
jb
xchg
jp
push
sub
push
push
and
or
push
jmp
mov
fs
adc
pop
xchg
cmc
sub
shll
fwait
rcr
jg
enter
cmp
inc
cmpsb
pop
mov
sbb
adc
inc
mov
mov
sahf
cmp
push
loop
or
int3
fdivs
and
cmpsl
sahf
mov
dec
mov
in
icebp
pop
push
pop
lds
push
push
pushf
fimuls
adc
inc
push
cmp
mov
sub
loop
mov
adc
test
dec
jg
sub
add
ficomps
mov
in
sbb
add
cmc
in
jbe
mov
lods
jp
mov
push
fidivl
mov
xor
hlt
mov
add
out
dec
sbb
fistps
jl
dec
mov
cmp
dec
xchg
dec
jnp
cmp
lock
xchg
int3
dec
inc
stos
inc
lods
sub
xchg
fs
xchg
outsb
xor
sub
ret
clc
mov
loop
fs
dec
xchg
lcall
inc
mov
inc
sbb
loop
sub
push
sbb
jo
mov
stos
adc
je
inc
pop
stos
out
pop
std
and
in
inc
cltd
insb
inc
dec
mov
and
push
adc
push
inc
push
or
sub
outsb
push
dec
xchg
push
scas
out
xchg
cmp
icebp
add
mov
sub
jle
lcall
out
push
mov
loopne
stos
loopne
sub
rorb
mov
jmp
mov
andl
in
daa
lea
fidivrs
mov
in
js
sub
fisttpll
mov
nop
add
push
push
add
dec
in
stc
sub
pop
icebp
jle
in
add
enter
lds
mov
sub
cmp
arpl
add
pusha
push
add
cmp
mov
arpl
mov
std
ret
aas
sub
scas
xchg
dec
pop
inc
or
cmpl
xor
push
sub
mov
mov
loop
lea
test
mov
mov
notb
and
adc
mov
jl
es
xchg
sub
fdivrs
and
es
jae
jmp
fdivr
inc
xchg
pop
insb
addr16
movsl
in
stos
xorl
cmp
xor
pop
dec
pop
add
pop
mov
adc
es
sub
or
dec
sbb
cmp
jns
fmul
mov
push
sbb
mov
push
mov
cltd
nop
sti
aad
cli
sti
lods
nop
aad
pop
in
sahf
mov
les
or
add
add
dec
rcrb
dec
dec
insb
sbbl
push
sbb
imull
lds
pop
mov
int
cld
pop
pop
push
mov
mov
lret
popa
movsl
xchg
out
jno
pop
cmc
cwtl
fistps
in
das
dec
xchg
fcoms
imul
mov
pop
ret
dec
jl
mov
jmp
dec
push
push
mov
sbb
mov
jno
cmc
lock
or
test
pop
add
hlt
and
xor
fildll
dec
xchg
les
sub
loop
adc
add
out
add
popf
xchg
adc
inc
jns
inc
xor
stos
sbb
gs
or
jnp
arpl
pop
scas
mov
mov
push
mov
pop
insb
dec
shll
cli
dec
push
xor
xchg
cmc
sub
aad
push
dec
push
stc
pop
ljmp
jne
jnp
mov
clc
fstpl
xchg
xor
jg
out
mov
or
dec
nop
pop
add
aam
and
stos
enter
test
fildll
and
fists
das
addb
fisubrs
push
push
test
mov
into
cld
xlat
je
xor
repz
jmp
jb
push
orl
cli
adc
pop
pop
sub
jp
mov
sub
std
movsl
jmp
orb
test
clc
enter
push
cltd
pop
add
mov
xor
call
shrl
sub
xor
sbb
push
clc
jns
fisubrs
fisubl
dec
clc
xor
js
dec
xor
adc
jno
int3
faddl
xor
mov
xchg
push
mov
xor
test
mov
add
push
sub
pop
xchg
fwait
movsl
btrl
ss
stos
stc
push
add
dec
or
int
pop
in
movsl
lret
adc
add
pop
fadd
pop
pop
adc
sub
pusha
lock
add
rorb
test
mov
lahf
js
sarl
sbb
or
push
test
adc
rcll
ds
and
mov
mov
cmpsb
cmp
mov
sti
xor
mov
fdivrp
int3
fsubp
loope
push
out
sbb
outsb
dec
xchg
jb
fistps
or
das
shll
lret
mov
add
sub
cwtl
repz
pop
subb
lret
and
rclb
xchg
pop
jno
testb
xchg
mov
xorb
jno
sbb
cmp
xchg
outsw
das
cmp
or
mov
and
jl
sbb
mov
nop
pop
pop
leave
push
mov
jae
mov
jae
adc
adc
cmp
gs
les
imul
rorl
push
ss
lea
cltd
loop
and
sbb
or
push
mov
push
mov
cmpsb
std
lahf
add
lret
ret
cwtl
in
dec
sbb
jp
mov
inc
jne
out
out
mov
pusha
xchg
or
arpl
lcallw
jb
and
shlb
xchg
loop
jno
cmc
inc
dec
sbb
dec
cmp
add
int
repnz
cmp
sarb
imul
jmp
scas
ss
nop
lods
icebp
stos
movsb
leave
jno
mov
mov
movsb
leave
icebp
sahf
pop
clc
daa
cmc
mul
add
in
sahf
cs
mov
shlb
mov
jns
gs
mov
dec
pop
fisttps
mov
loopne,pt
cmc
lods
call
mov
ljmp
jge
and
sbb
das
lcall
and
pop
popf
jb
push
push
dec
out
hlt
cmp
in
fists
jp
mov
lret
shlb
jmp
pop
and
mov
xchg
xchg
mov
clc
cmp
out
test
in
xchg
jbe
outsb
xor
fisubl
and
xor
movsl
insl
cmp
rolb
in
dec
fbstp
inc
jno
or
dec
movsl
insl
cmc
push
cld
push
loopne
in
je
in
inc
xchg
andb
sahf
cld
jle
dec
pushf
or
pop
cmp
test
sub
test
cmp
out
mov
cmp
xor
pop
push
push
cmp
sbb
push
push
inc
jmp
mov
in
inc
addr16
aam
cmp
std
lods
ret
xor
outsl
aad
mov
cmp
cltd
cmc
ja
in
into
lods
scas
inc
push
loopne
rcll
jecxz
or
mov
and
or
outsl
mov
jle
jne
popf
sub
pop
jle
in
mov
loop
lock
mov
stos
sub
jmp
out
inc
mov
xchg
add
out
pushf
xor
cli
pushf
mov
dec
xchg
mov
cmp
mov
adc
or
inc
mov
sbb
scas
mov
add
lock
ja
inc
jo
and
pushf
icebp
in
mov
inc
outsl
test
shll
jo
cmp
inc
outsl
movsb
shll
push
je
sub
push
jbe
fsubl
push
xchg
out
sbb
ret
shrb
xor
xchg
cwtl
sbb
aam
pop
xchg
cmp
cmp
sbb
cmp
ja
pop
sub
or
lahf
loopne
stos
push
jbe
pop
jl
sbbl
inc
xchg
popf
popa
leave
mov
inc
lahf
adc
cmovnp
test
aam
pop
inc
pusha
jae
sbb
dec
and
or
adc
test
insb
or
aas
test
pushf
push
jns
sbb
push
stc
dec
jmp
shlb
addr16
jmp
popf
xchg
daa
ljmp
jmp
cmp
cmp
push
pop
mov
mov
out
xchg
loope
jo
cld
fwait
arpl
mov
ljmp
mov
mov
cli
movsb
push
aaa
inc
fbld
xchg
int
xor
outsl
jle
sahf
adc
push
xor
push
fimull
ret
xchg
jns
or
ja
into
clc
sbb
mov
out
xchg
out
js
jp
jmp
sahf
loope
hlt
sub
int
repnz
mov
xor
std
xchg
sbb
shrl
push
adc
mov
outsb
shlb
push
iret
sahf
ljmp
or
pop
out
sbb
mov
aad
xor
add
sar
and
stos
and
and
push
mov
sub
pop
je
mov
mov
fdivs
xchg
pop
out
jb
cmp
dec
add
pop
loop
in
shrl
dec
inc
gs
fucomi
dec
clc
and
adcb
inc
xchg
lea
and
xor
mov
test
fstps
mov
xchg
jg,pn
das
fs
fadds
pop
data16
mov
test
mov
jbe
or
push
fs
xor
xchg
test
test
jne
xchg
inc
lret
and
lods
pop
rorb
mov
xchg
add
xchg
int
pop
and
out
add
int
out
jnp
dec
jno
fisttpll
roll
cltd
cmp
cmpsb
out
std
outsb
push
mov
inc
add
js
mov
dec
xor
lret
loopne
fst
ret
xchg
int
xchg
mov
jecxz
stos
jecxz
out
jl
test
add
push
popa
roll
cltd
outsb
adc
dec
mulb
scas
sub
inc
clc
xchg
insl
push
jmp
jno
cmp
xor
push
push
pop
push
adc
test
ficoms
in
loopne
jmp
jmp
cmpsb
test
idivb
clc
iret
jb
sbb
mov
fyl2x
shlb
sbb
dec
and
or
lock
mov
mov
stos
daa
sbb
ss
xchg
mov
cld
mov
pop
test
dec
sahf
out
ret
fisubrs
rclb
nop
pushf
pop
push
fwait
cmp
iret
int
pop
xchg
lods
cmp
mov
shr
push
test
xor
imul
mov
xor
xchg
jmp
jno
push
inc
mov
filds
inc
mov
xchg
jl
mov
and
add
adc
sub
pop
sbb
cwtl
jne
leave
clc
sti
mov
fsubr
pop
and
stc
scas
es
mov
sub
test
mov
sbb
inc
pop
or
xor
adc
fiadds
adc
std
mov
sbb
sti
add
fs
mov
inc
test
or
dec
pop
mov
dec
sbb
out
lret
nop
jle
inc
sbbb
xchg
dec
in
aas
sbb
inc
add
stos
mov
test
es
fcmovu
xchg
cmp
push
add
decb
inc
xchg
jp
adc
sahf
sub
inc
mov
xchg
jmp
data16
add
pusha
punpckldq
push
sarl
sti
adc
or
sbb
daa
cltd
jle
sti
cmpsl
fwait
sbb
out
cltd
in
lahf
insl
cli
fldl2e
cltd
cmc
test
mov
cmp
mov
dec
adc
shlb
jae
call
push
cmpsb
cld
stos
ja
add
mov
dec
cltd
movl
add
push
xchg
mov
pop
mov
insb
fsubl
mov
xchg
fmuls
and
or
mov
adc
xor
pop
insl
cli
imul
insl
mov
inc
and
ja
das
sti
mov
push
sahf
cmp
xchg
cmpl
in
loopne
cltd
push
shrl
or
and
mov
sti
ficoml
in
sbb
repz
jl
mov
xor
mov
sub
ret
jg
int3
xlat
push
cltd
arpl
adc
jo
or
lea
pop
js
mov
xchg
mov
test
ror
adc
leave
shlb
xchg
ljmp
push
pop
dec
mov
cwtl
cmc
and
jae
sub
xchg
jne
add
stos
fadd
and
mov
xchg
shrb
mov
movsb
xor
sub
cwtl
or
adc
jmp
test
arpl
xor
mov
pop
subb
xor
jp
xor
push
mov
dec
dec
rcl
xchg
pop
stos
hlt
cmp
clc
sti
cld
sub
into
std
ds
push
movsl
das
out
inc
push
push
outsl
inc
sbb
push
lds
bound
lret
and
mov
aaa
adc
or
jns
ret
fidivs
loop
fstps
mov
fwait
sub
nop
jge
dec
xchg
in
push
gs
gs
clc
push
push
lock
add
xlat
div
shrl
cmc
imul
in
jae
scas
addr16
fidivs
jbe
jbe
gs
adc
pop
sub
mov
insb
push
cmpsb
mov
xlat
stos
bound
or
notb
js
aas
lods
dec
adc
cmp
call
in
aas
scas
call
out
mov
sub
addr16
mov
in
fsts
inc
stc
jg
or
incl
mov
fcmovnbe
leave
repnz
shrb
adc
data16
repnz
lahf
xchg
in
adc
mov
xchg
jg
mov
ret
xor
xchg
xchg
or
icebp
mov
or
or
lods
lods
dec
or
sbb
mov
iret
sbb
cmp
pusha
add
test
repz
pop
test
bound
push
add
jmp
mov
loope
lods
dec
aaa
hlt
andl
nop
mov
testb
loopne
in
pop
sub
leave
sub
mov
out
arpl
xchg
lret
mov
xor
jne
jbe
mov
repz
xor
push
out
mov
lds
push
lcallw
mov
imul
xchg
sbb
dec
in
xor
loope
loopne
orl
push
outsb
fs
ja
mov
mov
shrb
aaa
xor
xor
outsl
sub
xchg
xchg
dec
test
ds
add
sbb
ja
xchg
and
scas
mov
mov
leave
jmp
sub
in
leave
mov
call
lods
or
dec
pop
push
push
fisubs
sub
pop
je
shl
xchg
out
daa
adc
fistl
sub
mov
iret
jmp
fstl
scas
test
adc
inc
sarb
xchg
popf
inc
pmaddwd
scas
xchg
jne
fstpl
push
add
jae
and
data16
xchg
push
dec
je
adc
lods
mov
dec
mov
or
push
ret
cld
pop
jne
imul
cmp
xlat
xchg
lds
bnd
das
fwait
aaa
aas
das
fistps
js
xchg
adc
sub
out
sbb
icebp
movsb
or
cld
xor
cld
out
sbb
push
mov
iret
test
adcl
xor
dec
push
popf
stos
cmpsb
cmc
push
and
inc
popa
jle
test
jbe
fwait
mov
and
outsb
shrl
lret
xor
pop
xor
xor
jg
pushw
xchg
xchg
js
push
push
mov
mov
ja
icebp
loop
inc
fwait
jae
sub
inc
sti
jae
jnp
jae
push
adc
sub
dec
inc
scas
cmpsb
mov
cmp
jb
cld
std
mov
pop
fdivr
lahf
ret
fcompl
add
push
jb
loop
imul
mov
jae
loope
add
repz
adc
sub
daa
mov
add
iret
pop
push
sbb
fisttps
cmp
loop
push
movl
xor
jb
repz
push
dec
in
decl
daa
mov
ja
adc
ds
mov
divb
jecxz
and
outsb
sbb
cmp
pop
pop
lods
cmovp
xchg
test
push
fstpl
mov
and
imulb
xchg
out
scas
xchg
mov
fldt
sub
shlb
insl
rol
je
repz
jns
cld
leave
inc
xor
cmp
rolb
lock
xor
push
push
shrb
fwait
out
ret
mov
mov
shrb
pop
or
repnz
jg
mov
push
mov
add
and
jg
xor
mov
xchg
sub
mov
ja
dec
mov
rcrl
xchg
sub
jle
rcrl
jle
out
jecxz
sub
mov
outsl
pop
pop
mov
outsl
and
push
pop
icebp
inc
fdivrl
pop
adc
or
inc
repz
fcomp
pop
inc
adc
sub
mov
xor
push
jbe
aad
lods
dec
cli
mov
std
jp
jmp
jne
adc
movsb
ja
inc
mov
xchg
mov
cmpsl
stos
pop
add
and
ja
xchg
mov
xchg
inc
jo
out
sahf
sbb
fldl
xlat
fisttps
sbb
push
dec
jecxz
xchg
inc
mov
iret
repz
mov
jb
insb
lods
adc
cld
fbld
dec
mov
arpl
lret
or
roll
xchg
sahf
ret
test
lods
call
adc
mov
imul
or
xchg
pushf
mov
cmp
cmp
mov
and
sbb
push
add
cmp
mov
or
sbb
xor
lods
cmpsl
ljmp
test
ds
movsl
addr16
call
shll
aam
jmp
lret
stos
and
jle
pop
call
lods
mov
dec
ljmp
jge
fildl
sbb
jle
cmp
or
pop
sbb
add
mov
xchg
sbb
xchg
sbb
push
outsb
mov
sub
xlat
mov
push
scas
push
mov
lods
jb
push
out
test
jb
sub
pop
in
sub
xchg
jb
sub
inc
in
sub
mov
sub
mov
test
out
std
inc
mov
xchg
sti
dec
in
in
sub
dec
in
sub
test
push
out
xlat
lret
mov
mov
jb
sub
pop
in
push
out
jnp
cmp
sti
xorl
decb
pop
rcrl
mov
rorb
jge
lahf
sbb
ds
repnz
jle
data16
pop
mov
adc
repnz
sarl
pop
fnsave
lea
pop
jbe
cwtl
cs
push
sub
fisubrs
movsl
pop
cmp
outsl
outsb
mov
notl
dec
lock
incl
mov
pop
adc
pop
cs
leave
jge
insb
push
cmpsb
cld
and
decl
insb
jge
lds
fwait
inc
xchg
dec
insb
push
inc
bound
jo
xchg
lahf
stos
add
or
push
fstl
hlt
nop
sbb
sti
push
stc
or
pop
inc
jmp
push
xlat
iret
jle
xchg
mov
insl
daa
jle
loop
inc
scas
or
adc
data16
adc
xchg
adc
inc
add
xor
pop
push
xchg
leave
icebp
pop
sbb
arpl
stc
cli
xor
jae
in
pop
stos
movsb
xor
mov
into
xor
std
das
rcr
cmp
sub
ss
scas
cmpsb
mov
cmp
jae
test
push
sbb
das
fdiv
lahf
ret
fistpl
and
popf
mov
adc
hlt
add
mov
outsl
loop
cld
and
dec
inc
xorb
pop
push
and
in
jecxz
fldcw
punpcklwd
xor
xchg
xor
jmp
mov
jno
movsb
cmpsl
mov
test
int
out
jp
cmp
rcll
jge
mov
int3
repnz
push
mov
dec
sub
and
jp
out
sub
xlat
xchg
mov
cmpsl
in
mov
in
push
roll
adc
pop
lcall
lret
mov
das
sub
push
pop
xchg
addr16
or
lods
mul
popa
imul
movsb
aas
inc
test
cmp
xlat
push
and
mov
push
aam
or
stos
ds
xlat
push
loope
sti
mov
out
mov
loope
dec
dec
push
stc
sarl
gs
rcll
mov
xlat
pop
fsubr
movsb
jne
arpl
pop
pop
out
cmpsl
mov
mov
cwtl
push
dec
pop
cli
xor
popf
jns
repz
mov
outsl
xor
or
sub
adc
shlb
cmp
jp
nop
jne
js
jb
ror
pop
inc
push
roll
sahf
ljmp
rclb
jnp
cmpsl
inc
or
sbb
daa
mov
pop
pop
cmc
and
xor
sub
nop
ror
jo
test
daa
in
mov
jnp
rcrb
mov
scas
sub
xchg
repnz
push
loop
iret
mov
mov
lds
xchg
sahf
push
sti
loope
dec
das
dec
dec
xor
push
xchg
insl
pop
dec
insb
inc
xorb
jno
out
int
loop
lcall
inc
pop
mov
fwait
hlt
pop
iret
lret
cmc
jae
pop
sub
push
arpl
jge
stc
mov
int3
jnp
test
pop
push
loopne
lcall
mov
xchg
xchg
jge
gs
gs
mov
lea
pop
mov
in
add
pop
lds
ljmp
dec
jg
pop
sbb
iret
mov
dec
mov
inc
cmp
loope
outsl
dec
popa
leave
xchg
shrl
jp
rclb
lcall
inc
pop
and
pusha
in
mov
ds
jo
leave
loope
jb
in
faddl
dec
ds
sbb
pushf
lret
mov
ja
xor
icebp
jle
std
xchg
fsubl
negl
fcmovnb
fstps
mov
fsubr
jl
mov
adc
add
pop
xchg
and
or
add
fs
fisubl
cmp
mov
cmp
xchg
clc
fisubrs
aam
pop
ljmp
jle
xchg
sub
outsl
dec
xchg
out
mov
mov
sbb
push
jecxz
add
cmp
push
movsb
mov
xchg
pop
fwait
stos
sub
lods
mov
fidivl
pop
add
pop
mov
mov
mov
adc
lret
sahf
dec
dec
xor
fistps
and
ja
pop
inc
push
push
test
xlat
mov
lds
insl
push
lret
mov
jnp
mov
xlat
adc
sbb
sahf
enter
mov
pusha
mov
les
cmc
inc
adc
jl
es
jne
inc
push
ret
sub
or
add
pop
cmp
mov
mov
add
imul
adc
cmp
add
pop
lods
imul
out
mov
repz
movl
xor
push
mulb
mov
mov
clc
push
es
xor
jg
fisttpl
out
in
aaa
fildl
imul
test
cmpsl
mov
sbb
adc
ret
sub
sbb
dec
mov
std
arpl
daa
sub
cmpl
and
cmp
xchg
cld
jns
push
fsubrs
aam
sub
popa
mov
popf
jl
jg
popf
cmp
jno
adc
movd
cld
out
scas
xchg
aad
movsl
xor
jecxz
cmp
fldt
and
ficoms
pop
into
loope
xchg
cmc
stos
imul
jp
inc
in
mov
js
test
icebp
mov
aad
sub
jp
add
fmull
mov
imul
push
add
mov
lods
and
test
push
jbe
cmpsl
mov
sbb
mov
mov
jae
out
xchg
sub
cli
push
cmp
xor
aad
push
sahf
jp
mov
push
jl
cmp
xchg
es
ss
add
test
repz
add
inc
aaa
jge
pop
xchg
ficoms
idivb
xorl
fcomip
xor
aaa
mov
repz
mov
shrb
jp
in
and
into
or
mov
loop
jecxz
fwait
cmp
mov
stos
mov
mov
fmull
cmp
xchg
push
test
aaa
dec
jbe
rorb
les
negl
dec
pushf
std
jg
lahf
or
idiv
jb
scas
ret
xor
shll
pop
mov
mov
adc
or
xor
dec
jmp
jl
xchg
out
xchg
test
or
mov
pop
stos
xor
fistps
data16
mov
out
fdivrp
mov
adc
mov
jnp
cmp
lods
cltd
cmp
xchg
cmovns
jbe
mov
cmp
inc
sbb
cld
sub
into
mov
dec
pop
mov
lea
xor
ret
cmpxchg
mov
lret
sub
ret
inc
push
push
jbe
pop
fimull
loope
sarb
jp
push
lret
rcl
leave
flds
jg
xchg
and
lahf
out
stc
mov
cmpl
push
sub
add
fnstenv
fnstcw
in
hlt
mov
movsb
movsl
loope
daa
pop
stc
xchg
xlat
xchg
xchg
test
cmpsl
in
and
out
lock
adc
push
scas
test
daa
sbb
mov
sub
imul
mov
jno
adc
add
mov
lret
les
in
mov
mov
ret
clc
jbe
hlt
cmp
mov
xchg
pop
stos
cwtl
inc
lahf
loopne
cmp
outsl
ljmp
outsb
mov
loopne
jns
xchg
shl
rolb
scas
out
das
shlb
insl
lcall
mov
les
loope
mov
push
push
jg
xchg
adc
addr16
ds
inc
aas
sub
jmp
jmp
lods
sub
shll
mov
scas
mov
cmp
mov
out
mov
pop
xchg
repz
js
sbb
pop
xor
decb
push
sbb
hlt
scas
dec
fldcw
pop
data16
repnz
cltd
xor
cmpsl
loope
test
addl
pop
push
pop
adc
pop
pop
sbb
movsl
adc
xchg
in
and
mov
ds
inc
shl
lret
pop
cmp
data16
push
lods
push
pop
push
mov
sub
clc
sub
lea
movsb
lods
mov
leave
add
dec
sbb
and
mov
xchg
sub
inc
loop
cmp
xchg
cmp
lret
push
xor
push
jmp
fsubrl
sub
mov
clc
fbld
gs
mov
out
fs
jns
mov
pavgw
mov
pop
fdivl
stc
repnz
dec
xchg
mov
imul
mov
lds
dec
lahf
fnstcw
lret
jl
xchg
stc
pushf
mov
loopne
enter
pushf
jecxz
mov
std
jmp
inc
fldt
test
dec
iret
clc
jge
pop
fbld
push
cli
ret
hlt
jns
inc
out
jl
out
imulb
pop
push
sub
aad
sti
test
test
push
scas
lcall
fs
enter
or
inc
je
inc
xor
jae
pusha
jle
cmp
mov
f2xm1
inc
pop
out
es
pop
in
or
mov
clc
add
xchg
cmp
scas
sbb
loopne
pop
mov
mov
into
or
mov
push
in
xlat
adc
movsl
outsl
lret
negb
pop
sbb
inc
mov
sbb
jb
lret
adc
addr16
mov
das
jno
mov
inc
rcrl
xchg
and
sub
mov
unpckhps
inc
rcr
adcb
mov
mov
pavgb
cmpsb
adc
mov
loop
jmp
in
mov
in
pop
fmul
in
in
lock
xchg
pop
cmp
aaa
in
pop
mov
cmp
aaa
icebp
test
push
mov
mov
mov
int3
push
lahf
insl
mov
adc
adc
xrelease
into
fists
pop
jl
cmp
jge
push
sub
pop
push
mov
pop
pop
mov
popa
hlt
sub
ss
pop
lret
fcomip
popa
cmp
dec
test
mov
pop
das
sub
mov
dec
sarl
lret
xlat
nop
les
mov
cmp
and
pop
jmp
dec
inc
lea
mov
jp
popa
adc
inc
out
gs
stos
mov
loop
bound
lahf
xor
jmp
dec
cmp
push
out
cld
add
aam
fstpt
push
aam
cmpsl
mov
push
js
push
cmpsl
fstpl
sub
aas
loop
pop
ds
jne
pop
mov
repnz
sub
xor
stos
fildll
jnp
incl
cltd
out
icebp
mov
ret
in
pop
push
hlt
mov
jge
sti
cs
in
stos
mov
sbb
pop
xchg
jge
pop
cltd
rolb
cld
aas
lahf
repnz
and
cmc
fs
ljmp
inc
inc
insl
push
imul
lret
sub
cmpl
int3
sub
push
lcall
mov
imul
mulb
cmpsb
push
hlt
jle
outsl
mov
lcall
jmp
jecxz
sbb
inc
cmp
sub
fbstp
cmp
adc
je
xlat
rorb
int3
es
gs
sub
pop
mov
imul
lock
sbb
mov
push
and
gs
cmc
adc
mov
sbb
js
jle
sbb
repz
and
into
xchg
test
mov
out
pop
js
inc
or
loopne,pn
stos
cltd
orl
mov
push
lret
inc
mov
clc
mov
shlb
ja
mov
sbb
push
cli
push
dec
imul
or
inc
cmp
adc
and
mov
insl
rorb
or
mov
inc
cmp
dec
mov
mov
adc
push
ljmp
lods
repz
jns
mov
push
mov
pop
mov
inc
xacquire
adc
and
in
pusha
out
xchg
push
pop
ret
js
mov
mov
sub
fiadds
pop
adc
sbb
inc
mov
cmpsl
aam
xchg
sub
fwait
xor
repz
in
dec
cmpsb
mov
rorb
adc
outsl
jbe
repz
fwait
pop
adc
stos
insb
mov
push
jae
dec
aam
jl
push
push
es
jmp
push
inc
std
jns
fists
push
cmp
jmp
fisttpll
and
mov
repnz
pop
sahf
hlt
lds
push
dec
sbb
es
imul
mov
int3
rol
jecxz
lods
push
sbb
into
add
mov
imul
mov
into
and
popf
xchg
popf
inc
jb
mov
fwait
mov
leave
mov
in
mov
leave
mov
and
lods
xorl
out
inc
out
and
in
sbb
fiadds
dec
cmp
pop
xor
in
stos
lock
jns
ja
mov
push
scas
xchg
sar
cmp
add
adc
nop
test
adc
ficoms
xchg
push
mov
add
inc
icebp
mov
in
pop
bound
data16
adc
or
jno
out
sub
mov
mov
lret
data16
repnz
cmc
pop
clc
mov
lret
inc
scas
sub
outsb
jmp
push
jne
fcoms
loope
inc
std
push
sbb
pop
sti
sbb
lods
mov
lea
pushf
xor
cmp
inc
idivl
lahf
mov
mov
addr16
jp
data16
jbe
enter
out
sub
sbb
cmp
fst
jg
cmc
and
jns
xor
dec
inc
and
in
sbb
in
mov
inc
sub
addr16
inc
mov
and
icebp
pop
xor
add
mov
sbb
mov
jbe
push
push
popf
dec
push
in
lret
or
repz
mov
push
sti
add
lret
loope
sbb
lret
imul
insb
pop
loope
inc
xchg
mov
add
dec
adc
stos
and
cmpsb
sahf
stos
sbb
cli
pusha
incb
xor
mov
cmc
es
inc
mov
xchg
xorl
ja
adc
mov
jmp
enter
mov
or
mov
inc
dec
xchg
sarl
push
dec
pop
inc
push
push
mov
ret
jne
sahf
xor
shlb
jb
pop
add
inc
add
andps
lret
addr16
push
repz
popa
jmp
inc
or
xchg
sarb
cmc
push
push
clc
mov
sbb
push
cmc
lcall
lahf
pop
fwait
mov
mov
shlb
cmp
dec
mov
cmp
lret
into
pop
jo
inc
push
fidivrl
cld
in
aas
cmp
outsb
sbb
push
cltd
xor
stos
adc
jl
js
movsl
and
arpl
ljmp
mov
negb
cmpsl
and
ret
ljmp
hlt
push
mov
cmpsl
jns
sbb
jbe
mov
jl
and
test
lret
mov
xchg
icebp
add
adc
fs
sub
xor
jb
jno
leave
nop
xor
xor
rol
testb
insl
movsb
fisubs
sti
add
sbb
addl
mov
push
cmp
pop
xchg
inc
sbb
in
xor
fdivrs
outsl
enter
jbe
dec
popa
movsl
lahf
popa
cmpsl
aaa
mov
push
push
insl
mov
adc
ljmp
mov
ficompl
shlb
lcall
es
repnz
test
test
aam
push
iret
lock
fldcw
inc
int
inc
gs
lods
xor
push
mov
pop
out
pusha
dec
imul
and
mov
mov
sar
stc
sub
adc
jno
lret
mov
mov
dec
stos
jle
xor
push
repnz
popf
test
subl
sarb
mov
in
rcl
fildll
or
sbb
test
cwtl
enter
dec
jno
pop
in
cmpsb
inc
mov
pop
adc
dec
mov
cmpsl
jl
mov
xchg
rol
out
dec
in
mov
loopne
in
sahf
arpl
push
mov
sub
sbb
jo
mov
pop
jo
mov
popa
mov
fisttpll
aaa
gs
popa
dec
andb
lret
lods
pop
out
scas
pop
sbb
and
add
jno
sar
subl
fsubrp
pop
pop
fwait
lods
repnz
or
and
or
shrb
mov
xchg
adc
jmp
enter
daa
jo
lock
outsl
inc
iret
movb
inc
in
cwtl
gs
jae
aad
gs
shrl
add
aam
out
lret
pop
pop
jo
mov
mov
out
pop
jno
push
adc
fsubl
icebp
ja
cmpsb
add
ret
mov
sub
jnp
mov
pop
aad
sbb
pop
push
outsb
and
out
hlt
fisttpl
cmpsl
ds
popf
mov
mov
mov
mov
test
je
rorb
adc
sub
pusha
aam
mov
or
inc
sarb
sbb
xchg
dec
rcrl
ret
popf
mov
and
lds
or
push
lahf
out
mov
xchg
cli
fmuls
enter
xchg
mov
iret
mov
mov
imul
cltd
cmp
jp
js
xchg
xor
adcb
js
or
jl
popa
lock
cmp
pop
imul
clc
daa
scas
aas
jl
jbe
loope
pushf
mov
lahf
lret
jg
cltd
loopne
sub
pop
push
ret
xchg
loope
clc
xor
sar
mov
scas
pop
pop
fistpl
add
inc
les
pop
mov
loopne
loope
jno
xchg
fcompl
push
ret
rcll
repz
stos
ret
test
cmp
mov
js
inc
cmp
popa
adc
pop
jbe
inc
sti
sub
iret
into
push
call
or
sbb
cwtl
inc
mov
push
sub
or
push
test
inc
sbb
mov
inc
addr16
add
xor
add
inc
mov
mov
or
inc
loope
sbb
loope
adc
lock
or
mov
outsl
aas
xchg
fadds
or
fwait
ret
mov
mov
inc
call
or
clc
insl
or
pusha
mov
cwtl
push
ds
xor
cwtl
sub
ret
add
cmp
inc
pop
mov
rclb
inc
pop
jb
rorb
dec
pop
mul
cmpl
jecxz
inc
je
orb
les
rolb
fcoml
ja
add
inc
jnp
pop
bound
xchg
cmp
ret
sbb
in
dec
popa
fmul
outsl
fiadds
push
jecxz
push
mov
xchg
push
clc
cmp
mov
or
out
movsl
insb
cltd
dec
cmp
je
xor
cmp
sbb
add
sub
push
sub
stos
sahf
outsb
adc
push
pop
jbe
popa
test
lea
sbb
fwait
setne
cmovb
mull
xchg
xor
aas
jne
rorb
daa
mov
cmp
adc
jno
dec
frstor
sbb
jno
jbe
push
pusha
dec
das
test
out
pop
lods
mov
call
push
icebp
aam
aam
mov
xchg
test
je
icebp
mov
inc
cmc
lods
repz
mov
lods
dec
test
into
lret
loop
xchg
push
pop
push
jnp
lret
sbb
lret
mov
in
stos
mov
cli
push
test
xlat
ljmp
jl
gs
xchg
jns
in
cli
jnp
inc
cmp
jle
jmp
jecxz
cmc
sbb
ljmp
std
cmp
in
mov
idivb
jecxz
jg
xlat
into
out
test
out
loop
stc
xchg
lret
fstps
push
push
pusha
xor
push
inc
gs
pop
popf
out
mov
or
scas
xchg
gs
lahf
imul
jecxz
lds
sbb
xchg
mov
mov
and
inc
mov
xchg
pop
inc
xor
xor
fdivr
icebp
sbb
mov
out
dec
jb
ret
xor
adc
jecxz
mov
lret
lds
push
std
idivl
bound
cmp
lahf
fsubs
and
jo
mov
jae
cmpsl
add
filds
and
xchg
pop
icebp
lock
cmp
pop
les
cmp
pop
adc
xchg
xchg
push
out
sbb
ds
jl
sub
leave
clc
inc
out
xor
inc
mov
addr16
sbb
bound
cmp
sbb
jg
cld
add
pop
arpl
mov
jno
movsl
cmp
jg
jae
xor
mov
add
mov
into
ja
lds
sub
jno
aam
loop
ds
push
push
add
cmp
out
mov
lods
mov
push
push
in
mov
ljmp
ja
and
adc
popf
cli
mov
stos
pop
jecxz
inc
fwait
outsl
push
adc
scas
stos
scas
not
js
or
pop
lret
mov
jecxz
insb
stos
mov
bnd
sub
cmpsl
out
andb
adc
gs
xchg
pop
add
ja
add
xchg
scas
sbb
and
or
dec
insl
sbb
inc
fs
mov
dec
sbb
pop
jl
mov
imul
push
jl
test
jp
push
push
cmp
jl
scas
mov
and
and
inc
gs
movb
outsl
sub
bound
icebp
push
scas
stos
clc
shrb
test
lahf
mov
cmp
jg
inc
mov
fimuls
fbstp
cmp
mov
push
inc
int
lock
hlt
jns
jae
in
imul
sbbl
cmp
jae
sbb
frstpm(287
push
out
jle
inc
mov
mov
jnp
sbb
cli
jne
push
jo
pop
push
mov
cltd
xchg
or
ret
lock
sub
call
in
pop
sbb
out
lret
fildl
js
sbb
pushf
gs
cmp
mov
xchg
pusha
leave
lcall
sub
test
stc
cmp
test
cltd
rclb
out
inc
out
jmp
daa
xchg
jae
mov
insb
fistpl
xchg
xchg
arpl
test
sahf
sbb
dec
mov
out
mov
inc
in
and
mov
xor
out
out
xchg
shlb
xlat
xorl
xor
jo
into
sub
mov
lret
dec
xchg
pop
adc
mov
sbb
adc
jne
imul
push
mov
aad
out
pop
mov
test
test
mov
or
lds
loop
lea
push
mov
lahf
inc
insl
inc
jo
sbb
mov
sbb
mov
jo
sbb
mov
subb
jne
scas
mov
mov
cmp
in
sbb
sahf
lret
push
arpl
push
sub
mov
jmp
insb
addr16
or
push
jmp
clc
xchg
pop
ss
jnp
sub
push
iret
and
sbb
imul
push
sahf
sbbb
mov
call
and
jbe
imulb
adc
cmp
xchg
call
jge
pop
jg
pop
sub
mov
inc
add
lea
ret
sub
or
dec
dec
sbb
dec
cld
inc
aad
jp
sub
dec
and
jecxz
dec
outsb
call
inc
in
cmp
int3
hlt
addl
pop
cmp
out
jle
inc
lahf
fstpt
sub
push
mov
add
dec
jne
mov
xchg
jno
lret
enter
icebp
push
stos
cli
fbstp
cmc
mov
mov
pop
cld
scas
ud0
je
mov
cli
pop
pop
fucomp
jo
mov
fcmove
into
dec
cmp
lcall
imul
test
mov
fisttpll
rclb
mov
lahf
rcrb
jmp
add
cmp
or
push
neg
xchg
jo
xchg
sarl
testb
jp
addr16
hlt
mov
inc
add
sbb
mov
cmp
das
cmp
dec
push
or
xor
ja
adc
insb
addr16
aas
mov
mov
fstl
mov
adcl
mov
clc
jno
xor
pop
pop
mov
leave
sbb
inc
cmpsl
xor
jg
jnp
iret
mov
insl
push
pop
jno
inc
push
clc
pusha
or
aas
lahf
pop
dec
xchg
out
adc
aad
fwait
imul
std
push
rcrb
dec
pop
dec
jnp
sbb
jg
sbb
or
push
xor
add
stos
fsub
sbb
mov
sub
adc
hlt
mov
pop
hlt
mov
pop
clc
out
cld
pop
mov
mov
mov
sti
push
loope
movsb
mov
clc
leave
out
jl
or
xchg
in
fdivl
push
cvtps2pi
test
mov
inc
std
fucomi
imul
imul
mov
aas
std
shrl
jnp
cmpsl
lods
push
pop
enter
cmp
lahf
push
or
adc
loope
shl
or
jo
stc
out
xor
xchg
iret
scas
mov
jg
imul
addr16
rcll
adc
push
xchg
andl
stos
cld
jno
jge
push
sub
xlat
insl
sbb
cmpsb
lret
jae
xchg
xchg
popa
es
sbb
jg
xor
mov
insl
pop
shll
push
or
sub
loopne
or
sub
xchg
jmp
cmp
jb
shl
cwtl
daa
dec
orl
call
cs
xor
and
jecxz
xchg
notl
jl
in
cmp
jp
jo
sub
adc
sub
jge
les
push
mov
push
mov
push
out
ret
jbe
xor
mov
dec
inc
clc
sti
inc
sti
fdivrs
mov
cmp
inc
cld
insb
and
xchg
aam
mov
sbb
lcall
std
fildl
out
push
jl
loope
xchg
nop
mov
out
repz
dec
test
cs
adc
fimuls
cmc
cmp
cmpsl
stos
lea
and
inc
clc
ret
out
pop
lds
addr16
aaa
mov
push
mov
mov
xchg
insb
jmp
jbe
cmp
push
jno
mov
mov
repz
enter
fimuls
lds
jp
pop
cmp
inc
outsb
lock
fwait
sbb
notb
cmp
fcomps
push
mov
add
mov
adc
cmp
je
mov
stos
push
ficoml
icebp
xchg
aam
bnd
cltd
mov
jae
mov
xchg
cmc
mov
std
pop
add
movsb
or
adc
xchg
pop
jne
stos
out
sbb
mov
mov
icebp
xchg
es
or
es
or
mov
or
mov
nop
jae
add
std
pushf
mov
inc
adc
push
dec
hlt
and
xchg
jnp
mov
xchg
xor
mov
std
mov
rorb
in
in
sbb
test
mov
xchg
jg
dec
hlt
cmpsl
fiadds
cmp
jmp
mov
push
and
fdivrs
nop
hlt
rcrl
mov
es
inc
mov
mov
pop
mov
adc
fiaddl
stos
or
in
imul
jmp
and
fwait
hlt
cmpsl
rolb
push
pop
or
lock
jl
mov
into
in
push
xor
and
out
jae
jns
bound
enter
ret
scas
sti
sbb
fcomp
xchg
and
lcall
movsl
mov
sti
inc
clc
mov
rcll
hlt
cmp
fucomi
bound
sub
xor
mov
frstor
push
popa
push
pop
cltd
sub
cmp
leave
dec
es
ljmp
incb
jb
lret
fistpl
sbb
ds
add
push
jo
cmp
jnp
xchg
mov
sub
sarb
int3
jge
or
jl
xchg
idivl
rorl
frstor
fsubrs
inc
int
push
jnp
stos
xor
pop
aam
orb
pop
add
xchg
lods
lret
xor
push
push
mov
fs
std
stc
negl
ret
cmp
pop
arpl
inc
lcall
cmpsb
sahf
in
add
pop
jmp
cli
xlat
and
in
inc
adc
xchg
and
mov
arpl
xor
sbb
or
inc
push
or
cmc
nop
nop
shl
mov
pop
jae
les
push
imul
pop
xchg
imulb
xchg
in
arpl
adcl
adc
in
mov
out
imul
rorl
pop
push
pop
mov
jle
pop
cmc
adc
ror
jb
aad
cltd
sysret
pop
test
daa
xchg
lfs
add
enter
xor
xor
rorl
cmpsl
sbb
cmpsl
in
nop
dec
xlat
ret
sbb
cmc
jo
stos
lock
scas
mov
in
dec
ja
aaa
in
mov
scas
iret
sahf
jge
idivb
jge
ss
mov
mov
mov
repz
stos
mov
pushf
imul
scas
and
pop
or
or
rorb
sbb
ficoml
ja
ret
mov
jmp
sub
stos
sar
stos
loope
shr
sahf
into
xor
ds
lock
stos
jg
xor
lcall
push
dec
jmp
dec
pop
jg
mov
pop
mov
pop
push
imul
imul
fmuls
gs
jecxz
imull
sub
daa
mov
test
es
sub
outsl
je
arpl
inc
mov
cs
ret
outsb
sub
or
popf
addr16
xor
jge
lds
test
mov
push
inc
jle
xchg
sbb
daa
loope
sub
cs
cmovge
xchg
hlt
clc
pop
inc
je
arpl
or
call
push
test
mov
xor
and
push
js
xor
stos
mov
rolb
iret
out
push
adc
cmp
adc
popf
cmpsl
jno
ja
pop
jg
xor
jb
inc
lret
push
inc
leave
in
adc
mov
pop
std
lods
sbbb
repnz
popf
int
and
mov
and
jb
xchg
rcr
fs
xor
das
xchg
push
movsb
dec
mov
fucomi
push
in
movb
ja
jae
push
sbbl
mov
mov
mov
sbb
lods
or
jp
fisubrs
rcrb
adc
shrb
js
mov
dec
push
fcomi
orl
mov
xor
call
in
in
sbb
jnp
imul
imulb
out
and
mov
pop
jbe
jae
xchg
pop
cmpsb
rclb
cmp
fistpl
addr16
mov
sbb
or
push
les
shll
in
xchg
and
dec
mov
movsl
xchg
sub
subb
ds
sarl
push
jl
into
in
repz
shr
push
stos
lret
ja
cmp
sarl
test
lds
sub
jbe
mov
loope
inc
es
outsl
cmpb
jge
sub
or
sub
push
dec
neg
paddb
or
adc
push
push
adc
movsl
mov
dec
mov
sbb
lret
mov
mov
cmpsl
test
imul
inc
stos
ja
iret
aam
sub
add
dec
test
xchg
xchg
dec
pop
ficomps
mov
test
shl
fildl
mov
fsubl
pop
std
push
scas
loopne
icebp
or
scas
lock
mov
push
adc
cmpl
lock
icebp
test
adc
mov
and
outsl
pop
clc
hlt
in
and
dec
hlt
jge
les
cwtl
pop
xchg
xchg
push
xchg
js
mov
adcl
xchg
sbb
adc
fnstsw
add
bound
into
fsubrs
mulb
fbld
jecxz
mov
xchg
jmp
xor
sub
sbb
lret
sub
mov
ret
mov
jmp
and
sbb
mov
pop
and
mov
or
xchg
fistps
ja
jecxz
push
pop
std
sbb
dec
adc
dec
xor
jl
cmpsb
or
lods
mov
sbb
cmp
mov
mov
in
and
psadbw
into
jae
dec
out
fs
rcrl
test
clc
cli
push
mov
jp
scas
lcall
mov
or
add
sub
add
xchg
js,pn
js
fwait
lret
pop
inc
mov
mov
repz
in
jg
mov
addr16
cmp
push
pop
stc
enter
test
mov
iret
aad
cmp
or
xlat
lahf
ja
push
cs
push
notl
xchg
mul
push
inc
adc
cs
add
pop
mov
sub
ja
inc
movsl
lret
bnd
fldl
xchg
hlt
jnp
mov
inc
add
add
std
push
sub
mov
shrl
xorb
rcr
hlt
or
incl
outsl
faddl
inc
testb
out
popf
sub
stos
fsubrs
lock
and
clc
mov
ret
xor
fbld
jl
mov
push
sbb
ljmp
pop
mov
idivl
pop
dec
cld
test
jmp
cmc
pop
fnstcw
call
xchg
mov
ljmp
lea
idivl
jae
and
pushf
ud0
cmp
icebp
dec
lock
xchg
jbe
push
xchg
mov
and
sbb
cmp
mov
mov
int3
mov
jns
xor
icebp
fwait
stos
push
cmp
icebp
mov
outsb
aaa
jns
notb
test
adcl
popf
adc
jle
imul
mov
scas
mov
inc
sub
push
mov
pop
ret
icebp
clc
cltd
push
add
sahf
pushl
mov
arpl
test
fcmovnb
cltd
outsb
mov
or
or
pop
les
push
ret
test
test
dec
dec
cmc
adc
xor
dec
lcall
insl
int3
dec
dec
dec
cltd
mov
sub
or
ss
mov
dec
ret
call
cwtl
sbb
xor
cmp
mov
sub
sti
stos
in
ss
dec
inc
dec
in
movsl
or
ror
clc
mov
dec
jl
mov
xor
fwait
xchg
adc
lahf
push
aam
outsl
adc
popf
adc
enter
mov
cmpsb
xor
stos
mov
xchg
loope
adc
add
or
adc
pop
mov
stos
scas
incl
sbb
adc
push
mov
out
jg
xchg
lock
jb
and
rcll
sbb
xlat
mov
xor
adc
mov
loop
pop
mov
aaa
pop
or
or
jb
mov
bound
push
or
mov
mov
lods
pop
pop
iret
sar
lock
fs
repz
and
mov
xchg
pop
lods
cld
pop
lret
push
sub
adc
or
mov
mov
adc
and
lret
push
insb
jbe
ficompl
in
cmp
sbb
sbb
cwtl
testb
adcl
mov
popf
mov
std
mov
jbe
mov
pop
and
push
sub
xchg
sti
push
pop
sbb
fnstenv
rcrl
inc
pusha
dec
pop
sub
push
popa
scas
cmp
sbb
pop
loop
pop
repz
mov
push
lds
mov
aam
das
mov
lcall
dec
mov
arpl
mov
jbe
scas
orl
addr16
outsl
mov
adc
notl
pop
push
jno
mov
shrb
ret
test
in
ret
dec
int3
lock
arpl
insl
lock
in
pop
and
cmpsl
ret
mov
icebp
push
test
cmp
clc
pushf
sti
call
jg
stos
pop
lods
adcb
push
sbb
jge
xchg
push
leave
movsl
sbb
push
rcr
stos
movsb
loope
sbb
outsb
and
test
cmp
popf
scas
dec
lock
sub
scas
dec
inc
popf
fisttpl
mov
mov
cld
aas
sbbb
xor
lea
push
pop
testb
in
jl
cmpsb
fsts
dec
and
mov
xor
jae
adc
js
repnz
and
and
mov
pop
jo
cmp
vmaxpd
sub
scas
xor
lahf
decl
test
cmp
jo
mov
hlt
pop
sbb
or
dec
imul
insb
jmp
xchg
fstps
dec
mov
mov
enter
sub
inc
popf
or
and
xor
repnz
jb
inc
in
jo
retw
adc
push
mov
mov
jge
xor
dec
push
xor
shrb
das
fisttpl
add
imul
fadd
cmp
outsl
es
adc
data16
jecxz
sbb
push
mov
outsl
xor
inc
outsl
addb
inc
add
cmp
icebp
mov
int3
sbb
ret
sub
jecxz
xchg
mulb
call
nop
ret
sub
xchg
cmp
mov
cli
lea
jbe
mov
aad
addr16
dec
cmp
xchg
xor
mov
es
mov
jmp
inc
icebp
pop
les
mov
push
cmpsb
data16
sbb
pop
mov
shll
shll
mov
cmpb
fsubs
jg
int
jae
movsb
stc
dec
or
out
aaa
gs
lods
mov
and
mov
mov
ljmp
es
imul
call
mov
lret
and
adc
xchg
xor
cwtl
dec
neg
icebp
out
cwtl
pusha
jle
inc
mov
sub
and
jo
sbb
std
xchg
push
push
inc
icebp
pop
jecxz
les
sahf
mov
pop
orb
sub
mov
scas
gs
bswap
xor
mov
cltd
lea
xchg
mov
mov
xchg
iret
hlt
cltd
out
dec
push
lods
test
mov
xor
jmp
inc
icebp
sbb
mov
cmp
or
xor
fwait
jp
or
mov
test
adc
fstps
fstps
insb
push
ficomps
insb
push
mov
fdiv
fisubrs
fsubrs
add
sub
cmp
mov
je
aad
stc
jno
pusha
arpl
jl
ljmp
xchg
subb
int
inc
mov
pushf
push
rorl
xor
push
scas
bound
shlb
leave
ljmp
pop
in
adc
int
stos
insl
nop
and
inc
jle
je
sbb
movsl
test
movsb
mov
cli
imul
loopne
jb
and
dec
call
xchg
out
jns
xchg
ret
cmp
or
in
add
nopl
nop
or
sbb
mov
sub
pop
mov
rorl
inc
xorb
push
pop
adc
xor
andl
xorl
fwait
ljmp
mov
xchg
jno
mov
pop
or
xor
pop
shll
cmc
adc
adcl
ret
mov
nop
pop
movsb
fnstenv
stc
and
popa
pop
sbb
bound
arpl
mov
jmp
or
inc
mov
movsl
pop
call
jge
shlb
xor
sbb
clc
jmp
pop
xchg
jle
inc
lcall
dec
mov
lcall
xlat
cmp
push
jmp
mov
jae
loop
xor
ret
xor
es
ret
dec
add
das
sbb
out
push
sub
jnp
cmp
mov
imul
nop
data16
cli
les
in
xlat
add
mul
inc
shlb
adc
sbb
pop
rcl
inc
mov
mov
into
jne
jbe
test
loope
jno
loopne
pop
push
jecxz
jg
decl
push
inc
icebp
fadd
imul
dec
shl
call
push
nop
cmp
mov
xchg
aam
sub
daa
jno
leave
dec
enter
lods
in
in
and
pop
fyl2xp1
mov
pop
xchg
jle
mov
ret
xbegin
mov
or
fcomp
and
lock
cmpsl
pop
push
cli
roll
push
sbb
lods
add
sbb
mov
ds
and
fwait
lret
lcall
dec
test
cmp
sub
jp
push
cmpsl
sub
in
jo
sub
fwait
ds
cmp
inc
popa
stc
or
xlat
and
loope
xchg
push
pop
movsb
fnstenv
aas
call
outsl
cmp
call
out
or
aaa
test
or
frstor
aaa
jl
dec
jb
or
lods
ljmp
mov
sbb
xlat
idivl
or
inc
imul
adc
mov
sub
cmpsb
out
into
cmpsb
lret
fs
cmp
lds
mov
data16
mov
nop
xor
jns
les
or
mov
daa
adc
lret
add
xchg
push
lcall
call
dec
sub
sar
dec
in
cld
adc
in
push
sub
rcrl
fcmovnbe
sub
imull
popa
mov
jns
out
xlat
push
lea
adc
xor
imul
fdivs
jmp
xchg
pop
pop
imul
nop
jae
dec
adc
mov
es
cmpsb
adc
sub
hlt
pushf
shl
repz
xor
and
and
jecxz
shll
imul
dec
push
xor
shlb
hlt
sahf
sub
cmc
jl
fwait
lret
or
mov
outsl
adc
lock
rorl
daa
jl
loopne
cmpsb
xchg
mov
sub
mov
arpl
adc
stos
xlat
or
inc
imul
dec
inc
lcall
xchg
int
inc
pushf
dec
leave
add
cmpsb
pusha
add
out
pop
jo
std
mov
adc
inc
push
cmp
adc
jns,pt
xor
dec
push
xor
jnp
movsb
mov
pop
scas
push
lret
gs
arpl
in
js
gs
js
shlb
mov
shl
push
dec
jl
mov
jae
stc
dec
cwtl
clc
sub
aam
sub
push
sahf
cwtl
js
aad
jns
popf
pusha
bound
inc
pop
sbb
popf
xor
push
into
imul
jmp
and
mov
leave
add
inc
stos
mov
clc
dec
sti
aas
fbld
pop
push
inc
icebp
fdivs
js
addr16
mov
jnp
shlb
movsb
fxch
or
lret
mov
jae
stos
jb
jmp
inc
out
cwtl
xor
fmuls
leave
xchg
popf
or
std
and
dec
and
lret
ds
fwait
enter
dec
shrb
movsb
mov
xchg
jge
clc
pushf
jge
out
mov
push
lcall
movsb
fldcw
cmp
add
mov
into
xor
pop
data16
jae
dec
icebp
enter
mov
push
fcmovnu
aas
fwait
dec
mov
push
xor
xchg
mov
inc
xchg
lock
xor
mov
inc
and
movsl
test
aad
mov
xchg
imul
cmpsb
pushf
dec
hlt
sbb
es
lea
mov
fmuls
fsubrl
loope
negl
movsl
cmp
repnz
mov
loop
mov
les
dec
fdivl
dec
jnp
and
gs
inc
std
insb
xchg
xor
mov
pop
mov
inc
push
sti
ja
cmp
into
cmp
cmp
cltd
jl
xor
mov
fwait
movsl
mov
cli
or
imul
fsubs
mov
fwait
movsl
mov
test
lea
xor
clc
inc
jae
xor
jg
sar
inc
fdivrs
inc
lcall
jg
pusha
xor
mov
loop
push
jno
out
pop
cmp
insl
xlat
or
inc
imul
and
jbe
push
into
pop
aad
jmp
mov
pop
outsb
sar
addr16
xchg
xor
stos
mov
in
xor
xor
data16
push
insl
loop
adc
shrl
sbb
cmp
lds
les
lahf
inc
fnstcw
jne,pt
sub
xorl
imul
pop
mov
out
sub
sbb
out
clc
xor
lret
inc
leave
cmp
fnstcw
dec
ret
roll
ss
push
fwait
pop
dec
sbb
arpl
lea
and
jne
mov
rcl
insb
cmc
add
mov
cmp
loopne
out
pop
jno
out
in
dec
mov
std
nop
mov
inc
fnstcw
jp
ljmp
and
xchg
int
gs
pop
mov
mov
ficomps
pop
lcall
loopne
xchg
cmpsb
out
shl
insl
adc
mov
nop
das
dec
lea
mov
sbb
out
testb
mov
scas
jl
pushf
dec
push
std
daa
dec
fsubl
mov
scas
push
movb
push
mov
jbe
jae
pushl
mov
pop
xor
fdivr
lret
sar
psrld
leave
dec
sub
fldenv
cmp
mov
sub
lea
push
add
imulb
fidivrl
xlat
popf
mov
out
push
addb
shl
out
add
sub
jnp
add
ljmp
mov
lahf
adc
shlb
add
stos
js
mov
pushf
repz
xor
fistl
jno
add
das
repz
mov
ljmp
shl
out
jns
incl
sub
dec
sbb
fstpt
xchg
dec
sti
xlat
and
incb
lea
int
push
sub
mov
into
add
imulb
push
mov
mov
jl
dec
enter
sbb
mov
lock
xor
jl
pop
cmc
or
mov
les
mov
jmp
mov
or
mov
fwait
pmulhw
pop
sub
lahf
popa
ret
test
iret
xor
jns
sahf
xchg
xchg
mov
jmp
fisttpll
data16
jl
lock
jns
in
lahf
mov
xchg
out
mov
sub
incl
cmpl
lret
push
lret
sub
pusha
sub
out
adc
in
out
jmp
xchg
add
adc
jbe
sbb
or
fsubrs
sti
adc
aas
and
test
jg
test
lcall
fcomps
movsl
imul
nop
repz
mov
xlat
mov
or
in
lret
jbe
cmp
lcall
arpl
cmp
pusha
ja
push
imul
nop
dec
mov
ficomps
jmp
pop
hlt
cmc
jg
pusha
addr16
cmpsb
test
pop
movsb
flds
adc
add
mov
push
std
testl
insl
dec
insl
scas
jae
out
ret
mov
jbe
dec
xchg
fcomps
sub
test
xchg
push
cmp
xor
fcomps
test
neg
adc
fnsave
mov
jb
scas
xchg
xchg
fnstsw
and
ljmp
int
jmp
mov
lret
decb
pusha
or
cmpsl
pusha
sbb
loopne
sbbl
adc
sbb
push
repz
mov
mov
add
mov
xor
stc
sbb
sti
jnp
push
fmuls
pop
fiadds
xchg
jo
pop
mov
mov
mov
lods
dec
add
fwait
hlt
pushf
mov
sbb
inc
lcall
movsb
flds
sti
xor
dec
lret
das
mov
call
pop
cmp
lcall
push
icebp
or
iret
stc
or
fimull
jne
sub
insl
insb
das
jecxz
out
inc
sarb
movsb
xchg
loop
xchg
loope
out
out
or
adc
mov
aam
cs
add
inc
lcall
jb
outsl
iret
cmp
pmulhuw
mov
outsb
xchg
cmp
loop
adc
xchg
dec
cmp
test
into
incl
and
inc
inc
ror
dec
xor
add
sbb
jbe
xor
js
addr16
mov
pop
adc
aaa
out
fcomp
inc
fimuls
jmp
lcall
jg
nop
xor
sti
jg
mov
jle
movsb
imul
dec
mov
dec
push
fucomi
cmp
xchg
jbe
jl
pop
jo
mov
push
cmp
cwtl
add
jno
adc
dec
or
nop
xor
xchg
mov
dec
adc
fcomps
or
fsubs
ss
mov
insb
aad
cltd
fwait
sub
sbb
imul
pop
dec
xor
sti
jae
cmp
push
jo
xlat
push
in
cmc
insb
adc
add
jl
sub
fs
sub
lea
push
jmp
stos
jecxz
jl
loopne
xchg
cmpsb
out
adc
jge
mov
mov
and
mov
xchg
lea
sbb
data16
into
pop
ja
mov
xchg
and
pop
jns
xor
add
push
mov
ret
repnz
mov
repz
nop
cmpsb
out
or
mov
pop
jno
pop
pop
cmp
mov
stc
aas
test
mov
mov
pop
mov
lock
add
pop
pop
aas
jno
push
inc
icebp
fsubrs
jge
jmp
sbb
out
ror
dec
sar
inc
imul
xchg
pshufw
mov
jns
out
call
lds
xchg
jnp
xor
xor
pop
rcrl
push
push
cli
aas
inc
stos
sub
sti
stos
aaa
idivl
sar
aas
int3
adc
xor
cmovne
incl
shrb
cmc
arpl
cmp
movsl
mov
repnz
js
mov
inc
loope
push
iret
stc
push
repnz
test
jl
subb
pop
gs
out
repz
out
push
pushl
outsb
sbb
fdivr
jge
fdivrp
jge
out
xor
sar
mov
dec
mov
sbb
imul
nop
mov
jmp
test
sbb
lcall
cmp
out
dec
hlt
incl
je
out
sti
mov
pushl
pusha
gs
cmpsb
icebp
incl
insl
inc
lcall
stos
mov
push
into
push
mov
aas
mov
mov
gs
mov
jns
cmovns
mov
movsb
nop
loop
jno
repnz
out
dec
std
clc
imull
sub
decb
stos
js
stos
js
std
scas
stos
mov
cmc
adc
mov
out
push
addb
daa
ss
cli
xor
bound
out
es
jle
xor
fisttpl
lret
pop
xor
inc
inc
mov
cmp
in
fists
out
int
jle
shlb
fists
xor
insb
fwait
pusha
loopne
inc
lret
sub
and
jg
sar
outsl
mov
pop
dec
or
pushf
testb
sub
push
jge
lret
cli
mov
mov
idivb
jne
aad
sar
sbb
out
dec
movsl
mov
jg
fimull
nop
dec
xor
dec
aam
or
into
cmp
int3
cmp
sbb
cmp
leave
int
aaa
in
popa
or
iret
xchg
cli
mov
ljmp
aam
sub
daa
mov
fiadds
imul
shrb
lret
imul
out
pushf
push
push
ja
xor
in
lahf
ror
mov
inc
movsb
cmc
pop
push
or
mov
test
ljmp
cmc
pop
dec
mov
sbb
movsl
ljmp
dec
aam
cmpsl
sub
mov
fsub
cmp
sub
pop
nopl
push
inc
lret
pop
xlat
lea
push
cmp
arpl
movsb
test
inc
nop
pop
in
mov
mov
push
push
adc
filds
jnp
ljmp
test
adc
push
xchg
mov
dec
fs
pop
add
insl
mov
jbe
out
sub
lcall
sub
xor
std
jmp
movsl
adc
lea
sti
ljmp
xlat
sti
decl
in
mov
xor
ljmp
in
mov
decb
xor
ja
int3
jp
inc
data16
fsub
jg,pn
faddl
mov
pop
hlt
xchg
lea
or
jp
mov
push
scas
jl
imul
xor
mov
mov
inc
dec
mov
jp
inc
inc
pop
cmp
jmp
fdivl
bnd
mov
je
movsl
arpl
shll
cs
push
inc
sti
pop
jo
nop
scas
jecxz
jns
loopne
xchg
cmpsb
out
jmp
mov
mov
add
adc
cmc
push
in
in
popf
adc
cmpsb
inc
sbb
mov
notb
cld
jp
std
decl
xchg
mov
into
fdivr
decl
sbb
xor
xorl
shrb
movsl
add
or
jne
jg
add
out
add
mov
jne
sbb
pop
dec
rorb
cmpsl
leave
lret
ds
jmp
push
inc
icebp
sbb
mov
fdivrp
sub
xor
clc
aas
sbb
cmp
outsb
xchg
aad
ds
jae
xor
mov
inc
lds
dec
out
mov
push
cmp
aas
mov
hlt
xchg
lock
adc
or
lret
mov
adc
in
call
lods
jecxz
out
ror
dec
int
lock
or
jmp
adc
das
and
call
cli
in
jo
sub
xchg
pop
repnz
leave
cli
mov
aas
imul
and
ret
mov
std
fisttps
dec
sar
inc
imul
cmp
cmpsl
add
mov
and
xor
ljmp
inc
xlat
mov
aas
adc
xchg
add
stc
lahf
xchg
daa
and
loop
mov
test
cs
daa
sub
sub
lahf
sub
fst
pop
pop
cmpsb
or
out
sti
test
idiv
in
ffree
popf
mov
sub
dec
dec
push
arpl
add
push
dec
push
movb
mov
mov
mov
adc
mov
xorb
pusha
nop
cmpsb
data16
movsl
jge
jp
cs
dec
cs
xorl
jae
jecxz
dec
or
ret
cmc
insl
lods
adc
jnp
negl
sub
ds
fbld
cmp
out
push
mov
out
insl
nop
cmpsb
icebp
incl
daa
inc
push
pop
stc
insl
xlat
imul
sti
testl
mov
rcrb
rol
das
ret
aam
xor
int3
cmp
xchg
fidivrl
dec
adc
arpl
add
ror
dec
arpl
inc
imul
fs
cmp
mov
addr16
sbb
lods
push
js
add
mov
inc
dec
xor
cli
jmp
jno
mov
cmp
jmp
push
adc
mov
sub
jg
loopne
xchg
cmpsb
jmp
aas
dec
mov
mov
aaa
insl
push
jecxz
shll
cwtl
mov
mov
sub
dec
pop
mov
and
icebp
dec
mov
test
inc
dec
sub
jnp
cwtl
sti
aas
cmp
mov
xor
dec
sti
sar
or
movsl
scas
std
adc
fidivrl
testl
xor
jno
sarb
fs
mov
inc
push
sar
pop
push
inc
icebp
fdivs
jb
fistpll
mov
inc
lcall
imul
addl
xchg
cld
pop
std
fcoml
bound
lods
or
inc
dec
js
les
pop
push
xchg
xor
mov
add
mov
cmpsb
mov
jmp
int
scas
call
daa
js
movsl
imul
mov
push
aad
jns
mov
cmp
fadd
jns
fiadds
pop
out
dec
in
mov
fistps
and
mov
pushl
cli
incl
mov
sar
inc
or
inc
imul
cli
fnstcw
jl
jmp
and
push
adc
fxch
popf
cmpsb
jp
push
in
dec
pushf
dec
dec
in
xchg
ljmp
mov
fisttps
icebp
pop
sti
and
iret
xlat
pushl
adcb
imul
rcll
leave
imull
leave
jmp
in
jecxz
in
pop
cmpsl
popa
mov
ljmp
lds
outsb
cwtl
mov
decl
idiv
and
aad
mov
std
call
setl
cmpsb
decl
mov
push
in
xor
call
inc
clc
mov
xchg
and
inc
dec
cmp
push
test
jecxz
call
push
inc
icebp
fdivr
ss
mov
cli
cmc
fbld
int
outsl
das
jecxz
outsl
and
push
xor
popf
fnsave
dec
lret
push
adc
jg
movsb
cmc
fistps
inc
jne
lods
xor
test
xor
cmp
jbe
in
sbb
loope
jae
loopne
cmp
inc
push
push
icebp
fmuls
add
fucomip
and
mov
push
fiaddl
int
cmp
fidivl
mov
dec
into
outsl
icebp
popf
mov
outsl
jge
cld
pushf
jecxz
mov
and
lea
sbb
sbb
sub
mov
xchg
pop
movsb
nop
loop
sub
cli
out
xor
aaa
pop
sbb
xor
sub
je
lods
cmpsl
outsb
cld
ja
sbb
mov
inc
jecxz
cmc
pop
data16
cmp
push
mov
out
inc
sti
aaa
push
cmp
sbb
imul
rcl
fldt
inc
and
cli
aaa
lods
lods
imul
pop
aam
or
xor
sub
pop
push
icebp
fsubrs
mov
cwtl
imul
jne
inc
lcall
movsb
flds
fcoml
jg
sub
pop
mov
mov
outsl
int
dec
or
aaa
push
dec
cwtl
jne
stos
lods
jns
and
jg
push
icebp
pop
jno
bound
sti
push
pusha
xchg
cmpsb
data16
dec
nop
ss
gs
dec
lret
insb
dec
mov
movsb
test
movsb
add
fbstp
jae
iret
mov
lret
adcl
lahf
sbb
push
cmp
pop
or
lcall
push
int3
mov
xor
pop
xchg
sbb
aam
lret
adc
jmp
xor
jmp
decl
in
mov
insb
pop
sub
dec
insb
dec
int3
ficomps
push
mov
sbb
mov
adc
div
and
sti
addr16
mov
push
or
addr16
aas
cmp
jecxz
ret
les
hlt
xchg
push
out
mov
add
lcall
sbb
incl
sub
sar
adc
aas
adcl
xorl
mov
mov
ret
cltd
lock
aas
cmpsb
decl
shl
adc
add
in
sbb
jb
sub
arpl
dec
mov
and
mov
adc
pop
inc
xchg
negb
mov
sbb
jae
lods
or
fiadds
sub
int3
push
mov
jne
pop
jmp
incl
leave
es
lret
inc
std
cld
xchg
jo
push
xor
int3
jg
or
mov
lret
jns
inc
pop
outsb
imul
repnz
push
xlat
push
mov
ss
idivl
mov
leave
cld
pop
push
sub
cmp
jg
push
push
cmp
into
lahf
sti
mov
or
ljmp
dec
jmp
shrb
cltd
xchg
push
in
lahf
sub
std
test
jmp
jg
int3
dec
sbb
pushl
dec
xor
cltd
and
jl
std
aas
and
jecxz
lahf
jecxz
lahf
popa
sbbb
movsl
push
filds
addr16
xor
mov
xor
outsl
dec
sti
aas
cld
std
dec
fs
and
lcallw
mov
in
aas
das
mov
js
jge
outsb
lcall
cmpsl
mov
or
cld
pusha
or
xor
pop
xchg
jbe
je
adc
add
jg
and
pop
sbb
outsb
insb
xchg
outsb
adcl
inc
cltd
jmp
shrl
test
incl
adc
lcall
idiv
in
das
sbb
movsl
imul
nop
mov
rcr
mov
cld
inc
into
scas
mov
adc
int
push
jne
pop
xchg
lock
pop
jecxz
loope
pcmpeqb
mov
call
aaa
addb
imul
cli
mov
cmpsb
out
std
repz
repnz
mov
pushl
lock
aas
sbb
cmp
push
in
cmpl
bound
dec
mov
xchg
xchg
stos
orl
cmc
nop
push
mov
divb
jmp
mov
scas
jg
inc
mov
dec
shrl
or
insb
jnp
lods
imulb
insl
dec
adc
fucomip
jae
fwait
jmp
cld
negl
push
lods
fcoml
jg
sub
popf
mov
dec
sub
pop
pop
lahf
iret
jg
ror
jg
sub
out
mov
mov
shrl
push
shll
aad
mov
in
subl
dec
xchg
lea
sub
push
jmp
incl
faddl
aas
inc
xchg
mov
incb
lods
cmp
aad
push
inc
std
push
dec
aam
cmc
test
stos
jb
stos
mov
fdiv
sahf
cmp
xlat
inc
dec
xchg
aad
mov
movsb
cmc
fbstp
adc
mov
jmp
sbb
xlat
dec
jo
dec
rcl
jg
in
and
insb
pop
loope
int
inc
lret
sub
dec
lods
jg
sub
cmc
dec
scas
mov
stc
lret
mov
cmp
mov
es
sti
test
xchg
cmp
insl
in
shlb
jne
fcmovnbe
push
cmp
imul
jmp
imul
sub
incl
dec
push
sub
int
lret
push
inc
or
rclb
movsb
in
stos
imul
mov
dec
push
fcmovnu
sub
sub
lods
lods
pop
movsl
mov
pop
mov
js
fsubs
stc
ds
fidivs
jge
rcr
fistps
xchg
jns
xor
cmp
int3
jae
out
cmp
pushf
repz
imul
outsb
dec
loope
pop
shll
mov
fs
add
lcall
test
mov
jg
xchg
shrl
ret
decl
std
ljmp
fnstsw
idiv
push
pusha
lcall
xchg
outsb
lret
int
pop
xor
sub
pushl
xchg
dec
jg
outsb
scas
int3
or
jmp
fsubl
sti
xchg
jb
insl
dec
sbb
in
shlb
mov
mov
mov
in
xor
dec
in
cli
mov
std
jg
idiv
insl
in
add
es
adc
cmp
stos
dec
dec
adc
xor
out
cld
and
xchg
mov
je
repz
push
shl
test
cmpsl
rcll
outsb
mov
in
stos
adc
jl
sbb
jbe
mov
lods
rolb
xor
cmp
and
mov
fdivrp
ljmp
or
or
in
iret
andb
mov
mov
popf
daa
inc
mov
mov
mov
rorb
add
adc
dec
int3
je
push
mov
outsb
popf
mov
push
fcomip
loopne
jmp
mov
outsl
mov
inc
idivl
arpl
xchg
xor
je
ds
add
jg
lods
sti
mov
inc
xor
fiadds
outsb
test
cli
fmuls
xor
dec
outsb
push
out
shrl
pop
push
lret
outsb
or
fwait
jge
dec
push
push
fadd
imul
repz
jg
shl
orl
mov
pop
ret
imul
mov
andl
adc
shlb
jg
xchg
je
clc
and
fadd
cmc
fbld
ss
pop
pushl
pop
aas
sti
mov
test
mov
je
repnz
dec
jne
lods
std
fbstp
inc
pop
push
ds
inc
je
in
push
data16
cmpsl
movsb
jecxz
dec
shlb
mov
cs
je
push
sbb
movsl
adc
das
test
addr16
xor
sub
jb
mov
cld
or
jne
shlb
xchg
and
mov
inc
and
mov
lcall
sub
es
cmp
sub
sub
pop
add
push
ret
imul
data16
test
out
loope
int
jp
in
or
cmp
scas
or
arpl
inc
aaa
sti
cmpsl
shrl
and
push
fists
insb
cmp
ret
sbb
aad
ret
imul
pop
out
inc
adc
jl
cltd
out
lret
xor
and
push
lret
lea
je
sbb
loop
shr
scas
movsl
shl
das
rcr
call
je
ja
idivb
xor
cmp
jp
jne
divl
inc
and
cmpsb
std
pop
inc
sbb
vaddsubpd
into
dec
mov
cmova
into
cld
push
and
jns
shrd
or
push
filds
iret
or
mov
int
adc
push
lret
push
test
pop
aaa
cmp
mov
ja
sti
sub
mov
xor
pop
push
dec
outsl
int
jns
popa
sub
push
gs
xchg
lods
daa
jb
sbb
mov
mov
mov
sub
pop
and
push
cltd
iret
jb
cmp
and
mov
gs
hlt
mull
mov
imul
jae
fwait
aaa
loope
push
lahf
inc
pop
scas
repz
cli
mov
and
sub
adcb
leave
imull
jns
repnz
lock
ret
cmc
ds
fadd
sbb
cmp
mov
cmp
out
jbe
insb
lcall
push
mov
or
push
and
daa
outsb
push
cmc
out
cwtl
popa
scas
sbb
jbe
xor
mov
std
jle
inc
pop
dec
rcl
enter
cmp
int3
mov
add
es
pop
in
xchg
jae
push
push
fbstp
in
jae
fdivrl
lahf
insb
lea
imul
les
lock
loope
cmc
dec
fs
cmp
push
out
mov
ljmp
jmp
stc
aam
jae
loope
fistpl
sub
inc
or
push
pop
clc
xchg
fdivs
lock
iret
add
inc
or
loopne
clc
xchg
adc
ds
dec
xor
daa
lret
cmpb
lock
clc
inc
add
add
sub
sub
and
sbb
out
dec
out
sbb
dec
inc
mov
aad
lods
mov
shlb
push
push
dec
pop
cltd
jge
cli
mov
insl
sub
dec
fwait
mov
push
or
xchg
jo
fisubs
notl
fstl
clc
mov
inc
ds
jl
test
js
cli
rcrb
ret
mov
xchg
xchg
scas
leave
dec
in
test
das
test
call
ds
jl
loope
push
aaa
jl
jecxz
es
fstl
js
jmp
adc
lock
lock
lock
lods
adc
loope
xchg
xchg
lock
jle
cmp
fstl
insl
adc
xchg
xchg
dec
out
add
sub
ds
clc
lock
ret
jmp
sbb
mov
clc
lock
sbb
jl
popa
lret
lock
and
ret
or
ror
orb
jle
jmp
aam
popa
pop
shll
mov
cmp
loope
decl
mov
popf
movsl
lock
mov
cmp
je
sbb
cmp
lds
jo
in
mov
aad
into
orl
das
out
iret
gs
scas
out
clc
inc
nop
outsl
push
sbb
inc
mov
in
xchg
pop
test
or
jl
inc
repz
sbb
pop
testl
das
orl
popf
xchg
clc
cmp
jo
xlat
mov
stos
or
pop
shl
lock
popa
ljmp
fwait
nopl
rsqrtps
roll
loope
popf
loope
ret
cmpsb
dec
mov
add
push
lock
or
pop
xor
mov
push
jo
cmpl
pop
cmpsb
push
xor
ds
push
out
xchg
loope
mov
cmp
mov
into
xchg
sbb
shr
pop
jg
jae
stc
xchg
pushf
dec
mov
inc
out
lock
mov
cli
sub
lock
subb
mov
int3
popf
in
int3
fs
inc
fnsave
cmp
addr16
inc
sti
dec
arpl
add
mov
outsb
popa
lcall
dec
jno
xor
in
jmp
and
jns
scas
mov
iret
mov
outsb
jae
cmp
rcrl
ret
jno
repz
inc
mov
stos
mov
push
in
xor
cmpl
out
and
fs
ret
out
lret
sbbb
mov
dec
pop
push
test
ds
cld
xchg
push
jae
repnz
das
popa
pop
and
and
pop
repnz
rcll
int
dec
pop
cmp
cmpps
stos
sub
mov
pushf
ret
testl
add
sub
xor
push
pop
rcll
jb
pop
add
ljmp
arpl
xchg
inc
push
sbb
nop
out
sti
pop
mov
fcomp
inc
xor
mov
xchg
inc
cmp
icebp
sub
mov
rolb
sub
pop
adc
push
nop
iret
cltd
sbb
cmpl
jbe
call
inc
nop
cmp
inc
std
dec
jmp
mov
jae
lds
mov
mov
inc
sbb
fistps
negl
cli
in
mov
cmpb
out
adc
decb
scas
call
ret
mov
jle
test
push
dec
push
pop
mov
stos
sbb
pop
out
scas
dec
jbe
and
mov
into
fidivs
xor
dec
scas
clc
add
xchg
mov
jae
jg
insl
lods
jbe
xchg
jae
push
dec
clc
and
fnstsw
incb
insl
adc
cmpsb
imul
inc
popa
jmp
sbb
cwtl
daa
jbe
lds
inc
lods
les
outsb
fnsave
pop
aaa
dec
cmp
movsl
shrb
lods
shlb
rcll
inc
sub
inc
fiaddl
inc
cmp
pop
mov
fucomp
hlt
movsl
sub
push
mov
rcrl
scas
cmpsb
cmpsb
xchg
inc
jae
movsb
test
aas
jns,pt
mov
lea
pop
jecxz
loope
mov
mov
lds
loop
movsb
fsubr
dec
icebp
or
jb
pop
cltd
loop
xor
jle
aaa
loope
and
pop
push
lcall
mov
sbb
and
cmp
daa
mov
xchg
push
inc
mov
inc
into
inc
in
repnz
rcll
scas
popa
test
push
cmp
or
push
enter
xchg
lret
inc
xchg
adc
xchg
aas
in
dec
in
cmp
sbb
xor
mov
je
jmp
iret
and
cltd
ret
mov
loopne
shrb
lcall
out
push
cltd
int3
stc
xchg
pop
xchg
aaa
iret
das
hlt
dec
ljmp
arpl
cld
jecxz
cltd
test
jmp
jo
push
sbb
ror
add
inc
fdivl
sar
insb
out
aad
dec
push
pop
adc
xlat
inc
or
adc
jmp
xchg
jae
mov
repz
cmp
cmp
adcb
and
push
mov
outsl
jecxz
testl
mov
xor
in
pop
sahf
cld
stos
es
jae
xor
jae
test
cmp
imul
xor
pop
pop
and
jnp
movsb
mov
mov
sti
push
mov
adc
sti
and
jg
icebp
push
fldenv
mov
cmp
inc
or
in
xor
outsl
clc
stos
adc
jl
aaa
notrack
adc
xchg
lds
scas
lret
out
ljmp
xchg
sub
les
jb
adc
fcompl
les
and
cs
pop
movsb
sbb
fcoml
out
out
jnp
jb
movlps
and
mov
mov
aaa
pop
mov
enter
jno
adc
arpl
add
adc
scas
cmpb
xchg
fisttpll
jecxz
xor
popa
pushf
xor
divb
in
fcoml
push
jnp
inc
in
imul
adc
jno
mov
jnp
lock
sub
sub
jne,pn
cmpsb
sbb
outsb
sbb
add
cmp
inc
iret
inc
dec
jp
or
sbb
jp
leave
xor
in
jb
and
insb
ffree
int3
push
mov
mov
jae
push
xchg
inc
int3
mov
unpcklps
mov
jbe
mov
and
inc
sub
je
dec
mov
lret
ret
in
mov
and
mov
movsl
push
pusha
seta
or
in
push
pop
lods
pushw
mov
mov
add
leave
in
cmpsl
push
jb
mov
mov
dec
sub
sub
sbb
loop
mov
nop
test
stos
dec
and
aam
inc
imul
popf
jns
sub
in
mov
and
clc
xor
mov
or
popa
push
jecxz
das
cmpsb
scas
movsb
mov
mov
cmpsl
test
nop
cmp
jae
adc
int
into
jo
into
sub
adc
test
outsl
les
andb
fldl
and
cmpsl
inc
insb
jp
pop
mov
pop
lods
lret
imulb
inc
pop
insl
das
imul
cmc
mov
stos
dec
int
inc
je
sub
adc
fistps
mov
test
and
jl
mov
pop
jmp
mov
in
outsl
xchg
ja
jecxz
popf
push
mov
stos
cmpsl
lcall
xlat
xchg
out
popa
mov
pushf
mov
loope
inc
mov
adc
or
jmp
cmp
sub
adc
or
add
call
addr16
mov
aas
scas
lock
lods
insb
push
ja
insb
xchg
rorl
sbb
adc
pop
mov
loop
cmp
dec
or
dec
bnd
mov
push
mov
test
fmull
cmp
ja
fs
cmp
mov
cmpl
leave
and
rcr
add
aaa
lahf
sbb
mov
mov
mov
scas
out
pop
es
icebp
addl
sbb
push
sahf
sbb
mov
push
push
cld
fisttpl
xchg
jns
dec
sahf
cmpsl
outsl
xor
insl
addr16
or
mov
sarl
int3
aam
pop
test
mov
dec
popa
jns
mov
bound
aam
loop
mov
dec
lahf
out
rcll
cmpl
js
xchg
xchg
xchg
mov
lock
jmp
dec
sbb
insb
dec
pushf
push
pop
pop
pop
ret
in
in
mov
cmp
outsl
stc
ja
in
pop
jne
jmp
lds
jmp
out
pop
daa
dec
cwtl
sbb
insl
inc
xchg
jge
pop
fs
shl
fwait
lods
mov
nop
and
xchg
jnp
jb
sub
push
in
sub
inc
mov
mov
pop
lret
cmp
adc
loope
cmpsl
iret
xchg
gs
sbb
daa
fdivs
call
adcl
clc
popf
sbb
pop
dec
cmp
ja
out
xor
mov
daa
adc
or
popf
sbb
xor
dec
mov
cltd
mov
mov
sbb
mov
push
fistl
jp
cli
jmp
bound
inc
adc
pop
mov
mov
push
inc
shr
ljmp
pop
repnz
aam
cwtl
xlat
shrb
aas
xchg
xor
test
push
jbe
mov
imul
es
jle
mov
mov
mov
cmpsl
cmp
call
mov
ret
jbe
jg
fistpll
sbb
insb
push
out
enter
lret
push
not
shrl
mull
jae
hlt
lret
jne
imul
incb
insl
nop
pop
push
negl
subb
outsl
cmp
mov
psrld
loope
imul
mov
dec
shlb
insl
orps
mov
cmp
fcoms
dec
insb
push
dec
mov
pop
insl
ja
push
fbld
cmc
mov
xor
push
iret
sar
sti
pushf
cmc
scas
mov
js
daa
imul
and
nop
nop
rcrb
xchg
jne
mov
adc
sarb
sub
adc
ds
lea
pop
jl
cmpsb
cmpsb
lds
jbe
shl
ficomps
mov
pop
push
xchg
movsb
xchg
int
shlb
dec
jnp
cwtl
jbe
cmpsl
cmp
jnp
cmpsl
or
mov
cmp
inc
lods
nop
test
dec
sbb
mov
pop
sti
pushf
pop
imul
and
loopne
out
into
push
pop
push
mov
cli
out
adc
dec
inc
jno
andl
loop
mov
push
jle
scas
jbe
mov
push
fwait
xchg
popa
pop
xor
out
push
outsl
ficoms
sub
dec
mov
ret
data16
sbb
pop
cmp
lods
test
mov
stc
mov
mov
int
insb
icebp
jb
xor
stos
scas
pop
movups
out
in
mov
sti
call
movsb
sbb
lahf
mov
out
xchg
js
pop
push
jnp
test
xchg
into
pop
data16
dec
mov
addr16
out
xchg
cmp
out
pusha
std
sub
push
fiaddl
push
dec
jl
inc
push
and
ror
mov
jne
inc
xchg
jmp
add
negl
add
mov
test
mov
lret
out
and
js
sbb
mov
adc
adc
and
bound
je
rorb
sub
stos
outsb
sbb
les
sbb
jp
std
inc
mov
sahf
outsl
loope
xchg
pop
dec
push
fcomi
inc
jae
imul
xchg
mov
and
xchg
jge
xchg
nop
shlb
das
xlat
pop
icebp
pop
incb
cmp
and
pop
mov
pop
mov
scas
mov
and
cmpsb
test
jbe
scas
gs
mov
loopne
push
mov
mov
xchg
icebp
jbe
leave
xchg
jno
ret
xchg
stos
xorl
movsl
cmp
push
out
addr16
cmp
sti
sbb
xor
fs
xor
jnp
fwait
xchg
sbbb
shlb
sbb
inc
fisubl
fdivs
fisubl
ret
jmp
aaa
sub
fmull
dec
mov
out
int
mov
cmp
mull
dec
lcall
or
out
inc
cmp
aas
pop
orb
push
outsb
icebp
xorb
mov
jno
xor
je
gs
adc
adc
jne
mov
cmp
jl
in
xor
jb
mov
jo
stc
pop
decl
ss
inc
sbb
xchg
push
movsl
inc
repz
je
hlt
adc
adc
pop
mov
loop
inc
loope
mov
inc
mov
inc
or
push
mov
je
xchg
dec
iret
test
fiadds
in
notb
cwtl
clc
repnz
mov
or
mov
in
xchg
pop
test
loope
loopne
sbb
jo
and
xor
xor
xchg
out
dec
add
inc
mov
int3
lret
sub
scas
pop
cli
and
test
push
jno
push
add
sahf
loop
shl
dec
idivb
jecxz
mov
repz
hlt
xchg
xorl
cmp
test
sbb
adc
sahf
int
xchg
into
testb
vcmpps
insb
mov
adc
test
test
adc
inc
scas
shl
jp
test
mov
mov
int
fcoms
sub
testl
fwait
lds
fwait
pop
ret
int3
stc
jnp
mov
iret
repz
add
and
inc
fwait
pop
lds
inc
add
push
fcomi
mov
enter
rcr
sti
pop
mov
xchg
mov
mov
xchg
dec
lock
enter
inc
jp
mov
fdiv
xor
shll
scas
cmpl
cwtl
clc
pop
mov
jns
inc
sub
fcomip
popf
fdivrp
lea
mov
das
movsl
lock
les
bound
push
fcmovnu
adc
outsl
mov
xor
and
insl
mov
mov
mov
cmpsl
lock
enter
dec
sbb
sub
es
mov
test
aaa
dec
mov
sbb
xor
dec
mov
sti
mov
fsubr
das
dec
mov
inc
movsb
lods
test
pop
into
outsb
dec
icebp
add
mov
das
pop
pop
cmp
mov
fldpi
loopne
sub
aaa
inc
hlt
pop
maskmovq
testl
enter
cli
xchg
in
or
jle
out
lret
in
and
lea
lahf
jae
movsb
clc
fstps
mov
iret
push
add
jl
out
push
xchg
mov
negb
pusha
ja
mov
xor
mov
mov
pop
loop
dec
push
int3
ss
mov
outsb
sub
lahf
subl
add
and
and
mov
xor
bound
sub
mov
mov
xor
int3
jmp
clc
mov
out
lock
mov
lahf
int3
shrb
aam
aaa
repz
testl
iret
pop
add
pusha
mov
les
aaa
dec
outsl
push
jle
xor
cmp
fsubr
cli
jecxz
mov
out
data16
daa
repz
cmp
add
loop
cmc
mov
addr16
push
out
lea
jge
mov
mov
mov
insb
mov
stos
fs
ss
loop
and
clc
jle
xor
cmp
or
data16
jae
int
in
jmp
inc
adc
fnstsw
outsb
notl
lods
inc
sti
xchg
shrl
mov
mov
fsubr
jg
jne
loope
iret
mov
rcl
jne
test
fdivl
idivl
gs
shl
push
aaa
push
js
movsl
push
insb
pop
stos
fdivrs
pmulhw
arpl
jmp
mov
xor
cwtl
push
jmp
shll
fildl
add
insl
lahf
outsb
jne
cmpsl
mov
popf
lock
ljmp
xor
cmp
lahf
pop
leave
pop
scas
mov
dec
mov
out
add
imul
sub
push
cmp
jmp
jle
fldcw
addl
aam
jmp
lret
in
push
insl
dec
jle
push
les
fimuls
fst
lret
sbb
xlat
in
pop
ss
mov
xchg
gs
xor
shlb
bound
je
sub
in
jne
leave
mov
clc
divb
sbb
es
push
insl
imul
test
rolb
xchg
xchg
pop
jae
jl
push
inc
in
sub
xchg
sbb
loope
dec
mov
xchg
popa
and
arpl
xor
and
mov
dec
dec
enter
nop
sar
cld
in
fwait
pop
pop
sbb
stc
jl
inc
sbb
loope
and
and
in
dec
mov
xor
loope
inc
xor
sub
mov
outsb
insb
cmp
sub
jbe
repz
int
rolb
divl
scas
ljmp
popa
cmp
jnp
cwtl
int
ss
scas
lahf
shl
and
leave
sti
movsl
fisubrl
movsl
popf
xchg
fstpt
fwait
adc
push
ret
ljmp
cmp
ret
ja
scas
rcrl
test
mov
mov
out
jb
cmpsb
xchg
jb
jge
xchg
repz
movsl
lahf
ret
inc
jmp
movsb
imul
outsb
ffree
ret
cmp
pop
mov
mov
jp
adc
loopne
xchg
outsl
mov
sbb
stos
dec
push
lahf
push
jmp
mov
mov
loop
cmp
mov
jl
std
cmp
inc
int
out
movsb
cmpsb
hlt
lcall
sbb
outsb
ret
aaa
decb
adc
add
mov
fs
xchg
mov
xchg
cmp
inc
fldl2e
cmp
pop
fs
mov
jge
aaa
pop
mov
mov
pop
icebp
ss
mov
push
insl
or
and
mov
inc
je
fiaddl
mov
aad
inc
call
fistl
lods
ljmp
xchg
pop
push
add
lret
fstps
mov
sbb
pop
outsb
and
xchg
pop
cmp
cmp
push
jnp
fadds
lods
stos
push
mov
fs
out
in
mov
jo
gs
arpl
add
rorb
pusha
mov
stos
adc
or
inc
mov
data16
je
jne
jbe
js
outsl
in
fidivrl
sub
aam
test
pop
pop
ja
mov
jmp
push
mov
ss
imul
and
mov
addb
fcmovb
lret
jne
and
push
sti
mov
inc
adc
sub
sbb
push
subb
push
sbb
fildl
or
dec
jg
jecxz
movsb
es
and
outsb
in
pop
xlat
push
decb
fistps
and
aam
xor
sub
adc
cli
mov
pop
sbb
rcrb
jle
jne
shr
movsb
data16
xchg
mulb
xchg
imul
jmp
sub
mulb
in
adc
rol
fiaddl
cmp
mov
in
xchg
adc
je
enter
adcb
push
test
movsb
xor
in
ja
nop
sub
inc
lret
push
lods
clc
xchg
jbe
sahf
aas
dec
lds
mov
movsb
lret
jb
lahf
shrl
lcall
cltd
xlat
clc
cmp
cli
pop
mov
call
icebp
arpl
jae
fimuls
daa
stos
std
add
into
xchg
sub
push
lds
icebp
stos
xlat
sahf
fsubrl
outsl
in
jae
mov
push
mov
add
dec
xchg
mov
aaa
fsubrl
shll
dec
fidivrs
dec
in
inc
fistl
rcl
cs
dec
iret
jge
gs
out
shl
push
outsb
fcmove
sbb
lea
cs
sbb
rcr
push
pop
loop
push
out
mov
mov
xchg
movsl
sbb
enter
jg
in
xchg
loopne
in
adc
jne
mov
dec
std
push
mov
add
ss
cmpsl
testl
dec
jns
push
adc
fldcw
movsl
or
imul
repnz
cltd
sarl
es
ja
mov
pop
cmp
arpl
xor
add
xchg
xor
into
lds
inc
int3
and
js
loopne
faddp
lods
jnp
rol
fstp
mov
jnp
sbb
leave
fisubrs
sub
jbe
imul
int
dec
sbb
outsb
pop
xor
cli
adc
pop
adc
xchg
jl
lea
scas
and
dec
sbb
xor
push
imul
sbb
cmc
jg
xchg
push
inc
jg
inc
mov
cmp
test
push
pop
inc
mov
jbe
test
dec
xchg
jle
or
hlt
paddw
shr
das
mov
inc
insb
inc
adc
and
inc
mov
jge
cmpsl
test
dec
cmc
cmp
test
cmpsl
sub
rol
jbe
mov
sahf
imul
mov
loope
arpl
pop
popf
dec
aaa
mov
push
neg
notl
xchg
cmp
hlt
inc
or
jmp
push
pop
aaa
inc
hlt
roll
ret
mov
jae
pop
fldt
mov
xchg
sbb
ljmp
inc
cmp
int3
jp
add
test
mov
out
test
andb
jg
sarl
push
repz
pop
pop
mov
xchg
icebp
and
imul
lea
pop
jmp
xor
lret
xchg
or
fisubrs
mov
outsb
jne
les
ret
mov
xchg
pop
mov
dec
push
pusha
cmp
jmp
sbb
xor
jecxz
cmp
or
or
icebp
adc
stc
inc
sub
sub
jle
pushf
adc
and
xor
and
call
jne
xchg
cmc
outsl
test
repnz
dec
jnp
mov
xorb
mov
cli
scas
jecxz
and
push
cmpsl
and
sub
test
jnp
push
repz
push
repz
loopne
cmp
cmp
and
sahf
inc
jmp
fwait
sub
push
std
mov
js
xor
dec
rcr
mov
mov
sbb
fimuls
mov
mov
add
cmpl
xchg
inc
lock
cmp
addr16
push
fiadds
imul
loop
pop
jbe
pop
sub
fbld
enter
jp
sub
test
push
mov
mov
imul
nop
jns
mov
js
jmp
and
or
add
xor
movsb
cld
and
in
pop
ds
push
fbstp
sub
in
out
sahf
mov
sahf
out
mov
hlt
cmpsb
xchg
lea
out
repnz
lcall
imul
dec
dec
mov
xchg
mov
jbe
lahf
dec
push
lcall
cmp
shr
les
pop
ret
sbb
fistl
sahf
pop
mov
fdivl
scas
aad
lret
stc
in
shrl
push
dec
inc
gs
sahf
scas
jle
testl
lahf
faddl
cli
push
sbb
lock
jne
adc
mov
ja
jno
mov
cmc
outsl
pop
mov
ds
dec
cmp
aas
ficompl
cmp
mov
rcl
lahf
daa
adc
xchg
push
add
notb
daa
pop
jp
sbb
xor
into
sbb
pop
lahf
idivl
popa
push
pusha
int
and
xchg
mov
es
jns
xor
test
add
sub
mov
push
mov
enter
jmp
sbb
mov
std
dec
loopne
xchg
incl
mov
fidivrl
sbb
xchg
inc
cmp
aam
push
xchg
cld
enter
push
je
dec
or
lds
and
stos
cmpsl
fists
add
sub
cmp
ficoml
dec
lods
outsl
mov
mov
rorb
jl
arpl
dec
fmull
pop
and
imul
pop
mov
jnp
sub
lcall
aad
jp
or
add
pop
mov
add
xchg
outsb
xchg
shlb
les
add
pop
xchg
stos
jecxz
mov
cmpsl
cmpb
add
xor
stos
and
mov
sbb
add
add
xchg
xor
int3
mov
mov
xchg
pop
jge
sbb
repnz
stos
cmp
dec
jle
sarl
and
or
in
mov
sbb
fldt
push
std
rcl
shll
sub
xchg
lret
xorb
punpcklwd
lret
iret
mov
sub
loop
popa
add
jne
xchg
dec
repz
lcall
aad
jmp
pop
push
sahf
and
bound
stos
and
stc
arpl
scas
mov
sbb
repnz
cmp
mov
mov
stos
sub
fisttpl
fsubrs
jle
mov
lret
int3
xchg
and
je
inc
je
daa
cmc
daa
rcrl
mov
cwtl
push
icebp
push
jnp,pn
lods
jns
in
jns
jecxz
pushf
rol
dec
cmc
inc
lods
and
ljmp
xor
push
inc
cmc
repnz
mov
sbb
cmpsb
incl
insl
rorl
rclb
ljmp
icebp
and
dec
or
divl
out
nop
mov
cmp
in
xor
adc
mov
nop
out
sub
lds
ret
push
mov
movb
dec
jmp
cmc
movsl
shll
mov
scas
fsubrs
loop
mov
or
or
stos
sbb
push
xchg
lahf
idivl
cmp
cli
std
bnd
out
into
sbb
mov
dec
adc
repz
ficoml
push
jnp
pop
cmpsl
fs
js
dec
movsl
sub
rcrb
jp
int
sbb
mov
push
push
push
or
xor
push
adc
lea
into
jp
sbb
jae
stc
jo
xchg
push
inc
icebp
aad
roll
cmc
pop
mov
push
daa
fucomi
scas
sub
je
mov
sbb
fistl
jl
pop
int
xchg
jmp
sahf
loope
imul
enter
arpl
test
mov
sub
pop
lahf
cmp
pop
and
cld
das
push
jne
and
mov
jo
sbb
lret
addr16
lods
mov
jle
fadd
jl
mov
mov
inc
icebp
in
push
push
es
dec
lret
mov
xor
test
fisttpl
mov
out
cmp
test
pusha
mov
sbb
filds
call
gs
cltd
adc
mov
jo
daa
mov
sbb
test
jns
sbb
ljmp
mov
and
rorb
out
mov
loop
es
repz
inc
push
leave
sbb
xor
decl
lret
scas
cmp
idiv
mov
lods
dec
lea
addr16
pop
scas
mov
popa
popf
aad
cmpsb
jle
jmp
imul
in
int
enter
rcll
out
cmp
jge
jbe
imul
in
mov
mov
pop
les
and
push
nop
in
enter
inc
mov
or
gs
cmpsb
adc
es
pop
xchg
mov
cs
std
or
test
mov
test
movsl
inc
stos
and
mov
out
xor
and
cmpsb
xlat
mov
sub
jo
hlt
clc
scas
dec
push
frstpm(287
sub
es
mov
insb
lcall
hlt
sbb
int3
dec
mov
in
repnz
shrl
addr16
scas
jle
js
fcomip
scas
mov
mov
ret
cmpsb
jmp
and
lret
sahf
inc
push
stc
aam
cmpsb
inc
xor
and
push
gs
inc
cltd
aam
scas
popa
popf
pop
lods
mov
fisttps
mov
aad
add
cmp
lcall
inc
clc
icebp
ffree
lret
ret
push
or
stos
mov
xchg
dec
or
pop
xlat
pop
pushf
sbb
xor
push
out
loop
jge
cld
rcrl
ds
pop
repz
cs
addr16
push
ljmp
std
adc
out
pop
mulps
jb
push
push
add
arpl
dec
imul
aaa
ljmp
pusha
xlat
and
ror
into
ror
jae
jbe
sbb
and
xchg
inc
jnp
dec
std
jg
mov
and
fildll
sbb
push
sbb
loopne
aas
push
mov
es
out
mov
mov
sti
mov
das
mov
je
jle
int
ljmp
push
repnz
sub
jmp
push
popf
pop
outsb
mov
insl
scas
inc
int3
decl
stos
sbb
inc
pop
jp
in
mov
in
movl
aaa
inc
ret
out
cmp
es
inc
and
lret
fdivp
lcall
sub
jb
aad
sbb
pop
inc
jg
fisubs
loop
cld
movsl
pusha
shrb
inc
movsl
adc
xor
hlt
cld
pop
and
cmpsl
sbb
lahf
pop
shlb
insb
xchg
lock
xor
ret
adc
mov
jl
push
into
jle
and
call
aad
rcrl
mov
cmp
mov
dec
pop
into
out
mov
cmp
mov
mov
pop
mov
iret
mov
mov
xor
pop
xor
jae
add
push
xor
push
pop
int3
inc
mov
in
lods
imul
fadd
fs
pop
jno
jl
mov
mov
cmpsb
dec
cmc
cmp
add
leave
jae
xor
xor
jp
loope
data16
sti
clc
xchg
adc
mov
out
push
adc
dec
dec
mov
sub
push
ret
test
sub
jb
insb
xor
stos
int3
hlt
loop
mov
ret
repnz
push
loope
mov
mov
movsb
lret
xchg
nop
mov
dec
fidivrl
mov
test
cmpsb
sbb
ret
mov
sub
cmp
repz
jle
stos
lods
test
jp
call
fptan
sub
out
sahf
sbbl
adc
out
in
push
sub
dec
inc
push
mov
or
test
push
and
insl
jl
dec
add
jno
dec
mov
les
out
repnz
push
xorb
and
adc
mov
fisttpl
push
dec
shl
aad
das
in
dec
ret
mov
mov
adc
jns
scas
cld
xchg
jp
cld
sbb
hlt
sub
pop
fidivs
popa
jp
popf
xlat
icebp
xor
dec
inc
std
inc
pop
jp
test
mov
mov
lds
mov
mov
ret
or
sahf
fnsave
scas
mov
je
push
pop
dec
and
mov
xchg
or
sub
pop
mov
ret
out
int
arpl
out
or
inc
dec
nop
imul
sub
testb
scas
ret
xchg
lods
mov
ss
inc
xor
dec
rcrb
lahf
lret
mov
push
lcall
xchg
pop
push
cli
nop
repnz
xor
mov
hlt
adc
negl
dec
mov
adc
movsl
outsl
pop
mov
xchg
xchg
mov
repnz
sub
mov
popa
cmp
push
sbb
cmp
push
mov
std
scas
xchg
mov
xor
cli
adc
fbld
cmpl
daa
fstpt
insl
xchg
xor
mov
hlt
push
loop
xchg
inc
outsl
jns
int
out
xchg
cld
enter
jg
sbb
je
movsl
out
cmp
ret
fisttpll
aas
dec
sahf
ss
inc
mov
sbb
jge
mov
in
sahf
mov
ret
fwait
jns
mov
mov
mov
pop
decl
loopne
sahf
fisttpll
stc
js
mov
lret
mov
out
mov
push
push
push
ds
fistpl
aad
addr16
xorb
shrl
push
imul
sbb
cmp
adc
mov
sub
xor
xchg
push
nop
imul
dec
sub
inc
ja
xor
insb
ljmp
addr16
mov
scas
jle
gs
fwait
dec
cli
leave
mov
call
iret
push
stos
inc
aaa
dec
lret
shll
fldenv
mov
movsb
xchg
push
dec
sbb
rcll
jo
pop
push
into
into
and
sbb
xchg
jecxz
mov
cmp
sbb
js
or
xchg
push
cmc
mov
inc
mov
cmpsb
les
inc
call
imul
sbb
lret
int3
hlt
mov
sbb
out
sahf
mov
mov
mov
or
cmp
push
imul
jp
sarb
gs
jl
das
pop
flds
pop
add
push
das
fisttpll
iret
mov
and
xchg
shl
cld
je
rcll
lds
and
cmp
jae
push
xchg
pop
mov
clc
aaa
xchg
cmp
pop
outsl
fsubl
and
insb
inc
mov
sbbb
pop
mov
sub
or
dec
addr16
add
mov
sub
dec
cmp
test
xchg
xor
mov
jp
push
push
cltd
adc
sahf
dec
into
int3
dec
or
sub
push
xor
sbb
cltd
mov
dec
hlt
mov
shl
idiv
push
mov
sub
xchg
into
sti
rclb
stos
pusha
aaa
jle
fwait
xor
pop
xchg
stos
jbe
inc
mov
dec
fstl
mov
movsl
cmp
push
sbb
push
lods
call
ret
scas
or
and
repz
imul
push
out
in
fs
or
movsb
cmp
cmp
ret
fnstcw
jnp,pt
arpl
xor
inc
and
dec
jecxz
pusha
into
mov
pop
jg
mov
out
pop
aam
stos
fmuls
pop
lahf
xchg
cmp
and
xchg
fmuls
les
cmp
mov
out
and
mov
push
jl
ja
mov
bound
aam
xor
mov
xchg
lea
jno
lods
lret
and
mov
xchg
repz
mov
mov
xor
fadds
enter
call
xchg
sbb
jp
pop
xor
mov
or
and
adc
scas
lret
fsubs
cmp
pop
aas
enter
data16
mov
push
mov
in
clc
push
dec
popf
mov
sub
xchg
push
das
push
mov
inc
push
push
popa
xor
sahf
mov
stc
sahf
mov
jecxz
lret
gs
xchg
jnp
jb
sub
jnp
pop
mov
jae,pt
rcl
inc
mov
gs
inc
pop
popf
jl
adc
sbb
cld
add
fnstsw
rcrl
cmp
jecxz
sahf
sahf
ds
add
call
fucomi
in
inc
mov
pop
leave
pop
call
testl
clc
mov
sbb
sbb
lds
mov
call
inc
pop
mov
aas
sbb
loope
sbb
and
ds
mov
test
adc
xchg
sbb
outsb
outsl
icebp
imul
out
lahf
lret
jb
mov
std
sbb
sbb
out
sbb
dec
lahf
dec
adc
mov
lods
fdivr
psraw
sarl
jmp
sarb
mov
incb
rorb
clc
insb
mov
fnsave
sarb
cmp
adc
jae
jnp
push
adc
sbb
ret
jge
mov
enter
icebp
or
in
xchg
xchg
sti
and
pop
and
or
mov
outsb
pushf
test
add
lds
pop
sub
pop
loopne
and
mov
sti
shlb
jns
push
divl
in
fidivs
lds
mov
cmc
fcoml
dec
sahf
pop
jle
inc
cmp
js
aas
inc
cmp
adc
push
cmpsb
jb
mov
outsb
jb
icebp
fstps
sbb
xchg
insb
xchg
pop
jge
xorb
hlt
and
xchg
mov
cld
imul
sub
rcrb
push
lods
dec
cmc
and
inc
hlt
pusha
mov
rorb
xor
decb
mov
test
xchg
inc
cmp
fwait
insl
outsl
push
mov
cmp
pop
adc
dec
inc
add
popf
out
jp
sub
insb
out
test
ljmp
gs
mov
int3
sbb
data16
daa
mov
jnp
into
in
mov
popa
pop
mov
cmpb
int3
addr16
push
jb
ret
jmp
les
mov
and
out
aam
pop
mov
clc
pop
call
mov
std
sub
movlps
mov
xor
test
mov
cmp
iret
push
mov
mov
js
cwtl
dec
xor
pop
pop
push
cmpsl
push
sarb
inc
popf
std
jae
dec
add
and
push
mov
pop
pop
push
ljmp
mov
pusha
xor
pop
sub
fsubrs
push
mov
inc
je
or
xchg
aaa
and
add
fwait
shr
daa
jae
outsl
inc
dec
jb
sarb
jmp
mov
jmp
cmp
fiaddl
scas
pusha
cli
mov
pop
movsb
lock
xlat
jl
jp
jno
popf
jns
push
sarl
inc
movsb
jmp
or
stc
cmp
fbstp
hlt
sbbl
shlb
xchg
stc
dec
sarb
xchg
sub
ret
cmp
movsl
xchg
cmpsl
cmpsb
mov
cmp
jmp
ret
das
adc
scas
add
jns
fs
out
and
sub
lahf
sub
test
sbb
dec
repz
fimuls
iret
test
xor
mov
lcall
cmp
test
cmp
adc
nop
fldl
cmp
mov
sub
loope
lahf
nop
popf
out
ljmp
inc
icebp
mov
mov
bswap
subb
popa
xchg
out
cmp
leave
jecxz
sbb
push
lods
mov
fistps
ret
mov
test
jo
scas
mov
fwait
lds
sub
jp
and
es
sub
call
lcall
inc
and
cli
gs
dec
adc
sbb
push
cli
dec
pop
inc
addr16
lret
jnp
enter
lret
mov
in
lods
fsubl
xchg
sti
jnp
decb
imull
imull
cs
outsb
mov
out
ja
jb
sub
jb
sub
jp
pop
mov
mov
push
outsb
jg
inc
sub
cmpsb
pop
test
scas
xchg
sti
outsl
in
cmpsb
fdivr
shl
sahf
or
xchg
ret
mov
dec
adc
inc
iret
in
jo
xchg
mov
fstpl
xorb
insl
ret
ret
in
pop
or
inc
inc
cli
in
ja
std
sbb
jg
mov
aad
or
jae
jae
pushf
or
xor
pop
xor
jne
into
pop
dec
or
movl
jno
lcall
add
sbb
ret
dec
xor
pop
cmp
pop
cwtl
ljmp
and
push
xor
cmpsl
test
ljmp
lret
pop
lahf
jnp
sbb
jne
pusha
icebp
mov
xor
enter
xor
push
cmp
xor
mov
neg
cmp
lock
jnp
inc
mov
subb
jp
hlt
bound
les
mov
dec
xlat
sbb
fidivl
fdivl
mov
cli
mov
scas
cmp
adc
lret
gs
xchg
inc
mov
xchg
into
mov
mov
and
or
cmpsb
jecxz
loop
and
push
mov
mov
ljmp
or
inc
and
inc
dec
cli
mov
xchg
nop
fs
repz
xchg
mov
sub
and
fimull
icebp
jns
add
arpl
mov
xchg
outsl
inc
lods
cld
pop
pop
jnp
push
inc
and
mov
insl
das
xchg
xor
inc
lds
out
addb
adc
and
test
pop
jo
mov
sbb
or
hlt
jmp
rcr
pushf
mov
adc
roll
or
sahf
lods
fildll
ss
xlat
jne
push
arpl
xchg
cmp
mov
jmp
sti
and
cltd
jne
fs
loope
add
nop
insl
out
xlat
repnz
std
pop
xorl
in
sbb
iret
sbb
cli
mov
dec
mov
repz
or
push
sbb
pushl
xor
dec
scas
cmp
adc
sub
gs
mov
sub
shlb
inc
xlat
fsub
fisubl
movsb
imul
and
xchg
test
and
dec
mov
add
xlat
lds
mov
lret
cmp
dec
xchg
lahf
xchg
inc
adc
mov
or
or
lret
cmp
clc
and
cltd
xchg
jmp
mov
imul
fists
jne
xchg
mov
insl
cmp
jnp
mov
adc
loope
bound
notb
mov
mov
fimull
xchg
mov
mov
aaa
and
popf
pop
push
or
xchg
lahf
test
push
shl
cmp
ror
aas
sbb
xor
lcall
dec
std
mov
sub
dec
popf
cs
fs
sub
mov
inc
cmpsl
push
mov
jle
repz
es
jno
nop
scas
faddl
push
pop
ret
cmp
out
or
and
cld
popf
sbb
xchg
outsl
pop
dec
in
push
outsl
iret
xchg
outsl
lret
vmwrite
pop
jb
mov
pop
inc
in
pop
cld
pop
jnp
bound
popa
jmp
pop
pusha
rcrl
outsl
mov
sub
push
xor
mov
mov
ja
cmpl
in
dec
or
int3
cs
dec
dec
cmp
mov
je
and
sub
cmc
inc
dec
jecxz
pop
pop
jo
adc
fildll
push
jg
cmpsb
stc
mov
rcr
jae
sti
aaa
lods
repnz
sub
sub
movsb
inc
pop
jno
pop
push
mov
scas
ds
leave
inc
cltd
filds
lret
jg
cmp
add
adc
mov
outsl
push
mov
mov
cmpsl
inc
daa
scas
arpl
cmp
push
mov
jg
mov
push
test
push
sarb
mov
cmp
inc
jne
adcb
out
push
mov
inc
add
aas
inc
sub
push
daa
loop
or
fcmovnbe
jp
sbb
jg
xor
ja
shrb
arpl
xchg
out
pop
cwtl
enter
or
movsb
mov
dec
xchg
popf
imul
jbe
stos
xor
int3
push
ljmp
js
mov
mov
iret
addb
insb
mov
dec
jecxz
mov
mov
popa
ja
aad
add
jmp
pushl
loop
sub
loop
popf
icebp
testl
dec
cmp
std
shr
push
cli
fldl
xchg
mov
jle
shrl
cmpsl
shr
sbb
jp
dec
adc
shrb
std
shr
inc
cli
int
pop
or
xchg
shr
inc
cli
lods
movsl
fbstp
mov
xlat
dec
mov
mov
jle
packssdw
push
fsubrs
and
push
les
faddl
mov
mov
xor
dec
loope
lcall
sti
push
adc
mov
and
inc
or
xor
adc
icebp
jne
inc
or
mov
mov
or
ficoms
in
inc
in
xchg
adc
movsb
pop
mov
inc
jge
and
xchg
adc
adc
xor
adc
mov
mov
inc
insb
and
and
lret
push
cs
adc
xor
dec
mov
bound
sub
and
mov
adc
shrl
dec
test
mov
adc
and
bound
sti
push
and
test
iret
les
clc
or
ficoms
sbb
pop
xchg
adc
pop
xor
movsl
insb
ljmp
push
xchg
adc
repnz
inc
fsubrl
and
mov
pop
inc
mov
inc
inc
adc
nop
sti
pop
test
sub
sub
or
into
inc
push
std
adc
and
mov
lret
jbe
out
push
test
sti
xlat
adc
cld
adc
dec
inc
pop
dec
ljmp
shrl
push
xchg
loope
xor
shll
mov
scas
loopne
sbb
mov
adc
inc
pop
ja
push
jne
aad
jno
ljmp
xor
into
jmp
cmp
mov
cmp
mov
data16
in
push
mov
data16
iret
jmp
pop
xlat
mov
cwtl
inc
imul
jae
sub
mov
mov
mov
sbb
pop
mov
outsl
in
lods
not
pop
daa
fsubl
push
jmp
mov
dec
add
and
out
adc
lods
cli
in
popf
mov
in
movsb
jle
fwait
pop
aas
je
cwtl
xor
hlt
mov
push
aas
enter
pop
popa
shr
or
sub
mov
imul
movsb
xchg
jmp
push
fmul
aaa
mov
movsb
cmp
popa
xor
jnp
mov
jno
pop
dec
jecxz
in
push
push
test
sbb
mov
xchg
or
cli
xchg
hlt
sub
inc
iret
bound
inc
jo
sub
in
jg
mov
dec
sbb
ret
das
push
aas
int
lret
imul
divl
mov
aam
in
cmp
mov
mov
bound
mov
in
movsl
test
bnd
mov
filds
mov
xor
sbb
ljmp
pop
sub
jae
mov
jns
mov
xchg
cmp
repnz
aaa
dec
fcom
jns
mov
outsb
dec
push
pop
and
jle
jecxz
pusha
or
cld
icebp
aam
cmp
mov
mov
jne
push
sahf
cmp
pop
jg
imul
push
or
push
daa
int3
loope
cmpsl
mov
dec
int
out
xor
sbb
mov
sbb
imul
popa
jae
mov
insl
mov
fildll
outsl
jno,pt
js
lret
test
lahf
push
lcall
and
add
mov
lahf
push
pop
mov
stos
mov
dec
and
add
sbb
push
clc
je
xorl
pop
mov
movsl
adc
add
push
repz
mov
std
shl
sub
fists
push
sub
push
pop
scas
mov
in
add
add
mov
cld
pop
xchg
push
xchg
pop
out
test
xlat
and
or
andb
xor
aam
imul
mov
xchg
dec
xor
add
lea
pop
loopne
enter
xor
leave
repz
add
and
lahf
mov
insb
enter
mov
dec
js
fsubrs
push
iret
xor
arpl
and
inc
mov
pop
scas
and
jno
add
mov
dec
pop
dec
loope
fdivrl
push
stc
sub
push
xor
mov
ds
je
lock
inc
pushf
cmp
addr16
lcall
cmp
add
lock
outsl
ds
in
add
fdivr
pop
add
lock
mov
sub
stc
pop
or
adc
leave
sub
sub
sub
imul
and
sub
push
sub
adc
mov
mov
cmp
cmp
push
sub
sbb
jae
rorb
lret
push
mov
test
push
stc
push
jno
or
or
jbe
mov
inc
imul
jmp
notb
sti
pop
or
leave
dec
pop
test
andb
ja
cmc
xor
pop
bound
cmpsl
idivl
cmc
cmp
xor
mov
dec
add
adcb
cmpsl
test
cmpsl
mov
mov
shr
inc
lds
mov
jle
gs
pop
add
shll
test
add
pop
and
dec
jno
scas
aam
inc
jns
and
jbe
push
addl
clc
scas
mov
xchg
idivl
jne
sti
jmp
and
sahf
and
insb
subl
jle
xchg
sbb
jmp
push
std
or
jp
outsl
inc
cmp
fisttps
inc
daa
push
mov
insl
push
mov
push
jl
lods
xor
scas
sub
or
mov
mov
adc
lock
mov
aaa
idivl
jne
jg
inc
das
cmp
mov
out
repz
mov
dec
add
xorl
pop
ret
pushf
jp
xor
inc
mov
cmp
das
lds
inc
mov
frstor
jecxz
mov
push
mov
lcall
xchg
sub
lea
int3
clc
dec
mov
pop
pushf
jp
loop
push
in
sub
inc
fnstenv
rol
int
popl
addr16
out
call
push
das
lret
lods
inc
and
push
mov
out
pop
dec
and
fs
and
fimuls
aas
inc
pop
repz
sahf
mov
xor
add
sub
cmpsb
sbb
xor
dec
cmp
dec
sub
repnz
clc
sbb
add
imul
test
cmp
test
test
cmp
jg
adcb
xor
pop
sahf
adc
or
and
lods
push
jmp
mov
or
mov
pop
xor
mov
cmp
rep
iret
lcall
clc
pop
cli
pusha
pushf
paddd
jno
lds
jecxz
in
jno
or
push
xchg
stos
jge
dec
or
je
pop
dec
xor
sar
inc
out
jno
mov
sub
gs
sbb
xchg
repnz
xor
dec
fnstcw
mov
lcall
cmc
dec
cmc
push
sub
in
js
fsubrs
mov
das
mov
mul
add
je
add
cmp
iret
adc
cmpsb
jmp
jle
cmp
mov
push
arpl
inc
je
adc
cmc
xchg
je
leave
mov
jge
pop
call
add
leave
out
or
pop
jno
adc
inc
test
mov
xchg
fsubs
loopne
jae
xchg
aas
jge
and
dec
adc
nop
lcall
aas
fidivrl
dec
cld
add
add
adc
push
pop
aas
int3
cmp
mov
dec
add
xchg
xchg
addb
das
inc
push
adc
jl
iret
sub
mov
pop
mov
stos
mov
add
pop
pop
sub
dec
xchg
sub
mov
stc
outsl
scas
dec
mov
mov
lcall
neg
xor
cld
enter
xor
pushf
cltd
cmp
jae
int3
fdivrl
xor
in
jmp
in
std
ljmp
int3
jno
jg
int3
push
cltd
pop
fstpt
ljmp
in
xchg
or
mov
mov
and
nop
fidivrs
xchg
in
pusha
xchg
pop
and
push
iret
clc
pop
iret
push
xor
gs
lea
adc
sbb
xor
mov
in
loope
jl
mov
movsl
dec
jmp
xor
insl
mov
popf
in
outsl
push
fs
and
int
into
mov
loopne
rolb
clc
movsl
mov
mov
pushf
push
cmpsl
adc
aam
repz
lds
das
push
int
sub
stos
adc
lea
adc
push
fmuls
enter
popa
cmp
aam
cltd
cmc
sbb
loope
push
ss
xchg
sarl
dec
sbb
stc
push
sbb
jns
or
icebp
in
cmp
push
adc
dec
lock
xchg
pop
cmpsb
jne
jns
cmp
push
in
jne
dec
dec
pop
das
lahf
jnp
dec
push
push
sahf
ret
or
adc
inc
pushf
aaa
int3
cmp
sub
xor
push
xor
add
scas
scas
outsl
push
xor
mov
imul
mov
jnp
jle
jg
scas
inc
insb
bound
push
jns
cmp
cmc
mov
test
lret
pop
and
sbb
pop
cmp
push
xor
mov
rclb
mov
nop
push
imul
jae
mov
insl
push
xor
sub
into
ret
sbb
fs
xchg
out
pop
repz
mov
cmp
jmp
push
push
xchg
enter
mov
pop
imul
loope
cmpsl
lods
sub
insl
mov
ljmp
fistps
fs
push
in
jg
out
pop
and
pop
xor
pop
leave
std
subb
adc
xchg
jno
add
ds
lret
addr16
jmp
mulb
inc
ftst
mov
mov
xor
mov
test
test
sub
sbb
daa
ret
xchg
mov
int
bound
xor
dec
mov
cmp
sbb
xchg
xlat
xchg
sub
ret
aaa
stc
mov
lods
ret
xor
sub
and
call
add
sahf
dec
mov
loope
test
clc
push
lret
pop
mov
push
jnp
jmp
sub
es
ret
push
cmpsl
test
lods
mov
test
fistps
cmpsb
aad
loopne
adc
sbb
sub
and
sub
nop
fs
add
inc
cli
inc
xchg
pop
adc
lret
in
push
jp
sbb
or
push
mov
xor
test
cmp
xchg
insb
dec
push
jle
int3
out
repnz
shr
inc
sbb
mov
pop
repz
enter
dec
jo
pop
in
inc
scas
sbb
bound
push
in
push
int
lret
jmp
xchg
cli
out
dec
dec
fistpl
fs
mov
clc
data16
push
movsl
lods
pop
enter
aaa
pusha
sub
jp
loopne
lret
nop
ficomps
out
jecxz
cmpsb
sub
leave
arpl
adc
rcll
sub
cltd
ja
sbb
xchg
pop
out
pop
shlb
adc
fdiv
inc
popf
clc
sub
mov
lea
push
fcmovne
and
pop
out
and
pop
ljmp
or
pop
clc
cwtl
pop
dec
dec
insb
movsb
shrl
repz
dec
xor
rol
cmp
nop
ljmp
inc
push
ret
repz
xchg
in
push
xchg
mov
cld
jb
lret
or
sbb
cli
xor
mov
mov
in
fldcw
sbb
ljmp
mov
xchg
insl
cmp
testb
ror
add
adc
push
fcmove
inc
movsl
call
fisttpl
into
xchg
fildl
pop
push
cmp
cwtl
in
arpl
push
in
shr
call
cmp
mov
hlt
jl
sub
pop
test
xchg
push
pop
into
adc
or
sub
daa
mov
mov
push
insl
and
call
rcll
cld
repnz
rclb
cwtl
pop
and
inc
dec
jne
popa
out
sub
mov
test
push
pop
push
cmc
iret
cmp
sti
pop
hlt
sub
clc
cmc
inc
lock
add
inc
divb
jb
mov
test
fwait
pop
enter
mov
bnd
clc
cmc
stc
adc
fs
incb
mov
ret
or
jne
loop
mov
stos
mov
cwtl
imulb
das
aam
push
lock
pusha
add
or
shl
lahf
sbb
movb
or
scas
test
pop
xchg
mov
sbb
into
or
mov
inc
ja
xor
or
xchg
sub
or
in
hlt
mov
sub
popa
cmp
pop
mov
add
add
add
stc
push
out
xchg
sbb
cli
imulb
lret
mov
cmc
pop
adc
add
mov
imul
lret
add
sti
xor
imul
cmp
fldcw
icebp
ret
std
icebp
es
mov
mov
lods
insl
mov
jle
dec
xor
xor
dec
shlb
pushf
jmp
sub
stc
mov
stos
lret
and
mull
mov
xchg
mov
out
add
imul
and
lcall
test
xchg
pop
jbe
je
or
jecxz
out
out
or
mov
push
xchg
outsl
mov
inc
push
mov
stc
push
or
and
mov
xchg
insb
inc
pop
movsl
pop
xchg
fbstp
inc
aaa
lret
xor
popf
mov
pop
aam
or
test
sahf
xor
hlt
xor
rcr
cmpsb
inc
sti
and
mov
dec
push
dec
jge
rclb
notl
xchg
scas
dec
xchg
mov
jl
imul
cmp
jp
xchg
ss
mov
xchg
iret
mov
or
fwait
insb
sbb
pop
inc
xchg
les
dec
dec
dec
fimuls
repnz
lahf
arpl
repz
pop
cmp
lods
stos
popf
pop
je
dec
js
shrl
lret
cmpsl
repnz
push
int
pop
mov
pop
mov
out
jmp
xchg
mov
mov
in
jne
pop
xor
mov
xor
repnz
dec
stos
mov
or
int
push
fbld
jb
in
sahf
push
stc
sahf
pop
pop
or
xor
imul
enter
pop
cmp
mov
icebp
mov
ljmp
mov
inc
mov
sub
xchg
mov
push
inc
outsl
cmp
adc
add
mov
dec
mov
ljmp
or
rcr
cmp
pop
jb
sahf
xchg
ds
sub
mov
sbb
or
out
jo
jo
cwtl
call
rcrl
mov
xlat
dec
cltd
addr16
or
jns
lret
mov
jnp
xor
mov
jge
pop
cmp
loope
inc
loopne
xor
leave
jmp
out
cld
jns
inc
in
jecxz
icebp
lods
or
add
push
cmp
pop
nop
lret
fldcw
mov
arpl
mov
jne
push
pop
sub
dec
cld
cld
sub
mov
dec
pop
add
fmulp
call
out
and
lret
dec
xchg
pop
iret
xlat
xchg
enter
inc
iret
pop
dec
jp
imul
sbb
push
rolb
lods
jmp
addr16
call
bound
stos
jne
fisubrl
pop
pop
pop
pop
test
insb
fldt
mov
imul
xor
addr16
or
mov
push
xlat
imul
mov
icebp
in
imul
xchg
iret
xchg
mov
sbb
cs
jb
pop
insl
repnz
cwtl
shll
test
inc
sub
jp
dec
insb
jno
loope
lods
loop
notb
pop
add
cmp
xor
scas
xchg
xlat
test
jmp
pop
subl
pop
popf
btr
jp
adc
shlb
fwait
mov
inc
das
xchg
stos
pop
aaa
sub
pop
cltd
and
popa
fucom
pop
pushf
aaa
push
out
int3
repnz
std
lahf
pushf
cmp
cmp
pop
pop
addr16
ret
lods
xor
lret
nop
jns
arpl
pop
lahf
clc
cwtl
dec
mov
push
jo
sbb
clc
repnz
insl
xchg
adc
xchg
xor
xchg
iret
push
pop
push
adc
flds
gs
pop
lods
cmpsl
xchg
xlat
icebp
jne
rclb
pop
stos
xchg
ret
repnz
pop
fwait
nop
xchg
pop
or
jp
jne
cmp
cltd
adc
pop
add
xor
fidivrl
mov
bound
insb
inc
jne
int
pusha
std
hlt
adc
sub
insl
sub
jns
or
ja
lock
stc
jmp
in
int3
cmp
ljmp
ds
pop
sbb
xor
pop
popa
test
test
adc
pop
mov
lods
popf
call
xchg
inc
outsb
repz
loopne
insb
xchg
dec
fstpt
sub
cmpsb
jmp
add
push
out
aad
data16
in
push
out
ret
stos
adc
cli
cmp
pop
jg
rcll
lcall
fwait
stos
cli
xchg
and
into
adc
int
xchg
mov
inc
xchg
sub
add
dec
push
jnp
into
shrb
push
repnz
xchg
sub
pop
ja
push
cmp
push
adc
or
sbb
mov
loop
cmp
in
in
test
clc
mov
cmpsl
jge
subb
lods
movsl
mov
jno
mov
popf
out
neg
inc
jle
mov
icebp
fidivl
jb
mov
cmovbe
mov
insb
mov
lea
mov
pop
inc
mov
mov
add
sbb
jne
in
fstpl
mov
lret
mov
mov
pushf
sbb
mov
cmc
mov
pusha
lret
lock
fidivs
out
xor
xchg
sub
mov
lret
cltd
push
lret
jae
out
jae
jne
rcr
ret
adc
jne
ficompl
mov
mov
inc
pop
xchg
fsts
je
imul
lret
cmp
movsl
js
rcrl
lahf
add
insb
daa
cmp
dec
mov
sub
std
js
sub
in
adc
push
lahf
lret
lock
ffree
jae
and
pushf
cwtl
cmp
mov
xor
nop
stos
cwtl
cs
loope
iret
aaa
ljmp
out
pushf
out
dec
add
test
mov
mov
scas
mov
fs
xlat
cli
icebp
outsb
push
ljmp
xchg
movlps
push
mov
pop
je
jle
in
bound
adc
lods
ds
repz
push
fiadds
ds
std
jmp
leave
xchg
jecxz
sub
push
cmpsb
out
push
sub
cltd
mov
ret
cmp
movsb
repz
cltd
js
and
loop
jae
cli
cmpsb
rcll
ret
pop
cmc
test
cmp
mov
jmp
out
sub
call
fwait
mov
ds
out
or
xor
testl
and
jno
dec
fninit
pop
test
mov
adc
std
insl
adc
lea
xchg
arpl
push
lods
hlt
jge
dec
ds
push
jl
push
dec
cmc
pop
cmp
mov
mov
mov
stos
lds
mov
out
push
fidivrs
dec
cmpsl
and
xchg
dec
sahf
orl
ret
inc
dec
out
cmpsl
adc
pop
sbb
mov
stc
cwtl
jmp
mov
or
ret
inc
pop
sub
and
pop
stc
sbb
into
inc
mov
leave
jl
hlt
inc
jg
inc
mov
rcll
mov
enter
mov
mov
jns
cltd
mov
mov
ss
outsb
fistpl
insl
ss
jmp
in
cmp
jg
xchg
ja
clc
adc
clc
adc
repnz
imul
adc
mov
mov
insl
outsl
add
dec
cld
push
test
xlat
out
pushf
mov
lahf
jle
or
push
jle
lock
pop
loope
lahf
cmp
lret
and
test
mov
divb
lea
sbb
jecxz
dec
ret
js
outsl
or
int3
push
fdivl
repz
lahf
in
xor
js
int
insl
sahf
fisubs
ljmp
or
dec
clc
push
push
jp,pt
add
inc
and
ss
jmp
cmp
cwtl
shlb
aas
lret
in
xlat
push
pop
sub
outsl
das
les
add
dec
jb
xor
int
add
jge
hlt
xor
pusha
mov
xchg
adc
pushf
daa
xor
xchg
push
pusha
lcall
jge
es
test
call
xor
int
scas
scas
pop
movsl
insb
dec
xor
cmpsb
mov
and
pop
dec
jle
jbe
xchg
mov
or
or
or
or
or
or
syscall
sbb
sub
es
rclb
dec
je
and
test
xor
gs
push
mov
or
pop
jne
or
imul
push
push
or
push
lret
rcl
cmp
subl
fcmove
push
and
and
and
ds
fildll
push
cwtl
xor
cmp
xchg
sbb
pop
cmpsl
roll
mov
sbb
cmpsl
xchg
bound
into
std
cwtl
andl
loopne
dec
out
imul
ds
popf
stos
movsl
imul
movsb
push
daa
sub
lahf
sub
mov
out
jg
clc
pop
out
cld
dec
mov
cld
in
aad
inc
mov
scas
push
icebp
push
popf
lods
cmc
leave
ficomps
or
sub
dec
mov
es
xchg
scas
sbb
loopne
lcall
lret
and
test
in
jecxz
pop
push
lock
js
in
es
mov
sub
sub
xchg
pushf
dec
inc
jno
dec
or
jne
jmp
in
lret
xor
jmp
das
mov
ret
push
adc
adc
call
push
cltd
fs
sub
mov
push
xor
and
mov
push
flds
test
adc
xor
enter
lahf
call
dec
lds
cmp
mov
xchg
mov
es
fisubrl
pusha
shlb
pop
pop
add
pop
jmp
test
enter
mov
ret
sub
mov
mull
into
cmp
or
int3
or
sbbl
ret
and
dec
ljmp
jb
sbb
xor
jne
fistps
mov
stc
mov
fisttpl
mov
xchg
loope
xchg
jo
mov
cmc
cwtl
inc
sub
mov
movsl
fwait
scas
hlt
adc
dec
pop
nop
int3
adc
scas
arpl
cmp
hlt
int
mov
xchg
iret
and
inc
shrb
pop
das
push
stos
call
addr16
loopne
xor
pop
push
fidivrs
inc
mov
pop
rcrb
cli
icebp
xchg
rcrl
inc
xor
ret
into
pop
xlat
sbb
ss
mov
das
and
ds
daa
into
add
cs
inc
xchg
shlb
popf
lret
xchg
divl
iret
and
icebp
loop
sub
pop
insb
inc
shlb
or
and
pushf
pop
fdivrl
popa
sub
aaa
das
jl
mov
movsl
inc
mov
movsl
and
or
sbb
xchg
pusha
sub
xchg
mov
shrl
pushf
jg
out
add
divl
push
xor
inc
out
dec
xchg
or
xchg
ss
pusha
cmp
mov
cmp
inc
cmp
enter
adc
mov
movsl
jecxz
in
je
test
cmp
movntq
dec
in
cld
fimuls
outsb
dec
fnstcw
out
repz
enter
xor
fwait
inc
lock
cmp
out
cmp
sub
lcall
clc
sar
enter
pop
sbb
sub
jecxz
loop
dec
insb
xlat
xchg
inc
mov
ret
stc
enter
imul
stos
fwait
iret
sub
gs
inc
jnp
in
icebp
into
std
dec
mov
outsl
in
loopnew
jns
ss
adc
jns
cmp
inc
js
in
test
mov
sarl
pop
mov
ja
ljmp
repz
das
mov
pop
cmp
add
test
in
jmp
movl
out
outsl
and
or
mov
mov
jnp
dec
mov
pop
test
jnp
dec
and
ljmp
out
icebp
push
sub
jecxz,pn
add
pop
insl
jne
lahf
mov
cmp
lret
xor
add
dec
xchg
out
cmp
sbb
scas
inc
lods
ret
stc
cmp
lods
xchg
cmpsl
sbb
cld
sbb
xlat
mov
imul
jnp
stos
xor
js
push
arpl
xchg
andl
xchg
jmp
xchg
arpl
inc
xchg
lods
movsl
lods
lret
sub
gs
mov
aad
shlb
add
dec
cld
es
test
jnp
sbb
cmp
insb
pop
sub
js
jo
sarb
in
jno
xor
cmc
push
pop
sahf
in
cmc
push
outsl
sti
scas
ror
sbb
call
pop
pop
test
ja
sub
jl
std
or
sbb
cld
icebp
in
int3
pop
dec
xchg
aad
dec
testb
aas
pop
aam
lret
aas
sahf
in
aaa
repz
sarl
jne
add
movsl
push
mov
outsb
adc
mov
addr16
lret
cld
negl
fcoms
movsl
fimuls
push
das
ret
jecxz
movsl
movsl
js
bound
sahf
mov
mov
jns
cmc
or
dec
xor
xorl
out
int3
out
loop
lods
test
sarb
pop
out
test
push
jnp
push
jg
into
jbe
mov
dec
popf
add
loop
pop
clc
shrl
out
add
imul
sahf
notl
leave
and
int
mov
mov
mov
scas
aas
pop
xlat
cmp
jg
scas
sti
cmc
inc
jno
das
scas
das
mov
das
vpcmpgtw
and
cmc
push
jno
push
pop
lahf
adc
pop
mov
pop
jne
mov
and
jno
and
jno
and
jg
xlat
jg
xlat
daa
vmovapd
xchg
mov
mov
ja
cmc
mov
mov
pop
mov
scas
dec
mov
test
mov
cmc
sub
cli
push
jno
pop
pop
mov
xlat
outsl
mov
and
cli
loop
dec
jno
push
pop
pop
adc
mov
daa
jno
and
les
jmp
loop
mov
mov
es
mov
cmpsb
cmc
jle
in
adc
pop
cmc
inc
jno
adc
pop
les
andl
mov
jp
lods
xchg
in
push
sbb
stos
js
inc
data16
add
imul
imull
jno
cmp
jnp
pop
mov
jp
fisubrs
pop
push
ljmp
or
push
mov
inc
dec
pop
pop
test
lret
icebp
cld
mov
cmp
dec
pop
xchg
xor
loop
lahf
dec
icebp
ja
mov
lods
rcrb
shrl
lods
imul
xorb
or
fmuls
sbb
fiaddl
pop
sbb
jae
in
push
jl
test
mov
jle
insl
jne
pop
inc
arpl
push
cmp
jp
gs
lahf
ret
sbb
fsts
mov
mov
lock
jg
rol
mov
jo
in
sti
stc
mov
pop
jg
scas
pop
div
jmp
in
or
loope
iret
sbb
dec
aad
in
int
lock
lock
test
arpl
scas
test
pop
push
cmp
jb
enter
fdivl
inc
lret
fs
mov
or
xchg
cmp
sub
inc
in
jns
sub
inc
cld
aad
jo
fidivrl
int3
repnz
jnp
leave
jne
mov
and
xor
push
mov
iret
push
sub
into
mov
lret
sbb
or
xor
iret
addr16
inc
pop
es
lods
call
xor
jge
inc
arpl
mov
and
mov
into
xchg
repnz
int3
push
push
insl
inc
ja
fstp
mov
dec
in
insl
mov
out
adc
loopne
push
aas
xchg
lahf
outsb
pop
mov
sub
lea
mov
jp
or
mov
adc
outsb
adc
sbb
aas
lahf
test
xchg
arpl
sarb
mov
xchg
xor
mov
xor
add
imul
xchg
xchg
in
push
mov
adc
pop
jl
out
dec
aaa
out
fnsave
cld
clc
ret
and
lock
ds
mov
mov
jge
adc
loopne
mov
or
pop
jb
pushf
pop
jecxz
nop
nop
pop
clc
adc
jecxz
fmull
mov
mov
decb
sahf
stos
ljmp
fidivrs
add
int3
repz
add
cmpsl
out
data16
cli
mov
xchg
mov
fs
push
mov
mov
enter
xor
loop
xor
pop
shll
lahf
jg
enter
lret
fs
loopne
scas
push
ret
out
sbb
in
scas
xor
clc
jns
xlat
and
inc
cwtl
fbstp
mov
xchg
fdivp
out
into
loop
roll
and
cmp
dec
add
push
aam
sbb
cmc
out
pop
mov
push
icebp
adc
inc
pop
xchg
adc
jae
add
leave
in
icebp
ret
test
push
sbb
loop
mov
sub
jns
inc
sub
mov
bound
inc
push
stos
sub
cli
sub
fidivs
repnz
mov
lret
cmpsb
in
cmp
mov
mov
jge
sbbl
inc
jp
or
fucomp
andb
xchg
out
loop
xchg
xor
pop
or
jl
jg
add
loop
jmp
mov
add
add
ljmp
dec
fsubrs
cmpsl
pop
sbb
xchg
push
pusha
neg
arpl
xor
out
ffreep
std
test
lret
cmc
sarb
jg
add
jl
or
ja
sbb
mov
bound
cmp
mov
and
test
sahf
std
pslld
pop
lods
cmc
xchg
icebp
dec
push
xchg
imul
or
hlt
out
std
pop
push
mov
fstps
xor
ja
xorl
jno
jnp
mov
ja
out
gs
sbb
push
sti
cmp
mov
mov
loop
mov
addr16
mov
stc
cmp
clc
sbb
loopne
pushf
sbb
ja
sahf
sbb
repz
into
or
add
and
pushf
xor
push
push
mov
pushf
cld
pxor
cwtl
popa
cmpsl
in
inc
fiadds
out
js
mov
out
sbb
or
mov
jns
ds
push
xor
jg
sbb
xchg
cmp
fldcw
dec
iret
xchg
sahf
sbb
ljmp
lret
cmpsb
stc
jg
sub
add
adc
mov
in
in
dec
fisubs
xchg
mov
push
add
jno
inc
dec
cmpsb
out
pop
lret
mov
sub
fs
rcrl
cltd
aas
fxch
movsl
sbb
jl
or
inc
mov
sbb
push
gs
mov
push
fimuls
loop
repz
fistl
cld
sbb
mov
lock
popf
cmp
sbb
mov
mov
divl
out
or
loopne
mov
in
lcall
jno
xorb
cmp
xchg
mov
ja
cmp
loop
pop
bnd
decl
aas
sbb
xchg
js
cmp
insb
ffreep
cwtl
fcoms
mov
add
jns
mov
fidivrs
test
and
popa
xchg
sbb
mov
xchg
mov
lret
or
ret
divl
hlt
loope
pop
fdivl
jmp
loop
and
push
loope
cltd
lock
andb
mov
inc
stos
jg
movsl
rol
xchg
sub
in
mov
inc
neg
mov
ret
aad
decl
in
cmp
pop
lret
jg
xchg
aas
pop
es
lret
call
icebp
jle
push
xor
dec
iret
jge
push
sbb
xchg
pop
rcll
mov
xor
adc
mov
pcmpeqd
pop
stos
cmp
xor
fstl
xlat
pop
mov
notb
fsubr
mov
adc
add
test
roll
loopne
pusha
sub
cmp
cmp
mov
cmp
xlat
pop
sti
jle
jae
test
lret
jmp
arpl
xlat
pop
ret
inc
dec
daa
test
cmpsl
inc
cld
movsl
sbb
xor
or
ret
scas
xor
pop
pop
popf
mov
aas
jle
sti
push
mov
fdivrl
ffree
ret
jg
adc
adc
daa
adc
xchg
mov
push
rol
jp
xchg
push
enter
imulb
sbb
mov
inc
in
in
adc
jmp
cmpsb
pushf
jbe
ret
das
sti
mov
popf
ret
inc
divb
sbb
adc
paddb
mov
fs
out
sbb
add
out
mov
add
loop
pop
jnp
jmp
stc
xor
xlat
addr16
lret
jo
sub
rcrb
add
adc
in
cmp
jle
popa
mov
mov
push
cld
in
mov
cmp
cmp
cld
mov
cltd
shll
adcl
add
das
adcl
push
sub
negb
js
cmc
aad
loope
imul
pop
cmp
fmulp
jae
jnp
or
mov
leave
aas
bound
push
loopw
lds
sti
sub
jmp
sahf
push
jbe
repz
dec
or
or
ds
sub
ffree
cmp
pop
arpl
fistpll
fadds
pop
sti
ss
int
das
insl
stos
mov
pop
test
mov
sahf
mov
je
fwait
xchg
je
xlat
popa
mov
mov
cmc
pusha
adc
lock
stc
loopne
clc
in
mov
add
repz
push
mov
test
fisttps
jnp
jne
cs
dec
loopne
rcl
inc
pushfw
mov
daa
arpl
dec
jb
out
lock
je
dec
lea
repnz
sbbl
cmp
inc
cmc
jl
dec
cmc
add
das
jmp
adc
cmp
lret
ret
mov
mov
aad
mov
adc
fwait
xchg
mov
mov
xchg
iret
or
mov
out
stos
sub
cld
mov
add
push
xor
push
pop
pusha
jns
ret
pushf
mov
pusha
inc
loope
push
xor
in
mov
pop
adc
push
jne
mov
in
xor
repz
bound
lds
and
inc
ljmp
clc
pop
cmpsl
xor
fcomps
mov
jecxz
xor
pop
and
outsb
js
adc
cmp
into
jmp
add
int
dec
adc
out
pop
jo
ret
in
cld
scas
cmpsb
inc
out
mov
mov
dec
push
aad
cmp
or
sti
jmp
ret
jle
jmp
push
and
add
or
inc
leave
out
ds
jns
ficoml
sub
push
ss
repz
ret
imul
xor
cltd
mov
addr16
int
scas
jo
adc
cli
jo
fisubs
cmp
jnp
int
mov
jge
cmpsl
cmc
cmp
sub
out
ds
enter
int
dec
cmp
mov
dec
inc
repz
sti
cwtl
mov
or
add
scas
fimull
jo
insb
xor
sbb
ret
xchg
imul
sti
mov
mov
jmp
cltd
mov
mov
jecxz
das
fisttps
xchg
lods
xchg
sbb
sti
cltd
fwait
xchg
out
cmp
mov
cmpsb
pop
adc
hlt
sub
xlat
arpl
mov
pushf
xor
aas
adc
or
sbb
sar
pop
js
jmp
jecxz
aad
mov
jp
xchg
test
and
jg
inc
mov
loopne
popa
clc
imul
into
ds
xchg
arpl
xchg
ret
and
movsb
movsl
negb
das
rol
fwait
ljmp
cmp
testb
pusha
and
lcall
repnz
cli
shl
adc
outsl
pop
dec
mov
out
xor
jg
sbb
xchg
out
flds
enter
add
mov
fidivrs
int3
lock
int
std
call
fbstp
or
mov
cmp
push
push
movsb
outsl
ffreep
orl
insl
pop
loop
div
mov
pusha
pop
fucomp
mov
jecxz
sub
pop
cmp
mov
icebp
cmovle
out
sbb
mov
push
aas
bound
stos
pop
movsb
out
addr16
das
push
negl
xor
sbb
jge
sar
push
loopne
inc
stos
jl
movsb
out
mov
pop
js
imul
ret
lea
fwait
loope
gs
sub
pop
cmpsb
movsl
add
pop
popa
outsl
cmp
jmp
rcrl
xlat
out
jae
jne
jge
into
lds
dec
mov
cmp
push
nop
dec
lea
push
fimuls
xchg
add
jb
iret
inc
jb
aaa
push
and
jb
dec
mov
roll
cmc
cmp
in
jg
iret
std
jb
jge
outsl
aam
ret
jae
xchg
pop
sahf
sub
shl
push
pop
das
dec
gs
out
pop
lods
xchg
popa
cs
gs
xchg
add
inc
das
imul
mov
cltd
daa
int
cmp
pop
int3
gs
aas
xchg
xor
cmpsl
rcrb
fistps
mov
xor
xchg
cmp
mov
push
xchg
cmc
out
dec
fcomi
xlat
dec
leave
in
dec
fwait
popf
push
popf
cmp
push
ret
lock
jge
add
ljmp
mov
and
dec
std
stc
outsl
mov
cmpsl
in
addr16
insl
ficomps
mov
std
fmulp
sbb
xor
pushf
adc
xchg
rolb
rol
pop
imul
sbb
and
into
addb
jns
cmp
in
mov
js
push
into
arpl
jbe
imul
inc
sub
aaa
es
mov
mov
sti
enter
cld
imul
jl
std
sbb
xchg
iret
ss
loopne
sbb
cmc
dec
stos
dec
fcmovnb
test
stc
push
mov
adc
and
iret
pop
mov
ficoms
cltd
or
pop
arpl
jge
std
sub
leave
fbld
mov
pushf
je
sbb
stos
faddl
lds
aas
and
dec
sbb
xor
mov
pop
push
sbb
add
push
fwait
loopne
pop
xchg
cmpsb
push
jmp
les
les
mov
sahf
loope
fcmovbe
das
jo
mov
jo
push
mov
jns
mov
lods
jge
or
cwtl
je
iret
rolb
or
cmp
ret
cmp
jnp
out
test
pushf
cmp
fldt
jno
and
xchg
fwait
push
push
sbb
out
in
xchg
repnz
ficoml
test
jl
mov
xchg
lds
mov
int
xchg
sbb
test
cmp
mov
cld
pop
test
out
inc
add
inc
inc
fst
jmp
lea
and
cmp
xchg
fbstp
cmp
and
and
pushf
movsl
xchg
test
cmpsl
popf
pop
push
out
sbb
jnp
mov
js
sbb
dec
stc
jle
jnp
in
sarb
ljmp
js
or
xchg
xor
dec
aad
fld
loopne
lcall
popf
aam
jbe
hlt
jge
or
fldl
push
das
arpl
popl
pop
lret
push
ds
inc
cmp
ds
adc
int
outsb
imul
mov
inc
pop
ret
clc
adc
std
xchg
sti
cli
decb
fnstsw
cmc
repnz
mov
sahf
cltd
jp
icebp
int3
lock
shl
inc
add
jle
imul
sub
cld
mov
cmp
mov
lods
add
xor
out
rcr
int3
mov
push
sub
xlat
mov
imul
rcr
push
fistps
mov
in
or
out
leave
cmp
jae
out
sahf
enter
cmp
push
inc
or
fisttpll
push
aas
into
cmp
das
frstor
clc
loopne
mov
pop
push
add
and
jle
cld
mov
add
ja
insb
xlat
outsl
cmp
add
jnp
testl
pop
cmpsl
ja
mov
xlat
cmp
cmp
sbb
pop
aas
xor
shlb
cmp
mov
orl
repz
fwait
cmp
jbe
std
call
addb
call
xor
popf
mov
in
repnz
xor
loop
sub
jg
enter
xchg
bnd
inc
loope
cmp
inc
hlt
int
stc
ret
sti
ljmp
sbb
loopne
xor
iret
adc
loopne
iret
inc
enter
divb
push
xchg
dec
sbb
shll
lock
lahf
jnp
add
ja
clc
dec
add
es
push
adc
dec
loopne
add
shll
rcl
loope
push
adc
clc
and
inc
loopne
add
mov
loopne
pop
cmp
or
mov
sbb
mov
jns
jne
jle
rolb
pushf
decb
daa
add
inc
loopne
or
lret
push
jl
cmpl
pop
dec
sahf
adc
inc
loopne
or
imul
or
jle
in
sbbl
movhlps
mov
outsl
es
add
and
add
mov
std
add
loop
push
jl
orl
inc
jle
aas
dec
loopne
add
call
lock
add
repnz
add
dec
loopne
add
stc
sbb
pop
dec
loopne
add
js
enter
or
mov
and
or
sub
xchg
pop
jb
call
js
rorb
and
loopne
add
cmc
pop
sarb
adc
subl
add
aas
ljmp
xchg
pushf
jge
aam
add
lock
adc
subl
or
cmc
xchg
rorb
jp
in
xor
movsb
std
and
jbe
addr16
sahf
movsb
popf
rcrb
adc
or
rcrb
add
call
subl
jle
dec
sti
rsqrtps
cld
and
dec
adc
mov
cld
xor
pop
or
je
ror
js
jnp
dec
or
loopne
push
loopne
add
ljmp
dec
loop
clc
add
xor
or
mov
adc
xorl
incb
cld
and
insl
add
cli
xor
or
cmp
popf
sarb
xor
sub
aas
inc
loopne
add
stc
or
jns
aas
dec
loopne
testl
dec
adc
mov
cmp
mov
add
cwtl
rolb
insl
and
roll
daa
jo
call
add
cli
sub
dec
add
adc
mov
fsubs
lock
jns
or
add
js
addl
leave
pop
add
adc
es
jo
add
mov
mov
subl
test
addl
jecxz
adc
shlb
mov
pushf
ds
or
jl
orl
pop
pop
inc
loopne
or
mov
repnz
sbbl
adc
xorl
jle
pop
dec
lock
or
ficoms
clc
jle
pop
and
xchg
jg
rcrb
dec
loopne
dec
push
mov
pushf
ds
call
js
rclb
dec
add
daa
jo
push
sub
add
lock
add
sahf
inc
repnz
dec
adc
cmp
add
dec
adc
cmp
adc
jl
rcl
movsbl
add
mov
loopne
out
sbb
es
in
pmaxub
arpl
repz
mov
mov
fcmovbe
outsl
ret
cmpsl
adc
ja
jmp
inc
rcll
pop
add
in
out
fs
insb
leave
mov
jae
adc
loop
std
add
lock
in
add
mov
jge
fistps
fs
mov
mov
mov
fmulp
mov
mov
push
lahf
add
lcall
pop
nop
ljmp
mov
fadd
mov
mov
cmp
jecxz
aas
clc
add
adc
mov
jle
xlat
inc
jge
scas
incb
adc
ds
lret
add
mov
xor
or
mov
ds
lods
jbe
int3
mov
popf
imul
push
out
lock
or
lret
inc
lret
das
cmp
pop
mov
sti
jns
pop
xchg
push
jbe
movsb
sub
int
lds
out
stc
cmpl
lock
and
mov
sti
shl
lods
push
sub
ret
cmp
cld
ret
rcrl
mov
xchg
push
rcr
movsl
and
add
cmp
stos
mov
pop
cli
ljmp
push
pop
test
mov
ja
call
loope
xchg
mov
iret
jnp
jle
pushf
sub
adc
push
fdiv
popa
loopne
cmp
stos
sub
cmp
out
jg
xchg
lods
push
cli
into
push
inc
iret
mov
mov
stos
popf
cmp
pop
mov
sub
jecxz
mov
ret
mov
fiadds
cs
dec
rol
incb
test
mov
xchg
lds
mov
iret
pop
les
lcall
xchg
loop
jo
and
iret
add
stos
push
pop
or
dec
loopne
imul
mov
add
xlat
mov
jecxz
jecxz
cmp
push
sti
xchg
iret
out
iret
lds
icebp
repz
scas
es
je
arpl
xchg
scas
pusha
stc
fsubrs
out
sub
mov
orb
dec
mov
or
outsl
xchg
stos
add
or
xchg
jns
xor
cltd
xchg
div
fdivr
mov
push
pushf
aas
imul
out
pop
mov
outsl
add
push
iret
iret
ret
mov
aad
aam
mov
mov
lret
cwtl
xlat
pop
js
shlb
scas
inc
sub
pop
out
push
mov
test
test
movsl
int
insb
pop
out
inc
shl
roll
xorb
jno
dec
xchg
xchg
call
repz
push
scas
pop
test
push
cmp
insl
dec
call
sub
push
mov
test
or
push
fwait
imul
cmp
xor
sti
imul
dec
in
scas
fwait
out
arpl
pusha
sbb
inc
cmp
xchg
fwait
mov
lcall
iret
adc
sbb
xor
sbbb
cwtl
pop
ja
mov
test
xchg
mov
call
decb
je
or
jno
cmpb
xor
aas
mov
ja
loope
test
jmp
loope
lret
shr
pop
and
lods
mov
add
stos
cmp
adc
jo
aad
leave
adc
cmp
ljmp
gs
cmp
int3
repnz
lret
loop
xor
dec
adc
gs
pushf
jmp
scas
adc
xchg
fsubrs
sbb
and
mov
dec
outsl
adc
adc
test
loop
bound
cli
in
xchg
shrb
andl
outsb
jmp
add
enter
ds
cltd
pop
pop
push
orps
jecxz
mov
dec
inc
sti
fmuls
pushf
movsb
mov
fisttpll
inc
mov
ja
pop
imul
jns
mov
xlat
adc
js
sahf
pop
scas
and
sbb
cmc
mov
xchg
dec
sbb
lcall
cmp
dec
imul
cmpsl
jns
mov
scas
inc
jnp
loop
jp
mov
mov
pop
into
pop
mov
push
jae
sti
divb
jb
mov
pop
mov
xor
xor
mov
dec
dec
pusha
sbb
int
sbb
jae
enter
pop
scas
repz
std
sbb
scas
xchg
push
lret
adc
xor
and
mov
scas
inc
insl
lcall
sar
lahf
adc
xor
and
fadds
in
xlat
and
ffreep
ja
insb
rcl
jle,pt
xchg
pop
sti
inc
mov
mov
dec
test
cmp
and
nop
sahf
insb
dec
cmp
add
inc
sub
test
out
inc
xchg
iretw
adcb
ja
stos
aaa
sub
movsb
jp
rcrl
and
aam
push
ret
fcompl
xchg
insl
shl
add
xchg
hlt
lock
pop
outsb
fldl
dec
rep
clc
lahf
and
idiv
pop
rcrb
int3
das
je
pop
in
dec
mov
sub
aas
aam
add
test
fisttpl
add
in
iret
loope
adc
inc
cmp
loopne
mov
shl
mov
push
in
dec
les
jp
xchg
pop
push
jnp
out
arpl
sbb
mov
or
dec
mov
popf
dec
scas
dec
clc
add
aad
mov
adc
lret
push
mov
push
sub
xchg
imul
dec
ja
ljmp
or
sbb
daa
inc
and
dec
test
xchg
sub
aam
push
dec
mov
sbb
pop
and
mov
je
je
mov
pop
mov
aam
lock
bound
pop
std
outsb
adc
and
aaa
xchg
jno
sbb
bound
xchg
sarb
test
push
sbb
out
pop
sbb
gs
cltd
fidivrl
xchg
xor
push
fistpl
add
jno,pn
insb
mov
stos
jecxz
dec
dec
je
sti
or
jg
cli
jl
mov
pusha
fcmovnb
xchg
xor
clc
pop
sub
xchg
mov
pop
mov
hlt
mov
negl
cmp
fisubrs
jmp
ror
mov
add
in
out
data16
push
imul
push
lcall
in
out
xor
lods
add
jnp
int
mov
mul
cmp
jecxz
sbb
pop
inc
insb
or
les
sub
outsb
adc
test
stos
and
mov
js
jge
push
faddl
jge
shrb
lods
orl
mov
sbb
inc
in
subl
lds
sahf
sti
mov
test
scas
adc
in
cmp
mov
push
pusha
imul
stos
jno
and
mov
loop
fistl
fmull
or
adc
pop
out
fldl
pop
or
mov
jns
pusha
sti
bound
cld
ds
imul
mov
subl
push
test
xor
add
jns
sbb
cmpsb
roll
adc
aaa
imul
fists
adc
lds
frstor
jge
das
cmpsl
xchg
and
in
fld
add
ja
sub
adc
and
mov
lods
ret
mov
adc
lea
out
mov
dec
rcr
scas
push
fcomps
test
mov
inc
jae
and
xor
pop
inc
je
es
mov
fs
sti
je
fwait
rcrb
jno
sub
jno
sbb
pushl
mov
hlt
inc
jge
add
xor
cmp
and
inc
jae
pop
fildl
sbb
icebp
fxch
jo
mov
int3
xchg
cwtl
imul
jge
ljmp
pop
jne
mov
jb
adc
sbb
aas
or
in
mov
mov
test
fadd
movsl
ljmp
jo
or
xchg
inc
pop
jg
jno
mov
cwtl
jns
push
imul
imul
fstps
loopne
mov
fwait
sub
pop
jb
sub
cli
cmp
insl
or
cmp
lds
jmp
mov
mov
mov
mov
es
inc
int3
in
aam
lea
cmpsb
inc
sbb
inc
jecxz
xlat
mov
push
pop
sbb
ds
jmp
mov
push
push
aad
xchg
icebp
mov
adc
cltd
int
in
pop
xchg
xor
cmp
mov
sarl
mov
xor
lea
loopne
adcb
scas
dec
jo
in
mov
loope
push
dec
pop
pop
mov
pop
lret
lock
cld
das
ljmp
outsb
addr16
mov
stos
aaa
push
std
out
jmp
push
mov
inc
xchg
adc
sbb
scas
sbb
jnp
or
out
pop
cmp
or
sar
addl
out
pushf
out
or
out
clc
lahf
adc
mov
sub
jle
cltd
jmp
inc
push
mov
mov
xchg
shrb
daa
into
jbe
test
dec
mov
jmp
inc
sub
pop
frstor
movsl
inc
shl
xor
aaa
mov
dec
cmp
out
xlat
push
add
mov
cmpsb
fistpll
pop
push
xlat
adc
lret
push
insl
mov
push
lahf
stc
push
loopne
lds
pop
cli
cmp
xor
popw
cmpsb
inc
xchg
jl
popf
call
sbb
mov
cmp
clc
cli
add
dec
add
mov
int
adc
sub
or
jo
dec
push
jl
inc
sbb
push
ret
sub
adc
sub
or
xchg
ret
adcb
das
je
pop
xchg
mov
mov
mov
jae
xchg
or
fistpl
sbb
mov
les
test
jne
je
mov
es
das
lea
daa
cwtl
rcr
push
imul
clc
push
in
sbb
xor
lock
xchg
xchg
add
jmp
in
mov
in
stc
or
mov
je
inc
daa
xchg
inc
sub
push
out
sbb
iret
aas
ja
out
and
mov
inc
ljmp
out
or
loope
cltd
hlt
es
or
aaa
aad
fimuls
dec
dec
pop
shll
iret
or
shr
cmp
aas
insb
adc
jne
out
mov
and
jns
inc
xchg
lock
test
push
fistpl
mov
add
pop
xor
addr16
mov
mulb
cmp
fbld
lds
iret
push
pop
in
rorb
frstor
lods
push
in
fwait
scas
adc
das
popf
es
out
into
aad
add
xlat
and
pop
mov
cmp
lods
ret
ficoml
iret
in
xor
imul
js
cmp
jnp
dec
xor
mov
popa
push
fucomip
aaa
ficoml
test
call
xchg
repz
push
mov
cld
mov
outsb
pop
jnp
adc
dec
daa
and
movsl
pop
jmp
mov
scas
mov
cli
cmp
repz
mov
and
add
insb
shll
rcrb
lret
cs
sub
imul
sahf
test
mov
arpl
addr16
fiaddl
mov
in
sbb
sub
js
imul
push
dec
lret
sbb
mov
notl
enter
xchg
pop
cmpsb
shl
out
movsb
mov
fisubrl
or
jns
inc
lock
out
cmp
in
data16
rcll
lret
out
jo
cmp
add
fucomp
test
jb
imul
scas
inc
mov
xchg
test
or
test
push
mov
sub
xchg
adc
shlb
cmc
jp
adc
inc
push
lods
fildll
lock
push
js
pop
addr16
lods
cmpsb
mov
sbb
push
sbb
adc
jl
test
sbb
cmp
pusha
lods
inc
mov
rclb
inc
test
dec
inc
out
adc
pop
add
shlb
and
jne
sbb
test
shll
dec
mov
adc
mov
pop
repz
push
fsubrs
mov
rcrl
jp
and
in
push
popa
aad
into
cmc
xor
cmp
gs
stos
mov
jl
xchg
mov
adc
scas
sbb
lret
imul
movsl
int
je
sbb
out
sub
aaa
aam
cmp
jno
pop
mov
aaa
ret
or
dec
sbb
mov
sbb
aad
jne
jle
fldcw
loope
mov
xchg
jb
div
jno
mov
cmpsb
test
ret
inc
mov
js
lods
sbb
sbb
popf
jmp
cld
and
subl
clc
data16
popa
in
xchg
pop
pushl
int
pop
bound
sub
sub
mov
dec
adc
mov
push
xchg
pop
pop
shl
mov
cmp
mov
cmp
lods
loope
pop
push
dec
repz
testl
int
rcrb
add
fbstp
pushf
mov
mov
loope
imul
mov
and
sub
std
outsl
fcoms
movsb
ss
out
xchg
in
lcall
hlt
imul
sub
insl
jo
cltd
cld
into
mov
push
sti
neg
lock
repnz
sbb
push
mov
pushf
or
enter
jbe
cmp
bswap
sarb
mov
pop
hlt
mov
mov
push
popf
dec
push
arpl
int
jle
mov
pushf
xchg
dec
inc
jmp
mov
loopne
mov
jne
sub
test
hlt
jne
popa
dec
pop
mov
adc
ret
and
pushf
push
outsl
pushf
mov
nop
sbb
pop
xorb
jg
cld
jecxz
cmpsl
inc
xor
jge
cmp
lea
in
ds
push
mov
pop
aas
cmp
pop
fstl
sub
cmp
test
dec
or
inc
iret
cld
cmp
xchg
movb
je
cmpsl
test
jbe
adc
shl
sub
mov
jne
pop
push
addr16
negb
cli
ss
fisubrl
insb
pop
aaa
in
scas
push
mov
xor
adc
cmpsb
jl
inc
int3
fdiv
std
xor
sub
sub
xchg
sub
cli
aam
push
popf
popa
pushf
cmp
jmp
xchg
je
hlt
dec
add
sti
shrl
and
xor
inc
popf
out
xchg
fisubrs
fisubrs
nop
mov
cmpsl
rep
fst
jmp
addr16
adc
les
in
test
mov
insb
bnd
outsb
cmp
sti
lret
jne
xchg
imul
call
mov
jne
xchg
out
in
shlb
mov
enter
hlt
jo
mov
xlat
adc
xor
aas
inc
adc
pushf
push
loopne
js
mov
cmp
lods
in
push
mov
inc
lds
mov
mov
stos
add
mov
in
ss
dec
pushf
fists
aas
xor
add
fistpl
xor
les
fisubrs
lods
pop
dec
ss
mov
fisubrs
lahf
push
pop
xchg
jo
out
aas
dec
mov
adc
cmpsl
lret
imul
fcoml
add
jp
push
jl
push
mov
pop
jb
add
outsb
into
jbe
and
daa
mov
mov
icebp
std
fistps
push
outsb
fnstenv
lds
pop
xor
fldenv
lock
xchg
jle
jns
sti
data16
sahf
lea
push
fmuls
jmp
cli
loope
inc
imul
xchg
push
movsb
lea
mov
dec
jae
incb
jg
mov
cmp
mov
inc
dec
dec
in
ficompl
xchg
lcall
fwait
xchg
mul
popf
out
mov
in
scas
add
sub
sbb
stos
cwtl
data16
adc
pushf
pop
jecxz
je
xchg
cmp
dec
jnp
inc
std
sti
sbb
mov
aad
adc
cmp
jle
popf
ljmp
jns
arpl
xchg
addb
jp
xor
jnp
ss
add
add
test
repnz
pop
dec
out
mov
push
or
das
push
mov
mov
repz
mov
rolb
loopne
negb
push
mov
es
sti
sbb
les
and
lods
out
jl
idivb
jp
adc
pop
or
arpl
cli
scas
sub
and
data16
fnstcw
icebp
push
stos
das
in
dec
repz
fs
cmc
jmp
stos
mov
add
dec
je
cli
add
cmp
sub
sub
addr16
int3
push
sti
ret
in
std
pop
cmp
cli
push
test
in
or
cli
pop
jb
push
xlat
pop
xchg
ss
punpcklbw
lds
ds
incl
cli
sbb
mov
loope
out
ja
mov
xchg
jp
idivl
push
mov
sti
pop
xlat
mov
jle
xchg
xlat
jnp
push
cwtl
jecxz
es
stc
or
cld
sub
pop
in
xor
jg
aas
ret
bound
cmc
dec
clc
call
jg
pop
push
loope
add
jl
dec
sarl
push
push
push
inc
add
push
inc
mov
xor
sbb
leave
mov
in
push
out
mov
jnp
dec
aaa
mov
inc
dec
dec
push
scas
xchg
lcall
insl
mov
jns
into
fnstenv
in
push
fistpll
jl
mov
jae
out
jns
out
cltd
out
jns
int3
jae
fsubrs
repnz
pusha
shlb
xor
push
rorb
test
mov
xchg
adc
xor
dec
popf
add
jnp
push
rcrb
inc
mov
lcall
mov
int
shll
inc
sbb
inc
out
cmp
xchg
in
xor
add
imul
mov
xor
inc
mov
fiaddl
dec
movsb
mov
aaa
arpl
add
xchg
test
push
jmp
es
cltd
aaa
repz
in
sbb
mov
pop
popf
sbb
fadd
pop
and
subb
push
inc
jmp
lods
push
fiaddl
imull
mov
aaa
push
imull
pop
sub
cmc
add
out
lods
xchg
loope
lahf
fsubr
repz
jp
popf
shrl
out
jb
inc
dec
xchg
std
das
xor
sub
mov
adc
mov
loop
add
aam
sbb
mov
pop
andb
outsl
mov
mov
mov
adc
lea
sbb
das
mov
sbb
or
xchg
icebp
lods
mov
add
jecxz
sub
pop
ret
in
xor
popf
mov
sti
repnz
cmc
jns
sub
lods
sahf
inc
sbb
out
orl
in
pop
iret
mov
std
fs
add
inc
cwtl
insb
nop
sub
inc
subb
push
notb
seto
xor
enter
inc
adc
or
mov
idiv
cs
mov
add
xlat
jo
cmp
cltd
lds
push
ret
shr
in
test
xchg
jp
inc
dec
xor
imul
repnz
aam
xlat
js
sub
dec
ret
cmpb
cmpb
test
into
xor
int3
int3
dec
cmp
rolb
mov
insl
mov
mov
sbb
push
into
add
and
cld
xor
push
and
add
ss
out
dec
and
pop
fisubl
xor
mov
nop
pop
inc
cmp
aad
jge
lods
leave
pop
insl
sub
int3
cltd
or
cmp
cmpsb
xchg
xor
scas
and
push
out
jecxz
pushf
loope
js
aas
add
addr16
sbb
out
flds
and
mov
mov
ficomps
mov
out
mov
sub
cmp
pavgb
push
cmp
cmp
push
jecxz
popf
mov
jecxz
push
lcall
adc
pop
mov
dec
xor
mov
outsb
fs
and
fistps
ljmp
roll
cmp
adc
mov
dec
dec
dec
mov
and
and
arpl
out
inc
ljmp
cmp
cmpsb
push
sub
outsl
daa
adc
sbb
jl
adc
add
out
mov
adc
movsl
imul
dec
fbld
insb
repnz
test
leave
jecxz
icebp
fcompl
mov
in
ljmp
cmp
incb
das
shlb
xchg
int
mov
imul
inc
jne
sub
mov
mov
test
repnz
loope
icebp
pop
xorb
aam
fcmovu
lahf
mov
cld
xor
mov
xorb
add
push
dec
mov
pop
mov
fists
pop
sub
xchg
popa
jnp
xchg
mov
jb
loop
and
cmp
add
dec
pushf
mov
dec
push
les
xchg
loopne
out
outsb
icebp
inc
divl
pusha
lret
subb
mov
sub
push
cmp
outsl
cmp
jp
mov
sbb
in
xor
aaa
mov
inc
mov
test
cs
xor
mov
mov
adc
xchg
mov
aad
subl
bound
pop
cld
sahf
fs
insb
xor
sub
or
pop
inc
and
cmc
pop
out
shl
outsl
incl
in
inc
mov
jl
ret
loopne
xchg
sti
repnz
gs
push
dec
sub
mov
lods
js
pusha
fsts
shlb
xor
lock
mov
xchg
fs
mov
adc
jbe
push
lcall
repnz
repnz
fs
pop
push
mov
pop
pop
or
or
or
std
js
movsl
mov
sbb
cmp
mov
dec
xchg
enter
mov
xchg
fsts
test
jl
pmaddwd
mov
jnp
stos
mov
imul
jl
jge
xor
add
jg
xlat
cmpsl
cli
jns
jae
stc
int
sub
or
sbb
dec
mov
push
aas
jnp
scas
xor
mov
ljmp
inc
jg
and
sub
movsl
dec
mov
fwait
ja
jno
pop
or
push
jo
int3
inc
cmc
fcmovne
lcall
mov
dec
fdivrs
daa
adc
mov
jp
ljmp
xchg
test
push
jge
loopne
pop
es
out
xlat
ficompl
pop
arpl
cmp
rcr
pop
adc
je
frstor
adcl
sub
xor
inc
fistpll
xlat
pop
mov
cmp
fbld
push
add
sub
lds
test
loopne
cmpsb
or
inc
cmc
sbb
mul
add
mov
dec
rcrb
xor
lcall
xor
cmp
mov
movsb
sub
ficompl
sub
and
xchg
in
hlt
insl
pop
mov
cmpb
insb
inc
psubusw
ss
cs
shll
call
and
or
add
pop
sti
and
out
sub
inc
loope
sub
and
cmp
mov
xor
pop
test
and
sub
adc
mov
adc
sbb
rcl
fsubs
cmpsl
aad
inc
inc
jle
out
inc
lods
rorb
sub
fwait
lret
call
xchg
or
xor
arpl
or
dec
push
lock
divb
add
repz
or
ss
outsl
sbb
sub
mov
jbe
dec
xor
std
xor
pop
xlat
pop
fwait
jl
dec
pop
mov
nop
push
or
mov
js
and
sbb
jnp
push
and
insb
cwtl
jmp
dec
xchg
lods
jno
push
addr16
jne
cmpsb
push
mov
mov
fdivp
loope
jbe
test
cmc
mov
cmpsl
pusha
xchg
adc
lods
xchg
ss
dec
cmpb
dec
loop
clc
xor
lcall
je
fistpl
mov
cmp
or
push
inc
gs
or
add
in
imul
cwtl
ja
inc
cltd
mov
sbb
fsubl
adc
sub
mov
mov
sbb
sub
lods
jae
sbb
lods
push
mov
push
ss
jno
cmc
arpl
leave
in
lock
sbb
je
or
push
ljmp
mov
adc
and
lods
mov
lret
pop
int
mov
pop
xchg
popl
push
into
aas
jo
sti
inc
sbb
lds
and
jl
sbb
xchg
mov
pop
lea
mov
xor
cmp
daa
daa
inc
mov
push
cmpsl
sub
les
dec
aam
int3
push
out
or
mov
xchg
push
sub
jne
and
push
out
clc
leave
out
dec
mov
push
xor
int3
loop
enter
fsubl
jmp
ret
lcall
ret
out
int3
sbb
lock
mov
inc
adc
lods
xlat
js
sbbl
fldenv
mov
imul
mov
rorl
repz
negb
int
jp
push
iret
pushf
sub
sahf
jno
xlat
into
pop
leave
les
negl
jb
cwtl
jmp
roll
mov
adc
adc
iret
test
dec
xor
cmp
icebp
rolb
or
sbb
aaa
pop
pop
testl
ja
push
cltd
mov
xlat
mov
in
and
push
ja
sbb
test
sub
push
sub
lds
out
push
xor
sti
pushf
sahf
push
repnz
cmpsl
shrl
dec
shl
and
data16
xor
sub
push
adc
popa
test
repnz
fs
mov
lcall
inc
int
cs
inc
mov
lret
sbb
add
mov
push
dec
pushf
pop
adc
ret
sahf
out
das
mov
mov
arpl
xchg
fnsave
inc
in
sbb
sbb
popa
adc
mov
xor
sbb
pop
lcall
sub
adc
xchg
lahf
cmp
and
mov
inc
jbe
push
pop
hlt
cmp
outsl
mov
cmc
adc
add
push
fisttps
ja
cmp
and
pop
push
rcrb
notl
mov
outsl
or
push
mov
je
leave
sbb
stos
je
stos
inc
je
movsl
and
xchg
lods
inc
adc
add
fcmovbe
mov
pop
bound
movsb
ret
cmp
lock
int3
mov
mov
mov
lea
cmp
cwtl
test
push
inc
lods
fdivl
aas
outsb
cmp
mov
jo
push
xchg
call
push
cmp
xlat
call
mov
iret
mov
repz
test
rorb
vprotd
jp
and
hlt
push
aaa
clc
inc
shrb
mov
aam
mov
jbe
mov
lock
dec
aam
or
ja
popa
mov
icebp
jp
push
jle
add
rcrb
jp
pop
fcoml
outsl
paddusb
jp
push
cld
mov
sbb
insl
or
add
icebp
push
inc
pop
jne
jmp
imul
lock
jno
xchg
mov
xchg
mov
push
sbb
fcmovbe
dec
xor
sbb
int
lret
leave
dec
pop
pushf
fwait
pop
and
mov
adcb
push
scas
fcmovnb
xor
pop
xchg
xor
xor
jmp
das
cltd
mov
mov
pop
test
sbb
xlat
mov
jno
cmp
inc
push
data16
data16
cmp
sbb
inc
loop
xor
sbb
jns,pt
ss
xor
lahf
lcall
cltd
xchg
movsl
inc
andb
add
cmpsb
pop
cmp
ss
sbb
sbb
aam
mov
lret
jge
xor
test
pop
sub
cld
loop
loopne
mov
test
xchg
pop
push
pop
shlb
mov
ret
mov
movsl
movsb
mov
push
lea
test
mov
adc
popl
pop
push
fisttpl
rclb
aas
and
test
xchg
jle
and
pop
sahf
loop
sbb
sub
pop
push
fwait
and
shrl
adc
inc
mov
xchg
push
popa
subb
xchg
movsb
fwait
pop
inc
pop
outsb
xchg
shll
push
jp
ds
push
lret
push
jl
jmp
jecxz
ljmp
jecxz
jae
fs
mov
inc
sbb
lret
and
jbe
iret
ja
ja
inc
mov
loopne
fs
pop
jmp
inc
orb
mov
stc
xor
or
loop
mov
xchg
cmpsb
sbb
pop
cmpsb
imul
cli
clc
cmc
dec
sbb
andb
mov
or
or
jle
jnp
xchg
mov
adc
test
pop
add
rorb
inc
test
imul
sahf
sub
out
add
int3
xchg
into
in
inc
test
xchg
inc
pop
cs
call
cmpsb
es
das
icebp
adc
xchg
push
inc
mov
aaa
inc
and
aad
mov
jg
jmp
std
mov
and
stos
and
xchg
rorb
pop
adc
cwtl
in
push
cltd
push
xor
xchg
leave
fnstsw
test
cmp
out
push
out
inc
lods
mov
inc
cmpsb
fmul
ljmp
mov
rol
sub
mov
push
cs
out
push
adc
addr16
xchg
out
movsl
frndint
dec
fldl
ds
aad
enter
out
adc
adc
add
jae
rclb
div
adc
xor
push
sbb
push
or
xchg
sbb
cmc
adc
pop
loopne
xchg
xchg
or
mov
or
inc
mov
std
fs
cmpb
mov
rorl
adc
cmpsb
sbb
icebp
enter
or
and
in
pushf
iret
push
mov
iret
push
mov
or
pop
outsb
fldenv
loopne
mov
lods
pushf
push
sub
and
andl
enter
orb
rorb
mov
and
fimull
dec
ja
mov
jns
push
cltd
ds
pop
popa
out
jbe
fadd
out
and
push
subb
xor
push
jne
push
lret
mov
loopne
addr16
loopne
pop
cmp
mov
insl
loopne
scas
cmp
jae
or
das
mov
sarb
fwait
cmp
jle
lahf
mov
leave
adc
jnp
js
fldenv
mov
or
out
adc
insl
decl
insl
mov
test
dec
iret
call
rorb
mov
pop
mov
push
stos
inc
push
fisttps
dec
ss
mov
jmp
aad
push
pushf
dec
lods
out
imul
and
pop
iret
sbb
icebp
push
aaa
mov
mov
or
daa
loope
cmp
inc
stos
jae
push
pop
std
loop
mov
pop
jg
mov
cmp
aas
mov
std
mov
cmp
jb
rcll
shll
ljmp
push
or
lds
jae
in
aas
or
dec
push
insl
sbb
dec
mov
mov
pop
jmp
es
cmpsb
ret
mull
pushf
xchg
mov
mov
mov
aaa
mov
fwait
pop
inc
push
lock
stos
inc
mov
loop
pop
or
pop
xchg
adc
mov
lock
lcall
in
or
xchg
adc
add
leave
mov
fcomi
mov
movsb
lods
packsswb
xlat
push
jne
jbe
std
pop
stos
jbe
sub
mov
cmp
sub
cmp
push
psubusb
xchg
mov
jno
sti
mov
fs
or
mov
sub
jno
dec
xorl
jl
sub
push
and
mov
mov
ret
test
inc
mov
cmc
imul
sub
jae
jmp
and
mov
or
lock
aam
in
arpl
cwtl
xor
inc
mov
or
xchg
das
mov
into
inc
lea
or
pusha
divb
fbld
fcmovnb
mov
pop
adc
into
ret
sub
out
pop
push
aam
sbb
repz
mov
mov
rorl
loope
rclb
stc
ret
mov
enter
sbb
and
or
and
mov
inc
mov
into
sub
repz
sub
andb
jb
in
jo
xchg
add
roll
arpl
loop
adc
add
out
loope
cwtl
jg
inc
shl
jb
addb
pop
jo
icebp
add
push
test
cltd
pop
jb
popa
push
jns
xor
mov
mov
adc
or
icebp
cli
mov
cmpsb
lds
or
dec
pop
inc
test
aas
cmp
mov
popf
add
faddl
add
dec
or
jp
leave
movsl
mov
xchg
add
aam
sbb
cmp
dec
test
movsb
div
xchg
jl
xor
scas
dec
xor
daa
push
jno
dec
rcll
out
add
in
cmp
repnz
sub
int3
notl
ficoms
ret
das
in
mov
mov
shl
out
loope
push
xlat
or
jmp
jle
hlt
add
aas
or
pop
clc
jne
pop
pusha
and
aaa
rorb
dec
stos
mov
test
xchg
rolb
pop
fists
xlat
dec
loop
movsb
out
iret
sub
outsb
mov
add
es
xchg
out
xchg
sub
mov
xor
fisubrl
pop
sbb
dec
fcoms
dec
or
loope
and
mov
sbb
sbb
mov
testb
sub
int
cmpsb
dec
jmp
out
sahf
push
repz
or
cmp
aaa
push
lret
xchg
fimull
add
stc
imul
inc
inc
push
dec
inc
sub
subb
push
mov
sbb
and
push
leave
mov
pop
ljmp
cmpl
call
dec
ror
jp
ficomps
hlt
ret
insl
mov
fisubrs
and
push
pop
add
inc
mov
into
and
push
inc
mull
fwait
sbb
cmp
shrb
xor
xchg
lcall
and
dec
pop
add
add
call
scas
lahf
aam
idivb
mov
mov
jp
pop
and
ljmp
loopne
out
sub
sub
int
and
idivb
dec
fistl
push
aaa
fdivl
insl
push
jb
in
xchg
add
and
xchg
add
and
pop
mov
and
mov
or
add
jp
bound
lea
repz
xchg
mov
mov
xlat
enter
jge
jne
or
por
xor
mov
stos
ret
push
fnstcw
mov
mov
cwtl
movsb
or
lret
fidivl
leave
aam
jp
je
js
pop
lods
in
or
sub
aad
xchg
cwtl
adc
or
hlt
inc
cs
lcall
mov
inc
xchg
fnsave
jcxz
inc
push
xor
call
sub
std
or
faddl
jmp
dec
out
cwtl
lea
std
or
sarb
jmp
inc
mov
dec
mov
dec
dec
lret
in
lods
nop
add
push
imul
jo
cltd
and
hlt
add
dec
loope
or
arpl
fldt
or
xor
inc
pop
shrb
inc
mov
add
outsb
dec
jecxz
and
and
clc
popa
pop
xor
pop
mov
lods
jmp
mul
mov
cmpsb
dec
scas
mov
mov
lcall
mov
test
dec
adc
mov
sub
push
push
cmp
xchg
dec
jp
cmp
mov
cmpsb
pop
movsl
inc
cld
adc
aas
adc
out
and
pushf
stos
push
mov
ljmp
jnp
jp
aas
gs
negb
jmp
lods
mov
xchg
gs
in
push
rcrl
movsl
pop
sub
rcll
cltd
mov
cmc
dec
pop
pop
outsb
add
pop
xchg
xor
push
pusha
mov
stos
std
and
outsb
sbbb
xor
lds
or
imul
sbb
ss
stos
inc
mov
test
les
push
jge
pop
mov
xor
dec
cld
pop
and
or
cld
test
pop
out
decl
xchg
incl
out
xchg
jg
dec
incb
mov
pop
std
out
xchg
jg
out
xlat
mov
test
sti
and
sbb
cld
push
xchg
loopne
in
mov
fs
pop
mov
push
gs
lea
pusha
cmpsb
jnp
jne
fidivl
iret
push
jp
ljmp
or
and
xor
decl
push
push
insl
out
sub
fcmovnu
mov
cmc
xchg
and
sub
push
sbb
mov
dec
roll
inc
mov
sbb
lret
shll
ret
jne
and
loop
xlat
pop
cmp
jecxz
test
outsl
std
lcall
cmp
push
cmp
jnp
xorb
jnp
scas
dec
or
xchg
outsl
and
out
pop
sbb
rcrl
into
push
mov
mov
scas
cli
imul
pop
cmc
dec
idiv
and
inc
sub
add
scas
int
lods
cmpsl
dec
or
xor
scas
int3
dec
out
mov
sbb
cmp
leave
fildl
fwait
in
imul
cmp
stos
sbbb
ss
es
sarb
popa
fldpi
sub
add
dec
inc
push
and
dec
loopne
aaa
push
stos
jno
adc
push
push
sbb
shr
and
xor
jg
fwait
aam
pop
scas
jnp
push
sbb
repz
pop
dec
test
cmovle
pop
bound
mov
je
dec
dec
jo
ja
xchg
into
outsb
jg
jp
fadds
outsl
pop
loope
rclb
sbb
dec
jge
mov
and
dec
and
jnp
loop
mov
mov
dec
or
xchg
jae
out
adc
adc
push
out
jne
je
outsl
inc
rcrl
mov
sbb
dec
inc
dec
push
fldenv
dec
pop
loope
push
ja
insl
mov
pop
pop
popa
mov
or
aaa
aad
rorl
fadds
enter
cld
cmpl
push
xchg
js
xchg
push
std
lcall
ret
sbb
and
push
scas
imul
call
inc
xor
movsl
or
ret
mov
or
mov
test
leave
mov
scas
es
popa
ljmp
cmp
dec
mov
xchg
inc
std
cli
dec
and
inc
aad
lahf
hlt
in
add
rcrb
lret
and
divb
sub
stos
loopne
sar
insl
outsb
push
add
mov
push
xchg
pop
or
outsb
adc
xor
sub
adc
xor
in
push
mov
fs
mov
rclb
adc
fdivs
add
fsts
out
mov
add
mov
add
jl
test
xlat
inc
xchg
xor
and
fiaddl
fs
dec
sub
cs
sub
cwtl
push
push
lods
sub
pop
fsts
pop
adc
mov
lcall
adc
mull
test
dec
cmp
loop
ljmp
or
les
cmp
pop
fistpl
std
dec
das
mov
aad
ja
cli
mov
test
popa
outsl
jp
stos
or
cmp
fs
adc
cmp
push
jno
dec
jno
sarl
mov
or
sbbb
mov
test
stc
jmp
imul
mov
scas
je
jbe
cmp
inc
mov
mov
and
gs
cli
data16
insb
pop
push
fidivl
inc
add
pop
sub
fidivrl
cmp
xor
cwtl
xchg
mov
or
jno
fldl
cmpsb
pop
sbb
test
imul
xchg
inc
jno
push
clc
aas
or
in
mov
loopne
je
ss
mov
or
push
out
out
sbb
sub
cmp
dec
mov
jmp
sub
pop
ja
add
addl
lcall
pop
sahf
fstpt
xchg
stos
out
andl
and
into
leave
call
aas
jnp
cmc
test
pop
faddl
push
cwtl
test
lcall
jb
inc
insb
inc
mov
mov
shll
ss
and
rorl
pop
pop
in
loop
pusha
sbb
add
enter
int
mov
inc
arpl
shll
cld
push
inc
adc
push
roll
test
in
inc
jge
inc
mov
in
jg
fldln2
jne
lods
mov
jp
or
or
outsl
sub
mov
pop
jno
add
cmp
inc
fidivrs
mov
cmp
adc
sbb
jmp
push
or
insl
sub
add
nop
mov
xchg
jnp
and
movb
aas
fmuls
and
stos
int3
and
hlt
pop
aas
adc
ja
pop
ror
pusha
cwtl
sbb
sbb
cltd
add
push
pop
mov
shll
push
push
aad
or
or
lea
int3
fistpll
jae
les
lods
mov
aas
ret
mov
in
mov
cld
inc
cmp
pop
mov
and
gs
dec
mov
sbb
inc
pop
lods
notl
aad
fcoml
cmpsl
xorl
push
loope
adc
mulb
dec
add
mov
jg
dec
sub
mov
mov
cmp
pushf
cmpb
add
push
mov
jmp
stos
pop
testb
fisttps
adc
mov
roll
inc
gs
subl
data16
outsl
cmp
push
cmp
mov
into
adc
fldl
jns
sahf
jae
cmp
scas
xor
int3
lcall
lahf
fcomp
xlat
sub
jo
jno
dec
add
push
push
sub
test
cmp
ljmp
into
adc
sti
dec
push
popa
xorb
pop
repz
push
xor
cmc
rcll
cmp
mov
nop
pushf
cld
jne
mov
lods
pop
xchg
scas
lock
xchg
or
and
push
push
cmp
cmp
aam
and
pop
outsl
scas
or
stos
js
mov
loopne
scas
sbb
int3
cwtl
rolb
out
mov
aam
daa
xchg
adc
pushf
and
push
fwait
out
mov
fdivs
dec
jl
mov
sti
pop
mov
jne
test
hlt
popa
adc
mov
test
int
mov
ds
movsb
push
lret
sti
push
rorb
dec
sbb
nop
inc
arpl
mov
test
xchg
jmp
adc
sbbl
add
test
repz
add
mov
ret
insb
add
dec
or
adc
pop
or
ret
mov
mov
cmc
lcall
dec
lds
stos
dec
lret
and
and
mov
or
lock
ret
lds
pop
in
mov
mov
cwtl
movl
cli
fs
xchg
sub
add
or
jecxz
roll
decl
sub
sub
fsubl
out
or
test
fisubs
jns
mov
push
test
cmpsb
push
sub
mov
push
dec
dec
iret
jbe
push
sub
aaa
arpl
jmp
xor
xchg
mov
call
cltd
out
jge
scas
mov
and
jnp
rorb
sbbb
call
cmp
pusha
imul
push
xchg
dec
jmp
arpl
clc
add
pop
fimull
xchg
faddp
loopne
fdiv
sbb
mov
cli
fisubl
cmpsl
sub
cmp
push
mov
xor
out
test
jne
or
ja
sbb
popa
or
mov
adc
jmp
cmp
out
mov
aaa
mov
inc
test
das
enter
cmp
iret
outsb
bound
mov
jbe
aam
mov
je
jge
call
mov
notl
jge
mov
mov
mov
mov
and
push
jmp
inc
jecxz
add
push
shrl
xor
cmp
in
lahf
lret
adc
test
stos
inc
mov
ret
push
aam
cmp
or
aas
dec
movsl
dec
cmp
mov
mov
jg
and
sbbl
out
pop
jne
das
add
push
mov
jae
repnz
mov
mov
jecxz
packuswb
and
sti
shl
cmp
icebp
or
lcall
mov
push
neg
jl
cmp
fwait
daa
daa
bound
xlat
ficompl
aad
into
jmp
inc
mov
mov
jle
cmc
je
sub
push
pop
out
std
psllq
dec
popf
or
pop
into
inc
lea
inc
rcl
out
pop
stc
out
and
dec
or
dec
mov
dec
nop
mov
incl
arpl
fidivl
movl
fwait
loope
clc
or
int
lea
and
pop
test
clc
dec
rcll
ficoml
scas
pop
rcrb
jp
mov
paddd
pushl
mov
leave
inc
lods
out
sti
or
cmp
mov
sahf
lahf
lcall
je
mov
icebp
sub
jg
out
outsl
push
arpl
aaa
sub
mov
dec
adc
sti
js
jl
cmp
dec
jne
sub
lret
mov
pop
lret
and
lea
push
pop
cmp
jp
inc
add
mov
pop
loope
mov
pop
clc
scas
es
aas
pop
push
cmpsb
js
sbb
loopne
mov
mov
out
dec
lahf
bound
mov
mov
cmp
ss
pop
fsubp
cmp
xchg
shll
jmp
or
movntps
jle
mov
out
ret
cmp
pop
enter
imul
sarl
pop
sub
lret
inc
ljmp
ret
in
push
jne
cmp
mov
sub
insl
cmc
jecxz
aas
pop
scas
rcrb
adc
test
js
out
pop
sub
mov
pop
lds
out
repnz
je
or
cmp
xor
jg
sub
andl
jmp
cld
std
add
dec
cmpsb
mov
ljmp
pop
push
pop
lret
fwait
mov
xor
jne
in
pop
push
mov
mov
mul
cmp
shlb
sub
inc
xchg
popf
inc
inc
cld
mov
repnz
pop
stc
mov
lock
jmp
into
mov
jbe
imul
ja
lods
mov
cmp
xor
fcmovne
xchg
adc
cmpsl
adc
sti
sub
stc
mov
sub
cmp
in
test
xor
ret
xchg
aam
hlt
repnz
sbb
lods
shll
inc
pop
subl
popl
push
out
xchg
cmp
fmul
test
icebp
dec
sub
pop
iret
lock
enter
adc
pop
jle
test
pop
cmp
pop
addr16
mov
pop
xor
add
in
data16
add
lcall
jmp
xlat
pop
xor
add
jb
add
xchg
nop
in
add
adcl
cltd
sbb
or
sub
ljmp
mov
imul
subb
mov
xor
outsb
loop
adc
inc
lock
mov
mov
add
andl
add
push
xor
dec
jle
hlt
sub
xchg
inc
and
loopne
add
f2xm1
push
mov
ljmp
bound
gs
out
mov
jb
rclb
sbb
push
sbb
mov
push
mov
fmull
insl
aad
fsubrp
mov
fdivr
xchg
das
lds
jg
sub
sub
jne
fwait
nop
stc
fsub
fdivrl
dec
push
das
out
dec
dec
push
mov
cmp
scas
leave
cwtl
mov
imul
sbb
insl
je
mov
loopne
adc
sub
popl
mov
push
inc
outsb
push
sar
bound
and
push
test
shrb
mov
clc
mov
push
jae
jno
test
ret
mov
negb
dec
cmp
jae
jb
mov
xchg
xor
cmp
cmc
sub
lea
mov
or
adc
mov
hlt
out
cs
sbb
fnstcw
pop
push
or
hlt
xchg
sub
mov
sbbl
sbb
jg
lret
add
ds
outsb
dec
scas
dec
mov
jno
mov
mov
or
rcl
cmp
inc
adc
out
cmp
xor
mov
jno
test
outsl
mov
sub
frstor
rolb
add
jp
arpl
les
lods
notb
sub
or
leave
dec
xlat
xor
mov
xchg
sub
insl
or
mov
and
dec
jne
movsl
test
inc
pusha
mov
in
sbb
jecxz
adc
notb
stos
in
jecxz
dec
loopne
aaa
sub
add
and
dec
enter
cwtl
test
inc
mov
test
xchg
mov
scas
lret
adc
xchg
or
jge
pop
imul
idivl
jmp
mov
sbb
inc
jae
push
ljmp
cld
mov
jo
int3
cmp
dec
bound
cmp
test
mov
fistl
std
hlt
fwait
out
ret
outsb
add
cmp
pop
mov
mov
adc
sbb
jmp
aaa
je
mov
sbb
sti
xor
out
add
dec
mov
sbb
dec
mov
pusha
dec
ds
inc
loope
stos
jo
add
and
shrb
ret
mov
aad
cmp
dec
ret
push
and
cmpb
inc
mov
lahf
jle,pt
pop
js
shll
sub
imul
repz
pushf
stos
add
leave
cmp
scas
or
xchg
lcall
cltd
fimull
ret
jge
sub
jecxz
mov
mov
pop
stos
lods
out
mov
fisttpl
sbb
cld
mov
xor
mulb
cli
out
mov
scas
jno
int3
push
std
xchg
pop
xchg
xchg
or
popa
push
cld
xorw
pop
jno
sbb
sbb
lahf
movsl
push
lret
push
bound
popf
sbb
pop
mov
cs
sbb
jge
xchg
jmp
dec
into
pop
lret
or
xor
or
sbb
xlat
and
ljmp
cmp
out
cltd
push
mov
clc
jb
insl
pop
mov
jo
inc
adc
dec
movsl
push
jp
ljmp
pop
or
dec
iret
repnz
fidivs
mov
std
sbb
mov
jg
testl
xchg
in
out
ret
xchg
lret
mov
inc
into
cli
and
imul
sbb
dec
cs
popa
sti
in
sbb
pop
mov
jbe
scas
pushf
inc
sarb
mov
sub
in
push
lret
sahf
xor
data16
mov
xor
cli
test
shl
loop
mov
incb
mov
inc
jno
ret
push
xchg
mov
mov
fisubs
dec
inc
clc
inc
push
sbb
push
xchg
push
rcrl
add
mov
rorl
jl
add
out
pop
push
inc
mov
stos
push
lods
cmp
dec
adc
sub
mov
and
mov
outsb
inc
stos
stc
add
xchg
xchg
pop
lods
insl
or
adc
inc
inc
jo
sub
xor
push
scas
subb
mov
ljmp
inc
mov
cmc
lea
xchg
push
bound
daa
dec
fcoml
jns
aam
lcall
cmp
push
jmp
fwait
xor
mov
mov
into
push
mov
stos
mov
inc
or
sti
or
push
notl
cmp
shrb
mov
sbb
icebp
mov
cwtl
add
sahf
jge
cmpsb
jmp
out
inc
outsl
push
xchg
loopne
std
mov
xchg
lods
push
ja
push
jnp
stos
stos
stos
repz
ja
adcb
fisubs
stos
cs
outsl
push
push
ja
push
push
mov
popf
mov
push
std
jle
mov
dec
jne
or
shll
hlt
or
fcomps
sub
xchg
add
fldl
add
test
mov
push
adc
cmc
lret
pop
jle
cmp
add
mov
lcall
mov
push
sti
jbe
scas
jmp
stos
and
mulb
sbbl
mov
outsl
lahf
inc
push
outsl
test
fwait
sahf
cmp
sbb
jbe
xlat
scas
ljmp
pop
data16
xorb
sahf
pop
mov
mov
pop
mov
cmc
movsb
lds
test
mov
or
dec
addr16
les
jae
xor
xchg
adc
cmp
add
cld
inc
jb
std
lock
jb
in
dec
popa
jnp
test
lock
fdivs
fnstsw
push
fidivs
orl
jge
push
or
dec
into
adc
fsubrs
decl
lcall
dec
xor
icebp
jge
mov
mov
fnstenv
xlat
aam
rcll
mov
dec
stos
xchg
push
xor
sub
sahf
fsubl
cltd
cmc
es
adc
loopne
xchg
mov
daa
out
loopne
or
push
out
jae
cmp
jp
lods
mov
jmp
jbe
mov
cmp
pop
fisubs
sbb
jne
loop
movsl
gs
or
adc
repz
movsb
xchg
mov
into
xchg
stc
dec
and
sbb
and
mov
jle
fcomi
pop
pop
jle
sbb
mov
add
gs
aaa
pusha
jg
mov
fistpl
aad
mov
dec
and
movsl
inc
imul
lcall
xchg
dec
push
das
jmp
loope
xor
nop
and
push
cmpsb
adc
outsl
xchg
sbbb
pop
or
pop
dec
xchg
push
cld
lret
imul
rorl
data16
lret
fbstp
adc
arpl
roll
std
add
push
jbe
out
fucom
jno
xor
add
aad
lahf
cmp
out
push
loopne
push
shl
cmp
jne
rcll
jmp
fcomip
ljmp
or
sub
fs
and
pop
inc
in
mov
repz
jbe
bsf
pop
sub
jno
clc
out
adc
cmpsl
jnp
sarb
xchg
pusha
xor
out
iret
js
jnp
jno
mov
jl
test
lods
jp
scas
add
pop
add
add
call
loope
jl
leave
lahf
inc
pop
add
or
jno
inc
invd
je
push
testb
pop
into
jb
cmp
adc
dec
fidivrs
andl
jo
mov
sub
int
scas
mov
popa
sub
cmp
push
lock
pop
out
sbb
mov
mov
test
repz
pop
pop
sti
shrl
hlt
out
cmp
shl
arpl
test
pop
aam
add
out
cmp
out
xchg
jg
sub
scas
int3
out
test
scas
aas
xor
ja
fistpll
xchg
repnz
lret
addr16
dec
vpaddusw
dec
push
mov
dec
add
pushf
mov
push
addl
clc
cmp
addl
mov
xchg
or
pop
fistpl
push
cld
dec
outsb
maxps
mov
xor
sahf
add
jl
es
shr
movsl
add
push
popa
push
and
pop
mov
xor
push
insl
leave
popf
sti
pop
sub
sbb
sbb
cld
insl
mov
jae
sub
xorl
jae
push
bnd
ljmp
jg
movsb
jge
jae
scas
sub
mov
sbb
sub
and
imul
adc
pop
xor
shlb
cltd
pop
js
xchg
out
mov
adc
lds
push
adc
mov
les
clc
sbb
dec
xchg
mov
mov
or
std
stos
jmp
popf
std
dec
outsb
outsb
pop
jge
dec
pop
mov
es
mov
mov
adc
negb
sub
inc
lods
mov
pop
inc
inc
out
and
push
adc
push
out
js
enter
lret
xchg
mov
mov
pusha
push
dec
andb
dec
mov
repnz
js
sub
pop
xchg
int3
and
shlb
jg
pop
out
pop
push
mov
repnz
lahf
push
sarl
sub
cmp
aad
roll
mov
mov
pop
xor
shll
fincstp
xor
add
mov
cmp
mov
or
into
cmp
pop
xor
fsubrl
int3
push
inc
sub
inc
stos
js
gs
test
dec
loopne
ja
add
push
sbb
dec
inc
xor
mov
jbe
jbe
inc
jns
divl
repnz
jno
adc
pop
sub
insl
xchg
notb
xchg
divb
sbb
jge
ret
insb
stos
and
push
lret
iret
ss
pop
and
mov
outsb
mov
pop
subb
fdivl
jnp
xlat
cmp
cli
es
inc
lods
and
xchg
xchg
add
jle
pushf
aas
lret
cwtl
mov
cmc
dec
imul
pop
or
or
nop
addr16
jg
or
dec
xchg
inc
cmp
stc
mov
adc
push
sbb
jb
and
xor
insl
fldenv
in
gs
xor
mov
rcrb
mov
cmp
mov
movsl
pop
mov
sbb
loope
stos
stc
jo
mov
cmp
aaa
movsl
jp
in
or
insl
loop
pop
movsb
fbstp
cmc
cli
jge
popa
cltd
cmp
jge
dec
out
add
aas
jecxz
fisttpll
stc
repz
cld
cmp
iret
lcall
repz
xchg
mov
ret
das
not
ljmp
fbld
cmc
stc
ljmp
shr
lret
cmc
icebp
cmp
hlt
add
cmp
or
dec
sbb
test
inc
pop
inc
aam
sbb
lcall
xchg
aam
jne
lcall
mov
add
lcall
dec
xor
jecxz
jbe
lods
sbb
or
sub
add
imul
call
adc
ljmp
push
shll
and
mov
pop
jmp
std
and
das
mov
sbb
mov
in
js
jne
and
mov
cld
ret
popa
dec
pop
pop
push
cltd
aaa
mov
adc
pop
inc
loop
movsl
pushf
rcrb
pop
adc
adc
sbb
lcall
cmpsb
jp
cld
pop
or
pop
cmp
xor
xchg
adc
fisubs
sbb
push
pusha
hlt
fsubl
imul
sbb
sub
pop
and
mov
sbb
sbb
push
push
imul
ja
adc
sub
leave
js
imul
test
sahf
dec
movsb
sarl
xor
push
add
xlat
xor
cmp
pop
xor
jge
mov
mov
sub
fistl
outsl
cmp
mov
adc
in
ret
push
push
fsubrl
add
or
or
sbb
xorb
jno
aas
addl
xchg
xchg
movsl
adc
movsl
fchs
or
sub
arpl
mov
jle
jg
aaa
inc
cmp
imul
jo
mov
out
aaa
je
cmp
je
sti
push
adc
jg
test
pushf
sarb
rcll
sbb
add
ret
orl
jae
mov
imul
ja
jo
pop
jl
cmp
insb
loope
pop
movsl
sbb
outsb
repz
rolb
iret
or
ret
xor
dec
jb
cmpl
and
push
pop
sti
insb
or
mul
enter
mov
add
xor
es
and
or
xor
and
and
aaa
inc
outsb
push
hlt
pop
enter
or
aam
pop
mov
test
xor
jge
jns
jle
stc
fcompl
mov
and
mov
push
xor
cmp
fs
add
xchg
int3
fisubrl
enter
push
gs
cmp
mov
scas
jo
pop
insl
pop
js
ja
adc
mov
mov
mov
push
jg
outsl
dec
jns
fdivs
into
pop
pop
lcall
insb
xchg
nop
add
fidivrl
jae
sub
cmp
dec
imul
push
stos
in
mov
or
push
cmp
dec
xlat
loop
dec
push
pusha
jb
mov
ret
inc
add
cmp
and
xor
push
cld
adc
gs
sbb
mov
nopl
mov
mov
push
mov
dec
jge
adc
cmpsb
outsl
pushf
add
push
lods
outsb
lret
divl
shl
mov
icebp
insb
sahf
inc
mov
rol
push
out
fsubr
lea
and
leave
jge
rorb
je,pn
add
outsl
add
jecxz
jge
cmp
out
mov
iret
push
cmpsb
std
je
push
out
mov
loopne
inc
and
in
jae
add
jne
or
xchg
sbb
cld
insl
add
addl
shll
xorb
cmp
mov
inc
in
sbb
dec
push
push
pop
inc
rcrl
cmp
mov
aaa
clc
aam
mov
xchg
jl
pop
mov
jp
out
jl
mov
adc
jns
dec
rcl
shrl
xchg
xlat
mov
dec
mov
sbb
mov
shll
test
sbb
js
jge
push
inc
pop
cmp
and
shrb
dec
xchg
pusha
xchg
cmp
cwtl
jo
push
cmc
mov
decb
icebp
cmp
mov
adc
aas
cmc
lea
cmp
and
jnp
lods
jle
pushf
cld
mov
xlat
filds
mov
ret
in
sub
aad
imul
pop
cmp
lods
popf
lods
daa
dec
ljmp
mov
inc
maskmovq
testl
mov
mov
scas
mov
cmp
and
test
cmpsb
xor
fwait
mov
psubq
fnstsw
push
mov
dec
mov
sbb
push
pop
rcr
scas
pop
repz
dec
pop
xchg
dec
dec
test
sbb
js
aaa
or
mov
repz
jne
dec
pop
test
jmp
jp
sub
aas
scas
jmp
jg
jno
adc
or
in
pop
lahf
mov
arpl
les
sbb
jecxz
mov
aad
rorb
ja
mov
addb
adc
adc
xor
lods
jae
jns
iret
movsb
sub
mov
mov
in
fnsave
or
adcb
push
loop
sub
filds
sub
jnp
or
dec
cld
js
and
add
repz
mov
fsubr
sbb
mov
push
rclb
sahf
push
out
dec
mov
adc
xchg
sbb
pop
ja
repnz
insb
mov
into
aaa
mov
gs
rolb
shrb
mov
mov
bound
scas
mov
inc
inc
adc
aas
bnd
call
clc
jb
out
stos
test
jecxz
jae
pushf
int3
repz
cmc
fildl
mov
mov
push
int
jecxz
sbb
and
rolb
shll
dec
out
int3
pop
pop
lret
push
mov
ja
or
xchg
cwtl
adc
mov
jns
mov
mov
fstenv
rcr
mov
mov
jp
fistpl
add
adc
xchg
ficompl
jecxz
aam
cwtl
jbe
jne
inc
push
mov
sbb
jne
mov
nop
push
mov
xchg
jno
mov
xor
call
xor
fcompl
or
mov
push
mov
xor
iret
mov
imul
vmovlpd
lds
push
fdivrp
pop
fs
inc
es
xchg
xor
push
orl
jb
jg
xlat
xchg
mov
aam
gs
push
sbb
lahf
out
cs
iret
mov
mov
out
adc
loop
mov
or
jne
imul
insb
daa
cld
mov
jl
mov
in
in
push
in
ja
push
xchg
or
jp
imul
lea
jb
test
inc
outsb
inc
test
ja
mov
out
adcb
sbb
ret
or
pop
lret
xor
jge
mov
lods
lahf
or
icebp
push
xchg
lret
test
je
cmp
or
insb
jecxz
arpl
in
movsl
push
push
ret
scas
jp
outsb
lea
dec
ja
cmp
cltd
jle
mov
sahf
or
mov
pop
icebp
in
fists
sbb
mov
adc
push
out
jb
dec
int3
push
mov
cmpsl
in
dec
int3
or
mov
mov
lret
test
mov
pop
outsb
adc
inc
xlat
lret
push
lock
pushf
or
pop
add
jo
jmp
sub
cmp
xor
mov
in
js
jecxz
nop
lahf
push
enter
xchg
xchg
jl
movsl
pop
test
inc
jnp
repz
push
sub
pop
pop
loop
das
or
test
and
js
ret
jle
or
pop
or
and
test
scas
popf
xchg
stc
and
adc
fwait
aas
rcll
popa
imull
cltd
daa
subb
insl
push
xchg
and
aas
mov
sbb
enter
rcrb
aad
pop
fs
aad
jne
iret
std
jge
jae
hlt
inc
mov
pop
xchg
insl
clc
adc
into
mov
decl
sarb
xor
into
xor
or
int
xchg
adc
andps
push
pushf
sbb
idivl
out
xchg
and
dec
xchg
pop
inc
incl
push
inc
sub
je
jnp
cwtl
mov
pop
scas
sar
pop
add
jo
jne
test
xor
out
inc
out
ret
mov
test
fsubl
jns
inc
jecxz
lcall
ja
xchg
mov
pop
xor
hlt
lret
out
mov
arpl
andl
stos
jp
cmp
fs
pop
sub
dec
test
sbb
push
ds
mov
and
in
call
sbbb
stos
and
popa
bound
cs
fisubrl
xchg
push
mov
nop
fsubs
das
mov
fcoml
out
ret
mov
pop
xchg
mov
xchg
gs
into
add
icebp
gs
sub
push
loop
or
sub
sbb
or
xchg
std
cmp
int
fiadds
adc
adc
int3
jmp
sub
inc
or
adc
add
jp
cwtl
addr16
enter
pusha
fwait
loope
mov
rorb
in
arpl
test
jbe
inc
xchg
dec
xor
add
xchg
jge
dec
add
inc
idivl
icebp
test
cmc
data16
mov
xor
xchg
mov
mov
das
fadds
pop
lea
mov
aam
fsubs
lock
lock
mov
mov
inc
pop
popa
xchg
sbb
sub
or
jne
sub
sub
scas
mov
sbb
lods
xchg
inc
cmpsb
imul
rcr
shr
jno
daa
shlb
je
sub
adc
mov
dec
rolb
adc
mov
jno
sub
jmp
cmpsl
stos
jns
adc
negl
cmp
roll
incl
cwtl
jnp
jmp
out
cmp
in
jb
mov
iret
ds
call
lods
push
sbb
adc
leave
push
add
test
mov
out
mov
mov
adc
loope
loop
clc
fisubs
lret
in
scas
dec
xor
popf
mov
popf
sub
es
cmpsl
add
lock
imul
out
dec
xchg
pop
jecxz
and
cli
movsl
dec
or
negl
mov
out
ret
pop
xorl
or
clc
test
inc
jl
dec
mov
leave
inc
xlat
dec
rcrb
shlb
aaa
push
fsubl
and
imul
pop
daa
dec
loope
push
stos
adc
movsl
das
lret
mov
add
shrb
lret
xor
repz
push
jle
cli
push
pop
leave
ja
add
cwtl
call
les
rcrb
shr
jae
or
aad
in
push
push
roll
sbb
shrb
and
pushf
sahf
mov
jg
xchg
add
popa
mov
stos
ret
fbld
xorl
dec
bound
rol
lds
stos
mov
imul
and
xor
lret
xchg
cmpsb
in
pop
mov
jnp
inc
xor
adc
mov
stos
adc
sti
dec
adc
dec
iret
aaa
dec
pop
mov
xchg
mov
test
jg
adc
sbb
inc
int
sub
sahf
mov
inc
mov
mov
mov
loop
pop
xlat
scas
stc
push
mov
bsf
pop
filds
add
loopne
push
test
mov
or
pop
out
je
clc
add
ja
inc
mov
ret
inc
push
jl
scas
icebp
clc
jp
jl
pop
adc
sti
sbb
pop
dec
dec
sub
sti
mov
cli
imul
pop
call
out
adc
mov
out
pop
mov
test
pop
cmpb
cmpsb
scas
leave
addr16
loope
or
mov
xor
das
sub
mull
mov
das
add
std
jbe
shlb
addr16
out
mov
leave
dec
loop
sbb
andl
lods
mov
sbb
insl
fldenv
inc
cmp
mov
mov
dec
into
xor
jb
int3
gs
jmp
push
in
or
testl
adcl
jecxz
cmpsb
xlat
mov
outsb
idivl
cli
lcall
out
dec
adc
mov
push
test
cmp
xor
pusha
jmp
push
es
mov
inc
imul
jecxz
inc
add
jo
jl
mov
lds
mov
bound
add
outsb
fucomip
cs
mov
jp
scas
and
loopne
push
outsl
sbb
int3
fwait
pop
repnz
xchg
mov
enter
imul
aas
push
mov
dec
lret
adc
sbb
cld
lock
mov
xchg
fwait
mov
rcll
icebp
ret
add
and
popf
sub
repz
mov
push
pop
jb
and
add
dec
mov
repnz
sahf
push
xlat
xor
and
xchg
pop
jl
jecxz
les
cwtl
mov
jg
xlat
xor
mov
jne
jne
mov
mov
fists
xlat
lret
loop
sti
ss
mov
dec
pop
dec
mov
ja
jne
mov
in
sahf
push
repnz
cmpsb
out
xchg
fucomp
push
rolb
or
mov
mov
dec
pop
out
pop
sub
add
insb
add
xchg
mov
andb
rcl
sub
outsb
jp
out
clts
lret
movl
jbe
jecxz
dec
mov
or
pop
mov
add
insb
fadds
mov
mov
cmpsb
push
add
scas
cli
xor
cmp
dec
push
xor
or
pop
inc
fisttpll
and
paddsb
mov
and
xchg
xchg
clc
jg
jg
pop
xchg
aad
clc
sbb
pusha
nop
adc
and
mov
lods
dec
lods
and
xchg
dec
pop
adc
mov
dec
lcall
dec
lret
imul
sbb
outsl
jns
fdivrp
push
aad
cld
fcomip
cmp
stos
sti
jg
pop
cmp
mov
out
jns
repz
push
mov
add
addb
xor
mov
dec
sub
test
or
mov
imull
test
push
jg
push
jnp
and
leave
lret
add
dec
faddp
ljmp
push
mov
loop
dec
jge
repnz
add
mov
pop
pop
loopne
xchg
lock
cwtl
inc
shlb
adc
enter
push
dec
mov
fsubl
imul
push
pop
stos
push
adc
mov
xchg
lret
add
jp
cmp
push
loope,pt
fistps
test
sub
push
pop
push
out
inc
xor
arpl
ds
je
add
mov
push
cld
inc
inc
jecxz
mov
xlat
jnp
es
or
sub
out
pusha
jae,pt
push
in
and
divb
in
js
push
and
rcrb
cwtl
test
addr16
daa
arpl
cmpsl
sub
int3
pop
bound
xchg
xor
mov
call
add
push
cmpsb
mov
push
out
inc
pop
xchg
iret
jo
and
int
mov
mov
xchg
push
xchg
jne
out
insb
bound
neg
sub
popf
jl
hlt
mov
lea
icebp
xchg
pmaxub
cmpsl
or
stc
push
arpl
jl
jno
imul
mov
sti
mov
inc
je
stos
mov
shlb
xor
add
sbbl
jg
jge
mov
ja
jae
push
out
push
imul
mov
icebp
pop
and
push
lods
loopne
gs
pusha
adc
testl
adc
pop
scas
push
or
mov
stos
aaa
xor
xchg
cmp
movsb
aaa
rcrl
sub
nop
inc
cmp
out
test
pop
jo
sub
mov
sti
or
jns
aas
add
lds
jle
jle
ficoms
mov
mov
rol
stos
pop
aas
and
push
sbb
imul
mov
lahf
outsl
rcr
sbb
sahf
out
test
jns
fimuls
fsubrp
jne
pop
dec
rcl
inc
push
loope
jl
xor
xchg
sbb
imul
jp
xchg
cwtl
mov
dec
bound
xor
sub
inc
cmp
push
jp
ljmp
inc
mulb
inc
jmp
fsubp
stc
into
xchg
xor
push
je
in
pusha
out
pushl
pop
mov
int
jp
loopne
ret
repz
dec
xor
testl
cltd
bound
dec
mov
sahf
inc
hlt
out
ss
sub
cmp
call
push
push
jno
push
jbe
push
bound
orl
fcomp
cmpsb
push
xorl
stos
dec
mov
mov
ljmp
mov
jg
cmp
adc
cmovle
addr16
mov
in
mov
push
mov
xor
shr
jnp
mov
ljmp
mov
adc
add
std
pop
xor
sub
jg
leave
loope
decb
push
and
iret
mov
loopne
aam
adc
fldenv
xchg
cmp
inc
ds
data16
lods
xor
lret
push
dec
dec
or
ja
inc
xchg
mov
adc
fcomps
out
dec
mov
fnstcw
mov
push
mov
jmp
mov
imul
add
and
fsubrl
or
loope
adc
ljmp
cmpb
jp
push
dec
mov
adc
fisttpl
jae
dec
adc
mov
mov
mov
push
ljmp
mov
xchg
lock
jg
sbb
cmp
xchg
pop
stc
or
rorl
dec
push
cmpsl
fdivp
ffree
inc
pop
xchg
pop
xor
push
pop
insl
imul
cmpb
in
xbegin
pusha
filds
bound
jbe
sbb
daa
adc
orb
in
pop
and
push
xchg
jp
fnstcw
xor
pushf
in
push
xchg
push
sahf
clc
mov
dec
pop
mov
cwtl
mov
rep
stc
jne
fwait
adc
popf
add
pop
inc
aam
xor
nop
pop
addr16
jle
shll
test
subl
pop
mov
jns
std
mov
lcall
xchg
pushw
lcall
mov
cmc
mov
cmp
dec
sahf
mov
inc
jp
xor
push
push
out
icebp
ss
nop
push
pushf
xor
mov
mov
push
ret
lock
mov
mov
sub
lahf
jg
andl
push
cmp
lds
push
sbb
rorl
fldenv
mov
arpl
mov
jle
cmpsb
pop
xlat
pop
add
shlb
lcall
ljmp
xchg
cmpsl
jb
outsl
xor
jl
mov
inc
xchg
inc
stc
loope
in
fwait
sbb
add
je
popf
sub
xor
add
jns
cwtl
arpl
add
mov
scas
dec
jl
mov
dec
sbb
mov
lds
loope
sbb
or
mov
insb
dec
lods
das
cmp
mov
test
xor
aas
push
xchg
imul
cmp
adc
aad
scas
pop
sub
movsl
cli
shl
loopne
jnp
mov
ret
aas
mov
cmc
jle
sbb
sti
test
imul
cwtl
sub
jno
mov
mov
stos
lahf
jne
mov
negb
movsl
iret
mov
pop
test
outsb
lea
mov
or
dec
mov
adc
lahf
in
imul
push
sub
in
push
maskmovq
imull
add
aad
xor
sbb
pop
pop
out
or
push
insl
jl
lods
sarl
dec
dec
int
mov
jmp
xlat
push
bound
sbb
jne
mov
sbb
dec
jb
addr16
icebp
shll
fnstsw
cmp
inc
fidivl
into
and
push
push
testl
xchg
inc
mov
iret
jg
xchg
add
sahf
inc
int3
hlt
outsb
cwtl
popa
pop
cmp
fbld
inc
pop
iret
inc
mov
js
add
and
dec
imul
xchg
lock
aas
xchg
mov
pop
cmpsb
loope
ret
lock
je
sbb
and
hlt
pop
sub
pushf
add
les
arpl
icebp
cmp
inc
lods
pop
mov
movhps
fimuls
and
add
test
ds
push
outsl
insb
jns
jb
aam
cmp
je
fsubs
add
mov
hlt
sbb
pop
cmp
in
xor
lock
cmp
lahf
pop
xor
pop
add
mov
mov
pcmpgtw
sub
inc
sti
clc
rcl
rcr
add
mov
xchg
push
sbb
dec
xchg
and
nop
popf
into
call
mov
cs
repz
push
lret
lea
add
loope
inc
and
xor
fdiv
repnz
or
test
in
xor
or
insl
lahf
inc
pop
cmp
mov
jnp
idivl
ds
cmpsb
xlat
dec
ss
push
gs
fiadds
icebp
cli
repnz
scas
push
in
mov
in
addr16
or
movsl
sbb
mov
test
addr16
pop
stos
ficoml
arpl
cld
or
xor
repz
out
insb
test
fimuls
pusha
push
jo
shrb
mov
and
mov
aam
andl
fsubrp
stc
xor
lret
int
sarb
adc
pop
mov
roll
inc
sbb
dec
test
mov
aad
add
pop
test
out
sub
dec
mov
push
loop
add
and
push
inc
in
out
pop
mov
sahf
popa
int3
sub
lds
enter
push
lods
or
sub
movsl
loope
or
adc
dec
sbb
and
push
jmp
inc
call
sub
or
mov
mov
push
add
aaa
into
add
ljmp
inc
mov
push
outsl
add
cld
push
inc
push
pop
cmp
loopne
push
into
fsubs
cwtl
mov
aad
data16
sti
rcrb
cmc
js
dec
jbe
dec
jge
adc
inc
int3
mov
jge
jne
jne
jp
insb
subl
xchg
fiadds
shlb
shl
out
dec
and
sbb
ret
ret
fwait
stos
push
lcall
push
mov
sbb
mov
inc
dec
setne
mov
es
and
and
and
andb
fwait
test
xchg
sti
and
or
sub
jge
jnp
push
ret
push
ds
push
dec
dec
call
inc
in
mov
in
mov
call
in
xor
jae
xor
shlb
mov
test
xor
lea
push
repnz
inc
test
mov
push
jbe
daa
in
inc
push
mov
push
mov
lods
push
scas
mov
insl
sbb
sbb
cmc
sbb
and
add
nop
push
jle
mov
push
cli
cli
mov
or
push
insl
xchg
jle
pop
js
add
sub
push
inc
lods
xor
push
shld
stos
sub
or
fistpll
cld
adc
js
stc
out
xchg
int3
xor
test
rcrl
xchg
lea
idivb
mov
mov
ja
mov
loopne
cwtl
cmp
mov
push
mov
adc
scas
mov
sub
cmp
xor
adc
icebp
adc
insb
subl
pop
insl
fisubl
insl
adc
pop
lock
or
mov
loope
loop
fmul
cwtl
into
cltd
lea
or
in
mov
dec
push
int
lcall
push
addr16
jo
dec
xchg
nop
loopne
fdivl
xchg
cld
mov
cmp
pop
mov
sub
push
fimuls
incb
add
sub
outsb
xchg
cmp
push
xchg
movsl
stc
add
mov
mov
test
fistpl
lret
stos
rcrl
xor
call
aas
mov
xor
dec
filds
adc
xchg
rol
push
lcall
mov
dec
imull
push
push
lock
push
xchg
into
into
aam
idivl
dec
daa
mov
faddl
movsl
clc
call
fisubs
rcr
fdivrp
je
add
loope
mov
rcrb
mov
mov
push
inc
jno
je
inc
push
fistpl
dec
push
dec
mov
mov
icebp
cltd
dec
inc
out
fisubs
jne
jge
mov
adc
ficoml
sub
jl
xchg
or
push
adc
sub
outsl
out
jne
cltd
pushf
mov
loope
jne
leave
lea
leave
mov
and
mulb
xor
cmp
jg
clc
mov
sub
sbb
ret
sbb
push
mov
push
cmp
xchg
movb
dec
sub
ja
mov
add
mov
push
mov
test
in
jg
inc
aaa
inc
aaa
add
call
inc
adc
insb
or
orl
int3
lods
adc
js
ret
inc
mov
or
mov
xlat
adc
cmp
cmp
leave
or
pushf
cmp
test
jae
pushf
add
mov
aaa
mov
inc
mov
jecxz
and
jae
leave
mov
xor
jp
mov
sbb
ss
xchg
mov
outsl
es
dec
sbb
mov
pop
xchg
test
push
mov
add
mov
andb
xor
sbb
data16
jb
cmp
pop
mov
into
xlat
add
rol
cwtl
subl
jp
mov
lret
pop
in
mov
dec
cmp
dec
inc
inc
ja
in
inc
sti
pusha
pop
pop
xor
xchg
push
xchg
call
push
in
sub
jae
decb
adcl
scas
adc
sti
cwtl
sbbb
out
adc
nop
out
cmp
inc
push
mov
in
xlat
sbb
xchg
stc
or
jl
inc
mov
sub
sub
xor
ss
ret
and
outsb
mov
mov
adc
iret
leave
dec
lret
cmp
insl
dec
sbb
pop
mov
fmuls
repz
ss
fcomp
xor
iret
cmp
sti
je
pop
cmp
stc
pop
add
inc
sar
xchg
or
nop
cmpsb
cmp
xor
mov
int3
ret
mov
mov
push
adc
cmp
sub
xchg
adc
adc
aam
int3
cmp
mov
sub
or
jge
jo,pt
rcr
or
pop
mov
fimull
xchg
xchg
xchg
adc
clc
lahf
add
arpl
adc
jle
outsb
ficomps
les
mov
inc
adc
push
add
inc
das
xor
fs
into
dec
mov
adc
and
cmpsl
lods
sub
mov
mov
push
pop
ret
and
xchg
cld
in
push
inc
jae
leave
sbb
jne
xor
sub
pop
scas
int3
lods
jp
cmpb
ficompl
mov
or
xchg
adc
sbb
cs
push
ljmp
movsb
lcall
ss
or
jns
fs
outsb
popf
into
repz
test
pop
sahf
mov
ret
in
or
xchg
es
mov
pop
test
jb
jae
jp
stos
mov
inc
adc
mov
inc
jae
enter
clc
inc
cmpsb
mov
out
jbe
cmpsb
xchg
fisttps
nop
int3
pushf
jmp
test
adc
movsb
jne
push
aam
cwtl
mov
mov
mov
add
das
jno
dec
cwtl
lds
mov
punpckhdq
popa
aas
sar
cmp
sub
dec
in
sbb
xchg
jmp
insl
test
hlt
add
or
sub
lea
or
cmp
test
loope
in
ret
outsl
mov
sbb
mov
cmp
cmp
push
imul
cmpsl
test
push
cs
push
jl
dec
shll
in
out
test
ja
jbe
xchg
mov
js
pop
les
cmp
mov
or
push
cltd
imul
xchg
ja
out
stos
cmpsl
adc
loopne
mov
inc
or
jg
mov
jnp
jecxz
clc
sub
mov
imul
std
jno
fisttps
xchg
pop
stc
push
xor
test
outsl
gs
mov
ret
cli
addr16
out
jecxz
cli
out
into
jecxz
fs
leave
pop
add
cmp
popf
aas
xchg
xor
nop
scas
cmp
inc
dec
sub
mov
loope
sarb
std
mov
in
inc
js
mov
cwtl
dec
pop
sahf
xor
xchg
je
or
xor
cmp
cmp
mov
lret
incl
repnz
lock
jo
incb
je
adc
aad
jp
push
pop
pop
and
cmc
pop
and
in
sub
push
pop
scas
ret
in
in
push
jo
sub
add
lods
xchg
pop
flds
icebp
out
jnp
cmp
js
cmpl
clc
cmp
xchg
into
loop
jbe
sbb
mov
clc
fcmovnu
pop
fidivs
mov
sbb
cwtl
jnp
jmp
add
aas
pop
jg
nop
out
cmp
mov
insl
jns
mov
in
ja
mov
imul
jb
xor
sbb
lahf
add
and
pop
ja
cmp
and
rolb
dec
dec
cmp
insl
loop
xor
lds
mov
mov
rcrb
outsb
mov
jl
mov
sahf
mov
sbb
pushf
sub
adc
loope
subl
mov
and
pusha
cmp
sub
outsb
mov
test
js
shll
mov
andb
jle
es
out
nop
push
jecxz
push
subb
subb
or
jns
jmp
fildl
frstor
lods
mov
cmc
sub
inc
mov
sti
dec
mov
mov
popa
sahf
sub
das
clc
mov
mov
inc
pushf
mov
in
arpl
aas
mov
cli
mov
lret
pop
fdivs
push
outsb
lea
adc
cmovg
ret
notl
lods
sti
inc
call
loope
adc
jecxz
jae
in
jecxz
aas
xchg
inc
jo
lahf
shl
pop
sub
mov
stc
neg
icebp
cmp
jae
jnp
dec
incl
test
mov
push
ret
or
or
iret
das
jg
iret
sbbl
call
sbb
jg
lock
adc
lahf
xchg
fcompl
int
daa
xchg
aas
lahf
adc
mov
add
mov
push
xor
sub
mov
aaa
clc
pop
sbb
mov
mov
ja
mov
outsl
mov
cmp
mov
fldpi
in
xor
mov
stc
imull
cmpsl
icebp
jns
mov
iret
mov
jns
jo
or
insl
loope
mov
outsl
sbb
pop
popa
leave
mov
es
les
test
imul
xor
test
xchg
jecxz
lcall
in
rorl
mov
pop
jl
mov
mov
test
and
pushw
xor
mov
lcall
icebp
shlb
xchg
adcl
add
dec
xchg
mov
pop
dec
jl
int
inc
xor
jbe
mov
xor
jae
cmp
jbe
aam
js
bts
jp
lods
add
and
xor
jmp
inc
adc
push
mov
loop
mov
add
insb
push
call
enter
addr16
push
push
icebp
cmc
enter
push
or
adc
sub
push
push
es
jp
ficomps
popa
pop
mov
pop
push
sbb
out
bound
xchg
cltd
repz
mov
rcl
test
adc
scas
dec
movl
iret
movsl
test
enter
xchg
sarb
push
ljmp
push
sub
mov
mov
inc
jge
das
out
les
dec
mov
dec
cmp
jne
jp
jo
lret
rolb
cmovp
sub
enter
sub
push
jg
fs
cmpsb
cmc
rcrb
xlat
xor
inc
cltd
mov
xor
je
push
dec
xchg
and
inc
adcb
adc
xchg
repnz
mov
add
dec
popa
adc
roll
inc
sub
mov
ret
dec
mov
mov
push
inc
jl
sbb
jle
aaa
cmpl
add
mov
sahf
and
mov
pop
cs
lds
push
push
es
fsubrp
mov
sbb
sti
jo
jmp
ret
adc
or
lret
push
jge
push
stos
xor
xor
mov
push
sub
sbb
mov
fidivl
xchg
addr16
int
ljmp
and
dec
and
mov
mov
adc
mov
adc
jo
cwtl
test
shrb
sub
mov
rorb
stos
xchg
scas
mov
lret
inc
xlat
mov
sub
daa
jae
icebp
xchg
lea
xchg
sbb
bound
fmuls
cltd
je
pop
inc
stos
lret
jbe
sbb
dec
inc
sub
scas
xchg
pusha
js
sub
dec
push
add
cmp
jns
or
imul
jp
sub
sub
or
mov
mov
lcall
movsb
popf
push
fimuls
mov
pusha
pop
jmp
lahf
hlt
jl
dec
lahf
fidivrs
repnz
and
fstps
or
cltd
rolb
inc
and
cmp
movsl
ret
out
sbb
xor
dec
call
cmpsb
movsb
or
push
push
adc
inc
pop
mov
cmc
sti
lea
pop
add
std
fiadds
dec
out
das
and
mov
and
mov
ficoml
out
fs
icebp
xlat
cmpsl
je
icebp
mov
sbb
mov
mov
sub
jecxz
inc
or
shl
mov
push
or
or
sbb
cs
adcl
push
lds
dec
sahf
xchg
push
sub
rcrl
dec
fs
in
jmp
in
addl
inc
mov
mov
inc
jbe
lret
insl
adc
xlat
lods
and
enter
pop
test
cmc
xor
sbbl
ss
mov
imul
jp
inc
mov
lret
mov
inc
scas
xor
ret
fwait
lock
jge
jne
dec
imul
in
std
add
cs
fs
stos
divb
dec
pop
lahf
stc
insb
adc
jbe
xlat
daa
mov
popa
mov
pusha
sarb
repnz
and
jo
inc
dec
jb
imul
add
fimuls
ret
shlb
popa
inc
out
loop
mov
jmp
lock
decl
popa
inc
loop
cmpl
rorb
das
orb
addr16
lcall
xor
movsl
xor
int
mov
jo
popf
jns
sub
or
lods
jmp
out
test
xchg
pop
cmp
xchg
lea
fs
aam
leave
daa
xchg
cmpsb
cs
pop
jbe
cmpsl
and
dec
or
dec
adc
sub
in
pop
xor
dec
or
fcmovnbe
pop
pop
scas
sub
stc
cmp
add
dec
fld
jecxz
ret
je
and
inc
aas
sahf
mov
push
loope
iret
fstl
cmpsb
mov
repnz
jl
cltd
sbb
jl
mov
and
lock
aam
int3
and
sbb
sbb
cmp
xor
test
inc
add
or
and
sti
mov
addb
or
xor
push
scas
daa
sbb
jle
xchg
mov
cmp
mov
fsubrl
into
aaa
fsubr
fimuls
fsubrl
loopne
es
mov
add
jle
into
jl
fadd
popf
insl
fdivrl
int3
popf
xor
jmp
cld
inc
xchg
add
or
fildll
jmp
dec
xor
xchg
or
xchg
pop
scas
popa
lcall
pop
es
or
mov
jmp
and
inc
jle
or
add
stc
les
inc
fcomip
sbb
xchg
pop
dec
jg
pop
inc
sti
icebp
es
jl
inc
ret
aas
or
rcr
add
sbbb
lods
ret
xor
pop
or
add
sbb
stos
fsubs
rcrb
sbb
sar
lods
bound
imul
pop
xor
std
and
pop
shlb
mov
icebp
ret
push
loopne
add
mov
lahf
xchg
mov
push
lcall
aad
ja
inc
mov
icebp
push
fisttps
aas
gs
nop
cmp
cltd
loopne
jns
push
enter
lcall
test
inc
leave
aad
test
sbb
mov
fistl
daa
loop
mov
mov
mov
jnp
stos
ss
or
mov
pop
clc
lret
jle
push
sub
adc
repz
mov
test
icebp
pop
sub
or
inc
push
movsl
push
testb
add
push
or
dec
sub
fldenv
mov
sbb
xor
xacquire
fidivrl
pop
je
iret
pop
lret
xchg
jecxz
stos
rclb
or
sub
inc
sar
fcmovnu
inc
bswap
divl
or
or
inc
sbb
mov
test
xlat
add
pop
mov
or
repz
test
cmp
adcl
mov
rcl
push
jmp
pop
and
nop
ljmp
imul
ja
xlat
pop
sub
or
and
popf
sub
lret
xchg
push
data16
lods
and
push
scas
shr
shl
xchg
test
addr16
repz
xchg
clc
push
xor
inc
ret
out
push
push
mov
jnp
insb
lds
lods
lret
mov
mov
daa
pop
push
push
or
test
mov
cmc
lret
push
xchg
mov
jecxz
shr
jns
imul
mov
std
lds
stc
push
sbb
iret
rcll
push
jb
push
mov
dec
xor
fnsave
and
mov
les
hlt
ja
xor
mov
xchg
arpl
adc
jns
mov
mov
in
push
sub
out
scas
xor
fxch
inc
sbb
lcall
lock
addl
rolb
push
pop
add
sub
negl
add
and
andb
or
push
sub
pop
js
leave
or
lods
xchg
ds
in
sar
jl
mov
cld
add
shr
pop
aas
gs
out
jmp
imulb
imul
inc
imul
mov
fistpll
cld
inc
pop
inc
xor
popa
insl
mov
push
movsb
inc
jg
xchg
cli
mov
dec
push
mov
inc
pop
jns
sub
dec
mov
clc
std
fwait
xor
push
and
insl
mov
jns
xor
mov
sarl
outsl
lcall
lods
sub
lahf
aam
movsl
sub
pop
int3
clc
pop
lods
stc
shrb
das
rcl
das
ljmp
push
and
loop
dec
xchg
push
or
mov
or
cmpsb
test
mov
inc
push
xchg
fimull
leave
je
mov
shll
lret
ja
xor
test
and
int
push
dec
inc
push
inc
pop
frstor
xor
mov
js
insb
xor
inc
movsb
test
jae
ret
mov
push
add
push
das
xchg
xor
sbb
push
sar
lcall
fsub
aad
inc
ficoms
imul
lds
stc
mov
scas
pop
or
inc
cwtl
cltd
dec
lcall
sbb
pop
mov
shrl
fwait
xor
cmpl
sub
dec
in
xor
or
push
gs
mov
push
out
jbe
push
addl
out
and
xlat
popa
jle
inc
in
jg
fs
ss
in
push
mov
push
and
or
mov
test
xlat
pop
popa
or
aas
jo
and
lods
in
inc
xchg
movsl
imul
adcl
in
lods
das
push
push
mov
xor
fnstenv
and
push
insb
xchg
or
sub
ljmp
cltd
jge
or
int
xchg
xchg
cwtl
int
repz
sbb
sub
or
iret
jnp
idivl
mov
jg
pusha
sbb
mov
aad
in
fcmovu
sbb
out
cs
sti
push
dec
sti
or
jg
ds
cmp
jle
pop
cmpsl
or
cmpsb
pop
scas
fwait
push
in
cmpl
test
pop
stos
add
andb
inc
cs
scas
cmpsb
dec
sbbl
aaa
aaa
jb
adc
aad
orb
jg
loop
lock
jle
andps
cld
jo
les
pop
test
lds
jae
dec
push
stos
shlb
mov
shrb
aaa
es
inc
mov
push
or
dec
das
push
arpl
subl
mov
loop
call
clc
dec
int3
std
xchg
cmp
std
fidivl
xor
sti
and
inc
dec
scas
mov
pop
mov
add
inc
inc
fwait
push
mov
xor
repz
rclb
jnp
or
push
fildll
push
cmpsl
cmpb
into
jg
and
add
jge
mov
imul
lods
adcl
jg
lahf
hlt
fstpt
xor
int
xchg
out
stc
ds
mov
hlt
pop
sahf
repnz
cli
xchg
sub
sub
pop
dec
cmp
in
jmp
jae
pop
pushf
mov
out
iret
mov
xlat
fmul
movsb
sub
push
lret
scas
lret
scas
dec
jns
movsl
jl
push
insl
stc
push
popf
and
call
or
fidivl
fisttpll
fbstp
out
jnp
les
inc
push
sbb
jle
sbb
dec
leave
fadd
push
into
sbb
aas
popa
xchg
push
fisubs
stos
push
push
jne
pushf
adc
sub
sahf
stos
fsubrl
into
jne
leave
mov
pop
cltd
or
sub
pop
lock
ljmp
lea
xchg
daa
sbb
test
shrl
mov
xchg
sbb
int3
jecxz
fsubrs
shl
outsl
xchg
into
test
stc
stc
push
sar
das
dec
jl
jmp
mov
gs
add
push
xorb
inc
test
adc
mov
mov
nop
mov
xchg
sbb
mov
cmp
pop
cmp
shrl
cmp
jne
cwtl
xlat
ret
dec
mov
jmp
ret
icebp
mov
mov
mov
repz
shrl
inc
js
cmp
pop
iret
rcl
adc
mov
loop
sub
xlat
pop
es
jns
jp
push
push
stos
and
addl
loope
aaa
or
mov
ss
push
mov
clc
and
loop
out
inc
movsl
aaa
cmpl
cwtl
push
out
movsb
test
push
pop
rcrb
notb
xor
xor
aam
add
stos
in
call
leave
sbb
xchg
mov
push
cmpsl
inc
loope
mov
in
cmp
imul
xorb
lret
push
and
fsubl
xchg
adc
push
xchg
pusha
and
mov
loope
cmp
pop
sbb
cmp
negb
mov
imul
daa
aam
in
test
xchg
mov
mov
dec
out
pop
push
loopne
in
nop
mov
ret
pop
rcrb
in
adc
xchg
sahf
call
arpl
ds
je
cs
xor
sub
das
pop
push
jne
fistl
mov
add
sbb
add
dec
xlat
imul
inc
rorb
flds
push
add
ret
or
call
iret
insl
test
sbb
fwait
aaa
add
mov
jl
lahf
pop
inc
cli
scas
stos
adc
notl
gs
pop
aad
fbld
aad
lods
add
leave
out
call
mov
repnz
xor
je
mov
sti
add
sbbb
or
sub
mov
sbb
mov
loope
cld
out
push
jp
mov
and
mov
mov
xor
lret
daa
aam
and
clc
jg
std
das
cwtl
lods
add
repz
pop
mov
jg
test
sbbl
jae
push
popf
add
xor
adc
lret
jmp
xchg
mov
pop
pop
pop
out
insl
dec
insl
lds
arpl
or
inc
xor
movsb
adc
sbb
mov
dec
ds
pop
clc
sub
dec
push
cmp
sub
and
call
repnz
cmpb
aam
pop
iret
xorl
xchg
push
mov
ficoms
into
cwtl
pop
imul
or
stos
pop
cmp
arpl
or
jb
fsubrs
sub
ja
arpl
push
cmp
aam
cmc
repnz
sar
mov
sahf
mov
and
sbb
and
repnz
cmp
rcrb
inc
pop
sbb
inc
sbb
cwtl
xchg
inc
jecxz
cld
std
xchg
call
shrb
fld
cmpsb
aam
xchg
popa
or
cwtl
jp
adc
bnd
frstor
lea
dec
sub
or
out
stos
mov
cmp
aam
movsb
ret
fs
push
dec
lcall
fldt
xor
add
lods
cwtl
mov
xchg
mov
filds
cmp
jne
inc
icebp
pop
scas
imul
icebp
jecxz
push
jno
inc
addr16
rorb
lcall
mov
lds
xchg
sahf
out
xchg
lds
mov
cmp
incl
mov
test
outsl
dec
sbb
loope
addl
sarb
push
das
sahf
in
push
cmp
int3
add
inc
aam
push
call
mov
mov
stc
sbb
or
gs
push
iret
mov
fcomi
cld
lahf
sub
push
adc
mov
push
and
sar
mov
and
jg
sar
loopne
mov
inc
inc
mov
pop
inc
andl
adc
or
add
movsb
lahf
out
xchg
push
lahf
mov
push
mov
push
pop
add
push
mov
test
add
cld
mov
stos
xchg
repnz
in
sbbb
adc
or
lahf
rclb
mov
mov
and
dec
cmpsb
sahf
pop
mov
push
out
subb
mov
adc
inc
outsl
fcoml
enter
cmp
inc
push
pop
cs
push
std
pop
mov
and
mov
mov
push
and
test
sti
sar
ja
pop
lcall
cmc
inc
lock
cmc
mov
ficoms
call
mov
jecxz
adc
pop
imul
pop
test
aaa
or
mov
push
decl
int
xor
in
out
rol
lea
imul
popa
sbb
dec
pop
push
mov
mov
stos
push
icebp
inc
push
xchg
into
mov
fiadds
gs
pop
jg
jl
je
push
sbb
pop
mov
adcl
xchg
mov
outsb
cmp
ljmp
mov
ret
shl
sub
inc
jae
popf
or
insl
andl
dec
inc
mov
jge
ret
fbld
mov
dec
jg
rolb
movsl
cltd
into
out
andb
xor
jae
cmp
test
mov
cwtl
pop
xlat
sti
hlt
push
sbb
sbb
iret
ljmp
mov
outsl
sahf
fs
mov
or
adc
jge
mov
stos
fxch
jmp
addl
push
icebp
cmp
scas
pushf
mov
push
jo
push
mov
and
int
fdivrs
add
call
pop
adc
inc
mov
jno
movsl
loopew
bound
ficoml
fucomp
hlt
nop
adc
call
add
xchg
cli
sbb
adc
js
jno
insb
xorb
popa
shlb
idivl
outsl
addb
or
aas
ds
insl
insb
lds
dec
push
gs
jbe
rcr
loopne
arpl
xchg
xchg
nop
lods
cmpsl
clc
sahf
lods
mov
xor
mov
in
cwtl
je
adc
pushl
or
jge
das
repz
pushf
fidivl
dec
mov
fldenv
cmpsl
dec
sti
rcll
aam
cmp
xchg
sub
inc
or
pop
jmp
rcl
mov
test
cmpsb
lock
outsl
push
push
pop
adc
sbb
nop
mov
ss
sbb
out
shll
int
add
cmpsl
aam
inc
dec
push
sub
pop
mov
jno
rol
mov
gs
cmp
xchg
lock
jbe
push
cltd
sub
fwait
push
cwtl
inc
dec
pop
lcall
fsubl
dec
pop
cld
adc
loope
in
test
in
sub
jo
cmp
mov
lret
daa
sti
fwait
and
jmp
push
shlb
ret
lods
sahf
jne
inc
test
pop
jle
xchg
lret
orl
dec
outsl
loope
mov
decl
je
jno
cwtl
mov
js
mov
stos
mov
dec
leave
mov
outsb
xchg
xchg
adc
es
in
fs
or
cmpsb
cmc
adc
mov
pop
movsl
jg
add
fmull
jg
jae
xor
fcmovu
mull
sub
jne
mov
mov
or
stc
push
into
in
jp
lock
scas
out
inc
mov
inc
push
cli
or
dec
cld
out
cmp
push
xchg
lods
fstps
lcall
in
iret
lret
mov
mov
jle
sub
pusha
adc
sub
xchg
dec
and
les
std
pop
hlt
lcall
stc
ljmp
movsb
mov
int
mov
push
mul
leave
mov
jmp
jnp
dec
inc
loopne
lcall
or
add
cmp
fmull
insl
rorb
or
sets
jno
jne
dec
or
aam
sarl
sub
dec
inc
pusha
fstps
gs
xchg
popa
or
mov
dec
mov
inc
shrl
popf
shll
into
add
mov
imul
je
sub
and
orl
sub
mov
es
cmp
clc
in
cmp
mov
adc
outsl
imul
shll
ss
jge
pop
pop
mov
decl
push
ret
pop
fisubrs
nop
lock
sbb
push
arpl
xchg
outsb
sbb
push
jp
adc
pop
and
inc
push
xorb
lahf
shl
xor
lock
arpl
mov
jns
cmp
inc
in
dec
push
mov
jp
add
mov
ret
pop
jp
hlt
pop
adc
mov
mov
or
lcall
shlb
out
rcll
mov
mov
cmp
dec
stc
popf
xchg
cmpsb
add
shll
mov
mov
jo
mov
pop
xor
sub
movsb
xchg
imul
add
mov
fwait
and
mov
das
je
fwait
rcll
mov
inc
in
in
lock
pop
jl
sub
in
mov
adc
adc
xor
or
pop
rorl
or
mov
outsl
sahf
cmp
iret
ljmp
jns
imul
sbb
jnp
or
jae
ror
cmpsl
cmp
and
fcom
in
dec
pop
gs
outsl
pop
xchg
cmp
cmpb
cmp
int
push
push
cmp
mov
stc
adc
lret
out
icebp
clc
mov
add
cmpb
adc
popa
cmp
aam
icebp
or
sbb
lods
ds
adc
jae
jb
icebp
or
shrl
xchg
or
cwtl
ret
push
inc
sub
test
adc
in
pusha
inc
fbld
xchg
ret
dec
out
push
insl
add
dec
aas
add
nop
ficoms
dec
dec
cmp
mov
sub
pop
mov
mov
daa
or
test
add
push
leave
adc
cmc
in
cmp
and
push
pop
xor
mov
bound
sbb
sahf
jp
mov
sbb
loopne
ds
inc
lcall
jmp
mov
movsb
jbe
xchg
outsl
shrl
mov
addr16
fcoml
shl
aaa
daa
dec
push
dec
mov
jnp
jbe
aas
lods
shll
mov
jno
in
xchg
scas
lahf
leave
shll
fcompl
cmp
sarl
adc
movl
pushf
les
jg
cmp
rorb
push
sbb
mov
xchg
pop
outsb
mov
aaa
fldt
les
imul
ja
arpl
cmpb
xor
jg
cmp
sti
add
mov
push
call
add
push
xchg
sub
daa
pushf
out
rcrl
daa
cli
jnp
cmp
and
lret
mov
fs
adc
outsb
xor
xchg
insb
in
add
jecxz
out
xorl
xor
sbb
inc
adc
push
cmp
loope
mov
outsl
cmp
imull
pop
push
fwait
push
ds
lock
test
push
ss
jecxz
lods
nop
aad
popa
jnp
into
int
push
xor
jmp
cmp
cltd
jb
or
cmp
push
movsl
add
and
in
mov
notb
cmp
xor
test
xchg
shll
pop
jb
ret
mov
scas
inc
pop
pop
divb
ss
ja
aam
popf
andb
and
mov
sbb
mov
jg
fnsave
movsb
sub
outsl
jle
mov
xor
aad
xorl
xchg
sbb
sub
in
in
test
xchg
pop
pop
leave
rcll
sub
les
popa
inc
mov
cmpsl
mov
mov
stc
insl
cmp
in
pop
jmp
lret
push
mov
and
xchg
mov
cmp
cmp
clc
adc
jg
add
adc
jg
mov
push
shrb
scas
xor
ds
push
cld
adc
lret
clc
repz
mov
xchg
or
xor
mov
ret
fwait
push
jne
andb
cmpsb
and
shrb
movsl
popf
cmp
in
sbb
mov
scas
popa
add
lods
fdivs
ret
sti
out
lret
add
inc
loop
inc
sub
outsl
dec
and
mov
push
sbb
fsubl
test
clc
test
xchg
xchg
jl
orb
out
push
rorl
clc
sub
add
pop
adc
lea
jmp
je
push
xor
mov
movsb
fstl
das
sub
out
xchg
lods
shrl
mov
call
or
and
mov
xlat
sbbl
inc
sbb
adcl
add
std
xor
inc
leave
das
hlt
or
push
les
mov
push
into
mov
adc
les
mov
push
push
dec
and
call
jg
lods
in
sbb
adc
jae
orb
sbb
jae
mov
mov
std
orb
sbb
hlt
cld
pop
xchg
arpl
sbbb
pop
mov
sub
or
shlb
pop
xchg
sbb
sti
adc
into
or
repz
sub
jp
fmuls
add
dec
insl
add
and
ja
mov
pop
fisttps
into
add
test
xchg
xchg
popf
pop
inc
adc
dec
mov
xlat
pop
test
adc
xor
dec
outsb
adc
pop
test
and
mov
loop
rolb
jp
cmp
call
inc
mov
scas
fmull
add
int3
xlat
movl
pop
fsubr
lea
icebp
push
adc
inc
or
imul
aam
pop
cltd
test
addl
jl
mov
imull
fnstenv
hlt
inc
stc
notl
lds
fistl
clc
xlat
xor
lret
call
jb
xchg
or
jmp
stos
push
popa
mov
pop
adc
push
cmpsl
lret
xor
mov
or
adc
mov
adc
and
add
stc
mov
das
lahf
pop
sbb
push
sub
cmp
xor
push
or
cmp
mov
nop
loop
imull
leave
mov
mov
sub
jae
mov
into
push
push
jb
aaa
bound
dec
jae
pop
ja
and
jo
lock
mov
test
fidivl
js
or
xchg
cmp
pushf
in
jge
mov
stos
loop
cmp
ja
sub
push
pop
adc
pop
xchg
fisttpl
jmp
cld
inc
jbe
scas
subb
sbb
into
or
shr
popa
mov
outsb
mov
cmpsl
out
int3
je
and
push
push
sbb
mov
inc
jmp
or
jle
and
mov
int3
cmp
inc
enter
shlb
push
out
into
and
and
js
cmpsb
rorb
mov
inc
jg
popf
lea
lret
mov
push
enter
sub
fld
pop
or
clc
mov
push
dec
inc
lds
sbb
dec
add
xchg
push
mov
xchg
sub
js
xor
inc
test
hlt
icebp
out
lret
repnz
out
xchg
jno
adc
pop
lea
test
push
jo
orb
mov
test
pop
aas
cld
outsb
popa
lods
in
mov
push
fsubr
into
jne
loopne
loop
fldt
xlat
sub
mov
mov
and
popf
das
fdivrl
in
xor
and
das
test
andl
mov
fsts
stos
push
mov
or
ficompl
jmp
inc
adc
lret
fmul
in
out
xor
jle
loopne
jl
xor
pushf
sub
sbb
xchg
sub
arpl
movsl
repz
stc
pop
cmp
xchg
push
or
xor
int
stos
data16
and
insb
xor
xor
into
inc
xchg
mov
call
ret
and
mov
cmp
pusha
xor
mov
ss
sbb
xchg
and
mov
add
mov
and
jge
sti
xchg
jb
lea
push
ja
outsl
mov
clc
sbb
lods
scas
push
out
sbb
pop
xor
ret
pop
test
repz
je
jmp
hlt
jns
mov
xchg
xor
test
pop
xor
pop
stc
sub
adc
mov
push
jb
push
mov
cmpsl
pop
cwtl
mov
mov
add
sbb
push
mov
push
push
mov
dec
aas
sub
lods
cltd
jl
fistl
jbe
xchg
push
push
stos
mov
adc
xor
inc
push
lea
es
outsl
adc
push
sti
jmp
jle
jae
into
lret
push
in
fistps
int3
push
out
pusha
mov
flds
xchg
dec
pop
mov
cli
sub
cwtl
or
pop
clc
dec
leave
inc
sbb
xor
outsl
ss
sbb
mov
das
xchg
movswl
into
ror
mov
nop
pop
bnd
out
int3
add
inc
jle
repnz
data16
ret
aam
xchg
add
adc
ret
mov
sub
jb
xchg
fsin
mov
fwait
adc
mov
cmpsl
mov
push
ret
xchg
lods
adc
in
xor
mov
movsb
and
jmp
mov
test
jmp
inc
or
adc
add
push
push
sti
and
push
pop
fld
push
and
pusha
test
mov
aas
xor
xorb
pop
add
add
push
rclb
orb
fistpll
or
out
or
in
das
adc
push
or
add
arpl
and
rol
jns
cmp
mov
dec
mov
fmul
popf
pop
mov
mov
push
sbb
add
sahf
cltd
sti
adc
popf
ja
mov
adc
mov
pusha
dec
jg
push
enter
out
push
mov
in
addb
cmpsl
jne
sbb
and
sbb
nop
ja
enter
femms
xor
cmpsb
nop
mov
pop
push
lds
popa
cs
mov
jle
sub
push
test
push
and
fwait
sbb
inc
mov
lcall
loop
insb
mov
mov
dec
mov
test
sbb
push
jg
mov
dec
sbb
jbe,pt
flds
pop
aas
loope
leave
sbb
leave
pmulhw
jge
outsl
loope
lret
cmp
mov
xchg
dec
cmp
or
test
shll
push
cmp
push
push
cmp
mov
sub
std
jle
xchg
and
mov
into
mov
mov
std
sarl
cmp
add
decb
mov
pop
jae
sarb
sub
icebp
cwtl
mov
insb
ret
xor
out
movsb
mov
aad
popf
rorl
je
push
popf
testl
mov
filds
insl
es
je
mov
add
std
jns
faddl
mov
or
mov
jg
addr16
pop
subl
push
aas
pop
and
dec
push
lods
mov
push
ret
test
fimull
xor
shlb
sub
sti
pop
jge
mov
insb
enter
lds
cltd
lds
mov
cmc
ret
mov
bound
fs
cmpsb
pop
sbb
xor
cwtl
scas
inc
cli
shrb
fcomp
dec
mov
cli
pop
mov
sub
std
xchg
pop
fildl
inc
adc
pushl
dec
jl
jne
mov
sbb
fildl
std
cmpsl
je
inc
out
xchg
loop
cwtl
daa
lret
push
in
jbe
cld
sub
jecxz
stos
push
push
lcall
cld
push
or
jnp
mov
add
sub
shlb
mov
std
push
ljmp
inc
nop
bound
cmp
lcall
sbb
and
repz
rcrl
push
adcl
sub
xchg
xlat
fldcw
mov
pushl
cmp
movsl
lds
xchg
scas
cmp
inc
add
pop
jne
lret
xor
mov
pop
mov
pop
push
mov
inc
nop
mov
dec
pushf
pop
int3
mov
jle
and
mov
push
xor
or
fsub
sbb
push
daa
xchg
xlat
jno
mov
test
movl
push
ljmp
sti
orb
das
jo
inc
cmp
cmove
dec
push
call
push
loopne
pop
push
pushf
or
jecxz
lods
in
mov
pop
mov
cli
shrl
mov
push
in
pop
imul
mov
dec
sbb
and
sub
jl
push
push
adc
orl
jno
xchg
incb
adc
pop
hlt
mov
int3
clc
std
push
stc
cmp
pop
inc
jno,pt
rcr
mov
mov
lahf
mov
adc
cmpsl
out
mov
xchg
scas
or
sbb
pop
testb
in
mov
hlt
stc
pop
and
xchg
fwait
mov
jecxz
mov
sub
lahf
ja
cwtl
pop
fstpt
push
jne
xorb
int3
je
inc
and
sub
jmp
sub
sub
pop
shl
xchg
add
aas
rcl
test
fdivl
rorl
shlb
pop
xor
dec
cli
pop
mov
sub
dec
mov
pop
pushf
adc
ret
sub
lret
mov
clc
je
imul
bound
stos
sbb
inc
mov
rcll
pop
sub
ficomps
ss
loope
push
mov
push
push
cmpsl
inc
add
jmp
inc
sbb
lea
rorb
shll
or
inc
inc
ficoml
es
xchg
lret
sbb
inc
sub
add
jo
mov
cli
or
dec
sbb
jp
test
movsl
mov
adc
cmc
jns
stos
in
adc
into
lods
ljmp
jp
mov
jle
in
sahf
mov
fneni(8087
cld
push
scas
ficomps
inc
jmp
mov
xchg
bound
add
lds
test
mov
pop
stos
lret
fsts
mov
fisubs
pop
or
mov
ret
mov
inc
out
xlat
mov
pop
mov
lret
and
imul
sbb
je
push
cltd
jge
jo
hlt
ljmp
or
scas
mov
stos
adc
into
push
dec
testb
mov
mov
gs
lea
loopne
sbb
cmp
loope
icebp
pop
mov
inc
ret
and
lahf
test
cmpl
mov
mov
cs
and
mov
and
movb
les
fwait
dec
test
int
cwtl
into
mov
sub
pushf
push
mov
mov
fdivrs
popf
adc
scas
xchg
push
sub
push
adc
mov
or
cs
push
mov
xchg
fistpl
mov
pop
or
and
sar
adc
fcmovnu
add
mov
push
call
cmp
rolb
sbb
dec
je
adc
lds
add
pop
imul
mov
jb
push
push
bound
cmp
stos
mov
mov
push
push
inc
mov
sub
aam
and
arpl
cmpsb
cs
iret
pop
jno
in
daa
insl
popf
pop
fcompl
inc
lcall
and
xor
push
test
test
test
test
stos
add
stos
sub
js
mov
cmp
push
icebp
lods
jp
xor
mull
shrl
pop
lods
dec
bound
lret
std
je
mov
add
cmp
inc
xchg
out
andl
adc
in
loope
aad
cmc
and
dec
pop
je
outsl
int
cli
iret
es
xor
adc
lahf
push
inc
into
cmp
add
or
sbb
repz
or
sarb
lcall
js
popa
jbe
xchg
adcb
int
push
movsb
push
push
movsb
stos
mov
mov
lcall
divl
inc
mov
mov
push
cld
sbb
mov
lock
mov
jnp
fsubrl
cld
dec
popaw
lods
xchg
pop
sub
mov
push
cmp
xlat
pop
repnz
sbb
mov
insb
mov
dec
pop
popf
xor
cs
jecxz
sub
cmp
popf
cmp
inc
push
sti
jno
pop
jno
xor
and
dec
data16
aad
les
mov
xor
or
ret
pop
adc
cmp
dec
add
loop
imul
arpl
ret
repz
incb
adc
stos
ret
xor
hlt
das
xor
cld
xorb
imulb
fsubr
adc
fstl
sub
adc
out
dec
addl
outsb
into
mov
xchg
and
adcb
sbb
xchg
imul
outsl
sbb
test
inc
subb
pop
jecxz
push
scas
dec
mov
mov
xchg
push
sub
faddp
daa
cmp
jge
cs
push
mov
mov
push
sbb
imul
adc
aad
dec
cs
jne
ljmp
jle
sbb
xlat
sub
pop
sbb
mov
pop
sbb
pop
pusha
and
xchg
or
mov
cltd
imul
ljmp
sbb
push
inc
cmc
test
push
sub
repz
adc
mov
and
mov
in
bnd
push
mov
xchg
inc
stos
xchg
push
shr
outsb
out
adc
imul
jbe
jnp
leave
nop
rcrl
lds
inc
xchg
sub
lcall
je
mov
subl
test
out
daa
push
ja
fsubrl
mov
cmp
aam
mov
outsb
inc
in
enter
insb
insl
xchg
test
sbb
ja
out
daa
sbb
pop
and
rcrb
or
mov
pop
test
xor
sbb
jo
and
xorl
movsl
pop
adc
aaa
arpl
stos
mov
pop
inc
imul
out
mov
adc
ret
outsb
cltd
pop
out
cmp
scas
xchg
mov
and
aas
push
push
cld
add
rclb
mov
shlb
cli
stc
xchg
rorb
push
mov
or
out
imul
outsl
rcr
and
nop
jne
fcomi
movsl
xchg
or
pop
mov
dec
in
add
ds
cs
mov
out
in
or
push
pusha
or
dec
ljmp
ret
xchg
mov
mov
sbb
inc
inc
xchg
xor
in
lock
jmp
add
push
jmp
cmp
sbb
pop
dec
aaa
repnz
scas
xchg
aad
inc
stos
sbb
pop
iret
xchg
ror
pop
fs
movl
inc
push
sub
cltd
out
in
pop
xor
add
mov
call
adc
inc
jns
es
inc
inc
cmovae
add
xchg
adc
cs
std
lcall
aas
mov
je
push
fisubrl
movsb
mov
cmp
jmp
scas
and
repnz
pushf
movsl
gs
xchg
sbb
outsl
aam
popa
mov
jns
lea
dec
std
std
fs
jnp
ret
mov
jl
fnstsw
lods
push
rorl
fisttps
repz
push
dec
loopne
rcll
fisttpl
outsb
and
jle
mov
xchg
fidivrl
arpl
leave
call
addr16
aaa
jb
cmp
ficompl
scas
stc
pushl
in
jno
adc
cmp
mov
data16
sub
pop
pop
pop
and
gs
xchg
lcall
pop
je
mov
sub
sub
push
adc
or
push
pop
xchg
sahf
fistpll
in
cmp
std
fucomp
pop
mov
fdivrs
cmp
lods
pop
mov
lcall
lods
ja
pushf
out
mov
xchg
or
insb
inc
ss
outsl
xchg
push
push
inc
sbb
nop
bound
jns
mov
pop
stos
or
loope
xlat
stos
ss
xor
mov
sub
loope
xchg
movsl
out
shll
ret
hlt
insb
or
in
test
add
lods
fldl
scas
rolb
fadds
pop
test
inc
push
xor
mov
out
sbb
xlat
test
ds
or
movb
cltd
sbb
xor
cli
inc
cmp
xlat
in
out
loope
es
sbbb
xor
mov
adc
mov
dec
or
or
sarb
jle
out
xchg
add
scas
cmpsl
add
lods
in
mov
addl
das
lret
xor
xchg
cld
pop
dec
int
cwtl
inc
or
scas
inc
lret
adc
lods
add
and
ret
sub
dec
xchg
cmpsl
les
stos
xchg
and
mov
mov
aam
adc
cmpsl
pushl
xchg
jo
hlt
sub
ss
xor
ja
adc
stc
add
xchg
lahf
test
stc
inc
or
sbb
jecxz
sbb
out
adc
insb
sgdtl
inc
mov
incb
fwait
aam
or
out
mov
mov
add
push
insl
lret
cmc
jle
mov
cmp
push
je
sbb
leave
in
push
shll
test
jo
popa
or
mov
rolb
dec
es
and
das
cmp
cmpsl
gs
and
dec
inc
pop
das
sbbb
pushf
in
mov
xor
mov
jb
fldl2t
imul
or
scas
scas
add
cmp
dec
aad
int
jge
push
fs
inc
ffree
mov
inc
es
test
mov
mov
push
cmpsb
push
and
xchg
pop
xchg
jne
ficompl
mov
pop
fildl
push
mov
adc
lahf
mov
cmp
mov
sbb
and
or
jne
push
or
fnsave
inc
bound
mov
mov
rcrb
out
push
imul
icebp
sahf
push
icebp
mov
xor
lea
mov
pop
mov
outsl
add
or
pop
sub
loop
xor
ja
sbb
xchg
int
ret
dec
lods
movsl
bound
mull
jle
cld
xor
loop
ret
xor
jbe
pusha
js
pushf
pop
lcall
dec
inc
mov
loope
pushf
scas
push
and
sbb
cmp
or
mov
pop
adc
mov
addr16
push
xchg
adc
inc
sub
mov
inc
push
ja
adc
fmul
loope
jno
mov
loop
mov
inc
lods
cmp
shlb
movsb
leave
sbb
jne
movsb
outsl
mov
movsb
dec
mov
jecxz
aad
out
sub
mov
or
fidivrs
adc
dec
or
adc
test
mov
pop
pop
loop
sbb
jno
scas
cmp
cmc
cmc
movsb
pushl
mov
cwtl
xchg
test
cs
inc
fdivs
repz
pop
and
icebp
fcmove
adc
mov
mov
mov
inc
mov
inc
and
push
push
sbb
cwtl
call
decl
repz
fadd
cs
out
add
adc
pushf
stc
lea
out
sahf
ds
fisubrs
or
pop
fdivrl
pop
scas
mov
mov
ret
xchg
pushf
mov
les
sub
test
cmp
enter
xchg
fnstenv
repnz
dec
xchg
lcall
int
pop
push
cmpsl
mov
mov
adc
adc
out
jno
lods
popa
and
and
cmp
or
fisttps
out
cmp
das
mov
push
or
pop
jle
mov
addr16
jle
ret
sbbb
mov
gs
shl
pop
jne
nop
add
adc
or
mov
mov
popa
cmpsl
call
pop
cmpl
sar
jno
pusha
imul
xor
pop
ja
out
gs
jno
push
call
or
cmp
lret
loopne
xor
pop
push
jno
mov
jmp
mov
mov
out
add
sti
xlat
sub
add
shll
popa
ficoms
and
cld
sub
lcall
adc
adc
cwtl
inc
outsl
push
stos
outsl
push
sbb
fcmovnbe
sbb
mov
gs
mov
push
lret
xlat
xlat
aad
loope
xchg
mov
pop
xchg
inc
repnz
or
fs
shl
push
movsb
ljmp
push
das
mov
push
jge
xlat
lret
mov
or
cmp
es
xchg
pop
xchg
movsb
fiaddl
incl
out
push
fcmove
mov
mov
mov
mov
ret
scas
ljmp
les
pop
movsl
jb
cwtl
or
xor
shl
and
or
jl
push
pushf
dec
std
aad
inc
and
pop
loope
movsl
jns
test
dec
aam
and
or
testb
xor
ret
loop
int
int
jnp
mov
gs
sti
fnsave
mov
cmp
ja
sbb
mov
and
add
or
pusha
bound
cs
mov
push
fdivrl
sub
mov
pop
mov
je
add
cld
orl
xlat
sbb
inc
mov
push
and
adc
add
pop
bswap
pop
pop
jecxz
mov
stc
xchg
mov
lock
mov
dec
ljmp
icebp
jbe
call
lods
jbe
ret
repnz
adc
mov
shlb
mov
lock
cmp
loop
lods
jle
lods
into
xchg
or
cs
bound
push
add
out
adc
test
xor
insl
test
loope
loop
xor
inc
jp
lock
or
popa
clc
mov
adc
xor
and
mov
pop
sub
adc
push
mov
int3
cmp
pop
ror
sub
add
lea
dec
fsts
xchg
js
pop
fmulp
push
and
pop
dec
lahf
insl
jno
shrl
sbb
mov
jo
push
push
push
and
mov
add
xchg
lahf
imul
int3
xchg
scas
test
stos
mulb
inc
push
push
jo
fdivrl
and
push
das
pushf
mov
mov
aaa
lds
cmp
fmulp
cmc
add
jle
fsubrl
ds
sub
es
xchg
arpl
pop
mov
hlt
jns
outsl
sub
enter
jg
fsubrp
inc
cmpsl
cwtl
mov
sbb
loop
cmp
mov
mov
or
mov
int3
xlat
add
cmpb
fdivp
imul
dec
inc
jg
mov
mov
or
out
xchg
xchg
cmp
adc
mov
xchg
cmp
mul
inc
das
lahf
std
pop
filds
lret
ret
test
leave
js
mov
repz
mov
cmp
xchg
std
jmp
mov
enter
push
jo
lea
push
rclb
push
loopne
sub
fcompl
jp
add
inc
cmpsl
adc
inc
movb
xchg
aam
daa
jp
mov
mov
cmpl
sub
repz
ss
aad
sbb
xorb
test
sub
js
sbb
mov
and
in
ss
movsl
lret
mov
loop
mov
mov
jne
sbb
sbb
pop
imul
jecxz
or
mov
pushl
or
or
es
adc
mov
sub
es
out
mov
aad
out
pop
orl
cmp
pushf
inc
icebp
enter
add
lock
jmp
fadd
arpl
and
push
sarl
mov
pop
dec
xchg
outsb
test
movsl
pop
push
xchg
outsb
lods
pop
dec
xchg
mov
in
dec
cmp
cmp
addl
sbb
enter
pop
in
repz
les
jae
cmpsb
inc
iret
cmp
or
je
add
mov
sub
sub
aas
not
pop
push
pop
cmc
jo
test
xchg
mov
mov
leave
imul
cli
or
outsl
xor
pop
add
outsb
push
pop
adc
outsb
adc
sbb
adc
inc
ret
gs
cmpsb
in
sbb
loop
shrl
ret
jg
daa
mov
or
push
movsl
inc
xlat
push
cmp
out
sub
xchg
ret
sti
data16
hlt
jne
pop
nop
adc
orb
pop
adc
imul
dec
lret
inc
mov
repz
xor
mov
outsl
xor
aam
inc
mov
out
push
push
fs
int
cmp
adc
push
dec
in
mov
mov
outsb
and
pushf
arpl
cmpsl
les
js
daa
pop
adc
enter
adc
andb
fs
xor
leave
jecxz
xchg
lea
arpl
stos
push
in
addr16
je
rcl
pop
nop
push
leave
dec
pop
cmp
mov
pop
rclb
cld
jmp
mov
jmp
push
sbb
frstor
push
test
and
jnp
xchg
adc
cmovnp
or
jl
mov
ret
rorl
xchg
adc
stos
pop
scas
scas
jne
jno
insb
sbb
aam
insb
lea
cmp
loop
fs
mov
xor
clc
insb
and
or
addr16
sbb
dec
fistps
mov
xchg
dec
mov
dec
mov
pop
xor
addr16
sbb
pushf
dec
mov
jae
push
mov
lcall
dec
xor
mulb
jmp
aaa
lret
pop
mov
dec
idivl
mov
pop
shlb
mov
fldcw
sub
into
gs
ret
mov
ja
repz
in
jl
popa
cwtl
cmp
mov
cmp
sbb
sub
sbb
mov
pop
movsl
in
lret
cmp
jo
loope
xchg
sub
cmp
sbb
jnp
dec
cwtl
and
xor
and
hlt
lods
push
outsl
insl
inc
fisttps
xor
gs
adc
and
pusha
insl
xor
bound
cli
add
mov
jnp
push
and
stos
mov
pop
and
or
imul
mov
cmpsl
mov
push
sbb
inc
push
dec
sub
mov
imul
pop
and
xchg
fcmovnb
lods
jb
ret
adc
push
adc
push
sahf
mov
loopne
rcll
sbb
add
xor
enter
sbb
pop
test
adc
es
popa
xchg
adc
cmp
pop
jmp
repz
jmp
dec
push
pop
push
jge
mov
es
mov
daa
stc
out
mov
rorb
jmp
xor
cwtl
jp
xor
inc
push
dec
nop
arpl
ljmp
jg
insb
mov
pop
std
adc
jno
cltd
leave
int3
lret
std
xor
mulb
fs
lahf
cmpsb
xchg
ret
loop
cmc
push
rcl
and
inc
inc
pop
cmp
dec
sar
jae
lcall
pop
out
inc
mov
pop
mov
cmp
pop
es
xor
decl
and
iret
and
in
and
xor
jecxz
lds
mov
aas
or
dec
sub
es
imul
cld
jp
iret
xor
mov
ret
adc
imull
movsb
dec
push
repz
pop
jl
ss
lahf
pop
sbb
aas
daa
push
js
shll
cmp
pop
mov
pop
pop
mov
mov
iret
mov
push
ja
jb
or
scas
jae
mov
movl
and
das
pop
xor
or
dec
lret
jmp
cwtl
popf
fcomps
pop
pop
or
ficoml
add
cwtl
cmpsb
jns
xor
dec
cmc
pop
fiaddl
inc
insb
jno
hlt
jae
aam
inc
xchg
add
sbb
xorb
test
jo
subl
dec
xchg
fisttpl
scas
ljmp
movsb
and
pop
daa
lock
jmp
arpl
inc
pop
mov
imul
fidivrl
mov
in
test
sbb
xchg
add
add
pop
scas
test
mov
mov
sub
dec
jle
and
fldenv
cmpsl
out
pop
mov
add
add
insl
and
cltd
push
pop
xchg
mov
sbb
cld
das
jg
test
cld
mov
mov
pop
in
mov
mov
jl
mov
and
adc
das
movsb
push
push
add
inc
inc
cltd
xlat
out
popa
rcll
mov
mov
lret
lahf
in
mov
xor
pop
test
lret
pop
lret
lret
movsl
pop
iret
fwait
mulb
jge
inc
and
push
cmc
out
pop
inc
out
adc
adc
outsl
or
adcl
xor
jge
xchg
or
in
xchg
stos
clc
ja
paddw
mov
mov
add
lea
mov
call
mov
jno
xchg
sahf
sub
mov
rorl
sub
and
pop
pushf
lret
mov
xchg
cmp
mull
jo
add
adc
add
push
add
push
push
add
repz
shrl
pop
lock
sub
mulb
mov
arpl
cmp
in
xor
jns
xchg
xor
arpl
lret
adc
inc
jae
cltd
ss
mov
imul
adc
cmp
xor
mov
push
or
inc
insl
mov
aad
jbe
mov
incb
push
imul
pop
sti
imul
mov
xor
aam
mov
sbb
iret
sbb
adc
pop
or
mov
test
mov
xchg
movsb
in
and
pop
into
jo
gs
add
pop
push
sar
in
mov
sub
int3
sbb
cmp
cli
push
ja
xor
ja
insl
mov
push
pop
jmp
jnp
cmpsb
bound
sbb
fsubs
idivb
lock
mov
pop
mov
lahf
inc
jge
xor
adc
pop
mov
pop
inc
fldz
pusha
int
mov
mov
cmp
mov
jne
out
cmp
jp
aas
std
lcall
cmc
sub
push
in
fwait
cmp
jmp
cmp
js
cmp
cmp
lret
fcmovnb
mov
sub
shrl
inc
out
mov
movsb
jns
jae
imul
lret
aas
push
lret
xchg
xchg
cli
push
sbb
aaa
xor
test
xchg
jb
enter
dec
xchg
arpl
pop
lahf
ret
sub
jne
fisubrl
bound
lock
stc
jle
test
and
sub
mov
outsb
add
mov
xchg
xchg
out
push
xlat
sub
or
mov
jle
push
outsl
add
int
call
mov
popa
std
jl
inc
mov
fbld
popa
repz
xchg
and
push
dec
dec
lcall
gs
into
jecxz
pop
hlt
xor
mov
bound
aam
push
and
int
imul
adc
jne
xchg
dec
pushf
jae
xchg
test
ss
xorb
push
fiadds
dec
sub
dec
imul
and
ljmp
mov
or
push
mov
incl
outsb
mov
cmpsb
mov
mov
outsl
ret
sti
pushl
mov
fiaddl
xor
mov
sbb
xor
popf
shl
rolb
fcompp
cwtl
mov
xor
add
inc
or
lcall
pop
xor
xor
inc
add
adc
xor
rcl
inc
mov
xchg
inc
addr16
cmp
jo
addl
jecxz
or
mov
or
push
cmpsl
sbb
mov
cmp
sbb
movsl
mov
sub
mov
sub
addl
xchg
cmovs
sub
and
es
xor
fadds
in
pop
stc
cmc
cli
cmpsl
jo
add
imul
cli
loopne
xchg
jbe
inc
xor
adc
sbb
or
sub
ret
jge
imul
and
lea
jp
push
cmc
lods
mov
pop
jns
push
mov
call
leave
mov
lahf
pop
jno
cld
jns
fs
push
call
into
dec
test
push
push
sbb
lret
push
sarb
cli
mov
std
jp,pt
jnp
ljmp
daa
hlt
fidivs
adc
popf
call
mov
test
xchg
fmuls
adcl
adc
or
scas
push
sahf
decb
mov
pop
pusha
inc
jnp
pop
jne
inc
mov
rorb
add
xchg
pop
mov
xchg
imul
push
test
loop
shrb
mov
movsl
addr16
add
scas
in
mov
ljmp
push
cwtl
cli
and
lret
jmp
jg
lcall
xchg
into
sti
jmp
sbb
sub
jb
ja
xchg
push
cmpsl
cld
pop
cwtl
movsl
xor
cmpsl
adc
push
stos
jb
mov
test
scas
scas
pop
sahf
and
mov
jp
cld
fs
push
nop
imul
movsl
leave
sub
scas
lcall
dec
push
xchg
mov
or
lret
lock
mov
popf
cmp
push
xchg
xchg
cmc
inc
fcmovne
or
xlat
xorb
jo
out
xor
jmp
jbe
add
sbb
sbb
fdivl
lea
xchg
fs
mov
xchg
push
ficomps
and
and
movsl
push
jge
and
insl
sarl
and
inc
and
push
movups
aaa
push
pop
adc
cltd
mov
es
lret
jp
mov
xchg
sbb
cltd
test
adc
mov
iret
repnz
psllq
cmc
mov
faddp
scas
loop
push
dec
in
aad
call
jp
loope
jno
push
xchg
lcall
aas
or
jbe
adc
out
mov
xchg
mov
sub
mov
loope
and
cmpsl
aas
hlt
or
mov
ror
popa
mov
pop
pop
mov
sahf
fldenv
inc
imul
mov
aad
pop
add
out
lods
mov
stc
cmpb
dec
push
push
jge
sbb
data16
cmpl
arpl
idiv
mov
lods
out
ja,pt
xchg
ret
inc
out
push
sti
push
push
cmpsl
jl
jb
inc
mov
stos
sbb
inc
inc
into
xchg
leave
mov
pop
xchg
inc
lret
jbe
pop
lret
add
je
loopne
mov
sub
stc
pop
jl
sarb
inc
mov
out
mov
stos
dec
rcr
loopne
int3
push
jne
arpl
cmp
testl
into
or
dec
loopne
pushf
sbb
movsb
popa
mov
cmp
xchg
jno
xor
inc
std
push
popa
dec
xchg
sbb
xchg
fisttpll
push
lcall
imul
cltd
scas
xchg
xor
ret
pop
sahf
add
add
cld
stos
push
xor
mov
fcomp
int3
ds
cmp
imul
aam
aaa
xchg
xchg
mov
sub
faddl
inc
idivb
or
push
jae
daa
int
jmp
xlat
popa
lahf
gs
ficoml
pusha
or
pop
in
ss
testl
jl
popf
add
mov
jne
or
mov
add
push
enter
mov
adc
mov
mov
add
cmp
ja
mov
dec
lods
push
or
shll
sbb
clc
mov
shl
push
adc
lods
adc
outsb
xchg
pop
sub
or
scas
imul
mov
into
add
outsl
pop
adcl
push
loop
add
popa
test
mov
stc
or
and
stc
mov
add
adc
inc
popf
and
dec
scas
in
and
xor
or
test
add
mov
jno
sub
test
pop
inc
dec
inc
test
test
mov
push
adc
mov
sub
push
fistps
addl
or
pop
and
inc
nop
mov
outsb
push
aaa
and
out
adc
decl
jb
popa
in
dec
and
nop
stc
add
cli
scas
push
xor
shl
mov
fisubrs
mov
mov
mov
bndldx
pop
add
lods
les
cmpsl
iret
cwtl
dec
or
das
add
jnp
push
dec
imul
clc
lods
cwtl
fwait
push
daa
lret
insb
pop
lods
xor
lahf
jl
dec
imul
movsl
xor
cld
insb
lods
jns
lret
fwait
jg
xor
push
stos
sbb
ret
push
jle
cmp
scas
and
fcmovnb
mov
daa
xchg
sub
fs
shlb
and
sbb
in
dec
aas
or
aad
xor
popf
test
push
lods
dec
lret
test
ficoms
mov
outsb
pop
add
dec
je
mov
dec
jbe
pop
cli
stos
mov
lcall
dec
xchg
cmpsb
and
cli
shlb
cltd
xor
xchg
jge
enter
movsb
dec
cmp
cmpsb
jbe
mov
or
push
into
sub
test
in
lcall
push
dec
and
xchg
outsl
fwait
mov
mov
mov
mov
or
push
fs
xor
gs
inc
xchg
xor
in
or
jecxz
jmp
xchg
jl
enter
pusha
push
mov
lock
lret
dec
idivb
jecxz
outsl
cmp
jae
dec
inc
jmp
jg
pop
call
cs
imul
sub
dec
bound
in
je
cmp
mov
mov
fbstp
jmp
or
vaddsubps
mov
mov
andb
shr
mov
jmp
add
clc
outsl
adc
cmp
insb
sub
jbe
mov
dec
mov
mov
in
sbb
push
iret
test
in
or
sarl
xor
cmp
les
push
sahf
mov
xchg
fldl
movsb
mov
jecxz
jmp
dec
jnp
shll
sti
shlb
pop
subl
pop
fwait
xchg
sbb
xchg
popl
mov
push
aas
ljmp
mov
push
js
and
lahf
add
xchg
jg
jo
cmpsb
inc
pop
hlt
push
test
icebp
xor
lock
std
ljmp
out
pop
mov
ss
dec
jae
shll
jbe
push
fwait
scas
xchg
fstpl
rclb
nop
mov
lret
mov
aam
adc
add
xchg
pop
mov
sbb
inc
scas
xchg
dec
mov
adc
cli
cmp
jb
call
rorb
sbb
dec
sbb
iret
xchg
daa
lahf
rclb
and
jnp
adc
fisttpll
dec
loope
pop
pop
jno
mov
ret
push
jp
mov
pop
jle
scas
cltd
inc
adc
jge
je
or
push
adc
incl
pop
and
stos
dec
sub
sbbl
cld
ljmp
psllq
fsubs
fstps
or
mov
insl
fimuls
repnz
push
lret
sub
jecxz
fldt
popf
scas
jo
aaa
pop
in
mov
cmp
outsb
outsb
push
icebp
mov
mov
sub
test
sub
jnp
mov
ret
cmovo
lret
mov
sbb
jne
pop
arpl
mov
js
ljmp
inc
aas
cli
shll
call
lds
iret
cli
and
cmp
cltd
ja
xor
fcomp
cmp
or
jecxz
scas
mov
xor
mov
xchg
fdivrs
push
ret
arpl
je
es
mov
fs
xor
sbb
mov
imul
mov
pop
or
inc
pop
fnstsw
je
repz
mov
xorl
aam
sbb
stos
and
dec
inc
test
fisttps
and
into
push
jg
mov
testl
jmp
fldt
xlat
dec
arpl
out
xor
cld
loope
data16
vcomisd
jle
xchg
sbb
jp
push
jmp
in
in
inc
aam
xor
pop
jnp
mov
out
rcrl
stos
inc
lods
pop
push
pop
sbb
jp
push
jmp
in
and
test
jp
cwtl
inc
lods
pop
xor
sub
jp
cwtl
inc
lods
out
mov
or
dec
push
add
out
popa
push
adc
cmc
je
ljmp
xchg
or
push
jmp
adc
sbb
inc
fistpl
jge
imul
dec
je
sbbb
lea
pop
sub
mov
cld
loop
mov
xor
push
mov
jns
test
cmpsl
subl
je
lret
inc
or
mov
fst
mov
push
test
lret
lds
xlat
and
ja
and
jo
push
retw
clc
movsb
mov
dec
pop
subb
xchg
mov
daa
enter
sbb
negl
nop
fnstcw
inc
xor
jmp
loope
mov
cs
mov
sbb
das
lahf
mov
in
fs
sbb
mov
jl
in
push
enter
sub
std
es
ss
sub
push
jne
cmp
inc
test
push
push
inc
aam
mov
xchg
push
test
lock
and
data16
mov
mov
mov
pop
jmp
stos
pop
adc
xorl
leave
ljmp
jle
cmpsb
mov
lcall
orb
fs
popf
ja
mov
mov
movsb
and
movsl
daa
in
jl
and
int3
aaa
lret
lods
jmp
push
push
imulb
xor
or
mov
cs
aam
pop
test
pusha
push
xchg
push
cmp
mov
insl
mov
ss
xor
insl
loop
or
lret
push
ja
sbb
jle
ret
xchg
imul
pop
sti
xor
jecxz
push
cli
fwait
lods
xor
nop
mov
xchg
pop
mov
mov
inc
cmp
jmp
inc
push
cmp
in
mov
pop
in
cld
xchg
mov
or
iret
pop
mov
das
ss
adc
fadds
aas
add
xchg
sub
out
add
cwtl
sbb
mov
pop
js
test
lods
xor
pop
ret
popf
xchg
mov
lock
out
add
mov
dec
sarb
into
scas
push
sbb
inc
cmp
sahf
or
in
nop
xor
xchg
icebp
mov
push
push
mov
ret
pop
push
mov
inc
and
mov
mov
fldt
ret
sbb
sbb
dec
js
js
xchg
sbb
push
sbb
int3
jecxz
les
mov
jno
and
aam
lock
pop
lods
in
inc
jecxz
int
repnz
mov
and
add
imul
sbb
jle
xor
subb
mov
cmp
dec
js
iret
lret
mov
inc
int
adc
add
in
fisttps
or
jle
out
jl
jmp
cli
or
in
or
ret
jnp
enter
sbb
nop
mov
pop
insl
inc
outsb
inc
adc
out
test
mov
idivl
jg
pop
xchg
cli
sarb
cmp
sbb
mov
imulb
cwtl
in
ljmp
inc
test
std
fwait
or
outsl
inc
lcall
mull
inc
fdivrl
es
and
addr16
popf
mov
stos
fs
pop
and
xor
icebp
cmp
negl
or
in
int3
test
cli
scas
jmp
mull
sar
mov
fidivs
scas
lcall
aas
xor
sarb
bound
iret
fnstcw
xchg
mov
ds
stos
jmp
ret
add
roll
xchg
push
mov
int3
add
std
aad
sub
inc
pop
mov
lods
repz
icebp
leave
adc
jnp
int3
movsl
mov
adc
pop
pop
xchg
cli
add
fs
mov
test
test
pop
mov
test
push
fistpll
add
add
or
pop
mov
test
push
test
jmp
scas
hlt
jmp
or
or
rcl
xchg
jg
insl
repnz
and
jb
mov
in
add
gs
cmp
jle
sti
mov
leave
gs
fsubrl
sahf
iret
out
divb
xlat
jns
mov
cmp
fisubrl
int
cltd
stc
shld
mov
fldcw
rolb
xlat
jg
sub
mov
fxch
or
xchg
fistps
test
push
popa
mov
imul
mov
adc
scas
test
push
xchg
test
mov
sahf
sbb
lods
or
and
xor
mov
push
adc
insl
enter
lea
and
lret
movsl
iret
dec
in
push
scas
and
es
test
jmp
cmpsb
mov
jo
lds
divb
jecxz
out
sbbb
sbb
clc
mov
ret
xor
fisttpll
sbb
mov
xchg
lods
xor
or
fst
xchg
or
push
stc
cmpsl
dec
pop
push
xor
sub
sub
pop
mov
and
pop
jp
mov
inc
dec
and
jae
arpl
mov
pop
inc
shr
clc
mov
sbb
into
and
mov
adc
push
dec
clc
inc
addl
adc
cltd
ss
add
addl
adc
out
dec
dec
adc
hlt
insl
add
push
pusha
nop
inc
in
add
dec
mov
shlb
lret
jp
pop
xchg
push
inc
add
sbb
jno
adcl
dec
mov
adcb
xchg
inc
testl
cs
push
push
or
and
rorb
jb
lahf
push
push
xor
nop
and
in
and
out
aam
mov
sub
mov
aad
ret
mov
sub
sbb
mov
inc
in
test
pop
dec
cwtl
push
jge
ret
js
js
ja
jns
imul
mov
rorb
add
lret
or
xchg
ss
inc
rcrl
cwtl
jmp
jo
sub
pop
aas
mov
sbb
push
inc
dec
test
jg
add
sbb
stc
mov
mov
addr16
xchg
mov
cld
movsl
loopw
in
sub
add
xchg
sbb
jmp
das
sbb
mov
call
out
mov
xor
pop
stc
dec
enter
lock
pop
pop
pushf
xchg
repnz
fs
fs
push
ljmp
adc
data16
cltd
aam
xchg
or
mov
or
pop
mov
scas
lock
cmp
cwtl
mov
jae
adc
es
lret
xor
les
arpl
out
bound
push
aad
push
mov
xchg
cmovp
adc
xor
cmp
in
add
int3
and
cmpsb
cltd
movsb
loope
mov
stos
je
cmp
aam
dec
clc
sbb
scas
sti
sub
xor
push
xor
cmp
repnz
lds
lods
sub
cltd
add
divb
adcl
adc
inc
add
push
or
sub
add
aaa
jmp
mov
and
jmp
or
dec
cmpsb
jge
add
iret
sbb
push
fcmovu
dec
adc
jns
and
mov
shl
loopne
dec
or
inc
jge
or
mov
cmp
loop
mov
sbb
scas
cmpsl
testb
test
jmp
xor
pop
xchg
lock
loope
or
test
push
lods
xor
pop
pop
rol
sahf
cwtl
loope
xchg
out
mov
inc
xchg
or
and
adc
mov
das
ret
insl
movsl
sub
and
or
or
sub
and
js
lea
or
arpl
loop
adcl
adc
jl
mov
sbb
in
push
popa
aas
cmp
pop
loopne
mov
pop
pop
jl
sahf
jne
add
or
test
adc
mov
push
cmc
stos
fdivr
dec
clc
lock
pop
push
xor
ret
push
fsubs
mov
push
xor
out
jle
sahf
outsl
mov
int3
stc
ret
mov
shll
lea
mov
cs
add
loop
xor
lahf
stc
ficompl
jbe
mov
dec
jp
pop
sub
mov
adc
mov
jbe
mov
int
in
and
push
lods
ret
and
mov
icebp
cmp
rorl
dec
dec
mov
xchg
sbb
sbb
mov
inc
add
push
push
xchg
aad
push
shll
and
icebp
testb
jg
lahf
addr16
jmp
pop
mov
fstpl
lds
dec
into
sti
andl
jns
adc
std
ret
pop
cwtl
ja
jnp
fisubrs
adc
xor
add
pop
sbb
lods
add
aas
and
xor
push
test
mov
inc
ffree
or
icebp
cmpsb
jg
mov
mov
mov
jae
fwait
aaa
arpl
dec
test
xchg
out
inc
mov
adc
aad
dec
push
lods
sbb
mov
lret
and
pop
inc
or
outsl
out
or
cltd
jle
xlat
stos
paddsb
int
add
dec
test
aaa
shr
mov
mov
sbb
insl
loope
fsubrs
stos
cmc
lss
or
add
push
scas
aad
pop
inc
nop
and
pop
test
jge
adc
jecxz
mov
mov
mov
xchg
sti
ja
mov
mov
bound
ds
outsl
decl
xor
jecxz
std
jb
sbb
mov
xor
pop
popf
or
scas
pop
cmpsb
inc
daa
inc
dec
push
dec
bswap
rcrb
cmpsl
pushl
and
sub
dec
mov
roll
push
sahf
shlb
adc
mov
cli
pop
nop
xchg
test
cmp
aad
leave
aaa
test
mov
xor
dec
pusha
dec
lahf
jle
inc
je
push
bound
cmp
addr16
and
lret
cltd
in
insb
mov
rcll
out
lods
loopne
push
pop
push
scas
xorl
shl
pusha
dec
adc
int
mov
ljmp
insb
push
add
mov
pusha
push
inc
bound
mov
xor
xchg
jl
ss
fwait
mov
divl
cmp
cwtl
clc
or
sbb
push
pop
jg
cmpl
ljmp
push
jns
sub
bound
adc
ss
fidivs
cmc
adc
sahf
xor
scas
addr16
rolb
pop
mov
iret
jg
sbb
pop
add
xor
ja
fcompl
loop
fidivs
shrl
jne
jnp
notb
lret
push
lahf
aaa
jo
dec
sbb
or
imul
arpl
pop
cmp
or
cwtl
push
rorl
add
rcrl
sub
dec
lahf
and
jne
jp
sub
push
out
sub
ljmp
or
loopne
rcrl
add
addl
ss
ljmp
add
adc
inc
push
movsl
test
mov
lods
fsubp
pop
or
cwtl
dec
inc
sbb
in
mov
sub
repnz
cmp
pop
inc
jg
mov
sti
cmpsb
fcoml
sbb
inc
mov
dec
xor
push
add
cmp
nop
pop
push
aaa
push
fimuls
in
fadds
jne
pusha
adc
mov
lds
dec
mov
test
xorl
je
inc
arpl
js
loop
shrl
iret
js
rcrb
push
xor
jb
js
cmp
leave
mov
inc
jle
push
jp
inc
or
ret
sbb
fwait
cmp
xor
aam
inc
aaa
xlat
jl
incb
and
pop
jae
into
sub
negl
sub
jg
subb
pop
imul
cmpsl
rclb
ret
insl
xlat
push
adc
pop
test
insl
lret
sbb
loope
fstl
sub
cmpl
stos
add
out
rcrb
sbb
sub
sub
lahf
faddl
jns
pop
mov
xchg
addr16
pop
loop
out
shr
dec
sbb
rcr
and
sub
adc
pushf
faddl
or
cmc
xor
les
xchg
incl
gs
lahf
sub
repnz
push
in
mov
mov
jno
xchg
xorb
ret
orb
jne
lahf
push
sbb
mov
inc
xor
rorl
jp
jb
adc
push
mov
sbb
mov
pop
insb
pop
pop
push
repz
mov
sbb
add
imul
or
movsb
imul
mov
pop
dec
sbb
pop
lahf
xor
or
pop
lret
in
cwtl
xchg
sti
xchg
stos
outsl
stos
sbb
mov
clc
cld
lods
cli
mov
iret
das
test
sbb
jns
mov
jno
in
out
sbb
movsb
mov
adc
aas
or
pop
mov
push
cwtl
fdivl
stc
inc
pop
lock
mov
js
xchg
sbbb
lret
pop
mov
lret
dec
jns
pop
xor
std
inc
adc
mov
imul
repz
sub
pop
xchg
mov
sahf
mov
cmpb
pop
loop
adc
lods
loop
outsb
adc
scas
mov
sbb
scas
sub
movsb
dec
out
add
cli
fdivs
shrb
out
sbb
rclb
cmp
mov
inc
push
mov
jle
fwait
xor
mov
jae
into
out
jmp
pop
and
ja
xor
je
xor
add
test
jne
cld
je
xor
push
inc
loopne
insb
cmc
or
popf
xor
ja
or
jge
js
out
jnp
sbb
adc
fdiv
repnz
mov
sti
cmp
mov
mov
je
andb
cs
rclb
push
jg
shll
lret
push
jge
in
popa
sub
jns
jno,pt
jo
scas
imul
push
mov
xchg
cmp
les
jecxz
enter
jl
rcr
js
pop
pop
jp
add
loope
addr16
arpl
repnz
shrl
push
cmp
add
out
jl
loopne
popf
fadd
mov
std
jmp
inc
xor
inc
aas
icebp
xor
pop
out
aas
mov
xchg
in
push
xchg
out
jecxz
lods
dec
push
pushf
loopne
dec
fnstsw
aad
pop
fwait
mov
push
inc
sbb
cmp
inc
lock
add
cwtl
fsubp
cmpsb
jae
roll
pop
icebp
and
xchg
pop
pushf
fs
xchg
cltd
mov
pop
cltd
stc
mov
inc
or
loopne
shld
xchg
test
add
add
popa
xchg
scas
mov
lret
mov
jns
sub
cmpsl
add
xchg
xlat
pop
loopne
leave
jl
mov
adc
shl
sub
or
jno
jmp
scas
xchg
not
ja
and
jl
loope
vmread
cmp
cld
outsl
iret
sub
add
jecxz
arpl
repz
adc
adc
jne
adc
icebp
jg
dec
push
mov
div
iret
xorl
scas
jne
into
push
fadds
jl
popa
addr16
insb
les
jl
in
push
push
mov
mov
adc
lret
jne
dec
push
pop
jmp
xor
pop
xor
scas
cmc
cmp
mov
add
aas
adc
adc
pushf
lahf
inc
ds
sahf
xchg
inc
imul
call
mov
jo
mov
notl
outsb
data16
popf
mov
cli
jo
mov
mov
fdivl
dec
lret
out
xchg
push
jae
jne
stc
dec
or
cltd
test
out
sbb
push
and
les
ljmp
iret
lds
jae
sahf
rclb
iret
icebp
bound
mov
or
sbb
lds
sbb
popa
es
test
mov
outsl
in
xchg
call
stc
lods
icebp
aad
mov
jecxz
or
push
popf
fisubrs
and
inc
or
xchg
cmp
or
and
test
pop
mov
je
add
enter
aad
jo
cmp
in
pop
or
cmp
mov
lea
pusha
das
pop
rcll
push
push
mov
or
outsb
ljmp
ljmp
or
hlt
xchg
rol
jb
and
je
fdivl
mov
or
adc
shrl
call
repnz
dec
jne
nop
movsl
cmpsl
xchg
scas
es
pop
enter
and
ja
jb
xchg
inc
or
bound
les
jmp
xchg
and
jge
cmp
popf
test
add
or
sbb
and
mov
nop
push
lds
dec
imul
mov
cmc
aaa
in
pop
pop
cltd
repz
stc
push
fildll
hlt
push
scas
mov
fbstp
jp
fistl
outsl
pop
sbb
adc
add
lds
cli
jg
pop
lock
pop
movsl
rorl
pop
outsl
into
mov
inc
out
xchg
push
stos
mov
fs
nop
or
and
push
cmp
clc
jnp
sbbl
enter
fwait
xor
xor
aas
sub
lods
inc
jg
rcr
aaa
mov
adc
jge
sbb
xor
mov
and
je
mov
enter
dec
out
cmc
mov
dec
out
fcomip
insl
xor
sti
inc
in
into
sbbl
push
cmp
bound
and
lds
inc
imull
dec
shrb
cltd
adc
xor
rorl
test
in
or
add
sti
sarb
insb
pop
mov
add
or
cmp
scas
push
filds
cli
cli
and
xchg
mov
fwait
jp
adc
movsl
xchg
movsb
sbb
xchg
loopne
movsl
sub
scas
enter
rcrl
arpl
stos
jecxz
sub
arpl
dec
jge
xor
or
out
jl
test
aad
xchg
mov
gs
sbb
icebp
scas
int
push
outsb
push
sbb
pop
and
dec
xor
sbb
mov
mov
lahf
shlb
xor
sub
jl
mov
imul
enter
out
mov
loopne
in
pop
incl
jns,pt
fst
mov
sbb
movsl
sbb
les
popf
mov
jbe
icebp
inc
aad
cli
mov
pushl
adc
add
insb
mov
shr
pop
call
addr16
fmuls
addr16
dec
jg
cmp
sti
in
xlat
mov
enter
jb
ja
dec
mov
enter
xchg
push
orl
fsub
lock
xor
filds
cld
stc
or
or
stos
mov
std
neg
mov
imul
pop
jbe
mov
cmp
pop
scas
xorb
hlt
xchg
inc
adc
shrl
push
or
shrl
jns
jecxz
mov
faddl
pop
push
pop
jp
xchg
push
scas
ficoms
stos
and
fcmovb
idivl
mov
cld
lahf
fidivrl
cmp
lcall
repnz
rcll
push
test
aam
leave
dec
push
stc
jg
xchg
sub
pop
dec
fisttpl
xlat
push
sahf
inc
adc
ret
in
loopne
push
dec
dec
add
pusha
push
mov
mov
mov
sbb
cmp
mov
les
inc
bound
mov
rcll
mov
cmpsb
pop
and
dec
div
cs
neg
int
out
push
push
fmuls
fwait
ret
enter
jp
popa
fdivrp
std
jnp
jle
fucomp
mov
sti
ret
mov
jg
mov
popf
push
mov
ret
jmp
sbb
cmp
out
gs
repz
xlat
roll
mov
ret
test
loopne
inc
fnstsw
cwtl
mov
popf
shll
or
mov
pop
xor
not
jb
and
fs
sarl
xor
pop
sub
dec
int
add
daa
dec
popf
dec
dec
lret
jp
cmp
lcall
sub
or
jo
add
repz
fisubrl
add
es
fwait
mov
dec
bound
repnz
aam
mov
rolb
stos
lret
mov
cwtl
scas
fwait
sbb
lcall
test
shrl
scas
imul
xor
lds
push
dec
cmp
push
add
mov
xchg
out
mov
xor
xchg
pop
in
inc
pop
imul
les
sbb
fcomip
lods
xlat
mov
nop
mov
jecxz
ficoml
notb
orb
idivb
push
int3
mov
pop
rcll
xchg
mov
add
dec
ss
adc
pop
inc
dec
pushf
bound
xor
in
push
arpl
fisubrl
ficoml
daa
xchg
or
push
in
add
faddl
lea
xchg
add
jg
roll
ds
rcll
dec
addb
push
daa
int
test
push
mov
bound
movsl
or
insb
xchg
fcoms
ss
cmp
push
add
xchg
outsl
sar
in
fwait
cmp
push
mov
addb
jl
add
lock
lcall
sbb
inc
sarl
or
sbb
rclb
mov
xchg
push
nop
sbb
lds
in
test
les
inc
test
loope
xchg
mul
fstps
pand
pop
test
mov
or
xchg
mov
or
cltd
aad
stos
xor
shll
pop
dec
loope
pop
sbb
cld
cld
loope
sub
xlat
push
push
sub
enter
add
out
mov
sbb
lret
es
cmp
xor
fprem
dec
pushf
inc
cmc
jnp
push
jp
inc
mov
mov
out
xor
aas
pop
sbb
add
cli
in
and
inc
scas
into
and
mov
push
std
and
lcall
xchg
addr16
jge
xchg
jb
test
movsb
dec
mov
popa
adc
adc
lret
repz
jo
xchg
nop
add
jae
cmpsl
xchg
repz
jno
mov
fwait
mov
and
sahf
dec
push
pop
int
popa
stos
xorb
das
scas
xchg
enter
mov
loop
fwait
xchg
js
ds
jmp
loopne
es
pop
mov
cmp
sub
hlt
stc
iret
mov
cmp
inc
dec
je
cmpsb
orl
fldenv
dec
mov
mov
mov
pop
frstor
hlt
xchg
ret
lret
or
jno
cli
arpl
or
mov
repz
test
xor
sbb
scas
sbb
add
in
fldt
xor
sub
dec
sbbb
or
lods
into
jno
call
mov
testl
outsl
push
aad
ficoms
addr16
jmp
xchg
iret
mov
mov
into
push
mov
push
jg
pop
sub
js
jg
mov
inc
mov
mov
jns
addr16
inc
mov
lea
adcl
mov
push
xchg
sub
imul
mov
out
and
sahf
ss
pop
dec
xchg
repnz
jno
sbb
icebp
jle
js
push
shr
push
repnz
cltd
bound
sub
out
aam
insl
das
out
divb
in
shrl
xchg
cltd
ljmp
jp
and
push
jg
xlat
pop
aas
dec
imul
mov
xor
and
xchg
lret
dec
out
jae
sbb
inc
cli
sub
arpl
sub
or
mov
sar
lcall
enter
imul
cmc
test
fbld
in
js
mov
jg
sbb
rcrb
mov
xlat
insl
cmc
cwtl
shrl
inc
lods
push
cmpsl
jg
lcall
pop
xor
pop
dec
mov
sti
mov
xchg
jge
popa
sub
mov
or
ljmp
jne
cmp
cld
cmp
aaa
test
jne
je
ficomps
xor
inc
push
movsl
call
xchg
mov
jmp
push
jbe
outsb
mov
test
lods
aas
ffree
fnstsw
xlat
sub
les
loope
dec
mov
or
push
mov
scas
divb
mov
mov
sub
cltd
cmpsb
iret
or
xchg
xchg
fstpt
pop
lea
rorb
xor
int
std
mov
push
sub
mov
pop
inc
pop
and
fsubs
lods
clc
push
adc
push
push
std
aas
out
iret
gs
into
pop
imul
clc
insb
ss
jp
lods
popl
mov
cli
or
or
jne
jmp
imul
call
gs
incl
dec
movsb
xor
add
xchg
jg
lock
or
mov
dec
mov
fidivl
add
fisttpll
xchg
idivb
das
sub
lcall
daa
xor
pop
fisttpl
popf
scas
add
jbe
add
pop
out
mov
mov
or
mov
push
xor
dec
das
int3
mov
loopne
pshufw
xor
sub
dec
jecxz
jge
cli
jae
and
and
in
adc
aaa
inc
fiaddl
es
roll
lcall
out
mov
mov
ret
loop
test
mov
and
add
rclb
mov
jae
mov
push
jmp
out
faddl
pusha
cmp
movsb
push
xchg
or
cwtl
enter
sahf
cmp
add
enter
xor
add
cwtl
sti
pusha
jnp
popa
cmp
aaa
pop
cmpsb
jb
sub
mov
push
xor
js
gs
rorl
loopne
outsb
ret
or
in
push
movsb
jnp
nop
xor
loop
sbb
arpl
xor
mov
out
dec
pop
mov
sbb
pusha
hlt
dec
mov
ret
mov
loope
cli
out
jne
scas
cmpsl
pushf
bound
and
inc
ret
int3
jp
pop
jno
xchg
mov
jbe
and
out
sbb
mov
lods
cltd
mov
pop
xor
sbb
loopne
sub
rclb
movsl
mov
dec
fildl
loope
mov
pushf
push
in
data16
cmp
jle
loope
in
or
xlat
jge
repz
mov
jae
cmp
cmpsb
mov
int3
sbb
int
mov
sar
xor
lahf
xchg
das
sbb
stc
leave
ret
mov
ret
pop
sbb
dec
lods
dec
fcomip
mov
pop
push
ja
xor
adc
dec
and
push
mov
les
and
add
aad
or
ret
insb
jbe
aam
push
cmpsb
aas
test
ljmp
dec
jb
fmuls
push
sub
xor
xor
mov
lret
push
jno
cld
sub
push
mov
jnp
xchg
pop
es
outsb
mov
out
cmp
loop
jae
and
out
push
push
sbb
mov
push
aam
sub
rcll
or
cmc
mov
nop
sahf
add
stos
cmp
push
rol
movl
and
jecxz
enter
jl
sbb
ds
inc
mov
mov
pop
in
sbb
adc
std
jne
nop
jae
mov
pop
push
xor
loopne
andb
fsubrl
sbb
loope
jnp
movsl
lret
repz
adc
pop
mov
cli
packsswb
int3
adc
xchg
ret
pop
lds
mov
movsb
lds
out
mov
fs
test
clc
cs
add
lret
mov
fimull
inc
dec
lea
sub
addl
push
xchg
add
mov
inc
pusha
addl
aad
sahf
out
jno
cwtl
push
and
jl
scas
add
das
mov
das
repz
and
inc
int
iret
mov
int3
mov
lock
jne
xchg
xor
loopne
icebp
add
pop
sbb
data16
push
in
push
movsb
jmp
dec
sbb
add
aas
push
stos
popf
test
push
mov
mov
push
jmp
inc
push
cmp
sti
dec
adc
pop
sbb
adc
xor
lock
jle
incl
pop
stc
pop
or
jno
mov
mov
cli
dec
vmwrite
imul
xlat
xor
inc
dec
popf
xor
pop
arpl
lods
and
xor
rorb
pushf
cmp
fstp
movsl
test
ficomps
xchg
and
adc
inc
adc
xchg
pop
int
jle
leave
out
push
inc
sbb
pop
arpl
xor
insl
mov
or
push
sub
push
fadds
xor
pop
dec
clc
pop
pusha
push
loope
inc
xor
ss
arpl
insb
mov
fldl
and
getsec
mov
mov
add
subl
js
xchg
fisttps
fdivs
out
leave
test
cli
pop
icebp
mull
jnp
shlb
push
xchg
or
cmp
aam
cmp
das
movl
adc
cmpb
jge
rcrb
fcoms
inc
xchg
or
and
js
cmp
mov
push
imul
push
push
jns
mov
mov
dec
jge
mov
push
xchg
pop
pop
ret
sbb
jmp
clc
and
scas
sti
ja
add
and
cmc
roll
pop
ja
pop
les
leave
sbb
cmp
mov
sbb
arpl
pop
jle
xor
ss
pop
xor
xor
push
cmp
js
dec
pop
adc
xor
call
out
jno
aaa
arpl
dec
pop
pop
jmp
mov
clc
es
lret
jne
sbb
xor
mov
cmp
bound
pop
fs
pop
sbb
lret
lret
push
adc
pop
jge
mov
incl
out
cld
sarl
jg
xchg
fdivl
xlat
xor
mov
cmp
push
out
jae
mov
clc
lahf
mov
stc
pop
jns
xor
movaps
cmp
ljmp
xchg
xchg
adc
dec
fidivl
mov
jmp
sub
mov
loopne
out
lods
arpl
mov
jnp
or
push
sahf
ficoms
xchg
jo
xchg
or
pop
and
setb
jno
adc
clc
das
daa
adc
mov
push
jno
sub
pusha
mov
dec
pop
xor
jne
or
mov
daa
xor
sub
scas
int3
sub
fisttps
xor
out
iret
sub
mov
mov
popf
jns
lock
cmpsb
adc
cmp
push
aam
xor
adc
dec
sahf
adc
mov
jbe
or
pop
imul
iret
mov
je
or
add
or
dec
clc
or
loop
call
push
fwait
push
push
dec
push
lahf
and
sbb
addb
xor
jle
jge
popf
aaa
dec
test
scas
stc
decb
push
dec
in
stc
fwait
lock
pop
inc
sub
sti
and
jb
test
mov
jae
jl
arpl
cld
mov
push
out
gs
repnz
jae
add
mov
in
icebp
lods
jg
ja,pt
imul
shll
push
lea
xchg
sahf
movsb
int
mov
into
insb
add
jnp
xchg
mov
mov
imulb
inc
add
clc
pusha
jmp
loope
inc
shl
mov
jecxz
mov
daa
je
mov
dec
icebp
fdivr
sub
rorl
js
jbe
ret
jne
mov
int
push
imul
fcmovnbe
jg
pop
clc
push
sub
jno
push
or
into
or
std
movsl
movsb
repz
xchg
push
jp
sbb
inc
aas
sub
cmp
iret
and
and
xor
pop
mov
mov
repnz
ret
mul
mov
or
push
xor
ret
hlt
and
insl
sub
jmp
dec
shlb
je
rolb
vmovaps
fidivrs
or
mov
xchg
outsl
xchg
push
adc
int3
js
push
mov
xlat
lcall
mov
xlat
int
inc
lea
aaa
mov
mov
push
fs
out
mov
sbb
je
aad
push
scas
mov
ljmp
mov
lods
outsl
clc
subb
cmpsl
lock
ret
stc
adc
adc
sarb
in
add
scas
jecxz
inc
jge
pusha
das
push
lods
hlt
sbb
cwtl
add
in
out
cld
cwtl
pushf
jge
stc
sbbb
sbb
xor
pop
stos
add
dec
xor
adc
pop
inc
or
lret
adc
xlat
stc
ja
insl
mov
cmp
and
ja
xorb
jmp
and
pop
in
xchg
in
xor
lahf
setae
xchg
daa
inc
and
cmc
sub
mov
outsl
jnp
fidivrs
int3
outsb
pop
icebp
sbb
jno
test
pop
call
cmp
xchg
daa
jmp
and
jns
cmp
stc
push
mov
shl
lods
mov
mull
es
mov
pusha
notl
rcr
popf
mov
pop
add
das
xor
xlat
mov
adc
out
or
outsb
into
push
sbb
sub
test
push
pop
fyl2xp1
sub
dec
pcmpeqb
add
fnstsw
into
push
into
adc
mov
into
sbb
scas
sub
and
push
push
repnz
push
in
popf
mov
mov
cld
loope
inc
cltd
dec
jne
sbb
mov
lret
outsb
movsl
add
fsubs
loope
pop
sub
jl
dec
push
cmp
fstl
cmp
sbb
jno
stos
lcall
mov
add
xor
cmp
scas
icebp
jg
shl
or
jne
cmp
pop
xchg
pushf
in
mov
aad
repnz
jge
je
aaa
xchg
xor
sub
pop
add
mov
std
ja
popa
ret
xor
out
mov
xchg
inc
test
push
sub
lcall
jge
xchg
orb
mov
ljmp
aaa
add
lahf
iret
xchg
out
ffreep
iret
fnstcw
jge
pushf
and
insb
jmp
into
jbe
es
shlb
ja
bound
lock
mov
leave
add
cmovge
imul
divl
ss
insl
std
mov
out
sub
scas
out
mov
xor
mov
sub
ds
into
mov
or
fs
loope
push
mov
cmp
lods
push
adc
test
xor
fisubrs
adcl
sti
or
push
lock
jae
pop
sti
and
push
xor
mov
or
cmp
fucomp
jae
mov
out
cmp
test
mov
int3
lret
fmuls
sbb
xchg
inc
mov
or
mov
test
sbb
inc
push
xor
xor
cltd
jno
mov
je
shll
mov
push
mov
std
in
imulb
mov
out
sub
xchg
jge
pop
adc
mov
gs
mov
jo
imul
sub
or
sti
aas
push
ret
ljmp
rcrb
js
adc
dec
icebp
xor
leave
pop
sahf
pop
nop
cmpsb
or
add
inc
or
popa
insl
loop
sbb
das
cwtl
mov
add
cmp
orl
xchg
xchg
adc
or
stos
outsl
or
cs
inc
xor
or
or
add
or
scas
adc
mov
xchg
and
adc
pop
push
notb
jp
xlat
jg
jmp
shr
imul
add
inc
js
xchg
iret
scas
fildll
cmp
fidivl
and
leave
sub
xor
test
out
push
jmp
subl
movsl
data16
lahf
nop
mov
sub
clc
movsl
mov
dec
jmp
or
sbb
or
pop
jmp
lock
push
pop
call
push
mov
js
push
xchg
push
sub
push
shll
jae
and
xchg
mov
dec
pop
cmpsb
xorl
push
out
jmp
mov
iret
xor
xchg
ja
pop
sub
enter
and
insl
test
pushf
pop
xchg
fwait
stos
jno
jle,pt
mov
push
and
cwtl
mov
call
push
and
mov
enter
mov
testl
jle
lahf
divl
clc
stc
mov
pushf
insl
push
mov
nop
pop
mov
stos
ljmp
jae
push
sub
pop
fbld
iret
cld
xchg
mov
jb
pop
fdivr
cmpb
iret
arpl
stc
aad
lahf
mov
test
fsts
xor
xor
movsb
mov
mov
push
pop
mov
repnz
rcrl
ljmp
in
prefetch
or
or
lods
sahf
pop
dec
xchg
dec
dec
andl
neg
orb
lods
mov
mov
dec
pop
mov
and
push
inc
gs
sbb
lea
lds
adc
in
andl
push
pop
pop
fwait
aad
cwtl
or
sbb
and
int3
daa
adc
fstp
arpl
scas
jecxz
insl
jge
bound
stc
jecxz
mov
into
sbb
lods
sbb
pop
mov
or
sahf
adc
sbb
stc
pop
in
push
fimull
cmc
sbb
out
or
adcb
in
ja
cltd
in
jg
js
push
lret
push
pop
pusha
jne
lret
cltd
in
add
cltd
fcompl
out
lcallw
out
pushf
pop
mov
movntq
out
ss
fsts
int3
aas
inc
int3
lret
push
xchg
xor
mov
xchg
xchg
rcr
xor
pop
push
pop
scas
loopne
into
repz
std
filds
jg
shlb
call
lock
cmp
scas
cmp
jo
sub
or
pop
sbb
lods
xchg
scas
mov
mov
mov
repnz
je
xor
mov
shll
push
test
aaa
push
cmp
lock
andl
fmull
outsl
fwait
out
inc
jae
push
mov
repnz
cmp
xchg
dec
loop
outsl
inc
test
mov
pop
pushf
ja
or
aas
xchg
and
sbb
inc
dec
mov
outsl
jmp
lea
scas
shr
mov
xor
movsb
xchg
in
repz
mov
xchg
mov
mov
or
xlat
add
insl
lahf
jl
insl
mov
mov
or
stos
imul
movsb
leave
lcall
add
les
mov
push
push
bound
repz
xlat
cwtl
in
cmp
and
lock
enter
ss
sbb
inc
jnp
into
repz
out
dec
mov
xchg
pop
xchg
inc
repnz
std
loope
xor
push
stos
and
pop
mov
fwait
mov
mov
and
cwtl
sti
push
or
stos
push
loope
dec
cmpsb
mov
cmp
movsl
fadd
xor
std
shll
jo
enter
cmp
imul
repnz
cmp
mov
sub
and
in
mov
or
daa
pushf
jbe
mov
xchg
adc
mov
test
adc
mov
pop
and
sbb
loopne
adc
aam
sub
mov
jne
mov
sarl
push
jg
inc
push
neg
mov
mov
push
push
jle
sub
xchg
loope
pop
subl
jne
bound
ja
pop
js
add
es
jg
pusha
jecxz
cwtl
and
mov
incb
test
loope
fbld
jne
jne
lcall
lret
jecxz
lcall
mov
xor
cli
cli
fistpl
sub
and
jb
loop
add
icebp
push
fisubrs
xor
sti
outsb
js
mov
cmc
movzwl
mov
mov
push
jae
repz
xor
add
pusha
lcall
sub
jb
mov
cld
xchg
push
fwait
out
dec
loopne
inc
jmp
jmp
mov
mov
dec
inc
xchg
into
scas
daa
rclb
mov
enter
jmp
or
aad
push
pop
xor
lock
xor
repnz
pop
add
fs
jmp
and
and
jno
das
mov
jecxz
and
or
cmp
lock
jecxz
push
and
push
dec
stc
mulb
movsb
push
jno
push
addr16
or
cmp
xor
rclb
push
shlb
jae
hlt
imul
test
jns
push
add
negl
jo
aaa
mov
dec
ficompl
mov
das
or
jp
pop
xor
mov
push
ss
icebp
imul
pop
test
xchg
decb
addr16
rcll
add
inc
mov
push
into
and
out
mov
repz
and
scas
fldl
and
xor
cmp
jb
cwtl
cwtl
jp
xchg
push
and
or
adc
add
leave
imul
mov
push
test
sub
fists
xchg
or
in
cli
addr16
and
jp
iret
call
add
in
pop
jbe
adcl
in
sub
sti
sub
lahf
mov
dec
pop
sbb
cwtl
out
ret
jp
lahf
push
les
jp
sub
ficompl
mov
dec
rclb
pusha
cmp
cmp
popw
std
leave
jbe
test
xor
fisttpl
xor
mov
xor
outsb
xor
dec
mov
addr16
mov
fwait
mov
inc
and
leave
out
pop
cmp
mov
xor
data16
ss
cmp
inc
leave
push
rorl
fildll
in
addr16
and
in
out
out
popa
into
mov
daa
mov
imul
aaa
or
test
ss
sbb
xchg
mov
ja
out
sub
daa
clc
movsl
sahf
cmpb
mov
jbe
mov
adc
shr
or
pop
js
mov
ret
hlt
adc
fcomps
in
aam
lock
in
mov
fisubrs
or
aaa
popa
notl
fldt
nop
js
jbe
jns
repnz
pop
mov
push
aad
movsl
jnp
cld
xchg
jo
loop
fildll
dec
ss
ret
push
out
std
sub
fstps
aam
xor
add
lea
mov
xor
fwait
jle
cmp
lret
mov
divps
mov
shll
sub
outsb
sub
pop
sbb
movsl
enter
fadds
stos
popa
or
cli
inc
stos
mov
xor
sbbl
ret
loopne
push
out
lahf
outsl
mov
fucomp
loopne
orl
push
iret
movsl
int3
jae
repnz
ret
sub
stc
jecxz
jecxz
and
jge
hlt
fldl
mov
sti
sbb
inc
negb
mov
jbe
js
fwait
call
popf
jns
push
cmp
fcmovnu
mov
or
loopne
imul
push
ret
fsubrs
xor
enter
fimull
fsubrl
inc
test
push
sub
mov
fadds
aad
mov
jae
ret
mov
arpl
lret
cli
je
imul
shll
jno
dec
push
sub
mov
ret
xchg
out
gs
popf
push
stos
or
dec
mov
ljmp
add
xchg
ret
rclb
clc
sbb
test
inc
rcrb
clc
jg
mov
push
aas
xchg
mov
mov
dec
jecxz
shlb
out
out
nop
or
lahf
mov
pop
xor
lret
inc
xchg
xor
shrb
and
sarb
jns
notl
lea
aas
sti
ja
sti
cltd
push
mov
in
xchg
cmp
in
and
xchg
addr16
mov
pop
stos
loop
or
mov
test
dec
pop
push
sbb
pusha
fmul
bound
lds
jg
or
add
adc
out
adc
or
aaa
outsb
sbb
mov
adc
add
int
jp
add
lods
jge
jne
mov
std
sbb
jge
dec
orb
loopne
inc
aaa
xchg
pop
icebp
jnp
popa
adc
inc
adc
in
adc
imul
add
pop
cmp
test
xor
and
mov
sahf
sahf
adc
or
dec
lock
sbb
push
push
add
push
jmp
sbb
mov
cs
enter
adc
ffree
push
mov
in
rorl
xchg
in
cmpsb
mov
push
test
push
pop
pushf
punpckhbw
in
jp
xchg
pop
push
bound
cmc
iret
imul
dec
mov
cmp
jb
lock
flds
shr
hlt
int
adc
dec
jae
dec
rorb
loope
jg
push
pop
mov
stc
aam
fidivrs
daa
enter
test
hlt
adc
push
int
fists
enter
bound
adc
dec
adc
or
stos
adc
clc
ficompl
iret
mov
cld
mov
neg
adc
daa
pushl
roll
stos
and
mov
int
aaa
pop
paddsw
adc
das
gs
sbb
mov
sarb
lock
std
cmpl
test
pop
dec
lret
pop
add
mov
cld
ds
sub
add
fs
fwait
cmp
mov
xor
inc
shll
adc
into
inc
out
mov
add
nop
add
fwait
shl
orl
mov
mov
xchg
push
out
int3
cmp
push
push
dec
sbb
repnz
pop
int3
ss
add
pop
dec
dec
movsb
adc
pop
or
das
inc
ret
sub
test
rorl
arpl
push
push
dec
cltd
adc
add
inc
out
arpl
sbb
jl
sbb
cmp
xor
lock
sub
and
mov
or
fcmove
sub
sub
ret
sub
xchg
xor
adc
in
add
js
in
mov
sub
notl
stos
int
out
adc
subb
xor
jmp
fidivrl
out
stos
sbb
dec
gs
movsl
push
aad
sbb
in
sub
in
int3
nop
jl
mov
mov
in
mov
lds
in
xchg
mov
in
sbbl
rep
sub
sbbl
mov
mov
in
mov
xchg
shll
pop
adc
sub
xor
pop
xchg
and
pop
and
mov
in
cmp
lock
sub
mov
xor
jnp
add
xor
push
or
iret
jno
repz
xchg
pop
dec
pop
add
mov
stos
divb
push
push
testl
popf
aas
jp
pushf
and
pop
or
lock
pop
call
xchg
rolb
insb
shr
mov
rorb
dec
jb
dec
and
and
shll
test
mov
sub
es
test
mov
and
repz
jg
les
xchg
mov
out
test
rcr
out
fs
sbb
rol
imul
dec
mov
je
mov
imul
addr16
pop
sbb
xor
scas
pusha
test
hlt
push
dec
mov
pop
mov
and
sub
mov
int
rcr
jp
jl
jbe
testl
jns
pop
fnsave
movsb
pop
fistpl
test
shlb
in
cwtl
push
jnp
mov
or
div
js
lea
mov
adc
push
jne
pop
add
mov
and
or
dec
pop
in
mov
sti
jmp
jb
push
pop
or
fs
js
cs
mov
pop
or
mov
repz
sub
jle
ds
faddl
rorl
push
push
xchg
aaa
movsl
cmp
pop
dec
dec
dec
xor
xchg
pop
fimull
mov
add
mov
roll
inc
inc
flds
cmp
mov
bound
push
mov
ret
sarb
pop
popf
jo
repnz
push
pop
or
xchg
pop
add
xor
lds
js
mov
jne
inc
pop
dec
adc
mov
jge
push
mov
cmpsb
xchg
inc
xor
in
jnp
mov
repnz
int3
lods
or
div
dec
mov
int3
sub
cmpsl
cmp
testl
cmc
jge
lret
pop
mov
hlt
jecxz
mov
jnp
and
mov
xchg
mov
adc
imul
or
pusha
sahf
and
jmp
jo
test
xchg
dec
pop
push
pop
mov
add
pop
xor
jp
fisubrl
push
lock
sub
sub
dec
sti
cltd
loop
jle
push
lods
xchg
jl
scas
notb
cmp
int3
fdivrl
arpl
aam
fimuls
in
dec
dec
jns
pop
sar
add
push
mov
nop
dec
jp
lock
lock
ret
cmpsl
popa
std
xor
mov
or
ja
mov
ljmp
mov
bound
add
mov
cmp
sub
iret
int
or
mov
imul
xchg
in
or
fsubs
callw
jo
push
and
test
mov
sarl
cld
sbb
jg
fcmovne
into
into
dec
sub
xchg
lods
jae
and
aaa
fisubs
push
or
and
int
int3
cmp
pushf
cs
pop
outsl
les
test
jnp
push
cmpsl
movsb
adc
adc
pop
inc
mov
scas
adc
dec
or
push
out
aad
xchg
das
adc
or
sub
rcrb
jae
jge
pop
fimuls
or
pop
repz
xchg
push
or
push
rol
movsl
jnp
loopne
push
lcall
sbb
mov
sbb
insl
adcl
outsl
inc
xor
add
aas
fisubs
shlb
ficompl
xchg
inc
addb
mov
insb
and
xchg
jbe
pop
mov
scas
pusha
cmp
jbe
std
or
gs
mov
mov
sub
dec
push
add
jno
push
cmp
cmp
lds
dec
in
push
and
fnstcw
lret
popl
sub
imul
push
fdivrp
int
mov
stc
iret
rcrl
pop
or
xchg
inc
sub
push
cmp
enter
adcb
jns
cmp
ret
out
mov
cld
sub
dec
sub
insl
aaa
cmc
cmp
dec
hlt
pop
push
in
xor
sar
mov
mov
rep
sbb
ljmp
fsubs
andl
popa
xchg
push
adc
mov
mov
das
lock
add
push
add
subb
adc
xchg
test
jge
push
xor
or
into
add
xor
xor
sub
movsl
mov
fcoms
cld
out
or
jbe
fs
mov
pop
mov
inc
cmpsl
lea
pop
push
jecxz
movsb
test
jge
mov
or
loopne
mov
repz
push
outsb
in
or
mov
push
or
xlat
mov
js
outsl
jo
sub
mov
jg
pop
sbb
fsubrl
add
mov
ss
stos
inc
cmpsb
addl
cs
xor
sbb
pushf
loope
or
xor
pop
pop
pop
xchg
and
mov
jno
mov
xchg
jge
push
pop
pop
xor
filds
jecxz
gs
jmp
jbe
mov
inc
dec
lret
inc
testb
cmp
mulb
addr16
das
addb
fildl
pusha
icebp
dec
int
je
adc
cmpsl
adc
dec
pop
out
cwtl
enter
push
inc
xor
insl
inc
sbb
cmp
outsb
push
fs
hlt
jecxz
jmp
xor
xchg
jecxz
addl
jae
mov
add
je
psllw
flds
test
push
xor
add
lods
push
loop
scas
xchg
stc
push
test
inc
jmp
test
jne
fsts
imul
push
notl
jnp
icebp
scas
xor
rorl
testb
sbb
popa
xchg
pop
xchg
popf
test
mov
dec
inc
mov
frstor
loope
jle
iret
xlat
add
in
int3
inc
xor
cmp
ds
cvtpi2ps
mov
dec
inc
inc
clc
push
repnz
jl
ds
imul
cld
cmc
adc
imulb
cwtl
cmpsb
in
add
sahf
xlat
lahf
sub
daa
xor
adc
cmp
mov
mov
push
inc
insl
and
sub
es
or
xor
or
inc
loop
sbb
push
jle
mov
das
cmpl
and
add
dec
or
cld
popf
mov
mov
loope
pop
daa
ss
inc
imul
jns
pop
mov
push
and
mov
pop
iret
push
loope
shl
test
mov
cmc
popa
lods
fldt
aad
pushf
clc
pop
test
div
and
dec
mov
jo
repz
push
push
dec
lahf
test
pop
jl
xor
mov
cmp
pop
ret
cmpsb
fdivs
popa
sarl
mov
es
pusha
mov
loope
jnp
pushf
ss
mov
dec
in
in
aaa
mov
sahf
rcrl
test
jo
xor
and
or
mov
aam
push
movsl
insb
jno
adc
jns
pop
movsl
addb
xchg
xchg
inc
add
cmp
sub
mov
subl
faddl
fldl
test
iret
loope
mov
cld
sub
sbb
mov
clc
rcll
mov
xor
inc
cli
mov
cltd
xor
in
dec
cmpsl
pushf
test
cmpsb
jp
mov
push
cmpsb
xor
stos
push
and
mov
stos
xchg
xor
inc
mov
xor
mov
cmp
jl
push
aaa
pop
cs
dec
mov
out
mov
add
sarl
shlb
jnp
das
lret
xlat
into
imul
out
jge
adc
mov
fnstsw
cld
in
scas
xchg
icebp
aas
push
es
and
adc
fmull
fdivrl
jb
xchg
mov
fcoms
inc
mov
mov
mov
out
xchg
negb
and
jnp
mov
pop
jle
negl
and
fs
pop
adc
xor
sub
xor
xchg
pop
and
mov
or
int
ret
cmp
js
popf
and
adc
push
sub
out
xor
int3
stos
out
cmp
bound
lock
push
aam
dec
sub
aas
sub
dec
or
inc
lock
pop
test
loopne
sbb
gs
stc
and
loope
xchg
jecxz
sub
xor
xlat
pop
pop
xchg
movsb
es
and
shlb
cmp
sbb
sbb
pop
mov
sbb
push
cmp
xor
sub
repnz
js
movsb
fsubrp
ja
je
loopne
cmp
cmc
inc
jle
call
xlat
or
icebp
jle
iret
lret
and
mov
test
or
xlat
sub
jns
jmp
ds
push
sbb
mov
pop
add
jno
dec
add
adc
imul
mov
pop
loop
iret
loop
push
dec
hlt
rol
inc
jmp
fs
dec
inc
push
popa
dec
nop
xchg
xor
jne
outsb
add
fwait
xor
and
mov
fcompl
mov
movsl
aam
sbb
adc
push
jmp
sub
pop
jmp
lcall
push
inc
sahf
call
loopne
jl
ja
pop
mov
jle
arpl
and
pop
fnclex
jbe
dec
push
jb
jge
outsb
fmull
aam
push
mov
lds
mov
add
push
pop
out
fcoms
adc
call
or
icebp
jno
cmp
xorb
shlb
jb
adc
adc
fs
push
adc
dec
mov
test
and
stos
mov
lcall
loope
les
pop
dec
mov
push
and
icebp
cmp
loopne
xchg
mov
testl
call
fisubs
es
fcmovbe
nop
push
pop
add
insb
js
add
or
jae
xor
das
test
out
cmp
ds
inc
pop
xchg
out
push
pop
jne
add
xchg
cltd
ret
or
xor
addr16
lock
std
jg
ljmp
adc
gs
lret
mulb
lahf
imul
int
sub
clc
add
fisttpll
mov
lods
cld
cld
fbstp
imul
mov
in
mov
and
mov
repnz
pushf
pop
cmp
dec
mov
mov
dec
enter
adc
cmp
divb
adc
jl
ljmp
push
lods
sub
repnz
cmp
pop
jmp
jmp
mov
xchg
jo
xor
lahf
lret
rcrb
arpl
ds
lds
and
fcoms
mov
jg,pn
inc
pop
ds
les
sub
lret
sub
add
test
mov
push
mov
add
out
mov
dec
cmpsl
push
out
cmc
push
mov
inc
xor
push
pop
lods
mov
movsl
sbbl
inc
and
adc
xor
or
std
lcall
inc
xor
cwtl
neg
loope
imul
in
jne
dec
jb
inc
call
test
loope
test
and
test
leave
mov
dec
pop
out
mov
push
ja
push
mov
jo
jae
out
cwtl
imul
jecxz
or
dec
scas
jo
push
loope
ret
adc
pop
ret
hlt
jo
jns
mov
leave
push
loope
bound
dec
sub
jmp
lods
jle
mov
lcall
push
push
fisubs
xor
mov
add
mov
out
and
ss
sbb
mov
scas
bound
xchg
lret
sarl
inc
inc
in
mov
pop
adc
inc
shl
mov
test
sbb
pmaxsw
fdivr
sbb
mov
arpl
mov
insb
sbbb
push
jl
mov
scas
js
xor
jno
jmp
or
js
jl
es
stc
dec
cmpsl
inc
xor
inc
fimull
push
and
enter
movsb
mov
sbb
aaa
data16
lea
dec
dec
fldl
cmp
rcrl
insl
cwtl
adc
movsl
mov
mov
pop
jo
and
lret
cld
call
dec
sbb
call
xchg
jnp
fsubs
das
sbbb
cs
xor
scas
lock
sbb
inc
mov
call
jp
pusha
add
inc
mov
jns
js
mov
rorl
jge
sub
adc
push
xor
push
shll
xchg
and
adc
addr16
adc
pop
sbb
jmp
mov
pop
add
mov
fistps
negl
fsubrl
in
mov
xchg
xchg
not
aad
pop
mov
ret
std
mov
add
cmc
test
jl
sbb
sbb
icebp
aaa
jg
stos
hlt
bound
mov
jno
scas
xor
inc
xlat
add
roll
in
inc
fs
mov
in
sbb
mov
sbb
and
popf
and
cmpsb
inc
ja
jne
mov
lods
mov
lret
sbb
dec
cmp
sub
push
ss
mov
fld
cs
mov
adc
arpl
js
add
pushl
shlb
add
in
enter
dec
push
neg
in
push
rcl
pop
mov
lds
int3
imul
sbb
cltd
xor
or
jnp
rclb
jno
out
mov
xor
xchg
mov
stc
jno
push
jb
cmp
dec
xor
sub
adc
adcl
cltd
add
mov
xchg
sbb
roll
adc
jne
mov
or
loopne
sbb
insl
pop
aam
daa
dec
xor
dec
flds
or
jae
repnz
jns
rorl
nop
int
mov
popa
lcall
fidivrl
lods
pop
out
lods
lock
adcl
pop
inc
enter
bound
mov
jns
test
ret
dec
aas
nop
movsl
pop
jecxz
lods
cmp
cwtl
call
imul
push
inc
stos
data16
push
dec
sub
and
or
loop
sti
add
mov
cmpsb
aad
bound
xor
icebp
sahf
push
int3
inc
xchg
ficompl
lcall
mov
or
imul
add
and
out
movsb
ficompl
loope
loope
cld
adc
push
fdivl
repz
or
sarl
jbe
cmc
or
lods
bsf
icebp
or
cwtl
pop
ret
rcrl
mov
push
rorb
mov
notl
test
jo
sbb
push
xor
iret
pop
xor
test
jmp
jbe
sbbl
rcrb
or
xchg
adc
imul
push
sbb
push
test
aam
mov
lods
sti
dec
push
mov
jo
mov
pop
or
inc
ljmp
pop
fisubl
mov
inc
xor
sti
pushf
arpl
rorl
or
xlat
add
xchg
pop
xchg
popa
arpl
xor
loope
sub
or
jne
mov
mov
xchg
sti
das
movsb
pusha
das
xor
ljmp
ds
mov
call
push
mov
stos
push
outsb
scas
dec
lret
cltd
out
movsl
dec
sbb
cmpsl
sub
jge
push
mov
cmpsl
gs
sbb
adc
mov
shll
out
cwtl
push
inc
jecxz
rcrl
mov
ds
and
jmp
xchg
into
cmp
add
ficoml
mov
data16
mov
pop
lret
or
js
ljmp
jge
test
fbstp
add
lea
call
sbb
jne
add
lods
jg
lods
cwtl
les
nop
push
sbb
push
ret
stc
pushf
iret
sbb
ljmp
or
adc
jns
call
xor
pushf
lret
ds
push
repnz
fidivrl
es
pop
int3
inc
rcll
dec
inc
cmp
insl
adc
xor
scas
ret
or
jp
xchg
jl
lods
jbe
push
scas
out
push
add
and
xchg
out
mov
pop
stos
movsl
fbstp
mov
scas
je
out
sbb
mov
xchg
pop
andl
leave
stc
insb
pushf
stos
dec
out
test
leave
cmp
xchg
pop
push
bound
or
add
aam
push
and
sub
pop
inc
or
cmpsl
inc
leave
jmp
loop
dec
testl
out
ljmp
jle
fstl
ftst
lods
sahf
enter
cmp
xchg
xor
inc
inc
sbbb
xchg
jl
jno
pop
xchg
cltd
outsl
inc
or
jns
bound
aad
jb
push
xchg
pop
sub
mov
xchg
shlb
out
ja
sahf
push
loopne
push
cmp
xchg
mov
psubb
cmp
pop
push
ja
ret
ret
xchg
and
add
nop
or
mov
cmpsl
sbbl
mov
outsb
test
fnsave
sbb
xor
mov
cmpl
mov
add
jge
xorl
mov
mov
pop
insb
pop
fistpl
or
scas
sub
inc
inc
arpl
sbb
push
es
arpl
jns
iret
cmp
mov
ret
out
fisubrs
test
jns
test
sbb
pop
jbe
test
aam
in
inc
mov
sbb
mov
xor
outsb
adc
loope
and
cli
mov
mov
sub
push
pushf
inc
ret
and
xchg
aam
jecxz
cmpsl
icebp
xor
push
add
mov
loope
mov
pop
push
sub
ret
cmp
dec
imul
ss
pop
xor
mov
loope
mov
add
gs
adc
mov
outsl
les
or
push
sbb
mov
jbe
mov
mov
cs
or
xor
push
pop
test
xchg
sub
mov
push
imul
jl
mov
ds
sub
mov
ror
jnp
sbb
and
mov
pushf
loop
fadds
push
sub
movsl
mov
addl
pop
cmp
inc
cld
cld
arpl
jns
ss
add
cmpsb
into
dec
sub
pushf
sub
dec
les
lds
cltd
inc
insw
pushf
ds
or
xchg
cwtl
cld
mov
cmpsl
xor
xchg
dec
jle
or
fwait
clc
jecxz
fcmovnbe
dec
daa
imul
mov
das
cmp
imull
mov
pop
outsl
or
mov
or
ret
sub
call
cmp
mov
xchg
inc
xor
rcrb
cld
inc
sti
dec
out
dec
es
inc
scas
push
pop
inc
outsb
nop
adc
cmpsl
or
iret
jnp
cmp
aas
mov
cmpl
cmc
int3
pusha
and
fisubs
jne
push
sbb
pop
repz
les
in
push
xchg
jbe
test
push
ja
aam
jge
cmp
cmp
and
imul
data16
mov
into
lcall
mov
pop
sahf
xchg
popf
xchg
fwait
xchg
mov
ret
mov
aad
scas
mov
xchg
push
jecxz
mov
mov
pop
aas
daa
fildl
push
icebp
rorl
sbb
sbb
ret
repz
int3
out
mov
nop
xchg
push
loop
mov
push
in
or
mov
jl
movsb
sbb
leave
mov
jno
std
setb
fisttpl
ficoms
gs
inc
fdivrp
mov
dec
andb
cmpsb
mov
adc
mov
cwtl
cltd
jl
xchg
lods
and
out
dec
pusha
repz
xchg
jae
xor
sarb
jle
mov
sbb
sbb
jne
inc
jno
data16
xor
in
jp
and
and
popa
pop
and
in
inc
mov
popf
filds
pop
fnstsw
add
cmp
mov
lcall
dec
inc
xchg
in
jl
xor
mov
mov
xchg
sub
js
cmp
sbb
dec
movsl
or
bswap
and
in
mov
xchg
inc
loope
shl
test
loopnew
ja
mov
repnz
mov
mov
shlb
cli
or
xchg
shlb
mov
cmp
cmp
push
jl
pop
sub
repz
cmp
push
aaa
leave
inc
cmp
loope
cmp
mov
out
int
ficompl
aad
pop
push
mov
sahf
fadds
out
sahf
jg
inc
jl
sub
cwtl
scas
sub
sbb
xor
sbb
xor
fmull
mov
fstpl
adc
mov
shr
test
mov
adc
dec
sarl
test
xor
int
dec
rol
jne
xchg
shrl
or
daa
inc
pop
or
es
dec
xchg
pop
lahf
sbb
xor
mov
clc
fildl
jg
and
testb
movb
xor
cmp
js
pop
lds
lret
cmp
arpl
adc
or
or
inc
test
psllq
inc
inc
dec
les
xor
cmc
movsl
jge
ds
ret
sbb
das
jmp
cmp
leave
es
gs
insl
daa
fstpl
and
and
js
out
and
mov
js
es
mov
lods
cmpsb
xor
outsl
out
dec
cld
inc
mov
pop
mov
add
lds
int
and
push
fs
movsb
stos
imull
stos
dec
jne
sub
jno
cwtl
fbstp
cltd
add
or
pop
lock
jg
sti
jnp
call
test
dec
jbe
sbb
or
shlb
loope
scas
js
cmp
aas
jg
pop
sbb
lret
pop
xor
popa
jb
pop
cwtl
ljmp
sarl
test
xor
sub
mov
inc
jne
shll
pop
popa
pop
setne
popf
cltd
cmpsb
outsl
lret
gs
jae
out
push
cltd
dec
icebp
xchg
outsl
iret
sar
dec
repz
sbb
jle
je
cmp
aad
or
movb
cltd
sbb
mov
xor
and
arpl
push
jmp
and
roll
sbb
xor
jmp
add
pusha
sub
sbb
mov
mov
test
inc
add
and
mov
pop
int
jnp
fdivl
sbb
sar
sub
mov
pop
outsl
js
xchg
repnz
add
jns
mov
rclb
mov
sub
xor
inc
dec
inc
test
sti
or
pop
mov
cld
js
mov
mov
jns
clc
pop
add
jb
pop
mov
out
cmc
cli
lods
sahf
xchg
push
mov
jecxz
ds
shl
mov
fcomps
xchg
mov
in
mov
adc
test
and
popa
repnz
iret
jecxz
mov
das
and
xor
and
mov
pop
inc
fwait
add
mov
fsubrl
or
insb
jae
int3
xchg
xchg
jmp
out
xchg
fadd
xchg
js
insl
stos
stos
fwait
or
ss
bound
subb
pop
insl
inc
push
gs
in
mov
cltd
jns
mov
sarl
push
loop
lods
mov
cmp
mov
push
int3
fcmovnu
in
inc
or
mov
and
dec
inc
lea
lock
in
xchg
ja
scas
add
mov
int3
xor
inc
pop
movsl
mov
mov
mov
shll
push
hlt
lret
mov
scas
divl
dec
fwait
mov
clc
clc
or
ja
mov
cmp
dec
jb
add
jge
pop
cwtl
sbb
stos
cld
jb
hlt
rorb
xor
sahf
and
std
jne
shl
es
mov
pusha
adcb
scas
arpl
ja
aaa
mov
rcrb
movsb
pop
xchg
sar
pop
inc
sbb
lods
inc
cltd
movsb
mov
mov
push
add
mov
arpl
pop
inc
sbb
mov
sbb
sarb
xchg
and
out
add
sbb
ja
jecxz
orb
pop
jne
sbb
lret
filds
jmp
xor
leave
hlt
ss
insl
fbstp
scas
cmpsb
out
mov
inc
push
ljmp
hlt
jle
mov
outsl
cld
cmp
out
mov
push
out
aas
ret
out
mov
mov
in
xor
mov
icebp
mov
jns
xchg
dec
addr16
lds
loopne
push
cld
andb
lahf
xchg
mov
and
out
adc
or
iret
pop
adc
jp
mov
sahf
pop
jecxz
lods
mov
loopne
sub
lods
adc
in
push
mov
cwtl
jle
dec
jmp
jecxz
scas
aam
mov
mov
jns
inc
sarb
pop
or
dec
dec
sub
mov
mov
es
jecxz
xlat
push
mov
inc
dec
and
cmpsl
and
mov
filds
jb
sub
cmp
leave
and
sbbl
or
popa
fsubr
adc
adc
inc
jle
stos
xlat
clc
clc
xchg
mov
icebp
daa
popf
xchg
scas
into
inc
out
dec
add
or
test
push
jb
sbb
leave
mov
insl
std
push
and
fsts
inc
add
dec
add
jmp
inc
rorl
lret
jns
cli
jb
gs
adc
inc
cmp
daa
sti
insb
mov
push
imul
je
cmp
xchg
and
aaa
fmul
cmovo
insb
sbb
arpl
testb
mov
ret
insl
outsb
jae
imul
jmp
pop
pop
movsb
jl
popf
inc
stos
mov
inc
xor
fnstenv
pop
inc
add
sahf
scas
pop
test
mov
cmp
dec
lock
jl
fdivl
push
aas
data16
or
ss
jae
das
std
cmp
pusha
lea
sbbl
jno
push
sub
jmp
push
sbb
fbstp
xor
fmulp
popf
loope
dec
xor
std
sbb
mov
hlt
push
jg
shrb
insb
dec
add
fldt
mov
shrl
inc
sbb
scas
cli
jge
mov
mov
es
pop
in
inc
int
repz
and
js
dec
sbb
orb
jno
jno
xlat
pusha
test
shll
popl
xor
xchg
daa
mov
cmpsl
xchg
push
test
nop
sbb
mov
ffree
mov
scas
cmp
popw
mov
fistps
ljmp
mov
lods
ret
ds
add
add
jns
fsubs
pop
and
inc
mov
addl
cld
es
leave
fwait
mov
xlat
shll
loope
push
mov
sub
rorb
movb
cld
push
sbbb
cmovno
mov
inc
push
fistps
test
xchg
mov
repnz
add
or
mov
adc
sub
aas
mov
out
and
xor
orb
sahf
arpl
inc
or
call
jp
rcrl
push
cmp
jmp
cmp
and
lahf
scas
mov
jmp
int
push
jg
in
std
scas
xor
arpl
mov
xlat
pop
cmpsl
fnstenv
push
jl
stos
stc
repz
inc
imul
jg
dec
cld
sbb
daa
lret
enter
testb
mov
dec
data16
push
and
xor
sub
daa
xor
fildl
mov
lcall
mov
push
xchg
lds
int
lock
push
aam
mov
enter
mov
lods
in
jl
mov
push
pop
sahf
imull
push
jle
loope
das
sti
add
jno
shll
lds
lea
mov
outsb
adc
push
frstor
jecxz
sbb
or
dec
add
or
pushf
add
xlat
in
stos
push
jb
inc
enter
sti
or
mov
fimuls
and
nop
mov
lret
inc
push
pop
push
push
and
adc
cmp
cmp
loopne
je
std
lods
dec
xchg
pop
lods
mov
sbb
pop
lahf
adcb
sub
mov
or
cs
call
dec
add
fcomps
add
rorb
loopne
inc
movsl
scas
dec
lods
inc
push
bndldx
adc
test
or
inc
fstpl
push
test
jg
fsubrl
or
pop
jl
imul
sub
cld
add
adc
imul
sbb
aaa
and
dec
ss
xchg
pop
movsl
fwait
fwait
inc
sahf
lods
xor
pop
xchg
mov
dec
push
cmp
roll
lods
dec
hlt
add
testl
add
lods
pop
or
jmp
fnstenv
jg
cmp
or
in
popf
xor
mov
call
outsl
icebp
or
push
cmp
outsl
jne
loop
lock
mov
sahf
pop
jnp
mov
or
inc
das
stc
in
rclb
cmp
into
lcall
cmp
cld
fs
xor
push
jge
dec
and
xor
aas
gs
mov
sbb
adc
in
mov
lcall
dec
stos
jecxz
fisubrs
push
rolb
mov
mov
and
out
js
adcb
add
leave
and
dec
mov
jne
push
push
div
fldl
fdivr
cmpsl
add
ja
pop
aas
out
sub
cmp
enter
jl
pop
cmpsb
into
jle
sbb
sub
mov
mov
mov
outsl
lret
test
jge
pusha
mov
mov
xor
jg
scas
rorl
pushf
out
data16
dec
ret
dec
mov
imul
jb
mov
mov
pusha
nop
movsb
sub
sbb
arpl
pop
inc
fildll
and
sarb
repz
add
mov
push
cs
mov
sub
sbb
insl
and
fidivl
cs
bnd
xor
sbbl
or
sbb
pop
adc
mov
dec
or
sbb
movsl
xor
test
std
mov
sahf
lds
out
imul
in
pop
lahf
pop
data16
cmp
das
arpl
fisubs
leave
mov
cli
mov
rcll
mov
imulb
aas
add
dec
cmp
pop
lahf
xchg
xlat
or
jle
xlat
loop
aas
outsl
or
outsb
xor
cmp
sahf
mov
idivb
outsw
jns
out
xchg
mov
test
jl
mov
inc
jbe
xchg
xlat
jmp
sub
jo
mov
call
test
push
arpl
lahf
push
mov
inc
bound
jo
dec
sti
dec
out
ret
out
je
add
mov
pushf
lea
xlat
mov
jge
push
xor
xchg
std
lret
aad
in
jbe
jo
push
xchg
aaa
loop
sarl
cli
cli
cmp
dec
jns
out
repz
lock
ret
jle
push
jne
repnz
pop
hlt
sahf
mov
adc
lock
fucom
xlat
enter
push
pop
adc
loope
mov
das
pop
mov
push
iret
fmulp
jmp
push
push
cwtl
mov
push
into
rcl
mov
xchg
fisubrl
pop
mov
xchg
cli
or
int
sbb
mov
push
ljmp
lock
fbld
fldl
out
xor
incl
mul
fsubr
cmpsl
xlat
pop
into
jno
jle
stc
sub
pop
push
sub
out
fstl
xlat
movsb
mov
sbb
jmp
add
mov
stos
decb
es
push
ss
xor
dec
jne
jbe
lds
iret
sub
add
ss
out
out
call
inc
shrl
sub
cmp
fstpl
adc
cli
ss
mov
xor
fidivl
cli
in
mov
stos
mov
stos
push
repz
insb
adc
jmp
pop
mov
push
lock
mov
cld
lock
test
sub
test
stos
ljmp
and
cmp
fimull
jae
in
add
lea
stos
imul
jb
movsl
dec
mov
lcall
lds
aas
jb
imul
test
movq
adc
sub
xchg
xchg
into
dec
mov
notb
sub
inc
jmp
jo
mov
sub
fisubrl
mov
cmp
inc
jne
mov
movsl
sahf
cli
xor
xchg
pop
lahf
mov
sbb
addl
mov
mov
dec
pop
pop
jnp
sbb
sbb
mov
jge
cmp
mov
out
push
xchg
ja
lods
bound
mov
pop
pop
ret
inc
lods
xorl
adc
xor
inc
sarl
mov
movsl
jl
adc
leave
imul
insb
int3
cmc
add
jno
ja
addl
jbe
add
xchg
mov
addr16
in
stc
cmp
ret
and
mov
dec
jle
push
call
push
test
pop
dec
adc
flds
dec
push
cld
daa
mov
in
insl
dec
cmp
and
inc
lods
and
in
xlat
test
sub
int3
sub
aad
js
mov
scas
push
sbb
jp
aam
leave
and
xchg
push
out
or
mov
pop
in
lods
in
lret
jecxz
jmp
inc
lods
pop
sub
fiaddl
mov
mov
mov
out
add
out
ja
dec
mov
cs
add
fsubrs
daa
dec
outsb
jae
push
out
in
dec
cld
loopne
outsb
notb
repz
js
aas
pusha
ret
in
mov
lcall
or
xchg
mov
dec
xorb
hlt
inc
out
subl
xor
les
sbb
enter
mov
jmp
loop
stos
gs
repnz
sub
inc
fidivrs
sub
loop
test
mov
stos
cwtl
das
sti
xor
gs
xchg
pusha
stc
testl
push
test
mov
jge
xor
scas
clc
inc
mov
adc
ljmp
push
ja
les
pop
xchg
std
jbe
xchg
pop
pop
int3
inc
lcall
cmp
dec
repz
int
push
jmp
sub
xchg
pop
mov
xchg
pushf
mov
divl
xchg
pushf
int
jg
aas
xchg
out
xchg
mov
mov
lcall
lcall
or
mov
outsb
movsl
and
test
cmp
and
sub
sub
xor
push
lret
jl
je
push
fidivrs
or
fmuls
xchg
jae
dec
mov
and
stc
xor
daa
pop
ds
outsb
ja
push
dec
scas
scas
fisttps
mov
xor
xchg
sbbl
dec
xchg
repnz
ds
xor
pop
addr16
aas
outsl
std
aas
cltd
hlt
mov
inc
lret
dec
add
inc
and
in
mov
xor
pop
add
xchg
adc
iret
pop
movsb
mov
dec
push
addb
xchg
rorb
add
stos
outsl
mov
shll
test
fistl
mov
rol
aam
jbe
push
pop
lret
pushf
mov
xor
out
mov
jle
mov
xchg
in
movsl
cli
outsl
rcrb
jae
jmp
jb
iret
ja
push
out
push
pop
adc
fistpll
cli
fstl
cld
mov
jge
pop
out
or
dec
mov
mov
fimuls
mov
pop
jmp
pop
test
mov
jb
mov
fldl
and
xor
ljmp
orl
stc
stc
lahf
jp
rep
fdivrl
xlat
aad
cmp
sub
mov
lcall
pop
and
pop
cmp
push
cwtl
in
mov
movsl
xchg
in
fidivl
xchg
imul
cli
xchg
cwtl
ja
sti
or
test
aam
fisttps
stos
cmc
xor
outsb
or
clc
sbb
inc
xchg
jge
mov
lods
mov
ds
dec
sub
aas
cltd
fcompl
imul
outsb
cmp
mov
jno
mov
cmpb
and
mov
rol
aad
outsb
popa
shll
faddl
pop
addr16
adc
fildll
cltd
lds
push
push
ljmp
mov
out
aas
mov
jg
cwtl
sbb
cli
push
lock
mov
mov
movb
and
and
mulb
roll
jnp
mov
mov
dec
out
xchg
loop
pop
lcall
jmp
rcrb
lret
cmc
or
dec
sbb
outsl
jecxz
add
popa
pop
and
popa
push
sahf
push
xchg
pop
sbb
cmpsb
pop
push
cli
rorl
jp
roll
jle
mov
ret
inc
lret
xlat
mov
test
addr16
or
add
and
fisttpll
lds
daa
mov
inc
movsl
cld
cli
enter
xchg
lea
and
cmc
dec
movsb
rorb
lret
nop
ja
xchg
sub
iret
cmp
cmp
decb
pop
loopne
movsb
popf
lret
push
fisubs
outsl
in
idiv
push
divb
sbb
xlat
push
mov
dec
enter
sbb
pop
scas
into
mov
dec
daa
mov
sub
popf
sbb
shlb
jns
jecxz
fcoml
lcall
sub
jg
daa
out
inc
and
ret
ljmp
sub
mov
or
xchg
push
mov
fs
loopew
lods
sub
mov
mov
mov
dec
lret
sbb
pop
movl
xchg
inc
mov
shll
inc
mov
push
and
cmp
mov
push
jl
lds
and
sub
xchg
test
daa
and
xchg
je
pop
mov
pop
xor
cld
and
inc
jle
push
in
cmp
mov
lods
in
xchg
jb
sahf
lret
sub
pusha
inc
loopne
repz
js
cmp
addr16
push
bound
mov
inc
pusha
sbb
xor
sub
aas
loopne
ss
jnp
jns
mov
pop
or
pop
cli
cmpsb
or
xor
or
test
ljmp
icebp
adc
aaa
pop
fisubs
inc
sahf
or
ja
test
stc
jp
cli
pcmpeqb
cmovnp
dec
test
xchg
xchg
fistps
jmp
push
push
pushl
shlb
in
or
je
idivl
xor
push
inc
fisttpl
sbb
mov
xorl
int
inc
sbb
stc
movsb
fimull
into
ja
lock
iret
into
mov
or
jp
repz
lret
insl
adc
cld
data16
ljmp
lea
fwait
in
inc
dec
mov
mov
jecxz
jecxz
or
fwait
imul
push
xor
shrb
repz
das
mov
lds
push
test
mov
pop
add
out
xchg
lcall
cmp
ss
sahf
scas
inc
pop
sti
aaa
fs
insl
mov
adc
xchg
lahf
ss
sub
pop
sbb
in
dec
sub
movsb
mov
imul
jae
clc
mov
jle
fisttpl
pusha
jl
pop
fidivrs
test
add
test
mul
jno
mov
add
push
push
mov
add
repnz
or
imulb
mov
dec
and
and
lock
scas
add
adc
scas
out
std
push
mov
mov
rcl
mov
sub
lret
inc
mov
pop
mov
sub
inc
sti
mov
mov
mov
test
aam
sbb
test
movsl
inc
shlb
xorl
xchg
and
into
mov
fbstp
dec
mov
mov
push
mov
push
pushf
xor
mov
pusha
mov
inc
ret
dec
rclb
test
loopne
addr16
xor
xchg
dec
imul
stc
dec
imul
dec
movsb
movsl
mov
lds
cwtl
leave
adcl
mov
vminss
push
pop
out
mov
hlt
insb
dec
ja
testl
ret
clc
int3
fbstp
xchg
movsl
jp
inc
insl
faddp
jno
outsl
sar
mov
mov
imull
fwait
cltd
lcall
ud0
push
cmc
mov
jbe
movsb
mov
ss
mov
fldt
jnp
aas
lret
xor
subb
mov
popa
enter
mov
imul
jp
shr
test
jmp
jmp
push
in
fstenv
inc
mov
ds
stc
push
hlt
fmull
jmp
aaa
les
xor
movsl
call
sbb
sub
insl
xlat
xor
in
imull
jns
dec
mov
ljmp
mov
shrb
ret
insb
outsb
dec
mov
inc
roll
in
test
mov
orl
push
jl
repnz
mov
mov
test
cmp
mov
sbb
popa
fwait
adc
and
mov
xchg
popa
or
scas
clc
xchg
sbb
dec
cmpsb
dec
jg
es
cltd
popf
mov
aam
aad
add
arpl
out
lock
xor
out
push
add
stos
or
dec
insb
jne
rsm
fstps
push
lcall
sbb
fsubrp
jns
cmp
jle
and
push
repz
push
std
clc
outsl
loope
arpl
fninit
stos
lods
mov
pop
nop
fwait
mov
inc
inc
in
push
cwtl
push
sbb
cwtl
xchg
pop
sbb
inc
pusha
loopne
ret
out
push
push
dec
dec
pop
push
imul
dec
mov
sub
imul
mov
pop
iret
rcr
out
jecxz
lahf
in
repz
sti
jne
mov
mov
fidivl
cmp
popf
push
push
pop
lds
cwtl
in
sub
fists
xor
dec
adc
stos
mov
mov
bound
pop
ja
mov
fisttps
int3
mov
outsl
rol
pop
pop
jecxz
mov
ret
jl
ss
xchg
adc
out
jmp
jg
dec
sarl
adc
sub
xlat
xor
xor
mov
stos
xor
cs
xor
lock
push
sub
sbb
mov
cmp
inc
xorb
stos
xor
pop
adc
mov
mov
cli
or
adc
and
sub
inc
push
cwtl
add
push
sbb
sarb
mov
mov
mov
mov
mov
bound
imul
inc
fisubs
sahf
insb
gs
add
jae
push
and
adc
pop
push
inc
jae
sbb
dec
add
leave
or
sbb
stc
inc
sti
enter
das
and
mov
xor
push
in
cmp
and
scas
sti
das
icebp
pop
mov
xchg
lahf
inc
and
lds
dec
idivl
sub
push
dec
aas
push
cld
lcall
repnz
add
lds
dec
jne
jp
mov
pop
arpl
ret
icebp
pshufw
movsb
addl
inc
enter
xchg
pop
mov
addr16
add
call
fcomps
out
fs
testb
pushf
cmp
ss
repz
lock
cli
es
les
ret
popf
lea
push
lea
cltd
das
fdiv
mov
fwait
out
cwtl
les
dec
xchg
jae
jecxz
pop
shll
mov
cwtl
jbe
add
push
mov
ss
xlat
jnp
or
int
iret
pop
sbb
sbb
lahf
inc
loopne
mov
mov
nop
sbb
mov
ljmp
hlt
xchg
sub
sti
lods
rcrl
jmp
sub
push
adc
lock
les
sbb
fldcw
xor
inc
cmp
leave
fistps
mov
push
icebp
mov
cmp
xchg
bswap
xchg
gs
mov
out
fdivrl
popa
sbb
popf
push
and
rcrb
out
mov
mov
bound
out
lret
fisubl
mov
add
int3
cwtl
dec
cmp
popa
movsb
rcr
pop
adc
mov
hlt
mov
inc
adc
std
test
mov
dec
aad
mov
loop
inc
out
mov
xor
jp
cmpsb
xchg
gs
outsl
adc
movsl
mov
or
pop
jnp
hlt
mov
cmp
rclb
nop
mov
rcl
stc
test
pop
popf
mov
adc
iret
adc
mov
jp
notl
mov
test
mov
cmpsl
jae
xchg
lret
frstor
jecxz
dec
jns
pop
ret
mov
jb
fisubl
push
shrl
or
popa
call
or
addl
pop
rorb
movsb
mov
mov
out
outsl
aad
sbb
or
xchg
mov
ret
in
das
mov
sub
adc
push
insb
adcb
nop
jne
push
push
movsb
cmp
mov
leave
popf
mov
cmp
inc
add
mov
clc
cmp
jp
sarl
arpl
and
and
dec
mov
sbb
sarb
pop
xchg
sbb
pop
adc
sahf
mov
in
daa
call
pop
cli
cmp
in
cld
push
pop
or
xchg
mov
adc
mov
jle
mov
andnps
inc
or
ds
fsub
mov
jns
and
loope
and
out
fisttps
jl
pop
mov
out
mov
xchg
xor
shll
mov
repz
arpl
xlat
mov
std
lret
mov
roll
nop
xlat
add
add
test
sbb
push
jno
or
push
popa
sub
clc
dec
mov
push
adc
adc
jne
mov
adc
add
and
sbb
adc
fs
in
adc
pop
cli
add
repnz
clc
movl
sub
rcl
xor
mov
mov
push
gs
push
add
rol
sub
dec
lock
or
mov
test
cmp
push
mov
stos
outsb
out
pop
inc
mov
in
jmp
xlat
int
js
fs
or
dec
push
jmp
jmp
push
sbb
add
loope
pop
cmc
xor
cmp
cmp
and
fimuls
mov
mull
mov
adc
xlat
push
das
icebp
dec
push
addr16
mov
sub
and
out
adc
or
mov
pushf
or
addb
and
push
fimuls
movsl
inc
jb
sub
sbb
sbbl
cli
lds
insl
stos
and
jmp
push
insl
and
push
sbb
and
dec
sub
aam
cmp
push
hlt
sub
mov
addb
mov
cmc
and
repz
cmc
pop
mov
movsb
enter
in
into
cwtl
mov
in
sti
stc
loopne
jnp
enter
fld
adcb
add
cltd
add
sbb
mov
jge
adc
jl
jne
or
cld
pop
push
pop
mov
xor
or
push
rcr
or
push
inc
sbb
xchg
add
push
int3
int3
jb
jge
das
and
add
in
into
xchg
out
xor
lds
cs
mov
jecxz
loope
or
sar
int
or
jge
adc
fadds
add
cmp
filds
stc
mov
rcrl
jecxz
jg
mov
cmc
push
adc
cli
lret
adc
mov
or
dec
rclb
aaa
sub
or
pop
and
mov
das
clc
cwtl
cld
outsb
push
lahf
dec
pushf
push
cmp
out
add
out
ss
add
aam
xlat
shll
mov
cwtl
dec
sbb
dec
sbb
cmp
mov
scas
mov
xor
inc
fs
xor
jnp
hlt
les
icebp
cmp
test
mov
push
sahf
dec
pop
inc
fcomip
js
sub
xor
addr16
fidivrl
xchg
imul
loopne
xchg
push
fcmovnbe
push
testb
cmp
inc
fisubl
inc
mov
aam
dec
movsl
int3
mov
jo
mov
jle
push
pop
lds
add
pop
push
xchg
add
lret
hlt
sub
std
or
decb
inc
clc
mov
xchg
aad
jle
jle
jo
mov
cmc
jmp
cmpsb
test
sbb
ds
ficoml
mov
sub
daa
ds
mov
subb
jae
shl
jns
jmp
mov
movsb
ret
dec
sub
mov
and
aaa
sbb
mov
fldl
xor
jb
lds
push
mov
mov
aaa
xchg
pop
or
icebp
loop
sbb
lcall
hlt
rcr
enter
xor
push
inc
lret
sbb
cmp
fwait
mov
xor
push
repnz
add
clc
add
insb
test
push
rcrl
clc
mov
push
call
push
xchg
sbb
addr16
ret
pop
mov
and
enter
movsl
xchg
dec
jle
ljmp
push
leave
out
or
loope
pop
decl
inc
mov
xor
lds
mov
fwait
or
cmp
sub
inc
mov
int3
inc
aad
loop
cmpb
insl
xchg
clc
movb
mov
sub
jl
fdecstp
leave
mov
sub
cmp
inc
out
lods
inc
notl
out
icebp
xor
outsb
fstps
cmp
shr
adc
xchg
push
jmp
push
gs
loope
inc
mov
mov
xchg
fisubs
lret
jmp
cmpl
mov
push
mov
repz
out
sarb
pop
js
imul
dec
ret
into
push
aas
inc
or
cmp
xor
in
push
xor
rcrb
or
in
adc
inc
xor
aaa
xlat
cli
stos
lock
xchg
or
jl
pop
std
out
pop
lods
je
sub
loopne
into
stos
daa
add
out
inc
leave
in
enter
pop
or
popf
sub
add
js
push
je
xchg
fidivs
push
out
jo
sub
add
fiadds
pusha
dec
scas
sub
add
orl
scas
push
pop
cmp
mov
push
mov
decl
xor
add
jg
sbb
outsl
dec
add
inc
shll
repz
nop
jl
dec
adc
push
cld
xchg
daa
mov
push
push
in
cli
jle
and
call
sarl
mov
int
in
aad
push
loope
outsb
ss
in
add
mov
shrl
push
in
add
xchg
xchg
pop
out
stc
dec
stc
cmc
mov
sbb
mov
mov
popf
cmpl
adc
loopne
xor
jno
les
repz
push
out
mov
aam
fstl
iret
mov
call
xchg
cmp
mov
dec
jecxz
inc
ds
ficoml
push
test
inc
sbb
push
fs
imul
movswl
push
xchg
jae
cmp
push
cld
lock
out
repz
fisubrs
pop
sub
mov
jbe
dec
cmp
add
xor
in
jp
addr16
cmp
mov
add
insb
xchg
sub
cmp
and
adc
xlat
inc
addr16
mov
mov
and
cmp
push
roll
mov
mov
jo
mov
stc
insb
inc
out
in
sbb
inc
mov
fiadds
push
inc
ja
cs
repz
movsl
sub
cmc
enter
xchg
add
mov
sub
dec
shlb
sbb
jle
mov
daa
inc
push
rorl
jl
movsb
std
xor
insb
outsl
test
adcl
idivb
cmp
xchg
test
adc
cmp
inc
sub
cmpsb
mov
cmp
out
sti
add
jbe
in
jno
sarb
mov
shrl
sbb
fbstp
lcall
jge
decb
das
mov
jno
movsb
or
mov
and
push
adc
popa
lods
xor
jmp
das
out
ret
cmp
ds
fisttps
push
mov
repz
pop
pop
mov
js
in
dec
mov
push
push
pop
repnz
int3
xchg
data16
int3
addr16
fs
rorb
lcall
testl
cmpsl
mov
cmp
sub
outsl
xlat
dec
dec
sbb
push
add
cmc
pushf
test
jp
mov
incb
mov
xorl
pop
adc
outsb
mov
cmc
cld
mov
cmc
fistps
pop
imul
mov
mov
in
addr16
scas
aas
icebp
icebp
and
ret
mov
adc
pop
loop
xor
fsubr
mov
jne
std
mov
inc
imul
std
mov
pop
mov
or
icebp
jmp
sti
cmp
adc
mov
jp
jg
inc
inc
aas
ja
cmpps
xlat
mov
jae
mov
push
je
idiv
test
cmc
jg
popf
insl
jl
addr16
aam
jns
loopne
mov
out
scas
cmp
jge
dec
aaa
idiv
xchg
push
hlt
push
sbb
jle
xor
testb
out
sahf
int
push
aas
lret
div
orl
lods
daa
data16
xor
ds
cmp
scas
mov
pop
dec
xchg
rorb
outsl
sbb
mov
mov
xor
fwait
cwtl
mov
out
lahf
pop
xor
mov
or
hlt
mov
jne
sub
int
std
int3
xor
pop
cmpb
xchg
repz
jo
xchg
imul
int
push
hlt
lds
fdivrs
inc
std
out
mov
or
cmp
ja
sar
fcmovu
out
adc
or
lret
out
jg
sahf
js
pusha
pop
hlt
mov
call
mov
push
mov
shl
push
mov
add
subl
fstps
and
dec
xchg
inc
mov
testb
mov
push
xchg
hlt
xchg
mov
repz
out
xor
sahf
addr16
shlb
testl
push
call
cmp
dec
sbb
add
fildll
pop
mov
inc
sbb
fwait
cltd
push
in
fwait
pop
dec
data16
sub
mov
push
pop
adc
or
xor
xchg
repz
imul
dec
popa
scas
adc
jbe
sub
shr
ja
movsb
xor
test
xor
and
ret
xchg
or
xor
push
adcl
jns
scas
cs
shrl
cmp
dec
add
dec
jbe
outsl
xchg
mov
sarb
ljmp
inc
xor
call
addr16
ret
sbb
clc
mov
shlb
xchg
xlat
cmp
fisubrs
push
insl
mov
dec
mov
mov
cmp
neg
fistpll
or
mov
fdivrl
mov
pushf
lret
andb
xor
inc
and
popf
outsl
push
inc
outsb
jb
jmp
and
call
int
das
jmp
mov
fistps
or
adc
pop
push
or
pop
sbb
add
jp
jle
and
or
xor
sub
aam
cmp
dec
mov
leave
adc
popa
xor
push
fs
pop
mov
add
lahf
sbb
mov
mov
inc
daa
jg
mov
loope
xchg
cmp
push
shlb
test
iret
pop
insl
pop
lock
jbe
push
lods
in
inc
lahf
rorl
sbb
mov
lock
ds
mov
dec
xor
addl
bound
sbb
add
push
repz
or
and
es
cli
dec
jl
orl
adc
jne
mov
push
outsb
aad
push
mov
scas
in
push
jb
mov
push
pop
or
push
shll
roll
pop
aam
dec
xchg
leave
xchg
pop
call
lret
test
leave
dec
xchg
aas
insb
dec
and
lods
repnz
inc
inc
cmpsl
dec
lods
pop
cmp
into
or
mov
mov
pop
ss
ds
jp
sub
inc
cli
ror
jae
nop
movsb
sbb
pop
jle
hlt
movsb
push
ja
cmp
dec
mov
mov
or
int
mov
push
cmp
pop
sbb
jge
fcoml
test
les
pop
push
pop
lods
out
xchg
sub
call
dec
aaa
jnp
pop
adc
mov
xor
push
jb
inc
push
cmp
and
popf
mov
xor
jbe
enter
jnp
mov
pop
jb
xchg
and
popf
aad
fld
push
lret
leave
mov
push
in
jb
les
sbb
cmp
loopne
int3
add
fcomip
sarb
les
mov
jle
in
insl
inc
sahf
adcb
int
mov
sub
add
xchg
mov
xor
or
cmp
repnz
ja
rorl
push
jecxz
sti
filds
pushf
jb
out
add
repnz
popa
int3
add
jae
jbe
dec
dec
les
les
xchg
lock
dec
repz
xor
shlb
scas
xlat
leave
jno
pop
xlat
add
or
pop
popf
subb
adcb
push
pop
clc
jg
lret
push
notl
jle
aam
rorb
mov
leave
and
icebp
stc
push
sub
icebp
jo
add
subl
test
adc
jne
je
test
popa
push
cmp
sbb
fsub
or
push
test
ds
xchg
sbb
nop
fs
int
rol
xchg
and
cld
adc
pop
loope
scas
imul
adc
test
sarb
inc
push
movsl
jp
mov
addr16
jno
sbb
daa
testb
cs
rcrl
fs
pop
xchg
roll
daa
push
add
fistpll
adc
or
stos
xor
pop
je
inc
mov
fwait
push
das
pop
cmp
pop
aaa
xor
mov
addr16
cmpsl
adc
xchg
inc
movsb
sbb
cmc
jp
add
jp
fmulp
dec
dec
mov
jne
loopne
into
cs
mov
lock
sbbl
mov
daa
mov
leave
xchg
mov
xlat
nop
lret
jbe
xchg
popa
push
and
xchg
popa
dec
xor
pop
mov
inc
xchg
xor
lods
mov
movnti
cmp
leave
and
mov
pusha
in
add
pop
sub
inc
xchg
push
aam
repnz
addl
fimuls
sbbl
cwtl
xchg
mov
xchg
out
repz
sbb
rolb
arpl
cmp
mov
jne
pop
inc
ds
sbb
ret
and
mov
flds
sahf
sbbl
sbb
hlt
pop
call
fdivl
pushf
inc
mov
jl
xchg
inc
jns
sti
mov
outsl
fcoms
xchg
jp
xor
push
in
cmp
dec
sbbl
add
jg
jg
addr16
test
cmpsl
add
ljmp
xlat
into
out
cmpsb
ja
scas
mov
sti
xchg
jns
xchg
cmp
cmp
test
inc
jp
aam
bound
sbb
out
xchg
leave
insb
imul
ds
es
mov
jle
out
sbb
sbb
or
loopne
mov
adc
jae
std
les
in
fldl
mov
inc
movsb
xchg
or
fstpl
adcb
roll
mov
flds
sbb
mov
mov
stc
test
pop
add
stos
icebp
scas
mov
pop
xor
add
subl
in
enter
aad
sub
stos
jge
push
jo
add
push
dec
jae
push
or
into
fwait
jl
mov
lods
cli
cmp
xchg
mov
scas
or
mov
inc
sahf
leave
dec
push
add
jbe
orb
loope
inc
insb
or
xor
fiadds
repnz
add
into
xlat
push
jl
psrld
aaa
cmpsb
inc
clc
sbb
roll
push
jns
ljmp
test
or
xchg
fwait
mov
and
call
ja
stos
cmp
jae
out
cld
push
sbb
lcall
jns
out
dec
mov
scas
push
ret
enter
cmp
mov
and
cmp
mov
outsl
mov
in
mov
cltd
scas
xchg
dec
pushf
sbb
pop
pop
cmp
fld
sub
stos
sub
add
pop
insb
inc
sub
mov
mov
cli
xchg
fs
dec
in
mov
and
and
icebp
inc
cs
in
addr16
xchg
shll
push
and
mov
xchg
cld
cmpb
mov
mov
and
into
popf
call
pushf
mov
cs
movsb
mov
cmp
dec
sbb
into
rcrl
or
pop
addr16
mov
in
xor
ds
xor
std
fnsave
bound
jge
jns
iret
sti
adc
pusha
in
push
insb
xor
push
arpl
jp
mov
out
insl
stos
jne
jmp
mov
add
mov
sarb
out
jp
call
bsf
ljmp
jmp
pushf
lea
add
push
add
test
cmp
inc
out
lcall
mov
jns
inc
jno
pop
mov
push
cmp
mov
loope
mov
rcrb
out
aam
sub
xchg
xchg
mov
and
iret
shrb
mov
fcoml
pop
int
inc
scas
jmp
pop
stos
incb
cwtl
jmp
outsb
cld
cmp
ljmp
cld
cmp
mov
xchg
mov
mov
movsl
cmp
stos
stos
out
push
imull
sub
aaa
test
pop
lfs
pop
jg
arpl
mov
fidivrl
jmp
fisubs
ret
nop
jle
inc
pop
stc
mov
add
sub
cmp
out
enter
scas
js
arpl
jmp
shll
xchg
sbb
sub
sub
jp
outsb
jne
dec
dec
call
idivl
ficompl
loop
jns
cld
movsb
or
imul
pop
test
adc
rorl
int3
dec
jne
lcall
pop
sar
adc
jp
pop
test
jg
xchg
bound
jns
mov
idivl
adc
or
arpl
in
jmp
cmp
xchg
mov
mov
xlat
jbe
jmp
mov
outsl
pop
lcall
push
movsb
inc
mov
mov
sahf
inc
mov
inc
fldcw
xchg
dec
je
xor
jp
inc
fidivs
lcall
mov
scas
pop
lea
scas
out
and
xchg
inc
xchg
mov
push
push
ja
popf
cmpsl
adc
popa
pop
popf
mov
adc
stc
in
lret
cmpsl
lods
cmc
sub
adc
addl
enter
scas
xor
jno
in
add
mov
inc
ret
sbb
cs
aas
fwait
ss
cli
stos
xchg
fs
out
inc
aad
pushf
test
imul
mov
mov
sti
push
inc
push
das
sarb
push
out
xchg
testb
mov
repnz
adc
pop
ffreep
ss
in
mov
ss
cmpsl
push
lret
pop
jno
mov
in
rcl
adc
repz
lods
mov
jno
sar
xchg
jno
lahf
dec
xor
jg
push
les
mov
scas
cmp
pop
cmc
jb
mov
and
cwtl
js
adc
pop
mov
or
stos
jb
fwait
ret
sahf
jle
jnp
lret
dec
mov
pop
bound
aaa
xor
in
aaa
out
or
repnz
pop
jg
adc
mov
pop
inc
pop
call
in
aad
mov
sbb
jns
fcoms
adc
sti
jbe
test
mov
scas
test
aas
adc
adc
nop
xchg
repz
jno
ficoml
adc
push
pop
into
push
dec
pop
into
das
sti
xchg
sahf
pusha
insl
pop
leave
jae
and
out
add
aad
adcl
push
test
xchg
enter
pop
out
cs
fmuls
pop
and
mov
jge
cmp
fs
rcrb
pop
add
jns
pushl
mov
adc
insb
cmpsl
pop
outsl
mov
jb
sbb
pusha
mov
loopne
jns
out
gs
sub
sbb
inc
aas
shrl
aaa
ficoml
ror
jnp
and
add
shlb
jo
decl
xchg
sbb
repz
xchg
fmul
mov
mov
mov
test
out
mov
jnp
or
rdpmc
lods
lret
cs
cltd
fnstcw
data16
push
mov
mov
fimull
lods
inc
pop
push
sub
pop
movsl
push
xchg
dec
loope
sti
mov
jns
fisubrl
imul
ja
push
xor
ret
fsubrs
movsl
movsl
lods
cmc
cmp
lahf
roll
cmp
jno
xlat
pop
jmp
mov
hlt
push
pop
add
js
xchg
dec
or
jbe
push
pusha
int3
loopne
stos
xor
mov
xor
outsl
push
or
pushf
insb
pop
mov
lahf
mov
push
imul
dec
jo
dec
fldt
xchg
push
jmp
jne
push
mov
repnz
inc
mov
cltd
in
std
lahf
test
jle
add
inc
ljmp
std
cmpsb
push
xchg
fdivrl
rolb
int
xor
adc
jecxz
sub
cmp
popa
sub
mov
or
out
push
mov
adc
mov
fisubrs
addr16
xor
adc
mov
into
das
cmpsl
scas
and
inc
push
in
in
lods
insb
fadds
cmpl
fsts
sti
ror
aaa
roll
mov
or
xor
adcl
pop
faddl
push
repnz
sbb
xorb
mov
cld
imul
xchg
xchg
lahf
loopne,pt
jb
xchg
clc
mov
mov
insl
loope
hlt
je
and
aad
jl
cs
fisubrl
test
dec
or
sub
mov
push
jb
les
cs
out
add
dec
dec
dec
adc
jo
je
daa
mov
inc
sbb
sub
andb
pop
add
adc
jno
mov
cwtl
xchg
jno
pop
aad
push
int
push
push
pop
cmp
int3
mov
xor
push
dec
dec
rolb
fisubs
dec
jge
mov
cmp
in
movsb
inc
jbe
testb
add
cmpsl
jl
inc
pusha
adc
fadd
xchg
mov
lahf
clc
push
pop
sbb
inc
pop
movsl
adc
ret
jne
aad
cmp
and
push
dec
pop
sbbb
sbb
jmp
movsb
out
sub
in
and
jnp
pushl
idiv
sbb
pop
jbe
xchg
fdivrl
mov
cmpsb
push
lock
mov
test
fs
sub
xchg
sbb
insb
mov
mov
shrl
xchg
sub
repz
es
aaa
pop
mov
ja
sub
nop
daa
and
sbb
xlat
cld
lret
mov
fdivrp
and
inc
dec
test
mov
add
out
scas
sub
mov
xchg
mov
fwait
shr
jp
iret
inc
dec
add
pop
jno
push
pop
je
xor
mov
test
call
repnz
loopne
cmc
or
dec
cmpsl
sub
std
fs
xor
xorb
adc
inc
mov
and
fcompl
mov
adc
fcompl
jle
je
int3
xor
das
pop
sbb
seta
pop
cmp
add
in
fisubrs
mov
lods
fdivl
arpl
test
xchg
outsl
fs
idiv
in
pop
mov
cmpsb
je
lret
mov
bound
stos
sub
jmp
ja
scas
and
cs
jle
stos
bound
sbb
and
jbe
fcmovbe
movsl
in
je
sarb
popa
aaa
inc
jmp
push
gs
sbb
dec
int
or
movsl
insl
mov
adc
out
aaa
rcr
cwtl
push
sbb
insl
xor
dec
sub
pop
mov
add
aas
out
rclb
xor
cltd
mov
xor
movsb
lret
cltd
lods
in
inc
mov
stc
push
sub
push
out
mov
jmp
cmp
adc
sahf
inc
inc
dec
enter
xor
xor
pop
xchg
pusha
call
add
xor
arpl
js
sub
mov
jmp
push
mov
dec
pop
scas
addr16
mov
adc
mov
sbb
xor
arpl
cli
sub
js
jae
mov
addr16
rcr
mov
pop
mov
jmp
mov
fidivrl
mov
shlb
pop
mov
repnz
push
sbb
dec
adc
push
adc
scas
lods
or
mov
fwait
cltd
sub
mov
imul
icebp
out
add
popw
je
xor
push
sub
mov
lea
pop
popf
jo
int3
mov
jmp
dec
xchg
pop
jb
mov
jb
outsb
popf
and
insl
pop
aas
lods
cmpsb
enter
mov
lock
adc
arpl
lock
outsb
insl
test
fiadds
cltd
lock
setae
dec
mov
mov
push
xor
arpl
inc
dec
in
jbe
cltd
mov
and
cmpb
adc
cli
push
fdivl
xchg
mov
jp
jbe
jp
stos
sub
into
push
cmp
hlt
cmp
pop
push
out
push
mov
mov
mov
cmp
loope
pop
imul
lods
sbb
mov
push
lods
js
inc
mov
push
cmp
mov
lahf
sub
dec
mov
sub
sbb
movsb
xchg
aas
sbb
xchg
into
scas
sub
pusha
lods
xchg
outsl
mov
push
fisubs
sahf
push
mov
pusha
mov
lahf
clc
adc
notl
sti
inc
out
dec
cmp
mov
das
cmc
and
push
fcomps
mov
aaa
ja
hlt
sti
cmp
push
loopne
sbb
mov
inc
scas
aaa
rclb
pop
xchg
les
pushf
cwtl
adc
jmp
fbld
enter
loopne
clc
add
or
xor
pop
sub
call
lcall
cmp
jns
mov
inc
out
incb
idivl
sbb
fs
or
add
mov
int
inc
xorl
adc
mov
test
das
int
je
arpl
mov
jnp
enter
add
and
push
adc
jnp
in
loop
push
xchg
icebp
loop
and
dec
dec
out
rorl
mov
xor
and
lods
les
jno
fisubrl
mov
pop
std
nop
push
stc
cld
sbbl
pusha
out
sbb
dec
das
adc
in
insb
add
imul
inc
ficomps
cli
xor
adc
jle
push
shl
mov
dec
bound
mov
movsl
ficoml
in
addr16
je
rcrl
shrl
mov
movsl
rcrl
insl
lcall
inc
xor
jne
loop
push
xchg
ds
cmpsl
sahf
cmpsl
jp
rcrl
jnp
cmc
cmp
idivl
lret
pop
ds
cld
mov
cs
xchg
push
or
sbb
dec
ffreep
xchg
xlat
ret
sub
jno
js
pop
scas
mov
lret
push
test
out
std
fadds
and
test
lds
push
repnz
insl
fnstcw
adc
cld
xchg
pop
aas
and
outsb
ljmp
in
ret
ja
add
jns
repz
push
pusha
in
stc
dec
popa
xchg
aas
xor
imul
outsb
rcl
and
inc
sarl
or
leave
sub
fstpt
inc
addb
subb
es
cmp
cmp
jne
data16
loop
and
and
stos
mov
ss
inc
sub
lock
andb
pop
ds
mov
inc
scas
stc
in
sub
pop
test
popf
aam
scas
add
out
mov
push
pop
jb
jno
dec
sub
pop
mov
fs
or
xchg
cld
xlat
mov
loope
shll
fxch
xor
lcall
mov
sarl
pop
jle
stc
adc
mov
xchg
sub
sahf
inc
inc
cmc
jo
cmp
jno
int
mov
xchg
scas
and
xchg
ret
cltd
sbb
pop
aam
push
in
movsb
scas
movsl
and
sbb
sti
ljmp
jmpw
sti
clc
fs
xorl
clc
and
pusha
pop
and
cli
xchg
mov
push
pop
cltd
stos
cmpsb
clc
add
sbb
imul
out
or
dec
jecxz
test
arpl
sahf
sahf
rolb
xchg
stc
add
sti
daa
gs
js
xchg
nop
jecxz
sub
insl
inc
xchg
mov
and
push
push
cmpsb
push
adc
push
pop
push
pop
shll
into
movsl
in
inc
mov
mov
fcmovnbe
cmp
pop
adc
sub
push
imul
mov
pop
sbb
xchg
aam
das
sti
mov
imulb
jmp
nop
and
dec
insb
mov
loopne
cmp
loope
jmp
pop
ficomps
jae
addr16
lods
mov
stos
ret
sbb
mov
sti
sahf
outsl
dec
dec
into
xor
or
cmpb
shrb
sti
mov
daa
rcr
dec
jecxz
jge
andb
daa
sub
jle
and
adc
jmp
negl
and
sarl
pop
inc
ja
jge
cmpsl
cmp
mov
mov
pop
ficoml
mov
lahf
mov
lcall
push
arpl
rcrb
mov
mov
xchg
loop
pop
lcall
inc
xor
out
insb
out
pop
dec
push
dec
out
mov
outsl
daa
push
aam
mov
inc
cmpb
int
ljmp
daa
rclb
lcall
mov
jl
mov
pop
fisubs
pop
andl
ficoms
int
sbb
pop
stos
pop
inc
ljmp
cwtl
or
aad
pop
loope
jge
repz
scas
lods
xchg
sti
sahf
lods
cmp
out
movsl
std
mov
cli
dec
inc
mov
aad
loope
mov
cmp
jmp
in
test
test
mov
int
dec
repz
pop
and
sbb
add
and
push
enter
xchg
fwait
add
mov
fisubs
and
ret
push
and
mov
jno
or
test
sub
pop
xchg
dec
adc
inc
sbbb
sbb
add
pop
push
add
inc
xchg
in
cs
adc
sti
dec
test
jle
mov
in
loop
fdivrs
leave
ret
xor
mov
pop
je
lahf
fdivl
pop
mov
in
loopne
adc
adc
popa
push
and
arpl
jmp
or
jae
add
sbbl
gs
jge
adc
sbbl
xchg
xlat
iret
cld
cmp
push
cld
ret
fmull
int
test
call
aas
dec
mov
mov
and
sahf
aaa
cli
ja
jl
jno
iret
daa
xor
jge
adc
aam
cwtl
dec
mov
aas
lahf
mov
sti
imul
cltd
negl
sub
pop
or
or
mov
andb
inc
cmp
popf
push
stos
mov
cld
hlt
pop
lods
push
push
arpl
add
jo
mov
pop
push
mov
inc
mov
dec
mov
nop
loopne
lret
fdivl
or
lcall
hlt
adc
xchg
sbb
movsb
lcall
lods
mov
jae
imul
aaa
dec
mov
sub
inc
adc
inc
out
lcall
ja
mov
xor
push
lahf
cmp
inc
jb
mov
dec
iret
hlt
cmp
gs
pop
xchg
call
mov
cmpsb
cmp
pop
sub
push
add
push
pusha
nop
xlat
repz
pop
mov
addb
pop
cmp
mov
js
or
daa
ja
jmp
add
jg
mov
mov
js
js
cmp
inc
les
xchg
jecxz
ja
nop
or
andb
jnp
out
aas
aaa
lret
fsubrl
out
pop
lds
sbb
pop
xor
xchg
mov
lods
shrb
sub
fwait
xchg
je
push
lahf
mov
jb
xchg
enter
call
jo
mov
sbbb
add
cli
fwait
and
les
xchg
cs
cmp
lods
jl
ret
sub
sub
sbb
inc
hlt
test
and
fistps
out
dec
jle
sbb
cmc
inc
imul
in
movsb
mov
pop
clc
push
pop
mov
xor
mov
sbb
arpl
mov
movsl
pop
test
dec
mov
adc
sar
dec
loop
mov
loop
test
enter
scas
and
clc
lock
pop
mov
mov
dec
mov
xchg
rep
mov
repz
call
clc
or
sub
pop
stos
out
jl
mov
pusha
mov
fbld
sub
shrb
adc
sbbb
cmp
pop
std
cmp
nop
mov
jge
stos
leave
and
pushl
insb
or
jecxz
loope
mov
aas
cmc
jnp
js
inc
lods
jg
xor
pop
pushl
fmull
pop
sbb
sub
ds
cwtl
xor
in
inc
xchg
in
pop
inc
clc
popa
mov
add
call
pop
ja
loopne
lods
mov
or
push
lret
sbb
jmp
mov
xor
lret
xor
out
std
icebp
xchg
pop
jecxz
fsub
outsl
mov
popf
lods
icebp
xor
insb
insl
mov
xchg
ss
jecxz
mov
stos
xor
mulb
dec
sti
xchg
xchg
xor
in
nop
jg
mov
adc
jg
mov
scas
or
shrb
jo
inc
cmp
xor
xchg
jp
mov
cli
movsl
ret
jl
stos
inc
les
repnz
jp
lods
mov
and
ret
cli
pop
mov
push
ja
icebp
outsb
and
mov
nop
jne
repnz
fcomi
sub
or
vmread
mov
les
test
jno
les
and
mov
pushf
out
adc
ljmp
test
dec
repnz
inc
pop
mov
and
sbb
pop
add
jmp
jge
xor
sbb
or
fcom
orl
cmpsb
inc
mov
imul
mov
popa
cmp
push
mov
stos
daa
mov
insb
dec
xchg
ret
mov
fnstcw
cli
inc
es
add
pop
or
out
jle
and
lar
scas
xchg
lock
cwtl
daa
cmpsb
mov
lods
xor
mov
test
lcall
repz
cmc
mov
mov
js
push
push
stos
es
jmp
js
std
lcall
mov
shl
or
mov
xor
int
mov
lds
push
mov
jno
or
dec
mov
call
inc
mov
fldenv
push
sbb
fisubrl
push
or
decl
pop
or
rcrl
or
sbb
out
inc
xchg
push
jecxz
cmp
ja
iret
cmc
aas
ljmp
adc
jmp
lcall
or
fsubs
inc
es
xchg
insb
jle
pop
or
adc
xchg
and
inc
decl
xchg
nop
in
les
fdivrl
inc
xchg
sub
sub
roll
ss
xchg
mov
bound
cmp
lret
in
cltd
cmpsb
sub
push
aam
mov
push
scas
sbb
push
test
mov
in
mov
lret
mov
mov
mov
add
pop
hlt
pop
or
jp
mov
mov
cmpl
inc
push
sub
movsl
out
test
addr16
cld
add
xchg
rorb
leave
pushf
jl
ss
xorl
in
pop
inc
push
sbb
inc
xchg
sub
inc
push
and
xor
into
or
cltd
testb
mulb
cmp
xlat
stos
adc
jg
push
mov
and
dec
mov
shlb
int
adc
popa
jecxz
xor
cmc
sti
test
pop
insb
cmp
movb
ret
cmp
lahf
lea
aam
mov
out
scas
adcl
daa
ret
jo
movsl
cli
testl
xchg
mov
ret
std
subl
in
mov
sarb
jle
inc
xchg
xor
xor
pop
add
je
gs
lcall
mov
inc
mov
rcrl
test
and
xorl
adc
ja
ss
cmp
sbb
test
adc
pop
adc
sbbb
movl
jo
test
movsb
ret
or
outsl
xchg
out
ret
mov
inc
xchg
repnz
inc
sbb
lods
shrl
ret
add
inc
loopne
xchg
and
adc
push
sbb
mov
repz
and
sbb
faddp
or
js
lret
push
imul
sarl
xchg
add
pop
andl
dec
fisubs
mov
out
outsl
inc
pop
sbb
int
push
loope
push
icebp
insl
pop
fnstenv
sbb
call
dec
insl
lahf
and
jmp
icebp
cmp
aam
in
inc
int3
mov
lret
and
rcl
cmpsb
int3
gs
mov
jmp
out
ss
pop
xor
testl
xor
xor
insl
lea
ja
mov
int3
xor
or
ret
inc
xor
push
lret
pop
xor
les
inc
out
nop
mov
jp
out
mov
in
dec
adc
stos
pop
mov
lock
sarl
xor
fimuls
mov
push
jno
std
mov
or
ds
push
xor
inc
and
mov
xor
rclb
out
cmp
fistpl
fistpl
jo
clc
std
dec
push
pop
dec
cmp
sbb
xor
ja
mov
mov
cmp
jae
mov
xchg
out
push
imull
jae
push
or
scas
pop
jnp
ret
vhsubps
mov
sbb
scas
pop
int3
jno
dec
push
push
jbe
or
fisttpll
sbb
cld
popa
pop
add
jno
popf
mov
mov
push
cmp
sub
mov
push
jl
scas
ja
mov
pop
xlat
jle
inc
in
repz
dec
adc
shl
mov
mov
or
and
cmp
subl
ficoms
test
inc
and
push
jb
xor
and
pop
daa
or
add
rorb
sub
ret
mov
adc
cmp
in
pop
lea
es
xadd
push
idivb
mov
outsl
mov
daa
loope
or
pop
scas
sbb
call
dec
mov
fstpt
xor
lds
mov
inc
push
or
dec
adc
nop
test
and
and
ss
sub
aad
clc
fimull
lahf
je
lcall
push
mov
stos
ljmp
loop
cmc
outsl
jmp
pop
cld
mov
dec
fidivrl
jnp
fadd
js
lret
cmp
adc
mov
lods
aas
push
cmc
jecxz
cmp
rcl
pop
xchg
jg
jae
pop
push
rorb
or
xchg
subb
add
adc
push
in
shll
xor
shlb
jae
mov
xor
cmpsl
add
push
inc
mov
jae
cmp
mov
add
dec
ss
or
sub
xor
adc
lock
jp
push
sti
pushf
je
xor
pusha
mov
mov
xchg
outsb
lret
rorl
lds
xchg
adcl
mov
ss
xor
js
test
lock
dec
loop
fs
mov
sbb
andb
mov
xchg
pop
add
xchg
xor
fs
repz
adc
aaa
inc
push
or
rcrl
cmp
mov
fwait
and
fwait
pusha
cmp
sarl
out
js
popf
cwtl
aas
xlat
rolb
or
in
cld
mov
ret
aas
js
ja
sahf
call
sub
adc
xlat
xor
mov
and
mov
mov
daa
add
fldcw
das
hlt
lock
inc
shl
xchg
loopne
outsb
mov
clc
pushf
push
mov
fmulp
cmp
dec
sbb
in
pop
ret
mov
jmp
in
mov
and
decb
loopne
adc
jae
xchg
sahf
in
js
jg
gs
pop
adc
ret
sbb
dec
rclb
fnstenv
bound
lods
adc
xchg
mov
add
inc
and
popa
adcb
inc
shll
or
adc
and
mov
fisttpl
or
and
xor
icebp
cmp
ds
loop
aam
bnd
jmp
es
flds
inc
mov
and
das
sub
pop
xor
cld
sub
mov
mov
stc
inc
rorl
xor
bt
pop
mull
mov
ss
fdivs
xorb
mov
daa
inc
and
push
movsl
sbb
stos
cmp
outsl
dec
xchg
out
rcl
add
test
popf
pop
dec
pop
aaa
outsb
push
orl
xchg
jne
mov
xrelease
sub
mov
fsts
fcmovne
and
int3
stos
das
xor
loop
push
imul
sbb
test
aas
xchg
popl
lahf
insb
js
inc
lods
xchg
mov
cmp
adc
pop
dec
imul
adc
in
sbb
test
pop
dec
scas
inc
insb
iret
push
imul
mov
or
push
mov
or
ss
js
pop
das
push
in
pmuludq
jp
mov
popa
scas
fwait
pop
xchg
aas
mov
xlat
subl
lret
outsl
das
sub
cwtl
fstpt
cmp
lahf
dec
mov
jbe
mov
push
hlt
out
jns
add
comiss
sub
jne
dec
daa
data16
push
or
mov
xor
pop
shrl
or
repz
push
faddl
cld
add
lahf
adc
rcl
mov
movsb
fldl
and
sbb
and
fwait
and
and
hlt
inc
add
jne
mov
rcl
sbb
push
cltd
and
mov
loope
aas
or
mov
xlat
or
adc
jg
fs
call
popl
pop
xor
call
cs
mov
sbb
xor
mov
add
push
loope
sub
mov
insb
fisttps
out
xchg
aam
mov
mov
xchg
js
ss
add
mov
fwait
adc
dec
xor
and
int
imul
push
ds
xor
dec
jae
in
xor
movsl
fldenv
dec
dec
sub
andb
sub
mov
inc
dec
cltd
popf
xchg
inc
add
mov
stos
out
xor
into
and
cltd
and
push
ljmp
jp
sbb
dec
inc
mov
push
sub
fldl
sub
shlb
popa
or
sbb
movsl
push
call
mov
lds
rcrl
jo
adc
data16
cs
popf
push
mov
push
adc
push
jae
cs
inc
pop
push
sbb
ljmp
icebp
add
ds
clc
jns
dec
sbb
and
lret
jns
dec
mov
mov
inc
test
jns
push
ret
xchg
push
rclb
sbb
jg
and
mov
rorb
xor
icebp
cmpb
gs
loop
mov
pop
pop
cli
out
or
sbb
mov
adc
jae
cmpb
rolb
push
fidivs
pop
pop
inc
sti
push
adc
sub
aaa
jo
adc
pop
xchg
pop
and
test
inc
jne
dec
mov
adc
push
mov
xchg
push
stc
fldl
cwtl
imul
je
xor
mov
lods
inc
dec
ss
mov
push
lahf
pushl
xlat
dec
add
inc
push
or
out
ss
mov
aad
inc
mov
clc
cmp
insl
clc
inc
iret
adc
dec
xchg
cmp
push
mov
pop
mov
faddl
imul
push
xor
syscall
push
call
lret
jns
xor
aaa
mov
inc
add
xor
xchg
out
rcrb
jl
lcall
jb
jle
int
xchg
push
mov
push
dec
ror
mov
inc
fdivs
out
push
jb
cmpsb
cmc
pop
aam
stc
enter
and
enter
lock
andl
arpl
dec
jl
movsl
jg
jno
jns
sahf
pop
mov
mov
or
push
sbb
outsb
sysenter
lea
jge
repnz
push
push
mov
insb
cwtl
pop
xchg
xlat
push
mov
std
jae
cmp
insb
sub
mov
hlt
lcall
mov
jg
cli
sub
ds
bound
sbb
fildll
xchg
cmpsl
insb
mov
xchg
leave
dec
jge
sub
mov
pop
shrl
mov
mov
mov
jge
cmp
repz
in
or
stc
jmp
imul
dec
lods
lock
adc
mov
addl
arpl
add
out
push
out
dec
call
sub
rclb
mov
ss
data16
add
lds
dec
or
lock
dec
xchg
rcrl
pop
scas
adc
scas
sub
add
or
jge
pop
cmp
jge
enter
dec
enter
out
dec
testb
sub
out
dec
pop
ljmp
sarl
xor
cs
xor
mov
adc
in
ret
loop
and
mov
mov
jp
pop
gs
xor
es
lock
or
das
imul
ret
test
xchg
cltd
lret
add
enter
lret
xor
aad
pop
mov
mov
adc
adcl
xor
je
adc
push
enter
enter
lock
out
jp
into
xchg
sahf
loop
mov
mov
arpl
add
inc
pop
or
xchg
pop
mov
sub
push
xchg
ja
and
pop
es
in
aaa
ficoms
imul
lods
ljmp
out
lret
repnz
ret
jmp
and
mov
jb
mov
mov
imul
daa
xchg
mov
movsl
pushf
jno
inc
mov
cmp
sub
js
xor
lea
pop
repnz
inc
pop
xchg
cmpsl
jb
out
mov
cmp
sbb
mov
scas
cmp
insb
mov
adc
sbb
mov
mov
jno
sbb
pop
sbb
pop
ss
mov
cmp
lea
fisubs
popf
lea
enter
push
sbb
inc
divb
enter
test
jecxz
ss
mov
xchg
push
pop
sahf
inc
jne
add
jb
jecxz
loopne
push
adc
mov
jecxz
xor
xchg
movsl
mov
enter
aad
jle
push
adc
aaa
mov
enter
loop
lsl
pop
outsl
std
pusha
std
das
xchg
jge
xchg
pop
add
popa
push
mov
and
sti
aas
movsl
roll
jmp
mov
mov
cmpsb
adc
lds
imulb
push
sbb
test
cltd
or
std
lcall
sub
mov
and
push
dec
outsb
cmp
xor
call
sub
sbb
lret
scas
mov
leave
ds
es
jmp
imul
dec
and
ljmp
iret
push
iret
je
outsb
pop
lds
fsin
testl
mov
std
cld
daa
jge
dec
cld
mov
sbb
xor
in
pop
mov
push
es
mov
out
fidivrs
fwait
jge
add
fstpl
mov
mov
mov
cmp
mov
in
test
push
mov
cld
dec
and
pusha
add
adc
shrl
jle
pcmpeqw
sbb
dec
bound
inc
adc
push
mov
inc
dec
pop
mov
cld
movsl
cmpsb
outsl
xchg
jb
mov
shll
jno
xor
stos
pop
pop
xchg
mov
jnp
out
sbb
lret
push
xchg
cmp
data16
or
jle
dec
lret
cli
pop
xchg
rorl
out
imul
xchg
movsb
mov
fldenv
mov
test
dec
cltd
in
dec
sub
or
ficomps
pop
call
stc
enter
jae
xchg
invd
pop
cs
loop
les
cmpsb
shrl
sub
xchg
in
xlat
mov
pop
pop
add
loope
add
iret
loope
popa
dec
dec
xchg
ret
xor
xchg
dec
clc
adc
and
cmpsl
nop
enter
shll
sub
sub
pop
inc
addb
lock
adc
mov
add
fmul
pop
fstps
xchg
mov
jno
jbe
mov
clc
and
hlt
sahf
sub
stc
jmp
das
cmpb
xchg
jle
add
xorb
dec
jne
xlat
leave
and
divl
movsb
sbb
aad
lahf
cmp
dec
stc
push
mov
aam
jae
push
mov
je
jl
mov
or
jnp
mov
cmp
gs
ljmp
and
mov
popa
inc
add
bound
xor
pop
or
aad
aaa
mov
popa
test
jge
xchg
pushfw
cmp
popa
sub
icebp
popf
push
icebp
addr16
js
int3
push
icebp
and
jbe
or
mov
push
sub
jae
mov
cmp
push
push
inc
aas
test
jne
sbb
mov
dec
and
int3
xchg
dec
mov
mov
mov
icebp
in
adc
fmuls
xor
mov
push
sub
aam
xchg
push
arpl
push
das
push
xor
lret
pop
loop
and
pop
xchg
enter
dec
cltd
xchg
outsl
movsb
xchg
push
jne
or
inc
cmp
in
loope
sahf
mulb
dec
pushf
and
inc
jg
les
cwtl
xor
cmp
sbb
sub
mov
ss
int
cld
mov
cmp
mov
fistpll
xchg
mov
adc
mov
push
add
inc
xchg
and
dec
je
add
scas
jle,pn
dec
add
mov
out
mov
data16
clc
add
loop
icebp
lods
dec
loopne
mov
mov
imul
mov
int3
popf
or
enter
popa
sbb
fwait
adc
and
out
js
dec
ss
push
or
dec
push
lahf
or
cmpsl
and
jecxz
test
sarb
sub
pop
int
mov
dec
mov
lret
fwait
std
dec
inc
notl
sbb
xor
pop
pop
stos
xchg
dec
jno
inc
sbb
aam
lods
lret
or
in
pop
and
mov
mov
add
sahf
xor
and
jl
or
jmp
ja
xchg
outsl
push
flds
push
inc
and
loope
std
clc
adc
jbe
sahf
jno
hlt
cmc
shll
pusha
xchg
adcb
push
ret
movsb
lock
andl
add
mov
sub
or
mov
data16
test
out
mov
inc
sar
into
sar
adc
popa
adc
inc
and
outsl
inc
jl
int
pop
and
inc
mov
adc
mov
stos
mov
mov
push
sub
stos
repz
mov
into
frstor
andl
jmp
and
inc
sbb
pop
out
test
cmpsl
repnz
cmpb
ljmp
arpl
mov
loopne
icebp
loope
or
push
cmc
xor
jp
xchg
loop
add
outsb
lods
cmpsl
cltd
sbb
xchg
aas
pusha
jge
outsl
jmp
fisubrs
lret
jle
ds
pushf
idivl
pop
cld
xchg
leave
pop
pop
repnz
sub
fimull
pop
sbb
sbb
push
dec
xchg
lock
aas
ret
jmp
sub
fdivp
in
testb
int3
pop
inc
cmp
inc
sti
les
scas
add
rorl
adc
rcll
inc
jo
mov
clc
jnp
mov
pop
pop
push
das
test
jo
pop
mov
push
push
lahf
popf
rorl
xor
or
mov
jge
sub
into
pushf
out
rcrl
stos
in
sbb
fwait
pusha
mov
jmp
lcall
mov
lcall
fistpl
movsl
cmc
lods
push
jg
adc
lods
repnz
mov
sbb
mov
out
out
mov
lods
outsl
pop
arpl
insl
js
or
imul
testb
std
mov
stos
in
loope
jnp
adc
dec
sub
push
sub
push
and
add
inc
jl
and
sub
and
push
sub
sub
inc
lods
jmp
sub
sub
cltd
and
clc
sbbl
dec
rolb
outsl
cmp
int3
mov
sti
jge
js
mov
pop
cmp
addr16
sub
aam
cmp
xchg
push
in
ficoms
je
cltd
or
push
adc
sub
fiaddl
mov
mov
iret
roll
loop
stos
xchg
cmp
lods
add
mov
push
add
xor
xchg
and
fisubrs
sahf
cmpsl
or
sub
mov
jg
ja
push
push
jae
mov
movsb
insl
outsb
jnp
jge
jcxz
call
pop
aaa
sbb
adc
adc
cmp
xor
mov
mov
je
pusha
pop
jle
mov
add
xor
or
xchg
push
push
xchg
mov
pop
fwait
in
pusha
xchg
outsl
mov
or
push
xchg
lods
cmp
mov
adc
enter
iret
mov
jo
pop
jae
roll
dec
cmp
jbe
jmp
jmp
popa
jns
jle
sub
xor
pushf
aas
and
push
loope
and
jns
mov
fimuls
jmp
repnz
push
loopne
jae
mov
cmp
or
mov
outsb
imul
sarb
xchg
int
lock
xchg
push
scas
jp
adc
xlat
repz
hlt
lods
lcall
out
pop
into
cmp
mov
mov
cs
faddl
push
sub
cmp
movups
mov
and
outsl
shr
std
int3
pop
xchg
xor
mov
dec
aaa
sub
shlb
fsubr
xchg
mov
fisubrl
jae
pusha
test
sbbb
out
sub
adc
int
sbb
outsb
adc
cld
jns
push
out
or
shr
clc
daa
out
push
sub
cmp
rclb
gs
call
push
icebp
data16
cmp
mov
pushl
repnz
xor
cmp
xchg
xor
cmp
jge
dec
push
jmp
push
movsl
push
andl
shl
fldcw
ss
xor
fs
mov
push
mov
test
xorl
out
fwait
cli
in
or
pushf
test
xlat
pop
or
xor
mov
fcmovnu
inc
adc
mov
xchg
mov
test
stos
fs
cmp
add
test
mov
xchg
push
add
xchg
mov
stc
adc
imul
pop
push
lea
inc
stos
pop
or
mov
test
dec
sar
insb
daa
stos
shll
dec
mov
or
push
daa
dec
shlb
in
xchg
fdivrs
mov
dec
daa
xchg
xchg
dec
xchg
sub
xchg
or
insb
nop
scas
scas
cmpsb
cwtl
push
ret
lock
pop
lea
iret
push
fildll
insl
cld
leave
out
pushf
jecxz
cmp
das
test
xor
sbb
add
jle
inc
mov
movsb
push
cmp
inc
push
popa
loope
sub
leave
popa
sub
cmp
add
ljmp
pop
push
dec
inc
push
lds
jmp
cmp
pop
in
sub
xchg
scas
out
inc
push
test
rep
or
sub
mov
fs
pop
mov
mov
mov
push
pop
roll
hlt
ja
stc
fldt
pop
into
inc
jg
shrl
xchg
mov
adc
xor
mov
cmp
fdivl
adc
fidivrl
mov
sbb
iret
mov
hlt
dec
adc
outsb
mov
push
lahf
fdivr
rorb
jge
sub
xchg
iret
mov
testl
xchg
popa
ja
fldcw
out
lcall
fsubs
sub
testb
inc
mov
bound
push
in
jecxz
in
aaa
lods
mov
or
test
fildll
sar
mov
or
add
mov
das
das
mov
dec
fcom
in
pop
mov
pop
sahf
out
or
sub
jge
jns
dec
jae
dec
sbb
stc
dec
out
ljmp
call
mov
jo
mov
sbb
das
ss
imul
aas
popf
subps
cld
jmp
repz
ret
je
push
shl
adc
pop
das
nop
jge
lret
xor
aaa
pusha
rep
ret
mov
repz
dec
fwait
mov
cwtl
les
gs
cmp
or
cmpsb
lock
pop
insb
xchg
xchg
je
pop
in
dec
cltd
mov
or
and
test
sub
cmp
scas
push
fmulp
ret
mov
nop
insl
movsb
scas
xor
sarb
adc
call
cmpsl
loope
jno
in
dec
xchg
popf
adc
lcall
xchg
xchg
jmp
sub
js
dec
inc
fdivrs
sbbl
and
sbb
add
cmp
pop
xchg
aas
jno
xchg
cmp
cmp
lock
in
insl
mov
pop
arpl
lahf
fcoml
sti
and
jno
add
out
jecxz
mov
lea
push
movsb
push
sub
imul
orl
adc
jb
and
adc
sbb
push
add
cmpsl
rorb
cwtl
push
repnz
cli
mov
test
fsubl
jl
sbb
pop
pushf
sahf
add
xchg
sub
bound
int3
repnz
xchg
out
sub
xor
mov
dec
pushf
aaa
leave
mov
stos
and
push
pop
adc
adc
cmp
push
mov
daa
into
ljmp
loop
add
mov
adc
int3
aaa
cli
inc
cmp
shrb
dec
dec
in
jmp
ss
aas
mov
inc
add
xchg
das
inc
in
mov
lcall
cmp
call
sbb
sti
ror
stos
sti
inc
cltd
push
vmread
sahf
mov
jmp
movsb
out
in
leave
mov
dec
iret
clc
or
lea
scas
ss
pop
mov
out
jmp
lahf
cmp
xchg
repnz
cld
add
sarl
ss
jp
jmp
jg
push
mov
sub
add
push
addr16
push
mull
sub
xchg
xchg
mov
clc
cmp
xchg
cltd
add
mov
xor
adcb
cmpsl
jmp
push
scas
mov
aas
fsubrs
pop
adc
shl
shlb
sbb
cmp
pop
int3
idivb
movsl
in
data16
call
and
imul
dec
inc
mov
jp
arpl
test
dec
xchg
jnp
adc
xor
fdivrp
nop
adc
jbe
xor
push
jno
in
cmpsl
mov
and
out
push
sub
arpl
popf
inc
jl
lock
dec
subb
in
cli
imul
outsl
movsl
add
or
inc
fwait
rcrb
nop
inc
lea
mov
cltd
dec
sub
out
mov
aam
mov
pop
out
or
es
sbb
pop
orb
push
pusha
jne
je
xor
mov
sub
sti
lret
mov
sbb
je
sbb
dec
pop
mov
push
stos
mov
stc
push
jo
dec
repnz
scas
dec
jnp
arpl
and
mov
popf
or
mov
int3
or
cmpsb
xor
cld
push
push
cmp
add
out
inc
gs
mov
or
xchg
shrl
roll
mov
mov
lcall
sbb
push
test
dec
pop
push
cltd
rcl
add
pop
sub
outsl
inc
mov
in
orl
jmp
cmc
jnp
aad
mov
pop
sbb
ss
mov
lock
xor
int
loopne
std
dec
lret
nop
bound
in
and
adc
jg
jmp
xor
stos
mov
insb
mov
mov
and
lret
inc
dec
push
inc
or
or
inc
fidivs
arpl
add
cs
mov
sub
pop
lcall
add
jb
aam
or
add
pop
sbb
dec
mov
sarl
pop
or
xor
push
and
aas
or
pop
popa
movsb
imul
lret
clc
js
or
inc
push
test
lods
and
inc
push
add
gs
addl
nopl
arpl
add
lret
xor
rorb
pop
inc
jecxz
cmp
popf
add
popf
dec
pop
or
mov
pusha
mov
incl
ss
inc
dec
in
jne
inc
cmp
xchg
jmp
test
jp
fmuls
jne
jle
sub
mov
pushf
test
sahf
dec
mov
sahf
inc
outsb
pushf
mov
mov
mov
daa
cwtl
jge
int
xchg
scas
mov
push
shlb
inc
xchg
in
push
inc
push
repz
mov
jle
xor
imul
mov
jne
and
hlt
cmp
push
jg
mov
cmp
arpl
stos
sbb
or
fsubp
or
das
ret
xor
sbb
mov
out
ds
jmp
int3
pushf
pop
jp
mov
push
cmp
dec
jbe
dec
inc
sarl
xor
sahf
sbb
in
iret
fisttpll
aas
jae
std
xorb
sbb
bound
sbb
fucomi
fidivl
daa
sti
dec
mov
loop
inc
pop
std
data16
and
dec
mov
mov
push
subl
sbb
sbb
out
aas
mov
xchg
lcall
or
sub
lcall
sarb
ficomps
adc
push
inc
pop
out
pop
xorl
cmp
add
mov
addb
ja
jno
jno
bound
pop
jmp
sti
dec
sbb
faddp
clc
mov
das
dec
fucomip
push
mov
imul
insl
xor
pop
arpl
js
mov
ret
mov
mov
shll
mov
inc
sbb
adc
lods
adc
jno
pop
push
jmp
inc
xor
idivl
xchg
sbb
fwait
test
divb
xchg
mov
pop
fdivrl
shlb
int3
rcrl
mov
sarb
add
fwait
dec
push
fwait
or
sbb
fmull
xor
xchg
pop
jecxz
xor
xor
push
daa
in
cmp
mov
scas
test
adc
in
push
popf
fcoml
orb
xchg
aad
push
lds
jae
push
sbb
mov
pusha
xchg
mov
push
pop
xchg
cmc
into
or
cmp
add
sbb
out
mulb
push
andl
push
or
hlt
jmp
stos
sbb
les
sub
add
rclb
imul
jns
fildl
jl
push
push
mov
les
or
and
lret
pop
pop
ffree
jle
jle
addr16
ret
mov
popf
inc
mov
shr
xchg
sbb
addr16
mov
adc
ss
call
cmp
js
mov
xchg
mov
inc
sbb
xor
pop
sbb
sub
clc
pop
sbb
pop
ret
cs
and
stos
aas
mov
and
inc
and
outsl
shl
adc
mov
or
adc
fadds
cmpsl
cld
insb
fstp
dec
call
test
test
jp
out
pushl
push
inc
mov
mov
ljmp
pop
into
or
leave
and
sbb
push
xor
sbb
pusha
sub
ret
out
adc
lock
xor
cld
in
adc
and
mov
fisubs
inc
jg
fstpl
loope
add
cs
ret
cmpsb
mov
mov
pop
stos
rcr
push
and
push
push
pop
js
aad
or
mov
call
lods
ret
repz
ret
sti
xor
bound
add
xor
movsb
pop
aaa
lret
push
mov
lods
clc
or
ret
push
add
mov
mov
pushf
mov
test
out
in
push
xor
out
jne
jno
mov
jns
dec
movsb
frstor
popf
jns
inc
jmp
adc
push
xor
dec
mov
loop
pusha
and
ret
stos
daa
inc
add
lahf
scas
pop
stos
sub
out
out
mov
or
lcall
fistpl
and
movsb
cltd
push
out
or
jmp
std
addr16
sbb
movsl
enter
cmpb
or
mov
bound
fisubrs
cmpsb
mov
pushf
out
xor
push
mov
and
sub
mov
add
xchg
xor
idiv
adc
std
nop
cmpb
mov
add
inc
mov
jle
in
divl
or
adc
dec
or
add
sbb
xor
inc
dec
idivl
jge
add
xor
mov
divb
pop
xchg
xchg
xchg
add
inc
xchg
add
out
pop
xchg
mov
xchg
or
jg
ljmp
mov
fldln2
cmpb
add
and
fsubrl
js
cmpl
idivl
pop
mov
add
add
stos
jno
cli
shll
lock
test
jo
mull
lock
in
jp
mov
sub
cmc
in
test
add
cmp
loopne
xchg
mov
imul
adc
insl
fs
shlb
cmp
jg
mov
cmpb
and
sbb
js
sti
xchg
sbb
mov
into
jecxz
xchg
xchg
sarb
insb
or
jp
inc
dec
mov
test
sti
aas
xorl
jb
mov
jne
mov
dec
pop
std
bound
sbb
imul
push
mov
jge
mov
sub
ljmp
mov
add
sub
outsb
test
xor
mov
xor
pusha
jg
sarl
out
rcrb
lret
loop
rcr
push
in
sub
loope
jo
xor
jle
jb
orb
test
adc
xor
aaa
add
addl
mov
push
cmpsl
aaa
sbb
xor
jb
hlt
cltd
addr16
sbb
pusha
into
test
in
add
pop
sarb
pop
mov
shlb
cmp
arpl
push
pop
add
jo
sbb
hlt
aaa
jge
xchg
imul
pop
mov
ds
fnsave
pop
leave
push
inc
jbe
stos
adc
mov
pop
mov
rorb
or
push
and
mov
inc
icebp
popf
scas
xor
mov
xor
xor
add
push
or
mov
push
sbb
sub
test
jp
cmp
and
mov
xor
hlt
xor
cli
push
jg
lcall
inc
sbb
push
ret
or
lea
test
xorl
out
inc
xor
rolb
shll
gs
push
mov
mov
jbe
mov
mov
add
mov
call
xorl
in
push
lock
jno
test
js
push
mov
mov
inc
add
mov
mov
out
aad
sbb
mov
xor
iret
jb
or
je
ja
movsl
imul
sbb
lcall
jecxz
addr16
sbb
add
jl
push
push
pop
push
sahf
and
sub
add
pop
and
sub
adc
xchg
adc
and
mov
mov
rcrb
mov
and
das
dec
stos
add
sti
mov
mov
inc
mov
lret
js
iret
xor
aas
das
cli
dec
xchg
arpl
sbb
mov
pop
cli
cmp
fisubs
ljmp
cmc
jbe
cmp
jp
push
cmp
ficomps
call
cmp
jp
jp
mov
leave
mov
out
adc
bound
repz
fdivs
cltd
sub
push
stc
cmc
pop
jne
push
pop
dec
xlat
add
mov
mov
rcrl
pop
jno
xorl
jecxz
mov
inc
mov
xchg
test
clc
sbb
mov
scas
xlat
rorb
or
jnp
sub
pop
mov
xor
cmp
mov
leave
gs
mov
push
lret
pop
mov
mov
add
ret
jmp
and
stc
test
fisttpl
mov
push
icebp
cmc
and
data16
outsb
data16
scas
xchg
dec
mov
mov
bound
jle
jnp
add
daa
lcall
mov
fdivrl
ja
idivl
sbb
jg
and
mov
mov
inc
in
hlt
movsl
iret
xchg
sbb
and
shlb
or
adc
ret
sti
hlt
into
dec
dec
or
btl
repnz
lods
enter
cmc
or
cmp
push
mov
fadds
aam
leave
jp
add
push
mov
loope
fcmovnbe
sub
inc
insl
mov
or
mov
mov
std
bound
mov
mov
or
cmp
out
adc
stc
fs
cmp
jl
mov
jle
mov
sahf
lahf
push
enter
in
mov
out
mov
pop
mov
mov
add
clc
loope
das
push
or
imul
daa
fcmovnb
dec
enter
mov
sbb
jnp
in
mov
testl
cmp
pop
add
pop
sbb
xchg
out
jbe
and
mov
mov
gs
mov
xchg
xchg
test
pop
pop
imul
enter
jns
test
imul
push
or
fcoms
adc
in
lods
int
cltd
cmp
xchg
sbbb
adc
insl
stos
add
into
lret
push
mov
add
xchg
xchg
fs
cmp
adc
or
imul
cmc
cmp
hlt
hlt
loop
loop
out
pushf
cmp
pop
sbb
adcl
lahf
ss
push
or
xchg
movsb
gs
add
add
ja
and
in
jne
loop
mov
aas
out
out
stc
or
push
out
dec
in
cmp
inc
mov
jo
mov
ret
mov
rcl
mov
mov
and
inc
jno,pn
imull
inc
push
pushf
je
mov
cmpsb
imul
xlat
pop
mov
push
rolb
inc
push
xor
inc
xor
in
das
and
dec
inc
out
mov
lcall
hlt
mov
std
imul
dec
clc
push
int
lds
call
shll
cltd
adcb
sub
int3
xlat
in
mov
adc
fimuls
daa
ja
fmuls
sub
xbegin
icebp
mov
shll
jecxz
jle
loope
fwait
rcrl
sub
inc
les
and
dec
shl
out
inc
outsl
cli
push
movsb
xchg
jg
mov
inc
rcrb
loope
add
ja
jmp
cs
into
or
shlb
clc
outsb
mov
popf
xor
fdivs
xchg
jle
jp
jae
leave
addl
js
jmp
in
jmp
popa
cmp
mov
in
idivb
daa
cmovnp
sarl
fmull
xlat
sub
and
xlat
xor
xchg
mov
or
sub
jecxz
pop
or
rorl
jno
lahf
ljmp
adc
test
pushf
and
push
dec
nop
les
xchg
and
push
and
pop
xchg
cltd
movb
jmp
ljmp
adc
sub
shll
je
out
data16
lret
addr16
fwait
push
hlt
clc
sub
xchg
scas
lock
jle
ret
mov
jl
push
xchg
pop
jns
cld
fnsave
repz
jnp
mov
push
dec
daa
and
daa
jp
pop
mov
fmuls
mov
rcrl
scas
inc
pop
rcrb
aaa
pop
scas
jbe
mov
js
movsb
aaa
cmpb
out
outsl
fucom
in
dec
adc
dec
les
xor
mov
lret
and
arpl
les
jl
push
lea
addr16
push
std
imul
test
fldln2
inc
sub
es
jb
push
inc
test
pop
xor
loop
cmp
stos
jmp
jl
push
or
lds
test
lods
inc
cmc
pop
sbb
imul
mov
push
rcr
or
je
aam
loop
lcall
movb
add
cs
add
addb
arpl
mov
mov
pop
add
add
xor
or
test
add
add
dec
xor
int3
push
xchg
pop
push
dec
test
push
xor
pop
std
adc
adc
adc
mov
inc
mov
addl
in
rcll
sbb
jmp
sbb
cli
aam
mov
ja
sbb
cmp
adc
add
outsb
or
imul
cwtl
cmpb
jge
and
pop
xchg
xchg
imul
mov
lock
adc
pop
sbb
hlt
das
xor
push
pop
popf
push
cmc
mov
pop
dec
shr
or
xchg
mov
jo
cmp
xor
or
mov
adc
jl
dec
mov
sahf
add
inc
add
or
sti
sub
mov
rcll
push
or
mov
dec
test
jmp
test
sbb
jecxz
outsb
fucomip
div
outsb
filds
sti
sahf
loop
fstl
movaps
popf
jmp
fcmovnu
and
inc
adc
aaa
pop
inc
inc
adc
ret
icebp
or
mov
flds
xlat
popf
cmp
call
dec
and
inc
ja
push
cmp
mov
xchg
fcom
clc
jno
jg
cmpsb
mov
xchg
push
mov
scas
into
repz
push
xor
stos
adc
fidivl
cmp
push
call
in
loopne
push
push
imul
lds
loopne
je
or
div
bound
out
mov
ljmp
push
and
sbb
dec
jne
pop
dec
xchg
xchg
nop
push
push
pushf
mov
out
in
rol
enter
int
mov
iret
push
rorl
jmp
scas
adc
popa
and
push
je
aas
or
cmp
jp
push
xor
cmp
xor
test
mov
jb
test
or
shl
rcll
or
ret
imul
jno
dec
inc
and
dec
inc
and
or
stos
inc
sub
movsbl
inc
push
mov
or
push
xor
adc
and
mov
jb
sarb
scas
scas
lds
xchg
push
inc
arpl
test
dec
icebp
loope
jae
mov
xor
cwtl
inc
hlt
ljmp
lret
ja
push
test
int
pop
cmpsb
int
mov
rorb
xchg
sbb
call
mov
leave
mov
sahf
jmp
xor
dec
cmp
mov
lods
movsl
sahf
das
mov
sbb
xor
sub
add
jecxz
lea
add
clc
bound
xor
add
cwtl
xchg
jb
hlt
push
loopne
ds
ja
das
jo
push
xor
ja
cmp
mov
enter
outsl
dec
jg
fcmovnbe
in
aaa
xchg
repz
minps
es
adc
cmc
dec
fdivrl
push
jle
jnp
repz
mov
andb
xor
mov
fs
mov
jns
hlt
cs
xchg
rcl
cmovge
sub
outsb
pop
das
xlat
adc
pop
cmpsb
jb
add
xchg
jb
cltd
movsl
xchg
jmp
stc
dec
mov
inc
ljmp
sub
fcmovnbe
mov
jae
mov
ror
cmc
shrl
mov
jae
divl
xchg
in
pop
sti
jge
push
scas
xchg
outsl
cltd
lret
incl
in
pop
gs
jmp
mov
aam
das
xlat
xchg
push
pop
inc
mov
xchg
jb
and
xlat
mov
xchg
inc
divb
jns
xlat
popf
xor
push
scas
cmp
scas
fstps
scas
mov
arpl
inc
js
dec
add
xor
jg
ljmp
dec
enter
sarb
dec
std
mov
add
in
mov
lahf
sbb
in
pop
faddl
dec
cmp
mov
dec
xor
cs
cs
loopne
sub
stos
ds
mov
sti
jecxz
sub
sbb
test
mov
scas
clc
out
push
pop
lods
inc
pop
xor
daa
xchg
fnsetpm(287
cmc
je
lods
data16
iret
sub
lret
scas
jno
fsubs
or
sbb
les
call
ret
adc
in
push
inc
xchg
mov
sub
adc
push
scas
cmp
addr16
pop
outsb
ficoms
sub
ss
add
stc
sub
in
jbe
mov
xor
and
sub
out
sbb
lods
lcall
jne
outsb
mov
inc
pop
repnz
mov
sbb
cli
mov
shlb
ror
adc
aad
jb
fwait
pushf
xor
dec
add
sti
adc
int3
mov
lret
mov
sbb
aaa
xchg
jo
int
cmp
sbb
fsubr
int
push
je
orb
add
push
shlb
outsl
push
cmp
dec
int3
and
adc
in
arpl
jmp
jo
or
cwtl
insb
hlt
sbb
sub
sub
xchg
test
cld
jmp
xchg
test
cld
pop
sahf
xor
adc
mov
insl
scas
out
ja
ja
push
dec
xchg
jae
loope
fwait
cmpsl
mov
imul
call
clc
scas
lahf
fwait
mov
mov
jb
dec
jg
dec
test
call
xchg
jae
hlt
jne
add
out
jp
idivb
outsl
inc
jp
addr16
popf
pop
shlb
pop
into
cld
xor
jns
mov
shlb
daa
popa
jge
xor
movsb
fdivr
push
or
and
xchg
je
orl
test
lcall
hlt
std
or
std
scas
jb
and
insb
mov
inc
cli
push
lret
scas
pop
push
push
push
aas
pusha
xlat
mov
mov
jle
sarb
jns
cld
jle
xchg
jmp
push
in
in
fs
xor
sub
insb
das
sbb
add
fimuls
sub
cmpsb
cmpsl
std
or
xor
lock
xor
shlb
mov
sahf
mov
fisttpl
jmp
test
in
inc
out
int
mov
dec
das
xchg
lods
push
mov
cwtl
lahf
xchg
shll
pop
jo
out
mov
es
shll
xor
enter
ja
and
pop
xchg
pop
jno
test
js
andl
or
lods
and
sub
in
outsb
inc
out
push
cwtl
dec
mov
iret
out
icebp
and
mov
int
xchg
out
dec
loopne
inc
pop
ficompl
pop
adc
mov
fnsave
sub
daa
fiaddl
push
jne
popf
call
jge
xor
gs
xchg
mov
in
lods
push
idivb
je
sbbb
add
gs
adc
and
push
fsubr
jg
lock
cwtl
or
jns
push
mov
sbb
loop
fdivl
stos
iret
imull
loope
stos
dec
sbb
pop
pushf
adc
cmpsl
adc
push
add
sbb
lods
push
mov
xor
lods
sbb
cld
or
mov
pop
int3
jnp
or
jp
jo
in
mov
xlat
test
mov
sbb
out
xor
repz
sarl
in
push
push
sub
pop
shlb
repz
sub
sbb
btl
inc
add
orb
add
orb
fnsave
in
push
pop
imul
data16
pop
call
dec
pop
xchg
adc
fwait
mov
dec
push
push
cs
out
dec
lea
push
sahf
aam
mov
das
push
btr
cmp
mov
xchg
sub
sbb
sub
std
sub
ret
cld
flds
sbb
or
xlat
lret
inc
cmp
stos
mov
andnps
lds
scas
out
rolb
jg
pop
call
cmp
sbb
jae
add
mov
mov
lock
pop
je
sbb
inc
and
movl
inc
jge
jmp
inc
les
push
sub
loop
scas
gs
or
out
aas
repz
pop
in
mov
xchg
pop
andb
std
cmp
xchg
aas
rcl
out
cmp
dec
sbbb
lret
xor
cmp
int3
mov
int
push
insb
fndisi(8087
xchg
dec
mov
adc
xor
aas
data16
rolb
pop
push
mov
test
addr16
out
mov
add
and
fistpll
das
mov
mov
mov
negb
ss
out
loop
insl
xchg
ja
pop
dec
xchg
cmp
out
gs
xchg
decb
push
push
cmpsb
sahf
lahf
mov
pop
dec
push
andl
mov
das
mov
pop
clc
repnz
dec
pop
push
xchg
sbb
xchg
xor
je
mov
aaa
sbb
pop
mov
lret
sbb
jge
push
mov
popf
lds
shll
mov
das
adc
hlt
fidivrl
push
or
inc
mov
fiadds
addb
cmc
hlt
subl
movsb
fwait
ljmp
aad
cmp
sbb
mov
rorl
sub
les
jb
adc
imul
in
cwtl
fsubl
mov
push
xchg
adc
and
lds
sbb
mov
mov
sahf
pop
stos
in
push
out
cld
cmpxchg
push
or
movsl
jnp
hlt
iret
mov
mov
fcmovu
ds
or
stc
into
mov
daa
adc
movsl
cmp
pushf
or
gs
lods
cld
xor
adc
mov
arpl
nop
fwait
cmp
mov
divl
jns
add
insl
mov
incl
jle
mov
ret
add
repz
fisubrl
rclb
mov
cmp
pusha
pop
dec
scas
xchg
inc
adc
je
cltd
test
shlb
mov
scas
push
jle
mov
and
cwtl
xor
out
mov
out
jg
scas
mov
mov
scas
jns
ret
jp
xor
inc
mov
fsts
dec
repz
mov
ja
bound
push
jmp
add
or
in
loop
or
jb
adc
and
ljmp
sbb
fs
inc
lea
jae
push
push
inc
aas
lock
or
out
call
dec
fidivrl
shrb
int
inc
repnz
xchg
lock
pop
js
mov
fsubr
popa
sub
mov
sarl
stc
mov
mov
dec
pusha
xchg
mov
mov
int3
lods
js
out
xlat
sub
je
push
test
xchg
dec
ficoms
mov
nop
xchg
shlb
mov
lret
push
je
enter
ret
inc
lret
and
lret
int3
jo
push
dec
sbb
data16
jl
xor
jge
xor
mov
repnz
int3
aaa
ficompl
int3
nop
adc
push
test
stc
push
xchg
jno
cmp
sbb
cmpsl
xlat
push
jb
sbb
sti
nop
test
shll
pop
addr16
xor
mov
mov
mov
sub
sub
icebp
movsb
fisttps
adc
dec
imul
jg
fistl
sub
inc
pop
lret
xor
dec
outsl
arpl
jbe
dec
cmp
xor
ss
addr16
mov
lods
shl
iret
cmp
jge
jae
pushl
mov
xor
lds
jmp
or
jecxz
dec
push
stc
push
sub
dec
shr
or
mov
dec
psllq
pop
int
jo
jns
mov
xchg
scas
inc
xor
mov
pop
jge
pop
repz
inc
and
aas
por
dec
into
jmp
cmp
adc
adc
mov
test
lret
fists
mov
mov
popf
je
cltd
xor
pop
jle
mov
push
shlb
movsl
pop
cmp
jbe
jns
mov
mov
shll
scas
xor
cmp
pusha
cmp
mov
lds
pop
cmp
adc
xchg
mov
stc
sbb
xchg
adc
ja
insl
jo
xchg
sahf
das
pusha
loopne
incb
sbbl
lcall
dec
out
lcall
inc
pop
jb
shll
out
jp
add
inc
mov
jmp
out
test
mov
enter
pop
dec
loop
jns
outsl
call
and
cli
loope
daa
ret
das
sbb
push
inc
jg
ret
ret
movsb
push
stos
mov
mov
lock
mov
pop
push
lods
sbb
imul
lock
xor
stos
and
loopne
aas
cld
jbe
mov
cld
xor
cmp
stos
aad
add
inc
cmp
lret
xchg
dec
or
test
mov
shlb
sbb
push
push
insb
add
js
fwait
mov
ss
adc
pop
push
fldenv
rorl
decb
in
outsl
fdivs
ja
fisubrl
nop
aaa
or
push
sub
dec
dec
sub
jl
scas
xchg
scas
mov
jecxz
fprem
sub
add
jle
cmc
outsl
scas
stc
loope
cmc
sahf
repz
sub
dec
jl
jo
pusha
cmpsl
shll
jle
aaa
call
shlb
call
sbb
es
cld
lods
adc
pop
fstps
sub
cltd
mov
xchg
xchg
xchg
cmp
pop
sub
leave
cmp
fnstcw
inc
insl
insb
push
adc
dec
mov
jmp
sub
xorl
mov
ja
dec
push
adcl
dec
fs
lahf
xchg
xchg
popf
ror
and
jns
jno
addb
sahf
jecxz
leave
das
dec
mov
mov
mov
inc
sahf
or
push
jae
movsl
xchg
imul
js
pop
sti
stc
icebp
add
sbbb
inc
ja
or
inc
mulb
insb
pop
dec
scas
clc
push
mov
xor
imul
push
aam
cmp
imul
mov
push
or
sbb
mov
leave
or
lods
inc
scas
pop
sub
lods
lods
push
dec
dec
fcmovu
inc
scas
push
dec
dec
mov
pusha
icebp
dec
popa
sbb
push
add
push
ret
out
inc
clc
int
mov
adc
loop
notb
lods
js
roll
sub
add
lock
lcall
cs
xchg
mov
dec
sub
mov
jnp
adc
mov
subl
push
mov
pusha
mov
fdivr
ret
jb
int
mov
in
mov
arpl
in
js
jae
and
jb
push
lcall
ljmp
aad
dec
mov
mov
add
sbb
lods
cmp
pop
and
shll
add
scas
jg
mov
mov
pop
and
sub
and
adc
push
andl
ret
jnp
push
jbe
cmp
xchg
out
loopne
push
sahf
imul
mov
addr16
sub
sbbb
gs
and
out
cmp
andb
lret
or
test
into
sbb
fadds
mov
xstore-rng
cmpsl
jl
and
aaa
cmpsb
in
inc
fbld
aaa
insb
adc
mov
aad
popf
fwait
imul
cmp
rclb
mov
js
shll
fdivp
adc
outsb
cmc
adc
movsl
enter
xchg
add
adc
scas
pop
inc
por
push
sub
xor
fwait
cmp
cmc
push
inc
sbb
push
fucomip
lcall
mov
fcmove
jp
dec
inc
pop
xchg
aaa
and
jp
cmp
dec
frstor
lock
insb
pop
fisttpll
fadds
into
dec
sbb
hlt
push
cld
cwtl
cmp
dec
xchg
sbb
fdivl
mov
scas
jne
mov
movsl
stc
mov
sub
lock
loopne
out
jp
push
out
insl
mov
sbb
test
xchg
push
loope
cmpsb
divb
xlat
int3
js
add
push
es
mov
adc
popf
jno
push
lret
fidivl
imul
shl
jno
insl
fdivr
cmp
test
lahf
int
jns
adc
cmp
fistpll
iret
add
fldl2t
scas
cld
pop
and
in
sbb
jp
add
rorl
pop
ja
or
cmc
add
iret
cltd
mov
sbb
jmp
xchg
mov
ret
lds
ss
clc
adcl
das
outsb
push
imul
fs
xchg
mov
cmp
jp
lock
pop
enter
pop
shlb
inc
pop
add
mov
das
jle
stc
call
sub
mov
outsb
fidivrl
jo
dec
pop
hlt
push
or
insb
std
and
in
mov
repz
hlt
mov
popf
inc
cld
mov
lcall
jecxz
call
call
mov
cld
mov
xor
xchg
xorb
or
mov
push
repnz
jnp
push
mov
jb
push
xor
push
or
rcl
fists
movsb
xor
in
jnp
adc
xor
loope
scas
pop
jp
pop
mov
sbb
xchg
xor
cmp
add
pop
in
xchg
je
mov
xor
jbe
dec
jle
jne
xchg
push
orl
std
es
xorl
push
lods
arpl
test
jge
ret
cmp
jo
jmp
scas
test
or
xor
psubq
xchg
jl
rorb
mov
push
mov
push
test
jecxz
push
fldenv
insl
pusha
out
lret
ret
push
dec
outsl
roll
inc
pop
enter
loop
push
xchg
xchg
jmp
jp
pop
cmp
jno
daa
adc
mov
cmp
xor
xchg
pop
xchg
add
xor
or
mov
dec
mov
in
fcoml
dec
mov
jmp
mov
in
dec
cmp
pop
sub
lods
lods
cli
dec
je
lea
mov
cmp
arpl
jo
daa
out
fadds
mov
or
jmp
and
insl
arpl
push
in
xchg
pop
xor
outsb
arpl
and
inc
inc
mov
cmp
mov
push
lret
add
jecxz
xor
mov
push
pop
cmpsl
out
icebp
ljmp
mov
add
stc
mov
fstpl
scas
loope
jl
mov
or
lds
test
xlat
int3
js
xor
or
fbld
jno
pop
inc
adc
inc
lret
int
mov
dec
pop
dec
xchg
lea
pushf
lea
pop
out
pop
lret
gs
adc
adc
mov
push
out
divb
dec
mov
add
mov
outsb
mov
std
push
in
sahf
mov
and
lahf
jnp
into
fwait
into
dec
fsubs
mov
mov
shl
cld
or
notb
out
push
sbb
cmp
ret
push
mov
fucomp
sbb
repnz
pop
inc
sbb
sarb
push
dec
aaa
call
es
xlat
shl
mov
loope
in
sub
adc
gs
add
cmp
clc
push
je
or
insl
pusha
sbb
xchg
imul
adc
int
or
aad
or
cmp
popa
and
jae
aaa
outsb
push
in
sub
push
add
ljmp
push
bnd
mov
and
dec
mov
sti
pop
jmp
ja,pn
dec
pop
jmp
test
std
rep
mov
mov
imul
cmpsb
dec
imul
dec
jnp
xchg
jge
in
ret
loope
cmp
jno
filds
rcll
into
jo
mov
addr16
add
pop
pop
cwtl
out
jne
test
dec
fwait
lods
mov
pop
iret
jg
sbb
sbb
mov
imul
rorb
movsl
inc
pop
and
mov
cmp
in
sbb
jnp
push
fsubrs
lcall
int3
je
mov
adc
inc
nop
ds
add
scas
imul
and
bound
sub
pop
add
mov
mov
push
sti
incb
cli
je
jae
inc
bound
popf
cmp
or
daa
enter
push
in
fisubs
push
xchg
and
adc
jbe
stos
jno
mov
dec
and
loopew
shl
sbb
jmp
test
hlt
popa
lds
jmp
shl
jle
or
pop
inc
dec
cmp
adc
rcrb
neg
les
in
push
or
mov
cmpl
dec
sub
test
jp
ljmp
cmp
cltd
pop
push
sub
adc
jae
jge
mov
cmpsl
movsb
repz
inc
sbbl
mov
int3
inc
mov
and
xchg
int
jmp
mov
int
sub
incb
mov
iret
pop
scas
xor
mov
jg
sbb
adc
popa
ret
mov
ljmp
sti
outsl
jl
orb
and
jns
aas
dec
mov
push
xlat
fs
jmp
addr16
xchg
and
into
xchg
push
ljmp
dec
int3
scas
scas
insb
sbb
mov
or
sub
pop
cmp
mov
mov
cld
fisubs
arpl
aad
adc
mov
in
bound
in
jecxz
mov
jge
push
xchg
jge
dec
xchg
dec
testb
out
mov
cmp
mov
jb
sarb
cltd
das
fldenv
insl
pop
xlat
xor
inc
xchg
clc
mov
sub
inc
repnz
pop
arpl
xor
popf
mov
out
imul
adc
popf
fnstenv
sub
shl
pop
mov
jle
icebp
psubb
cli
inc
pusha
xor
scas
cmp
push
xor
lret
aas
jp
and
cmpsl
roll
es
pcmpgtb
imul
mov
cltd
xlat
mov
inc
dec
cmpsl
sbb
or
mov
mov
pop
cmp
sub
jg
pop
lds
xor
and
push
pop
aam
push
cmp
mov
test
lret
jp
mov
xor
sub
sub
adc
xor
fildl
mov
mov
test
or
pop
dec
and
daa
roll
fidivrs
in
or
mov
call
sbb
and
mov
out
sub
in
or
das
add
pop
es
or
mov
loop
or
inc
mov
jl
xlat
mov
aam
push
mov
in
shll
aam
mov
and
ds
xlat
pop
call
std
scas
aas
ret
xchg
pop
sbb
pop
insb
push
mov
aas
fsubr
gs
test
and
lods
mov
insl
add
mov
sbb
sbb
mov
push
pop
mov
or
in
dec
inc
xchg
xchg
repnz
stc
daa
jbe
loope
sarl
jae
sbb
imull
mov
add
adc
mov
int3
inc
jmp
sub
fdivrl
mov
and
add
out
lret
push
lea
lahf
xor
or
ds
jmp
xor
sub
dec
mov
outsb
add
popf
movsb
xor
gs
pop
jb
sti
ds
frstor
or
mov
std
xor
test
mov
xchg
lcall
sahf
cmc
std
insb
loopne
fdivrs
mov
mov
cmpsl
fiadds
push
add
sbb
push
pushf
int3
xlat
test
pop
pushf
test
pop
hlt
add
mov
sub
fisubrs
cmp
cmc
cmp
push
repz
movsb
rol
push
addr16
sub
mov
dec
loopne
mov
or
push
cmp
xchg
in
insl
aam
lods
imul
xchg
cld
pop
cmp
ljmp
xchg
in
je
sbb
movsl
aaa
lds
int3
neg
sbb
jg
cmpsb
push
inc
mov
roll
mov
pop
and
mov
fcmove
cmp
repnz
or
cmp
jne
jmp
popa
sub
jnp
mov
jp
xchg
push
adc
add
add
ret
adcb
fisubrl
cmpl
or
hlt
nop
xlat
orb
les
ja
movb
test
push
jl
xor
and
and
push
cmp
loopne
ret
ljmp
mov
aaa
sbb
or
mov
shll
in
fstpl
les
pushf
and
jnp
arpl
xorb
scas
push
push
dec
jg
iret
xor
cltd
cmc
cmpsb
pop
mov
testb
mov
lahf
adc
test
mov
out
cmp
pop
xor
movsl
repz
pop
mov
jp
push
or
push
call
iret
js
outsl
jmp
xor
imul
mov
and
push
xchg
sti
lods
call
pushf
dec
adc
inc
mov
xor
loopne
data16
in
imul
add
xlat
jge
clc
lods
inc
sbb
lock
inc
jl
push
push
sbb
fbld
push
das
xchg
pop
test
dec
jle
sbb
sbbl
jp
pop
push
adc
mov
xchg
je
mov
mov
loopne
and
mov
loopne
scas
inc
adc
adc
in
movsb
xor
sbb
in
loopne
and
jl
xchg
mov
shr
pop
xchg
lcall
fidivrs
dec
lret
out
loope
arpl
mov
cmp
lret
mov
test
int3
enter
mov
push
adc
fisubrl
incb
xchg
imul
jmp
and
pop
jne
stos
int3
or
roll
fnstcw
or
or
mov
rorb
cmp
inc
lret
adc
and
rcrb
cmp
loop
push
scas
xlat
leave
sti
ljmp
inc
popa
mov
int
mov
mov
lea
and
mov
inc
incb
jp
repnz
add
pop
shlb
int3
movsb
or
mov
cmp
out
rcrb
and
dec
out
scas
sarl
push
add
in
pop
loopne
push
pop
add
cmpsb
and
lret
ss
das
cmp
jmp
arpl
repz
fdivrs
xchg
adc
xor
jno
int
lret
jecxz
push
push
jmp
das
mov
stc
jb
aaa
mov
repnz
cli
jns
stc
in
in
fucomip
mov
cmc
xchg
inc
ret
inc
xchg
push
jecxz
stc
shl
es
mov
repz
std
or
cs
mov
popf
imulb
loopne
lds
in
pop
sbbl
xor
or
insl
cmc
out
xchg
jns
pop
lret
lds
test
jns
inc
movsl
jp
shrb
pop
mov
dec
cmp
push
pop
jno
push
cltd
out
jnp
das
sub
push
jp
fdivrp
xchg
in
adc
leave
push
pop
jno
xsaves
push
xchg
push
add
es
inc
out
ficoms
in
jno
jg
xor
inc
mov
icebp
movsb
loopne
ljmp
cmc
mov
mov
repz
dec
xor
adc
xchg
jne
repz
stos
push
mov
inc
push
and
pop
fsubl
mov
and
and
out
or
scas
inc
xor
test
or
outsb
xchg
ret
aas
out
add
jg
jecxz
fsubs
xor
mov
xchg
cmp
out
aaa
imul
jmp
shl
movsl
stc
push
cmp
js
mov
push
pop
inc
mov
mov
je
xor
cmp
adc
mov
dec
push
dec
adcb
loopne
int3
pop
adc
adc
outsb
fadds
lcall
cmp
ret
xchg
push
mov
pop
fwait
sqrtps
mov
cmp
movb
nop
mov
pop
hlt
imul
out
xor
pop
orl
fdivrl
cmp
insb
sub
and
jbe
cmpsl
or
xor
ss
inc
push
inc
mov
pop
in
movsb
loope
cmp
js
xchg
jno
xchg
stos
jnp
sbb
out
mov
xlat
cmp
sbb
jg
jbe
sub
jmp
insb
pop
or
mov
cld
fistl
xlat
repnz
jp
dec
xchg
aas
push
ret
inc
and
adc
das
sbb
xchg
sbb
mov
in
sub
in
pusha
or
call
mov
jns
add
lock
pop
jecxz
jecxz
xlat
jns
ja
jl
xchg
iret
adc
fnstenv
jmp
aaa
push
icebp
pop
dec
fdecstp
int
imul
in
icebp
mov
jmp
jbe
mov
mov
xlat
dec
in
push
notl
pop
outsb
inc
jno
movsb
xchg
push
imul
adc
jne
testb
pop
ret
scas
sahf
sti
lret
ds
stos
popf
scas
xchg
xchg
imul
mov
dec
mov
out
mov
dec
sbb
cmp
pop
xchg
icebp
icebp
lret
bound
repnz
lods
icebp
dec
dec
pop
mov
imul
daa
stos
popf
rcrl
ss
aaa
pop
sub
jno
mov
pop
cmp
icebp
sbb
jle
xchg
mov
insb
int3
sub
and
xor
jl
jne
out
sub
in
mov
inc
out
push
mov
add
cmp
cmp
dec
xor
push
push
bound
arpl
jle,pt
sbb
int3
gs
shll
jns
aad
lret
xor
sub
out
mov
jge
adc
mov
mov
scas
jns
dec
mov
cli
xchg
mov
iret
icebp
adc
loop
inc
inc
push
loop
repz
mov
ror
or
and
inc
cld
hlt
dec
popf
xchg
out
and
xchg
pop
dec
mov
out
repnz
shlb
sbb
mov
sbb
xchg
sub
out
hlt
test
fmuls
loop
jae
adc
int3
push
adc
enter
xchg
dec
lock
mov
xchg
hlt
add
lods
stc
dec
mov
xchg
or
xor
add
sbb
push
xlat
fnstenv
cmp
loope
xchg
arpl
ret
push
and
sbb
mov
popf
sbb
lcall
movb
sub
shlb
insb
aad
cmpsb
inc
push
jl
sar
mov
add
vmovupd
lods
inc
dec
sub
cmp
insl
sub
insb
xchg
and
add
fcomps
inc
popa
cwtl
sub
mov
fucomp
push
imul
xchg
imul
cmp
sbb
sub
pushf
pop
lock
mov
stos
out
inc
cmp
xchg
pop
xlat
mov
adcl
inc
std
sarb
jns
bnd
add
fcmovbe
mov
aad
adc
fimuls
fs
mov
repz
fstps
xchg
daa
mov
out
lock
sbb
js
push
cmp
mov
fistpll
sbb
xchg
iret
mov
pop
jne
loope
mov
mov
test
cmp
sbbb
enter
ja
push
cmp
cmc
xchg
lcall
std
jp
jge
aam
and
or
stos
lock
mov
jae
sbb
cmp
jp
inc
jl
jmp
adc
faddl
mov
stos
adc
adc
sub
fisubs
push
pushf
in
mov
pop
mov
jle
sbb
pop
js
inc
sub
out
cld
dec
into
or
mov
stc
adc
bound
fisttps
or
xor
jg
push
fwait
cs
mov
mov
mov
andb
in
push
mov
adc
ja
outsb
jo
aad
inc
lahf
or
xlat
cmp
fs
fbld
sub
cmp
test
xchg
out
cmpsb
pop
cwtl
mov
sbb
inc
sub
mov
insb
push
dec
out
out
call
test
pusha
jno
xor
or
push
call
loope
outsb
mov
pop
pushf
adc
decb
mov
ret
ret
fwait
lret
jae
mov
push
jg
mov
outsl
push
push
pushf
or
movsb
fidivs
in
je
sahf
out
loope
sub
mov
mov
mov
rcr
cmpsb
pop
sub
xlat
lahf
movsb
jmp
cmp
or
flds
fldl
mov
test
enter
cmp
xchg
dec
push
inc
xchg
mov
hlt
and
outsb
xlat
sbb
dec
in
ret
ror
dec
sbb
cwtl
fnstsw
jge
test
jnp
lea
mov
js
sahf
ficomps
leave
pop
in
dec
mov
sbb
mov
imull
in
ljmp
mov
movsb
mov
adc
in
xor
addr16
fucomi
lods
or
cmp
imul
repz
xchg
dec
fbld
bound
jne
fwait
mov
mov
fistpll
mov
aad
push
orb
nopl
popf
fs
cmpsb
fistl
adc
mov
xchg
and
stc
pop
sbb
mov
lea
lock
jo
mov
sub
popf
jno
and
xchg
aam
std
push
xchg
mov
mov
out
stos
lock
push
inc
pop
faddl
cmp
fld
pop
add
jns
adc
sub
int
mov
mov
pop
dec
or
loopne
push
cld
inc
xor
pop
jo
sbb
jle
xchg
lcall
pushf
mov
sbb
xchg
jle
arpl
and
nop
sbb
xor
movsb
ror
aam
push
xor
je
and
int3
or
imul
lret
jmp
fists
cmp
stc
pop
add
xor
xchg
scas
int3
mov
push
outsb
das
testl
inc
cwtl
cmp
inc
rcrl
cmp
ret
jbe
inc
lahf
icebp
andl
jnp
dec
inc
mov
lods
xchg
push
push
loop
sbb
xchg
js
movsb
sahf
daa
sti
pop
mov
push
jp
cmc
mov
jp
inc
sub
add
pop
ja
mov
lock
jle
mov
pop
push
add
out
xchg
xorb
lcall
iret
xlat
mov
jle
enter
and
pop
jge
pop
fdivrs
pop
add
xlat
lock
push
sbbb
mov
adc
dec
or
jl
in
xchg
jno
push
outsb
xor
test
scas
movsl
add
imul
dec
push
adc
in
aad
push
add
push
call
ss
cmpsb
popf
xchg
mov
stos
pop
js
sahf
push
idivb
ja
pop
push
inc
cmp
and
stos
popf
push
dec
addl
repz
into
push
scas
sbb
xchg
mov
and
rcr
outsb
aam
cli
xor
idivb
lahf
cltd
out
icebp
push
stc
iret
lods
xlat
aaa
jl
mov
cmp
push
fs
fs
cmp
jmp
xor
ds
call
mov
mov
int
mov
jmp
mov
mov
xchg
scas
and
or
lcall
xchg
es
mov
lods
adc
data16
or
test
notw
xor
popa
clc
sbb
mov
jns
lods
nop
test
jnp
add
xor
jecxz
jmp
push
jno
cld
mov
shlb
imul
push
xchg
pop
shl
daa
cmp
dec
cmp
cmc
push
xor
pushf
hlt
mov
sub
or
popf
xor
xchg
mov
sub
sbb
pop
mov
pop
js
lock
lret
xor
cmc
test
movsl
jns
nop
fisubrs
jmp
lret
loopne
inc
push
rcr
mov
xchg
xor
lahf
cmp
dec
pusha
clc
bt
add
dec
iret
and
test
data16
lcall
mov
dec
clc
int
and
test
inc
subb
lods
push
in
bound
dec
cs
push
ljmp
xor
dec
cmp
xchg
jle
pop
mov
ficoml
insl
jno
fistl
rcll
lds
inc
mov
lret
push
call
repz
negl
out
mull
out
iret
mov
mov
add
lods
dec
xchg
orl
inc
and
jae
sbb
pop
leave
adc
xchg
outsl
and
mov
insl
sbb
jp
gs
aam
cld
movsl
enter
gs
push
mov
adc
dec
repnz
dec
mov
ja
xchg
xor
mov
push
or
mov
adc
shll
mov
iret
int3
cli
or
mov
js
xchg
js
dec
cmp
das
sahf
das
mov
scas
stc
test
xor
pop
pop
mov
repz
arpl
dec
jecxz
ja
jo
or
and
or
cld
jbe
aaa
out
jbe
cmpsb
jmp
lea
sub
test
cwtl
into
mov
mov
sbb
cli
mov
adc
jb
mov
out
mov
xor
jge
cltd
mov
push
mov
push
dec
add
mov
das
mov
xchg
jb
into
dec
out
aas
ret
out
iret
pop
out
fistpll
es
jae
js
fs
inc
xchg
push
push
stc
out
xchg
cmp
xor
mov
es
dec
xor
pop
adc
fisubrl
out
push
daa
sbb
xor
pop
test
jne
push
ja
xor
arpl
pushw
xchg
jmp
jg
jne
clc
mov
inc
int3
sub
pop
andb
sti
fisttpll
sbb
add
adc
xchg
xchg
testl
jle
lds
mov
hlt
xor
data16
push
int3
inc
sbb
xchg
sahf
jg
push
lret
pop
subl
ret
mov
loopne
enter
pop
jnp
xchg
sahf
leave
jnp
push
test
pop
mov
jl
in
les
xlat
xchg
insb
pop
mov
aad
pusha
jbe
mov
popa
xor
pop
jge
adc
xorb
push
std
in
push
adc
mov
mov
in
pop
add
pop
mov
adc
popf
repz
pusha
fsubp
mov
jnp
mov
nop
outsl
arpl
jmp
clc
adc
sarl
sarl
jno
xor
idivb
mov
jnp
repz
pop
pop
lret
mov
xchg
mov
cmp
xchg
fisttpl
fistps
xchg
stos
xor
cli
in
adc
mov
xchg
and
cs
adc
inc
ret
adc
nop
fldenv
pop
call
lret
repz
xor
jle
in
mov
dec
loop
ja
or
test
cmp
fs
or
push
sub
cld
test
lock
xor
out
popf
aaa
mov
sbb
movsb
cltd
mov
xchg
inc
sarb
jnp
test
scas
pop
jle
xor
pop
pop
xor
mov
mov
xor
out
test
cmc
rolb
out
mov
rolb
in
fstl
add
jmp
xor
mov
insl
xlat
call
cld
or
sub
mov
sbb
add
sbb
mov
scas
fcoml
call
xor
std
ds
int3
frstor
dec
mov
inc
andl
push
iret
in
sbb
enter
test
mov
insl
sbb
add
sahf
push
fcmovnbe
mov
jle
sub
stc
in
mov
cmp
ljmp
pop
mov
cmc
lods
sbb
sbb
sub
xor
scas
stos
outsl
and
rcll
rcll
test
xor
mov
out
mov
lock
mov
cmp
test
into
xchg
jo
popl
in
pusha
and
fildll
and
jle
rorb
xchg
ss
sbb
lods
imul
mov
nop
pusha
sub
mov
mov
xorl
lods
jmp
and
mov
or
out
andb
arpl
out
sbb
dec
cmpl
dec
dec
pop
mov
mov
ja
inc
int3
jmp
ss
jge
jno
rcr
fimuls
push
xchg
adc
daa
cmp
xor
mov
loop
fisubrs
jge
stos
mov
fstps
scas
or
into
shrb
repnz
fsub
test
xchg
or
fabs
jge
leave
outsb
push
nop
lret
adc
pop
mov
push
outsb
int
mov
xlat
in
mov
loop
xor
sub
js
test
mov
jecxz
leave
mov
nop
mov
or
scas
dec
mov
ret
jecxz
mov
xchg
dec
add
or
cmp
popa
xchg
lret
inc
cltd
dec
sub
mov
ret
ss
xor
xchg
mov
pop
jle
cmpsl
pop
pop
push
bound
popa
xchg
loope
xchg
jmp
mov
mov
fadds
popl
mov
pop
das
repz
std
imul
and
push
jle
sbb
push
cld
mov
icebp
mov
cld
out
mov
sahf
popa
loopne
aaa
call
cmpsl
jns
push
loop
je
dec
jmp
in
leave
aaa
mov
mov
cs
and
jge
mov
out
jns
repz
or
jle
inc
jp
test
cmpsl
mov
scas
aad
lret
roll
xchg
inc
std
xor
jmp
pop
out
dec
jno
jmp
jnp
loope
inc
pop
test
daa
sti
push
mov
and
or
mov
adc
cmp
jge
mov
mov
pop
add
mov
jg
lea
cmp
mov
pop
int3
cmp
pop
inc
test
pushf
sbbb
lea
jmp
lods
ljmp
movd
adc
movsb
sbb
dec
mov
pusha
xor
cli
mov
jnp
imul
xchg
xchg
mov
test
jo
dec
push
jmp
pop
sbb
jp
cmp
out
repz
jle
mov
mov
adc
sbb
das
add
stc
daa
incl
pop
sysret
mov
sbb
push
cmp
loop
pop
mov
in
jle
out
popf
mov
aam
dec
cmpb
mov
aam
popa
mov
pop
das
sahf
sbb
repz
cmp
xor
mov
jecxz
test
imul
int3
xor
cmp
in
dec
icebp
cmp
loopne
jno
mov
xor
xor
push
enter
loopne
rcrl
jbe
aad
dec
pop
add
aad
dec
repnz
clc
xchg
push
out
outsl
jne
sbb
jne
sbb
cmp
test
nop
mov
loope
push
out
push
inc
dec
btr
roll
mov
mov
xchg
and
and
and
adc
int3
xchg
fs
fwait
push
idivl
dec
mov
jle
hlt
mov
out
cmp
xchg
popf
xor
cmp
in
mov
loop
dec
sarl
xchg
clc
mov
xchg
daa
adc
jg
xchg
mov
dec
cmp
inc
pop
lock
sarl
in
adc
dec
sub
pusha
jl
fisubrs
pop
jae
jnp
pushf
sub
pop
lcall
mov
or
aaa
repnz
sub
ss
mov
cmp
scas
loope
divb
pop
mov
and
iret
dec
pop
cmpsb
inc
or
and
clc
pop
jle
sub
pop
loop
jnp
mov
lods
and
es
lods
mov
pop
or
repnz
paddb
jp
pusha
cld
sbb
js
adc
stos
jmp
mov
xor
add
enter
int3
fisttpl
fidivrl
dec
scas
imul
xor
pop
inc
xor
cwtl
push
sub
ljmp
mov
adc
xor
dec
ret
rcll
dec
pusha
pop
movsl
das
outsl
mov
adc
lods
cmp
test
dec
sbb
icebp
xor
cli
and
jl
inc
jo
xchg
and
insl
pop
dec
movsl
and
loope
xor
adc
out
popf
cmpl
cmp
std
sub
xchg
inc
sub
lcall
in
das
fs
dec
sub
and
adc
fsubrs
xor
repnz
es
dec
add
pop
fs
loop
ret
mov
inc
sahf
and
xor
stos
push
test
pop
cld
fadd
daa
stc
icebp
add
pop
jle
movsl
jns
jecxz
inc
dec
test
cmp
lods
imul
stos
and
add
mov
mov
mov
pop
mov
popf
and
js
pop
mov
mov
push
addr16
gs
mov
out
loope
ficoml
lods
xchg
imul
stos
lcall
fucomp
aad
mov
fimuls
mov
inc
push
cltd
out
iret
jl
ljmp
adc
jmp
rcrb
xor
iret
ljmp
shll
pop
daa
mov
fcom
push
stos
dec
inc
push
bound
and
movsb
jbe
lods
stos
jl
mov
push
xor
xor
sbb
inc
pusha
add
lret
dec
insl
lret
mov
in
fists
lods
push
pop
push
push
ljmp
ret
jo
jl
inc
push
out
lock
mull
stos
jl
stos
lea
push
out
mov
scas
push
mov
jle
push
or
or
test
out
push
shrl
mov
notl
clc
mov
stos
or
notl
repz
pop
mov
jle
repnz
aas
out
shll
xor
movsb
stos
add
sahf
lea
jno
ljmp
lret
pop
push
pusha
mov
std
pop
les
pop
stos
lock
int3
test
ja
daa
clc
pushf
xor
ja
mov
inc
lock
fsubs
mov
pop
add
and
popa
pop
xlat
or
cmp
cmp
push
mov
adc
imull
adc
and
adc
in
mov
adc
adc
int
adc
pusha
mov
mov
and
cmpsb
mov
notb
hlt
push
inc
xlat
sbb
pop
popa
jge
insb
loope
xchg
lret
hlt
push
fcomps
int3
inc
pop
mov
divl
sub
mov
sti
sub
push
sub
push
or
sbb
stos
add
xchg
icebp
push
inc
out
ljmp
pop
push
inc
mov
insb
add
data16
pop
fndisi(8087
cmp
js
ja
mov
inc
inc
in
push
cmpsl
jmp
mov
in
ss
jns
inc
or
and
aaa
add
nop
rclb
xor
daa
xorl
ja
shrb
lds
stc
pop
xor
jl
test
sub
jns
mov
aas
and
imul
sbb
jp
enter
cmp
pop
pushf
xor
mov
mov
insl
mov
out
mov
cmp
daa
pop
ds
leave
scas
popf
push
add
push
push
xchg
imul
mov
jo
cmp
insb
int3
sti
rcl
scas
sub
out
mov
daa
out
or
cmp
mov
mov
mov
pop
push
les
sbb
jge
mov
repz
inc
sub
cmp
repz
xchg
loope
xor
aad
dec
das
bound
jne
pusha
add
insb
jle
mov
push
xor
roll
xor
cmp
out
andb
dec
imul
xlat
daa
in
or
das
test
cmp
cmc
cli
push
jl
insb
mov
xchg
pop
aad
sub
xchg
jbe
mov
push
mov
daa
aas
subl
fcos
push
cmp
add
gs
cs
cmp
rolb
xor
nop
fstl
je
mov
mov
clc
sbbb
cmp
nop
push
repz
cmpsl
jl
popf
push
ficoms
sbb
cs
test
ds
jo
shlb
mov
stc
and
and
xor
cmpsl
js
cltd
mov
lds
push
stc
inc
adc
ffreep
test
or
repnz
sbb
adc
adc
and
shrl
sub
hlt
cmp
decb
pop
dec
or
jmp
das
inc
xor
mov
icebp
sbb
mov
adc
mov
lret
dec
xchg
xor
or
adc
pop
xor
pop
xchg
mov
je
push
fs
jge
inc
loop
stos
shl
int
insb
dec
out
sub
cmpsb
and
pop
js
in
cltd
clc
cmp
mov
das
dec
outsl
xchg
std
scas
adc
pop
in
stos
fstpl
outsb
test
xchg
mov
aad
dec
fdivr
daa
in
cmp
test
test
loop
outsl
xor
mov
jbe
orb
nop
insb
and
aas
int3
mov
enter
fisttpl
xchg
test
jnp
in
repnz
in
fdivr
jg
and
xchg
pop
dec
mov
and
es
test
jge
stos
cmpsb
into
jbe
dec
insb
aas
lods
gs
push
icebp
stos
sub
pop
inc
mov
sbb
fsts
gs
negb
aad
cmp
jp
cmp
jnp
or
xchg
sub
incb
mov
pushf
nop
cwtl
outsl
adc
ret
sub
mov
imulb
push
cld
mov
stos
push
shrb
and
xlat
icebp
out
negl
inc
xchg
xor
xchg
sbb
sbb
xchg
div
arpl
jae
int3
pop
jo
pop
or
scas
sub
daa
jmp
mov
insb
gs
mov
iret
mov
jl
push
aad
push
in
mov
sbbl
neg
pushf
rorl
and
adc
movsb
xchg
jbe
addl
ljmp
jge
imul
mov
std
stos
stc
xor
stos
pusha
inc
insl
subl
add
xchg
lods
mov
call
lret
idiv
out
mov
movsb
jp
mov
in
push
adc
stos
movsl
push
push
cmp
fdivrp
push
push
mov
and
push
push
lock
cmpl
ds
pop
testl
mov
xor
loop
pop
pusha
call
adc
ds
outsl
push
out
jmp
fisttpll
or
jae
nop
adcb
movsl
loopne
xor
push
outsl
lock
jb
mov
lds
jnp
not
adc
cltd
pop
dec
jnp
test
aas
ljmp
mov
mov
push
and
pop
jle
jecxz
sub
and
fidivl
sarl
fldenv
fnstenv
cmpsb
mov
js
mov
jp
inc
xchg
mov
xor
add
arpl
xlat
lcall
arpl
adc
hlt
inc
mov
jle
and
xor
lahf
or
jecxz
testb
and
mov
outsl
movsl
sti
push
adc
pop
mov
cmp
xchg
dec
inc
ss
and
inc
ss
call
insb
and
xchg
js
and
adc
mov
xchg
cmp
int
enter
pop
out
push
cld
into
bswap
fmuls
shlb
xchg
pop
lahf
cltd
jns
xchg
jnp
sub
xchg
inc
sbb
notb
dec
sbb
outsb
xchg
xor
cmp
out
jbe
pop
aad
frstor
xlat
push
jbe
add
xchg
out
pusha
sti
popa
ja
shr
das
pop
jo
outsl
arpl
cltd
ret
je
ds
jnp
outsb
imul
lods
xor
ficomps
in
pushf
lahf
mov
sbb
xchg
int
lcallw
adc
imul
int
cld
leave
xchg
sbb
xor
add
push
add
push
add
mov
or
fadds
stos
jbe
les
add
out
xchg
push
xor
xor
jg
pop
setge
addr16
mov
mov
adcb
cmp
push
mov
out
incl
jecxz
stc
cmp
dec
mov
out
and
mov
popf
mov
inc
scas
int
cli
adc
fisttpl
cmc
ds
fidivrs
mov
dec
imul
fwait
adc
mov
mov
push
xor
and
push
mov
test
bound
xorb
mov
dec
dec
loop
pop
iret
push
and
arpl
stc
das
sti
add
imul
clc
sub
sbb
pop
jecxz
fld
push
je
loop
cld
mov
fdivrp
and
xlat
or
mov
cmc
adc
mov
outsl
icebp
xor
in
js
outsl
xchg
add
gs
adc
push
cmp
xlat
clc
jecxz
loopne
jb
pushf
shll
mov
pminsw
add
adc
adc
sub
and
popw
lahf
ret
xor
outsl
sti
add
out
sbb
jl
fadds
pop
mov
jle
fistl
test
pop
fldln2
cmp
cld
fcmovnb
stos
das
es
ret
test
mov
xor
subb
scas
sti
xor
pop
mov
mov
ret
mov
mov
pusha
loop
sbb
jae
or
inc
cltd
cmc
pop
icebp
pop
in
out
add
mov
jnp
dec
stos
js
jnp
fcmovnu
and
mov
pushf
mov
repz
sbb
sub
xchg
jae
das
enter
sbb
jnp
lods
and
dec
mov
jp
lcall
xor
mov
aas
xchg
cli
xlat
aam
int3
push
xchg
or
clc
loope
enter
xchg
movsl
push
aas
icebp
cmpsl
test
lret
dec
push
pop
jp
pop
ja
jp
inc
loopne
mov
xor
js
push
push
and
jg
adc
sbbl
fs
pop
dec
leave
or
je
fldl
loope
pop
test
add
stc
outsl
sahf
clc
pop
sub
jg
mov
jns
or
jbe
inc
lods
ja
jl
lret
sti
xor
pop
fiadds
cmp
imul
cmp
pop
lcall
rorb
in
test
je
add
or
popa
popa
sbb
ja
mov
les
or
scas
bswap
pop
push
ljmp
xlat
scas
mov
jl
add
popf
dec
jne
add
dec
stos
mov
xor
jbe
jbe
stc
aas
mov
mov
jg
cmp
ror
iret
shll
imul
dec
jb
sub
andl
leave
popa
fmull
xchg
mov
insl
jg
mov
daa
jmp
dec
sbb
in
fiadds
hlt
xor
adc
pop
mov
imul
sub
mov
out
xchg
ficomps
xor
or
xchg
and
xchg
mov
mov
fsubr
jg
push
dec
fwait
inc
dec
daa
adc
add
push
repz
mov
or
int
mov
andl
rorl
shll
daa
addr16
test
inc
cmp
fiadds
jno
sub
sbb
cmc
add
shll
push
mov
push
xor
out
jne
cmp
add
int3
push
call
vcvtpd2psy
stc
test
mov
clc
ja
sub
js
xor
mov
adc
xlat
pop
das
aaa
in
sti
insl
cmp
fsubs
roll
sti
mov
mov
js
sti
outsl
lcall
mov
lcall
test
ret
lret
or
sbb
jmp
test
push
scas
pop
inc
sahf
icebp
cmp
inc
shr
cmp
lret
jb
or
jmp
dec
es
std
addb
cltd
lahf
aam
inc
mov
rcrb
cld
and
pop
xchg
xor
mov
mov
cmp
jns
pop
cld
pop
daa
sahf
jnp
jae
sbbb
or
movsl
in
rcrb
mov
cli
rcrl
lea
dec
push
ja
leave
fistpll
xchg
xchg
inc
jle
ret
scas
dec
xor
ficompl
leave
or
subb
cmp
stos
fiaddl
in
mov
neg
jl
cmp
out
mov
cmpsb
jb
fsubr
lock
xchg
add
ds
orl
lret
insb
pop
in
mov
adc
lret
xlat
xchg
and
mov
xor
add
ret
inc
xchg
in
xchg
push
mov
adc
jl
loope
jl
lods
mov
decb
dec
ss
fcoml
in
mov
jmp
hlt
dec
mov
ret
adcl
shl
inc
arpl
test
fwait
dec
fwait
daa
cmp
add
jmp
jnp
mov
xor
xor
lcall
cmp
mov
fiaddl
outsl
sub
fidivrl
cmp
cmp
arpl
insl
cli
sbb
xor
rcl
sbb
xor
jmp
hlt
sub
out
xor
sbb
or
push
mov
push
fisubrl
or
rep
add
lea
sub
cmp
mov
push
or
xchg
pop
pop
mov
scas
imul
jp
push
or
clc
popf
mov
pop
sub
xor
mov
push
rorb
fstps
lcall
jno
mov
or
push
insl
lcall
popa
mov
shlb
jl
movsl
xchg
xor
cmc
cltd
call
pop
jbe,pt
aaa
push
cmpsb
ret
dec
bound
aas
xor
adc
es
stc
pop
js
mov
clc
pushf
xchg
bound
sbb
sub
fimull
xlat
jge
xor
inc
push
pushf
cwtl
lds
sbb
cmpl
mov
inc
cmp
ret
xor
iret
rcrl
xchg
fistps
lret
mov
cltd
push
lahf
cltd
xor
push
jb
jmp
push
aad
sub
mov
cmp
test
ljmp
sub
mov
ss
pop
cli
out
das
mov
adc
sub
mov
mov
repnz
xchg
mov
in
cmpsb
scas
push
clc
xlat
das
data16
sbb
lret
lods
divb
repnz
sub
fimuls
jg
pusha
movnti
fwait
or
cld
cmp
sbb
push
inc
and
cli
inc
imul
stos
pushf
aad
xor
lret
dec
mov
cwtl
mov
pushf
sahf
add
rorl
jno
jge
fsubrp
loopne
mov
adc
dec
ret
dec
adc
sahf
sub
jno
loop
cwtl
push
mov
add
push
xchg
leave
test
ror
xchg
and
test
adc
repnz
leave
cmpsl
and
arpl
add
xor
pushw
xor
dec
nop
shr
or
jp
sbb
push
inc
cmp
cmc
hlt
pop
sahf
ret
jmp
bound
xor
out
lock
pop
adc
mov
call
cltd
outsl
mov
flds
mov
jmp
pop
out
jl
add
mov
ljmp
jg
insl
dec
xchg
cmp
sub
cmp
ret
jg
jle
mov
jg
mov
ljmp
push
jae
arpl
imul
cmp
mov
repz
pop
leave
jge
mov
divps
shr
data16
imul
jb
pop
cmp
stos
xchg
out
mov
sbb
lahf
test
jnp
add
cmp
pop
imul
add
jge
aam
test
das
xchg
rcl
xchg
jnp
adc
fildl
xchg
inc
jmp
outsb
je
hlt
adc
sub
mov
sbb
inc
mov
cs
or
mov
bound
jmp
jmp
pop
lret
mov
je
push
call
cmp
loope
in
mov
sub
jmp
aaa
dec
pop
jle
mov
loope
fsubp
dec
ljmp
inc
adc
jge
out
lea
mov
lret
push
jbe
insl
fwait
repz
test
or
cld
adc
arpl
jge
gs
inc
xor
psadbw
pop
nop
xor
sarl
shl
inc
mov
sbb
sub
xchg
in
sub
push
js
lar
or
fidivs
pop
lret
jae
push
dec
shr
mov
xor
repz
sbb
add
jno
out
mov
mov
int3
xchg
adc
jb
adc
jb
icebp
fwait
pop
cmpsb
mov
daa
push
lods
xchg
adc
es
hlt
dec
mov
push
mov
dec
jno
xor
or
aas
das
dec
mov
jl
adc
mov
dec
inc
mov
push
cld
sti
or
ret
dec
rcll
inc
add
lea
sbb
or
mov
mov
mov
push
out
mov
cwtl
push
dec
nop
inc
jge
xchg
aas
mov
int
lock
loopne
imull
add
pop
imul
mov
jmp
push
insb
pop
mov
ds
imul
iret
repz
cmc
shll
push
scas
std
mov
shr
mov
push
push
mov
jge
negl
repz
cld
jl
es
push
icebp
fnstenv
imul
js
out
std
push
loopne
and
arpl
mov
or
out
mov
xlat
inc
adc
shr
jne
cmpsl
lahf
mov
into
sbb
movsl
mov
xor
sahf
div
arpl
cmp
loopne
add
push
or
imul
test
mov
pop
add
lret
lahf
in
cmp
std
stc
jmp
testb
cwtl
jge
imul
xor
push
jg
jnp
scas
push
sti
jp
fists
in
add
loopne
out
mov
arpl
hlt
insl
insb
mov
dec
rorb
xchg
ljmp
and
push
dec
and
cwtl
sub
icebp
fwait
inc
sub
cmp
cmp
dec
mov
sub
jne
and
daa
aad
or
sbb
imul
mov
mov
pop
arpl
popf
mov
test
repz
mov
fisubs
and
jge
and
cmp
dec
in
shll
jp
jns
mov
jne
mov
fucomp
cmp
cmp
pop
adc
cmp
imul
dec
sti
mov
jbe
out
addr16
jb
or
and
jnp
mov
rorl
xor
rcll
rorl
xor
movsl
test
rdpmc
in
jmp
rcrl
mov
push
rcrl
mov
sahf
xchg
xorb
std
sbb
in
cmp
push
cmpsb
std
jecxz
push
shrb
ficompl
push
mov
jmp
inc
sbb
hlt
xor
rorl
ss
xchg
jmp
ja
sbb
ja
mov
in
mov
inc
insb
sbb
mov
or
push
scas
or
into
aaa
mov
xchg
test
out
daa
fidivrl
dec
inc
sbb
out
lahf
push
sbb
jle
and
sar
bound
ficoml
inc
sub
ror
dec
jnp
sub
rorb
and
insl
enter
popf
xchg
mov
adc
bound
mov
xchg
dec
cwtl
imulb
int3
push
lret
int
push
lahf
lea
stc
aas
pop
xchg
add
adc
lds
call
sahf
mov
mov
or
imul
addr16
jae
imul
repz
imul
rolw
fwait
cltd
inc
adc
sahf
cltd
inc
adc
shlb
data16
lret
stc
movsl
fs
cltd
es
xchg
xor
cmp
sub
cmpsb
or
roll
push
xor
mov
xchg
push
int
xor
mov
lock
call
add
jge
fisubs
mov
insb
repz
add
mov
or
outsb
or
jns
add
adc
xor
in
push
in
lret
and
xlat
xor
dec
movsl
mov
imul
lret
dec
inc
sbb
leave
dec
inc
sbb
cld
adc
and
aaa
xor
inc
repnz
rolb
neg
ret
test
gs
test
mov
sahf
mov
fs
sub
rolb
test
xorb
mov
xchg
inc
pop
inc
pop
dec
sub
add
out
popf
xor
dec
push
fnstenv
ljmp
and
pop
jo
rcrl
lret
or
cmp
cmp
andb
loope
loope
std
or
fdivrl
mov
pop
xor
dec
mov
jno
mov
sbb
mov
mov
dec
fmuls
ds
push
inc
jne
and
aas
ljmp
pop
sbb
mov
push
adc
fistl
push
inc
fcomip
cmc
divl
jnp
mov
mov
or
inc
imul
xorb
sub
enter
shrb
insl
mov
xchg
inc
mov
sarb
push
mov
test
in
orb
cs
xor
push
inc
xor
lahf
repz
iret
xchg
push
dec
and
lock
mov
fwait
sbb
inc
mov
sub
fidivl
jae
scas
test
inc
lock
pop
repnz
data16
ror
xor
push
inc
xchg
es
testl
popa
mov
scas
enter
jns
test
xor
jo
in
pop
jae
cmp
enter
sub
mov
sbb
jae
push
idivb
pop
inc
add
test
xchg
jae
xchg
adc
jp
rcll
xlat
call
jl
aas
mov
sbb
arpl
stos
scas
or
mov
mov
sarb
pop
dec
idiv
fnsave
fs
iret
adc
mov
inc
push
popa
sti
mov
aad
adc
sti
sub
jg
push
subb
jnp
adc
enter
filds
jne
push
int3
adc
icebp
call
imul
pop
adc
or
ret
insl
cmpl
enter
add
cmp
clc
dec
decl
repz
lock
add
ret
repz
ret
jno
add
push
les
ficompl
mov
or
and
xchg
test
jb
test
pop
inc
adc
scas
dec
inc
dec
test
mov
pop
push
rcrb
mov
push
push
out
ja
dec
cwtl
xchg
pop
pusha
mov
in
aad
mull
adc
daa
cs
mov
xchg
roll
mov
push
push
xor
xor
clc
jecxz
pop
adc
cli
adc
mov
pop
mov
in
dec
sbb
jg
mov
lahf
xchg
jne
xor
loopne
sub
sbb
test
sub
mov
ss
in
arpl
and
sti
addr16
ret
mov
or
add
dec
mov
mov
push
push
dec
das
and
daa
sub
mov
repz
inc
mov
clc
ss
cltd
jle
add
adc
mov
fwait
or
adc
xchg
ret
outsl
pop
lret
test
or
or
inc
cmpsl
das
in
adc
and
or
lcall
xchg
mov
aad
jge
fmuls
call
sbb
scas
inc
pop
push
lds
addr16
test
jns
and
or
mov
bound
push
and
xor
in
sbb
test
jp
xorb
into
lret
imul
xchg
scas
adc
pop
jbe
mov
push
mov
mov
and
inc
cmp
ds
pop
bound
lahf
adc
sub
xor
fnsave
xchg
cld
lcall
jle
mov
mov
aas
fisttpll
and
sbb
inc
sti
cmp
fcoml
push
fwait
pop
mov
jne,pt
addr16
xlat
ja
leave
dec
and
fwait
xor
cmp
flds
outsb
ds
jge
iret
jnp
xchg
std
mov
mov
int3
jge
xor
js
adc
loope
xlat
push
shl
scas
push
inc
movzbl
testl
push
or
clc
loopne
fwait
rol
jb
std
push
jmp
icebp
out
pop
mov
inc
push
xor
test
ds
scas
aad
gs
icebp
add
sti
jne
xchg
mov
incb
pop
loopne
jnp
mov
lods
xchg
fdivp
movsb
sub
adc
das
mov
stos
scas
and
sahf
adc
ror
pop
fisttpll
je
push
cmp
mov
pop
xor
ja
movb
sbb
clc
ret
in
leave
xchg
pusha
cs
add
jno
outsb
out
std
inc
cld
data16
jl
stos
cmp
lret
cmp
pop
mov
mov
into
pop
xor
pop
pushf
pop
test
cmp
in
jl
dec
mov
cmp
sbb
fdivrs
insl
push
pop
repnz
ret
mov
insb
dec
imul
test
int
js,pn
inc
out
cld
or
cmp
cmp
outsb
les
mov
js
ljmp
fs
mov
mov
jle
cld
mov
mov
mov
out
cmp
out
lds
sbb
sub
jne
repnz
vrsqrtss
cli
xor
pop
fdivrs
clc
xacquire
xchg
sub
dec
aam
cmp
mov
cmp
cmp
jl
ret
cld
jl
test
dec
cmp
dec
push
mov
and
jbe
aaa
or
fists
jbe
mov
mov
lock
mov
cmp
scas
and
clc
xchg
pop
mov
pop
add
jge
out
mov
adc
outsl
out
inc
or
in
shrb
xor
int3
jecxz
addr16
cmpsb
jb
repz
sub
pop
fnstsw
push
jb
movsl
lods
pop
std
fstpt
fldt
movsl
cmc
lret
std
lods
mov
das
scas
jl
push
imul
mov
stc
cmp
clc
lea
mov
inc
mov
push
xchg
insl
adc
loope
adc
clc
test
xor
jo
xchg
adc
mov
push
lret
cs
pop
out
pop
jg
mov
in
mov
arpl
test
sbb
push
pop
cmc
fnstcw
shll
add
inc
push
repz
mov
add
sbb
subb
je
roll
mov
sahf
decb
pop
stc
loopne
iret
lock
mov
repnz
aas
and
popl
insl
pushf
mov
mov
push
test
inc
shll
imul
and
int3
scas
pop
mov
leave
inc
pop
pusha
xchg
in
mov
sub
testb
fildl
mov
xor
dec
fisttpl
mov
je
jmp
call
jmp
jnp
add
loope
inc
sub
cmp
cs
dec
sub
cmpsb
es
mov
push
inc
sub
or
fwait
int
test
mov
call
popa
fbld
mov
stos
cmpsb
fildl
sub
shr
xchg
dec
scas
or
pop
out
pop
cmpsb
mov
jb
xchg
sub
popf
cmpl
call
leave
push
bnd
sub
js
add
jle
lahf
sub
test
pop
nop
fcoml
add
leave
xchg
push
mov
push
fstl
sbb
imulb
push
lea
xor
inc
pop
sub
mov
pop
fldenv
roll
dec
cmp
jns
xchg
push
scas
int3
dec
jns
mov
out
adc
lret
pop
insl
outsl
jmp
daa
enter
arpl
in
or
shrl
jp
in
insl
cs
hlt
andl
ljmp
sbb
rcr
xlat
sbb
or
divl
sub
iret
cli
sub
outsl
mov
or
mov
or
out
mov
jnp
and
sub
mov
mov
add
pcmpeqb
pop
cwtl
cmp
test
and
in
push
mov
push
cltd
dec
leave
fnstenv
in
cld
jb
and
cs
jg
dec
push
dec
andl
daa
mov
ljmp
fsubrs
sbb
xchg
pusha
enter
dec
gs
or
insb
cmpb
mov
rorl
xchg
xchg
repz
lea
mov
clc
sbb
mov
jae
push
std
mov
add
jae
pop
mov
dec
adc
sar
cmp
stc
sbb
loop
cmpsb
test
shr
xor
fwait
lahf
pop
adc
dec
les
lea
jecxz
subb
fists
cmp
fcmovb
rorb
mov
sbb
mov
pop
popa
test
push
sub
lahf
jae
sub
inc
je
ljmp
xchg
add
pop
or
ja
out
xchg
inc
cmc
dec
imul
sbb
or
mov
mov
mov
addr16
lods
hlt
pop
rclb
push
inc
cli
scas
add
lret
fistps
test
dec
test
cmp
int3
jbe
cmp
inc
enter
pop
add
rcrb
cmp
xor
adc
mov
mov
xorb
and
xlat
fists
in
mov
cmp
push
inc
sbb
mov
dec
loopne
add
int
shlb
out
movsb
mov
jnp
loop
mov
push
or
out
divb
ljmp
sub
ficoml
in
lcall
test
push
xchg
pop
aad
jmp
and
dec
test
imul
pop
add
pushf
movsl
outsl
mov
addr16
test
mov
add
lret
jae
inc
mov
pop
pop
or
lret
cmp
mov
sub
sub
les
movsl
and
lcall
pop
pop
mov
repnz
cli
xor
nop
mov
mov
mov
sti
mov
lcall
push
rcrl
cmp
movsb
xchg
gs
lret
jns
loop
scas
jmp
mov
adc
stos
xchg
adc
mov
lods
and
outsl
out
pop
mov
pop
in
mov
shl
insl
out
jmp
or
nop
rcrl
mov
cmp
rol
sbb
fwait
lret
js
mov
xchg
jl
sub
pusha
adc
fstl
mov
cmc
sub
shlb
and
push
loop
mov
dec
into
mov
sahf
sahf
inc
mov
mov
pop
daa
lret
mov
push
cwtl
xchg
pushf
inc
inc
imul
xor
sub
gs
dec
adc
scas
inc
das
pushf
insl
test
sub
and
xchg
into
dec
pop
mov
aas
mov
adcb
and
mov
loop
enter
imul
or
mov
shlb
dec
jno
add
hlt
fs
nop
mov
aad
push
mov
inc
lcall
ret
pop
lret
inc
clc
cmp
imul
inc
jl
add
xchg
xor
dec
jnp
xchg
add
mov
adc
lods
repz
js
xor
mov
aam
sbb
out
push
or
push
loop
sahf
out
mov
dec
fcmovb
xchg
push
fs
je
xchg
int3
fists
pop
add
rcll
mov
mov
cli
icebp
jb
sub
sub
add
lahf
lods
mov
add
add
test
cli
sti
cmp
fwait
rcll
lahf
stc
mov
mov
imul
outsb
cwtl
sub
and
aad
mov
pop
dec
sub
pop
ljmp
stos
mov
dec
jbe
mov
repz
add
push
data16
mov
mov
jae
mov
cmp
xor
xorl
div
cmp
xchg
sbb
pop
push
lret
sbb
loop
mov
push
imul
das
pop
test
push
mov
cmp
add
test
adc
cmpsb
or
mov
mov
insl
jne
pop
lds
fsubrl
sbb
shrl
fistl
cmp
imul
popa
pop
push
push
mov
or
movsb
adc
push
rcrl
inc
pop
enter
sub
mov
stos
jno
in
mov
or
repnz
call
mov
xor
jae
or
xchg
jno
scas
jecxz
out
cmp
les
mov
cs
inc
ret
leave
mov
out
jmp
push
loopne
xor
in
sbb
lods
and
dec
loopne
out
mov
int3
pop
sub
xchg
mov
dec
pop
xchg
push
and
cwtl
les
xchg
mov
in
call
dec
xor
xor
xchg
xor
dec
fiaddl
ret
push
scas
mov
cli
in
pusha
and
xor
cltd
in
subl
lods
adc
mov
insb
in
outsl
adc
aaa
mov
ss
and
call
cwtl
sbb
pushf
in
cmp
sbb
in
rorl
jo
stc
loopne
inc
test
xor
call
ficoms
dec
jbe
pop
xchg
push
push
xchg
stc
inc
sahf
cli
outsl
and
popa
roll
imul
dec
mov
cs
lret
or
or
bound
ret
fsts
aam
sub
jns
dec
mov
inc
ss
mov
dec
es
insl
pop
cmp
leave
mov
pop
aad
test
out
inc
addr16
dec
je
mov
fs
xor
movsl
jg
cli
cmp
fcmovnbe
cld
sbb
xchg
roll
ja
in
jle
ja
xchg
out
sbb
insl
popa
push
mov
xchg
div
ja
scas
pop
aas
mov
push
out
mov
push
xchg
mov
test
pop
gs
xchg
cmpsb
dec
adc
aad
sbb
mov
insb
or
inc
and
jmp
pusha
sub
sub
mov
inc
ja
and
sbb
xor
inc
cmp
sbb
fisttps
sub
fwait
mov
testl
stos
nop
pcmpeqb
or
xchg
lea
out
jmp
and
mov
mov
push
cmpsl
jbe
adc
nop
push
jne
mov
cmp
add
ljmp
pop
inc
mov
inc
pop
stos
mov
imul
push
mov
insb
xchg
sbb
inc
mov
and
les
arpl
shl
push
out
test
jmp
dec
gs
js
push
push
push
mov
les
lods
xor
imul
mov
movsb
divl
inc
gs
adc
dec
inc
xor
dec
ljmp
xor
mov
and
push
cs
mov
mov
dec
cmc
aad
inc
nop
insl
divb
stos
mov
fldenv
mov
or
lret
dec
jbe
mov
sahf
mov
mov
popa
xchg
or
and
mov
push
cmpsb
mov
fwait
movsl
push
inc
cmpsl
call
addr16
mov
call
or
push
cmc
xchg
hlt
cmc
inc
out
lods
call
enter
lods
pop
and
fldl
daa
cmp
frstor
jg
addl
insb
jmp
aaa
mov
adc
btcl
pop
stos
repnz
xchg
dec
cltd
adc
pop
xor
add
pop
in
outsb
xchg
adc
jle
lea
push
xor
ljmp
clc
dec
sbbb
lcall
lea
add
sbb
cs
or
xchg
lcall
test
andnps
das
stos
frstor
ljmp
bound
adc
lcall
xor
sub
in
insl
movsb
movl
xlat
push
and
xor
aad
xor
ficompl
sub
movsl
or
mov
je
popf
mov
inc
pusha
xchg
mov
bound
aam
xor
inc
rclb
fsts
push
pop
test
scas
test
jo
imul
insl
or
roll
xchg
xor
lds
pusha
xchg
out
mov
ja
cli
pushf
movsl
lea
xor
call
adc
cld
faddl
dec
sti
push
shl
adc
cld
fstl
mov
out
adc
jl
add
lcall
pop
std
jmp
ret
mov
pop
jmp
shlb
jb
dec
xchg
dec
dec
push
and
add
adc
mov
add
stos
inc
int3
add
cmp
stos
pop
rcr
and
inc
xor
pushf
mov
jnp
sub
sub
sahf
ss
sub
pop
mov
test
cmp
inc
scas
out
or
loop
les
cmp
gs
adc
test
stos
scas
mov
stos
pop
cmp
xchg
xchg
jnp
sub
or
pop
mov
arpl
hlt
dec
inc
clc
popf
mov
and
js
in
xchg
lcall
xor
shrl
dec
pop
stos
push
rol
pop
add
and
ss
cmp
jae
push
cmp
xchg
inc
daa
decl
out
enter
push
jp
push
or
fcmovnbe
push
mov
stc
addr16
adc
popa
mov
add
add
add
push
jbe
sbb
aaa
inc
pop
cwtl
aad
jecxz
jae
mov
js
mov
ficompl
ret
inc
pop
into
inc
mov
push
adc
cmp
pop
pop
cmp
je
mov
ds
pop
push
andl
daa
mov
xchg
inc
mov
fcoml
dec
sbb
xorl
movl
ljmp
in
cmp
lds
fnsave
jge
subb
jae
cltd
sub
mov
push
cmc
fnstcw
movsl
cmp
stos
mov
cmp
sbb
sub
jne
push
call
pop
lock
scas
mov
mov
enter
in
xchg
insb
xor
or
cmpsb
movb
add
lea
mov
imulb
cmpsl
inc
das
xchg
aad
ss
int3
push
cmp
xchg
cmp
cmp
push
mov
or
dec
jle
pushf
popf
leave
scas
ret
out
aam
cltd
lods
push
sub
sbb
adc
push
pop
into
scas
rcrl
cmp
test
adc
xorb
lea
getsec
je
sti
daa
pop
fbstp
xor
xor
xchg
push
inc
dec
mov
dec
adcl
mov
xor
jae
int
mov
mov
xor
xlat
inc
push
pushf
test
fcomp
imul
xchg
aas
or
and
movsb
lret
fcmovnu
testl
pop
aam
lods
mov
pusha
das
mov
jb
xor
mov
repnz
cwtl
rcrl
loopne
adcb
cmp
mov
pop
addl
mov
jp
and
sbb
adc
jmp
das
sbb
cmc
mov
jns
xor
lods
inc
out
xorb
sub
call
pop
adc
jge
icebp
icebp
pop
and
mov
jl
imul
bound
jne
repnz
inc
pop
push
or
add
mov
adc
dec
leave
inc
pop
fwait
cmp
pop
lahf
ljmp
jmp
test
loope
scas
jnp
lret
imul
xor
jns
sub
jbe
mov
cmp
stos
jo
ficoml
xchg
negl
push
cmp
xchg
or
test
stos
int
cmpsl
inc
cmpsl
mov
test
out
or
pop
sbb
mov
stos
and
nop
jg
cmp
xor
jecxz
mov
sbb
or
dec
cmp
sub
xor
jg
push
lar
ret
hlt
adc
mov
sbb
leave
sbb
and
xchg
lods
cmp
jb
inc
push
sbb
imul
cmp
call
sub
mov
jecxz
xchg
into
enter
or
adcb
ret
outsl
inc
jne
jbe
mov
add
add
sub
adc
daa
xlat
sub
scas
push
mov
insl
pop
adc
push
mov
ret
lret
sub
addr16
xchg
sub
mov
rcrb
pop
mov
jbe
push
or
pop
mov
inc
mov
or
test
js
shll
mov
ljmp
add
jmp
push
mov
cmp
iret
rcr
leave
fisttpl
popf
leave
sahf
cs
lods
inc
add
jmp
pop
les
sub
xchg
mov
push
push
aas
pop
mov
pushf
fstl
movb
fmull
or
lock
cld
fnsave
mov
loopne
iret
jo
mov
or
dec
aad
pop
push
xor
push
es
dec
cli
jno
dec
mov
jbe
test
and
cmp
cmp
cli
jmp
adc
inc
add
mov
sub
lods
movsl
out
inc
push
inc
xchg
lret
xchg
pop
push
ficoms
push
pop
mov
push
outsl
ljmp
cmp
popa
aam
or
xlat
adcl
sbb
mov
gs
push
inc
movsb
lods
and
call
in
sub
repnz
stos
mov
cmpsl
jb
ljmp
mov
xor
bound
mov
stos
jne
jb
popa
push
mov
adc
dec
mov
fchs
push
xchg
and
adc
xor
stos
xchg
scas
out
inc
cmpsl
jecxz
xor
sub
insl
rorb
inc
test
scas
pop
ret
cltd
out
xchg
cmp
add
xchg
xchg
jnp
or
pop
movsbl
mov
sbb
add
mov
into
cmp
int
lods
pop
inc
mov
xchg
nop
push
test
fisubrl
push
test
xor
sub
mov
aas
fmul
int
mov
and
cmp
jb
sub
pop
xchg
mov
loop
popa
stc
xorb
mov
mull
inc
push
inc
fists
push
cmp
push
or
movsl
and
adc
jo
std
sbb
in
pusha
enter
scas
out
mov
stos
clc
mov
dec
adc
push
jne
dec
xor
mov
push
jne
sbb
sub
popf
adc
outsl
je
roll
inc
sub
mov
inc
imul
jae
in
lcall
and
mov
sbb
cmp
or
ljmp
and
mov
mov
cli
sbb
fsubl
pop
sti
popf
adc
loop
fidivl
outsb
out
lcall
cmc
in
imul
das
jecxz
outsl
add
jbe
pop
adc
or
xor
sub
add
sbb
push
xchg
or
pop
in
add
in
inc
cwtl
ret
out
aaa
sub
xchg
pop
pushf
mov
and
test
in
pop
stos
ss
and
aam
andl
dec
cmc
cmpsb
addr16
dec
mov
sar
push
dec
mov
cmpsl
popf
ficoms
ss
jne
stos
and
ja
jne
inc
daa
pop
or
test
out
jmp
add
test
insb
mov
repnz
sbb
call
aam
mov
mov
xor
add
sti
repnz
dec
nop
cmp
mov
or
mov
xchg
adc
out
aam
in
sbb
sbb
pop
scas
or
and
inc
aaa
test
push
push
cmp
xchg
stos
repz
frstor
popf
xchg
or
stos
xchg
fcoml
add
jmp
add
jo
mov
xor
jp
push
xor
test
mov
jmp
jne
iret
or
mov
mov
and
sbbl
aad
add
pop
sbb
dec
lcall
sbb
bound
fs
in
xchg
mov
sub
mov
sbbb
push
pop
cmc
xor
sbb
mov
lea
xchg
push
cmpsb
insb
push
pop
sbb
enter
in
lds
aas
rcrb
loopne
fldcw
js
lret
xchg
into
push
cmp
mov
cli
les
mov
sub
mov
push
pop
pop
clc
push
loopne
inc
xorb
xor
and
mov
adc
bound
inc
sub
sub
rclb
in
cmpsl
xor
pop
push
xchg
je
mov
rcll
jbe
pop
sbb
and
push
cwtl
adc
push
out
andb
popa
mov
sbbb
js
and
pop
mov
scas
adc
cmc
xor
ret
and
aas
sub
push
inc
dec
inc
jns
addl
mov
and
popa
rclb
push
adc
and
cmc
mov
dec
xor
ss
add
pop
sub
inc
push
xchg
rolb
jb
movsl
ja
jo
pop
xor
push
xor
fdivs
mov
cmpl
das
rolb
push
and
stos
pop
push
add
cli
adc
add
addr16
rorl
adc
js
inc
test
iret
gs
jns
sub
push
xor
popa
adc
ja
mov
push
jae
pop
jne
mov
lahf
cmpsb
mov
push
mov
pop
lods
cmp
leave
cmp
cmp
mov
shr
inc
outsb
hlt
mov
ds
xchg
sub
jge
popa
lret
mov
test
xor
push
or
dec
mov
sbb
inc
loop
pop
sbb
fistps
dec
inc
movsl
lods
pop
add
mov
mov
mov
iret
push
adc
call
push
pop
out
adc
sbb
stc
adc
mov
or
mov
mov
push
adc
cs
loope
or
sbb
fsubrl
cmpsl
sbb
data16
lods
sbb
ret
mov
cs
cwtl
push
push
pop
popf
clc
test
ss
xor
dec
gs
cmpsb
push
push
mov
or
xor
rol
icebp
and
push
and
add
fcoml
dec
fsubs
testl
xor
add
loop
push
test
sub
mov
mov
loope
dec
inc
mov
dec
pop
sub
call
stos
lret
pop
pop
push
mov
push
arpl
mov
test
rcrl
cmp
dec
cmpsl
pop
add
mov
cltd
pushf
xchg
mov
addr16
sub
push
or
cmp
and
mov
lahf
out
mov
ds
out
mov
pop
jnp
mov
iret
fnstcw
and
ret
mov
jmp
push
inc
jne
shll
push
mov
sbb
or
sub
std
dec
setne
iret
mov
je
push
add
pushf
push
enter
sub
int
ds
iret
ret
jnp
jo
xchg
lods
sub
icebp
cmp
outsb
jge
aaa
xchg
pop
in
mov
push
jp
in
int3
pop
outsl
gs
lret
mov
mov
clc
ffreep
sub
mov
jp
mov
imul
inc
leave
mov
inc
xchg
pop
stos
xchg
lods
dec
pop
sub
mov
sti
sub
jne
jnp
sahf
das
cmc
addr16
cs
icebp
out
or
inc
rcll
sahf
xchg
in
sbb
lods
cs
and
ja
loop
cwtl
sub
scas
movb
ret
inc
lods
push
push
jl
lods
push
clc
and
cmovle
mov
cmp
aad
arpl
int
into
nop
int
fsubl
loope
clc
js
cs
or
arpl
dec
cmpsb
sbbl
lret
mov
cmovo
adc
jle
adc
jle
mov
imul
shll
adc
jmp
sbb
or
jge
nop
cwtl
lahf
cs
mov
das
enter
cmp
fldenv
mov
sbbl
push
mov
cmp
mov
sbb
sarb
sbb
mov
lcall
sbb
fidivs
xor
sbb
mov
je
loopne
mov
push
in
or
or
in
mov
add
ja
cld
lret
cmpsl
or
jae
mov
push
jg
call
lock
mov
scas
loopne
and
cld
cmp
shrb
mov
stos
jae
pop
jecxz
xor
and
ficoml
add
shlb
xchg
scas
stc
cmp
and
ja
mov
dec
sarb
into
std
stos
movsl
pop
dec
mov
add
in
mov
and
imul
dec
or
inc
movsl
cwtl
push
inc
or
xchg
loope
popa
ja
aas
aas
in
arpl
bound
fiaddl
or
inc
std
sub
and
into
mov
mov
pop
cmp
or
gs
mov
sbbl
lret
inc
xchg
lea
sbb
xchg
divb
inc
repz
cmp
cltd
sub
sbb
je
dec
xor
out
and
dec
gs
jle
loop
cmpl
subl
inc
mov
push
or
sub
mov
add
lret
rorl
adc
icebp
lock
xor
add
pop
es
loope
xor
dec
dec
push
popa
jle
subl
xor
cmp
das
ret
clc
inc
dec
push
daa
iret
push
lds
out
xchg
and
ljmp
inc
sti
ret
xlat
stos
cwtl
sahf
xchg
xlat
inc
lea
push
je
mov
xor
sbb
std
xchg
test
inc
sub
std
orl
lret
push
subb
sahf
addb
adc
hlt
jl
enter
xchg
add
push
or
xchg
imul
mov
std
pop
loope
inc
lcall
rol
xchg
movsb
jecxz
mov
repnz
pop
pop
mov
lret
daa
or
xor
adc
andl
in
insl
lcall
stc
dec
push
rcr
inc
pop
adc
adc
out
adc
shlb
scas
mov
out
daa
sbb
or
cmp
ror
fcomp
sbb
rclb
mov
icebp
aas
push
mov
icebp
repz
push
sub
icebp
stc
in
sarl
cs
push
push
pop
cli
std
fisttps
xchg
jbe
shrl
stos
ss
rorb
inc
adc
in
mov
or
xchg
outsb
jb
mov
stc
mov
sti
inc
loop
pop
lret
scas
sub
cli
scas
in
dec
imul
mov
mov
add
popf
fsubl
mov
sbb
jnp
push
mov
push
mov
repz
sub
rcll
mov
icebp
xor
test
inc
cmc
cs
pop
and
jge
test
add
mov
ljmp
mov
xchg
in
push
sti
stc
mov
pop
and
inc
push
adc
rcrl
fsubp
je
push
inc
mov
loop
das
out
mov
jg
test
and
mov
mov
jns
mov
sub
das
cmc
aam
mov
psubb
mov
mov
je
insl
dec
pop
xchg
xchg
rcll
cmc
add
pop
jno
mov
imul
cs
pop
mov
sub
sti
mov
cmp
imul
pop
jnp
out
ljmp
inc
xchg
int3
lds
add
inc
cwtl
xchg
adcl
lret
and
sti
dec
mov
outsl
idivl
pop
mov
jbe
cld
cs
and
push
or
mov
pop
insl
shlb
mov
js
add
xlat
adc
ljmp
aam
fstpt
bswap
sub
xacquire
ret
out
jmp
dec
fisttps
push
je
lods
mov
jl
sbb
mov
sbb
cld
mov
mov
mov
mov
movsl
pop
fmull
add
jne
jle
sbbl
dec
xchg
inc
mov
dec
fidivs
cli
dec
ret
jg
push
cld
popf
es
mov
andb
xlat
pop
jmp
ljmp
insl
and
pushl
or
push
aad
dec
inc
int
mov
mov
pusha
add
pop
dec
in
push
cmp
xor
dec
jmp
mov
push
sbb
add
lods
into
push
aam
jg
jns
filds
test
dec
jl,pt
mov
subb
mov
push
rcrl
scas
nop
rorb
or
popf
xchg
out
cmc
xchg
sbb
mov
les
push
mov
mov
xchg
je
add
xor
out
xor
popf
and
push
loope
xchg
add
mov
lcall
test
hlt
xchg
inc
mulb
les
sub
nop
lock
ja
pushf
movsb
aas
jl
pop
pusha
jbe
mov
inc
ja
hlt
call
incl
cli
mov
bound
bound
and
push
xchg
fsubs
ss
jp
cs
dec
dec
jecxz
xor
sub
dec
aas
out
aam
icebp
dec
mov
or
decl
jmp
xchg
pop
mov
jge
push
add
mov
mov
jo
xchg
loop
inc
shrl
sub
flds
jns
xorl
jne
pop
jl
push
push
jo
mov
cmpsb
push
jecxz
ret
lahf
jbe
fmuls
pop
add
adc
sub
insb
sub
add
subb
sbb
pop
inc
push
dec
dec
in
jae
xchg
pusha
lret
sub
sub
or
aad
movsl
outsl
cmp
shrl
or
push
sub
out
mov
add
add
xchg
add
movl
pusha
mov
pop
sbb
pop
pusha
adc
inc
or
adc
add
xor
sbb
mov
lret
add
pop
sub
ret
mov
and
inc
add
and
ds
outsb
add
fildl
cld
sbb
add
cmc
dec
add
push
sarb
push
add
add
add
jno
mov
add
xchg
add
sbb
inc
add
aam
clc
stos
lahf
xorb
addb
ds
cwtl
inc
add
add
jp
sahf
add
xchg
andl
jo
addb
or
add
pop
add
nop
sub
add
fcompl
add
test
xor
pop
or
add
add
and
jae
or
mov
notl
lock
push
add
dec
lea
clc
add
mov
sub
mov
cwtl
cmpl
rclb
add
sbb
adc
faddl
rol
xor
push
add
add
rcrb
mov
rolb
sub
xor
add
iret
add
add
sbb
or
xorb
cli
mov
shlb
pavgb
mov
xchg
inc
pop
pushf
sbb
pop
lret
pop
pop
add
add
push
push
add
or
jp
jb
es
add
sbb
lea
push
mov
shlb
jbe
js
rorb
add
or
sbb
mov
sub
cmc
add
xchg
call
fmuls
and
pop
roll
add
test
lods
push
xor
mov
add
add
xor
pavgb
outsl
or
push
ljmp
sub
lock
adcb
add
ror
inc
xor
add
dec
roll
pusha
sbb
jecxz
cmp
mov
sub
add
andb
mov
adc
jb
call
lea
push
inc
lods
inc
arpl
sub
jne
jecxz
in
add
test
xor
mov
mov
sub
sub
lock
add
sbb
or
add
push
sbb
jnp
sbbb
or
add
add
xor
sbb
add
sbb
add
add
shrb
cwtl
or
inc
push
inc
push
cmpb
ljmp
push
add
and
jae
in
or
cmp
daa
add
xchg
mov
fistpll
ret
rorb
addb
sub
cmpsb
mov
xchg
dec
lea
fadds
mov
add
leave
mov
sarb
lret
cmp
outsb
pop
jo
add
lds
addb
sbb
xor
inc
popf
adc
rol
push
jno
pop
repz
add
int3
inc
push
xorb
push
push
jl
mov
or
enter
or
add
add
pop
add
xor
or
cmpb
adc
jg
add
test
xor
rcrb
outsb
pop
mov
popa
pusha
sub
rcll
jbe
enter
inc
pop
add
cmp
and
sahf
orb
xor
xlat
xor
adcb
lret
mov
add
add
add
jmp
ds
rcr
push
leave
es
add
add
adcb
xor
ljmp
lods
xchg
jno
jo
addb
add
add
sarb
dec
push
arpl
push
add
lods
sbb
push
cmp
add
mov
adc
add
adc
fs
or
sbbb
push
std
add
ror
divb
push
add
ljmp
sbb
cmp
pusha
pop
adc
addb
hlt
add
add
enter
fmuls
add
pop
mov
flds
lret
cwtl
push
pusha
pushf
mov
orb
rorb
xchg
subb
cmp
int3
xchg
dec
dec
add
xchg
sbb
loopne
add
add
add
shlb
scas
daa
pusha
add
clc
or
add
pop
adcb
add
add
pop
add
add
xor
negb
add
xchg
pusha
sub
cmp
pop
or
push
rcrb
pop
add
movsb
sbb
cmp
cs
or
add
add
nop
sub
daa
subb
xor
mov
adc
sarl
adc
or
pop
or
adcb
outsb
add
loopne
add
add
add
add
lods
imul
mov
sti
xor
or
mov
jge
xor
shll
in
out
jns
and
mov
es
imulb
subb
shlb
aas
cmpsb
push
mov
pop
fisttps
loop
inc
mov
in
xchg
jmp
xchg
push
dec
mov
add
cmpl
fbstp
push
mov
cmp
mov
dec
je
clc
inc
mov
xchg
pushf
in
rorb
scas
inc
lods
and
jle
add
adc
cmp
inc
sahf
and
mov
lret
lret
mov
pop
jp
stc
mov
and
ret
lahf
push
rcrl
scas
daa
enter
sub
cwtl
jge
push
jmp
test
dec
push
lret
mov
adc
pop
ds
int3
lods
jmp
sbb
icebp
stos
push
xlat
stos
jmp
jecxz
xchg
daa
dec
popa
pop
shlb
ds
cmpsl
or
jl,pt
sbb
xchg
scas
pop
pop
ficompl
push
fcmovbe
push
cmc
fcomip
shl
or
xchg
das
push
int3
sub
sbb
repz
out
pusha
ffreep
iret
pushf
lahf
repz
pop
movsl
pop
mov
xchg
pop
mov
in
pop
in
jg
mov
cltd
in
ret
and
fidivrl
ret
sub
popf
repz
xchg
push
cmp
dec
inc
dec
xor
enter
push
adc
movsb
sub
idivl
pop
mov
addr16
xor
out
dec
ja
inc
sbb
mov
pop
inc
aas
dec
jl
mov
fsubs
or
pop
test
inc
jbe
add
pop
and
pop
pop
into
inc
jle
repnz
cmp
cmpsb
cld
pop
repnz
cmp
xchg
adc
inc
pop
pop
inc
aaa
cwtl
inc
cmp
dec
sub
sbb
aaa
jmp
sbb
mov
test
scas
xchg
out
clc
cmc
fs
ja
jp
ljmp
lahf
out
mov
jae
call
mov
mov
mov
int
outsl
xor
pushf
ljmp
movsl
mov
dec
push
sub
xor
neg
pop
cmpsl
cmc
dec
sbb
or
jp
repnz
sub
fnstenv
sbb
lods
in
outsl
or
mov
add
into
sub
push
into
mov
dec
push
arpl
jns
inc
mov
frstor
cmc
stos
mov
mov
push
call
gs
aad
loop
notb
out
sbb
cld
sub
xchg
call
in
outsl
icebp
jno
mov
sub
sbb
leave
mov
cmpsb
cmp
mov
ret
xor
adc
pop
xor
lock
push
std
clc
mov
lret
jne
movsl
mov
lods
insl
jp
dec
insb
mov
jo
sub
je
sbb
pusha
and
fs
sbb
ret
fistpll
mov
dec
in
adc
pop
mov
xor
in
xchg
pop
push
subl
ret
add
les
jb
jb
xchg
inc
int
and
stos
pextrw
xor
daa
mov
and
leave
rclb
mov
inc
dec
xchg
lret
push
lret
test
scas
sub
aas
divb
push
mov
adc
fs
and
inc
test
mov
pop
test
in
jecxz
or
push
aas
icebp
sbb
popa
fldcw
je
faddp
rorb
sub
jbe
ss
mov
mov
sti
cmp
scas
call
xor
push
ret
fbstp
pop
or
sbb
shl
push
jl
sarb
divb
lea
push
js
nop
cmpsb
int3
jno
je
sbb
sbb
push
jbe
loop
scas
sub
jmp
adcb
fsub
sub
push
push
inc
cli
push
xor
dec
pop
mov
cmp
pushf
sbb
scas
movsl
mov
out
jnp
mov
mov
sar
loopne
aad
xor
fiaddl
xchg
mov
add
inc
mov
imul
pop
hlt
jns
mov
xor
loope
out
icebp
test
sub
sub
cwtl
dec
jae
xlat
cld
jno
pop
and
mov
pop
gs
xchg
lret
cmp
movsl
adcl
sub
adc
shr
mov
in
xor
and
mov
mov
daa
in
fisubrl
add
mov
fsubrl
movb
push
test
pop
cs
mov
pop
ljmp
scas
popf
adc
imul
mov
xor
out
es
push
imul
push
dec
or
int3
out
dec
jecxz
out
pushf
lods
cmp
repnz
stc
pop
rol
in
out
xor
mov
sbb
adc
mov
movsb
mov
into
testl
js
jne
inc
out
and
inc
addr16
inc
shll
test
or
sub
cmp
pop
or
cwtl
jae
and
pop
lods
test
ja
and
mov
dec
std
jb
aad
sub
jl
insl
or
cmp
dec
jne
inc
std
data16
stc
shl
mov
mov
push
shrl
pop
sub
in
lret
arpl
xor
adc
ja
andb
aas
ror
xchg
jns
jp
lods
test
fimull
stc
rcrl
xchg
sub
lret
or
scas
and
fwait
mov
int3
mov
popf
call
xor
cs
push
shl
scas
out
xor
cmp
inc
ja
int3
in
mov
incb
dec
mov
daa
rcrl
in
movsb
lahf
bound
sbb
xchg
stc
sbb
dec
push
popl
cltd
cmp
ss
and
mulw
fidivl
ss
hlt
mov
xorb
push
cld
insl
test
and
xor
sub
adc
nop
and
in
sub
sbbl
imul
pusha
cmp
sbb
push
arpl
bnd
cmp
adc
mov
xchg
pcmpeqd
imul
popf
cs
std
insb
mov
dec
push
sbb
xor
mov
fs
imul
jbe
push
fwait
or
pop
sbb
mov
enter
scas
jecxz
pop
sbb
pop
addr16
pop
mov
xor
imul
or
mov
inc
outsl
ret
outsl
pop
fldt
inc
pop
lods
mov
insl
lods
je
cmc
mov
pop
lret
sarb
fisubs
clc
push
in
mov
in
loop
mov
loop
mov
ja
lea
push
jmp
test
sahf
sar
and
push
mov
int3
arpl
adc
push
sub
gs
outsb
jge
sti
sub
sbb
cmc
arpl
in
or
inc
pop
hlt
jecxz
inc
movsl
jb
and
dec
cli
jecxz
enter
aam
pushf
sahf
inc
cmp
xor
and
push
add
pushf
in
jno
leave
movb
arpl
and
test
sbb
lret
scas
add
cmp
imul
popf
mov
mov
pop
mov
cs
or
pop
dec
cs
jge
pop
lahf
pop
mov
cmc
adc
ljmp
and
or
cmp
mov
mov
jge
pusha
jno
pop
sub
dec
dec
int
in
and
add
xchg
pop
jbe
pop
mov
mov
daa
filds
dec
dec
imul
stos
in
jbe
fcomp
dec
out
cmc
mov
cmp
flds
rclb
js
push
mov
and
and
lea
js
mov
ret
mov
je
pop
push
stc
repz
sub
test
jo
jnp
mov
add
push
xchg
xlat
loope
imul
ret
loope
das
jnp
daa
inc
mov
jns
sti
adc
adc
mov
and
sbb
or
pop
pop
adc
arpl
imul
pop
ds
adc
sbb
cli
andl
jecxz
nop
xchg
or
iret
push
cmp
subb
dec
jecxz
fisubrl
xchg
push
mov
add
mulb
sbb
cli
es
mov
xchg
add
xlat
jmp
inc
cltd
scas
ds
fwait
rclb
xor
jno
inc
andl
add
cld
aam
cli
jl
aad
inc
push
mov
sti
sub
fidivl
xchg
shlb
stos
gs
int
xchg
cmpsl
jge
clc
mov
int
repz
cmp
mov
insl
mov
insl
push
das
mov
mov
jp
ds
cmp
mov
out
outsb
push
aas
jl
dec
ljmp
out
pop
pusha
mov
mov
rolb
std
imul
into
jne
dec
stc
mov
adc
les
mov
test
sbb
sbb
stos
das
ret
lds
adc
insb
or
out
cmpsl
incl
js
mov
mov
pop
push
fs
insb
movsb
sbb
call
mov
cwtl
mov
rcll
iret
int3
pop
jne
fwait
and
psllw
sub
jle
mov
jno
out
sbb
jl
std
leave
mov
in
std
sub
push
mov
adc
xchg
sarb
push
mov
sbb
bound
mov
sub
jae
lds
jne
xor
lahf
pop
lret
adc
inc
and
adc
insl
or
mov
ds
inc
ds
cmp
repz
out
lods
insl
lods
fists
dec
jge
das
int
pop
sti
ret
mov
xor
push
mov
jp
loop
popf
rcrb
arpl
std
stos
jg
lods
sbb
fbld
hlt
out
mov
sbb
cli
mov
sti
stos
cmp
aas
ljmp
jmp
sbb
in
cmp
push
ja
push
in
and
bound
sub
insb
test
adc
outsb
mov
aas
sbb
mov
cmp
mov
jb
mov
xor
arpl
cwtl
lods
adc
arpl
xor
ja
mov
sar
arpl
repnz
inc
aam
insl
dec
push
imul
xchg
mov
enter
lcall
aaa
outsb
cmp
mov
jns
mov
mov
es
lret
push
orl
orb
movnti
cmp
mov
jbe
lret
cmp
loop
or
fstpl
fisubrl
imul
int3
push
roll
jl
popa
push
xor
push
inc
dec
sbb
jmp
mov
fisttps
stos
jb
lock
outsl
jae
sbb
jb
sahf
mov
mov
leave
jle
push
sti
cmpsl
hlt
jne
cmpsb
insl
mov
ja
pushf
jle
int3
mov
mov
pop
ficoml
std
iret
and
movb
les
pop
sub
mov
and
mov
ljmp
sbbl
ljmp
sub
pop
scas
mov
ljmp
push
es
aad
leave
in
jb
or
insb
lahf
jle
xlat
pop
hlt
iret
push
mov
fcmovnu
mov
jl
inc
lahf
js
add
rol
scas
dec
andb
fwait
push
lcall
movsl
jne
mov
addr16
in
cmpsl
mov
mov
and
je
cmp
lahf
loopne
jge
push
sarl
pop
pop
scas
sti
std
scas
stos
xchg
xor
inc
fistpll
ffreep
mov
dec
and
pop
inc
int
out
sbb
popa
add
out
dec
or
lods
xchg
sbb
sahf
jge
jle
cmc
jle
fxrstor
pop
jns
pop
test
imul
es
das
dec
xchg
xlat
leave
leave
sarl
cmpsb
mov
fldl
push
sub
dec
sti
or
push
and
cld
mov
cld
pop
mov
push
in
dec
arpl
lcall
pop
clc
jge
lods
sbb
call
pop
jne
inc
push
fldt
xchg
jle
aam
in
cld
pop
fbstp
pop
pop
xchg
mov
jo
outsl
mov
les
sub
scas
sti
sub
test
pop
mov
and
cld
xchg
jmp
fucomp
inc
push
pushf
pop
sbb
ror
sti
popf
xlat
pop
stos
fidivs
lds
imul
scas
push
outsl
mov
mov
push
cld
mull
movsl
out
adc
lahf
in
aad
pop
jb
push
in
mov
sahf
add
insl
xor
ljmp
pop
mov
dec
pop
popa
pop
xchg
cli
xlat
lret
dec
fistpl
jg
dec
add
or
mov
fdiv
pop
and
fistpll
push
dec
icebp
dec
add
sub
and
mov
fisubl
mov
popa
or
cmp
lods
mov
sahf
fninit
aas
leave
or
testl
dec
ficompl
push
sub
dec
dec
cli
mov
jo
jmp
jl
inc
ja
sub
xlat
sarb
std
xorb
dec
in
fbstp
mov
popf
pop
aas
pop
imul
stos
outsl
jge
push
std
cmp
in
push
fdiv
bound
push
frstor
pop
sti
scas
push
lret
loope
mov
je
or
push
int
outsl
cmpsl
and
in
dec
cmp
adc
dec
clc
cmp
test
or
xchg
dec
pop
xchg
add
or
shr
adc
pop
sub
lret
pusha
aaa
adc
cmpsl
test
cmpsl
xor
outsb
pop
iret
out
or
aad
xor
cmp
jnp
xor
dec
and
cs
aad
jle
jbe
fcmovnu
pushf
jno
insb
inc
popf
pop
stc
lods
mov
div
sti
push
outsb
adc
mov
fistpl
cmp
jp
mov
icebp
sbb
lcall
push
xlat
je
sbbb
mov
sbbl
inc
pop
lods
sbb
cmc
and
sahf
xor
jno
mov
xchg
popf
pop
dec
pop
inc
jle
mov
movsb
cli
stos
aad
xor
sbb
mov
aas
leave
xor
in
push
xor
push
and
aam
aad
scas
or
inc
outsb
xchg
cli
stc
push
andb
add
lods
inc
scas
cmp
faddl
mov
mov
adc
icebp
sbb
inc
pop
pushf
bound
push
testl
mov
xor
call
mov
push
mov
xor
sub
popf
imul
push
add
or
fs
orb
imul
push
adc
sub
mov
aaa
mov
test
scas
out
into
arpl
notl
cli
sbb
int3
out
lret
jnp
and
sbb
sub
ret
add
popf
or
in
mov
dec
cmc
fdivrl
lret
ja
or
lods
and
cld
sub
jle
ja
loopne
jnp
inc
fs
out
out
cmp
imul
jp
push
pop
and
jo
or
lea
es
div
in
fistl
add
test
test
cmc
scas
lahf
cwtl
cs
cmc
inc
repz
sbb
shrl
sti
aam
out
pop
xor
jmp
fwait
dec
rcrl
mov
xchg
and
repnz
icebp
xchg
jo
lret
ficoms
mov
mov
mov
and
jl
mov
fwait
xor
xchg
xchg
inc
mov
ret
dec
jp
fs
mov
hlt
mov
mov
inc
int
push
std
xchg
jnp
xchg
sbb
push
dec
push
stos
lahf
dec
roll
fwait
xchg
xchg
mov
xchg
cld
xchg
sub
cltd
out
lods
in
test
sarl
sub
orl
repz
shlb
lret
ret
mov
xchg
pop
mov
in
outsl
popf
mov
js
ljmp
sbbb
mov
ds
dec
shl
dec
dec
das
sub
pop
push
sub
xor
cmp
mov
call
cmpsl
rclb
andb
lret
xchg
push
jl
jne
lock
addb
sbb
bnd
inc
jmp
cmp
push
mov
jl
mov
out
xlat
movsl
xchg
pop
loop
test
scas
cmpsb
lock
sub
jne
das
iret
je
fwait
les
cmp
lds
mov
gs
subb
les
push
adc
rorb
ret
test
pop
test
xchg
shll
cmpsl
xchg
xchg
out
jb
mov
mov
lcall
xchg
loop
sahf
xchg
and
ret
xchg
mov
aam
test
js
cmp
dec
mov
out
mov
mov
dec
dec
push
and
mov
xchg
push
push
ret
push
or
out
pop
and
push
shrl
insb
cmpb
xchg
mov
push
push
mov
jge
xchg
popf
ds
mov
inc
dec
hlt
push
jl
cmp
xor
xchg
mov
adc
mov
inc
xor
aaa
pop
int3
mov
imul
mov
fimull
inc
ss
hlt
cltd
lret
leave
shrl
and
cmpsl
adc
push
daa
enter
push
enter
mov
cmpsb
call
icebp
lods
pop
mov
push
push
cli
jmp
jb
imul
pop
scas
cmp
inc
notb
jnp
mov
xchg
fidivl
shll
jns
lret
mov
adc
movl
jmp
in
jge
pop
jp
mov
pop
push
popa
inc
shll
lds
pop
pop
mov
push
test
shrl
gs
mov
insb
and
pop
sarb
push
fs
or
mov
insb
add
xchg
aas
stos
sub
cmpb
jl
add
adc
scas
pusha
hlt
cmpsl
dec
push
pop
mov
cmpsl
in
enter
adc
adc
mov
xchg
push
jae
inc
sbb
add
mov
xchg
adc
push
sub
sbb
outsl
cmpsb
sbb
inc
movsl
xchg
xor
fcmovnbe
insb
sbb
sub
mov
test
insb
cltd
xor
mov
sub
rcr
and
cmp
sbb
xlat
adc
push
inc
jg
xchg
pop
repnz
inc
jno
lahf
vmwrite
pop
xchg
xchg
fisubl
sub
mov
ljmp
jg
ljmp
sub
cmp
nop
cltd
mov
gs
cs
xor
orb
dec
or
push
mov
lret
xchg
mov
and
lret
xchg
xchg
and
pop
lods
arpl
push
push
push
mov
push
adc
je
das
les
add
mov
xchg
popa
jle
push
orl
stos
push
test
adc
int
pop
out
pop
jnp
ret
pop
loop
cld
mov
js
mov
je
cs
enter
clc
mov
or
lret
xchg
fdivrp
xchg
movsl
mov
sub
fisubl
mov
mov
xchg
cs
ss
mov
mov
pop
and
fs
das
rclb
push
mov
xchg
cmp
mov
pop
or
dec
testb
lock
repz
or
and
imul
xlat
mov
lds
pop
jecxz,pt
fsubrl
cmp
push
sub
daa
add
add
into
sbb
pop
add
pop
xchg
mov
mov
scas
mov
lret
fs
pusha
add
dec
xchg
cwtl
dec
push
roll
xchg
and
xchg
les
in
push
pushf
outsb
fcmove
xor
nop
adc
inc
jmp
in
fildll
sub
mov
or
fld
clc
xchg
cmp
mov
stos
inc
mov
adc
imul
jecxz
shlb
test
and
test
cltd
cli
add
inc
jno
push
adcl
mov
test
inc
jns
sarl
cld
xor
mov
jle
mov
cmp
lret
repz
test
pop
pop
jmp
lret
shlb
or
push
push
mov
aam
insb
insl
inc
add
xchg
out
pop
mov
xchg
push
mov
les
out
cmc
clc
std
int
cmp
fnstenv
push
adc
aas
mov
outsb
sub
mov
push
fnstsw
jge
cld
data16
cld
mov
je
mov
ss
mov
dec
addr16
sub
jbe
mov
leave
loop
push
call
test
repz
push
sub
push
loop
fisubs
loope
int
gs
rcll
xor
lock
fcomp
push
jae
and
sbb
inc
movsb
and
fs
lock
test
cmp
lds
pop
adc
inc
mov
and
cmpsb
push
lods
gs
xor
push
mov
xchg
out
inc
pop
lret
aas
push
inc
cltd
cmp
cltd
insl
cli
mov
daa
mov
xlat
mov
xchg
xor
push
adc
dec
push
sar
pop
cli
and
sbb
rcll
push
pop
jmp
movsl
outsl
inc
cmpsb
rclb
popf
test
dec
or
push
mov
sub
int3
push
cmpsb
rorb
cmp
jno
inc
push
out
xchg
cltd
lret
xor
jg
movsl
xor
fs
icebp
hlt
mov
in
addr16
mov
lret
mov
int3
mov
inc
jg
jl
cmpsb
rcrb
dec
cwtl
sub
in
fwait
movsl
adc
iret
push
push
push
sbb
mov
std
cli
mov
mov
add
call
adc
stc
jg
push
push
mull
cmp
andb
cli
pop
or
xchg
mov
adc
sub
insl
cmp
jmp
pop
adc
fcomi
fnstenv
dec
rorl
movsl
mov
push
ds
test
loop
inc
test
jns
mov
mov
fxch
mov
mov
enter
mov
pop
lret
popf
mov
lret
ds
sbb
push
sub
push
jmp
xchg
test
cmp
xchg
pop
pop
sub
mov
test
in
xlat
fadds
fistps
lods
dec
adc
dec
xchg
stos
les
push
and
rcll
lods
adc
out
xor
mov
xor
adc
cmp
sbb
cmp
sub
and
lahf
push
loope
ja
or
or
xor
fs
sbb
ja
addr16
subl
and
mov
popa
mov
es
lods
sti
cmp
push
sbb
mov
xor
loop
popa
xchg
int3
and
pusha
mov
sbb
push
jno
divl
popa
lahf
add
jp,pn
push
loop
je
pop
out
loope
es
testb
fdivrs
inc
adc
dec
push
mov
pop
mov
mov
xchg
inc
ret
fst
outsb
mov
repz
and
enter
xor
fsubp
dec
lret
scas
negb
sti
and
out
dec
and
std
ret
data16
daa
dec
mov
ret
cltd
movsl
int3
daa
push
jno
xor
div
xchg
int
lahf
out
sub
insl
test
add
psubsb
push
sub
jne
add
arpl
movsb
add
punpckhdq
lret
xchg
adc
fwait
cmp
sub
loop
pop
jns
dec
ss
cmc
dec
in
jno
movsl
pushf
stc
push
mov
insb
push
les
lods
ds
push
and
pop
mov
push
or
mov
pop
aad
dec
mov
int3
adc
or
out
pop
dec
ficompl
jno
es
lea
adc
jo
push
lret
pop
mov
aaa
rcll
lds
mov
in
push
enter
lods
or
mov
imulb
dec
lahf
jecxz
pop
push
mov
flds
pop
mov
inc
push
inc
enter
cmpsb
add
cld
call
jbe
leave
popa
out
out
jbe
mov
popa
vphaddbw
add
int3
ret
sbb
lea
mov
mov
jge
mov
pop
loopne,pt
movsb
jo
sub
dec
push
pop
mov
lahf
aad
int3
fmull
nop
mov
and
in
ds
outsb
pushf
call
scas
pusha
mov
adcl
dec
stc
vmovupd
jle
xchg
arpl
cmp
negl
push
xchg
sbb
jo
add
inc
lcall
inc
adc
mov
rolb
outsl
jno
xor
ret
outsb
mov
pop
add
fs
mov
xchg
adc
insb
pushf
stc
mov
out
jmp
xchg
mov
ja
jmp
cmp
fisubl
scas
jp
stos
outsl
in
jae
sub
jge
jp
lods
outsl
xor
loope
int3
dec
lods
push
insl
xchg
scas
roll
dec
xlat
cld
lods
xchg
movsb
ja
icebp
cmc
fisubrl
in
aas
mov
jge
fimull
lret
lds
ror
add
jp
xlat
fucomi
mov
lret
xchg
pop
pop
lret
xchg
clc
lock
lcall
cs
push
pop
xchg
cmp
nop
insl
jbe
or
ss
call
data16
xor
hlt
dec
mov
and
fdivl
daa
dec
add
rorl
xor
movsb
add
popf
jae
fdivs
and
adc
adc
lahf
and
adc
loop
into
movsb
leave
loopne
jne
mov
shll
scas
in
sbb
decl
lea
xor
and
inc
fiaddl
jbe
sahf
fs
into
jge
in
stos
stc
jo
pop
inc
iret
mov
xchg
push
ret
cld
push
mov
mov
lods
sub
ja
mov
cmpsb
sbb
push
pop
push
test
mov
mov
movl
or
lret
sbb
sbb
mov
sbb
inc
jmp
cmp
lret
push
sub
dec
dec
leave
pop
xchg
pop
pop
pop
enter
rcrb
or
adc
inc
mov
xchg
jmp
test
icebp
sahf
push
cmp
test
stc
stos
cmp
mov
jnp
aas
insl
call
in
sahf
out
inc
jl
or
add
push
cmp
leave
mov
lea
shlb
jmp
cli
fiadds
mov
dec
jno
icebp
mov
mov
inc
sbb
clc
push
les
imul
mov
aaa
mov
xor
leave
daa
sub
mov
and
leave
aam
mov
fidivl
mov
out
scas
jne
sbb
shl
das
xchg
mov
daa
inc
xchg
in
das
xorb
test
push
cmp
jns
pop
jae
jecxz
xchg
mov
cmp
sti
jg
insb
mov
stos
movsb
inc
data16
jo
subb
push
cmp
dec
arpl
mov
cld
xchg
testl
insb
mov
lret
je
and
lret
cmp
jns
inc
mov
popf
stos
xor
ljmp
sub
sahf
ds
xchg
in
cmpsb
or
mov
inc
sbb
sub
adc
jmp
and
aas
movb
ret
nop
negb
mov
and
lcall
mov
loope
jl
mov
sbb
in
push
cmp
enter
mov
rolb
loope
jl
icebp
adc
jmp
movsl
add
push
popa
pop
lods
fs
jns
stc
sub
ret
pushf
or
xchg
ljmp
dec
fsubrs
popa
mov
dec
cmp
cmpsl
cmpsb
idivb
icebp
lea
cmpb
lret
xchg
lods
iret
jbe
lock
imul
dec
jl
rcr
mov
pop
xchg
mov
fwait
insb
xlat
lea
jle
cltd
dec
xchg
pop
and
into
mov
push
inc
add
pop
xchg
lcall
mov
mov
dec
cmp
pop
xchg
dec
mov
js
adcl
inc
jl
mov
repnz
mov
push
repnz
mov
cmpsl
mov
test
enter
out
fcomi
sahf
incl
rorl
and
ret
shlb
bound
xchg
mov
jbe
cmc
xor
mov
mov
lret
daa
ret
jbe
cmp
icebp
adc
clc
in
lret
stos
and
xchg
xlat
add
xchg
add
inc
mov
movsl
divb
outsl
mov
sti
and
sbb
push
jb
inc
cmp
adc
lods
repnz
mov
scas
stc
xlat
notl
mov
mov
inc
sub
fcomi
int
jp
fwait
cmpsb
gs
xchg
pop
inc
jge
aad
pop
outsb
outsb
movl
sub
lcall
mov
dec
xchg
pop
dec
testl
push
jbe
jbe
dec
mov
daa
and
mov
into
out
push
mov
pop
cmp
popa
push
mov
pop
in
lret
stos
push
mov
dec
lcall
ljmp
dec
push
cmp
cli
jbe
pop
sbb
hlt
cmpsl
cmpsl
pop
dec
and
adc
popf
imull
sbb
pushf
notb
lret
xor
push
dec
iret
jecxz
out
jnp
inc
hlt
mov
add
int3
dec
jne
lock
push
icebp
rcrl
inc
cmp
add
fs
out
sbb
dec
repz
pusha
out
into
fsub
jle
inc
pop
out
cld
cmp
sahf
pop
imul
lcall
ljmp
shll
sti
adc
shr
cmc
inc
inc
ja
or
in
push
es
and
inc
push
subl
xchg
aam
aam
movsb
nop
dec
mov
bswap
bound
movsb
in
mov
jecxz
shlb
addr16
inc
stos
ljmp
pop
mov
cmpsl
outsb
mov
adc
shl
xchg
pusha
pop
daa
xchg
sahf
ljmp
fucom
ret
mov
imul
fisttps
int
push
jg
cmc
mov
dec
in
jns
push
cli
test
sub
clc
das
js
inc
push
nop
aas
inc
pop
loope
aaa
stc
imul
inc
les
mov
inc
popf
out
ljmp
add
insb
adc
jb
neg
cld
fdiv
mov
pop
lahf
call
push
mov
mov
mov
in
test
int
stos
cmp
in
out
inc
in
jnp
movsb
rorb
iret
out
cs
aam
xchg
lods
in
loope
mov
mov
call
jne
xchg
inc
jnp
ljmp
int
cs
mov
push
out
imul
cmp
mov
pop
in
xchg
pop
pusha
add
xchg
mov
sti
mov
dec
aaa
mov
push
shrb
lret
addr16
adc
jecxz
fisttps
pop
mov
sub
loopne
mov
mov
push
jne
andb
mov
out
and
mov
repz
mov
pop
in
xor
pop
fistpl
repz
jge
mov
cs
jmp
dec
mov
stc
je
ja
rcr
das
xchg
cmp
sub
xor
push
add
es
sbb
pop
stos
test
adc
je
int
sub
mov
adc
and
lock
push
cld
pop
aas
test
imul
mov
push
cmpsb
mov
sub
push
mov
in
xchg
aam
add
cwtl
dec
jns
inc
fdiv
add
inc
mov
popf
dec
and
sub
jl
mov
pop
ss
shrl
repz
cmp
jp
lret
enter
xor
clc
and
cli
adc
sub
outsb
pop
leave
pop
je
jns
push
loop
mov
sbb
adc
std
jg
cmp
in
dec
orb
bound
cli
pop
fs
imul
and
adc
xchg
dec
push
dec
lcall
aad
stos
or
mov
cs
scas
xor
test
pushf
dec
data16
repz
adc
pop
jge
cmp
shlb
sbb
inc
lret
and
sbb
aam
sahf
add
mov
mov
jns
aad
outsb
mov
cmpsl
stc
xchg
jecxz
dec
jmp
fnstenv
xor
out
in
imul
xor
mov
pop
popf
fsubs
pop
cmp
pop
fidivrl
adc
fimuls
adc
sub
jp
push
data16
aas
arpl
cs
out
test
fadds
mov
aad
call
inc
jbe
cmc
push
inc
dec
addr16
ja
adc
das
mov
dec
aaa
sbb
cmp
aad
mov
push
push
fcoms
insl
cli
add
push
dec
adc
dec
loopne
int
jg
xor
int3
lahf
adc
xchg
outsb
jg
pop
popf
sub
sbb
cmp
int
movsl
ret
lock
push
aaa
and
scas
popa
sbb
sbb
das
lret
loope
rcrl
dec
mov
jecxz
test
rcll
adc
xchg
pop
in
std
push
out
push
enter
xchg
adc
add
jmp
neg
mov
test
jne
cmpsl
leave
es
inc
xchg
popf
jg
nop
jbe
mov
decb
imul
insb
push
pop
cmp
insb
push
jle
inc
std
das
cmpsl
movsb
mov
aas
cmp
adc
lret
add
stos
mov
test
jle
mov
aad
cmp
fstps
rclb
mov
or
add
stos
jle
sub
mov
cmp
cmp
pop
xchg
pop
ret
jmp
ret
lahf
or
push
inc
jp
pop
xchg
cmc
sbb
pop
mov
rcrl
imul
stos
xchg
jecxz
push
dec
in
in
dec
inc
push
pop
aas
cli
leave
adc
fdivrp
ret
add
lock
mov
mov
pop
and
push
loopne
outsb
lods
cli
sarl
enter
xchg
add
cmc
stc
aas
mov
push
pop
or
and
sbb
ljmp
inc
stos
repz
call
jbe
std
es
scas
imul
outsb
mov
stc
popa
mov
jb
stos
pop
inc
mov
inc
push
imul
jo
mov
mov
mov
gs
xchg
rcll
cld
or
sub
aad
add
or
movsl
jne
xchg
push
insb
xor
fs
dec
arpl
decb
jg
jno
xor
int
repnz
aad
inc
mov
jnp
fstl
xchg
push
cmpb
pop
and
pop
dec
leave
shll
sbbb
cmp
cmpsl
dec
sti
pop
test
fsts
test
adc
and
lcall
adc
in
cmpxchg
mov
icebp
fucomp
jp
mov
push
andl
pop
std
cmp
cmc
mov
loope
nop
test
xchg
cli
insl
sbb
loop
jle
mov
sti
cmpl
push
outsb
push
stc
sbb
and
push
lahf
pushl
js
cmp
mov
xchg
mov
fstps
push
fidivrl
out
mov
enter
xchg
adc
call
jecxz
in
icebp
mov
insl
jbe
repz
mov
jg
sub
sbb
sbbl
mov
aaa
pop
sub
jl
pop
xlat
shrb
sbb
rorl
pop
nop
test
test
cmc
sbb
sub
call
jnp
pop
stc
push
mov
lods
dec
lock
out
hlt
imul
mov
imull
push
dec
scas
stos
lahf
adc
rcrl
les
inc
aam
outsl
outsb
movsb
testb
sbb
mov
iret
xchg
shl
xchg
aam
cwtl
pop
mov
dec
adc
popf
mov
xchg
insl
les
cld
ja
lret
mov
outsb
orl
dec
dec
movsl
daa
sar
jge
adc
sub
push
outsb
aad
rcrl
adc
arpl
and
xor
int3
notl
outsb
dec
cmpsl
mov
mov
cmp
pop
shrl
das
push
xor
mov
ljmp
cmp
mov
push
fs
sub
mov
inc
gs
mov
mov
mov
mov
jmp
pushf
fwait
jmp
es
mov
xor
inc
mov
scas
stos
dec
rdtsc
aad
xchg
adc
jne
xor
adc
ljmp
stos
pop
in
pop
loopne
les
fucom
dec
jo
and
movb
mov
push
add
int
cmp
enter
pop
jge
pop
movsl
dec
xor
push
pop
push
mov
mov
push
addr16
dec
fnsave
jg
push
mov
stc
or
xor
jge
dec
mov
repnz
mov
cmp
xchg
xor
inc
jg
jae
mov
fisttpll
mov
stc
inc
xor
test
and
addr16
sbb
push
adc
imul
push
dec
fisttps
pop
arpl
mov
std
aad
and
xchg
inc
or
jno
mov
incl
push
push
pop
scas
cmp
popf
push
out
movsl
jmp
insb
mov
into
and
ss
jbe
test
iret
push
sub
mov
inc
cmc
mov
mov
xor
push
scas
mov
stos
std
notl
push
mov
faddl
test
push
jbe
inc
sub
out
int3
std
xchg
in
into
mov
push
mov
dec
out
sahf
jl
imul
mov
sub
lcall
int
pop
in
xor
sub
cmpb
lds
bswap
push
mov
bound
adc
enter
lret
lsl
add
xchg
xchg
mov
sub
push
sbb
sbb
test
rcll
insl
fisubrs
inc
push
scas
repnz
fistpll
mov
add
xor
out
ret
rorb
cmp
jg
xchg
pop
mov
sahf
bound
sbb
loopne
lahf
movsb
dec
and
mov
rclb
cli
lret
int3
jb
xor
add
jne
sbb
mov
loop
andl
je
outsb
outsl
repz
ljmp
call
pop
add
aaa
jp
hlt
dec
popf
mov
jns
adc
dec
pop
je
dec
pop
daa
dec
arpl
push
repz
inc
stos
cs
fcmovbe
pop
inc
ja
aam
jb
gs
loop
mov
adc
cmp
fisttps
and
fwait
movsl
and
incb
sub
dec
inc
push
pop
loopne
pop
sub
mov
inc
inc
jp
and
jb
rcll
in
add
pop
mov
adc
pop
jae
dec
mov
dec
xor
pop
inc
lret
jmp
sbb
lods
aas
lds
jbe
sub
lea
mov
aas
int
subb
jns
test
jle
hlt
mov
or
pop
jle
cs
test
lock
xchg
test
leave
dec
lret
pushf
xor
and
push
xchg
stos
mov
dec
mov
stos
out
pop
in
sahf
iret
mov
dec
xlat
xchg
scas
cmpsb
mov
adc
pop
mov
cmp
dec
sbb
out
out
scas
stos
jecxz
sbb
js
fst
jns
cltd
movsl
push
mov
fnstenv
xchg
pop
cmp
add
jae
out
mov
mov
and
jg
lods
bound
or
cld
xor
jle
mov
mov
ljmp
outsl
xor
and
ja
out
out
cltd
incb
sbb
xchg
ds
sbb
icebp
mov
jo
mov
cmp
cmpsl
pop
mov
ljmp
pop
mov
aaa
frstor
test
loope
stos
mov
sub
lea
movsl
dec
sarl
mov
stos
inc
cmpsb
repz
fcomi
mov
pop
inc
imul
push
shlb
ljmp
lcall
ffreep
fldl
adc
fs
xchg
insb
pop
lea
push
scas
pop
test
cmpsb
sarb
fcmovbe
imul
jg
inc
mov
xor
pop
lods
cmp
imul
loope
mov
push
imulb
je
xchg
js
push
cmp
inc
xchg
push
shlb
pushf
lcall
jae
mov
fwait
les
aas
daa
push
jge
sbbl
mov
sahf
mov
cmpsl
jns
test
jge
out
push
shrl
cmpsl
fwait
pop
aaa
test
ja
stos
loope
insb
dec
aad
push
fwait
inc
jne
mov
adc
fildll
enter
repz
mov
and
mov
hlt
pop
cmpsb
xlat
and
mov
fistps
mov
ljmp
ficomps
dec
xor
mov
jle
movsl
pop
or
xchg
call
pop
fistpl
sub
pop
mov
lea
jg
lds
test
cmp
xchg
nop
decl
xlat
inc
xor
fistpl
sbb
xchg
lods
mov
rcrl
cmc
jl
pop
stos
outsl
mov
out
pop
stos
lret
shrl
sub
loope
std
sub
mov
pop
movsb
popa
in
push
mov
subl
jle
pop
dec
in
mov
xchg
cwtl
stos
fistl
nop
pushf
mov
mov
ja
push
in
outsl
repz
push
movsl
inc
xlat
sbb
les
adc
cmp
leave
mov
out
bts
xchg
xchg
insb
clc
scas
dec
je
aam
cmp
ret
mov
iret
pop
orb
mov
shrl
cmp
push
xchg
lea
subl
js
loopne
loope
mov
inc
xor
sub
mov
daa
cmp
cmpsl
sahf
inc
xchg
fnstsw
jnp
in
in
add
into
negl
ja
and
ret
cld
cli
icebp
leave
add
cmpsb
lret
ss
arpl
scas
xor
push
sti
es
mov
out
fstpt
push
cmp
push
rep
jge
mov
outsl
mov
and
mov
leave
int3
and
mov
xlat
addb
incl
push
xor
lret
stc
push
pop
lods
clc
lcall
xchg
rcl
inc
repz
je
mov
imul
pop
ja
imul
mov
dec
push
dec
sub
andb
inc
cld
out
jnp
pop
repz
pop
mov
iret
pop
pop
out
fdivrl
xlat
mov
mov
rolb
sub
sub
mov
mov
xor
and
aas
sub
leave
push
mov
je
sbb
push
pop
sub
push
aas
stos
xor
in
cmp
pusha
hlt
lahf
paddd
push
sti
cmp
push
mulb
clc
mov
pop
xchg
or
pop
inc
in
xchg
ret
cmp
nop
xlat
xchg
or
fs
arpl
lea
or
mov
loop
pop
push
mov
rcrb
add
je
shll
dec
lods
inc
cmpsl
out
cmp
xor
pushl
push
mov
xchg
icebp
push
lcall
cld
lret
pusha
inc
mov
std
ljmp
in
scas
push
in
sub
outsb
dec
fistpl
mov
xor
je
rcrl
out
rcr
inc
sbb
jecxz
cmpsl
mov
mov
scas
add
lods
lock
adc
popa
mov
stos
mov
loop
imul
inc
sbb
cmp
loopne
inc
cmp
bound
jns
mov
pop
out
fs
shlb
das
int3
arpl
cmpsb
mov
sbb
loop
or
std
xor
dec
repnz
add
test
rclb
cltd
inc
jl
test
xchg
jmp
mov
xchg
push
xchg
rorb
mov
ror
or
mov
aaa
pop
lods
in
loope
fcmovne
jmp
mov
addr16
subb
inc
jo
mov
jns
jns
inc
mov
in
mov
inc
movsl
aad
jae
sub
jmp
xchg
jmp
jbe
sbb
arpl
test
iret
hlt
lcall
push
aaa
cmp
jl
pop
xor
andl
outsb
add
loop
adc
mov
cmp
jle
adc
cmp
sub
push
xlat
jb
mov
out
push
or
push
pushf
daa
and
inc
dec
movsb
sbb
cmp
int3
ja
in
dec
lahf
jecxz
push
fistpl
test
sbb
test
pop
negl
pusha
and
fwait
xor
push
dec
mov
and
jb
shlb
pop
and
jl
lock
adc
cmp
insl
or
fnstenv
inc
loope
xchg
ss
je
push
mov
push
cwtl
jge
push
push
pop
inc
adc
adc
xchg
shrl
pusha
decl
imul
xor
mov
sub
arpl
sahf
add
dec
adc
shl
mov
mov
das
lret
or
rep
jle
icebp
cmc
cmp
out
into
mov
push
subl
and
lock
inc
sbb
sbb
ret
push
sub
inc
xchg
push
push
push
stc
outsb
rol
mov
jge
cmp
popf
cmpsl
inc
xchg
xchg
sahf
test
jno
jge
xchg
lea
pop
jle
roll
sti
xchg
jp
xorb
inc
jg
pushf
popf
mov
or
add
xor
xchg
popf
or
push
shlb
idiv
xor
sub
fimull
jle
jae
pop
add
repnz
dec
out
add
ret
movsb
bound
xlat
shrb
test
cmp
sub
mov
mov
inc
aad
mov
das
test
int
and
jne
add
adc
jno
jb
xor
adc
hlt
lret
sub
test
cmpsb
push
inc
lea
mov
iretw
inc
sbb
arpl
test
andb
notb
xchg
mov
test
sbb
pusha
lret
sbb
mov
lods
popa
repz
jmp
out
mov
or
rorb
push
fwait
imul
add
push
fmuls
push
shlb
enter
mov
hlt
aaa
shll
push
insb
out
arpl
mov
inc
aam
add
iret
adc
mov
xor
mov
adc
xor
mov
out
jnp
lock
pusha
orb
ds
inc
xchg
lcall
lock
mov
adc
scas
das
and
dec
sub
cwtl
movsl
jmp
jmp
mov
repnz
mov
xor
icebp
lcall
into
pop
scas
int
cs
scas
scas
std
add
cmova
jmp
jmp
sub
cmp
adc
sti
cmpsb
push
scas
aaa
and
ret
stos
add
fs
sti
mov
pop
lahf
fwait
test
lds
mov
cmp
fwait
iret
icebp
lcall
in
int
cli
loopne
iret
jns
js
sbb
jno
mov
inc
jo
sahf
lret
shl
mov
js
xlat
repz
lock
mov
scas
add
adc
mov
sbb
ret
xlat
mov
mov
into
pop
jmp
test
jl
loopne
popl
imul
adc
mov
and
rorb
daa
ljmp
pushf
out
and
add
cmpsl
or
mov
clc
adc
adc
lahf
jmp
scas
cwtl
cld
out
xor
test
cltd
out
inc
cltd
ficomps
mov
push
pop
sub
push
mov
sbb
cmp
arpl
push
gs
add
or
sub
push
sub
shr
leave
ds
push
iret
jno
push
cmp
mov
adc
push
xor
daa
pusha
in
sti
fistpl
fiadds
lea
sub
xchg
insb
push
xor
or
mov
sbb
pop
imul
lret
xchg
dec
mov
int3
inc
insb
ds
push
push
dec
cmpsb
xchg
in
pop
testb
cs
mov
mov
enter
or
stos
fistps
push
or
push
sbb
aaa
cmp
xchg
lret
xchg
jnp
dec
xor
add
adc
xor
dec
lock
pop
lahf
aas
insl
xchg
test
add
and
sti
mov
mov
std
xor
lahf
jne
cs
aas
nop
adc
jno
test
push
pop
stos
es
mov
and
cwtl
jl
mov
push
int
popa
push
mov
ja
iret
divl
movsb
mov
jp
inc
sub
ret
mov
jae
clc
std
or
inc
add
cmc
hlt
pop
fidivrl
mov
xchg
ljmp
sbb
out
js
mov
xlat
cli
aad
pushf
outsl
jns
or
add
xor
mov
push
adc
sub
shlb
repz
pop
sbb
xor
pop
sbb
sbb
int
ljmp
lcall
dec
lods
iret
movsl
lcall
lods
fcmovbe
or
xchg
dec
dec
aad
lret
js
sub
lret
icebp
push
int3
fs
fwait
jle
scas
pop
adc
sbb
mov
xchg
xor
xchg
fnstenv
pushf
in
adc
stos
inc
aam
std
push
stos
adc
shlb
xchg
mov
cli
sbb
jle
mov
sti
and
ljmp
cmp
fadd
pop
loop
pop
iret
shl
push
pop
mov
je
out
mov
andb
jge
icebp
push
adc
into
jp
in
cmp
icebp
pop
mov
pushf
mov
repz
ss
cmpsl
jge
pop
dec
mov
pushl
sahf
fcompl
adc
mov
mov
incb
inc
adc
lock
push
xchg
adc
lock
jle
xchg
mov
xchg
adc
and
push
sbb
adc
mov
hlt
pop
push
push
movsb
jmp
cmpsb
xlat
xor
xlat
repnz
fsts
jg
sub
sbb
cld
pop
ds
adc
sbb
loopne
adc
shll
mov
adc
mov
fcoml
cmpl
cld
add
inc
adc
mov
mov
xchg
sub
es
mov
push
adcb
jg
mov
pop
and
lea
enter
add
je
ds
das
scas
stc
xchg
repnz
jbe
jae
jge
rcrb
cmc
repnz
mov
repz
jae
fimull
fstpl
scas
jmp
inc
jbe
dec
out
mov
fnstsw
xchg
xor
xor
loop
cltd
movsb
jge
dec
or
push
das
mov
cmovns
xor
out
pop
inc
xchg
sbb
cmp
stos
les
jg
insl
cli
jae
push
mov
shl
test
push
sbb
sbb
scas
inc
jl
push
shrb
ds
cmp
mov
stos
lcall
das
dec
mov
mov
mov
lret
xchg
scas
cmp
jne
sbb
cs
gs
jns
and
pop
push
lahf
je
loope
js
mov
xchg
sarb
jge
pop
cld
sub
mov
ret
in
push
push
cwtl
fildl
loop
lret
jge
mov
ficomps
cmc
pop
sbb
daa
test
adcl
lea
pop
imul
cmp
xchg
fisubl
mov
jecxz
push
data16
xor
jmp
mov
js
adc
sub
imul
imul
lds
pop
addr16
jl
shlb
and
arpl
cmp
inc
mov
mov
jmp
xor
aam
inc
sar
and
je
push
cli
add
lahf
cmp
and
stos
mov
scas
iret
push
mov
dec
cltd
aas
mov
adc
std
bound
bound
or
dec
sub
subb
sarb
daa
add
stos
push
std
hlt
mov
pop
mov
mov
std
jle
pop
xchg
idiv
call
std
test
cmp
enter
and
push
scas
push
fstpl
dec
push
daa
sub
cmp
and
mov
xchg
arpl
and
jno
daa
mov
cld
outsb
pop
arpl
pop
jl
testb
pushf
dec
xchg
cmp
loopne
push
xor
inc
ret
cmc
adc
mov
and
inc
or
das
sahf
aam
jne
sahf
mov
sbb
or
push
out
test
ficoms
mov
icebp
or
neg
lds
fsubrs
push
ret
movb
xor
outsl
arpl
jecxz
nop
sub
cmp
jo
jecxz
sahf
or
push
pop
loopne
sub
insl
and
pop
push
mov
rclb
dec
lock
mov
fisubrl
and
testb
lret
inc
pushf
lea
mov
fs
push
imulb
add
out
mov
test
movsl
mov
mov
mov
dec
ret
add
ret
xor
adc
int3
movsb
scas
jno
int3
rclb
jns
test
int3
sub
ss
ja
aam
dec
inc
sub
cmpl
jmp
adc
out
pop
icebp
ret
push
dec
jmp
push
pop
xchg
gs
push
ds
push
mov
mov
push
testb
inc
enter
push
lcall
loopne
mov
fdivr
arpl
les
add
jp
leave
jg
pop
cmc
jecxz
movsb
dec
mov
in
xor
rcr
dec
jle
push
orb
stos
out
sbb
jg
imul
lret
cs
sbb
push
ds
int
inc
imul
cmp
leave
fwait
push
cmp
xchg
inc
cs
fldcw
cli
and
faddl
adc
and
gs
out
insb
roll
mov
addl
sub
sub
ljmp
pop
mov
push
cmp
inc
lahf
fistps
pop
sahf
leave
push
ret
and
lcall
inc
bound
jge
movsl
test
insb
inc
mov
dec
jecxz
jle
in
je
imul
adc
pop
pop
sbb
pop
mov
cmp
mov
or
mov
xor
iret
es
jmp
jecxz
fwait
lcall
mov
push
inc
into
shlb
out
or
jns
ret
mov
imul
mov
dec
aad
xor
and
test
add
dec
jo
adc
scas
adc
mov
pop
mov
cs
sub
arpl
mov
dec
xchg
fnsave
fbstp
outsl
sub
sarb
lea
roll
ss
mov
das
ret
adc
adc
mov
cli
mov
jbe
add
mov
sti
cld
jns
xchg
loope
push
je
push
mov
test
ficoms
sub
orb
hlt
into
sub
js
dec
je
jmp
cmpsl
sbb
adc
jae
ffreep
inc
cmp
pop
mov
or
adc
xchg
mov
mov
dec
hlt
mov
repnz
ficoms
out
imul
jb
jg
fildll
test
xchg
ret
push
sub
mov
loope
pop
xor
movsb
fs
hlt
pop
pop
ss
pop
xor
mov
lods
dec
mov
sbb
pop
roll
dec
pop
add
gs
fistps
cwtl
int3
nop
add
mov
push
mov
sub
and
mov
lret
or
lds
out
pop
sbb
clc
mov
std
cwtl
pushf
jle
mov
mov
daa
lret
xorb
or
adcb
outsb
sarb
arpl
std
fsubrs
je
int3
repnz
popa
xor
lcall
lahf
mov
pop
aas
mov
cmp
or
jge
push
fsubrl
cmp
fisubl
and
shrl
and
and
jmp
push
add
pop
pop
das
das
xchg
or
popl
jbe
ucomiss
gs
jns
mov
insb
dec
mov
imul
xor
xchg
shlb
jl
shl
rcrl
add
in
xor
insb
sbb
cmp
xchg
pop
loop
cmpsl
jg
pop
adc
mov
and
sub
jp
sbb
sbb
test
lret
mov
mov
lahf
popf
jbe
push
xchg
jl
fists
das
xor
mov
mov
mov
mov
mov
bnd
lahf
inc
mov
sub
icebp
sub
cmp
movsl
pop
shr
idivb
fcomip
icebp
cmp
lea
cmp
insb
push
out
ss
push
cli
cmp
dec
mov
jnp
pop
jmp
outsb
cmp
imul
cmp
cwtl
out
jp
int3
fsubl
xchg
xchg
ljmp
cli
push
cmp
loope
leave
sarb
xlat
dec
ss
ret
sub
mov
inc
cmp
sub
add
sbb
loope
cmp
pop
xlat
adc
mov
and
fs
pop
and
lea
or
mov
fildl
add
in
add
push
push
add
dec
add
jge
add
rclb
add
incb
push
adc
std
lret
lea
jbe
jmp
not
fdivr
cmp
gs
xchg
xor
mov
mov
mov
fidivrs
fwait
or
xchg
test
mov
fs
xchg
lret
rol
and
add
dec
sbb
mov
fildl
xchg
movsl
enter
and
ss
cmp
push
pop
fbld
adc
fists
mov
dec
mov
dec
stos
push
and
push
mov
sarl
adc
test
jp
inc
mov
sub
lds
add
les
test
aam
mov
jns
or
adc
shlb
cwtl
sub
arpl
sbb
sub
stos
das
dec
push
cwtl
rcrl
sbb
push
loop
jmp
pop
in
out
sbb
in
ret
sub
sub
cmpsl
fdivr
xchg
out
xchg
outsb
mov
pushf
dec
mov
test
jp
inc
push
mov
push
mov
dec
mov
in
pop
mul
dec
sbb
jae
mov
jae
int
in
adc
push
adc
out
add
divl
cmp
cmp
fisttps
and
lcall
jmp
or
int3
xchg
push
dec
scas
ret
cs
mov
mov
jl
cmpsl
mov
andb
lds
enter
int
aad
sbb
mov
xchg
mov
pop
addr16
cmc
push
pop
and
jl
sbb
or
aaa
sbb
aad
aad
push
and
adc
jb
jl
mov
lods
test
xchg
pop
mov
push
imul
iret
inc
stos
das
imul
and
std
xchg
and
inc
lret
std
or
sub
add
inc
mov
lds
data16
inc
xchg
les
movsl
or
cmp
aad
add
cltd
lea
cmp
mov
pop
mov
jge
es
ss
pusha
or
insl
adc
adc
pop
lods
rcl
ret
out
inc
adc
les
push
out
cwtl
xchg
out
jge
mov
jo
adc
cmpb
inc
iret
pop
fcmovnu
mov
lods
jmp
popa
ds
rol
hlt
or
ds
fwait
aaa
or
and
adc
movsb
and
ds
call
stc
inc
popa
jbe
jae
mov
cmp
mov
sub
bound
ss
pushf
jmp
call
cmc
enter
imul
or
fildll
adc
es
dec
loope
cmp
push
fadd
stc
push
pop
mulb
mov
jmp
pusha
ds
imul
les
cmp
or
or
push
cs
std
roll
add
sub
movsb
sbb
jmp
out
fwait
jnp
cld
jg
jno
dec
icebp
add
push
mov
xor
cmp
or
sub
loopne
mov
mov
repz
dec
mov
xchg
sarl
mov
insl
leave
std
pop
mov
mov
movsl
aas
sub
sub
sahf
hlt
repnz
mov
pop
mov
add
bsf
or
pop
stos
aas
push
js
xchg
aaa
sbb
out
sub
or
fistps
pop
jmp
dec
push
lcall
cs
inc
xlat
dec
and
ljmp
mov
and
jecxz
rorb
movsb
fwait
leave
sbb
or
jecxz
outsb
mov
or
test
mov
sbb
movzwl
push
sbb
scas
cwtl
movb
pop
mov
cs
add
mov
pop
hlt
jecxz
cmp
inc
mov
push
xor
adc
addr16
ficompl
mov
xchg
fstps
sbb
loop
bound
lods
test
iret
and
test
sbb
pushl
popl
pushf
nop
sbb
orl
jle
xchg
loopne
andb
mov
subb
adc
push
ss
lock
xchg
leave
push
jne
sahf
pusha
test
lods
add
jmp
jno
mov
mov
sub
rorl
fiadds
push
std
add
add
pop
xor
out
add
xchg
adc
insb
cwtl
pop
adc
jg
test
xor
xchg
leave
repnz
or
mov
pop
push
je
aas
pop
sti
clc
xor
sub
repz
jg
push
ds
inc
jne
in
push
fwait
push
stc
cwtl
mov
std
xor
xor
and
imul
mov
inc
mov
mov
and
rcrl
lods
inc
pop
leave
mov
ss
pop
push
mov
out
jle
lds
ror
test
add
iret
stos
fcoml
sete
mov
pop
es
lods
lret
repnz
fcoml
ljmp
pop
or
push
into
or
jb
sbbb
mov
jecxz
cmp
scas
dec
daa
and
cmp
ds
xchg
inc
or
mov
sbb
aaa
push
cld
jle
sbb
ljmp
and
out
adc
sahf
inc
sbb
cmp
arpl
pop
mov
stos
pop
cli
or
ficoms
jg
xchg
jmp
mov
cmp
mov
out
inc
rorl
rcll
lock
push
setno
inc
ret
jmp
mov
push
call
cld
jae
xlat
or
out
ss
jle
mov
lods
or
push
das
pop
test
mov
dec
adc
rcll
inc
cmp
push
cmpsb
inc
movsb
shlb
mov
pop
les
ret
pushf
les
out
pop
mov
push
idivb
push
mov
ljmp
lea
pop
rolb
stc
inc
idiv
jo
testb
jne
not
and
jl
dec
outsl
shlb
test
mov
pop
fmul
adc
inc
in
pushf
sbb
hlt
sub
bound
out
xchg
ficoml
push
popf
imull
lods
scas
cmp
movsl
jp
mov
loope
cs
push
sub
out
push
mov
loop
ficoms
sbb
mov
push
push
and
gs
and
js
imul
pop
jno
repnz
cmp
lock
mov
xchg
out
testl
std
xchg
mov
xchg
popa
sbb
enter
push
push
pop
adc
stos
in
mov
mov
hlt
mov
jmp
fdivl
jle
fdivrs
lahf
andl
fnsave
adc
cmovp
mov
xchg
cwtl
ljmp
jmp
xor
aas
xchg
das
out
inc
stos
loope
jns
mov
clc
das
les
fdivrs
jl
sub
arpl
push
dec
lahf
int3
adc
ss
jecxz
mov
das
jp
sub
adc
jge
jo
fldenv
push
andb
adc
xchg
and
push
push
inc
add
pop
add
mov
xchg
xchg
into
pop
pop
xchg
aam
adc
push
aam
push
jne
dec
rolb
je
mov
sbbl
add
stc
sar
pop
sti
push
add
or
loop
xlat
cmp
inc
das
mov
dec
scas
xchg
mov
push
or
addl
mov
sub
pop
or
mov
sub
popf
fwait
inc
mulb
push
mov
rcrb
jns
fidivrl
push
inc
mov
out
int
test
imul
xlat
inc
das
pop
outsb
ss
sti
mov
xor
into
leave
cmp
es
mov
xchg
lret
cmp
jne
ret
ficompl
xchg
dec
push
adc
or
jbe
pop
lea
into
mov
out
or
push
lea
lcall
call
xor
scas
inc
ja
mov
cmp
testl
int
mov
lret
mov
adc
int
fldcw
sub
lods
or
sbb
in
out
adc
sbb
jb
xchg
and
and
or
cli
dec
mov
mov
dec
addl
jecxz
mov
icebp
jb
stos
dec
mov
jg
stos
sub
addb
repz
bound
je
out
rorb
push
jno
adc
xor
cmpsb
xchg
es
ljmp
mov
std
add
xlat
sbb
movzbl
in
fnstenv
test
add
dec
scas
cmpsl
xor
mov
je
mov
rcrb
add
push
push
inc
cld
bnd
je
aaa
aam
pop
inc
testl
aad
loopne
cmpsb
clc
repnz
nop
andb
fadds
sbb
xlat
jle
fadds
cmp
dec
push
xor
push
adc
in
mov
pop
add
cmp
leave
outsb
push
cmp
mov
mov
daa
insl
push
sbb
adc
jp
into
std
je
lods
lret
xor
aad
iret
jo
jnp
std
shl
cmp
std
lret
shll
pop
lret
mov
cli
and
mov
jb
xchg
xchg
mov
jge
xchg
loope,pt
inc
xchg
mov
loopne
xor
out
ret
loopne
pop
mov
pop
les
xor
xchg
decb
or
xor
dec
imul
jns
cmp
rep
fldl
xor
cmp
and
cmp
pop
fdivr
in
mov
popa
jbe
sbbl
jne
out
xchg
sbb
cmpsl
mov
xchg
repnz
cmp
in
adc
dec
mov
cli
gs
mov
loop
lahf
std
jg
pop
out
out
jnp
jb
dec
iret
repz
add
data16
pusha
daa
jnp
clc
je,pt
lds
pop
xor
cmpsl
loope
mov
xchg
icebp
cmp
sub
filds
xor
jl
out
jl
mov
in
xlat
xchg
imul
lcall
shufps
ja
popf
jnp
int3
pop
mov
jp
jno
scas
std
dec
mov
ds
arpl
mov
pop
gs
pop
lret
out
jnp
adc
pop
sbb
mov
mov
inc
fadds
movsb
jl
xchg
adc
filds
jo
negb
les
fdivrs
adc
shr
ja
adc
mov
aaa
iret
adc
mov
divl
push
dec
ds
stc
or
add
or
cli
xchg
mov
fdivrs
jmp
sbb
pop
xchg
shlb
cmp
iret
add
sbbb
dec
jg
push
xor
mull
inc
mov
cmp
mov
aas
out
mov
xchg
jecxz
out
aam
jl
jne
jnp
in
xor
sahf
out
mov
das
les
jne
pop
lret
rol
lcall
mov
cmp
ror
mov
in
call
frstor
cwtl
pop
fstl
stc
dec
cmpsl
jnp
mov
mov
stos
or
lods
mov
pop
ds
ss
aad
cmp
mov
inc
std
sbb
pop
gs
int3
sahf
cltd
push
push
xchg
cmc
mov
and
dec
xchg
not
push
push
cmpsb
les
add
mov
dec
mov
inc
rclb
and
ss
in
loopne
sbb
loope
jl
bound
mov
icebp
lock
test
sahf
lret
lds
gs
xchg
out
pop
push
out
push
test
xlat
dec
jbe
push
xor
xchg
pop
popl
in
sub
iret
scas
jnp
dec
ret
inc
out
xor
jge
mov
mov
xlat
repz
les
push
scas
jmp
mov
aad
sbb
and
mov
cmp
mov
leave
imul
das
sbb
testb
jmp
cmc
inc
repnz
imul
add
loope
cwtl
inc
mov
imul
data16
rorl
adc
shrl
add
and
cmp
jns
or
in
mov
bnd
dec
xchg
les
dec
andb
sbb
push
push
test
add
add
sbb
pop
filds
jo
ret
int
lret
imul
jne
inc
inc
sarb
jnp
sub
fldenv
pop
and
mov
fimuls
lds
inc
lods
aaa
sbb
iret
push
push
jnp,pn
movsb
and
push
sar
out
out
addr16
and
fs
fwait
pop
cmp
shll
mov
pusha
loope
scas
ss
jb
dec
ds
cmp
jb
test
fdivr
insl
and
loop
bound
mov
insb
in
mul
loop
ret
fcmovnu
fs
mov
fbld
fdiv
pusha
pop
and
inc
popf
fadds
mov
lock
jne
mov
cmc
lret
fsubrs
push
dec
pop
mov
add
push
adc
mov
sub
mov
lds
rorl
iret
fsubrp
inc
jecxz
sbb
mov
and
ja
ljmp
mov
fbld
sub
rclb
mov
mov
mov
pop
gs
jae
loope
xchg
adc
dec
int
mov
lods
mov
or
jmp
outsl
ret
push
mov
test
cwtl
in
sbb
inc
sub
aaa
clc
stos
mov
ja
cltd
lods
je
dec
pop
mov
xchg
imul
mov
jbe
lahf
ficoml
mov
stos
pmuludq
hlt
sti
add
and
sbb
mov
in
lcall
pop
xchg
jge
aaa
push
pop
cmp
fsubrl
ret
gs
cmp
ret
fadds
movsl
xor
repnz
insl
aas
andl
ja
xchg
lock
loope
es
inc
je
iret
add
out
dec
dec
inc
int3
mov
cmp
orl
aad
adc
fldenv
in
mov
sbb
jle
mov
add
jbe
ret
ljmp
addr16
rcl
cld
adc
lret
cmc
cmp
dec
dec
test
sarl
pop
imul
cltd
ss
dec
cmp
hlt
andb
add
sub
mov
cltd
push
sbb
and
pop
adc
and
inc
xor
jno
pop
cmp
add
outsb
js
push
neg
jl
das
or
fcomip
fistps
push
out
mov
adc
add
fs
test
inc
lret
repz
xchg
and
sahf
paddusb
lahf
lret
and
cmpsl
movsb
push
pop
sub
xchg
push
mov
test
push
cltd
mov
out
decb
jge
pop
int
push
and
insb
into
mov
lods
rorb
cltd
mov
sub
xchg
in
loop
outsb
add
sub
push
push
and
xchg
jno
push
pop
and
push
jmp
insb
cmp
and
neg
mov
cmp
pop
in
mov
jns
orb
iret
popl
jns
xor
idivl
or
sub
fildll
pushf
loop
out
cwtl
inc
lods
jbe
out
std
std
inc
jnp
inc
inc
and
sbb
std
add
fidivrs
and
cmp
sbb
fwait
js
loope
je
sbb
adc
rcl
outsb
test
sub
fsubs
loopne
lret
xchg
lret
push
scas
adc
cmp
mov
mov
sysenter
cmp
out
aas
xchg
in
pop
or
mov
rolb
inc
nop
fisttpll
ss
aas
fisttps
xchg
jno
out
inc
leave
lea
adc
and
insl
smsw
ss
xor
xor
mov
sub
push
cwtl
cmpsb
push
imul
cmp
jbe
cmp
sub
lods
xchg
push
sbb
sub
data16
int3
push
add
pop
add
cmpsb
or
push
pop
out
fsubr
mov
xchg
push
mov
xor
call
add
aas
in
out
aaa
add
int
or
mov
arpl
sub
cmpb
ds
flds
mov
adc
ret
and
stos
sbb
dec
fsub
nop
das
mulb
push
and
mov
sbb
aaa
aam
push
mov
xor
xchg
pop
dec
mov
aam
mov
and
mov
push
dec
scas
cmpsb
mov
pop
pusha
loopne
imul
notl
xor
loope
dec
xor
in
adc
mov
pop
cmp
adcl
mov
mov
mov
pop
bound
and
test
rcr
add
xlat
fwait
cmc
je
add
xchg
in
minps
mov
xchg
cmp
pusha
cmp
inc
mov
outsb
mov
addr16
inc
cld
mov
outsl
rorb
testl
xchg
out
xor
fimuls
xor
daa
xchg
fcomi
pushf
and
push
into
out
cmpl
and
mov
xor
sub
or
ljmp
sti
xor
test
in
in
mov
aas
ds
mov
inc
out
or
jle
fcompp
jg
sub
xorl
cmpsb
imul
inc
pop
jl
jge
daa
ret
add
imul
sahf
ret
mov
insl
iret
push
inc
mov
sub
fldt
mov
pushl
jg
dec
jg
fdivl
sahf
lock
pop
xchg
xor
ret
mov
addr16
in
or
fdivl
pusha
int3
jg
insb
mov
xchg
test
lret
fsubr
subps
xor
bound
scas
mov
and
mov
mov
xchg
test
mov
ret
test
mov
mov
ret
jnp
and
rolb
xor
pop
push
sub
fstpt
lock
push
and
sbb
icebp
dec
loopne
mov
mov
std
test
jno
sti
dec
mov
adc
jl
mov
and
int3
jo
fnstenv
testl
push
pmaxsw
das
pop
andb
and
add
fisttpll
inc
cld
adc
mov
scas
sub
mov
ljmp
or
push
adc
sbb
dec
dec
decl
and
and
add
dec
add
mov
mov
bound
cmc
mov
bound
add
sbb
jle
sub
xor
cmp
pop
sub
notl
mov
pop
dec
push
dec
inc
cmp
sahf
mov
jb
cmpsb
cmp
pop
push
ret
cwtl
push
test
imul
or
mov
ds
add
lret
and
cmp
mov
shll
adc
mov
xor
mov
push
mov
lods
fcmove
xchg
jmp
push
nop
pop
push
lods
out
jg
out
xchg
aas
faddl
mov
pop
sbb
lahf
dec
mov
negb
ficoms
mov
fisubrs
push
push
inc
movsb
cmp
pop
push
xchg
xchg
mov
push
xchg
sub
mov
shll
pop
mov
xchg
dec
flds
dec
sbb
stos
in
xchg
leave
mov
sub
xchg
adc
daa
imul
push
les
add
in
xor
xlat
rcr
or
or
arpl
xchg
inc
mov
pushf
orl
jg
sbb
mov
decl
jp
shll
leave
mov
cmc
inc
inc
lcall
push
mov
xchg
test
lcall
mov
repz
cmc
and
pusha
pushl
sub
dec
jns
sets
fdivrp
jae
mov
lds
lds
mov
mov
push
aaa
sbb
fcomps
incb
sbb
fstpt
fbstp
dec
clc
std
xor
or
pop
cmpsb
xor
xchg
xor
mov
jae
daa
dec
imul
cmpsl
dec
cmp
pop
mov
test
fs
test
insb
mov
repnz
in
arpl
cs
out
insb
inc
jge
adc
into
daa
pop
mov
ja
pop
repnz
movsb
bound
mov
jmp
fisubs
mov
fcmovne
xor
f2xm1
ret
push
lret
jecxz
in
add
imul
das
push
outsl
out
jo
lahf
dec
rorb
sub
pop
jnp
pop
mov
lock
data16
jbe
sti
pop
aad
jo
cmp
adc
jno
repnz
add
fisttpll
out
mov
scas
nop
sbb
hlt
loop
or
xor
inc
dec
leave
inc
sbbb
inc
sti
loope
test
lods
test
dec
mov
push
popa
and
cwtl
pop
shll
push
cmc
mov
jo
dec
xchg
or
sbb
pushf
in
mov
ret
js
es
jne
sub
xchg
popa
sub
xor
bound
sub
push
pop
shlb
mov
lahf
out
jge
cwtl
pop
icebp
inc
js
inc
div
pop
inc
xor
pushf
xlat
and
les
mov
add
jnp
daa
mov
aaa
cmp
dec
sub
mov
sar
fnstsw
je
sub
outsl
adcl
adc
sub
inc
xorb
ljmp
fmull
test
mov
test
lret
dec
jnp
pop
sbb
xchg
dec
data16
sbb
out
lods
in
push
adc
repz
pop
sbb
frstor
mov
push
je
push
aam
add
pusha
adc
insl
xchg
push
or
xchg
sub
mov
lods
aad
insl
push
jle
or
std
jno
scas
pop
xor
or
jge
pushf
stos
pop
add
and
jmp
pop
mov
cmp
fidivl
psubq
out
test
mov
daa
mov
push
and
fneni(8087
dec
daa
cmpsb
pop
inc
pop
inc
adc
or
mov
inc
mov
test
jae
pop
icebp
enter
xchg
lahf
dec
dec
ret
sbbl
aas
and
call
xchg
sub
cwtl
imul
clc
jnp
push
push
push
jle
mov
enter
xorl
inc
mov
pop
cmpsb
fnstenv
cmpsb
cmc
popa
div
test
test
push
pop
cmp
mov
inc
sub
movsl
jl
xchg
out
enter
in
jo
leave
mov
lret
jno
jnp
pop
rorl
push
jno
mov
inc
jmp
add
in
leave
sarb
or
int
int3
mov
aam
cwtl
lods
cmp
jl
repnz
add
or
push
and
adc
addr16
test
je
das
adc
adc
jno
sbb
sub
dec
push
mov
shr
inc
mov
add
out
xchg
insb
inc
or
sub
inc
xor
lcall
test
repnz
push
enter
mov
jl
jae
mov
rorl
enter
jmp
push
mov
add
dec
or
int
jg
push
jg
xchg
hlt
push
jbe
push
mov
pusha
ja
nop
fcmovnbe
dec
outsb
lahf
sub
cmp
xchg
lock
fsubrl
add
leave
lea
sbb
push
stos
sub
or
in
sub
icebp
scas
xor
jmp
inc
hlt
and
lds
inc
dec
data16
mov
mov
jbe
jle
fs
stc
test
fyl2xp1
rcrl
repz
inc
sti
in
in
in
sbb
mov
pop
cmc
push
mov
int
sbb
xor
les
ljmp
clc
decb
push
test
jmp
out
jecxz
push
gs
pop
test
outsl
stos
jbe
lds
xor
adc
mov
xorb
xlat
rorb
push
pop
insb
jmp
adc
mov
add
fs
mov
fimull
inc
inc
push
inc
fbstp
call
push
add
cld
les
cmc
fistpll
or
or
int3
pop
sti
jmp
sub
push
stc
out
mov
adc
icebp
pusha
rorb
out
or
in
or
dec
pop
in
pop
sti
std
cmpsl
sub
mov
idiv
frstor
push
pop
shrb
lea
in
mov
cmpsl
aas
outsl
shrl
cld
cli
hlt
jo
movsl
lods
hlt
aad
inc
fmul
push
cmp
add
pusha
das
jg
mov
int
jnp
or
jne
xchg
jl
inc
iret
les
mov
sbbl
mov
in
nop
dec
sti
imul
pop
xlat
xlat
stos
test
dec
loopne
mov
jle
inc
scas
arpl
std
mov
adc
inc
stos
jl
int
mov
int
imul
fildl
xlat
and
ret
out
je
addl
inc
lahf
push
add
mov
stos
sub
bound
pop
or
pop
mov
pop
push
enter
pop
setb
adc
add
sbb
stc
xor
xchg
or
lock
imul
stos
fs
lods
shr
dec
std
push
subb
arpl
add
mov
mov
and
or
in
adc
jne
mov
xchg
or
and
dec
xor
idiv
cmp
lret
dec
repz
stc
jbe
jmp
mov
sbb
or
cmp
and
lea
btr
xor
add
lcall
loope
jmp
repz
not
pop
rcll
add
test
fsubrl
mov
fisubrl
cmp
or
ret
mov
or
cmpsl
and
insb
test
push
mov
push
jae
lret
insl
cmp
in
cli
ss
jmp
jge
inc
fcmovnbe
push
mulb
insl
pushf
repz
mov
pop
push
and
into
cmpsl
jmp
cli
in
or
cmp
pop
jmp
push
sub
xor
pop
jp
imul
mov
cs
mov
adc
ds
imul
je
dec
add
popa
xor
or
add
mov
pop
dec
jg
hlt
xchg
pop
cmp
test
inc
daa
nop
jp
aad
in
sub
xlat
xchg
outsb
sbb
push
mov
cmp
int3
inc
mov
pushf
outsl
jnp
adc
lret
push
ja
popa
xchg
jp
test
adc
test
xorb
sahf
xor
shl
ljmp
mov
test
inc
pop
in
in
xor
inc
xchg
rcll
out
pop
sbb
in
pop
les
lods
jno
jno
lods
ret
adc
jle
dec
push
cmpsb
leave
inc
and
call
iret
add
xchg
sub
mov
out
mov
data16
sub
call
roll
fdivr
sbb
cmpsl
lods
jecxz
popf
or
mov
pop
lock
or
xor
test
add
icebp
repnz
xchg
je
xorb
jmp
sarl
pop
cmpsb
push
lahf
movsb
and
imul
cmp
xor
adc
xor
into
out
push
lcall
clc
incl
insl
cld
imul
ds
jbe
jle
and
sub
inc
and
pop
push
xchg
adc
daa
cmpsb
je
sahf
jo
add
sbb
and
sbb
insb
push
mov
std
aas
mov
test
es
jmp
mov
jmp
mov
aas
cmp
lret
inc
mov
jg
les
mov
leave
xor
and
jo
aad
mov
das
enter
test
lahf
or
scas
roll
xor
fldcw
loope
adc
mov
pop
xchg
jg
lret
call
ds
imul
pop
jb
push
mov
orl
cltd
and
jmp
in
xor
sub
notb
push
dec
pop
mov
mov
adc
addb
lret
cmp
gs
pop
add
arpl
mov
lods
and
and
inc
jne
xor
push
mov
jmp
shlb
and
cmp
mov
mov
pop
pop
fidivl
mov
jle
lock
fwait
stc
repnz
mov
sbb
adc
subl
cvtpi2ps
shl
or
mov
or
inc
jecxz
in
lods
sahf
fistpll
adc
adc
movsl
and
pushf
adc
pop
out
pop
movsl
inc
ret
insl
cmpsl
popa
push
je
mov
xchg
shlb
ret
test
cmpsl
insb
lcall
sub
dec
xor
jge
mov
inc
lret
mov
pushf
aaa
add
xchg
in
ret
scas
movsl
cs
mov
data16
inc
mov
daa
into
popf
ja
jecxz
popf
pushf
frstor
mov
and
sbb
and
fiaddl
xchg
xchg
mov
imul
mulps
das
push
add
mov
fs
cli
jge
push
aad
pop
repnz
sbb
outsb
inc
xor
rclb
push
nop
imul
push
mov
mov
out
lods
movsb
fistl
dec
and
in
or
mov
push
sbb
sub
aad
dec
mov
cmp
mov
inc
fs
jbe
ret
rcrb
stos
pop
inc
or
fistps
and
push
mov
loope
mov
aam
push
test
and
in
cmp
or
push
pop
xchg
mov
add
shr
in
daa
iret
fistps
rcrl
shlb
jg
shrl
je
dec
repz
xor
loope
or
mov
loop
stc
das
pop
xchg
xchg
aas
sbb
cs
gs
xlat
test
inc
arpl
add
mov
jno
test
and
cmp
fcomip
xor
xor
rorl
aam
out
sub
dec
inc
fldcw
in
fwait
out
fsubl
mov
push
xchg
push
dec
xchg
add
lret
or
mov
or
jl
adc
add
ss
mov
xor
imul
xor
and
mov
jg
ss
sub
hlt
xchg
inc
popf
cld
out
dec
movsb
je,pn
adc
and
push
sbb
adc
rorb
out
mov
daa
bound
adc
adc
sbb
cwtl
adc
clc
lcall
dec
fcompl
cmp
fwait
js
sub
pop
fimuls
xchg
sarl
push
dec
or
test
sbb
ds
out
js
sbb
sub
lret
ret
addr16
icebp
sub
das
sub
into
and
ja
xchg
fmul
dec
inc
xchg
and
inc
pop
sar
aam
cmp
enter
push
ja
mov
adc
fstpl
ljmp
jle
mov
jne
mov
test
clc
or
xchg
mov
lahf
cmpsb
push
inc
lods
cmpsl
sbb
mov
sub
addr16
loop,pn
jg
je
or
test
int
adc
fldl
inc
dec
imul
mov
lahf
test
jne
fcomps
lret
mov
mov
push
jmp
repz
xor
or
in
sub
call
or
pop
sbb
mov
daa
outsl
add
out
int
push
repnz
inc
or
pop
mov
adcb
pop
ja
xchg
je
add
out
outsl
jbe
add
sub
fimuls
mov
imul
lahf
loopne
ds
xor
stc
push
mov
adc
push
cmpsb
jbe
pop
mov
and
popf
add
lret
jp
stos
pop
jae
pusha
and
sbb
and
push
mov
fistpl
inc
dec
ljmp
cmp
mov
jmp
or
sub
lret
cli
xchg
mov
jo
out
lret
outsb
xchg
pop
cmpsb
sub
stos
xchg
sub
jns
sub
push
adc
cmp
or
jb
or
rorl
popf
shll
repnz
or
mov
cs
addl
adcl
add
adc
enter
push
jns
adc
pop
subl
push
jb
stc
dec
cs
add
int
mov
jle,pn
into
xchg
nop
cmp
rcl
bnd
in
scas
xor
je
cltd
pcmpgtw
lcall
jo
aas
dec
rorb
jo
lahf
inc
fsubp
repz
negb
dec
dec
jp
pop
lock
sbb
push
xchg
mov
es
test
cmp
mov
icebp
jp
insb
loop
cmp
add
test
test
jns
cli
and
incl
pop
stc
imul
pop
mov
test
xor
aam
ficompl
or
leave
loope
js
lret
movsl
outsb
sbb
sarb
sbb
loop
xor
mov
sbb
xlat
mov
addb
stos
jbe
hlt
pop
jmp
sbb
mov
sbb
adc
sub
retw
mov
loop
push
inc
fbld
adc
mov
cld
nop
cltd
dec
movntps
cmpsb
dec
test
inc
mov
dec
fcoml
jne
mov
jp
and
popa
nop
pop
or
lcall
fildl
addr16
outsb
cld
mov
bound
popf
int
ljmp
hlt
mov
mov
je
sbb
xchg
in
push
xchg
push
imul
orl
in
imul
cmp
outsl
sub
dec
adc
jo
out
mov
push
push
hlt
sub
xchg
mov
xchg
mov
fucomip
mov
stos
stos
stos
inc
loopne
sbb
mov
jge
hlt
push
lret
xor
aad
je
inc
fcmovnu
rcl
mov
shrb
in
jne
inc
inc
in
lock
jnp
dec
xchg
rolb
pop
stos
sbb
mov
das
pop
and
in
or
sar
ja
inc
int3
inc
vmptrst
xlat
stos
std
lret
outsl
push
dec
call
xchg
or
or
adc
repz
lret
faddl
es
loop
mov
and
clc
xchg
jb
lock
mov
xchg
and
sar
fwait
std
lret
insl
popf
lahf
test
xchg
ret
xchg
imul
cmp
scas
push
lret
loope
int
push
loope
jge
loope
push
sbb
jle
push
push
jg
adc
mov
int3
pop
les
jb
push
out
sti
loop
mov
adc
add
into
or
lods
int3
ds
cltd
fldl
mov
rorb
das
test
xlat
movsb
mov
es
rcrl
aam
shlb
jo
cltd
roll
dec
ss
jmp
in
jp
fwait
stos
sub
push
loopne
or
outsl
ret
mov
mov
repnz
push
scas
xchg
xchg
cmpl
dec
pop
fisubs
das
in
pop
repnz
inc
dec
clc
pop
sbb
in
shr
mov
mov
neg
cmp
lods
outsl
sub
clc
shlb
push
bound
jno
and
add
jg
mov
xchg
rcrb
add
mov
ss
sbb
cmp
jns
xlat
push
popf
push
and
xor
dec
cwtl
cmp
dec
fwait
jbe
repnz
pop
testb
insl
out
jne
inc
xchg
cli
and
frstor
lcall
stos
mov
data16
ret
jge
popf
push
jmp
or
test
fadd
push
sbb
fdivs
jmp
sub
daa
ds
gs
push
lcall
lret
mov
loop
push
mov
jne
or
push
mov
rorb
and
cmpb
fistl
mov
cmpl
dec
or
cmp
popf
clc
and
std
adc
push
or
jnp
xchg
jo
and
lea
insl
loop
int
scas
dec
cmp
addr16
icebp
mov
data16
andl
scas
jle
in
scas
and
jns
imul
inc
lock
fisttpll
shlb
push
mov
shr
pop
inc
mov
jae
stc
add
xchg
loopne
loope
sti
js
gs
pop
clc
scas
ja
shl
sub
jge
in
mov
out
push
sub
aad
fcomp
loope
pop
dec
jmp
and
jecxz
mov
popa
iret
jge
lds
sub
mov
dec
outsb
mulb
cmp
push
aad
loop
add
mov
aad
shr
pop
jne
xor
inc
add
xchg
mov
test
mov
cmp
je
xor
mov
push
mov
xor
test
mov
sbb
pop
movsl
inc
mov
and
cmp
xor
imul
push
pop
mov
inc
pop
xchg
fistpll
das
scas
addr16
pusha
sbb
adc
hlt
push
or
and
jl
pop
xor
inc
or
pushf
jo
aaa
push
mov
cmpl
stos
dec
cmp
push
arpl
rorl
imul
and
and
mov
add
add
or
mov
pop
sbb
movzwl
mov
dec
xchg
push
or
mov
xor
mov
cmpsl
ret
ljmp
sarl
mov
xor
std
sbb
loop
lcall
imul
adc
cwtl
divb
adc
mov
adc
adc
push
mov
xchg
sub
or
in
cmpsl
adc
adc
ja
orb
jo
movsb
mov
mov
lods
lock
pop
rclb
roll
add
jne
and
jp
or
inc
mov
dec
movsl
js
dec
scas
xchg
es
and
scas
js
push
mov
test
cs
sarb
daa
xchg
repnz
cmp
push
dec
xor
adc
and
mov
xchg
mov
and
out
jno
inc
fmuls
lock
adc
out
popf
jmp
ds
mov
and
test
stos
mov
sbb
sbb
test
sub
popa
xor
inc
mov
rorl
and
popa
cmp
and
repz
and
cld
popa
into
shrb
and
and
cmp
and
lret
test
dec
and
shlb
pop
pop
mov
push
sbb
xchg
test
cmp
arpl
lret
add
jl
in
xchg
jo
dec
fists
push
or
xchg
sarl
mov
push
out
add
mov
lods
inc
add
test
cmp
xchg
add
loop
xor
and
ror
mov
mov
pushf
inc
stc
dec
mov
xor
xor
xchg
dec
sub
adc
sarl
or
sub
jecxz
jae
dec
cmp
fidivrl
hlt
leave
sub
fsubl
xchg
xchg
inc
adc
dec
jne
sub
jmp
rol
jmp
cmp
out
xor
xlat
or
push
sbbb
js
cmpsb
pop
lds
in
mov
push
outsb
roll
inc
sub
leave
dec
xchg
ret
cmp
sbb
out
std
mov
cld
bound
fdivs
pusha
sbb
or
push
sbb
sti
push
sub
loope
mov
inc
loope
add
mov
mov
repnz
dec
aaa
sbb
mov
pop
add
pop
fbstp
mov
jg
cmp
loop
adc
sub
sahf
lret
inc
notb
pop
add
in
clc
iret
enter
fldl
fwait
clc
mov
xchg
adcb
and
lods
iret
mov
inc
mov
and
call
lods
imul
xchg
nop
xchg
lock
mov
or
std
xrelease
aam
pop
test
mov
sbb
sub
pop
push
or
stos
inc
cli
sbb
push
out
jecxz
mov
jge
movsl
sbb
test
mov
dec
sbb
sub
test
or
rcr
js
and
pop
sbb
sti
test
aas
xchg
xor
fcomp
dec
cmp
push
push
push
sub
xchg
push
das
pop
push
fstpl
es
stos
loopne
and
jnp
aam
sar
cmc
shlb
aas
imul
mov
sub
shlb
mov
inc
dec
inc
adc
sbb
movsb
and
rolb
loop
adc
mov
xchg
dec
push
ljmp
pop
jno
gs
cwtl
ret
mov
leave
xchg
cmpsl
insb
ret
leave
pop
fcomip
fdivl
popl
or
jae
out
jle
ja
fdivl
cmp
sahf
dec
mov
mov
insb
push
leave
leave
outsl
lret
negl
outsb
stos
mov
push
cmp
jns
pop
fidivrl
clc
sbb
dec
js
mov
inc
pop
jg
jne
mov
jnp
dec
js
ljmp
jbe
test
push
sbb
out
loopne
ljmp
inc
dec
and
test
cmovl
xor
pop
mov
sub
jb
mov
cmp
push
dec
stc
lock
push
rclb
dec
cmp
rclb
lret
imul
jle
mov
xorb
sbb
dec
xchg
push
or
adc
sbb
inc
call
sahf
inc
ds
xlat
push
jecxz
pusha
adc
add
or
sub
jle
dec
arpl
mov
imulb
clc
scas
jmp
or
fldt
mov
movsb
int
xchg
out
cmp
imul
jb
and
insl
jp
inc
stc
pop
jp
subb
mov
or
stc
cmp
sub
stos
jbe
cmp
addr16
cmp
cmc
sub
mov
aad
popf
inc
lret
ficoml
outsb
sub
shll
add
or
cmp
xchg
in
push
adc
adc
mov
jle
in
pop
inc
std
sbb
fists
push
aam
in
cmp
insl
stos
sub
lods
adc
in
addr16
imul
lcall
and
test
gs
xchg
mov
cmpsb
into
mov
push
popa
push
lret
loop
cmpsb
xor
mov
rorb
push
imulb
lock
clc
mov
mov
fisubs
into
fidivl
fcompl
cli
pop
xor
hlt
out
cltd
gs
mov
sbb
jnp
ja
jno
mul
std
ja
out
cmp
jge
dec
inc
cmp
std
and
mov
cli
loopne
clc
mov
std
fcmovne
jne
fistpll
mov
out
roll
es
aad
repz
rorb
adc
or
lods
mov
popa
mov
lock
stc
jnp
test
jnp
shrb
pop
aaa
pushf
frstor
je
insb
cmpsb
jne
jnp
sub
shl
mov
ljmp
sub
test
inc
mov
int3
data16
clc
flds
mov
nop
mov
and
ss
or
xchg
mov
outsl
je
addr16
inc
sub
jecxz
jae
xor
and
jl
lret
cmp
std
xchg
out
dec
xor
mov
sub
xchg
pop
outsl
in
jnp
xchg
jmp
or
push
ffreep
ds
loop
mov
xchg
icebp
es
in
sbb
jno
scas
enter
mov
xor
mov
or
bound
dec
or
mov
and
mov
xor
xchg
mov
daa
and
dec
jb
jo
push
xchg
add
jp
outsb
push
sbb
mov
addr16
stos
mov
mulb
xchg
push
ret
xchg
adc
loop
or
push
lahf
mov
jl
dec
jmp
jae
mov
mov
bound
ds
mov
jle
sbb
mov
movsl
pop
sbb
popf
sub
icebp
rorl
add
das
leave
out
cmc
loop
lahf
lahf
ja
fidivs
xchg
popl
mov
xchg
fildll
xor
icebp
mov
popf
js
repnz
xor
push
imul
lods
push
es
negl
out
arpl
xlat
movsb
enter
or
filds
xchg
push
push
cmp
dec
cmpsb
popf
lea
js
insb
popa
add
sbb
bound
cmp
out
outsl
inc
loope
sub
outsl
mov
inc
push
jmp
push
mov
cmc
or
xor
or
call
in
jle
pop
mov
nop
icebp
or
xor
lods
test
loop
loope
in
mov
sub
pop
ljmp
loop
inc
mov
push
loop
pop
jl
inc
sub
mov
lods
out
lods
cmp
push
es
xchg
push
pushf
or
xor
ret
test
fs
xor
cmp
rol
lods
iret
jl
cmp
pop
daa
adc
test
push
movsl
push
mov
in
imul
add
lock
rcrl
inc
mov
popa
rcrb
ljmp
imul
into
xchg
bound
mov
rorl
xchg
shll
lcall
stos
test
je
in
testb
jge
adc
outsl
push
cmpsl
lds
xchg
push
inc
mov
test
xor
dec
call
cli
dec
movsl
jmp
test
xchg
push
ljmp
adc
insl
and
xchg
or
pop
jmp
roll
insb
push
rcll
shrb
cmp
lock
cmp
push
jle
outsl
mov
sbb
popf
inc
jle
xchg
popa
pushf
push
fs
out
scas
mov
mov
mov
in
and
push
add
pop
adc
lret
xchg
test
mov
pop
pop
mov
xor
jmp
dec
out
sbb
out
cmp
pop
xor
sarl
mov
out
cwtl
loop
call
inc
lcall
jp
pop
mov
dec
inc
insl
lea
pop
xchg
add
jbe
loopne
jmp
loop
mov
dec
xor
push
pop
jo
mov
into
mov
int3
lods
cmpsb
std
out
cltd
add
gs
loopne
pop
cli
pop
test
loope
or
cmpsl
mov
clc
push
fcomps
call
shrb
or
push
mov
xor
jg
cmp
ret
outsl
imul
sub
jg
rcl
jb
test
inc
inc
stc
mov
mov
clc
or
imul
pop
push
shrl
out
testb
fs
arpl
addb
mov
data16
and
lret
ret
icebp
mov
lods
mov
xorb
mov
rol
push
lock
add
inc
or
jl
xchg
or
out
push
loope
pop
cmpsl
add
push
iret
push
outsl
add
leave
test
mov
loope
adc
mov
pop
sets
or
add
mov
dec
add
in
mov
or
xchg
out
inc
arpl
cmp
jl
das
stos
outsb
xchg
cs
add
jp
sarb
stc
in
pop
sbb
mov
loopne
cmp
or
or
ds
stos
dec
dec
popf
inc
pop
pop
xlat
push
mov
arpl
test
mov
add
aaa
xchg
filds
or
xchg
shrb
adc
sub
mov
mov
push
out
adc
insb
xchg
incb
jnp
push
xchg
fsubs
data16
inc
mov
or
jge
daa
jne
enter
add
lret
in
sub
aas
cli
jmp
addr16
insl
fistl
mov
dec
xchg
out
data16
inc
out
out
iret
stc
lods
cmp
in
loope
gs
push
and
pop
ss
jb
rcrb
rcl
jne
pushf
push
dec
std
push
mov
and
sti
xchg
fwait
xor
imul
leave
imul
lret
test
mov
cld
mov
dec
add
ficompl
out
adc
xchg
mov
loop
jns
cmp
out
call
mov
iret
mov
pusha
cwtl
dec
mov
jecxz
or
jg
dec
adc
insl
into
imul
iret
ja
iret
add
mov
ret
out
leave
imul
sub
lret
jno
arpl
out
out
xchg
jmp
insb
cmp
mov
mov
sub
and
dec
test
cld
mov
arpl
jl
jecxz
movsl
adc
dec
arpl
adc
daa
ret
cmp
push
aad
bnd
jae
jne
fildll
mov
add
inc
inc
jg
dec
xchg
sub
mov
fs
loope
pop
test
xchg
cmp
xchg
or
test
and
sub
and
inc
outsb
xchg
xchg
cli
aaa
jno
ljmp
call
add
setnp
sbb
fldcw
fcmovne
ret
inc
inc
pop
push
call
test
out
inc
cmp
les
cmp
jl
test
jo
cwtl
push
cmp
jae
xchg
lcallw
and
adcl
mov
add
das
pusha
das
and
popa
out
popa
std
popw
repnz
adc
iret
mov
pop
dec
lcall
enter
xchg
fs
shr
rorl
fnsave
jge
adc
jle
cmc
add
ds
xchg
push
lock
add
pop
test
push
inc
repz
and
hlt
add
lods
or
ret
out
scas
das
sub
test
xor
mov
jg
jle
pop
test
mov
repnz
out
out
cmp
jns
xchg
ja
sti
jl
xor
mov
shr
add
jb
lea
in
fcoml
cmp
jecxz
push
shll
push
mov
pop
sub
mov
xchg
pop
dec
xor
xchg
mov
dec
repnz
fwait
adc
dec
sub
jb
xchg
lcall
xlat
push
clc
cmp
add
and
fidivrl
cmp
xor
sbb
rorl
add
xchg
loope
inc
loopne
xchg
and
lret
push
cld
pop
push
dec
or
jecxz
sbb
dec
inc
shlb
cli
sub
gs
jb
jne
clc
and
mov
jp
mov
add
fdiv
test
xchg
rorb
in
push
loopne
or
scas
out
push
fbld
rcl
ss
out
imul
jge
xor
idivl
outsl
cld
pop
pushf
out
inc
inc
cmp
aam
jns
pop
mov
cmpsl
sbb
jbe
push
out
inc
sbb
out
lock
ljmp
pslld
dec
fimuls
out
orl
pop
jns
rcll
dec
xchg
stc
xchg
cmp
fimull
or
add
jle
sahf
aad
cs
push
sbb
jmp
push
scas
jp
push
repz
repz
mov
mov
mov
adc
dec
scas
sub
cs
mov
cmpsl
pop
sbb
int
in
mov
rcl
jg
iret
cmpsl
add
ds
subl
js
sets
flds
add
pop
insb
test
ljmp
pop
mov
movsl
addr16
adc
adc
adc
nop
lcall
bound
repnz
mov
push
ffreep
ret
andl
push
pusha
or
test
inc
aad
movsb
pop
xchg
jb
xchg
movsl
ret
mov
outsl
das
push
xchg
cs
or
shrl
pop
lret
outsl
clc
dec
push
pop
and
out
xor
pop
push
sbb
std
stos
mov
fdivrs
ss
adc
sbb
orb
sti
arpl
out
mov
lcall
or
add
rorb
or
sbb
add
mov
lock
add
rcr
mov
pop
cmpsl
mov
or
xor
pop
add
push
xchg
loop
mov
cmp
cmpb
mov
aad
stos
test
sbb
mov
loopne
popw
push
shl
ret
sub
stc
mov
movsl
pop
mov
xor
push
xor
aam
cmp
mull
in
dec
cs
or
cmc
mov
mov
pop
push
movsb
out
fwait
mov
cld
rcrb
je
jno
mov
add
dec
jge
out
punpckhdq
sbb
jae
xchg
addr16
mov
xor
addr16
int3
fldt
aas
lea
adc
repnz
pop
jle
out
cld
sbb
sti
sub
sbb
jnp
add
or
add
fldenv
mov
iret
icebp
cmp
pushf
sti
fcmovne
dec
test
mov
jle
idiv
ret
fistl
jle
jbe
mov
jns
cmp
out
notl
pushf
jg
insl
mov
iret
fdivrs
mov
paddusb
dec
clc
cmp
fimull
or
adc
scas
xrstors
jno
xchg
insl
in
push
inc
sbb
repnz
sub
xlat
adc
fnstenv
cli
add
or
lods
jp
xchg
shrl
shlb
sahf
dec
outsl
shll
sbb
or
xchg
mov
test
inc
neg
inc
xorl
ficoms
call
jecxz
adc
jo
imul
out
fldt
add
cli
xchg
imul
or
pop
pop
mov
inc
cmp
fisubrs
inc
add
mov
incb
mov
daa
in
jg
inc
test
adc
shrl
ficomps
popf
aaa
push
push
int
adc
scas
jecxz
add
sahf
jle,pn
sub
xchg
prefetchnta
pop
into
mov
in
inc
pop
leave
xlat
jg
mov
scas
jne
sub
fbstp
out
cmp
mov
sub
test
fistpl
xor
xor
mov
inc
cmp
or
jecxz
mov
mov
jns
loope
lret
pop
mov
repz
lret
sbb
movsl
ljmp
add
in
stos
mov
adc
int3
inc
sbb
call
sbb
lret
rclb
rclb
push
lcall
aaa
push
loope
add
xor
test
movsl
subl
sub
jns
cmpl
pop
mov
jecxz
pop
mov
cmp
sbb
pushl
ret
inc
xchg
mov
jae
lret
js
std
hlt
sub
push
in
dec
aam
xchg
mov
iret
inc
fistps
clc
pushf
jge
cmp
ja
sti
mov
fisttps
testb
insl
fisubs
int
pop
into
adc
cmpsb
out
cmp
dec
xor
aaa
push
mov
or
add
xor
decb
sbb
iret
lds
sahf
pusha
mov
pop
sti
int3
imul
cmp
mov
roll
sub
mov
push
lahf
pop
fdivs
mov
int3
inc
cmp
sbb
inc
dec
jb
push
dec
imul
push
stos
lea
jnp
rorl
mov
mov
pushf
mov
mov
inc
out
ret
cmp
add
push
mov
or
cmc
sahf
xchg
loopne
and
fstpl
cmp
rorb
xchg
push
mov
jae
int
loop
inc
movsb
ss
cli
inc
sbb
imul
movsb
addr16
push
jle
dec
jp
mov
divl
pop
imul
push
pop
cmpsl
fstl
mov
clc
or
add
cmp
jno
test
jge
fcompp
scas
and
shrb
sub
fwait
dec
subl
leave
dec
fnstcw
dec
jne
ret
shr
and
jecxz
add
xchg
lahf
jg
xchg
test
inc
test
add
push
add
call
and
out
jns
iret
xor
aas
pop
insl
or
add
adc
cmpsl
xchg
push
sub
ja
and
stos
shll
das
rcrb
ror
cmp
push
subb
mov
and
pop
inc
mov
cmpsl
cmc
call
add
mov
adc
test
xchg
sbb
mov
or
mov
mov
sbbb
leave
in
push
ljmp
rep
mov
les
loop
addr16
mov
mov
mov
jb
jae
repz
xchg
shl
or
cmp
cld
rolb
inc
loope
movb
cmpb
add
and
inc
flds
sbb
jecxz
push
dec
pop
push
push
sub
or
adc
mov
mov
dec
and
and
pop
enter
lcall
pop
inc
clc
imul
ja
stos
xchg
adc
lods
xchg
and
lret
and
stos
and
loopne
xchg
or
out
jg
sti
fcmovnu
test
adc
inc
add
or
cmp
iret
in
sub
jmp
ret
adcb
jecxz
sub
popa
ljmp
fwait
add
test
jecxz
and
cmpsb
stos
int
ss
and
sti
mov
fistl
jnp
xchg
mov
dec
insb
call
int3
lahf
jnp
cltd
insb
xlat
cltd
jno
fimuls
fs
jg
out
les
shrl
jp
sub
mov
sub
mov
js
mov
sbb
gs
inc
mov
enter
or
adc
ds
cmpsl
rorb
sti
orb
xor
mov
call
loopne
es
dec
in
leave
inc
sub
push
adc
aam
mov
dec
rcll
imul
jecxz
jns
xchg
push
lea
mov
pop
mov
mov
mov
dec
fwait
lret
fisubrs
mov
jp
push
popa
mov
inc
into
jmp
cwtl
sub
out
jmp
jb
jmp
mov
outsb
adc
mov
das
fistl
jmp
mov
push
out
mov
and
mov
cmp
mov
jp
out
out
xor
in
sub
mov
xlat
nop
pop
es
in
loop
mov
imul
cwtl
pop
arpl
lds
lcall
and
xchg
dec
icebp
cli
or
mov
sti
aas
shlb
enter
imul
sub
fstpt
or
outsb
scas
mov
fildl
and
mov
sbbl
addr16
add
lods
ficomps
or
xchg
mov
fldt
dec
push
stos
push
adc
enter
mov
jne
lods
dec
lods
xchg
jmp
sub
jne
mov
call
pop
sbb
sub
dec
fwait
inc
fdivl
inc
and
jns
fucom
into
pop
in
jb
cmp
jns
and
scas
and
insb
cmpsl
mov
imulb
fwait
and
mov
fs
push
test
or
or
mov
push
sahf
lods
pop
push
xchg
pop
or
push
out
je
sbb
mov
outsl
fs
std
cmc
ds
and
out
mov
int3
negl
adc
lods
sub
push
inc
xchg
pop
pop
dec
popl
xor
lock
mov
inc
dec
int3
jle
xchg
in
daa
dec
push
out
mov
pop
out
fiaddl
mov
stos
jno
nop
or
dec
mov
pop
gs
mov
or
mov
ljmp
fld
dec
mov
jne
cltd
das
fwait
in
jmp
sub
shlb
xor
ss
cmp
sub
sahf
icebp
push
xorl
movsl
inc
es
xchg
outsb
fbld
and
mov
ljmp
xchg
imul
add
enter
sub
fucomp
jbe
arpl
cltd
movsl
icebp
fadds
pop
pop
jbe
scas
ljmp
data16
xorl
arpl
fdecstp
inc
mov
cmp
add
fisubrs
and
mov
lret
pop
pushf
jle
stc
out
das
sub
sbbb
fildll
int3
aad
mov
sti
mov
adc
or
fdivrl
testb
imul
jne
mov
xorb
add
insb
test
movsb
xor
sub
in
or
xchg
loopne
lods
loop
mov
outsl
add
pop
movsl
sub
push
popf
xor
fsin
fldt
repnz
dec
adc
lret
cmp
fisubrl
push
jl
sbb
sub
mov
loop
cltd
fldt
pusha
mov
cmc
cmp
shr
xor
lods
mov
es
arpl
loopne
mov
lea
and
rorb
addl
push
sbb
fldenv
lods
das
popa
mov
fnstcw
loopne
stc
sbb
push
mov
sub
orb
jne
xor
pop
dec
ss
cli
sbbb
loop
ficomps
lock
fsubl
mov
jl
das
mov
xor
mov
push
sbb
inc
and
sbb
xchg
enter
xchg
mov
pop
xchg
rcl
rcrb
pop
and
cmp
lock
pushf
pushf
adc
mov
push
cmp
test
xchg
adc
push
insl
lods
ljmp
daa
cmpsb
mov
push
pop
jge
jno
adc
popf
and
pop
sti
mov
dec
push
fdivrl
xor
fsts
int3
dec
bound
cmp
in
cli
loop
jae
mov
sub
in
fdivrs
ret
or
add
outsl
lods
xor
push
icebp
inc
fs
push
pop
add
sub
sbb
cmp
lds
dec
enter
lods
pop
or
xlat
mov
xchg
adc
lods
pop
xchg
ret
mov
pop
or
in
mov
mov
mov
sub
push
xor
jmp
and
mov
push
mov
dec
into
loop
cmc
cmp
or
push
xchg
sbb
push
rclb
push
dec
inc
jge
jmp
pop
inc
lahf
dec
xchg
pushf
pop
jp
push
ret
push
les
pop
pop
aam
ds
mov
pop
jns
js
adc
mov
mov
sub
mov
add
test
cmpsl
fiadds
pop
dec
or
sti
aas
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jbe
mov
push
push
mov
mov
mov
mov
mov
shl
mov
pop
shr
rep
mov
and
rep
pop
ret
nop
push
mov
push
mov
test
jle
mov
mov
sub
mov
mov
inc
dec
jne
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
push
push
mov
je
mov
test
je
test
je
mov
test
jle
mov
push
mov
push
push
push
push
call
mov
add
test
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
add
test
jne
push
call
add
push
call
add
movl
mov
pop
pop
pop
pop
add
ret
push
lea
push
push
call
mov
mov
add
lea
movl
mov
push
push
push
push
push
mov
movl
mov
mov
call
mov
mov
add
mov
test
je
push
push
call
add
push
call
add
movl
mov
test
je
mov
push
call
add
mov
pop
pop
pop
pop
add
ret
movl
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
cmp
je
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
mov
mov
ret
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
mov
mov
lea
cmp
jbe
sub
mov
mov
push
add
mov
push
push
call
mov
mov
add
add
mov
push
push
push
push
push
call
add
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
push
push
push
call
mov
mov
add
push
push
add
push
call
mov
add
add
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
mov
push
push
call
mov
add
push
push
call
mov
add
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
mov
mov
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
mov
xor
mov
mov
call
add
ret
mov
push
push
mov
push
push
mov
call
mov
mov
add
cmp
jne
xor
pop
pop
pop
ret
xor
mov
mov
inc
mov
mov
movb
push
call
mov
mov
add
test
push
jne
push
call
add
push
call
jmp
call
add
test
jne
push
call
add
test
jne
mov
test
je
mov
test
jne
mov
mov
mov
sub
push
push
push
call
mov
add
pop
pop
pop
ret
nop
mov
push
push
push
mov
and
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
push
mov
mov
and
cmp
ja
mov
mov
shr
sub
mov
mov
pop
pop
pop
pop
ret
mov
mov
mov
shr
mov
mov
mov
cmp
jb
cmp
jae
xor
sub
mov
and
or
inc
mov
mov
sub
mov
shr
add
mov
mov
mov
pop
pop
pop
pop
ret
push
call
add
mov
mov
mov
add
shl
or
mov
mov
mov
sub
mov
shr
sub
mov
add
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
sub
push
push
push
mov
push
push
push
call
add
cmp
jne
mov
push
push
push
call
mov
add
add
push
push
push
call
mov
add
add
push
push
push
call
mov
add
add
push
push
push
call
mov
add
push
push
push
call
mov
mov
mov
add
push
push
push
push
push
call
add
test
jne
mov
mov
mov
push
push
push
push
push
call
add
test
jne
pop
pop
pop
pop
add
ret
cmp
jne
movl
mov
pop
pop
pop
pop
add
ret
push
push
call
add
mov
add
push
push
mov
call
add
lea
inc
push
push
push
mov
call
add
push
push
call
mov
add
add
xor
push
push
call
xor
add
mov
inc
cmp
mov
jbe
mov
push
push
lea
push
push
push
call
add
test
jne
mov
xor
add
test
jbe
mov
mov
and
xor
xor
push
mov
mov
push
call
mov
add
sub
je
dec
je
dec
je
mov
jmp
push
push
call
add
add
xor
jmp
push
push
call
add
add
xor
jmp
push
push
call
mov
add
add
xor
mov
lea
cmp
ja
mov
inc
dec
mov
jne
cmp
jb
mov
mov
mov
mov
add
mov
push
push
push
call
mov
mov
mov
add
push
push
push
push
push
call
add
test
jne
mov
mov
mov
push
push
push
push
push
call
add
test
jne
pop
pop
pop
pop
add
ret
mov
pop
pop
pop
pop
add
ret
movl
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
push
mov
mov
mov
push
push
and
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
push
push
push
call
mov
add
xor
test
jle
mov
xor
mov
incw
lea
inc
cmp
jl
movw
lea
xor
mov
add
add
add
shl
mov
cmp
jle
cmpw
je
mov
xor
lea
movswl
add
cmp
jg
inc
add
cmp
jl
mov
xor
test
jle
mov
mov
test
je
mov
and
mov
mov
xor
mov
incw
lea
jmp
mov
movw
inc
cmp
jl
xor
test
mov
jle
mov
xor
mov
cmp
jle
mov
mov
xor
lea
xor
lea
mov
shl
mov
and
shr
or
shl
dec
test
jg
mov
mov
mov
inc
cmp
mov
jl
mov
push
push
push
call
add
dec
test
movl
jl
mov
mov
test
je
cmp
ja
mov
shl
mov
xor
mov
lea
lea
mov
add
add
cmp
jb
jmp
mov
mov
mov
mov
mov
and
lea
lea
mov
jmp
mov
cmpw
jne
mov
movw
not
movw
mov
mov
add
add
mov
mov
xor
movswl
mov
mov
test
not
je
lea
jmp
lea
mov
xor
shl
mov
inc
cmp
jb
mov
mov
mov
dec
jns
xor
pop
pop
pop
pop
add
ret
mov
pop
pop
pop
movl
mov
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
test
je
and
push
push
call
add
mov
cmp
jb
mov
push
and
call
mov
xor
mov
add
and
shr
or
mov
jmp
mov
cmp
jae
push
call
and
add
shl
or
push
call
add
mov
and
push
call
xor
add
mov
and
or
not
and
cmp
je
movl
mov
pop
pop
pop
pop
ret
test
je
mov
mov
sub
mov
cmp
jb
mov
mov
mov
mov
sub
add
cmp
jae
cmp
jae
mov
jmp
mov
mov
push
push
push
call
mov
mov
mov
add
mov
add
sub
add
cmp
mov
mov
jb
push
call
mov
mov
add
cmp
je
mov
mov
cmp
jne
mov
mov
mov
push
push
push
mov
call
add
test
jne
push
call
add
and
mov
movb
pop
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
mov
xor
push
mov
mov
inc
mov
mov
cmp
mov
jb
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
inc
mov
pop
ret
mov
mov
mov
push
push
push
call
add
test
jne
incl
mov
add
mov
mov
add
mov
pop
ret
nop
nop
push
push
mov
push
push
call
mov
add
cmp
jae
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
mov
mov
push
push
push
mov
call
add
jmp
je
push
sub
call
mov
add
sub
mov
dec
cmp
jae
add
mov
mov
mov
mov
mov
inc
inc
cmp
mov
jne
mov
mov
mov
push
push
push
mov
call
add
cmp
jne
mov
dec
jne
jmp
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
cmpl
jle
movl
mov
pop
pop
pop
ret
mov
mov
and
mov
test
jge
push
push
call
mov
mov
and
add
movswl
mov
and
not
or
mov
mov
shr
test
jge
movswl
mov
and
not
or
inc
cmp
mov
jbe
movl
mov
pop
pop
pop
ret
push
push
jmp
mov
movswl
mov
test
jne
movl
mov
pop
pop
pop
ret
and
push
push
call
mov
add
and
cmp
jne
mov
test
je
mov
mov
pop
pop
pop
ret
mov
push
push
and
call
add
xor
mov
push
push
or
call
add
test
jne
mov
mov
mov
sub
push
push
push
call
mov
add
xor
mov
mov
push
push
call
add
add
mov
pop
pop
pop
ret
cmp
jl
sub
mov
and
xor
mov
and
shr
dec
add
shl
mov
push
and
push
lea
call
add
pop
mov
pop
pop
ret
nop
nop
nop
push
push
push
push
mov
push
mov
mov
and
mov
test
jge
push
call
mov
mov
add
xor
and
movswl
mov
and
not
or
inc
shr
mov
test
jl
push
jmp
mov
xor
movswl
mov
push
call
add
cmp
jge
movswl
pop
pop
pop
pop
ret
and
mov
shr
dec
cmp
ja
xor
and
mov
add
mov
mov
mov
push
shl
and
push
add
call
add
mov
pop
pop
pop
pop
ret
mov
push
push
and
call
mov
xor
mov
add
and
lea
shl
push
push
add
call
and
mov
add
add
shl
pop
add
mov
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
push
shr
je
mov
add
mov
add
dec
jne
and
je
mov
mov
inc
inc
dec
jne
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
and
push
mov
mov
shl
or
mov
shl
or
mov
shl
shr
or
test
je
mov
add
dec
jne
and
je
mov
inc
dec
jne
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
pop
ret
mov
push
push
push
mov
mov
sub
movl
add
sub
mov
cmpl
je
nop
nop
int3
nop
nop
mov
test
je
int3
mov
movl
lea
mov
test
jle
mov
neg
mov
jmp
mov
mov
mov
add
add
nop
mov
lea
cmp
je
int3
nop
nop
nop
nop
nop
mov
mov
push
push
push
push
call
add
nop
mov
mov
mov
push
mov
push
push
push
push
lea
push
call
mov
mov
add
inc
lea
mov
cmp
mov
jl
pop
pop
mov
pop
pop
ret
nop
push
mov
mov
mov
lea
push
push
mov
push
push
push
call
add
test
je
nop
nop
int3
nop
nop
nop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
test
mov
jbe
push
push
mov
push
mov
xor
sub
lea
cltd
sub
sar
test
jle
mov
mov
mov
and
and
add
sub
cmp
jne
cmp
jge
test
jl
mov
mov
sub
mov
add
sub
inc
cltd
sub
sar
cmp
jl
mov
mov
mov
add
sub
mov
mov
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
gs
insb
outsl
fs
je
jb
gs
add
inc
outsl
jne
outsb
daa
je
popa
insb
insb
outsl
arpl
and
insl
outsl
jb
and
add
dec
gs
inc
js
push
gs
fs
je
and
das
and
das
and
das
and
add
add
dec
gs
inc
js
push
jb
je
dec
je
and
das
and
add
insl
pop
outsb
inc
outsl
insl
jo
gs
gs
outsl
jae
je
outsl
outsb
and
add
outsb
dec
jb
imul
imul
and
add
outsb
inc
outsl
insl
jo
gs
gs
jne
push
imul
and
add
add
nopl
jg
adc
adc
or
or
or
or
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
