mov
dec
scas
scas
cmp
push
and
pop
inc
xchg
loop
sbb
icebp
out
int
mov
ss
pusha
cmpsb
insl
or
aam
sbb
jo
push
cmpsb
insb
xchg
sub
or
stos
in
sbb
cmpl
xchg
push
pop
push
sbbl
or
daa
cmpsl
sbb
sbbl
inc
aaa
clc
pop
rorl
out
out
mov
dec
inc
into
aad
sbb
xlat
dec
pop
sub
fmull
outsb
adc
cwtl
xor
lret
imul
fbld
outsl
lcall
cmp
pop
xor
or
mov
xor
dec
jl
mov
mov
xchg
xlat
or
lods
ljmp
pop
nop
inc
pop
int3
dec
pop
mov
push
dec
cltd
cltd
idivl
xchg
dec
outsl
test
pusha
or
pop
sbb
cmp
fnstenv
add
sub
ja
fistpll
push
and
jg
sub
xor
lcall
xchg
iret
mov
sub
out
ljmp
lock
std
push
jne
test
mov
sub
mov
dec
xlat
xor
add
out
in
mov
stos
adc
iret
in
push
movsb
sub
xor
add
jmp
pop
mov
int
sub
test
shlb
iret
stos
in
out
out
in
rclb
pop
add
add
push
cli
lret
fwait
mov
mov
into
std
cltd
mov
es
stc
enter
shrl
fnstenv
aas
add
adc
pop
shlb
mov
add
leave
xchg
pop
xchg
and
sti
add
xchg
shrl
jmp
jb
std
and
ret
adcl
daa
stc
stc
nop
test
sbb
jnp
xlat
mov
jecxz
sub
repnz
rcll
cmp
lahf
lock
les
add
lahf
dec
testb
ret
subb
jno
mov
lret
adc
ds
les
dec
das
dec
inc
push
mov
imul
push
mov
test
mov
xor
xchg
lea
sub
mov
dec
lods
mov
movsl
cli
or
sbb
aas
stc
das
lahf
push
mov
pusha
inc
push
inc
addr16
cli
in
cmp
jns
pushl
mulb
and
fs
push
xlat
add
shll
jp
insl
jl
das
and
stos
cmp
stc
mov
popa
movsb
movsl
cmp
xchg
sbb
pop
jnp
jnp
push
and
mov
sti
leave
orb
push
std
xchg
sbb
mov
dec
mov
into
scas
adc
rcrb
repnz
mov
xchg
pop
dec
js
xchg
in
push
inc
inc
aaa
xor
mull
repz
lea
sub
ret
es
mov
packuswb
xchg
sbb
das
dec
sub
and
addr16
pusha
cltd
dec
push
jle
and
xchg
in
jne
pushf
add
lret
stc
xor
pop
jp
sti
mov
xor
ret
hlt
test
stc
test
fs
jl
pop
ror
mov
and
pushf
sbb
sub
pop
negl
mov
jmp
cmp
xchg
jl
jge
pop
out
imul
xchg
dec
movsl
and
inc
int
cmc
push
fwait
mov
inc
and
fnstenv
rolb
mov
out
mov
xchg
pop
mov
sub
push
pushf
adc
xor
iret
enter
mov
mov
test
aaa
arpl
je
pop
inc
dec
cmp
fs
and
idivl
test
push
add
and
lret
and
push
push
push
push
icebp
push
sub
and
push
pop
dec
mov
mov
jbe
sub
dec
jmp
ficoml
daa
pop
mov
jmp
enter
test
out
mov
push
jbe
xchg
jne
jecxz
cmp
xchg
jl
adc
aaa
pushf
outsb
lcall
out
js
mov
shrl
out
and
rcrb
out
shlb
aad
add
ss
xchg
ret
fdivrl
je
jo
xor
repnz
xchg
cmp
sbb
cmp
dec
enter
mov
mov
mov
mov
test
movsb
push
test
sub
std
call
lock
adc
pop
shrl
popf
mov
pop
rol
push
xchg
sub
clc
lods
aaa
push
xchg
js
lret
add
add
dec
rcrl
sub
sbb
jmp
sub
movsl
pusha
lret
mov
enter
addr16
jne
loopne
jmp
jg
xor
pop
inc
test
sbb
and
mov
and
imul
lahf
jo
or
aam
bnd
jp
cmpsb
call
decb
popf
adc
push
jmp
sbb
cmp
test
fs
loop
gs
out
dec
scas
and
rorl
add
stc
cmp
insb
lret
dec
addr16
cmp
pop
push
inc
add
ret
mov
lcall
inc
ss
cmc
pop
or
mov
push
and
push
daa
pusha
imul
ffreep
loop
sub
dec
sub
sub
adc
in
inc
fcoml
mov
loopne
xchg
repz
sub
and
lea
pop
mov
xchg
negl
and
rcrl
loopne
jmp
inc
cltd
dec
ret
push
ss
loop
mov
and
iret
scas
push
leave
sub
sahf
pop
push
inc
repnz
dec
jmp
mov
mov
shlb
mov
aad
inc
int3
sbb
sub
lods
pop
cmpsl
clc
sar
sbb
icebp
pop
mov
ja
stc
cmp
rcll
shll
out
inc
jbe
mov
daa
mov
repz
rorl
adc
fidivl
cltd
outsl
sub
add
sbb
cmp
pop
testl
nop
xlat
sti
jmp
xor
stos
mov
out
mov
push
and
add
sbb
jne
aad
shrb
pop
stos
push
mov
jp
sbb
out
lea
pop
push
mov
xor
ds
sub
bnd
inc
aaa
gs
pop
adc
mov
insb
aas
dec
and
dec
imul
xchg
aad
lods
int3
in
push
aam
cmp
in
xchg
notb
push
mov
jae
in
insl
mov
movsb
mov
fstpt
mov
dec
fcmovnbe
jae
inc
fwait
push
xchg
jp
idivb
add
test
push
push
dec
gs
cltd
clc
cmp
jo
into
sbb
aam
ja
js
shll
push
adc
xchg
pop
arpl
jge
daa
and
push
cmp
jge
inc
mov
ret
daa
addr16
cmc
insb
jle
ret
pop
add
pop
xchg
in
cmp
call
scas
mov
inc
sub
push
jle
mov
imul
and
lahf
in
nop
aad
add
push
mov
xchg
xchg
notl
lea
xchg
lret
lods
in
aaa
repz
jne
lahf
ljmp
lods
jg
test
aas
push
dec
mov
push
in
adc
hlt
out
imul
lahf
rol
lds
cmp
js
mov
xchg
sbb
test
arpl
jbe
mov
dec
not
aad
les
orb
mov
mov
dec
jge
repz
std
ret
fstpl
movsb
out
out
xchg
pop
jp
sbb
inc
pusha
in
mov
insl
xor
pop
icebp
imull
and
call
mov
mov
add
xor
xchg
lds
ljmp
scas
lds
dec
mov
push
mov
mov
and
xor
and
cmpsl
jns
jmp
sti
cmp
stos
inc
mov
cmpsb
popa
cmp
jo
jmp
inc
ret
push
les
inc
or
xor
sub
dec
cmp
jp
ljmp
movsb
ljmp
push
mov
imul
cmp
fcomp
pop
out
aas
scas
pop
leave
adc
pusha
add
dec
clc
sub
loope
je
fistpll
lea
mov
mov
and
or
add
mov
push
fnstsw
cltd
pop
sub
cwtl
fnstcw
dec
add
push
lea
mov
pop
push
xchg
pop
lea
pop
pop
lock
push
insl
pop
xchg
push
xchg
xchg
jae
jae
mov
pusha
mov
dec
cmp
ret
sbb
out
pop
test
stos
pop
push
aam
jle
sbb
call
mov
lds
scas
shll
lds
mov
lret
negb
loope
pop
lods
js
push
and
sar
outsb
cltd
inc
dec
jb
mov
icebp
out
sahf
ja
inc
scas
xlat
pop
sahf
sbb
mov
xor
pop
subb
pop
lds
dec
xchg
iret
mov
and
cli
pop
std
movsl
mov
push
inc
jg
aad
and
push
es
inc
and
mov
jl
inc
push
sub
dec
add
fxch
mov
pop
xor
lds
dec
daa
std
out
and
cld
test
cld
int3
popa
sbb
lret
ret
push
cmp
rcrl
sarb
fisttpl
and
sub
mov
leave
std
pushf
mov
repz
add
jns
test
mov
stc
lea
jb
test
fists
push
push
mov
sbb
inc
movsb
mov
testb
loop
mov
pop
pop
cmpsb
fcompl
inc
cmpl
xor
push
add
push
dec
repnz
cmpb
pop
loope
mov
int
sbb
cmp
cmp
repz
dec
sub
mov
mov
dec
or
imul
sbbl
mov
mov
int
fildll
je
sub
sub
icebp
dec
sbb
xlat
jmp
icebp
lock
jne
sbb
mulb
pop
sbb
rcl
adc
mull
sbb
sahf
xchg
nop/reserved
jecxz
aam
add
fdivr
fwait
test
gs
movsb
dec
std
fimull
dec
xor
xchg
insl
or
icebp
fwait
test
push
shll
push
xchg
adcb
and
xor
mov
out
jmp
mov
rorl
cs
mov
por
ret
adc
jg
mov
pushf
rorb
sbb
stos
rol
lea
jge
dec
mov
rcl
aam
out
stos
fstpl
xchg
xor
repnz
sbb
xchg
adc
imul
mov
insb
mov
mov
xchg
push
push
cmp
fwait
mov
test
in
cmpsl
arpl
jge
aaa
call
aas
and
iret
orl
dec
insb
push
dec
dec
ss
xlat
inc
popa
stc
inc
shlb
dec
xor
pop
rcr
stos
into
es
jbe
aaa
lea
push
les
dec
adc
cmp
sub
testl
in
jb
inc
cmp
dec
and
push
sahf
mov
loope
cmp
mov
sti
stc
sbb
rolb
sbbb
sub
mov
pusha
leave
call
daa
jnp
mov
data16
mov
sbb
daa
lock
mov
add
jmp
hlt
enter
lret
jb
xchg
ficomps
cmp
add
inc
jmp
mov
jle
jo
ret
push
iret
mov
jmp
lcall
add
mov
sub
call
pop
adc
int
mov
jl
stos
loopne
push
mov
add
sbb
fisttpll
pop
push
or
fisubrs
lods
movsl
jge
int
and
out
cs
divb
add
sub
ret
xor
bound
lock
repz
push
repz
dec
in
imul
push
lea
mov
mov
lahf
fstps
dec
test
std
movsb
ja
rorb
adc
popf
mov
pop
in
popa
cmc
lods
sti
leave
xor
xchg
int3
fisttpl
pop
addr16
mov
fcomps
sub
das
push
or
pop
jnp
mov
stos
in
xlat
xor
pop
aad
mov
sub
repz
shlb
jge
cmpsb
sub
push
insl
push
cmc
arpl
leave
neg
pop
mov
leave
or
pop
jb
cmp
xor
lods
add
fwait
sahf
aas
xlat
sub
push
lahf
das
lock
out
insl
mov
adc
jp
les
xchg
hlt
ds
cmpsb
ja
shlb
jo,pn
jns
pop
fnstcw
jmp
add
push
dec
dec
aaa
pop
xor
rcll
dec
sub
mov
insl
sti
inc
pop
pop
xchg
lahf
sbb
pop
dec
movsl
jne
sbb
pop
mov
dec
xchg
movsl
sub
into
aad
test
cmc
sahf
stc
add
xchg
xor
sbb
sub
addr16
test
push
dec
cwtl
or
xchg
lret
fwait
sub
xor
mov
out
xlat
iret
pop
daa
clc
pusha
nop
repnz
push
out
ja
pop
pop
push
dec
xor
lret
insl
sub
jno
xchg
sbb
cmp
insl
and
xchg
in
mov
and
fdivr
test
mov
xchg
mov
std
mul
shlb
push
add
ror
push
pop
daa
push
sub
subb
mov
in
mov
leave
gs
inc
cld
sub
imul
pop
outsb
pop
and
or
lock
inc
mov
mov
xchg
loope
stos
cmp
push
mov
test
and
mov
dec
dec
and
insl
mov
es
movsb
mov
and
xor
dec
repz
outsb
mov
jmp
out
or
or
pop
das
arpl
mov
pusha
aaa
mov
jae
mov
pop
stc
jbe
mov
add
testb
cwtl
xor
cmp
iret
xlat
stc
sbb
or
lcall
mov
sets
out
ljmp
out
pop
popl
cli
pop
andl
or
mov
sarb
sub
mov
and
push
mov
pop
stos
mull
sbb
push
repnz
mov
popa
movsb
fucomp
repnz
mov
in
cmc
xchg
xchg
hlt
xchg
cmc
mov
cmp
pop
imul
jae
aaa
jle
lret
arpl
imul
sbb
mov
fnstenv
or
jbe
pop
adc
sbb
sti
int3
push
ja
sbb
push
test
xchg
sub
sub
fwait
sti
in
inc
xor
sub
outsl
xchg
test
hlt
adc
cmp
xchg
or
mov
or
push
jns
insb
int
movsl
test
cld
je
lret
mov
les
or
pop
icebp
pop
xchg
inc
push
ljmp
ja
testl
imul
mov
les
movsl
mov
inc
std
fisubrs
adc
xlat
add
dec
incb
jae
pushf
fnstsw
push
xorl
movsl
pop
cmp
mov
pop
sub
and
add
js
xor
sbb
out
es
cmp
rcrl
sbb
xchg
pusha
inc
cmp
mov
pop
xor
hlt
push
stos
in
addr16
popf
pop
jnp
mov
mov
ret
jmp
out
shl
test
call
cli
ret
jecxz
mov
sti
pop
push
xchg
jecxz
fisttpl
stos
out
cmp
in
xchg
sbb
adc
icebp
testl
mov
jg
rolb
add
or
fs
xchg
in
fidivs
pop
sub
jge
cmp
and
sbb
cmp
adc
pop
and
inc
in
push
inc
cmpsl
lret
test
inc
pop
jge
insb
mov
xchg
test
dec
push
dec
adc
or
stos
cwtl
xor
lahf
xor
arpl
fimuls
cmp
lret
jg
push
insb
int3
int
lods
cmp
adc
mov
pop
mov
fs
repnz
andl
js
lea
inc
insb
cmpsb
add
inc
insl
repnz
in
adc
aas
rcl
scas
sbb
sbb
cmpsb
xchg
pop
xor
movsb
aaa
push
cmp
inc
adc
imul
in
pusha
leave
arpl
pop
imul
cmp
addr16
xchg
push
dec
add
iret
mov
pop
mov
or
adc
pop
pop
out
aad
push
mov
pop
and
aaa
outsb
mov
and
jmp
fisubrl
inc
inc
arpl
xor
and
aam
cltd
jl
sub
mov
in
adc
outsb
decb
sub
ss
cmpsb
xchg
stos
sub
sub
addr16
test
aam
cmc
rcl
mov
cmovno
jbe
lea
stos
sahf
loope
add
dec
push
push
aas
and
pop
xchg
lods
xor
push
test
aam
iret
sbb
leave
jae
mov
and
pop
inc
adc
push
test
sbb
jnp
or
cmp
cmpsb
push
mov
sbbl
aaa
xor
loopne
sub
sub
cmpsl
inc
daa
xchg
das
subl
insl
test
adc
outsb
pop
test
xchg
imull
daa
aad
xlat
lds
lret
out
lret
sub
shll
xchg
daa
sahf
sub
add
pop
idivl
inc
add
dec
mov
or
jle
pop
scas
mov
je
int3
popf
inc
mov
les
sahf
mov
jl
shl
pusha
out
cmp
insl
fs
int3
fscale
and
dec
in
fwait
cmp
insl
jg
and
and
mov
imulb
rcrl
jns
dec
xor
mov
pop
mov
jns
lods
push
addr16
stos
mov
lock
loopne
inc
shrb
jmp
negl
push
lock
testb
jno
mov
fmuls
in
or
icebp
cli
jle
inc
push
fwait
test
cwtl
dec
cmp
loopne
xchg
rcrb
pop
lods
mov
aas
dec
sahf
sub
jp
flds
popf
jne
cmpsb
rcll
int3
add
dec
daa
cmp
push
lods
pop
mov
fcomps
std
mov
pop
and
je
dec
pop
add
jnp
cwtl
cmpsl
icebp
mov
or
lret
sbb
cmp
sti
push
pop
and
dec
jp
mov
push
js
xchg
dec
jns
mov
jp
js
repz
sub
add
fdivrs
lsl
jns
sti
fisttps
loope
daa
fsubl
sub
shrl
and
jmp
xor
pop
or
xchg
sbb
sbb
out
pop
jns
or
lcall
test
nop
inc
cmp
mov
jo
scas
inc
dec
sub
pop
jb
in
cmpsb
sbb
mov
movl
lret
test
xlat
sbb
enter
test
adc
enter
mov
dec
pop
insl
aam
sahf
lcall
jl
jnp
add
or
ret
and
xor
arpl
aaa
fucomi
mov
jge
fs
gs
cmc
xor
pop
dec
imul
popf
clc
pop
dec
jno
cld
repnz
pop
shll
fdivrs
mov
and
mov
ficoml
js
cmp
bound
jno
xchg
push
bound
push
lcall
je
icebp
fdivl
dec
aam
add
dec
push
shl
xchg
inc
sti
pushf
mov
pop
mov
adc
out
push
sbbb
cmp
jge
push
call
adc
idiv
add
jo
inc
fwait
cmp
pop
pop
imul
and
lahf
mov
inc
sub
push
xor
dec
in
inc
or
mov
std
ljmp
xchg
pop
lea
jg
push
mul
sub
aas
sbb
xchg
out
jo
imul
adc
cmp
js
xlat
ja
mov
mov
mov
xlat
jecxz
lds
outsl
aaa
fnsave
jb
icebp
pop
pop
and
cmc
cmp
add
aad
xor
mov
lds
fdivs
mov
sub
sbbl
loope
add
gs
jecxz
xlat
repz
cmpsb
scas
and
or
xchg
rol
adc
mov
mov
test
or
jg
or
aad
add
jb
push
jecxz
add
fcmovbe
pop
inc
and
pop
in
push
xchg
mov
push
and
jae
mov
and
sti
pop
dec
daa
mov
mov
sbb
pop
ja
icebp
scas
sbb
sbb
leave
jae
or
repnz
in
fdiv
call
mov
inc
sub
or
sbb
xor
or
nop
popf
and
pop
mov
std
daa
xchg
mov
pop
imul
mov
repz
jge
xchg
dec
jno
mov
repnz
push
aam
jne
dec
mov
xchg
inc
jmp
lds
or
in
inc
pop
in
cld
sub
cmp
adc
imul
je
sub
sbb
vmovddup
jecxz
int3
xor
xlat
mov
sbb
inc
dec
in
cld
lahf
push
or
jg
std
lods
gs
xchg
int
gs
sbb
mov
roll
sbb
repz
clc
mov
mov
jle
lret
repnz
sub
psrad
pop
or
xchg
sub
mov
fmuls
movsb
dec
inc
sarl
sub
movsl
test
and
jg
xor
shr
es
sub
or
rcrl
ffreep
or
fmulp
fs
ret
jmp
dec
cwtl
scas
enter
and
daa
psubusw
int
aad
push
clc
ficoml
fmul
pop
cmpsb
sub
ret
clc
int
test
mov
pop
sbb
imull
and
sub
pop
inc
or
or
push
dec
xchg
dec
push
sub
std
pop
pop
dec
jb
dec
mov
hlt
and
mov
dec
cmpsl
fs
shll
loope
std
mov
int
add
sub
cwtl
xchg
lcall
cld
jo
cmp
inc
jecxz
add
mov
das
repz
bound
xor
jmp
dec
add
and
pop
sub
jno
pushf
das
or
dec
std
aaa
mov
sbb
add
add
sub
gs
pop
cmp
jmp
mov
in
jl
inc
fwait
ret
pop
ret
call
stos
stos
cmc
add
pop
lahf
xchg
push
adc
mov
fs
lds
or
sahf
mov
leave
xor
cmp
dec
xor
fcompl
mov
mov
mov
mov
mov
pop
jg
fdivrp
mov
jecxz
fstpt
mov
fadd
mov
jnp
sub
cld
in
jg
adc
aad
jnp
sti
sub
ret
push
cmp
sahf
xor
lea
xchg
push
dec
xorl
push
mov
cld
frstor
xor
mov
test
dec
sbb
daa
push
sti
lret
in
shrb
mov
mov
lods
jmp
cltd
sub
xor
xchg
lods
sti
mov
in
arpl
jnp
sub
testb
pop
jmp
daa
hlt
es
rcrl
or
mov
dec
std
hlt
repz
fisubl
dec
dec
dec
mov
arpl
shr
jmp
jno
imul
inc
test
test
sub
cwtl
call
pop
pop
or
in
push
lret
inc
pop
xchg
inc
outsb
stos
fnstcw
xchg
xor
popf
cld
dec
and
mov
sub
insb
std
or
mov
mov
push
orl
fs
inc
dec
sub
xor
or
loope
sub
adc
fwait
bswap
lods
and
out
aad
or
sbb
jg
mov
jmp
lret
cltd
push
out
mov
xchg
lahf
jle
xchg
data16
and
shlb
pop
out
repz
pop
out
jg
ds
lcall
sub
pop
and
adc
stos
outsb
daa
xor
add
pop
jl
mov
nop
pushf
jge
iret
mov
add
mov
xchg
sbb
jo
loop
jae
ret
arpl
nop
xchg
push
pop
out
fildll
fdivr
pop
shll
frstor
cmpsb
clc
int
mov
push
test
inc
sub
cmc
je
pop
aaa
int
js
jmp
fistps
cwtl
std
inc
inc
sub
sub
lds
jg
xor
shrl
jne
sub
clc
sti
sbb
sub
sub
fldz
inc
sub
in
pop
xor
adc
jle
push
inc
dec
cmp
xor
cs
aas
fidivs
jmp
push
testb
mov
and
pop
shll
in
mov
mov
dec
cmp
push
pop
cmp
add
addr16
inc
push
push
pop
mov
loope
cmp
clc
cmp
sub
inc
mov
xchg
sub
cltd
jl
ljmp
orl
das
mov
xor
cmc
lret
es
repnz
pop
sarl
sub
arpl
fcmovnbe
sub
insb
arpl
js
jns
and
stc
aaa
jge
or
mov
push
sarl
push
jmp
mov
aam
sbb
cmpsl
insl
fdivrl
cld
jnp
add
clc
jbe
out
cli
inc
negb
cmp
das
sub
cmp
out
pushf
mov
inc
aad
cmp
pop
mov
mov
shl
pop
mov
jb
xchg
sahf
inc
mov
mov
loopne
fs
popa
cltd
sbb
int
popf
push
sub
insl
dec
shrb
nopl
cmpsl
ret
pushf
insb
out
mov
jecxz
jge
push
xchg
rcr
ljmp
clc
lds
jmp
das
pop
lcall
imul
out
mov
dec
das
das
cli
push
lock
out
cmp
push
ret
daa
jg
jne
loope
sti
sub
sbb
mov
push
stc
cmpl
adc
jno
push
repnz
pop
fnstenv
xor
or
and
stos
cmp
xor
leave
scas
xor
jl
in
jo
rorb
inc
and
add
pop
inc
sub
mov
bound
or
in
sbb
sbb
xchg
cmp
cwtl
nop
dec
mov
cmp
fs
ljmp
dec
test
hlt
mov
sbb
jmp
and
ds
es
pop
es
mov
mov
pop
mov
movsb
pop
sub
sarb
insl
movsb
cmp
sbb
into
jo
pop
mov
push
cmp
les
jae
inc
sbb
sti
clc
mov
dec
sbb
in
imul
lea
xchg
out
mov
aam
inc
aad
sbb
sahf
lahf
dec
sahf
fwait
cmpsl
xor
fwait
inc
mov
nop
and
jecxz
cmp
xor
add
movsl
sbb
pop
fwait
popf
xor
scas
sub
sbb
xchg
mov
aam
int
sub
add
xor
fsubp
pop
data16
int
push
rorb
ja
push
jg
pop
push
mov
data16
fisubrs
and
and
sub
mov
rcrb
das
dec
lcall
mov
fildll
pop
and
ja
mov
xlat
inc
iret
cmc
fldl
or
mov
outsb
xor
push
shlb
jo
mov
mov
adc
test
in
dec
cmp
and
inc
dec
cmpsl
repz
adc
movq
mov
rclb
adc
popa
insb
mov
mov
xor
and
ud1
div
xchg
add
les
dec
lea
std
nop
out
test
push
ja
mov
lock
fisubs
daa
ds
mov
sbb
mov
dec
cltd
in
add
pop
pop
jo
fisubl
mov
sbb
popf
lods
lock
sbbb
lret
adcl
sbb
mov
sti
shlb
pop
mov
push
arpl
repnz
ret
xchg
push
dec
dec
loope
push
sahf
pop
les
jl
shll
popf
cmpsl
sbb
lods
mov
test
xor
jns
repnz
cld
sub
aaa
or
cmpsl
test
mov
daa
sub
push
cmp
push
rclb
mov
xor
insb
call
sub
sub
inc
pushf
imul
sub
adcb
out
push
pop
mov
scas
mov
sahf
mov
xchg
iret
jmp
mov
lods
jbe
pop
jbe
add
leave
xchg
or
mov
out
ss
push
pop
pop
data16
outsb
xchg
mov
pop
sub
inc
in
icebp
adc
mov
aad
insl
enter
cmp
jbe
out
mov
icebp
aad
xchg
sub
ud2
xor
mov
xchg
movsl
arpl
leave
imul
inc
mulb
iret
les
fwait
jae
mov
inc
out
mov
sub
test
mov
mov
jp
int
popa
in
and
add
divl
mov
shlb
arpl
aad
dec
or
out
push
adc
and
add
shll
jmp
popf
jecxz
subl
xor
repnz
xchg
mov
mov
je
sub
or
or
gs
mov
cmp
notl
mov
mov
pushf
jg
negb
or
adc
fxam
or
inc
leave
test
fisubl
dec
pop
jb
and
testl
cmp
stos
jmp
jl
and
pop
fistpl
adc
sub
dec
push
jge
or
inc
gs
and
pop
or
fnsave
cli
sti
ja
mov
or
sbb
addr16
shll
addr16
sbb
call
push
inc
push
iret
xor
rcr
ja
and
fcmovnb
cld
arpl
pop
push
rcr
fcomip
lock
mov
in
xchg
lret
js
aad
lret
xchg
xor
sub
mov
mov
dec
aaa
or
lea
xchg
xchg
sbb
mov
lods
inc
pop
nop
dec
pop
sbb
leave
lock
xchg
jle
mov
mov
in
cmpsl
jl
cmp
inc
cmp
call
inc
sbb
mov
mov
data16
pusha
lret
jge
cmp
push
into
out
pop
dec
cmp
push
push
add
jnp
jge
xorb
mov
inc
cli
hlt
ljmp
fstpl
lcall
cltd
mov
hlt
leave
std
cmpsl
and
xchg
mov
push
into
insl
pusha
jl
loop
jno
mov
xor
mov
mov
add
seto
data16
fisubrs
enter
das
push
in
jae
mov
sub
mov
xchg
in
sub
data16
out
adc
xchg
and
icebp
inc
lcall
dec
xchg
pop
out
add
pop
xor
jmp
shl
jae
fidivl
xchg
adc
and
cmpb
lret
jb
test
lods
imul
add
leave
outsl
imul
popf
push
or
dec
frstor
imul
test
jmp
pop
xchg
dec
fwait
arpl
xchg
fadd
mov
orl
or
lds
les
add
pop
out
sbb
sub
dec
rolb
jg
loop
cmpsl
and
cltd
test
cmp
dec
push
fadds
repnz
cmp
mov
jnp
repnz
cmp
pusha
sbb
or
jle
sbb
and
and
stos
cld
or
imul
out
mov
pusha
imul
mov
stc
mov
jl
jns
cmpsb
das
inc
ljmp
cmp
sbb
sub
sub
jb
sbb
rorb
add
std
adc
sub
pop
push
xor
jae
mov
lret
aaa
test
push
mov
pushaw
mov
ret
fcmovnbe
insl
xchg
sub
test
xlat
lock
dec
cmp
jns
and
xchg
bound
push
cltd
pop
test
in
loop
cmp
pop
pop
push
rclb
cmp
mov
aad
std
lods
fisttpl
pop
mov
aad
insl
sub
cmp
mov
loop
xor
notb
sub
jno
mov
push
inc
and
dec
push
dec
adcb
cmc
bound
cld
mov
out
adc
sti
sub
sarb
mov
out
aas
jae
aas
in
sar
inc
adc
jae
xchg
andl
lock
rclb
outsl
mov
lds
mov
mov
push
cli
mov
fmuls
fucomi
lcall
andb
dec
aas
movsl
jl
jecxz
into
xor
or
scas
mov
inc
add
mov
cmp
mov
xchg
sub
aad
fidivl
cmp
lea
add
sar
enter
in
lea
aas
mov
xchg
push
or
lahf
sbb
and
cld
mov
mov
ret
pop
mov
out
xchg
jnp
and
cltd
cmp
mov
inc
cld
enter
pushl
aam
popa
pop
pop
inc
add
xchg
cmp
inc
mov
xchg
cmc
cld
sti
or
or
fisubl
dec
cmpsb
mov
mov
aas
out
cld
in
push
shrb
shrb
mov
cmp
jbe
movsl
fcmovu
rclb
scas
dec
xor
adc
mov
mov
pop
outsl
mov
ret
les
movsb
ret
out
pop
push
imul
push
test
pop
push
xchg
loope
or
cmp
into
clc
sbb
inc
in
mov
push
out
jne
outsl
dec
mov
js
int
pusha
call
shrb
xor
repz
mov
mov
jg
dec
xor
dec
pop
daa
cmp
mov
xchg
fs
test
dec
push
mov
ss
inc
lahf
inc
adcl
lods
xchg
lea
icebp
addr16
cmp
mov
lret
or
jp
or
mov
mov
call
mov
jb
lock
arpl
test
pop
lea
sub
pop
rcrb
and
popf
pop
pop
arpl
sub
mov
inc
ficompl
arpl
daa
cmp
jge
lret
xor
shlb
gs
or
sbb
in
sub
sbb
bound
sbb
mov
dec
xchg
pop
adc
daa
in
pop
xor
rorl
out
fadd
stos
icebp
add
sub
dec
or
lock
push
jnp
inc
insb
cmp
jmp
sub
dec
insb
stos
cld
sub
rclb
out
mov
cmpsl
insl
mov
sub
loop
loope
jle,pn
shlb
xorl
mov
lea
loop
cmc
fwait
cs
cmp
imul
test
iret
inc
cmp
out
jle
mov
jg
nop
repz
mov
add
mov
imul
jecxz
pop
push
loopne
mov
xchg
fisttpll
mov
enter
test
dec
fwait
rcrb
jge
in
test
fisttps
pushf
push
aas
push
test
loop
leave
or
rcr
add
mov
je
fucomi
pop
and
jae
ret
add
test
cmp
pop
add
stc
out
aam
dec
rorl
pop
test
daa
in
dec
pushf
fwait
xor
arpl
out
pop
adc
imul
movsb
aam
add
loope
xor
dec
int3
cmp
mov
mov
or
popf
icebp
insl
in
pusha
into
test
sti
lcall
into
fisttpll
xchg
ss
sbb
nop
scas
push
lahf
stos
sbb
xchg
pop
cmpsl
std
and
int3
mov
test
movsb
nop
les
enter
mov
mov
imul
inc
test
xor
adc
jo
inc
push
aad
and
out
inc
out
or
cmp
aam
sbb
cmpsl
push
gs
jecxz
popa
sbb
or
daa
leave
lret
inc
rcl
pop
sbbl
sbb
dec
lcall
int3
fcoms
inc
inc
sub
pop
pop
clc
mov
push
lds
ror
mov
mov
jae
popa
dec
call
stos
fistl
in
xor
pop
cmp
sbb
in
ljmp
dec
push
pop
push
daa
xor
cmpsl
push
test
and
dec
leave
jge
mov
push
pop
divl
push
lcall
pushf
dec
xor
adc
xor
lcall
in
pop
imulb
mov
rcrb
stos
or
push
scas
xor
push
loope
pop
leave
aam
cltd
xlat
data16
or
cmp
iret
std
out
xchg
sarl
mov
cld
sub
sub
or
xor
adc
dec
mov
or
iret
jmp
push
pusha
int3
enter
dec
and
es
and
aad
sti
fldcw
test
jecxz
mov
sbb
xor
hlt
outsl
add
cmp
push
inc
xchg
add
jmp
xchg
lahf
lret
incl
and
in
xchg
shlb
jle
das
mull
sbb
jg
mov
insb
cmp
cmpl
jge
leave
in
fcoml
xor
sub
mov
sahf
imul
sub
pop
cmp
fnstcw
pop
stc
ljmp
les
lock
xor
enter
sti
scas
flds
inc
stos
icebp
mov
das
lcall
call
lods
call
xor
push
mov
pop
mov
mov
scas
fdivs
addr16
paddusb
sbb
cld
test
or
stos
insb
mov
cwtl
dec
cmp
sbb
movsb
cltd
clc
xor
fwait
xchg
sub
or
daa
mov
sbb
and
ljmp
and
jmp
and
xchg
ss
sahf
mov
addr16
dec
dec
test
push
cmp
andb
shrb
sbb
nop
out
dec
ljmp
push
pop
xchg
fwait
mov
ja
mov
cmpsb
in
xor
xor
pop
scas
shll
into
mov
adc
sbb
pop
test
pusha
xchg
jle
sbb
mov
stos
or
cmovle
adc
xchg
dec
insb
nop
jnp
jae
pop
dec
sub
in
xor
pop
mov
mov
lret
mov
push
mov
xor
adc
push
fldcw
pop
xchg
les
pop
in
scas
dec
inc
loop
push
inc
pop
fdivl
adc
sub
fldt
sarl
jecxz
push
sahf
push
adc
mov
dec
movsl
push
bound
jnp
mov
mov
jmp
call
or
pop
jb
rcrl
fnsave
mov
mov
mov
xchg
sub
push
ja
int3
sbb
add
insb
inc
lock
dec
sub
pop
jecxz
inc
mov
jno
xor
mov
das
bnd
dec
push
jne
ffree
pop
scas
loop
pushf
inc
and
aaa
je
push
jns
pop
mov
xor
dec
or
sti
js
xor
je
jle
xor
inc
fisubs
mov
push
sbb
imull
hlt
lahf
pop
cmp
scas
out
mov
jecxz
lds
jae
mov
push
test
cwtl
cmc
loope
pushl
out
adc
or
or
sub
shll
sub
addr16
adc
js
xchg
mov
icebp
mov
paddsw
jae
mov
call
xchg
inc
mov
inc
scas
sti
and
xlat
jb
in
aam
in
jbe
mov
pop
insl
scas
sub
sbb
negb
addr16
xor
stos
sbb
les
dec
xor
inc
push
sub
pop
push
hlt
test
dec
loope
andb
jbe
in
jns
shrl
imul
inc
push
and
in
pop
and
sbb
sub
xchg
stos
or
fmuls
ljmp
leave
xchg
jg
loop
test
fs
mov
adc
or
aam
int
pop
jg
popf
sbb
or
pop
mov
lret
inc
sbb
and
pop
fnstsw
xor
dec
adc
out
add
ja
popa
mov
mov
outsl
mov
cld
xor
outsb
lock
outsl
stc
sub
movl
dec
xor
mov
sti
subb
and
add
jmpw
pop
fisubrl
push
cmp
push
scas
mov
inc
dec
mov
loopne
scas
ret
mov
enter
inc
and
or
jnp
mov
mov
adc
cmp
imul
in
inc
aas
cmp
xor
mov
dec
insb
add
jl
mov
cmc
mov
push
les
push
mov
addr16
stos
movsl
jns
xor
mov
xor
shr
stc
stc
xchg
imul
stc
imul
lods
aad
pop
mov
xchg
pop
loope
into
push
jecxz
dec
jge
je
and
bound
mov
in
push
daa
push
mov
xchg
sub
jb
test
test
pop
shrl
out
aaa
daa
cmp
mov
or
dec
mov
mov
pop
call
mov
idivb
mov
outsb
cli
mov
imul
popf
sbbl
xor
std
call
dec
mov
add
ret
pmaddwd
push
lods
test
popa
loopne
jle
addl
imul
xchg
sub
push
test
or
cld
sbb
jp
clc
imul
ljmp
sub
add
iret
cmp
xchg
insb
leave
lahf
jp
ljmp
test
in
adc
inc
push
pop
pop
pop
jne
xchg
mov
bound
and
mov
negl
mov
cmp
adc
add
or
or
inc
scas
mov
imull
xor
fistpl
mov
addr16
fs
jne
mov
pop
dec
addl
lock
xor
cmp
dec
sub
loope
mov
in
shll
test
test
leave
inc
lds
push
mov
icebp
push
outsl
xchg
dec
jle
addr16
leave
sub
in
mov
jo
aaa
jo
jp
mov
jnp
nop
xchg
int
push
mov
into
lret
push
cmp
pop
adc
fldenv
push
sub
xor
push
nop
aad
pusha
pop
cmp
sub
daa
or
insb
ja
sbb
into
pop
and
push
mov
inc
dec
mov
nop
test
push
and
loope
xor
mov
inc
outsl
inc
dec
xor
mov
shll
lahf
mov
nop
sbb
mov
xchg
fdivr
or
popa
pop
xchg
call
jp
lahf
daa
sarl
jbe
popa
outsb
sub
int
gs
pop
push
and
jne
xor
jg
mov
mov
enter
xchg
je
aas
mov
mov
rorb
in
sbb
aad
dec
sub
negl
into
shrb
pushf
dec
call
dec
insl
lock
sub
shr
jp
cmp
loop
jle
inc
lcall
sahf
enter
mov
inc
loop
je
jmp
dec
adc
mov
xor
push
sub
das
inc
fisttpl
aas
out
ljmp
mov
or
inc
adc
test
fwait
push
dec
push
in
sub
fnsave
in
test
les
loopne
daa
ret
testl
lret
lods
push
js
inc
dec
xor
cmp
lret
jbe
mov
xchg
push
or
push
std
into
in
cmp
js
repz
adc
sub
imul
and
mov
jle
daa
push
lds
aaa
int
mov
sub
fsubl
cmpsl
and
mov
cli
fmulp
rorl
or
mov
push
adc
push
mov
jge
pop
cmp
mov
mov
loope
daa
sahf
andb
pop
cmp
mov
and
daa
mov
fistpl
xor
rorl
and
es
mov
mov
addr16
or
in
jb
rcr
ret
cmp
push
xchg
pop
popa
dec
add
fdivl
push
cmp
pop
and
cmp
stos
out
or
mov
aad
mov
incb
pop
or
xchg
gs
fmull
and
aad
repz
mov
add
icebp
lock
pop
xchg
mov
push
fisubrs
add
sub
adc
jmp
lcall
adc
lds
push
xchg
das
sbb
jp
xchg
jecxz
les
data16
mov
xchg
shrb
pop
jno
pop
push
cmp
xor
xchg
aam
cmpsl
aam
inc
push
jno
insl
dec
adc
mov
cmp
lods
stc
out
jo
push
aaa
xchg
push
xchg
cld
pusha
test
shrl
adc
aam
rcrb
ret
js
push
pop
iret
das
das
aad
popa
mov
stos
and
cmp
mov
fisttps
xor
sub
fwait
imul
mov
and
iret
push
cltd
pop
mov
subb
sbb
mov
sub
sbb
jg
inc
add
cmp
mov
sarb
jmp
test
add
insl
xchg
mov
adc
inc
outsl
xchg
cmp
inc
jmp
jo
sub
insb
ret
lea
xchg
mov
cmp
sbb
int
and
cli
adc
stos
sahf
loope
mov
mov
enter
negl
outsl
aas
clc
jno
push
push
dec
xor
cwtl
mov
insl
sub
mov
jge
cmc
gs
into
mov
adc
in
in
cmp
jle
je
je
jo
outsl
dec
jl
jmp
inc
sti
adc
jle
xchg
mov
mov
jge
scas
adc
test
lcall
testl
xchg
and
idiv
clc
push
jg
xchg
and
lea
sar
adc
aaa
ss
jecxz
ret
push
cmp
sbb
popf
into
enter
insb
push
mov
fsubrp
xchg
icebp
fcomi
loop
add
adc
pop
dec
mov
shrb
daa
mov
dec
jne
inc
xchg
push
arpl
inc
push
push
and
mov
pop
sbb
popf
adc
push
inc
and
popa
out
insl
mov
mov
stos
lret
cmp
into
movsl
add
lock
cltd
mov
cs
aaa
adc
or
arpl
xchg
dec
in
fwait
ja
push
dec
fs
cli
ret
or
jl
enter
or
in
stos
mov
movsb
push
adc
mov
cmp
inc
xor
mov
ljmp
add
jnp
or
sahf
pop
mov
iret
aad
jle
sub
inc
jne
testl
sarb
imul
repnz
ret
push
mov
mov
call
aam
imull
ja
scas
enter
cmp
fs
pusha
dec
jne
xchg
cmp
mov
dec
cltd
add
shrb
icebp
test
arpl
pop
popl
pusha
int3
sbb
ja
dec
dec
test
sbb
pop
and
into
mov
pop
dec
adc
les
fidivl
or
sub
clc
xchg
rol
test
gs
mov
and
daa
dec
push
fmulp
pop
mov
mov
sahf
dec
push
mov
out
nop
popf
mov
rclb
gs
add
add
cmp
pop
clc
jp
jae
out
mov
out
aas
fisubrs
inc
inc
dec
data16
ljmp
adc
mov
iret
in
stos
xchg
cmp
xchg
inc
scas
add
aaa
pop
lcall
mov
aas
jb
out
push
stos
pcmpeqd
cmp
sbb
shlb
fwait
sbb
idivb
mov
jb
jbe
out
inc
push
enter
lahf
push
por
adc
mov
cmpsl
push
pop
inc
fnsave
outsb
jno
jecxz
out
mov
js
popa
push
cmp
adc
xor
aas
stos
xor
ds
jb
jb
out
mov
aad
arpl
cmpsb
and
adc
xchg
inc
rorb
mov
or
inc
lods
mov
sub
adc
loop
push
mov
push
mov
stc
and
cmp
lods
dec
jle
jle
jg
pop
inc
sub
aad
cld
addr16
cmp
cmp
cmp
fidivrs
test
sub
adc
scas
dec
add
clc
incl
outsb
sub
test
das
inc
push
popl
jmp
push
pushw
leave
jge
ss
dec
or
lock
pshufw
loopne
fadds
jg
sahf
movb
xchg
add
jp
add
lods
dec
push
sub
cmp
enter
xchg
sbb
addr16
inc
lret
and
lods
mov
shl
loop
stos
aaa
push
fistl
out
sub
inc
jns
movsb
jno
movsl
mov
push
sub
pop
orb
cmpl
inc
sub
cli
add
fldl
mov
mov
or
xor
xchg
rcr
sahf
data16
ret
stos
sub
cmp
sbb
fidivrl
mov
and
cmp
push
movsl
outsb
jns
mov
xchg
cltd
icebp
mov
ds
mov
cld
cmp
test
fs
clc
dec
popf
sbb
xor
test
jmp
stos
mov
mov
je
push
push
pop
fsubr
sbb
stos
mov
cmp
in
adc
cmpsb
in
repz
cmp
in
aaa
push
mov
dec
xchg
jecxz
hlt
arpl
aam
xchg
xchg
push
xchg
std
je
xchg
mov
sti
lea
lods
int3
dec
lods
ds
inc
mov
jb
jge
pop
lahf
jg
jg
push
insb
push
push
movsb
push
jg
xor
sahf
lods
repnz
stos
mov
jge
loop
pushf
in
mov
sub
test
les
push
pop
add
fidivl
movsb
add
lods
push
cmpsb
xchg
adcl
cmpsl
or
js
pop
stc
rorl
stc
pop
dec
mov
push
lds
mov
mov
or
repz
xchg
mov
std
test
lods
jmp
mov
jnp
aam
push
lret
xchg
inc
decl
movsb
push
hlt
pop
cmp
test
push
mov
comiss
popa
cmp
aaa
sub
adc
push
xorl
or
mov
adc
lahf
test
jnp
mov
mov
cmpsb
hlt
or
mov
jmp
pop
sarb
fdivr
test
jg
insl
mov
scas
xchg
inc
ljmp
cltd
dec
jle
fstl
nop
fwait
xor
mov
jns
sub
mov
movsb
adc
aad
rcrl
mov
lea
mov
stos
cwtl
cmc
pop
test
xor
daa
lret
test
and
mov
and
mov
negl
gs
repnz
xor
and
std
jbe
lea
pop
and
std
rcll
mov
insl
cmp
test
lods
and
fwait
mov
leave
cmp
stos
mov
lods
add
je
daa
xlat
adc
fdivs
into
std
into
inc
iret
mov
lods
addb
gs
sub
adc
jmp
arpl
and
mov
pop
les
xor
mov
popa
movsl
hlt
dec
add
add
scas
mov
in
data16
mov
int
addr16
popa
enter
in
adc
lret
jg
cmp
call
sub
and
lods
pop
cli
mov
sbb
out
push
or
idivl
ljmp
dec
in
jno
jmp
or
mov
mov
lea
push
ljmp
movsl
in
mov
sarl
std
xlat
rolb
out
xorps
stos
data16
xchg
mov
mov
and
mov
sbb
jl
push
pop
cmp
lret
dec
out
cmpsb
aam
jns
xor
fsubs
mov
jne
test
lea
pop
imul
adc
push
jg
in
inc
pop
int3
and
clc
out
scas
je
arpl
stos
sbb
jmp
mov
aas
pushf
sti
cs
stos
xchg
jb
repz
jle
mov
js
mov
movsl
sbb
loopne
cmp
xchg
mov
lods
jg
jo
popa
aam
ja
cwtl
pop
jns
repz
push
inc
lcall
pop
jle
adc
lahf
push
pop
ja
std
lds
pushf
gs
imul
mov
lock
jne,pt
xchg
cmpsb
inc
xor
aad
sbb
xchg
out
mov
jae
popa
es
rorb
sbb
sbb
inc
orl
out
adc
stos
xor
popa
test
sub
pop
mov
jle
lock
pop
jns
shrb
inc
dec
movl
sbb
push
in
mov
adc
divl
mov
adc
push
mov
sahf
and
jns
mov
mov
or
mov
cltd
sub
loope
cmp
or
lret
ds
dec
popf
fldt
jo
sub
inc
and
stos
or
and
xor
mov
sub
repz
jecxz
stos
sub
in
cmp
xchg
jno
cmp
testb
xor
jns
push
inc
sarl
xchg
minps
jge
pop
inc
ss
mov
cmpsb
stc
enter
mov
repz
negb
clc
push
jmp
fcmovnb
lret
mov
out
cmpsl
mov
inc
scas
push
outsl
ret
fstpl
imul
pop
call
lock
and
sub
scas
push
call
hlt
subl
lea
sub
int
xchg
hlt
frstor
mov
into
pop
scas
out
xchg
cmp
adc
scas
out
mov
popf
cmp
jg
fsqrt
mov
sti
iret
std
pusha
xchg
push
cmp
aaa
inc
inc
aad
push
ret
push
sub
xchg
sbb
add
popf
cmp
int
loope
mov
xchg
sub
lcall
in
add
stos
push
sub
les
sbb
cmpsl
icebp
mov
imul
jo
repz
jnp
insl
pop
sub
mov
inc
sahf
mov
into
lds
push
xor
push
lds
popf
in
je
jns
xorb
push
test
xchg
out
or
xlat
jge
mov
xlat
lahf
mov
inc
addr16
stos
sarb
pop
lods
orl
sub
popa
add
movl
mov
xchg
lea
dec
ret
out
aaa
mov
enter
add
xchg
fimuls
pop
sbb
insl
xor
lods
pop
xor
push
mov
push
adc
enter
push
in
cmp
popl
movsl
test
out
test
mov
push
out
lret
push
loop
xchg
lret
out
cmp
mov
push
outsb
mov
or
jle
xlat
and
push
push
sbb
xchg
lcall
arpl
pushf
sbb
into
sbb
pushf
sbb
ss
pop
mov
lcall
std
dec
mov
repnz
bound
out
mov
adc
pop
enter
dec
es
xor
ljmp
dec
sarl
jae
sub
in
pusha
and
or
push
xchg
sbb
ljmp
mov
pop
jg
push
pushf
xor
in
pop
and
sarb
dec
clc
dec
pop
push
iret
test
fsts
pop
cmp
mov
leave
sahf
pop
add
int
push
rcll
push
cmp
mov
pushf
ficoms
cmp
xor
cmp
daa
xchg
outsb
and
sub
mov
xorl
and
mov
and
mov
rclb
jge
repz
xchg
in
mov
sbb
mov
div
add
jmp
pop
fimuls
sub
sbb
dec
dec
mov
dec
xchg
lret
dec
lds
pop
outsb
lahf
sub
adc
or
jmp
sub
cmp
inc
scas
and
cmp
push
cld
stc
je
test
pop
sub
inc
push
sbb
fdivrs
lock
rdpmc
cmpsl
hlt
pop
fmul
or
insb
cli
fildl
mov
in
jg
repnz
push
outsl
out
lcall
loopne
and
jb
out
jne
jb
xchg
jl
pop
cltd
test
fnstsw
fists
popl
pop
js
sub
sbb
jnp
inc
mov
mov
and
fs
push
test
cltd
rcpps
cmpl
test
imul
mov
out
cmp
jecxz
int
mov
add
xchg
mov
mov
push
push
push
movsl
pop
jno
lds
sub
and
sbb
pop
fdivp
mov
mov
les
cli
icebp
aam
sub
stos
outsl
cmp
add
add
stc
xchg
pop
add
jbe
inc
pop
lods
les
lods
sub
mov
xchg
push
test
not
out
mov
sub
popa
fcmove
lods
in
hlt
mov
out
mov
push
sbb
pop
scas
jg
movsb
pushf
iret
xchg
xchg
push
push
mov
rcr
xchg
inc
mov
mov
push
imul
bound
dec
leave
fwait
movsl
insl
das
imul
lea
enter
pop
xchg
cmp
sub
xchg
les
cmp
outsb
inc
leave
add
dec
cmp
and
je
imul
sub
fadd
inc
idivb
aam
mov
in
out
xchg
push
sub
sbb
ljmp
mov
popf
lds
lret
cld
cmp
add
mov
lods
pusha
xor
fcmovbe
repnz
cwtl
popf
ja
and
orl
dec
pop
mov
jle
add
jo
arpl
pop
sub
jo
ljmp
fstps
jecxz
arpl
mov
leave
add
aas
push
sbb
sub
dec
fcmovnb
es
xchg
pop
pushf
pop
mov
add
sbb
mov
jne
gs
movsl
popa
mov
or
jns
js
cmp
mov
sti
mov
jb
outsl
jno
push
mov
mov
test
fwait
pushf
xor
test
cmp
fs
xor
and
rorl
jb
cld
int3
cltd
jo
outsl
mov
inc
or
flds
push
mov
std
inc
in
in
lds
sub
jp
lret
cmp
rcrl
xor
sbb
in
xchg
andl
imull
push
inc
mov
adc
decl
push
outsl
sub
movsl
out
lds
call
xor
repz
mov
dec
xorb
jle
sbb
andl
outsl
jbe
test
fsubp
out
sbb
xchg
movsb
ja
scas
xchg
fwait
mov
out
jle
lret
int
out
jecxz
sub
and
sti
pop
adc
adc
sbb
out
in
decb
adc
in
push
ret
cmpsb
ja
inc
shll
repnz
adc
pusha
test
mov
and
add
les
jl
clc
lods
push
xchg
sbb
arpl
xchg
dec
test
data16
inc
push
or
fwait
test
jne
pop
mov
cld
imulb
adc
leave
addr16
lods
fs
ja
lods
call
mov
das
aas
jl
or
into
insb
stos
push
test
push
lds
lahf
xchg
jbe
outsb
push
sub
out
jle
scas
test
jmp
popa
repz
cmp
aas
stos
popf
rolb
jle
or
ja
repz
insl
jp
in
sub
pop
addb
int3
popf
out
ret
push
mov
lods
push
inc
xchg
aam
pushf
dec
pop
lret
adc
loop
add
mov
sbb
add
lods
lds
repz
ret
fadds
orl
out
sti
jns
insl
xchg
insl
sub
xchg
je
test
lcall
sbb
dec
cmpsb
push
or
call
cwtl
dec
jl
ss
inc
repz
mov
shlb
xor
jp
push
cwtl
xor
inc
push
mov
mov
jl
pop
and
aam
jno
sbb
inc
mov
outsl
mov
and
or
idivl
aaa
jl
enter
inc
mov
and
cmp
fwait
pop
inc
lahf
xor
pushf
das
sbb
cmp
aad
or
and
bound
add
mov
cmp
scas
push
mov
roll
imull
inc
cmp
testl
in
std
fcom
dec
das
mov
test
inc
cwtl
sub
cmp
push
pop
in
pop
loop
mov
jge
adc
jle
mov
sub
dec
call
fldl
aad
cmp
adcb
jbe
arpl
fidivrl
dec
xor
cmp
cmp
cmp
cmp
pop
cmp
mov
clc
jns
push
rcll
dec
dec
loope
mov
mov
pop
ljmp
mov
jae
add
cmp
ficompl
sub
les
dec
adc
fldenv
mov
adc
insl
xor
and
push
ror
lods
pop
mov
bound
outsl
mov
repz
fcompl
fmuls
or
jnp
test
jge
cmp
test
shrb
push
clc
push
cmp
call
out
adc
mov
jmp
lahf
cltd
lds
pop
inc
add
aas
xchg
imul
lea
das
pop
data16
fnstenv
xor
mov
sub
js
push
mov
sub
ljmp
shlb
ljmp
pop
push
jg
pop
cli
bts
int3
mov
or
sub
ss
bound
xor
lods
in
out
cltd
aad
jg
loope
call
gs
mov
sub
pop
cmpsb
mov
aaa
pop
mov
push
lock
add
or
iret
sub
data16
test
stos
out
jae
shrb
mov
pop
stos
push
pop
fwait
inc
ljmp
xchg
lcall
inc
in
xor
push
mov
int3
add
inc
roll
sbb
mov
rorl
jl
orb
xor
adc
add
jl
lea
repnz
cmp
mov
jge
pusha
dec
sbb
js
dec
lcallw
repz
stc
mov
aad
enter
lret
mov
inc
mov
cmp
push
push
ds
xor
cli
inc
cltd
pop
mov
lret
add
adc
jb
xchg
lods
icebp
les
lods
mov
push
inc
push
dec
mov
ja
loopne
sub
dec
leave
fiadds
xchg
pop
inc
sbb
call
lock
pop
xchg
cmp
jl
aaa
jg
std
xor
xorb
lods
scas
pop
dec
sub
cmpsb
fnsave
add
xlat
mov
imul
pushf
xor
and
andb
int3
nop
mov
mov
sarl
out
cli
push
cld
aaa
mov
pop
lahf
loopne
push
ret
repnz
test
jnp
cmp
cltd
sub
popa
push
divb
sub
out
inc
pop
sti
lret
std
push
gs
mov
or
cmp
out
lock
jmp
out
or
loop
sbb
mov
gs
fdivr
lcall
dec
in
push
mov
push
push
pop
push
jecxz
jae
scas
enter
clc
ret
aad
imul
sub
out
scas
inc
xchg
sarl
xchg
data16
ljmp
push
mov
out
dec
fucomp
in
movsb
pop
jo
sahf
mov
mov
cmp
dec
sti
aam
addr16
dec
sahf
cmpsl
imul
push
pop
mov
and
or
in
loope
push
mov
aaa
push
lods
bound
mov
jo
leave
fisubrs
mov
xchg
dec
jo
rorl
aad
andb
push
push
shlb
scas
and
cli
add
test
data16
mov
leave
insl
inc
mov
fsubs
lret
cltd
jl
cmp
enter
adc
lahf
insl
in
add
lock
lock
sub
rcl
out
adc
stc
into
pop
lods
inc
pushf
ss
fcmovbe
repz
imul
stos
subl
addr16
or
add
lahf
xor
pop
cltd
ljmp
inc
xchg
enter
scas
testl
shl
inc
scas
adc
jge
xor
cmp
test
hlt
xor
xor
adc
cmp
adc
gs
ss
repnz
sub
gs
in
clc
push
shrb
inc
roll
pop
pop
lret
xchg
cli
lock
test
mov
sbb
and
andb
dec
inc
and
cmp
pop
jnp
add
hlt
pop
fs
mov
dec
rol
cmp
inc
cmc
dec
scas
call
sub
cmp
mov
int3
stos
mov
int3
sbb
outsb
xor
roll
popa
sub
cmp
arpl
insb
std
jle
adc
sub
movsl
xor
push
dec
fisttpl
dec
mov
sahf
enter
xchg
inc
xorl
movsb
push
xor
iret
jo
aad
arpl
adc
aam
ror
test
stos
out
out
cltd
in
sbb
or
mov
sbb
jmp
cmpsl
xor
xchg
pushf
aam
jecxz
test
pop
repz
cmpsb
mov
jge
mov
jmp
bound
xor
pop
js
push
sbbb
rclb
sub
hlt
dec
xchg
or
les
pop
xchg
adc
cltd
push
cmp
xchg
das
mov
mov
xor
jno
inc
daa
lcall
das
dec
rolb
mov
sahf
ja
in
daa
fldt
or
test
and
mov
js
sub
fsubs
in
in
push
insl
or
pushf
mov
sbbb
fucomp
sub
loopne
and
lds
pop
adc
mov
pop
ret
movsb
in
cmp
push
mov
adc
gs
hlt
sbb
push
outsl
mov
mov
int3
in
inc
jo
fwait
push
mov
push
xor
xor
shrb
sbb
pop
fadd
lock
pop
enter
jle
xchg
xorb
daa
push
mov
lods
xchg
test
mov
sbb
push
cmc
pop
xchg
mov
cwtl
in
cwtl
dec
fwait
jge
cld
repnz
daa
scas
jg
mov
add
pop
sbb
cmp
xlat
jns
xchg
test
call
adc
pop
fists
int
cltd
dec
dec
enter
push
movsb
ljmp
lods
aas
sbb
mov
push
xchg
scas
add
and
inc
sbb
pop
rcll
fwait
dec
ret
fisttpl
out
mov
lds
pop
push
lods
out
mov
dec
adc
sub
dec
shr
jge
int
loopne
lea
cmp
and
cmp
out
inc
jae
mov
enter
rclb
stc
pop
es
pop
sbb
lret
adc
std
sub
and
mov
pop
inc
into
outsb
sahf
aas
adc
push
lods
test
repz
sbb
cli
xchg
add
outsl
mov
adc
or
and
int
dec
out
cmp
dec
push
fildll
ret
pop
cmp
ret
outsb
xchg
jg
jbe
cmp
mov
inc
clc
and
jecxz
jbe
cmc
or
aad
test
add
mov
shlb
mov
jns
mov
cmp
nop
sub
cmp
jg
pop
lea
stos
xor
mov
mov
fcmove
mov
inc
pop
outsl
dec
pop
stc
nop
mov
out
xor
nop
adc
lods
push
xor
lret
rclb
sti
out
push
arpl
popa
mov
xor
push
add
mov
xor
inc
xchg
dec
mov
daa
mov
push
shrl
adc
lock
jnp
fsts
lea
add
dec
xchg
xchg
or
push
mov
push
sbb
mov
stc
sbb
sbb
or
mov
xchg
cmp
out
mov
and
cli
je
push
leave
lcall
pushf
out
lods
iret
ret
pop
or
mov
cwtl
xor
dec
mov
xchg
dec
lds
push
pop
xor
push
test
jg
fcoms
and
out
lds
sub
dec
mov
sub
xchg
lret
aam
leave
lahf
pop
mov
xlat
mov
gs
mov
gs
cmp
movb
xorl
mov
pusha
iret
ror
ret
pop
jnp
dec
aad
movsb
dec
out
popf
mov
push
cltd
fdivr
dec
jmp
pop
outsl
scas
adc
push
sbb
xor
sub
mov
loop
jno
repz
fs
sbb
mov
lret
or
arpl
push
inc
leave
ds
mov
insb
xchg
lahf
jno
daa
dec
mov
jecxz
jp
aas
outsb
jg
pop
push
ret
out
lds
mov
push
xchg
decb
pop
outsb
sbb
push
sbb
bound
movsl
mov
dec
scas
aas
rolb
int
ljmp
xchg
jae
push
mov
cmp
out
inc
notb
push
lret
cwtl
cld
out
mov
out
leave
and
add
pop
inc
mov
adc
add
xchg
jno
xchg
inc
lods
arpl
enter
sbb
adc
lods
sahf
jg
test
pop
ret
popf
stos
jg
jne
sub
mov
dec
bound
hlt
aad
and
inc
addl
test
loope
cmpsl
sub
jge
in
test
andl
out
jmp
fists
push
dec
lds
mov
inc
das
jg
pop
xor
sub
pop
loopne
mov
imul
push
fadd
paddw
in
ljmp
pusha
das
cltd
bound
xchg
sub
idivl
mov
jecxz
js
fwait
bound
insb
aas
xor
jge
sub
sub
stos
incl
dec
imul
sti
arpl
xchg
jae
cmc
jecxz
lretw
mov
mov
mov
push
adc
inc
cmp
cmpl
mov
out
mov
dec
jno
call
mov
lock
push
and
das
jg
pop
fs
aad
and
push
and
icebp
push
jno
stos
mov
daa
mov
shll
jl
addr16
adc
repnz
pop
aam
mull
jo
jb
mov
fildll
add
cmp
adc
ds
aad
test
mov
insb
movsl
stos
repnz
ja
std
or
movsb
adc
shrb
cltd
sub
in
adc
aad
or
cmpsl
into
fistpl
pextrw
mov
fidivl
gs
fnstenv
test
cld
mov
sub
sbb
push
push
cmpsb
cmp
int3
lock
add
cltd
gs
cwtl
inc
adc
mov
iret
lods
lahf
mov
mov
imul
pop
mov
ds
out
sbb
push
sub
je
fcmovu
scas
cmp
in
or
dec
testb
add
arpl
ss
mov
sbb
aad
pop
inc
mov
push
popa
stc
in
rcrb
push
ret
mov
and
cmp
jmp
xchg
lds
cli
out
insl
incl
dec
out
mov
repnz
pop
repz
inc
mov
test
pop
lcall
pop
xorb
pop
iret
mov
ret
jno
movsl
sub
leave
cwtl
pop
out
mov
mov
dec
push
push
leave
aaa
inc
orb
scas
fnsave
jge
mov
enter
cmp
mov
pop
push
insb
sahf
xchg
shll
mov
int3
mov
inc
addr16
testl
mov
adc
std
push
fistpl
pop
popa
pop
cmp
push
imul
pop
shrd
cmp
ret
les
jnp
jp
pop
out
leave
loope
dec
jecxz
outsb
push
bound
int3
sbb
inc
push
add
cmp
aaa
xor
int3
mov
cmpsb
cmpsb
xor
mov
aas
dec
int3
mov
test
dec
sub
scas
pop
adc
into
lock
jmp
pop
pop
fcompl
das
ret
out
cs
je
shr
outsl
gs
icebp
imul
inc
popa
movsl
stc
in
jmp
aad
test
call
not
testb
aad
cli
dec
and
mov
in
dec
inc
sub
push
movsl
inc
les
and
std
inc
out
xchg
out
lahf
jne
cmp
xchg
insb
dec
shlb
test
mov
adc
mov
cmp
mov
sbbb
daa
pop
cli
xor
out
add
cmpl
ffree
mov
outsb
dec
mov
push
sbb
shll
mov
sbb
sti
ficoms
je
xor
add
testl
lds
lods
add
mov
cmp
enter
jbe
push
push
cmp
mov
pop
paddq
enter
aad
aas
repnz
jg
push
sti
mov
jmp
ja,pn
test
jmp
pop
jmp
xchg
mov
adc
imul
pusha
bound
push
or
sbb
cli
std
nop
arpl
xchg
sbb
pushf
jg
in
test
or
mov
pusha
jns
add
dec
and
sbb
xor
add
popa
push
and
idiv
out
lret
xor
or
xchg
mov
xacquire
ja
xor
mov
cmc
mov
xchg
dec
cmp
loop
filds
cmp
dec
or
xchg
movsb
outsb
pop
das
mov
xor
negb
fsubrs
ja
or
js
pop
inc
jg
mov
scas
jb
out
stos
repnz
pop
hlt
adc
gs
test
aaa
jp
push
jge
lea
jbe
sbb
popf
lret
xchg
mov
pop
push
adc
fwait
lods
add
icebp
jae
int3
dec
jns
loope
mov
test
mov
movsl
lock
loopne
stos
dec
bound
xchg
sbb
and
xor
push
cmpb
cmp
cmpsb
flds
or
je
add
clc
es
xor
icebp
and
nop
adc
mov
movsb
jl
xlat
mov
adc
cs
and
bound
cmp
daa
cmp
jo
mov
xor
idiv
and
cmp
jns
cmp
mov
add
fwait
inc
dec
dec
and
dec
lods
iret
shll
sub
lret
inc
sub
call
hlt
mov
pop
test
cld
mov
sub
and
mov
mov
mov
popf
rorb
aad
mov
cmpb
lock
ud1
jno
mov
add
jp
int
lcall
jecxz
movl
cmp
movsb
je
rol
aam
jbe
mov
pop
int
add
mov
jg
xchg
inc
pop
aaa
insb
sbb
nop
pop
mov
push
fwait
sbb
sub
mov
outsl
rorb
aas
movsl
mov
lahf
loop
rclb
push
shrb
mov
je
negl
jnp
movsl
ja
int3
sub
dec
je
push
test
sbb
into
sbb
pop
pop
fnstcw
out
and
or
imul
cmovns
shrl
std
sbb
in
xor
rcrl
lock
jb
popa
in
out
jbe
fdivl
mov
in
mov
push
xor
push
movsb
jge
xchg
out
and
jnp
insl
popf
sub
ljmp
adc
xor
cli
xor
pop
cwtl
dec
cmp
lock
xchg
clc
push
pop
xor
mov
inc
pop
sub
adc
addr16
mov
dec
cmpsl
icebp
xchg
adc
mov
mov
pop
xchg
cli
icebp
movsl
or
addl
cmp
pop
test
pop
cmovs
xchg
lret
dec
lods
test
sub
pop
cmc
mul
xchg
roll
sbb
push
hlt
lock
arpl
sub
sbb
sub
es
mov
lret
je
lds
cli
cmp
repnz
sub
xorl
js
sbbl
add
pop
mov
sub
ret
andb
xchg
fldenv
data16
in
and
enter
xchg
dec
call
adc
xor
out
cs
ror
inc
cltd
mov
repnz
mov
mov
lds
sub
movsl
mov
xchg
pop
pusha
pop
pop
dec
sub
scas
insb
ds
ljmp
dec
int3
fmull
jo
pop
adc
push
dec
push
add
or
sbb
dec
rcrl
sbb
xchg
int3
add
push
inc
sub
cli
int
xchg
mov
sbb
pop
cltd
shrl
pop
into
xchg
xchg
and
popf
aam
mov
gs
jmp
ss
mov
jnp
fwait
mov
pop
xor
jecxz
lahf
xchg
dec
inc
and
cld
ret
push
jecxz
ror
sbb
clc
xchg
xor
jb
mov
xor
mov
push
aam
aas
je
inc
mov
mov
sub
ds
aad
aam
inc
sbb
ljmp
sbb
imul
pushl
dec
pop
sahf
pop
sarb
fmul
dec
jge
mov
sub
mov
sub
fisubrl
pop
mov
and
xchg
inc
loop
sub
mov
lahf
and
lret
sub
pop
push
imulb
xor
bswap
push
add
ja
mov
repnz
cmp
dec
jl
xor
cmp
xchg
mov
dec
mov
cmpsb
dec
idivl
push
push
stos
inc
repz
test
cmpsb
adc
xchg
aas
sbb
mov
std
mul
aas
sti
cmpsb
fs
sub
mov
pushf
arpl
push
and
dec
or
jnp
dec
push
jle
or
mov
mov
lret
mov
pop
add
pop
mov
arpl
sbb
dec
push
enter
pop
mov
fsub
mov
lahf
ds
sub
out
lret
aad
fisubl
mov
cltd
mov
das
cmp
mov
push
inc
ret
xor
bound
rolb
pop
lods
push
mov
jae
or
test
and
sbb
and
int3
addr16
into
mov
mov
test
bound
sbb
sbb
push
cli
iret
rol
add
imul
pop
xchg
add
imul
push
sti
cld
or
lcall
jp
je
arpl
push
xchg
repnz
loope
mov
or
lcall
xor
lcall
lock
shlb
mov
jae
fnsave
mov
jae
xlat
dec
jge
data16
mov
sti
lds
les
popf
xor
das
xor
push
in
negb
xor
pusha
sti
rorb
cmp
int3
mov
fs
mov
or
test
adc
enter
shl
xchg
push
mov
rcl
cmc
pop
jle
cmp
pop
pop
push
popa
test
sarl
lock
mov
xchg
and
push
cmpsb
outsb
jecxz
mov
adcb
pop
mov
test
mov
jle
sbb
jge
dec
sbb
fisttpll
mov
xchg
pop
dec
mov
cmp
mov
push
out
push
clts
push
jns
jb
ljmp
dec
movsl
xlat
test
pop
mov
ss
movsb
push
cld
sub
insl
jns
add
push
test
mov
sub
hlt
sahf
mov
jo
mov
out
test
inc
mov
loope
sub
ja
mov
pop
or
cmp
cmp
ss
in
xchg
mov
repnz
mov
lea
stos
pusha
jo
pop
sbb
and
adc
pop
rorl
add
and
jno
cwtl
xchg
stos
mov
pop
addr16
xor
sub
shrl
scas
mov
or
insl
cmp
cmpsb
aam
pop
pusha
lcall
negl
in
xor
pop
divb
adc
int
scas
xor
out
sarl
mov
add
xchg
pop
xchg
xchg
lods
adc
sti
cmp
sub
shll
push
mov
push
into
stos
jmp
mov
xlat
loop
call
push
dec
int
inc
xchg
sbb
xor
iret
dec
out
jp
add
stc
dec
movsb
push
int3
push
int
jp
pop
daa
mov
xor
xchg
popf
je
push
outsl
sub
fistl
rcll
or
gs
sub
mov
or
sub
and
mov
cltd
mov
adc
pusha
ds
adc
adc
sbb
xchg
pushf
dec
hlt
jle
aas
pop
aad
add
dec
faddl
xor
fisubl
movsl
lahf
addb
cmpsl
pop
pop
sbb
std
bound
test
sahf
inc
sbb
repz
mov
mov
loop
adc
sub
mov
shll
pop
icebp
aad
xchg
lods
imul
jg
xchg
pop
dec
mov
mov
jmp
gs
jp
test
jno
stos
jecxz
dec
insl
cmp
dec
xlat
and
and
xchg
inc
xor
cmp
jns
jge
push
imulb
fstpl
pop
clc
inc
jne
mov
or
movsb
ljmp
ja
in
cmp
mov
mov
les
mov
or
ja
lcall
mov
clc
push
or
out
cmp
cmp
sahf
push
adcb
xchg
add
call
popa
popf
es
stos
or
sub
repnz
test
sbb
push
test
enter
sbbb
cmp
sbb
rcll
loope
jecxz
sahf
jae
mov
incl
cmp
out
cwtl
or
popa
outsb
leave
arpl
cmp
aas
cmp
mov
push
push
jecxz
mov
mov
cmp
shl
mov
pop
lock
pop
pop
fwait
pusha
xor
movsl
pop
adc
or
in
arpl
push
sub
cli
fdivr
test
mov
dec
add
sub
insb
xlat
jmp
out
leave
and
dec
fsubrp
sub
scas
stc
push
push
mov
pushf
cmp
add
xor
daa
imul
out
inc
mov
lock
ss
pop
mov
or
fwait
jae
jge
adc
push
ljmp
pop
sbb
test
movsb
xor
xchg
sbb
cmp
aad
loop
sbb
push
jo
and
fdivl
jae
jb
aad
xchg
xchg
push
imul
pop
jbe
lea
les
mov
add
or
cld
test
jnp
ret
sbb
and
and
cld
fstpl
sub
cs
lahf
fsts
lds
lret
add
sbb
lods
lods
mov
mov
or
xchg
movsl
inc
xchg
fisubl
sar
movsb
fidivs
xchg
xlat
loope
mov
ret
xor
mov
lahf
cmpsl
mov
pop
aad
out
sbb
cmp
fcomps
and
mov
lret
iret
rclb
sub
mov
in
test
and
stos
dec
xchg
mov
adc
push
outsl
cmovnp
sti
fidivrs
mov
repnz
dec
cmp
aam
push
mov
cmpb
stc
das
add
mov
cld
imul
out
mov
test
adcb
mov
iret
leave
sbb
inc
pop
inc
nop
ret
jmp
cmp
ja
aad
cmp
adc
push
subb
push
scas
cmpb
cmpsb
ror
addr16
sbb
dec
and
hlt
loop
lahf
mov
xor
cmp
outsb
sbb
pusha
sub
ss
mov
xchg
pop
mov
xor
cmp
pusha
cmpsb
int3
stc
jp
add
stos
xor
test
xor
xor
cmp
pop
or
jns
movsb
jae
cmp
aas
lods
in
sub
shlb
and
repz
shl
inc
cmp
mov
out
cmpsb
push
loopne
out
in
dec
fdivs
mov
mov
data16
dec
push
sti
flds
out
out
push
sbb
dec
out
cmpsl
cmpsl
push
push
ret
mov
xor
push
inc
loop
pop
mov
fidivl
out
xor
imul
dec
jno
cmp
std
dec
xorl
inc
and
cmc
in
fistpll
test
out
fisttpl
popa
pop
ss
sbb
imul
push
andb
jp
jns
dec
mov
out
cld
xor
repnz
jno
sub
or
fisubs
mov
inc
sbb
mov
sub
adc
js
jb
clc
hlt
jb
xchg
mov
sub
cmpsl
lods
sbb
dec
jae
jae
sub
sbb
cmp
addr16
aad
inc
out
mov
cmpsb
mov
cs
xor
push
insb
scas
cli
xor
jecxz
push
fldl
mov
out
sub
pusha
imul
test
loopne
mov
lds
leave
dec
mov
inc
test
sbb
setg
mov
lahf
les
jle
mov
pop
and
add
mov
cmp
nop
dec
adc
xchg
fs
movsl
sub
mov
je
adc
outsb
lret
cltd
lcall
adc
je
test
lea
int
or
popf
repnz
ds
out
mov
and
ss
jmp
popf
adc
ret
or
pushf
out
or
xchg
sub
pop
imul
sbb
lods
mov
mov
icebp
cmp
dec
push
outsl
mov
sti
inc
pop
and
inc
cltd
lock
gs
movsl
mov
clc
sbb
xchg
pop
aaa
mov
and
cwtl
dec
iret
push
pop
sahf
inc
cltd
aam
inc
push
iret
lock
inc
int
sub
jb
jnp
lcall
mov
ds
pop
test
lods
sub
mov
and
loopne
aam
mov
arpl
adc
mov
xor
inc
add
test
dec
repz
dec
push
shl
sub
jo
adc
je
mov
arpl
push
fdivrl
pop
fistpll
sub
xor
mov
lea
stos
cmpsl
rcrb
mov
jecxz
jge
pop
adc
xchg
jbe
adc
lret
fld
mov
clc
push
mov
pushf
in
pop
cmp
cmpsl
xor
ret
sub
repnz
cmpsb
les
out
jmp
test
icebp
movsb
adc
lahf
push
in
xlat
lcall
mov
insl
jb
xchg
pop
jbe
fimull
push
jmp
mov
sbb
xor
aam
sub
std
inc
movsl
mov
push
push
jle
in
jecxz
arpl
mov
pop
lret
and
sti
stos
orl
jp
fmull
in
pop
pushf
dec
in
fmull
in
outsb
add
pop
stc
cmp
dec
ds
aas
pop
test
dec
mov
push
movsb
mov
jmp
sbb
in
xor
lahf
sub
bound
pop
mov
push
popa
mov
mov
jne
xor
lds
bound
shl
sbb
xor
sub
aaa
mov
js
frstor
sub
fildl
push
test
stos
repz
popf
nop
dec
cmp
pop
sub
lds
fisubl
or
inc
jae
cmpsb
inc
dec
adc
test
push
mov
pushf
sbb
push
test
div
fistps
push
sahf
std
mov
lods
push
in
shll
sahf
fiaddl
out
fcomps
jo
std
fidivs
movsb
sbb
bound
in
mov
jmp
mov
pop
idiv
add
mov
inc
ret
sub
push
sbb
mov
sub
inc
pop
sub
int
inc
cs
mov
andl
ror
addr16
mov
push
cmp
sbb
adc
xchg
sub
xchg
int3
push
dec
push
inc
out
push
jne
mov
add
xchg
stos
int
jns
and
push
js
outsb
mov
jno
inc
fcomps
push
lock
insb
mov
jae
stc
call
mov
fs
enter
dec
inc
js
pop
push
cmp
cmp
adc
mov
and
jmp
fldenv
xor
sbb
xor
dec
andl
mov
inc
xchg
cs
ds
lds
sbb
jnp
lea
data16
fisubrs
sub
hlt
scas
pop
in
dec
cmp
adcl
mov
bound
mov
enter
sti
or
adc
xchg
add
rorb
adc
cs
popa
in
xor
xchg
dec
test
pop
sar
mov
mov
movsb
icebp
jle
sbb
call
insb
repz
hlt
or
les
fidivs
ss
fs
inc
cmp
mov
incl
mov
dec
lcall
out
adc
mov
cli
je
and
cmp
cmp
and
xor
cmp
inc
adcl
jbe
lods
ss
mov
jmp
xchg
jb
inc
imull
mov
add
movsl
scas
test
mov
add
lahf
andl
push
idivb
leave
mov
mov
inc
roll
aas
mov
lods
in
mov
xor
mov
cmpsl
loop
test
sub
outsl
sti
subb
scas
inc
test
and
pop
aaa
icebp
data16
fstl
pop
aas
jns
in
sub
mov
fldlg2
int3
or
mov
int3
dec
aaa
adc
mov
mov
movsb
sahf
out
loop
jbe
sarl
add
cmp
xchg
dec
add
mov
orl
jge
sbb
lea
mov
fs
test
push
shrb
in
out
add
xchg
mov
shl
addb
inc
pop
gs
stos
add
popf
jnp
popf
push
aad
movsb
vorps
cli
aaa
dec
push
notl
mov
cmp
in
dec
aad
fidivl
icebp
scas
in
aaa
incl
mov
jns
jle
sbb
lret
jb
repnz
or
mov
mov
jne
movsb
mov
or
in
fucom
cmpsl
sbb
test
sahf
dec
xchg
ds
mov
push
cs
adc
or
lds
push
jno
sahf
sahf
aas
stc
mov
pop
add
daa
jno
testl
dec
or
aam
sbb
mov
stc
jo
aam
and
in
mov
fstpt
pop
ret
scas
push
push
mov
mov
sti
in
adc
mov
enter
in
movsb
adc
jmp
mov
add
jg
bound
call
sbb
dec
fstpl
repnz
xchg
mov
test
ficoms
jbe
adc
lock
and
add
xchg
mov
jg
mov
mov
out
push
pusha
sbb
sbb
mov
dec
jmp
xor
sbb
dec
cwtl
inc
add
lea
test
aaa
mov
cmp
je
call
xchg
mov
cmp
sub
cmp
aad
xchg
idivb
gs
xor
int
inc
add
bound
mov
xchg
imul
lds
push
nop
popa
pop
inc
dec
mov
cmp
sbb
adc
pop
aas
repnz
clc
jae
and
imul
sbb
nop
dec
add
mov
in
mov
inc
mov
es
lea
and
mov
daa
iret
dec
das
push
pushf
pop
les
jne
and
push
sbb
pushf
test
inc
sbb
dec
aam
mov
jns
sbb
data16
pop
negl
test
insl
dec
jmp
imul
push
fiaddl
out
mov
cmp
jns
mov
scas
roll
add
mov
mov
sbb
std
push
ficoms
lods
pushf
lret
sub
les
inc
inc
movsb
or
mov
shll
add
in
adc
rcll
lock
andl
dec
sbb
adc
or
mov
cmp
jge
jl
mov
lahf
pusha
push
push
cwtl
or
cwtl
mov
int3
bound
js
inc
xor
pop
gs
lds
inc
mov
cwtl
mov
xor
cmp
movsl
xchg
leave
in
mov
daa
add
adc
pusha
push
in
jbe
das
dec
scas
int
push
inc
dec
movsb
mov
out
mov
cmp
in
add
xchg
dec
inc
jmp
or
or
inc
xchg
push
add
negb
hlt
dec
mov
call
jl
sti
mov
xor
fisubrs
mov
push
adc
lret
or
cmpsl
xchg
lods
inc
loop
push
rcrl
and
dec
jmp
sub
data16
sbb
mov
sbb
push
stc
lods
xchg
and
das
gs
cmpsb
fimull
fcoml
pop
loope
pop
pop
jg
call
push
fnstcw
jg
mov
mov
lret
or
add
dec
repz
sbb
sahf
push
stos
in
adc
cli
bound
xor
imul
mov
test
push
in
cmp
ss
notb
cmpsl
les
into
xlat
arpl
inc
pop
push
stc
stos
cmpsb
flds
hlt
mov
cmp
cli
dec
push
push
lret
jae
push
adc
std
jmp
adcb
mov
and
jo
out
dec
mov
shll
jmp
sbbl
daa
arpl
jnp
ret
sarl
fs
scas
push
push
test
dec
loopne
mov
adc
pop
push
loopne
xor
addr16
sub
or
cmc
int
jae
ret
stos
movsl
outsl
or
mov
repz
jmp
and
jae
imul
das
fs
add
fnstenv
xchg
shll
jle
mov
cmpb
adc
into
out
orl
fwait
jecxz
xchg
xchg
aas
fildll
cmpsl
mov
les
loopne
cmp
fs
pusha
jo
sbb
pushf
pushl
add
add
mov
loopne
adc
sub
sub
clc
in
dec
adc
adc
dec
push
mov
or
cs
insb
imul
mov
jle
and
mov
xchg
xchg
sahf
or
mov
aam
pop
and
mov
fisubs
insl
shll
outsb
and
fcom
out
lds
jb
nop
add
cmpsl
cmpsl
push
lret
mov
push
pop
loop
pop
ret
adc
xchg
inc
mov
or
push
out
mov
and
xor
cmpsb
aad
shr
leave
inc
and
push
test
push
pop
ja
stos
dec
sub
mov
cli
into
sub
add
adcb
in
adc
out
repnz
mov
inc
lcall
fdivl
push
add
push
cmp
mov
ret
push
cwtl
clc
stos
bound
add
cmp
xor
imul
lahf
cmpsb
fstpl
sbb
jmp
lds
je
sbb
fdivrl
in
lock
and
xchg
stc
mov
jmp
sbb
stos
fprem1
xorl
leave
mov
sarl
push
push
aas
push
adc
pushf
mov
push
clc
sub
mov
jnp
stos
push
sub
add
movsl
dec
add
pop
inc
adc
xor
mov
sahf
subb
push
mov
xchg
mov
mov
or
mov
and
cmp
fstpl
adc
fists
dec
les
pushf
cmc
enter
lahf
xchg
loope
js
push
push
notl
mov
cmpsb
out
push
jle
mov
cmpsl
pop
sub
xlat
cmpsb
or
add
cwtl
mov
inc
ret
lea
pushf
pop
push
call
mov
push
fimull
cld
mov
sub
mov
in
stos
mov
lahf
dec
sahf
mov
pop
push
dec
lea
inc
push
fmull
lea
addr16
jg
inc
call
xchg
stos
xchg
bound
in
push
mov
sub
int
sub
test
mov
lock
cmpsb
addb
cmpsl
push
adc
in
push
and
dec
push
mov
or
xchg
adc
addl
pop
adc
leave
mov
sub
dec
adc
lods
inc
cli
mov
jno
and
jge
pushf
xor
cmp
inc
sub
int3
jg
push
push
stc
xchg
mov
movl
sbb
inc
imul
stc
gs
sub
arpl
cmc
dec
loopne
mov
pop
adc
fwait
lods
push
inc
inc
xchg
mov
mov
cld
test
repnz
test
mov
lahf
lds
push
mov
dec
and
mov
jnp
mov
bound
mov
insb
push
xchg
sub
mov
cmp
jmp
repnz
in
xchg
sub
in
push
iret
push
add
jle
ss
cmp
adc
in
xchg
pmullw
and
mov
dec
jae
into
das
test
popf
fisubl
xor
or
daa
sub
add
or
or
adc
lock
lods
pop
jmp
fistpl
jle
xchg
and
sbb
imulb
xchg
lret
in
mov
arpl
fdivs
sti
xchg
push
outsb
out
xchg
jg
push
add
mov
loop
xlat
fwait
test
pop
test
mov
mov
fsubrl
cmpsb
ret
jg
iret
pusha
jg
pop
test
xchg
mov
pop
outsl
jecxz
mov
dec
or
pusha
clc
xlat
test
cmpsl
inc
out
inc
repnz
pop
pop
mov
sub
shlb
jns
jge
xchg
negl
pop
sbb
lret
lods
xlat
fs
movsb
cli
iret
hlt
in
sbb
test
and
jb
mov
push
jp
mov
lret
loopne
and
sub
lods
mov
imul
cltd
pop
sti
rolb
fwait
jecxz
and
add
daa
movsb
add
andb
add
addr16
adc
fstl
or
stos
mov
xchg
mov
mov
lds
rolb
and
test
cli
and
or
roll
dec
je
inc
psrld
mov
dec
fcomps
pop
push
mov
xchg
scas
enter
lahf
sub
mov
pop
std
call
push
sub
lods
cmpsl
jp
sbb
push
pushf
pop
or
pop
mov
jno
inc
es
mov
loope
stc
cmp
mov
jae
sub
mov
push
hlt
lds
mov
add
cmp
repnz
cmc
dec
negb
rcl
push
inc
adc
cmpsb
shll
jle
iret
call
sbb
aad
and
je
and
movsb
ret
imul
in
mov
loop
jns
inc
lcall
fwait
mov
cltd
cld
in
xlat
jmp
push
dec
and
iret
aad
adc
add
data16
push
lock
rorl
jbe
sub
mov
pop
cmp
lds
lock
mov
adc
mov
movsb
xchg
aad
inc
ret
dec
les
fs
jns
pop
cs
mov
js
mov
push
hlt
sahf
jl
and
pop
out
lock
jnp
lods
push
cld
add
push
push
xchg
test
fdivrl
cmpsl
mov
andl
addl
dec
in
jnp
jbe
and
daa
ret
mov
out
sbb
aam
insb
adc
mov
hlt
dec
and
and
jle
pushf
cmp
shrl
dec
mov
iret
push
cmpb
aas
cmc
dec
jl
cmp
in
gs
adc
push
lods
fcoml
pop
xchg
lods
int
xchg
rorb
push
pop
out
xor
xchg
jge
js
mov
push
sti
dec
jb
in
scas
adc
add
xchg
fcom
ss
addb
push
xchg
add
sub
push
pop
out
sbb
sti
lret
into
das
fldcw
cltd
outsb
or
stc
sbb
mov
call
push
xchg
insb
adc
pop
or
out
mov
add
dec
stos
cmpsl
and
fsubrl
pop
lds
clc
mov
inc
jo
subl
mov
inc
sbb
mov
mov
movsb
rorl
jmp
push
lods
fcoml
in
inc
sub
jp
cmc
mov
int
lahf
or
fsubrl
xchg
mov
popf
scas
sub
push
inc
or
push
out
fs
nop
push
dec
in
push
cmpsl
jne
xchg
pop
mov
pop
mov
cmp
mov
aam
ljmp
sub
inc
add
cmpl
das
mov
jbe
sub
inc
pop
push
inc
jecxz
mov
xchg
mov
add
ljmp
call
or
jmp
pop
in
push
adcl
push
aad
pop
jge
cmp
imul
and
aas
and
repz
and
mov
sub
pop
dec
dec
add
push
xorb
scas
or
xchg
dec
mov
cmp
mov
mov
shl
shrl
cltd
lds
sub
mov
jae
jecxz
xchg
leave
push
dec
gs
enter
mov
mov
jle
push
mov
jne
sarl
mov
pop
lret
lret
mov
out
add
shll
imul
jl
pop
xorl
add
xor
iret
lods
and
add
andl
lahf
out
mov
mov
jbe
std
dec
sub
out
cmc
or
andb
xlat
loopne
les
mov
dec
movhps
lea
clc
mov
popf
adc
push
dec
stos
cmpb
hlt
push
test
gs
inc
loop
aaa
jg
test
mov
int3
enter
fdivp
sbb
dec
gs
push
clc
or
push
mov
jge
js
mov
xlat
add
or
dec
pop
and
sbb
pop
aad
push
pop
les
outsb
aad
adc
xlat
inc
inc
rclb
lahf
push
test
mov
mov
add
jnp
sahf
push
mov
in
jmp
and
push
ret
dec
cmc
in
outsb
cmp
popa
fsubs
in
or
mov
jbe
out
jbe
xlat
push
int3
lcall
push
lock
cmpsl
faddl
inc
and
xchg
dec
daa
aaa
and
lock
sbb
ja
push
arpl
int
cwtl
ljmp
fstps
push
mov
pop
pop
fdivrl
test
int
leave
push
stos
movsb
mov
cltd
sub
lods
lds
sti
mov
xor
mov
pop
sti
sbb
stc
gs
mov
test
cmp
sub
arpl
scas
out
lahf
ds
jb
in
aas
lret
lahf
mov
xchg
ds
dec
xchg
xchg
jns
les
and
call
fwait
sbb
and
nop
cmpsb
sbb
mov
int3
imulb
rcrb
mov
cwtl
pop
xor
cmp
fbld
and
xor
out
imul
movsl
or
and
lods
add
lret
cmp
push
dec
adc
ss
in
aad
mov
imul
rorb
loop
jle
cmp
daa
pop
loop
xchg
lret
xchg
repz
test
adc
test
jecxz
sahf
push
xchg
sti
add
push
pop
and
pop
jae
rolb
popf
dec
sub
mov
push
stos
pop
mov
push
out
sbb
popf
cmp
rcrl
loopne
aaa
ja,pn
cmp
xor
jge
push
mov
in
cmc
bound
dec
xor
pop
or
cmpsb
popf
test
mov
ss
lds
sub
jnp
add
mov
in
xor
call
pusha
or
cmp
pop
lret
mov
mov
jae
jg
out
imul
jge
lahf
pop
jns
sub
in
pushf
push
push
negb
mov
xor
shrl
mov
sbb
out
punpckhbw
push
fstpl
adcb
lahf
int3
dec
dec
sbb
mov
and
xchg
popf
movsl
lods
or
andl
or
xor
ljmp
pop
je
ljmp
push
sbb
out
dec
mov
sahf
dec
cmp
sbb
jo
aas
out
pop
and
adc
xor
dec
adc
out
daa
xchg
in
xlat
or
xchg
clc
dec
outsl
movsb
mov
mov
test
sub
or
sub
shlb
xor
popf
data16
enter
inc
lds
lret
push
cmp
jns
mov
das
adc
push
add
push
xchg
dec
ret
lock
pop
cmpl
jne
loop
inc
or
inc
cmpsb
fwait
cmp
mov
inc
inc
les
inc
insb
repnz
sbb
out
out
add
aad
lahf
stos
mov
stos
dec
gs
daa
fst
pop
inc
inc
mov
test
aaa
mov
push
fld
daa
loop
adc
lods
out
rep
ffreep
push
orb
ds
sbb
lret
sub
mov
out
call
jnp
movsb
sbbb
lahf
mov
cmp
dec
movsl
rclb
enter
out
or
xchg
adc
or
and
out
call
daa
mov
sub
mov
pop
lock
dec
sub
adc
adc
xchg
cmp
insl
mov
mov
dec
test
imul
xor
je
lcall
lret
jmp
insb
push
inc
jbe
scas
sti
call
push
rcrb
push
mov
push
and
daa
add
xorl
cmpsb
jecxz
mov
adc
adc
daa
cmp
mov
loop
les
bound
shll
dec
xchg
jmp
sub
das
adcb
mov
int3
push
or
pushf
sar
xchg
xchg
aam
mov
adc
js
out
mov
adc
in
inc
cmc
sub
inc
shl
les
push
fisubl
in
dec
fidivs
bound
xlat
imul
add
popf
aaa
push
iret
mov
lods
loopne
movsl
in
inc
sbb
inc
mov
rorb
mov
loopne
fisubrs
push
or
cwtl
xor
push
cltd
adcb
mov
in
imul
jle
mov
mov
lods
imul
dec
scas
dec
inc
dec
inc
push
push
cld
dec
sub
xchg
mov
push
movsl
das
cmc
mov
les
mov
pop
mov
sub
push
sar
mov
es
pop
fwait
dec
les
adc
pop
fsts
popf
mov
in
and
xor
pop
fs
ds
lcall
mov
dec
xor
fwait
sub
sbb
in
test
aad
test
leave
lods
scas
or
imul
daa
adc
test
cmp
fwait
cmp
cmp
dec
js
mov
xor
mov
in
sbb
or
mov
loop
sub
pusha
insb
dec
add
pop
inc
mov
mov
mov
or
shll
sbb
push
xlat
cmp
cmp
loopne
lock
scas
push
iret
shlb
push
loope
mov
mov
out
dec
pushf
pop
jno
sti
adc
iret
nop
cwtl
mov
cli
mov
das
mov
mov
sub
ror
mov
xor
mov
dec
push
std
mov
push
dec
or
sub
sub
cltd
testb
out
rolb
rolb
sahf
js
aas
insl
ljmp
dec
icebp
dec
ljmp
mov
and
cmp
dec
out
cmpsl
rsm
mov
stos
idivb
mov
insb
lret
bound
ret
loop
mov
sub
int3
outsb
sar
mov
popf
rep
mov
inc
xlat
push
test
sbb
push
js
out
adc
lods
testl
mov
shr
inc
pop
pushl
or
mov
les
inc
push
pop
mov
push
pop
sbb
dec
jl
add
push
idivb
insb
inc
jle
dec
jb
push
shll
imul
dec
xor
lock
arpl
push
xor
lock
jnp
das
test
adc
divl
scas
cmc
sub
or
jne
mov
aam
add
inc
push
inc
inc
or
and
test
add
dec
pop
xor
push
les
mov
xchg
inc
aad
cmp
sbb
fs
mov
shll
dec
adc
xchg
mov
mov
incb
lcall
mov
roll
xchg
mov
imul
jne
inc
dec
aaa
andb
leave
aas
addl
mov
js
nop
fldenv
in
loopne
cmc
stc
add
cwtl
inc
pop
inc
push
push
xchg
dec
sub
shr
aam
cmpb
imul
adc
adc
test
movsl
inc
andb
push
stos
scas
loopne
scas
addl
jge
jmp
rcrl
insb
jp
xchg
out
lret
pop
loopne
xchg
or
div
dec
rcll
out
mov
filds
jmp
insb
shll
je
push
addr16
cmpsb
cs
push
into
cld
pusha
ja
mov
push
cmp
mov
pop
add
clc
test
cmpsb
mov
mov
imul
mov
outsb
mov
into
and
cmpsl
fnstenv
lret
loopne
push
pop
in
ds
stos
dec
pop
in
sub
scas
jmp
sbb
adc
mulb
lea
adc
jbe
dec
out
popf
mov
add
testb
mov
jnp
test
call
xchg
jnp
xchg
sub
cli
dec
cmpb
dec
xlat
push
stc
into
subl
aas
mov
sarl
test
xchg
push
cltd
int3
push
dec
mov
iret
imul
push
rcll
rcrl
roll
insl
push
mov
je
sti
aaa
or
mov
xor
mov
and
sub
mov
fs
loop
repnz
mov
sub
and
push
loopne
sbb
repnz
xchg
into
je
outsb
insl
xor
aas
push
mov
jge
in
jns
fmulp
fldt
in
loop
mov
push
pusha
xor
dec
fdivrs
out
repz
aam
addl
mov
sbb
lahf
lods
out
sahf
pop
mov
xchg
pop
pusha
adc
and
imul
xchg
sub
or
loope
in
insb
cmp
jbe
test
daa
fstl
push
jbe
daa
mov
dec
mov
and
lock
int
out
int3
push
cli
lret
dec
xchg
imul
pop
fnsave
or
cmp
jnp
clc
lahf
popf
add
loope
inc
pop
mov
flds
enter
xchg
and
call
mov
jp
and
int3
dec
hlt
enter
mov
inc
loope
test
and
int3
adc
cmp
cli
lock
fdivrp
out
inc
clc
jnp
push
shlb
movsb
scas
dec
and
jae
cmp
lret
fwait
jnp
xchg
flds
mov
aam
xchg
mov
ja
iret
dec
inc
xchg
and
loopne
jnp
sub
mov
into
pop
imul
jae
adc
call
pop
xchg
mov
insb
xlat
ret
ret
jecxz
test
jb
adc
arpl
xchg
cmpsl
mov
out
jl
add
das
sub
mov
in
jle
lret
leave
movsb
cs
pop
dec
add
jle
xchg
addr16
pop
loop
test
fnstcw
mov
cmpsl
scas
mov
xchg
pop
fdivl
dec
push
popf
mov
inc
addr16
xchg
mov
push
nop
aad
adc
xchg
fsubs
jno
sub
pop
xorl
ud0
xor
xchg
rcll
bound
inc
xor
mov
adc
xor
fisubrs
sbb
insl
addr16
arpl
dec
pushw
xor
js
fsubrs
xchg
int3
mov
push
lret
mov
jecxz
sti
lock
cmpsl
xchg
lock
sub
movsl
inc
inc
fdivl
jae
out
test
cmp
dec
cli
xchg
sub
lods
mov
xchg
and
push
push
mov
shlb
cmp
cli
inc
sub
sahf
inc
dec
and
les
dec
dec
ja
popa
and
insl
ret
leave
repz
out
mov
cwtl
mov
pop
mov
add
mov
mov
pop
xor
dec
mov
ficoml
aas
adc
mov
mov
mov
xor
cmp
scas
dec
push
inc
imul
xchg
jmp
das
jecxz
push
or
idiv
jae
sub
dec
out
and
adc
push
mov
gs
dec
lret
xchg
imul
js
iret
sub
dec
pop
xchg
cmpsb
sub
divl
adc
xor
loopne
pop
es
insl
aas
test
pop
and
jbe
popl
sbb
add
xchg
loop
in
sti
sub
enter
shl
xchg
jns
pop
push
es
hlt
fidivs
inc
or
jno
push
mov
jmp
mov
ljmp
daa
lea
aam
sahf
mov
jp
mov
add
xchg
sarb
jb
ss
icebp
int
fisttpll
sbb
dec
subl
arpl
stos
aaa
inc
pop
insb
aas
push
cmpsb
push
aad
adc
inc
outsl
hlt
jb
jg
mov
jecxz
jl
xchg
popa
out
push
es
addr16
or
cmp
clc
cmp
xchg
dec
in
stc
arpl
inc
fucomip
fs
sbb
or
add
add
cwtl
add
fwait
pusha
jge
mov
in
xor
gs
sub
sbb
sbb
imul
fstps
and
mov
popa
ja
xchg
mov
leave
movsb
out
aam
jns
inc
icebp
shll
xor
adc
push
sub
dec
mov
xor
mov
data16
or
je
sub
mov
sahf
iret
push
mov
ror
xchg
dec
jnp
bound
addr16
loopne
js
pop
jnp
dec
mov
pop
lods
cmc
pop
repz
addr16
pusha
push
cmp
xchg
push
fistpl
das
loope
cmpl
sbb
jge
jle
in
addr16
xchg
movsl
fs
mov
add
aam
jmp
push
out
dec
imul
jg
in
adc
mov
imul
cmpsl
pop
pop
xchg
ret
xor
shll
imul
into
mov
daa
push
and
mov
xchg
pop
test
arpl
and
mov
sbb
xchg
and
xchg
cli
pop
jnp
fadds
and
cmpb
xchg
inc
mov
xor
shlb
xchg
test
push
mov
std
jle
nop
movsl
imul
mov
inc
bound
gs
jo
fucom
call
lahf
rcrl
ret
sub
insb
sbb
mov
push
sar
fstl
mov
out
daa
and
fistps
popf
mov
andl
dec
and
adc
sub
call
shrl
lock
cld
push
fwait
or
jns
push
stc
pop
std
movsb
sbb
into
js
or
imul
mov
pop
addr16
ds
or
fisubrl
push
pop
dec
jge
leave
cmp
jmp
idivl
arpl
jmp
push
sbb
adc
inc
xchg
lret
hlt
inc
jns
popa
aaa
xor
andl
inc
push
jg
jge
iret
test
lret
shlb
cwtl
icebp
jmp
shr
add
push
dec
inc
xchg
add
or
xchg
sub
and
or
daa
sti
cmp
dec
out
adc
dec
add
popf
frstpm(287
test
andb
incb
leave
loop
bound
mov
scas
add
inc
mov
push
push
loope
aaa
lods
dec
adc
jbe
jne
add
out
inc
push
pop
enter
sub
xor
fstl
dec
rorl
fs
stos
addr16
decb
dec
cmp
dec
inc
and
test
test
pop
insl
in
sbb
adc
outsb
fidivrs
in
rclb
mov
jbe
enter
mov
repz
stc
out
push
cwtl
test
and
adc
ja
sub
test
mov
jg
lahf
insb
jl
cmpsl
jp
repz
lea
into
lret
gs
test
mov
xchg
push
popf
subps
rcrl
das
shlb
dec
pushf
mov
dec
mov
jae
les
mov
insl
mov
sub
xorl
jle
out
mov
faddl
jge
nop
jg
mov
push
jmp
test
sbb
cltd
es
sbb
or
inc
lret
sub
push
sbb
push
or
push
pop
dec
mov
call
test
mov
test
sti
xchg
cmpsl
push
stos
fdivrl
fsts
and
movsb
dec
jle
inc
mov
xor
iret
stos
lahf
daa
mov
arpl
cmpsb
or
mov
stos
repnz
mov
dec
out
xchg
mov
jg
pushf
rorb
cwtl
test
gs
test
sbb
sbb
inc
enter
hlt
inc
enter
adc
out
pop
mov
out
dec
scas
dec
in
sub
sbb
movsl
push
cltd
or
in
aad
xchg
dec
daa
loop
lods
mov
lods
repnz
sub
xchg
pop
or
sub
add
push
and
and
cmp
aaa
test
jle
ss
int3
lock
jmp
int
xor
mov
jo
xchg
sub
lcall
scas
std
shl
outsb
flds
jno
add
arpl
xor
push
mov
lret
ljmp
ficoml
fsts
filds
es
sbb
js
test
stos
push
aaa
out
push
jle
pop
xchg
nop
mov
xor
cltd
push
inc
mov
inc
mov
pop
inc
outsl
cs
mov
pop
shrl
test
cmpsl
lods
sti
std
jbe
std
pop
mov
dec
pushf
addr16
adc
repnz
fcomps
adc
dec
sarl
cmp
out
je
pushl
test
stos
sbbl
cmp
or
out
cmp
js
clc
mov
sub
pop
lret
in
jmp
xor
cli
pop
jne
adc
mov
hlt
pop
iret
xchg
frstor
loop
mov
jmp
outsb
add
xchg
in
nop
xchg
jae
pop
fisubs
pop
scas
popf
sbb
mov
lea
or
gs
sub
int
loop
xchg
dec
fwait
or
mov
fwait
scas
addl
xlat
out
lret
daa
idivl
push
icebp
sub
pop
pop
dec
in
sbb
out
out
jnp
mov
sbb
repz
push
add
pop
fsub
ficoms
stos
mov
stc
push
mov
lcall
sub
dec
in
adc
jb
mov
sub
ljmp
or
lcall
iret
ljmp
xchg
pop
fstp
xor
pop
out
push
mov
or
loope
pop
out
lahf
xchg
cmp
shrl
push
stos
repz
addr16
sbb
xor
push
push
out
fwait
js
leave
movsb
add
and
inc
pop
insl
leave
mov
test
int3
cmpl
xor
fstpl
cld
pop
es
mov
ds
aaa
mov
test
sub
nop
ss
stos
mov
fdivl
dec
xchg
xor
int
xchg
xchg
inc
es
cwtl
out
cmp
lock
sbb
xor
out
adcb
into
test
fildll
mov
movb
adc
sub
xor
fwait
das
xor
insb
shr
xchg
and
popa
adc
and
or
inc
mov
jno
pop
ljmp
xor
scas
sbb
lcall
mov
stos
lea
sbb
adc
divl
mov
push
das
and
pop
mov
sub
mov
pop
pop
scas
fidivs
inc
jl
fcmovne
mov
fdiv
imul
data16
mov
pop
fstl
jle
xor
mov
in
xor
movsb
loop
mov
daa
sub
movsl
pusha
mov
cmpsb
jg
in
pop
popf
add
das
lea
bound
cmp
fwait
lahf
mov
lret
dec
sub
xor
dec
mov
iret
push
scas
fisubrl
mov
inc
arpl
mov
sbb
jmp
mov
out
fiaddl
fnsave
xlat
iret
pop
mov
mov
cmp
and
jge
int
int
imul
pop
insl
cwtl
and
pop
gs
xor
das
lds
inc
mov
arpl
lret
cmp
pop
data16
push
sbb
xchg
push
mov
push
mov
pop
xlat
sar
mov
ds
xor
jle
loop
and
cltd
xchg
or
fdiv
mov
dec
out
aad
and
ret
push
sbb
daa
in
loop
fiaddl
xor
jecxz
lahf
and
mov
nop
dec
movsl
inc
loopne
mov
or
adc
mov
pop
popa
mov
inc
nop
xchg
dec
push
adc
popa
and
std
loop
fs
arpl
leave
jmp
or
into
subl
jmp
int
popa
repnz
xor
aaa
test
sbb
push
popf
stos
sub
or
mov
fisubs
inc
in
test
fdivrl
push
and
or
ljmp
scas
mov
mov
push
xor
mov
push
fneni(8087
dec
popa
pop
nop
jmp
popl
iret
fsts
jne
adc
and
fadd
pushf
mov
fmulp
dec
xchg
or
addr16
in
xor
dec
inc
pop
out
add
push
test
dec
cmp
sub
out
sbb
out
pushf
popf
fsubr
pop
cmp
loopne
dec
outsl
mov
xor
push
add
hlt
pop
dec
adc
push
mov
push
pop
lea
mov
jg
cmp
in
dec
stos
popa
hlt
int
ja
mov
inc
std
xlat
shll
pop
shll
xlat
mov
punpckhwd
jmp
dec
and
lret
jnp
or
sbbl
and
in
repnz
leave
aas
jp
rcrl
inc
das
repnz
lret
imul
pop
inc
lock
dec
xchg
mov
mov
repnz
cmp
inc
bnd
fstpl
sahf
mov
xor
icebp
sti
sub
sub
into
shll
idivl
iret
roll
bound
adc
pop
mov
pop
mov
ljmp
in
popa
xor
aad
adc
inc
push
jmp
sbb
adc
cli
int3
inc
aas
pop
fnsave
les
ret
dec
cmp
data16
jo
mov
pushw
xchg
std
mov
mov
lods
xchg
ret
pusha
orl
xchg
mov
pop
mov
sbb
and
repz
push
pop
arpl
sti
sarl
int
dec
xchg
inc
pop
dec
mov
mov
pusha
fwait
jmp
out
mov
jl
cmp
mov
sub
mov
inc
xchg
pop
mov
gs
cmpl
cmpsl
iret
push
lret
gs
lret
fs
addr16
xor
into
out
push
inc
in
aad
pop
divl
dec
iret
pop
cmp
pop
mov
xor
or
in
inc
sbb
push
adc
pop
sub
mov
decl
and
inc
mov
addr16
jge
push
pop
xor
jne
and
inc
mov
pop
test
mov
mov
mov
lea
mov
fmuls
jge
rcrb
enter
into
js
push
push
repnz
mov
stc
ss
push
sbb
imul
mov
mov
jb
pop
andb
add
inc
std
mov
mov
and
cmp
ficoms
jge
or
push
adc
jbe
sbb
stos
mov
pop
sbb
mov
mov
or
sbb
fidivrl
sbb
imul
inc
pop
divb
hlt
mov
lret
jmp
movhps
frstor
inc
mov
imul
scas
ret
cmp
std
jp
sub
sub
push
aam
jnp
pop
loop
je
outsl
pop
pop
sub
out
push
mov
sub
xchg
mov
andl
loop
xchg
push
and
int
insl
mov
lret
addr16
orl
cltd
xor
out
in
lret
inc
mov
sbb
lret
fistps
cmp
xchg
dec
pop
out
pop
pushl
pop
subb
jb
icebp
call
mov
push
cltd
dec
push
sub
push
or
stc
pop
and
orb
inc
adc
xor
sbb
aam
cmp
xchg
mov
daa
inc
lods
shrb
fmuls
cmpsb
test
movl
loopne
subl
xor
or
inc
jb
int
movsb
cmpsl
in
push
test
leave
pop
scas
fiaddl
je
jmp
dec
incb
call
leave
dec
push
mov
shll
or
icebp
mov
and
or
push
adc
and
mov
mov
pop
out
xor
dec
sti
adc
or
shll
inc
ljmp
movsl
enter
jo
dec
jne
mov
or
adc
and
mov
decl
sub
shlb
je
cld
jnp
cli
outsb
and
mov
cmp
jg
ret
nop
pop
pop
jmp
addr16
ja
int3
into
pop
pop
cmp
mov
insl
sbb
orl
mov
ljmp
push
cltd
ds
inc
loope
mov
push
dec
lods
dec
insl
sti
loopne
gs
or
test
jge
jb
pop
iret
jb
sbb
pop
jle
xlat
mov
inc
push
iret
pop
push
lock
fsubs
add
push
in
sbb
push
mov
loop
pop
aaa
ja
in
out
pop
dec
jne
pop
add
dec
add
mov
test
cmpsb
sub
xchg
ds
pop
xlat
add
test
iret
lahf
lock
jmp
mov
std
std
pop
pop
in
adc
shlb
dec
jne
pop
adc
cli
cmp
xchg
stc
ss
addr16
or
add
mov
jno
sbb
jmp
sub
xlat
add
mov
js
sub
cmp
out
stc
andb
xorb
inc
push
ss
pop
mov
add
sub
jno
xchg
inc
inc
fisubrl
imul
inc
mov
fisttpll
push
decb
cli
xor
out
xor
jns
sub
popa
push
pusha
popa
ljmp
mov
popa
mov
jo
inc
inc
and
imul
jo
std
push
rclb
imul
ret
pushf
dec
out
push
pop
cmp
aas
cmpsl
shrb
jmp
add
daa
xlat
inc
adc
aaa
push
push
jns
arpl
popa
xchg
jnp
mov
mov
mov
das
cmp
cmp
jnp
push
xchg
jns
mov
jnp
sti
cmpsl
call
jl
and
arpl
mov
cwtl
xor
cmp
lock
gs
stos
std
jno
dec
sub
loop
iret
addr16
or
in
out
dec
dec
decb
loope
inc
inc
aad
inc
push
push
lock
imul
loopne
xor
mov
push
push
or
movb
dec
add
fildll
int
out
add
sub
xlat
inc
push
fists
std
jo
loope
fdivs
pop
jmp
pop
fwait
mov
addb
mov
sbb
sub
imul
pop
int3
sbb
push
loope
jl
and
sti
inc
in
mov
popa
push
mov
inc
mov
insb
or
and
sbb
in
push
and
movsl
push
or
inc
mov
mov
xor
addr16
mov
mov
stc
in
adc
pop
sahf
adc
or
cwtl
aas
std
mov
cmpsb
mov
add
into
mov
xor
push
popf
fwait
xchg
xchg
stos
scas
inc
icebp
icebp
aaa
hlt
inc
loop
aas
lcall
mov
xchg
decb
dec
lret
sub
dec
test
push
in
ss
jns
stos
es
or
out
in
enter
repnz
adc
add
loopne
jb
stos
jge
push
fdivs
or
jecxz
adc
inc
xor
ja
jge
xchg
shrl
out
loop
iret
mov
leave
ljmpw
test
mov
data16
xchg
push
popa
push
jb
les
pushf
nop
das
imul
push
daa
jnp
jge
test
cli
into
and
movsb
push
je
enter
in
addr16
xor
mov
sar
sub
sub
popa
cmp
pop
negb
push
xor
cmpsl
outsb
in
xchg
int
jb
jmp
pushf
loop
cmc
pusha
lods
clc
pop
fisttps
push
lcall
sbb
std
movsb
xlat
add
mov
cltd
push
xchg
test
push
jne
cld
cmp
int
not
jae
mov
mov
rcrb
xor
mov
aam
je
mov
or
mov
sahf
cmpsl
lea
xlat
inc
cmp
out
addr16
dec
pop
mov
fmul
jge
loope
andb
fisubl
push
int3
addb
cmpsb
adc
fisttps
stos
mov
push
stos
mov
in
jo
xchg
sub
push
fimuls
mov
xor
push
inc
push
jne
xchg
mov
iret
imul
pop
sbb
cmp
pop
sub
jmp
mov
xchg
pop
aam
pop
mov
xchg
mov
dec
push
mov
sub
fstpl
je
or
repnz
sbb
ss
js
out
xor
into
jg
xchg
call
fiadds
dec
popa
mov
sub
movsl
cld
lods
inc
cmpsb
cli
in
cmpsl
or
sub
incl
lret
jne
into
lds
push
ss
std
cmpsb
adc
pop
inc
xchg
lret
std
sbb
push
pusha
leave
js
mov
sbb
addr16
inc
push
cmpsl
sub
and
push
gs
xchg
adc
and
addr16
xchg
int3
xchg
rcl
and
test
stos
cmovb
aad
add
into
xor
dec
andb
or
xchg
test
xchg
gs
lock
sbb
pop
es
in
jno
pop
mov
movsb
mov
mov
push
add
jmp
fs
orl
jnp
mov
pop
movsl
sub
ret
neg
mov
out
xor
mov
sub
pop
iret
in
int3
mov
mov
out
jg
cmc
jne
xchg
aam
into
rorb
dec
ds
and
sub
pop
lods
push
xor
test
lods
pop
sub
add
sub
lods
pop
sub
sar
and
ficoml
ds
jbe
clc
sub
stos
fidivrl
cmc
iret
call
mov
dec
outsl
sbb
cmpsb
sub
ficomps
insl
cli
xor
add
test
andl
cmp
insb
out
popf
inc
push
incb
sti
mov
jle
movsl
xchg
fwait
imul
jnp
dec
in
loop
mov
push
ret
lods
call
scas
cmpsl
popa
pop
rcl
jmp
sbb
pop
loope
stos
stos
dec
fcmovb
sbb
jnp
jmp
dec
std
shll
and
sub
pushf
fsubl
mov
les
mov
and
pop
ficoms
xchg
rolb
pop
stos
dec
fadds
clc
out
push
ret
mov
sub
leave
out
and
loop
rcrl
add
repz
mov
or
cmp
rcrl
shr
cmp
mov
popa
dec
in
push
cmp
push
fnstsw
push
or
xchg
jecxz
cmp
pop
inc
arpl
lret
faddl
sti
or
imul
push
sarb
sub
sbb
aad
fwait
push
in
xchg
pop
aad
and
into
rcr
cmp
imul
nop
in
ficoms
mov
test
rorb
roll
mov
pop
mov
inc
add
repnz
sbb
je
cltd
out
imul
lock
test
test
dec
mov
pop
pop
imul
mov
pop
cmpsl
stc
jmp
add
test
sbb
lcall
stos
and
imul
xor
add
ret
lds
jno
mov
aam
xor
adc
inc
inc
jmp
push
fcompl
in
mov
js
into
mov
aad
iret
sub
add
push
add
dec
gs
out
adc
or
push
icebp
xlat
sbb
out
iret
xchg
fxch
inc
hlt
cmc
xchg
jo
out
outsl
xchg
pop
push
sub
iret
dec
mov
xor
inc
rorb
leave
popa
xchg
arpl
test
jne
sbb
xchg
es
add
fsub
mov
inc
mov
sbb
mov
bound
push
inc
and
or
xor
inc
pop
aad
dec
dec
dec
in
dec
mov
mov
sbbl
dec
xor
loop
add
cmp
das
xchg
pop
and
loope
pop
fdivrl
sbb
mov
or
push
test
jge
divl
dec
mov
dec
lods
push
push
dec
or
out
and
push
fcoms
cmp
xor
pop
orl
fucomi
mov
popf
xchg
fwait
js
notl
ret
cld
repnz
jle
lret
xor
xchg
ja
std
jmp
mov
call
call
cmp
rcrl
in
xor
in
xor
pusha
jg
in
mov
xlat
jmp
pushw
jbe
fisubl
arpl
lea
sub
inc
rcl
into
mov
or
cmp
lods
cmp
fstpl
cmp
lret
aaa
cmpsb
add
jle
loop
lea
mov
push
lods
shrl
dec
in
outsb
pop
icebp
stos
pusha
stc
lods
push
pop
cli
push
dec
in
ret
movsl
sti
daa
sub
data16
fldcw
data16
sbb
mov
in
mov
lods
mov
inc
das
lock
dec
lods
dec
jmp
sub
jp
mov
pushl
push
test
popa
stc
iret
cs
or
test
arpl
sahf
xchg
ljmp
adc
jnp
subb
cmp
aas
mov
mov
rolb
pop
fcomps
push
inc
daa
outsb
xor
dec
cli
repnz
dec
cwtl
dec
or
and
ljmp
xchg
mov
fwait
lods
add
pop
aam
push
lds
hlt
jl
out
or
mov
mov
mov
sub
pushf
in
test
into
adc
inc
ja
das
xchg
ss
std
daa
iret
in
jno
pop
jns
push
inc
mov
add
dec
sub
mov
xor
in
ljmp
repz
loope
aad
shll
pop
inc
lea
loope
in
mov
ret
xchg
arpl
divl
pop
into
rorb
mov
xchg
and
and
aaa
nop
jmp
nop
repnz
mov
xchg
sbb
mov
and
lock
jecxz
cld
clc
push
pop
enter
cmp
adc
pop
jbe
neg
andl
xchg
pop
jb
cmpsb
xchg
fwait
and
rolb
mov
mov
lahf
sub
scas
pop
hlt
bound
pop
mov
cmovp
and
sarl
pop
insl
jmp
and
mov
fsubl
adc
and
imul
xchg
mov
sub
inc
packsswb
hlt
jnp
repz
dec
mov
imul
sbb
scas
dec
leave
sub
adc
dec
inc
inc
push
jmp
lods
jge
cli
nop
inc
and
mov
sub
movsl
popa
cltd
ljmp
shlb
inc
cld
fwait
pop
cltd
jle
sbb
mov
std
xchg
mov
cs
sub
mov
pushf
pop
daa
in
mov
add
ret
dec
add
pop
sti
mov
clc
adc
andl
sbb
loop,pn
push
loop
push
imul
push
sahf
sub
stos
mov
sub
push
lock
aaa
xor
sub
push
cmc
xchg
test
aad
stos
add
lds
dec
sbb
movsb
xchg
push
cwtl
das
mov
mov
jle
push
mov
sahf
ss
xor
loopne
imul
sbb
in
dec
aam
pop
lret
in
adc
in
pop
xorb
add
in
pop
in
les
orl
lods
sbb
subl
mov
arpl
mov
insb
jmp
or
pop
movsl
clc
repnz
inc
jl
adc
xchg
cmp
cwtl
ret
addr16
pop
sub
out
add
xchg
int3
mov
jnp
cmp
sub
inc
dec
rorl
lds
popf
add
mov
mov
call
ret
dec
xor
jns
lcall
mov
add
mov
out
aam
push
fmuls
xchg
jnp
iret
imul
into
jae
enter
adc
hlt
in
int
jno
push
fwait
mov
test
push
les
lret
jo
dec
push
mov
sbb
cmpsl
sahf
lret
xchg
outsb
add
outsb
imul
mov
out
or
or
insb
arpl
mov
out
int
insl
insb
lock
incb
xchg
add
mov
aas
test
insl
dec
pop
into
push
inc
repz
pop
cmp
xor
mov
pop
mov
mov
cwtl
jbe
add
hlt
in
cmp
cmp
jae
sbb
dec
ja
mov
fmul
jg
push
xchg
hlt
sub
push
dec
dec
xchg
cmc
sbb
xchg
xchg
push
jbe
ret
lods
ja
dec
mov
pop
cmp
stos
mov
adcb
fildll
push
hlt
aam
xor
mov
dec
stos
repnz
xchg
es
sbb
adc
mov
cmpsl
mov
inc
aaa
cmp
iret
pop
xchg
scas
movsb
test
push
push
out
xchg
mov
and
iret
cld
lcall
dec
dec
push
xlat
fnstsw
nop
daa
sbb
stos
leave
xor
adc
mov
fs
into
and
lret
fstps
xor
push
lods
cmp
cmc
xor
jo
test
jmp
and
cwtl
lds
ss
push
movsl
cs
cltd
dec
mov
and
cmpsb
in
add
mov
inc
pop
out
jb
leave
mov
or
pop
adc
loopne
ljmp
jge
aam
mov
xchg
in
jecxz
xchg
inc
jge
lret
pop
xlat
xorb
push
push
dec
loop
js
xor
cmpsl
outsb
or
jmp
or
mov
repnz
push
xor
popf
push
pushf
lods
fsubs
loop
movsb
dec
mov
jns
dec
sbb
clc
pop
outsb
sbb
and
rcll
jmp
rcrl
stos
pop
les
lods
into
in
pop
repz
xchg
dec
inc
jo
jae
mov
jo
dec
push
mov
and
sbb
mov
push
test
xchg
push
cmp
dec
iret
xor
out
fistpl
adc
pop
fimuls
push
mov
imul
je
jno
push
je
dec
xchg
and
mov
dec
jle
pop
xchg
mov
or
jbe
movsl
shlb
push
das
je
jl
inc
mov
mov
daa
sbb
cwtl
rcll
arpl
cmp
std
aad
add
arpl
mov
mov
push
cmp
les
add
or
inc
cmpsl
js
in
add
mov
les
push
cmpsb
inc
push
int
mov
sahf
add
xor
xor
arpl
fsubs
out
mov
push
movl
shlw
ja
clc
fwait
push
dec
mov
std
aas
adc
push
pop
xchg
xor
inc
lret
movsl
xlat
scas
test
push
add
test
in
mov
rolb
lea
lds
mov
mov
stos
xchg
or
stos
roll
sub
fisttpl
or
xor
pop
add
cmp
pop
jno
or
xchg
imull
adc
test
xor
mov
inc
add
fisubl
inc
xchg
hlt
and
shrl
jle
mov
ljmp
popf
jne
mov
inc
aad
sbb
lret
and
das
daa
test
mov
push
andl
les
inc
sbb
test
bound
and
scas
outsb
aaa
jg
and
add
aam
xchg
adc
sub
jmp
push
in
out
fistl
out
jb
fs
imul
lods
scas
insl
ss
sbb
cmp
int
mov
dec
je
xchg
ret
fcmovnu
or
push
imull
dec
mov
mov
jns
push
pop
xorl
push
jmp
cmp
or
push
mov
xor
adcl
data16
mov
xchg
pop
notl
test
push
push
push
mov
test
inc
test
cmp
aam
pop
fwait
daa
loop
and
cmp
loope
or
cmp
push
push
into
mov
jbe
cmp
pop
aam
aad
push
cmp
xchg
jmp
movsl
addb
sub
cmp
cmp
sub
xchg
movsb
icebp
out
movsb
xchg
into
cs
out
adc
fstp
out
lods
fwait
pop
xlat
pop
xchg
test
cmpsl
push
mov
test
stos
push
and
xor
mov
mov
jmp
jl
push
dec
add
push
dec
sbb
out
sub
xchg
or
sbb
shrb
and
xchg
add
sub
push
sub
popa
pop
mov
fwait
icebp
loope
push
aad
jae
lahf
fidivl
pushw
jno
add
jg
cmp
push
xchg
jbe
mull
pop
imul
loop
adc
jno
outsb
je
ljmp
adc
aaa
fmuls
xchg
imul
cs
ud0
dec
popa
orl
jno
or
lret
adc
sbb
or
lds
fisubl
rorb
and
psubb
out
push
test
adc
xchg
mov
loopne
movsl
and
int
jle
xchg
arpl
push
fstpl
inc
fcmovbe
inc
cmpsb
jo
ret
testb
pop
clc
jne
push
lret
jp
ret
cmp
stos
and
imull
pop
pop
mov
iret
movsl
xchg
jmp
insb
mov
adc
mov
loop
fwait
movsl
addr16
adc
lahf
cmpsb
into
in
ja
rol
mov
push
lea
mov
dec
insb
adc
leave
fisttpl
push
sub
xchg
mov
jp
or
dec
ror
aad
push
pop
adcb
jge
sbb
or
outsb
sbb
clc
sarb
wbinvd
adc
outsb
adc
sub
sbb
adc
inc
xor
xchg
jp
hlt
int
push
cmp
and
imul
fwait
cmpsb
or
dec
repz
aas
pushf
sub
push
lods
adc
add
pop
pop
inc
adc
stos
inc
insb
loope
and
add
cmc
pop
xchg
inc
adc
adc
pop
std
adc
dec
jb
pop
mov
sahf
fisttpl
mov
ss
push
cs
cmpsl
cld
pop
xlat
cmc
insl
iret
fucomi
jg
push
jmp
sbb
fwait
xchg
aas
xchg
and
pop
cmpsl
daa
jecxz
mov
dec
ljmp
fwait
sbb
loope
loope
test
in
pop
inc
cmpsb
leave
outsl
mov
dec
xchg
push
mov
and
xlat
not
es
lret
lods
call
dec
scas
fadds
imul
xor
cltd
lock
imul
xlat
movb
imul
xor
dec
stos
cmpsl
test
sarb
push
pusha
sbb
das
out
jmp
add
loope
jmp
std
cmpb
pop
inc
outsl
pop
xchg
scas
mov
adc
dec
xchg
push
push
leave
mov
xor
ja
out
cmp
push
add
push
mov
leave
jle
pop
mov
and
test
ds
xchg
adc
jge
sub
pop
adc
xor
mov
fwait
test
push
enter
pusha
cmpsb
sti
stos
or
mov
jo
out
inc
push
in
pop
adcb
cs
push
sbb
aad
lahf
orl
dec
xor
add
outsb
movsb
mov
lock
pop
sub
mov
not
jg
mov
call
mov
out
lods
push
adc
sub
sahf
fdivrs
adc
not
les
nop
adc
inc
jb
sahf
sub
cmpsb
fcomp
push
fiadds
mov
aad
cltd
sbb
idivl
das
push
push
movsb
pop
sahf
jle
lea
cmp
jmp
pop
imul
sbb
cmpsl
sbb
lods
rcll
mov
and
popf
notl
push
push
push
lret
xchg
dec
jo
mov
insb
sbb
push
mov
jbe
mov
daa
push
jne
out
lods
jae
lcall
stos
test
mov
pop
in
popa
outsb
pop
sub
lds
subb
int3
cmpsb
inc
cltd
mov
into
sub
mov
mov
cltd
jmp
enter
adc
lods
call
mov
pop
push
or
dec
mov
mov
cmpsl
cmp
cmc
xchg
jl
das
mov
mov
dec
jnp
repz
fcmovne
movsl
icebp
or
sbb
pusha
xchg
fcmovb
cli
int
inc
push
rclb
movsl
cmp
cmp
mov
inc
and
js
xchg
aas
mov
cmp
loopne
mov
sbbb
lahf
lcall
cmp
jg
inc
jns
mov
push
add
pop
insb
arpl
jo
andl
call
ret
push
xor
out
or
cmpsb
mov
pop
pusha
sbb
dec
push
insb
ja
repnz
pop
insb
or
cmp
mov
fdivr
ss
cmp
fsubr
jle
mov
into
shr
add
inc
stos
cmp
sahf
or
dec
inc
cmpsl
fcomps
xchg
cwtl
dec
dec
sbb
sti
pop
mov
in
mov
mov
je
ds
inc
rcrl
in
and
loope
xor
jne
jle
outsl
fimuls
imul
inc
pop
or
mov
int3
push
push
push
fucom
xchg
mov
cmp
out
xor
push
and
ja
push
inc
mov
xor
mov
xchg
call
scas
pop
add
mov
and
xor
or
jne
js
lods
add
daa
sbb
clc
test
aaa
jp
insb
cmp
mov
pop
or
imul
and
cltd
lods
xchg
fwait
insb
outsb
ficomps
mov
or
inc
aas
pop
pop
leave
sar
leave
decb
fsts
sbb
enter
mov
rclb
xchg
insl
into
addl
lods
sub
sahf
imul
mov
pushf
mov
dec
inc
mov
dec
call
jno
pop
xlat
xor
enter
mov
add
jno
aaa
rol
xchg
dec
addr16
and
jle
sub
sbb
test
xor
cltd
in
mov
movsl
xchg
sbb
iret
out
loop
imul
jb
xlat
fiadds
push
lea
es
call
stos
add
cld
sub
mov
outsl
aas
ficomps
jmp
daa
jnp
push
mov
mov
aaa
mov
ljmp
jb
jb
mov
add
sbb
out
call
cld
aad
iret
adc
lock
cmp
xchg
and
pop
inc
shufps
cmp
clc
push
scas
adc
in
insb
sub
stc
cmp
jmp
pop
dec
sbb
inc
aad
add
int
hlt
scas
pop
xor
or
mov
hlt
loop
add
out
xor
leave
es
div
xchg
ds
push
xlat
repz
mov
xor
clc
mov
inc
jp
mov
fildl
pusha
sar
adc
cmovns
aas
mov
add
add
sub
sbb
aas
cmp
stos
test
jle
or
aam
xor
and
in
lea
aas
in
loop
lods
neg
rorb
dec
xlat
gs
fsubr
out
cltd
and
movsb
out
inc
pop
fwait
inc
xor
xlat
sbb
jle
pop
inc
xchg
push
das
test
in
sub
into
sub
scas
data16
cmpsl
xchg
scas
xor
js
push
daa
test
aas
test
cmpsb
mov
cs
scas
push
cmpsb
inc
pop
mov
stos
scas
adc
std
xor
sarl
fcomps
mov
stc
inc
cmpb
cmp
push
dec
and
lea
dec
ret
push
mov
dec
push
into
iret
outsl
icebp
ds
call
cltd
shlb
xor
ja
mov
out
add
xchg
mov
add
push
or
fisubs
inc
mov
movsl
pop
popf
sbb
movsl
stos
mov
adc
aad
add
inc
es
scas
ja
push
out
jl
cmp
add
or
xchg
roll
imul
push
testl
popf
clc
aam
sub
je
in
sbb
push
adc
sbb
pop
dec
shrl
xor
out
xor
inc
mov
dec
xchg
test
loope
jmp
sarb
cmpsl
into
ds
push
sub
jae
loopne
imul
arpl
pop
xchg
repz
mov
mov
push
out
pop
dec
sub
fsubrp
mov
mov
into
xchg
adc
mov
cmp
or
add
cs
frstor
adc
inc
test
xor
adc
lcall
mov
js
or
jne
flds
mov
xor
push
sub
add
stc
negl
pop
push
lods
bound
push
pop
push
cmp
mov
sbb
mov
lods
mov
ret
mov
roll
pop
popf
xchg
xchg
sti
movsb
mov
lret
scas
xchg
xor
sub
dec
or
add
mov
inc
rcl
push
jbe
add
jmp
lds
mov
cmpsb
cltd
fwait
xor
clc
dec
inc
mov
insl
rolb
ljmp
or
jbe
pop
rcr
cmp
rorl
idivb
fs
repnz
fildl
adc
icebp
mov
call
imul
in
sub
fcoms
pop
mov
mov
inc
adc
sti
pop
popf
inc
cmpsl
scas
inc
pop
das
mov
clc
int3
aas
pusha
lods
sbb
cmpl
mov
icebp
mov
cmpl
fmuls
inc
into
mov
sub
mov
xchg
inc
pop
mov
lret
loopne
stos
sub
cmpl
mov
icebp
jne
stos
push
rolb
sub
ja
cmp
das
imul
test
test
xor
lea
lods
pop
popf
jbe
fstps
fisubrl
out
or
mov
pop
jl
lods
pop
in
sbb
pop
test
cmp
pop
pushf
cmpsb
pusha
in
xor
dec
and
inc
dec
mov
test
stos
and
fimull
aaa
inc
xchg
fcomps
add
mov
or
fldcw
or
push
lods
xor
and
lds
test
and
shl
cltd
or
addr16
fcmovnb
push
es
xchg
test
fdivrs
inc
and
jae
adc
sub
xchg
push
push
push
add
xor
call
and
sub
or
scas
out
adc
adc
or
dec
int
ss
mov
dec
stos
loope
inc
std
ret
imul
sbb
incl
cmp
push
xchg
movsb
mov
push
lock
pop
dec
cmpsb
mov
ss
cmp
xchg
into
mov
pop
add
push
jne
call
pop
enter
negb
movsb
fsubrp
cmp
lcall
or
je
push
jl
pushf
inc
push
jp
xchg
adc
inc
sbb
loopne
repz
imul
push
fwait
pop
adc
sbb
push
mov
dec
imul
adc
int
insl
iret
insb
data16
cmp
push
lock
imul
fidivrl
pusha
lea
and
sub
outsb
mov
nop
clc
pop
mov
pop
xchg
xor
cmpl
mov
imul
xor
loope
adc
hlt
jno
pop
stos
and
inc
xabort
cmpsb
insl
andb
movsl
pop
subl
jns
leave
enter
mov
mov
xor
push
xchg
push
or
dec
test
and
push
dec
xor
sub
mov
enter
test
adc
rcrl
pop
cmpsb
sub
push
test
mov
inc
orl
mov
pop
std
test
mov
sub
andl
call
push
mov
stos
jnp
les
stc
mov
maxps
fs
imul
fwait
lcall
pushf
mov
adc
cmp
add
adc
and
xor
adc
mov
push
sub
lret
ljmp
jmp
mov
mov
fnstcw
pshufw
adc
adc
lcall
mov
mov
pop
lds
add
arpl
adcb
les
pop
sub
adc
sbb
xchg
sbb
jmp
cmpl
cmpsb
in
xor
push
rolb
movaps
jge
and
js
add
out
lret
xor
iret
insl
flds
clc
mov
sarb
inc
sub
repz
shll
iret
or
dec
sbb
outsl
fs
inc
sbb
inc
mov
or
int3
scas
dec
jl
in
clc
jbe
lret
mov
outsl
pop
pop
rorb
add
addr16
lcall
repnz
sti
stc
pop
mov
cmp
jp
les
es
aas
shrb
pop
pop
cmpsb
dec
cmpsb
mov
dec
pop
adc
data16
sbb
jo
orl
inc
int3
aas
or
fwait
pop
push
and
test
push
cmpsl
xor
je
inc
xor
cmpsb
dec
sbb
xchg
cmpsl
ret
pusha
lret
roll
push
pop
ss
enter
pop
sub
jo
cwtl
mov
imul
xchg
push
pop
lahf
scas
add
jb
jo
cmp
dec
pusha
roll
imul
aad
pop
xor
cmp
sbb
mov
pop
ret
dec
leave
sbb
jo
push
aad
inc
fmuls
cmc
adc
in
mov
mov
aas
mov
insl
and
outsb
inc
dec
and
scas
adc
xchg
inc
dec
mov
aam
dec
int
jmp
xchg
stos
cmp
test
gs
movsb
cmp
out
subl
push
and
inc
cmp
push
andb
push
inc
push
mov
add
lods
ficoml
mov
pop
lock
movsb
inc
mov
jo
movsb
mov
popf
xor
push
or
mov
ja
icebp
out
push
push
jge
jmp
pop
in
mov
hlt
mov
add
add
mov
insl
pop
lahf
pop
cmp
pop
cs
jmp
popa
or
test
jo
jno
mov
push
pop
dec
int3
std
xchg
push
cmp
cld
dec
dec
sub
mov
cmc
bound
loopne
fisttpll
aad
mov
push
aaa
sahf
sti
test
push
fiadds
jmp
and
and
mov
pop
dec
insb
dec
sbb
out
test
pop
mov
push
sub
nop
push
cmp
outsl
push
test
pop
jg
and
in
negl
xchg
inc
imul
mov
popa
lcall
popf
je
clc
xchg
jnp
out
cld
cmpsb
cmp
xlat
inc
pop
arpl
lret
loopne
lock
les
push
repz
cwtl
mov
dec
pop
dec
pop
xor
cmpsl
add
inc
stos
fwait
xchg
push
pop
adc
fiadds
push
pop
xchg
push
jl
cmpsb
divb
xor
test
cmp
xchg
stos
adc
notb
push
cmp
movsb
push
dec
or
faddl
sbb
imul
inc
scas
pop
imul
inc
inc
test
pop
push
mov
fs
arpl
rolb
cli
cli
sbb
out
add
lcall
sbb
lahf
lahf
cltd
push
add
inc
sbb
aas
addr16
jb
outsl
shll
jb
ret
pop
push
xchg
sti
mov
push
and
out
fisubs
push
iret
inc
inc
test
cmp
ss
mov
mov
push
testl
cmc
sahf
hlt
test
push
js
jne
out
cmpsb
je
outsb
mov
icebp
add
ror
dec
stos
icebp
cmpsl
imul
xchg
and
mov
cld
sti
pop
lretw
outsb
pop
inc
je
lds
cli
pop
or
daa
jl
sbb
push
cli
aad
mov
cmpsb
mov
jbe
addr16
jnp
push
icebp
xchg
fdivrl
stos
std
in
lods
cmpsw
out
movsb
ds
adcl
cmp
push
fwait
lods
leave
fisttpll
movb
insl
pop
cmp
scas
add
dec
add
adc
lahf
fstpt
inc
mov
mov
sbb
lods
das
adcl
dec
aam
pop
pushf
xchg
sub
dec
cmp
lahf
lds
pop
mov
cmp
or
xchg
jp
rcr
pop
test
je
xor
pop
sub
adc
xchg
es
gs
sbb
jp
inc
lret
and
cli
push
stc
mov
mov
aas
sbb
stos
stos
sbb
sub
out
xor
xchg
je
enter
std
mov
je
es
jl
inc
push
fptan
out
dec
mov
mov
and
out
sbb
bound
lahf
xorl
inc
js
push
or
and
or
dec
call
push
lea
hlt
adc
inc
fs
pop
or
xor
sub
xchg
arpl
fcmovne
dec
movsl
repnz
scas
mov
adc
sbb
jnp
mov
dec
xchg
xchg
dec
jge
or
jmp
loop
and
mov
pushf
outsb
incb
xchg
orl
dec
jne
cmpsb
or
push
sub
cmpsb
lret
fisubrl
mov
leave
call
or
jge
xor
cs
out
and
testl
inc
xchg
lock
mov
test
les
dec
fs
aad
into
mov
movsl
in
sar
lods
xor
test
rorb
fwait
inc
mov
nop
inc
mov
divl
int3
push
push
fmuls
dec
xor
out
cmpsb
enter
jmp
sub
insb
adc
mov
xlat
outsl
les
aas
hlt
call
iret
lea
pop
scas
adc
in
mov
popa
or
ljmp
aad
stos
dec
ret
and
cmpsb
repnz
sbb
test
lcall
test
inc
sti
xchg
xchg
stos
enter
stos
in
scas
bound
cmp
std
pop
cmp
sbb
test
push
lcall
adc
adc
dec
out
jae
and
lea
xchg
and
xchg
push
dec
add
mov
jge
push
or
in
sbbl
les
mov
repz
test
fucomip
and
loope
xor
aad
test
pop
jmp
sbb
cmp
cmpsb
sbb
adc
inc
dec
shll
mov
out
jo
adcl
dec
rcrb
pop
or
imull
pop
sub
push
test
fldcw
shll
inc
int
sarb
or
sub
dec
mov
lcall
inc
ss
lret
je
xchg
jle
push
mov
int
add
mov
and
mov
jg
pop
into
out
dec
aad
into
in
mov
adc
jne
data16
ficoml
les
scas
cmpsb
jecxz
cltd
aas
aam
bound
dec
xchg
rcr
or
sub
in
inc
fisubrl
inc
mov
xchg
loope
pushf
scas
or
out
gs
mov
sub
sbb
inc
mov
ja
mov
lret
pop
lret
popf
cmp
or
enter
mov
bound
sbb
out
xchg
sbb
icebp
repnz
dec
adcb
lret
dec
leave
loope
mov
and
and
scas
jle
out
xchg
test
arpl
pop
dec
cmpsl
pop
and
xor
inc
inc
push
or
rcll
jp
outsl
inc
out
mov
xor
fs
mov
sub
xor
outsb
insl
add
push
push
cmpsb
ljmp
imul
jg
in
push
push
sbb
sbb
inc
pusha
stos
rcll
pop
out
push
mov
mov
call
cld
test
aad
add
ljmp
mov
jg
and
insb
xchg
imul
jno
mov
std
jg
negl
xchg
mov
aad
inc
and
fnstenv
mov
test
ss
in
adc
xor
out
insl
iret
pop
jnp
jmp
and
out
mov
jge
xchg
pop
imul
test
push
arpl
cmc
mov
sbb
sarl
test
and
ljmp
fdivp
sbb
mov
dec
popa
insl
mov
roll
scas
and
and
and
fdivl
ja
clc
leave
addr16
movsb
sub
and
mov
jo
and
bound
cld
ja
xchg
outsb
daa
out
sti
xchg
mov
mov
fadds
jae
outsb
movsl
in
dec
dec
shlb
inc
cmpsl
out
adc
sbb
mov
mov
sub
xchg
cmpsl
adc
aam
or
fists
pushf
mov
jmp
movsb
lahf
mov
popl
popf
test
imul
push
sub
adc
test
imul
dec
daa
jno
cmpsl
sub
sahf
xor
push
cmp
aad
test
xor
testb
enter
xor
mov
pop
jecxz
xor
mov
mov
sub
pop
adc
cmp
adc
int3
dec
or
jg
insb
leave
in
enter
pop
adc
cmp
or
cltd
jae
aam
bound
inc
stc
inc
test
fnstsw
lods
jg
inc
sbb
sbb
das
cmpb
inc
movsb
mov
aas
psubsw
push
std
out
aad
jp
insb
xchg
mov
dec
or
scas
std
ror
lret
adc
mov
negb
mov
inc
or
aad
jne
dec
mov
fdivs
dec
ja
in
xor
sahf
inc
dec
mov
repz
in
lods
sub
mov
sbb
ds
mov
xchg
sbb
insb
push
push
shll
ds
jmp
pop
xor
mov
stos
push
xor
push
jecxz
or
inc
stos
jl
xchg
dec
jne
mov
jecxz
aam
xor
mov
dec
das
dec
dec
cld
in
stc
xchg
fimuls
fstps
xor
xchg
push
pop
dec
divl
mov
inc
test
fstl
push
inc
scas
cmc
push
data16
or
addb
cmp
insb
icebp
scas
push
repnz
mov
bound
call
cltd
lds
mov
addl
sub
mov
cltd
sbb
and
insb
sub
mov
insl
mov
mov
add
imul
xor
loop
les
loope
hlt
das
add
jno
push
inc
and
movsb
adc
popf
icebp
shlb
in
and
ja
jnp
cltd
mulb
lock
psubd
mov
lcall
push
and
daa
dec
xchg
sub
cld
pop
sub
aaa
stos
stc
fiaddl
mov
stc
xor
cmp
into
aaa
cmc
orl
sbb
inc
ss
sbb
mov
sbb
rolb
jg
jmp
fmuls
inc
dec
jge
cli
push
add
ljmp
xlat
daa
fstpl
test
flds
jbe
clc
rorb
xor
jne
andl
aaa
out
push
imul
scas
repnz
es
cld
sub
xor
push
loopne
xor
addl
incl
sub
in
or
jg
add
xchg
rcr
lret
mov
xor
icebp
aas
lahf
mov
outsb
lret
jecxz
xchg
cmpsb
dec
roll
dec
lock
sub
jg
pusha
into
xchg
es
xlat
cli
push
xchg
pusha
sbb
jae
outsl
inc
pop
dec
fimuls
pushfw
xor
and
test
pop
and
sub
hlt
ljmp
ret
test
outsl
out
clc
add
cwtl
je,pn
movsl
test
and
or
sti
mov
test
or
jae
and
or
data16
inc
icebp
push
xorl
xor
dec
sbb
aaa
cmp
test
pop
in
cmpsb
dec
sbb
dec
xor
or
or
in
into
or
cmpsb
fstpl
imul
scas
sub
into
hlt
add
and
xlat
lret
xor
scas
pop
lea
stos
inc
shlb
pop
pop
adc
pop
je
xchg
adc
jg
mov
dec
push
and
xor
and
sbb
jg
sbb
pop
xor
test
sbb
pop
stos
arpl
fs
xlat
inc
mov
jg
shll
push
xchg
lods
jge
popa
and
movsl
sub
test
shll
and
rclb
or
and
inc
and
adc
mov
lahf
es
lods
push
push
jg
xchg
mov
dec
sbb
cmp
dec
pop
pop
dec
ds
pop
mov
jae
rclb
dec
xor
xchg
inc
stos
mov
imul
outsl
sbb
fisttps
fldcw
jp
or
jae
xor
pop
insb
jp
pop
jae
push
push
in
mov
pop
imul
lods
push
in
daa
add
lods
inc
xchg
data16
out
mov
cli
push
sbb
or
mov
loopne
jbe
adc
loope
cmp
sarb
popa
push
aad
xor
hlt
stos
pop
ljmp
fldenv
ds
mov
and
mov
test
out
fs
clc
call
jbe
mov
inc
nop
inc
fsubrs
int
aad
fwait
jno
mov
enter
fisubs
and
push
lods
test
mov
xor
adc
jbe
shrl
ja
div
dec
pop
cs
sbb
orl
mov
aad
test
push
insl
xorl
enter
daa
test
adc
bound
cmpl
mov
scas
insb
add
nop
pushl
mov
andb
ljmp
cwtl
add
call
cltd
int
fldcw
and
dec
and
jge
cmpsl
dec
pop
mov
sub
lods
fabs
int3
mov
fmuls
subl
dec
test
popw
xor
add
loope
add
cwtl
add
mov
dec
cld
cmp
pop
dec
fistpl
movsl
push
shrb
and
addr16
les
popa
dec
mov
sub
pop
sahf
mov
push
iret
hlt
insl
ficomps
mov
cmp
cltd
mov
ret
mov
jae
aaa
or
jg
clc
or
xchg
fisttpll
mov
add
int
test
push
dec
jmp
scas
imul
lods
pop
and
rorb
movb
mov
into
dec
mov
jmp
ss
lods
mov
mov
cmc
inc
cmpsb
xor
jae
out
in
inc
outsl
pop
and
cltd
repz
imul
xchg
cmp
pop
or
adc
lods
mov
mov
fsubl
jle
les
jge
sbb
aad
dec
sub
jp
mov
cmp
xchg
sbb
ret
fs
push
ljmp
fdivrl
cwtl
push
push
xchg
lods
out
insl
lcall
out
jle
sbb
arpl
in
ljmp
lret
adc
ljmp
out
mov
sub
stos
and
mov
out
in
inc
loopne
dec
mov
fwait
cwtl
jge
lods
sub
inc
sub
sub
shlw
shlb
cld
out
daa
test
test
fildll
subl
inc
ljmp
mov
iret
ljmp
cmpl
popa
adc
fisttpl
fistps
xlat
repnz
out
jp
out
lds
or
arpl
mov
stos
adc
popa
xlat
and
in
push
outsb
push
fwait
sbb
xor
xor
test
adc
xchg
adc
push
fistl
jecxz
ror
xor
sub
fistpl
cwtl
ficompl
mov
fidivs
sbb
shl
loop
loop
push
lds
jge
inc
adc
jmp
test
and
loop
js
cmp
dec
ficompl
enter
fcmovb
out
dec
shll
dec
pop
push
pop
mov
mov
push
movsl
xchg
push
push
push
in
aam
stos
add
inc
add
aad
pop
add
xchg
out
xor
pop
cwtl
frstor
addr16
ror
inc
cmp
mov
and
mov
pop
xchg
mov
mov
movsl
or
pop
push
and
ret
xchg
sbb
test
cmp
outsl
aas
jecxz
mov
sahf
push
sbbl
mov
or
das
shll
lret
push
cld
mov
xlat
mov
int
sub
mov
fisubrs
pop
jbe
xlat
push
sahf
cwtl
mov
lds
scas
sarb
loopne
mov
rorl
xchg
movsb
bound
popf
mov
mov
jne
push
pop
push
leave
shl
shlb
nop
add
rclb
ljmp
in
ds
arpl
test
jns
arpl
pusha
int3
ss
out
cmp
test
or
adc
mov
mov
mov
repnz
ja
cmp
iret
loope
in
inc
ret
cmpsl
rclb
ljmp
jmp
adc
push
push
add
inc
jne
push
call
pushf
test
loop
pushf
push
push
in
cmp
push
sahf
fneni(8087
in
cmp
and
adc
mov
adc
inc
popl
xchg
jmp
push
leave
hlt
and
xorl
jb
mov
repz
lahf
das
adc
dec
sti
ljmp
or
out
mov
sbb
mov
loope
adc
subb
pop
cmc
lods
push
xchg
lods
pusha
adc
dec
jae
cmp
mov
and
and
mov
arpl
jno
sbbl
dec
addr16
stos
jge
and
clc
outsl
test
mov
push
sub
mov
pop
mov
adc
pop
jg
jecxz
cmp
pop
sub
cmc
pop
xchg
inc
sti
and
les
push
aaa
cmp
push
lret
das
xchg
into
xor
add
xchg
cld
and
call
dec
std
mov
imul
aad
push
pop
shll
add
test
aam
movsl
scas
dec
cmp
cltd
inc
xchg
pop
int
sbb
xor
push
xor
insb
jnp
call
out
sbb
xor
dec
xchg
mov
repz
in
jno
mov
cmp
mov
fisubrl
or
adc
pusha
outsl
xchg
jns
and
out
push
es
mov
dec
xchg
mov
cmp
cli
push
xchg
mov
prefetchw
cld
mov
ss
cmp
ja
data16
sub
mov
cli
ficomps
cmp
sub
sbb
push
lods
iret
stos
xchg
ljmp
stc
out
subl
aad
fistpl
dec
lahf
xchg
xor
out
in
es
imul
pop
ficomps
sub
or
inc
xchg
jmp
das
cld
fildl
pusha
jb
lods
sbb
sarb
or
sbb
les
int
pop
out
jmp
sub
xchg
dec
pslld
pop
test
sub
cwtl
int3
adc
pop
ds
xchg
mov
sbb
pop
jge
aad
lahf
aad
sub
movsl
test
mov
pop
ja
add
inc
cwtl
stos
mov
movsl
gs
push
lahf
leave
or
dec
pop
cli
sahf
xchg
jge
movsl
and
shll
inc
lea
lret
out
ds
mov
or
inc
movsb
push
mov
fcmovne
in
pop
or
mov
sbb
jb
stos
sbb
pop
outsb
xchg
sti
pop
out
dec
xchg
mov
loopne
ljmp
int
in
jecxz
xchg
jp
and
aam
and
inc
movsb
sub
flds
xchg
dec
insb
js
in
push
shll
into
pop
mov
cmpsb
andl
fsubrs
or
jne
pushf
into
stos
negb
fisubrs
pop
stos
loope
xor
cmpsb
dec
pop
push
cld
std
insl
mov
out
dec
fwait
xchg
push
negb
push
out
and
cmpsl
mov
lcall
dec
pop
cmpsl
pusha
cmp
shl
in
out
inc
mov
sbb
cmp
les
cmpsb
jge
sahf
sbb
lcall
inc
sub
mov
in
test
das
mov
xchg
pop
xchg
or
sarl
or
sub
aam
jp
lret
subb
mov
dec
adc
cmp
inc
pushw
mov
fldl
xchg
mov
aaa
cwtl
push
rcrl
pop
xor
xchg
cmp
mov
out
inc
stos
jns
jne
dec
jno
xchg
cmp
or
cltd
stos
cmp
pusha
in
test
dec
cmp
lret
imul
jmp
aad
iret
jns
mov
mov
mov
pop
outsb
enter
inc
cmovns
aam
mov
inc
lcall
jae
mov
inc
popf
bound
dec
fwait
out
addr16
jo
pop
pop
arpl
out
stos
out
sarb
mov
pop
push
outsb
test
jae
sbb
inc
and
lahf
rcrl
jmp
push
mov
out
pusha
push
push
adc
cmp
faddl
sub
inc
inc
clc
push
xchg
stos
addr16
mov
stos
lret
dec
das
sbb
or
int
notl
adc
out
sbbb
cmp
push
cs
mov
addr16
mov
mov
in
add
dec
sbb
cli
inc
insl
xchg
add
les
lea
jno
fwait
xchg
add
push
lahf
mov
je
push
into
adc
inc
mulb
jo
adc
inc
outsl
fiadds
mov
stos
insl
push
add
cld
cmc
adc
mov
xchg
xchg
xchg
cmpsb
add
daa
xchg
add
push
xor
lcall
or
and
popa
push
ss
mov
add
jne
lods
lods
movsb
xchg
cmp
inc
pusha
adc
push
ds
repz
xchg
pushf
jno
mov
das
cmp
adc
inc
scas
sub
mov
lods
dec
leave
push
aad
aaa
jl
adc
lret
mov
aam
ja
jae
in
xchg
mov
dec
xor
hlt
inc
push
sarb
dec
inc
lcall
add
and
add
pop
lahf
into
arpl
xchg
jge
iret
xor
jbe
lods
dec
lahf
and
loope
sub
in
mov
pusha
inc
jnp
xchg
and
push
mov
xor
insl
loopne
push
jns
jno
les
nop
mov
mov
push
icebp
dec
add
lea
daa
dec
dec
xchg
or
push
stos
cli
add
lock
xor
push
sbb
mov
mov
sbb
pop
mov
xchg
lret
pusha
inc
lahf
pushf
adc
lods
inc
sbb
in
mov
ret
mov
int
out
std
fcomps
cmpsl
imul
mov
xchg
adc
and
into
stc
test
xchg
clc
das
push
insl
andl
fbld
inc
xor
cs
mov
cwtl
mov
push
rcrl
scas
ret
xchg
lock
jmp
pop
mov
mov
jg
mov
dec
in
cld
maxps
test
pop
pop
sub
sahf
bound
insl
in
pop
popa
pop
out
ret
push
cmpsb
xchg
xor
push
daa
dec
lods
insl
or
mov
rorb
stos
cmpsl
dec
mov
out
cmp
xlat
jmp
mov
xor
in
pop
dec
cwtl
dec
insl
dec
daa
jmp
adc
stc
aaa
sti
ret
or
sbb
cmp
push
mov
xor
addr16
fsubrl
aaa
repz
pusha
xor
and
ret
mov
aas
and
sbb
jl
xor
mov
pushf
lock
push
outsb
sub
xchg
repz
cmpsb
push
push
cmp
insl
cmp
dec
stos
inc
je
and
push
sub
dec
xchg
rolb
add
xchg
orl
test
jnp
call
xchg
push
loope
sub
mov
cmp
int3
sub
mov
outsb
cmp
dec
incl
out
push
clc
lods
sbb
andb
mov
mov
iret
out
jg
popa
sub
lods
or
int3
dec
shlb
filds
mov
mov
flds
test
fidivrl
mov
mov
das
sbb
leave
jnp
imul
and
lahf
sub
jge
das
loope
jbe
aam
addr16
sub
push
mov
shlb
aad
sbb
sub
sub
movsb
mov
pop
mov
push
sbb
jmp
xchg
stos
xlat
imulb
mov
xchg
pop
xchg
mov
mov
int3
aaa
aas
call
int3
and
cmp
enter
pop
mov
xchg
mov
sub
xchg
mov
les
push
xlat
mov
fnstenv
shld
cli
fiadds
imul
sub
push
push
lods
jmp
dec
repnz
mov
xchg
sar
jecxz
div
enter
aad
add
fisubrs
aaa
dec
ss
mov
stos
push
lea
and
fwait
popa
and
push
je
mov
push
mov
testl
mov
add
stc
out
js
jmp
outsl
rclb
int3
mov
adc
pushf
pop
jne
loop
sub
add
add
dec
cmpsl
js
inc
sub
std
jnp
bound
jmp
sahf
dec
js
push
pop
sbb
loopne
or
mov
jo
out
cmp
sti
cmp
pop
xor
stc
cmp
and
addr16
mov
test
pop
ja
push
arpl
inc
adc
mov
dec
insb
cltd
mov
sbb
insl
rclb
sti
add
ss
jb
xor
mov
add
dec
sbb
fsubp
cli
dec
xchg
jae
or
xchg
push
mov
aaa
xor
icebp
test
push
test
lods
imulb
stos
leave
cmp
xchg
mov
movsb
je
pop
mov
sub
add
push
and
pop
or
xchg
mov
lret
pop
in
adc
pop
mov
aam
adc
or
pop
sub
andb
pop
mov
in
int
sub
mov
imul
adc
jbe
jbe
push
xchg
jle
sbbb
lds
test
xchg
or
lods
and
xor
outsb
jmp
cmp
stos
jg
pop
xchg
insb
adc
sbb
adc
lcall
dec
push
xchg
cmp
or
mov
aam
fidivs
mov
in
add
fsubp
ss
ljmp
pushf
mov
lock
pushf
pop
popf
mulb
ror
out
sbb
jl
ret
lock
out
daa
sbb
scas
and
out
test
daa
lahf
fisubrl
pusha
inc
mov
scas
mov
push
out
out
scas
fisubrs
out
into
mov
testb
and
cmp
call
fwait
lods
in
xor
imul
fneni(8087
test
push
xchg
cmp
stos
fisttpl
sub
scas
repnz
cmpsl
lahf
sbb
fisubrs
subb
jmp
cmp
and
lret
test
or
loopne
cmp
loope
arpl
sbb
or
je
test
mov
jbe
scas
add
inc
aad
int3
loopne
scas
sarb
cmpsb
pop
or
jl
shl
xor
loope
cmpsb
pop
jns
jmp
cli
sarb
dec
adc
lods
push
cmp
lea
mov
lods
sub
scas
rcll
ret
jecxz
stos
xchg
cmpsb
les
mov
push
mov
enter
icebp
dec
outsl
sti
notb
jae
test
add
test
sbb
xchg
and
adc
push
cmp
and
inc
rcrl
add
shrl
pushf
xor
addr16
gs
inc
lahf
cmp
cli
out
jb
push
test
nop
mov
lret
rorl
jg
pop
mov
nop
jle
in
add
pusha
mov
and
cmp
sbb
in
lcall
popa
insl
pop
cmc
into
mov
mov
add
mov
inc
lret
sahf
sbb
push
lds
aaa
ret
test
in
and
cmp
pushl
xor
dec
mov
xchg
loope
movsb
jmp
shl
shl
aaa
fnsave
rcl
js
stos
inc
imul
mov
cmp
sbb
sbb
sub
mov
out
ret
bound
stos
mov
insl
and
cmpsb
cmp
iret
repnz
dec
pop
xchg
xchg
in
mov
fiadds
pop
inc
scas
insl
sub
pop
rclb
aaa
test
popa
add
inc
ret
add
aaa
rcll
je
mov
mov
xchg
movsl
xlat
add
mov
loop
inc
pop
xchg
stc
out
stos
ljmp
dec
mov
scas
dec
and
adc
dec
xchg
aaa
scas
aad
fidivrs
pop
sub
int3
out
sub
inc
stc
lds
movsl
jmp
mov
aas
stos
pop
imul
jbe
movsb
arpl
pop
pusha
xor
add
pop
aam
push
add
lcall
push
jnp
push
add
xor
loopne
pop
mov
aas
jecxz
jg
std
xchg
dec
sbb
and
cmpsb
nop
push
sbb
add
sub
repz
inc
adc
xchg
sub
sub
push
dec
mov
out
push
fcoms
sbb
pop
cwtl
clc
in
imul
xlat
jg
mov
push
insb
test
jl
jbe
arpl
sbb
mov
imul
and
pop
dec
mov
and
xor
daa
adc
and
inc
gs
xchg
mov
in
mov
inc
mov
loop
mov
orb
mov
mov
xchg
fsub
in
push
sub
shll
in
mov
fsubs
mov
out
aam
scas
dec
sbb
sbb
icebp
fldcw
daa
mov
repnz
cltd
pop
cli
arpl
cwtl
les
stos
cmc
dec
mov
sbb
sub
cwtl
lods
dec
jmp
inc
mov
xchg
nop
imul
je
xlat
les
inc
pop
fcmovbe
movsb
cwtl
pop
mov
push
popf
test
addr16
mov
xchg
rcl
sbb
and
imul
pop
leave
mov
xchg
push
ret
sti
push
cli
mov
cmp
push
enter
inc
mov
sbb
cmpb
or
out
sub
jl
test
clc
mov
dec
xor
sbb
jnp
stc
iret
push
pop
sub
push
fnsave
stos
cmc
lock
bound
mov
pop
enter
sbb
or
fwait
xchg
pop
rolb
aas
clc
stc
cmp
and
ds
gs
jmp
loope
cmp
xor
inc
dec
pop
dec
pushl
inc
rcr
sahf
mov
add
mov
ljmp
in
or
sbb
std
cmp
pextrw
mov
lock
rcll
subb
or
imul
inc
lds
stc
popa
clc
mov
add
mov
nop
pop
sbb
or
mov
sbb
leave
ret
add
sbb
aad
mov
jg
push
fdivs
lret
mov
pop
test
popa
push
test
jg
xchg
mov
movsl
scas
inc
xchg
fdivrp
and
dec
fldl
or
cmp
and
int3
cmp
mov
jns
stos
out
lock
movsb
into
cmp
movsb
xchg
and
leave
cltd
lea
ljmp
in
mov
int3
ss
jecxz
fstpl
cmc
push
mov
xchg
inc
sbb
pop
pop
movsl
out
insl
leave
push
and
inc
shll
icebp
mov
das
imul
lea
and
mov
xchg
lahf
hlt
jbe,pt
repnz
popa
sbb
popf
repz
adc
xlat
test
push
xchg
inc
or
cmpsb
jl
cmpsl
imul
daa
push
mov
movsl
and
sub
out
dec
xchg
sahf
dec
leave
xlat
orb
cwtl
mov
jbe
sub
inc
pop
scas
push
jmp
adc
inc
and
in
add
or
nop
rolb
jo
sarb
scas
and
ss
aaa
outsl
ss
xchg
sahf
adc
out
sbb
push
cld
aad
fwait
ja
pop
mov
jl
into
pop
dec
dec
into
push
dec
dec
fimull
adc
fcomps
nop
mov
lds
insl
clc
jmp
sub
out
add
mov
cmpsb
mov
push
adc
cmp
push
xor
mov
add
inc
add
mov
mov
sarl
and
dec
adc
cs
push
jo
hlt
jg
cld
pop
cmp
adc
fdivrp
sbb
std
sub
xor
push
inc
repz
xchg
push
or
lods
lods
sbb
jae
sub
repnz
cmp
dec
cmpsl
mov
xor
and
out
pop
pop
jbe
xchg
movsb
mov
and
mov
in
cltd
mov
mov
push
imul
jns
popa
adcb
dec
add
xchg
pop
cmp
ljmp
testl
jge
icebp
cmp
test
mov
or
pop
out
cmp
mov
add
jbe
divl
xchg
cltd
das
jns
inc
lret
loop
xchg
shrl
rcl
sub
mov
lods
adc
jecxz
hlt
dec
cmp
cmp
cwtl
loop
or
mov
dec
xchg
out
repnz
mov
scas
es
shlb
inc
int3
loop
add
incb
daa
cmp
stc
xor
test
jge
ja
mov
in
lret
push
xchg
pop
adc
in
or
pop
push
dec
dec
and
and
sbb
sar
aam
movsl
lock
sahf
into
lods
mov
cmc
cmp
sbb
dec
loopne
sub
inc
movsb
or
jbe
negl
cmp
iret
inc
lods
mov
ljmp
in
and
gs
sub
out
leave
pop
ljmp
add
push
jmp
push
popf
bound
jp
dec
imul
mov
aas
je
mov
das
mov
sbb
cmp
or
mov
xor
call
fldt
xchg
in
in
xor
iret
daa
fimull
pop
inc
jg
pop
scas
loope
xchg
jle
xchg
or
pop
pushf
in
add
pop
mov
xchg
and
pop
add
push
adc
out
movsl
xchg
repnz
nop
jo
and
inc
or
mov
pop
in
adc
iret
fistps
inc
mov
mov
jg
aad
fmul
sbb
sub
dec
cmc
xor
js
es
dec
pop
sub
dec
pop
int
andl
aaa
adc
and
add
in
fisttpll
popf
daa
dec
in
sbb
and
fst
sub
pop
mov
inc
and
xor
jno
das
shll
in
sub
xlat
out
test
xor
pop
dec
inc
test
xlat
push
sarb
xchg
push
mov
dec
mov
rcrl
gs
rcrb
lahf
int3
xor
dec
push
sti
nop
xor
sbb
mov
or
inc
sti
inc
inc
rorb
adc
xor
lea
cmp
lret
mov
sub
pop
dec
std
mov
adcb
rcl
jg
pop
xor
pop
cmp
push
adc
leave
movsl
or
jmp
pop
mov
sub
lahf
mov
cld
push
out
and
and
std
fsubrl
or
iret
mov
ret
xor
inc
mov
nop
sbb
out
movsl
leave
adc
mov
mov
ret
sbb
aas
lahf
cmp
call
jmp
ret
sbb
repnz
sub
push
pop
sub
decl
push
inc
cmpsb
dec
push
les
jge
jae
std
aad
mov
xor
mov
mov
push
in
imul
or
out
pop
sbb
jno
xlat
out
outsb
gs
xor
fcompl
icebp
cmp
jmp
ljmp
les
mov
mov
pusha
xchg
aas
aas
mov
or
bound
stos
jne
shl
aaa
pusha
les
pop
popa
or
or
lock
cmp
fwait
add
js
hlt
cli
fistpll
jmp
fists
shlb
xor
iret
push
je
lahf
sub
sub
pop
mov
or
push
jge
daa
fisubrs
test
mov
ds
movsb
gs
jae
inc
icebp
pop
sub
loop
dec
xchg
js,pn
inc
push
pop
ljmp
pop
cmc
repz
xor
mov
mov
pusha
sti
lods
jmp
loopne
xchg
cmp
sub
pop
inc
xchg
lahf
and
dec
gs
ss
cwtl
cltd
stc
xchg
jo
clc
cmp
das
cli
dec
loope
aas
pop
out
dec
dec
sub
popf
mov
push
jmp
lods
mov
out
jae
jecxz
jge
filds
adc
lds
xchg
cli
dec
mov
andb
enter
mov
sbb
xchg
inc
test
testb
cmp
fldl2e
out
xor
dec
dec
push
adc
and
pop
mov
cmp
pop
sub
xor
jne
or
mov
jb
pusha
imul
xchg
xchg
push
gs
jecxz
fisubrs
sbb
cmp
movsl
lret
cmp
mov
lahf
call
lea
rcrb
sbb
xor
mov
pop
add
dec
ror
dec
dec
xor
jns
mov
test
add
pusha
imul
in
rol
data16
test
push
xchg
dec
dec
stc
xchg
es
addl
dec
mov
xchg
iret
cmp
std
jnp
iret
cmp
mov
xchg
pop
pop
mov
les
mov
shr
jno
xchg
sub
sti
xchg
dec
or
and
test
movsl
enter
push
rcrb
shrb
add
push
clc
bound
mov
push
pop
lock
std
xchg
lock
movsb
xlat
mov
aas
ret
cs
fld1
sahf
xor
dec
aaa
stos
fadds
les
aaa
or
or
mov
jnp
mov
cmpsl
js
pop
cltd
movsl
fsubrl
aas
mov
push
clc
and
xor
lahf
dec
cmp
mov
mov
adc
jno
xor
and
pop
aad
into
cmpsl
lahf
add
sub
inc
rorl
jnp
xchg
or
es
mulb
dec
jle
lret
push
mov
push
xchg
enter
clc
fmull
push
in
clc
nop
jp
inc
mov
pop
dec
mov
fs
lret
mov
or
push
and
ss
leave
xchg
pusha
push
lea
int3
test
out
inc
jnp
nop
neg
and
mov
in
jle
fistpl
sbb
sbb
clc
jns
stos
cmp
cwtl
sub
cmp
repz
repnz
xor
in
mov
lea
push
jbe
aad
sub
xlat
lock
out
insl
inc
inc
cmpsb
sarb
push
pop
int
pop
test
in
xchg
xor
in
inc
fs
sbb
jbe
sbb
xchg
pop
sbb
dec
jmp
imul
pop
pop
cmpsl
or
mov
sbb
jg
loope
push
jmp
dec
mov
enter
js
mov
loopne,pt
shrl
nop
notb
sbb
mov
sbb
inc
add
fldl
imul
jg
repnz
xor
ficompl
test
dec
add
xchg
out
rcrl
mov
shlb
push
and
into
adc
sub
pop
outsb
add
popf
xor
dec
insb
ljmp
fstl
in
cmp
push
bound
aam
push
shlb
lods
push
jge
es
cmp
pop
movsb
shl
push
adc
das
inc
in
push
mov
in
mov
fisubrl
je
dec
addb
jae
jns
shrd
mov
nop
lds
in
mov
pop
ljmp
push
bound
jno
jbe
fstp
shr
inc
mov
clc
fwait
das
sbb
add
bound
cwtl
ja
into
pop
dec
jnp
loop
jl
pop
mov
jo
xor
sub
jno
and
imul
mov
cmovge
nop
les
addr16
or
cmpsl
inc
fs
xor
cli
ja
or
dec
test
inc
dec
adc
xor
cli
inc
addr16
push
pop
cmpsl
in
cmc
aad
sbb
xchg
lock
je
aad
shlb
xor
in
jl
xchg
pop
insl
adc
lret
pop
imul
orl
push
xor
and
mov
mov
jg
jecxz
sbb
jne
test
in
mov
push
aad
and
in
or
mov
jl
sub
stos
mov
jno
mov
or
xchg
shrb
fisubs
popa
jne
and
sbb
jl
gs
dec
loop
sub
je
notl
push
cmpsb
or
pop
lahf
sti
addr16
cmc
pop
fsubs
movd
aaa
mov
dec
shll
cmpsb
adc
and
out
cwtl
lods
or
clc
in
vhaddps
mov
jge
mov
jmp
jne
fwait
mov
out
cmp
ja
push
pop
mov
in
std
push
sar
iret
in
loop
lea
mov
sbb
movsl
jge
sub
push
pop
dec
cmp
jmp
call
repnz
pop
xchg
adc
lret
imul
sarb
fstps
push
mov
cmp
sub
push
pop
cmc
mov
outsb
or
orb
dec
inc
sahf
push
dec
pop
call
out
cltd
loopne
inc
or
imul
popf
rcrl
push
rclb
into
jmp
pop
push
mov
jns
mov
sahf
insb
mov
in
nop
stc
xchg
mov
xchg
lods
je
aas
rep
into
fdivl
cmpsl
loopne
movsb
in
lret
dec
xchg
loope
test
imul
xor
fdivp
adc
and
icebp
loop
pop
pushf
in
xor
dec
cmp
pop
mov
shlb
pop
push
jae
mov
push
movsl
test
pushl
mov
int3
mov
and
pop
mov
add
inc
xchg
dec
add
sub
sahf
int
pusha
stos
push
mov
cmp
je
pusha
test
mov
nop
fldenv
psubq
add
and
jmp
fbstp
inc
pop
inc
or
lahf
aad
std
sbb
in
cs
mov
push
mov
dec
xchg
fwait
xchg
iret
dec
inc
push
fwait
mov
cmp
jnp
fwait
lods
cld
or
mov
dec
push
or
es
test
pushf
daa
cmp
and
cmpsb
loop
xlat
iret
lahf
sub
mov
out
xchg
test
ljmp
sbb
in
push
in
scas
je
adc
sbb
out
int
test
bound
jmp
jno
pushf
dec
mov
jo
mov
or
je
adc
pop
sub
inc
divb
add
push
pushl
pop
sub
adc
mov
jb
movsl
lcall
or
leave
dec
dec
bound
jmp
sbb
das
shll
and
cli
fisubl
dec
aad
jl
sbb
lds
dec
rorb
or
lods
in
jnp
mov
dec
push
shl
push
inc
pop
sarb
and
ret
mov
das
fisttpll
js
les
pop
pusha
fs
dec
out
in
int
sub
push
loopne
mov
insl
or
and
mov
call
stos
pusha
lea
adc
leave
mov
in
int
and
pop
lcall
pushf
ret
addr16
xorb
movsl
aam
or
mov
in
cmp
push
mov
sbb
sbb
pusha
push
xchg
and
and
add
outsb
dec
pop
inc
fisubl
sub
aaa
mov
daa
arpl
cmpsb
mov
jo
ja
mov
or
hlt
int3
orps
out
add
ds
xor
addr16
lods
femms
pop
pop
insb
xor
cmp
fs
das
repz
arpl
jecxz
jge
pop
push
jle
pusha
add
xor
push
loopne
loopne
and
iret
mov
outsl
iret
sbb
ds
jl
push
rorb
insb
xchg
lcall
mov
fs
xchg
pop
jno
xrelease
adc
decb
popf
cmp
push
pop
notb
iret
add
jb
pop
daa
push
cmpsb
insl
ret
inc
cmpsb
pop
mov
jns
dec
into
cmc
xchg
push
into
test
data16
and
inc
adc
adc
clc
out
cwtl
mov
ret
lock
mov
add
insl
add
mov
addr16
popf
imul
leave
xchg
xor
xor
pop
xchg
shll
inc
sbb
mov
shrl
in
pop
jbe
fwait
imul
pop
jl
inc
icebp
dec
mov
cmp
les
add
sub
push
xchg
shrl
push
ds
sahf
jno
leave
sbb
or
push
pop
aad
mov
sbb
sti
or
mov
cmp
mov
cmp
xor
push
inc
enter
sbb
pop
lock
mov
xor
xchg
mov
in
stos
aaa
inc
pop
enter
mov
sti
mov
and
dec
cld
movsb
mov
orb
jge
mov
jnp
scas
mov
dec
push
or
data16
mov
xor
add
bound
adc
sbb
mov
bound
pusha
mov
cmp
mov
daa
xlat
jg
aas
lock
xor
inc
jbe
hlt
and
into
ror
imul
hlt
test
add
push
fbstp
das
imul
dec
push
fwait
in
andb
lea
enter
jmp
inc
push
dec
lods
daa
cmp
test
rorb
lods
cmp
test
cli
movl
lret
mov
cmp
mov
movsl
inc
sbb
hlt
mov
cmpsb
lahf
xor
test
mov
ret
frstor
sbb
in
push
fdiv
test
data16
xor
mov
jmp
mov
pop
xchg
adc
push
add
pop
dec
inc
xor
ja
cmpsl
pop
fwait
gs
lahf
mov
das
lds
cli
addr16
movsl
pushf
jecxz
adc
hlt
sub
dec
mov
sub
jo
push
aam
mov
push
outsb
int
fwait
test
bound
in
inc
lods
sub
imull
and
dec
test
adc
add
pop
xchg
inc
mov
jl
jl
ss
mov
rclb
xor
stos
in
or
xor
adc
xor
adc
mov
sub
daa
and
sub
jo
int
pop
jle
lahf
es
std
loope
ja
hlt
xchg
ret
and
pop
sub
lock
xchg
sbb
or
dec
jle
les
push
clc
lret
xchg
jl
dec
sbb
push
dec
adc
sub
or
inc
pop
shll
sbb
ds
mov
mov
imul
lods
lds
mov
clc
mov
jbe
mov
les
mov
xchg
not
repz
jns
daa
repnz
dec
movsb
popa
roll
and
repnz
dec
notb
aam
fwait
cmp
mov
adc
xchg
dec
loop
sarb
xchg
not
popl
inc
xchg
push
test
cmp
call
push
push
fbld
out
stos
sub
mov
mov
mov
mov
mov
mov
adc
popf
pop
mov
pop
jmp
cmp
leave
subl
sub
sahf
data16
pushl
cmpb
fstl
sahf
cwtl
inc
jno
das
mov
in
pop
repz
jl
push
add
xchg
xorb
pop
repnz
in
rolb
sbb
fwait
jle
jnp
pop
sarb
test
cmpsb
xchg
es
repnz
pop
orl
popf
dec
sbb
sbb
ljmp
push
sub
pushf
in
inc
xchg
inc
scas
push
mov
mov
cmp
clc
and
pop
dec
je
into
xchg
xor
nop
mov
ficompl
mov
adc
rcrl
fs
add
inc
cld
mov
aaa
rcrl
push
cmp
cmpsb
sub
out
stc
cmc
and
imul
mov
repnz
sub
or
in
cmp
xor
push
int
sub
das
push
insb
pop
mov
stc
sub
xor
xchg
mov
scas
fdivs
nop
xor
mov
movsb
dec
dec
mov
aad
sbb
test
mov
sbb
pop
push
xchg
mov
pop
ds
inc
xor
in
xchg
xlat
sub
ficoms
xor
mov
xchg
lock
sub
pop
iret
lea
inc
cmc
sbb
dec
dec
xor
enter
mov
sbb
or
rclb
stos
sti
dec
movsl
loope
cmpsb
ret
mov
inc
divb
negb
adcb
aaa
sub
fwait
jge
pop
ror
seto
jecxz
mov
mov
mov
and
pop
push
mov
sub
push
fildl
xor
lret
jno
call
adc
cli
cmp
lahf
sarl
aad
das
dec
rolb
xor
sub
and
mov
lret
push
dec
pushf
ffree
push
mov
cmp
aam
cmp
xchg
mov
inc
xchg
outsl
imul
mov
out
imul
mov
mov
mov
aas
out
fiaddl
jge
sub
xchg
outsl
add
adc
mov
ss
jae
lea
fildll
xlat
xchg
or
xchg
gs
leave
je
leave
jge
in
mov
jl
cmp
jmp
sub
pop
out
scas
or
xchg
lret
xor
sbb
rclb
jp
push
xlat
dec
dec
cltd
sahf
sub
subl
imul
mov
cli
bound
ret
push
and
mov
cmpsb
ja,pn
cld
mov
int3
sarl
lock
mov
inc
stos
stos
cmpsb
pushf
cld
fbld
ret
scas
sub
cmp
xor
pop
insb
leave
cmpsl
pop
pop
mov
fdivs
fdivr
mov
push
neg
pop
mov
and
jl
fdivs
jmp
push
adc
shll
cmp
outsb
scas
fimull
gs
out
out
loope
push
mov
xchg
and
add
mov
popa
mov
fdivrs
imul
bound
push
jae
inc
test
test
add
push
mov
mov
sbb
cltd
fimuls
adc
mov
inc
push
dec
mov
add
inc
popf
sbb
xor
jns
pusha
cmp
loopne
test
je
lds
cmp
scas
sbb
sub
dec
rcrl
in
and
lea
mov
jo
lea
jg
cmpsb
jp
cmp
out
push
outsb
push
insl
or
loope
cmpsl
stos
mov
ret
ss
xchg
subl
lock
out
das
dec
repnz
lods
cwtl
je
mov
inc
dec
push
mov
inc
cld
push
aad
push
inc
into
mov
lahf
in
leave
jbe
into
mov
xor
xor
jl
into
mov
repz
inc
or
imull
push
fldenv
inc
in
iret
inc
add
sbb
fiadds
repz
and
sbb
jl
pop
adc
cltd
gs
ds
aad
das
clc
leave
and
dec
mov
mov
fs
das
enter
dec
test
pop
arpl
jae
aam
and
hlt
or
dec
inc
jae
leave
shll
inc
pop
and
repnz
dec
fcmovnbe
jge
bound
cmp
dec
xchg
repnz
stos
jge
and
call
cmpsw
or
enter
daa
push
movaps
cwtl
imul
and
xchg
lcall
fdivrs
mov
jne
and
mov
push
add
inc
rcr
ja
cli
popf
sarb
aam
cmpsb
loopne
pop
pop
jl
lret
mov
cmp
sbb
fmuls
popa
repnz
lea
int3
out
aas
adc
jae
push
push
test
and
lock
addr16
xchg
fidivrl
out
test
mov
icebp
cmp
sub
adc
inc
sub
ja
test
pop
aam
jmp
adc
cmpsl
dec
xchg
arpl
stc
inc
pop
cmpsb
cwtl
fisttps
jae
scas
test
sbb
mov
dec
les
cmpl
iret
sbb
insl
push
mov
ljmp
mul
pushf
popa
fwait
std
adc
pushl
pop
mov
xor
sub
int3
in
sbb
addr16
or
jmp
pushf
negl
mov
cltd
in
add
std
cltd
mov
sti
ret
ljmp
push
ss
inc
dec
jge
loop
jge
push
gs
out
popa
lods
jb
lds
negb
rcrl
xor
out
lods
ds
leave
sbb
mov
mov
jge
in
push
xchg
and
cltd
xchg
lock
push
cltd
xchg
in
jo
insb
mov
cs
hlt
push
dec
hlt
jae
lods
or
aad
or
inc
add
sbb
sarl
mov
fwait
xchg
fisubs
ss
and
arpl
inc
mov
mov
idivb
mov
lods
and
mov
cmp
mov
cmp
mov
cli
push
enter
pop
testl
imul
imul
pop
in
jnp
subl
jecxz
into
mov
mov
adc
jecxz
insb
pop
lds
sbb
adc
xchg
xlat
data16
repz
arpl
mov
loop
iret
pop
jp
out
pop
lods
push
mov
jne
push
pop
jmp
decl
aad
adc
sti
fnstsw
std
xchg
sahf
sub
dec
mov
mov
push
jge
int3
or
sarb
mov
pop
incl
lea
lea
cld
outsb
aaa
xchg
cld
dec
dec
jo
scas
push
insl
daa
shll
add
mov
xchg
test
mov
add
jp
shlb
mov
iret
pop
in
and
pop
push
cltd
push
xor
inc
test
mov
xcrypt-cbc
cmpsl
xchg
stos
fwait
xchg
inc
nop
sti
mov
dec
sbb
mov
pop
push
imul
in
dec
sti
jb
out
mov
pop
test
xchg
xchg
in
push
xlat
fdivr
pop
mov
bound
pop
mov
jg
xchg
xlat
cmpsb
xchg
sbb
inc
std
movsb
in
and
pushf
sub
mov
pop
jmp
mov
xor
push
xchg
mov
push
lods
ss
xor
movl
movsb
mov
mov
push
movsb
outsl
ja
jbe
fdivrl
gs
or
push
sub
mov
push
insb
jp
add
lcall
dec
dec
sub
dec
movsb
push
in
scas
sbb
sub
iret
stos
sti
or
aas
cmp
decb
shrl
scas
mov
andb
and
fnsave
aad
repz
test
mov
pop
stos
and
mov
cmc
or
fiaddl
mov
loop
stos
jne
pop
cmp
cmc
xor
dec
data16
mov
jge
mov
sbb
push
mov
insl
test
cmp
popa
cli
popa
or
int
cli
out
lahf
pop
iret
mov
lock
push
sbb
adc
rcrl
popa
sbb
jg
in
scas
test
out
mov
js
mov
shl
push
mov
sbb
test
dec
xchg
popf
enter
ss
push
into
loope
mov
add
or
out
sub
fdivl
pop
movsl
in
pop
and
mov
stc
icebp
fldl
jmp
shlb
cmc
push
mov
inc
adc
fstps
nop
shl
xchg
pop
cli
andb
je
jge
vmwrite
xor
mov
pop
bound
or
sbb
repnz
dec
aad
es
pop
ret
aas
push
xor
arpl
jns
sub
cmc
inc
cwtl
lea
push
pop
pop
popa
xor
adc
sbb
fistpll
cmpsb
shrb
les
lahf
stc
dec
mov
push
stos
mov
out
jo
insl
or
xor
push
stos
xchg
dec
fisubrl
js
xor
out
mov
orl
fildl
iret
cmpsb
push
inc
les
mov
int
jmp
sbb
sub
pop
add
push
pusha
mov
dec
int
cli
int3
popf
in
loop
lea
gs
insb
out
dec
test
je
mov
sub
adc
push
cmpsb
das
out
pop
mov
cmpsb
or
int
jge
in
cmpl
pop
adc
cmp
arpl
aam
je
mov
and
mov
std
inc
aam
dec
sbb
call
add
jae,pt
dec
pop
sbb
cmp
xchg
aaa
nop
shll
popf
xchg
in
mov
lock
and
arpl
ss
adc
imul
jecxz
lods
pmaxsw
divb
cmpb
mov
scas
inc
push
mov
repnz
or
cmp
inc
lret
push
and
push
popa
push
jp
jne
cmp
push
mov
ljmp
iret
or
arpl
add
pop
adc
hlt
loop
outsb
cld
or
in
mov
fcmovnbe
xchg
jnp
xor
pop
movl
mov
pop
mov
dec
mov
jne
fwait
mov
popf
int
add
sub
out
inc
lret
test
ja
push
mov
insl
dec
fsqrt
mulb
push
jge
pop
jmp
pop
sbb
mov
mov
mov
test
hlt
out
popf
mov
aam
repnz
lret
sub
pop
mov
pop
jno
popf
xchg
cmp
arpl
sbb
popl
imul
add
insl
jmp
adcb
mov
and
dec
sub
and
sbbl
dec
cmpsl
repnz
mov
cmp
movsb
aaa
lret
inc
jle
rolb
out
jae
paddusw
adc
pop
sarb
mov
cli
xlat
xchg
movsl
xor
bound
push
push
fs
cs
fcompl
pop
mov
cmp
push
xchg
stos
scas
pop
test
pop
pop
inc
popa
cli
cmp
pop
mov
ffreep
dec
out
mov
outsb
adc
pop
popa
mov
inc
mov
icebp
dec
inc
sub
jmp
inc
dec
adc
add
icebp
inc
mov
add
and
mov
lret
and
insb
lret
cwtl
jmp
xlat
ja
in
jae
shll
insb
mov
dec
out
add
dec
gs
cmp
mov
aaa
arpl
dec
jnp
pop
rcrl
sbb
adc
dec
dec
pop
dec
ret
repnz
nop
repnz
shll
jl
fadd
and
hlt
fcmove
add
push
or
addr16
arpl
pop
test
jge
jl
and
mov
imul
inc
jmp
jmp
aad
xor
cs
out
jns
adc
mov
xor
mov
out
aas
test
gs
js
pop
pop
dec
aas
mov
inc
inc
jge
test
dec
test
fldenv
dec
jno
lret
mov
dec
and
xchg
test
repnz
fs
or
pop
movsb
popf
jecxz
jg
outsb
loope
ret
lods
sbb
outsb
mov
inc
int3
mov
popf
mov
or
idiv
iret
mov
mov
cmp
xor
addr16
aas
and
iret
mov
push
nop
mov
push
mov
lods
fadds
mov
in
cmp
jle
mov
jge
jns
cmp
cmpb
jge
xor
sub
mov
pusha
into
xorb
cs
inc
jg
rcrl
test
pop
push
lods
add
aam
lret
rcr
dec
pop
sbb
and
outsb
dec
xor
xchg
dec
js
cmp
mov
mov
testl
inc
mov
mov
js
mulps
psllq
xchg
xchg
xlat
xor
push
mov
clc
cmpsl
dec
push
stos
cmp
push
add
mov
mov
mov
jns
js
daa
ffree
mov
xchg
mov
mov
test
push
dec
mov
cmp
push
jno
lret
xchg
and
ffree
test
cld
std
and
shll
push
lcall
mov
jmp
and
stc
pop
xor
es
lods
push
mov
in
loop
in
cmp
jae
jge
push
in
jle
out
mov
in
pop
mov
test
imul
sub
hlt
inc
mov
mov
dec
xor
lahf
pop
in
sbb
pop
push
negl
push
jge
movd
adc
pop
dec
loopne
xchg
push
lcall
movsb
mov
repnz
into
shll
pop
xchg
addl
into
inc
xlat
push
mov
mov
or
adc
stos
adc
xchg
cli
popf
pusha
ljmp
push
mov
push
inc
test
mov
loopne
jp
sub
sbb
fnstenv
fcmove
aaa
rcrl
cli
adc
and
lea
sbb
fcoml
push
icebp
jae
inc
xchg
pop
cmp
or
inc
add
jo
stos
aam
sahf
fcoms
nop
sbb
fmull
add
adc
sub
popf
nop
rcrl
sub
jecxz
inc
inc
sbb
lock
invd
jnp
outsb
test
push
push
test
cmpsl
cmp
and
or
test
pop
or
out
mov
xor
dec
cmp
test
dec
fildll
mov
push
in
loopne
aam
call
inc
pop
sbb
xchg
jl
lods
fs
out
push
stos
fstpl
jno
and
shlb
add
inc
ficoms
fwait
lret
or
push
movsb
xchg
inc
pop
std
call
outsb
fs
adc
cmc
pop
inc
aas
out
out
das
fsubrl
jp
roll
movsb
aas
icebp
xchg
gs
mov
push
shrb
out
lahf
mov
or
ret
pop
cmc
lret
cmpsl
out
cmp
call
and
mov
aaa
mov
and
xchg
mov
jle
cltd
jp
loopne
push
leave
xor
add
pop
inc
leave
dec
popa
mov
push
mov
fs
loop
cmpsb
out
sbb
xchg
daa
pop
pop
dec
rcrl
addr16
sub
test
xor
sbb
mov
rcl
adc
or
xchg
ror
push
mov
and
or
dec
leave
or
insb
inc
ss
addb
subb
mov
xchg
fdivrs
mov
sub
out
xchg
sub
or
or
push
jmp
inc
in
dec
or
aas
xor
mov
ud0
int
xchg
test
nop
adc
fbld
cmp
daa
add
je
inc
fwait
dec
scas
cmp
sub
mov
ja
pop
mov
pop
scas
xor
out
and
lock
xlat
stos
push
add
and
sbb
ja
into
push
dec
xor
data16
mov
sub
and
xor
arpl
mov
jbe
gs
and
add
loop
cmp
push
jbe
mov
loope
push
xchg
jp
mov
pop
cwtl
xchg
or
mov
xor
jl
int
jmp
arpl
xchg
popf
dec
insb
pusha
aas
xchg
mov
test
jge
fbstp
insb
xchg
xchg
mov
sub
xor
jl
data16
dec
xlat
je
lcall
cmp
je
sub
adc
stos
and
fisttpll
test
push
cmpb
pushf
fldl
sbb
xor
mov
adc
cltd
xchg
dec
xor
imul
sahf
lret
lret
scas
js
out
daa
and
adc
mov
loope
fimull
and
into
add
lret
sub
cwtl
addb
neg
vxorps
adc
or
fwait
lods
xchg
inc
sub
int
or
push
sbb
xchg
and
sub
cmp
xlat
inc
stos
std
inc
imul
xor
lea
xor
mov
ljmp
xchg
imul
sarb
imul
stos
mov
lahf
fbstp
or
iret
test
dec
fisubl
sub
fucomi
sahf
sbb
inc
push
addr16
cwtl
mov
loopne
mov
cli
aaa
dec
mov
aam
int3
and
inc
adc
icebp
enter
scas
ljmp
cld
cmp
dec
bound
mov
xor
rorb
xchg
sbb
or
pop
mov
inc
push
addb
xchg
sbb
mov
das
fdiv
pop
push
lods
and
cmc
xchg
es
in
xorl
push
push
stc
fidivs
xor
ja
mov
pop
orl
adc
lahf
jno
int3
mov
shr
insb
cmp
push
aas
pushf
sub
sub
cmp
mov
mov
movsb
orb
lret
fsubr
pop
lret
cmp
loope
cmp
lods
xchg
cmpsl
pop
and
dec
ficomps
and
aaa
testl
enter
cmp
imul
lods
jb
lahf
inc
and
lret
lods
add
mov
movsb
stos
push
mov
ret
cli
adc
sbb
inc
mov
pop
cmp
cmpsb
mov
shld
push
lea
fildl
gs
stos
push
sub
icebp
sub
ljmp
jbe
shlb
xchg
sub
enter
jecxz
push
das
sub
arpl
int
arpl
push
xor
cmc
xlat
cmpsl
scas
int
mov
movsl
pop
out
pusha
fwait
push
push
cmp
sahf
nop
out
fimull
dec
pusha
lods
rolb
sub
jge
subb
je
cmp
dec
aam
mov
mov
lock
loope
xor
loope
pop
jp
pop
sarb
fwait
arpl
pop
movsl
push
jne
aad
repz
cmp
pop
shrl
data16
cwtl
loop
out
outsb
mov
cmp
mov
xchg
jnp
pushf
stos
ja
loope
jno
repz
inc
mov
and
mov
add
pop
push
pop
mov
outsl
clc
movsb
out
xchg
jne
into
inc
cmp
ror
fs
and
dec
pop
pop
and
push
movsb
sub
orl
pop
fwait
xchg
mov
andl
aam
or
mov
lcall
xchg
push
cmp
pop
xlat
or
aad
mov
and
mov
inc
sub
jno
push
mov
lods
mov
sbb
lods
inc
xchg
aad
cmpsb
fadds
sete
mov
xchg
cmpsb
dec
lret
xor
push
or
jno
add
add
push
in
dec
out
inc
jnp
daa
lret
test
incl
cli
cli
add
sub
inc
and
lods
jae
int
jmp
aas
test
aaa
fisubl
out
xor
fistpll
push
xor
push
sub
and
popa
cld
dec
xor
int3
push
scas
popa
jbe
ret
jnp
aad
xor
pop
dec
and
mov
cmp
jle
subl
mov
out
dec
pushf
lret
pusha
into
addr16
dec
jnp
pop
dec
pop
pushf
or
or
jge
int
test
lret
addr16
xor
addr16
and
neg
sub
ljmp
adcl
lahf
adc
mov
pop
je
lcall
mov
dec
xchg
pop
insb
inc
cmp
movsb
popa
pushf
inc
fidivl
scas
repz
test
in
ret
cmpl
fwait
pop
aaa
push
pop
mov
stos
pop
jb
cmpsb
sub
ja
and
pushf
inc
mov
nop
jl
mov
xchg
mov
lret
dec
add
mov
dec
pop
js
nop
std
in
out
in
dec
mov
insl
pop
mov
and
mov
mov
cwtl
shll
mov
jecxz
inc
pop
push
pop
xor
aad
mov
add
mov
dec
dec
adc
and
xor
jg
jne
xchg
shll
xlat
pusha
loope
jbe
jecxz
ficoms
aad
rcrb
fwait
or
roll
pop
ret
inc
mov
or
loope
jl
scas
push
movsb
lea
fiadds
or
imul
pop
sbb
xor
xchg
sahf
aam
faddp
roll
jbe
out
insl
inc
cmp
imul
jmp
aaa
test
popf
ja
cmp
addr16
mov
lea
inc
subl
jno
pop
xchg
pop
xor
push
dec
leave
aam
xor
sahf
inc
mov
iret
mov
dec
push
rcll
sbb
js
add
imul
rorl
push
mov
lods
std
lret
dec
sbb
cmp
and
pop
jno
jae
pop
pop
adc
fmul
pop
sub
das
mov
int3
mov
push
and
jmp
sub
in
xlat
cs
cli
sbb
push
cli
sub
or
pcmpeqw
add
cli
mov
ja
lock
push
push
out
sub
push
and
test
mov
shrl
lret
sub
mov
mov
mov
cmp
sbb
add
xor
jecxz
mov
nop
jmp
fldl
cli
xchg
dec
adc
sbb
cmp
jno
jg
pop
loope
outsl
dec
jg
outsb
in
mov
lock
xor
dec
mov
pop
pop
leave
in
jl
iret
not
pusha
popf
fwait
lret
cmp
mov
sbb
nop
add
fldl
xchg
je
mov
int
dec
cmc
xchg
pusha
inc
cmp
cmp
js
pop
aad
dec
adc
adc
or
fwait
cwtl
xor
sbb
scas
mov
loop
jne
out
xchg
sbb
mov
movsl
jne
lds
push
xor
xchg
rcll
dec
lahf
push
loopne
pop
push
xchg
mov
sbb
xchg
xorl
movsl
dec
shlb
pop
push
addl
pushf
popf
lret
mov
dec
adc
push
adcl
pinsrw
add
pop
sbb
jmp
dec
cmp
enter
add
push
lret
xor
insb
push
xchg
inc
test
in
jmp
adc
sub
mov
mulb
sub
xchg
pop
sub
scas
and
mov
and
sub
sub
cmp
outsb
jge
push
mov
aaa
adc
lahf
and
and
and
jmp
sbb
jmp
cli
lods
in
jbe
xor
mov
fs
aaa
mov
pushf
sbb
out
xchg
mov
into
dec
repnz
add
int
scas
sti
mov
movsl
push
xchg
ret
clc
outsl
push
insl
adc
sub
icebp
aad
adc
js
fmulp
mov
mov
push
push
pop
add
je
aam
out
pop
cmp
jmp
sbb
pop
in
loop
dec
push
lods
mov
iret
rcrl
sub
loopne
daa
jae
inc
pop
mov
pop
push
shl
rol
xor
sbb
push
cmpsb
pop
iret
test
or
mov
mov
xor
shrb
movsb
fmuls
movsl
cmp
dec
sti
push
mov
leave
adc
sbb
push
das
daa
xchg
dec
push
lods
mov
leave
pop
dec
stos
out
sub
add
je
push
in
adc
jl
push
jp,pn
inc
inc
test
mov
das
inc
das
push
sub
not
jae
xchg
jge
jp
sub
stc
nop
mov
dec
jne
adc
cmpsb
fwait
add
pusha
or
sbb
jle
int3
out
imul
pop
xor
sub
fstps
or
dec
sahf
pushf
scas
mov
sbb
add
leave
push
and
es
test
push
fst
gs
iret
test
push
mov
cltd
loop
or
sbb
shlb
mov
test
mov
in
aam
imul
fstl
or
aad
sub
ret
jmp
or
mov
test
mov
ss
jo
mov
jo
loop
arpl
lods
je
and
xor
dec
aaa
bswap
cmp
loope
mov
adc
outsl
loope
push
sbb
xlat
adc
dec
mov
mov
mov
repnz
icebp
insb
push
push
rcll
and
dec
in
sub
outsl
daa
lahf
push
and
test
out
mov
push
inc
push
sahf
pushf
jne
push
and
dec
mulb
popl
cwtl
pushf
cmp
push
mov
cwtl
cmpsb
and
sub
js
lea
rcrb
stos
scas
pop
out
sbb
and
mov
test
popf
arpl
lcall
adc
cmc
je
push
addr16
jnp
dec
mov
andl
push
xor
pop
inc
push
loope
mov
pop
roll
scas
js
ja
js
inc
push
push
lahf
push
into
cwtl
mov
sub
xor
stos
push
xor
dec
fwait
cld
test
cmp
mov
fs
xchg
adc
jl
xchg
mov
int
adc
std
xor
mov
enter
in
insl
dec
add
xchg
mov
sub
dec
cmp
ss
mov
call
pop
pop
lahf
xchg
test
xor
out
ds
dec
inc
mov
mov
test
repz
fs
xchg
xchg
push
out
inc
scas
mov
rorb
mov
cmc
sarl
inc
inc
pop
mov
arpl
cwtl
jnp
mov
andb
jno
mov
outsl
idivl
push
adc
cld
mov
popa
popa
mov
sub
aad
push
in
pop
push
pusha
inc
jg
lcall
sbb
stos
iret
mov
pop
pusha
dec
cltd
out
push
dec
imul
mov
xchg
test
mov
mov
int
mov
mov
sub
sub
mov
pop
lock
mov
in
and
push
lcall
and
jle
repnz
dec
sbb
and
cmpsl
and
lcall
mov
jnp
pop
int
add
mov
inc
or
fucomi
pusha
test
dec
and
movsb
xor
inc
pusha
jns
cs
arpl
push
in
repz
scas
cmp
lcall
pop
mov
call
movsl
int3
inc
fcmovnb
pusha
xchg
push
inc
mov
movsb
std
inc
pop
jne
mov
jge
aas
pop
stos
decl
in
shll
icebp
sbb
adc
lods
inc
xchg
stos
pusha
repnz
mov
pusha
cmpsb
or
call
jge
filds
test
movsb
pop
jbe
mov
jno
mov
add
xor
adc
pop
adc
movsl
pusha
test
orl
movsb
test
mov
lds
fmuls
addr16
cs
enter
pusha
cmp
clc
fldt
sbb
push
movsl
and
inc
aad
or
stc
pop
push
shll
mov
and
mov
pusha
sbb
hlt
enter
lret
mov
fldenv
push
dec
jle
or
and
xchg
add
lods
inc
stos
sub
shlb
sub
jo
mov
cmc
jl
fnsave
jb
jae
int
sbb
inc
mov
je
jns
xlat
or
and
les
xchg
jle
push
and
sbb
cld
and
and
sub
popa
adcl
push
sbb
das
loopne
jp
subl
or
fidivs
xchg
inc
pop
and
jge
xlat
or
fisubl
fmuls
stos
outsb
sbb
mov
daa
stos
hlt
repz
roll
test
cli
sbb
adc
movsl
and
pop
jae
test
pop
cltd
scas
stos
lds
or
adc
cmp
fs
cs
out
rcrl
jle
data16
dec
add
rolb
shll
xchg
out
and
jmp
push
dec
fstps
neg
sub
jge
ss
loope
inc
icebp
ret
jb
rep
lock
xor
das
push
inc
mov
jns
sbb
fwait
push
shr
sti
xor
stc
push
jnp
mov
sub
and
add
and
xor
sub
ja
fstpl
sbb
outsl
cmp
pusha
lret
add
or
mov
movsb
sub
mov
inc
mov
sbb
sbb
push
fisubl
push
mov
aam
and
lahf
jae
sbb
icebp
lods
jmp
clc
xor
cmp
jge
adc
add
mov
addr16
and
push
stos
lret
ret
imul
sbb
out
and
orb
sbb
fistps
add
test
xchg
pusha
jbe
adc
jno
scas
movsl
std
gs
jnp
adc
ret
sbb
lret
mov
and
xlat
clc
pop
adc
andl
pop
sbb
into
cs
lahf
and
push
clc
sub
jno
mov
mov
pop
repnz
lds
or
and
scas
xor
xor
and
and
pop
jle
push
aaa
jns
movsb
insb
pop
or
cli
outsb
push
lcall
cmp
sbb
scas
pop
nop
lahf
stc
cs
mull
movsl
leave
popa
mov
sbb
jecxz
out
xchg
cmp
xchg
mov
pop
jb
ret
mov
icebp
movb
not
dec
repz
xor
inc
rolb
sbb
pop
cltd
push
add
add
jl
dec
lret
or
fisubs
sub
inc
imul
sbb
and
mov
push
ds
pop
loop
xchg
movaps
icebp
jbe
sarb
inc
adcl
xchg
dec
and
push
pusha
pop
push
add
mov
push
pop
jl
push
push
dec
movsl
in
lahf
clc
add
insb
push
push
es
cmpsl
sahf
stc
jle
mov
sub
xor
xor
out
push
test
cmp
adc
popa
cs
mov
xor
pop
xchg
arpl
mov
ss
xchg
pop
jo
cld
pop
push
insb
and
mov
sbb
imul
popa
sub
popa
sub
and
rolb
leave
aad
inc
mov
sbb
xor
or
loopne
jo
in
push
es
adc
pushf
mov
leave
adc
and
insl
enter
clc
je
cmp
mov
cltd
mov
in
xchg
out
xor
cmpsl
mov
pop
test
and
loop
pop
inc
cltd
push
subl
aam
mov
inc
push
mov
sbb
and
pusha
jb
fs
in
jns
loop
and
pop
stc
inc
push
push
outsl
movsl
or
test
pushf
int3
mov
sbb
in
mov
popa
jmp
fnsave
mov
test
dec
inc
in
pop
in
lds
or
stc
sub
ja
shll
add
sub
sub
fadds
mov
sysenter
mov
pop
jp
aam
fistpl
imul
aaa
cmp
mov
cli
sub
fs
sbb
adc
in
and
inc
mov
fdivrs
mov
adc
push
cltd
cmp
jp
pop
mov
scas
sbb
sbb
sbb
pushf
sbb
xor
push
stc
or
and
or
or
sbb
jmp
loope
popa
andl
mov
push
gs
push
fistl
lret
scas
mov
es
outsl
adc
orb
out
cmp
push
push
xchg
mov
mov
add
mov
addr16
imul
xchg
sub
lret
sar
inc
add
fcoml
mov
nop
jle
pop
fst
movsl
mov
xlat
add
or
add
pop
ret
sub
mov
jno
imul
add
jbe
outsl
fisttps
mov
imul
add
mov
icebp
arpl
inc
int3
mov
dec
repnz
lret
lods
sub
sub
or
movsl
mov
addr16
xor
add
adc
and
mov
jns
imul
leave
jmp
push
std
xor
cmp
xchg
insb
adc
popf
shr
int3
mov
insl
popa
dec
sub
jb
sub
push
sbb
insb
pop
mov
xor
push
pushf
xor
add
cmp
divl
rep
jo
mov
push
or
push
push
test
or
push
adc
mov
dec
rorl
or
inc
mov
loop
inc
lods
pop
xor
nop
adc
jle
push
int
mov
cmc
inc
cmp
leave
cwtl
or
mov
cmp
push
cld
mov
or
and
int3
stos
add
idivb
stos
mov
jns
rcl
out
es
jge
mov
cs
leave
sub
popf
or
int
add
inc
jb
xchg
mov
adc
adc
mov
jle
popw
inc
pop
adc
push
jle
fdivrp
pop
testb
cs
xchg
push
dec
pop
hlt
xlat
cmp
out
dec
or
mov
sub
xlat
fildll
push
cmp
ss
jo
loop
insb
into
sbb
inc
mov
insb
add
pusha
and
cmp
sahf
and
adcb
data16
inc
push
jns
and
xorb
sahf
inc
cmp
mov
test
subl
daa
inc
and
mul
sub
insb
pop
mov
in
aaa
mov
imul
inc
jnp
mov
dec
xor
shr
pop
out
ljmp
add
ljmp
call
jecxz
insl
sub
sbb
and
mov
jb
das
out
icebp
xor
cmp
lds
sub
or
sbb
inc
cmc
outsl
mov
and
xor
dec
push
or
add
mov
xor
and
push
adc
adc
push
movsl
lds
sub
mov
mov
jmp
adc
jmp
xchg
xor
or
mov
je
or
cwtl
sbb
pop
jg
and
or
test
icebp
push
js
inc
push
hlt
xor
pop
call
adc
inc
int3
mov
cltd
xor
test
subl
dec
stos
bound
cmp
dec
loopne
sbb
mov
adc
enter
pop
cmp
mov
dec
sub
lea
inc
jmp
pop
mov
cmp
cmp
add
add
sub
mov
cmp
jno
xor
pop
mov
add
flds
sbb
or
je
xchg
sbb
test
or
sub
inc
mov
push
xchg
or
pusha
into
sbb
fdivs
test
mov
je
add
nop
fadds
pop
push
push
sub
loope
fldl
pop
pop
and
mov
sarl
pushf
clc
cmp
add
out
inc
jmp
push
jle
jne
cmp
insl
xchg
movsl
sbb
in
fsubrs
lods
adcb
sahf
dec
cmp
add
je
sub
pop
int3
xor
mov
and
and
xor
jmp
lds
cmp
jno
cltd
xchg
out
out
shll
xor
movsb
jb
call
jae
or
or
or
xchg
xchg
icebp
adc
adc
inc
mov
mov
or
pop
popa
gs
add
mov
inc
dec
mov
dec
cmp
pop
jbe
cmp
sbb
pop
movsl
cmp
out
out
out
nop
jl
ja
pop
push
lds
popa
mov
test
sbb
test
lds
jl
stos
lea
and
xor
sub
mov
test
rcll
je
clc
jae
mov
adc
les
fstpl
mov
add
jbe
cwtl
sub
jo
push
jl
cmp
add
pusha
stc
ss
insl
xchg
arpl
test
push
fnstenv
xchg
push
pop
or
xor
leave
scas
shrb
jns
dec
hlt
xor
in
pusha
dec
dec
movsl
cmp
jne
movsl
adc
lea
xor
in
js
sub
pop
xchg
test
or
mov
aad
jo
mov
or
out
lods
mov
mov
fdivrl
icebp
adc
xchg
xor
lods
into
push
and
xor
jecxz
cld
adc
jns
in
test
loopne
or
test
icebp
mov
in
popa
testb
dec
nop
aam
sub
sbb
mov
add
loopne
bound
sub
inc
xor
or
xor
push
inc
mov
jl
test
jnp
test
push
adc
sbb
in
cmc
add
xor
mov
jns
shrl
stc
cmp
and
in
out
xchg
cmc
dec
push
and
and
movsl
push
insl
inc
int
mov
jecxz
jle
in
fdivl
sub
pop
jp
fs
pusha
sbb
pusha
inc
add
or
and
and
add
ret
adc
add
ss
test
je
push
fs
jecxz
lret
ja
jns
fidivl
sarl
mov
aam
mov
repz
jns
ds
int
sbb
jb
and
mov
js
inc
push
xor
pop
repnz
imul
hlt
cmp
add
arpl
sub
repnz
or
jnp
or
jge
mull
ret
sti
scas
hlt
adc
jns
pop
mov
mov
or
jbe
add
fcoml
xchg
xchg
out
cwtl
pop
sub
adc
subb
xor
adc
push
mov
or
and
xor
push
shlb
test
mov
push
mov
jge
movsl
sub
sti
xor
and
add
and
in
sub
sti
cmp
and
in
mov
push
adc
sbb
mov
in
jge
cmc
insl
daa
push
xorb
arpl
stos
jnp
dec
pop
add
sub
test
push
ss
mov
adc
or
fnstcw
mov
roll
lods
inc
jecxz
in
push
sbb
jge
lea
cmp
mov
push
push
mov
mov
xor
push
adc
fdivr
jnp
jge
xor
sbb
xchg
pop
sbb
mov
nop
icebp
jnp
add
mov
popf
and
sbb
xchg
pop
add
ja
push
mov
dec
in
jge
xchg
fnstcw
scas
fstps
out
movsl
xor
lcall
js
fld
push
and
js
insb
xchg
push
fdivs
fldpi
arpl
xor
push
push
add
pop
xor
or
inc
pop
xor
add
mov
cmp
cmpsl
or
inc
test
or
shlb
aaa
or
add
xor
sbb
jne
mov
sub
repz
js
cmp
xor
sbb
orl
push
add
stos
xor
imul
data16
add
ret
pop
jp
mov
jb
sbb
loopne
adc
cmp
aaa
js
jp
loopne
pushf
adc
stos
test
push
dec
jge
in
fistpll
dec
sbb
sti
out
insl
nop
pop
push
cmp
test
sbb
lea
jno
xor
xchg
imul
push
add
out
in
or
stos
add
fcmovnu
lods
dec
in
cmp
outsl
inc
cmp
out
and
push
push
mov
insl
xchg
add
andl
jl
leave
cltd
push
push
out
mov
sub
lock
jns
mov
and
jecxz
cmp
lds
sarb
sbb
dec
ja
pop
into
inc
stc
jp
jae
pop
rclb
imul
icebp
mov
sbb
mov
scas
mov
ficoml
dec
lock
in
pop
mov
dec
cmp
jbe
inc
jo
stc
and
lahf
fstpt
pusha
icebp
imul
mov
lds
push
outsl
inc
aam
xchg
sbb
push
cmp
insb
jmp
push
in
xchg
push
out
sub
aaa
nop
cli
sub
jecxz
xlat
mov
fisubrs
shll
add
mov
cmp
push
sub
push
stc
and
pop
adc
mov
jnp
mov
xor
jmp
jecxz
or
ja
sbb
out
ret
inc
and
ja
mov
jnp
dec
cmp
pop
lds
inc
popf
sbb
gs
xchg
inc
in
test
and
sbb
rorl
mov
dec
xor
adc
sbb
push
pop
pop
and
jb
jno,pn
pop
das
int
xor
stos
loop
ret
xchg
mov
js
dec
sbb
mov
jmp
test
jecxz
cmpsl
ss
push
test
sarl
sub
cmp
out
out
adc
adc
test
bound
movsb
cltd
add
pop
sub
xor
call
and
movsl
sub
or
push
imul
call
inc
mov
mov
ror
sub
cmp
sub
out
pop
sbb
cmp
and
mov
pushf
push
push
je
je
pop
shrb
popf
into
add
idivb
insb
and
mov
insb
fsubrl
jbe
dec
jg
sbb
and
ss
pop
push
divl
jmp
push
mov
movsb
dec
aas
push
mov
add
call
mov
jae
xor
pop
sub
and
sbb
sub
fucomp
jnp
mov
insl
xchg
inc
out
add
jne
push
cmp
push
inc
inc
inc
in
js
pop
mov
jmp
pop
popa
in
scas
out
leave
push
stos
in
out
push
xor
mov
jle
lahf
je
lock
negl
fnstsw
or
sub
dec
cmp
cmp
repnz
cwtl
lock
icebp
sub
std
cmp
insl
mov
sbb
movsb
jno
add
jne
cmp
add
lret
mov
in
jbe
sub
repnz
lds
push
in
inc
shlb
fnstcw
cmp
sbb
xlat
mov
and
inc
movsl
sbb
sub
es
dec
mov
push
xor
lods
pop
mov
cs
or
and
js
lds
and
jl
std
pop
imul
out
and
xchg
jae
and
loopne
lahf
sbb
dec
shll
and
in
xor
or
lea
jno
lods
ja
push
mov
pop
or
inc
and
aas
leave
movsl
push
push
stos
into
test
ljmp
mov
mov
jo
adc
std
push
or
add
sub
fs
jecxz
js
inc
popa
imull
pop
loope
lods
push
sub
in
into
lds
adc
mov
mov
popf
xor
dec
out
xor
inc
jo
movsb
push
xchg
pop
adc
js
lock
jne
xchg
cmp
jae
push
mov
pusha
and
inc
ss
sbb
dec
push
bound
sbb
adc
adcl
ss
sbbb
xor
inc
fs
mov
outsl
roll
icebp
pop
imul
push
push
daa
scas
inc
jl
orb
mov
xchg
push
add
xchg
lods
cmp
mov
inc
movsb
insb
and
pop
shl
xor
and
ja
outsl
js
xchg
pop
dec
or
and
ja
mov
and
adc
sub
dec
lea
or
fsubl
add
cs
cli
je
imul
mov
and
pushw
dec
inc
pop
fs
push
sbb
push
add
inc
adc
push
xchg
ds
pusha
fs
sub
into
aaa
sbb
adc
or
inc
daa
rcll
cmc
cs
lcall
sbb
push
inc
jae
inc
imul
js
test
imul
dec
into
xlat
xchg
aas
and
push
in
xchg
jne
cmp
push
adc
inc
imul
inc
andb
cmc
jne
push
jno
pop
xchg
dec
lds
xor
and
movsb
icebp
je
xor
fsubs
or
cmpsb
inc
and
int3
jge
stos
daa
push
hlt
xor
pusha
xchg
jb
mov
xchg
popf
imul
loop
xor
nop
sub
dec
xchg
push
data16
pop
adc
pop
pop
movsb
sbb
inc
addl
sub
jbe
cmpl
js
adcl
ja
rorb
xchg
jle
xor
cmp
roll
jecxz
int3
sub
and
mov
das
test
push
mov
jmp
insb
lret
mov
push
mov
adc
outsb
cmc
sub
or
dec
out
sbb
js
addr16
inc
dec
sbb
xor
or
insl
pop
pop
xor
int
ds
mov
sbb
orl
push
add
lea
jb
je
test
push
scas
push
xor
negb
enter
cmp
cmc
movsl
cwtl
jae
inc
roll
pop
fnstcw
jne,pt
int3
jmp
stc
nop
loopne
xchg
jmp
inc
and
dec
fwait
inc
push
sbb
pop
mov
and
xchg
cmp
and
jo
and
inc
mov
ljmp
mov
in
xorl
arpl
add
pop
mov
add
dec
pop
ret
testb
pop
fwait
sub
test
je
jecxz
cmp
mov
pop
jmp
add
or
add
sbb
into
daa
xchg
or
or
sub
xor
adc
jo
clc
outsl
inc
mov
xchg
outsb
sub
xchg
mov
jbe
xor
jnp
xchg
or
add
pop
sbb
xchg
jo
fsubs
shr
in
enter
shll
lods
jnp
mov
mov
data16
jo
cmp
and
sub
sub
and
pop
adc
cmp
imul
inc
dec
lock
mov
push
push
add
push
adc
sahf
int3
mov
xor
pop
ss
ds
adc
xor
pushf
popa
pusha
scas
dec
lock
outsb
ud1
hlt
shrb
jg
sti
je
jmp
inc
inc
test
mov
jmp
pop
push
sbb
ja
adc
outsb
ret
sbb
pop
imulb
jmp
rcrb
xchg
dec
or
jno
jnp
stos
scas
stos
or
mov
and
cmc
dec
or
xor
aad
pop
out
imull
and
or
mov
mov
jg
inc
mov
push
mov
or
js
and
cld
or
ja
cmp
jb
repz
mov
mov
pop
test
stos
jmp
imul
cmp
xchg
mov
mov
shrd
mov
adc
imul
or
dec
sub
pop
sbb
sub
or
mov
insb
jae
loope
xor
cmp
outsl
sti
xorl
imull
je
sbb
push
repnz
jmp
scas
mov
pop
ljmp
pushf
mov
add
adc
xchg
push
sbb
popf
cmpsl
bound
ljmp
add
push
in
pop
out
inc
imul
sbb
sub
dec
or
loop
pop
adc
int
into
pop
and
sub
jne
and
push
add
xor
int
jno
and
lods
add
shrb
cmp
fisttpll
xor
xchg
outsb
pop
xor
out
das
mov
fisttpl
jle
pushf
andb
xchg
mov
fwait
enter
scas
roll
push
jb
not
dec
shrb
dec
mov
adc
mov
push
pop
adc
dec
push
xor
dec
cmp
rclb
add
push
test
call
add
mov
ljmp
push
push
aam
fs
pop
sbb
and
lock
arpl
xchg
in
out
test
pop
adc
ja
mov
sbb
push
hlt
jne
or
shll
outsb
adc
sbb
jo
insl
int
and
push
xchg
add
xor
ror
pop
jp
sbb
jno
fcoml
push
in
and
cmp
inc
sbb
cmc
mov
jp
leave
xchg
push
cmpsl
in
test
cmp
pop
ficoms
std
test
jmp
loopne
sbb
jae
pop
pop
mov
adc
push
leave
pop
add
lahf
fimuls
imul
inc
and
pop
cs
mov
cmp
cmp
insl
insl
or
imul
nop
loope
ja
out
xchg
push
jge
push
lret
sbb
xchg
je
adc
push
and
jno
push
fmulp
and
jnp
jb
aaa
pop
sub
xchg
xlat
inc
stc
xchg
jbe
out
sub
sbbl
xchg
jo
fiaddl
mov
clc
das
gs
mov
mov
popf
mov
or
mov
data16
pop
dec
xchg
dec
inc
lods
sub
shlb
add
das
sbb
mov
test
dec
pop
faddl
in
push
fimull
loop
pop
jmp
sbb
lods
dec
adc
test
mov
sub
je
mov
push
ss
fldt
inc
pop
imul
sbb
out
pop
push
adc
push
jne
test
inc
daa
lret
sbb
gs
push
imul
adc
sub
fs
add
movb
jnp
add
lcall
aas
repz
mov
push
or
adc
sub
mov
mov
iret
push
enter
stos
test
pop
loopne
stos
dec
xlat
shlb
aad
sub
shl
test
jge
pop
js,pt
clc
out
add
lea
pop
xchg
call
aas
cmpsl
inc
mov
pushl
je
and
cmp
mov
mov
fisubl
and
add
or
rcrb
push
jmp
and
mov
and
lea
and
dec
xchg
and
adc
dec
dec
mov
mov
test
push
dec
add
jno
sub
in
push
aas
cmpsl
inc
add
or
jmp
lds
in
pop
xor
or
xor
rorl
mov
pusha
pop
cmpsl
add
addr16
sbb
push
pusha
cmp
adc
in
jb
push
jmp
lock
outsb
loope
setno
jmp
dec
add
pop
jo
cmpsb
fisttpll
inc
sbb
and
lcall
stc
mov
call
adc
pusha
ret
inc
pop
adc
dec
xchg
js
sub
add
push
and
mov
nop
inc
mov
adc
dec
aam
lods
shrb
js
jg
xlat
add
cld
pop
push
outsl
scas
mov
and
adc
xor
popa
or
cmp
push
ljmp
sub
bound
lods
push
add
icebp
sub
je
data16
icebp
ljmp
xchg
xchg
or
jae
jbe
aam
push
insb
mov
mov
dec
rcrl
mov
pop
and
adc
out
cmp
iret
test
xchg
lret
sar
xchg
pop
xchg
rolb
into
cmp
gs
repz
shlb
sbb
cld
xchg
je
or
rcl
daa
fwait
imul
shlb
push
mov
clc
jp
cs
cmpsb
inc
cld
push
mov
loopne
dec
push
dec
add
xor
inc
push
aad
out
addb
push
xchg
inc
push
inc
and
or
sub
pop
xchg
push
pop
sub
sbb
cmp
nop
aad
inc
shrb
sahf
pop
das
int3
mov
dec
pop
inc
jae
aad
mov
rcrl
jno
cmpsb
push
adc
jle
hlt
jbe
push
mov
testl
cmpsb
inc
maskmovq
out
out
pop
movsb
jb
nop
imul
out
in
int3
mov
lcall
dec
loope
inc
pop
in
adcl
lret
adc
pop
inc
jg
popf
sbb
or
pop
sub
push
sub
add
inc
sbb
xor
aaa
cmp
insb
icebp
sarb
ja
pusha
or
movsl
mov
push
mulb
dec
int
and
mov
lret
ret
in
mov
dec
jl
pop
cmp
cmp
daa
add
sbb
mov
hlt
adc
mov
jno
test
ror
lahf
push
mov
inc
xor
sbb
mov
mov
js
jne
out
fs
in
sub
aad
add
xchg
push
and
and
cmpsl
add
das
jo
sti
add
pushf
and
icebp
push
mov
jo
inc
push
xlat
sbb
sub
out
and
and
mov
in
fisubrl
and
pop
add
inc
xchg
ss
imul
cmp
fnstsw
sbb
jno
sahf
and
sub
into
inc
dec
sbb
inc
jge
cld
inc
cltd
sbb
nop
mov
sbb
int
sti
adc
xor
cmc
jbe
lcall
mov
shrl
jne
pop
sub
aad
push
and
sbb
jecxz
lea
lea
sbb
dec
and
jge
or
adc
jno
nop
pop
sbb
inc
inc
mov
push
jne
pop
jecxz
insl
ss
fnsave
jle
sbb
push
aad
icebp
jecxz
mov
movsl
jno
cli
adc
test
and
jge
sub
or
sbbl
ss
gs
and
sbb
shll
stc
imul
nop
add
test
lods
mull
jecxz
pop
ss
fnsave
bound
mov
mov
rcll
mov
sub
and
popf
sbb
inc
mov
add
lods
sbb
or
or
aad
icebp
pusha
mov
je
push
mov
sub
and
int
push
jmp
cmp
mov
test
roll
je
mov
cmp
jp,pn
adc
loope
int
mov
adc
out
dec
jne
mulb
popf
jge
popa
insb
insl
pusha
dec
rorl
or
sar
add
mov
jecxz
insl
ss
fnsave
jle
sbb
push
shll
xchg
out
mov
mulb
mov
adc
sti
or
adc
test
and
ficompl
roll
je
push
dec
mov
sub
cmc
jno
mov
in
shll
mov
adc
ljmp
jge
push
insb
jge
cmp
adc
and
icebp
pusha
sbb
test
lods
mov
ss
mov
cmp
fstpl
jle
insl
int
addb
mov
nop
inc
sbb
inc
imul
jecxz
xchg
mov
cmpb
aad
icebp
push
mov
test
push
adc
sbb
push
in
jle
loope
mov
adc
adc
repnz
xchg
test
and
or
shll
nop
cmp
mov
popf
imull
jecxz
gs
lods
mov
adc
sbb
mov
mov
sub
and
popf
sbb
inc
test
cmp
lods
cmp
lcall
lea
shll
jno
push
mov
jno
nop
stc
sbb
hlt
int
mov
sub
into
inc
dec
cltd
sti
xchg
idivl
jecxz
jne
inc
fnsave
dec
in
mov
jl
leave
push
in
in
mov
sub
and
popf
sbb
inc
test
inc
testl
ss
insb
frstor
shl
shll
mov
sub
and
mov
xor
adc
sbb
sub
leave
or
negl
jecxz
dec
ss
sbb
push
and
jge
add
or
xchg
and
pop
sbb
inc
inc
lods
sti
test
inc
push
imul
mov
adc
add
inc
adc
in
loope
int
stc
ret
sub
and
xchg
sbb
inc
lods
add
sub
and
cli
stc
popf
sub
shrl
shrl
insl
mov
sub
shll
in
and
loope
cmc
into
mov
shlb
popf
sbb
inc
mov
or
lods
and
or
roll
jge
leave
insb
andl
je
push
jns
push
adc
fnsave
nop
cmc
sbb
adc
mov
adc
fimuls
test
and
push
popa
insb
insl
pusha
dec
roll
adc
xchg
aad
loope
jmp
add
dec
sbb
pop
stc
sbb
nop
gs
xchg
or
adc
dec
mov
jns
imul
push
cmp
mov
sub
or
adc
push
bnd
inc
mov
pop
leave
xchg
aaa
stos
xchg
lods
sbb
xor
stos
outsb
push
enter
cmpsl
frstor
jmp
jno
push
scas
js
dec
sbb
and
data16
mov
inc
sbb
xor
mov
jmp
xchg
dec
into
imul
daa
mov
icebp
cmovb
push
mov
cmp
push
mov
rcrb
or
pop
push
xchg
push
stos
or
add
jg
xor
cmp
stc
outsb
sub
imul
mov
mov
sbb
lods
hlt
inc
push
pushf
imul
les
push
lahf
jp
dec
mov
cmp
shll
pop
scas
fisttpll
cmp
loope
add
cmpsl
lods
mov
push
dec
pop
fs
mov
add
push
cmc
push
xchg
aad
jl
mov
bound
sub
xchg
jecxz
inc
mov
cld
je
sub
bound
jle
cmp
sub
inc
jae
mov
push
xor
dec
adc
jnp
rorl
std
and
sub
insb
xor
sbb
stos
lea
stos
push
mov
int3
jle
dec
jnp
out
inc
outsl
add
mov
sub
scas
or
cmpsl
movsl
cmp
mov
adc
mov
xchg
dec
xor
and
insl
imull
pop
mov
aas
cmp
and
inc
addl
ljmp
xor
mov
mov
and
outsb
push
and
fwait
push
lods
inc
dec
lods
sub
and
aas
dec
sahf
mov
cmp
stos
jne
mov
stos
test
jge
ljmp
cmp
fcmovnb
out
leave
ljmp
std
cld
xor
cmc
cmp
aad
mov
popf
pop
jne
jge
bound
and
mov
jge
jmp
inc
shrl
fmull
mov
sub
fldenv
scas
inc
dec
cmpsl
insl
scas
push
xchg
bound
insw
inc
into
jbe
scas
ja
and
dec
sbb
dec
adcl
pop
mov
dec
xchg
adc
jne
daa
dec
xchg
shrl
inc
dec
mov
aam
and
std
push
and
sub
mov
xor
inc
loope
dec
and
ds
movsl
negb
inc
rorl
repnz
inc
pop
xchg
dec
lret
cmc
push
outsb
inc
mov
jg
inc
scas
or
mov
jne
divb
cmpsl
test
dec
cmp
jmp
jecxz
mov
jnp
xchg
icebp
mov
or
xchg
sub
sub
dec
stos
mov
or
stos
mov
and
fs
jbe
adc
sbb
or
aas
cwtl
std
push
imul
inc
mov
or
cmpsl
das
or
in
xchg
sbb
add
jno
cmpsl
insb
lcall
xor
sub
stos
popl
ficoms
mov
and
sarb
pushf
dec
cmp
jno
mov
mov
mov
mov
or
gs
and
adc
jo
fs
repnz
repnz
jge
imul
mov
bound
cmpsb
loop
sbb
jg
sbb
jg
and
push
movsb
pusha
lahf
mull
mov
cltd
ffreep
adc
xor
push
dec
mov
sub
popf
xlat
mov
and
xlat
dec
sarb
fwait
mov
leave
int3
shrb
xchg
movsl
shl
jmp
dec
sar
int3
lret
outsw
xor
js
inc
mov
dec
rcrl
xchg
test
gs
cmpsb
das
xchg
and
pop
jb
mov
and
mov
jle
fmull
xor
mov
jp
add
dec
in
in
insl
xor
cmp
mov
push
mov
lret
push
and
adc
push
jmp
imul
outsb
dec
mov
xor
fistpl
inc
sub
loope
inc
pop
dec
dec
jno
inc
test
addb
xor
and
xchg
cltd
les
sahf
outsb
adc
sbbb
cld
sahf
cs
imul
mov
mov
rol
shll
ss
pusha
push
repz
sbb
sub
pop
aas
fdivrl
sbb
fimull
cmp
outsb
test
jl
cmpb
sbb
push
lock
xor
aad
add
mov
je
sub
inc
jmp
and
adc
and
pop
das
aad
sbb
leave
and
push
test
push
dec
jbe
sbb
sbb
jo
jns
cwtl
xor
psrlw
shlb
xor
or
sbb
push
fsubl
pop
outsl
repz
cmc
gs
jb
push
and
int
das
xor
pop
dec
jmp
ja
dec
stos
inc
in
jns
xor
jmp
lods
and
xor
cmpsl
lret
bound
push
jbe
add
ja
or
jae
cwtl
dec
pop
ficompl
pop
push
jp
ja
and
data16
pop
shlb
sbb
lods
pop
in
lds
push
ss
push
lahf
call
push
insb
std
mov
aas
dec
cmpsb
idivb
rolb
push
inc
mov
or
xor
mov
xchg
pusha
inc
outsb
js
std
jle
stos
cmc
test
lret
cmc
jnp
dec
push
jno
inc
dec
xor
enter
loope
sub
fcompl
inc
sub
dec
sub
or
pushf
sub
les
push
push
orb
das
sub
dec
jge
sub
jnp
subb
or
lds
or
divb
add
add
out
inc
jo
xor
loopne
sbb
add
or
scas
dec
inc
sti
jo
jge
les
sub
mov
lods
and
pushf
outsb
cmpsl
sbb
dec
push
jae
pop
call
je
aad
cmpsl
mov
xor
jns
sub
jne
pushf
inc
or
push
scas
inc
call
into
dec
es
sarl
xor
inc
das
fwait
mov
pusha
xchg
xchg
test
dec
sbb
addr16
and
jle
pushf
jle
jno
mov
dec
mov
ds
lds
aaa
inc
jmp
insb
push
sub
xchg
and
shrl
and
aas
inc
sbb
pushf
pushl
stos
jmp
sahf
sarb
test
iret
cmpsb
sub
enter
sahf
mov
or
xchg
inc
jbe
cmp
int3
adc
sbb
gs
jecxz
xor
add
popa
shrb
dec
daa
adc
cmp
cmp
sti
insb
sub
xor
fisttpll
lods
jmp
lods
and
mov
popa
mov
xor
lods
mov
xor
sbb
pusha
pop
jb
sub
cmp
push
add
hlt
inc
push
push
mov
cmp
cmp
rorl
or
adc
cld
sbb
addl
sub
and
pop
mov
inc
fdivrl
pop
sub
xor
lods
jmp
adc
xchg
std
imul
mov
ficoml
and
les
and
mov
dec
rcr
lods
inc
mov
adc
insb
xchg
jne
mov
jmp
push
adc
inc
jmp
jg
xor
loope
pop
mov
scas
arpl
or
shlb
mov
push
jbe
repnz
test
sbb
xor
jae
dec
cmp
ja
mov
xor
imul
push
mov
pushf
imul
inc
mov
lds
popa
pop
mov
push
pop
add
xlat
das
lock
out
test
push
adc
or
sub
fdivrs
flds
imulb
lea
stc
jge
cmpsl
push
and
cmp
je
dec
js
push
lock
push
mov
fs
lods
jb
jo
jno
mov
cmp
push
les
movsb
mov
and
rorl
push
xor
loope
scas
and
outsb
mov
or
inc
sbb
sbb
or
cmp
or
inc
adc
daa
loop
data16
fsubrs
jmp
imul
js
dec
or
cmc
enter
jae
mov
rcll
push
mov
jbe
push
mov
inc
test
lret
and
add
jne
or
notl
daa
popa
aaa
jo
dec
sti
icebp
sbb
scas
popa
enter
icebp
lock
sub
fisubs
sbb
lea
xchg
xchg
cmc
jnp
xor
mov
dec
push
leave
lods
bound
std
xor
inc
fdivs
and
test
into
jbe
lods
pushf
lods
inc
pop
push
inc
jne
inc
pop
and
or
cmp
ds
int3
faddl
test
xor
mov
mov
and
pop
imul
mov
scas
mov
push
aad
mov
enter
cmpsl
imul
jo
ja
inc
mov
arpl
das
dec
std
jle
sub
sbb
jp
or
mov
sub
jae
outsl
xor
and
mov
fsubs
out
sbb
pop
std
push
sti
pop
cmp
adc
push
fsubl
into
xchg
jnp
fiadds
cmpsl
xor
int
out
mov
xchg
mov
xchg
push
xchg
outsl
jp
lret
and
xchg
out
in
lods
movsl
sbb
lds
cmp
mov
jne
ljmp
sub
aaa
es
int
sahf
outsl
lods
mov
enter
xchg
xchg
mov
sysexit
xchg
push
fcom
xor
inc
aam
mov
push
fcompl
movsb
pusha
or
jne
pop
pop
iret
mov
lods
lock
mov
in
shlb
in
sbb
popf
mov
adc
data16
sbb
rcrb
out
mov
jno
pop
inc
jae
imul
out
scas
pusha
pop
adc
inc
fnstenv
cmpsl
bound
jae
sahf
lret
sti
lret
xlat
jno
push
mov
jno
sub
inc
shll
and
pop
pushf
xchg
jle
mov
daa
push
mov
or
push
mov
sbb
and
and
hlt
add
push
jp
pusha
mov
mov
mov
sbb
xor
repz
sub
iret
pop
aas
in
imul
pop
inc
xor
jb
cmp
jg
addr16
iret
or
push
out
and
cs
cmpsl
aaa
pop
push
daa
sbb
push
loope
add
pop
std
adc
repz
in
arpl
xor
fistl
int3
and
shll
cmp
das
sub
je
dec
popf
sahf
push
icebp
pushf
outsb
movsb
or
inc
and
adc
cmp
mov
mov
es
add
xlat
mov
cld
xor
pop
lock
stos
pusha
and
popa
push
test
fdivrs
es
inc
fdiv
adc
xor
inc
mov
dec
pop
arpl
mov
and
push
mov
pop
adc
jge
pop
lods
push
scas
std
ror
lahf
adc
inc
sti
push
fcoms
xor
mov
jge
jne
push
lods
jno
sub
rolb
inc
fxch
aas
or
sub
push
push
pop
sub
push
and
xchg
jle
fcoms
or
bound
nop
fwait
mov
jge
xor
cmp
xchg
jle
fmull
mov
subb
lds
inc
cmp
and
inc
inc
add
xor
jne
cmp
sar
xor
ficoml
dec
cmc
sbb
sbb
or
mov
or
imul
imul
mov
sub
mov
fwait
mov
sub
insl
push
push
mov
sub
or
shll
adc
jnp
loop
lods
xor
loope
and
in
sub
or
sub
mov
faddl
add
out
movsb
scas
stc
gs
adc
push
fsubl
pop
mov
sbb
daa
add
vmulsd
pop
pop
xor
inc
nop
iret
jo
sbb
jns
and
pop
jo,pt
xlat
mull
fisttpl
inc
xchg
adc
xchg
nop
pop
lcall
dec
enter
dec
xchg
loopne
pop
icebp
dec
or
cli
andb
imul
addb
loop
jecxz
cli
leave
scas
cmpsl
rcl
je
mov
pop
das
dec
das
mov
pop
jno
cmp
leave
and
lret
xor
jne
mov
les
mov
ljmp
cs
test
xchg
ficompl
push
clc
test
mov
lock
pop
sbb
ja
gs
dec
and
jg
sbb
sub
ret
mov
pop
clc
into
ss
repz
loop
sbb
cmc
in
push
push
jg
sbb
lret
inc
cld
in
testl
push
push
jne
mov
les
daa
ljmp
sub
test
xchg
cmp
sbb
ret
popa
fwait
jp
repz
in
dec
push
add
js
loop
sbb
adc
lods
popa
dec
ja
lret
push
jnp
movsl
adc
shll
and
sbb
sbb
roll
adc
cmpsl
or
and
sbb
jge
rolb
cmpsb
jge
sbb
xchg
push
scas
aad
adc
sbb
in
xchg
jb
pop
std
pushf
mov
imul
adc
mov
xor
cmp
jle
enter
push
mov
cmp
dec
and
jno
push
or
mov
movsl
aad
pop
adc
jo
hlt
sbb
outsb
xchg
pop
enter
inc
inc
sbb
and
push
xchg
imul
mov
jns
pop
pop
lds
shll
mov
sub
ret
and
push
pop
in
push
pop
rcll
aas
cmp
dec
mov
das
pop
stc
cmpsl
bound
add
pop
lss
clc
push
xchg
adc
dec
xchg
cmp
pop
mov
pop
xor
ror
dec
lods
loopne
jnp
int3
and
jecxz
in
dec
cli
cmc
ds
andl
jge
lds
mov
xchg
cmp
mov
sub
and
test
adc
push
adc
inc
test
inc
fs
call
pop
mov
adc
rorb
test
and
push
jne
push
pusha
shll
je
push
inc
mov
sub
cmc
jno
mov
loopne
icebp
shll
fnsave
sbb
out
and
cli
jge
dec
pusha
shll
je
push
inc
mov
sub
stc
jno
nop
loope
mov
aad
loope
mov
adc
sbb
out
and
idivb
push
pusha
popa
shll
je
push
cmp
int
outsb
and
sbb
arpl
aad
in
mov
adc
sbb
fisubs
inc
jge
xchg
insb
mov
add
pop
push
push
mov
sub
int
push
nop
std
sbb
in
lds
add
push
or
sbb
lods
negl
jecxz
mov
imul
test
and
jge
and
adc
xor
in
jge
int
stc
cmp
mov
sub
and
mov
cmp
add
sub
lods
sub
or
call
push
int
std
jecxz
lea
lods
inc
mov
adc
testb
add
cmpl
cmp
adc
push
adc
int
jmp
lods
jmp
ss
inc
sbb
cli
and
push
and
imul
je
push
and
jp,pn
sbb
mov
mov
sub
nop
dec
sbb
inc
jno
sti
test
inc
push
jne
push
jecxz
insl
ss
fnstenv
push
dec
icebp
test
adc
call
scas
mov
sub
nop
push
sbb
inc
inc
mov
push
jns
push
jecxz
popa
ss
lods
mov
adc
sbb
push
and
jge
or
mov
and
and
sti
shl
push
mov
xchg
jecxz
mov
push
adc
test
and
or
shll
mov
rcll
lods
jmp
ss
inc
sbb
mulb
cltd
jge
gs
popa
pusha
push
shll
je
push
sub
cmc
sub
sbb
jbe
lods
aad
loope
loope
shrl
sbb
and
or
pop
pusha
pop
shrl
je
push
xor
stc
sub
loope
mov
in
leave
jecxz
in
aad
mov
adc
ret
test
and
loop
insb
mov
cmp
gs
push
mov
sub
lds
nop
cmc
sbb
sbb
xchg
or
jno
nop
pop
sbb
inc
dec
popf
sti
mov
lods
mov
imul
test
and
jge
adc
std
subl
xor
andl
je
push
mov
sub
and
movsl
sbb
aad
sti
sbb
mov
loopne
inc
or
cmc
push
lds
xchg
movsl
jns
out
imul
sbb
insl
pusha
dec
roll
sbb
sbb
scas
loopne
shlb
loope
mov
sub
and
inc
sbb
inc
jne
sti
xor
pop
jecxz
insl
ss
mov
sbb
bound
in
fsubs
sub
jno
nop
xor
shl
push
test
mov
test
sbb
and
lods
jge
cmp
sub
sbb
sbb
or
mov
out
push
jmp
jmp
ficoms
inc
sbb
repnz
gs
push
shll
je
push
xor
sub
hlt
and
and
cmp
lods
and
mov
insl
sbb
push
and
jno
inc
roll
xor
sbb
popa
jg
les
gs
pop
jl
or
sbb
mov
xchg
push
mov
mov
push
adc
test
and
jge
and
shll
and
shll
leave
xor
nop
pop
sbb
inc
inc
lods
sti
mov
inc
push
jno
push
jecxz
popa
ss
lods
mov
adc
sbb
and
jge
stc
movsl
cli
sahf
mov
sub
nop
pop
sbb
inc
inc
mov
push
jge
dec
jecxz
gs
test
sbb
push
and
jl
ret
mov
jne
mov
pop
shlb
test
mov
and
popa
sbb
inc
xchg
push
sti
pop
imull
dec
lods
jge
cmp
or
and
jmp
clc
jp
je
push
fldenv
sub
and
jge
incb
inc
sti
jno
pop
push
pop
lods
imul
xor
stc
sbb
jbe
sbb
stos
and
shll
fnsave
mov
adc
sbb
fisubs
inc
jge
xchg
insb
mov
mov
mov
push
popa
mov
sub
shll
nop
int
push
inc
std
sub
add
adc
jecxz
add
icebp
sti
shl
push
test
test
push
adc
test
and
jge
and
or
pop
lock
pop
in
in
pusha
int
std
cmp
mov
sub
and
lea
adc
imul
xor
sub
mov
fstl
lods
in
jecxz
stc
ss
inc
sbb
cli
and
or
pop
pusha
pop
shrl
je
push
xor
sub
in
gs
adc
scas
and
and
push
xchg
lods
mov
test
inc
ss
mov
adc
test
and
jge
and
shrl
or
std
pop
sbb
fincstp
cmc
push
lds
xchg
movsl
jno
adc
push
dec
xchg
test
and
jge
cmp
je
push
adc
adc
jecxz
icebp
rcll
adc
ljmp
jge
jno
push
pusha
shll
je
push
inc
mov
sub
icebp
jno
mov
adc
sbb
into
and
fisubs
shll
imul
jno
nop
aad
pop
inc
lds
push
std
pop
dec
xchg
mov
xor
jecxz
xchg
ss
jno
adc
push
dec
mov
ds
insb
add
cmp
add
xchg
lods
cmc
jecxz
movl
testb
push
and
jne
inc
sarl
je
push
and
jp,pn
sbb
fnsave
fnsave
mov
adc
test
and
out
insb
inc
pusha
jne
push
cmp
popa
push
push
mov
sub
lds
nop
cmc
sbb
hlt
rol
add
lcall
sbb
test
lods
test
ss
mov
adc
test
and
jge
and
adc
sub
push
fcom
pop
shlb
pop
jl
or
ret
movsl
sti
xchg
idivl
jecxz
popa
ss
movsl
mov
adc
sbb
jp
insl
rol
sub
xchg
adc
sbb
mov
pop
jge
test
shll
jne
push
push
mov
jno
nop
aad
pop
inc
lds
sti
adc
xor
push
dec
fwait
mov
xor
leave
idiv
push
mov
cltd
ss
jne
cli
adc
or
test
and
jno
inc
roll
xor
and
inc
cmp
pop
and
push
pop
cmp
cli
subb
mov
sbb
mov
sbbl
pop
cmc
es
or
mov
pop
and
xchg
mov
outsl
nop
and
outsb
inc
push
pop
push
xor
dec
jnp
push
mov
add
and
pop
adc
xchg
into
scas
sbb
xchg
int
push
mov
sub
sub
push
icebp
xor
jnp
and
je
or
dec
lcall
pop
pop
sub
jmp
bound
pop
xor
pusha
pop
dec
bound
or
sub
and
cmc
les
mov
cltd
pop
adc
push
stc
push
mov
sbb
test
cmp
push
jp
cmc
jmp
adc
push
jp
sbb
mov
les
inc
xchg
pop
xor
enter
les
push
lea
add
sbb
sub
sbb
jb
aam
cmc
shrb
ja
nopl
push
lods
inc
loope
fisubl
xchg
in
arpl
iret
push
lock
fisubl
rorl
cmpsb
icebp
push
int3
xor
daa
inc
or
adcl
lods
das
xchg
in
jle
xor
jns
sbb
jmp
fisubrs
push
add
adc
stc
inc
push
push
mov
sbb
mov
jge
pop
adc
popf
sub
pop
int
imul
pop
sbb
inc
add
lds
mov
cld
insb
or
into
adc
fistpl
enterw
xchg
xchg
adc
lds
sbb
into
push
fimuls
sbb
mov
inc
jl
in
mov
divb
aaa
or
lock
cmc
insb
and
xlat
pop
adc
adc
push
add
jmp
fwait
mov
jmp
das
jne
nop
arpl
mov
inc
imul
dec
pop
insl
inc
sub
mov
jp
sub
xchg
hlt
sbb
je
add
or
dec
sbb
je
add
scas
rcl
rcll
pop
inc
imul
movsl
daa
in
pop
and
dec
rorl
dec
xchg
ljmp
int
adc
stos
sbbl
pop
sbb
add
sub
pop
dec
fucomp
and
cltd
mov
into
stos
negl
adc
push
scas
push
xchg
lcall
cmc
mov
xchg
pop
adc
fwait
addr16
cmp
mov
sbb
call
shll
adc
sbb
xchg
sub
jo
dec
fidivrl
mov
jmp
or
xchg
lcall
ss
pop
or
xor
xchg
push
lods
or
daa
add
and
sbb
imul
mov
xor
scas
lds
add
cld
out
lds
daa
lahf
in
sbb
or
dec
mov
daa
or
mov
add
sbb
xchg
mov
pop
pop
stos
sub
cmc
sbb
cmpsb
or
mov
xchg
mov
push
push
arpl
jg
gs
inc
jl
aam
xor
push
lret
aaa
daa
pop
pop
imul
jg
test
test
xchg
push
pusha
fists
adc
sub
add
lea
push
cmc
pop
fldcw
xor
jl
nop
sub
lahf
ljmp
std
dec
pop
movsl
mov
inc
sbb
and
push
jp
mov
jnp
xchg
or
jle
jmp
test
jle
hlt
test
jmp
push
mov
push
icebp
pop
aaa
ljmp
mov
dec
push
dec
mov
fwait
imul
iret
sub
xor
dec
sti
lret
xor
lcall
arpl
jge
mov
lret
lds
jae
jne
std
hlt
push
or
add
push
adc
subl
xor
mov
pop
bound
or
repnz
jae
lds
clc
xor
jp
cmc
lods
pop
mov
push
sbb
shrb
mov
sub
cmpsl
sbb
imul
sahf
insb
sbb
xchg
nop
cmpb
xchg
stos
bound
mov
sub
jne
popa
mov
in
xor
push
test
push
jo
pop
bound
jns
bound
fwait
sti
pop
and
bound
mov
rcrb
mov
mov
fisubs
sbb
lods
jp
mov
pop
cmpsb
sbbb
mov
jno
scas
dec
dec
and
adc
or
in
je
adc
icebp
mov
subb
test
mov
stos
dec
outsb
jns
sub
and
xchg
repz
aaa
xor
mov
testl
orl
cmp
mov
sub
push
mov
shll
inc
jns
aad
mov
jne
fwait
test
and
ljmp
in
in
adc
std
jne
outsb
inc
and
or
xor
adc
jae
data16
bound
mov
push
xchg
push
test
mov
sub
or
sbbl
cltd
test
scas
loopne
sbb
in
dec
aam
mov
enter
cld
mov
xlat
push
adc
lcall
mov
xchg
dec
fsubs
lea
sbb
test
or
fmull
arpl
push
mov
push
aad
or
xchg
mull
xchg
enter
shl
push
loop
jae
negl
push
ja
out
popf
cmpsl
movsl
insb
hlt
or
dec
pop
xchg
adc
jmp
enter
dec
sub
pushf
push
nop
xor
jnp
mov
sbb
and
jg
std
or
dec
int
insb
xchg
imul
in
jle
mov
or
xchg
jg
sub
mov
mov
dec
jp
jle
jge
cld
shl
push
and
and
xor
adc
fdivs
cmpsb
xor
ret
sub
movsl
xor
shll
add
push
ret
lock
movsl
in
adc
and
je
inc
pop
fwait
cld
mov
jmp
aad
stos
jmp
cmc
daa
or
xchg
lret
mov
cmp
cmp
stos
cmc
push
xor
test
test
fmuls
adc
xlat
fs
loopne
xchg
std
dec
test
cmc
ljmp
xchg
mov
push
inc
xor
addr16
daa
gs
pop
jge
pop
jne
jae
jp
popf
push
and
xor
jp
ss
and
enter
pushf
lret
sahf
dec
or
call
push
or
mov
outsl
jle
inc
frstor
adc
add
dec
pop
pop
int3
imul
mov
cmp
popa
jbe
mov
int3
mov
or
push
jmp
jae
nop
stos
sbb
dec
orl
adc
sub
testb
call
les
frstor
iret
jnp
dec
loop
or
sub
mov
test
movaps
stos
outsb
testl
or
adc
xor
mov
pop
sub
loop
pop
jne
aam
jne
out
pusha
stc
pop
sbb
push
rcll
adc
xor
and
bound
mov
mov
cwtl
adc
orl
sti
test
inc
jp
aad
add
mov
je
push
mov
sbb
xor
push
jns
mov
arpl
test
jmp
orl
push
flds
adc
mov
imul
arpl
cltd
jo
pop
test
cmp
les
cmpsl
outsl
test
inc
dec
dec
das
jp
sub
inc
lea
jle
test
out
fnsave
pop
fidivl
cmpsl
mov
pop
outsl
pop
push
je
sub
int
int
flds
push
js
rcrb
gs
insl
fnsave
xorb
push
xor
jp
out
int
xchg
xor
push
fs
jno
aas
pop
adc
rclb
mov
mov
mov
in
inc
gs
stos
daa
lea
insb
inc
cmpsl
push
xor
out
sbb
in
add
push
aam
inc
jge
mov
adcb
icebp
insl
ficoml
cltd
lods
xchg
mov
pop
and
adc
jp
ret
push
sub
adc
mov
nop
dec
mov
pop
dec
push
cltd
jle
adcb
mov
and
rcrb
shll
shlb
or
or
repnz
pushf
sub
loopne
test
mov
mov
mov
mov
faddl
iret
and
push
int3
pusha
sbb
outsl
xchg
or
lea
mov
pushf
and
dec
jp
or
and
scas
out
popa
fucomi
push
neg
xchg
sbb
mov
addr16
lods
outsb
dec
ret
mov
lea
mov
test
push
popa
fs
lret
mov
insb
push
pop
dec
add
pop
or
data16
jae
inc
dec
xor
bound
aas
dec
jg
rolb
fadds
add
jmp
adc
dec
push
push
lcall
dec
popa
push
xlat
jns
sub
lock
icebp
enter
fidivl
push
push
icebp
xlat
hlt
fcmovu
cmc
xlat
or
mov
xor
inc
adc
jge
icebp
mov
fisubrl
in
fs
adc
and
call
sub
imul
push
pop
pushf
mov
push
xor
add
fisttps
or
xchg
inc
dec
sarl
cwtl
adc
or
push
xor
test
mov
insb
test
sub
fbld
sub
lahf
push
cmpl
pop
icebp
or
adc
dec
mov
dec
in
xchg
leave
movsl
fucomp
sub
int3
sub
leave
or
or
jl
scas
lock
lea
loopne
mov
lods
push
cmpsb
dec
loope
and
pushw
sbb
cmp
cmc
adc
sub
mov
sbb
aad
sbb
pop
jb
jg
dec
test
pop
lcall
ds
loope
arpl
and
cmpsl
xchg
and
push
jle
pop
adc
dec
and
jg
fwait
addr16
pop
arpl
jecxz
adc
push
adc
cmc
stos
push
imul
outsb
shl
xor
js
sub
std
sub
pop
mov
push
ret
cmp
xchg
lock
icebp
push
aad
sbb
hlt
xchg
outsb
mov
gs
pop
xlat
int3
dec
jp
adc
adc
sub
cmp
jmp
push
cmpsl
or
jno
ljmp
out
lcall
movsl
cmpsl
cs
sbb
mov
pop
bound
and
mov
or
in
xchg
lods
les
adc
in
dec
xchg
xchg
lods
jae
scas
je
bound
daa
push
xor
jg
daa
imul
mov
sub
in
pop
data16
out
arpl
out
shr
mov
les
dec
jle
sbb
cmc
stos
pop
adc
pop
test
insb
xchg
sbb
sub
adc
mov
cmpsl
loopne
insb
repnz
cld
push
dec
les
cmp
lret
mov
sbb
lods
sub
push
popf
fstpt
subb
xor
mov
stos
xor
jmp
stc
sarl
andl
push
repz
pop
clc
cmp
lods
iret
sbb
outsb
pushf
xor
lret
outsl
xchg
shlb
lcall
push
mov
jp
stc
pop
adc
dec
xor
push
gs
fsubl
or
ret
lds
bound
pusha
jecxz
push
int
cmp
cmc
jnp
repz
and
dec
enter
pushf
sbb
xchg
fsubl
cltd
inc
xchg
jle
pushf
adc
fs
or
jb
xor
test
inc
xor
jg
ficoml
ret
mov
ret
mov
xchg
repnz
xorl
mov
aaa
jno
inc
xor
addr16
lock
popa
add
adc
ss
ljmp
test
dec
aas
sbb
sub
sbb
push
shll
jg
fdiv
xchg
enter
cwtl
or
or
cmp
and
addr16
jb
adc
insl
and
arpl
popa
jno
rclb
mov
mov
jae
in
lock
fstpl
sti
pusha
inc
push
or
loopne
sbb
and
outsl
repnz
xlat
mov
sub
adc
ja
xchg
shll
rorb
jg
jp
test
sub
shr
mov
fiaddl
push
jns
pop
cwtl
or
nop
pop
ficoms
inc
clc
jno
test
cwtl
jge
jbe
mov
or
popf
bound
lods
fldcw
pusha
sub
fs
sahf
xor
in
daa
cmpsb
mov
syscall
test
mov
add
ficoms
daa
xor
int3
cmc
jnp
jne
pop
mov
aad
push
popf
sar
mov
dec
sub
rorl
out
imul
mov
nop
nop
maxps
mov
pusha
xchg
add
mov
scas
adc
pop
out
in
jmp
xchg
mov
sbb
mov
sbb
scas
adc
cld
mov
mov
jp
adcb
test
push
sbb
adc
scas
roll
xor
jp
mov
push
arpl
dec
jne
pop
imul
cltd
je
push
insb
scas
pop
inc
inc
fistpll
cmc
mov
ja
inc
das
adc
mov
imul
adc
or
mov
mov
or
and
mov
nop
dec
xlat
mov
fistps
adc
sti
sub
add
sub
scas
shrd
test
loop
jl
inc
adc
xchg
push
inc
xor
gs
jns
or
aas
sbb
icebp
mov
loop
nop
pop
inc
sar
add
in
lods
sbb
rclb
mov
jge
outsb
outsb
and
jp
pushf
xor
lahf
xchg
xchg
jp
xchg
xchg
iret
dec
fwait
jle
popf
xchg
sub
mov
outsb
imul
roll
inc
pop
nop
lea
pop
leave
or
bound
cld
negb
jle
and
int
adc
cmc
out
pop
push
ret
outsl
imul
lret
jmp
mov
or
inc
mov
lret
test
cmpsl
push
and
push
popa
or
into
orl
test
shll
popf
shlb
xchg
scas
sbb
les
cmp
and
inc
into
add
cwtl
cmpsb
pop
jp
add
bound
ret
xchg
in
pop
sbb
fcomi
gs
outsb
jmp
inc
ss
pop
in
adc
dec
in
push
jmp
dec
sub
scas
mov
or
dec
xor
mov
xchg
mov
bound
lods
or
mov
dec
arpl
dec
sbb
mov
jbe
and
in
std
pop
inc
data16
pop
imul
cli
push
jp
xchg
mov
fistpll
scas
data16
inc
adc
and
inc
sbbl
outsl
mov
sub
xor
jae
push
insb
push
sub
mov
mov
mov
mov
push
cwtl
std
push
cmp
adc
and
xchg
dec
jmp
sub
fisttps
add
mov
jne
leave
sbb
sbb
push
sub
or
test
push
xchg
add
or
lock
outsl
lds
lds
leave
mov
pop
mov
out
scas
cld
mov
xorl
inc
sbb
dec
push
adc
aad
and
dec
and
inc
and
pusha
sbb
dec
xor
fdivr
ljmp
add
bound
in
pop
sahf
jno
dec
inc
ja
js
push
xchg
pop
xchg
and
push
in
rclb
movsb
pusha
arpl
lock
ds
and
inc
loopne
mov
ljmp
mov
inc
pushf
outsl
sti
inc
push
fimuls
lcall
enter
dec
mov
test
lret
mov
in
pop
stc
shl
btc
and
mov
adc
aaa
mov
sub
or
xchg
ficoml
adc
daa
jno
imul
fcomps
sub
jnp
mov
adc
rorb
adc
sbbl
add
ljmp
lret
mov
mov
scas
daa
lods
hlt
lods
push
push
jae
and
sbb
nop
push
jl
adc
ret
xchg
bound
ret
negl
mov
mov
xor
daa
or
pop
push
and
lret
sti
iret
stos
movsl
xor
jle
test
hlt
xchg
and
out
outsl
sbb
dec
mov
dec
lahf
jl
adc
scas
and
xchg
xchg
frndint
mov
xor
pop
push
jo
ja
mov
sahf
jno
jp
xchg
pop
enter
inc
adc
jecxz
push
inc
and
fstl
in
jne
push
xor
insb
loopne
int3
pop
bound
int3
sub
add
fidivl
mov
mov
adcb
or
xchg
jp
mov
adc
jne
insl
sub
dec
and
je
dec
and
bound
mov
push
bound
sub
iret
es
sub
fisubl
sub
mov
jmp
pop
out
outsb
negb
or
ret
jne
pusha
push
cmp
pop
testb
stos
in
jle
mov
jp
addl
ja
adc
jge
bound
xor
push
jns
ss
inc
mov
mov
or
adcl
call
sbb
push
stos
in
rclb
mov
es
inc
fdivrl
and
sub
xchg
scas
mov
cmpsl
adc
push
stc
outsb
es
dec
in
push
arpl
jl
bound
inc
push
push
cmp
and
xchg
xor
inc
mov
bound
shlb
and
jp
sub
loop
mov
xchg
sti
in
jmp
jbe
mov
xchg
mov
add
jae
sbb
test
call
dec
lods
jle
stc
insb
frstor
jecxz
or
jg
and
xchg
daa
mov
xor
add
stos
pushl
mov
add
adc
xlat
fs
push
rorl
ret
mov
bound
mov
jp
jmp
cld
in
jno
cld
shlw
loopne
xchg
pushf
and
mov
xor
mov
cmpsl
icebp
sbb
mov
and
push
test
push
movsl
or
dec
cmp
jl
cmpsl
mov
in
fisubs
int
insl
push
je
aas
icebp
jl
fcoms
pop
je
jb
data16
push
adc
pusha
bound
push
push
insl
dec
shl
or
xchg
lea
and
nop
lods
jmp
pop
push
and
in
pop
test
or
mov
sub
mov
shl
dec
sub
icebp
aad
enter
mov
cmc
push
pop
jb
dec
jmp
mov
mov
xchg
lock
add
push
out
mov
pop
andl
imul
inc
cmp
js
in
in
int3
xor
mov
imul
push
movsb
mov
adc
lret
stos
add
push
push
lods
jne
push
int
ffree
jbe
xor
call
subb
mov
mov
xlat
fsts
adc
cltd
jge
imul
lods
jns
je
xor
pop
scas
test
andb
js
in
in
mov
in
cmp
xchg
rcll
idivl
add
inc
dec
and
mov
sub
cld
pop
pusha
jne
xor
or
or
aad
test
push
jmp
imul
fimull
cmpsl
popa
mov
dec
in
jb
int3
fnstenv
push
dec
sub
xchg
cld
push
pop
roll
adc
jle
pop
sbb
push
adc
adc
jecxz
push
out
and
fistpl
rcr
xor
shlb
ret
mov
imul
inc
adc
std
notb
mov
jne
fs
push
fcomps
mov
es
inc
sahf
push
out
xchg
pop
and
mov
arpl
cmpl
jo
jne
xchg
pop
sub
repnz
push
loopne
lret
adc
fcompl
dec
inc
cmp
push
mov
insl
les
scas
add
or
xor
dec
or
mov
dec
mov
ja
adc
mov
test
adcb
ficoml
iret
mov
shl
test
into
ds
sbb
and
test
shrl
or
or
mov
adc
mov
and
ret
mov
jnp
enter
mov
jmp
pop
enter
adc
pop
fwait
dec
sub
or
testb
iret
clc
xchg
push
or
inc
in
imul
push
dec
sbb
jns
fisttps
cmp
les
lahf
jg
out
push
and
mov
dec
mov
mov
loopne
push
pusha
pusha
dec
mov
lods
add
dec
lds
push
pushf
inc
sbb
sub
cmp
cs
cmp
std
add
xchg
sub
lret
pop
rcrl
push
out
sbb
fnstenv
and
fsts
jge
sbb
adc
mov
push
sbb
sbb
adc
cmc
sbb
xorl
adc
mov
sub
push
add
nop
push
pop
ret
jns
bnd
and
jle
jmp
or
jmp
cmp
or
xor
jl
fisttps
or
mov
sub
loope
xor
or
imulb
je
aad
fisttps
in
sarb
out
or
add
das
nop
cmp
js
out
leave
sub
adc
es
xor
int
das
jno
xchg
fdivs
repnz
shl
mov
pusha
iret
push
jne
dec
lea
pop
outsb
lcall
dec
mov
mov
sbb
fcompl
addr16
xchg
mov
mov
sti
jbe
sub
adc
jnp
test
cltd
aam
mov
mov
stc
std
push
lret
push
jge
push
mov
mov
int
jae
jmp
mov
mov
outsl
add
mov
in
xor
xchg
mov
cmc
mov
lea
pop
add
mov
xor
cmpsb
jge
and
jno
push
sbb
mov
sub
push
fs
test
pop
std
sbb
push
das
pop
mov
sub
shlb
xor
outsb
dec
nop
mov
aas
ss
icebp
dec
sbb
or
dec
movsbl
mov
dec
xor
fsubrs
xlat
sub
mov
push
push
mov
sub
push
mov
xchg
dec
jl
push
gs
or
popf
lret
jo
pushf
sti
and
mov
inc
pop
imul
aad
sub
or
cmp
inc
stos
or
mov
push
gs
sahf
int
gs
movsb
clc
ds
push
rcrl
fstps
xchg
sbb
cmp
sbb
scas
jno
add
sub
mov
and
js
lods
pop
sbbb
ss
lahf
je
cmc
inc
imul
inc
aam
and
sub
cmpsl
mov
adc
inc
sbb
pop
xor
lret
xor
mov
ret
xlat
fcomps
lods
test
fwait
jno
sub
cmpsl
adc
pop
inc
pop
push
xchg
push
out
dec
lods
sbb
mov
and
scas
add
jb
mov
mov
dec
dec
jl
add
test
js
fcomps
roll
adc
lret
mov
adc
inc
jns
jne
test
inc
imul
xchg
sbb
cmpxchg
into
sbb
and
jg
pop
pop
enter
xor
fs
jnp
lock
shlb
in
sbb
adcb
out
sub
xor
subl
xlat
mov
and
sbb
sbb
dec
das
sarl
adc
xlat
adc
mov
fwait
jnp
in
inc
xor
or
adc
jno
or
scas
pop
lock
leave
pop
pop
push
xchg
mov
lret
rorb
mov
clc
aaa
push
sbb
mov
sbb
mov
sbb
daa
or
cmpsb
cmp
test
adc
icebp
cmp
cmp
xchg
add
mov
push
mov
jge
ja
adc
push
xchg
ja
pop
mov
ret
test
jnp
jns
sub
add
xchg
mov
or
pop
repnz
ss
xor
iret
mov
mov
pop
dec
mov
out
push
jnp
xor
imulb
adc
jle
in
in
sti
leave
idiv
push
mov
movsl
ss
imul
and
jge
add
xor
inc
inc
jge
dec
shrl
jp
xchg
rcrl
test
and
loope
in
ss
pop
mov
adc
inc
sbb
lds
push
xchg
int
incb
inc
sti
jne
push
push
or
jne
inc
jl
dec
dec
mov
aam
mov
sub
aad
or
in
xor
cli
std
or
xchg
or
fldcw
leave
sar
shll
mov
adc
in
jp
cld
sti
inc
test
cmp
imull
xchg
vaddpd
daa
and
arpl
xor
or
xor
sbb
push
test
daa
xlat
aam
jnp
lock
jg
dec
mov
daa
xor
test
fstpl
cmc
scas
andb
jne
or
cli
arpl
js
and
std
jnp
mov
mov
sbb
pop
icebp
jae
pop
das
sbb
cmp
subl
mov
lahf
or
mov
hlt
jp
enter
mov
dec
scas
inc
add
bound
inc
sub
inc
and
arpl
fstps
arpl
jbe
push
inc
xor
sbb
call
adc
lret
out
xor
out
mov
jns
xor
rclb
adc
add
cmp
dec
stc
inc
sbb
dec
in
jno
lea
in
dec
add
jns
pop
pop
mov
das
jb
imul
pop
inc
sub
stos
pop
test
push
scas
das
inc
popa
and
in
mov
divl
fs
sarl
add
jge
fmul
lret
loope
popa
std
aam
jmp
fimuls
add
pop
ljmp
mov
mov
dec
add
sub
out
cmpsb
sub
mov
aad
inc
cmp
jecxz
movsb
pop
cmpsl
dec
jae
pop
jb
sub
jge
les
ss
lret
pusha
rcrb
outsb
inc
push
lds
or
push
ja
sahf
mov
push
ja
aaa
outsl
fwait
add
mov
and
rcl
inc
jns
adc
nop
pop
pop
scas
pop
cmp
xchg
fsubp
and
out
push
mov
add
sub
imul
sub
shll
cmp
adc
push
mov
cs
std
out
jb
incb
repnz
bound
xor
std
ror
int
or
cmp
insl
sub
sbb
divb
mov
ss
aam
lds
outsl
jne
push
cmp
leave
adc
pop
enter
add
dec
cmpsl
push
lods
or
lcall
cmp
sub
and
out
dec
adc
xchg
jle
daa
scas
xlat
add
mov
pop
pop
jmp
push
cli
pusha
mov
ljmp
adc
mov
push
je
mov
xlat
push
dec
fsubrs
das
sub
xor
jl
cmp
dec
lahf
or
dec
cmp
iret
test
dec
movsl
imul
pop
ucomiss
cmp
adc
lods
pop
sbb
in
sbb
mov
jmp
jecxz
jo
mov
repnz
and
imul
xchg
inc
int
movsb
pop
inc
test
push
push
and
movsb
fs
jb
stos
es
or
sub
jo
mov
push
leave
pushf
jecxz
add
mov
add
ss
int
repnz
mov
push
xor
jb
fisttpll
dec
test
push
subl
dec
mov
imul
dec
sbb
xlat
in
pop
push
stc
scas
out
roll
xchg
pop
lea
mov
mov
aas
inc
cmp
aas
dec
or
loop
lods
shll
mov
mov
in
push
pusha
jp
or
btc
stc
insb
cmpsb
push
xlat
gs
xlat
aam
int3
pop
ds
leave
jae
push
jge
popf
mov
arpl
sub
inc
jae
pushf
xlat
imul
shrb
sbb
adc
and
or
int
pop
movsb
or
inc
dec
std
jo
push
xor
adc
cmp
popa
loopne
scas
dec
in
xor
in
adcl
aam
pop
scas
dec
test
enter
and
lods
pushf
mov
push
xchg
mov
aam
inc
pop
pop
dec
repz
mov
rcrl
dec
subb
es
xchg
inc
xchg
cmp
pop
pop
dec
sbb
pop
dec
jle
cmp
or
scas
dec
iret
or
xchg
pop
repz
jno
nop
mov
adc
addr16
and
or
pop
rcrl
ljmp
pushf
dec
cmp
int
sub
cmp
lahf
xchg
out
aam
je
test
in
cmp
pushf
sbb
lods
mov
add
lcall
inc
pop
mov
adc
lret
pusha
mov
and
loop
lea
sub
sub
add
test
mov
sti
mov
enter
cmpsb
fs
into
movsb
into
ror
dec
mov
sub
xchg
mov
dec
xchg
inc
out
dec
xchg
je
and
popf
inc
sbb
jp
adc
and
inc
or
mov
pop
lods
pop
push
push
data16
and
push
pop
fs
inc
mov
enter
jmp
xor
mov
dec
or
ss
pop
movsb
xchg
sbb
js
out
dec
dec
adc
cmp
xchg
mov
mov
test
imul
pop
cwtl
int3
aas
dec
xchg
aad
nop
fadd
sub
fidivs
jae
cmpsb
sbb
or
stos
enter
stc
dec
jno
test
mov
xchg
mov
fstl
dec
lidtl
das
ffreep
sub
add
mov
mov
inc
add
sbb
sub
add
pop
adc
inc
jle
lret
imul
push
outsb
dec
ds
push
push
dec
cmp
data16
inc
pop
sub
xor
push
cld
scas
add
adc
cmc
dec
adcb
lcall
mov
or
repz
pop
adc
pop
int
dec
movsb
sbb
outsl
jl
mov
in
and
add
push
dec
and
leave
cmpb
push
loopne
inc
pop
popa
fcmovb
push
mov
push
hlt
gs
sti
dec
js
mov
add
loope
scas
pop
orl
test
pusha
mov
fcompl
dec
or
mov
stos
push
lret
pop
outsb
jae
insl
cmp
mov
mov
jmp
push
shrb
sbb
push
movsb
enter
xchg
and
sbb
jne
pop
mov
xorb
pushf
dec
and
push
sub
rolb
mov
cli
leave
test
ret
fsubs
leave
roll
mov
cmp
jno
bound
aad
push
outsl
loope
mov
xchg
cmpb
pop
mov
push
push
in
sub
pop
xor
stos
fwait
pop
and
sbb
push
or
cmp
pop
add
sub
rcrl
movsl
dec
mov
cmp
inc
daa
push
std
or
jl
pop
push
cmpsl
xor
dec
jmp
in
insl
mov
sub
aad
xchg
mov
fcos
add
dec
cs
gs
xchg
pop
loope
jbe
fldt
in
sub
jecxz
mov
out
insl
xor
push
xchg
cmp
call
sub
push
jnp
mov
cvtps2pi
adc
cltd
es
mov
mov
mov
scas
adc
lock
jl
mov
pusha
cmp
lods
or
adc
xor
gs
mov
sub
and
fistpl
dec
inc
fildl
push
hlt
mov
add
leave
pop
test
jp
jns
outsb
sub
cmp
adc
xor
xchg
sti
mov
add
test
push
sub
lods
xor
test
mov
push
adc
fsubrl
sbb
adc
mov
mov
push
mov
add
push
dec
sbb
ljmp
sbb
mov
fistpl
popl
dec
or
divb
loopne
in
dec
icebp
xor
push
shll
inc
and
pop
push
push
adc
cmpsl
mov
popf
adc
jno
sub
jmp
sbbl
add
mov
js
mov
hlt
xchg
aaa
add
pop
sahf
fs
jp
mov
and
aam
popf
mov
push
add
lods
cmp
std
xchg
or
lahf
cs
mov
into
sub
cld
sbb
adc
hlt
sub
insb
lcall
xor
dec
es
bound
push
push
daa
mov
int
addr16
xchg
js
inc
ret
shrl
xchg
int
inc
mov
jl
mov
pop
mov
outsl
fst
and
mov
xor
fistpll
cltd
adc
xorps
gs
mov
xchg
pop
adc
and
dec
test
ss
fdivs
fwait
test
roll
bnd
add
cli
adc
popa
push
xlat
cwtl
in
and
addr16
add
cld
and
sbb
hlt
sbbl
imul
lock
push
cmp
mov
js
lock
ljmp
insb
sbbl
fs
cmp
jmp
cmc
fistpl
nop
hlt
data16
in
orl
insb
pop
adc
shlb
jnp
cld
lock
loopne
out
ljmp
imul
xchg
mov
ficompl
je
testl
sub
mov
insl
dec
imul
es
lcall
jno
xor
xchg
push
rolb
divl
cmpsb
mov
sbb
push
mov
push
xlat
mov
mov
movsl
xchg
nop
shlb
iret
mov
inc
jns
add
pushf
pop
mov
daa
ror
jne
xchg
je
or
ret
int3
cmp
pop
scas
sub
adc
daa
es
sbb
loope
sub
dec
inc
int
jmp
imul
jno
dec
dec
mov
add
push
adcl
mov
dec
testl
cmp
lcall
pop
hlt
jmp
adc
pop
loop
jmp
push
lods
lret
cltd
daa
pop
sbb
mov
add
js
popf
pop
lahf
nop
fwait
sbb
pop
je
adc
lds
pop
cmc
dec
lods
xchg
cwtl
js
int3
mov
xor
test
mov
js
gs
jne
mov
sbb
sub
push
cmp
mov
out
fst
mov
pop
leave
push
or
push
popf
mov
jp
sarl
aam
cmp
shl
rol
cmp
lods
std
or
cltd
ret
stos
cld
fadds
or
mull
icebp
inc
push
inc
sub
cmpsl
imul
jbe
cli
js
inc
loope
lock
xor
jle
mov
arpl
cmp
dec
rorl
loop
rorl
sbb
lea
jne
idiv
pop
leave
dec
mov
sub
mov
xchg
pop
jnp
mov
push
jg
cmp
dec
mov
and
push
sub
sbb
pop
inc
xor
nop
jns
pop
rcrb
push
popa
aad
pop
inc
xor
sub
fcoms
inc
cmp
mov
movsl
xor
xchg
int
xchg
repz
lea
movsl
bound
into
cmp
loope
js
lock
pop
xor
repnz
mov
and
in
fnstenv
or
push
adc
mov
add
cmovg
rorb
bound
data16
jge
stos
fldt
and
test
jae
mov
push
sub
aas
cmc
sub
sub
mov
cmp
stos
xor
add
jnp
fnsave
stc
adc
xor
dec
bound
subb
jno
xchg
mov
fldcw
cmc
lahf
int3
xor
or
adc
nop
or
jns
cmp
or
pop
rorl
subl
scas
add
sub
adc
cmpsb
jae
fcomps
push
inc
lods
adc
sbb
cmp
outsl
push
test
test
mov
sub
xor
push
imul
push
mov
jmp
ret
lock
sub
mov
xor
pop
or
int
dec
or
jle
jno
stos
loopne
hlt
mov
pop
jo
adc
rorb
mov
cwtl
push
pop
jp
mov
ret
sub
cmp
in
cmp
and
dec
push
imul
sbb
adc
sub
cmc
rcll
and
sbb
int3
rcrl
sub
jp
ret
mov
lret
or
cmp
mov
push
push
gs
xchg
jg
in
mov
bnd
cmp
jno
mov
jecxz
mov
inc
jo
popa
jg
cmp
mull
call
mov
dec
mov
and
fldt
adc
cmp
js
rcrb
andb
sbb
in
add
dec
in
movsl
fstps
inc
push
insl
je
sbb
cmp
imull
add
fwait
in
ja
add
pop
add
cmp
cmp
dec
cmp
jl
lcall
fildl
sub
sub
dec
repnz
mov
pushf
sub
mov
loopne
inc
mov
jl
mov
cltd
pop
scas
cmp
mov
inc
jecxz
repz
stc
ds
incb
add
pushf
fcmovne
jl
cmp
mov
jl
imul
add
xchg
aad
pop
sarl
mov
sbb
cld
sub
aaa
lods
mov
fmull
jo
jae
adc
subb
and
push
mov
in
adc
pop
dec
sub
aam
gs
outsl
lret
dec
xchg
push
cmpsl
mov
adc
and
adc
int
jns
mov
fwait
sub
int
or
or
imul
icebp
mov
mov
push
push
cltd
loop
mov
roll
out
xchg
mov
mov
jle
leave
inc
rcl
xchg
xchg
stos
cwtl
jp
popa
xor
dec
jne
ljmp
adc
dec
push
pop
cli
and
data16
adc
push
out
mov
jne
and
mov
ljmp
add
mov
sub
roll
inc
icebp
jnp
popa
loope
mov
es
cmp
push
xchg
add
add
fwait
dec
jo
inc
mov
cmp
xor
loope
or
sbb
pop
rcll
push
jecxz
adc
dec
lods
pop
sbb
pop
sub
outsb
xor
or
and
fidivs
jmp
sub
flds
mov
cmp
das
insl
test
push
cltd
sub
mov
pop
lea
sub
adc
cmpsb
dec
addr16
or
lret
rolb
les
xchg
in
out
or
das
popf
or
sub
test
loop
inc
push
outsb
jno
movsb
pop
js
test
push
inc
aad
scas
mov
cli
sbb
rorl
pop
pop
dec
inc
fwait
loopne
push
pop
pop
insl
mov
pushf
sbbl
sbbl
mov
dec
push
fwait
mov
loop
out
push
nopl
jae
in
mov
cmp
jno
inc
adc
test
xor
or
jae
adc
and
mov
cli
call
movsl
es
out
push
xor
fs
cmpsl
leave
icebp
inc
lods
jo
dec
scas
cmpsl
jb
stos
imul
add
outsb
sub
shlb
arpl
xor
push
push
or
outsb
xchg
dec
add
xchg
inc
or
cmp
ss
add
lret
popa
js
dec
lcall
test
adc
pop
idiv
mov
inc
in
adc
adc
mov
pop
lret
adc
and
sti
dec
cmp
scas
loop
push
push
xor
adc
mov
mov
outsb
dec
xchg
arpl
xor
push
popf
sub
stc
and
mov
je
mov
stc
lahf
sub
addr16
add
fdivr
inc
shll
inc
fnstcw
ror
dec
cmp
pop
jl
and
xor
push
ret
or
xchg
or
dec
gs
lods
or
jae
push
xchg
push
add
sub
jle
cmp
int
mov
push
and
repz
popf
mov
dec
sbb
shll
loopne
and
iret
cld
adc
les
mov
outsb
insl
mov
mov
bt
fwait
out
push
sub
int
cmp
lea
cmp
arpl
push
fimull
lods
dec
inc
icebp
or
inc
jo
mov
and
jg
and
jl
fiadds
daa
nop
fdivrs
ljmp
pusha
sbb
or
pop
mov
cli
xchg
loopne
addr16
es
jmp
cltd
sub
and
add
gs
repz
fs
push
add
mov
nop
sti
pop
jl
mov
cmpl
push
jo
orl
nop
xor
lea
adc
xor
out
sub
test
jmp
out
xlat
aam
jb
es
and
mov
gs
and
neg
push
xor
in
mov
jp
xchg
lret
cmp
or
push
cmp
loope
pop
cmp
push
iret
ror
shrl
int
push
jae
mov
enter
push
pop
mov
shlb
or
in
pop
jp
adc
daa
jecxz
iret
jl
dec
sbb
ror
mov
inc
pusha
push
mov
ljmp
or
leave
inc
cmpsb
sbb
imul
push
les
push
pusha
dec
push
mov
lahf
bound
and
sbb
ja
pop
inc
xor
std
fcomi
push
sti
xlat
jno
xchg
testl
in
movsb
adc
mov
stos
gs
les
xor
arpl
push
lret
imul
sub
adc
adc
test
loopne
inc
mov
movb
pop
sti
dec
inc
movsl
xchg
xor
stos
cmpsb
cmp
mull
lods
push
ja
fisttpl
ja
in
mov
in
test
push
cmp
mov
cmp
in
pop
dec
or
sbb
pop
adc
xchg
jp
mov
add
jbe
and
mov
je
push
aad
sub
loope
les
cld
lds
lock
and
xchg
push
and
cmp
mov
test
mov
push
jne
int
add
sbb
cmp
mov
movsl
fsubr
out
lahf
enter
icebp
xchg
xchg
push
dec
rorb
inc
inc
pusha
adc
into
aas
mov
insb
imul
clc
jno
adc
cli
scas
push
dec
lcall
and
cmp
lds
push
adc
jns
add
fwait
add
in
fsubrs
pop
sar
cmp
and
and
mov
popa
mov
insl
pop
outsb
mov
sbb
and
cmp
cmp
jne
inc
ret
fcmovnbe
mov
loopne
inc
jb
jge
jle
test
lock
aad
push
adc
pop
cmp
mov
sbb
mov
jge
xor
inc
sbb
xor
sub
ja
roll
mov
aas
mov
jmp
adc
cwtl
inc
xchg
or
gs
insb
pop
jne
dec
sahf
movsl
in
mov
push
cmc
dec
adcl
pop
add
std
cmp
cltd
jl
adc
pop
add
pop
cmp
mov
xchg
and
mov
mov
ret
in
loopne
sbb
jno
loopne
iret
dec
in
jae
shrl
xlat
jno
rol
fwait
stos
xchg
bound
hlt
mov
jmp
es
inc
and
adc
out
and
or
or
fnstenv
sub
outsl
aad
ret
adc
icebp
addl
jmp
daa
inc
mul
cmp
inc
cwtl
popa
or
in
xor
add
mov
icebp
pop
movsb
jmp
inc
enter
addr16
adc
call
mov
loop
bound
ds
in
cmp
mov
jae
das
or
movsl
jns
add
or
addr16
pop
push
jge
jb
cld
cmp
cmp
aas
popf
add
mov
jns
popf
jae
mov
in
iret
mov
jle
lods
aam
adc
mov
dec
jg
ds
pop
pop
mov
ret
or
inc
movb
fnstenv
add
xor
pop
jne
movsl
pop
scas
push
popf
and
push
push
sub
push
dec
inc
fistps
push
push
lea
stc
adc
aas
sarl
testl
adc
js
sti
popf
pop
mov
mov
inc
sbb
and
clc
testb
add
aas
repnz
ss
in
in
dec
and
icebp
cmp
cmp
iret
adc
fwait
scas
adc
or
dec
enter
jge
cmp
adc
aas
add
sub
or
pop
mov
push
add
test
or
mov
popf
pop
sbb
shrb
inc
loopne
mov
sbb
into
jl
data16
jae
or
jbe
ds
sub
and
cmp
std
xor
inc
out
push
sahf
scas
cli
add
scas
js
pop
stos
dec
lahf
ljmp
cmc
or
or
xor
mov
pop
xor
std
dec
and
ja
add
mov
dec
out
pop
mov
xchg
out
mov
or
mov
insl
aad
dec
sub
mov
scas
jg
lods
repnz
or
test
sbb
mov
mov
or
cmc
jbe
cmpsl
push
ja
shl
lds
pop
jae
movsb
outsl
sbb
pop
mov
jns
inc
repnz
xchg
divl
add
bound
fstpl
pusha
enter
stos
inc
mov
fists
mov
movsl
in
dec
sahf
out
dec
adc
mov
xor
xchg
mov
mov
sub
add
inc
cltd
jle
jnp
add
xor
rcrl
test
lret
cmpsl
insb
pop
inc
cs
fsubrp
mov
rcrb
mov
cmp
pushf
and
les
cmp
icebp
pop
add
and
scas
mov
adc
cmpsl
cmp
idivl
cmp
leave
enter
dec
loope
xchg
or
jmp
mov
xchg
in
dec
fs
loope
jae
fisubrl
loop
cmp
mov
pop
pop
outsb
test
pop
lahf
stos
rcrl
enter
xchg
inc
jle
pop
adc
inc
mov
iret
jne
nop
cmp
lds
add
mov
xor
out
idivl
cmc
mov
test
outsl
push
mov
add
int3
dec
inc
addr16
jo
out
and
ret
sbb
mov
xor
sbb
enter
les
ja
vmread
mov
fs
in
cmp
scas
adc
push
je
jne
scas
dec
jp
xorl
jns
int3
das
dec
test
int3
sub
hlt
adc
dec
and
nop
movsb
icebp
xor
mov
push
movsb
and
cwtl
in
outsb
ds
mov
and
mov
jno
and
je
aad
lret
mov
jne
addl
or
cmp
jnp
pop
mov
sub
cltd
mov
sbb
jbe
or
out
mov
sbb
roll
or
cwtl
xlat
andb
in
jns
jg
mov
add
jle
and
in
adc
xor
and
push
nop
mov
lcall
mov
push
loopne
repnz
add
inc
cmp
icebp
std
jnp
cli
out
sub
out
jno
sbb
add
adc
mov
adc
sbb
jg
std
jge
adc
cmp
je
add
out
push
stc
lods
sbb
cmc
xor
xchg
adc
sbb
cmpsb
jb
cmc
pusha
adc
std
cmp
je
push
pop
mov
sub
dec
jno
nop
inc
sbb
inc
jno
icebp
xchg
inc
hlt
and
jg
gs
adc
or
leave
dec
cmp
das
insb
jbe
xor
and
sbb
fucom
cmp
imul
inc
je
loopne
jbe
pop
add
js
imul
mov
clc
jnp
int
pop
arpl
mov
add
adc
mov
dec
or
mov
mov
sub
adc
testl
dec
add
shrl
jae
call
or
popa
mov
push
sbbb
xorl
int
pop
cmpl
push
sub
jns
push
cmp
ja
stc
add
test
test
daa
cmp
inc
pop
out
inc
rcrl
push
jno
nop
push
adc
orl
fnstenv
xchg
mov
jnp
ror
adc
push
adc
inc
cmp
scas
jmp
ret
jp
pop
movsl
xor
repz
negl
fs
int3
sbb
cmp
cld
xor
sahf
imull
ss
and
fisubrl
fs
and
fsubrl
stos
and
add
lods
xor
loopne
pop
scas
cltd
cmpsl
jb
pop
cltd
ss
fs
out
inc
lret
neg
cmp
push
popf
xchg
add
mov
loope
movsb
test
push
insb
push
cmp
add
cltd
inc
xor
cmp
cltd
jg
xchg
and
filds
sub
subb
mov
jne
repnz
mov
pop
rcrl
inc
fdivrs
jnp
divb
xor
nop
jmp
fdivl
mov
dec
xrelease
dec
jb
lods
je
inc
add
inc
mov
xor
cld
mov
sbb
aam
inc
sbb
ss
jb
shlb
pop
fadds
jo
andl
cmp
jmp
add
nop
sbb
add
push
add
out
pop
mov
in
push
cmp
jbe
xchg
mov
pusha
adcb
mov
leave
pop
imul
popa
gs
enter
sbb
cmp
sahf
pushf
shll
fldl
push
hlt
ljmp
or
xor
dec
ret
sbb
add
add
jne
loopne
std
int3
xchg
cli
lods
xchg
enter
push
fimuls
icebp
dec
cmp
dec
daa
dec
mov
lds
call
pusha
outsb
inc
or
mov
sub
fwait
mov
jge
orb
in
pushf
cs
and
mov
add
iret
jns
lods
inc
add
insb
dec
in
je
insl
add
sbb
mov
cld
inc
adc
mov
sti
add
lock
jb
repnz
xor
jb
insl
popa
jp
push
rcll
add
mov
jb
nop
push
test
pop
stc
jmp
add
xlat
cmp
bound
lock
inc
cmp
xor
push
rclb
imul
pusha
lds
leave
sbb
add
adc
xor
sahf
push
jb
mov
sti
lidtl
shll
in
jecxz
pop
imul
dec
sbbb
push
je
aad
arpl
cmpsb
mov
faddl
js
aas
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
in
add
add
add
add
add
add
push
add
push
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
push
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
jno
mov
adc
xor
mov
addr16
out
inc
cmp
push
data16
or
popf
mov
adc
rorb
divb
or
cmp
adc
add
rcll
pop
invlpg
cmp
cmp
add
out
mov
rcll
mov
push
addl
adc
push
jae
ror
dec
dec
sbb
xchg
jo
inc
xchg
xchg
test
sbb
int3
sub
push
pop
lds
or
insb
sbb
cwtl
les
sbb
adc
out
jb
adc
ret
sbb
cmp
xor
push
sbb
jo
lahf
cltd
sbb
icebp
jg
xchg
and
test
mov
es
data16
mov
ds
add
or
mov
pop
outsb
xor
add
push
add
gs
add
clc
cld
jae
adc
pop
mov
jle
push
sbb
xor
iret
cld
push
cmp
jecxz
or
dec
push
add
push
xchg
jp
mov
ficoms
dec
jmp
and
cmp
xchg
push
add
inc
add
jl
sub
inc
adc
add
mov
jecxz
ja
or
es
nop
xor
jmp
cmp
addr16
jb
lds
xchg
lock
aam
addl
jo
sbb
int3
outsl
and
adc
cmp
xor
loope
out
cwtl
clc
loopne
sub
or
sahf
jne
push
and
push
int
inc
addb
add
xchg
fisubrl
sahf
lods
push
pop
addr16
into
shlb
sbb
jl
push
mov
fsubs
adc
jae
cmp
dec
lods
inc
fnstsw
inc
add
mov
inc
mov
in
ja
or
mov
pusha
fnstenv
or
add
add
xchg
ret
pushf
cwtl
popa
xor
shll
inc
rclb
mov
push
pop
cmp
lcall
ss
inc
aam
add
xor
pop
push
mov
inc
add
lods
leave
into
dec
cmpsl
sub
xor
push
sbb
jno
into
push
shr
sahf
ljmp
shlb
jle
xchg
mov
or
aaa
frstor
adc
mov
and
cmp
js
adc
adc
inc
jae
inc
or
decb
cmp
shlb
cmpsb
dec
add
add
mov
scas
push
add
sahf
add
lahf
add
ret
ret
add
lds
enter
add
lret
lret
add
int3
add
int
sub
add
roll
fildl
fldl
filds
push
loope
repz
inc
mov
stos
imul
jo
xchg
test
or
mov
lock
or
or
jecxz
div
or
clts
add
inc
ss
test
push
add
pop
add
test
popf
cmp
add
xlat
push
xor
and
mov
jge
and
xchg
bound
cli
xchg
add
cwtl
or
push
mov
sti
adc
loope
dec
sbb
js
insl
inc
imul
mov
adc
out
adc
stos
dec
sub
add
stc
adc
cld
sub
adc
les
rcrb
add
sbb
xchg
add
sub
int
add
fcmove
ret
pop
mov
rcll
push
test
sbb
mov
loopne
sub
popf
repnz
les
inc
adc
and
dec
insl
xchg
jge
stc
into
jmp
pushf
sbb
mov
daa
inc
test
add
inc
in
sahf
imul
xchg
xchg
cwtl
orl
add
adc
in
fildl
subb
push
mov
or
out
inc
cld
jo
jmp
add
add
add
add
add
push
inc
insl
add
movsb
les
add
add
test
mov
or
inc
sbb
or
inc
xchg
movb
inc
xchg
aaa
inc
cltd
push
add
in
addr16
xor
testl
cmc
add
je
push
test
je
pop
dec
adc
outsb
rcr
pushl
mov
psllw
and
adc
or
add
mov
sbb
fstpt
sub
test
nop
and
and
jo
les
xchg
or
adc
adc
jne
std
and
and
and
mov
and
pop
lret
xchg
mov
inc
cltd
push
frstor
popa
mov
cld
push
xlat
lret
dec
ret
add
call
inc
adc
sbbb
add
ret
sub
pushf
cmpsb
cmp
add
cmp
nop
mov
push
subb
jecxz
xor
sbb
sub
add
xchg
cmpsl
mov
outsl
jmp
pop
pop
add
fucompp
mov
sti
jno
or
and
bound
or
test
xchg
xchg
mov
aaa
add
mov
inc
inc
add
xchg
or
jo
jne
cltd
mov
push
mov
push
pop
and
mov
or
jnp
cs
xorb
or
add
loopne
loop
movsl
and
dec
dec
jnp
push
rolb
push
jbe
loopne
enter
in
cmp
sub
push
cmp
subb
add
jns
mov
into
xor
adc
push
add
add
push
rorb
and
and
js
adc
or
inc
cmp
sub
jmp
add
adc
cli
nop
add
into
and
cmp
inc
mov
push
mov
daa
cmp
bound
or
aam
mov
add
jne
sub
rorl
xchg
pop
sbb
stc
adc
xor
loop
adc
add
negb
add
xchg
push
mov
cmp
and
mov
pop
popf
shr
sub
aad
mov
dec
mov
shrb
mov
jmp
dec
leave
sbb
push
fs
xor
stos
rolb
dec
add
sub
fs
repz
or
mov
outsl
add
arpl
mov
xor
cmp
ret
cmp
xchg
and
and
insl
adc
push
xchg
cmp
cmp
cmpsl
or
sbb
imul
inc
add
loop
xchg
cmp
pop
fsubrl
inc
movsb
lret
push
mov
xchg
test
data16
adc
cmp
pusha
pop
mov
dec
enter
sbb
pop
jl
sub
mov
flds
xor
mov
inc
orb
ret
mov
add
movsl
ja
or
push
cs
ljmp
sub
xor
outsb
mov
add
int3
in
cltd
inc
icebp
mov
add
lods
jl
mov
sbb
or
add
cmp
or
jb
mov
adc
mov
sub
pop
sbb
inc
xchg
adc
insl
cli
cmp
nop
sbb
sahf
or
lret
lds
lds
cmp
jg
mov
mov
mov
inc
xchg
or
out
mov
and
xor
push
ja
add
inc
in
jecxz
or
and
popf
push
bound
add
popa
mov
pop
jl
pop
mov
arpl
and
add
jo
jl
cmpsl
ret
and
push
add
sahf
mov
pop
pop
mov
lea
or
rolb
xchg
fildl
mov
pop
aad
add
imul
sub
mov
sbb
aaa
fstl
pop
movsb
or
add
hlt
or
pusha
mov
sbb
xor
xchg
or
sub
mov
and
adc
push
fbld
pop
xor
cmc
pusha
jns
push
adc
add
push
dec
dec
fisubs
xlat
shlb
cmp
pushf
out
mov
add
orb
movsl
lock
push
cmp
mov
adc
dec
outsl
popf
adc
jl
mov
mov
pushf
sbb
cs
pop
insb
or
ds
and
add
and
push
imul
add
scas
jmp
cmp
push
pop
and
mov
inc
or
dec
pushf
sub
data16
cmp
rorb
or
lea
add
inc
ret
xchg
hlt
loopne
les
or
sbb
push
sti
mov
inc
sahf
or
negb
jecxz
and
int
lret
adc
jno
and
or
aas
mov
cs
add
std
lds
imul
push
andl
fisubrl
std
into
and
orb
shl
les
test
sbbl
sbb
sbb
or
ret
xorb
cmp
add
adc
cmpl
test
push
add
adc
lea
add
push
insb
add
data16
mov
addr16
mov
aas
fildl
xchg
and
sub
lret
jae
ja
decb
es
or
add
dec
cmp
rep
xor
pop
sub
iret
pop
dec
idivb
adc
jb
ljmp
xor
push
jmp
mov
push
fisubrs
shr
xchg
mov
aam
orb
stc
or
ljmp
or
pop
mov
adc
jmp
cltd
push
fcom
inc
push
fidivl
or
negb
jp
inc
inc
or
dec
shr
or
pusha
and
les
ds
or
imul
jno
mov
add
dec
lds
outsl
std
add
sub
test
stos
xchg
and
jns
lods
mov
loopne
xorb
pop
xchg
add
mov
and
adc
add
adc
loope
std
mov
xor
push
es
dec
aaa
roll
xchg
lcall
mov
rorl
fsubs
add
adc
dec
popf
iret
add
xor
cmp
inc
je
inc
insb
or
mov
lea
les
movsb
mov
xor
test
pop
pop
lret
adc
lcall
les
popf
sbb
and
scas
lea
mov
add
xor
adc
inc
ja
add
push
enter
enter
shlb
addl
lock
jg
pushf
pop
lock
adc
inc
mov
add
adc
insl
push
xor
in
mov
stos
fists
daa
sub
jp
or
cmpsb
les
mov
xchg
movsb
inc
or
pop
loopne
test
xor
lret
shll
imul
mov
enter
xchg
lcall
push
inc
mov
inc
mov
mov
jno
jp
or
adc
mov
add
lret
iret
ret
push
adc
adc
gs
enter
into
pusha
out
insb
lods
and
xchg
mov
clc
in
inc
add
xor
ds
shlb
cmp
or
out
add
inc
lds
in
addr16
pusha
dec
ds
sub
jecxz
mov
lret
shlb
inc
stc
punpckldq
ds
and
mov
fsubrp
js
jo
scas
test
adc
jmp
out
repnz
add
push
loopne
or
mov
lea
pusha
add
jmp
pop
mov
pop
popa
add
or
push
btr
sub
shr
add
call
add
popf
cmc
push
cmp
add
add
filds
ljmp
in
cld
add
pop
ss
add
pop
jo
addr16
pop
pop
adc
pop
push
and
pop
add
pop
not
sete
shr
sbb
mov
lret
add
clc
push
ret
pop
add
subl
enter
mov
repz
test
inc
sub
adc
rolb
adc
jae
add
cmp
mov
adc
push
jns
adc
push
sbb
inc
xchg
or
mov
cmp
fs
imul
loop
sbb
mov
scas
add
push
push
and
inc
xchg
inc
dec
jmp
cmc
xor
push
xor
sbb
ljmp
cmpsb
das
notb
int
pop
add
neg
push
inc
cli
psubusb
mov
test
pop
clc
ja
clc
mov
mov
dec
cmc
dec
add
push
mov
imul
push
fisttpl
sbb
out
jle
insb
cmpsl
rol
mov
and
ljmp
inc
insb
sub
or
hlt
sar
scas
add
setno
sahf
shlb
mov
inc
test
fsubrl
aam
jns
es
cmpsb
ljmp
inc
popl
and
call
shl
cmp
test
into
adc
mov
push
or
adc
call
and
cmp
iret
pop
mov
fldl
mov
jle
enter
insb
add
cmp
rol
decb
repz
pop
das
cmp
hlt
enter
or
push
sbb
movb
mov
idivl
movsl
adc
add
subl
xor
mov
rcrl
xchg
not
dec
lea
jle
orb
push
mov
aaa
pop
fsts
into
mov
add
fsubr
xchg
adc
inc
adc
jne
repz
pop
inc
sub
leave
in
and
test
pushl
pop
loope
scas
push
sbb
cmp
and
outsb
or
shl
or
cmpb
adc
xchg
sti
fidivs
dec
and
adc
aad
into
mov
mov
pop
add
push
enter
mov
int
pushf
push
aam
pop
add
pop
sti
sub
inc
cmp
inc
test
mov
pop
ja
xchg
in
cmp
adc
inc
adc
jl
loopne
shld
popa
rcrb
inc
adc
aad
mov
bound
push
xlat
addr16
lret
inc
iret
test
lds
cmp
add
mov
jmp
divl
in
adc
inc
mov
inc
stos
push
push
pop
stos
xor
adc
out
cli
inc
cmp
adc
jbe
ds
and
add
ljmp
push
mov
mov
push
repnz
cmp
xor
xchg
stc
mov
and
add
mov
mov
test
shll
fwait
push
adc
lret
pop
adc
mov
sbb
icebp
push
dec
popa
lar
push
and
repz
sub
pop
push
add
add
xor
mov
fsubrl
mov
mov
sub
sub
movsb
add
push
pop
pop
add
pop
in
mov
fiadds
dec
pop
pop
adc
call
out
jns
ret
sbb
mov
ret
add
cmpsl
pop
sub
into
add
push
pop
pop
inc
xor
je,pt
jmp
seto
xor
dec
sub
loop
outsl
add
mov
xchg
fs
call
rol
mov
es
mov
bound
mov
jne
btc
xor
xchg
mov
inc
in
xchg
xchg
ret
sub
inc
and
cwtl
cld
sub
push
fists
pop
mov
shlb
ds
cmpsb
or
es
ss
cmp
leave
jmp
out
mov
test
not
push
jge
inc
mov
sub
xchg
sbb
sbb
mov
lods
out
cmp
jne
fprem1
ror
sbb
icebp
inc
hlt
fimuls
xchg
push
xorb
je
ret
in
sub
testl
xor
cs
push
adc
mov
pusha
int
cmp
testb
test
sub
mov
adc
rol
fmuls
filds
sub
movsl
add
mov
jo
xchg
dec
jbe
and
inc
push
adc
xor
inc
add
push
fdivrp
lret
popf
addr16
mov
bound
xchg
jne
pusha
das
inc
cmpsb
cmpsb
add
sub
mov
shl
out
xor
add
jecxz
in
cmc
mov
cmp
xor
mov
sbb
and
icebp
cvtpi2ps
insb
lods
outsl
in
popf
or
stos
inc
add
fs
stos
lret
pop
inc
inc
mov
inc
jecxz
and
push
daa
xchg
subb
xor
std
and
movl
imul
mov
les
jne
dec
stos
sbb
repnz
xlat
jo
ds
pop
std
dec
fwait
arpl
adc
cmp
scas
jo
add
cmpsl
push
loop
and
sub
cmp
inc
repnz
xor
pop
jae
add
out
dec
dec
fdivs
jle
inc
dec
incl
dec
sbb
or
xor
pop
pop
xchg
and
inc
xor
inc
sahf
pop
movsb
xorb
test
sub
pop
push
mov
mov
pop
pop
fidivl
mov
mov
mov
or
in
fldl
rclb
push
pop
pop
or
xchg
pop
add
sub
aas
mov
test
cmp
jo
pop
pop
dec
mov
imul
jecxz
xchg
lds
stos
xor
dec
mov
cmpsb
add
popa
lds
lcall
or
jno
or
xor
and
mov
int3
jne
notl
mov
xchg
out
stos
push
pop
pop
imulb
aad
or
mov
pop
dec
dec
push
subb
daa
roll
mov
xchg
sahf
inc
fwait
mov
pusha
repnz
test
std
add
add
sbb
xor
movsb
out
pop
stos
sbb
les
nop
mov
lds
cmp
cs
fs
aad
add
jo
lret
fcompl
ja
jmp
xor
inc
dec
call
xchg
adc
jg
mov
xlat
div
inc
mov
repnz
fimull
dec
mov
mov
out
sub
sbb
adc
jp
pop
bound
adc
inc
cwtl
add
mov
sbb
cs
jno
and
into
sbbb
ds
and
out
mov
aam
fisubrs
test
filds
fisubl
pop
add
shll
or
dec
mov
outsl
bound
popf
jge
dec
xchg
neg
push
pop
add
dec
ljmp
rcl
mov
mov
mov
rorb
xor
mulb
into
or
push
inc
inc
push
add
fwait
decb
cs
pop
add
xor
gs
fidivrs
sub
sbb
xchg
xchg
add
inc
add
xchg
xor
fisubrs
bound
push
push
xchg
shl
incb
xorl
shll
adc
addb
bts
mov
xor
pop
jg
cmp
orb
in
popa
xchg
lcall
aam
sbb
test
out
inc
outsl
cs
repz
sub
pop
imul
pop
mov
aad
neg
inc
cmp
dec
xchg
insb
inc
inc
jl
jae
push
and
inc
lret
add
das
neg
out
test
icebp
pop
adc
push
out
push
xchg
data16
enter
jge
push
inc
add
dec
jmp
cli
call
adcl
push
cli
in
pop
orl
in
sub
pop
loop
andb
negb
pop
pop
and
push
das
ss
dec
shrl
dec
or
adc
and
ret
and
clc
notb
addl
xchg
cmc
mov
push
mov
cmp
in
dec
mov
jo
push
adc
ret
sub
cs
xorb
add
icebp
and
sahf
mov
and
into
enter
adc
int
xor
bound
les
idiv
dec
in
popf
inc
out
dec
enter
jbe
mov
mov
aam
fstps
and
js
xor
icebp
mov
data16
pop
xchg
adc
not
movsl
or
sbb
mov
mov
push
pop
cmp
repz
mov
dec
rcl
cwtl
mov
cmc
add
jne
xchg
adc
icebp
sub
pop
push
sbb
push
adc
pop
jns
push
out
test
nop
cmp
jg
cld
scas
xchg
into
stc
test
in
nop
mov
add
shlb
xor
jae
pop
mov
notb
cwtl
cmp
fistl
pusha
jns
or
add
fadd
in
xchg
idivl
nop
mov
xchg
xor
dec
or
push
add
cwtl
fmul
loop
cmpsl
addl
xchg
adc
cld
ljmp
sub
out
or
and
in
inc
sbb
popf
les
xorb
dec
test
ja
not
push
push
dec
add
iret
mov
and
pop
sbb
or
push
fstpl
sub
inc
inc
int
insl
dec
shl
add
imul
imul
out
inc
aaa
add
mov
and
lret
pusha
fisubs
sub
cwtl
mov
add
movsl
stos
aam
mov
orb
xchg
xor
fsubs
jne
pop
test
push
cmpsl
xor
and
sarb
adc
sbb
adc
xorl
xchg
jb
sbb
xchg
cmp
test
out
mov
inc
xor
lods
mov
rcll
pop
lock
sub
mov
lock
push
mov
mov
lds
iret
inc
cmp
ljmp
cwtl
cmpsl
jae
and
xor
push
push
fs
lea
push
or
inc
sub
enter
push
test
out
adc
mov
inc
adc
jo
aad
xor
rorb
pmulhuw
movsb
test
mov
jle
popf
cmp
and
add
enter
jo
sub
or
test
vunpckhps
gs
sub
dec
add
xchg
rorb
mov
in
mov
or
bnd
jecxz
ss
lcall
sub
xchg
inc
andb
imulb
adc
dec
push
xor
fisubs
push
xor
js
mov
lods
sbb
pop
xor
mov
shlb
inc
mov
cmpsb
inc
xor
das
stc
int
leave
test
cmp
or
pushf
sbb
out
movsb
or
shrb
mov
mov
pop
daa
or
lock
movsl
or
jg
and
add
or
dec
xlat
lock
rcrb
jne
adc
add
cmp
lea
mov
outsb
add
dec
sub
inc
dec
notb
lcall
mov
jl
push
push
mov
aaa
and
fistl
test
insb
icebp
inc
cli
sub
clc
pop
pop
rorb
ret
dec
mov
out
pop
loopne
add
or
cltd
and
cmp
loopne
push
push
add
push
subb
jb
jo
and
je
lret
and
mov
push
push
outsb
xor
xor
adc
sahf
push
popf
or
iret
jp
lret
fdivrs
pop
inc
xor
sub
sarb
push
lret
pop
adc
decb
mov
sub
cli
mov
pop
mov
push
nop
jecxz
cmp
xchg
add
icebp
ret
inc
adc
sub
and
sbb
insb
dec
xchg
and
add
xor
ret
loope
cwtl
out
mov
std
mov
popf
ret
in
lret
sbb
pop
or
push
shrb
cmpsl
xchg
xor
shr
loope
and
add
pop
inc
add
xor
test
push
shrb
into
and
push
es
push
add
das
andl
dec
hlt
testb
outsb
jo
nop
push
pop
mov
in
nop
cltd
sbb
jb
lds
outsb
push
dec
inc
insb
decb
cmc
out
dec
mov
insb
add
push
pop
pop
sub
inc
lret
adcb
ja
hlt
lods
dec
pop
lret
test
dec
shlb
dec
test
roll
fiadds
aam
push
dec
fldl
dec
inc
xor
and
repnz
xor
push
popf
fs
and
test
inc
pop
add
jmp
xchg
adc
and
push
push
dec
and
or
test
jbe
arpl
pop
stos
or
sub
dec
hlt
test
cmpsb
roll
xor
and
pop
add
bound
inc
out
inc
test
insb
cmp
mov
stos
inc
out
fs
test
push
sub
repz
cmpb
into
andl
cmp
test
int3
aaa
popa
push
inc
fisttps
in
and
ret
dec
add
shll
testb
add
pop
inc
mov
inc
leave
mov
inc
shlb
push
inc
sbb
xor
and
pusha
xchg
in
jo
or
xchg
mov
xchg
dec
push
xor
mov
pop
inc
inc
adc
jp
push
push
std
testl
jo
outsl
movsb
lret
and
ret
ficoms
push
jle
divl
pusha
test
pop
xor
and
xchg
insb
mov
add
dec
sub
std
jae
jbe
push
push
dec
jae
xchg
jmp
mov
adc
inc
int3
dec
sbb
jg
mov
hlt
adc
movsb
add
cmp
fsts
dec
das
or
add
inc
push
cmp
and
lea
ror
test
mov
insl
cwtl
mov
mov
pop
xor
dec
bound
add
push
and
bnd
mov
push
pop
sbb
inc
neg
sahf
pusha
cmpb
sbb
pop
xorb
xlat
xchg
xor
fmuls
push
movsb
test
xchg
sbb
mov
test
inc
jg
push
popa
mov
fsts
jecxz
inc
xor
into
test
add
push
mov
xor
fiadds
lret
inc
push
sar
xor
adc
not
mov
push
pop
jl
xlat
add
daa
lods
std
xchg
out
xor
sub
cmp
mov
pusha
jmp
jno
adc
outsl
xchg
adc
cli
insb
pop
mov
popf
or
in
push
jns
iret
jecxz
add
mov
sub
stc
sub
rolb
or
popf
cwtl
mov
repnz
lods
cmpl
mov
js
scas
inc
push
pop
and
push
std
out
push
mov
and
push
dec
leave
push
lret
cmpl
lods
andb
popf
insl
addb
stc
xor
and
test
xor
cmp
es
test
jg
inc
add
stc
mov
inc
mov
mov
add
adc
std
jle
sub
dec
push
addr16
iret
add
mov
inc
push
rcrb
stos
and
adc
xlat
push
cmp
sub
mov
fcoml
or
fbstp
out
sub
adc
dec
sbb
fld
cmc
pop
pop
jb
dec
cli
push
test
shlb
xchg
or
pop
scas
and
or
dec
rclb
push
mov
xor
pop
jns
lcall
mov
push
popa
add
adcb
pusha
dec
mov
cmpsb
mov
iret
dec
loop
push
push
pusha
xchg
dec
and
pop
test
cwtl
je
enter
ficoms
push
push
aad
mov
clc
xorb
cmp
xor
aad
xlat
jle
mov
xor
in
hlt
fdivl
add
test
test
sbb
or
dec
ficoms
clc
js
mov
test
fdivs
bndstx
rcrb
mov
fcoml
loope
and
leave
mov
xchg
push
adc
add
pusha
sub
cwtl
xchg
push
xchg
inc
xchg
sbbl
stos
xor
in
xchg
push
sub
and
xchg
fsubs
or
dec
or
adc
xor
cltd
mov
add
or
loope
frstor
je
and
orl
dec
testl
push
fstl
notb
ret
push
pop
nop
xchg
dec
xor
and
leave
pop
adc
sbb
mov
das
sbb
pop
divb
loop
push
fimull
xor
pop
rorl
ficoml
and
loope
pusha
fstpt
or
rcrl
sub
lock
mov
cli
mov
mov
dec
add
mov
dec
dec
jg
mulb
mov
adc
mov
xor
in
xor
adc
adc
inc
pop
pusha
add
and
mov
mov
rdpmc
xchg
movb
dec
dec
cmc
addb
or
decl
int3
cs
out
lea
outsl
xor
test
and
mov
push
cmpsb
dec
xor
push
sbb
push
inc
pusha
push
lahf
lods
push
add
es
add
ret
mov
popa
adc
outsl
bound
dec
mov
or
add
xor
mov
mov
add
mov
lea
pop
mov
add
mov
mov
inc
xor
call
out
stos
add
add
mov
shlb
arpl
ljmp
cwtl
mov
and
sarl
andb
test
testb
mov
ret
sbb
call
testl
cli
sbb
mov
adc
sub
sbb
pop
push
and
icebp
xor
pop
or
stos
sub
mov
jmp
test
add
push
icebp
bswap
je
xor
rcrl
mov
pop
mov
aam
cltd
dec
stc
pop
ret
fldcw
pop
enter
jbe
fmull
push
jnp
sub
sub
popf
adc
add
jmp
pusha
jno
mov
push
cmp
and
adcb
cs
loopne
std
mov
mov
jns
cld
ljmp
fisttps
and
ds
dec
and
inc
adc
mov
push
pop
xor
leave
aaa
mov
cltd
int
add
icebp
loop
dec
test
bound
jmp
insb
loopne
insb
jae
daa
and
je
and
xor
inc
and
mov
mov
dec
mov
pop
adc
add
lock
movsb
cwtl
mov
xchg
mov
mov
mov
fldl
or
lcall
mov
aaa
push
cmp
pop
and
std
popa
xor
popa
loopne
repnz
cld
pop
xchg
mov
sub
cmp
inc
inc
mov
lcall
sar
dec
in
add
out
loopne
subb
or
and
cmp
insb
sahf
call
and
dec
mov
stos
cld
js
add
xchg
or
add
xchg
mov
repz
xlat
sbb
movsl
les
sete
pop
mov
mov
subl
cmpsl
sub
clc
out
add
subb
or
push
lss
and
and
inc
inc
xchg
sbb
test
xchg
test
fnsave
xchg
neg
and
es
lret
shrl
mov
cltd
dec
xor
mov
outsl
or
leave
rolb
sbb
sbb
sbb
inc
push
sub
sub
and
and
es
jl
push
int
shlb
outsl
xchg
jbe
jbe
in
cwtl
je
test
xchg
decl
scas
pop
dec
es
push
imulb
inc
fwait
jecxz
jne
or
mov
outsl
addb
fstl
repnz
fildl
shrl
insl
sbbl
xchg
mov
or
data16
bound
inc
xorl
imul
xor
push
and
es
pop
shlb
push
in
aad
sub
xor
scas
subb
mov
outsl
incl
rolb
dec
adc
icebp
pop
mov
mov
cmp
add
mov
inc
xor
psubq
adc
jae
sbb
or
popa
bsf
lods
mov
add
jns
add
dec
adc
or
and
xchg
decl
pop
mov
push
repnz
mov
jb
and
dec
movsb
add
test
add
push
inc
rcll
push
or
mov
imul
aad
pop
ljmp
notb
das
lahf
dec
rcll
and
pop
sbb
sbb
or
xchg
std
xor
les
aam
lret
add
pop
mov
xchg
fdivr
cld
adc
xchg
adc
enter
mov
pop
mov
cwtl
les
roll
outsl
lcall
xor
or
mov
mov
test
sahf
pop
push
scas
adc
lret
aaa
mov
divl
and
push
add
stos
pusha
addr16
leave
adc
call
mov
sbb
das
pop
pop
enter
adc
and
sbb
lret
pop
adc
movsl
subl
inc
gs
push
inc
and
jae
sub
add
or
int
push
int3
or
push
dec
push
movsl
add
jg
fistl
and
dec
sub
test
pop
and
mov
popf
stos
je
jecxz
push
out
sbb
mov
lock
adc
ret
stos
ret
mov
xchg
jle
arpl
je
in
sub
dec
fisttpll
push
flds
sti
mov
mov
test
movsb
mov
pop
jae
es
adc
mov
aas
test
or
ljmp
adc
jae
jbe
cltd
inc
mov
push
daa
mov
mov
push
int
or
je
in
add
xor
and
jp
dec
jmp
movsl
push
push
lahf
icebp
inc
lods
sahf
mov
pop
ljmp
dec
and
std
mov
mov
cld
sub
sub
jns
xor
lea
jle
cltd
mov
es
adc
inc
mov
add
jae
dec
enter
mov
jbe
inc
jmp
mov
push
or
aaa
inc
dec
jne
inc
cmc
jnp
prefetch
lods
push
je
fwait
pop
cld
push
sub
repnz
xlat
aad
mov
jae
sub
aam
and
mov
repnz
movsb
je
int3
fsubr
enter
test
jg
sahf
cli
or
sub
popf
into
add
inc
enter
mov
add
mov
dec
imul
outsl
cmp
sub
sti
push
cmp
adc
sub
gs
out
in
mov
int
imul
lods
insl
inc
ds
imul
or
sub
xor
push
lock
push
aam
cmp
les
test
out
jbe
fwait
xchg
push
ljmp
mov
dec
scas
pop
lret
sbb
cmpb
adc
pop
out
dec
mov
mov
sbb
pop
pop
cmp
xor
ret
or
enter
jl
stc
push
jmp
testb
fsubl
cwtl
sbbl
lock
add
and
lea
aaa
nop
inc
int
xor
and
and
adc
pop
add
cs
dec
cmp
sub
mov
lock
push
je
je
xchg
lock
jle
add
push
mov
repnz
mov
das
inc
inc
push
pop
cmp
cltd
jne
insl
or
mov
add
pop
add
mov
push
mov
std
xchg
inc
roll
mov
das
outsb
cmc
cs
imul
gs
gs
dec
lods
jbe
xchg
addr16
inc
sub
std
test
sahf
cmpsl
int3
sahf
mov
std
inc
and
outsb
jg
mov
sub
mov
xorb
sti
inc
or
cs
mov
or
pop
daa
js
iret
out
mov
dec
and
out
and
cmp
out
adc
pop
insl
lods
cs
call
xchg
add
faddl
push
in
pop
dec
push
mov
mov
mov
add
scas
lock
scas
loopne
mov
inc
fnsave
cltd
jae
pop
stos
imul
mov
test
addb
outsb
push
push
jecxz
mov
xor
push
lcall
sbb
leave
cltd
and
jo
data16
mov
pop
pop
cmp
mov
dec
inc
cmp
and
nop
or
mov
ret
inc
fidivrs
sbb
insb
aas
mov
dec
mov
gs
stc
test
jle
movl
mov
cmp
ret
xchg
mov
loope
or
test
es
loopne
sub
shll
cwtl
mov
or
out
mov
mov
fwait
xor
test
roll
popa
popa
mov
xchg
jle
addl
and
insl
repz
out
cs
ljmp
stos
adc
clc
icebp
add
repnz
scas
pop
shl
mov
rorl
sub
sbbb
sub
loopne
jle
or
loopne
fcmove
fiaddl
lods
cmc
push
std
aaa
pop
subb
mov
xchg
stc
pop
add
iret
dec
sarl
mov
call
lret
nop
into
xor
inc
push
jo
push
or
xchg
int3
loope
lods
xchg
lcall
adc
mov
adc
std
push
les
daa
cmpsl
xor
flds
xchg
test
test
lock
outsl
dec
mov
stc
out
or
jnp
movsb
ljmp
dec
sbb
xchg
lock
cmp
out
fs
stc
inc
lock
cmc
pop
les
outsb
sub
lcall
sbb
js
xchg
jb
mov
out
or
xchg
add
pusha
loope
cld
jno
and
mov
lods
jae
jno
and
aas
dec
jle
mov
ficoms
lcall
pop
sbb
outsb
cwtl
aas
adc
out
daa
xchg
jno
shrl
addl
xor
xor
mov
push
les
jl
shrl
jns
popa
repz
daa
shr
movsb
add
ret
dec
jb
imul
stc
andl
jmp
pop
outsb
lea
into
dec
cwtl
adc
divl
or
jo
je
scas
and
add
cwtl
sbb
push
test
adc
pop
lods
mov
pop
mov
lods
pushf
sbb
inc
xchg
jecxz
shr
sbb
xor
pop
in
dec
cltd
mov
call
arpl
ret
outsl
inc
in
insb
add
cmp
cmp
fisttps
or
mov
pop
mov
xor
lock
add
cltd
jmp
mov
out
lea
adc
repnz
push
fisubrs
je
stos
mov
inc
popf
or
arpl
popf
dec
ss
or
pop
cmp
aam
xchg
push
or
sub
inc
ja
pop
test
xchg
inc
dec
xor
sbbb
addr16
cmc
inc
sub
lock
pop
xchg
jmp
mov
dec
xlat
mov
imul
movsb
not
push
mov
bound
mov
sbb
add
jae
in
jl
leave
mov
loope
jns
lret
jle
pop
les
cmp
jne
sbb
cmp
pop
jnp
or
add
daa
lea
ja
mov
dec
bound
push
shrb
jnp
mov
inc
mov
std
add
sahf
lret
push
pop
fistl
mov
mov
jno
je
sub
mov
jns
pusha
and
jmp
addl
stos
sub
and
sub
mov
pusha
mov
xor
mov
stos
inc
and
push
lret
sub
push
decl
sti
inc
mov
data16
fsubrl
lods
in
ja
xchg
cmp
jbe
or
push
or
ljmp
inc
cmp
jne
push
cs
adc
inc
mov
cmp
jge
test
lods
sub
enter
mov
mov
dec
xor
cmp
inc
or
gs
cmpsb
push
push
test
jb
push
sbb
cmp
ret
shrb
jge
es
push
in
icebp
in
inc
insb
test
testl
fidivs
pop
insl
dec
jo
shl
mov
clc
lahf
mov
scas
cmp
adc
lods
pop
pop
mov
and
jb
dec
cmp
shll
adc
cmp
cmp
call
mov
or
outsl
int
scas
lahf
clc
sub
jne
shlb
std
push
pop
gs
xorl
in
movsb
adc
rcrb
js
lods
jmp
mov
and
fidivrs
dec
leave
fucom
scas
adc
popa
inc
enter
lcall
dec
pusha
sub
mov
outsl
pop
inc
loope
int
xlat
jle
jg
out
clc
hlt
pop
xchg
cld
lret
mov
in
mov
jmp
outsl
scas
inc
adc
jno
jg
sub
les
push
shr
sub
out
push
push
mov
call
into
sti
push
lret
insb
outsb
cmp
fcompp
sarb
mov
lahf
je
push
loope
imul
jmp
sub
loopne
cmc
ret
xchg
inc
xor
lret
jge
xchg
sub
call
sbb
fbld
sbb
loopne
outsb
std
dec
and
pop
inc
sarb
das
aam
cli
or
add
int
push
dec
shl
cmp
outsb
cmp
push
ret
sbb
pop
lods
pop
xchg
xlat
mov
in
lock
scas
fistpll
xchg
stc
data16
pusha
insl
mov
add
jno
arpl
mov
lock
popf
loopne
cli
inc
lods
sbb
or
jbe
gs
mov
jmp
jmp
sbbb
loopne
sub
mov
mov
or
push
add
jbe,pt
mov
sar
pop
popf
call
fildl
outsb
sub
hlt
xor
mov
shll
fwait
insl
mov
push
data16
repnz
xor
addl
and
popa
lret
outsl
push
mov
xor
xchg
or
pop
dec
nop
and
enter
adc
mov
push
mov
cld
mov
push
lcall
cli
sar
ret
mov
arpl
lret
push
idiv
cmp
mov
cmp
scas
sbb
adc
scas
arpl
or
push
into
insb
xor
mov
add
or
outsl
add
xor
fsubp
sarl
pop
pop
jg
aam
call
fwait
cmp
nop
outsb
ja
imul
mov
adc
mov
sub
cmp
push
cmp
sub
daa
xchg
mov
xor
sbb
xor
xlat
mov
adc
sub
jno
enter
ja
es
or
fcompl
lods
cmp
fistpll
mov
cmp
in
sub
stos
dec
mov
mov
cmp
inc
test
push
mov
lods
dec
shl
xlat
add
xor
cmp
stos
lods
sub
push
int3
scas
jg
xchg
cltd
imulb
jae
cs
test
mov
shll
add
jl
outsl
inc
cmp
mov
insl
inc
adcl
mov
mov
arpl
xchg
sub
int
add
sbb
dec
pop
fnsave
aas
adc
sub
add
out
sbb
js
fstps
outsb
arpl
xor
jle
jo
mov
or
das
xchg
sbb
test
jge
std
pop
fwait
jmp
fstl
xor
xchg
aaa
scas
fsubrl
fwait
sub
cmpsl
mov
jl
dec
jge
mov
add
jae
int
mov
sarl
fisubrl
mov
or
fsubrp
dec
cmp
in
mov
xchg
sbb
mov
ss
xchg
stos
lcall
jge
imul
out
pop
jg
xchg
imul
les
mov
push
xchg
jnp
enter
outsl
dec
mov
jnp
out
or
inc
adc
mov
orl
nop
into
sub
aam
fnstsw
dec
loopne
popf
push
push
es
sbb
push
dec
test
mov
in
cmp
xor
mov
cmp
push
jp
cmp
push
mov
mov
cmpb
xchg
out
pop
mov
push
or
std
cmp
adc
push
cltd
inc
cmp
jnp
sbb
divb
push
cli
ljmp
add
mov
fstcw
jno
fbstp
into
xor
sbb
outsl
test
add
dec
pop
jns
lret
mov
sbb
mov
es
and
cmc
xchg
insl
int
mov
adc
loop
mov
jl
mov
aam
int3
adc
push
data16
xor
cs
adc
int3
mov
cmp
sbb
pop
push
or
ds
dec
scas
inc
pusha
cmpsl
pop
imul
cwtl
jle
sub
cmpsl
movsl
popf
in
cmpsl
ret
aam
in
mov
xor
insb
mov
inc
adc
je
dec
fwait
jp
add
mov
scas
mov
rcrb
insb
pop
dec
push
cld
cmp
push
cmc
test
aaa
push
cmp
and
ficoml
rorl
mov
mov
dec
push
dec
jno
jl
lods
enter
stos
mov
push
add
mov
push
push
les
sti
pusha
adc
mov
aad
call
pop
lods
je
push
inc
xchg
dec
ja
mov
clc
xor
inc
andb
sti
jo
cwtl
dec
mov
lea
test
mov
fistps
fldl
fsts
add
dec
int3
scas
jl
mov
xchg
mov
aad
hlt
stc
jp
data16
xchg
mov
paddb
in
jne
stos
fisttps
cli
adc
addr16
inc
fs
push
pop
data16
add
ds
lods
pop
push
cmp
std
pop
or
pop
dec
adc
outsl
cmp
xor
xchg
push
push
xlat
cltd
int3
mov
pop
in
dec
sbb
sub
lret
mov
xor
xchg
or
mov
insl
int
pop
adc
pop
lea
loop
pop
inc
add
or
jl
addr16
push
adc
fistpll
jo
cmp
int3
sub
jge
jp
sub
push
arpl
in
lods
push
mov
popa
lds
mov
cmp
movsl
pop
insl
xor
push
shll
cld
std
push
dec
lahf
insl
lret
jl
and
mov
jecxz
aad
xor
cltd
inc
ja
xchg
out
es
fs
xchg
mov
int
xchg
aaa
rol
pop
aaa
dec
out
inc
inc
mov
push
pop
int
push
lds
int
jne
pop
mov
nopl
movsb
push
add
mov
pop
lea
les
cmp
mov
imull
or
jle
int
xor
lock
divl
push
dec
cltd
or
lock
dec
insb
imul
stc
adc
movsb
sbb
scas
out
xor
mov
jg
inc
pop
testb
sahf
test
addr16
mov
inc
insb
fwait
adc
aam
lds
dec
bound
in
scas
ret
xlat
pusha
scas
idiv
dec
sbb
dec
popa
cs
or
clc
push
inc
loopne
cmpsl
or
xchg
loop
push
daa
and
mov
popf
lret
xchg
jecxz
mov
in
imul
pop
icebp
add
xchg
mov
cmc
fcompl
xor
inc
cmpb
jg
arpl
and
sti
cwtl
inc
mov
dec
insl
cmp
js
inc
xor
repnz
sbb
mov
push
sub
xor
cli
fdivs
mov
gs
iret
dec
jl
test
jmp
je
adc
mov
jmp
sbb
mov
ja
bound
mov
jne
mov
popf
movsl
sar
mov
dec
insb
std
lds
jecxz
xlat
inc
push
xor
idivl
push
popa
push
movsl
jle
adc
sbb
mov
rclb
int
int
push
aam
cmpsb
jnp
scas
sbb
mov
test
out
lea
dec
lret
cld
test
test
sub
adc
call
or
out
movsl
in
jl
int
jnp
mov
stos
jb
adc
sbb
std
call
add
push
xchg
sub
mov
sti
repnz
les
xchg
add
out
cltd
cmp
lds
pop
pop
lock
in
xlat
out
fsubrl
cli
in
mov
imul
hlt
fistpl
mov
jge
push
mov
shl
fucomi
call
aas
mov
arpl
test
adc
ret
or
push
test
repnz
dec
xchg
jne
and
xchg
mov
scas
fcoms
daa
iret
pop
jmp
sbb
jl
sub
sub
jg
pop
dec
inc
lret
icebp
jb
mov
cmp
cmp
dec
fwait
mov
fidivrl
inc
arpl
out
xor
fiadds
mov
mov
sbb
ror
cld
in
nop
adc
mov
lock
push
adc
sub
ret
sub
stos
pop
mov
aaa
cmpsb
cmp
clc
in
push
inc
int
stos
sarl
pop
leave
add
les
in
lods
aam
mov
cli
enter
sub
xor
and
call
aaa
add
pop
add
adc
repnz
das
out
and
xchg
lcall
shrl
add
out
bound
es
cmp
adc
sub
or
and
iret
push
sbb
xchg
in
lea
or
mov
xor
mov
jl
mov
pop
in
popf
sbb
insl
clc
fnstenv
and
fldcw
jl
dec
add
add
mov
mov
daa
xlat
mov
mov
adc
mov
lea
in
adc
pop
cmpsl
cli
dec
mov
cwtl
insb
adc
ror
jle
inc
mov
mov
push
fnop
jae
popf
inc
inc
popa
xchg
pop
lds
push
out
pop
in
cmpsb
inc
outsl
xchg
push
loopne
cmp
popf
rclb
imul
or
push
out
or
int3
push
xor
adc
pop
mov
test
lods
je
mov
xchg
xchg
sbb
lock
jbe
sub
sub
sbb
sub
dec
xor
mov
cmp
int3
repz
subl
iret
inc
fprem1
add
sbb
popf
leave
jp
adc
xor
adc
fldcw
xchg
mov
cs
add
scas
ja
dec
mov
sub
sub
sbb
sub
pushf
xor
and
adc
int3
and
movsl
pop
fimuls
icebp
inc
mov
adcb
hlt
mov
iret
lea
in
pop
cmp
outsl
cmpsb
pop
cmp
out
push
dec
jb
pop
inc
cmc
lods
dec
scas
lods
dec
jl
jns
lods
xor
shlb
mov
push
mov
mov
and
mov
jmp
jmp
out
inc
in
call
int3
test
out
in
xor
js
addl
fsubs
pop
cmpsl
and
jg
mov
xor
pop
pop
pop
xchg
adcb
std
fildl
call
push
jno
pop
mov
out
test
test
or
sbb
jmp
jb
out
mull
mov
push
imul
mov
out
mov
out
movups
in
push
xchg
test
sti
xchg
lods
pop
mov
pop
mov
jmp
mov
dec
mov
ljmp
mov
mov
out
inc
imul
shl
dec
aam
xchg
add
loope
cmp
fildl
aas
jb
and
sti
rolb
inc
mov
push
mov
and
sub
adc
dec
dec
xchg
sub
push
out
dec
lds
cs
je
inc
mov
pop
gs
inc
test
add
fists
dec
fldt
push
insb
scas
push
sahf
iret
enter
mov
dec
cwtl
pop
mov
pop
jmp
xor
in
fisubs
sbb
dec
cld
sub
dec
or
iret
xlat
test
movb
push
add
ret
incb
aam
rorl
inc
mov
inc
stc
push
and
mov
pop
sti
cs
mov
sti
sbb
sub
or
mov
inc
jmp
ljmp
mov
mov
push
je
xor
jno
cmp
mov
jno
arpl
or
mov
jecxz
pop
mov
pop
push
mov
outsb
adc
xor
cmpb
mov
jp
addr16
push
popa
addb
push
cld
pop
jns
jecxz
dec
mov
push
shlb
adc
mov
test
cwtl
imul
enter
lds
xor
mov
or
movntps
adc
ds
js
xchg
pop
xlat
imul
sbb
int
jecxz
adc
into
out
push
lret
pop
mov
int
push
bound
push
mov
rep
xor
cmp
in
js
sub
lock
cli
out
sbbl
negb
imull
add
cmpsl
pop
cmp
in
lods
mov
dec
fdivrl
and
scas
push
test
inc
das
movsl
jbe
push
add
in
push
aam
jge
mov
xor
jns
mov
mov
mov
jns
rcll
pop
pop
leave
ljmp
aas
inc
pop
sub
lret
mov
call
flds
sbbl
mov
jae
add
mul
pop
pop
scas
push
rcr
gs
or
clc
insb
xor
xor
movsl
xlat
sbbl
fstpl
or
lds
sbb
push
rorb
cmp
addr16
cmp
mov
jno
mov
xchg
insb
sbb
sahf
xchg
aas
jne
inc
sub
push
add
lret
in
lods
int
push
mov
repnz
or
jmp
std
push
mov
fmull
jmp
jp
test
aam
sub
push
call
js
scas
test
push
jmp
ret
jno
cmp
mov
je
cwtl
or
repnz
mov
add
cmp
add
cmp
add
adc
fstl
mov
sub
mov
call
mov
xor
fsts
xor
aaa
jb
push
ja
and
mov
mov
hlt
or
push
insl
xor
cmc
cmp
push
add
mov
push
adc
aad
das
lods
shrb
push
int
dec
sub
add
aas
sbb
sub
adc
dec
dec
loope
dec
pop
call
pop
xor
ret
mov
ret
inc
in
inc
mov
cltd
mov
gs
scas
cli
bound
and
daa
ds
sahf
pop
cmp
jmp
push
cmpsl
mov
or
dec
imul
xchg
lods
out
lods
pusha
lret
dec
cwtl
enter
jae
push
jp
mov
pusha
mov
outsl
xchg
and
mov
pop
movsb
inc
shll
sahf
fisubrs
push
pop
je
les
jne
repz
pop
jae
cs
dec
test
xor
mov
movsb
ljmp
shll
jae
inc
fnsave
mov
in
cmp
ds
and
xchg
dec
cmp
and
mov
icebp
sbb
mov
push
mov
inc
mov
les
lods
cmc
push
cmp
repz
stos
fs
mov
test
jae
inc
fdivr
stos
inc
xor
ds
xchg
fadds
sub
out
xor
repz
pop
vhaddps
push
arpl
sub
xor
xchg
out
movhlps
insl
pop
jge
pop
push
out
or
jl
push
movsb
sysret
and
inc
jmp
aad
out
mov
or
js
fs
insl
push
inc
mov
xor
or
jp
imul
cmp
pushf
insl
sub
jge
pop
pop
fnstsw
push
mov
xor
mov
sbb
dec
push
adc
ficomps
pop
sub
pop
and
inc
std
cmc
mov
insl
mov
les
iret
js
push
push
ljmp
sbb
ljmp
add
cs
adc
mov
add
sub
sub
cltd
insl
cmc
jo
and
inc
pusha
outsl
sbb
nop
repz
ss
mov
add
xchg
dec
outsl
dec
jmp
roll
push
out
cli
jl
cltd
xchg
mov
jno
and
insb
inc
in
cmp
dec
xchg
pop
fidivrl
mov
push
movsl
or
cli
or
in
outsb
in
or
inc
pop
sub
pop
add
test
mov
cmp
movl
xchg
sub
je
or
rcrl
cmp
imul
pop
addr16
cmp
jo
lods
sub
scas
mov
push
sbb
add
push
xor
push
cmp
pushf
pop
sub
int
cmpsb
jge
or
outsb
dec
mov
xlat
repz
push
into
push
loope
test
mov
pop
sub
loop
mov
or
movsb
jne
jl
popf
xchg
fwait
in
adc
add
and
sbb
scas
call
je
push
mov
jbe
ljmp
movsb
popa
mov
sahf
inc
mov
xor
dec
mov
cmpsl
test
mov
inc
mov
cli
out
pop
inc
aad
orb
call
aaa
in
mov
add
xchg
sub
aad
bnd
divl
jmp
loopne
fnstsw
call
or
jl
lock
in
jle
insb
xchg
out
cmpb
adc
notb
mov
and
filds
test
jl
push
adc
pop
push
sbb
bound
fdivl
push
pop
fdivrl
mov
outsb
andl
je
in
push
aaa
popl
sub
dec
mov
sbb
sbb
jge
insl
outsl
lds
pop
gs
jecxz
lds
push
sbb
sbb
sub
jle
sbb
dec
jbe
scas
dec
ljmp
in
pop
dec
out
fidivrl
sub
pop
jge
sub
jl
sahf
mov
ds
mov
mov
outsl
mov
mov
mov
xorb
push
sbbb
subl
jecxz
pop
mov
addr16
mov
mov
mov
into
add
mov
arpl
pop
xor
movsl
mov
push
sub
pusha
mulb
pop
nop
pop
adcb
sbb
ret
push
pop
mov
push
aas
ss
call
mov
stos
popf
addr16
cld
es
sub
cltd
pop
pusha
or
xor
lods
dec
jne
dec
mov
sbb
je
ds
xor
inc
mov
jno
out
lods
subb
cli
mov
orb
xchg
loopne
xchg
pop
add
or
push
inc
popa
mov
lds
jg
test
and
shl
cmp
push
cltd
xchg
mov
imul
dec
jns
mov
cmpsb
mov
xor
js
mulb
aad
imul
test
xor
lds
jmp
sub
mov
pusha
xor
mov
push
pop
cmp
sbb
call
dec
xchg
addr16
push
addl
or
cmpsb
push
cmpl
lret
je
test
pop
fdivr
pop
bound
jmp
jecxz
mov
dec
sub
mov
pop
out
daa
jmp
mov
jnp
sub
out
movsl
cmp
sbb
push
andl
movsl
sahf
scas
push
mov
insb
fiadds
cmp
and
loop
cmp
test
mov
pop
sbb
lret
pop
aad
les
push
push
ljmpw
test
and
add
int3
xor
int
push
jns
jb
out
mov
push
and
push
xor
xchg
pop
mov
mov
lods
pusha
inc
push
cmp
mov
sti
adc
pop
int3
jp
mov
mov
cld
or
iret
std
roll
stos
imulb
ja
test
mov
leave
mov
pop
push
jne
jo
mov
cld
clc
in
mov
xor
cs
lods
insb
mov
and
mov
add
mov
enter
dec
mov
xor
jb
sub
in
inc
imul
scas
adc
xor
iret
ss
fmul
pop
jns
pushfw
icebp
aam
repz
lds
pushf
xor
mov
or
sub
cwtl
xor
cltd
out
in
xor
or
adc
mov
pop
into
arpl
pop
enter
fbld
pop
mov
xor
xor
sarb
lcall
push
xchg
xor
mov
cld
jle
scas
fiadds
in
inc
cmp
in
imul
mov
mov
mov
leave
decb
jg
loop
pop
stc
inc
pushf
pop
imul
movsl
push
jge
fisttpll
shrl
sub
jns
push
lods
ja
cmc
xor
std
inc
insl
or
pushf
rep
jge
fwait
jnp
das
in
lcall
push
outsb
push
cmp
lods
insb
pop
shll
xor
fs
enter
loopne
movsb
arpl
scas
fwait
mov
push
in
xlat
insl
cmpsl
jp
or
test
mov
and
xchg
sti
jno
sub
inc
call
bound
sarb
out
pop
dec
scas
out
out
push
jge
dec
sbb
xor
push
mov
xor
inc
fcompl
mov
push
addl
adc
jp
test
jg
shll
sbb
fucomi
hlt
mov
adc
je
pop
shll
movsl
jecxz
dec
mov
push
mov
leave
or
jp
adc
in
mov
fxam
mov
faddl
pop
add
sub
pop
test
rolb
lret
jno
ja
pop
mov
pop
jp
fsubs
xchg
scas
xlat
pop
js
out
das
xor
push
fwait
push
rcr
test
std
ds
loopne
jp
push
xor
sbb
xchg
mov
outsb
mov
inc
ja
mov
je
iret
jecxz
loopne
in
cmp
aad
fsubl
push
sbb
sbb
in
out
xor
xchg
pop
push
fldcw
sub
push
aas
into
mov
mov
pushf
hlt
fbld
aad
stos
pop
in
ljmp
out
or
and
cmp
shlb
imul
cmp
xchg
cwtl
int3
mov
or
jno
push
loope
je
push
test
dec
sub
outsl
xor
inc
mov
bound
aas
dec
in
push
lahf
dec
ja
sbb
mov
inc
xchg
mov
xor
call
mov
cmp
popa
mov
lods
mov
mov
mov
inc
aam
inc
cmp
jbe
cmp
into
mov
jl
cmc
mov
jb
out
mov
sub
lods
push
xor
pop
test
data16
inc
mov
mov
inc
les
jns
aam
push
xlat
jle
mov
xchg
mov
mov
or
std
jne
in
mov
xor
mul
movsl
push
add
icebp
inc
fsubs
or
in
test
add
dec
outsb
and
cmp
or
in
invd
pop
fs
inc
mov
jecxz
pusha
xchg
popa
clc
mov
add
outsl
jns
mov
adcb
cmp
dec
jo
pop
sub
mov
xchg
jmp
gs
mov
scas
xor
mov
mov
scas
push
push
jge
or
sub
cmp
jle
out
mov
adc
data16
mov
cmp
xchg
cmp
mov
dec
call
jg
cmp
cmp
pop
fcompl
pop
jbe
enter
adc
jp
mov
mull
fs
cmp
adc
xchg
out
add
in
mov
adc
sahf
outsl
sub
and
mov
jo
bnd
xlat
or
fsubs
shll
out
enter
clc
dec
test
pop
push
fwait
dec
push
pop
pop
inc
pop
mov
stos
push
inc
jb
leave
xchg
inc
movsb
pop
add
xchg
sub
pop
add
sbb
adcl
or
aas
ficompl
rorl
inc
cmp
imul
pop
fimuls
jbe
inc
loopne
cmp
jne
mov
incl
sub
push
ja
xor
and
inc
insb
test
xor
mov
sarl
pusha
rcrb
xchg
pop
in
popf
add
fwait
cmpsb
call
push
xlat
int
mov
loopne
push
fsubrp
dec
iret
into
sub
dec
pop
clc
xchg
insl
push
push
insb
sbb
out
enter
mov
roll
dec
inc
sub
inc
adc
aam
ffreep
rclb
sbb
xor
mov
les
sub
jg
mov
cli
adc
and
sub
aad
data16
mov
mov
mov
jae
stc
insb
mov
push
mov
enter
add
add
ja
cwtl
dec
push
addr16
mov
cmpsl
pop
hlt
mov
js
ds
mov
movsb
jbe
add
dec
jp
imul
es
mov
scas
cmp
jb
popf
bound
jg
mov
mov
sbb
mov
in
xor
sub
push
negl
sub
push
movsb
jge
adc
icebp
jo
pop
in
adc
and
gs
add
mov
shll
cwtl
xchg
mov
cwtl
inc
or
inc
inc
push
mov
mov
sahf
add
les
aad
hlt
int
sti
lea
fildll
imul
or
inc
lret
sbb
mov
push
mov
cmpsb
insl
mov
lea
mov
repz
sarb
add
aas
mov
cmp
sar
add
cltd
je
stos
and
push
shrb
sbb
pop
jg
inc
cmpsl
incb
push
add
int3
adc
jno
cli
add
push
xchg
push
aas
push
imul
cmp
ljmp
jge
sbb
or
pop
jns
sbb
out
lods
jae
or
cmpl
fbstp
fwait
pop
lret
and
mov
data16
or
dec
mov
add
sbb
cmp
sbb
scas
mov
and
pop
dec
or
leave
hlt
mov
call
je
dec
aaa
add
inc
inc
sahf
xor
add
or
or
adc
xlat
pushf
push
fs
pop
call
je
jge
icebp
cli
or
inc
mov
mov
cs
scas
repz
push
outsb
orb
dec
mov
adc
ljmp
cs
jb
mov
popf
inc
rcll
cmp
jl
pop
into
jp
in
mov
mov
out
xor
pop
mov
and
jbe
and
ffreep
outsl
test
stos
inc
sub
scas
xchg
dec
xchg
fs
sbb
inc
je
push
dec
dec
xchg
push
dec
mov
ds
mov
mov
outsb
test
cmpsb
sti
mov
mov
push
mov
xchg
mov
scas
push
push
xor
cld
add
leave
popf
jecxz
jmp
inc
sarb
negb
dec
fistpl
ljmp
insb
dec
add
in
jmp
pop
add
imull
mul
outsl
pop
divb
aaa
sahf
dec
repnz
mov
fsub
and
fsubrs
mov
cli
inc
jecxz
jl
jae
mov
inc
sub
push
hlt
ss
fidivrl
insl
jb
loop
movsl
call
addr16
adc
sub
sbb
int
or
xchg
or
shlb
push
mov
jge
and
sub
push
pusha
andl
push
push
fdivrs
push
cltd
xchg
jecxz
sarl
jne
stos
inc
fiaddl
xchg
cmp
lods
xchg
jle
jno
sub
in
and
lcall
or
imul
mov
sbb
mul
imul
sbb
sbb
leave
pop
stos
aad
lahf
out
mov
sbb
dec
insl
mov
pusha
or
sub
repz
sub
mov
and
push
jns,pt
xchg
dec
bound
data16
hlt
test
push
push
sbb
xchg
mov
jg,pn
and
cli
lret
push
jno
inc
je
js
push
dec
mov
xor
cltd
push
or
je
sbb
jmp
mov
dec
push
out
mov
push
into
mov
adc
mov
mov
push
pusha
xor
and
xchg
push
inc
loopne
negb
sbb
jae
cltd
mov
pop
shll
lret
add
stos
pushf
leave
lret
mov
jbe
test
sahf
stos
orb
mov
jp
out
sub
xchg
sbb
cmp
mov
push
sbb
add
into
aaa
push
inc
jbe
in
out
aad
xor
insl
and
jmp
int
push
movsl
sub
cmpsb
dec
adc
add
pop
mov
scas
pop
sub
dec
mov
in
stc
pop
or
pop
mov
div
mov
fs
mov
inc
dec
in
xor
popfw
pop
movsb
pop
sub
push
int
shrb
jp
cmp
mov
jbe
mov
leave
popa
mov
mov
xor
gs
pop
testl
sahf
mov
add
pop
dec
aam
mov
mov
pop
bound
stos
sbbl
jge
jno
or
movsl
mov
add
jmp
add
push
jecxz
cmp
add
push
lea
lcall
aas
lock
xchg
iret
stos
sub
sahf
cmpsl
sbbb
pop
fs
mov
mov
bound
stos
mov
jno
or
movsl
mov
jne
and
ja
and
or
lock
icebp
iret
lret
add
and
pop
lcall
ret
aaa
add
push
aam
xor
jns
cmpl
sbb
pop
lea
jb
cmp
fs
gs
hlt
rcr
in
roll
leave
xor
sub
add
push
into
ljmp
add
add
xchg
aad
and
icebp
lods
jge
int
jns
test
jg
or
inc
icebp
push
clc
sub
lods
inc
add
mov
or
mov
add
push
sub
inc
pop
xor
dec
cwtl
cmc
push
lea
mov
sub
dec
add
inc
cltd
push
push
lcall
enter
lods
rcr
sub
add
scas
outsb
cmc
dec
dec
mov
mov
lds
sub
cld
add
and
inc
sub
ds
insl
adc
sub
sub
sub
lods
es
xchg
addr16
mov
in
divb
inc
jl
sub
and
lea
das
int
jo
loopne
push
or
es
movsl
bound
test
add
aas
push
pop
fisttpll
out
sub
es
data16
inc
sbb
pop
in
loop
pop
mov
sub
int
jo
subb
outsb
ljmp
stc
repz
in
xor
sbb
xlat
and
aad
daa
or
mov
cmp
jecxz
fsts
imul
repnz
push
dec
mov
popa
enter
cmp
leave
adc
or
cli
jae
add
hlt
popa
push
mov
mov
pop
cwtl
and
push
test
or
xchg
sub
lret
pop
sti
call
push
mov
sbb
mov
mov
mov
shl
xchg
lret
cld
inc
mov
mov
push
jl
in
test
call
xor
add
sub
es
add
jno
or
mov
mov
push
data16
lods
and
jns
pop
jno
mov
jmp
adc
xlat
and
lds
jo
mov
mov
aaa
jl
adc
sbb
dec
sub
jl
mov
lea
adc
not
aam
ljmp
inc
leave
cmpsb
mov
push
mov
pop
out
iret
movsb
jbe
dec
mov
cmp
sbb
loop
addr16
adc
fbld
jmp
mov
mov
and
push
and
push
mov
sbb
mov
jecxz
rcrl
push
push
xchg
pop
call
imul
xlat
dec
inc
xchg
je
loop
jns
xor
incl
in
ja
cmp
mov
leave
push
jmp
pop
push
clc
or
idivb
cli
outsl
sub
stos
lock
jp
or
dec
cld
jns
push
mov
and
mov
mov
push
in
pusha
push
scas
out
idivb
mov
test
mov
xor
inc
inc
xor
or
movsl
popa
outsl
sub
les
dec
add
cmp
mov
mov
mov
call
sub
insb
xor
clc
xchg
sbb
es
sbb
xor
imul
jmp
pop
mov
mov
popa
xchg
mov
mov
sub
xor
jb
hlt
mov
std
out
adc
pop
ljmp
movsl
jb
pop
mov
js
inc
aad
jp
cs
js
sub
jb
sub
jb
and
sub
pusha
int3
add
clc
sub
mov
adc
jmp
dec
repz
dec
add
loop
add
loope
incl
and
mov
sbb
jl
xchg
stos
repnz
sbb
imul
fs
xchg
inc
mov
adc
stc
data16
xchg
cmpsl
and
push
pusha
stos
inc
pop
push
popf
scas
sub
in
adc
mov
adc
pop
jne
mov
sub
or
or
mov
mov
test
mov
and
xchg
call
xor
add
ljmp
arpl
adc
dec
and
xchg
rcl
jo
mov
mov
imul
enter
loop
cmp
add
jns
jno
imul
out
pop
jle
cmp
inc
inc
or
gs
adc
pop
and
inc
ds
cltd
adc
adc
lods
jbe
shr
pop
jo
sub
pop
mov
pop
xchg
ljmp
jmp
pusha
and
push
mov
adc
jns
addb
in
xchg
test
aas
jmp
mov
rep
adc
pushf
inc
imul
loop
lods
inc
sahf
fistl
push
stos
inc
in
jae
adc
sub
pop
inc
push
adc
xor
sbb
aam
adc
repnz
adc
xlat
test
push
insl
sbbl
mov
out
popl
sbb
mov
push
pusha
leave
test
mov
aad
mov
jbe
jl
test
int3
popf
sbbl
mov
mov
ds
adc
loope
lahf
jge
cmp
insl
popf
sub
jle
dec
sti
enter
cmp
mov
inc
or
inc
cmp
sub
cmpsl
pushf
dec
daa
cmc
or
hlt
lds
shll
mov
or
jno
inc
xchg
mov
and
cmp
adc
xor
dec
fisubl
push
lahf
testl
shl
aas
nop
lock
pushf
mov
and
testb
sbb
sbb
sbb
es
jle
add
bound
cmpsl
push
popa
add
fldenv
fdivs
ljmp
lea
jge
lock
sbb
mov
scas
int3
add
sahf
inc
sbb
push
lods
cmp
cmp
sub
ret
cmp
push
std
stos
inc
repnz
cmp
adc
popf
hlt
cmpsl
mov
imul
aad
lods
repz
or
sub
push
mov
fcomps
mov
mov
stos
gs
jmp
mov
int3
call
and
dec
daa
das
xor
addr16
loopne
push
jl,pn
sbb
addb
push
push
or
xor
or
loope
adc
add
mov
xchg
dec
movsb
jge
adc
or
jae
ja
xor
inc
jle
popf
rolb
push
cmpsb
or
das
push
mov
inc
ret
cmp
cmp
mov
mov
or
cltd
inc
mov
inc
mov
jmp
out
mov
mov
ja
lahf
lods
movsl
or
jg
push
xchg
bound
mov
mov
jmp
cmc
daa
push
cs
ss
sub
aaa
inc
mov
es
mov
loope
sub
repz
cltd
roll
pop
jno
std
les
pop
dec
pop
es
loopne
pop
pop
insl
xor
rorb
fmull
ret
sahf
sub
pop
cmp
jno
pop
sub
jp
out
sub
mov
fadd
push
adc
mov
pop
mov
mov
js
lahf
pop
jmp
pop
mov
int3
dec
popa
dec
addr16
in
pop
popf
shrb
test
int3
stos
jno
pop
and
xchg
pop
pop
cs
int
ret
xor
pop
mov
test
dec
pop
into
lods
fistpll
loop
mov
dec
nop
xchg
push
test
pop
pop
gs
outsl
test
inc
daa
push
mov
cli
repnz
inc
cmp
bound
adc
dec
cld
je
adc
repnz
push
mov
leave
push
mov
cli
lahf
div
dec
dec
push
add
xchg
lret
and
jp
jecxz
stc
and
mov
or
jmp
dec
jo
fs
adc
push
and
test
xchg
das
orb
jno
xor
ss
mov
test
xchg
mov
ret
mov
jnp
clc
or
jne
or
and
cmpl
and
in
jg
dec
repnz
insb
xrstors
insb
sbb
xor
mov
jbe
sbb
loop
mov
in
pop
fbstp
inc
mov
cld
xor
ds
inc
insl
xor
sbb
fxch
xchg
int
std
lods
rolb
les
pop
lods
mov
roll
pushl
cmpsb
or
stos
push
mov
mov
cli
mov
adc
xchg
popf
sbb
sbb
pop
fisubrs
push
lods
ljmp
pop
xchg
mov
pop
inc
cmp
sti
jbe
mov
jg
xchg
add
out
daa
adc
mov
addr16
shrb
or
jge
ds
add
loop
mov
sahf
dec
aas
stos
es
jecxz
mov
loop
dec
stos
or
pop
or
scas
inc
sub
xor
imul
out
dec
lret
or
cs
scas
fcoml
outsb
pop
loop
mov
mov
aam
loope
add
xor
sbb
jo
rorb
cmp
jge
cwtl
push
sbb
stos
mov
jbe
push
clc
andb
ljmp
dec
or
sbb
fs
adc
mov
mov
mov
lea
fs
cli
push
movsl
jo
test
mov
lods
out
cltd
mov
inc
inc
pop
adc
out
pop
mov
sub
sbb
int
test
inc
jbe
in
add
xchg
dec
sub
push
pop
mov
in
in
jle
inc
loope
lcall
push
dec
fwait
pushf
shlb
popf
cmp
inc
lock
add
popa
sbb
push
xchg
outsb
lods
inc
sahf
jge
xlat
in
cwtl
insl
lods
jg
jmp
and
xchg
mov
lahf
fs
add
in
gs
or
pop
add
fnstsw
fstps
xchg
jmp
adc
xor
cwtl
push
aaa
lea
cmp
int
sbb
jecxz
addr16
test
jne
xchg
movsl
sbb
stos
addr16
leave
daa
mov
jb
adc
and
aad
jl
insb
adc
cmc
fdivrl
js
arpl
out
mov
stos
sti
jo
xor
cmp
fs
or
xchg
enter
shl
dec
pushf
lock
test
pushf
jmp
int
cmp
mov
shr
pop
and
sbb
sbb
or
loop
dec
pop
pop
or
popf
call
cmp
sbb
adc
stos
rep
xchg
push
mov
jnp
jo
aaa
jmp
push
sub
insb
add
loope
cwtl
je
lea
xor
cwtl
jno
xor
shrl
add
mov
lock
fs
adc
loopne
clc
xor
mov
enter
test
dec
jae
dec
int
jp
jge
out
int
cli
mov
cs
push
mov
mov
xlat
das
ljmp
je
dec
loopne
mov
mov
mov
cli
cmpsl
imul
jo
jmp
add
loop
jne
gs
imul
push
mov
or
push
rorl
icebp
jnp
insb
push
adcl
mov
insl
gs
outsb
xor
lds
pop
insl
insb
dec
inc
xor
inc
mov
push
add
push
dec
and
idivl
fdivp
jmp
xor
jae
mov
js
mov
in
shl
inc
mov
subl
bound
test
js
and
mov
test
cmpsl
pop
roll
push
sahf
lock
push
into
inc
cmp
cwtl
js
pop
mov
pop
in
mov
add
bound
ja
ja,pt
std
outsl
or
lock
sub
in
or
inc
popf
dec
and
loopne
scas
fidivrs
mov
dec
mov
inc
xchg
dec
mov
insb
mov
lret
inc
mov
sub
mov
mov
outsl
cmp
or
popa
filds
sbb
cli
jb
pushf
insl
cmc
pop
lods
jne
popl
mov
mov
mov
jl
or
nop
rcrb
test
js
inc
pop
fidivrs
bnd
out
out
popf
rcl
xor
imul
ja
push
lcall
pop
push
outsb
xchg
add
mov
or
out
sahf
mov
push
aaa
mov
ret
fcoms
or
add
jp
dec
jl
arpl
imul
mov
mov
xor
js
push
pop
mov
loopne
nop
rolb
mov
ret
push
jecxz
andb
jp
cli
rcrb
das
mov
fnstsw
in
in
jle
or
jge
lea
cs
mov
xor
pmovmskb
gs
jo
lods
cmp
push
imul
push
jecxz
pop
inc
ss
add
sbb
push
rorl
fldcw
pop
ljmp
pusha
outsl
loope,pn
int3
in
push
dec
xchg
lea
jl
or
inc
inc
mov
pushf
push
mov
mov
adc
cld
jl
jmp
sbb
xor
jmp
push
jecxz
jl
mov
test
and
xor
call
mov
mov
push
or
insl
push
mov
cmp
out
test
xlat
and
pop
adc
fistl
aas
sub
loop
adc
or
aas
icebp
cmc
pop
mov
or
aaa
xor
pop
dec
sub
inc
xor
mov
jp
xchg
mov
nop
dec
dec
cltd
xchg
sbb
inc
xor
add
xor
out
xchg
ret
adc
xchg
jl
xchg
push
xchg
lds
daa
dec
dec
cltd
addl
xchg
adc
test
add
push
sbb
mov
sbb
xchg
outsl
inc
mov
and
xchg
iret
out
fisubrl
mov
push
jge
mov
nop
xchg
cmp
dec
pop
inc
jl
les
fs
inc
push
shlb
aam
jmp
jae
dec
inc
and
push
fildll
shlb
fnsave
cmpsb
xchg
add
lret
mov
pop
sub
ss
pop
cmpsl
cwtl
xchg
mov
xlat
scas
cmp
insl
push
cs
imul
mov
mov
jle
or
dec
stc
bound
lcall
inc
in
enter
cmp
and
adc
insb
icebp
sbb
js
add
sub
sbb
and
rcr
jns
push
loopne
popa
jno
add
scas
mov
mov
cmp
mov
xor
adc
call
pop
sub
enter
sub
xchg
insb
mov
fsubl
jne
mov
ds
inc
loopne
pop
cmp
loope
dec
or
out
inc
xor
pop
clc
push
jmp
jl
pop
add
dec
outsb
and
xchg
push
pushf
js
and
pop
lcall
enter
sbb
cmp
xor
inc
pop
stc
push
int3
cld
jmp
pop
sahf
mov
add
sbb
dec
out
rorl
pop
iret
cld
mov
dec
xchg
addl
loopne
mov
mov
xor
in
mov
rclb
cltd
rcrb
gs
jne
inc
push
dec
sub
mov
push
dec
push
mov
lea
xor
mov
xor
dec
outsl
clc
mov
rcll
movsb
in
and
pop
sahf
inc
push
jb
popf
add
pop
adc
jo
int3
movsl
jbe
fcomps
jne
js
inc
cwtl
popa
jnp
shl
icebp
in
inc
jp
mov
out
loopne
and
lea
fidivs
ret
xorl
loopne
movsl
or
cmp
pop
dec
int3
icebp
cmovae
int3
call
loop
fs
imul
out
sbb
sti
mov
pop
jmp
dec
cwtl
push
add
out
push
jae
test
ljmp
subl
jmp
sub
jne
push
adc
lret
popa
sti
les
pop
push
push
sbb
fnstsw
mov
inc
lds
cwtl
mov
push
pop
push
leave
jae
push
aad
mov
rorl
lods
xchg
cltd
je
jne
xchg
sbb
cmp
dec
imul
fdivrl
std
pusha
dec
ds
cltd
loopne
dec
inc
xchg
movsb
les
mov
jle
iret
test
inc
imul
add
adc
mov
ja
add
mov
lods
pop
cmp
sbbb
dec
dec
aas
pushf
mov
jnp
out
or
xchg
lret
shrb
cwtl
sbb
js
ljmp
xchg
push
les
dec
andb
mov
ja
dec
mov
les
mov
xchg
ret
lret
cmp
outsl
test
xchg
xchg
out
stos
hlt
mov
test
fmull
mov
jne
xchg
lock
add
rorb
fwait
fwait
sub
mov
mov
xchg
ret
pop
pop
xchg
jge
jp
mov
jnp
rolb
dec
pop
xchg
aaa
addr16
and
jnp
push
jno
pop
dec
insl
mov
inc
gs
pop
popa
sti
imul
adc
ret
pop
xchg
notl
xor
ret
mov
into
push
stos
pushf
dec
add
std
or
or
adc
gs
sti
movsl
cmp
push
sub
and
mov
or
lods
fnsave
xor
sbbb
mov
insl
lods
cli
jmp
mov
jb
cwtl
mov
insl
leave
mov
bound
and
xchg
xor
jge
mov
xchg
pop
jecxz,pn
in
lcall
dec
push
xchg
scas
cmp
rcrb
pop
fldcw
push
xor
sbb
inc
jae
jmp
mov
repnz
shlb
push
add
test
mov
jno
scas
mov
enter
das
pusha
fs
push
inc
lock
sub
sbb
sbbl
xchg
inc
test
inc
imul
cmc
popa
movsb
xchg
adc
push
sbb
cs
cwtl
add
or
cmp
push
mull
push
idivb
std
aaa
enter
movsb
in
fiaddl
mov
xor
sbb
inc
fidivrs
mov
xor
mov
repnz
stc
push
jae
orb
inc
xchg
dec
test
xor
or
icebp
or
inc
and
push
cli
arpl
jmp
add
mov
shll
xchg
sbb
sti
arpl
sub
or
mov
jp
fistps
in
aad
ljmp
sub
stc
add
movsb
xsaves
xchg
inc
mov
mov
jl
pop
mov
out
cmp
add
shlb
add
dec
in
sub
mov
jbe
add
add
out
bound
sbb
mov
cmp
inc
stos
jno
mov
lret
cltd
stc
dec
stc
cmc
mov
adc
inc
shl
mov
cli
dec
adc
aas
inc
mov
adc
jl
dec
in
sub
int3
pushf
jb
or
insb
cmp
les
sub
inc
hlt
mov
push
cmpsb
jg
scas
cli
or
scas
rcrb
aad
or
push
iret
adc
mov
in
movsb
lock
pushf
ja
cmpsl
xor
jns
push
xorb
cs
xchg
enter
dec
mov
xchg
leave
ljmp
std
xchg
sti
sahf
test
lods
xchg
push
imul
mov
sahf
mov
int3
test
xchg
aas
dec
mov
out
pop
and
out
mov
and
popa
imul
in
pop
dec
movsl
dec
flds
or
mov
ret
sub
sub
jp
xchg
das
lods
inc
daa
cmpsb
mov
mov
mov
test
adc
cmp
mov
bound
scas
iret
stc
andb
push
mov
scas
push
mov
pop
push
jge
out
loopne
pop
sbb
or
mov
mov
cld
jns
dec
lods
ja
loopne
mov
loop
scas
jl,pn
sbb
dec
and
fucomi
mov
imul
mov
dec
mov
ja
or
fs
and
loopne
ds
push
je
icebp
dec
jns
and
mov
cmp
pop
mov
sub
ds
or
xchg
mov
ljmp
shll
loopne
or
xchg
cli
das
dec
sbb
mov
test
xor
xor
sub
fld
lret
cltd
xchg
rcrb
out
into
push
push
jns
test
mov
movb
cld
cmp
cmp
lret
imul
add
js
cmp
mull
test
and
loopne
lods
jp
sub
aad
mov
orl
mov
pop
dec
mov
adc
xchg
push
mov
int3
les
in
cmpsb
cmp
jne
dec
adc
movsl
int
outsb
xchg
inc
inc
aam
sahf
imul
aad
lret
dec
cwtl
arpl
push
out
lret
or
stos
xlat
sub
and
loopne
fsubrl
fstpl
dec
mov
cwtl
cmp
shrl
mov
pusha
mov
add
andl
enter
imulb
mov
jnp
mov
sbb
dec
into
ljmp
push
cmpsl
dec
or
test
mov
lds
test
pop
pusha
add
jmp
cmp
mov
sbb
mov
dec
insb
in
mov
out
sbb
mov
mov
popa
xor
bound
or
cmp
movsb
sub
insl
mov
pop
lods
les
inc
inc
inc
ja
sarl
dec
sbb
xor
sbb
lock
add
inc
adc
cmp
ss
sub
pusha
inc
cmp
scas
in
adc
mov
out
subb
mov
mov
mov
insb
inc
daa
scas
push
push
inc
pop
push
pushf
lods
add
cmp
and
inc
add
rcrb
stos
iret
out
mov
or
or
lret
cmc
cmp
lds
mov
add
jle
inc
pop
jl
push
lcall
dec
addr16
xchg
dec
incb
dec
ljmp
mov
pusha
jl
mov
mov
cmpsb
dec
out
sub
sahf
push
jp
mov
lods
mov
test
iret
mov
pushf
xor
stc
aad
inc
out
mov
mov
leave
fisttpl
pop
push
jnp
mov
lods
fsubrs
mov
xchg
push
sahf
push
and
popf
mov
shll
pusha
mov
mov
xor
jp
add
pop
lock
pop
out
mov
mov
outsb
fs
mov
sbb
pushf
cmp
cwtl
dec
ja
cmp
mov
add
xor
outsb
lret
stc
lret
popf
call
cs
shl
or
fisttps
ficoms
mov
add
js
sbb
xchg
inc
xor
mov
mov
js
mov
sbb
cmpsl
int3
daa
or
out
out
loopne
je
imul
pop
xchg
pop
fidivrl
aam
mov
jns
nop
pop
leave
push
test
mov
ss
ds
std
cmp
sub
mov
push
mull
mov
pop
cld
xchg
push
pusha
dec
stos
test
mov
scas
pop
push
push
cmp
cld
jb
xor
jecxz
cmp
mov
sbb
orl
icebp
add
adc
jmp
lea
jns
ljmp
pop
imul
mov
das
mulb
popf
rorb
enter
int
jl
pop
rcl
stc
xor
repz
std
push
xchg
das
xor
or
stos
sub
test
popa
ffreep
fisubs
shrl
jmp
sahf
ficoml
frstor
roll
lods
cli
cmpsl
incb
in
dec
arpl
enter
divl
jg
xor
rorb
adc
stc
lods
popa
add
movsl
loope
push
and
movsl
sbb
xchg
xor
add
push
clc
popf
gs
and
in
push
push
dec
sbb
sbb
ficoms
das
addr16
push
pop
test
nop
ss
pop
aas
fisttpl
add
imul
imul
xor
outsb
insl
mov
movb
or
fdivrl
pop
dec
dec
sub
and
test
cltd
orb
lds
imul
xor
int3
dec
fstl
mov
inc
nop
push
adc
aad
scas
mov
dec
mov
das
jne
adc
nop
jns
push
std
je
sbb
in
jno
or
lea
xchg
push
stos
orb
popa
imul
push
scas
mov
mov
daa
xchg
mov
add
icebp
inc
lods
add
mov
js
mov
sbb
and
push
pop
pop
iret
jbe
push
dec
lret
loopne
xchg
cvtdq2ps
adc
push
xchg
in
sub
adc
and
xchg
and
adc
int3
sbb
inc
into
pop
aam
loopne
leave
adc
push
sysexit
add
pop
movsl
add
add
cld
ljmp
mov
rcrl
lock
ljmp
fisubs
push
add
sub
loope
mov
sti
jle
data16
mov
jb
push
add
lcall
repnz
adc
pop
sbb
test
mov
add
pop
fisubrl
dec
push
jnp
ljmpw
popa
push
bound
sahf
push
insb
clc
rorl
test
and
into
and
stos
cmp
jge
and
pop
icebp
faddl
push
mov
out
shll
leave
popa
mov
rcr
fs
fsts
pop
loope
sub
jmp
or
lret
add
xor
sub
gs
xchg
cmp
subb
fcmovnbe
mov
fcomps
std
in
je
push
fbstp
in
xchg
xor
js
fld
jns
dec
repnz
mov
mov
popa
int3
cmp
mov
gs
popa
cmp
sbb
loopne
pushf
mov
pop
or
pusha
clc
or
test
jb
dec
push
pop
gs
pushf
adc
fmuls
imul
jmp
inc
out
and
addr16
cmp
dec
into
out
pop
js
std
pop
jl
adc
cmp
xor
shll
dec
insb
testl
push
mov
xor
xor
cmc
jne
mull
popf
mov
xor
popa
mov
adc
xor
or
pusha
lock
mov
lea
daa
push
addr16
repz
and
ds
xchg
mov
jmp
push
sub
push
cmp
sub
inc
mov
dec
cwtl
inc
fs
push
leave
xchg
adc
fcoms
sti
sbb
dec
in
sar
cmp
mov
pop
repnz
fs
addr16
decb
fcmove
add
flds
sti
frstor
loopne
out
xor
nop
push
popa
pop
jl
jge
fisttps
test
xchg
test
xor
jge
sub
in
xchg
add
or
insb
push
mov
imul
push
movsb
popf
add
dec
push
push
stos
or
movl
lahf
mov
sub
or
inc
adc
addr16
cli
push
and
cmp
cmp
sbb
scas
std
lret
loopne
lahf
out
cmpsl
repnz
notl
divb
aas
divl
add
mov
ljmp
lret
add
aad
repnz
jno
test
in
cmp
scas
sub
cmpl
adc
std
ds
jne
les
ljmp
sub
xchg
in
enter
mov
divb
jmp
iret
or
add
pop
xchg
pop
pop
lods
movsb
repz
inc
sub
ja
ss
push
stc
repnz
xchg
mov
or
sbb
jmp
xlat
ror
mov
fsubs
sbb
loop
and
dec
adc
bound
xchg
subb
adc
inc
sbb
push
sbb
js
jle
mov
ret
sti
mov
loopne
scas
pop
lret
inc
mov
loopne
mov
jo
mov
cld
mov
jp
sbb
cs
icebp
lea
clc
dec
test
xchg
xor
dec
scas
push
shlb
mov
and
mov
pusha
ds
xorb
adc
jae
push
sbb
ret
pusha
and
divl
mov
addr16
sbb
stos
dec
and
jne
mov
jo
cmp
stos
jmp
sub
fsubs
aaa
in
or
ljmp
push
inc
in
lods
aad
int
mov
rorl
pusha
cmp
gs
js
in
jecxz
cmp
arpl
or
out
icebp
test
scas
or
inc
mov
dec
push
gs
sub
dec
xor
dec
cli
movsb
pop
sahf
fs
hlt
push
mov
hlt
outsl
movsl
repnz
lock
gs
std
gs
pop
movsl
pop
repnz
fwait
aad
pushf
cltd
push
clc
jb
in
pop
xchg
adc
pop
pop
outsl
dec
ljmp
into
scas
or
scas
sub
enter
int
add
shrl
cmc
dec
daa
subb
push
dec
xlat
dec
into
add
pop
add
loop
not
pop
ret
jecxz
cltd
scas
cmc
mov
or
scas
leave
stos
mov
gs
out
xorl
icebp
push
jle
lods
sub
pop
jl
cli
cmp
push
int
sbb
jns
les
mov
pop
ja
ss
cwtl
outsb
mov
insl
mov
cltd
leave
scas
push
sub
data16
shrb
xor
pop
xchg
shll
cld
cmp
daa
and
mov
mov
sub
divb
xor
pop
pushl
les
cli
outsl
mov
inc
iret
arpl
js
pusha
cmpsl
ds
xchg
jmp
out
push
mov
lock
mov
xlat
outsb
lret
adcb
cmp
mov
cmpsl
mov
ljmp
notl
loop
ret
es
sbb
out
out
mov
repnz
xchg
mov
adc
sub
and
xchg
nop
push
imul
inc
stos
jl
dec
hlt
ljmp
ljmp
xchg
je
je
cmp
data16
stos
inc
shll
pop
sarb
mov
pop
inc
and
ret
les
cld
pop
outsb
clc
repnz
int
pop
cmp
or
lahf
rorl
cmc
mov
stos
clc
imul
and
imul
push
ljmp
aam
sbb
sti
clc
shll
jle
outsl
pop
add
fwait
aad
pop
lds
and
cmc
mov
movsl
call
imul
jmp
loope
and
shll
ljmp
xchg
sub
dec
mov
das
mov
pop
adc
mov
mov
shrb
sti
pop
rorl
sub
popf
icebp
pop
test
fs
push
adc
inc
mov
out
ja
push
rorl
xor
stos
clc
stc
mov
and
scas
in
scas
add
pop
adc
in
jmp
xlat
dec
test
sub
dec
adc
cmp
pop
and
and
push
adc
repnz
pusha
push
roll
sbb
push
out
insb
cmc
rolb
xor
xchg
movsl
mov
cs
inc
push
dec
and
pop
xor
lock
add
andl
stos
outsb
repnz
stos
xchg
lcall
mov
jge
pop
mov
push
xchg
fldl
pop
push
add
and
in
mov
hlt
xchg
test
iret
ret
jmp
xor
add
xor
pop
and
lock
add
xchg
mov
mov
test
in
mov
mov
inc
sub
pushf
sbb
mov
adc
cmp
adc
push
inc
dec
test
ja
push
push
mov
cmp
add
in
fcoml
sarl
mov
mov
stos
push
les
insl
xchg
dec
mov
cs
repnz
scas
repz
mov
cwtl
mov
xchg
bound
mov
push
and
cmp
and
inc
xchg
add
je
add
imul
jp
push
pop
stc
dec
cli
shrb
pop
xlat
add
or
ljmp
shll
mov
shlb
and
and
xor
pop
notb
aad
cmp
lahf
pop
pop
lock
push
nop
and
adc
push
loop
pop
fists
std
lds
push
jo
sub
inc
ret
fs
inc
outsl
cmpsb
loop
jnp
cs
push
ret
push
mov
divb
clc
cmp
cmp
inc
mov
pushf
gs
or
call
sbb
pshufw
xor
cmc
lds
ret
add
int3
roll
jg
in
cli
inc
push
dec
arpl
int
addb
arpl
push
dec
test
jmp
out
jne
mov
push
mov
lods
inc
loop
clc
jge
in
jecxz
repz
sub
or
cmc
mov
sbb
xor
or
add
adc
out
inc
aaa
push
push
or
xchg
jbe
mov
popa
shll
movsl
stos
jecxz
push
test
and
fbstp
pop
es
cmpsb
lds
mov
in
xchg
ss
lret
icebp
in
leave
out
mov
adc
and
jp
adc
add
lods
ja
adc
in
imul
lret
or
mov
nop
xor
bound
inc
stos
popa
imul
loopne
fdivr
mov
stos
out
repz
mov
outsl
daa
add
push
sub
mov
cwtl
js
insb
nop
mov
push
in
sub
push
add
mov
push
out
int3
cli
adcb
inc
mov
sbb
gs
mov
loop
xchg
aas
stc
sub
cmp
shrl
sub
ds
outsl
dec
push
sbb
push
les
int3
sub
stos
test
mov
and
xchg
and
repnz
jae
adcl
mov
jno
cld
in
sub
clc
add
sub
out
stos
aad
and
cmpsl
cld
or
push
and
loopne
mov
pop
cmp
cli
mov
xlat
cmp
and
pop
push
sub
push
inc
mov
xchg
mov
int3
and
test
scas
les
fdivrp
xor
stos
test
mov
lahf
mov
cld
cs
lods
cmc
arpl
pop
and
decl
stos
xchg
xchg
test
push
and
push
loopne
pop
ja
je
inc
adc
mov
cld
mov
sbb
pinsrw
fbstp
xchg
repz
aad
push
or
lods
cwtl
gs
data16
xchg
add
ja
adc
sbb
shrl
sbb
adc
pop
or
jmp
dec
sti
insl
sub
pushf
fincstp
in
rcrb
pop
xchg
in
cmp
lcall
idivl
cld
clc
jno
cld
hlt
jno
std
lock
sub
mov
int3
xchg
jl
pop
fdivs
mov
adc
lods
xor
cmp
jbe
sub
daa
in
push
loopne
enter
adc
xor
faddl
adc
jge
imul
push
imulb
gs
lock
jbe
fdivrs
gs
dec
inc
sbb
lock
outsl
push
insb
push
push
inc
push
clc
sbb
cmp
out
inc
cwtl
mov
cli
sbb
jne,pt
xor
insl
popa
sbb
cltd
and
adc
fisttpll
int
es
xchg
inc
inc
rcll
inc
add
leave
das
mov
push
or
sbb
dec
mov
bound
jl
fistpl
sbb
clc
outsb
rcrl
rcrl
mov
push
es
mov
mov
xchg
cld
jmp
cmpsb
jle
mov
stos
lcall
xor
subb
lods
scas
fisubl
outsl
out
pop
pop
xchg
sub
push
loopne
bound
pop
test
adc
lcall
sub
mov
sub
cmc
out
mov
mov
lds
sbb
ds
stos
les
pop
jmp
dec
cmp
jg
add
repz
gs
repz
insl
loop
dec
addr16
dec
dec
mov
cmp
iret
loop
sub
jne
shrb
repz
jno
pop
test
jl
sarl
sub
orl
push
test
cmp
add
movsl
popa
jmp
add
pusha
repnz
lock
cmp
push
int
test
cmp
jno
mov
call
jmp
cli
shll
jne
adc
inc
cli
jecxz
add
test
aas
lods
adc
push
rcl
sub
in
adc
mov
xchg
icebp
stos
jmp
adc
inc
fisttpl
mov
sbb
dec
cmp
mov
sub
push
xor
xchg
push
incb
jb
xchg
xchg
stos
adc
cmp
mov
lahf
xchg
and
hlt
cmc
outsl
popa
xor
cmp
scas
inc
inc
fnstsw
sub
dec
mov
dec
xor
stc
add
fbld
jne
pop
mov
push
xor
jge
pop
ja
mov
jnp
sti
dec
inc
lds
xor
xchg
mov
sbb
rol
jl
dec
cmp
in
cmp
push
jnp
lret
push
sbb
cli
out
inc
dec
imul
pop
push
arpl
and
cmp
pop
fadd
movsl
pop
cmp
xchg
mov
mov
mov
jg
push
movsl
adcl
mov
ljmp
xor
cli
jmp
enter
xchg
addb
lcall
dec
cmp
orb
adc
inc
sbb
out
lods
sarl
pop
cmc
mov
fsubr
push
mov
lret
addb
xchg
inc
push
push
and
inc
aaa
xor
in
andl
mov
cld
fdivl
in
sub
rcrl
fsub
std
jbe
or
jns
outsb
add
adc
cli
dec
lds
ret
cmp
stos
push
lods
xchg
xchg
cli
ret
and
push
cmp
jns
jecxz
scas
or
sbb
fcompl
fwait
scas
outsb
stc
loop
mov
in
scas
int
inc
sub
cld
and
push
push
inc
mov
inc
hlt
andb
jle
xor
add
mov
enter
pop
cld
push
sub
sbb
jg
add
aad
lcall
jle
js
ja
pop
inc
adc
cmc
sbb
inc
scas
xchg
fwait
push
xor
xor
cltd
out
mov
add
cmp
adc
pop
lea
pop
out
jns
mov
loopne
dec
fstpl
mov
es
mov
cmp
outsb
lret
jbe
jecxz,pt
fucomi
mov
out
test
push
add
in
fnstenv
xor
dec
shlb
jmp
inc
jno
enter
dec
mov
movsl
and
insb
jne
pop
pushf
mov
in
jno
lods
lcall
xor
sbb
push
in
add
jg
sti
daa
into
repnz
clc
mov
cltd
fiaddl
scas
icebp
adc
jnp
sbb
dec
mov
stc
pop
sbb
scas
mov
pushf
repnz
cli
int3
mov
xor
popw
jle
rep
cli
jle
dec
arpl
cwtl
lds
ret
add
xchg
jge
lods
daa
out
mov
js
jle
add
xchg
sbb
inc
out
dec
mov
jnp
mov
lods
loope
push
das
pop
mov
sub
cmp
dec
add
sbb
push
cmp
cmp
scas
inc
cltd
add
scas
push
dec
inc
mov
dec
push
test
xor
jle
jo
dec
cmpl
incl
movsb
xor
inc
mov
sub
adc
jecxz
add
jp
int3
push
jecxz
into
mov
xor
ja
pop
or
mov
mov
unpcklps
dec
push
inc
pop
sub
dec
pusha
sbb
lods
stc
cmc
pop
lods
inc
jle
pop
insl
xchg
lahf
jmp
and
dec
movsb
add
and
test
add
outsb
outsb
inc
clc
jno
xchg
or
sub
xlat
imul
mov
mov
push
xor
jno
mov
cli
jns
jae
outsb
jns
mov
cmp
jne
data16
call
xlat
xor
jmp
push
pushf
in
push
sahf
sub
push
jbe
push
pop
dec
repnz
adc
imul
mov
jecxz
sub
lea
inc
outsl
pop
cltd
pop
xor
mov
enter
xchg
into
mov
adc
sbbl
mov
inc
psllw
cli
mov
pop
mov
and
push
xchg
push
fwait
sub
call
loop
mov
inc
movsl
data16
mov
fisttpl
add
push
cmpsl
or
jp
push
lret
sbb
icebp
hlt
addr16
push
lods
inc
mov
scas
and
jmp
mov
sbb
jl
test
je
lods
fisttpll
dec
inc
frstor
jno
xchg
je
test
jbe
dec
insb
lahf
mov
dec
jae,pn
mov
and
in
dec
push
call
int
dec
int3
cmp
in
dec
pusha
jecxz
add
xor
push
sbb
imul
xor
dec
xor
inc
cmp
les
in
jns
ss
cmp
adc
or
fsts
pop
mov
xor
mov
cmc
out
rclb
js
out
add
int3
cmpsb
inc
push
test
push
fs
dec
data16
insl
dec
les
lcall
jmp
imul
inc
stos
into
or
pop
insl
mov
ss
dec
fnstcw
dec
les
and
push
nop
out
jns
movsb
in
jge
push
lock
mov
or
fstps
jnp
lahf
out
insb
sti
sbb
in
pop
jmp
inc
test
fs
dec
fs
mov
lock
pop
push
sub
je
xchg
cs
mov
or
imul
pop
sahf
jge
or
mov
popa
and
mov
mov
es
mov
pop
in
push
aas
sub
jl
or
xor
das
sbb
das
cmp
out
movsb
lcall
push
mov
gs
adc
cmc
cmpsb
add
push
jb
push
pop
inc
pop
shl
scas
pop
push
or
xchg
loop
out
pop
or
cmpsb
je
xor
inc
mov
adc
inc
jle
and
js
or
aaa
mov
xchg
ds
neg
sbb
into
mov
xchg
adc
push
mov
ds
test
xlat
mov
js
push
in
lods
inc
in
inc
in
test
lods
dec
jno
lods
andl
pop
test
inc
mov
lahf
scas
sbb
movsb
outsl
je
push
jno
test
inc
hlt
repz
add
push
loop
sub
ljmp
mov
test
or
push
into
and
dec
inc
dec
cmp
mov
test
in
and
jg
inc
insl
fwait
pop
in
mov
inc
sbb
xchg
movsb
fidivrl
outsl
aaa
sahf
stos
scas
push
notl
jbe
inc
mov
pop
pop
sbb
push
xchg
or
add
mov
dec
jle
es
inc
es
shll
test
negl
notb
push
loopne
sbb
hlt
test
je
add
int3
inc
mov
pop
jl
scas
int3
daa
insl
js
out
insl
cmpsb
and
or
or
out
jbe
sahf
in
std
push
lods
inc
pop
push
jmp
mov
in
jno
or
dec
ret
mov
imul
add
sbb
das
scas
cli
and
dec
bound
and
push
adc
add
add
mov
icebp
inc
ds
jl
push
sub
or
pop
and
mov
jnp
loop
push
subl
mov
jp
std
into
inc
fdivrs
pop
movsl
dec
mov
jne
insl
xor
pusha
push
jbe
test
mov
or
or
push
call
jle
lock
or
add
cmc
inc
dec
loopne
xchg
push
out
sbb
stos
inc
out
lods
xchg
mov
popa
mov
mov
ror
pop
cmpsb
pop
cltd
push
push
loopne
outsb
xlat
jl
lret
ror
pop
push
or
mov
cmp
push
mov
repnz
pop
xor
rorl
xchg
add
push
or
xor
test
sub
and
iret
filds
mov
call
outsl
stos
rcrb
mulps
cld
iret
fildl
shrb
mov
test
sub
push
mov
or
pop
bound
leave
int
das
dec
mov
in
faddl
loope
mulb
mov
je
jno
aam
leave
cld
scas
jno
mov
cmpl
pop
dec
int3
inc
and
inc
push
loope
jnp
cwtl
test
inc
sbb
stc
shrl
dec
jecxz
mov
ja
or
dec
rcrb
sub
jmp
jecxz
ds
imul
outsl
dec
notb
pusha
dec
xor
ja
out
hlt
imul
loopne
xlat
xor
clc
pop
mov
jl
insb
mul
cmc
jge
jbe
add
cld
push
notl
repz
fadds
inc
sbb
or
inc
xor
pop
cmp
jmp
aad
xor
bnd
dec
std
aaa
add
jl
imul
push
mov
jge
inc
push
aas
add
fadds
xor
jno
jnp
int
repnz
push
notb
pop
repnz
sub
inc
add
and
stos
cld
aad
mov
push
fucomi
inc
mov
movsb
je
hlt
adc
push
mov
int3
push
cmp
jbe
scas
cs
mov
mov
stc
inc
xchg
jle
scas
xor
out
lock
das
cld
bound
cmpl
call
cmc
dec
pop
mov
cli
push
lret
sbb
movsb
outsb
loope
pop
mov
cmp
cs
pop
push
or
dec
movsl
sbb
xchg
fdivrs
cwtl
mov
mov
push
test
sub
fs
mov
add
test
lahf
push
fidivrl
push
cmp
popf
dec
ss
jge
sahf
das
or
cmp
jns
stos
push
inc
push
cmp
gs
adc
sti
aam
fadds
stc
mov
stos
mov
add
outsb
mov
pop
lret
adc
les
aas
dec
popf
mov
fbld
scas
push
shll
aam
cmp
call
std
aad
clc
pop
shrl
pop
jns
fisttps
sub
push
xor
inc
adc
jp
mov
bnd
jl
notl
scas
sarb
push
or
dec
mov
leave
ret
stc
xor
int3
insl
or
cmpsb
repnz
stc
lock
cmp
pop
xor
pop
call
notb
xor
je
jno
aam
leave
std
lds
in
pusha
cmp
cmp
pusha
jbe
int
aas
mov
mov
shll
xor
jg
jmp
add
fisttps
dec
mov
mov
cmp
pop
mov
adc
in
pushf
sbb
fidivrs
jge
gs
or
add
xchg
and
sbb
cmp
ja
data16
sub
stos
xor
inc
mov
dec
addr16
and
imull
popf
mov
repz
xor
adc
ds
lods
loopne
adc
ljmp
orl
or
mov
mov
cli
add
xchg
stos
push
inc
cwtl
xchg
scas
cmp
cmp
in
stos
dec
lret
inc
mov
movsl
jmp
cltd
adc
mov
mov
mov
lea
notl
adc
dec
cmpsb
inc
dec
imul
mov
push
sbb
inc
jle
clc
dec
adc
pop
jmp
or
ja
fnstenv
jns
cli
jmp
loopne
stos
mov
orl
fbstp
out
xchg
jae
adc
je
dec
gs
or
out
inc
int
adc
popa
mov
sbb
cs
push
mov
lcall
fsubrs
xchg
cld
lcall
int3
ljmp
xor
jbe
mov
and
sti
push
movsl
pushf
lret
cmp
cmp
push
fmul
out
mov
dec
jae
cs
push
out
scas
cmc
pop
jns
scas
out
out
loopne
pusha
dec
sti
shlb
imul
inc
xor
mov
xchg
mov
subl
and
push
cmpsl
cmp
push
aas
jp
pop
in
dec
jno
jns
bound
das
mov
sub
ffree
sub
or
add
sahf
add
xchg
jnp
or
or
call
dec
into
adc
lods
xchg
or
mov
add
es
jecxz
out
movsb
xchg
dec
jg
in
popa
mov
or
sbb
sub
imul
inc
lahf
and
inc
lcall
enter
loopne
ret
pusha
push
add
sub
jo
adcb
addl
push
dec
fsubs
insl
mov
jno
mov
push
jecxz
cld
xchg
mov
lds
sti
push
push
mov
fcoml
dec
in
cmp
sahf
push
mov
cmp
imul
push
cli
sar
pop
shl
dec
pushf
xchg
in
imul
adc
push
inc
pushf
push
and
mov
push
aaa
push
sbb
cmpl
lods
lcall
mov
into
cmpl
outsb
jp
mov
jbe
adc
in
push
out
pusha
inc
push
jbe
in
ja
movsb
xorb
icebp
mov
xchg
cld
jae
mov
repnz
fs
pop
out
std
jmp
cmpsl
jae
jo
sbb
and
add
ja
fiaddl
testl
fucomp
outsl
sub
outsl
pusha
pop
sti
int
sub
int
sti
scas
popf
cld
data16
or
pop
pusha
inc
std
mov
call
insl
call
hlt
and
mov
mov
and
out
sub
jbe
aas
sbb
int
mov
add
push
out
je
rcr
jbe
mov
jb
gs
dec
mov
push
sub
xchg
xchg
or
out
mov
or
mov
rorb
pop
jg
xor
idivb
xchg
push
lcall
jg
xchg
ja
or
pop
pop
insb
jae
mov
pop
or
aam
pop
mov
mov
or
loope
sbb
jmp
stc
pop
pop
aad
sub
dec
hlt
and
jb
add
sbb
and
or
cltd
jo
ds
mov
and
outsb
cltd
cmpsb
jnp
adc
mov
adc
es
dec
cmpb
mov
dec
je
inc
add
pop
loope
loop
hlt
mov
jge
arpl
mov
js
cwtl
jp
sbb
test
pop
mov
or
adc
or
pushf
cli
jnp
ror
or
sbb
int3
fwait
jae
dec
ss
addr16
repz
dec
and
out
sarl
cmp
pop
fistps
sbb
and
clc
jmp
mov
mov
popa
lock
jmp
mov
std
mov
std
mov
pop
pop
outsl
add
cmc
leave
pop
xchg
lds
es
movl
ret
sub
daa
mov
xchg
mov
test
inc
jae
cmp
lahf
inc
nop
imul
xchg
jg
fcompl
push
push
and
call
jb
dec
scas
dec
stos
dec
enter
adc
push
int3
mov
xor
stc
je
test
dec
jo
inc
add
add
insl
loopne
add
addr16
cld
les
cmp
dec
mov
adc
jb
mov
push
mov
jg
mov
mov
decb
and
mov
jg
mov
sahf
mov
data16
push
xchg
sbb
das
dec
jne
popf
repz
xchg
sbb
mov
push
mov
lea
mov
rorl
mov
push
into
jbe
push
cmp
jle
popf
xor
or
push
outsb
or
dec
or
sahf
mov
into
and
mov
mov
gs
out
insb
mov
sbb
decb
ljmp
int3
out
sub
inc
mov
inc
sbb
xchg
imul
test
les
sub
xchg
pushf
adc
pop
push
pop
iret
aad
cmp
mov
inc
mov
lods
jp
add
outsl
add
jecxz
sahf
sbb
int3
xor
out
shll
mov
inc
maxps
adc
mov
add
fstps
or
and
lods
cmp
notb
mov
dec
enter
iret
int3
popa
jmp
loop
cmp
mov
jl
jo
mov
push
xor
fwait
xchg
test
dec
sti
mov
das
aam
aaa
out
ror
cli
dec
in
sub
fisubrs
lret
dec
fwait
xchg
mov
iret
in
inc
xchg
insb
lcall
mov
fnstenv
ja
mov
pop
fmul
adc
xor
mov
mov
enter
loopne
mov
mov
jle
inc
lods
ret
mov
xchg
xchg
ljmp
sub
jae
mov
push
cmp
xchg
std
xor
loope
pop
inc
lahf
or
mov
rcrl
in
fwait
test
mov
mov
imul
test
add
inc
and
jo
jp
sahf
push
cmp
and
cmp
ja
lock
in
sti
dec
pop
imul
leave
aad
or
inc
xchg
mov
xor
movsl
stos
cwtl
ds
test
push
sbb
jle
mov
scas
push
pop
out
cmp
into
inc
stc
stos
mov
mov
das
mov
adc
inc
popa
or
mov
cmp
mov
xor
stos
adc
jmp
adc
push
in
in
push
call
and
mov
and
lahf
jnp
in
test
inc
arpl
and
mov
rcrb
pushf
xchg
push
xchg
ds
pop
or
das
int3
call
lods
jo
ror
scas
xchg
adc
cmp
cmp
cli
lcall
jge
or
xor
arpl
dec
bound
movl
int
jl
mov
jno
bound
xor
pop
pop
dec
int
popa
fs
cli
mov
jg
std
dec
jg
scas
mov
sub
scas
fcoml
pop
cmp
cwtl
fstpt
rclb
and
je
sub
scas
test
sub
aas
idivb
fnstsw
add
or
push
xchg
push
fcomps
dec
stc
ljmp
xlat
lds
out
or
xor
sub
push
and
loop
and
cmp
push
jge
mov
jbe
or
in
mov
mov
dec
test
ret
mulb
mov
mov
xchg
stos
cmp
stos
and
pushf
mov
les
dec
test
in
das
movsl
aaa
xchg
bswap
fs
outsl
mov
cmpl
lea
jg
pop
cmp
cmp
jnp
pop
push
test
jbe
les
insb
int3
xor
hlt
or
jno
divb
decb
repz
push
mov
add
cmp
fndisi(8087
and
xlat
into
push
pop
inc
and
fiaddl
mov
outsb
dec
mov
add
cmpb
mov
add
not
jle
outsb
add
jecxz
mov
arpl
mov
sub
mov
stc
in
hlt
mov
sti
stos
insl
mov
int3
mov
xor
popa
sub
push
sbb
mov
std
or
std
dec
test
cmp
js
jge
bound
repz
cmc
shlb
or
xchg
sub
cmp
stc
inc
cwtl
adc
mov
dec
add
leave
adc
mulb
xor
jo
ret
mov
inc
push
lahf
fisubl
cmc
inc
in
cmp
mov
dec
mov
enter
ljmp
push
in
les
movsl
imul
stos
adc
daa
pop
xor
xchg
cmpsb
sub
outsb
mov
stos
popf
xor
or
jecxz
imull
xchg
cmpsl
ret
xchg
shl
xchg
mov
jle
mov
or
sti
mov
cmp
jge
rorb
out
lods
sbb
repnz
addr16
sbb
inc
jmp
lods
je
cmp
stc
cmp
xchg
xor
popa
jb
sbb
es
jmp
bound
pop
movsb
or
sahf
pop
aas
or
fsubs
fwait
clc
movsl
test
outsl
adc
outsb
dec
mov
jl
dec
in
mov
pop
aaa
sar
addr16
lea
ljmp
xchg
inc
test
pop
pop
roll
insl
pop
cmpb
mov
xchg
mov
jge
int3
outsb
mov
sub
pushf
and
aaa
and
test
cmp
cmpsb
stc
and
pop
cmp
dec
dec
sub
into
add
adc
jl
jmp
into
push
and
sub
cmp
imul
jmp
xchg
push
xchg
pushf
in
lods
roll
push
rorl
and
repz
add
sub
cmp
fwait
mov
or
test
sahf
int3
mov
xchg
test
sbb
sti
inc
cmp
divl
xchg
int3
ds
bound
xlat
pop
add
or
imul
cmp
loopne
fidivs
imul
mov
adc
add
jp
sbb
or
sub
xchg
mov
or
cli
cmp
scas
fbld
rcr
mov
hlt
mov
dec
sarb
inc
lods
cmp
mov
in
xchg
or
mov
rolb
das
std
xor
clc
cwtl
pop
pop
pop
jo
cwtl
mov
push
gs
inc
pop
mov
lds
and
xor
dec
fistpl
fxam
pop
je
aad
pushf
mov
loopne
add
sbb
sub
rcrb
cmp
shll
in
into
cli
pop
push
or
outsb
mov
mov
push
jl
js
jnp
pop
jnp
cmp
sub
insb
pop
stos
push
rclb
sub
popf
jae
xor
cmp
and
das
pop
insb
fldcw
dec
shlb
movsl
mov
rorb
add
sarb
insl
pop
jl
or
and
jno
shlb
cmp
sub
push
je
pop
div
pop
cmp
scas
jnp
xor
call
js
pop
or
or
pop
mov
push
das
inc
test
mov
jno
push
cmp
cmp
aam
addr16
repz
jmp
dec
outsb
movsl
jecxz
out
loopne
out
shll
or
imul
xlat
scas
int3
mov
gs
inc
pop
icebp
mov
cmpsl
ret
cmp
xor
je
aaa
popf
ja
pop
es
mov
ja
pop
fwait
pop
inc
nop
sbb
or
pop
js
sub
cmp
inc
fsts
enter
popf
mov
add
xchg
inc
xchg
fidivs
add
cmp
out
add
out
jo
inc
add
adcb
loopne
add
adc
push
jo
nop
mov
jo
cld
pop
mov
pushf
rolb
loop
jmp
jg
xchg
repz
and
stos
or
pop
xlat
fadds
or
rorl
cs
push
enter
xchg
fsubrl
ficomps
xchg
fldt
mov
pusha
cld
dec
sbb
rorb
subl
cli
pop
int
mov
ljmp
mov
jo
xchg
push
xor
add
inc
xchg
mov
aas
cwtl
inc
pop
aas
out
add
rorl
fadds
aad
push
add
cmp
add
jo
clc
xchg
dec
jb
repz
sub
fs
add
cmp
sbb
repnz
push
fwait
mov
push
cs
bound
shrb
xor
test
xchg
pop
push
adc
adc
mov
cltd
adc
or
pop
adc
les
xchg
cwtl
subb
mov
ficoml
cltd
lahf
mov
push
es
jmp
bound
les
adc
mov
std
mov
movsb
push
inc
mov
sub
pop
fldt
push
push
push
xchg
popa
popa
inc
in
je
pop
in
insb
xchg
xor
lods
mov
jo
xor
add
stos
shr
jnp
mov
inc
bswap
rorl
push
dec
push
test
dec
mov
cmp
push
loop
lahf
in
ficomps
xchg
out
add
jle
and
pop
fs
mov
cmpsb
push
mov
xlat
pop
push
fwait
addr16
int3
sub
pop
jecxz
and
fildll
pop
aam
push
fst
and
xchg
das
xchg
adc
add
outsb
out
dec
dec
inc
cmp
push
in
lret
push
fdivl
movsl
stos
popa
cwtl
in
leave
mov
shl
mov
js
movb
mov
jg
lods
cmp
pusha
in
call
cld
pop
dec
subb
clc
cs
addr16
popa
shrl
inc
mov
fxch
fistl
xor
inc
inc
shlb
fcoml
jns
sub
push
lret
and
pop
mov
inc
outsl
push
jg
imulb
jns
and
cmp
xor
mov
stc
and
push
xchg
lods
mov
jno
aam
mov
aam
divl
push
cmp
mov
jp
cmpb
inc
out
fisttps
scas
xor
jbe
xchg
les
jnp
sub
in
shlb
xor
adc
lahf
push
js
clc
jno
nop
scas
dec
xor
adc
loope
imul
mov
cmp
adc
pusha
xchg
xchg
hlt
shl
lds
and
jl
sbb
rcl
mov
ja
pop
out
movsb
test
std
scas
ret
shl
xchg
mov
jnp
movsb
xorl
aam
jge
xchg
or
xlat
mov
and
insb
call
iret
cmp
leave
mov
aad
xchg
cli
int
subl
and
or
xor
mov
jge
xchg
xchg
and
sub
mov
je
xor
into
shll
jg
xchg
mov
dec
or
test
add
int
ljmp
adc
insl
push
das
test
xor
and
inc
xchg
dec
inc
stos
inc
jmp
cmp
push
xchg
push
cmc
les
scas
cwtl
cmp
cld
fbstp
or
push
pop
jnp
xor
seto
or
loopne
pop
dec
scas
mov
xor
xchg
and
mov
mov
mov
mov
in
fnstcw
mov
xchg
xchg
fs
aas
xlat
mov
xor
push
dec
pop
adc
xor
test
data16
cli
rcl
sub
inc
xor
jbe
imul
in
inc
push
xor
pop
cmp
push
pop
scas
fisttpl
jge
inc
cs
and
inc
push
sub
mov
les
das
or
insl
negl
jmp
or
jge
mov
aad
sub
pop
adc
into
les
jb
mov
dec
inc
xor
add
push
mov
test
clc
jg
jne
jbe
int
lods
or
js
jo
or
push
lahf
in
imul
repz
push
inc
movsb
stos
call
xchg
cmp
pop
cmp
push
std
lea
jno
dec
or
insb
add
xor
pop
lret
je
jne
dec
cli
xor
inc
into
xchg
mov
pop
decl
rorb
negb
fs
cmpsl
jg
jo
call
push
sub
pop
outsb
add
xchg
mov
gs
sbb
inc
cmp
inc
cld
xor
add
mov
ficoms
ja
ss
jl
bound
dec
stos
dec
lahf
push
idivb
lds
jecxz
lods
push
call
stc
push
out
sub
cmp
or
ss
movsl
jmp
inc
add
push
test
push
lods
dec
test
mov
push
cs
lods
mov
idivl
das
scas
int
pop
cmpsl
movsl
mov
pop
cmp
out
pop
popa
jmp
add
test
sbb
cmp
pop
aam
pop
dec
xor
repnz
ja
pop
testl
adc
test
ret
ds
cmc
lock
dec
jbe
pop
mull
repnz
mov
pop
push
sbb
dec
adc
inc
add
icebp
pop
nop
or
int3
cmp
out
int3
mov
xchg
xor
gs
icebp
lret
fwait
loop
int
int3
sub
int3
cmp
push
ds
bnd
int3
sbb
jnp
jnp
dec
gs
stos
pop
enter
jge
fwait
jae
inc
std
int3
cmpsl
insb
jmp
mov
mov
cltd
add
hlt
popf
aam
out
fcmove
fdivr
call
lock
mov
mov
pop
arpl
dec
std
test
mov
fwait
dec
loop
lods
mov
fdivp
cmc
dec
mov
fisttpll
cmp
std
leave
mov
mov
cld
xchg
push
gs
jg
and
ja
add
mov
pop
test
sahf
int3
ret
popa
shlb
cli
aam
pop
call
and
adc
into
idiv
aad
mull
push
test
sbb
int
mov
les
mov
fwait
cwtl
test
push
into
jo
inc
std
mov
mov
int3
lock
lcall
pop
lock
adc
loopne
in
cmp
mov
dec
fistl
popa
dec
adc
test
add
movsb
daa
push
push
sub
test
pushf
fs
repnz
lcall
loopne
or
jns
loopne
test
and
testb
push
inc
inc
cmp
jmp
mull
add
ja
xchg
movsl
aaa
enter
jbe
sub
jo
push
pop
dec
out
pop
mov
sub
sti
movsl
jecxz
call
or
and
popaw
daa
stos
lahf
hlt
out
push
in
int
insb
sub
shl
push
mov
insl
jns
xchg
aad
jno
jecxz
push
xor
jg,pn
mov
xchg
mov
mov
inc
adc
dec
sbb
sbb
in
icebp
push
jge
fwait
es
ror
subl
xchg
add
jmp
inc
rorl
xchg
call
push
lahf
mov
cld
rcl
sti
in
add
jno
out
fidivrs
xchg
outsl
gs
stos
addr16
jge
fwait
push
test
mov
ljmp
scas
aam
push
push
sbb
dec
mov
or
push
sbb
sbb
jne
outsl
in
xchg
mov
repnz
mov
or
mov
xor
sub
mov
mov
xor
or
fidivrs
lahf
pop
mulb
add
repnz
cwtl
cmp
out
shrb
clc
daa
cltd
sbb
aaa
xor
rorb
scas
adc
xor
add
sar
dec
jecxz
pop
cmpsl
pop
jbe
cli
inc
xchg
fisubs
mov
cmpsb
cmp
jl
lahf
or
popa
xlat
jmp
arpl
jae
subl
std
cmpsl
movsl
rcl
jnp
imul
pop
dec
pop
inc
adc
pop
int3
mov
dec
push
inc
xlat
cmpb
loopne
lds
adc
jno
nop
add
loope
xchg
insb
clc
sub
scas
lret
pop
loopne
ljmp
outsb
test
and
push
push
pop
js
sub
jge
jno
xor
xor
in
subb
push
dec
lea
jbe
ret
ficoms
imul
scas
ja
pop
push
dec
jecxz
sbb
push
shlb
sbb
pushf
add
xchg
add
repz
inc
mov
adc
xchg
outsb
test
fbld
dec
push
jne
mov
mov
jp
mov
ds
inc
int3
outsb
test
fdivr
cmpl
pop
jno
test
mov
pop
int
test
dec
ds
push
fs
in
adc
sub
test
fisubrs
in
rolb
jmp
popa
neg
xor
repnz
decl
cmp
mov
sub
mov
cmp
jmp
xorb
inc
stc
xlat
mov
jno
aad
xchg
mov
inc
mov
mov
lods
and
dec
jbe
jg
pop
sarb
inc
imul
jecxz
imul
push
ret
jg
cmp
sti
lods
insb
subb
xor
int
fdivl
sbb
sub
cwtl
ds
or
jb
sub
inc
adc
adc
push
or
sub
mov
int
sub
mov
pop
jp
loope
movsb
imul
inc
xchg
bound
mov
imul
fldl
xchg
pop
mov
adc
loope
lods
das
xchg
sbb
dec
or
and
adc
sub
loope
test
xor
imull
iret
sub
dec
out
jl
cltd
lret
push
mov
dec
jbe
or
push
sub
xchg
sbbl
or
lahf
shll
pusha
push
jge
pop
cltd
mov
cmp
push
xchg
xor
fcmovnb
jae
adc
lock
push
in
cmp
into
dec
xchg
pusha
cs
and
dec
rcrl
addb
mov
push
shlb
sbb
imul
xchg
das
stc
cmp
sub
or
bound
loope
cwtl
jp
insb
pop
jne
and
mov
out
shll
and
mov
or
jno
xor
sbb
and
jle
daa
inc
xlat
mov
push
es
mov
out
les
push
in
inc
sbb
pushf
js
mov
aad
or
jmp
in
jge
test
xor
cmp
inc
and
fwait
lea
mov
mov
xchg
mulb
mov
cli
xchg
xor
in
cld
in
rorl
cmp
in
loope
mov
sti
adc
push
sub
hlt
dec
mov
sbb
and
add
xchg
in
movsb
insl
xchg
mov
mov
ret
std
fwait
push
adc
sub
push
inc
gs
shll
push
insb
cs
push
test
mov
pop
addr16
mov
xor
fidivrs
jo
jmp
push
dec
and
mov
addl
push
sbb
xchg
mov
std
jl
scas
popf
inc
gs
sub
and
push
mov
and
loopne
cwtl
mov
pop
mov
das
adc
repnz
stos
dec
in
arpl
dec
xorl
or
push
sbb
mov
sbb
cmp
mov
jp
dec
mov
cmp
push
cltd
and
cltd
or
adc
popf
movsl
xlat
push
push
xchg
hlt
out
push
ret
repz
out
cwtl
in
lret
mov
subl
lcall
std
jne
dec
call
dec
xor
and
push
mov
push
hlt
cmc
mov
push
cltd
mov
adc
scas
testl
sbb
sub
mov
and
mov
out
mov
adc
push
mov
in
add
xor
push
cltd
or
and
mov
cmp
mov
lcall
cwtl
jecxz
bound
xchg
fdivrs
in
aas
pop
in
sub
movsb
cmp
lds
adc
clc
mov
and
into
sub
popf
sub
push
nop
jp
rclb
push
jge
addr16
xchg
in
jne
gs
popf
lods
add
idivb
sti
in
dec
mov
movsb
jl
inc
sbb
cmp
std
fsubr
jb
fcomp
mov
dec
icebp
repnz
std
mov
cmp
lea
stos
cmp
sti
sub
loope
sbb
test
xor
mov
and
pop
pop
xchg
inc
mov
lahf
sub
xor
inc
pop
xchg
jp
ret
out
xchg
mov
dec
cli
dec
mov
xchg
push
jo
stos
sahf
ljmp
outsl
mov
repz
push
fimull
mov
xchg
sub
sbb
pop
jg
fadd
mov
jbe
lods
test
rorb
movsb
mov
clc
call
mov
xchg
xchg
idivb
xchg
or
test
loopne
test
and
inc
movsl
shl
frstor
cs
jns
fld
add
dec
sbb
mov
lods
mov
jno
xchg
icebp
xor
mov
aaa
test
fnstenv
lods
lcall
js
mov
push
inc
fstps
jo
ljmp
add
push
inc
popa
push
jns
cmp
pop
rcll
dec
jns
pushf
cmpsl
cmpsl
push
add
xor
or
sbb
lret
dec
dec
cmp
add
leave
call
jle
cs
inc
push
sub
xchg
xor
shll
sbb
filds
or
movsb
repz
pop
test
cmc
push
push
mov
and
leave
jbe
mov
push
dec
repz
or
cwtl
test
nop
or
loopne
scas
js
sbb
mov
mov
jb
loopne
cmp
test
xchg
add
lods
cmp
mov
mov
cs
mov
cmpxchg
lea
xor
out
add
dec
cltd
sbb
ret
dec
das
sub
mov
les
int
fcompl
imul
inc
xchg
sub
add
add
popf
xchg
pop
stos
dec
std
push
dec
sarb
shrl
call
test
pusha
jne
lods
xor
mov
jecxz
ja
inc
clc
aad
dec
dec
jne
in
jns
lods
mov
cltd
outsb
fwait
loop
lods
mov
xchg
and
jmp
mov
popa
xor
mov
sub
sbb
xor
in
sti
adc
xchg
adc
scas
cmp
daa
sarb
and
xor
sbb
int
jmp
push
fwait
push
aaa
repnz
xor
sub
mov
jb
sub
jg
xchg
mov
mov
inc
clc
xchg
push
push
push
mov
sbb
fistps
in
push
jg
sub
adc
xor
sti
dec
sbb
jl
test
fnstsw
lds
bound
lea
pop
flds
sub
pop
fsubs
popa
mov
sub
jl
xchg
std
xchg
in
fdivl
movsb
mov
je
jle
or
xor
jno
pop
in
jmp
lea
lods
es
stos
cmpb
cmpsl
push
push
mul
pop
in
dec
dec
and
nop
adc
or
sahf
subb
xor
push
add
jno
push
call
andl
ja
add
nop
cmp
orl
dec
xor
ljmp
imul
jp
inc
clc
cli
mov
inc
js
sbb
xor
fnsetpm(287
ljmp
jno
aas
stos
sbb
stc
sbb
popa
xor
rolb
pushf
push
mov
or
jbe
inc
popa
jbe
rcr
out
mov
dec
cli
cmp
imul
sti
inc
push
xchg
scas
sbb
mov
xchg
les
movsb
decb
insl
sub
mov
mov
andb
js
imul
outsl
fnstsw
sub
divl
pusha
out
push
mov
jbe
je
out
in
push
mov
lea
xor
das
dec
and
cmpl
test
pop
jmp
jge
addl
xor
out
popa
mov
xchg
xlat
gs
sub
outsb
cmp
mov
les
imul
cmpsb
lods
lods
inc
cmp
or
xor
xchg
aam
std
jns
cmp
mov
or
push
mov
out
push
insl
lods
add
lods
int3
jnp
mov
adc
out
rcr
xor
mov
adc
mov
push
push
push
das
inc
ret
out
mov
rcrb
in
movsl
dec
sar
clc
insb
lret
cmpsb
lahf
xor
loopne
xlat
adc
imul
lret
mov
movsl
dec
lods
mov
hlt
dec
lods
int3
fnstenv
sub
or
mov
xor
xchg
movsb
xchg
cmc
pop
leave
pop
push
push
outsb
mov
dec
add
push
fstl
sbb
inc
lds
dec
test
jl
std
bound
push
sbb
sub
and
leave
mov
das
jmp
ficomps
mov
jge
loope
cwtl
fs
xchg
jne
push
cmp
cmp
in
je
inc
jo
and
ret
push
cmp
dec
xchg
jmpw
insl
cmp
mov
cmp
and
adc
or
and
adc
fistpll
mov
inc
dec
lods
add
insl
xchg
and
scas
sar
les
sbb
jno
xor
pushf
loop
pop
mov
lcall
cltd
mov
test
mov
outsb
mov
mov
add
rclb
mov
mov
xor
movsb
movsb
jg
jge
sub
mov
cmp
sub
sub
or
push
pop
push
fsubl
xchg
mov
lcall
sbb
sbb
ss
call
out
mov
in
test
push
aam
loopne
popf
or
repnz
ja
and
scas
sub
xchg
popa
push
scas
test
les
repz
jle
jmp
jg
push
xchg
inc
in
adc
lods
xor
pop
mov
sub
adc
mov
cmp
push
cmp
adc
cwtl
out
ror
bound
int3
cmp
movsl
add
loop
jne
dec
add
jb
movsb
test
push
cmp
jb
or
pop
jecxz
pop
or
ja
push
mov
rolb
sub
push
xchg
xchg
xchg
scas
mov
gs
adc
sub
cmc
xchg
inc
adc
xchg
or
int
jg
cmpsb
inc
lods
jno
insl
js
jl
fadd
push
rolb
push
cmpsb
mov
icebp
mov
shlb
and
and
sub
fs
aas
clc
aam
jg
dec
dec
js
cmp
test
push
test
xchg
xor
mov
jnp
out
mov
cmp
push
test
mov
repnz
out
in
xchg
xchg
pop
int3
xchg
push
cs
sbb
and
dec
mov
dec
xchg
movsb
out
popf
shlb
adc
pop
cmp
jle
xor
cmpsl
sbb
scas
stos
pop
sub
pusha
pop
jno
mov
scas
push
test
in
sbb
mov
and
mov
or
dec
lods
pop
fsts
xor
ss
inc
inc
push
ja
xor
pop
popa
inc
nop
sub
sar
fidivl
xor
jo
mov
xchg
popf
repz
xchg
cmpsl
out
push
pusha
push
subl
jle
mov
movsb
jne
adc
lods
jmp
mov
mov
mov
sbbb
mov
mov
push
lods
stc
push
mov
mov
repnz
test
jge
push
jmp
sar
pop
xchg
rorb
push
dec
inc
sbb
add
enter
hlt
pop
in
mov
adc
xchg
idivb
push
xor
in
push
enter
out
adc
or
rcrb
les
sti
les
aad
sahf
sbb
sub
mov
outsb
and
jo
pop
in
js
shl
and
push
and
sbb
stos
jne
movsl
aad
dec
sub
loop
jg
mov
jbe
lods
pop
add
mov
cs
shrl
mov
cmp
mul
jmp
push
push
stos
pushf
dec
xchg
stc
add
fdivl
pop
jge
mov
inc
dec
jno
xchg
add
stos
and
ja
cmpsb
sbb
test
ljmp
rcrl
xchg
scas
loop
mov
mov
sbb
and
popf
sub
pop
adc
and
hlt
mov
bnd
adc
in
mov
add
mov
mov
incb
mov
mov
les
jg
xor
cmp
sub
jns
adc
pusha
or
das
jnp
std
out
push
lods
imul
add
cmp
jg
leave
imul
mov
or
xor
pop
jle
lods
insb
jge
aam
add
mov
cmp
sbb
xchg
in
adc
mov
lods
sti
sub
neg
push
pop
xchg
sbb
js
or
xchg
jle
movsb
push
fidivrs
jae
mov
inc
sar
push
sbb
fadds
push
push
arpl
aas
push
outsl
aad
mov
cmp
mov
pop
pushf
cli
pop
cmp
loopne
jmp
and
popf
icebp
cmp
jno
insl
push
cmp
jge
ret
jb
push
loopne
jge
add
fmulp
or
enter
cmp
shrb
xchg
fstp
in
mov
cmp
inc
push
xchg
std
or
arpl
psubd
in
push
lret
mov
sub
jb
jg
mov
pop
loope
hlt
jg
add
test
test
sbb
lahf
cs
sbb
dec
mov
add
scas
stc
and
sub
out
fldcw
pop
loope
mov
stos
lods
push
mov
adc
cltd
xor
add
sbb
and
pop
outsb
int
or
inc
int3
inc
and
divb
cmp
stos
outsb
rorl
out
scas
adc
jne
fs
mov
pop
and
sbb
sub
dec
popa
lea
aad
jl
pop
xchg
lret
jno
cmc
out
mov
sbb
insb
pusha
stos
fists
push
mov
mov
mov
je
push
fsubrl
popf
int3
inc
testl
insb
push
in
cmp
test
fdivs
jle
fsubr
adc
repz
inc
stos
rolb
into
sub
cmp
shlb
imul
fdivrs
sbb
push
rolb
cmp
repnz
and
aaa
loope
push
add
pop
sbbl
cli
xchg
fbstp
lods
ds
imul
lahf
or
or
xchg
mov
test
mov
jbe
outsl
movl
jnp
test
aas
pop
fcmovne
mov
test
pop
ror
scas
xor
cmp
sbb
push
jp
rcl
rolb
test
inc
pop
out
jns
addb
outsl
cltd
pop
dec
test
xor
and
cs
in
pop
mov
push
dec
std
add
ja
jno
push
pop
inc
cmp
js
ja
mov
jo
insl
adc
ja
cmp
mov
add
sbb
sbb
int
mov
dec
roll
insb
into
and
push
adc
jno
loope
in
rolb
loopne
addb
ja
inc
mov
je
test
xorb
cmpsb
lods
cld
test
cmpsl
cmp
fisubrl
std
repz
mov
push
jl
cli
inc
xchg
adc
mov
cs
cmc
cmp
xchg
sbb
call
popf
sub
xlat
negl
dec
loope
lahf
push
xor
aam
idivb
hlt
dec
movsl
imul
mov
insl
mov
fwait
or
hlt
sahf
lods
jae
cmp
pop
cli
jne
dec
stc
dec
adc
and
mov
push
and
inc
and
jbe
cld
mov
mov
sbb
jmp
ja
cli
test
insl
xchg
push
push
in
ljmp
into
mov
and
or
sub
loopne
xor
ret
jno
mov
fistpl
xor
rorl
cli
popf
int
sub
fs
fstl
fs
xor
xor
jb
ret
stos
ljmp
cmc
out
fldenv
jno
ss
sbb
sahf
fs
mov
jne
add
dec
mov
and
sub
and
loopne
into
ret
xor
dec
outsb
dec
inc
lcall
mov
or
or
rcrl
ficompl
or
pop
xchg
bound
out
cli
stc
cmp
test
add
sbb
jp
je
or
jecxz
jno
aam
dec
gs
and
pop
push
cmpsb
push
mov
cltd
xor
or
test
shrb
adc
popa
mov
add
jbe
pop
jb
sub
shll
sti
inc
cmp
lea
dec
bound
inc
ljmp
aam
jge
imul
jnp
scas
add
loope
cmp
cld
or
faddl
push
sub
mov
pop
xor
rclb
push
jge
pusha
aad
add
inc
loope
push
mov
shl
aad
in
rorl
xor
ds
and
mov
dec
inc
inc
pop
mov
je
or
jmp
xor
push
dec
scas
push
push
push
mov
xchg
sbb
jbe
cwtl
mov
push
into
outsl
in
jno
ja
xchg
jnp
cmc
push
scas
dec
iret
cwtl
cmp
loopne
aaa
dec
add
sbb
mov
and
test
adc
push
xor
adc
dec
push
pop
pop
movsl
jae
fucom
mov
lods
cwtl
and
rcll
repnz
out
test
mov
popf
sbb
mov
sbbb
popf
sbb
clc
inc
int3
inc
leave
into
iret
ret
and
adc
jge
int
stos
cld
fstpt
ljmp
mov
jmp
or
test
mov
in
jno
movsl
push
dec
xor
std
mov
dec
stc
mov
das
mov
fldenv
in
movsb
mov
push
ljmp
out
sbb
cli
es
faddp
and
movsl
into
pop
sub
test
repnz
add
rcrb
add
jae
mov
test
aam
sub
sbb
push
rol
mov
jne
dec
mov
dec
and
jge
mov
aam
rorb
dec
pusha
cmp
pop
and
enter
mov
rolb
shrl
mov
pop
arpl
push
clc
xor
filds
adc
addb
add
iret
push
imul
and
mov
fstps
push
cld
mov
mov
dec
iret
sub
fsts
lahf
lret
enter
and
loopne
pop
mov
std
jb
dec
imul
int3
pop
leave
jno
adc
xchg
push
cli
cmp
or
mov
and
jmp
dec
imul
push
test
pop
mov
push
rclb
call
fsubs
in
push
sub
jg
iret
loope
stos
mov
rcll
sbb
mov
mov
gs
inc
add
jg
adc
out
sub
or
inc
lea
hlt
sub
xor
lods
jg
fwait
inc
call
pop
shll
fsubs
mov
sub
push
cwtl
aas
dec
pop
in
sub
jg
and
push
cli
pusha
orl
push
mov
inc
loope
arpl
push
pushf
jns
sub
push
aaa
pop
adc
call
ficoml
mov
push
add
adc
add
mov
aam
subl
cmp
inc
lea
sub
rorb
in
stos
insb
aad
mov
mov
insl
or
fs
cltd
and
or
sub
sbb
xor
sahf
jns
add
fs
add
loop
js
jp
test
sub
pop
or
xchg
shll
inc
rcrb
pop
lock
cwtl
mov
jno
dec
loop
les
sub
xorl
cmpsb
adc
imul
aam
cltd
xchg
dec
leave
cmp
mov
adc
shrb
fadds
test
add
loop
fndisi(8087
mov
ss
pop
gs
lock
sub
shrl
inc
push
jo
adc
shll
mov
xor
mov
scas
sbb
jl
jmp
dec
mov
dec
push
aaa
inc
loop
push
mov
aas
insl
push
and
sbb
xor
ss
ljmp
fcompl
cmpsb
rcl
pop
lret
jbe
or
in
lcall
insb
sub
sbb
cltd
adc
sub
pop
pop
out
push
push
adc
jo
and
push
std
dec
aad
aad
js
lea
cmpsb
mov
insb
iret
cs
aam
not
mov
xlat
lea
repz
fsubrs
cli
mov
sub
cmp
dec
mov
outsb
add
mov
dec
mov
fdivrl
lahf
sarb
int
push
push
mov
cmp
mov
mov
cmp
mov
jno
mov
inc
pop
push
inc
dec
push
pop
hlt
xchg
pop
sub
ss
sbb
mov
add
nop
cmp
cltd
and
mov
pushf
lods
ja
sti
lods
std
mov
mov
ss
push
push
into
add
ds
ss
xchg
popa
push
push
xchg
add
and
data16
ss
rcrl
pop
pop
jnp
dec
jle
add
sbb
outsl
mov
aaa
jbe
cmpl
aaa
push
add
jmp
xchg
jbe
insl
push
mov
cmpsb
das
jne
jbe,pn
adc
xchg
xor
adc
sahf
call
test
ret
inc
adc
jo
push
test
sub
mov
cltd
dec
dec
sahf
sbb
icebp
and
pop
mov
cmpsl
jge
and
push
fwait
jge
adc
std
dec
ds
in
out
sbb
xchg
jb
scas
out
and
xor
cmp
push
nop
popf
test
shl
cmp
xchg
push
iret
mov
mov
subb
pushf
or
jmp
or
imul
cmp
movsb
dec
loopne
and
adc
jge
scas
cli
fstps
xor
addl
fldl
add
insb
mov
adc
add
jl
push
ss
outsb
jmp
nop
pop
loopne
addr16
ljmp
dec
loop
stc
push
in
std
dec
in
in
adc
push
lds
add
nop
pop
cmp
sbb
dec
cmp
inc
xchg
inc
mov
cmp
cld
int3
push
cmc
fdivs
mov
adc
and
in
sbbl
sbb
andl
mov
mov
xchg
xchg
sbb
lods
js
je
ds
jno
cmp
clc
ret
sub
dec
fidivs
dec
std
sub
add
mov
dec
outsl
stc
pop
movsl
or
sbb
sub
push
in
mov
hlt
pop
inc
jge
aas
adc
jnp
mov
pushf
pop
dec
movsb
cwtl
sub
mov
and
mov
cmp
adc
cmp
js
syscall
fwait
in
mov
cbtw
dec
movsb
inc
dec
fidivl
or
xchg
inc
filds
jp
test
idiv
fists
xor
xor
ljmp
lods
and
out
lds
mov
pop
movsb
add
inc
mov
xchg
test
pop
les
add
fsubl
mov
in
mov
cmpsb
mov
xorl
nop
fs
repz
insb
mov
dec
mov
outsl
pop
popa
xchg
clc
maxps
int
lahf
fs
lods
inc
jecxz
and
mov
mov
std
aas
into
sti
push
clc
push
mov
shrb
fiadds
ficompl
sbb
and
mov
mov
test
in
dec
mov
icebp
jecxz
mov
outsb
push
int3
adc
leave
mov
les
popf
scas
out
mov
ret
es
js
sub
mov
or
fs
pop
hlt
imul
mov
xor
mov
pop
insl
xlat
mov
push
push
test
cld
sbb
cmp
movsb
dec
mov
fnstsw
movsb
mov
xchg
sub
out
dec
fisubrl
dec
push
xlat
pusha
push
adc
lret
push
movb
adcb
mov
push
loopne
mov
lret
mov
jecxz
jecxz
mov
loope
faddl
or
test
mov
lret
jmp
sub
incl
aas
mov
cmpsb
cmp
std
lods
test
jmp
and
xchg
mov
orl
jno
scas
inc
das
out
sub
sbb
pop
mov
or
xor
jmp
mov
inc
xorb
xor
ja
xor
clc
xor
add
or
sub
test
hlt
fwait
sarb
shll
sbb
mov
xorl
lea
xchg
jmp
cwtl
push
sub
cmp
jg
jg
std
pop
inc
repnz
adc
dec
divb
fistps
push
lea
push
mov
cmp
fimuls
or
pusha
jne
add
std
jne
stos
cmpsb
add
sahf
in
xchg
xchg
or
pop
adc
dec
mov
sbb
stc
shll
inc
test
mov
mov
adcl
adc
cltd
dec
mov
aam
pop
test
js
jbe
repnz
scas
sub
hlt
psubsw
jne
sbb
inc
repz
pop
or
mov
jge
jnp
insl
imul
xchg
aam
outsl
in
mov
inc
or
fidivrs
xor
push
cs
ss
call
into
or
mov
adc
pop
es
rcrl
add
in
add
popf
rol
mov
adc
jb
subb
arpl
sti
insb
scas
cmp
lods
pop
test
in
pop
mov
ljmp
test
jg
push
cwtl
pop
test
ljmp
push
xor
out
pushf
les
lret
lods
lods
gs
xor
testl
fadds
xchg
scas
inc
add
adc
notb
push
inc
inc
je
push
jmp
outsb
push
in
in
dec
jp
mov
loop
das
ret
push
shrl
sti
jmp
ret
in
aaa
add
xor
mov
sub
sub
setp
aas
lcall
ret
dec
js
add
int3
into
imul
xchg
add
mov
les
adc
cmp
insl
push
data16
sbbb
bound
and
sbb
in
popa
insb
jno
mov
fucomi
inc
add
dec
sbb
mov
push
adc
and
addr16
ss
dec
dec
cmp
insb
lahf
push
add
sbb
push
imul
mov
scas
aas
movsb
test
clc
dec
cmp
xchg
cmp
test
pop
push
shl
jne
nop
daa
or
mov
lods
pushf
lds
mov
popf
jl
cli
xor
xor
push
or
adc
mov
jl
loop
leave
aam
sbb
lock
sub
jb
adc
xor
and
inc
push
mov
pop
xchg
push
cltd
dec
sbb
loope
mov
jg
inc
jl
push
rcrl
jo
dec
popf
cltd
jg
jne
mov
popa
cltd
inc
stos
testl
ja
push
sbb
sub
mov
add
mov
test
push
sbb
or
js
cmp
gs
lds
ja
xchg
stos
andb
icebp
xchg
cmp
pop
lods
mov
les
arpl
xchg
mov
mov
mov
mov
xor
pop
add
cwtl
arpl
shlb
mov
in
lea
loopne
inc
inc
cltd
cs
lret
enter
mov
pop
leave
fmuls
shrb
movsb
push
clc
gs
pop
sub
roll
test
push
xor
xor
call
rcrl
sbb
cmp
add
jne
andb
into
ficompl
stc
dec
adc
scas
fs
push
cld
in
cs
sbb
bound
jmp
mov
lcall
or
xor
adc
lea
mov
popf
jecxz
ljmp
mov
xor
pop
aam
leave
dec
pop
subl
jmp
fisttpll
repz
in
dec
jo
adc
xchg
inc
pushf
inc
in
nop
insb
push
mov
xor
insb
xor
sub
xchg
pop
mov
jecxz
std
cmp
outsl
mov
stos
into
jae
mov
jge
push
add
jle
push
int3
out
xor
movsl
push
insb
lods
add
push
add
push
clc
call
fimull
outsb
cwtl
cmc
dec
push
divb
mov
fsubr
mov
or
gs
mov
insb
mov
lds
insb
in
pop
push
test
xchg
out
addl
sahf
dec
into
subl
in
pushl
fs
ret
pop
or
cltd
outsb
push
fbstp
cs
dec
mov
pop
push
xchg
int
push
mov
push
add
movsl
xlat
pop
sbb
ror
test
fnstenv
jnp
add
push
sbb
adc
jl
insb
es
cmpsl
es
lret
imul
jmp
mov
xor
fadd
or
int
pop
or
rcrl
std
shl
jp
lahf
sar
sti
push
xchg
lea
jb
mov
repnz
and
ss
push
rcr
push
dec
arpl
imul
and
les
jnp
or
cs
in
jno
in
adc
jge
pop
pop
loopne
adc
mov
dec
mov
dec
jle
and
mov
push
fwait
lds
repz
sub
lods
rolb
aad
dec
int3
ljmp
hlt
xchg
cmp
xor
stos
js
xor
xchg
mov
sti
pop
fistpl
inc
xor
dec
test
cmpsb
mov
add
adc
pop
pop
or
xlat
mov
lret
pop
je
loopne
sti
aad
mull
sub
fwait
dec
clc
dec
jno
loopne
mov
inc
pop
or
xchg
rcl
add
inc
je
xchg
je
mov
stc
out
sub
add
lods
xchg
repz
testb
cmp
xchg
mov
ja
ffree
mov
aam
aad
xchg
mov
lret
xlat
mov
and
ror
outsw
aas
cmp
push
sbb
pop
call
lods
xchg
jb
adc
ret
lret
sub
jle
adc
jno
xor
sbb
cmp
dec
push
test
lds
add
xchg
cmp
mov
pop
faddp
in
dec
loopne
xor
dec
mov
xchg
jae
push
call
or
jecxz
into
adc
xchg
inc
cmpsl
push
test
movsb
divl
insl
ljmp
push
js
xor
outsb
add
xchg
inc
gs
loopne
stos
arpl
test
jbe
push
pop
call
lods
jg
ds
xor
out
sub
or
es
loopne
notl
imul
jne
cwtl
and
and
adc
push
xor
lret
cltd
push
add
push
movsb
add
in
test
push
sbb
mov
cmp
adc
push
xchg
rcll
or
mov
xchg
mov
sbb
push
dec
inc
mov
adc
bound
clc
and
mov
aas
negl
je
pop
insb
pop
add
xchg
insb
jp
push
xor
into
add
das
mov
in
cmp
movsb
inc
sub
xchg
jg
push
test
xlat
mov
shrb
push
mov
shrl
or
sub
rcrb
adc
mov
in
pop
push
outsb
scas
or
movsl
stos
cmp
sbb
mov
insb
sub
mov
xor
aad
bound
or
push
jae
test
ljmp
mov
jge
fisttpl
pop
scas
cmpsb
mov
imul
xor
push
xchg
js
roll
push
mov
ret
fisubrl
scas
or
lods
sbb
fs
addr16
imul
jge
scas
push
add
mov
mov
call
sbbl
cmp
jp
cld
mov
ret
mov
sti
xor
test
lods
mov
push
loope
test
sti
push
mov
stos
fwait
push
mov
xor
enter
or
test
dec
mov
jle
cmp
xchg
nop
nop
mov
or
fistpl
arpl
push
dec
push
and
dec
push
out
push
test
mov
mov
fiadds
mov
jge
test
add
xor
icebp
xchg
add
inc
xchg
mov
sub
mov
outsl
lret
inc
adc
arpl
lock
enter
cmp
outsb
push
and
movsb
add
push
stos
adc
movsb
gs
xchg
xlat
notl
pop
insl
rol
rcrl
shl
jbe
or
int
jmp
jo
aas
pop
inc
dec
xor
xchg
lock
popa
out
sub
xor
pop
fs
push
sub
fs
dec
pop
mov
leave
hlt
sub
cld
sbb
jge
xlat
stos
out
into
loop
leave
out
push
pop
jbe
or
adc
rorb
cmpsb
dec
or
leave
fldenv
int3
add
pop
int3
mov
js
arpl
add
outsl
mov
add
add
enter
fbstp
jecxz
push
clts
outsl
test
cld
nop
repz
out
cmp
in
fdivp
jg
sti
pop
or
dec
xchg
push
xchg
xor
pop
hlt
jo
incl
cmp
sub
cmp
mov
lds
and
inc
mov
sahf
stc
outsb
mov
or
adc
hlt
xchg
es
adc
push
cmp
fndisi(8087
push
in
loope
mov
adc
les
iret
aaa
imul
mov
mov
outsb
ficoms
hlt
popf
stos
daa
ds
movsb
xor
mov
sub
sub
cmp
cmp
lret
stos
idivb
mov
lods
mov
loop
adc
and
jle
push
stos
adc
add
repz
js
lods
mov
pop
inc
adc
ror
rcrl
add
ficompl
jnp
cmp
push
ja
dec
inc
and
insl
dec
ljmp
and
jl
aam
mov
stos
add
push
inc
je
and
xor
sbb
jb
orl
adc
movsl
imul
loope
and
inc
dec
push
je
ja
dec
sbb
sbb
and
lret
push
mov
loope
out
mov
in
scas
or
mov
in
sub
imul
test
dec
incb
ja
test
dec
push
jno
in
or
mov
fnsave
loopne
loope
aam
and
cmp
lods
lret
test
rcrb
push
popf
adc
mov
loop
int
jmp
cmp
not
adc
jno
pop
and
movsl
out
incb
lods
daa
das
mov
and
dec
data16
push
mov
xchg
dec
xchg
scas
data16
fcmovnu
mov
push
cmp
scas
les
data16
aam
mov
adc
inc
rolb
out
loop
dec
dec
call
add
push
test
pop
cmp
push
adc
inc
push
stos
sub
push
pop
sbb
ss
lea
dec
pop
nop
fsubl
mov
cli
pop
das
dec
dec
and
sub
jecxz
push
das
fs
sarb
and
push
mov
pop
sahf
inc
sbb
or
push
faddl
add
in
fwait
xchg
cli
xchg
mov
and
mov
cli
push
push
cmp
out
scas
sub
pop
stc
sarb
push
pop
popf
ljmp
pop
in
insl
repnz
push
pop
and
pop
mov
out
andb
insl
or
jmp
test
fs
sub
stc
push
push
je
imul
sbb
popl
and
adc
dec
sbb
sub
fmulp
outsb
mov
or
lock
hlt
dec
pop
stos
movsl
scas
xchg
xchg
mov
cwtl
subl
arpl
mov
pop
push
add
insb
fldt
insb
fildl
dec
dec
repnz
jbe
adc
fcmovnb
in
out
fwait
iret
clc
out
sub
sbb
fstpt
pushf
cmpsl
es
pop
pop
les
fstp
in
nop
and
or
push
mov
cwtl
lods
int3
sub
inc
push
outsl
xlat
adc
inc
imul
sub
dec
cmp
adc
xchg
movsb
fcompl
outsl
push
daa
out
ja
inc
mov
inc
mov
jae
enter
push
int
fmull
sbb
jnp
mov
fistps
push
mov
add
jb
xor
rolb
pop
test
sbb
loope
ret
push
pop
xchg
mov
sahf
mov
fidivrs
or
cmp
sbb
jns
mov
mov
lcall
pop
out
scas
icebp
inc
pop
ss
scas
daa
jge
mov
or
ja
mov
enter
mov
aam
pop
or
loopne
aas
pop
testl
jge
cmp
test
sub
or
inc
js
fbld
xchg
cld
ret
jecxz
std
sahf
jecxz
adc
loop
adc
push
jl
push
push
mov
push
inc
sbb
lock
stc
shll
lods
mov
mov
andl
sbb
push
cli
add
fcompl
int
push
dec
sbb
mov
push
daa
add
xchg
in
fdivrl
cmc
and
mov
mov
add
stc
rcr
and
and
xor
das
int
pop
cmp
adc
sbb
and
pop
adc
and
sbb
dec
adc
sub
jp
and
mov
in
stc
mov
subl
out
flds
in
cmp
dec
and
roll
or
and
jbe
ret
mov
or
xor
pop
test
sbb
cld
jmp
mov
icebp
xor
and
sub
pushf
cmp
dec
call
mov
jmp
jnp
adc
lock
adc
dec
dec
sbb
aam
aad
aam
scas
and
xorb
mov
psrlq
cmp
nop
jae
loopne
jmp
js
push
movsl
lock
jae
push
mov
xchg
dec
sti
scas
outsb
sarl
in
shll
and
add
adc
mov
aam
sub
and
pop
mov
outsb
and
add
jl
stos
shrb
shlb
loop
mov
loop
lea
push
inc
je
idivb
in
leave
push
fistl
pop
sub
fdivs
jne
and
jge
ret
pop
test
test
loopne
xchg
call
push
test
jae
je
daa
imul
fs
jnp
andb
fs
fcmovb
repz
xchg
lahf
fcompl
sahf
bound
push
mov
imul
mov
or
in
jb
mov
push
sub
rol
cltd
aas
negl
push
hlt
xchg
adc
add
outsb
fsubrs
push
push
cli
sub
or
ret
stos
sbb
and
xlat
xchg
insl
pop
mov
sub
adc
dec
push
inc
sub
xchg
cmp
clc
xchg
push
insl
ds
mov
pop
repz
daa
arpl
and
cltd
daa
fnsave
push
mov
movsb
or
jne
inc
std
or
test
mov
jbe
and
add
xchg
sbb
lret
xor
mov
mov
mov
cwtl
xor
lea
mov
loope
mov
jl
popf
and
lcall
lea
push
popf
es
and
sbbl
jp
dec
mov
ja
sbb
addl
or
and
mov
cltd
mov
and
loop
and
add
pop
std
add
subl
data16
xchg
das
inc
popa
shll
cwtl
push
jb
je
dec
out
inc
inc
pushf
arpl
and
pop
push
xchg
cs
mov
pop
cmpsl
xor
push
icebp
jg
xor
cs
cmp
ror
jae
pop
sub
cwtl
sub
pop
rclb
andb
lock
cmpsb
loope
imul
cs
in
iret
jo
pop
sub
shl
add
lock
int
adc
inc
out
jb
in
iret
outsb
fcmovne
jne
loope
xchg
push
imul
mov
lock
mov
pusha
cli
jle
sbb
pop
mov
scas
fiadds
jbe
xor
int
int
shll
push
in
addr16
and
cs
mov
xor
fdivs
jne
and
jge
call
cmp
lods
outsb
push
movb
rcrb
or
xchg
and
cltd
enter
aad
cmpsl
andb
lock
out
arpl
cmpsb
hlt
sub
leave
sub
xor
jo
pop
sub
aad
sbb
xchg
mov
aad
fs
sub
lahf
fmull
out
push
out
jb
in
iret
outsb
out
lret
jne
loope
cmp
mov
sti
jbe
xor
stc
sub
sbb
jb
add
sbb
xor
cmp
pop
scas
pop
sbb
dec
cmp
xor
fcmovb
ret
aam
out
adc
int3
add
push
mov
xor
inc
ret
outsl
std
inc
ret
mov
ret
int
mov
ret
mov
int
push
adc
pop
rcr
push
pop
xor
mov
ds
xor
addr16
adc
inc
sbb
mov
xchg
rclb
in
dec
mov
frstor
add
or
xchg
sub
jnp
imul
lock
in
ret
mov
sbb
jns
movsl
lea
and
adc
add
xor
and
shlb
mov
mov
cmpsl
add
fistl
xchg
gs
cmp
adc
sbb
and
dec
mov
dec
add
cmpsl
add
cwtl
and
inc
mov
fidivrl
std
fs
adc
ss
add
mov
popf
and
pushf
fdivl
pop
add
outsl
pusha
xor
jno
mov
ficompl
push
and
in
pop
cmpsb
aaa
outsl
test
xchg
mov
jne
mov
fiadds
or
add
es
push
push
loope
aaa
pop
addb
cmp
pop
cmp
dec
sti
arpl
dec
mov
int3
dec
mov
cs
push
jge
lahf
adc
vmovdqa
ss
ret
xchg
mov
cli
cmp
xor
sub
pushf
xorb
add
sbb
and
roll
cmp
in
daa
jno
or
mov
cwtl
stc
jnp
cwtl
push
push
push
mov
jno
test
iret
out
fbstp
xchg
cmp
mov
js
adcl
inc
jp
out
enter
les
repnz
or
insl
jne
mov
outsb
iret
xchg
xor
cli
icebp
xor
or
cmp
mov
pop
or
sar
rep
mov
cmp
xchg
sbb
dec
rorb
pop
cmp
and
inc
ret
cmp
int
or
rcrl
or
adc
sub
std
ficoml
test
sbb
imul
dec
insl
jae
mov
aam
push
test
mov
aam
push
push
arpl
add
xchg
jmp
sub
adc
push
mov
cmp
lret
sub
out
mov
lahf
in
jne
jmp
lods
inc
icebp
adc
and
leave
outsl
in
addr16
fsts
stos
iret
sbb
out
stc
push
imul
sbb
cld
bound
test
mov
cmpsb
ret
inc
dec
aad
scas
icebp
inc
mov
push
sub
scas
nop
mov
fwait
dec
adc
mov
sub
cld
push
inc
pop
nop
outsb
cmp
add
cld
jg
and
sub
lods
inc
sbb
shrb
inc
rcrb
and
into
ja
add
clc
ret
and
or
xchg
cmc
std
stc
fistpll
ret
cwtl
sarl
push
xchg
cli
jp
shrb
mov
inc
mov
sub
popf
mov
mov
push
push
gs
xchg
xor
sub
push
ret
fnstcw
pop
mov
call
data16
add
push
and
mov
sbb
js
mov
push
pusha
cli
xlat
iret
sbb
fmull
sbb
rcl
push
lret
int
lds
iret
test
mov
cmp
cmp
daa
pop
scas
mull
in
push
repz
in
push
call
outsb
popa
int
cmpsb
dec
lds
pand
xorb
incb
mov
enter
stos
imull
rcr
pop
in
les
xchg
add
je
repnz
and
rcrb
fst
mov
cs
mov
cmpsl
mov
and
mov
jmp
ret
fcmovnbe
pop
push
iret
xor
les
inc
fildll
frndint
jg
outsb
cltd
pop
flds
inc
sbb
jmp
mov
aas
and
pop
or
add
adc
je
xchg
mov
sbb
inc
cmp
or
sub
push
inc
mov
int
dec
shll
mov
add
adc
shrb
sbb
sub
jnp
push
mov
jo
aad
ds
in
stc
cmovs
jno
cmc
out
movsl
mov
sub
xor
mov
jp
add
loop
add
mov
mov
pop
sub
and
fdivrl
aam
ja
mov
mov
pop
outsb
popa
ljmp
aad
std
ja
sub
cmpsl
mov
daa
jl
bound
and
mov
mov
push
jp
mov
adc
mov
pusha
jl
in
fs
inc
std
test
push
movsb
pop
mov
int
jo
insl
out
popf
and
and
lea
jp
cmp
xchg
mov
jno
sbb
fcomi
in
std
inc
int3
cmp
in
adc
xor
inc
inc
or
lods
test
lcall
mov
and
adc
int
in
or
repz
and
and
adcl
cmpsb
arpl
mov
xchg
aas
testb
or
scas
jno
arpl
in
pop
int
faddl
add
dec
adc
inc
push
push
js
add
mov
or
in
test
push
repz
dec
repnz
dec
lds
aas
push
jg
fnsave
mov
push
in
call
cli
cltd
mov
push
daa
inc
rcrl
mov
inc
fisttpll
jge
fwait
sub
insb
insb
xor
ss
dec
pop
adc
pop
xor
movsb
cmpsb
sub
in
mov
push
in
sub
data16
gs
testl
sbb
leave
jl
xchg
out
out
inc
lock
add
mov
insl
pop
sarb
data16
sbbl
in
pop
push
cmpsl
test
pop
fdivs
dec
and
int
and
mov
pop
lea
out
mov
out
jg
addr16
rol
jmp
movsl
cmc
jne
add
jno
cmp
popa
aam
ja
sub
push
mov
ja
push
hlt
pop
cltd
or
aam
stos
or
jge
fwait
sub
insb
insb
xor
and
dec
xor
inc
popf
test
lea
into
out
push
movsb
cld
xchg
ret
into
dec
and
add
push
sub
addr16
addr16
lods
xchg
aam
cmc
mov
imul
cld
xchg
scas
dec
test
push
adc
pop
imul
in
mov
inc
out
jp
inc
jmp
mov
dec
loopne
mov
or
pop
insl
lods
vpunpckhbw
pop
lock
rcll
fmull
std
les
in
add
inc
mov
imul
jmp
xchg
inc
lea
mov
mov
shll
add
dec
xor
xor
push
test
adc
pushf
jle,pt
outsb
mov
iret
mov
mov
jl
test
cmc
xchg
mov
add
cli
les
movsb
mov
adc
lret
mov
mov
mov
inc
daa
in
adcl
hlt
negb
in
jns
pushf
cmpb
shll
mov
jae
enter
jle
jle
sub
lcall
mov
push
xchg
call
jae
cs
je
loopne
stc
jo
out
pop
cmp
aaa
ds
stc
inc
popf
inc
popf
in
dec
int3
sbb
cmp
cmp
sbb
scas
adc
fsubl
addr16
outsb
cli
pop
imul
pop
jge
in
sub
rclb
mov
push
inc
add
in
jl
dec
fs
imul
cmpsl
mov
enter
gs
sub
outsl
cmc
sub
lea
sub
mov
mov
ffree
outsb
insb
stos
gs
cmp
in
popa
or
ljmp
xchg
push
xchg
inc
push
in
shll
mov
inc
jle
pop
je
pop
in
jae
cmp
inc
aam
jnp
aad
jge
in
or
adc
jne
sti
testl
dec
jg
test
jbe
inc
mov
cmpsl
or
in
cs
adc
add
addr16
int
andb
sbb
or
movsb
lods
mov
lods
xor
mov
and
jg
or
cmp
sbb
xor
shlb
mov
mov
lods
roll
cmp
mov
in
neg
call
lahf
jle
inc
test
movsb
inc
fbld
mov
cmp
mov
jmp
push
fs
ret
in
pop
mov
leave
lret
rcll
pop
inc
cmp
in
ja
and
pop
and
mov
mov
xor
scas
or
inc
test
or
and
sub
cmp
in
xchg
psadbw
mov
xor
jg
jl
stos
push
ljmp
bound
push
mov
psubd
das
xorl
mov
lcall
inc
jle
hlt
jb
test
test
mov
fnsave
inc
repnz
and
and
adc
xor
stos
mov
int3
mov
arpl
mov
cwtl
mov
data16
popf
xchg
es
imul
sbb
cmp
sbb
mov
sbb
mov
dec
mov
imul
arpl
cmpsb
cmc
pop
out
push
mov
jge
and
lcall
in
sub
xlat
je
rcl
stos
repnz
cmp
in
ret
sbbl
test
rcrb
jne
push
push
mov
ljmp
push
inc
clc
pop
in
mov
das
pop
and
inc
adc
or
in
loopne
imul
sbb
ja
dec
es
sbb
in
or
inc
in
xchg
jo
rorb
mov
sar
add
inc
push
rclb
repz
jb
lret
ds
mov
cmp
repnz
xchg
stc
push
scas
pushf
fnstenv
adc
lahf
repz
sti
in
jmp
arpl
pop
xor
inc
stos
leave
mov
xor
es
mov
cmp
jle
and
pop
daa
adc
dec
mov
push
push
inc
jae,pt
adc
testl
sbb
and
movsl
movsl
mov
das
cmp
test
and
mov
popa
jb
mov
add
add
stos
xchg
dec
pop
loop
movsl
mov
pop
xor
jg
ljmp
dec
imul
push
jle
pushf
iret
push
ret
and
mov
pop
test
sub
jb
jne
in
lock
sub
mov
sbb
jle
addr16
out
xlat
out
push
inc
mov
mov
lcall
or
xchg
divl
in
dec
je
mov
sub
in
sti
int
mov
mov
pop
mov
or
cmp
fwait
jne
jp
sbb
lea
ss
add
adc
add
push
sbb
dec
pusha
pop
iret
inc
adc
or
mov
inc
push
stc
mov
jge
fldcw
repz
jge
mov
inc
cld
ja
in
insb
xchg
mov
push
xor
aas
mov
cmpsb
icebp
addr16
xlat
lret
cmp
dec
leave
testl
std
push
jb
test
scas
lcall
mov
sbb
xorb
pop
test
xlat
push
cmp
js
int3
loope
insb
dec
mov
aam
pop
adcl
test
mov
and
lods
mov
xchg
cmp
movsb
add
mov
xchg
mov
ss
dec
std
fstpl
add
add
sbb
nop
dec
jl
lret
and
sbb
inc
jne
test
push
inc
fcompl
cmp
lods
xor
loopne
push
or
cld
dec
mov
sahf
jge
mov
pop
test
das
fsubrp
test
fsubl
xor
leave
xor
sbb
adc
roll
sbb
inc
imul
sbb
fnsave
cwtl
imul
mov
in
xor
mov
cmp
mov
sbb
mov
clc
ficompl
jo
pop
push
clc
mov
inc
jae
jmp
into
or
inc
xor
insl
xor
push
dec
sahf
out
cmpsl
clc
scas
shrl
ret
int3
xchg
lods
idivl
pop
dec
cmp
cmp
mov
int3
dec
dec
add
mov
int
lcall
mov
mov
dec
push
cmp
lods
fwait
popf
int3
fsubrs
mov
pop
aas
add
xor
mov
cltd
movsb
nop
add
cmp
or
push
icebp
sub
fwait
leave
test
pop
int3
cs
ja
or
mov
or
bound
dec
cs
dec
test
test
dec
test
jg
cmp
mov
into
xchg
ljmp
in
aad
inc
test
cmp
cs
jg
ret
repz
mov
jae
ret
and
and
push
or
or
lods
cld
xchg
divl
mov
fucom
and
xor
je
xlat
dec
dec
jecxz
pop
lcall
sbb
scas
in
popf
insl
movsb
inc
sub
into
and
xor
das
push
dec
pop
add
sbb
scas
test
xchg
int3
fisubrs
mov
pop
xor
je
xor
in
mov
dec
dec
fidivrl
mov
cmp
sbb
jge
fwait
shrl
insb
outsl
fs
and
adc
test
mov
testl
dec
fs
sbb
or
dec
inc
lods
nop
mov
push
mov
cmp
cmp
aaa
aam
pop
adc
cmpsl
decb
lods
or
movsb
cmp
sub
stos
ror
icebp
jge
fwait
cmpsl
test
mov
sbb
mov
data16
mov
dec
into
push
std
cmp
mov
jge
fwait
subl
push
sub
into
and
xor
and
pop
prefetch
out
imul
daa
jmp
push
movaps
addr16
mov
test
ret
int3
data16
and
ss
dec
adc
cmp
sub
cwtl
mov
sub
jno
lea
loopne
jb
push
insb
lcall
pop
mov
ret
ljmp
inc
mov
sbb
sbbl
pop
cmc
adc
inc
and
fs
cmp
jbe
mov
inc
xlat
xor
in
jecxz
in
xor
jb
jl
aaa
jmp
mov
adc
xor
sbb
cmp
add
es
pop
mov
xor
dec
test
and
lods
lock
mov
ljmp
nop
outsb
push
add
lods
lahf
mov
add
lret
ss
aas
test
leave
sbb
cli
sub
adc
adc
data16
loope
xor
scas
loop
xchg
and
jecxz
pop
cli
jnp
or
push
mov
fsubrs
cmp
fwait
icebp
ds
repz
mov
sbb
lock
ret
aad
sub
jnp
aaa
mov
or
push
adc
or
lea
testb
or
xor
push
out
mov
loop
lds
pop
sub
pop
or
into
lea
int
lods
ja
cmp
insb
sahf
xlat
xchg
in
test
push
popa
xor
daa
ljmp
xor
dec
and
pop
imul
push
ja
pop
mov
repnz
addr16
sbb
xlat
insl
cmp
test
adc
inc
shll
lds
lea
jne
cmp
jle
or
jo
mull
aas
dec
pop
pop
sub
mov
repnz
push
cmp
or
and
in
xlat
push
adc
mov
outsl
xor
jnp
sbb
outsb
test
or
shr
shrl
sahf
jae
xchg
or
jo
loopne
sub
mov
std
iret
push
test
xchg
mov
cli
and
pushf
push
into
lods
enter
mov
xlat
xchg
mov
icebp
sbb
xchg
insb
push
out
shrb
mov
cmc
stos
add
pop
movsb
push
movsl
out
jecxz
das
std
loop
jae
loop
icebp
sub
sub
scas
cld
lahf
ret
cs
pop
or
adc
xor
int
repz
add
sub
out
jbe
loop
mov
xor
dec
idivb
test
es
aad
lods
lds
divb
or
mov
adc
push
data16
jne
shl
shrb
je
out
hlt
dec
gs
shlb
xchg
lods
fistpll
pop
out
jmp
or
adc
jne
xchg
insb
mov
adc
adc
add
aaa
fidivl
dec
push
lret
rcll
repnz
sbb
mov
orl
cmp
xor
cmp
mov
loopne
arpl
sarb
loopne
adc
adc
sub
push
fs
outsl
xor
ss
adc
sub
imul
negl
cmp
cmc
rcrb
loope
sbb
daa
pushf
dec
ljmp
cmp
adc
push
cs
add
cld
xchg
movsb
dec
pop
cmp
lret
mov
addr16
and
adc
cmp
mov
mov
or
aaa
cs
push
add
movsb
std
and
mov
sub
and
das
cmp
sub
adc
lret
and
or
ret
push
andnps
shlb
jne
mov
fcoml
subb
push
sub
dec
sub
jae
aas
icebp
jns
popa
push
push
or
mov
sti
iret
push
in
jae
cmp
mov
mov
mov
sub
xchg
adc
lss
push
movsl
adc
loop
pop
sahf
clc
repnz
push
popf
aas
mov
mov
and
fscale
rcrb
and
sarl
sub
jmp
jl
add
xor
inc
aad
lahf
sbb
jne
stc
stc
and
pop
and
sub
test
adc
mov
aas
xchg
out
out
aad
pop
rol
mov
xchg
inc
adc
dec
aas
mov
xchg
mov
push
mov
fs
xlat
pop
inc
jg
push
mov
pop
insb
inc
pop
fcoms
out
out
xchg
leave
mov
jno
xchg
movsl
jne
loop
fldcw
loop
fnstenv
loop
flds
loop
fnstcw
and
dec
loop
fstps
add
loop,pn
fnstcw
loop
loop
fstps
loop
ret
mov
pop
mov
ficomps
bound
pop
jecxz
mov
bound
pop
pop
bound
pop
bound
pop
ja
cmp
insb
imul
bound
jno
sti
lret
mov
out
pushf
jae
bound
jle
cli
inc
jmp
sbbl
mov
inc
lcall
add
pop
in
xchg
aad
sub
pop
sub
aas
sub
jg
sub
jg
sub
jg
sub
jg
sub
jg
sub
jg
sub
or
push
or
xchg
or
out
jle
in
testb
or
inc
aad
inc
test
mov
lods
lcall
movsl
inc
xchg
aad
xorb
mov
cmpb
pop
test
mov
pop
popa
adc
or
aaa
test
aaa
fisubrl
or
fwait
aam
lret
sti
sahf
mov
movsl
dec
fstpl
imul
mov
data16
sbb
jo
and
mov
fsubl
aaa
orb
xor
aaa
pop
or
pop
call
rolb
fldcw
xor
jl
icebp
jno
pop
bound
sbb
pop
mov
mov
mov
mov
jbe
xor
lret
sahf
test
fisttps
inc
dec
in
pop
add
mov
iret
lcall
lock
inc
and
jns
pop
mov
pop
fisubs
pop
sub
jbe
jnp
jo
jp
xor
jl
inc
and
add
outsb
or
out
fnstenv
mov
rolb
lret
loop
mov
mov
popf
sub
or
pop
and
inc
mov
out
icebp
pop
and
lret
and
or
ds
dec
iret
sahf
in
ficompl
ror
stc
sahf
mov
rcrb
push
and
loop
mov
and
dec
lret
imul
lret
and
ret
lret
cmc
sahf
call
fistl
adc
jns
jle
inc
and
es
in
out
fstps
ds
jmp
cwtl
pop
fildl
adc
outsl
js
inc
lret
or
data16
sbb
sub
ds
aad
repnz
adcb
call
loop
stos
mov
mov
mov
mov
mov
mov
mov
mov
adc
push
outsl
mov
mov
mov
mov
repnz
lret
or
sahf
push
lock
fadds
jl
inc
ja
aas
inc
push
jl
jo
js
xor
or
xor
or
or
add
xor
xor
push
xor
push
cmp
stos
imul
fwait
in
mov
sbb
jmp
mov
fcmovnbe
xchg
fnstcw
and
stc
gs
fcompl
dec
mov
sahf
lahf
lret
pushf
popf
scas
jg
inc
aad
inc
mov
lcall
ficomps
adc
aaa
mov
aaa
sahf
or
aaa
outsb
or
or
ret
aad
popf
imull
jnp
es
fnstenv
loop
flds
loop
xlat
push
pop
mov
out
inc
mov
into
sbbb
lahf
outsl
xchg
inc
cmpb
xor
mov
push
cltd
dec
jecxz
std
lret
pop
cld
in
mov
cmp
inc
addb
andb
push
add
testb
aad
xor
mov
sahf
mov
xchg
sahf
cmpsb
lret
movsl
jmp
xchg
mov
ss
aaa
lods
or
aaa
mov
daa
shrl
aad
adc
out
in
xor
movb
aad
andb
xchg
inc
fbstp
push
jg
sub
push
sub
inc
sub
mov
sub
out
jne
lret
lret
lret
scas
sahf
xchg
lret
cmpsb
sahf
cltd
lret
sahf
sahf
mov
dec
sub
or
in
mov
testl
movsl
cs
leave
mov
aad
pusha
pop
sub
popa
dec
lods
xor
jg
sub
jg
sub
fimull
add
jp
dec
jo
and
add
jo
pop
lret
lock
and
ficomps
jmp
lret
sahf
stc
lret
mov
xchg
inc
fidivrl
dec
lret
jb
push
lret
push
pop
lret
bound
lret
es
sbb
push
sahf
and
push
sahf
sub
push
sahf
xor
push
sahf
int
sahf
cmc
lret
lret
lret
ret
lret
mov
sahf
xchg
lret
sahf
xchg
inc
dec
lret
outsb
sahf
push
lret
data16
pop
lret
pop
sahf
popa
lret
push
sahf
jns
and
sub
push
sahf
xor
push
sahf
cmp
sahf
ror
sahf
icebp
lret
ret
lret
mov
sahf
xchg
lret
stos
sahf
popf
leave
mov
lods
mov
int3
lcall
fsubr
mov
mov
cwtl
lcall
push
lcall
and
jne
cmp
insl
mov
or
pop
mov
lock
cltd
enter
rcrb
ret
jns
dec
leave
mov
cmp
mov
mov
mov
mov
mov
gs
mov
pop
inc
add
sbb
int
aad
inc
xchg
frstor
lcall
movsb
lcall
fs
jo
sbb
inc
lcall
add
pop
in
mov
mov
jo
inc
cmpsl
jbe
int
pop
std
bound
loope
mov
mov
int
js
and
in
and
lret
mov
imul
call
loop
fprem
loop
loop
fnstenv
fstp
test
aad
pushf
call
clc
movsl
pop
sbb
stc
pop
lret
sahf
mov
mov
xchg
push
lret
data16
pop
enter
adc
xchg
cmpsb
xor
icebp
mov
in
rcl
in
jns
or
sub
js
dec
mov
mov
lahf
je
cmp
imul
dec
cld
mov
mov
lcall
test
int3
mov
insl
lcall
fcmovnu
adcl
inc
out
add
ficoms
fstps
jg
inc
xchg
sahf
xchg
lret
mov
adc
aam
out
testb
dec
das
xor
push
or
pop
jecxz
lods
fld
loop
fldcw
lret
aaa
and
dec
xchg
fnop
loop
fsts
xor
add
pop
sub
mov
sub
sub
dec
lret
xchg
sahf
mov
mov
sub
sub
or
xor
sarl
stos
lock
xor
sub
mov
xor
sbb
cmp
arpl
sbb
dec
push
mov
sarl
divl
std
lock
pop
or
sub
or
pop
sub
or
or
pop
ret
or
pop
aam
jmp
pop
in
or
pop
icebp
push
repnz
test
xchg
xorb
inc
mov
push
jo
sub
xor
cli
pop
rorb
ficomps
or
cmp
cmp
lock
lods
ss
popf
inc
stos
les
aaa
xchg
or
aaa
arpl
testl
jg
sub
pop
mov
clc
dec
lret
pop
sahf
inc
lret
push
sahf
and
and
push
lret
clc
sahf
mov
scas
lock
dec
jo
and
sbb
push
sub
jb
xlat
aaa
dec
push
out
dec
mov
fcomps
add
mov
notl
mov
fdivp
loope
imul
mov
pushf
or
sbb
int3
out
aaa
adc
inc
movsl
aad
mov
push
or
stc
test
icebp
xlat
mov
es
sarb
aad
nop
or
add
inc
xchg
loop
jg
inc
or
mov
push
push
popa
sbb
pop
mov
outsb
sahf
push
lret
bound
es
sahf
es
sbb
inc
int
nop
push
cmp
jl
outsl
adc
std
jg
sub
sahf
stos
loope
dec
cld
icebp
loope
mov
xorl
or
pop
xchg
popa
jle
cli
loopne
dec
jo
lods
jae
in
fadds
iret
les
in
aad
cmp
mov
xchg
aad
andb
stc
mov
lret
pop
mov
cmp
xor
and
ret
or
aaa
or
pusha
jb
sub
es
gs
pop
in
inc
xchg
push
push
and
leave
jo
and
in
fisubl
cmc
jp
fwait
sarl
pop
sub
adc
cld
dec
cmc
fldenv
or
push
loop
fldenv
loop
fnstenv
loop
flds
loop
fsts
stc
mov
xchg
pop
fwait
popa
in
jno
movsl
mov
sub
inc
shrl
stc
in
lret
hlt
sahf
xlat
lret
in
out
aam
test
mov
xchg
lret
movsb
pushf
cmpsl
jg
dec
push
out
mov
mov
enter
loop
fldenv
mov
sub
jg
sub
jle
popa
aaa
sahf
fmul
out
sahf
int3
lret
lcall
lods
loopne
mov
push
jl
inc
inc
dec
out
inc
mov
iret
xor
loop
lcall
and
jecxz
mov
xorl
ret
pop
sub
or
cli
stos
rolb
loopne
mov
fidivs
jne
jo
inc
pop
push
sahf
lret
leave
mov
sub
push
mov
andb
pop
movsl
and
cmp
pop
in
add
das
pop
gs
xchg
mov
ja
inc
cli
jl
pop
rolb
hlt
popf
aad
or
stc
call
mov
cmp
pop
inc
jp
or
imul
rcrl
mov
jo
pop
sub
test
je
call
or
imul
xchg
mov
add
push
stc
test
neg
jne
lret
xchg
pop
in
lret
loop
int
test
push
push
ret
inc
repz
push
sub
in
mov
data16
stos
addr16
dec
loop
fldcw
std
inc
cmpsb
jg
sub
inc
inc
imul
cmpsl
and
jl
inc
dec
in
popf
arpl
into
mov
push
call
lock
outsl
mov
and
pop
orb
pop
push
rolb
jo
das
mulb
inc
mov
les
pushf
lcall
loop
mov
jle
lock
mov
jno
jo
jns
out
lret
mov
wrmsr
dec
pop
jmp
and
dec
sub
adc
sti
in
mov
mov
aaa
aaa
insb
push
ss
xchg
adc
call
jmp
jl
push
dec
pusha
ret
cmp
in
repnz
gs
add
or
aaa
insl
or
aaa
jle
and
aaa
push
xor
sub
divl
xchg
movsl
or
cmp
in
adc
pop
xchg
add
int3
inc
mov
enter
or
pop
pop
pusha
push
lods
dec
decl
cmpsb
clc
test
pop
mov
fimull
aaa
jl
iret
aaa
pop
bound
xor
pop
mov
lret
test
ja
push
jg
cmp
sub
es
pop
lea
test
enter
sub
lock
test
xchg
aam
inc
xchg
fucom
lds
mov
imul
int
aad
orl
stc
pop
ror
movsl
popf
dec
sbb
dec
daa
pusha
push
mov
adcl
test
fucomip
inc
jno
loopne
daa
shl
dec
sbb
fsubl
jno
and
out
daa
push
and
orb
shll
test
inc
lret
jnp
mov
and
outsl
inc
xchg
jb
and
lret
pop
jne
shlb
rclb
in
leave
xchg
sub
pushf
jo
rcrl
mov
je
sub
adc
rcr
stos
lret
popf
sahf
mov
push
into
inc
inc
dec
negl
pop
adc
mov
popa
nop
push
pop
imul
mov
daa
mov
mov
shl
cmp
testb
jmp
and
xchg
shrb
cmc
xchg
mov
andb
aam
mov
mov
mov
sahf
jp
dec
sahf
jb
mov
or
aaa
aam
test
lods
xor
dec
adc
repnz
mov
inc
leave
imul
aas
sub
in
add
or
dec
fmuls
aaa
std
daa
lods
stos
aad
andb
insb
aam
mov
lcall
out
dec
fidivl
push
mov
push
divl
cmp
jmp
push
fnstsw
jno
aas
dec
mov
sub
jno
aam
stc
jl
loop
in
push
pop
jo
test
mov
push
stos
test
lcall
jecxz
jns
fidivl
sub
pop
das
loop
shrb
sub
add
jo
jns
xor
mov
or
dec
dec
fnstcw
jo
xchg
mov
sbb
xor
xor
in
scas
int
xchg
xlat
aad
leave
push
mov
shl
or
std
inc
sub
mov
lret
leave
jg
movsl
push
fstl
and
xchg
xor
cmp
lock
mov
and
lret
jo
and
xchg
lea
push
jb
aam
jmp
lds
add
or
mov
xor
xlat
cmp
pop
or
cmp
loopne
imul
pop
xor
inc
xchg
arpl
insb
jg
sub
jle
push
mov
aad
clc
jl
inc
adc
push
pop
jo
loop
inc
jnp
xor
rorb
or
mov
and
pop
mov
rolb
and
or
mov
cmc
clc
into
mov
lret
test
and
adc
idivl
lahf
add
sbb
push
or
push
adcb
stos
call
inc
into
jl
pop
pop
and
or
pop
out
inc
xchg
xlat
xlat
cld
test
ss
or
push
lcall
rcll
jne
dec
addb
clc
popa
mov
enter
aam
mov
xchg
lahf
int3
inc
push
out
aas
iret
mov
xlat
pop
aad
fsubrl
jbe
inc
pop
loop
rcrb
jno
xchg
mov
movsl
popf
inc
add
sbbb
fdivrs
stos
push
mov
mov
aaa
sarb
xchg
repnz
jg
sub
lock
and
and
sbb
xor
xchg
adc
call
insb
add
out
mov
movsl
sahf
insb
xchg
mov
aam
mov
sti
stc
jmp
mov
sub
sbb
jbe
adc
push
lcall
lret
rclb
mov
mov
xchg
gs
jno
xlat
or
fldl
or
aaa
cmpsl
and
pop
aad
xchg
out
mov
fsts
jb
mov
js
pop
mov
and
std
inc
fwait
push
test
les
cmp
cltd
lock
cli
lods
sarb
out
repz
shrb
pop
inc
jle
inc
mov
insb
cmp
outsl
sub
cmc
jo
and
xchg
jg
or
mov
and
mov
sahf
aad
add
cmp
jo
int3
movsl
popf
loope
cli
jne
push
movsl
or
enter
jae
outsl
fcomi
out
inc
lret
negl
test
sahf
mov
mov
jle
lock
sub
cltd
mov
aad
cmpb
fdivl
hlt
int3
movsl
sub
out
call
xchg
lret
scas
cmp
scas
push
das
pusha
outsl
jp
cld
dec
and
scas
or
lss
in
cmpb
outsb
xchg
push
nop
sub
shl
or
lock
test
push
imul
inc
push
lcall
js
mov
fimull
popf
mov
loope
dec
inc
or
imul
leave
dec
fimull
aaa
stos
or
aaa
xchg
or
aaa
inc
or
push
push
cld
cltd
xchg
lods
mov
mov
xchg
pop
inc
dec
jo
and
mov
jl
push
icebp
push
jp
ficoms
xchg
xchg
call
pop
sub
sub
push
loop
cmp
das
cmp
cs
xchg
in
rorl
fidivl
mov
or
emms
ja
decl
mov
pop
or
pop
out
jns
hlt
lret
mov
cltd
lret
cwtl
pushf
stos
imul
aaa
mov
mov
lret
bound
inc
loop
test
inc
jo
outsb
popf
loopne
stc
in
inc
ja
int
mov
enter
aad
dec
scas
mov
test
sub
jg
sub
jg
sub
jno
popa
or
jnp
pop
jecxz
out
push
movsb
cmp
mov
fists
xchg
jge
xchg
lahf
outsl
mov
xorl
cltd
xchg
dec
and
mov
mov
cmp
sub
fdivs
add
mov
insb
lret
dec
fsubl
ret
jbe
push
pusha
das
lahf
jmp
and
mov
idivl
mov
leave
testl
xor
aad
ror
mov
pop
xchg
jl
add
push
and
xorb
xlat
pop
sti
in
ret
inc
xchg
popf
mov
mov
scas
or
or
lock
sub
mov
sub
push
mov
shrb
pop
xor
lret
daa
sahf
or
int
mov
sub
insl
lods
lock
bswap
mov
lret
in
sahf
ret
sahf
mov
les
push
inc
adcb
jl
push
xchg
mov
test
lret
sbb
sub
jo
and
jo
sub
and
jo
cwtl
sahf
add
insb
sbb
test
mov
push
sahf
and
aaa
mov
mov
or
sub
loop
fcmovnu
insb
cmp
or
mov
xor
pop
sahf
mul
fsub
dec
jp
test
lea
inc
cmc
push
xlat
xor
dec
cs
mov
jo
sub
movsl
xor
rcrl
fnstenv
inc
stos
in
push
and
movsl
jo
mov
mov
sahf
jnp
or
lret
outsl
and
loop
push
push
lock
aam
movsb
jnp
pop
mov
adc
xchg
mov
addb
jns
dec
or
push
or
pop
fisttpll
fldt
inc
test
sahf
xchg
ret
add
bound
flds
xor
jno
mov
je
pop
divb
fisubs
xlat
inc
mov
pop
fstps
stc
mov
lock
test
xchg
jl
push
inc
add
js
dec
and
push
jo
ret
mov
cmc
push
jge
pop
int
inc
push
aas
cmc
jo
and
es
aaa
rorb
aaa
push
std
das
cwtl
jle
push
pop
add
and
aaa
lret
add
psubsw
and
aaa
xchg
push
dec
ja
xchg
xchg
adc
mov
mov
push
cmp
mov
push
sub
arpl
dec
xlat
movsl
mov
pushf
aas
pop
out
enter
fdivs
lds
pop
pusha
movsl
fs
test
lcall
lret
mov
movsb
pop
xor
inc
addr16
ss
jg
cs
bound
push
sar
xchg
movsl
inc
ss
or
sbb
or
leave
inc
jge
xorl
xchg
inc
shlb
pushf
in
adc
adc
out
out
add
stc
bound
and
leave
push
clc
jae
mov
mov
mov
ss
test
sti
or
aaa
mov
xor
mov
cmp
xchg
decb
idivl
xor
or
test
mov
fldenv
mov
popa
mov
pop
jl
pop
pop
jae
out
add
add
xor
jle
out
loop
dec
or
mov
xlat
xorl
popf
testl
pop
cmpsl
ret
sahf
ror
in
clc
pop
fsubs
dec
inc
popa
test
xorb
test
jae
fisttpll
inc
cmpsl
push
fidivrs
cmp
mov
bound
add
sbb
xchg
pop
loope
movsl
cwtl
pop
pop
pop
movsl
scas
jnp
idivl
loop
aad
lret
cmp
mov
rclb
rorl
mov
in
lret
gs
jp
scas
in
loope
pop
in
add
js
movsl
test
mov
or
adc
cmp
mov
pop
lock
lods
jl
mov
mov
xlat
jne
addr16
mov
mov
mov
enter
repnz
jecxz
bound
sbb
addl
adc
cmc
dec
mov
outsl
iret
jb
xlat
cmp
test
test
sbb
aad
or
or
mov
sbb
lret
aaa
loop
xlat
mov
decb
mov
cmpl
fildl
add
lcall
xor
xchg
pusha
outsb
jp
stc
add
andb
pop
xchg
xchg
dec
adc
jecxz
ds
xchg
stos
insb
mov
aaa
push
addr16
out
out
popf
cmpsl
pop
aas
add
sbb
out
add
inc
mov
jecxz
in
mov
imul
sub
pop
mov
mov
aas
cmc
dec
mov
ret
inc
lock
and
sbb
ffree
adc
cwtl
mov
jne
xchg
jle
leave
jl,pn
lods
and
dec
ljmp
dec
pop
mov
mov
jnp
mov
cld
insl
mov
and
xor
sbb
in
imul
and
adc
or
push
pop
and
popa
pop
ret
sub
jo
sbbl
je
push
sbb
movsl
repnz
movsb
decb
dec
clc
inc
rcll
jnp
mov
mov
and
aad
pushf
lcall
dec
cli
in
cli
repnz
imul
pop
jo
sbb
dec
mov
icebp
leave
sub
sub
jge
scas
push
mov
mov
sub
jp
dec
cmpsl
jb
sbb
lock
mov
enter
rorb
mov
inc
sahf
dec
lods
pop
std
xchg
xchg
sub
mov
fnstenv
cwtl
push
das
mov
xchg
in
lds
push
xor
adc
es
aad
shl
add
in
lret
sub
jle
dec
inc
mov
add
je
in
mov
fnstcw
fnstenv
xor
gs
or
pop
inc
add
add
adc
sub
lock
imul
inc
add
sarb
imul
xor
push
jno
add
fiadds
push
aas
sti
fldenv
sti
rolb
out
rorl
and
js
dec
mov
cmp
jns
jno
push
addb
cmc
enter
jge
fwait
movsl
jns
loope
mov
lea
into
add
movsb
push
adc
imul
mov
popa
sub
jl
cwtl
in
into
test
jno
xor
fdivrp
pop
test
jl
imul
mov
ds
xor
cmc
or
outsb
mov
jo
popa
pop
sub
or
pop
push
or
pop
add
ja
dec
mov
inc
jge
inc
lock
mov
negb
or
pop
xor
pop
aaa
or
jo
xchg
jmp
mov
test
mov
sub
jecxz
xor
in
test
test
daa
mov
jge
xor
and
sub
sub
mov
test
jge
loop
or
ss
dec
cmp
ss
push
mov
js
lods
mul
out
aaa
mov
mov
mov
div
xor
sub
nop
and
xor
enter
push
mov
and
mov
xor
or
int
cmp
vprotq
rcrl
leave
shll
mov
pop
aas
mov
ret
fbstp
outsb
add
push
dec
cmp
inc
nop
outsl
mov
sbb
gs
and
dec
cmp
pop
aad
rolb
insl
cltd
out
and
mov
int
cmp
lods
and
rolb
pushf
aam
stos
stc
adc
sub
push
mov
jnp
sbb
lock
cmp
insb
lods
repnz
xchg
jge
adc
fsubrs
scas
fstps
xchg
pop
dec
ja
and
in
fstl
mov
sbb
mov
pop
xchg
xlat
mov
jne
xor
ds
jns
sbb
and
into
xor
adc
push
xchg
dec
mov
sub
ds
xchg
xlat
pop
daa
fistpll
retw
jge
adc
cmc
inc
test
mov
or
cmp
int
aad
repz
mov
xor
pusha
lods
in
xor
xchg
adc
loopne
inc
mov
test
push
push
and
int
sarl
adc
and
mov
sub
xor
fstpt
sub
insl
lret
sbb
lea
xor
push
mov
lods
cmc
lcall
sbb
sub
sbb
stc
xor
cld
ljmp
or
inc
jo
lods
push
lret
adc
push
pusha
mov
xchg
xchg
adc
xor
pop
jo
pop
dec
or
xchg
mov
stos
jns
lret
jo
adc
pusha
imul
std
dec
mov
arpl
lods
addl
fiadds
and
push
leave
jecxz
sub
aad
or
test
pusha
imull
hlt
push
dec
in
mov
pop
call
jp
lods
or
add
inc
ljmp
push
mov
out
mov
jecxz
cmpsl
iret
insl
push
xchg
out
inc
push
popa
call
aam
ljmp
mov
leave
add
jp
repz
xor
jne
loopne
xchg
nop
lods
dec
ljmp
cmp
xor
jge
pop
cmp
iret
cmp
fildll
cmp
loope
insl
pop
push
and
xor
cli
mov
push
ret
insb
push
fsubl
xor
and
xor
and
cmp
cmp
es
mov
orl
lods
xor
sub
or
sbb
xor
test
shll
loopne
mov
inc
popf
push
lds
mov
xchg
sub
jge
jge
pop
clc
xor
jp
or
ds
xchg
data16
jo
mov
mov
push
lods
movsb
sub
lds
inc
lret
jge
cld
mov
in
lea
jg
ret
pusha
data16
mov
jns
lret
jge
cmc
aas
jmp
enter
les
xor
sbb
bound
sbb
shrb
cmc
jg
pop
mov
leave
cmp
jl
jecxz
adc
push
sti
iret
scas
push
mov
leave
repz
sbb
insb
rclb
add
sbbb
jne
fisttpl
sub
iret
mov
lcall
into
jecxz
fadd
dec
mov
pusha
fcoms
flds
popa
enter
sub
xor
add
mov
lods
inc
movsb
sub
add
or
or
pusha
mov
adc
inc
push
jmp
adc
ljmp
neg
sub
mov
pop
cmp
cmp
push
pushf
iret
jmp
gs
sti
ja
outsb
nop
imul
xor
aas
push
push
daa
icebp
mov
mov
cmp
push
inc
sbb
xchg
lcall
repz
adc
adc
and
cs
aad
mov
daa
nop
cmp
fdiv
mov
pop
imul
mov
pusha
call
pop
sub
sub
xor
add
xor
xor
or
movzbl
not
btc
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
btr
and
sub
sub
xor
and
test
jmp
lcall
ret
or
shl
adc
neg
add
not
and
shr
adc
adc
neg
jmp
lcall
xor
add
add
pop
xor
xchg
push
adc
sub
shr
cmp
mov
add
and
call
lcall
incl
ret
neg
sub
btr
or
or
xor
adc
cmp
shl
or
jmp
lcall
or
btc
mov
test
neg
or
or
shr
mov
mov
xchg
push
push
xchg
dec
add
add
call
btc
bt
sub
adc
test
not
bt
add
mov
sub
or
cmp
shl
and
test
mov
shl
sub
xchg
mov
neg
mov
test
bsf
mov
btc
movzwl
test
jmp
lcall
ret
or
mov
or
and
mov
btc
neg
bt
dec
call
lcall
add
xorl
pop
xor
xchg
push
bts
sub
dec
adc
and
btc
bts
jmp
lcall
stc
add
xchg
ret
neg
sub
sub
test
shl
adc
cmp
btr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
or
inc
and
adc
add
neg
btc
jmp
lcall
push
add
adc
mov
fsubs
leave
adc
and
jecxz
cmp
neg
shl
add
mov
mov
add
shl
sub
cmp
shr
sub
dec
call
lcall
add
btc
btc
bt
inc
test
test
cmp
test
and
call
lcall
push
add
sbb
xor
or
cmp
cmp
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
bsf
cmp
shl
bsf
adc
btr
shr
shl
call
lcall
inc
in
xor
neg
or
shr
bts
cmp
mov
jmp
lcall
mov
xor
mov
bsf
dec
or
and
bsf
mov
adc
test
mov
xor
mov
sub
add
or
and
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
cmp
movswl
dec
add
cmp
neg
dec
sub
add
push
xor
xor
xor
btc
shr
or
xor
add
mov
cmp
bts
shl
sub
and
and
shr
test
add
mov
cmp
mov
mov
cmp
cmp
movzwl
mov
not
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
or
test
btc
bsf
xor
xor
adc
call
lcall
add
or
movzwl
neg
test
bt
or
bt
not
mov
add
bts
bts
test
shr
sub
mov
movzbl
xor
sub
mov
shr
inc
bts
neg
test
add
or
movzbl
test
call
lcall
mov
bts
shl
bsf
bsf
xor
sub
not
bsf
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
bsf
add
shr
cmp
bt
test
cmp
add
shr
btr
cmp
neg
add
and
add
test
jmp
lcall
repnz
bswap
or
and
adc
mov
add
bts
mov
cmp
inc
or
cmp
btr
mov
call
lcall
add
add
and
mov
mov
xor
btc
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
cmp
or
adc
or
inc
or
btr
or
sub
mov
shr
adc
or
mov
add
add
and
adc
movswl
neg
cmp
mov
sub
sub
btc
sub
not
mov
add
add
cmp
and
bts
btr
bt
shr
lea
inc
cmp
jne
test
sub
add
cmp
mov
inc
sub
add
mov
xor
bts
shl
shl
add
bsf
sub
call
lcall
je
and
btc
shl
cmp
shl
or
inc
sub
mov
mov
mov
shl
bt
test
not
and
or
inc
call
lcall
mov
test
cmp
add
btc
mov
shr
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
xor
dec
adc
cmp
add
cmp
xor
sub
dec
call
lcall
mov
btr
movswl
cmp
cmp
or
cmp
add
sub
add
or
shl
bts
movsbl
btc
cmp
bswap
or
dec
jmp
lcall
outsl
test
out
mov
fdivp
fisubs
and
mov
btc
mov
add
or
and
cmp
mov
and
bsf
adc
call
lcall
add
cmp
xor
and
and
mov
mov
add
push
pop
inc
add
loop
and
inc
or
add
or
add
cmp
push
decl
mov
add
adc
xor
test
cmp
cmp
cmp
inc
call
lcall
decl
pop
neg
add
test
neg
bts
xor
mov
push
shll
adc
mov
shr
or
cmp
movzwl
adc
push
cmp
xor
adc
test
bt
test
bt
movzwl
sub
mov
not
test
dec
bsf
bts
bsf
test
sub
push
push
pop
add
add
call
mov
xor
or
or
sub
movzbl
mov
not
xchg
sub
xor
bt
btr
and
test
mov
bsf
not
mov
shl
and
shr
bt
xor
call
lcall
mov
rolb
cmp
mov
jns
cld
push
add
test
btr
add
inc
cmp
bsf
cmp
bt
test
adc
mov
call
lcall
or
shl
xor
not
bsf
cmp
sub
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
test
cmp
test
or
mov
bts
bts
sub
dec
bsf
shl
or
or
shr
bt
bt
bts
call
lcall
ret
mov
mov
push
mov
btr
mov
test
mov
adc
not
neg
test
bts
bt
or
shl
cmp
je
xor
test
cmp
bt
shr
cmp
not
mov
add
xor
test
test
test
cmp
btr
xor
btr
call
lcall
xor
add
shl
and
bt
test
bt
sub
test
or
bsf
shl
bsf
xor
sub
inc
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
adc
inc
test
and
or
add
mov
cmp
push
decl
mov
add
btr
movsbl
bts
sub
adc
test
btc
bt
push
decl
mov
add
btc
and
add
sub
shl
not
shr
add
xor
shl
add
test
adc
or
mov
jmp
sub
shl
and
or
shl
sub
dec
mov
and
inc
test
add
test
adc
adc
mov
movzbl
btc
add
test
cmp
and
shl
add
bswap
and
movsbl
cmp
btr
or
add
test
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
or
mov
add
add
and
xor
or
btc
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
and
sub
and
btc
btr
neg
test
movswl
push
push
movsbl
shr
cmp
bts
shl
shl
shl
bts
push
sub
mov
cmp
btc
movswl
or
neg
and
and
cmp
mov
mov
and
bts
add
neg
sub
shl
and
call
lcall
js
jmp
cmp
cmp
and
xor
bt
xor
inc
lea
bswap
or
btr
xor
cmp
adc
btc
mov
sub
bsf
btr
mov
or
xor
btc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
dec
cmp
shr
bsf
add
bsf
adc
sub
mov
or
cmp
btr
cmp
add
cmp
dec
push
bt
cmp
sub
cmp
xor
sub
sub
inc
bts
adc
push
not
btr
cmp
mov
cmp
add
mov
and
push
bts
xor
shr
test
test
or
adc
call
lcall
mov
shl
or
sub
neg
xor
xor
or
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
xor
dec
add
movsbl
shr
add
mov
test
btr
call
lcall
sub
mov
add
add
adc
and
test
or
add
adc
dec
or
adc
btr
sub
bts
bswap
bt
call
lcall
mov
bts
bswap
inc
sub
test
sub
sub
and
dec
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
xor
cmp
fbld
daa
cli
js
xchg
ljmp
clc
popf
pop
push
add
pop
clc
sti
and
add
pop
add
imul
adc
andb
push
sbb
add
arpl
fadds
or
dec
stos
xor
push
je
roll
add
inc
xor
aad
punpckhdq
cmp
dec
fidivrl
push
lock
sbb
dec
inc
loop
stc
fisubs
scas
test
and
add
sbb
add
or
pop
adc
add
outsb
inc
and
inc
add
push
cmp
jge
xchg
loope
xchg
add
push
or
or
add
shlb
call
sub
inc
or
sbb
sbb
add
sub
push
or
add
adc
add
dec
push
paddb
pushf
and
jp
adc
add
loopne
add
pop
sbb
or
push
mov
sbb
lahf
jmp
and
movups
call
pop
mov
push
adc
inc
dec
inc
push
cmp
xorb
pop
inc
aaa
cmp
dec
pop
sbb
inc
pop
inc
xor
xor
xor
pop
in
push
push
icebp
lock
inc
sbb
dec
add
dec
pop
rclb
push
cmp
jnp
cmp
push
cmovne
cmp
adc
aaa
in
inc
ljmp
dec
mov
push
push
push
inc
inc
jmp
xor
dec
inc
adc
mov
push
dec
cmc
dec
dec
inc
pop
adc
push
test
adcl
in
dec
push
dec
push
cmp
push
dec
add
push
pop
into
jns,pt
nop
push
loop
ljmp
aad
xor
je
out
push
and
pop
cmp
jno
pop
mov
cmp
cmp
inc
xchg
inc
dec
jle
dec
pop
push
inc
push
sub
aaa
in
push
fiaddl
test
add
add
cmp
outsl
jae
and
sbb
jne
jp
jb
popa
outsb
popf
cmp
cmp
je
out
repnz
ljmp
ja
imul
bound
mov
adc
inc
pop
cli
and
outsl
push
sti
ret
cld
adc
push
push
imul
dec
push
xchg
pop
stc
push
gs
repnz
jmp
jp
jbe
stc
shrb
stc
into
inc
es
push
jns
in
arpl
imul
sub
js
adc
bound
xor
outsb
mov
ljmp
inc
lds
jo
gs
outsl
fs
in
jbe
push
or
inc
daa
jmp
dec
nop
sbb
fimuls
movsb
dec
adc
ficomps
or
cs
cs
aad
or
mov
add
pop
add
push
je
or
jnp
jmp
add
sub
cmp
sbb
adc
insl
inc
int3
lods
pop
xlat
sbb
dec
popa
addr16
add
test
outsl
fadds
and
and
test
and
out
xor
loop
fs
fs
xchg
jns
je,pn
rcrl
in
das
cmp
mov
jo
insb
divl
aad
lret
inc
stos
add
and
lds
or
jb
jle,pn
ljmp
add
push
push
inc
push
inc
pop
lcall
dec
or
inc
dec
add
mov
