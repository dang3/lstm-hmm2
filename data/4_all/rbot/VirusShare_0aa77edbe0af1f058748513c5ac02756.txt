in
and
inc
hlt
daa
incb
sbb
and
filds
out
lock
lods
in
xor
inc
sbb
dec
xchg
inc
inc
out
jae
push
jae
mov
adc
sub
dec
dec
adc
jl
fwait
lock
push
les
rolb
add
lea
cmp
fnsave
or
daa
mov
mov
dec
sbb
push
popa
pusha
cmp
dec
mov
mov
xor
mov
stos
xorl
pop
push
mulb
cld
popf
add
sbb
inc
cmp
test
in
inc
jge
ret
out
pop
sub
sarb
ljmp
sub
js
pop
mov
inc
std
leave
xchg
mov
aas
pop
cmc
mov
ret
and
dec
movsb
jmp
popf
ds
or
xor
pop
rorb
fcoml
cmpsb
sbb
xchg
je
or
xchg
mov
jge
push
es
inc
ss
mov
rorl
sbb
std
mov
pop
popf
lea
xchg
icebp
jns
jle
mov
mov
in
popf
in
push
lret
shrb
cmp
sbb
dec
cli
test
lea
mov
sbbl
test
dec
adc
in
in
add
sub
sahf
test
test
adc
xchg
add
ret
outsb
cmp
iret
cmc
das
arpl
lock
out
into
lea
sub
mov
iret
scas
cmp
push
sub
sahf
xor
xor
mov
pop
or
inc
lret
inc
adc
test
mov
mov
pop
sbb
shrb
fidivrs
out
out
or
lds
and
xorl
push
add
and
jne
setno
xlat
adc
lahf
pop
lods
push
ds
in
sti
arpl
stos
out
aad
bound
lret
add
loop
add
popf
push
pop
add
mov
aaa
mov
mov
popf
fstps
jg
xor
push
inc
mov
inc
sbb
and
mov
xchg
sub
inc
imul
fistl
aas
dec
movsb
mov
xchg
push
in
dec
mul
push
xchg
adc
inc
or
test
inc
mov
xchg
in
push
and
xchg
or
nop
mov
das
js
adc
sub
and
mov
jo
mov
or
jp
or
mov
fistl
mov
enter
call
mov
cltd
mov
jl
mov
mov
jge
in
sub
addr16
subb
pop
cmpsl
cltd
adc
ret
cld
mov
test
xor
xor
inc
mov
or
test
loope
pop
xchg
sbb
jp
mov
dec
lea
dec
cltd
repz
xchg
jne
das
mov
rol
push
pop
xlat
lea
ja
adc
imul
push
popf
add
mov
stc
addr16
mov
iret
xor
jo
mov
sbb
and
jle
cmp
inc
dec
xor
stos
imul
pop
cs
ljmp
stc
sbb
mov
and
pop
ljmp
aaa
lods
in
mov
in
loope
add
gs
loop
push
hlt
sbb
cmpsl
mov
es
pop
lret
adc
push
jl
cwtl
mov
mov
addl
or
outsl
jae
es
sub
outsl
js
popa
fwait
jo
pop
mov
imul
fnsave
or
shll
jecxz
ss
shlb
mov
ja
addr16
mov
call
ja
add
testb
and
add
shll
das
ss
loopne
pop
xchg
adc
repnz
fstp
outsl
cmpsl
repz
imul
hlt
and
or
fidivs
jl
push
jnp
jae
stos
outsb
imul
pop
shrl
xor
in
add
jp
arpl
xor
xor
cmpsl
push
dec
xor
mov
mov
jge
adcb
cli
nop
decb
ficompl
les
jl
pop
int3
das
add
insb
push
jnp
sarb
outsb
les
scas
lcall
fmull
lret
sar
imul
lock
cs
call
inc
fs
test
push
sahf
sbb
movsl
jg
insl
rorb
sub
mov
pop
cmp
push
add
outsb
and
xor
sub
jecxz
or
lret
bound
jnp
fnstcw
cs
pop
ficoms
in
mov
jecxz,pn
cmp
das
mov
sbb
pop
push
pop
sbb
or
shlb
jae
dec
lods
push
cmp
push
mov
jo
add
mov
pop
mov
cli
mov
out
out
xchg
mov
mov
loop
or
lea
inc
mov
pop
iret
xorl
leave
les
in
mov
imul
lahf
out
movsl
fists
cmp
stos
jo
add
xchg
jecxz
mov
in
dec
daa
cs
adc
in
add
xor
xchg
jg
lds
jge
ljmp
test
push
sahf
mov
push
and
cmpsl
iret
cmpsb
mov
push
jecxz
fisubrs
mov
push
sbb
mov
jb
cmp
pop
fidivrs
mov
orl
adc
jbe
popa
mov
out
push
mov
movb
adc
xor
mov
call
pop
xchg
or
idivl
scas
enter
and
jb
mov
dec
imul
cs
rcrl
jno
sbb
ja
lret
jl
sbb
bound
inc
xchg
fadds
cmpsb
inc
add
push
and
mov
inc
adc
xor
and
aad
push
fwait
lret
cmp
jae
das
inc
cmp
mov
test
dec
ret
pop
mov
push
xchg
test
or
mov
xchg
movsl
mov
cld
dec
cmp
xchg
and
movl
push
mov
jo
stos
sbb
inc
adc
fmuls
gs
pop
cld
xchg
stos
inc
pop
outsb
push
or
lcall
hlt
and
mov
inc
lret
push
cmp
outsb
movsb
or
or
jp
leave
sti
mov
jmp
sub
enter
sti
xor
scas
mov
adc
nop
adc
mov
xchg
lods
add
fucomp
xor
push
pavgw
mov
jmp
xlat
mov
cmc
sbb
mov
sub
inc
aaa
fnsave
fldt
popa
jmp
push
sahf
or
aam
int3
dec
sahf
je
mov
xor
xor
dec
stos
dec
sub
adc
aaa
sub
mov
mov
push
rcll
rclb
jno
xchg
jns
test
sbb
subl
out
sti
mov
ja
xor
or
sbb
sub
cmc
sbb
xor
sti
aas
jg
in
cmp
enter
sub
jp
sar
out
mov
xchg
xchg
es
fsincos
iret
aaa
popa
dec
mov
into
mov
mov
out
or
mov
sbb
push
cmp
cmpl
sub
push
or
cli
enter
pop
repnz
adc
mov
das
ret
hlt
xchg
mov
inc
cmp
xchg
int3
pop
sbb
icebp
data16
in
bsf
not
xchg
fsts
mov
addr16
shrl
xor
push
ljmp
inc
in
jne
aam
dec
xor
xor
adc
and
xor
loopne
push
iret
push
shll
sbb
inc
pop
cmp
insl
cmp
xor
push
mov
add
inc
cmp
sti
pop
cli
rolb
push
shlb
push
inc
ds
pop
lret
mov
hlt
and
das
movb
cltd
sub
call
or
pop
xchg
mov
jp
sub
adc
xor
cmpsb
mov
mov
inc
xchg
mov
mov
hlt
dec
shlb
clc
scas
adc
sbb
imul
adc
push
loope
rcl
shll
stos
or
mov
pushf
jns
and
xor
filds
jecxz
xor
jl
push
fwait
ds
jle
cmpsl
mov
mov
cmc
stos
mov
xorl
xchg
shrl
xchg
lock
add
test
jbe
repnz
lret
jg
inc
pusha
mov
or
repz
das
and
xchg
adc
xlat
push
andl
mov
dec
inc
dec
jnp
std
test
sub
jecxz
daa
pushf
or
sbb
test
xchg
push
mov
push
es
mov
arpl
lcall
inc
jns
fmuls
jge
xchg
inc
pop
cmc
fwait
xor
pop
movsl
mov
pop
lea
cmp
and
cs
cmp
mov
lods
mov
dec
les
or
ljmp
jbe
daa
push
scas
test
jne
xlat
lcall
inc
or
pusha
pop
jnp
xchg
xor
add
add
pop
shrb
hlt
repnz
add
loope
jmp
aam
xor
andb
clc
add
xchg
or
push
inc
sbb
lea
sti
sbb
mov
mov
sub
jae
loope
movsl
dec
sahf
cwtl
in
inc
out
shrb
test
cmpsl
dec
pop
loop
divl
in
sub
push
out
cmpsb
adc
or
in
scas
stos
sbb
in
xlat
cmpsb
sbb
inc
pop
fs
xchg
sarb
pop
dec
add
jbe
insl
mov
mov
inc
pop
bound
and
ror
mov
insl
xor
inc
inc
fadds
mov
aas
pop
leave
aaa
imul
jle
sbb
leave
iret
mov
xor
fiaddl
jns
pop
dec
mov
fistpl
in
jb
jge
sahf
aam
xor
add
rcll
cmc
test
arpl
sub
or
cmp
daa
movsl
pop
movsl
insb
add
fsubr
into
pcmpgtd
add
clc
pop
or
jb
xchg
adc
ljmp
inc
add
ss
lcall
fwait
test
roll
das
mov
push
lret
in
cmp
pop
mov
aas
mov
int3
xor
push
xchg
ja
sar
and
or
or
xchg
add
js
inc
inc
int3
das
leave
adc
ret
mov
addr16
push
adcb
jne
jno
daa
xor
mov
pop
sbb
xchg
jno
das
mov
cmp
sbb
xor
jecxz
jle
dec
les
les
addb
push
loop
dec
gs
out
fs
cmpsb
mov
xchg
je
jmp
and
xor
mov
stos
sub
addl
pop
cli
adc
mov
sub
push
sub
inc
mov
sub
push
xchg
and
out
pop
dec
adc
notb
dec
fnsave
out
dec
loopne
mov
es
lea
xor
mov
sarb
jo
in
lahf
dec
outsb
cld
jp
mov
xlat
inc
pop
ja
mov
shrb
xchg
mov
push
sbb
inc
add
mov
aad
das
xor
das
test
mov
int3
cmp
pop
dec
mov
inc
mov
push
jbe
bnd
mov
adc
mov
jns
xor
xchg
pop
jge
mov
fisttpll
loopne
jge
mov
pop
xchg
pop
add
leave
mov
or
int3
fldcw
and
and
push
mov
mov
out
mov
mov
icebp
sub
loopne
mov
in
test
loopne
inc
ljmp
mov
sub
xorb
add
movsb
dec
sub
mov
std
sbb
dec
add
roll
pop
lret
lret
scas
das
in
mov
push
mov
mov
stos
mov
enter
popa
xor
cmp
ss
mov
pop
pop
adc
in
out
push
shll
icebp
fidivrl
lea
jae
pop
cltd
lock
push
out
fs
and
pusha
call
daa
jg
sbb
or
cmp
fcomps
xchg
sub
and
jne
sub
xor
jnp
test
ret
subl
loopne
jnp
and
mov
pop
outsl
fwait
aam
in
and
inc
dec
adc
pop
mov
or
nop
pop
mov
push
sub
and
rcr
repz
xchg
cltd
sar
daa
enter
aam
dec
dec
dec
push
inc
lods
fsubr
shrl
jae
push
jae
mul
and
mov
push
push
sbb
fmuls
out
push
sbb
lret
add
adc
and
mov
pop
pop
in
xchg
mov
pop
xchg
in
pop
dec
popf
and
jnp
lahf
mov
add
sub
mov
movsb
adc
testb
push
push
negb
pop
push
xchg
fcomps
bound
jge
out
ret
cld
cmpsl
dec
dec
xchg
mov
mov
adc
es
mov
jno
add
mov
adcb
jp
jmp
mov
pop
dec
xchg
xor
cmpsl
pop
call
mov
mov
mov
jo
daa
repz
xchg
xor
jg
mov
mov
enter
jbe
test
pop
in
addb
in
adc
pop
fndisi(8087
cmpsl
push
inc
cmpsl
bnd
out
jmp
sub
sbb
pop
sbb
into
jno
jns
cmp
aaa
mov
add
sub
mov
xchg
xchg
test
add
sbb
adcb
ss
es
flds
and
test
pop
pushfw
stc
mov
pop
cmp
mov
mov
and
lcall
fwait
or
jae
outsb
pop
int
clc
mov
lahf
sub
repnz
mov
mov
cs
out
in
adc
sbb
pop
mov
inc
xchg
jbe
mov
mov
add
xorb
cmp
mov
inc
lret
and
jbe
sbb
inc
ret
ret
pop
ss
and
int3
inc
popa
xlat
mov
jne
cltd
push
add
pop
imul
movsl
jmp
push
nop
fdivrs
mov
adc
and
mov
push
jge
inc
jmp
xchg
and
sahf
push
xor
out
dec
adc
inc
dec
cwtl
ss
ja
inc
push
shll
xchg
inc
mov
sbb
adc
adc
mov
jle
in
push
test
subb
gs
aad
rorl
ror
add
aaa
cwtl
shlb
and
js
mov
sbb
bound
push
outsb
cmp
shrl
jo
ds
jb
or
push
xor
inc
sub
popf
cmp
stc
cmp
in
mov
mov
fsubr
mov
mov
out
outsl
xorb
lods
aam
and
sub
sub
mov
scas
fmull
int3
pop
mov
arpl
cs
mov
leave
pop
pop
rolb
push
rcll
std
sub
in
mov
mov
and
loopne
mov
mov
int
add
sbb
fldl
pop
add
xor
mov
imul
dec
inc
sub
daa
mov
sub
and
cld
repz
stc
inc
ja
ss
mov
scas
inc
aad
inc
sub
dec
push
or
lret
lret
xor
outsl
mov
loop
mov
imul
add
data16
jge
jno
mov
addr16
mov
mov
aam
pop
int3
mov
and
js
jle
mov
dec
mov
cmp
loope
insl
in
test
test
enter
lcall
cmp
or
push
mov
dec
into
hlt
dec
fwait
lods
ret
out
xchg
lock
add
sbb
mov
xor
stos
loope
inc
xchg
sub
addr16
sbb
in
arpl
sbb
ss
int
mov
dec
mov
mov
pop
mov
dec
and
push
and
xchg
sub
insl
insl
sub
mov
insb
bound
out
sarb
fwait
mov
adc
lcall
fs
sbb
fidivl
inc
lock
add
std
cli
jae
inc
cli
js
stos
aad
icebp
xchg
loope
mov
and
divl
cli
pop
inc
mov
cmc
inc
mov
xchg
mov
mov
cmp
stos
sub
mov
iret
jae
mov
pop
and
scas
and
xchg
out
out
rorl
ss
mov
or
inc
rorb
fdivrs
or
fbld
push
sbb
loop
shlb
fs
scas
fistpll
ss
mov
and
stos
fnstenv
push
add
cmpsl
adc
adc
cmpsb
adc
scas
push
mov
mov
aaa
xchg
sbb
gs
out
and
sbb
sub
xchg
fcmovbe
mov
sub
pop
scas
xor
clc
push
jp
into
fimuls
mov
mov
xchg
lret
adc
fmul
movsl
push
and
stc
rorb
cs
fisttps
xor
mov
mov
xor
enter
aaa
push
lds
add
lahf
cld
rolb
mov
fwait
xor
fcomip
in
jle
andb
jecxz
enter
cld
adc
stc
in
jecxz
pop
cld
cli
mov
xor
scas
lods
fdivrl
pop
xchg
xchg
or
mov
pop
pop
mov
inc
leave
xor
test
pop
cli
adc
dec
add
xlat
ja
mov
adc
add
not
push
sahf
pop
ret
ss
jge
push
jmp
lods
cs
mov
fldt
pop
push
cwtl
aad
lods
pop
outsl
jecxz
cmc
and
jno
popa
mov
sub
ss
es
pop
insb
das
sbb
popf
lcall
fimuls
test
mov
jge
bound
int3
dec
out
cmp
inc
ja
inc
sbb
pop
stc
mov
sbb
into
or
xor
hlt
adc
xchg
mov
ficoms
add
cltd
stos
mov
pop
cltd
aam
jne
lret
sub
cmp
push
mov
mov
hlt
jo
lret
fdiv
fcmovne
xchg
dec
sbb
lods
dec
popa
daa
mov
test
sbb
lahf
sahf
push
xor
pop
enter
pop
cwtl
inc
aam
cmp
ds
xchg
jge
test
adc
or
inc
dec
cli
js
leave
and
and
sbb
sbb
cli
add
mov
popl
cmpsb
pop
ja
ror
fs
jns
outsl
cmp
cld
out
jp
jbe
fwait
leave
add
lods
push
lea
mov
lds
lret
repz
adc
xchg
sahf
movsb
push
sahf
mov
lret
ror
out
test
out
mov
movsl
pusha
cmc
gs
test
stos
aad
pop
xor
jnp
inc
arpl
and
imul
movsl
mov
aad
mov
shlb
lds
jp
movsb
mov
push
clc
add
mov
pop
xor
mov
jmp
ret
outsb
pusha
notl
imul
sub
insl
loopne
pop
xor
sub
mov
mov
push
lods
adc
xchg
add
shlb
dec
addr16
dec
dec
pushf
aad
and
fs
cmp
clc
jno
pop
in
inc
outsl
pop
test
arpl
pop
mov
jnp
mov
add
or
mov
cwtl
cmp
adc
jg
mov
jo
fidivrs
xor
je
ds
jne
lret
jle
ss
stos
movsl
jb
test
test
mov
xor
test
xchg
pusha
loop
push
push
cmpsb
cmp
add
aaa
out
hlt
sbb
cmc
ret
or
add
out
sbb
mov
inc
ljmp
push
push
loop
xchg
movsb
dec
pusha
mov
jo
and
icebp
dec
pusha
xor
adcb
jbe
xor
insb
jne
aam
mov
hlt
adc
mov
mov
mov
in
scas
cltd
jp
lods
xor
add
xchg
and
stos
mov
popa
lret
adc
jmp
cli
cmp
jns
out
push
fidivrs
loope
xchg
cmpsl
xchg
scas
std
add
jnp
xor
sub
in
testl
jae
and
cmp
out
mov
dec
dec
adc
cmp
pop
test
mov
xor
push
push
pop
mov
cld
push
shll
ja
push
pop
mov
pushf
call
sbb
popf
dec
je
es
lret
xchg
mov
xchg
mov
aad
out
ja
or
mov
mov
cmp
insb
xchg
es
lods
lods
pusha
lret
leave
mov
nop
pop
xor
fwait
dec
mov
addr16
pop
sub
push
leave
js
leave
cltd
addb
stos
pop
cmp
das
lret
test
cwtl
cmp
push
xor
pop
sub
push
fstl
pop
out
fwait
imul
mov
es
mov
gs
mov
repnz
or
leave
aas
xchg
dec
stc
mov
xchg
fcmovnu
fstl
dec
test
jmp
shrb
int
call
call
ja
inc
cwtl
lahf
call
out
addr16
enter
mov
es
in
pop
cld
pop
xchg
je
jp
jb
call
lea
add
popf
loopne
jmp
pop
cmp
pop
fistpl
inc
jecxz
stc
inc
test
or
sbb
in
movsb
and
cmp
stos
mov
sbb
sub
ja
sub
dec
lock
mov
aam
xor
cltd
and
push
insl
jl
pop
pop
rolb
jmp
dec
imul
jno
inc
fdivp
lods
cs
repz
ds
jecxz
jo
push
es
pop
sbb
mov
pushf
mov
notb
push
inc
out
subb
add
call
sub
fcmove
inc
adc
add
cli
mov
mov
outsl
cli
das
data16
outsl
iret
mov
cld
and
push
lea
iret
mov
pushf
jmp
test
mov
mov
and
push
fcoml
mov
sbb
fldl
adc
sbb
movsl
sub
repnz
test
cwtl
lret
rclb
pop
lcall
mov
int3
pop
mov
fwait
pop
inc
lock
enter
or
js
gs
or
test
mov
fdivs
adc
daa
outsl
push
jne
fistl
ffree
mov
sub
jb
enter
dec
loope
lahf
sub
push
adc
out
inc
out
movl
mov
xor
imul
mov
repnz
sbb
jecxz
daa
and
push
test
sbb
adc
in
movsl
sub
sub
pushf
xchg
mov
cwtl
push
adc
aad
incl
ficomps
sub
insb
fs
test
fwait
and
fldl
jbe
fidivrl
loope
jle
mov
mov
jns
es
mov
imull
scas
dec
sub
jns
loopne
cmp
jo
or
push
xlat
mov
mov
adc
aad
pop
retw
mov
mov
dec
test
cmpsb
fdivs
or
ficoms
imul
xchg
or
jge
xor
fcomps
jecxz
cmc
add
and
ret
push
push
rcl
int
adc
pop
xorl
mov
xchg
bnd
pushf
jg
sub
addr16
insl
loop
cmp
insb
inc
mov
xchg
mov
adc
or
lret
xchg
sbb
sti
sub
je
jl
pop
cld
out
xchg
cs
push
dec
daa
mov
mov
shrl
je
add
int
add
enter
mov
outsb
loope
nop
mov
in
cmpl
test
iret
cmpsl
sub
pop
cli
jl
and
mov
dec
in
sbb
test
test
mov
push
push
cmp
add
test
rorb
pop
mov
les
jg
xchg
in
adc
push
clc
cwtl
push
ror
cmp
pushf
jb
dec
addr16
addr16
adc
mov
roll
es
repnz
jbe
pop
jbe
xchg
out
lcall
inc
icebp
outsl
dec
cs
adc
push
fwait
orl
scas
and
fnstcw
rorb
mov
repz
mov
push
pop
adc
test
lea
cmp
push
ljmp
fisttpl
xchg
loope
mul
xor
add
std
sub
int
call
cld
fdivl
and
enter
and
push
dec
sbb
xor
fsub
push
in
daa
jecxz
xor
push
sbb
test
loop
inc
fildll
test
push
cmpsl
lea
aad
sub
out
push
jg
and
lret
sub
mov
jge
hlt
or
cmp
nop
xchg
jecxz
das
pop
in
in
adc
xchg
dec
inc
jg
imul
xor
add
dec
inc
pop
inc
push
add
mov
cmpsl
push
mov
jmp
pop
xchg
mov
cwtl
mov
lcall
ficoms
jb
push
pop
mov
push
hlt
inc
sub
cwtl
sbb
xchg
popa
test
xchg
xor
jne
lods
aam
mov
and
jae
pop
movsb
movsb
adc
test
cmp
pop
push
cmp
mov
out
adc
adc
add
aaa
xchg
and
popf
test
movsb
jge
sub
mov
adc
xor
setge
fistps
outsb
outsb
rcrl
mov
mov
rclb
mov
pop
stos
popf
adc
add
sbb
into
and
data16
add
xor
popf
pop
xchg
add
xchg
stc
push
mov
fsubr
lea
mov
insb
sub
sub
fstpt
mov
xchg
loopne
jecxz
xchg
imul
roll
movsl
sbb
aam
in
pop
xchg
and
inc
dec
and
and
in
aam
xchg
ja
mov
ficompl
ret
cmp
iret
mov
sub
dec
pop
ror
test
mov
std
imul
push
testl
push
add
imul
mov
and
jnp
or
sbb
push
add
mov
cmp
add
jns
xchg
mov
xor
sbb
rcll
mov
fstpt
test
xchg
xor
or
mov
fld1
xor
xor
cmpsl
aad
enter
pop
jp
push
xchg
sarb
and
jnp
pop
sbb
mov
cmp
mov
mov
je
dec
and
jmp
mov
jno
push
dec
jo
pusha
loop
push
mov
into
fiaddl
adc
pop
clc
jp
jb
insl
or
xor
xlat
cwtl
xor
popf
lahf
mov
jnp
ret
add
mov
out
and
sti
lds
sbb
pop
cltd
js
pop
or
lret
notl
lds
cmp
sbb
xchg
xor
xor
cmc
ret
outsb
cmp
sar
sub
sahf
js
and
rorb
shlb
push
xor
mov
mov
cmp
jne
arpl
test
stos
insb
lret
mov
sub
push
pop
outsl
or
push
call
aam
shl
sbb
fs
push
ss
mov
mov
add
shr
arpl
mov
fldl
shrl
cwtl
mov
imulb
sbb
pushf
push
or
mov
adc
ret
push
adc
mov
inc
scas
jbe
pop
shrl
fsubrs
sbbl
pushf
sub
call
cmp
cmp
jne
movups
cld
pop
out
sub
pop
mov
sub
sbb
jmp
inc
jl
inc
xor
outsl
sbb
pop
push
add
mov
sub
push
inc
add
dec
push
sub
mov
jmp
adc
sbbl
jmp
and
pop
pop
sub
pop
mov
outsl
lcall
add
xchg
jecxz
imul
gs
call
sbbl
sub
in
cmpxchg
cltd
xchg
mov
mov
ja
and
pop
fcmovu
adc
in
pop
jle
xchg
cmpsb
pop
cmp
and
xor
pop
mov
fldcw
dec
xchg
jb
cmp
lret
lods
lcall
xlat
notb
inc
pop
mov
and
fsubl
jp
rcrl
out
push
test
negl
and
xor
addr16
cltd
add
call
xchg
jmp
scas
aaa
bnd
xchg
scas
mov
out
jle
sti
push
js
dec
or
xor
fsts
mov
or
cmp
adc
popa
fs
push
in
clc
test
mov
pop
sbb
jnp
lods
imul
jmp
repnz
cmp
push
dec
mov
cmc
mov
inc
jno
movb
fcomp
mov
ret
or
mov
lods
loopne
sub
mov
xchg
push
cli
pop
sahf
dec
sub
loop
mov
leave
cld
add
push
dec
test
outsb
pop
xor
rcrb
mov
imul
mov
push
out
and
std
mov
scas
xor
sahf
test
out
fisttpl
xchg
adc
inc
mov
xlat
pop
jno
sub
sahf
sub
fnstcw
mov
into
push
clc
cmp
inc
lahf
shufps
ljmp
sbb
lods
jns
repz
lahf
lock
xchg
push
rolb
fcompl
push
or
push
jnp
sub
mov
repz
mov
lcall
push
ss
mov
fucomip
adcl
pop
pop
jmp
push
mov
sahf
rcrb
or
xchg
mov
mov
fnstcw
shlb
sbb
mov
lcall
xchg
lock
pop
sub
popf
lcall
ds
inc
cmp
sarb
mov
ret
add
lods
sbb
mov
lcall
aaa
ret
daa
outsl
test
and
push
and
xchg
fdivs
faddl
and
jae
ja
cld
adc
cmp
xor
xorl
mov
gs
jno
mov
rclb
fists
call
ficoml
das
sbb
pop
mov
adcb
sbb
push
fiaddl
pop
shr
add
lret
xchg
rcrb
dec
inc
adc
push
inc
mov
fisttpll
insl
loope
add
xor
cmp
pop
mov
mov
inc
enter
jns
test
mov
pop
jno
std
and
int
data16
bound
ret
or
fnsave
add
nop
cmp
cs
lea
int
or
jo
cmp
popf
xchg
lds
filds
mov
cld
add
cmp
test
mov
das
scas
sbb
lret
xchg
std
or
sar
into
test
jp
jns
xchg
leave
dec
mov
mov
leave
and
inc
adc
scas
filds
dec
mov
in
loop
lret
in
mov
xor
sbbb
iret
inc
cld
sub
ficoms
jno
and
mov
pop
xlat
shlb
push
xlat
pop
and
mov
lret
out
loopnew
lods
xor
ja
std
mov
sub
fldenv
mov
test
and
pop
pop
call
je
out
xor
jbe
es
xchg
rcrl
js
hlt
xor
and
push
pushl
push
sub
push
sub
arpl
push
push
add
shll
jae
inc
test
sbb
pop
nop
js
movsb
jmp
cmp
cltd
shlb
mov
pop
inc
jo
jg
inc
add
aad
mov
lcall
dec
stos
add
mov
mov
lret
jo
rorb
rorb
and
xor
sub
add
jg
in
pop
pop
stos
jg
jp
sbbb
add
jp
mov
and
xor
inc
jb
fisubrl
sbb
and
dec
push
je
pop
test
jnp
dec
lahf
outsl
bound
dec
and
xor
dec
ljmp
and
sub
pop
xor
out
sub
sbb
inc
orl
add
sub
ret
ss
ds
daa
push
xor
imul
pop
ss
fwait
mov
and
shlb
movsl
mov
add
mov
es
xor
ds
fdivs
pop
cmp
rorl
and
lods
std
push
inc
and
or
jae
or
in
jp
aas
cld
mov
mov
cli
push
shlb
cmpsl
outsb
in
pop
mov
test
jmp
mov
lods
dec
fisttpll
int
adc
insl
mov
fidivl
pop
incl
lret
in
dec
pusha
jmp
js
cwtl
arpl
nop
and
mov
sahf
imul
push
xchg
sub
add
call
fwait
inc
mov
bound
incb
in
add
mov
dec
jecxz
aad
bound
jg
adc
add
jl
sub
adc
add
xlat
dec
xor
add
movsl
arpl
fistpl
inc
call
and
lock
rorb
mov
mov
loope
movsb
int3
mov
cmp
shl
or
insb
out
js
mov
aam
subb
add
adc
push
xor
insb
jno
mov
and
mov
mov
cmp
or
test
cmp
dec
cmpsl
addr16
mov
inc
gs
mov
scas
xchg
std
sub
mov
xor
ljmp
or
fwait
xor
into
movsl
rorb
popf
push
shrb
fs
xchg
loop
xchg
push
cli
stos
xchg
call
lahf
mov
push
dec
mov
lcall
in
jp
sbb
jmp
imul
rolb
outsb
mov
jg
xor
stc
aad
pop
mov
dec
aaa
xchg
ja
jmp
fdivs
cltd
repz
iret
test
dec
outsl
cld
jmp
adc
mov
pop
daa
push
cwtl
daa
lahf
cmp
enter
inc
scas
xor
jmp
scas
jns
jmp
ffree
mov
scas
push
or
cmp
sub
pop
nop
pop
lea
ret
ror
loope
xchg
pop
shr
mov
and
pop
popa
mov
adc
jb
call
cli
add
add
adc
dec
dec
test
or
sbb
subl
add
mov
pop
push
loop
sarl
dec
sbb
jecxz
and
pusha
inc
arpl
mov
dec
repz
jmp
xchg
mov
ret
mov
mov
fstps
xor
dec
shlb
push
xchg
call
mov
pusha
pop
or
sub
shrb
xor
mov
mov
cmp
mov
jp
pop
iret
shl
mov
inc
stos
inc
jae
pop
stos
mov
pushl
mov
mov
dec
adc
sub
fldenv
sub
and
inc
jbe
xlat
push
push
clc
xor
test
ja
rclb
bound
shll
pop
aas
into
push
pop
xchg
mov
pop
xchg
add
fucomi
je
jno
lock
xor
filds
push
int
movsl
or
pop
dec
mov
mov
pop
add
lods
jns
imul
repz
call
push
mov
jne
pop
add
or
mov
mov
dec
pop
hlt
repz
imul
les
out
aas
in
sub
push
pop
out
fwait
jle
lods
sub
lahf
hlt
sbb
test
ss
xor
aas
mov
orb
mov
add
das
jp
mov
popa
cmc
fwait
mov
inc
fiadds
push
adc
cmp
cltd
popf
jnp
cmp
sbb
mov
cmpsb
xchg
mov
push
fwait
and
xlat
pop
daa
mov
jne
mov
lea
mov
outsb
jl
mov
mov
push
mov
xchg
loope
mov
ljmp
arpl
aad
mov
fadd
shrl
or
scas
jb
jbe
inc
ljmp
daa
xchg
adc
pop
leave
mov
movsl
mov
nop
je
push
insl
dec
adc
loop
xor
push
jecxz
cmp
mov
sar
xor
stos
iret
ja
clc
lret
sar
inc
sbb
or
aad
and
test
adc
inc
cmpsb
out
adc
out
xchg
xchg
cmp
hlt
scas
push
movsb
or
push
mov
pop
jge
ljmp
mov
mov
sbb
dec
lahf
clc
jle
mov
sbb
int3
outsl
sub
int
repnz
pop
push
rorb
stos
or
nop
xchg
sti
in
xor
pop
jecxz
arpl
arpl
cmp
fcompl
mov
dec
jmp
adc
iret
dec
or
test
test
sbb
leave
cwtl
pop
arpl
pusha
or
or
adc
sub
jne
fmul
ss
data16
js
out
cmp
sbb
pop
pop
rcrl
enter
shrb
repz
inc
aam
pop
or
sbb
lcall
mov
add
jle
nop
in
cmp
out
mov
push
xor
sbb
ja
inc
shr
out
notb
dec
les
ficomps
pop
scas
popa
push
ds
stc
outsl
lahf
ficoms
sub
push
push
scas
and
je
in
adc
loop
nop
fidivrs
std
xor
mov
inc
iret
mov
loop
mov
push
pop
es
sbbl
add
test
mov
lods
sbb
jge
data16
lods
ret
std
or
aad
movsb
idivl
daa
sub
sub
jmp
bound
into
pusha
scas
push
jg
adc
mov
and
test
test
addr16
lds
fsubrl
mov
scas
es
and
into
je
popf
and
fistl
out
mov
xchg
mov
inc
fmuls
push
mov
jnp
xchg
adc
stc
stos
sub
add
inc
push
ljmp
jns
push
stos
iret
mov
outsb
movswl
dec
pop
ss
mov
adcl
push
lret
xor
cs
and
adc
push
lock
pushf
decl
jecxz
lcall
sub
inc
or
test
fcoml
mov
cmp
jp
jb
aam
jbe
jo
in
int
fnclex
gs
mov
sbbb
xor
push
dec
movsl
jbe
mov
dec
out
cmc
loop
js
and
sahf
mov
push
nop
fldcw
dec
sbb
addr16
push
dec
jecxz
sub
sbb
add
xchg
divb
push
lods
ficomps
inc
push
aam
sub
aad
dec
sub
test
jl
pop
repnz
push
and
mov
adc
xchg
and
and
daa
cs
or
inc
fmuls
mov
push
add
dec
movb
out
insb
cmpsb
or
sbb
sbb
decl
inc
push
imull
popf
mov
icebp
inc
loop
incb
and
sarl
xor
in
aam
dec
dec
test
aam
push
out
int3
test
push
icebp
xchg
dec
sbb
mov
pop
mov
pop
sub
sbb
push
jmp
ret
adc
jae
cltd
clc
pop
adcb
icebp
add
ret
push
dec
mov
mull
or
cltd
inc
insl
pop
leave
adc
cmp
xor
insl
xchg
pop
rcrl
sub
arpl
shll
mov
addr16
in
dec
add
xchg
push
in
dec
add
jnp
call
pusha
sbb
dec
mov
jmp
nop
aam
lret
test
loopne
iret
inc
adc
xorb
cmp
imul
mov
pop
mov
inc
leave
sub
add
movsb
dec
mov
lea
mov
repz
pop
mov
mov
int
imul
push
dec
pop
stos
mov
arpl
leave
leave
popa
mov
rcll
cmp
add
lea
mov
add
repnz
jae
push
lcall
jo
testl
push
and
dec
lods
mov
add
mov
inc
adc
aaa
adc
imul
and
ret
fstpl
or
sahf
aaa
jp
sbb
aas
adc
adcb
cmp
popf
xor
add
arpl
and
fcomp
sbb
lods
jecxz
fistps
fnsetpm(287
cli
xor
mov
out
cmp
mov
lock
and
mov
xor
push
add
add
shr
cmp
gs
mov
inc
sbb
sub
adc
shll
xchg
les
or
icebp
enter
xor
dec
daa
push
ja
sahf
pop
lods
cwtl
jmp
xlat
cmp
je
sub
or
leave
and
ljmp
aad
dec
inc
sbb
das
xchg
shrl
cmpsl
repnz
inc
out
adc
orb
jl
mov
imul
or
lock
dec
inc
and
pop
add
out
pop
jl
cmpl
ja
dec
xchg
add
andl
divb
jmp
adc
popf
insb
pop
xor
pop
mov
xchg
outsb
ja
loop
aas
daa
aas
pop
jp
dec
add
push
xchg
les
out
cs
mov
lret
repz
sbb
jmp
or
sbb
lea
lods
jne
fdivrp
sti
or
and
movsl
popf
jge
mov
in
xchg
aam
ja
cld
cmp
or
sbb
mov
imul
push
push
jne
loopne
les
inc
in
test
iret
xchg
mov
dec
inc
std
mov
sbb
sub
push
lods
add
and
mov
subl
fwait
dec
pop
jns
xchg
outsb
add
fyl2xp1
inc
mov
mov
ficoms
xor
repnz
test
rcll
test
cmp
mov
pop
mov
aam
dec
or
lock
push
lds
rolb
outsb
je
repnz
inc
imul
jno
mov
out
insl
inc
nop
mov
dec
je
fwait
insb
shrl
outsb
sarb
mov
repnz
scas
movsb
push
mov
shl
aas
pop
jle
jp
sub
jae
add
xor
aad
push
pusha
sti
ret
lret
inc
rcll
xorl
cwtl
and
push
cmp
sub
mov
daa
stc
loop
ret
test
test
iret
mov
push
add
decl
dec
into
rol
pop
fists
es
dec
adc
test
ds
aam
popf
dec
pop
lods
xchg
push
int3
mov
adc
shl
pop
inc
jb
inc
int3
jne
std
adc
ret
mov
xchg
pop
data16
xchg
cli
mov
push
popf
xor
cmp
sub
pop
pusha
in
and
or
xlat
test
in
adc
pop
rcrl
mov
aam
rcll
test
adc
stos
push
push
mov
jbe
sti
rorb
sub
sub
arpl
pusha
pop
fimull
sub
mov
stc
cmp
adc
in
push
sub
or
sub
inc
adc
sbb
lea
jno
mov
add
int3
sub
pusha
rclb
dec
dec
int3
adc
loope
mov
add
clc
outsb
inc
dec
gs
test
add
int
push
movsb
lds
or
jo
std
inc
jns
cli
mov
shlb
pop
and
roll
cmp
into
and
rcrb
imull
mov
xor
inc
lret
add
mov
call
or
leave
flds
jbe
outsb
pop
and
in
jge
sbb
scas
cmp
mov
pop
inc
mov
and
mov
push
incb
stc
xlat
cmpl
les
jle
rorl
add
bound
pop
dec
and
mov
dec
inc
enter
sub
dec
inc
sahf
in
pop
pop
cltd
xor
shlb
cmc
mov
and
inc
mov
xor
stos
psubsw
xor
and
test
mul
mov
push
fsubrl
jo
mov
insl
dec
stc
andl
out
cwtl
mov
sahf
iret
sub
jmp
lcall
sub
cmpsb
lds
push
sub
push
push
cmp
leave
add
xchg
inc
lods
xlat
xchg
test
inc
mov
xor
cmp
jp
xchg
daa
add
test
inc
daa
fcoms
imul
push
loop
popf
fisubrl
jp
mov
xor
gs
in
outsb
out
enter
dec
or
mov
xor
clc
jb
push
icebp
out
cmpsl
inc
sbb
push
adc
sahf
test
pop
aam
popa
dec
and
std
mov
xchg
out
xchg
sub
adc
xchg
inc
jne
mov
sbb
or
push
in
or
ret
pop
mov
mov
inc
inc
adc
adc
xchg
out
cmp
add
sub
dec
fsqrt
or
in
sbb
les
sbb
jge
inc
xchg
call
dec
in
xchg
data16
jns
adc
adcb
cmpsb
or
aam
stc
jno
or
cmp
add
xchg
inc
stos
jns
sbb
rep
mov
xor
leave
pop
add
inc
or
add
mov
mov
pop
pop
mov
sub
mov
xchg
stos
out
idivl
add
sub
push
repnz
mov
sub
ret
out
add
mov
ret
and
mov
inc
loopne
lret
and
or
sti
inc
loop
xor
sbb
and
in
inc
pop
jecxz
push
test
aam
jae
ret
outsb
aad
cmp
mov
cmp
and
pop
or
mov
jmp
js
outsl
insb
xor
pop
adcb
ss
or
push
repz
lock
sbb
shlb
xchg
pop
jne
test
mov
popf
mov
call
adc
ret
fs
outsl
ret
push
cld
xchg
aad
call
int
test
in
cmp
insb
cmp
xor
add
xor
adc
into
push
loope
je
out
leave
jno
mov
sbb
testb
push
lret
test
add
push
cmp
mov
aam
inc
xor
inc
clc
cld
xor
inc
aas
js
addr16
sar
adc
test
jb
inc
xor
lahf
xchg
mov
push
fildll
popa
mov
pop
mov
dec
cwtl
jge
int
repz
nop
and
cwtl
out
adc
fisttpl
sbb
dec
mov
mov
jb
add
out
stc
insl
daa
push
inc
push
rcrb
pop
ud1
or
gs
stos
outsb
dec
dec
push
lea
fstpl
rorb
xchg
push
aaa
mov
xor
jo
inc
ljmp
stos
cmc
mull
repz
and
jle
dec
pop
mov
cmpsb
push
imul
mov
cmp
imul
int3
cmpb
lock
mov
insb
sub
inc
sub
loope
fs
inc
daa
ficomps
movsl
mov
pop
ffreep
pop
cld
fadd
sub
frstor
aaa
cmp
or
mov
fwait
pop
inc
stos
arpl
jle
mov
cmp
hlt
test
inc
ficomps
rolb
and
sbb
mov
push
cmpsl
pop
xlat
adc
outsl
dec
int
insb
or
lods
dec
mov
or
xchg
mov
jge
push
or
mov
sbb
test
addl
lock
neg
mov
mov
cmpsl
or
xchg
stos
jne
and
int
adc
xlat
pop
insb
jp
xor
xchg
inc
push
mov
or
gs
shl
mov
clc
adc
jno
add
lahf
hlt
inc
cmpl
shll
subb
xchg
push
jecxz
inc
pop
xorl
fisttpll
out
jmp
insb
fiadds
xor
pop
dec
xchg
inc
jecxz
imul
rcll
test
fwait
idivb
loopne
mov
mov
xor
mov
mov
mov
adc
mov
in
aam
pop
or
sbb
mov
aas
mov
sarb
stos
push
jge
dec
lret
cli
movsb
lahf
xchg
xchg
int
jae
sbb
ficompl
fsubrs
or
jne
int
jo
adc
or
and
popa
lds
jne
in
sbb
or
jecxz
loop
push
adc
ja
test
cld
jge
mov
jmp
decb
lds
xchg
pop
and
mov
int3
sti
loopne
into
pop
sub
xor
jae,pn
addr16
jae
pop
push
fcomps
pop
loope
adc
xchg
fistl
cli
out
jo
lahf
pop
hlt
xor
cmp
loope
and
popf
das
inc
aas
or
sub
popa
bound
ud0
xchg
dec
popf
push
imull
mov
fcomps
dec
pop
aam
mov
xchg
es
pushf
xchg
mov
leave
and
jl
fistpll
cmp
cli
jbe
in
fucomi
cli
sub
xlat
xchg
out
jnp
in
adc
cmp
scas
xor
imul
or
cmp
mov
js
mov
arpl
lods
and
fcomps
add
cmp
adc
outsb
mov
mov
cmpsl
popa
int
fcoms
add
cltd
push
lret
scas
movsb
jp
stos
pop
in
loope
jb
inc
movsb
push
push
ds
add
fidivs
dec
jmp
psubq
jae
adc
cmpl
pop
push
push
push
or
loop
xchg
dec
push
in
pop
data16
xchg
sub
inc
shlb
roll
pop
jecxz
sbb
mov
inc
lcall
cmp
pop
test
or
das
mov
pop
repnz
sbb
sarb
test
inc
repnz
fimuls
add
and
adc
clc
pop
inc
mov
dec
pop
push
ret
jp
mov
rcll
aaa
fiadds
mov
sub
push
pop
jo
fnsave
shrl
xchg
jmp
rol
gs
inc
iret
xor
mov
mov
sub
leave
arpl
jl
inc
xchg
add
fs
in
movsb
push
iret
cmp
enterw
stos
pop
into
adc
jmp
adc
xchg
jl
sbb
dec
in
mov
les
fcmovu
jl
aaa
call
dec
gs
jmp
and
fcomi
fildll
xchg
lea
pop
cld
loope
es
adc
pop
mov
dec
cmp
sub
call
lods
mov
bound
and
cli
ljmp
mov
cmc
neg
jb
data16
sbb
adcl
mov
cmp
or
xor
pop
pop
pop
aaa
add
xchg
aam
dec
mov
test
and
xchg
cmp
out
xor
xor
xchg
shlb
inc
das
cmp
add
imul
pop
in
es
xchg
jecxz
aam
ds
lds
and
sti
arpl
call
dec
gs
jp
fistl
repz
aam
iret
test
mov
mov
xorl
fistpl
sbb
stos
shll
xchg
pop
jnp
xor
xchg
push
pop
inc
xor
call
in
sub
and
mov
aad
lods
cmp
sbb
bound
movsl
mov
out
ficoml
leave
lods
cwtl
lock
ficompl
cmp
push
and
lea
lret
scas
lret
mov
sbb
mov
fidivs
cmpsb
inc
popf
mov
dec
pop
pop
dec
sbbb
jb
jns
sbb
mov
mov
sub
jns
dec
cld
sti
data16
pop
xchg
leave
scas
inc
mov
inc
hlt
pop
cmp
sub
add
arpl
pop
or
mov
fbld
jle
mov
xchg
imul
jae
mov
mov
mov
nop
movsl
and
jg
pushf
mov
mov
sub
cmp
push
cwtl
xchg
inc
outsb
push
xor
jb
out
mov
jmp
inc
adc
sbb
ror
adc
cli
xlat
bound
loope
out
data16
xchg
mov
fidivs
out
pop
cmp
ror
lret
ficompl
xchg
pop
test
add
test
jp
sbb
mov
out
into
mov
dec
es
int
mov
and
fldenv
lahf
dec
mov
cs
xor
mov
add
pop
dec
cmpsb
ret
pop
push
xor
cmp
test
bound
lds
cmpsb
mov
jmp
test
pop
push
and
outsl
aas
out
test
pushf
cltd
push
jno
adc
jp
jg
push
cli
xchg
cltd
sbb
sbb
mov
mov
adc
in
lret
xchg
mov
sub
mov
ds
adc
jmp
testb
add
xchg
sbb
mov
cmpsb
mov
out
mov
jp
sbb
scas
jp
pusha
es
inc
rcrb
inc
adc
push
mov
pop
or
std
mov
roll
mov
sarb
cmp
xchg
leave
aam
jne
push
mov
inc
xorl
push
mov
in
in
xchg
aaa
arpl
inc
sbb
test
fldl
or
scas
xor
fidivl
xchg
mov
dec
adc
fimull
cmp
xor
cwtl
push
jge
jmp
push
sbb
aad
rcll
pop
pop
mov
fstps
fists
ljmp
shl
lods
js
add
cmp
nop
scas
lods
inc
push
ss
stc
adc
push
fdivs
add
fwait
xor
cli
add
ds
and
ret
sar
testl
or
shrb
dec
test
add
mov
pop
mov
pop
pop
or
popf
sub
push
cmp
incl
sbb
dec
aad
and
pop
jo
lds
pop
xchg
pop
and
out
inc
les
lret
sub
mov
arpl
sahf
insl
aad
loope
mov
std
mov
imul
ljmp
cli
ret
imul
mov
aaa
aad
imull
jge
loope
push
jle
mov
out
push
push
in
and
cmpsb
mov
stc
mov
push
mov
loop
xor
push
test
gs
mov
xchg
or
cmp
jp
shrl
cmp
cmpsl
lods
jno
xchg
push
repz
or
std
mov
inc
push
stc
loope
mov
out
pop
lods
mov
sub
out
push
mov
sahf
scas
jno
cmpsl
push
stos
lods
xor
adc
clc
aad
aad
mov
cmp
mov
out
add
das
iret
or
inc
addr16
sbb
hlt
lea
pop
aaa
out
mov
mov
shll
loop
shl
mov
sarb
scas
lahf
and
loopne
mov
jns
push
inc
insb
or
pop
jnp
adc
mov
sahf
jb
jbe
and
jnp
enter
mov
pop
push
rcll
lahf
into
jl
js
or
mov
pop
inc
inc
inc
loope
push
out
cmp
xor
push
pushf
sbb
xor
pop
add
arpl
addl
inc
mov
rol
jno
sbb
mov
or
out
imul
cld
sub
leave
scas
sbb
imul
adc
lret
test
dec
mov
mov
push
fwait
jg
xchg
xor
jp
dec
fisubs
adc
mov
lcall
ja
inc
ret
movsb
aaa
jno
jo
and
mov
enter
jb
enter
push
mov
jmp
mov
push
das
incb
pop
cmp
cltd
pop
mov
sbb
mov
jg
sbbb
push
loopne
sub
and
popa
repnz
ja
pop
sbb
shrl
jnp
pinsrw
cli
mov
inc
mov
lahf
cli
fs
js
ret
push
ret
mov
movsb
lods
xor
sbb
out
arpl
and
dec
mov
fdivrl
mov
sub
pop
cmp
jg
in
arpl
or
adc
dec
adc
pop
xor
push
clc
jmp
cwtl
push
aas
jno
cmpsb
push
test
in
popf
std
push
orl
push
stos
push
stos
lock
mov
sbb
sahf
emms
ss
popa
add
cwtl
imul
into
je
mov
jle
shll
xor
push
push
sahf
push
jae
cmp
xor
cwtl
jno
sarl
jmp
in
stc
sbb
cld
mov
outsb
and
mov
inc
movsb
adc
bound
popa
xor
and
cwtl
push
mov
jmp
mov
scas
stos
push
mov
pop
xchg
jne
jns
cwtl
mov
dec
fisubs
adc
stos
xchg
lds
test
test
xor
fstpl
ds
jle
adc
inc
sub
mov
sub
add
es
gs
imul
push
push
ficompl
sub
ss
test
dec
push
aam
jle
mov
add
xchg
hlt
shrl
rcl
ss
cmp
or
outsl
and
pop
lds
arpl
int
mov
shrl
aas
and
dec
add
dec
jl
iret
imul
in
lcall
xchg
les
inc
pop
push
xor
cmpsl
mov
inc
and
cmpsl
mov
and
les
sub
pusha
sbb
mov
or
repz
daa
orb
add
adc
shr
shrb
xchg
sbb
lea
mov
xor
fnstcw
pop
clc
add
lods
aad
jecxz
pushf
xchg
lret
stc
sub
pop
pop
test
mov
scas
adc
push
mov
test
shlb
dec
in
bound
lods
sub
int
jbe
xchg
in
adc
dec
mov
xchg
mov
pushf
test
lds
in
jo
das
adc
dec
pop
jo
repnz
mov
push
in
fwait
xor
jns
pop
sub
cli
adcl
add
leave
pop
mov
xchg
mov
inc
daa
mov
daa
jg
dec
pop
and
and
das
sub
push
aad
loopne
pop
out
or
pop
sbb
sub
idivb
pusha
cmp
add
das
fstl
xchg
scas
push
shlb
sub
gs
es
aaa
pop
sarl
sbb
icebp
and
sbb
mov
sarb
mov
pusha
xchg
add
add
xlat
out
mov
in
cmpsl
or
pop
add
cmp
add
popf
std
jge
insl
jae
jno
jecxz
and
mov
cs
push
call
push
push
lea
inc
jnp
scas
xor
inc
push
fistpl
mov
out
cltd
outsl
xchg
pop
push
push
sub
jo
call
sbb
adc
js
mov
mov
cmp
in
mov
mov
xchg
pop
jns
sahf
sarb
hlt
sbb
inc
dec
dec
out
xor
inc
cld
jno
fidivrs
sub
or
xor
and
pop
sub
lea
adc
sub
add
cs
mov
xchg
hlt
cmp
push
mov
xchg
rolb
push
xor
mov
mov
push
jno
pushf
lock
xchg
cmp
loop
sbb
test
inc
in
mov
add
shr
push
es
pop
pop
mov
inc
or
pusha
jno
add
fisubs
cwtl
bound
cmp
mov
push
das
push
ficomps
xchg
mov
cld
cmc
push
cmp
xchg
push
js
sub
pop
fiadds
popf
inc
dec
jo
add
ret
xor
loop
sub
lret
popa
fnstsw
fidivrl
adc
inc
and
sti
test
dec
adc
aam
ror
lds
dec
push
fcmove
jp
lahf
push
cmp
add
pushfw
sbbb
xchg
scas
add
outsb
cmpsb
in
sub
imul
push
xor
xchg
loopne
loop
ljmp
cs
cmpsl
jno
xor
aam
hlt
ss
dec
jg
out
fcmovne
cli
sbb
pop
pop
fsub
cwtl
mov
movsl
push
cmc
sbb
roll
data16
inc
movl
add
lods
in
lds
insb
ret
xor
fdivs
or
popf
jnp
inc
rcl
xchg
mov
test
ret
push
test
push
lods
inc
popf
xlat
ret
jle
add
loopne
test
inc
sahf
dec
cmp
push
push
lock
push
insb
fistpll
cs
inc
cltd
pusha
or
movsl
ss
adc
clc
mov
mov
ds
imul
popa
mov
or
lods
lods
loop
mov
cmp
mov
mov
fistpl
std
dec
std
xor
shrl
std
inc
cmpl
dec
imul
cmp
repnz
sbb
jb
neg
scas
xor
mov
out
test
lahf
cmp
mov
inc
not
inc
add
mov
add
aam
lods
mov
roll
inc
push
dec
jle
aad
out
or
mov
and
mov
sarl
jne
xor
mov
movsb
mov
adc
fimuls
loop
out
je
leave
and
outsb
cmp
add
inc
inc
dec
fwait
aaa
or
mov
frstor
jecxz
clc
inc
mov
jle
out
mov
sbb
into
les
inc
lods
pop
int
dec
sbb
inc
jg
iret
xchg
ret
or
fstpt
xor
jnp
dec
shlb
push
lock
pop
inc
jae
xchg
xor
cmpsl
arpl
cltd
aad
insl
fstpt
js
lods
mov
int3
in
add
push
std
mov
scas
ja
add
xchg
adc
mov
pop
pop
sbb
insl
adc
adc
les
addr16
adc
mov
inc
mov
push
lret
mov
add
in
popa
push
xor
mov
mov
js
fidivs
jno
jae
clc
es
outsb
popa
pop
mov
mov
loopne
cmp
push
jae
pop
pop
loopne
outsl
pop
mov
and
sub
adc
cmpsb
fmull
jns
mov
or
rcrl
inc
cli
push
out
test
ljmp
mov
cmp
and
xor
mov
mov
inc
aas
dec
pusha
jo
mov
xchg
mov
inc
fcmovbe
icebp
xchg
cmpsl
cmp
cmp
out
fmull
xchg
cltd
xor
out
inc
test
mov
lea
or
cmp
mov
add
and
mov
adc
outsb
and
ss
mov
push
dec
mov
addr16
fcoms
jp
push
push
mov
pop
outsb
jne
xchg
test
adc
xchg
mov
mov
jl
push
repnz
lret
jg
decb
mov
lods
jae
scas
mov
sbb
sub
insl
movsl
push
pop
pop
dec
bound
std
sbb
jnp
vxorps
push
push
or
call
adc
in
jg
roll
test
cmpsb
and
xchg
stos
aas
mov
add
inc
push
lahf
dec
push
jp
sbb
or
sbb
ds
enter
fwait
push
push
stos
adc
fildl
rcr
and
ficomps
sub
pop
adc
cmp
pop
out
mov
cmp
xchg
lahf
push
or
ss
pop
outsl
jnp
loopne
xor
loope
push
push
cld
sub
lods
lret
andb
repnz
push
mov
pusha
lods
out
jg
popf
mull
sbb
call
repnz
js
mov
call
stc
call
xchg
mov
mov
repz
cs
movsb
fcmovu
test
pop
cmp
mov
add
ljmp
xchg
push
add
push
sub
aam
add
xorb
push
sti
in
xor
test
add
dec
fisttpll
scas
push
push
lcall
cli
add
push
and
add
xchg
inc
or
std
addr16
shll
cs
iret
cwtl
jl
jle
imul
repz
pushl
loopne
call
lock
hlt
fwait
js
jae
pop
js
xor
or
xchg
sub
push
das
cli
aad
cmp
or
mov
enter
push
push
mov
xchg
inc
cmovne
les
outsl
fiaddl
rdpmc
adc
rcl
jnp
insb
test
mov
sti
out
xor
in
js
imul
push
or
jle
add
inc
outsb
mov
dec
rcrb
cltd
ficompl
lds
repnz
xor
popf
sbb
inc
lahf
adc
ficoms
pop
mov
lods
shll
leave
mov
pop
sbb
movsb
shlb
adc
mov
xchg
and
jb
jmp
jl
push
pop
jmp
pop
in
cmpb
loope
push
sbbb
add
mov
adc
push
push
and
mov
xor
sub
inc
xchg
pop
out
xchg
jle
sbb
adc
cmc
cmpsb
and
add
aaa
pop
leave
shrl
dec
dec
xor
push
xorb
pop
mov
lods
cmpsl
movl
cmp
push
inc
sbb
ja
leave
ja
mov
sub
les
jle
aam
test
pop
adc
sti
dec
out
roll
arpl
bnd
andb
push
ret
cwtl
push
inc
std
inc
sahf
mov
add
addb
pop
jg
cmp
int
push
or
cltd
pop
sahf
mov
test
in
in
mov
push
arpl
cmp
mov
xchg
sbbl
push
inc
mov
movl
movb
scas
test
mov
jb
cmp
mov
fistl
roll
cmc
and
jns
mov
add
fcmovnb
or
insb
insl
xchg
xor
aam
test
cltd
inc
in
aad
icebp
pop
xor
jae
and
loope
mov
jmp
sbbl
shll
sub
into
into
pop
lods
fcomp
or
pop
pop
or
es
inc
ljmp
add
rcrb
lods
cmp
or
jno
adc
and
std
lods
jnp
rorl
sahf
pop
dec
pop
push
data16
mov
or
push
scas
fmuls
xchg
lods
dec
fcmovb
int
pop
out
push
ffreep
mov
stos
lretw
jl
in
jg
and
or
jle
xchg
jae
mov
push
cmp
jmp
sbb
adc
mov
jnp
add
fiadds
lret
movsl
and
movsb
leave
xor
ja
in
repnz
stos
test
sbb
out
pop
cmc
adc
sbb
imul
dec
movsb
xlat
sbb
in
std
sub
pop
fdivrs
lahf
cwtl
xchg
push
fdivs
adc
or
popa
push
xchg
or
movsb
mov
daa
pop
or
xor
cwtl
and
dec
inc
outsl
adc
sbb
add
add
inc
aas
mov
sub
mov
xorl
pop
adc
adc
mov
shr
inc
sarb
nop
loope
push
jae
sub
sub
or
jp
hlt
roll
mov
mov
mov
mov
dec
sub
pushf
leave
pop
sti
sub
sub
cltd
pop
jecxz
jae
jbe
jl
mov
imul
and
sbb
cli
hlt
inc
dec
inc
dec
sub
mov
testb
adc
out
test
mov
cmpsl
roll
xchg
cwtl
sahf
daa
jae
fs
pop
scas
or
aaa
daa
out
mull
xchg
push
xchg
ja
test
dec
cwtl
jg
ds
les
jne
andl
bound
cmpsb
lahf
sti
and
movsl
xor
push
jb
inc
in
or
movsb
fcoms
sub
test
pop
fists
fldt
outsb
xchg
push
push
jno
cmp
add
or
or
lret
lds
fstps
shrl
add
daa
xor
inc
add
movsb
mov
into
cmp
sub
call
xchg
pop
cmp
pop
shrl
push
daa
jp
lock
lret
test
sbb
push
jp
mov
jge
and
inc
lcall
jns
sbb
adc
mov
into
popf
mov
sub
and
cmpsl
inc
add
addr16
mov
test
hlt
xchg
xchg
ja
mov
lods
cwtl
and
add
stc
test
push
cs
movsl
mov
lea
mov
xchg
bound
fmulp
xor
in
add
pop
popa
iret
lahf
push
orl
sbb
pop
add
std
push
mov
mov
nop
movsb
jl
popa
adc
fisttpl
cmc
push
adc
test
outsl
push
jle
push
sub
fdivs
hlt
add
mov
imul
xchg
lcall
pop
adc
mov
dec
call
daa
xchg
popf
loopne
inc
into
mov
jl
test
mov
cltd
int
mov
xchg
pop
mov
orl
cld
ljmp
repz
xor
cmp
jns
arpl
inc
push
mov
jp
ljmp
pushl
cmp
adc
mov
lds
inc
xor
jnp
fisubs
jb
mov
sbb
sub
inc
pop
xchg
mov
inc
add
insb
ret
into
lods
xor
fldl2t
push
xchg
sbb
inc
adc
xlat
pop
mov
fidivl
into
dec
mov
test
sbb
xchg
sbb
and
mov
mov
movl
dec
in
jle
adc
xchg
shrl
push
inc
cwtl
jae
and
cmp
sbb
sbb
fs
mov
lcall
mov
add
or
orb
jmp
and
pand
adc
scas
dec
test
cmpsb
dec
test
push
xchg
jmp
shll
sub
pop
pusha
jmp
insl
xor
jge
test
push
popa
jmp
lods
rep
jae
or
add
mov
add
icebp
shrl
dec
test
mov
xor
lock
das
pop
jle
fucomp
pop
and
inc
scas
cmpsb
push
push
or
ds
cmp
cmp
sbb
xchg
jb
arpl
jg
test
in
cmpsl
xchg
sub
out
pop
mov
daa
mov
inc
jb
pop
dec
popf
mov
imul
mov
clc
mov
or
pop
sti
dec
push
mov
mov
mov
aad
cmc
mov
aad
and
dec
dec
test
fs
add
adcl
push
test
xlat
stos
call
icebp
ret
les
jo
mov
out
push
xchg
lahf
sahf
clc
mov
jg
cmpsb
es
cwtl
xlat
imul
add
jno
adc
dec
cmc
rcrl
dec
adc
sub
outsl
lds
pop
jl
cmp
cmp
adc
scas
jns
sub
lcall
sbb
or
test
and
sub
mov
inc
lahf
push
push
insl
mov
dec
cld
xchg
cmp
jmp
fmull
lahf
adc
inc
push
outsb
xor
aas
leave
dec
mov
out
aaa
lahf
lods
pop
jmp
push
xor
xchg
leave
test
pop
mov
cmpb
dec
pop
sbb
stc
and
mov
out
daa
add
fs
cs
sbb
inc
or
in
push
leave
jnp
mov
mov
and
jnp
in
pop
adc
dec
stos
rorl
rclb
aas
mov
movsb
out
repz
jg
pop
lds
rcrb
mov
mov
stc
fdivp
shrb
push
test
and
pop
rolb
jl
movb
push
push
scas
fistps
xor
out
adc
scas
repz
pop
sbb
push
imul
test
aam
mov
mov
and
adc
push
mov
leave
sbb
mov
popf
jl
adc
cmp
jmp
ret
sub
pop
lcall
jmp
lahf
mov
xor
mov
pop
inc
cmp
cmc
gs
adc
mov
clc
fnsave
lea
add
mov
inc
stc
add
loopne
cmp
jmp
xor
sbb
xchg
aad
xchg
mov
push
repnz
stos
inc
sahf
pop
cmp
rorb
cmp
fcoms
cmp
js
jecxz
add
mov
ss
cs
mov
data16
mov
ljmp
imulb
xlat
mov
or
lahf
popf
sub
insl
xchg
dec
aad
add
sub
sbb
lret
pop
stc
xchg
andl
pop
movsb
add
andl
rcr
cmpsb
adc
sub
enter
lahf
stc
cwtl
ret
jo
lret
mov
aas
inc
int
gs
sahf
cmp
hlt
je
mov
arpl
pop
mov
sti
bound
test
imul
int
xchg
outsl
adc
or
and
mov
inc
cmp
cwtl
mov
mov
iret
faddl
inc
inc
xor
lea
lahf
orb
xlat
xchg
xchg
fistpl
cmpsb
mov
dec
cwtl
fwait
xchg
dec
fstp
fstpl
and
jnp,pn
cmpsl
pushl
jnp
out
lret
out
sub
or
outsb
out
test
ret
pop
or
ret
push
xor
mov
or
in
cs
insb
jmp
mov
loope
xorb
pusha
ret
into
fdivr
cmp
mov
das
jbe
push
mov
jo
pop
sub
dec
add
fdivp
jbe
or
aaa
xchg
jmp
outsl
mov
push
push
movl
into
xchg
fnstsw
dec
xchg
xor
mov
stc
ljmp
push
sbb
add
les
aam
test
mov
or
pop
push
xchg
dec
out
sbb
mov
data16
xchg
orb
sub
push
in
or
cmp
cmpsb
or
sbb
hlt
xchg
mov
push
mov
lds
or
lock
repz
lahf
add
bound
lcall
xchg
sti
jge
dec
xor
ret
js
bound
cmp
push
jg
and
icebp
stos
lods
or
repnz
popa
inc
cmpsb
sti
add
inc
xchg
das
mov
test
shll
sbb
add
jns
jne
lock
lret
xor
cli
mov
unpckhps
pop
and
jmp
lret
movsb
pop
mov
sbb
add
in
or
iret
push
dec
out
sub
push
rcrb
out
push
or
xchg
pusha
or
test
cmp
xor
imul
js
subps
out
cmc
fildl
push
sbb
subl
pop
test
test
arpl
dec
xchg
xchg
and
dec
mov
dec
loopne
cld
stos
loop
mov
ret
int3
adc
mov
mov
pop
sub
imul
or
cmpsb
and
ja
ss
pop
mov
dec
lods
xor
mov
loope
shrb
ret
fcom
xchg
cld
pop
jmp
jae
shlb
cmp
loopne
negl
and
jne
testl
inc
jle
or
bound
mov
cltd
and
adc
fs
xchg
xchg
cmp
sub
stc
cs
xor
or
sub
adcl
ljmp
push
push
push
aad
inc
inc
mov
mov
sbb
loopne
lods
and
or
inc
and
dec
cmc
rcrb
test
loope
bound
bnd
inc
adc
xor
sbb
jns
xor
out
test
and
add
cli
mov
and
xor
lock
mov
lcall
imul
or
or
cmpb
out
adc
xchg
pop
jg
lods
push
mov
fsubrp
jg
inc
lahf
shrb
dec
xor
jnp
push
or
sbbl
xor
shrb
lahf
imul
dec
adc
ss
jnp
ss
push
pop
daa
mov
fldenv
pop
fcmovb
inc
inc
lcall
pop
jl
xlat
push
leave
std
fimuls
inc
adc
jmp
mov
jne
js
push
cmp
jb
enter
xchg
pop
sti
jl
nop
mov
lcall
rorl
lock
xlat
fcoms
add
pop
push
push
daa
les
cmp
dec
jg
and
xchg
add
xchg
cli
and
das
sub
fisubrs
push
jl
repz
icebp
test
push
mov
jb
jmp
mov
enter
xchg
add
repnz
mov
mov
les
mov
cltd
lea
pop
aaa
push
pop
cmp
ja
pop
cmc
jmp
fidivl
je
push
decb
ror
int3
dec
jbe
fld
and
lods
mov
sbb
repnz
pusha
add
rorl
outsl
xor
cmc
ja
adc
hlt
test
xchg
aas
push
int3
pusha
xchg
push
sub
out
push
and
xchg
imulb
xor
mov
ss
mov
and
arpl
data16
bound
mov
jb
fildll
or
call
mov
xchg
aas
push
sti
push
or
jl
add
and
mov
mov
sub
loopne
push
fmull
mov
addr16
call
pop
xorb
push
or
addb
iret
mov
sub
aad
mov
pop
outsl
inc
mov
and
xchg
lea
push
xor
in
add
inc
lcall
dec
gs
dec
xor
mov
aad
ret
shl
enter
mov
addl
pop
repz
xor
sub
adc
cmc
icebp
mov
add
cmp
cmpsl
mov
test
mov
jmp
sbb
call
mov
ftst
sbb
sub
fwait
rolb
popa
xlat
scas
inc
rcrl
adc
xlat
jne
mov
sub
xchg
enter
enter
xchg
aaa
cmpsl
loope
add
lret
inc
in
add
outsl
cmpsl
mov
imul
das
fsub
std
stc
and
jecxz
xchg
cmp
addr16
dec
stos
jmp
sub
loop
movsb
or
sbb
and
pop
mov
adcl
xchg
sarl
mov
stc
pop
push
stos
mov
cmpsl
inc
mov
shl
test
or
mov
call
je
jbe
lds
loopne
incl
in
stos
mov
jne
dec
stc
cmpsl
es
gs
loope
push
jne
mov
ss
sbbb
scas
pop
add
cld
sbb
add
rclb
jbe
xchg
es
sub
push
int
fildll
jbe
dec
dec
mov
mulb
fisttpll
movsb
stos
scas
push
out
xor
popf
aas
add
or
xchg
jl
jecxz
cli
dec
jo
mov
ljmp
mov
cmpsl
push
xchg
sbb
lret
sub
je
xorl
push
daa
gs
push
sub
mov
xchg
or
push
push
add
pop
test
cld
flds
sub
cli
and
inc
lock
and
or
adc
mov
repz
dec
mov
jne
out
sbb
mov
sarb
jb
dec
xchg
pop
int
mov
add
xor
insl
mov
into
mov
movsb
xor
or
ds
jmp
jle
cmovae
and
lcall
cmp
dec
push
inc
lcall
hlt
mov
ficoms
mov
push
stos
jne
pop
xor
insb
out
push
xchg
cmp
mov
or
sub
clc
xchg
sub
dec
pop
xchg
inc
jg
dec
fmuls
adc
fildll
lahf
bound
pop
dec
sahf
cwtl
fistps
sub
outsl
scas
stc
inc
lods
sti
mov
adc
aam
shrl
sbb
lret
fistpll
cmp
rorl
pushf
or
jne
or
in
cmc
inc
xchg
bound
outsb
inc
xor
aad
popa
in
aam
cli
pop
test
xor
pop
adc
lret
add
stc
or
data16
lock
outsb
mov
lds
mov
movsl
mov
push
lods
and
cli
sub
fwait
xchg
push
fisttpl
mov
cwtl
mov
mov
add
push
inc
insb
sbbb
jbe
dec
mov
mov
cwtl
push
lds
out
mov
push
int3
clc
dec
rcrb
scas
cmp
push
div
pusha
in
dec
outsb
leave
out
pop
sbb
cmp
add
lods
jl
jb
lahf
xchg
or
or
in
js
cs
add
cmp
lret
arpl
xor
dec
cs
das
lea
icebp
xor
arpl
icebp
cmp
ret
lret
mov
test
push
jns
fcomp
dec
mov
xor
rorl
pop
mov
lret
mov
adc
shrb
addr16
xor
testb
mov
adc
fsubs
pop
mov
pop
lahf
xor
dec
mov
jl
xor
push
test
stc
daa
outsl
xor
pushf
rcrb
mov
fldenv
in
pop
sarb
or
jb
loope
roll
mov
js
dec
movsb
leave
sub
das
js
mov
push
pop
mov
xlat
fucom
xchg
xchg
jle
xor
stos
out
fsubr
sarl
cmp
or
add
out
mov
test
shl
call
fwait
jnp
inc
adc
bnd
jecxz
je
icebp
js
sbb
fadds
and
mov
mov
xor
rorl
in
stos
jae
cmpsl
es
push
ret
mov
xchg
insl
in
cmp
mov
imul
ja
or
sbb
lock
add
mull
sbb
jg
adc
fistpll
push
mov
push
arpl
loopne
data16
adcl
mov
pop
out
lahf
dec
ret
in
pusha
fldln2
cmpb
and
hlt
mov
sub
test
negl
sbb
dec
pushf
xor
fidivl
mov
out
xchg
xchg
jo
xorl
xchg
or
repz
dec
jbe
jae
icebp
mov
xlat
mov
inc
mov
mov
push
sbb
push
das
insl
aas
les
sbbb
pop
jbe
pop
mov
pop
dec
stc
pop
xchg
aam
enter
add
and
push
sbb
das
ret
inc
jg
clc
xor
xchg
mov
dec
les
mov
mov
xlat
pushf
mov
dec
and
mov
jb
add
sbb
jmp
pushf
jnp
into
in
cmc
movsb
fstpt
xchg
xchg
pop
mov
stos
pop
leave
push
outsb
add
inc
bnd
add
cmp
mov
inc
jmp
adc
in
push
fmul
shlb
out
mov
sub
mov
and
scas
jns
outsl
cli
dec
sbb
or
js
add
fdiv
stc
push
xchg
in
int3
cmovns
lock
mov
mov
int3
mov
xchg
cmpl
adc
rorb
insb
orb
dec
test
push
sbb
xor
adc
enter
into
cmp
jmp
outsl
out
mov
mov
cli
repnz
add
mov
in
popa
jnp
popa
sub
adc
rcll
incl
adc
lods
addb
popf
outsb
cmp
xor
inc
jp
or
jmp
pop
inc
notb
out
test
adc
mov
push
clc
jmp
test
mov
lahf
lea
movsl
les
gs
sub
jbe
out
or
adc
mov
idivb
imul
lods
cltd
jmp
cmp
pop
aam
loope
jo
sahf
mov
inc
xchg
lcall
fwait
pop
leave
shr
or
sub
les
adcl
addl
into
clc
test
insl
or
clc
push
sub
stos
sub
jl
mov
arpl
and
lret
pop
cmp
jle
cld
mov
pop
cwtl
inc
jecxz
sub
add
jle
pop
inc
ficomps
insl
xchg
mov
shr
roll
bound
lahf
push
je
dec
xchg
gs
lds
stos
dec
movl
iret
jg
shll
pop
and
fcmovu
push
outsb
loope
pop
stc
loop
push
filds
decb
adc
dec
mov
mov
aas
cmp
aad
push
clc
or
add
fistpl
mov
xor
in
mov
or
dec
cmp
popf
cmp
outsl
call
sub
and
xchg
aaa
imul
add
ljmp
iret
cmp
bnd
pop
xchg
sti
shlb
aaa
jb
mov
ret
cmp
insl
pop
les
push
push
sahf
xor
dec
enter
mov
mov
call
pop
inc
jmp
push
fcmovnb
cmpsb
and
stos
adc
xor
mov
repnz
ja
xchg
xchg
addl
fistl
test
inc
int
sub
mov
jmp
xor
dec
in
and
out
clc
jo
sbbl
xor
dec
mov
cmp
cltd
fistpl
fistps
notb
andps
in
xlat
jne
pop
in
lret
mov
lock
mov
shr
test
push
ds
mov
cld
call
fmulp
inc
mov
fnstcw
mov
rorb
lds
jnp
cmp
adc
mov
std
mov
inc
in
stos
mov
and
jecxz
test
jmp
test
ss
out
pop
push
xchg
imul
inc
push
sbb
lods
dec
jb
or
insb
push
push
mov
sti
jle
sbb
dec
mov
stc
jo
hlt
and
or
sub
jl
push
cmp
inc
pmaxub
push
stc
jecxz
pusha
sub
test
xchg
add
jecxz
add
sbb
mov
in
jg
std
push
adc
xchg
xchg
jns
xchg
pop
negl
xchg
jb
adc
jp
jno
sub
mov
jmp
xchg
loopne
ja
mov
jge
daa
lea
push
xor
mov
jne
cmp
jge
into
repnz
ficomps
ret
pop
rcl
loope
pop
test
sbb
mov
in
inc
xchg
loope
add
jecxz
or
dec
sub
mov
or
repz
scas
pop
jmp
pop
in
nop
lahf
mov
xchg
mov
xor
scas
jle
clc
xor
fwait
lock
fistl
les
pop
add
push
flds
add
bound
lret
dec
add
push
repnz
js
pop
sub
push
sbb
inc
jmp
testb
xorl
lock
mov
mov
mov
ja
xchg
and
sub
loop
dec
call
xchg
cld
flds
inc
aaa
out
add
cmp
cld
mov
pusha
test
lret
js
pop
insl
cs
test
movsb
ret
add
mov
popa
shrl
scas
mov
imul
sbb
ss
in
pop
or
dec
cmp
xchg
repnz
jb
xchg
pushf
aas
push
aad
sub
jb
or
jmp
stos
push
movl
cli
ret
pop
add
xchg
xor
cmpsl
pop
adc
sbb
xor
in
sub
das
out
and
mov
push
addb
out
xchg
flds
sub
mov
sub
sub
inc
ss
imul
call
loope
mov
mov
scas
sub
addr16
adc
pop
test
push
sbb
lahf
pop
in
mov
movsl
inc
stc
mov
jecxz
cmpsb
scas
xchg
add
add
push
push
cmpsl
jnp
mov
lret
js
insb
xlat
in
les
test
mov
and
fimuls
iret
pop
pop
fs
shll
mov
dec
mov
pop
out
sub
sub
pop
aas
push
cmpsl
stc
mov
lcall
and
dec
repnz
cmp
cld
orb
xchg
mov
push
in
xor
mov
or
sti
push
sub
es
imul
ja
or
pop
aaa
leave
cs
pop
jl
shlb
inc
stos
xchg
ret
jecxz
aad
sbb
sbb
sbb
push
sub
pop
popa
inc
addr16
add
pop
das
jge
movsb
shlb
xor
lahf
jo
push
and
repnz
enter
jle
sti
loop
xchg
sub
call
int
dec
adc
xor
fdiv
aas
subb
pop
dec
mov
dec
and
mov
mov
fmuls
std
adc
cmpsl
xor
fcompl
dec
shl
mov
and
jo
cmp
inc
mov
mov
icebp
cwtl
or
fimuls
aas
addb
adc
incl
or
gs
idivl
sbb
ja
add
dec
insl
mov
sub
int3
in
fsubrs
or
imul
mov
bnd
into
nop
mov
and
shrb
push
add
fs
adc
sbb
xchg
std
xorl
lods
aaa
jle
mov
push
test
test
and
xchg
adc
movsb
xor
or
mov
movsl
push
imul
dec
jb
push
sbb
call
cmp
enter
xchg
rcrl
pop
popa
push
add
cmpsl
jecxz
std
cld
and
fs
push
mov
dec
inc
outsl
and
mov
sub
adc
jmp
or
jns
add
sbb
aad
into
call
pop
mov
adc
sarl
cmp
mov
mov
jmp
pop
inc
nop
add
sbb
xchg
dec
arpl
sub
addr16
or
pop
lahf
popf
idiv
in
lds
add
dec
shll
adc
mov
jp
lods
rorl
lea
xchg
loopne
repnz
add
push
and
out
add
dec
pop
adc
mov
sub
inc
or
mov
xchg
xchg
inc
into
xchg
fchs
cli
xor
or
inc
xchg
mov
and
sub
sbb
in
fsts
arpl
pushf
xchg
in
test
cli
mov
adc
imul
ljmp
cmp
cmpsl
sub
imul
mov
xchg
scas
push
testb
pop
andl
mov
js
arpl
jb
sub
inc
scas
adc
fiaddl
popa
dec
lahf
aad
cmpsl
mov
xchg
and
xor
fwait
clc
push
xchg
nop
xor
adc
inc
outsb
call
sub
mov
xchg
pop
arpl
mov
sub
push
fwait
mov
lret
shrl
sbb
popa
jo
xor
mov
add
sbb
cmc
jb
push
dec
gs
sti
dec
mov
push
jno
pushf
xor
xorl
xchg
mov
les
mov
insl
xor
rcr
ljmp
cmp
les
int3
stos
rcrl
mov
sub
mov
xor
mov
mov
push
push
pop
add
stc
push
out
sbb
sub
xchg
mov
add
jne
test
sarl
sbb
mov
fwait
lock
pop
add
mov
jmp
mov
xor
mov
pop
not
sarl
mov
add
loop
xorl
add
mov
ss
adc
jmp
ss
push
push
into
mov
push
push
pop
lds
out
outsb
cmp
mov
popf
aam
out
dec
xor
cs
rcrl
outsl
inc
dec
arpl
insb
mov
pop
sbb
inc
push
popf
lret
push
xchg
lods
push
ret
mov
int3
hlt
xor
cs
clc
mov
xchg
idivl
dec
xor
jae
and
pop
mov
repz
cmp
push
add
adc
ror
sub
pushf
enter
lret
sub
fdivl
mov
imul
mov
fwait
jae
lcall
std
push
mov
lds
mov
aas
shll
mov
ret
int
movsb
mov
sbb
fiadds
xchg
adc
lret
inc
jg
cltd
hlt
xchg
loopne
inc
sbb
out
pop
ret
fldl
sub
and
fldcw
or
inc
mov
daa
mov
fadd
lahf
cmp
mov
inc
nop
jle
inc
inc
xorl
mov
lret
inc
out
pusha
aas
dec
movsb
movsb
jae
push
bound
inc
xor
andb
push
mov
les
mov
and
fwait
add
loope
sub
inc
sar
mov
mov
nop
dec
pop
das
adc
je
aam
aaa
out
outsb
repz
mov
inc
repz
jb
pop
out
and
cmp
lret
adc
aad
jmp
or
out
aam
clc
cmp
cmp
call
orl
aad
xor
mov
xlat
mov
imul
or
nop
lret
data16
orl
stc
clc
jle
in
bound
int
mov
jle
mov
add
xorb
cs
mov
ret
mov
in
cs
subl
data16
adc
negl
xchg
cmpsb
stos
movzwl
dec
leave
ljmp
inc
adc
in
or
mov
mov
pop
cmp
inc
test
in
cmp
sahf
loop
inc
add
dec
in
jo
bound
and
lcall
rorl
jae
push
sti
test
rcrl
repz
add
and
rcrb
jecxz
cmp
jp
push
insl
xor
mov
lock
in
jo
and
sti
add
xor
lock
mov
adc
pop
lods
or
out
push
push
int3
pushf
test
movsl
cmp
mov
cltd
dec
jp
mov
mov
xor
xor
inc
mov
push
aas
push
push
pop
in
aad
imul
leave
inc
lods
imulb
inc
std
sbb
xchg
fisttps
stos
pop
xor
cmp
push
sahf
cmp
xchg
imul
push
test
pop
pop
xor
cmp
mov
and
inc
cmp
sbb
sbb
jmp
data16
int
bound
sbb
jecxz
inc
repnz
ja
fbld
mov
shrb
add
scas
lods
notl
sub
scas
push
mov
adc
dec
or
pop
inc
mov
aaa
inc
mov
popa
leave
pop
xchg
dec
sub
sar
hlt
push
arpl
cli
fbstp
jo
mov
mov
mov
in
lods
loop
mov
mov
movsl
ds
add
add
pop
push
pop
add
dec
out
insl
outsl
sub
sub
jg
mov
nop
push
mov
dec
sahf
jns
push
test
dec
lods
sbb
sbb
pinsrw
fcoms
lea
xlat
cmp
rcll
imul
lea
add
mov
pop
push
dec
idivl
or
add
adc
fstl
sti
dec
xchg
ljmp
pop
fdivr
mov
lods
cmpb
add
fwait
adc
movsl
jnp
sbb
int
lret
das
js
pusha
stos
pop
adc
dec
mov
sub
pop
je
jns
sub
fs
movb
divb
sahf
and
xchg
jbe
dec
mov
cmp
mov
testl
cld
into
mov
lret
loope
cmpsb
adcb
push
scas
jb
push
js
js
mov
pop
adc
jae
sub
lds
out
or
mov
or
ja
lret
xchg
call
or
or
das
jne
gs
bound
add
push
and
pop
adc
out
lcall
in
cmp
mov
mov
xchg
scas
and
out
rorb
inc
repnz
mov
xor
in
pop
ret
mov
test
test
mov
aam
or
sub
ret
inc
push
in
add
cmp
push
xor
inc
outsb
push
add
pop
shrb
lret
or
cmp
sub
xchg
xlat
aad
es
in
mov
cmpsl
sbb
or
mov
mov
popa
push
mov
push
enter
fcomp
push
cwtl
and
or
mov
sub
lods
xchg
aaa
test
mov
inc
fsts
pop
jmp
pop
stc
int3
sub
fs
inc
popf
dec
ret
jg
fisttps
xchg
inc
adc
pop
fdivs
divb
nop
pusha
mov
pop
pop
jp
add
pushf
sbb
lret
fs
cmp
mov
xchg
pop
dec
std
sahf
lcall
pause
daa
test
fldl
push
add
lods
xchg
mov
mov
cmp
cmp
jns
pushl
add
pushf
and
and
outsl
inc
dec
fwait
std
pop
addr16
jl
dec
insl
pushl
push
aad
pop
sub
mov
int
mov
stc
std
pushf
iret
xor
mov
xor
cmpsb
rorb
movl
push
pop
inc
push
jecxz
into
sub
fstps
mov
shll
dec
pop
sbb
loopne
mov
jo
pop
mov
jae
or
shr
popa
cmp
mov
push
fsubrp
adc
push
cmp
mov
inc
xchg
adc
popf
js
jns
shlb
mov
test
dec
pop
dec
pop
adcb
adcb
mov
or
mov
xor
mov
repz
fadd
mov
mov
frstor
sti
les
inc
lcall
add
fists
jo
xor
out
push
sub
gs
or
scas
push
lret
xor
push
add
punpckhdq
popf
jle,pt
cli
pop
sbb
fdivrl
adc
out
push
sbb
adc
pop
jno
sbb
add
nop
dec
es
inc
jp
lods
int
add
adc
xor
rcll
jmp
insl
lods
sbb
test
sti
bound
int
pop
imul
push
mov
hlt
mov
stos
xor
mov
cli
cmp
and
in
mov
test
mov
cwtl
cld
js
add
lods
js
mov
xchg
pop
add
push
jns,pn
shll
inc
xchg
jp
popf
es
or
pop
imul
push
and
adc
cmp
repnz
dec
inc
push
mov
push
in
xor
jge
mov
fcmovnbe
stc
xor
pop
cmp
sub
lret
cmpsl
in
dec
xor
mov
jnp
xor
insl
jg
aas
jge
outsl
std
dec
xor
mov
sbb
cwtl
dec
push
into
sbb
cmp
fadd
lret
adc
cmpl
push
mov
dec
push
inc
jp
movsb
and
in
push
push
stos
xchg
scas
and
jecxz
dec
es
out
lods
and
jno
addr16
std
xchg
push
movsb
fldenv
jbe
mov
adc
and
negl
hlt
enter
aam
or
lcall
mov
mov
dec
jg
shr
push
dec
mov
push
xchg
fyl2x
xchg
mov
sub
bound
or
mov
sub
jb
mov
xchg
inc
iret
call
sub
sbb
fwait
push
es
dec
or
into
cmp
std
insl
movsl
into
out
clc
outsl
pop
push
dec
xchg
or
mov
adc
aam
add
sub
xor
xlat
dec
push
aas
popa
cs
out
xchg
cmc
push
sbb
mov
and
jg
decb
inc
mov
jb
rcll
mov
test
cs
jb
rcl
cs
cmpxchg
xchg
pop
rcll
int3
sti
in
adc
sub
dec
inc
mov
lds
mov
ja
jno
je
mov
daa
data16
mov
daa
jb
test
data16
in
mov
into
out
mov
pop
mov
addr16
std
ss
or
xchg
test
icebp
inc
aas
int3
cmp
xor
inc
sbb
add
fdivs
xor
out
call
inc
inc
pop
addr16
dec
xor
inc
inc
and
fisubrs
pop
loopne
and
imul
dec
mov
push
lcall
jge
data16
gs
pop
mov
mov
mov
int3
pushf
mov
adc
mov
mov
mov
adc
mov
out
xchg
sub
mov
mov
and
mov
jb
add
push
dec
cld
cmp
shlb
cmp
ja
mov
add
add
addl
cmp
int3
inc
test
mov
cs
test
dec
adc
sub
jg
aaa
adc
aaa
data16
pop
mov
es
dec
mov
adc
lea
addr16
jno
rcrl
mov
pop
dec
ljmp
das
cmpsl
mov
or
icebp
mov
push
in
or
dec
cltd
sbb
popa
test
test
sarl
fs
jbe
ret
lret
aad
and
dec
or
jl
mov
cmpsb
jge
aam
test
mov
cli
xchg
push
pushf
mov
xchg
or
leave
fs
enter
cld
push
push
pop
and
sub
imul
push
mov
add
dec
sbb
inc
push
xchg
push
pop
sti
insb
sbb
daa
jmp
ret
sbbl
push
pushf
scas
cmp
out
fcomp
les
subb
jecxz
dec
jmp
ja
test
lcall
xchg
insb
mov
and
or
aas
mov
hlt
mov
out
es
stc
shl
xor
sar
pop
in
mov
daa
inc
jmp
dec
into
fstl
arpl
aad
xchg
jne
pop
ja
push
xor
ja
std
add
popf
fnstsw
sub
mov
dec
aad
adcb
lret
cmp
xchg
popa
fs
fists
dec
mov
into
in
ret
insb
add
aad
pop
ljmp
and
or
inc
outsl
mov
aam
adc
xorb
orb
or
push
push
leave
xchg
lock
outsl
shrl
and
sub
incb
xchg
pushf
dec
dec
inc
cmp
jle
pusha
inc
xchg
test
xor
adc
test
sub
xchg
out
xchg
xchg
mov
imul
or
sti
mov
sbb
fidivs
scas
inc
push
jp
jnp
cli
and
sub
in
ret
jle
cmp
jo
pop
int
insb
fstpt
xchg
or
push
push
leave
ret
ret
or
fsubr
jg
and
xchg
lods
sub
out
xchg
sub
jns
mov
pop
ja
cmp
jbe
mov
xlat
incb
and
inc
mov
sub
fildl
daa
mov
add
jo
mov
sahf
pop
out
mov
test
int
adc
bound
fists
or
mov
mov
mov
jl
out
and
adc
inc
loop
jns
adc
mov
les
inc
ljmp
enter
xlat
pop
cwtl
hlt
xor
sub
rolb
sub
lods
push
sub
cmp
adc
mov
jl
paddsb
clc
lret
xor
aaa
cmp
es
std
mov
add
push
and
out
jle
addr16
inc
into
push
arpl
mov
popl
bound
push
add
xchg
sbbl
roll
cmp
fildl
pop
xchg
stos
adc
mov
inc
xor
and
dec
loope
mov
imul
mov
fwait
jns
or
pop
shr
hlt
mov
push
mov
ret
ret
jp
mov
hlt
dec
aam
adc
mull
je
jno
addr16
dec
ret
aam
popf
inc
aaa
sub
ds
mov
loopne
adc
pop
decl
in
xchg
test
dec
xchg
mov
cmp
cmpl
jo
push
pop
mov
jecxz
lods
je
jne
push
mov
jns
cmp
ljmp
sbb
cmp
test
pusha
lods
mov
add
mov
in
movsb
or
fcmovnb
in
push
sub
jae
xorl
out
mov
sub
and
cmp
jb
mov
ss
or
out
push
sbb
enter
xor
loop
mov
mov
mov
jae
jecxz
adc
iret
add
push
notb
sbb
fsubr
cmp
fcomi
mov
dec
imul
rcrl
push
xchg
jg
jg
daa
xor
ljmp
ja
imul
sub
or
xchg
push
push
inc
rcr
push
add
xor
repz
pop
ret
insb
xor
sbb
es
xchg
xlat
fsubs
push
test
cmc
inc
and
pop
or
movsl
js
cltd
sbb
inc
loop
jbe
jne
fstl
call
insb
jb
or
push
ficompl
and
push
mov
mov
fisubl
fsts
loop
and
sbb
mulb
lock
loopne
pop
and
or
in
es
fisubrs
adc
xchg
addl
pop
cmp
adc
cs
jne
or
scas
out
push
popa
js
pop
ret
dec
arpl
stos
fcoml
inc
in
pusha
xchg
cli
xchg
inc
lret
cmpsb
mov
enter
mul
imul
inc
mov
rol
das
or
inc
mov
push
repz
js
sbb
xor
cwtl
and
and
mov
mov
lcall
sbb
andb
adc
imul
out
xchg
sbb
adc
mov
dec
inc
pop
mov
iret
sbb
icebp
out
fsincos
ret
xor
int3
jmp
push
aam
or
sbb
inc
pop
xor
push
pop
sti
add
and
movsl
das
lret
cli
jmp
add
insb
add
aam
daa
jb
jne
and
test
int
adc
pop
fwait
aaa
sbbb
into
add
or
or
jno
enter
inc
test
lea
subl
int
jle
jns
enter
jnp
jg
adc
cmp
enter
test
sbb
stc
mov
or
pop
addr16
cmp
adc
daa
das
cli
lods
das
add
adc
pop
jmp
in
sbb
adc
fmull
mov
repnz
push
lea
mov
mov
inc
sub
popa
and
cmpsb
lret
mov
pusha
pop
call
jge
mov
pop
sbb
xor
test
ficoml
jb
call
push
es
scas
cmp
mov
and
lods
cmp
sbbl
sahf
outsb
push
test
inc
lcall
ja,pt
mov
data16
popf
fisubs
jne
inc
and
push
inc
repz
mov
pop
cld
cli
loop
mov
fbld
jb
cmpsb
movsb
inc
ret
or
cmpb
test
push
aas
jae
int3
mov
sahf
lea
mov
cmpsl
xor
out
add
sbb
cmpsb
popa
mov
std
mov
sbb
pop
xorl
sbb
stc
dec
aad
or
adc
jg
mov
ret
xchg
dec
mov
fimull
mov
jge
mov
loopne
in
lock
inc
fists
adc
sub
add
push
rorl
mov
call
das
ret
clc
mov
pop
sub
iret
adc
f2xm1
sub
aaa
cli
push
and
mov
add
cmc
test
jo
scas
clc
inc
pop
fdivl
les
sbbb
and
mov
cvtps2pi
idivb
jae
and
pop
adc
testb
push
push
dec
inc
stc
icebp
movsl
cmp
inc
sbb
aas
inc
fisttps
mov
loopne
popa
mov
fstl
stos
sbb
mov
or
pusha
add
leave
aad
push
mov
and
data16
aam
in
in
inc
inc
in
inc
pop
iret
lock
inc
add
rcrb
div
inc
xchg
dec
jl
xchg
lea
push
scas
mov
xchg
and
arpl
sub
sbb
mov
mov
ljmp
sarl
dec
cwtl
je
jae
repnz
and
repz
into
cmp
ljmp
sahf
in
mov
mov
inc
cwtl
mov
leave
push
pop
sbb
pop
sub
and
repz
into
dec
mov
push
insb
mov
fcmove
and
mov
and
xor
push
sbb
loop
cltd
loope
daa
aas
insl
fs
fisttpl
shr
ja
jecxz
mov
pop
mov
jo
cmpsb
mov
lods
dec
mov
pop
imul
nop
ret
or
nop
enter
fstl
popf
ret
lds
stc
mov
cltd
pop
lods
mov
decl
fucomi
sub
stos
cli
fdivl
push
popa
xor
cmpsl
icebp
mov
sbb
xchg
mov
sbb
ljmp
aas
addr16
cmc
cli
push
or
loopne
sub
adc
fst
mov
faddl
imul
test
ret
dec
mov
loop
inc
sub
repnz
adc
dec
mov
pop
sub
jae
shl
or
loop
xchg
loopne
xchg
xchg
dec
into
xlat
shrb
enter
ror
cmp
jmp
aaa
xor
mov
cwtl
sarb
fsubrs
add
test
jl
pop
jnp
xor
mov
mov
gs
and
xchg
cld
addl
ja
xlat
pop
bnd
loopne
add
movsb
push
mov
mov
jae
pop
into
xchg
fildl
out
cli
mov
loopne
sbb
push
dec
movsb
pop
outsb
aaa
xor
outsl
popa
add
adc
jne
shlb
movlps
sbb
test
dec
pop
addr16
jbe
sahf
aas
and
outsl
xchg
cmpsl
lods
lds
jno
int
das
popa
mov
xchg
and
mov
push
push
inc
jne
push
das
aam
and
ds
cltd
or
sbb
xor
pop
out
or
repnz
xlat
dec
push
repz
lcall
ljmp
ja
sti
xor
call
mov
leave
adc
fs
or
test
cmp
in
divb
loop
sti
pop
test
xorl
idiv
insl
cmp
pop
push
popfw
shll
sub
fisubrl
hlt
cld
dec
pop
pop
pop
mov
cltd
dec
fucomp
inc
mov
cmp
ret
sub
cwtl
ds
popa
flds
pop
aad
sub
inc
imul
sbb
or
and
mov
gs
xchg
and
jmp
shll
ret
adc
lods
pop
je
mov
inc
pop
adc
rcrb
mov
jo
shll
sbb
daa
out
sbb
dec
sbb
in
add
cs
lcall
push
jo
or
xchg
xor
dec
mov
xchg
in
fistps
xchg
and
ja
cmpsb
test
cltd
dec
sbb
adcl
scas
mov
inc
adc
sbb
adc
sti
dec
ds
and
stos
sub
mov
gs
fistpll
aad
cmc
xchg
rorb
and
jno
les
push
dec
movsb
sub
call
adcl
insl
cltd
cmc
pop
fdivr
or
aaa
mov
dec
sub
add
jmp
imul
cmc
sbb
into
xchg
sti
push
xor
adc
testb
aad
das
inc
cltd
jo
loope
das
and
loop
mov
xchg
jle
dec
lea
icebp
shll
mov
sbb
imul
stos
lret
fstps
inc
arpl
mov
out
inc
xor
xchg
jg
mov
jbe
push
setnp
int3
aas
ja
add
clc
mov
sub
push
add
sub
cli
mov
and
in
cwtl
les
jg
or
js
test
mov
test
mov
xchg
jecxz
sbb
or
mov
not
sub
and
or
ret
sbb
xchg
or
xor
mov
jp
jno
xor
cmp
fldt
sub
push
imul
adc
and
mov
in
jnp,pt
std
in
inc
inc
sub
into
int3
ja
imul
xchg
jb
add
fldcw
insl
jb
std
or
data16
aaa
pop
push
mov
insl
or
mov
cli
or
imull
call
lods
add
roll
stos
mov
xor
sbb
and
jb
fwait
push
cmp
jmp
or
push
inc
scas
rclb
out
and
ljmp
jmp
aam
outsb
adc
in
add
cmp
lret
ror
sbb
sub
cmpsl
int
dec
fmull
pop
adc
popa
jb
rorl
jp
jecxz
sub
outsl
imul
sbb
push
in
fst
bnd
xor
mov
aaa
lcall
mov
subl
pop
mov
xchg
mov
sbb
inc
hlt
push
inc
fstpt
int3
jmp
sbb
mov
pop
sahf
and
xchg
inc
cvtps2pd
jno
push
stos
adc
ret
mov
test
popa
push
filds
shrl
xchg
xchg
rcrb
test
jge
aad
pop
and
add
cmpsb
pusha
push
xchg
xor
ret
mov
les
and
jmp
cmp
testb
mov
jmp
sbb
adc
in
div
rcr
hlt
cmc
adc
mov
jae
dec
cwtl
out
dec
std
sbb
push
subl
les
sub
dec
cmpsl
imul
sbb
cmpsl
dec
out
dec
xlat
sub
mov
test
xchg
push
clc
and
cmpsb
adc
ret
push
lret
jmp
ds
and
sbb
push
andl
bound
cs
cltd
movsl
pushf
daa
xchg
xchg
jae
push
add
mov
jle
data16
mov
jb
push
lods
rcll
mov
out
cmpsl
shll
pushf
add
decl
arpl
cmp
sub
sbb
cmp
mov
stos
add
pop
ss
scas
lods
sub
out
sub
mov
scas
and
dec
or
inc
out
in
jno
idiv
xlat
nop
stos
mov
cmpsl
inc
int
inc
gs
push
popa
xchg
divb
stos
addr16
xor
xchg
add
jle
cmp
pop
nop
inc
sbb
sbb
imul
scas
push
sub
mov
aas
xor
hlt
and
aas
je
dec
push
inc
ljmp
mov
nop
inc
stos
std
cmp
xchg
mov
mov
mov
lcall
push
xor
insb
pop
dec
dec
jmp
aad
xor
adcb
cmp
inc
lds
pop
dec
and
mov
mov
adc
fisttpl
fisttpll
cli
in
fsubs
shl
add
push
mov
mov
and
pop
cwtl
cmp
inc
in
jns
xchg
jbe
dec
fldl
hlt
push
in
insl
test
jno
mov
nop
outsl
leave
dec
popa
push
adc
jp
movsl
sbb
jne
inc
push
out
xor
mov
cmc
daa
adc
pop
mov
das
mov
pop
add
add
aaa
or
shll
adc
filds
xorl
sub
incb
inc
das
push
out
and
lret
pop
inc
push
push
aas
ds
icebp
sbb
push
int3
mov
adc
ds
rclb
mov
scas
cmpb
dec
push
insb
repnz
xchg
jge
out
xchg
mov
jmp
push
or
or
pop
in
shrb
sbb
movsl
lods
inc
or
leave
fldl
scas
in
xchg
pop
test
xor
pop
adc
popa
inc
je
fiaddl
into
mov
xor
cwtl
xor
add
cwtl
adc
jo
mov
arpl
mov
xlat
xchg
stc
fildll
imulb
pop
lcall
mov
lds
pop
ficomps
cmp
fildll
sbb
xor
push
adc
jge
mov
es
jnp
mov
imul
push
ja
frstor
lods
lock
mov
out
mov
sbb
pop
repnz
shrl
out
rorb
lea
int
pop
cmpsl
out
jbe
xchg
jbe
scas
into
pop
popa
push
mov
xchg
inc
jg
pop
aad
push
sub
outsl
sbb
adc
jbe
jge
push
mov
push
sub
xlat
imul
aaa
sub
sahf
adc
mov
lock
cli
dec
mov
int3
pop
and
fdivl
cmc
lret
repnz
lahf
ss
xor
stc
ds
pusha
mov
dec
stc
stos
mov
iret
xchg
sbb
sbb
das
mov
add
push
dec
js
or
adc
jg
hlt
xor
addr16
inc
push
das
xchg
inc
mov
pop
outsb
subb
add
ret
xchg
fstp
sahf
jbe
pop
mov
jmp
sti
arpl
inc
loop
popf
inc
pusha
mov
ljmp
mov
in
jecxz
cmpsl
movsb
aad
mov
cmp
lret
arpl
lahf
jecxz
test
shrl
movsb
movsb
push
in
and
test
cltd
fimull
inc
jbe
mov
popf
cwtl
xchg
sahf
dec
sbb
in
mov
push
cmp
and
inc
dec
lock
idiv
xchg
mov
mov
fld
push
dec
clc
mov
call
jbe
mov
pop
jnp
cmp
lcall
mov
rcll
or
stos
push
push
aas
mov
sub
or
outsl
sub
sub
push
mov
mov
ja
es
ficomps
lods
mov
and
inc
add
roll
push
scas
push
cltd
bound
pop
repz
push
mov
cmpsb
xchg
pop
out
clc
fnstenv
add
push
fs
ja
sbb
sub
xchg
jns
in
and
test
pop
dec
lret
notl
stos
xchg
lahf
cmp
pop
aad
xchg
mov
xor
fs
sub
jle
dec
mov
les
push
cmc
adc
fildl
int3
pop
and
ds
stos
cmp
add
fs
jnp
pop
pusha
mov
mov
repnz
xchg
movsb
insl
test
scas
mov
jl
in
leave
mov
fcoml
or
insb
pop
xchg
adc
gs
cs
into
aam
push
int3
movb
lods
scas
dec
int
or
fwait
mov
and
jmp
inc
fcomps
int
out
sarb
sti
fcomps
subb
call
aas
mov
and
mov
xchg
inc
mov
int3
int
call
sbb
mov
cmp
icebp
arpl
jecxz
mov
in
sbb
pop
xchg
dec
iret
mov
insb
int3
cwtl
popa
js
mov
jns
les
hlt
sbb
fsub
bound
imul
jns
and
fldl
inc
insb
or
push
add
mov
ret
pop
subl
mov
xor
aam
mov
jae
test
jo
and
lods
loope
and
rcl
iret
mov
nop
dec
and
sub
dec
and
xor
add
adc
int
cmp
cli
push
sbb
ljmp
mov
sar
addr16
push
outsb
mov
movsl
xchg
cltd
ljmp
jecxz
stos
jge
and
jae
shl
stc
in
rcll
out
mov
leave
jbe
incb
push
adc
std
ljmp
clc
jae
xchg
cltd
inc
adc
push
xor
out
xchg
lods
add
movl
inc
and
test
adc
jne
outsb
inc
sub
fstpl
xchg
dec
sbb
push
je
sbb
mov
pop
fisttpl
mov
out
scas
mov
xor
add
push
outsb
mov
jns
test
je
loopne
fwait
pop
pushf
mov
sbb
push
jge
adc
das
push
add
cmc
xchg
movsb
out
jmp
insl
inc
roll
ucomiss
xlat
cli
out
or
mov
inc
xor
int
dec
add
or
pop
lahf
sbbl
mov
sar
sub
fidivrs
sub
sbb
push
adcl
sbb
es
movsl
es
idivl
and
mov
inc
xor
push
pop
mov
mov
and
pop
inc
jle
fsubrs
sub
aad
cwtl
inc
test
pop
mov
xor
mov
insl
outsb
cwtl
dec
lcall
test
cmp
ja
push
out
dec
inc
mov
push
inc
or
into
lahf
pop
sub
loope
mov
and
outsb
dec
cmpsb
es
inc
addb
and
orb
movsl
in
repz
or
call
sbb
js
cmp
mov
insl
xchg
adc
cmpsb
xor
lcall
outsl
mov
mov
xor
mov
mov
sub
hlt
sub
call
in
push
adc
push
ds
adc
bound
repnz
addr16
push
mov
aas
insl
mov
popa
fiaddl
aad
push
xchg
stos
add
pop
xchg
js
mov
pop
push
scas
dec
outsl
xor
and
out
sub
pop
int
in
popa
shrb
insb
mov
test
fbld
mov
and
mov
lcall
test
xor
push
outsb
mov
adc
jo
mov
sbb
add
repnz
sub
inc
test
dec
sbb
jbe
push
daa
inc
xor
cli
enter
pop
ds
stos
fwait
xor
xchg
fnop
jle
fnstcw
jecxz
mov
ja
push
les
test
jns
dec
xchg
mov
cltd
scas
dec
xchg
mov
fstps
jne
cltd
lret
int3
pop
das
push
pushf
dec
push
and
xchg
repnz
je
outsl
and
add
ja
ficomps
push
negb
cltd
cmp
push
fnsave
sub
cltd
int
out
addr16
orl
iret
sbb
es
ja
gs
clc
mov
inc
xchg
pop
xchg
or
add
jg
add
mov
mov
iret
cmp
aaa
lds
addr16
inc
xchg
sti
in
pop
hlt
ds
adc
dec
in
lock
sub
pop
pop
pop
fs
pop
aaa
push
fdivrs
shr
aam
into
cs
cmp
pop
push
cmp
jae
shrb
popf
sahf
or
js
add
fisubrs
les
test
aam
nop
je
push
pop
subl
sti
loope
sbb
sarl
lea
push
or
lock
xorl
inc
dec
push
sbb
loopne
cmpsl
rcrb
mov
adc
test
enter
push
mov
int3
add
xor
mov
add
ss
hlt
je
mov
push
jbe
dec
push
daa
jg
cmp
gs
stos
fdivl
mov
sti
add
jmp
sub
addb
jl
sub
push
repz
pop
inc
mov
mov
inc
out
push
sub
lds
mov
cld
shll
or
jg
lret
sarb
dec
jbe
and
mov
loope
pop
mov
push
or
jmp
test
push
sub
iret
jae
hlt
insl
fs
sub
test
ret
test
push
adc
mov
sub
sbb
and
cmp
pushf
in
mov
sbb
insb
outsb
push
adc
dec
add
inc
dec
cmp
movsb
cltd
fsubrl
cmpl
lock
pop
jmp
test
mov
push
jnp
pop
push
outsl
aam
jecxz
lcall
lock
or
mov
mov
sbb
lods
xor
adc
xchg
lock
inc
scas
cmp
clc
jl
fisttps
xchg
std
mov
mov
cmpsl
rorl
sti
or
fwait
mov
popa
andb
cltd
add
push
sbb
fbld
js
sti
clc
sbb
push
xor
inc
fadds
mov
lds
mov
cwtl
pop
pop
push
ret
out
lret
outsb
xchg
mov
idiv
xor
fsubrp
fisubrs
sbb
sbb
subl
aas
add
pop
addr16
push
xchg
sub
sbb
shlb
jecxz
ds
outsl
push
lods
inc
pop
push
mov
sarl
ljmp
jge
ss
xchg
mov
aas
mov
fsubrl
mov
xchg
repz
repnz
hlt
mov
sbb
inc
add
adc
ret
das
adc
mov
sahf
rcll
mov
sub
mov
ss
xor
movb
fiaddl
pop
dec
push
pop
cltd
adc
subl
sbb
pop
push
xchg
push
dec
push
dec
or
imul
test
xchg
mov
aam
xchg
sub
roll
mov
cmpsl
push
icebp
mov
jne
sarl
pop
mov
mov
es
xor
pushf
repnz
mov
rcr
mov
loop
repz
mov
inc
mov
xchg
sub
fbld
pop
pop
andb
dec
mov
movsb
iret
popa
sub
addr16
fildll
xchg
pop
bound
sbb
mov
fstpl
or
cmpsl
sbb
mov
xlat
cmp
xor
stos
pop
push
sub
test
gs
mov
pop
mov
imul
sbb
mov
ror
push
cmc
ret
pop
mov
cli
and
repz
jecxz
mov
aaa
dec
inc
test
sti
shrb
push
xlat
mov
jo
add
dec
stc
inc
push
xchg
add
repz
dec
hlt
push
js
sbb
mov
xor
out
inc
and
clc
mov
sub
test
sbb
xchg
stos
push
dec
jbe
in
jns
inc
rcrb
mov
das
btc
mov
sub
jl
call
sahf
inc
addr16
or
pop
xor
movsl
push
xchg
dec
xor
movsb
sbb
lahf
fisubrs
xor
ret
lahf
es
out
cmp
fnstcw
icebp
mov
and
loope
mov
fnsave
jecxz
xchg
jmp
jmp
dec
negb
sti
cltd
mov
sti
int3
addr16
aaa
push
sbb
inc
aad
xor
inc
testl
or
push
hlt
mov
sub
call
gs
jbe
and
in
mov
in
dec
mov
cs
aam
frstor
jb
popf
aam
movsb
jl
xor
addr16
push
sbb
ss
test
adc
inc
jnp
push
rclb
cmp
xchg
movsb
shrl
fsubrp
jge
mov
gs
jle
das
mov
aas
dec
leave
mov
aaa
or
push
jno
insb
aad
xor
fwait
clc
mov
aas
fbld
lods
cld
js
cmc
add
sub
lret
xchg
fsubs
mov
andps
mov
and
jge
jnp
push
and
or
push
mov
dec
lahf
mov
jmp
and
std
ret
or
dec
test
lcall
push
mov
ror
mov
test
jae
out
fwait
lcall
add
sarl
dec
mov
jp
cmp
add
jmp
mov
ret
out
xchg
in
icebp
mov
cmp
int
and
sbb
and
stc
mov
dec
mov
ltr
mov
lods
mov
adc
pop
xchg
test
pop
jmp
pop
shll
inc
and
popa
xchg
sub
mov
mov
aaa
push
movsb
pop
push
add
mov
loop
mov
jo
push
jl
fyl2xp1
call
dec
inc
dec
inc
dec
cmp
xchg
ljmp
ljmp
jg
fcomps
sub
movsl
and
test
shl
push
les
ret
out
fdivs
subl
mov
mov
xchg
inc
cmp
and
pusha
aam
sub
gs
sbb
test
jmp
xchg
jp
in
xor
fucomip
mov
jle
jns
bound
sub
jl
sbbl
imul
inc
and
xchg
fiaddl
into
and
sarl
xchg
pusha
and
mov
sbb
cmp
es
outsb
shll
or
xor
inc
pop
add
scas
lea
pop
lock
ljmp
and
jbe
dec
into
and
into
mov
and
repnz
xlat
rcrb
jo
jge
and
scas
cltd
adc
sub
mov
and
jmp
pop
shlb
lea
mov
lret
loopne
mov
aam
mov
sbb
inc
cmp
jo
fadds
bnd
ficoms
sti
test
insl
mov
loop
into
call
mov
jmp
jmp
mov
stos
inc
subl
push
stos
ss
ljmp
mov
ljmp
sbb
scas
mov
push
mov
pause
xor
test
mov
or
cmc
movsl
add
lods
addr16
jbe
xchg
stos
pop
js
inc
lods
call
xor
in
rdmsr
jg
scas
out
cmpb
mov
xchg
test
cli
pop
mov
pop
push
imul
popa
cmp
popl
negb
sbb
nop
rorl
cmpsb
insl
scas
adc
daa
ret
mov
mov
push
cmp
inc
ja
in
adc
ljmp
mov
icebp
adc
clc
push
sbb
dec
pop
cli
push
fwait
xlat
mov
cmp
adc
mov
xchg
xchg
sbb
jmp
arpl
in
xor
call
inc
push
addr16
pushf
enter
popa
fwait
out
int
sub
mov
ss
xchg
jb
sahf
sub
and
jl
popf
push
fwait
test
adc
and
aaa
mov
das
pop
outsl
iret
xchg
dec
mov
gs
or
cli
lods
lcall
rcrb
add
mov
xor
jecxz
lods
xchg
push
inc
test
push
push
xor
int
xchg
mov
cmpsb
xchg
add
ss
dec
push
and
mov
ficomps
push
pushf
inc
fsts
xchg
aaa
ds
je
and
adc
fcomps
or
xchg
adc
lret
sti
lret
mov
test
inc
daa
scas
lcall
push
lcall
or
into
out
mov
aad
pop
jl
aam
mov
int
xchg
xchg
mov
jnp
outsb
pop
scas
cmp
cmp
mov
adc
insl
fsubrs
add
dec
shrl
push
mov
stos
jmp
hlt
cmp
fildll
and
fldl
dec
outsb
mov
mov
mov
gs
in
inc
dec
lock
xchg
negb
std
das
testb
xor
out
sbb
ret
enter
out
sub
int
adc
shr
repnz
lret
repnz
sub
push
dec
push
nop
mov
jno
jecxz
cltd
lods
test
fwait
pop
jl
or
or
js
jmp
xlat
in
jp
lret
stos
push
adc
and
mov
mov
pop
xor
pop
add
adc
fwait
dec
jle
dec
scas
mov
test
dec
xchg
pop
and
jo
rcrb
xchg
js
inc
cli
xor
and
xchg
push
mov
add
rcr
shll
xchg
sub
sub
adc
inc
sub
jb
popa
and
pop
push
xor
jge
pop
pop
mov
in
daa
and
jae
cmp
cld
cmpl
dec
sub
sub
push
push
push
adcl
pop
shlb
cmp
pop
popf
cmc
cmp
jo
and
rolb
sub
outsl
xlat
imul
inc
out
fsubrl
shrl
icebp
sti
add
mov
sub
inc
aad
ret
movsb
or
dec
leave
std
adc
aam
inc
clc
dec
dec
sbb
mov
mov
or
popa
inc
pop
pop
out
push
xor
int3
inc
sub
push
fcmovnu
pop
or
adc
add
mov
nop
ret
adc
mov
aaa
cld
pop
jmp
lea
cmpsb
cmpsl
xor
loopw
adc
fistps
stc
mov
das
xor
dec
mov
enter
clc
xor
insl
push
pop
pushf
imulb
mov
jb
xor
fstl
leave
test
push
mov
xchg
adc
mov
out
and
xor
mov
mov
insl
fstpt
ss
sub
add
arpl
inc
pop
xor
ret
pop
mov
push
in
push
mov
cmp
lret
mov
xor
cmp
mov
inc
into
xchg
out
fwait
outsb
rolb
dec
scas
divb
mov
lcall
sbb
adc
mov
and
call
jg
mov
fisubrl
sbb
dec
insb
fidivrs
outsb
aas
icebp
mov
mov
pop
iret
push
lret
push
arpl
adc
jae
xlat
mov
je
adc
and
mov
mov
fstp
xchg
mov
stos
rep
fldenv
aam
cmpsb
imul
xchg
daa
pop
push
bound
mov
shll
inc
sub
iret
or
shl
and
negl
jae
lock
dec
rcrl
frstor
sarb
fisttpll
dec
push
push
dec
jno
sbb
out
mov
mov
fcoms
sub
and
jae
ljmp
jne
push
dec
and
mov
lock
inc
aam
cli
std
sub
jp
mov
cmc
dec
cmp
pop
sbb
cmpsb
je
test
add
sar
stos
mov
mov
dec
adc
daa
inc
ss
mov
out
int
shlb
inc
in
or
and
mov
lcall
cmp
out
and
fdivrs
lods
push
push
dec
cmpsl
mov
dec
jns
loop
fdivr
call
inc
in
cmp
dec
adc
and
mov
mov
cmp
int3
lea
pop
pusha
insb
test
lock
xchg
push
fwait
push
je
sbb
lds
cs
fs
mov
xor
out
das
dec
cltd
inc
stos
mov
lret
stos
xor
add
sub
std
pop
int
ret
jmp
jae
mov
and
inc
fs
ja
ror
and
enter
mov
jne
jmp
xchg
imul
sub
pusha
cmp
sub
push
pushf
cmpsl
jmp
mov
mov
dec
outsl
movsb
in
jge
mov
int3
jecxz
inc
testb
clc
mov
pop
imul
push
scas
stos
jmp
cmp
xor
cmp
stos
sbb
scas
shlb
mov
jmp
pop
aas
push
sti
rcrb
out
dec
mov
pop
xchg
cmp
movsl
and
mov
mov
gs
and
imul
xchg
xchg
mov
cld
mov
xchg
and
and
push
or
dec
das
push
pop
sbb
cmp
aas
int
in
aaa
cmp
fcoml
push
enter
fcmovu
or
pop
dec
fists
dec
jno
mov
lcall
pop
mov
pop
mov
arpl
adc
js
sbb
ja
jp
fdiv
mov
enter
mov
or
sub
test
shll
inc
jo,pt
js
adc
mov
adc
sub
inc
frstor
add
outsl
std
jbe
fidivrs
cli
sub
test
test
popl
outsb
shrl
inc
mov
in
jae
add
gs
pop
shlb
or
adc
imul
cmp
ret
test
jo
es
lods
das
ja
aad
and
into
in
push
xchg
xor
or
fstps
ja
or
pop
dec
or
jge
inc
rep
imul
orl
dec
les
push
cmpsb
mov
add
pop
cmp
outsl
push
insl
jp
push
dec
inc
rcr
sahf
and
dec
pop
xor
mov
out
mov
fadds
xor
or
popf
adc
subb
shrl
es
jg
mov
pop
fbstp
sub
jns
pop
mov
adc
leave
jmp
mov
movsl
int
adc
xor
jno
dec
movsl
mov
data16
fwait
xor
push
push
jecxz
dec
mov
add
int3
pushf
add
ret
xor
das
dec
mov
cmp
jecxz
mov
inc
jg
dec
mov
cmp
aam
inc
xchg
lds
pop
and
xor
orl
pop
dec
xor
aaa
popa
xchg
int3
jns
bnd
ja
pusha
sub
add
loopne
jle
dec
scas
shll
mov
ret
jecxz
lret
mov
jmp
adc
xor
jg
lods
fldpi
roll
jmp
jl
ret
or
adc
xor
mov
push
adc
imul
hlt
js
xchg
scas
popa
mov
rcll
sub
pop
cmc
mov
add
add
sti
jnp
fwait
shll
and
jnp
pop
repnz
or
xchg
ret
jne
je
cwtl
mov
pop
test
sbb
jns
add
push
pop
push
pop
mov
xchg
iret
insb
iret
add
fbld
cmpsl
outsb
call
adc
imul
pop
jge
mov
xchg
in
or
sarl
test
scas
sub
hlt
flds
mov
scas
rcll
shll
fcomip
int
inc
ss
rclb
mov
cmp
xchg
mov
out
inc
cmp
mov
fs
std
lahf
sub
repnz
cmp
or
orl
jmp
lods
push
xor
xchg
shll
xchg
je
add
jno
jo
sub
jbe
aad
sbb
clc
jl
add
jnp
pop
clc
sbb
mov
mov
sub
std
add
and
loop
cmp
jae
in
inc
xchg
or
cmp
and
test
jo
loop
iret
lea
push
pusha
arpl
sbb
sahf
mov
xchg
push
mov
add
sub
out
mov
stos
ret
add
mov
mov
mov
xchg
cld
mov
mov
iret
xchg
pop
leave
cmp
outsl
mov
fdivs
js
xor
out
and
insb
lret
push
xlat
push
inc
and
pushf
mov
cs
mov
int3
sub
fs
shrl
ss
fisubrl
repz
div
rclb
call
hlt
pushl
push
pop
mov
push
cmp
fldcw
decb
test
xor
sbb
xor
mov
shl
jp
and
add
icebp
xor
mov
xor
rcrl
push
lret
adc
jg
cmc
mov
push
or
xchg
mov
adc
lds
lods
mov
in
cmp
sbb
inc
in
popa
mov
stc
sbb
inc
repnz
fstl
out
imul
cwtl
push
rcrb
ror
sbb
rep
loop
je
pop
cwtl
gs
mov
jb
pop
daa
dec
inc
xchg
jecxz
jnp
rclb
rolb
push
clc
lcall
push
push
mov
add
cmpsl
cmp
addr16
daa
lods
mov
ret
adc
out
jmp
mov
push
fstps
xor
call
or
and
lock
stos
mov
pop
cmp
pop
iret
hlt
or
jno
mov
fcos
mov
ret
mov
jbe
push
jo
subl
test
dec
iret
out
aad
pop
adc
adc
push
fs
adc
ja
lds
adc
inc
push
pop
fcomps
jl
iret
pop
jnp
xor
xchg
je
les
xchg
jbe
push
cmpsl
mov
test
rclb
pop
iret
dec
ret
jg
mov
test
adc
in
lret
loopne
inc
out
lock
cwtl
mov
xchg
lock
outsb
jb
pop
loope
sti
aas
dec
jae
jl
adc
ficoml
mov
xlat
pop
add
sahf
andb
adc
rcrb
jge
inc
add
sub
dec
sub
cmc
cmc
ljmp
in
mov
iret
mov
scas
leave
ret
sbb
outsl
imul
das
es
hlt
mov
adc
fiadds
pop
insl
adc
add
test
fnstenv
pop
mov
jb
push
mov
js
daa
mov
test
dec
mov
add
mov
outsb
and
cmp
dec
pop
scas
or
push
shll
and
sarl
test
rorb
mov
lcall
aad
rorl
scas
mov
inc
mov
sub
shlb
out
out
mov
cwtl
or
insb
outsb
cld
jg
and
aam
xor
push
jle
hlt
loop
mov
jno
fwait
les
in
dec
cwtl
ljmp
add
mov
or
mov
rorb
fimuls
mov
sbb
push
xlat
in
jecxz
rcr
std
xchg
add
call
hlt
loope
jns
mov
pop
cmp
cs
cmp
std
push
add
rcrl
push
mov
aad
insb
lea
mov
mov
jno
or
sti
mov
jp
enter
out
test
iret
cmpsb
add
lret
xor
jnp
push
sbb
add
sbb
push
xor
dec
add
adcb
imul
in
mov
mov
mov
add
cmpsl
pop
mov
les
push
imul
and
ljmp
jne
outsb
pop
or
out
or
mov
ret
mov
js
mov
pop
or
test
pop
ds
push
cmp
sub
xchg
outsl
and
cmpsb
mov
add
sub
jg
cs
ret
popa
icebp
xchg
popa
inc
xor
xor
sub
in
ret
xor
mov
cmp
dec
xor
cmp
in
mov
mov
sub
inc
rorb
sar
ret
and
lods
test
js
fsubrl
pushf
and
mov
aaa
and
mov
jl
push
jl
outsb
mov
pop
fs
push
mov
pop
xchg
gs
mov
ret
and
in
xor
inc
inc
fstpt
push
mov
xchg
sub
rol
pop
push
dec
lcall
ret
push
xor
jns
jle
je
sbb
mov
pop
push
adc
dec
pop
push
aam
imul
data16
pop
xchg
in
cmp
pop
and
or
sub
rorb
push
fnstsw
and
xchg
mov
ds
loopne
jle
ds
xor
filds
adc
cmp
ficoms
push
pop
and
mov
dec
push
out
adc
ret
ficomps
movsl
es
loop
movsl
testb
xor
xchg
lahf
aad
sub
add
or
xchg
movsb
xchg
xchg
mov
adc
push
mov
fwait
in
lods
mov
dec
movsl
in
pop
imul
push
or
add
outsb
mov
scas
je
xlat
cmc
call
push
sti
sbb
rclb
roll
sub
and
call
or
pop
mov
sbb
in
scas
das
fs
cwtl
sbb
xchg
subl
cld
pop
jg
cltd
into
adcl
mov
mov
fidivl
fcompl
sub
sti
push
add
add
imulb
jae
das
and
ret
jge
and
shl
jb
ficomps
cmp
sub
xchg
test
and
stc
test
xchg
loope
pusha
jbe,pt
xor
fadds
cmp
jo
pop
sub
pop
in
adc
shl
add
fwait
lret
xor
mov
push
jp
sahf
pop
cmpsl
jmp
lods
lds
repz
scas
adc
jns
sbbl
mov
mov
addr16
sub
xor
out
mul
popa
adc
cmp
inc
test
cmp
mov
xchg
cmp
mov
scas
fisubs
mov
pushf
and
stc
lds
repz
int3
pop
dec
mov
cmpsl
aam
pop
cmp
fucom
sub
sbb
sbb
test
pop
sub
adc
or
mov
repnz
jae
inc
fsubs
ljmp
mov
dec
push
in
cmpsb
call
aaa
adc
jp
sahf
lock
push
aaa
imul
pop
pop
loop
lret
mov
aas
pop
fld
xchg
jb
jae
cs
mov
das
insl
mov
jg,pn
lods
imulb
rolb
xor
xor
jb
adc
rcrb
stc
cwtl
add
pop
sub
stos
dec
mov
mov
cli
iret
mov
xchg
lret
push
push
pop
lahf
pop
sbb
jmp
fisttps
fisubrs
out
dec
push
test
push
int3
or
push
call
sub
mov
adc
mov
call
pop
cmp
gs
lods
mov
push
mov
fadd
imul
mov
imul
loopne
cmpsb
cwtl
bound
sub
ficomps
dec
xor
push
push
les
dec
mov
cmp
out
fdivr
fwait
lahf
pop
inc
mov
xchg
ds
mov
push
ret
sbb
into
les
and
cmp
mov
leave
dec
xor
ret
cmp
xchg
pop
push
push
les
jmp
adc
cmpsb
and
shrl
cmp
adc
pop
xchg
int3
dec
adc
cwtl
cmp
dec
xlat
arpl
sub
dec
addb
cmp
enter
in
and
popf
iret
sbb
es
insb
fistpl
push
push
icebp
inc
ss
cltd
jge
stos
sbb
push
cmpsl
mov
and
imul
aam
dec
xlat
mul
jmp
sarb
fwait
lods
out
cs
push
mov
mov
fists
test
cmp
es
jle
jl
pop
lcall
mov
in
adc
mov
xchg
ds
bound
fs
popa
in
xor
add
sbb
cwtl
pop
cmp
pop
jno
xor
out
jne
test
fimull
and
repnz
testl
xchg
jp
pop
sbb
call
fs
jbe
in
inc
sub
dec
in
in
lret
inc
jne
push
push
mov
movsb
shll
cmp
sahf
jb
rorl
mov
pop
addr16
pop
and
sbb
or
leave
enter
syscall
iret
dec
push
and
and
pushf
fs
mov
pop
std
test
std
dec
nop
or
repz
and
out
add
fisttpl
and
nop
insl
mov
ret
and
outsb
xor
xor
cmp
push
frstor
push
imul
ss
lret
or
push
aaa
xchg
je
adc
popa
pop
repz
aaa
fidivrs
sub
cli
repnz
unpcklps
xorb
scas
sarb
jp
mov
dec
sub
mov
ret
cwtl
xchg
and
pop
or
adc
loop
xlat
lods
dec
pop
mov
mov
fwait
add
jmp
add
leave
and
jle
mov
or
jmp
in
pop
stos
mov
aad
popf
inc
push
or
cmp
notb
setp
jns
jge
mov
lahf
into
rorl
mov
cmpsb
sbb
ljmp
rolb
popa
hlt
xchg
lret
insl
xlat
pop
mov
adc
mov
jne
shlb
cmp
mov
add
shlb
sbb
mov
in
roll
jne
jecxz
adc
sahf
inc
ds
adc
nop
cli
fstpt
icebp
enter
scas
xlat
int
push
popa
sub
pop
add
mov
fsubrs
mov
push
pusha
ja
out
pop
test
or
shrb
mov
imul
jns
cltd
xor
iret
lea
jb
in
dec
scas
repz
push
out
decl
test
pushf
adc
dec
pop
sbb
pop
clc
pop
ja
iret
fstl
or
inc
clc
ret
ret
nop
jge
cmp
aam
lock
ja
push
outsl
popf
sbb
jb
fbstp
frstor
pop
mov
cld
lret
xchg
stos
insb
bound
mov
dec
pop
push
push
scas
push
push
sbb
les
dec
icebp
cmpsl
imul
lods
adc
or
inc
push
rcr
enter
arpl
push
scas
pop
insl
sbb
repnz
les
cmpsb
out
fldt
clc
xchg
decb
enter
aas
cmp
repnz
and
jmp
ss
aas
lods
xorb
jae
idivl
push
push
mov
pop
pop
pop
lcall
sbb
mov
jge
xor
stos
loop
jg
lods
shlb
lds
pop
stos
or
dec
jbe
fnstsw
push
les
nop
dec
and
imul
addr16
jle
addb
inc
pop
jp
aam
sbb
enter
xchg
out
push
sbb
sub
lret
or
xchg
jmp
and
or
clc
cmpsb
push
mov
sbb
fstpt
jmp
jge
add
and
adc
arpl
ret
lret
jle
xor
mov
fcomps
and
xchg
rcl
pop
test
xor
xor
sbbb
sub
and
imul
aaa
mov
test
adc
xchg
push
push
sbb
jmp
push
stos
push
lods
jno
pop
inc
loop
sub
xchg
pop
iret
lods
lds
in
cmpsl
mov
jb
adc
adc
add
cmp
dec
mov
xor
and
adc
push
xor
sub
fsubr
push
fistpl
cld
push
push
mov
or
pop
pop
cmp
sbb
das
push
cmp
push
cmp
mov
loop
sbb
cmp
xchg
ss
jg
and
jnp
dec
pushf
dec
jb
aad
sbb
jmp
aad
sbb
popa
mov
out
outsb
xor
gs
sbb
mov
clc
shll
jmp
sbb
popf
sbb
and
stc
gs
push
punpckhdq
loope
pop
fdivrs
mov
stos
or
ret
jae
add
mov
ds
mov
int3
in
jg
mov
lds
stos
fcompl
pop
enter
dec
pop
and
test
sbb
lret
mov
xchg
dec
ss
dec
in
inc
pop
bound
xchg
cmp
jp
out
addr16
mov
push
mov
or
lret
xchg
push
xchg
ret
seta
mov
add
inc
pop
push
jne
loope
aam
cltd
pop
push
std
jmp
cld
push
fmul
mov
or
lret
inc
cmp
and
mov
aas
test
std
imul
pop
jb
mov
pop
movsl
sub
test
xchg
imul
xchg
or
jge
sub
cmpsl
mov
hlt
xor
jge
pushf
das
cmpl
and
xor
or
push
cmp
popf
or
imul
mov
enter
sbbl
cmp
mov
insb
and
xchg
scas
outsb
jp
repz
fidivs
inc
or
insb
jg
je
push
les
rorb
push
fdivs
jnp
neg
rorl
pop
add
sbb
js
mov
pop
push
frstor
mov
sbb
movsl
loope
insl
incl
loope
aaa
mov
jae
lds
cli
adc
adc
jecxz
adc
movsb
or
mov
adcb
jecxz
out
or
cltd
imul
insb
daa
pusha
sahf
push
fildll
mov
pop
mov
jns
pop
sbbl
scas
push
push
movsl
xchg
sti
addb
push
sbbb
stc
jg
sahf
icebp
pop
es
stos
cld
jnp
inc
sahf
jbe
sbb
xchg
js
lretw
sub
inc
push
imul
out
scas
mov
sbb
jnp
and
rorl
data16
push
inc
mov
nop
jne
sbbl
out
add
adcb
in
fcompl
inc
testb
mov
pop
push
dec
jbe
pusha
bound
cmp
push
sub
adc
or
or
add
sub
mov
cmc
mov
jo
and
stc
roll
pop
or
adc
mov
xor
push
add
sahf
jmp
test
je
add
or
scas
test
out
mov
add
push
dec
scas
dec
nop
popa
into
aam
mov
or
sub
lods
adc
mov
bound
js
bound
mov
sub
xor
mov
lods
lds
clc
pmulhuw
jno
or
jge
les
sbb
int
addr16
xchg
mov
dec
stc
pop
sarb
and
les
mov
xchg
rcl
sbb
sub
je
add
popa
push
cmp
xor
ljmp
test
call
sub
jbe
sbb
stc
mov
inc
xor
push
lea
in
lea
jp
outsb
ret
lds
arpl
in
jp
mov
pop
cmpsl
pop
pop
xchg
and
ret
mov
mov
leave
sbb
cld
adc
sbb
push
outsl
inc
adc
sub
sub
push
decl
clc
std
pop
and
fisubs
lahf
push
stos
sahf
jecxz
mov
subl
pushf
repnz
jb
cs
jge
xchg
fisubl
cmpsb
into
movsl
and
and
mov
test
repnz
es
mov
adc
adc
cmp
dec
test
mov
incl
pusha
ret
arpl
leave
mov
jae
jo
in
aad
outsl
mov
roll
rorb
enter
fcoml
rcr
loopne
inc
xchg
sahf
pop
imul
loope
popf
f2xm1
test
into
pop
popa
scas
inc
push
movsl
cmp
test
xchg
in
faddl
jns
gs
mov
jl
mov
cmp
es
adc
sub
pop
ret
xor
push
mov
rcll
cmp
mov
jae
mov
cmpsb
adc
ret
dec
push
call
aas
mov
mov
inc
push
mov
xor
inc
hlt
cmp
jmp
push
aas
int3
xchg
jb
shl
pop
cmp
add
pop
fildll
cmpsl
jo
xchg
jne
aaa
daa
stos
push
aaa
out
pop
jg
sbb
or
inc
dec
std
or
data16
push
push
stos
dec
xor
out
or
xor
outsb
sbb
pop
mov
xor
mov
rorb
push
add
mov
pop
or
fsincos
sbb
pop
cwtl
mov
xchg
lods
testl
add
ret
or
mov
rcr
mov
enter
icebp
filds
mov
inc
inc
cli
sbb
aas
in
es
lcall
push
fcomip
add
outsb
and
mov
rsm
ljmp
out
mov
mov
es
or
addb
pop
aam
mov
inc
lods
dec
outsb
and
jle
inc
inc
pop
adc
enter
and
popf
int
lock
and
cli
push
inc
ljmp
inc
pop
fs
nop
lcall
mov
push
enter
cmpsl
insb
mov
xorb
stc
dec
push
das
adc
mov
sbb
pop
icebp
jle
jnp
dec
bound
pextrw
push
mov
ljmp
pop
and
js
sub
out
cmpsl
cwtl
add
add
out
lret
repz
and
flds
xor
hlt
idiv
lods
std
dec
lock
mov
inc
imul
aas
jae
out
ja
or
clc
add
dec
cmpsl
fdivrs
lahf
and
loopne
sub
scas
xchg
mov
lret
sbb
enter
mov
dec
add
loope
ss
and
or
lods
dec
push
test
in
loopne
pop
push
push
sbb
cmpsb
sub
cmpsb
mull
inc
mov
pusha
mov
jo
je
mov
gs
test
cmc
rcl
hlt
inc
adc
fs
cmp
rcrl
inc
pop
jnp
adc
jge
adc
ss
adc
lods
sti
mov
and
xchg
mov
inc
repz
sbbl
xor
jl
xorl
cmp
mov
sub
pop
cmp
xchg
lea
adc
mov
fdecstp
hlt
jp
jb
int3
xchg
fisubrs
sahf
lods
xor
lods
sub
pop
mov
mov
divl
adc
pushf
lret
stc
inc
sub
rcrb
add
lcall
popf
popf
or
lret
add
out
aas
insl
sub
add
xchg
pop
je
add
mov
jno
ljmp
push
cmpsb
push
pop
or
or
sbb
and
xchg
loop
push
jmp
iret
sub
mov
mov
divb
mov
push
push
and
push
or
xor
test
and
xchg
sub
bound
rcr
mov
pop
jmp
aaa
push
pop
icebp
rcr
aaa
push
popf
push
adc
sub
sub
mov
ja
mov
sub
js
mov
js
add
pop
popf
lea
rclb
mov
xchg
pusha
clc
test
jno
repz
xchg
xchg
lock
xchg
sub
fistpl
std
sti
mov
es
subb
popf
xchg
mov
mov
call
scas
mov
or
int3
loopne
cmp
xchg
rcl
dec
incl
sbb
mov
fsub
popf
lahf
outsl
mov
add
mov
sarb
inc
popa
fadd
jmp
mov
lret
inc
mov
shlb
scas
xchg
std
adc
adc
fcoml
and
mov
int3
lahf
out
inc
mov
addr16
bound
xchg
cmp
movsl
cwtl
push
xchg
cmp
or
push
iret
lahf
and
sub
xchg
out
out
in
xor
mov
push
ja
fcmovbe
mov
fbstp
and
cmp
jge
test
dec
out
xchg
cmp
mov
lock
sbb
xchg
sub
pop
decl
call
pop
push
push
test
fiaddl
out
sbb
loope
aad
addb
cmp
js
adc
xlat
push
adc
loopne
jg
stos
out
push
mov
into
lret
cs
mov
les
ds
jnp
jmp
icebp
test
pop
fmuls
stc
rcrb
or
mov
test
std
add
rcl
enter
movsb
adcl
in
sahf
data16
pop
dec
pop
or
jb
incl
in
xchg
std
cmp
outsl
xchg
xchg
or
jo
push
or
sub
in
and
ss
jge
mov
dec
cmp
inc
or
dec
call
insb
xor
addr16
lret
imul
in
inc
sbb
adc
dec
jbe
sbb
pop
sub
mov
shll
mov
jne
pop
add
mov
lea
repnz
dec
pop
sbb
leave
xor
fdivs
lret
loopne
clc
inc
popa
gs
mov
push
rol
and
push
cmp
out
dec
push
add
stc
data16
repz
sub
adc
das
dec
dec
test
test
adc
cmpsb
push
or
mov
and
loope
pop
sbb
out
aam
stos
insl
sub
movsb
mov
das
test
push
sti
lret
sub
mov
push
ljmp
sbb
loop
jo
outsb
xor
cmpsb
or
jns
xchg
lods
mov
or
and
lahf
jmp
xchg
cmpb
fsubrl
jg
adc
imul
rolb
in
or
cli
stc
jae
insb
inc
or
pop
loope
push
cmp
jb
mov
sub
jmp
lds
loopne
lcall
fdivs
divl
mov
cltd
push
aaa
rcl
mov
sbb
push
cmp
push
test
sbb
cmp
test
sbb
xor
xchg
inc
insl
negl
andb
sub
pop
pop
vmread
pop
and
fs
push
cmp
push
mov
cwtl
loope
add
inc
pushf
sbb
stc
repz
jmp
outsb
adc
mov
gs
cmc
gs
xor
ss
loope
inc
aad
adc
mov
call
inc
jmp
push
pusha
rorl
sub
sbb
call
ret
mov
mov
das
pop
mov
shrb
mov
pop
push
dec
sbb
and
or
test
rclb
scas
adc
cmp
jno
imul
xor
mov
jno
inc
cmp
popf
repz
jl
icebp
in
xchg
sbb
call
addr16
adc
adc
pop
jmp
orl
jp
ret
repz
sbb
add
cmp
xchg
push
aam
push
dec
nop
popa
inc
idivb
mov
sbb
pop
add
cmc
sbb
and
dec
filds
push
fiaddl
hlt
push
dec
sbb
cltd
jb
xchg
lret
pusha
stos
out
sbb
mov
outsb
xorl
pop
xlat
sub
xor
and
xorb
popa
adc
insl
cmp
jge
loopw
outsb
loopne
xchg
jae
std
xor
xor
icebp
add
cmp
jmp
mov
clc
test
sarl
xchg
mov
jnp
cmp
pop
ds
adc
cmp
scas
mov
add
cld
cmp
shll
loop
daa
fs
adc
bound
xchg
dec
movd
pop
daa
jg
xadd
and
loope
fcos
or
stos
push
sbb
pop
adc
out
ficomps
int
stos
outsb
mov
js
movsl
icebp
lock
adc
clc
loopne
xor
mov
dec
rcll
int
xor
mov
gs
hlt
jbe
lcall
ss
addr16
pop
add
mov
jbe
pop
test
lret
add
dec
test
cs
mov
jle
or
inc
lock
sub
nop
xchg
dec
add
cmp
mov
mov
jae
mov
ja
dec
test
cmp
in
add
jb
popf
jmp
ror
mov
icebp
data16
mov
insl
lods
fsubs
jne
inc
adc
stos
or
rcrl
jmp
test
dec
into
es
cmpl
es
test
dec
shrb
imul
push
loop
sti
pop
nop
jmp
cmp
mov
jae
jg
push
fldl
daa
jl
fdivrl
pop
xor
mov
incb
sbb
sbb
pop
mov
inc
cwtl
imul
lret
pop
sub
arpl
sub
cmp
outsb
push
jl
outsb
push
jmp
inc
std
jae
lret
jmp
cmp
sbbl
sbb
lret
jns
das
ret
dec
and
push
repnz
mov
scas
adc
push
sti
imul
cmp
and
or
push
xor
sub
mov
clc
xor
adc
fcomps
movb
aaa
mov
adc
fs
movhlps
movsb
push
mov
mov
jno
sbb
adc
jecxz
mov
sub
mov
inc
xchg
push
push
imul
int
lds
test
lods
stos
adc
loopne
pop
daa
das
push
addl
leave
jo
and
or
cmp
sbb
out
jecxz
dec
xor
test
or
dec
mov
sub
adc
cmp
push
call
imul
test
cmp
lock
jb
test
cli
inc
inc
dec
aaa
pop
addl
lcall
mov
adc
in
xchg
adc
pop
sbb
cmp
stc
loopne
and
cs
and
push
xor
cmpsl
xchg
fistpll
xor
xlat
je
cmp
mov
mov
push
jle
mov
mov
dec
insl
mov
jb
mov
nop
xor
sub
or
dec
push
adc
mov
xchg
xchg
xor
dec
das
jo
sbb
add
enter
mov
sbb
adc
fisubl
mov
xchg
daa
mov
lcall
pop
leave
jmp
push
clc
lods
mov
dec
movsb
ljmp
call
and
and
or
call
push
testb
fidivl
adc
aaa
inc
hlt
add
or
insl
cmp
aad
lret
or
sub
outsb
loop
mov
sbbb
movsl
shlb
inc
xor
pop
lock
hlt
repz
jecxz
inc
mov
xor
adc
pop
jg
dec
ljmp
push
das
or
inc
insb
sbb
in
cli
adc
jo
sahf
or
cld
push
imul
add
push
ljmp
sbb
pop
decl
cmp
xor
mov
pushf
imul
mov
clc
push
pop
gs
push
in
hlt
jle
in
mov
inc
xchg
inc
inc
out
cmp
mov
pop
loope
xchg
ret
out
sbb
dec
mov
arpl
aad
push
fcomip
mov
test
dec
lds
jmp
jne
shrl
pop
dec
mov
inc
jmp
ret
enter
xchg
xchg
cmp
aad
aam
pop
rcrl
ret
mov
test
out
aas
lret
pop
adc
mov
mov
dec
fimuls
mov
sub
loop
iret
je
mov
dec
in
cld
pop
sbb
sbb
in
repz
xorl
or
fstp
mov
in
inc
je
jne
add
in
repz
sbb
mov
push
or
xchg
int
or
push
sbb
and
sbb
std
and
jbe
cltd
pop
adc
or
icebp
adc
push
mov
imul
xor
mov
push
out
ret
mov
push
mov
out
sbb
mov
out
clc
adc
mov
hlt
mov
fsubrl
xor
fistps
mov
adc
aas
jmp
jmp
cmp
sub
and
inc
lcall
stos
push
fmull
push
in
loop
or
xor
fnsave
addr16
inc
jno
pushf
inc
insl
sbb
les
xchg
dec
jo
cltd
pop
inc
mov
ds
movsb
sbb
aad
mov
sub
das
and
mov
jo
ja
scas
enter
cmpsl
mov
jns
test
or
xchg
inc
stos
xchg
inc
lcall
dec
xlat
testb
lods
mov
add
aas
jl
xchg
pop
xchg
out
sub
stos
int
outsl
pop
xor
dec
scas
push
push
notb
testb
and
inc
loopne
push
and
jnp
pop
pop
data16
imul
ret
lock
nop
jno
pop
sub
dec
cli
arpl
adc
mov
loop
inc
mov
jg
std
cmpsb
pop
jbe
push
or
mov
xchg
cltd
jne
repz
adc
lods
inc
ljmp
sti
mov
ljmp
and
mov
cmp
add
addr16
popf
mov
negl
addr16
mov
push
push
jo
cli
dec
xchg
pop
dec
stos
and
add
mov
in
fstl
inc
int3
dec
dec
add
out
add
adc
loope
cmp
add
fimull
in
xchg
and
jp
and
jnp
aad
push
cmp
sub
and
jecxz
inc
push
outsb
stc
into
jl
ret
inc
dec
pop
aas
push
pop
fcomps
and
insb
push
mov
inc
mov
inc
inc
pop
pop
add
dec
and
fdivs
push
bound
fdivs
mov
push
add
sbb
or
andb
loop
xchg
cmp
xor
xor
test
add
xor
daa
cltd
fistpll
scas
or
push
mov
pushf
mov
push
mov
je
jo
adc
jnp
cmp
sub
lret
cmpsb
push
jl
and
inc
xchg
xchg
add
xchg
mov
xchg
cmp
cli
lods
push
mov
dec
popfw
push
adc
int3
js
sbb
in
lahf
lret
xor
stc
cmp
aas
das
pop
lods
scas
repnz
inc
loope
adc
pop
addr16
imul
adc
or
cltd
cld
push
sbb
and
rolb
jno
push
lea
hlt
sub
outsl
sbb
pop
imul
movsl
loope
mov
mov
int3
inc
mov
xlat
pavgb
out
imul
repz
ret
push
out
addr16
inc
cs
inc
sbb
out
cmovb
jbe
scas
cmp
fwait
out
aam
rol
ds
sahf
cmp
inc
xchg
jl
out
idivb
rcrl
sub
jns
ror
sub
xchg
push
add
adc
jmp
and
sbb
imul
stos
stos
dec
inc
insb
mov
add
mov
sti
xchg
outsl
push
inc
inc
cmpsb
das
add
and
cmp
sahf
mov
loope
xchg
fcom
addb
hlt
lcall
ret
stos
or
push
mov
ret
jo
push
call
hlt
aaa
sahf
sbb
inc
mov
outsl
mov
xor
mov
stos
ror
movsb
insb
jo
int
push
je
inc
jmp
popf
mov
pop
dec
pop
jmp
shll
loope
inc
inc
xor
bound
aaa
sbb
adc
xor
leave
mov
push
mov
inc
mov
icebp
lea
divb
and
sbb
cwtl
stos
mov
cmp
or
push
orl
adc
or
sub
loopne
xchg
xor
add
inc
or
inc
test
cld
inc
fcoms
jg
sub
gs
clc
add
loope
jmp
aas
mov
or
lret
cmc
and
mov
gs
adc
rcrb
sbb
xchg
ror
jl
adcl
incl
push
push
orb
aaa
mov
or
ret
insl
cmp
sub
push
xchg
popl
gs
xor
sbb
jb
push
sub
xor
out
pop
inc
or
std
pop
jmp
push
lret
or
jge
outsb
mov
data16
push
lret
insl
leave
pop
sub
ds
or
cmpsb
adc
add
fstpl
pop
xorb
dec
xchg
lahf
sarb
arpl
jbe
mov
ja
jnp
mov
xchg
imul
out
inc
mov
push
push
mov
sub
mov
push
mov
je
add
aad
ss
xchg
psrld
or
cwtl
hlt
mov
js
jmp
jg
mov
add
les
cmpb
pop
and
ret
stos
jae
fldenv
das
mov
outsl
pop
pop
xor
or
push
and
jmp
mov
pop
stos
cld
xchg
jge
or
mov
or
push
sub
jle
cwtl
mov
xchg
and
fwait
enter
xor
xchg
mov
iret
cmp
sub
cmp
or
sub
mov
sub
mov
dec
xchg
test
xor
dec
mov
pusha
xchg
cmc
add
arpl
out
adc
arpl
mov
loopne
fidivl
cwtl
xchg
dec
cltd
fs
ret
insl
inc
xor
cmp
test
inc
out
jle
inc
cltd
call
loop
xchg
xchg
cmp
cli
outsb
daa
jno
mov
add
movsb
scas
mov
les
daa
jmp
fwait
mov
test
jge
inc
pop
loop
sbb
sahf
sbb
mov
cmpl
pop
inc
repz
cmpsl
int
fidivs
add
cmpsl
pop
repz
in
mov
push
rcr
adc
and
push
rcll
xor
mov
cli
hlt
sub
lcall
fadds
jne
add
jmp
push
mov
add
xchg
or
mov
xchg
test
rclb
or
jnp
pop
mov
sarb
int
popf
dec
xchg
shll
aad
mov
fldl
test
add
enter
sub
dec
xlat
mov
subb
outsb
popf
std
or
icebp
fstps
mov
mov
popa
mov
add
fisttps
mov
sahf
mov
cltd
jo
xchg
iret
fs
outsl
in
dec
femms
jp
and
fcmovne
push
pop
cwtl
scas
xchg
sub
and
loope
mov
sbb
push
adc
aaa
in
dec
aad
test
pop
sar
dec
xor
adc
stos
dec
std
stos
sub
je
loope
fisttpl
add
cmpsl
pop
js
orl
pop
je
stos
not
push
jb
cltd
out
mov
pop
inc
movsl
vaddps
fiadds
fwait
pop
jns
xor
sti
jp
int3
add
fdivrs
out
adc
fbld
jno
xlat
clc
stc
mov
fdivrs
push
push
inc
cmp
mov
arpl
push
xor
dec
or
js
cmp
inc
clc
out
addr16
mov
insl
lahf
cltd
movsb
jle
mov
add
pop
add
in
insb
xchg
sub
jns
add
add
push
ret
insl
iret
rolb
ja
adc
inc
movsb
ret
mov
test
daa
xchg
js
sbb
sbb
test
imul
int3
mov
in
mov
int
dec
mov
and
sarl
xchg
cmpl
dec
not
xor
push
test
xor
jbe
inc
mov
stos
pop
cmp
cs
xchg
roll
lds
aaa
mov
mov
xchg
imul
jbe
cs
ds
es
cmp
jge
sbb
dec
popf
pusha
divb
testb
cmpsb
inc
or
cld
mov
lods
and
and
fs
out
sub
mov
add
aas
inc
leave
fbld
movsb
inc
xor
popa
les
test
lahf
sub
cwtl
mov
or
jl
pop
push
adc
mov
push
divb
jns
cltd
xchg
outsl
sub
in
mov
mov
push
fwait
mov
mov
les
scas
fcompl
jle
in
mov
aas
xorb
enter
mov
pop
cwtl
jae
out
xchg
cmp
hlt
imul
xorb
or
mov
mov
add
cld
mov
dec
aas
test
mov
mov
mov
inc
mov
inc
das
xchg
stc
xchg
cltd
sub
je
jle
mov
shrb
lahf
imul
loope
movb
xchg
fbld
out
cmp
data16
ljmp
push
fsubl
and
mov
inc
xor
jae
jns
mov
nop
pop
dec
pop
mov
out
gs
mov
in
adc
push
push
sahf
sbbw
or
arpl
sub
dec
inc
add
jge
fwait
inc
push
xlat
inc
pop
mov
daa
or
sbb
and
sbb
push
push
push
mov
iret
mov
and
dec
push
inc
cmp
xor
stos
push
rorb
xchg
jns
repnz
stos
int3
iret
cltd
lock
mov
fsubl
pop
adc
sub
inc
push
or
mov
je
cli
setnp
icebp
ja
fisubrs
inc
in
dec
imul
dec
popf
adcb
aam
incb
pop
adcb
mov
insl
lret
sub
aaa
jp
xchg
sub
fbstp
leave
sub
cmp
call
push
test
jne
sub
push
and
xchg
cmp
icebp
fwait
add
aad
mov
mov
lods
pop
mov
jmp
pop
pop
or
shlb
adc
mov
jg
cmp
ret
je
pop
mov
xchg
xchg
rcrb
movsb
mov
mov
mov
pop
xchg
xlat
aad
rclb
fidivl
pop
mov
hlt
cmp
mov
outsb
mov
into
push
push
negb
movsl
and
mov
xchg
and
dec
rcrb
dec
popf
mov
inc
adcb
ds
adc
and
fs
push
out
or
insl
or
sub
fmul
flds
push
mov
fsubp
loop
sbb
pop
xchg
lods
xor
dec
push
addr16
jg
push
mov
clc
sub
dec
call
ljmp
aam
cli
aad
clc
sbb
pop
mov
xchg
sub
popf
icebp
imul
and
popa
mov
fwait
subl
mov
push
rcr
imul
std
push
lods
movsb
mov
or
xchg
adc
and
leave
sbb
ret
and
adc
cmpsb
or
push
pop
mov
and
aaa
push
and
lret
jne
mov
addr16
cmovge
and
movsl
mov
fstpt
stc
xchg
push
cld
jg
jbe
ss
sbbl
cs
pop
popf
out
imul
adc
mov
push
fmuls
testb
xchg
cwtl
sub
add
je
loope
shlb
mov
popa
cmp
shr
pop
idivb
inc
mov
loop
aam
test
add
addl
push
sub
fwait
test
decb
pop
xlat
filds
cwtl
xchg
adc
repz
outsb
icebp
mov
sbbl
stos
clc
and
sub
int3
repnz
mov
loope
ret
push
mov
andl
out
or
test
add
mov
and
fsubrl
cs
pop
mov
cmpsl
fmuls
dec
sti
sub
leave
test
popl
push
ficoms
int3
xchg
sbbl
ss
xorb
inc
jnp
push
add
pop
test
cmc
and
lret
enter
mov
test
inc
cmpsb
mov
ret
mov
jbe
je
sbb
scas
inc
mov
out
or
scas
push
push
imul
int
inc
pop
fstl
je
outsb
add
cmp
jbe
ds
jmp
add
lock
sbb
mov
sbb
lods
gs
cmp
lods
fsubl
call
lahf
dec
out
push
mov
addr16
aad
xchg
mov
push
repz
adc
insl
in
dec
nop
repz
insl
xchg
mov
stc
xchg
ljmp
dec
in
in
mov
xor
or
fiadds
or
fnsave
clc
jb
scas
push
dec
add
aaa
lret
or
popa
sub
fists
pop
cmpsl
loopnew
add
sub
jle
leave
pop
add
daa
xor
cli
add
add
mov
lret
push
dec
mov
push
pushf
dec
sahf
push
int
test
or
cmp
cmpsl
cmp
dec
sub
shrb
test
loop
fcomps
xor
push
xor
adc
sub
insb
xchg
lds
nop
inc
aad
push
sbb
lret
mov
push
cs
or
push
xchg
call
mov
pop
xchg
lcall
inc
pop
sub
mov
fsts
xchg
aad
sub
sub
dec
into
adc
jp
clc
mov
or
jecxz
push
and
cld
and
std
shr
neg
pop
pop
cmp
dec
mov
scas
aad
stos
data16
pop
test
inc
in
orb
mov
icebp
xor
jne
repz
popa
int
or
xlat
fiadds
nop
and
and
je
xchg
mov
loopne
fists
sbb
mov
jnp
lds
inc
cltd
sbb
push
inc
cmp
scas
sar
or
push
out
xchg
repz
pop
aas
jae
dec
inc
mov
addr16
notl
jo
mov
dec
ret
xchg
testb
mov
inc
imul
push
rcl
pop
fdivrs
stos
gs
jl
loop
iret
orb
jmp
mov
sbb
jle
sub
aas
push
popa
cmpsb
mov
daa
push
and
inc
mov
add
pop
sub
testb
mov
stos
cltd
mov
cmpsl
push
xor
iret
mov
repnz
cli
lock
dec
fcmovnb
das
push
jmp
stc
and
or
jg
outsl
sub
mulb
sbb
add
dec
gs
sbb
lea
loopne
out
mov
sbbl
ficoms
cmp
dec
lcall
hlt
icebp
ljmp
xor
sub
lahf
cld
push
arpl
mov
jecxz
repnz
xlat
lds
mov
mov
imul
mov
pop
test
ficoml
sub
xlat
lret
loope
inc
jb
pop
mov
aas
pop
sub
push
repnz
mov
inc
jmp
aaa
popa
adc
ror
pop
xor
je
push
lret
jno
sub
push
mov
add
sub
loopne
hlt
dec
sub
push
xlat
shll
arpl
jns
dec
cmp
adc
add
imul
jle
xor
mov
int
xor
push
clc
push
ds
sbb
enter
dec
test
push
add
sbb
sub
loope
or
mov
jbe
call
jecxz
mov
xchg
pop
xchg
outsb
or
je
ljmp
cs
sti
in
into
fs
bound
mov
cmpl
mov
mov
mov
jo
cmc
push
xchg
mov
xlat
push
sti
xor
shlb
cmp
jbe
push
jge
pop
mov
sub
cmpsb
orl
push
mov
test
fwait
mov
movb
xchg
aam
cmc
jae
inc
les
icebp
sbb
adc
mov
pop
sbb
outsl
mov
cld
dec
out
push
mov
mov
mov
push
sbb
pop
insl
xor
cld
test
rcrb
mov
aad
dec
out
hlt
sub
jg
xchg
je
and
mov
xchg
add
mov
jp
xor
rorb
insl
mov
adc
leave
pop
insl
js
lahf
shll
insl
into
gs
sbb
adc
stos
xchg
lret
pushf
sbb
mov
lea
and
adc
lcall
pop
sub
loop
ss
push
dec
les
aas
mov
mov
jmp
push
push
xchg
pop
cli
jbe
out
ret
into
data16
dec
xchg
dec
cmpsb
mov
xchg
mov
test
sub
out
inc
xchg
cwtl
sbb
or
icebp
cld
add
sbb
lods
cmpsl
jmp
sahf
pop
mov
and
adc
push
mov
shrb
push
sub
push
mov
dec
sarb
loop
push
out
daa
and
test
scas
sbb
pop
pushf
and
mov
jge
sub
pop
popa
xchg
pmullw
xor
into
and
dec
or
mov
loop
div
stos
addr16
mov
repz
and
mov
xchg
pushf
sub
ds
shrl
dec
nop
sbb
add
adc
xor
sub
imul
inc
clc
movsb
hlt
aaa
les
jb
pushf
fdivrl
in
jbe
xchg
les
xchg
jae
int
pop
push
aaa
or
mov
stos
and
push
mov
push
mov
mov
repnz
lahf
mov
pop
sub
xor
push
add
out
movsb
mov
lret
cmp
cmp
pop
in
sti
pop
fmuls
mov
imul
dec
mov
fbld
sub
out
add
jae
ffree
lods
fmul
add
out
add
loopne
xorb
sbb
or
stos
mov
push
sbb
in
adc
mov
mov
imul
mov
daa
adc
adcl
rcrb
sti
mul
push
mov
test
mov
dec
outsb
xchg
nop
xor
lods
push
xchg
sub
sbb
xchg
xchg
add
shlb
pop
mov
and
pop
and
or
aam
sbb
push
or
adc
xchg
lods
sub
xor
test
int3
add
push
orl
xchg
bound
pop
sbb
jne
add
insb
mov
and
repnz
fs
ret
mov
xor
out
add
jmp
xchg
xor
arpl
loopne
mov
push
pop
jno
lock
gs
orb
xchg
fidivrs
rolb
lahf
into
sbb
mov
scas
mov
cmp
ficompl
filds
movntps
sahf
lret
lea
pop
sub
inc
stos
lock
repz
fdivrs
and
repnz
pop
or
shll
lret
cmp
idivb
cmc
jo
xor
adc
jo
mul
xor
add
pop
mov
and
jge
enter
jge
in
cmp
pop
push
mov
jle
data16
call
mov
pop
pop
mov
sub
movsl
ja
aaa
adc
clc
outsl
out
inc
cld
dec
pop
outsl
cmpsb
xlat
mov
test
cmp
pop
mov
sbb
xor
dec
adc
setge
in
cmp
scas
leave
enter
or
roll
roll
jb
test
push
xchg
mov
dec
jns
push
xor
movsl
or
outsb
xlat
fxch
jge
push
xor
rcrb
mov
mov
sub
pop
out
pop
push
out
dec
repz
jmp
xchg
jge
fidivl
push
xor
xchg
add
aas
dec
ljmp
mov
in
xchg
fisubs
xor
movsb
js
xchg
mov
aad
inc
dec
aam
and
ljmp
jo
push
xchg
ja
test
mov
daa
imul
push
mov
dec
push
daa
mov
mov
dec
loopnew
lcall
daa
push
dec
pushf
sti
dec
add
adc
add
inc
outsb
cld
pushf
adc
xor
jne
sub
out
decl
roll
or
xchg
iret
push
cltd
ret
mov
ljmp
mov
lods
stos
enter
jb
jmp
pusha
daa
xor
sbb
mov
pop
sbb
ret
mov
adcl
into
push
mov
aad
pop
repz
sub
int3
xor
jmp
add
push
popf
dec
lock
ds
in
loope
std
xor
push
stos
mov
push
dec
imul
mov
jg
dec
cld
in
popa
pop
movsl
mov
push
into
or
shlb
call
cmc
fidivrl
cwtl
test
xlat
xor
jae
xchg
mov
jb
cmp
les
outsb
xor
call
scas
inc
hlt
mov
mov
inc
xor
xchg
mov
daa
icebp
aas
xchg
push
in
lock
cmp
int
ss
lds
mov
jle
inc
or
int3
mov
movsl
cmpsb
dec
inc
out
cmc
ficoms
cwtl
inc
adc
cmpsl
addr16
imul
adc
jnp
xor
popf
ljmp
cli
scas
adcl
dec
jb
aam
cltd
idiv
les
xchg
sub
ret
leave
cmp
mov
inc
add
sub
sbbb
out
stos
icebp
push
jmp
mov
inc
mov
arpl
cmp
imul
loopne
pop
cmp
stos
and
adc
adc
gs
xor
push
jns
fcoms
pop
mov
jbe
push
push
test
xor
adc
mov
leave
nop
sar
pushf
inc
and
push
xor
jp
cmpsb
add
ss
mov
pop
insb
or
or
adc
test
sbb
push
xor
sub
adc
jae
ret
repnz
xlat
push
or
jbe
adc
pop
movsl
gs
fsubrs
test
pop
in
popa
dec
sbb
int
jns
xchg
lods
ja
test
out
addl
mov
nop
clc
mov
pop
mov
popa
shrb
daa
push
mov
adc
jg
in
outsl
mov
and
xorl
dec
lcall
je
int3
push
mov
and
jne
pop
mov
sub
add
in
xchg
test
cmp
pop
out
clc
pop
mov
mov
lock
test
pop
imul
push
js
push
sbb
into
dec
xchg
xchg
mov
sbb
repz
or
jecxz
js
mov
jno
scas
and
fsubrs
out
and
mov
jbe
outsl
shrb
pop
add
arpl
mov
xor
ficompl
jnp
test
popa
loope
rorb
inc
mov
dec
inc
pop
dec
cli
lea
push
pop
into
sub
push
mov
idivl
loop
adc
js
sarl
mov
in
inc
fildll
stos
daa
add
pop
out
fldcw
shll
aaa
clc
lods
rolb
xor
push
mov
ss
mov
jle
mov
sbb
xor
test
bound
popl
jp
lcall
push
mov
cmpsl
and
les
xor
lods
lock
adc
jnp
mov
adc
push
xor
add
test
movsl
cwtl
outsb
jbe
adc
cli
mov
adc
mov
mov
popa
dec
mov
jle
add
and
add
ds
outsb
mov
inc
push
sarl
mov
inc
mov
jns
jb
es
jnp
sbb
push
pop
das
jg
negl
sbb
cld
mov
mov
push
fbld
aas
xchg
call
jmp
cmpsb
scas
fdivr
pushf
cltd
lock
mov
xor
push
or
icebp
cmp
in
shll
rorl
jge
ds
test
pop
cwtl
xor
lods
popa
divl
xorb
or
dec
test
mov
inc
push
sbb
add
inc
dec
mov
scas
or
push
hlt
ss
inc
call
cs
xchg
loopne
sbb
cld
xlat
pusha
aas
fcmovbe
mov
out
add
enter
dec
xor
les
mov
add
jmp
xchg
pop
movsl
cmp
idiv
add
mov
cs
jnp
mov
adc
mov
and
pop
xor
sbb
or
fst
mov
cmp
ja
shrl
roll
mov
sbb
jae
loope
pop
and
lret
or
jo
cmp
push
cs
imul
pop
sti
roll
mov
mov
popl
sub
sahf
push
mov
aam
in
fnstenv
sbb
repnz
add
and
adc
cmp
rorb
insl
mov
insb
ds
cmp
jp
push
xchg
cmp
sahf
cmp
arpl
shlb
jbe
jo
arpl
cmp
mov
sub
pusha
ljmp
inc
pushf
mov
outsb
add
js
mov
push
leave
in
xor
fnstcw
ljmp
loop
mov
sti
fwait
sub
adc
inc
jo
inc
xlat
mov
lds
sbb
ret
sub
or
adc
push
adc
push
cli
push
push
out
rorb
jbe
fldl
arpl
outsb
incb
mov
mov
aaa
lds
popf
mov
and
ss
dec
aaa
push
pop
cmp
cvtpi2ps
roll
subb
inc
dec
push
int3
add
mov
outsl
jecxz
je
cmp
jae
add
jmp
xchg
pusha
dec
jmp
pop
test
bound
jae
insb
insl
adc
imul
rcll
and
dec
jecxz
adc
int3
mov
sub
pop
sbb
sarb
out
int3
sbb
xchg
sbb
out
nop
ret
movsb
mov
xchg
clc
sti
leave
ljmp
add
jg
shrl
push
jmp
adc
lcall
imul
adc
push
pop
mov
ret
xor
sbb
sub
sub
js
js
gs
pop
negb
leave
out
icebp
jae
adc
mov
lahf
ljmp
or
cmc
cmp
or
int
loop
dec
or
loope
fistl
jmp
lods
lds
inc
test
adc
xlat
in
lret
cmpb
lret
outsb
inc
xlat
div
dec
xor
pop
lods
mov
mov
sbb
loopne
jns
inc
fcmovne
hlt
and
inc
jns
test
in
xlat
or
test
les
bound
xlat
addb
test
jo
and
test
enter
jge
movsb
push
sahf
loop
fucomi
addl
lods
cmpsb
into
pusha
movsl
aam
aas
mov
inc
xlat
leave
cmp
shll
iret
rol
clc
push
ror
daa
dec
and
stc
push
or
pop
hlt
dec
in
imul
nop
and
mov
xchg
xchg
jmp
mov
sub
inc
nop
jbe
lret
repz
mov
push
test
filds
jne
jl
mov
sbb
or
loope
or
mov
sub
cltd
adc
jno
faddp
sahf
pop
lds
test
inc
pop
lcall
gs
aam
int
iret
popf
clc
ljmp
pusha
inc
xchg
fimuls
insl
cli
dec
or
test
fiadds
ja
or
xor
ret
pusha
fiaddl
push
stos
shl
sahf
push
lea
push
insl
sub
jge
pminub
lds
xchg
jmp
sbb
jns
aas
mov
sbb
jp
xchg
idivb
test
fstpt
jle
xchg
mov
ds
and
insb
jnp
fistpll
xchg
adc
mov
mov
les
sbb
sbb
rorl
mov
jb
enter
ret
or
out
int3
jg
mov
pushf
pop
je
sub
jb
or
xchg
cmpsb
adcl
jnp
loope
push
inc
pop
ret
in
push
adc
or
add
xor
ljmp
loop
xchg
test
or
mov
adc
pop
mov
repz
xchg
movsb
clc
lahf
push
inc
imul
sbb
cwtl
inc
mov
xchg
repz
mov
add
in
dec
lret
and
shl
sahf
sbb
mov
shlb
iret
cmp
insb
dec
xchg
pop
popa
inc
std
dec
mov
mov
test
stc
aam
xor
pop
fisubs
shrb
in
fildll
scas
push
pop
test
inc
pop
mov
mov
test
jbe
imul
cmp
inc
fdivs
nop
xlat
xchg
add
xor
mov
loop
push
mov
sbb
aaa
hlt
xchg
leave
stc
popa
pop
jne
lea
pop
jne,pn
mov
mov
aam
adc
cmpsb
push
lods
cltd
mov
jecxz
xchg
aas
imul
iret
js
stc
jge
je
adc
nop
icebp
jb
xlat
repz
ficompl
clc
push
inc
scas
add
add
push
jae
xchg
lock
lcall
pop
je,pt
xor
xor
and
jecxz
xor
je
aam
mov
pop
mov
xor
loopne
adc
popf
test
or
pop
mov
leave
sub
imul
adc
dec
mov
xlat
ret
fldl2e
insl
inc
pusha
lods
jp
mov
jge
xchg
aam
les
int3
adc
dec
push
xchg
cmp
xchg
cmp
cs
and
and
add
sbb
sub
xchg
add
mov
imul
push
ss
or
or
and
push
das
and
jno
mov
fs
cmpsl
or
cmp
enter
mov
push
jmp
fwait
test
in
jg
out
cmpsb
add
lea
and
das
xchg
sbb
or
adc
push
add
push
in
adc
in
adc
ret
dec
enter
or
mov
int3
dec
nop
test
pop
ds
jno
fs
stos
arpl
adc
imul
addr16
aam
mov
ret
sub
dec
in
into
mov
jb
sub
jecxz
cwtl
mov
inc
lcall
cltd
sbb
mov
movsb
sub
add
mov
dec
aam
or
sbb
mov
add
push
stos
loope
ljmp
add
jne
sub
rcl
jmp
xchg
and
sahf
ja
push
push
fsubrl
sbb
insl
mov
in
mov
add
mov
add
jns
mov
pop
pop
movsb
loop
jge
mov
push
push
pop
cwtl
sbb
lret
js
jns
lahf
lcall
call
pop
adc
cli
int
cmpsl
and
repnz
fnstsw
and
xor
mov
sub
cmpsb
aaa
int
out
cmp
push
mov
inc
aas
into
test
add
out
pop
in
inc
pop
sbb
popf
fcoml
push
mov
aas
push
jnp
mov
sbb
push
inc
cmc
push
push
aam
dec
in
lret
pop
test
ljmp
and
xchg
dec
out
inc
call
adc
lahf
outsl
daa
shll
insb
loope
lret
mov
ja
mov
jmp
and
shrl
aam
pop
in
xchg
shrb
int3
or
int3
pop
push
xchg
dec
repnz
call
xchg
mov
mov
stos
das
pop
mov
inc
jnp
pop
fdivrs
int
scas
xchg
pop
popf
leave
bound
mov
fcomip
dec
push
outsl
inc
inc
inc
pop
rolb
add
sahf
fwait
mov
into
pop
adc
pop
cs
mov
dec
bound
adc
sbb
clc
xor
int
addb
cmp
and
fcmovbe
pop
xor
rcr
add
imul
mov
adc
inc
pusha
xchg
add
ljmp
push
mov
fnstenv
adc
inc
rclb
adc
jnp
repnz
pop
repz
addr16
popa
call
jle
add
out
xchg
lods
jne
jae
movsl
cli
pop
outsl
push
lret
jle
sarb
incb
and
push
sbb
cld
shrl
mov
jmp
lods
cmp
push
stos
loope
or
mov
jno
data16
pop
mov
adc
daa
sub
imul
push
mov
mov
pop
ja
adc
mul
push
loope
inc
inc
or
cmpsb
inc
adc
scas
and
testl
cmp
xchg
mov
or
popf
sub
or
cltd
out
sar
dec
xchg
stos
out
push
add
and
icebp
add
jmp
jl
fwait
pop
aam
dec
mov
pusha
outsl
xor
cwtl
dec
mov
inc
pop
dec
xchg
dec
dec
out
imul
es
cmpsb
mov
pop
adc
and
imul
or
cmp
ja
xor
and
dec
out
and
jb
inc
and
dec
ljmp
jg
adc
add
mov
pop
imul
shll
out
xchg
aam
shlb
push
mull
sub
mov
push
insb
mov
cmp
test
cmpsb
jne
cmp
pop
cmpsl
fsub
data16
ja
loop
push
lods
jl
iret
push
lahf
jge
xor
rolb
cs
mov
adc
xchg
dec
jo
imul
sbb
nop
cmc
lret
outsl
xlat
mov
add
aaa
adc
mov
cmp
mov
insb
sarb
roll
imul
add
scas
fsubrs
mov
stc
add
shll
das
fisubrl
add
rcrb
mov
inc
mov
push
sbb
and
sbb
int3
lcall
sbb
jne
lods
les
cmpsb
lret
adc
pop
jge
mov
enter
stc
sub
in
pop
jno
sub
inc
or
out
cmp
popf
push
out
mov
mov
rcr
push
xchg
push
jge
xor
idivb
add
adc
pop
ret
inc
xchg
clc
gs
es
jbe
ss
lea
enter
cltd
xchg
popa
mov
sbb
inc
fwait
jno
in
loope
jp
into
jg
mov
in
push
adc
xchg
pop
xor
adc
mov
add
jo
inc
mov
popf
outsl
cmpsb
dec
int3
pop
xchg
pop
cmp
fisubl
dec
test
push
gs
shlb
push
inc
jg
out
mov
in
out
push
push
stos
leave
enter
int
pusha
out
push
ljmp
int
fmuls
ret
lcall
insb
cmpb
insb
fstl
pop
lret
repz
stos
cmovns
and
mov
sbb
popa
shrl
dec
or
loope
outsl
loope
lret
push
push
adc
adc
je
push
mov
in
es
ret
sahf
sbb
sbb
imul
jb
ljmp
push
in
adc
xor
movsb
jge
mov
enter
inc
and
daa
insb
jge
aas
jbe
out
loopne
lahf
xor
ret
add
jg
mov
or
mov
sar
arpl
fstps
inc
repnz
mov
rcrl
sub
mov
dec
adc
mov
and
dec
dec
cmpsl
loope
push
push
ds
jg
cmpsl
cmp
lock
inc
in
test
pusha
mov
push
cmpsl
test
dec
inc
mov
movsl
decl
out
repnz
xchg
xorl
loope
jle
inc
movsl
in
les
ss
lahf
or
lock
outsl
xor
rolb
mov
xchg
dec
mov
xor
push
sbb
jg
fimull
addr16
stos
leave
ljmp
pop
mov
xchg
ja
jmp
inc
mov
lds
inc
pop
xchg
fidivs
loope
xor
xchg
iret
pusha
push
ds
pushf
push
lret
add
jns
mov
mov
pop
outsl
ljmp
jl
jg
xor
cmpsl
sub
icebp
dec
inc
shrl
js
test
dec
add
pop
sbb
fstl
fs
iret
or
jns
xchg
xor
mov
jp
dec
lds
ljmp
lds
mov
push
test
mov
fucomip
or
or
mov
lahf
mov
popf
pop
adc
pop
out
ficomps
jo
out
imul
mov
adc
stos
test
pushf
iret
inc
xchg
push
scas
mov
xor
in
insb
xchg
std
mov
movb
inc
outsl
mov
inc
subb
xor
das
cmpsb
addr16
dec
dec
daa
jnp
xor
cmp
or
jecxz
xor
pop
pop
and
mov
inc
daa
sub
mov
xor
sbb
cmpsl
hlt
stos
xor
mov
cmp
fs
hlt
mov
hlt
xchg
push
test
shll
dec
cmpb
insb
addr16
and
sbb
push
mov
and
das
lock
cli
gs
jo
pop
loope
mov
mov
push
and
arpl
in
mov
add
jg
and
sbb
adc
mov
out
mov
xchg
in
xchg
dec
dec
ja
push
repnz
shl
add
mov
and
fimuls
push
pop
sbb
pop
sbb
push
outsb
sbb
mov
add
fldenv
dec
out
aad
adc
xor
cmpsl
sbb
inc
inc
decl
mov
mov
sub
inc
icebp
inc
arpl
mov
iret
xchg
mov
jp
jb
push
xlat
fdivrl
mov
lret
clc
inc
push
jl
popf
jb
mov
or
and
iret
pop
outsl
mov
mov
lods
scas
scas
dec
pop
jbe
xor
jb
push
push
addb
adc
nop
cs
mov
dec
cs
idivl
data16
add
mov
and
mov
shrb
or
jecxz
je
lods
push
jp,pn
arpl
icebp
and
pop
insb
xor
dec
sub
or
adc
icebp
hlt
cmp
cmp
fbld
push
xor
shlb
inc
push
push
dec
repz
or
xchg
mov
inc
push
cmp
adc
xor
xor
jb
out
jmp
mov
jl
mov
xchg
cmp
pop
sbb
outsl
mov
xchg
adc
jae
imul
sbb
jecxz,pn
sub
jmp
ja
inc
dec
cmc
fdiv
inc
dec
scas
pushf
aam
mov
inc
dec
imul
mov
jge
mov
xor
lock
stos
in
testl
cmp
call
fcomps
xor
cs
mov
fnstenv
fdivrl
sbb
push
out
jmp
mov
jno
xchg
cmpl
dec
inc
test
scas
fsub
dec
imull
fmull
mov
sub
mov
pop
lea
lea
rcl
sbb
movsb
or
iret
or
adc
stos
leave
fisttpll
xchg
mov
hlt
and
push
pop
cmp
rorl
enter
les
lahf
jbe
jecxz
fcompl
inc
mov
out
push
stos
xchg
pop
sbb
js
sbb
jbe
jno
sub
fdivrl
push
push
or
sub
or
dec
dec
cmc
sbb
loopne
adc
les
mov
clc
aam
dec
cmpl
jle
push
loope
mov
std
pop
dec
inc
insl
cmpsl
fcompl
xor
mov
scas
cmp
subl
movsb
cld
notb
and
add
int3
or
int3
jl
ja
or
fwait
icebp
mov
cmpsb
xor
in
adc
mulb
dec
mov
daa
adc
in
cwtl
aam
faddl
mov
cmp
aad
sbb
mov
xor
mov
iret
pop
jle
sbb
shrl
jnp
adc
xor
jle
movsb
mov
dec
lret
stos
cmpsl
adc
mov
dec
add
xchg
pop
iret
jmp
inc
inc
xor
xor
ja
jne
bound
push
cmpsb
jae
jmp
xlat
push
xchg
xchg
orl
popa
dec
jnp
test
push
sub
mov
mov
fisubs
cmc
pop
mov
dec
push
dec
add
push
sbb
loope
pusha
dec
lea
cmpsl
mov
jbe
sub
push
aad
sub
xor
sbb
addr16
and
and
rorl
push
fwait
adc
dec
push
clc
push
sub
test
outsl
stos
dec
and
and
stos
xor
movsl
rorl
out
xorb
iret
cltd
adc
fcomps
add
pop
cmpsb
sbb
scas
inc
dec
inc
cli
or
and
xlat
cmp
jno
fcoml
imul
cmp
mov
repz
out
sub
mov
mov
jbe
mov
nop
xor
gs
adc
in
mov
add
push
sub
in
pop
jae
push
out
pop
sub
mov
xor
dec
or
ljmp
pop
xor
rcr
bound
xchg
shlb
stc
push
por
jb
outsl
dec
and
mov
ja
or
sub
dec
pop
or
cmp
movsl
test
decb
mov
or
mov
pop
insb
lahf
adc
pop
testb
cmpsl
js
movsl
sub
sub
sub
fst
insb
sub
stos
mov
shl
test
rolb
movl
and
mov
fidivs
mov
popa
sti
jns
sub
sbb
inc
aaa
cmp
push
cltd
pushf
mov
pop
mov
xchg
jae
mov
lock
or
lods
enter
pop
push
lret
cmp
inc
push
out
popa
mov
in
cmpsb
push
xchg
xor
cmp
mov
dec
mov
jae
fwait
rcr
mov
sbb
mov
xor
sub
mov
pop
jns
sub
popa
in
daa
xchg
sub
fmuls
ja
flds
and
xchg
loopne
loope
dec
pop
pop
push
pop
sahf
aad
mov
insl
fsts
mov
lds
adc
out
adc
and
and
rclb
add
loop
jl
popa
or
lock
and
xchg
add
cmpsb
pop
lea
insl
adc
push
mov
jb
pop
loop
jno
sub
sbb
fbld
lea
mov
scas
loope
xchg
cmp
xor
jp
xor
inc
mov
stos
fldt
adc
xchg
or
rorb
add
add
mov
fldt
outsb
nop
ja
lcall
mov
sarb
popa
stc
cmp
lcall
shl
mov
shl
add
xchg
outsl
int3
push
xchg
inc
and
jge
xor
push
pop
daa
sbb
mov
popl
icebp
push
push
subb
pop
push
adc
pop
mov
sub
mov
in
clc
stos
loopne
ja
outsl
cmp
ret
jle
push
or
imul
mov
or
pop
ljmp
add
cmp
insl
int3
ret
mov
scas
outsb
cwtl
push
and
call
push
lods
mov
cmp
stos
jnp
jbe
push
mov
ret
sbb
leave
mov
or
mov
cmp
push
lock
mov
popa
sub
pop
out
cmp
aas
push
stos
shll
lret
sub
call
fidivrl
push
filds
or
or
dec
sub
js
sub
jmp
xor
test
sti
into
out
pop
lods
xor
repz
mov
sbb
jo
out
or
shlb
mov
out
jle
adc
or
jecxz
ret
mov
sub
pop
mov
icebp
mov
aam
imulb
fisubs
imul
notb
xchg
and
ret
dec
sbb
inc
outsb
and
pop
cli
jo
fildll
mov
or
loope
and
cmp
mov
adc
mov
xchg
inc
nop
cmc
adc
xchg
pop
cltd
inc
mov
inc
js
sbb
sbb
or
and
jne
dec
adc
add
mov
iret
movsl
cmp
mov
aam
jo
jnp
cld
insl
dec
push
sti
jle
aas
lcall
mov
xchg
in
sub
int3
les
adc
ds
sbb
dec
lret
xchg
outsb
cmp
jno
aad
lret
dec
sub
fnsave
sahf
test
test
jecxz
fdivrs
xor
test
int3
push
stos
mov
xchg
aad
dec
adc
jns
stc
cmp
add
jmp
fidivrl
enter
fwait
jne
pop
hlt
mov
cmp
icebp
imul
adc
cs
into
lds
add
outsl
dec
or
cli
loopne
xor
cld
and
or
cs
xor
mov
std
rcll
and
addb
popa
adc
mov
in
lret
mov
cli
or
pop
add
jbe
in
jp
sub
insb
imul
hlt
cmp
in
inc
sub
lret
test
pusha
repz
movsb
loopne
insl
xchg
ja
push
push
movsb
xor
inc
sarl
mov
addb
cli
push
mov
cmp
arpl
add
inc
repnz
adc
ret
jl
aad
stos
cmp
mov
dec
bound
out
pushf
mov
imul
lret
stos
jb
sbb
lods
inc
loope
lods
jmp
addl
adcl
out
xchg
push
leave
fwait
stos
cmpsl
xchg
mulb
out
mov
notb
xor
ds
jmp
inc
pop
pushf
mov
subb
pop
or
mov
xchg
xchg
cli
xchg
js
mov
fidivs
scas
push
std
rcll
pop
outsb
flds
les
or
aam
negb
and
dec
mov
pop
lret
mov
je
subl
mov
or
and
add
mov
pop
cmpsb
or
lods
cli
fcomps
xchg
jmp
jb
or
test
xchg
ss
sahf
push
jns
mov
getsec
mov
xchg
cmpsb
jno
pushf
std
dec
jo
push
jle
xor
jb
test
rol
push
je
test
repz
push
sub
cltd
mov
xchg
insb
stos
or
xlat
jno
ja
mov
or
rcll
incb
mov
scas
mov
cmp
out
adc
scas
ret
lea
imul
cmp
mov
int
notl
enter
mov
stos
clc
mov
mov
cmp
xchg
or
fwait
into
clc
sbb
mov
les
jmp
pushf
and
and
sub
xor
cmp
movsb
lods
xchg
cmpsb
fst
mov
and
xchg
js,pn
dec
stos
cmc
mov
inc
enter
mov
popa
sub
in
dec
and
mov
cmp
fisttps
fildl
cmpb
or
cltd
push
scas
into
mov
daa
push
decb
adc
pop
lods
dec
loope
das
jb
subb
test
call
ret
push
adc
rcrl
push
imul
or
fstps
adc
js
scas
mov
fwait
inc
jecxz
push
mov
cli
cmpb
inc
or
ljmp
mov
loopne
rorb
and
clc
cmpsb
fists
ret
in
je
push
pop
xchg
lock
lock
test
add
pop
std
test
jecxz
data16
in
enter
jl
ficompl
inc
rcrb
push
pop
inc
es
pusha
xchg
mov
mov
insb
xchg
and
cmc
adc
in
enter
add
add
iret
and
lods
sbb
mov
call
push
pop
cmp
rcr
cwtl
jnp
inc
dec
mov
in
dec
or
pushf
adc
mov
cmp
sbb
mov
in
mov
cmpsl
cmp
xlat
or
or
sbb
popf
out
mov
jge
cmpb
pop
leave
adc
lods
fsubrl
xchg
xor
hlt
js
xor
cmpsl
push
gs
pushl
in
lahf
aam
xchg
xchg
mov
scas
or
add
cld
or
lds
cld
xchg
inc
xchg
mov
ljmp
test
orb
sub
mov
or
xor
pop
stos
fildll
xchg
xor
mov
imul
in
test
jns
sar
mov
xchg
xchg
xchg
mov
outsb
repnz
loop
pop
ljmp
and
lock
pop
push
or
leave
pusha
loopne
mov
test
int3
add
pusha
mov
jne
jbe
orl
je
leave
pop
mov
in
sub
jmp
push
nop
cmp
mov
dec
popf
jbe
cmp
and
mov
repz
insb
mov
push
repnz
popa
clc
mov
into
sub
cmp
stos
mov
cmc
mov
cmpl
pop
mov
test
cmp
mov
jae
and
push
aas
aaa
push
sbb
in
in
inc
xchg
test
insl
lea
add
scas
sarl
xor
and
pop
adc
or
ss
leave
pop
fldenv
adc
insl
mov
scas
jne
repz
jbe
std
dec
xchg
pop
orl
jmp
imulb
dec
int3
dec
repz
loope
mov
lods
xchg
dec
sub
sbb
push
sahf
lds
loope
mov
nop
pop
sbb
sub
xor
icebp
and
push
push
aaa
cmpsl
cmp
bound
loopne
jl
pushf
xor
and
aam
frstor
test
sbb
adc
or
sbb
pop
int
aaa
xor
mov
es
jb
icebp
dec
fs
dec
inc
icebp
push
or
mov
pop
and
pop
stos
add
add
shll
inc
mov
inc
lcall
imul
adc
lcall
lea
sub
jecxz
aas
push
mov
or
aad
test
shr
or
aad
stos
mov
sub
jge,pn
jbe
add
push
lea
ficoml
push
push
sbb
push
mov
sub
jecxz
pusha
fcomps
in
outsl
pop
outsb
dec
and
imul
mov
ds
dec
cmp
outsl
call
lock
pop
test
movsb
arpl
mov
mov
xor
lods
sub
sub
in
pop
loopne
imul
addr16
sub
in
mov
xchg
aad
lds
pop
mov
test
movsb
aas
sbb
push
in
mov
cwtl
or
pop
stos
push
bound
xchg
aas
or
inc
jge
loope
cltd
mull
xor
sub
pop
xlat
and
rol
popa
pop
jae
pop
outsl
mov
mov
or
pop
dec
mov
les
mov
cmp
push
aas
mov
sbb
jae
mov
incl
mov
ljmp
in
pusha
jl
mov
mov
add
enter
rcr
and
adc
inc
lea
sti
inc
jp
stc
in
dec
cmp
imul
mov
das
fimuls
repnz
sub
add
cs
aad
data16
and
pop
inc
aas
dec
fwait
cmp
jne
jecxz
mov
pop
jb,pn
rol
arpl
adc
rolb
loopne
mov
push
in
sbb
stc
push
mov
pop
jmp
cmpsb
bound
mov
cs
pop
cmpsb
jmp
cmp
mov
add
jge
mov
shrl
daa
aam
loope
js
cmp
inc
pop
push
int3
cmpb
or
inc
ret
mov
in
testl
pop
xchg
lods
sbb
cli
mov
pop
sub
and
adc
loope
ljmp
notl
or
pop
pusha
shlb
movsb
cmc
in
addr16
pop
xchg
add
cltd
sub
and
aaa
jp
sub
xchg
adc
push
test
xor
add
push
xchg
scas
jg
test
cli
dec
ja
subl
arpl
sub
movsl
xor
lods
cmp
idivl
test
adc
mov
in
jo
sbbb
subl
lock
into
je
lods
pop
push
add
frstor
jbe
sub
in
loope
adc
cmp
jle
clc
pop
add
cltd
stos
or
notl
cltd
mov
rep
push
jp
mov
or
mov
sbb
mov
xchg
xor
mov
rep
xchg
xchg
cmp
add
ret
push
mov
sti
cwtl
pop
add
sub
imul
sbb
insb
push
cmp
or
leave
xchg
push
jnp
adc
dec
pop
sahf
imul
stos
sub
test
test
das
cmp
lds
ret
test
pop
sbbl
popf
je
leave
stos
pop
xor
jp
stos
add
cmc
add
jns
addr16
jbe
mov
enter
mov
out
xor
push
out
in
sub
in
sub
dec
jmp
add
jp
in
cwtl
inc
xchg
dec
pop
dec
and
out
or
aam
xor
out
cli
inc
add
inc
mov
out
mov
das
mov
outsl
into
adc
mov
or
dec
jbe
outsl
sbb
iret
mov
xchg
leave
mov
jecxz
and
aaa
inc
add
push
xchg
loopne
rorb
push
loop
lods
jp
dec
sub
sub
lock
xchg
pop
sbb
aam
dec
mov
and
fimull
stc
sub
cmp
cmp
fnstenv
leave
std
ljmp
mov
fsub
dec
adc
test
xor
decb
mov
fwait
inc
mov
push
mov
mov
mov
iret
imul
dec
xor
xchg
adc
inc
mov
popf
sub
cmp
dec
xchg
in
and
nop
mov
adc
mov
repz
mov
inc
loopne
pusha
sahf
ss
jecxz
pop
push
decb
mov
sbb
in
push
popa
std
outsb
jmp
call
daa
adc
or
dec
cmpsb
repz
mov
adc
imul
repz
mov
mov
xor
cli
cld
add
mov
mov
cmp
sbb
jb
fcompp
cmp
in
and
je
xchg
roll
mov
pushf
movsb
aad
and
data16
fcomps
cltd
mov
add
call
or
in
ljmp
ljmp
mov
mov
in
cmp
add
loopne
int3
inc
mov
push
mov
lods
sub
loope
call
push
test
adc
sub
pop
and
add
and
out
test
pop
outsl
data16
sarb
loopne
dec
js
mov
add
aas
les
lcall
cmp
mov
xor
test
sbb
add
jne
jmp
pop
aaa
shrb
dec
movsl
xor
inc
adc
xchg
mov
pushf
outsl
sub
loopne
push
fldcw
jmp
jbe
ss
fimuls
pop
xchg
lock
outsb
lods
sbb
pop
add
lods
jae
aad
cli
mov
adc
sub
mov
cld
jno
and
lret
jle
xor
out
pop
jbe,pn
inc
jge
mov
lea
stos
mov
cmc
stos
dec
mov
jmp
mov
ljmp
mov
jb
push
push
mov
sub
loope
int3
dec
scas
mov
movsl
xchg
shlb
mov
cli
in
test
les
mov
xchg
cmp
push
sub
in
sbb
mov
lds
mov
and
movsl
iret
or
jge
cmp
out
or
cmp
sti
insl
mov
movsl
or
das
fbld
mov
xchg
scas
jp
repz
inc
push
sub
mov
scas
xor
fs
inc
or
inc
mov
stos
jmp
outsl
xchg
mulb
int3
les
xchg
lret
add
sbb
fwait
mov
rcr
xchg
lret
inc
fwait
das
rclb
and
ss
push
push
inc
clc
xchg
cmp
adc
ficompl
jmp
and
jae
in
mov
out
and
mov
aad
jg
xchg
mov
rcl
cmc
xlat
xor
push
xor
imul
jp
push
sub
stos
pop
in
adc
insb
std
cmp
pop
cmc
mov
daa
cmp
add
dec
shr
cmp
cmp
shlb
xchg
lds
mov
divl
out
add
add
das
jns
cmp
inc
arpl
mov
out
fimuls
xor
mov
daa
xchg
dec
xor
cwtl
inc
dec
or
movsl
lds
aaa
inc
in
jge
in
add
sbb
or
dec
ret
fnstenv
sbb
xchg
and
dec
xchg
sbb
mov
sub
add
lcall
sbb
aam
ds
ret
add
stc
test
mov
test
mov
std
xor
push
in
and
and
dec
imul
xchg
aaa
pop
adc
out
int3
jg
leave
xchg
aas
ljmp
movsb
cli
cli
xor
mov
roll
push
fcmovne
ret
outsl
mov
sbb
adc
xor
loope
lret
fucom
lds
adc
push
mov
insl
gs
jecxz
loop
sub
mov
mov
sub
jg
push
fists
shl
sarl
mov
cli
mov
adc
push
gs
mov
jo
dec
in
pop
pop
xchg
and
cmp
mov
daa
sbb
int3
arpl
daa
push
in
ss
iret
lods
fldt
int
jnp
pop
inc
je
mov
or
sub
icebp
mov
mov
outsb
and
je
sahf
aaa
push
inc
cmpsb
inc
cmp
movsl
xchg
mov
sbb
fbld
xor
addb
jp
ja
push
adc
lea
aaa
mov
sti
notb
xor
stos
insb
pop
sub
jnp
pop
pop
pop
push
pusha
lret
sbb
dec
pushf
and
push
out
jae
adc
cmpsl
lods
scas
inc
sahf
stos
repnz
repnz
lcall
jle
stos
sbb
sub
cmc
push
jge
xchg
loop
push
aam
jecxz
dec
and
cwtl
xor
cmp
shll
js
xchg
cmpl
cmpsb
inc
sbb
cmpl
test
into
cmpsb
sub
cmp
pop
leave
xchg
aaa
inc
scas
subb
xchg
and
or
sub
inc
lret
leave
mov
movsl
inc
cltd
mov
out
scas
iret
addr16
cmpsb
sub
add
xor
test
and
and
sub
push
xor
adc
dec
sbb
mov
ret
aaa
repnz
mov
xchg
jl
cmp
xchg
test
adc
pop
rolb
nop
cmp
xchg
inc
mov
mov
dec
inc
push
mov
and
leave
cmp
cmp
nop
test
fdiv
scas
test
cmp
add
dec
out
add
std
inc
adc
jmp
cli
leave
sbb
push
add
seta
pop
js
mov
mov
mov
pop
adc
into
mov
rcr
jmp
dec
sar
inc
rcrl
lret
outsl
jnp
inc
jae
or
xor
sbb
ret
push
push
ss
pop
xchg
jae
jno
mov
enter
pop
out
or
negl
add
int3
add
and
pop
mov
sbb
push
aas
fstl
xchg
test
bound
sti
sbb
imul
stos
dec
push
lods
sbb
outsl
dec
inc
sahf
dec
jns
cld
lret
cltd
xlat
ud0
xor
pushf
xor
jecxz
add
and
lret
mov
test
sti
mov
cmp
mov
neg
mov
jmp
inc
test
outsb
popa
xor
xchg
push
mov
dec
lea
addr16
ss
in
mov
jl
pop
lret
int
add
xlat
iret
jmp
and
jae
call
add
cmp
imul
movl
gs
or
adc
jns
cmpsw
mov
cmp
sbb
xchg
sbb
xorl
ret
sbb
adc
mov
jmp
mov
mov
das
ret
fwait
cmp
jo
xchg
adc
push
xchg
cmc
mov
mov
pop
shll
sub
int3
push
int3
out
cltd
jle
xchg
out
and
pop
xor
lcall
mov
mov
mov
cmp
orb
inc
bound
mov
aas
push
sub
jae
xchg
xchg
adc
pushf
sti
aad
lods
into
jnp
aaa
inc
dec
xchg
mov
outsl
stos
insl
out
push
push
mov
and
xchg
inc
int3
pop
xchg
mov
lret
sarl
xor
or
lods
pop
xchg
sub
pop
ror
sti
rcll
call
xor
es
sahf
addl
mov
dec
xor
mov
jmp
stc
es
cmp
jns
dec
stos
jo
inc
or
scas
cmp
inc
enter
sahf
loope
sbb
adc
pop
fs
fnstenv
push
das
dec
leave
fisubrl
lcall
addl
movsb
in
arpl
xorl
int3
test
shlb
jno
inc
aas
dec
xor
add
test
and
enter
je
gs
mov
js
jg
cmc
dec
or
cmp
cmp
jge
imul
outsl
fs
xor
inc
nop
testl
xchg
inc
xchg
lods
mov
aam
repnz
jmp
mov
add
mov
mov
cli
lea
sub
pop
ja
arpl
mov
mov
jnp
pop
repz
jp
enter
stc
repz
loope
jns
xor
sub
arpl
outsw
int
xchg
push
mov
aam
sbb
test
gs
cmpsl
push
mov
add
orb
out
pop
dec
movsb
xor
test
fisttpll
add
mov
push
cmp
mov
cmpsb
lods
test
and
cmp
pop
movsl
pop
sahf
pusha
pop
jnp
cld
stos
jb
in
push
mov
adc
push
test
sbb
shld
inc
test
jnp
adc
in
or
inc
mov
add
ss
stos
adc
sub
fs
jbe
cmp
int3
pushf
rorb
les
mov
lret
sub
and
sub
push
xor
xchg
mov
sahf
jae,pt
xlat
inc
test
adc
sahf
js
adc
js
sub
cld
lock
fisubrl
loope
add
out
int
stos
mov
push
cld
sub
xor
loopne
dec
jge
mov
lock
sbb
fisttpll
pop
add
popf
sub
out
daa
mov
call
sub
fs
mov
mov
inc
mov
cmc
lds
faddl
mov
xor
push
push
jg
repnz
ljmp
xchg
sub
cli
je
pop
shrl
clc
sub
add
imul
xor
iret
lret
sbbb
in
push
add
rorb
inc
jne
cmp
xchg
cwtl
ficompl
push
adcl
in
xchg
stc
push
outsl
aad
out
int
jb
sub
push
mov
imul
add
bnd
add
inc
add
fstps
push
scas
sbb
popa
ss
das
lds
mov
or
mov
lea
sti
sbb
loope
jbe
add
mov
cmpl
jbe
adc
das
rol
mov
cmpsl
rcl
xchg
lea
repnz
into
mov
lea
xchg
leave
xlat
sbb
inc
or
rcl
jno
add
std
mov
xor
add
push
repz
sub
mov
mov
call
js
sub
aad
rorl
pop
inc
ficompl
xchg
push
test
outsl
sahf
das
insb
mov
dec
fs
out
sub
popl
sbb
sub
int3
xor
push
enter
and
mov
jp
subl
adc
push
jg
xchg
or
lods
movsl
cs
pop
sbb
ffreep
xchg
lock
idivl
and
xchg
mov
pop
mov
adc
popa
and
mov
lock
mov
or
cmp
or
push
push
rcl
js
jno
es
pop
pop
jl
jbe
push
inc
jge
dec
mov
inc
jbe
mov
jmp
das
and
dec
icebp
mov
jecxz
xchg
ret
sti
in
mov
pop
mov
rcl
or
dec
fisubrs
mov
in
push
pop
sub
mov
sbb
push
fldcw
aam
addr16
int
lcall
adc
xchg
fdivl
xchg
sahf
pop
sbb
sbb
pop
js
pop
dec
outsb
adc
frstor
fcomip
fildl
mov
xchg
imulb
pop
flds
rol
pusha
mov
enter
mov
push
or
loopne
or
test
mov
and
stc
adc
bound
pop
mov
les
or
imul
adc
and
add
dec
jl
ljmp
cmpsb
lret
mov
leave
fists
dec
lea
cmp
ret
scas
repz
add
arpl
xchg
mov
fwait
sub
cmp
in
popf
sub
and
andl
mov
push
jmp
and
ss
sub
mov
inc
shll
fistps
mov
mov
test
hlt
scas
enter
mov
fildll
imul
jns
push
fs
mov
ficoml
jo
or
pop
mov
repz
fcomip
stc
repnz
push
lea
or
cld
scas
fnstcw
out
jp
in
fnsave
pop
dec
stos
loop
icebp
shll
aaa
seta
and
mov
fucomp
std
lcall
dec
movsb
mov
xchg
sub
insl
add
repz
out
adc
mov
aas
and
xchg
outsb
mov
push
inc
ljmp
push
cmc
push
cvtps2pi
jmp
xchg
decl
lods
push
push
test
cmp
add
or
pop
or
bound
gs
mov
sti
cwtl
pop
insl
mov
inc
pop
mov
jl
xchg
mov
push
mov
or
jp
pop
fwait
mov
mov
data16
xchg
out
loop
or
inc
xchg
loopne
lcall
adc
bound
mov
mov
shlb
push
into
xorl
test
outsb
mov
js
or
jg
mov
clc
cmp
popa
cs
push
addl
push
rclb
stos
mov
int3
inc
mov
imul
sub
xlat
fstpt
fcmovb
cmc
cmp
mov
jmp
sbb
push
jg
std
lahf
je
lea
add
paddusb
jl
lock
out
pop
mov
jl
push
rorl
lahf
jle
shll
insl
ret
mov
mov
sbb
fnstsw
cmpsl
lret
leave
and
pop
cmp
mov
iret
xchg
in
mov
loop
adc
push
inc
mov
xorl
in
pop
jge
jge
mov
iret
ljmp
push
scas
mov
push
jo
xor
stc
icebp
mov
jns
mov
pop
outsb
inc
dec
add
je
mov
in
cmp
in
rcrb
mov
and
cmpsb
shl
daa
cmp
adc
inc
ret
mov
mov
leave
fisubrl
dec
cwtl
ficoml
das
ret
mov
loopne
add
push
add
mov
xchg
dec
vunpcklps
sub
mov
jne
lret
jp
push
out
push
shl
mov
dec
and
xlat
mov
and
jge
sub
sbb
imulb
add
movsl
daa
cmpb
ljmp
or
mov
inc
push
mov
xor
int3
and
lock
and
or
stc
adc
lods
mov
inc
pop
mov
pop
sbb
or
orl
mov
icebp
fistps
push
repnz
push
out
dec
inc
faddl
lret
loopne
and
xlat
inc
rorb
cmc
push
push
sub
in
fisubl
sti
ss
inc
ja
in
test
cmp
pop
jmp
out
cmp
dec
pop
and
iret
js
xchg
jle
ret
scas
jo
mov
call
jne
scas
out
pop
sub
adc
shlb
loopne,pn
inc
lahf
and
dec
es
std
push
adcl
jmp
xchg
jecxz
inc
mov
pop
fsubs
jns
jo
iret
out
fbstp
cli
imul
xchg
lea
mov
sub
es
lcall
pop
mov
adc
sub
loope
add
std
test
flds
or
mov
push
dec
out
test
popf
xor
mov
add
stc
pop
aad
aad
pop
shr
mov
adc
xchg
mov
jae,pn
dec
xor
lock
rcrb
pop
inc
ret
xchg
xor
jno
aaa
andl
mov
cli
in
lods
mov
cld
lock
pop
adc
mov
push
test
mov
sti
mov
pop
pusha
or
lret
iret
popf
pop
les
pusha
push
sub
jp
inc
and
adc
cmpsl
inc
mov
repnz
mov
lods
in
xchg
jb
push
popf
gs
imul
clc
sbbl
fmull
sub
cmc
mov
cli
add
inc
mov
adc
add
inc
movsb
dec
addr16
mov
psubb
sub
push
cvttps2pi
push
mov
pop
pop
cmp
or
jb
out
test
cld
fwait
vmovq
das
jecxz
dec
ljmp
jl
inc
outsl
sbb
cltd
mov
cld
ss
clc
sub
aaa
mov
mov
les
mov
std
mov
mov
adc
jmp
scas
fwait
inc
adc
shlb
mov
imul
lret
mov
dec
pop
cmpsl
rclb
fcoml
add
adc
sti
xor
test
sbb
idivb
mov
and
rol
lahf
aam
cmp
pop
js
or
jb
std
add
outsl
outsl
repz
sub
lret
sub
mull
mov
xor
and
ljmp
add
jg
test
and
dec
jnp
xor
dec
sub
pop
call
cmp
test
push
shll
sub
gs
push
inc
pop
sbb
cld
inc
inc
push
inc
xchg
in
leave
adc
push
inc
jne
xor
sub
mov
icebp
out
push
hlt
scas
pop
add
cmpsl
repnz
out
push
dec
aaa
push
mov
stos
sbb
xor
jo
insl
es
and
pusha
adc
jb
shrl
jl
or
push
push
imulb
je
stc
jno
push
icebp
dec
lret
out
cmp
inc
xchg
frstor
out
fwait
out
inc
pop
lods
stos
fidivs
and
addl
mov
sbb
mov
sub
dec
cmpsl
ljmp
xor
lods
ss
shrb
imul
pop
clc
adc
pop
enter
fsts
ret
fsubrs
sahf
mov
test
cltd
mov
push
fucom
or
pop
pusha
push
add
add
mov
and
lcall
adc
sarb
jg
cmp
cmpsb
mov
into
sbb
push
or
cmc
into
mov
and
lods
add
jle
inc
loop
jae
jnp
jp
mov
sbb
push
add
div
and
push
or
mov
jo
imulb
xor
sub
xor
dec
mov
popa
cmp
test
mov
sub
jns
ss
pop
dec
fiadds
lret
stc
sti
pushf
hlt
xchg
jno
bound
push
cmp
fs
add
cmp
hlt
ss
out
in
repnz
xor
jnp
cmc
pushf
mulb
loope
dec
dec
or
mov
add
inc
add
std
movsl
cmp
or
mov
arpl
out
int
xchg
xchg
lods
inc
aaa
mov
ss
lcall
cmp
push
clc
lret
xchg
loop
mov
icebp
lods
xor
push
stos
les
pop
push
or
sub
xchg
cmp
jg
sbb
cltd
fdivrs
sub
loope
aam
and
test
aaa
adc
or
inc
xchg
roll
rcr
cmp
roll
movsl
imul
ss
fidivrs
sbb
shrb
cld
inc
data16
loopne
xor
cmpb
pop
cmpsl
push
mov
and
mov
push
js
adc
push
stc
loopne
sub
sbb
jge
mov
and
cmp
clc
aaa
bound
push
push
rcll
sub
sbb
xchg
ja
jg
xchg
push
bound
int
cmp
jmp
mov
mov
xor
xor
add
pop
push
mov
sbb
out
xor
cmp
xor
adc
mov
fmul
js
lock
test
mov
or
orl
jp
test
mov
inc
cltd
shll
repz
inc
push
adc
and
mov
lods
lea
in
vdivss
xchg
arpl
cmc
mov
xchg
pop
ret
ret
xchg
and
pop
andb
jecxz
arpl
fidivrl
xchg
inc
push
inc
out
shlb
adc
shlb
push
mov
sbbl
and
loop
push
xchg
call
xchg
ja
fidivrs
mov
mov
insl
xchg
push
scas
arpl
out
stos
ja
add
push
and
push
iret
jne
leave
pop
sbb
imul
js
mov
or
popa
out
xchg
or
sbb
inc
ds
mov
pop
push
inc
scas
mov
ja
or
sub
testb
enter
hlt
jmp
pop
iret
xor
lock
sbb
dec
adc
sub
into
pop
jno
call
jno
add
xchg
in
out
loopne
mov
pop
xchg
fists
lods
mov
fs
jmp
mov
mov
jnp,pt
frstor
jmp
addr16
repz
fwait
cmp
lds
inc
in
mov
int
mov
push
notb
les
sub
iret
fs
rcll
fsubr
cmc
inc
mov
sbb
mov
cmp
push
rorl
setp
dec
lahf
ret
jg
iret
test
jae
mov
pop
or
mov
mov
in
cld
stos
in
xchg
test
mov
push
dec
mov
adc
scas
mov
mov
dec
iret
pop
cmp
shr
aaa
fucomip
cmp
inc
bound
cmpsl
imul
adc
jg
aad
push
ja
movsb
and
mov
pop
cmpsl
or
add
cld
lret
jae
cmp
pop
popa
push
xchg
lss
ja
push
pop
ja
mov
jp
call
lret
or
inc
fisubrs
lret
dec
scas
xchg
cmp
mov
sbb
mov
iret
ret
mov
mov
fisubs
mov
mov
loop
dec
xor
ss
xchg
inc
mov
shlb
adc
leave
rorl
repz
pusha
sbb
out
scas
push
xlat
xor
jle
pusha
jns
push
mov
sbb
ljmp
rcrb
sub
dec
sbb
inc
loopne
adc
mov
scas
testl
fistpl
cmp
mull
pop
and
and
pop
decb
mov
xchg
lea
jle
jle
or
ljmp
adc
jg
fcom
popf
sub
sub
inc
jle
inc
cmp
rep
adc
push
adc
jno
jmp
imul
outsl
jl
in
sbb
pop
mov
mov
push
mov
mov
aas
movsl
pop
push
dec
jmp
mov
pop
inc
sub
jnp
inc
ds
lods
push
cli
mov
lea
test
sbb
jg
icebp
push
cmp
fidivl
cmpsb
lcall
movb
test
pop
incl
fistps
repnz
stos
push
add
mov
jo
stos
sbb
mov
sbb
pushf
jo
icebp
push
push
sub
jne
les
xor
inc
pushf
and
xor
imul
lods
rolb
lods
cmp
repnz
push
pop
cmp
lea
inc
int
fadds
hlt
mov
in
and
mov
outsb
lcall
add
sub
mov
push
mov
stos
ret
sti
insl
mov
outsl
addr16
xchg
iret
fwait
and
push
ret
xchg
sub
dec
shll
stos
or
pop
adc
and
into
push
mov
adc
notl
mov
pop
es
or
push
inc
push
push
dec
inc
inc
xchg
jno
insl
jle
mov
mov
int
cmp
and
hlt
ret
pop
push
mov
inc
gs
cmp
jp
nopl
mov
scas
in
inc
imul
out
adc
addl
adc
ja
mov
in
push
aad
or
inc
add
sbb
ss
mov
movsl
push
imulb
mov
nop
jle
loop
fmull
es
outsl
ret
sbb
pushf
movsb
ljmp
xchg
lret
sub
arpl
test
pop
ret
lock
mov
je
mov
enter
shr
cmpsl
ret
mov
test
pop
sub
popa
mov
lcall
insb
inc
xchg
mov
popf
ss
sbb
ja
movsl
pusha
jo
push
mov
lea
roll
stos
cmp
adc
enter
or
sub
shrl
loopne
xor
mov
add
into
lds
jecxz
inc
push
ret
dec
ja
sbb
or
movsl
test
pop
cmpsb
mov
mov
cld
cmp
adc
and
dec
and
pop
cmp
adc
push
or
sahf
insb
xchg
xchg
mov
lahf
jle
pusha
popf
xlat
aam
adc
or
ret
inc
gs
scas
mov
xchg
jp
xchg
push
lea
test
repz
lods
sbbb
inc
add
pop
mov
add
jg
lahf
and
sub
imul
outsl
ret
lods
jno
sub
lods
js
push
sbb
insl
mov
cmp
lds
ja
test
and
cmc
or
movsl
pop
rclb
sub
test
add
dec
lds
dec
push
popl
mov
mov
and
jo
lea
mov
jno
xor
mov
cmpsb
xchg
fisttpll
jecxz
popf
fsub
xor
push
sbbl
hlt
scas
insl
in
jle
lods
mov
unpcklps
mov
add
xor
mov
sbb
adc
sti
cli
jp
sbb
lds
push
mov
push
or
dec
inc
stos
ficoml
fiadds
fdivrs
shl
pop
or
aas
ja
push
ficoml
fcompl
inc
xchg
xchg
repz
loopne
jo
jno
js
push
xchg
addb
fwait
lret
out
add
clc
fs
addr16
test
outsl
mov
jle
test
repnz
enter
xchg
pop
ja
mov
jae
in
js
jp
lret
inc
inc
jnp
xor
push
test
test
xchg
stos
mov
mov
faddp
imul
rolb
lahf
xchg
iret
into
xor
add
mov
clc
mov
pop
sbb
arpl
mov
cmpsb
jecxz
push
xor
lret
xor
xchg
lods
cmpsb
pushf
dec
cmp
stc
mov
sub
dec
and
inc
adc
push
add
ds
loopne,pt
dec
mov
into
or
jp
cpuid
and
test
iret
call
gs
sbbl
popa
mov
or
fcmovnbe
jmp
sbb
in
dec
mov
xchg
xchg
movsl
in
sub
lds
push
xchg
fnstsw
sub
push
mov
mov
jns
ljmp
push
mov
clc
mov
fstpl
mov
es
mov
xchg
fstpl
mov
sbb
lock
fisubl
ret
clc
gs
sahf
loope
aad
mov
mov
fbld
popa
imulb
inc
sahf
xor
movsl
pop
outsb
xchg
jbe
sub
jmp
mov
or
pop
imul
aaa
cmpsb
lea
mov
inc
cltd
push
xchg
outsb
inc
mov
lret
lock
adc
pushf
aaa
inc
rcll
add
sub
and
lret
push
sub
jle
imul
out
adc
stc
into
adc
pop
stc
and
fildl
inc
das
pop
scas
pop
mov
inc
jno
loopne
pusha
stc
into
rclb
jbe
mov
aas
jmp
repnz
add
jns
jb
sub
cmpsl
out
cwtl
cmc
lods
xor
je
mov
aas
rorb
loop
je
test
and
popf
movsb
xor
push
inc
xchg
repnz
lret
xchg
icebp
mov
incb
loope
scas
lods
std
rsm
clc
jge
cmpsl
dec
faddl
lods
pusha
sub
ret
fldenv
sbb
dec
mov
jge
in
cmp
call
jns
push
call
pop
test
sbb
pop
jne
mov
out
aam
enter
shlb
popf
mov
dec
mov
nop
cs
mov
hlt
xor
add
push
mov
addr16
insb
loopne
lahf
js
and
nop
pushf
stc
setle
jg
out
mov
fdivl
xor
test
outsb
inc
fcomps
pushf
addr16
fstl
arpl
adc
pop
push
shll
lret
data16
les
dec
std
adc
pinsrw
pop
sub
mov
and
in
es
fisubs
ret
sbb
hlt
mov
ja
sub
lds
xchg
cmp
mov
xor
mov
dec
pop
in
xchg
cwtl
pop
xchg
js
int
fisttpl
stc
frstor
das
icebp
test
push
mov
sub
sbb
add
mov
jecxz
or
adc
push
sbb
imul
subps
sub
jge
test
int3
loopne
and
mov
aaa
pusha
xor
jg
push
sar
sti
or
subb
shrl
in
inc
jns
xchg
hlt
in
xchg
cmp
cli
mov
es
xor
repz
mov
cmpsb
jge
add
das
fwait
mov
pop
mov
fists
repz
jb
pop
dec
lock
pusha
pop
mov
out
xchg
out
pop
cmpb
filds
mov
pushf
fiaddl
mov
ds
jl
adc
mov
gs
es
ds
addr16
test
pop
push
push
inc
enter
lcall
pop
shll
inc
inc
cs
test
jns
mov
xor
ja
movsb
subl
xchg
insb
sbb
sub
or
sahf
pop
fldlg2
sub
int
pop
dec
jecxz
cwtl
sub
xor
ds
and
jmp
jl
std
mov
fs
inc
xchg
jo
loop
cmp
enter
test
stc
mov
pop
cmp
lret
movsb
aam
adc
cli
adc
ds
test
outsb
shlb
fidivl
into
adc
jae
mov
push
xchg
jns
sub
stos
sbb
shrb
imul
jmp
dec
mov
lods
std
scas
jae
fcompl
data16
faddp
test
xchg
mov
jge
pop
lods
sub
fcmovne
mov
sbb
call
popa
test
pop
pop
mov
xchg
push
mov
ret
dec
stos
sub
or
ret
jg
xchg
int3
jecxz
es
dec
sub
icebp
test
push
xchg
inc
inc
pop
shll
jp
rclb
hlt
push
scas
add
sbb
rorl
jo
dec
cmp
push
inc
aam
cld
cld
dec
scas
aam
jecxz
lock
rcrl
int
xchg
mov
pop
xchg
mov
nop
mov
stos
movsb
call
dec
or
fs
pop
add
cli
pop
add
das
mov
push
aad
mov
fsubs
mov
mov
jae
dec
nop
fcmovbe
pushf
ss
xchg
out
sub
adc
xor
out
pushf
push
lret
dec
test
or
cmpsl
jle
jle
dec
pop
mov
std
je
test
insl
dec
clc
gs
test
fmul
inc
xor
mov
shll
leave
nop
xchg
xlat
imul
sbb
sbb
stos
movsl
add
nop
and
lea
inc
arpl
in
das
movsl
xchg
les
mov
aaa
inc
fldenv
and
rclb
inc
dec
daa
arpl
in
sbbl
cmp
ret
stos
pop
shlb
into
add
lahf
jg
mov
add
xchg
fstpl
mov
fsubrl
mov
popf
aas
inc
popa
insb
insl
in
je
lods
test
mov
aam
arpl
movsb
pushf
mov
repnz
and
sahf
movsb
jns
aam
dec
repz
push
lret
stos
jl
mov
icebp
imul
push
jg
ss
mov
lret
stos
dec
or
cld
xchg
mov
std
mov
sarl
ss
jmp
addr16
lahf
jo
or
cmp
pushf
push
mov
bswap
xchg
or
fwait
xor
xor
cmp
fnstenv
insl
mov
xchg
jge
es
pop
and
xor
jp
mov
jne
popf
or
loopne
in
fildl
inc
inc
xchg
xchg
cli
add
push
mov
jl
jbe
lret
insl
push
xor
bswap
pushf
loop
arpl
dec
std
rolb
int
aas
cmc
cwtl
ja
test
or
xor
cmc
mov
cmpsb
sub
loopne
cmp
or
xlat
inc
push
int
dec
std
stos
and
mov
cmp
mov
push
and
leave
cwtl
imul
adc
test
pushf
or
cld
jp
std
dec
ret
stc
iret
sub
test
mov
mov
jno
out
sub
xchg
lcall
and
mov
jbe
mov
push
aas
mov
xchg
in
cmp
pusha
or
scas
add
movsb
ljmp
fbstp
in
leave
daa
das
test
outsl
icebp
cmpsb
and
sbb
sbb
pop
daa
pop
fstpt
mov
mov
sbb
sub
cmp
stc
dec
pop
xchg
xlat
rcrl
jae
add
sub
aaa
test
and
push
add
pop
std
xchg
scas
add
or
cmp
rolb
test
jmp
loopne
adc
out
insb
jmp
mov
dec
je
pop
or
fimuls
and
and
ret
push
xlat
jmp
sti
into
insl
adc
push
pop
data16
fidivs
rol
arpl
mov
imul
test
and
adc
andl
jmp
cmp
mov
cmpl
ljmp
shlb
es
xchg
js
xor
loop
repz
mov
fwait
sub
mov
mov
andps
sbb
lahf
add
or
mov
loopne
jno
enter
and
jo
hlt
hlt
in
lcall
lods
sub
repz
ret
iret
and
xchg
mov
movsb
or
cmp
imul
pusha
pop
pop
ret
scas
mov
addr16
add
dec
iret
cmpsl
inc
mov
xchg
cwtl
lcall
cs
mov
aad
loop
and
shrb
mov
lock
outsb
js
lahf
dec
in
push
jne
and
movl
sub
push
sbb
cld
flds
bound
dec
jae
mov
push
jbe
test
idivl
or
sub
aaa
add
insb
cmpsl
xchg
rol
lcall
movsb
in
ret
daa
adc
mov
adc
xchg
push
inc
cmpsl
add
mov
push
flds
test
mov
xor
aaa
and
cmp
insl
mov
pop
cmp
stos
or
mov
add
sbb
xchg
cmp
dec
cmp
stc
mov
insl
popa
dec
add
jmp
xchg
pop
pop
inc
mov
gs
mov
pushl
jnp
iret
pusha
dec
adc
jne
icebp
cwtl
fistl
jne
pusha
into
mov
mov
mov
pop
xor
pop
sub
inc
es
fistl
cmp
dec
pop
xchg
mov
sbb
xchg
xor
outsb
mov
das
test
insl
lock
inc
push
pusha
xchg
xor
data16
icebp
inc
sbb
lods
mov
ficompl
fldl
mov
aad
and
add
xchg
pop
imul
cli
and
mov
cmp
movsb
xchg
adc
cmp
cld
lret
mov
fsubrl
lahf
mov
jbe
sub
cli
movsl
mov
lods
sub
js
rcll
outsb
jo
mov
ds
lea
test
push
push
ret
in
lret
pop
or
and
aad
lds
and
inc
add
fiadds
jae
lret
imul
roll
add
scas
mov
call
fwait
cld
sbb
mov
call
fsub
pop
dec
cmp
clc
cmpsb
lds
leave
in
xchg
or
lcall
ljmp
push
in
aam
and
loop
push
and
sbb
inc
shll
xor
mov
iret
enter
pop
aas
fidivrs
out
jmp
xchg
fsubs
and
shrb
outsl
pop
xor
lods
cmp
adc
mov
lcall
xor
insl
adc
fwait
lds
lahf
lret
lods
pop
mov
cmp
mov
jb
sbb
cwtl
push
out
jl
movsb
icebp
aam
inc
or
xchg
adc
sbb
mov
addr16
push
clc
in
outsb
aad
cli
mov
mov
lcall
push
aam
adc
cmp
into
xor
cld
ret
xor
sub
lret
pop
push
mov
mov
push
stos
dec
sbb
cmp
and
mov
mov
jl
push
dec
cmpsl
inc
push
lret
fnstcw
je
ljmp
xchg
dec
sti
out
pop
adc
sti
sub
incb
fucom
popa
jb
jl
lret
pop
rcr
add
enter
out
fdivs
bound
cmp
add
mov
int3
leave
imulb
or
in
dec
push
nop
lds
mov
add
jns
cmp
sbb
xor
sub
and
mov
jecxz
dec
push
rclb
mov
and
mov
mov
dec
aad
sbb
cmp
mov
inc
or
cld
jnp
mov
inc
out
cli
pop
je
into
test
fisttps
xor
stos
fstpt
ja
cmp
loopne
test
sbb
xchg
enter
add
xor
jno
dec
mov
cld
mov
and
dec
pop
push
mov
push
subl
adc
dec
lret
adc
aaa
xchg
push
divb
sub
push
pop
dec
or
or
and
shr
imul
mov
dec
xchg
aam
cmc
dec
setno
xor
push
mov
dec
mov
push
ljmp
dec
xor
mov
add
into
stos
mov
mov
cmp
push
mulb
shlb
inc
push
mov
xchg
imul
xchg
mov
sub
popa
lods
or
outsl
push
add
divl
mov
aaa
loop
push
sbb
cmp
fnstenv
ljmp
cmp
fldenv
or
lahf
mov
popf
cmc
fcomi
xchg
xchg
loopne
std
dec
jmp
mov
addl
push
mov
cmp
mov
sbb
jle
int3
dec
or
pushf
xchg
cld
mov
fcmovne
dec
jle
lret
cli
data16
pop
xchg
cmp
xchg
popf
mov
enter
xor
inc
pop
rorl
ror
loope
cmp
inc
inc
inc
clc
cld
cmp
jnp
add
pusha
movl
lock
push
movsb
or
repz
mov
xor
int
movsl
lods
cmpsl
fdivrs
and
movsb
addr16
sbb
imul
test
out
add
push
mov
notl
pop
cmc
movsl
mov
add
dec
mov
leave
jp
cmc
mov
les
nop
xchg
mov
ja
mov
mov
mov
dec
push
xchg
and
inc
into
mov
or
inc
lret
jnp
dec
movsb
in
icebp
pop
cltd
lret
mov
dec
pop
jmp
cmpsl
mov
lods
lods
lods
cmp
sbb
sub
xchg
sub
mov
gs
test
jp
xor
out
sti
enter
cmpsl
hlt
mov
sub
lret
cmpsl
cld
out
push
pop
sbb
cmp
sub
jns
fdivrs
mov
mov
pop
arpl
jns
sbb
aam
in
jp
dec
imul
loop
int3
mov
jb
clc
int
lret
rorb
mov
mov
cmp
mov
xor
jle
loope
jl
les
cld
inc
ret
outsl
enter
inc
jnp
mov
jns
aam
mov
insb
shr
add
mov
cmp
repz
push
mov
inc
data16
cmc
pop
out
imul
push
adc
xchg
mov
popa
mov
mov
mov
jecxz
xchg
add
dec
inc
adc
dec
sbb
and
mov
jecxz
hlt
sub
testl
mov
jge
sbb
icebp
jg
push
scas
sub
fnstsw
pop
jg
and
push
xor
pop
in
mov
fs
ret
fucomip
cmpsb
sahf
mov
sahf
fadds
and
je
pop
cli
loope
hlt
and
mov
cmp
call
jns
sahf
out
mov
call
ja
lock
jnp
sub
and
xchg
or
mov
xchg
ljmp
out
jbe
out
sub
aam
push
dec
leave
push
test
stos
movsl
pop
sbb
int3
pop
mov
shrl
adc
adc
xor
push
lods
xchg
lahf
pop
jns
aad
or
jge
xchg
pop
aad
xchg
ljmp
cmp
aaa
lcall
iret
mov
xchg
out
add
dec
xchg
dec
mov
test
test
rorl
xchg
inc
push
inc
cld
pop
jb
push
icebp
mov
data16
push
cmpsb
pshufw
outsb
mov
in
lea
inc
ss
mov
loopne
sbb
js
xor
inc
and
out
jle
nop
subl
out
nop
jno
xchg
movsl
jp
mov
mov
mov
mov
fldcw
fcomp
xchg
and
jb
push
mov
cmp
mov
xor
out
inc
xchg
lahf
xchg
loop
mov
dec
sbb
mov
psubd
mov
lds
bound
ja
adc
push
test
fisttpl
aad
and
repnz
aad
lock
and
xchg
push
jle
adc
or
jne
iret
shrb
aad
lods
mov
cmp
jecxz
pop
and
push
test
or
push
inc
int3
lcall
xchg
ret
repnz
mov
lods
pop
sub
sbb
jmp
sar
cmp
mov
ret
pop
les
jns
push
sarl
je
repz
scas
hlt
mov
push
dec
fisubrl
lock
imul
mov
push
pop
repz
je
cmp
roll
scas
jo
add
jb
bound
mov
shlb
and
and
test
fsubr
out
jmp
add
fidivrs
sub
aam
repnz
mov
jo
ret
adc
add
xchg
jmp
mov
push
jae
cmp
jbe
pusha
test
pusha
add
jge
popf
jb
nop
jbe
xchg
adc
mov
mull
cmp
pop
or
sub
sub
adc
jecxz
xor
push
pop
xor
sub
in
scas
rcr
psubusb
jmp
push
out
fistpl
lcall
push
std
add
sbb
dec
in
mov
xor
cld
inc
inc
mov
sahf
mov
xchg
push
movsl
mov
loope
gs
adc
push
shll
test
andl
cld
cmp
les
and
inc
mov
and
push
insl
fistpll
les
xchg
push
cmp
jbe
test
jnp
inc
insb
push
cmp
hlt
fdivs
or
sahf
add
mov
lock
in
gs
and
inc
cmp
xlat
dec
sbb
andb
out
cltd
shrb
rol
push
lods
cltd
pop
or
push
sarb
or
xlat
aas
mov
roll
stos
dec
outsl
aas
xchg
in
addr16
adc
loopne
scas
mov
sbb
inc
inc
dec
xchg
add
dec
cmpsb
outsb
imul
mov
das
adc
xchg
sti
gs
mov
mov
jo
inc
loop
outsb
jae
push
test
mov
jle
lods
push
jge
addr16
or
jle
ljmp
sbb
je
sbb
pop
and
cmp
lret
jmp
cmpsb
add
dec
outsb
shll
and
mov
cmp
or
jbe
jns
dec
mov
push
mov
xor
je
mov
in
imul
test
daa
cmp
out
dec
cs
adc
cmc
mov
mov
bound
mov
and
push
pop
fnstsw
push
lahf
lahf
shlb
std
sbb
nop
in
sub
push
jp
stos
outsb
stos
sbb
loopne
sub
in
add
cmp
jae
pop
dec
ljmp
mov
sub
and
sub
out
push
and
es
inc
ret
cwtl
js
negb
adc
push
mov
and
fwait
into
push
sbb
lret
subl
push
push
mov
inc
adc
push
sbb
push
cmc
lret
bound
ss
pop
int3
sti
mov
lret
test
cmpxchg
cmp
pushf
cmp
pop
xchg
sub
rorb
cmp
inc
in
ss
lret
clc
mov
aad
sbb
ret
jge
sahf
mov
pop
and
mov
sbb
fsubrl
cld
mov
scas
mov
frstor
jae
pop
test
test
jmp
jns
outsl
jne
inc
popa
cmp
jmp
fsqrt
inc
jg
push
sub
add
sbb
fwait
dec
sub
lock
mov
sbb
mov
cmc
lods
hlt
js,pt
jne
xor
idivb
aad
fsts
in
out
or
cmc
cmp
int3
sbb
jp
sub
mov
scas
adc
pop
jp
sbb
roll
fsubp
out
je
outsl
loopne
out
mov
pushf
xchg
xchg
mov
hlt
cmp
pop
rcr
mov
clc
lret
addr16
cltd
ret
sub
mov
ficoml
push
dec
or
loope
pop
sti
and
imull
add
test
ret
or
test
cmp
mov
mov
js
add
imul
call
iret
and
gs
fwait
adc
and
jb
xchg
stos
mov
cli
adc
xor
int3
inc
insl
pop
in
outsl
jno
mov
test
mov
insb
pop
sub
aam
cmp
fwait
mov
pop
outsl
xchg
add
mov
mov
scas
push
jae
xchg
hlt
popf
cmp
xor
popf
loop
sbb
jge
lods
iret
fmull
mov
test
jl
dec
into
xchg
jno
test
xchg
pop
rorl
xchg
xor
xchg
or
and
pop
faddl
xor
in
ljmp
stc
inc
push
xchg
pop
xchg
out
push
in
dec
mov
fsubrp
sub
jmp
test
test
sbb
jns
js
sbb
dec
test
pushf
ret
sahf
lret
shrb
or
cwtl
arpl
and
add
push
repz
lds
shlb
jecxz
pop
fidivl
jg
das
inc
pop
xor
scas
and
lcall
cmpsl
push
shlb
sbb
add
lods
test
je
mov
into
daa
add
cmp
aaa
mov
int3
push
and
dec
outsb
inc
xlat
mov
incl
add
sub
sbb
sbb
xor
movsb
lea
sbb
jg
and
lock
imulb
jp
jmp
sti
pop
adc
or
lret
pop
sub
aam
mov
repz
sub
or
icebp
mov
sub
mov
imull
scas
add
out
jbe
js
repz
fidivrs
dec
movsb
inc
xor
dec
pop
fisubrl
xor
push
ror
and
subb
push
enter
daa
jmp
inc
pop
pop
xor
int
fstpt
in
xor
fsubs
outsb
lock
cmp
or
mov
xor
loop
dec
mov
faddp
sahf
mov
popf
or
push
dec
movsl
outsl
stos
pop
negl
dec
sbbl
and
subl
xorb
push
shrb
fisttps
sub
scas
xchg
jae
sub
push
inc
add
mov
push
push
cmp
lods
es
lods
mov
xor
jl
lahf
dec
iret
stos
adc
out
push
jmp
cmp
pop
cmp
popa
or
ret
lea
cld
sbb
ja
xor
shl
clc
mov
cmp
out
imul
movsl
les
mov
add
gs
es
pop
mov
insl
lret
mov
cmpsb
jg
add
mov
mov
popf
loope
cmc
mov
out
bound
inc
xchg
in
mov
lret
lds
lods
fildll
js
addl
mov
imul
pop
mov
adc
loopne
push
jo
xchg
movsb
pop
cmc
mov
inc
sbb
cmp
xorb
push
jl
fsubrs
mov
and
cli
lods
orl
push
ja
sbb
das
fmulp
roll
inc
popf
cmp
rorb
pop
push
ret
mov
xchg
inc
movsb
inc
es
shlb
xor
mov
mov
inc
xor
pop
jecxz
inc
gs
out
and
mov
notb
dec
ja
popa
push
or
push
rcll
and
xchg
xchg
lods
mov
cmp
and
hlt
lock
dec
negl
fwait
outsb
or
sub
sbb
dec
pop
mov
enter
jmp
mov
and
mov
enter
clc
inc
xor
loop
sarl
mov
push
sti
mov
xchg
xchg
mov
dec
mulb
or
cs
push
aaa
lock
aas
int
adc
xchg
stos
mov
add
add
xor
push
das
cmp
mov
push
stos
mov
xor
loope
pop
andb
out
test
mov
pop
in
mov
push
mov
outsb
test
pusha
not
xor
scas
fwait
sbb
pop
repz
ljmp
lcall
adc
stc
xor
and
mov
push
dec
inc
test
pop
add
repz
pop
popf
mov
xchg
scas
loope
and
mov
icebp
inc
xor
cmc
popf
cmp
sar
adc
dec
dec
cmp
sub
mov
xor
xchg
aad
and
mov
dec
xor
subb
xorl
test
div
mov
push
mov
mov
cmpsl
and
pop
cltd
aad
dec
std
out
mov
jbe
mov
mov
fbstp
sbb
adc
lock
mov
sbb
lahf
jne
stos
jmp
xchg
mov
xor
dec
sbb
ftst
inc
xor
push
pop
dec
stos
ret
ss
loop
orl
push
orb
rol
add
mov
mov
iret
xor
loope
movsl
mov
cli
push
inc
mov
into
jns
pushf
movsl
sahf
push
mov
mov
insl
lcall
jl
jns
or
jo
push
int
inc
and
aad
jo
push
sbb
pusha
xchg
mov
push
dec
xor
jno
or
imul
in
ret
repz
sub
mov
outsl
mov
push
enter
clc
out
inc
frstor
fcoms
test
add
sub
lock
clc
movsl
dec
xchg
pushl
and
push
das
test
xor
jbe
xchg
sti
inc
push
mov
aas
scas
jne
xor
inc
xchg
mov
mov
xchg
sub
xchg
sub
out
cmp
popa
repz
leave
out
addl
jb
mov
cmp
aad
imul
cltd
xchg
enter
mov
shl
call
xor
decb
mov
hlt
iret
lds
or
sub
jnp
cmc
sti
jo
xor
imul
push
outsb
outsl
inc
mov
imul
daa
push
adc
pcmpeqb
xchg
push
or
and
les
xchg
mov
inc
rcrl
xchg
cmp
jnp
inc
mov
in
sbb
hlt
nop
mov
into
mov
aas
mov
xor
dec
jmp
test
mov
imul
push
mov
or
nop
out
pop
in
push
fwait
out
xor
xchg
mov
xchg
and
adc
or
hlt
sbb
daa
jge
movsb
call
ja
pop
arpl
jmp
aam
js
sahf
gs
jp
and
ret
mov
andb
xchg
mov
push
lods
repnz
in
and
imul
and
pop
sub
imul
jbe
push
sub
pop
mov
mov
outsb
pop
nop
xchg
xor
mov
mov
nop
sarl
jnp
lods
jae
outsl
xor
daa
ljmp
arpl
and
outsl
and
aaa
int3
mov
xchg
cmp
jg
push
xlat
mov
test
stc
in
lcall
inc
lds
fidivl
ror
es
jmp
push
xchg
roll
loopne
jmp
adc
ja
mov
incl
adc
dec
loopne
popf
adc
daa
xor
dec
int
into
inc
in
pop
test
in
lods
jae
ds
push
iret
jl
les
fildl
inc
mov
les
cmp
mov
les
pop
popa
or
mov
into
xor
stos
int3
xchg
sub
add
fldenv
mov
imul
lds
stos
insl
and
push
repz
movsl
sbb
enter
in
shll
adc
fdivs
subb
dec
xchg
jmp
repz
clc
int
inc
mov
and
pop
movsl
mov
outsb
pop
jb
adc
xorb
lds
xchg
cmp
jmp
cmpsb
fs
mov
dec
xchg
clc
mov
add
jnp
mov
ffree
jp
int3
test
pop
lods
xchg
jmp
test
or
lods
ja
or
pusha
mov
fs
jmp
stc
or
loop
adc
adc
aaa
cmp
loop
mov
lahf
sub
dec
and
cmp
push
jne
mov
lret
rcr
mov
jecxz
inc
ds
push
mov
ljmp
lret
dec
adc
xchg
jnp
lods
cld
aad
cmc
pop
sub
imul
cs
aas
cmp
js
jp
or
inc
inc
or
sbb
lea
jo
inc
stos
inc
jp
lcall
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
.byte
.byte
or
fdivrl
inc
dec
push
dec
lcall
ds
leave
or
in
lret
out
xor
adc
pop
xchg
aam
movsl
sbb
sub
outsb
jae
push
inc
in
shl
out
adc
mov
pop
test
mov
pusha
pop
out
adc
test
push
push
mov
cltd
push
adc
das
clc
popf
inc
in
mov
ret
add
ds
pop
mov
push
fcomi
xchg
add
pop
loope
jg
scas
mov
add
fdivrl
lea
shl
cmp
cmp
push
inc
sar
bnd
shlb
cld
movsb
imull
adc
pop
icebp
and
daa
test
lcall
in
mov
or
fs
arpl
ds
test
repnz
out
test
imul
testl
cmp
cmp
dec
frstor
hlt
jbe
xor
js
mov
enter
popa
mov
pop
repz
ss
push
xchg
sarl
and
jg
jns
mov
test
pop
in
insb
pop
rcl
leave
mov
pop
in
dec
ret
add
lods
lods
pop
ds
push
mov
add
arpl
cmp
add
jp
push
fcoml
pusha
push
fmul
adc
aad
sar
loopne
mov
test
test
adc
add
push
fistl
cmp
mov
xor
sbb
jle
shll
sub
push
out
mov
mov
inc
popa
adc
outsl
arpl
sbbb
ljmp
jne
lcall
xor
sub
cmp
sub
mov
adc
out
xchg
add
adc
repnz
push
out
dec
loope
cmp
or
lea
lods
jmp
fsubp
inc
jb
inc
xchg
aam
jmp
enterw
cmp
mov
lea
cmpl
cmpb
mov
adc
mov
dec
mov
mov
jmp
lret
sbb
mov
addr16
add
or
int
or
or
loop
cmp
aad
leave
rclb
in
cs
iret
inc
negb
lret
sub
cmpsl
xchg
mov
inc
cli
dec
aas
fmuls
adc
addl
test
xchg
cmpsl
int3
pop
call
movsb
mov
pop
faddl
sarb
mov
test
and
hlt
loop
ret
adc
int
cmp
in
inc
loopne
inc
jno
or
das
mov
mov
gs
adc
xchg
inc
xchg
mov
xchg
fcmove
addl
sbb
popf
xchg
mov
mov
cmp
push
xchg
leave
jbe
xor
das
js
and
dec
mov
rcll
fld
add
push
push
mov
in
or
js
mov
test
arpl
clc
daa
jl
repnz
enter
pusha
in
imul
mov
mov
test
rcrb
sbb
sbb
fs
out
sub
xchg
rcrb
and
fidivrs
dec
mov
popa
mov
outsl
filds
call
sbb
mov
xor
movsl
mov
xchg
and
pop
adc
add
mov
lea
lods
sbbb
pop
icebp
cmp
enter
arpl
xchg
aam
pop
and
dec
jg
cld
hlt
push
and
mov
push
add
pusha
and
outsl
les
popf
imul
and
fld
pop
in
mov
jmp
dec
aad
xchg
xchg
or
lahf
sbb
arpl
add
popa
cmp
adc
push
pop
xchg
cmp
pop
pusha
shl
mov
dec
sbb
xlat
add
imul
dec
cltd
pavgw
add
or
mov
loopne
negl
cmpsl
dec
in
rcll
and
mov
int3
sub
jb
dec
jnp
mov
sti
mov
cmpsb
enter
aam
inc
ljmp
mov
mov
mov
lea
and
xor
in
stos
push
push
xchg
es
inc
pop
cmc
fcoml
es
push
pop
inc
lea
ret
jmp
shlb
xor
lcall
pop
pushf
pop
cmp
sub
mov
cwtl
nop
push
loopne
sub
dec
sbb
popf
mov
inc
ret
test
and
ljmp
mov
xchg
lock
inc
insb
push
out
add
insb
cmp
cmc
mov
enter
or
dec
aaa
push
fsubl
and
cmp
jns
je
fdivr
sbb
lahf
dec
dec
js
into
sub
sub
xchg
clc
imul
xchg
adc
fidivrs
ud0
adc
or
sti
sbb
sub
add
jg
mov
mov
dec
jne
fs
sbb
in
cmp
ss
orb
inc
pop
xor
cmp
mov
cmp
out
inc
outsl
and
dec
xchg
xchg
mov
lret
sbb
mov
xor
aam
or
call
sbb
scas
dec
mov
neg
insb
push
mov
loopne
push
lock
addl
lods
pop
repnz
push
in
movsb
mov
add
filds
loopne
or
fistps
push
xchg
jbe
test
xchg
sbb
sub
push
or
jecxz
adc
or
sub
xor
jb
xchg
or
sub
call
and
loopne
mov
sub
pop
mov
adc
sahf
mov
stc
push
pop
or
jmp
mov
add
sub
dec
xor
dec
sbb
jle
cmpsl
jae
and
and
sub
subl
sbb
adc
xor
xchg
cmp
and
cwtl
sub
inc
sti
lods
push
mov
jnp
mov
mov
int3
jns
cmpsl
mov
in
jmp
jo
add
in
pop
sbb
jnp
sub
adc
in
sbb
outsl
outsl
lock
fildl
cmp
push
pop
faddp
sub
jmp
faddl
jg
pop
int3
in
mov
outsb
mov
xlat
mov
add
cmp
mov
push
dec
and
in
imul
xlat
pop
call
ljmp
test
scas
aam
mov
sbb
notb
jmp
jmp
xor
bswap
fadd
xor
int3
dec
cmc
test
pop
inc
inc
inc
and
fisttps
in
dec
inc
ret
ret
push
add
xlat
lods
pop
sbb
leave
lret
xchg
ss
aas
loope
mov
mov
dec
outsl
lcall
test
pop
rcrl
xorb
das
test
in
aad
clc
xchg
outsl
jmp
addr16
pop
iret
lods
dec
jmp
push
pop
loop
pop
je
addr16
adc
push
push
shrb
sub
iret
xor
push
jle
adc
jg
fmuls
dec
inc
jmp
adc
cs
scas
lcall
pushf
ret
fcmovne
clc
xchg
xchg
insl
ljmp
mov
cmp
sarb
lret
pop
js
lods
xchg
mov
pop
mov
aam
inc
xor
icebp
push
xchg
and
in
ljmp
sti
call
sub
xchg
push
cmp
imul
cmpsb
orl
rcl
jge
cmpsl
arpl
mov
mov
shrl
or
ret
adc
xlat
or
xor
or
dec
jge
push
dec
jnp
in
xchg
sbb
add
lds
dec
jnp
sub
push
push
aaa
sbbb
inc
sbb
pop
stos
cs
sub
in
mov
sub
mov
out
cmp
lcall
jle
mov
lahf
inc
sbb
mov
test
pop
stos
out
sbb
add
fwait
mov
mov
daa
mov
insb
sub
mov
daa
mov
movsl
ja
jge
shl
inc
movsl
in
les
adc
dec
dec
push
dec
arpl
lock
fs
mov
gs
dec
dec
xchg
inc
sbb
fldenv
pop
ja
push
test
push
add
jl
and
arpl
test
sbb
inc
pop
daa
xor
and
ss
inc
cli
cmp
jle
inc
in
negl
in
and
das
jbe
mov
aad
push
lods
fisubl
mov
fs
fbstp
movsl
fs
and
out
js
sbb
adc
leave
xor
test
push
gs
add
icebp
lea
cli
push
jae
dec
add
jne
das
or
cmp
in
loope
mov
or
push
add
mov
je
fisttpl
cmpsb
jo
movsl
xlat
xchg
iret
cld
xchg
cmp
arpl
push
cltd
or
in
and
mov
pop
mov
xchg
push
or
sub
push
stc
sbb
jecxz
cld
shlb
mov
test
jb
out
push
xchg
rcrl
xor
out
pusha
inc
cmpsb
in
sub
fimuls
dec
jecxz
mov
or
xchg
sarl
or
and
imul
pop
movsl
lahf
cmc
push
jns
cld
inc
shlb
ret
mov
sub
xor
gs
aas
sbb
cmp
and
mov
push
mov
dec
ja
jne
adcl
les
movsb
xchg
sub
mov
out
mov
push
sbb
cmpsl
sbb
mov
cmp
dec
cmp
pop
in
lods
std
push
pop
inc
dec
js
and
cmp
dec
xchg
leave
sub
jae
inc
jbe
fsubrs
pop
aad
xchg
adc
pushf
outsl
and
xlat
mov
rclb
andl
movsl
mov
xor
std
addr16
cmp
and
or
push
jp
mov
xchg
hlt
xor
aam
cwtl
mov
push
dec
into
test
imul
outsb
adc
push
sahf
mov
mov
sti
fstl
jae
pop
mov
or
lret
lret
dec
fadds
or
shll
arpl
lock
lods
addr16
es
movsl
pop
mov
mov
push
push
jno
out
cmp
lcall
push
stc
pop
in
imul
fidivl
in
jle
int3
ror
push
mulb
pop
int
das
adcb
pop
ficompl
and
and
je
sahf
lret
aas
or
mov
sbb
sub
popf
xor
repz
sahf
xor
insl
pushf
cld
stos
add
insb
pop
mov
dec
pop
fisttps
adc
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
.byte
.byte
.byte
dec
mov
xchg
test
adc
hlt
dec
push
test
lock
repnz
cwtl
and
testb
or
cmp
aaa
jge
sub
pusha
mov
cmp
sub
mov
push
adc
out
shlb
popa
fcompl
xor
cmpsb
or
jl
dec
cld
imull
decl
fsubl
inc
adc
mov
xchg
mov
test
jno
push
and
or
ds
and
clc
add
add
cmc
xchg
and
pusha
mov
lahf
ja
mov
clc
popa
movsb
jne
push
loop
movsl
lds
jno
sub
mov
xlat
push
jp
jo
jmp
or
pop
roll
bound
mov
dec
mov
adc
stos
lret
mov
sub
cmpsb
mov
das
mov
inc
aas
ds
outsb
xor
mov
pop
int3
aas
jae
inc
jns
dec
pop
jge
movsb
inc
lahf
mov
in
ja
push
ret
ja
dec
test
clc
mov
outsl
dec
ret
sbb
push
aad
repz
push
movsl
xchg
jecxz
in
xchg
fs
pop
imul
xchg
xchg
stos
mov
dec
add
testl
int
xor
out
sbb
mov
push
cmp
test
test
and
sub
lock
les
mov
jp
sbb
in
out
fdiv
push
pop
les
in
sbb
cs
aad
cmpsl
push
dec
push
lods
or
pop
jge
xor
bound
mov
inc
out
sbb
dec
inc
cwtl
fs
popf
fs
and
adc
cmp
in
sbb
or
addb
mov
filds
aam
cmc
rolb
sti
xlat
in
leave
or
lods
cmpsb
pop
lahf
cwtl
mov
sti
sub
subb
mov
xchg
test
and
adc
mov
scas
pop
inc
push
fmull
cld
xchg
scas
jnp
sub
pop
lock
mov
ja
sbb
cmpsl
fisttps
lret
imul
fstl
loopne
ds
sbb
scas
jne
mov
aad
inc
lods
and
cmpsl
fisubrs
mull
dec
mov
add
add
sbb
repnz
lods
icebp
or
int3
ret
mov
pushf
cmpsb
adc
jge
aaa
cli
and
lea
mov
rep
xor
push
sahf
jmp
out
pop
nop
mov
pop
notb
mov
popa
das
fdivs
popa
enter
in
loope
in
gs
jne
repnz
je
inc
scas
imul
lret
push
cld
rorb
xchg
inc
cmp
push
ret
mov
mov
mov
jns
ljmp
dec
mov
cmc
mov
adc
call
xor
pushf
xchg
dec
pop
cmp
es
shll
dec
sbb
pop
and
imul
push
arpl
divps
xchg
out
inc
adc
jno
mov
ret
enter
leave
into
sahf
mov
jl
stos
jge
mov
push
lcall
loope
ljmp
fstpt
roll
addl
or
sub
push
mov
fs
mov
push
push
sub
push
jbe
mov
pop
fstps
mov
xor
es
stos
cmp
adc
call
cltd
fmulp
mov
inc
scas
dec
mov
or
jle
ret
fcom
fs
mov
insb
mov
sbb
jnp
xchg
push
fldenv
mov
mov
mov
shll
std
mov
push
mov
stos
jbe
inc
push
sahf
fs
pop
pop
incb
push
mov
sub
dec
mov
les
inc
pop
inc
or
stos
lret
sbb
mov
or
jae
ret
aam
and
jae
push
sbb
and
call
les
dec
inc
add
lods
fcompl
movsbl
pop
jg
cmp
dec
hlt
cmpsl
mov
xor
mov
pop
jb
addr16
cld
jl
imul
int3
out
ljmp
test
cmp
mov
push
push
jle
es
xchg
fs
arpl
outsl
mov
insb
cmp
outsl
test
cmp
jp
into
dec
and
faddp
push
mov
add
mov
fimuls
jo
and
lods
pushf
es
sar
or
cltd
inc
insl
sub
xorb
stc
jns
pop
jbe
adc
inc
mov
or
inc
test
sub
mov
mov
mov
inc
out
cmp
fdivr
xchg
sub
lods
loopne
cltd
mov
fstps
cwtl
xchg
push
mov
adc
push
lret
xchg
in
fdivp
jge
jl
cmpsb
push
jl
paddusb
jno
mov
push
mov
rep
cwtl
fldt
outsb
mov
lret
adc
mov
inc
in
loope
sbb
sub
inc
push
adc
lds
mov
jg
xor
pop
xor
add
adc
inc
fstps
xchg
addr16
xchg
sub
js
cmp
call
cmpsb
sbb
inc
nop
insb
leave
xor
mov
sbb
jecxz
out
movsb
int3
ret
add
jp
or
push
aam
adc
scas
dec
push
rorl
push
inc
and
loop
pop
fnstenv
aad
daa
scas
or
push
jnp
mov
test
enter
add
mov
loope
pop
call
xchg
add
sbb
xlat
push
in
jle
add
adc
jge
popa
testl
shrl
pop
push
pop
mov
jno
cmp
cmp
je
mov
std
sbbb
movsl
push
push
lds
sbb
cmc
cld
xchg
xor
pop
pop
sub
orl
xlat
xchg
sbb
mov
fs
lret
rorb
daa
rclb
add
push
dec
test
cmp
dec
clc
or
mov
push
loope
pop
int3
xor
sbb
pop
add
pushf
add
or
jl
lock
push
adc
rorb
es
mov
lcall
xor
jl
scas
lret
sti
push
testl
rorl
mov
mov
cwtl
iret
xlat
daa
rcll
adc
pop
es
hlt
add
stos
sbb
jp
cmc
inc
cld
repnz
mov
or
shlb
dec
mov
repz
push
xchg
rcrl
addr16
add
cmp
xlat
test
testb
out
pushf
sub
sarb
fnsave
fdiv
cs
mov
mov
lods
dec
sbb
dec
test
adc
and
pop
jmp
push
popa
or
into
push
add
dec
fmull
lds
lahf
pop
mov
int3
mov
addr16
jbe
sti
mov
in
xchg
push
and
xorl
int
push
add
mov
lock
jecxz
jnp
lds
mov
daa
cmp
stos
xor
fs
adc
shl
iret
mov
mov
bound
cmp
fbstp
icebp
shlb
mov
sarb
pusha
jbe
push
imul
fidivrl
shlb
or
pop
adc
xor
mov
inc
bound
push
or
pop
insl
popf
fmulp
cmc
dec
shll
test
sahf
loopne
arpl
movsl
mov
orb
fdivl
sub
sahf
lds
xor
lret
add
ret
sti
xor
or
xchg
or
sub
adc
and
popa
shl
dec
inc
jne
ja
mov
and
cmp
and
cwtl
sub
sbb
xor
push
fs
mov
sub
mov
xor
in
xor
cli
rcll
call
jl
xor
inc
je
sub
fmul
adc
cmp
lahf
or
xor
fsubl
lret
rcl
mov
clc
mov
aad
out
mov
inc
call
subl
add
setne
in
loope
mov
adc
loope
sbb
cmp
sub
nop
and
push
adc
jno
in
mov
enter
fs
arpl
add
jae
sub
sbb
rorb
push
add
pop
pusha
enter
jg
scas
jne
inc
xchg
xchg
data16
xchg
pop
pop
pop
pusha
rcl
call
sarl
out
filds
es
push
jle
push
enter
adc
add
sbb
adc
pop
and
loopne
ja
test
jae
ret
and
add
pop
jo
add
stos
imul
jmp
xchg
cmp
mov
mov
mov
fs
jbe
js
shrl
cli
cltd
push
jo
ljmp
mov
add
pop
lcall
popa
or
and
sub
out
mov
clc
ljmp
and
xchg
into
addl
fnstenv
int
or
sbb
dec
mov
dec
incb
pop
dec
je
icebp
push
mov
jl
movsl
stos
sub
add
jbe
mov
and
out
sbb
daa
movsl
cmpsb
inc
imul
mov
pop
jg
aaa
roll
shll
movsl
in
cmpsl
ss
std
or
iret
jge
cmpb
mov
clc
js
aaa
inc
movsb
nop
inc
xchg
mull
test
mov
jbe
mov
out
cmp
mov
mov
push
es
pop
sbbb
nop
fcoms
out
icebp
loop
fildll
int
sahf
mov
lret
clc
adc
and
iret
aam
cmpsl
sub
xchg
roll
subb
enter
push
outsl
adc
sub
jl
add
lods
cwtl
jle
xchg
pop
mov
adc
je
jnp
add
or
stos
inc
sbb
inc
xorb
and
fisttps
cmc
repz
arpl
pop
shlb
jo
dec
scas
lods
mov
sbb
xchg
lods
fistpl
xchg
xor
sbb
sub
mov
push
in
pop
jo
out
xchg
sarb
jle
jae,pn
xor
push
pop
jo
stos
add
xor
inc
add
push
or
inc
jge
in
sar
and
or
mov
shrl
cmp
push
icebp
dec
add
ficompl
mov
es
mov
pcmpgtb
adc
sub
rol
cli
sbb
xlat
xchg
xchg
pop
imul
xchg
out
popa
int3
push
mov
add
paddw
repz
inc
dec
sbb
lds
stc
scas
or
fnstsw
mov
push
lcall
mov
add
adcl
push
sahf
sub
js
sub
inc
aam
dec
mov
jns
or
cwtl
mov
adc
jbe
jne
sbb
lods
dec
wrmsr
gs
mov
out
pop
scas
dec
cld
inc
push
pop
xchg
pusha
sbb
int3
stos
sarb
ja
insl
cmp
fcmovu
cmc
jno
adc
aam
gs
sbb
jno
cmp
or
lahf
dec
mov
cmc
repnz
jne
out
xor
sub
insb
pusha
in
cmpsl
mov
lods
sbb
inc
xchg
adc
ljmp
test
mov
cmp
push
inc
mov
idivl
loopne
mov
adcl
adc
repz
jbe
rcrl
int3
repz
cmpb
lods
add
shrb
nop
loop
mov
into
dec
cmp
pushl
cmp
inc
mov
daa
jne
add
mov
repz
aam
dec
or
push
add
and
mov
push
push
dec
pop
add
dec
js
mov
rcrb
loop
push
imul
andb
xlat
bound
sub
jmp
ret
fwait
mov
jp
add
add
mov
icebp
aad
mov
fidivl
into
pop
sub
mov
bound
and
pop
fs
lds
mov
test
push
inc
inc
or
repnz
dec
add
fistps
test
mov
pusha
xchg
sbb
sub
fidivs
in
dec
icebp
cmpsb
cs
dec
cltd
xchg
dec
insl
jbe
or
icebp
mov
stc
or
lahf
mov
jl
xchg
inc
xor
cvtps2pi
push
inc
dec
adc
in
lret
lret
cmpsb
mov
insb
ret
lahf
gs
out
pop
mov
sti
pushf
jb
arpl
repz
outsb
cmpsl
mov
dec
loope
pop
ret
xor
js
jl
daa
mov
dec
xchg
aaa
cmp
fbstp
imul
out
mov
mov
jl
push
cwtl
aaa
in
and
add
mov
popf
inc
in
and
mov
and
cltd
cld
cmp
data16
mov
xchg
loope
jge
xorb
mov
fcompl
shlb
icebp
xchg
mov
mov
ret
mov
jnp
lea
adc
mov
fcoml
xor
mov
ret
daa
insl
inc
inc
mov
cmp
xchg
mov
xchg
xchg
out
pop
pop
scas
sbb
xchg
in
test
icebp
dec
xor
mov
jmp
lcall
fdivrs
sub
mov
inc
jbe
lret
push
fsubr
dec
adc
adc
adc
aas
or
adc
push
std
cmp
loope
ficoml
cmpsl
jns
js
dec
stos
xorb
add
in
pop
jmp
aam
testb
mov
addr16
xor
push
filds
mov
mov
push
jle
cmp
jne
icebp
sti
cli
lret
ret
adc
fadd
adc
mov
cmp
ljmp
loop
or
mov
add
je
sbb
lods
and
mov
mov
imul
out
ret
push
push
push
and
push
xchg
in
movsl
scas
or
loopne
stc
mov
cmpb
pop
mov
jp
cmp
sahf
add
mov
xor
xchg
mov
dec
js
aad
nop
outsb
addr16
xchg
lret
movsl
fadd
jmp
shrb
sub
popa
and
mov
ds
add
std
cmp
clc
cmp
dec
inc
pop
sub
data16
inc
int
mov
fisubs
pop
insl
cmp
jnp
jecxz
sub
iret
test
jl
mov
jmp
dec
in
cmpsb
mov
in
hlt
imul
adc
cmpsb
sub
dec
xchg
mov
xlat
or
adc
sub
add
flds
adc
loope
sbb
pop
lods
fmull
xchg
cltd
push
mov
iret
add
mov
adc
mov
ja
mov
cli
add
testb
test
movsl
cmp
mov
rolb
dec
movsl
test
arpl
stos
lcall
sbb
insb
sub
inc
or
adc
jmp
pop
sub
rcr
out
aam
push
shrb
pop
nop
and
out
jmp
xor
das
dec
sub
fwait
push
sbbl
sahf
andl
stos
sub
and
shr
int3
std
movsb
mov
xchg
repz
lods
xor
sti
sbb
sub
in
ret
fsubr
add
call
mov
jae
cwtl
jle
push
sub
jle
ss
cmp
lahf
add
dec
in
jle
sahf
icebp
xor
push
ss
adc
pop
stc
shll
jl
jp
mov
iret
and
pop
addps
lea
mov
je
es
mov
pop
inc
cmc
loopne
sti
pop
adc
aam
jns
cltd
mov
push
inc
sub
loope
xchg
dec
pop
or
adc
pop
mov
inc
xor
xchg
fs
aad
sarb
and
inc
arpl
lea
add
icebp
jnp
leave
les
or
imul
aaa
sti
inc
enter
rcrb
jo
xchg
inc
mov
daa
mov
loope
mov
lea
lods
std
pop
je
push
jecxz
mov
mov
fcomp
aad
in
mov
in
push
jecxz
xchg
jp
hlt
push
or
shrl
lds
jo
je
in
popa
ss
mov
pushf
xchg
push
insb
shll
adcb
or
in
jb
or
shr
cld
sbb
lret
pop
pop
sbbl
adc
adc
idivb
and
ret
cmp
mov
pop
out
push
pop
xchg
pushf
ss
xlat
fs
lret
sbb
lods
mov
mov
xlat
mov
pop
mov
cmovae
lock
xor
pop
je
testl
xorb
std
jo
add
lret
push
push
sbb
fisttpl
xor
mov
mov
xchg
dec
and
int
bound
push
add
out
sub
cmc
jae
ljmp
and
push
or
or
xor
xor
push
cmc
xchg
mov
jb
test
mov
push
xlat
xor
mov
ret
ss
push
and
pop
jmp
xchg
adc
jnp
xchg
bnd
inc
or
data16
add
test
cld
mov
std
aaa
rcrl
mov
adc
xchg
push
dec
call
sbb
sub
cmp
jmp
xor
rolb
ds
daa
adc
xchg
js
dec
outsb
push
ja
adc
push
inc
mov
push
test
cmp
iret
or
dec
or
out
push
sub
sbb
loop
sbb
jnp
sbb
inc
xor
fld
sahf
xchg
sbb
insb
add
push
not
dec
out
fildl
jo
out
sub
sub
mov
fwait
mov
lret
mov
or
mov
ja
sub
movq
popa
test
add
or
dec
mov
in
jge
lret
scas
add
pushw
and
pop
shll
cmp
mov
loope
xchg
jnp
adc
push
stc
fisttpl
xor
jnp
or
jo
ss
fnstsw
ss
inc
es
mov
push
sbb
pop
popf
adc
xor
in
insl
pop
sbb
mov
pusha
ss
notb
inc
mov
jne
cmp
cld
testl
jb
dec
js
nop
push
push
mov
mov
dec
mov
add
xor
or
movb
xchg
sbb
pop
sub
sbb
call
pop
dec
and
xor
cmp
add
notb
push
xchg
mov
mov
cmpsb
mov
jp
cmp
mov
add
and
add
jl
and
icebp
mov
mov
loop
rolb
xchg
xchg
sbb
push
cli
push
in
fsts
cmp
xchg
mov
or
push
ljmp
fwait
xchg
push
into
js
cmpsb
cmc
pop
pop
rclb
add
loope
les
mov
or
jo
xor
pop
cmp
lret
mov
xchg
int
mov
dec
adc
leave
out
jns
cmovs
ret
iret
rcl
xor
stc
test
add
xor
js
dec
insb
adc
xchg
or
mov
scas
mov
test
mov
repz
push
sahf
add
pop
scas
roll
or
shlb
push
mov
and
xor
out
or
fistl
xor
add
xor
or
pop
in
or
and
pop
cmp
lock
out
and
cmp
sub
rcrl
enter
adc
jae
ljmp
fnstcw
fbld
cld
icebp
xor
dec
xor
mov
sbb
xchg
rcrb
xchg
roll
popf
cld
mov
repnz
in
push
movsb
ljmp
fcmove
xor
xchg
xchg
xlat
xchg
ret
repz
pop
cwtl
and
mov
jb
fwait
inc
movsl
sarb
test
xchg
dec
repz
jnp
adc
test
dec
and
call
xchg
stos
mov
rcrl
jb
push
test
lahf
cmp
add
push
mov
popa
subb
xchg
aad
je
push
ret
add
mov
push
mov
dec
scas
popa
fbld
lret
dec
stos
push
sbb
pop
loop
and
jmp
and
cmp
pop
or
jne
out
xor
shrb
addr16
inc
mov
xor
push
adc
arpl
repnz
inc
stc
push
mov
or
and
pop
pop
pop
aam
cmp
jle
jno
ja
xor
out
jnp
clc
loop
dec
add
dec
out
test
movsb
adc
dec
es
in
jp
ret
xchg
mov
sbb
dec
inc
push
xchg
xchg
and
mov
mov
out
jnp
popa
or
inc
sub
test
and
insl
aas
add
repnz
into
fnstenv
lea
adc
xor
pusha
mov
xor
leave
push
push
out
and
or
jne
das
and
sub
and
adc
mov
popf
scas
shr
punpckldq
push
sbb
inc
xlat
xor
jle
flds
add
adc
xor
ret
push
fnsave
mov
stc
fistpll
inc
mov
lret
faddl
cld
mov
mov
repnz
stos
sub
mov
fisubl
mov
fbstp
outsl
jp
in
aas
pop
or
outsb
push
xor
pop
fisubl
leave
adc
out
sbb
in
xor
les
add
xor
mov
jbe
mov
lret
lods
jecxz
sub
mov
xchg
shrb
xchg
dec
cli
mov
jmp
cmpsb
fidivs
jne
outsb
in
mov
and
pop
jecxz
sub
sahf
sub
mov
mov
mov
mov
lods
cmpsb
xor
dec
stc
stc
jae
push
mov
sub
shll
fisubs
cmp
mov
and
insb
or
jle
das
int3
dec
shrb
cmpsb
sbb
mov
in
shr
pop
call
hlt
pushf
repz
icebp
sub
std
clc
clc
inc
test
fildl
add
dec
push
cld
pusha
popf
fisttpll
clc
incb
scas
mov
cmp
jno
mov
in
push
jne
cmpsb
lea
insl
arpl
cmp
stos
lds
and
insb
iret
rclb
insb
mov
mov
fs
cmpb
xchg
xchg
add
es
jmp
cmc
out
imull
inc
inc
push
sbb
dec
mov
test
repnz
mov
addr16
hlt
and
leave
les
test
mov
push
fisubs
jecxz
jo
cmp
jge
pop
mov
lods
in
sub
setae
cmp
jne
aaa
rol
imul
cmp
pop
adc
pop
in
jecxz
fcmovnbe
jnp
mov
cmp
push
jmp
dec
mov
jl
and
push
cmp
xchg
sbb
daa
jle
xor
sti
fwait
sub
scas
pop
jl
inc
dec
add
mov
mov
bound
mov
pusha
sti
scas
jge
xacquire
imul
mov
test
push
movsb
or
scas
js
or
sub
sbb
push
cmp
jp
sbb
int3
xchg
or
popa
fsubr
pusha
frstor
sub
cs
aad
cmp
int
mov
cwtl
sub
test
adc
in
fs
adc
mov
cmc
mov
cmc
cs
xchg
sub
ret
mov
in
dec
and
xor
add
xchg
push
sub
aam
mov
cmpsl
cld
fs
push
jecxz
push
and
push
cmp
sbb
js
mov
cmp
adc
xorl
loope
clc
push
ret
lods
lods
push
pop
xchg
out
xchg
jns
out
mov
cwtl
test
sbb
inc
mov
into
insl
cmp
dec
test
sub
adc
sbb
lods
jp
xor
xor
cmp
mov
imul
sar
pop
adc
movsl
pushf
aad
fbld
sahf
imul
xchg
mov
mov
lock
or
mov
sbb
pop
jle
cmp
lods
push
pop
icebp
loopne
sub
xchg
bound
fwait
dec
stos
cli
shll
inc
mov
imulb
repnz
add
jge
or
stos
movsb
push
xchg
sub
jge
dec
loope
lret
fdivrs
mov
je
inc
in
pushf
xacquire
and
dec
cmp
add
sub
inc
ret
xor
jb
mov
mov
cmp
jae
fisttpl
mov
adc
inc
mov
jmp
scas
push
dec
adc
in
mov
mov
popa
loopne
or
pop
mov
adc
sarb
fwait
jne
adc
jne
and
insl
addl
into
gs
pop
jg
movb
sub
dec
inc
addr16
mov
setge
xchg
jb
in
xchg
jbe
dec
dec
idivb
push
dec
cs
movsl
push
and
lret
sbb
xor
fnstsw
repnz
gs
fcoml
xor
mov
sbb
test
in
mov
mov
mov
fldl
jle
outsb
inc
sar
or
cli
sti
test
adc
jl
ljmp
sti
pop
roll
fldcw
sub
daa
data16
out
or
ret
outsl
ljmp
pop
rorl
inc
mov
sbb
out
lret
mov
pop
hlt
movsb
hlt
lods
mov
or
out
jbe
pop
in
repz
xchg
in
sub
xor
stos
mov
jne
fwait
int
jg
repnz
dec
test
fwait
shlb
out
mov
mov
mov
sub
fldt
mov
fmuls
testb
enter
push
je
xor
cwtl
jbe
mov
and
data16
incl
mov
xchg
sub
out
lret
add
stc
pop
jle
pop
add
addr16
in
mov
fdivp
mov
rclb
mov
loop
mov
pop
lds
test
jb
cld
cmp
sub
sub
jb
fiaddl
adc
add
cmpsb
lds
dec
push
inc
jmp
popa
or
dec
add
sbb
sbb
push
push
inc
xchg
sub
cmp
pusha
sbb
mull
sbb
rcr
mov
in
push
orl
sbb
insb
mov
call
and
push
mov
push
cmp
adc
mov
scas
or
test
cmp
inc
mov
aam
sbb
push
push
mov
fucomi
jmp
pushf
out
in
mov
cwtl
lcall
mov
xchg
and
insb
mov
int3
mov
jne
xchg
xlat
pop
shrb
pushf
pop
sbb
lock
inc
repnz
fisttpll
test
xchg
sbb
jne
mov
out
mov
iret
orb
mov
add
out
hlt
rcll
cmp
mov
pop
stos
int3
data16
stos
test
xor
dec
adc
lods
stos
ljmp
pushf
xor
mov
movsb
jle
outsb
pushf
loope
and
sub
push
mov
jae
or
es
sub
addl
sub
sti
cmp
dec
in
lods
test
outsb
nop
sbb
sbbb
ret
ljmp
cmp
adc
das
dec
loop
jbe
imul
fsubrl
imul
mov
daa
lret
lahf
sbb
out
push
rep
scas
dec
out
stos
inc
adc
stc
jge
shl
pop
pop
pop
mov
outsb
pusha
push
sub
sbb
loopne
sbb
cld
insl
fxch
pop
push
or
lcall
jecxz
mov
pusha
in
add
mov
enter
outsb
es
iret
xchg
dec
xchg
inc
dec
std
jnp
out
add
arpl
mov
fistl
mov
jp
mov
in
push
gs
inc
in
test
xor
mov
add
sbb
mov
bound
mov
ret
movsl
mov
cmc
mov
xchg
inc
ja
adcb
adc
insb
fisubl
out
push
test
js
mov
xchg
mov
addr16
outsb
sarl
sub
mov
and
pop
mov
push
lods
ja
fidivrs
pop
and
jmp
sbb
xor
jne
adc
daa
inc
mov
cmp
js
imul
sub
adc
add
outsl
sahf
cwtl
std
andb
gs
inc
dec
jmp
pop
fldt
inc
mov
shrb
mov
into
xor
out
xor
fildll
lods
dec
push
push
jae
insl
push
pop
jb
xor
cmp
jbe
jmp
imul
mov
or
pop
jecxz
jle
mov
aaa
jo
pushf
or
push
mov
subl
repnz
and
lahf
pushf
test
jae
mov
addr16
lret
pop
std
xor
jne
aas
out
addb
lret
popa
stc
es
sbbb
add
xorl
mov
rcll
add
mov
xor
shrl
mov
and
lcall
fwait
push
adc
jmp
sub
mov
pop
ljmp
rcrb
loopne
cmp
and
fwait
aam
icebp
cli
and
lods
push
cmpsl
mov
mov
les
xchg
outsb
dec
xor
xchg
addl
sub
roll
sbb
sbb
fbld
jp
inc
sbb
sbb
imul
sahf
sahf
ret
jg
cld
ss
adc
imul
aas
mov
pop
push
push
lock
in
popa
push
adc
iret
jno
and
jmp
stos
push
cmc
dec
ja
adc
or
movsl
pop
dec
test
testb
xor
mov
xor
rorb
cmpsb
ret
bound
mov
push
sbb
mov
xchg
dec
cmc
sub
je
jge
ljmp
and
imul
push
mov
xor
lock
fs
or
shl
inc
sub
cmc
inc
mov
mov
or
mov
fimuls
sub
imulb
clc
lods
ret
or
mov
mov
xor
cld
fistpl
cltd
add
mov
mov
mov
je
mov
pop
sub
mov
fimull
push
sbb
or
fsubs
mov
jg
jnp
movsl
dec
mov
js
jecxz
ret
jmp
pushf
pop
aam
int
inc
xchg
sbb
pop
mov
pop
inc
cmp
cli
xorb
jle
imul
sbb
push
or
cmp
mov
out
adc
scas
out
stos
stc
dec
int3
call
stos
pop
insb
js
xchg
xchg
cmp
sahf
test
pop
rclb
dec
sbb
lahf
jecxz
hlt
add
jle
les
daa
cmp
test
xchg
push
je
into
jmp
dec
jge
dec
fcomps
cwtl
push
mov
jo
sub
scas
sbb
pushf
loope
mov
inc
pop
jle
es
test
mov
outsl
lahf
lds
pop
iret
jmp
lea
aad
lret
arpl
out
das
mov
dec
push
loop
add
sub
dec
pop
push
xchg
sbb
mov
ljmp
repnz
scas
fnstenv
xor
sbb
std
push
add
and
xchg
std
lds
out
outsb
sub
outsl
subl
xchg
sbb
push
call
sub
inc
lods
dec
lds
and
call
int
cli
jo
sub
xor
adc
jge
dec
mov
xchg
sub
mov
xchg
cmp
dec
jle
insl
test
fstpt
lcall
aad
xor
icebp
cmpsb
and
sub
sub
or
pop
rol
xorb
push
adc
or
mov
sub
cmp
lret
pop
add
inc
sbb
lret
test
or
arpl
mov
movl
jp
adc
mov
fidivl
cli
imul
sub
in
addr16
gs
outsb
push
sbb
daa
sbb
cmpsb
or
lret
test
loopne
std
cli
pop
pop
sub
js
movsb
push
popa
xchg
out
js
cmp
jp
jae
cmpsb
loopne
dec
pop
ljmp
push
mov
push
mov
in
pusha
add
sbb
adc
inc
testb
test
outsb
fists
mov
mov
or
cld
aam
fistl
push
mov
mov
cmp
pop
xchg
idivl
pop
movsb
in
sub
sub
hlt
pop
cli
cwtl
pop
lahf
and
fcmove
push
mov
rol
or
push
orb
mov
fwait
ljmp
mov
cwtl
mov
cmpsb
aam
ret
pop
jo
cmp
push
out
sbb
dec
fildl
jp
jns
ret
jle
jp
not
imul
push
cwtl
scas
and
sahf
xlat
dec
xchg
cmpsb
dec
fsubr
or
xor
pop
pushf
mov
add
jo
stc
mov
sahf
test
xchg
jmp
shlb
mov
jecxz
push
pusha
cmc
mov
mov
cmp
xor
mov
and
push
push
sbbl
sub
xchg
mov
ret
dec
fnstenv
rcl
dec
ret
out
pop
pop
push
rol
lahf
insl
cmpsl
sub
hlt
pop
xor
pop
sbb
xchg
xor
cli
jecxz
js
loopne
rcll
or
jmp
lock
mov
push
fnstenv
mov
sar
push
xchg
daa
sub
mov
pop
cmp
dec
mov
nop
pop
xor
hlt
pop
in
jne
inc
mov
int3
push
ret
mov
lods
je
inc
imul
sahf
ret
jnp
dec
pop
xor
ljmp
pop
in
outsb
loopne
rcrl
xchg
sbb
jns
mov
add
and
xchg
popa
sbb
rorb
push
add
loopne
movsl
push
imul
ror
in
jb
adc
repnz
xchg
mov
movsl
in
dec
push
test
xor
sbb
and
call
jmp
pop
pop
dec
test
std
jne
aas
lods
je
loopne
mov
jne
call
mov
adc
push
push
push
xchg
ret
stos
decl
mov
cmp
pushf
xor
mov
int3
xchg
fists
mov
out
pop
and
push
jbe
cwtl
adc
mov
jo
sub
xchg
test
dec
push
jbe
add
mov
aas
sbb
je
pushf
outsl
cmp
xor
mov
imul
lret
test
test
jle
int
hlt
xchg
cmpsl
xchg
sub
xlat
jmp
xor
mov
and
push
cmp
push
pop
dec
and
fs
and
inc
cmpsl
fisttps
repz
jne
iret
pop
or
xor
cmpl
pop
jp
mov
inc
stos
mov
outsb
lock
js
sbb
mov
push
pop
jmp
jne
divb
or
xchg
mov
lret
or
loop
mov
iret
mov
or
aaa
imul
xor
dec
cmp
ret
hlt
rolb
stos
adc
out
icebp
dec
xchg
xchg
inc
sub
mov
popf
rcrb
cmp
pop
dec
test
sub
jo
sbb
stos
xchg
xchg
dec
ljmp
jmp
loop
push
pop
loope
jns
mov
rorb
or
gs
xchg
mov
adc
sbb
add
shrl
xchg
pop
test
xchg
shll
movsb
jo
jge
mov
lret
int
loopne
arpl
sbb
shll
arpl
jmp
mov
sbb
inc
lahf
or
sub
subb
xchg
sub
pop
in
push
sbb
jl
sarl
fists
scas
dec
mov
lcall
test
arpl
lahf
xchg
ret
cld
add
rol
stos
gs
and
pop
push
pop
and
leave
iret
pop
cmc
lcall
dec
leave
scas
minps
icebp
mov
lock
mov
movsb
int3
cld
xchg
enter
add
jo
or
jb
pop
and
add
lahf
adc
xor
xor
dec
inc
dec
out
inc
lcall
js
outsb
dec
loopne
call
scas
xchg
stc
mov
mov
std
inc
xor
xchg
rorb
xlat
ds
popa
mov
xchg
scas
adc
fsubrp
inc
jecxz
dec
scas
fdivl
nop
add
push
xchg
testl
out
repnz
fdivr
push
icebp
xchg
dec
dec
pop
mov
adc
sbb
cmc
sbb
adc
push
mov
sbb
pop
adc
cmc
push
adc
repnz
std
aaa
into
fisubl
dec
addl
inc
aaa
mov
insl
dec
inc
pop
xchg
sub
mov
lcall
xchg
push
mov
or
dec
push
aas
aaa
cmc
and
pop
lret
xchg
jnp
ja
decl
jle
inc
and
andl
lret
mov
out
xchg
data16
inc
loope
lds
jae
cmpsb
xor
pusha
or
sti
and
mov
jno
add
out
push
rcrb
dec
dec
jnp
adc
fwait
pop
adc
fisttpl
xorl
mov
adc
out
jno
test
arpl
shlb
mov
sbb
push
adc
popf
or
sbb
ljmp
adc
int
pop
cmp
and
outsb
dec
sub
scas
xor
dec
in
adc
lds
outsb
arpl
sub
pop
ljmp
repz
jl
mov
inc
xchg
std
in
dec
sub
inc
loope
sub
fcoml
mov
xchg
xor
mov
xchg
jae
lock
cwtl
dec
mov
or
fsubs
xor
cltd
in
enter
xor
sub
push
fnstcw
sbb
mov
pop
lods
jns
out
cmp
outsb
leave
ret
mov
int
mov
or
jp
jb
sub
pop
ds
out
add
fcmovbe
stos
pop
inc
mov
xchg
xlat
bound
inc
outsb
in
and
movntq
mov
call
test
cld
jle
jno
sub
push
movsb
adc
outsl
fistl
aam
lock
xchg
push
mov
push
mov
addl
inc
loopne
push
cmp
test
sub
es
aam
nop
test
adc
xchg
fxch
add
and
je
inc
sahf
fwait
hlt
pop
arpl
ffree
jae
mov
push
mov
frstor
add
xchg
outsl
xchg
pop
test
or
ficoms
call
sti
mov
mov
push
xchg
mov
add
loop
add
mov
mov
pop
jne
dec
xchg
shll
jmp
in
test
shl
jge
and
ds
jg
in
sub
cmpsb
out
add
pop
mov
jl
pop
sub
loop
fsts
in
in
clc
aaa
test
adc
les
push
add
xchg
rclb
lds
pop
add
loop
xor
sub
dec
roll
dec
fnclex
js
aaa
fnsetpm(287
mov
push
push
in
mov
pop
insb
mov
mov
push
daa
cs
jl
popa
mov
add
int3
jp
and
xor
pop
jge
and
repz
pop
lcall
or
add
inc
mov
adc
lock
out
push
ja
inc
icebp
pop
add
pop
sub
pop
adc
mov
ss
jno
cltd
rol
lock
inc
ss
xor
xchg
aas
das
incl
sbbb
mov
test
cmpsb
or
js
in
stos
adc
movsb
ljmp
push
mull
fbld
test
mov
mov
sub
cmp
idivl
shrb
sub
add
dec
mov
outsb
push
push
xlat
popf
test
mov
push
lods
mov
pushf
or
push
rcrl
jp
push
pop
push
aad
fisttpl
cld
lock
push
in
pop
out
fnstcw
pop
jp
push
mov
mov
push
not
xor
or
xchg
fucomp
aam
mov
mov
cmpsl
mov
aas
test
rcr
rcl
shrb
jg
iret
mov
icebp
xchg
push
inc
mov
mov
cwtl
lret
cmp
iret
cmp
add
jns
int3
out
loopne
add
add
xorl
cmpsb
stos
or
jmp
mov
sbb
inc
push
lds
inc
sbb
and
repnz
ljmp
in
stos
push
sbb
das
das
sub
rorl
adc
out
aas
fldl
lret
xor
mov
loop
vprotq
push
rorl
cmpsb
gs
pop
dec
adc
les
sbb
ret
sarb
lahf
dec
pop
push
fbld
cld
push
test
jge
std
xor
cmc
or
pusha
and
outsb
and
xor
imul
and
out
mov
push
fwait
popa
clc
push
outsb
jnp
popf
push
es
sub
mov
xchg
push
iret
pushf
dec
aas
mov
lcall
loop
inc
test
jp
imul
icebp
outsl
int3
pop
stos
mov
mov
std
sub
mov
xchg
xor
mov
dec
jle
aaa
xchg
popa
mov
cmpsb
mov
sbb
adc
loopne
hlt
inc
jl
adc
dec
xor
jmp
sbb
jns
lret
flds
pop
aad
in
inc
adc
dec
push
push
sub
push
xor
mov
aaa
inc
pop
jns
pop
mov
sub
test
sets
fldt
xorb
mov
hlt
jmp
jle
adc
fidivrl
and
in
scas
xchg
or
push
leave
mov
shrl
leave
push
push
mov
jb
ret
mov
and
dec
sbb
xchg
imul
mov
in
push
xchg
popa
imul
into
ja
jb
lahf
shrb
push
in
shl
gs
add
lret
imul
sub
test
rcr
push
inc
push
sub
loopne
movl
jne
xchg
fnstenv
jecxz
sbb
out
out
std
int3
mov
sbbl
loop
add
in
pop
out
xchg
dec
jno
xor
push
jb
mov
mov
mov
imul
ret
insb
cli
push
cmp
dec
or
add
jecxz
mov
jbe
dec
loop
and
sub
sbb
call
push
push
fistps
imul
jge
sbb
mov
adc
stc
test
xchg
mov
ret
int3
cmc
jne
xlat
pop
add
pusha
stos
das
push
xor
nop
inc
sub
lock
lahf
xor
das
jmp
lahf
mov
push
adc
or
js
pop
aas
mov
xor
cs
mov
mov
pop
rcr
hlt
jnp
pop
mov
lret
bound
mov
outsl
jecxz
or
daa
out
and
repz
cmp
mov
leave
out
imul
and
insb
lret
inc
lcall
mov
imul
test
repz
insb
xchg
stc
sbb
lds
dec
jae
sbb
cs
in
scas
jae
aad
pop
adc
fildll
shll
add
dec
fisttps
aas
inc
or
or
pop
push
test
jbe
cmp
insl
xor
adc
ret
fidivs
adcl
xor
push
push
add
dec
mov
sbb
cmp
ret
mov
cmp
push
lret
aad
jnp
les
and
stos
int
pushf
push
lahf
in
lods
mov
xlat
dec
push
mov
in
mov
cmp
std
pop
jmp
aam
mov
aas
jp
int3
xchg
int3
lea
inc
add
lret
pop
addr16
jge
adc
sti
in
xor
mov
cld
shr
js
sbb
xor
sbb
push
inc
cmp
emms
push
cmpsb
clc
in
pusha
lcall
pusha
jl
jp
rorb
mov
dec
scas
inc
xchg
or
rorl
out
push
jae
adc
inc
mov
and
xor
pop
mov
push
jmp
cli
shr
adc
stos
sarb
cld
xchg
ljmp
sub
insb
in
out
jae
pop
ja
bound
repnz
cmp
push
jl
xor
or
xchg
mov
fisubrl
inc
aam
adc
shll
je
in
ds
adc
notb
xchg
movsb
mov
push
dec
xor
cltd
loope
bound
jmp
push
loop
lahf
in
push
or
pop
dec
xorb
mov
pushf
aaa
pop
mov
mov
outsl
adc
lods
stos
or
les
xchg
jp
pop
fwait
loopne
shrl
out
loope
pop
outsl
xor
pusha
lods
aam
aas
add
inc
and
jns
rorb
inc
xor
stc
mov
cmc
imul
inc
je
lods
pop
sbbl
nop
mov
and
sub
cmpb
push
xchg
jl
ret
ja
imul
push
in
ds
jp
and
jae
mov
push
mov
pop
aad
inc
pop
cmp
adc
orl
movb
push
cmp
mov
daa
mov
xchg
aas
cld
and
movsl
ljmp
adc
out
sbb
test
sbb
test
lcall
push
sbb
sub
mov
outsl
push
test
lds
scas
jae
and
mov
outsl
mov
repnz
sbb
lret
push
pop
or
out
fsubr
sub
sbb
push
aas
add
xlat
stos
das
xchg
xor
shll
xchg
stc
insl
nop
jle
adc
xchg
adc
push
and
sub
jnp
adc
loopne
mov
popf
shll
xlat
xchg
lret
rcrl
sub
adc
enter
and
enter
int
fcoms
cmp
or
sbb
inc
push
jo
cmp
mov
sub
leave
jl
fdivp
outsl
ret
xorl
shlb
push
mov
mov
add
dec
jecxz
and
stos
stos
inc
push
or
enter
outsb
and
out
movsl
dec
out
std
sub
xchg
iret
lcall
jmp
popf
out
lret
jo
inc
ljmp
cmp
sub
cmpsl
mov
sahf
pop
gs
mov
lock
adcb
xchg
pushf
sbb
subl
xchg
cmc
sbb
mov
xor
cmp
fcmovnb
shrb
push
and
ffreep
scas
aam
orl
test
arpl
in
imul
and
xor
cmc
sub
lret
shl
and
jl
inc
mov
and
push
les
adc
inc
pop
jg
sub
mov
ret
jnp
cmpsl
inc
adcb
clc
enter
pop
xchg
sahf
and
into
das
adc
pop
push
call
test
dec
aaa
pop
push
int3
mov
sbb
shl
mov
out
xor
push
mov
mov
in
sub
jae
mov
jmp
lahf
aam
jns
test
add
mov
xchg
shr
add
jg
js
lea
test
ja
xlat
xbegin
mov
ss
out
dec
movsl
je
bound
fs
imul
jp
fcompl
daa
jno
push
sbb
pushf
lods
mov
lds
mov
cmc
add
scas
test
cmpsl
xchg
loope
call
movsl
test
cmp
mov
lahf
sbb
push
fsubr
xchg
mov
popl
cmp
mov
mov
popf
adc
dec
sbb
adc
sbb
xchg
into
fcmovnu
mov
fsubl
dec
inc
adc
push
ljmp
add
mov
xchg
cmp
lods
adc
or
imul
sbb
mov
jo
push
lods
push
out
leave
lcall
stos
les
ret
js
in
jg
inc
mov
xchg
pop
push
adc
sub
je
cld
cmp
dec
es
xchg
and
push
push
xchg
jne
ljmp
push
repnz
icebp
cmpsl
test
and
xor
jp
sbb
cmp
ret
nop
dec
mov
xchg
fs
ljmp
sub
dec
loop
lret
jp
repnz
dec
orl
adc
push
pop
test
mov
outsl
loopne
xchg
dec
cwtl
lret
lret
dec
enter
mov
mov
xchg
clc
scas
jmp
test
cmpsl
add
mov
dec
pop
fwait
std
dec
dec
mov
pusha
dec
das
xchg
xchg
push
mov
mov
jge
leave
hlt
cmpl
data16
nop
into
inc
mov
xchg
mov
fcmovnb
ret
aam
divb
or
sbb
mov
neg
mov
xlat
inc
mov
inc
fcmovbe
jg
add
repnz
dec
xlat
mov
and
mov
shrl
cmpsl
or
out
loop
lock
add
imul
jns
lcall
sub
push
xorb
fmulp
enter
mov
mov
or
fs
jbe
mov
cmp
lret
in
sub
loop
arpl
push
fwait
testl
mov
imul
dec
jecxz
pop
adc
mov
mov
jo,pt
ss
cmp
or
test
mov
lods
daa
add
arpl
test
and
push
jns
movsb
jns
fsub
and
jge
sbb
inc
sub
add
adc
add
push
psrlw
shrb
xorl
jb
je
xor
js
pop
enter
out
xor
nop
popf
sbb
ds
mov
add
in
adc
sbb
popa
icebp
fildl
or
xchg
xor
xchg
adc
sbb
mov
pop
fmull
ds
xchg
cmp
jecxz
mov
push
push
popa
pop
pusha
push
sar
xor
dec
aas
in
push
stos
dec
adcb
outsb
rclb
or
add
in
popf
xor
mov
mov
inc
cmp
xchg
pop
in
mov
aam
fistpll
jp
icebp
movsl
out
repz
mov
mov
sub
mov
lods
inc
add
icebp
inc
sub
hlt
sub
pop
flds
scas
int
push
pushl
outsl
clc
pop
sbb
pop
mov
xchg
popa
mov
mov
test
into
js
sti
push
dec
les
jne
repnz
xchg
mov
fiaddl
sub
adc
mov
mov
dec
cmc
cmc
sub
push
pop
out
pop
push
push
lods
bnd
repz
push
gs
adc
popf
jl
insb
dec
pop
and
sub
dec
push
js
ljmp
inc
push
push
pop
adc
int
adcb
mov
inc
mov
pop
cmpsl
or
lock
aas
dec
scas
pop
inc
pop
call
loopne
sbb
fs
push
add
mov
xchg
mov
ds
or
or
in
sbbb
mov
in
shlb
bound
popa
xor
mov
adcl
xchg
mov
push
or
fidivs
mov
icebp
test
mov
jae
out
push
xchg
and
pop
repnz
scas
dec
test
loope
sahf
shl
xor
mov
pusha
int
arpl
xor
pop
cwtl
test
stc
outsl
dec
add
lcall
lods
in
cli
aam
dec
es
aad
lcall
jl
dec
jl
push
pop
cli
es
ret
into
addl
popl
outsb
adc
sub
lock
add
adc
orl
callw
push
push
addr16
jno
dec
mov
xchg
sarb
ljmp
ljmp
mov
jbe
push
adc
into
mov
jl
js
aad
loopne
sub
xor
sub
lahf
pop
je
or
outsl
cmpsb
cltd
mov
aaa
mov
addb
aam
je
lcall
mov
stos
jo
ret
vpminsw
sahf
jp
test
add
into
pop
sbb
clc
pop
jge
rclb
in
popf
inc
cmpsl
je
into
or
jno
mov
sub
lods
ds
ret
shll
sub
mov
int3
sahf
cmc
cmpsl
mov
cwtl
insl
sbb
mov
imul
adc
dec
stc
cmp
add
fildl
jnp
or
mov
xchg
push
mov
xlat
pop
fs
scas
sbb
cld
jp
push
inc
mov
mov
inc
scas
inc
push
out
jp
lds
ljmp
add
lea
push
shr
sub
not
in
jne
sbb
lcall
sub
pop
sarl
dec
sub
jecxz
and
push
xchg
popl
je
inc
push
es
sarl
leave
repz
stos
add
mov
dec
sub
loope
dec
xor
push
inc
mov
ja
gs
rcl
cwtl
jl
outsl
int3
sbb
jne
ljmp
sbbb
cmpsb
mov
add
lods
call
push
in
fcmovnb
movsb
pushf
gs
mov
mov
inc
push
dec
mov
xchg
mov
faddl
and
out
lea
sub
imull
aaa
pop
in
int3
xchg
adc
cmp
popa
outsb
adc
pop
add
mov
jnp
inc
loop
aad
sub
leave
fwait
sub
sbb
pop
cwtl
aas
loope
mov
ret
mov
loopne
jge
hlt
stos
mov
pop
pop
xchg
sbb
mov
repnz
and
ficoml
inc
xor
and
fdivrl
loopne
test
pushf
popf
inc
lods
and
or
add
lea
dec
sbb
adc
sub
int
xor
daa
mov
jecxz
add
jae
xchg
nop
xchg
mov
pop
inc
sub
sub
jns
xchg
les
dec
ljmp
rcll
or
addr16
xlat
pop
je
out
jns
xor
pusha
add
lods
mov
scas
sub
mov
cltd
sbb
jbe
cltd
and
into
add
repnz
pop
cs
or
std
mov
mov
cmp
test
je
inc
mov
dec
mov
pop
dec
inc
cli
mov
lahf
in
xchg
fmuls
dec
add
push
fs
mov
in
les
lret
adc
push
cmc
aas
mov
xchg
push
pop
and
loopne
nop
jne
bound
push
mov
inc
xor
mov
sub
jle
test
test
inc
fxch
jecxz
jge
out
xchg
push
mov
pop
dec
lods
ljmp
call
in
xor
leave
leave
jbe
fsubs
mov
hlt
mov
subl
xchg
adc
pop
out
mov
push
mov
rclb
jo
push
push
movsl
mov
sub
cli
jp
lds
inc
orl
xchg
jl
or
jae
sub
mov
inc
cs
pop
or
push
ljmp
mov
bound
jmp
pop
fdivs
into
cmc
repz
add
adc
cmc
call
push
add
lock
mov
sub
data16
mov
sbb
decb
fadds
jnp
popa
mov
mov
adc
sarl
rcll
dec
pop
mov
pushl
arpl
mov
call
sar
lahf
or
lods
cli
fcomps
jne
mov
lcall
cld
inc
adc
dec
jbe
pusha
mov
xchg
in
lock
loope
add
xchg
dec
or
xchg
dec
je
push
xchg
cmp
xchg
xor
sub
jp
mov
mov
subb
test
sarb
xor
inc
xchg
dec
add
adc
push
push
test
cmp
arpl
aam
push
stos
inc
jmp
andb
or
icebp
inc
inc
loope
bound
cwtl
rorl
cmp
or
mov
jle
js
cmpsl
addb
jle
or
xchg
movsb
cmp
outsb
dec
in
pop
add
push
fdivs
in
pop
mov
pop
in
mov
push
pop
pop
adc
insb
add
popa
sbbb
gs
lods
negb
scas
push
add
loop
movsb
sarb
adc
clc
mov
fs
out
aas
jns
inc
jg
cld
pop
push
mov
rclb
jp
push
mov
mov
and
fdivl
scas
sbb
dec
xchg
repz
fwait
cld
jecxz
jge
sub
into
int3
sbbl
xor
mov
in
jnp
push
xor
es
mov
insb
cltd
jnp
mov
push
jge
das
or
mov
add
pop
mov
test
scas
int3
ss
jns
fidivrl
cwtl
jae
adc
loop
fists
aas
and
sarb
das
in
in
int
pop
add
insb
dec
push
push
dec
fcomp
jo
sbb
mov
ret
popa
mov
cmp
xor
cld
dec
or
cltd
out
iret
cmpsl
int3
adc
ffree
sbb
mov
fdivrs
ljmp
test
loope
pop
jmp
out
sub
rcrb
fdivl
dec
rorb
pop
mov
dec
push
cmp
inc
lret
fwait
bound
mov
fildl
icebp
dec
mov
cmp
xor
or
jge
loope
push
inc
or
adc
pop
loopne
addr16
addl
lret
jmp
mov
jb
mov
out
je
in
cmp
add
lea
sbb
addr16
das
xbegin
pusha
pop
jno
or
adc
insl
mov
pop
sbb
addb
mov
cld
add
in
repz
inc
rcrb
xchg
push
push
pop
pop
mov
mov
push
mov
scas
loope
dec
inc
jno
sbb
rolb
push
imul
jae
out
lea
xchg
or
sbb
in
fistpll
mov
cmp
popa
lods
lds
les
std
sub
enter
push
dec
cmp
andb
dec
inc
cmpsb
jg
adc
cli
add
lods
xor
mov
cmpsb
int3
inc
cvtps2pd
mov
int3
or
cwtl
jp
or
push
sub
sub
pop
push
out
mov
sub
pop
xor
fcoms
pandn
ja
test
push
dec
aad
pop
leave
xor
hlt
sbb
sahf
and
inc
repz
and
xor
jmp
and
mov
inc
fisubl
inc
or
push
add
sub
xchg
xorl
test
inc
mov
divl
std
outsl
sbb
adc
sbb
or
xor
xchg
jmp
add
popf
push
cmp
push
jl
aad
lret
enter
es
test
xchg
lods
shlb
adc
lods
xor
scas
insb
cmp
mov
mov
pop
xchg
pop
psrlq
inc
pushf
mov
sbb
subb
add
es
loop
mov
cwtl
sub
mov
pusha
in
xor
sub
movb
adc
mov
ss
jmp
xorb
xor
add
pop
bound
inc
inc
inc
ja
mov
call
stc
inc
and
mov
push
js
push
repnz
aas
push
cld
jae
sub
in
xchg
add
mov
push
jmp
pop
pop
outsb
push
sahf
out
push
cmp
movsb
jns
pop
or
push
lahf
jg
jbe
lret
shlb
inc
cli
arpl
jae
cmpsb
mov
int
call
xorl
pusha
xor
fildl
adc
cmp
test
stc
mov
sti
push
xor
repz
in
xchg
xor
imul
mov
outsb
sarb
mov
mov
xor
rorb
pop
ds
jle
movsb
fistps
clc
enter
push
enter
cmpsl
jecxz
je
lret
cwtl
imul
mov
fcmovne
or
cmp
scas
arpl
inc
sub
mov
mov
popf
xor
ds
push
mov
mov
push
dec
add
mov
sub
mov
push
dec
pop
in
pop
out
insl
pusha
sahf
hlt
gs
or
add
negl
int
or
pop
fucomi
push
mov
push
les
in
imul
cmp
pop
sub
out
adc
icebp
rol
cmp
mov
repz
xchg
outsl
cmp
stos
push
addr16
xchg
sub
pop
add
sti
lea
cmp
insl
adc
cs
xor
or
std
nop
dec
es
cmpsb
out
push
pop
xchg
into
fldenv
fldenv
push
cmp
scas
xchg
mov
jns
add
lea
push
sub
cmp
push
shll
pop
scas
xchg
loop
cmp
push
cmp
add
inc
fs
gs
dec
jmp
flds
xorb
push
dec
rcrl
pop
es
clc
dec
in
sub
sbb
and
jo
pop
lock
or
and
xchg
jae
loope
std
scas
ret
lds
fwait
cmp
push
sbb
icebp
movsb
shlb
sar
pop
repnz
sbb
push
xor
fistps
aas
add
push
adc
sub
loop
mov
mov
mov
jno
lds
outsb
jns
cld
loope
hlt
pop
push
inc
out
cmp
xchg
pop
sti
shrb
aam
pop
add
pop
repz
je
mov
int
aam
je
adc
xor
ljmp
sahf
jle
cmp
iret
mov
fisubs
cli
jae
pop
scas
andl
int
stos
ljmp
shl
jmp
popa
pusha
bound
lock
dec
and
pop
xor
xchg
mov
je
clc
dec
stos
cmp
out
xor
in
dec
push
adc
rol
into
push
imul
popa
xchg
xor
stos
inc
fnstenv
das
movsl
loopne
dec
shrb
insl
push
and
enter
sahf
jp
push
fsubs
dec
jbe
xor
mov
ret
adc
call
jg
adc
jmp
cmc
jno
push
lea
sahf
aaa
pushf
add
lods
in
loope
cli
lret
jmp
jbe
cmp
aad
std
int3
cmc
andl
mov
pop
jno
sub
imul
mov
adc
dec
mov
popf
adc
mov
sbb
or
mov
sbb
out
into
sbb
sub
icebp
dec
jg
push
xchg
mov
aad
adc
push
fwait
push
out
imul
sahf
lds
lcall
mulb
in
mov
xlat
sti
dec
inc
arpl
adc
and
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
orb
jnp
or
jb
.byte
.byte
.byte
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
adc
mov
out
inc
inc
stos
cmp
pop
add
out
pop
bnd
out
movsl
and
lahf
mov
jmp
daa
outsb
mov
or
movsl
and
lahf
mov
add
jmp
jmp
call
stos
into
add
pop
jl
add
icebp
mov
lea
in
movsl
int3
lds
adc
into
mov
mov
inc
sbb
push
mov
mov
je
andb
adc
les
ds
pushf
fs
movzwl
imul
leave
repnz
inc
js
jl
pusha
dec
es
inc
mov
mov
js
icebp
fisubrl
dec
ljmp
testb
sbb
lcall
cmp
movsb
adc
ja
shll
xor
or
nop
pusha
jnp
push
jg
xchg
sbb
inc
std
cmp
frstor
jmp
jg
mov
out
and
xchg
inc
mov
adcl
jl
insl
inc
jnp
sbb
xor
push
insl
mov
mov
popf
out
sub
scas
aas
mov
dec
lock
fiaddl
mov
adc
insb
das
in
jecxz
push
push
leave
and
jge
shlb
sbb
xchg
jno
aas
incb
push
pop
sarb
mov
fisttpl
and
mov
jmp
fsubrs
jecxz
push
dec
push
das
pop
ljmp
add
add
jl
ret
adc
lock
jae
pushf
ljmp
xchg
gs
mov
mov
xor
pop
adc
lret
je
aad
ja
fisubrs
repz
fdivrl
cmp
pop
xchg
pop
mov
movsl
inc
shrb
jne
mov
ror
xchg
mov
gs
data16
scas
or
sub
jg
pop
adc
push
jne
dec
jae
pop
scas
stos
push
mul
mov
sbb
testb
add
inc
je
adc
sbb
add
enter
pop
cli
xchg
mov
and
insb
sub
sub
in
mov
movsl
sub
xor
adc
jb
adc
pop
mov
jge
adc
mov
mov
test
mov
lock
sbb
sbb
fwait
or
ss
xchg
call
sbb
mov
cltd
mov
daa
loop
out
test
movb
mov
lret
scas
jbe
and
icebp
and
insb
xchg
xor
int3
pop
push
clc
aas
ret
and
out
cli
xchg
jo
and
lret
sti
arpl
adc
dec
add
jnp
rcrl
imul
mov
sarl
sahf
pop
aam
fiaddl
mov
lahf
wrmsr
mov
shl
jecxz
sub
jmp
int
pop
cmp
pop
aad
push
cmc
mov
nop
test
shll
push
dec
pop
ljmp
jo
jo
sbb
aad
lock
or
fucomi
loope
jp
ljmp
sarb
mov
cs
pusha
aam
int
dec
test
sbb
jae
out
imul
sub
xchg
fs
inc
imul
roll
dec
dec
mov
in
xchg
loop
rcll
pushf
clc
mov
fadd
sub
inc
out
cmp
cmp
test
insl
nop
aad
mov
pop
adc
mov
mov
sub
je
fs
lret
fwait
push
lahf
lea
push
cmp
sbb
push
fisubrs
xchg
push
aas
lock
cmp
arpl
lea
pop
ljmp
pusha
rclb
loop
outsl
adc
mov
data16
adc
lods
jecxz
arpl
mov
jno
lea
xchg
arpl
xchg
jle
jno
sub
shll
sbb
pop
xchg
popf
outsb
mov
into
jge
std
jmp
xchg
mov
cltd
cmc
sub
adcl
push
out
mov
inc
pop
pop
cmpb
or
sub
xchg
mov
mov
aas
mov
xor
movsl
mov
pop
add
mov
cmc
stos
push
mov
fbstp
inc
ja
cmpsl
add
sti
shrb
inc
dec
int
xchg
xor
daa
outsl
ds
pop
addr16
sbb
nop
sub
and
in
cld
mov
push
aam
cmpsb
stos
adc
ret
jp
ja
enter
and
jo
cwtl
into
sbb
jne
cmc
cmp
xor
cmp
add
sti
push
in
out
adc
cli
jle
adc
aas
cmp
lret
mov
lcall
sub
inc
lret
mov
shrl
mov
icebp
imul
outsb
inc
les
jo
sbb
push
adc
cltd
xchg
or
mov
push
lds
addl
mov
sub
enter
rcll
fdivr
and
mov
adc
mov
incb
pop
mov
dec
rolb
std
imul
fadds
cli
or
lods
adc
xchg
add
fwait
dec
fwait
es
mov
pop
cwtl
test
lea
cmp
jl
add
xchg
je
leave
add
dec
loopne
outsb
jae
push
or
test
push
insb
mov
negb
jge
push
inc
rclb
arpl
leave
sarl
xchg
sub
xchg
jg
fcmovnb
test
push
mov
stc
addr16
sbb
adc
push
arpl
notl
shl
mov
popf
sbb
adc
and
sarb
mov
pushf
movsb
push
pushf
pop
sar
movd
or
mov
mov
dec
adc
fsubrl
cmc
pusha
add
fidivrl
mov
ds
mov
lods
lods
pop
mov
sti
out
out
pop
in
int
push
dec
inc
pop
push
repz
out
inc
scas
sti
cmp
rorl
push
std
adc
hlt
mov
stos
jl
adc
mov
bound
or
fidivl
push
cmpsl
sub
xchg
mov
xchg
scas
out
shrb
inc
fisubs
in
loop
add
dec
add
mov
push
inc
mov
dec
and
mov
adc
lret
outsl
xor
cmc
jmp
fbstp
mov
jl
push
jae
loope
mov
mov
das
test
rcr
mov
lret
cmpsl
adc
stos
inc
xchg
aam
push
sbb
out
sub
out
repnz
popf
pop
jbe
cs
pop
xchg
fs
cwtl
subl
repnz
or
jge
mov
pop
shll
pop
hlt
test
loopew
inc
sti
scas
pop
aas
ja
test
push
loope
jbe
xor
pop
lock
out
inc
fwait
ljmp
aas
in
daa
stc
test
or
nop
aaa
aas
xor
sti
mov
push
xchg
sub
cmp
sub
out
mov
imul
test
hlt
aaa
mov
into
lret
pop
sar
gs
shrb
mov
mov
lock
and
cmp
mov
aas
mov
cmp
movsb
shrl
imul
dec
jg
xchg
aaa
jecxz
xchg
and
lret
fwait
les
cmp
test
xor
xor
add
mov
hlt
and
rcll
sub
and
fistl
sbb
xor
mov
mov
popf
mov
inc
gs
in
mov
dec
jge
inc
in
loopne
aas
test
pop
sub
push
add
mov
and
add
fisubl
jb
push
add
imulb
aas
aad
xor
push
jo
mov
or
imul
mov
popf
mov
imul
pop
cmp
imul
dec
in
stos
popa
clc
aam
push
xor
shll
iret
lods
imul
ljmp
cmp
mov
neg
les
out
aad
in
jae
orb
outsl
lret
jbe
jg
xchg
mov
pusha
sub
and
mov
xor
icebp
mov
xchg
cmp
xor
inc
cmpsb
xchg
bound
and
jno
mov
fwait
sti
ficompl
mov
jle
scas
push
sub
popf
inc
sbb
insb
outsl
and
sar
dec
subl
mov
xchg
adc
mov
pop
fwait
pusha
stos
loope
dec
xchg
pop
xor
cmp
jno
lods
ficomps
arpl
add
sti
sub
nop
lea
pop
inc
mov
ja
fdivl
aad
daa
sub
mov
mulb
add
loope
retw
adcb
pop
mov
sbb
mov
enter
xchg
and
int3
pop
cmpl
imul
testb
test
out
mov
inc
loop
cmp
aaa
xchg
cmp
rcrl
mov
insl
and
daa
xor
ret
mov
fwait
mov
test
or
lods
and
shrl
jl
js
adc
stc
jo
cmp
fiaddl
cwtl
sbb
sbbl
mov
gs
out
push
push
rolb
xchg
push
hlt
int
js
xor
movsl
mov
sbb
je
mul
or
push
push
adc
inc
sbb
sti
inc
inc
sub
pop
in
or
mov
movsb
mov
aas
lods
dec
mov
mov
mov
inc
popf
pop
imulb
cmpsl
ret
fsts
sub
test
mov
sar
stos
mov
jo
stc
xchg
ret
adc
rol
sbb
adc
add
sbb
or
cmp
scas
dec
lcall
std
inc
cmp
popa
mov
mov
inc
mov
cmpsb
das
cmp
ljmp
inc
push
push
fisttpll
jns
in
adc
pop
insb
aam
xchg
sbb
clc
mov
adc
jns
inc
sub
js
arpl
pop
or
xor
aam
sbb
add
mov
aad
std
push
and
jp
clc
repnz
cwtl
ret
pop
push
add
jl
sub
ss
jno
jge
fcmovbe
sub
testl
xchg
add
pop
sub
adc
mov
cmp
movsl
loopne
or
out
or
inc
and
rclb
insb
push
out
js
imul
ret
mov
or
cmp
fistl
or
add
cld
pop
popa
inc
test
cmp
mov
or
xchg
mov
jl
xor
in
sahf
xchg
in
leave
jge
icebp
jecxz
rorb
fidivl
in
int
ret
int3
and
mov
jo
mov
jns
ret
mov
lock
mov
popa
lock
mov
out
mov
pop
pop
push
pop
xchg
cmp
rclb
rorl
push
cmp
sub
xchg
adc
xor
sub
aad
jo
ja
out
pop
out
pop
outsb
movd
mov
mov
fsubrs
sbbb
push
xor
roll
adc
cld
movsl
sub
add
cli
and
sub
jge
or
and
dec
add
int
hlt
mov
filds
jg
popa
lods
mov
jno
mov
fs
jmp
jnp
xor
inc
mov
movsl
loope
xor
mov
xor
dec
orl
inc
scas
test
rcr
cmp
popf
sti
xchg
test
jns
push
cwtl
pop
pop
movsb
fsubrs
orl
movsl
or
sub
sub
push
clc
xor
inc
mov
xchg
push
pushf
xor
xchg
dec
and
outsl
jle
ss
adc
callw
pop
push
or
repz
mov
repz
push
cmp
into
repnz
shr
dec
test
jl
cs
mov
jno
enter
into
mov
outsb
lds
inc
adc
jb
ss
das
cmp
adcl
mov
xchg
stos
pop
stos
dec
mov
dec
cmp
mov
add
dec
add
mov
fimull
into
pushf
sbb
iret
insb
push
xchg
sbb
fs
int
lcall
in
sub
xor
cmpsb
adc
ss
fmull
sbb
nop
inc
aad
aad
jno
sub
xchg
aad
lds
stc
adcb
push
dec
fcmovnu
test
pop
scas
or
mov
fnsave
insl
adc
mov
ffree
add
pop
xor
hlt
jae
jmp
scas
xor
scas
sbb
mov
xor
cmp
fisttpl
imul
or
xchg
dec
jge
nop
jl
adc
dec
sub
dec
pop
push
ret
sti
fildl
xchg
int
pop
mov
and
repnz
sub
xchg
sub
lods
fcomi
push
adcb
or
or
lcall
jecxz
mov
inc
dec
shr
in
push
mov
mov
dec
aad
pop
sbb
mov
out
fwait
inc
inc
and
stc
jp
cwtl
mov
fdivl
movl
mov
icebp
pop
test
push
das
xchg
sti
mov
mov
inc
pusha
in
sbb
pop
scas
out
sub
mov
ret
push
sub
xor
sub
enter
add
xor
in
stos
jg
mull
pushf
xchg
push
mov
ret
ja
loope
mov
and
call
push
or
dec
and
ss
cmp
jecxz
pop
inc
rcrl
loop
cmp
mov
mov
xchg
sbb
cli
cmp
mov
sub
mov
sbb
loop
aaa
or
aam
xor
add
jge
fbld
pop
cmp
ret
lret
mov
mov
dec
cmp
pop
dec
lcall
mov
in
push
sti
repnz
xchg
aas
push
lcall
push
jne
mov
jg
shlb
fsubs
sub
cmc
push
xchg
hlt
sub
fnstsw
and
xor
mov
out
sbb
xlat
xor
jne
jg
jno
mov
lds
daa
clts
fiaddl
scas
push
mov
mov
jge
mov
xchg
add
lods
jp
and
lret
sbbb
xchg
dec
and
and
or
cmp
lds
lret
lock
dec
pop
das
js
jp
cltd
mov
dec
mov
and
jp
mov
lds
and
lahf
lods
push
lret
ret
popf
sbb
or
xor
out
push
sub
outsb
aas
clc
mulb
mov
inc
not
pop
out
pop
pop
add
lret
fdivrl
inc
jnp
mov
inc
add
cmp
jbe
mov
cmp
repz
stos
mov
and
pop
enter
into
adc
daa
int3
inc
loopne
cli
test
out
and
std
shr
test
or
jns
or
enter
xchg
mov
out
outsl
xchg
sarb
jo
cmp
dec
dec
pop
lods
jle
enter
xlat
xchg
hlt
dec
or
push
lock
inc
mov
or
mov
adc
bound
add
lds
sbb
out
inc
ja
sub
pop
push
outsb
push
test
lahf
sub
sbb
test
jmp
sti
gs
int
jg
sbb
je
mov
xchg
lds
jno
jns
dec
aas
mov
hlt
aad
or
jnp
lods
clc
cld
or
imulb
fisubrl
push
push
psllq
mov
adc
mov
or
pop
fsts
cs
cmpb
jo
daa
sbb
xchg
jmp
jp
mov
add
jmp
lret
fisttpl
addb
gs
xor
les
xorb
cmp
das
and
and
out
mov
mov
jb
pop
out
push
pop
ret
ss
roll
sti
xor
push
ja
and
xchg
loopne
push
das
push
lods
or
hlt
xchg
jae
bound
lcall
dec
xchg
sbb
mov
and
sbb
mov
mov
shll
mov
mov
decl
insb
lret
or
inc
mov
add
imul
mov
sub
ss
stos
insl
fsubp
push
push
stos
xchg
xchg
mov
lret
cld
scas
sbb
loopne
mov
and
mov
push
test
jno
cmpsb
add
mov
xor
mov
aas
lods
mov
mov
push
sbbb
out
push
push
jbe
gs
push
xlat
shl
xchg
insb
gs
int3
or
shrl
outsb
adc
movsl
jae
in
add
enter
addr16
push
fidivs
push
cmpsl
pop
add
sub
icebp
into
fcmovnu
mov
gs
popa
std
lods
xchg
mov
jle
or
inc
in
sbb
pusha
aam
hlt
mov
ds
mov
push
pop
mov
arpl
call
xor
jg
add
or
jb
jmp
mov
subb
and
pop
fimuls
movsl
xor
shl
mov
dec
add
dec
into
mov
xchg
cli
xor
sbb
movsb
mov
ss
add
sti
xchg
mov
movq
sbb
cmc
and
sbb
pushf
loope
lds
negl
ljmp
pop
jl
fwait
aam
mov
pop
loope
cmp
sti
cmc
push
lea
mov
mov
sub
in
push
in
jle
lcall
sbb
pop
hlt
mov
add
stos
sub
adc
sbb
sub
notb
mov
or
loop
cmp
mov
mov
repz
jl
loopne
adcl
mov
repz
mov
adc
xor
or
and
dec
adc
and
jb
add
push
and
imul
icebp
icebp
mov
aam
mov
push
push
nop
jo
iret
mov
push
les
das
data16
cmp
inc
ljmp
or
xor
xor
ret
loope
fsubr
out
cli
jae
ljmp
xchg
push
mov
sub
lock
push
es
fld
dec
int
div
sbb
mov
cmp
cmp
js
imul
mov
inc
adc
in
and
nop
aad
push
dec
sub
icebp
outsb
ficompl
inc
sbb
cmp
cmpsb
and
lahf
les
or
and
or
addl
ret
and
mov
rcrb
ret
lods
xlat
mov
mov
popa
inc
es
add
hlt
clc
jo
rolb
mov
xor
mov
orl
cs
cli
test
and
outsb
xorl
aaa
pop
cmpb
xchg
rolb
ja
mov
shl
cmp
jge
mov
mov
loope
lret
pop
popa
cmpsl
lods
test
add
and
xor
mov
xor
jp
shll
sbb
je
xchg
mov
pop
fildl
js
xchg
mov
imul
cmp
andl
in
loopne
pop
in
xor
cmp
or
int3
sub
and
mov
mov
jl
cltd
sub
push
lcall
arpl
mov
inc
pop
push
mov
pop
lcall
xchg
sbbb
add
in
inc
fs
aad
pop
push
xor
sub
jo
mov
out
mov
jbe
or
sahf
repz
out
js
in
movsl
inc
and
sub
outsl
insb
pop
xchg
data16
orb
daa
enter
fbld
std
push
into
or
push
push
and
fsubrl
dec
in
pop
mov
jle
inc
cmp
mov
cmp
push
mov
push
mov
add
sub
mov
push
add
push
sti
out
jge
mov
mov
push
ss
jle
pop
out
inc
sbb
stos
pop
je
in
cmp
fisubs
pop
in
popf
pop
add
pop
inc
sahf
pop
es
fs
outsb
roll
bnd
loop
pop
test
xchg
sbb
ret
fldt
mov
or
shl
js
pop
jne
dec
xlat
jnp
sti
xor
sbb
loopne
data16
sub
es
call
shr
push
out
fimuls
outsb
lock
ljmp
cli
ret
cmp
cmp
mov
dec
out
or
push
mov
out
popf
xchg
stos
sarl
fisubrs
nop
add
xchg
fcoml
pop
ficoms
push
push
push
je
xor
pusha
outsl
inc
ljmp
pop
pushf
fisttpll
dec
xor
imul
lea
jge
jp
pop
sub
repnz
sbbl
jg
xchg
int
pop
push
rcl
clc
lods
fpatan
jo
pop
test
test
das
cmp
fidivrl
fsubrl
bound
adc
enter
inc
adc
add
jne
add
out
mov
jns
and
lds
sub
subl
push
daa
pop
add
lcall
push
mov
xchg
and
xchg
lods
lret
fsubs
fisubrl
xor
push
push
testb
or
mov
int3
outsl
inc
xchg
lea
sbb
loop
shll
sbb
mov
mov
inc
adc
icebp
insl
gs
aaa
fildl
dec
ret
les
mov
mov
push
outsb
xor
sbb
popa
fs
cmp
leave
rcl
inc
mov
fiadds
fcoms
mov
pop
sbb
jecxz
jno
push
mov
insl
imul
xor
adc
stc
in
mov
orl
pop
xor
xchg
out
push
or
and
movb
jge
movsb
xchg
push
add
xor
inc
pop
add
les
test
fdivrs
mov
and
pop
cwtl
aad
mov
loop
out
xchg
call
js
cli
test
addl
and
mov
sbb
dec
mov
dec
mov
inc
ret
repz
outsb
mov
cmp
cld
fisubrl
jnp
fsub
mov
test
adc
lcall
xor
lods
add
stos
xor
imul
dec
mov
or
pop
std
aaa
adc
xchg
mov
in
xor
xor
dec
dec
xchg
add
mov
dec
mov
outsb
mov
lahf
push
out
clc
xchg
insl
mov
jne
push
lcall
aam
ret
cld
push
psubw
jmp
push
ja
dec
sbb
test
shr
ret
push
cmc
or
xor
xchg
loopne
sahf
or
or
rorb
xchg
sub
push
or
mov
imulb
push
loop
mov
xchg
inc
mov
imul
out
adcb
fcmovu
sub
gs
cmpb
repz
or
outsb
test
mov
cmpsb
xchg
sbb
jg
inc
and
jmp
jb
push
add
jmp
in
aas
jns
and
dec
and
hlt
popf
leave
insb
cmp
das
push
sbb
sub
outsl
mov
imul
lds
jecxz
jg
adc
add
lcall
cmp
call
mov
inc
xchg
stc
mov
adc
fucomip
xor
cmc
add
cmpsb
scas
lcall
inc
cmp
push
sahf
test
sub
js
std
sahf
sub
shr
insl
movsl
imulb
mov
filds
call
int
gs
enter
add
mov
add
cwtl
pop
inc
addl
xor
mov
or
cwtl
fistps
in
xchg
shrl
mov
mov
je
dec
aas
lahf
test
lahf
sahf
cmp
mov
icebp
xchg
ret
loopne
mov
fstpt
or
push
imul
push
daa
leave
mov
push
js
jno
ds
inc
mov
rorl
enter
pushw
sub
fwait
sub
jb
and
xor
mov
fxam
ret
pop
stos
mov
sbb
xchg
imul
and
cmc
stos
push
xor
repz
jecxz
dec
fildll
and
mov
sub
lahf
inc
lea
or
push
push
cs
lret
subl
lds
or
mov
notl
jbe
xchg
ljmp
fwait
mov
mov
cmp
sarb
dec
daa
int3
push
int
je
in
pop
lods
iret
mov
xchg
and
jo
movsl
dec
sub
push
test
sbb
cmp
jmp
cmp
pop
aas
cmpsb
and
and
lds
out
rcrl
aam
js
add
imul
push
pop
out
cmp
rclb
sbb
dec
inc
subl
adc
mov
add
loopne
jp
pushf
inc
repz
fadd
loop
std
out
pushf
inc
ficoml
ret
jno
or
aas
mov
sbb
scas
mov
push
xchg
shr
jmp
mov
call
inc
lds
nop
insl
leave
mov
dec
hlt
xchg
ljmp
loopne
cmc
jbe
hlt
in
dec
fmull
stc
fbstp
sub
pop
or
jnp
fdiv
inc
lock
add
loope
sbb
or
pop
movsb
inc
xor
inc
xchg
pop
aad
lret
pop
fs
rclb
and
inc
pop
add
ja
cmp
sub
dec
outsb
popf
mov
stos
pop
add
jo
les
mov
popa
jb
or
popa
in
xor
mov
das
jns
xlat
mov
dec
pushf
pusha
cmpl
inc
mov
inc
addr16
fs
imul
in
xlat
or
fiaddl
and
jne
cmc
hlt
in
inc
cmpsl
mov
negl
mov
loop
mov
test
scas
jecxz
adc
insb
xor
lea
test
fdivrp
push
scas
adc
xor
dec
mov
pop
or
movsb
decl
fdivp
mov
jno
mov
out
pop
dec
pushf
jae
fcompl
fcoml
ds
push
xor
inc
daa
roll
fmull
dec
rcrl
lret
outsb
sub
cld
pop
add
jmp
sub
call
popl
ss
mov
push
aad
ror
divl
pop
fldcw
or
sti
sub
push
fs
ficoms
mov
push
push
mov
jl
icebp
mov
leave
pop
call
mov
jmp
xor
push
es
dec
ja
jl
cwtl
pop
idiv
loope
dec
lods
out
mov
adc
pushf
lds
xchg
cmp
andb
test
imul
adc
fst
and
and
mov
sub
out
pop
shlb
jecxz
test
sub
cs
jo
dec
lea
enter
and
cwtl
lods
mov
sub
jmp
inc
loop
sub
iret
xchg
adc
daa
push
cmpsl
aam
sti
cmp
leave
shr
push
fs
dec
adc
xchg
mov
nop
ja
pop
adc
mov
fdivl
ds
movsl
add
cmp
add
fdivr
sub
xor
scas
outsb
scas
and
aaa
sahf
inc
int3
xor
in
in
sub
jae
pop
negb
mov
in
dec
movsl
pop
andl
sub
add
mov
movsb
stos
jp
mov
icebp
mov
push
push
mov
and
jge
xor
daa
sub
and
pop
xor
xor
mov
out
and
jbe
lret
outsb
out
push
scas
test
das
dec
ss
inc
cmpsb
pop
mov
mov
test
test
sbb
movsl
addr16
xor
ss
dec
outsl
inc
sti
movsl
push
jle
push
pop
loopne
lods
xor
add
fwait
aas
push
mov
rcrb
mov
mov
xchg
lock
or
incl
adc
xor
sub
notb
gs
outsb
sbb
jg
sahf
call
bound
mov
xor
jmp
jmp
pop
fdivp
cmp
div
pop
lahf
and
addl
push
mov
jl
cmpsb
push
nop
addr16
daa
mov
or
rcrb
pop
mov
pop
lret
cs
xchg
lds
lods
push
xchg
notl
dec
adc
add
add
mov
add
inc
pop
push
mov
jb
xchg
mov
lahf
inc
sbb
cmp
nop
sbb
sbb
cmpsl
adc
ja
jmp
jge
pop
jle
js
jle
in
inc
stc
pop
stos
sbb
and
mov
xchg
dec
test
sub
addb
dec
push
dec
movsl
mov
mov
shr
testb
icebp
fcoml
or
out
push
mov
pop
jmp
sbb
notb
cltd
js
push
push
inc
mov
inc
cmpsl
mov
cwtl
and
scas
leave
pop
and
mov
ds
imul
out
push
jnp
popf
jb
and
push
jnp
inc
hlt
pop
push
icebp
js
inc
test
movb
test
push
sbbb
mov
xchg
add
and
sbb
dec
imul
dec
mov
fwait
test
jmp
cmp
daa
inc
cwtl
cld
lret
faddp
or
mov
test
jo
xlat
cwtl
shll
fidivrl
xor
sub
adc
mov
cltd
sub
mov
push
push
add
cmpsl
hlt
in
sub
out
push
jmp
add
mov
push
out
idiv
in
shl
sub
popa
push
mov
adc
and
je
ss
inc
int
xchg
jmp
cmpsb
call
cld
adc
push
sbb
xor
jmp
dec
adc
pop
lock
out
dec
testb
sub
push
dec
jns
clc
dec
shll
movsb
jb
push
shrb
lcall
mov
adc
lds
test
ds
gs
xchg
sbb
ret
call
and
mov
push
aas
inc
jmp
test
leave
adc
sub
cs
cltd
jne
shlb
adc
dec
dec
sarl
sbb
xchg
xchg
jge
xchg
xchg
sub
test
lock
jo
ret
jmp
hlt
sub
mov
mov
ds
mov
hlt
and
push
xor
bound
popf
int3
xchg
sti
lret
jns
pop
je
sbb
pop
add
jne
xchg
leave
ljmp
aad
cmp
xchg
adc
fstl
mov
cltd
pushl
js
mov
sbb
mov
dec
test
xor
mov
jle
into
cmc
int3
fidivrs
fcoml
jmp
ja
xorb
lcall
lret
add
pop
cmp
fidivrl
mov
int
out
pop
stos
add
mov
sarb
adc
xor
jle
push
rorb
aas
out
mov
add
and
inc
xchg
inc
sbb
fwait
xor
pop
pushf
fsubrp
stos
pop
sbb
decb
nop
push
and
sti
xor
adc
mov
imul
pop
jno
es
aas
jecxz
pop
jb
lods
and
push
sbbl
push
mov
dec
nop
push
jbe
or
push
or
jecxz
add
dec
movsb
and
pushf
andl
dec
fs
in
shrb
xlat
sbb
or
sub
out
cmc
das
sbb
in
jo
dec
lods
aad
out
push
cmp
data16
scas
enter
jle
ret
and
and
into
ds
jnp
sarl
fidivrl
jl
out
aaa
and
repz
daa
inc
jae
jo
push
fbld
adc
popa
lods
and
jp
push
inc
adc
sub
pop
mov
xor
or
and
sub
ja
mov
sahf
test
cmpsb
jo
cmp
cmp
inc
or
mov
jno
jno
mov
mov
adc
mov
pop
push
movsb
xchg
clc
sti
loopne
add
cmp
or
lods
stos
dec
mov
outsb
and
sbb
nop
call
pop
xchg
push
fcmovu
hlt
movsl
pop
ret
xchg
xor
and
scas
jbe
cli
mov
scas
mov
hlt
jg
dec
iret
out
repnz
mov
mov
mov
dec
pop
aaa
cs
pop
test
popa
xor
mov
rorl
test
dec
add
enter
pop
sarb
orl
lahf
popl
add
scas
jmp
leave
fiaddl
and
in
ss
xor
and
ficompl
mov
jmp
out
mov
stos
inc
dec
lods
jno
lcall
arpl
push
or
shll
lea
decb
mov
sub
leave
cmp
xor
jbe
jmp
shll
pop
stos
mov
pop
lcall
sbb
ret
or
xor
mov
enter
cs
int
cmc
and
mov
xchg
mov
mov
pop
dec
push
sahf
ljmp
dec
mov
mov
add
fs
pop
pushf
cld
adc
lahf
fsub
int
push
pop
repnz
ret
rcll
sbb
fs
test
mov
push
xor
in
std
mov
mull
push
pop
movsl
outsl
ljmp
mov
xor
subb
adc
rol
mov
xchg
out
sbb
ja
pop
jmp
or
fwait
mov
js
jmp
andb
push
jnp
xor
mov
jbe
outsb
jb
sbb
dec
mov
push
cld
pushf
lock
pushf
push
subb
inc
sahf
repz
test
pop
jle
inc
aam
push
jns
sbb
adc
push
xor
jbe
in
shrl
push
adc
mov
xor
push
cs
or
xchg
push
shrb
imul
lret
jbe
repz
sahf
popa
pop
cmp
or
fdivrl
outsb
jb
ffree
into
xor
std
pop
cmpsl
jmp
cmp
sub
jmp
sbb
mov
lea
mov
fldcw
mov
das
mov
xor
cli
push
mov
pop
sbb
xchg
rcrb
jne
psrlw
and
xchg
addb
loope
in
mov
shlb
jmp
sbb
in
mov
arpl
push
sub
push
addr16
es
jb
inc
sub
lds
addb
push
jge
lods
and
add
push
js
outsb
cld
gs
out
or
addr16
icebp
cli
lds
adc
push
jae
mull
adc
loope
mov
sti
or
cmp
mov
cltd
scas
jo
das
mov
inc
outsb
xor
mov
arpl
js
jge
dec
add
fidivrs
push
push
int
insb
lock
dec
in
fs
fcmovnu
and
lcall
jne
adc
add
sbb
pop
jg
mov
lds
stos
daa
mov
aad
cltd
and
push
or
inc
xchg
jg
das
mov
and
addr16
pop
xchg
and
inc
cmp
xchg
addr16
pop
dec
push
mov
fstl
mov
cmpb
sub
push
ja
and
adc
xor
out
xor
insl
lahf
jp
mov
ljmp
stos
pop
jmp
pushf
mov
scas
sbb
jg
pop
push
xchg
aam
cltd
inc
push
aas
jle
mov
xchg
inc
es
es
jge
mov
loop,pn
mov
mov
add
fxam
and
bound
mov
inc
icebp
stos
into
fcoms
imul
imul
repz
mov
adc
mov
daa
push
ret
sbb
insl
mov
inc
iretw
push
movmskps
out
dec
xchg
pop
cmc
push
or
daa
adc
enter
adc
shlb
lcall
push
jnp
lds
out
in
sub
shlb
popa
pop
push
int3
push
sub
insb
mov
jne
ds
aad
xchg
adc
xchg
enter
fs
jne
je
sub
jecxz
call
fwait
xchg
mov
and
lret
sbb
scas
fsub
outsb
mov
fldl
mov
jmp
pushf
dec
int3
pop
lock
pop
rcrl
ljmp
cs
mov
jp
notb
call
dec
sbb
filds
lea
jns
cli
xchg
pop
jmp
jg
fdivr
jns
pusha
or
imul
inc
or
mov
dec
iret
das
fidivrs
jne
ss
add
imul
sbb
stos
fwait
push
cli
insb
dec
sbbb
push
dec
addb
cmc
outsb
cs
ror
pop
inc
mov
leave
movsl
jae
insb
push
fdivrp
lods
xor
movsb
pop
and
fs
mov
scas
xchg
daa
idivl
mov
sbb
jo
xchg
addb
das
mov
xor
inc
ret
xorb
hlt
xchg
sub
add
adc
adc
popf
push
cmpsb
push
mov
jnp
jo
push
cmpl
insl
rol
dec
adc
push
push
adc
nop
xchg
push
arpl
sub
test
pop
iret
mov
je
mov
pop
in
inc
jecxz,pt
mov
lock
mov
in
sahf
adc
inc
mov
in
lods
mov
rcrb
push
push
out
movsl
sbb
ret
cmp
xor
incb
loopne
sub
loop
adc
filds
mov
aas
mov
add
mov
out
sahf
loope
jbe
into
hlt
sub
mov
jp
fidivrs
cwtl
add
pop
cmp
jecxz
push
out
sub
lods
mov
cs
jae
bound
adcb
adc
stc
sub
mov
pop
outsl
xchg
clc
push
pop
vpaddw
outsl
rcrl
sub
sarl
sub
mov
pusha
pop
xchg
pop
mov
or
rcll
fs
sbb
mov
dec
sbb
and
leave
sbb
dec
mov
jae
aas
push
js
pusha
cmp
lods
and
push
mov
fsubrs
xor
mov
aas
push
loopne
fs
repz
jo
xchg
inc
jle
jecxz
sarb
push
xchg
nop
outsb
or
shlb
sbb
jbe
mov
ret
loopne
mov
mov
push
lods
outsl
rorb
pop
popa
add
add
lret
mov
mov
cmpsb
jp
dec
adc
fwait
movsb
decb
insl
push
mov
in
or
sbb
pop
in
jle
das
and
lds
fcomps
mov
bound
push
inc
lods
loop
outsb
sub
out
loope
aam
and
mov
fwait
cmp
not
mov
inc
sub
ret
mov
mov
cmp
xchg
bound
xchg
cmp
fcompl
or
pusha
insb
push
cmp
vmulpd
stos
roll
pop
mov
out
cmp
jp
jge
add
int3
in
push
fildll
push
xchg
test
mov
mov
test
loopne
push
xchg
push
pop
dec
adc
xchg
inc
push
or
and
popf
aaa
aam
iret
and
mov
cmp
and
lret
xor
out
or
jmp
fmul
add
pop
sbb
mov
pop
stos
or
arpl
push
push
and
xchg
xchg
pop
mov
test
lret
xchg
and
adc
scas
movsb
push
rclb
es
mov
in
xchg
repnz
dec
out
ds
mov
inc
mov
inc
dec
mov
push
inc
jns
sub
xchg
roll
pop
shll
sahf
and
shll
mov
push
gs
in
loop
mov
pushf
jge
adc
adc
popa
int3
into
push
cmp
pop
jb
in
push
sbb
mov
inc
mov
shrl
js
mov
dec
xchg
adc
add
icebp
jge
ds
and
mov
mov
inc
inc
movsl
xchg
mov
sub
mov
fldenv
lods
jb
imul
or
lds
dec
movlps
adc
ljmp
add
pop
lds
hlt
ja
rcr
and
and
mov
hlt
pop
sar
mov
daa
jae
clc
sbb
rep
jns
outsl
pop
test
cmp
and
xor
inc
fs
push
xor
pmuludq
fistpl
addb
ljmp
call
fisubs
jge
dec
arpl
xchg
push
xchg
push
test
cmp
cmc
in
out
add
cmp
lahf
xchg
mov
mov
pop
rcll
mov
rcrl
cltd
out
xchg
fwait
rcrl
jb
popa
push
pushf
fwait
adc
fiaddl
loop
adc
push
leave
sysexit
jne
icebp
outsl
dec
mov
add
lea
je
orb
dec
fucomi
jmp
jnp
inc
pop
jp
lds
cmp
and
mov
push
das
hlt
xchg
adcb
in
xor
pop
cmp
pop
jns
cmpsb
lea
dec
jb
rol
arpl
pop
data16
fcomip
mov
hlt
pop
test
mov
ja
jbe
pop
jmp
lret
fstps
mov
mov
pop
dec
push
mov
aaa
xchg
jbe
fwait
popf
add
cmp
adc
dec
push
push
in
push
jae
dec
insl
cmpsl
cwtl
push
hlt
pop
cmpsl
cmp
ljmp
addr16
adc
mov
and
jl
mov
sbb
movsb
inc
inc
daa
fs
inc
ret
mov
mov
loope
test
or
pop
inc
sub
cmp
sub
mov
es
inc
fs
xchg
sbb
fs
loope
xchg
xor
aam
out
adc
fiaddl
mov
int3
push
cmpsl
inc
js
pop
xor
lahf
push
jmp
jno
push
add
dec
es
sub
sbb
mov
std
shrl
or
xor
rolb
mov
sar
loop
mov
out
fldt
jg
adc
sti
or
imul
push
jbe
xchg
xchg
mov
inc
push
jb
inc
mov
repnz
movsb
push
xlat
push
sbb
push
rcll
add
mov
pop
sub
clc
inc
and
xchg
dec
xchg
mov
xlat
and
in
xor
xor
xchg
mov
cli
mov
les
sbb
mov
int
add
sbb
pusha
lcall
sub
leave
ljmp
cmp
in
inc
mov
add
mov
data16
into
fwait
out
pop
outsl
fldcw
gs
add
mov
cmp
das
sbbl
push
jnp
jb
gs
xor
adc
jbe
adc
popa
lret
insb
out
popf
aam
fisttps
xchg
negb
lcall
and
dec
mov
das
out
and
or
pavgw
sub
leave
push
mov
dec
xor
ss
cmpb
imul
xor
cmp
and
xor
ret
xor
lahf
mov
pop
dec
jnp
imulb
nop
mov
xlat
stos
cld
mov
lea
sbb
jb
pop
xchg
aam
pushf
jg
aam
cmc
ljmp
jge
mov
lahf
sbb
insl
lods
push
repnz
push
inc
sub
arpl
cmp
jb
movsb
fists
movsb
pop
sub
std
cltd
mov
ret
jns
ret
sub
and
outsl
or
cmp
dec
cmp
push
ss
dec
aas
les
sbb
ss
mov
cmpsl
je
cwtl
nop
xlat
mov
rcrl
aas
jo
adc
inc
mov
xchg
shr
aam
xchg
sub
jg
aad
cmp
sbb
test
stos
xchg
push
sbb
mov
mov
cmp
jecxz
mov
or
out
mov
inc
clc
push
jge
imul
add
ficomps
testb
sub
inc
loop
repz
mov
repz
add
jge
push
pushf
mov
inc
cmp
in
mov
ret
or
out
mov
dec
push
test
adc
and
xchg
jae
mov
movsb
xchg
and
cmp
lret
lahf
push
inc
je
sti
fwait
add
inc
xor
arpl
sbb
cmp
add
mov
add
mov
inc
pop
sub
in
and
lret
sub
mov
push
mov
dec
data16
xchg
shll
and
lods
mov
adc
push
in
call
in
shll
xor
out
cld
mull
inc
cmp
out
xchg
in
loop
add
and
dec
sbb
fs
sub
lock
push
addr16
cmp
cmp
and
and
inc
fistps
sbb
loope
cmp
das
mov
jo
hlt
mov
xor
push
dec
rcr
cmp
jb
mov
es
jl
and
inc
idiv
ret
mov
ret
xlat
mov
jge
xlat
and
ljmp
divl
dec
or
jnp
xchg
sbb
mov
or
test
mov
popl
add
push
xlat
add
xor
les
xor
imul
sub
pop
aad
and
daa
cmpsb
jmp
xchg
add
movsb
rcr
jmp
stc
jge
mov
imul
pop
push
imul
cmc
pop
mov
cmc
movsl
sbb
pop
sub
jmp
fistpll
mov
mov
dec
adc
loope
fnstsw
outsl
loopne
enter
outsl
push
outsl
cmp
icebp
jle
push
mov
shrl
in
loopne
and
mov
movsl
imul
mov
stos
and
aam
jp
xor
arpl
orb
or
lods
jnp
lret
bound
pop
inc
shl
sti
mov
sub
push
pop
and
or
push
cli
sbb
call
pop
lock
adc
inc
and
out
stos
into
push
xlat
cmp
dec
xchg
leave
movsl
fildl
mov
mov
loope
stos
xchg
mov
into
in
xchg
xor
nop
jl
lods
insl
clc
and
xor
pop
decl
xor
mov
pop
xlat
rcrl
test
cmp
push
sub
loopne
pushf
jno
or
jbe
sbb
imul
shl
mov
dec
mov
and
insb
push
dec
sbb
fistps
xchg
dec
dec
sbb
sub
mov
cmpl
sub
out
push
sub
or
mov
leave
xchg
popf
into
sahf
mov
jp
movsl
sub
and
cmp
mov
sub
push
scas
lea
and
jno
shl
sbb
ficomps
repz
lret
and
xor
dec
push
enter
movsl
mov
xor
push
fsubs
sub
push
jns
dec
enter
push
je
jb
dec
xchg
jge
fists
push
call
pop
push
lock
or
ss
jns
xchg
and
insl
mov
add
scas
add
les
sahf
shrl
pop
dec
inc
mov
mov
jecxz
cmp
adc
cli
addr16
inc
repz
mov
mov
mov
bound
mov
jp
les
jnp
adc
cmc
sbb
gs
bound
pop
cmp
in
pop
movsl
int3
jecxz
cwtl
xchg
adc
addr16
sbbl
leave
pushf
sbb
cmp
mov
rolb
add
lret
gs
into
mov
lcall
pop
test
jmp
mov
outsl
test
inc
jecxz
jecxz
nop
enter
popa
inc
adcb
popf
sub
jg
pop
inc
enter
jbe
lcall
cmpsl
int3
outsl
xor
mov
adc
insl
jge
cmpl
sbb
push
ret
out
and
jne
pop
push
dec
mov
and
push
flds
xor
rcr
cmp
in
xor
cmp
movsb
push
ret
pop
mov
call
popa
push
cli
movsb
fst
dec
dec
inc
mov
xor
out
cmp
add
repz
cli
aam
mov
inc
xor
jmp
pop
repnz
sub
xchg
inc
xlat
dec
lret
mov
jno
mov
sub
xchg
in
js
js
pop
dec
push
das
scas
mov
cmc
pop
arpl
lods
mov
xor
xchg
stos
dec
xor
pop
add
lret
xchg
getsec
and
mov
jns
xchg
mov
subl
push
mov
pop
and
dec
mov
mov
in
mov
js
clc
into
lods
pop
lret
dec
inc
jbe
enter
in
out
push
repnz
xchg
rolb
clc
jb
mov
int3
cli
xchg
mov
push
subl
cmp
arpl
shl
pop
jb
in
test
cli
cmp
clc
loope
jae
sub
lods
mov
lret
inc
push
jg
cmpb
dec
add
jno
or
sbb
xchg
lahf
mov
cmp
das
mov
cwtl
and
mov
aad
or
pop
mov
sub
std
insb
les
xchg
dec
cmp
add
xchg
dec
xor
xchg
cmp
fnstcw
jp
pop
or
xchg
divb
sbb
in
movsl
and
inc
mov
mov
leave
imul
into
or
pushf
cmpsl
cmp
jp
inc
pop
or
lahf
out
cmp
pop
inc
orl
scas
and
dec
inc
daa
rolb
sbb
jnp
icebp
lods
int
adc
or
push
add
dec
pop
fidivrs
aas
adc
jae
and
jae
mov
push
xor
rcll
shll
ds
pop
push
adc
cmp
imul
jns
jmp
xchg
cmp
loopne
mov
or
dec
and
push
pop
out
es
push
cmp
outsb
sub
std
jns
fwait
add
sbb
outsb
ret
in
test
es
repnz
sbb
into
lock
push
out
in
dec
int3
jl
out
xor
leave
fldcw
cld
stos
inc
xchg
cmp
addl
ss
arpl
loope
dec
test
or
sahf
mov
sbb
int3
and
mov
jmp
add
mov
je
aaa
jle
fists
sub
popa
insb
fs
aam
enter
sbb
cmp
adc
fcmovu
cmp
mov
or
popl
outsl
jg
clc
or
dec
or
bound
mov
repnz
push
xchg
pop
fstps
loopne
jo
faddl
mov
daa
mov
jmp
xor
data16
inc
add
and
xor
subb
test
mov
popf
fmuls
and
dec
and
out
adc
sar
sub
lods
mov
mov
push
shrb
aad
das
fmul
pop
push
xchg
test
dec
sub
aad
or
fidivrl
xchg
push
fs
fdivl
std
testb
lock
or
sbb
pop
sbb
xchg
xor
fstpl
dec
mov
sub
xor
adc
rcrb
outsb
xchg
outsl
add
fmull
test
inc
jns
dec
pop
inc
fisttps
stos
dec
mov
ljmp
mov
mov
or
loope
push
mov
pop
ss
cmpsl
adc
pop
mov
repnz
aam
clc
es
enter
inc
push
dec
dec
cmc
inc
add
std
fistpl
int
or
pop
in
push
sub
jle
fs
bound
xchg
js
scas
dec
aas
pop
push
sti
popf
cmp
outsl
and
jo
lret
int
mov
ficomps
mov
lds
mov
dec
out
xchg
jmp
ret
inc
pop
mov
out
dec
mov
mov
cmp
pusha
jnp
in
leave
sbb
mov
call
xor
imul
ficoml
stos
push
lds
imull
sub
cmpsb
iret
cld
out
movsb
cwtl
fdivrs
mov
in
sbb
gs
add
jns
dec
int3
lock
mov
push
cld
repz
push
lcallw
xchg
xor
daa
insb
ss
sub
add
mov
das
mov
jp
in
cmp
data16
jnp
ret
push
mov
fildl
outsl
mov
fistps
sbb
shr
popa
mov
mov
or
es
je
nop
xor
outsl
ffree
push
roll
mov
xor
into
pushf
enter
jmp
call
sub
fsubrl
sbb
stos
add
sub
into
xchg
or
and
push
nop
ret
adc
movsb
arpl
ret
cs
add
bound
sti
cmp
leave
xor
ja
fdivrp
fcmovb
xchg
pusha
push
jae
fwait
aad
inc
aam
sbb
out
std
out
outsb
or
mov
and
sub
pop
cmpsb
adc
das
lock
dec
js
outsb
aas
pushf
inc
aaa
mov
dec
jg
lds
jno
inc
incb
adcl
subl
cmc
popf
fcom
jae
hlt
addr16
add
sbb
jl
ss
mov
adc
mov
adc
adc
and
ljmp
pop
imul
lcall
cmpsl
test
icebp
xor
xchg
jno
add
cs
xlat
movsb
in
cmp
inc
mov
mov
je
or
mov
shll
xchg
cld
cs
cmpsb
sbb
inc
adc
mov
mov
mov
insl
sub
repz
movsl
mov
das
jle
jecxz
je
sbb
cmp
xchg
inc
or
rol
pop
mov
jo
mov
add
or
push
imul
mov
xchg
data16
ret
movsb
cmp
xor
mov
add
or
cmp
movsl
xchg
mov
push
mov
cmpsb
or
jb
enter
sub
in
add
pop
mov
push
sub
xchg
jmp
push
jbe
dec
loopne
dec
xor
cli
shll
inc
inc
bound
mov
add
ficoml
lds
inc
int
cmp
mov
mov
cmp
popa
push
inc
clc
scas
rcl
sysexit
out
mov
cmp
aas
add
adc
imul
mov
mov
adc
cmpsl
mov
mov
lcall
jb
notb
sarb
sub
xor
test
inc
mov
jno
sub
loope
fwait
es
hlt
cmp
xchg
idivb
in
rcll
sub
inc
sub
stc
xchg
bound
push
pop
add
mov
xlat
sub
jae
daa
inc
or
in
mov
mov
push
fadds
outsb
and
and
sub
xchg
cmpsl
pop
or
and
fwait
jbe
pop
xchg
mov
outsb
cmp
jmp
test
mov
inc
cltd
aas
cmpsb
jmp
loopne
cmp
push
mov
mov
sbb
in
adc
mov
fcoml
adc
ret
jle
lods
push
outsl
sbb
and
push
std
and
dec
pop
jmp
jge
sbb
mov
mov
cmp
ret
imull
scas
xor
xchg
bound
enter
dec
sbb
outsl
inc
inc
xor
jbe
push
add
xchg
fnstcw
jp
pop
js
aad
pushf
cmp
mov
aad
stos
fwait
xchg
icebp
pop
pop
in
insl
sbb
stos
arpl
lahf
mov
or
scas
in
mov
and
mov
repnz
jle
add
sarb
mov
in
lret
mov
insl
add
int3
dec
es
mov
hlt
xchg
mov
or
out
repnz
and
shrl
cmpsb
ljmp
mov
push
in
sub
loopne
in
mov
push
out
les
xchg
mov
scas
cltd
jnp
sbb
sbb
or
push
cmpsb
in
loopne
andl
movsl
insl
xchg
cmp
movsl
jl
ficoms
push
in
sub
xchg
into
sub
mov
inc
std
push
sub
mov
pushf
mov
cmp
sbb
cs
jno
aas
cmpsb
ljmp
jle
mov
add
xchg
pop
mov
cwtl
fsubl
ret
jmp
leave
imul
mov
fidivrl
cmc
lds
add
cmp
mov
mov
mov
mov
fidivl
push
ds
enter
jo
mov
adc
lods
xchg
pop
ja
out
out
jae
sub
dec
lahf
test
add
xchg
xor
in
rolb
xchg
xor
xchg
mov
mov
sub
lock
fmul
push
inc
mov
push
sub
fcmovbe
push
sbb
push
xchg
add
outsb
inc
or
testl
iret
jns
or
rcrl
insl
mov
sti
in
push
int3
loopne
pop
mov
lret
cmp
push
or
aas
xchg
and
adc
out
fbstp
or
cmp
cmp
popf
sub
inc
push
cmp
push
cltd
pop
and
and
dec
pusha
add
pop
dec
and
or
add
or
sahf
les
aas
cld
sahf
enter
nop
insl
mov
dec
sbb
mov
push
psubusb
in
scas
adc
mov
stos
or
jmp
call
pop
push
inc
push
xlat
outsb
pop
add
icebp
movsl
std
jp
test
mov
aam
adcb
and
mov
and
rcr
inc
push
inc
movsb
inc
pushf
jo
out
mov
testl
sub
push
shrl
add
ljmp
cmp
bound
arpl
xor
sub
js
or
test
flds
sub
mov
cmp
sub
sbb
dec
mov
fs
testl
sbb
dec
and
or
cmp
aas
lock
out
and
xor
shrl
and
and
xor
rol
fnstcw
fwait
cmp
xor
sbb
inc
mov
popf
jo
add
xor
push
add
movsb
push
sbb
ret
adc
xchg
addr16
cmp
popf
inc
mov
icebp
je
aas
imul
scas
dec
and
cmp
jmp
lahf
daa
mov
xor
mov
mov
stos
mov
lock
jb
xadd
ficoms
add
outsl
das
mov
fs
bound
jmp
insb
jge
mov
fistl
xchg
add
nop
inc
mov
adc
dec
call
cmp
scas
addl
cmpsl
mov
test
lahf
push
scas
les
ret
push
mov
out
sub
hlt
aas
lahf
jmp
add
add
hlt
xor
add
cltd
insb
lahf
loop
sub
pop
mov
into
leave
jo
cli
fidivrs
stc
pop
mov
in
lods
and
push
mov
pop
std
mov
mov
pop
push
push
jno
push
xchg
cmc
xchg
hlt
ljmp
mov
mov
sahf
adc
mov
mov
repnz
mov
cmp
cwtl
push
push
cmpsl
pop
lods
add
cmp
lcall
lret
movsl
addb
and
fstpt
and
aad
push
jae
lods
and
movsl
scas
xor
push
into
adc
fs
ja
jns
and
sub
mov
bnd
mov
cmpsb
inc
rorl
rolb
sub
lahf
popf
jne
shll
sbb
xlat
lds
jmp
popa
mov
push
movsb
pop
inc
xor
das
mov
subb
mov
outsl
ret
xor
xor
subb
jne
cli
sbb
xchg
add
dec
and
das
popa
sub
pop
mov
pop
add
out
test
add
push
mov
pop
and
popa
sbb
ds
leave
lret
fisttpl
stos
adc
sbb
nop
addr16
xchg
or
movsb
lods
add
lea
xchg
cli
adc
inc
and
scas
cmp
dec
sub
inc
mov
pop
adc
sbb
ja
outsl
mov
pop
test
pop
sbb
mov
or
lcall
ja
fimull
mov
xchg
mov
fdivrs
outsb
stos
pop
push
arpl
ss
mov
dec
movsbl
loope
idivl
and
adc
ret
xchg
iret
jae
jp
shlb
add
fs
or
data16
cltd
iret
xor
mov
arpl
add
push
adc
das
cmp
adc
mov
cmc
push
arpl
sub
and
jo
addl
cmc
mov
adc
stc
sbb
lret
icebp
add
add
cmp
aam
push
push
xor
pop
pop
fsubr
mov
imul
fiadds
pop
insl
dec
es
mov
das
pop
fadd
xchg
pop
lcall
jmp
cld
stos
add
scas
aad
dec
iret
outsl
mov
repz
cmp
loopne
subb
je
mov
insl
mov
cmp
insl
add
dec
movsb
xchg
push
ja
xlat
xor
fisubl
fstps
sti
mov
roll
push
rcrb
cmp
rol
xlat
pusha
fdivrp
mov
pop
mov
sub
std
push
loopne
insb
add
jnp
daa
jbe
cmp
clc
adc
and
iret
sub
stc
mov
mov
ret
mov
cmp
lods
loop
cmp
xlat
jae
jmp
pop
cld
pop
or
cmc
sti
out
add
jae
xchg
rcrl
pop
push
pop
mov
aam
mov
icebp
stc
mov
push
jnp
pop
repz
xchg
aaa
push
lcall
push
aas
arpl
movsb
dec
pop
pop
in
or
pop
mov
mov
stos
xchg
sbb
jns
pusha
xchg
mov
int3
inc
or
cmp
add
xchg
mov
cmp
lds
lret
adc
adcb
xorl
lahf
jg
daa
sbb
mov
mov
leave
pop
and
xchg
mov
mov
mov
push
xor
stos
lods
jecxz
jle
dec
xchg
jbe
mov
in
adc
loope
ss
data16
or
int
and
xor
enter
inc
in
testl
lcall
lahf
jo
xor
outsl
repz
test
les
dec
arpl
or
test
dec
frstor
dec
push
in
js
fnstsw
push
fidivrs
or
push
fmull
xor
pop
and
nop
xchg
lcall
pop
mov
out
inc
inc
popf
das
cmp
lahf
aas
or
jno
cmp
pusha
jp
aaa
mov
adc
lods
dec
mov
jb
add
fwait
je
scas
jg
int3
add
repnz
jb
add
sub
fwait
sub
pop
pop
sbb
data16
repnz
cli
rorb
add
out
jl
dec
sbb
das
jle
sbb
xchg
adc
andb
add
sbb
sbb
add
sub
cmp
mov
mov
cmp
insl
lods
je
mov
add
dec
mov
leave
inc
mov
inc
mov
jecxz
jecxz
vmovdqu
xchg
popa
ret
ss
rorl
jecxz
enter
test
dec
sub
push
insl
bound
je
sbb
add
aad
adc
xchg
fdiv
test
fwait
pop
sub
dec
jbe
dec
aaa
lock
cmp
mov
lods
ljmp
inc
outsl
xchg
lcall
jg
add
movsl
push
jbe
inc
jl
sbbl
cld
popa
jp
popl
stos
ja
cmpb
mov
inc
mov
testb
int3
call
mov
ficomps
js
and
inc
sbb
jne
adc
call
inc
mov
and
sub
dec
loopne
insb
jno
add
mov
push
mov
repz
inc
cld
push
js
or
fisubs
jbe
mov
cmpsb
in
mov
es
outsl
insl
mov
add
mov
mov
into
add
subb
pop
imull
cs
out
shrl
aad
shll
in
mov
xorb
and
and
ret
in
movsb
int
mov
and
fnstcw
jl
shrb
pop
mov
ret
dec
into
xor
sub
mov
arpl
pop
mov
xor
out
das
dec
mov
mov
daa
rol
stos
pop
adcl
cli
lret
inc
filds
pop
xor
mov
ret
adc
xor
xor
jle
pop
mov
out
inc
inc
lds
push
jg
dec
mov
mov
dec
shrl
jl
repnz
rcrl
aaa
inc
cmp
cld
sub
shlb
push
mov
lcall
sbb
or
xlat
ret
aaa
or
add
lret
sub
pop
pop
mov
sbb
dec
jbe
iret
sahf
pop
add
adc
inc
hlt
in
jecxz
and
test
fbld
lahf
dec
lea
or
pop
and
inc
or
add
adc
jg
loope
je
das
cli
addr16
sti
mov
cltd
jg
jns
pop
cmp
dec
cli
into
inc
aad
movsl
mov
jo
aam
icebp
mov
dec
sub
jecxz
cli
mov
mov
jmp
pop
bnd
add
cwtl
je
mov
ds
cmp
or
xchg
aam
push
push
sbb
pop
out
das
bnd
sub
cmp
aam
daa
push
out
movsl
lds
out
movsl
inc
jp
jecxz
decb
inc
cmp
xchg
lods
aaa
aad
aas
mov
lret
dec
fnsave
daa
xchg
lret
xlat
inc
adc
enter
les
xchg
inc
dec
xchg
test
mov
cmc
shll
dec
cs
sbb
in
mov
jnp
cwtl
jb
xchg
lods
jnp
outsl
jle
ret
jecxz
pop
ja
mov
mov
cmp
sub
pop
push
lea
jbe
push
and
cmpsl
in
push
jp
mov
inc
dec
test
test
sub
lods
xor
mov
imul
jnp
mov
sub
cmpl
movsl
jmp
sahf
or
fadd
dec
filds
pop
cmpsb
pop
jne
nop
loope
in
mov
adc
inc
enter
push
hlt
push
shll
push
fwait
mov
adc
push
pop
cmc
clc
out
adc
shll
sbb
adc
pusha
clc
in
mov
jl
js
push
push
lret
daa
mov
in
pop
mov
repnz
dec
xchg
movsb
aam
push
ret
loop
sub
push
cmp
or
pop
xchg
jbe
mov
lods
pop
cmpsl
icebp
push
gs
push
push
loope
cmpsb
add
out
ja
mov
fcmove
mov
lea
out
aam
xchg
inc
adc
inc
push
xchg
mov
pop
shll
mov
test
pusha
mov
call
inc
lea
pop
into
out
mov
and
and
repnz
into
shr
adc
xchg
mov
daa
add
dec
jmp
pop
scas
xchg
push
rcrb
and
or
fidivrs
inc
jecxz
add
mov
ret
sbb
and
cli
fwait
or
les
adc
fcomip
pop
mov
out
xchg
jns
pop
jmp
jnp
xchg
cld
hlt
repnz
jae
dec
gs
popf
cmp
int
cmp
cld
in
add
movsb
ja
nop
stos
xlat
and
data16
dec
xor
mov
mov
jnp
inc
xchg
adc
sub
sub
jb
negl
aas
and
jl
fnstenv
sahf
push
pop
loop
mov
push
sub
shlb
clc
xchg
movsb
pop
das
xor
xor
and
mov
push
fbld
movsb
cmc
jae
mov
xchg
mov
sub
jl
icebp
add
es
push
or
and
int3
dec
leave
loopne
push
xor
pop
stc
push
decl
aam
dec
scas
loop
push
dec
mov
and
icebp
js
mov
popa
test
mov
jne
rcrb
mov
push
pop
shll
push
std
sub
pushf
mov
jb
js
add
aaa
adc
mov
mov
jp
jne
mov
ret
sbb
scas
sub
outsb
pop
cli
pop
inc
sbb
xor
pushl
jb
mov
mov
stc
out
and
sbbl
jp
mov
adc
inc
pusha
inc
push
xchg
das
mov
dec
pop
mov
push
fstpl
mov
sarl
sub
mov
xchg
mov
cli
test
inc
xor
xor
insb
xchg
push
xor
xchg
cmp
inc
mov
out
push
sar
sbb
push
lods
inc
insl
jecxz
scas
test
adc
outsl
sub
xchg
lea
push
loopne
pinsrw
jbe
inc
mov
orl
inc
xchg
lret
je
cltd
jno
sbb
xor
mov
in
lods
sarl
adc
xor
in
dec
push
xlat
test
rclb
or
ds
sbb
fwait
jnp
fdivr
xchg
jge
fsubrl
and
fistpll
mov
mov
faddp
inc
inc
nop
sub
dec
dec
mov
pop
add
xchg
insl
xlat
jg
jns
sub
pop
insl
mov
je
cld
xor
jle
push
pop
jae
adc
fs
scas
pop
adc
sbb
notb
stos
xlat
xor
fs
xchg
mov
sbb
fs
sti
divb
cwtl
and
inc
pusha
xor
and
jae
jae
sbb
mov
pop
rcr
stos
iret
xlat
nop
and
lods
ret
pop
xchg
pop
or
mov
lcall
lea
sbb
xchg
dec
dec
lds
xlat
mov
aaa
xchg
mov
andb
push
in
mov
data16
rcrl
hlt
sub
lret
pop
jle
xchg
or
ret
shll
mov
adc
stos
pusha
adc
jne
mov
cmp
dec
mov
jo
xchg
loope
add
adc
mov
ret
jp
push
enter
fcoms
xchg
xor
hlt
jge
js
jle
sub
xchg
xor
test
mov
nop
outsb
push
mov
les
jo
mov
dec
lods
jecxz
jae
mov
ret
ret
inc
mov
pop
jno
mov
mov
in
inc
outsl
cmp
clc
xchg
nop
mov
add
jg
cmp
fstps
jb
out
outsl
stos
aad
jmp
jno
inc
cld
mov
sbb
outsl
or
int3
stc
or
ljmp
mov
inc
xor
pop
sub
cwtl
jns
xor
add
cmp
sbb
lds
mov
mov
mov
ror
xchg
adc
std
and
xor
mov
bound
lret
aam
nop
and
pop
and
push
out
add
ljmp
repnz
dec
ss
movsb
add
pop
xchg
orb
mov
mov
xchg
sahf
adc
aad
xchg
pop
pop
into
jne
adc
and
pusha
or
pop
inc
pop
pop
in
ljmp
and
pop
cmp
enter
or
out
fwait
mov
stos
mov
pop
scas
jp
adc
jo
repnz
fadds
shl
mov
push
xchg
add
xor
bound
push
jae
xchg
sbbb
cmc
adc
push
inc
and
fisttps
xchg
dec
pop
sbb
xor
mov
xor
rcrl
stos
mov
mov
mov
jg
repnz
shll
mov
test
sbb
cmpsb
loopne
shlb
addr16
xchg
jmp
sti
rol
cmpsb
mov
push
sbb
fisttps
int
add
and
cmp
aad
aam
sbb
inc
js
das
fisubrs
dec
mov
sbb
pop
inc
jnp
inc
cwtl
stos
xchg
cwtl
icebp
push
movsl
cltd
arpl
push
mov
ror
mov
loop
sbb
ficomps
inc
jmp
dec
ret
pushf
xchg
outsb
sti
sub
leave
mov
movsb
push
movsl
mov
inc
out
xor
xchg
pushf
rclw
in
mov
xor
or
ret
fidivl
lea
mov
div
add
xor
test
dec
ja
std
push
xchg
inc
pop
mov
push
cld
xchg
mov
jno
les
inc
push
jl
pop
jecxz
loopne
adc
jge
xor
pop
sub
testb
ljmp
je
hlt
gs
out
pushw
add
ljmp
xchg
leave
dec
dec
in
jle
lret
jno
les
hlt
cmp
addr16
clc
mov
lock
pop
loopne
lcall
mov
jae
mov
or
or
daa
test
cli
outsl
ja
idivb
cmc
lods
mov
std
mov
testb
xchg
imul
mov
jb
in
addr16
psubusw
xor
test
pop
test
into
dec
outsb
outsb
add
cmp
popa
push
popa
mov
xchg
pop
aad
and
movsl
enter
sub
aad
push
cli
cwtl
jecxz
icebp
xchg
dec
cli
imul
popf
mov
lea
cmpsl
addl
lods
dec
inc
mov
aad
dec
out
lds
leave
sbb
js
or
xchg
sbb
fcompl
negb
xchg
pop
push
adc
xchg
add
js
stos
xchg
andb
outsb
call
movsb
mov
pop
fidivs
pushf
push
mov
add
add
filds
cwtl
into
push
jnp
cld
pusha
enter
cmp
scas
loop
jge
cmpsl
icebp
repnz
dec
ficoml
sub
mov
rorl
adc
scas
movsb
imul
dec
xchg
jmp
pushl
push
int3
mov
or
int
out
push
jl
repz
or
xchg
cmp
adc
adc
pop
or
shl
sub
jg
scas
or
leave
je
push
xor
xor
fisttpll
inc
xchg
cld
ljmp
pop
jmp
xor
mov
movsb
bound
aam
jno
aas
push
in
cld
jo
jge
sbb
fcoml
shl
andnps
lods
inc
pop
outsb
or
add
loopne
call
std
lret
imul
popa
push
imul
ljmp
dec
outsb
pop
jmp
lret
mov
popf
ret
out
ficoms
xchg
dec
arpl
push
bound
movsl
push
clc
dec
out
les
sbb
mov
dec
or
inc
rcrl
mov
mov
jg
ret
cmpl
add
cmp
sub
mov
mov
push
cmp
gs
rorl
adc
cli
sahf
mov
add
xorb
jnp
test
cli
out
jo
adc
inc
hlt
or
iret
xchg
jo
jg
pop
cs
sti
xchg
mov
push
dec
sahf
inc
ret
ud2
popa
aam
mov
fidivs
jae
pop
mov
cmp
xchg
or
movsl
and
xchg
cmp
or
mov
adc
cwtl
sbb
and
or
out
pmuludq
js
mov
leave
xchg
in
jno
mov
inc
in
xor
pop
fcmove
aaa
adc
jmp
fisubs
cmp
ljmp
shlb
pop
cmpsl
lods
into
or
insl
xor
jl
adc
push
lock
shlb
pop
fldenv
sti
xor
fcoms
sahf
mov
ljmp
xor
fwait
inc
sub
pop
mov
shll
jno
decb
lret
sub
jmp
adc
sbb
mov
iret
sahf
xchg
in
fwait
and
popa
imul
push
shrb
sahf
leave
mov
jp
movsl
das
push
add
rclb
stos
or
pushl
mov
push
gs
xor
cmp
cmp
xor
jb
hlt
add
ds
jge
out
pop
into
das
adc
or
shlb
adc
pop
push
jb
inc
jecxz
inc
repz
pop
adc
xorl
jne
stc
xchg
aas
push
daa
ficoms
jne
sahf
xor
push
jbe
sti
shrb
jnp
dec
imul
rcll
mov
and
lock
jmp
inc
add
rol
pushf
ljmp
mov
xor
push
add
push
jbe
jb
xchg
loop
leave
add
in
lret
pushf
es
push
sub
add
jnp
into
xchg
decb
jnp
cmp
ja
dec
mov
jo
int
sub
and
mov
pop
push
mov
ret
ret
sub
sbb
enter
es
outsb
sub
or
dec
dec
xchg
add
xor
es
in
popa
pop
gs
test
insl
icebp
insl
inc
aad
jnp
inc
cwtl
in
xor
push
aad
bound
mov
imul
rcl
mov
xor
dec
jmp
pop
out
pop
lret
xor
int
repz
notb
xor
xchg
inc
mov
cmpsl
cmp
or
int3
dec
hlt
fidivs
iret
scas
fwait
cs
in
sbb
jae
mov
pop
std
add
out
xlat
or
outsb
std
jecxz
fs
jo
mov
ja
or
jl
xchg
movsl
or
les
orb
imul
pop
sub
sbbb
int
jge
incl
dec
cs
pop
je
dec
push
cmpsl
push
je
jge
imul
add
inc
pop
xchg
insb
and
pop
cmp
push
cmp
pop
mov
and
les
call
sbb
enter
or
mov
fidivrs
mov
je
adc
mov
cmp
sbb
lds
push
call
push
sub
cmpb
pop
xor
ret
xor
paddusw
lret
xchg
adcb
mov
lret
xor
xchg
dec
into
xlat
dec
cmp
add
loopne
or
outsb
lea
push
push
push
add
repz
rclb
xchg
ljmp
insl
dec
mov
sub
and
lock
dec
pusha
jp
dec
pushf
fwait
sbb
dec
push
hlt
bound
xor
pop
mov
cmp
cmpsl
mov
gs
push
ljmp
or
aad
and
out
fsubrl
iret
subl
push
sbb
mov
pop
add
jb
scas
push
sahf
sbb
loope
fisubs
sub
out
leave
xchg
push
jnp
push
iret
and
dec
icebp
outsb
push
pcmpgtb
cli
jle
jmp
nop
sbb
int
insb
gs
pop
fsubs
into
in
bound
and
shrl
mov
test
mov
pop
xor
fwait
lcall
mov
or
fdiv
add
push
cmp
and
lahf
mov
pop
sub
push
aaa
cmpsl
fidivrl
filds
loope
test
pop
jo
cli
lret
repnz
imul
mov
sbb
popf
cmp
xor
mov
in
int3
stos
cmp
mov
out
xchg
fsubrp
xchg
outsb
sbb
hlt
fstl
mulb
call
mov
add
jle
mov
aad
fs
jae
cmp
or
sbb
jb
mov
rorl
xor
or
dec
xor
cmp
push
mov
xorl
add
xor
daa
or
divl
shlb
push
std
insl
aaa
lea
mov
es
mov
xchg
inc
push
jge
lods
sbb
mov
loope
xchg
adc
mov
fisubrs
in
imul
les
mov
les
fsubs
cmpsl
dec
test
sbb
dec
imul
clc
mov
shrl
stc
movsb
push
sar
add
mov
dec
pop
insl
ja
sahf
mov
sub
out
xchg
popa
mov
out
adc
fsubs
aas
jmp
lahf
ss
cmp
push
pop
ss
and
cmp
jl
pop
sub
popa
lea
xor
bound
cld
cwtl
adc
fwait
cmpsl
scas
testb
loopne
pushf
and
scas
or
inc
xchg
jle
loopne
cli
gs
ret
inc
xchg
ljmp
mov
sbb
jmp
add
xchg
lea
pusha
pop
xchg
mov
fisubrl
xchg
std
dec
and
data16
xchg
push
loope
enter
mov
mov
jno
push
mov
mov
cmp
xor
sbb
shr
lds
push
inc
outsl
stos
add
add
and
das
push
push
lret
pop
idivb
xchg
or
nop
insl
sbb
inc
ret
sbb
fldl
cmc
pop
mov
scas
xchg
jp
jp
mov
orb
mov
insl
das
ret
or
inc
stos
jbe
aas
decl
xor
xor
sarb
adc
xlat
int
mov
imulb
ja
jno
adc
cmp
xchg
mov
lret
pop
pop
or
cmc
pop
imul
jp
scas
stos
sar
mov
cmp
and
mov
jmp
sbb
sahf
jecxz
lcall
xchg
cld
test
and
sub
andl
sbb
xchg
or
aad
mov
filds
push
mov
sti
test
iret
imul
pop
out
aas
addb
in
cltd
dec
xchg
ljmp
adc
xor
nop
mov
pop
jne
sub
arpl
pop
imul
repz
mov
xchg
in
adc
mov
mov
xchg
mov
cmpsl
leave
dec
mov
outsb
push
mov
stos
in
sub
adc
ds
xor
cli
sarb
add
andl
add
jnp
out
dec
fcoms
inc
insl
xchg
sahf
cmp
popa
xlat
push
mov
or
sub
or
cld
sub
adc
mov
xchg
andl
mov
mov
adc
sub
mov
movsb
xchg
movsl
scas
xor
ss
addb
xchg
lea
repz
jp
mov
push
xlat
pop
add
aam
mov
adc
es
int3
popl
dec
xor
push
mov
xchg
mov
jbe
into
jp
jno
ja
cmp
sbb
in
fbstp
sbb
cmc
mov
push
push
lock
mov
inc
stos
and
stc
fmull
xchg
dec
xor
mov
jo
leave
push
push
sbbl
mov
shlb
jb
adc
scas
dec
pop
scas
call
mov
mov
sub
mov
dec
add
mov
loopne
out
sub
bound
ja
scas
dec
stc
js
ds
stc
in
hlt
adc
fnstsw
xchg
js
fidivl
jbe
pop
cmpb
popf
cmpsl
stc
jmp
outsb
scas
shlb
and
dec
pop
push
add
insb
add
mov
cli
push
ret
pop
mov
cs
and
fsubl
or
mov
ja
jbe
in
mov
cltd
test
mov
mov
int
mov
pop
nop
cs
xchg
cltd
adc
fcmovnu
adc
fildll
and
pusha
test
es
sti
sahf
adc
imul
test
adc
and
or
imul
sbb
std
into
lock
dec
outsb
test
adc
mov
jge
loop
jbe
psubsb
add
pop
sarl
loopne
movsb
inc
xchg
jecxz
aas
fisubs
cltd
add
loopew
leave
pushf
cmp
fistpl
push
push
adc
dec
fistps
lods
movsl
imul
xlat
fisubrs
inc
mulb
fcomps
dec
mov
mov
mov
ljmp
push
or
adc
rclb
mov
pop
rcrb
ror
mov
fistl
or
xchg
aaa
or
or
inc
leave
mov
push
repz
clc
das
in
ljmp
cmovl
cli
mov
pop
sub
adc
les
xchg
and
pop
sbb
and
dec
push
cmc
xlat
lret
scas
dec
mov
sbb
outsb
jl
daa
pop
jp
push
leave
rolb
ljmp
je
arpl
bound
cld
fptan
or
in
neg
mov
and
sub
xchg
cwtl
imul
xor
sub
mov
jle
inc
arpl
push
and
or
inc
es
inc
push
adc
lret
cmp
repz
into
test
insl
add
sbbb
subl
add
stos
lods
ja
fnstenv
sbb
stos
fisubl
dec
fisttpll
xchg
testl
push
adc
pop
pmullw
stc
rclb
add
cwtl
inc
inc
push
lods
repnz
adc
outsl
mov
and
ljmp
sti
cs
xor
mov
mov
cmpsl
hlt
in
mov
jnp
lcall
push
adc
xor
xchg
clc
xchg
mov
mov
sbb
mov
outsb
push
std
mov
into
mov
add
ss
jge
sbb
or
fstps
cmc
dec
xchg
notb
in
popf
jns
dec
loopne
sti
and
les
sti
cmp
push
lods
xchg
sbb
inc
scas
repnz
rcrl
xor
mov
and
ds
loopne
push
in
jnp
mov
cmp
pop
jecxz
push
inc
inc
xlat
and
jae
mov
add
into
cs
imul
popa
jmp
fsubl
les
hlt
clc
jae
push
cmc
popf
es
js
jg
in
fld
scas
sbbl
dec
addb
adc
mov
push
fdivl
dec
data16
lea
fwait
js
fsubl
pop
divb
pushf
or
cmp
push
cmpsb
sbb
mov
adc
addr16
mov
inc
xchg
fldcw
xchg
fwait
cmp
int3
movsb
shlb
sbb
sbb
and
mov
js
jnp
cld
xchg
in
mov
pop
gs
out
pop
sbb
and
mov
es
popf
lock
pop
in
mov
mov
cmp
xchg
add
lahf
popf
sbb
cmp
les
ret
imul
lcall
mov
insl
repz
cmpb
xchg
pusha
into
and
pop
mov
inc
loope
mov
repz
xchg
fcomps
adc
mov
fstpl
nop
stos
repz
sbb
shll
inc
icebp
arpl
mov
jb
pop
or
sbb
ffreep
cmpsb
ds
adc
mov
mov
dec
fdivrl
push
mov
mov
inc
loopw
sbb
pop
imul
fcmovbe
imul
out
mov
push
aas
jl
pop
adc
in
xchg
andl
sbb
hlt
test
xor
or
test
cs
xlat
add
outsb
ja
ja
sub
xchg
push
or
push
js
mov
adc
andb
nop
push
imul
stos
sbb
sarb
mov
push
mov
imul
xor
push
cmpsl
les
shrb
in
push
push
mov
lret
sub
add
add
jnp
xchg
leave
push
scas
outsl
lret
jne
dec
out
out
jae
rcl
in
fwait
sub
xor
and
rol
mov
mov
xor
inc
das
aas
testb
xchg
xlat
adc
test
sti
cmp
pusha
call
shlb
mov
lret
sbb
dec
pop
cmpsb
das
add
jecxz
mulb
and
or
push
mov
cs
test
mov
add
aad
xchg
ret
push
mov
loope
sub
movsl
movsb
mov
mov
cmp
dec
ficoms
mov
js
xchg
sub
sbbb
mov
fildl
cmp
mov
aad
dec
dec
les
enter
jae
adc
pop
daa
dec
dec
adc
shrb
xor
add
sub
adc
js
jle
adc
fadds
adc
loop
ds
dec
lret
mull
sbb
rcrl
movsb
xlat
divb
mov
jns
imul
push
pop
mov
les
rolb
sbbl
inc
inc
jns
pop
pop
ret
inc
inc
movsb
nop
xchg
xor
inc
cmp
scas
nop
scas
insl
cli
pop
sbb
xor
lock
inc
mov
les
xchg
sbb
push
push
ret
addr16
add
pop
pushf
popa
lea
add
fistpl
inc
js
je
stos
popa
fistl
test
inc
lock
rcll
subb
imul
inc
ror
sahf
mov
xchg
daa
dec
xor
sub
popa
inc
or
mov
xor
cli
std
lds
or
inc
push
imul
stos
inc
inc
jnp
lea
pop
je
push
lcall
int3
mov
test
or
std
xchg
cltd
lret
and
je
xchg
addr16
aad
fidivrl
and
dec
inc
jmp
aas
mov
icebp
or
mov
push
jg
fwait
js
mov
pusha
ss
lahf
cld
sahf
jl
xor
sbb
aaa
cwtl
cmpsb
adc
rclb
and
push
sbbl
and
inc
out
cmc
leave
xchg
or
outsl
sub
push
mov
xchg
mov
inc
ljmp
push
lea
inc
andb
or
mov
adc
cmpsl
imul
dec
xchg
insl
enter
push
push
mov
pusha
jns
dec
jg
sub
mov
and
inc
inc
ffree
adc
or
jno
cmp
push
adc
sub
add
nop
lahf
jnp
mov
xor
scas
in
fdivs
jle
inc
push
imul
lds
and
sub
mov
fcomps
fs
mov
push
pop
mov
cltd
rcl
sbb
fcompl
push
jmp
cmp
sar
out
mov
sbb
andl
fwait
add
push
sar
lret
xchg
push
mov
and
mov
adc
fsubrs
push
or
add
sbb
mov
push
add
push
pop
push
aad
adc
rcll
jecxz
arpl
popa
stos
das
jno
cmp
and
clc
jnp
mov
adc
fstps
xor
jae
cld
mov
push
std
sub
pop
es
cmp
orl
push
pushf
xlat
aas
xor
popa
jp
cmp
cwtd
pusha
jnp
data16
icebp
mov
out
call
in
add
data16
and
jg
test
cmp
std
jmp
das
iret
cmp
jne
test
hlt
pop
les
addr16
into
xor
fstps
xchg
punpcklbw
jecxz
fisttps
xor
sbb
mov
xchg
je
frstor
lock
fnsave
je
int
repz
cs
jmp
rorb
out
xchg
cmp
pop
incb
fisttpll
sahf
cmpsl
xchg
test
or
xor
outsb
les
ret
stos
mov
push
add
adc
es
stos
xchg
insb
insl
lea
adc
mov
xor
inc
fists
fwait
mov
xchg
aaa
rclb
pop
out
sub
or
mov
push
hlt
shlb
cltd
sbb
sarb
xchg
into
xchg
int3
vmaxsd
in
sub
inc
ficoml
scas
sahf
push
mov
xchg
add
jp
pop
ret
and
or
push
mov
sub
shlb
mov
adc
jp
in
scas
jle
popa
push
repnz
pop
loopne
aad
rcrl
sbb
mov
pop
cld
int
push
icebp
loopne
xchg
cltd
scas
mov
mov
xchg
push
adc
das
pusha
aam
lcall
jns
aam
fmul
popa
leave
jne
aad
sbb
loop
push
movsb
popa
shl
rcrb
jae
sub
out
cwtl
jge
jl
scas
mov
lock
sub
shrl
mov
rcll
scas
pop
mov
popf
aaa
mov
xchg
sub
and
push
mov
cltd
pop
stc
std
dec
xlat
jecxz
mov
movsb
insb
stc
ljmp
scas
add
gs
or
out
imul
fsubr
xchg
lock
andb
jo
nop
push
mov
or
aas
push
mov
jo
leave
cli
xchg
mov
clc
es
pop
mov
add
imul
rcl
jno
adc
pop
repnz
or
dec
gs
js
xor
cmp
sub
into
mov
pop
xchg
pop
pop
inc
and
ficoml
loope
fld
daa
insl
imul
nop
push
jnp
xlat
mov
lret
je
jmp
cs
lahf
aad
add
stos
test
xlat
inc
push
scas
cmp
test
stos
test
xchg
or
mov
cs
xor
daa
notl
mov
scas
stos
pmulhw
ficomps
pop
and
jno
pop
or
sbb
jns,pn
cmp
mov
or
fldcw
test
xor
loop
jge
cld
pop
int
dec
adc
or
xor
or
push
mov
inc
adc
lret
std
jecxz
xlat
ja
and
ljmp
pop
insl
xchg
cmp
or
imul
mov
jae
cmc
adc
mov
sbb
ds
push
fisubrs
and
lods
daa
add
shlb
ficomps
movsb
aas
push
lahf
jp
jo
lock
jnp
enter
lret
jmp
shrl
repz
cwtl
loope
pop
and
jne
out
mov
jl
repnz
js
repnz
push
mov
ret
inc
pop
sarl
mov
movsl
mov
jne,pt
dec
lret
addr16
sub
jns
jnp
and
inc
cmp
jmp
sbb
fmuls
lea
add
cmpsl
xor
sub
repnz
pushl
outsb
lcall
enter
mov
test
push
imul
std
push
mov
xor
adc
iret
dec
xchg
add
je
push
sub
xchg
call
scas
push
cmp
rcr
push
push
cwtl
out
mov
xor
movsb
cmp
cmc
mov
jmp
jns
mov
test
xchg
jmp
shlb
arpl
fldl
js
jmp
arpl
movsb
and
pushf
aam
inc
imul
xchg
arpl
inc
mov
jp
ss
pop
xchg
xchg
mov
scas
outsb
fmuls
add
ljmp
call
sbb
leave
or
cld
adc
mov
testb
sbbb
pop
dec
int3
sar
pop
in
adc
pusha
and
ss
sbb
sub
mov
xor
mov
mov
push
xor
inc
cmc
jg
inc
dec
enter
fcom
xlat
adc
push
push
test
sbb
pop
sub
das
subb
test
jecxz
loop
add
mov
jmp
jmp
inc
mov
repz
push
sbb
mull
mov
lock
mov
add
pop
sub
stos
in
add
out
out
jno
jecxz
inc
jae
xor
jmp
xchg
add
mov
jl
and
mov
ret
pushf
sarb
mov
mov
loopne
negl
leave
jmp
adc
add
int
mov
orb
dec
neg
jecxz
jnp
inc
cmp
subb
mov
vmwrite
mov
lods
cwtl
incb
mov
mov
mov
add
imul
xchg
mov
jg
cltd
pop
pop
pop
pop
outsl
imul
adc
sbb
push
push
fldl
fldl
cs
outsb
mov
jle
mov
sbb
lea
push
adc
in
movsl
rol
pop
cmp
clc
inc
mov
testl
inc
std
lds
mov
imul
xor
mov
outsl
repnz
lods
cmpsb
add
test
ljmp
loope
pop
repnz
sbb
mov
shrb
xlat
jp
gs
xchg
push
push
or
xor
cwtl
ss
mov
lea
testl
pop
rolb
or
pop
pop
test
mov
test
stc
xchg
lcall
enter
test
lock
leave
and
push
into
or
fldl
mov
stos
mov
in
jl
stos
cmp
mov
repnz
push
mov
jae
jns
add
ret
jns
fidivrs
sahf
mov
movsl
or
testl
and
push
loopne
enter
cmp
pop
mov
mov
loop
sarl
xchg
lock
pop
enter
xchg
lret
sbbl
or
mov
jmp
std
cmp
imul
push
sbb
adc
push
es
ret
mov
jl
imul
ss
xor
add
shll
or
sub
stos
ret
in
dec
pop
jo
jle
jno
mov
lahf
mov
testb
jl
icebp
mov
mov
stos
int3
pushf
or
fnsave
lds
push
leave
xor
icebp
cltd
insb
inc
inc
sbb
pop
adc
int3
dec
or
stos
mov
adc
in
or
dec
mov
dec
loop
jecxz
xor
mov
mov
out
mov
int
inc
fsubrs
js
sub
js
jbe
iret
enter
pop
mov
sub
fcom
ficoms
inc
out
mov
pop
sub
adc
or
iret
daa
mov
inc
ret
dec
mov
inc
inc
jne
movsb
ja
push
cwtl
inc
pop
adc
xor
mov
dec
js
lret
loope
jnp
es
adc
push
out
nop
insl
mov
jge
and
inc
iret
jo
dec
stc
addr16
int
mov
xor
mov
sbb
andl
sahf
inc
aaa
fs
cwtl
fs
and
xabort
push
fwait
orl
iret
add
fwait
xor
xor
into
lods
movsb
js
add
add
sbb
jb
jge
testl
dec
cmp
and
cmp
or
lods
jne
add
popf
or
push
pop
enter
xorb
aas
iret
jnp
push
iret
loop
popa
mov
pop
divl
fwait
pop
inc
in
adc
push
or
xor
stos
int
es
test
xchg
in
lods
mov
ret
jmp
cli
add
cltd
andl
popa
adc
mov
jmp
mov
jo
or
xchg
dec
jmp
sub
xor
and
imul
and
sti
pop
dec
mov
cmp
mov
adc
or
loop
push
pop
or
fists
jl
ret
ret
popa
mov
and
adc
xchg
jo
add
mov
das
xlat
cmp
orl
inc
outsb
push
imul
xor
icebp
sbb
push
add
sbb
aad
cmp
mov
pop
outsl
jns
scas
stos
imul
xchg
iret
dec
lret
test
lock
xchg
aam
inc
out
mov
jl
cmpsl
arpl
and
into
mov
into
rcll
sbb
jnp
mov
ljmp
mov
pop
xor
lret
mov
mov
sub
fcoms
out
push
roll
jbe
into
xchg
in
lahf
xchg
enter
mov
sbb
mov
outsl
push
sbb
test
cmp
mov
inc
out
shlb
in
push
xor
mov
pop
or
and
gs
lcall
movsl
dec
xor
push
je
jae
lcall
pushf
and
daa
out
popf
cmp
in
sbb
push
jnp
aam
add
pushl
jns
mov
xchg
cmp
fdivrl
dec
js
fninit
xor
push
dec
ds
pop
adc
stos
jmp
push
mov
hlt
pop
mov
dec
sbb
jno
lret
cmp
pop
cmp
xchg
hlt
xchg
dec
ljmp
test
inc
movsl
pop
adc
add
shll
lret
jbe
xchg
les
ret
push
or
cltd
arpl
imul
aad
push
jmp
jle
dec
inc
iret
jno
sub
jecxz
adc
dec
enter
loope
adcb
inc
insb
mov
mov
aaa
pop
or
mov
fcos
sub
add
add
cmpsl
andb
inc
mov
divb
push
jmp
in
inc
or
push
repnz
sub
mov
leave
lahf
jmp
in
cs
ds
in
in
pop
cmpl
loope
sbb
scas
push
out
mov
cltd
into
xchg
aaa
or
sub
sti
rcll
add
add
and
test
push
ljmp
lcall
cs
add
dec
fdivs
mov
pusha
and
pushf
popa
adc
jns
mov
lret
outsb
and
call
pushf
jbe
nop
sbb
jecxz,pt
bound
das
push
test
out
and
cmp
nop
enter
mov
mov
arpl
fcoml
inc
mov
test
push
sub
mov
cmp
or
inc
dec
sbb
movsb
mov
add
imul
jmp
imulb
jge
les
int3
scas
and
stos
mov
mov
add
cli
inc
mov
in
out
pop
mov
scas
test
lcall
and
inc
pop
mov
and
fdivr
push
cmp
xorl
sub
xor
in
lods
mov
xchg
popf
jno
lods
xchg
adc
xor
mov
in
into
js
daa
ja
inc
jbe
inc
es
jp
sarl
mov
and
xchg
adc
iret
inc
xchg
aas
outsb
sbb
lods
fisttpl
and
nop
cmpsb
sub
call
mov
cld
pop
adc
dec
int3
cltd
xchg
outsl
negl
jmp
out
clc
xchg
out
xchg
sub
inc
js
fcompl
sbb
pop
ret
push
xor
add
adc
addr16
ja
cmpsb
aas
test
test
or
push
shlb
je
push
ret
fdivr
imul
scas
push
or
test
mov
xor
add
out
shll
dec
xor
xchg
stos
jae
and
lods
push
pushf
out
lds
je
das
cltd
dec
arpl
je
scas
mov
dec
cld
mov
test
pop
lahf
adc
fimuls
in
cmpl
fs
loopne
ret
mov
sub
inc
sbb
dec
inc
pop
aas
sbb
inc
push
jecxz
shll
add
dec
and
cld
mov
imul
pop
stc
dec
les
mov
push
dec
jnp
call
inc
lcall
pop
scas
pushf
lret
xchg
sbb
fwait
jae
test
adc
in
cmp
adc
fs
and
popa
ss
es
mov
push
movl
and
sbb
mov
movsl
inc
xor
inc
add
fisttpl
iret
jmp
notl
xchg
pop
mov
das
cmc
into
inc
pop
divb
jge
adc
inc
sti
jbe
ss
mov
loop
imul
sub
dec
mov
or
push
cmp
dec
cmp
ret
in
orl
fidivrs
dec
addl
xchg
popa
mov
ret
ss
out
xchg
jmp
out
xchg
push
mov
cmp
aam
jle
xor
daa
bswap
icebp
adc
xchg
jb
ret
xchg
sbb
or
push
cmp
js
in
xchg
jl
push
adc
and
gs
nop
shr
repz
jecxz
or
je
mov
xchg
xlat
cmp
mov
outsl
mov
push
test
sub
jne
out
aas
xchg
lods
hlt
jo
and
lock
subl
lret
mov
jecxz
ljmp
pop
and
and
dec
imul
jns
add
pop
jae
es
and
cld
or
stos
repnz
or
scas
sbb
sbb
mov
je
adc
lds
xchg
mov
add
xchg
scas
cld
loop
stc
jmp
or
and
idivl
out
xorl
test
mov
aad
loop
jmp
inc
sbb
xor
or
je
cmp
lods
dec
sbb
jb
xchg
sbb
or
jmp
mov
int
sbb
std
xor
or
adc
adc
and
mov
dec
cmp
mov
jl
out
xchg
js
imul
adc
inc
pop
push
pop
push
fs
cltd
popf
sbb
dec
mov
jmp
xor
imul
push
mov
call
aad
mov
jecxz
mov
mov
sahf
sbbb
sbb
out
push
push
cmp
mov
xchg
adc
or
imull
es
dec
sbb
stos
push
add
xor
xor
out
rcll
loope
fistpl
add
sbb
data16
lahf
es
pushf
inc
cmp
or
jo
loopne
mov
std
nop
sub
mov
dec
sbb
push
imul
jmp
mov
add
pop
mov
jle
int3
sti
jns
out
out
add
bound
or
in
pop
mov
and
push
pop
test
sahf
imul
dec
xor
push
test
mov
shlb
sbb
xchg
add
loop
mov
lret
adc
mov
jecxz
shlb
ret
push
dec
inc
testl
lds
xor
adc
cmp
lret
call
cltd
stos
aad
rorb
out
push
push
inc
lret
mov
add
aaa
ret
inc
jp
daa
adc
fucomi
push
ret
pusha
das
lret
lahf
lret
xchg
adc
cmp
and
lcall
dec
push
dec
push
push
pop
adc
andb
jmp
cmp
popa
movsb
call
fidivs
popa
inc
sbb
and
and
insl
mov
mov
aam
icebp
and
xor
or
out
mov
cmpsl
lahf
int3
stc
aaa
pop
or
lock
adc
mov
xchg
ficoml
inc
cli
cmpsl
and
push
jle
out
js
ja
in
dec
cmp
cmp
jle
and
sbb
fdivl
repnz
les
rclb
rcll
aad
fsubp
adcl
adc
pop
aad
mov
es
pop
mov
and
cli
dec
scas
push
jmp
add
cli
imul
into
lret
jno
xchg
notb
sub
xor
in
fs
cmp
scas
jae
mov
cmpsl
inc
lock
pop
adc
xchg
adc
and
jmp
std
int3
int3
inc
add
ret
std
push
push
shrb
mov
mov
cwtl
imul
jle
ja
cltd
fwait
idivl
js
pop
inc
cltd
sahf
bound
dec
in
cwtl
pop
add
int
fst
aas
pop
cs
mov
lahf
dec
movsl
xchg
dec
push
mov
inc
fisubl
int
mov
lds
dec
testb
sbb
int3
mov
int
jp
out
mov
in
scas
insl
mov
lods
add
cmpl
xlat
and
data16
push
push
lahf
sub
hlt
shl
loopne
push
xor
mov
cmc
inc
lahf
inc
cmp
push
push
rcr
arpl
xchg
jo
repz
xchg
cwtl
cmp
daa
fdivrl
shrb
and
int
mov
subb
int
clc
je
mov
xor
xchg
and
mov
adc
fisubs
jle
enter
into
out
xchg
dec
xchg
fstps
inc
cmp
lods
int3
jns
imul
jnp
inc
push
sti
add
fdivrs
popf
mov
sbb
and
mov
or
fcompl
fsts
jecxz
iret
pop
or
pop
adc
sbb
dec
add
and
dec
fcmovnbe
nop
sub
stos
ljmp
lods
sub
shrb
std
rcl
ljmp
jecxz
jle
inc
out
loope
and
adc
imul
mov
movb
xor
add
jecxz
or
jnp
inc
jge
mov
mov
sti
mov
jnp
xchg
cmpb
rolb
and
sbb
aad
bound
pop
inc
jl
cmp
or
fstl
sbb
stos
dec
lods
adc
repnz
mov
add
mov
pop
lret
scas
js
lock
mov
.byte
inc
stos
aas
mov
mov
or
in
mov
or
sbb
or
sub
or
push
mov
add
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
or
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
sbb
add
add
add
incl
add
add
dec
add
add
add
sub
add
incl
add
add
add
add
incl
add
add
aaa
dec
add
add
add
incl
add
add
cmp
add
add
incl
add
add
add
add
decl
add
dec
add
add
add
inc
dec
add
dec
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
dec
dec
add
dec
dec
add
lcall
dec
add
dec
add
incl
add
add
push
dec
add
add
add
push
dec
add
push
dec
add
incl
add
add
add
incl
push
dec
add
fisttpl
sbb
add
jmp
dec
add
fs
add
add
add
incl
add
add
fs
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
add
incl
add
add
push
add
incl
add
add
add
add
incl
add
add
imul
add
add
sti
outsb
dec
add
outsb
dec
add
add
add
incl
dec
add
dec
add
inc
jno
add
jno
add
aad
add
add
loope
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
jne
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
js
add
add
add
incl
add
add
js
add
add
add
incl
add
add
jns
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
jge
add
add
add
incl
add
add
dec
add
add
add
jmp
jle
add
jle
add
jmp
jg
add
in
jg
add
jg
add
incl
orb
orb
jmp
orb
orb
pushl
orb
lcall
dec
add
dec
add
ljmp
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
xchg
add
add
incl
add
add
mov
ljmp
dec
add
add
add
add
push
mov
or
mov
mov
or
in
mov
or
sbb
or
sub
or
push
mov
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
lods
bound
sti
rclb
mov
and
mov
mov
fldt
fs
lret
and
or
imul
mov
xchg
iret
sbbl
clc
push
push
cmp
xor
mov
test
jbe
mov
push
sbb
jle
inc
dec
xchg
push
adc
mov
push
loop
mov
repz
sysret
stc
or
dec
cmp
or
in
xchg
push
pop
xorl
and
mov
outsb
cmp
push
pop
mov
mov
push
sbb
lret
cltd
imul
out
sbb
adc
mov
mov
sub
in
popf
insl
mov
push
push
in
lret
push
aaa
imul
dec
scas
push
push
xchg
repnz
sti
cld
pop
js
dec
xor
mov
outsl
ret
sti
insb
push
imul
fists
push
lahf
int3
es
cmp
adc
cmp
rcl
shl
jb
fnstsw
xchg
add
inc
fnstcw
cmp
js
add
push
inc
in
or
push
pop
jge
mov
icebp
lock
add
stos
push
iret
and
and
arpl
scas
out
int3
testl
mov
sbb
sete
sti
fdivr
adc
mov
adc
mov
sub
push
test
sub
dec
sub
test
icebp
fisttpll
cmp
aam
lds
mov
mov
sbb
cld
les
orb
shl
add
inc
xchg
push
mov
test
cmc
cmp
mov
adc
popf
stos
cmp
add
pop
mov
into
or
mov
add
test
scas
or
lea
sbb
inc
adc
mov
or
repnz
push
cmp
call
int3
addr16
dec
xor
test
outsl
ret
fisubrl
pop
int
icebp
in
cmp
or
xchg
pushf
lea
and
icebp
inc
shl
jl
mov
aam
mov
inc
hlt
cmp
jne
loope
and
lret
or
xchg
call
push
scas
sub
jae
ret
pop
es
dec
dec
push
mov
push
mov
mov
lret
jae
pushf
pop
aas
sbb
mov
popf
nop
push
fdivrs
cmp
sbb
or
xlat
sub
xchg
jo
scas
dec
mov
xchg
ss
fbld
pop
movsb
cmp
fidivl
xor
add
dec
idivl
or
mull
push
add
pop
push
pop
pop
jle
cwtl
repnz
cwtl
sarl
adc
sbb
mov
sbb
cmpsb
dec
shlb
outsl
xchg
and
add
jp
sbb
inc
lahf
popa
xchg
jge
push
push
movsl
xchg
xchg
call
cmpb
in
adc
out
hlt
pop
xor
loop
iret
loop
inc
xor
and
dec
mov
sub
cs
cld
push
cmpb
sti
insl
out
and
mov
rcrb
cmc
mov
mov
xlat
cmp
idivb
les
ss
or
mov
mov
int3
xlat
nop
cli
cli
add
mov
out
xchg
cmp
bound
jecxz
jp
inc
jns
cli
les
push
lcall
sub
mov
pop
inc
faddl
inc
cmp
xchg
push
pop
push
in
pop
push
out
stc
sbb
push
dec
out
cld
insb
outsb
in
popf
ja
ficoml
xor
or
jge
in
mov
adc
arpl
push
div
and
loope
popa
sarb
cmpsl
cmpsb
popf
andb
test
jb
and
cmpsb
sbbb
jl
cltd
mov
cli
push
jae
iret
inc
xor
cmc
mov
cmp
movsl
jo
mov
mov
out
inc
pop
mov
xor
js
outsb
movsb
out
insb
outsb
movsl
fwait
jmp
mov
insl
adc
lcall
push
pop
jne
gs
mov
mov
lods
pop
pop
add
mov
lds
sub
stos
out
add
sub
and
push
sbb
push
lods
dec
in
cmp
adc
jbe
in
push
mov
out
clc
ja
call
aas
sbb
scas
hlt
sub
xchg
mov
pop
in
rol
mov
popa
clc
jle
insb
xor
jp
inc
jns
inc
adc
or
lret
cmp
faddl
loope
movsb
data16
and
push
dec
sbb
lret
jle
pop
or
ret
fistl
or
lds
in
fwait
or
pop
jne
stos
andb
mov
and
jbe
test
push
ds
out
ret
ds
pushf
cmc
or
jp
popa
scas
fs
pop
cs
movsl
aas
mov
cmpsb
iret
arpl
fsubl
sbb
adc
or
out
dec
and
dec
lahf
pop
cmp
aas
lods
mov
or
fiadds
xlat
ret
adc
rolb
adc
mov
data16
lahf
xchg
inc
add
pop
dec
jns
mov
ss
fsubrs
addr16
sbb
inc
mov
sbb
outsb
arpl
inc
mov
push
rcrl
addl
xchg
xor
xchg
loopne
loopne
ss
add
mov
push
xchg
divl
dec
pop
cwtl
call
jmp
add
jmp
clc
aam
in
cmp
hlt
ja
or
cmovno
neg
ret
sahf
fwait
xchg
out
test
fucomi
leave
movsb
into
sub
mov
fmull
or
adc
cmpsb
icebp
dec
cmpsb
mov
xor
lret
leave
jge
les
cmp
mov
test
daa
xor
adc
fwait
add
xchg
lds
roll
iret
into
out
popa
mov
gs
add
sbb
pusha
int
lds
popf
add
es
push
pop
sub
ja
bound
vpcmov
xor
jle
and
xchg
xchg
pusha
push
loopne
loope
std
sub
stos
call
mov
inc
gs
push
cli
cmp
outsb
mov
jg
push
pop
sub
sbb
mov
and
or
mov
push
lahf
add
fildll
into
leave
xchg
test
jmp
rorl
lret
test
sub
stos
jo
push
test
sarl
add
jo
pushf
dec
xor
dec
mov
movsl
dec
ror
push
jmp
and
sub
pop
or
mov
adc
mov
cmp
icebp
xchg
xchg
add
lods
ja
adc
fisttpll
rorb
sbb
mov
inc
incb
hlt
inc
addr16
xchg
pop
or
fiaddl
add
pop
inc
ja
xchg
or
and
add
dec
lock
test
xchg
mov
ss
adc
or
mov
fisttpl
xor
cmp
sbb
dec
pop
push
out
shlb
jp
jg
or
insb
mov
stos
inc
and
stc
pop
mov
mov
aaa
in
popf
repz
inc
in
inc
mov
xor
lods
sahf
jmp
push
ffree
xchg
popf
fsub
push
movsb
and
xor
or
pop
add
push
dec
sub
xorb
mov
cmc
out
dec
fs
xchg
xor
lahf
inc
and
jne
pop
dec
adc
ss
test
mov
scas
inc
sahf
fldt
xor
dec
mov
and
or
popf
cwtl
and
inc
shufps
add
stos
pop
mov
outsl
adc
jmp
xor
popa
jl
push
fs
rolb
loop
inc
xor
mov
shld
sbb
jle
imul
sub
xchg
sub
mov
ja
xlat
fsts
xor
and
inc
inc
ss
scas
mov
into
inc
nop
or
xor
scas
mov
js
push
repz
das
sub
xchg
jg
push
shrl
leave
int
sub
sti
dec
mov
test
loopne
dec
movsl
lds
inc
jb
insl
nop
js
bound
fwait
dec
pop
addr16
adc
stc
lods
sub
inc
jns
or
in
jno
sbb
and
push
jbe
mov
xor
sub
push
lahf
or
jecxz
addr16
lahf
xor
js
lods
aad
mov
push
and
xchg
pop
sbb
mov
test
cwtl
test
iret
push
and
movsl
sahf
cmpsl
mov
xchg
pop
mov
das
or
shlb
jbe
mov
stos
jo
into
xchg
ds
scas
mov
push
sbb
enter
lret
mov
leave
mov
cmp
xchg
push
aaa
mov
inc
inc
mov
insb
inc
or
adc
int3
push
je
xchg
mov
xchg
pop
add
imul
fs
adc
rolb
jle
xor
iret
stos
insb
cmp
pop
pop
lods
add
je
push
pop
stc
dec
push
daa
insl
inc
xor
dec
cmp
xchg
test
jge
cmp
je
dec
and
fidivrs
sub
sbb
mov
test
jmp
cmp
test
jbe
shrl
nop
xchg
inc
into
jmp
or
mov
or
mov
and
push
push
or
push
or
pop
cmp
test
mov
pop
inc
dec
dec
jo
addr16
mov
mov
xchg
mov
fwait
or
pop
jne
jns
rcl
lahf
imul
add
inc
dec
xchg
mov
add
ljmp
fdivp
nop
ss
adc
mov
pusha
cwtl
mov
cmp
mov
arpl
insb
rcrb
mov
inc
jae
shl
shll
dec
mov
xor
sbb
add
cmp
xchg
insb
andb
les
lret
and
test
xchg
leave
fisubs
in
loopne
pop
movsb
pusha
pop
stos
or
shrb
or
cmpb
sti
insb
cmpsb
sti
xchg
pop
jns
or
dec
aas
ss
mov
dec
adc
mov
lret
sub
insb
mov
jle
out
lret
nop
or
or
mov
xchg
and
hlt
push
jmp
mov
xor
mov
fsub
inc
hlt
xlat
jne
jecxz
cld
push
xor
cltd
xchg
dec
lret
movsl
or
sbb
cltd
repz
sbb
ret
daa
inc
xchg
jne
sub
lahf
sbb
mov
jmp
and
lret
lds
xchg
aad
and
repz
push
rcl
cmp
sbb
or
addl
fwait
jnp
xorb
inc
adc
int3
cmc
cmp
and
pop
bound
inc
pop
xchg
in
jge
xor
jmp
pusha
ret
push
mov
pop
lods
mov
testb
mov
xchg
std
sahf
xor
and
xlat
push
sahf
rorb
mov
rorl
sti
push
or
push
xor
icebp
mov
cwtl
or
sbb
jnp
dec
inc
push
mov
and
or
sarb
or
jbe
out
pop
mov
sub
scas
dec
dec
adcl
xchg
out
test
cmpsb
xchg
lcall
out
ljmp
out
imul
rcl
jb
pop
sbb
xchg
fidivrs
call
ds
adc
shrb
icebp
cmpsl
lret
clc
jbe
jne
arpl
mov
push
rcl
xor
adc
xchg
xchg
aad
fs
ja
iret
xor
ss
and
xchg
jne
std
jne
inc
push
popa
xchg
inc
negb
add
xor
outsl
enter
push
adc
sbb
jle
adc
mov
stos
adc
lods
daa
push
mov
aam
ret
pop
aad
inc
mov
mov
mov
xor
mov
test
xchg
dec
xchg
and
je
inc
adc
ljmp
aad
int
cltd
lret
mov
push
flds
xor
testb
pushf
add
mov
pop
scas
cmpsl
inc
into
mov
fcomps
iret
cltd
cmp
mov
sbb
popl
xor
cmp
test
das
cltd
das
mov
test
dec
imul
loope
addr16
push
sub
mov
insl
cmpsb
lock
fimull
sbb
cmp
inc
jmp
ret
in
js
sub
sbb
xchg
aam
subb
add
push
sbb
cltd
iret
push
xlat
and
xor
leave
xchg
mov
and
add
jne
mov
ja
rorb
cmp
or
testl
jno
sub
ds
jecxz
mov
rorl
sbb
out
mov
aaa
daa
test
add
mov
or
cmovge
pop
into
inc
cmp
cmpl
add
cmp
pusha
ret
js
push
or
sbb
int3
dec
xchg
sbb
jge
test
out
sub
cltd
imul
mov
add
call
add
xchg
dec
rclb
addr16
cwtl
in
push
inc
xor
dec
fwait
cltd
add
les
mov
out
push
sub
jle
lret
mov
and
xchg
xchg
adcl
inc
aas
mov
jmp
mov
sbb
jle
add
add
push
in
xchg
xchg
shl
mov
and
aas
jnp
adc
out
lock
mov
mov
lret
cmc
pushf
fildl
clc
shl
jns
mov
daa
lds
pop
xor
loope
adc
psraw
sub
dec
mov
or
call
xlat
pop
test
int3
xor
ljmp
mov
or
neg
test
inc
jl
shll
loope
jb
lock
shl
pop
mov
xchg
lahf
push
fwait
pushf
ficoml
leave
jmp
inc
push
fs
hlt
push
sbb
sbb
push
mov
cmc
xor
xor
ret
pop
jecxz
or
fwait
daa
les
mov
enter
pop
dec
jg
imul
push
loopne
pushf
add
mov
rorl
lds
add
lcall
cmp
lock
pushf
sub
cmpb
sub
pop
dec
adc
inc
pop
int
jge
xor
mov
fimuls
ja
aam
cmp
das
mov
xlat
mov
lahf
xchg
popa
xchg
stc
pop
mov
aad
push
lods
negb
mov
imul
adcl
or
jge
enter
push
jb
dec
adc
mov
push
in
xor
mov
loopne
jle
xchg
cmp
dec
cmp
mov
test
loopne
outsl
push
mov
cld
in
cwtl
dec
jp
rolb
add
dec
cs
push
add
adc
scas
adc
dec
xchg
push
pop
out
test
out
mov
jmp
movb
sbb
pushf
pushf
repnz
sbb
xchg
lods
popf
cmc
loope
add
ljmp
fimull
sbb
rcl
stos
ljmp
inc
mov
std
ljmp
cmp
inc
cld
enter
ret
mov
addr16
movsl
adc
add
hlt
push
lret
cmpsl
ja,pt
jg
jl
xchg
popf
lods
jo
cmc
fs
gs
in
rorb
pop
les
cmpsl
jle
jbe
mov
sbb
pop
lret
fstpl
mov
xchg
mov
xor
push
xor
push
mov
and
dec
fbld
outsb
jl
imul
xchg
in
je
nop
jae
dec
xchg
push
pop
xor
out
lods
inc
mov
fs
jmp
shll
test
ljmp
xchg
int
lcall
mov
es
push
pop
jo
mov
push
addl
out
pop
fcompl
adc
and
adc
sbb
add
ds
out
fcomps
aad
ljmp
fdivrs
mov
out
pop
out
fs
fbstp
insl
inc
inc
cmp
sub
cmp
xchg
fwait
mov
mov
push
scas
pop
pop
inc
mov
mov
push
add
jg
adc
pop
cmpl
jns
les
jg
pop
sub
jg
insl
fdivl
mov
dec
pop
loop
add
sub
rolb
lods
adc
cs
js
cmpsb
jl
iret
icebp
cli
stos
sub
pop
cmp
push
in
lret
imul
sbb
stos
push
push
lods
mov
notb
sbb
call
xor
ficomps
enter
pop
pop
sbb
lret
jne
adcl
imul
xor
imul
xlat
xchg
mov
add
gs
jno
cmp
inc
aam
addr16
loop
testl
ss
dec
scas
je
and
adc
dec
daa
or
push
loope
outsl
imul
lret
enter
sbb
in
push
jb
testl
test
cmp
fsubs
push
mov
mov
xchg
sbb
mov
cltd
cmp
int3
inc
jae
add
shl
mov
push
data16
cmp
lret
mov
xor
pop
mov
ds
popf
mov
xor
popf
clc
es
mov
dec
or
jecxz
rcrb
fldt
sbb
bound
push
daa
push
mov
pop
add
cwtl
inc
mov
pop
pop
push
pushw
insb
push
xor
stos
jne
mov
int3
jl
loopne
sbb
sti
std
adc
enter
and
stos
out
and
sbb
cmp
iret
pop
mov
std
cwtl
push
adc
sahf
or
imul
xor
gs
xor
add
dec
das
inc
lret
mov
and
rcr
std
pop
imulb
aaa
scas
ja
jle
pop
out
faddl
inc
sub
shll
rcl
push
cmp
test
inc
pop
out
adc
dec
add
pop
pop
push
lds
in
fcmovne
test
mov
pop
mov
cs
cmp
jo
pop
pop
inc
sub
or
mov
inc
ljmp
pop
cmp
shrl
push
mov
cmpsb
add
mov
cli
fldl
cmp
lea
pop
popa
mov
or
sub
mov
xorl
aaa
ficoml
movsl
xlat
mov
stos
pop
dec
or
repnz
mov
jmp
andl
flds
pop
addr16
or
mov
xor
roll
out
add
inc
ds
mov
and
and
lret
icebp
adc
je
add
jg
pop
int
fldenv
ljmp
sub
xor
fwait
mov
leave
pop
notl
push
add
jnp
cmpsb
push
pop
hlt
cmpsb
jno
cmp
lcall
xchg
negb
cli
pop
mov
or
push
fadd
mov
jno
add
fstl
inc
shlb
test
xchg
pop
clc
sub
mov
ficoml
lahf
call
xchg
stc
dec
sbbb
sbbl
jno
dec
cmp
rorb
xchg
nop
outsb
dec
sarl
mov
cli
or
adc
and
in
out
add
xor
dec
arpl
mov
les
mov
add
xchg
leave
pop
pushf
mov
mov
popa
jge
icebp
and
lods
xchg
mov
adc
mov
ret
lret
hlt
push
jae
sti
in
ret
or
mov
mov
and
jne
out
mov
or
push
mov
scas
lea
inc
insb
mov
xlat
ja
cmc
outsl
aam
dec
pop
pop
imul
mov
in
int3
sbb
iret
mov
mov
shr
sbbl
loopne
adc
movsl
sahf
jns
mov
pop
add
jg
sti
xchg
sti
mov
cmp
cmp
into
iret
gs
out
dec
in
cmp
and
insb
call
enter
rcrl
out
imul
cmpsl
movsb
aam
loope
in
push
adc
shl
cmp
xor
pop
pusha
push
mov
fs
sbb
sub
call
decl
xor
cmp
pop
mov
pop
int3
daa
jle
data16
shrb
loop
testl
inc
push
push
jno
and
jge
sbb
cmpsl
fstl
push
xchg
cmpsl
cmp
lods
dec
imul
test
lods
jne
ja
push
lods
add
inc
dec
mov
pop
xchg
orl
dec
fs
xchg
xchg
adc
mov
test
dec
push
movsl
movsb
mov
push
xchg
sub
dec
fwait
ret
push
in
aaa
movl
push
popf
add
inc
xchg
rclb
out
pop
sbb
cmp
push
ror
lea
xchg
pop
test
sbb
orl
out
aad
adc
jl
fidivrl
adc
jecxz
add
and
mov
push
jmp
lret
fcmovb
fwait
ljmp
pop
dec
inc
xchg
sub
sbb
rorb
scas
dec
and
les
gs
dec
insb
mov
mov
sub
mov
movsb
pop
incl
scas
aam
in
cli
sbb
cwtl
dec
pop
mov
cmp
push
out
aam
mov
mov
outsl
shlb
pusha
pop
mov
xor
cmp
inc
fildl
and
cwtl
push
imul
jno
and
xchg
add
add
mov
push
mov
xchg
scas
adc
in
test
mov
sbb
fcoml
int
fucom
sub
mov
and
call
sbb
xchg
cltd
shlb
mov
push
mov
mov
loope
fidivrl
cmpsb
pushf
fiadds
movzwl
loop
push
inc
dec
dec
jge
or
pop
ret
out
adc
sarl
scas
add
mov
or
shl
xchg
mov
mov
xchg
hlt
xor
mov
lods
and
mov
popa
sub
xchg
popf
rclb
pop
adc
push
sub
stos
enter
pop
pop
lret
shrl
rclb
into
cmp
popf
mov
pop
dec
enter
sti
xor
jg
mov
adc
lcall
popa
mov
inc
mov
cld
out
lret
push
imul
dec
sub
pop
ja
aad
jmp
loop
arpl
push
out
ret
pop
cs
xlat
sub
imul
insl
subb
push
aad
mov
out
inc
mov
mov
xchg
jmp
je
incb
mov
pop
mov
fwait
dec
push
and
fisubrl
lahf
jl
adc
push
mov
mov
loope
cmp
mov
dec
sub
shlb
push
inc
xchg
pop
cmpb
lahf
pop
mov
sbbb
addr16
push
adc
and
ret
push
insl
fisubrl
out
mov
ljmp
xor
jl
cs
das
or
in
inc
.byte
.byte
