gs
add
push
add
loopne
add
loopne
add
add
add
loopne
add
push
add
loopne
add
push
add
add
addb
add
ret
add
push
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
je
insl
inc
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
jb
jne
insb
push
jb
je
arpl
push
xor
xor
fs
insb
add
add
add
add
scas
jnp
inc
mov
add
scas
xor
insb
mov
mov
sbb
outsl
cmp
rcr
rclb
test
iret
xchg
fmuls
sub
in
pop
test
idivb
mov
mov
jb
and
xchg
fwait
and
icebp
out
nop
clc
addr16
aaa
inc
inc
dec
adc
test
mov
mov
push
bound
mov
push
negl
push
enter
iret
pop
pop
and
jg
sbb
mov
testb
cltd
or
popa
cmp
out
lret
mov
shr
int3
data16
add
xor
into
repnz
jae
and
std
scas
ljmp
mov
jnp
and
fsubrl
cmp
jmp
sahf
dec
xchg
xchg
push
cli
mov
jbe
in
jno
xor
or
ss
adc
dec
push
rcrl
clc
and
xchg
sub
in
or
int
mov
jmp
hlt
jne
mov
and
lret
sbb
mov
dec
fdivl
jle
cmp
das
xor
out
cmp
mov
mov
sbb
shl
xchg
mov
pop
mov
push
in
and
push
fdivrp
aam
test
mov
test
nop
adc
pop
xorb
fisttpll
insl
ficoms
clc
mov
and
dec
mov
inc
fadd
jno
and
andb
xchg
fcoml
mov
mov
xchg
jp
jle
mov
stc
xchg
stos
rcll
sub
ss
out
roll
xchg
and
mov
xchg
mov
mov
add
mov
flds
es
sbb
push
xchg
jl
outsb
ds
faddp
stos
hlt
test
sub
cmp
jno
lods
scas
pop
and
jl
and
dec
cmp
ret
jmp
lds
cld
into
hlt
outsl
sbb
stos
jne
push
mov
enter
stos
sbb
mov
cltd
out
aaa
fwait
jns
mov
rcr
cmp
es
adc
sahf
stc
push
loope
sarl
mov
in
jmp
imull
insl
lea
sbb
mov
inc
icebp
cwtl
mov
enter
ds
pop
mov
test
in
iret
inc
sub
cmp
cmpb
adcb
pop
in
fisubl
xchg
dec
pop
lret
hlt
xlat
push
sub
xor
notb
and
test
jb
subl
mov
sub
xor
inc
insb
mov
adc
add
aaa
mov
nop
inc
and
push
xchg
addb
adc
sbb
ret
stc
shlb
insb
inc
push
dec
push
nop
xchg
repnz
pop
inc
push
hlt
and
loop
inc
vsubss
in
jecxz
clc
cs
mov
mov
incl
cwtl
inc
mov
pop
pop
jne
pop
mov
loope
mov
gs
rcrl
das
andb
mov
cltd
push
arpl
fcmovb
sbb
lahf
int3
jne
ljmp
call
cbtw
fsubs
es
adc
ljmp
lret
in
fistl
int3
gs
aam
jae
int
dec
sbb
mov
cli
ljmp
sar
enter
fs
insb
cld
mov
test
xchg
push
in
dec
ret
orl
pop
popa
stos
bound
xchg
mov
or
inc
and
sub
jne
mov
cwtl
scas
fstl
insb
jl
adc
xchg
mov
jns
leave
adc
jge
and
ljmp
and
push
pop
jnp
cwtl
int
or
cmp
pop
cli
mov
movsl
jae
jle
cs
addb
xor
xor
mov
fisubrl
stos
in
popf
std
adc
lret
push
ljmp
in
xor
gs
nop
or
jno
lcall
movsb
stos
bound
fidivrs
inc
xchg
out
mov
lcall
loope
js
xchg
pop
push
je
push
stos
sub
lea
inc
jb
sbb
jle
add
aas
mov
xchg
fs
pop
in
inc
addr16
movsb
out
pop
sbb
and
outsl
sub
lcall
ds
fcmove
jp
cmpsb
dec
out
dec
test
jo
push
decb
mov
add
push
dec
out
cmpsb
and
sbb
out
sbb
jne
loopne
or
add
inc
jns
outsb
incb
enter
hlt
repz
mov
mov
out
pop
adc
insl
dec
int
jb
xor
stos
iret
out
adc
test
push
and
pop
ja
pop
mov
mov
pusha
test
ret
pop
cmp
sahf
and
xor
mov
inc
gs
push
mov
dec
or
enter
sti
jb
lds
pop
pop
cld
cmova
shl
dec
js
or
cmc
sbb
rol
pop
ror
jmp
out
lret
and
jl
mov
shrl
sub
in
xchg
pop
cmovs
sub
pushf
mov
cmp
push
jae
adc
daa
add
hlt
mov
lods
xchg
lea
shrl
mov
sub
pop
or
cmp
mov
leave
ljmp
sub
mov
loopne
pop
or
mov
shlb
dec
int
mov
out
cmp
pop
xlat
jnp
push
lret
mov
call
cwtl
fidivrs
movsw
sbb
stos
inc
pop
inc
xchg
sti
sbb
ret
sbb
call
mov
in
mov
loope
stos
aaa
push
jb
xchg
pop
inc
push
sarl
and
pop
jl
sbb
lcall
pop
pop
ljmp
in
pop
cwtl
mov
stos
loop
arpl
js
lret
int
inc
pushf
adc
rorb
lcall
jp,pn
inc
movsb
sub
ds
repnz
or
push
add
je
dec
imul
adc
or
outsl
icebp
out
xchg
pop
call
aad
mov
mov
xor
aas
mov
in
ja
xchg
in
dec
ret
cwtl
roll
insl
test
push
sub
shl
aad
dec
dec
xor
pop
out
movsb
mov
or
iret
jne
lea
dec
pop
int3
fs
jge
jl
fs
loopne
roll
jle
lcall
jp
subl
test
cmp
leave
jo
addr16
inc
in
xor
jns
pop
out
sahf
arpl
pop
and
clc
ja
xchg
je
mulps
add
jp
in
sbb
push
lods
adc
cld
loopne
and
dec
ss
aad
out
ja
lock
mov
rclb
leave
push
divb
cs
push
push
pop
jno
and
mov
xlat
pop
add
les
hlt
pop
outsl
jb
sti
jno
push
mov
rcr
mov
movsb
jo
push
aas
test
pushf
lret
lds
test
or
sub
inc
data16
or
or
inc
addr16
dec
adc
scas
repnz
pushf
call
jae
mov
mov
dec
std
stos
or
and
sub
mov
mov
push
testb
sub
xor
xchg
int3
hlt
push
inc
cmp
xlat
push
js
mov
test
int
lcall
movswl
ja
pop
bound
popa
push
js
rcrb
iret
jbe
xor
shr
jmp
sbb
scas
fnstsw
scas
test
jecxz
push
inc
mov
mov
push
das
sub
lcall
fdivp
aad
dec
jbe
add
mov
add
lock
es
mov
in
cmp
cmp
fwait
pop
pop
inc
test
mov
push
mov
inc
pop
stos
jb
mov
cmp
adc
mov
out
gs
mov
push
push
je,pt
add
cld
ljmp
mov
loop
sub
pop
out
sbb
popa
gs
or
mov
leave
xchg
imul
xchg
fstl
jno
add
repz
pop
mov
lret
iret
mov
lea
pop
popa
fnsave
mov
or
add
mov
pop
sarl
sub
cmpsb
pop
adcb
add
pop
and
ret
lret
in
xor
ficompl
jg
sarl
dec
push
dec
pop
jecxz
or
sbb
cmp
mulb
mov
leave
cmpl
ljmp
jae
xchg
pop
add
int
xchg
out
jp
jb
ret
iret
sub
out
lea
adc
dec
popa
or
outsl
mov
or
xor
mov
mov
xchg
push
or
mov
fs
test
jge
ss
bound
imul
ret
inc
mov
aaa
pop
inc
push
shl
inc
mov
xor
dec
sub
jns
loopne
push
dec
sub
lret
and
aaa
mov
ficoms
add
xchg
jne
sub
out
or
int
inc
cli
popf
lret
ja
xchg
inc
popa
jno
jp
inc
addr16
mov
rcrl
lods
popf
jb
rol
ret
rcrl
test
dec
jge
xchg
sub
or
inc
jbe
cmpsb
xchg
sub
dec
pop
xor
outsb
push
insb
es
ficoms
fisubrl
pop
call
out
pop
orl
xchg
jnp
cld
mov
mov
aas
aaa
je
pop
test
xor
xchg
or
addr16
ret
stos
dec
lds
inc
or
xlat
dec
lret
enter
out
popf
mov
cmpsb
xchg
out
aad
xchg
xchg
push
push
push
fistpl
ficompl
pop
mov
and
imul
faddl
mov
dec
or
add
push
dec
decb
mov
iret
insb
shl
jecxz
inc
inc
cmp
es
pop
inc
arpl
daa
hlt
jb
icebp
mov
jg
xchg
mov
mov
jne
pop
imul
adc
in
lea
shll
dec
push
pop
push
or
cmp
stos
lret
ja
cltd
out
push
cmp
daa
jo
pusha
or
hlt
jns
in
incb
xor
mov
or
mov
sbb
adc
lock
mov
in
sub
popa
bound
xorb
mov
add
push
adc
sbb
hlt
mov
subb
movl
dec
shlb
mov
arpl
scas
test
cmp
pop
pop
loope
jge
pop
iret
jge
mov
xchg
mov
sub
and
nop
iret
into
xchg
add
mov
cmp
dec
inc
xchg
ret
pusha
arpl
cmp
or
xor
ret
push
add
cltd
rclb
imul
out
mov
mov
xor
iret
dec
rep
std
sub
int
cltd
mov
pop
pop
xor
sub
test
jmp
or
xor
lret
mov
nop
or
lret
and
mov
sub
mov
pusha
stos
int
mov
cmpl
mov
push
push
in
imul
int3
mov
inc
xchg
pop
mov
jb
lret
push
xor
add
cmpsb
icebp
cwtl
fwait
inc
pop
pop
fsts
bnd
mov
push
cmp
push
dec
adc
or
call
or
pop
loop
in
dec
insb
ficompl
cwtl
rolb
dec
out
jmp
add
data16
dec
mov
sub
adc
stc
or
out
xchg
or
enter
shlb
mov
push
cld
lods
jnp
push
std
nop
cmp
cmp
cmpl
ficomps
fs
cmp
push
inc
jae
stos
pextrw
inc
in
lret
jle
stos
mov
mov
aas
sbbl
sbb
jl
shlb
into
xor
mov
jo
jge
mov
jb
lea
xchg
sbb
mov
mov
sti
adc
lret
jb
cmp
mov
jg
repnz
in
lcall
ret
out
inc
lret
fsub
or
add
dec
jbe
mov
push
push
or
fwait
jmp
mov
test
xchg
iret
fmull
cmp
mov
fwait
inc
pop
cli
lock
push
faddp
push
jmp
sub
stos
movsb
es
xchg
int
dec
fstpl
xchg
cmc
jg
outsl
inc
push
jae
in
fists
nop
sub
push
mov
inc
in
lret
adcb
out
inc
cs
cltd
xlat
adc
cmp
push
daa
mov
dec
xchg
in
xchg
sub
and
notb
mov
insl
es
pop
dec
mov
mov
push
jle
sbbb
xchg
pop
movsb
add
mov
fstpt
ss
cmpsb
and
leave
adc
ja
loop
xchg
jge
movsb
jl
cmpsl
mov
or
arpl
mov
adc
inc
test
loopne
clc
cmpsl
xor
lock
test
sahf
stos
je
daa
mov
push
int
xchg
xor
stos
mov
and
push
jmp
dec
movsl
sahf
or
adc
ficoml
pusha
stos
xchg
push
and
das
cmp
jo
daa
jl
mov
mov
sbb
clc
cmp
dec
xor
xor
stos
aad
xchg
inc
mov
jne
and
mov
adc
inc
xchg
push
pusha
dec
jae
inc
pop
mov
mov
pop
vpmuludq
pop
lods
lds
jmp
fisttpl
movsl
jecxz
out
lret
test
sbb
jnp
mov
or
push
mov
inc
pushl
cwtl
xchg
stos
inc
stc
out
jl
fnstenv
mov
aam
out
lret
inc
out
xchg
les
fs
jge
outsl
aad
xchg
mov
nop
cmp
mov
test
xor
stos
and
cmp
test
xor
xor
inc
sahf
fs
addr16
mov
mov
and
mov
pop
in
movsb
push
lds
push
sub
xor
mov
mov
sets
imul
fidivl
xchg
push
jecxz
outsb
mov
ret
rcrl
or
pop
out
adc
cmp
int3
xor
icebp
sub
and
lods
es
in
cmp
or
xchg
mov
bound
ds
outsb
cmc
sub
xchg
cltd
push
dec
enter
ret
pusha
dec
pop
pop
ret
cmp
repnz
cltd
jg
ret
pop
jns
inc
call
xchg
push
mov
jg
js
mov
cld
lahf
sbb
xor
leave
dec
into
pop
movsb
imul
lock
inc
out
jl
fimull
stos
imul
dec
movsl
push
jo
pop
pand
push
fistpll
mov
lock
xchg
movsl
inc
imul
sub
sub
push
roll
iret
dec
mov
xlat
add
pop
sbb
inc
addl
sbbl
xor
mov
add
or
fstpt
popf
mov
fidivrs
movsb
aam
sub
mov
dec
jle
mov
xor
cltd
imul
mov
jp
pop
push
out
cli
daa
dec
mov
insb
inc
push
mov
adc
outsl
sahf
push
pop
jge
jne
js
fs
pop
iret
sbb
test
sub
xor
xor
int3
lret
xchg
rcr
ffree
sbb
data16
popa
push
iret
sbb
xor
pop
call
xchg
mov
pop
in
jmp
mov
insl
in
or
adc
mov
and
mov
lahf
shlb
lds
mov
xchg
cld
xor
push
dec
mov
int3
loopne
xchg
adc
loop
mov
fs
lret
or
fildl
add
jge
ds
fcmovbe
fwait
ret
sarb
add
and
pop
movsl
or
pop
outsl
pop
sbb
js
sub
jb
mov
or
dec
lods
pushf
or
jg
sub
and
jns
dec
or
popa
add
jbe
fisubs
push
repnz
in
cmp
sbb
and
fistps
icebp
clc
loop
gs
sbb
and
xor
cmp
mov
mov
sti
clc
add
pop
sbb
imul
dec
add
sarl
fstps
gs
xchg
jmp
cmp
pop
and
in
push
xchg
nop
fs
xor
gs
mov
mov
ror
and
add
lahf
mov
pop
sbb
dec
aaa
sub
adc
cltd
mov
sub
int
in
push
ja
andl
repnz
ljmp
sub
cmp
mov
and
xor
in
add
dec
cmp
movsb
push
ds
ss
add
xchg
xor
das
bound
jp
loop
icebp
adcb
xor
lea
inc
psubb
sub
imul
sub
sbb
add
add
push
repnz
divb
push
fiadds
out
mov
adc
out
repz
push
xor
cmp
jb
jbe
nop
jge
faddl
lcall
mov
jge
xchg
or
cmc
and
add
push
push
sub
mov
push
sbb
fistpll
aaa
inc
xchg
adc
jmp
inc
scas
lods
inc
xor
daa
test
sub
ret
andb
fcomps
inc
sbb
fidivl
bound
nop
cmp
stos
shr
mov
mov
fistps
and
xchg
xchg
cli
sti
and
inc
mov
pop
or
lret
sub
dec
cmp
and
push
movsb
int3
sub
xor
mov
mov
push
dec
fs
aas
andl
pop
xchg
inc
and
pop
adc
xchg
dec
dec
or
out
in
cmp
in
repnz
xchg
das
adc
test
arpl
xchg
push
xorl
push
mov
cmp
xor
push
jle
into
lea
cli
add
mov
xchg
testl
dec
jp
pusha
js
push
jb
dec
push
inc
push
daa
movsb
leave
cmc
in
incl
rcll
icebp
test
mov
popa
jmp
push
cs
fisubrs
loopne
xor
call
inc
fstps
incb
in
sti
push
xor
repnz
fdivl
out
loop
jge
xchg
call
mov
or
stos
jecxz
imul
dec
adc
scas
inc
mov
aaa
sti
cltd
int
pop
pop
out
pop
les
push
adc
out
insl
mov
in
push
in
and
mov
pop
scas
sub
xor
loopne
push
adc
lahf
xchg
andb
pusha
and
rcrl
in
jle
sbb
insb
mov
pop
and
out
dec
out
mov
or
inc
mov
enter
xor
rcr
xorb
movsl
fbstp
mov
gs
pop
shlb
mov
and
sub
cmp
and
clc
ret
lods
cmpsl
sbb
lcall
jp
dec
xlat
idivl
int
or
sbb
mov
jg
jle
or
adc
adc
add
jge
pop
stos
or
outsb
mov
or
mov
nop
pop
cmp
or
xor
adc
pop
stos
mov
pushf
mov
mov
repnz
shl
push
xor
jb
inc
mov
call
jae
pop
fs
loopne
imul
and
adc
and
je
stos
fwait
mov
mov
cmp
lea
mov
or
xor
cmp
call
mov
sbb
dec
out
add
imulb
data16
cmpb
mov
fiadds
jecxz
mov
aad
leave
or
lahf
add
jno
push
inc
aad
sbb
cli
adc
adc
xchg
sub
mov
iret
dec
cmp
out
adc
dec
sbb
xchg
inc
jno
xchg
fprem
sahf
cwtl
dec
jb
mov
pusha
jmp
pop
mov
push
in
xchg
in
inc
cmp
ffreep
mov
push
push
scas
and
leave
mov
mov
xchg
pop
ss
lret
sub
addb
inc
mov
gs
mov
inc
push
popa
dec
xchg
pop
sub
nop
mov
dec
int
rcl
mov
movsl
nop
or
ss
add
xchg
ret
lret
mov
sub
lret
fcoms
sbb
adc
push
inc
in
mov
pop
je
jp
add
shlb
xor
out
push
out
sub
push
call
inc
in
sbb
push
shlb
addb
js
and
aas
push
cmp
out
push
sbb
cmp
shlb
cli
jbe
cmp
sub
pop
jae
pop
xlat
push
das
dec
cmp
mov
cmpsl
lds
jmp
add
xchg
xchg
inc
in
pop
jl
repnz
out
rorb
mov
sbb
xor
mov
and
cmp
or
xor
pop
fstpt
je
xor
mov
jle
inc
rcrl
mov
or
push
cmp
popf
xor
jbe
arpl
call
pop
cmp
call
pop
or
cltd
pop
xchg
mov
push
aas
mov
pop
shl
mov
or
ret
loopne
xchg
push
test
push
lret
push
adc
cs
insl
jnp
enter
scas
fiaddl
xlat
ss
inc
and
mov
push
mov
imul
sbb
or
xchg
xchg
lea
loope
xor
addr16
int3
xchg
dec
xor
jno
int3
adc
or
jno
inc
mov
imul
adc
ret
stc
xor
dec
into
xchg
in
sbb
ret
dec
sbb
dec
fimuls
sbb
xor
push
sbb
xor
inc
pop
stos
sbb
movsl
insb
fimull
ret
dec
rorb
and
les
jp
or
cli
pop
add
outsl
insb
add
pop
push
iret
mov
xchg
sbb
insl
adc
nop
ja
lcall
inc
dec
icebp
push
shrb
repnz
mov
lret
pusha
imul
cmp
sbb
jge
adc
sbb
roll
adc
rorl
xor
in
add
xchg
fmul
jae
or
pop
cld
les
xlat
xor
cmp
xchg
sbb
cmp
out
jns
cmp
add
mov
add
mov
cwtl
or
nop
test
scas
pusha
sti
mov
data16
sti
xchg
sbb
mov
cmp
iret
add
fcoms
out
xchg
ret
sbb
shr
inc
mov
jge
mov
mov
sbb
and
adc
jno
mov
sub
hlt
pop
insb
mov
xchg
xor
add
aad
sub
movsl
shlb
out
aaa
fldt
adc
push
rcr
mov
js
mov
loope
scas
or
lahf
fwait
inc
jno
inc
aas
scas
cmp
xchg
jecxz
jo
ds
nop
xchg
pop
test
dec
xchg
js
push
movsl
in
inc
fcmovb
test
stos
notb
push
inc
add
lock
adc
int
fsubr
push
dec
js
ja
push
cmp
scas
and
push
lds
sahf
cmpsl
icebp
jl
or
adc
mov
aas
iret
mov
mov
xor
ret
xor
pop
sub
insl
jge
or
cmpsl
in
jg
pop
dec
cmp
inc
cmp
orb
test
mul
jmp
xchg
cmc
mov
push
or
cmp
jbe
sub
cmp
inc
mov
push
out
loop
cli
push
lods
lds
cli
push
out
movsb
movsb
mov
outsb
mov
lret
je
bound
ljmp
out
sbb
pushl
scas
insb
es
rcl
dec
jns
icebp
movl
pushf
ja
add
push
jnp
cmp
ret
out
xchg
jle
jnp
iret
repnz
je
mov
mov
sbb
or
outsl
aam
push
test
mov
inc
arpl
jno
push
jmp
push
jecxz
movsb
repz
arpl
mov
cmp
cmp
inc
imul
mov
and
xchg
lock
shrb
cmp
cmp
ljmp
jbe
loop
dec
mov
fidivrs
pop
cltd
clc
jno
cmp
fwait
mov
or
cld
cmp
dec
cld
jb
lock
out
push
insb
and
sbb
push
cmp
sub
ficoms
arpl
jl
or
push
lods
outsb
data16
lock
mov
push
aad
into
cmc
sbb
xchg
and
pop
das
aas
push
incb
push
pop
adc
mov
in
insl
les
mov
pop
movsb
lcall
inc
push
push
mov
jne
cmp
dec
addr16
les
cs
add
pop
setle
inc
adc
mov
mov
push
cmc
push
pop
arpl
push
fdivrs
clc
jmp
not
add
pushf
clc
push
outsl
in
jg
inc
decb
xor
rclb
and
inc
jno
sbb
mov
dec
adc
das
push
jle
push
fisubs
xchg
push
movsb
sbb
xor
iret
cltd
inc
dec
sub
aaa
cmp
mov
sahf
gs
mov
mov
test
push
roll
sbb
outsb
imul
cmpsb
das
lahf
rcr
daa
or
pop
adc
mov
sbb
dec
lds
xchg
negb
cs
pushf
mov
cmp
pop
cmp
and
xlat
hlt
xor
cli
nop
push
iret
cmp
loopne
or
mov
scas
clc
jns
push
rclb
daa
xchg
mov
mov
sub
scas
lds
into
icebp
cmpl
dec
cmpsb
loope
mov
mov
ss
mov
adc
mov
adc
xchg
es
inc
jmp
and
jl
fwait
or
rorl
loop
xchg
test
push
pop
lock
push
sub
daa
ret
in
shll
repz
sbb
push
mov
cli
in
lock
add
mov
int
popa
push
imul
dec
jbe
pop
adc
mov
repnz
iret
push
out
rcl
sbb
ja
jnp
add
sbb
test
push
add
popf
jl
adc
inc
cmpl
pop
pop
je
xchg
outsl
dec
xchg
jnp
sub
int3
call
mov
adc
aam
aad
addb
popa
xchg
or
or
add
je,pn
lret
xchg
mov
inc
xchg
dec
xor
data16
and
and
add
jmp
cmpsl
dec
cs
and
es
dec
sti
ja
sbb
cltd
sbb
pop
pop
ljmp
imul
js
push
push
gs
cmp
into
movsl
xor
adc
pushf
mov
inc
jle
mov
sbb
push
push
mov
out
test
pop
fbstp
and
cs
jecxz
jmp
mov
mov
mov
pop
push
test
inc
ss
dec
fwait
mov
sub
pop
dec
xchg
inc
or
std
stc
xor
adc
out
jl
and
cmpsl
inc
mov
cli
sahf
xchg
out
jae
push
xor
cltd
pop
and
jp
addr16
cwtl
sbb
push
sbb
popf
outsl
jp
mov
xor
add
or
jns
js
int3
inc
insb
lods
loope
or
lock
xlat
pop
fs
push
push
fcmovne
test
adc
pop
adc
jo
fsubrp
out
jns
jl
sub
and
shlb
jge
das
hlt
sbb
fcompl
stos
cmp
clc
mov
lahf
in
or
pop
lods
mov
push
fadd
and
shlb
mov
les
add
pusha
popa
fs
jo
stc
test
mov
xor
out
push
pop
dec
sbb
add
aad
js
ss
orl
addb
imul
dec
sub
adc
fisubs
add
xor
or
mov
cmp
shll
imul
add
fnstcw
mov
loope
xlat
je
pop
enter
adc
ja
shl
enter
mov
push
out
ret
data16
cmp
js
in
add
sub
outsl
xchg
test
in
mov
jl
inc
and
cmp
xor
push
jle
pusha
dec
xchg
lcall
std
scas
sub
leave
cmc
ss
lds
repnz
jp
mov
stc
xlat
jne
xor
int3
rep
sub
ss
mov
cmp
mov
and
pop
sub
imul
aaa
call
out
incl
or
vandnps
test
dec
loop
mov
into
cmpsb
loope
adc
push
push
or
xchg
stos
dec
cmpsb
dec
push
push
push
sti
not
stos
adc
jecxz
repnz
xlat
pop
jnp
clc
mov
adc
out
outsl
in
jo
scas
mov
fwait
xchg
mov
dec
scas
sub
in
pop
sbb
push
shrb
mov
xchg
mov
inc
in
inc
js
mov
adc
or
mov
add
mov
mov
sbb
stos
fdivl
js
hlt
shrl
mov
dec
ficomps
shll
or
add
pop
sbb
sub
ja
pop
nop
jne
sub
imul
cmp
lcall
xor
or
out
xor
rcl
jle
lods
ret
icebp
inc
ret
out
sbb
leave
test
inc
fdivl
sub
inc
cmp
in
data16
out
cmc
pushf
dec
out
mov
jne
cli
xchg
inc
push
add
add
rol
outsl
cs
jo
lds
xchg
sub
hlt
shrl
dec
stos
cmp
into
inc
xor
rcrb
outsl
fs
pop
insl
and
addl
pop
aas
mov
aad
fcomip
lahf
daa
mov
das
sub
xor
into
sbb
outsl
mov
xlat
pop
ds
mov
jb
mov
xchg
in
pop
sub
add
fmul
pop
jmp
enter
cmp
fcomp
push
icebp
push
andb
lret
ficomps
push
xor
mov
lcall
rcrl
in
call
andl
sti
mov
pop
mov
aad
or
and
xchg
inc
push
fwait
mov
imul
pop
lea
xchg
lcall
push
movsl
lret
dec
mov
pop
adc
in
xor
cmp
push
xor
fwait
jge
repz
sub
in
aam
aad
adc
imul
push
sub
dec
xor
cmc
inc
sbb
lea
jecxz
push
lahf
repz
push
pop
lret
mov
mov
lods
loop
into
in
sti
cltd
out
cmp
call
aam
jmp
cltd
push
ljmp
xchg
xchg
je
inc
stos
sti
js
inc
mov
out
pop
xor
sub
loopne
arpl
pushf
xchg
mov
or
add
mov
cmpsb
test
int3
sbbb
pop
pop
fldpi
adc
cmpsl
cltd
sbb
jno
stos
or
sbb
scas
nop
pop
cmp
mov
add
inc
dec
stos
fidivl
push
stos
mov
pusha
hlt
mov
ret
pop
mov
xchg
jns
sbb
std
push
jne
pop
rcrb
inc
dec
add
push
div
popf
sar
and
pop
jle
icebp
adc
jbe
pop
jecxz
push
mov
push
mov
and
scas
xlat
ds
cwtl
push
outsb
gs
fwait
mulb
jg
idiv
cmpsb
add
add
adc
pop
jnp
push
mov
sub
cmp
out
mov
popl
js
aas
cmp
setnp
jne
sbb
pop
mov
stos
cmp
out
scas
cmp
sti
sbb
js
dec
adc
mov
mov
adc
adcl
insl
mov
xchg
mov
fwait
mov
clc
sbb
and
sub
jecxz
xchg
les
push
add
paddsb
ret
add
ss
aaa
std
sub
push
fmuls
filds
sub
push
jle
lret
inc
jae
pop
ss
js
add
mov
sub
sbb
idiv
les
xchg
sub
icebp
dec
out
push
in
pop
add
enter
fisttps
cmp
or
nop
sbbb
test
idiv
imul
movsl
imul
mov
sub
cmpsl
pop
sub
and
test
or
and
cmp
ljmp
stos
and
push
ja
test
ss
icebp
out
sub
adcl
imul
push
add
aas
pop
andl
mov
stos
ds
pusha
xchg
ficomps
aam
jae
xchg
sub
cltd
adc
adc
or
sub
xor
shll
out
sbb
cmp
aaa
in
arpl
xchg
push
lea
mov
lods
inc
ficoms
iret
mov
fistpll
cltd
fcom
jb
stos
int
xlat
xchg
jmp
inc
decb
push
daa
push
ds
incl
add
jb
xor
xor
gs
hlt
mov
in
dec
xor
pop
out
pop
xchg
pop
lods
scas
xchg
push
dec
jb
add
xchg
test
adcl
ret
mov
cmp
xlat
push
xlat
test
mov
les
test
int3
inc
movq
cmc
sub
popf
ret
xchg
mov
xor
loop,pn
xor
aad
jns
dec
nop
mov
sbb
adc
int
xor
js
leave
repz
sub
push
or
inc
cli
fildl
gs
cmp
push
mov
fstpl
mov
jae
mov
inc
ret
push
or
jmp
fimull
xchg
cmp
in
rclb
fidivrs
push
stos
jbe
adc
cmpsb
fisubrl
andb
data16
sarl
add
dec
divl
jle
or
sbb
sbb
test
jmp
fnstenv
loope
rorb
push
ss
pop
cmp
pushf
outsl
mov
mov
inc
or
popf
jp
inc
cld
xor
mov
add
mov
mov
out
push
popf
outsl
mov
icebp
cmp
mov
cmp
dec
xor
lods
fs
mov
dec
hlt
shlb
jns
shlb
andb
inc
and
mov
cmp
fscale
mov
stos
ds
mov
call
and
popa
fimull
mov
add
xor
pop
xorl
lods
pop
call
les
jnp
inc
rolb
dec
mov
mov
dec
push
push
or
jnp
and
or
jl
mov
imul
jg
aaa
add
jmp
xchg
cmp
aam
xor
sbb
mov
adc
shrl
inc
icebp
cltd
aaa
cli
aad
std
lret
fadd
cltd
dec
xchg
adc
call
sbb
iret
or
add
sar
push
shr
adc
mov
push
rdpmc
inc
push
xor
fisttpl
imul
jecxz
hlt
cld
clc
cmc
or
cmp
outsl
and
ljmp
add
ret
aad
jmp
jns
out
cs
dec
xchg
ss
or
scas
ret
rcrl
lret
ret
stos
ss
addb
rcr
cmpsb
daa
cmpb
in
sbb
mov
sub
jmp
add
cli
repz
clc
cmp
out
or
imul
sbb
icebp
test
adc
lea
stc
dec
rcrl
dec
xor
leave
popa
pop
mov
xchg
pop
int
sarl
mov
cmp
outsl
mov
xchg
test
xorl
mov
mov
adc
pop
enter
cmp
test
ror
fmul
movsl
test
jno
mov
mov
mov
movsl
and
ror
add
nop
pop
int
cmp
out
rorb
mov
push
pop
push
jnp
push
mov
mov
dec
pop
pop
aam
test
cmp
cwtl
das
test
sbb
and
cmp
mov
ss
nop
lcall
dec
push
stc
into
inc
jg
adc
std
xor
andb
jg
loop
rol
push
adc
iret
sahf
call
jns
sub
js
xchg
cmpsl
clc
les
test
adc
insb
mov
icebp
sub
sub
sub
in
jne
mov
andb
jmp
push
loopne
add
mov
fstp
movsl
test
push
inc
cli
push
cs
imul
lcall
mov
mov
mov
push
jecxz
mov
ss
mov
cmpl
cli
xor
sti
sub
lea
mov
lcall
jo
jp
stc
stos
gs
mov
xor
jmp
dec
leave
out
ss
sub
jb
stos
imull
and
imul
lods
fsub
sar
pop
sub
subb
cmpsb
in
mov
movb
out
iret
lea
xlat
sub
jne
cmc
sub
sbb
nop
and
sub
movsl
pop
lock
sub
add
push
test
sbbb
subb
or
ljmp
repz
gs
aas
les
mov
adc
stos
and
hlt
jne
pop
or
sarl
push
pop
enter
add
ret
in
mov
mov
mov
incb
fcmove
jl
lock
pop
add
out
stos
sahf
fmuls
les
mov
int
lock
adc
sbb
mov
and
mov
ss
in
movsb
xchg
cmp
ja
test
pop
gs
xor
sub
add
ret
push
and
loopne
adc
xchg
cmp
pop
xchg
mov
gs
jg
pushf
aas
scas
pop
mov
js
lods
test
ljmp
sub
lods
lahf
repnz
imul
jnp
or
scas
add
stc
cmp
ret
jnp
repz
or
sbb
cmpsb
sbb
pop
lds
xlat
cmp
xchg
mov
outsl
xchg
insl
addr16
mov
adc
cmpps
mov
sbb
mov
mov
add
inc
aas
leave
jno
mov
or
inc
into
jecxz
inc
pop
arpl
mov
pop
mov
mov
mov
push
lcall
fsubrs
xchg
rcr
xor
mov
lods
mov
data16
sar
mov
inc
adc
push
std
ja
and
cmp
xchg
xlat
pusha
call
int3
sub
pop
sti
adc
in
das
cmp
repz
sahf
jmp
lcall
dec
push
mov
daa
out
lcall
outsl
jmp
sub
cmpsb
cmp
cltd
scas
sbb
cld
inc
xchg
push
std
push
mov
int
gs
add
insb
data16
cmpsl
test
dec
shrl
adc
jae
jmp
and
fadds
fwait
popa
mov
mov
or
daa
mov
xchg
mov
xchg
sbb
mov
pop
in
dec
mov
dec
scas
or
out
pop
aad
mov
mov
pop
andb
aaa
inc
push
gs
and
repnz
adc
insl
movsl
cli
bound
notl
mov
fwait
xorl
ds
repnz
enter
ljmp
popf
out
test
mov
scas
fistpll
fldenv
jg
movsl
mov
mov
in
xorl
out
dec
cmp
subl
mov
sub
outsl
es
mov
push
cld
jnp
push
out
frstor
pop
mov
sub
jbe
jg
mov
pop
sub
insl
dec
fstpt
sbb
lods
push
pop
iret
jno
fwait
scas
ficompl
mov
xchg
cs
movsb
jecxz
adc
stc
test
fwait
mov
mov
bound
xchg
cmc
aam
fdivrl
mov
xchg
jno
lcall
mov
out
inc
fbstp
dec
xchg
pop
loope
mov
sbb
dec
lea
dec
stos
mov
add
ficomps
fsts
push
data16
xlat
add
lcall
xor
mov
scas
repz
push
lea
dec
fstl
inc
xor
push
mov
cmovnp
push
gs
jo
xor
mov
nop
enter
sub
dec
rorl
ja
mov
sub
sbb
mov
out
mov
inc
cmp
pop
jnp
xor
sub
mov
cwtl
add
pop
inc
sbb
mov
imul
jo
push
mov
pop
lret
sub
jae
je
cltd
loop
pop
mov
and
lock
lea
ss
fisubs
lock
add
dec
arpl
push
repnz
mov
mov
dec
scas
jge
mov
jae
jecxz
inc
adc
and
lods
push
mov
aam
xor
in
in
xor
ljmp
lahf
fimuls
dec
testb
add
cmpsl
sahf
scas
gs
dec
cmpsl
and
mov
cltd
cmp
pop
fcmovu
mov
add
frstor
bound
xor
inc
setnp
and
dec
inc
dec
xchg
xlat
add
add
inc
xchg
or
int3
push
xor
fldt
xchg
lods
shll
add
lock
xor
hlt
in
mov
sbb
dec
pop
jmp
xor
sub
and
out
dec
lret
or
or
mov
lret
inc
lock
mov
sbb
jle
subl
jnp
outsl
lock
subl
jecxz
rorl
out
movsl
pop
popf
aam
jnp
inc
aad
add
and
sbb
aas
stos
call
aam
dec
adc
into
jnp
push
mov
test
fisubrs
jle
push
inc
cwtl
mov
lea
push
jae
call
jno
or
xchg
mov
dec
xor
dec
std
stc
lcall
test
scas
jge
sub
leave
xchg
and
mov
jmp
and
aam
jg
mov
mov
pop
and
sti
int3
nop
int
lret
icebp
push
rol
dec
lods
mov
mov
sub
xchg
jmp
xor
imul
jno
call
jnp
scas
daa
lcall
call
pop
outsb
mov
xchg
mov
es
cmp
sbb
fsubrs
adc
pop
or
xrelease
outsl
fisttps
outsl
mov
out
push
je
leave
shll
jb
cmc
cmp
sbb
mov
fucom
mov
sti
mov
jns
xor
xchg
mov
and
das
mov
pusha
je
testb
pop
and
xlat
push
stos
imul
sub
movsl
fcompl
mov
xchg
or
push
mov
xchg
ss
mov
ds
or
add
addr16
sahf
enter
shr
mov
and
shrl
inc
andl
or
inc
pusha
xchg
jnp
cmc
and
mov
jo
subb
clc
and
add
mov
out
out
push
xchg
jp
add
into
jns
loop
sbb
sbb
test
add
ss
push
aas
add
mov
call
out
mov
pop
les
loope
push
push
add
sub
or
dec
mov
lock
notb
iret
dec
mov
cmpxchg
mov
fildl
ljmp
imul
sahf
fcmovnu
jge
loope
sub
jle
lret
loop
push
dec
shrb
sti
sub
insl
jle
pop
repz
push
jae
or
and
and
inc
cmc
or
es
and
mov
add
jne
or
neg
movsl
mov
xchg
loop
dec
push
xchg
sub
dec
or
inc
mov
mov
push
aas
in
test
dec
bnd
and
rol
cmp
out
movb
push
sahf
arpl
dec
icebp
in
xchg
jg
xchg
andl
addb
daa
les
lea
out
jno
pmaxsw
mov
test
andl
sti
jae
mov
lret
xor
mov
in
ret
push
sub
es
imul
sbb
movsl
leave
adc
mov
and
aam
flds
in
pop
xor
shr
jle
add
in
cs
movsl
shll
push
outsl
xor
ret
sub
pop
pop
jns
mov
xchg
clc
rcl
fcoms
pop
insb
shrl
insl
in
cmp
pop
popl
je
daa
xor
scas
out
fbld
inc
and
idivl
aad
sub
outsb
pop
pop
cwtl
ljmp
pop
xchg
dec
xor
mov
pop
push
dec
dec
lock
cmc
shlb
pop
xor
mov
jle
and
hlt
mov
scas
push
push
or
dec
sub
push
pusha
pop
jge
ss
push
int
add
xor
adc
push
lock
cmp
int3
call
adc
sbb
sbb
pop
stos
cmp
fs
adc
jmp
adc
jp
cld
push
and
sbb
popa
dec
mov
cld
test
xor
cmp
incb
insl
mov
dec
hlt
inc
imul
jg
adc
jns
cmp
push
data16
and
sub
push
loop
inc
and
mov
lea
sub
inc
sbb
or
pop
adc
xchg
jnp
loope
out
sbb
lahf
outsb
rol
xchg
inc
xor
xor
loope
mov
insl
cwtl
stc
pop
leave
adc
mov
mov
sub
sub
dec
mov
or
das
jle
and
in
fiadds
mov
push
jnp
pop
iret
adc
jle
js
mov
icebp
scas
pushf
stc
unpcklps
sub
mov
mov
lcall
in
test
lock
popa
mov
sbb
cmp
jge
ret
and
push
add
movl
xchg
out
mov
sbb
out
and
shr
lods
pusha
xor
rcrl
pushf
dec
xchg
pusha
mov
push
out
adc
lret
lcall
add
incl
push
jns
inc
push
mov
lock
or
jne
imul
push
pop
and
mov
je
in
repnz
ret
sub
aaa
ss
jno
hlt
pusha
leave
add
cltd
cs
in
add
pop
ss
cmpsl
xor
popf
inc
aas
inc
dec
ds
lea
dec
and
clc
cwtl
push
add
push
fdivl
pop
add
mov
xor
lods
test
rolb
adc
ret
mov
push
sbb
scas
sub
mov
add
mov
in
xchg
add
ja
xor
pop
lret
cmpsl
jle
xchg
and
test
rorb
xchg
pusha
mov
stos
mov
xchg
pop
arpl
pop
imul
pop
or
pop
lahf
or
pop
or
aaa
cmc
fwait
pushf
leave
inc
dec
xor
fiaddl
xchg
add
cmpl
dec
adc
aas
addr16
in
xor
lds
sub
int3
ja
jg
jmp
je
adc
and
adc
lahf
lods
lods
cmc
testl
mov
call
or
mov
dec
mov
pop
pushf
mov
push
cmpsb
mov
or
imul
and
push
mov
imul
lea
xchg
push
fwait
iret
mov
mov
mov
icebp
mov
ljmp
or
das
and
xchg
shl
and
imul
or
push
movsl
adc
leave
imull
js
xchg
and
cmpsb
je
std
aas
ror
icebp
sub
sub
pop
xchg
mov
sub
fcmovnu
jnp
ds
pushf
leave
inc
leave
cli
push
push
dec
lahf
dec
mov
xchg
inc
pushf
ljmp
mov
lret
dec
mov
xchg
fsubrl
stos
jo
int
out
mov
sahf
cmc
scas
outsb
add
lea
roll
call
jno
aaa
mov
adc
popa
mov
iret
into
mov
pop
sahf
pop
cwtl
scas
pop
std
xorb
mov
imul
adc
cmp
std
das
xor
stos
leave
les
pop
sbb
das
and
xor
cli
push
jb
sbb
and
mov
cmc
pop
cmp
xchg
test
sbb
addr16
cmc
testl
adc
dec
sbb
lods
call
gs
dec
ret
inc
repz
clc
xchg
ss
jno
subl
xchg
lods
test
push
scas
scas
imul
enter
subb
inc
leave
ljmp
call
andb
in
or
lods
div
xchg
xchg
insb
jecxz
je
push
syscall
test
adc
and
mov
pop
mov
mov
arpl
rcll
mov
sub
arpl
lock
add
adc
ljmp
inc
rcrb
cltd
out
dec
ss
sub
js
inc
std
mov
rcr
fsubrl
add
fs
popa
ret
fmull
xor
loope
rcll
aad
repz
ss
pop
add
popa
mov
shll
roll
out
repz
fucomp
mov
inc
fnstsw
leave
and
jns
cmpsl
nop
fwait
xchg
mov
sbb
mov
sti
int3
jmp
test
pop
or
iret
pop
testl
es
jl
push
jb
mov
aaa
fwait
icebp
dec
out
ret
push
cmp
lret
inc
xchg
call
sarl
sub
scas
push
test
mov
or
std
adc
push
adc
mov
sub
arpl
js
mov
lock
loope
fwait
das
jae
sbb
scas
fsubl
xchg
lea
iret
adc
outsl
push
fnstsw
icebp
cmc
aad
bound
repz
push
out
mov
mov
scas
arpl
in
push
out
add
jp
in
ret
push
jno
and
movsl
push
inc
sbb
mov
push
dec
rcll
sub
fcoml
or
pop
rcrl
icebp
pop
push
sti
bound
mov
je
popa
add
adc
imul
insb
and
inc
ds
pop
ret
push
or
adc
js
cmpsl
jno
dec
in
test
lret
and
leave
push
je
fsubp
cmc
cmp
dec
xor
popa
leave
sub
mov
pop
sti
mov
dec
fdivr
mov
and
sbb
in
xor
shl
add
or
push
cwtl
in
insb
mov
add
inc
shlb
cmp
push
clc
ret
notb
das
mov
fstpt
mov
xchg
mov
sub
xchg
lods
inc
fistpll
outsb
inc
dec
movsb
jns
jne
sub
pushf
add
js
negl
cmp
pushf
fisttpll
fwait
xchg
mov
dec
call
mov
stos
shrl
push
arpl
cmp
nop
xorb
ficoml
mov
sbb
sbb
push
add
les
sbbl
je,pn
outsl
lods
inc
and
dec
sub
dec
aad
call
mov
cwtl
daa
mov
lret
mov
mov
repz
int
sub
mov
je
and
loope
dec
in
movsb
jbe
nop
imull
clc
mov
aam
fmull
aaa
sbb
add
inc
outsb
sti
push
adc
and
or
dec
jb
in
loop
dec
push
adc
pop
popf
out
ret
xor
sahf
dec
sub
push
sbb
hlt
mov
imul
push
imul
scas
jg
sub
ljmp
sub
mov
push
jmp
out
sbb
pusha
jl
leave
and
mov
push
insl
jb
lret
and
pop
and
imul
sub
mov
jae
fstps
xlat
pop
inc
rcrb
mov
popa
arpl
rcrb
jl
aad
add
adc
sti
mov
jbe
push
jg
pop
mov
stos
ss
pop
lahf
cmpsb
pslld
dec
add
test
mov
xchg
push
mov
mov
in
xchg
inc
mov
sub
mull
clc
pop
sub
xchg
popf
cmc
xchg
imul
and
dec
jns
xchg
pop
stos
hlt
das
jle
in
ja
dec
and
xchg
stc
jmp
jmp
js
dec
push
xchg
sbb
leave
and
das
movsl
arpl
adc
lds
push
mov
mov
mov
push
or
xlat
add
test
mov
decb
cmp
lods
aad
inc
jae
insb
bound
xor
and
xchg
bnd
popf
xchg
pop
mov
out
in
pop
idivl
js
into
xlat
add
add
dec
in
push
flds
mov
xchg
adc
test
inc
lahf
and
popa
mov
ds
inc
cmp
pop
pcmpgtw
push
iret
sarb
and
in
mov
inc
xor
xor
or
mov
cld
sbb
dec
pop
fstpt
shll
jae
cmpl
clc
xor
cmp
sub
mov
adc
fisubrl
das
leave
push
mov
or
fdivrp
test
mov
les
rcl
je
and
sbb
push
mov
pop
clc
sbb
pop
xor
cmc
in
mov
pop
adc
sti
pop
jo
stos
fsubrs
add
nop
test
add
and
jge
imul
jg
ds
mov
andb
or
cli
outsb
stos
add
xor
pop
mov
cmp
sbb
sub
ficoms
scas
test
repnz
lcall
enter
in
and
idivb
loope
ljmp
add
ljmp
and
add
inc
lock
xlat
repnz
mov
push
lahf
mov
rep
aaa
sub
orb
push
cmp
sub
dec
shll
sub
pop
mov
push
mov
stos
mov
and
xchg
sub
dec
mov
loopne
lret
jne
xlat
inc
dec
popa
cmc
cmc
fnstsw
jnp
inc
out
in
arpl
bound
or
push
xor
cvtps2pd
add
aaa
popf
xor
dec
mov
stos
lock
sub
pop
push
jae
loop
xchg
xchg
insl
jo
lahf
push
sub
and
mov
aad
xor
enter
jnp
fst
pop
lods
in
inc
divl
out
aas
pop
sbb
out
js
inc
mov
mov
movsb
sbb
xor
push
lds
sub
jecxz
lea
push
hlt
mov
rcr
jmp
add
pop
and
bound
adc
jbe
xchg
mov
ficoms
inc
aaa
in
sub
popa
mov
imul
xchg
dec
inc
in
jae
pop
mov
mov
movsl
jmp
imul
xchg
ss
and
lods
adc
pop
add
cwtl
and
mov
dec
mov
push
nop
inc
xor
ljmp
stc
sbb
and
adc
cli
addr16
fsts
xchg
sbb
je
cmp
movsl
pop
rolb
dec
or
ja
or
xchg
cmp
cld
movsb
xor
inc
or
jg
xchg
gs
out
sbb
adc
dec
jno
cwtl
fiadds
xchg
mov
xor
push
clc
xchg
stc
push
jmp
pop
jmp
ss
scas
ds
dec
sahf
faddl
arpl
xchg
scas
int3
sbb
mov
inc
push
imul
mov
jmp
jle
xchg
and
ja
call
div
or
add
pop
xorb
lcall
adcb
pop
dec
repz
addr16
ja
pavgb
mov
in
cmp
js
jle
fldenv
inc
jno
fcom
es
fisubl
push
sub
sahf
notb
jecxz
jnp
jge
mov
jle
jecxz
movsb
or
xchg
call
mov
call
stos
aaa
inc
adcb
xor
fmuls
and
rclb
mov
or
jecxz
sahf
inc
pop
and
cmpsl
mov
xchg
jbe
fnstsw
mov
add
mov
sub
into
and
shlb
mov
sbb
adc
jbe
jecxz
mov
dec
mov
js
mov
or
pop
les
mov
flds
pop
mov
and
pop
dec
push
daa
lock
pushf
aas
adc
lods
loope
xor
or
adc
mov
sti
mov
mov
inc
jns
rolb
push
pop
lret
pushf
js
icebp
mov
addr16
or
shrl
push
pop
pmullw
xchg
idivb
xor
lcall
xchg
out
fld
outsl
repnz
mov
lcall
scas
sbb
pop
mov
mov
inc
bound
sub
and
xor
and
stc
inc
sbb
ret
push
mov
lods
lahf
insl
jl
inc
pop
xchg
inc
addr16
and
push
inc
or
adc
call
dec
sbb
loopne
rolb
jno
pop
mov
loope
stc
jmp
xchg
xchg
pusha
jae
fnstsw
add
cltd
pushf
sub
mov
and
jmp
bound
jb
out
hlt
add
jmp
push
fcmovbe
rorb
je
mov
icebp
sarl
mov
out
imul
cmpsl
loopne
xchg
clc
pop
sub
call
sbb
in
aam
mov
out
jge
out
dec
sbb
ds
and
hlt
dec
push
push
pop
lcall
fadd
inc
subl
jb
lods
push
hlt
xchg
arpl
inc
scas
mov
fistl
shrl
add
mov
cmp
and
add
cmp
mov
push
adc
insb
out
fistpl
inc
imul
not
out
shrl
inc
femms
das
aam
ja
add
push
xor
cmp
mov
mov
scas
jns
inc
aaa
pop
outsb
inc
cmp
rorl
gs
adc
test
stos
cwtl
pop
push
sti
test
lds
es
sub
pushf
ss
sub
out
fcoml
repnz
xchg
xor
ret
data16
push
out
sbb
xchg
es
fidivrl
shlb
insb
addr16
insl
sbb
fsubrs
stc
xchg
mov
inc
dec
loope
ret
jno
cli
pop
repnz
cmp
test
sub
sub
ret
mov
movsb
push
sbb
fxch
sbb
lcall
les
adc
and
sbb
inc
hlt
adc
xchg
xchg
mov
cmp
or
and
shl
lds
pop
inc
adc
mov
or
xchg
adc
testb
adcb
sbb
pop
xchg
add
mov
xlat
lret
mov
inc
cmpsl
mov
sub
cmpsb
mov
pop
mov
mov
sub
push
lods
jl
jecxz
xchg
add
pop
or
mov
rolb
and
adc
cmp
loop
xor
mov
rcrb
call
pop
push
lock
mov
sub
cmp
inc
iret
imul
adcl
clc
push
push
sbb
das
in
adc
push
push
dec
dec
sub
lahf
gs
add
shll
int
rol
jno
sbb
sbb
psubq
xchg
int
xor
fdivrl
sbb
sub
push
sub
add
sub
andb
lods
clc
inc
pop
int3
push
insl
es
movsl
inc
out
jns
dec
subb
pop
jp
sbb
xchg
sbb
xor
shlb
out
sub
in
xor
cmpsl
xchg
push
jne
cltd
cmpsl
sti
jae
lods
roll
inc
mov
cmp
daa
int
push
aas
pop
clc
adc
or
and
test
xor
pop
jo
mov
mov
out
int3
xor
popa
fdivrs
test
dec
dec
xor
or
add
jl
jg
icebp
jo
jmp
call
xchg
daa
jmp
stos
cmp
pop
inc
inc
push
push
shlb
xchg
aad
sub
mov
jl
cs
xchg
add
or
pop
insl
fstpl
in
js
es
pop
adc
xor
sub
jl
mov
fildll
lahf
fcmovnbe
sbb
lds
test
sbb
add
and
mov
pop
cmp
jp
mov
push
test
and
fidivrl
mov
mov
mov
xor
data16
ds
stos
sbb
lock
push
cmpsl
cs
inc
cmpsb
mov
into
rcrb
and
inc
and
lret
dec
xor
jnp
jmp
sbb
fimull
ret
test
test
adcl
sti
jns
add
es
adc
cli
dec
bound
push
daa
ret
sub
shlb
daa
and
inc
cmpsl
push
data16
loope
xor
mov
scas
pop
or
stos
out
aas
outsl
popa
popf
adc
adc
sbb
sub
xchg
push
pop
popf
jno
push
sti
pusha
lret
push
stos
stos
idivb
sub
imul
insl
lea
out
sub
sub
repnz
sub
insb
and
mov
push
cli
sbb
inc
mov
divb
dec
xor
pop
pop
stos
adc
fisttpl
shrl
lds
out
inc
push
inc
imul
cltd
bound
addl
xchg
fstp
adc
dec
sbb
cwtl
add
js
shrb
xchg
aam
jbe
dec
add
sbb
sbb
xor
stos
test
stos
cmpsl
lret
test
jl
xor
xchg
stos
push
sub
movsb
lcall
mov
imul
movsl
iret
inc
fisttpll
icebp
sub
jge,pn
fmulp
les
cmp
aaa
in
jne
mov
repz
ds
inc
pop
ret
pop
add
cli
ds
movb
inc
and
add
out
xchg
jae
cltd
cmp
test
aam
out
pop
stc
mov
rcll
mov
cmp
das
in
test
test
das
sbb
sub
cltd
sub
arpl
cmp
adc
mov
jecxz
pushf
jno
cmc
stos
out
movsl
jbe
std
mov
movsb
cmp
and
ret
and
repnz
rcr
sub
pusha
sti
pop
cmp
sbb
cmp
cs
xor
jno
lahf
mov
add
or
orl
cs
arpl
out
daa
jbe
pop
testl
test
pop
jnp
push
mov
or
inc
mov
ret
or
cmpsb
stc
mov
iret
pusha
dec
mov
xchg
dec
cli
dec
dec
or
cmpsl
sbb
scas
into
enter
mov
jnp
pop
cli
pmulhuw
inc
cmpsl
push
dec
adc
xchg
js
ror
xor
push
repz
pop
dec
xchg
imul
inc
iret
add
stos
add
pushf
icebp
sbbl
cmp
pop
mov
pop
lods
xchg
in
push
and
out
mov
cmp
ds
push
jg
mov
popa
nop
sbb
daa
addr16
cmp
xchg
and
les
push
xchg
mov
in
pop
cmpsl
push
pop
js
push
fadds
mov
mov
sbb
aam
fsts
dec
sahf
adc
and
into
lahf
out
movsb
cmp
fs
loope
jo
jl
jmp
jmp
pop
idivb
out
push
pop
movsb
inc
mov
xor
mov
lock
lods
cmp
mov
rcrl
jae
jecxz
ret
inc
ret
pop
push
mov
orb
inc
inc
mov
mov
loop
lea
mov
into
ret
rcll
notl
add
mov
xor
mov
sbb
sub
mov
dec
push
movsb
mov
or
cmpsb
add
jne
in
mov
mov
int3
int
adc
stos
jno
stc
or
inc
test
adc
mov
inc
push
pop
jb
cs
stos
push
testb
dec
add
mov
push
cmpsl
mov
fisttpl
call
inc
cmp
and
mov
scas
loop,pt
pusha
cmp
add
or
outsl
std
xor
add
or
dec
mov
cmc
cltd
xchg
jmp
shll
add
inc
push
les
int
adc
jmp
pop
out
push
pushf
or
push
adc
pop
cmpsb
xor
gs
xchg
mov
adc
or
jb
mov
mov
sbb
into
nop
mov
xchg
jbe,pt
sbb
mov
jecxz
out
lods
push
jp
decb
loope
or
dec
into
in
xchg
test
aad
decl
mov
daa
cmc
mov
leave
inc
iret
sarl
sub
inc
mov
sti
and
dec
inc
fstpt
or
mov
sub
mov
add
add
pop
repz
xchg
out
test
jnp
int3
mov
and
imul
push
movq
movsl
cmp
call
pusha
jg
adc
mov
push
dec
inc
inc
sub
pop
inc
insl
stos
pop
push
inc
pusha
les
and
aad
adc
ret
stos
inc
stos
or
and
out
xchg
inc
sar
lock
mov
test
outsl
push
mov
stos
mov
inc
cmc
bound
and
pop
xchg
stc
mov
or
insb
mov
dec
lret
cli
mov
dec
inc
and
notb
jmp
stos
jno
add
les
or
int
hlt
imul
dec
inc
int
push
jmp
sub
int3
shufps
data16
sub
and
xchg
rcll
rol
clc
mov
push
sub
adc
xor
cmp
sbbb
lds
or
fmuls
cmp
nop
fsts
cmp
loopne
mov
mov
outsb
sub
and
inc
push
pop
or
add
pop
sub
pusha
mov
stos
xchg
mov
decb
mov
cmp
push
pop
or
sbb
cmpsl
addr16
jb
ret
jecxz
lea
insl
cwtl
mov
scas
and
shlb
arpl
pop
inc
call
psubd
mov
subl
cmp
ljmp
and
stos
pop
mov
aas
push
test
repnz
pop
add
lods
mov
and
or
sbb
pop
dec
sub
inc
sahf
jbe
cmpsb
fsub
aad
shl
add
jecxz
add
shr
sub
or
mov
sti
inc
or
and
add
int
adc
xor
push
sldt
test
ja
or
mov
mov
arpl
lcall
xor
gs
aad
push
out
int3
in
fiadds
stc
insb
fwait
sbb
mov
add
mov
aas
std
mov
mov
cmc
mov
dec
or
orb
sbb
mov
out
inc
mov
or
cld
sbb
lcall
pop
lds
mov
sub
popf
xor
adc
jg
loop
in
lea
fcomip
pop
movsl
pop
jae
cs
outsl
add
add
stos
cmp
and
roll
frstor
jle
xor
cmp
andb
dec
fbld
mov
aam
clc
enter
fwait
or
jnp
aaa
bnd
ja
pop
jl
shrl
lea
ds
xor
push
or
xlat
jb
std
mov
jge
cld
hlt
cmp
and
lock
dec
mov
frstor
dec
xor
cmp
jns
in
in
add
subl
mov
nop
jo
jl
pusha
pop
adc
js
or
js
sbb
lcall
and
mov
push
lods
into
sub
test
xchg
mov
dec
adcb
xchg
int3
lods
shll
mov
mov
push
push
jae
mov
adc
inc
in
aas
mov
cmp
fwait
jle
xor
dec
sbb
jmp
mov
mov
inc
push
push
addl
cwtl
in
sub
stc
cltd
lret
dec
and
jecxz
cmp
rcrb
pop
jl
lcall
fwait
push
pop
jno
pushf
enter
push
out
call
aam
inc
jne
imul
cmp
das
loop
push
pusha
mov
inc
aas
adc
dec
pop
enter
vunpcklpd
stos
mov
xor
movsb
pop
push
adc
sbb
dec
mov
add
sub
filds
inc
shr
ret
xor
test
xchg
sub
cmp
mov
xor
jl
push
sub
add
fwait
in
push
push
fiaddl
loope
lahf
call
or
shl
mov
xchg
mov
pop
pop
adc
dec
mov
jecxz
mov
outsb
and
int3
cmc
clc
adc
cli
repnz
mov
test
dec
lds
adc
in
jne
jle
stos
and
movsb
in
mov
in
scas
jb
sbb
cltd
cmpsb
cmpsb
pop
pop
dec
out
sbb
mov
xor
and
mov
mov
mov
cmc
and
inc
xchg
dec
xor
shlb
jb
jecxz
lret
imul
mov
inc
hlt
mov
outsl
sbb
mov
adc
mov
ljmp
lock
cmp
pop
loope
pop
imulb
mov
ret
imul
sbb
aad
je
aad
xchg
imul
cld
sti
push
mov
fildll
clc
sarl
push
mov
das
jge
sbb
jp
push
or
sub
pushf
imulb
ret
out
jmp
sarb
mov
into
outsl
aas
stc
jnp
sbbb
mov
inc
mov
and
push
xchg
jo
mov
lds
add
sbb
leave
jmp
adc
sub
cmp
ror
aam
out
jl
sbb
addl
lods
test
popf
xor
or
cmp
in
xchg
cmpsl
jmp
divps
add
mov
add
shlb
cmp
and
or
and
adc
xor
push
push
xchg
fisttpll
sbb
cld
xor
jg
mov
cmp
cmp
lcall
cmpsl
sub
hlt
adc
inc
and
es
jg
popf
rcrl
add
clc
jge
loopne
pop
loope
jb
popa
out
jl
and
mov
mov
xchg
lock
jne
push
loope
jne
in
clc
scas
pop
lahf
das
jl
mov
leave
idivl
mov
mov
xchg
flds
xor
lret
mov
outsl
lock
mov
pop
arpl
inc
pcmpgtb
push
lods
inc
sbb
and
dec
cmpsb
shlb
fcmovne
stc
movsl
ljmp
add
inc
lret
jmp
call
gs
sbb
das
xchg
daa
adc
fisubrl
adcb
out
and
fmul
cmpsb
mov
cmp
jl
imul
mov
or
mov
cmp
fwait
mov
test
cmp
stos
pop
and
xchg
cmpsb
daa
fstl
sub
es
mov
sbb
push
cmp
aad
pop
and
mov
mov
mov
add
and
push
adc
cld
and
sbb
fisubs
push
out
sbb
in
pop
sbb
jp
fcoms
mov
data16
sarb
rcr
shrl
and
enter
outsl
mov
cmp
sbb
cld
repz
mov
mov
xor
adc
ret
ficoms
pop
cmc
push
int
scas
cmpsb
inc
fbstp
sbb
icebp
add
sbb
aas
xchg
daa
lods
das
lock
ljmp
ss
and
jle
lcall
loop
mov
aaa
cmp
daa
xor
pop
insb
ret
push
arpl
jecxz
clc
insl
fcoml
addr16
fistpl
fcompl
jns
enter
fdivrl
cli
nop
and
leave
jmp
push
dec
sar
test
and
lcall
inc
popf
stos
test
inc
inc
sub
adc
push
mov
les
inc
in
xor
aas
sbbb
ret
mov
shl
dec
cld
mov
jl
ljmp
sub
stos
cmp
lea
pop
sti
sub
dec
movsb
jg
fs
mov
inc
mov
adc
jae
inc
std
inc
push
loopne
fninit
rcrl
cmpb
fidivl
xlat
push
ljmp
repz
xor
jp
dec
mov
jle
sahf
arpl
xlat
and
sub
test
xchg
rolb
cli
xor
push
adc
dec
mov
mov
in
adc
cmc
sbb
mov
addr16
stos
push
aas
mov
jge
aam
xchg
lods
mov
dec
inc
xchg
xchg
jns
popa
rolb
ss
imul
shl
subl
icebp
aas
pop
scas
les
jae
ljmp
stos
adc
sub
pushf
cmp
aad
cmp
dec
pop
and
fcoms
mov
add
arpl
cli
mov
push
loopne
test
dec
mov
setg
cmp
sub
adc
adc
add
roll
push
and
cmp
mov
xorw
adc
push
mov
hlt
xor
andb
stc
popfw
adc
rcrb
js
movsl
pop
xchg
or
fcoml
pop
mov
sub
jnp
add
add
mov
or
out
xor
mov
mov
popl
cld
cmpsl
popf
ds
nop
pop
cld
push
jmp
inc
xchg
into
jp
loope
mov
scas
je
call
aad
adc
mov
loope
in
and
popa
out
adc
fwait
add
fldcw
movsl
dec
scas
loope
or
les
add
inc
movsb
aam
pop
gs
push
push
pop
inc
jg
add
pushf
mov
call
fwait
sahf
push
xor
iret
shr
inc
adc
pusha
test
push
cs
inc
cmpsb
mov
cmp
arpl
gs
shrl
inc
sub
xor
lcall
or
fistpl
and
add
cmp
push
pusha
mov
mov
leave
stos
adc
movsl
and
add
or
out
cmp
adc
dec
adc
mov
sub
gs
fcmove
jle
aaa
mov
test
shlb
adc
inc
rorl
dec
add
mov
clc
in
sub
and
jmp
mov
push
pop
sbb
jle
rolb
mov
pop
mov
out
loope
pop
fimull
mov
adc
insl
pop
cli
pop
cmpsb
or
mov
aam
add
clc
jo
jge
push
pop
lret
int
je
stos
call
fwait
div
repz
mov
mov
inc
pop
sub
add
sbb
xchg
shl
stos
xchg
int
andb
popf
inc
movsl
movsl
repz
xchg
cli
mov
or
jl
sub
loopne
mov
mov
push
ss
sub
imul
movsb
rcrb
sub
fldl2e
lcall
mov
call
popa
or
add
pop
iret
iret
xchg
inc
pop
insl
jno
adc
int
or
jp
jge
in
fs
cs
add
mov
add
test
push
inc
movsb
sbb
imul
mov
xchg
and
rcrb
add
aad
pop
adc
cmp
dec
jne
repnz
iret
xor
jle
jecxz
pushf
xor
add
or
pop
xchg
inc
jle
stos
dec
sar
ja
dec
sub
add
mov
pop
xchg
lds
jp
popa
outsl
sbb
xor
sub
test
dec
adc
cld
mov
aam
mov
nop
aas
fcoms
out
jmp
pop
xchg
mov
push
aad
insb
dec
sub
mov
loopne
cmpsl
and
or
cwtl
mov
xchg
jmp
loope
mov
or
push
pop
daa
repnz
cltd
ds
insb
mov
dec
insl
movsl
mov
out
xchg
mov
xor
outsl
mov
pop
outsl
pop
ret
es
sahf
cltd
xlat
mov
xlat
cmp
inc
jecxz
mov
decl
sub
mov
xchg
je
or
mov
shlb
push
je
aaa
loop
cmp
cmc
dec
popf
pop
xor
dec
daa
adc
sub
ljmp
imul
xor
push
xchg
sub
mov
adc
lcall
bound
mov
sbb
mov
pop
jmp
xlat
xchg
popf
push
lea
ficoml
in
in
jl
xchg
push
imul
sub
xorb
stos
imul
adc
inc
mov
jecxz
sub
outsb
fstl
add
and
jns
insb
lods
mov
nop
or
fldenv
div
jmp
pushf
ja
xor
dec
fwait
adc
lods
add
push
fs
dec
xor
lods
daa
xchg
push
or
cltd
mov
xor
cli
sub
inc
inc
je
jns
pusha
inc
xor
roll
clc
sbb
cltd
mov
rcll
popa
stc
fldl
fiadds
outsb
in
enter
xor
adc
mov
jne
sbb
pop
sbb
mov
and
test
inc
and
into
scas
cld
xor
xchg
cmp
mov
hlt
xchg
mov
jo
add
imul
call
in
lock
cld
nop
and
push
fsubs
and
mov
cltd
mov
pop
fdivrs
inc
push
out
cmp
jle
insl
xor
aam
mov
lock
les
mov
and
outsb
mov
mov
loopne
mov
jp
push
icebp
mov
divl
insb
xchg
pop
jle
fndisi(8087
dec
xchg
ds
inc
stc
gs
cmp
sbb
bound
pop
repnz
arpl
mul
imul
rorl
pop
push
inc
aas
adc
pop
mov
xor
mov
dec
in
popa
sbb
jnp
cmp
mov
cmp
jo
jno
and
insl
mov
dec
int
in
jo
cmp
jmp
mov
xor
stos
xchg
pushl
test
in
int3
fcmovbe
sbb
mov
xor
lret
mov
into
loop
ret
movsl
push
test
sub
pop
dec
push
adc
and
adc
jno
add
inc
hlt
dec
std
sbb
jae
mov
negw
push
mov
mov
push
jb
and
dec
add
jno
mull
jbe
adc
sub
repz
pop
enter
shll
ds
jo
add
out
sar
and
dec
and
jno
insl
adc
mov
repz
mov
mov
insl
cmp
mov
dec
leave
mov
stos
mov
mov
or
iret
cmp
mov
stos
pop
aad
popa
xchg
daa
sub
xor
dec
push
xor
xor
fmuls
rcrb
sbb
jmp
jno
jne,pn
cmpsb
pop
push
xchg
or
and
loopne
pop
jno
mov
pop
pop
push
jb,pt
ds
inc
nop
and
pop
insb
inc
enter
lock
cmc
or
inc
inc
push
or
xchg
ret
push
mov
pusha
data16
and
iret
push
mov
mov
jbe
jo
and
call
sub
push
je
mov
jl
fcmovne
pop
mov
mov
or
push
sbb
std
jns
rcrl
daa
jb
jmp
mov
sub
jl
mov
pop
adc
cmp
xor
sub
aam
push
jp
jae
jmp
notb
je
and
int
fcomip
inc
jp
cltd
stos
aaa
mov
cs
jl
xchg
loope
pop
xor
xor
les
push
and
popf
insl
imul
push
xchg
cltd
inc
filds
push
jp
cltd
shlb
add
scas
push
inc
lock
fwait
std
lods
js
pop
cmovo
dec
pop
adc
jae
aam
pop
xor
mov
jb
adcb
push
popa
movsl
scas
in
sahf
push
pop
mov
or
ret
notb
cmp
int
lret
add
lcall
pop
scas
icebp
xor
enter
and
movsl
je
sub
fstpt
out
add
push
jns
cli
icebp
outsl
push
rolb
lock
inc
or
push
mov
adc
cmp
lods
mov
icebp
or
adc
jle
mov
xor
loopne
fs
dec
mov
lods
cmpsl
jge
mov
es
sbb
lock
data16
sbb
sbb
mov
xchg
cmp
sti
ret
stc
mov
sub
stos
jb
push
scas
jnp
in
xchg
mov
push
adc
and
shr
jp
mov
xlat
iret
addl
jmp
fisubs
popf
push
adcl
ret
cltd
or
out
ss
mov
jns
imul
jge
push
sub
mov
adc
cmpsb
test
movsl
into
ret
sbb
push
adc
fnsave
fcomps
xor
xor
cmp
sub
jp
or
adc
lcall
scas
jmp
cld
iret
fdivs
movsb
orb
mov
pop
jecxz
push
mov
repnz
shlb
aad
imul
sub
sbb
mov
repz
sbb
mov
movsl
sahf
adc
dec
mov
jge
and
testb
jmp
lahf
jmp
xor
dec
shlb
xlat
lret
push
add
cmp
js
pop
lret
adc
bsf
jo
cmpsb
xchg
jmp
movsb
in
fcoms
mov
ret
jl
sub
dec
stos
iret
mov
sti
int
shr
mov
jle
push
lret
pop
or
test
push
enter
cmp
aas
or
jp
cmp
lock
aas
in
lds
fldt
push
cmpsl
nop
jnp
push
push
xchg
lods
mov
mov
cmpl
pop
push
jge
pop
movsb
jecxz
mov
fwait
imul
mov
ljmp
daa
popf
loop
and
mov
mov
std
sub
cmc
mov
adc
dec
in
rolb
sti
and
sub
or
loop
fnstsw
insl
pop
int3
mov
push
push
or
lret
test
sbb
lret
cmpsb
jge
shrb
push
pop
dec
repnz
mov
lcall
jb
pop
inc
pop
sbb
fsub
jmp
data16
dec
fs
int
fs
leave
push
inc
inc
std
xorl
mov
or
popf
or
sbb
xor
pop
jge
into
xor
push
lds
or
outsb
push
push
test
push
jle
lods
cmc
xlat
outsb
pop
jbe
jl
dec
cmp
pop
imul
fidivl
mov
call
xchg
adc
inc
and
pop
jno
cmp
mov
ss
inc
pop
cmp
out
shll
or
add
fiaddl
xchg
adc
dec
cmp
mov
cld
in
or
sbb
int3
and
cld
pop
xchg
inc
aam
ficompl
fcmovbe
cmp
in
add
pop
add
stc
in
add
or
js
cmpl
outsl
adc
inc
mov
fadds
out
arpl
sub
mov
pop
mov
sbb
xchg
hlt
lret
sub
and
inc
mov
aad
mov
mov
inc
push
cmpsb
fistpll
movsl
push
cwtl
lret
mov
scas
mov
cli
inc
or
xor
adcl
adcb
testb
pop
sub
outsb
jnp
sti
pushf
aas
sbbl
in
iret
push
push
mov
rol
xlat
and
pop
add
add
dec
cld
cld
jp
mov
das
or
inc
jl
daa
in
xorb
js
mov
adc
inc
mov
push
cltd
cs
cmpsb
aad
jbe
mov
fidivl
in
xchg
shll
mov
mov
mov
mov
inc
mov
adc
hlt
pop
or
push
or
sbb
cld
xor
scas
orb
mov
and
and
jecxz
cs
add
push
dec
ds
lret
lods
ljmp
jle
adc
and
mov
sbb
sub
movsl
sbb
je
xlat
push
clc
outsl
xchg
je
mov
in
adcl
jnp
sar
and
test
std
push
aam
fisubs
mov
jns
pushf
sbb
mov
and
sbb
dec
test
xor
faddl
mov
and
pop
sbb
add
mov
mov
test
and
lfs
inc
mov
cmp
bound
loope
mov
shrb
rclb
xchg
mov
dec
je
push
fildl
add
jo
outsl
stos
andb
ss
mov
jmp
mov
dec
pop
push
or
pop
cmp
out
ljmp
push
jne
jge
and
ficoms
xlat
addl
mov
push
sub
bound
gs
loopne
xchg
mov
repz
mov
int
stos
and
bnd
rolb
in
ja
mov
mov
leave
mov
hlt
jl
int
insb
pop
sahf
fisttpl
mov
mov
adc
pushf
test
cmpsb
in
mov
in
scas
mov
rcl
or
xor
xchg
rcrb
jp
add
sub
cmp
xor
mov
or
enter
fistpl
cmpsb
sub
movsb
gs
into
mov
addr16
cmp
rol
jle
mov
int
rol
shrl
adc
in
or
sbb
cmpsl
in
mov
fdiv
rorb
jp
jnp
mov
inc
xchg
mov
sbb
xchg
test
push
pop
jle
pop
or
push
nopl
mov
push
shlb
lock
adc
mov
push
jb
pop
jne
test
sbb
fimuls
add
ljmp
hlt
lahf
dec
jnp
mov
pop
dec
cwtl
pop
cmpl
repnz
jl
das
dec
subb
inc
cmp
lock
aas
mov
adc
cmc
cwtl
mov
aas
popa
scas
fsubp
sub
popa
ror
sbb
add
sub
ret
shlb
inc
cli
mov
adc
push
inc
lds
mov
or
fimull
loope
mov
lock
dec
les
dec
test
pop
sbb
aam
nop
fs
dec
fsubl
and
pop
mov
fnsave
add
int
jg
dec
repnz
and
nop
xchg
nop
push
cwtl
and
push
jbe
or
aas
aaa
sub
out
or
pop
loop
es
cmovp
aam
mov
push
in
outsl
iret
imul
imul
ja
outsb
and
push
add
gs
call
fs
xchg
pop
daa
in
jnp
idivb
xchg
scas
idivl
iret
and
push
push
lcall
add
jne
cmpsl
out
cli
or
or
addb
ret
pushf
and
fs
scas
add
imull
fistl
pop
mov
jge
dec
mov
loopne
js
push
test
andb
les
cli
inc
pop
sub
add
loopne
jnp
icebp
subb
cmp
xor
adc
xor
mov
les
push
popf
push
push
pop
lock
dec
mov
adc
push
xor
aam
push
clc
xchg
pop
mov
inc
inc
pop
in
jle
scas
int3
sub
sbb
std
ret
out
mov
jge
lret
jl
or
adc
data16
push
jge,pt
adc
mov
pop
imul
loope
push
xor
sbb
xlat
fbstp
lret
adc
cmp
push
jg
mov
jecxz
ljmp
lea
xchg
push
adc
mov
push
scas
loop
dec
dec
or
xlat
je
lods
in
ret
jno
jne
xlat
mov
notl
mov
or
sub
sub
ret
loope
mov
cld
sbb
addr16
imul
sub
mov
in
xor
fnstcw
jp
loopne
rorb
mov
lcall
add
xchg
push
arpl
mov
pop
sbbl
insl
mov
push
vmwrite
imul
pushf
mov
push
inc
dec
popl
aas
loope
pop
sti
mov
mov
add
push
mov
les
mov
lea
iret
or
shll
pushf
mov
xchg
fsubrl
inc
aad
jg
int
loope
test
jnp
test
rcr
adc
cmp
aam
xchg
mov
idivb
adc
push
jmp
and
mov
adc
mov
test
mov
sub
add
cltd
leave
imul
push
inc
xor
movsl
enter
inc
inc
scas
cmc
cwtl
and
cmc
mov
stos
xchg
ss
popa
jge
push
aad
ljmp
dec
dec
sbb
imul
jg
and
jns
aaa
jecxz
aaa
mov
out
mov
lahf
inc
rolb
cmp
pop
cmp
mov
pop
adc
mov
bnd
in
repnz
sub
pop
out
push
sbb
in
mov
jmp
adc
and
cmp
mov
addr16
enter
sub
jle
aaa
lret
jle
sub
or
imul
xchg
adc
test
mov
dec
and
lock
sbb
out
fcoms
sbb
faddl
cmp
and
mov
ja
insl
fisttpl
pushf
inc
fildl
mov
inc
stos
aad
ss
xchg
pusha
mov
inc
aaa
es
sub
push
mov
scas
mov
cli
stos
inc
repz
add
pop
ficoml
outsb
outsl
dec
push
inc
adc
push
mov
inc
dec
mov
dec
out
stc
and
pop
push
mov
cltd
mov
lods
inc
les
sti
lret
mov
cmpsl
jbe
sub
fs
jmp
movsl
imul
popf
int
scas
pop
cltd
shll
adc
fwait
push
mov
lock
adc
push
enter
sarl
cli
cmpsl
push
ret
push
mov
int
sarb
or
mov
into
add
jo
andb
xchg
cld
lds
notw
mov
pop
ds
rclb
bound
xlat
adc
sub
shr
scas
dec
inc
pusha
jle
sub
movsl
pop
scas
loop
xor
xchg
imul
mov
mov
jl
cmpsb
outsl
mov
pop
adc
pop
aad
pop
sti
lcall
outsb
pop
xor
inc
mov
lea
subl
jle
dec
je
test
leave
lea
push
inc
sbb
sub
iret
dec
adc
dec
outsb
bswap
cld
cmp
jnp
and
clc
mov
cmpsl
out
out
call
fsubrl
xadd
popl
xchg
push
lcall
jmp
subb
shlb
adc
in
xor
jmp
dec
sub
jbe
push
loope
cmc
and
adc
pop
xchg
push
jne
jecxz
mov
pop
ret
ss
xchg
cmp
pusha
out
in
inc
stc
arpl
ja
add
fldt
jae
or
push
fnstenv
and
sbb
pop
mov
insb
push
ret
hlt
xchg
jae
push
les
xlat
ret
fchs
movsl
mov
adcl
cmpsb
add
inc
and
movsl
call
xor
xchg
inc
mov
pop
jmp
loopne
push
ficoml
sbbb
in
popa
loop
pop
faddl
and
lcall
push
aaa
mov
jnp,pn
fcompl
mov
es
mov
pop
fnstcw
cmp
xor
mov
icebp
adc
mov
sub
cmp
stos
stos
adc
dec
xlat
xorb
sub
movsb
or
pop
cmp
add
mov
mov
mov
testb
lods
out
fwait
sub
jno
jo
gs
out
push
push
add
mov
jmp
adc
inc
shl
add
pop
sahf
push
push
pop
ja
push
mov
test
or
rcl
nop
cmp
cmc
lods
sbb
jecxz
data16
nop
stc
stc
clc
movsb
ljmp
in
repnz
jge
ss
mov
lret
sbb
hlt
testb
lds
xchg
dec
out
xchg
inc
mov
div
push
lret
mov
jae
loop
inc
inc
sbb
leave
fisubs
sub
daa
scas
mov
pop
les
cmp
or
and
adc
lock
test
rolb
jmp
add
cmpl
mov
lea
out
pop
scas
lcall
mov
addr16
aaa
enter
push
inc
sub
rcll
out
aas
mov
cmp
jmp
or
js
into
inc
pop
int
test
mov
adcb
dec
pusha
stos
mov
out
addb
mov
insl
in
cmp
lods
rclb
jmp
lahf
push
mov
xor
in
pushf
xchg
addb
stc
in
aaa
xor
pushf
inc
xchg
imul
xchg
rclb
mov
and
rorl
jmp
je
and
dec
test
iret
jle
inc
mov
out
fldl
daa
or
cld
testb
push
and
cmpsl
jl
orb
and
repnz
jo
insl
cmpl
movsb
cltd
mov
mov
mov
int3
push
inc
inc
jne
xchg
pop
int
and
inc
roll
rcr
imul
vdivps
sbb
mov
or
add
lahf
popa
aas
jle
lea
test
push
int3
inc
addr16
enter
pusha
sarl
lds
cmpsb
xor
ja
out
ret
popf
push
pop
in
fiaddl
lea
add
adc
insb
sub
sahf
mov
stos
xchg
nop
aad
cltd
inc
ret
mov
repz
xor
test
lret
mov
ret
andw
sub
loop
inc
push
sub
adc
aam
mov
loope
or
or
dec
xor
and
scas
fs
cmp
sub
mov
and
nop
dec
push
and
pusha
sub
fnstcw
fldcw
push
mov
jne
cmpsl
jecxz
or
xchg
jge
jns
sbbw
mov
cmpsl
mov
jp
shr
push
lret
push
ret
dec
inc
js
push
jle
mov
in
pop
roll
leave
sbb
leave
int
push
hlt
inc
cmc
addr16
lock
enter
test
push
or
mov
or
out
xor
in
inc
or
mov
fidivs
ret
jl
es
mov
add
mov
push
js
incl
aam
sub
outsl
fs
xor
pop
repz
or
and
imul
iret
cmpsb
or
mov
mov
test
ljmp
mov
out
ficomps
sub
push
mov
cmp
xchg
and
mov
xorl
adc
mov
dec
fstps
stos
push
stos
and
pop
sub
loope
add
enter
ret
ss
add
push
aam
insl
sti
cld
dec
or
dec
pop
out
mov
lea
inc
lahf
inc
inc
rcrl
es
or
and
mov
dec
jmp
ja
push
push
push
aad
pop
fwait
lods
mov
adc
jl
cmp
sub
loop
push
xchg
lods
test
jae
inc
aaa
std
stos
sub
outsl
adc
sbb
pusha
invd
movsb
add
aam
adc
pop
mov
mov
out
jmp
jne
jge
out
loop
xor
std
sarb
in
jb
call
jl
xorl
movsl
cltd
adc
push
rorb
gs
in
mov
cmp
mov
rcl
sbb
or
sub
mov
inc
pop
enter
dec
sbb
shlb
mov
icebp
jb
mov
cwtl
sub
or
stc
testb
push
add
adc
jle
pop
in
and
cwtl
xchg
jge
and
mov
imul
test
cmc
sub
xchg
mov
and
jmp
clc
and
aad
and
stos
aas
xlat
adc
fxch
loop
cmpl
push
adc
pop
adc
aaa
inc
stos
fcmovbe
mov
adc
push
jae
push
sbb
cmp
xor
dec
out
js
pop
in
clc
push
jge
adc
adc
xor
sub
xchg
sbb
mov
or
mov
pop
inc
mov
mov
dec
in
cli
cmp
jo
push
or
lret
sbb
or
stos
push
pop
cmpsb
fcomps
push
mov
sti
fcmovnbe
jg
mov
je
xchg
test
cmp
lahf
mov
ljmp
enter
jb
mov
push
mov
xchg
call
and
lds
mov
scas
sahf
push
addr16
mov
mov
ror
and
iret
sub
push
ljmp
or
loopne
mov
dec
cmp
data16
mov
lcall
jbe,pn
iret
cmp
mov
das
mov
cli
movd
scas
stos
adc
sahf
mov
jg
inc
addl
fildl
and
pop
sub
aad
jbe
xchg
lods
mov
fcoms
mov
mov
cmp
scas
jle
and
xchg
out
xchg
jle
repz
and
lea
mov
mov
subl
xor
sub
flds
mov
add
repnz
adc
push
fwait
sbb
mov
pop
lret
rorb
jl
mov
setno
push
test
fcomps
xor
fidivrl
and
int3
push
adc
ss
cmp
pop
arpl
lea
insb
repnz
mov
clc
roll
push
je
mov
pop
mov
push
jno
movsb
push
lea
xlat
data16
icebp
shlb
call
repnz
mov
inc
je
test
add
xchg
sahf
enter
or
push
cli
aas
jl
pop
in
ja
imul
xchg
mov
stc
test
fiadds
mov
out
test
loopne
push
mov
out
loopne
in
push
jns
fwait
popf
aam
mov
xor
sub
dec
cs
mov
mov
xor
iret
add
xor
les
insb
lret
cmp
adc
push
jae
fistpl
rolb
mov
stc
nop
test
aam
out
xchg
neg
loope
lret
xor
push
test
test
push
pop
shrb
lcall
xchg
mov
sbb
mov
push
frstor
bound
mov
repz
data16
lahf
add
sub
sbb
les
lea
xchg
pop
push
bound
rcrl
jmp
inc
cmpsl
mov
xor
jnp
sahf
imul
jnp
push
jg
arpl
mov
xor
mov
stos
jne
jnp
mov
add
shlb
jnp
movl
push
lcall
jmp
adc
mov
cmc
push
lcall
push
cli
mov
cmp
fistl
sahf
mov
jp
mov
lods
rcl
pushf
mov
or
in
out
ljmp
jae
shrl
jae
jl
popf
adc
addb
jno
dec
loope
sub
test
and
jge
inc
xor
jno
adc
jae
sbb
dec
cs
xchg
xchg
or
inc
lods
dec
jns
stos
test
leave
mov
je
push
jae
int3
in
and
das
lds
mov
aam
inc
xchg
aam
dec
xor
dec
xchg
ret
push
faddl
addr16
bnd
xor
fs
mov
ljmp
leave
imul
jae
outsb
inc
out
mov
movsb
sub
sub
xchg
cmc
pop
adc
or
aam
dec
jo
or
push
xchg
dec
jne
fs
scas
pusha
out
adc
scas
mov
dec
mov
sub
out
push
loopne
sub
lret
dec
mov
insl
clc
mov
loop
popf
fisubrs
stc
sbb
xchg
lcall
aaa
mov
mov
test
mov
mov
into
and
call
pop
mov
jecxz
addl
fisubs
inc
in
add
lcall
adc
jle
flds
jmp
int
lea
push
mov
dec
std
psrlw
cltd
mov
into
scas
add
jmp
mov
jg
cmpsl
es
out
pop
ljmp
test
mov
inc
dec
in
or
leave
cltd
fcmovnbe
rorb
mov
lcall
mov
or
fnsave
jg
in
cmpl
xchg
xor
and
nop
test
mov
cmp
push
adc
insb
loopne
push
and
ja
int
sub
sub
xchg
xor
pop
insl
inc
in
dec
push
mov
pushw
mov
and
jb
in
jmp
fs
ljmp
fidivrs
cli
fnstcw
and
dec
mov
pop
push
pushl
lds
dec
push
jns
pop
inc
or
cmp
int3
pop
dec
movsl
fidivrs
pop
cmc
pushf
jg
dec
scas
add
cmc
loop
sub
int3
js
cmp
or
movsl
pop
add
xchg
push
dec
hlt
subb
aas
adc
sbb
in
sti
icebp
js
lcall
jmp
rolb
sbb
jnp
dec
clc
sbb
sbb
xor
fs
jo
stos
xchg
jl
mov
xchg
iret
mov
xchg
and
xchg
cmpsb
cmp
or
xor
jmp
rol
rcl
jg
lods
add
jmp
imul
push
jns
sbb
pop
scas
fwait
mov
inc
inc
cmp
mov
dec
aad
or
jbe
scas
dec
xor
je
add
mov
mov
ja
sbb
jae
int3
movsb
ret
xchg
dec
repz
cwtl
paddb
fidivs
aaa
popf
popa
movsl
cmpsb
ret
mov
int3
and
xor
in
jecxz
stos
mov
push
ja
push
cwtl
movsb
xchg
jo
push
mov
mov
and
lret
daa
dec
jg
movsl
xor
jnp
lret
std
jnp
pop
cmc
ret
outsl
push
and
mov
jl
pop
inc
cmp
rol
mov
adc
out
ljmp
iret
jmp
subl
push
pop
jbe
cmpsl
jmp
mov
adc
clc
daa
test
cwtl
icebp
push
dec
test
aad
jne
lcall
or
loope
xor
pop
lods
xchg
mov
in
sbb
and
push
insl
cmp
adc
jle
nop
rcrl
fs
cmp
cmp
ja
mov
sub
clc
xor
push
test
imul
orb
xchg
pop
insl
iret
or
pusha
xchg
jnp
bswap
push
push
call
gs
cwtl
repz
jmp
inc
xchg
push
int
jge
das
pop
add
jae
add
dec
dec
or
xchg
push
cli
call
mov
sbb
mov
push
sahf
shlb
stc
sbb
cld
outsl
mov
and
mov
lcall
test
xchg
sub
out
sub
xchg
notb
pop
mov
idivl
cmp
and
lret
pop
incb
jae
imul
lods
loope
mov
idivl
xor
fcoml
dec
clc
add
adc
test
int3
ja
aas
ljmp
cmpsl
cmp
add
adc
outsb
dec
add
test
in
jmp
and
pop
rcrb
ret
sub
lret
xchg
xor
dec
das
insl
iret
pop
mov
mov
xor
sub
mov
andl
jne
fsub
and
outsb
insb
cli
jns
dec
xor
ret
das
xor
test
xor
xchg
sub
adc
sbb
lds
xor
inc
idivb
push
imul
pop
jmp
movsb
fcoms
inc
mov
and
mov
sahf
jmp
ret
lea
sbb
or
add
dec
mov
mov
loope
dec
movsb
cmpsl
add
lcall
loop
lods
ret
scas
leave
mov
jge
xchg
jg
jecxz
lret
cmp
pop
gs
enter
pop
sbb
leave
fwait
sub
ret
pushf
outsl
or
mov
sub
fmulp
stos
mov
mov
adc
and
sub
xor
in
mov
sahf
adc
sub
pop
fbstp
xchg
shrl
adc
inc
pop
outsl
insl
mov
inc
pushf
fldl
jle
xorb
sub
jbe
mov
cmp
push
xchg
movsl
repnz
sar
cmpsb
dec
sub
push
lahf
xor
sbb
sub
add
mull
xchg
push
cmp
aas
dec
mov
xorl
out
dec
pushf
in
or
xor
lods
fcomps
test
nop
sbb
xor
repz
testb
adc
push
ss
mov
mov
sbb
addr16
mov
fwait
cli
mov
cmp
push
jns
lea
insb
ljmp
test
mov
jge
pop
cmp
xor
gs
jp
adc
push
push
leave
push
popa
ret
loop
fcoml
popa
cwtl
iret
sar
hlt
pop
and
imul
icebp
stc
aas
in
stc
jno
jne
sub
js
in
jno
sub
daa
adc
cwtl
out
popf
sbb
imul
dec
cmp
lret
mov
sub
popa
jb
jns
movsl
pop
push
push
mov
sbb
and
por
xor
lock
je
jmp
mov
nop
push
xor
xchg
and
ret
push
add
in
mov
mov
sahf
int3
push
mov
stc
stc
imul
ret
adc
idivl
cmc
lcall
fstpt
and
and
push
imull
pop
adc
stos
jg
push
cld
imul
inc
fists
xor
xchg
iret
push
push
mov
or
mov
sbb
jbe
rcrl
hlt
mov
sbb
rcrl
ljmp
lods
push
xor
pop
sbb
dec
in
sub
cmp
dec
xchg
add
jecxz
push
adc
jmp
imulb
mov
mov
mov
ds
lret
out
fldt
push
negb
sbb
inc
icebp
sub
sbb
dec
sarl
mov
fincstp
rorl
das
mov
mov
xlat
js
decl
add
push
jge
call
cmpsb
and
add
xor
pop
jmp
lret
adcl
pop
test
mov
add
and
jl
scas
sub
pop
std
jecxz
dec
inc
push
push
cld
vmovdqu
lret
js
dec
fs
shr
fistps
negl
fwait
jbe
js
pop
xor
je
mov
xchg
test
jno
cmp
inc
cmpsb
leave
sbb
into
int
pop
pop
movsl
jo
dec
cmpsl
pop
jecxz
inc
or
outsb
ss
jp
in
lods
jnp
test
es
cmc
repnz
insl
mov
scas
inc
xchg
xlat
mov
sbb
push
dec
ljmp
xor
jmp
outsl
jle
xor
dec
addr16
insb
or
cmp
adcb
ret
jnp
xor
dec
idivb
loop
idivb
jg
mov
and
in
adc
xchg
jp
cld
lahf
inc
fisubl
lock
jg
jbe
jns
divl
pop
xorl
das
dec
cmp
nop
sbb
mov
or
dec
jl
cltd
call
sbb
push
pop
jmp
xor
ds
or
sub
jno
ljmp
jmp
mov
add
inc
add
dec
inc
push
push
or
jb
add
push
push
pushf
cwtl
mov
rolb
mov
test
mov
popa
mov
insb
repnz
addr16
push
les
or
adc
aaa
fwait
cmpsl
mov
xor
sbb
jbe
stos
xor
faddl
xor
out
or
push
nop
adc
sbb
sahf
std
mov
pop
ret
adc
mov
adc
call
sub
enter
inc
lcall
xor
repnz
sbb
mov
sub
sbb
fmul
out
or
loope
ja
xor
jns
xor
lods
jbe
loopne
inc
or
or
sbb
mov
call
sbb
fwait
xlat
icebp
mov
or
test
add
shll
mov
das
inc
sub
pop
fidivrs
sub
sub
pop
or
sbb
scas
clc
push
lcall
faddl
xchg
add
test
je
out
je
xchg
add
cmpsb
xchg
sbb
sub
dec
mov
daa
shll
sbb
and
out
int
movsb
rorb
or
out
aas
icebp
dec
out
test
push
inc
push
push
cmp
ficoms
ss
adc
push
insb
mov
mov
sbb
loopne
movsl
push
lcall
jb
ljmp
inc
mov
iret
push
or
cmp
insl
shll
mov
insl
nop
push
rorl
add
add
sbb
mov
gs
xor
enter
stos
pop
cmp
push
aam
inc
movsb
fs
subb
rcll
sbb
out
enter
ds
es
mov
out
pop
sarl
fiaddl
mov
popa
mov
ret
sub
popf
cmp
arpl
adc
jbe
repz
adc
push
rcrl
dec
iret
push
xchg
dec
cs
out
scas
insl
mov
stc
mov
negb
ret
pop
ret
idiv
fs
add
jno
dec
pop
aas
les
pop
or
or
add
sbb
mov
fbstp
pop
scas
clc
lock
test
push
add
adc
pop
adc
lahf
or
js
pop
mov
test
daa
ss
sub
add
clc
imul
popf
ret
add
arpl
inc
lret
in
xorb
jmp
cmp
std
mov
cs
inc
add
push
or
cli
pop
outsl
xchg
push
test
imul
adc
fistl
add
sub
or
and
mov
push
ds
ret
pause
arpl
cltd
and
xor
push
pop
aaa
mov
lock
call
xchg
aaa
popf
out
or
cmp
je
xor
pushf
cwtl
pop
sub
dec
add
leave
lock
cmp
in
pop
into
pop
inc
outsl
adc
clc
sbb
in
addr16
cmpsb
and
mov
leave
dec
mov
push
mov
inc
add
jl
aad
in
or
sbb
hlt
xchg
or
sub
push
andl
mov
clc
push
test
out
mov
pop
movsl
add
jne
cmc
cmp
mov
mov
test
jae
jae
pop
xchg
out
das
leave
lret
cmp
push
cmp
inc
xor
sub
cwtl
sbb
inc
into
andb
call
je
sub
cmp
jg
cmc
sbb
ds
mov
pop
dec
notb
dec
sub
mov
pop
push
or
dec
jns
int
mov
xchg
and
push
sti
stos
xchg
das
test
decb
sbb
mov
in
or
addr16
inc
insb
inc
xor
testl
dec
jecxz
shlb
cltd
xchg
arpl
push
dec
cmp
mov
cmc
ja
pop
push
cmp
ds
test
loopne
pushf
mov
out
nop
fwait
jns
jne
push
je
jno
ss
pop
loop
hlt
aaa
cmpl
add
lods
insb
or
testb
mov
push
mov
push
push
std
mov
aaa
cmp
testb
lret
and
sbb
adc
lahf
jno
mov
inc
xlat
mov
push
xchg
sbb
hlt
jp
mov
mov
insb
stos
sbb
sub
and
iret
cmpsl
cmp
dec
dec
std
stos
out
pop
cmc
movsl
xlat
or
test
stos
dec
pop
sbb
mov
sub
dec
sub
dec
or
pop
xchg
lret
subl
mov
dec
sub
adc
les
xor
push
mov
adc
movsl
out
movsl
dec
dec
mov
sub
mov
movsl
push
mov
cmp
out
out
jns
lcall
mov
push
scas
jnp
aaa
push
leave
jb
shlb
cmp
sbb
lret
movsb
popf
cwtl
data16
aad
pop
lods
out
mov
aad
and
mov
sti
adc
les
inc
mov
mov
pop
sti
arpl
jae
push
dec
cmp
xor
xchg
mov
add
add
mov
jns
int
xchg
jbe
sub
das
jmp
push
repz
cmp
add
sbb
stos
or
pop
pop
shrl
adcb
xor
or
inc
jne
aad
loope
sahf
or
adcb
addr16
pop
shll
fcmovb
pop
ret
addr16
hlt
xor
push
mov
pushf
add
xor
fcomp
pop
mov
mov
mov
adc
stos
int
gs
cs
stos
adc
outsb
and
jle
mov
mov
inc
add
pop
lahf
and
inc
mov
mov
cmp
push
out
sbb
bound
push
mov
negb
pop
loope
and
jb
xchg
dec
mov
or
fistl
cmp
push
pop
jo
in
popa
push
xor
test
inc
mov
and
add
xor
ftst
mov
sbb
out
or
loop
mov
movsb
addr16
xchg
inc
adc
stos
xchg
cmpsl
push
cmpsl
push
shlb
jne
mov
subl
je
pusha
inc
movsb
or
inc
mov
or
lock
mov
fs
push
sbb
fsincos
add
loop
sbb
push
add
jl
adc
dec
sub
in
dec
leave
pop
cmpsb
lcall
gs
lret
xor
jmp
inc
sub
movsb
jns
cmpsb
push
add
dec
cmp
fidivs
dec
cmp
loopne
sarb
and
lods
sub
xchg
aad
lahf
imul
test
cs
lret
adc
sbb
ret
in
imul
jge
insl
clc
imul
xor
fistps
arpl
mov
push
sub
mov
fcoms
mov
in
nop
cmpl
push
inc
js
mov
mov
js
mov
sub
push
add
loopne
scas
jno
xchg
mov
cltd
jmp
stc
cld
repnz
repz
in
lret
aaa
sbb
mov
mov
mov
push
jns
rcl
xor
lock
lods
dec
cmp
enter
addr16
jmp
xchg
movsb
outsl
flds
shll
jo
sti
lret
push
push
shrb
test
imul
out
mov
add
push
arpl
out
flds
xchg
outsl
decb
imul
pop
stos
inc
idivb
add
rcrl
lock
sbb
lods
std
add
adc
movsb
mov
mov
movsb
xor
sbb
push
imul
sub
mov
inc
mov
inc
push
testl
insl
repnz
cli
xchg
xchg
psllw
inc
pop
fbstp
mov
and
xchg
sub
xchg
jecxz
mov
fprem1
xchg
sahf
movsl
insl
adc
aas
cmc
lea
insl
mov
sahf
mov
cmp
push
jmp
into
in
stos
insl
fcmovne
outsl
pop
cmc
repz
jg
sbb
mov
xor
movsl
cmp
cmpb
test
and
xchg
icebp
leave
xor
push
and
mov
insl
fisubs
test
popf
xchg
mov
pop
mov
and
dec
aaa
fcmovnu
in
scas
jno
xchg
loope
lds
dec
jl
xchg
nop
ret
dec
dec
enter
sahf
out
mov
xchg
add
add
cmpsb
mov
addl
scas
rcll
sahf
insb
or
adc
mov
push
adc
sbb
xchg
fmul
inc
lret
sbb
ror
dec
loopne
hlt
rcrb
sub
in
outsb
aam
repnz
or
mov
push
sbb
pop
iret
call
and
fadd
pop
jp
push
scas
dec
cmpsb
stos
mov
add
sub
std
dec
into
jns,pt
mov
mov
push
lret
stos
mov
les
sub
int
lds
psllw
int3
insl
fisttpll
scas
push
sbb
inc
and
daa
add
out
or
xchg
jbe
add
gs
iret
push
and
jecxz
clc
scas
sbb
or
shrl
fwait
movsb
mov
sbb
xchg
je
mov
in
ret
sarl
cmp
pusha
jno
lahf
mov
cld
ljmp
imul
addr16
out
push
dec
cltd
loop
jge
jns
pop
push
test
cmp
sbb
nop
ljmp
imul
adc
fcoml
or
mov
jecxz
ret
xor
call
sub
push
cld
movsl
sti
lods
mov
xchg
mov
decl
mov
js
adc
lcall
and
insl
loopne
mov
jp
lods
adc
mov
jg
nop
fcoms
out
push
gs
bound
es
das
and
mov
mov
test
mov
cli
sub
dec
rorl
jge
popf
inc
or
pop
ljmp
push
mov
adc
dec
sbb
mov
add
outsb
inc
nop
jbe
cld
xchg
iret
xor
pop
repnz
cmp
into
arpl
sarb
je
inc
cmpl
aas
test
idivl
dec
xlat
pop
daa
loopw
movsl
cmp
push
jns
sti
negb
push
pop
push
adcb
aam
sbb
sahf
or
movsb
fsubrs
loop
jo
lds
xor
loope
scas
in
pop
mov
scas
cwtl
je
fcomps
ret
pop
xchg
mov
sbb
rcl
add
lods
mov
mov
xchg
or
cmpsb
add
dec
pop
out
int3
call
add
inc
test
stos
cmp
leave
cmc
aam
push
mov
sbb
jg
js
daa
add
push
cmp
or
mov
mov
push
xor
stc
adc
ret
adc
inc
and
pop
and
pop
pop
cmp
pop
sub
mov
mov
xchg
dec
sbb
gs
xor
int3
loop
adc
mov
subb
je
mov
bnd
dec
and
in
mov
mov
xchg
xchg
sbb
lods
lea
xchg
mov
mov
push
inc
rol
out
jo,pn
pop
cmp
dec
mov
cmp
mov
jle
dec
js
push
and
hlt
cs
adc
loop
idivb
or
adc
push
pop
filds
fst
xchg
mov
adc
and
xchg
nop
sub
cmp
pop
lea
pop
cmpsb
jno
xchg
inc
daa
movsl
ja
inc
push
sbb
stos
and
faddl
sahf
xchg
cli
out
cmc
iret
xchg
loop
add
mov
mov
sti
adc
ret
mov
cmp
dec
dec
cmp
inc
test
and
pop
mov
jbe
cmp
stc
cmp
cli
test
out
pop
ljmp
push
outsb
xchg
push
cmpsb
cmp
mov
repnz
or
in
jmp
xchg
mov
test
push
push
or
add
dec
lret
hlt
inc
mov
das
and
add
or
add
or
ja
scas
mov
fisttpl
sub
test
jne
add
rolb
pushf
cs
push
mov
mov
daa
jp
lahf
mov
xchg
xchg
test
loopne
mov
outsb
lods
sbb
pop
lret
cli
dec
dec
mov
fnsave
imul
sbb
mov
mov
int
mov
int3
mov
sbb
jp
push
or
inc
fimull
pop
cmp
xchg
jg
mov
or
ret
mov
fiaddl
lods
les
adc
jo
inc
cmpsl
mov
dec
test
cmc
movsl
inc
mov
outsb
lea
popa
sbb
and
repnz
mov
add
jae
dec
movsl
jno
shlb
adc
sbb
lock
xor
xlat
pop
mov
in
push
cmp
lahf
lret
js
push
push
stos
lret
push
lds
mov
sti
icebp
xor
add
push
test
sbb
dec
lods
add
or
ljmp
sarl
dec
dec
push
adc
jne
int3
scas
fcoml
cmc
jg
jmp
aad
loopne
lods
cmpsl
mov
push
jg
ficompl
pop
inc
dec
or
or
pop
lcall
lcall
push
cltd
imul
adc
clc
cli
mov
cmpsl
mov
jae,pt
call
xchg
stc
jge
and
das
fstl
hlt
xchg
jb
add
xchg
pop
scas
notl
aas
add
repz
jnp
and
lret
add
cld
push
repz
lahf
out
mov
push
loope
xor
mov
aas
sub
dec
int3
inc
sub
or
sbb
sbb
sbb
dec
jnp
rclb
pop
jle
sbb
mov
ret
enter
cld
loop
mov
mov
mov
lods
rolb
js
decl
loope
in
adc
pop
test
mov
or
lods
test
add
jne
adc
jmp
inc
push
out
adc
das
clc
push
hlt
movsl
adc
cld
ficoms
lock
adc
inc
jns
popa
inc
cli
movsl
fisttpll
xor
fildll
push
cmp
mov
cltd
bound
xor
shl
icebp
or
pop
sub
rcl
test
and
dec
sbb
pop
enter
sub
testl
and
mov
loope
jae
aad
add
bound
enter
je
cmp
pop
mov
js
addr16
jle
in
shlb
les
push
adc
ret
or
cld
cmpsb
mov
jp
addr16
pop
lods
mov
cwtl
xor
fldl
xchg
test
pusha
sbb
scas
xchg
sub
scas
out
add
ret
mov
pop
dec
std
mov
inc
add
mov
xor
int
mov
adc
mov
aas
lods
jns
dec
dec
shll
outsl
mov
ja
xlat
add
cltd
fnstenv
stos
xor
mov
jbe
mov
in
lods
inc
cltd
jle
mov
mov
adc
repnz
inc
dec
enter
andb
mov
outsb
add
inc
mov
cltd
pop
rclb
lock
cwtl
int
pop
push
jbe
inc
int3
iret
movsb
cmp
add
idiv
cs
inc
arpl
inc
xor
jne
jbe
ror
rclb
jb
jg
inc
fstpt
js
fcmovu
mov
test
loop
mov
push
loop
testl
mov
hlt
out
adc
xchg
sbb
inc
fisttps
push
push
popf
cli
push
dec
sbb
outsb
imul
roll
lcall
mov
loopne
addr16
outsb
aad
jecxz
imul
xchg
cmp
int
mov
insl
mov
imul
add
pop
push
scas
xor
jg
mov
fwait
mov
adc
pop
popl
pop
cmp
xchg
xor
int3
sub
mov
push
push
mov
enter
xchg
jmp
jne
add
jae
icebp
testb
lds
pop
mov
in
in
data16
push
mov
pop
and
inc
mov
sub
js
jecxz
pop
jge
pop
sbb
xor
jg
test
aas
out
xchg
sbb
add
mov
fnstenv
les
fcomps
sbb
lods
jne
outsl
test
mov
or
shlb
das
inc
stc
aas
mov
xchg
test
ret
std
or
sbb
out
sbb
shlb
insl
ja
inc
inc
sbb
sbb
test
filds
adc
mov
inc
rcll
push
dec
mov
mov
testl
mov
stc
orl
dec
lods
lds
clc
imul
pop
add
push
and
xor
push
push
push
adc
mov
hlt
shl
add
xor
clc
cmp
cs
mov
sbb
add
movsl
lds
jo
stc
gs
jle
ljmp
cwtl
lods
icebp
cld
pop
cmp
mov
ss
les
and
or
mov
in
cmp
outsl
movsl
xor
xchg
inc
dec
fistpll
or
jge
jmp
stos
xchg
imul
sub
cmp
outsb
insb
pop
sub
insb
mov
repz
mov
ja
in
pushl
cltd
aad
pop
jbe
push
int3
es
imul
xorb
push
inc
insb
lds
mov
outsl
shlb
fwait
pop
dec
ds
pop
dec
inc
popf
jge
jno
add
stc
xor
pop
mov
rol
adc
mov
sbb
shll
add
ret
repnz
push
test
daa
loope
cmp
dec
out
mov
jmp
out
mov
inc
push
or
iret
cltd
sbb
gs
mov
xchg
cmc
les
out
negl
loopne
rol
or
call
pop
jmp
dec
out
mov
adcb
mov
icebp
adc
sub
fidivrs
lods
sub
xchg
adc
in
xor
sbb
jle
fstps
xchg
mov
or
jmp
bound
lea
fcomps
cmp
mov
mov
or
ljmp
int
cmc
inc
sar
cmpsl
pop
mov
ss
stc
std
or
lods
jbe
bound
lcall
loopne
jns
loope
xchg
xchg
sbb
adc
in
jnp
or
mov
and
inc
sbb
mov
sub
int3
mov
mov
and
nop
aam
dec
je
and
add
movsb
mov
in
xor
imul
ret
jg
inc
lods
rcrb
ss
mov
jbe
push
or
add
sub
mov
cmp
xchg
loope
push
movsl
add
dec
out
xchg
pop
mov
push
mov
push
mov
lcall
flds
stos
sub
test
add
aas
cmp
insl
mul
dec
ret
sub
inc
outsb
cmp
xchg
psrad
jl
cmc
pop
loop
out
lahf
es
jmp
xchg
pop
fs
mov
xor
sbb
sbb
mov
insl
jmp
inc
rcrb
loop
dec
das
movsb
pop
jmp
shll
adc
push
rclb
inc
pop
inc
add
sub
ret
fists
cmp
mov
add
push
cmpsl
mov
in
cmp
and
ljmp
pop
repnz
dec
in
mov
fwait
jecxz
mov
pop
dec
lds
ss
mov
cld
cld
sub
outsl
pushf
inc
xchg
fucomi
mov
clc
add
xchg
outsb
test
je
xchg
out
outsb
xchg
mov
jp
adc
pop
mov
cld
inc
mov
dec
xchg
and
mov
jns
or
mov
lcall
stc
out
push
xorl
pop
adc
shrl
sti
sbb
rorb
mov
int
popa
and
xor
push
insb
iret
sbb
mov
lahf
push
mov
xchg
aaa
mov
ss
in
in
sti
dec
lret
popa
pop
inc
sub
or
test
in
mov
adc
mov
cmp
push
jmp
lret
mov
out
xchg
mov
and
push
jmp
sub
repz
sbbb
stos
xchg
ja
subl
xor
push
mov
jecxz
sub
outsb
and
aad
xchg
nop
jge
inc
loopne
jo
insl
jp
mov
mov
or
cmpsb
pop
push
daa
cld
inc
inc
sub
testb
lret
fwait
ljmp
shrl
enter
pop
adc
leave
dec
bound
fcomps
mov
or
sub
jmp
and
or
and
jno
test
push
xchg
and
out
or
lret
pop
adc
js
jbe
aas
fs
rol
cmp
cmpsb
fisubl
pop
nop
mov
xor
adc
push
scas
dec
push
mov
cmpsl
ja
pushf
lret
and
sub
mov
mov
mov
xchg
inc
jne
sbb
push
es
lcall
push
ja
sbb
mov
mov
mov
ja
jns
lret
jle
mov
jge
pop
outsb
sbb
add
or
pop
jae
xchg
mov
mov
adcb
int3
jl
popf
cmp
add
lock
dec
jp
je
fisubrl
cmpsl
pop
xchg
ljmp
les
xor
xor
xor
or
inc
push
call
push
lods
imul
push
xchg
push
dec
xchg
mov
int3
sbb
inc
adc
aad
inc
dec
fisubs
stos
and
jbe
ficoml
mov
push
pop
lods
and
sbb
dec
clc
and
not
ret
push
mov
es
inc
mov
mov
lret
js
dec
mov
notl
dec
push
fdivrs
sti
daa
dec
pop
mov
ret
pop
das
lods
sbb
xor
pushf
dec
movsl
outsb
popa
dec
dec
scas
dec
loopne
je
xchg
jae
cli
push
stc
icebp
xchg
mov
add
add
mov
test
mov
test
or
lods
push
add
sbb
pop
add
je
insb
js
pushf
shr
mov
inc
dec
xchg
pop
out
mov
mov
data16
inc
xor
mov
push
in
sub
jbe
and
lds
adc
xchg
add
outsl
shlb
and
outsb
lods
xor
inc
inc
rcl
aam
push
ja
stos
jo
iret
shl
repnz
dec
roll
dec
mov
add
mov
xlat
inc
adc
jge
fcompl
inc
xchg
cmp
fs
inc
cmpsb
push
lret
movsl
adc
sub
scas
xor
ljmp
ljmp
data16
aam
nop
cmp
adc
andb
pop
or
in
mov
loop
xor
jg
adc
je
or
inc
inc
jp
daa
roll
pop
pop
xchg
sbb
jo
popf
lea
xorl
cli
stc
mov
dec
imulb
out
mov
hlt
adc
hlt
add
imul
xchg
mov
add
hlt
jo
inc
push
push
sti
jp
mov
jmp
jnp
sub
mov
add
mov
mov
test
adc
fidivrs
pop
insb
jge
jle
in
dec
xchg
adc
jo
mov
and
pop
or
cmp
xor
testl
sbb
lcall
loope
jae
imull
daa
push
andb
jge
clc
pop
call
and
orb
xor
stos
out
fxch
xor
test
ljmp
in
das
pop
in
cmpsl
lods
dec
daa
inc
mov
and
out
aas
mov
mov
inc
jecxz
mov
mov
mov
icebp
mov
cltd
jle
mov
das
push
int
sbb
mov
mov
add
cmp
xor
push
push
dec
xchg
fwait
lds
mov
shlb
cltd
stos
rcrl
jmp
shlb
mov
and
ret
jg
and
daa
mov
ret
or
dec
icebp
push
or
addr16
cmpl
mov
lock
pop
lret
iret
xchg
sar
out
jp
sbb
imul
leave
sub
repnz
int3
mov
fs
dec
add
sbb
inc
xchg
xchg
inc
rol
lock
xor
ja
jb
test
push
pushf
inc
dec
pop
xchg
aam
lret
aad
mulb
cmpsl
ret
movsl
std
ja
out
xchg
std
cmp
inc
push
pop
jne
and
mov
or
jmp
pusha
lahf
cwtl
or
or
xchg
or
xor
cmp
in
fildll
pop
fisubs
cmp
xlat
enter
iret
lret
dec
fstp
data16
int
test
subb
aad
dec
jp
movl
cwtl
or
fistpll
cld
inc
fsubrp
pop
negb
fcompl
or
sub
inc
lods
mov
push
mov
xchg
cmpl
adc
call
or
dec
test
pop
push
icebp
gs
mov
rorb
mov
push
mov
mov
pushf
pop
xchg
aad
hlt
fs
out
pop
sbb
rorb
andb
xchg
inc
fstps
lret
imulb
pop
clc
push
cs
inc
cmp
aad
sbb
adc
jno
mov
stos
jle
add
jb
in
sub
idivl
rolb
xchg
test
xor
adc
jo
pop
and
or
mov
push
ja
jmp
repz
push
jl
and
fnstenv
arpl
cli
insb
mov
add
ss
mov
xor
mov
out
ret
or
lea
imulb
fs
lods
fbstp
mov
int3
notl
aad
ljmp
data16
or
divb
fnstcw
ret
mov
cltd
and
jbe
inc
or
es
mov
pop
dec
std
stc
cld
pop
sbb
cmpsl
xchg
outsl
into
cmp
and
ja
loopne
sbb
testl
pop
mov
stc
lahf
xchg
dec
outsb
push
xchg
pop
ret
and
repz
imul
addr16
fidivl
inc
xor
push
sub
push
js
nop
and
scas
mov
xor
int3
nop
jne
xor
les
xor
pushf
pop
rcrl
les
movsb
mov
push
mov
sbb
loopne,pn
adc
stc
aaa
xchg
or
xchg
mov
sub
loopne
mov
divl
mov
xchg
inc
sahf
pop
pop
andl
xchg
cltd
js,pt
sbb
pop
and
lds
cmp
sub
push
mov
adc
sub
call
ds
mov
and
orl
xor
fildl
testl
sub
ja
dec
push
sbb
xchg
xor
pop
jle
push
xchg
mov
inc
xchg
aad
ljmp
pop
aam
jp
ret
push
mov
and
cmp
xchg
xchg
inc
cli
or
or
fdivr
stos
push
mov
fisttpll
mull
xor
or
pop
mov
dec
loop,pt
in
xor
jae
pop
repnz
mov
dec
nop
xchg
xlat
rcr
pop
push
ret
mov
movsb
fsubl
inc
lods
call
cmpsb
jno
jnp
sbb
test
cmpb
mov
arpl
out
daa
jae
mov
jno
enter
imul
dec
mov
and
push
adc
or
mov
sbb
cmp
out
or
adc
mov
pop
push
mov
mov
mov
mov
cli
xchg
sbb
pop
outsl
or
inc
test
ds
pusha
add
mov
scas
mov
imul
je
in
adc
inc
mov
loopne
mov
js
adc
fmulp
or
testb
xchg
nop
pushf
decb
fwait
mov
negl
ret
cs
add
aam
mov
pop
jge
mov
pop
dec
lds
push
sbb
cmpsl
faddl
sub
sbb
aas
adc
pop
dec
xlat
rcr
fcoml
ret
fs
dec
add
sub
adc
in
cwtl
adc
push
inc
sub
test
pop
inc
cltd
xchg
leave
fists
or
in
outsb
adc
ret
addr16
or
lcall
bound
mov
ljmp
mulb
lea
ficoms
sbb
stos
inc
scas
push
inc
call
pushf
dec
dec
pop
sbb
jo
inc
pop
fistpl
jnp
inc
pop
test
mov
pushf
xor
mov
lret
mov
cld
fwait
scas
out
mov
add
data16
repz
lret
lret
inc
pop
sbb
idiv
jle
mov
orl
xchg
test
xchg
sub
or
fsubr
mov
sub
sahf
push
dec
not
je
scas
and
mov
mov
lods
xchg
shr
jecxz
iret
fmuls
inc
test
and
test
out
adc
or
jnp
cld
outsb
sub
sbb
lea
or
mov
fsts
das
xchg
inc
popa
push
mov
mov
jne
lcall
push
jl
cmc
cmpsb
imul
sbb
pop
scas
jmp
jne
and
int3
sub
aas
pop
inc
ja
fsubrs
jne
mov
movsb
dec
fldcw
cmc
inc
outsb
dec
jle
push
int
stos
push
xorb
loop
xchg
jge
out
stos
ret
js
out
xor
arpl
fstpt
dec
add
and
mov
sbb
loop
aam
mov
scas
inc
push
cmc
push
mov
and
lcall
xchg
loope
pop
pop
dec
cmp
mov
loop
out
pop
cmc
or
sbbb
lods
mov
mov
dec
xor
xor
lock
stc
sbb
aad
sbb
sub
lcall
lods
xor
cmp
ljmp
jp
or
jle
sahf
imull
inc
mov
lahf
sub
shll
push
sub
insl
rorl
dec
mov
add
cmp
add
je
xchg
sbbb
pop
or
dec
pop
fidivrl
add
sub
fsubrs
or
jae
lock
jmp
pop
sub
xor
xor
rcrb
cli
loopne
pop
in
sbb
rorb
pop
imul
push
cwtl
xor
in
and
out
pop
out
push
shll
ja
inc
ret
daa
pushf
jecxz
outsb
inc
divb
and
or
lea
pop
xlat
mov
arpl
add
repnz
add
aas
push
repnz
repz
popf
pop
int
xlat
arpl
rolb
pop
jle
and
test
lahf
mov
inc
or
fs
sahf
inc
enter
pusha
sub
pop
pop
inc
lods
sarl
mov
jo
xor
and
inc
test
das
jae
addr16
adcb
mov
lret
xor
push
push
popa
add
xor
mov
and
enter
rcrl
aad
out
lds
lds
mov
push
sbb
cmp
repz
inc
out
lret
cmp
pop
nop
or
pop
mov
mov
iret
cmp
inc
add
add
inc
mov
xor
cmpsb
xchg
out
insb
sub
sarl
pop
cmp
das
in
repnz
out
andl
jne
sbbl
pop
mov
les
mov
jp
pop
and
sbb
shrl
adcl
xor
mov
data16
adcl
sbb
outsl
push
pop
sub
adc
rolb
lret
hlt
dec
out
mov
pop
insl
cmp
push
mov
ljmp
xchg
cs
sti
cwtl
ja
pop
in
add
out
aaa
sbb
andl
mov
xchg
ds
xor
jl
mull
push
xchg
dec
push
imul
pushf
jns
movsb
call
xchg
push
sbb
ds
xchg
fimuls
sub
outsl
frstor
pop
dec
mov
into
sbb
or
push
call
fnsave
fxch
lahf
cmpsl
daa
jle
aam
add
push
add
fcoml
aam
or
int3
test
arpl
das
mov
outsl
in
push
imul
dec
pop
xor
and
repz
push
and
push
loope
and
ret
lea
sbb
add
rorl
out
mov
int
rclb
das
fwait
sti
mov
and
pop
fdivrs
xchg
and
call
jb
stos
mov
addl
int3
mul
ss
xchg
mov
mov
inc
and
test
mov
mov
scas
nop
ljmp
pop
dec
pop
dec
jge
lea
mov
sarb
xchg
pop
inc
repz
mov
pop
lods
pop
mov
je
cmp
setne
shrl
mov
stc
in
ret
jmp
add
cmp
das
ds
pop
in
std
xchg
sbb
mov
jne
ror
xor
js
add
xor
rep
shrl
add
and
mov
sarb
xor
subl
faddp
imul
push
divl
sbb
mov
enter
outsb
or
push
xor
adc
jmp
test
cmp
hlt
aas
and
imull
cwtl
xchg
mov
xchg
scas
rclb
jmp
ljmp
add
pop
sbb
mov
mov
mov
les
mov
dec
jae
in
fstpl
and
fidivrl
mov
xor
aas
or
dec
shrb
mov
xchg
out
push
dec
dec
add
mov
out
je
fiaddl
push
push
das
xchg
xchg
push
inc
dec
or
aam
sarl
imul
das
sub
std
and
imul
push
dec
fisttpl
mov
push
jge
addb
add
add
jne
cmp
lret
pop
ja
add
loop
fistpll
xor
or
pop
pop
dec
mov
inc
cmp
repz
jae
aas
scas
std
pop
test
call
in
cli
call
daa
sbb
and
mov
push
inc
lds
insl
push
lea
pop
in
fsts
cmp
xlat
cmpsl
mov
pop
lret
mov
adc
and
clc
mov
pop
lahf
fstl
pop
insl
shll
xchg
add
mov
sti
or
and
pop
arpl
lret
xor
and
fcomps
in
in
adc
mov
movsl
mov
sbb
loope
inc
jl
icebp
dec
push
sub
mov
xchg
out
ja
ja
push
xchg
jecxz
jne
sbb
add
and
pop
mov
push
xchg
cmp
jo
iret
cmp
xor
sub
and
jmp
mov
mov
push
into
dec
mov
negb
or
pop
push
cmp
adc
movsl
cmp
jo
mov
push
mov
ja
inc
jle
clc
repz
cli
jge
loopne
lahf
mov
sub
cmp
arpl
lds
pop
insl
pop
xchg
mov
sbb
push
or
sub
or
mov
fwait
push
lahf
rolb
out
fwait
inc
loope
mov
jno
popf
and
pop
mov
inc
out
mov
cmp
cmp
jnp
testb
mov
add
clc
loopne,pn
mov
sub
fistps
leave
and
dec
loopne
adc
add
mov
decb
fs
cmp
xchg
push
pop
dec
repz
push
pop
sub
push
cmpsb
mov
out
les
xchg
les
jle
mov
sub
jb
cmova
jle
cmc
sarb
sub
out
daa
adc
stos
data16
addr16
and
mov
push
movb
adc
call
je
pop
icebp
arpl
movsb
imul
andb
mov
jo
pop
add
pop
lods
aam
mov
pop
fmuls
adc
xor
mov
push
mov
in
cmp
movsl
xor
sbb
push
xor
iret
out
push
pop
sub
cmp
and
xor
cmp
rcr
in
int3
dec
dec
xlat
and
or
jns
xor
pusha
movsb
push
fst
adc
insb
or
and
fidivrs
lds
mov
imul
push
cmp
or
subl
push
pop
sub
nop
arpl
insl
xor
xor
push
stos
xchg
out
shrl
pop
xchg
ss
mov
mov
push
inc
xor
or
les
stos
cmp
int
mov
cs
inc
inc
adc
and
gs
and
stos
pop
pop
jo
shlb
push
test
sti
xchg
xor
sub
push
add
mov
pushf
or
xor
pop
inc
pop
xchg
mov
adc
sub
cltd
in
push
repz
movsb
aad
sbb
js
xchg
cmpsb
out
int3
repnz
loopne
in
stos
inc
ja
xor
lds
rorl
fs
scas
mov
xchg
cmp
sub
cltd
movsb
in
add
aad
idivl
mov
adc
xorl
inc
mov
repnz
les
stc
fldl
les
push
pop
mov
js
arpl
adc
addr16
or
xchg
dec
je
jno
loope
sbb
adc
jl
inc
adc
jle
add
jnp
adc
push
xchg
scas
pop
hlt
sti
cmpsb
mov
fs
outsb
mov
aaa
clc
mov
fwait
dec
lods
fildl
push
jmp
sub
add
push
mov
sub
dec
mov
nop
fidivs
lea
xchg
fidivrl
xchg
lret
jno
or
insl
clc
aad
fidivrs
jbe
loope
add
insl
mov
dec
rolb
push
call
dec
cmpsb
inc
xor
dec
adc
xlat
imul
outsb
add
stos
outsl
pushf
imul
jno
jmp
mov
cmp
arpl
mov
sbb
mov
pop
mov
mov
pop
enter
rorl
sub
push
mov
pushf
test
dec
std
adc
rcl
test
lahf
xchg
addl
xchg
inc
pop
test
jns
fwait
and
ss
push
loop
inc
pop
sbb
or
and
add
rorb
xchg
push
lret
cmp
test
push
inc
shrb
or
push
xor
sub
ret
lock
cs
dec
dec
dec
sbb
jmp
sub
call
pop
fdivrs
sbb
negl
fbstp
ds
pop
push
add
jnp
mov
aaa
je
xor
xchg
push
xchg
inc
fstl
mov
xor
xor
scas
push
mov
je
in
pop
add
xchg
movsb
add
inc
cli
sub
mov
push
fld
fildl
cld
pop
xor
data16
hlt
xchg
or
repnz
mov
mov
jl
leave
jecxz
addl
jnp
ficompl
inc
hlt
and
push
sti
mov
push
xchg
not
jae
adcb
push
ljmp
push
lahf
out
or
scas
push
push
test
pop
and
sub
lds
add
les
fcomps
dec
aam
pop
mov
sub
adc
pop
pop
push
cmp
dec
and
mov
push
cmpsl
mov
inc
loopne
adc
xor
in
or
dec
lret
xorb
pop
mov
aaa
mov
dec
add
pop
ds
iret
mov
cwtl
push
ljmp
xchg
iret
cmpsb
mov
jmp
imul
dec
cmp
inc
repnz
or
mov
or
stos
sbb
xchg
lods
sub
xchg
aam
insl
test
int
jg
jl
cwtl
adc
call
in
ret
push
loopne
test
jne
stos
movsb
dec
or
stc
stos
pop
nop
out
fcomps
data16
movb
lahf
jmp
and
int3
sbb
arpl
cmp
sbb
pop
push
mov
xor
and
ljmp
xlat
scas
insb
sarb
pop
icebp
add
andl
pusha
out
xor
pop
ds
and
data16
mov
enter
push
dec
or
addr16
dec
add
jp
and
mov
mov
jno
adc
dec
xchg
mov
jo
xor
adc
lods
pop
adc
das
dec
push
lds
dec
mov
pop
xchg
mov
movsl
fxsave
hlt
add
or
imul
adc
scas
bound
mov
push
nop
sub
cmpsb
push
je
push
jae
jmp
dec
add
ljmp
loopne
sub
push
aam
int
nop
loopne
pop
cwtl
out
fwait
mov
and
inc
lea
hlt
pop
push
lea
add
mov
fnstsw
push
js
ret
sub
xchg
stos
iret
fidivs
adc
jae
mov
push
xchg
add
mov
andl
sub
cs
not
push
mov
sub
and
mov
call
pop
imul
and
pushf
lahf
shrl
inc
push
test
and
and
mov
shrb
adc
clc
sbb
lods
gs
js
adc
cmc
cwtl
pop
jmp
hlt
jl
shl
adcb
cmp
aad
xchg
jle
js
jmp
push
sti
fldl
cmc
cmp
out
out
mov
cwtl
out
cld
cmpl
pop
and
push
bound
test
jo
aaa
negb
jp
mov
loop
mov
lret
mov
dec
loope
adc
xchg
push
in
inc
pop
inc
jecxz
xchg
lret
or
mov
xchg
add
pop
js
jns,pt
dec
inc
mov
clc
push
push
mov
xchg
xchg
in
mov
jne
pusha
repz
leave
push
in
pop
dec
push
lcall
add
in
movsb
fwait
jg
or
testb
in
jp
inc
aad
mov
scas
les
xchg
jp
lret
fisttpll
jo
shll
xchg
sub
andl
jae
adc
jns
inc
and
jl
push
mov
loope
popf
xchg
stos
pop
fsubrp
jmp
and
lea
test
mov
and
pop
xor
mov
mov
mov
imul
jmp
movb
push
aad
push
stos
jmp
in
out
xor
sysret
mov
ss
mov
dec
cli
gs
loopne
push
mov
shrb
jp
lret
mov
xchg
gs
jle
dec
mov
mov
xchg
cmpsb
ljmp
mov
cmpsl
adc
and
cmp
pop
scas
ret
push
mov
pop
lea
and
fs
and
pop
adc
daa
arpl
mov
dec
cli
push
repnz
sub
xchg
mov
aas
cmc
repnz
add
push
shlb
push
mov
xor
push
cwtl
gs
dec
mov
or
sbb
sbb
cmp
lahf
pop
jne
or
loope
ljmp
stos
ds
sbbb
sbb
sub
das
adc
scas
sub
dec
dec
adc
mov
jo
and
mov
sbbb
cltd
popf
sahf
xchg
xor
lods
and
inc
nop
je
lds
adc
cmc
fwait
mov
js
pop
and
mov
stos
ss
imul
inc
call
fldl
int3
pusha
add
cwtl
mov
pop
jg
enter
cmp
out
ret
sub
les
out
adc
mov
sub
orb
inc
int
push
mov
and
in
sahf
mov
pmaxub
pop
push
pop
push
std
xchg
enter
lret
fucom
les
ret
icebp
mov
inc
or
les
popa
ljmp
sahf
mov
dec
movsb
mov
gs
je
pop
testb
pop
add
icebp
mov
sbb
shl
in
mov
mov
push
and
dec
push
cmp
mov
add
push
push
scas
je
fdivl
pushf
xor
adc
mov
adcl
or
push
sub
stc
mov
sub
sahf
sbb
push
xchg
fdivrs
mov
xor
push
xor
popa
in
sbb
int3
pop
inc
fstpt
sbbl
insb
and
outsl
sbb
push
outsb
dec
cmc
dec
ror
sub
lret
mov
mov
sub
cmp
mov
test
ds
dec
dec
jae
pop
xor
sbb
mov
stos
or
test
outsl
std
lcall
imul
mov
pop
dec
enter
fcomps
push
testb
sbb
sbb
rorl
or
mov
xchg
sahf
popf
xor
mov
aaa
dec
cli
call
or
add
mov
sub
mov
push
outsl
aaa
jnp
roll
lcall
jcxz
aam
adc
jg
insl
lea
dec
pop
pop
xor
xchg
xchg
sbb
mov
ja
or
push
aas
pop
into
cmpsl
sub
add
clc
jne
lods
mov
jp
jl
imul
in
xchg
jae
push
or
loopne
xchg
int3
sbb
arpl
scas
push
cmc
jmp
into
pop
mov
repz
push
sub
aas
std
cmp
lret
push
push
out
mov
mov
dec
adc
adc
pop
aaa
jno
xchg
push
fbstp
ja
fimuls
fs
nop
adc
addr16
jnp
fidivrl
jb
shrb
ds
lods
adc
inc
fistps
and
dec
movb
mov
cli
das
dec
outsl
or
scas
adc
inc
sub
mov
fwait
xchg
outsb
xor
adc
mov
cmpsb
cmp
push
outsl
jl
sbb
pop
pop
xchg
leave
sbb
fstps
daa
inc
cwtl
out
inc
and
int
xor
rcll
testb
inc
or
lret
fdivs
cli
jp
xchg
je
xchg
shrb
push
ljmp
fcompl
icebp
insl
gs
outsl
cltd
cmp
inc
jmp
ss
add
fidivs
xchg
xor
es
shr
jge
pusha
xchg
xchg
jae
adc
jle
push
or
xor
lock
xchg
jmp
xchg
out
dec
sbbl
adc
lds
xlat
xchg
add
and
fcmovu
outsl
adc
pop
cmp
outsb
xchg
xchg
adc
ljmp
daa
stos
and
jge
ss
or
shrb
cmpsb
sub
add
adc
test
es
mov
sarl
cmp
sub
scas
sbb
repnz
rorl
and
pop
popf
dec
cmp
or
dec
xor
daa
in
and
xchg
or
and
push
faddp
mov
sbb
fwait
shr
loope
test
pop
orl
fldcw
insb
push
outsl
pushf
push
xlat
enter
sub
repnz
cld
ljmp
mov
in
enter
test
xchg
in
setle
addr16
xor
adc
je,pn
int3
and
loopne
jb
rcrl
stos
and
sbb
xorl
adc
test
inc
test
fistl
aad
in
mov
mov
or
ficoms
jecxz
push
add
adc
outsb
pop
je
daa
cmpsl
add
cmpsb
stos
or
dec
mov
loopne
or
dec
ljmp
jb
popf
xchg
push
dec
cmp
fwait
mov
fsubrp
dec
shlb
test
jb
or
or
dec
scas
fsubs
jo
cwtl
inc
stos
add
pop
pop
push
pop
sbb
jae
pop
adc
xchg
sub
xlat
xchg
ffreep
or
xlat
insb
jp
mov
mov
add
in
and
pusha
sub
imul
push
in
dec
push
xchg
cmp
and
mov
std
adc
cmp
je
jl
jnp
jne
pop
dec
jne
sbb
jge
fldt
xor
push
push
ret
lods
xchg
test
testb
pushf
mov
test
loopne
mov
sbb
push
mov
xor
cmp
adc
shld
aaa
rorl
out
js
jge
inc
ljmp
out
aas
xchg
xor
outsl
sbb
repnz
cmpsb
ror
dec
ljmp
jns
push
mov
jle
das
pusha
pop
ljmp
jmp
mov
xor
jle
xchg
ljmp
stos
push
cld
push
int
test
pop
movsl
test
xor
pop
adc
xor
dec
xorb
addr16
subb
xchg
stos
gs
aad
fisubrs
xor
pop
pop
stos
inc
sub
mov
mov
cmpsl
mov
leave
add
data16
jecxz
sbb
pusha
cmp
jmp
xchg
enter
out
in
clc
call
out
inc
movsb
je
mov
sbb
lcall
pop
decb
sbb
outsl
dec
aas
adc
push
jg
jle
sub
fistpl
mov
sub
push
mov
lret
mov
in
pushf
push
ret
adc
pop
aad
adc
inc
popf
jg
push
dec
mul
jbe
dec
fsubs
das
rep
mov
add
add
and
cli
push
das
add
adc
push
into
mov
jecxz
rol
adc
arpl
mov
dec
aas
fwait
shl
insl
adc
mov
cmp
xchg
fwait
lds
idivb
jmp
inc
movd
mov
add
lret
mov
jb
push
push
and
cli
pop
push
andb
xchg
nop
clc
gs
in
cmc
setne
popf
mov
jno
scas
mov
pop
cmp
cmp
mov
xchg
ret
mov
jg
mov
std
addr16
push
add
scas
hlt
outsb
inc
pop
rep
xchg
jg
pop
test
mov
clc
fisttpl
outsl
fnstcw
push
enter
adc
cmp
aas
in
xchg
sbb
xchg
ds
push
mov
inc
stos
jle
pop
mov
sub
push
inc
xor
lcall
mov
and
mov
dec
scas
rclb
movsb
imul
push
or
xchg
jbe
fidivrl
sub
or
cmp
xor
ret
pop
push
loope
xlat
jg
adc
pop
cmp
insb
mov
push
push
add
jbe
stos
imul
jmp
add
mov
sbb
lock
xchg
dec
xchg
negl
ljmp
push
and
adc
mov
pop
push
aas
xchg
mov
in
cmc
notb
add
dec
push
leave
jnp
xor
std
cmp
inc
ret
xor
cli
stc
int
loop
pop
or
lahf
fsubs
push
fwait
bound
es
xor
andl
hlt
push
insb
jl
mov
icebp
fimull
aad
sbb
mov
pop
in
pop
sbb
mov
xor
inc
mov
decb
push
xchg
adc
push
mov
outsl
loope
push
xchg
js
movsb
fwait
notb
dec
popa
xchg
sbb
add
mov
int3
das
dec
add
xchg
lock
and
pop
inc
pop
out
push
dec
popa
f2xm1
lret
push
pusha
test
xor
or
xchg
lock
cli
mov
icebp
shr
xchg
mov
loop
add
and
and
jle,pn
mov
lahf
inc
rcrb
sub
jae
mov
jne
mov
mov
stos
lea
in
stos
orb
call
aas
xchg
outsb
jb
fisttpl
xchg
mov
cmp
clc
cmp
adc
mov
add
icebp
push
mov
mov
dec
push
or
mov
daa
push
push
lods
cmp
mov
and
add
xchg
and
pushf
pop
daa
stos
int3
lret
push
jl
rcrl
es
dec
jecxz
shll
push
movsb
pop
mov
cmpsb
xor
dec
je
inc
in
dec
stos
mov
lds
sub
jo
std
call
popf
mov
dec
pusha
push
or
xor
jg,pn
xchg
xor
mov
sub
cld
cltd
add
jnp
push
imul
cwtl
fdivl
pop
xchg
dec
je
rorb
sub
jmp
adc
addb
call
xchg
movsb
sbb
pop
inc
ret
mov
ret
cmp
dec
jmp
cmp
push
and
sub
dec
dec
push
sub
lea
push
push
jno
mov
lret
adc
into
xchg
or
movsb
cmc
shl
jae
repnz
mov
outsl
aad
aas
adc
adc
sbb
mov
mov
xor
jb
shrl
inc
test
fists
xor
inc
outsl
xor
ss
add
lahf
insl
adc
adcb
mov
ret
cmc
push
xor
xchg
test
mov
ret
lods
fcoms
hlt
add
mov
je
loope
pop
movsb
cmpsl
xchg
mov
xchg
sub
jbe
ljmp
dec
sbb
pusha
add
push
mov
enter
or
sbb
mul
jl,pt
mov
jl
push
lret
loope
mov
push
cmp
shrb
mov
push
jno
fs
xor
sti
cmp
inc
sub
adc
int3
mov
adc
jle
scas
les
test
inc
negl
mov
xchg
jnp
popf
mov
popf
insb
fistps
lods
filds
jnp
pop
sti
imulb
xor
fldenv
out
xchg
sub
add
lds
jbe
lods
ds
push
test
jne
ja
pop
insl
repnz
out
sub
mov
or
movsb
incl
in
ljmp
mov
mov
fistps
and
test
cmp
das
out
mov
or
jle
sbb
pop
push
mov
repnz
mov
test
xchg
mov
sbb
cwtl
out
xor
out
jl
enter
push
push
fs
lahf
inc
mov
scas
test
clc
movsl
sahf
cmp
xorb
leave
adc
mov
or
inc
adc
adc
mov
ret
leave
sub
mov
clc
es
jb
or
ret
push
jne
jecxz
scas
leave
xor
inc
sbb
xchg
lcall
clc
lods
cwtl
fs
mov
rcl
movsl
pop
loope
mov
mov
push
mov
leave
fdivr
xor
sbb
inc
mov
xor
rcrl
inc
pop
iret
jns
xchg
out
add
orl
inc
sbb
scas
push
pop
jno
data16
sbb
mov
and
aam
mov
das
fdivrl
into
xchg
inc
push
push
popaw
ficomps
je
stc
jno
xor
scas
cmp
cs
cmp
and
push
in
ljmp
jae
push
adc
lds
cltd
dec
repnz
outsl
sbb
pop
mov
mov
mov
enter
ljmp
cld
push
inc
pop
push
sub
push
jg
cmp
inc
sti
push
insb
xor
ss
dec
insl
cmp
fsubrs
sbb
idiv
xor
rorl
xchg
inc
daa
mov
push
stc
or
push
sbb
stos
aad
jp,pn
mov
sbb
push
icebp
dec
icebp
lea
jmp
xchg
dec
lret
mov
jg
dec
inc
ret
ret
push
fwait
leave
mov
xchg
jp
ss
jnp
or
out
add
dec
icebp
push
mov
mov
inc
out
or
cmpsl
xchg
pushf
scas
xchg
ret
add
push
and
gs
cli
adc
pop
aam
xor
lahf
xor
mov
aad
das
int
or
mov
or
and
ret
jae
xchg
push
rol
lock
ret
or
inc
test
pop
call
call
flds
adc
insb
aas
lcall
sar
adc
or
pusha
push
pop
sbb
sub
outsl
sbb
sarl
adc
xchg
jbe
and
mov
mov
cmp
push
rcrb
push
mov
addr16
sarb
bound
sbbl
js
lahf
fld
pop
popf
jcxz
cmc
js
pop
out
pop
mov
xlat
test
mov
outsl
ret
test
cwtl
pop
hlt
cli
xor
icebp
push
jp
das
inc
sti
xor
mov
adc
pop
stos
jbe
xor
stos
adc
adc
cwtl
addr16
aam
and
test
inc
and
mov
subb
addb
inc
jne
push
std
xor
mov
push
cmpsb
xor
out
xor
js
jmp
adc
inc
loope
fstpt
aam
lret
aaa
and
pop
in
lret
rorb
int3
scas
pop
mov
add
mov
pop
cmp
int
dec
lods
inc
int
adc
xchg
in
sti
push
xor
out
out
call
mov
push
ror
mov
mov
and
xor
adc
add
clc
mov
cmp
inc
xor
inc
push
pop
push
cmc
out
fistpll
orb
pop
adc
pand
pop
ficoms
inc
mov
scas
xchg
orb
push
and
insl
adc
std
mov
adc
bound
or
les
ss
rcrb
aas
push
mov
jo
xchg
jns
sub
mov
mov
mov
adc
xchg
hlt
xorb
jle
mov
lock
repz
pop
sbb
pop
mov
int
push
lea
xchg
ds
test
jbe
fisubrs
push
pop
ret
sbb
pusha
popf
cmp
adc
lret
inc
loope
jae
push
push
sub
incl
mov
mov
ja
int3
mov
rcll
jnp
sub
add
out
inc
addr16
gs
enter
out
hlt
imulb
mul
imul
sbb
mov
daa
mov
enter
push
shll
xor
scas
xor
roll
push
insb
sbb
push
and
mov
and
das
aaa
lcall
test
or
mov
pop
inc
test
jl
mov
mov
movsl
outsb
mov
orb
imul
popa
mov
pop
add
sbb
xchg
jne
or
je
int
mov
icebp
xchg
aas
in
test
cwtl
or
rcr
pushw
shl
inc
faddl
imul
addr16
sbb
sahf
clc
sub
jne
push
clc
jge
bound
pop
sti
sub
pop
test
jg
clc
xor
lret
loope
dec
iret
outsl
add
pop
call
loope
aaa
rcl
mov
xchg
inc
aad
arpl
shlb
cmp
mov
or
in
divb
and
out
mov
popa
xlat
fisubrl
cmp
inc
inc
pusha
cmp
fs
ljmp
fwait
mov
leave
sub
cmp
dec
jp
aam
push
fs
pusha
lea
push
imul
sub
ret
and
adc
pop
mov
sub
clc
inc
push
jle
shr
loopne
push
jns
dec
pop
mov
out
and
push
sbb
sub
pop
enter
mov
testb
add
fsubr
repnz
in
sbb
iret
mov
cmpsl
xchg
xchg
lea
add
sahf
leave
dec
push
add
pop
je
cmp
push
mov
inc
xchg
popa
pop
dec
ja
in
int3
inc
dec
in
add
mov
pop
rclb
in
jne
cmc
ret
pop
inc
sbb
ja
pop
and
sbb
out
push
xchg
jne
lods
xor
leave
imul
mov
mov
jg
jo
ja
inc
test
fildll
mov
std
icebp
jns
mov
and
rcl
fcomip
jb
int3
sti
add
leave
dec
add
into
adc
shrl
out
inc
nop
in
in
mov
shll
ds
sbbl
jp
mov
lahf
sbb
mov
or
cmp
fdivrs
mov
pusha
icebp
xor
cld
push
jno
call
jge
shl
rcl
xchg
inc
cltd
or
dec
adc
repz
hlt
mov
adcb
or
mov
rcr
inc
sahf
sub
push
push
pop
aas
enter
cmp
iret
pop
dec
std
cmpsb
jae
fs
sbb
inc
push
outsb
in
adc
std
jp
cli
and
adc
mov
cmpsl
lods
mov
pop
mov
cwtl
cwtl
add
stos
scas
fsubrs
enter
ret
cmp
or
in
or
push
push
out
mov
dec
lods
lods
mov
clc
and
mov
and
imul
sub
adc
aam
add
mov
xor
into
pop
push
mov
out
mov
int
int
pop
jmp
cmp
add
mov
subl
push
arpl
jle
out
cmpl
mov
push
mov
dec
repnz
das
fstpt
fwait
sub
mov
and
xchg
cmp
xchg
dec
add
add
sbb
jmp
bound
mov
xchg
repz
dec
push
pop
mov
in
rorl
mov
lret
test
lahf
mov
jge
ljmp
mov
gs
stc
mov
loopne
fildl
test
cmpsb
adc
xchg
mov
movsb
add
pop
cli
mov
push
jg
mov
add
in
mov
outsb
pop
fdivrl
push
xchg
inc
inc
xor
xchg
sub
and
sahf
ficompl
fisubrs
fcompl
jno
loop
insl
mov
xor
mov
sub
add
test
inc
xor
outsb
jns
add
cmp
xor
popf
rol
sahf
test
loope
mov
jo
stc
sub
aad
daa
cmpsb
push
outsb
dec
inc
push
imulb
jmp
out
cmp
push
and
mov
add
in
pminub
sbb
jl
loopne
daa
mov
call
insl
out
cmp
pop
fisttpll
sbb
flds
pop
cmp
adc
test
in
jge
xchg
je
sub
lods
pop
or
mov
xchg
pop
xchg
js
inc
repz
scas
xlat
pop
cli
xlat
ret
sahf
fisttps
sbb
arpl
dec
je
sub
aad
sarb
jbe
sub
stos
aas
rcrb
popf
pop
test
lods
push
fs
or
lret
test
aaa
cmpsl
and
pop
add
add
andb
mov
loopne
mov
xchg
adc
adc
adc
icebp
jmp
dec
rep
cli
inc
sub
mov
mov
adc
add
outsl
shll
adc
xor
iret
movsb
dec
jg
loop
dec
xor
mov
mov
mov
jecxz
mov
mov
das
clc
je
cmpsl
stc
loopne
adc
js
and
adc
pop
sbb
pop
and
int3
stc
xchg
xor
cmp
xchg
and
or
jns
rorb
xchg
and
lcall
lods
mov
sbb
xchg
cmp
adc
inc
adc
ds
mov
mov
sbb
and
or
enter
ja
outsb
jl
rolb
jle
lret
aam
sbb
mov
sbb
cmpsl
repnz
ret
mov
xlat
outsb
mov
outsl
les
fadd
xchg
pop
cmp
jg
mov
push
ljmp
fwait
adc
mov
pop
cltd
sub
dec
andl
xchg
mov
push
push
stos
outsl
mov
push
jp
divl
imul
out
out
ljmp
sub
scas
mov
mov
or
stos
and
xchg
movsb
xchg
mov
pop
mov
cmc
add
into
aas
cwtl
in
or
shr
ret
push
pop
inc
shlb
ss
iret
xchg
mov
add
push
cli
xor
aas
pop
scas
xchg
mov
inc
pop
je
fs
repz
bound
jne
movsb
lds
lcall
test
inc
xlat
out
shlb
mov
mov
push
cmpsb
adc
cmp
aad
notl
pop
sbb
test
cmp
and
inc
ror
jae
jae
inc
lods
lahf
adc
sub
out
sub
xor
mov
sahf
add
jmp
scas
xchg
fldcw
sub
in
jecxz
mov
out
test
cmp
fwait
clc
inc
cmp
sbb
inc
jb
out
and
sub
cmp
sbb
sarl
lods
cmp
pop
test
pop
push
xor
sub
push
cwtl
cli
pop
jno
movsb
or
fwait
enter
dec
mov
or
lock
sub
dec
inc
add
inc
lods
xchg
out
jb
nop
xchg
jbe
adc
aad
xor
dec
out
in
insl
arpl
or
rep
ds
loopne
push
xchg
and
xchg
push
xor
xabort
cmp
inc
ljmp
dec
pop
or
pop
sub
adc
dec
sub
ret
mov
xchg
cmc
fistpll
jl
test
dec
bound
pop
push
gs
andb
jecxz
subl
les
icebp
std
push
mov
inc
shl
sub
and
sbb
xor
pop
adc
mov
mov
mov
adc
xchg
xor
mov
sti
fwait
ljmp
lea
insb
xor
add
lret
stos
fisttps
ret
out
lahf
call
xchg
sti
movsw
lahf
jns
daa
roll
icebp
xchg
add
lea
fdivs
and
icebp
cmpsl
mov
stos
scas
lods
negl
rorb
mov
cltd
out
sbb
and
dec
mov
testb
adc
or
clc
daa
pop
cmp
dec
das
sub
or
xchg
push
gs
cmc
or
loope
imul
jb
mov
imul
pop
sbb
dec
jnp
loope
mov
mov
call
data16
lcall
rcr
mov
stc
loope
xor
loop
sbb
push
cmp
loop
xchg
mov
stos
xchg
pusha
je
mov
sti
mov
cmpsb
or
mov
imul
push
mov
add
fcoms
shll
cmpsb
pop
push
adc
sub
mov
add
hlt
xchg
sbb
int
xchg
addr16
call
sub
aaa
mov
and
loop
fsubr
sbb
jb
sar
mov
dec
dec
cmpsb
inc
cmc
ja
cmp
in
faddl
add
lret
xchg
icebp
inc
sbb
xchg
and
sub
push
mov
imul
dec
adc
test
push
or
sahf
arpl
cmp
cltd
adc
push
arpl
ss
dec
movl
lcall
cmp
sbb
mov
sbb
pop
dec
pop
jge
mov
xchg
inc
cs
int3
pop
pusha
jmp
adc
ds
jge
mov
pushf
stos
inc
push
popa
lret
jg
iret
pusha
fisubrs
scas
lcall
into
sarb
ljmp
jp
push
mov
stc
xchg
push
movsb
mov
adc
out
mov
dec
sti
cmp
imul
rorl
lock
orps
push
stc
or
psubsb
in
mov
rcrl
fisubrl
or
fcompl
xchg
jb
pop
insb
add
dec
lahf
fadd
xor
addl
cmp
add
fwait
sub
loopne
test
sub
jge
xor
push
mov
sub
popf
cwtl
stos
std
jnp
out
inc
mov
fstpt
add
pushf
cld
test
test
ja
xchg
inc
test
push
xchg
jl
mov
jecxz
mov
add
mov
int3
fldl
push
jae
mov
outsl
and
dec
sub
ss
insl
and
inc
sub
mov
cmp
or
sub
loope
add
and
mov
pusha
sub
cwtl
call
push
push
add
insl
insb
mov
inc
enter
mov
cmc
popf
xor
mov
dec
int
out
scas
push
mov
xor
imul
decb
scas
inc
fs
push
xor
ds
fnsave
sub
jns
xor
dec
stc
out
xor
aaa
mov
stos
pop
mov
imul
mov
or
shr
inc
jns
xchg
jg
add
imulb
insb
cmpsb
fs
mov
pushf
inc
decb
arpl
mov
adc
pop
or
in
sub
addr16
aas
jg
mov
cmp
cmp
jl
fwait
add
pop
mov
xchg
cmp
clc
mov
std
jecxz
std
sbb
push
push
mov
imul
or
dec
xchg
les
dec
pop
push
add
arpl
push
inc
gs
mov
jbe
jb
adc
out
mov
ljmp
push
and
loopne
pop
cmc
sbb
push
adc
mov
mov
push
dec
cmc
in
pop
icebp
scas
mov
pop
cmp
pop
or
sub
adc
inc
jne
je
aad
xor
loopne
push
sahf
addl
movsl
clc
xchg
loopne
add
test
imull
jl
adc
add
ret
addr16
jp
int3
pop
jmp
jp
cltd
out
pop
fisubrs
sti
and
push
cmc
mov
imull
mov
bound
cltd
in
loope
xchg
and
leave
loope
clc
outsb
fsubs
mulb
jp
xchg
outsl
sub
xchg
imulb
push
lahf
add
sbb
cmp
fxch
or
cs
stc
push
ja
pushf
movsb
imul
sti
xlat
mov
insl
mov
adc
mov
lahf
or
adc
clc
push
mov
xorl
xchg
push
dec
stos
xor
fidivrl
data16
mov
adc
out
cli
lahf
mov
or
mov
popa
dec
jge
test
pop
pop
out
cli
sbb
pusha
inc
pop
mov
pushf
inc
xchg
jns
ljmp
lods
mov
out
jg
push
jns
div
pop
int3
in
cmpsb
push
movsb
shlb
pop
test
fmul
popf
into
enter
xchg
call
aam
pop
mov
mov
into
sub
in
out
mov
cltd
sbb
push
mov
sahf
mov
jns
mov
lods
roll
xor
push
sub
fimull
sti
es
xor
leave
mov
fiadds
xor
fs
loop
adc
lcall
xor
aas
inc
dec
inc
repz
leave
cmpsl
jbe
loope
xchg
pushf
mov
and
xorb
cli
jnp
cltd
push
imul
xchg
shl
adc
outsl
pop
sub
lcall
pop
push
sbb
jne
loop
ss
insl
jnp
icebp
lahf
or
icebp
cmovo
or
wbinvd
shll
cmp
add
pop
adc
aas
ret
ficoml
xchg
xchg
les
mov
and
or
les
xor
sbb
cltd
jno
xchg
mov
pop
adc
cltd
adc
push
out
push
lret
fimull
pop
xor
dec
push
lahf
xchg
leave
ret
jns
xlat
xchg
loop
dec
loopne
loop
adc
xchg
iret
mov
ret
aas
mov
jno
pop
xor
bound
xchg
call
dec
lret
pop
mov
adc
push
daa
sub
mov
push
testl
add
stos
int
mov
add
das
or
lret
adc
loopne
mov
mov
in
inc
test
jne
iret
out
cmp
hlt
ret
popa
pop
sbb
out
gs
out
ret
in
and
roll
stc
stc
test
fcomp
stc
lret
jmp
out
cmpsl
fldenv
loope
popa
mov
jmp
push
popa
jo
pop
sbb
in
add
cmp
push
xchg
repz
shlb
adc
jecxz
inc
ljmp
and
sahf
adc
stc
pop
in
xchg
imul
xor
stos
xchg
sarb
jbe
jmp
loop
aad
ret
push
xchg
adc
gs
mov
xlat
stos
and
js
aad
jl
cmpsl
sarb
and
nop
adc
insb
pusha
sub
lea
in
call
mov
add
push
aam
das
lock
mov
sbb
xor
jns
or
xchg
out
add
les
in
jge
cmc
sub
frstor
sti
fmuls
cmp
sbb
test
or
orl
sub
std
leave
dec
in
out
stos
add
adc
pop
loopne
ds
jl
xor
leave
push
lahf
addl
xchg
leave
mov
cld
push
or
pop
xchg
xchg
add
ss
inc
inc
ret
mov
pop
daa
cltd
out
stos
aad
rorl
sbb
inc
push
loop
sub
mov
xchg
cmp
ficoml
movl
pusha
add
or
dec
jb
in
xor
stos
inc
sub
negb
imul
in
mov
cltd
xchg
into
aaa
mov
jo
xchg
mov
aas
bound
and
pop
mov
outsl
mov
sbb
cs
xchg
dec
fsubr
add
inc
fdiv
and
fists
dec
scas
daa
or
imul
xchg
and
xor
xchg
sbb
dec
ret
fmul
xchg
lret
fldt
sub
mov
stos
or
lods
cltd
push
shlb
aam
sbb
pusha
sbb
movsb
xor
mov
loopne
sbb
dec
outsb
xlat
in
dec
das
aas
dec
ret
orl
shr
pop
sbb
mov
or
imul
pop
add
fadds
insb
inc
jecxz
fisubs
mov
shlb
xor
adc
xchg
inc
cmpsb
mov
cmp
mov
xchg
in
jecxz
mov
jns
sbb
fdivs
daa
jnp
adc
sbb
sub
and
loopne
jbe
iret
mov
cmp
dec
stos
adc
cli
adc
test
dec
insl
sub
es
loop
imul
cwtl
loopne
ljmp
cld
mov
jg
dec
xchg
shl
ficoml
cs
out
ffree
push
inc
ss
loopne
scas
mov
flds
and
adc
dec
xchg
pushf
nop
cmp
pop
mov
cmp
repnz
jnp
xchg
lods
lds
aam
lea
ljmp
jmp
or
aaa
adc
cltd
repnz
mov
push
xchg
data16
cmp
fnstcw
adc
mov
jge
push
out
jl
jecxz
pop
lock
inc
xchg
xor
jne
mov
repnz
les
sbb
sbb
movsl
add
inc
aas
cmp
ret
ljmp
mov
jmp
jg
pop
push
mov
fcomps
in
mov
jecxz
out
xchg
sbb
lcall
fistps
pop
or
mov
mov
data16
and
daa
fisttpl
das
repz
mov
jle
sub
cmp
push
fs
jmp
inc
xor
jns
or
dec
leave
into
cmpsl
stc
sub
fistps
sub
push
inc
adc
sub
sbb
popf
cwtl
sub
inc
or
or
aaa
icebp
aad
loopne
xchg
sahf
mov
xacquire
lds
adc
cmp
and
loopne
hlt
pop
xchg
mov
dec
push
fmull
fldcw
sub
pop
xchg
fs
cmpsl
andb
xor
setno
jbe
daa
push
imul
xor
imulb
cmpsb
shll
dec
jns
andl
add
enter
test
xchg
push
lahf
xchg
aaa
inc
lods
stos
add
testl
jbe
aam
repnz
sbb
mov
out
je
and
mov
pop
push
mov
test
mov
or
jecxz
mov
push
push
sub
inc
jp
jns
data16
dec
inc
fcomip
inc
push
add
push
mov
aam
insb
loopne
es
mov
pop
test
inc
inc
cmc
xor
mov
mov
insb
ret
and
push
jl
adcl
lcall
push
ja
cs
mov
out
mov
scas
and
cmp
sub
add
lea
xchg
stos
mov
sbb
cmpb
or
mov
push
pop
lcall
fdivrs
push
dec
xchg
pop
mov
sbb
das
in
mov
push
xor
mov
lahf
shll
mov
pop
jnp
add
flds
mov
cwtl
mov
mov
bound
xchg
lcall
mov
xor
dec
add
pop
sahf
pushf
sub
inc
sub
icebp
loopne
out
jno
pusha
push
xchg
out
sbb
and
jle
inc
rorb
add
sbb
ja
pop
cmp
sarb
daa
loopne
je
paddusw
mov
jmp
adc
shrl
xchg
inc
push
nop
pop
mov
loope
test
or
arpl
sub
push
pop
cmc
lahf
cmp
test
mov
shrl
in
and
jp
test
or
insb
xchg
and
sti
mov
add
negl
mov
push
out
jno
stc
bound
jmp
push
and
or
jmp
xchg
jp
int3
push
cli
loope
sbb
push
push
aad
sahf
mov
inc
ret
sub
test
mov
outsl
push
pop
fildll
out
mov
fisubrl
mov
push
fsubrl
fnsave
sar
test
adc
das
add
fimuls
pop
xchg
pop
in
and
mov
movzbl
xchg
jl
cli
pop
sbb
fistl
es
push
push
push
out
addr16
insb
pushf
xor
jbe,pn
cwtl
orl
mov
shrl
clc
dec
pop
xor
out
mov
and
lret
jmp
xchg
xor
pop
xchg
cmp
adc
jbe
add
lock
es
cli
push
repnz
push
pop
adc
mov
dec
and
adc
dec
repnz
cltd
cmpsb
ret
or
sbb
jmp
mov
addr16
pushf
loop
push
or
pop
add
pusha
dec
push
int3
xor
pop
in
inc
repnz
fists
push
mov
sub
out
and
pop
scas
outsb
imul
addr16
push
sub
jge
cmp
xchg
out
mov
sbb
xor
push
push
lods
mov
cmp
fwait
data16
inc
push
lods
xor
and
jle
popa
lds
inc
pop
mov
dec
test
jne
fcompl
dec
push
push
mov
and
jl
cwtl
sahf
mov
xchg
test
stc
les
xor
lcall
loope
pop
jbe
cs
adc
sub
adc
push
mov
mov
pop
fwait
lcall
add
faddl
jg
jmp
popa
and
or
xor
xchg
mov
je
std
mov
cmc
lds
jg
repnz
push
arpl
fistpll
mov
push
jge
je
testb
mov
dec
aaa
xchg
adc
cwtl
mov
xor
loop
sarl
add
loope
jecxz
push
or
mov
sub
and
push
mov
fcompl
inc
ljmp
call
fstpt
xchg
inc
enter
scas
jnp
in
and
adc
into
adc
adc
mov
shlb
adc
andb
into
mov
movsb
or
inc
add
mov
push
ror
cmp
fcomi
pop
adcb
sbb
inc
inc
cltd
adc
jmp
dec
sbb
pop
add
aas
pop
add
lahf
sub
mov
or
or
and
aam
lcall
push
cmp
xor
decl
cli
leave
cs
inc
lock
or
cmpsb
fdivs
jle
mov
test
cmpb
adc
addr16
and
mov
std
bound
nop
xchg
nop
mov
mov
xor
enter
inc
xchg
dec
movsb
std
fdivs
xor
sti
mov
dec
pop
xchg
iret
in
sbb
jb
xor
in
in
call
mov
leave
and
rolb
push
ljmp
dec
int
daa
insb
stos
daa
jns
mov
add
pop
pop
subl
and
psrlq
cmp
add
cli
pop
sub
std
into
mov
aas
dec
test
adc
adc
mov
mov
icebp
push
in
popa
mov
sbb
pop
mov
out
test
xchg
adc
ret
lock
fcoml
mov
mov
call
adc
shlb
and
dec
or
xchg
mov
xchg
fisubrl
cltd
sub
out
fisttpll
nop
sarb
or
in
push
push
mov
dec
cmpsl
adc
pop
aam
dec
jo
in
fstps
nop
pushf
out
sub
shr
roll
add
rclb
inc
xchg
out
dec
jo
mov
outsb
cmpsl
mov
mov
int3
mov
lock
dec
cltd
dec
mov
enter
jns
jg
insb
out
inc
std
add
adc
insl
lods
shll
xchg
cld
adc
jb
xor
in
adcb
or
rcrb
and
cmp
lahf
push
and
incb
sahf
aad
mov
arpl
jne
xchg
je
xlat
or
mov
push
cmp
push
in
xor
jmp
sbb
in
sbb
mov
xchg
ljmp
mov
nop
sub
insl
xlat
pop
aaa
jl
enter
dec
std
cmc
test
inc
mov
movsl
mov
lea
iret
sbb
xor
std
xchg
stos
pusha
leave
out
out
mov
jle
push
pusha
scas
fcomps
mov
cmp
fsubrs
xchg
mov
jne
cmpsl
inc
ss
pop
inc
das
dec
pop
lahf
or
push
out
leave
test
int3
aas
mov
mov
dec
jns
les
frstor
jl
fwait
jge
test
stc
and
popa
sub
lods
icebp
ja
sub
adc
or
mov
mov
pop
adc
and
inc
jne
subb
mov
out
in
imul
lods
dec
mov
xchg
sbb
sub
loopne
jns
mov
xchg
cmpsb
enter
js
popw
stos
fs
rolb
push
popf
jle
scas
fs
sahf
shr
mov
ss
inc
and
in
cmp
mov
shll
pop
xchg
lret
xlat
push
mov
bswap
sarl
xlat
scas
cmc
xchg
pop
adcl
or
scas
inc
xor
cltd
sbb
or
fcmovne
sbb
fiaddl
aaa
sub
cmp
xchg
mov
jmp
out
mov
mov
xchg
loopne
daa
into
test
pop
push
add
xchg
fld
sbb
pop
jbe
sbb
lcall
and
sub
enter
in
leave
mov
lods
rorl
mov
aaa
dec
mov
push
test
add
or
add
cmpsb
cs
and
xchg
inc
sub
sub
fldenv
or
ret
push
xchg
shrb
push
aas
cmp
mov
gs
jno
inc
sub
gs
push
daa
cli
imul
notl
inc
aam
loopne
rep
cmp
test
aas
inc
cmpsb
lea
ret
cmpl
out
fisubs
mov
inc
sbb
icebp
je
sub
stos
bound
mov
sbb
and
ljmp
mov
pop
push
in
lds
sub
mov
imul
lock
fst
pop
add
and
ret
add
mov
das
jnp
out
mov
push
jle
imul
insl
rcll
pushf
call
lods
xchg
lods
test
push
sub
mov
inc
mov
cmp
nop
shrb
xchg
mov
jne
add
inc
inc
push
or
sbb
mov
ret
and
add
sbbl
push
cmp
sub
jmp
int
sti
and
inc
sub
clc
cmpb
into
push
out
nop
fsts
xchg
cltd
add
mov
pop
sarb
orb
add
outsl
inc
int
mov
xor
aad
push
jmp
lods
push
sub
lds
out
and
je
cltd
in
add
mov
lods
jne
ljmp
mov
cmpb
add
in
mov
or
jmp
cmp
in
jp
cld
aaa
test
push
cmp
stc
xor
out
xor
add
sub
or
rclb
dec
sbb
int3
mov
push
jl
sbb
call
ljmp
or
addb
int
outsl
cmp
sub
sbb
rcll
or
push
in
arpl
sbb
lret
and
cltd
mov
push
ds
stos
scas
add
repnz
and
mov
enter
in
fidivrl
push
lods
shll
dec
icebp
cmpsl
cmc
lods
mov
jle
orb
enter
push
nop
shll
fsubl
xchg
and
mov
popa
pusha
sbb
shlb
jg
loopne
out
mov
xor
push
push
scas
iret
push
clc
ss
pop
jle
adc
sysret
adc
inc
sub
mov
outsb
subl
mov
pxor
mov
inc
push
jmp
xchg
ljmp
mov
sub
dec
xchg
decl
movsl
daa
rcr
lods
rolb
test
cmp
aam
add
sub
negl
ja
aaa
pushf
mov
cmp
mov
sub
je
mov
jmp
pop
ficompl
or
shlb
imul
rcr
lcall
and
jo
loopne
and
fisubl
jo
out
sub
imul
outsb
scas
and
cmp
cmp
mov
push
xchg
enter
aam
addr16
sub
hlt
jl
jg
dec
and
lahf
aas
out
stos
orl
shlb
stos
mov
loop
push
cmp
xor
enter
jbe
imul
in
xchg
dec
add
jo
ljmp
mov
gs
lock
enter
xchg
dec
jbe
sbb
sub
sbb
fnsave
loope
mov
jo
sub
fsubs
cmp
shrl
push
lods
jmp
push
aaa
dec
jbe
cmp
lods
test
mov
jmp
sub
enter
mov
adc
lret
fld
int
mov
int
pusha
cmp
inc
outsb
fstpl
repz
stos
and
mov
loope
xor
ss
xchg
jae
lds
xlat
test
inc
or
push
mov
push
dec
jnp
sti
fs
mov
inc
or
mov
dec
and
pop
adc
pop
jg
jo
stos
jbe
frndint
inc
mov
out
adc
cmpsl
mov
stos
outsb
ja
sbb
cltd
mov
pop
rcll
inc
jnp
jb
dec
adc
xlat
pop
daa
je
or
cmp
lods
pop
pop
out
out
repnz
ret
mov
mov
mov
or
std
and
mov
jge
lods
or
jge
lods
add
pop
insb
jecxz
rcl
ss
and
sarb
or
imul
repnz
pop
and
divl
xor
movsl
xchg
inc
enter
xor
repz
add
mov
mov
pop
lahf
mov
divl
shrl
sar
dec
daa
data16
aaa
push
push
inc
jl
cmp
fcmovu
cmpsl
push
push
test
or
mov
pop
popa
push
cmpsl
pop
lcall
and
jne
fildl
mov
adc
inc
mov
mov
hlt
stc
mov
shrb
incl
in
jb
cmp
mov
add
aam
push
jmp
fisttps
xor
cmp
jne
scas
mov
xchg
int3
notb
adc
mov
sub
ret
mov
jle
cwtl
cwtl
jae
cmp
lods
pop
sbbl
or
or
sbb
int
and
xchg
cmpsb
lret
icebp
mov
jns
fwait
roll
fcom
lahf
mov
mov
in
adc
leave
in
mov
data16
imul
jnp
adc
fnstsw
jmp
xchg
addr16
les
jb
movsl
fwait
out
sbb
sarb
cmp
sbb
into
xor
out
inc
loop
add
adc
fdivl
inc
xlat
incl
movb
fucomi
adc
int
cld
fldl
xchg
mov
sbb
in
je
jmp
ret
pop
or
push
in
pop
pop
xor
adc
aam
sbb
pop
out
aaa
mov
push
fucomp
and
cld
jl
imul
out
jno
jns
xchg
lret
xor
add
dec
cmp
sub
mov
rcll
sub
in
jle
out
inc
cmp
xor
imul
rolb
outsb
test
sub
and
divl
add
push
nop
mov
call
push
in
jns
xorl
jle
jnp
adc
fs
push
out
bound
out
dec
clc
mov
mov
add
fstl
sub
sub
jmp
popf
cwtl
push
sub
in
sub
pop
dec
shrb
mov
lea
repz
enter
test
es
xor
ljmp
mov
xchg
add
xchg
int
pop
out
add
inc
xchg
rcrl
addr16
inc
inc
ja
sbb
xor
inc
mov
xor
sbb
xor
add
cmpsl
dec
mov
xor
sub
iret
push
or
jns
stc
xor
inc
adc
and
loopne
shrl
mov
mov
pop
add
sbb
inc
pop
test
push
call
cmp
pop
push
fxch
mov
mov
lret
xchg
subl
pop
inc
pop
fmuls
jb
sub
cltd
jmp
dec
fimuls
mov
out
push
push
sbb
jg
sbb
mov
mov
inc
xchg
out
stc
fs
movsl
lret
dec
add
sbb
rorl
shr
addr16
add
pop
adc
out
cmpsb
movsl
mov
lods
lret
dec
adcb
je
pushf
fiadds
sbb
test
adc
je
mov
sti
xchg
mov
fsubs
push
inc
sbb
sbb
lds
popa
shll
pusha
dec
sbb
adc
xor
in
in
pop
ja
ds
repz
std
mov
dec
in
loopne
insb
scas
popf
insb
or
jmp
test
jle
dec
std
loope
mov
sbb
jnp
mov
jbe
cmp
data16
cmp
push
push
out
jb
cmp
and
sbb
out
in
mov
push
xchg
push
cmpsb
movsb
mov
inc
adc
pinsrw
jmp
clc
imul
pusha
mov
loope
ret
movsb
mov
ror
cmp
clc
cmpsl
mov
jmp
inc
sbb
xlat
cmp
mov
mov
dec
jne
psubb
out
lods
out
clc
and
fwait
sub
divl
dec
aad
xor
int3
movsl
fcoms
push
dec
stc
test
mov
clc
stos
dec
aas
sbb
mov
ja
movsl
pusha
and
stos
cmp
add
mov
xchg
add
xor
fdivs
dec
pop
outsl
call
in
add
or
arpl
lea
imul
cltd
xor
lods
rol
data16
jecxz
jae
add
adc
jecxz
pop
dec
jbe
xchg
xorl
jmp
jmp
fwait
sahf
xchg
lea
sbb
mov
jp
je
adc
xor
lahf
int
or
gs
in
jmp
out
repnz
mov
push
int3
fimull
sub
shrb
stc
jle
adc
sbb
inc
shl
sub
sbb
xor
cmp
cltd
call
lea
dec
xlat
aad
cmp
popa
adc
push
jg
lods
in
fs
pushf
ljmp
sti
hlt
cmp
mov
arpl
xchg
jns
cmp
pop
mov
sub
bound
sbb
sti
pop
mov
add
add
push
mov
mov
ss
adc
test
cld
js
jg
inc
ret
pop
dec
test
push
cmp
jp
mov
push
add
jge
jnp
lahf
lea
pop
inc
popf
xchg
sub
push
cmpb
sarb
in
pop
jns
idivl
cmpsl
and
sbb
divb
call
daa
cmpsl
rorb
in
mov
cmp
xchg
or
fisttps
pushf
test
es
clc
sbb
pusha
test
adc
sbb
mov
or
or
inc
scas
cmp
lcall
std
addr16
sbb
push
pushf
sbb
fs
sbb
sahf
mov
dec
ja
jbe
lahf
cmp
mov
clc
popa
fistpl
in
stos
or
cmpsl
pop
scas
xchg
scas
sub
sub
in
or
dec
call
daa
xchg
xor
sub
lret
dec
imul
jmp
mov
pop
dec
or
cmp
or
and
shll
push
mov
pop
test
aad
mov
mov
add
and
outsl
das
das
sbb
outsb
mov
outsl
pusha
loopne
xor
inc
xor
mov
sti
jmp
clc
jge
mov
adc
in
inc
cmp
jnp
mov
inc
adc
xlat
dec
mov
mov
lods
popf
sub
ror
lret
jmp
rorl
outsb
xchg
or
xorl
mov
adc
mov
pop
ss
negb
repz
in
gs
movsb
adc
jo
sub
cmp
out
xchg
fcoms
push
or
mov
pushf
sub
push
fdivrp
adc
das
jne
sarl
inc
cmpsl
aaa
or
adc
pusha
ljmp
jecxz
lds
cmpsl
or
ret
and
ja
pop
inc
cmp
mov
jae
add
add
mov
inc
aad
ja
and
mov
rorl
and
dec
xchg
jg
push
pop
bound
addr16
or
and
ja
and
inc
or
sub
ret
mov
in
fwait
scas
push
fwait
repnz
pop
lods
bound
mov
lods
clc
adc
outsb
fs
shlb
adc
cmp
inc
push
in
cmp
add
fdivrs
xor
adc
lods
das
call
out
pop
push
lret
pop
inc
or
mov
popa
out
repnz
addr16
iret
xchg
add
push
icebp
or
and
xchg
mov
xor
jnp
mov
loopne
and
insb
mov
jae
sub
repz
sub
popf
jno
mov
mov
jo
mov
and
fists
or
outsl
dec
sbb
xor
cli
xchg
adc
in
lods
out
xchg
outsl
fsubl
in
cli
stos
pusha
jne
imul
mov
adc
mov
bound
and
xchg
clc
sub
mov
int
lcall
or
dec
inc
sahf
sub
jmp
cmpl
cmp
int
lahf
xchg
xchg
popf
jnp
push
push
inc
push
mov
mov
sub
push
addb
aas
sub
mov
adc
xchg
imul
outsl
jg
add
jo
divl
pop
popf
or
pop
sub
add
loop
out
jbe
lret
fdivs
add
push
add
xchg
fisubrs
mov
ror
jg
mov
imul
fstl
pusha
mov
dec
fdivl
arpl
mov
scas
jmp
orb
xor
in
mov
loopne
sbb
jbe
adc
stos
cmp
add
lahf
int3
lods
stos
sahf
je
mov
repnz
xchg
mov
cmp
arpl
mov
in
data16
sub
sbb
and
adc
call
pop
movl
add
jp
mov
pop
mov
fwait
mov
push
adc
xor
inc
in
pop
stos
push
sub
cmpsl
or
in
xchg
adc
and
negl
mov
add
mov
stos
pop
sbb
mov
and
add
les
inc
test
mov
sub
mov
out
nop
push
xor
sbb
pop
xor
pop
cmp
push
mov
add
inc
repnz
imul
mov
mov
dec
int
mov
inc
rcrl
inc
ror
inc
cmc
test
mov
inc
mov
push
cmp
in
fcompp
push
std
cli
add
js
clc
shrb
clc
cs
sbb
mov
push
adc
xor
push
mov
xchg
aad
das
push
iret
and
xor
pushf
out
sbb
xor
test
mov
and
mov
cmpsb
dec
int
stos
cmp
repnz
cmp
dec
icebp
lret
aam
mov
xchg
mov
xchg
adc
xchg
adc
into
adc
lahf
mov
sbb
xchg
or
rol
fimull
cld
enter
mov
xchg
movsl
daa
ja
mov
cmp
out
imul
shll
and
mov
iret
mov
xchg
sbb
pop
inc
clc
push
mov
ss
lret
adc
scas
cmc
adc
push
jp
mov
gs
inc
sbb
mov
sbb
je
push
add
mov
ljmp
div
cltd
mov
out
dec
ljmp
and
cld
fcmovnbe
leave
add
pop
pop
jl
popa
jle
inc
popa
inc
cmp
out
mov
sbb
out
dec
or
push
push
mov
sub
adc
cmp
inc
inc
daa
icebp
out
jnp
fidivrl
sarl
movaps
jae
lods
pop
loope
nop
dec
aaa
pop
aad
shl
ja
jge
pextrw
mov
insl
arpl
pop
mov
xchg
cs
outsb
lea
arpl
and
lcall
ja
lods
sub
xlat
mov
jbe
roll
xchg
call
out
sub
add
or
in
lods
cmc
out
popa
mov
aam
add
gs
pushf
lods
stos
pop
mov
pop
and
idivb
pop
jmp
sub
mov
fmul
dec
mov
lcall
mov
ficomps
cmp
xchg
mov
iret
lea
push
push
out
stos
cmc
into
and
lods
js
jno
pop
lds
add
ljmp
pop
cld
fbld
faddp
xchg
notl
je
inc
jl
xchg
cmpsl
push
dec
scas
and
loopne
jle
lret
pop
mov
pop
ficompl
fildll
dec
sbb
sti
daa
mov
jge
xchg
add
or
fmull
repnz
fiadds
scas
push
mov
rcll
pusha
std
popa
aad
stos
std
dec
mov
sub
xchg
pusha
aaa
pop
leave
rorb
and
int
cmpsb
mov
xchg
push
loopne
inc
mov
add
xchg
out
test
pop
aaa
jae
enter
leave
mov
ljmp
xchg
jns
sub
mov
and
iret
mov
cmp
rcl
pop
sti
push
dec
sbb
fidivrl
andl
mov
inc
js
aad
xchg
cmpsl
jl
in
and
push
mull
lock
cmp
imul
jecxz
cmp
pusha
and
add
push
mov
dec
aaa
sbb
ror
test
sub
cmp
xchg
out
xchg
sbb
lahf
and
clc
and
shl
mov
cmp
mov
sbb
loopne
and
mov
inc
nop
ds
pop
fsubl
ljmp
cmp
out
dec
push
sub
dec
outsl
scas
bound
aaa
and
out
lahf
mov
jnp
cltd
mov
sbb
adc
cmp
push
loope
sbb
lret
pop
addl
pop
pop
xor
pop
lods
inc
jbe
insb
push
stc
inc
iret
test
ret
dec
mov
lcall
and
mov
loop
push
xorl
lods
dec
sub
cwtl
pop
movsl
pop
cwtl
lret
outsb
mov
xor
add
aad
shr
mov
shlb
enter
inc
sub
sub
or
dec
fimuls
shll
push
in
mov
jle
lret
cmp
cltd
jecxz
loopne
mov
leave
imul
pop
lods
neg
jmp
xchg
stc
cmp
daa
mov
clc
in
jno
sbb
cs
mov
add
test
fiaddl
int3
out
jo
shr
cmp
mov
cld
insb
je
mov
pop
push
movsl
dec
sarl
mov
jl
insl
push
mov
int
xor
popf
repz
jecxz
mov
in
and
mov
xchg
call
loop
sarb
push
adc
cmpsb
inc
jns
das
sbb
xor
xchg
fistps
dec
xorl
xor
jae
cmc
push
xor
adc
jg
pop
fldcw
sub
out
das
cmpsl
arpl
insl
push
sbb
pop
shl
jmp
ss
dec
cmc
add
cld
ljmp
pop
inc
inc
jmp
or
xor
hlt
cmp
aaa
bound
je
pusha
xchg
shlb
fldenv
lods
aam
inc
fisubs
aas
pop
mov
dec
aad
or
daa
aad
pop
xlat
fcompl
mov
enter
xchg
repnz
mov
out
pop
inc
stos
jne
sarb
jge
mov
or
xor
add
cmp
fstl
cmp
flds
dec
inc
push
cmp
pushf
push
jge
sbbb
mov
add
out
add
loopne
lret
int
pop
mov
lods
cmp
lods
mov
xchg
testl
les
lahf
out
fsubrs
cli
loope
cmp
lret
cmp
int
jae
and
pop
sar
pop
sbb
xchg
sub
mov
gs
imul
shll
repz
push
push
mov
jecxz
fcoml
jle
or
sub
add
in
adc
push
sub
sub
jb
mov
shr
jge
ficompl
push
popa
frstpm(287
stos
sbb
mov
adc
and
out
test
lods
or
push
sahf
xor
les
int
adc
sarl
jg
push
mov
sbb
les
dec
pop
scas
js
fwait
shr
test
dec
cmp
mov
mov
inc
ret
inc
or
add
test
sbb
dec
fistpll
push
jge
mov
lds
inc
pop
fwait
xlat
out
push
daa
or
and
xchg
cli
aad
pop
call
sbb
inc
mov
ret
jns
fbstp
cltd
inc
mov
mov
mov
push
jo
scas
sub
and
lock
divl
inc
pop
pop
mov
jl
adc
ss
xor
loope
and
movsb
inc
fdivrl
icebp
stos
push
xchg
push
sbb
inc
lret
leave
test
push
and
mov
data16
jecxz
testb
add
sbb
loopne
dec
in
clc
jbe
pop
mov
sbb
adc
stc
es
out
data16
clc
inc
jne
in
pusha
pop
in
sub
or
lcall
in
push
inc
in
cmp
mov
fdivl
xlat
and
inc
or
ret
pusha
push
jp
push
lods
lods
cmc
cmp
lret
aaa
inc
aad
je
in
or
cli
pop
lret
into
shr
adc
daa
fists
xor
jl
sbb
lret
leave
je
push
imul
xor
pop
out
and
rcrl
or
je
mov
pop
leave
dec
inc
push
jge
mov
jle
jnp
cmp
mov
js
iret
outsl
insb
pop
dec
lds
xor
sbb
stos
sahf
in
ss
inc
dec
and
cltd
push
adc
out
fmul
jle
add
aas
aas
fistpll
popf
mov
push
popf
scas
ds
in
scas
outsl
mov
adc
cmpsl
mov
imul
cli
sbb
push
cli
cmp
imul
pop
xor
xchg
push
and
lahf
cs
jmp
sub
pop
pop
add
jns
fs
decb
xchg
int
add
sub
sub
fildll
ds
push
mov
popf
in
cmp
jp
sbb
loope
mov
fistl
out
push
adc
jmp
adc
mov
movsl
sbb
mov
clc
sub
nop
je
xchg
popa
xor
test
push
cli
and
xchg
and
push
mov
jbe
push
sbb
jb
mov
imul
xor
clc
lret
enter
push
xor
movsl
mov
cmpsb
mov
imul
mov
into
jno
mul
cmp
push
add
dec
xor
outsb
and
inc
mov
or
xchg
icebp
imul
inc
xchg
gs
xor
jecxz
ds
sbb
mov
xchg
test
add
jle
sahf
sub
fs
aad
adc
sahf
dec
jle
push
imul
or
pop
outsb
lock
push
xor
add
mov
lock
in
pop
lret
out
jb
rorb
fsubrs
mov
pushf
das
stc
and
push
out
loope
add
mov
call
dec
mov
mov
sahf
mov
xor
dec
imul
dec
lea
mov
bound
addr16
test
call
jae
push
int
mov
add
repz
bound
dec
test
aam
cmpsb
mov
push
call
imull
dec
repz
push
outsl
jnp
shll
pop
adc
test
push
inc
lea
xchg
jnp
jnp
std
push
lret
je
xchg
cmp
pop
or
or
mov
stc
mov
gs
push
mov
bswap
push
in
mov
push
dec
push
add
and
out
icebp
movsb
mov
jmp
test
add
or
test
cld
negl
mov
popf
shrl
test
push
loop
ja
and
adc
sbbb
lea
rcrl
add
test
jecxz
imul
ret
pop
hlt
ljmp
mov
mov
pusha
mov
movsb
inc
icebp
loop
add
mov
addl
cs
fistpll
nop
push
mov
mov
mov
lods
push
lret
adc
adc
mov
lods
push
adc
push
xor
cmpsb
pop
pop
dec
xor
gs
push
adc
push
xchg
mov
fmuls
sbb
add
nop
push
notl
rcrb
gs
in
jle
adc
subl
dec
pop
xor
sbb
push
jl
outsl
mov
dec
stc
xchg
mov
or
add
sahf
cmp
mov
mov
sub
mov
ret
adc
fisttpl
out
adc
dec
mov
in
mov
or
push
pop
cmp
gs
adc
roll
fs
mov
mov
xor
lahf
lret
lcall
dec
rol
mov
stos
in
cmc
mulb
dec
jmp
mov
push
imul
or
insl
xchg
movsl
shr
pop
jecxz
movsb
fcmovne
jg
adc
sbb
mov
cmp
and
xlat
fucomip
push
add
shlb
pop
pop
addr16
scas
jae
rorb
lcall
inc
int3
inc
pop
xchg
scas
xor
out
loopne
jo
or
dec
iret
adc
notb
je
es
sub
shll
arpl
addr16
adc
adc
cmp
stos
mov
andb
in
sbb
push
inc
xchg
push
mov
or
iret
jge
cmp
data16
jno
mov
push
pop
xchg
push
mov
add
lock
jo
mov
mov
fwait
movsb
xor
pop
int3
sbb
and
xchg
in
or
cmp
pop
sbb
lcall
out
lret
lahf
sbb
in
call
inc
xor
push
aad
dec
das
push
inc
es
mov
leave
xlat
rcrb
pop
ret
daa
pop
cmc
pop
add
sbb
std
adc
ret
jbe
test
sti
inc
sub
push
pop
mov
inc
mov
push
push
outsl
sti
into
mov
inc
mov
notb
xor
cmp
adc
mov
lods
add
xchg
nop
int
jle
push
loope
jbe
cmp
add
hlt
stc
bound
push
jae
mov
call
repz
pusha
mov
jne
lcall
dec
push
stos
cli
xchg
push
mov
sub
into
push
outsb
negl
mov
sbb
shll
cmp
cmp
adc
idivb
jae
mov
out
cltd
sbb
pop
imul
push
inc
dec
mov
pop
xchg
xchg
icebp
pop
fcomi
sub
jecxz
out
aaa
ret
lds
mov
jae
shll
dec
xchg
lahf
fmuls
or
jmp
cmovnp
sbb
scas
ja
int
ror
sbb
popa
mov
push
mov
dec
mov
sub
sbb
rclb
ds
imul
outsl
cmp
fcomps
mov
popw
sbb
dec
and
insb
out
xor
test
insb
xchg
int3
scas
xchg
push
pop
cmp
adc
push
jmp
push
or
mov
fisubrs
inc
outsl
jns
sbb
std
mov
lods
xor
push
sbb
and
pop
aas
into
mov
pop
push
pop
push
mov
xchg
loope
mov
ds
jne
js
pop
stc
or
fmuls
aas
incl
insl
mov
test
sarl
adc
fldcw
popf
xor
rcrl
adc
fldl
mov
mov
cmc
repz
aam
mov
jle
std
loopne
pop
pop
mov
scas
inc
std
movl
xor
ret
and
sarb
xor
ja
cmp
loop
pop
adc
xorl
addr16
xor
int3
mov
mov
shlb
out
jp
xor
adc
clc
lea
adc
or
or
mov
ljmp
dec
push
decl
lock
mov
cld
or
cwtl
fsubrp
das
xchg
call
rclb
push
mov
xor
bound
rcrb
or
clc
cli
out
test
add
fiadds
stc
and
sbb
dec
pop
and
adc
testb
inc
pop
jnp
scas
add
arpl
pop
mov
mov
call
ss
jo
mov
repnz
scas
sub
shlb
push
inc
dec
mov
xor
pop
decl
jae
xchg
in
stos
out
dec
pop
or
test
test
mov
pop
dec
sbb
in
xorl
shl
iret
std
mov
std
sahf
mov
push
shrb
push
mov
loop
mov
fcmovnu
fldt
aas
cmp
pusha
mov
or
outsl
sub
sub
mov
push
sub
cmc
mov
or
iret
test
push
cmovl
lods
loope
jg
cwtl
in
test
inc
bound
in
and
fwait
lret
pop
shll
je
sbb
jge
mov
mov
cwtl
in
push
xlat
jmp
bound
shrb
mov
push
pop
fsubr
test
xchg
jb
add
hlt
pop
jns
mov
pop
ret
pop
xor
jne
and
or
sub
test
lock
inc
mov
cs
xchg
nop
addr16
loop
jb
scas
xor
scas
sub
fadds
in
pop
push
xchg
popf
push
movsb
jecxz
lods
jne
test
inc
adcl
rclb
add
inc
fldcw
fimuls
cwtl
cmp
mov
out
int
ret
dec
mov
cs
int
outsl
mov
popa
arpl
loopne
fbstp
rcll
add
dec
stos
mov
testb
xchg
cmp
add
push
add
pop
mov
insl
cmpb
jg
pop
fstl
sub
dec
mov
dec
rcll
or
sub
insl
add
add
loopne
test
or
orb
push
movsl
pushf
add
adc
adc
sbb
ja
xor
je
inc
inc
dec
mov
arpl
aam
dec
in
jo
es
sub
push
lea
xchg
sub
inc
mov
aaa
add
mov
test
sbb
dec
push
mov
lock
fldenv
cmpsl
loope
pop
dec
xorl
mov
shlb
cs
xor
sub
mov
into
jo
jo
data16
add
scas
sbb
ja
or
arpl
mov
pusha
xchg
xchg
mov
test
jae
int
pop
repnz
jnp
mov
mov
push
xor
in
pusha
pop
dec
mov
jecxz
sbb
dec
leave
jge
leave
cmpsb
dec
movsl
mov
lea
repz
into
mov
int
mov
cmpsb
cmp
ja
je
mov
mov
mov
imul
mov
fs
sbb
dec
ljmp
in
dec
stos
fstpl
pusha
fs
test
dec
fs
push
push
or
inc
bound
push
mov
xor
or
push
ljmp
mov
out
mov
fcompl
ljmp
lret
push
data16
aaa
cwtl
lea
mov
inc
fs
dec
xchg
dec
mov
mov
jb
sahf
push
int
test
ljmp
fstpl
aam
dec
stos
pop
add
push
xchg
dec
jle
adc
cmp
inc
pop
push
sarl
dec
add
mov
and
mov
testb
icebp
iret
fcmovnb
loope
sahf
icebp
push
lahf
sub
pop
mov
mov
add
jle
aas
inc
jmp
negb
xchg
xchg
xor
pushl
xchg
jno
ljmp
adc
mov
movsl
pop
jge
or
sbb
mov
pop
ja,pt
insl
add
fdivl
push
in
imul
loop
add
int3
in
rorb
and
test
xchg
mov
pop
pop
movsl
jae
addr16
stos
mov
addb
mov
push
sub
pop
sbb
dec
dec
in
cli
jge
jmp
sbb
lock
mov
mov
sbb
stos
xlat
push
add
fldl
dec
shlb
xor
daa
stos
imul
rcr
std
mov
inc
fmuls
mov
cltd
in
push
mov
and
add
ja
pushf
mov
mov
sbb
push
jne
les
sbb
fsubs
add
shrl
or
adc
mov
xchg
je
jno
mov
add
sbb
dec
adc
sarb
add
lret
mov
adc
lds
call
cmp
sub
mov
data16
bound
jne
add
add
in
adc
jno
lds
pop
pop
push
js
sub
lods
sub
stc
xchg
xor
and
hlt
dec
push
xchg
sbb
mov
sub
dec
sbb
dec
inc
lahf
orl
sbb
lock
mov
xor
lret
fisttpll
adc
lock
stc
sahf
xchg
jno
sbb
orl
mov
lds
sahf
jmp
and
sub
fldcw
adc
ss
jg
cld
sbb
sub
notl
mov
sbb
cli
and
lahf
scas
fcmovnb
mov
add
xchg
and
int3
mov
cmp
outsb
loopne
insb
rcll
sub
iret
sbb
jbe
loopne
mov
outsl
fiadds
in
stos
rolb
fwait
push
jp
mov
nop
dec
adc
adc
vpunpckhbw
pop
sar
or
mov
rorl
mov
leave
mov
xor
sbb
rcll
div
or
std
or
aaa
aad
ret
sahf
inc
mov
shl
pop
std
mov
dec
inc
mov
mov
mov
pop
mov
cli
and
je
add
mov
mov
push
movsb
divb
push
popf
xchg
test
sbb
push
daa
mov
or
andl
int
addr16
sbb
push
adc
and
or
loop
add
shr
jbe
xlat
add
lahf
mov
orl
xor
movsl
and
test
testb
cltd
in
jo
add
cmp
mov
cmp
pusha
adc
sub
mov
xchg
add
adc
push
jns
hlt
loope
inc
lods
pop
adc
mov
movsl
xchg
mov
std
mov
or
mov
sbb
aam
cmp
rcrb
push
jecxz
nop
out
outsl
outsw
mov
lcall
daa
xchg
enter
nop
push
call
push
dec
push
cli
xor
rclb
mov
insb
lret
sahf
loope
cmp
dec
jge
lret
adc
out
xchg
lret
in
dec
add
out
les
call
stc
call
lock
push
jo
jge
es
into
jg
adc
jle
mov
ds
dec
lea
inc
mov
pop
fwait
xchg
imul
shlb
cmp
sub
rol
jno
cltd
sbb
sarb
xchg
cld
xor
cmpsb
push
and
neg
in
sub
sbb
icebp
out
aaa
pop
pusha
pop
addl
cmp
sbb
ficoms
cmpsl
jge
rcll
imul
loope
jmp
dec
repnz
int
repz
lret
mov
mov
pushl
mov
push
add
push
xlat
repz
dec
aad
xor
sub
cmp
jbe
inc
jg
insl
ffree
jb
jno
jae
push
xchg
out
mov
sub
test
ss
xor
fwait
clc
add
shll
mov
dec
mov
aas
popa
push
in
and
pop
adc
testl
call
movsl
mov
imul
insb
dec
sub
jns
enter
cmpsb
lea
fsin
and
loop
pop
cld
cmp
clc
in
daa
daa
jne
aaa
dec
ret
push
cli
sub
lret
or
pop
cli
pop
ret
ja
cmp
mov
cmp
data16
pop
arpl
dec
cmp
loop
xor
fbld
in
aas
cmp
adc
xor
and
lods
cwtl
into
or
or
mov
cmp
mov
cmp
out
cltd
stc
dec
inc
outsl
lock
out
mov
inc
test
mov
pop
cmp
negb
sbb
js
xchg
daa
out
loopne
add
out
adc
jo
cmp
arpl
sbb
cltd
push
aam
das
fistps
push
push
icebp
push
leave
push
imul
xor
push
pop
sub
xor
sbb
hlt
sarb
in
and
sbb
inc
aaa
andb
nop
mov
scas
ret
mov
mov
roll
ja
push
dec
mov
test
pop
lahf
lret
dec
sti
pushf
and
test
push
adc
cs
pushf
scas
pop
outsb
aas
xchg
popa
push
cmp
scas
push
cs
jg
clc
push
cmp
test
loope
lret
or
out
lret
push
jg
in
ffreep
mov
xchg
adc
cmp
sbb
mov
xchg
mov
dec
xchg
inc
js
aaa
mov
es
cmc
cmp
push
je
cmpsb
or
mov
ficompl
into
js
js
out
pop
sbb
daa
lods
sti
mov
or
aaa
outsb
jmp
repnz
cmp
rolb
adc
push
xor
aad
mov
cvtps2pd
cli
lcall
xchg
xor
out
inc
pop
xchg
dec
dec
out
out
mov
loope
or
shlb
dec
sarl
aas
daa
test
push
mov
not
les
xor
mov
jno
xchg
sbb
mov
jb
arpl
call
pushf
dec
cmp
notb
sbb
jg
sub
pushf
inc
inc
adc
adc
jne
test
dec
sbb
imul
xchg
fisubs
mov
push
adc
sti
inc
mov
cld
add
sbb
arpl
aam
ja
clc
call
cmp
iret
mov
outsb
loop
lock
xor
movsb
jmp
in
cmp
movsb
fidivrs
add
xchg
xor
add
and
xor
xchg
popf
cmpsb
push
or
or
sub
dec
jmp
mov
enter
jb
sbb
cmpb
es
adc
pop
sub
andl
jbe
lea
ljmp
arpl
arpl
dec
sarb
enter
mov
and
fs
icebp
or
jl
int3
push
outsb
popa
loopne
jbe
rorl
mov
pop
rol
and
jl
mov
pop
insl
xor
dec
xchg
es
scas
mov
xchg
dec
aas
and
lods
notb
dec
add
insb
push
jl
or
lret
fimuls
cwtl
in
push
push
mov
push
push
jno
push
loop
cmp
rcrl
inc
jle
xchg
and
lret
and
xor
dec
fidivrs
lock
push
fcmovu
mov
pop
xchg
roll
xchg
jp
mov
pop
mov
inc
in
xor
sub
iret
sahf
mov
push
std
mov
xchg
and
add
xchg
lret
cmp
les
inc
xor
into
imul
hlt
push
decb
loopne
sti
je
xchg
lret
rcrl
adc
clc
lods
imul
xchg
loope
inc
negl
and
push
mov
push
negb
leave
pop
pop
xchg
out
ss
mov
outsb
movsb
cmc
stos
xor
mov
fcoml
cld
dec
pusha
cmp
mov
adc
outsl
push
lock
aas
jmp
mov
pop
ret
pop
inc
xor
mov
lcall
push
inc
and
fistl
cs
dec
xchg
es
das
shrb
clc
nop
push
cmp
shl
mov
jle
pop
repz
cwtl
push
movsb
js
pop
fists
or
xchg
dec
sbb
and
pop
stos
lret
pop
fisubl
std
fs
into
add
cmp
imulb
push
lods
cmpsl
mov
out
insl
or
cmp
xchg
pop
ss
popf
xor
cld
test
lcall
les
mov
xchg
outsb
mov
mov
and
and
dec
fmull
jae
add
outsl
movsl
stc
les
inc
xchg
add
mov
lcall
hlt
repnz
sub
enter
inc
lods
xchg
shrb
jmp
mov
jmp
pop
out
cmp
inc
sub
insl
inc
ljmp
cmp
jb
push
mov
lcall
cmp
test
int3
and
das
and
push
pop
or
outsl
aam
push
mov
jle
ds
add
movb
es
mov
xchg
enter
sub
cld
adc
shrl
cmp
cmpsb
stos
orl
push
call
add
add
cwtl
mov
insl
fists
shl
mov
dec
xor
xchg
shlb
sarb
add
test
ret
xor
cs
sti
push
dec
jne
fdivs
dec
pop
sub
enter
push
int3
dec
jne
pop
jbe
testb
add
out
into
pop
xor
mov
test
cmp
dec
in
sbb
mov
push
or
lock
fs
lcall
je
lods
out
xor
lds
mov
or
jb
push
sahf
or
dec
lds
adc
sub
das
hlt
js
xchg
xor
xchg
push
scas
pop
dec
cmp
xchg
add
jl,pt
inc
aaa
jno
sbb
inc
push
call
push
or
jne
jo
adc
inc
sbb
movsb
pop
jle
jno
xor
mov
insl
call
test
cs
cmp
es
pop
jmp
imul
dec
clc
xlat
cmp
add
les
cli
sbb
mov
js
je
sub
sub
fidivs
test
out
nop
nop
dec
sbb
std
lds
cmp
push
xor
adc
repz
xchg
adc
scas
xchg
mov
jbe
arpl
subb
add
sub
pop
xchg
mov
cmp
dec
fld
sbb
mov
mov
dec
mov
sbb
mov
aaa
test
sti
push
adc
inc
jae
hlt
shlb
jno
lahf
cli
jp
or
and
insl
push
push
aam
mov
or
sbb
sub
xor
and
sbb
add
jge
lret
rol
inc
rorb
aad
out
outsl
icebp
push
scas
adc
xchg
and
pop
mov
inc
push
or
scas
cld
pop
adc
notl
shrl
in
or
fs
out
or
insb
out
lret
pushl
insb
jle
inc
cmp
add
loopne
idivl
aas
int
data16
and
xchg
jbe
adc
outsb
imul
std
xchg
movb
neg
xorb
mov
lea
mov
fxch
and
sub
inc
outsb
or
mov
cmpsl
insb
or
in
or
popf
adc
push
fisttps
ja
cmpsl
scas
paddb
into
dec
jp
int
mov
test
xor
or
outsb
sbb
movsl
dec
data16
cmc
mov
stc
push
daa
dec
mov
pop
push
dec
cltd
lods
push
add
sbb
inc
fisubs
pop
xchg
jo
mov
xchg
mov
push
mov
out
fwait
or
inc
mov
sbb
adcb
outsb
adc
bound
jb
dec
cmpsl
xor
inc
cmpsl
xlat
mov
movsb
in
or
in
lds
pop
mov
sub
ja
pop
aam
paddb
fdecstp
inc
loope
fucom
aad
mov
movsl
out
jmp
add
push
sbb
rorb
sbb
mov
sbb
sarb
inc
loopne
xor
dec
scas
insb
cmp
cmp
ds
insl
pop
lods
sub
dec
push
pop
pop
fcomi
mov
push
iret
enter
inc
adc
scas
jg
stos
imul
mov
and
inc
xchg
repnz
jmp
jle
jbe
mov
xlat
mov
mov
inc
dec
xor
pop
test
or
add
xlat
mov
test
mov
mov
mov
bound
lods
xor
aam
jp
push
xor
push
sbb
lea
mov
cwtl
aam
pop
inc
je
mov
das
stos
out
iret
xchg
adc
test
cmp
lods
cli
aas
dec
repz
dec
fdivl
in
push
jecxz
mov
fadd
out
jmp
add
or
bound
imul
inc
sbb
jp
inc
and
sti
call
popa
cmpsb
add
xchg
das
mov
imul
ljmp
fcmove
lods
ja
jp
pop
adc
or
inc
and
dec
lods
in
in
lahf
xchg
gs
dec
iret
add
xchg
mov
negl
cmp
pop
xor
jmp
subb
jmp
mov
and
inc
push
ss
loope
outsl
enter
test
in
adc
push
mov
rolb
out
addb
mov
mov
cld
shrb
shll
jecxz
sub
movsb
lds
add
data16
insb
pop
mov
ljmp
pop
arpl
jg
fsubl
notb
xor
xchg
add
push
xchg
sti
sbb
imul
cmp
cmp
fwait
jl
inc
dec
xchg
mov
jge
dec
out
bound
call
ljmp
pop
lret
sub
popf
mov
adc
add
pop
cltd
sub
stos
cs
sbb
mov
repz
iret
fsts
fs
mov
mov
in
inc
scas
pusha
jbe
adc
push
testb
addr16
stc
shrl
popa
dec
and
push
push
pop
faddl
xchg
aas
ljmp
lods
dec
stc
jmp
jo
rolb
cmp
pusha
mov
pusha
and
adc
mov
inc
jg
in
mov
push
inc
test
pop
mov
xor
loop
inc
add
mov
cmp
jo
or
inc
int3
jge
push
sub
mov
out
or
fbstp
popf
repz
mov
lods
les
and
jns
mov
arpl
sub
xor
pop
mov
stos
and
add
or
pusha
pusha
imul
imul
sbb
xchg
sub
scas
imul
subl
mov
jo
xchg
push
fbstp
mov
adc
xlat
mov
lds
out
or
xor
testl
lods
outsl
pop
fistl
pop
pop
sub
lods
test
pop
push
outsl
sbb
outsl
popf
cs
js
pop
mov
pop
jmp
ja
jg
mov
test
lret
andl
mov
inc
pushf
dec
push
js
leave
jecxz
xchg
adcb
jae
pop
stos
mov
xor
mov
sub
mov
mov
cmpsl
or
inc
imul
adc
pushf
in
cmp
mov
cmp
cmp
cmp
xor
pop
icebp
adc
pop
stos
lcall
rcrl
stos
jbe
stc
or
mov
xlat
mov
je
mov
jae
and
shrl
mov
ds
mov
push
out
test
in
adc
pop
sub
loop
es
out
movsl
dec
adc
or
outsb
cwtl
clc
test
rol
stos
out
fsub
out
out
jle
lea
mov
fldenv
or
sahf
inc
mov
data16
lahf
ret
nop
std
cmp
or
test
fistl
push
aam
add
test
arpl
xor
fidivs
rep
notl
dec
cmp
jo
cmp
test
cld
mov
mov
push
xlat
push
mov
jecxz
out
dec
or
jecxz
loopne
js
xchg
cmp
sbb
fildl
icebp
sbbb
pop
mov
adc
pop
push
dec
mov
scas
nop
push
jp
mov
lahf
cmp
imul
loop
sbb
movsb
les
les
aad
adc
pop
bound
popa
cmpsl
dec
mov
pop
adc
pop
ds
adcl
add
mov
xchg
cs
mov
shl
or
push
dec
mov
mov
add
enter
jmp
xchg
fimull
pop
sahf
fcmovne
das
repz
call
stos
loopne
dec
in
sub
pop
call
je
stos
clc
addr16
xchg
mov
out
or
loope
cmp
and
xor
loop
xor
pop
xor
inc
pop
jmp
add
movsb
add
jbe
dec
scas
hlt
leave
into
push
outsb
inc
xor
lods
jg
mov
mov
mov
cmpsl
xchg
std
or
mov
xchg
loope
int
jge
out
popl
push
jnp
sub
outsb
outsl
adc
notl
scas
sub
aaa
push
xchg
rolb
or
push
mov
sbb
incl
sub
push
adc
sbb
dec
data16
mov
mov
pop
pop
mov
mov
lret
movsb
pop
dec
pop
aaa
push
rclb
test
pop
pop
cwtl
add
xlat
test
cmp
push
hlt
std
inc
movsb
scas
fistl
int3
pop
test
push
lahf
add
iret
push
sahf
cmc
cmp
rcrb
stos
icebp
dec
aaa
or
test
in
mov
jne
orl
out
or
xor
xchg
sub
jnp
pushf
loop
popa
xchg
jnp
xchg
insl
inc
or
lcall
push
mov
les
stos
push
adc
add
mov
jge
cmp
jne
fs
or
rorb
addr16
ss
aas
mov
mov
mov
xor
push
mov
icebp
je
xchg
lods
add
mov
insb
lahf
fcoml
test
inc
jp
mul
jae
sti
mov
xchg
mov
aaa
dec
insl
cmp
ret
pusha
pop
sbb
aam
test
rcrb
jle
mov
out
fmull
fs
xchg
jns
cli
mov
jg
and
mov
bswap
loopne
mov
add
lds
int3
sbb
adc
pop
test
jle
pusha
and
xchg
fisttpl
repnz
xchg
stos
xor
adc
inc
jae
jle
hlt
std
dec
add
mov
pop
lcall
popf
cmpb
out
fsub
mov
push
push
mov
cmc
insl
pop
dec
dec
hlt
lret
adc
mov
jb
push
xor
lds
jge
aam
faddl
xor
mov
mov
cmpsl
sti
push
mov
orb
pop
jnp
or
cld
fwait
sbb
mov
push
adc
pop
mov
test
loopne
jbe
xchg
into
and
cmp
xor
fadds
push
or
loopne
mov
fwait
out
pop
mov
mov
dec
mov
clc
fsubr
leave
sub
out
arpl
mov
adc
insb
aad
cmp
or
jle
pop
or
sahf
jo
xchg
setb
repnz
sbb
int
dec
lahf
inc
stos
jbe
pop
cmp
push
xchg
pop
lea
dec
movsb
add
test
sbb
pop
and
lahf
pop
or
dec
mov
dec
adc
insb
dec
mov
pop
js
repz
add
xchg
jnp
aam
mov
sub
mov
xchg
inc
outsb
pop
mov
fcomip
lea
aam
mov
pop
xchg
add
mov
je
call
mov
xchg
xor
movsl
ficompl
shl
xlat
push
test
xchg
mov
mov
out
movsl
outsl
fsubrl
xor
daa
aas
jmp
shll
popf
call
icebp
sti
popl
add
xor
jecxz
inc
call
push
xlat
sbb
andb
adc
aas
dec
fadd
dec
in
pop
cmp
pop
dec
lods
popa
cmp
cmpsb
ret
div
loopne
and
and
out
cmp
subps
lret
pop
mov
add
mov
fdiv
adc
pop
out
popf
inc
jo
lcall
sbb
add
subb
in
ja
pop
add
cmpsl
jg
dec
push
jle
mov
mov
push
lret
repz
inc
push
or
cmp
mov
and
jb
les
mov
aaa
icebp
dec
pop
sub
jnp
in
jge
rorb
xor
insl
push
sbb
movsb
sub
pop
xchg
in
clc
pop
addb
test
fwait
out
shrl
jmp
lods
xor
cli
jns
int3
into
arpl
inc
jge
add
jae
out
stos
xor
lds
mov
pop
jne
mov
jnp
and
cmp
cli
lods
sbb
imul
dec
les
aam
adc
dec
lea
or
test
out
xor
movaps
add
hlt
subb
jg
int
and
lahf
out
subb
cmc
dec
nop
loope
cltd
mov
lods
testl
mov
sbb
orl
test
push
popf
js
insb
clc
mov
je
dec
aas
add
and
sbb
fistpl
dec
dec
dec
mov
in
fsubrl
cmpsb
sub
out
jg
mov
xor
mov
inc
in
xor
jmp
mov
imul
cmp
pushf
sbb
icebp
out
xor
sub
or
push
insb
jne
jg
add
lea
or
and
ljmp
cltd
jge
sahf
push
fwait
xlat
pusha
int
mov
cmpsb
xchg
pop
movsb
push
pop
pop
jns
and
inc
mov
and
push
push
ret
bnd
adc
jecxz
mov
lds
iret
mov
cmp
xchg
and
mov
cmpsb
pop
lds
scas
jo
push
cmp
lahf
das
sub
pop
mov
mov
pop
testb
mov
mov
jo
fs
dec
mov
add
adc
push
dec
test
cmc
roll
data16
fisubrl
mov
add
xorl
xchg
sub
pushf
movb
fadd
pop
nop
mov
daa
sbbl
mov
dec
inc
inc
mov
lahf
push
adc
mov
cmpsl
in
pop
fnsave
jno
std
xchg
or
ljmp
cmp
movsb
int3
in
sbb
jbe
nop
inc
cmp
xchg
cs
out
das
mov
mov
sub
iret
stos
and
add
outsl
xchg
jle
mov
orl
stc
mov
das
adc
adc
adc
add
popw
xor
inc
push
aaa
xchg
rcrb
fisttpl
cmp
mov
mov
fistpl
dec
sbb
ret
lret
push
push
scas
mov
insb
and
xchg
fdivp
xchg
xchg
repz
dec
dec
dec
jge
pushf
mov
jae
int
jno
push
push
fists
or
push
xchg
or
test
pop
and
js
mov
jle
xor
jbe
push
out
dec
js
imull
mov
js
xchg
inc
or
lds
gs
or
popf
adc
lock
xor
std
mov
jo
cmpsl
ja
dec
pop
lret
fsubs
push
ret
xor
loopne
and
sub
movsl
mov
in
xor
push
cltd
fimuls
fnsetpm(287
dec
jne
push
orl
jmp
lds
adc
stos
cmp
add
out
sbbb
mov
jmp
jle
jge
rclb
mov
cmp
xchg
lods
push
dec
sahf
loopne
dec
push
fiaddl
sub
stos
ds
inc
pusha
adc
std
stos
mov
filds
ja
add
mov
shl
adc
jg
sbb
testl
sbb
cmpsl
mov
enter
loope
pop
and
test
lods
loopne
lahf
enter
imul
outsl
inc
xchg
add
rorl
dec
clc
fldcw
add
or
imul
jge
in
fsts
jns
nop
sbb
sub
lods
ret
pop
push
add
cmpsl
orb
lahf
leave
daa
add
cmpsl
lods
adc
insl
out
mov
push
add
cmc
push
stos
xor
xchg
mov
stos
push
lods
or
add
imul
ljmp
mov
push
test
mov
jno
push
jp
push
mov
pop
insb
stos
cmpsb
imul
add
and
push
sbb
jle
mov
xor
fdiv
clc
lret
dec
out
ret
adc
pop
jnp
push
dec
mov
inc
push
pushf
mov
jmp
fwait
or
popf
mov
stc
adc
mov
loop
push
jns
jbe
jno
imul
popa
in
aam
test
lret
mov
jge
push
rcll
adc
cmp
jne
fwait
pushf
mov
cmp
or
test
mov
leave
xor
fbstp
push
mov
mov
idivl
push
mov
and
or
adc
mov
pusha
push
popf
lcall
jb
add
popa
lret
adc
add
ja
aad
lock
mov
inc
das
test
xchg
mov
popa
inc
jnp
in
mov
sbb
sbb
ja
shlb
rcr
jecxz
stos
mov
sbb
pop
and
sbb
scas
std
push
out
mov
sbb
test
mov
inc
jnp
dec
insb
js
pop
outsl
jne
mov
imul
jno
pop
add
scas
adc
cmp
inc
fyl2x
hlt
lds
adc
inc
sti
in
stos
sub
jge
sbb
pop
in
insb
insb
sbb
iret
or
arpl
daa
cmc
dec
xchg
ds
dec
xchg
int3
arpl
ss
mov
jle
xlat
imul
in
cli
push
mov
pusha
cwtl
outsl
stc
aam
lds
fisttpl
or
cmpsb
adc
sub
pop
mov
or
test
adc
mov
shlb
sub
inc
enter
ss
fs
addb
cs
and
mov
mov
mov
clc
xlat
pop
cmpsb
xchg
mov
adc
xchg
lock
mov
mov
push
mov
pop
sub
push
mov
test
push
cmp
aam
ret
mov
pop
inc
pop
jnp
aam
out
xchg
push
ljmp
push
mov
or
fcompl
push
sbb
pop
adc
iret
push
stos
imul
jne
xor
pop
rcr
sbb
cmp
xchg
add
cmpsb
fsubrs
mov
sub
pop
addr16
hlt
pop
jp
into
stos
mov
cmp
xor
xchg
sti
mov
mov
int3
mov
lahf
les
sbb
push
lods
icebp
add
fadd
orl
inc
imul
lds
gs
mov
xchg
or
xchg
aad
inc
ja
in
push
jns
dec
ret
or
inc
xor
sbb
mov
lea
mov
push
rolb
mov
mov
inc
test
jge
mov
xor
and
rorb
adc
adc
loope
cmp
push
loopne
or
in
lock
movsl
jle
rcl
xor
jmp
push
out
jnp
dec
xor
sub
in
loope
push
add
inc
push
xchg
mov
mov
mov
movsb
xchg
add
xor
aaa
aas
mov
xchg
mov
lea
enter
outsb
aas
jge
jno
js
je
xchg
push
lds
jge
stos
into
mov
xchg
dec
push
rolb
mov
loopne
dec
mov
hlt
ljmp
mov
mov
add
push
lods
insl
jb
pop
fsubrl
sub
pushf
les
arpl
and
or
arpl
inc
dec
divb
dec
add
inc
daa
bound
dec
mov
xchg
test
out
fcmovnbe
mov
xchg
hlt
xchg
arpl
jg
stos
pushf
lea
adc
or
jecxz
js
aad
mov
inc
jg
xchg
out
call
testb
icebp
fidivrl
loope
movsl
in
adc
dec
push
mov
lods
test
gs
in
mov
inc
push
mov
adc
add
jno
mov
xchg
scas
pop
xor
ja
sbb
xchg
pop
negb
nop
jnp
cwtl
jnp
shrb
jnp
adc
adc
add
push
cli
and
negl
adcb
ret
jno
xchg
mov
cltd
cmp
fdivl
sti
jbe
or
loope
jmp
cmpsb
push
lods
int3
and
adc
mov
rclb
std
into
gs
pop
scas
clc
or
aam
push
push
lea
lret
xor
inc
mov
pop
or
iret
xchg
shlb
xlat
call
mov
into
arpl
loopne
push
loope
movsb
add
push
mov
push
inc
out
in
repz
test
sbb
iret
clc
out
dec
or
mov
rolb
cmp
adc
out
mov
out
ss
jae
or
xchg
mov
add
dec
pop
sub
stos
rcll
out
test
cwtl
popa
in
mov
xchg
jmp
dec
or
push
roll
mov
sbb
sbb
adc
mov
push
jl,pt
roll
xchg
push
lods
ljmp
cmp
pop
cld
xor
insb
ret
sti
clc
mov
jne
push
hlt
cli
push
sbb
mov
scas
and
lret
sub
lock
xchg
pushf
clc
xchg
push
adc
cmp
xor
and
mov
sub
add
jne
and
arpl
pop
popa
lock
add
push
dec
mov
push
sbb
leave
insb
lret
jo
lret
push
xchg
in
xor
cmc
stc
outsb
add
cli
dec
popa
cmp
fdiv
add
test
mov
cmp
popa
xchg
inc
push
and
decb
fwait
and
sti
mov
popa
lock
inc
fsubs
push
inc
decl
out
cmp
inc
out
loop
xlat
jno
dec
dec
push
sub
sub
dec
lods
xlat
xor
inc
shll
rcrl
or
inc
xor
pop
xchg
and
ret
test
sbb
mov
call
cmpb
nop
stos
mov
test
cmc
xor
pop
jbe
xchg
adc
repnz
dec
in
scas
jle
or
imul
sub
nop
mov
shrb
push
cmp
ret
adc
sub
mov
fstpt
ljmp
ret
lret
dec
sbb
xchg
pop
fwait
movsbl
lret
xchg
xchg
decb
ljmp
iret
popa
push
mov
sahf
and
cmc
inc
xchg
dec
ljmp
test
jmp
push
popa
int3
cmc
aaa
scas
or
icebp
push
movsl
cmpsb
pop
test
out
push
jo
int
int
neg
sub
sbb
jl
cmc
sti
cld
ret
xchg
inc
sub
lods
sbb
cmpsb
out
sub
stc
mov
std
and
popf
mov
iret
mov
inc
lcall
push
cltd
out
aas
mov
mov
fisubrs
scas
push
sub
dec
insl
ss
adc
mov
pop
jl
int3
push
pop
jg
mov
jecxz
jns
sbb
mov
push
sbb
jle
ret
ret
adc
lock
ja
dec
adc
mov
push
imul
ja
pop
scas
negl
scas
and
into
adc
mov
out
mov
and
gs
sbb
or
adc
cwtl
repz
mov
pop
sbb
pushl
mov
scas
inc
stos
in
in
movsb
andl
jmp
sub
cmp
pop
push
adc
push
mov
jp
sub
adc
rolb
jmp
mov
aam
loopne
pop
ja
out
insl
ss
pop
or
mov
mov
es
fldl
jb
clc
rcrb
sub
sbb
mov
aad
cli
imul
and
or
icebp
xor
sbb
push
jecxz
jle
sub
sub
push
sub
push
pop
int
cmc
int3
scas
pop
xchg
mov
loopne
test
in
mov
xchg
std
lret
scas
shll
mov
addl
mov
add
imul
enter
imul
adc
pop
mov
xor
popf
mov
pop
mov
or
inc
cwtl
sahf
inc
dec
sti
add
dec
fcoml
push
stos
aaa
loopne
js
nop
sbb
push
out
fdivl
sbb
cmp
lahf
mov
xlat
arpl
sub
xor
push
mov
mov
mov
das
ss
dec
sub
pushf
insl
inc
sub
addr16
push
sbb
cmpsb
or
js
pusha
insl
push
icebp
mov
aas
jbe
pop
nop
pop
ret
mov
dec
call
daa
inc
cmp
mov
icebp
add
lret
add
sub
xchg
cli
jnp
or
jmp
sub
dec
adc
js
jo
or
dec
mov
lds
jo
dec
fwait
in
adc
lahf
cmpsb
pop
xlat
pop
sub
mov
mov
stos
int
xor
jmp
mov
mov
cmp
addb
scas
pusha
imul
ss
inc
fidivrl
fwait
xchg
sbb
movsb
inc
jge
pop
ss
push
adc
in
insb
push
sbb
int3
cmp
bound
push
sbb
shrb
add
lret
xor
and
xchg
lods
inc
mov
in
pop
xor
loope
movsb
mov
xchg
add
jge
daa
mov
or
shrb
dec
out
rclb
and
adc
sub
sti
out
cld
out
mov
int3
mov
sbb
push
sub
data16
or
and
mov
enter
mov
ret
sbb
out
shll
insb
inc
scas
arpl
mov
rorl
setb
jb
dec
push
out
jns
fnstsw
mov
icebp
popa
mov
shll
std
jg
and
fstps
cmpxchg
mov
loope
sub
sub
mov
addl
aad
mov
insb
dec
dec
jmp
mov
imul
mov
adc
cltd
xchg
push
xlat
frstor
aas
roll
pop
jecxz
gs
adc
fistpl
xor
sbb
sub
clc
clc
jbe
cmpsl
xchg
xchg
fisubs
out
arpl
inc
pushl
movl
sbb
nop
mov
sub
punpcklwd
ja
mov
adc
movsl
flds
mov
or
sub
push
pushf
push
mov
sub
outsl
in
ss
jo
loop
add
in
mov
out
ljmp
or
mov
xchg
test
pop
and
pop
mov
sahf
jae
mov
ljmp
ror
jge
xchg
pushf
inc
mov
test
out
push
cli
sub
subb
aas
aas
pop
pop
ror
movsb
or
add
and
pop
pushf
push
leave
push
aam
decl
push
ret
js
pop
adc
and
aaa
pop
stos
mov
leave
inc
cmc
push
scas
dec
int3
or
push
repnz
das
mov
jo
mov
fs
cmc
fmuls
das
jg
frstor
xor
in
orb
hlt
ficomps
push
push
adcl
leave
cmp
xor
cmpsb
sub
sub
pop
aaa
cwtl
lods
sub
outsb
mov
xor
sbb
loope
sub
push
jo
xor
aaa
mov
shrb
cli
xor
in
test
es
ror
adc
je
pop
inc
cmp
sbb
inc
outsb
sbb
cli
mov
loop
jne
sub
cmp
ds
pop
dec
outsb
sub
mov
jae
insl
mov
lods
add
xorb
xlat
or
cltd
push
and
and
xor
jnp
xchg
shlb
and
or
stc
mov
mov
pop
pop
ret
cmc
jno
lret
mov
rolb
mov
rcll
lahf
addb
daa
xchg
lods
cltd
add
ja
sbb
sahf
dec
sbb
pop
loopne
loopne
enter
push
lods
rcrl
or
pushf
inc
dec
xor
lods
pop
xchg
mov
bndldx
sub
js
stos
imul
lods
ja
cmp
insl
mov
lds
stos
fwait
jb
sarl
push
fisttps
adc
bound
jb
push
bound
repz
das
adc
push
jle
call
xor
pop
fsub
sub
rcrb
call
add
push
popa
xchg
arpl
cmpb
in
testb
rorl
mov
jl
push
data16
cmp
and
push
push
push
add
icebp
and
lcall
xor
push
out
movsl
cmp
lret
sbb
inc
ret
xchg
cmp
out
iret
jmp
sub
or
shrb
and
and
xor
outsb
in
aad
addr16
popf
dec
sahf
fdivrp
dec
jg
xor
in
jae
ja
into
cmp
insl
fucompp
jp
out
aam
scas
push
mov
jb
dec
push
cli
mov
inc
xchg
sub
cli
fistpl
jns
sbb
xchg
pop
jae
insl
mov
daa
push
aas
sub
and
xchg
stos
in
negb
cli
lret
inc
sbb
iret
pop
in
mov
xchg
fcmovnbe
test
imul
and
scas
fldcw
sbb
ds
inc
in
out
pusha
mov
jne
mov
mov
push
vmovaps
arpl
or
and
fnstsw
xor
popf
mov
sahf
add
dec
xor
scas
adc
call
mov
scas
and
cs
xchg
in
je
xlat
dec
lods
int3
add
cmpsb
sbb
aaa
xlat
inc
imul
jb
cmp
repnz
add
mov
adc
mov
out
ret
rcrl
xor
rolb
pop
xlat
aad
mov
adc
lods
push
lock
out
pusha
adc
pushf
into
lahf
adc
stos
rcll
jl
push
mov
adc
push
cmpsb
arpl
lea
es
shl
nop
adc
mov
out
jl
gs
scas
aaa
mov
cld
fimuls
mov
cltd
in
cwtl
or
or
and
add
xor
cs
mov
ficompl
xchg
xchg
mov
out
or
shl
repnz
push
call
xor
adc
out
icebp
pushf
scas
loop
inc
cli
dec
push
xchg
adc
cltd
mov
push
inc
and
mov
and
pop
ret
mov
loope
cmpsb
mov
cmp
cmp
out
gs
jecxz
in
icebp
scas
repnz
or
cmc
jmp
insb
xor
mov
pop
xor
sub
pusha
mov
dec
fcmovbe
add
mov
es
cld
imul
stos
xchg
je
cmp
cld
jae
test
xlat
pop
mov
cmp
pushf
aaa
cld
mov
insb
mov
pop
cmc
mov
pop
mov
pop
sub
inc
lret
jne
clc
or
out
mov
jp
repnz
out
jle
pop
jg
ret
scas
xchg
pop
sbb
push
pop
bound
add
sub
pop
into
push
xchg
mov
sbb
sets
repnz
mov
arpl
movsl
and
stc
orb
xor
icebp
mov
cmpsb
hlt
sub
into
push
push
inc
notl
xchg
xchg
and
fisubs
mov
cltd
sahf
push
add
ret
xlat
push
nop
fdiv
hlt
mov
enter
sub
jge
jnp
mov
adc
mov
jo
in
sti
inc
sub
mov
dec
xor
cmp
or
jge
jns
ja
add
fisubrl
pop
push
mov
push
cmp
mov
leave
fsubrs
xchg
mov
mov
mov
mov
mov
jns
out
adc
out
push
add
scas
jmp
imul
dec
paddd
out
shlb
xchg
mov
imul
xchg
clc
mov
xchg
mov
push
mov
clc
dec
inc
cmp
bnd
xchg
in
mov
inc
or
mov
sbb
dec
sahf
cld
cmp
in
xor
jb
mov
data16
icebp
addr16
lahf
imul
ljmp
pop
mov
mov
xor
mov
sbbl
aaa
jns
xor
aas
data16
mov
or
add
fcmove
js
sbb
inc
or
mov
pop
insb
inc
sbb
mov
pop
jge
aaa
out
pop
push
dec
aam
pop
pushf
insb
or
pop
jl
mov
mov
dec
imul
aad
jns
add
add
mov
dec
mov
xchg
shrb
test
ds
sub
push
outsl
mov
hlt
aad
insl
xor
jmp
adc
adc
aad
push
pushf
and
mov
xchg
or
mov
popa
aad
pop
or
lret
outsb
or
push
or
xor
jnp
push
xchg
lea
shl
dec
es
mov
adcl
int
cmpb
jg
addr16
mov
pop
and
dec
cmp
outsl
xor
int
mov
sahf
xor
push
mov
cwtl
or
arpl
mov
popa
jbe
sarl
hlt
adc
into
add
test
cwtl
cs
mov
movsb
dec
arpl
mov
test
sub
outsb
mov
out
repnz
pop
aam
pop
pushf
adc
imul
push
andl
xlat
mov
or
out
repnz
sub
push
mov
pop
scas
or
pushf
ja
xor
mov
jne
pop
and
inc
fisttps
jo
inc
pop
add
dec
fwait
and
xor
mov
cwtl
and
xchg
mov
mov
jmp
sahf
daa
inc
shl
jne
mov
xchg
xor
push
inc
add
daa
aad
je
les
in
jmp
sub
popf
cli
jge
xchg
shlb
pop
mov
pop
popl
jecxz
or
mov
lcall
mov
and
lret
fs
enter
xchg
ret
and
mov
ljmp
cmp
lcall
or
mov
and
sbb
push
and
jbe
adc
loopne
push
rclb
xor
cmp
and
test
cld
lret
gs
shrb
push
push
out
lock
jmp
cmp
cli
pop
loope
mov
cli
and
add
or
mov
rorb
mov
cs
test
rclb
sub
pop
jbe
test
adc
out
xchg
pop
lods
jl
fldenv
xchg
shlb
cmp
xchg
gs
jl
pop
xor
push
jb
push
inc
mov
xchg
aad
inc
xor
repz
adc
das
popa
xor
push
je
repz
repz
push
loop
dec
push
scas
xlat
jg
jge
inc
mov
push
cmpsb
cmpb
aam
cli
cmp
icebp
xchg
orl
ss
or
or
sti
dec
xor
pop
mov
mov
adc
ja
int
cmp
popl
pop
cmp
stos
mov
xchg
mov
cmpsl
or
sub
push
out
and
adc
enter
pop
add
inc
xchg
fcom
das
mov
jecxz,pt
add
pop
xor
jle
and
cwtl
adc
or
lds
testl
iret
outsl
into
hlt
popf
aad
xchg
mov
call
mov
dec
push
or
lods
outsb
mov
ret
out
in
or
addr16
push
sbb
dec
xchg
sub
adc
mov
or
insb
sub
jno
lods
jmp
mov
jl
rcr
stos
lods
cmpsb
sbb
hlt
mov
xchg
cwtl
add
or
jmp
cmc
push
das
out
add
jecxz
std
dec
in
adc
sbb
pop
xor
jo
inc
sbb
nop
adc
lea
push
je
jo
lret
orl
and
pop
fs
xor
jb
pop
cli
stos
in
sub
mov
ja
in
repz
push
sub
repnz
repz
adc
ss
sbb
cmp
ret
scas
imul
test
push
lods
jl
and
aaa
and
rorl
fidivrs
or
pop
aam
popa
ror
push
icebp
stc
adc
ja
int
pop
push
mov
inc
lcall
rcrb
push
add
push
rcrl
xchg
inc
in
and
sub
pushf
in
icebp
js
cltd
cmp
les
mov
mov
ljmp
and
ret
bound
xchg
sbb
cmp
mov
hlt
mov
push
rorl
addr16
pop
repnz
cmpb
gs
out
lret
cmp
adc
mov
push
stos
rclb
loop
arpl
pop
dec
fsubrl
jg
lcall
icebp
lods
fildl
inc
cmp
cld
pop
imul
and
push
test
add
xor
ret
sub
mov
mov
inc
aad
mov
mov
lret
dec
pop
ret
in
xor
subb
cmp
fidivrl
out
or
mov
jno
jecxz
pop
sbb
mov
and
movsl
add
out
jmp
mov
jg
aam
cwtl
inc
jb
adc
adc
mov
scas
movsb
cmp
cli
int
cwtl
and
xchg
pop
addr16
mov
in
and
lcall
dec
jg
lret
xlat
les
imul
mov
adc
in
push
fnstenv
xchg
loopne
rcrl
pop
sub
push
int
jbe
cmp
jg
push
cmpsb
fstps
push
sbb
test
push
cmp
mov
pop
jmp
stc
xor
shll
or
sbbl
nop
pop
mov
inc
negb
and
mov
sbb
pop
stc
mov
shrb
popa
stos
mov
les
push
stc
xor
iret
pop
sbb
lds
add
ss
js
fs
cs
jbe
rcl
xchg
fisubl
or
sub
jge
sub
xchg
and
pop
pop
inc
or
int3
push
stc
dec
js
jns
out
cmp
xor
jns
mov
inc
jnp
fdivp
clc
push
fisttps
lcall
and
mov
mov
int3
nop
xchg
arpl
and
outsb
sbb
xchg
cmc
sbb
lcall
stos
pop
sub
ljmp
push
adc
cmpb
les
sti
mov
test
int
fmull
mov
push
scas
pop
dec
inc
popf
push
adc
lods
mov
jg
sub
cmp
dec
lods
jmp
sbb
insl
movsl
pusha
jo
int
jae
jns
lcall
fildll
pop
sahf
ss
jo
xchg
lods
push
mov
or
rcr
push
cwtl
and
jg
push
mov
movsb
pop
pop
mov
scas
inc
pop
out
andb
mov
sarb
in
popa
cmpsl
ficomps
cmp
mov
repz
xchg
or
mov
push
in
imul
or
hlt
xchg
xchg
inc
cwtl
xchg
or
mov
cmpsl
pop
mov
add
sub
xor
jle
cmc
in
dec
es
and
fnstcw
jae
sbb
sbb
or
loopne
insl
push
push
jb
dec
inc
push
jae
mov
pop
imul
sbb
sbb
push
ret
or
push
pop
fs
orb
inc
mov
mov
rorl
mov
ret
dec
mov
stos
rclb
push
jno
or
push
mov
push
push
popa
cmp
lret
pushl
pop
in
sbb
sub
push
or
xchg
push
pop
js
sub
je
pop
inc
fstl
gs
stos
mov
add
or
mov
push
data16
arpl
mov
jecxz
pop
popa
dec
mov
dec
ficompl
das
cmp
imul
push
outsl
add
movsb
ljmp
les
popa
ds
mov
xchg
push
xor
andb
jmp
add
insl
inc
hlt
xchg
imul
arpl
stos
ljmp
std
out
or
scas
mov
mov
push
xor
imul
adc
inc
xchg
cmpsl
xchg
jae
xchg
and
jecxz
pusha
push
lret
je
scas
inc
mov
dec
faddl
and
daa
stc
inc
call
fidivl
and
mov
mov
adc
pop
call
add
push
and
add
push
or
ret
dec
push
ja
add
lock
iret
rcll
push
lret
xchg
cmp
push
ja
repnz
push
cmp
mov
sub
fstl
and
scas
lahf
and
pop
std
fwait
dec
xchg
adc
fsubp
jae
xchg
andb
in
aad
add
xlat
pop
add
dec
jae
sbb
push
inc
push
dec
cmp
pop
push
jae
fisubrs
pop
cmpsl
mov
sbb
cmp
jge
dec
xchg
pop
rclb
sbb
mov
push
test
sti
mov
jmp
in
inc
xor
das
cmp
mov
jae
push
into
mov
es
adc
mov
mov
xchg
in
int
mov
sbb
aad
scas
dec
inc
xor
dec
cmc
out
mov
mov
lfs
pop
scas
fcomps
inc
mov
ds
loopne
cs
jg
or
dec
mov
lea
fistpl
mov
mov
popf
sub
lret
in
push
es
xchg
pop
mov
and
imul
push
jne
mov
sahf
mov
inc
cmp
dec
popf
mov
sti
cmpsb
mov
outsb
adc
int3
mov
rcrb
dec
or
cltd
std
or
mov
adc
jns
sub
cmp
jp
add
sbb
clc
mov
xchg
popa
cmp
adc
lock
in
imul
movsl
lods
inc
or
xor
pusha
push
iret
jmp
sbb
xor
outsl
xchg
cmp
xchg
mov
movsb
push
fcomi
sub
pop
inc
and
mov
add
push
xor
lahf
out
xor
div
lcall
scas
hlt
and
cmpl
sbb
add
es
les
scas
mov
jp
ja
das
push
mov
imul
jo
testl
enter
cmp
outsl
cmp
pop
call
dec
mov
cli
lds
jecxz
test
mov
dec
cmc
sbb
sti
inc
adc
mov
imul
out
setnp
inc
test
push
cmpsl
pusha
sub
mov
jb
scas
jmp
sbb
mov
ret
push
mov
mov
andl
jne
cmp
pop
or
cmp
jl
mov
ret
and
repz
pop
mov
popf
std
jmp
cmp
or
pusha
js
fisubl
inc
test
cmp
mov
rorb
insb
aaa
inc
and
jecxz
mov
addr16
out
cmpsl
loop
fdiv
xchg
xor
and
pusha
decb
pop
mov
ja
das
scas
pushl
mov
dec
stos
jns
or
inc
fcmovnbe
sti
testl
mull
xchg
stos
out
mov
jne
aas
scas
stos
repnz
ljmp
fdivp
lods
dec
scas
aas
and
push
sbb
adc
stos
rcll
mov
or
jbe
insb
bound
pop
jge
push
sub
xchg
sbbl
add
insb
sti
pop
addr16
add
sarb
fwait
repz
out
push
fsubs
pop
imul
stos
addb
inc
or
in
and
arpl
and
and
mov
mov
mov
in
push
xor
xchg
sub
push
xchg
jb
adc
cs
xchg
inc
js
out
jl
xor
jo
add
push
lret
mov
or
mov
aas
inc
jb
inc
xchg
in
dec
mov
fnsave
sbb
movsl
push
scas
icebp
stos
jp
pop
cmp
clc
cmp
sub
adc
neg
in
adc
dec
push
iret
sbb
pushf
push
jb
out
fdivr
and
pop
fmull
ss
inc
dec
mov
mov
push
pop
mov
push
xchg
push
jmp
inc
insl
mov
rcl
jp
jns
mov
pop
xchg
mov
aam
sbb
inc
cmp
push
xor
lahf
das
ja
jmp
in
fucomi
sub
in
sbb
add
cs
mov
sbb
cmpsl
add
xor
sbb
mull
cwtl
aaa
pushf
mov
mov
mov
adc
or
out
adcb
push
push
iret
out
pop
pop
jp
or
ss
aad
test
xchg
test
fisubrs
movsl
sti
mov
jg
inc
xor
scas
jo
adc
std
xchg
inc
mov
loop
aaa
cmpsb
in
out
popf
jo
add
out
sbb
mov
jg
cmpsb
mov
jb
mov
cmp
add
out
push
stos
adc
pop
adc
mov
pop
js
mov
and
and
dec
jbe
sbb
pop
dec
xor
dec
or
clc
adc
mov
sub
clc
adc
loopne
nop
push
pop
fidivl
rolb
sub
in
and
mov
movsb
xchg
mov
xchg
js
cmc
loopne
sarl
mov
jno
mov
push
sub
jb
inc
inc
sub
out
test
pop
and
lods
mov
xchg
scas
jmp
icebp
pop
xor
mov
rclb
sbb
xchg
pop
mov
dec
int
sahf
imulb
inc
and
cmp
inc
aam
iret
add
adc
xchg
jne
mov
xchg
mov
cwtl
int3
jl
mov
mov
idiv
xchg
daa
pop
dec
and
sub
push
sti
rcr
adc
insb
sub
or
or
and
mov
shlb
test
and
fisttpll
cmp
adc
sbbb
imul
int
xchg
stc
test
push
repnz
mov
call
cmp
inc
aaa
shrl
test
pusha
jae
mov
dec
lods
js
jl
adc
mov
xchg
xor
les
pop
lods
paddb
out
push
int3
pusha
outsl
std
sbb
icebp
jno
xchg
movntps
into
mov
lods
into
fldenv
out
movb
and
xchg
mov
inc
add
pop
clc
jnp
mov
sub
push
les
jecxz
sub
xor
push
imul
push
push
aaa
fdivs
popf
sbb
sti
xchg
cmp
cld
pusha
pop
add
mov
push
sbb
idivl
aam
outsl
jnp
mov
xchg
mov
scas
push
dec
movsb
and
shlb
push
insb
add
mov
push
cmc
sbb
mov
xor
mov
jnp
inc
test
mov
roll
cli
and
lret
data16
pop
jne
subl
jmp
mov
xor
out
incl
shll
shlb
lea
aad
push
mov
pop
push
cmpsb
cmpsl
ret
push
ret
and
ss
sub
mov
push
fwait
push
pop
lcall
out
fucomp
xor
testb
loope
and
jg
dec
aad
sub
movsl
aas
insb
clc
data16
pop
aad
mov
shll
sub
sbb
cmp
cmc
in
pop
test
push
inc
pop
add
dec
xchg
js
dec
xchg
stos
adc
test
adc
ja
inc
dec
mov
loopne
je
adcl
sub
xchg
and
int3
mov
or
adc
in
mov
cmp
mov
out
loopne
bnd
inc
sbb
pop
ficoms
lock
outsl
adc
pop
movsl
and
xor
cmpsl
lea
dec
cwtl
xchg
repz
fsubs
stos
lret
call
mov
sbb
push
stos
mov
jge
add
test
lods
mov
popa
dec
stos
pushf
les
and
sarb
out
xor
cli
cltd
pop
rorl
jge
sbb
orl
pop
in
mov
add
fwait
insl
inc
cwtl
out
xchg
arpl
xchg
dec
rcr
loop
inc
and
addr16
xchg
pushf
clc
push
cmpb
sbb
pop
xor
int
push
mov
xor
in
gs
sbb
jg
nop
inc
xor
vpunpckhqdq
imul
mov
adc
mov
jns
lret
lret
int3
ljmp
clc
inc
movsb
mov
push
jo
out
fdivrs
out
cli
push
add
sahf
scas
and
jnp
dec
stc
rolb
insl
outsl
jge
test
arpl
mov
push
cltd
mov
pop
jg
or
popa
and
in
add
inc
pop
movsl
mov
lret
lret
inc
xchg
out
hlt
add
xchg
add
insl
inc
mov
js
repz
sub
jbe
test
sub
and
mov
je
jno
fwait
stos
cmpsb
xlat
rol
jns
xor
inc
jp
sbb
mov
je
in
dec
mov
popf
or
sti
movsl
ret
adc
add
cld
jge
inc
xor
insl
mov
popa
aam
cwtl
sub
sub
iret
add
mov
add
pop
dec
adc
mov
jbe
mov
push
xlat
outsb
inc
adc
aaa
sahf
jno
mov
mov
sahf
outsb
scas
movsb
lret
or
xchg
fidivs
pushf
ret
clc
aaa
jae
dec
nop
adc
fcmovnbe
je
mov
pop
cmpsl
int
cli
ret
enter
scas
daa
loope
imul
stos
sub
movsl
pop
nop
ret
mov
sahf
sbbl
pop
pop
adc
mov
daa
out
sub
and
call
mov
push
mov
ret
xorl
or
adcb
xlat
arpl
cld
les
cmp
xchg
xor
in
adc
aaa
mov
insl
mov
lret
mov
cmp
add
jmp
addr16
in
inc
je
fcoml
repnz
or
or
and
lcall
jns
push
or
push
sub
jbe
mov
aad
scas
iret
xor
in
or
jnp
push
inc
sub
sub
sub
andb
jmp
cmpsb
or
das
les
enter
fs
and
push
pop
pop
pop
mov
pop
dec
imul
das
jecxz
and
les
out
inc
lods
inc
cmpsb
inc
xlat
push
jmp
jle
xchg
imul
outsl
lds
cmp
add
mov
dec
jge
lock
aad
outsl
pop
test
mov
xchg
mov
pusha
data16
xor
arpl
jb
add
jl
pop
cmpsb
bound
in
fwait
inc
cli
fistpll
pop
iret
loop
pop
loope
mov
push
out
dec
adc
jns
pop
and
in
push
test
inc
cmp
inc
sbb
aam
xor
adc
xor
cmpsb
or
push
mov
and
or
outsb
insl
dec
dec
test
cmp
xor
orl
push
int
jmp
dec
mov
sub
int3
clc
lea
movsb
arpl
add
and
js
ret
mov
jmp
test
enter
test
clc
sub
push
or
adc
hlt
daa
jl
outsl
cli
and
lahf
cwtl
jb
pop
mov
push
repz
ror
out
std
adc
mov
and
dec
lods
andl
cmp
lods
ss
aad
imul
inc
jecxz
mov
add
test
or
xchg
es
int3
inc
add
mov
sbb
inc
sub
adc
ss
push
pop
nop
out
roll
jae
fs
sti
aam
add
fs
jmp
dec
data16
dec
fbstp
add
ss
and
sub
insb
pop
fdivrl
adc
xor
andl
popa
mov
jno
fmull
imul
dec
outsl
leave
mov
subl
jl
in
inc
lea
loopne
mov
clc
mov
addr16
fs
cmp
das
dec
mov
out
stc
or
jno
sub
ret
inc
mov
xchg
pushf
xor
clc
jae
clc
ret
xor
push
stos
lret
imul
popa
scas
mov
cmp
cmpsb
fdivs
xchg
jnp
cmp
adc
shrb
inc
loope
cli
cltd
ss
mov
test
mov
xor
or
je
cmpsb
push
and
lahf
call
in
dec
inc
adc
mov
mov
sub
xchg
jp
lods
sti
in
icebp
pop
fsubl
pop
mov
push
decl
xor
push
pop
pop
aaa
lock
mov
push
xor
rorl
push
pop
xchg
stos
rcr
test
loop
cmc
adc
pusha
roll
nop
or
sar
dec
push
ljmp
in
inc
inc
or
lea
leave
popa
jmp
mov
sbb
mov
ror
xchg
mov
push
jno
dec
jno
mov
insl
push
inc
push
push
inc
sbb
xchg
popa
nop
xchg
movsb
pop
addb
inc
push
ds
pop
xlat
ret
cwtl
xchg
mov
fidivl
into
test
adc
mov
push
mov
mov
mov
clc
add
push
inc
pop
or
scas
sbb
xchg
mov
fdivs
cmp
ja
jge
fiaddl
push
notl
mov
mov
xchg
leave
popa
xchg
jo
das
inc
pusha
insb
jp
sub
sub
adc
leave
adc
jb
arpl
push
in
cld
lds
push
cmc
xor
dec
std
sarb
cmp
insb
adc
jecxz
push
int
into
pop
sbb
mov
fldcw
or
adc
pop
arpl
pop
out
mov
inc
jl
sbb
loopne
in
mov
aad
mov
mov
sbb
fmull
push
imul
cld
lods
mov
iret
jp
jns
test
adc
je
xor
pop
jge
inc
sarl
negb
ljmp
pop
cltd
adc
jecxz
in
pop
or
popf
adc
push
addr16
fcmovnu
xchg
iret
push
ds
jno
cmp
sub
cmpsb
cmpsl
lahf
adcb
push
js
sub
pop
fbstp
rorb
inc
jge
jae
or
rolb
inc
pop
sbb
xlat
jp
fwait
enter
ss
xchg
push
inc
jle
xchg
inc
pushf
mov
les
inc
jno
xchg
jne
std
and
push
mov
mov
movsb
out
sub
adc
push
push
cmpsl
dec
shrl
test
mov
mov
jecxz
pop
fstpl
pop
xchg
mov
cltd
fnstcw
sub
ja
dec
jle
push
cmp
fs
pop
idivl
push
stos
and
aam
stc
cmp
cld
in
adc
add
cli
push
jp
push
adc
pop
fcompp
sbb
idivl
sub
sbb
das
iret
in
xor
pop
leavew
cmp
pop
or
pop
or
adc
movsb
hlt
cwtl
xor
sarl
sub
sub
and
outsl
pop
loope
mov
and
ja
xchg
mov
jb
enter
cmp
and
addr16
mov
sub
xchg
push
push
inc
cmp
enter
pop
cs
leave
jae
cmc
sub
or
test
push
mov
loope
lds
popa
rcrl
sbb
mov
dec
idiv
and
cmp
xlat
testl
cmovp
mov
pop
pusha
out
lods
push
loope
ljmp
test
sub
sbb
aam
sub
out
jp
addb
cmpsb
fisttpl
stc
repnz
test
dec
cs
dec
dec
fcmove
push
adc
fimuls
adc
fsub
rorb
movsl
xor
push
or
das
out
ja
push
cmc
jge
stos
std
pop
clc
movsb
repz
inc
xlat
outsl
push
int3
mov
mov
bound
pop
mov
cmc
sbb
adc
dec
dec
test
stos
sub
push
mull
pop
pop
mov
ret
pushf
pop
mov
cmp
sahf
aam
xchg
or
dec
push
inc
dec
pop
rolb
sub
test
mov
ja
xlat
pop
mov
ss
mov
mov
or
ret
lcall
adc
shl
jns
xchg
sub
or
mov
repz
mov
mov
xor
scas
shrl
dec
mov
notl
adc
adc
sub
data16
unpckhps
pop
fisubl
imul
or
fcmovne
outsb
je
mov
imul
gs
xchg
test
lods
dec
icebp
popf
call
xchg
into
cmpsb
ja
imul
decl
mov
outsl
pop
mov
sbb
dec
lods
outsb
in
xlat
lock
dec
push
mov
add
faddl
movsb
into
pop
jl
sub
lods
mov
jbe
in
repnz
hlt
or
loopne
bound
repz
mov
das
push
leave
lods
mov
adc
mov
jne
sub
xor
mov
jbe
cs
leave
arpl
dec
push
jl
loopnew
mov
fiaddl
jo
fcomip
and
imul
cmp
inc
ljmp
jo
clc
add
fmull
int3
fistl
mov
push
push
dec
outsl
push
shlb
test
loop
mov
pop
mov
shl
stos
adc
add
push
shl
sbb
in
dec
mov
jno
jecxz
movsl
xor
mov
loop
jmp
mov
hlt
in
pop
mov
push
dec
test
rolb
adc
ds
jbe
xor
movsb
jmp
fnsave
aam
test
movd
or
add
and
cli
jae
adc
ljmp
ret
mov
imul
ja
jnp
inc
cld
arpl
pop
jp
gs
loope
and
stos
mov
daa
js
xchg
and
mov
inc
aas
fmul
shl
in
int3
fs
ja
inc
ljmp
cmpsb
out
in
mov
jne
mov
mov
hlt
int3
andb
sarl
dec
mov
rorb
push
mov
mov
and
add
add
sbb
idiv
add
add
fcomps
add
incl
add
add
or
shl
push
add
add
add
sar
loopne
add
or
add
loopne
mov
shr
call
mov
test
push
sub
pop
ret
pop
mov
add
mov
lea
mov
call
mov
push
inc
pop
mov
call
push
mov
test
pop
pop
add
cmp
push
mov
mov
pop
pusha
call
pop
add
add
call
pop
shr
xor
sub
mov
shl
mov
dec
jne
push
push
ret
pop
inc
popa
lods
push
push
mov
add
pop
push
inc
xor
pop
pop
inc
push
and
inc
shr
pop
stos
dec
jne
popa
call
call
pop
add
add
ret
mull
enter
mov
add
sub
push
mov
testb
xchg
scas
add
mov
push
mov
pushf
ret
rcr
jne
cld
testb
mov
lea
ds
adc
testb
xchg
out
cli
mov
add
imul
mov
mov
inc
lods
mov
mov
or
call
mov
gs
push
xor
add
in
add
sub
add
add
add
scas
adc
aas
push
jae
outsb
push
push
or
jg
jae
inc
pushf
add
scas
mov
cmp
lods
mov
mov
pop
repz
push
imul
inc
and
into
pusha
mov
test
mov
and
or
push
gs
mov
andl
mov
cs
cmp
jne
jns
sub
fwait
add
cmp
shr
dec
xchg
push
inc
mov
cs
test
mov
addl
add
jl
xor
orl
je
sub
add
mov
mov
lock
cmp
rcrl
test
mov
ljmp
das
add
outsl
std
call
and
and
mov
add
push
or
into
mov
add
movsb
inc
inc
outsl
push
ljmp
stos
pop
mov
test
dec
inc
add
add
jmp
push
in
adc
xor
jg
jge
mov
in
call
mov
in
jp
mov
pop
add
scas
xor
xchg
stos
mov
push
mov
clc
mov
mov
es
hlt
mov
or
notl
mov
mov
mov
or
jmp
scas
incl
out
push
xor
in
dec
pop
mov
and
adc
add
add
cmp
dec
mov
push
and
or
sbb
rcr
or
xlat
inc
pop
add
outsb
loopne
shr
mov
mov
mov
shr
mov
or
mov
adc
or
scas
sub
incb
add
mov
leave
add
scas
add
in
es
mov
inc
addl
lea
scas
mov
mov
loopne
mov
add
aas
and
lock
in
call
mov
or
mov
shll
and
fdivl
add
aas
xchg
add
aas
scas
lea
stos
add
mov
aam
and
jns
movsb
sti
call
decb
jp
mov
and
mov
outsb
out
or
add
cmp
jae
mov
mov
sub
outsb
out
add
jmp
rolb
aas
scas
mov
xor
mov
and
rorb
clc
and
rcl
call
sub
sub
mov
call
mov
and
fstpt
lds
mov
push
jmp
xchg
add
aas
scas
mov
and
dec
mov
jne
and
or
sbb
rcr
or
xlat
push
add
outsb
loopne
shr
mov
mov
mov
shr
mov
or
xchg
test
mov
subl
add
incb
add
es
add
inc
pop
sub
sub
mov
call
rcl
sub
mov
lea
cmp
inc
and
jne
and
or
lret
aas
push
inc
lock
cli
decl
mov
popf
inc
sub
hlt
xor
pop
add
sbb
mov
mov
inc
xchg
mov
shr
test
mov
sub
add
psubsb
loop
lea
scas
jae
mov
clc
mov
movzbl
outsb
loope
xor
shl
inc
clc
add
es
or
movsl
mov
incb
seto
jge
fmull
clc
adc
or
scas
sub
xlat
jp
add
outsb
out
add
lret
test
dec
xlat
es
fdivs
mov
inc
mov
cmp
sub
hlt
aas
inc
pop
jp
add
aas
scas
mov
cs
scas
add
jle
add
push
rorb
clc
and
call
incb
sub
xchg
add
aas
scas
mov
mov
hlt
mov
lea
fcompl
push
mov
mov
add
or
inc
clc
mov
or
xor
rcl
call
seto
push
xor
add
adc
shr
lods
xor
add
mov
jge
lods
into
add
and
lea
and
mov
or
frstor
add
clc
xor
adc
fisubs
clc
mov
mov
mov
shr
mov
or
js
jne
mov
mov
sub
inc
aam
aas
scas
shr
lods
shll
imulb
mov
setge
and
es
hlt
mov
lock
adc
in
jp
mov
mov
call
cli
or
std
and
call
incb
sub
inc
mov
scas
mov
movsb
add
aas
xchg
adc
mov
incb
call
adc
cmp
mov
mov
mov
hlt
lea
scas
call
jae
and
clc
mov
or
jne
add
xor
aas
rcr
or
decb
jp
mov
and
mov
outsb
out
or
add
cmp
jae
mov
mov
call
adc
shr
lods
stc
mov
mov
and
add
xchg
adc
mov
xlat
scas
add
aas
outsb
out
add
aas
scas
add
mov
adc
aas
scas
jae
mov
clc
mov
movzbl
outsb
loope
xlat
jp
add
movsb
iret
rcr
incl
es
or
movsl
mov
incb
seto
jge
fcompl
mov
adc
or
scas
sub
xlat
add
add
outsb
out
add
xlat
es
and
mov
incb
sub
or
cmp
add
out
push
in
cli
call
push
dec
in
or
cmpl
setge
out
loope
sub
or
mov
add
aas
xchg
add
aas
scas
jae
mov
clc
mov
movzbl
outsb
loop
xor
shl
inc
cmp
aas
scas
incl
es
or
mov
or
nop
push
cmp
fsubl
mov
adc
or
scas
sub
incb
call
cmp
shl
sub
fdivrl
cmp
push
xchg
adc
mov
incb
sub
xchg
add
aas
scas
mov
dec
mov
jge
and
or
sbb
rcr
call
or
outsb
loopne
shr
mov
mov
and
rcl
imul
xchg
jge
dec
lahf
mov
xlat
push
add
aas
adc
or
scas
sub
incb
add
outsb
out
mov
add
mov
or
aas
scas
movl
push
add
aam
sub
and
rcl
sub
adc
call
mov
add
clc
ljmp
jp
or
aas
scas
mov
pushf
fisttpl
aas
scas
add
dec
mov
jne
and
or
sbb
rcr
call
or
outsb
loopne
shr
mov
mov
and
rcl
imul
xchg
jne
dec
mov
xlat
mov
add
adc
or
scas
sub
incb
add
es
cmp
jmp
push
fimull
stc
and
rcl
sub
mov
cltd
lea
add
jb
jne
mov
loopne
in
in
mov
in
dec
call
mov
sub
cmp
cmpl
mov
mov
add
les
jmp
push
lods
pop
mov
shl
inc
mov
mov
aas
push
add
add
pop
mov
mov
mov
or
icebp
outsb
loopne
shr
mov
mov
and
rcl
call
seto
jne
fcoml
or
scas
sub
incb
add
es
cmp
jmp
push
fimull
stc
and
call
incb
sub
es
mov
adc
shl
jne
sub
inc
mov
scas
add
mov
jl
mov
sar
mov
pusha
add
rcl
adc
fsubs
sub
and
adc
scas
add
je
jmp
add
fcompl
cmp
mov
movzbl
outsb
loop
xor
shl
push
inc
clc
mov
or
xlat
lods
cmp
jb
push
ljmp
hlt
and
adc
scas
shl
push
add
or
inc
call
mov
loopne
jb
cmp
jae
and
clc
mov
or
mov
rcr
incl
es
or
mov
out
or
add
cmp
jae
mov
mov
call
adc
shr
lods
repnz
and
leave
aam
sub
and
loopne
imul
testb
aas
es
mov
or
out
lret
jb
jne
js
jge
dec
xchg
mov
and
lock
cmp
aas
scas
sub
jl
dec
or
and
or
lock
fisttpl
or
add
scas
jne
pop
idiv
shlb
iret
inc
add
aas
scas
leave
ret
pushf
outsw
leave
shl
leave
pop
popf
cld
