jmp
mov
jmp
mov
inc
fcomip
imul
sahf
lret
or
stc
adc
sbb
push
push
out
xor
xchg
dec
movsb
shrl
sub
std
clc
je
fmuls
jne
xlat
loopne
int
jae
sub
sbb
filds
mov
lock
adc
jae
xchg
repz
mov
mov
mov
sbb
pop
loopne
push
or
pcmpgtb
fsubs
lods
sub
cmc
xor
pop
aaa
cwtl
jle
stc
test
pop
fs
push
les
daa
cld
test
sbb
mov
in
dec
pop
sub
frstor
pop
cmp
imul
ja
mov
sbb
aaa
shll
mov
adc
dec
fsubrl
adc
cmp
mov
jo
cmp
pushf
rsm
mov
sbb
lds
jbe
in
lahf
inc
ret
lss
and
faddl
xor
jmp
iret
mov
jmp
or
popa
in
jb
loope
fwait
sub
fmull
pop
fs
cmpl
popa
xor
stc
out
mov
or
push
or
and
in
add
pop
pop
fisubs
repz
mov
lock
cwtl
fs
out
loop
jno
push
sti
call
pop
jne
sub
lock
dec
sub
iret
sub
js
jne
pop
aad
sbb
rolb
add
adc
add
sti
mov
scas
adc
lret
push
inc
and
dec
fcoml
bound
sbb
mov
cld
loopne
fwait
dec
sbb
or
int3
repnz
nop
mov
pop
divl
push
dec
mov
das
test
scas
xchg
fidivl
jnp
push
push
push
xor
outsb
std
hlt
filds
xlat
mov
pop
inc
jge
push
pop
fcoml
pop
test
jae
hlt
xor
sar
arpl
out
negl
xor
mov
push
je
shl
jnp
xchg
mov
mov
cmp
lods
pop
stc
cli
mov
and
adc
shlb
sub
jno
fists
out
inc
int
filds
push
dec
out
sahf
outsb
cmp
mov
push
bswap
ret
decl
rclb
mov
fistps
lea
add
out
and
push
les
pop
fwait
cmp
pop
push
popa
pop
lds
add
or
shl
cmp
ljmp
incl
js
inc
adc
push
add
mulb
xlat
sbb
iret
jl
adc
addr16
xchg
mov
aaa
js
test
movsl
repnz
mov
lret
xchg
je
pop
xlat
fildll
adc
lcall
enter
lea
pop
pop
jb
add
and
shr
add
push
jnp
shl
pop
cmc
clc
nop
call
rol
jne
rol
nop
jne
push
or
pop
test
cld
cmc
add
pop
jmp
sahf
lahf
mov
cmpsl
xor
xor
test
push
mov
enter
daa
jp
cmp
aam
imul
dec
fildll
mov
jg
mov
mov
lret
mov
dec
loop
push
jge
or
pop
push
push
pop
pop
push
pop
jl
push
push
push
cltd
pop
pop
pop
stc
push
test
pop
lea
jge
xor
mov
add
push
movzbl
dec
inc
ja
neg
neg
and
push
push
push
and
pop
pop
pop
add
loop
pop
shr
js
push
push
add
pop
pop
nop
push
xor
push
call
or
inc
sub
xchg
aam
cmp
loope
lret
inc
jmp
or
in
rolb
inc
add
add
add
pop
push
and
pop
lea
push
jbe
push
test
pop
pop
jne
xchg
and
push
addl
jae
mov
sub
ja
push
shl
pop
push
jae
xor
pop
nop
add
cmp
cld
push
push
push
add
pop
pop
sar
std
cld
call
clc
push
mov
call
scas
aaa
les
ret
insl
add
lahf
inc
fnstsw
mov
pop
into
push
mov
add
pop
mov
mov
cld
test
push
shr
pop
ror
test
push
push
dec
pop
pop
push
mov
pop
cmc
push
addl
pop
jnp
add
stc
push
cmp
pop
nop
rol
std
cld
test
nop
push
xor
push
call
mov
jne
or
pop
mov
cltd
stos
subb
imul
xchg
fs
pop
imul
cmp
mov
jecxz
mov
xchg
lahf
jl
les
pop
push
fst
dec
ret
xor
add
push
push
jbe
jo
or
pop
push
rol
pop
ja
je
jo
cmp
clc
push
mov
sub
cmc
stc
call
push
mov
call
rep
or
or
or
ss
and
lcall
das
xchg
xor
or
pop
loop
pop
adc
adc
sbb
stos
push
out
mov
fwait
inc
add
pop
call
jp
jp
and
push
push
pop
call
inc
cld
cmc
ret
shl
in
iret
imul
icebp
out
pusha
add
es
or
sbb
fisttpl
aad
fldt
pop
pop
add
jmp
push
push
pop
call
out
or
mov
fidivl
sub
les
scas
ds
jo
loope
lods
lret
sbb
rorb
add
hlt
lret
jp
arpl
xorb
repz
mov
les
mov
push
push
call
pop
cmp
xor
in
push
std
lds
loopne
insb
in
loopne
clc
inc
stc
test
sub
or
push
iret
jb
int3
fcomip
nop
mov
cmp
fwait
mov
jge
rcl
ror
add
pop
mov
push
js
push
not
not
pop
pop
jge
je
and
push
test
pop
test
sub
js
push
rol
pop
add
rol
clc
inc
dec
mov
xchg
push
push
pop
call
out
out
adc
outsb
ds
jg
out
test
inc
mov
test
adc
pop
aas
daa
push
mov
push
rcrb
mov
push
pop
cltd
div
mov
rol
jmp
push
mov
push
insb
aas
inc
pop
cmp
lods
mov
sti
sub
jmp
xor
adcl
cmp
fdivr
rorl
lcall
daa
fxch
jl
push
mov
negl
out
fildll
xor
or
sub
in
add
xor
jp
test
test
push
rol
pop
jno
cmp
push
or
pop
push
push
pop
pop
push
test
pop
pushl
pop
push
movzbl
lea
cmp
loop
pop
push
mov
call
push
or
add
repz
sbb
push
xchg
mov
bound
sub
sbb
adc
frstor
push
add
add
je
test
xor
and
nop
push
push
pop
pop
jo
test
or
lea
add
jg
test
cmc
xor
add
jge
cmp
push
dec
pop
cmp
push
pop
stc
inc
dec
push
shr
pop
shl
or
push
mov
call
xchg
inc
insl
push
and
inc
sbb
ss
aaa
loopne
arpl
pusha
stos
mov
push
sbb
roll
ficoml
fists
imul
xchg
mov
or
shrl
mov
daa
mov
shll
xor
mov
outsl
or
mov
cmc
call
sahf
cmp
lea
add
push
push
pop
pop
push
push
pop
call
cmpsb
and
add
sub
stos
out
hlt
cs
xchg
dec
leave
insl
jns
test
mov
rol
push
push
pop
call
sbb
and
dec
sbb
inc
jp
xchg
insl
mov
adc
cmc
sub
es
in
push
stc
js
or
popa
mov
mov
mov
adc
loope
and
imul
iret
rcrb
enter
test
jo
std
scas
mov
add
pop
push
add
pop
push
push
add
pop
pop
push
mov
jmp
aaa
mov
test
dec
adc
pushf
mov
shrl
mov
pop
aad
cmp
pop
pushl
xor
pop
push
push
pop
jmp
cli
repz
jge
or
push
mov
dec
into
inc
insl
into
cmp
and
lahf
and
and
dec
ds
or
jnp
in
loop,pt
sbb
fnstcw
inc
mov
lahf
aad
sbb
lret
out
shl
or
in
filds
add
xchg
lret
sub
xchg
mov
mov
jg,pn
jle
jl
mov
mov
insl
lea
popa
adc
dec
es
push
mov
xchg
movsl
mov
pop
rol
clc
push
call
cmp
mov
pop
mov
cmp
in
in
shll
mov
xchg
fldcw
inc
sti
xchg
icebp
repz
icebp
dec
sub
push
jae
jle
dec
mov
xchg
push
pop
iret
repnz
jbe
arpl
pop
repz
je
mov
xchg
repz
lds
cmp
push
sub
sub
xchg
call
add
pop
push
pop
add
push
sub
pop
push
call
notl
out
and
dec
sbb
inc
xlat
test
cmpsb
mov
dec
dec
outsl
test
push
adc
pop
mov
push
fimull
flds
jne
push
push
pop
call
pop
jne
arpl
lret
add
nop
lds
jae
and
mov
lods
lods
jp
movsl
iret
mov
cmpsb
jecxz
jae
sti
or
lods
hlt
jmp
out
mov
dec
jmp
pop
xchg
into
pop
mov
inc
ret
xchg
and
dec
test
and
push
xchg
das
test
insb
and
xchg
lock
mov
pop
push
mov
call
or
es
aaa
les
push
lret
jbe
sahf
inc
popa
and
xorb
fists
mov
and
ret
loop
jecxz
shrl
adc
hlt
lds
pop
sub
adc
je
mov
pop
mov
cmc
mov
sbb
jle
loop
dec
adc
popa
push
lods
shlb
xchg
shl
sarb
push
mov
pop
or
and
add
lea
push
mov
jmp
mov
out
pop
sarb
sub
xor
pop
enter
stos
stc
or
mov
and
cmp
into
mov
mov
je
mov
pop
pop
mov
sbb
jae
sbb
fiadds
sub
cmc
stos
or
xchg
movsb
push
aas
adc
mov
push
push
push
mov
pop
pop
pop
je
jg
xor
rol
sub
cmc
shr
push
push
and
pop
pop
push
and
pop
push
jp
rol
pop
cld
cmc
push
pop
lea
push
push
pop
call
add
mov
outsl
pop
push
and
xchg
pop
or
pop
test
push
outsb
add
pop
inc
pop
mov
cmp
mov
mov
pop
push
xor
in
jbe
leave
sub
push
roll
dec
add
add
test
jmp
cmp
push
mov
fnstenv
jb
mov
push
cmp
xor
scas
xor
sahf
mov
and
add
add
push
xchg
test
inc
popf
pop
mov
pushf
test
popa
pop
daa
pop
addr16
pop
cmp
sub
test
and
or
inc
mov
push
push
cmp
pop
pop
cmp
push
push
pop
jmp
pop
int3
repz
pop
data16
rclb
notl
pop
inc
push
sbb
out
int3
stc
in
test
cmc
xchg
inc
and
iret
mov
sbb
mov
pop
xchg
add
mov
movsb
and
cwtl
pop
xchg
fdivr
test
add
icebp
js
mov
dec
mov
out
mov
aaa
jecxz
mov
into
cmova
orl
add
pop
push
test
pop
call
mov
push
sbb
loop,pn
mov
sbb
jg
lcall
mov
repz
or
jnp
lods
adc
push
fwait
xchg
xchg
jbe
jg
xor
mov
shlb
mov
sbb
popf
pop
call
scas
ja
ss
movsb
cmp
dec
js
shll
stc
icebp
add
mov
sub
test
mov
add
cmp
shlb
push
xchg
lea
sbb
jne
push
mov
jmp
sub
xchg
ret
sahf
pop
in
cmpsl
dec
out
js
and
xrelease
scas
pop
sbb
mov
xor
mov
int3
addl
xchg
clc
inc
dec
sub
push
lret
jnp
jo
pop
xchg
xchg
gs
jae
sub
push
mov
xorl
cltd
adc
push
leave
dec
fst
bound
call
in
aas
popf
data16
ds
shll
aas
sahf
enter
sub
inc
shlb
in
push
push
leave
movsl
mov
cmp
dec
sbb
hlt
or
nop
scas
xor
stos
or
add
and
in
sbb
xchg
shrb
xchg
aas
jbe
cmp
push
icebp
enter
fucomip
mov
addr16
bound
stc
cmp
mov
cmp
lret
add
imul
jecxz
mov
in
jl
pop
mov
sub
add
add
xor
add
dec
jo
add
add
add
add
dec
jo
add
add
add
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
add
dec
outsl
popa
fs
imul
