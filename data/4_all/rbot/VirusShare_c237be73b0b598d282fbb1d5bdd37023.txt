push
sbb
loope
loop
shr
ficomps
cmpsl
nop
push
sbb
cwtl
cmp
mov
xlat
aad
movsb
add
mov
movd
fistps
dec
imul
inc
ja
pusha
dec
out
iret
pusha
cwtl
sbb
aaa
cltd
or
xchg
xlat
outsb
repz
push
leave
call
or
fistpll
lods
xlat
xchg
movsb
fst
insl
mov
mov
xchg
sti
cmp
dec
pop
addl
cmp
jns
jbe
in
push
jns
mov
sbb
aad
xchg
aaa
dec
les
xchg
sub
sub
xchg
jg
fdivr
xor
sub
push
push
or
cmc
ljmp
push
ja
or
sub
aad
cmpsb
ljmp
mov
mov
dec
fiadds
mov
inc
shlb
and
jge
ficoms
mov
lret
pushf
and
insl
pop
mov
add
dec
dec
jns
and
rcl
and
mov
dec
outsb
popf
push
push
xchg
adc
or
fiaddl
add
stc
loop
aaa
jge
int
jmp
sti
jecxz
dec
jp
imul
popf
cmpsl
cmp
adc
xor
pushf
jg
inc
push
gs
and
ret
adc
je
outsl
cmp
xchg
mov
lds
movsl
ret
bound
in
push
daa
mov
testl
cmpsb
std
jbe
pop
in
daa
lahf
add
pop
cs
or
mov
lock
pop
les
xchg
ja
xchg
mov
jecxz
ljmp
filds
in
cli
add
out
gs
paddd
pop
or
cld
fcompl
cwtl
sbb
es
xor
pushf
sub
aad
jb
out
nop
cmp
cmp
jne
loope
out
inc
jno
push
mov
cli
xor
xchg
mov
js
jg
les
push
loop
loop
stos
sub
shrb
int3
loop
xorl
out
es
and
lods
outsb
sbb
sahf
inc
fcomps
cltd
fldl
in
lods
jmp
mov
mov
fmulp
pushf
cmp
stos
cltd
popa
insl
notb
out
dec
add
mov
dec
sti
pop
sbb
out
lcall
mov
lret
mov
and
into
and
lock
out
inc
int
out
nop
in
scas
sbb
cmp
cmp
adc
xchg
cmp
shr
sbb
sbb
aam
jecxz
fisubrl
mov
mov
add
adc
mov
add
into
int3
push
add
mov
shl
out
sbb
dec
scas
xchg
in
and
sahf
mov
shlb
xchg
out
fstps
jmp
push
mov
dec
sbb
cmp
call
shll
cld
inc
and
sub
loopne
sbb
inc
cld
pop
pop
fmuls
js
filds
cmp
and
adc
jecxz
jae
mov
lret
aam
shlb
out
nop
bound
mov
xchg
mov
add
adc
arpl
test
outsl
jbe
jecxz
or
pop
xlat
shlb
cmp
stc
imul
jae
sarl
jnp
outsb
adc
xor
ffree
mov
loop
jo,pn
scas
psubsb
inc
nop
and
adc
dec
jae
fs
test
leave
mov
dec
leave
xchg
idivb
arpl
xchg
xchg
hlt
pop
icebp
fidivrs
in
jp
adc
xor
jp
mov
mov
scas
cmc
push
push
pop
inc
cmp
add
imul
mov
add
divb
out
xor
add
sub
movsb
and
push
mov
pop
mov
mov
adc
stos
mov
fnstsw
xor
out
enter
inc
pop
shll
negl
shrl
adc
fstps
sub
or
xchg
xchg
or
mov
dec
popf
xchg
dec
add
jmp
xor
loop
push
sub
rcr
in
test
dec
push
outsb
or
cmp
stos
jnp
dec
mov
or
repnz
in
idivb
in
loope
and
sbb
nop
dec
sub
fimull
add
aas
fdiv
sub
cmc
loopne
xchg
jno
inc
jge
push
jmp
mov
arpl
imul
sahf
faddl
aaa
add
mov
jno
and
mov
cmp
xor
mulb
sub
jb
pop
xchg
push
cwtl
add
pop
adc
push
fimuls
xlat
int3
outsb
pop
sub
lock
je
ja
aam
sahf
cmp
ljmp
sbb
movsb
test
sbbl
xchg
imul
popa
adc
jge
test
mov
ljmp
fisubl
je
push
lea
jne
adc
push
mov
lea
in
or
insb
xchg
daa
jle
pushf
fiadds
imul
sub
lods
daa
inc
imul
cs
push
and
es
sub
or
ja
xor
adc
jecxz
xor
stos
shlb
adc
nop
xor
int
out
outsb
outsb
inc
daa
push
pop
out
xchg
inc
mov
mov
jp
adc
mov
mov
daa
push
aad
pop
pop
cmpl
pop
cmp
arpl
sahf
inc
xchg
add
inc
scas
pop
push
cmp
dec
jnp
cltd
or
mov
in
into
mov
ljmp
bound
xor
mov
mov
adc
and
test
xchg
clc
jns
cmovae
hlt
and
lret
pusha
push
sub
mov
add
cs
xchg
pop
mov
stos
hlt
or
xchg
pop
adc
push
std
cmc
rol
das
cmp
lods
or
aas
jle
and
pop
and
cmp
pop
cmp
in
imul
aam
mov
insl
fsubrp
popa
loopne
dec
sub
mov
cmpsl
iret
cmp
shlb
cmp
out
shll
ljmp
test
or
mov
inc
popa
icebp
fstl
out
and
xchg
shrb
adc
add
sub
mov
add
fisubl
sahf
push
lock
dec
push
rdmsr
and
cmp
adc
lds
mov
data16
fwait
push
adc
daa
mov
inc
xor
out
mov
cltd
cmp
loopne
jecxz
std
jns
lea
outsl
xor
icebp
outsl
mov
sub
add
lret
scas
dec
cmp
push
and
aam
add
into
fcmovnbe
gs
xor
movsl
sub
aad
pop
cmp
mov
dec
push
notl
add
sbb
mov
mov
fbstp
mov
pop
dec
pop
sub
mov
stos
mov
lea
sub
push
cwtl
adc
pop
cmpsb
pop
fisubrs
mov
mov
mov
enter
jg
loopne
sub
js
scas
ss
sbb
cmc
sub
inc
push
jmp
shr
mov
pop
mov
out
lret
pop
mov
sbb
mov
adc
int3
cmpsb
cli
push
inc
push
mov
lret
addl
xchg
mov
test
xchg
inc
or
sub
mov
or
outsl
xchg
mov
push
sti
or
or
int3
adc
inc
aas
lds
in
add
cmp
loopne
mov
pop
sbb
insb
loope
in
pop
cs
pop
pop
lret
push
and
int3
push
sub
push
sub
mov
or
test
fmull
or
mov
cld
adcb
cmpb
inc
mov
or
jg
xchg
pusha
mov
and
xor
repnz
dec
or
and
lret
or
les
inc
mov
mov
leave
xchg
imul
imul
gs
repnz
push
sbb
aas
mov
mov
jo
mov
out
jmp
ljmp
xchg
rorb
ljmp
shrl
jne
fisttpll
imul
in
and
testb
sub
mul
mov
xlat
xchg
ret
adcb
mov
popf
in
cmc
and
and
ja
sbb
fwait
pop
ret
pop
in
loope
pop
cwtl
mov
popf
pop
dec
jo
cltd
jmp
jae
fdiv
aaa
cmp
pop
or
sarb
xor
sub
sbb
hlt
mov
adc
out
test
scas
jg
lcall
jecxz
iret
mov
int
lahf
les
mov
dec
ret
add
pop
test
iret
shlb
test
xchg
xchg
and
in
xor
sub
xchg
inc
out
xor
cwtl
pop
lahf
mov
je
mov
call
test
dec
cmp
imul
xchg
mov
fldt
xchg
mov
mov
xchg
bsr
icebp
out
cmp
and
or
int3
inc
cli
xchg
shll
add
cmp
in
mov
call
and
xchg
in
mov
or
scas
push
jg
icebp
es
loopne
xchg
add
jecxz
jne
loopne
dec
cs
jo
das
arpl
or
push
dec
stos
xlat
aas
int
decl
add
jb
and
gs
adc
movsl
dec
les
cld
push
fisttpll
mov
pop
lret
lods
test
iret
cmp
xchg
in
and
movsb
jb
sbbb
out
push
xchg
mov
outsl
pop
cmc
sub
test
cwtl
mov
loopne
jne
in
jo
loop
loope
fcoms
cli
mov
lods
loope
lods
sub
test
into
stos
mov
jmp
push
and
lahf
xchg
subl
mov
decl
int3
lret
dec
mov
pop
andb
sarb
mov
xchg
mov
sbb
out
jb
lret
cmp
xchg
cmpsl
shrl
sub
xor
and
sub
movsb
fcompl
test
loopne
les
aaa
addr16
jne
daa
xor
or
pop
jp
push
das
add
xor
or
mov
pop
jne
cli
jg
std
test
inc
ljmp
fucomi
and
xorl
std
in
cmp
cltd
mov
xor
int3
push
xor
and
mov
jge
xchg
movsl
mov
out
mov
dec
mov
adc
vsqrtsd
jno
inc
int3
in
cmp
out
js
mov
jbe
mov
pop
decl
inc
fcomps
xchg
cmpsb
pop
xchg
mov
cmc
lds
dec
dec
push
xchg
sahf
filds
xor
cld
add
mov
mov
jl
adc
mov
mov
rcrl
out
movsl
mov
or
test
dec
dec
sub
sub
push
imul
ret
lahf
jmp
jns
sbb
sub
or
jnp
pop
xor
popf
insb
shlb
add
fcompp
xchg
aam
xor
mov
aad
enter
pop
in
insl
iret
push
std
adc
sbb
pop
jno
dec
rcrb
dec
mov
xchg
cs
jb
addr16
dec
add
cmp
jnp
mov
icebp
xor
dec
inc
cmp
cmc
fs
sub
pop
push
jl
jmp
jne
and
xchg
addl
ljmp
jp
push
lods
mov
loopne
inc
sub
jp
xor
mov
in
stos
and
iret
dec
loop
sub
cmpsb
daa
push
xchg
jno
push
decl
outsb
push
cli
sub
iret
pop
inc
mov
fs
dec
int3
push
jo
inc
insl
or
rorl
mov
mov
and
add
test
xchg
sub
mov
cs
js
je
jl
mov
popf
mov
and
xor
mov
mov
rcr
movsl
ljmp
jae
jo
call
shlb
cmp
cltd
or
push
ret
cmp
test
lods
ljmp
jge
push
fldcw
popf
xor
or
pop
mov
retw
mov
push
add
xlat
adc
lock
testl
cwtl
cmp
out
dec
orl
xor
imul
adc
into
arpl
cmp
sbb
jne
in
dec
or
or
shll
repz
mov
push
les
lret
adc
push
mov
mov
es
fnstcw
mov
mov
push
sarl
test
push
mov
sahf
xor
jmp
inc
sbb
lods
psrad
inc
push
sbb
std
cmp
dec
aad
sbb
sub
repnz
rcl
shll
xchg
je
bound
nop
inc
mov
push
push
sbb
fisttps
dec
test
out
int3
nop
aas
loope
leave
or
lret
loope
das
pop
test
lahf
arpl
sub
outsl
das
pushf
cs
jns
into
mov
jb
sti
sbb
pop
pop
or
cltd
xor
cmp
cmp
mov
fstl
ror
sub
das
mov
fistps
fisubrl
pop
in
push
imul
pop
test
push
adc
test
mov
insl
iret
ret
rcrl
rcll
ret
shrb
jb
dec
mov
pushf
ja
xchg
inc
pop
stc
lods
sub
pop
push
mov
sub
pop
xorl
daa
js
stc
push
inc
ret
out
add
jb
shrl
outsb
jge
adc
push
mov
fisttpll
sarb
and
add
into
xor
xchg
ja
mov
mov
cmp
mull
in
iret
outsl
fcoml
call
inc
jg
mov
dec
in
xchg
jae
out
pop
imul
mov
xchg
nop
push
fisubrs
fisubrs
sbb
mov
push
adc
das
mov
push
xor
jae,pn
xchg
aad
cs
stos
out
add
fidivrl
gs
pop
clc
fcmovb
js
cmp
jae
or
push
cmp
adc
data16
jle
cmp
shll
xor
and
mov
jnp
fs
mov
in
push
pop
lahf
sub
inc
pop
cmp
jae
cmp
mov
stc
xchg
movsl
shlb
test
cmpsl
andl
into
test
pop
fistpll
js
pop
gs
dec
mov
dec
scas
out
inc
iret
in
push
pop
cld
leave
sub
cmp
mov
es
or
lea
mov
fistps
jo
test
xor
hlt
push
mov
test
mov
es
jo
in
push
fwait
xchg
in
dec
mov
push
sbb
mov
neg
shll
cmp
cltd
jae
arpl
xchg
jge
rorb
sub
xor
add
shrb
mov
or
add
cmpsl
dec
pop
add
pushf
out
in
mov
or
lret
loop
sbb
rorb
das
in
mov
push
pushf
out
adc
lret
ds
repz
pop
mov
pop
pop
sub
sub
out
jae
add
xchg
add
mov
adc
inc
cmp
nop
fmuls
rorb
hlt
inc
movsl
lcall
lret
cmp
mov
rorl
hlt
pop
rcll
mov
cmpsl
out
mov
sti
inc
inc
push
out
push
pop
adc
shr
aaa
int
xchg
ds
je
popa
lock
stos
pop
ljmp
or
js
push
imul
adcl
imulb
mov
nop
fcomps
add
mov
addb
dec
cmp
cmpb
pop
cmp
insl
scas
mov
adc
lcall
sub
jno
in
aam
add
jge
lret
push
sbb
in
rcrb
lds
xchg
psubusw
subb
data16
divl
stos
scas
adc
xchg
push
in
jns
inc
mov
sub
mov
cltd
mov
cmp
in
mov
mov
push
mov
inc
rol
in
movsb
jb
pop
mov
lock
fadd
sahf
or
test
andl
pop
adc
pusha
jge
sub
mov
lret
push
test
jbe
fisubrs
insb
aad
mov
xchg
inc
adc
jns
lret
das
insb
jge
inc
ret
fimull
ja
and
xlat
dec
push
test
fs
jbe
xchg
ds
shll
mov
push
psubb
cwtl
jmp
lret
mov
jno
adc
push
xor
xor
shll
mov
pop
jnp
lock
dec
jle
out
repnz
lods
movsb
dec
push
lock
pop
mov
pop
pop
flds
pusha
or
fs
ja
aam
pop
mov
out
cmp
iret
imul
cmp
testb
cmc
add
js
into
pop
pop
mov
std
or
int3
and
fnsave
lahf
jne
mov
lock
mov
shl
inc
and
loop
or
inc
vmulsd
sbb
push
insl
adc
xor
es
cmpsb
in
dec
mov
cmp
push
jmp
lea
aad
push
in
addl
or
mov
loope
xchg
xchg
add
icebp
test
sbb
adc
aam
popa
loop
mov
leave
pop
fidivs
cmc
movsb
mov
jmp
test
xchg
push
icebp
jne
sub
jne
cmpsb
lock
dec
pop
lcall
fcompl
fs
into
addr16
and
xchg
popa
push
sbb
jg
dec
cmpsb
pop
mov
lods
jbe
int3
and
add
movsb
gs
push
sahf
icebp
inc
xor
xchg
out
shll
inc
sub
push
push
xchg
test
mov
fwait
outsb
pushf
out
lods
push
push
jl
stos
inc
insb
jne
sar
or
adc
xchg
mov
mov
lcall
in
inc
int3
xchg
test
clc
push
push
jmp
movl
in
popa
xchg
xchg
int3
or
lea
jno
cmpsl
mov
mov
cmp
scas
dec
dec
out
push
or
lods
in
jae
shl
add
dec
scas
sub
call
push
lock
mov
sbb
jmp
jno
shll
and
xlat
mov
or
pop
mov
in
stc
stc
xor
cmp
cli
pop
loopne
adc
push
es
adc
add
adcl
mov
add
xchg
inc
cmp
std
push
shrb
aad
mov
and
pop
mov
xor
orl
js
lahf
dec
dec
cwtl
dec
lds
pop
pop
and
push
aad
mov
outsl
out
adc
stc
cmc
fcmovu
in
ja
movsb
sub
cmp
lods
test
insb
pop
ret
mov
maxps
mov
leave
push
aam
rcrl
imul
ja
data16
das
movl
cmp
sbb
loop
repz
mov
shll
dec
cld
pop
xchg
int3
movsl
push
jo
add
std
in
cwtl
cmpsb
sbb
or
jo
icebp
out
push
fcmovne
imul
mov
mov
xor
jg
jecxz
pop
fstps
outsb
or
aas
das
push
mov
mov
movsl
xchg
enter
test
mov
sub
scas
leave
jp
andl
sub
mov
push
mov
les
sub
in
push
inc
rol
clc
movsb
jns
mov
stc
fidivl
and
sahf
cmp
cwtl
arpl
sub
out
dec
test
dec
fcomps
pop
call
ret
test
jmp
dec
and
fidivl
xchg
out
sbbb
jle
ss
sbb
xor
sbb
loopne
orl
daa
popa
inc
scas
loope
jmp
or
or
push
and
adc
jmp
test
mov
adc
subb
stos
dec
ja
add
xor
mov
pop
inc
ljmp
outsb
push
xor
addr16
push
and
in
mov
and
xor
hlt
fldenv
cmp
int
add
jle
mov
cmp
rclb
pmuludq
int
jl
lcall
outsb
out
das
jns
out
adc
inc
add
sbbl
mov
roll
int3
push
push
push
sub
lds
and
insl
and
mov
andl
ds
inc
les
cs
fdivr
rcrl
cwtl
push
aaa
adc
push
icebp
aad
ret
je
lcall
ss
stos
aas
cwtl
test
sbb
xor
jmp
jecxz
pop
int3
gs
fcomps
nop
and
repz
push
pushf
cld
in
inc
lea
dec
xor
cmp
and
popa
aas
mov
dec
mov
das
cwtl
push
or
xlat
inc
iret
insb
push
or
mov
ljmp
jbe
cltd
pop
dec
mov
mov
cs
xchg
adc
mov
or
and
repz
push
jl
adc
push
mov
or
cmpsl
mov
daa
xor
test
nop
or
sahf
push
dec
mov
lods
xchg
lret
test
sti
mov
cmpsb
lds
fistpll
pop
rcrb
add
sarl
inc
and
lock
mov
addr16
sbb
adc
push
aas
lock
push
xchg
ret
mov
and
add
mov
cld
cltd
push
lds
pop
aad
cmpsl
xchg
mov
jne
mov
push
add
jae
or
mov
sahf
jne
jns
subb
add
cmp
cwtl
psubusw
loopne
fcmovnu
xor
test
decb
xlat
fidivrs
jmp
js
mov
mov
mov
mov
jae
rclb
scas
pop
or
loope
add
lcall
in
and
stos
gs
dec
pusha
jp
cmp
cmp
mov
lock
in
mov
adc
mov
insl
cmc
test
lret
repz
or
or
arpl
aaa
repnz
cmp
je
fnstenv
cmp
je
mov
movsb
xor
mov
cmp
sub
shlb
mov
mov
pop
mov
pop
int3
cmp
pop
sbb
and
pshufw
ja
movsb
das
pop
mov
or
sbb
xor
lea
jg
inc
mov
enter
sbb
lds
fdivs
pop
test
lds
sub
pop
dec
push
push
sbb
cmp
mov
lds
inc
mov
push
movsb
mov
imul
push
jg
jns
repnz
or
inc
sbb
outsb
mov
adcb
pop
cmpl
mull
ret
push
xchg
pop
fimuls
jl
ja
dec
adc
lods
into
pop
mov
andb
clc
insb
nop
cmp
and
inc
stc
sbb
rcrl
xchg
push
jae
inc
xor
pop
stos
and
loop
adc
xchg
stc
push
inc
icebp
icebp
sbb
or
rcll
sub
mov
xchg
and
dec
dec
jnp
mov
sbb
loope
pop
cmpsb
mov
cmp
or
jmp
push
push
stos
jo
pop
scas
jnp
aad
imul
ret
orps
mov
pop
mov
movsb
xor
push
jg
jnp
xchg
imulb
test
add
or
dec
jg
adc
cmovge
addr16
and
xchg
and
and
sub
mov
pop
cmpsl
gs
add
mov
ret
imulb
in
mov
add
movsl
aas
lret
mov
inc
jae
push
mov
lds
enter
rep
sub
add
mov
add
push
call
xor
add
mov
test
cmp
loope
or
xorl
cwtl
push
xchg
sub
cmp
push
ja
push
rcll
add
insb
mov
push
int3
pop
ss
mov
dec
and
mov
add
adc
les
jb
pop
mov
or
add
sbb
loope
sbb
jecxz
xchg
inc
sbb
call
push
out
notb
fimuls
pusha
shlb
inc
adc
xchg
std
xchg
mov
jg
mov
jb
filds
push
mov
outsl
and
pop
aas
jp
and
rclb
ficoml
or
push
push
mov
xchg
inc
jmp
mov
jno
test
mov
sub
sbb
inc
push
cmp
lock
js
xchg
clc
repz
repnz
fsubrp
xorb
jl
mov
divb
pop
sti
shlb
lods
mov
lods
mov
cmp
push
or
rcrb
inc
repz
push
aad
lret
sub
push
leave
repnz
pop
push
sub
rcll
sarb
xor
enter
xor
sub
or
xchg
pop
xchg
jl
sub
repz
leave
lret
mov
aad
push
cmp
sbb
lods
xchg
inc
mov
jmp
ja
xchg
es
cmp
add
sub
jge
imul
add
inc
lods
sbb
add
fldt
mov
rcrb
out
lcall
fdiv
call
push
mov
lea
add
popf
es
mov
dec
mov
push
pop
loopne
xor
inc
js
xor
rorl
movsb
sar
cld
hlt
mov
pusha
into
and
xchg
je
xchg
cmp
push
mov
int3
push
inc
ja
sbbb
pop
out
sarb
add
loope
lock
adc
aas
outsl
adc
imulb
pop
push
stos
cmp
cmp
cmp
push
iret
inc
inc
mov
push
mov
mov
cmp
std
xchg
jbe
cmp
ret
mov
insl
push
mov
icebp
and
mov
sub
stos
xlat
pop
movsl
cltd
testl
mov
gs
and
pop
es
xor
rclb
in
clc
imul
sub
add
popf
dec
cmp
les
add
bound
mov
push
mov
cwtl
mov
push
das
push
add
push
shrb
ljmp
sub
and
mov
adc
fstpl
jp
mov
xor
xor
js
es
ss
xchg
out
cltd
pop
xchg
sub
and
pop
adc
pop
lahf
ja
xchg
mov
pusha
sub
add
push
push
in
aaa
in
and
iret
inc
fistps
add
pop
out
iret
cmpsl
lds
test
xchg
scas
mov
jne
repnz
sbb
mov
stc
call
pop
js
jb
inc
cmpsb
sub
cmp
out
int
in
push
lea
stos
sub
mov
mov
faddp
std
sbb
sbb
jns
mov
lret
sub
xchg
xchg
jge
sar
push
daa
cmp
push
loopne
xchg
adc
jns
lds
jae
pushf
jmp
mov
cmc
mov
cmp
cmp
pop
leave
xchg
xor
shlb
insb
push
mov
cmp
imul
push
mov
mov
fcoms
mull
shr
subl
insl
or
mov
mov
mov
cmpsl
mov
dec
cwtl
dec
and
dec
mov
and
add
ja
sahf
cli
les
inc
push
xchg
jp
jbe
movsb
jg
aas
cmpl
push
sub
pop
repz
push
sub
into
mov
dec
dec
aam
std
sbb
jge
stos
jp
leave
iret
push
movsb
arpl
sub
sub
cmp
jnp
xchg
ss
out
inc
dec
int
gs
les
or
push
flds
push
jmp
scas
lds
jl
push
cmp
mov
pop
mov
rclb
daa
inc
in
cmpsl
xor
leave
stc
push
push
hlt
sbb
xor
push
movsl
xchg
dec
push
ss
fimull
push
and
sub
mov
xor
cmp
push
mov
push
dec
cmp
xlat
aam
and
mov
iret
shrb
in
jge
sbb
stc
test
pop
jecxz
int3
jl
inc
jmp
stos
out
jne
xlat
lea
out
mov
mov
or
loope
or
ud0
pop
jo
gs
iret
iret
pop
xchg
cltd
adc
xor
repz
push
lock
push
scas
xlat
xor
cmp
inc
dec
das
pop
loopne
mov
nop
xor
xlat
pushf
sti
movsb
stc
sub
cmp
movsl
inc
xlat
or
into
es
or
jnp
push
data16
nop
pop
adc
xchg
push
pop
sti
dec
les
in
mov
jns
and
fiadds
arpl
xor
cmp
jo
pop
stos
push
rolb
out
xor
cmp
ss
lret
pop
add
jp
jl
dec
jns
sbb
pusha
xchg
jl
inc
push
addb
mov
lods
jg
jmp
jb
lds
lret
data16
mov
or
add
stos
add
pop
out
out
insb
mov
sbb
in
sbb
and
incb
cli
xchg
ret
addr16
dec
and
pop
mov
push
or
arpl
jb
arpl
jne
cmpsb
cmp
fwait
cld
adc
xlat
sub
xor
add
jnp
shlb
inc
fildl
jnp
pusha
mov
loopne
xor
int3
aas
xor
mov
cmp
and
leave
stos
mov
push
lods
sar
mov
pop
lods
fildl
cmp
and
clc
mov
sarw
xorl
jl
sahf
push
mov
fnstcw
or
stos
fs
add
loopne
sti
xchg
hlt
mov
mov
jge
in
add
add
and
inc
adc
pop
cs
jne
mov
inc
repz
dec
push
or
push
lahf
cmp
mov
movsl
xor
les
push
pop
push
insb
mov
daa
scas
movsl
dec
mov
add
in
dec
adc
xor
or
xchg
test
add
imul
dec
mov
in
rolb
cmpl
or
mov
dec
aas
xchg
loope
nop
aas
cld
and
xchg
xchg
xor
inc
inc
dec
jne
les
loop
sbb
pop
ja
cmp
mov
and
sub
mov
jno
scas
push
push
cmp
dec
jmp
adc
sti
stc
out
cld
jnp
sarl
push
xchg
add
mov
xor
in
sbb
lret
xchg
xchg
xlat
mov
pop
fcomi
faddp
sbb
or
sahf
jns
pop
xor
lods
xlat
inc
jl
test
mov
arpl
out
jl
stos
xchg
out
enter
insl
mov
or
sbb
lods
push
roll
cli
sbb
sbb
xchg
sbb
cmp
insl
sub
in
insb
div
mov
fucomip
test
sub
lea
pop
shll
sub
and
pop
mov
fnstcw
daa
call
mov
mov
xchg
cld
aas
jbe
xor
xor
out
dec
add
jle
adc
sbb
dec
jo
mov
pop
sub
inc
mov
aam
int3
sub
cmp
in
pop
pushf
xlat
cs
or
insb
stos
adc
mov
and
ljmp
xor
cmp
stos
sub
mov
nop
mov
push
std
add
repz
xor
mov
pop
or
scas
aam
push
sbb
cs
lods
cwtl
sbb
sarl
add
xchg
xchg
ljmp
and
shl
cmp
push
sbb
loopne
lahf
fsubrs
jle
cli
and
inc
adc
rol
stos
sahf
movaps
imul
and
adc
jmp
push
jle
cmp
pushf
jbe
jle
or
xor
adc
mov
ljmp
or
aas
jg
mov
push
mov
dec
adc
mov
push
scas
or
cmp
loopne
popa
xchg
punpckhbw
out
hlt
jl
pop
jns
add
push
enter
jbe
ljmp
ss
or
or
jb
stos
aad
cmpsl
dec
sbb
scas
mov
cwtl
fadds
add
sub
leave
sub
test
stos
mov
mov
cs
addr16
pop
xor
or
std
in
add
cmp
cs
cli
sub
sub
push
sarb
loope
andl
jo
lods
cmp
cli
dec
and
lea
add
pop
and
push
adc
ljmp
inc
lea
mov
loope
or
sub
mov
dec
mov
and
clc
cli
cmc
pop
pushf
sbb
cmp
mov
push
cld
int3
loop
adc
jecxz
mov
fucomi
mov
cs
push
push
xor
sub
xchg
pop
ror
jg
xlat
adc
pop
push
dec
mov
push
lahf
push
mov
xchg
adc
rorb
out
mov
bound
dec
pusha
mov
adcl
push
in
pop
xchg
in
vaddss
les
jmp
xchg
xor
outsl
pop
fbstp
jns
test
sbb
sub
xor
out
cmp
idiv
cltd
cltd
adc
or
sbb
or
sarl
xchg
repnz
sti
mov
fucomip
adc
pop
mov
adc
pop
sub
popa
xor
mov
test
mov
addr16
imul
arpl
mov
call
push
dec
aaa
out
leave
fs
call
xchg
inc
js
sub
mov
xor
lea
dec
or
divl
aaa
or
jne
inc
lret
add
adc
push
int
fwait
mov
and
and
data16
out
into
jno
stos
pop
pop
inc
add
xlat
jle
push
xlat
es
subb
arpl
in
sbb
fldenv
in
jge
flds
dec
xor
movsb
sahf
rorl
push
leave
cmp
in
cs
lock
ret
aas
or
mov
hlt
jo
popa
aad
sub
push
aas
sti
jl
out
jno
addr16
imul
sub
test
xor
ja
or
dec
jg
ds
adc
cmpsb
inc
inc
adc
std
rep
pop
xor
cld
mov
jnp
xor
mov
call
in
orl
out
imul
inc
dec
mov
mov
mov
xor
mov
rcr
out
cltd
mov
inc
dec
test
arpl
fcomps
movsb
xlat
cmp
pop
icebp
or
and
and
or
or
dec
xchg
push
and
push
or
jb
cmp
fwait
xchg
and
sahf
push
jge
adc
mov
xorb
mov
stos
jg
leave
jbe
inc
mov
cwtl
xlat
les
and
cwtl
push
pop
das
pop
pop
pop
or
pop
push
push
cmp
in
call
mov
scas
or
add
mov
sbb
pop
int
lahf
imulb
ret
pop
popf
sbb
out
lea
jmp
add
repnz
or
imul
push
xchg
aas
xchg
push
hlt
adc
xchg
mov
add
jecxz
arpl
mov
add
mov
dec
movsb
test
cli
rorb
sub
andl
mov
pusha
xorb
call
pop
cmp
insl
sub
pcmpgtd
pop
out
int
sub
orb
push
mov
jmp
bound
mov
and
xchg
loope
add
inc
or
xchg
out
shll
jb
xor
int3
sbb
add
sbb
je
inc
add
xchg
push
div
pop
and
rorb
lret
shlb
fwait
das
repnz
mov
push
stc
icebp
rolb
mov
dec
xor
test
xchg
jb
or
mov
xor
pop
xchg
pop
mov
int
mov
nop
xchg
test
scas
cmp
xlat
pop
xchg
inc
enter
clc
cmpsl
sub
push
stc
cmp
cmpsl
adc
out
lds
imul
lret
jnp
mov
jmp
jne
andb
push
jp
lret
mov
xchg
test
mov
or
fst
adc
fidivrl
fsubrl
pushf
adc
lods
dec
pop
jle
xchg
sub
pop
add
addl
shlb
and
divl
dec
or
inc
push
cwtl
xchg
insl
adc
in
ret
dec
stos
cmp
das
and
mov
test
jne
hlt
lock
and
lret
cli
or
push
movsl
call
dec
out
sbb
imulb
lds
stc
addl
pop
js
or
dec
aad
lock
push
add
je
cmc
mov
mov
dec
jne
data16
sub
fwait
ds
ficoms
pop
icebp
addr16
ss
pushf
push
test
cld
push
sbbb
mov
mov
icebp
xchg
pushf
adc
fisubrs
xlat
inc
or
lret
int3
sbbl
xlat
push
adc
jg
or
mov
pop
cmp
mov
pop
and
rol
out
dec
mov
xor
ljmp
xlat
mov
mov
scas
clc
sub
test
sub
sub
dec
push
imul
push
add
aam
sbb
and
stos
out
stos
jb
negb
sub
push
icebp
test
cmp
and
movl
or
jae
push
das
inc
test
xchg
fiadds
popa
mov
mov
or
add
xor
outsl
dec
jo
cmp
adc
cmpsl
xchg
xchg
inc
mov
mov
or
cs
cmp
adc
push
hlt
fs
cltd
subl
lret
roll
iret
mov
nop
mov
daa
test
mov
xor
xchg
js
xor
ss
sub
add
push
adc
je
or
es
cmc
mov
pop
jmp
cld
mov
push
ficompl
push
das
and
cwtl
adc
stos
sub
xor
ficoms
iret
imulb
inc
lods
sub
cwtl
pop
jo
or
pop
mov
inc
adc
adc
cmpsb
xor
cltd
cwtl
cmpsl
sub
in
mov
test
mov
jl
sbbl
sub
cwtl
inc
xor
cmpsl
and
or
test
add
enter
mov
and
in
lcall
dec
dec
push
cmp
ror
add
outsl
pushf
sti
lahf
cmp
jnp
idivl
arpl
xorb
rorb
jl
notl
into
mov
jg
stc
push
popf
fsubr
dec
pop
xor
pop
sub
dec
popf
fdivs
les
push
dec
mov
sbbb
ds
adc
and
fistps
sub
mov
aam
out
addl
sti
or
mov
mov
jns
addl
pop
test
push
cltd
mov
xchg
movsb
hlt
or
push
inc
fmuls
sbb
outsl
das
and
ret
lods
pop
cli
xor
pop
adc
add
mov
nop
bound
jne
xor
push
mov
fucomi
jecxz
test
cmp
je
adc
fcmovbe
cmp
cmp
das
sub
int
imul
in
mov
pop
dec
xchg
imul
loopne
aaa
out
mov
jecxz
inc
lock
xchg
lahf
jge,pt
int
jecxz
in
jae
test
or
addb
or
rep
cmpsl
stc
push
and
mov
nop
jne
jns
or
sbb
push
ret
popf
mov
inc
sub
movsb
and
pop
dec
xlat
jle
fildl
std
sub
gs
mov
sbb
fbstp
jnp
sub
or
int
mov
mov
push
or
sbb
or
dec
xor
mov
cltd
aaa
pop
sub
lods
out
pop
sub
mov
inc
mov
cmp
add
push
ds
add
pop
in
pop
fnstenv
xchg
jle
xchg
sub
jbe
jb
sbb
aas
cmp
mov
aas
cmpsl
pop
push
push
pop
pop
addr16
lds
mov
jmp
xor
mov
inc
lock
out
xor
push
push
ds
push
imul
in
or
adc
adc
sti
pop
sar
popf
xchg
iret
cltd
mov
adc
add
mov
xchg
sub
pop
or
in
leave
lahf
pop
in
mov
test
and
mov
lods
jo
movsb
lods
scas
mov
sbb
aad
or
pop
out
repnz
fstl
lea
int
mov
add
js
xchg
pop
pop
gs
jbe
mov
sub
xchg
movsl
sbb
and
inc
popa
bound
jae
adc
jno
nop
ja
mov
neg
dec
mov
outsl
jg
inc
shl
sahf
mov
stos
sub
lods
xchg
pop
ljmpw
aam
push
jb
fists
xchg
in
dec
arpl
jmp
ljmp
xchg
testl
sub
fs
fs
adc
inc
pop
aas
xchg
adc
jmp
mov
mov
lret
lock
shlb
mov
cmp
inc
lret
and
jae
insb
push
jbe
adc
dec
outsb
cmpl
adc
gs
es
cltd
sti
sub
aaa
daa
xchg
cmc
jl
test
jb
mov
ret
xchg
adc
lcall
jmp
shrl
add
mov
dec
push
xchg
push
dec
lahf
ljmp
cld
push
pop
xchg
jp
orb
sbb
aaa
imul
in
fsubr
mov
cmp
push
push
pushf
fldl2t
jnp
cli
jecxz
sbb
push
adc
push
mov
mov
aas
test
imul
dec
cmc
push
or
ret
sub
outsl
in
les
mov
or
push
rcrb
or
and
mov
repnz
lret
jmp
inc
rcrl
imul
cmp
ret
sub
ret
repnz
cli
xor
mov
jle
icebp
dec
fsts
dec
lahf
jge
xchg
mov
pusha
push
pusha
push
jnp
mov
cmovb
and
or
cmp
sbb
sbb
bound
cld
sub
or
icebp
pusha
sbb
mov
int3
aaa
pop
out
or
testb
push
cwtl
or
mov
lahf
inc
aaa
mov
push
xor
mulps
ss
pop
push
push
inc
and
mov
mov
and
mov
mov
pop
push
imul
movsl
daa
push
jp
jbe
add
outsb
jno
mov
adc
fstpl
bts
inc
movl
sub
dec
aam
push
call
insl
push
xchg
inc
jecxz
pushf
pop
push
mov
les
dec
fdivr
jmp
jns
sub
sub
xor
into
maskmovq
divl
je
mov
sub
jbe
sahf
test
mov
push
pop
mov
mov
inc
jne
pop
int3
iret
mov
mov
les
push
sarl
std
mov
sbb
and
cltd
test
push
ds
dec
into
stos
sub
pop
sbb
fstpt
arpl
push
and
rolb
mov
cltd
out
in
data16
xorl
jmp
test
or
cwtl
mov
stos
daa
jnp
xchg
adc
pop
and
jbe
mov
imul
rorl
rolb
push
repz
add
in
das
adc
push
mov
imul
jno
jecxz
popa
mov
pop
aaa
mov
pop
push
add
lahf
xchg
xchg
call
push
das
inc
pop
push
insl
push
add
cmp
cs
mov
inc
inc
arpl
mov
xor
or
jnp
call
xchg
and
cmp
cmpsl
mov
sub
lods
loopne
lock
popf
sub
lret
lock
lods
pop
push
js
daa
test
mov
jno
xor
das
loopne
jg,pn
xlat
and
fwait
push
dec
fnsave
cmp
lods
insb
aam
andb
ror
in
arpl
or
lods
and
imul
scas
addr16
ss
lds
mov
fwait
jmp
cmpsb
lods
cwtl
pop
mov
mov
or
xchg
pop
inc
popf
pop
lret
pushf
cmpb
push
btc
sti
sub
roll
pop
imul
pop
out
in
neg
or
xchg
xor
fistps
push
inc
sub
mov
inc
dec
lret
adc
push
imul
and
push
stos
loope
fmuls
cmp
cs
enter
call
push
jl
in
sub
jle
hlt
fwait
push
xchg
push
fs
imul
push
and
mov
sbb
xor
shll
cmp
sar
loope
shlb
lea
xchg
cmp
fistpl
xor
xchg
rol
js
or
add
mov
call
jo
lods
mov
pop
mov
mov
stc
push
fiaddl
and
mov
mov
in
and
divl
bt
cmp
inc
cltd
mov
or
stc
out
mov
aad
push
pop
pushf
leave
shrb
incl
aam
or
xor
lock
movsl
cmp
nop
inc
stos
pop
xchg
add
ficoml
movsl
insl
fnstsw
pop
sub
enter
mov
test
mov
sub
sub
aaa
xchg
insl
andl
imul
add
lret
stc
dec
in
xchg
fucomp
mov
mov
mov
lods
push
movsl
mov
imul
lret
aam
pop
jae
xor
xchg
cwtl
sar
sub
cmpsb
dec
je
mov
idivl
mov
xchg
add
dec
dec
pusha
pusha
sub
aam
mov
dec
imul
sahf
imul
sarl
ret
negl
subb
aad
out
clc
mov
bound
pop
mov
xchg
jle
icebp
pushf
push
loope
pop
mov
push
inc
cmp
xor
cmp
xor
into
add
inc
movsb
mov
icebp
jns
mov
push
subb
loop
mov
add
scas
stos
pop
xchg
int3
mov
test
sbb
fbld
push
jb
add
in
adc
shll
cmpsb
inc
mov
and
lret
inc
int3
aaa
loope
ret
inc
jns
js
jge
popf
jo
mov
mov
jno
out
arpl
nop
pop
out
outsb
test
fsts
repnz
ret
popa
dec
jg
inc
movsb
pop
add
xor
je
pop
sbbl
jp
cltd
movsb
xchg
xchg
xchg
or
arpl
jns
xorl
mov
ljmp
fidivl
mov
mov
or
push
insb
jp
cmpsb
push
mov
cmpb
imul
lds
std
lret
out
dec
stos
fsubl
sub
mov
fs
iret
jle
dec
jmp
lods
or
push
inc
hlt
addr16
pop
sub
orl
sahf
jnp,pn
xor
aaa
hlt
lods
mov
add
jae
mov
test
ret
pushf
out
icebp
fnstcw
inc
fs
mov
mov
fdivs
cwtl
push
inc
loope
mov
and
push
addl
mov
inc
and
jnp
ja
test
mov
lods
sub
test
mov
or
shl
and
jecxz
mov
mov
int
fsubrl
and
push
out
jmp
pop
xchg
popl
push
sti
or
pop
jmp
iret
jecxz
dec
mov
xchg
pop
fstl
in
aad
push
js
ds
nop
adc
insb
cmp
aad
pop
shl
insl
gs
mov
jle
cmp
stos
adc
cltd
rcrb
mov
movsb
inc
aad
cld
mov
daa
or
mov
mov
pushf
je
movsl
cmp
fnstenv
pop
adcl
lcall
inc
sub
pop
mov
sub
lods
push
fcmovb
inc
mov
jne
inc
pop
and
dec
test
fs
sub
fdivrl
pop
notl
jmp
jns
mov
addr16
pop
jecxz
icebp
inc
fnstcw
pop
dec
lcall
adc
stos
shlb
dec
xchg
ja
pop
cs
fmuls
cmp
imul
iret
mov
dec
pushf
les
sub
in
dec
jp
incl
sub
aaa
cmp
jnp
jmp
inc
sbb
xlat
icebp
pop
or
popa
mov
sti
mov
sbbb
add
push
mov
jp
stc
sub
in
aas
sbb
stos
in
rolb
ss
push
add
xchg
mov
sub
aas
scas
in
xchg
cwtl
pop
jns
test
dec
or
in
popf
xchg
out
pop
jno
fwait
daa
lret
sahf
out
add
ds
jns
lret
mov
out
sbb
lock
ljmp
lock
hlt
sub
add
adc
mov
test
sbb
out
rcrb
adc
out
sbb
and
lods
adc
push
clc
insl
repnz
sbb
std
lret
cmp
sbb
fnstcw
cmp
lret
mov
sub
sub
push
sub
mov
cmp
adc
xchg
mov
jno
push
add
lcall
scas
mov
jbe
dec
pusha
insl
cs
and
pop
daa
mov
adc
out
lea
sub
ja
mov
es
mov
sarb
and
dec
adc
out
addr16
push
push
fisubrl
cmc
clc
jmp
push
lcall
mov
push
mov
jecxz
adc
aas
mov
dec
sbb
mov
jne
cmp
xor
mov
addr16
inc
push
stos
aam
or
xor
cmpsl
js
ret
mov
mov
mov
mov
mov
or
mov
scas
add
lods
in
adc
xchg
int
push
imul
cmp
cmp
mov
adc
push
nop
sarl
cltd
xor
cmpsb
aad
push
shr
es
mov
out
jb
popa
out
push
pop
and
mov
inc
pushf
xor
xorb
aad
xlat
clc
and
xchg
cmpl
sub
mov
out
dec
shrl
leave
and
lods
or
stos
mov
jl
mov
pop
sti
xchg
sub
scas
pusha
inc
push
or
xchg
inc
inc
leave
cmc
and
mov
mov
pusha
xor
xor
ljmp
xlat
out
mov
push
icebp
mov
pop
push
je
iret
mov
mov
mov
mov
sub
shlb
aas
in
xor
pop
popf
mov
hlt
lea
sbb
dec
repnz
adc
adc
stos
das
sub
scas
arpl
ds
outsb
or
aam
dec
jo
and
push
jns
xor
cmp
xchg
insb
push
ret
dec
mov
aam
mov
clc
dec
repnz
jle
jecxz
dec
ds
inc
jle
subb
jbe
in
stos
ds
mov
iret
push
neg
ret
mov
cmp
in
dec
xor
jge
rorl
jg
repnz
pop
sub
or
ja
es
ds
loope
jl
out
sbb
and
bound
adcl
mov
fisubrs
ds
fistl
and
dec
inc
mov
shlb
dec
mov
pop
pushf
or
pop
xlat
jns
es
adcb
add
lock
xlat
sub
mov
ja
outsb
xchg
dec
pop
xor
pop
xor
sub
jnp
sub
mov
jns
shl
lock
fwait
xor
mov
outsl
ret
cli
icebp
imul
ficoml
sbb
push
repz
jle
outsb
shrb
cmp
jnp
gs
in
jge
sbb
lret
xchg
arpl
push
or
mov
sarb
lods
in
jg
lcall
stc
repnz
push
lods
pushf
mov
dec
and
sub
jb
ljmp
mov
or
bound
xorl
mov
push
push
inc
cmp
stos
and
fbld
push
hlt
fs
aas
lea
imulb
add
push
std
sub
adcl
lcall
or
cmp
pop
dec
shrb
or
inc
sub
cmp
fincstp
dec
mov
or
dec
pop
or
fwait
cld
sbb
pushf
out
scas
inc
paddusb
ds
sahf
daa
fcoml
rcrb
xchg
pop
jmp
cmpsb
adc
or
push
adc
rorb
cmp
sub
dec
adc
andl
jbe
push
clc
sbb
out
shll
popf
imul
lret
addr16
cmp
outsb
popf
pop
dec
mov
jle
xor
jbe
das
add
addr16
lods
lret
daa
add
xchg
or
adc
mov
arpl
sub
sbb
test
xor
out
cmpsl
popa
stos
ds
add
mov
adc
mov
scas
xor
sub
mov
shll
and
lea
xchg
sahf
dec
ljmp
xchg
jl
movsl
fucomi
cs
jb
xchg
int3
jbe
outsl
dec
xor
int
imul
rorb
push
dec
xor
sbb
call
test
or
inc
out
mov
push
jle
push
pop
fs
lods
jmp
sbb
jmp
push
enter
adc
jge
jg
ret
ficompl
xchg
mov
outsl
cwtl
in
test
outsl
bound
jg
sbb
insl
icebp
dec
sbb
stos
sbb
imul
cmpb
sahf
and
push
iret
das
dec
mov
jne
test
lret
mov
add
mov
lea
or
sbb
daa
es
or
pop
inc
shll
xchg
xor
push
sbb
mov
mov
bound
add
jl
fidivs
mov
xchg
aaa
hlt
outsb
hlt
jp
mov
sbb
std
and
xchg
jbe
xorb
and
out
xor
roll
arpl
push
inc
fwait
loope
mov
pop
push
pop
fnstsw
into
sbb
and
cmp
jg
movsl
das
xor
cmp
subl
popa
mov
cmp
jb
stos
jecxz
pop
xchg
out
cmp
int
es
ret
xlat
dec
das
sub
mov
shl
test
xor
push
data16
mov
xor
nop
sbb
inc
jno
dec
pop
or
gs
cmpsb
mov
cmpsb
and
pop
inc
test
xor
and
cmp
fistpll
inc
fistpl
sti
xchg
push
push
pop
jne
aad
sbb
pop
roll
movsb
fisubrl
lds
mov
inc
popf
xor
scas
lcall
fs
shll
lea
jmp
sub
mov
mov
lcall
add
pop
imul
mov
xchg
scas
inc
xlat
add
fwait
leave
test
adc
push
or
pop
aas
lret
stc
movsl
add
ds
addr16
or
or
xchg
adc
jg
stos
push
mov
lods
repz
push
ljmp
cmpsl
dec
dec
or
dec
mov
inc
lods
lds
mov
lds
data16
lods
push
fdivrl
push
loop
add
stos
mov
test
stc
pop
arpl
mov
scas
pop
push
xchg
popf
stc
xchg
fiaddl
sub
aad
jecxz
pop
mov
jp
aam
sti
daa
jge
fcmovu
lret
cwtl
xchg
mov
xor
adc
jle
mov
or
subb
sbb
das
mov
inc
push
sub
or
test
mov
int3
movsb
mov
dec
sub
xchg
aad
sbb
add
mov
mov
ds
mov
scas
xor
adc
repz
cmp
mov
mov
mov
cli
xor
sub
insb
xlat
pop
filds
popa
stos
mov
or
dec
fwait
xor
movsb
icebp
mov
scas
ljmp
add
pop
cmp
and
sbb
in
ret
and
imul
xchg
stos
pop
add
pop
sar
or
jge
sbb
push
cmp
xor
idivl
pop
or
aas
fidivrs
add
in
inc
xlat
ljmp
push
lods
push
mov
enter
lret
test
xor
and
inc
lock
push
push
sbb
popa
add
add
mov
sbb
dec
sti
push
cli
imul
cmc
outsb
into
jo
fdivp
dec
dec
adc
push
lret
or
add
lcall
mov
push
adc
out
imul
cmpsb
lds
into
aad
jo
aad
mov
push
rol
lret
sub
push
jbe
pusha
and
cs
xor
lea
pop
repz
xchg
cmp
ret
nop
out
xchg
cltd
lret
sub
insb
add
iret
das
and
pop
sbb
outsl
mov
aaa
push
lock
xorl
mov
cs
sbb
arpl
fsubrs
aaa
push
andl
and
and
ja
lret
sbb
jl
pop
jae
add
lock
jb
push
xor
inc
or
test
mov
cmp
jnp
sbb
cld
adc
add
cwtl
cmpsl
scas
pop
mov
mov
out
cmp
push
add
loop
scas
pop
pop
push
lea
pushl
dec
inc
test
scas
xchg
or
pusha
or
and
cmp
pop
xor
mov
xlat
pop
dec
ret
stc
push
inc
and
sub
rol
sub
sbb
bound
pop
in
add
push
rcrb
or
je
pop
andb
outsl
or
fimull
pop
jmp
mov
add
jnp
or
cmc
arpl
mov
mulb
call
std
pop
loopne
ljmp
inc
cmp
lock
hlt
jmp
inc
fs
fs
ss
shll
inc
or
add
xchg
inc
adc
add
pop
or
push
fistps
mov
lods
ret
popl
pushf
les
aad
popf
sbb
sub
xchg
or
sbb
mov
jae
xchg
dec
iret
sbb
test
mov
outsb
jno
add
pop
mov
push
jne
rorl
push
and
dec
pop
mov
pop
sahf
jle
cmp
mov
inc
cmp
pop
cmp
xchg
mov
ljmp
xchg
adc
mov
mov
mov
mov
pushaw
xor
notl
lock
hlt
inc
popa
xorl
test
jmp
jne
mov
xchg
jecxz
in
sub
scas
cs
cmp
or
push
sahf
inc
ret
mov
lods
aaa
je
outsl
clc
jg
sub
shlb
stos
arpl
loopne
lret
sbb
cmpsl
xchg
sbb
dec
pop
bound
mov
dec
lods
mov
or
outsl
or
mov
inc
nop
frstor
fwait
wrmsr
push
mov
repnz
add
insb
mov
test
test
iret
jmp
js
xchg
in
clc
cmp
sti
lods
ss
ja
adc
andb
jmp
loopne
les
pop
push
orl
cmp
inc
sub
sub
stos
xchg
test
loope
sbb
lods
rcrb
mov
adc
mov
adc
dec
aad
lock
movl
shl
incl
cs
inc
mov
les
int
sbb
or
repnz
sub
out
push
pop
loopne
nop
popf
hlt
gs
cmp
mov
in
mov
bound
push
xlat
test
nop
lock
inc
jno
jb
xchg
xchg
xchg
subb
fstpl
fmull
popa
fdivp
jbe
sub
xor
in
push
out
rcrb
and
iret
jae
sbb
mov
imul
mov
pop
cmpsb
ror
dec
rdtsc
arpl
imul
cmp
pop
popf
jg
push
jg
xor
fdiv
dec
adc
arpl
mov
lahf
mov
pop
sbb
loop
js
mov
xorb
mov
mov
andb
lahf
les
test
sbb
aas
jg
push
in
jo
scas
mov
ret
aaa
sahf
inc
push
pushf
xor
sbb
inc
xchg
clc
jnp
scas
sar
dec
mov
inc
sub
nop
mov
imulb
inc
into
and
pop
cmp
or
sti
inc
or
xchg
or
jge
lcall
dec
xchg
inc
push
mov
jae
adc
xchg
notb
das
sbb
sti
mov
cmp
lret
add
sti
jle
xchg
popf
lahf
lahf
dec
mov
push
insb
and
push
pop
jno
pop
shrb
mov
mov
sub
xchg
lahf
jnp
sahf
leave
add
addl
pop
xor
pop
mov
aas
adc
xchg
aad
push
push
pop
and
inc
fnstcw
pop
cmpsl
imul
das
pop
aaa
jne
popa
scas
test
inc
inc
sub
jecxz
mov
sub
mov
out
jge
das
jbe
insl
cld
adc
jns
sub
enter
pop
pop
je
sub
in
iret
xor
push
shrb
push
fldcw
add
jmp
inc
in
shrl
sbb
out
cmc
bound
sbbb
aaa
jo
nop
mov
lret
xchg
adc
xor
cmc
push
ljmp
movsb
or
mov
mov
out
je
and
fbstp
lea
inc
decl
sub
mov
addr16
jo
dec
in
rcr
push
repz
les
cmpxchg
inc
push
arpl
jb
mov
dec
lret
and
xor
or
cmp
arpl
jno
in
mov
notb
scas
stos
xor
and
lret
xchg
mov
cmpsb
int
mov
pop
inc
out
lcall
dec
add
cli
popf
ljmp
std
xor
loopne
test
popa
xchg
leave
out
push
sbb
outsl
cld
push
lret
popf
test
dec
lock
lock
andl
insb
cmp
sbb
ljmp
cmp
add
mov
sub
inc
sub
jp
xchg
leave
cmp
inc
push
mov
pop
rol
test
les
jne
mov
inc
or
scas
lcall
sbb
sub
les
jmp
xchg
and
stc
and
jns
pop
mov
cli
push
js
or
repnz
mov
popa
add
dec
test
aaa
cltd
outsl
addr16
add
mov
ds
call
cmpsl
jmp
xchg
adc
test
xchg
inc
and
jl
cmp
fsub
mov
jne
jnp
clc
and
test
inc
mov
add
insb
mov
sti
lds
pop
popf
mov
gs
lret
push
jae
call
dec
jb
jb
arpl
mov
insl
sahf
and
lds
lret
das
in
xchg
cli
hlt
xor
push
jbe
adc
sub
arpl
or
jne
loopne
outsb
mov
pushf
mov
das
clc
pop
jb
adc
mov
test
rolb
clc
sub
movsb
inc
push
popf
fstps
fldcw
jo
jecxz
cmp
mov
mov
movsb
in
rol
mov
jg
xchg
daa
loope
sbb
iret
mov
inc
push
lret
mov
mov
sub
xchg
dec
xchg
lock
adc
stc
xor
mov
and
and
or
fidivs
or
cmp
loopne
cmp
inc
cld
or
mov
aad
xchg
xchg
mov
rcr
jecxz
je
adc
mov
shll
fldenv
lods
add
call
pop
cmp
xchg
inc
iret
jno
imul
cmp
mov
sub
cld
mov
ds
mov
insb
mov
sbb
jmp
daa
dec
adc
or
mov
sbb
inc
orb
in
ficomps
nop
push
xlat
std
mov
ss
aaa
jp
fisubrs
insl
inc
les
into
adc
or
bound
push
lods
xchg
addl
inc
pushf
xor
jp
pop
jle
push
mov
cmp
inc
hlt
fwait
mov
jmp
mov
fsubl
loop
mov
mov
mov
mov
inc
int3
xorl
cmp
mov
pop
mov
and
lock
mov
es
test
xchg
lret
shrl
pop
dec
push
pop
fmuls
fldenv
icebp
sbb
sti
daa
and
repz
movsb
outsl
sub
xlat
fnstsw
and
nop
daa
inc
sbb
loop
jp
xchg
out
mov
xchg
push
push
fiaddl
sub
negl
aad
sti
sbb
lods
cmp
pusha
pushf
inc
pop
sti
clc
jno
lcall
movsl
ret
arpl
inc
dec
dec
mov
pushf
test
sbb
aad
cld
inc
cmp
hlt
mov
mov
mov
es
xchg
data16
fbld
xchg
mov
mov
xchg
jecxz
pshufw
cmpsl
add
iret
sub
mov
test
jo
fists
pop
add
push
or
lret
inc
aam
and
bound
movsb
in
jecxz
push
sbb
and
jg,pn
xor
xchg
add
adc
lods
push
mov
and
loop
ds
clc
add
mov
mov
insl
repnz
jnp
movsl
hlt
ds
jns
dec
xor
mov
push
loope
insl
mov
shrl
lds
jp
cmp
stos
out
aas
cmpsl
sbb
cs
out
dec
mull
jge
adc
sbb
lahf
bound
addl
inc
clc
ss
out
shl
mov
rolb
in
mov
sahf
sarl
fs
mov
data16
mov
ficoms
call
orb
inc
pop
or
ret
ss
mov
inc
data16
mov
testb
and
mov
hlt
cli
or
lret
or
mov
stos
pop
popf
hlt
aaa
in
adc
jge
pop
fisttpl
xchg
enter
xchg
jle
rorl
enter
cmp
lret
cwtl
xor
je
xchg
push
ljmp
in
shll
fnstcw
mov
in
movsb
push
sbb
ret
inc
mov
mov
mov
faddl
decl
or
outsb
lahf
inc
mov
movsl
rcr
jb
or
ret
mov
fstpt
mov
fwait
xchg
int
sbb
in
insl
pop
stc
push
add
js
icebp
addb
mov
mov
loope
leave
ja
inc
dec
mov
nop
push
dec
dec
cltd
xor
inc
movsb
neg
fists
out
adc
jle
outsb
dec
loopne
add
fidivrl
test
pop
xchg
mov
dec
push
leave
repnz
push
dec
in
fsubl
mov
and
out
roll
jmp
mov
stc
dec
adc
mov
cmp
lods
imul
aaa
or
jb
aaa
insb
cmp
ljmp
mov
dec
cmc
pop
sbb
cmp
pop
jne
cmp
cmpsb
ja
dec
add
imul
pop
cwtl
sti
jecxz
sub
fisubs
inc
fidivs
fnstcw
sbb
hlt
cli
sbb
loopne
popa
adc
dec
jmp
mov
sub
and
out
cmp
notl
out
or
xor
je
out
ljmp
mov
push
mov
mov
stc
add
clc
outsl
xorl
jp
je
inc
stos
out
mov
popf
loope
cmp
add
scas
lds
mov
jno
nop
fnstcw
aaa
or
mov
push
cmp
adc
mov
xor
dec
mov
add
xor
enter
push
sub
sbb
bound
xor
insb
sbb
dec
rolb
sbb
sahf
inc
insb
rcl
cmp
popf
xor
sti
push
push
shlb
push
sub
lods
cmp
xchg
out
out
ds
rcrb
stos
lret
jmp
out
jp
pop
mov
rclb
outsb
js
movsb
data16
pop
push
lods
fstpl
je
xchg
mov
cmpsl
sbb
rclb
mov
sbb
std
repnz
rcl
mov
lods
lcall
addb
out
push
pop
push
cmp
mov
stc
fs
insl
scas
loop
xchg
hlt
mov
ret
mov
scas
sbb
ja
clc
in
ret
repz
mov
xor
movsb
stc
stc
xor
test
jge
add
int
mov
cs
adc
movsb
sub
gs
test
jp
xor
mov
andl
pop
loop
scas
jl
aas
lret
push
add
pop
xchg
cltd
xor
push
lods
cli
ljmp
mov
pop
adc
push
fnsave
inc
lret
xchg
jmp
mov
clc
inc
pop
arpl
mov
push
pusha
lea
adc
shlb
mov
movsl
aad
push
cwtl
and
scas
nop
sub
jno
in
imul
test
scas
imul
add
inc
outsl
jo
mov
xchg
adc
adc
and
pop
jecxz
std
orb
and
jnp
push
sub
jg
add
gs
or
jp
ds
fucomi
bound
sahf
pop
dec
mov
pop
fildll
mov
sbb
icebp
sub
sbb
cmpl
insl
push
adc
mov
repnz
stc
inc
xor
idivb
pop
lcall
loop
jo
sub
sub
pop
sub
cli
add
rclb
xchg
rclb
andb
dec
and
add
xchg
adc
mov
inc
jmp
inc
xchg
jo
cmp
xor
idiv
mov
dec
cmp
stc
jnp
std
call
mov
inc
sub
push
dec
pusha
test
xor
pop
jne
mov
loop
mov
std
insb
push
push
dec
popf
mov
rorb
mov
in
push
in
push
ds
dec
inc
lea
inc
mov
sbb
data16
js
dec
in
jmp
cmpsl
repnz
fdivl
daa
mov
lds
pop
push
jns
inc
push
leave
into
popf
push
xorb
insb
roll
movsb
xchg
arpl
lods
int
inc
mov
cltd
data16
cs
faddp
cmp
negl
mov
xorb
scas
test
cmp
cmpsb
mov
inc
ror
jmp
sbb
sub
test
dec
xchg
sub
leave
leave
and
xor
psubsw
add
std
loope
hlt
mov
arpl
add
pop
aaa
out
js
mov
inc
cmove
das
test
mull
mov
rclb
push
fwait
cmp
in
push
inc
jbe
mov
cmpsb
in
jmp
mov
adc
mov
xchg
jle
outsl
dec
jecxz
cmp
jnp
iret
movsb
orl
in
ret
adc
pop
test
ljmp
bound
sub
push
sub
pusha
int
out
roll
cmc
cmp
aad
loopne
pop
sbb
pop
sub
lods
jge
mov
push
lcall
inc
jb
pop
insb
sbb
dec
jl
xchg
scas
rclb
sbb
imul
push
push
lods
js
dec
xchg
jae
add
xor
and
leave
iret
divb
in
push
sub
cs
or
or
cmp
inc
rorl
pop
jbe
push
outsl
push
inc
popa
dec
inc
fmul
xorl
add
dec
clc
fs
aad
mov
dec
daa
jno
mov
movsl
adc
insl
xlat
das
fistl
mov
lret
stos
and
repz
out
aaa
aaa
xchg
pop
in
in
repz
push
jno
or
mov
push
xchg
scas
imull
stos
cmpsb
shr
or
sub
lock
cmp
cwtl
cmpsl
sti
mov
subl
xchg
xor
loope
and
shll
xor
fs
in
push
gs
pop
imulb
pop
adc
les
int3
mov
cmp
int
push
rol
ds
js
jecxz
jg
cmp
fdiv
lods
hlt
sahf
lcall
jge
insb
cmc
cmp
cltd
xchg
inc
icebp
dec
sub
incb
fldt
rorl
in
adc
push
jb
imull
fs
scas
push
xchg
lahf
gs
lcall
enter
jp
mov
aas
ret
adc
aas
mov
mov
dec
mov
pop
ss
pop
jge
adc
clc
and
test
inc
out
cmp
fildll
cmpsl
pop
mov
add
mov
xchg
scas
sbb
loope
fbstp
lods
sbb
mov
fdivl
lea
repnz
xchg
lcall
fidivs
mov
pushf
and
outsl
dec
jbe
jns
jmp
xchg
mov
cmp
mov
repnz
lret
movsl
into
adc
fsts
aad
inc
divl
les
or
mov
ficompl
pop
std
inc
sbbl
mov
sbb
in
repz
push
mov
cmp
push
xor
lcall
ret
mov
idivb
push
jae
loope
or
sbb
adc
pop
cmc
loope
int3
loop
pop
xchg
andb
aam
mov
fcoml
push
push
stc
pop
adcl
adc
jns
outsb
ret
mov
repz
je
lret
pop
cmp
push
enter
shl
cmp
jb
xchg
mov
and
ret
pop
add
lahf
sbb
push
jae
loop
cmpsl
or
push
lahf
pop
mov
push
cmpsb
mov
fucomip
dec
cmp
cmp
add
or
mov
and
insb
mov
in
or
int
je
push
add
lea
mov
sbb
test
lods
pop
jg
mov
ljmp
inc
xor
lea
xlat
jne
insb
cmpsb
pop
aad
insl
jae
into
jb
mov
jne
stos
sub
add
in
es
shrb
pop
int
jg
sub
sub
stos
push
cli
and
lret
repnz
xlat
ficompl
fdivrl
in
sbb
xor
es
push
dec
mov
in
test
fwait
cmp
int3
mov
fldcw
sub
ret
in
inc
divb
fs
pop
and
movsb
in
sarb
mov
jnp
dec
push
movsl
mov
add
sbb
flds
sub
fisttpl
and
repnz
rol
xlat
ljmp
lahf
imul
mov
jmp
test
sbb
ret
popf
outsb
insb
sub
in
cltd
movsl
mov
gs
xchg
push
adc
and
cmp
hlt
aaa
movb
stc
out
mov
cli
shll
shll
je
jp
mov
and
dec
out
mov
mov
cltd
pushf
or
notb
shr
xlat
lret
cwtl
popa
and
loopne
aaa
roll
jae
ret
je
movsl
sbb
mov
fcomi
imul
cltd
or
inc
jg
push
xchg
dec
adc
push
xchg
sub
add
rclb
sbb
rcll
adc
xor
mov
or
push
gs
adc
mov
or
aas
mov
adc
xchg
mov
mov
loop
xchg
jne
pusha
cmc
outsb
out
jae
sahf
cld
mov
mov
and
xchg
cmpsb
in
call
cmpsl
or
fsubl
scas
pop
outsb
sub
fiadds
data16
cli
mov
adc
fidivl
push
popf
adc
or
ds
lea
cmc
aaa
iret
mov
and
ret
jo
jp
shlb
or
test
sbb
mov
xchg
lea
pop
popf
cmp
aaa
icebp
dec
bound
out
pop
pop
xchg
imul
cmp
xlat
pop
inc
xor
movsb
pop
mov
js
hlt
inc
mov
pop
mov
out
pop
pop
cltd
or
lea
push
mov
pop
mov
outsl
and
in
ficoms
int
fstpl
mov
test
push
inc
add
clc
dec
add
negl
ficoml
sbb
mov
mov
mov
out
xor
repz
pop
std
push
and
xchg
dec
loopne
push
dec
icebp
loop
lcall
pop
insb
push
popa
pop
in
lds
dec
shl
jp
sbb
out
adc
das
rcrl
or
fnstsw
jecxz
mov
or
pop
rclb
jge
pop
jge
cltd
inc
push
or
dec
push
aas
imul
in
sub
inc
adc
sub
fisttpll
sub
fsubrs
movsb
jne
lea
daa
cmpsb
or
adc
push
mov
xor
es
jg
mov
inc
xor
shr
xchg
flds
imull
jmp
jge
std
int3
mov
add
push
adc
and
dec
js
sarb
mov
es
adc
pop
cmp
and
fldt
mov
imul
cmp
mov
pop
aad
xchg
outsl
push
rcr
fabs
jmp
loopne
push
mov
lock
inc
and
xor
add
sbb
shl
pushf
mov
pop
mov
dec
roll
sub
push
sub
adc
lods
xchg
pop
shl
push
cmp
xor
dec
lods
xor
inc
nop
pop
into
fmull
mov
cmp
sbb
popa
lcall
mov
pop
or
fucomip
mov
js
ljmp
lahf
rolb
sbb
gs
lcall
iret
fwait
inc
sub
sub
push
daa
int3
aaa
jge
jbe
ljmp
iret
mov
mov
dec
pop
mov
xor
xorl
jbe
dec
aas
js
es
outsl
cmp
in
inc
pop
pop
xor
jp
lret
clc
push
std
data16
insb
mov
jmp
mov
ljmp
mov
jp
pop
cwtl
mov
xlat
push
xor
push
mov
daa
jns
pop
arpl
pop
cli
or
in
mov
test
je
push
push
push
adc
lods
inc
cs
mov
filds
out
inc
fimuls
and
cmpsb
fisubl
adc
adc
pushf
mov
sbb
insb
or
sbb
aad
stc
adc
pusha
and
shl
les
pop
ficoms
ja
cmpsl
inc
sbb
ljmp
adc
cmp
mov
xor
push
addr16
stos
shlb
push
addl
mov
and
fldl
leave
pop
xchg
cmp
inc
int3
shrb
cmc
dec
adc
ja
lea
add
imul
call
repnz
add
orb
ret
lods
rcrb
popa
lods
pusha
or
data16
xor
popa
aas
nop
xchg
cmp
cltd
pop
aad
cld
aam
push
jmp
mov
jne
sub
and
mov
fildl
push
inc
push
inc
jmp
xchg
sbb
pop
cmc
mov
in
mov
push
inc
je
test
mov
xor
sub
or
sub
sbb
inc
mov
insl
push
cltd
fstps
outsb
pop
cmpsl
aam
add
and
add
sahf
stc
in
leave
pop
movl
add
outsb
mov
out
shl
adc
jle
pop
rcrb
lock
and
gs
xchg
lock
daa
jg
adc
pop
mov
iret
inc
cmp
call
xchg
dec
lcall
jno
cld
inc
shlb
decl
and
cmp
out
sbb
adc
xchg
repnz
sti
movsl
pop
nop
mov
loop
sbb
hlt
leave
sarl
aam
aaa
je
popa
imul
shrb
push
sbbl
sbb
fcomp
dec
inc
adc
cmpsb
push
inc
lods
xchg
dec
add
sub
js
jae
ret
loopne
pop
mov
lods
pop
sbb
out
cmpsl
test
sub
in
mov
outsl
test
adc
pop
std
data16
pop
into
sub
sub
mov
movsb
mov
andb
in
and
pop
pop
add
xor
push
or
inc
or
pop
jne
mov
ret
xchg
sti
pop
movsl
mov
popf
je
adc
sub
or
je
push
out
and
add
lods
jnp
cmpl
and
mov
mov
scas
orb
cmc
push
push
pop
scas
inc
repz
fs
lcall
or
jmp
and
cmp
outsb
daa
mov
std
aas
pop
add
rorb
mov
or
sub
insl
movb
pop
sub
xor
leave
sub
dec
jmp
rcr
imul
leave
adc
sbb
je
popa
es
int
into
xchg
cmp
ja
pop
mov
fistpl
lcall
sahf
cmpsb
dec
dec
les
leave
in
test
xlat
je
pusha
dec
add
mov
in
pop
cmc
icebp
cltd
je
lods
inc
test
or
mov
movsb
xorl
clc
lret
mov
cmp
cmp
or
dec
imul
sti
jne
mov
mov
jne
movzwl
in
xchg
push
enter
in
pop
lret
movsb
das
je
rcl
in
ret
mov
rcrl
dec
lock
in
mov
sbb
jecxz
pop
jge
mov
ret
jbe
mov
ret
mov
push
or
pop
mov
push
ds
sahf
mov
scas
in
xchg
xlat
jbe
outsb
cmpl
cwtl
out
lds
arpl
pop
ds
mov
insl
mov
inc
shrb
jno
sub
jmp
sub
xor
mov
xchg
xor
xchg
fisubs
iret
lds
pop
popf
jnp
pop
ss
xlat
add
add
jp
jg
jae
das
in
lds
mov
jecxz
push
push
sarl
pop
xor
mov
out
mov
outsb
dec
sub
sub
inc
pushl
add
push
inc
push
jo
ret
mov
in
cmp
scas
outsl
pusha
cmp
mov
testl
dec
jne
shrl
pop
aam
or
sbb
ss
jnp
jl
mov
rorb
cmp
sbb
xchg
dec
mov
aam
bound
scas
xor
pop
leave
loope
and
setae
ret
inc
mov
sarl
push
and
addr16
fidivl
add
clc
jle
cmp
arpl
lods
rcrb
sub
adc
adc
ss
fs
and
cld
or
out
jmp
sarb
xchg
and
mov
call
fcoms
ret
xchg
aas
call
xchg
inc
xchg
cmp
ret
pop
sub
pop
into
dec
inc
lret
das
test
in
push
das
inc
aad
aam
jns
cwtl
jb
out
insb
sbb
repz
add
fists
cli
insl
in
fadds
adc
xor
and
out
sub
cli
call
int
push
mov
aam
lret
push
fmulp
xchg
into
out
je
sahf
in
cs
mov
xor
fwait
cmp
dec
loopne
pop
jo
or
push
imul
inc
cli
outsl
cmpsl
shrb
jno
mov
lods
sbb
and
dec
stos
jo
mov
dec
sbb
pop
sbb
popa
push
ss
mov
test
mov
dec
shrl
lret
ja
pop
xchg
push
sub
js
mov
outsb
mov
and
push
outsb
mov
or
mov
in
mov
lods
add
sbb
add
lods
ljmp
inc
add
aas
inc
pop
mov
jae
jb
inc
pop
std
out
ret
imul
xor
scas
jmp
mov
dec
nop
push
sub
xchg
in
sbb
jle
and
pavgw
jbe
mov
and
in
int3
sbb
mov
insb
or
leave
push
js
das
insb
add
cwtl
das
cld
sub
lahf
jno
jnp
and
scas
push
inc
enter
or
push
leave
pop
pop
dec
mov
leave
xchg
mov
mov
xor
mov
loop
fcoms
fdivr
rolb
shrl
jo
int3
cmc
push
fs
pushf
mov
mov
pushf
cli
push
dec
ffree
xor
lcall
dec
daa
jbe
push
xchg
arpl
add
cwtl
ds
sub
sub
clc
pop
repz
push
inc
and
aad
jg
push
adc
call
int
and
es
mov
add
inc
enter
sahf
test
lret
jmp
or
stos
sbb
enter
rolb
arpl
pop
jbe
lods
mov
sub
and
jnp
jno
daa
xor
push
cmp
pop
aaa
push
shll
and
pop
adc
push
jne
xor
pop
pusha
pop
dec
push
out
xor
arpl
shrl
shl
pushf
xchg
pop
inc
scas
mov
daa
loope
pushf
ret
aas
mov
sub
pop
push
cmc
popa
xor
jb
mov
out
push
push
mov
lea
mov
lcall
aaa
inc
cmp
stos
and
pop
stos
int3
je
mov
add
lahf
sbb
mov
in
outsb
repnz
push
jmp
je
cmp
lret
iret
out
mov
mov
loopne
mov
shlb
jnp
outsl
inc
sarb
bound
mov
sbb
cmp
xor
cwtl
mov
mov
sbb
pop
push
push
push
test
and
imul
push
test
gs
dec
pop
jno
sbb
jne
xchg
mov
pop
sbb
xchg
and
fdivrs
mov
mov
jl
hlt
cmovnp
sbb
cmpsb
fdivs
enter
ficoms
lret
or
push
sub
fiaddl
test
mov
jnp
jmp
pushf
or
leave
les
icebp
call
xlat
inc
inc
mov
in
fildll
adc
pop
adc
mov
xor
xchg
sbb
mov
jne
jp
insl
out
push
add
inc
aam
push
pop
loopne
push
push
popa
roll
or
dec
xchg
push
sub
clc
stos
add
ret
fcmovbe
mov
ss
cmpsb
rolb
push
pop
xor
ret
lcall
sub
mov
inc
adc
mov
fs
xor
clc
movsb
test
jae
mov
shrl
cmp
outsb
dec
mov
sub
into
lods
in
dec
inc
incb
jmp
pop
lds
movsl
insb
jne
xchg
inc
cwtl
dec
sub
test
pop
cmp
push
std
jg
lods
push
sbb
pmulhuw
push
sub
mov
xor
sbb
adc
idivl
jmp
mov
das
inc
lret
mov
in
jecxz
rep
inc
mov
cmp
dec
shr
leave
sub
and
cmp
pop
les
or
xchg
daa
mov
insb
sub
call
hlt
mov
jmp
adc
cmpl
int
and
repnz
xchg
cmpl
dec
mov
cwtl
std
int3
mov
dec
repz
in
test
inc
inc
mov
icebp
lds
pop
loope
add
in
test
ja
and
fistpll
lcall
aam
lea
stc
mov
sub
ud2
dec
mov
xor
divl
sbb
leave
out
addb
loope
dec
scas
pop
dec
dec
dec
xlat
das
add
pop
jp
mov
lea
lret
fldenv
pop
cmpsb
dec
std
popf
dec
dec
add
inc
leave
jg
and
into
jp
int3
xlat
pop
pop
testb
js
push
ret
frstor
inc
jnp
sub
icebp
push
inc
scas
inc
push
fsubrs
jl
pop
sbb
jo
gs
ret
iret
lds
sbb
movl
cmp
mov
fisubrl
cltd
add
stos
add
push
xor
ss
and
hlt
adc
and
push
sti
movsb
call
loopne
inc
sbb
add
bound
cmp
push
mov
dec
loopne
loopw
adc
dec
add
loop
inc
mov
ret
and
inc
sahf
pushf
adc
mov
call
or
mov
sbbb
inc
jo
pop
cmp
dec
orl
fsubl
cmp
add
fcoml
jge
arpl
adc
mov
fdivs
mov
mov
mov
les
aas
aam
sarl
jno
ret
push
mov
dec
sub
and
xchg
mov
ja
mov
push
fstpt
cmp
adcl
cli
jns
and
mov
ret
ret
add
sbb
xchg
push
jno
cmp
cmp
out
cmc
ss
xchg
scas
sub
dec
js
cmp
and
fs
pop
fstl
lds
enter
jns
nop
out
popf
aas
jge
in
add
push
lea
pop
or
jg
js
jb
in
jns
adc
add
mov
jp
dec
push
cmpsb
lret
inc
add
int3
fcmovb
xchg
popa
push
xchg
inc
ja
fyl2x
dec
imul
pop
out
mov
int
lret
push
pop
into
xchg
cmp
movsl
inc
jg
insb
imull
mov
push
jns
jne
push
mov
fnstcw
ret
aaa
cwtl
mov
jae
mov
aaa
cld
push
aas
cmp
adc
popf
mov
xchg
lods
pop
xchg
cltd
leave
push
gs
movsb
add
call
xor
jne
add
mov
xor
xchg
xchg
std
pop
or
sbb
arpl
sbb
ds
lahf
cwtl
cmp
push
mov
and
push
cmp
or
lods
sti
adc
out
ret
sbb
insl
xchg
or
dec
lret
inc
sarl
aam
cmp
mov
xchg
outsb
loop
xchg
jb
movsl
shr
mov
mov
sahf
cmpsl
adc
adc
xchg
iret
mov
sbb
lahf
add
jno
leave
in
les
loopne
mov
sbb
sub
js
pop
mov
int
outsl
lcall
fwait
mov
ds
clc
mov
fidivs
leave
add
xchg
jmp
or
shrb
xlat
pop
pop
fs
test
lea
pop
lods
cmp
push
sarb
loop
push
jb
roll
test
fisttpl
in
adc
dec
lret
or
mov
lods
and
daa
jo
scas
sub
jp
pop
cwtl
xchg
jo
jbe
dec
pop
push
test
test
xlat
dec
cs
sub
add
dec
fldenv
sti
xlat
pop
or
adc
out
cmp
push
sbb
add
ds
or
movsl
and
into
sub
mov
inc
dec
fistps
cmc
and
fsubrs
out
movsb
jno
stos
ljmp
in
sbb
outsl
inc
stos
sbb
popa
xor
mov
lret
inc
jecxz
or
sbb
jns
ret
roll
call
and
fs
cmc
inc
rorb
xor
dec
xchg
sbb
loop
pop
rol
je
xor
mov
mov
xchg
in
jo
leave
sbb
leave
repnz
or
in
and
cmp
fwait
inc
es
and
fcmovnbe
jecxz
outsl
xchg
jns
sub
inc
popa
sti
inc
sub
mov
popa
loop
lret
loope
movsl
ret
pop
push
jb
mov
inc
lds
fmulp
test
sbb
add
jne
iret
add
arpl
enter
scas
xor
sbb
xor
sub
popf
inc
xor
pop
dec
std
fists
pop
cmp
pop
clc
xchg
in
push
insb
lahf
add
sub
mov
mov
mov
cmp
sbb
inc
cli
adcl
mov
lahf
and
adc
sbb
or
xchg
pop
xchg
mov
cmpsl
arpl
fwait
lahf
dec
cmp
int
stos
imul
push
cmpsb
mov
repz
cmp
sbb
ja
mov
add
add
sbb
out
mov
lods
mov
ljmp
mov
lahf
pop
cmpsb
jmp
inc
add
test
adc
lret
and
lahf
pop
sub
dec
imul
das
sbb
sub
jbe
in
mov
in
mov
xchg
cmp
mov
mov
lret
js
xchg
jne
inc
push
stos
cltd
dec
mov
sub
mov
out
lcall
or
outsb
inc
jno
cmp
mov
or
js
ret
mov
cld
mov
in
out
call
dec
jnp
adcl
lods
xorb
and
dec
add
or
sbb
or
cmp
je
mov
or
mov
xor
and
jg
add
mov
dec
cmpsb
outsl
cmp
fs
pushf
cmp
ss
pop
lret
test
pop
enter
cmpsl
sbb
int3
outsb
aas
outsb
pop
ror
int
xchg
pushf
jnp
add
and
add
sbb
push
inc
inc
fwait
cmpsb
ror
mov
fcom
mov
lods
push
xor
add
imul
xor
mov
sub
sbb
sbb
aad
out
mov
mov
popa
mov
pop
in
cmpl
cs
mov
push
sahf
push
pop
scas
daa
pop
cmp
push
inc
inc
and
pop
daa
sbbb
sbb
das
jl
movsb
pushfw
push
adc
lret
daa
xor
je
or
fsubr
lahf
jno
enter
mov
xchg
cs
adc
mov
negl
jne
jns
adc
sub
test
xor
ds
out
cltd
sbb
pushf
lock
in
sarb
lea
or
lea
mov
clc
mov
mov
lret
inc
loopne
test
stos
jecxz
movsb
ds
out
jmp
test
jmp
out
int3
mov
adc
mov
xor
decb
sbb
and
mov
mov
pop
inc
xchg
cmp
out
inc
adc
jmp
and
loop
aaa
negl
cmp
ffreep
in
push
movsl
popf
les
cmp
dec
cmp
push
jmp
jae
shr
addl
in
aaa
adc
dec
add
in
sbb
stos
shrl
mov
and
stos
mov
push
dec
lret
fisttps
cmpsb
add
inc
in
repz
movsb
daa
mov
xor
push
stc
mov
mov
aaa
pop
sbb
jns
std
mov
pop
and
jb
sub
imul
and
push
loope
jmp
sub
mov
stos
in
subb
adc
dec
gs
pop
push
into
test
popf
leave
les
adc
adc
inc
cmp
inc
dec
das
cmp
xor
jbe
lock
adc
jno
dec
pop
test
leave
lcall
loop
dec
enter
cmp
xor
sub
js
fcmovnb
out
or
inc
hlt
adc
push
aas
adc
sub
pop
mov
jns
mov
mov
dec
dec
outsl
inc
test
inc
adc
pop
pop
add
mov
outsl
dec
xlat
cwtl
inc
dec
or
sbb
cmp
mov
mov
pushf
jno
dec
push
fwait
dec
cld
cs
dec
jns
aaa
jnp
mov
cmp
mov
movsb
adc
push
push
xor
dec
imull
push
mov
jnp
sbb
mov
inc
dec
sbb
mov
and
mov
jp
mov
in
xchg
sub
add
shrl
or
push
aam
push
ljmp
rcll
cmpsb
addr16
clc
data16
mov
inc
inc
and
cwtl
xorl
xor
mov
ret
les
jo
hlt
stos
mov
adc
cmc
movsl
adc
push
mov
jle
xchg
jno
jle
xor
xchg
or
push
xbegin
sub
sbb
jne
adc
add
mov
push
rolb
es
ret
fwait
inc
xchg
mov
sbb
stc
cmp
mov
sahf
iret
push
lods
dec
fsubl
mov
test
xchg
test
aam
xor
daa
in
adc
notl
out
inc
dec
inc
push
jg
mov
in
std
mov
lret
push
repz
lods
pop
or
cmp
xor
and
int
add
rcrl
into
out
dec
inc
mov
xchg
ljmp
jns
push
mov
add
jne
test
and
fidivl
fucom
fiadds
addr16
mov
sbb
sub
hlt
push
or
push
mov
je
mov
mov
dec
cli
mov
sbb
pop
stos
sub
push
jns
fdivs
ljmp
or
adc
mov
mov
inc
add
xchg
stos
xor
and
stos
or
mov
push
jne
push
fbstp
addr16
sbb
data16
sahf
jne
shll
push
js
mov
push
jecxz
inc
mov
sbb
cmp
sbb
outsl
scas
jl
or
push
mov
cs
mov
lahf
pop
popf
inc
xchg
adcb
stos
xor
movsb
sub
hlt
push
xchg
mov
divl
lret
mov
lea
mov
cmp
jne
adc
cmp
jmp
sub
push
ss
mov
pop
dec
sub
out
sarb
dec
push
pop
and
into
das
xchg
outsb
mov
jp
das
inc
repz
pcmpeqb
stc
or
inc
lret
dec
jo
mov
pop
push
pop
push
or
xchg
test
xor
push
mov
lcall
inc
lods
or
jmp
xchg
in
iret
xchg
cmp
mov
xchg
fmull
and
pop
sub
sbb
mov
data16
dec
hlt
cli
out
outsl
xchg
mov
jl
nop
dec
hlt
mov
cltd
jge
xchg
std
xchg
fstl
and
ret
sbb
pushf
jp
or
inc
add
push
mov
rorl
lret
push
xchg
and
mov
and
mov
dec
pop
repz
out
mov
jle
mov
into
adc
jmp
shl
loop
add
mov
or
imul
and
out
scas
mov
dec
mov
mov
lods
inc
cltd
fs
sti
arpl
jmp
shll
ds
sbb
push
mov
mov
mov
xchg
popf
push
scas
mov
pop
out
clc
dec
lds
sub
cmp
mov
xchg
mov
add
xor
popl
lret
cld
mov
mov
inc
or
cmp
scas
sub
add
and
push
mov
arpl
fimuls
mov
cmc
dec
mov
cmpsb
fsts
xchg
dec
in
pop
or
mov
fdivl
aad
dec
jecxz
xchg
scas
mov
mov
std
pushf
mov
rolb
cld
pushf
sbb
mov
push
jp
push
adc
inc
jb
rcl
push
scas
icebp
call
push
in
cmp
add
loope
pop
jge
addr16
add
and
xlat
xlat
fiadds
outsb
push
mov
mov
mov
sahf
lret
adc
push
fdivrl
adc
test
fdiv
inc
inc
sub
inc
or
insb
mov
inc
stc
jno
lds
sar
mov
fsubrs
xor
jecxz
add
jp
jo
xor
mov
jge
in
cld
add
ja
add
xor
dec
xor
mov
mov
mov
jns
into
or
push
nop
mov
inc
mov
xor
jns
pop
loope
inc
mov
push
sbb
push
call
test
sub
rcr
shlb
iret
sbb
adc
adc
jp
adc
sub
mov
mov
inc
out
cmpsl
sbb
mov
cli
or
pop
mov
pushf
movsb
xchg
test
cmc
aam
mov
ds
mov
imul
push
mov
aam
fs
repz
fsubrl
adc
jp
lahf
mov
xbegin
out
test
mov
push
lret
out
jmp
jo
mov
enter
sub
filds
mov
mov
mov
jns
or
add
sub
jl
imul
pop
sbb
shr
sub
inc
out
notl
mov
mov
xor
add
add
jns
adc
inc
pushf
clc
pop
xor
cmp
cmp
mov
sbb
or
test
stos
mov
lcall
and
adc
and
sub
jl
pop
aam
movsb
push
jae
enter
push
addr16
cmp
dec
addr16
in
scas
jge
pop
xchg
and
int
mov
pop
lods
cwtl
into
aad
sub
fistpll
pop
lcall
fimull
jmp
icebp
inc
mov
jnp
mov
dec
sub
xchg
pop
bswap
xorb
sti
test
inc
or
inc
stos
ret
and
push
imul
pop
and
push
lock
subl
imul
push
mov
xchg
outsl
jne
mov
pop
cmp
xlat
push
mov
or
push
sbb
jge
test
adc
pop
testl
addr16
sub
push
repnz
in
out
mov
clc
aaa
jns
mov
lcall
mov
dec
test
sarb
adc
cmp
sarb
jb
adc
jns
adc
sahf
sbb
fldt
push
out
pop
sti
mov
mov
hlt
push
mov
cmp
sub
scas
pop
cmpsl
mov
dec
pop
bound
out
scas
and
scas
in
jnp
sub
call
mov
adc
xchg
jnp
adc
popf
ficoml
hlt
lahf
popa
scas
dec
and
adc
divb
inc
popf
mov
lret
mov
out
push
cld
add
mov
push
inc
loopne
mov
xchg
gs
jp
or
jb
cs
in
jmp
rcpps
mov
cmp
jg
loop
dec
mov
outsl
scas
or
push
mov
movl
jae
push
and
inc
leave
sbb
push
and
sbb
jp
push
push
inc
mov
pop
fldt
mov
cmp
xchg
mov
sbb
das
out
xchg
cmc
xchg
and
mov
scas
rcll
dec
sub
push
push
or
xlat
in
mov
movsb
ds
aaa
pop
loop
jmp
mov
stos
push
push
into
inc
push
pop
dec
sbb
xor
push
cli
push
inc
inc
push
push
lods
sub
ss
ret
jnp
jp
js
ja
popa
xchg
xchg
cmpsb
dec
mov
ljmp
call
dec
mov
or
filds
cmp
xlat
jbe
jae
xor
shrb
xchg
divl
inc
mov
push
xchg
test
push
cmpb
inc
lods
mov
sbb
pop
loope
in
mov
enter
mov
test
lock
jecxz
inc
push
jb
sub
test
pop
xor
push
hlt
in
sbb
or
xor
or
mov
pop
mov
xor
push
lahf
dec
jb
jb
aad
int
inc
leave
xor
jmp
cwtl
cmp
jp
pop
jae
push
push
xchg
scas
outsl
and
test
lea
xchg
adc
sub
pop
fiadds
cmp
inc
jl
and
xor
xchg
leave
iret
lea
movsb
stos
add
les
mov
xor
push
int3
sub
out
cli
jl
xorb
cs
sbb
push
insl
andl
adc
data16
loopne
cs
push
sub
rcrb
pop
mov
mov
aad
push
loopne
cmp
inc
stos
movsl
adc
or
inc
xor
jecxz
mov
mov
add
ss
bound
loope
inc
les
fwait
pop
cli
daa
in
dec
pop
in
cmpsl
sti
fs
sub
inc
jg
stos
push
push
pop
jg
mov
fdivs
clc
cltd
cmp
in
or
sahf
inc
jb
enter
sbb
rcrl
push
mulb
aaa
pop
jl
sbb
sbb
outsl
fld
xchg
fldenv
das
adc
xchg
test
cs
mov
bnd
push
std
adc
push
fidivl
lock
xor
out
push
adc
xchg
cs
mov
icebp
jb
and
enter
adc
int
pop
or
bnd
mov
scas
mov
inc
pop
ficoms
push
inc
jmp
fistps
push
test
loop
lret
add
jg
inc
add
push
sbbl
push
mov
fwait
mov
mov
mov
mov
push
fs
lret
in
push
mov
xchg
adc
jge
push
adc
je
test
pcmpgtd
pop
cmp
shll
int
pop
in
cs
fwait
mov
and
fildl
movsb
mov
add
nop
stc
sahf
add
js
jl
outsl
in
mov
pop
pop
ror
or
lds
sahf
les
ljmp
into
sti
ret
sti
jae
jg
adc
fcomp
pop
pusha
xorl
aad
lahf
mov
data16
jns
push
pop
push
pop
jnp
fildl
xlat
jle
pop
jmp
pop
pop
mov
xorl
or
and
sub
out
dec
gs
push
popf
xchg
fs
xlat
xchg
mov
lods
and
in
and
ss
cli
mov
inc
fcomi
in
push
adc
cs
push
jp
push
sbb
out
pop
or
push
stc
gs
xchg
cmpsb
cmp
stos
popf
and
out
cmp
dec
mov
xchg
aam
mov
xor
lret
sahf
dec
xchg
sbb
fsub
in
xor
inc
fcomi
aam
xchg
cltd
out
test
xor
rcll
mov
and
fdivrp
nop
pop
or
jge
std
push
ficoms
int
sub
adc
repnz
xor
in
loope
mov
push
adc
adc
dec
gs
lret
testl
pusha
insb
sbb
and
loop
arpl
sub
adc
aam
or
outsb
testl
aas
fs
mov
adc
hlt
jl
sub
push
mov
mov
push
lea
xchg
in
adc
dec
mov
fwait
xchg
add
and
lods
mov
imul
inc
or
xchg
ret
push
mov
fwait
lea
and
xchg
adc
mov
push
addl
cltd
pop
push
jecxz
inc
inc
mov
bound
push
std
rcrl
push
xor
xor
and
in
add
or
out
repz
pop
das
loope
rorl
aam
or
fimull
roll
cmp
push
fcoms
jge
test
fs
pop
and
sahf
clc
stos
aaa
minps
push
idiv
outsl
xor
cmp
cmpsb
stos
pop
mov
insb
jge
pushf
mov
gs
xchg
fldenv
mov
leave
dec
mov
or
or
sbb
out
in
aas
in
mov
test
imul
gs
loopne
addr16
nop
dec
ret
cmc
xor
sub
lahf
repnz
dec
adc
adc
or
xchg
jns
mov
negl
mov
aas
xchg
jnp
mov
lret
xchg
repnz
mov
or
aam
mov
pushf
sbb
pop
add
cs
cmc
cmp
mov
out
mov
mov
sbb
add
mov
bound
pop
hlt
jge
inc
out
cmc
push
ss
push
add
push
dec
icebp
push
and
ss
aad
xchg
in
xor
and
fisubrl
mov
mov
in
xchg
mov
ret
rcll
xchg
int3
cmc
pop
jge
mov
sbb
jecxz
in
mov
ja
fmul
std
cmpsb
push
sbb
cwtl
cmp
and
xchg
int
cmp
movsb
mov
sub
jecxz
mov
pop
outsb
bound
lahf
hlt
test
and
lret
sub
mov
loop
or
pop
xchg
cltd
pushf
cmp
lret
xchg
dec
push
iret
aad
and
repnz
outsl
in
xor
xor
test
ljmp
mov
dec
or
scas
lods
cmp
pop
inc
mov
pop
jns
aam
mov
xor
add
dec
inc
pop
xor
dec
or
pop
xchg
out
mov
xchg
aas
fimull
inc
or
mov
pop
or
xchg
mov
push
inc
repnz
xorb
xor
bound
mov
shlb
pop
pop
iret
push
mov
lahf
divl
dec
push
jmp
or
jo
adc
in
mov
push
xchg
jo
mov
add
push
pop
arpl
sar
mov
fldl2e
out
jmp
lret
pop
daa
cmp
xchg
push
cmpsl
ss
pop
push
jle
inc
jns
inc
cmp
aaa
rcl
fwait
xor
push
mov
sub
sbb
pop
mov
sbbb
xchg
popf
addr16
mov
mov
scas
mov
inc
mov
cmc
addr16
xchg
ret
adc
repnz
add
or
add
icebp
jo
jl
test
xor
sub
jl
push
jmp
js
mov
es
pop
or
jo
or
push
xchg
jno
in
in
xchg
mov
push
setnp
sub
sbb
test
sub
dec
push
in
negl
inc
test
imul
xor
sbb
pop
in
push
push
jmp
icebp
mov
fdivs
mov
and
mov
adc
xchg
decb
icebp
or
push
test
shrl
mov
xor
inc
testb
add
pop
lcall
or
mov
test
lods
push
addr16
iret
dec
fwait
js
out
addl
xchg
rcr
push
cld
bound
pop
pop
xchg
test
pusha
mov
jbe
adc
aad
jo
adc
movb
aad
sahf
mov
mov
mov
enter
sbb
scas
xchg
ljmp
mov
dec
aas
mov
ret
xchg
lret
int
nop
call
push
inc
mov
addb
lret
dec
fscale
mov
das
xchg
xchg
sbb
fisttpl
add
out
jne
dec
popf
push
in
pop
sub
pusha
inc
imul
shl
jae
sub
jno
in
mov
les
pusha
push
fcom
out
mov
lret
int3
jbe
movsl
data16
nop
jbe
jbe
jg
enter
push
or
dec
aam
repz
sub
mov
in
and
mov
lds
rcrb
dec
jl
push
mov
pop
jne
je
dec
cli
or
fcomps
jecxz
mov
in
sbbb
cmp
cmpsl
mov
jecxz
mov
add
out
pop
les
clc
cmpl
ss
mov
loopne
roll
xchg
mov
mov
push
lock
push
shrb
fimuls
arpl
rcrb
cmp
je
nopl
fcompl
clc
mull
add
sahf
push
sbb
sbb
mov
cwtl
and
xor
jecxz
in
mov
mov
inc
test
sbb
mov
push
adc
sbb
mov
dec
cmp
fwait
push
jae
repz
pop
jg
cmp
pop
inc
leave
cwtl
js
dec
imul
cltd
lret
stos
jbe
scas
jmp
jae
push
pushl
or
lock
pop
test
mov
filds
cmp
in
popf
pop
cmc
jmp
adc
inc
push
cmpsb
cmc
test
jle
xchg
and
sub
pop
loope
fimuls
fwait
xchg
adcb
mov
cmp
mov
push
pop
cmpl
mov
fs
xor
dec
push
aad
das
push
cmpsb
imul
cmc
xor
ss
dec
clc
xchg
shl
rcll
sti
mov
pop
fs
mov
leave
test
jo
mov
jmp
pop
sbb
ja
and
jno
roll
dec
fsubs
ja
rolb
inc
ja
fisubs
cmp
in
xor
aas
jecxz
push
mov
or
fcmovb
add
std
push
test
into
notb
and
out
push
addr16
xlat
int
enter
mov
push
les
lret
or
mov
cmp
cmpsl
mov
mov
leave
insl
into
sbb
cmpsl
lahf
xchg
sahf
push
repnz
ds
call
xor
jmp
dec
push
out
jg
dec
xor
aad
lock
pop
mov
fisttps
stos
imul
add
sbb
jno
sub
cmp
or
cmp
andl
inc
mov
adc
jle
xor
filds
push
xchg
cmpsb
lret
movsb
sbb
rclb
jecxz
xchg
adc
jbe
xlat
incl
leave
repnz
jbe
xlat
or
pop
cli
sahf
adc
xchg
push
push
inc
jl
pushf
test
sub
test
outsb
aas
clc
mov
test
and
jns
or
movsb
pop
xor
test
in
or
test
outsb
dec
int
jl
add
lret
cmp
sub
repz
ds
pop
aam
dec
cmpb
gs
push
push
mov
outsl
jmp
pop
rcll
and
scas
jno
cmp
add
lods
adc
pushl
adc
pusha
popa
in
pop
aaa
ja
push
outsl
mov
mov
or
rcrl
not
cmp
push
into
into
enter
outsl
popf
xor
dec
bound
aad
or
imul
jne
fbld
gs
sarl
push
jno
sub
inc
shlb
adc
adc
dec
xor
aam
fistps
cmpb
lock
xchg
ljmp
adc
add
xchg
mov
or
pop
inc
shl
je
xchg
movsl
inc
jns
aam
loop
pop
jne
dec
in
sub
mov
mov
mov
daa
fists
cmp
dec
lods
or
add
xchg
lret
syscall
mov
pop
push
inc
stc
movsl
not
sti
test
repz
adc
inc
data16
and
add
adc
out
aad
and
sub
xlat
aad
clc
das
hlt
sti
add
pop
test
dec
cmp
sahf
jnp
pusha
pop
ljmp
push
mov
dec
sbb
xchg
add
sub
mov
cmpb
inc
in
mov
cmp
inc
test
sub
outsl
cmpsb
ds
aad
ret
negb
sub
xorb
push
jmp
add
add
inc
jge
repz
sbb
pop
inc
fst
push
repnz
jns
fldl
pop
fldl
pop
fs
mov
lret
mov
pop
imul
jmp
clc
inc
inc
xchg
add
add
ret
pusha
jb
stc
flds
and
shll
jno
jns
out
loop
and
hlt
stos
add
ja
adc
inc
mov
dec
out
jecxz
xlat
xchg
loop
popa
orl
sti
mov
outsb
lods
cmp
pop
and
and
sub
lahf
dec
jg
adc
aam
or
movsb
aaa
mov
xor
jle
out
imul
ret
add
sub
lods
fists
loope
repz
cmp
sbb
xor
mov
xchg
cmp
inc
lcall
lds
mov
xchg
dec
cld
dec
aaa
pop
or
pop
xchg
xor
add
inc
flds
les
test
xor
sub
inc
shll
mov
push
call
lcall
sub
dec
push
test
inc
mov
popa
ja
fidivrs
and
sbb
lcall
nop
cmp
cld
lods
jle
cmc
imul
loopne
mov
fdivrp
dec
int
mov
mov
lret
ss
mov
mov
ljmp
in
mov
jnp
xchg
sub
and
clc
rclb
xor
ja
and
and
ret
decl
pusha
add
fstl
jno
jbe
and
mov
cmpsl
jb
lret
stc
insb
inc
sbb
xor
and
xchg
mov
sbb
mov
sbb
push
es
scas
cmp
dec
sub
loopne
gs
mov
daa
stc
fiadds
jecxz
jl
std
or
cld
es
xor
scas
pusha
adc
fidivrs
loop
cli
adc
sub
shll
mov
xchg
mov
bound
fcomip
les
add
popa
xor
fs
or
xorl
inc
in
movsw
sbb
lock
mov
pop
scas
jbe
pusha
push
cmp
jo
int3
test
out
daa
pop
in
push
sbbl
into
and
fildll
dec
into
pop
ret
inc
adc
test
icebp
movsl
jns
cmpsl
cs
pop
cmc
inc
adc
cmp
std
push
in
hlt
mov
andb
sub
or
push
mov
les
pushf
sti
dec
xchg
adc
cmpsl
int
sub
xchg
inc
mov
fwait
adc
jae
jp
out
cmp
lahf
dec
adc
xor
sbb
add
and
mov
pop
pop
dec
divl
leave
addb
xchg
xchg
lods
pop
sub
test
mov
pop
aas
popf
sub
js
xchg
popf
xchg
cli
xchg
rcrl
in
popa
jnp
sub
sub
cs
sbb
jnp
jle
imul
rcrl
pop
pop
pushf
and
and
das
cmc
inc
sub
cmc
adc
xchg
cld
xchg
mov
pop
lret
xor
and
pop
push
mov
ds
rcrb
pop
imul
fstps
cld
cltd
and
xchg
dec
jne
fbld
std
in
lock
ja
or
pop
bound
leave
push
push
mov
sub
sub
mov
int3
xor
fwait
pop
adc
outsl
and
test
imul
dec
pop
fcompl
test
sub
add
lea
pop
mov
inc
sub
jp
icebp
in
and
or
insb
daa
pop
sti
aam
or
andb
lock
mov
and
call
notb
lahf
ljmp
jnp
stos
or
nop
or
dec
incl
xchg
add
xchg
xor
mov
sub
and
and
pop
cmp
add
movsb
push
jmp
mov
rcrl
lock
test
je
call
jge
mov
push
add
scas
sbb
int
cmpsb
in
test
popa
cmp
in
stos
or
jecxz
adc
orb
movsl
addr16
cmp
jbe
sbb
dec
xchg
and
adc
enter
outsl
add
xchg
rcll
mov
inc
sub
stos
in
xor
adc
mov
xchg
lds
seta
into
les
repnz
scas
fisubrs
fcmovu
fmuls
and
cmp
inc
ja
stos
and
mov
jae
scas
test
xchg
and
dec
test
insb
mov
in
test
pusha
stos
cmp
mov
add
jo
mov
mov
push
lret
xlat
scas
insl
lods
rorl
rcrb
and
cli
lods
sub
fistpl
mov
push
in
dec
or
fwait
dec
mov
mov
and
dec
je
lea
mov
push
das
mov
dec
daa
mov
in
jecxz
mov
push
xchg
scas
roll
adc
test
into
dec
fstpl
pushf
mov
clc
xor
sbb
into
mov
pushf
inc
sbb
mov
dec
sbbb
shll
pop
add
add
xchg
aaa
mov
push
data16
popf
dec
mov
mov
xor
jne
inc
sbb
mov
xor
hlt
mov
xchg
xor
fisubs
jno
leave
xor
jmp
mov
insl
repz
adc
stos
dec
int3
adc
in
push
leave
pop
je
add
mov
pop
jno
adc
or
aam
lahf
test
adc
dec
out
or
out
ds
mov
pusha
jno
gs
xchg
push
cwtl
movsb
xor
stc
out
popa
mov
jle
xor
scas
sub
stos
and
insb
mov
cmp
pushf
lret
sbb
rol
inc
mov
cmp
in
sbb
testb
add
jb
ds
sbb
add
fwait
and
in
repnz
add
cld
fmul
lds
mov
mov
or
push
scas
push
enter
mov
std
ds
mov
enter
lea
aam
incl
aad
shrl
and
mov
popa
orl
jmp
mov
gs
aam
fsubrs
into
add
sbb
mov
inc
test
clc
jo
or
mov
mov
pop
add
push
aam
pop
mov
xchg
fmull
cmp
jb
outsb
nop
call
mov
ret
cmp
cmpl
inc
or
icebp
jae
call
gs
outsl
adc
xchg
clc
into
out
dec
and
enter
outsb
xchg
mov
cmp
xchg
jle
in
sti
cmc
lods
repz
fsubl
mov
sub
test
fstpl
mov
ret
mov
fs
jae
xor
lods
pop
add
xchg
das
mov
mov
pop
mov
sub
mov
jge
sub
xchg
loopne
jns
scas
sbbb
outsl
sarb
sbb
fsubp
mov
mov
gs
and
pop
addr16
and
insl
push
adc
or
das
ds
mov
lahf
pop
pushf
lret
stc
mov
push
into
mov
xchg
sarl
pusha
mov
xor
push
idivl
mov
xchg
test
pop
lret
cld
jecxz
mov
or
js
ret
out
dec
inc
adcb
mov
cs
pop
dec
push
arpl
in
fnstsw
add
and
enter
popa
mov
mov
pop
icebp
popa
jle
dec
loope
jne
push
jb
cmp
and
in
addr16
cs
ss
add
pop
movsl
xchg
sbb
add
outsb
repz
xor
incl
mov
inc
pop
push
enter
ljmp
push
pop
cmc
lcall
mov
add
mov
cwtl
xor
push
iret
jp
fsts
xchg
fdivrs
mov
xchg
repnz
lret
cli
sbb
jb
pop
cs
rcrb
xor
inc
insl
nop
or
test
adc
gs
push
sub
jbe
push
addl
pushf
dec
dec
or
es
or
mov
sub
lods
jo
roll
pop
xchg
sub
push
and
jbe
jb
adc
sbb
mov
sub
add
ret
jg
push
out
adc
or
pop
bound
lods
add
into
push
lcall
adc
mov
sub
mov
std
dec
es
sub
jne
outsl
and
pop
mov
fcomps
cmp
test
xor
sarl
and
or
pop
push
push
push
dec
insl
fsts
inc
sahf
pop
xor
adc
lret
sub
cmpb
mov
popa
jecxz
rorl
rorl
test
test
cmp
xchg
mov
mov
dec
mov
push
jns
jmp
push
xor
mov
xchg
in
and
push
int3
repnz
jmp
icebp
inc
mov
sbb
shll
push
dec
and
movsb
jle
xchg
lock
push
jb
sub
stc
cmp
sbb
jo
jl
adc
notb
stc
bnd
dec
mov
sbb
inc
stos
adc
dec
aaa
repz
jle
lods
popa
cmp
push
push
test
adc
in
fucomp
dec
mov
aam
or
insb
lea
rclb
ror
test
or
rolb
les
test
outsb
mov
add
cwtl
xlat
cld
sub
enter
inc
fcomi
mov
push
out
push
fs
jge
sub
test
ljmp
mov
pop
sbb
subb
mov
dec
es
push
sbb
sub
dec
adc
fxch
out
push
or
out
in
subl
insb
out
mov
lret
aaa
mov
mov
sub
cld
cmpsb
adc
jo
dec
call
std
cs
sub
sub
jae
dec
aad
add
popa
call
fdivs
cmp
popf
xchg
pop
sub
arpl
mov
inc
jle
enterw
mov
pop
xchg
jp
cmp
jge
out
push
dec
sahf
insl
insl
fwait
cld
inc
or
dec
in
dec
stos
sbbb
out
std
lods
cli
imul
jecxz
cltd
setp
daa
mov
les
rorb
bound
fcomps
jno
sub
jg
push
std
int
shll
push
cmp
in
hlt
mov
pop
sbb
and
jmp
loop
stc
xlat
jge
mov
cmpsl
push
jns
cmp
push
sub
iret
in
xchg
sub
add
inc
je
fdivrl
ja
xor
addr16
xlat
popf
fdivrs
data16
jg
pusha
sbb
pop
test
push
stc
inc
or
inc
mov
jb
and
fistps
jb
or
inc
mov
into
stos
popa
and
jge
jg,pn
xor
mov
push
jl
test
mov
and
lcall
lods
jmp
les
dec
jg
aas
fildll
mov
fwait
jo
insl
and
call
ret
pop
sbb
inc
adc
inc
mov
stos
and
test
adc
push
fbstp
xchg
inc
les
inc
cmp
fwait
std
cmpsl
icebp
cltd
sub
fnstcw
jne
adcl
jbe
inc
cwtl
sbb
aas
adc
jp
cwtl
fists
movsl
lcall
jp
imul
fisubrs
dec
imul
nop
aad
notb
push
addr16
test
es
push
aaa
mov
test
aaa
notl
push
ret
out
mov
inc
push
mov
inc
mov
adc
pop
outsl
imul
ret
fsubr
xchg
in
in
adc
mov
movsl
inc
sub
rorb
jmp
test
loope
addb
jns
int
out
xchg
adc
ret
xchg
or
jecxz
sbb
cli
add
lea
xchg
js
or
mov
stc
mov
jb
mov
adc
out
mov
aaa
fs
inc
push
xchg
mov
sub
fistpll
push
xor
into
jmp
jbe
sbb
add
in
mov
bound
repnz
xchg
push
or
jp
pop
add
je
xchg
icebp
cmp
xor
inc
movsb
jge
cmc
dec
cli
sub
add
cmp
cmpsl
sbb
dec
dec
cld
mov
pop
mov
movsb
es
imull
in
cmp
into
or
adc
ret
pop
push
xchg
xlat
call
sbb
mov
push
adc
notl
jbe
xlat
xlat
and
adc
sbb
popa
movsl
stos
xchg
mov
out
outsb
ljmp
out
adc
xchg
popf
lds
scas
icebp
jns
aaa
mov
movsb
sbb
jg
jo
lret
lods
pushf
pop
popf
es
xlat
and
lret
pop
ja
ja
psllq
cmp
push
sahf
mov
sub
jns
mov
mov
mov
adc
sarl
hlt
xor
inc
nop
fcmovnu
and
in
and
test
mov
mov
jmp
add
fistpl
cmpsb
push
out
addb
cltd
int
jns
popf
dec
mov
cmp
cmp
mov
mov
push
xchg
xchg
lcall
xor
mov
add
mov
stos
dec
cmc
jmp
xchg
push
mov
add
ret
mov
rcll
lea
popf
in
imul
xor
pop
adc
and
dec
inc
mov
das
pop
dec
push
xor
inc
push
cmpsb
dec
jno
xor
fs
push
jnp
and
pop
xchg
adc
out
inc
and
xchg
sbb
insb
enter
flds
mov
push
out
lahf
rorl
xchg
lret
mov
dec
das
adc
jne
inc
faddp
fwait
inc
mov
xchg
outsb
mov
sbb
lock
les
mov
or
testl
dec
push
push
lret
fcmovnbe
mov
cmp
dec
push
jnp
mov
sub
shl
jl
xorl
and
jae
int
mov
pop
and
adc
push
push
icebp
inc
lret
cld
roll
jmp
ljmp
pop
stos
scas
and
ret
mov
or
clc
fwait
mov
adc
or
mov
inc
imul
mov
mov
cmp
gs
lahf
cmp
mov
dec
add
sub
scas
xor
add
mov
es
repz
and
imul
bound
pop
scas
stos
ret
dec
ret
dec
imul
sbb
push
sbb
cmp
fldl
pop
mov
lods
call
lret
sub
xchg
hlt
dec
or
push
mov
cmp
jl
imul
icebp
fisubs
sbb
leave
insb
ljmp
fadds
xor
in
ret
pop
addr16
mov
add
xchg
cmp
sub
outsb
aam
test
mov
adc
pop
jbe
pushf
in
mov
pop
adc
out
and
je
sub
loopne
lods
stos
cwtl
in
jo
mov
cmpl
and
repz
pop
scas
int
dec
and
loop
aas
dec
xchg
or
mov
pop
ror
jbe
pushf
fmull
sub
adc
fwait
addr16
mov
leave
xchg
push
imulb
inc
data16
cwtl
imul
leave
cld
cmp
out
inc
nop
outsl
lret
mov
lds
mov
add
sti
test
sbbl
lock
stos
outsb
mov
into
movb
in
mov
xor
sub
and
jne
cwtl
repz
dec
jbe
jns
in
call
rclb
js
cli
jns
xchg
jecxz
outsb
stc
mov
jmp
pop
leave
xchg
pushf
fiaddl
mov
cmpsb
xlat
sahf
ror
insb
test
and
hlt
scas
outsb
jl
xchg
cmpsb
mov
cwtl
cmc
or
jae
pop
jae
outsl
xor
jp
pop
mov
cmp
lods
pop
fidivrs
push
xlat
pop
pop
out
xchg
fs
adc
aad
dec
fldl
popa
xchg
arpl
pushf
xor
sub
clc
push
lret
xchg
dec
xchg
jg
nop
incl
int
call
repnz
insb
loope
cmpsb
dec
mov
push
or
inc
and
xor
or
mov
lcall
or
dec
sahf
icebp
cmpsb
popf
and
lods
jno
fs
jle
mov
adcb
xor
sub
mov
jmp
cmp
adc
insl
inc
or
ja
les
aas
lea
jecxz
mov
or
jbe
pop
addr16
pop
adc
push
pop
es
mov
jmp
dec
xchg
addr16
loopne
mov
pop
pop
mov
sti
in
jle
test
scas
xchg
push
cmpsl
push
das
test
lea
mov
xor
scas
mov
fidivrl
push
and
adc
lods
xchg
mov
imul
pusha
stos
jns
or
jp
paddsb
rcll
out
ds
or
and
aad
xchg
push
adc
lea
dec
add
movswl
pop
and
xchg
fsubs
test
mov
dec
cmp
icebp
ss
loope
and
mov
push
add
and
js
mov
jp
xor
xchg
xchg
ljmp
jmp
fwait
cmp
ljmp
sbb
into
int3
or
jp
cld
ljmp
mov
xor
adc
mov
or
dec
call
jl
fimull
jno
addr16
ljmp
jg
stos
and
pushf
mov
gs
pop
fidivrl
pusha
or
push
inc
sub
cmp
clc
mov
pop
fdivl
inc
stos
pushf
xchg
repnz
loope
inc
xor
mov
les
or
cld
roll
mov
pushl
push
mov
pusha
icebp
movsl
push
or
pop
lock
imul
inc
fdivr
out
dec
enter
push
popa
xor
daa
jb
cld
jecxz
outsb
push
pop
xchg
fisttps
sbbl
xlat
xor
add
testb
jmp
movsb
lock
cmp
inc
mov
jmp
dec
test
sarb
mov
outsl
mov
addb
push
shll
xchg
and
mov
das
xchg
xor
outsl
ljmp
jbe
push
push
inc
cmp
jbe
xchg
and
dec
sbb
js
std
mov
call
movsl
push
cltd
fcompl
and
push
add
mov
xchg
jl
cmpsb
pop
xchg
jle
or
mov
aad
out
mov
pop
jle
stos
sub
int
jnp
test
hlt
mov
add
cmp
jo
arpl
push
pop
jecxz
in
xchg
sbb
add
cli
pop
inc
mov
xchg
dec
hlt
inc
popa
mov
and
sub
mov
cmp
rol
movb
mov
test
pop
sbb
sbb
or
and
jo
mov
nop
popa
test
add
jnp
out
popa
cmp
repnz
cmc
std
in
adc
gs
push
imulb
mov
pushf
cs
addr16
in
out
mov
in
mov
vpcomud
push
adc
scas
jns
pop
inc
inc
fsubrp
or
add
popa
lahf
ss
mul
jl
ja
lahf
jae
testl
cltd
xchg
mov
test
std
fcoml
lahf
iret
pushf
aas
ljmp
fstpt
insb
je
aam
std
mov
sbb
ret
add
jmp
dec
imul
mov
push
fcoms
in
icebp
mov
test
jo
or
or
lea
mov
pop
jl
push
xchg
enter
push
mov
pop
addr16
out
arpl
sub
push
rclb
mov
cmpsl
and
or
inc
shrl
shrb
or
push
xlat
fsub
push
test
and
pusha
divb
test
adc
cld
pushl
jge
xchg
dec
push
dec
and
lds
arpl
dec
adc
sar
mov
or
push
ljmp
fildl
mov
scas
cmpsl
fdiv
into
scas
xor
ss
outsl
andb
xor
push
xlat
pushf
pop
rolb
adc
and
ja
aas
push
cli
mov
xorl
stos
add
xor
fiaddl
mov
sbb
incl
sub
icebp
xchg
fsubrl
sbb
and
cmp
xchg
jg
push
mov
test
inc
mov
sbb
mov
mov
scas
daa
xor
cli
mov
in
jne
rcrl
dec
push
cmpsb
adc
rcl
fimuls
push
sub
or
cmp
shll
mov
icebp
ret
pop
andl
xchg
mov
dec
repnz
filds
and
push
or
adc
push
jmp
sub
mov
pop
negb
xor
out
clc
fnstsw
sub
addr16
pop
push
js
scas
rcrb
xor
lcall
pop
addr16
inc
insl
int
popa
mov
inc
sbb
dec
xor
stc
mov
mov
mov
push
add
push
xor
xor
shll
mov
mul
aad
add
push
pusha
xchg
pop
dec
push
in
inc
movsl
stos
cli
adc
push
cmp
jle
dec
mov
lea
lds
xchg
imul
icebp
inc
mov
in
mov
xchg
daa
push
jb
pop
mov
mov
mov
addr16
adc
mov
test
loope
adcb
shl
sti
fmul
fidivl
das
fildl
ss
or
movsb
pop
stos
scas
mov
ret
in
enter
out
sbb
push
xor
daa
sbb
dec
lea
jne
mov
jl
lret
ljmp
pop
sarl
loopne
movsb
sbb
mov
mov
lea
pop
mov
jp
xor
add
jo
mulb
ds
pusha
inc
push
dec
xor
push
mov
inc
adc
and
int
shl
mov
adc
sbb
cmp
test
or
in
fs
pop
sub
addr16
sub
into
movsb
sub
mov
xor
mov
jne
rcrl
sbb
xor
outsb
iret
loop
push
out
xor
xlat
cld
push
outsb
hlt
out
out
pop
pop
scas
lods
mov
hlt
jge
cmp
test
cmc
scas
add
xor
sub
pop
mov
push
ds
xor
icebp
push
dec
or
push
and
mov
jns
aam
push
mov
pusha
dec
sub
xchg
jmp
xor
nop
mov
and
mov
adc
push
scas
add
gs
scas
mov
dec
xchg
or
in
imul
cmpsb
in
dec
push
loop
cwtl
and
loope
sahf
mov
lods
gs
call
rorl
int3
outsl
jecxz
leave
leave
jb
jae
cld
xlat
xlat
out
jmp
dec
xchg
inc
loop
rolb
xchg
das
dec
std
mov
xchg
xchg
fnstenv
xchg
aas
popa
mov
cmp
jns
xchg
loope
cld
add
dec
pop
xorl
adc
push
pop
ljmp
add
inc
outsl
adc
mov
sub
mov
rolb
mov
mov
nop
cmc
ljmp
and
jl
xchg
jecxz
insb
sub
push
adc
mov
push
push
int
adc
push
cs
lret
fiaddl
out
xor
mov
push
and
in
pop
mov
mov
sarl
lds
cmpsb
xchg
shlb
ds
add
mov
sub
adc
xor
out
outsb
jae
ret
jl
pusha
fstpl
jb
cs
mov
ret
dec
inc
sbb
mov
adc
in
test
jo
xlat
xchg
std
ds
mov
in
mov
ret
mov
add
ljmp
mov
jbe
lahf
cmc
cltd
push
mov
jnp
cltd
out
fptan
add
scas
sub
mov
mov
pop
in
or
jns
push
cmp
mov
ss
mov
das
inc
in
xor
nop
push
mov
out
rorb
cmpsl
in
mov
inc
test
jle
inc
int
popf
jae
cltd
mov
push
jp
mov
ret
mov
cs
pop
pop
push
add
inc
insb
pop
mov
pop
add
bound
sub
cli
pop
inc
mov
repz
pop
in
testb
loope
xlat
adcl
jns
push
pop
gs
cs
out
xor
pop
stos
mov
push
sub
sbb
pop
jo
xchg
cmp
lcall
sbb
ret
cmp
rcrl
out
es
jnp
cmp
mov
out
rcrl
rcrl
jbe
pop
xchg
inc
xor
sysexit
movsl
daa
daa
sub
popa
or
inc
xchg
mov
pop
mov
rcrb
pop
push
es
mov
shrb
in
mov
add
pop
add
mov
js
dec
inc
mov
test
mov
mov
add
or
inc
lret
push
jno
xchg
pop
mov
fs
push
outsl
lret
aaa
jle
and
lods
adc
dec
mov
stos
mov
test
fimull
ss
add
and
std
adc
and
loop
jp
inc
push
lahf
xor
sub
mov
enter
mov
pop
sub
and
insl
fwait
loope
sti
mov
out
filds
jnp
or
fwait
test
leave
mov
or
mov
fcmove
stos
test
lret
add
adc
movsl
xor
fildl
fisubrs
jmp
mov
inc
mov
jl
mov
dec
push
pop
repnz
movsl
push
or
dec
adc
push
js
mov
dec
sbb
outsl
ficoms
mov
pusha
je
cmp
dec
sbb
nop
mov
rol
sarb
or
jle
nop
inc
lret
adc
push
push
mov
push
std
cmc
nop
leave
roll
and
sarl
cs
popf
rclb
mov
sub
pushf
pushl
push
adc
fbld
sahf
push
clc
mov
adc
cld
sahf
lods
int3
and
xchg
and
dec
in
cmp
sub
shrl
jle
inc
mov
fwait
outsb
mov
cmc
outsl
loope
inc
dec
notl
sub
in
xor
push
jbe
lcall
jecxz
addl
or
lcall
je
mov
adc
jg
adc
sbb
lret
mov
xor
lret
sahf
fstps
jb
scas
dec
xor
lods
daa
mov
mov
das
cmpsl
popf
lret
or
push
insl
out
stos
stos
jne
call
adc
stos
add
loope
mov
fs
push
xor
adc
mov
mov
dec
popa
lahf
jecxz
jmp
pushf
xchg
inc
lods
nop
mov
push
nop
outsl
push
push
scas
movb
cli
jge
fdivrl
enter
mov
fdiv
or
add
popa
inc
in
sub
xchg
mov
pop
repnz
mov
push
cmp
out
jmp
mov
pusha
push
out
jae
jbe
mov
or
outsl
jne
dec
xchg
fwait
pop
adc
sub
xchg
sub
jbe
or
pop
enter
jo
push
adc
mov
lods
dec
hlt
and
dec
imul
add
pop
aas
inc
mov
cmp
cmp
in
push
sbb
inc
and
mov
inc
and
dec
pop
daa
mov
repz
xchg
pop
mov
sbb
jo
pop
mov
push
rcrb
push
out
add
outsl
es
insb
fwait
rcrb
push
fldenv
push
out
push
out
adc
cli
xchg
shrb
stos
insb
and
xchg
aad
xor
sahf
out
dec
filds
hlt
xor
cli
adc
cmpl
or
nopl
jecxz
lcall
jl
test
push
add
cmpsb
xchg
push
push
adc
or
adc
lea
nop
and
sbb
cmp
out
or
jbe
sbb
push
repz
pop
outsl
inc
mov
fsubrl
lock
test
pop
jmp
cmp
xchg
sbb
sub
cmp
and
sbb
cmp
popf
pop
add
push
aaa
mov
sub
or
ljmp
or
xor
sbbb
repnz
inc
das
dec
jns
ret
or
mov
fisttpll
pop
push
add
adc
fnstcw
jge
push
out
mov
xor
jmp
pop
adc
pop
and
pop
or
ja
and
pop
push
addr16
xor
sub
adc
push
add
or
adc
stc
mov
icebp
rolb
test
add
jne
stos
lahf
push
mov
clc
rcrb
in
std
mov
aad
and
lds
cmp
popf
lock
add
sbb
xchg
mov
or
mov
cmpsb
xor
dec
mov
cmc
sbb
cmpb
sub
dec
dec
fmuls
inc
push
or
mov
aam
or
flds
pop
out
cmpl
and
pushf
add
cmp
sysret
push
sahf
adc
sti
sti
cwtl
or
fldt
xchg
cmc
das
lcall
sbb
inc
pop
xor
jg
hlt
cltd
sub
sbb
mov
cwtl
jnp
mov
adc
sub
iret
ror
aad
stos
mov
xchg
cmpsb
mov
sub
mov
cld
inc
mov
push
add
scas
mov
xor
pop
mov
xchg
aas
add
lock
icebp
pop
mov
lcall
cmp
mov
outsl
xor
push
arpl
xchg
mov
and
cwtl
icebp
lret
in
pop
mov
jl
push
jno
pusha
lcall
xchg
out
mov
loope
enter
dec
test
in
adc
inc
xor
gs
add
fsubrp
sbbb
push
stos
stos
mov
lock
jl
das
sub
imul
sub
sbb
inc
sti
xlat
or
rcrl
xchg
sbb
and
mov
inc
sub
jl
out
xchg
lahf
push
xor
mov
pop
pop
lahf
xchg
pop
inc
addr16
inc
cli
in
mov
push
xchg
stos
ljmp
mov
push
addr16
cmp
xor
mov
in
cmpsb
adc
mov
lcall
push
pop
shll
or
hlt
push
jmp
int
ljmp
cmc
ja
mov
cmp
je
ds
push
lods
fdivrp
lahf
mov
faddl
scas
dec
pop
pop
jecxz
pusha
out
popa
fldenv
cmc
or
loope
sahf
mov
pop
icebp
fwait
add
inc
std
das
out
stos
inc
jbe
sti
or
test
hlt
int
pop
cmpb
jle
and
mov
out
jnp
xchg
shlb
iret
xchg
sub
sub
mov
mov
or
cmp
and
ficoml
arpl
dec
gs
push
mov
cbtw
add
in
cmpsb
loope
rcr
dec
cmp
dec
mov
popa
into
dec
add
jp
fstpl
mov
mov
push
daa
mov
and
shll
or
fmul
in
inc
lea
clc
push
jmp
popf
bound
minps
outsl
outsl
xchg
mov
imul
scas
cmpsb
or
xor
inc
fwait
pop
xchg
or
fdivl
add
mov
xor
dec
inc
jmp
add
repnz
bound
shlb
jno
push
rcpps
pusha
inc
mov
xor
das
leave
add
fwait
lods
jle
mov
sbb
in
lea
or
push
inc
je
dec
mov
mov
push
jb
loop
popl
ret
orl
data16
stos
jnp
or
adc
mov
les
add
jno
xor
daa
int3
arpl
sbb
fisttpl
xchg
mov
sbb
dec
gs
lea
and
cs
vaddps
cmp
lahf
in
xchg
hlt
fdivs
and
push
shlb
ljmp
or
mov
stc
sub
xor
pushf
or
pop
test
or
adc
dec
add
dec
cmpsb
lock
and
mov
repnz
hlt
xchg
inc
jns
cmp
cmp
iret
insl
pop
lahf
push
sbbb
mov
xlat
test
and
ret
mov
xchg
cmc
mov
jnp
in
mov
dec
xchg
test
in
inc
fcos
sbb
push
outsb
mov
mov
lods
sub
clc
stos
or
push
add
cld
push
loope
jne
cmpsl
clc
push
clc
bound
xor
push
push
xor
cld
movsb
call
xor
aam
or
inc
cmp
mov
mov
repnz
or
fidivrs
xor
inc
push
lahf
jge
fwait
dec
pop
adc
jno
push
push
outsb
dec
add
int
xor
pusha
xchg
shll
daa
or
push
xchg
ret
mov
jge
sbb
pushf
xchg
cmp
inc
push
int
sti
addl
and
pusha
inc
dec
lds
jo
hlt
mov
add
aam
pop
sbb
std
jb
jb
xor
xchg
add
push
mov
stc
lods
adc
enter
scas
adcl
pop
or
pop
hlt
inc
mov
aad
fucompp
xchg
fidivrl
mov
lods
push
pop
stc
adc
fidivrs
sbb
sbb
xor
fcmovbe
fs
jbe
jl
mov
into
rcr
jle
lcall
push
sti
pop
enter
loop
or
and
pop
xor
sbb
roll
jne
cmp
push
and
pop
push
cs
or
ja
and
int
push
test
mov
popf
int3
sub
and
insb
nop
or
cmpsl
jae
stos
lcall
pop
cmp
mov
mov
mov
cmp
lret
and
sahf
hlt
movsl
mov
fs
sbb
or
jl
sub
notb
and
mov
js
fisttpl
pop
dec
mov
push
mov
and
lret
cmpsl
jns
jbe
lds
lcall
aad
shrb
out
mov
mov
cltd
xor
xchg
and
fsts
decb
mov
mov
stc
mov
nop
rcll
dec
mov
adc
dec
clc
inc
jae
das
and
das
jnp
xor
mov
cwtl
or
and
clc
outsb
or
xchg
mov
imulb
hlt
and
andl
dec
mov
mov
ja
inc
int
shlb
or
into
out
leave
popa
in
sahf
mov
dec
jbe
or
dec
xchg
enter
xor
cmp
sti
xor
outsl
cmp
jmp
in
pop
xchg
jg
xor
sub
mov
xor
bound
lds
mov
cs
jns
insb
add
xchg
fs
mov
add
mov
cltd
mov
pop
mov
add
mov
sub
mov
xchg
push
mov
and
cmc
pop
sub
outsb
aam
mov
call
lret
dec
int3
test
jge
mov
cmp
lahf
inc
lcall
adc
inc
jecxz
das
dec
pop
fcmove
ja
dec
lss
mov
andl
mov
jge
inc
or
xchg
roll
xchg
arpl
sbb
inc
or
or
pusha
sti
or
mov
xor
ret
cs
rclb
repz
pop
fwait
or
jle
shll
fimuls
cmp
dec
mov
inc
repnz
into
and
mov
movsl
in
or
cmp
iret
shl
push
pop
jle
mov
stos
dec
xor
jno
pop
cld
mov
jb
pop
dec
sti
xor
inc
fstl
pop
imul
xlat
or
rol
jns
pop
mov
or
inc
scas
xlat
cmpsl
test
mov
andb
out
push
repnz
cli
hlt
xor
sub
or
adc
dec
insl
jbe
lea
mov
fstpl
pop
je
jp
fcompl
fidivrl
ret
gs
in
or
popf
jmp
mov
in
adc
jl
mov
mov
or
or
dec
push
push
daa
pop
cmp
fnstenv
outsb
push
and
xor
cltd
adc
mov
and
push
mov
insb
aas
pop
inc
xor
ret
adc
sbb
adc
xor
cmc
or
call
inc
popa
mov
iret
pop
adc
mov
jg
xchg
fnstenv
adc
push
sbbl
aaa
mov
mov
dec
cmp
out
jo
pusha
mov
psubb
xor
or
cmp
pop
xchg
subb
push
or
push
repz
jno
sub
mov
sbb
aas
push
or
adcl
xor
sbb
xor
cmp
mov
mov
jno
movsb
cltd
jp
sbb
sub
mov
cmpsl
mov
fisttps
push
or
daa
dec
fsubs
daa
dec
mov
int3
clc
out
mov
pop
imul
sbb
es
mov
inc
stos
mov
pop
push
fildll
and
pop
loop
mov
adcl
xchg
mov
mov
stos
lret
ror
mov
hlt
je
mov
pop
fbstp
arpl
xor
mov
cmp
push
out
test
xor
imul
shrb
aaa
stos
pusha
pop
popf
test
ja
mov
out
daa
cltd
nop
or
pusha
icebp
in
inc
adc
fnstsw
lds
icebp
mov
mov
fwait
int
dec
xor
push
xchg
push
nop
rcr
dec
inc
mov
xor
cmovno
mov
lahf
cltd
in
fs
dec
arpl
mov
popf
cltd
adc
fldt
stos
jl
sub
rcl
adc
sbb
out
es
movsl
inc
ja
loop
jnp
andb
push
orl
or
stos
les
ret
fimull
les
and
sar
pop
push
int3
push
rorb
add
lea
mov
jp
movsb
fisttps
gs
dec
rcrl
push
lds
loopne
outsb
ficompl
out
lret
sbb
adc
dec
popf
xchg
std
je
ficoms
adc
add
shlb
jo
call
aaa
clc
cmpsb
out
sarl
cltd
inc
dec
test
cs
xchg
ss
push
mov
mov
push
imul
icebp
imul
xchg
divb
test
xor
xor
out
push
orb
fwait
mov
jle
pop
iret
iret
imul
jmp
lret
xchg
in
push
dec
mov
push
xchg
mov
mov
push
or
inc
mov
adc
div
cwtl
fcmovb
mov
inc
sbb
mov
or
dec
adcl
pop
sbbb
mov
aad
ret
xor
cs
ljmp
out
inc
movsb
sub
cltd
pop
xor
clc
inc
out
je
jmp
ss
scas
sbb
jae
gs
repnz
call
inc
outsl
xor
or
adc
scas
and
cmp
stos
in
lea
dec
stos
mov
lahf
inc
jbe
xorl
out
in
loope
or
test
lods
mov
mov
cmp
repz
lcall
mov
dec
leave
shlb
mov
mov
lcall
dec
pop
nop
or
lret
mov
jg
lcall
mov
xor
or
pop
mov
scas
xor
ficomps
lret
cmp
xor
subl
decl
and
out
std
push
dec
loopne
std
pop
push
mov
lock
adc
pop
mov
cmp
loope
adc
aaa
sti
iret
bnd
bound
inc
jecxz
rcrl
sbb
push
push
je
add
pop
cmp
xchg
push
clc
push
inc
xchg
mov
ds
push
pusha
pop
stos
cli
dec
fistl
outsb
jb
fnsave
pushf
popf
gs
add
push
testb
ss
cmpb
or
sub
xchg
popa
test
and
dec
outsl
js
enter
repz
lret
bound
lock
dec
cmc
dec
mov
sti
or
inc
mov
adc
push
das
sub
fwait
pop
dec
je
sar
xor
mov
in
mov
enter
lret
sub
jae
mov
jl
stos
or
jg
mov
inc
xchg
dec
movsl
mov
shrb
xor
lret
dec
or
out
cmp
repz
fcoml
mov
call
and
test
hlt
mov
xchg
cmp
mov
or
out
mov
pop
dec
sbbl
insl
das
lods
int3
je
call
sub
xor
or
inc
lods
mov
jns
int3
pusha
push
or
in
cmp
dec
cmp
jmp
pop
mov
inc
out
lcall
fimull
je
popa
scas
push
sbb
ret
mov
and
and
and
mov
bound
std
jmp
pop
inc
jecxz
mov
shlb
rorl
push
std
xorb
xor
ficoms
int3
mov
rorl
mov
arpl
or
add
pop
lods
push
lretw
cmpsl
add
loopne
mov
pop
call
adc
iret
inc
jle
movsl
cmc
inc
jmp
hlt
sub
inc
mov
fwait
test
xchg
mov
mov
pop
jl
add
cmp
pop
jg
inc
cmp
in
out
push
lds
mov
dec
inc
lret
push
cmp
mov
adc
pop
icebp
movsl
fmuls
mov
in
dec
jmp
mov
xchg
pop
aam
call
lds
aas
mov
inc
out
and
jns
sbb
xchg
stc
shrb
lret
dec
out
and
popa
inc
sbb
add
mov
ds
sub
lods
cmp
negb
add
fsubrs
dec
jns
xlat
roll
jbe
daa
xchg
sub
pop
cmp
add
inc
inc
pusha
mov
xchg
out
movsb
call
xchg
xchg
mov
cmp
cmp
mov
pop
mov
lret
stos
es
inc
and
jbe
adc
sbb
mov
je
mov
popa
jg
movsl
xlat
dec
adc
movsl
mov
fsubs
inc
dec
dec
enter
cli
pop
test
out
or
mov
jno
hlt
jge
cmc
jg
mov
das
cmc
push
arpl
mov
jg
xor
pop
scas
add
and
jnp
in
mov
jg,pt
jmp
outsl
das
cmp
movsb
test
lds
xor
and
js
cmpsl
cld
mov
push
les
pusha
mov
push
jae
add
pop
pop
push
mov
popf
ret
je
xchg
mov
sbb
mov
inc
imul
loopne
cwtl
add
inc
dec
or
test
int
sbb
lcall
addl
mov
pop
rdmsr
xor
mov
lods
jo
xor
mov
push
pop
ret
and
push
divb
xor
mov
push
out
sarb
test
ficomps
push
scas
dec
outsb
cwtl
mov
in
and
or
in
scas
adc
dec
sbb
push
xchg
mov
daa
fdivs
out
aaa
lds
out
push
rcr
sub
mov
xchg
ror
enter
cmp
jno
fucom
loop
mov
mov
loope
and
ljmp
pop
lret
add
jbe
jns
xrelease
mov
ds
xchg
loope
adc
rcr
outsl
cmpb
jae
test
or
jne
outsl
xchg
subb
dec
clc
andb
rolb
leave
cmp
jmp
pop
xor
popf
stos
int
mov
cmp
imul
stc
mov
lods
test
pop
sbb
jne
fstl
pop
ret
mov
movsl
ret
out
sbb
aaa
push
sub
adc
sub
jl
push
out
dec
mov
cmpsb
jmp
push
insl
call
mov
sbb
dec
add
mov
jp
inc
orb
iret
push
push
sub
xchg
nop
lods
cmp
or
pop
call
fistpl
jle
rorl
lret
xchg
das
cli
pop
shrl
pxor
fwait
aad
leave
cli
fcoml
cmp
es
cmp
sub
jge
lods
in
iret
adc
aad
leave
adc
cwtl
test
filds
imul
sahf
movsb
cmp
sub
cs
mov
cmp
mov
les
add
std
xchg
and
dec
mov
lret
push
sub
dec
popa
jnp
in
inc
adc
xor
mov
ret
insl
mov
sahf
sahf
movsb
leave
test
cmc
jge
mov
lods
in
xchg
adc
les
push
gs
pushf
lods
dec
or
loope
add
ret
adc
sub
in
dec
jmp
push
sub
dec
mov
cltd
pop
cmpsb
aam
lahf
push
hlt
push
xor
inc
mov
sub
stos
scas
push
fwait
pop
xor
imul
clc
and
push
xor
andb
inc
sub
out
sbb
and
pop
test
cs
stos
ljmp
filds
daa
ljmp
mov
cmp
orb
push
stc
fiadds
pop
and
mov
add
loope
cs
adc
sbb
test
adcb
mov
xchg
daa
loop
imul
rol
movsl
mov
push
jns
loopne
xor
push
mov
aas
je
or
sbb
outsl
sti
bound
lods
cmp
sti
and
mov
cwtl
or
dec
les
pop
push
or
sarb
cmpsb
imul
dec
sub
sarb
out
loopne
in
xchg
push
pop
mov
pop
push
mov
mov
adc
outsb
push
xchg
dec
mov
fnstsw
cmp
iret
push
cwtl
aad
test
fidivrl
jnp
sub
sbb
rcrb
icebp
stos
movsb
mov
aas
and
xor
mov
push
adc
pop
xchg
dec
sub
das
ja
fsubrl
mov
push
xchg
adc
mov
movsl
outsl
jo
adc
push
jecxz
test
mov
int
jns
xchg
lcall
clc
push
fiadds
fnstenv
push
filds
aaa
jbe
sbb
orb
sub
mov
mov
and
inc
lret
mov
xchg
sbbl
inc
bound
pushf
cmp
cld
fcom
in
call
sub
lret
cmp
clc
leave
cmc
push
lods
icebp
loop
imul
sarb
push
in
nop
sbb
outsl
sub
jb
sbb
sbb
xchg
out
xor
dec
lods
jle
inc
ds
and
sbb
rorb
jbe
mov
xor
jl
int3
mov
cmp
loopne
not
iret
js
packssdw
repz
cmp
std
cmpsb
pop
sub
fistl
xchg
pop
inc
aas
std
ja
loop
jne
call
aas
dec
js
pusha
mov
push
mov
sbb
ss
pushf
mov
inc
das
loope
les
xor
push
cmp
pop
adc
mov
lret
cmc
cmp
lret
call
cs
in
and
adc
inc
rep
or
ror
lcall
dec
mov
ss
pop
pop
xor
jg
outsb
sar
jge
fs
lcall
inc
aaa
outsb
adc
mov
and
add
xchg
mov
jecxz
sub
jl
repnz
fs
or
icebp
clc
mov
mov
out
shlb
hlt
sbb
jg
out
and
das
or
sub
imull
inc
nop
aas
add
sbb
in
adc
cmc
in
out
mov
sub
lahf
jmp
cmp
mov
sbb
fiadds
subb
mov
add
add
mov
dec
mov
or
adc
mov
mov
jp
mov
xor
pop
lea
out
cmpsl
orb
lcall
jne
sbb
fisubs
mov
jb
jle
aam
sbb
adc
scas
pop
popa
in
cmpsb
xchg
push
and
aam
sbbb
cmp
repnz
mov
pop
sbb
and
cwtl
lret
bound
cmp
popa
nop
clc
add
xchg
pusha
jne
mov
jns
mov
mov
negb
pop
push
sbb
sub
and
mov
ror
popa
lods
mov
xor
add
notl
cld
aas
aad
mov
dec
mov
push
jnp
jl
mov
movsb
push
push
cmc
iret
out
sbb
xor
push
or
xchg
dec
mov
sub
jno
mov
mov
repz
sbb
cmpsl
pop
mov
jp
jb
adc
sub
xchg
clc
aas
mov
sbb
dec
pop
and
rolb
mov
mov
mov
movsl
daa
adc
insl
xor
int3
cmp
rcrb
inc
mov
mov
test
pop
into
mov
daa
std
pop
and
bound
xor
mov
lret
and
mov
popa
jl
push
sbb
xor
or
mov
push
rclb
gs
jnp
outsl
in
test
mov
insb
mov
jb
addb
and
cli
adc
icebp
mov
add
dec
push
or
lret
lcall
ss
test
lock
leave
add
mov
out
mov
cmp
sub
fmuls
daa
add
in
int3
xor
addl
push
cmpsl
pop
mov
mulb
xchg
dec
ss
add
jae
jecxz
sub
test
aaa
and
arpl
das
jg
call
adc
cmp
and
add
mov
jne
push
jne
fucomi
fisubs
sub
test
lret
je
mov
sti
dec
push
lods
mov
aad
sub
ja
push
mov
aas
ds
xchg
push
lcall
cmp
clc
cmp
and
xchg
sbb
sub
dec
subl
int3
in
mov
push
pop
push
repz
in
xor
jne
push
pop
inc
mov
adc
cmp
lods
jne
xorl
adc
xorb
xor
sbb
repz
xor
mov
inc
pop
in
ss
out
xor
pop
adc
arpl
fdivrl
jae
jecxz
int
dec
fdivr
sbb
addl
add
cmp
jb
cmp
sub
lock
dec
sti
push
push
fsubrs
xchg
push
in
pop
shr
mov
push
mov
daa
jle
bound
add
dec
fs
idivl
push
xor
xor
jb
xchg
int
dec
pop
ja
jns
jae
stos
cmp
adc
mov
adc
cmp
shr
add
pushf
dec
fnsave
add
mov
mov
ret
test
mov
dec
test
add
jmp
loope
shl
pop
out
mov
pop
and
push
ret
rcrl
mov
inc
push
out
rcrb
inc
inc
xchg
push
arpl
ljmp
dec
add
cmpsb
pop
or
aam
fisubs
stos
inc
inc
addl
and
mov
sbb
imul
and
imul
xor
and
jl
jmp
sub
lret
cmpsl
xor
sub
adc
mov
or
jns
pop
push
lcall
adc
sbb
icebp
xor
push
roll
aas
push
pop
or
push
addr16
pop
mov
daa
sbb
jecxz
mov
stos
mov
inc
cmp
xchg
jo
mov
xor
fimull
cmpsw
dec
mov
jo
insb
fists
mov
inc
lret
push
sub
das
inc
loopne
test
out
out
push
sub
js
dec
and
adc
pop
mov
sub
fcoms
adc
lret
pushf
test
adc
fcompl
add
jl
cld
sub
pop
push
inc
mov
xchg
push
pop
int
test
mov
lods
mov
std
lods
movsb
jmp
pop
sub
pop
out
jp,pt
lock
cmp
insb
mov
test
jbe
inc
push
sub
cmp
lret
jne
xchg
leave
in
xchg
push
jg
jle
ss
push
into
pause
and
adcl
cmpsb
jp
mov
test
hlt
pop
mov
btc
cmp
sbbw
js
in
outsb
cmp
jmp
sbb
es
push
rcl
and
js
ret
mov
gs
ds
cmpsl
jge
mov
hlt
push
les
adc
insl
call
push
addr16
inc
nop
inc
repnz
mov
mov
xor
lcall
shlb
out
js
pop
in
je
pop
insl
dec
cmp
xor
mov
data16
rcrl
lret
dec
dec
jmp
lods
mov
mov
mov
and
lock
push
cmp
jns
outsb
mov
dec
fildll
dec
insl
ficompl
ret
pop
cmpsl
repz
push
mov
sbb
ss
pop
notb
pop
add
mov
inc
insb
sbb
jmp
cmp
xchg
ljmp
xchg
inc
adc
aam
sub
int
mov
push
xchg
cmp
adc
aas
insb
into
ja
xor
das
js
shlb
pop
pop
xor
inc
les
call
lret
pop
scas
pop
int
imul
add
xchg
xor
cld
sbb
cs
push
arpl
sahf
mov
mov
or
dec
push
data16
ret
pop
mov
lcall
insl
adc
adc
or
fdivs
sbb
std
lds
dec
outsb
inc
ljmp
mov
insb
hlt
nop
xchg
mov
sbb
test
cmp
mov
xor
stos
cmpb
fists
data16
cmp
cmp
scas
into
inc
ljmp
xor
bound
icebp
cmpsb
xchg
rclb
scas
fisttpll
and
cmc
sub
inc
mov
jne
pop
orb
subl
cmp
lods
dec
pop
jmp
add
ljmp
in
in
ret
pop
jne
les
lds
mov
mov
xor
jae
test
scas
gs
inc
andb
adc
push
mov
xchg
mov
inc
pop
cmp
adc
jb
inc
inc
and
insl
out
mov
daa
sub
jnp
pop
and
and
in
cmc
aam
jg
xchg
mov
mov
aas
add
xlat
pop
clc
dec
fcoms
ss
or
loope
hlt
cltd
roll
stos
push
in
dec
cmp
pushf
sbb
scas
sahf
sub
jmp
jle
pop
or
inc
clc
imul
pop
inc
fidivl
inc
in
in
stos
add
out
scas
mov
sbb
cwtl
fistpl
sub
mov
xchg
dec
xor
sti
cs
int
shl
out
mov
cmc
sub
sub
jmp
xor
mov
mov
aad
movsb
xorb
pop
movsb
fcmovb
or
jmp
cmp
out
cmpsl
out
sbb
fmulp
xor
popa
add
les
pop
out
cs
push
popa
lods
mov
addl
das
or
in
dec
xchg
mov
pop
mov
lods
mov
lods
pop
lods
sub
data16
xchg
jge
mov
inc
pop
lods
addr16
sbb
jle
in
xor
dec
insl
xchg
fistpll
mov
imul
xchg
xor
xchg
out
add
mov
dec
cli
push
xchg
mov
daa
clc
push
and
movl
into
int
mov
aad
sbb
xchg
addr16
add
mov
je
sub
in
add
popl
sbb
inc
mov
cmp
push
push
push
mov
dec
inc
fs
adc
lcall
push
mov
cmp
xchg
out
aaa
xchg
jmp
push
xor
cmp
das
xchg
xor
xor
jle
adc
es
xchg
rorb
mov
enter
mov
push
mov
cmc
sti
shl
je
pop
pop
and
ds
mov
test
mov
cli
lock
iret
pusha
sbb
mov
inc
icebp
outsb
lods
fcoms
shrb
pop
sbb
xor
push
mov
fmuls
sbb
xchg
mov
jle
movl
mov
mov
cmpsb
mov
movsb
fsubrs
scas
mov
mov
ds
sbb
push
imul
aad
dec
mov
inc
jp
shlb
mov
sbb
mov
adc
sub
mov
sub
cwtl
movsb
xor
rclb
mov
mov
cmc
sahf
icebp
repnz
lcall
cmpb
push
scas
mov
icebp
xor
cmpsl
sbb
pop
xor
mov
filds
sbb
jmp
and
mov
ljmp
test
rorl
mov
mov
cmc
mov
cmp
pop
icebp
lea
xchg
jmp
mov
mov
sti
loope
push
cmpsb
pop
int
cmp
ljmp
adc
es
bound
cwtl
fidivs
add
pop
or
mov
leave
das
adc
pop
out
subl
movsl
adc
add
out
sbbb
mov
jae
add
aas
adc
pushf
xor
pause
in
imul
punpckhdq
bound
push
xor
inc
lods
jle
sub
idivl
cmp
popa
leave
ja
out
out
aad
test
xor
jb
push
or
call
add
int
push
xor
add
orl
xchg
lods
push
xchg
sub
out
or
lods
add
jg
stos
dec
adc
pop
leave
add
pop
nop
out
add
and
mov
fnsave
xacquire
sub
xchg
ja
cmp
push
imul
mov
insb
daa
mov
out
insb
mov
ret
sar
dec
fdivrl
push
lds
frstor
ljmp
push
dec
cmp
jb
pop
and
daa
adc
jmp
loop
cmp
push
insl
cmp
repnz
scas
cmp
adc
mov
cmpsb
inc
shl
push
das
lahf
div
rclb
and
pop
lret
pop
fidivs
xchg
in
xor
cmp
das
enter
xchg
sbb
push
cmp
xchg
inc
js
mov
ja
cmpl
jae
cld
test
je
les
nop
je
xchg
sub
gs
xchg
stos
mov
push
mov
or
xchg
fadds
xor
nop
sbb
xchg
loopne
push
rep
xchg
push
push
jg
movb
int3
dec
cli
pop
sbb
filds
test
push
mov
cld
cmpsl
push
jne
stos
cmp
fistps
cmp
mov
aas
fisttpl
mov
mov
sbb
and
mov
mov
mov
inc
aad
movsl
xor
pop
int
mov
ss
aam
loope
enter
push
push
mov
rorb
push
andb
cmp
cltd
and
mov
sti
push
mov
je
cmp
add
rcrb
mov
bound
or
fcoms
addr16
fldt
cmp
add
sub
push
push
imul
mov
popa
dec
mov
add
rcll
pop
push
pop
shl
sarb
mov
and
lock
mov
in
xchg
pop
repz
call
repz
jecxz
push
scas
scas
jle
sahf
sbb
cwtl
cld
cwtd
dec
xchg
sbb
push
xchg
jp
dec
xor
je
call
adc
decb
cmp
nop
dec
sti
dec
mov
lods
mov
mov
movsl
lds
sub
ss
push
lret
out
mov
pop
inc
out
inc
pop
xchg
je
filds
lods
add
fmuls
int
or
ret
rcll
int
cmp
mov
dec
sti
lock
inc
imul
mov
popf
dec
ret
popl
dec
xchg
xor
jae
movsl
xor
xor
test
push
scas
mov
sbb
add
mov
fadd
das
repnz
add
cmp
data16
lods
pop
test
adc
push
xchg
clc
mov
push
ret
push
lahf
xor
or
pop
mov
or
stos
mov
enter
lock
inc
jge
jge
xor
scas
popf
pushf
repz
lcall
cld
in
dec
cmpsb
lahf
out
gs
fcmovu
int
and
pop
insl
push
int
mov
rorb
in
add
mulb
int3
cmpsl
pop
xor
pop
addr16
imul
test
mov
pop
daa
and
cld
xor
mov
inc
rcll
xchg
adc
or
sahf
lock
and
ret
mov
mov
sub
clc
mov
or
fst
jle
je
test
insb
and
inc
stos
cmovns
mov
aas
and
mov
inc
mov
dec
stos
lods
mov
mull
popf
sbb
lcall
andl
adc
mov
repz
hlt
pop
shl
push
dec
cmp
jns
adc
cli
inc
xor
inc
mov
into
jne
sub
pop
in
pop
push
mov
adc
in
mov
sbbl
fstl
notl
lret
ret
sub
lret
cmp
std
scas
add
divb
xlat
lcall
lcall
scas
cld
loopne
rcrb
gs
imul
push
adc
sbb
mov
stos
imul
push
xor
loope
loope
subb
call
pop
lds
push
rcrl
out
jns
pop
mov
pop
push
je
int3
inc
xchg
sub
ja
adc
adc
cwtl
xor
mov
test
not
rcl
aaa
dec
js
inc
sahf
or
push
mov
scas
xor
dec
cs
jg
test
psrad
ja
cs
arpl
movl
adc
dec
mov
fildll
xchg
mov
cmp
add
rolb
mov
pop
ret
xor
aas
or
repz
js
aad
push
out
lahf
jge
leave
mov
fcoms
xor
dec
inc
fcompp
aaa
sub
in
jp
lock
cmp
or
enter
push
cwtl
mov
rorb
add
icebp
dec
and
sbb
pop
push
push
cltd
movsb
pop
adc
cmp
jle
xchg
mov
lahf
fimull
shlb
and
fs
and
loope
ret
mov
xor
adcb
and
fbstp
inc
out
test
cmpl
mov
test
xchg
inc
xchg
test
aas
js
ljmp
lahf
popa
movsl
and
or
test
stc
les
test
call
lds
repz
xchg
fstpt
addr16
outsl
rcrl
imul
or
out
ud2
inc
pop
cltd
jle
xor
bound
es
jb
xlat
xorl
adc
in
sbb
mov
mov
sub
inc
inc
aas
test
cmp
push
movsb
push
arpl
incl
inc
mov
repnz
mov
fbstp
aas
negl
in
jne
lds
cmp
mov
subl
orb
xor
xchg
test
push
int
pop
pop
push
mov
test
std
in
mov
leave
out
sbb
adc
int3
icebp
pop
shlw
hlt
adc
push
push
and
jle
pusha
ds
lcall
rolb
sbb
jno
xchg
shr
mov
xorb
mov
les
adc
xchg
jp
fwait
popl
ficoms
xchg
enter
fnstenv
notrack
sub
test
xlat
push
push
cmp
pusha
jmp
push
xlat
stos
inc
xchg
mov
add
in
fnstenv
pop
sub
fdivrs
stc
int
mov
popa
xchg
jns
aas
jnp
in
shll
loopne
pop
xor
loope
ljmp
mov
xor
dec
neg
dec
ret
movd
leave
and
jmp
mov
push
adc
xor
pop
sbb
sahf
push
ljmp
add
loopne
and
decb
call
push
rcrl
inc
xchg
and
insb
dec
mov
jno
cmp
pop
cmpsb
outsb
sbb
aad
into
sbbl
xlat
xor
jmp
cmp
push
bound
insl
dec
lock
push
mov
xchg
test
cwtl
pop
fstl
ja
rcrl
jl
adc
mov
inc
and
outsl
pop
addr16
add
inc
dec
push
inc
push
in
sbb
adc
xchg
loope
scas
inc
in
xor
xor
lea
iret
cli
ljmp
fucomip
aaa
rcrl
sbb
movsl
inc
sti
adc
jae
fsubrp
lahf
popf
cmp
or
movsl
hlt
nop
cmpsb
mov
push
add
sub
jo
cwtl
fdivrl
jno
xchg
loopne
add
adc
mov
cmpsl
pop
adc
jecxz
mov
jmp
and
inc
jecxz
xor
rorb
push
mov
adc
rorb
mov
mov
dec
push
cmp
push
mov
pop
jae
jp
mov
repz
cmpsb
dec
fwait
push
dec
pushf
jno
sbb
movsl
aaa
mov
sbb
push
cmc
mov
cltd
mov
adc
pop
jg
pushf
loope
pop
or
sti
add
aaa
fs
inc
cmp
push
out
lods
cmp
add
aaa
push
jbe
sub
and
jno
jmp
leave
dec
outsb
dec
test
loope
rclb
and
xor
cs
pop
inc
scas
imul
mov
or
mov
fwait
sbb
jecxz
push
or
xchg
pusha
or
les
jp
sbb
negb
fwait
in
dec
push
add
fxsave
xchg
dec
cld
aas
aas
aas
jecxz
xor
sub
mov
pop
and
popl
dec
sti
mov
inc
rclb
testb
daa
adc
push
in
outsb
lods
cmp
or
psadbw
sub
jbe
pusha
out
push
test
or
or
aas
stos
je
insb
cs
sub
int
cld
popl
pushw
adc
adc
xacquire
stos
adc
outsl
test
arpl
jnp
movsb
adc
mov
push
fdivrs
insl
dec
fwait
shlb
gs
cwtl
or
inc
loop
mov
jmp
cli
and
mov
sbbb
or
xchg
lds
mov
push
icebp
fiaddl
inc
rcrb
aad
push
fst
std
addb
xchg
mov
jg
xchg
add
jno
nop
pop
in
rcr
sub
sbb
xor
in
pop
add
dec
inc
sub
dec
lock
fmull
je
sub
into
or
dec
inc
xor
push
xor
xor
cld
push
push
out
les
xchg
rcrl
inc
and
mov
jmp
test
jo
push
adc
push
lds
mov
mov
out
inc
mov
jnp
xor
mov
lret
arpl
je
in
mov
loope
adc
popf
or
nop
shlb
jle
das
ja
jle
cld
inc
insb
xchg
xchg
std
sahf
pop
cmp
pop
dec
and
jbe
or
mov
xchg
popa
stos
imul
pop
sub
mov
pushf
test
out
mov
fs
pop
mov
add
jge
call
sahf
cltd
mov
xchg
or
movsl
and
xchg
ljmp
cli
mov
test
dec
jne
dec
push
push
aad
mov
loopne
sub
add
add
or
incl
test
in
cmp
in
sbb
mov
hlt
incb
not
push
or
movd
jbe
and
lods
jl
rcll
adc
scas
hlt
mov
movsl
decl
cmp
orb
js
or
pop
add
dec
cmp
cmp
lret
inc
bound
or
in
jae
add
lods
fmuls
fldcw
addr16
outsl
inc
test
dec
mov
adc
mov
mov
pop
push
add
lahf
or
movd
dec
jno
mov
outsb
pop
int
add
cli
stos
stc
mov
sub
or
adc
push
pop
mov
int
pop
dec
sub
cmc
or
lcall
cmpsl
push
sub
data16
push
mov
sbb
icebp
pop
fsubrs
outsb
pop
and
enter
pop
jle
rcrl
and
adc
pushf
mov
sub
jns
loopne
popf
addr16
sbb
and
bound
subl
adc
push
test
and
iret
mov
pop
ss
push
imul
je
imull
dec
ficomps
lods
cwtl
push
xchg
into
sub
sbb
dec
les
daa
push
mov
mov
gs
scas
mov
sbb
imul
mov
cli
arpl
fs
pusha
and
pop
jmp
imulb
push
divl
mov
mov
les
pop
mov
jp
dec
fsubrl
push
push
push
dec
test
outsb
jb
xchg
mov
popa
lea
jmp
jg
aad
icebp
xchg
sub
sbb
or
jg
fmull
movsl
popf
cltd
ret
in
mov
stos
data16
xchg
pop
lcall
dec
sbb
ljmp
faddl
adc
jo
out
jno
lahf
sbb
push
shl
and
inc
adc
xchg
or
add
stc
ja
adcl
xlat
mov
mov
jb
xchg
in
inc
in
fiadds
xlat
cmp
out
pop
push
pop
pop
mov
jnp
mov
or
rcr
sbb
sub
ret
cmpl
dec
outsb
dec
xchg
xlat
jecxz
cli
jae
cmpsb
repnz
jmp
jp
jbe
fnstenv
mov
mov
out
cmp
cmc
std
pop
add
in
data16
pop
lcall
xchg
scas
aad
mov
inc
outsl
or
outsl
mov
bound
cltd
mov
push
sbbb
cmp
dec
je
rclb
sub
and
add
sub
subb
sub
push
aad
popf
push
and
pop
push
xchg
shll
cld
mov
sbbl
cwtl
xor
dec
pop
add
shl
push
stos
vphsubbw
testb
pusha
pushf
popl
jb
mov
and
jp
pop
jmp
aaa
lret
or
dec
inc
xchg
cmp
xchg
bound
rcll
lods
stos
int3
sbb
sbb
jb
stos
das
adc
daa
xor
outsb
dec
adc
call
jnp
and
or
dec
dec
lret
mov
xchg
lock
pushf
repz
sbb
or
add
pushf
mov
je
cmpsl
mov
or
add
push
push
sbb
je
call
push
lods
andb
dec
inc
add
add
icebp
mov
cltd
jbe
sti
adc
loope
mov
xchg
icebp
fmull
jl
ret
testl
popf
lcall
stc
mov
fidivrl
mov
sub
push
xchg
in
sti
insl
add
rcrb
in
inc
insb
jbe
loopne
dec
hlt
stos
dec
dec
in
sub
rcr
xchg
imul
cmp
sub
cmp
push
repnz
jno
daa
clc
mov
xchg
jae
fldenv
sti
js
adc
int3
out
mov
js
push
sub
mov
into
dec
mov
js
add
inc
adc
lods
cmc
popf
pop
imulb
hlt
xor
push
movsb
je
mov
cs
dec
call
cmc
push
pop
in
fwait
add
sbb
mov
scas
in
mov
pushf
fistl
test
or
jnp
pop
inc
cmpsl
mov
mov
xor
data16
dec
mov
xor
and
sbb
lods
push
xor
lea
andl
cmpl
jmp
mov
or
in
dec
rcrl
xchg
rclb
push
dec
lahf
testb
add
cld
inc
fbld
and
testl
sbb
mov
orb
xchg
mov
fistpll
pop
fldln2
sbb
insl
or
jne
jge
pushw
mov
jge
adc
push
fiaddl
jno
out
inc
push
fcoms
es
xor
fimuls
outsb
xlat
aad
aaa
es
inc
hlt
push
sti
mov
xchg
shr
dec
push
sub
std
setp
fsubl
or
test
cld
jnp
mov
mov
lcall
mov
jb
jb
mov
std
pop
inc
sti
call
lcall
cs
mov
into
fs
push
test
xchg
fistl
rcrl
adc
sbb
mov
cltd
mov
dec
pushl
or
mov
loope,pt
aaa
imul
mov
rorb
add
cmp
cmpsb
cmp
imul
mov
xor
inc
adc
push
xor
icebp
scas
fwait
inc
sahf
loope
mov
orl
sti
dec
sub
mov
cmc
aaa
shl
mov
mov
aad
cmp
or
jle
popf
xor
adc
mov
enter
jecxz
lods
jne
std
adc
ficompl
fsubl
xlat
pusha
push
test
or
leave
in
shr
or
add
pop
popa
push
add
std
xchg
inc
mov
mov
movsl
sub
and
dec
out
shlb
icebp
and
or
mov
push
and
xchg
aam
mov
aas
pop
pop
jae
fidivrl
rorb
push
xchg
pop
or
fs
ds
mov
stos
jg
scas
fsubl
xlat
js
xlat
push
push
in
sub
cmp
jle
mov
jne
add
xor
fdivrl
mov
push
pop
and
in
inc
push
gs
add
lcall
test
lret
inc
js
sti
sti
call
lcall
mov
arpl
repnz
and
jne
lret
pop
jno
push
inc
xchg
xchg
andl
aad
mov
xchg
out
ds
movsl
adc
xor
cs
loop
sub
dec
call
out
pop
ret
xor
inc
fs
xlat
lods
shll
repz
mov
jno
addb
push
jno
fs
in
aas
jle
and
add
in
ds
or
pop
lahf
imul
hlt
push
add
sahf
cmp
mov
in
mov
cld
fdivrs
cmpsl
xorl
pop
shlb
push
stos
dec
lret
adc
je
sarb
stos
data16
mov
outsl
lret
or
jg
mov
inc
loopne
out
hlt
stos
mov
shlb
aaa
cmp
mov
cmp
mov
cwtl
xor
push
jmp
cmpsl
dec
push
pop
adc
loopne
dec
push
lcall
jg
mov
push
pop
pop
sbb
lock
mov
out
das
push
sarl
sub
adc
xchg
roll
gs
pushf
ss
gs
jb
gs
jmp
xor
fs
or
cmpsb
jmp
sbb
mov
aaa
call
xlat
push
mov
pop
test
cltd
push
pop
pop
mov
jae
cwtl
and
mov
and
fiaddl
or
bound
add
cmp
imul
push
into
adc
mov
shll
mov
push
jp
pop
mov
or
adc
mov
setb
repz
mov
dec
into
jecxz
adc
sbb
pop
xor
mov
and
cmp
jbe
pop
jb
inc
andb
mov
test
insl
loope
xor
and
mov
popf
inc
imul
xor
cmc
popa
adc
jp
les
pusha
push
dec
or
in
aam
addr16
stos
pause
jno
out
pop
pop
aad
fidivrl
rorb
iret
mov
xorb
push
pusha
ret
filds
cmp
cli
daa
jnp
and
adc
bound
stos
jb
clc
and
pop
ds
ljmp
jno
loop
cld
mov
inc
into
jb,pt
dec
imul
les
or
sub
sbb
push
fsubrs
xchg
stc
rcrl
xchg
or
xor
push
mov
shll
cmp
andl
cmc
lret
imul
push
clc
pop
inc
sbb
roll
into
push
insb
cmpsl
xchg
std
stc
bound
stos
insb
rcll
cli
mov
jge
jns
push
jae
decb
push
icebp
add
mov
dec
sti
shrb
xorl
es
inc
or
mov
jno
loop
push
pop
push
in
mov
cwtl
sbb
inc
sbb
and
lods
inc
ljmp
and
mov
push
repz
roll
pop
nop
into
cwtl
inc
mov
push
js
jmp
test
cmp
arpl
lcall
aaa
adc
cli
leave
xchg
push
inc
decb
call
mov
sub
mov
dec
movsl
xor
into
xor
adc
or
jmp
das
fscale
inc
es
jmp
sub
in
push
cmpsb
cmp
jp
int3
lcall
divl
inc
mov
sub
pop
pushf
enter
xchg
xor
stc
add
jg
fwait
mov
and
ret
pop
lods
mov
pop
pop
pop
xchg
imul
add
jns
adc
mov
cmpsl
or
push
or
push
jo
jle
dec
outsb
mov
push
lea
ror
ljmp
or
mov
es
mov
loop
inc
sbb
push
aas
pop
mov
lea
push
mov
sub
pop
jno
in
add
mov
mov
pop
arpl
mov
in
int3
pop
jno
inc
pop
cmp
sbb
mov
pop
cmpsb
daa
xor
cli
loope
pop
sub
mov
xchg
nop
mov
lahf
lods
xchg
inc
out
stos
jle
movsl
sub
sahf
movsb
mov
cmpsb
adc
hlt
adc
push
sub
xor
cmp
les
loope
outsb
stc
shlb
imul
ja
rclb
sub
sub
loopne
or
jp
loope
dec
and
shl
fiadds
int3
lock
or
jae
incl
test
jle
xor
mov
cli
adc
addb
repnz
aam
aaa
mov
les
xor
sti
insb
mov
or
in
cmpsb
int3
adc
sub
and
jmp
fcoms
xchg
cmp
pusha
call
pop
jbe
ss
faddl
maxps
icebp
cmp
dec
fs
mov
inc
imul
push
inc
push
into
push
mov
xor
xchg
adc
dec
xor
mov
leave
push
xor
aas
mov
jle
xor
inc
notb
cmp
scas
pop
mov
dec
jne
mov
mov
subb
gs
adc
out
stc
fsubs
and
add
mov
mov
push
aad
jle
test
int3
mov
push
mov
mov
lahf
pop
movsl
lods
das
add
push
ret
bound
push
pop
jecxz
xor
fimuls
xchg
mov
adc
mov
mov
test
addps
subl
lahf
add
sbb
inc
cmp
cmp
ret
dec
mov
enter
lea
dec
add
into
out
dec
push
repz
jmp
mov
test
or
jb
loopne
daa
cmp
les
jbe
and
movsl
lods
lock
cmpsb
jns
insb
inc
lcall
xor
lcall
dec
loop
mov
divl
jp
dec
xchg
push
adc
mov
data16
xor
jge
call
fwait
cltd
or
jae
xor
outsb
push
mov
mov
mov
inc
or
ds
outsb
push
mov
and
adc
push
sbb
mov
and
sub
mov
decl
mov
out
mov
push
xor
xor
dec
cmp
lret
jle
inc
vandnpd
js
sbb
lods
outsb
fmull
add
hlt
pop
lds
xchg
xor
scas
mov
sub
add
mull
sahf
mov
sti
sbb
and
jp
ret
lods
xor
cmp
or
mov
loope
outsl
jae
scas
adc
push
test
xchg
dec
daa
dec
adc
je
xchg
int3
push
pop
mov
pop
xor
int
fdivr
mov
jno
insl
mov
psubd
cwtl
dec
push
inc
xchg
movsb
mov
enter
dec
js
pop
sbb
popf
mov
dec
xchg
mov
xor
or
add
mov
popf
leave
xchg
les
xchg
inc
adc
mov
mov
push
or
leave
pop
popa
and
clc
fsts
dec
jge
or
dec
push
xchg
push
cmc
dec
sub
push
pop
or
adc
jge
out
sbb
sub
je
adc
cmp
jo
repnz
inc
loop
call
mov
jge
sbb
add
ja
sbb
sti
inc
cmp
adc
push
mov
dec
push
mov
push
xchg
hlt
jns
mov
data16
incb
das
negl
add
sbb
or
dec
sub
je
sub
add
xor
aas
jl
pop
xor
pop
shrb
pop
add
push
iret
fadd
adc
pop
cmpsb
fiaddl
pop
pop
mov
fiaddl
push
fs
push
clc
sbb
dec
mov
mov
jecxz
xor
ret
sahf
jo
fwait
icebp
cli
in
jo
pop
adc
inc
stc
mov
mov
xchg
add
xchg
mov
inc
ds
repz
add
sbb
rcl
jno
inc
dec
or
ljmp
push
scas
add
out
sbb
scas
movsb
lret
les
jno
mov
stos
daa
fidivl
dec
test
xchg
imul
mov
addr16
add
lahf
mov
xchg
pop
daa
jnp
das
sbb
jecxz
pushf
pop
and
and
xor
pop
mov
sub
mov
sub
out
push
xchg
out
icebp
cmp
adc
add
pop
scas
jmp
icebp
ret
jae
test
pop
push
aad
cmp
fdivrl
dec
and
nop
or
stos
inc
push
maskmovq
push
adc
in
rcrb
push
xlat
pop
lcall
pop
es
in
or
and
insb
pop
xchg
loope
mov
push
push
repz
pop
lcall
lock
mov
in
dec
cmp
add
les
enter
ja
mov
imulb
arpl
loop
data16
add
xor
adc
xor
lcall
cmp
subb
pop
inc
into
push
push
adc
push
scas
push
imul
dec
jge
cwtl
hlt
fsubl
in
jb
mov
adc
js
in
xlat
pop
testb
mov
sbb
jns
ficoml
lods
lds
icebp
enter
test
jbe
sub
lods
roll
out
aam
loop
pop
jb
lea
arpl
and
sub
adc
xchg
xor
dec
dec
mov
stos
loopne
in
or
imul
mov
xchg
pop
and
mov
arpl
jo
insl
xchg
mov
sar
sub
divl
mov
int
subl
mov
xor
or
sub
test
test
mov
ss
push
xor
cs
xor
and
mov
cmpsl
push
jg
nop
insl
cli
int
push
adc
jns
mov
ss
adc
out
push
adc
cmc
test
lret
xchg
sub
xchg
cmpsb
std
popf
pop
jae
sbb
push
ret
cmp
sub
lds
in
icebp
dec
sbb
push
pop
test
pop
inc
cli
xchg
sbb
dec
mov
sbb
pop
cld
sbb
ja
mov
ret
imul
push
adc
inc
sbb
fsubrs
mov
aad
out
insb
cs
cmp
in
mov
clc
jo
mov
lock
fistpll
mov
insb
adc
adc
pusha
fcmovbe
adcb
mov
cmp
and
test
sub
shll
jge
mov
jbe
jmp
das
imul
push
es
enter
loope
inc
mov
sub
jmp
push
mov
adc
jne
jb
lcall
pxor
out
jae
inc
add
cmp
aam
ljmp
fs
movsl
aas
adc
xchg
fnsave
add
test
sub
shrl
repz
fnstcw
push
xchg
sbb
test
or
out
daa
sbb
push
dec
dec
gs
call
and
flds
push
pop
sub
lea
sub
fnsave
incl
inc
pushf
xor
lcall
fdivrs
pop
andl
sbb
cmc
sahf
in
cli
lret
ja
addr16
movsb
push
pop
ds
fs
mov
add
pushf
divb
add
js,pt
or
pop
loop
lods
aas
shlb
push
addr16
jge
clc
jmp
mov
jge
popf
jge
sub
lods
loope
push
xchg
push
popa
inc
dec
js
or
jge
mov
lcall
add
test
pop
cmpsl
push
inc
bound
sbb
testl
sub
push
pusha
pop
hlt
andb
mov
subl
jg
xchg
out
push
arpl
mov
push
fs
stos
or
sub
stc
push
rorb
sbb
cltd
add
lods
or
adc
hlt
pushf
mov
bound
dec
dec
icebp
xchg
shlb
lea
pop
loopne
sbb
sub
aas
es
outsl
or
in
lcall
dec
xor
daa
sub
add
jmp
sahf
lcall
jp
out
int3
inc
inc
sbb
shll
imul
testb
cld
adc
sbb
mov
pop
rcl
ljmp
pop
das
jl
xchg
mov
std
mov
hlt
loope
mov
and
lods
into
xor
sbb
pop
mov
jle
fcos
mov
je
test
jns
pop
mov
and
fwait
jecxz
outsb
sarb
jmp
pop
or
push
mov
xchg
mov
cmpsl
sbbb
rcr
iret
jns
sub
fs
cmp
jo
pusha
push
hlt
push
sbb
adc
js
jmp
mov
leave
push
mov
sti
mov
or
shrb
inc
shlb
test
dec
aad
sbb
xor
js
inc
aam
call
adc
outsl
repz
int3
into
dec
mov
nop
pop
xchg
imul
push
enter
pop
decb
fisubrl
mov
pop
jmp
xor
frstor
mov
cld
leave
out
popa
pop
sbbl
arpl
pop
mov
pop
pop
sbb
dec
rcll
daa
xchg
cmp
mul
dec
mov
inc
inc
pop
xor
or
insb
imul
sbb
mov
test
sub
sub
adc
jmp
shl
leave
xor
xor
and
mov
fdivr
loop
lcall
push
cmp
and
and
and
add
sarl
xchg
sub
xor
xchg
dec
add
hlt
hlt
aam
es
adc
sti
les
sbb
test
in
insb
xchg
inc
or
call
loop
pop
sbb
popf
xlat
jl
hlt
or
pop
jbe
loopne
ficompl
test
into
push
jle
xor
imul
push
fucomp
aad
mov
cmp
mov
loope
movsb
test
mov
cli
xchg
adc
std
pop
inc
rcrb
test
push
mov
imul
push
mov
das
in
cld
push
sub
int3
jnp
dec
test
dec
xchg
fildll
push
mov
insl
je
fisubl
insb
or
sbb
push
inc
into
pop
ret
pop
movb
adc
push
mov
adc
jl
or
ljmp
push
dec
add
mov
and
shrb
std
aaa
aam
mov
jmp
adc
sub
cli
cmpsl
notl
vmaxpd
lret
pop
xchg
shl
aas
inc
std
sub
mov
lods
and
cs
stc
test
cmp
or
cmp
pop
adc
jne
dec
sub
test
nop
out
xchg
sub
dec
cmp
call
aaa
or
fimull
filds
sub
fstpt
loop
pop
gs
add
add
push
pop
hlt
jnp
cmp
push
xchg
insb
sub
or
sbb
xchg
pop
mov
mov
hlt
scas
ret
fidivs
into
ret
ljmp
lock
push
aaa
inc
jmp
icebp
scas
outsl
rol
xlat
lds
mov
xchg
add
lock
popf
clc
cmp
jp
and
movsb
mov
mov
mov
popf
jae
es
cmpl
add
jno
sub
hlt
mov
mov
jo
loop
cmp
aad
cmpsl
cmp
and
xor
mov
insb
leave
int3
imulb
cmp
add
mov
add
cmc
shl
pop
sub
inc
xchg
ss
movsl
lcall
inc
inc
int
xchg
mov
orl
in
xchg
adc
lock
pop
repz
movsb
jb
ja
inc
fstpt
cmp
lods
ljmp
cmc
mov
and
pop
jbe
mov
ss
mov
arpl
jle
mov
cwtl
push
inc
xor
inc
mov
cltd
cmc
clc
ss
mov
setb
sahf
push
out
in
std
sarb
add
lods
push
jl
jnp
es
mov
push
popf
cmp
das
dec
test
push
xchg
loop
lea
pop
cmp
cwtl
xchg
push
inc
xor
xchg
fwait
add
ret
fwait
cmp
rorb
xor
mov
add
sub
imul
inc
lea
aas
xchg
fwait
addr16
leave
aaa
scas
inc
pop
sub
test
popf
loop
dec
arpl
mov
mov
mov
int3
add
dec
outsb
std
xlat
adc
push
outsb
ret
imul
cmpsb
ljmp
xchg
loop
mov
std
xchg
scas
imul
xchg
adc
adc
mov
add
aam
adc
fiadds
xorb
jns
push
jae
leave
je
pushf
xchg
pop
mov
testb
jmp
test
mov
negl
mov
aas
cmp
cmp
fists
in
lcall
inc
sbb
popf
movhlps
jns
jl
pop
aas
dec
xchg
xor
jns
push
ss
inc
mov
xor
imul
movsb
push
outsl
enter
gs
and
fdivp
scas
pop
stos
fs
vmread
sub
xchg
inc
xlat
dec
out
adc
insb
xchg
push
outsl
xlat
insb
ljmp
ret
stos
cwtl
hlt
incl
xchg
or
sbb
cmc
faddl
xchg
add
enter
pop
inc
mov
loopne
jmp
mov
push
movsb
mov
fldl
cmp
repnz
push
mov
cwtl
test
testb
adc
add
dec
mov
inc
outsl
lret
je
mov
imul
xchg
xchg
sbb
insb
mov
aas
jl
insb
xor
adc
cmp
add
loope
outsb
fiaddl
mov
pop
cmp
pop
jne
lock
leave
or
jge
mov
mov
push
sbb
enter
xchg
sub
cmpsb
dec
cmpsl
xor
loop
andb
dec
out
xchg
dec
adc
aam
adc
add
jb
adc
test
in
or
xchg
add
or
pop
das
in
cmp
inc
jae
mov
adc
les
sub
jecxz
push
int3
xor
push
pop
cmp
cmpsb
ret
mov
ljmp
aad
mov
inc
add
out
adc
xor
fcomp
dec
scas
sub
dec
stos
xor
push
jns
movsb
loopne
push
sbb
test
cmp
push
jo
adc
xchg
in
mov
xor
mov
fdivs
in
pop
ret
aaa
pop
mov
idivb
xchg
lods
daa
sbbb
cmc
inc
out
push
sbb
pop
xchg
lret
stc
cwtl
call
jg
dec
and
mov
out
push
repz
sbb
lret
pop
in
mov
dec
mov
test
out
add
mov
subl
inc
subb
imul
ret
aas
clc
or
cvtps2pd
movsl
mov
divb
inc
shrl
flds
es
push
pop
cld
jg
push
lahf
mov
dec
aam
cs
les
xor
xchg
fdivrl
mov
les
add
adc
mov
jno
jg
aaa
and
adc
mov
fnstsw
in
and
test
data16
jb
pop
pusha
push
call
ss
je
push
mov
cmp
jae
push
or
loope
scas
test
xchg
xor
xchg
push
jae
and
pop
out
xchg
mov
clc
jno
mov
mov
and
cmp
xor
insl
jp
les
adc
pop
and
mov
cltd
mov
adc
lahf
pop
dec
aaa
jp
inc
mov
cmp
pop
or
repnz
jne
fbld
jne
mov
sbb
outsb
nop
cmp
jmp
dec
rorl
scas
pop
popf
movsl
cltd
jno
icebp
pop
pop
xor
xchg
sarl
jg
jb
adc
cmp
add
mov
jmp
fs
adc
adc
add
push
sbb
lods
mov
pop
das
xchg
xorl
pop
stos
push
and
stos
das
sub
mov
int3
push
outsl
fcomps
sarb
movsb
rcll
lret
pushf
and
ljmp
sub
cld
nop
xlat
mov
pop
test
lcall
inc
stos
les
pusha
movsl
mov
mov
jno
xor
add
sbb
cmpb
jl
push
dec
pop
jl
xchg
or
es
outsb
and
xor
test
sbb
iret
sbb
add
enter
scas
mov
test
push
sub
cli
jbe
mov
lods
test
or
movsb
pop
adc
or
jbe
mov
outsl
scas
pop
aas
lea
xor
and
xchg
jae
adc
mov
and
pop
ret
sti
scas
shlb
lock
notb
jg
lahf
push
sbb
lock
fistpll
jl
pop
es
jnp
mov
mov
jg
pop
pop
sahf
scas
je
aas
xor
adc
mov
adc
jmp
cli
add
test
lods
ret
sub
push
dec
mov
popa
pop
pop
jecxz
mov
mov
jno
push
cmp
loopne
push
xor
movsl
mov
push
pop
jb
mov
adc
addr16
imul
pop
ja
imul
pop
or
int
subl
sahf
clc
jae
push
lods
imul
lahf
cmp
bound
lods
scas
movsl
ja
lahf
cmpsb
and
jl
scas
mov
in
shrl
add
ret
rorb
insb
stc
cmpsl
or
adcb
call
inc
jg
xchg
adc
cmp
mov
sar
add
push
lods
lahf
dec
mov
xor
dec
push
fadd
adc
inc
in
push
mov
dec
pop
cli
and
ja
xor
std
dec
dec
in
add
jae
les
xchg
mov
cs
inc
push
pop
repnz
dec
js
or
jmp
xchg
cmp
lcall
imul
lahf
clc
loope
stc
pop
mov
adc
pop
ljmp
fcomps
addr16
jne
pop
sbb
pusha
pop
popf
mov
incb
pop
adc
sbb
mov
repnz
sbb
mov
dec
in
or
mov
stc
lret
push
int
lahf
xorb
sti
fcmove
enter
xchg
cmp
sbb
ja
jg
pop
bound
mov
enter
push
jae
xor
imul
cmp
loopne
out
loope
add
jne
cmp
lods
incl
inc
push
pop
push
repz
in
add
negl
push
inc
addr16
rcll
push
fstps
and
lods
xorl
scas
int
or
call
sbb
push
sub
test
je
out
and
pusha
lret
es
fnstsw
imul
xor
adc
and
inc
xlat
xchg
push
mov
fcom
ficoms
or
insb
jbe
jo
push
fwait
jge
pop
enter
jo
inc
les
ja
push
fnstsw
hlt
test
mov
cmp
push
cmp
leave
test
lret
mov
jle
add
add
or
cmpsl
shld
pop
sbb
fmulp
jns
popa
loop
nop
stc
ja
inc
pop
fildl
fbld
or
mov
pop
mov
jecxz
mov
and
fxch
rclb
popa
js
xor
popa
jecxz
ret
rcl
in
lds
es
xlat
cmp
imul
inc
xchg
xorb
mov
lret
out
pop
xchg
out
push
les
xor
lret
movsl
jg
mov
sub
push
loop
pop
iret
mov
addr16
mov
das
adc
push
dec
data16
pop
mov
cmp
jp
outsl
test
mov
lret
inc
scas
gs
jge
cmp
or
mov
jecxz
dec
adc
jecxz
in
rsqrtps
cli
mov
fsubrs
fsubrl
cli
lret
aam
pop
jno
imul
inc
xchg
scas
add
mov
jae
adc
cmp
cld
mov
sub
mov
jb
inc
pop
fisubl
and
iret
popa
imul
mov
mov
ret
jp
and
test
and
add
cwtl
pop
daa
call
sbb
or
xchg
into
xchg
mov
lret
pop
shlb
lods
push
mov
mov
fdivl
repz
hlt
insb
out
clc
pop
call
xor
jg
inc
push
push
sub
mov
sbb
dec
andl
and
test
cld
pop
xchg
cwtl
in
sahf
fsubl
mov
pop
lahf
sti
js
adc
aas
dec
lahf
icebp
push
xchg
mov
stc
mov
push
stc
fwait
xchg
pop
outsb
les
sbb
or
pop
leave
outsl
lret
dec
movsl
inc
inc
or
es
and
dec
ret
dec
adc
nop
test
xor
jns
ljmp
mov
in
mov
popa
mov
add
inc
imul
in
lods
lcall
das
inc
mov
dec
in
jb
ret
leave
adc
cmp
sahf
mov
andb
xor
dec
fwait
jp
fpatan
and
mov
jmp
leave
jle
jle
aam
daa
pusha
jle
add
js
inc
dec
pusha
push
jl
not
clc
xchg
fcompl
xchg
sbb
aad
ficoms
or
sub
sbb
stos
add
movsl
adcl
xchg
mov
les
add
inc
ret
mov
add
mov
mov
and
lea
pop
shl
movsb
shl
out
insb
or
dec
jl
mov
jge
addl
xchg
imul
mov
sbb
sub
or
fwait
sti
mov
test
out
xchg
mov
inc
sbb
push
fstpt
inc
xlat
pop
sti
mov
mov
out
mov
push
sahf
xor
insb
jge
inc
and
stc
jnp
lcall
arpl
cwtl
rol
push
icebp
mov
mov
js
lret
inc
sbb
bound
cmp
adc
sbb
cmp
pusha
mov
add
stos
sbb
sahf
cmpl
push
arpl
aad
pop
es
fldenv
dec
lods
xchg
out
push
pop
dec
dec
push
mov
mov
stos
ljmp
xchg
cmpsl
fldcw
cmp
mov
pop
adc
imul
data16
in
and
arpl
sbb
dec
stos
pop
movsb
mov
jo
dec
imul
cmp
insl
fsubs
loop
mov
out
fcmovu
popa
or
iret
ja
sti
xor
pushl
cwtl
fistl
shll
fwait
insb
mov
push
sahf
jbe
cwtl
hlt
push
movb
jl
js
stos
xlat
out
lahf
sbb
add
scas
repz
xchg
push
cmpl
jmp
icebp
inc
jp
stc
xchg
xor
push
pop
insb
rclb
cld
or
adc
cmp
fdivr
dec
scas
lods
dec
inc
lods
push
dec
movsb
lret
imulb
jo
mov
cmp
and
ret
cmp
sub
mov
int3
mov
inc
jge
mov
test
adcb
bound
jne
movsb
pop
cmp
jl
cltd
fistpll
inc
mov
scas
fwait
out
fdivr
sbb
add
sti
test
sub
or
fistpl
lock
pusha
arpl
cmp
pop
mov
sub
sbb
popa
sbb
or
xor
lock
leave
movsl
xchg
pop
inc
or
clc
pop
xchg
sti
jmp
ljmp
test
cmpsl
jns
adc
or
incl
mov
pusha
aas
cmc
stos
shlb
or
out
or
sub
outsb
addr16
addr16
fists
mov
jp
sbb
outsb
and
scas
sbb
push
imul
inc
iret
dec
cmpsb
mov
mov
lock
nop
xchg
daa
push
and
std
xchg
sub
loop
xchg
add
push
stos
add
push
sbb
mov
jl
addr16
mov
ss
push
push
aas
das
push
cs
or
jle
daa
add
ret
mov
loopne
sbb
jno
subl
dec
mov
shll
xor
stc
in
inc
mov
fwait
dec
mov
adc
int
sub
sbb
pop
push
int
pop
into
dec
sti
in
dec
push
int
daa
push
pop
jmp
stos
cmp
sbb
lahf
jmp
jle
lods
mov
in
xor
js
in
daa
fsubl
xor
out
shrl
cwtl
push
push
stc
jo
xor
out
in
add
pop
mov
orl
adc
jl
je
push
mov
cmp
popa
fistps
mov
ret
push
repz
jmp
push
sub
lock
mov
jae
adc
jbe
ret
ret
test
out
aas
in
cwtl
inc
jmp
pusha
in
xor
popa
shl
loop
inc
push
or
in
push
xchg
inc
pop
jmp
pop
loop
ja
jle
mov
push
mov
int
pop
jge
jmp
pusha
mov
mov
fmul
mov
or
or
push
mov
or
xchg
shrl
mov
nop
sbb
test
mov
mov
mov
js
push
or
shrl
in
xor
into
inc
and
icebp
pop
insl
test
int3
push
mov
jl
and
in
lods
xchg
pop
cmpsl
adc
add
xchg
std
add
xor
ffree
data16
out
pop
mov
fdivrl
ds
xchg
shll
test
xor
adc
out
push
add
cmp
dec
test
xor
or
push
sbb
cmp
fstl
fdivrl
pop
mov
mov
pop
cli
cmc
push
fdivrs
loopne
sub
test
stos
cmp
scas
mov
ja
lret
add
dec
subl
add
mov
les
dec
jno
fistps
xor
fsubrs
adc
stc
mov
sti
gs
addr16
out
icebp
int
test
and
inc
add
push
push
scas
popa
dec
jecxz
adc
popa
nop
gs
add
mov
int
jns
pop
sbb
push
mov
ss
adc
mov
lods
push
addr16
repz
push
mov
sub
test
cmp
mov
mov
mov
mov
aaa
inc
cmp
inc
xchg
leave
test
loope
adc
xchg
adc
jp
adc
movsl
push
fisttps
subb
fcmovnbe
cmpl
aad
pushf
sbb
xor
movsb
stos
lret
jecxz
jg
sti
insl
xchg
and
push
cmp
and
pop
mov
pop
dec
pop
sbbl
data16
mov
push
xchg
adc
adc
pop
pop
sbb
or
fcmovu
imull
idivb
in
data16
and
sub
push
jl
sub
outsb
cld
xchg
inc
lock
xchg
rolb
lock
pop
inc
mulps
inc
cwtl
pushf
adc
adc
add
enter
add
rol
mov
xchg
cmp
jmp
adc
jp
inc
fwait
xor
jns
push
nop
and
jecxz
xlat
sub
fs
sbb
mov
mov
fldt
test
lahf
lds
call
push
pop
xor
call
mov
dec
out
sbb
dec
sbb
dec
sub
pop
fcomps
test
cmp
cmc
mov
and
push
jbe
shrd
adc
hlt
ja
outsb
push
sub
loopne
mov
pop
mov
in
mov
sub
outsb
cmpsl
adc
pushf
nop
gs
out
fcmovb
inc
or
xchg
fistl
fs
mov
das
push
adc
ss
mov
in
pop
inc
sti
push
popa
sub
rcll
dec
mov
pop
mov
loope
icebp
mov
jp
jae
fisttpll
sbb
jne
ret
or
shl
mov
out
or
add
inc
jecxz
xlat
push
xlat
testl
addl
inc
rcll
pop
and
push
pop
daa
mov
scas
mov
in
cli
leave
sub
aaa
push
dec
ja
inc
sbb
in
test
dec
movsl
fidivs
inc
jo
dec
lds
jns
je
sti
sub
stc
fs
add
dec
leave
inc
enter
in
and
dec
mov
cli
jmp
xchg
mov
xchg
stos
cmp
xor
out
je
mov
and
cli
adc
in
mov
push
cmpsb
push
popa
jle
lahf
jmp
push
push
jle
cwtl
pop
push
inc
das
rorl
add
lahf
push
rorb
aad
mov
or
insb
inc
loopne
cltd
jl
sub
pop
mov
push
je
mov
xor
rol
xor
pop
outsl
xchg
fistps
cmp
xchg
enter
mov
int
stos
lcall
mov
sub
mov
mov
sti
addl
testl
lods
adc
lea
movsb
out
pushf
lahf
or
push
lock
push
int3
inc
cld
and
or
fistpll
dec
fisubrs
add
popa
or
add
lahf
jecxz
add
nop
int
pop
shll
scas
dec
cmpsb
xor
das
imul
stc
inc
xchg
jb
out
xlat
add
mov
mov
ljmp
sbb
fwait
sbb
mov
xor
clc
lret
sbb
inc
and
sahf
lods
cmpsl
pop
cmp
sub
add
add
test
sub
jge
ljmp
mov
pop
nop
add
mov
imul
add
stos
adc
jbe
xchg
andl
cmc
imul
mov
cmp
cmp
not
mov
gs
dec
jg
and
mov
test
push
jecxz
xchg
xchg
into
stos
xchg
jns
loope
bound
lret
mov
sub
fistpll
push
std
or
sbb
cmpsl
cwtl
addr16
imul
rorl
shrl
jg
imul
xor
mov
fldl
ret
cmpsb
adc
or
cwtl
fistpl
call
mov
lahf
cltd
jmp
lcall
xor
jns
inc
sub
xchg
sbb
xor
cmp
shl
add
fstpt
clc
cmc
ja
mov
cmpsl
dec
sub
mov
inc
out
stos
jae
decb
loopne
push
js
mov
repz
rcrb
mov
cmpsb
push
shr
dec
mov
shrb
loop
inc
mov
pop
or
or
fwait
rcrb
sarb
jecxz
fistpl
add
dec
aad
jmp
pop
cld
data16
repnz
adc
mov
fwait
add
cld
xrelease
pushf
inc
push
filds
sub
mov
scas
mov
lds
push
push
lea
ljmp
int
xchg
cmc
mov
fisubrl
mov
shrb
jo
aas
mov
xchg
lods
or
bound
out
into
js
es
in
push
mov
and
leave
cli
jb
lcall
add
or
lea
aam
jl
das
fidivrs
mov
shr
sub
dec
xor
push
in
lods
lret
dec
push
in
dec
mov
add
xchg
pop
jmp
xchg
add
dec
sub
insl
sahf
mov
je,pt
lcall
xor
dec
std
daa
ret
add
popa
movsb
stos
sbb
xor
cs
das
out
sub
mov
xor
test
mov
cmpsb
push
push
push
push
insl
jae
and
insb
inc
adc
lods
and
jmp
ret
movsl
popf
push
xchg
add
outsl
push
popf
jo
cli
mov
loope
sbb
and
xchg
cmpsl
js
sbb
and
add
xchg
push
sub
jl
sbb
jns
test
xor
ljmp
test
pop
lods
adc
or
fldl
enter
rcll
inc
mov
sub
mov
mov
test
adc
popf
imul
aaa
mov
push
testb
mov
das
rorb
das
mov
mov
mov
cmp
pusha
push
jnp
ljmp
pop
and
mov
jbe
add
out
cmpsb
and
xchg
aam
je
push
jge
addr16
mov
lds
sub
inc
add
cmp
mov
ss
xor
hlt
mov
adcl
pop
ret
xchg
mov
jg
cmppd
jp
dec
outsl
jge
pop
pop
enter
out
data16
loop
sub
stos
push
mov
enter
repz
or
imul
scas
xorb
vandnps
xor
or
mov
pushf
inc
pop
ds
dec
xor
cmp
cmp
push
lcall
xchg
xchg
push
enter
fdivrp
pop
xor
out
jne
test
push
into
lret
add
mov
cwtl
adc
pop
cli
pop
fldt
mov
dec
les
xor
jl
xchg
push
and
cmp
stc
mov
mov
ja
jmp
cli
sub
mov
daa
jge
inc
out
mov
call
mov
sbb
and
cmp
dec
add
dec
mov
rclb
jmp
sbb
xchg
aam
vmwrite
push
fadd
or
xchg
mov
lret
std
pop
das
xchg
out
jb
xor
mov
jp
pusha
mov
jmp
push
out
push
ficompl
ffree
push
push
xlat
adc
xor
lods
ffree
jns
sub
into
repnz
repz
add
fstp
jbe
sub
jne
pop
mov
addr16
mov
jnp
mov
mov
mov
sub
ljmp
aas
icebp
mov
jmp
lcall
inc
sub
outsb
add
xlat
mov
sbb
mov
outsb
stos
pop
subl
mov
jg
pop
xchg
cmp
push
stos
in
push
xorb
mov
test
call
add
inc
movsb
push
enter
push
sbb
scas
je
fcmovnu
shll
jbe
mov
loope
cld
and
adc
cltd
mov
mov
js
out
loope
mov
dec
xchg
and
sahf
ja
aas
cmc
fstpl
int
dec
xor
lds
mov
lret
or
push
add
push
lods
xchg
xchg
sti
pop
mov
and
std
imul
in
cmp
out
push
dec
icebp
scas
out
mov
mov
pop
mov
call
rorb
mov
or
jmp
pop
mov
out
daa
mov
scas
and
push
rolb
pop
adc
lock
inc
repz
daa
adc
lret
rorl
xchg
xor
pop
aam
fs
into
fsubrs
pop
pop
int
cmc
lods
mov
inc
push
xchg
pop
ja
pop
push
adc
pop
adc
jbe
test
stc
or
popa
and
out
loope
out
mov
test
jg
cmp
addr16
cltd
and
push
mov
push
cmp
adc
xchg
lret
mov
and
inc
xchg
cmp
sbb
sahf
cs
sbb
inc
stc
adc
addr16
jns
mov
loop
xchg
dec
sub
mov
mov
cltd
jne
sbb
les
mov
ljmp
push
ja
adc
inc
mov
loopne
cwtl
ds
es
add
fwait
cmp
mov
xchg
ret
jecxz
mov
test
shll
or
add
jg
test
sub
repnz
push
sub
cltd
jle
ljmp
loope
mov
xlat
lahf
outsb
bt
adc
testb
adc
and
push
mov
pusha
sub
lret
cwtl
fdivrl
les
pop
loop
pop
sub
mull
adc
lahf
imul
add
mov
adc
dec
sub
and
mov
outsb
cmpsb
push
mov
adc
ret
aaa
or
push
aam
loope
mov
adc
sub
and
xchg
scas
fdivl
mov
push
dec
ljmp
fistpl
jnp
outsb
mov
gs
pop
aad
xchg
and
in
ljmp
or
cmp
ss
sbb
xchg
inc
sub
pop
cmp
mov
pop
std
subb
cs
mov
pop
mov
cld
clc
xchg
dec
aam
out
mov
cmc
sar
das
lcall
pop
xor
aas
push
aad
cmc
inc
cs
xor
sbb
push
sub
mov
mov
test
cwtl
sbb
call
mov
jp
or
add
push
in
iret
cmp
cmp
inc
xlat
push
loopne
cmpb
mov
xchg
add
in
scas
push
fsubl
sub
mov
xor
or
paddd
inc
or
cmp
movsl
std
mov
push
pop
daa
xchg
pop
xchg
cmpsl
mov
push
inc
in
add
pop
test
add
sub
pop
pushf
loope
pop
ret
xlat
imul
lret
dec
adc
push
outsl
pop
shlb
mov
xchg
aaa
jg
add
cmpb
and
fstl
cltd
mov
outsb
mov
sbb
inc
xchg
jmp
ja
sub
fidivrl
sbb
jecxz
mov
and
cmpl
cmp
sbb
bound
adc
xchg
out
fstpl
mov
call
outsl
jmp
fsubl
sub
addr16
push
fs
and
dec
fs
or
push
arpl
pop
adc
cli
sub
rolb
ret
pop
dec
jp
xchg
cmp
xchg
std
sub
sub
in
stc
fists
xor
dec
xor
lods
hlt
xor
or
out
sbb
jnp
lcall
jmp
jg
fdivrl
in
or
addb
sbb
outsb
pop
pop
es
jns
rorl
lods
sti
xchg
js
fwait
pmaxub
jb
movsl
xor
sub
mov
xorl
fcos
sub
dec
roll
or
les
rolb
pop
cltd
jno
test
and
mov
xor
mov
sub
mov
jns
xchg
xchg
jae
popf
cli
and
sbb
dec
add
ds
push
lds
movb
or
mov
add
sbb
mov
scas
stc
das
jnp
pop
pusha
fidivrs
dec
inc
outsb
scas
or
adc
push
ja
leave
xchg
movsb
clc
mov
xor
jmp
push
jnp
lcall
lea
add
and
fnstcw
pop
aam
sbb
and
pop
cmpl
into
and
cli
mov
cmp
out
mov
iret
add
add
fsubrl
pushf
inc
and
push
push
movsb
adc
sbb
mov
repz
mov
arpl
mov
pop
mov
lcall
mov
jmp
cs
pop
pop
dec
enter
rcr
ds
dec
popa
xor
adc
inc
test
xor
fdivrs
in
cmpsb
ljmp
aas
aas
out
icebp
or
dec
ficompl
lret
push
pop
xchg
fs
fscale
xchg
fstps
daa
jmp
shrl
sub
sub
pushf
test
cs
inc
cmp
ret
cmp
testl
data16
sar
xor
dec
mov
mov
jge
scas
data16
mov
adc
loope
cld
movsb
jmp
lret
xchg
push
imul
cwtl
inc
stos
lods
std
negb
dec
in
int
sar
bound
jmp
add
into
mov
std
lods
mov
and
or
add
cmp
adc
ljmp
std
shlb
lahf
inc
lea
ds
push
bound
xchg
adc
out
or
dec
add
jle
fs
adc
adc
popf
push
scas
dec
mov
ljmp
sbb
movsl
xchg
mov
add
adc
xlat
movsb
test
inc
repz
mov
add
sub
nop
sub
push
loop
pop
inc
cld
adc
fimull
push
lock
xchg
stc
xlat
mov
rorb
ret
repnz
inc
sub
push
test
jnp
popf
andl
aaa
sbb
imul
test
mov
xor
xchg
mov
stos
pop
ret
mov
fs
popf
or
xchg
mov
pop
imul
or
jb
cmp
insl
add
sub
jns
int
push
dec
pop
test
into
jl
push
push
and
inc
ret
stc
cmp
adcl
jne
pop
stos
stc
dec
outsl
sbbl
sub
addr16
lea
sub
lahf
cltd
adc
test
comiss
inc
cmc
lret
and
dec
lea
test
fnstcw
sbb
in
bound
mov
fmull
pop
pop
xchg
mov
push
rcrl
xor
nop
push
cmpsb
daa
sahf
popf
inc
adc
dec
cmp
adc
fbld
push
dec
int
test
out
jle
fdivrs
pop
xor
inc
add
rcrb
mov
jb
or
fbld
mov
mov
and
pusha
int
iret
lcall
movsl
sahf
enter
ret
jns
shlb
jg
stc
pusha
adc
sub
inc
imull
push
lds
jae
popa
or
mov
nop
dec
enter
rclb
push
mov
bound
mov
bound
lret
dec
jo
inc
pusha
cli
fsubp
test
or
jne
push
movsb
mov
pop
inc
hlt
push
movsl
outsl
pop
mov
loope
es
pusha
loopne
es
xchg
imul
addr16
inc
or
mov
out
stos
rcrb
aam
sbb
push
and
dec
push
fldcw
mov
sub
push
scas
sub
push
rorb
mov
fmuls
push
fdiv
out
cwtl
adc
sbb
push
push
xchg
fcoml
dec
xor
mov
sub
imul
pop
loop
enter
add
addr16
adc
jle
inc
out
inc
fsubr
xchg
popl
scas
lods
or
mov
pushf
cld
inc
add
mov
es
mov
ljmp
jo
js
pop
adc
rolb
mov
enter
jb
ret
shlb
js
scas
jnp
hlt
stc
xchg
loope
aas
xchg
fsubs
insb
jp
xor
pop
rcl
xor
mov
cmp
outsl
daa
movsb
dec
and
adc
xor
sbb
test
fnsave
adc
xlat
mov
jle
aaa
xchg
add
std
ljmp
jb
es
adc
int3
and
cwtl
pusha
popl
push
jecxz
push
sub
sub
cmpsl
pop
movsl
inc
pop
jae
inc
adc
out
mov
mov
out
adc
lret
cmp
test
cmp
data16
stc
mov
std
and
in
adc
push
popa
jbe
loope
push
bt
bound
pop
lret
xor
sub
inc
xchg
push
xor
cmp
movl
cltd
mov
mov
mov
pop
add
aaa
popaw
pop
adc
fidivs
add
sbb
out
push
iret
in
pop
test
inc
or
loope
xchg
mov
push
jle
cli
inc
out
add
adc
js
mov
add
dec
adc
outsb
xor
daa
scas
xchg
or
dec
inc
fnstsw
loopne
dec
jmp
fidivs
mov
dec
or
cld
in
popa
sub
mov
fisubs
scas
enter
xlat
pop
clc
push
out
jg
fldcw
lock
jb
mov
xor
mov
adc
adc
movsb
lock
les
mov
or
sbb
sbb
lahf
sub
pop
sbb
adc
push
cmp
leave
dec
jnp
add
insl
cmp
push
adc
jecxz
mov
mov
xor
gs
shlb
lds
sbb
cmp
shl
cmp
lds
xchg
mov
pop
movsb
gs
insb
cmc
aaa
pusha
fbstp
adc
ficoms
inc
sub
aaa
xlat
push
sbb
test
das
inc
int3
sub
lds
scas
lret
test
pop
inc
adc
into
jle
or
in
mov
mov
aam
push
sub
in
loope
xor
test
add
mov
jg
fsts
and
inc
jno
pop
mov
addr16
push
xor
shr
or
jbe
pop
sbb
stos
pop
ljmp
clc
or
call
xor
dec
dec
cmp
push
push
ficoml
mov
cld
jmp
fisubrs
adc
mov
mov
mov
sub
imul
ss
in
mov
stos
inc
rcr
jmp
shlb
sahf
dec
imul
xchg
cmp
das
jns
sahf
xchg
dec
out
sbbb
enter
js
fidivl
jp
mov
ret
lret
push
in
sbb
insl
jbe
cmp
sub
fs
out
movsb
xchg
jne
stos
jo
cmp
mov
push
loope
ret
push
scas
add
in
in
mov
sahf
xor
mov
xchg
inc
xor
ds
popa
lds
jg
repnz
jle
cmp
pop
mov
sbb
pop
aam
dec
adc
scas
jge
pop
cmp
add
std
pusha
cmc
xor
mov
pop
movsl
iret
and
cwtl
push
add
jne
or
sbb
loop
and
push
mov
mov
mov
push
lods
jbe
filds
pop
mov
dec
divb
test
mov
fldcw
mov
or
xchg
bound
cmp
xor
cli
mov
add
insb
das
cwtl
daa
outsl
mov
sbb
pop
ret
jnp
jno
xchg
jmp
pushf
sub
loope
mov
divl
xor
sub
gs
sub
cmpsl
cmpsb
sbb
repnz
mov
iret
cs
ljmp
in
or
leave
add
es
adc
sahf
xchg
std
xchg
mov
mov
mov
shrb
clc
fldcw
sti
ja
ret
mov
cmpb
out
xchg
or
das
pop
jae
lret
xchg
out
rcrl
testl
and
push
mov
das
fstpl
pop
mov
jb
scas
repz
xor
out
cltd
cmp
jmp
xor
xlat
pusha
not
shll
ds
inc
aas
xor
sti
add
iret
xor
sbbl
aas
xlat
lea
sub
lods
divl
ljmp
dec
scas
mov
jns
dec
nop
and
or
adc
sub
push
arpl
mov
xlat
pusha
push
mov
int3
cmp
or
jg
inc
shl
sbb
and
js
popa
mov
push
cmpsb
repz
xor
mov
xchg
push
mov
js,pt
std
and
jnp
imul
mov
inc
pop
lods
mov
rcrl
jge
xor
test
push
cmpsb
mov
inc
sbb
and
mov
cld
es
loopne
clc
pop
sbb
enter
inc
fimuls
aas
mov
hlt
sbb
bnd
fdivp
mov
mov
inc
repnz
pop
imul
sub
inc
into
stc
ret
int3
gs
mov
sahf
fists
cmc
jp
pusha
fdivrl
adc
ja
outsl
jae
rorl
push
sub
jmp
mov
jb
aam
sbb
shll
xchg
xor
pop
adc
stos
dec
in
lahf
jb
scas
sbb
ja
sbb
and
ret
lods
push
cmc
cmp
push
add
add
inc
pop
je
xor
jo
mov
inc
sti
or
hlt
mull
inc
call
pop
dec
shrl
pop
inc
sarb
and
xlat
orl
js
imul
add
test
dec
fldt
sar
arpl
mov
into
push
mov
xor
or
aaa
push
cmp
jl
cmp
or
mov
aas
ja
jns
push
aam
daa
cmp
aam
leave
jns
xchg
imul
cmc
les
xor
lods
sub
jns
xorl
in
fnstsw
rol
ss
cmp
dec
cli
out
pop
mov
mov
enter
sub
leave
mov
push
ret
or
pop
stos
mov
testl
adc
scas
or
push
test
das
rolb
jle
push
add
mov
push
leave
in
iret
test
out
jno
xchg
in
pop
inc
pop
fisttpll
imul
inc
scas
das
and
add
movsl
fmull
mov
popf
mov
aas
ss
push
inc
mov
iret
fildll
outsb
adcb
in
xor
dec
shll
das
out
mov
in
sbb
js
shll
test
fisttpll
insl
lds
dec
in
cld
sub
mov
xchg
mov
push
pop
and
cmp
js
mov
aam
push
inc
hlt
test
push
aas
jmp
and
dec
rclb
in
dec
dec
push
repz
int3
popa
xchg
loop
push
inc
lret
push
icebp
orb
xor
das
xor
push
push
push
ljmp
mov
push
lcall
lcall
pop
xlat
movsl
cmpeqps
in
aas
add
inc
call
pop
out
ljmp
lret
jg
lret
mov
xlat
es
stos
push
lret
cmp
and
fildll
aaa
idiv
lods
xchg
lret
sub
xorl
jg
push
cmp
daa
imul
lock
fs
popf
and
or
mov
dec
inc
or
bnd
icebp
insb
dec
fmuls
scas
cld
push
inc
sbb
ss
jb
loop
inc
mov
aad
movsl
jb
loope
fdivrl
inc
xchg
sub
mov
cli
xlat
adc
stos
cmc
xchg
xor
in
movsb
cmp
xor
xchg
mov
lds
mov
je
push
inc
out
jge
push
imul
pop
jno
popf
mov
mov
cs
or
lock
cld
mov
add
sbb
mov
mov
int3
mov
sbb
mov
dec
out
cmp
sbb
shrb
pop
mov
out
jno
pop
adc
fwait
das
inc
jae
mov
mov
test
mov
mov
or
inc
arpl
dec
jo
outsb
cmpsl
outsb
push
sbbb
dec
sbb
xchg
fadds
inc
test
pop
lock
jecxz
pop
ja
jo
imul
and
xor
movsl
push
fists
adc
dec
les
push
loope
jp
mov
stos
icebp
in
fisubs
mov
ret
dec
add
jmp
mov
inc
les
mov
pop
outsb
mov
aaa
jae
shrl
lea
mov
push
lds
sub
outsb
xor
lcall
push
cmpsb
js
lock
aad
ds
add
jbe
loopne
mov
add
out
adc
pop
xchg
test
push
jmp
sbbl
into
psllw
add
push
xlat
dec
adc
mov
hlt
inc
cmp
mov
fnsave
add
push
iret
pop
adc
popa
pop
push
insl
jno
fcmovne
and
scas
inc
je
rcrb
jg
mov
hlt
xor
or
or
fiadds
xchg
xor
test
shlb
sub
cld
sbb
add
cmp
fstps
xchg
mov
mov
push
cs
push
lret
aaa
lahf
add
cmp
repz
rorl
dec
xchg
mov
xchg
popl
mov
push
adc
jecxz
int3
lds
aas
pushl
ret
int3
lcall
movsb
mov
pop
insl
mov
mov
jle
cltd
jo
dec
sbb
sbb
inc
push
xor
ds
mov
and
fsubl
adc
adc
mov
cmp
push
sbb
jp
scas
xchg
mov
fidivrl
xchg
mov
lcall
cmp
sbb
pop
xor
or
adc
xor
xorb
push
popa
mov
xchg
push
rcrb
pushf
and
cmpsl
lcall
adc
js
pop
add
push
loop
jmp
sbb
dec
mov
jl
cltd
das
imul
fists
out
adc
inc
lock
mov
jne
and
inc
dec
pop
jae
jg
outsl
fcoms
xchg
push
lea
sub
cmpsb
shll
sub
pop
cmc
jnp
ss
sbb
jle
hlt
cwtl
push
lahf
xchg
rclb
and
addr16
andb
leave
pop
imul
cwtl
add
xchg
adc
mov
pop
lds
mov
sti
clc
jae
dec
xor
mov
mov
jbe
sti
push
iret
mov
adc
enter
les
mov
or
cmp
shl
xchg
pop
jae
das
cmpsb
in
adc
push
fwait
fsubs
push
scas
iret
sbb
jp
and
out
pop
sub
movsl
mov
xor
add
lods
clc
faddl
push
push
movsb
push
mov
adc
pop
sub
ds
ret
lods
jne
insl
ret
test
pop
mov
pop
adc
mov
mov
sbb
es
pop
xor
add
cs
adc
lcall
cmpsl
test
loope
xchg
push
mov
rolb
sbb
pop
push
mov
jge
sbb
fcmovnb
imul
sub
dec
jl
sbb
fisubs
fwait
rorb
popl
mov
mov
lea
mov
adc
or
cmpsb
xchg
arpl
pop
pusha
in
jge
mov
push
push
cmpsb
add
adc
insl
xor
mov
mov
jmp
dec
mov
and
ret
cmp
jae
sub
ljmp
shr
jno
mov
cmpsl
aaa
dec
bound
les
push
and
push
in
int
fcmovb
xor
push
and
cmpsl
jbe
cmp
xchg
xchg
adc
pusha
sbb
xlat
ret
push
sbb
jb
movsb
fwait
pop
lods
cmp
adc
push
mov
hlt
xor
sub
or
fsub
into
jecxz
fidivs
lahf
int
cltd
ficomps
cmp
push
sbb
cmp
out
cli
mov
es
hlt
lock
add
sub
jmp
or
dec
mov
int
adc
mov
imul
cmp
fcmovne
mov
mov
leave
pop
mov
xchg
xchg
cmp
insl
idivl
shrl
sub
incl
add
pop
mov
xchg
aaa
dec
pop
inc
and
in
andb
into
scas
jmp
ljmp
ret
xchg
aaa
mov
stc
into
gs
vmovaps
leave
dec
add
jno
mov
and
push
mov
fistps
add
inc
aas
outsb
and
nop
add
adc
out
int
sub
les
cmp
fidivs
mov
fistpl
andb
jp
xchg
jbe
pop
inc
pop
cmp
jecxz
fstpl
pop
jae
jmp
xor
push
cmpsl
arpl
ss
xlat
xchg
push
jge
shll
es
mull
push
xchg
sbb
into
stc
push
push
sub
test
dec
add
imul
pop
int
dec
cli
dec
jne
xchg
into
hlt
xor
add
stc
es
jg
ja
jl
iret
pop
adc
fwait
mov
and
pop
mov
mov
jg
cmp
nop
ljmp
outsl
sub
inc
sub
cld
inc
test
ja
push
dec
mov
iret
mov
push
enter
leave
fstpt
xor
in
movsl
pop
mov
jae
xor
cmpsl
push
jecxz
out
lods
mov
sbb
aas
mov
addr16
or
bnd
cmp
mov
ret
xor
inc
dec
mov
aam
and
xor
add
adc
inc
cmp
xor
frstor
cmpsl
inc
shr
loop
cmp
jns
pop
clc
movsl
imul
inc
lahf
sarl
outsb
mov
aad
mov
inc
fs
jne
mov
out
pop
add
xor
ror
mov
mov
sbb
mov
aaa
jge
call
out
push
out
or
push
int3
xlat
pop
or
adc
jb
enter
and
mov
dec
push
inc
mov
mov
mov
sbb
js
xor
adc
test
and
sub
pop
daa
lahf
add
insb
stos
ret
les
mov
add
arpl
cmc
das
add
cmp
jnp
roll
pop
cs
std
mov
pop
xor
xchg
fisttps
orb
mov
pushf
insl
cmpsb
xchg
mov
add
push
push
sbb
dec
mov
xchg
lods
in
or
or
shl
loopne
rol
loop
xor
xchg
cs
ljmp
jae
xor
fcomps
mov
fisttpl
mov
test
imul
gs
sub
lcall
xchg
ljmp
lea
pushf
das
mov
pop
out
in
or
mov
inc
or
pushl
mov
aam
das
in
push
imul
push
inc
scas
and
push
cmp
adc
dec
lea
jge
and
in
test
int
adc
jae
sarl
enter
add
inc
sbb
push
js
les
mov
lods
cli
bound
in
adc
or
and
fidivrs
mov
pop
xor
dec
inc
push
pop
dec
clc
jl
loop
xor
jmp
jge
push
jo
jmp
sar
in
ret
int3
lods
pop
inc
adc
sbb
mov
ret
cli
adc
cmp
mov
cmp
xor
lret
adc
les
loope
ss
jg
andl
aam
sub
outsl
lahf
xchg
mov
enter
fldenv
jb
fistps
mov
add
lods
scas
sar
gs
push
mov
dec
leave
dec
call
int3
lods
or
sbb
imul
pop
pop
jbe
lds
mov
ja
in
pop
cmp
dec
lock
adc
lahf
in
inc
stc
push
inc
mov
cmp
enter
or
mov
or
push
scas
cli
pop
loop
add
jg
repz
sub
push
add
xorl
add
out
xchg
mov
jae
pop
mov
pop
call
test
add
rcrl
and
inc
mov
popf
iret
pushf
gs
or
sbb
and
xor
and
sub
enter
xor
lea
or
das
aaa
mov
fstpt
jns
add
pop
lods
sub
clc
subl
rsqrtps
xchg
push
ret
xchg
js
imul
sbb
inc
or
mov
es
in
pop
mov
pop
notb
xchg
out
jns
jbe
lock
push
dec
fs
cmp
add
jbe
stc
iret
cmp
sbb
std
in
add
mov
sub
js
push
int
xor
inc
jns
rorb
js
rcrb
lret
or
inc
push
out
test
inc
gs
data16
xor
inc
mov
mov
pop
lea
cmp
pop
add
push
mov
mov
pushf
inc
jnp
xchg
jl
mov
ret
outsl
shl
rcll
jmp
push
cmp
push
roll
mov
and
sbb
loop
shld
cs
dec
xchg
xchg
xchg
xchg
push
adc
out
mov
mov
gs
test
sbb
mov
je
out
xor
inc
movsl
fst
mov
sub
dec
push
and
push
in
push
xchg
push
sub
scas
ja
bound
mov
sbb
sarl
dec
and
jp
mov
push
push
jb
stos
inc
mov
lods
and
insb
popl
js
dec
jne
xlat
jnp
and
in
sar
sub
movb
sub
jbe
loopne
jle
sub
push
adc
push
test
ret
ds
arpl
decl
inc
in
ror
xor
das
jbe
and
outsb
subb
sub
fiadds
add
inc
adc
mov
sbb
jge
stc
insl
in
push
out
cwtl
inc
test
xor
fisttps
mov
jp
sti
in
scas
inc
jne
mov
testl
mov
pop
bound
inc
mov
fcoml
cmpsl
loop
lods
dec
pop
fiaddl
sbb
jmp
int3
pop
cmp
adc
or
dec
inc
test
inc
add
mov
in
mov
mov
inc
negb
fldenv
cmp
loopne
push
cmp
andl
shlb
jmp
clc
ja
xor
xchg
mov
pop
mov
test
mov
xchg
inc
test
and
out
xchg
jno
push
fsubl
inc
xchg
icebp
fwait
jns
add
push
leave
lahf
rorl
lock
lods
or
pop
mov
lahf
dec
adcl
fwait
sbb
mov
mov
outsl
pop
pop
int
test
pop
mov
mov
or
in
sub
scas
fs
inc
scas
jns
rclb
aas
pop
sub
fs
push
xor
mulb
mov
scas
rorb
push
jle
cmp
xor
mov
push
aaa
push
add
sbb
and
push
add
dec
cmpsb
out
fldenv
jnp
movsb
std
ficoml
pop
repnz
cmc
dec
lret
ret
sbb
mulb
in
dec
cmc
sub
cmp
cld
lods
lret
fiadds
cs
inc
adc
adc
sbb
push
pop
mov
dec
ljmp
mov
lret
adc
imul
lret
xchg
inc
xchg
shrl
and
arpl
bound
sub
cmp
rclb
push
xor
scas
push
add
jmp
push
adc
lods
xor
stos
xchg
lods
dec
pop
mov
add
add
test
xor
push
popf
aaa
outsl
std
lcall
lods
xchg
fwait
mov
iret
inc
repnz
loop
fwait
std
cwtl
sub
pop
mov
xchg
jnp
lret
adc
rorb
push
inc
xchg
inc
jecxz
sbb
and
sbb
pushf
bound
inc
mov
mov
jb
stc
jno
aas
cmpl
sub
mov
std
sbbl
aas
and
xchg
jne
clc
jno
dec
iret
xchg
sbb
int
and
sub
repz
sub
cmpsb
sub
or
leave
sbb
fstl
adc
pop
pop
xchg
inc
xchg
push
sub
mov
mov
dec
hlt
ret
mov
inc
mov
mov
enter
or
fbld
insb
pop
lds
insl
lds
das
mov
sub
cwtl
sar
nop
jo
jle
inc
xchg
std
out
cmpsb
cltd
aaa
cmp
leave
scas
loopne
sbb
mov
adcb
popf
into
sbb
mov
cwtl
cmpb
shll
pop
movsb
sub
ret
scas
jae
jno
fwait
scas
cmp
mov
dec
into
dec
cli
lea
lahf
xor
lret
aam
mov
mov
pushf
rcl
shr
in
fsubrl
movsl
pop
mov
fwait
sub
sub
sbb
cmp
out
int3
ljmp
jb
adc
dec
nop
fcmovnbe
push
ja
cmp
jge
sub
mov
mov
sbb
into
pusha
out
imul
out
mov
adc
into
and
mov
adc
sub
xchg
ja
call
and
cmp
xor
mov
add
mov
xchg
dec
adc
aas
pop
xor
pop
mov
in
enter
and
fwait
negb
cltd
sub
add
push
xchg
pushf
pop
mov
mov
out
xor
adc
and
daa
ret
jnp
ret
mov
cltd
data16
pop
push
jae
fldl
mov
add
sbb
loopne
cwtl
test
cmp
cwtl
and
adc
lods
dec
jnp
xor
loope
test
mov
sbb
pop
inc
xchg
mov
andl
divb
popf
shlb
jbe
call
cmp
in
das
lcall
push
repz
xchg
cmpsb
ljmp
stos
test
mov
into
mov
jg
lcall
icebp
pop
jns
inc
aad
xchg
or
cmpsl
adc
fisttpll
mov
cld
jnp
xor
pop
jp
repz
clc
sbb
test
in
cmp
inc
rcll
push
enter
xor
sbb
or
dec
push
hlt
jmp
pop
loop
icebp
inc
inc
mov
add
push
or
popf
fcmovnbe
ljmp
scas
dec
pop
loopne
fcoms
jbe
push
sub
inc
and
or
pop
cmpsb
pop
push
test
xlat
mulb
in
cwtl
insl
call
add
mov
adc
aad
aad
sub
mov
xchg
sbbb
xchg
scas
pop
pop
cmp
shr
cltd
sbb
cmpsb
sub
jmp
mov
je
dec
mov
jecxz
insb
mov
push
inc
test
stc
pop
xor
gs
lock
sub
sbb
sti
and
loop
mov
xchg
adc
in
mov
mov
or
pop
mov
mov
fistl
mov
cmp
fldcw
nop
mov
dec
xor
ja
fdivrl
cltd
cmp
jecxz
adc
cmpsb
cmp
xorb
shl
jecxz
aad
lcall
pop
fcmovnbe
inc
sub
mov
push
pusha
cmp
inc
jnp
fisubs
insb
jp,pt
sub
jle
add
aas
push
cmp
arpl
cs
pop
push
mov
or
xlat
mov
xchg
jg
inc
adc
jnp
pop
add
and
mov
ds
test
dec
pushf
jbe
mov
xchg
addr16
call
notl
rol
jb
mov
push
sti
sub
lea
sub
jle,pn
dec
test
repnz
cmpsl
add
push
adc
cwtl
or
add
cld
xchg
jmp
loopne
mov
or
out
jae
imul
pop
cmp
bound
push
lea
sub
xor
adc
leave
pop
adc
rorb
xor
aad
nop
inc
mov
ror
mov
in
or
hlt
push
xlat
lock
xchg
push
dec
and
sub
push
sbb
xor
popa
sub
dec
les
xchg
out
mov
sub
mov
pop
shl
mov
int3
outsb
dec
movsl
sbbl
idivb
lock
enter
push
ficoml
leave
nop
pop
aaa
fstpl
addr16
stos
adc
jne
mov
push
into
les
mov
inc
cmpsl
pop
ljmp
pop
or
xor
rcll
push
pop
pop
push
ds
sbb
mov
in
and
mov
xchg
sbb
mov
call
lods
push
add
lock
fdivr
jmp
fistps
jecxz
ds
testb
sbb
pop
and
jae
xchg
dec
scas
into
mov
lods
push
roll
xor
inc
cmp
inc
lahf
nop
fwait
sbb
orl
fnsave
cmpsb
aaa
inc
insl
sahf
xlat
popa
add
dec
cmp
ss
sub
gs
inc
insb
sub
sub
add
jge
mov
mov
scas
dec
nop
jg
and
cmp
inc
fs
aaa
lods
push
icebp
js
mov
push
hlt
rcrl
mov
fcoml
sahf
loop
jecxz
mov
nop
pop
lds
test
or
mov
aad
push
dec
lock
into
pop
jne
jns
inc
dec
ds
push
cltd
sub
aam
inc
sbb
xor
jbe
cmpsb
out
cmc
sub
pop
inc
imul
cli
dec
mov
and
mov
out
push
jge
inc
jne
lret
stc
add
fwait
divb
lret
xor
cld
sbb
ljmp
mov
shll
data16
rorl
pop
int3
xor
sub
ret
mov
xchg
mov
sub
sbb
incb
add
or
lock
outsl
mov
push
cmp
aas
xor
subb
incl
test
loop
lret
cltd
jg
inc
mov
arpl
inc
pop
sbb
lock
sub
xchg
push
cli
out
xchg
cmp
mov
cmc
loope
movsl
xchg
sbb
pop
dec
lock
test
or
xlat
ja
stc
aaa
jl
rorb
sbb
mov
mov
out
out
xchg
enter
pop
xor
out
or
sarl
icebp
jecxz
notb
dec
test
sub
pop
mov
push
out
in
add
and
pop
aaa
iret
xchg
nop
xor
or
inc
or
fucomi
push
jnp
mov
xor
jmp
sti
xor
out
mov
lds
sbb
rcrb
pop
mov
rcrl
nop
fmull
sti
mov
adc
inc
out
xor
rorb
lret
shll
and
lods
in
pop
aam
and
or
cmp
cmp
or
sub
sub
pop
shll
loop
sbb
out
push
stos
mov
mov
add
push
shlb
movsl
xchg
insb
jl
jmp
popa
sub
leave
cmc
inc
mov
addl
dec
fistps
js
ret
dec
lahf
loope
pop
std
fwait
dec
cmp
lret
mov
adc
test
cmp
dec
push
cmpsl
je
imul
mov
mov
lock
mov
fisubrl
into
jno
enter
cli
mov
add
jl
mov
push
clc
mov
int
jne
cmp
push
pop
pop
sbbb
push
push
in
adc
out
mov
mov
in
dec
into
cmpsl
adc
cmp
sti
jno
sbb
or
mov
and
in
xchg
pop
pop
enter
scas
repnz
cmp
or
aad
or
lods
inc
idivl
jae
inc
or
mov
jge
stos
push
sub
xchg
xor
aaa
nop
dec
enter
and
mov
stos
ret
xchg
xor
or
inc
push
aad
mov
mov
imul
cmpb
pop
cmp
dec
pop
sarl
jo
sub
lods
fbld
out
adc
push
jl
out
cmpsl
or
stos
adc
dec
cld
jl
negl
mov
mov
pop
iret
sub
mov
and
or
mov
cmp
mov
adc
adc
outsb
xor
sbb
pop
ljmp
outsl
shlb
mov
xchg
das
mov
loope
and
fwait
aam
fiaddl
cmp
cs
sbbl
or
into
mov
mov
inc
mov
lods
std
fildll
or
pop
adc
xor
adc
subl
push
cmp
insl
sbb
aaa
inc
add
cs
imul
shll
mov
mov
test
pop
mov
xchg
xchg
jns
in
ds
lret
mov
insl
xchg
xchg
cmp
push
push
sbb
fidivs
xchg
shl
adc
outsl
mov
cltd
jne
dec
dec
mov
sub
adc
hlt
arpl
in
test
movsl
jbe
sti
lods
or
cmp
insl
jb
mov
lcall
jecxz
scas
jns
cmp
sub
mov
sarb
xor
push
cmpsl
jecxz
dec
cmp
jp
push
jae
cmp
add
cmovp
cmpsb
xchg
xor
pop
fistps
cmpsb
pop
stc
movsl
push
insl
inc
jmp
daa
loop
lcall
xor
addr16
mov
into
jno
dec
jle
pop
rorl
jmp
mov
aam
enter
jl
cwtl
push
mov
dec
shrb
orl
xor
mov
test
pop
dec
fwait
stc
cli
aam
roll
ljmp
sarb
push
lods
push
rcrb
push
add
nop
mov
mov
lret
mov
inc
lods
in
sarb
or
cmpsb
in
xor
push
cmp
dec
push
arpl
add
mov
jae
xchg
dec
push
or
les
mov
add
lods
cwtl
sub
push
and
lret
xchg
int
sbb
rcrl
dec
xacquire
pop
rcr
push
imul
es
bound
and
jnp
jns
lods
mov
dec
out
adc
lods
push
xchg
out
in
pop
ja
pop
mov
mov
in
mov
shlb
lahf
aaa
cmp
fisttpll
mov
rol
pop
jge
push
bound
mov
mov
mov
dec
pop
mov
js
pop
pop
xchg
jmp
aaa
xchg
dec
sbb
lcall
cmp
pushf
insb
or
loop
fucomp
lods
xor
ja
and
js
mov
repz
repnz
jne
xor
or
scas
sahf
mov
dec
xchg
aaa
repz
dec
movsl
pusha
pop
idivb
sub
mov
rcr
push
hlt
mov
xor
lods
inc
arpl
fildll
ja
or
sbb
mov
in
fildll
xchg
cwtl
add
dec
xorb
mov
mov
out
int
push
or
test
adc
stos
jbe
sub
leave
aad
xchg
xchg
lods
pop
mov
pop
cld
js
adc
inc
int3
lret
mov
mov
jbe
clc
ret
stos
insl
adc
in
cltd
int
xchg
xchg
mov
inc
inc
fdivrp
and
mov
iret
pop
push
enter
popa
int3
inc
pop
cwtl
cmpsl
data16
push
adc
mov
jb
nop
jne
insb
sbb
lea
adc
xchg
sbb
dec
in
inc
or
sub
sbb
mov
sbb
cmpsl
repz
repnz
mov
scas
inc
nop
repnz
pushf
push
xchg
popf
dec
push
subb
ja
test
cmp
in
push
mov
and
mov
jecxz
mov
or
jae
inc
notl
push
inc
xor
inc
shl
fnstcw
stc
sbb
dec
jb
arpl
lea
jbe
inc
xor
testl
mov
adc
inc
in
mov
ljmp
pusha
ja
sbb
mov
andb
or
jg
adc
lds
adc
in
sahf
negb
fwait
test
xchg
cmpsl
jno
and
push
icebp
cmpsb
insl
negb
push
cld
insb
sbb
popa
cwtl
mov
cmp
movsl
mov
add
int
pop
ficoml
js
fisttpll
ficompl
cmp
popf
sbb
or
bound
es
dec
xor
and
bound
pop
cwtl
cmp
or
decl
pop
add
nop
inc
dec
repnz
test
pop
mov
icebp
lret
mov
sahf
lcall
mov
xchg
sub
mov
mov
jg
sbb
loop
xlat
xor
sub
aas
and
adc
adc
and
mov
fstpl
xor
nop
in
sbb
add
pop
xor
mov
adc
das
aas
cli
mov
aam
inc
testl
sbb
sahf
jp
push
fcmovb
mov
dec
pop
iret
adc
repnz
int
icebp
cmc
cwtl
mov
clc
push
jle
fisubrs
bound
js
sti
and
icebp
and
jp
cmp
hlt
aam
cmc
add
fsts
test
xchg
xorb
jl
fimuls
enter
pop
in
imul
ljmp
fildl
andl
cmp
jo
xchg
sbb
push
jb
inc
push
daa
mov
xchg
loop
sub
jno
inc
clc
stc
stos
je
lds
push
mov
inc
lds
adc
cli
dec
je
push
cmc
stc
test
cmp
inc
lcall
xchg
lods
adc
sti
push
sarl
dec
mov
gs
stos
iret
cs
mov
mov
pop
jbe
jle
das
mov
inc
or
dec
scas
cmpsl
jae
int3
dec
mov
sub
stos
jmp
shrl
and
sbb
pop
mov
pusha
rorl
std
push
add
gs
xor
dec
outsb
mov
cmpsb
dec
jmp
je
aas
pop
fmull
mov
inc
call
pop
pop
cmc
int3
pop
sbb
push
sbb
xchg
shrl
inc
ljmp
xor
push
pop
inc
inc
pop
sub
mov
cmpl
adc
adc
cmc
scas
adc
divb
pop
push
movb
cltd
mov
lea
repnz
loop
adc
test
pop
inc
mov
adc
lock
shrb
xor
inc
xchg
mov
sub
and
xchg
jb
jle
mov
adc
mov
rclb
cld
sub
jp
cmp
and
xlat
pop
push
cmpsl
mov
push
ss
js
dec
add
sbb
in
xor
loopne
sbb
cmc
mov
inc
lret
adc
or
subl
stos
cmp
into
out
int3
lock
shrb
jmp
dec
mov
mov
sbb
mov
test
xorb
pop
jno
aas
jg
push
adc
mov
mov
add
out
in
sbb
in
and
adc
add
sbb
mov
pop
lea
jle,pn
sar
sbb
das
push
pop
mov
ds
mov
lock
cwtl
adc
out
cmp
push
enter
bound
call
push
xor
iret
aaa
cmp
sub
lcall
stos
pusha
ljmp
dec
lret
add
mov
sbb
mov
call
jmp
lock
sbb
aas
inc
mov
mov
out
movsb
push
shrl
add
xchg
cltd
mov
mov
loopne
iret
sub
cli
and
arpl
pop
sbb
fstps
cmpsl
aaa
mov
out
in
or
inc
xchg
stos
pop
xor
aaa
ja
icebp
test
xchg
sbb
jae
fidivrl
popf
xchg
rcll
push
mov
js,pt
nop
fwait
insb
pop
lea
loop
adc
jle
test
lds
or
lods
cld
xchg
xchg
adc
push
scas
aaa
mov
mov
mov
jp
jg
jecxz
dec
push
repnz
rclb
add
mov
xchg
lahf
xchg
insl
mov
fwait
mov
pop
push
stos
cmpsb
lods
int3
bound
inc
shrl
mov
sarb
fs
pop
xor
test
ds
inc
or
push
clc
mov
inc
mov
push
add
lcall
insl
sbb
faddl
mov
mov
jo
sub
or
xlat
mov
and
lea
jbe
xchg
pop
xor
fisttpl
or
sbb
xchg
adc
dec
pop
cmp
push
push
decl
imul
xchg
pop
mov
lods
out
and
rolb
bound
leave
cmp
sbb
fs
jl
iret
outsl
rcrb
data16
push
push
jo
adc
fisttpl
dec
jmp
push
aam
movsb
fimuls
sbb
sub
xor
jo
mov
or
mov
pop
cmp
stos
inc
mov
xor
int3
pop
pushf
adc
mov
mov
lret
daa
mov
add
sbb
push
pxor
scas
dec
ret
inc
cmp
test
dec
fbstp
lcall
pop
cmc
fwait
pop
popa
xor
push
dec
mov
les
movsb
js
cli
mov
pop
xor
repz
mov
dec
call
imul
shl
in
ss
mov
jb
aaa
ret
fisubrl
divb
xchg
lret
sub
cmp
dec
inc
into
lods
and
dec
cmp
or
stc
push
cmpsb
lods
int3
into
lret
das
nop
fildl
das
pop
xlat
test
inc
push
sbb
sahf
mov
cld
add
push
lods
cltd
pop
and
adc
or
adc
sub
rcrl
pop
clc
scas
jnp
repz
out
mov
and
out
jns
mov
xchg
xlat
negb
and
ss
push
jno
cld
out
xor
insb
int
dec
aas
cmp
rclb
jle
xchg
sub
fstpl
hlt
dec
fldl
in
imul
and
jle
ja
cmp
and
push
lds
jg
mov
pusha
dec
jmp
mov
jnp
popa
shll
cmp
scas
mov
dec
pop
sti
dec
imul
sbb
sbb
out
sub
add
orb
iret
pop
and
jmp
sub
or
pop
jle
movsb
int
adc
imul
shll
in
shrl
mov
push
fimull
cmpsb
xor
or
insb
xchg
jmp
test
and
sbb
outsb
ja
fsubrp
xchg
jmp
lds
mov
int
xchg
dec
repnz
sub
cwtl
push
je
push
rcll
out
dec
xlat
adc
mov
adc
mov
jmp
mov
out
les
bound
push
and
outsl
int
lock
jns
jge
ficomps
in
xor
fwait
and
roll
adc
enter
push
cmp
int
call
dec
pop
andl
mov
scas
sub
mov
xchg
gs
clc
jns
in
movsb
adc
repz
pop
jae
mov
lahf
sub
adc
push
mov
mov
dec
lods
pop
or
lods
xchg
xor
push
jo
cmp
mov
test
mov
lds
fnstenv
or
stos
js
mov
scas
add
inc
adc
fcoms
rcl
sbbl
mov
mov
mov
es
cmp
mov
fcmovu
adc
sub
jnp
fcomps
lret
daa
mov
mov
leave
or
data16
adc
pop
sbb
lret
insl
js
push
std
mov
cmp
and
xchg
lret
sub
imul
jno
pop
insl
hlt
mov
xchg
mov
mov
sub
ret
rol
jns
xchg
pushf
push
lods
gs
cld
mov
lret
mov
cmpsl
fwait
jp
je
push
out
push
pusha
pushw
out
pop
outsb
mov
dec
pop
lret
pushf
push
xor
mov
xor
dec
pop
dec
fdivr
fwait
ds
data16
test
ja
mov
inc
cmp
subl
inc
mov
jb
cmpsb
out
ret
pop
mov
ja
dec
fidivrl
mov
lock
jnp
mov
orl
fdivl
icebp
xchg
or
jmp
inc
fisubrl
aam
or
or
sub
inc
in
das
jo
call
pop
adc
jecxz
out
xor
xor
add
add
mull
mov
pushf
scas
mov
enter
or
dec
push
in
pop
xor
jp
rcll
mov
test
dec
or
sub
xchg
cmc
bound
mov
mov
stos
faddl
pop
adc
incl
sub
push
cmpsb
mov
pop
pusha
cmp
sbb
mov
test
mov
aaa
pusha
jbe
pop
cli
pop
je
and
jns
or
xchg
in
push
repz
lahf
imul
mov
xchg
add
orl
lds
test
je
sti
sti
cmp
rorb
mov
adc
test
cld
insl
fwait
sub
fs
pop
xchg
sub
arpl
cltd
adc
insl
and
lret
lea
jb
fbstp
mov
stc
test
dec
push
enter
pop
xchg
fwait
adc
add
adc
loopne
insb
das
sbb
mov
xchg
das
roll
outsl
push
mov
popw
adc
hlt
fdivrs
and
pop
fistpl
jno
mov
in
push
jnp
add
aas
cmp
aas
int
sbb
out
pop
mov
or
xchg
xlat
or
es
or
mov
ret
jl
dec
xor
lret
jno
sbb
sub
cmp
jecxz
ret
inc
push
dec
std
jbe
outsl
sti
mov
xchg
repnz
bts
stos
jmp
scas
xor
dec
icebp
pop
inc
mov
push
inc
frstor
xor
jae
pop
daa
xor
dec
or
imul
loop
and
adc
cmp
outsl
imul
jns
cmp
inc
push
jns
shrb
adc
add
cld
or
outsb
push
fbstp
pop
shrb
add
sub
inc
mov
sbb
rorb
cmp
clc
adc
mov
cli
mov
or
pop
dec
pop
fwait
aas
lds
incl
xor
or
sub
hlt
aad
dec
lahf
cmp
mov
cmpsl
pop
fs
out
xor
push
inc
data16
and
and
inc
inc
jo
pop
or
mov
pop
sub
mov
xor
xor
jno
pop
add
push
sub
pop
dec
sbb
out
or
in
out
cmp
jne
jecxz
jl
test
push
push
insl
mov
inc
jns
adc
push
fnstsw
xchg
stos
lds
shlb
repz
lahf
jecxz
nop
mov
div
add
fsincos
ja
sub
inc
fidivl
inc
call
jmp
arpl
sbb
std
mov
cmp
dec
add
in
xchg
js
mov
orl
jle
sub
xor
push
iret
sahf
and
and
pop
popf
or
pop
pop
xor
das
inc
jnp
mov
in
xlat
fcomi
cmpsb
sbb
js
or
loope
lahf
mov
sbb
cltd
cmp
pop
cmp
dec
dec
bound
mov
and
popa
jne
icebp
cltd
out
jo
xchg
out
rclb
add
xor
inc
rcll
enter
lods
lods
jmp
cli
pushf
jg
imul
pop
imul
push
bound
ljmp
out
arpl
sub
je
movsb
adc
add
inc
push
mov
cld
mov
jecxz
test
sbb
inc
lds
movsb
scas
icebp
ret
adc
push
mov
sti
mov
mov
enter
js
push
cmp
cld
mov
push
xor
lret
mov
or
nop
mov
ds
scas
inc
mov
stos
sub
lcall
bound
push
ljmp
sahf
jbe
sub
popf
mov
outsl
add
add
lea
lods
dec
ficoms
pop
adc
dec
pop
cmpb
fwait
inc
jne
jg
mov
into
and
mov
pop
in
stos
mov
inc
das
repnz
lret
fst
sti
cmp
xor
int
lock
hlt
jle
mov
add
mov
int3
push
pop
jo
mov
mov
jns
jo
pop
mov
sbb
insl
lods
mov
stos
xlat
mov
fstps
in
mov
cmp
ret
sahf
sbb
arpl
cs
sub
xor
gs
fistl
pop
ja
aas
repnz
inc
fisubl
cmp
fistpl
cmpsl
dec
call
call
ret
mov
sahf
sbb
ljmp
mov
lahf
cmpsb
sahf
pop
push
aaa
xchg
popa
cmp
mov
push
aad
xor
insb
aam
lock
imul
int
aad
arpl
jmp
test
cmpsb
sub
add
out
ret
and
lret
xor
je
and
out
ret
popa
cmpsl
sub
dec
inc
add
mov
add
or
jb
and
lahf
ja
mov
inc
xchg
pusha
xor
call
mov
int
xchg
cmp
mov
mov
in
ljmp
mov
lahf
dec
test
popa
daa
lock
scas
leave
mov
repz
cwtl
mov
roll
je
icebp
xlat
jge
sahf
xchg
movsl
cmp
lret
push
shlb
ss
cs
das
data16
or
stos
push
pusha
adc
incl
inc
test
xchg
jle
out
inc
lods
lea
rcrb
push
gs
lea
push
test
fadd
pop
add
icebp
cmp
dec
divl
xchg
and
pop
cmp
inc
mov
stos
out
daa
sub
cmp
jp
push
mov
mov
outsl
into
and
mov
fwait
push
and
fistpll
pop
and
fistpl
dec
sti
xor
arpl
arpl
inc
decl
mov
sub
loop
cmpl
mov
add
inc
les
push
push
icebp
lods
nop
inc
pop
xchg
push
outsb
dec
icebp
jecxz
jnp
xchg
mov
and
dec
sti
call
and
sti
mov
or
jle
rcrl
popa
adcb
lods
test
popa
icebp
stc
adc
mov
sub
or
lds
cmp
imul
mov
jmp
rolb
jmp
shll
pop
push
mov
arpl
sbb
mov
mov
sbb
dec
xchg
insl
or
mov
inc
mov
adc
inc
inc
inc
ds
and
mov
sbb
add
or
inc
mov
stos
adc
xor
and
pop
jns
adc
movsl
add
arpl
clc
call
aaa
sbb
rep
mov
push
cmp
mov
and
je
shll
push
cmpsb
daa
call
movb
mov
shrb
xchg
mov
add
sub
xor
dec
aam
mov
jp
pusha
pop
xor
out
imul
sub
idivb
cmpsl
sti
out
fidivs
enter
movsl
fists
push
mov
mov
test
lcall
xchg
mov
xor
ficompl
ljmp
repnz
ja
sub
test
xchg
mov
xchg
es
bound
inc
mov
dec
std
neg
jae
xchg
stos
mov
loope,pt
sbb
mov
push
in
xchg
insb
jl
pop
es
adc
pop
or
movsl
popa
mov
add
add
add
imul
mov
jecxz
lret
test
adc
jnp
repnz
cltd
adc
data16
push
mov
pop
cmp
in
xor
in
adc
cmp
nop
cmpsb
mov
fmuls
push
mov
icebp
jne
adcb
gs
ret
bound
and
jle
in
adc
jecxz
cltd
jo
dec
add
lods
rclb
or
mov
fistpll
sub
jbe
dec
add
or
push
sub
cmp
sub
ret
push
addr16
repnz
or
add
mov
cli
lcall
ss
cmp
inc
push
sub
jae
ljmp
ficoms
testb
inc
cmp
sub
push
into
fistpll
scas
test
sbb
cmp
jae
test
xchg
add
pop
jnp
pop
push
pop
ljmp
daa
mov
lds
mov
orb
ds
ficomps
add
scas
add
mov
inc
movsl
xor
stc
sub
test
inc
sbb
push
popf
hlt
push
pop
stc
jne
ljmp
js
dec
mov
xchg
adc
push
insb
subl
ljmp
mov
dec
movsb
insb
sarl
push
fwait
mov
push
out
mov
inc
stc
popf
std
push
xchg
pop
into
push
iret
add
sub
hlt
fbstp
push
icebp
scas
movsb
repz
mov
cmp
lods
lds
fstpt
stos
jp
adcb
xchg
jns
and
cmp
sbb
ret
mov
jnp
lea
ret
mov
cmp
stos
xor
sbb
out
xor
aas
mov
mov
aad
jg
ret
dec
push
mov
es
xchg
sarb
mull
leave
pop
mov
insb
pop
insb
mov
test
test
cmp
repnz
mov
imul
loopne
pushf
adcb
imul
les
pop
or
scas
push
dec
push
sbb
xchg
scas
adc
jno
jl
and
dec
add
xchg
xlat
push
sbb
cmpsb
sub
int3
aas
arpl
sbb
and
pop
jg
lret
cltd
add
add
cli
cmp
ret
adc
ja
mov
cmpsl
push
ss
fucomip
inc
nop
inc
pop
xor
jle
aam
mov
xchg
dec
int3
stos
inc
mov
ficoml
repz
add
nop
dec
stos
scas
or
xor
sbb
dec
int
push
jg
and
push
mov
imul
frstor
or
in
and
movsb
dec
gs
jge
loopne
add
dec
in
cli
lds
jg
push
stc
or
faddl
stos
shll
xchg
sub
mov
adc
dec
sub
cltd
xchg
outsl
fwait
cwtl
mov
fs
cmpsb
push
mov
jnp
mov
shrl
outsl
push
mov
add
adc
push
jmp
aam
data16
sbb
movsb
adc
push
outsb
aam
ss
jnp
cmp
repz
and
pusha
adc
popa
inc
pusha
std
mov
cmpl
jb
or
je
and
cs
pushl
mov
and
mov
mov
xor
and
mov
cmpsb
cmp
dec
in
imul
popf
mov
out
cmp
arpl
push
add
sbb
dec
inc
mov
daa
jnp
add
pop
pop
ljmp
cmp
fdivl
sub
fstl
mov
jo
push
mov
mov
jge
popf
pop
ljmp
loope
insb
push
adcl
dec
cmp
sbb
addr16
adc
shlb
push
cmp
fcmovnu
fmull
clc
sahf
repz
xchg
int
or
adcl
adc
shrl
sub
adc
lods
mov
jns
out
dec
pop
push
push
arpl
and
fcmovu
add
cltd
lahf
fisttpll
add
cmpsb
pusha
loopne
push
repnz
mov
aam
mov
or
mov
negl
xchg
test
push
iret
pop
add
jmp
cmp
ljmp
fcomp
aaa
not
xchg
mov
leave
imul
push
lock
pop
xchg
test
adc
or
xchg
xchg
fnstsw
add
or
jecxz
adc
mov
jbe
sbb
fwait
scas
xchg
xor
sbb
popa
mov
sti
and
clc
push
jmp
nop
sbb
lcall
or
fldt
sbb
lret
push
cltd
imul
into
mov
orb
push
inc
into
jmp
adc
repz
dec
loop
leave
fsubrs
mov
mov
push
out
inc
mov
mov
into
cld
cmp
andb
xor
inc
stc
gs
out
or
cld
and
push
and
stos
xor
lods
pusha
loop
adc
inc
push
or
es
fyl2x
sub
ja
lret
subl
add
xor
xchg
fistpll
stos
push
enter
ret
lock
xchg
inc
fnstsw
jmp
jmp
dec
sbb
push
repnz
gs
jno
stc
adc
je
dec
ret
add
push
mov
or
inc
aam
pop
jg
jl
dec
lods
adc
aam
push
hlt
fldt
mov
insl
fdivl
cltd
xchg
adc
pop
loop
and
adc
mov
popl
jge
in
ja
lods
ja
add
ret
popf
jg
xchg
add
test
pusha
mov
in
xchg
pop
push
mov
sti
cmpsl
mov
adc
adc
shlb
dec
mov
and
mov
mov
mov
jo
aam
mov
add
xchg
dec
repnz
sub
rolb
pop
or
lret
ficompl
mov
or
adc
lret
loop
adc
add
or
sbb
cmp
mov
out
jb
sarb
or
adc
xlat
jecxz
cmp
dec
das
mov
pop
mov
or
mov
mov
or
cmp
mov
outsb
xchg
les
jmp
cmpsb
fsubrl
decl
jns
sbb
cmp
push
mov
roll
fsubrl
add
push
insb
xor
cmp
enter
dec
pop
sub
lods
movsb
repz
lahf
mov
adc
jne
lret
das
loope
adc
xor
insb
push
out
lea
jb
xchg
in
cmpb
or
je
rcll
push
imulb
sbb
dec
add
dec
push
loope
jmp
cmp
mov
inc
movsl
repnz
mov
jp
jg
ss
xor
push
lretw
inc
pop
mov
jecxz
bound
inc
sub
lock
shl
adc
cwtl
aas
clc
outsb
decb
inc
adc
xlat
idivb
movsb
lahf
pop
pop
sub
push
sbb
rorb
mov
cmp
aaa
aad
andb
sti
leave
sub
hlt
jmp
aaa
popf
xchg
adc
dec
inc
dec
fldcw
or
sbb
mov
enter
shll
pop
inc
hlt
mov
or
add
movsb
shll
repnz
jne
and
rorl
mov
gs
inc
adc
adc
pop
aad
ds
add
test
jno
push
inc
js
mov
mov
test
leave
loop
lods
pushf
mov
lea
test
or
data16
movsb
ret
fwait
es
push
nop
out
or
pop
xchg
popf
cmp
icebp
add
jo
mov
das
jg
pop
fiaddl
xorl
pop
stos
movsl
adc
shrb
aad
xchg
imul
push
outsl
mov
popa
xchg
pop
outsb
xchg
xlat
push
mov
fldt
and
leave
test
leave
mov
out
pop
pop
jo
xchg
les
adcb
fbstp
jge
adc
leave
outsl
std
sub
jb
popa
js
fldt
fcompl
cmp
mov
int
ret
enter
test
data16
jno
inc
repz
mov
jge
mov
dec
repnz
mov
aaa
mov
outsb
xchg
loop
or
shlb
pop
add
lods
adc
test
xchg
pop
in
mov
mov
test
in
inc
out
daa
je
adc
stos
jmp
or
test
adc
fsubrl
jnp
jl
imul
adc
in
sbb
push
xchg
xor
jbe
iret
bndcl
jp
sti
jnp
push
fidivrl
cmp
cli
dec
shrl
subb
cs
loop
sbb
mov
ljmp
inc
mov
sbb
andl
sbb
sar
loopne
repnz
out
imul
mov
in
jle
sahf
and
gs
pushf
aad
ja
pusha
mov
loop
mov
lret
ds
shll
or
push
sbb
mov
stc
cmpsb
loopne
mov
sbb
cmp
xchg
pop
adc
sub
adc
lods
add
mov
cli
mov
sti
je
mov
js
sub
push
cmpb
mov
xchg
sbb
into
idivb
cwtl
pop
cmpsb
xchg
call
sub
sbb
push
and
push
test
movsl
in
dec
jne
sub
outsb
or
inc
lcall
xchg
sbb
int3
mov
cmp
and
and
mov
push
and
aad
out
int
push
add
leave
cmp
enter
int3
out
or
ss
fsts
mov
dec
test
mov
dec
jo
xchg
jo
lods
psllw
repz
repz
or
pop
neg
loope
xchg
notb
scas
xchg
lods
jg
mul
xchg
dec
jne
mov
dec
test
mov
pop
mov
mov
in
out
pop
xchg
dec
cmpsb
jge
mov
xchg
xor
inc
inc
dec
inc
mov
push
sub
cmp
daa
js
lret
sbb
in
outsb
test
xchg
cld
push
mov
sarb
add
enter
mov
aaa
pop
jg
jb
icebp
fistpl
mov
xchg
dec
add
lds
fs
mov
js
lret
lret
jae
daa
scas
jno
cmpsb
cmp
sbb
mov
je
mov
out
xchg
fisttpll
push
imul
ret
xlat
dec
out
imulb
out
mov
ja
mov
not
mov
push
jg
test
pusha
filds
fiaddl
out
jle
add
push
iret
scas
arpl
mov
incb
fs
push
push
mov
and
pop
movsl
mov
and
enter
xor
cmp
stc
lcall
inc
fs
sarb
mov
mov
fildl
push
mov
inc
mov
lret
xchg
jecxz
stc
push
arpl
inc
mov
cmp
js
dec
mov
or
add
jge
pop
mov
movsb
and
xlat
and
pop
inc
mov
or
cwtl
jmp
sub
mov
add
or
or
sbb
lods
mov
push
stc
lock
out
aaa
xor
push
lods
popa
fisubl
in
movsl
cmp
xchg
ffreep
mov
das
push
cmp
cld
int3
jne
sti
mov
ss
ljmp
in
rorl
push
aam
dec
jno
pop
inc
out
mov
mov
sub
sbbb
cmp
jb
and
cli
sub
fistps
or
popa
mov
push
out
pop
mov
dec
push
dec
pop
call
mov
xlat
imul
xlat
and
xchg
adc
into
dec
jne
sbb
mov
popf
jbe
repz
arpl
pushf
jbe
inc
call
or
clc
ficompl
inc
fisttpll
mov
cmp
ret
add
mov
in
shrb
xor
sub
shlb
mov
scas
popf
ljmp
and
arpl
lret
add
test
lock
inc
sub
movsb
xchg
add
cmpsb
fxtract
jp
out
or
adc
adc
pop
rcl
or
mov
add
mov
lret
xor
dec
jno
jns
scas
loop
jb
mov
adc
popf
sub
out
cld
jb
xchg
imul
addr16
pop
pop
pop
pushf
int
push
jle
popa
dec
jns
mov
int
mov
sub
in
xchg
push
outsl
pop
inc
push
mov
inc
clc
shlb
inc
pop
mov
and
jmp
aaa
cmpsb
or
rcl
cld
clc
mov
and
lods
adc
rolb
mov
test
sub
jmp
sti
jb
jmp
insl
or
sbb
push
vdivss
popf
jb
xorb
dec
les
pop
mov
lds
sub
cmp
sbb
xchg
mov
lcall
jecxz
xchg
cmp
inc
bound
shl
push
gs
xchg
fcmovb
mov
push
mov
and
or
inc
xchg
fmul
xor
xchg
dec
fimuls
lods
mov
push
leave
hlt
pop
adc
mov
xchg
ret
xor
lock
hlt
arpl
mov
idivb
cld
jne
roll
jb
xor
shrb
push
mov
test
adc
push
testb
ficoml
inc
add
inc
in
xchg
scas
cmp
xor
ret
sub
insb
aaa
pushw
xchg
imul
lods
sbb
lahf
mov
inc
rcrb
frstor
pusha
sub
mov
mov
mov
nop
adc
lahf
or
adc
pusha
outsl
or
test
lods
mov
lret
in
inc
js
add
mov
jnp
into
cmp
push
cmp
adc
and
xchg
push
mov
leave
pusha
in
lret
ficoml
arpl
sbb
jecxz
cmp
fs
test
pop
push
jne
inc
in
repz
mov
and
push
jbe
sbb
jae
xchg
push
cmc
pop
imul
int
in
jnp
cmpsl
cmp
into
iret
mov
lock
arpl
push
cwtl
jb
es
std
into
xchg
or
in
rcr
lcall
lods
pop
out
popf
lahf
jg
dec
push
popa
push
scas
mov
push
dec
daa
mov
lods
inc
xor
and
loope
icebp
pop
push
xor
jmp
loope
mov
adc
popa
movsb
adc
pop
insl
lcall
incl
push
pop
and
inc
shlb
out
or
dec
push
es
mov
or
or
sbb
mov
mov
mov
fdivrl
xchg
fisttpll
and
mov
push
int
vmovntdq
in
and
stos
insl
mov
jge
pop
push
jo
xchg
pop
dec
mov
mov
xchg
xchg
adc
in
bound
mov
icebp
fucom
neg
jne
jnp
mov
lret
cwtl
lods
dec
test
dec
das
add
push
push
lret
subb
push
test
cld
mov
sub
ds
mov
mov
loop
pop
loope
push
lret
arpl
and
push
adc
inc
jnp
pushaw
mov
sbb
dec
shrb
pop
inc
test
jge
vpmacsdd
fsubrs
sub
fwait
in
and
mov
bound
imul
rol
mov
fisttpl
mov
jb
out
aam
sbb
daa
aam
fisubl
int
xchg
xchg
push
pushf
std
jg
push
pop
dec
fistpll
fstp
movsb
iret
jno
incl
lods
fnstcw
pop
pop
ficoms
fwait
es
dec
jo
outsb
mov
pushf
jecxz
jg
push
and
xor
test
fbstp
or
lcall
stos
pusha
mov
fidivrs
popa
cli
dec
gs
dec
andl
cmp
adc
push
jae
mov
lock
cmpsl
mov
hlt
mov
ret
dec
push
cld
mov
out
shrb
push
push
xchg
mov
pop
and
cmp
xchg
shlb
xchg
in
loope
mov
inc
push
mov
push
pop
pop
sti
sub
arpl
mov
pop
push
push
sbb
xchg
xchg
xor
mov
scas
pushf
sub
jge
call
cmp
sbb
popf
push
sahf
jns
fistpl
inc
aam
sar
jecxz
cvtps2pi
add
insb
xchg
mov
mov
fs
ficompl
inc
cli
inc
and
gs
inc
insl
and
cmc
enter
dec
add
mov
mov
mov
jmp
mov
ds
pusha
out
cld
cbtw
xor
inc
imul
xchg
jno
rclb
mov
icebp
mov
inc
pop
xor
popa
gs
pop
sub
fsubs
in
mov
sbbb
xor
or
es
xor
sub
je
es
and
idiv
mov
nop
je
jbe
roll
daa
inc
incb
stc
lods
popf
add
add
xchg
loop
pop
pop
stos
sti
in
popf
sbb
lahf
ror
mov
xor
xor
adc
mov
nop
or
mov
insl
push
je
xor
stos
js
cmp
push
fldl
imul
shrb
daa
test
jp
sub
push
and
clc
xchg
ja
ds
fcoml
loop
scas
xchg
aam
fists
xor
xchg
movsl
in
call
ljmp
repz
mov
mov
and
mov
pop
adc
push
lret
add
data16
xlat
in
adc
add
mov
dec
icebp
mov
push
addr16
ja
and
mov
cmc
in
in
fwait
sahf
fs
jo
sbb
sbb
inc
pop
xchg
xchg
xchg
add
repz
cltd
test
sbb
add
push
cmp
es
xor
cmp
push
mov
or
dec
insb
jbe
dec
shrb
inc
into
scas
test
and
sub
movsb
inc
adc
or
adc
test
adc
mov
loopne
lods
xchg
dec
add
push
add
repz
cld
sbb
out
xchg
pop
jl
xor
xabort
popa
in
mov
ret
cld
xor
clts
pop
call
inc
loop
orl
mov
imul
js
in
lock
movq
push
sbb
andl
outsl
pop
ljmp
inc
sarb
into
inc
pop
pop
loop
xor
fcomps
fnstsw
out
popf
and
mov
or
mov
lret
cltd
or
sub
adc
shlb
xor
jecxz
adc
pop
inc
mov
mov
or
ss
out
dec
jno
ljmp
sub
loop
lock
mov
fcmovbe
pushf
pop
mov
ljmp
lcall
fwait
shr
loope
inc
jp
sarl
repz
das
jnp
add
adc
pop
leave
mov
int
loope
dec
das
orl
push
jp
xor
mov
inc
mov
test
jle
mov
pop
mov
xchg
pusha
dec
mov
outsb
sbb
and
nop
or
out
pop
in
adc
ret
add
pop
sub
cli
mov
lds
into
pop
cmp
mov
icebp
into
sbb
mov
mov
imul
ljmp
push
cs
lcall
hlt
jle
stos
and
push
mov
rorb
adc
cmp
and
sub
mov
xor
jg
sub
loope
fsubr
loope
cs
pop
jns
pop
lret
jns
outsl
mov
and
add
sub
out
lods
xchg
loope
xchg
mov
push
cld
insl
pop
dec
out
icebp
cli
ds
mov
repnz
mov
jmp
or
testl
jge
or
jp
imul
out
scas
movsl
mov
ja
pop
rcrl
ljmp
mov
cwtl
add
sbb
cmp
add
xchg
add
test
scas
sbb
dec
add
inc
jne
cmpsl
mov
mov
pop
inc
out
fidivrl
into
cmc
cmp
mov
inc
push
mov
or
sbb
sbb
jno
pop
jno
aas
repnz
and
or
je
ret
sbb
sbb
aam
dec
fisttps
ljmp
movsl
push
idiv
aad
scas
xchg
add
jae
daa
outsb
xlat
mulb
mov
and
in
inc
mov
repnz
xchg
xor
popa
dec
xor
arpl
cmp
jle
mov
xchg
testb
adc
and
lret
push
or
in
ljmp
cmp
push
call
ja
in
jne
and
xor
test
sbb
xor
pop
icebp
sub
inc
test
out
push
xchg
sbb
lods
imul
xchg
ljmp
xchg
jns
fwait
adc
pop
dec
out
xchg
mov
lahf
je
cmpb
mov
or
insl
xor
pop
gs
mov
addl
cmpsb
cwtl
into
pop
imul
jg
inc
hlt
test
xchg
aas
jge
mov
xchg
mov
push
sti
pop
mov
nop
cmp
repz
and
cmp
jbe
cld
in
xor
ds
shll
add
mov
xor
mov
mov
cmp
leave
mov
adc
filds
dec
mov
adcb
xchg
lcall
sti
mov
cmpsl
and
mov
sbb
sarl
cmp
xchg
adc
stos
mov
outsb
aas
jo
mov
lahf
outsb
jns
pop
mov
jbe
dec
jns
jl
push
push
ljmp
jno
mov
rcrb
test
stc
mov
pop
sti
aam
lret
scas
repnz
decb
xchg
lds
test
fldl
sbb
sbb
loope
sub
or
repnz
xor
add
cmc
add
cmpsb
push
mov
loope
xor
pusha
sbb
mov
add
es
sbb
je
adc
les
loope
sbb
and
dec
xor
rcl
popa
scas
push
push
cmp
inc
cmc
movsb
push
pop
ja
push
ss
and
adc
mov
rolb
repz
cli
pop
test
pmulhw
lock
sub
cmp
and
sub
xchg
incl
mov
int3
and
vphadddq
fsubp
jmp
xchg
cmpb
ljmp
insb
xor
ds
bound
xor
jmp
pop
sti
mov
push
test
fsubrs
dec
mov
aam
in
xchg
shlb
test
push
pop
xor
leave
imull
cmp
insl
rol
xor
fildl
pop
dec
stc
cmp
jae
adc
add
xorb
jae
pop
xchg
jl
inc
dec
mov
or
test
add
mov
inc
mov
imul
mov
fsubrl
repnz
test
in
dec
sbb
aad
dec
push
pop
loope
inc
or
xchg
lds
sahf
ljmp
pushw
clc
inc
jb
cltd
mov
push
test
loop
test
mov
iret
sbb
mov
and
test
inc
popa
pop
icebp
xchg
orb
mov
inc
mov
adc
pop
xchg
mov
in
rcr
adcb
bt
mov
mov
aad
cltd
inc
dec
ss
xor
data16
cmp
cmp
in
adc
push
outsl
cmpsl
sbb
inc
iret
lods
lahf
adc
and
jb
lds
lahf
sub
cmpsl
rcr
inc
pop
mov
jo
stos
xchg
mov
mov
mov
push
adc
stos
in
lret
jmp
or
aad
cmp
xor
icebp
rcrl
fldenv
xchg
add
jmp
int3
inc
test
pop
imul
and
cs
xchg
jns
sub
lods
cltd
add
and
sbb
mov
jmp
pop
inc
cld
sbb
xchg
push
mov
nop
dec
loop
xchg
aaa
mov
out
negb
lcall
js
int3
xlat
push
adc
mul
rep
fwait
jl
push
mov
enter
insl
lea
xchg
push
mov
lahf
add
pop
mov
aam
lods
stc
push
or
mov
inc
jecxz
xchg
fstps
mov
andb
inc
aas
in
stos
out
xor
lret
scas
orb
dec
sub
adc
sti
ficoms
inc
mov
sahf
xchg
xor
loopne
test
movsb
and
mov
jle
test
test
pop
sbb
dec
pop
inc
or
mov
je
es
rol
outsl
cld
xchg
test
in
jb
and
sub
and
xchg
inc
std
or
nop
xchg
and
je
fistps
jne
js
js
dec
xchg
out
sbb
jmp
movlps
js
aas
fisttps
aad
ss
hlt
mov
pop
in
lcall
test
xchg
add
sub
jno
or
xchg
test
adc
cmpsl
scas
in
inc
leave
adcl
add
sub
add
push
addr16
popa
jp
repnz
jns
subl
lock
imul
shlb
cmpl
sti
imul
int3
enter
call
dec
or
out
and
dec
cs
fbld
and
and
cltd
daa
rcpps
leave
jg
and
adc
cld
fiaddl
jmp
out
shlb
test
arpl
pop
mov
adc
pop
and
fmull
pop
xchg
inc
insl
or
xchg
movsl
pop
adc
or
cmp
cs
cltd
ljmp
sub
push
jae
mov
sub
jle
mov
push
xchg
stos
sbb
inc
cmc
mov
mov
mov
jp
lods
add
add
out
push
pop
add
adc
lret
sub
mov
inc
repnz
xor
dec
mov
add
sub
paddd
je,pt
cmp
iret
rolb
jb
mov
pop
ss
dec
add
and
and
notl
inc
sahf
ja
ds
pop
ret
mov
cmp
cmp
jl
pushf
sahf
mov
inc
mov
es
push
shl
jbe
push
mov
push
out
scas
and
and
add
nop
xor
jo
dec
js
jmp
or
cs
sub
jecxz
in
or
inc
pop
les
fmul
jnp
in
loopne
imul
int3
jo
test
in
push
movsb
iret
cmp
out
xchg
into
mov
adc
mov
jbe
addl
psubq
jb
ja
dec
adc
pop
jg
ror
sub
das
lahf
mov
sahf
dec
cwtl
stc
pop
data16
mov
clc
xchg
arpl
nop
push
push
lods
loopne
sub
jno
out
loope
outsb
mov
or
mov
or
outsl
xchg
pop
inc
mov
pop
sbb
mov
mov
jb
in
sub
jg
push
sbb
or
xor
dec
mov
push
js
sbb
mov
mov
fcmovnu
jmp
adc
push
into
dec
roll
iret
mov
pusha
xlat
and
cmpsb
sbbb
scas
xchg
ret
add
movsb
push
xor
insb
xchg
jns
add
dec
xchg
orl
loopne
fmuls
lcall
ret
lea
test
mov
iret
scas
pop
lods
jge
mov
add
into
pop
pusha
shr
cmp
int3
xchg
in
inc
gs
sub
sbb
pusha
xlat
jge
pop
pop
xchg
inc
rsqrtps
push
sbb
xchg
adc
dec
xchg
mov
xor
fnstsw
popf
rcrl
popf
pop
test
mov
or
sbb
jg
xor
or
gs
jp
insl
inc
and
xor
sub
adc
inc
mov
in
mov
mov
ljmp
add
decb
ret
sbb
sub
cwtl
pop
popa
mov
jp
fs
jb
dec
aad
jne
sub
cmp
movsl
adc
idivl
jl
jns
mov
int
notl
lods
add
pop
shr
jne
fmuls
fldl
leave
mov
lock
fwait
das
cld
mov
fldt
xchg
aas
pop
repz
fsubr
vphaddubd
fldenv
mov
mov
outsl
inc
cvtpi2ps
ffree
outsb
cltd
mov
call
in
mov
adc
mov
lcall
sbb
stc
mov
or
outsl
jp
sbb
roll
jp
cld
sub
lahf
sub
jbe
fbstp
mov
push
rorb
lahf
or
cmp
push
lods
jns
or
inc
out
pop
in
inc
xor
fisubrs
and
jno
test
and
loope
enter
dec
push
roll
push
fldcw
scas
movsl
pop
sbb
repnz
clc
mov
fwait
xor
iret
and
or
jae
push
pop
dec
sub
mov
into
inc
push
sub
repz
loop
jne
aad
dec
fstpt
pop
stos
insl
or
loope
nop
repz
bound
daa
push
in
sbb
cmpsb
xchg
xchg
pop
sub
mov
inc
loop
cld
rcr
test
call
lcall
out
bnd
sub
nop
xchg
jmp
push
jg
repz
dec
cmpsb
push
in
mov
fs
pop
hlt
leave
jnp
add
or
rcll
cwtl
stc
and
sbb
test
testb
nop
xor
dec
loop
lea
xor
pop
xchg
stos
int
push
mov
push
and
fs
je
and
stos
out
ljmp
add
jl
and
shlb
xor
add
mov
fidivrs
rorl
sti
mov
jge
gs
push
movsb
mov
pop
pusha
cmp
in
arpl
in
mov
test
or
pop
add
imul
into
or
shrl
mov
test
mov
mov
test
daa
ja
into
mov
outsb
pop
xor
test
ret
jg
leave
arpl
fbstp
mov
frstor
stos
nop
lds
nop
in
in
clc
in
test
nop
xor
inc
inc
adc
inc
paddusw
call
mov
pop
out
mov
int
inc
lods
loope
mov
pop
fldenv
iret
out
mov
mov
fidivs
or
jle
jo
sub
adc
cs
stos
nop
mov
dec
push
sbb
pop
fdivrp
cvtdq2ps
jp
and
sahf
scas
cmc
and
and
shll
scas
shlb
pop
and
mov
out
xchg
xchg
adc
sub
daa
movsl
divl
into
mov
scas
cli
es
std
and
inc
inc
test
mov
sub
inc
xchg
enter
sub
and
frstor
sahf
lods
dec
push
ret
jp
jns
mov
sti
push
pusha
mov
pop
das
push
mov
test
rep
lcall
aad
pop
add
push
sub
inc
mov
iret
lret
outsl
mov
mov
sbb
mov
icebp
mov
xchg
dec
int
loope
bound
in
cmp
jo
movsl
aas
and
pop
ja
iret
insl
stos
jmp
push
sbb
xchg
mov
jmp
sbb
data16
sarl
mov
fisubrl
roll
inc
push
lret
movsb
or
inc
dec
stc
or
into
sbb
aad
inc
cli
or
test
adc
mov
sbb
das
scas
and
or
cli
aad
push
adc
cmpsb
push
xchg
adc
movsl
xor
sbb
inc
daa
sahf
std
sbb
or
and
lods
mov
nop
leave
ret
aam
xchg
add
mov
jb
test
movsl
jmp
ficoml
push
adc
fs
pop
xor
mov
test
pop
fisttpl
test
jmp
xchg
xchg
popa
xchg
xor
aad
sbb
pop
scas
clc
jae
push
stc
sub
xchg
adc
sbb
jno
or
andb
mov
ja
fs
mov
and
rcl
jge
int
sub
mov
test
sub
lock
inc
mov
arpl
sub
shll
outsb
jle
pop
pop
cmp
xor
and
mov
loope
sub
jle
mov
sahf
jnp
adc
sti
lock
aaa
into
hlt
test
pop
xchg
xor
jle
and
jo
and
dec
mov
imul
dec
lcall
xchg
jle
mov
mov
or
fldl
push
fsts
sti
push
pop
sahf
jmp
lret
dec
scas
stos
popa
cmp
mov
andb
enter
jne
jne
xor
cmp
mov
jae
add
sub
test
inc
push
cmp
and
dec
mov
ss
push
push
movsb
insl
iret
dec
pushf
aad
cltd
fsubp
fwait
push
test
or
stos
inc
pop
jecxz
js
xchg
cltd
xor
loopne
ss
rclb
mov
xchg
pop
cmp
mov
add
inc
jae
fcoms
cmpsl
icebp
fiadds
cmp
ret
xchg
adc
rolb
cmp
cltd
mov
cs
pop
scas
jno
arpl
cmp
xchg
pop
inc
repz
data16
imul
addr16
pop
and
imull
loop
adc
cmp
outsl
cmp
movsb
jg,pt
sar
xchg
push
mov
xchg
add
movsb
loope
jecxz
cli
movsb
stos
jmp
push
and
push
loopne
imul
jle
callw
fisubrl
dec
sub
pop
ljmp
xor
notl
pusha
repz
movb
outsl
and
iret
mov
jnp
loopne
push
mov
test
enter
data16
int
stc
pop
cmp
lahf
sti
sub
decl
mov
jmp
out
mov
out
adc
aam
adc
push
mov
leave
aad
scas
testl
jle
adc
xchg
or
cmp
adc
jne
jl
fdivl
jno
rcrl
inc
ss
push
jae
fistpl
and
lahf
sahf
xor
sbb
outsb
lcall
mov
add
sbb
xor
mov
mov
add
mov
jae
xorb
jnp
imull
mov
push
add
push
pushf
or
loope
ret
inc
test
xor
mov
xchg
ss
sti
imul
or
inc
pop
jl
mov
cmp
push
rclb
fildll
ficompl
xchg
inc
xor
cmp
hlt
andl
int3
cltd
out
leave
or
inc
xchg
mov
xor
pusha
or
loopne
add
lock
imul
push
ss
mov
xor
mov
dec
mov
mov
sub
cmpb
xor
cmp
dec
push
mov
mov
sub
fs
int3
ljmp
shlb
std
sbb
fcoms
sahf
bound
out
int
fwait
lods
xor
inc
or
sub
and
xchg
shr
shll
xchg
cmpsl
mov
scas
dec
shlb
add
clc
mov
xor
mov
push
mov
mov
popa
scas
pop
pop
pop
rorl
aaa
stc
xchg
les
stos
subb
cmp
or
rorl
mov
adc
lahf
testl
out
push
in
mov
adc
lahf
inc
sub
imul
jne
insb
mov
pop
sub
rcrl
dec
fnstsw
sbb
loop
test
in
insl
jne
leave
or
mov
add
mov
mov
dec
push
or
shl
push
leave
inc
pushf
push
add
shrd
aam
jge
incl
cltd
dec
xor
mov
lcall
add
subl
cmp
cli
lahf
orb
pushf
aam
xchg
and
add
insb
jae
adc
mov
std
stos
sub
add
ds
fcoms
mov
rcrb
iret
aad
test
pusha
mov
push
sbb
add
ret
mov
movsb
rclb
xor
xchg
jmp
pop
mov
test
inc
jmp
aas
rclb
test
sbb
inc
cmp
adc
cmp
enter
insb
xchg
mov
jns
mov
ja
dec
ds
dec
lret
xchg
sub
adc
gs
pop
and
xor
popa
inc
in
mov
dec
jns
or
jnp
mov
and
push
xchg
pop
sub
xlat
orl
sbb
inc
mov
sub
push
inc
inc
mov
fidivs
pop
clc
mov
hlt
sub
push
or
or
jns
jmp
pop
mov
lcall
aas
stos
je
jbe
dec
ss
mov
cmc
cmp
cmc
scas
pop
or
push
loop
xchg
mov
loope
adc
adc
je
adc
pop
loope
test
inc
arpl
push
mov
xlat
cmc
fcomps
inc
mov
or
pop
inc
testb
inc
in
mov
mov
stc
add
enter
jge
mov
lahf
out
xchg
add
jge
js
mov
cmp
fiadds
repz
push
out
popf
xchg
xchg
and
cwtl
imul
jp
jecxz
xchg
and
mov
jg
es
lods
inc
push
outsl
pop
adc
aaa
mov
pop
gs
outsl
cmp
jae
gs
cmp
test
in
cmovno
and
dec
rcl
sarb
out
cmp
adc
int
mov
xchg
dec
into
mov
xchg
cld
sbb
loopne
xor
mov
shl
addr16
xor
adc
lds
jg
and
aas
mov
jnp
jmp
aaa
inc
sahf
je,pt
gs
pop
test
sbb
loope
outsl
add
ret
lea
mov
iret
jae
xor
mov
shrb
daa
sti
pop
fmuls
cmp
dec
add
lea
inc
or
ds
dec
les
xchg
fsubl
adc
xchg
movsl
bound
sbb
outsl
mov
daa
lock
dec
into
dec
test
out
test
icebp
push
bound
jo
lret
in
cld
lcall
push
ret
loope
imul
pop
cmp
push
sbb
data16
pop
mov
sarb
outsl
mov
jne
add
mov
shlb
dec
dec
cmc
lcall
inc
sbb
xchg
push
pop
push
into
in
and
mov
mulb
xor
insb
ljmp
std
imul
roll
mov
add
insl
and
faddl
sbb
mov
pushf
pop
jnp
imul
mov
jge
or
ljmp
mov
push
and
out
lock
mov
outsl
mov
sub
cmpsb
xchg
inc
daa
loope
adc
adc
xor
sahf
jns
int3
int3
dec
jo
dec
add
sbb
mov
or
jl
outsb
cmp
sbb
pop
out
or
sub
inc
imulb
pushf
ds
in
insl
add
pop
mov
adc
int
lcall
inc
insb
std
test
dec
ja
imul
test
cld
push
test
pop
mov
lahf
mov
lods
out
and
xor
add
mov
ret
outsl
pop
xchg
or
jle
and
and
sbb
mov
and
pop
inc
mov
mov
movsl
and
mov
mov
stos
mov
andb
and
scas
out
and
sbb
dec
stos
aad
sarb
mov
xor
jno
sbb
enter
push
dec
inc
push
xor
fwait
sahf
lahf
jp
inc
sbb
xchg
mov
mov
push
inc
add
sub
jb
mov
xor
fildl
or
int3
data16
jo
mov
repnz
push
sub
cmc
xor
into
jl
push
xchg
out
in
push
mov
mov
push
jg
nop
mov
fnstenv
scas
ret
scas
faddl
cmpsl
ljmp
rcrl
clc
sbb
mov
mov
enter
and
mov
xchg
or
rolb
push
mov
xor
sub
dec
and
in
xchg
fisttpll
int3
int
lea
dec
les
cmpsb
imulb
push
fsts
mov
aas
es
jmp
out
lock
imul
shrb
cmp
das
mov
add
push
pop
push
pop
out
jmp
jecxz
add
ljmp
test
adc
popf
sbb
movsb
lods
and
add
and
out
cmp
lret
and
shrb
jp
jo
jle
cltd
test
or
leave
aad
dec
hlt
mov
pop
out
pop
pop
mov
mov
add
mov
shrb
jl
sbb
jge
test
push
scas
and
ljmp
jmp
xor
lea
jbe
cmp
push
sub
sub
in
inc
adc
fildll
pop
js
clc
pop
jmp
push
push
adc
dec
add
ret
repnz
mov
mov
andb
jle
push
and
jle
inc
push
jp
push
movhps
ficoms
mov
pop
inc
jno
dec
xor
add
outsb
mov
lea
cmp
cmp
test
insl
das
shl
test
sbb
inc
dec
inc
je
xor
jmp
and
call
lods
mov
sbbb
call
mov
lret
leave
es
dec
inc
or
lods
xchg
cmp
push
push
xchg
sbb
stos
jmp
mov
lret
push
mov
fwait
cmc
xor
jbe
xchg
je
mov
pop
es
fdivl
icebp
pusha
mov
push
xchg
xchg
test
sar
sub
decb
js
mov
cld
or
xchg
int
mov
adc
inc
into
pusha
cmp
push
popl
cmp
in
jle
sub
mov
fcomp
push
mov
mov
in
sbb
cmp
cwtl
fisttps
cmpsb
cli
icebp
inc
cmpsl
push
lock
int3
pushl
xor
xchg
loope
xor
xorb
dec
dec
or
xor
or
jge
or
push
and
and
outsl
loope
shl
fmulp
mov
xorb
cltd
jnp
or
fnsave
lea
into
cmpsb
fiaddl
inc
pop
movsb
jnp
out
mov
sub
dec
pop
imul
mov
xorb
subl
shll
int
xchg
adc
mov
adc
std
fsubs
out
jns
mov
pop
iret
push
enter
sbb
mov
xchg
dec
jns
mov
arpl
sub
pop
lret
dec
push
out
scas
jb
and
orb
addl
mov
cli
pop
insl
or
insb
xchg
xchg
mov
push
ja
jl
fs
lea
into
imul
hlt
mov
mov
cmp
in
xchg
insl
cli
jp
sub
or
pusha
in
xchg
cmp
cmp
in
push
iret
push
movsb
push
outsb
sti
fdivs
sbb
fldenv
and
and
cmp
pop
cmpsl
add
pop
jbe
loope
inc
mov
xor
pop
pop
js
add
mov
sbbb
inc
aas
mov
xor
mov
icebp
cwtl
jnp
adcb
adc
out
rolb
sub
xor
xor
xor
mov
in
adc
add
sarb
sub
fbstp
out
rorb
fdivr
js
and
scas
in
out
bound
mov
testb
sbb
clc
push
xor
inc
jb
jge
rcll
in
pop
mov
jbe
orb
and
fs
xor
popf
sahf
and
jbe
mov
jge
mov
mov
xchg
jecxz
es
dec
or
fisubs
cmc
cmp
sbb
add
aam
test
adc
inc
mov
dec
jmp
loop
fstl
cld
mov
mov
mov
aaa
pusha
out
movsb
fiaddl
je
stos
jle
mov
sti
mov
jae
enter
popf
out
addl
mov
xor
jge
ja
cmc
jg
jp
cmp
js
jge
mov
aaa
adc
fstp
call
jno
sbb
jnp
sbb
lret
cld
lcall
pop
push
outsb
dec
lds
cmpsl
mov
ret
mov
fdivs
jle
mov
dec
xchg
sbb
jge
daa
xor
in
es
lcall
xor
mov
jae
out
ja
cli
js
scas
dec
jmp
dec
addb
ljmp
rcr
inc
ret
fcompl
push
jo
pop
push
out
mov
test
jge
inc
int3
int3
adc
int
xlat
add
out
add
pop
xchg
and
cmp
sub
test
add
out
shlb
subb
sub
cmpsb
xchg
jnp
lcall
push
add
pop
mov
jp
mov
mov
hlt
or
jg
negl
mov
dec
mov
push
push
cltd
movsl
and
jp
ja
adc
fwait
cmpb
lcall
add
mov
fisubl
xor
add
adc
mov
fists
sbb
push
out
adc
lods
fbld
xor
ja
arpl
rcrb
pop
out
jae
mov
xchg
in
mov
addb
fmull
aaa
mov
aam
ss
addr16
cwtl
pop
add
sbb
dec
lods
sbb
jns
xlat
and
sbb
xchg
lock
fsubrl
leave
inc
inc
jne
xchg
xchg
mov
mov
mov
adc
or
pop
scas
mov
ds
out
call
inc
insb
push
das
adc
inc
fcoml
xor
fmuls
orl
mov
sub
fmull
fdivs
or
int3
mov
push
out
mov
fprem
icebp
test
xchg
js
xchg
pop
mov
pop
pusha
dec
sbb
cltd
mov
mov
repnz
icebp
mov
jg
jno
stos
adc
stos
jo
mov
int3
and
push
jns
out
adc
jb
stc
sub
bound
xor
inc
fldl
ljmp
xor
inc
xchg
push
jnp
adc
sub
add
sub
and
imul
rcrl
jmp
mov
add
fisttps
push
xchg
movsb
mov
nop
daa
aam
ret
inc
push
jne
pusha
cmp
pop
lea
pop
pushf
pop
dec
dec
ja
or
xor
sbb
outsl
and
outsl
cmpsl
in
sub
imulb
mov
rcr
pop
cmp
jg
dec
scas
out
push
leave
jnp
mov
out
or
mov
mov
mov
dec
rol
dec
repnz
sub
dec
aaa
aad
inc
xchg
andb
test
and
inc
call
mov
mov
fwait
pop
int
add
xor
jae
lret
out
xor
sub
pop
test
and
es
cwtl
or
mov
insl
cmp
out
mov
jge
movsl
daa
mov
sbb
pop
test
xor
mov
inc
hlt
xchg
xor
pop
ja
sti
outsb
pop
cld
rorb
xor
adc
add
lea
ljmp
adc
out
les
jmp
sbb
out
xchg
popf
into
aas
xor
loopne
adc
jge
movsl
jne
in
adc
mov
addr16
ja
roll
xchg
pop
mov
cwtl
push
dec
sbb
mov
pop
iret
adc
jmp
out
cmp
nop
pop
roll
rorb
mov
jno
sahf
mov
arpl
add
sbb
mov
stc
lahf
aam
push
xor
cmp
dec
push
outsb
sahf
addb
ret
mov
mov
out
fwait
inc
arpl
inc
inc
fucom
je
fs
inc
mov
mov
jb
fnstsw
jmp
push
and
pop
and
outsb
push
mov
aaa
mov
js
push
add
add
inc
and
scas
mov
mov
repnz
add
inc
shrb
icebp
adc
sbb
ljmp
sti
sbb
mov
movsb
dec
push
jl,pn
pop
jmp
adc
fbld
xchg
dec
ss
xor
push
test
adc
nop
cli
sbb
mov
mov
cmp
lcall
jl
or
shll
mov
push
pop
inc
inc
pop
inc
sub
leave
push
stc
inc
in
sbb
mov
ds
idivb
sub
mov
push
jg
mov
stos
inc
cli
mov
inc
mul
aas
push
movsl
dec
pop
mov
or
shrb
mov
adc
push
lods
push
pushf
adc
fsubrp
or
in
mov
in
clc
xchg
into
xchg
or
pushf
sarb
data16
ret
xchg
adc
loop
dec
adc
push
xchg
out
test
das
mov
jecxz
adc
xchg
adc
clc
mov
adc
ss
pop
roll
or
xlat
ret
cmp
movsl
test
mov
pop
mov
mov
mov
mov
mov
mov
cmp
popa
frstor
cs
adc
lret
out
out
push
sbb
jmp
lods
lret
pop
in
push
dec
pushf
lahf
movsl
loopne
push
fiaddl
sub
pop
insl
les
in
jge
inc
jnp
dec
inc
sbb
lds
negl
pop
lds
add
pusha
shrb
insb
stc
xor
push
jno
jo
jmp
into
xor
jns
xor
aas
lods
jl
adc
mov
lods
xor
popa
or
cmp
sbb
aam
cmp
pop
idivb
sti
icebp
rol
push
out
inc
ja
mov
cmp
cmpsb
pop
into
out
mov
push
xchg
popa
out
sti
mov
cmp
test
pop
dec
sub
xor
inc
out
push
mov
xor
jecxz
dec
fwait
mov
mov
shll
divb
data16
or
pop
adc
outsb
jl
add
addr16
push
popa
pop
push
and
frstor
repnz
out
std
dec
push
mov
and
icebp
mov
or
push
lret
mov
sub
data16
clc
clc
sub
in
sub
xlat
pop
arpl
xchg
inc
int3
sub
sbb
scas
out
insb
fdivs
repnz
cmp
dec
sbb
lahf
push
fcomps
pop
decl
cwtl
mov
sbb
jg
jg
mov
pop
and
stc
in
mov
sub
mov
sub
cwtl
fdivrl
push
test
fucomp
dec
mov
fwait
xor
sbbb
ret
clc
push
dec
movl
or
push
pop
cmpb
adc
pop
and
pushf
dec
mov
mov
xor
inc
push
sbb
push
outsb
cmp
jge
jae
outsl
std
loopne
mov
mov
ja
cmp
lcall
pusha
add
inc
adc
add
adc
push
sub
sub
loope
iret
mov
pop
aad
sbb
mov
xor
movsb
mov
clc
push
and
popa
mov
daa
push
lods
and
aaa
aam
mov
dec
fiadds
or
mov
lods
xor
je
cmpsl
jae
leave
popa
dec
mov
and
sbb
xor
pop
jp
add
add
mov
cltd
bnd
aaa
xor
ds
pop
fcmovnb
popf
mov
cltd
js
inc
pop
out
mov
mov
sbb
adc
rclb
popa
fiadds
ss
mov
call
push
les
loopne
rolb
inc
sbb
add
pop
out
in
in
jns
sbb
adc
pop
lods
mov
int3
push
stc
push
push
adc
fwait
cld
jecxz
xchg
fdivrs
rep
loopne
testb
xor
add
stos
fs
jo
stc
daa
jecxz
xchg
test
dec
mov
ja
and
int
mov
lret
aas
add
adc
pop
popa
fisubs
cmpsb
xor
jmp
xor
push
push
jl
es
inc
push
sub
ljmp
push
bound
dec
cmpl
dec
andb
sbb
pop
add
cwtl
lock
jp
leave
into
leave
mov
bound
idivb
mov
mov
je
mov
sub
test
adc
mov
xor
sub
pusha
sub
lds
test
cmp
fwait
jae
xlat
push
lock
sub
es
adc
std
xchg
jb
int3
or
leave
push
ljmp
mov
inc
js
inc
sbb
dec
push
inc
jo
rolb
pop
lds
call
xorb
inc
ljmp
mov
mov
mov
fimuls
andb
pop
sahf
sub
pop
and
push
mov
sbb
stos
dec
push
mov
adc
adc
fidivrs
jmp
mov
jns
mov
jge
push
pop
jmp
das
out
jmp
mov
or
rcrl
jbe
addr16
mov
mov
xor
test
and
sbb
or
enter
lahf
pop
and
addl
pop
push
push
dec
mov
int
jno
push
lods
jmp
cli
mov
sbb
cltd
push
xlat
jle
fs
out
movsl
lret
nop
mulb
xchg
stos
xor
jmp
mov
dec
push
fsubrp
or
or
out
out
adcl
addr16
adc
or
notb
mov
add
mov
scas
mov
sbb
jno
inc
cmp
sbb
sub
sbbb
pop
xor
popa
test
or
es
mov
cltd
aad
or
add
cli
lret
cmp
sbb
inc
xor
mov
add
ret
repz
popa
mov
les
mov
std
dec
jno
sbb
pusha
movsl
mov
cs
loope
jmp
out
lret
jl
push
icebp
xchg
je
filds
movsb
mov
xchg
lahf
es
aad
pop
add
lds
mov
addr16
cmpl
sub
inc
inc
sbb
gs
testb
mov
push
push
pop
test
pop
int3
ljmp
cmp
adc
add
leave
and
aas
es
add
or
ret
idivl
jno
sub
fisttpll
jo
popa
ret
jno
adc
clc
jmp
xchg
frstor
scas
xor
inc
loopne
movsl
cmp
cmp
mov
xor
cmp
jns
testb
push
dec
jecxz
sbb
data16
sbb
fwait
lret
shrb
or
mov
jae
fidivrs
lcall
fwait
sbb
stos
push
cmpsb
test
dec
arpl
dec
cmp
mov
scas
inc
dec
test
xor
add
xchg
or
fld
cmc
insb
dec
movsb
adc
add
or
xor
mov
ficomps
and
aaa
dec
sarl
jno
pop
mov
inc
sbb
je
orl
sub
mov
fiaddl
push
aad
adc
push
shrb
in
mov
cmp
call
pop
ds
add
cld
arpl
int
mov
mov
dec
dec
sti
cmp
or
xor
pop
jecxz
ret
fidivs
jne
mov
mov
xor
pop
daa
in
stos
jmp
sbb
jae
pop
imul
xor
jmp
mov
test
push
push
cli
sahf
and
lods
sub
cmp
jecxz
mov
push
out
aaa
popa
add
rcll
mov
inc
int3
cs
loop,pt
mov
fwait
sbb
mov
leave
mov
or
out
call
push
movsb
xor
mov
cmc
pop
jmp
mov
jge
push
rcl
mov
cli
cltd
inc
sub
push
lret
repz
and
adc
push
fistpl
cmpsb
lret
adc
mov
push
mov
hlt
adc
push
xor
cmpsb
mov
testb
es
mov
inc
fistpll
mov
negl
aad
cmc
xchg
imul
cmp
pop
push
sub
add
sbb
mov
mov
adc
fdivs
push
fs
mov
push
lea
jne
jg
pushf
cmp
adc
cmp
sti
test
je
push
repz
cmp
inc
repnz
cmp
out
sub
push
add
repz
mov
sbb
outsb
pop
test
cmc
ljmp
inc
mov
cwtl
mov
push
scas
add
and
lcall
push
or
pop
inc
ss
sub
movsb
push
lcall
and
nop
and
xchg
push
mov
into
jl
ja
add
icebp
testl
call
sahf
add
gs
inc
cmc
xor
es
pop
cmp
cmc
pop
mov
lods
add
aas
jmp
pop
fisubrs
dec
out
sbb
dec
xor
and
out
cmp
xlat
mov
sub
movsb
roll
es
pop
add
push
stos
out
int3
mov
negl
xor
push
lds
and
pop
cld
hlt
repnz
or
lcall
aaa
sbb
test
xlat
and
fidivrs
pop
dec
mull
cmp
jg
ja
subl
mov
mov
aam
aaa
fstpl
pop
les
jg
pop
loopne
and
in
jl
or
add
push
or
fldenv
js
or
dec
pop
jbe
imul
sub
push
push
negb
ds
jne
dec
fsubrs
xchg
xor
jmp
mov
leave
pushf
stos
push
inc
push
inc
sub
push
out
jo
insl
mov
orb
testb
das
xchg
imul
sub
fcomps
into
push
sub
cmp
test
fsub
cmp
cmpsl
xchg
lahf
jno
pop
push
sub
loopne
add
add
cltd
ss
popf
lods
pop
push
mov
in
adcb
lods
insl
cwtl
inc
cmp
scas
xor
and
stc
push
push
xchg
bound
lea
cli
icebp
idiv
and
xchg
mov
cli
xchg
or
mov
mov
fmuls
and
mov
jp
push
jne
inc
lret
pop
xchg
mov
mov
dec
test
or
mov
sbb
cmp
mov
in
cmpsb
ret
pushf
shlb
mov
fimuls
pop
out
push
ja
je
jb
push
dec
push
cmp
push
adc
adc
cmp
ret
push
popa
sbb
fwait
dec
xchg
cmp
cmpl
dec
repz
lret
fs
out
xchg
loopne
out
push
jl
push
int3
outsb
add
cwtl
or
push
xlat
lea
push
movl
roll
xor
mov
inc
mov
dec
in
hlt
mov
ja
adc
cmp
push
test
sub
inc
and
cld
inc
adc
fcomi
adc
les
fbld
xchg
push
sahf
dec
jmp
jl
cs
or
jp
loop
cmpsl
aam
mov
mov
sti
test
out
inc
mov
call
push
ret
addr16
push
movsl
out
inc
jo
addr16
pop
push
adc
and
movsl
or
sub
push
lahf
je
jle
test
lea
iret
insl
gs
mov
sbb
daa
or
flds
jo
sbb
loopne
mov
out
scas
xor
cld
orb
mov
sahf
out
xor
mov
ret
inc
mov
aaa
or
ds
dec
daa
insb
sbb
out
sti
fwait
or
mov
push
cmp
mov
gs
jno
cwtl
jo
out
pop
lret
push
nop
cmpsb
out
sahf
bound
push
mov
fisubrs
pop
jnp
test
and
adc
lock
sub
xor
cmc
or
shll
stos
fildll
xor
imul
mov
add
add
or
imul
add
faddl
mov
xor
fdivs
jo
clc
xchg
ret
lods
int3
les
es
std
pop
cmp
gs
je
lret
hlt
xchg
and
or
pop
push
push
push
pop
cmp
pop
pslld
mov
add
ja
lods
jl
pop
dec
imul
adc
xchg
movsb
lea
jge
jge
sbb
ljmp
into
pop
xchg
aad
cmp
adcl
lcall
mov
sub
sahf
nop
mov
imul
cmp
sbb
mov
pop
imul
jb
inc
add
outsb
lock
in
sbb
dec
or
cmp
dec
shrl
sahf
jmp
push
js
das
cmp
mov
mov
icebp
jge
call
std
out
mov
sub
sbb
push
or
testb
mov
xchg
cmc
xor
and
push
push
lods
push
jge
icebp
mov
aam
pop
sub
cmp
mov
scas
push
daa
movsb
out
sbb
xchg
pop
push
hlt
pop
sub
cs
inc
loop
mov
stos
cmp
push
jbe
repz
pop
mov
mov
jbe
push
bnd
pop
sbb
mov
jno
mov
filds
daa
or
orb
fsubs
pop
rcll
or
notb
mov
sbb
dec
push
cmp
pop
lods
or
rcll
outsl
dec
add
pop
leave
fsubrl
push
xchg
aam
test
pop
adc
fiaddl
push
arpl
orl
sub
shrl
push
fs
adc
add
pop
sbb
into
cmpsl
push
in
cmp
dec
mov
push
dec
cmp
insl
dec
xorb
in
inc
in
push
clc
xchg
push
adc
lcall
cmc
lods
add
out
int3
push
mov
cmp
movsl
ds
pop
mov
sub
xor
and
sti
sbb
push
es
test
push
stos
mov
cli
aad
rcl
fsubl
pop
adcl
popf
cwtl
outsb
je
dec
jmp
out
in
arpl
popa
cmpb
cltd
pop
add
out
ja
xchg
cld
bound
and
push
mov
add
and
xchg
out
testl
jne
pop
cmp
inc
push
push
pop
std
ret
push
or
push
or
mov
cmpsl
hlt
cmp
adc
cld
cli
or
cmpsb
mov
ds
jge
jp
add
jae
pop
outsl
movsl
pop
xor
mov
fcoml
add
mov
mov
mov
xchg
xchg
sub
scas
pop
push
fildll
add
loopne
mov
enter
lahf
icebp
stos
out
test
scas
inc
shlb
mov
add
xor
add
push
inc
xchg
mov
mov
xor
imul
push
loop
lods
mov
add
sub
ljmp
xchg
mov
adc
out
adc
stc
cmc
out
sbb
jge
pop
cmp
out
mov
dec
out
lods
or
adc
nop
mov
bound
sbb
ret
xchg
cmp
gs
add
sbb
cmp
hlt
shlb
xlat
and
and
sbb
adcb
aad
pusha
inc
cwtl
cmp
mov
and
lahf
bound
mov
and
dec
movsl
addr16
jo
cld
push
clc
push
adc
mov
iret
or
xchg
push
dec
pusha
lret
aas
outsl
push
orb
out
push
pop
sahf
add
add
sahf
lds
mov
js
dec
mov
sub
inc
mov
push
scas
fdivrp
fdivl
and
sbb
or
lret
mov
lods
scas
sub
addr16
sbb
jns
inc
sbb
sub
mov
inc
hlt
xchg
sub
dec
je
sub
sub
pop
jae
adc
xor
mov
jo
aad
inc
adc
out
push
sub
cmc
stc
loopne
arpl
insl
xchg
inc
stos
mov
mov
sub
mov
out
mov
lods
in
sbb
mov
test
push
je
divl
sbb
push
dec
xor
pop
jne
jmp
fadds
add
mov
mov
push
jecxz
pop
jg
jg
dec
pop
xchg
jl
add
aam
mov
jg
test
push
gs
addr16
jle
dec
repnz
dec
imul
jo
stos
push
mov
add
aam
shl
mov
test
enter
and
fiaddl
cwtl
faddl
or
ja
inc
gs
inc
push
dec
xor
es
fdivrl
fisttps
adc
xchg
or
mov
pop
mov
popf
push
in
xchg
arpl
in
js
or
addr16
mov
mov
insb
adc
in
push
push
pop
out
sbb
or
popf
mov
lods
lock
ficoms
jl
pop
sar
mov
inc
outsl
add
xor
bound
cltd
in
xor
pop
test
into
sbb
sub
sbb
mov
jne
rcr
lea
es
cmp
jle
or
jecxz
insl
jb
inc
add
loope
rcll
mov
stos
clc
aad
push
push
dec
mov
outsb
jg
xchg
outsb
scas
call
mov
int
mov
fucomip
icebp
mov
les
lods
mov
mov
icebp
adcl
push
fisttpll
lcall
cmp
subb
lret
ret
mov
dec
xor
inc
sbbl
aad
shll
fldcw
and
aad
push
xchg
inc
fstps
adc
insl
dec
push
imul
cli
sbb
cmp
dec
mov
inc
inc
jne
adc
fs
ret
xor
lock
push
mov
lret
jbe
and
adc
cmp
inc
cmp
xor
cltd
fmul
jg
call
scas
insl
arpl
stos
mov
dec
sub
test
and
jmp
daa
dec
push
dec
popl
xchg
jmp
repnz
dec
mov
cmp
inc
cmpsl
lcall
cmp
dec
das
and
stc
clc
lret
loop
add
pop
je
into
cltd
mov
mov
les
xor
pop
xrelease
std
icebp
xor
inc
mov
mov
jmp
and
sarb
mov
push
add
jae
mov
xchg
aad
dec
daa
rorb
movsb
xchg
add
xchg
xlat
sbb
notb
push
test
in
icebp
adc
jl
sub
popa
nop
dec
mov
add
mov
dec
sbb
leave
mov
xchg
aas
push
mov
inc
cmpl
outsb
adc
sub
adc
mov
lret
psubusw
mov
push
ret
jmp
test
test
out
arpl
dec
mov
fucomp
push
addb
pop
jge
mov
cmp
subb
lahf
xchg
ljmpw
cmp
sbb
inc
arpl
push
cmpsb
sub
insb
dec
xchg
popa
repnz
fldpi
mov
push
lret
adc
rcrl
mov
dec
mov
or
gs
xchg
loope
xlat
cmc
stos
fistpll
loope
sbb
out
adc
aam
ss
outsl
sbb
add
cmc
add
sbb
pop
mov
scas
add
push
insb
push
enter
pop
pop
lods
inc
popa
sub
les
int3
out
sarl
insl
mov
loop
popa
cs
neg
mov
in
jnp
xchg
pop
cmp
scas
mov
mov
add
repnz
bound
pushf
pop
xchg
mov
pop
or
and
sbb
dec
xchg
cmp
jo
cmp
sbb
and
icebp
and
ficoml
dec
xchg
adc
mov
add
insl
fimull
push
jmp
adc
fidivrl
sbb
lock
fildll
adc
fwait
ja
pop
frstor
pop
sbb
jl
inc
or
rol
xor
lds
mov
iret
dec
sbb
loopne
jnp
inc
fmul
test
or
dec
xchg
mov
lods
lret
cs
xchg
jno
mov
sbb
or
ret
repz
sub
dec
jae
mov
mov
clc
adc
mov
clc
je
imul
mov
inc
andb
sbbb
mov
xor
repz
int
aaa
repnz
icebp
rcrl
inc
push
mov
pop
fldl
pop
push
hlt
push
in
in
sub
and
jbe
adc
lods
jg
les
addr16
mov
fidivrs
stc
xchg
fs
stos
addr16
xchg
lds
sbb
cli
cmp
adc
xchg
sub
jecxz
int3
pusha
mov
sbb
jnp
fidivrl
xor
sbb
mov
inc
mov
clc
jl
ficompl
mov
jge
int
inc
sbb
das
sub
jmp
test
hlt
xor
subb
jl
push
dec
scas
jnp
cmp
mov
inc
sub
add
adc
push
xor
inc
mov
mov
test
or
in
dec
xchg
dec
mov
mov
and
lea
js
into
sub
mov
cmp
xchg
ss
mov
cmpsb
mov
lods
or
xchg
or
adc
fwait
sti
lret
sub
jle
pop
mov
push
lds
notb
lds
imul
mov
pop
cmpsb
cmp
imul
mov
mov
bound
outsl
xor
push
cltd
jge
pop
rorl
push
and
sbb
pop
jbe
dec
das
notl
and
ret
xor
mov
xchg
xor
daa
subb
dec
sub
arpl
xor
xor
pop
outsb
imul
roll
lea
push
mov
lahf
ret
mov
xchg
push
lahf
jae
fcmovne
adc
dec
xchg
lcall
sub
push
jbe
shr
sub
mov
mov
mov
repnz
es
jge
in
adc
jmp
adc
cmc
adc
or
sbb
lcall
aam
push
mov
cld
cmc
sub
mov
ficomps
prefetchnta
orl
pop
loop
fldl
test
subb
ret
lret
icebp
or
xor
mov
ds
jg
mull
pop
lods
mov
rcrl
jne
leave
cmp
repnz
or
sub
shl
dec
push
out
and
mov
or
inc
cltd
inc
xchg
xchg
cmpsb
jb
mov
cmp
sub
test
shll
xchg
repnz
pop
and
and
xlat
mov
mov
push
lret
out
cmp
lods
adcb
add
push
xchg
insl
sub
shll
xchg
add
xchg
stos
cmc
pushf
fnstenv
mov
xor
imul
mov
test
push
xchg
dec
dec
lea
hlt
mov
adc
movsb
cmc
xor
xchg
ja
dec
nop
fisttps
daa
imul
mov
sahf
shll
push
jg
jbe
push
lock
mov
sub
sub
jno
scas
lock
imul
jbe
rorl
cmp
stos
jg,pn
cmpb
mov
js
pop
lcall
inc
sbb
jb
pop
sbb
push
repnz
fisubrl
jb
mov
mov
push
into
mov
inc
pop
mov
xor
sti
test
mov
or
sbb
sbb
push
or
dec
xor
int3
fisttpl
cwtl
lret
cmp
int3
fucom
incl
dec
ss
cwtl
shlb
or
sub
fwait
adcl
dec
inc
jl
std
lods
sub
dec
jmp
inc
sbb
mov
lods
xchg
add
out
addr16
movsb
loope
int3
iret
sbbl
out
lods
xor
repz
icebp
ljmp
leave
gs
out
add
mov
pop
jge
ffreep
add
push
pop
lahf
fisubl
cmp
sbb
imul
pop
divb
pop
xchg
loopne
insb
push
and
test
je
jnp
inc
js
inc
iret
jle
jbe
inc
ljmp
cmp
or
jge
adc
mov
mov
scas
in
inc
jb
lret
and
je
fnstsw
sub
push
dec
push
lret
or
mov
and
sbb
sub
mov
ret
xchg
aaa
cmp
popf
and
mov
out
lahf
insl
cs
and
and
add
jge
js,pt
cmpsl
mov
sarb
xor
out
ret
cmpsl
inc
in
int3
in
xor
sub
dec
push
call
leave
xor
push
push
sbb
xchg
lea
and
aam
jecxz
dec
js
adc
mov
push
or
xor
sub
xchg
pushf
push
mov
jb
pushaw
mov
jbe
cltd
das
sbb
shrl
test
inc
xor
inc
jecxz
cmc
fisubs
les
repnz
mov
nop
outsb
pextrw
mov
xchg
into
loopne
cmc
call
jno
out
add
mov
and
mov
fisttpl
xchg
inc
das
insl
loope
test
clc
loopne
adc
cmp
cli
not
lock
push
xchg
out
js
xor
push
fcmovnb
cmp
dec
mov
imul
xlat
pop
out
xchg
and
call
inc
sbb
adc
rcl
xor
lods
pandn
or
popf
outsl
test
repz
lcall
mov
lret
in
push
xor
and
dec
and
mov
xchg
xchg
stc
ja
nop
notb
mov
imul
adc
in
cmpsb
leave
or
pop
sub
lock
aas
push
or
pop
mul
cmpl
sahf
adc
dec
inc
ds
cltd
mov
push
fadds
mov
ljmp
movsb
xor
mov
ret
or
pop
or
pop
ja
in
push
insb
pop
jmp
and
je
xchg
inc
loopne
sub
leave
mov
mov
inc
xchg
and
notl
lds
mov
pop
mov
out
push
das
loop
das
or
jecxz
mov
stos
mov
daa
and
fisubrs
jno
adc
stos
sbb
xchg
stos
or
pop
lret
and
pop
addr16
shrb
cmp
rcrl
inc
scas
arpl
push
sub
jno
cmpsb
mov
fwait
cmp
jecxz
scas
cmp
in
pop
cmp
jle
add
mov
outsl
popa
cmpsl
inc
adc
adc
loopne
aad
mov
and
pop
mov
stos
xchg
mov
jl
ror
sub
rclb
dec
lret
lock
test
mov
push
mov
enter
int3
push
aam
push
fldenv
xchg
jno
aam
pop
scas
push
jne
pop
shr
cmpsb
movsl
mov
pop
pop
cld
mov
outsb
mov
gs
cli
lret
stos
and
inc
jge
loopne
or
in
cmp
cmp
cmp
pop
adc
or
push
sbb
xchg
in
mov
lds
sbb
in
xchg
incb
shlb
jecxz
mov
insl
leave
fwait
in
rorb
mov
push
xchg
or
pop
jge
imul
fstps
or
push
lods
mov
or
aad
ret
dec
sbb
adc
rcrb
daa
movsb
outsl
outsl
loope
iret
fs
cmp
pop
sbb
imulb
xor
push
movsb
and
xlat
push
jno
or
cmp
out
sbb
iret
xorl
outsb
cmpsb
mov
xchg
das
pop
call
outsl
sub
or
aaa
adc
pop
or
and
pop
push
dec
stos
xchg
adc
cmp
inc
cltd
cld
mov
cmp
shll
ret
out
ljmp
popf
das
fwait
divb
cmp
jecxz
mov
test
mov
xchg
loope
xchg
or
cmp
stos
loop
pop
jne
pop
ljmp
jmp
push
or
cmp
xchg
loopne
loope
icebp
out
fistpl
fdivrl
imul
jnp
cs
xor
pop
adc
xchg
out
mov
in
mov
push
xor
dec
iret
icebp
fmull
jg
bound
mov
push
divps
cs
xor
fnstenv
cli
pop
xor
and
and
test
mov
mov
cld
ret
sub
fwait
mov
dec
sbb
push
jb
mov
cmp
pop
es
leave
pop
fstpl
sub
mov
fldl
adc
add
outsl
movsb
sub
fcomi
mov
test
dec
fcomip
xchg
cs
add
jmp
mov
inc
pop
aas
cmc
xchg
cmp
mov
xlat
call
mov
loope
mov
cmc
sub
jo
mov
lret
dec
mov
pop
cmpsb
dec
mov
sti
aas
loope
bound
hlt
cmpsb
ljmp
mov
test
cltd
xchg
mov
mov
push
push
repz
push
rcr
mov
pusha
add
aam
repz
loop
cmp
fcompl
add
dec
jp
sbb
xor
aas
mov
inc
mov
inc
pop
repz
arpl
pop
inc
jl
dec
and
dec
dec
lcall
mov
std
push
jne
cmc
js
mov
push
mov
adc
jg
add
pop
mov
add
outsl
or
jecxz
xor
mov
xor
jbe
repnz
mov
dec
add
mov
in
add
xor
fsts
out
and
mov
stc
pminub
cmpsb
add
and
pop
sub
lock
imul
popf
mov
test
dec
xor
orb
loope
lret
clc
adc
xchg
xchg
push
fstpt
pop
insl
fimull
adc
outsl
aam
test
pop
fdiv
cmp
mov
sbb
inc
insl
test
adc
scas
sbb
sahf
xchg
xor
cli
mov
repz
jp
ds
push
mov
pop
addr16
cmp
fistpll
xor
insb
imul
pop
pushf
fisubrl
adc
mov
outsl
pop
sarb
call
jmp
ror
pop
clc
jge
jne
jmp
adc
adc
mov
test
sub
stos
and
sarl
loope
int3
push
sti
jl
xlat
dec
mov
sti
insl
jno
icebp
in
inc
aam
jmp
fcmovnb
jo
addr16
out
pop
xchg
sub
pop
xchg
and
jns
cmc
insl
rcrl
lret
xlat
jae
cmp
xchg
ja
loop
push
pop
dec
push
and
jbe
scas
add
in
and
xchg
mov
shl
push
stos
fsubrp
mov
xchg
repnz
add
insb
sub
ds
xchg
adc
xchg
add
jb
jg
inc
pop
pop
fsubl
mov
adc
stos
jo
das
hlt
inc
test
fwait
adc
imul
mov
mov
loop
and
jnp
inc
mov
call
xlat
add
test
sbb
mov
popf
ret
dec
adc
rorb
inc
inc
add
xchg
cld
fistps
in
sub
cmp
pop
pop
subps
push
ret
jbe
imul
rorb
pop
outsl
inc
faddl
jbe
mov
mov
cmpsb
xchg
mov
mov
xor
jge
lcall
jmp
hlt
test
mov
or
test
push
sub
lods
add
aas
jmp
sub
fcompl
pop
or
fs
loopnew
mov
sarb
loop
insl
pusha
jne
push
push
lods
xchg
dec
addr16
mov
ret
adc
and
xlat
and
add
dec
aam
push
jge
pop
add
pop
loop
repnz
lds
mov
call
cld
xor
lock
shll
mov
cs
imul
dec
pop
push
outsl
js
mov
daa
jno
lods
repz
dec
sar
xchg
mov
enter
cmp
mov
jle
repnz
cli
dec
popf
or
jl
mov
jo
ljmp
mov
jo
in
leave
inc
popf
pop
insb
push
int
scas
scas
lock
test
mov
pushf
mov
data16
or
out
lret
adc
jge
popf
jnp
jae
jmp
push
add
inc
and
dec
call
int3
dec
mov
dec
sarl
sub
mov
bound
imull
jb
pop
mov
cmc
scas
cltd
iret
sbb
ficoml
jb
in
dec
lods
jl
push
xor
dec
lea
inc
mov
sub
adc
loop
dec
mov
push
call
cltd
popa
fnstcw
imul
mov
or
mov
xchg
xchg
ret
ss
cmp
cld
out
scas
loop
dec
adc
pop
loope
fldenv
mov
xchg
and
outsl
dec
cmp
ljmp
cmp
and
xlat
in
jne
inc
add
add
addr16
or
mov
pop
or
inc
inc
adc
cmp
inc
mov
loopne
add
stos
scas
sub
pop
sub
mov
bndldx
add
sbb
movsb
and
pusha
fiadds
outsl
mov
and
lcall
xchg
adc
jmp
and
into
push
mov
hlt
mov
int
and
cld
adc
sub
pop
mov
sti
sahf
sarl
jl
sub
jp
sub
addr16
into
xor
inc
push
and
pop
push
gs
insl
inc
arpl
out
jge
xlat
sbb
mov
xchg
into
aam
hlt
orb
ja
fst
or
mov
jecxz
xlat
jle
mov
and
pop
call
inc
cmc
dec
rclb
lret
jl
shrb
push
jl
rcrb
xor
fnstcw
enter
mov
lcall
rol
mov
pop
mov
dec
mov
dec
into
sbb
sbb
ret
jbe
clc
inc
mov
shl
and
mov
push
int3
stos
fistpll
aad
call
add
jnp
or
mov
test
ficomps
rcr
testb
lods
pop
std
push
out
fs
add
ds
xchg
mov
push
adc
xor
and
push
inc
dec
sti
mov
popf
fadd
fimull
test
gs
stos
sub
cmp
popf
or
add
inc
imul
mov
adc
mov
and
mov
in
cmp
hlt
fldenv
adc
shlb
jo
cmp
pop
loop
mov
mov
daa
ljmp
sbb
add
sbb
dec
xlat
pminsw
adc
call
lret
mov
mov
fs
in
mov
popf
jg
jb
pop
or
pop
hlt
jo
les
cmpb
mov
sub
jb
jmp
int
inc
repnz
mov
mov
les
sbb
imul
jle
clc
outsb
ja
std
pushf
or
inc
ficoms
das
mov
fcmovne
fiaddl
jl
sub
xchg
xor
jae,pn
das
or
lock
test
mov
mov
pop
out
cmp
cltd
and
mov
hlt
shrb
cld
fcoml
iret
insb
cmp
lods
cmpsb
fadd
dec
imull
and
hlt
xchg
aad
pop
inc
mov
ret
call
iret
mov
ds
pop
inc
leave
sti
je
cmp
pop
mov
orb
jb
cmp
sub
fs
dec
push
push
jle
subl
push
jg
xchg
cmpsb
test
popa
xchg
out
jge,pn
mov
ja
sahf
fcomi
xchg
dec
xchg
adc
jle
pop
insl
inc
jo
popf
fiaddl
in
sub
stos
push
in
pop
mov
sbb
pop
lods
repz
jl
pop
ds
sbbb
mov
or
xor
lods
mov
xchg
push
imul
fcmovbe
or
mov
xchg
aas
dec
daa
movsb
pop
movsb
rclb
je
into
fprem1
fsubr
decl
mov
nop
fidivl
push
ds
fsubr
or
cmp
addb
jmp
mov
mov
daa
mov
dec
xchg
imul
in
push
adc
in
jno
lret
jmp
inc
popa
push
jg
mov
cmp
xchg
mov
data16
inc
mov
stc
and
ret
sub
pmullw
mov
fisubrs
arpl
leave
adc
das
mov
vunpcklps
pop
loop
imul
cmp
lock
loope
fimuls
mov
hlt
repnz
mov
stos
bound
add
std
enter
lock
pop
loopne
out
push
jns
xlat
jecxz
rorl
outsb
xor
push
sub
adc
cmpsb
ss
dec
out
testl
fwait
xorl
fisttpll
xchg
fwait
mov
add
icebp
cmp
je
cmc
xor
push
push
jns
outsl
adcl
call
fildll
push
jl
pop
and
adc
dec
dec
jns
sub
cmpsl
pop
xchg
icebp
jo
shlb
bound
out
dec
push
in
rcll
bound
inc
or
adc
repnz
mull
mov
xor
sbb
mov
aad
cmpsb
cwtl
lods
aad
ja
leave
pop
dec
out
mov
lcall
adc
repz
add
stos
mov
jmp
int
cmp
xor
adc
cmp
pop
lea
jmp
out
add
out
testl
jge
dec
push
ja
lods
iret
add
fwait
xorb
adc
fnstsw
and
jle
adc
add
inc
and
jno
shll
out
adc
into
mov
stc
jnp
sbb
jmp
out
mov
fnsave
dec
imul
mov
adc
popf
adc
dec
lea
xor
push
xor
sub
popa
push
pop
les
lds
enter
add
lret
dec
push
sub
mov
out
pusha
cli
outsb
jmp
mov
cmp
jb
stc
mov
add
sbb
jmp
lods
rorl
mov
jnp
aaa
movsl
mov
cmc
sbb
adc
scas
and
mov
mov
dec
loopne
inc
fcmovnbe
cltd
adc
aad
xchg
sub
ja
mov
pushl
inc
xor
notl
push
in
xor
dec
pusha
inc
jmp
push
rcll
jbe
add
dec
pmulhuw
ds
loop
mov
ret
into
lahf
in
scas
inc
ljmp
pop
fistpll
cmp
data16
iret
or
mov
les
xchg
das
xchg
stc
fsubl
xchg
mov
fbld
nop
xor
lret
insl
adc
mov
mov
push
pop
dec
lcall
dec
movsb
ret
and
sub
pop
out
mov
clc
jmp
push
sub
sti
rol
push
xchg
popl
sti
ret
push
repnz
pop
iret
cmp
xchg
aaa
mov
cmp
or
rcl
enter
inc
pop
sbb
jecxz
in
std
pop
xor
aaa
or
push
outsl
push
push
mov
andl
pop
scas
test
into
ret
sbbl
jbe
cmpsl
sub
fs
xchg
push
xchg
cwtl
sub
loopne
xchg
popf
jle
dec
add
imul
inc
ret
sbb
dec
inc
sbb
xorb
mov
inc
loop
and
push
es
dec
push
test
sbb
dec
xor
and
cmp
xchg
adc
mov
pushf
push
mov
push
and
xchg
jns
jno
sub
cmpsb
push
adc
lahf
in
jb
jne
stos
add
cmpsb
in
pop
sub
rolb
hlt
jns,pt
push
jmp
mov
xchg
bnd
rclb
mov
adc
ss
cmc
dec
jmp
js
sbb
popf
leave
in
push
loopne
adc
cmpsb
lahf
mov
cmpsl
out
push
jnp
mov
push
movsl
sub
test
das
dec
cmp
iret
testb
adc
loop
xor
dec
iret
loope
mov
lahf
aam
or
cmovge
loop
nop
fucomp
mov
sahf
sub
pushf
bound
mov
aad
insb
fdivrp
jns
mov
scas
jg
jmp
jg
adc
push
and
frstor
pop
out
scas
cmc
jae
repnz
lahf
arpl
push
pop
lods
popa
sahf
jge
bnd
sub
hlt
xlat
or
xchg
cli
inc
dec
fnstenv
inc
ss
inc
cld
ficoml
fstps
or
cmpsl
repnz
mov
cmp
push
inc
xchg
or
jg
push
sbbl
xchg
addl
or
cmc
cmpb
shr
fisubrs
jo
fildl
mov
cmp
scas
aaa
lods
insl
test
xor
sbb
jle
je
mov
or
cs
xbegin
fwait
inc
mov
sub
repnz
sbb
cmc
js
inc
pop
mov
xor
adc
fs
and
lds
daa
inc
loopne
icebp
mov
lods
dec
mov
mov
jae
dec
and
movswl
jne
bound
in
fisttpll
mulb
fs
loope
rorl
mov
and
mov
aam
mov
leave
xlat
xor
lea
enter
jle
push
fldl
fidivrs
fisubs
or
inc
pop
push
in
aad
iret
push
clc
or
or
cmp
and
jae
mov
std
cs
movsl
mov
mov
push
ljmp
mov
cld
cmp
iret
rolb
mov
push
fs
cli
fwait
stos
test
jl
mov
test
negb
loopne
scas
pop
stos
jp
mov
or
jbe
cmp
test
adc
dec
xor
imul
add
mov
or
int
hlt
pop
dec
scas
pop
icebp
in
mov
pop
mov
pop
mov
pop
sti
mov
sbb
loop
push
bound
pop
push
pop
es
sti
in
jp
and
inc
aaa
insb
mov
push
lock
mov
scas
mov
mov
mov
and
pop
out
pusha
and
out
inc
add
aaa
repnz
arpl
repnz
bnd
xchg
popf
scas
int3
cmp
out
dec
fldlg2
fistpl
dec
push
push
and
adc
or
lret
scas
int3
push
pop
adc
gs
outsl
xor
repnz
cmc
xchg
dec
xor
jp
pop
or
mov
pusha
call
int
mov
xchg
repnz
pop
clc
fbld
cmp
xor
cmp
mov
stos
sbb
sub
or
jmp
fldenv
add
pop
stc
aaa
das
outsb
lret
fildll
popf
loope
and
rcll
pushf
dec
inc
repz
mov
mov
cmp
int3
xor
inc
mov
xor
sahf
cwtl
add
mov
and
gs
scas
cltd
inc
bswap
sub
mov
out
ds
pop
repnz
out
cmp
fildll
rolb
dec
push
push
pop
or
popf
xchg
sub
mov
test
cmpsb
push
adc
inc
sub
fs
daa
jecxz
mov
scas
lea
cwtl
dec
test
xchg
adc
and
rorl
in
sbb
sarb
sti
sbbl
cwtl
hlt
lahf
adc
movsb
ret
loope
aaa
bound
dec
fldl2e
aad
dec
mov
call
mov
and
fsubr
stc
xchg
fdiv
das
mov
bswap
js
lds
mov
out
stos
inc
xchg
std
lahf
lret
inc
push
jle
shlb
outsl
pop
adc
outsl
dec
roll
cmp
repz
scas
mov
mov
rclb
and
adc
clc
rclb
in
ficoml
cli
add
inc
inc
mov
test
lods
leave
add
dec
or
cmc
xchg
pop
push
cmpsl
inc
shlb
loop
or
inc
jno
adc
or
dec
jbe
xor
push
sbb
sbb
roll
imul
pop
out
aaa
loop
sbb
imulb
nop
lcall
pop
cmpsb
and
out
mov
xchg
adc
mov
lcall
push
or
push
ljmp
jmp
cmpsb
arpl
inc
mov
clc
and
push
xchg
ljmp
inc
inc
sahf
rclb
mov
cmpsb
mov
loop
sub
pop
inc
adc
es
sbb
lock
xchg
jnp
out
cwtl
fcompl
sub
cld
cmp
and
xchg
iret
stos
add
jns
jle
jl
lret
xchg
mov
push
call
push
push
in
dec
shrb
add
mov
sbb
addr16
cmp
adc
js
leave
lret
xor
pusha
push
push
xor
je
add
mov
jno
iret
and
jb
test
mov
and
gs
out
lea
pop
inc
push
scas
mov
mov
aam
and
mov
mov
fwait
int
ret
xchg
mov
pop
jl
ds
iret
push
mov
std
inc
insl
clc
sahf
cmp
or
jg
sti
loope
sub
in
jmp
cmc
xchg
je
xor
mov
cli
mov
test
lret
jae
adcl
pushf
xchg
mov
cmpsl
pop
fwait
sbb
mov
lret
arpl
mov
out
cmp
jne
inc
fisttps
mov
jae
lods
sbb
icebp
dec
sbb
cmp
sbb
fimull
jle
add
add
shll
mov
pusha
cmc
and
scas
aas
lea
cltd
sbb
test
fs
rorb
xchg
int
pop
lods
out
mov
shll
lret
imul
inc
push
mov
mov
xor
pop
movsb
pusha
jp
push
inc
adc
clc
ss
or
aaa
adc
push
repz
mov
shrb
outsb
sbb
push
negl
stc
cmp
cmpsb
ljmp
loopne
dec
aad
adc
mov
call
xor
fsubrl
lret
mov
sbb
aam
cmp
sub
test
es
pop
stos
jns
and
sub
test
imul
inc
ljmp
mov
sti
sbb
push
inc
mov
xchg
rcll
lret
sub
inc
mov
scas
sbb
jg
enter
cmpsl
xchg
mov
mov
pop
stc
test
movsb
pop
into
sub
mov
test
sub
ja
ds
mov
negb
out
push
cld
pop
and
pop
fwait
test
sar
xchg
cmp
lock
push
popa
jp
sbb
add
ljmp
sub
lds
loope
fwait
cmp
fs
inc
dec
lret
add
mov
scas
lods
negb
inc
mov
jb
es
ret
mov
inc
add
std
cmp
cmovnp
aaa
xor
inc
pop
mov
rcr
add
shrl
inc
jnp
mov
notl
repnz
leave
arpl
ss
pop
call
cmp
jg
lcall
pop
sti
and
jmp
and
mov
cwtl
fcomi
aas
jecxz
fxch
shr
push
insb
adc
mov
iret
sbb
fnclex
xchg
dec
pushf
ljmp
aaa
or
ret
insb
pop
shrb
xchg
int3
in
xor
and
xchg
roll
push
std
pop
mov
loope
test
lcall
les
out
shrb
mov
jmp
leave
adc
pop
insb
add
sbb
mov
mov
mov
pand
add
leave
int
add
push
mov
sbb
cmp
aaa
loope
jmp
mov
loopne
mov
cwtl
sbb
outsl
ret
pop
sub
imul
jl
pop
jns
or
inc
inc
jae
lds
dec
fs
scas
xor
jle
add
or
mov
mov
test
cmp
inc
into
cli
lret
icebp
cld
fidivs
xor
stos
or
adc
enter
add
cmp
push
add
add
arpl
shrl
mov
jge
fsubrl
stos
stos
or
xchg
or
sub
bsf
std
adc
std
mov
mov
dec
xchg
mov
mov
or
cmp
push
push
aam
fsubs
ret
sub
xor
lods
movsl
rol
pop
sbb
cmp
ja
push
dec
pop
xchg
jl
es
add
dec
cli
in
sbb
push
incl
dec
sbb
xlat
imul
mov
inc
in
stc
push
outsb
sub
mov
mov
push
mov
dec
pushf
rcl
inc
xchg
mov
pop
scas
xchg
jns
jne
enter
loope
cmp
ss
pushf
pop
xor
loope
arpl
dec
in
dec
cli
jg
rcr
sbb
call
les
pop
lcall
sub
gs
cmp
shl
or
cmc
pop
xor
dec
aad
xchg
je
cmp
test
jbe
cmp
sar
rorb
jno
add
pop
lahf
add
incl
adc
ja
mov
mov
outsb
xchg
jnp
and
xchg
sbb
push
jns
outsl
jl
idivb
pop
mov
call
test
popf
fists
lock
dec
stc
jle
mov
mov
pusha
jae
test
xchg
jbe
test
lahf
cs
rcrb
shll
test
test
outsl
or
pop
aam
and
xchg
inc
mov
mov
cwtl
dec
lods
into
mov
mov
mov
test
ja
cwtl
lock
mulb
inc
sub
int
es
sub
jo
repnz
rolb
sub
jnp
sub
inc
sbb
pop
push
mov
daa
adc
xlat
sub
mov
adc
add
insb
hlt
rcrl
aaa
lret
negl
jecxz
sub
adc
test
mov
or
imul
arpl
and
pop
negb
xchg
shlb
jp
fstl
ds
xchg
iret
std
xor
mov
xor
in
sbb
lods
push
inc
adc
cmc
jne
ds
pop
scas
std
lock
push
jmp
jo
hlt
jb
popf
fs
xor
sub
push
out
or
and
mov
cmc
fs
mov
pop
mov
ds
loope
add
insb
xchg
outsb
fwait
rcll
pop
adc
insl
mov
mov
and
into
xorl
cmpl
aad
cltd
mov
lret
push
xor
push
sbb
cmp
mov
jne
insb
sbb
std
jecxz
lds
sub
enter
pusha
ret
xor
or
call
cmp
jg
cmpsl
lret
cltd
rolb
shrb
mov
cmp
aad
cwtl
push
or
pop
jmp
jne
fcomps
or
dec
fsubs
hlt
cli
dec
sub
lds
iret
stos
xchg
jne
xor
inc
cmpsl
xchg
aaa
int
jmp
sub
jmp
mov
pop
es
lahf
sub
daa
test
push
mov
adc
push
or
test
inc
push
or
insb
lods
pop
leave
leave
cmc
pop
xor
test
cli
push
pop
and
sbb
and
notb
mov
mov
cmp
xor
mov
sbb
sub
ficoms
mov
jmp
enter
sahf
clc
pusha
out
int3
push
xchg
add
sbb
sbb
and
mov
jbe
mov
mov
mov
adc
loope
jns
push
into
adc
outsb
cmpsl
mov
sub
pop
and
xchg
test
mov
lods
mov
dec
arpl
push
lods
xor
lea
js
cmp
addb
inc
sub
les
mov
lret
push
test
push
fimull
mov
mov
pop
pop
inc
mov
cs
in
fstpl
push
jle
xchg
lcall
bndldx
icebp
mov
in
hlt
clc
test
mov
fidivrl
xor
dec
mov
es
mov
movsb
popf
rcrl
xchg
sbb
repz
jo
xchg
push
rorl
inc
or
pop
and
in
andb
aam
lds
cmp
jno
cs
mov
jmp
clc
inc
push
int3
jne
mov
xchg
jmp
xor
xor
pop
rorl
repnz
pop
lahf
and
cmp
fsub
mov
push
sbb
dec
push
divl
or
mov
mov
int3
dec
insb
ljmp
mov
cmp
orl
cs
mov
pop
insl
adc
popf
shll
in
adc
push
pop
sub
mov
pop
push
int
aam
filds
out
std
test
or
sbb
int3
mov
loop
cld
mov
sbb
test
mov
cli
push
es
insb
cmp
sbb
mov
jo
popa
push
loopne
pop
lret
push
stos
in
hlt
adc
jnp
add
sub
mov
inc
pop
cwtl
jno
test
outsl
movsl
cmpsl
inc
sub
adc
mov
ja
fldl
lahf
dec
inc
rorb
ljmp
outsl
mov
clc
pop
mov
lods
and
das
les
push
jle
mov
adcb
inc
jnp
in
movsb
mov
inc
dec
sub
mov
mov
int
lcall
push
hlt
cmp
and
and
pop
jne
or
cmp
dec
pop
addl
insl
mov
clc
jp
frstor
and
add
daa
sarl
lcall
fidivl
adc
inc
and
add
lcall
in
pop
cmc
das
test
cli
stos
push
repz
or
push
mov
xor
mov
sbb
arpl
leave
mov
test
dec
push
push
jbe
andl
scas
push
xor
jno
cmpb
fcomps
loop
jno
cmpsl
cmp
pop
mov
mov
lret
sti
adc
or
les
inc
enter
cmpsb
pop
fistps
xchg
clc
mov
pop
out
dec
outsb
jno
cmp
repz
repz
lods
fdivs
dec
add
inc
sbb
int3
shl
shl
sbb
shl
fldenv
fwait
stos
push
and
jo
call
shrb
add
push
test
out
jp
add
fisubrl
lods
jb
data16
or
sbb
or
leave
jae
inc
pop
xchg
lahf
and
lods
and
test
inc
jmp
mov
add
shl
dec
add
orl
scas
scas
jns
adc
sub
shrl
cmp
testb
das
rclb
inc
nop
and
mov
and
pop
faddp
out
jmp
stc
test
inc
movsb
xchg
inc
out
dec
pushf
mov
sbb
mov
insb
mov
dec
mov
test
insb
mov
out
mov
mov
xchg
jecxz
loopne
dec
push
jg
xor
insl
gs
imul
or
aad
xchg
stos
sbb
mov
fildll
testb
dec
mov
cmpsl
ljmp
aad
or
out
loopne
stc
mov
daa
lcall
or
int3
add
je
fs
loope
dec
mov
jl
cmc
fstpt
fsub
fidivrl
dec
stc
pushl
xlat
lock
jb
lahf
lock
push
mov
stc
in
in
push
in
int
fistl
add
pop
sub
cvtps2pd
out
jae
test
jns
cmpsb
push
fs
js
pop
fldl
int
rclb
outsl
mov
fs
lods
scas
std
out
and
test
scas
mov
enter
loope
sarl
add
repnz
push
xchg
add
mov
xor
xor
dec
out
loope
lcall
mulb
iret
cmp
adc
movsb
cmp
fiadds
jmp
jge
sbb
mov
lds
iret
es
adc
add
dec
mov
mov
addr16
loope
popa
loope
pop
pusha
sub
fsubrs
lret
inc
pusha
out
mov
dec
call
xchg
scas
test
pop
jp
mov
and
xchg
loop
mov
ret
adc
mov
bound
add
loop
out
jb
aam
lods
orl
std
cmp
jge
sbb
mov
roll
nop
stos
mov
push
push
sub
xor
fnstenv
xchg
xor
dec
jge
cmp
hlt
inc
lods
xor
add
or
xchg
or
out
loope
ds
inc
rcrl
or
push
and
lods
mov
aad
mov
clc
movq
sbb
xchg
dec
mov
sub
aaa
pop
movsl
daa
jecxz
adc
loope
mov
clc
cmp
cmp
je
ds
stc
shl
push
push
andl
cmpsl
std
insb
lret
lods
int3
mov
xor
addr16
loope
pop
test
into
xor
sub
dec
cli
scas
jb
mov
sarb
mov
pop
out
xchg
fucomip
pop
jle
repz
push
xchg
aam
push
std
jl
iret
push
cli
vcvtss2si
sahf
std
sub
in
and
dec
loope
jb
sub
jbe
rcl
or
push
and
mov
inc
lods
into
sbb
rcl
popf
in
fistpll
sti
andb
add
xchg
movsl
adc
outsb
jg
in
cmp
xor
adc
jp
ret
cmp
xchg
repz
mov
jg
pusha
mov
iret
enter
cld
nop
in
cmp
or
sti
faddl
mov
add
clc
add
xor
inc
or
bound
xor
subb
adc
pop
mov
not
inc
add
rorl
adc
dec
cmc
icebp
mov
lea
in
push
aad
fisttpl
sbb
cmp
or
or
xchg
jo
pop
aas
shlb
ljmp
in
push
jp
sbb
ficompl
loop
jge
push
fwait
push
shl
pop
sbb
pop
stos
lds
out
sbbb
icebp
cs
ja
cmp
jl
or
inc
or
mov
cmp
jmp
or
adcl
cmp
xor
pop
and
ret
sub
addr16
mov
or
movsb
mov
pop
sbb
jl
cmp
mov
mov
lret
mov
lahf
loopne
test
mov
imul
inc
jg
xor
push
stc
shl
rcrl
sbb
sbbl
scas
retw
adc
dec
jns
out
in
lret
into
popf
sarl
lea
xchg
mov
sub
pop
shl
dec
mov
dec
out
scas
inc
dec
xor
fldt
loopne
out
push
addb
popf
std
jge
jge
lea
loop
pop
repnz
dec
xchg
popf
xorb
mov
or
shr
repz
test
out
cmp
cmp
lahf
mov
mov
cmp
adc
mov
jmp
cld
pusha
xchg
inc
push
fmull
stc
inc
fnsave
mov
jge
mov
popl
push
xor
test
xchg
mov
sub
rcll
arpl
fcmovnb
push
mov
add
hlt
ljmp
pusha
sub
xor
ficomps
mov
test
jne
cltd
stc
outsb
push
nop
pushf
dec
sub
push
mov
fistl
and
mov
nop
cmp
adc
jae
cmp
dec
add
xorl
stos
lods
lcall
cmp
jae
rolb
std
or
jecxz
lea
leave
lahf
adc
jp
imul
mov
clc
fldcw
imul
mov
ret
add
jb
cmp
js
std
xor
xchg
mov
pop
xorb
loop
add
sub
jne
jl
push
flds
les
fs
cmpsb
mov
nop
ss
in
dec
shrl
sbb
push
push
or
lret
rcrl
fcoml
test
mov
pop
mov
pop
aas
sbb
mov
stc
xchg
aad
mov
adc
mov
addb
xor
dec
iret
das
sahf
clc
jg
mov
xor
rep
mov
xchg
dec
cmp
and
ret
dec
fsts
hlt
xchg
test
push
sarb
enter
popf
scas
in
test
mov
pushf
jo
out
aad
push
jmp
iret
stos
test
mov
or
jne
xchg
outsb
hlt
in
hlt
xor
pusha
adc
and
xlat
add
pop
aaa
stos
fmul
stos
out
cmpsb
push
stos
filds
iret
imul
jmp
or
or
lea
xor
int
jae
clc
fsubl
or
pop
movq
leave
aam
sub
adcl
jo
faddl
inc
jns
sbb
cmp
subb
loopne
mov
repz
ret
dec
rcll
xor
popf
std
and
and
inc
cwtl
and
push
add
testl
out
addr16
in
push
shrl
jg
adc
dec
jae
xorb
dec
sarb
cmp
push
mov
pop
pop
cmp
mov
movsl
aam
repz
jae
xchg
ffree
mov
cld
push
jl
inc
rol
cmp
lds
sbb
mov
xorb
push
xlat
and
and
mov
jecxz
ds
or
or
sbb
and
jge
insl
fdivs
jecxz
adc
jecxz
andb
inc
mov
and
call
and
fistps
cmpsl
jle
imul
lret
iret
pusha
outsb
std
mov
fmuls
xchg
mov
mov
mov
jecxz
dec
jp
cmp
adc
nop
popf
jo
inc
icebp
das
dec
cmpsb
adc
jecxz
mov
cld
sub
clc
jo
mov
scas
sbb
test
jp
xchg
mov
cmpsl
push
pop
rclb
inc
pop
fdivs
fisubrs
cmp
imul
cmp
cmp
je
mov
inc
sub
cmp
add
dec
out
pop
mov
and
ret
shll
dec
insl
mov
push
dec
jno
sbb
lods
mov
bound
mov
push
mov
inc
inc
iret
shl
add
add
imul
and
cmpb
jg
enter
sub
adc
out
lret
stos
pop
xchg
push
rolb
ret
inc
call
xchg
fs
and
jecxz
loop
out
dec
ficoms
inc
sub
dec
mov
sbb
jno
mov
addr16
or
sti
fs
pop
and
mov
xor
pop
pop
int
or
lss
xchg
jge
rorb
in
mov
pop
fstpt
sbb
mov
leave
add
inc
in
mov
es
mov
jle
sahf
mov
movsb
xlat
stos
mov
mov
add
cli
and
inc
xchg
dec
or
jge
iret
mov
fsubs
pop
pop
sub
push
mov
fistpl
add
sbb
sahf
mov
sbb
idiv
aaa
roll
gs
sbb
ljmp
mov
test
inc
push
jo
gs
mov
sbb
cmc
fwait
xchg
sub
sahf
test
and
adc
mov
sub
xchg
cmp
fwait
int
jge
adc
xchg
loope
pop
jl
push
xchg
fs
push
inc
xor
jg
fldcw
fld
xchg
push
out
fldl
mov
mov
lds
cmpsl
dec
mov
push
aad
jp
push
push
jns
repz
rol
loopne
xchg
sub
lods
mov
pop
inc
or
negb
add
rcrb
xor
cld
add
cmpsb
pop
jnp
dec
dec
scas
fsts
pop
jno
sbb
enter
inc
mov
dec
mov
push
cmpsb
add
ret
jecxz
test
in
dec
cmpsl
mov
aas
mov
adc
mov
dec
mov
jle
push
mov
sti
out
dec
out
sbb
push
push
and
clc
fsqrt
lock
mov
jle
lea
fwait
imul
pop
pop
arpl
pop
pop
jns
ret
push
and
push
xchg
jmp
es
pop
repnz
and
shrl
pop
xchg
push
jl
xor
add
and
into
push
loope
roll
cmp
sub
cwtl
insb
push
inc
xor
mov
fsub
fbld
mov
hlt
cmp
push
fildl
insb
test
pop
fmuls
lock
fnstenv
xor
repz
inc
jbe
push
popa
jecxz
iret
cmpsl
ret
stc
pop
aam
pop
gs
nop
lahf
ret
lret
push
add
loope,pn
xor
sub
inc
jb
push
iret
and
sub
jmp
out
int
cmp
inc
inc
pusha
mov
icebp
rorb
nop
mov
pop
xchg
add
ljmp
sub
or
fldl
arpl
in
outsl
nop
mov
add
cs
mov
lret
outsb
mov
repnz
push
lods
mov
push
out
dec
cld
fwait
std
jmp
dec
mov
js
mov
mov
pop
pusha
jle
out
les
hlt
pushf
cs
push
xor
xor
or
adc
mov
jae
sub
sbb
lods
cld
cwtl
push
sub
es
stos
lcall
push
pop
in
orb
xor
lcall
sub
cwtl
icebp
in
sub
mov
sbb
mov
add
test
or
in
inc
inc
cmpsb
rcrl
mov
xor
cs
movl
shrb
and
xor
mov
incb
hlt
subl
pop
gs
add
push
or
aaa
dec
into
dec
and
jecxz
mov
inc
mov
pop
xchg
hlt
lret
mov
les
cmpsb
int3
inc
rorl
inc
fs
into
jbe
inc
out
jmp
in
sbb
inc
sbb
mov
mov
loope
insl
inc
into
lahf
xchg
add
mov
insl
pop
jns
cs
int3
js
in
jns
add
repnz
push
es
xlat
cmp
fldenv
fs
aad
pushf
addr16
repnz
adc
sbb
loope
int3
mulb
xchg
sub
jecxz
pop
js
pop
out
and
or
pop
mov
scas
sbb
call
inc
mov
xchg
cmp
out
sbb
push
in
les
cli
ret
lret
mov
mov
adc
daa
mov
clc
gs
push
mov
jg
sbb
jb
fs
enter
jne
pop
sahf
sub
in
cltd
fsubrl
jmp
jge
xor
adc
xor
hlt
sti
aas
inc
lret
push
imul
nop
in
test
add
into
pushl
cmpsb
push
inc
data16
rorl
jne
xchg
data16
sbb
dec
insl
mov
lcall
stos
roll
jmp
pop
das
faddl
aaa
std
movups
xchg
je
add
mov
adc
adc
shlb
fcomi
scas
push
iret
push
inc
std
mov
inc
out
pop
imul
lret
sub
aas
fldcw
inc
pop
ret
adcl
sbb
dec
nop
sub
pusha
sub
mov
mov
sbb
push
out
out
pop
adc
and
push
fidivl
mov
mov
jmp
jecxz
ficompl
jae
data16
fistl
jge
or
dec
test
sub
push
add
jno
push
aad
or
adc
mov
pop
pop
rcll
iret
xchg
in
in
int3
xor
outsl
xor
pop
sbb
into
add
ljmp
leave
mov
and
xor
jb
mov
jnp
rorl
int
icebp
and
inc
mov
adc
cli
cmp
aaa
arpl
js
or
adc
cmp
sarl
fsts
inc
mov
mov
shrl
or
jp
scas
aaa
cmp
es
xchg
lea
ret
scas
in
fistpll
rcr
jle
imull
cli
imul
xor
cmp
xor
call
mov
xor
mov
addr16
cld
pop
pop
fldenv
fsubrs
dec
hlt
popa
movsl
loop
xor
or
pop
movsl
or
push
loopne
dec
sbb
sbb
dec
and
mov
sbb
out
mov
aaa
aad
and
subb
ret
rcrb
aaa
lds
iret
movsb
push
push
out
lret
outsl
int
clc
xchg
or
lock
cmc
into
add
daa
xchg
addb
jae
inc
imul
xchg
mov
nop
cmpsb
cmp
int3
dec
iret
inc
inc
inc
fidivl
add
sti
cmp
jge
loope
popa
add
adc
lret
pop
cmp
dec
mov
icebp
mov
mov
testl
sbb
iret
push
pop
pushf
push
pop
lock
ficoms
pop
outsb
mov
push
call
push
leave
pop
popa
cmpsb
cmpsl
repz
pop
add
xchg
cltd
stc
je
mov
fsubs
mov
sbb
push
shll
push
fnsetpm(287
and
sarb
add
inc
data16
mov
and
fiaddl
jmp
push
sbb
dec
xor
xor
push
sarl
and
xchg
les
dec
mov
xchg
scas
bnd
inc
lds
ficomps
xor
push
and
xchg
mov
mov
jbe
pushf
mov
roll
fisubl
fs
aaa
test
sbb
lock
lret
inc
sarl
pop
push
insl
mov
add
std
mov
jge
int3
jle
dec
jnp
scas
mov
repz
pop
sub
or
lods
push
inc
jmp
into
ret
testl
fisttpl
out
jo
mov
test
add
data16
cmp
pop
mov
mov
mov
rcrl
mov
das
push
test
cltd
je
cld
xchg
daa
mov
sub
mov
push
add
jne
mov
adc
enter
cli
pop
das
add
push
xchg
cmpsl
rcrl
xor
daa
mov
mov
sbb
out
inc
dec
jne
cmp
mov
mov
lcall
adcl
push
les
xlat
push
jo
nop
or
rol
inc
xchg
scas
flds
ret
and
cwtl
ret
mov
push
loop
or
sbb
inc
xor
jns
cmp
jmp
mov
sbb
jnp
adc
cmp
daa
mov
jne
scas
fstl
mov
push
sbb
sbb
cmp
lahf
subb
jp
xchg
push
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
mov
inc
adc
insb
sahf
pop
add
add
add
decl
add
add
decl
add
add
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
jo
imul
add
addr16
insb
outsl
jae
dec
gs
add
dec
insb
gs
jne
add
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
jb
gs
xor
cs
insb
add
mov
add
add
add
mov
sldt
add
add
add
add
add
add
add
push
mov
pushl
popl
jmp
popl
mov
cmpl
je
push
pushl
pushl
push
addl
call
add
pop
mov
shl
add
add
jmp
jmp
push
imul
jb
je
arpl
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
gs
xor
add
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
imul
jo
imul
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
insb
jne
push
jb
arpl
outsb
inc
popa
arpl
add
add
jb
gs
xor
cs
insb
add
add
push
imul
insb
insb
outsl
arpl
add
add
inc
push
dec
cmp
jo
inc
jne
arpl
add
and
fisttpll
inc
push
and
inc
in
jl
iret
and
sbb
xor
outsb
lods
add
mov
and
cmpsl
je
sahf
sub
cli
jmp
ret
div
aas
xchg
add
test
jne
adc
stos
ret
cmp
jo
fcompl
movsb
sbbb
pop
mov
es
ja
lret
and
negb
push
cmp
inc
or
pop
cmp
call
mov
jns
xor
mov
fildl
jmp
mov
test
sub
inc
jle
push
sbb
mov
bnd
cmpsb
shlb
cwtl
mov
loope
dec
mov
enter
sbb
incb
clc
leave
sub
stc
cmc
mov
sbb
test
fs
aad
push
add
mov
aaa
add
popa
jbe
dec
out
movsl
cltd
cmp
add
add
add
add
add
add
add
add
add
inc
mov
mov
mov
add
rolb
add
add
inc
lods
add
mov
add
cwtl
add
mov
push
add
inc
push
add
and
cmp
add
add
xor
cmp
cmp
add
add
dec
outsl
popa
fs
imul
add
add
and
add
fiaddl
push
add
add
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
push
mov
push
mov
mov
and
shr
test
jne
pop
mov
pop
pop
ret
push
mov
test
jbe
cmp
mov
jb
mov
sub
cmp
mov
jl
mov
shr
mov
neg
shl
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
add
dec
jne
mov
test
je
xor
mov
add
inc
add
dec
jne
mov
xor
mov
div
mov
mov
mov
xor
div
test
mov
ja
mov
pop
shl
pop
or
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
mov
push
push
mov
push
mov
movl
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
rep
stos
mov
shr
test
mov
jne
mov
call
cmp
je
or
mov
mov
mov
test
je
call
mov
cmp
je
mov
mov
call
mov
mov
inc
and
mov
jmp
call
mov
cmp
je
mov
call
cmp
je
mov
and
and
mov
shl
or
add
mov
mov
js
jmp
mov
lea
xor
and
mov
mov
mov
call
mov
mov
inc
and
inc
mov
mov
cmp
jle
jmp
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jb
or
ret
mov
push
xor
mov
inc
mov
mov
pop
ret
nop
nop
mov
push
cmp
jae
mov
mov
mov
inc
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
jae
mov
mov
mov
inc
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
mov
push
push
push
mov
call
push
mov
push
push
mov
call
add
mov
push
call
push
push
mov
call
mov
mov
mov
mov
lea
mov
mov
sub
inc
lea
lea
mov
mov
add
add
add
cmp
jae
cmp
jae
lea
mov
and
cmp
jae
imul
mov
add
xor
mov
add
cmp
jb
mov
mov
mov
push
push
mov
mov
mov
call
mov
test
mov
je
cmp
jbe
push
push
push
push
call
mov
lea
mov
mov
shr
rep
mov
and
rep
mov
mov
push
push
push
push
mov
call
cmp
je
push
push
push
push
call
push
push
push
call
mov
add
cmp
je
push
push
push
push
call
mov
push
push
push
call
push
push
push
mov
call
mov
mov
add
test
jne
push
push
push
push
call
call
push
push
push
mov
call
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
call
push
call
add
test
pop
pop
pop
je
mov
call
jmp
xor
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
pop
call
xchg
pop
mov
popa
pop
pop
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
mov
test
push
mov
jne
push
push
push
call
push
call
add
mov
mov
lea
push
push
lea
push
push
call
mov
dec
test
je
mov
lea
mov
add
mov
add
dec
dec
test
ja
mov
lea
push
lea
push
push
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
mov
xor
lea
movb
mov
rep
stos
stos
mov
xor
lea
sub
imul
add
mov
and
mov
shr
mov
xor
inc
mov
inc
mov
inc
test
je
cmp
jb
mov
cmpl
jne
mov
push
call
add
mov
test
jne
push
call
test
mov
jne
int3
mov
lea
push
push
push
call
add
test
pop
pop
pop
jne
int3
mov
pop
ret
nop
nop
push
mov
sub
mov
push
mov
mov
push
push
test
jne
mov
mov
lea
mov
test
je
lea
sub
xor
mov
mov
inc
test
jne
lea
movb
push
call
mov
add
cmp
mov
jl
mov
mov
push
push
push
mov
call
add
mov
movl
mov
mov
mov
test
je
mov
mov
test
je
cmp
jg
cmp
jl
movsbl
add
movsbl
xor
cmp
je
xor
cmp
jne
mov
inc
inc
mov
mov
test
jne
cmpb
je
mov
add
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
mov
pop
pop
pop
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
push
je
mov
mov
mov
test
je
cmp
jne
dec
inc
inc
test
jne
pop
xor
pop
ret
test
je
xor
xor
mov
mov
pop
sub
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
mov
push
test
push
jl
mov
cmp
jae
mov
mov
lea
mov
add
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
mov
pop
mov
lea
xor
pop
mov
mov
lea
mov
add
pop
pop
ret
mov
mov
movl
mov
dec
js
jmp
mov
mov
push
lea
cltd
sub
mov
mov
sar
mov
lea
mov
add
test
push
jge
mov
push
call
jmp
mov
push
call
add
test
je
jle
inc
mov
jmp
lea
cmp
jle
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
cmp
push
jbe
mov
cmp
jae
test
jne
mov
mov
mov
mov
lea
test
mov
je
test
je
test
jne
mov
sub
mov
lea
mov
add
jmp
mov
push
push
push
push
call
mov
mov
mov
add
cmp
jae
add
add
cmp
jae
mov
xor
lea
movb
rep
stos
stos
mov
lea
test
je
cmp
je
cmp
je
mov
mov
inc
inc
test
jne
lea
lea
push
call
mov
add
test
jne
mov
test
je
lea
push
call
mov
test
jne
mov
test
je
lea
push
call
mov
test
je
cmp
ja
pop
pop
xor
pop
mov
pop
ret
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
pop
add
add
je
js
add
add
mov
add
add
add
add
add
add
pusha
jb,pn
popa
je
add
js
add
add
add
add
add
add
inc
add
inc
cs
je
add
add
or
add
add
add
add
ljmp
inc
add
shrb
fs
je
add
xor
add
add
add
or
add
push
add
inc
add
shrb
jae
arpl
add
mov
add
add
add
add
jo
add
add
jb
insb
outsl
arpl
add
orb
inc
add
inc
je,pn
js
add
add
lret
add
sldt
push
add
add
and
add
add
add
xor
xor
call
pusha
call
in
xchg
fsubs
scas
pop
vpaddusb
fstpl
inc
jb
sub
mov
push
push
and
and
insl
mov
or
lods
mov
fildll
enter
lea
add
jmp
call
cwtl
add
fiaddl
add
push
sti
cmp
inc
movsb
mov
sbb
lds
pusha
mov
add
leave
push
adc
adc
js
jno
push
jo
add
xlat
sub
mov
cli
fidivrl
sub
aam
mov
inc
ds
or
stos
fwait
jnp
out
popa
xchg
divb
in
mov
xor
jbe
or
xchg
stos
pusha
sub
ja
fisttps
daa
data16
xchg
cld
jnp
fcompl
pmulhuw
inc
inc
push
or
jp
in
jecxz
pop
adc
in
movsl
je
leave
stos
inc
push
lret
jb
je
mov
rcll
lcall
idivl
icebp
push
fdivrl
sub
shl
mov
lods
movsb
cwtl
movsb
test
mov
das
and
les
in
dec
mov
pushf
stos
ret
sbb
fldt
mov
fsubrs
sub
loopne
mov
pop
movsb
cmp
push
inc
pop
into
jb
add
sbb
push
jb
adc
imul
dec
jae
sub
mov
adc
adc
push
jne
push
push
mov
or
push
outsb
add
enter
ljmp
push
mov
sub
push
xchg
je
mov
int
lahf
push
popa
aas
push
lods
icebp
mov
aas
pusha
ret
shlb
pop
add
leave
outsl
insb
push
lods
roll
xchg
sub
cwtl
lret
and
sub
in
push
movsl
insl
lods
sub
xchg
xchg
into
nop
je
pop
in
mov
cwtl
xchg
ja
aas
add
mov
jo
cmpsb
pusha
dec
or
pop
sub
mov
push
pandn
adc
push
jne
pop
or
add
fdivl
aam
jno
les
xor
push
sbb
hlt
call
pop
arpl
dec
xchg
dec
pop
leave
out
jb
and
push
xor
mov
mov
out
sbb
sbb
icebp
pop
lea
pop
pop
dec
andb
mov
pop
mov
repnz
mov
repnz
jl
cltd
into
jle
cld
lret
test
sub
imul
lahf
or
sbb
jmp
std
xchg
enter
in
dec
sbb
out
mov
jmp
jl
xor
xor
cmpsb
js
insl
icebp
pop
jbe
inc
add
and
lret
loope
xor
and
add
aaa
adc
fwait
xor
inc
negl
push
mov
lods
inc
lret
aaa
shlb
loope
xchg
jne
cmp
xchg
sbb
xor
inc
outsl
sub
test
cmp
mov
dec
add
and
repz
je
dec
cmc
dec
jnp
cmp
loop
ja
push
adc
sub
in
pop
nop
pop
les
xor
in
jle
sysret
inc
push
pop
push
scas
jl
xor
or
jp
sbb
lods
xchg
in
ds
sbb
movsb
xor
jecxz
insb
dec
negl
add
outsb
pushf
xor
sub
repz
aas
jb
jnp
cmp
sbb
cmp
jge
out
jno
cmp
mov
fsubs
data16
adc
popf
jnp
jmp
and
rep
mov
daa
sbb
repz
sbb
lods
mov
push
outsl
jo
repz
inc
clc
hlt
fstl
in
les
or
mov
std
pop
movsb
push
inc
insb
aas
adc
pop
je
js
ss
inc
inc
mov
add
out
mov
cmp
jnp
jno
inc
les
cmpb
or
pusha
sub
sbb
mov
inc
cld
data16
cmpsl
loop
xor
push
push
lcall
icebp
testb
adc
test
inc
cmp
outsl
mov
movsl
fdivrl
lods
mov
loope
adc
fldcw
sub
loop
mul
xor
sbb
fcomp
std
outsb
pop
and
lret
jge
sub
push
gs
ja
lods
cmp
popa
jo
add
push
push
jo
xlat
faddl
loopne
hlt
insb
dec
mov
loopne
mov
mov
lods
mov
jnp
xchg
std
xlat
sbb
jp
scas
paddusb
stos
fistl
into
dec
push
lahf
adc
jae
pop
adc
fimuls
stos
or
ljmp
dec
xchg
iret
repz
dec
jg
push
and
mov
sub
sub
arpl
fstps
imul
test
ret
stos
ljmp
pusha
int
stos
adc
into
pusha
dec
jp
xorl
outsl
js
jp
sbb
data16
push
test
sarl
aad
xchg
in
inc
push
add
inc
lods
push
je
repz
leave
cmp
mov
push
dec
inc
sub
les
das
push
aam
inc
out
sub
xchg
fimuls
outsb
cmp
js
outsb
xchg
shll
arpl
movsl
mov
mov
shrl
sbb
jno
lds
mov
lock
ja
pop
shrd
cld
or
dec
test
xor
movsl
scas
ds
cmp
sbb
stc
or
fisubl
mov
psubw
ret
xchg
mov
movsl
outsb
insb
hlt
dec
mov
add
mov
sbb
movsl
call
xchg
loope
pushf
push
dec
push
jns
jmp
and
mov
pop
test
mov
pop
or
ret
xor
and
sub
dec
lgs
jmp
jbe
mov
pop
jp
test
xor
cld
lock
dec
cmp
jnp
lcall
stos
test
call
or
or
cwtl
outsb
xchg
lods
sub
mov
push
xchg
insw
add
mov
push
push
insb
jp
call
pop
pop
mov
push
outsl
mov
ja
xor
inc
mov
lods
call
inc
dec
mov
pop
push
add
mov
push
xlat
xchg
pop
test
adc
aaa
push
and
fsub
fcmovnb
push
das
jne
sbb
aaa
scas
flds
mov
ds
xchg
sbb
lret
xchg
sbb
lret
pushf
cmp
or
xor
fisttpll
cmpsb
inc
test
fnstsw
movsb
and
dec
insl
mov
or
les
inc
cmp
jne
add
cmpl
daa
aad
mov
add
cld
mov
lods
or
push
mov
lods
popa
cmc
lret
cmpsl
sbb
cmc
iret
xchg
jnp
lods
mov
cmovp
lahf
insl
movsb
jb
dec
mov
mov
add
or
icebp
aam
dec
subb
fbstp
lcall
orb
mov
iret
daa
cwtl
repnz
mov
divl
cmp
fdivs
ror
movsb
adc
xor
test
pop
mov
je
add
xlat
jl
xchg
cltd
sub
jb
cmp
addb
mov
and
pop
jnp
stos
jne
ficomps
leave
popa
sub
sbb
and
mov
inc
sahf
and
mov
les
fprem
mov
push
outsl
inc
mov
pop
pop
fmuls
mov
xor
dec
dec
sbb
sbb
fistps
cmp
scas
xchg
push
loope
notb
jge
sub
iret
jo
shl
push
icebp
pop
xchg
mov
xchg
aas
push
and
sbb
xor
leave
xchg
xor
into
adc
sar
jg
cmp
in
lret
push
sti
push
fcomps
inc
stos
ds
adc
scas
mov
push
and
pop
test
jge
mov
inc
cmp
out
lock
scas
sub
push
lret
jg
aam
jle
cmp
aam
jg
mov
xchg
sub
xchg
add
das
daa
push
jne
xor
adc
mov
or
pop
jo
inc
test
test
lret
filds
mov
jl
jae
xor
add
sbb
rclb
minps
es
jle
ret
adc
out
sbb
add
mov
jmp
loope
sbb
jge
sbb
push
jne
stos
adc
sub
adc
das
imul
and
push
hlt
scas
int3
repz
jl
popf
lods
jmp
add
dec
imul
mov
mov
cltd
int3
adc
xor
sbb
jb
cmp
sbb
jle
mov
insl
inc
shrl
mov
aaa
aad
and
xor
movsb
shll
es
xchg
mov
and
mov
push
pop
sub
in
jmp
add
mov
cld
fcomps
or
mov
fcoml
and
repnz
and
in
sbb
daa
xchg
push
sbb
mov
mov
sbb
ljmp
test
test
ret
dec
fdivl
lahf
lods
jle
add
or
out
iret
or
and
lcall
pop
out
inc
xor
jp
pop
sub
adc
mov
and
test
in
hlt
shlb
push
sub
sbb
lods
jecxz
imulb
std
push
mov
mov
cmpsb
push
pop
cmp
jp
subl
pop
dec
mov
cmpsb
outsb
fists
fimuls
test
jae
jnp
fwait
fwait
clc
out
fwait
inc
push
adc
cmp
push
neg
xchg
add
daa
sbb
push
popa
push
jmp
sarb
lock
lret
cmp
mov
mulb
and
lret
xchg
das
and
xor
add
int3
xor
and
add
adc
movsl
add
icebp
jecxz
movsb
add
out
push
aas
inc
aas
pop
icebp
cmp
sub
cltd
mov
jmp
in
sbb
rorb
adc
arpl
jle
hlt
mov
int3
cwtl
dec
pushf
mov
or
adc
mov
mov
loope
xchg
rcll
out
ljmp
gs
cmp
pop
push
xchg
hlt
repz
mull
dec
pop
adc
nop
subb
mov
adc
ds
cltd
xchg
lods
invd
jne
sub
mov
mov
out
cmc
je
jg
xchg
add
sbb
pop
add
or
xor
pop
imul
clc
mov
and
out
pop
xorl
jbe
cltd
sbb
leave
dec
adc
mov
adc
int
push
inc
enter
ja
mov
jb
jb
ds
stos
xlat
lret
sbb
lock
pop
sub
test
mov
mov
adc
dec
stos
add
sarb
and
push
fwait
pusha
cmp
addr16
pop
pop
fmuls
shlb
mov
mov
dec
adc
push
test
addr16
xlat
ja
rdtsc
rcll
aam
dec
femms
xor
stos
push
cmp
dec
lfs
push
test
nop
movsl
idiv
and
inc
lds
mov
jb
mov
inc
cltd
add
and
and
and
push
dec
sub
out
les
sbb
mov
jne
cmp
aas
jae
jbe
fsubp
push
stos
jbe
dec
xchg
sub
sbb
mov
test
fcoms
lock
mov
lcall
movsl
add
xor
mov
popl
cld
dec
mov
mov
pop
dec
xor
imull
cmpsb
and
sub
out
xlat
mov
jno
push
mov
pop
pop
arpl
ss
push
jecxz
cli
std
xlat
jbe
rcrl
cmp
lret
sbb
sbb
or
xchg
mov
sbb
cmpb
fmuls
and
arpl
lahf
dec
jb
movsb
sbb
sub
mov
ds
lea
lahf
sbb
scas
dec
mov
mov
ret
add
insb
cmpsb
iret
test
pop
inc
movsb
sub
jo
mov
cltd
loopne
dec
clc
inc
jle
push
add
xor
nop
push
jg
xlat
xchg
lods
in
outsl
jbe
lea
mov
frstor
push
jns
cmp
push
adc
in
xor
rcrb
inc
mov
or
out
icebp
lods
add
adc
or
push
out
ucomiss
and
push
pop
repz
stos
pop
dec
outsb
mov
push
pop
dec
int3
add
mov
sbb
jg
insb
push
je
pushl
incl
xchg
insl
add
test
ficoms
test
dec
or
push
shlb
js
movsl
repnz
push
dec
lods
sbb
aaa
inc
aas
movsb
pop
repz
mulb
lods
or
je
mov
mov
xor
add
shlb
mov
pop
inc
cmc
subl
outsb
mov
cwtl
push
f2xm1
sub
mov
imul
scas
and
jne
fldcw
pop
mov
aaa
addl
dec
mov
aas
and
outsl
mov
mov
aam
inc
sti
jnp
push
jns
jbe
les
push
addr16
rcr
xor
pop
faddl
push
outsb
in
add
jo
mov
ss
add
jae
add
fcom
call
sbb
test
mov
or
sbb
xor
dec
fs
enter
push
loopne
ja
out
into
fidivrl
push
movsl
insl
sub
inc
int3
jb
movsb
mov
push
shll
loop
jb
push
insb
add
andl
std
mov
in
xorl
sub
inc
dec
leave
fdivrl
lock
xchg
pop
push
movsb
cmp
sub
adc
movsb
mov
xor
cld
subb
add
sti
aam
dec
pmaddwd
jp
add
iret
test
jae
pop
stos
loope
outsb
std
mov
rcl
jecxz
test
xor
cmp
sbb
andl
clc
mov
scas
into
hlt
lds
es
adc
movsl
and
xor
repnz
in
popf
enter
cmpsb
adc
insb
sbb
lds
jbe
subb
aam
xchg
push
jno
movsb
sub
dec
cmp
and
inc
insb
imul
fstp
xchg
mov
mov
out
loop
ret
sbb
ret
sub
xor
rep
cs
sbb
cmp
ret
test
lock
mov
mov
nop
cmpsl
adc
mov
cmp
push
mov
adc
mov
sub
jne
jle
xor
sub
jmp
test
std
xor
filds
cwtl
fdivrl
out
cmp
daa
or
jbe
aas
jbe
inc
push
nop
out
aam
lock
push
stc
pop
cli
or
xchg
jo
cmp
xchg
pop
mov
mov
push
jno
push
stos
outsb
ret
test
push
lea
lock
aaa
and
sbb
sbb
add
call
mov
adc
push
lret
jae
rorl
or
lods
add
add
hlt
push
add
jns
add
shrl
jmp
loopne
imul
sub
xchg
jp
lock
jmp
cmp
test
dec
lret
or
lock
ss
cmp
int3
std
scas
pop
mov
imul
out
mov
adc
in
jae
inc
xor
dec
jb
add
push
in
mov
divl
dec
jnp
pop
icebp
mov
test
mov
add
mov
fxch
shrb
in
sub
cmp
cld
cmp
xchg
das
stos
inc
rorl
stos
mov
repz
hlt
out
dec
mov
test
push
xchg
add
adc
sub
add
xorb
std
mov
pop
pop
sbb
inc
add
mov
mov
and
int
lods
add
lea
xor
inc
jl
cwtl
add
xor
jle
mov
mov
sar
lea
add
loopne
sti
mov
outsl
scas
test
outsb
inc
lods
adc
inc
leave
adc
xor
xchg
shlb
leave
ret
loopne
jge
xor
sti
idivb
adc
stc
in
mov
and
pop
add
out
call
dec
dec
jnp
test
and
push
stos
ret
mov
push
call
xor
gs
xchg
cmp
add
in
inc
dec
jne
xchg
jp
push
adc
or
shr
in
jns
fcoms
out
icebp
sbb
push
pop
jp
mov
insl
stos
mov
test
pusha
cmpsl
inc
daa
push
repnz
pop
cltd
ss
rorl
lods
in
push
jle
jne
sbb
sub
add
mov
ret
or
test
cmp
fnstcw
cmp
int
ja
ret
jp
cmp
and
jecxz
lock
cmpsb
jmp
mov
sbb
sti
dec
sahf
push
repz
jnp
pop
or
cmp
pop
inc
roll
dec
jne
pop
xor
push
out
jle
mov
hlt
outsl
in
hlt
push
sub
aaa
daa
pop
stos
andl
push
jecxz
scas
pop
fisttpl
or
jbe
jge
fldt
mov
cltd
mov
pop
jge
dec
leave
mov
fwait
pop
mov
jo
dec
xchg
jne
cmc
pextrw
pop
push
in
pusha
add
mov
xchg
inc
pushf
or
aas
int
inc
popf
icebp
and
push
pop
cmpsb
pusha
pop
jle
cltd
adc
shlb
shlb
mov
int
repz
aas
into
or
and
xor
dec
add
mov
and
shll
push
cmp
jmp
js
nop
sbb
andb
pop
sbb
and
inc
cmp
sbb
mov
mov
adc
aas
fists
pop
pop
nop
sbb
aam
push
add
lea
icebp
jae
and
movsl
dec
lret
push
mov
xchg
cmc
out
sub
sahf
mov
psrad
call
push
push
pop
mov
aaa
or
sbb
nop
dec
mov
mov
nop
das
fwait
push
dec
push
or
jae
pop
push
ror
fnstcw
or
adc
dec
shrl
in
jmp
aaa
jl
xchg
dec
lea
mov
shll
scas
xor
cmpsb
mov
rep
inc
popa
pop
or
cmpsb
mov
in
stos
je
call
rcl
clc
mov
inc
int
mov
add
fsubs
fs
iret
lcall
push
mov
push
xchg
mov
stc
lret
nop
pusha
aas
fistps
pop
fwait
xchg
pop
pop
push
mov
xor
fwait
jbe
je
dec
xlat
pusha
pop
pavgb
push
and
push
lcall
sbb
js
fbstp
scas
int3
cmp
jg
movsl
sbb
rorb
sbb
push
inc
xchg
cmp
rorb
imul
ret
daa
data16
mov
mov
inc
test
subl
mov
adcl
fimuls
les
xor
mov
loope
mov
jg
aam
add
add
es
fists
aam
sub
movsb
adc
xor
xchg
fnsave
pop
in
mov
shll
xor
sbb
gs
lock
in
dec
int3
pop
add
sbb
pushf
mov
insb
cmp
push
fsubrs
push
clc
sbb
scas
jecxz
cltd
loopne
leave
insl
leave
ret
gs
and
out
mov
xchg
push
sub
xchg
sbb
adc
sarb
adc
adc
lahf
sbb
cmp
aam
jecxz
inc
sarb
dec
mov
xlat
scas
inc
push
es
jb
or
xor
xor
pop
into
mov
test
add
xchg
jnp
das
xchg
push
adc
mov
lret
mov
xchg
dec
push
loope
and
arpl
adc
sahf
lods
sub
in
jmp
test
aad
leave
mov
popf
adc
or
mov
bound
push
addr16
scas
xchg
add
lret
jge
sbb
das
insb
mov
sub
and
fwait
jecxz
je
jge
mov
aas
lods
or
mov
cmp
mov
rcll
push
jmp
sti
and
sbb
nop
popl
xchg
and
jo
js
adc
mov
mov
loop
push
sub
jle
and
repz
sbb
mov
sub
imul
fisubs
leave
lret
fs
aaa
and
jne
rcr
stc
fstl
cmpl
test
cmp
xchg
jns
dec
and
adc
sub
popf
mov
cmpsl
popa
nop
ja
adc
loop
test
sahf
test
subl
fwait
pushf
jo
add
jnp
loop
xchg
sub
mov
push
insl
fadds
mov
inc
in
sbb
or
movl
jbe
nopl
in
inc
movsb
mov
les
add
add
adc
call
leave
ret
add
les
cmp
pop
jp
in
daa
lcall
dec
push
sub
jno
xlat
sub
dec
jbe
movsl
pusha
mov
or
stos
into
cmp
cltd
lds
shl
pusha
xchg
loope
imull
fwait
iret
add
iret
cmp
push
je
jb
push
ja
pop
popf
xor
nop
push
mov
orl
xchg
ret
mov
adcl
jb
push
sub
mov
xchg
ss
test
nop
out
cmpsl
cs
fildll
inc
es
jae
sbb
data16
icebp
pop
and
add
mov
fldl
or
cld
push
sbb
push
mov
fwait
in
stc
cmp
sub
adc
sub
andl
repnz
js
adc
jbe
shlb
imul
insb
xor
js
xchg
dec
xchg
mov
mov
inc
xchg
mov
push
add
cmp
pop
lock
sarl
cmp
mov
aad
leave
push
xor
cli
inc
andb
data16
push
cmpsl
mov
add
out
insl
xchg
push
adc
xchg
add
push
sub
mov
adc
scas
adc
test
mov
xor
lods
or
stos
aas
push
call
push
or
pop
add
jmp
pushf
mov
aam
rcl
dec
xchg
rclb
out
and
mov
outsb
cmp
jl
call
push
mov
ret
push
fcmovnb
adc
mov
shrb
dec
jae
cld
insl
nop
stos
sbb
stos
xchg
cmpb
scas
xor
cwtl
push
xchg
cmp
mov
add
notl
loopne
sub
push
inc
jb
std
sbb
and
add
lret
xorb
cs
loop
aas
cltd
cmp
nop
outsl
xchg
andl
push
or
shlb
ja
lahf
lret
lods
ja
or
sbb
js
jg
pop
bound
adc
in
test
and
lock
cmp
mov
test
fucomp
dec
imul
inc
jae
loopne
ret
in
dec
stos
jp
ficomps
sub
ss
mov
jo
insb
push
popf
or
xchg
xchg
xor
out
mov
xor
cmp
pushf
inc
arpl
lds
iret
sti
mov
test
comiss
mov
aam
sub
sti
fidivl
test
sti
int
xor
mov
xor
and
lcall
add
shr
popf
fldl
je
sarb
insb
rcrb
add
pushf
push
mov
push
mov
out
lods
js
test
mov
xor
outsl
cmp
mov
jmp
cmpsl
lahf
or
das
jb
cs
and
rolb
add
push
jae
aam
xor
loopne
mov
aas
push
and
or
test
shl
xchg
push
loope
fiadds
int3
aas
aas
repz
push
sbb
movsb
push
jp
loope
or
mov
mov
mov
icebp
mov
stc
xchg
imul
mov
xchg
xor
dec
iret
pushf
cld
sahf
outsb
insb
sbb
hlt
and
pop
jnp
mov
cmp
jb
xchg
fimuls
jmp
or
dec
pop
pop
pop
in
lds
addl
sub
rclb
es
or
jmp
fidivs
and
nop
cmpb
notl
mov
insl
test
test
incb
push
inc
xor
imul
cli
out
adcl
pop
inc
lods
shrl
add
imul
addps
mov
repnz
cltd
mov
mov
fisubrs
not
in
mov
mov
pop
stos
cmp
add
into
jge
stc
in
aaa
lcall
push
or
es
xchg
repz
inc
popa
mov
sub
adcl
sub
in
clc
loope
loope
cmpsl
jecxz
in
fisubs
loope
mov
fst
addl
cmp
fstps
fldcw
leave
cpuid
push
lods
cltd
scas
pusha
stos
mov
cmp
xor
sbb
dec
dec
and
imul
mov
pop
jp
pop
testl
test
movsl
and
jecxz
xchg
jbe
xlat
adc
mov
xchg
and
je
cmp
es
addb
add
inc
xor
hlt
mov
ljmp
cli
stos
sbb
cmp
ret
or
or
or
push
pop
pop
push
sbb
jns
mov
mov
and
jns
push
out
pop
ficoml
pop
bound
pextrw
mov
push
test
fisubrs
test
dec
mov
mov
mov
ret
dec
gs
jne
scas
pop
out
out
mov
mov
aas
mov
push
stc
stos
cwtl
mov
mov
mov
push
cmp
jge
dec
dec
sbb
inc
ja
xor
mov
dec
jecxz
xchg
xchg
repnz
jp
mov
jecxz
dec
push
add
or
out
in
mov
lret
out
jb
dec
and
mov
pop
xor
stos
push
mov
add
add
mov
mov
mov
add
test
ss
push
add
jle
int
mov
sti
stc
push
iret
enter
mov
cmp
es
inc
icebp
mov
cld
fdivrl
stos
or
insl
cmpsl
scas
mov
mov
in
rcl
mov
pushl
test
pop
shrl
dec
mov
xchg
sub
xchg
xchg
movsl
or
inc
dec
out
xor
or
idivl
jle
xchg
sbb
jae
out
sub
mov
cld
adc
ret
pop
mov
or
ret
leave
and
mov
iret
fadd
cmpsb
adc
and
fcompl
push
mov
mov
mov
mov
lret
dec
sub
mov
jmp
pop
in
push
ljmp
or
out
inc
adc
mov
inc
insb
push
das
dec
xlat
and
mov
jle
push
addr16
andl
push
jne
jb
mov
dec
push
cwtl
test
pop
fdivrs
adc
aam
nop
jmp
inc
mov
out
xchg
mov
and
pop
dec
mov
gs
pop
loopne
not
loop
dec
jbe
rcll
lret
or
push
subl
lods
aaa
imul
jae
out
test
lahf
imul
add
cmc
sbb
fsub
in
xchg
xchg
scas
xchg
add
rol
imul
into
pop
dec
mov
push
repz
jmp
push
sbb
xor
lret
les
pop
cld
sbb
xor
sub
adc
xchg
mov
mov
lds
jno
rclb
inc
sub
testb
jmp
ret
dec
ret
cmp
mov
sub
inc
xor
xlat
jp
cmpl
add
sbb
in
dec
jge
mov
cwtl
cmpsb
cmp
mov
sbb
or
mov
jns
and
in
call
adc
lods
rcrl
adc
mov
mov
sub
and
add
adc
pop
inc
mov
mov
jmp
pop
mov
pop
loop
lock
test
push
adc
imul
xchg
xchg
fdivl
push
and
in
pop
ds
fidivrs
mov
aad
push
pop
push
lds
inc
dec
cwtl
cs
mov
push
and
mov
aas
pop
and
pop
jg
adc
sbb
mov
push
mov
int3
sub
es
int3
negb
mov
imul
push
and
lahf
pop
adc
sbb
lods
prefetch
pop
adc
loope
push
shll
or
popa
dec
jmp
repz
mov
sbb
gs
cld
push
ljmp
xorb
icebp
sub
sbb
adc
je
mov
mov
adc
sbb
pop
sbb
inc
push
mov
push
cs
pop
mov
lds
test
dec
pop
adc
cli
sar
or
mov
repnz
cltd
dec
iret
mov
arpl
and
sbb
popa
push
test
icebp
pusha
mov
lods
insl
inc
pop
mov
dec
popa
push
jns
btc
ret
mov
cmovle
ret
inc
mov
imul
fcompl
and
xlat
xchg
mov
push
dec
fcoml
aas
lods
lds
ret
jae
icebp
cmpsl
mov
out
adc
ret
popf
mov
fcomip
scas
cli
popf
arpl
ja
mov
add
cmpl
cld
out
pop
pop
mov
lea
push
outsl
push
jbe
mov
push
mov
push
xchg
xchg
xchg
fiaddl
or
inc
jae
xor
mov
mov
call
icebp
jno
mov
adc
lahf
jmp
mov
cmp
cli
loopne
mov
loope
mov
call
ja
push
mov
int
jne
fidivrs
scas
leave
xchg
shll
xchg
les
sub
push
hlt
bound
popfw
pop
ret
jmp
jge
hlt
dec
xchg
imul
mov
mov
dec
mov
out
out
lock
movsl
subl
sub
mov
shl
flds
loopne
cmp
mov
jge
sub
clc
jl
and
push
push
jno
leave
push
xor
adc
sub
mov
adc
out
pop
out
jmp
sub
rcl
push
mov
xor
mov
mull
scas
scas
ret
jbe
or
add
push
jne
jge
out
dec
jo
inc
stc
jns
testl
add
push
jae
jle
repnz
int3
ja
mov
pop
xchg
dec
out
pusha
mov
pop
cld
ss
jns
sub
lea
inc
inc
mov
pop
loopne
or
addr16
mov
cmp
fisttps
aas
repz
fnsave
icebp
pop
cmpb
sarl
mov
adc
lret
sbb
jo
das
mov
ja
sbb
jle
pop
adc
dec
adc
movl
repz
mov
cmp
ficomps
xor
jne
bound
jmp
or
in
xor
js
mov
aas
push
xchg
ds
pop
mov
mov
mov
daa
mov
pushf
decb
shlb
sarb
test
push
stos
mov
inc
mov
sbb
jnp
mov
je
int3
orb
mov
inc
jg
xor
jae
pop
je
insb
aas
or
add
imul
cs
cmp
fldl
shl
xchg
mov
inc
loope
inc
fsts
pop
adc
out
mov
pop
or
das
sbb
loop
fs
shrl
leave
lods
and
xchg
out
jbe
out
mov
insb
rorb
aaa
addr16
mov
inc
sbb
test
push
popf
add
testb
sub
psubw
jg
std
add
sub
or
lds
xchg
and
pusha
je
mov
call
jmp
jbe
push
cmc
jno
inc
notb
jo
adc
cs
mov
jmp
push
sub
mov
inc
sub
loopne
dec
test
rclb
testb
dec
push
jae
pop
push
jle
add
in
lret
inc
clc
push
dec
int3
and
aaa
leave
jnp
dec
xchg
push
mov
shrl
mov
addr16
aaa
sub
or
je
mov
mov
ds
stc
cmp
add
fs
inc
test
lahf
pushf
add
push
mov
push
xor
scas
repz
push
ljmp
nop
and
sbb
imul
insb
dec
mov
mov
adcl
xchg
orb
out
cmpb
out
shll
push
jecxz
test
fisubrl
inc
out
jge
scas
cld
les
mov
in
mov
mov
cmpsb
fdivr
stos
stc
and
out
addr16
jecxz
mov
cmp
jne
inc
mov
inc
jle
aam
or
ss
in
push
sub
loop
push
fldt
push
xchg
punpckhwd
xchg
pusha
test
push
cmpsb
inc
mov
pop
inc
mov
sub
cmc
movsl
and
pop
loopne
scas
dec
in
lock
popf
cmpsb
cli
outsb
ja
idivb
pop
jp
inc
add
call
imul
inc
sbb
pop
stc
push
in
xchg
lods
mov
hlt
inc
shl
mov
movl
xchg
sbb
jmp
aas
popa
mov
xlat
fsubl
mov
jbe
mov
xchg
mov
ds
aam
or
mov
pop
mov
cmpsl
sub
daa
mov
xchg
scas
xchg
cmpsl
outsl
aam
jmp
sbb
mov
rol
out
out
int3
pop
std
sub
loope
or
and
mov
mov
cmp
fstps
and
or
dec
pusha
daa
mov
ret
add
mov
mov
lcall
fbstp
loopne
lock
cmpb
mov
test
or
loop
fildl
and
test
xchg
mov
subl
inc
das
rolb
iret
sbb
imul
roll
repz
jmp
xchg
movsl
jno
fists
outsb
je
mov
xchg
jb
lsl
cmp
jmp
int
push
mov
mov
pusha
jp
bnd
pop
jae
push
push
mov
movsl
mov
cmp
pop
roll
sbb
push
push
mov
rcrl
jbe
das
outsb
repz
mov
pop
sub
roll
leave
pop
and
xchg
inc
jge
in
pop
sbbb
lock
cmp
or
and
or
push
lahf
test
push
or
inc
faddl
xchg
xor
icebp
cmp
push
mov
lahf
cltd
dec
popa
cli
or
mov
lcall
mov
pop
push
sbb
cwtl
imul
mov
pop
xlat
int3
inc
lahf
cmpsl
js
ret
sahf
xchg
mov
rorb
xchg
fisubl
jnp
cmp
sub
adc
sbb
cwtl
icebp
imul
xchg
cmp
push
rclb
and
adc
jo
add
call
pop
ret
fs
mov
ret
int3
sbb
add
add
fsubrs
addr16
sahf
dec
andl
cmp
xchg
sarb
outsl
xor
and
aam
mov
loope
aas
lret
or
movsb
mov
rcl
add
movsl
lods
cmp
pop
les
cli
es
out
je
push
cmc
data16
lret
lock
orb
sub
cmpl
xor
enter
push
enter
adc
jnp
jb
and
out
xlat
dec
jg
jp
outsb
pop
adc
pop
mov
insl
sub
inc
xchg
mov
pop
jmp
std
daa
xchg
les
fsubrl
mov
ljmp
and
jae
cltd
or
mov
mov
sub
dec
adc
xchg
loope
jecxz
rolb
mov
pushf
jne
les
int
sub
out
ret
into
test
repz
pop
dec
xor
fimuls
adc
lds
lods
pop
ljmp
nop
cmpl
add
fstpl
lods
test
stc
ljmp
sub
xchg
and
in
push
pushl
adc
jo
mov
out
jl
sub
sub
scas
addb
fcom
gs
push
add
and
adcl
jo
icebp
movsb
addr16
push
dec
cmc
fbstp
les
idiv
and
leave
lods
pop
loopne
sti
jnp
sub
push
push
pop
inc
xchg
inc
mov
rcrl
in
js
inc
out
mov
cld
aas
inc
cmc
pop
sbb
lods
mov
divb
mov
push
adc
pop
fnstenv
icebp
mov
cld
fisubrs
cmp
xchg
pop
lcall
push
jb
cwtl
push
inc
push
rorb
mov
cmp
push
mov
sub
es
jl
pop
adc
push
ljmp
sub
pop
and
adc
add
fcomps
sbb
in
or
pop
pop
sub
mov
jmp
sub
in
es
btr
push
scas
dec
insb
ja
leave
loopne
sbbl
popf
sub
movsl
push
add
xor
mov
test
dec
scas
jo
push
mov
ss
out
adc
out
mov
mov
mov
mov
or
outsb
jp
ficoms
inc
imul
mov
xor
mov
subl
and
push
sbb
outsl
mov
insl
sub
into
cmp
hlt
xchg
insl
test
imul
popf
inc
fdivrp
test
sub
mov
jno
dec
lahf
pop
xchg
sub
pop
ds
leave
test
pop
xchg
or
inc
xor
jb
push
into
nop
out
stos
inc
ret
add
ss
shll
adc
jl
in
pop
jmp
sahf
add
std
pop
repnz
hlt
jae
in
shll
jmp
adc
inc
jmp
in
inc
mov
sbb
arpl
adc
lret
scas
insl
jb
sub
outsb
test
or
jecxz
sub
add
addr16
rcl
sahf
sub
loop
cmc
dec
mov
cmpsl
jecxz
jne
xorl
mov
or
nop
andl
push
jge
sub
and
mov
stc
push
aam
stos
xor
stos
xor
cltd
data16
adc
stos
mov
hlt
ja
adc
dec
adc
aas
push
jg
xchg
dec
leave
and
xchg
xchg
fildl
cld
aad
rorl
or
fisubrl
mov
sub
dec
mov
mov
sarl
shlb
xor
enter
xchg
aam
jp,pt
lcall
fiadds
pop
add
xchg
into
jbe
aaa
mov
rcr
lods
aad
cmpsb
test
cltd
adc
jecxz
ret
mov
mov
adc
adc
mov
outsb
inc
xlat
in
mov
mov
mov
xlat
mov
push
jno
cmp
dec
xchg
push
adc
add
mov
cmc
lret
or
cmp
ds
mov
popf
cmp
sub
sahf
jne
mov
jg
in
or
pop
xchg
scas
arpl
pop
mov
aas
jbe
cmp
inc
incl
push
loope
hlt
adc
push
add
mov
jns
in
dec
aad
cmp
sub
movsb
jno
fwait
pushf
fisttps
push
push
adc
mov
or
std
std
pop
mov
cmpsl
icebp
push
push
loop
mov
into
inc
xchg
xchg
mov
mov
xor
xchg
xchg
dec
mov
cmp
ret
cli
inc
out
mov
and
inc
aad
test
sbb
sbb
mov
jecxz
xorb
lea
xchg
mov
mov
cmp
push
pop
cmp
xchg
vmulsd
xchg
int3
push
sbb
in
mov
mov
or
inc
and
test
negb
adc
lcall
popf
sahf
xchg
xchg
cmp
or
inc
push
inc
cmpsl
cmp
push
insb
sahf
inc
scas
nop
xor
imul
or
in
dec
shl
stos
fwait
xor
ja
mov
dec
into
mov
mov
or
cmp
das
icebp
into
clc
out
mov
inc
and
subb
sarb
pusha
daa
mov
mov
cltd
ret
jle
jmp
cld
xchg
inc
mov
mov
jmp
insl
mov
dec
insl
push
imul
out
into
popf
mov
add
cld
add
inc
jnp
cmp
bound
add
xor
xchg
xor
mov
scas
or
pop
out
aaa
popf
pmaddwd
js
pop
int3
enter
arpl
aaa
mov
dec
xor
rcrl
lea
cmp
cwtl
movsb
mov
call
cmp
jmp
jmp
stos
imul
xchg
daa
push
in
xchg
ljmp
mov
cwtl
mov
test
xlat
mov
sub
push
mov
std
in
bound
inc
js
sti
cs
fisubl
fstpt
adc
adc
ds
mov
sbb
rcll
mov
push
mov
js
outsb
in
mov
sbb
push
popa
jge
sub
jg
test
push
inc
cwtl
leave
jno
pushl
or
sti
push
movsl
mov
xor
push
in
das
mov
inc
or
mov
cmp
lods
ret
cmp
mov
adc
test
push
jae
mov
imul
dec
outsb
xor
mov
stc
test
cmp
mov
lock
add
dec
mov
pop
stc
push
cmp
into
pop
lcall
pushf
in
insb
popf
mov
lret
movsb
add
sub
je
andl
out
xor
xor
or
dec
push
xchg
hlt
pop
or
sub
sahf
sbb
or
fcmovbe
addr16
push
clc
sub
lahf
lahf
test
movsl
jmp
lock
cmp
leave
adc
mov
lds
shr
in
fcmovbe
jl
mov
adc
cmpb
aas
push
lahf
loopne
pop
jecxz
add
push
jp
jae
dec
adc
es
cmpsl
sub
cmp
lahf
lcall
outsl
outsb
ret
enter
and
test
std
mov
add
loopne
cld
sbb
push
cmp
fbld
addb
mov
adc
sub
stos
inc
inc
enter
test
and
xchg
imul
pop
insl
jnp
pop
adc
xor
mov
aad
js
fbld
ret
pop
add
jne
ss
cmp
add
imull
lret
sbb
mov
dec
in
sbb
stc
pusha
push
in
adc
push
dec
stos
fcmovne
pop
adc
add
les
enter
sar
mov
and
imul
je
jp
fs
test
xchg
mov
out
jns
lods
int3
mov
mov
mov
mov
scas
ficompl
pop
mov
and
jmp
sub
or
adc
pushf
lea
cmpsb
scas
xor
orb
add
add
cmpb
pop
incl
sub
loope
out
jns
ljmp
loope
adc
and
mov
jge
or
jae
das
xchg
sbb
in
inc
pop
cmpsl
outsb
mov
subl
aas
cmp
subl
repz
roll
pop
es
adc
in
jnp
push
jmp
out
pop
test
loopne
je
inc
cmpsb
mov
popf
adc
imul
sub
shl
call
lret
cld
out
sarb
das
mov
xor
fnsave
incl
xor
sbb
repz
andl
or
subb
fs
push
enter
loopne
cmpsb
loopne
push
add
xchg
das
push
call
mov
mov
push
mov
push
inc
mov
in
movsl
movsl
and
std
outsl
clc
movsb
adcb
and
mov
sbb
insl
mul
ret
hlt
cmp
sub
xor
cmp
push
cmp
cmp
add
jne
push
dec
data16
and
loop
pop
lea
inc
push
jmp
add
and
imul
inc
mov
mov
or
ja
xor
jne
loopne
testl
fs
clc
push
lahf
mov
aad
push
rcrb
or
mov
and
adc
aam
jo
push
pop
cmpsl
sbb
cltd
add
push
rorb
pop
pushf
and
pop
dec
or
inc
dec
xchg
cmp
lods
jecxz
add
bound
sbb
mov
sub
mov
popl
pushf
sar
icebp
or
jnp
jne
clc
fmuls
insb
dec
pop
out
sar
aad
push
and
int
rcrb
dec
pop
iret
mov
shlb
rolb
push
lahf
dec
jg
sbb
sub
jo
and
mov
mov
enter
push
cmp
push
adc
add
ds
testl
inc
cmp
cmp
add
xchg
rcrl
es
dec
fdivrs
out
mov
dec
dec
jbe
push
movsb
mov
xchg
imul
and
xorb
cltd
ret
inc
and
push
mov
dec
adcl
repz
jecxz
and
stc
mov
push
mov
xchg
jg
aas
mov
push
adc
jb
jo
xor
rolb
fbld
push
xchg
loop
mov
xchg
push
sahf
popa
lock
not
sahf
cld
add
xchg
jb
mov
dec
jp
hlt
jmp
ficompl
arpl
mov
push
packuswb
xchg
icebp
jmp
sbb
mov
aas
sub
out
in
xchg
jb
outsl
fcomip
push
push
xlat
cbtw
push
scas
es
popf
out
inc
cmpsl
push
fstps
xchg
mov
mov
test
lods
lock
iret
dec
sti
fiaddl
cmp
adc
in
xchg
js
adc
dec
movsl
mov
sub
pop
data16
stc
mov
stc
mov
stos
lret
add
mov
mov
daa
mov
cmp
shll
fsubl
xor
inc
mov
add
out
mov
mov
jnp
mov
fdiv
inc
stc
ret
mov
js
mov
in
fbstp
lahf
insl
je
dec
call
cmp
and
outsb
sbb
int3
mov
push
nop
fcoms
loop
push
test
loop
push
test
dec
ret
sub
inc
xchg
pushf
subl
sub
stc
imul
bound
and
jnp
pop
jb
das
aaa
and
shl
loop
fimuls
popf
nop
sets
in
leave
or
loop
xchg
dec
into
adc
sbb
ds
sbb
ljmp
ljmp
shlb
movsl
in
mov
mov
std
push
mov
fimull
ss
fwait
daa
add
inc
js
cmp
jne
std
test
in
push
pop
cltd
sbb
iret
dec
lret
jo
jecxz
jg
and
pop
std
mov
jmp
das
dec
dec
int3
xor
imul
test
jecxz
icebp
mov
imul
push
push
dec
mov
pusha
mov
push
popa
add
push
orb
rcll
sub
cmp
jb
add
or
cwtl
mov
xor
mov
jmp
inc
ffreep
addr16
cld
sbb
mov
inc
jb
add
imul
test
jae
pop
lcall
fdivr
cmp
rclb
nop
stos
repz
loope
pop
push
es
and
movsb
int
sbb
les
xor
cmpsl
out
outsb
aam
jl
mov
pop
in
data16
ja
lds
idiv
jnp
fwait
cmp
out
xchg
lea
stos
cmpsl
inc
or
mov
sub
pop
xchg
fdivl
loop
sti
lret
sbb
movsb
in
mov
sub
jp
test
sbb
mov
mov
xlat
fiadds
jge
pop
add
int
mov
add
lds
prefetch
or
jnp
daa
jmp
xor
pop
imul
sti
sub
repz
sbb
stos
xchg
jne
insb
pop
inc
jns
imul
add
push
mov
mov
sahf
sbb
xor
stos
jno
or
cmc
outsl
call
push
mov
inc
push
jecxz
add
and
les
cmp
pop
nop
mov
daa
adc
dec
outsb
and
fmull
stos
les
lock
or
push
sbb
les
xchg
mov
xchg
mov
cmp
cmp
jg
scas
add
xchg
pusha
cld
loop
xchg
test
out
cmp
ret
sbb
icebp
jns
ret
outsb
xchg
lods
inc
divb
in
xchg
aad
pop
xchg
sbb
xchg
ficompl
and
mov
lods
sahf
scas
scas
out
outsb
cltd
adc
mov
add
pop
pop
cltd
sub
inc
fadds
idivl
lret
cmc
add
sub
fbstp
cwtl
nop
loop
cmc
test
bound
in
stc
inc
cmpsl
shrl
xchg
dec
mov
jno
mov
mov
and
lret
inc
or
xor
jb
in
divl
je
dec
dec
push
xlat
das
mov
inc
nop
xchg
je
or
lods
test
enter
test
insl
adc
lret
imul
dec
hlt
dec
cld
xchg
pop
push
orl
xchg
mov
fstpt
test
inc
shll
mov
add
push
inc
scas
int
mov
testb
pushf
mov
lahf
test
js
inc
insl
mov
pop
pop
outsb
ficoms
add
lods
gs
xchg
jp
lock
outsb
or
arpl
stos
cmp
mov
xor
and
es
cltd
aas
aaa
fs
test
scas
dec
sbb
iret
cmp
lahf
mov
popa
fsubr
leave
cmp
fiadds
jne
inc
das
sbb
std
inc
or
mov
out
insb
xor
stc
cmc
ja
in
and
mov
jmp
pusha
sbb
outsl
shlb
xchg
sub
ret
push
ret
push
sub
lcall
movsl
sbb
jo
or
sarl
jo
sbb
addb
iret
adc
fisubrs
mov
shll
and
inc
mov
mov
sub
jmp
arpl
mov
sbbb
dec
ljmp
fcoms
xor
cmp
pusha
inc
xchg
int3
imul
out
pop
mov
fsts
cmp
insb
pop
test
xchg
cmp
mov
cwtl
idiv
imul
xor
jg
or
sti
movsl
popf
sub
aas
jo
sbbb
jecxz
movw
or
xor
mov
pop
cli
stos
shll
or
std
in
cld
daa
out
sbb
inc
or
in
call
add
fsubs
leave
loop
jb
aas
jle
std
fmulp
push
sbb
push
outsb
outsl
lock
outsl
mov
pop
or
ds
push
sbb
xchg
mov
aas
clc
aam
mov
push
sbb
or
insl
ljmp
inc
inc
push
sbb
push
dec
or
movsl
pop
pop
sbb
sub
mov
shlb
cmp
inc
test
mov
aaa
xchg
insb
decl
push
stos
cmp
into
pop
leave
fwait
arpl
insl
lahf
xor
xchg
or
xchg
jnp
push
cmp
jmp
pop
aad
scas
jo
jge
inc
stc
fcmovu
lods
pushf
pop
sub
xorl
stc
sti
mov
enter
push
xor
xor
and
push
pop
mov
mov
int3
es
mov
ss
js
in
clc
xchg
jb
sub
cmp
test
je
jns
pop
outsl
fdivs
iret
add
dec
pop
lret
push
lret
stc
test
loope
jno
cmc
mov
jne
add
cmpsl
mov
jnp
in
push
mov
repnz
lcall
je
dec
and
sub
dec
outsl
cmp
mov
push
jns
xchg
sub
xchg
sbb
fildll
sub
fcompl
push
arpl
mov
sbb
add
adc
mov
in
mov
adc
icebp
rolb
arpl
out
push
in
bnd
flds
push
aas
hlt
invd
inc
clc
inc
fstl
leave
shrb
mov
sbb
pop
je
gs
cmpsl
sti
mov
pop
incb
movsb
mov
push
aad
xchg
call
dec
lret
push
xor
mov
imul
cwtl
dec
leave
dec
xor
add
inc
jb
jp
mov
mov
mov
out
and
out
loop
cmp
mov
cmp
sbb
test
add
push
pop
imul
in
and
sahf
dec
test
push
repz
xchg
sbb
sub
outsl
xchg
loopne
and
xor
ljmp
mull
sahf
ja
iret
scas
inc
pusha
cmp
add
lahf
loope
jbe
in
jbe
enter
dec
lods
xchg
pop
loopne
or
mov
adc
cmc
js
or
and
mov
sub
mov
daa
in
repz
or
push
jmp
pop
inc
loope
jge
ja
push
cmp
mov
test
or
ret
mov
xchg
mov
jmp
lods
adc
sbb
ljmp
test
fmuls
mov
and
adc
pop
test
cltd
mov
movsb
sub
mov
fsubl
or
testl
int
pushf
xor
popf
push
mov
lock
pcmpgtw
fwait
pop
sarb
pop
fmuls
int
mov
mov
mov
mov
inc
ds
mov
ret
sbbb
xchg
or
je
add
dec
mov
jo
in
out
loop
addr16
andl
je
xor
ds
mov
das
fadd
pop
or
add
out
pop
aam
sub
xor
out
push
pop
insb
cmp
movsl
ret
push
sahf
mov
and
nop
mov
js
pusha
fs
mov
push
mov
jl
test
cmc
lods
pop
mov
adcl
aam
lock
mov
sbb
xor
or
mov
es
or
outsl
ror
int
shlb
test
adc
sub
shlw
inc
add
push
cmp
cmp
addl
insl
mov
leave
sub
test
sbb
adc
inc
and
dec
scas
rcrb
push
pop
aaa
jbe
push
scas
mov
fs
jo
or
or
sub
mov
lret
clc
mov
dec
daa
xchg
lret
lea
cld
testl
lds
fdivr
push
xchg
pop
les
pop
pop
js
adc
ds
push
adc
movsb
push
adc
jmp
jge
mov
jnp
mov
ja
add
ret
insl
inc
repnz
bound
das
jae
jle
xor
mov
lret
imul
std
mov
mov
mull
dec
ds
mov
sub
lods
mov
and
lock
hlt
subl
cmp
stos
mov
leave
lock
mov
jo
push
ret
das
and
icebp
cmp
pop
push
or
mov
dec
push
sahf
pop
fnstcw
imul
xlat
xor
stos
push
mov
jg
add
stc
xor
mov
popa
stos
jge
cs
ret
std
lret
jge
inc
jecxz
sarb
outsl
fwait
jno
xor
daa
fnstenv
arpl
je
iret
orb
scas
and
pop
push
dec
cltd
loope
sbb
xchg
scas
sti
xchg
dec
xchg
hlt
dec
mov
xor
inc
test
pop
pop
or
faddl
mov
lods
adc
push
push
adc
and
pop
das
mov
xor
pop
daa
in
mov
bswap
pop
sub
clc
mov
sub
enter
leave
in
mov
imul
hlt
test
lea
xorb
shrb
nop
jbe
mov
test
jmp
inc
cmp
inc
cmp
out
xor
insb
daa
jbe
sbb
and
out
int3
hlt
xchg
pop
lret
aas
cmp
sbb
rcr
mov
mov
jnp
imul
ljmp
fstl
cmp
test
dec
or
hlt
insb
adc
hlt
out
jns
popa
rep
mov
pop
pop
mov
ret
add
mov
sub
push
pop
sub
dec
lods
bound
call
rolb
push
push
xchg
mov
mov
icebp
pusha
stc
xchg
aas
xchg
adc
jecxz
lret
and
lea
mov
inc
pop
push
sub
lods
mov
popa
mov
and
push
aad
orl
push
inc
mov
mov
fcoms
shrb
shlb
adc
inc
push
mov
adc
lds
inc
inc
pop
mov
stc
push
pop
aad
in
fdiv
dec
cmp
ret
mov
mov
sub
fldcw
inc
xchg
insl
stos
inc
cmpsb
bswap
jne,pn
mov
pop
cmpsb
ja
adcl
int
adc
and
test
test
in
scas
arpl
push
ret
sbb
mov
loop
lcall
testb
and
into
clc
shll
add
pop
daa
and
bound
xchg
cmp
enter
mov
cmpsl
mov
push
push
jl
dec
cmp
pop
movsl
insl
jno
rcrl
pop
imul
outsb
dec
cld
jbe
xlat
pop
clc
nop
je
and
mov
fistl
xchg
aaa
inc
test
jo
popf
push
sbb
mov
fstl
fildll
ficompl
xchg
sub
adc
sbb
into
nop
jp
dec
pop
outsl
push
or
fisttpll
hlt
sub
cmp
imul
es
inc
push
jae
in
jnp
cmp
sub
add
dec
test
ficompl
popf
mov
jae
arpl
loope
jg
insl
pop
ss
dec
inc
aaa
fs
imul
dec
xlat
fbld
test
xchg
outsb
or
sub
inc
inc
aas
jge
push
pop
outsl
cmp
jmp
sub
pop
dec
scas
movsl
dec
inc
mov
sti
mov
aaa
pop
sub
adc
sbb
inc
leave
je
jmp
ja
mov
sbb
mov
dec
adc
dec
fnstcw
fdivr
jecxz
adc
add
out
sahf
pushf
mov
push
xrelease
jg
jp
adc
pop
pop
gs
nop
fstl
lret
sbb
or
inc
mov
insl
mov
push
inc
lods
inc
adc
aad
push
sub
sarb
addr16
into
dec
bound
movsb
test
andb
push
sub
aam
repnz
or
incl
cmp
inc
mov
movsl
cmp
inc
pop
inc
sbb
and
mov
lcall
add
movsb
lock
lahf
pop
stc
out
jo
add
cmp
lahf
cld
loopne
sbb
mov
in
testl
jb
lds
push
movsl
std
mov
push
fldt
mov
daa
scas
or
mov
nop
scas
push
and
mov
in
and
popa
out
hlt
push
xchg
cmp
test
loope
ss
test
xchg
popf
dec
pop
and
push
jnp
out
pop
push
sub
push
push
dec
sbb
dec
jns
scas
fld
aas
ja
outsl
jl
dec
lods
mov
pop
xchg
out
adc
jl
dec
and
xchg
jp
das
mov
imul
xor
mov
ljmp
and
jmp
ss
xchg
or
shlb
push
and
and
out
add
lea
fdivs
pop
repnz
mov
inc
dec
push
mov
mov
or
out
mov
jb
mov
ds
and
sahf
jle
pop
pop
mov
stos
into
push
and
popf
js
ret
je
sub
or
mov
jle
sub
ss
lods
dec
push
cmc
xchg
jle
jno
and
adc
cmpsl
inc
cmpl
or
xchg
dec
add
imul
mov
pop
leave
mov
popf
inc
test
rcll
mov
lea
ljmp
dec
outsb
test
push
xlat
notl
add
outsb
mov
enter
les
inc
adc
incl
jnp
pop
fucom
push
sub
inc
xchg
in
push
lcall
xchg
pop
ss
andb
cld
push
or
dec
jmp
in
adc
cli
loope
outsb
jns
push
xchg
mov
dec
mov
add
sbb
jb
xor
sbb
rorl
insb
jg
xor
cwtl
sbb
mov
mov
stos
out
adc
shll
cmp
jo
mov
and
scas
sbb
es
ds
jmp
or
sbb
repnz
xor
loope
mov
dec
cmpsl
leave
icebp
jnp
xchg
insl
mov
sbb
scas
or
fwait
adc
xor
add
outsb
xchg
pop
std
adc
fdivl
xchg
xchg
dec
or
lcall
xchg
insl
sbb
cwtl
add
sbb
fldl
jge
or
pop
pop
or
ss
mov
sbb
sbb
std
jae
lret
adcb
icebp
or
cld
loopne
sub
pop
cld
xor
or
and
in
or
scas
push
mov
scas
mov
pusha
add
add
repz
mov
jb
ficomps
cmc
aam
mov
popa
fsub
lods
mov
repnz
xor
imul
mov
push
or
and
addb
xchg
dec
and
sbb
and
dec
out
cmpb
js
loopne
mov
ror
cli
xor
mov
ja
movsb
add
and
xor
pop
or
test
push
push
pop
movsl
mov
das
mov
fs
clc
sub
jnp
insl
je
in
std
ds
je
in
pop
xchg
adc
jmp
push
adc
jno
cwtl
ja
addr16
syscall
out
std
jmp
lcall
lret
aaa
out
jmp
inc
je
dec
popf
mov
pop
sbb
adc
cli
mov
cmp
ds
lods
jge
adc
loop
shll
imul
daa
stc
cmpsb
push
lock
xor
xor
out
arpl
and
shrb
stos
push
nop
sbb
adc
mov
testl
fs
push
or
cmp
insb
add
pop
or
sbb
out
cwtl
or
ret
dec
int
dec
into
scas
mov
pusha
loop
jae
jp
or
and
imul
ret
test
dec
dec
push
adc
or
adc
std
dec
leave
sahf
dec
movsb
and
call
and
inc
repnz
outsl
stos
adc
dec
jo
push
aad
shr
icebp
fisttpl
test
je
sbb
pop
or
cmc
dec
adc
xchg
push
lret
sbb
add
ja
fucomi
pop
ljmp
inc
jge
mov
dec
cmpsl
jbe
push
ret
dec
jp
pop
mov
inc
aad
icebp
and
inc
xor
lret
xchg
daa
mov
push
shlb
adc
lods
mov
outsl
lds
scas
mov
pop
and
mov
push
lods
dec
adc
sub
dec
sbb
mov
mov
or
mov
lds
or
xchg
mov
fistl
testl
push
inc
mov
pop
fsubrl
mov
adc
lcall
rorb
je
pop
mov
fnclex
repz
sbb
gs
sbb
sbb
test
lods
in
ja
clc
push
add
hlt
repz
dec
in
push
daa
xlat
rcrl
inc
xorb
adc
cmc
mov
and
fidivl
ret
stos
loop
mov
addr16
inc
ret
aas
mov
scas
test
pop
push
mov
imul
testb
fldt
mov
and
popa
and
lcall
inc
and
jae
scas
fwait
adc
pop
sbb
ljmp
lds
push
ss
mov
push
cli
dec
jg
pop
dec
out
stos
in
in
ljmp
sub
mov
shlb
mov
ds
push
or
ret
sbb
aas
mov
push
fisttpll
adc
inc
or
popa
mov
subl
pop
dec
call
rcrb
mov
in
lret
cli
repnz
mov
cmp
stc
aam
push
inc
jbe
add
rol
insb
test
mov
mov
mov
adc
xchg
mov
lcall
push
ss
xchg
es
addl
push
sbb
inc
and
pop
test
dec
push
xchg
xor
aad
mov
jmp
movsb
loop
sti
cmp
mov
mov
mov
sub
mov
cs
enter
push
lods
push
outsl
inc
ds
pop
outsb
add
adc
adc
fnsave
lahf
cmpsl
xor
repz
push
je
jecxz
xchg
scas
jmp
push
pop
ret
push
xor
lock
jb
cmp
pop
sbb
xor
hlt
mov
or
add
fldl
sti
int3
ljmp
inc
stos
shll
arpl
cltd
loopne
lock
adc
ja
sbb
test
fsubl
pop
repz
cltd
pop
pop
sbb
inc
lcall
fcomp
fsubl
push
push
nop
in
fs
fimuls
xchg
cli
inc
xchg
jnp
xor
pop
cmp
add
mov
fcoms
scas
call
lods
xor
pop
cmpsb
mov
enter
jle
imul
mov
lods
sbb
mov
ljmp
adc
into
scas
insb
mov
stos
adc
negb
cli
xlat
push
xchg
pop
imul
popa
xchg
push
push
test
sub
dec
stc
lea
orl
sbb
stos
mov
js
int3
push
ljmp
xchg
xchg
mov
mov
mov
sbb
jno
stos
xor
adc
fwait
mov
adc
push
cmp
test
test
add
loopne
add
fcomps
push
pop
outsb
and
out
lret
mov
add
mov
add
inc
jne
pusha
mov
inc
shr
lret
mov
sti
adc
out
stc
pop
jge
inc
pusha
repnz
pop
pop
jae
sbb
inc
notl
push
sub
add
xor
je
gs
sbb
mov
popa
xchg
mov
hlt
inc
xchg
mov
and
mov
mov
sbb
cmc
xor
mov
dec
sub
shrl
int3
and
popa
mov
add
cmpsb
icebp
stos
cmpl
sbb
jno
sbb
pop
inc
fdivrs
sbb
and
inc
mov
mov
fs
mov
mov
addl
movl
xor
aam
popa
jl
mov
adc
pop
inc
mov
mov
lahf
xorl
xchg
push
sbb
int3
repnz
ret
pusha
stos
inc
cmp
insb
lahf
std
sub
dec
cmpl
idivb
push
or
jns
adc
mov
pop
mov
lods
loop
shll
lret
lea
loop
decl
and
mov
and
lds
or
mov
adc
outsl
addr16
movsb
sbb
movsb
js
adc
dec
or
or
mov
adc
jb
leave
ss
pop
test
out
das
xorb
sub
mov
push
repnz
gs
or
or
dec
mov
cwtl
stos
scas
aaa
iret
adc
mov
in
loope
push
or
pop
movsb
loope
or
mov
jg
inc
adc
shrl
outsl
push
add
mov
out
mov
dec
mov
xchg
xchg
and
shlb
arpl
add
ret
sub
gs
inc
cs
shll
xor
repnz
cmp
xchg
lds
mov
xor
mov
testl
sub
out
sub
cmc
arpl
adcb
jle
sbb
jp
sbb
fs
jle
fwait
push
or
insl
jb
pop
in
cmp
fadds
push
fildll
bound
fwait
cmpsb
sti
insb
sbb
repz
or
ret
call
fsubrs
adc
sub
mov
push
mov
adc
push
add
inc
rolb
or
push
je
push
arpl
sub
sbb
push
popf
iret
inc
jb
mov
imul
enter
jae
dec
loopne
xchg
cmp
lretw
mov
addb
imul
push
xchg
pop
xor
test
mov
outsb
pushf
in
test
mov
jo
push
nop
push
aas
fidivrl
add
cmp
pop
sti
call
push
outsl
data16
jmp
xchg
sbb
sbb
xchg
push
addb
xchg
mov
push
inc
xchg
pop
jo
jae
adc
sbb
or
int
xor
std
pop
test
mov
pop
hlt
xchg
ficomps
add
push
sub
cmpsl
popf
call
loop
mov
pusha
jne
dec
lock
push
aad
pop
pushf
jp
mov
mov
fldenv
sbb
adc
fcompl
push
pop
lahf
out
xchg
int3
and
sbb
dec
xor
arpl
xor
loopne
lahf
ja
mov
shrl
sbb
sub
inc
mov
lret
or
insl
cwtl
ja
andl
fwait
xor
ret
inc
jp
scas
shl
sahf
mov
push
lea
jae
stc
dec
pusha
repnz
pop
cld
shll
jp
cmpsl
sbb
movsl
fsubs
or
mov
and
xor
inc
mov
sub
sarb
cld
int
cmp
jp
push
movsl
xor
or
rcll
outsb
popa
push
adc
ljmp
push
push
inc
mov
frstor
or
or
pop
stos
mov
in
inc
insb
sub
cmp
inc
push
mov
stos
mulb
xor
out
pop
out
scas
dec
fmuls
test
call
mov
in
or
leave
jbe
and
dec
inc
out
xchg
jg
arpl
pop
mov
fldl
xor
xchg
inc
jnp
sar
xchg
jecxz
gs
ljmp
and
cmpsb
mov
add
test
lret
xchg
cwtl
jae
lods
iret
insb
popf
pushf
jge
push
add
or
mov
mov
mov
hlt
sahf
gs
add
gs
hlt
aad
sub
mov
cmpsl
sbb
lret
mov
mov
push
clc
insl
test
js
mov
sbb
mov
sub
and
adc
addr16
nop
enter
pushf
outsb
push
mov
lret
push
leave
scas
je
insl
ret
mov
sti
loop
push
rcl
mov
pop
add
mov
lds
je
sahf
adc
outsb
rclb
mov
mov
ret
stos
inc
imul
inc
sub
mov
daa
call
push
push
jle
sbb
rol
mov
adc
decb
sbb
aaa
jecxz
jnp
mov
pop
addl
xor
addl
sub
sbbl
outsb
ja
sbb
adc
ja
dec
fld1
pop
lods
mov
xor
aas
mov
rcr
test
ja
aaa
fisubs
clc
xchg
sub
sbb
bnd
and
adc
fsubrs
or
imul
lret
push
jmp
sahf
in
divb
inc
xor
ljmp
call
test
mov
push
mov
lret
xchg
test
in
and
and
enter
in
sub
lret
movsl
cmp
ljmp
call
lods
xlat
xchg
fcmovnbe
popa
mov
shl
mov
adc
enter
xchg
dec
out
add
xchg
pop
sbb
xor
inc
fstpt
out
xor
mov
mov
in
xchg
lret
pop
dec
scas
push
stos
rorl
iret
cmp
loope
pushl
sbb
push
mov
pop
inc
hlt
js,pt
xchg
std
sbb
xchg
or
xchg
xor
int3
stc
cmpsl
lods
jge
loopne
xlat
push
arpl
leave
jg
ja
aas
je
jno
ja
xchg
je
orl
adc
cli
js
outsl
jo
mov
ja
mov
faddp
cmp
loope
push
push
es
pop
push
dec
xor
sub
mov
inc
adc
xchg
sbb
mov
lods
sarb
xchg
fwait
lods
out
rorb
push
mov
jbe
sti
rcrb
pop
push
cwtl
test
std
and
cltd
cmova
add
mulb
das
sti
mov
mov
idivb
jo
mov
int
lods
xlat
sub
sbb
scas
mov
repz
inc
jg
jae
xchg
lret
incb
xchg
dec
sub
mov
mov
imul
pushf
lahf
imul
sub
xchg
inc
pop
add
cmp
jle
les
por
sub
data16
sbb
xor
mov
push
fcomps
cmpsb
jmp
xchg
repnz
cmp
dec
mov
mov
sub
sti
testb
aad
push
inc
insb
ret
jo
test
icebp
fisubrs
dec
mov
sbb
std
push
xor
cwtl
xor
xlat
scas
sub
ror
ret
and
inc
push
jae
mov
cmpsl
cltd
sbb
and
negl
mov
pop
ret
lret
push
pop
icebp
mov
and
test
mov
add
xchg
lcall
js
fsubs
in
mov
xchg
and
mov
push
push
xlat
fmuls
dec
js
add
jl
std
mov
xchg
or
pop
pop
jle
mov
sbb
jno
pop
lods
in
fnstenv
iret
aad
arpl
xor
mov
movsb
inc
int3
pop
movsl
hlt
clc
mov
cwtl
xchg
sti
enter
call
into
mov
test
rcll
jnp
cwtl
loopne
mov
push
arpl
sbb
scas
fwait
pop
and
lret
jae
mov
es
jle
in
sub
stos
xor
jo
jnp
imul
jmp
mov
lahf
push
fcmovbe
stos
sarb
mov
popa
jns
jecxz
filds
sub
sbb
dec
aam
test
sbb
call
sub
add
stos
sbb
imul
mov
movsb
loop
nop
shrl
push
fdivrs
inc
xlat
shrb
push
xchg
icebp
pop
add
subb
push
and
push
pop
push
adc
or
out
pop
push
xchg
mov
loopne
cmp
ffreep
hlt
lds
and
mov
arpl
daa
movsb
cmp
inc
bound
push
out
push
push
jg
jle
jno
sub
jae
mov
cs
mov
js
les
lcall
sbb
push
xor
and
mov
movsb
dec
lods
lock
ja
movsl
and
xchg
popf
push
add
push
loope
mov
cmp
xor
push
lcall
testl
dec
sbb
sbb
dec
inc
int3
repz
pushf
cli
pop
ljmp
push
stos
inc
out
xor
std
pop
aad
aaa
xchg
int3
pop
mov
cmp
sbb
fidivl
push
push
in
sub
cli
shlb
push
arpl
icebp
add
xbegin
xchg
mov
fwait
cmc
pushf
in
mov
arpl
test
inc
pop
mov
dec
xchg
jecxz
mov
les
push
shrb
pop
push
jge
fisttpl
in
inc
flds
fwait
xor
pop
out
les
jmp
scas
pop
scas
dec
inc
inc
js
xor
dec
out
jl
rdpmc
mov
int3
cs
pop
adc
cwtl
aaa
bound
rcl
sub
push
jge
lcall
es
adcb
mov
imul
adc
mov
dec
lahf
adc
sahf
adc
test
and
insl
jecxz
sbb
repz
add
xorb
adc
push
cs
arpl
shll
shr
mov
sub
pop
jg
mov
dec
lcall
lea
scas
nop
push
mov
adc
xor
inc
arpl
mov
sub
pop
subl
leave
leave
in
xchg
jo
cwtl
out
call
lock
mov
dec
insb
ret
mov
rol
jg
pop
movsl
inc
imul
jns
sub
mov
inc
add
sbb
sahf
jge
mov
dec
cmp
sbbb
mov
fwait
push
imul
mov
pop
sub
out
mov
xchg
repnz
addr16
std
xor
push
aam
or
std
es
test
dec
inc
mov
in
pushf
adc
or
cmp
out
jne
jge
inc
add
sbb
xchg
push
aam
dec
icebp
das
outsl
sbb
sub
mov
into
add
arpl
pop
sbb
cmp
dec
and
xchg
rclb
pop
sbb
cli
add
mov
mov
into
inc
cmpl
hlt
dec
pushf
aas
insl
gs
movups
jle
jae
lea
fiaddl
into
and
xchg
fldl
aas
add
rcrl
gs
or
aas
std
pop
push
push
lds
push
dec
and
movsl
pop
xchg
imul
or
mov
ret
scas
outsb
lahf
popf
pushf
pusha
sbb
repnz
test
pushf
mov
mov
mov
push
sbb
cmp
inc
pop
inc
test
mov
jb
jno
lea
lods
jp
jne
jmp
int
rcl
mov
loopne
push
pushl
xchg
jg
imul
in
cmp
movsb
cwtl
adcl
jge
or
xlat
rcrb
cmpsb
rcll
push
jl
fisubl
sub
mov
shrb
xor
clc
out
popa
jb
iret
out
jo
inc
inc
lea
and
sub
icebp
xchg
mov
fcoms
jp
les
cld
lret
cmp
and
in
arpl
dec
pop
mov
bound
jge
popa
push
cmp
andb
jnp
push
mov
xchg
lcall
shl
test
lods
ja
adc
aad
lea
xchg
sub
push
push
mov
lret
dec
dec
mov
and
push
fcompl
daa
inc
inc
mov
sub
mov
subl
mov
add
out
mov
hlt
jge
pop
xchg
dec
dec
pop
mov
out
sub
scas
fimuls
in
mov
or
sti
and
sahf
mov
pop
sbb
and
or
gs
xor
mov
and
push
pop
and
xchg
test
loope
lods
push
mov
add
inc
sbb
dec
call
aas
or
popa
clc
mov
gs
dec
add
push
inc
or
orl
or
je
scas
add
aaa
out
fists
xor
test
and
dec
ja
das
mov
xchg
add
mov
push
inc
push
push
int3
dec
cltd
jno
inc
fldenv
je
mov
lret
push
xor
jl
push
stos
into
xor
out
mov
fisttpl
je
sub
je
push
clc
sub
rorb
push
aad
daa
sarb
pushf
stos
and
clc
jmp
orb
or
dec
jmp
mov
stos
xchg
aad
cmp
jp
pop
leave
cmpsb
xchg
xor
inc
or
and
pop
mov
xchg
push
cld
scas
xchg
jne
cltd
es
cs
inc
pushf
adc
pushf
lret
sub
iret
sbb
les
xor
adc
add
dec
es
popa
icebp
add
fcoms
jne
fstps
hlt
adc
repnz
ja
push
enter
and
adc
push
lret
xchg
cmp
xlat
mov
mov
jl
push
ss
pop
sub
mov
inc
adc
rcrb
movl
dec
mov
push
dec
mov
icebp
cmpsb
add
test
add
adc
lods
mov
mov
cmpsl
int3
xchg
inc
or
lods
in
das
stos
into
dec
insb
es
es
mov
ret
fiaddl
in
jp
sub
push
sbb
lods
mov
rcl
jl
stos
xchg
dec
es
cmp
dec
ja
push
fadds
adc
loopne
sub
aas
xor
loopne
jecxz
iret
mov
rol
fdivrs
cmp
adc
adc
int
int3
fists
mov
mov
outsb
lock
sub
lret
jge
pop
rcrb
add
in
or
ds
int
iret
fildll
mov
cltd
jnp
add
jb
lahf
mov
gs
pop
xchg
mov
jmp
push
inc
cmp
insb
inc
pop
in
inc
imul
sub
pop
jae
lds
sub
sti
dec
xor
lods
loop
mov
popa
aad
pop
fnstenv
filds
popa
mov
int3
xchg
xor
inc
mov
xor
pop
rorl
orl
push
sub
dec
les
pop
xchg
les
inc
jg
dec
dec
lret
loope
xchg
dec
popf
mov
xor
jbe
inc
imul
outsb
arpl
popa
jae
jae
adc
adc
or
cmc
jmp
mov
in
insl
xor
inc
rorb
mov
popf
mov
xor
loope
xor
test
popa
cmp
xor
add
jg,pn
stos
jns
repnz
jmp
lcall
cmp
stc
and
jg
or
dec
mov
outsl
jg
jg
sub
mov
inc
jge
insb
movsb
pop
outsb
and
fcomp
xchg
cs
addb
inc
lahf
add
push
call
jo
adc
movsl
cld
add
mov
jl
mov
nop
loopne
xchg
cld
xchg
xchg
repz
and
cltd
mov
stos
andb
mov
xchg
mov
mov
mov
adc
gs
cmp
rcrl
das
mov
movsl
out
and
cltd
std
jmp
dec
mov
lea
lahf
and
mov
ja
inc
inc
inc
fs
or
das
pop
jp
add
cld
xor
pop
dec
ret
mov
mov
sahf
xor
mov
pushf
adc
push
sbb
inc
sub
push
adc
out
push
cli
shlb
and
lea
push
adc
loope
push
sub
cli
call
daa
loopne
mov
fimuls
cld
push
clc
testb
cmp
jmp
jns
cli
or
dec
ljmp
incb
sbb
and
mov
pusha
insb
xchg
push
call
sub
das
and
dec
pop
fdivrp
lock
imul
repz
out
pop
sub
enter
fwait
sbb
rcr
xor
xchg
flds
xor
mov
xor
je
sub
cmp
mov
cmp
xchg
loop
xor
imul
adc
jbe
loopne
cmp
roll
stc
jecxz,pn
outsl
sub
xor
or
pop
mov
orl
out
mov
sbb
pop
mov
pushf
mov
loopne
and
int
pop
insl
sbbb
xor
test
loop
dec
repz
inc
inc
mov
sub
jne
cld
jb
dec
aam
jne
dec
cs
movsl
mov
movsl
or
pop
jno
jecxz
sbb
mov
insl
stc
cmp
fdivrl
enter
scas
cmp
xlat
xchg
mov
test
pop
xor
mov
adcl
insl
in
jnp
push
sti
daa
cmp
nop
je
mov
test
mov
pop
subl
addr16
dec
aas
mov
cltd
push
das
inc
les
dec
sub
cmp
sahf
divb
cs
das
add
and
dec
push
push
stos
stc
mov
or
dec
or
stos
ja
sbb
jae
clc
cld
pop
pushl
xchg
ja
mov
test
std
out
push
inc
and
stc
loopne
jg
das
pop
push
and
jmp
hlt
adc
mov
and
adc
dec
lcall
push
cmc
jle
mov
inc
push
dec
divl
mov
das
dec
pop
leave
fiaddl
add
sbb
pop
mov
in
call
push
imul
test
lock
rcl
pop
sbb
das
ret
jnp
lret
xchg
ret
jae
fidivrl
in
sbb
sub
or
and
stos
pusha
aad
mov
xlat
and
mov
in
test
mov
ss
pop
sub
xchg
cs
fcoml
testb
sahf
sbb
inc
xlat
dec
pop
push
mov
mov
sahf
lea
jo
ret
arpl
pop
cwtl
pusha
insl
ficomps
or
mov
or
push
sub
lahf
push
adc
cs
rcll
pop
incb
pusha
pop
sarl
add
mov
and
jg
and
ljmp
sti
out
divb
mov
sbb
es
cmp
add
loop
inc
lods
mov
pop
sahf
fsubrl
push
sbb
cltd
push
add
add
int
mov
push
movsb
out
push
scas
fnstenv
and
in
dec
sbbl
outsl
lret
insb
test
mov
sbb
cmp
movsb
stc
int3
dec
repnz
add
nop
xchg
xchg
pop
adc
add
cltd
jg
add
push
jmp
sbb
xchg
adc
in
fistpll
jge
in
sahf
add
xchg
mov
loope
int3
movsb
orl
mov
inc
notb
imull
xchg
neg
test
cmp
mov
xchg
jge
mov
jmp
dec
stos
push
pop
enter
and
leave
mov
add
repnz
fs
dec
inc
xor
je
test
push
test
push
mov
xor
aam
jo
stos
inc
add
jp
je
test
dec
fdivs
pop
inc
pop
dec
aam
mov
lods
or
ret
xchg
idivl
xchg
xchg
xchg
pop
xchg
sbb
jecxz
jbe
mov
sbbl
pop
add
shlb
addr16
mov
loopne
xor
aam
in
das
nop
mov
mov
mov
inc
lock
push
mov
fsubl
xchg
inc
and
jmp
jb
jns
push
ret
jmp
lcall
inc
sbb
enter
or
mov
fldcw
inc
mov
mov
outsl
dec
aad
negl
div
mov
xchg
lea
aaa
pop
dec
xchg
cmp
pop
testl
push
notb
cmpsl
cmp
inc
in
mov
das
fimull
int3
push
mov
xchg
rcrl
xchg
dec
jae
mov
xor
js
mov
ficomps
repz
xchg
jl
mov
push
scas
ja
pop
imul
lahf
mov
ret
popa
cmc
sub
lock
push
lret
mov
test
mov
add
stos
mov
fnstsw
jecxz
push
jns
cwtl
fs
sub
dec
mov
addb
nop
bound
sub
cmpsb
jo
push
test
pop
mov
jecxz
sbb
mov
fldl
mov
or
or
pop
pop
or
mov
jg
jmp
pop
pop
mov
mov
xor
xor
mov
lret
adc
pushl
push
fcoml
and
inc
xor
push
mov
mov
cs
sub
adc
pop
pop
cmc
or
mov
lcall
ror
out
sub
cltd
and
inc
sbb
cmp
fistl
mov
mov
inc
inc
iret
jge
push
daa
add
or
xchg
inc
fwait
je
iret
cmp
loope
sub
xchg
pop
outsl
iret
testb
sub
in
sahf
scas
movsl
sbb
adc
push
loope
inc
push
in
pop
das
ja
icebp
mov
mov
pop
sbb
push
mov
xchg
idivb
inc
rolb
repz
pop
enter
inc
loop
add
sahf
jp
dec
xor
addb
pushf
inc
lea
int
push
test
shl
ss
pop
test
mov
popf
sbb
xchg
dec
aam
ljmp
sub
or
inc
das
and
add
gs
mov
pop
inc
in
push
push
scas
or
cmpsb
dec
jo
lret
inc
push
int3
mov
sub
repz
fcoms
mov
movsb
mov
and
dec
dec
negb
int
mov
sub
push
addr16
stos
cmpsl
jb
outsb
outsl
pop
pop
lahf
into
ja
mov
into
icebp
ds
rcrb
cmc
stos
cmp
in
mov
mov
and
test
jb
fcmovne
outsl
push
adc
inc
adc
fbstp
add
mov
fwait
jbe
push
xor
dec
jne
stos
sub
aam
mov
adc
es
xor
jo
bnd
adc
sbb
sahf
xchg
les
inc
xchg
and
fimuls
dec
inc
xor
out
jae
mov
mov
or
repnz
out
popa
scas
lea
sbb
sbb
mov
in
out
lahf
pop
cmpsb
js
inc
pop
je
popf
cmp
rcl
insl
fnstsw
fidivrl
movsl
jne
lahf
int
xlat
div
fs
jne
and
std
xchg
mov
xchg
daa
push
ret
add
testb
insb
mov
and
outsb
xchg
jo
cmp
mov
mov
jg
and
jge
stos
mov
pop
dec
std
xlat
outsl
test
jge
test
insb
pushf
sub
xchg
or
xchg
add
loopne
fs
cld
sub
cmp
es
ljmp
xor
lahf
adc
int
and
or
xlat
mov
imul
fldcw
loop
shr
cli
push
aaa
xor
mov
mov
dec
leave
sub
out
ret
sbb
scas
mov
adc
clc
mov
sbb
pop
ja
xor
dec
sbb
hlt
je
pop
sub
dec
aaa
mov
inc
and
mov
jle
loop
push
jle
mov
jns
mov
lahf
xor
or
xchg
cwtl
jp
mov
insl
and
and
or
ljmp
das
fisttpl
ss
inc
dec
icebp
test
inc
xchg
outsl
call
inc
inc
fs
lahf
cs
cld
inc
lea
cwtl
jne
lahf
and
mov
cmp
sbb
mov
or
stc
jmp
popa
loope
push
daa
adc
jnp
xor
or
dec
lahf
arpl
roll
and
sub
scas
out
mov
jmp
mov
mov
leave
xlat
or
into
or
jge
or
mov
loopne
cmp
mov
push
ret
ret
out
cmpsb
lcall
cmp
in
sub
pop
out
stos
mov
add
out
xlat
sub
jb
xlat
dec
xchg
fidivrs
xor
cs
mov
jle
mov
imul
lret
sub
ret
out
call
ret
mov
push
jge
push
pop
xor
repnz
loop
fstps
mov
xor
add
sahf
jp
rorb
push
cmp
xchg
cld
pop
xchg
sbb
in
stos
mov
out
inc
fwait
jge
mov
ficompl
push
push
cmpsl
shl
fwait
push
movsb
sbb
icebp
outsb
jl
repnz
cmp
push
cwtl
push
out
std
gs
jns
fistpll
fwait
and
outsl
or
xchg
or
aaa
pop
adc
stos
inc
add
insl
movl
in
mov
adc
aas
bound
andb
mov
sbb
sbb
dec
jg
movsb
push
rolb
mov
adc
sbb
mov
sbb
jb
push
sub
sbb
imul
mov
aaa
aam
or
cmp
lods
jl
in
es
stos
loop
movsb
cmp
ljmp
int3
cwtl
mov
xchg
addb
in
movsl
aam
jbe
and
xchg
mov
dec
sbb
sub
mov
dec
mov
bound
mov
and
std
jecxz
inc
ds
pop
sbb
sti
inc
in
mov
stc
out
xchg
mov
or
sub
ret
cmpsl
jno
sbb
mov
pop
aaa
jo
enter
xor
nop
cmp
cmp
adc
or
and
push
push
outsl
nop
inc
cmpl
test
shlb
adc
jbe
nop
cltd
xor
unpcklps
push
roll
movsl
adc
arpl
mov
arpl
or
adc
popa
sbb
shlb
and
fldlg2
fnstsw
test
xor
jle
jmp
lods
mov
andb
jns
ret
stos
fbld
lahf
aas
imul
in
mov
mov
add
push
call
subb
xor
insb
lret
aad
outsb
or
cmp
or
push
pop
ja
sub
inc
rclb
sbb
cld
xchg
push
test
jmp
dec
std
mov
and
jecxz
test
fcmove
add
jne
pop
mov
dec
jbe
push
idiv
test
add
inc
ret
cmp
popa
sub
mov
pop
inc
sbbl
faddl
inc
and
adc
ret
adc
push
in
call
aam
and
or
dec
fwait
mov
out
add
or
push
cmp
dec
popf
pop
out
aas
dec
mov
test
cwtl
sub
mov
ja
or
mov
and
sub
pusha
cmovo
pop
negl
sub
hlt
inc
fisubs
xchg
cltd
stc
mov
lret
mov
cwtl
jno
dec
jmp
sub
sbb
dec
jb
gs
adc
arpl
cmpsl
xchg
cmp
ljmp
add
incb
aam
mov
test
xchg
mov
jns
add
xor
xor
lods
fdiv
ret
mov
and
add
into
in
add
cmp
test
sub
idivl
cmpsb
repnz
fadds
or
push
scas
scas
or
loop
xor
mov
mov
adc
loop
test
pop
sbb
clc
stc
lds
clc
clc
cli
fidivs
scas
pop
dec
sbb
xchg
outsb
pop
adc
xor
cwtl
or
into
pop
testb
xchg
in
inc
daa
mov
dec
icebp
dec
bound
aas
aam
sbb
or
dec
in
popf
les
mov
xchg
adc
sbb
pop
sub
dec
scas
and
cli
add
adc
mov
lret
dec
xchg
xlat
push
cmp
add
insl
mov
push
fldt
xorl
ja
adc
xchg
mov
add
push
and
aad
into
ds
lcall
xor
jle
ss
in
adc
negl
cmp
shrl
lea
jns
mov
or
mov
pop
mov
lahf
sub
das
ret
or
enter
pushl
ficompl
mov
cld
jg
cmp
fidivs
dec
movaps
push
pop
ja
lret
ja
lahf
outsl
pop
pop
in
and
pop
dec
dec
push
inc
int
sahf
or
sti
ljmp
js
fisubrs
popa
ret
stos
mov
adc
jl
fistl
scas
pop
fsub
xlat
xor
aas
arpl
nop
iret
out
fcmovnu
sub
add
loopne
push
lahf
cmp
das
fisttpll
dec
or
ja
jle
mov
aas
pop
imul
test
fwait
adc
clc
gs
mov
mov
je
mov
notl
int3
outsb
rol
mov
jmp
add
jb
push
and
or
dec
lcall
ja
repnz
ljmp
stc
pop
xor
fsubrs
mov
push
and
insb
cmp
fisubs
mov
cwtl
leave
lea
mov
or
adc
inc
ds
icebp
adc
inc
add
push
clc
cmpsb
xchg
jmp
lock
lds
push
sub
xor
jne
imul
mov
mov
and
call
inc
cwtl
in
and
in
ds
push
jns
pop
cmp
lret
cmp
mov
ja
pop
dec
imul
test
or
cmp
ficomps
mov
lods
inc
mov
fsubp
lret
jbe
dec
add
sub
lods
mov
sahf
sbb
push
sbb
mov
jae
xchg
mov
dec
js
mov
dec
loopne
andl
ret
inc
xchg
xor
adc
fildll
outsb
pop
add
cld
cmp
pop
mov
xor
or
mul
pop
mov
lds
jp
sbb
jg
int
xchg
dec
push
dec
fildll
add
js
jge
jb
shll
out
jne
mov
outsb
ljmp
push
cmp
xchg
cmpb
push
or
inc
push
aam
hlt
and
xor
pop
cld
loopne
jle
stos
push
and
jp
dec
cmpb
push
addl
insb
cmp
iret
fidivs
sbb
std
pop
ss
jle
addr16
fimuls
pop
outsb
ja
jo
and
movsl
xlat
lret
popa
push
jle
lret
popa
xlat
sbb
andb
jle
fs
ja
xor
mov
cmp
js
fmuls
sbbb
push
fldt
add
jecxz
xor
pop
xchg
inc
add
push
pop
je
iret
data16
flds
add
mov
in
inc
lret
mov
and
lea
add
in
and
aaa
mov
dec
pop
lock
mov
mov
push
xor
mov
ret
inc
jns
fisubrl
or
stos
pop
add
movsl
dec
or
nop
cli
insb
mov
cmpsl
jle
loope,pt
add
sahf
lea
push
fnsave
scas
fdivs
inc
hlt
clc
pop
cmp
pop
insl
sti
cmpsb
xorb
sbb
dec
sbb
sub
lcall
das
and
je
mov
into
push
aad
adcl
adc
ja
ss
jge
repnz
sbb
mov
xor
pop
in
mov
push
and
pushf
xchg
xlat
jae
cmp
cmp
lret
inc
xor
push
jg
mov
rorl
or
jnp
icebp
dec
loopne
orl
jecxz
sbb
and
fistps
mov
inc
fsub
cmp
adc
repz
in
cmp
out
push
jne
push
mov
insb
outsb
adc
xchg
icebp
mov
in
insl
enter
lcall
sbb
negl
pop
sub
loope
stos
xchg
dec
cwtl
lea
xchg
jb
add
push
cli
shr
arpl
dec
pop
int
bound
cltd
outsl
sbb
test
adc
js
mov
in
dec
push
lds
fistl
adcl
cmpsb
shrl
insl
push
arpl
adc
shl
enter
ret
daa
fucom
lret
out
outsl
cmp
sub
pushf
jl
jmp
int3
jb
lret
notb
imul
jmp
repnz
clc
ss
out
bound
in
orb
and
ret
imul
or
addr16
scas
adc
inc
sub
inc
cmpsb
xor
fnsave
mulb
stos
enter
xchg
inc
mov
mov
ljmp
leave
mov
and
les
fistpl
lock
pushf
xor
pop
cmp
sub
inc
and
mov
mov
sbb
movsw
shll
xchg
call
imul
sbb
push
mov
dec
enter
es
fmuls
xor
push
xor
movsl
xor
mov
or
fisubrs
sbb
mov
scas
cmp
or
int
push
pop
cld
gs
cld
cmp
push
cmpl
test
out
shll
in
add
mov
jmp
and
jne
gs
ss
cmp
xchg
shll
mov
lcall
or
jmp
test
aam
test
in
js
cmp
mov
dec
lret
imul
inc
push
sub
jp
pop
adc
sub
stos
es
dec
popf
inc
mov
dec
bnd
jle
rcrb
inc
out
mov
cwtl
jecxz
negl
jo
clc
fistpl
repz
jne
cmp
mov
lahf
sbb
ss
test
mov
add
xor
add
ror
xchg
sub
jnp
and
jmp
sub
inc
js
cmp
movsb
cmp
in
idivl
fstpl
inc
movsl
loop
sub
rorl
into
dec
int3
push
out
pushf
push
imul
mov
loopne
jge
sbb
int3
push
stos
and
sahf
lret
lret
pop
jb
jb
or
sahf
adc
inc
sbbb
add
cmc
leave
cmp
and
ret
mov
fidivrs
iret
in
mov
les
dec
push
loop
imul
push
dec
sbb
bound
sbb
jno
xor
fisubs
imul
in
icebp
add
push
js
bound
aam
fidivs
roll
jmp
and
ror
in
insl
mov
cltd
hlt
xchg
or
push
pusha
push
cs
hlt
mov
std
loope
pop
xorb
adc
int
repz
loope
out
outsb
and
gs
xchg
sub
movsb
jnp
add
xor
add
sub
popf
xor
cmp
aam
iret
and
cmp
sub
pop
gs
push
lods
mov
sub
or
pop
mov
aad
addr16
or
test
jnp
sub
icebp
rcll
pop
das
fyl2x
push
filds
mov
cmpb
cmp
std
add
enter
out
cmpsl
je
fld
push
iret
mov
add
enter
mov
xor
js
pop
inc
xor
or
aas
popaw
fiaddl
pop
adc
mov
scas
xorl
adc
aaa
push
dec
mov
jg
scas
test
lock
dec
xchg
popf
arpl
push
mull
adc
jb
scas
loopne
aaa
push
dec
test
or
xchg
jg
xchg
es
push
xchg
jecxz
out
ror
shrl
mov
imul
stos
cmp
loope
test
push
mov
ret
fucomip
adc
adc
sub
dec
or
aaa
shrb
cmpsb
lahf
xchg
pop
in
insl
jl
sahf
pop
dec
daa
rol
push
sbb
incl
arpl
sbb
jno
fstpt
daa
cltd
or
xchg
jge
test
add
push
shlb
js
and
xchg
or
jle
xor
add
mov
mov
xor
cmpsl
mov
mov
fstp
mov
outsb
test
xor
dec
push
pop
cmp
sub
repz
ja
add
inc
int3
call
cmp
and
dec
ja
sub
pop
or
mov
xor
mov
mov
stc
minps
test
cmp
inc
inc
fcompl
mov
nop
mov
dec
mov
sbb
lods
arpl
lds
add
mov
pop
inc
jae
mov
jbe
out
sub
or
push
and
imul
dec
in
lret
scas
xchg
xchg
leave
jmp
xchg
das
and
inc
lcall
sub
jo
adc
repnz
add
ja
push
shll
in
xchg
int
bound
addr16
test
popa
sub
push
lods
out
jmp
enter
loop
ret
sub
inc
pusha
ret
neg
outsl
or
xorl
push
xlat
and
ret
sbb
or
pushf
in
fcmovu
pop
adc
sbb
and
push
mov
cmpsl
xchg
aad
dec
xchg
sbb
dec
inc
inc
sbb
rcrb
sbb
jbe
pop
adc
lret
lock
dec
mov
cmp
inc
dec
mov
leave
cmpb
mov
adc
cmp
lea
out
sub
loop
sbb
fcoml
mov
fdivl
cmp
movsb
int3
scas
mov
outsl
repnz
icebp
xchg
call
in
pushf
xchg
jns
leave
sarl
sub
adc
fwait
lcall
loop
and
xor
jl
jmp
jmp
jb
sub
out
int
aas
div
jecxz
jo
insb
push
xchg
pop
pop
das
and
dec
fwait
lea
mov
pop
inc
mov
mov
fwait
or
push
jns
insl
push
in
sub
jmp
jmp
scas
sbb
mov
adc
aad
cld
and
idivb
push
dec
dec
outsl
add
sub
inc
jp
shrb
js,pt
adc
cmp
xor
imul
scas
lahf
push
mov
xchg
ret
dec
sub
imul
pop
clc
push
jle
data16
inc
jnp
add
test
fldenv
scas
pop
mov
xchg
xlat
inc
jbe
or
movsb
mov
and
int3
nop
lcall
lahf
loope
mov
jg
addl
mov
or
test
fisttps
test
fsubp
mov
cmp
push
push
pop
divb
into
push
inc
sub
pop
popf
xchg
inc
loop
pop
and
pop
cli
dec
cmp
test
xchg
xchg
inc
jp
mov
fldl
outsb
mov
sub
mov
jne
into
sub
fbstp
negl
jmp
mov
fbld
jge
test
push
and
in
hlt
xchg
mov
nop
dec
call
inc
push
rclb
mov
testb
sbb
in
xchg
mov
pop
push
sti
adc
jp
aad
sbb
jne
and
xchg
jnp
mov
mov
outsb
mov
cmpl
jmp
push
loopne
xchg
sti
xchg
sub
inc
pop
in
test
pop
into
mov
jmp
pop
push
fdiv
jmp
adc
cmpsb
arpl
mov
mov
in
into
push
jge
sub
pop
je
cli
xchg
mov
mov
loope
mov
gs
out
sub
imull
ss
into
je
or
mov
mov
sbb
mov
enter
and
inc
cmp
cs
cmp
scas
jnp
call
jmp
push
daa
push
fsubrs
movsl
xchg
test
push
fwait
or
jecxz
inc
nop
insb
clc
imul
jmp
in
and
fs
insb
insl
lods
jge
mov
insl
icebp
arpl
mov
fbstp
xchg
sub
and
test
lcall
sub
pop
sub
ficoml
mov
xchg
lock
jb
sbb
fdivrs
mov
xchg
repz
add
inc
sahf
and
mov
or
into
lods
fcmovne
jp
jle
sbb
arpl
cltd
mov
pop
xchg
add
push
sysenter
mov
mov
adc
jae
scas
fisubs
and
mov
mov
mov
pop
cld
fcompl
xchg
sbb
or
imul
xlat
mov
imull
adc
ja
cmpsl
es
int
push
and
xchg
pop
je
and
dec
cmp
pop
adc
filds
push
xchg
dec
xchg
in
fs
lea
pop
imul
inc
push
inc
pop
sub
cmc
cwtl
sub
mov
fistpll
mov
sbbl
out
gs
dec
mov
ja
or
fwait
movsb
test
stos
cs
das
mov
pop
and
xchg
test
add
subb
inc
mov
test
mov
xchg
fs
mov
or
aaa
pop
ds
add
or
mov
clc
adc
inc
jnp
cmp
into
cmp
push
xor
imul
push
leave
imul
xor
test
inc
xor
lcall
add
repz
mov
mov
mov
push
jbe
cltd
push
dec
cmp
push
jae
fcom
ret
jmp
dec
arpl
mov
test
scas
adc
sbb
bound
jg
lahf
adc
inc
movsb
test
cmp
int
fcmovnb
ret
les
inc
cmp
sub
jo
in
jmp
rclb
int3
xchg
xchg
or
clc
add
loopne
xchg
adc
ds
and
lahf
jle
sbb
loope
sub
mov
shl
mov
pop
jp
icebp
push
sbb
cmpsl
pop
jb
in
mov
dec
and
and
add
and
pusha
jns
nop
sbb
jae
jnp
test
mov
loop
jno
cmpsl
or
clc
mov
pop
add
xor
scas
leave
push
adc
fs
test
mov
lods
adc
ss
xor
lret
imul
lds
push
lahf
cmc
or
repnz
mov
into
dec
adc
mov
das
shll
cmpsl
cmp
sub
fs
push
or
cmpsb
xchg
rcll
pop
or
imul
jno
loop
xor
mov
in
pop
push
xlat
sub
or
lods
sbb
cmp
adc
adc
or
cmp
cmp
mov
inc
scas
dec
mull
pushf
sbb
das
pop
pop
or
mov
pop
mov
dec
mov
repz
jb
add
sti
push
pop
sti
in
or
push
inc
mov
dec
jp
test
cli
or
push
add
xor
lds
imull
inc
jg
lock
addr16
enter
add
std
mov
loop
sbb
pop
outsb
aam
out
fnstenv
cmpsb
lret
xor
xchg
lcall
push
hlt
cmp
add
clc
sub
fnstcw
movb
cmp
jns
add
outsl
lret
jg
sbb
xor
inc
stos
fdivp
adc
lods
out
push
jnp
xchg
into
sbb
out
test
int3
in
add
adc
in
mov
aad
ss
mov
pusha
scas
insb
fisttpll
push
nop
adc
aaa
mov
inc
inc
mov
jmp
fsubs
dec
mov
js
add
out
add
mov
xlat
xchg
push
mov
pushf
mov
jnp
dec
stc
enter
daa
andl
call
loopne
pop
cli
cmp
sbb
sub
mov
test
xchg
cmp
inc
ljmp
aam
mov
xor
mov
push
pop
inc
notb
dec
mov
hlt
push
mov
push
push
test
sub
bound
mov
inc
cld
pop
mov
mov
pop
movsb
mov
inc
call
mov
outsb
test
xchg
lahf
jg
aad
mov
xor
mov
xchg
dec
jns
rcll
scas
lcall
mov
fsubrl
data16
add
pop
insb
insl
add
es
inc
fdiv
ds
and
push
dec
cwtl
icebp
in
dec
mov
lods
adc
fldcw
pop
or
mov
mov
push
cmp
xlat
sbb
in
lea
jp
xor
mov
mov
mov
inc
fcompl
je
sub
enter
icebp
pushf
mov
rorl
out
out
stos
jb
pushf
xchg
push
jmp
mov
cltd
dec
test
inc
aad
mov
fdivrl
rcrb
cmc
nop
movsl
push
sbb
lds
pop
ljmp
pop
push
pop
pop
sbb
fs
scas
shr
dec
testl
fsubrl
sub
jmp
mov
jecxz
in
repnz
jecxz
mov
dec
jge
adc
mov
and
test
push
insl
push
cs
cmc
sahf
lea
sbb
data16
movsl
sub
push
jp
stos
sbb
lret
xor
pop
aam
xchg
mov
loope
clc
dec
or
cs
cmpl
mov
stc
push
and
popf
xchg
leave
dec
ror
inc
xlat
xchg
adc
std
testl
mov
test
mov
mov
jle
and
fcoml
push
icebp
mov
scas
mov
mov
inc
jl
rorl
xchg
aad
mov
jbe
add
adc
mov
in
out
pop
test
roll
lret
ja
push
lcall
imul
int3
test
fbld
scas
push
jbe
insl
shlb
fstl
stos
aas
add
int
fsubrs
xor
out
xchg
jl
clc
xor
jmp
xchg
mov
pop
out
cmp
pop
ljmp
hlt
out
scas
sub
jb
ja
pop
push
add
mov
ja
cmp
leave
jbe
and
leave
cmp
dec
shll
mov
mov
inc
mov
test
iret
dec
inc
cmp
lcall
popl
xor
enter
sbb
sub
cmpsl
movsl
jg
and
xor
xchg
sbb
cld
xchg
push
fimull
pop
sti
cmp
or
imul
sub
sarb
jno
shll
xchg
xchg
jmp
aam
ljmp
jge
mov
gs
cmp
out
stos
flds
mov
pusha
das
push
adc
mov
inc
in
mov
enter
jecxz
adc
push
mov
pop
sahf
pop
and
push
in
dec
push
mov
sub
sub
dec
sbb
lcall
lock
push
lcall
scas
inc
xlat
hlt
mov
inc
jl
lcall
xchg
push
out
insb
out
movsb
repz
insb
adc
jmp
bound
outsl
fmulp
sub
bound
subb
insb
cmpsl
inc
cltd
ja
or
ret
inc
repz
sbb
xor
ror
sub
sub
push
loopne
push
int3
dec
mov
sbb
into
and
xchg
cs
test
out
cmp
out
pop
fmull
ret
jno
lock
std
xchg
test
idivb
sbb
inc
hlt
cmpl
lret
and
push
fs
cld
sbb
mov
mov
add
repnz
fcompl
sub
adc
lods
jno
hlt
cmp
xor
or
sbb
dec
aaa
aas
adc
pushf
ljmp
pop
cmp
push
dec
ja
arpl
outsl
pusha
mov
les
rcrl
cwtl
sub
imul
insl
lcall
fisubrs
xchg
loope
dec
arpl
cmpsl
test
sbb
jb
outsb
hlt
dec
xchg
xchg
mov
pop
sbb
pop
pop
jp
mov
cmpsl
scas
lcall
lret
jmp
and
jae
outsb
ret
call
mov
mov
dec
mov
mov
xor
push
sub
sarb
jmp
nop
and
sbb
pop
mov
inc
test
popl
cltd
test
adc
movsl
aam
iret
or
sbb
fidivrs
mov
das
mov
inc
adc
out
or
sbb
jle
jge
shr
jge
mov
dec
js
je
add
adc
testb
adc
imul
xchg
pop
adc
out
sub
movsb
jbe
mov
les
adc
xor
lds
xor
outsl
sub
mov
sahf
mov
in
sbb
daa
inc
push
xchg
fsubs
mov
fstp
and
push
stos
test
or
in
xchg
pusha
push
loope
fidivl
mov
imul
jns
adc
fwait
dec
cmp
adc
xchg
sub
mov
mov
mov
jg
push
sbbl
sbb
inc
rol
sub
push
mov
mov
scas
inc
mov
mov
dec
jp
xchg
push
xchg
pop
ljmp
jb
aas
or
mov
ret
movb
mov
adc
push
stos
mov
mov
cmpb
adc
je
jmp
dec
in
pop
xchg
add
ds
sbb
loope
cmpsb
xor
dec
insl
ja
andl
add
shlb
sbb
xchg
pop
lahf
push
fwait
xor
xor
add
loop
nop
je
mov
imul
mov
jnp
out
adc
es
fisubrl
pop
movsl
dec
lret
sbb
aaa
dec
sbb
aad
dec
pop
xchg
bound
jle
sbb
scas
stos
adc
jge
and
jle
test
inc
adcb
aad
ficomps
imul
dec
pop
movsb
jno
aam
out
dec
lods
xchg
mov
push
gs
xlat
mov
dec
inc
je
stos
xor
pop
jmp
dec
sbb
push
rorb
mov
gs
xchg
ret
or
push
add
fcompl
jge
ljmp
xor
push
ljmp
xchg
jge
jnp
sar
insl
adc
pop
fidivrs
pop
mov
xchg
add
inc
dec
mov
daa
incb
clc
push
cltd
pop
jle
lahf
jne
dec
nop
adc
imul
pop
je
and
rcrb
test
mov
jge
add
and
push
in
lods
shlb
fs
roll
xchg
ds
stos
and
movb
je
loop
lds
dec
nop
mov
lret
hlt
mov
je
notb
add
add
outsl
jno
lds
rorb
addb
lret
mov
mov
dec
xor
sub
mov
add
mov
mov
fwait
push
lahf
mov
sbb
inc
mov
adc
jb
sbb
pop
add
mov
jae
and
ror
test
jb
mov
sar
in
out
or
cld
or
iret
or
dec
aad
mov
repnz
orl
sub
scas
jnp
jmp
ret
setne
mov
jmp
test
sti
sub
jne
ljmp
shl
dec
roll
mov
pop
lret
dec
mov
pop
ffree
push
lods
filds
in
pop
hlt
cmp
jne
adc
dec
loopne
push
arpl
and
insb
adc
cmp
pop
icebp
test
fcmovnu
fadds
or
imul
jae
cmpsl
push
imul
xor
test
pop
push
mov
stos
aas
jb
mov
sti
sub
mov
mov
aam
lret
imul
mov
jg
iret
or
mov
cmp
xor
lods
addr16
dec
xor
mov
in
dec
enter
mov
xor
mov
fwait
push
out
push
leave
ret
jne
jo
sub
adc
in
jne
lcall
arpl
shlb
imul
loop
push
push
pop
push
out
sbb
fxch
mov
inc
rorl
repz
xor
sub
call
xchg
pop
push
jmp
pop
notl
xchg
ret
xchg
fildl
popa
sbb
aaa
lret
or
scas
cltd
in
notb
or
aad
xchg
shll
xor
orl
jbe
in
lcall
es
cwtl
dec
dec
jne
cltd
adc
pop
nop
pop
pop
xor
dec
js
repnz
nop
outsb
jbe
sbb
ret
push
xchg
push
in
icebp
js
lret
mov
andb
loope
and
insl
and
in
pusha
xchg
jge
aad
mov
xor
lahf
movsb
sarl
mov
adc
adc
iret
sbb
mov
fldcw
js
jo
jo
in
loopne
mov
int
xor
mov
cld
adc
or
lahf
and
cmp
jb
dec
mov
std
aad
test
mov
mov
mov
call
pop
mov
outsl
push
sub
jmp
lods
and
scas
or
dec
fdivrl
inc
imul
lods
pop
add
cmp
mov
mov
mov
inc
fists
mov
xchg
adc
scas
jg
ror
pop
es
aam
les
xchg
inc
push
mov
outsb
shlb
push
add
xor
dec
adc
or
enter
xor
or
out
inc
mov
loope
mov
in
dec
mov
add
fwait
dec
orl
xchg
outsl
push
scas
inc
sti
fbstp
add
adc
mov
aad
ja
xor
mov
adc
jbe
mov
sahf
jb
sub
jb
test
dec
je
push
jbe
gs
movsb
lock
shlb
push
mov
das
push
popf
cltd
jo
jns
lock
ds
sbb
push
xchg
pop
pop
movsb
dec
xchg
sarb
push
mov
aas
data16
pop
mov
dec
mov
gs
ret
sub
cmc
aaa
cmp
cli
cmpb
fs
lock
push
ficoml
shl
mov
sub
mov
pop
into
cmpsl
or
icebp
push
push
inc
xchg
xchg
sbb
pop
mov
loope
mov
std
push
push
gs
dec
xchg
sbbl
test
cmp
loopne
mov
sub
mov
cltd
jns
cmp
adc
sub
ret
repz
inc
hlt
in
push
and
daa
dec
xchg
out
add
cmc
aam
pop
sbb
mov
mov
test
addr16
int3
mov
jg,pn
mov
adc
xor
jmp
shlb
scas
aad
insb
xchg
testl
add
mov
out
xor
xchg
leave
fs
popf
loopne
daa
pop
movsl
xchg
mov
xchg
imul
sbb
dec
xchg
mov
and
xchg
aas
xorl
mov
ret
xor
js
xchg
fs
or
jp
sbb
xchg
call
dec
pop
lahf
add
xor
ret
adc
rorb
xchg
sbb
or
mov
mov
inc
test
addr16
out
lahf
jmp
mov
inc
mov
stos
faddl
icebp
adc
pop
addr16
jnp
sub
mov
hlt
xchg
les
jo
lret
dec
sub
xchg
outsl
xor
dec
add
aad
mov
test
push
push
push
sub
sbbb
push
mov
cltd
fdiv
punpcklbw
cwtl
xlat
mov
pop
jp
das
sbb
mov
mov
inc
pop
mov
jle
leave
xor
mov
mov
pop
loopne
mov
mov
fiadds
mov
mov
sub
shll
js
inc
scas
xchg
pop
fsubrl
test
loop
sahf
sbb
xor
lahf
jge
push
daa
addb
mov
ret
mov
test
sub
sbb
mov
jbe
fmull
popf
mov
ds
inc
dec
add
ds
bound
out
loop
jnp
test
mov
fs
and
pop
jp
in
in
pop
ficoms
lret
sbb
push
fs
in
lods
sbb
inc
mov
enter
outsl
sub
sbb
pop
nop
sbb
xchg
push
les
mov
add
insl
scas
jle
rcrb
mov
cwtl
out
fs
push
pop
imul
inc
aam
gs
jge
lea
inc
icebp
inc
lret
daa
in
in
in
popa
mov
mov
jecxz
push
xchg
aad
push
hlt
popf
dec
data16
push
adc
ret
dec
and
jle
push
sub
pop
dec
cs
repnz
xchg
pop
scas
lds
lds
adc
lods
xlat
pop
cmp
mov
cmc
ss
sub
es
insb
roll
sub
pop
dec
into
mov
fistpll
movsl
mov
xlat
push
and
cmp
loop
inc
sub
sub
pop
adc
lahf
push
add
fwait
mov
push
pop
mov
mov
scas
mov
inc
out
push
mov
sbb
cmp
loopne
xchg
push
mov
fmull
jae
push
and
pop
sbb
sub
pop
test
and
add
jno
sbb
xor
jmp
imul
or
inc
xchg
out
mov
mov
cmpsl
mov
cli
jne
test
xor
ret
or
or
call
sbb
int
clc
repz
in
popa
push
adc
fs
jmp
push
push
dec
or
mov
insl
leave
ds
jo
addb
cli
xchg
sub
xor
daa
or
imul
xchg
xchg
movsb
mov
test
test
pop
lret
jnp
and
dec
mov
jg
pop
cmp
fs
bound
adc
cmp
pop
fwait
lds
cld
pop
mov
icebp
lea
notb
jecxz
fldl
movsl
sti
cltd
and
jbe
mov
divb
xlat
pop
dec
push
rcrl
test
inc
sub
arpl
xor
loope
mulb
mov
lds
out
int
ljmp
xlat
icebp
outsb
adc
push
sbb
cli
outsb
lcall
mov
arpl
nop
mov
cmpsb
xor
lcall
sarb
lret
rcll
js
cmc
fs
lahf
jo
mov
ror
ds
aam
and
daa
fwait
adc
mov
jecxz
inc
xor
lods
lret
cmpsb
push
popa
js
sub
ret
enter
sbb
cmc
mov
outsb
stos
push
jp
sub
fnsave
cmp
int
push
repz
pushf
mov
sti
dec
test
mov
lea
xchg
mov
cltd
shl
xchg
out
push
sub
dec
push
sub
test
xchg
cmp
out
push
clc
cmpsb
sbb
mov
sbb
and
insl
mov
add
mov
inc
incb
movsl
jp
xor
sar
cmp
cmp
data16
inc
pop
outsb
sbb
push
out
push
lods
cmp
and
dec
sub
lret
fnsave
mov
inc
or
or
cmpsb
movsl
add
lahf
loope
sbb
mov
lahf
ficompl
mov
es
in
lcall
ret
mov
sub
in
add
int3
popa
pushf
jle
mov
mov
test
dec
cs
cmp
cli
mov
stc
aas
fnstenv
inc
and
cli
fisttpl
dec
add
adcb
outsb
dec
outsb
adc
roll
icebp
sbb
mov
daa
and
rcr
jne
mov
or
lea
pushf
mov
adc
fs
inc
or
add
scas
lods
enter
cs
push
xor
dec
inc
ds
test
js
cmp
int
fsubrs
push
pop
cmp
xor
adc
ret
scas
outsb
aaa
aas
shr
pop
sahf
sbb
lock
mov
lock
or
lods
ljmp
test
loope
movd
push
cmp
cmpsl
iret
inc
pop
sub
inc
lret
daa
mov
std
insl
mov
hlt
cmp
outsb
fucomip
and
sarb
dec
xchg
mov
inc
stc
mov
add
sahf
dec
adc
mov
lret
les
insb
cmp
push
sarb
dec
ud1
sbb
mov
add
and
lds
or
jmp
fwait
mov
mov
subl
pushf
ret
inc
popa
jmp
dec
pop
or
dec
in
andb
sub
xchg
mov
inc
inc
jo
and
scas
inc
test
out
adc
ss
add
lret
mov
je
outsl
aas
cmc
adc
cmc
mov
xlat
mov
mov
fsts
add
mov
push
outsb
fst
mov
inc
loopne
lret
mov
mov
icebp
popf
mov
cmc
add
sbb
and
push
adcb
inc
popf
pop
jb
jmp
xchg
adc
mov
cli
push
cmc
or
cmp
and
xchg
cmp
cmc
cmp
mov
lcall
add
push
stos
jge
sti
aad
nop
loopne
push
jno
cs
pop
repnz
addr16
cld
sub
nop
xorb
call
inc
rcll
popa
std
jno
nop
aas
pop
or
or
cmp
sbb
shlb
lcall
pop
jno
xchg
mov
lret
dec
cltd
in
sbb
mov
lahf
fcmovnbe
sbb
jno
jp
jecxz
inc
nop
mov
mov
mov
xor
popf
cmc
lret
cmc
fdivr
or
adc
loope
and
pop
ss
pop
sub
and
es
leave
mov
insb
dec
add
test
xchg
int3
or
out
dec
imul
push
pop
push
push
mov
sbb
adc
xor
fs
scas
dec
gs
and
fists
jl
dec
jns
xchg
ss
jge
addr16
jl
rorb
push
repnz
mov
fs
in
and
pusha
test
loope
jle
inc
inc
pop
jne
movsl
mov
fdivp
jmp
in
jl
mov
dec
aad
iret
xlat
inc
fmull
mov
cmpsb
cwtl
mov
lds
repnz
mov
xor
mov
cmp
shlb
repz
movsl
fistpll
nopl
pop
std
out
in
or
pop
jg
sarb
jb
test
cmp
sub
mov
outsw
sbb
mov
pop
or
and
cmp
in
inc
pop
idiv
mov
sbb
sub
xchg
lock
sub
inc
push
popf
and
xchg
mov
jbe
fwait
shr
inc
inc
push
mov
jp
add
jne
into
fstps
popf
int3
pop
lods
daa
inc
out
mov
adc
test
cld
cmp
popa
mov
mov
jp
imul
adc
push
gs
lods
sbb
movsb
cltd
xchg
outsl
fucomi
lahf
cli
or
lahf
adc
pop
push
adc
jo
cs
mov
fistl
popf
pop
fildl
push
inc
mov
push
jb
inc
movb
push
lret
std
push
lret
lea
das
and
out
mov
cmpsl
dec
jmp
mov
mov
loop
mov
pop
sbb
ret
and
push
scas
insl
jns
adc
fdiv
and
das
in
jno
pop
xor
aam
mov
cld
sti
mov
add
jge
addr16
pushl
fidivrs
mov
insl
inc
adc
and
dec
cmp
mov
testl
mov
or
out
mov
dec
or
fwait
clc
add
ret
je
out
xlat
xor
jle
jp
outsl
insb
mov
lret
mov
dec
int
inc
ja
ja
add
cld
insb
pop
sub
and
bound
jnp
xor
or
adc
pop
or
popa
cmp
jg
jb
std
mov
jl
aad
or
cmp
out
xchg
sahf
or
dec
jg
movsb
or
cs
in
jl
mov
aaa
inc
stc
pop
cld
lock
jb
mov
jmp
dec
inc
fiadds
push
push
icebp
adc
cmp
inc
add
pop
fmulp
arpl
pushf
in
lahf
add
add
xor
loopne
shl
lea
or
sti
subl
int
movsb
mov
inc
inc
mov
push
outsl
filds
dec
dec
mov
lods
lods
mov
in
mov
xor
scas
push
mov
sub
adc
dec
pop
stos
push
cs
dec
imul
sub
stos
imul
pop
rorb
test
mov
ret
inc
pop
out
xor
adc
out
mov
pop
dec
cmp
sub
inc
fiadds
mov
push
push
ret
sub
mov
xlat
leave
loopne
ss
sbb
popf
test
dec
test
jg
mov
mov
shlb
or
stos
jecxz
sbb
dec
pop
aas
mov
ret
mov
aas
and
je
sbb
dec
sub
and
mov
push
xchg
pusha
and
mov
fsubrl
pop
imul
push
dec
mov
popa
or
scas
test
mov
mov
push
rcrl
lods
dec
pop
rorb
into
out
lods
out
decl
ficoms
mov
or
xchg
jl
mov
shlb
das
mov
fiadds
shlb
movsl
pusha
xor
pop
in
pushf
shlb
repz
jae
and
out
or
in
sub
pushf
rcrb
stc
aas
pop
add
insb
sbb
mov
pop
adcb
lcall
adc
sbb
cmp
or
sbb
data16
sahf
fdivrl
aaa
dec
insl
out
aad
xor
pop
push
or
push
cmpsb
jns
pop
mov
adc
rcrl
dec
or
jne
repz
bound
xchg
js
lcall
cli
jmp
inc
mov
push
mov
int
adc
mov
xchg
sbb
xchg
out
jle
cmpb
sbb
jp
dec
ds
adc
ljmp
lea
les
ljmp
jno
in
les
imul
mov
xchg
jg
inc
jecxz
ja
adc
add
mov
repnz
cs
push
xchg
ud1
xchg
stos
dec
cwtl
stos
sbbl
or
jnp
jecxz
iret
pushf
fsts
aam
adc
decb
jmp
jae
jge
pop
stos
mov
mov
icebp
mov
addb
test
testb
fistpl
scas
pop
loope
into
das
dec
pop
and
cld
xor
loop
iret
xor
cmp
xchg
fsubr
into
lods
lea
clc
fdivrs
les
pop
nop
add
mov
fmull
pop
je
inc
xor
dec
jbe
insl
les
push
mov
repz
inc
test
imul
bound
fcomi
add
bound
js
test
rorl
pop
shrl
mov
fisubrs
jae
xor
xchg
push
sub
mov
lea
outsl
pop
push
dec
arpl
int
ficoms
mov
dec
test
call
xor
mov
in
adc
mov
mov
cmp
jecxz
out
stc
mov
das
lar
mov
insl
add
std
lds
xor
inc
xchg
add
test
sbb
rcll
and
mov
xchg
cs
ss
jne
clc
cmpsb
xchg
push
mov
in
dec
rorl
daa
movsb
cwtl
jl
outsb
dec
cwtl
leave
lods
push
push
xlat
and
mov
insb
adc
add
leave
movsb
inc
push
jle
fld
add
cmp
jecxz
sub
dec
icebp
roll
add
or
add
jg
mov
or
xchg
dec
shlb
in
or
sub
pop
jno
inc
mov
movsb
dec
mov
test
cli
pop
fbstp
dec
xchg
mov
inc
gs
mov
sbb
cs
xor
dec
aas
iret
sbb
pop
fstl
or
inc
aaa
mov
sar
mov
and
jle
bound
icebp
mov
notl
xor
sub
dec
sbb
into
movsl
scas
stos
and
aad
lds
jo,pt
pop
xchg
out
mov
ja
mov
sub
ss
push
sbb
cmp
stc
pop
push
mov
cmp
xchg
pop
xchg
pop
xchg
inc
insl
adc
jae
shrl
sbb
sbb
cmp
jecxz
mov
jp
sbb
or
popf
aaa
or
cmp
test
mov
aaa
sahf
inc
lds
add
cmc
addr16
or
jnp
subl
rclb
pop
cmpxchg
mov
js
ss
sbb
jns
mov
loopne
out
out
aaa
scas
sub
jl
or
sbb
add
mov
ret
lods
mov
push
je
test
repz
inc
cmp
xchg
pushf
aas
into
lahf
xchg
adc
loop
or
inc
add
pop
cmovno
and
rcrl
loop
sub
addr16
outsb
popa
bound
sar
fdivrs
cmp
lea
hlt
popa
mov
mov
addr16
mov
or
mov
mov
and
popa
jns
popa
and
fsub
ds
insl
call
fistps
push
xor
xlat
cwtl
sub
lods
imul
test
sub
xchg
fwait
out
jns
test
pop
in
mov
adc
xchg
mov
aad
ds
xor
sbb
aas
iret
pusha
cld
adcb
clc
leave
stos
ja
dec
pop
cmp
cmp
mov
cltd
add
push
mov
jg
jnp
lret
mov
aad
call
ds
fstpl
sahf
fmul
xor
push
mov
xchg
lock
mov
call
fwait
ret
lahf
addl
in
cmpsl
lret
shlb
pusha
scas
scas
pop
jne
je
sbb
and
stos
xor
shrl
js
push
and
inc
mov
mov
dec
repnz
lret
add
cli
aas
pusha
aad
cmp
sti
bound
bound
lret
and
imul
mov
arpl
ds
cmp
sahf
pop
xlat
in
pop
jl
push
rorl
fcomps
push
lcall
repnz
out
and
lds
cmp
fists
dec
fucomi
pusha
push
out
mov
lahf
notb
and
pop
mov
jmp
mov
imul
dec
push
xchg
mov
adc
roll
in
cmp
mov
insl
fs
movsl
adc
add
mov
mov
mov
pop
lret
imul
sarb
and
idivl
ss
ds
and
ja
loopne
jae
xor
push
xor
push
pop
pop
cmp
gs
loope
das
cmp
mov
inc
cmc
jmp
icebp
nop
pop
es
pop
xchg
pop
xchg
dec
in
stc
sub
cmpsb
call
pop
add
mov
rorb
push
sti
or
inc
jle
std
cmp
in
pushf
inc
in
mov
mov
in
imul
out
mov
int
into
xor
push
rorl
aas
mov
pop
sbb
mov
or
fsubl
dec
and
call
and
sub
cwtl
and
pop
cmp
jno
dec
andb
gs
adc
xchg
mov
push
sbb
jae
nop
int
frstpm(287
push
es
adc
push
arpl
rolb
loop
in
dec
or
mov
lds
cmp
ljmp
enter
jno
inc
hlt
sbb
jnp
cmp
add
jmp
push
mov
jne
mov
mov
and
add
mov
adc
and
add
cli
jl
bound
pop
into
mov
or
hlt
xorl
xchg
hlt
bound
adc
ljmp
push
and
add
dec
or
scas
test
dec
push
loop
or
decl
cmp
pop
push
lret
daa
rcll
xlat
lds
enter
mov
jno
aam
and
enter
xor
outsb
pop
movsb
push
mov
aam
or
leave
pop
inc
dec
sbb
mov
out
sub
push
dec
clc
stos
jbe
lea
pop
sub
push
pop
ja
jp
aad
sub
aaa
call
xchg
movsl
mov
stos
xchg
cmp
xchg
dec
mov
xor
push
push
push
test
test
aad
nop
pop
or
inc
pop
stos
mov
mov
and
jbe
cwtl
push
iret
sub
icebp
inc
call
scas
daa
pusha
das
or
jle
dec
cmp
xor
lea
mov
loop
xorl
mov
inc
call
mov
jbe
mov
sbbl
pop
add
fcompl
gs
imul
nop
pop
jb
inc
les
push
fidivrl
xor
fs
lods
adc
cmp
test
mov
cmpsb
dec
in
out
mov
test
fistpl
ja
lods
jp
imul
in
outsl
push
std
sti
dec
mov
cs
cld
imul
mov
sarl
sub
pop
jmp
test
push
out
mov
mov
rclb
loopne
jl
adc
and
mov
loope
cmc
xor
fistps
sub
fiaddl
jae
lcall
pop
xor
pop
shlb
add
andb
nop
dec
mov
int3
enter
dec
add
jmp
mov
sbb
cwtl
push
int3
push
mov
add
je
shl
stos
outsl
call
stos
lahf
xchg
dec
pop
movsl
push
repz
std
dec
in
data16
push
popa
cmp
iret
cld
lret
sub
mov
or
sub
add
jno
mov
sub
add
jb
pop
mov
inc
or
sti
ds
aas
jb
out
push
aaa
mov
lret
cld
mov
push
inc
loope
and
and
jo
addr16
mov
int
mov
les
ret
xchg
mov
sub
aas
hlt
or
aad
inc
testl
cltd
inc
scas
add
call
inc
sbb
xlat
fadds
or
ret
sbb
stc
adc
fcoml
add
pushf
pop
pop
xor
mov
sub
push
push
out
xchg
jge
push
ficompl
ret
fldcw
dec
fsubrs
cltd
mov
ds
add
clc
xor
mov
ds
jns
cmp
stos
jbe
jns
jne
dec
push
sub
lcall
mov
call
ror
int
push
or
punpcklbw
add
xorb
sub
enter
inc
mov
es
jae
jns
stos
nop
xchg
int
cmpsb
pop
push
or
push
or
cmp
lret
mov
sub
ret
adc
mov
nop
std
cld
push
int3
pushl
pop
add
lock
inc
jp
jl
mov
pop
scas
pop
mov
adc
loope
xorb
sub
and
lock
gs
scas
pop
cmpsl
add
mov
xor
push
pop
mov
addr16
test
or
jno
xor
movsb
pop
pop
icebp
inc
cmp
ljmp
sbb
push
lret
cmp
bnd
sbbl
pop
push
leave
test
stc
sahf
adc
mov
movsb
sbb
stc
les
bound
fdivs
aaa
adc
pop
int3
add
imul
mov
inc
pop
arpl
lahf
push
mov
sbb
jo
call
xchg
stos
pop
jb
xchg
pop
push
mov
jns
pushf
inc
orl
fs
ret
mov
cs
xorl
lcall
mov
and
cld
clc
arpl
xchg
mov
pop
out
mov
or
push
cmpsb
and
mov
xchg
fdivs
decb
vpaddd
sti
outsb
mov
repnz
jno
mov
xchg
xchg
testl
xchg
mov
stos
xor
lcall
insb
dec
jle
xchg
stc
fistps
fists
scas
or
pop
xchg
outsl
sti
cmpsl
adc
fcmovnbe
xchg
js
aad
sbb
subb
js
dec
rcrl
sbb
or
movsb
push
stc
adcl
cmpsl
xchg
xlat
mov
ljmp
stos
sub
pop
adc
xchg
mov
stos
mov
test
push
push
sarb
push
lret
mov
jbe
push
movsl
insl
in
lret
in
push
dec
inc
or
or
mov
cld
pop
adc
les
adc
fldlg2
jmp
xor
es
movsl
insl
add
lcall
cmpsl
dec
jns
lods
lods
cmp
xor
sbb
inc
rclb
push
test
icebp
les
mov
lahf
shlb
scas
loop
add
outsb
insb
gs
xchg
bound
dec
cmp
xchg
loop
and
or
mov
xchg
mov
ds
xor
les
insb
test
jl
popl
jge
xchg
sub
outsb
or
xor
dec
cld
ja
roll
test
inc
sub
mov
cmp
gs
and
outsl
push
adc
mov
out
lods
rclb
ljmp
xchg
xor
or
and
pop
mov
sub
es
rdtsc
out
pop
shll
pop
adc
dec
pushf
pop
loopne
or
rclb
fdiv
xchg
fidivrs
jne
call
jl
ljmp
divl
sti
and
inc
in
inc
pop
sbb
call
push
dec
cmpsl
push
sbb
flds
adc
pusha
inc
mov
sbb
xchg
dec
lret
cmc
dec
int
sub
xlat
sti
lods
movsl
test
jne
ret
fdivs
jns
data16
cltd
add
pop
int3
pop
sbb
mov
jne
xchg
test
dec
cmpsb
xor
arpl
incl
or
inc
rcll
jnp
mov
sahf
out
mov
pop
shlb
or
xchg
lock
push
jp
and
jo
cmpsb
cmpsl
or
sub
mov
push
adc
or
and
shrl
xor
mov
adc
inc
push
jns
inc
mov
ret
pop
xor
add
mov
cmp
testl
popf
jb
mov
pop
lock
ret
push
xadd
jnp
dec
push
lds
mov
sti
aaa
xchg
push
fs
les
mov
push
jp
or
int3
adc
into
mov
test
mov
xchg
and
arpl
adcb
mov
adc
jle
ret
inc
dec
sub
cmp
addr16
add
fimuls
sti
arpl
jg
pop
jns
mov
bound
ficomps
in
mov
int3
js
xor
pop
sub
xchg
mov
movsb
pop
sahf
mov
pusha
ds
sti
add
pop
clc
push
pop
out
inc
mov
cltd
cmp
or
sahf
add
mov
lods
enter
xchg
push
inc
pop
inc
js
ss
add
sbb
dec
sahf
outsb
dec
dec
stc
loopne
lret
cld
jns
jl
jge
cmp
xor
test
cmp
sbb
cltd
jne
inc
mov
lcall
xchg
ret
ljmp
dec
sub
sub
jo
push
push
mov
xor
arpl
jecxz
jbe
pop
insb
outsb
in
add
jl
and
or
and
adc
mov
pop
pusha
sbb
mull
dec
movaps
insl
aaa
lock
sbb
ljmp
gs
jmp
add
cli
push
add
lods
adc
mov
iret
pop
pop
ss
mov
icebp
scas
std
xor
divl
pop
je
push
xor
lcall
xchg
xor
cmpsl
xorb
enter
decb
popf
and
movsl
xchg
movb
adc
daa
pop
shr
lds
and
std
push
test
cmp
cmp
int
add
fildl
dec
daa
mov
jae
stc
into
pop
xor
sarl
push
js
shll
shrb
ja
or
mov
inc
jg
push
lret
or
in
sub
mov
js
ss
lcall
call
int
adc
lcall
cmp
jmp
fdivr
sub
negl
outsb
jne
push
ret
out
aad
das
pop
xchg
jle
inc
mov
cmp
mov
mov
sub
or
aaa
fs
sti
roll
or
cmp
les
fwait
jmp
cmp
push
rol
xchg
mov
push
pop
popl
and
lret
cmpsb
mov
jne
pop
outsb
or
outsl
mov
add
cmp
cld
aaa
jnp
lret
mov
pop
dec
jo
xor
iret
mov
fsubl
mov
iret
shlb
pop
dec
pushf
fwait
arpl
les
ror
insb
adc
iret
ficompl
xlat
stos
daa
or
sti
xor
test
or
cltd
stos
cmpb
xor
arpl
mov
mov
sub
jg
cmp
sbb
dec
lret
in
push
pop
mov
in
cs
pusha
test
mov
mov
test
mov
adc
inc
xlat
les
adc
mov
or
xchg
insl
mov
push
pop
jp
dec
rol
adc
sub
subl
mov
gs
xchg
stc
roll
test
and
sti
loope
pop
mov
fdivrl
jp
mov
push
xlat
adc
sbb
je
inc
gs
aam
out
sbb
scas
fisttps
inc
jecxz
mov
inc
cli
mov
add
fdivrs
or
rcl
hlt
xor
or
sti
insb
add
shr
dec
js
mov
idivl
sbb
mov
andb
mov
jle
adc
cmp
lret
jnp
sub
mov
mov
lcall
cmp
pop
xchg
repnz
ja
and
push
push
lret
movsb
in
add
mov
stos
mov
mov
pop
mov
sti
jnp
cmc
loopne
dec
imul
in
cmp
or
mov
sub
jo
push
xchg
xor
add
and
jl
jecxz
loope
adc
test
jge
les
mov
sahf
pushf
push
inc
ret
mov
sub
mov
aas
fs
test
pop
pop
inc
mov
and
adc
mov
aam
in
pusha
mov
xchg
imull
stos
mov
xchg
add
ljmp
mov
mov
and
in
aam
out
push
xor
sub
lret
inc
mov
mov
cmp
aam
mov
enter
sub
jae
adc
sub
mov
add
jg
cmp
push
sbb
dec
add
mov
fdivrl
incb
add
xlat
mov
dec
sub
cmp
pop
sub
xor
shll
pop
mov
mov
test
mov
nop
loop
xchg
fcoms
divb
xchg
test
or
movsb
cmp
pminsw
pop
mov
psrlq
js
lret
adc
aas
dec
xchg
mov
cwtl
fs
xchg
test
cmpsl
cmp
daa
cmpsb
or
outsb
sahf
cltd
cmp
pop
mov
pop
jnp
sbb
jecxz
aam
inc
out
xchg
jg
jle
jmp
mov
mov
jno
mov
xchg
push
cltd
or
inc
jbe
lock
das
and
jo
jae
xchg
out
cli
das
gs
pushf
repz
and
dec
dec
push
xchg
test
xchg
xor
into
push
jbe
xor
outsl
aam
data16
jge
int3
dec
mov
add
cmp
pop
xchg
mov
jg
cmovo
lcall
pop
xchg
or
xchg
jle
loopne
loopne
movsl
jmp
dec
int3
lds
cmpsl
lds
sahf
loop
push
andb
bound
daa
shrl
filds
std
int
repz
testl
mov
cwtl
inc
xchg
cmp
pop
mov
fwait
les
pop
inc
js
jg
in
xchg
sbb
mov
or
push
je
cltd
push
or
inc
ds
push
push
jns
jb
fidivl
inc
pop
mov
dec
jae
scas
test
xchg
adc
ret
add
aaa
mov
sbb
add
imul
sbb
sub
jl
mov
mov
out
or
shll
mov
or
push
divb
pop
sbb
lahf
sbb
add
lea
adcb
inc
cltd
arpl
and
or
lds
xchg
mov
push
es
xor
mov
fwait
sub
push
mov
je
test
pop
pop
adc
mov
pop
fisubrl
aad
xchg
in
sbb
push
push
inc
fistl
sbb
mov
and
ljmp
adc
int3
js
and
push
jnp
lea
fisttpl
mov
mov
jge
pusha
imul
jne
inc
mov
cmp
mov
roll
xchg
fwait
mov
jbe
push
filds
sbb
dec
out
cmpsl
int
push
mov
sbb
push
enter
or
and
mov
data16
or
fisubl
fs
scas
arpl
mov
cmp
cmpsb
arpl
or
mov
ja
xchg
mov
xor
sbb
sub
jp
jnp
jbe
shll
jb
pop
xor
outsl
out
sbb
popf
pop
cwtl
lea
adcl
aad
sbb
lahf
insb
jno
cli
popa
fdivrs
mov
jno
cmp
fs
cltd
mov
mov
dec
mov
aas
cmp
lret
jg
or
xorb
adc
mov
lcallw
dec
popa
or
jbe
lret
inc
jb
xor
pop
or
push
sub
push
cltd
bound
cld
popf
ja
xchg
xchg
sbb
pop
daa
imul
outsl
sub
push
cmpsb
xor
pop
ficomps
arpl
out
and
shlb
repnz
add
mov
es
xor
movsb
mov
or
lock
pop
add
mov
aam
xchg
imul
shlb
xchg
psubsw
inc
sub
cmp
rcrb
mov
pop
call
outsb
xchg
enter
push
shr
iret
stc
push
movsb
iret
push
sbb
jecxz
lret
bound
mov
push
es
dec
sub
sub
pop
sbb
push
sub
push
push
sub
cmp
jno
mov
inc
out
leave
pop
or
js
icebp
lret
inc
mov
xlat
cmp
cmp
call
pop
inc
cmp
or
imul
jae
xchg
xchg
clc
dec
fcomip
dec
inc
and
mov
sub
lods
leave
adc
mov
and
jp
adc
ja
les
lods
icebp
outsl
dec
mov
mov
jb
jmp
xchg
out
push
mov
or
mov
sub
or
xchg
cmp
test
movsb
xchg
fidivs
mov
xor
notl
mov
and
in
fwait
negl
fxch
dec
ss
sbb
ss
xor
cmpsl
cmp
sbb
daa
pop
aad
pop
insb
jmp
dec
inc
jae
and
das
std
pop
dec
xchg
mov
mov
int3
rcrl
pop
pop
test
loop
stos
hlt
movsl
insl
sbb
aaa
in
fdivl
pop
sub
jecxz
dec
repz
popf
test
lahf
aam
mov
movsl
les
in
xchg
xchg
push
std
ds
ret
jmp
in
sarl
in
pop
pop
push
ds
lret
and
in
push
enter
cld
popa
repnz
cmpsb
mov
and
jecxz
pusha
jns
cmp
mov
test
pop
adcb
jl
sbb
aad
push
adc
dec
enter
icebp
cmpsb
jne
loop
loopne
cmp
lock
inc
mov
jmp
mov
xchg
sbb
cmp
cld
mov
mov
int3
xchg
outsl
cmp
add
inc
and
and
sahf
fdivl
dec
outsb
xchg
sbb
int3
aam
test
xchg
inc
push
jle
out
cmp
push
dec
rorl
add
inc
xor
mov
test
dec
add
inc
js
jae
fsubrl
cmp
frstor
mov
cmp
pop
sub
outsl
and
shll
inc
ret
ss
xor
cli
sub
add
mov
test
pop
stos
ffreep
inc
rolb
popf
sub
mov
imul
mov
xchg
lret
jbe
hlt
in
sahf
insb
repnz
push
mov
push
fs
div
call
test
test
add
mov
xchg
mov
je
loope
adc
pusha
add
test
dec
imul
sbb
fst
inc
sbb
sbb
pop
mov
je
mov
adc
dec
ljmp
mov
push
jg
cmp
test
jg
jo
les
sti
xor
mov
jne
jg
lock
mov
xor
frstor
mov
lret
unpckhps
leave
xchg
jns
repz
inc
leave
add
bound
repz
pop
shrl
mulb
jle
pushf
jns
cli
cmp
mov
imul
out
push
jge
jo
cld
sti
inc
xor
add
add
xchg
dec
hlt
adc
divb
sub
movsb
outsl
xchg
push
fisubs
aad
notb
rcll
add
aaa
push
lock
mov
into
xchg
std
or
push
bound
mov
in
jbe
orb
mov
bnd
lret
xor
pop
push
sbb
movsb
push
lahf
pushf
jne
cmp
add
lods
pop
fmull
rclb
sti
adc
cld
adc
ret
adc
cwtl
sahf
mov
pushf
stos
lock
push
lea
loop
or
mull
push
mov
ljmp
mov
pop
ret
jae
icebp
and
jae
leave
mov
cmpl
fstpl
cmc
ucomiss
pop
inc
iret
loopne
and
cmp
and
dec
test
dec
mov
arpl
mov
jge
or
xchg
push
jae
add
test
sub
dec
xor
jae
dec
pop
xor
lods
dec
pop
outsl
repnz
pop
cmp
inc
inc
pop
push
fsubs
addr16
gs
lock
fwait
xchg
addr16
fildl
mov
xchg
out
pop
sub
mov
out
mov
arpl
andb
cmp
outsl
xlat
inc
add
sbb
pop
outsb
loop
cmp
sti
or
push
out
mov
ja
or
in
ret
jl
outsl
pop
shl
adc
mov
fidivrl
or
cmp
sub
push
pcmpeqd
js
cmpsb
daa
add
fdivr
jb
std
push
inc
adc
mov
loope
mov
xchg
mov
cmc
cmp
jle
cmpsl
cmp
outsl
add
mov
iret
popa
popa
pop
rep
pushw
add
nop
cli
xchg
leave
adc
and
pop
lret
addl
loopne
xchg
inc
jle
lret
outsb
pop
cmp
and
lcall
xor
jbe
sti
jo
in
or
int3
mov
int3
mov
mov
orb
pushf
call
mov
add
stos
cmp
xchg
xchg
lods
push
lret
cmpsb
pop
movsb
mov
hlt
sbb
push
orl
pop
sub
inc
jae
mov
add
lcall
mov
cs
pop
ljmp
add
mov
jmp
inc
sbb
lret
mov
inc
jmp
inc
ret
adc
hlt
pop
or
aam
mov
push
dec
pop
shll
leave
xchg
outsl
rcll
bound
ljmp
fucomi
sub
ret
jmp
cmp
jmp
ljmp
adc
mov
mov
xor
push
pop
add
leave
stos
inc
jecxz
push
mov
je
leave
cs
jge
out
pusha
xlat
push
or
adc
sub
pop
push
test
jns
cmp
shll
xor
pop
adc
mov
out
scas
pop
mov
loope
cmpsb
test
mov
push
je
ljmp
cld
inc
mov
pop
in
pop
cmpb
inc
pop
and
push
lods
insl
jmp
cld
mov
ja
test
das
sub
out
jns
or
jmp
cmp
mov
int3
imul
enter
cmp
hlt
ljmp
mov
mov
inc
push
jno
scas
icebp
aaa
push
push
es
sbb
insl
fldcw
cwtl
jge
popa
out
cld
sbb
inc
pusha
out
cmpsb
ret
jbe
mov
test
cs
jne
xchg
mov
sarb
sub
lods
andb
hlt
lcall
cmp
fxch
mov
mov
loope
sub
test
adc
sub
cltd
dec
nop
das
rolb
jnp
xchg
jg
xchg
mov
inc
jbe
xor
mov
in
push
cmc
inc
mov
inc
jg
inc
addl
lods
loope
ljmp
mov
xchg
xor
fists
mov
jmp
fistl
push
lods
cmpsb
fst
imul
cld
or
gs
call
dec
pop
add
sub
and
mov
jle
stos
mov
adc
xchg
dec
movsl
and
icebp
cmp
xchg
int
inc
xchg
xchg
pop
mov
and
call
cmp
ficoml
ljmp
push
lret
aam
mov
les
xchg
sub
jmp
stc
jb
xchg
push
lods
sub
shll
std
xlat
cmp
sahf
test
xchg
mov
pop
jo
sub
mov
loope
xchg
pushf
enter
or
repz
jno
lret
fcmovnbe
in
lea
xor
xlat
je
push
adc
insl
loope
test
test
aaa
add
and
xor
xchg
dec
ss
sbb
xchg
dec
rolb
out
push
adc
lret
push
cmp
or
into
movsb
fistpll
ror
les
enter
fs
stc
movlps
sti
jecxz
and
lds
out
mov
mov
fsub
imul
sub
ss
fiaddl
es
cltd
adc
xor
rcrl
aad
cmc
pop
pop
push
add
lds
adc
sti
sbb
pop
mov
enter
xor
movsl
adc
pushf
xor
enter
dec
lea
push
and
pop
inc
pop
xchg
fs
pop
sbb
push
movsl
scas
mov
out
mov
jb
aam
or
jo
rclb
ss
lret
and
daa
fsubl
repnz
pop
jecxz
ljmp
jmp
inc
sbb
cmpsb
xchg
fadd
in
pop
and
out
xor
cmpsl
pop
push
repnz
pop
shll
daa
push
mov
xor
fldpi
jle
cmc
mov
stos
sbb
loope
mov
icebp
mov
iret
dec
pop
xchg
sbb
fsubrs
sub
aas
push
cltd
loope
push
pop
mov
mov
xor
leave
push
das
dec
das
mov
mov
clc
addr16
dec
jns
and
iret
adc
imul
into
data16
cmp
mov
push
loopne
sub
and
jne
sbb
and
cltd
in
push
jecxz
jae
loope
insb
add
ret
in
out
fwait
ljmp
test
sbb
pop
mov
jg
dec
aam
mov
sub
xchg
popf
push
idiv
stos
iret
push
and
sbb
push
jno
mov
ret
pop
ret
push
cmpl
sbb
ret
pop
in
push
push
add
push
adc
clc
popf
stos
lret
out
leave
push
clc
and
or
jle
iret
and
testl
xchg
xchg
bound
mov
xlat
add
ja
cmpsb
sbb
inc
orl
push
xchg
inc
movsl
mov
cli
dec
pop
dec
out
sub
fsubs
jge
pop
repnz
scas
inc
mov
dec
mov
inc
sub
ja
inc
daa
lods
xchg
popa
sbb
jecxz
sub
in
clc
dec
sbb
mov
aam
lds
cmp
lods
mov
push
and
sarb
jae
or
test
lcall
mov
test
loop
fldenv
cmp
test
ret
aas
sbb
fisubs
push
movb
inc
cli
arpl
pushf
xchg
adc
push
fwait
push
dec
or
ret
xor
cmpsl
adc
ds
and
mov
lea
pop
jle
call
ret
sahf
push
mov
mov
mov
cmpsl
lock
mov
rcrl
xchg
inc
fistps
dec
clc
mov
ret
adc
bound
jp
test
mov
pop
push
fisubrs
mov
cli
mov
aas
mov
dec
jmp
fistps
test
into
imul
mov
loope
mov
cmp
rcll
scas
xchg
mov
push
lret
xor
inc
sbb
inc
andb
jne
xor
add
lods
adc
mov
jo
scas
fisubl
paddsb
mov
jp
xchg
ficomps
mov
dec
scas
sub
iret
sbb
sub
movsl
lds
or
loopne
mov
xchg
scas
sarl
pop
push
adc
add
inc
jecxz
lret
cld
xchg
dec
dec
mov
jb
repz
or
xchg
cmovp
jl
ds
mov
f2xm1
cli
out
push
mov
test
mov
loope
shrl
mov
mov
push
test
or
loop
sub
jl
hlt
sub
inc
cltd
dec
cmpb
xchg
dec
or
mov
push
rcrl
cmp
xchg
mov
pop
pandn
cmp
hlt
xor
in
bnd
push
jno
lret
sbb
pop
and
fldt
fimull
into
shl
dec
popa
int3
aaa
clc
push
stc
adc
je
es
repnz
movsb
int
xchg
adc
in
sub
imul
jae
jl
or
lahf
stos
sbb
hlt
imul
mov
iret
outsl
pop
movsb
or
xchg
sbb
or
mov
int
loope
mov
inc
scas
ret
sub
ja
arpl
xchg
pop
int3
or
push
out
xor
cmpsb
cwtl
test
push
iret
xor
xchg
push
popw
xchg
in
jecxz
lcall
inc
pushf
aas
xor
pushf
xchg
sub
pop
push
lods
add
inc
push
lds
xlat
and
push
fwait
xchg
fstps
dec
and
mov
add
std
cmpb
lret
test
inc
aad
ret
push
push
jae
inc
mov
cmp
nop
mov
loope
pop
mov
jns
sub
lods
sub
insb
add
dec
mov
pop
sbb
or
cmp
rcrb
cli
insb
jno
mov
adc
mov
das
xchg
inc
iret
dec
inc
iret
inc
mov
and
outsb
jo
sarl
mov
shlb
adc
sub
mov
sub
jns
jne
movsb
pop
fadds
out
jbe
and
mov
in
mov
pop
adc
dec
pop
mov
int
jb
cmp
test
clc
xchg
enter
je
ja
inc
inc
jecxz
pusha
xor
ja
cmp
mov
jb
jns
adc
cs
mov
or
xchg
cmc
inc
ljmp
outsb
bnd
sub
aam
out
sbb
idiv
jne
and
or
jle
mov
imul
ja
lret
or
cmp
sub
out
lret
insl
pop
sbb
jecxz
shll
adc
jno
push
adc
jbe
aam
lods
inc
test
fcoml
es
insb
out
pushf
out
mov
push
xlat
adc
sub
loopne
mov
mov
add
ret
pop
xchg
aad
xor
cltd
pop
imul
test
div
push
movsl
and
in
xchg
cwtl
sub
mov
jge
adc
movsb
push
mov
in
rclb
iret
daa
aaa
hlt
push
lret
push
xchg
push
mov
in
jnp
stos
push
pop
dec
jmp
mov
lret
add
xchg
aam
iret
push
outsb
cmp
lcall
add
movsl
popa
and
dec
cmp
repz
cltd
lods
add
mov
pushf
lods
xor
aam
xchg
jne
inc
and
xchg
orb
xchg
ret
lock
icebp
pop
fbstp
repnz
les
add
fs
cltd
dec
jo
mov
sub
mov
push
xchg
popf
xor
sub
push
inc
testl
add
push
jp
out
bound
sbb
cwtl
repz
jbe
jp
fistps
movsl
dec
sbb
cmpsl
cltd
push
sub
mov
loopne
push
shll
bound
cld
xchg
shlb
xlat
or
aad
pusha
dec
cmpb
das
ja
xor
mov
subb
sub
scas
notl
aaa
data16
test
dec
mov
inc
and
adc
mov
in
divb
sub
addr16
pop
mov
lcall
leave
ds
dec
push
gs
adc
ret
mov
cmp
pop
lea
sub
push
or
add
clc
divb
fidivs
push
insb
mov
test
adc
cwtl
mov
mov
jecxz
mov
push
xlat
inc
movl
lods
sbb
out
imul
mov
aas
mov
jb
or
int3
adc
cwtl
pop
or
imul
cmp
cmpsb
adc
ljmp
int
les
jmp
into
xchg
stos
push
jns
mov
aaa
push
sub
cmp
jnp
lea
int
push
shlb
mov
fdivrl
mov
add
divb
push
push
or
push
loop
shl
leave
adc
ss
cmpsb
push
jb
mov
hlt
pusha
sbb
add
test
outsl
xor
adc
test
repz
xor
sub
repnz
pop
stos
notl
bound
testl
jle
in
jne
shlb
shrl
jg
movsb
mov
jb
mov
xchg
and
push
inc
add
push
movsl
lret
test
mov
ret
into
rcrl
jbe
frstor
fs
fdivs
cmp
pop
loope
cltd
cmp
leave
out
mov
shl
xchg
popf
jg
push
or
add
mov
fisubs
adc
clc
enter
fmull
mov
clc
cmp
cmp
rcrb
inc
out
int
call
xor
jl
add
inc
cmc
iret
adc
bound
shlb
mov
sbb
push
popf
jne
cmpb
scas
sub
jne
or
push
lods
andb
aad
inc
mov
or
add
test
mov
loope
mov
es
add
and
inc
cmpsl
xchg
lods
mov
mov
stos
xor
dec
fwait
aas
pavgw
loope
mov
and
xchg
pop
in
or
test
outsl
es
stc
sub
hlt
fmul
push
shlb
in
lock
fldcw
mov
lock
xor
xchg
push
pop
lds
mov
push
notb
cli
push
loope
daa
push
cmpsb
xor
and
jns
push
orb
mov
addl
inc
pop
gs
call
pushf
ret
aad
cmp
jl
aam
pop
mov
ret
loop
add
xchg
popa
mov
mov
push
sahf
je
cmp
push
push
cmp
pop
sti
mov
jo
sub
push
cld
ss
into
subb
pop
cmpsb
pop
mov
shlb
pushf
jb
ljmp
fs
movsl
xchg
or
unpcklps
mov
inc
push
inc
jg
sub
in
sub
stos
jno
inc
daa
fidivrl
flds
xor
jmp
sahf
in
xchg
f2xm1
pusha
or
cmp
js
mov
jo
mov
lods
test
dec
or
loopne
jecxz
mov
cmpsl
pusha
add
fwait
mov
movsb
cli
mov
adc
stc
mov
jmp
dec
cmpsl
mov
cmc
bound
pushf
mov
iret
xorb
lods
add
push
jnp
cli
rorb
enter
jbe
scas
and
jmp
xchg
aaa
sbb
iret
scas
insb
mov
adc
ss
pop
jne
or
mov
movsl
popa
xchg
mov
or
jnp
fadd
daa
sbb
repnz
add
cltd
fldt
pop
or
mov
or
jecxz
and
cs
ret
add
sti
aas
or
lds
in
leave
jmp
ret
enter
dec
mov
stos
stc
pop
and
movsl
pop
ror
and
frstor
lds
and
mov
stc
sti
sub
sub
sub
mov
in
aam
ffree
cli
xor
fsubrl
into
stc
loopne
jg
pushf
je
jge
jmp
dec
call
or
stos
aam
outsb
rorb
stc
into
popf
subl
negb
rol
aad
adcl
lods
je
pop
xor
mov
repnz
das
dec
cmpsl
jl
les
jg
sbb
add
adc
iret
xlat
push
push
push
lret
mov
jne
fsubrl
sti
sahf
or
adc
cmp
mov
or
out
insb
jae
fiaddl
xchg
scas
nop
subb
outsl
shlb
cmp
or
js
mov
stos
xor
jbe
aaa
cmp
out
js
mov
mov
fistl
push
xor
jne
xchg
test
push
mov
sbb
mov
shrl
shrb
push
or
and
stos
cmp
cltd
in
mov
mov
cmp
scas
or
inc
pop
jmp
cs
test
pop
xor
jecxz
and
xchg
xchg
lahf
add
adc
out
add
imul
cwtl
or
sbb
test
ljmp
push
inc
sbb
sub
and
in
andb
out
cmovns
adc
jle
push
mov
jecxz
adc
fwait
lahf
mov
inc
add
mov
xchg
jmp
jp
jo
leave
xchg
jns
int3
push
dec
ss
inc
cwtl
insb
xor
movsl
repz
mov
in
popa
repnz
or
in
les
pop
ret
dec
mul
cmp
cmp
insl
repnz
fs
and
cmc
imul
jb
gs
cmpsl
arpl
push
faddp
in
dec
ds
and
std
fists
mov
mov
not
aam
inc
stc
fwait
ret
mov
cmpsl
outsl
jno
xor
mov
mov
mov
add
shl
lret
jmp
jge
insb
mov
dec
iret
stos
mov
addr16
mov
xchg
jmp
scas
add
jmp
add
dec
adc
lods
outsb
daa
shrd
imul
cmp
pop
sbbl
aaa
sbb
inc
dec
lahf
sti
mov
inc
jp
cmp
les
decl
loopne
repnz
jns
jnp
xrelease
repnz
adc
mov
je
mov
xchg
add
test
inc
int
pop
mov
enter
icebp
cmc
sbb
repz
pusha
jne
rorb
notb
insl
enter
je
mov
lret
das
cwtl
call
cmp
jle
mov
dec
sahf
mov
lock
lret
add
loopne
aas
loopne
sub
fimull
adcl
mov
mov
icebp
xchg
lock
pop
lds
cwtl
cwtl
and
rorl
sbb
lcall
cmp
mov
adc
mov
xchg
jno
xor
out
and
pop
pop
xchg
sbb
mov
cmp
xor
and
mov
cli
cmp
movsl
inc
test
push
cmp
push
xchg
stos
jbe
pusha
fsubrl
into
mov
shlb
loopne
in
add
jmp
and
popf
mov
adc
mov
ret
xchg
cmp
pop
cmp
notl
out
lods
inc
popf
enter
jecxz
enter
ret
push
xor
js
pop
leave
mov
adc
outsb
pop
jmp
sbb
sub
mov
sbb
icebp
mov
int3
fdivs
int
lods
testl
sbb
and
dec
or
sbb
or
andb
pop
sub
inc
scas
mov
xor
push
int
fldenv
add
mov
icebp
pusha
sub
dec
jmp
fsubs
sti
xor
xchg
mov
test
hlt
xchg
int3
push
jnp
clc
lcall
pop
push
andl
sub
cmpsl
xor
jmp
fisubrs
stos
fucomp
adc
and
test
ja
arpl
jo
test
fwait
call
cmpb
mov
dec
je
shll
lds
ret
shll
into
sub
lea
xor
add
into
ja
jmp
mov
les
in
dec
xchg
enter
jo
pop
or
mov
mov
jge
movl
push
mov
add
lods
out
mov
mov
mov
icebp
add
fld1
test
dec
add
mov
pop
push
jb
cmp
call
or
add
mov
fwait
jmp
push
mov
punpckhwd
enter
xor
jb
sub
and
add
cmp
divl
cmp
stos
xchg
cmp
cwtl
pop
mov
sub
int
inc
and
movsb
or
and
mov
gs
cmp
mov
mov
adc
or
jnp
pop
xor
inc
imull
jae
pop
jp
sbb
ss
test
les
mov
fcmove
jo
ss
xlat
lea
mov
movsl
gs
sbb
andl
lsl
negb
xor
lret
adcb
fstps
enter
ljmp
jecxz
jns
mov
jb
xchg
dec
sahf
push
inc
sub
push
xor
or
jnp
ljmp
add
mov
pop
push
xor
xchg
movsl
adc
jle
int3
xchg
xor
clc
push
in
sahf
scas
mov
mov
rclb
inc
or
test
lds
fistpll
negl
xor
add
mov
shufps
test
clc
sti
clc
mov
xor
arpl
bound
out
stc
int
scas
test
pushl
mov
sbb
call
lret
insb
out
add
dec
xchg
and
add
ret
mov
xorb
push
or
addr16
push
jne
aam
lret
imul
iret
mov
push
fcoms
int3
ret
pusha
enter
lret
inc
pop
cli
sbb
out
dec
jne
add
nop
out
cld
or
dec
pusha
bound
int
inc
int3
inc
stos
sub
xor
mov
dec
popf
lahf
cmc
loope
jns
loop
in
loopne
ss
jno
into
shrb
add
sbbl
nop
icebp
out
out
popf
push
popa
push
push
pop
dec
daa
stos
sub
adc
pop
pop
jae
inc
and
shl
and
xor
sub
js
and
mov
xchg
lahf
cld
lcall
ja
loopne
jno
pop
sub
shl
aad
loop
mov
xchg
jl
cltd
mov
out
cwtl
sar
mov
stos
vmread
cmp
sub
and
add
and
sbb
inc
jle
loop
cmp
je
lds
jns
mov
and
fxch
mov
push
push
shll
mov
fs
sub
ret
xchg
adcl
dec
loope
dec
fldenv
inc
ds
popf
mov
aad
pusha
jmp
add
sbb
jg
xor
call
pop
stc
outsb
xchg
jl
sbb
andl
jp
lahf
iret
popf
adc
ss
cmp
in
cmp
mov
dec
je
cmc
scas
xlat
adc
mov
sub
mov
add
in
bound
push
out
call
sub
shrl
outsl
clc
dec
call
lds
xor
enter
jge
jae
push
cmp
rcrb
cwtl
adc
and
inc
dec
call
and
or
int3
sub
xchg
mov
jae
stos
jp
mov
xchg
jns,pt
roll
loope
inc
mov
inc
fsubrs
int
add
xchg
mov
mov
std
lock
mov
or
dec
das
enter
mov
mov
test
in
movsb
cld
mov
dec
addr16
in
cmp
dec
inc
lret
mov
mov
repnz
cltd
fstps
and
insl
push
pop
jnp
push
pop
push
xlat
ja
jmp
movsl
scas
js
fnstsw
inc
fdivr
jne
ja
lcall
add
sub
rclb
mov
inc
push
or
mov
scas
lods
and
and
lret
push
adc
xor
add
mov
xchg
push
into
cs
stos
ja
add
imul
rcrb
sub
outsb
sbb
mov
sub
inc
movsl
xchg
mull
in
or
cmpsl
dec
mov
in
ds
ss
xchg
or
dec
pop
or
pop
cltd
rclb
xorb
movsb
dec
mov
sbb
fdivs
mov
mov
in
sbb
imul
jmp
jg
pop
sar
fincstp
mov
in
xor
cmc
popf
xchg
push
pop
mov
jp
call
mov
cltd
xchg
cmp
out
mov
cmp
sbb
pop
add
insl
in
out
sub
cwtl
jge
jmp
cmpsl
aas
mov
inc
or
aam
outsb
aaa
pop
mov
pushf
pop
and
cmp
insl
daa
inc
sub
nop
int3
adc
mov
push
cltd
arpl
mov
jmp
inc
int
mov
mov
jg
dec
lods
fisttpll
gs
add
es
call
jg
int3
dec
push
inc
mov
or
movsl
int3
xchg
push
adc
je
cltd
dec
fbstp
or
pusha
mov
add
mov
xor
fs
scas
cli
stos
cs
pop
les
dec
dec
addl
and
les
push
sbb
je
lret
push
mov
icebp
push
pusha
or
pop
push
xchg
lods
mov
clc
test
dec
clc
dec
sub
or
dec
pop
push
sbb
faddp
fld
and
push
sub
sbbb
jno
and
bnd
mov
test
mov
sar
jmp
or
shll
xchg
mov
pop
fdivp
cs
rcl
rcll
jne
jp
push
inc
data16
xchg
arpl
stos
pop
lret
inc
push
ds
adc
xor
push
sahf
test
repnz
jns
gs
aam
mov
adc
sbb
loope
repz
in
mov
jb
xor
cmp
cmpsl
xchg
pop
jecxz
loope
jge
and
or
int3
mov
xlat
xor
pop
xchg
dec
mov
mov
mov
adc
fnsave
adcl
mov
testb
push
out
inc
pop
fucomp
ret
push
inc
movsl
and
mull
sub
psubb
sub
mov
push
mov
cmc
inc
add
xchg
out
mov
push
push
daa
fcmovnu
sbb
sahf
mov
push
pop
divb
cmp
test
inc
inc
or
aas
int
sub
xor
adc
shlb
hlt
jp
push
sti
int
push
out
cli
add
lcall
jg
mov
jmp
push
pushf
inc
outsb
lret
adc
pop
xor
dec
jb
cmp
jno
adc
mov
mov
stos
push
xor
rorb
out
stc
cwtl
fdivrl
add
jno
xchg
fwait
jle
pop
lcall
inc
enter
sub
jno
jbe
cmpsl
xchg
dec
adc
sbb
fstpl
dec
pop
insl
das
lahf
mov
xchg
daa
int
xchg
cli
adc
xchg
inc
rorl
hlt
testl
sbb
dec
or
cmp
out
fnstsw
fwait
xchg
rol
mov
or
popa
fisttpll
push
gs
mov
xor
ss
sbb
leave
or
cmp
ja
or
cld
push
popf
lods
repnz
loope
repz
push
pop
or
cmp
dec
jle
mov
adc
fdivrs
mov
push
test
jb
test
push
inc
xor
xchg
inc
inc
jnp
adc
aam
mov
loopne
push
addr16
adc
pusha
jg
dec
scas
sbb
pushf
sarb
mov
add
or
stos
push
out
icebp
mov
popa
adc
adc
mov
sub
xchg
lret
xor
fs
and
xor
jle
sub
cld
inc
ret
insb
adc
iret
cmpsl
inc
scas
and
imul
mov
sub
cmc
sti
jno
into
dec
sbbb
push
add
and
scas
mov
pop
mov
lahf
jge
mov
andl
sbb
stc
js
xchg
cwtl
call
push
xlat
mov
push
sub
push
push
mov
outsb
and
out
aaa
outsl
mov
fwait
push
sub
cwtl
ljmp
test
sbbb
cld
mov
cmp
xchg
test
leave
loope
pop
scas
mov
mov
stos
mov
mov
ja
add
loop
push
cmpsl
add
insb
cs
clc
lods
stos
mov
fsubr
and
xor
mov
fcmovnu
imul
mov
add
in
cmp
out
shlb
pop
lcall
pop
and
mov
ja
or
insl
cmp
mov
mov
jmp
xchg
xor
cmp
in
repz
pushf
fadds
out
lods
xor
mov
das
mov
push
stos
mov
push
cmp
push
jecxz
rorb
jecxz,pn
dec
sbb
pop
sub
fisubs
les
adc
cwtl
mov
lods
xchg
dec
xor
mov
jo
daa
pop
popw
es
scas
mov
sbb
int
sbb
jbe
insb
in
ds
pminsw
sub
cmp
pop
faddl
jmp
mov
add
jge
iret
scas
push
mov
or
and
test
push
or
sub
add
mov
lods
jbe
sysenter
aaa
cltd
lret
sub
jmp
ljmp
xchg
xor
aaa
push
or
sub
or
mov
add
and
rcl
mov
cmpsb
stos
dec
fld
mov
test
ss
outsl
inc
sub
rorb
lcall
inc
adc
pop
std
jmp
and
xchg
jae
pop
jl
lds
incb
jge
xchg
ss
and
xor
icebp
lret
rorl
sub
fcmovnu
dec
stc
pop
stos
pop
or
mov
fidivrl
pop
insb
mov
mov
repz
lods
xor
mov
xchg
mov
xchg
scas
and
sbb
push
mov
repnz
xchg
push
sbb
sub
dec
xchg
add
loope
xchg
out
xchg
mov
sbb
inc
mov
push
fidivrl
or
inc
push
add
jp
cmc
iret
js
and
mov
fcompl
cmp
mov
push
into
les
jecxz
jnp
xchg
hlt
into
mov
cmp
addr16
mov
aam
jg
std
xlat
cmp
rcrb
dec
cmpsl
ret
inc
rorb
cmpsl
mov
add
mov
push
xlat
jmp
bound
pop
or
rcrb
aas
repnz
xorl
jb
ss
or
enter
aam
mov
outsl
mov
push
or
enter
frstor
cmp
mov
and
add
mov
push
mov
push
push
test
add
xchg
das
jae
xlat
cli
mov
jno
and
jp
cmpsl
mov
jb
cs
insl
mov
sbb
cmp
inc
addl
ja
inc
lcall
add
das
jns
rorl
sub
ds
mov
mov
mov
add
or
lods
xchg
xchg
lock
outsb
sbb
jmp
cmpsl
icebp
jno,pn
mov
xchg
rcll
popa
push
adc
scas
cmp
push
ret
sub
mov
subl
cmpsl
cmpsl
pop
mov
inc
mov
add
pop
push
or
outsb
cmp
mov
fnstcw
mov
jno
add
ret
rorl
sbb
mov
add
pop
mov
mov
das
pop
insb
lret
test
mov
rol
in
pop
sub
rcr
push
int
pusha
pop
iret
jbe
dec
mov
mov
dec
and
fcmovne
jmp
mov
mov
cmp
loopne
cmp
into
fcoms
roll
jmp
sub
test
negb
sbb
mov
add
inc
cli
lods
leave
imul
inc
fnstsw
xor
jmp
add
pop
stos
pop
repnz
in
and
outsb
pop
or
out
rorl
out
pop
dec
xlat
xchg
push
inc
loop
out
or
inc
scas
xor
fistl
aaa
test
jge
adc
add
push
or
das
dec
pop
xchg
in
lret
pop
pop
dec
mov
faddl
into
cs
push
leave
insb
outsl
inc
mov
push
repz
movsb
add
lret
add
jle
and
push
fisttpll
aaa
cmp
cmc
jne
dec
xlat
xor
fisttps
add
je
test
push
repz
mov
jae
cmp
cmp
dec
into
lret
sub
push
ret
idiv
test
das
dec
mov
scas
pop
xor
fstl
cmp
mov
outsb
addl
rcr
xor
jl
jno
les
xchg
lock
and
pop
pop
loop
and
out
clc
jp
pop
mov
jns
cmp
mov
jge
iret
cmpsb
imul
fldt
mov
pop
sub
dec
in
test
out
leave
lds
jno
fcmovnu
xchg
addr16
xchg
xchg
add
sbb
xor
popf
lods
ja
cmpsb
test
dec
std
add
mov
int3
dec
cld
inc
pop
or
pop
xchg
add
bound
aad
pop
and
mov
mov
daa
ljmp
jno
and
adc
in
inc
add
push
lret
dec
pusha
adc
movsb
clc
outsb
nop
popa
lcall
jp
cmp
cmp
movsb
sbb
jg
pop
adc
cmp
push
and
mov
mov
mov
mov
and
aaa
xchg
shll
aad
ss
xchg
xor
mov
roll
mov
add
push
push
ds
inc
js
cmpb
fcmovb
pop
jno
mov
scas
add
jmp
