push
add
add
add
lea
add
add
xchg
or
sub
sbb
push
mov
cmp
or
pop
in
xor
xchg
sahf
mov
sbb
or
or
roll
out
out
shlb
inc
sub
and
add
aad
rorb
jg
bound
lret
rol
les
pop
push
xor
imul
prefetch
dec
push
mov
xor
inc
xor
inc
xchg
mov
mov
pop
inc
xchg
mov
ja
or
adc
push
mov
ficoms
sub
jp
or
push
push
inc
in
cmp
mov
rolb
sarb
dec
mov
xchg
fldt
xchg
xor
les
cmc
lcall
adc
add
aaa
cmp
push
dec
jmp
out
push
sub
fbstp
imul
mov
roll
adc
cmp
mov
rcrl
add
push
inc
cltd
imul
xor
imul
stos
sbb
and
lds
nop
mov
xor
test
or
inc
xor
xchg
sahf
and
bnd
lahf
inc
mov
stos
xchg
shrl
cmc
ds
cltd
rclb
shrl
push
fidivrs
fs
pop
push
iret
insl
xlat
mov
bound
in
xor
iret
and
adc
clc
or
push
jge
add
cmpsb
cmp
addl
inc
pop
in
mov
mov
mov
test
rdpmc
jg
icebp
push
mov
int
and
test
jb
sbb
or
popf
xchg
cmp
aad
dec
and
ret
sub
push
push
xchg
push
and
push
in
out
push
inc
xchg
push
lret
and
out
pop
cltd
stos
sub
icebp
lods
lods
mov
and
sbb
imul
daa
ds
cmpsb
je
xchg
add
mov
or
dec
xchg
and
xchg
inc
fs
frstor
cmp
sub
pusha
sbb
xchg
ja
jge
or
inc
mov
mov
xchg
jp
mov
popa
cwtl
add
fcmovnu
pop
push
xchg
xchg
lods
aam
outsb
insl
incl
sub
adc
shlb
mov
add
inc
ret
pusha
inc
in
lds
cltd
and
jae
push
hlt
mov
jb
push
mov
cmpsl
xchg
sbb
xchg
or
pop
mov
add
lea
aas
cwtl
pop
imul
mov
popa
xor
lcall
mov
jl
in
and
cmp
cmc
cmp
adc
add
adc
dec
push
push
frstor
pop
push
pop
sti
loop
jb
cld
sahf
loopne
test
inc
fsubr
cmp
enter
mov
and
pop
fdivs
daa
test
fldcw
add
lods
int3
aam
jo
subb
daa
mulb
push
cmp
and
mov
or
pop
add
dec
lds
cwtl
adc
enter
scas
lock
cmpsb
loopne
or
sahf
mov
push
rcll
lods
pop
and
mov
das
jle
inc
ret
cwtl
xor
repnz
inc
inc
sub
xor
aad
sbb
cmp
and
jle
xor
sub
sbb
sahf
into
push
outsb
popf
mov
scas
inc
pop
dec
jl
pop
cwtl
sbb
mov
pop
cmp
or
sub
mov
dec
mov
jecxz
sbb
mov
bound
testb
cli
cmpsb
inc
push
insl
cmp
xchg
push
xor
push
and
inc
fs
aas
push
sbb
nop
pop
es
scas
or
leave
push
std
sub
aam
cld
pop
or
insb
cmp
xchg
sub
out
jge
cmp
and
je
mov
mov
push
es
andb
adc
pop
orb
inc
popf
pop
mov
sub
lods
sbb
das
xor
rol
push
outsb
mov
push
add
push
pop
push
rcrl
push
mov
xor
add
addb
push
push
push
sbb
push
and
sub
stos
or
fmuls
repz
mov
mov
stos
jge
push
jp
dec
repnz
inc
jbe
sbb
and
pop
mov
rcll
stc
push
aas
mov
sub
je
test
sbb
push
mov
ret
in
shll
push
data16
xchg
jne
mov
cltd
dec
aaa
inc
call
push
push
jle
shll
push
hlt
sbb
sub
fdivrp
jmp
int
sub
test
cmp
dec
add
inc
mov
pop
sbb
cmpsb
lods
push
rcrl
xchg
inc
insl
and
pop
jle
icebp
adc
xor
mov
pop
inc
fldl
cmpsl
test
pop
push
lds
lods
rcll
stos
adc
scas
cmp
stos
or
push
stos
iret
pop
call
xchg
pop
out
testl
cmc
lret
xor
into
mov
sbb
xchg
movb
repz
push
pop
xor
fildl
xor
pop
cld
xchg
pushf
test
scas
subb
lods
lcall
popf
sbb
inc
inc
inc
mov
xchg
fstl
aad
pop
popf
cli
fiaddl
outsl
jb
jb
lock
rclb
fistpl
test
loop
adc
imul
cmp
shlb
xchg
and
cmp
outsl
jno
dec
inc
ret
add
and
ljmp
push
pusha
pop
lcall
sbb
aad
adc
mov
push
push
icebp
bound
dec
testl
adc
xchg
fadds
mov
inc
pop
xchg
push
sbb
popa
stos
add
mov
fdivs
add
std
xchg
xlat
jp
cmpsl
xor
notb
es
add
aaa
stos
xchg
cmp
data16
pop
mov
push
mov
pop
or
dec
pop
loop
cmp
sub
inc
movsb
sub
sub
sbb
das
arpl
push
shll
and
lds
inc
sub
aad
into
mov
pop
mul
mov
ja
push
in
adc
sbb
and
stos
insb
call
mov
scas
int
inc
dec
leave
jp
lcall
lds
out
or
fcmove
jb
lea
push
loopne
xchg
int
pop
mov
lea
clc
xchg
fst
inc
add
lea
push
mov
inc
cmpsl
and
aas
cltd
adc
imul
mov
outsl
clc
int3
xor
add
divb
cs
insl
dec
pop
inc
fcmovnb
mov
in
xor
out
gs
stos
cmpsb
mov
mov
push
xchg
popa
pushf
xor
or
call
in
mov
adcl
or
bound
push
xchg
sahf
sarb
xor
cmp
or
xorl
mov
insl
lea
out
cmp
mov
call
push
fsub
sahf
out
pop
nop
in
add
adc
fistpl
mov
or
jbe
xor
lds
add
outsl
das
pop
adc
jbe
insb
ljmp
sbb
mov
sbb
add
stos
mov
in
in
xor
xchg
int
pop
test
mov
xchg
test
and
dec
mov
mov
pop
mov
inc
push
inc
jp
lcall
xchg
std
aam
or
test
test
movsl
push
cmp
mov
ljmp
and
mov
sbb
and
fimuls
fs
jns
cwtl
xchg
mov
rcr
loopne
hlt
shlb
loope
push
insl
pusha
push
inc
popf
fistps
cmp
mov
jg
loop
dec
ret
pusha
sahf
jge
arpl
adc
aaa
cmp
pop
jmp
mov
std
push
push
jno
repnz
cmpsb
movsb
lahf
xchg
iret
xchg
cmc
popf
jmp
sti
xchg
push
addl
aaa
mov
mov
dec
sahf
cmp
shr
and
jno
inc
mov
pop
dec
push
pop
sahf
js
enter
mov
shll
nop
inc
mov
xchg
jl
cs
out
inc
xchg
data16
mov
andb
movsb
pop
pushf
mov
rorl
ret
rorb
lahf
push
push
loop
mov
push
mov
cmp
xchg
or
icebp
imul
sahf
jl
stos
dec
ds
mov
push
call
ficomps
popa
loop
adc
or
xlat
sbb
insb
enter
rclb
xor
mov
iret
mov
xchg
sbb
cmp
dec
cs
sub
lods
hlt
push
mov
test
jo
pushf
sbbb
push
push
adc
aam
adc
sub
dec
gs
dec
and
dec
adc
in
or
lods
xlat
das
fsubrl
jp
stos
xor
aaa
mov
pop
dec
push
or
inc
xchg
rcr
pop
fistpl
pop
fwait
lret
pop
pop
fcoml
jle
mov
sub
rcll
movsb
nop
inc
sbbl
and
dec
pushf
adc
sbb
sbb
pop
pop
xor
and
push
enter
xor
add
popa
sbb
or
pcmpeqd
ja
sbb
mov
in
rol
add
ds
lods
ret
shrb
mov
ljmp
and
adc
jp
cmpsl
rolb
cwtl
sbb
adc
sbb
es
cmp
cltd
adc
sbb
xchg
orb
pop
or
lcall
mov
sbb
pop
fcmovb
sbb
add
sahf
sub
scas
xchg
cmpsb
sahf
jge
lock
fcoml
ficomps
test
dec
test
mov
inc
sbb
test
and
and
enter
jb
adc
add
icebp
or
pop
icebp
push
scas
sub
ds
mov
add
adc
mov
aam
sarl
pop
test
xchg
xchg
mov
call
mov
sbb
dec
sbb
out
or
mov
dec
mov
loop
mov
mov
sbb
pop
dec
in
jae
mov
out
lods
sahf
sbb
fnsave
and
cs
aam
jle
test
loop
ljmp
add
cmp
jb
and
js
in
mov
jecxz
xor
loope
push
fadds
push
xor
push
inc
lahf
movsb
adc
leave
mov
xor
dec
jmp
ret
ret
adc
jp
dec
insl
lock
aam
push
adc
mov
lods
mov
repz
arpl
pop
xor
adc
mov
daa
les
loope
fnstenv
and
mov
push
lret
fstpl
adc
je
fwait
lret
sbb
push
lcall
push
cmp
jp
mov
xor
fsubrs
rorl
add
jl
jno
mov
xor
inc
fs
or
cmpsb
add
mov
ret
out
shufps
push
scas
sub
or
imul
sub
pushf
fistl
int
gs
lahf
scas
rolb
mov
fwait
mov
pop
inc
push
bound
pop
adcb
test
or
bound
shrd
fldcw
lods
mov
andl
cmp
mov
testl
or
mov
mov
pop
sbb
push
gs
push
pop
in
mov
stos
jnp
sbb
rcrl
xlat
jecxz
scas
mov
adc
lock
addb
mov
cmp
aam
jne
inc
pusha
lret
add
es
sbb
jge
iret
dec
jmp
cmp
cwtl
xchg
sub
xor
mov
push
ss
sbb
inc
or
xchg
arpl
mov
sbb
jecxz
std
inc
adc
stos
lods
sarb
sbb
or
adc
cmpsl
icebp
cwtl
stos
push
xlat
ja
xchg
cmp
mov
push
and
fwait
cltd
sub
in
sub
mov
leave
arpl
inc
jno
xor
pop
pop
or
jnp
mov
leave
outsb
andl
adc
sbb
xor
stc
mov
sbb
cmp
push
adc
in
sub
xchg
mov
test
popa
pop
arpl
sub
or
mov
push
aaa
and
cmpsl
xchg
imul
lock
call
mov
dec
mov
repz
cmp
inc
jae
and
dec
cltd
shrl
push
sub
pop
cmp
or
jmp
xor
jo
ds
xchg
mov
ret
jbe
leave
push
xchg
pop
shll
or
outsb
add
pop
pop
sub
mov
test
ja
or
cld
outsl
mov
sahf
sub
pop
scas
in
sbb
enter
push
test
xchg
mov
lods
test
enter
sub
pusha
push
cld
inc
in
jo
xchg
into
xor
or
xchg
and
xor
mov
les
lret
movsl
push
sbb
sub
push
mov
fmul
or
push
arpl
test
mov
push
jbe
insl
sbb
mov
lods
sbb
in
adc
cmpb
mov
rcll
and
push
lods
cmc
mov
inc
mov
xor
shr
int3
stos
mov
outsl
push
sub
mov
out
test
push
sub
mov
mov
cmp
push
out
ds
inc
dec
push
fmull
sarl
push
push
jmp
cmp
filds
mov
sbb
scas
or
lcall
das
cmp
xor
je
xchg
cmpsl
cmpb
test
add
divb
sub
mov
fwait
rclb
mov
xor
xor
adc
shll
int
mov
clc
js
push
jmp
push
out
inc
push
and
clc
ljmp
sbb
inc
jl
cli
inc
or
push
jbe
xchg
add
mov
insb
push
mov
js
mov
lea
scas
es
test
lret
out
or
in
dec
mov
add
cmp
mov
andl
xchg
lret
inc
sbb
inc
mov
mov
add
cmpl
pop
imul
mov
sarb
cltd
cmp
pusha
or
rorb
xor
in
push
mov
data16
mov
jb
mov
mov
mov
pop
test
cli
mov
mov
inc
bnd
lea
xchg
add
mov
xchg
loopne
push
pushf
pop
pop
inc
dec
mov
xor
add
mov
sub
sbb
es
adc
loope
in
sbb
jmp
and
add
pop
lods
mov
shlb
dec
mov
bound
xchg
nop
fnstsw
aad
jbe
push
inc
out
push
xchg
push
lcall
mov
push
sarb
scas
test
das
xor
repz
hlt
or
fisubs
push
lds
mov
sbb
xor
orb
lds
sbb
jns
xor
nop
ja
test
int3
aad
rcrl
xlat
or
xor
movsb
aad
repz
ja
lods
test
into
sub
mov
ret
push
sub
dec
stc
mov
in
in
cli
repnz
sub
mov
jno
mov
mov
setl
push
fwait
mov
icebp
fists
cmp
xchg
nopl
xchg
xlat
lahf
rcrl
add
and
mov
pop
dec
enter
fldt
loope
fisubl
push
test
push
mov
xor
or
jl
dec
cmovne
mov
dec
std
pop
mov
xor
push
mov
into
push
fwait
mov
into
sub
insl
fs
lods
push
es
imul
push
push
pop
clc
sbb
xchg
xor
mov
imul
adc
or
mov
xor
mov
mull
out
adc
xlat
sbb
adc
call
lds
mov
mov
mov
inc
pop
add
add
add
xor
xor
scas
sti
pop
xorb
ds
adc
fisubrs
adc
jno
xchg
imul
loope
push
fists
jg
sti
rcrl
jecxz
and
ficompl
cmp
stos
out
dec
fdivrl
lahf
in
mov
stos
loopne
mov
mov
mov
clc
sub
dec
inc
dec
sbbl
inc
loopne
mov
imul
cltd
sub
dec
inc
inc
add
dec
push
shlb
mov
or
sbb
imul
stos
ljmp
ja
in
cs
inc
fwait
push
adc
pop
mov
xor
push
sub
lea
cmp
dec
sahf
jmp
xchg
jg
js
inc
mov
cmp
push
jmp
inc
popf
test
jle
adc
or
sub
jp
xlat
xor
test
mov
call
rclb
jno
addr16
pop
js
faddl
xor
add
dec
stos
and
push
add
test
add
mov
dec
or
addb
sbb
imul
sub
xor
mov
push
cld
data16
and
neg
jecxz
mov
dec
scas
int
adc
xchg
or
pop
int3
cld
push
add
cmp
xor
sbb
icebp
jmp
and
ret
xchg
cmp
jmp
sub
scas
hlt
out
add
js
xlat
inc
mov
out
stos
aad
shlb
dec
pop
or
and
daa
into
pop
jl
mov
ja
cmp
ljmp
hlt
mov
cmp
dec
mov
dec
cmp
sbbb
test
xchg
and
adc
in
sar
cmp
out
xchg
or
pop
fwait
add
insl
or
ss
mov
neg
add
popf
sbbb
mov
push
add
fdivp
aad
loope
lods
pop
mov
cld
stos
dec
and
pusha
sbb
sahf
ja
out
scas
sbb
inc
jne
enter
inc
cmp
add
pop
ds
jne
cs
mov
xchg
aad
bound
int
mov
js
pop
mov
ficoml
jle
inc
scas
dec
icebp
loope
test
mov
or
lea
int
test
mov
dec
lret
add
stos
out
fs
divps
imul
lock
ds
sbb
dec
mov
jno
lret
in
pop
out
movsl
add
aaa
scas
sbb
inc
adc
push
in
lods
or
ja
push
pop
xchg
ljmp
stos
pop
pop
cmp
out
and
push
cmp
call
loop
popa
xor
inc
or
in
and
pushf
and
mov
stos
out
mov
or
and
lods
push
rcrb
add
inc
aas
test
pop
scas
into
mov
mov
jne
push
cmp
jnp
lds
push
addr16
bound
pop
test
leave
loopne
dec
sub
mov
jb
add
adc
sub
das
daa
lret
mov
xor
sub
xlat
notb
std
inc
dec
pop
add
test
add
ljmp
ss
stc
lret
sbb
cmp
test
mov
ficompl
push
pop
icebp
faddl
cmc
pop
test
dec
imul
fscale
pop
mov
xchg
jne
int
andb
jae
sbb
stc
dec
sub
shll
cmpsl
and
sub
jl
and
cmc
cmpsl
push
and
ret
xchg
xor
leave
add
repnz
inc
jge
aaa
sub
push
and
lret
fcoml
pop
mov
pop
fnsave
xchg
and
jbe
fs
push
imul
enter
add
lea
addb
mov
adc
fs
push
nop
aas
pop
inc
jle
inc
nop
and
mov
repz
sub
aaa
mov
lock
mov
inc
aam
or
adc
ss
mov
shr
mov
inc
setno
push
bound
test
inc
fistps
cmp
scas
and
adc
enter
test
sub
in
mov
xor
ret
xchg
xchg
push
daa
fs
out
js
add
arpl
cmpsl
and
mov
pop
test
push
cmp
cmpsl
sbb
and
push
and
pop
loopne
fcompl
pop
stc
cmp
xor
fsubrp
push
xor
add
or
or
out
les
clc
cmp
mov
test
or
dec
dec
popa
jge
add
aad
out
mov
ljmp
lcall
test
pushf
cmp
movsb
mov
lret
shr
andl
mov
push
pop
xor
das
test
mov
or
mov
gs
hlt
add
mov
xorb
mov
push
jne
sahf
or
js
test
cmp
cs
iret
sub
rolb
dec
push
sbb
test
mov
mov
mov
jno
mov
ljmp
push
xchg
les
repz
loopne
pop
pop
icebp
addr16
lock
dec
and
in
dec
in
jmp
cwtl
ljmp
js
jne
xor
stos
mov
daa
add
jecxz
and
sbb
pop
jno
xchg
push
fs
jg
aas
inc
repnz
mov
push
adc
jns
daa
idiv
jbe
push
pop
dec
sub
dec
cmc
dec
rcrl
push
dec
inc
inc
xchg
xor
mov
dec
dec
push
push
cmp
sub
jg
pop
push
loop
adc
mov
gs
mov
jo
dec
lock
sbb
push
mov
mov
xor
xchg
sub
repz
add
push
jmp
jge
mov
pusha
ljmp
ret
sub
insl
jp
inc
dec
cmp
data16
dec
loop
xor
jne
stos
lea
lds
sahf
jl
jg
and
dec
lock
add
mov
shlb
mov
leave
pop
sbb
jns
dec
mov
ljmp
int
test
or
adc
enter
aad
dec
and
and
lret
xor
test
out
fidivs
xor
and
push
push
jo
sti
sbb
xor
dec
push
jp
jae
in
xlat
add
repnz
jmp
cmp
mov
xor
sub
popf
pushf
dec
mov
inc
cmc
aas
add
lahf
jg
pop
decl
sbb
lcall
push
xchg
cmp
add
in
lahf
jo
rolb
fcmovnb
repz
iret
sti
je
mov
mov
mov
push
push
sbb
loop
scas
or
push
aas
pushf
push
add
push
push
ljmp
nop
mov
dec
stos
push
sbb
pop
daa
outsb
lods
dec
inc
pop
xor
lds
andb
pop
faddl
arpl
gs
mov
orl
cmp
or
lret
pop
pop
stos
sub
subb
stos
nop
dec
into
jecxz
das
adcb
mov
jge
mov
mov
jl
lret
inc
or
jbe
loopne
and
jb
fnstenv
pop
push
add
enter
mov
imulb
lret
push
js
scas
adc
jecxz
mov
push
scas
add
aaa
cwtl
mulb
cmp
fiadds
xor
sbb
movl
xor
pushf
sub
daa
testl
xchg
xchg
mov
inc
mov
scas
jbe
adc
xor
or
stc
cmc
fisttpll
push
sbb
pushf
fidivrl
cmp
xor
mov
mov
cmp
test
fsts
outsb
fsubr
fwait
in
call
inc
pop
jae
jns
xor
push
mov
mov
inc
scas
fwait
in
test
daa
rcll
mov
inc
jo
and
in
mov
repz
lret
loop
repz
push
or
notb
xchg
inc
add
bound
inc
pop
pop
mov
nop
xchg
pop
dec
sub
dec
xor
adc
cmp
les
or
mov
sbb
sub
movsl
rcl
fists
dec
mov
mov
js
xor
sbb
sub
pop
pop
sbb
test
addr16
add
cmpl
inc
pop
cmpl
cmp
mov
dec
imul
sbb
inc
sub
test
cmp
psrad
ret
push
add
out
jmp
adc
sti
outsl
nop
in
inc
lock
jne
and
addr16
sub
movsl
mov
in
or
push
rorb
dec
cmpsb
dec
data16
test
je
push
push
cltd
jb
pop
insb
xchg
xchg
xor
add
pop
and
loope
xchg
sbb
cli
adc
nop
sbb
and
int
jb
nop
andb
xor
inc
xor
adc
ds
test
int3
shrb
fbstp
mov
or
jg
outsl
cltd
ja
subl
xchg
subl
xchg
incb
push
mov
ja
inc
add
roll
cmp
or
push
adc
ficoms
sti
pop
jbe
jne
push
mov
xchg
or
cmp
pop
ss
dec
inc
fsubs
and
loop
jmp
lea
xor
rolb
and
and
and
adc
push
add
scas
dec
mov
fucomip
fnsave
cli
cmovge
sub
adc
adc
or
add
mov
fnstcw
mov
push
std
pusha
xchg
out
cmp
sub
jno
inc
loop
popa
inc
subl
leave
inc
imul
add
mov
jo
lea
add
adc
subb
xchg
inc
and
mov
mov
lea
cmp
adcb
adc
or
mov
push
xor
cwtl
cmpsl
mov
push
adc
nop
popf
nop
ret
inc
js
ret
fwait
push
mov
inc
mov
add
test
fwait
test
lods
cs
outsb
and
mov
pop
xor
and
aam
movsl
jmp
sub
dec
sub
lahf
pop
mov
adc
and
out
sbb
cmp
enter
and
mov
xchg
sub
inc
adc
or
pop
es
dec
aas
dec
mov
test
mov
add
imulb
in
pop
push
pop
subl
fs
popf
aam
nop
lock
pop
and
inc
fnsave
test
data16
sbbb
inc
mov
test
enter
add
or
cmp
fisttps
or
or
jmp
or
cmpsb
xchg
xor
and
push
dec
dec
push
dec
jnp
jl
sbb
inc
test
andb
xor
ret
inc
notl
enter
dec
rorl
add
and
xor
xor
push
and
movsl
mov
inc
pop
or
daa
or
xor
imul
nop
lahf
cwtl
ror
and
test
cltd
push
cltd
and
and
pop
mov
push
mov
inc
mov
pop
jae
mov
jae
sub
fwait
into
lds
mov
mov
jmp
stos
push
inc
addr16
push
sub
repz
out
sbb
push
test
scas
lods
inc
xor
aas
jne
add
and
add
nop
mov
fs
push
leave
adcb
roll
roll
aaa
mov
es
lret
mov
xor
mov
adc
inc
xchg
sbb
inc
adc
cli
sbb
fs
loope
sti
popa
and
add
adc
dec
sbb
adc
push
dec
sbb
dec
cmpsb
push
pusha
in
stc
in
lcall
daa
jne
das
bound
imul
bound
jp
and
adc
push
and
fsubs
and
stos
mov
je
xchg
adc
push
sbb
xchg
or
in
jmp
mov
push
std
loopne
insb
lea
popa
add
bound
std
cmc
sub
push
stc
sub
aas
or
fimull
cmp
cmpsl
enter
lret
xchg
inc
add
sub
add
and
adc
nop
les
dec
mov
or
test
rorb
pop
or
or
mov
and
or
andl
fildl
dec
mov
add
notl
lods
notb
test
adc
jl
pop
insl
movsl
inc
arpl
and
mov
adc
sti
ss
ds
hlt
inc
repnz
mov
or
test
mov
jg
jbe
iret
nop
and
inc
mov
push
inc
lret
xor
nop
pusha
nop
xorb
mov
ds
cmpsb
inc
lods
or
fiaddl
repnz
cmp
movsb
lahf
and
and
mov
or
test
mov
mov
addr16
js
adc
in
or
push
outsl
mov
fwait
repnz
stc
cmpl
xchg
clc
jle
dec
adc
scas
cmp
jns
jo
js
stos
dec
repnz
mov
out
orb
mov
adc
rcrl
adc
jno
out
or
sub
jecxz
jmp
add
and
push
mov
jecxz
out
xor
jne
cmp
inc
je
leave
aas
adc
sub
push
mov
sbb
pop
mov
xor
or
stc
clc
mov
and
xor
and
or
pop
mov
or
xor
addb
mov
xor
or
sub
cmp
fstpl
mov
lock
imul
add
decl
sbb
sbb
lret
add
xor
stos
insl
xor
mov
ljmp
orl
sub
jne
pusha
cwtl
out
fildll
loop
inc
call
mov
jne
sarb
fsubrs
icebp
jge
cmp
dec
push
xor
rcrl
cmp
jmp
ljmp
repz
stos
mov
sub
and
push
insb
das
push
fdivrp
cmp
dec
bound
pop
jg
in
push
out
jp
pop
arpl
mov
mov
cmp
inc
sarb
adcl
add
sbb
mov
imul
sub
mov
inc
loopne
inc
loopne
adc
outsl
fwait
mov
das
loopne
cltd
in
jl
add
loop
ja
mov
cmp
dec
dec
incl
adc
fists
pusha
lret
fisttpl
xor
adc
dec
scas
cwtl
test
add
xchg
jle
add
in
sub
sbb
pop
inc
sti
enter
and
push
fcom
and
sub
sub
addl
std
cmp
push
shll
xchg
push
or
aam
xchg
fcoms
xor
adcl
sbb
out
xchg
xor
repz
je
fcoml
mov
mov
call
inc
inc
mov
js
adc
incl
lods
add
dec
jle
sahf
fwait
adc
push
popf
sbb
loop
fidivl
sbb
in
loopne
out
add
pop
mov
mov
stos
push
cmp
out
pop
dec
xchg
cwtl
shrl
in
ret
sbb
jne
dec
ds
inc
pop
cwtl
je
gs
out
cld
pop
lds
mov
or
jo
jno
aad
or
jecxz
leave
cld
out
lock
ss
gs
and
push
scas
lock
test
mov
popf
std
xchg
pushf
xchg
xchg
test
push
inc
rol
dec
cmp
pushf
mov
push
int3
mov
gs
mov
das
adc
fdivrs
in
xchg
jmp
xor
mov
aaa
bound
outsb
fadds
cmp
lahf
lret
dec
cmpsl
xchg
jl
adc
test
ret
test
int3
add
xor
aaa
push
jecxz
mov
mov
test
or
orb
push
mov
les
xchg
cmpl
jp
xchg
pop
call
jp
aam
sub
je
lahf
pop
mov
xchg
sub
cmp
xchg
push
inc
inc
sub
add
lret
icebp
xchg
std
or
jb
sub
jecxz
ret
cwtl
jns
cwtl
and
jb
sub
xor
sbb
xor
jbe
sti
mov
nop
mov
movsb
and
jo
loopne
xchg
mov
call
cmp
lret
or
or
std
pop
adc
inc
mov
sbb
lcall
cmc
outsl
popf
cmpsl
or
xchg
sub
scas
arpl
adc
lods
ds
jnp
xchg
nop
mov
pop
aam
push
add
clc
mov
fwait
clc
or
jb
pop
rcl
imul
cld
mov
stos
stos
inc
ljmp
movsl
mov
add
fsubl
cmc
fdivs
xchg
xchg
and
adc
adc
cmp
aad
mov
or
scas
shll
movb
jg
in
stc
movsb
mov
or
adc
iret
jne
call
shll
jbe
push
adc
in
push
inc
ss
call
lock
adc
cld
dec
xor
mov
mov
inc
or
je
push
sbb
out
cmpsb
subb
cwtl
test
fsts
pop
jmp
add
popf
rolb
adc
iret
mov
notb
cmc
mov
dec
xchg
aam
pop
and
mov
and
jcxz
mov
sub
mov
push
sbb
ret
push
adc
inc
inc
jo
loopne
push
cmpb
adc
jp
cmpsl
push
enter
ljmp
fidivrl
inc
data16
rclb
int3
pop
inc
nop
or
pushl
sub
adc
loope
or
lods
sub
je
shll
inc
xor
mov
faddp
repnz
mov
cmp
divb
mov
adc
insb
sbb
pushf
sbb
mov
xor
mov
xchg
add
push
shlb
or
mov
popf
cwtl
pop
mov
lret
sub
mov
dec
push
dec
pop
lea
fcomps
jns
mov
mov
dec
outsb
push
mov
mov
sbb
cmp
or
sub
roll
popf
add
push
pop
mov
nopl
and
decl
leave
imul
jmp
inc
test
cs
cmpsl
sbb
aad
enter
jmp
xor
rcll
sub
rcl
sub
add
push
test
mov
ljmp
movsb
test
push
mov
push
push
fimull
outsb
stc
andl
js
daa
or
push
ds
popa
jmp
pop
rdpmc
shrb
cmp
dec
js
testb
adc
stos
cmp
push
cmp
cltd
mov
mov
test
lret
repz
lock
xor
cs
cld
lods
cs
rcrl
dec
js
dec
test
outsl
mov
cli
jcxz
test
shrl
arpl
pushf
mov
mov
mov
and
dec
dec
adc
dec
ja
leave
pusha
insl
and
jmp
mov
push
push
sub
loopne
sub
out
js
decb
shll
lods
add
push
pusha
cltd
mov
aam
jbe
pop
push
adc
push
add
push
sbb
xchg
les
enter
movsl
minps
xchg
mov
test
sbb
cmp
xor
mov
mov
push
sub
jmp
cmp
and
jecxz
jmp
sbb
clc
xchg
or
mov
data16
cmp
dec
loope
mov
in
or
stos
scas
sub
fucomp
mov
cmp
and
call
sbb
xchg
insl
and
pop
jb
lea
rol
xchg
xchg
adc
mov
call
dec
push
and
jae
pop
push
inc
xchg
mov
cwtl
and
xchg
or
or
subl
stos
jge
sbb
aad
test
xor
push
stos
leave
xor
stos
movsb
mov
pushw
es
mov
pop
stos
cmpsb
cmp
jle
div
sub
mov
mov
aam
fdivs
cld
push
stc
sub
xlat
mov
sbb
cmpsb
fmull
mov
inc
in
mov
jmp
dec
rcr
daa
ljmp
ss
xlat
mov
dec
fmull
jl
push
xchg
lret
in
test
mov
ljmp
push
dec
xchg
sahf
insb
mov
jl
sbb
repz
shrb
dec
imulb
int
inc
mov
mov
push
push
push
pop
or
push
inc
sbb
cmp
cmc
in
ds
inc
dec
mulb
inc
incl
xchg
lcall
mov
imul
inc
mov
lret
pop
push
int
or
sbb
push
and
cmp
xchg
or
or
jb
xor
inc
cli
insb
ljmpw
inc
enter
stc
outsb
adc
mov
mov
pop
lds
test
sahf
or
loopne
arpl
sub
incl
stc
mov
pusha
jbe
push
sahf
flds
mov
xor
jae
mov
test
testb
stos
out
fistpll
jb
fidivrs
test
outsl
or
push
es
ljmp
sub
push
push
mov
inc
xor
or
daa
pop
sub
or
add
out
mov
adc
sbb
popa
pop
adc
test
mov
inc
sbb
mov
adc
push
test
ret
dec
sub
mov
jle
les
int3
loopne
testb
jle
pop
jmp
out
adcb
ret
pop
mov
cs
add
mov
int3
test
xor
or
xchg
pop
les
fdivl
nop
add
aad
dec
add
inc
leave
dec
adc
fwait
pushf
es
inc
pop
add
inc
inc
lret
or
inc
sub
add
insl
inc
lcall
jmp
mov
rcll
push
adc
pop
lds
jo
adc
iret
push
lret
dec
cmp
xchg
add
sub
or
aam
loopne
lret
sub
lds
push
rol
xor
jae
and
fwait
push
mov
cmpsb
shl
rol
dec
mov
roll
xor
imul
inc
fs
pusha
rclb
popf
push
stos
sbb
sahf
aas
and
out
xchg
lahf
es
in
xor
pop
push
jae
hlt
cmp
out
lret
sub
in
push
add
fwait
add
iret
sbb
jmp
fnstsw
test
outsb
mov
fcompl
notl
and
pushf
mov
or
nop
inc
out
mov
pushf
adcb
test
xchg
mov
decl
sub
orl
loopne
ss
xchg
cmp
bound
pushf
mov
cmp
dec
int
roll
mov
sub
xlat
outsb
lret
int
or
sbb
xchg
jae
pop
mov
lret
je
test
xchg
and
mov
pop
loope
mov
pop
jno
rclb
imul
xchg
aaa
mov
or
mov
fnstsw
gs
mov
mov
enter
sti
push
mov
movsl
sbb
rclb
and
sbb
mov
sub
ljmp
aaa
cmp
ret
or
pop
test
sub
ficoml
fs
inc
divb
inc
lock
stos
and
negl
movsl
movsb
mov
or
xchg
mov
or
pushf
and
inc
cmc
cmc
cmp
jl
daa
mov
lret
mov
arpl
sub
pop
nop
sbb
les
stos
negl
xchg
rep
fcmovnb
jp
push
fwait
rolb
test
sub
hlt
mov
xlat
fmull
mov
and
inc
and
or
sarb
unpcklps
and
js
sub
sbb
cmp
ljmp
pop
xor
sub
dec
push
inc
push
nop
filds
test
fidivrl
jmp
xor
push
shl
and
rcrl
dec
idiv
aad
repnz
fdiv
sarl
cli
adc
adc
cmc
sub
sub
mov
sbbl
mov
adc
syscall
test
xlat
mov
fisttps
in
push
mov
out
jmp
int3
leave
pusha
cli
or
pop
iret
les
mov
lods
or
xchg
push
mov
pop
test
fbstp
jne
adc
dec
dec
or
shlb
jp
cld
stos
scas
fsts
shll
dec
push
test
inc
shufps
int3
out
pop
lea
pop
push
pop
mov
dec
in
cs
in
mov
sar
xchg
mov
vprotb
adc
lock
sbb
test
sbb
rcr
insb
pushf
push
cmpsl
repnz
lds
mov
insl
loope
inc
pusha
adc
out
mov
lahf
fiaddl
and
jo
cmc
push
movsl
mov
sub
insl
pop
sbb
shl
dec
push
push
jnp
jmp
daa
mov
xchg
lea
mov
je
pop
xchg
push
or
fiaddl
jg
mov
inc
pushf
outsb
push
push
jns
mov
dec
cmp
add
les
push
lcall
cwtl
mov
push
and
enter
out
xor
shlb
dec
decl
insl
inc
adc
lea
inc
inc
sahf
idivb
jnp
fwait
inc
push
jle
pop
ret
fwait
pop
mov
xor
push
aas
nop
mulb
push
jg
out
enter
test
add
mov
test
andl
stos
and
enter
shlb
test
mov
int3
sti
dec
mov
ficompl
stos
stos
lahf
enter
sub
nop
add
les
psubusw
add
cmp
inc
mov
mov
in
fimull
popf
add
enter
or
fistpl
push
orl
inc
or
pop
js
inc
popa
stos
cmc
inc
pop
imul
fimull
addb
dec
aad
cmp
xchg
mov
mov
inc
inc
movsl
div
sti
cmc
inc
loop
mov
xor
push
adcl
dec
push
pop
push
and
stos
lods
in
jo
pop
push
mov
adc
or
and
iret
xchg
dec
mov
filds
sbb
mov
shl
pop
ja
jnp
push
mov
bound
insl
mov
ss
jne
imull
xorb
stos
push
pop
daa
rorb
or
or
and
and
popa
dec
ja
lods
sahf
pusha
jae
cmp
pop
and
or
pop
or
ja
xchg
lods
mov
js
xchg
adc
lahf
cmp
pusha
inc
jbe
repnz
adc
loope
leave
shll
fstl
cmp
mov
stos
sub
or
aam
sbb
or
stos
xchg
mov
or
aam
xchg
adc
mov
in
int3
pop
shlw
rolb
fisttpll
sub
adc
xchg
mov
and
lcall
adc
add
push
cmp
pop
push
inc
ret
lods
jp
cwtl
xchg
pop
lods
push
mov
pop
mov
adc
cmpsb
adc
inc
hlt
ret
fidivl
jns
rorb
js
push
mov
icebp
idivb
add
jmp
pop
in
out
xor
sbb
xchg
clc
push
and
cli
sbb
lock
dec
sub
mov
inc
mov
inc
fld
movsb
clc
ljmp
mov
fildll
pop
inc
pusha
pop
sbbl
cmp
das
mov
add
cmpb
loopne
clc
inc
sub
sbb
xchg
inc
stc
xor
dec
fsubrl
push
sti
cs
push
nop
dec
pop
int
int3
mov
adc
ret
sub
subb
test
call
movsl
sbb
sbb
incb
cmc
xlat
or
pop
cmp
std
or
mov
jae
dec
sub
dec
mov
scas
test
jmp
loopne
dec
stos
mov
pop
stos
pop
add
test
ds
scas
or
adc
aad
dec
push
pop
pushf
xor
dec
sbb
in
rcl
dec
pop
xor
mov
das
test
movsl
cmpsb
out
add
jo
incl
stc
xlat
push
js
jo
loop
mov
inc
jp
leave
add
or
cmp
sub
xlat
add
adc
cmp
rolb
mov
dec
inc
lret
movsb
sub
pop
rcr
add
jno
inc
rol
cmp
imulb
mov
add
mov
jmp
pop
or
sub
loopne
pop
icebp
xor
movsb
cmpb
repz
dec
loope
inc
mov
sbb
hlt
ret
xchg
lds
rclb
icebp
pop
pop
sahf
in
jne
adcb
out
scas
out
cmp
sub
inc
and
sub
mov
stos
sbb
add
insb
and
js
in
jae
sbb
jl
cmp
push
push
dec
insl
das
mov
iret
inc
bnd
addr16
xchg
sbb
and
inc
lcall
pop
fnstcw
sub
mov
int
cmpsl
mov
xlat
lret
out
mov
scas
jecxz
xchg
add
push
jne
pop
xchg
sub
sub
mov
cmpsb
adc
xor
pop
pop
enter
adc
cmpsb
jo
xchg
adc
sub
mov
xchg
push
inc
lods
nop
adc
push
and
lahf
mov
mov
adc
fimuls
dec
jne
out
fisubl
or
repnz
or
sbb
jle
and
pop
pop
and
clc
pop
aas
pop
sbb
xchg
cmp
add
inc
or
jno
pop
push
inc
pop
std
sub
mov
lock
jae
in
adc
decb
mov
mov
pop
cld
gs
jbe
pop
stc
out
xlat
sbb
lret
icebp
dec
mov
imul
jecxz
dec
insb
jg
enter
das
inc
sub
jae
rclb
push
sbb
push
in
jecxz
pop
jmp
xlat
fsubs
out
sub
sti
stos
ret
jns
andl
inc
in
in
jmp
push
rolb
sub
in
mov
test
dec
stos
repnz
mov
loopw
fcoml
icebp
or
xor
test
xchg
enter
xchg
cmp
addr16
outsb
cmp
pop
idivb
cmp
rorb
or
cmpsb
stos
lahf
in
cmp
mov
fisubrs
xor
daa
enter
das
xlat
outsl
sub
movsl
mov
stos
movsb
pop
mov
xor
movsb
add
lahf
stos
das
sub
orb
loopne
inc
cmp
lret
repz
xchg
mov
loopne
mov
shlb
sbb
ss
jns
sub
int3
and
mov
adc
mov
ds
test
sub
pop
addr16
ljmp
repnz
fldcw
ja
lock
adc
mov
inc
sub
es
cwtl
aad
out
testb
mov
fwait
into
cmp
mov
fidivs
push
xor
sbb
pushf
gs
mov
sub
pop
movsl
pop
int
fistpll
pusha
jecxz
add
movsl
aas
cltd
movsb
mov
in
addr16
stos
lea
aad
ror
es
mov
jae
and
or
into
cs
sbb
inc
sahf
push
call
mov
mov
ss
adc
jnp
lds
sbb
cmp
mov
xor
mov
adc
and
xor
fwait
pop
sbb
mov
push
ret
mov
rorl
rcl
stc
xchg
and
fdivrs
shrb
dec
ja
ss
cwtl
xchg
lahf
jmp
push
sbb
mov
orl
adc
fsubs
mov
bound
cmp
stc
dec
enter
rcll
mov
loop
ds
push
mov
out
mov
out
sbb
scas
xlat
or
out
pop
jl
and
je
daa
cmp
push
lods
gs
xor
and
pop
push
adc
int3
in
cltd
mov
push
pop
push
sbb
jmp
and
shl
dec
push
mov
sbb
sbb
sub
enter
cmpsb
jno
xor
into
out
mov
jnp
fnstsw
jl
popa
mov
roll
xchg
cli
enter
nop
mov
mov
enter
fimull
xlat
adc
cwtl
xchg
sub
lods
xor
nop
sbb
lods
testl
in
inc
push
inc
push
lods
pop
sti
fadds
xor
inc
add
test
xchg
jg
lods
mov
jne
ret
push
rclb
dec
dec
push
dec
xorb
push
pop
adc
aam
adc
out
jge
jle
popa
in
fcmovbe
or
lret
mov
adc
and
fbstp
insb
shll
fisubrl
sub
std
push
jmp
cltd
cmp
inc
cmpsl
xor
cmpsl
sub
jp
xor
mov
push
adc
out
stos
mov
inc
stos
push
mov
sahf
or
or
fld
sqrtps
jge
mov
mov
lret
xchg
scas
jae
in
mov
stos
lcall
mov
add
pop
fsts
out
scas
or
and
mov
rcl
mov
jecxz
push
std
sub
xor
sub
mov
mov
dec
pop
and
xor
enter
fistpl
iret
push
into
push
jmp
clc
dec
or
adc
push
sbb
sub
fidivs
cs
jnp
adc
in
loop
push
repnz
aas
les
add
into
mov
xor
mov
pop
imul
stos
negl
jo
lock
test
mov
ficomps
std
int3
jle
mov
dec
or
xchg
sbb
scas
xlat
add
mov
mov
nop
pop
loope
jno
mov
jne
push
mov
cmp
xor
add
adcb
ljmp
test
mov
xor
cmp
bound
push
mov
ja
notb
popa
pop
dec
pop
mov
dec
jmp
push
mov
iret
inc
inc
jae
push
jae
mov
mov
lahf
jl
mov
aam
jge
in
ja
sub
jne
fwait
mul
movsb
mov
add
mov
or
ljmp
mov
cltd
mov
mov
pop
push
leave
xor
test
push
fstl
add
popl
adc
repnz
add
fcomp
mov
inc
mov
repz
mov
adc
cmc
jbe
lock
push
and
std
push
cmp
jnp
inc
loopne
mov
or
mov
pop
fcmovne
aam
lds
stos
iret
je
dec
mov
pusha
add
mov
bsr
ret
das
loope
aam
sbb
mov
jecxz
outsb
sub
jge
add
pop
das
test
insl
dec
mov
test
pop
stos
xchg
xchg
insb
push
inc
cs
mov
ss
mov
xchg
mov
repz
jl
out
and
mov
je
mov
and
xchg
popa
push
xor
movl
sbb
addr16
popf
dec
mov
pop
cwtl
cmp
cmp
aaa
shll
movsl
cmpsl
xor
or
aaa
pop
mov
xor
out
mov
int3
pushf
loope
mov
jbe
or
mov
mov
je
xchg
enter
clc
cwtl
jno
ret
or
lret
cmpl
mov
stos
loop
sub
sub
cltd
xlat
inc
stos
mov
and
dec
mov
mov
adc
inc
movsl
shrb
test
push
mov
mov
xchg
enter
sahf
push
add
test
jle
add
dec
mov
or
dec
pusha
xor
xchg
xor
jge
dec
rcrb
push
scas
test
jle
jne
push
pop
int3
dec
jbe
cmp
into
push
clc
pop
ds
or
out
adc
fs
ja
leave
aaa
cld
mov
adc
cmp
stos
lock
leave
pop
xor
ret
push
popf
jmp
pop
add
imul
out
xor
mov
mov
jp
dec
mov
push
rclb
pop
ja
into
sub
aad
cmp
mov
adc
push
es
adc
push
ljmp
or
lock
xor
xor
sbb
mov
lods
aam
adc
test
jne
adc
loope
lods
insl
xor
lret
popa
and
adc
sub
aad
or
jmp
and
pop
gs
in
ret
dec
sti
adc
jecxz
pop
sarl
daa
ficompl
dec
push
rorl
ret
cmp
subb
pop
push
jo
popl
mov
or
mov
xchg
shrb
inc
and
jge
xchg
lock
mov
adc
dec
jnp
ja
and
push
lds
loope
inc
out
popa
scas
fcoml
sbb
dec
mov
leave
dec
mov
sub
es
fnsave
mov
xor
fadds
and
jo
sub
add
enter
lcall
inc
in
mov
add
aad
jmp
imul
es
outsl
sbb
push
pop
jnp
push
cld
cmpsb
push
dec
lds
adcb
hlt
mov
cmpsb
xchg
jle
mov
adcl
adc
pop
adc
lods
ljmp
sarl
push
mov
sbb
pushf
xchg
sbbb
aam
push
cmp
sub
xchg
mov
in
sti
mov
mov
sub
push
test
daa
data16
sbb
lods
arpl
push
adc
lret
sub
mov
xor
push
cmp
aaa
adc
sbb
pop
je
jnp
xchg
mov
lock
mov
inc
dec
out
aam
out
rclb
lea
fisttpl
rcrb
xor
lods
inc
jmp
xchg
dec
jb
insl
lret
xlat
sub
inc
sub
jne
clc
xchg
mov
cmp
sarb
jno
fs
sub
ss
out
and
push
scas
mov
test
pop
xchg
mov
imull
lea
out
pop
pop
add
push
dec
dec
imul
cltd
ret
push
mov
js
xor
scas
das
adc
decb
or
call
js
sub
mov
pop
and
push
xor
daa
lret
inc
mov
shl
dec
xlat
pop
popa
stos
mov
xor
sbb
jnp
dec
out
fadds
sarb
cld
and
push
pop
stos
movb
pop
jmp
mov
pop
and
sub
or
lea
cmc
mov
xor
pushf
or
scas
sub
leave
mov
fisttps
xchg
add
adc
imul
loopne
shlb
test
mov
sub
lea
adc
mov
push
sbb
jns
xchg
push
cltd
hlt
lods
mov
mov
addl
jle
adc
mov
data16
imul
dec
pop
out
jbe
xchg
in
rorl
push
mov
call
out
inc
cmpxchg
inc
fstp
popa
sbb
lret
test
ss
lahf
stos
mov
sub
cmp
inc
jmp
movsl
mov
mov
js
aam
loope
paddsb
fiaddl
sbb
or
loop
aam
push
sub
push
dec
mulb
lods
push
mov
fnstsw
je
aaa
lahf
cmp
clc
je
push
push
pop
inc
push
sbb
push
jne
imul
dec
sub
sub
sub
inc
and
in
and
add
sub
jns
sub
mov
dec
inc
add
sbb
adc
mov
sbb
ja
mov
dec
psrlw
xor
pop
inc
push
pop
testl
sbb
add
mov
stc
je
in
paddsw
push
loopne
adc
push
sbb
pop
lock
add
cwtl
jno
shl
sbb
fsubl
ret
xchg
push
dec
imul
scas
imul
or
int
icebp
cli
lea
mul
imul
add
ret
lahf
sbb
stc
dec
jl
xchg
mov
jno
stc
inc
sub
or
imul
add
jno
and
cltd
xorb
repnz
xchg
out
jae
scas
in
inc
mov
shlb
mov
scas
cmp
sete
pop
push
pop
daa
rclb
inc
bound
imull
push
push
and
push
xchg
scas
repz
xor
inc
xchg
sbb
popf
test
inc
lret
std
jb
or
cmp
rolb
les
and
test
addl
ljmp
add
sub
lods
adc
test
cltd
fiaddl
sub
popf
xchg
sub
roll
pop
adcl
daa
dec
cmp
das
roll
add
loope
add
mov
jecxz
out
sub
ret
dec
push
inc
ljmp
dec
sti
insl
rorl
or
sbb
mov
or
cmc
sub
push
push
mov
dec
add
jne
daa
or
ljmp
popa
fs
dec
mov
mov
dec
inc
lds
jl
call
push
lcall
dec
mov
and
repz
mov
push
inc
xor
in
adc
aad
movsl
and
jmp
in
push
push
addr16
ret
enter
imul
pop
inc
inc
jno
add
fld1
and
adc
mov
loopne
xchg
in
adc
pop
cmpb
test
dec
loope
sub
sti
mov
aaa
mov
sub
gs
pop
push
sub
mov
aas
or
and
repnz
sbb
repnz
arpl
inc
mov
cmp
and
adc
and
icebp
mov
gs
pop
and
in
sub
dec
push
push
push
inc
repnz
mov
lret
pusha
dec
mov
nop
andb
xorl
enter
and
jp
test
lds
lods
adc
inc
and
pop
dec
jno
push
inc
pop
inc
and
pop
adc
sarb
orb
scas
and
mov
jne
lahf
pusha
jmp
sbb
cli
aas
sbb
adc
and
es
push
rol
jae
push
jecxz
jmp
lods
out
xchg
adc
and
sbb
mov
push
mov
dec
xor
adc
dec
jns
or
add
fsts
or
push
and
push
add
inc
enter
and
xor
adc
pop
inc
mov
movsl
pop
adc
push
push
cmpb
pop
push
pop
xor
mov
push
roll
mov
out
and
mov
test
insb
mulb
cltd
ss
lret
ss
test
or
cmc
sbb
push
cmpb
adc
push
push
xchg
mov
ja
ds
out
inc
mov
mov
enter
test
and
sbb
shll
mov
outsl
inc
iret
in
and
pop
adc
addb
xor
mov
repnz
sbb
push
enter
data16
mov
fnsave
shl
rorb
ret
lds
test
and
andl
movsl
cmp
aas
pushf
cmp
inc
or
sbb
scas
or
jp
sbb
call
test
pop
xor
stos
nop
jns
inc
pop
inc
rcrl
cmpsl
pop
inc
test
and
imul
andl
inc
inc
sbb
push
inc
pop
sarl
sbb
mov
mov
leave
jne
and
pop
mov
out
mov
in
adc
push
adc
push
cli
loope
mov
pop
fwait
popa
insb
dec
lods
pusha
in
mov
in
mov
imul
jae
cmpsb
test
mov
data16
adc
or
aas
jp
fcmovu
push
mov
sti
fcoms
push
scas
cld
enter
aad
lcall
mov
and
stos
jmp
fimull
and
pop
or
shll
sub
jo
movsb
jo
repnz
lds
cmpsl
sahf
adc
dec
sub
outsb
dec
add
sbb
notb
or
jo
mov
test
jae
sbb
frstor
xor
mov
fidivs
nop
arpl
inc
imul
subb
jno
sbb
push
adc
xchg
jg
add
andb
push
arpl
mov
addb
mov
pop
incb
jno
pop
adc
int3
lahf
in
scas
fwait
xchg
movsb
and
lock
push
int3
jne
stos
ret
sub
int3
mov
add
jne
not
nop
jle
arpl
pop
or
dec
push
xor
jle
ds
push
lds
dec
and
adc
mov
pop
ret
and
das
int
mov
dec
sbb
cmp
xchg
push
fists
lret
sbb
ljmp
xchg
xchg
popf
icebp
mov
push
jo
addl
mov
pop
shl
pop
pop
adc
xchg
sub
mov
sbb
mov
mov
roll
and
jg
add
mov
or
add
adc
pop
inc
and
adc
in
ds
leave
mov
add
dec
pop
push
push
xchg
push
mov
or
fiaddl
les
adc
cwtl
fidivl
out
cli
adc
xor
jecxz
daa
push
and
sbb
push
inc
xchg
roll
xchg
sbb
mov
and
pop
xor
mov
push
call
leave
adc
pop
inc
jbe
enter
inc
and
outsb
pop
inc
outsl
xor
imul
mov
loop
repz
sbb
flds
ficoml
shrl
inc
ss
or
les
xchg
cmp
scas
xor
aad
lahf
mov
cli
and
and
add
dec
ret
push
lea
js
xchg
negb
jmp
aaa
nop
adc
fidivrl
and
xchg
or
inc
pop
inc
dec
xor
imul
movsl
sub
daa
andl
mov
mov
cmpsb
or
push
push
mov
and
stos
pusha
add
shll
pop
inc
or
mov
and
lock
sarb
ljmp
push
or
mov
cmc
push
fisttps
and
xchg
sti
vmread
push
dec
or
pop
nop
dec
pop
mov
jno
xchg
loope
ljmp
dec
mov
add
fsubp
xor
fstpt
ds
sbb
add
xchg
stos
sti
or
sbb
adc
xor
lahf
dec
in
ja
add
pusha
in
push
push
mov
jge
dec
sahf
cmp
stos
mov
cmp
pop
mov
push
xor
jne
add
mov
jae
mov
dec
lock
hlt
pop
xchg
outsl
leave
mov
das
mull
nop
sarl
push
jmp
and
fcompl
mov
dec
loop
sahf
push
hlt
inc
xchg
mov
dec
mov
sub
mov
rclb
and
or
jmp
fwait
ljmp
addr16
in
or
add
mov
lods
add
aas
jmp
add
xchg
fisubrs
push
mov
aas
sub
jo
push
jge
xchg
jge
add
stos
lods
daa
push
jmp
sbb
clc
fldcw
cmc
repz
loope
popl
repnz
mov
xor
std
aaa
mov
pop
insl
rolb
xorl
int
shl
fistps
xor
jno
pop
inc
inc
adc
ja
popa
nop
mov
xchg
or
lods
je
fistps
inc
rolb
mov
mov
shrl
pop
mov
int
sbb
add
movsb
or
or
lock
popf
lret
mov
push
or
es
xchg
add
mov
sub
pushf
adc
pop
add
nop
mov
pop
push
orb
and
mov
or
sti
inc
in
add
outsl
adc
inc
inc
and
mov
repnz
mov
sahf
xchg
call
int
adcb
mulb
mov
push
and
nop
outsb
pop
test
inc
inc
mov
andl
fsubs
ja
cmp
lods
xchg
fcmovnu
inc
in
pushf
std
pop
popa
popa
mov
loop
inc
std
xor
and
cmp
mov
stos
dec
add
push
pop
or
mov
test
push
mov
mov
fdivs
cmpsl
inc
ret
cmp
outsl
adc
sbb
sbb
sbb
outsb
push
xchg
xor
mov
inc
adc
and
hlt
inc
cmp
out
int
ret
or
out
mov
or
stos
lds
ja
idivb
pop
mov
and
xor
mov
push
fistpl
cmc
mov
stos
mov
imul
stos
mov
out
jge
push
inc
xor
movsb
or
or
inc
rcrb
ret
nop
fadds
adc
fdivrs
les
andl
divl
sbb
xchg
pop
stos
cmc
daa
sbb
mov
cltd
cmp
and
add
loopne
inc
mov
pop
jecxz
push
adc
sub
and
xchg
ret
push
call
insl
jle
push
sub
pop
sbbb
inc
sbb
dec
cmp
xor
into
ror
imul
popf
push
mov
cld
dec
mov
aam
pushl
and
pop
dec
pop
ret
mov
mov
mov
sub
jbe
dec
out
add
or
sbb
jmp
dec
mov
or
adc
outsb
out
cmp
cmp
inc
enter
sarb
mov
add
out
es
popa
jg
pop
cmp
lock
sbb
add
xchg
rsqrtps
inc
cltd
test
nop
lods
les
sbb
pop
lret
cmp
cltd
int3
add
sarl
push
add
sub
push
add
lds
roll
or
jl
rcll
inc
imul
xor
or
adc
or
mov
pop
inc
cmp
rcr
or
adc
mov
xlat
addb
mov
lock
mov
ljmp
mov
or
je
push
sub
xchg
mov
xchg
mov
inc
out
xchg
or
adc
insl
sub
jb
bound
rclb
xor
shrb
sbb
je
adc
ljmp
out
stos
cli
push
imul
das
sub
ja
push
imul
loop
add
sti
dec
mov
hlt
push
jg
dec
je
nop
into
adc
xchg
pop
or
rclb
test
cld
cs
inc
cmp
inc
push
push
test
pop
and
scas
push
sbb
mov
das
cmpl
stos
or
mov
outsl
out
mov
cmpsb
adc
sbb
adc
jp
add
and
arpl
pop
mov
add
lods
loop
mov
push
or
xchg
repz
pop
sar
inc
stos
test
arpl
loop
stc
pusha
fadd
dec
pusha
adc
mov
mov
das
lds
cs
repnz
cltd
lret
cmp
sbb
or
push
jg
xchg
or
mov
push
pop
stos
xchg
pop
lods
lahf
and
adc
insb
ds
add
inc
ret
aam
pop
cld
sbbl
gs
pop
inc
fiaddl
icebp
cmpl
or
xor
fldl
les
aam
xor
sub
movsb
mov
xor
fwait
jmp
sbb
add
dec
sarb
inc
imul
ret
lret
add
addr16
and
mov
testl
cmp
inc
or
adc
push
mov
sbb
lds
inc
jo
jbe
aad
mov
aad
push
movsb
inc
xchg
cmp
sub
push
sbb
mov
pop
push
sbb
or
mov
and
add
dec
push
adc
gs
sbb
fistpll
ret
cmpsl
ss
lds
sub
movsb
fwait
cld
js
mov
or
lock
in
xor
add
mov
add
subb
mov
mov
cmp
notb
xor
push
and
fildll
pop
test
aad
stos
xlat
jmp
out
out
leave
sub
mov
es
ficomps
and
cs
in
pop
sbb
loope
pusha
movb
les
xor
lahf
lret
popa
and
out
rclb
cmc
mov
bound
cmp
cld
fstp
int
sbb
mov
stos
or
mov
faddl
bound
sbbb
movsb
outsb
test
test
push
push
push
cmp
out
or
xchg
mov
pop
inc
push
jnp
mov
aad
adc
xchg
inc
sub
outsb
les
into
mov
inc
or
push
xchg
std
popf
lods
xchg
push
shlb
pushf
sar
cmp
jle
mov
test
pop
xor
dec
test
repnz
adc
repnz
movsb
shll
push
lods
sbb
icebp
enter
fistpll
push
mov
dec
and
mov
cmpsb
xor
sub
jmp
dec
popa
ja
inc
xchg
and
fnsave
andb
push
sub
mov
mov
mov
push
mov
sbb
cmc
jbe
loop
cld
ror
or
sbb
js
aam
add
inc
cmp
jb
cltd
call
inc
sub
push
sub
dec
ja
push
jno
inc
jo
aam
dec
cmp
push
je
jb
push
lods
jge
push
je
lods
shlb
scas
outsb
push
test
sub
mov
or
push
xor
pop
mov
hlt
dec
sub
sti
mov
adc
and
jge
jns
mov
mov
pushf
sbb
lds
sbb
mov
js
jmp
ret
imul
inc
daa
xchg
test
sbb
or
lahf
mov
sub
sbbb
dec
pop
mov
xor
lcall
daa
jnp
jg
jecxz
fcoml
aad
insl
push
imul
xchg
sub
mov
jno
gs
fs
dec
insb
cmp
addr16
test
shl
ds
dec
jb
jecxz
cmc
insb
push
mov
jl
js
xorl
mov
mov
mov
sub
cmp
sarl
cmc
push
shrl
xor
nop
mov
sub
xchg
dec
xor
pop
mov
aaa
sbb
stc
xchg
sbb
mov
mov
dec
sub
arpl
bound
vpand
push
or
xor
std
lock
adc
push
jae
stos
test
notl
xchg
xchg
inc
in
cmp
and
loope
std
or
call
ds
xor
clc
fdiv
mov
push
pop
jmp
aad
iret
cmpsl
sbb
mov
imul
test
and
jmp
testb
ljmp
add
loop
loope
mov
arpl
inc
mov
aam
repz
test
addr16
xlat
pushl
scas
aam
gs
jp
jle
jecxz
sub
out
inc
jne
insl
adc
mov
and
add
xor
inc
jg
and
inc
mov
sub
arpl
xchg
sub
inc
outsb
jmp
sbb
jne
jg
xor
xor
popa
in
xchg
push
fwait
xchg
mov
cmpsl
icebp
xor
push
popa
adc
mov
lret
dec
cmp
arpl
or
idivl
fsts
jns
lret
jae
inc
adc
mov
mov
jp
push
push
mov
xchg
pop
mov
and
stos
mov
mov
push
scas
cld
movsb
inc
dec
ss
adc
sbb
mov
ja
pop
faddp
inc
and
inc
icebp
xchg
ja
icebp
je
idivb
into
jl
xorb
ss
arpl
pushl
lods
mov
rorb
in
xor
mov
stos
stc
mov
inc
or
inc
imul
push
lret
test
cmp
and
and
push
in
xor
sbb
push
sub
neg
jecxz
pop
std
add
dec
or
sbbl
stos
inc
jb
cmc
sbb
clc
mov
push
sbb
test
inc
adc
rcr
xchg
cltd
mov
dec
mov
rorl
insl
into
adc
sbb
cli
stc
fs
int3
add
jns
cmp
cmp
dec
out
incb
out
imul
jo
and
adc
and
aam
and
and
faddl
cmpsl
push
dec
sub
inc
test
jno
out
loopne
cmp
add
shll
aaa
subl
or
pop
jb
subb
lods
xor
adc
cli
xor
les
jp
xor
jo
add
dec
adc
je
push
sub
cmp
mov
arpl
ret
sbb
push
push
daa
or
test
bound
pop
jmp
pop
sub
sbb
lahf
sub
jnp
and
outsb
and
pushf
sub
fisttps
aad
nop
push
dec
and
jle
xor
aam
clc
adc
cmp
bound
popf
mov
dec
xor
add
shlb
inc
sbbl
lds
push
add
gs
test
xchg
in
sbb
out
pop
jg
push
mov
and
xorb
or
push
add
mov
aaa
not
jno
fisttps
mov
and
push
cmc
das
and
nop
xor
ljmp
adc
xlat
push
or
xorb
and
leave
xchg
and
push
xchg
int3
inc
test
fadds
cmpl
popf
jmp
lret
cmp
cwtl
push
xchg
mov
adc
inc
cmp
in
sti
pop
cs
and
jnp
mov
mov
aas
pop
pop
push
pop
adcb
push
pop
pop
xor
popf
popa
add
sub
and
add
repz
xchg
push
xchg
in
repz
xchg
xchg
xor
or
fsubs
xchg
mov
mov
xchg
int
loope
negl
jne
and
adc
xchg
sub
pusha
loop
in
cli
ds
or
lcall
and
bound
pop
mov
jl
insb
sahf
and
pop
and
insl
cmp
sub
ds
and
pushf
mov
sub
add
addb
cmp
shrl
les
pop
fisttpll
aad
or
pop
adc
stos
sbb
sub
data16
in
mov
into
aam
jno
shrl
and
pop
imul
rcll
lock
imul
rorl
mov
scas
int3
repz
pop
imul
pop
adc
dec
pop
mov
inc
mull
sbb
repz
mov
aas
fidivl
nop
pop
push
lods
fisubl
and
test
inc
lret
cwtl
fsubrs
cmp
mov
cli
std
inc
int3
inc
mov
ljmp
fcoms
push
mov
movsb
push
push
push
push
pop
stc
shrb
test
pop
das
sub
inc
pop
cs
lods
out
shll
mov
enter
adc
cltd
es
add
mov
das
xchg
mov
cmpl
stos
pop
mul
sub
xchg
xor
push
pop
pop
push
adc
pop
scas
insb
dec
or
fsubrl
scas
push
xor
add
test
loope
sbb
adc
das
or
push
lods
jne
add
add
lahf
jle
stos
mov
test
aas
add
lcall
push
fdivrp
fsubrl
push
inc
addr16
ljmp
jo
add
stos
ljmp
sub
test
sbb
add
clc
push
jg
mov
sub
add
xchg
push
mov
or
fidivrl
xchg
sub
push
push
inc
hlt
scas
mov
push
push
fistps
or
mov
adc
fiaddl
and
and
pop
movsb
hlt
dec
outsb
aaa
mov
pop
les
stos
lret
mov
test
pop
mov
jl
push
aam
xlat
add
fst
cwtl
and
adc
sbb
aam
xor
jne
jp
mov
xchg
lods
pop
inc
sbb
cli
jg
and
pop
out
mov
sbb
ret
cmpl
and
divb
in
push
out
in
xchg
pop
jmp
or
out
test
jmp
pushf
dec
adc
imul
xor
data16
imul
cmp
pop
push
add
jmp
mov
mov
mov
sub
xor
outsl
mov
int3
fcomps
addl
cmp
mov
sti
jmp
ljmp
repnz
mov
cmp
and
pop
mov
in
shll
jg
push
mov
in
xchg
cmp
add
sub
dec
pop
cmpsb
xchg
mov
or
dec
push
pop
cmp
or
mov
push
lds
loopne
pop
sub
call
pop
cmpsb
mov
inc
pop
xor
push
push
pop
fwait
sub
stos
ffree
test
pushl
cli
roll
loope
sub
cltd
stc
cmp
jb
mov
mov
and
jge
dec
sub
or
cmp
sub
adc
or
cli
idivl
dec
xor
push
pop
aaa
mov
mov
mov
sti
in
or
ljmp
xlat
decl
ret
sub
shlb
mov
mov
movsl
stc
xor
jo
enter
inc
lea
dec
out
jmp
xchg
ret
xor
xor
mov
push
push
out
scas
push
mov
repnz
pop
jg
loop
adcl
mov
rcll
shlb
lea
mov
add
fs
outsb
push
pop
mov
stos
mov
sbb
das
xor
add
jbe
pop
push
push
cmp
testb
divl
lds
push
enter
and
dec
push
pop
push
inc
sbb
jmp
hlt
fnstcw
jl
cltd
mov
cld
faddl
fbld
lds
adc
jbe
xchg
cli
mov
clc
jno
leave
arpl
popf
xchg
push
xchg
arpl
mov
ret
ja
sub
fs
je
sbb
inc
sub
jle
jne
adc
pop
roll
mov
inc
inc
fstpt
mov
push
jg
test
and
je
iret
add
lds
and
icebp
mov
push
out
push
sahf
mov
loop
mov
les
cli
dec
negb
cli
mov
es
lock
push
add
das
mov
popa
and
mov
pop
mov
mov
dec
aam
add
outsl
xor
ds
xchg
cmp
inc
push
shlb
mov
je
dec
cwtl
or
jg
cltd
loope
mov
lcall
pusha
lods
outsb
pop
in
loope
cmpsb
jle
mov
test
mov
fisttpl
dec
popl
mov
xchg
shlb
int
stos
mov
sbb
inc
dec
adcb
outsl
stc
inc
add
sbb
insb
sub
aam
in
out
and
in
sbb
xor
imull
iret
ljmp
in
xchg
iret
push
sar
push
xchg
test
lret
cmpsl
mov
lods
test
popa
push
cltd
xchg
or
test
in
add
mov
cld
xchg
icebp
les
add
mov
imul
div
in
pop
call
mov
movsb
leave
addr16
sti
mov
sbb
mov
sti
stc
push
jne,pt
stos
and
pop
xchg
ds
call
xchg
popa
push
out
enter
xchg
sbb
mov
std
jne
or
sbb
xlat
and
ret
mov
xchg
pop
push
inc
and
ja
jle
scas
jg
je
nop
jae
cmp
stc
scas
repnz
pop
fstl
imul
inc
pop
shlb
xor
or
inc
pop
jmp
shrl
dec
cmp
or
jl
sbb
mov
pop
dec
in
scas
les
and
mov
lods
imul
inc
push
bound
push
sub
aam
add
rcrb
fdivl
lret
mov
stos
int
ljmp
mov
adc
cli
xor
aad
or
jb
inc
int
jnp
loop
push
push
xchg
stc
cli
add
mov
andb
stos
jmp
and
cmp
xchg
push
icebp
xchg
cmp
mov
add
or
repnz
cld
int
stos
xor
jne
and
cwtl
mov
stc
adc
push
mov
mov
add
and
sub
loop
xor
jmp
lds
inc
mov
cmp
dec
cld
xchg
and
cmc
ret
add
int3
dec
arpl
ss
subb
lods
or
call
ret
sahf
xchg
mov
aad
mov
pop
shll
pop
movsb
and
add
fs
cmp
and
cltd
fadds
repnz
divb
dec
or
pop
or
push
arpl
xchg
hlt
aas
adc
les
xor
jmp
mov
ficompl
in
subb
lret
dec
bound
cli
cmc
aad
ret
sti
hlt
add
out
mov
jmp
inc
ljmp
sub
js
les
ja
sbbb
push
je
adc
hlt
mov
dec
aad
xchg
cmpsl
xchg
lret
dec
fsts
rcrb
pop
imul
mov
lret
cld
xor
cli
cld
xchg
add
and
fsubs
rep
incb
jg
push
xor
fldenv
dec
push
fnstsw
cld
mov
test
rorb
pop
lret
cmpsl
mov
in
mov
adc
push
or
add
pushf
pop
cmc
xor
pop
stos
push
mov
fs
jge
dec
xchg
fs
icebp
rcr
jp
xor
or
push
cmp
xor
sub
xor
movsl
enter
ds
inc
nop
bnd
sbb
or
xor
lea
inc
ljmp
cmc
adc
movaps
jl
gs
dec
pop
lcall
rolb
arpl
jnp
add
dec
jo
pop
or
and
test
sub
cs
jo
lods
daa
mov
fmull
mov
dec
dec
push
sub
stos
sbb
sti
mov
jl
lret
cwtl
repnz
clc
xor
xchg
outsb
sbb
push
out
imul
rorl
cli
push
aaa
stos
enter
sar
aam
push
incl
sahf
in
stos
repz
scas
and
mov
add
lahf
pusha
adc
pushl
xchg
xor
inc
test
sub
adc
push
scas
dec
push
imul
cmp
jmp
and
sub
mov
cltd
and
sub
cmpsb
and
add
add
inc
mov
or
mov
push
popa
dec
stos
into
dec
int3
jge
bound
or
repz
adc
repz
out
shr
mov
xor
and
rol
sahf
leave
or
clc
mov
ja
mov
dec
fcomip
cmp
dec
mov
mov
add
mov
mov
adc
push
jg
aad
push
jmp
test
cmp
jle
imul
mov
jmp
cmp
cltd
jnp
subb
and
xlat
es
push
mov
js
lret
mov
and
fwait
xlat
push
xor
aad
std
lds
or
lret
fldl
je
shll
inc
test
out
adc
jg
shll
ret
inc
sbb
loopne
fcoml
fldlg2
push
push
imul
stos
mulb
and
xor
lods
or
jnp
and
mov
adc
sbbb
mov
pushf
mov
add
dec
dec
xchg
mov
push
push
or
dec
movsb
push
or
dec
mov
dec
add
in
sbb
test
push
xor
movsl
mov
sub
cs
xchg
aaa
dec
and
sbb
xor
push
jae
stos
imul
pop
inc
popf
sbb
sbb
pop
clc
adc
inc
cld
outsb
xor
jg
mov
sahf
cmpsl
lret
stos
mov
sub
test
pop
jo
xchg
add
das
adc
fnsave
mov
fcomps
call
ds
stos
cmp
jge
mov
pop
out
adc
fiadds
cmc
loope
and
int
push
push
loope
aas
pop
fistl
gs
sbb
or
add
jge
push
aam
or
fimuls
mov
fdivr
stc
mov
insl
pusha
sub
sbb
push
dec
in
daa
xchg
sub
stos
sub
jns
notb
inc
sbbb
pop
push
inc
subb
js
lds
jne
adc
jge
jp
std
cmp
aad
add
xchg
and
adc
inc
repnz
outsl
scas
or
cmpsb
or
jb
pop
out
fimuls
stos
js
or
pop
mov
pop
data16
xchg
push
gs
pop
das
dec
leave
xchg
mov
cs
int3
jl
popa
cli
setg
dec
pop
pop
std
gs
sbb
sbb
lcall
jbe
insb
mov
adc
jle
lret
inc
imul
or
add
or
pop
pop
add
xchg
insl
inc
mov
and
ja
push
mov
push
push
xchg
pop
rolb
jnp
lods
lcall
mov
sbb
mov
or
mov
incb
pop
add
aaa
mov
jne
mov
push
lods
lods
mov
imul
pop
pop
mov
lds
xor
xor
movsl
or
inc
ljmp
jo
push
fildl
into
sbb
mov
mov
imul
xor
mov
mov
idivb
adc
out
and
jp
pop
mov
ds
das
jno
out
aad
jl
cld
mov
xchg
push
call
sbb
popf
push
push
sbb
or
cltd
rcrb
shrl
or
loopne
sahf
out
lret
test
add
out
push
cmp
outsl
push
xor
into
loop
or
and
pusha
jbe
data16
sub
dec
jae
inc
xor
ret
daa
std
and
lods
andl
enter
mov
aas
push
push
js
icebp
jecxz
in
sbb
mov
xlat
hlt
pop
js
xchg
mov
pop
add
mov
mov
or
push
inc
jecxz
pop
cmp
cmpsl
stos
fadd
adc
mov
inc
dec
inc
femms
dec
cmc
add
sarb
add
pusha
jg
cmp
std
jge
xchg
dec
xor
insb
nop
es
in
xchg
push
jl
jne
notl
xchg
xchg
lcall
addr16
loop
xor
leave
inc
test
jmp
repnz
sbb
mov
xchg
ljmp
in
pop
bound
sbb
xchg
cwtl
lods
xlat
fimuls
imul
sti
leave
xchg
test
jbe
mov
sbb
in
lods
faddl
int3
and
enter
sti
and
mov
and
jns
dec
add
adc
in
jg
fcompp
lods
push
push
or
icebp
cltd
xor
push
or
addb
sub
ja
sbbb
ret
rcl
sbb
mov
sub
or
stos
in
insl
cmpsb
or
scas
adc
jmp
inc
movsb
sub
pop
jne
jp
mov
sahf
out
sbb
out
mov
insl
push
push
cmp
stos
inc
mov
jb
add
cs
aas
xchg
orl
in
sub
pop
adc
push
add
mov
pop
xchg
xorb
jmp
lea
xchg
and
and
and
cs
adcb
cmpsb
jne
addr16
std
mov
popl
aad
add
sub
data16
inc
scas
inc
push
roll
push
push
insb
adc
jne
push
fsubs
fnstsw
leave
cmp
out
lds
or
test
stos
pop
and
push
in
insb
scas
inc
jecxz
out
mov
in
and
push
mov
fbstp
adc
call
jne
aaa
cmc
loope
subl
out
pop
add
xchg
push
rcr
pushl
lret
and
out
popf
out
mov
or
jle
push
imul
fidivrl
mov
and
insb
mov
xchg
arpl
in
xor
test
pop
dec
pop
fsts
and
loop
push
pop
repnz
imul
fbstp
stos
lods
in
mov
stos
cmc
mov
addl
mov
or
adc
cld
lds
data16
movsl
lods
sub
pop
test
rol
adc
xchg
adc
int3
daa
les
movsb
add
hlt
push
out
pop
sbb
cmpsl
xchg
test
sbb
loop
pop
cmp
inc
das
inc
xor
fwait
ljmp
sub
cmpsb
shrl
repz
ret
aaa
ss
mov
mov
scas
in
dec
lret
nop
push
cli
bound
mov
std
ror
jne
cmpsl
push
sbb
out
pop
fnstcw
pop
mov
out
punpckhdq
dec
sbb
xchg
nop
sub
fiadds
daa
pop
xor
dec
mov
and
dec
andnps
cmp
dec
cmp
mov
and
cld
adc
mov
sbb
loopne
and
pop
test
movsb
cld
fstpl
popa
dec
jle
inc
ds
push
push
sbb
and
or
pushf
loopne
packuswb
incl
inc
in
sub
jg
and
les
cmp
imul
enter
jns
push
sub
add
push
ljmp
out
mov
sbb
orb
mov
mov
repnz
in
xchg
fwait
push
cmp
sahf
es
adc
idivl
mov
add
ret
pop
mov
mov
pusha
or
add
mov
sbb
or
pop
mov
xor
pop
mov
mov
jae
out
or
jo
ds
push
imul
mov
popa
jnp
jb
fsts
mov
push
xchg
cltd
jge
loopne
pop
mov
pop
push
jno
mov
sbbb
daa
xor
je
shll
cmpsl
ljmp
out
inc
out
cli
dec
pop
adc
loop
sub
xor
and
call
pop
or
push
mov
stos
pop
inc
jl
or
push
sub
xor
sub
and
sbb
adc
or
mov
nop
cmpsb
out
leave
jb
sub
pop
arpl
add
and
faddl
add
push
xor
adc
ljmp
mov
adc
add
pop
lods
lods
push
out
stos
loop
push
rcl
push
xchg
push
adc
or
pop
mov
lahf
push
ss
je
fbstp
jle
std
aas
shrl
jb
fmul
sahf
pop
jns
sti
call
leave
stos
mov
cwtl
adc
stos
pusha
stc
js
bound
shrl
jle
sbb
movsb
xor
dec
mov
or
sti
ret
jg
adc
jmp
popa
mov
addr16
push
ja
or
sub
pop
push
je
inc
jecxz
mov
inc
cmp
cmpsb
popl
pop
push
jne
lahf
sbb
push
push
or
leave
or
nop
mulb
sbb
ljmp
jno
or
clc
cmc
scas
and
inc
jnp
jg
lds
das
mov
aam
pusha
lret
cli
scas
rclb
jmp
push
sub
ret
cmp
pop
inc
push
cmp
and
stos
mov
sbb
test
lods
hlt
push
or
out
xor
ljmp
popf
jge
or
push
not
sbb
inc
or
popf
xchg
lcall
inc
arpl
cmp
mov
mull
add
add
mov
les
mov
push
or
notl
add
sbb
or
mov
leave
push
mov
dec
flds
inc
dec
cltd
mov
mov
ss
sub
add
ljmp
sti
xor
mov
test
adc
pop
mov
aad
fwait
mov
cmp
jl
dec
or
stc
pop
mov
or
scas
sbb
adc
or
fdivrs
cmp
inc
dec
xor
dec
jbe
xchg
pop
xor
pop
push
dec
sbb
adc
cwtl
and
pop
pop
xlat
dec
jae
add
aam
sub
push
outsb
lods
pop
jne
adc
sbb
popf
sbb
mov
inc
jl
xor
add
cmpsl
mov
mov
sub
add
push
std
cmc
and
std
mov
insb
bound
mov
add
mov
jle
xor
out
mov
rcl
not
fstp
daa
movsl
mov
nop
xlat
push
aam
dec
or
repnz
fsubrs
std
add
scas
into
int3
or
and
fisubrs
test
xor
mov
aaa
or
xor
jl
aas
pop
lods
push
int3
and
cmc
pop
in
stos
mov
addr16
adc
cmp
inc
mov
xchg
and
xchg
dec
jae
arpl
jmp
call
inc
call
hlt
cmpb
mov
shrb
dec
scas
pop
xchg
or
jle
lahf
dec
xchg
std
sub
push
imul
dec
roll
fbstp
insl
sub
in
les
lea
add
adc
sub
mov
lods
nop
sub
pop
mov
out
out
sbb
mov
loope
jbe
pop
pop
push
adc
aad
lods
mov
test
in
xlat
scas
sbb
je
jp
mov
fwait
adc
push
xchg
loope
fidivs
mov
lcall
nop
into
inc
lahf
pop
lret
mov
and
push
stc
or
inc
sti
daa
push
iret
fwait
cmp
push
cmp
push
or
sub
cmpsb
fwait
sbb
cwtl
subb
sbb
jne
inc
xchg
dec
jg
mov
add
add
mov
dec
rcll
sub
ljmp
mov
push
pop
mov
aad
pushf
in
add
pop
push
sbb
push
je
jmp
int3
int3
andl
mov
push
loopne
rclb
adc
adc
pop
or
cld
sti
pop
and
and
xor
adc
lods
add
sub
enter
add
sbb
loop
dec
stos
mov
or
cld
and
pop
add
rclb
mov
int3
inc
ret
mov
jae
sub
mov
comiss
fs
notb
adc
xchg
push
sub
push
shll
pop
xlat
loope
push
sbb
pop
cmp
test
mov
nop
popf
mov
add
push
add
mov
mov
lods
insl
outsb
pop
inc
pop
ss
es
pop
push
push
cmp
dec
push
arpl
nop
jl
daa
clc
dec
mov
scas
mov
lods
mov
aad
adc
mov
xor
sbb
add
loopne
stc
jno
mov
adc
or
pop
sub
sub
cli
push
pop
mov
add
xchg
aas
inc
cmp
das
inc
or
cwtl
stc
inc
ret
out
pop
ss
popl
xor
mov
pop
je
lahf
sub
dec
add
scas
cmpsl
lock
insb
push
lahf
out
push
sbb
xor
fstl
mov
inc
push
out
stos
jb
mov
imulb
or
xor
loop
sti
movsl
xlat
mov
push
or
sub
in
out
iret
xchg
int
mov
and
fmull
jge
mov
incb
mov
xchg
mov
adc
mov
or
aad
outsb
dec
sub
and
push
repz
push
pop
inc
inc
out
push
inc
das
pop
stos
add
jle
add
inc
stos
int3
addr16
jl
sbb
fmuls
xchg
xor
pop
jbe
xor
sbb
test
in
pop
cmp
imul
mov
rclb
jbe
mov
out
in
ljmp
mov
test
cltd
add
imul
add
xor
pop
movsl
jecxz
dec
hlt
or
fnsetpm(287
ds
pop
aam
loop
leave
push
dec
and
dec
int
or
xchg
or
mov
test
cli
xchg
sahf
jmp
xor
cmp
leave
stc
add
adc
xchg
xchg
gs
out
out
mov
icebp
scas
test
push
lods
aam
cmc
in
pop
test
sub
jnp
pop
push
inc
add
xor
jle
dec
mov
dec
inc
mov
fidivs
out
and
jo
or
stos
out
pop
nop
and
inc
data16
xorb
flds
mov
stc
ss
cmc
insb
stos
test
add
jb
inc
in
jbe
test
inc
mov
ljmp
add
fnstenv
rol
adc
push
xlat
push
aad
mov
add
inc
sbb
sub
lods
call
add
les
enter
push
push
jge
out
xchg
and
xbegin
rcl
sbb
mov
inc
es
insb
or
or
loope
lea
mov
fcompl
enter
cmpsb
cmp
adc
xor
mov
sbb
stc
sub
movlps
sbb
mov
repnz
fnsave
cs
mov
clc
push
adc
xchg
popf
lock
add
lcall
dec
push
shrb
int3
push
or
or
mov
ror
loop
lods
nop
popf
shll
mov
ljmp
xchg
mov
stos
insb
repnz
or
clc
cltd
fs
sbb
inc
pop
daa
or
jno
push
pop
popf
jl
mov
inc
cmpsb
jne
sub
mov
shrl
and
pop
andl
mov
adc
test
in
out
in
aam
mov
and
scas
in
xor
inc
mov
adc
out
aam
adcb
nop
insl
and
add
lods
outsl
sub
cltd
mov
push
or
clc
mov
pop
sbb
jae
sti
sahf
out
pop
jns
xchg
xor
je
fisttpl
push
dec
call
bnd
xchg
adc
and
lret
sbb
iret
add
push
inc
rcll
mov
push
cmc
mov
push
in
and
or
or
mov
mov
mov
cltd
pusha
clc
mov
push
cwtl
cmpsl
sbb
lcall
lcall
xor
ss
add
push
mull
pop
fwait
inc
setae
repnz
imul
imul
and
pop
adc
test
mov
fistps
lcall
movsl
int3
push
clc
pop
mov
xchg
and
subb
mov
bound
ffreep
dec
xor
xchg
adcb
mov
js
adc
push
dec
out
mov
loop
call
enter
xchg
cwtl
mov
lods
ret
sarl
out
fiaddl
cmpsb
xchg
arpl
jno
adc
pop
pusha
jg
popa
pop
dec
add
int3
in
pushf
push
outsb
sub
int3
in
imul
and
aaa
mov
lret
cmpsb
xor
aas
xor
rorl
jns
ss
es
lcall
lcall
lcall
repnz
fwait
mov
add
int3
mov
adc
ret
add
xor
sbb
sbb
inc
dec
mov
mov
aaa
outsl
or
xor
push
push
cmpsb
sahf
jne
sbbl
stc
sbb
movsb
or
add
push
movsb
out
mov
mov
mov
pop
sbb
xlat
movsb
addb
dec
loop
inc
push
add
sub
sub
out
std
andb
aas
mov
xchg
push
shr
popa
jl
inc
sbb
xchg
push
and
xchg
ret
cmc
push
out
mov
hlt
inc
pop
rcll
add
jg
pop
scas
repnz
cmp
in
mov
mov
ja
test
mov
and
test
mov
cmpsb
nop
mov
cltd
mov
push
cli
xchg
test
je
scas
push
lock
mov
or
and
shrb
adc
xchg
fsubrl
cmc
cwtl
int3
test
or
into
jle
fwait
or
mov
shlb
ret
stc
sbb
lcall
enter
add
psrld
cmpsb
loope
clc
lds
xchg
fstps
lods
push
xor
movsl
mov
cmp
sbb
add
jb
mov
dec
pop
sub
outsl
stos
xor
jne
dec
xor
add
fimull
or
inc
pop
arpl
mov
sub
test
jl
jno
int
in
fldcw
jb
push
test
clc
xlat
add
pop
pop
lret
stos
nop
push
lret
pop
loopne
addr16
fldcw
aam
or
mov
in
dec
iret
push
mov
cli
cmp
mov
test
hlt
pop
bound
cltd
ljmp
ljmp
lcall
lret
sub
cmp
push
xchg
jg
adc
out
or
cs
mov
xchg
rclb
push
mov
jne
jbe
jmp
out
stc
lcall
mov
dec
push
mov
xor
add
cmp
pop
cmpsb
nop
cmp
pop
cld
sbb
push
pop
dec
shll
das
add
push
mov
mov
add
test
in
stos
add
add
lret
rolb
sar
jle
rcrb
inc
pop
add
test
mov
xchg
fucomp
mov
cmpsl
pushf
or
dec
rcrl
mov
mov
mov
pop
xor
adc
orl
jnp
iret
mov
in
or
push
xor
stos
cmpsl
or
xchg
cs
pusha
xor
add
adc
mov
arpl
lcall
add
shlb
insl
loop
dec
jne
sub
enter
and
shll
in
mov
inc
shrl
enter
ljmp
rolb
xor
mov
jmp
int
call
dec
push
rcr
inc
in
mov
xchg
andl
mov
in
lea
ds
mov
mov
mulb
insl
clc
cmp
inc
xchg
jb
add
jne
push
cld
jnp
pop
sub
mov
adc
mov
cmp
mov
movsb
in
out
inc
or
pop
adc
notl
sub
push
test
enter
mov
and
out
dec
mov
ret
loopne
pop
push
jbe
cwtl
sti
fnstenv
nopl
mov
xchg
test
adc
and
sub
incb
in
rcrl
cwtl
or
push
xorl
test
xchg
pmaddwd
jge
inc
mov
mov
mov
jno
sub
cwtl
mov
sub
jmp
dec
pop
inc
scas
pop
pop
aas
cmp
mov
test
or
jno
cwtl
xor
mov
insl
fs
cs
pushf
xchg
sbb
les
fisubrl
test
sub
scas
loop
mov
mov
jbe
push
fsts
jnp
aas
test
bound
mov
cmp
adc
aam
fdivs
xchg
call
mov
and
mov
lret
addr16
test
mov
je
cltd
push
bound
pop
ljmp
aas
push
ja
in
stos
or
test
add
cld
das
push
mov
mov
lea
out
dec
and
push
mov
pop
xchg
dec
adc
cmpsb
fisubrl
test
enter
and
shlb
mov
nop
push
xchg
clc
movsl
or
dec
sbb
and
mov
sub
sbb
xchg
pop
insl
xchg
fnstenv
leave
push
cld
lds
jecxz
test
pop
xchg
mov
mov
push
mov
out
xor
in
xor
inc
pop
ja
int
jecxz
inc
popa
arpl
cmp
scas
mov
ret
mov
fstpl
mov
or
aaa
mull
dec
mov
cmpl
inc
sar
aad
mov
das
test
inc
mov
push
scas
cmp
dec
mov
fisubl
mov
sub
ja
mov
pop
jae
dec
and
cs
xor
cmpsb
test
mov
fwait
sarb
mov
mov
mov
repz
out
sub
mov
stc
pop
mov
cld
push
jae
fdiv
xchg
mov
dec
xor
push
inc
xor
cmp
call
xchg
or
mov
addb
out
clc
push
aad
test
inc
out
test
xchg
mov
test
movsb
nop
bound
xchg
in
outsl
xor
outsl
cwtl
sub
cli
mov
xchg
push
ret
mov
inc
and
push
add
mov
lods
push
jmp
out
or
cltd
cld
scas
cmpsb
mov
jle
leave
icebp
lret
pushf
pop
mov
cmpsb
sbb
imul
shl
lock
enter
pop
stc
jb
out
call
stos
test
in
data16
movsl
mov
adc
inc
repnz
mov
pop
das
jmp
dec
int3
lcall
cli
movsb
fildll
ss
sbb
sahf
jb
xchg
sbb
adc
sbb
je
dec
adc
nop
and
or
push
sahf
adc
push
dec
sbb
pusha
push
sahf
and
or
inc
in
insb
push
push
add
andl
mov
lcall
std
sub
inc
fdivrl
stc
jecxz
and
pop
out
lret
mov
cmc
adc
dec
inc
lods
sub
mov
mov
inc
mov
dec
dec
test
jl
sbb
inc
xor
sbb
jb
or
pushf
push
push
cmpsl
mov
add
dec
inc
jo
leave
add
pop
loope
fcomps
out
lret
xchg
bsf
pop
mov
xlat
arpl
test
stos
adc
xchg
mov
adc
cmp
and
xor
pop
bound
andb
mov
pop
fcmovne
pusha
sub
push
dec
sbb
dec
sbb
les
inc
or
pop
mov
push
inc
sbb
pop
mov
sub
mov
int
addr16
filds
scas
xor
stc
je
mov
sbb
cmp
pop
repnz
into
pusha
iret
jmp
je
jo
loope
in
mov
sub
dec
push
cmp
push
mov
es
je
push
push
cld
mov
pop
rcrl
fdivrl
test
pusha
push
and
bound
mov
andl
clc
shl
cmpsl
aas
jecxz
jmp
sbb
test
roll
xor
sahf
adc
cmp
adcb
sbbb
outsl
in
dec
aaa
fnstenv
popf
sub
in
mov
test
test
repz
sbb
jmp
jae
mov
ja
and
arpl
bound
sbbl
test
stos
adc
xchg
test
lods
ss
inc
xchg
cmpsb
mov
dec
lahf
aas
inc
jo
add
dec
aaa
inc
js
xchg
jae
negl
ss
in
out
pop
fsubl
mov
loopne
hlt
dec
out
fildl
cmc
inc
sbb
and
insl
hlt
bound
rcl
lcall
inc
pusha
fdivp
into
je
xchg
sbb
cmpsb
mov
addb
cli
repz
push
dec
in
push
es
sbb
pop
enter
fs
outsl
leave
xchg
ja
inc
dec
cwtl
mov
sub
test
cwtl
xchg
inc
cli
loopne
es
and
cmp
pop
or
or
push
pop
mov
xor
std
push
push
fwait
inc
in
xor
loop
aas
rorl
je
inc
in
fldenv
cltd
rol
nop
inc
fdiv
sbb
dec
xchg
shlb
xchg
adc
in
cmp
dec
inc
sub
inc
ret
push
add
leave
sub
sarl
addr16
sbb
cmp
popf
insb
mov
js
dec
dec
xorl
mov
clc
jge
sbb
or
xchg
cltd
mov
fdivrl
cltd
sbb
mov
pop
mov
pop
scas
call
mov
shlb
mov
in
in
jg
push
pushf
sbbl
sub
mov
pop
jg
mov
and
mov
out
imul
repnz
pop
out
lret
ret
les
inc
pop
adc
pop
test
in
xor
outsb
jmp
add
mov
das
mov
mov
add
dec
stc
pushf
xchg
inc
repnz
or
js
pop
pop
mov
aam
jne
mov
push
test
xor
rcl
push
add
test
mulb
dec
xor
stos
dec
pop
int3
pusha
imul
in
cmp
jg
icebp
fisttpl
dec
call
dec
add
inc
in
shlb
test
sub
pop
stos
xchg
insb
or
ficomps
lea
inc
dec
jl
xlat
inc
cmp
mov
out
adc
aam
and
sbb
rcll
out
jg
nop
psubw
mov
mov
iret
or
mov
jg
xor
hlt
xchg
mov
mov
mov
sub
mov
stos
nop
pop
in
or
ljmp
mov
mov
pop
js
lock
xchg
mov
adc
pop
inc
jge
mov
cmc
mov
push
inc
inc
adc
cmc
dec
mov
add
mov
insb
cmp
lds
xor
cmpsb
and
sbb
loop
aad
jmp
xchg
addr16
mov
mov
dec
cs
outsl
mov
stos
lods
add
filds
lea
pop
jge
ja
scas
xchg
scas
loop
fs
add
or
inc
mov
aam
pop
xor
inc
scas
repnz
xlat
pop
sar
or
xchg
js
jp
jne
pop
enter
out
pop
sub
mov
jle
mov
mov
mov
in
mov
adc
and
xlat
lret
outsb
std
sbb
out
or
lods
cmc
cmp
aaa
cmpsb
daa
fadd
inc
mov
cmp
test
and
and
jp
push
mov
rcrb
dec
mov
stc
rolb
fcmovbe
add
andl
push
loopne
lea
jmp
inc
jne
je
and
sub
push
repz
pop
rcrl
mov
add
clc
pop
cmp
ljmp
jp
cmpsl
push
xor
bound
call
adc
loopne
jmp
test
jne
jle
xchg
ficoms
and
sbb
add
push
lcall
out
mul
xchg
call
scas
mov
mov
xor
outsl
decb
movsl
xor
gs
jnp
lcall
push
push
out
aam
dec
mov
in
ja
mov
hlt
mov
movsl
mov
mov
jns
sub
fs
jb
scas
test
sub
adc
mov
scas
test
arpl
int
test
lds
or
sahf
fwait
pop
push
adc
fildll
enter
mov
jae
pop
or
ds
mov
and
stos
mov
incl
int3
pop
pop
pusha
jbe
push
daa
xlat
int
cmpsb
int
popa
insb
mov
sti
jp
fbstp
fists
test
lods
cmpsl
ja
out
mov
jg
lahf
repz
adc
xor
mov
adc
sub
fcompl
adc
pop
fnstsw
mov
mov
dec
cs
ret
add
fisubrl
push
adc
aaa
xchg
dec
bound
sbb
or
xchg
leave
dec
mov
jg
mov
sub
cs
or
and
jne
ljmp
fldenv
mov
jmp
xor
or
inc
inc
xchg
inc
mov
imul
decb
inc
jg
add
and
cmc
test
stos
stos
mov
adc
mov
or
aaa
push
test
frstor
push
ret
cmp
sbb
inc
repnz
mov
or
cmp
fwait
icebp
sbb
or
or
pop
cmp
sub
ljmp
pop
add
push
add
das
mov
imul
out
push
movb
enter
out
lods
and
mov
nop
jns
dec
pop
cmpsb
sub
inc
push
stos
lahf
fildll
jne
movsl
fwait
insb
bound
test
movsb
mov
ljmp
mov
imul
nop
sub
adc
into
cs
jg
inc
add
rclb
in
add
inc
add
ss
scas
popf
es
out
lret
stos
xchg
and
jns
int3
test
inc
sub
or
daa
je
repz
andl
shll
mov
mov
jmp
pushf
sahf
lods
adc
lahf
push
push
in
inc
pop
jns
push
cmp
or
push
mov
push
xchg
scas
test
sbb
pop
in
mov
aad
popa
negb
andl
ds
cmpsb
iret
test
sbb
test
shl
xchg
pop
or
addb
xchg
mov
push
mov
jp
fwait
das
mov
and
pop
leave
push
cmp
fistl
out
push
cmpsl
jae
fucomi
fs
fistl
push
push
call
pop
push
pop
add
sub
sub
pop
push
push
dec
or
push
pop
ja
dec
pop
inc
iret
add
nop
scas
xor
loop
adc
cmpsl
lds
sbb
jl
bnd
adcl
jmp
push
jmp
xor
movsl
pavgb
xchg
in
mov
xchg
xlat
cwtl
or
xchg
inc
xlat
xchg
mov
nop
lock
mov
or
imul
addb
pop
aas
mov
adc
or
scas
jle
add
push
clc
mov
movsl
mov
fdivs
dec
dec
div
popa
and
out
pushl
shll
sub
inc
rcrl
data16
push
inc
cmp
pop
xor
and
mov
pop
cmp
loope
test
test
push
push
and
fisubl
pop
or
adc
xchg
loop
pop
sti
pop
leave
jne
fs
pusha
int
fimull
and
sub
dec
xorl
sub
movsb
leave
lret
test
test
negl
pop
jle
in
sti
ret
ret
inc
dec
xor
and
cwtl
ss
scas
and
rcll
add
mov
insl
xchg
cmp
xor
mov
mov
inc
idiv
xor
insl
jmp
insl
jle
jge
and
mov
or
pop
push
adc
cmp
push
xor
push
imul
xor
adc
and
jge
int
in
js
mov
cmp
inc
adc
es
les
dec
or
pop
push
pop
dec
nop
aam
pop
rclb
jp
xchg
inc
jl
data16
mov
insl
mov
pusha
outsl
icebp
lcall
call
data16
and
pop
pop
push
lret
pop
neg
cmp
sbb
les
inc
in
fs
pop
jnp
in
push
and
jae
dec
dec
lock
pop
cmp
xor
shll
ljmp
into
xchg
das
sbb
pop
fsts
ret
or
pop
xchg
fisttpll
loope
jo
test
sbb
cmp
jae
shll
andl
in
cmp
enter
cmp
jne
jns
rcll
or
repz
xchg
sub
mov
sbb
iret
xchg
push
mov
sbb
mov
iret
mov
adc
pop
xchg
and
das
std
popf
push
push
mov
push
in
loopne
sarb
movl
insl
sar
ss
dec
mov
int3
fisubrl
adc
push
xor
xor
lret
mov
inc
sub
mov
out
lds
jb
pop
push
adc
adc
xchg
loop
out
and
push
out
xchg
enter
mov
pusha
or
gs
sub
xor
enter
ret
fisubrs
dec
pop
add
outsb
adc
inc
dec
push
stc
pop
cmp
lods
jae,pn
incl
adc
icebp
and
movsl
test
sbb
jb
xlat
cmp
aam
adc
inc
and
arpl
imul
sub
sub
cmovnp
sbb
movsl
jnp
jns
inc
push
movsb
insl
in
push
or
cmc
mov
cmp
mov
mov
cmp
mov
xor
daa
mov
pushl
idiv
popf
add
dec
jb
jns
out
jmp
lret
or
mov
or
adc
roll
and
xor
fistl
sbb
dec
nop
xchg
sarl
sbb
lret
in
sbb
icebp
or
or
in
outsl
mov
bound
mov
cmp
jnp
and
movsb
mov
lods
arpl
mov
add
adc
leave
ror
repz
jb
push
cwtl
xchg
addr16
push
push
xchg
popa
add
fucomip
imull
popf
adc
adc
xchg
clc
mov
mov
or
and
xchg
loope
sbb
divl
cmp
xchg
in
fstpt
pop
pop
test
jp
mov
repz
clc
cltd
sbb
fstps
cmpsb
and
cs
jg
cmp
fidivrl
scas
jns
lods
ss
add
xor
les
add
cli
pop
ret
sub
out
xchg
rorb
or
jnp
rol
adc
insl
arpl
and
or
inc
sbb
adc
and
or
jmp
sub
popa
aaa
out
adc
xor
das
aaa
scas
or
jbe
fimuls
sbb
mov
inc
and
movsb
fwait
rolb
test
andb
push
mov
dec
out
xorl
push
into
bound
mov
aad
jne
insb
aad
xchg
std
inc
enter
jae
mov
and
das
lods
sti
cmp
push
or
imul
pop
mov
cwtl
adc
xchg
xchg
push
push
out
out
sbbl
loope
sbb
mov
xchg
push
cmpl
cmp
xchg
insl
dec
sahf
movsl
xor
fmuls
mov
xchg
in
popa
clc
leave
out
push
mov
scas
stos
mov
mov
mov
fwait
push
pop
ret
sbb
jge
adc
xchg
aam
stos
test
outsl
xchg
mov
pop
loopne
sbb
add
jo
push
jnp
loopne
add
into
sbb
movsb
xchg
bound
jno
xor
in
pop
fimuls
sarb
add
dec
in
jbe
daa
mov
jns
push
jb
arpl
xchg
push
fidivrs
mov
mov
adc
xchg
jo
ret
aam
and
and
xchg
dec
xor
adc
inc
nop
sbb
movsb
inc
sub
mov
scas
sub
dec
nop
and
mov
fdivp
rorb
jae
movsl
mov
push
jp
shl
repnz
ja
xchg
jo
xchg
outsl
out
or
or
movsl
test
cltd
pusha
push
cmp
push
push
pop
mov
cmp
gs
js
imul
and
xor
cld
rol
adc
push
inc
inc
pop
add
inc
jg
neg
shr
inc
mov
andb
xor
sub
aaa
sub
sbb
or
inc
mov
mov
push
or
xrelease
add
pushf
cmp
sub
dec
rclb
xchg
pop
dec
dec
dec
mov
mov
cmpsl
lahf
loop
dec
cmpsb
nop
sub
push
push
filds
lret
pop
sti
arpl
fwait
adc
push
lock
jne
testb
push
icebp
push
orb
pop
sbb
adc
xchg
sbb
scas
stos
xchg
faddp
sbb
gs
insb
push
sbbb
pop
push
mov
mov
aaa
bound
xor
jbe
and
ja
or
out
cmp
push
cmc
mov
or
ljmp
inc
cmp
ret
imul
mov
dec
and
sub
fwait
mov
mov
cmc
movsb
lods
adc
xor
push
aad
sub
clc
mov
or
mov
adc
inc
jnp
inc
test
inc
pop
cs
pusha
addb
mov
sub
jnp
or
mov
dec
mov
scas
push
inc
sub
sub
ljmp
lods
cld
xchg
ret
jl
rcr
mov
mov
imul
add
cltd
lods
insb
dec
push
pop
push
ss
dec
es
add
jbe
ljmp
push
jl
pop
xor
cs
call
dec
mov
mov
push
out
insl
dec
out
push
mov
xor
mov
sahf
loopne
mov
xor
cmp
cmp
mov
add
and
loopew
adc
int3
inc
inc
int
pop
imul
jge
ret
stos
movsl
mov
lods
lods
push
js
aam
stos
cmp
imul
jle
adc
mov
popa
in
push
xor
insb
cs
movsl
mov
xor
ja
push
mov
movsb
mov
push
push
xchg
add
or
movb
fdivl
popa
cmp
pop
vpsllq
in
add
pop
push
fmul
test
push
xchg
mov
push
adc
cmp
mov
inc
mov
inc
inc
push
icebp
sub
fwait
push
pop
outsb
shr
imul
cmp
sbb
cwtl
test
enter
loopne
mov
cld
and
or
lock
mov
dec
mov
xchg
and
scas
add
mov
pop
popf
mov
movsb
push
loop
enter
cmp
jp
int3
sbb
jmp
scas
je,pn
add
and
scas
mov
testb
out
xor
push
mov
pop
jne
push
xor
scas
popa
xchg
pushf
push
repnz
mov
fstp
pop
sbb
adc
int3
push
addb
push
cli
add
mov
in
lret
push
push
jae
notb
cmp
addr16
pushf
sbb
das
push
push
mov
stos
dec
inc
out
scas
sub
inc
cmc
nop
jne
stos
aas
and
test
or
fdivrs
adc
sbb
dec
mov
pop
addr16
mov
push
scas
or
add
loop
popf
hlt
xchg
dec
data16
and
sbb
rorl
outsb
sub
lret
pop
dec
in
or
std
cmp
mov
adcl
jl
fdivrl
bound
push
fldcw
adc
inc
in
iret
adc
dec
ret
lods
rol
xchg
popa
ja
rcr
mov
lcall
push
inc
mov
icebp
adc
sbb
dec
in
mov
les
stos
data16
mov
push
enter
mov
int3
dec
or
leave
lahf
add
aam
cmp
cltd
sub
mov
or
lret
inc
lret
adcb
adc
adc
test
add
mov
inc
imul
add
inc
and
mov
push
add
xlat
add
xor
dec
cmp
aad
mulb
mov
push
xchg
sbb
cmp
repnz
adc
lods
scas
adc
cmp
pop
lahf
push
stc
push
or
nop
fwait
xchg
push
pop
adc
mov
dec
and
dec
leave
xor
xlat
testb
test
cmp
or
and
xchg
sbb
pop
pop
dec
jge
movsb
bound
cwtl
jmp
xchg
sub
xor
pop
shl
push
and
cmp
lods
aaa
mov
add
jmp
loope
jge
jecxz
popa
push
sti
ret
push
aas
xchg
cmpsl
cmp
dec
mov
addl
lret
mov
add
jae
xchg
gs
or
and
jne
cld
pusha
jecxz,pn
data16
push
pop
jl
ffree
sub
mov
mov
sbb
fwait
or
push
and
insb
fucomp
fists
or
movsb
cs
jmp
dec
and
pop
inc
rclb
fwait
and
xchg
pusha
es
shll
pop
cmc
je
movsl
cmc
jg
ja
and
pop
sub
jge
in
cli
mov
out
loop
sub
mov
mov
cmp
jp
pop
ret
outsl
jbe
shr
loope
add
negl
ret
adc
pop
cmp
mov
dec
lds
jb
adc
mov
dec
lret
sbb
xor
mov
jg
mov
in
cli
cmp
outsl
cmc
outsl
lock
or
pop
dec
xor
arpl
fs
mov
pop
mov
test
jnp
mov
dec
in
lret
fcomi
sub
push
testl
ss
xlat
pop
in
pop
mov
mov
enter
inc
fcomps
pusha
sbb
xor
push
std
adc
lret
stc
add
cmp
mov
movsb
push
inc
cltd
push
push
inc
sbb
popf
pop
mov
add
sbb
inc
mov
sti
push
rcll
and
or
test
subl
cmp
fdivl
std
add
and
xchg
push
mov
mov
mov
ds
ss
inc
fisubrl
das
shl
lods
ja
insl
inc
mov
pop
nop
fs
lret
xchg
out
sbb
dec
add
mov
cmp
andb
mov
inc
jns
cmovne
mov
jne
mov
inc
repnz
in
cmpsl
fistl
mov
dec
xor
vpcmpeqw
cs
inc
les
jo
dec
cmpsl
test
fists
cmpsb
sbb
jl
sbb
je
jo
push
add
sbb
jge
or
sbb
or
testb
inc
mov
push
lret
shlb
pop
ja
ret
lret
mov
adc
out
and
aad
dec
mov
mov
fidivs
inc
or
jecxz
dec
mov
test
scas
jns
and
test
sub
xchg
mov
pop
fidivrs
jne
cmp
insb
lds
pop
test
sub
sbb
dec
sbb
out
or
lea
lds
adc
lcall
cmpb
rolb
mov
lcall
dec
sbb
mov
sbb
clc
sbb
sub
ss
in
mov
push
mov
sbb
add
sbb
jge
out
pop
mov
lods
xchg
pop
adc
out
mov
mov
lods
rolb
out
pushf
hlt
mov
sub
insb
ret
rol
mov
mov
push
subb
xchg
out
mov
mov
dec
cmp
dec
int3
andl
push
mov
adc
jno
mov
clc
dec
add
or
mov
mov
jge
divb
add
jbe
outsb
cld
xor
aam
js
test
sub
mov
ljmp
repnz
jge
mov
xor
sbb
in
sbb
mov
xor
mov
daa
jns
pop
into
popf
fldenv
sub
xchg
in
cmp
rcll
movl
mov
in
out
nop
push
push
addb
jl
mov
clc
imul
cs
jo
mov
std
js
imul
push
stos
cwtl
mov
ljmp
push
sbb
pop
jl
loopne
push
jno
ret
pop
pop
push
adcb
mov
add
shl
inc
lods
jl
mov
mov
inc
inc
adc
fwait
inc
dec
push
out
add
into
aaa
mull
les
sub
aam
jno
std
push
cli
incl
test
jl
or
ds
xchg
xor
hlt
nop
test
stos
in
pusha
sbbl
jmp
test
repz
fldl
mov
mov
cmp
xchg
xlat
add
mov
out
mov
xchg
test
dec
cwtl
call
lock
fildl
cmp
push
add
popa
addb
out
gs
and
addr16
pop
js
pop
dec
scas
pushf
mov
das
lods
or
cli
rclb
add
xor
shll
cmpsb
sub
mov
outsb
std
pop
adc
repnz
fsubl
xchg
or
add
in
pop
jne
dec
sub
dec
inc
push
je
ds
add
hlt
pushf
lret
js
cmc
lret
movsb
out
repz
adc
leave
fwait
stc
pop
out
movsb
je
xor
fisubrs
or
mov
insl
nop
sub
addr16
or
call
sbb
mov
mov
sti
and
adc
mov
adc
add
enter
addb
adc
lea
outsl
push
jecxz
das
scas
pop
push
pop
dec
pop
dec
push
bound
fwait
mov
sbb
and
fistl
mov
xchg
xor
pop
loope
dec
pop
inc
mov
inc
outsb
xlat
and
into
call
cwtl
push
adc
adc
xor
inc
ljmp
mov
mov
cmp
loope
int
pop
mov
shrl
mov
xchg
mov
pop
lret
nop
pop
shrl
xor
mov
jecxz
imul
mov
cs
add
enter
mov
aam
pop
fistpl
inc
jmp
mov
sub
sub
mov
xchg
add
mov
jnp
jo
hlt
or
adc
add
jl
lret
sbb
int
mov
fsubp
std
in
jns
xor
mov
add
scas
or
cmp
push
push
add
lret
xor
loope
push
jb
pushf
lret
pop
ss
iret
and
sbb
mov
mov
inc
sti
ret
fdivs
xlat
mov
mov
test
mov
in
mov
icebp
popa
lret
or
test
mov
inc
push
aas
movsb
cmp
and
cmp
fcompl
push
inc
pop
xor
rep
push
and
daa
xchg
mov
inc
pop
lret
xorb
adc
jmp
aad
sub
pop
orl
xchg
sub
and
sbb
lods
mov
std
pop
dec
cmp
orl
jg
add
xchg
or
xor
aad
daa
jg
add
in
or
mov
inc
imul
pop
jmp
cmp
or
test
fistps
ror
cmp
ja
inc
mov
jno
xor
lret
icebp
jp
jns
std
mov
dec
push
insl
cli
pop
sbb
ret
das
add
shrl
pop
pop
mov
and
mov
loopne
pop
ret
dec
sub
add
cmp
pcmpgtb
jno
and
mov
loop
sub
sbb
xchg
bound
and
xchg
xor
pop
sub
xchg
dec
push
ffree
jmp
jmp
inc
ljmp
ss
scas
ljmp
cmp
mov
or
xchg
rclb
js
add
pop
and
xchg
stos
mov
adc
pop
insl
lods
out
xor
stos
jl
adc
enter
sbb
test
sub
or
push
push
jp
testb
add
mov
sbb
jno
movsl
movsb
xchg
add
mov
push
lock
xor
xchg
cmpsl
adc
add
or
bound
inc
andl
or
ret
push
add
test
adc
mov
or
stc
pop
adc
xchg
mov
mov
pop
test
cs
push
lds
aaa
cmp
push
inc
push
mov
adc
pop
enter
inc
test
adcl
xchg
arpl
cmp
insb
subl
xchg
inc
push
dec
push
adc
pusha
adc
outsb
loope
in
and
popf
adc
push
ja
push
fstps
mov
mov
mov
pop
adc
adc
cli
mov
and
notl
xor
pop
int3
xor
push
xchg
out
popa
pop
mov
fwait
out
ficomps
cwtl
adc
dec
int3
aam
and
scas
lret
mov
cmp
sti
out
push
mov
aas
pop
imul
mov
inc
je
test
stc
xorb
andl
sti
scas
add
and
cmp
int
js
fisttpll
adc
cmp
xchg
add
add
dec
roll
mov
loopne
jno
ror
adcl
sbb
or
bound
loopne
popf
sub
loopne
xchg
jle
add
lock
mov
push
dec
cmp
xorl
push
movsb
je
jo
push
add
sbb
or
aam
out
es
aaa
in
lds
shrb
cld
pop
jbe
in
push
mov
sarb
fabs
xor
mov
test
mov
xor
and
cmp
cmp
out
jecxz
push
push
xchg
pop
pop
mov
stos
int3
shr
mov
xor
mov
cmovbe
into
sahf
out
das
add
mov
adc
je
xor
xor
mov
pop
std
cltd
rolb
mov
imul
lret
mov
ljmp
push
stc
dec
sub
rclb
cmpsl
sub
push
sub
bound
lods
dec
les
cmpsb
call
cmc
add
repz
xor
les
popf
pop
mov
add
fisubl
mov
cli
mulb
notb
push
and
lret
mov
stos
sbbb
push
xor
iret
insb
sub
insb
jb
pop
movhps
cs
inc
pusha
and
cmp
push
test
dec
in
lret
push
push
push
mov
xor
enter
lret
jo
stos
push
faddl
sbb
pop
out
mov
push
lahf
adc
and
aas
lods
xchg
xchg
arpl
mov
xchg
inc
mov
pop
das
sub
lock
in
jno
inc
outsb
and
shl
pop
dec
jb
pop
hlt
jo
push
outsb
sahf
cmp
push
lcall
fistpl
mov
stc
inc
push
push
mov
mov
inc
test
push
hlt
push
dec
test
fwait
dec
pop
jge
insl
pop
mov
aad
cmp
mov
decb
test
push
or
rolb
xchg
xchg
movsl
cmpsl
xchg
jo
jno
add
mov
jge
call
insl
pop
dec
dec
mov
dec
out
icebp
cmpsl
loop
jmp
push
div
cltd
add
out
in
mov
in
gs
sub
xlat
adc
fldl
mov
outsb
or
adc
mov
stos
pop
ret
push
popf
and
jo
push
loope
jp
push
inc
rcl
bound
fisttpll
shrl
int
pop
clc
push
pop
dec
rcrl
test
adc
inc
das
js
sub
test
sub
ja
nop
arpl
cmc
es
cmp
pop
mov
int3
hlt
mov
aas
clc
dec
add
call
xchg
mov
mov
mov
mov
into
lcall
ror
ljmp
scas
jg
pop
loope
notl
sbb
pop
or
dec
fldt
lods
pop
cmp
andb
xor
jle
call
add
stos
or
cld
pop
add
mov
imul
xchg
sub
or
fdivl
cli
and
enter
cli
data16
out
inc
cld
inc
test
into
popf
and
fisttpll
xor
push
mov
cli
out
push
loopne
xchg
jb
mov
std
cmp
sbb
adc
mov
and
add
test
scas
dec
mov
adc
test
repz
repnz
mov
inc
sbb
and
outsb
adc
das
sbb
in
mov
pop
mov
movsl
icebp
sub
lret
or
add
cmc
fcmovnu
adc
enter
lret
fwait
stos
dec
push
dec
out
mov
jp
jecxz
push
dec
cmp
cmpsl
cmp
xor
adc
inc
pop
scas
sub
cmpsl
cmp
mov
fwait
xchg
orl
stos
xchg
add
loopne
mov
addr16
add
xor
inc
addr16
sub
jecxz
dec
cmc
mov
mov
push
push
pop
cwtl
bound
aaa
mov
push
pop
add
jno
aaa
push
jo
test
push
pop
jmp
dec
ret
js
push
mov
lods
jmp
fwait
subl
cs
daa
dec
jo
movsl
inc
mov
ja
pushl
lea
out
out
dec
adc
shll
js
xor
das
movsb
pop
sub
clc
idivb
inc
outsl
ficomps
push
xchg
cmpsb
push
pop
mov
inc
mov
xchg
rclb
movsl
lods
mov
xchg
push
fidivrs
add
xchg
ss
add
nop
lods
jb
insl
je
ss
fwait
xchg
or
pop
clc
or
cmp
gs
icebp
sti
popf
mov
xchg
fwait
add
push
scas
adc
push
cmp
aad
jge
xor
test
movsb
in
dec
negb
movsl
lods
xlat
flds
dec
xchg
dec
mov
sbb
enter
cmp
add
xor
and
ss
adc
sarl
or
aam
push
js
sub
jle
lcall
lock
jg
inc
push
mov
pop
rcrl
and
mov
mov
fistpl
cmc
aaa
enter
les
out
mov
push
cs
sub
cmpsl
ret
adc
sarl
loopne
jp
repz
sbb
aam
dec
subl
push
inc
jge
inc
mov
aad
int
stos
inc
iret
and
and
dec
test
add
add
ret
movsb
xor
sbb
test
jge
cmp
lock
test
fs
rcrl
popf
gs
mov
sub
push
xor
xchg
adc
jmp
pop
testb
lcall
adc
lcall
lods
xchg
aam
lea
adc
dec
mov
lret
adc
xchg
mov
xor
push
lahf
and
dec
andl
mov
push
dec
jae
test
jp
aaa
ljmp
dec
sbb
call
popa
jnp
jns
fs
inc
jne
lods
pop
gs
fcom
inc
hlt
adc
cmc
add
mov
mov
cld
and
mov
and
add
mov
push
add
sbb
inc
popf
dec
dec
sbb
lahf
mov
adc
bound
mov
pop
mov
popa
icebp
push
pushf
roll
jo
ret
frstor
dec
test
lods
arpl
xlat
fnsetpm(287
notb
sub
sbb
push
mov
lea
loope
in
adc
pop
cmp
stos
jae
mov
scas
adc
cmpsl
cld
scas
rcrb
mov
mov
cmpb
inc
push
jae
repz
cmc
subl
pop
dec
imul
jg
fdivs
arpl
push
mov
test
shlb
aam
and
cmc
stos
leave
fcomip
pop
js
int
outsl
push
int3
push
loop
insb
sbbl
xchg
jb
jno
cld
cmp
pop
mov
loopne
push
pop
and
stos
jl
std
xor
popa
mov
push
mov
clc
cmp
inc
test
cmp
mov
mov
xchg
loope
adc
adcb
ljmp
popa
call
fdivrs
loope
jno
aam
push
in
xor
rcr
pop
inc
mov
jbe
fbld
icebp
mov
or
push
bound
mov
or
fistpll
and
inc
mov
dec
addr16
jg
push
mov
cmp
sub
mov
sub
ja
fsubrl
add
lods
jecxz
fwait
rcl
add
dec
jg
xor
mov
cmc
inc
xchg
addl
adc
sub
insb
jno
cmpb
roll
mov
outsb
add
mov
stos
jno
sbb
adc
data16
xchg
xchg
ljmp
mov
push
push
push
jne
aam
aaa
ss
mov
cmp
xchg
lret
mov
cmp
push
test
paddw
and
les
sahf
rcr
pushf
loope
cltd
imul
inc
cmp
xor
ret
leave
out
or
sti
xchg
idiv
or
xlat
dec
repnz
dec
hlt
ljmp
int3
popa
sub
fst
arpl
mov
mov
test
adc
pop
scas
inc
insb
mov
xchg
int
push
xchg
shr
sbb
mov
mov
sbb
and
pusha
push
in
cld
sub
push
negb
fisttpl
adc
dec
push
xor
adc
or
or
insl
cmpsl
cld
push
stc
sub
inc
dec
or
dec
mov
push
push
mov
push
test
rcrb
dec
pop
xchg
jnp
push
pop
ret
jecxz
add
push
ret
dec
dec
mov
ljmp
xor
sbb
lods
lock
pop
scas
stos
int3
mov
push
and
mov
imul
ljmp
mov
pop
dec
jne
insl
xlat
lahf
in
in
bound
icebp
ja
into
popf
xchg
cmp
pop
cltd
sbb
or
mov
mov
push
insb
std
or
scas
negl
push
fmuls
dec
les
test
push
mov
ret
scas
stos
das
jg
cmp
inc
inc
aam
or
adc
in
sub
sub
in
xchg
xchg
pop
pushf
push
dec
outsl
add
adc
in
fs
jnp
aaa
jne
jb
call
pusha
push
dec
repz
mov
rcll
pop
out
imul
add
sbb
jns
sub
popa
and
into
xorl
jle
mov
jmp
std
xor
jmp
mov
imul
decl
nop
pop
dec
push
dec
sahf
xchg
fisttpll
lret
adc
jno
in
and
ss
add
xchg
sbb
xor
sti
cld
inc
call
mov
inc
cs
push
mov
aas
test
hlt
and
mov
xchg
and
sub
repnz
add
jge
or
or
es
cs
mov
cli
or
idivb
stos
fisubrl
add
hlt
outsl
in
xor
cs
adc
sbb
dec
mov
and
or
push
out
mov
push
dec
gs
fadds
mov
inc
fwait
xor
test
inc
arpl
imul
arpl
inc
and
sub
sub
dec
pop
inc
inc
adc
fbld
mov
sbb
dec
imul
adc
addl
popf
fbld
mov
inc
xchg
les
imul
dec
xor
xchg
sbb
mov
xchg
pushl
push
popf
negl
xlat
out
fbld
test
sub
in
pop
cmp
pminub
int
lds
inc
addb
in
dec
into
mov
mov
lret
ljmp
or
cli
mov
pop
pop
xchg
inc
jg
pop
lds
dec
pop
and
mov
ss
ret
fmuls
sbb
cmpsl
pop
cmp
lret
sub
xchg
jg
xor
insl
pop
mov
mov
jbe
dec
and
mov
loop
jge
push
subb
aam
mov
frstor
sub
inc
push
cmp
inc
cmp
and
not
adc
mov
ja
jae
scas
aaa
adc
fstpt
das
insl
fs
sti
dec
mov
xchg
scas
cwtl
sub
sub
jmp
test
inc
cvtps2pi
mov
inc
loope
mov
ret
or
in
push
or
push
test
adc
push
aad
xchg
jg
jo
cmc
xchg
pop
jl
sti
enter
adc
test
hlt
in
or
push
sbb
sbb
push
jg,pn
xor
push
dec
fwait
das
mov
mov
loop
dec
cmp
and
xchg
push
or
add
xor
inc
push
div
cli
sti
push
add
popa
sbb
data16
stos
outsb
stos
rclb
xor
jge
push
pop
sbb
sub
mov
mov
cmp
xor
and
add
add
dec
cmp
cs
lods
pop
popa
mov
cli
es
and
jno
jae
sbb
xchg
xchg
push
jae
or
mov
or
push
in
inc
out
xor
mov
gs
xor
mov
in
adc
jbe
push
fiadds
outsl
scas
push
or
loope
icebp
sub
cltd
int
leave
mov
mov
sbb
dec
int
mov
les
aad
or
test
jbe
jo
cmp
adc
idivb
outsl
jne
or
ljmp
mov
mov
ror
mov
sub
mov
fidivs
sti
xor
popa
mov
cmp
mov
leave
push
out
shrb
mov
sub
imul
daa
adc
bound
sti
push
inc
data16
add
sub
notb
or
and
aad
pop
adc
ljmp
not
pop
stos
jmp
cmp
js
add
jae
adc
xchg
lcall
jg
ret
jb
aas
add
mov
push
daa
pop
pop
jnp
sub
inc
inc
sbb
jbe
add
and
jge
imul
fbstp
rcrb
mov
pop
daa
fs
cld
pusha
adc
int3
insl
sti
rclb
pop
pop
inc
push
outsl
xor
sbb
out
jg
sbb
jge
jl
mov
sti
mov
jno
dec
into
inc
int
xchg
xchg
int
fsub
jmp
adc
rcl
cmpsl
fs
shrb
cmp
mov
cmc
mov
scas
xchg
and
lea
add
das
pop
or
and
ljmp
lock
push
dec
ljmp
mov
in
and
push
jle
push
sub
sub
lods
cmp
inc
pop
xor
inc
mov
lcall
sub
leave
lods
xor
adc
out
out
push
push
std
sub
mov
mov
icebp
movsl
push
adc
sbb
sbb
xchg
cmpsl
inc
loopne
push
push
arpl
decb
ret
lock
inc
sti
mov
imul
push
fisubrl
mov
test
fwait
call
cmp
lahf
dec
aaa
fdivl
lret
and
push
sub
add
mov
or
adc
scas
scas
xchg
rolb
cltd
mov
pop
push
ficomps
mov
mov
push
lret
aad
stos
xor
dec
popf
or
in
in
pop
and
js
test
loop
xor
rclb
dec
pop
lea
loope
pop
push
add
test
scas
dec
outsb
or
sub
adc
pop
and
xchg
push
loop
rcl
in
push
gs
pop
dec
test
pop
or
mov
add
ja
shl
xchg
ds
pusha
jmp
jecxz
jge
xchg
cmpsb
mov
in
sahf
frstor
push
push
int3
add
movsl
push
lcall
dec
icebp
out
xchg
mov
testb
push
ja
mov
xchg
rorb
pop
fcoml
out
mull
add
lods
add
jb
sub
scas
jmp
or
fiaddl
aas
push
out
push
out
leave
inc
push
pushf
pop
and
loopne
ss
dec
inc
sub
add
outsl
push
sub
rcll
repz
popa
outsl
sub
pop
adc
cmpsl
imul
xor
inc
inc
scas
mov
lret
xchg
fs
push
pop
push
sub
sarb
icebp
adc
xchg
sbb
sub
test
xchg
cmpsb
add
cmp
mov
in
sti
lods
fstpl
test
mov
sti
adc
push
pop
xchg
push
insb
dec
movsb
rcrb
jecxz
jp
adc
push
sub
rorb
add
test
loop
pop
out
jp
and
pop
add
ret
inc
lds
cmpsl
jp
ja
aaa
push
xor
mov
jae
loop
jne
cld
int3
or
mov
stos
mov
test
xor
xchg
push
xchg
out
jle
dec
cli
and
or
jp
adc
mov
mov
dec
mov
xor
pop
push
aam
adc
jb
sub
aad
cmpsl
dec
aam
cmp
push
sub
repz
jp
mov
mov
jbe
pop
cmp
imul
je
pop
xchg
mov
int3
aad
mov
stos
mov
dec
or
int
sbb
push
sub
cld
and
sbb
push
sub
ror
aaa
adc
loope
je
cmc
sbb
ret
inc
test
stos
or
sar
inc
lea
and
push
loop
stos
mov
adc
aam
inc
aad
adc
outsl
nop
cmpsl
pop
ret
sub
mov
shlb
xchg
push
call
test
adc
fcmovnbe
repnz
or
adc
mov
sbb
mul
and
push
std
test
mov
mov
jns
stc
lea
add
jmp
addr16
mov
jbe
leave
cmpsb
in
loopne
movsl
test
or
or
adc
into
lods
hlt
rolb
ds
adc
inc
xor
sub
push
push
insb
inc
xor
cmp
popa
xchg
jle
mov
nop
mov
pop
loope
push
xor
call
fiaddl
jb
xchg
dec
pop
inc
inc
daa
mov
dec
cmp
push
popf
dec
mov
mov
pop
dec
test
fsubl
push
xchg
rorb
xchg
jle
in
and
cld
popf
pop
push
sub
xor
adc
cli
and
mulw
jge
mov
cmp
dec
jbe
cmpsb
jmp
fcoms
mov
ret
lods
push
std
xor
lods
sbb
aaa
mov
in
aam
cmp
in
add
enter
jno
jecxz
movsb
ljmp
mov
inc
sub
dec
jo
iret
mov
ret
mov
or
and
loop
or
xchg
daa
dec
aad
pop
jle
rcll
sbb
mov
or
mov
enter
gs
mov
scas
testl
pop
adc
lcall
add
push
xchg
pop
jo
adc
push
inc
pusha
inc
stc
push
add
inc
pop
inc
leave
adc
push
inc
inc
sub
sub
adc
dec
lods
cmc
mov
sbb
movsl
cmp
cld
sti
adc
lahf
cmc
insb
mov
stos
jge
inc
jo
mov
shll
add
fwait
jp
nop
and
lahf
push
clc
leave
add
dec
and
or
ret
les
orl
inc
xor
inc
xchg
enter
add
ja
dec
or
sbb
in
dec
ljmp
rorb
ret
fimuls
fadds
test
xchg
add
stos
stos
dec
mov
mov
pop
adc
cmpsl
iret
xchg
xor
dec
icebp
or
lds
push
mov
xlat
or
mov
sub
lock
mov
mov
pushl
or
imul
pop
sub
ja
adc
imul
xchg
ja
mov
fwait
mov
inc
cmpl
jmp
push
add
ljmp
sub
xchg
movsb
push
rcll
sahf
cltd
jno
ja
sub
stc
push
cmp
push
ss
push
push
xchg
push
mov
inc
shll
mov
and
xor
mov
out
movsl
jmp
sbb
fcomps
lods
mov
mov
or
faddl
shrl
mov
test
push
ret
push
gs
fwait
ds
ja
mov
test
xchg
aam
into
pop
mov
int
add
inc
sbb
sub
mov
iret
pusha
and
js
inc
push
mov
out
mov
and
icebp
fwait
std
or
and
jmp
dec
or
sub
lret
mov
and
lods
mov
int3
mov
mov
movsl
jg
pop
mov
mov
xchg
mov
mov
mov
mov
sbb
mov
mov
push
push
adc
xor
pushf
adc
mov
aam
xchg
outsb
sbb
test
pop
mov
push
stos
push
dec
dec
or
jle
dec
push
movsl
sub
lret
xor
sub
jl
insb
xchg
push
subb
lds
inc
out
pop
and
cmp
push
adc
insl
lret
mov
hlt
xchg
jle
mov
cli
loop
scas
out
enter
aas
int3
into
or
push
mov
fwait
jb
fwait
stos
mov
out
test
adc
dec
sahf
jno
pop
cmc
or
cltd
mov
fs
ds
data16
xor
xor
xchg
sub
das
push
and
ds
push
aad
mov
jne,pt
mov
sbb
xchg
sbb
scas
pusha
stos
adc
mov
loope
fsts
xor
in
add
loopne
pop
lahf
lret
jp
call
mov
jns
mov
mov
dec
adc
ss
movsb
pop
xchg
or
jns
and
dec
daa
jecxz
lcall
inc
cmpb
mov
mov
je
mov
lock
lods
xchg
lods
lret
sub
jns
mov
push
std
lds
push
xchg
sbb
test
imul
imul
mov
xor
xlat
cmp
push
lods
into
push
and
mov
pop
mov
cmp
sub
add
je
sbb
jo
dec
mov
cmp
enter
lea
inc
cmp
adc
sar
dec
scas
pusha
in
push
mov
or
xchg
insl
and
test
test
mov
sub
divl
sub
cmpl
lods
sbb
sbb
add
iret
ret
pop
cmpb
fadds
scas
mov
and
add
cmp
outsl
jmp
mov
mov
lcall
out
cmp
pop
sbb
mov
arpl
mov
mov
stc
inc
pop
and
xchg
sub
pop
sahf
add
out
push
insb
cmpsl
and
aas
push
mov
outsl
pop
test
xchg
inc
nop
xlat
sbbl
xchg
loop
jns
mov
bound
pop
fwait
jecxz
popa
xchg
pusha
xor
ffree
mov
ja
jl
pop
lret
in
idivb
xor
fistps
sbb
push
cmpl
scas
rcll
mov
adc
test
xor
xchg
adc
jnp
xchg
in
cmc
and
adc
subb
jmp
nop
outsl
pop
dec
xor
cmpsb
mov
pop
jb
pop
jecxz
adc
pop
adc
movsb
fs
push
jecxz
ss
xor
xchg
push
ja
inc
inc
fcmove
sbb
inc
push
and
push
pop
dec
cmp
imul
mov
or
jne
ja
in
in
lahf
cmp
scas
xchg
mov
pop
fisubs
mov
lods
aad
xchg
dec
popf
loope
jo
cmp
loope
sub
in
lock
adc
es
insl
adc
cltd
mov
mov
push
test
mov
sub
shrl
outsl
and
xchg
xor
mov
mov
ret
int3
pop
pop
fstl
sbb
dec
divb
add
scas
sub
je
jge
aam
popf
mov
pop
dec
push
call
lahf
call
pop
movsl
push
push
or
pop
cmpsb
stos
out
mov
push
add
dec
jmp
xchg
fsubs
ret
xchg
test
outsb
pop
mov
pop
lds
or
ret
rorb
dec
cmpl
mov
insb
add
dec
add
add
imul
cmp
les
inc
mov
jmp
sbbb
cwtl
jecxz
test
or
adc
dec
sbb
test
lret
inc
cwtl
sub
clc
mov
push
or
sarb
cmp
je
sbb
dec
ds
loope
sub
scas
js
in
scas
mov
test
stos
dec
test
xchg
ret
test
lods
imul
cs
cmp
scas
lret
adc
js
out
pop
fs
cmp
clc
into
mov
test
stc
iret
add
jo
xlat
jo
pushf
cli
lret
pop
and
mov
adc
pop
je
mov
lahf
stos
adc
cld
inc
mov
sbb
jl
or
jle
xor
cmpb
fsubrs
or
imul
clc
push
mov
jmp
cmpsb
mov
dec
xor
dec
xor
pop
xchg
inc
mov
cltd
daa
fisubs
mov
call
dec
les
jo
imulb
mov
arpl
or
pop
jne
sahf
das
mov
lea
out
mov
mov
and
outsb
pop
cmp
rclb
rorl
ljmp
jbe
mov
or
fnstcw
clc
push
scas
or
and
mov
inc
decb
sbb
xchg
mov
test
aad
sub
dec
push
xlat
pop
mov
adc
shrl
loop
sahf
aam
popf
daa
dec
cmp
inc
adc
add
test
test
xchg
aaa
push
lret
jae
repnz
mov
fdivl
or
xchg
mov
test
adc
sbb
mov
cmp
outsl
pop
jb
shrl
lahf
loop
adc
notb
and
jae
das
xlat
mov
es
pop
push
stos
shrl
xor
mov
test
int
inc
mov
adc
negl
fdivrl
cld
add
push
ja
inc
repz
lds
add
pop
mov
imul
sbb
sub
test
pop
aam
sub
mov
lock
clc
imul
inc
inc
ds
orl
lret
cmp
pop
popf
add
pop
adc
push
push
add
or
outsl
dec
cmp
cld
idivl
dec
push
mulb
ljmp
arpl
test
insl
xchg
shrl
inc
bswap
or
mov
orb
icebp
inc
inc
inc
loop
gs
xor
jle
xor
mov
pop
nop
sbb
andb
lret
in
push
cmp
inc
hlt
je
xlat
insl
add
imul
es
je
and
mov
add
adc
lcall
mov
test
arpl
cmpsb
jge
push
adc
or
cltd
add
mov
inc
addl
mov
fimull
and
xchg
in
lea
xchg
xlat
fwait
mov
push
and
lret
ret
or
xor
mov
imul
cmp
inc
lock
xor
pop
xlat
mov
jge
loop
adc
push
shlb
out
xchg
cli
jle
ret
adc
cltd
lock
int3
orl
push
sub
outsl
push
and
inc
rcl
test
add
hlt
pop
pop
push
pusha
adc
add
xor
sarl
inc
sub
div
pop
sub
cwtl
fldt
shl
roll
imul
sti
and
and
sti
push
mov
ljmp
mov
push
ret
lea
xlat
pop
jb
sbb
push
ret
push
scas
xor
rclb
cmp
cmc
push
sub
or
xchg
ret
mov
ds
pop
pushf
cmp
test
gs
mov
ds
sub
inc
and
push
es
jb
cmpsl
mov
das
outsb
mov
pop
jmp
mov
or
aaa
dec
or
xor
xor
adc
xchg
les
sub
movsl
jg
mov
or
in
cmp
dec
lods
mov
call
cli
and
mov
dec
mov
or
mov
inc
jns
scas
xchg
xchg
xorl
xchg
scas
mov
loope
cmp
pop
jne
xchg
sbb
jl
in
inc
adc
pop
xor
sbb
lods
mov
push
divl
scas
pop
inc
sbb
insl
mov
addr16
or
xorl
sbb
push
mov
pop
insl
lret
jae
push
mov
add
xlat
rolb
mov
xor
cmp
repz
insl
xor
test
ret
pop
mov
jns
cli
mov
jge
mov
jge
repz
push
xchg
jge
pusha
dec
mov
jle
push
imul
test
sbb
movsb
inc
test
sbb
sub
xorl
inc
pop
lcall
or
ds
filds
ds
mov
hlt
cmp
xor
sub
mov
sub
and
mov
gs
fiadds
jo
push
pop
leave
add
mov
dec
int3
lock
cmp
push
cltd
hlt
lods
outsl
jne
inc
xchg
pop
out
push
popa
lock
mov
test
stos
lahf
adc
xlat
push
test
adc
pop
pop
xchg
insb
jae
pop
push
jp
imul
mov
mov
out
xchg
mov
ss
mov
scas
jnp
dec
push
adc
xchg
adc
sub
push
or
loope
fsts
jge
xchg
adc
loope
xorb
mov
add
mov
adc
mov
arpl
test
scas
mov
cmpsl
test
movsl
jne
outsb
or
cli
mov
stos
jmp
fs
dec
mov
ljmp
cmp
xchg
movsl
inc
mov
sbb
out
mov
mov
lds
or
xchg
push
xchg
outsl
xchg
sahf
sub
test
out
lods
pop
pop
ds
jnp
inc
mov
pop
pop
shll
xchg
outsl
or
shrb
andl
aad
mov
or
sub
xchg
mov
adc
iret
js
cli
test
add
div
lock
push
jle
stos
cmp
add
cli
enter
inc
pushf
mov
mov
loope
xchg
jbe
gs
xor
xchg
dec
shl
xor
lods
and
ret
cmc
and
je
call
mov
or
loop
mov
and
mov
xchg
xchg
add
lahf
push
call
mov
inc
stos
inc
push
flds
mov
out
sub
test
mov
xor
insl
or
movlps
mov
dec
ds
sbb
mov
push
xchg
push
add
cltd
sub
je
lds
and
dec
pop
addr16
scas
add
add
push
mov
test
sahf
bnd
jne
and
cs
call
xchg
iret
pusha
pop
pop
mov
mov
fidivs
pusha
jmp
add
cmp
mov
test
mov
mov
daa
dec
pop
test
adc
insb
inc
jae
scas
into
les
psrlq
inc
lret
mov
push
push
push
mov
addl
sbb
scas
mov
mov
testl
test
jbe
lcall
aam
cwtl
ja
dec
sti
or
mov
cmp
mov
push
sahf
clc
test
cmp
cmp
mov
scas
test
mov
mov
rcll
push
sub
das
icebp
mov
mov
cltd
ljmp
lret
adc
sbb
lea
xchg
mov
pop
push
xchg
in
scas
repz
mov
mov
addb
adc
sbb
add
xchg
adc
shl
push
popf
daa
aaa
ja
push
push
scas
jmp
mov
adc
ds
adc
mov
nop
mov
stos
adc
jmp
push
fwait
arpl
dec
push
loopne
mov
add
or
jp
pop
out
sarl
clc
jmp
les
push
aad
movsl
pop
outsb
add
or
aam
xchg
popf
fidivrs
jl
jge
inc
stc
pop
subb
hlt
cmp
pop
sti
call
dec
ja
push
imul
adc
iret
jne
data16
outsb
call
scas
inc
ret
cmp
push
in
jg
decl
or
aam
lds
pop
outsl
and
test
add
ficoms
push
dec
test
xchg
mov
ds
add
push
in
add
enter
ja
js
add
ret
hlt
mov
dec
dec
decl
sbb
jbe
dec
rcrl
test
xchg
cltd
and
lea
pop
arpl
push
stos
iret
mov
mov
or
jmp
sbb
dec
enter
arpl
test
rcl
mov
jne
fdivrl
mov
insl
nop
in
test
stos
hlt
fcomp
jbe
mov
add
lea
push
movsb
dec
xchg
dec
repz
ja
mov
sub
into
or
dec
pop
mov
shrb
das
decl
mov
jnp
les
jmp
or
pusha
mov
adc
mov
ljmp
lret
pop
imul
jns
test
icebp
lcall
xchg
jns
xlat
jmp
dec
adc
sub
mov
inc
leave
mov
mov
test
xchg
imul
fidivrs
dec
fsubrp
sbb
mov
and
test
jo
cltd
adc
cmp
insb
cmpb
mov
lahf
mov
mov
ss
jne
sahf
lret
inc
cmp
arpl
push
xor
push
mov
sub
sbb
and
sub
in
pop
inc
in
dec
insl
push
push
dec
or
mov
add
movsb
lret
add
and
dec
jmp
incl
daa
pop
push
or
xchg
mov
mov
call
rcll
fisubrl
fidivrl
mov
dec
scas
stos
and
jne
fistps
push
or
jns
push
push
inc
stos
mov
inc
or
inc
outsl
pushf
mov
or
ss
mov
test
mov
pusha
movsl
cmpsb
sub
clc
mov
cmp
inc
and
and
or
inc
cmpsb
mov
out
dec
xchg
adcb
aad
push
ror
call
icebp
es
sbb
aaa
loope
or
nop
mov
xchg
ljmp
or
mov
dec
inc
pop
ljmp
rorl
dec
aad
leave
inc
ret
mov
mov
and
rcll
dec
xor
jb
mov
arpl
shll
jns
rcll
or
movsb
adc
decb
loope
je
or
jne
test
in
mov
mov
shr
sbb
mov
add
insl
xor
ja
in
pop
inc
push
ret
mov
cld
cmp
xor
movsl
es
cmpsb
ja
int
xchg
add
testl
cmpsb
mov
ret
bound
push
mov
xchg
rcrb
inc
adc
mov
stc
cmp
cwtl
mov
stc
test
sbb
fstl
add
pushf
push
scas
fstl
in
imul
lea
lcall
pop
push
sbb
mov
cmc
and
inc
add
xchg
xchg
or
cmp
pop
push
xchg
in
pusha
gs
ret
gs
and
aad
outsl
inc
xchg
xor
push
rcrb
inc
add
test
cmpb
jne
arpl
out
ss
stc
pop
and
push
mov
mov
scas
ja
cmp
in
popf
lea
lock
cmp
adc
pop
xchg
mov
or
inc
dec
nop
inc
sub
and
roll
xor
mov
sbb
mov
xchg
mov
shlb
xor
pop
insb
gs
pusha
inc
loop
inc
enter
xor
xor
adc
rorb
js
stos
jo
icebp
pop
mov
or
mov
aaa
push
pusha
lea
push
es
jg
lods
pushf
hlt
mov
sbb
xchg
jmp
in
scas
or
cs
movsl
push
xchg
pop
mov
shrl
inc
repnz
punpcklwd
add
mov
jge
outsb
out
or
xor
aaa
popf
mov
fninit
mov
addr16
lcall
pop
sbb
mov
enter
jnp,pt
dec
inc
test
and
iret
lods
push
jae
sahf
gs
mov
xlat
xchg
lds
xchg
sub
cwtl
je
or
mov
add
outsl
ror
je
sbb
mov
repnz
mov
movsl
xlat
or
push
rclb
sbb
shrl
out
mov
repz
push
aas
ss
lods
mov
fiaddl
push
addl
rcrb
add
mov
jge
cld
jnp
push
enter
int
je
popf
sub
xchg
push
or
xchg
icebp
xchg
loope
imul
inc
addb
sub
adc
push
sub
cmc
push
mov
add
or
out
mov
sti
xchg
xchg
dec
and
sub
push
inc
aaa
sub
xlat
pop
adc
outsl
add
call
lods
sub
mov
ficomps
mov
fsubp
sub
mov
ret
repz
push
test
icebp
in
outsb
pop
gs
or
jne
xor
sbb
es
cli
lds
into
fimull
not
jmp
dec
setg
stos
or
push
cwtl
pop
fadds
add
or
les
sub
dec
bnd
decb
mov
rorb
mov
or
jg
hlt
pop
aas
jo
mov
add
lret
test
mov
nop
test
std
jns
mov
inc
and
sbb
nop
adc
xchg
stos
jge
fsubl
push
or
mov
jb
jb
push
pop
dec
add
aad
push
stos
jp
pop
sub
movlps
inc
xchg
mov
and
sbb
inc
inc
push
cli
loope
sub
in
adc
pop
add
ja
icebp
jo
mov
test
cli
loope
sbb
and
mov
mov
adc
push
add
cmpl
sbb
add
pop
outsl
out
sbbl
int
mov
aad
pop
je
mov
cs
pop
cli
cmpsb
subl
xor
addb
mov
cli
xlat
cwtl
sub
movsb
mov
mov
jo
mov
std
jle
xchg
sub
and
pop
jl
jmp
add
jg
mov
xor
scas
sahf
jle
out
cmp
scas
les
cld
cmp
subl
repnz
scas
sar
push
idivb
incb
xchg
sbb
clc
shlb
outsl
fists
add
fidivs
xchg
mov
test
and
lahf
dec
mov
clc
aam
lret
dec
xchg
lahf
mov
adc
dec
dec
arpl
jno
test
sti
inc
imul
jns
movsl
pusha
pop
inc
adc
fsubrl
push
fistps
cmovo
mov
int
mov
cmp
add
and
repnz
jp,pt
fdivrl
into
cmp
push
aam
pop
fistpl
pusha
add
push
cmpsl
orl
sahf
mov
jne
das
movsl
mov
mov
adc
xchg
fstpl
push
cmpsl
sub
jge
test
je
insb
mov
popa
sub
rolb
divl
mov
add
xlat
ljmp
into
test
mov
movsl
adc
xchg
xchg
add
cltd
addr16
in
mov
fwait
sbb
gs
mov
int3
push
dec
lret
scas
lahf
cmp
mov
mov
add
push
pop
fs
idiv
lcall
jge
lock
push
sub
jecxz
out
mov
push
fisttps
icebp
and
jb
mov
or
decb
loop
inc
stos
cmp
or
cli
insl
dec
sbb
out
sbb
sahf
fs
loopne
ret
andb
mov
jecxz
cmpsl
vpsubb
outsb
mov
fnstsw
sub
push
mov
ds
cmpsb
and
xor
mov
insl
fcmovbe
dec
movsb
fmul
fs
push
jg
es
sbb
add
pop
rorb
mov
inc
sbb
push
mov
dec
and
nop
sbb
xor
adc
dec
pop
das
xchg
push
cmp
pusha
cmp
inc
mov
fisubrs
bound
std
jecxz
mov
loope
movzwl
cmp
cli
mov
movsb
ja
mov
ljmp
push
sti
aad
stos
xchg
and
lret
mov
mov
mov
int
dec
push
pop
lahf
xor
push
lock
jmp
nop
shr
shrb
arpl
dec
out
outsb
outsb
lea
or
test
fistps
mov
sub
pop
push
stos
jbe
pop
add
dec
test
add
mov
dec
xchg
aad
stc
test
xor
into
xorb
and
jmp
int
std
jmp
pop
andb
push
popf
mov
fistl
jae
andl
mov
js
aaa
push
xchg
jmp
push
add
sub
cmc
imul
mov
test
lret
stos
mov
cld
insb
jbe
shrb
roll
mov
lock
sbb
cmpsb
xor
add
je
pop
xchg
ds
in
aaa
add
test
jbe
xlat
loop
jecxz
jl
test
jge
jns
dec
add
mov
stos
or
sbb
push
xlat
and
popf
pop
mov
arpl
les
js
scas
lea
jmp
hlt
hlt
lods
mov
mov
inc
out
cltd
xor
mov
xchg
mov
xchg
push
jno
popf
cmp
sub
fucomip
dec
push
sub
popa
jmp
or
dec
pop
lock
stos
and
movsb
outsb
mull
scas
xor
add
clc
out
jne
adc
adc
sti
jae
int3
adc
mov
and
daa
fbld
add
outsl
inc
push
mov
pop
fcom
cmp
aas
scas
pushf
xchg
mov
fisubrs
xchg
jmp
inc
cmp
into
xchg
pop
pop
es
cwtl
dec
sbb
xor
leave
xchg
sbb
fiaddl
imul
xchg
and
xchg
loop
scas
fiadds
je
lret
push
test
lea
xor
fiaddl
shll
xor
cmp
xor
ror
and
fcomi
push
and
lcall
or
and
or
jecxz
out
mov
loope
fs
and
imull
movl
lods
xchg
pop
xchg
or
adc
scas
fadd
xor
xchg
andb
dec
push
call
add
xor
xchg
outsb
mov
arpl
cmp
jecxz
cld
sti
adc
gs
xchg
mov
xchg
xchg
in
push
sbb
inc
arpl
dec
jle
inc
add
xchg
mov
stc
push
inc
data16
call
or
divb
je
mov
lea
cmp
mov
icebp
shl
stos
and
and
decl
add
imul
sub
cld
xorb
dec
subb
mov
imulb
mov
pop
ljmp
xor
pusha
sbb
enter
lods
and
pop
sub
outsb
stc
cs
mov
shr
push
sub
loopne
inc
cld
push
andb
aam
sbb
jbe
rcl
outsl
jmp
xchg
imul
or
mov
jns
bound
and
xchg
push
mov
mov
adc
cmp
cs
pop
rclb
mov
and
rcl
dec
popa
xor
push
xchg
hlt
lret
mov
outsl
inc
inc
mov
xor
dec
add
icebp
pop
and
das
sti
lret
iret
sar
sahf
pop
pop
jnp
push
mov
push
pop
pushf
fwait
push
jnp
mov
sbb
mov
add
sub
cmp
or
bound
or
mov
pop
mov
jne
test
negl
push
inc
sub
xchg
xor
fsubrp
jle
ja
stos
lahf
mov
inc
jne
daa
int3
sarl
mov
sar
nop
mov
add
mov
jne
scas
and
xchg
repz
fs
mov
dec
add
sarb
imul
cmp
push
repz
std
push
cwtl
imul
pop
loop
mov
popf
sti
mov
popa
add
mov
add
sub
dec
jle
jecxz
cmp
inc
cmp
clc
lret
mov
popf
fisttps
jp
mov
dec
inc
test
mov
inc
fwait
jne
jg
push
mov
popf
daa
mov
stos
and
dec
in
popa
imul
or
cmp
inc
lods
jmp
sub
insb
fs
loop
push
jne,pn
or
in
stc
xor
push
push
lahf
arpl
add
jne
sbb
pop
inc
inc
dec
push
rorb
push
mov
rolb
dec
pop
mov
push
dec
daa
das
movsb
lods
and
ja
and
cmp
sbb
jecxz
clc
cmc
ret
jmp
push
cmp
and
jae
enter
mov
ficomps
mov
xchg
loope
scas
loope
lds
mov
mov
in
nop
imul
and
and
jne
test
test
adc
loopne
scas
cmp
push
mov
mov
mov
pop
icebp
mov
sbb
jo
and
cmp
xor
xorl
jmp
sub
into
adc
cwtl
pop
sbb
push
pop
dec
subl
mov
in
adc
sbb
mov
js
test
icebp
adc
cmp
mov
movsb
adc
sub
sbb
cmp
xor
mulb
mov
scas
mov
jb
push
pusha
xchg
pop
push
mov
clc
adc
bound
insl
sub
dec
mov
mov
ffree
xor
sbb
fmuls
dec
ja
push
xchg
or
pop
mulb
testb
xchg
incl
cmp
int
push
jg
cmpsl
cmc
push
rorl
sbb
data16
jp
bound
div
push
hlt
pop
sub
inc
movsb
dec
inc
mov
mov
mov
imulb
mov
or
test
ljmp
adc
or
mov
sbb
repnz
test
movsl
idiv
sahf
push
sub
xlat
notb
fsts
sbb
jmp
add
pop
sub
inc
dec
add
jge
loopne
sbb
cmp
pop
adc
pushl
std
pop
shlb
adc
adc
or
dec
push
xor
insl
mov
outsb
and
aad
pop
pop
mov
mov
add
dec
or
sbb
shrl
dec
mov
int3
aaa
or
mov
mov
mov
aam
gs
sub
cs
mov
aam
jnp
jae
mov
sub
pop
scas
data16
and
fists
jl
pop
nop
mov
sub
sub
lods
push
repz
popa
add
pop
pusha
pop
test
int
pop
jo
mov
repz
out
enter
dec
and
or
test
sbb
int
push
lea
addr16
fldl
ror
aad
push
add
int
push
aad
mov
push
cmpsl
je
and
or
inc
mov
add
testl
lods
in
ljmp
sbb
pop
cltd
sub
push
idiv
mov
cmpsb
pop
mov
nop
push
mov
dec
xor
js
shll
int3
pop
pop
sti
mov
lcall
iret
out
popf
lds
cwtl
pop
sub
pop
xor
add
addl
pop
cld
lea
dec
stos
xor
jae
jmp
push
mov
fdiv
popf
mov
jns
adc
std
icebp
sub
test
stc
and
test
out
mov
and
adc
in
fdivr
mov
fwait
pushf
lods
addl
out
mov
push
add
mov
mov
or
scas
stc
push
int3
mov
push
xchg
xor
js
xor
pop
xor
fcmovbe
pop
scas
nop
pusha
inc
je
mov
xor
sbb
sbb
mov
jo
pop
mov
ljmp
jae
or
push
leave
out
nop
mov
iret
push
test
mov
and
out
popf
xchg
mov
and
jns
data16
lock
leave
cli
jmp
pop
daa
repz
fs
and
rorl
mov
xor
imul
push
jg
movsl
pop
mov
mov
mov
stos
popa
pop
or
xchg
movsl
or
lret
inc
sub
ret
adc
inc
jle
inc
sub
sub
or
fwait
jecxz
sbb
jns
rcrb
jae
out
dec
jp
test
sbb
mov
xor
pop
or
je
stos
add
outsb
test
dec
hlt
mov
xor
pop
sbb
ficomps
les
fidivs
sub
mov
test
mov
mov
iret
sbb
push
push
shl
mov
mov
popf
xchg
sub
adc
sub
push
repnz
int
imul
mov
or
xchg
mov
int
ficoms
scas
rcrl
add
arpl
pop
pop
scas
xchg
mov
imul
add
hlt
das
mov
daa
jl
mov
push
sbb
cmpsb
rol
cltd
dec
jns
pop
shll
jbe
xor
shrl
dec
rol
xor
leave
ds
sub
pop
imul
xor
shrl
dec
sbb
xor
rol
dec
repnz
cwtl
shll
xchg
bound
cmpsb
insb
pop
lcall
lcall
cltd
push
lods
and
shrl
dec
xor
rorl
xor
and
adc
loop
dec
int3
cmpsb
loopne
lcall
dec
imul
pusha
imul
xor
shrl
loopne
testb
xor
rcl
dec
mov
lcall
js
pop
or
rcll
sarl
dec
push
push
xor
shll
dec
ss
dec
mov
xor
rcrl
ret
lcall
or
mov
sbb
xchg
cli
jae
add
sbb
data16
jecxz
push
add
nop
testb
add
jbe
xchg
push
imul
into
add
mov
jns
ds
jp
xorb
jl
mov
pop
add
jmp
add
out
ret
add
ror
pop
les
push
sub
ret
lahf
mov
and
popa
sahf
lcall
rcrb
add
push
div
in
push
fwait
add
cmp
add
pop
js
mov
add
pop
add
fsubrs
mov
and
fmulp
xorl
xchg
pop
test
pop
add
cli
cld
jg
xchg
imul
sbb
push
add
cmc
lret
add
outsl
mov
cmp
add
lcall
sub
xor
or
ja
sub
je
orb
jnp
jp
or
adc
out
mov
dec
mov
dec
dec
lcall
add
daa
dec
sbb
add
xchg
fcoms
ljmp
cld
jnp
add
add
dec
mov
mov
and
inc
movsl
scas
stos
add
inc
mov
add
push
mov
mov
inc
add
push
enter
mov
fsubrs
sbb
jg
inc
call
mov
mov
imul
sbb
filds
pop
enter
inc
inc
sub
data16
cmp
fisubl
mov
add
xchg
add
out
add
add
pop
sbb
mov
sbb
popf
das
pop
mov
sbb
outsb
pop
push
dec
sti
add
arpl
mov
add
jecxz
mov
stos
xlat
push
ds
lock
mov
repz
mov
mov
out
and
scas
aaa
and
mov
shll
mov
mov
add
mov
add
mov
mov
fs
shrl
cs
lea
add
mov
lea
mov
add
rorl
jns
in
dec
add
lods
xchg
pop
sarl
mov
add
les
ja
add
cmp
sbb
mov
push
dec
addb
and
fnstsw
jmp
inc
daa
fs
and
fldt
and
icebp
js
pop
pop
repnz
pop
sub
mov
into
jno
lds
movsl
jno
dec
aas
inc
add
cmp
jo
pusha
sahf
sub
add
mov
test
cmp
fs
fdivr
das
xchg
add
jb
add
adc
dec
xor
aas
jl
xor
sbb
adc
call
fwait
mov
dec
add
fildll
xchg
mov
cmp
mov
int
xchg
sub
add
xchg
movsb
insb
jo
nop
add
test
int
hlt
adc
icebp
xchg
movsb
add
hlt
jb
push
js
xchg
add
inc
int3
push
sahf
fdivr
add
push
or
shll
outsl
cmp
test
fiaddl
add
cmp
je
lods
stos
inc
add
fimuls
popf
add
dec
pop
rolb
ret
hlt
or
push
fadd
movsl
push
add
mov
mov
pop
add
adc
xor
push
incb
sub
faddl
or
xor
sbb
mov
test
cmp
add
dec
cmp
xor
and
xor
add
hlt
cltd
daa
cwtl
add
adc
mov
mov
cmpl
cmc
push
loop
mulb
or
out
xchg
pusha
add
popa
mov
push
push
add
xchg
popa
dec
in
sub
dec
js
or
pop
mov
xchg
push
fiaddl
enter
cltd
cld
adc
add
pop
testl
pop
shrl
sti
test
and
repz
sbb
call
push
shrb
loope
rcr
add
in
loope
lahf
leave
lahf
sbb
rcr
mov
or
lret
lea
pop
push
mov
mov
popf
jmp
enter
sti
loope
sub
xlat
fadd
leave
lret
rol
add
aaa
cmp
and
cmp
xor
xor
add
cmp
cmp
xor
dec
sbb
lret
inc
add
dec
add
pop
dec
dec
pop
inc
jae
push
push
inc
inc
inc
dec
cmp
pop
add
sbbb
jne
ds
loop
xchg
mov
jp
imul
lea
lods
mov
mov
and
xchg
sbbl
mov
hlt
dec
mov
cli
xchg
xchg
xchg
pushf
enter
sbb
add
clc
mov
cli
cli
rolb
jecxz
divl
mov
add
loop
add
sub
or
inc
add
jbe
cmpsb
add
and
pop
pop
dec
imul
cmp
push
and
xchg
push
push
xchg
jns
xchg
cwtl
mov
pop
sbb
sarb
mov
mov
jne
fcoml
outsl
cwtl
pushf
pop
xchg
mov
mov
inc
stos
or
mov
ljmp
and
xchg
push
push
mov
scas
sub
and
cs
inc
cs
inc
outsl
dec
stos
imul
outsb
stos
nop
rclb
xchg
sahf
add
icebp
loop
in
pop
xor
shrl
push
pop
mov
push
out
std
mov
clc
push
mov
sbb
loope
sbb
dec
push
ror
add
add
sub
push
adc
pusha
or
data16
sbb
and
mov
inc
push
xor
pop
gs
pop
test
outsl
cmp
ss
sub
push
jno
lea
cmp
xchg
cwtl
lcall
mov
nop
xorl
mov
mov
orl
inc
pop
mov
sub
lods
inc
pop
fmulp
divb
imul
mov
clc
popa
icebp
mov
lds
loopne
mov
decl
or
idivb
imul
adc
xchg
inc
dec
push
daa
cmp
daa
nop
sub
and
or
lock
xchg
cmpsb
cltd
les
cmp
add
mov
aas
pop
dec
jno
out
mov
test
inc
push
adc
ja
fwait
gs
mov
rcrl
cmp
mov
scas
mov
push
loope
call
je
scas
sub
sti
dec
pop
call
jmp
add
adc
enter
ja
mov
add
clc
dec
add
xor
mov
add
sub
adc
int3
into
mov
js
fildl
pop
sti
popa
mov
movsl
cmp
adc
imul
or
cmpb
mov
lea
push
test
scas
mov
push
cmpl
xchg
pop
xchg
push
cli
outsb
adc
sbb
enter
out
xchg
nop
mov
sub
cmp
icebp
sbb
test
xor
and
ds
lcall
push
push
mov
inc
pop
push
xchg
jno
popf
ss
sub
pop
xchg
jmp
insl
and
and
xchg
inc
xlat
push
mov
insl
or
mov
mov
ret
loop
lds
outsl
mov
ror
rcrl
test
out
lds
and
cs
sbb
push
loop
cmp
inc
sub
sbb
push
js,pn
adc
push
lea
push
movsl
cli
lea
shlb
adc
or
cmp
cli
daa
mov
jo
mov
test
arpl
inc
jne
push
js
loopne
jnp
repz
push
push
into
lea
fdiv
clc
mov
ja
mov
mov
gs
dec
sbb
push
mov
jmp
pop
add
sub
jle
jge
xor
inc
fstpt
test
ja
cmpl
jecxz
push
test
xor
addr16
repz
push
lcall
outsl
fsubrs
stos
or
mov
pop
gs
mov
sub
adcb
addr16
push
call
cmp
mov
in
push
mov
sbb
in
jl
aad
jl
gs
jbe
mov
xor
mov
into
sarb
adc
pop
push
shrl
xchg
pop
mov
cwtl
jp
sbb
in
add
lret
test
fnstenv
pop
jne
mov
scas
repnz
in
xchg
jns
pop
addr16
add
fimuls
jge
push
ds
repz
fsubrs
jns
xor
rorl
jae
add
mov
xor
push
mov
stos
mov
mov
test
psubw
fisubrs
pop
nop
iret
mov
ljmp
sub
push
bound
inc
xor
mov
sbb
aas
adc
jge
and
sub
adc
dec
push
push
jns
repnz
dec
dec
pop
pop
push
rorb
mov
inc
or
pop
pop
aaa
sti
pop
out
loopne
mov
adc
pop
add
and
xor
mov
jo
je
and
stos
js
dec
lock
test
arpl
flds
aad
sub
in
sbbl
rcl
addb
add
mov
add
fldenv
out
fbstp
fnstenv
nop
push
scas
jno
cmpl
mov
bound
icebp
xchg
cmpsb
je
scas
jmp
mov
inc
inc
addb
pop
or
dec
dec
sbb
jle
jg
js
inc
sub
or
mov
mov
cmp
lods
sbb
in
mov
sbb
lock
or
add
cmp
push
dec
xor
stos
movsb
xlat
hlt
data16
clc
and
hlt
add
and
dec
push
fcomps
pop
mov
xor
mov
xor
loope
in
lret
leave
inc
outsl
test
dec
cmp
xchg
mov
bound
lods
add
outsb
mov
repnz
divl
add
mov
in
popl
add
mov
orl
dec
mov
jb
pop
lcall
test
xchg
lret
setns
mov
test
or
xchg
test
cwtl
rorl
jno
jle
add
push
jnp
mov
xor
xor
repnz
fcmovnb
jmp
ret
adc
out
dec
std
mov
pop
pop
test
sub
adc
mov
int3
sbb
cmpl
je
into
add
push
sbb
inc
rcrl
or
das
pushf
sahf
fwait
pop
nop
imul
repnz
jl
xchg
out
addl
mov
jg
mov
cltd
sub
or
and
xchg
cmp
adc
xchg
lcall
fistpll
inc
mov
movsl
dec
jg
cmp
jns
aaa
dec
jge
test
jecxz
jnp
aaa
jae
sbb
jbe
jne
mov
bound
add
push
scas
and
adc
push
lock
mov
push
jo
sbb
cmp
cmp
stos
sahf
popa
xchg
cmpsb
sub
pusha
test
movsl
movsb
sbb
hlt
repz
and
insb
mov
insb
push
mov
mov
and
data16
or
and
cmp
add
or
cmp
mov
sbb
arpl
je
ja
and
xchg
sbb
xchg
and
sub
fdiv
sbb
test
into
sub
jbe
cmpsb
add
add
jae
push
inc
dec
sbb
add
adc
addr16
outsl
and
push
push
inc
inc
dec
dec
pop
inc
xchg
mov
stos
inc
mov
push
xchg
dec
flds
dec
mov
les
mov
mov
fiaddl
out
test
in
add
rol
ret
faddp
lea
rol
in
popa
call
in
stc
out
scas
cmp
popa
inc
adc
and
mov
fdiv
push
or
sub
mov
popa
mov
scas
pop
lret
and
or
sub
je
mov
push
call
repz
ret
cli
in
mov
xchg
sbb
jl
pop
sbb
adc
fwait
xor
sub
and
push
rcrb
rclb
and
push
lods
pop
inc
inc
inc
cs
dec
fwait
movsb
test
sub
pop
mov
scas
mov
mov
fstpl
mov
xor
icebp
jp
mov
mov
jecxz
data16
sub
mov
lds
mov
mov
and
and
sub
mov
mov
push
cwtl
lcall
cmp
pop
loope
pop
pop
jmp
fnstenv
dec
cs
test
adc
sar
sbb
add
nop
or
adc
and
and
pusha
fbld
mov
pusha
mov
test
push
jae
mov
and
or
test
mov
fcomps
ljmp
out
in
js
pusha
xchg
dec
sbb
or
ss
dec
jl
push
ss
mov
xlat
push
dec
mov
xchg
mov
out
sbb
xlat
xor
call
adc
ss
mov
xor
and
test
xor
clc
nop
rcr
jo
and
inc
aam
or
add
mov
and
decb
ss
int3
nop
in
cmp
adcb
aaa
shll
sbb
xchg
nop
pushf
xor
mov
push
sti
hlt
pop
rcrl
push
inc
insb
enter
inc
repnz
nop
sbb
ss
rclb
jno
adc
pop
inc
cmp
dec
cld
call
mov
or
rcrb
lock
andl
mov
fs
nop
xor
lock
lock
inc
xor
cwtl
js
movsb
imul
push
dec
fdivs
cmp
enter
sbb
enter
shl
cwtl
add
out
repz
mov
adc
ss
adc
sbb
cmp
sbb
or
sbb
adc
jle
xor
mov
or
push
xchg
pop
inc
rclb
aam
cmpsb
xchg
or
or
jbe
js
jo
js
ds
lcall
arpl
mov
cld
adc
popf
rcrb
clc
cltd
sbbl
test
mov
test
xor
into
push
push
fucomi
xchg
mov
iret
scas
mov
ljmp
int3
call
ror
in
pop
pop
add
ss
pop
push
and
jae
sub
stc
js
cs
movsl
add
xchg
outsb
pop
sbb
invd
inc
dec
inc
mov
das
mov
inc
mov
scas
and
psubsb
mov
mov
das
mov
sarl
adc
jl
jmp
adc
aam
lcall
in
repnz
enter
fwait
imul
scas
addr16
loopne
test
stos
in
clc
out
imul
dec
pop
mov
sbb
int3
mov
lahf
aaa
sub
fwait
idivl
test
adc
mov
mov
xchg
out
jmp
mov
repnz
out
imul
out
or
dec
ljmp
inc
rol
int
leave
push
leave
cmp
cmp
sbb
push
or
xor
pop
pop
pop
push
jl
push
ss
mov
and
cmp
lds
sahf
lods
or
jo,pt
imul
outsb
mov
popa
lahf
lcall
and
mov
push
aaa
push
adc
inc
cmpsl
lds
xor
sbb
and
cmp
add
jb
call
pop
mov
xlat
scas
push
lods
pop
out
sti
or
mov
fistl
rol
iret
sub
push
pusha
sub
je
push
adc
push
dec
pusha
mov
idivb
ret
mov
pop
loop
fidivl
addl
push
aas
dec
mov
les
sti
decl
in
pusha
sti
hlt
out
call
fstpl
imul
lret
xor
int3
xor
into
mov
inc
jno
imul
mov
jmp
pop
ret
cmp
xchg
cmp
push
push
xor
push
pop
mov
jb
cmp
int3
mov
mov
test
fistl
dec
xor
test
idiv
push
lods
xchg
sar
jne
stos
mov
in
pusha
ss
scas
push
mov
push
pop
mov
mov
cmp
adc
mov
push
mov
call
xlat
inc
and
mov
push
xchg
xor
add
cmp
add
bound
movsl
sbb
stos
push
cmpsl
js
sub
hlt
or
push
gs
mov
rcrl
push
push
dec
pop
dec
cwtl
scas
pop
cmpsl
xchg
pusha
mov
idiv
sub
mov
mov
or
and
adc
push
jge
mov
xchg
test
adc
xchg
mov
jae
mov
mov
pop
sub
add
loopne
test
pop
dec
lret
cmp
add
test
adc
sub
cs
call
push
loop
add
dec
and
pop
das
sbb
out
dec
dec
test
arpl
jmp
enter
or
mov
or
cld
push
sahf
iret
inc
scas
mov
pushl
lock
clc
mov
decb
scas
call
cld
decb
in
sbb
lcall
out
cmp
imul
ret
aam
test
push
push
inc
iret
lds
or
dec
roll
inc
orps
inc
fstpt
sbb
daa
push
pusha
enter
movsb
pop
add
mov
sbb
lods
push
lods
hlt
cmc
inc
pushf
addl
orb
scas
fisubrs
mov
ret
iret
jmp
out
lds
test
mov
and
push
pop
cmpsl
notl
ss
inc
adc
add
mov
xchg
push
mov
fld
push
out
mov
jne
xchg
ss
scas
rcr
sub
scas
scas
pop
test
xor
mov
in
xchg
push
loope
loopne
mov
xchg
push
mov
sahf
ljmp
xor
mov
mov
test
jnp
add
pop
scas
add
add
add
mov
xor
lret
lret
mov
sub
ret
add
lcall
cwtl
cmpsb
push
sub
fsts
and
mov
clc
mov
in
cmp
mov
jne
lock
fcmovnu
add
lret
movl
mov
xchg
push
inc
jo
pop
scas
push
sbb
adc
mov
fwait
dec
enter
loop
hlt
mov
jnp
mov
add
cmp
mov
xor
dec
xchg
and
pop
adc
push
cmp
lods
lods
inc
lahf
pop
add
and
push
sub
jp
lcall
loop
sarl
xor
sub
sbb
test
dec
sub
mov
pop
jo
pop
or
dec
dec
mov
and
rorl
lret
popa
mov
push
jle
mov
xchg
shlb
xchg
fs
and
add
sub
mov
add
mov
aad
movsb
out
shll
sbb
int
shll
enter
loope
neg
inc
cli
stc
mov
xchg
xor
outsb
shrb
icebp
mull
mov
or
jne
movd
movsb
push
sbb
cmpsl
pop
cmpsl
mov
decl
or
js
pop
add
pop
pop
push
adc
jp
adc
add
inc
lahf
cs
sbb
jecxz
push
data16
fsubs
nop
orl
mov
pop
aas
sub
sub
push
jnp
push
das
mov
sbb
lds
pop
push
push
inc
and
and
popa
addr16
cmp
jbe
push
loope
ljmp
rol
inc
mov
stos
pop
xchg
jecxz
push
inc
popa
imul
daa
xor
xor
inc
xorl
xor
add
cmp
rdpmc
push
and
gs
inc
clc
or
jmp
push
int3
clc
jnp
add
stos
or
stos
add
inc
pushf
lret
push
jo
test
mov
pop
gs
push
xor
ljmp
inc
cltd
pop
fld
inc
mov
cld
out
xchg
sbb
lock
xchg
cltd
jno
negb
fisttpll
cmp
push
test
gs
xor
out
mov
lods
cwtl
or
insl
pushf
pop
scas
or
in
andb
popa
lods
sbb
sbb
cltd
mov
or
or
or
les
lcall
stos
sbb
xlat
adc
xor
vsqrtss
pop
int
lods
outsl
mov
xor
push
inc
or
adc
fdiv
push
xchg
sub
out
sub
sbb
cwtl
add
jge
pop
insb
xchg
in
sti
scas
bound
jno
add
in
mov
xor
xchg
sbb
nop
mov
add
cmpsb
jne
loopne
mov
add
ret
or
sub
pop
push
sbb
jo
xchg
jmp
pop
add
pusha
cmp
sbb
xor
mov
enter
sbb
loopne
in
jno
mov
inc
mov
xchg
cmp
push
fstl
je
lods
cmpsl
mov
lea
or
cmpsl
cli
ljmp
ret
push
imul
cltd
jp
cwtl
arpl
xchg
jecxz
jle
dec
in
push
xchg
pop
jno
rcrl
idiv
enter
or
out
insb
out
pop
sub
push
push
inc
dec
push
inc
inc
jge
hlt
mov
sub
mov
xchg
push
pop
cmp
jae
jno
jb
or
bound
mov
fsubrl
adc
rorl
cltd
in
cmpsb
in
scas
or
test
xor
push
xlat
dec
sahf
sbb
imull
pop
mov
mov
aas
add
add
jo
add
scas
addl
inc
les
pop
insl
adc
ficoml
push
jg
push
dec
jge
bound
jg
jl
je
ljmp
inc
dec
sub
movsb
fisubrl
xchg
stos
pop
sub
std
cmp
or
sbb
pop
mov
aad
push
mov
inc
mov
stos
add
notl
cmc
clc
cld
sbb
pop
rorb
std
loop
orl
mov
fsincos
push
call
mov
int
push
cmp
scas
xlat
lcall
testl
out
mov
shll
cs
mov
jl
sub
push
movsl
arpl
or
loopne
jnp
fcmovu
arpl
mov
inc
leave
mov
dec
mov
xchg
in
daa
or
stos
cltd
loop
sbb
shr
mov
mov
adc
clc
mov
xlat
mov
jg
fstpl
dec
mov
mov
xchg
nop
std
dec
mov
and
push
loop
adc
lods
push
ret
aad
aad
imul
mov
fwait
mov
mov
clc
orb
push
test
pop
or
idiv
mov
fsubrp
mov
addr16
pop
ljmp
call
ljmp
lods
cmp
movsb
sub
movsl
pop
xlat
inc
and
ss
cld
into
ljmp
add
pop
xor
mov
rorw
cmpsb
jecxz
fwait
test
cwtl
adc
jg
hlt
nop
rcrb
push
mov
rolb
sbb
insl
add
shl
xchg
fdiv
jle
jnp
pop
ret
xchg
fbld
pop
faddl
sbbb
lret
aad
jg
stos
sbbb
cmovne
icebp
or
inc
jne
push
test
and
addr16
lods
mov
mov
push
insl
gs
adc
cs
push
dec
push
cmovb
pusha
jne
outsl
xchg
cwtl
adc
cmpl
test
scas
mov
rorl
pop
inc
fadds
lods
pop
dec
push
popf
pop
xchg
push
call
sub
aad
push
cmp
cmp
cmp
in
hlt
mov
mov
jge
rolb
cmc
jb
int
insb
jp
outsl
push
jecxz
fs
sbb
dec
pop
orb
lcall
test
push
inc
cs
int
fcmovu
aam
adc
mov
subl
sahf
fldpi
mov
xchg
ret
test
jl
and
push
push
mov
scas
and
cmp
dec
xor
push
jl
xorb
xorb
dec
rcl
jle
cmp
cmc
inc
pop
inc
stos
push
shlb
and
dec
and
bound
pusha
js
jae
add
lods
or
loopne
imul
out
jmp
jo
dec
cmpsb
mov
outsl
scas
fistps
push
fs
pop
arpl
push
lret
pop
imul
and
or
mov
rcrl
iret
mov
out
rcrb
lret
sbb
sub
shll
sbb
push
neg
pop
ja
inc
adc
stos
inc
jp
movsb
and
js
das
xor
dec
inc
pop
push
dec
push
dec
sub
ljmp
pusha
sub
cmp
ret
xchg
mov
xlat
mov
cltd
pusha
sub
test
cmp
data16
lods
cmp
pusha
sub
rolb
in
add
jecxz
xorb
mov
and
js
jbe
ss
add
jno
rcrb
push
mov
xlat
cld
std
cltd
mov
jge
ret
mov
fadds
dec
nop
out
outsl
stos
fildl
mov
ret
jmp
test
adc
imul
mov
mov
add
mov
adc
sbb
or
xchg
cli
push
cwtl
int3
adc
xor
aaa
cwtl
int3
sub
cwtl
int3
xor
xor
fcompl
mov
and
sbb
cwtl
fwait
jmp
xor
loope
rclb
mov
dec
mov
loope
jbe
push
lret
mov
sub
xor
inc
push
fadds
ja
xor
rolb
sbb
lret
sbb
push
xor
xchg
dec
cmpsb
xor
nop
xor
sbb
dec
xor
mov
mov
gs
orb
or
xor
add
ret
cltd
cs
pusha
add
gs
sbb
jo
jbe
jg
adc
or
rcrl
es
adc
or
mov
xor
add
ret
cltd
fildl
pop
jle
ror
cmp
sbb
jae
sub
add
int3
adc
xor
sbb
leave
add
dec
fs
shrb
pop
xor
sbb
sub
xchg
sbb
pop
inc
push
push
dec
mov
push
mov
fndisi(8087
xchg
sbb
in
loop
jecxz
out
ss
adc
imul
jb
xlat
imul
addb
aas
cmp
xor
mov
and
xchg
push
inc
or
or
add
xor
jge
bound
in
fadd
push
pusha
add
push
xor
inc
in
rcrb
mov
ret
inc
mov
lods
mov
sbb
negb
cmpsl
arpl
lea
mov
lahf
xchg
aam
sub
mov
xor
dec
xchg
pop
mov
mov
dec
jge
sbb
fadd
pop
sahf
push
lock
xchg
cld
cmp
pop
ret
fadd
jg
push
lock
fucomip
xchg
cld
cmp
jg
arpl
divb
push
jle
fnsave
push
int3
ret
fsubr
cmpsl
cmp
shlb
xor
pop
orl
outsl
insl
imul
cmp
gs
push
jbe
das
arpl
jle
pop
fisttpll
pusha
int
addr16
mov
push
xor
adc
in
jnp
data16
mov
mov
sahf
fs
outsl
jne
lock
andl
daa
movsl
mov
pop
xchg
ror
std
mov
pop
fimuls
pop
add
xchg
loopne
dec
icebp
incb
mov
aam
or
push
xor
loope
cmp
or
push
sub
or
cmp
cmp
xchg
ds
sbb
cltd
cs
sub
lods
fidivrl
dec
mov
std
sbb
push
lods
mov
lock
add
enter
mov
mov
xchg
xor
cli
mov
mov
cmc
push
adc
cmpsl
pop
cld
out
mov
add
pop
push
jge
dec
lret
mov
sar
loope
cld
cli
mov
out
jo
loop
push
sub
clc
stc
scas
and
dec
add
cmp
stos
test
sub
mov
dec
inc
sahf
gs
push
xchg
scas
imul
sub
mov
xor
cmp
pop
push
cwtl
mov
sub
mov
stc
or
sub
jns
push
cmp
sub
jmp
mov
ret
mov
cmp
cwtl
stmxcsr
push
or
cmp
aas
xor
fs
jle
cmp
sub
mov
cli
xlat
sbb
lcall
sub
jns
inc
mov
cmpsb
sub
inc
fiaddl
mov
aad
or
mov
jge
and
push
jle
mov
xor
sahf
xor
pushf
pop
arpl
das
jne
or
aas
imul
call
add
mov
repnz
sub
inc
dec
pop
inc
shrl
cmpsl
cld
repz
inc
cmp
sub
pop
lret
push
mov
cli
fnstenv
xchg
sahf
mov
push
fistpl
int3
orl
test
out
push
sub
arpl
inc
mov
ret
imul
mov
movl
push
dec
mov
lret
mov
aas
fwait
dec
xor
scas
lock
loopne
das
pop
je
sbb
ffree
stc
cli
add
int
jge
jo
fs
hlt
pop
sub
addr16
xor
rolb
push
pop
jg
adc
sub
add
icebp
mov
sbb
push
sbb
test
sub
aad
or
dec
mov
fbld
push
xchg
cltd
push
push
aam
dec
adc
cmp
or
adc
adc
add
xchg
test
xchg
aas
push
mov
or
inc
ja
pop
jne
adc
fidivrs
or
mov
mov
mov
lahf
imul
dec
push
jmp
into
adc
and
push
mov
cmpl
out
xor
push
dec
scas
in
enter
sbb
jecxz
xor
in
jne
add
mov
pop
push
inc
dec
mov
and
ds
insb
das
dec
scas
sarl
ds
and
mov
mov
dec
addr16
stos
mov
aas
and
mov
jge
xchg
pop
jbe
push
scas
nop
adc
xchg
out
push
pop
out
int
add
cmpsl
ret
xor
fsubs
mov
xor
mov
fwait
sahf
pop
or
imul
jl
xlat
sub
or
cmc
sub
sbb
ljmp
mov
mov
push
inc
adc
idivb
fstpt
mov
out
in
sti
mov
mov
in
cli
lods
and
lods
pop
mov
jb
adc
ret
das
rcl
add
les
xlat
shlb
fucomp
mov
test
sbb
aas
add
data16
pop
stos
xchg
or
jo
cli
sub
out
cmpsl
les
jl
jp
or
gs
inc
popf
push
jp
aas
stos
mov
fs
push
fidivrl
das
push
mov
mov
scas
sbb
mov
pop
aas
mov
mov
mov
adc
push
mov
addr16
das
push
dec
arpl
jl
xchg
mov
addr16
aam
jnp
mov
pop
pop
mov
leave
mov
and
scas
cmp
test
cmp
call
roll
mov
rorb
mov
mov
jae
jp
imul
ret
lcall
push
les
xor
mov
leave
mov
lock
adc
jecxz
ja
xor
add
cmpl
xchg
inc
js
movsb
xchg
lret
mov
add
lods
fidivrs
fidivs
into
adc
iret
enter
xchg
cmp
mov
inc
jnp
data16
jbe
sub
add
push
cmp
sbb
ds
dec
add
stc
push
xchg
add
pop
loopne
mov
add
xchg
sub
gs
add
sbb
pop
enter
add
sub
push
mov
sub
mov
and
in
dec
cmp
popl
add
jg
mov
add
cli
fdiv
jo
test
daa
les
adc
mov
pop
dec
test
or
in
inc
adc
lahf
push
mov
lods
divl
jmp
repnz
dec
xor
mov
fadd
enter
dec
lret
out
push
adc
pop
pop
adc
divl
mov
loopne
pushf
mov
push
and
mov
sarl
dec
pop
fnsave
aas
rcll
sbb
bound
inc
pop
daa
test
xlat
popf
add
inc
inc
adc
add
cmc
sti
stc
add
loopne
stc
cli
call
adcb
fcmovbe
aam
jb
mov
dec
cmpsb
rolb
or
dec
push
cmp
mov
stc
inc
xchg
sbb
push
xchg
or
gs
jmp
pop
inc
lret
adc
aam
sub
sub
das
stos
ret
ret
and
jp
lret
inc
pop
pop
pop
jne
popa
xchg
xchg
loop
add
cmc
subb
push
xchg
push
sub
in
adc
lods
sahf
jnp
push
jnp
data16
mov
es
cmp
pop
or
lea
mov
add
ds
mov
cmp
scas
movb
adc
sbbb
add
ds
ja
loopne
fcoml
dec
xor
sub
cmpsb
xorl
mov
in
push
mov
dec
cmc
xchg
sub
shr
pushf
cmp
cli
and
sahf
inc
xchg
jle
and
out
jne
lods
and
mov
sub
fadds
bndldx
lods
cltd
arpl
push
mov
inc
cmp
leave
pop
out
jge
sarb
int3
lds
cs
push
push
testb
cli
sub
loope
cmp
fwait
cmp
sbb
inc
je
cmpsb
sub
jb
aas
mov
and
inc
mov
adc
or
mov
push
jmp
pusha
add
jecxz
or
fadd
xor
in
push
sub
mov
xchg
cmp
xor
ret
out
sbb
test
das
sub
dec
inc
sbb
jle
aad
shlb
nop
xor
daa
add
pop
xchg
call
pop
pop
cld
hlt
xchg
xchg
rcll
inc
shlb
mov
rcll
and
adc
jl
push
jmp
loop
ja
and
add
sbb
clc
repz
and
fcomps
dec
jle
ja
inc
popf
das
xchg
jecxz
xchg
fnstcw
stos
sbb
test
fidivrs
int3
fcom
cmc
sbb
mov
mov
movsl
or
aad
xchg
fwait
and
sub
xor
pop
ja
sub
fldt
pop
les
push
add
push
pop
and
push
push
pop
add
mov
xchg
push
xchg
or
cli
out
push
mov
data16
xchg
fstpt
sbbb
loope
repnz
movsb
scas
and
push
add
add
sbb
punpcklbw
rcrb
mov
sub
es
stos
pop
inc
mov
or
ffreep
mov
js
push
loope
jne
mov
decb
jge
mov
pop
and
xchg
fistl
aam
jno
xchg
ljmp
and
mov
mov
cld
gs
and
stc
xchg
sub
mov
jecxz
test
mov
mov
dec
mov
jmp
icebp
pop
stos
pop
fisttps
int
pop
push
pop
mov
sub
pop
jne
test
aas
ss
pop
je
mov
aam
roll
arpl
cmp
sbb
pop
inc
sub
fildll
adc
mov
rolb
mov
es
movsb
movsb
sarl
sub
imul
or
dec
cld
js
aam
mov
and
test
and
pusha
lret
adc
jl
insb
xor
sbb
xor
rcll
mov
adc
add
cmp
xchg
xchg
sub
xor
fistl
add
adc
cli
mov
iret
lahf
jl
addr16
loope
aad
pusha
push
int
out
pop
std
ss
mov
pop
test
orb
repz
fsts
jl
push
pop
xchg
adc
lcall
into
mul
jo
jne
lds
call
mov
ja
roll
jb
mov
push
cltd
push
sbb
inc
xlat
inc
xchg
dec
jl
je
cmp
pop
jns
sub
and
cmc
xchg
or
jge
shll
js
jne
clc
cmc
mov
xchg
mov
jg
rcl
andb
stos
jmp
out
push
mov
divl
push
stos
imul
mov
push
xor
mov
stos
scas
or
push
push
lods
jns
in
jns
ret
shrb
popa
js
test
sbb
shll
sub
cmp
inc
loope
mov
incl
xor
xor
fstl
lods
repz
fwait
pop
mov
inc
test
lods
xchg
dec
gs
popf
sbb
mov
shrl
test
loopne
loop
jo
push
jne
sub
loope
dec
mov
sub
call
cmp
inc
scas
mov
pop
std
sbb
lcall
aad
pop
testl
jnp
sarb
mov
rorl
lcall
std
jmp
mov
cmp
push
xchg
outsb
mov
daa
adc
sbb
hlt
adc
stc
lret
jmp
out
rcrb
xor
jns
je
xchg
xor
or
arpl
loop
pop
sbbb
dec
xchg
js
test
xchg
fcomps
jmp
cmpsb
inc
mov
pop
xlat
lds
icebp
pop
enter
or
push
ja
daa
jo
xchg
cwtl
in
sarb
ljmp
push
gs
mov
push
push
pop
aad
pop
int3
push
jmp
stc
fadds
adc
cltd
arpl
sbbb
test
xlat
sbb
jle
or
lods
jb
cmpl
pop
fistl
or
mov
sub
push
push
int
xor
jg
sub
xchg
cs
sub
insl
fldl
add
and
mov
xor
into
mov
adc
scas
xchg
stos
pusha
aaa
or
test
popf
mov
or
jbe
aad
and
outsl
push
push
cmp
inc
lea
xchg
pop
dec
sub
outsl
shrl
ret
sbb
fistpl
stos
in
mov
and
mov
sti
in
adc
or
mov
testl
mov
mov
repnz
out
dec
out
pop
sbb
sbb
jns
add
scas
mov
lods
stos
push
mov
mov
sbb
or
push
imul
subps
dec
pop
insb
mov
inc
mov
xchg
pop
enter
test
mov
sbbb
testl
fnstsw
insb
cmp
xlat
insb
ds
sub
xor
or
fcompl
pop
int
popa
lcall
add
mov
cmp
lcall
push
in
cs
fsubl
xchg
ret
mov
cmp
pop
out
cmp
and
mov
clc
xor
out
jecxz
mov
outsl
fimull
mov
pop
cs
outsb
cmc
int3
movsl
test
in
aad
push
cmc
jge
ja,pt
mov
aad
seto
adc
mov
ffreep
sbb
mov
aam
mov
jo
sbb
out
sub
scas
and
arpl
jmp
mov
icebp
sub
push
addl
lcall
leave
fstl
icebp
or
inc
cmc
fstl
jnp
xor
push
call
mov
fidivs
imul
aad
mov
outsb
ss
outsb
mov
xchg
ret
xor
dec
jo
jno
jbe
out
call
push
movsb
xor
mov
ficompl
pushf
stos
jmp
cmp
jmp
lret
sub
out
fsts
mov
jno
mov
out
aad
test
push
jo
pop
test
ffree
mov
je
jo
jbe
mov
lea
jne
mov
sbb
or
and
mov
xchg
fmulp
pop
xlat
or
xchg
jmp
roll
pop
xchg
push
sahf
test
bound
mov
stos
sar
xor
adc
mov
cmc
in
xor
in
inc
adc
aam
movsb
xor
xor
inc
adc
clc
negl
sub
jmp
loopne
or
arpl
in
repz
mov
pusha
jg
jno
push
jne
push
and
push
mov
sahf
pop
inc
mov
test
ret
inc
pushf
mov
es
push
cmpsb
rcrb
sbb
lcall
lcall
cltd
mov
and
shl
dec
lock
add
add
sbb
stos
jecxz
jmp
push
sbb
jb
jbe
sahf
and
in
jb
popa
aad
repz
and
gs
mov
cwtl
mov
pop
stos
movsl
mov
popf
in
ret
lcall
dec
mov
jmp
loope
lret
in
jecxz
mulb
pop
push
dec
xchg
push
ds
cmp
sub
xor
jl
inc
or
add
adc
sub
sbb
out
sub
cmp
cmpsl
dec
jmp
push
fnstcw
fcoms
fwait
outsl
sahf
jg
pushf
sar
cmp
fidivrs
xchg
push
lcall
mov
pop
shlb
flds
mov
sbbl
call
ja
xchg
jmp
sti
bound
mov
cmp
jb
imul
sbb
push
ret
xchg
or
into
push
adc
sarl
push
cmpb
or
or
loopne
arpl
imul
push
idivb
fnstenv
repnz
lods
addr16
aas
xchg
insb
jae
rcll
in
sub
mov
xchg
ret
mov
xchg
cmc
cmc
and
in
sub
lcall
mov
add
add
xchg
cmp
mov
ljmp
mov
jg
not
in
adc
jecxz
fiadds
and
mov
mov
stos
lock
pop
dec
cmp
aad
or
dec
mov
push
cmp
sbb
hlt
das
xor
cld
lock
fwait
or
jae
add
adc
lahf
push
pop
nop
daa
es
xor
out
imulb
cmp
mov
adc
push
jnp
add
jl
popa
insb
movsb
imul
pop
push
cmp
sub
nop
push
push
mov
stos
aam
dec
mov
pop
dec
lods
xor
inc
inc
inc
lea
test
shl
mov
aaa
jg
scas
test
dec
scas
pop
dec
lahf
outsb
hlt
push
mov
out
push
inc
add
push
fwait
addr16
stos
push
js
fisttpl
jg
scas
decl
in
out
loope
sbb
cs
shlb
aaa
cmp
adc
pop
adc
cld
jb
imul
cmpb
idiv
cmp
sub
mov
insl
orl
push
test
jecxz
inc
fmuls
test
lcall
mov
pusha
in
shrl
leave
push
cmpsb
mov
lcall
lcall
lock
cmpsb
cmp
lods
mov
inc
dec
xor
sarl
dec
xor
rcrl
xor
cmp
sub
sbb
xor
leave
or
es
lcall
in
adc
adc
pusha
jne
mov
out
sbb
popa
cmp
sub
rcl
lcall
lcall
lcall
lcall
dec
mov
mov
cmp
mov
xchg
dec
nop
lods
xor
sarl
cwtl
imul
pop
lods
push
xor
mov
mov
xor
ror
dec
clc
lock
rcr
and
in
ret
xchg
cmp
and
sbb
jo
add
jge
xor
in
shll
ljmp
and
fcom
jb
jne
in
cmp
xchg
inc
inc
lcall
lcall
dec
mov
outsl
cs
cmp
cmp
cmp
inc
pop
sbbl
pop
gs
jnp
scas
sub
dec
imul
ret
outsb
stos
fwait
cli
std
jb
jne
mull
cltd
mov
iret
jge
aaa
movsl
in
cs
fstpt
cmpsl
std
jae
setbe
xlat
sbb
mov
lahf
in
loop
fcmovb
lret
test
xor
mov
mov
mov
jle
std
aas
sbb
sbb
add
pop
cmc
cs
jge
sbb
cltd
out
lea
inc
aad
jecxz
jle
push
fs
outsl
ja
rcrb
aas
xchg
xchg
fisttps
aas
mov
fldt
lock
xlat
hlt
pop
fucom
ss
ja
repnz
pop
fdiv
aad
push
cli
sbb
xlat
cli
lods
fnstcw
std
in
cmp
mov
xor
loope
sti
notb
push
add
sbb
inc
sub
std
push
cmp
xor
push
insl
imul
stos
xor
inc
dec
inc
and
pop
sub
mov
insb
in
call
adc
inc
lret
xchg
or
inc
enter
in
stos
pop
xor
repnz
jge
nop
sbb
xchg
sub
jne
cmp
ja
pop
inc
aaa
in
sti
shlb
mov
pop
cmp
scas
sbb
jbe
sub
pop
push
es
aad
jecxz
imulb
in
mov
outsl
lods
push
outsb
std
cmp
adc
inc
jno
popa
jb
sub
sbb
push
inc
xor
int
fld
rol
leave
leave
fwait
gs
scas
sub
arpl
loop
fdiv
pop
push
cmp
aas
aam
mov
call
sbb
xchg
or
test
loope
push
fidivrl
mov
ficomps
out
jmp
in
not
inc
or
xlat
popf
je
mov
push
mov
mov
mov
mov
outsb
xchg
mov
jno
jmp
xor
stos
fistpl
aad
cmp
clc
mov
jge
pop
pushf
add
mov
sti
iret
pop
inc
dec
jecxz
xlat
jp
inc
test
ret
jns
mov
inc
jp
cmp
mov
push
adc
pop
cmp
addb
popa
popa
ja
push
lcall
fstl
das
push
jecxz
movsb
jno
clc
in
pop
xchg
ja
test
aam
test
out
xchg
call
aad
ret
jne
dec
ficoml
xlat
jge
lea
aas
push
pushf
sub
push
pop
add
out
stos
mov
out
lock
jmp
popw
or
sar
test
lret
push
pop
push
gs
fld
ja
js
dec
push
push
push
popa
jecxz
jg
push
push
cmc
dec
popf
mov
ffreep
fnstsw
mov
xchg
insb
dec
stos
in
imul
mov
fistps
ljmp
mov
mov
adc
mov
enter
cmc
sti
cmp
inc
fs
fidivl
inc
mov
js
idiv
push
in
test
sub
mov
lds
jecxz
sub
pop
xchg
mov
std
lret
test
sti
out
jl
popf
jae
push
cs
sub
cli
xchg
call
scas
add
loopne
int
mov
or
mov
jmp
scas
sbbb
loope
jne
fisttpl
pop
dec
leave
xor
push
xor
mov
cmc
cs
jge
imul
push
jb
mov
dec
lret
lods
ds
scas
dec
std
or
jb
lahf
imul
mov
jns
ss
js
leave
cmc
pop
shrb
lock
inc
push
pusha
sub
mov
mov
mov
stos
mov
scas
stos
lea
ficoml
jo
push
xchg
cmp
mov
ljmp
jmp
push
bound
pop
dec
mov
pop
or
xlat
sub
jae
jbe
out
add
ljmp
mov
cmpsb
insb
mov
xchg
push
pop
pop
mov
mov
cmp
jmp
xchg
pushf
cli
scas
popf
or
adcl
jno
xchg
push
mov
test
push
hlt
inc
fistl
scas
scas
or
mov
pop
jp
loop
and
dec
lea
cmp
ljmp
sbb
mov
push
xlat
or
jge
loop
push
pop
sbb
mov
stos
lock
outsb
cmp
lds
repnz
lds
ljmp
loop
inc
sub
fists
in
pop
lcall
out
cmp
jl
stos
hlt
mov
cmpb
mov
mov
xchg
notl
inc
test
jg
adc
inc
adc
fwait
sti
repnz
int
xlat
out
aad
mov
sub
je
in
repz
clc
cmp
push
and
push
fwait
out
or
popa
mov
das
testb
dec
push
scas
adc
ret
sbb
call
dec
add
jecxz
xor
ljmp
fidivrl
xor
and
sbb
add
mov
ja
arpl
jmp
push
scas
stos
sbb
adc
cltd
ja
pop
push
pop
pop
leave
ja
gs
cmp
push
std
jge
lea
and
cltd
jne
cmp
mov
out
popf
push
sub
adc
hlt
mov
aam
push
xlat
hlt
cmp
loop
jle
popf
scas
loope
and
pop
test
lds
mov
int
ss
roll
push
jns
rclb
adc
sahf
aas
lds
ss
sbb
adc
in
dec
cmc
aas
cs
rep
cli
icebp
ljmp
or
jo
jle
lods
lods
dec
pop
scas
lcall
or
into
mov
mov
stos
out
call
sahf
mov
xchg
mov
cli
out
inc
les
into
or
jns
cwtl
notl
sbb
jle
js
scas
mov
xchg
xor
test
lahf
je
adc
icebp
cmp
push
bnd
loope
fstl
jg
pop
arpl
ss
mov
ljmp
div
adc
dec
aad
sbb
testl
mov
stc
andb
xchg
push
pop
jecxz
shlb
pop
data16
mov
dec
mov
data16
pop
fnstsw
sub
stos
scas
push
jae
aam
xchg
xor
push
addr16
jge
pop
jl
mov
cmc
pop
pop
pop
cmp
or
inc
push
aam
mov
add
out
shrb
cmp
xchg
adc
stos
jl
sub
stos
jl
sub
lcall
cltd
outsl
or
or
push
push
pop
cmp
dec
mov
sub
call
std
pop
cmpsl
jg
inc
ss
push
out
push
fisttps
jb
pop
inc
adc
sti
gs
sbb
lds
iret
adc
mov
inc
mov
sub
jecxz
mov
neg
and
push
scas
dec
iret
jo
sbb
push
push
cmp
add
das
jmp
add
imul
jmp
jmp
add
outsl
dec
stos
test
cli
xchg
add
or
pushl
jmp
sub
scas
mov
fstp
je
sahf
rorb
xchg
fldenv
xchg
push
inc
lea
push
fs
xchg
sub
stos
out
out
pop
adc
les
and
mov
mov
pop
scas
pop
mov
mov
daa
mov
pop
fsubl
mov
rcl
lds
mov
movsb
lret
mov
daa
jecxz
inc
pop
adcb
loope
xchg
scas
cmp
mov
mov
stos
nop
adc
rcll
icebp
sub
dec
pminsw
push
out
adc
daa
out
ja
adc
xchg
sbb
jns
jp
dec
shr
clc
jae
jmp
mov
pop
aam
jmp
xor
clc
mov
std
imull
mov
dec
fistpll
pop
xchg
sbb
mov
lock
rcl
stos
out
mov
inc
test
movsl
add
repnz
out
or
insl
xchg
mov
cli
ljmp
push
sub
mov
and
lret
push
jne
aas
xchg
push
dec
mov
xchg
cmp
jl
mov
lods
out
mov
cli
shl
mov
adc
push
mov
jne
call
adc
ret
sub
jge
pop
mov
jg
jbe
in
fwait
call
fwait
sti
push
lret
roll
mov
adc
fstps
fisubl
xorl
pop
outsl
jno
ss
sub
jl
out
fisubrl
mov
mov
lods
loope
out
cmc
mov
aam
pop
je
jne
xchg
cs
jg
addr16
loop
data16
mov
jge
pop
mov
jbe
cmc
xor
cli
inc
jb
pop
jp
and
mov
jmp
mov
sub
push
jl
cmc
push
hlt
leave
xlat
push
popa
aad
pop
daa
push
mov
mov
cmp
xor
dec
sete
mov
sti
push
fists
clc
xchg
int
stos
mov
push
dec
pushf
sbb
rcrb
es
movsl
mov
xor
dec
aad
push
xchg
push
sub
cs
lret
jl
mov
xacquire
push
jecxz
push
out
out
insb
push
mov
stos
mov
jle
iret
mov
mov
mov
cmpsl
ret
test
pandn
mov
lcall
mov
std
fistpll
ficoml
push
das
xor
sti
stc
outsl
sbb
cmpsl
addr16
loope
stc
jecxz
mov
ds
mov
movsb
lret
mov
adc
mov
lds
jle
aad
xor
jbe
push
test
loop
adc
jge
js
outsl
bound
pop
jge
js
jge
fldenv
out
xlat
cmpsb
pop
bound
scas
in
inc
mov
jle
divb
jne
clc
jmp
sbb
mov
fsubr
mov
jmp
jne
sbbb
or
push
cld
movsl
negl
cmp
out
stos
outsb
mov
pop
lcall
push
cmp
inc
stos
cwtl
mov
pop
mov
cli
test
cmp
mov
push
mov
shlb
push
push
jmp
clc
outsb
mov
cltd
aam
fucompp
into
les
push
jecxz
push
arpl
movb
jo
lea
ret
lea
mov
cmp
jl
aad
cmpsb
push
push
xchg
js
xlat
mov
sbb
jae
sub
lret
mov
mov
mov
mov
jg
mov
mov
imul
push
je
arpl
or
xchg
outsl
cltd
inc
mov
ret
push
pop
jbe
ja
jg
fwait
xor
out
mov
out
aaa
mov
in
ja
arpl
enter
xor
jne
test
xchg
jns
pop
aam
mov
test
fnstsw
arpl
in
mov
sbb
jne
call
lds
nop
sti
mov
mov
pop
incl
inc
test
fsts
push
pop
add
cmc
cmp
dec
pushf
jo
dec
push
push
cmp
leave
xchg
dec
push
std
cwtl
sbb
lahf
jge
and
add
and
cmp
ja
cmp
jle
jg
arpl
out
jmp
call
mov
imul
insb
movsb
test
mov
movsb
pop
pop
xor
in
ja
popf
inc
pop
ss
push
push
int3
sbb
test
ds
mov
mov
pop
out
leave
stos
mov
int
mov
movsl
inc
jge
pop
ja
mov
loop
inc
ja
call
inc
out
mov
jmp
jns
hlt
shll
pop
pop
call
fldcw
js
and
enter
fbstp
arpl
mov
xchg
jle
or
aaa
shlb
sbb
shrl
hlt
movsb
out
xchg
sahf
push
cmpsl
mov
out
add
sub
cwtl
orl
arpl
std
sti
inc
mov
cmp
xchg
push
mov
rep
scas
icebp
sub
shll
sar
cwtl
adc
call
arpl
dec
in
sbb
test
mov
roll
pop
adc
bnd
insl
outsl
addr16
popa
add
imul
pushf
daa
mov
pop
cmpsl
xlat
idivw
push
sub
mov
fisubrs
stos
mov
jg
dec
dec
int
jno
mov
lea
and
in
push
ja
clc
mov
fsubr
into
cld
sub
stos
push
ljmp
in
push
scas
call
ljmp
inc
mov
sbb
pop
sbbl
push
ret
push
rorl
xchg
xor
xor
divl
pop
loop
dec
bound
mov
aam
mov
out
cmpsw
gs
repnz
add
pop
mov
pop
sub
aas
pop
fiadds
push
cli
aam
fs
mov
cmpsb
push
in
shll
loop
dec
jbe
jbe
movsl
std
aam
jg
xchg
jns
js
jno
push
sarb
add
lock
popf
xchg
stos
and
and
push
bound
push
outsl
es
xlat
sbb
sub
dec
sti
xchg
pop
mov
rorb
je
int3
xchg
inc
xchg
mov
inc
inc
jge
mov
cmp
sub
lret
add
movsw
add
cmp
gs
and
push
cs
roll
push
xchg
rorl
mov
js
add
testl
adc
fstps
push
pop
shrl
data16
add
les
clc
pop
jl
cwtl
fcoml
test
push
xchg
add
xchg
fiadds
ds
mov
xor
or
adc
in
in
fstps
clc
call
insb
repz
gs
mov
mov
in
fwait
mov
test
insl
push
pop
push
push
ja
pop
push
imul
sbb
icebp
gs
pushf
stos
mov
sahf
cmp
adc
repnz
mov
repz
lods
pusha
ljmp
out
push
jmp
outsb
sti
mov
testb
cmp
cmp
lds
scas
loopne
ljmp
add
cmpsb
loope
xchg
test
jl
mov
pop
mov
stos
mov
rol
test
add
stos
nop
xchg
mov
xchg
cwtl
push
mov
ss
xlat
cmc
cmpsb
out
aad
or
call
mov
ror
pop
std
jb
imul
mov
jno
cmc
push
pop
push
cmc
add
pop
sub
add
lods
add
mov
pop
pop
enter
push
add
pop
std
imull
arpl
push
stos
mov
jmp
dec
and
insb
popf
push
jg
loope
pop
jno
push
fidivrs
js
pop
jge
mov
jl
stos
cmpsb
gs
incb
sub
loopne
in
in
mov
shrb
mov
int
jle
stos
pop
fnsave
inc
std
gs
xlat
pop
mov
mov
pop
jle
mov
mov
xorl
or
push
mov
lahf
lods
push
jns
cmc
outsb
or
pop
loopne
filds
rorb
jno
mov
stos
cli
cmp
mov
sbb
add
xchg
xchg
push
ret
pop
popf
aad
add
xlat
jl
idivb
stc
push
ficomps
cmc
cmp
xlat
clc
add
push
jmp
cli
mov
call
cmpsl
scas
sub
mov
sbb
sbb
jmp
inc
jecxz
add
mov
scas
sbb
jge
decl
bound
push
jns
jns
xor
daa
icebp
add
adc
dec
addl
push
xor
sub
test
ficoms
stos
push
jp
movsb
pop
cwtl
jne
sbb
fldl
nop
mov
mov
scas
std
xor
leave
and
repz
sub
mov
push
lcall
lods
or
cmpsl
test
sti
movups
pop
cmp
push
push
or
dec
sbb
subb
sub
int3
jne
inc
jmp
subb
sub
lea
add
cmc
pop
in
icebp
inc
gs
imul
das
xlat
jne
sbb
xchg
in
inc
out
mov
je
mov
test
xchg
xor
cmc
popf
pop
jecxz
dec
mov
dec
jp
adc
fiadds
daa
arpl
sbb
add
dec
sub
dec
adc
push
mov
cmpsl
cwtl
mov
jl
or
or
xor
cwtl
stos
add
mov
stos
cmpsb
add
in
push
pop
fsubl
mov
or
fimull
arpl
mov
lcall
lcall
andl
int
mov
fistps
jmp
loop
movsb
les
mov
xorl
les
nop
gs
and
pop
inc
aas
cmp
rcll
cmp
xor
aad
push
and
adc
outsl
sahf
mov
adc
and
adc
mov
cmp
loop
sbb
fadd
in
arpl
jns
add
enter
or
adc
mov
or
in
stc
or
into
mov
or
inc
pop
dec
adc
pusha
lret
pop
cwtl
or
mov
lcall
xor
pop
sbb
mov
cmpsb
in
push
popf
shr
jns
xor
shl
dec
enter
pusha
dec
int
sbb
lcall
jnp
push
dec
int3
nop
xor
sarl
pusha
leave
and
imul
cmp
jmp
arpl
add
add
bound
out
fwait
pop
subb
lahf
ljmp
stos
sbb
mov
jo
jno
ja
stos
loopne
leave
lahf
xor
xor
and
roll
loope
lret
dec
sahf
lock
or
and
leave
push
lret
pop
mov
xor
cmp
sbb
leave
pusha
cmpsb
andl
adc
xor
jmp
mov
xor
shrl
or
xor
shl
dec
test
mov
xchg
outsl
mov
loope
adc
loope
andl
cli
repz
inc
fsub
inc
inc
add
pushf
dec
frstor
in
add
xchg
or
fs
hlt
add
adc
nop
stc
cmpsb
push
adc
push
adc
shrl
mov
adc
std
mov
test
mov
add
lcall
stos
das
mov
fcomip
inc
adc
dec
addr16
in
addl
inc
mov
jle
xchg
lods
jnp
test
add
xor
xchg
dec
mov
inc
add
sub
cld
popf
lock
ret
or
xor
daa
insb
push
cmp
sub
daa
mov
jae
jns
mov
adc
mov
mov
add
fcomp
add
aaa
lcall
into
sarl
les
pop
or
add
jge
stos
dec
push
jle
fisttpl
cmpsl
add
cmc
andb
xchg
sarb
add
mov
add
cmpsl
inc
adc
mov
xchg
add
and
inc
lcall
push
daa
jns
lss
iret
push
sti
in
push
add
fists
add
and
lods
outsl
cmp
mov
loope
int3
push
pusha
mov
mov
movsb
das
xchg
std
sub
daa
cs
push
push
fistpl
ss
lret
add
adc
push
sbb
add
mov
sbb
popa
adc
mov
daa
std
push
jge
fiaddl
cmp
ret
add
dec
out
hlt
adc
add
jmp
repnz
jbe
mov
pop
push
xchg
xor
mov
dec
repnz
mov
or
inc
roll
addb
pop
inc
sbb
add
out
inc
lret
mov
push
mov
add
adc
call
inc
sub
mov
jl
add
jge
ret
xchg
test
push
stos
out
add
sub
call
push
mov
cs
jg
add
adc
or
repnz
in
xchg
pop
xchg
jmp
ljmp
hlt
push
jecxz
add
add
sbb
ficoms
add
lcall
sub
push
ror
loopne
mov
ja
and
add
jae
jmp
push
fwait
jae
lea
xchg
aad
add
.byte
movsl
fimull
dec
add
add
lods
mov
add
les
lea
add
push
mov
add
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
pushl
mov
pushfw
pusha
push
push
mov
mov
add
lea
mov
mov
push
push
push
push
push
push
push
push
push
push
push
call
sub
pop
rep
pop
add
add
rep
call
pop
lea
mov
btr
jae
mov
std
mov
mov
add
add
rep
add
cld
jmp
add
mov
test
je
mov
mov
add
push
lea
jmp
pop
pop
pop
pop
je
jmp
add
jne
mov
sub
adc
ret
cmp
jae
push
push
mov
jmp
cmp
jae
push
push
mov
jmp
push
push
mov
push
xor
dec
movsb
xor
cmp
jle
call
jb
movsb
xor
dec
jmp
inc
call
adc
call
jb
ret
xor
call
sub
jae
mov
inc
jmp
mov
movzbl
call
adc
dec
jne
xor
cmp
adc
cmp
adc
mov
call
adc
call
adc
jne
call
add
add
push
sub
lea
rep
pop
jmp
cs
jle
add
cld
jg
add
bound
add
xchg
add
add
add
jmp
add
hlt
xor
add
push
add
add
add
mov
les
add
rolb
add
or
add
add
sub
add
rolb
pop
add
addb
pop
addb
call
addb
mov
pop
add
addb
add
add
je
pop
add
addb
movsb
addb
add
add
add
add
add
inc
js
je
jb
arpl
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
jb
je
arpl
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
push
xor
xor
fs
insb
add
push
dec
inc
dec
xor
cs
insb
add
gs
xor
fs
insb
