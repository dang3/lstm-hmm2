push
add
push
mov
add
idivb
lea
cld
push
repnz
aas
loopne
loope
push
add
ja
outsb
aaa
mov
sarb
pop
or
or
mull
push
adc
cwtl
push
cld
ds
cmp
push
add
add
or
test
add
leave
ret
mov
call
push
or
test
je
pop
push
push
lea
mov
add
mov
and
inc
fnstenv
ret
stos
out
add
rolb
inc
dec
jne
aas
pop
pop
add
not
ret
andl
cli
movl
fcoml
lock
jno
pop
test
cwtl
je
testb
or
jne
inc
or
call
xor
test
decl
call
add
jmp
cmp
sarb
jecxz
push
jbe
cmp
fcomps
xorb
pop
mov
stos
scas
movsb
xchg
sbb
inc
popf
dec
mov
push
inc
adc
or
push
add
and
iret
dec
add
or
shrl
add
or
shll
add
cmp
aad
add
sub
xlat
pop
add
sub
fstps
add
sub
fcompl
add
lar
dec
add
inc
add
push
add
add
loop
push
jecxz
and
adc
in
and
cmp
out
and
or
ljmp
xor
and
push
add
dec
add
cmp
icebp
adc
repnz
add
pop
add
aaa
add
sbb
notl
clc
sub
stc
sbb
adc
pop
mov
cld
call
mov
inc
enter
nop
add
sbb
popa
into
bound
push
or
es
xor
test
add
jb
cmp
je
fidivs
fnstsw
jne
add
mov
mov
pop
or
jb
and
es
dec
xor
adc
cmp
icebp
jb
mov
sub
sbb
xchg
cmp
and
push
mov
add
add
and
inc
mov
cmp
or
pop
cmp
jo
cmp
push
mov
dec
inc
and
cmpsb
dec
rorl
jle
test
repz
adc
sbb
push
mov
mov
mov
inc
xor
inc
cmp
cmp
mov
aam
enter
pushl
adc
hlt
movsl
xchg
cmp
add
subl
fs
es
and
sbb
icebp
inc
xchg
lods
pop
push
sbb
sbb
push
iret
popa
and
mov
push
fsubrs
shll
fdivl
mov
test
aaa
out
cmc
adc
shld
decl
mov
sub
and
or
dec
sub
es
lock
push
hlt
or
inc
or
movl
mov
fbstp
mov
sbb
test
adc
or
push
mov
nop
pop
lea
fldenv
xor
mov
adc
cs
add
mov
insb
and
mov
ss
cmp
lods
push
mov
cld
add
push
call
xor
cmp
and
int
adc
loop
sbb
fdivs
push
xchg
popf
add
sub
push
nop
daa
inc
and
xor
sarb
or
je
pushf
xchg
lods
xor
lods
or
sbb
enter
xor
call
and
mov
cmp
icebp
adc
dec
sbb
or
push
mov
inc
or
xchg
dec
daa
adc
sbb
sbb
jge
xor
sub
xor
push
jae
in
sbb
and
nop
and
push
and
xor
in
or
push
dec
pop
add
ret
jne
movl
cmpsb
in
sub
pusha
or
sbb
dec
push
loope
jmp
rcll
in
shrb
sub
sbb
sub
and
lret
les
or
lods
repz
shlb
fcoms
loopne
clc
sbb
sbb
add
test
xchg
add
test
std
mov
adc
cmp
jl
sbb
lock
aaa
test
dec
pusha
hlt
cmp
sbb
xchg
jp
hlt
and
and
jae
mov
add
xchg
adc
jb
hlt
sbb
addr16
adc
push
bound
test
lea
js
sbb
push
faddl
sbb
mov
enter
adc
mov
sub
or
and
adc
nop
adc
sbb
mov
in
xor
popa
adc
test
and
xchg
jno
in
push
inc
inc
adc
mov
xchg
sbb
mov
aaa
aad
dec
or
jo
jl
je
inc
nop
and
adc
and
outsb
or
or
jo
jl
js
mov
scas
mov
or
xor
sub
sub
push
mov
out
or
mov
sub
adc
inc
je
and
xor
xor
push
dec
fisubrl
inc
or
dec
lret
jo
add
or
adc
test
inc
sete
jg
xor
xor
das
or
scas
jo
sbb
testl
push
roll
and
add
xor
int3
lods
cmpsb
inc
pushf
sub
sbb
lods
lret
inc
mov
or
mov
and
cmp
call
xchg
daa
and
xchg
mov
or
daa
js
adc
sub
sbb
and
and
movsb
inc
push
sub
adc
enter
bound
mov
jle
je
push
stos
sbb
adc
xor
insb
or
mov
and
adc
or
sbb
loopne
rorl
les
je
lahf
adc
sbb
int3
push
or
sbb
cmp
and
nop
mov
xor
sbb
or
xor
mov
mov
movsl
xchg
and
lea
insb
inc
je
adc
js
and
mov
imul
pop
adcl
adcl
or
int3
loop
cmp
lods
sbb
inc
cmp
and
cltd
lret
adc
cmp
lock
inc
cmp
or
test
cmp
and
xor
pushf
mov
and
adc
rol
xor
orb
inc
xchg
and
mov
or
les
in
jno
cmp
push
jno
xor
pushf
sub
lret
in
inc
sub
and
xor
adc
push
add
rcl
int3
fcoms
sbb
cmp
sbb
mov
pop
push
push
je
mov
sub
mov
mov
sub
pushf
add
and
nop
sbb
sbb
negl
notb
adc
sbb
popf
mov
hlt
cmp
cmp
and
dec
sbb
and
push
cmp
jl
test
sbb
dec
dec
xchg
xchg
and
cmp
sbb
pop
or
hlt
into
es
adc
mov
inc
daa
adc
adc
sub
and
std
mov
mov
icebp
sub
or
mov
int3
testl
daa
sbb
lock
inc
je
pop
or
and
sub
ds
aas
xor
sub
dec
dec
mov
xor
inc
xchg
push
adc
enter
aaa
aad
dec
or
nop
cltd
rorb
pusha
mov
enter
sub
nop
cmp
mov
rorb
inc
pushf
loop
sbb
and
jl
fdivl
sbb
stc
or
in
inc
cmp
and
inc
jb
adc
sub
icebp
sbb
dec
xor
and
out
fmul
xor
mov
push
or
mov
add
pop
pop
pop
ret
push
mov
or
xor
idivb
xor
jge
je
sub
pop
push
mov
add
test
push
call
lds
inc
push
in
jmp
push
add
and
push
xor
hlt
les
sub
and
inc
icebp
jo
cmp
add
enter
sub
ret
dec
jno
or
in
or
test
adc
cli
and
mov
sbb
xchg
and
les
daa
pushf
jecxz
and
cmp
nop
or
repz
cmp
mov
adc
xor
xor
insb
xor
adc
cmp
mov
mov
mov
and
dec
sbb
mov
cmp
jb
sbb
aam
pop
pop
mov
xchg
sbb
adc
jp
adc
adc
adc
xor
pop
dec
mov
xorl
jge
mov
mov
divl
or
ret
dec
test
sbb
lret
fsubs
jo
ret
sbb
sub
outsb
and
dec
je
sbb
mov
in
std
xchg
xor
fcmovnb
cmpsb
aas
xor
fwait
inc
cmp
sbb
lods
leave
jne
lock
movd
or
jl
and
rorb
cmp
inc
ret
jmp
xor
pop
mov
add
out
push
push
lret
cmove
enter
inc
jae
xor
or
test
je
lcall
std
mov
ret
pop
inc
scas
clc
xor
push
pushf
out
push
jns
mov
enter
lock
popf
subl
adc
and
outsb
ljmp
push
sub
inc
call
mov
dec
push
cmp
jmp
push
push
clc
pop
push
mov
divl
xchg
aam
bound
inc
sbb
ja
push
inc
push
enter
imul
and
sub
ss
lahf
mov
cwtl
cmpb
cmp
jbe
out
pop
add
cmpsb
inc
mov
sbb
jb,pt
jmp
and
adc
cmpsl
fs
in
hlt
jmp
test
out
pop
int3
dec
lods
mov
repz
cmp
or
lods
or
test
sahf
hlt
mov
repnz
rcll
jbe
addr16
or
push
lods
add
push
shr
pop
popa
neg
lea
cs
add
mov
add
inc
les
or
pop
jmp
and
jns
sbb
add
rorl
int
ret
shr
repz
iret
call
and
movsl
ret
test
jne
jle
enter
cmp
sub
inc
push
divl
jbe
or
mov
mov
add
testb
insb
pop
movsl
clc
xchg
add
ljmp
addr16
mov
or
in
inc
xor
test
adc
pushf
pop
adc
xchg
pop
fs
cmp
mov
push
hlt
add
sarb
div
mov
inc
adc
daa
mull
in
es
adc
xor
push
cld
inc
push
mov
dec
int3
jno
push
dec
mov
lret
sbb
or
push
jno
lahf
sub
mov
ret
adc
adc
mov
push
sub
mov
jge
cmp
and
dec
cwtl
loop
inc
cld
dec
popf
rcr
std
or
push
cmpsb
ja
fs
or
rcpps
cmp
pop
shrl
xor
push
cli
dec
call
arpl
lds
xchg
or
sbb
dec
xchg
mov
loopne
mov
xor
inc
popl
add
mov
negb
push
push
cltd
fdiv
stc
push
jnp
adc
mov
and
clc
jb
movsl
mov
push
ds
adc
sbb
inc
les
lret
je
cmpsb
es
inc
push
xor
or
mov
pop
in
daa
sbb
cmp
hlt
sub
or
and
je
pop
or
cmp
scas
mov
xor
pop
xchg
int
or
lods
dec
jb
push
andb
mov
aam
xchg
mov
or
test
or
mov
pop
xor
push
mov
outsl
sbb
cld
adc
xor
lea
js
in
vmread
push
lahf
mov
sahf
mov
xchg
mov
test
aam
and
sub
cmpb
lods
or
dec
push
jne
cmpl
jle
mov
adc
cs
in
pop
xchg
cmpsb
mov
cmp
je
sbb
sub
sbb
fisubs
mov
aas
inc
ret
fxam
stos
or
push
pusha
mov
lret
push
movsb
adc
mov
sub
xor
and
jbe
pop
jo
or
inc
mov
inc
and
ds
mov
pop
xchg
pop
or
ret
xchg
in
pop
sub
mov
jl
mov
xlat
imul
dec
mov
sbb
push
sub
nop
pop
lds
mov
cli
sbb
lock
sub
mov
sub
test
xor
jle
add
mov
lahf
add
or
inc
mov
js
cmp
mov
loopne
adc
je
mov
dec
xor
sub
sbb
nop
rcrl
mov
mov
mov
push
call
and
sbb
mov
sbb
adc
fisubrs
addl
and
add
je
decl
dec
mov
cld
cmp
lds
add
and
je
inc
popf
push
lcall
xor
and
jl
xor
jae
jmp
das
mov
fcomps
or
inc
les
xor
movl
and
mov
add
xor
pop
leave
ret
mov
roll
es
roll
and
movsl
xor
out
pop
xchg
cmp
cli
fildl
xor
lods
adc
pop
das
mov
mov
dec
repnz
adc
scas
inc
jno
or
and
mov
adc
adc
pushl
and
cld
fiaddl
xchg
idiv
cli
int3
imul
sbb
lcall
push
lret
les
sub
mov
vpsubsb
cmp
mov
or
xchg
mov
cmp
mov
or
call
enter
movnti
xor
mov
jo
rcrb
hlt
sbb
dec
inc
negb
pop
into
test
fdivl
jmp
jne
nop
mov
jmp
sbb
je
or
shrl
mov
call
pop
mov
inc
add
mov
push
dec
mov
shlb
adc
mov
inc
hlt
lret
cltd
sbb
pop
xchg
sbb
in
les
nop
dec
cmp
fdivs
xor
cmp
mov
sub
es
mov
sub
rcll
add
repnz
cmp
lock
mov
addb
inc
push
jmp
jle
sub
xor
push
cmpsb
jecxz
and
dec
mov
dec
or
mov
push
mov
xlat
jp
ja
sti
lret
mov
or
push
aaa
call
sub
out
add
repz
inc
movb
je
and
push
test
cli
lcall
mov
hlt
jl
jmp
jmp
pop
jns
xor
nop
js
pop
mov
mov
lods
push
jge
mov
jno
push
sbb
mov
xor
pop
sbb
shll
cld
sbb
inc
call
sbb
enter
sub
rorl
loope
cmpb
jno
js
mov
dec
dec
push
push
mov
sub
mov
sbb
and
mov
mov
inc
sub
mov
xor
dec
cmp
xor
mov
pop
push
add
dec
mov
adc
sub
shrb
sub
sbb
jo
sahf
out
inc
mov
adc
xchg
xchg
pop
adc
cld
andb
sub
add
add
mov
movb
sbb
sahf
pop
lock
add
add
add
sarl
cmp
pop
sbb
push
push
or
xchg
sub
sti
pop
cmpb
mov
mov
push
inc
mov
and
mov
mov
and
xor
or
jg
idivl
xor
jne
inc
out
xor
jp
push
or
cmc
loope
loopne
sub
test
sub
and
jmp
inc
scas
in
or
mov
and
js
pop
mov
sbb
daa
push
jl
call
shlb
pop
lahf
and
xlat
inc
mov
or
inc
mov
xor
fsubs
call
insb
pop
push
sub
movsl
jb
cli
and
inc
std
add
inc
pop
jb
jae
sbb
inc
inc
xchg
fcompl
add
jno
or
in
les
dec
sti
sbb
push
inc
sub
push
cmp
mov
xchg
loop
mov
test
test
data16
ret
das
or
lret
divb
or
push
ss
mov
push
push
inc
loopne
xor
ret
out
mov
pop
sub
push
pop
inc
nop
gs
xchg
fbld
cmp
loopne
dec
adc
push
or
inc
pop
mov
inc
call
inc
mov
pop
sub
inc
xor
cmp
insl
sarl
mov
pop
jle
gs
inc
inc
inc
stos
push
shlb
adc
inc
pusha
jb
or
lods
loop
cwtl
push
sbb
popa
stc
sub
fs
xchg
xor
les
mov
fisttps
xor
mov
xchg
or
cmp
je
scas
movsb
xchg
xchg
sub
cmp
jge
inc
mov
fucomi
adc
test
in
pushf
arpl
adcl
addr16
add
or
jle
adc
shl
xchg
cmp
add
push
or
pop
mov
adc
inc
pop
ja
push
addr16
adc
and
adc
mov
jne
jb
adc
jno
adc
pop
cmc
gs
xor
je
inc
mov
cltd
pushf
push
lods
mov
xchg
adcb
push
sub
pop
imul
or
and
xor
test
daa
adcb
add
bound
pop
or
xor
dec
add
cmp
imul
daa
dec
mov
xor
pushf
daa
or
xor
mov
and
and
cmp
mov
sbb
xchg
or
ja
cmp
aas
test
adc
leave
cwtd
test
sbbb
add
fs
in
cmp
mov
mov
add
or
push
imul
in
or
mov
sbb
sti
dec
ror
and
inc
xor
sub
insb
sub
inc
jl
push
pop
push
push
xor
and
inc
or
fs
adc
daa
test
scas
popf
adc
xor
sub
movups
xchg
and
push
mov
sbb
xchg
add
push
adc
sbb
test
loope
inc
or
jl
dec
imul
adc
adc
sbbb
leave
sti
push
adc
add
test
inc
test
popa
add
jnp
adc
or
inc
cmp
jne
pop
xchg
ss
nop
daa
mov
xor
scas
sti
mov
and
mov
add
mov
pop
cmp
mov
inc
stc
xor
jg
mov
adc
fldenv
sarl
adc
fcomps
shr
add
xchg
xlat
mov
push
xor
shl
inc
pop
adc
mov
sti
daa
ret
push
scas
xchg
ret
inc
icebp
nop
sbb
and
je
mov
arpl
dec
outsl
or
add
push
jmp
in
push
or
mov
add
test
mov
stos
sub
push
sbb
add
test
pop
xchg
sub
push
lds
iret
jmp
int3
and
scas
or
ret
sahf
lock
call
sbb
mov
xchg
bound
jnp
xor
std
cmpsl
aaa
push
lock
jno
aad
adc
popf
nop
lods
loope
sbb
loop
movsb
pop
mov
andb
test
hlt
inc
pushf
rcl
les
push
je
inc
aad
xlat
inc
test
ds
clc
and
or
xor
and
nop
pusha
mov
cwtl
push
lea
mov
cmp
pextrw
cmpsb
cs
dec
aas
push
lds
or
jae
xor
push
js
and
sbb
jmp
test
and
pop
xor
outsb
mov
ja
sub
je
mov
sahf
add
pop
daa
icebp
test
je
adcl
sub
fucomip
jno
pop
or
add
push
outsb
sbb
cmp
mov
mov
add
popa
adc
lea
adc
mov
mov
pusha
icebp
lea
sub
lock
mov
movsl
pop
dec
sub
aam
inc
mov
cmp
mov
push
ss
pop
push
hlt
lods
xor
jo
fistps
inc
cltd
jecxz
push
lea
cmp
or
cmp
jne
jns
dec
sub
cltd
cwtl
sub
or
popf
outsb
rorb
or
decb
sub
insl
adc
adc
sbb
and
adc
clc
cmp
out
sbb
push
adc
mov
loop
sbb
out
mov
movl
dec
push
dec
das
adc
jae
xor
jge
push
mov
push
mov
add
fsubl
adc
xchg
push
mov
sbb
or
cmpsb
add
xchg
dec
adc
mov
or
mov
push
xlat
test
mov
add
call
xchg
push
lret
and
push
mov
or
add
jle
push
dec
sub
xchg
popf
xor
and
cmpsb
xchg
mov
jle
adc
jmp
jmp
out
stc
sub
add
and
push
mov
jp
popf
sub
or
das
and
rolb
or
cmpsb
and
test
in
sbbb
rep
test
xor
dec
or
xchg
in
cmpsl
sbbl
neg
mov
mov
test
adc
sub
mov
pop
mov
ret
call
pop
sub
pushf
push
add
loope
jmp
enter
lret
inc
jbe
add
add
mov
dec
mov
add
test
dec
inc
add
and
and
ficoms
xor
mov
adc
les
push
inc
imulb
cmp
loope
adc
dec
adc
or
hlt
push
mov
mov
filds
mov
and
sbb
js
mov
arpl
je
sub
dec
push
inc
pop
and
cmp
and
mov
sbb
les
fcomps
or
inc
or
inc
cmpsl
adc
fdivr
push
push
xchg
push
call
flds
jns
add
jmp
sub
inc
mov
adc
or
test
adc
sbb
adc
adc
xchg
nop
dec
hlt
mov
sbb
or
cmp
dec
or
es
pop
sub
inc
sub
add
inc
xor
sbb
lret
and
inc
push
and
nop
pop
test
cmpsb
sub
push
lock
and
push
movl
add
les
sahf
or
test
mov
inc
sbb
sub
and
cld
or
adc
sbb
dec
xchg
mov
or
adc
icebp
sub
inc
mov
fs
and
movsl
cmp
inc
xor
mov
push
aad
pop
xor
fs
add
std
cmc
or
lret
push
jl
and
mov
push
mov
mov
out
call
enter
adc
int
and
mov
or
push
stc
xchg
adc
or
and
lds
aas
or
and
push
and
adc
pop
xor
aas
imul
add
or
mov
xchg
sub
movsb
cld
and
adc
add
jnp
sub
adc
aam
sub
sub
and
ret
pop
subb
adc
sub
sub
jnp
mov
mov
cmp
inc
jle
inc
dec
iret
adc
adc
mov
sbb
lods
test
xchg
mov
sbb
pop
adc
jge
rorb
sti
inc
shlb
pop
mov
inc
sub
test
and
adc
lods
or
or
xor
adc
sub
nop
bound
adc
xchg
nop
sub
cmp
inc
and
push
adc
or
dec
xor
jo
inc
pop
enter
and
inc
mov
mov
xor
and
push
inc
inc
and
adc
mov
adc
rorl
mulb
and
sub
pop
and
test
enter
and
cmp
inc
sbb
out
mov
lea
es
push
lret
jg
and
rcrb
jmp
push
and
adc
adc
rclb
es
adc
mov
sub
xchg
adc
mov
or
test
and
push
inc
push
mov
mov
and
les
xchg
mov
cld
and
adc
and
nop
in
mov
orl
inc
push
enter
adc
sub
xchg
and
or
inc
adc
mov
mov
sbb
or
inc
lahf
mov
push
inc
jne
inc
adc
test
and
adc
or
xor
insl
sub
xchg
and
cmp
inc
adc
adc
or
rolb
lods
pop
jno
inc
jmp
ljmp
in
push
in
sub
dec
sahf
ja
mov
sbb
ljmp
adc
and
pop
push
jmp
dec
adc
test
and
mov
test
xchg
push
push
cmp
xor
subl
das
and
rorb
nop
fadds
inc
or
mov
sti
mov
in
jmp
pop
inc
push
inc
test
sbb
xor
test
sbb
and
jecxz
xlat
outsl
inc
xor
ret
adc
jmp
adc
sub
inc
or
inc
adc
fs
mov
and
or
ret
fs
fcoml
xchg
and
pop
orl
adc
xor
js
inc
sub
xchg
and
iret
pop
adc
les
dec
or
push
test
adc
pushf
mov
fiadds
movsb
and
push
inc
mov
mov
jne
cmp
adc
add
sbb
jo
push
enter
test
pusha
dec
jns
ss
pop
lods
jmp
lea
dec
jnp
push
cwtl
inc
jo
cmp
inc
push
and
and
sub
and
rclb
sub
fwait
mov
adc
jmp
mov
lods
les
push
call
orb
or
cwtl
sbb
adc
icebp
popf
mov
xor
adc
xor
mov
hlt
xchg
mov
enter
arpl
sbb
jae
cmp
icebp
sarb
icebp
test
out
shl
pop
es
jl
mov
or
ret
mov
movsl
mov
or
jne
fnstenv
sub
push
push
call
je
enter
add
sarl
push
push
enter
bound
pop
fwait
lock
test
js
sar
sub
push
sbb
adc
and
xor
mov
inc
mov
negb
int3
lcallw
scas
add
jne
sbb
dec
in
mov
aas
loope
jp
xor
lea
push
test
mov
scas
dec
into
cld
scas
leave
or
mov
mov
ficoms
pop
mov
add
test
test
xchg
push
sub
jnp
testl
xor
cmp
cmp
xchg
mov
sbb
push
cmpb
mov
daa
jle
pusha
nop
loopne
movsb
sbb
adc
inc
das
cwtl
sbb
cmp
shrb
nop
lods
xor
and
jge
sub
jbe
notl
mov
mov
mov
test
es
or
and
add
pop
adc
mov
mov
push
mov
addr16
mov
jbe
mov
nop
or
enter
cmpsl
adc
push
test
cmp
cmpb
clc
test
inc
xchg
adc
les
and
mov
lret
xchg
xor
ljmp
iret
popw
and
insb
xor
add
and
and
or
mov
jmp
syscall
push
call
add
push
add
xorl
shlb
dec
dec
xchg
aas
mov
jns
cmp
daa
mov
dec
daa
pop
iret
sbb
mov
test
or
daa
push
scas
lret
aam
in
push
popf
mov
xchg
pop
fcomps
pop
xchg
add
dec
repz
add
int3
adc
sbb
mov
cmp
mov
test
lods
shlb
sbb
cmp
dec
aad
nop
inc
jmp
or
mov
xchg
icebp
cmp
das
and
add
sub
add
daa
add
sete
and
xchg
es
push
je
dec
enter
repnz
outsw
jo
and
or
dec
push
xchg
in
cmp
jecxz
adc
adc
fs
cmp
and
data16
mov
sub
pop
mov
xlat
xor
push
or
or
add
ds
mov
adc
xchg
mov
shll
mov
dec
cwtl
mov
inc
sbb
adc
sub
pop
mov
adc
and
jbe
add
mov
inc
leave
test
test
popa
jb
inc
punpckhwd
sbb
jbe
push
int3
mov
or
cmpsb
or
shlb
xchg
pop
popf
out
xor
add
fsub
adc
fisubl
ret
jne
mov
pushf
out
push
mov
shll
andb
dec
sbb
inc
pop
adc
and
lahf
nop
mov
dec
dec
loop
xor
out
sbbb
sbb
test
push
mov
movups
or
insb
arpl
loopne
test
sbb
outsl
fs
je
hlt
out
pop
push
xchg
jo
adc
roll
xchg
insl
rorl
jmp
sub
adc
gs
dec
pop
shrb
cmp
xchg
sbb
inc
jg
push
push
imul
cmp
sbb
mov
aas
cmp
js
adc
jmp
movsb
aad
cmove
mov
sarl
and
mov
xor
aaa
pop
xor
rolb
test
test
sub
adc
mov
aas
clc
je
nop
orb
inc
add
jl
xor
push
jmp
int3
pop
xchg
cwtl
insl
cmp
push
shll
pop
push
or
sbb
jmp
shll
and
jae
dec
sbbl
jmp
shrb
sub
or
adc
in
iret
dec
test
mov
adc
jmp
mov
or
movsb
or
adc
dec
das
sbb
call
cmp
mov
push
call
insb
and
mov
mov
sub
inc
mov
dec
or
dec
fisubs
pop
cmc
cmpsb
ss
sbb
mov
cmp
push
mov
icebp
mov
icebp
js
or
inc
mov
lods
bound
jae
xchg
fistl
cwtl
push
dec
stc
test
hlt
xor
mov
call
pop
push
mov
xchg
sub
jne
sub
shl
sub
sbb
iret
mov
dec
cmp
dec
shr
xor
push
or
insb
dec
stos
ficoml
repz
xchg
sub
and
pusha
pop
lcall
shl
mov
jmp
jo
mov
and
add
mov
xor
lret
pop
sub
and
inc
xchg
and
mov
lret
adc
mov
mov
rcr
jmp
hlt
int3
lret
push
cmp
mov
ljmp
lea
in
ljmp
fistpl
mov
fdivrl
mov
lods
popa
aaa
jmp
adc
jae
into
or
adc
mov
mov
mov
out
push
sbb
push
mov
adc
mov
adc
mov
push
or
inc
mov
loop
hlt
adc
cmp
icebp
mov
hlt
and
sub
xchg
adc
aam
into
sub
mov
xchg
cld
maxps
movsl
pop
xor
jnp
jo
push
mov
dec
mov
in
enter
push
pop
sbb
or
punpckhbw
adc
add
push
jmp
les
push
and
sbb
inc
dec
enter
dec
and
and
adc
sub
ret
mov
pop
push
adc
bound
xchg
push
push
jge
inc
test
addr16
push
pushf
adc
in
xlat
inc
push
push
and
int
or
push
out
xor
push
and
daa
adc
and
pop
and
adc
and
jbe
push
inc
and
je
mov
clc
cltd
movsb
mov
push
pop
shll
fildl
push
xchg
jle
repz
cmp
cmpb
mov
ret
adc
fdivr
mov
shlb
inc
test
adc
xchg
or
in
add
mov
sbb
and
mov
sbb
test
add
imulb
xchg
std
or
xor
loop
adc
push
bound
and
pop
cmp
test
jmp
sub
inc
push
add
pop
and
add
sbb
call
idivb
adc
cmp
hlt
pop
pop
fdiv
jnp,pt
fimull
and
inc
leave
and
jecxz
icebp
out
cmp
xchg
or
cld
test
mov
push
repnz
jb
sbb
mov
sbb
int
cmpsl
pop
mov
and
xor
in
cmc
mov
cmpsb
sbb
in
cmc
call
cmpsl
cmp
adcb
pop
push
jge
jl
dec
dec
push
xor
dec
add
dec
push
sbb
cmp
jne
and
inc
adc
add
pop
pusha
push
jl
in
dec
add
mov
cwtl
enter
pop
cmp
lea
je
push
sub
repz
inc
add
add
mov
sub
or
ja
test
dec
or
enter
add
mov
jmp
inc
cli
ret
leave
aam
inc
int3
jb
jmp
cmp
std
imul
cltd
mull
nop
inc
pop
gs
and
xlat
pop
cmp
xor
outsl
inc
xor
inc
sub
xor
xor
sbb
sbb
movsb
cmpb
repnz
test
adc
adc
sarb
les
mov
adc
icebp
cmp
sub
xor
lret
mov
mov
sbb
sub
popa
call
movl
sbb
test
ret
dec
int
push
dec
rolb
xchg
sub
mov
lcall
push
imulb
mov
daa
push
inc
test
call
aam
and
xor
sub
adc
adcl
inc
sbb
xlat
cmpb
or
sbb
inc
sbb
aaa
and
test
mov
in
mov
inc
aaa
mov
push
push
and
or
xchg
test
inc
lock
fs
xor
adc
push
inc
sbb
inc
adc
popf
adc
xchg
inc
or
xchg
mov
mov
and
into
inc
jne
cmp
je
outsl
repnz
subb
fsts
mov
clc
sbb
and
push
inc
sbb
test
adc
cmc
aam
jl
fdivs
adc
test
jne
mov
push
jl
or
aad
push
push
shlb
enter
scas
enter
lcall
addl
sub
ja
sbb
nop
aam
mov
call
mov
lods
xchg
sbb
in
mov
jo
sbb
xchg
sbb
or
in
and
adc
test
lahf
inc
mov
movsl
das
xor
mov
or
and
xchg
addb
cld
sub
sub
jge
cmp
and
adc
sub
call
dec
dec
mov
and
adc
dec
adc
jp
xchg
enter
or
negl
xchg
lcall
inc
sub
fs
xor
mov
inc
cmp
push
push
bound
inc
mov
aas
inc
xadd
stc
les
adc
jmp
scas
pop
jl
imulb
sbb
push
sbbb
mov
ja
dec
mov
dec
cmpl
or
push
xor
inc
dec
lds
and
inc
xor
sub
xchg
and
cltd
xchg
cwtl
sub
push
mov
nop
test
in
cmp
icebp
lret
test
jne
and
mov
movsb
inc
mov
sbb
daa
and
dec
addr16
inc
loop
sbb
jb
rclb
ret
cmpl
jp
push
xor
test
xchg
push
xchg
xor
repnz
inc
adc
push
jp
jg
or
cmp
cld
test
enter
pop
call
bound
adc
inc
adc
adc
adc
sbb
push
addr16
push
xor
push
pop
jmp
cmc
add
rcll
sub
inc
adc
in
push
and
adc
hlt
mov
mov
push
inc
cmovp
orb
and
inc
imul
cmp
inc
pop
lret
xor
fidivrs
dec
inc
loopne
push
cmp
roll
vmwrite
mov
in
dec
sub
nop
loop
sbb
addb
lcall
adc
inc
in
inc
and
arpl
aad
jb
mov
mov
jle
pop
mov
mov
cmc
and
pusha
adc
nop
sub
fiaddl
sbb
inc
adc
mov
hlt
jge
jns
xchg
and
xchg
adc
rcrb
jbe
adc
add
das
shll
aam
ret
dec
cmp
xor
inc
in
and
mov
mov
xchg
sbb
dec
sbb
mov
and
add
jecxz
and
sub
jne
dec
mov
or
push
cmp
popf
xchg
leave
jle
inc
mov
cmp
inc
mov
jbe
pop
and
or
ret
rcll
sub
out
popf
push
and
je
dec
sub
je
inc
or
add
and
cmpl
jne
out
hlt
push
jbe
push
mov
adc
push
out
jge
mov
inc
mov
fisubrl
add
lods
xchg
pop
sbb
repnz
cmpsb
ret
or
stos
xchg
mov
ret
inc
xchg
pop
les
faddl
inc
lds
inc
aas
jo
sbb
enter
sub
mov
and
adc
and
nop
js
push
pop
or
test
cmc
cmp
or
fimuls
mov
cmp
inc
jns
add
push
and
pop
jge
xchg
test
enter
and
enter
stc
cmp
rolb
and
and
sub
mov
and
fs
jb
adc
or
push
nop
pop
popf
loope
cmp
les
stc
inc
js
mov
push
inc
movsl
adc
and
xor
adc
and
mov
xchg
inc
outsl
sub
inc
cmp
mov
cmp
mov
and
sub
sub
sbb
test
les
bound
cld
ja
adc
lods
inc
in
in
sbb
in
and
cld
adc
and
xor
sub
mov
and
mov
jle
inc
lods
or
add
popa
aaa
dec
jg
sbb
add
push
cmp
testl
or
jne
mov
push
call
push
jle
inc
sub
xor
lahf
adc
and
and
ss
sub
nop
and
sahf
inc
negb
adc
icebp
mov
and
mov
icebp
jbe
icebp
adc
es
in
aas
daa
xchg
mov
pusha
scas
adc
add
mov
adc
and
mov
or
adc
and
push
lds
fwait
push
add
call
mov
push
ret
cmp
adc
inc
lock
aam
and
into
outsb
loop
add
cmp
xchg
sub
lock
and
mov
jmp
inc
mov
pop
and
inc
xchg
push
lds
mov
aad
or
adc
call
mov
test
cs
dec
inc
dec
cmpsl
pop
adc
and
fldcw
add
xor
jmp
fwait
cmp
mov
or
push
or
mov
sbb
and
sub
inc
and
mov
push
inc
rcl
cs
loope
jl,pn
or
adc
mov
cmp
jae
arpl
sarl
je
enter
ret
sbbl
sbb
sub
cmp
es
push
js
jl
jecxz
mov
fdivrl
xchg
repnz
das
les
hlt
add
jne
in
xor
int3
jge
dec
or
test
movsbl
test
adc
jae
lods
inc
repz
push
dec
insb
loop
add
inc
cmp
mov
test
xchg
hlt
adc
and
pop
test
inc
outsb
jb
rcl
sti
xor
adc
and
sub
pop
ja
insb
adc
ja
inc
jmp
or
je
push
repnz
cmp
or
inc
push
pop
mov
jne
jb
std
addl
add
jmp
pop
sub
jmp
ret
sbb
out
mov
and
and
mov
add
and
sub
add
adc
stc
and
or
ds
outsb
adc
call
push
xor
adc
jl
call
out
or
sub
push
or
stc
dec
aas
mov
pop
adc
insl
dec
sbb
nop
outsb
xor
mov
out
dec
ret
call
or
jo
sbb
cmp
and
hlt
pusha
mov
addb
push
mov
add
and
iret
push
push
sbb
call
inc
jl
leave
or
sub
or
add
mov
clc
inc
or
pop
mov
mov
xchg
inc
mov
and
and
in
mov
cmp
xchg
dec
or
faddl
adc
or
imul
jp
bound
xchg
outsl
inc
subb
pusha
inc
pop
jg
inc
imul
lahf
fs
mov
adc
fisubl
mov
and
cltd
inc
dec
inc
pop
adc
and
sub
dec
test
outsb
sub
jecxz
xor
jl
int3
sub
mov
or
test
sahf
sub
test
fisubs
fmull
mov
and
fidivl
sub
inc
push
inc
mov
and
sub
adc
mov
les
std
insl
or
nop
orb
test
enter
daa
pop
pop
fwait
and
test
mov
jae
xchg
or
xchg
sub
and
sbb
inc
test
cs
inc
and
xor
pop
mov
cmp
and
test
jmp
and
inc
rol
xor
bound
mov
nop
mov
cwtl
and
adc
adc
sub
mov
xchg
das
inc
dec
jmp
bound
nop
loopne
sbb
sbb
inc
in
and
fs
jno
xor
in
imul
or
repnz
ficomps
xor
dec
mov
dec
lods
roll
dec
inc
xor
sub
mov
lods
call
lahf
cmp
and
and
cmp
sbb
test
enter
xor
sub
int
mov
cmp
shrl
adc
imul
add
bound
add
popf
into
cmp
es
and
mov
jns
pusha
adc
mov
mov
ret
adc
cmpb
inc
cmp
test
adc
or
movsb
dec
rolb
adc
aam
in
loop
xor
mov
cwtl
mov
push
or
lds
ja
xor
ja
jb
adc
fiadds
adc
leave
lret
inc
pop
lret
push
mov
jo
push
xor
lds
push
sub
cmpsb
fs
jbe,pt
fwait
mov
fdivrs
adcl
aad
mov
daa
push
cmp
pop
or
pop
leave
xchg
cld
cmp
lret
sbb
mov
lods
dec
inc
xor
addr16
inc
imul
push
inc
push
adc
and
std
adc
sbb
mov
xchg
out
mov
rolb
and
cmp
mov
mov
pop
sub
mov
and
xchg
les
outsl
jl
inc
adc
push
push
mov
inc
std
addr16
push
mov
inc
xor
add
xor
inc
xlat
push
and
add
shrb
and
sub
bound
adc
lock
nop
jnp
mov
sbb
test
enter
cmp
int3
and
push
and
adc
insb
inc
cmp
test
and
data16
repnz
fisttpl
ret
les
lods
or
push
mov
nop
xchg
cmpsl
inc
xchg
cwtl
and
mov
into
inc
jb
or
bound
bound
js
les
mov
and
pop
mov
push
xchg
jne
mov
add
mov
mov
stos
daa
push
daa
and
jg
ficomps
clc
fistps
lock
inc
aas
repnz
mov
in
or
sbb
mov
push
sub
pop
mov
sbb
pop
xor
cmp
lods
cmp
push
cld
aam
push
adc
inc
push
push
xor
nop
pop
cmpsb
dec
sbbl
cld
mov
fistpl
mov
movsl
jno
lock
xchg
pop
and
test
mov
cmp
inc
adc
cmp
adc
cmp
orl
sub
popa
mov
icebp
scas
adcb
rolb
mov
in
in
fstl
and
or
fs
iret
push
cmp
and
adc
xchg
or
push
or
inc
and
xor
call
xchg
mov
mov
jle
je
sub
sub
and
dec
int3
pop
jno
push
gs
adc
sub
mov
sub
cmc
push
and
mov
and
and
rclb
cmp
fwait
aam
cmp
cvtpi2ps
lret
cmp
adc
pop
loop
add
cmc
xor
in
test
sub
popa
or
packssdw
xchg
cli
mov
in
inc
pushf
adc
or
fpatan
mov
pop
xor
xorb
cmp
jle
pop
sub
test
or
call
je
sbb
pop
mov
test
xor
adc
and
clc
mov
inc
jge
mov
imul
int3
push
lock
out
push
push
outsl
mov
ds
les
loop
add
adc
test
mov
roll
enter
adc
enter
add
sub
shlb
jmp
movsb
sbb
nop
cmp
mov
xchg
add
push
xor
ss
jle
push
dec
or
inc
add
xchg
mov
or
adc
inc
clc
push
inc
cmp
inc
pop
mov
jge
fiadds
sbb
rcrl
jle
mov
call
aad
add
mov
rorl
jmp
sbb
jl
jmp
push
add
test
cmp
push
fimuls
sub
inc
cmp
dec
pop
dec
lret
xchg
and
inc
xor
cmpsb
add
push
cmp
jmp
sub
pushf
repz
cwtl
inc
add
bound
and
mov
fmuls
rcrb
dec
mov
sub
dec
das
into
aas
nop
fidivl
scas
mov
inc
insl
mov
pop
imul
insb
mov
or
or
mov
lahf
test
add
cmp
push
les
adc
aaa
cmpsb
ds
aad
mov
cmp
pop
xchg
xor
xor
push
jmp
or
movsb
dec
xor
int3
cmp
daa
adc
dec
add
sbb
adc
cli
mov
push
xchg
scas
inc
pop
cmpsl
stos
mov
or
mov
rcrb
inc
push
in
push
adc
ds
test
mov
push
fidivrs
or
inc
add
arpl
das
inc
mov
add
or
nop
rcll
push
inc
push
or
in
and
push
or
sub
or
and
call
and
loopne
stos
sub
inc
adc
cmp
mov
dec
push
lods
aaa
adc
push
sbb
stos
mov
ljmp
add
xchg
push
jle
inc
xchg
jle
pop
sbb
lret
sub
jecxz
stc
adc
es
call
jmp
jp
xchg
mov
push
add
aaa
lock
cmpsb
in
and
jae
push
pop
or
shll
lea
lret
stos
test
mov
cwtl
ret
or
test
adc
orl
mov
jbe
lahf
jo
orl
rcr
mov
pop
int3
sbb
inc
fwait
or
inc
xor
enter
jno,pt
adc
push
jne
inc
mov
add
loop
hlt
mov
lcall
je
cmpb
stos
sub
jg
mov
std
js
out
adc
les
or
aad
scas
xor
add
mov
mov
pushf
and
std
dec
pop
shll
adc
mov
or
popf
mov
and
pop
and
adc
jl
clc
lods
sub
repnz
cmp
stos
and
aam
ror
add
fs
orb
mov
in
cmp
into
arpl
mov
test
push
lret
mov
ret
jmp
jmp
jb
scas
mov
add
daa
fistpll
mov
mov
pop
mov
enter
sbb
aaa
sahf
push
outsb
icebp
es
inc
lea
rorl
and
xchg
nop
pop
repnz
sahf
adc
test
insb
testb
pushf
cld
mov
ds
js,pt
cld
test
aaa
or
mov
addb
xchg
xchg
cltd
call
sub
push
adc
adc
push
out
and
adc
fcoms
ret
cld
cmp
nop
arpl
sbb
adc
adc
push
xchg
cmpl
adc
sbb
movsl
xor
cld
xor
lock
mov
and
inc
in
ds
push
test
sti
and
das
xchg
adc
sub
or
cld
sub
push
sbb
pop
cmp
call
stos
movsl
adc
push
mov
repz
fs
push
mov
or
pop
test
dec
mov
dec
rcrl
dec
loop
cltd
xchg
fmull
push
movq
stc
jge
and
pushf
cmp
cmp
add
mov
pop
add
inc
sub
ljmp
cmp
pop
add
push
rolb
pop
and
push
sahf
mov
movl
and
rolb
es
outsb
jecxz
mov
mov
fistl
test
or
mov
mov
out
subl
aad
sub
leave
push
or
mov
cmp
ss
pushf
push
add
jmp
out
dec
hlt
les
lret
or
push
mov
and
clc
sbb
push
xor
dec
out
mov
sbb
or
jo
inc
orb
sub
nop
ss
adc
insb
inc
and
in
clc
sbb
jl
cmp
nop
stc
sahf
xchg
sarl
adc
dec
roll
aam
pop
inc
pop
shr
mov
pop
mov
push
cmc
imul
or
out
mov
mov
cld
mov
movsb
push
test
xor
sub
mov
pop
xchg
aam
jo
xor
and
push
push
adc
or
enter
pop
inc
push
and
out
shr
out
test
ja
rcr
xor
dec
mov
inc
mov
sbb
fdivrs
bound
lahf
outsb
add
popf
mov
adc
push
dec
sbb
pop
je
lods
into
mov
je
push
adc
mov
cwtl
sub
mov
and
rorb
pop
mov
add
fcomps
sbb
push
pop
movsb
mov
movsb
sub
sahf
addr16
mov
push
dec
jo
inc
push
and
pusha
or
xchg
lea
mov
je
test
or
cmc
inc
sbb
in
jecxz
push
jo
cmpsb
push
lock
jb
nop
adc
mov
push
icebp
sti
bound
aam
shlb
pop
js
bound
cwtl
or
inc
dec
mov
or
and
jo
adc
insb
lret
mov
shlb
xchg
int
es
cmpsl
call
cld
repz
push
mov
shl
jle
adc
xor
rcrl
pushf
rcrl
mov
inc
test
adc
and
and
cwtl
roll
xrelease
xor
jno
ret
sbb
inc
push
adc
sbb
mov
les
push
enter
adc
bound
lds
insb
adc
ret
adc
xor
or
mov
sbb
inc
adc
bound
cs
sbb
fld
or
repnz
mov
sbb
xor
scas
in
in
and
dec
cs
jl
jmp
adc
mov
fstps
adc
dec
pop
push
add
int
sub
cltd
jp
dec
pop
inc
and
push
call
pop
andb
and
jmp
arpl
jmp
test
jmp
adc
imul
dec
lahf
xor
loop
push
fsubl
or
push
dec
lret
inc
test
or
or
pop
dec
mov
test
or
lods
test
loop
loop
and
loope
jae
inc
cmp
loop
loop
jb
xor
loope
insb
inc
adc
sarl
xor
mov
pop
mov
mov
into
push
sub
jmp
das
push
out
sub
jl
shr
dec
xchg
xchg
or
popf
pop
xor
jnp
dec
pop
int3
sar
sarb
aas
hlt
je
mov
inc
cmp
call
enter
daa
ret
outsb
dec
daa
xor
je
jl
mov
jno
scas
sub
js
rclb
ret
iret
or
xchg
inc
inc
jne
or
dec
das
fisubrs
add
add
inc
js
sbb
lea
add
je
adc
xor
mov
dec
jmp
inc
xor
or
xor
push
adc
push
enter
pusha
sub
jne
outsb
adc
sbb
gs
pop
cmp
inc
push
mov
adc
inc
lret
lock
push
push
mov
das
pop
aaa
jmp
das
dec
xchg
push
test
mov
dec
jnp
sahf
pusha
pusha
xchg
mov
lea
jae
or
fisubl
mov
sbb
outsl
out
inc
xor
das
fisttpl
sub
out
mov
enter
add
sbb
icebp
cmp
popa
inc
mov
sbb
inc
fdivrl
or
mov
ja
xchg
cmp
fisubs
pushf
inc
pop
and
mov
inc
lods
push
es
fsubrl
out
adc
cmpsb
enter
ds
add
xor
cmpsb
sahf
pushf
ds
and
push
faddl
das
mov
mov
es
inc
imul
add
adc
test
add
sub
xchg
movsb
xor
clc
pop
mov
pushl
int
mov
add
leave
dec
cmp
and
sub
xor
sbb
daa
imul
dec
add
mov
inc
adc
sub
test
inc
or
enter
sti
mov
mov
dec
pop
mov
push
je
stos
mov
mov
mov
xor
mov
das
push
dec
jbe
leave
push
ds
inc
sub
popa
insb
sbb
stos
test
aad
and
push
adc
mov
push
shr
xchg
les
cmp
sahf
adc
mov
adc
fldl
inc
fdivp
daa
sub
nop
in
xchg
faddl
dec
xchg
jne
cwtl
xor
fwait
xchg
test
sub
inc
out
adc
push
or
fmul
insb
inc
filds
sbb
sbb
jl
loopne
ret
push
fsubs
or
test
faddl
fmuls
pop
loope
dec
sbb
iret
push
push
loopne
cmp
xchg
inc
xchg
adc
or
sub
adc
cmpsb
ds
pop
je
fnstsw
es
mov
decb
orb
inc
cmp
dec
or
push
inc
hlt
inc
pop
mov
mov
and
inc
push
push
mov
repz
jmp
loop
xchg
out
push
push
inc
mov
mov
pop
and
cmp
mov
xchg
cmpsl
lods
adc
nop
pop
shrb
pop
xchg
sub
inc
mov
rcl
dec
call
int3
mov
or
pop
daa
cmp
jle
adc
addr16
fwait
inc
adc
adc
loope
or
mov
jb
push
mov
pushf
aas
jmp
aas
ret
adc
sub
push
je
sbb
add
xor
dec
enter
sub
push
jge
mov
sub
and
dec
cmp
add
cltd
int3
scas
lret
call
mov
js
sub
sub
roll
jno
push
cmc
adc
lahf
dec
mov
xchg
lods
push
cld
mov
or
and
call
orb
xor
dec
mov
adc
push
lods
test
lahf
push
dec
push
push
imul
mov
std
loop
or
mov
dec
enter
cmpsl
pop
inc
enter
xor
mov
test
xchg
ret
dec
fdivrl
mov
pop
dec
mov
jg
and
sbb
adc
leave
push
pop
mov
in
mov
enter
roll
je
adc
push
jo
adcl
mov
cmp
mov
pop
or
test
pop
cmp
sub
into
pop
stc
repnz
mov
sbb
mov
xor
loop
mov
adc
test
jo
jne
shlb
popf
push
je
test
adc
insb
xchg
inc
lods
sub
iret
cmp
fistpl
mov
fs
add
ss
sub
lods
xor
push
cmp
enter
cwtl
mov
add
sub
pop
mov
and
lods
adc
sbb
mov
inc
push
push
sbb
dec
stos
and
js
dec
ficomps
adc
or
jle
stos
cmp
jge
xchg
iret
jb
push
outsl
mov
shl
in
jge
or
jl
mov
xor
and
pop
or
test
outsl
rcll
aaa
inc
xchg
scas
mov
test
mov
aas
push
aam
mov
clc
lcall
ret
test
xor
cmp
mov
mov
and
mov
push
pushf
insb
movsb
dec
jecxz
les
cmp
mov
mov
push
jp
je
testl
sbb
or
jecxz
lcall
and
xor
xchg
inc
outsl
lea
add
push
jp
push
xor
outsb
xchg
aad
jo
or
mov
mov
pop
add
jb
sub
pusha
insl
out
das
push
pop
or
sub
iret
scas
and
repnz
cli
loop
pop
push
push
sub
mov
jmp
xchg
dec
or
inc
pop
sti
fldenv
and
je
or
sub
mov
pop
push
arpl
push
imulb
adc
pusha
inc
add
into
push
loopne
in
lods
jne
or
and
jmp
ljmp
sbb
xor
aas
or
cmp
mulb
sbb
adc
loop
adc
das
loopne
in
jnp
xchg
xchg
xchg
pop
jl
fstl
out
aaa
lret
insb
adc
stos
cmp
loop
sbb
sub
in
insb
loopne
test
jl
cli
mov
loopne
xchg
loope
in
fiaddl
add
es
inc
int3
movsb
or
pop
push
lcall
aam
cs
jge
mov
aaa
popf
xor
int3
mov
inc
shlb
mov
test
adc
jecxz
test
jbe
pop
in
pop
rclb
mov
dec
jae
xchg
les
xchg
mov
push
cmp
or
xor
ds
call
xchg
call
pop
aaa
xchg
test
xor
test
nop
push
out
mov
mov
rcll
xor
movsb
sbb
aaa
int3
stos
jno
rcrl
inc
adc
fsubl
gs
xchg
ror
and
and
or
aaa
lds
dec
mov
js
call
jmp
loopne
push
pop
xchg
dec
hlt
sbb
sbb
mov
inc
fcomps
xchg
hlt
or
int3
xchg
rorl
lock
shrb
stos
or
add
mov
sti
cmp
pop
dec
xchg
and
inc
lods
sub
push
xchg
aam
mov
mov
adc
lret
fstpl
test
call
adc
sub
adc
sub
sub
mov
mov
and
or
mov
cmp
test
adc
dec
fwait
cmp
mov
loope
add
clc
or
imul
mov
negl
fldt
push
hlt
adc
imul
push
sbb
adc
lret
hlt
pop
add
idivb
cmpsl
jae
or
lock
lea
add
inc
push
dec
xor
cwtl
inc
sbb
cwtl
mov
xchg
adc
cmp
mov
xor
pop
mov
mov
sbb
cmc
and
test
scas
sub
mov
sti
test
push
mov
mov
add
pop
push
xchg
test
mov
cmp
or
add
nop
in
or
add
sbb
ficomps
lds
js
jb
shrb
add
cmpb
jmp
and
mov
gs
xor
mov
test
out
sbb
sbb
dec
call
add
and
adc
adc
lock
inc
inc
test
sbb
int
call
inc
sub
mov
sub
jns
bound
xchg
jmp
inc
notb
adc
movsb
jns
or
mov
insb
mov
mov
push
mov
dec
scas
xor
inc
adc
dec
insl
jp
sub
pop
les
outsl
ret
mov
popa
test
mov
test
dec
pop
and
inc
mov
mov
call
sub
push
inc
sbb
jecxz
cmp
pop
ret
mov
inc
adc
ja
pop
and
gs
decl
test
fs
pop
rorb
inc
cld
add
mov
push
std
inc
add
xor
dec
xor
sbb
cmp
scas
or
add
jl
lret
gs
addr16
add
inc
mov
loop
dec
in
test
rcrl
jne
push
shll
test
jmp
mov
dec
push
mov
pop
jmp
push
pop
loop
movsb
sti
cwtl
popf
test
add
xor
div
setl
or
arpl
or
mov
mov
adc
push
lcall
xchg
jmp
dec
cmpsl
jmp
jg
lea
jo
mov
pushl
pusha
jns
push
pusha
push
xor
inc
testb
jle
xor
push
addr16
cmp
daa
add
mov
adc
pop
ret
insl
mov
mov
lock
lock
push
xor
in
jno
xor
lret
push
mov
imul
mov
pop
and
jle
outsl
incl
add
cmpb
jl
ja
jnp
pop
inc
cmp
jl
fisubs
or
ret
aad
outsb
arpl
mov
sub
test
push
inc
lea
xor
add
cmpps
inc
jne
shr
add
add
cmp
jl
repz
popa
adc
jnp
mov
inc
or
push
lret
inc
fdivs
mov
or
and
inc
test
xor
xchg
mov
clc
or
jle
int
xor
loope
adc
shrb
arpl
and
xchg
cmp
and
and
mov
mov
or
push
dec
andl
add
mov
adc
jo
push
enter
add
cwtl
mov
arpl
daa
orb
pop
mov
sbb
jne
mov
push
add
enter
and
and
lods
adc
popl
int
sbb
jp
push
das
xchg
or
aaa
xchg
lcall
and
pop
es
fs
xor
xor
fidivrl
and
sbb
adcb
push
xchg
in
mov
cs
sub
push
in
movsb
ss
push
daa
scas
sub
add
jle
push
pop
jbe
test
and
inc
adc
pop
cmc
les
jnp
test
and
shrb
leave
test
adc
dec
inc
call
pop
jg
add
or
mov
js
cmp
mov
add
xor
std
lahf
cmpsl
lea
nop
mov
idivb
ljmp
push
shll
pop
ret
rorl
mov
and
add
pop
rclb
mov
test
scas
pop
or
push
int3
xchg
and
inc
or
rorl
xchg
repnz
shlb
daa
ds
jnp
cs
clc
and
push
lea
inc
aaa
adc
inc
add
popf
test
adc
je
sub
push
mov
inc
hlt
lea
xchg
cmp
jge
lock
cwtl
cli
xorl
adc
adc
and
div
inc
repnz
pop
and
test
dec
adc
fsts
adc
cmp
repz
ret
xlat
out
les
and
xchg
sti
stos
shll
nop
out
mov
xor
xorl
xchg
call
ja
cmp
or
inc
push
xor
add
out
stc
add
and
lods
shlb
sub
mov
stos
arpl
rorb
mov
pop
and
pop
sbbl
outsb
mov
aam
and
jge
adc
addb
or
pop
and
nop
popa
pop
add
inc
or
xor
jmp
jle
shr
cmp
or
mov
adc
push
or
subl
xchg
inc
popf
loopne
jmp
adc
push
mov
or
adcb
leave
jbe
mov
cmp
ret
fwait
or
jne
inc
ds
cmp
cmp
adc
ja
push
xor
jp
mov
fsts
xor
mov
mov
jmp
jnp
out
std
jns
and
or
sti
fisubl
jb
addb
aaa
push
pusha
test
adc
mov
xor
mov
sub
xchg
test
push
add
addl
jge
cmp
out
jmp
and
xchg
icebp
pusha
cmpsl
inc
lahf
xchg
mov
sub
mov
iret
mov
es
cmp
cmpsb
hlt
or
inc
clc
fs
dec
andb
cltd
and
adc
mov
mov
das
rep
add
movl
lcall
adc
insb
popf
les
mov
cli
popf
jnp
lahf
push
ss
movsb
adc
or
es
fists
inc
jne
mov
add
adc
iret
jp
adc
jp
cwtl
jo
and
test
rcrl
add
dec
sbb
push
push
or
adc
xor
inc
in
cmp
jle
xlat
rorl
mov
mov
cmp
je
cmc
pop
ja
aam
and
xchg
hlt
adc
call
pop
and
addl
aaa
test
lea
sub
adc
lds
pop
mov
out
movsl
lret
leave
call
mov
dec
out
push
mov
cwtl
or
mov
stos
or
jne
test
jle
cmp
arpl
popa
jae
dec
dec
xor
cld
movsb
dec
inc
inc
hlt
inc
sbb
lcall
mov
cmp
shlb
shll
es
and
xor
jne
int
dec
and
and
lods
xor
xchg
pusha
cmp
ret
or
xor
jmp
inc
jle
sbb
movsb
loopne
xchg
rorb
sbb
inc
jnp
xchg
push
inc
in
fcompl
mov
fwait
or
jge
or
repnz
adc
cmpsb
mov
or
push
dec
jg
mov
nop
xchg
mov
push
mov
pop
mov
orl
pop
ja
jbe
sub
jle
jle
push
dec
cmp
lods
or
mov
or
adc
lret
push
pop
test
xor
or
mov
lods
adc
or
pop
call
bound
jmp
inc
out
sub
or
sbb
or
fcoms
sar
or
cmp
lret
call
aaa
push
adc
sub
or
jge
clc
pop
cmpb
inc
mov
or
or
sbb
cmp
cmp
mov
sbb
out
dec
incl
cmp
jge
cmp
je
ja
ds
mov
cmpl
fdivrs
adc
outsb
or
jl
cmp
inc
jecxz
incl
andl
addb
dec
clc
sub
mov
sub
aaa
stc
jl
fld
push
inc
jmp
inc
and
ljmp
push
sbb
das
je
add
mov
mov
adc
pop
nop
and
loopne
loop
ljmp
pop
mov
cmp
sbb
xchg
dec
cltd
outsl
sbb
sbb
ss
xchg
pop
cmp
je
inc
mov
adc
sub
mov
icebp
adc
adc
or
and
ss
push
outsb
or
fsubrl
push
lret
pop
jle
lret
and
push
mov
mov
push
mov
add
fsub
adc
and
cld
and
or
adc
xor
pop
sbb
sbb
or
mov
pop
xor
xchg
repz
push
cltd
inc
mov
test
sub
push
sbb
push
sbb
and
cwtl
xchg
insb
mov
iret
es
jo
jo
inc
lret
insb
or
lea
call
mov
and
push
pushf
andl
imul
pop
insb
mov
rol
repnz
push
mov
and
jnp
push
sub
xchg
push
int3
cmp
clc
inc
adc
call
cmp
or
inc
inc
inc
mov
mov
pop
lock
inc
mov
adc
xchg
inc
and
mov
inc
mov
or
or
enter
lahf
add
and
cmp
dec
inc
push
inc
and
pop
loop
add
cs
or
rcl
adc
test
mov
jo
dec
jno
int
hlt
xchg
clc
push
cmp
jns
scas
rolb
mov
mov
leave
in
mov
mov
das
jnp
and
xor
push
or
xchg
aam
bound
cltd
enter
das
push
movsb
adc
js
cmp
stos
jo
jno
xchg
push
mov
fsts
inc
mov
and
sbb
add
pop
cmpb
pop
and
push
and
xor
push
icebp
or
mov
adc
and
rcrb
nop
push
mov
xchg
sbb
test
call
mov
or
stos
mov
mov
cmp
add
add
inc
mov
inc
add
cmp
test
out
int3
dec
cld
movsl
mov
repnz
jl
dec
and
movsb
push
loope
xchg
popf
lods
jne
adc
stc
rorl
cmp
shrb
fdivr
cmp
jle
mov
call
push
stc
lods
mov
add
dec
mov
mov
and
pop
xchg
adc
enter
dec
pop
xor
repz
push
loope
xchg
or
fwait
sub
add
mov
inc
push
and
mov
loopne
mov
cwtl
insb
add
inc
cmpsl
das
mov
mov
push
gs
mov
push
mov
add
jns
push
mov
mov
negb
mov
mov
dec
or
and
jle
dec
call
subl
adc
testl
addl
and
add
xchg
mov
jmp
les
aaa
xchg
inc
jbe
ljmp
or
in
punpckldq
sbb
pop
decb
xor
je
mov
jg
mov
sbb
sbb
mov
andb
adc
push
mov
dec
daa
jp
xor
adc
mov
inc
aas
cmp
inc
xchg
and
sbb
inc
movsb
and
adc
cmp
push
insl
sub
sti
adc
sbb
std
or
loop
sub
and
and
push
and
add
adc
into
dec
aas
push
adc
inc
les
cmp
mov
call
push
fcoms
imul
push
adc
cltd
je
jae
add
pop
rcl
aaa
jae
cld
inc
mov
fldcw
adc
aam
inc
sbb
enter
push
in
sbb
mov
fadds
int
sbb
inc
cmp
add
inc
mov
mov
and
out
inc
repnz
mov
cmc
adc
ljmp
inc
cmp
and
test
add
stos
hlt
sbb
inc
inc
push
mov
inc
call
in
add
xchg
out
andb
mov
lret
aas
sbb
mov
dec
push
and
sbb
adc
enter
call
or
inc
sbb
sub
add
icebp
mov
dec
inc
push
or
ss
push
cmp
je
fs
shll
outsb
fcomps
es
adc
cmp
int
lea
ds
xor
cli
xchg
nop
in
or
cmp
pop
and
or
test
arpl
push
pop
push
aaa
push
sahf
dec
adc
inc
loop
imul
cld
add
call
call
mov
sbb
or
adc
sub
xchg
lahf
lds
push
call
jbe
sbb
sbb
sbb
xchg
add
and
aaa
test
jns
testb
jmp
dec
hlt
dec
or
push
cmp
add
xchg
sarl
mov
add
inc
push
push
pop
xor
xor
add
xchg
fdivr
ret
mov
dec
adc
or
pop
roll
push
jl
sbb
sub
pop
jnp
adc
inc
rclb
loopne
push
icebp
lret
cwtl
mov
mov
insl
js
xchg
sbb
fcomps
sti
setg
popf
add
nop
mov
xchg
dec
inc
xchg
sub
fmuls
gs
shrb
out
loopne
call
mov
out
dec
stc
call
inc
in
or
mov
dec
inc
cmp
call
clc
or
and
cmpsl
pop
lods
mov
and
mov
int
dec
test
loopne
or
test
pop
jle
pushf
pop
int3
lret
xor
enter
and
rcll
jmp
and
push
xor
inc
bound
lret
ss
cld
sbb
and
sarb
out
dec
rcll
mov
xchg
adc
outsl
xchg
push
xor
dec
subl
or
adc
mov
sub
stos
mov
int3
xchg
or
adc
cmp
push
lock
mov
inc
in
cmp
rorl
jae
shll
inc
sub
adc
jge
push
ja
pop
cs
adc
sub
shll
push
cltd
mov
clc
adc
push
inc
and
push
or
loop
lds
nop
mov
jl
aam
orb
gs
fmuls
mov
ficomps
subl
push
inc
cmp
mov
rcll
lock
jl
pop
lea
xchg
pusha
mov
mov
push
cmp
and
stos
sub
push
mov
inc
sbb
repnz
adc
ss
cltd
jne
mov
fs
xchg
push
dec
mov
pusha
loopne
jnp
mov
pushf
jnp
je
pop
cmpsl
mov
mov
sub
sub
cmp
insb
xlat
fst
call
inc
and
jmp
test
repz
mov
cmp
clc
es
loopne
inc
fldenv
and
adc
outsl
mov
push
or
mov
hlt
std
sub
sub
or
test
imul
sti
ss
stc
push
cmp
stos
addb
fs
cld
imul
push
call
pop
sub
add
stc
mov
or
pop
lcall
das
mov
addr16
fs
dec
pop
in
and
inc
in
cld
or
call
out
fisubrl
push
sbbb
dec
push
aas
or
adc
mov
xchg
jecxz
loope
bound
fs
mov
xor
dec
mov
add
sbb
jno
push
dec
daa
mov
pop
mov
pop
aad
fstl
aam
xor
mov
insl
pushf
and
pop
scas
repz
mov
or
mov
movsl
pop
push
xor
hlt
push
jae
in
inc
adc
ljmp
mov
jl
daa
inc
or
pop
leave
sbb
and
push
or
cld
cwtl
jbe
push
call
jmp
pop
clc
dec
jo
loopne
lods
aam
and
inc
cwtl
mov
mov
sub
jbe
rolb
mov
push
mov
in
mov
push
cltd
mov
mov
orl
call
inc
or
inc
fcomps
mov
cmp
fcmove
lea
in
push
cmp
or
cmp
or
nop
stos
les
pop
push
flds
ja
jmp
xchg
jne
stc
dec
out
dec
mov
inc
dec
pop
dec
sub
test
cmp
inc
adc
enter
push
dec
push
pop
sbb
hlt
icebp
je
movsl
jae
out
mov
movsb
mov
stos
pop
je
xor
dec
and
mov
addl
sbb
loopne
push
inc
mov
inc
inc
mov
xchg
cs
ljmp
add
aam
repz
adc
es
movl
mov
fs
and
aaa
adc
push
xchg
mov
xor
jbe
and
cmp
mov
push
cld
inc
adc
mov
hlt
jo
push
xor
push
cld
scas
leave
mov
mov
sti
mov
test
push
lahf
cwtl
dec
push
sub
inc
sub
jmp
xor
mov
inc
aam
test
cmc
adc
rorb
and
bound
cmp
pop
clc
jl
or
clc
les
cmp
arpl
fdivs
adc
mov
enter
push
dec
or
push
test
jnp
es
jmp
mov
bound
aaa
pusha
or
and
push
pop
popf
push
push
icebp
rcrl
cld
dec
clc
inc
or
out
push
inc
inc
add
inc
lahf
movsb
int
inc
cmp
and
mov
sbb
test
push
adc
jns
sbb
push
daa
mov
adc
mov
je
jb
out
or
mov
or
sbb
dec
push
adc
cmp
or
sub
lock
jge
adcl
fcomps
outsl
test
addr16
cld
std
inc
pop
push
push
or
jnp
xor
jo
stos
mov
mov
mov
es
ds
rcl
or
inc
cmp
jg
setge
dec
out
scas
into
add
ja
sub
shrb
sub
pop
push
enter
int
int
fdivl
pusha
mov
mov
pushl
jg
test
ss
jecxz
push
test
and
sbb
sbb
cmp
test
pop
push
cld
mov
push
leave
push
adc
pusha
inc
add
push
call
sub
lahf
and
mov
out
xchg
push
cmp
or
mov
mov
clc
push
dec
test
sbb
stos
ds
stos
call
leave
and
leave
or
aad
jg
jno
xor
xchg
clc
mov
jge
jno
loop
or
das
mov
fs
dec
sbb
dec
sbb
mov
pop
popa
popa
call
or
aad
test
or
imul
ret
imul
test
mov
cmp
pop
mov
cmp
xor
dec
aad
addl
dec
icebp
xchg
shr
inc
movsb
adc
adc
and
mov
rorb
cld
test
inc
mulb
push
cmpl
add
ss
adc
aas
xadd
arpl
inc
jp
mov
lods
pushf
push
or
jae
imul
pop
xor
or
and
sub
fs
test
loop
push
lods
sub
sub
or
inc
pop
cmpsb
bound
push
jae
jle
lahf
fstps
lods
mov
or
in
movsb
push
sub
cld
inc
inc
inc
add
or
push
sub
mov
push
aad
xor
pop
mov
sub
or
call
pushf
dec
xor
or
out
xchg
inc
mov
xchg
fs
jmp
arpl
pop
push
ja
mov
push
or
push
nop
fnstenv
sahf
and
loop
cld
dec
js
pop
movsb
pop
push
pmullw
inc
adc
push
or
fadd
xchg
add
imul
xchg
xor
and
sti
test
sub
cli
xchg
fisttpll
es
aaa
in
cmp
push
sti
pop
bound
push
int3
test
addr16
fucomi
inc
inc
jl
push
pop
test
mov
sbb
sub
lods
push
inc
mov
sbb
sti
xor
xor
push
mov
cmp
sbb
test
dec
sbb
jnp
push
pop
sub
loop
mov
jae
sub
mov
add
push
adc
lret
jns
inc
adc
push
clc
xrelease
test
lock
std
mov
adc
add
mov
adc
pop
cmpsb
sbb
or
inc
fbstp
out
idivl
lret
add
sbb
dec
adc
je
out
cltd
add
lcall
lea
ljmp
dec
xor
sub
sbb
push
ljmp
pop
js
jae
mov
in
jp
dec
loop
pop
jne
scas
adcb
push
sub
js
das
push
or
mov
inc
fdivl
push
mov
adc
cmc
pop
xchg
push
pop
cmp
popa
dec
andb
push
add
ret
mov
push
aad
inc
aas
aaa
test
es
lret
xor
jmp
jge
pop
sahf
nop
mov
es
xor
fsubl
or
sbb
je
cmpsl
and
jne
adc
in
js
pop
mov
out
mov
push
inc
dec
push
sub
push
push
dec
ficompl
cmpl
adc
mov
cltd
xor
xor
xchg
adc
sub
fldl
loopne
das
pop
arpl
insl
xor
or
in
mov
sbb
adc
xchg
xor
and
cmp
cmc
pop
cmpsb
cmp
mov
mov
inc
sub
pop
sub
pop
inc
repz
xor
loopne
enter
dec
fcoml
xchg
cmc
inc
add
call
lahf
adc
ret
jle
jbe
xchg
xor
jb
push
pop
xor
adc
add
fisttps
repz
out
mov
filds
sbb
orl
aaa
jne
jbe
jg
mov
lea
shr
rcl
popa
lret
loope
in
pop
pop
mov
jae
push
xadd
add
add
icebp
push
add
lidtl
repnz
add
inc
icebp
cs
in
repnz
xchg
xor
add
xor
sarb
push
out
jbe
push
add
add
inc
int3
mov
push
mov
mov
inc
cmp
mov
lcall
mov
add
repnz
in
adc
or
cmp
mov
repnz
in
add
xchg
and
pop
mov
dec
or
push
jno
and
xchg
and
hlt
mov
sysret
mov
jns
jg
test
repz
mov
push
mov
in
nop
popa
data16
loope
pop
imul
push
or
es
imul
int
push
push
in
inc
or
and
xor
lret
jge
sub
je
dec
add
push
xor
cmp
jl
incl
lods
mov
test
add
andb
pop
cli
push
movsb
add
lea
sbb
stos
jb
pop
stos
push
inc
and
xchg
inc
in
pop
mov
movzwl
mov
push
test
decb
dec
pop
adc
sbb
fs
out
mov
sub
or
xor
xchg
leave
cmc
push
cmpsl
aas
inc
push
testl
add
jo
mov
test
pop
ds
scas
mov
mov
loopne
scas
mov
in
mov
push
mov
mov
mov
es
mov
mov
call
push
dec
clc
pushf
and
mov
subl
out
int
sbb
sbb
adc
cli
mov
test
mov
cli
cmpsb
jmp
call
push
hlt
pop
xor
jl
ds
adc
xchg
jno
sbbb
push
mov
ss
loop
inc
lock
dec
pop
mov
dec
adc
push
adc
call
stos
and
sbb
cli
and
xor
pop
into
inc
enter
sub
xor
imul
daa
dec
lret
scas
inc
lods
push
xor
mov
out
or
lods
sbb
xchg
scas
rol
ficoml
adc
inc
xlat
adcl
or
xor
jle
xchg
adc
loopne
sbb
mov
push
jl
adc
mov
ret
test
sub
int
clc
add
add
mov
inc
add
aam
mov
or
jae
jp
push
xchg
fs
addl
add
sbb
hlt
inc
adc
xchg
ss
inc
xor
fnstsw
or
inc
inc
sbb
lahf
inc
sti
jp
lret
call
adc
add
xor
iret
sub
jg
sub
push
sub
or
xor
cmp
leave
out
fstl
jmp
xor
jg
sub
push
pop
add
pop
pusha
dec
push
add
inc
xchg
mov
int3
je
nop
mov
sbb
lods
adc
imul
xchg
push
inc
jle
mov
jbe
push
sbb
decb
sub
jge
xor
pop
xchg
rcrb
push
clc
or
sub
ret
pop
ret
adc
cmc
std
jg
mov
add
aas
mov
popf
push
bound
add
push
stos
enter
call
leave
aaa
xchg
insb
and
add
inc
inc
icebp
call
movb
adc
rcll
cld
sbb
aaa
notb
pusha
sub
sbb
cmp
jne
push
adc
dec
dec
push
adc
mov
sbb
mov
mov
lock
pop
out
in
inc
pop
mov
mov
pop
pop
les
pop
ja
jmp
sbb
cmp
dec
sbb
and
ret
dec
mov
lods
xchg
adc
popa
ljmp
cmp
jae
add
mov
scas
mov
fstps
inc
cltd
stc
sbb
mov
data16
or
lcall
test
in
test
leave
push
xchg
jo
lea
imul
lods
stc
cmp
cmp
lahf
mov
xor
inc
in
movb
jae
aad
mov
pop
into
cli
ja
sbb
fsubrs
repz
movsl
jae
jns
fiadds
xor
icebp
pushf
and
mov
lret
decl
aas
ja
pop
pop
out
and
sub
mov
and
hlt
push
adc
xchg
icebp
mov
aaa
jne
or
call
les
sahf
or
lea
test
and
icebp
sub
in
push
call
ret
or
out
mov
in
in
jle
sbb
xchg
movsl
sbb
test
pop
cld
es
into
mov
mov
cmpsb
ss
inc
and
push
fucomip
and
and
sti
loop
push
lods
cmc
adc
mov
es
sahf
ljmp
testb
push
mov
rcr
incl
dec
add
subps
movsb
jle
stos
jp
faddl
mov
xchg
or
add
pop
sub
insb
mov
sbb
testb
in
dec
push
mov
or
push
mov
rolb
pop
xchg
fldenv
pop
pop
rclb
mov
push
jge
push
dec
enter
add
or
mov
scas
enter
nop
popa
push
push
lods
ret
add
frstor
mov
call
xchg
lock
xlat
movsb
mov
sbbb
mov
rcll
inc
dec
and
loopne
scas
cmp
hlt
ja
loopne
mov
push
lcall
push
test
mul
bound
sub
test
int
add
cmp
mov
sub
hlt
dec
adc
push
ds
sub
test
mov
ret
xor
ss
pop
lea
add
pop
inc
pop
mov
test
dec
mov
popa
mov
push
loop
cmp
mov
or
xor
pop
into
jecxz
div
add
push
sub
mov
mov
int3
ret
loope
or
push
push
imul
inc
and
add
add
sub
sbb
outsb
and
cmp
sbb
loope
pop
mov
dec
cld
pop
test
push
and
je
sub
dec
fldcw
test
out
imul
insb
pusha
dec
movsl
sti
mov
xor
enter
push
dec
sbb
popl
sub
nop
lods
and
mov
mov
sti
test
bound
pop
pop
cmp
mov
add
sub
leave
sub
and
dec
inc
mov
je
mov
data16
or
mov
aam
push
das
add
and
sarb
pop
dec
pop
cld
or
or
je
call
inc
sub
ret
inc
xor
test
lahf
scas
jmp
aaa
idivl
and
aas
dec
push
sbb
pushf
and
test
fs
in
or
adc
sub
lea
sti
jb
shrb
in
subl
cmpsb
adc
std
xchg
push
mov
inc
push
movsb
inc
and
adc
nop
sbb
rolb
jp
imul
push
dec
push
or
sub
aam
dec
or
mov
mov
and
sub
hlt
jns
das
hlt
jle
cmp
inc
jo
jecxz
nop
jg
je
push
cmp
or
jbe
pop
lahf
ret
aam
mov
std
sbb
rcll
mov
test
inc
test
pop
cmp
mov
rcrb
mov
scas
cwtl
dec
add
jp
push
call
jb
mov
mov
je
ret
divb
dec
cmp
test
inc
cmp
je
mov
xor
ss
hlt
dec
sub
push
popf
adc
jecxz
jp
or
imul
xchg
shrl
bound
push
xor
pushf
sbb
xchg
push
push
push
and
xor
mov
sub
sbb
pushf
lcall
fcomps
adc
jb
js
jmp
movsl
dec
sbb
mov
adc
aad
cmp
faddp
pop
cwtl
cmp
je
adc
mov
mov
leave
push
pop
adc
pop
mov
or
movsl
insb
out
inc
push
icebp
add
mov
stos
dec
xor
pop
and
hlt
into
push
push
or
pop
xor
push
shll
and
push
es
test
xor
inc
mov
cmpb
and
push
xor
popf
push
adc
sbb
mov
lock
push
movsl
mov
popf
xchg
xor
fcom
lods
std
inc
lahf
push
jmp
lods
inc
mov
mov
and
out
lods
mov
fwait
gs
in
sbb
pop
lock
inc
dec
xchg
stc
outsl
adc
dec
push
or
or
push
cmp
add
push
test
and
or
cmp
das
adc
or
or
cwtl
movsb
mov
inc
scas
fdivrl
dec
push
in
mov
sbb
mov
in
push
add
imulb
cli
adc
push
jmp
out
mov
dec
out
into
js
jne
call
out
test
imull
jne
and
mov
adcb
nop
sub
push
popa
dec
lods
iret
add
adc
push
test
mov
js
push
addr16
mov
and
mov
je
xchg
xchg
inc
lock
sub
inc
push
mov
cmp
pop
xor
cwtl
outsb
push
call
pop
xchg
sbb
cltd
ret
mov
jg
jge
sub
inc
and
mov
inc
jge
sub
push
lods
xchg
inc
push
les
insl
int
imul
adc
les
inc
pushf
fnstenv
push
out
push
jmp
fisubrs
adc
cwtl
cmpsb
jl
loope
int3
add
andb
loope
sahf
test
daa
insb
or
xchg
jnp
daa
mov
jb
imul
or
pop
and
les
rcll
mov
inc
sub
jle
sbb
pop
inc
adc
out
fsts
fwait
enter
lods
add
adc
push
push
dec
and
mov
jo
push
pop
add
or
enter
add
nop
cmc
dec
cs
in
psrld
outsl
aam
push
fsubrl
mov
mov
fld
sub
adc
dec
push
mov
xchg
pop
push
push
mov
adc
push
stos
dec
dec
aam
ficoms
jbe
lret
dec
fdivl
fisubs
icebp
and
adc
mov
sbb
inc
mov
insb
dec
imul
pusha
xor
mov
jmp
and
hlt
sub
sbb
push
fcomps
inc
lea
sti
test
sbb
push
jle
jecxz
cmp
cmp
sbb
push
repz
mov
pop
pusha
inc
std
outsb
sbb
pop
or
dec
lock
stos
imul
inc
fidivl
inc
scas
lock
les
push
imul
add
leave
cmp
pushf
jbe
lea
scas
jle
add
add
cmp
inc
push
jb
dec
or
push
cmpl
test
sub
test
add
inc
jne
mov
adc
movsb
call
jmp
mov
lods
movsb
sub
cld
add
sbb
loop
xor
cmp
insl
cmp
rolb
jb
jmp
popa
dec
push
jae
lea
mov
adc
xor
aaa
jb
stos
mov
roll
fisubrs
dec
mov
and
les
adc
dec
adc
les
sbb
sbb
or
cmp
jmp
into
mov
mov
dec
adc
pop
inc
popa
cmp
inc
xchg
fmul
push
mov
adc
and
sbb
movsb
xor
adc
push
sub
xchg
mov
ret
movsl
pop
adc
test
mov
out
idivl
inc
lock
mull
adc
mov
fdivrs
mov
or
sbb
dec
sbb
xor
shrl
movsl
dec
adc
push
sub
mov
cmp
mov
cmp
loope
dec
add
jmp
dec
inc
pop
xchg
cmp
cmp
in
inc
add
out
mov
insb
sti
dec
fadds
mov
ret
loope
repz
cmp
ficoml
icebp
dec
pop
xor
rolb
xor
das
pusha
jns
push
dec
lock
popa
daa
sbb
es
jp
or
push
out
lcall
mov
loope
daa
sbb
rolb
pop
pop
sub
repz
xor
push
inc
mov
inc
adc
andb
nop
hlt
lret
xchg
or
mov
and
sbb
sbb
cmp
sub
and
roll
adc
jae
push
pop
mov
mov
mov
dec
je
inc
push
pop
jmp
ret
push
adc
mov
cmc
mov
mov
inc
xor
jle
inc
cmp
mov
xlat
or
mov
mov
cmc
in
es
add
jl
mov
test
adc
or
adc
lods
sbb
sti
jle
inc
pushl
xchg
sbb
into
adc
jbe
loopne
xor
xchg
jns
lret
add
lahf
fcmovnbe
mov
scas
mov
inc
adc
cmpsb
jmp
dec
in
in
test
je
pusha
add
adc
push
mov
dec
mov
cli
xchg
nop
push
adc
and
lret
mov
inc
rclb
fwait
inc
cmp
push
call
movsl
popf
enter
dec
pop
mov
mov
mov
cli
popf
insb
test
xor
mov
nop
fmull
adc
ret
gs
and
loopne
xchg
aam
ret
cmpsl
cmpl
lret
fcoml
data16
repnz
dec
adc
xchg
js
les
and
imul
mov
push
add
push
inc
jl
mov
push
sbb
pop
int
bound
popa
iret
mov
cwtl
test
inc
ret
ficoml
cld
dec
sub
and
test
jcxz
shl
push
xor
dec
inc
mov
dec
leave
shlb
xchg
adc
or
lret
jb
push
or
ret
jae
jo
sbbl
stos
roll
jge
jmpw
cmp
xlat
sub
ljmp
inc
addr16
stc
int3
rcl
stc
mov
jns
jg
rol
and
jnp
sbb
or
jmp
push
out
enter
ror
aaa
popf
jl
xchg
lea
lret
push
dec
lahf
sbb
mov
mov
sbb
mov
jmp
andl
xchg
adc
test
mov
xor
xchg
push
lds
pop
hlt
rolb
and
xor
add
mov
or
les
adc
adc
out
lret
movsl
jge
test
xor
xor
inc
inc
mov
jmp
bts
add
call
cmp
pop
jb
mov
xchg
inc
daa
lock
test
jl
xchg
inc
fidivs
add
test
adc
cmc
and
inc
shll
sbb
repnz
imul
or
andl
icebp
lods
jae
dec
test
push
xor
rorl
ljmp
pop
push
inc
adc
xchg
jmp
mov
test
stc
jmp
adc
adc
popf
loope
jne
push
dec
sbb
sbb
pop
sbb
movhlps
lahf
sbb
fistps
sub
dec
shl
xlat
scas
mov
mov
mov
imul
das
mov
ror
mov
lret
push
call
cmp
pop
call
inc
stos
xor
and
hlt
dec
dec
fiaddl
push
out
call
mov
cwtl
call
push
nop
inc
out
sti
cmp
leave
sbb
movsb
lcall
loopne
push
sub
or
mov
leave
out
dec
cwtl
mov
sbb
subb
xor
rcr
pusha
or
and
and
lea
cmp
mov
sti
out
sub
mov
push
push
add
jne
push
std
inc
sbb
jmp
scas
push
push
pop
push
and
pop
inc
pop
test
das
in
push
pop
mov
sub
fwait
into
xchg
lock
adc
mov
and
cmp
das
je
xchg
lock
push
pop
pop
pop
mov
daa
stos
out
jno
cmpps
dec
adc
jl
dec
popa
or
adc
jae
fs
cmp
or
cmpb
and
cmc
daa
xor
adcl
dec
mov
repnz
jmp
les
inc
cs
stos
ret
add
movsbl
push
mov
inc
pop
cmp
loopne
push
inc
call
lock
jb
lods
test
rorb
push
out
or
xchg
fisubrl
fst
xor
push
xorb
je
pushf
mov
jmp
adc
sahf
sbb
add
cmp
push
popf
cmp
or
je
cmp
adc
pop
pop
nop
add
adc
xchg
ffree
sub
out
addr16
push
sub
mov
fsubp
pop
push
sarb
xchg
test
jmp
push
cwtl
leave
jmp
lahf
push
add
lret
adcb
sub
xor
jno
fs
mov
test
jb
test
or
orps
mov
movsb
adc
andl
aam
icebp
sub
loop
hlt
dec
or
test
shl
jg
cltd
pop
mov
mov
adc
cld
or
push
clc
call
push
cmp
mov
ret
test
adc
es
pop
shrl
iret
imul
and
mov
push
jecxz
add
call
jge
push
les
adc
mov
pop
mov
imul
test
out
cmp
das
push
cld
xor
cmp
mov
aaa
inc
push
imul
push
call
stc
aad
aam
rolb
add
lods
add
movb
push
cmp
xchg
xor
out
add
out
in
mov
in
push
test
or
sbb
sbb
out
mov
je
shlb
aas
clc
sub
mov
push
xchg
cmpb
xor
dec
or
inc
push
xor
sub
push
in
jecxz
cmp
mov
out
nop
xor
push
call
xchg
mov
add
stos
xchg
enter
push
and
xchg
jo
or
xchg
nop
pop
and
xchg
xor
test
xchg
sbb
and
fs
xlat
in
mov
sbb
xchg
sbb
sub
cmp
jno
cmp
mov
xor
movzwl
and
add
cmp
push
adc
inc
fwait
or
insb
add
cmpl
fdecstp
cmpsb
aam
adc
outsl
add
jo
xchg
cmpsb
adc
insb
push
sbb
sti
in
push
lods
aas
mov
loop
sub
jecxz
insb
or
js
lcall
mov
mov
daa
arpl
or
test
mov
sbb
sub
popl
jge
cmp
adc
jbe
push
mov
push
mov
sub
add
cwtl
add
jmp
sbb
xchg
xchg
jl
mov
pop
xchg
cltd
push
and
ljmp
aaa
push
mul
sub
call
or
rcrb
jg
jno
call
jmp
jmp
adc
fsubl
mov
pop
mov
cmp
sub
test
les
xchg
and
sbb
inc
shr
push
es
lock
and
jle
push
push
and
pop
and
pop
js
loopne
xchg
ret
out
lds
cli
mov
mov
xor
fsubr
shlb
mov
mov
or
xor
push
cmpsb
shrl
movsl
fs
and
xor
cs
xor
scas
and
push
sbb
and
lods
ss
push
and
mov
dec
inc
xchg
push
dec
mov
xor
add
lea
ret
xchg
pop
fadds
xor
add
mov
or
insb
mov
imul
or
jae
mov
jecxz
test
neg
mov
std
test
mov
adc
shl
pmuludq
xor
xchg
aaa
sub
lods
xlat
adc
xchg
pop
and
stos
rcll
cmp
cmp
das
push
or
mov
ljmp
enter
push
inc
dec
lods
cmc
push
cwtl
pop
fdivrs
fstpt
cltd
adc
cmp
or
cld
sbb
xor
in
movsl
push
cmp
push
xlat
xchg
rorb
cltd
pop
sbb
lock
adc
addb
push
or
sbb
in
mov
pop
sub
cmpsb
mov
push
pop
push
imul
push
shlb
aas
movsb
pop
cmp
push
and
das
or
push
adc
pop
sbb
das
lods
push
xchg
repnz
sti
inc
cmp
js
pop
xchg
pop
or
add
adc
mov
sub
in
push
xchg
push
adc
xor
inc
call
and
xor
push
je
les
xchg
xchg
pushf
add
mov
shlb
rorl
mov
push
mov
and
and
imul
cwtl
sbb
dec
mov
push
pop
mov
shl
inc
je
lcall
or
decl
clc
mov
push
cmpsl
lods
jno
andl
push
aad
push
or
je
xor
pop
xlat
lret
test
arpl
hlt
push
cmp
jmp
push
daa
xchg
xchg
mov
adc
or
xchg
iret
dec
mov
cmp
cmp
add
jl
xchg
mov
inc
adc
movl
add
out
fcoms
cmp
push
add
xor
mov
inc
les
ret
test
xor
ret
or
cmp
cmp
call
lods
hlt
inc
iret
jmp
push
jno
dec
adc
mov
jmp
enter
call
rorb
shlb
pop
mov
mov
push
adc
add
imul
les
and
jb
xchg
push
lods
and
inc
sub
test
les
cmp
cmp
ficomps
jns
or
add
or
push
dec
inc
popfw
imul
lahf
out
adc
or
xor
dec
push
nop
int3
mov
dec
rorb
mov
push
push
add
popf
xlat
icebp
insb
cmpsl
dec
inc
jno
jb
push
and
and
adc
outsl
stc
lahf
mov
stc
mov
lods
imul
gs
lret
lock
mov
int
xlat
dec
push
out
dec
repnz
inc
lock
xor
int3
xlat
or
in
mov
adc
test
dec
pop
xchg
and
mov
xchg
and
rorb
mov
pop
pop
push
mov
push
xchg
fs
jbe
int3
push
mov
dec
shlb
mov
jne
and
adc
sub
push
or
adc
lods
ss
xor
pop
and
jmp
sub
test
xorb
out
cld
call
jp
repnz
sub
and
iret
jl
fsubs
adc
fisttpll
inc
repz
movsb
mov
mov
aas
or
pop
sbb
fs
sub
mov
adc
call
inc
aam
stc
pop
fs
sub
stos
dec
add
adc
xor
dec
mov
bound
lea
xor
pop
leave
popf
or
testl
mov
push
adc
outsb
mov
ret
inc
and
outsl
xchg
les
nop
sub
call
das
or
cmc
add
inc
adc
ja
cmp
daa
fcoml
dec
inc
or
or
cmp
les
dec
ja
stos
dec
xchg
icebp
adc
hlt
pop
mov
jg
adc
inc
aad
sbb
xor
sub
push
push
ss
cmp
dec
jg
jno
sahf
push
xchg
xchg
push
call
or
push
jg
xor
xchg
adc
xchg
adc
aas
or
mov
dec
rol
add
mov
adc
lds
xor
push
xchg
inc
adc
mov
push
dec
daa
adc
test
push
push
push
or
in
xor
push
mov
inc
orb
cmc
and
add
test
popa
push
movsl
jl
aas
into
call
mov
add
fisubrl
add
push
push
ljmp
push
movsb
add
in
std
hlt
ja
pop
mov
pop
cli
out
mov
mov
and
mov
mov
cmp
xchg
ljmp
xchg
pop
enter
sub
adc
xor
sahf
mov
cmp
dec
mov
push
add
rcll
in
loop
and
dec
in
shr
sbb
jae
fs
sub
pop
pop
add
stc
push
add
stos
xchg
adc
lock
subl
lret
dec
lock
dec
lcall
xor
in
movsl
mov
cltd
dec
repz
lds
pushf
enter
xor
in
sti
push
push
pop
rcl
adc
push
or
sub
cmpsl
stc
inc
mov
jbe
pop
lcall
push
lock
adc
mov
enter
mov
cwtl
mov
inc
pop
jno
dec
mov
mov
xchg
cld
out
inc
sbb
push
mov
dec
mov
sub
mov
sub
lods
xor
movsb
jmp
push
stos
push
xchg
dec
pop
test
clc
mov
mov
je
call
cli
popa
lock
roll
sarl
sub
inc
xchg
mov
jl
outsb
push
push
hlt
mov
cmp
jne
sbb
dec
cwtl
mov
or
ljmp
outsl
xlat
adc
xor
adc
jbe
adc
inc
scas
jmp
mov
cltd
adc
in
add
add
xor
push
int3
and
ret
je
jae
outsl
sub
aad
test
dec
test
adcl
push
xlat
and
or
add
imul
xor
or
enter
xchg
push
lret
or
add
dec
or
adcb
cli
xchg
lahf
inc
sub
mov
daa
sbb
dec
add
pop
test
adc
cmp
cwtl
mov
dec
push
push
outsb
bound
push
fdivrs
addr16
jge
pop
cwtl
enter
jle
lds
mov
sahf
jmp
jg
pushf
mov
add
jg
ss
inc
inc
adc
mov
pop
jmp
and
mov
pusha
repz
mov
push
push
cmpl
mov
xor
push
jmp
add
push
std
aad
sub
xor
add
inc
loopne
inc
repnz
cld
mov
adc
adc
push
mov
clc
xchg
int
fldenv
lcall
lods
and
mov
call
into
lods
jbe
mov
inc
sarb
push
fmul
pminub
push
mov
daa
sar
inc
in
dec
test
push
cmp
jl
fdivrp
out
call
sahf
int
jne
js
lahf
jno
movsl
xor
push
ds
clc
or
inc
mov
xor
jecxz
xchg
mov
jmp
inc
mov
dec
int
ret
test
adc
add
aaa
mov
adc
rclb
add
push
jbe
sub
cmp
xchg
push
cli
or
test
inc
mov
rorl
cmpsb
adc
adc
bound
add
cwtl
mov
loopne
insl
je
femms
mov
xor
push
out
jecxz
test
mov
or
push
xor
mov
mov
jle
lock
out
dec
ljmp
mov
jmp
fadd
arpl
sbb
jg
push
lds
jne
stos
dec
iret
rorb
xor
mov
popa
ret
or
pop
adc
and
and
or
push
jmp
push
test
and
mov
or
and
frstor
cs
adc
cmp
jbe
dec
mov
mov
lock
cmpsb
clc
push
dec
or
shlb
jns
jmp
jge
inc
push
iret
dec
add
adc
mov
icebp
mov
jmp
lock
mov
and
inc
adc
sub
pop
cmc
mov
pusha
daa
testb
test
dec
push
mov
mov
out
or
out
sub
xchg
push
in
repnz
popf
ret
or
adc
sub
divl
push
add
lret
mov
bndldx
xor
int
cmp
std
movsl
lcall
sbbl
les
xor
inc
insb
xchg
xchg
movsb
adc
push
push
shll
les
lcall
jne
lea
enter
inc
add
fs
cwtl
jmp
xchg
pop
inc
and
adc
mov
repz
bound
ds
pop
pop
out
mov
mov
add
cmp
aam
and
mov
in
mov
aaa
fisttpl
add
mov
cmc
push
and
jnp
mov
mov
mov
mov
imul
push
lret
pop
dec
bound
nop
pop
icebp
cmpb
in
add
xchg
sbb
jns
loopne
cmp
sub
jmp
pushf
jae
sub
popa
dec
push
adc
inc
inc
call
sti
cltd
and
xorb
adcb
loopne
mov
in
inc
sbb
les
mov
xchg
stc
add
test
outsl
cltd
sub
xor
and
in
jle
jo
pop
mov
das
stos
cmp
ficoms
pop
call
inc
cs
in
int
jnp
xor
inc
nop
jle
fld
mov
dec
cld
pop
nop
cmc
repz
dec
pop
mov
jp
popa
and
nop
pop
mov
push
xchg
adc
ljmp
std
jmp
mov
dec
mov
leave
shl
adc
adc
cmp
je
mov
add
dec
or
and
dec
push
mov
test
lds
sbb
mov
nop
adc
ret
push
xchg
xor
jbe
lds
pop
pusha
adc
pop
insl
shlb
shrb
cld
outsl
mov
xchg
cmc
jne
stos
cmp
je
sbb
push
inc
movsb
repz
sbb
push
leave
and
or
aad
sbb
add
cld
rorb
cs
push
clc
daa
andb
jno
nop
scas
sub
clc
adc
or
inc
or
ret
adc
sbb
je,pt
cmp
ret
cmp
jae
sahf
mov
add
push
mov
das
push
lcall
xchg
mov
mov
out
sub
push
mov
insl
and
in
inc
mov
pop
rol
dec
mov
jns
xchg
push
or
sbb
stc
std
imul
std
dec
mov
mov
shll
fmull
and
cmpsl
mov
and
adc
push
pop
test
bound
sub
jge
xchg
lahf
adc
neg
and
push
imul
stos
test
insb
fcoms
call
lods
inc
jne
pop
jns
xchg
jns
jle
in
js
adc
iret
mov
cmp
mov
cmp
les
mov
mov
mov
and
add
popf
mov
leave
and
adc
lea
je
or
and
lcall
lahf
push
push
movsl
aad
pushw
pop
pop
mov
call
sub
and
mov
dec
dec
cmc
xor
push
loop
sbb
mov
ret
cmp
push
inc
aaa
pop
sub
adc
fs
in
xchg
icebp
xor
mov
adc
xor
or
shll
jmp
inc
dec
adc
rolb
loop,pt
pop
mov
adc
je
mov
addb
and
mov
and
jne
popl
movsl
repz
push
test
outsb
cmp
mov
and
hlt
bound
ss
add
push
aad
dec
shrb
push
imul
orl
pop
add
mov
pop
jne
outsb
xlat
and
xchg
push
mov
cmp
adc
add
xor
aam
pop
rcl
ljmp
movsb
in
mov
or
iret
test
inc
dec
lahf
jno
push
and
rolb
negb
add
pop
mov
test
push
adc
test
testb
push
call
or
jl
inc
sub
mov
aaa
jne
int3
jl
pusha
movsb
decb
sub
push
dec
sbb
icebp
xchg
je
gs
sub
jmp
xor
jge
or
and
xchg
jb
mov
inc
and
fdivr
addr16
or
pop
xchg
shrl
push
mov
and
sub
jl
les
mov
je
or
cmp
je
jne
xchg
test
les
push
insb
adcl
pop
xchg
jmp
pop
data16
jnp
push
cmp
push
fstpt
adc
push
test
pop
adc
aam
daa
push
call
movswl
mov
js
outsl
xchg
flds
test
je
sub
sbb
pop
pop
pusha
cmp
hlt
jne
pusha
adc
dec
test
jg
xchg
push
add
sub
test
mov
mov
adc
mov
jns
imul
fmulp
mov
pop
and
xacquire
arpl
jnp
cmpsl
sbb
cmp
dec
and
adc
inc
push
jmp
xchg
mov
xchg
rolb
cmp
pop
bound
mov
push
js
mov
push
incb
je
or
inc
lar
add
sbb
adc
pop
pop
test
shrb
imul
pusha
jecxz
test
jl
test
ret
sbb
pop
pop
call
mov
mov
mov
lret
jb
js
push
repnz
cmp
adc
cmp
js
cmp
testb
add
mov
dec
sub
es
jg
jae
mov
pop
imul
push
push
add
dec
push
or
lods
inc
xchg
gs
pop
jl
inc
sbb
aam
dec
and
xor
xor
sar
and
sbb
out
enter
lods
jle
ret
and
je
test
cmp
adc
cwtl
orl
push
aam
dec
or
outsb
enter
in
fldenv
adc
xchg
loopne
mov
xchg
dec
das
xor
dec
mov
int
sub
xor
pop
movsb
mov
aaa
push
jne
sbb
push
insl
popf
add
hlt
jne
xchg
insb
je
push
lds
pop
cld
or
test
xchg
adcb
pop
pop
test
sub
cmovge
pop
mov
jmp
and
pusha
rorb
xchg
adc
dec
mov
cmp
xorb
mov
orb
loop
scas
push
fiaddl
inc
sbb
ret
ss
cs
jg
lods
pop
rclb
clc
mov
pop
imul
les
inc
lahf
pop
xchg
push
dec
stc
jl
mov
mov
or
scas
push
mov
jne
iret
pop
ret
mov
cmc
int3
pusha
jne
push
lods
adc
fisubrl
enter
push
mov
mov
adc
lods
sub
xchg
mov
cmp
mov
imul
pop
adc
xchg
push
mov
mov
cli
inc
jl
lods
dec
adc
mov
pop
hlt
icebp
sub
nop
repz
faddp
mov
sbb
ret
nop
fmul
mov
cmpsl
mov
ret
adc
mov
out
push
sub
es
push
push
mov
adc
movsl
adc
xchg
mov
ucomiss
rcrl
shll
rorl
dec
xchg
mov
stos
sbb
cltd
rorl
mov
enter
cmp
pop
les
and
test
and
adc
popf
xchg
lds
and
adc
dec
cld
jnp
aas
mov
add
popf
dec
cld
scas
mov
adc
pop
int
cmp
xchg
pop
adc
sbb
mov
and
out
call
out
inc
mov
mov
mov
lock
stos
lret
test
xchg
mov
dec
inc
mov
adc
mov
jnp
inc
dec
sub
mov
or
jmp
pop
sub
sub
pop
mov
pmuludq
dec
lock
push
pop
xchg
rcll
ret
sbb
in
xchg
dec
ret
and
add
mov
or
push
imul
push
and
rcrb
cmp
jle
pop
scas
sbb
lods
jecxz
stos
outsb
or
clc
je
adc
in
movsb
nop
outsb
std
in
lahf
mov
adc
and
sbb
fsqrt
std
jecxz
xor
sarb
fucomp
and
mov
addr16
and
mov
pushf
inc
sub
aas
mov
je
push
xchg
push
and
or
jbe
add
sbb
jne
mov
andb
or
push
mov
test
pop
jl
pop
test
je
and
mov
xchg
movsb
or
cmpsb
adc
mov
outsb
test
fdivrs
lods
cmp
sbb
adc
mov
mov
pop
pop
inc
subb
xor
movb
push
push
xor
insb
outsl
bound
or
mov
and
jne,pt
inc
and
jmp
dec
inc
sbb
inc
sbb
xchg
mov
cmp
sbb
inc
std
adc
les
cli
sub
std
push
cmp
call
xor
insb
sti
add
mov
add
ds
adc
inc
clc
adc
hlt
push
jnp
and
and
mov
or
enter
es
mov
sbb
test
out
nop
mov
test
adc
xchg
pop
push
out
lcall
or
std
push
mov
lahf
cli
stos
les
repz
cmp
xor
popf
dec
fmull
icebp
or
dec
shl
push
fldl
and
pop
or
and
mov
fisubrs
fdivrl
clc
insb
jg
js
lahf
outsb
mov
or
push
pop
shlb
xor
orb
push
cltd
sbb
push
fdivrl
sub
sbb
bound
mov
sub
add
push
xor
xchg
inc
in
out
xor
cmpb
jne
cmp
mov
cwtl
hlt
test
add
aas
pop
sbb
clc
adc
adc
push
and
stc
xchg
repnz
pop
mov
xchg
loopne
and
cmp
ficompl
rolb
mov
push
clc
push
push
lods
leave
cli
push
outsb
mov
movsl
push
inc
stos
fdivrl
and
ss
fcoms
sbb
cltd
push
mov
fiaddl
add
ss
pop
adc
jo
lret
jnp
push
jmp
adc
pop
sub
mov
shl
stos
dec
cmp
sbb
test
pop
adc
stc
int
aas
cmpsl
lods
xor
and
push
orb
mov
andb
xor
or
mov
and
mov
jb
jl
and
lods
jbe
xor
and
and
insb
loop
sbb
test
cltd
hlt
jo
or
scas
sub
sub
adc
mov
fdiv
leave
or
scas
bound
fucomp
add
lock
mov
jl
in
sbb
jae
jmp
mov
pop
jo
lret
mov
and
mov
mov
adc
push
iret
popa
ret
pop
pop
sub
sbb
lahf
sub
sbb
rclb
mov
pop
sahf
rcrl
mov
addr16
andl
test
leave
add
xchg
and
cmp
pop
out
outsb
mov
jne
push
mov
push
push
push
pop
pop
pop
insb
roll
imul
iret
inc
mov
mov
mov
test
dec
dec
mov
mov
mov
xchg
and
xchg
into
hlt
pop
lcall
sub
jne
pop
jns
mov
pop
ja
loopne
mov
cmp
xchg
fs
dec
push
mov
pop
imul
ret
xor
repnz
push
pop
push
cld
imul
or
dec
lods
xchg
lea
or
xchg
fadds
daa
xchg
or
add
shlb
mov
sbb
mov
add
add
cmpsb
adc
wbinvd
je
call
push
shl
or
add
ja
inc
insl
dec
sbb
add
adc
icebp
adc
mov
adc
or
adc
push
mov
xchg
xlat
repnz
adc
adc
fs
or
mov
dec
xchg
push
cwtl
bound
and
mov
and
ret
push
stos
fdivr
jmp
pop
sbb
lods
and
test
dec
lods
in
xor
lods
jmp
imul
ret
or
cld
sub
mov
sbb
and
xor
scas
push
daa
and
movsl
cmp
shlb
or
cmp
or
adc
cmpl
mov
hlt
mov
mov
test
sub
add
mov
mov
mov
dec
cmp
cmp
sar
sub
sbb
sub
xchg
pop
out
lret
and
std
stos
cwtl
inc
fadds
adc
dec
mov
fildll
push
rorb
insb
cmpl
or
inc
xchg
mov
pop
jmp
lcall
cmp
leave
pop
add
insl
inc
mov
xor
mov
or
xor
inc
jle
xchg
adc
popa
push
sarb
les
adc
stos
shrb
jl
stos
xorps
arpl
into
les
das
pop
inc
jg
and
icebp
repnz
adc
sub
movsl
rcrb
and
mov
pop
push
xchg
add
cmpl
push
negl
jne
aaa
cmp
nop
lods
xchg
jno
inc
int3
cld
and
test
push
int3
xchg
in
cmp
int3
inc
mov
loope
or
lock
inc
push
test
mov
movsl
sub
inc
adc
xor
lcall
inc
push
cmp
cmpsl
dec
daa
cmp
out
repnz
stos
leave
adc
les
fprem
mov
fmuls
lea
loop
int3
ror
sbb
in
mov
out
xchg
aam
jl
imul
loopne
push
push
or
je
push
call
ret
sub
fists
divb
pop
push
and
cmp
lods
into
addr16
mov
lods
sub
mov
mov
sbb
lea
or
das
inc
adc
roll
in
cmp
sbb
jo
and
add
jge
ds
dec
fwait
jle
cmpsl
js
in
test
popa
int3
fsin
sbb
or
sahf
lock
jg
mov
xor
scas
mov
or
mov
inc
ret
xchg
mov
cmp
in
sub
nop
mov
into
mov
pop
js
lods
inc
push
je
mov
cld
push
pop
xchg
hlt
push
cmp
lds
xlat
fs
int
sub
add
mov
and
and
push
loopne
mov
cmp
nop
mov
or
out
mov
test
faddl
push
push
push
sub
add
push
xchg
incb
adc
sbb
movsl
test
fmuls
inc
jle
arpl
outsb
jnp
hlt
cmc
sbb
test
sbb
xor
call
cli
mul
jl
mov
add
sub
mov
adc
and
or
nop
jmp
lock
dec
into
sub
cmp
push
adc
flds
sub
fcmove
call
mov
les
adc
rclb
int
clc
mov
adc
loopne
shll
fwait
lods
jge
lods
int3
jge
lods
jae
test
lea
adc
ds
cmp
and
pop
sarl
mov
xor
int
inc
fsub
inc
push
fildll
inc
pusha
xor
fisttps
sub
inc
ljmp
mov
inc
hlt
mov
outsl
xor
ficoms
test
mov
and
mov
inc
hlt
icebp
addr16
push
movsl
sub
mov
hlt
stos
jl
cmc
loop
les
xchg
xchg
mov
insb
popf
xor
add
call
mov
mov
sub
jbe
insb
repnz
ficoms
sub
ds
and
ja
mov
adc
sbb
das
hlt
add
pop
andl
and
test
push
mov
lcall
sbb
push
addb
push
mov
and
xor
adc
push
ljmp
aam
push
mov
mov
and
or
dec
int3
aad
or
stos
outsb
repnz
pop
std
es
ds
cmp
dec
imul
loope
leave
ljmp
lea
jb
push
movsl
or
dec
mov
inc
movsb
sub
cmpb
adc
sbb
aaa
push
sti
ret
daa
mov
shrb
sub
loope
or
mov
add
int
hlt
and
sbb
dec
rclb
sbb
pop
jmp
sub
call
loopne
mov
or
xor
push
cmp
bound
in
js
sub
adc
mov
inc
in
std
adc
lret
pop
fstps
sbb
dec
nop
mov
fbstp
imul
mov
mov
sbb
jmp
inc
add
and
push
sar
rorl
mov
mov
in
jo
xlat
mov
cmp
in
mov
sar
fdivs
dec
les
rolb
push
adc
test
std
inc
xchg
shll
sti
and
adc
mov
test
and
xor
jne
mov
jle
inc
mov
int3
sahf
jmp
push
les
xor
insl
int
pop
jno
inc
fs
push
outsb
lcall
fsub
adc
pop
add
inc
pushf
lahf
mov
mov
add
adc
cltd
out
cmp
xchg
and
xor
sub
adc
push
mov
or
xor
fldl
fidivs
lret
cmpsb
sahf
nop
xchg
out
scas
cltd
adc
nop
lods
sar
roll
jno
or
cs
outsl
ror
dec
mov
in
jg
jp
jl
push
jmp
mov
mov
call
add
and
fs
jae
scas
cmpsb
insb
loope
add
lock
add
pop
dec
and
sbb
or
jmp
in
xor
adc
and
adc
inc
adc
cmc
push
cmp
mov
pushf
dec
test
dec
aaa
cli
or
lret
and
and
adc
and
xchg
jl
sub
or
enter
ss
xor
push
aam
mov
and
mov
pop
jne
loopne
and
mov
add
xor
mov
inc
cltd
sub
mov
in
bound
std
loop
mov
sar
mov
leave
xchg
insb
loop
int
and
push
jae
xchg
pop
jmp
int3
in
and
std
inc
inc
xor
iret
lcall
push
and
xor
scas
imul
pop
and
cmp
sti
jne
pushf
out
in
fimull
jb
call
sub
dec
jno
adc
or
inc
int3
les
sub
inc
mov
jl
imul
fdivr
xchg
sbb
xchg
mov
add
jno
push
pop
mov
out
jo
call
xor
lds
add
lods
test
mov
xor
pop
scas
rclb
and
sar
xchg
mov
mov
jnp
xchg
mov
sahf
add
jg
lods
and
dec
sbb
cwtl
mov
adc
mov
jge
cmp
jae
xchg
stos
pop
or
and
push
or
sbb
pop
loope
scas
call
or
mov
shll
jmp
or
ss
rolb
sub
les
xchg
cwtl
mov
into
sbb
and
ret
mov
mov
cwtl
popa
mov
test
sbb
push
std
push
rcrb
mov
les
mov
mov
adc
mov
adc
pop
adc
jecxz
daa
or
int
sbb
mov
or
inc
je
push
xor
push
push
loopne
adc
mov
mov
lods
aas
mov
dec
leave
sbb
cld
jmp
clc
mov
dec
pop
in
xchg
adc
pop
mov
push
jl
repnz
xor
and
jmp
movl
add
add
push
mov
aam
jg
mov
mov
shrb
rcrl
test
jne
pop
and
push
not
xor
sbb
xchg
andb
xor
xor
leave
or
dec
in
jns
dec
jo
mov
xchg
push
push
sbb
sbb
push
and
popa
fs
mov
daa
push
faddl
inc
xor
cmp
loop
inc
sbb
push
inc
mov
ficoms
adc
inc
adc
and
mov
cmp
enter
pop
pushl
sub
mov
xchg
pop
enter
xchg
mov
add
cmp
lock
push
add
xchg
cmp
adc
and
rclb
rorl
rol
dec
lods
push
or
lods
mov
mov
test
push
movb
mov
hlt
xor
gs
push
adc
dec
and
and
and
mov
adc
add
and
adc
mov
mov
popa
mov
xchg
repnz
cwtl
sub
xchg
rolb
inc
jle
cs
mov
jnp
or
jb
add
mov
and
sti
push
sub
push
and
xchg
and
fdivr
inc
sub
shrb
push
sar
repnz
dec
and
movsl
cmp
fadds
add
sti
dec
hlt
push
and
mov
adc
xchg
rorb
leave
sub
aad
pusha
ret
decl
sub
ret
jno
movsb
sub
imul
mov
mov
jmp
jbe
jge
call
lahf
xchg
sub
lock
mov
sbb
mov
and
xchg
jbe
dec
lds
push
xor
pop
and
std
sbb
pop
push
inc
jb
adc
lret
lds
pop
dec
daa
dec
mov
cmp
adc
ret
mov
sti
fnstsw
mov
mov
fnstsw
jmp
ljmp
mov
dec
notl
adc
and
daa
je
mov
add
sbb
cld
inc
xchg
pop
adc
pop
fisubrs
mov
je
push
pop
mov
pop
in
scas
cmpsb
adc
pop
out
cmp
imul
cmp
cli
push
cmp
jmp
xor
or
push
aam
cmp
dec
test
xchg
cld
mov
sub
xchg
es
adc
js
loope
jl
push
or
adcb
and
bound
xchg
cwtl
outsb
mov
movsb
xchg
lods
mov
sbb
mov
inc
rcrb
or
mov
or
shlb
cmp
adc
fmuls
sbb
loopne
inc
rep
icebp
mov
in
pusha
xchg
call
cld
xor
outsl
repnz
push
popa
lea
mov
mov
mov
jne
add
das
jb
in
dec
ja
icebp
inc
aas
xchg
cltd
add
sub
clc
cmp
out
add
rolb
mov
shrb
jo
jl
mov
test
add
add
pop
cld
push
mov
call
repz
inc
xchg
setg
mov
imul
test
mov
push
lods
inc
cmpsb
dec
or
pop
inc
dec
sbb
loope
xchg
sahf
push
call
sbb
test
sbb
mov
xor
test
push
mov
push
mov
adc
inc
push
rep
sbb
push
xchg
push
dec
pop
xor
ss
js
mov
orb
xor
icebp
xchg
out
dec
shrd
call
mov
sub
mov
mov
mov
pop
or
mov
lret
mov
mov
push
shl
mov
jmp
mov
push
and
add
mov
gs
bound
ret
scas
push
inc
aam
sub
ret
sub
dec
or
jo
add
pop
je
nop
jb
xchg
jmp
xor
cmp
jne
mov
call
enter
mov
pop
and
add
adc
adc
and
cmp
cld
add
pusha
test
ret
adcb
mov
push
dec
pop
insb
mov
jecxz
movsl
mov
cmp
into
rorb
adcb
pop
pop
push
daa
mov
pop
xor
rclb
xor
mov
js
xchg
push
jg
xchg
ja
add
xchg
lretw
xlat
add
push
rcrl
mov
push
sbb
shl
enter
adc
and
pop
inc
jl,pn
xchg
push
mov
mov
ds
jge
xchg
pop
xchg
lds
inc
test
testl
inc
xchg
repnz
sub
sahf
cmp
imul
bound
jns
add
or
cmp
mov
adc
out
or
sahf
pop
sti
add
mov
sbb
mov
shlb
inc
sbb
push
push
cltd
out
roll
daa
imul
test
mov
xchg
stos
inc
pop
mov
jmp
mov
stc
outsb
sub
mov
dec
negl
mov
out
lock
andl
xchg
subb
cmp
jge
mov
push
mov
mov
ss
mov
sahf
mov
out
repz
adc
mov
adc
cli
test
xchg
rcll
inc
mov
and
push
and
or
ret
dec
sbb
and
call
loopne
je
cld
or
xor
sbb
inc
cmp
je
sub
arpl
adc
jb
adc
inc
pop
push
push
pop
and
jle
incb
cmp
push
xor
mov
add
sbb
cmp
pop
adc
jne
push
in
push
and
add
push
inc
dec
sbb
sub
mov
bound
imul
das
xor
cmpsl
outsb
xchg
xchg
cmp
sbb
mov
imul
cmp
xchg
daa
dec
dec
cld
imul
push
ret
sbb
push
fwait
in
and
mov
mov
int3
lock
insb
mov
ja
cwtl
inc
push
and
outsl
rorl
adc
add
or
je
push
push
jbe
push
jb
aas
lahf
mov
insb
fbld
push
movsl
pop
mov
pop
cmp
das
ret
xchg
sbb
leave
and
dec
sub
repnz
adc
pop
dec
decb
adc
xor
sbb
leave
sub
cmp
je
ret
das
das
or
or
hlt
or
ja
push
dec
sub
add
ja
movsb
and
add
cmpb
push
sub
test
cmpl
enter
sub
mov
push
nop
adcl
inc
push
and
pop
push
xor
pop
cmp
pop
and
jo
int3
cmp
push
pop
ret
idiv
stos
sub
test
inc
cwtl
lods
nop
fdivs
and
dec
cmp
mov
enter
push
pop
cmp
scas
mov
or
cld
rclb
movsl
loop
mov
ss
rolb
fcmove
push
aas
sub
out
dec
into
mov
imul
push
test
jne
mov
and
lods
leave
aaa
mov
pop
in
mov
cs
xchg
push
les
dec
test
pop
std
jecxz
pusha
inc
in
push
push
ret
or
push
mov
push
out
popf
in
adc
inc
fsts
rcrl
sbb
sbb
sbb
scas
cmpsl
inc
dec
mov
sbb
cmp
push
cwtl
or
jmp
adc
inc
push
dec
scas
sub
xor
cmpsl
push
pushl
adc
mov
or
je
dec
and
nop
sti
pop
dec
xor
movsb
jmp
adc
adc
add
adc
cmp
fwait
test
jmp
mov
sub
push
dec
sub
lahf
or
je
and
mov
adc
mov
or
sub
mov
pop
hlt
ret
mov
ljmp
jmp
xor
hlt
mov
or
dec
arpl
dec
cmp
jno
mov
xor
cmp
jg
mov
cmp
ret
sbb
mov
inc
movl
push
andl
paddusb
subl
inc
sub
mov
mov
cmp
adc
sub
pop
repnz
lret
call
cltd
sbb
inc
or
dec
sub
jle
and
fs
cmp
leave
fcmovnb
lods
xor
test
xchg
push
lods
stc
or
xchg
pop
sbb
xchg
daa
notl
stc
inc
cld
or
and
mov
add
or
xor
inc
adc
sub
and
les
and
int3
rcrb
stc
testb
add
add
ds
inc
pop
mov
adc
mov
ds
mov
push
lods
mulb
and
mov
mov
and
mov
pop
mov
cmp
xchg
adc
test
adc
mov
adc
addl
test
sub
adc
enter
xor
push
gs
fcoms
push
cli
xchg
int
aam
fs
mov
xchg
push
adc
enter
sti
popf
jo
dec
leave
xor
outsb
jmp
xchg
push
xor
push
iret
int
add
mov
movsl
mov
test
xlat
push
sub
add
daa
adc
adc
jnp
fs
push
mov
push
call
test
xchg
and
test
lods
aaa
test
cmp
push
fstps
and
sti
sbb
xor
dec
filds
add
cmpsb
jge
cltd
push
push
adc
mov
xchg
jmp
sbb
sbb
jle
lea
seta
mov
jne
mov
aas
mov
xchg
ljmp
mov
mov
data16
push
push
push
outsb
outsl
incb
je
cli
sub
aas
out
and
push
or
xor
ja
add
adc
enter
push
adc
inc
insl
adc
add
mov
dec
shll
dec
pop
in
lcall
out
adc
xor
push
outsb
repz
sbb
xor
push
movsb
sbb
pop
das
mov
out
lahf
push
repz
pop
fstpl
cmp
and
xchg
dec
fmul
and
dec
fs
inc
push
test
adc
push
and
jno
imul
jmp
daa
loopne
inc
jle
shll
cmp
cmp
mov
and
iret
je
lods
pop
lock
call
jge
mov
and
test
xchg
loop
mov
and
repnz
scas
test
add
ds
negb
bound
jle
popf
sti
add
push
cmp
call
cmp
adc
mov
push
add
or
jno
dec
jb
sarb
aam
push
je
pusha
test
fwait
cmp
bound
dec
mov
xchg
push
xor
rclb
test
imul
in
sahf
inc
push
pop
sub
add
and
pop
gs
push
pop
out
jo
or
sbb
pop
dec
and
repnz
adc
push
stos
sub
nop
testl
jmp
int
cmpsb
popf
fs
test
test
in
pop
cs
aaa
inc
cld
push
dec
mov
sub
ret
stos
popf
dec
js
pop
scas
xchg
push
add
iret
enter
xchg
sbb
adc
jae
and
loopne
pop
out
cld
dec
enter
pop
sti
or
hlt
xchg
jle
pop
jg
push
push
inc
push
lods
xor
loopne
bound
jmp
in
into
cmp
sti
aam
out
mov
and
mov
out
sbb
pop
in
leave
cmp
xlat
mov
lcall
and
insb
aam
fwait
sub
jnp
sbb
mov
fmuls
pop
das
fs
cmc
push
push
daa
mov
stos
lret
xor
sub
mov
push
cltd
add
lock
push
push
push
sbb
adc
xor
ret
jl
cld
test
mov
jle
inc
mov
mov
loop
inc
dec
clc
gs
cmp
mov
nop
ret
adc
jnp
jns
mov
dec
and
cwtl
stos
dec
lcall
es
out
or
dec
decb
pop
push
pop
push
xor
insb
popa
or
push
xor
jo
lods
subb
and
sbb
and
cld
data16
jg
push
push
stos
lret
int
sbb
push
idivl
flds
adc
push
ss
push
mov
add
jne
xor
adc
inc
push
fs
xor
sbb
xchg
popf
add
and
push
mov
pop
movsl
out
and
inc
iret
adc
mov
enter
loop
jmp
adc
xor
mov
mov
fs
dec
ss
inc
and
mov
sbb
pop
and
mov
mov
pop
jmp
or
adc
mov
adc
mov
xchg
lods
or
scas
or
movsb
fdivr
add
ljmp
in
call
sub
test
test
jnp
sbb
fwait
jl
pop
in
and
jl
xchg
or
cld
pop
push
rorb
sbb
or
pop
int3
push
ljmp
push
mov
xor
mov
pop
xor
add
mov
mov
mov
xchg
jp
sub
pop
ret
add
add
sub
and
sub
xor
jae
movsb
sbb
push
inc
jecxz
xchg
js
imul
js
out
loop
cli
adc
in
mov
push
pushf
xlat
jb
pop
loope
mov
sub
push
insb
cld
fs
cld
cmp
cmp
inc
mov
jbe
and
out
inc
call
mov
je
and
outsb
add
js
inc
or
xor
lods
mov
sti
jae
mov
cmp
imul
stc
push
in
lahf
jp
ljmp
jecxz
add
dec
xor
add
mov
scas
adc
xor
dec
mov
push
adc
jno
push
mov
das
in
push
imul
lea
adc
movnti
mov
inc
jmp
gs
or
mov
imul
test
shr
lcall
inc
jmp
icebp
cld
in
movl
addl
dec
enter
xchg
inc
or
adc
sub
cmpsb
mov
lods
jbe
add
and
mov
add
call
ja
scas
fidivrl
or
or
lods
sbbb
sbb
xor
and
xor
push
sub
and
hlt
and
bound
mov
dec
mov
or
dec
jle
mov
clc
dec
cmpsl
xchg
inc
mov
out
ja
mov
neg
and
test
push
jmp
add
inc
inc
jne
xchg
inc
cmpsl
into
aad
pop
and
shll
movsl
jae
lds
dec
pop
fs
and
adc
call
loope
pusha
pop
popw
mov
pop
push
jnp
add
sub
xchg
lea
ret
push
aam
addr16
xchg
xor
push
dec
cmp
in
sbb
in
js
cmpsb
lea
shll
int
pusha
sub
dec
dec
lods
xorb
or
mov
xor
inc
cmp
in
or
adc
dec
push
nop
test
xor
hlt
inc
and
mov
and
je
adc
arpl
pop
and
and
mov
xor
xor
lahf
adcb
ret
or
je
inc
imul
or
stc
test
jo
add
sub
jmp
dec
ret
andb
mov
mov
inc
fsubrp
mov
popf
ja
ljmp
xor
std
sub
xor
and
sbb
add
mov
ret
in
cmp
xchg
and
nop
adc
or
rclb
nop
push
hlt
and
adc
mov
adc
clc
dec
or
fcoml
jecxz
mov
aam
cwtl
add
xor
js
xor
jns
mov
or
mov
lock
mov
lret
xchg
outsb
inc
jo
lret
fwait
in
pop
jmp
jge
dec
or
xchg
mov
stos
mov
rcrb
pop
cbtw
imul
dec
xor
push
xor
sbb
bound
push
dec
cld
mov
sub
fucomip
xor
xor
cmp
sub
jno
pop
dec
push
faddp
jmp
fldenv
jmp
clc
fs
daa
fldenv
das
push
sub
and
adc
outsb
pop
cld
ret
dec
cmpsl
pop
xchg
scas
cmp
out
jb
or
xor
push
pop
or
into
push
cmp
push
jmp
sbb
jb
pop
cs
xchg
into
sbb
repnz
mov
mov
mov
push
mov
or
sti
or
outsb
or
sbb
jb
mov
test
sbb
loopne
mov
cmp
mov
clc
sub
cmp
pop
cmp
adc
add
mov
ja,pn
xor
and
mov
rolb
cmp
fwait
je
or
int3
xorb
fbld
daa
pushf
add
rolb
repz
cwtl
mov
sbb
loope
jmp
pop
aad
xchg
test
inc
insb
cld
mov
mov
rolb
jo
test
mov
fs
push
push
adc
mov
xchg
and
pop
daa
mov
dec
aas
sbb
popa
or
inc
mov
push
sbb
mov
push
jecxz
cwtl
call
mov
pop
dec
ljmp
test
xchg
ljmp
loope
insb
in
lds
push
je
push
notb
adc
pop
sub
jne
adc
pusha
test
or
dec
cmp
sub
and
push
outsl
mov
insl
and
test
xor
cmc
out
pop
sub
lea
or
mov
ljmp
gs
dec
test
fs
jge
jle
pop
sub
aas
call
bound
loop
outsl
push
cwtl
inc
mov
mov
push
xchg
mov
push
rorl
pop
pushf
add
pushf
and
pop
mov
and
pop
mov
je
psubusw
aad
aas
or
lds
xchg
dec
sub
sub
out
adc
test
shr
mov
sbb
daa
push
das
sar
fisubrl
dec
loope
sbb
fucom
adc
les
xor
or
sbb
and
mov
inc
dec
mov
xchg
inc
push
repnz
dec
das
mov
xor
push
clc
in
cmp
mov
gs
jmp
out
leave
add
fwait
or
cmp
das
push
adc
xor
dec
aam
pop
leave
dec
insl
repz
sub
dec
test
add
mov
jns
sbb
test
ja
push
insb
xchg
outsb
insb
cmp
mov
sub
sub
int3
sar
and
jmp
stos
push
aad
mov
xor
push
or
adc
push
aas
addr16
mov
or
fists
ljmp
fs
sbb
add
pop
in
push
loop
dec
mov
xor
call
das
mov
sub
dec
adc
xor
in
inc
test
sub
mov
adc
push
push
push
xor
xor
sbb
call
je
xor
cmp
adcb
cmpw
add
lods
adc
inc
divb
icebp
sub
mov
pusha
sub
aad
jge
lea
cltd
add
push
shll
cmp
mov
dec
je
inc
xor
add
cld
push
xchg
xor
mov
enter
xchg
lods
push
ret
std
xlat
xchg
jbe
xchg
pop
sbb
adc
fildll
loope
call
data16
inc
push
les
pop
sub
sti
sbb
mov
or
and
popf
shll
popf
in
sarb
lods
or
daa
out
cltd
xlat
push
clc
nop
mov
xchg
mov
adc
jnp
xor
pop
fs
pop
bound
mov
pushf
mov
sub
add
mov
push
std
mov
jmp
adc
cli
xchg
jo
inc
sbb
lock
movsb
js
xor
dec
mov
enter
or
fisubs
add
pop
pop
int3
and
xchg
clc
sbb
stos
inc
dec
es
hlt
push
dec
lret
adc
xchg
add
sub
nop
gs
sub
call
data16
add
arpl
clc
jae
jmp
and
outsb
mov
dec
xchg
lods
orb
aad
std
in
jecxz
and
out
mov
or
call
mov
insb
add
mov
fldcw
inc
sbb
add
aas
add
inc
mov
and
lcall
dec
enter
sub
jb
into
adc
jmp
pop
popa
mov
jg
test
dec
lods
and
fdivrs
roll
je
je
mov
ds
dec
in
iret
mov
cld
and
cmp
jne
nop
jb
in
add
fs
dec
insb
xlat
mov
jo
andl
test
inc
and
adc
xor
call
mov
in
cmpsb
imul
je
lcall
inc
mov
xchg
or
add
cmp
bound
dec
loop
xchg
lods
sub
rorb
xchg
sbb
xor
inc
dec
add
inc
jecxz
lods
sub
dec
jnp
pop
lahf
push
pop
cs
mov
push
lea
cwtl
mov
pop
es
or
xchg
dec
and
adc
sub
xchg
add
adc
jb
jge
mov
cli
mov
mov
js
adc
shl
jmp
adcl
in
and
int
lcall
adc
cmp
inc
jb
mov
mov
mov
inc
add
test
movsl
jl
stos
cmc
jg
xchg
add
ss
das
in
jle
lret
jbe
ja
movsb
dec
mov
test
mov
out
adc
jne
cli
and
clc
xchg
jge
jle
jbe
inc
jecxz
popa
sarb
push
jb
xor
xchg
std
lret
out
jle
aas
and
sbb
sbb
sbb
and
sbb
in
test
jbe
icebp
or
loop
in
jns
jmp
cmp
ljmp
imul
pop
mov
cmpl
adc
fnstcw
shlb
mov
xor
add
dec
jmp
dec
aam
out
pop
inc
and
push
out
jb
clc
sbb
in
pop
xor
pop
push
movsl
js
push
pop
push
int3
mul
xor
pop
call
push
fs
and
dec
dec
ljmp
mov
sub
out
sbb
dec
pop
cwtl
mov
pop
sti
and
arpl
mov
add
and
xor
cmp
sbb
inc
ja
aam
int
adc
cmp
sar
dec
out
and
or
daa
add
icebp
ljmp
push
inc
sbb
xchg
mov
stos
push
inc
adc
dec
or
cmp
add
mov
fbstp
push
mov
mov
mov
iret
or
bndldx
sbb
push
test
insl
mov
mov
inc
mov
test
cwtl
and
bound
add
xor
push
mov
ret
mov
pop
adc
adc
test
fstpl
or
sbb
add
mov
mov
jb
mov
jmp
std
rcl
adc
dec
xchg
les
push
cmc
mov
ret
and
adc
data16
repz
das
jmp
sahf
arpl
adc
cmp
dec
xchg
mov
sbbb
jle
out
mov
je
or
cmp
out
cmp
je
mov
mov
push
ret
cli
push
jne
sub
lahf
sbbl
push
push
inc
adc
pop
jge
sub
push
jl
cltd
fucom
inc
push
popf
fstpl
call
icebp
jmp
pusha
fildl
fmull
inc
and
pop
push
sbb
pop
or
in
lahf
add
xor
xchg
fldcw
and
sbb
pop
or
or
andl
scas
je
lcall
adc
dec
mov
adc
lret
or
sub
aad
jge
mov
adc
mov
pop
xor
fimull
negl
mov
roll
je
inc
jle
adc
scas
pop
lret
in
mov
call
adc
test
dec
ljmp
lahf
pop
cmp
fmull
fldt
inc
sub
scas
mov
and
ja
incl
fmulp
pop
mov
pusha
cmp
in
jnp
sub
insl
mov
push
or
enter
cmpb
movsb
aam
and
dec
xchg
fldenv
mov
repnz
xchg
dec
nop
jmp
sti
and
ds
inc
push
bound
and
pmulhw
inc
add
test
adc
cli
or
aaa
or
lock
imul
std
es
and
add
mov
adcl
sub
outsb
adc
xlat
roll
in
popf
test
cmp
hlt
xor
mov
add
jmp
call
inc
pop
mov
stos
xchg
out
sub
enter
adc
imul
mov
adc
clc
les
stos
jne
sub
cmp
stos
xorb
jle
push
adc
mov
hlt
add
ficoms
pusha
jp
push
pop
ror
addr16
gs
test
lods
movsl
push
nop
lock
cmp
cmp
jge
lret
and
or
movsl
ds
stos
xor
movsb
std
lds
mov
pop
adc
xor
sub
adc
adc
jle
out
rolb
xchg
dec
jne
or
idivl
sub
add
mov
jmp
test
adc
roll
or
push
frstor
mov
scas
push
out
ss
loop
out
dec
int
fadds
clc
fistl
fisubrl
in
idivl
xchg
sbb
adc
data16
jno
outsl
xchg
fwait
out
sub
mov
pop
movsb
ds
push
push
xor
or
movsl
pushf
mov
and
jecxz
sub
xchg
xchg
mov
jne
jle
push
dec
inc
je
push
mov
je
or
jne
xchg
daa
icebp
sahf
ds
or
in
sub
rcrb
ret
inc
xor
and
xor
ja
negb
mov
push
sarb
lods
cmp
test
outsl
out
out
jbe
cmp
jbe
insb
cli
add
dec
and
cs
fcomps
pop
fstpt
dec
gs
mov
int3
popa
adc
andb
mov
clc
adc
or
push
mov
add
test
or
mov
and
dec
aas
inc
ret
out
push
in
add
jbe
rolb
dec
bound
pop
jg
enter
gs
pop
repz
push
sbb
xor
jae
pop
pop
hlt
das
jge
jnp
jae
cmp
mov
frstor
sbb
cli
or
or
sti
rolb
enter
rclb
cmp
push
jg
dec
cmpb
jne
push
test
or
cmp
or
movl
icebp
stc
or
pop
je
pop
addb
popf
or
pop
jno
cmp
in
adc
ja
jl
push
mov
inc
sub
rep
lea
cmp
jl
push
mov
add
push
mov
inc
jbe
add
mov
dec
and
jle
in
mov
xchg
and
ja
inc
cmp
popa
pop
jl
mov
sub
xor
mov
push
pop
push
jge
sbb
lret
lcall
pop
jmp
loop
imul
inc
dec
xlat
sbb
dec
mov
popf
adc
pop
int3
sahf
add
mov
fdivrs
pop
pop
add
push
scas
mov
pop
les
pop
sbb
loope
hlt
std
test
add
xor
lock
sbb
cld
cltd
sub
lea
rcrb
xchg
push
clc
cmc
push
sbb
dec
adcb
mov
dec
jmp
xchg
add
pop
lds
xchg
add
stos
cmp
xor
mov
icebp
les
adc
mov
rorb
jg
or
jne
pop
inc
mov
sbb
jb
sbb
add
das
sub
in
dec
dec
mov
xchg
pop
or
scas
xor
mov
std
or
jle
sbb
ss
dec
mov
out
dec
sbb
daa
or
pop
sbb
lods
mov
push
popf
or
add
push
mov
mov
andps
adc
in
push
inc
lret
pop
pop
or
cmp
jmp
push
add
test
add
bswap
sbb
pop
or
inc
adc
in
pop
pop
mov
mov
imul
scas
aad
dec
aas
fdivl
mov
movsl
inc
push
pop
jae
test
add
push
lods
dec
movsl
popa
stc
pusha
gs
lods
jg
dec
pop
dec
mov
xlat
addr16
sbb
into
push
jg
or
out
imul
push
ss
push
adc
push
out
jo
add
or
and
sub
sti
add
adc
fadds
dec
mov
shrl
xchg
push
mov
bound
rcrl
adc
push
xchg
xchg
lods
test
cmpsb
jle
pop
or
add
xchg
xchg
sbb
dec
popa
dec
jge
ds
imul
add
push
dec
repnz
push
pop
sbb
xor
push
je
xchg
adc
inc
cmp
mov
clc
lds
clc
or
nop
adc
push
mov
rcl
mov
xor
scas
xor
scas
cmp
jbe
and
inc
push
push
mov
adc
inc
push
and
push
push
std
int3
sub
push
push
les
rclb
pushl
ljmp
js
push
aam
sub
pop
fmull
scas
fbld
push
cmp
inc
push
xchg
sti
iret
outsl
and
xchg
xor
nop
lods
jns
mov
notl
sub
divl
push
push
rclb
pop
out
sub
sub
xor
adc
cmp
fisttpl
add
adc
out
nop
push
leave
dec
sbb
sbb
and
pop
cmp
stc
lret
dec
sub
or
movsb
in
push
cmp
mov
sbb
scas
ret
daa
mov
ja
js
rorb
jne
mov
push
pushf
push
cmp
jae
inc
and
test
addr16
imul
mov
cli
or
insb
in
call
je
daa
pushf
fs
add
nop
push
pop
adc
les
xor
dec
xchg
mov
cmpsl
xlat
lcall
adc
sub
fs
push
push
sbb
xchg
shll
ss
adc
inc
lds
sub
in
pop
xor
dec
sub
lock
sbb
add
popf
fldt
sub
push
add
repnz
jnp
sbb
inc
or
mov
aas
mov
in
jmp
sbb
push
subb
xchg
aad
ficoms
xchg
xor
or
cwtl
loop
push
sbb
shrl
mov
cs
in
faddl
loopne
cmp
push
dec
push
lods
insb
les
pop
lcall
add
push
js
fimull
fmull
outsb
subb
xchg
lahf
dec
testl
rcrb
enter
mov
mov
shrl
mov
mov
fsubl
push
mov
mov
pop
cltd
sub
mov
jmp
adc
dec
xorb
pop
jnp
or
hlt
mov
dec
push
mov
fistpll
dec
out
adc
cwtl
mov
jnp
mov
mov
mov
sub
repz
and
dec
and
clc
add
or
mov
push
push
jg
push
xchg
or
mov
gs
data16
inc
or
xchg
shlb
and
dec
jns
mov
pop
pop
popf
rorb
sbb
mov
cvttps2pi
dec
or
and
pop
je
mov
mov
ljmp
push
and
jl
adc
and
mov
out
es
xlat
or
mov
or
inc
xor
or
adc
sub
sbb
out
je
scas
sbb
cmpsb
pushf
test
add
inc
test
mov
jmp
jge
mov
fbstp
outsl
fwait
aam
not
mov
insl
add
fdivrp
xchg
cmc
stc
adc
pusha
sysret
mov
imul
inc
pop
punpckhwd
cmp
fbstp
xchg
je
xor
pushf
sysret
sub
fadds
in
aam
bndldx
cmpsl
arpl
or
inc
loop
add
in
inc
out
add
icebp
outsb
inc
call
test
xchg
stos
in
mov
nop
fdivp
xor
or
adc
or
sbb
and
sti
add
fisttps
adc
cmp
cltd
or
push
or
adc
and
icebp
inc
es
jnp
shrl
jecxz
aas
jmp
mov
xchg
adc
and
mov
pop
in
gs
push
push
xor
cld
and
adc
mov
xor
mov
js
add
inc
and
cmp
and
add
push
popf
and
lahf
adc
lahf
or
lock
in
fsubrs
dec
jbe
dec
pop
sub
movsb
mov
ja
pop
push
xor
mov
adc
inc
call
push
jl
dec
xchg
xor
js
push
pop
cld
mov
gs
test
or
mov
ret
or
scas
add
mov
adc
icebp
cmp
or
iret
fldt
pop
sub
orl
cli
mov
jo
in
test
mov
add
cmpsl
dec
cmp
dec
xor
fdivrl
ret
and
push
mov
pop
and
and
pop
ret
imul
pop
add
or
incb
mov
dec
jmp
mov
sbb
mov
or
mov
adc
mov
push
pushl
xor
inc
maxps
mov
in
loope
popa
jg
push
test
adc
movsb
outsl
pop
test
js
inc
jg
and
gs
inc
mov
es
in
push
sub
xlat
clc
jge
cld
push
inc
test
push
inc
sbb
mov
insb
shlb
into
push
cmp
imul
scas
dec
loope
add
add
lea
cmpb
push
push
stos
sbb
mov
sub
aad
int3
jbe
out
loop
stos
movsl
adc
mov
cmp
pop
stos
lret
and
inc
dec
dec
sub
mov
lock
adc
xchg
call
pop
adc
lods
jge
push
out
xlat
in
ja
cmp
shr
sti
bound
dec
xor
pop
lods
jbe
cmp
jp
daa
lahf
dec
rcll
cmpsl
ss
jle
and
insl
mov
adc
pop
mov
or
mov
add
push
dec
sbb
add
in
mov
cltd
sbb
fldenv
cwtl
sbb
mov
lods
mov
cmc
dec
outsb
mov
arpl
pop
push
sbb
das
notb
xchg
sub
sub
je
mov
mov
sub
shl
sub
lea
sbb
test
inc
cs
arpl
jnp
cmc
push
jmp
push
xor
push
mov
xor
or
leave
sub
sub
test
and
adc
and
inc
cmp
es
and
outsl
and
imul
adc
fdivr
ds
jmp
push
int3
loope
jnp
scas
pop
dec
mov
pop
mov
fcompl
push
push
cmp
sub
xchg
pop
in
ret
xchg
push
dec
std
pop
inc
out
adc
push
and
inc
add
jle
pop
adc
add
xor
into
les
and
push
es
popf
pop
xchg
inc
jb
outsb
call
and
test
jge
mov
adc
cmp
gs
push
shr
push
mov
mov
fdivl
cmpsb
xor
mov
sub
or
nop
decb
bound
shrl
and
outsb
les
mov
mov
jb
in
sub
or
pop
lret
in
push
inc
subb
out
jl
adc
fisttpll
push
push
inc
mov
xor
in
xor
adc
cmp
inc
dec
enter
sbb
mov
jns
sbb
xchg
or
inc
cwtl
and
mov
test
sub
enter
aaa
xchg
inc
jl
xchg
aam
and
out
xchg
enter
xor
adc
sub
hlt
sub
ret
sbb
inc
adc
out
mov
icebp
mov
and
enter
mov
xor
inc
test
popf
insb
mov
and
xchg
mov
test
push
xlat
dec
pop
adc
enter
aad
xchg
dec
es
and
push
xchg
adc
cltd
fwait
leave
jns
push
out
jp
test
mov
cmp
cmp
mov
mov
xchg
dec
push
pop
loop
cli
bound
jnp
sub
js
jl
xlat
test
jg
lea
pushf
push
je
pushl
inc
movsb
xor
sub
and
fs
clc
mul
inc
cmp
pop
adc
ret
jmp
cltd
cmp
int
inc
jge
sub
sbb
jnp
or
xchg
das
and
vmovsd
cmp
je
adc
pop
enter
in
aam
ja
and
ror
hlt
fnsave
or
sbb
pop
je
push
jne
addr16
or
movsb
xor
xor
and
xor
jne
sub
fsubr
frstor
test
and
adc
mov
mov
adc
adc
push
add
jl
sub
scas
sbb
sbb
lret
jne
or
adc
test
outsb
clc
sub
xor
unpcklps
lds
daa
sub
push
dec
test
jne
sbb
icebp
dec
dec
fstl
add
add
aaa
sub
divb
gs
or
subb
push
sbb
add
idiv
adc
jnp
and
adc
in
lahf
test
pop
or
mov
clc
or
mov
clc
jle
pop
jnp
cmp
call
jns
cmp
mov
and
adc
and
mov
aad
mov
xor
sub
enter
sahf
xor
lea
and
fnstenv
sub
adc
sub
mov
into
idivl
adc
cli
pushf
dec
or
pop
imul
pop
push
daa
jmp
cwtl
xor
divl
add
orl
jmp
xchg
arpl
push
jl
dec
divb
rcll
imul
push
pop
nop
sahf
cmp
mov
and
or
mov
es
inc
lods
push
pop
sub
sbb
sbb
test
aas
add
lods
hlt
dec
xor
push
psubsb
sub
mov
out
push
movl
je
dec
mov
push
pop
es
sbb
xchg
jle
dec
sub
dec
mov
push
mov
sbb
stos
add
repz
hlt
pop
lcall
jmp
inc
orl
add
fwait
sbb
jb
das
jmp
fdivs
inc
push
xchg
xlat
hlt
fwait
cld
fisubrs
imul
dec
inc
aam
mov
xlat
xchg
lds
lret
sahf
movsb
or
adc
mov
jge
sbb
xchg
iret
push
and
and
xchg
pop
xchg
ss
and
cmp
lahf
int3
std
adc
inc
hlt
add
and
push
adc
addr16
mov
lods
cli
adc
inc
inc
lahf
mov
or
popa
sub
js
jae
adc
dec
mov
js
cmp
out
and
inc
jmp
test
fwait
lds
icebp
add
push
popa
mov
call
insb
jbe
and
lds
add
cmp
xor
lock
push
lods
adc
jnp
pop
in
and
call
sub
clc
lcall
cwtl
jbe
jb
aad
xor
sbb
sbb
inc
xchg
mov
mov
cmc
sub
or
mov
pop
add
outsb
pusha
jne
mov
sub
daa
xchg
sti
dec
dec
jg
add
les
xchg
insl
out
sbb
xchg
adc
mov
lret
cmp
jp
mov
test
pop
add
stos
push
xor
inc
js
jmp
mov
dec
jmp
xchg
add
mov
and
mov
flds
cmpsl
std
sbb
data16
mov
push
xchg
dec
and
aad
out
add
pop
imul
push
xchg
pop
xchg
dec
xchg
sti
jg
or
pusha
cmc
roll
pop
ds
mov
scas
sbb
push
sub
daa
call
shlb
mov
jg
call
xchg
inc
lret
dec
sub
add
hlt
lahf
add
cmp
sbb
push
std
and
sub
sub
jle
add
sub
inc
or
xor
push
je
add
clc
add
je
xchg
cltd
pop
scas
popa
mov
mov
jbe
and
je
mov
cld
daa
jb
mov
jge
mov
jge
test
sbb
mov
adc
insl
pop
int
xor
sub
jge
mov
cmp
jmp
scas
push
mov
aaa
push
test
adc
jno
call
movsb
sub
sbb
mov
sub
inc
and
ss
adc
js
mov
lcall
lcall
cmpsl
loopne
mov
adc
and
fs
popf
cmpl
adc
push
popf
mov
adc
mov
xchg
jl
xlat
xor
mov
ficoms
aam
dec
mov
mov
and
mov
jmp
push
push
repz
je
xchg
jbe
enter
push
sbb
mov
test
stos
in
stc
leave
or
fsub
dec
mov
popf
mov
inc
fcmovu
mov
clc
ret
or
xchg
loope
testb
add
add
lods
leave
addl
push
sbb
or
imul
xchg
and
pop
push
outsl
and
in
xchg
dec
jb
rclb
pop
push
mov
add
ss
jmp
xor
divb
mov
adc
and
scas
mov
cmc
dec
mov
ds
dec
mov
mov
sbb
push
ret
in
add
rclb
sahf
mov
adc
dec
xchg
jecxz
cmp
adc
mov
pop
pop
test
push
arpl
std
inc
xchg
and
mov
lahf
into
je
push
xor
xlat
pop
mov
aaa
mov
lock
mov
testb
dec
por
jle
and
push
add
dec
jmp
sbb
hlt
inc
adc
push
cmp
mov
or
insb
aam
call
shlb
adcb
leave
inc
push
fs
push
xor
cmpsb
cltd
lahf
int3
addb
pop
loope
adc
sbb
movsb
and
cmp
and
ret
or
and
push
mov
pop
lcall
jp
je
leave
fistl
push
jecxz
dec
lods
cmp
out
adc
pusha
and
ror
in
xchg
jle
adc
fsts
fs
into
mov
popf
movsl
mov
or
lods
mov
and
lods
inc
push
or
incb
jmp
je
pop
shr
addb
shrl
addb
xor
push
jle
jnp
insl
orb
inc
adc
cmp
cmp
xchg
pop
and
push
cmp
xchg
and
jbe
xorb
ljmp
aas
mov
mov
je
dec
cmp
push
fcoml
xchg
in
js
inc
stos
sub
dec
test
adc
icebp
femms
sbb
adc
test
inc
stc
cmp
repnz
lds
and
loopne
pop
stc
adc
lea
sbb
stos
and
repnz
mov
repnz
pop
and
push
shlb
aam
adc
pop
adc
ljmp
push
push
inc
movsb
shlb
dec
aaa
aaa
out
xchg
jno
mov
test
dec
xchg
cmc
xor
add
and
shll
and
add
nop
insl
les
cmp
aad
sar
mov
and
mov
push
xchg
aam
js
fistps
or
pop
in
cwtl
mov
push
add
mov
mov
out
rolb
dec
aam
clc
sub
ja
jge
pop
aad
int3
addr16
and
ret
rcll
mov
rclb
ret
inc
and
pop
dec
mov
movsb
sbb
lret
sbb
enter
test
sbb
push
inc
loop
adc
orl
mov
sub
xchg
sub
unpckhps
cmp
mov
adc
fcomp
adc
xor
push
pop
in
xchg
and
in
xchg
mov
mov
ffreep
add
dec
insl
and
call
push
sub
movsb
pop
sbb
cmp
ja
sbb
or
cmp
add
and
push
loope
inc
aam
xchg
xor
adc
mov
or
jle
imul
sti
pop
loope
or
clc
adc
inc
push
push
test
fsts
or
mov
push
fs
lock
test
push
or
cmp
test
add
cli
sub
cmp
jae
insl
add
jmp
push
add
popf
fsubl
je
add
or
fs
ret
and
jb
and
test
or
fsts
leave
sbb
loopne
jne
stc
call
sub
push
movsb
xchg
jbe
mov
cmp
fcomps
leave
test
or
cmp
pop
xlat
test
inc
aas
mov
bnd
sub
mov
pop
push
pop
cld
inc
add
inc
and
mov
rcr
xchg
aam
mov
or
and
sbb
inc
sub
cwtl
xor
pushf
dec
xor
push
lods
mov
mov
or
inc
test
mov
rcr
in
or
loopne
test
sbb
hlt
cmp
enter
jns
jne
add
daa
adc
cmp
and
cli
sete
shr
jp
sub
stos
add
push
mov
xchg
repnz
in
mov
out
cmp
jo
cmp
inc
out
testl
lret
and
les
jmp
xchg
inc
dec
xchg
ret
in
inc
adc
add
and
push
dec
pop
leave
adc
adc
shl
loop
dec
push
mov
push
sub
pop
xchg
xlat
loope
arpl
cmpsb
out
fsubs
testb
sarl
mov
mov
out
sub
lea
mov
call
addr16
xor
ret
cmc
ja
int
push
sbb
or
sub
mov
push
inc
or
hlt
jns
push
inc
xchg
cmpsl
push
push
or
xchg
insb
stc
outsb
into
cmp
mov
or
add
pop
popf
dec
bound
jmp
push
push
je
jge
dec
xor
pushf
jge
negb
movsb
inc
jnp
inc
and
cmp
push
add
or
jbe
dec
push
ja
inc
inc
push
xlat
and
je
lods
test
fisubrl
sub
nop
dec
adc
rcll
push
cmp
pop
cmp
push
scas
ja
shll
cmp
lretw
xor
fs
push
inc
pop
xor
sbb
add
or
jecxz
dec
jle
into
and
adc
inc
inc
inc
and
adc
and
adc
mov
xchg
and
sbb
or
or
out
and
sub
sbb
add
adc
mov
pop
or
sub
mov
mov
xor
stc
cmp
popf
cmp
add
xchg
les
adc
mov
cld
arpl
sub
jo
sub
data16
sub
inc
and
pop
test
xor
or
inc
sub
movsb
adc
and
xor
xchg
and
sub
in
jne
cmp
fs
and
xor
je
cli
repz
pop
cs
adc
and
cld
mov
aas
mov
lods
inc
lea
mov
and
sub
lea
fisubrl
andl
xor
mov
scas
cmp
clc
popf
mulb
jnp
hlt
xor
sbb
lods
mov
hlt
pop
lods
aad
sarl
inc
xor
or
add
fcmove
in
aas
in
rcll
and
inc
mov
and
daa
sub
addr16
fcompl
inc
std
stos
cltd
jne
aaa
cmp
dec
pushl
add
push
ja
push
in
or
clc
push
xlat
test
cwtl
stc
xchg
push
test
push
xchg
and
cmc
out
gs
cmpb
cli
cmp
sbb
icebp
cmp
or
nop
cmp
clc
hlt
and
mov
loop
loope
and
mov
jl
scas
mov
stos
jmp
cmpsb
sub
adc
arpl
orb
sbb
outsb
gs
jne
les
sbb
mov
shlb
dec
sub
cmpsl
testb
mov
sbb
inc
lret
cmpsb
sbb
cli
sbb
daa
and
or
inc
mov
push
cmp
pop
adc
mov
ret
cs
scas
out
push
sbb
xor
xor
in
xchg
movsb
cld
call
clc
call
nop
in
push
ja
bnd
pop
inc
hlt
sub
mov
sub
sub
inc
cmp
or
push
clc
lahf
data16
push
stc
adc
and
sbbl
sub
jns
inc
dec
test
pop
arpl
fadds
loopne
call
enter
pop
and
and
icebp
cmp
jbe
push
adc
les
sub
rcrb
push
imul
test
sbb
adc
and
dec
push
lahf
jmp
xor
in
xor
jno
movsb
cs
add
popf
in
sub
aad
push
cld
cmp
clc
das
clc
sbb
hlt
movsb
enter
xchg
scas
jb
jg
roll
shll
pushf
stos
testb
sub
frstor
imul
les
sub
mov
pop
xabort
and
or
popf
sub
mov
and
mov
test
sub
call
inc
cmp
xchg
popf
sti
xor
into
outsb
mov
mov
inc
mov
jno
in
sub
negl
inc
je,pt
mov
inc
mov
and
dec
pcmpeqw
add
pop
fdivr
adc
rolb
ret
add
mov
xorl
xor
mov
and
sarb
movups
add
int
jg
mov
ret
adc
sub
test
decl
pushf
jg
shlb
jge
repnz
push
pop
cmp
fcoml
data16
pop
cmc
addr16
int3
cmp
jb
mov
rcrb
je
bnd
sti
dec
scas
jmp
daa
xor
cli
xchg
add
push
push
sub
or
rcrl
enter
sbb
in
adc
sub
xchg
int
jno
sbb
mov
test
gs
push
negl
sub
or
dec
incl
adc
cmp
sub
dec
adc
pop
jge
or
popa
push
cmpl
xchg
add
or
or
xor
mov
movsl
and
nop
movsl
add
and
addr16
jmp
mov
xor
adc
push
mov
pop
xor
lcall
daa
inc
or
inc
rclb
and
les
inc
sub
sbb
adc
inc
or
ss
hlt
push
sbb
dec
push
movsb
lret
movsl
test
adc
arpl
and
pushf
adc
or
js
outsl
add
xor
mov
xchg
sub
mov
fldt
call
push
xor
sahf
add
adc
inc
ret
and
add
adc
and
xor
ja
dec
xchg
in
in
or
inc
arpl
inc
jnp
xlat
adc
cmp
jmp
or
or
add
inc
mov
hlt
jecxz
dec
sub
outsl
and
call
cmp
jle
mov
push
inc
dec
cld
sub
or
mov
out
or
jmp
or
mov
andb
xchg
pop
frstor
xchg
lock
ja
rcrl
and
adcb
fmuls
or
call
fistpl
sbb
clc
pop
add
push
mov
jb
sub
add
xorb
scas
bound
sub
test
div
test
mov
dec
dec
pop
xchg
adc
nop
in
xchg
imul
and
jge
mov
jo
cltd
pop
cwtl
dec
adc
test
or
dec
cmp
cmp
push
adc
adc
add
and
daa
jg
das
adc
add
mov
push
mov
push
cmp
push
mov
rclb
dec
push
push
cmpl
mov
jmp
or
adcb
push
or
xor
push
add
dec
and
adc
clc
add
das
cmc
inc
es
pop
rorb
push
dec
test
sbb
fsubs
or
xor
inc
addr16
cmp
inc
dec
xchg
push
and
push
inc
or
dec
aas
push
fwait
add
inc
sub
and
pusha
sub
pop
sbb
in
push
mov
xchg
dec
dec
rcrl
mov
jmp
jnp
jp
sbb
push
mov
scas
loope
in
insb
fwait
add
push
dec
clc
cmp
cs
movb
inc
cwtl
add
cs
jp
outsb
rorb
add
ret
xor
mov
inc
xchg
call
lcall
adc
repz
nop
fcoms
jo
call
jmp
sub
cs
mov
add
aam
daa
fwait
and
mov
out
mov
jns
lock
add
inc
lock
push
movsl
mov
lock
inc
imul
sub
sahf
nop
rcrb
rol
test
or
inc
enter
sbb
arpl
test
les
enter
js
xchg
ljmp
adc
inc
in
or
and
push
mov
cli
add
leave
ficompl
lock
pop
pop
test
and
outsb
icebp
repnz
sbb
mov
inc
call
cld
scas
jns
sub
das
int3
mov
cwtl
mov
jmp
jp
test
cmpl
sub
xchg
lea
fs
push
add
dec
out
add
dec
mov
cmp
adc
clc
enter
dec
ror
cltd
imul
sahf
int3
inc
sub
adc
add
xorb
mov
and
andl
notl
and
cs
inc
roll
push
add
mov
inc
adc
outsb
lret
or
adc
sub
unpckhps
jb
jbe
sub
mov
rorb
push
ds
dec
or
jl
jbe
sub
sub
sahf
test
cld
add
xor
push
xor
mov
sbb
jl
dec
loope
or
sti
push
jmp
dec
adc
jns
dec
movsb
imul
das
push
push
or
mov
les
mov
ret
lds
push
pop
imul
and
cmp
adc
bound
jns
push
add
push
cwtl
jmp
mov
enter
les
lea
inc
add
inc
daa
and
and
add
mov
jmp
sub
mov
jns
jb
icebp
les
mov
push
pop
and
jb
lods
dec
mov
pop
push
mov
decl
insb
stc
cli
push
loopne
and
leave
lock
lea
jmp
pinsrw
cmp
cwtl
insb
xor
flds
inc
clc
in
or
mov
push
das
push
inc
mov
or
mov
add
cld
pop
or
mov
add
and
dec
or
sub
adc
xchg
inc
in
or
bnd
mov
jmp
cs
add
dec
inc
inc
icebp
jns
mov
nopl
add
add
enter
mov
cmpsl
sub
ljmp
jb
xchg
ret
mov
add
mov
imul
popa
les
imul
lea
imul
lret
test
push
mov
adc
and
add
fmul
cmp
test
add
sub
leave
sbb
add
or
push
push
mov
xchg
cld
stos
stos
pop
outsb
fs
cmc
and
or
xchg
and
jne
mov
mov
cld
cmp
enter
cmp
jl
fs
push
sahf
xor
sbb
add
test
cmp
enter
test
add
pop
inc
stos
xor
push
xchg
inc
and
adc
std
xlat
int
dec
jp
cmp
push
jp
push
mov
add
dec
cmp
mov
in
cmp
inc
mov
xchg
jmp
xchg
mov
adc
xor
orb
stos
pop
and
aaa
mov
jl
lock
and
les
mov
lea
popa
jbe
shll
call
test
fs
jecxz
loopne
out
inc
loopne
scas
js
push
test
xor
gs
enter
mov
movups
push
mov
inc
mov
jmp
pop
and
xchg
adc
mov
push
pop
add
xor
daa
je
je
sub
sbbl
in
decl
adc
push
mov
adc
insl
fwait
dec
lds
add
adc
add
xchg
out
sub
fisubrl
jmp
fisubl
pop
inc
xor
dec
outsb
xchg
sub
and
sub
cmp
push
ds
das
push
adc
add
or
xchg
mov
das
jp
lret
daa
dec
adc
nop
lret
nop
adc
cld
loopne
inc
les
add
mov
pushf
cmp
cmpsb
sar
mov
pop
insb
out
ret
sub
mov
cmp
into
pushf
or
xor
dec
lods
add
inc
jmp
call
inc
push
mov
inc
sub
adc
inc
adc
push
sub
cmp
jmp
adc
sub
lds
mov
or
popf
mov
mov
fwait
or
add
sbb
sub
ret
outsb
mov
dec
adc
jp
in
ljmp
xor
pop
mov
dec
jp
int3
sbb
dec
int
or
add
jne
imul
dec
test
push
mov
mov
mov
dec
jne
mov
inc
pop
or
aam
flds
xlat
dec
cmp
int
test
fstpt
daa
loopne
loopne
bound
pop
inc
inc
sub
popf
jecxz
aam
push
ror
mov
pop
call
push
xor
push
mov
adc
push
call
das
cmpsb
aam
and
sbb
sub
adc
pop
aam
outsl
push
test
or
je
fwait
xchg
or
mov
cld
push
inc
xor
push
sub
aam
clc
shlb
jno
sbb
int
or
sub
pop
dec
inc
bound
or
mov
out
mov
adc
push
sysenter
adc
push
loopne
clc
fdivrl
jo
cltd
loopne
add
addr16
pushf
cmp
jle
clc
pop
les
lds
repnz
lods
mov
sbb
adc
lods
loope
jne
js
leave
in
cltd
pushl
out
push
into
clc
mov
pop
sub
push
movsl
imul
mov
or
pop
and
jbe
popf
cmp
and
xor
or
xor
xor
movsl
push
clc
daa
dec
and
cli
and
inc
call
loope
sub
cmpsb
scas
pop
adc
xor
lcall
sbb
jno
adc
jmp
adc
mov
adc
outsl
pop
sub
rolb
mov
cmp
jmp
sub
inc
push
lock
dec
cwtl
ja
xchg
je
xor
adc
inc
lock
inc
push
mov
cmc
bound
cs
adc
jmp
pop
mov
or
mov
xchg
stos
push
scas
cmp
push
push
ss
iret
cmpsl
mov
push
sbb
and
mov
or
mov
data16
adc
xor
dec
bound
pop
mov
jg
cltd
sbb
daa
mov
ret
adc
enter
aaa
push
es
push
int3
and
test
inc
xchg
mov
cmpsb
nop
popa
js
dec
cmp
cmpsb
sbb
sbb
int3
adc
lods
xchg
scas
adc
push
xchg
push
jge
jne
pushf
jne
push
or
push
mov
add
xchg
inc
sub
sbb
iret
fldt
sbb
add
sub
ds
push
aam
pop
lock
dec
mov
push
jo
mov
jb
cmpl
cltd
imul
mov
xchg
xchg
jg
addl
mov
xchg
add
mov
mov
subl
sbb
mov
push
icebp
xor
mov
aam
dec
std
fs
and
arpl
in
mov
rclb
add
cld
mov
fdiv
je
or
int
testl
xchg
mov
dec
subb
pop
mov
ret
imul
xchg
xor
rolb
les
sbb
call
daa
add
push
enter
fbld
insb
add
fstps
mov
or
and
or
and
add
mov
insl
enter
mov
inc
mov
fsubs
xor
inc
movsw
mov
xlat
lret
cmpsb
cmpsb
imul
repnz
loopne
int
jmp
fucomip
mov
adc
int
dec
adc
lods
dec
cmpl
in
pop
dec
inc
mov
aad
cmp
enter
dec
pushf
push
add
xchg
movsl
imul
sub
jb
adc
rcrb
les
stc
jo
fstp
jg
mov
pop
stc
outsb
xor
inc
ljmp
push
lea
cmp
fsubr
das
sub
fs
insb
pushf
xor
pop
jbe
shrl
inc
sbb
xor
adc
subb
movsl
mov
push
fcmovnb
sar
xor
mov
adc
xor
in
cmp
cmp
je
dec
inc
pop
inc
and
adc
or
xor
or
call
mov
mov
cmp
imul
inc
jp
sbb
rorl
ret
jmp
jns
inc
mov
enter
jns
or
jmp
loope
push
sbb
mov
inc
sub
dec
fiadds
xor
pop
sbb
into
inc
add
adc
rdmsr
loop
and
ss
aas
testl
add
mov
rolb
add
push
mov
lcall
mov
test
lcall
inc
and
pop
movsl
mov
push
xor
pop
test
fcmovb
jecxz
and
and
xchg
jp
add
gs
rolb
or
shrb
push
or
ss
and
xchg
movb
jg
sbb
adc
sub
pop
push
cld
xor
add
out
clc
cmp
xchg
xchg
pop
jne
jle
mov
adc
je
mov
dec
sub
push
jl
xchg
adc
sti
push
dec
jecxz
dec
test
inc
and
jae
cmpsb
fcoms
lods
lcall
outsb
imul
addr16
push
or
pop
mov
mov
push
sub
cld
inc
int
jns
mov
adc
mov
jo
jp
adc
xor
cmpsb
out
leave
sbb
in
std
jecxz
push
jl
dec
jne
xor
dec
pusha
mov
loope
push
jge
fisttps
imul
pushf
push
fwait
dec
xor
fisubrs
push
dec
mov
push
sub
or
test
test
loop
shlb
jns
js
mov
sbb
jae
mov
jbe
fwait
add
fdivrl
push
call
add
xchg
int3
sti
cmp
sub
stos
xchg
sbb
dec
out
dec
xor
dec
cs
push
xor
sbb
fiadds
mov
in
and
adc
lahf
loope
jne
sbb
sub
dec
fsubr
push
inc
out
or
xchg
mov
cli
mov
lea
in
cld
dec
inc
pop
addr16
lret
jmp
lock
push
mov
subl
bound
popa
fildl
mov
push
test
adc
or
inc
xor
cltd
mov
clc
mov
push
cld
mov
std
cmpsl
popl
and
dec
movsb
adc
shll
dec
aam
ret
sbb
cld
aas
popf
gs
loop
mov
les
sub
adc
cltd
push
push
sbb
test
movsb
mov
arpl
cmp
inc
inc
and
inc
jbe
shrb
xchg
outsb
sub
jmp
push
ds
mov
jo
xchg
lret
leave
clc
push
insl
or
push
and
inc
lret
std
das
out
stc
inc
cmpsb
xor
mov
shrb
xchg
loope
mov
mov
pushf
add
neg
loopne
add
add
mov
inc
dec
jne
mov
decb
or
and
jmp
rep
ja
xchg
dec
dec
arpl
ret
cmp
sub
dec
iret
fsubl
xchg
lods
push
pop
push
mov
cs
mov
push
nop
mov
dec
sbb
xchg
pop
imul
outsb
jae
daa
mov
std
add
hlt
cli
add
pop
xchg
fmul
fsubs
ljmp
stc
push
push
mov
or
mov
aam
mov
dec
push
aam
adc
pop
push
jmp
fwait
inc
dec
pushf
push
and
add
enter
push
pop
xchg
mov
push
pop
push
repnz
mov
inc
sbb
aam
and
cmc
and
dec
adc
shr
dec
and
clc
push
mov
scas
pop
dec
xchg
xlat
adc
clc
xchg
and
push
xchg
add
in
cmp
cmp
mov
scas
lock
fmull
or
xchg
lcall
arpl
jl
call
decl
or
mov
cmp
or
jmp
pop
cmc
mov
jmp
mov
fwait
outsl
adc
inc
mov
jmp
mov
fmuls
or
or
ss
dec
lock
leave
lods
in
mov
fcompl
frndint
adc
add
movsl
xor
jne
adc
int
jl
popf
movsl
dec
scas
mov
mov
sub
adc
and
in
and
imul
stc
lods
or
rolb
cmp
clc
scas
mov
xorb
movsb
push
hlt
sub
pop
fdivs
movsl
les
add
and
and
mov
push
and
lock
nop
hlt
xchg
sub
add
call
movsb
daa
or
sbb
dec
sti
sbb
popa
inc
pop
xor
xchg
test
push
imul
invd
hlt
daa
bnd
lock
jmp
pop
sbb
test
mov
call
clc
scas
mov
dec
cmp
jb
sbb
xor
xchg
pusha
shlb
push
jo
sar
cmpsb
or
and
adc
shl
xor
mov
sar
js
aaa
aam
jmp
inc
jge
mov
lret
mull
sbb
jle
sub
sbb
nop
lds
pop
pop
adc
push
or
aaa
sub
nop
shrl
cmp
mov
gs
jl
adc
sbb
mov
mov
or
es
mov
imul
jp
jnp
jge
out
hlt
adc
xor
add
int3
mov
or
mov
inc
lret
pop
test
jmp
sbbb
cmpl
je
and
cmp
repz
pop
ret
test
inc
cmp
int
or
jne
out
cmp
insb
xor
cli
push
ss
pop
xor
scas
xlat
adc
mov
push
out
mov
mov
fiadds
add
and
jne
je
sbb
insb
adc
adc
icebp
rclb
int
or
icebp
pop
inc
pusha
test
mov
test
push
jae
add
add
or
adc
jns
nop
call
sbb
sub
push
jl
imul
sbb
divl
mov
rol
sbb
sarl
loopne
in
sbb
xor
inc
mov
inc
fwait
arpl
sub
and
or
lret
lcall
adc
imul
out
popa
sbb
call
jge
adc
ret
sbb
mov
pop
cwtl
lods
call
cmp
and
and
push
push
mov
in
adc
xor
sbb
xorb
sbb
in
sub
mov
mov
out
inc
data16
or
add
adc
dec
cmp
cmp
xchg
in
incb
add
jmp
push
test
xchg
inc
mov
mov
mov
sbb
jne
push
call
arpl
mov
push
jl
jb
xor
sub
jmp
xchg
cmp
cld
push
mov
orb
lcall
loop
push
or
and
pusha
decl
and
inc
addb
popf
push
jae
adc
xor
call
pop
shrl
leave
std
inc
xor
es
and
dec
adc
cmp
cmpsl
push
and
hlt
mov
push
cs
push
xor
inc
imul
xor
cmp
ljmp
inc
or
add
pop
pop
dec
pop
xlat
inc
adc
mov
push
lea
mov
jl
sbb
and
enter
jns
xor
sbb
mov
mov
subb
jmp
lea
cmpsb
sbb
adc
push
dec
lods
out
rcrb
inc
int3
cwtl
mov
pop
add
enter
cld
cli
cmp
adc
push
and
or
movb
cmp
xchg
divb
dec
ret
popa
jb
out
xchg
sbb
xchg
cmp
jle
inc
add
and
shlb
repnz
or
adc
xor
nop
test
das
push
fcoms
sar
pop
dec
jne
stos
hlt
sub
adc
add
jne
push
shlb
push
int3
ss
xchg
test
xchg
pop
cmp
sub
fstp
adc
in
push
sbb
loop
pop
inc
mov
xor
add
fidivrl
or
push
mov
imul
add
test
jl
and
data16
inc
pusha
clc
lret
cmp
aam
mov
jae
ret
imul
jns
ljmp
xchg
jae
icebp
add
push
add
sub
sub
leave
shl
lret
dec
stc
das
xor
sbb
je
mov
add
cs
jmp
xchg
aad
and
dec
mov
loopne
mov
and
sub
push
lret
sbbb
cmp
jb
adc
jmp
sub
in
sub
mov
je
jbe
pop
or
or
ret
push
mov
xchg
lock
cmpb
enter
aam
in
cmp
sub
lods
mov
xchg
sbb
adc
add
stos
lods
xchg
mov
imul
mov
and
add
in
and
mov
xor
xchg
int3
pop
jmp
jne
nop
and
loop
repnz
lock
xchg
and
ds
mov
ret
lds
or
mov
lea
aad
xchg
lods
dec
lock
fidivl
or
je
mov
cltd
pop
cld
bound
mov
xor
or
mov
mov
je
mov
test
and
stos
mov
adc
mov
loop
stos
adc
movl
cmp
adc
hlt
mov
sub
adc
fmuls
call
adc
xor
int3
mov
and
dec
loope
dec
cmp
mov
mov
pop
js
pop
aaa
mov
sbb
xor
mov
jne
aas
inc
leave
xor
xchg
bound
js
popa
xor
dec
sub
mov
aam
sar
adc
cmc
adc
sbb
fists
shrb
sbb
xchg
adc
add
popf
aam
mov
jmp
pop
pop
inc
add
pop
mov
popa
mov
pop
push
xorb
xor
addb
aas
aaa
cmc
stos
and
mov
adc
adc
inc
loopne
lret
imul
lock
ds
test
or
push
in
ja
ret
mov
adc
jmp
adc
and
mov
fdivrs
loop
or
orl
jb
loop
inc
add
dec
sub
sub
aam
adc
pop
or
ja
or
mov
daa
enter
sub
mov
cmp
stos
test
adc
jg
inc
dec
add
sbb
and
mov
and
push
insb
pusha
stos
cmp
inc
lret
push
inc
inc
inc
xor
xchg
stc
std
mov
das
rcrb
ret
mov
lock
jo
lods
mov
jno
das
daa
mov
pop
lock
cmp
add
sub
push
cmp
and
lea
or
mov
paddsb
stos
dec
test
ljmp
sub
mov
pop
adcb
repz
or
repnz
inc
and
or
adc
pop
cmp
je
orb
push
xor
jecxz
dec
fnstenv
divl
add
movsl
push
imul
cmpl
dec
and
rorl
inc
fcomp
jl
pop
or
push
movsb
imul
mulb
movsl
jnp
and
inc
sbb
push
jns
lods
or
iret
or
call
or
pusha
sbb
lods
mov
inc
dec
arpl
and
mov
fidivs
adc
xor
adc
push
push
les
data16
imul
out
push
or
movb
or
or
imul
xor
push
cld
inc
aam
sub
push
push
pop
loopne
adc
fld
roll
sub
fadds
ret
rcrl
adc
rorl
dec
mov
add
or
xor
stos
inc
iret
in
test
pop
fiaddl
pop
sub
jg
or
out
lea
pop
ljmp
fdivs
cmp
push
fmul
push
cmp
lock
daa
adc
sbb
jmp
pop
xor
pop
std
mov
dec
into
adc
fwait
aam
mov
mov
push
push
mov
insb
mov
test
push
mov
popa
jne
dec
and
iret
or
pop
mov
adc
jecxz
add
sbb
push
inc
and
xor
dec
fldt
sub
mov
aas
dec
syscall
dec
jne
dec
jp
and
in
rorb
mov
sbb
scas
add
adc
pop
outsl
pusha
xchg
push
mov
cs
roll
add
cmp
jbe
mov
js
vunpckhps
pop
xor
stc
or
add
movsl
jmp
pop
mov
sbb
loopne
xor
xor
lea
stc
xor
and
dec
enter
and
mov
add
imul
inc
mov
pop
int3
or
mov
cmpsb
sub
movsb
and
inc
inc
inc
or
mov
out
cltd
paddusb
aam
int3
and
dec
mov
mov
mov
adc
mov
dec
lock
dec
clc
mov
lea
les
xchg
call
mov
inc
adc
inc
sbb
mov
and
sahf
inc
or
cli
nop
adc
movsb
push
push
aad
inc
sub
lea
jl
cmp
or
adc
nop
cli
xchg
adc
shl
push
nop
mov
les
and
adc
lock
add
dec
mov
inc
push
mov
rcrl
out
and
out
jle
mov
aam
lods
loop
lret
scas
inc
inc
pop
sub
inc
pop
mov
enter
pop
and
je
xchg
adc
pop
and
shlb
pop
and
shlb
pop
and
rorb
sub
sbb
mov
mov
mov
adc
mov
and
fisubs
pop
jns
inc
fcoml
push
and
mov
sbb
and
dec
bnd
and
dec
aam
xor
pop
pushf
mov
sub
xor
cwtl
daa
mov
call
fnstcw
lea
or
jg
stc
test
test
mov
push
imul
inc
or
sub
jmp
stos
pop
aam
dec
je
mov
push
hlt
xchg
roll
push
call
test
lahf
sbb
faddl
cld
lock
movsl
sub
jg
call
sbb
jbe
pop
js
xchg
fstp
mov
ret
push
xchg
jge
mov
xchg
jmp
mov
jl
and
xchg
adcb
ret
in
and
mov
mov
xor
in
movsb
jbe
aas
mov
adc
cmp
mov
add
add
loope
adc
adc
mov
loopne
daa
add
or
sahf
add
xor
pusha
jo
mov
mov
lahf
and
add
hlt
fstcw
jge
aaa
es
or
fistpll
jae
sbb
jge
or
outsb
xor
test
mov
mov
and
jl
adc
jae
call
mov
adc
cld
xchg
inc
mov
fucom
and
scas
stc
push
das
and
inc
cmp
movsl
sbb
cmpsl
mov
mov
push
xchg
pop
loopne
xchg
or
inc
push
pop
pop
sbb
adc
pop
xor
lcall
incl
push
dec
xchg
sti
jl
ret
add
and
push
bound
popf
jmp
adc
mov
mov
pop
adc
push
jb
and
xor
inc
dec
sbb
xchg
inc
sub
sub
and
sub
add
les
stos
lret
mov
pop
inc
xchg
mov
xchg
and
adc
sub
in
xchg
lock
dec
bound
sbb
mov
into
shlb
cmp
sub
addr16
test
movsl
cmp
adc
ret
pop
sbb
pop
les
xor
dec
notl
mov
rclb
mov
sbb
mov
mov
in
shr
daa
in
pusha
stos
mov
jmp
pushf
ja
gs
int3
insl
clc
movsl
fcoml
fdivs
mov
int3
push
fiaddl
scas
push
aam
inc
imul
and
mov
lret
pop
sbbb
fsubrs
adc
int3
cs
adcb
mov
sub
popaw
imul
das
sub
jp
out
mov
hlt
cmpsb
push
inc
adc
push
inc
adc
cmp
je
push
dec
sbb
and
daa
jns
fcomp
lahf
sbb
in
sbb
or
jge
sbb
inc
clc
push
xchg
stc
popa
mov
adc
jo
das
pop
dec
pushf
or
pop
cmp
push
fistps
push
iret
movb
lea
bound
cmp
or
andl
std
fwait
pusha
mov
dec
push
mov
and
inc
mov
inc
cmp
js
ja
add
divl
sahf
adc
xchg
and
sub
and
push
test
test
mov
inc
pop
inc
loopne
inc
dec
push
sub
out
pop
adc
lods
push
add
lret
push
sub
push
pop
dec
loope
cltd
bound
or
mov
inc
mov
lea
fcompl
or
mov
aad
xor
push
out
arpl
call
jmp
fs
pop
xchg
mov
pop
cli
and
push
imul
sarb
adc
xor
pushf
inc
mov
mov
push
or
dec
pop
mov
inc
jbe
or
pop
pop
sbb
xor
data16
push
bound
push
aam
dec
add
inc
test
pop
add
xchg
fs
or
push
mov
mov
dec
jecxz
in
inc
aas
xor
sub
and
sbb
adc
or
add
cld
xor
pop
mov
loope
or
pusha
enter
sbbb
mov
push
inc
test
nop
std
mov
subb
adc
or
push
jl
test
pop
xchg
xor
pushf
or
mov
js
scas
aad
lahf
aaa
or
pop
sbb
icebp
push
xlat
daa
rcl
lds
and
sub
iret
dec
aad
stos
cmp
stos
lds
mov
rolb
je
daa
cmp
scas
push
repz
cmp
scas
lock
fs
mov
in
ror
roll
mov
test
leave
push
bound
test
xor
mov
dec
sub
or
jo
sub
inc
adc
xchg
push
adc
sub
call
mov
adc
bound
fstpl
lahf
dec
dec
mov
push
adc
push
rorb
stos
inc
pop
sub
es
call
test
mov
jmp
dec
cmp
test
mov
call
adc
adc
sbb
scas
adc
xchg
mov
jbe
cwtl
mov
call
out
jmp
pop
call
and
xor
dec
loope
add
xchg
and
shlb
mov
jnp
jno
add
dec
pusha
daa
pop
jmp
iret
sbb
or
pushf
loop
and
or
repz
into
fcoms
mov
in
xchg
ja
jae
test
mov
pop
lret
sub
repnz
fistl
call
and
or
mov
xchg
stos
or
out
mov
sbb
stos
inc
and
cmp
xor
loop
out
push
push
leave
inc
sbb
sub
xchg
dec
adc
bound
push
mov
jmp
adc
jae
daa
addr16
shl
or
add
and
inc
dec
sbb
mov
call
push
call
out
pushl
dec
dec
push
test
adc
enter
fbld
and
push
ret
fisttps
fcomps
jle
fs
test
js
xor
pop
aaa
int3
aad
inc
mov
adc
cmp
pop
inc
sub
in
sbb
push
clc
push
mov
mov
stos
adc
loop
negb
imul
insb
and
mov
dec
sbb
or
add
aad
outsl
bound
inc
decl
repz
dec
insl
inc
std
cmp
mov
out
mov
hlt
xor
mov
clc
mov
jp
cmp
lret
popf
mov
xchg
jns
cmpsl
jle
mov
fwait
push
in
in
cmp
pushf
mov
sub
or
cltd
sbb
mov
or
shr
inc
popf
loope
pop
nop
xor
jb
je
jbe
add
or
jne
div
mov
mov
jle
add
add
jb
cmp
push
ja
push
pop
xor
add
lcall
mov
push
outsl
movsb
std
dec
or
lds
jmp
dec
outsl
adc
enter
or
insb
and
pop
addr16
sub
and
fists
mov
popl
scas
inc
dec
xor
lods
test
inc
insb
dec
push
sub
mov
sbb
adc
loop
sub
push
les
pop
adc
cwtl
inc
shll
push
fnstcw
daa
enter
sub
mov
sub
mov
mov
pop
pop
test
jge
push
dec
sbb
shl
bound
xchg
ret
shll
and
stos
and
popa
jl
sbb
jp
or
inc
mov
add
cmpl
add
leave
push
jg
pop
and
mov
dec
xlat
add
adc
push
adc
inc
mov
mov
mov
push
shrb
fstpt
mov
or
and
jmp
inc
pop
pop
xchg
in
or
sbb
pop
mov
fwait
push
cmpsb
sbb
lods
mov
inc
mov
add
sarl
cmpsl
mov
mov
repnz
push
add
mov
add
pop
push
push
mov
mov
cmp
dec
int
popa
test
push
or
movsb
push
xchg
pop
pop
pop
adc
inc
adc
mov
int
or
adc
mov
fwait
mov
adc
shlb
push
jg
pop
cwtl
inc
cld
dec
jmp
inc
aad
sub
fildl
push
lret
adc
clc
push
dec
xchg
adc
repnz
mov
enter
sbb
xor
push
mov
sbb
mov
inc
mov
shl
jne
mov
gs
jo
add
inc
adc
inc
pop
test
push
outsb
es
xorb
les
outsl
and
pop
cmpl
das
sub
xchg
out
xchg
or
xor
adc
pop
add
or
pop
je
cwtl
xor
xchg
push
inc
lods
jno
int
dec
mov
mov
sub
pusha
scas
dec
push
rcrl
popf
add
repnz
inc
out
xlat
mov
test
add
cmp
jne
inc
inc
dec
negb
cmp
xlat
inc
orl
xchg
adc
mov
pop
jecxz
inc
pop
mov
push
loopne
subb
cmpsl
fsubs
popf
dec
adc
mov
add
or
push
std
les
lret
out
sbb
jbe
push
adc
and
loop
cmp
push
bound
loop
or
sbb
sub
icebp
add
mov
push
xor
mov
sub
cmpsb
inc
push
int3
push
adc
push
in
shl
rolb
arpl
sti
rol
pop
imul
xor
addb
adc
jne
in
dec
lods
leave
inc
mov
cwtl
vpsubd
cmp
xchg
mov
daa
dec
mov
in
mov
stc
mov
aam
xchg
add
cmp
xchg
push
movsl
adc
add
inc
orl
lock
add
pop
add
imul
fprem1
jmp
jb
mov
or
repnz
mov
mov
sbb
fs
cmp
fldenv
mov
clc
bound
push
out
pop
in
push
sbb
loope
pop
sahf
cmp
fcoml
xchg
out
sub
test
jle
push
or
or
stos
and
mov
xchg
jns
xchg
ret
add
jns
gs
stos
pop
mov
lods
cmp
data16
movzbl
mov
jb
add
ja
sub
sub
mov
ljmp
push
ret
or
out
push
loope
int
inc
pop
jmp
mov
jp
push
jmp
in
sti
jae
lock
xchg
in
or
aas
ljmp
xor
xor
cmp
fiadds
clc
je
inc
or
mov
xchg
dec
scas
fxtract
push
push
pop
icebp
adc
add
popf
jmp
push
ret
aad
and
mov
push
add
sahf
inc
or
push
aaa
cltd
xchg
pop
add
push
adc
pop
and
pop
sbb
movsb
pop
or
call
mov
mov
or
arpl
adc
adcl
adc
or
repz
and
inc
adc
sub
dec
dec
mov
sbb
lidtl
push
insb
sbb
adc
mov
and
orl
cltd
test
mov
into
iret
or
int
les
or
shll
call
pop
pushf
icebp
xlat
cmp
aam
mov
xchg
les
ljmp
inc
pushf
push
pop
mov
adc
mov
repz
xchg
cwtl
outsb
adc
ja
and
ret
cmc
gs
and
inc
cmpsl
dec
mov
shlb
add
std
jns
test
pop
aad
mov
xchg
mov
aas
test
xchg
and
bound
and
or
add
jmp
movsb
adc
sahf
jno
push
mov
pop
mov
add
jl
mov
jne
sub
xchg
inc
xchg
out
movsl
xor
call
jb
pop
jge
int3
nop
lahf
orl
test
sbb
stc
adc
mov
je
add
sub
add
imul
sti
pop
push
pusha
and
cmp
pushl
sbb
aam
add
add
aad
add
pop
cmpsl
cmp
call
cmpb
sub
mov
or
push
movl
ja
in
inc
adc
clc
add
aaa
push
dec
test
and
je
lahf
xchg
cmpb
push
sub
or
or
test
addr16
jo
inc
cmp
pop
inc
sub
jl
or
bound
push
push
jecxz
push
movsl
push
test
jmp
inc
dec
loope
sub
inc
and
mov
nop
aaa
xchg
xchg
mov
adc
and
pusha
pop
pop
mov
lds
mov
inc
push
sbb
or
das
or
jne
push
mov
nop
mov
jmp
enter
hlt
enter
lret
jns,pn
push
andb
ficompl
pop
dec
orb
mov
dec
mov
fiaddl
and
imul
xchg
xor
mov
pop
xor
jle
mov
inc
pop
sbb
test
out
out
hlt
negl
push
sbb
and
mov
add
lea
and
sbb
out
adc
push
loopne
sbb
push
mov
add
adc
ljmp
leave
rorl
sub
adc
pusha
inc
cmpb
aam
adc
test
inc
inc
imul
cmpsb
lret
cli
adc
punpckhbw
inc
push
call
insb
movsl
loopne
push
push
inc
test
rcll
jne
stos
inc
add
dec
sub
or
test
ljmp
mov
cld
push
push
pusha
outsb
mov
cmp
mov
xor
inc
xchg
sub
xor
jl
bound
mov
aad
mov
pop
pushf
pop
push
scas
mov
sub
ror
ss
nop
inc
jmp
cmpsb
push
mov
push
or
cmp
aad
sub
pop
jmp
mov
xchg
sbb
leave
or
outsb
mov
mov
inc
inc
dec
xor
dec
rcl
add
mov
iret
sub
and
push
pop
mov
inc
mov
les
push
dec
lods
jecxz
je
insl
icebp
push
push
and
outsb
enter
push
dec
fmul
dec
mov
xlat
popa
test
stos
daa
mov
cmp
mov
push
adc
lcall
mov
adc
cli
popa
cmp
mov
adc
mov
and
repnz
fiaddl
ds
inc
dec
mov
add
std
insb
orl
das
stos
pop
xor
adc
je
push
shrd
pusha
popl
sub
adc
mov
push
push
repz
mov
inc
sub
mov
mov
sub
dec
push
xor
push
dec
push
adc
push
push
sub
sub
sub
cmpsb
xor
int3
xor
aam
in
xlat
enter
push
pushf
mov
icebp
adc
in
mov
inc
imul
mov
sub
cmpsb
fcompl
xchg
outsl
fsubs
mov
inc
enter
enter
xchg
aaa
outsl
mov
dec
inc
in
cltd
push
inc
push
int3
fwait
cmp
or
push
js
test
and
es
sub
and
adc
mov
shlb
xor
or
inc
test
mov
out
or
inc
mov
out
adc
repnz
xor
add
dec
insl
insb
adc
out
test
sub
add
push
call
cmp
pop
sbb
jne
xchg
shrl
testb
and
stos
sahf
jno
cmp
leave
push
dec
adc
sbb
stos
insl
hlt
add
mov
scas
scas
or
fmuls
sub
pop
or
iret
pop
pop
stos
sub
lock
int3
mov
adcb
ret
mov
pop
pop
mov
sbb
mov
fs
je
push
jmp
adc
aam
clc
cmp
fldln2
outsb
lret
cltd
adc
mov
leave
add
or
call
insb
outsl
mov
stc
lahf
push
xor
test
xchg
clc
pop
pop
test
call
out
std
scas
inc
movsl
in
adc
data16
dec
shlb
sahf
pushw
idiv
cmc
pop
jl
lds
jnp
mov
jle
jbe
adc
mov
add
bound
ss
mov
sbb
popf
xor
cmp
mov
add
sbb
mov
movsb
cmp
dec
pop
pop
test
ficoml
add
jp
scas
in
inc
or
push
clc
adc
adc
dec
or
push
and
inc
pop
jnp
rolb
xor
and
mov
lcall
xor
leave
and
jp
lret
xchg
mov
arpl
pushf
push
and
rcrb
jne
hlt
push
or
adc
inc
ds
sub
cmp
adc
int
inc
icebp
mov
and
xor
cmp
push
nop
cli
inc
add
mov
and
mov
pop
xchg
jno
add
push
in
push
loopne
or
lret
adc
xor
push
xchg
in
mov
and
out
std
lods
inc
pop
jne
sub
mov
lret
cwtl
jmp
and
and
jle
rcll
mov
shrb
inc
or
aaa
lret
and
dec
xchg
mov
lcall
jmp
out
mov
imul
push
mov
fisubs
xor
mov
jns
mov
es
je
xor
inc
enter
jno
addr16
adc
or
or
sub
ret
sub
inc
pusha
push
dec
pop
jl
inc
int
cmp
pop
sub
mov
or
cmpsb
mov
out
fdivs
sbb
jns
mov
push
nop
mov
mov
xchg
rorb
add
adc
mov
adc
adc
dec
jne
sbb
adc
push
jmp
ljmp
pushf
enter
adc
pushf
jge
and
and
mov
shlb
cmp
mov
xor
pop
cmc
iret
movsb
ljmp
in
dec
pop
or
pop
testl
subb
mov
adc
inc
and
jnp
rcrb
jbe
jl
mov
push
subl
pop
pop
test
mov
sbb
js
dec
push
call
insb
cmp
mov
push
test
and
jns
sarb
sbb
xor
jmp
mov
xor
sbbl
adc
pop
mov
dec
and
jbe
movb
or
sub
popf
and
shrb
xchg
fs
or
ret
ficoml
or
pushaw
dec
inc
sub
jle
mov
enter
lcall
sarl
ret
aaa
cmpsl
mulb
dec
lds
ja
xchg
test
std
cmp
adc
imul
mull
ror
in
jmp
aas
loop
aam
sub
push
mov
lock
daa
adc
and
bound
push
inc
add
sarl
and
pop
jb
and
decl
adc
sub
ss
add
inc
loope
adc
mov
add
inc
loopne
mov
filds
add
int3
add
or
mov
fwait
push
cli
adc
shrb
insb
cmpl
sahf
push
outsb
popf
push
es
adc
sbb
imulb
and
sbb
cld
test
sahf
jne
xor
add
sbb
mov
add
repnz
mov
adc
and
lret
add
lds
inc
inc
mov
inc
mov
dec
mov
lock
shrb
cmp
ja
cwtl
push
push
clc
and
add
pop
fmuls
sub
xor
push
adc
and
in
scas
shlb
adc
rcrb
movsl
stc
bound
adc
ficoms
cli
loope
jmp
xor
mov
push
push
xor
jmp
sub
orl
jae
xchg
pop
xchg
adc
test
cmp
push
repnz
fs
fcoml
xchg
add
xchg
sar
dec
push
je
mov
sbb
sahf
inc
lret
jb
jle
jb
jae
fisttps
mov
pop
push
cs
push
dec
enter
je
insb
sub
popf
inc
aaa
cmp
and
jmp
push
mov
jnp
mov
push
inc
lds
xor
and
pop
ja
dec
dec
cmpsb
testb
dec
push
pushf
sbbl
mov
dec
mov
out
inc
sbbl
outsl
sub
out
fmull
jns
lret
pop
or
fadds
les
stc
iret
ds
and
mov
add
mov
clc
jmp
add
lock
dec
das
pop
push
loop
gs
add
ja
inc
jns
or
xor
push
fldcw
int3
pop
idivl
jmp
rol
enter
inc
pop
es
sarb
int
and
dec
xchg
jl
int
push
shr
add
rclb
inc
sti
ret
jp
lds
and
mov
es
dec
aad
adc
fwait
daa
int3
dec
fwait
cmp
lcall
imull
out
and
sbb
ret
mov
push
hlt
inc
enterw
cmpsb
push
cmp
addr16
dec
dec
lods
cwtl
xchg
loope
inc
dec
push
xorb
adc
or
pop
nop
sub
adc
jmp
outsb
lds
lods
or
xchg
fisubrs
cmc
cmp
insl
and
push
fldt
test
in
inc
jmp
int3
cmp
lcall
mov
inc
loopne
call
pop
sub
pusha
cs
pusha
push
and
add
cltd
shl
add
push
ret
jno
imul
jno
in
sub
mov
into
cmp
hlt
xchg
dec
fchs
adc
xor
mov
xor
mov
nop
subb
imul
sub
je
adc
push
clc
imul
xor
xchg
dec
and
es
dec
in
sbb
push
cld
adc
mov
xchg
hlt
lahf
push
inc
sub
cmp
xchg
inc
sub
push
mov
ret
cmp
iret
js
sbb
stos
pop
or
das
push
or
push
pop
in
add
jnp
xor
mov
and
jmp
xchg
and
mov
shlb
xchg
movsb
loope
out
ret
dec
mov
ficomps
mov
das
addb
imul
pop
inc
cmp
cmpsb
adc
pop
nop
addr16
cmpsl
xchg
push
sub
mov
add
push
jl
xchg
mov
and
sbb
adc
add
mov
xchg
add
call
inc
sbb
test
and
inc
add
dec
lcall
sbb
sub
push
xlat
and
cmp
adc
xor
aas
cmpsb
enter
lret
or
add
add
call
stos
daa
fnstsw
in
and
sub
pop
out
mov
jae
add
or
mov
shll
mov
in
jl
sub
cmp
mov
ljmp
jbe
shr
in
out
popf
cli
inc
push
and
dec
shld
jae
inc
daa
or
bnd
inc
xchg
cmp
mov
adc
rolb
das
repnz
shr
pop
ljmp
xor
adc
mov
and
add
fiaddl
mov
lret
add
in
add
enter
nop
push
in
test
mov
mov
sub
sar
cmc
and
adc
or
cmp
jo
push
inc
or
cmp
push
rcrb
jae
mov
ljmp
mov
test
lret
aad
addr16
orl
stc
iret
loope
dec
repnz
adc
lock
inc
and
mov
or
add
and
mov
push
in
mov
and
xchg
mov
nop
cli
mov
mov
ljmp
es
xchg
sbb
add
clc
loopne
push
jle
repz
or
xchg
xlat
or
out
inc
inc
ss
movsb
in
repz
adc
stc
add
movsl
pushf
dec
and
sbb
xchg
dec
nop
push
lret
in
push
daa
adc
bound
aam
jo
arpl
movsb
data16
jns
cmp
je
insl
push
cwtl
fs
je
push
cmp
addb
jecxz
aam
jl
cmp
enter
aam
aam
mov
jno
int3
xchg
or
decl
jg
mov
std
sahf
or
adc
ficoml
rol
fisttpll
idivb
or
push
lret
sbb
insl
and
adc
adc
rclb
enter
pop
mov
popa
and
mov
ror
mov
cmp
cld
adc
enter
bound
call
jge
or
jecxz
loope
addr16
pop
mov
mov
cs
push
adc
or
adc
leave
sub
daa
add
stc
icebp
sti
scas
sbb
cmp
sub
inc
les
test
mov
mov
mov
mov
lods
loope
or
inc
mov
enter
bound
or
mov
inc
adc
cmpsb
adc
and
add
cltd
add
inc
mov
cmp
inc
xchg
xchg
fcoms
and
mov
mov
lods
or
mov
cmp
xor
xor
push
lods
popf
mov
movsl
sti
and
inc
or
adc
fs
push
ret
add
sub
loop
mov
jg
sti
or
sub
mov
fsts
or
adc
inc
insl
enter
xor
dec
mov
movl
and
push
ljmp
jae
popf
jo
dec
inc
push
lods
cmp
jns
lcall
adc
dec
subb
psadbw
sbb
jae
dec
scas
enter
shll
pop
aas
and
and
and
mov
mov
sub
fisttpl
outsl
int3
dec
cmp
sahf
xchg
sub
xchg
ret
xor
xor
rcrl
pushf
mov
inc
push
jp
fs
jo
loop
jne
xchg
insb
adc
pop
mov
fistps
adc
mov
ja
mov
add
add
stc
mov
and
adcb
test
pop
rcrb
lahf
and
xor
test
enter
inc
or
mov
mov
rol
cmp
es
and
or
lret
les
addr16
inc
imul
lea
outsl
mov
pop
dec
pop
jmp
cmp
fnstenv
jl
jl
lahf
shl
scas
fldt
xor
pop
jmp
xor
shl
rolb
mov
fldcw
std
fdivrs
shlb
aas
inc
jle
xor
cmp
in
sub
push
add
push
xchg
pop
push
dec
js
ja
jnp
stos
push
imul
pop
loopne
or
mov
fbld
stc
or
sbb
adc
and
into
jmp
lret
bound
ret
mov
inc
addb
xchg
sbb
add
movb
add
movsl
add
test
push
push
adc
js
push
add
pop
cld
lea
shrb
popf
movsl
mov
in
dec
stc
add
cmp
js
movb
repz
cli
push
mov
mov
push
sbb
inc
or
mov
adc
rorb
xchg
adc
sahf
jmp
mov
push
sub
movsl
push
add
pop
and
jbe
or
push
sbb
adc
ficoms
and
add
inc
sub
inc
cld
mov
sub
inc
mov
dec
popf
shll
cld
dec
pop
cld
cld
mov
cli
mov
loop
adc
pop
cmp
fnstenv
ds
xlat
or
rclb
shl
outsb
add
pop
in
dec
xchg
cmp
jne
lock
in
adc
leave
adc
in
sub
out
sub
loope
dec
mov
cmp
mov
xchg
pusha
cld
push
push
jmp
inc
adc
mov
push
adcb
dec
je
inc
and
inc
sbb
cltd
leave
jnp
pop
inc
clc
jmp
in
push
lcall
movl
lret
xor
sub
aam
je
cmc
mov
and
loope
and
sub
sub
inc
aam
hlt
jmp
dec
repz
lods
and
lret
push
inc
repz
daa
popa
shll
xchg
add
adc
inc
adc
das
dec
push
adc
xlat
dec
pop
pop
xor
scas
lock
int
out
push
sub
sub
aaa
cmc
cltd
push
cmp
adc
jge
inc
nop
cs
and
mov
xor
lock
sub
nop
push
jmp
lods
mov
fdivl
xor
jmp
aam
push
int3
outsb
or
sbb
mov
in
repnz
pop
push
repnz
aam
lret
mov
test
cld
outsb
xchg
cld
inc
pop
sub
sub
movzbl
popa
or
insb
std
mov
xor
rclb
stos
cmp
adcl
jb
in
jle
push
dec
ror
xchg
and
out
push
sub
out
test
pop
add
xor
push
jb
or
stc
add
push
adc
and
in
test
jle
sbb
add
add
jle
dec
ljmp
mov
pop
pushf
lods
sub
or
shr
xchg
popf
in
jmp
or
adc
lods
enter
push
jg
mov
adc
push
dec
push
push
fwait
lods
enter
cmpsl
clc
outsl
lock
push
in
sti
int
dec
and
sbb
mov
cmp
sub
push
je
icebp
ja
nop
imul
orl
ror
mov
push
or
dec
outsb
adc
mov
push
adc
out
movsl
out
lahf
loope
loopne
rolb
stc
sub
inc
loopne
shl
cld
sub
js
pop
mov
in
je
in
cmp
inc
jmp
and
shll
mull
adcb
xor
and
fadds
lcall
stc
nop
orl
repz
fidivrl
clc
mov
adc
enter
and
ss
lea
js
adc
jns
add
push
jp
orb
pop
outsl
lock
into
lock
adc
data16
daa
sbb
xor
negb
xchg
xchg
bound
pop
adc
fcomp
cli
or
loop
pop
push
push
mov
push
push
popf
les
push
cld
dec
mov
mov
inc
and
jle
pop
inc
cmp
shlb
push
scas
xor
cmp
pop
push
adc
shlb
nop
ljmp
imul
adc
pop
mov
insb
pop
dec
je
sub
adc
sti
movsb
es
jno
sub
or
decl
push
cmp
mov
cmp
push
pop
xchg
inc
mov
orb
data16
das
enter
mov
sub
rcl
gs
into
test
xchg
sub
in
movsb
add
es
in
jb
aam
inc
mov
aam
xchg
inc
and
test
push
mov
adc
call
sub
jl
or
or
cmp
aam
cmp
xchg
mov
lea
cld
clc
mov
rolb
push
pop
adc
rorb
lea
and
sti
adc
mov
inc
dec
addl
lcall
imulb
inc
cmpl
icebp
add
aam
and
inc
or
inc
xchg
and
dec
repz
ss
push
cmp
imul
mov
testb
lock
or
test
and
repz
ret
sub
and
clc
and
adc
mov
xor
cmp
sbb
xor
inc
insb
js
xchg
add
jmp
pop
xchg
dec
aam
testl
test
sub
adc
sub
sbb
push
push
inc
adc
faddl
sub
mov
inc
stos
scas
mov
outsb
rcl
and
pop
and
sub
sub
nop
sub
fmuls
syscall
fs
mov
notb
push
or
lock
in
xor
sub
add
fdivrl
dec
dec
pop
inc
or
push
test
gs
fcomps
adc
or
sub
shrl
jmp
and
inc
cmc
adc
add
sub
fldcw
movsl
cmp
push
or
rclb
sbb
test
and
sub
mov
je
pop
sub
icebp
in
or
ret
xchg
adc
out
adc
sbb
enter
sub
scas
adc
sub
dec
lret
hlt
mov
popf
adc
icebp
inc
mov
sbb
jns
sub
imul
sub
adc
mov
lock
jmp
mov
pop
inc
mov
shrl
dec
xchg
mov
mov
or
mov
or
shlb
inc
out
inc
adc
or
sub
jns
cmpsl
icebp
jo
cmp
or
dec
out
pop
mov
das
adc
xlat
push
loop
sarb
sub
jne
cmpsb
xor
sbb
and
dec
jno
movsl
pop
es
inc
mov
pushf
xchg
or
pusha
and
sbb
xor
pushf
inc
imul
orb
xor
and
es
int3
jno
sub
or
and
pop
sbb
adc
mov
or
fidivrs
dec
adc
sbb
jb
sbb
sub
or
dec
inc
lock
clc
mov
decb
addr16
adc
stc
lret
mov
lock
push
pop
test
and
sbb
mov
adc
sbb
push
sub
imul
mov
push
adc
mov
cmp
repnz
testb
dec
mov
scas
xor
lods
das
in
push
lahf
xor
pop
inc
je
adc
jae
jmp
xor
xlat
sbb
dec
in
rorb
inc
lds
and
icebp
sbb
adc
and
xchg
nop
adc
pop
test
movsb
or
roll
scas
lods
adc
icebp
jns
sub
insb
xchg
add
and
add
lea
test
imul
sub
and
or
pop
repnz
cmp
sub
loop
les
add
out
or
dec
sub
arpl
add
jl
dec
jb
repnz
shlb
dec
pop
ljmp
mov
clc
test
dec
jg
mov
orb
add
jne
scas
or
int3
cmpsl
adc
sarb
mov
or
sub
adc
and
das
and
cmp
fisubs
or
xor
push
push
sbb
add
int
adcb
adc
push
nop
mov
adc
les
push
push
add
shlb
mov
cmp
and
push
adc
addr16
daa
mov
sub
jl
popa
sub
pop
fnstsw
adc
jle
mov
cmp
adc
stc
mov
sbb
fistps
xchg
and
or
adc
lahf
mov
dec
cmp
leave
and
lods
rcrb
cmp
in
and
std
sbb
roll
dec
call
les
inc
push
dec
sbb
test
sub
in
jle
sub
ljmp
jne
jmp
cltd
xchg
pop
xor
adc
lcall
jae
mov
jl
out
leave
mov
and
dec
jne
arpl
stos
cmpsb
loopne
sub
aaa
daa
sbb
cmp
loopne
mov
insl
test
jp
dec
mov
add
pop
adc
push
lock
inc
mov
lods
dec
xchg
adc
outsb
lds
addb
mov
mov
sbb
sar
cmp
inc
cmp
xor
jne
add
xor
fs
xlat
xchg
mov
cmp
fcompp
imul
stos
dec
inc
imul
add
in
aad
add
into
push
rcrb
in
lret
push
icebp
aad
add
in
mov
or
call
xor
scas
adc
jbe
nop
mov
movb
ret
mov
fnclex
jmp
inc
push
inc
cmp
adc
cmp
incl
or
leave
dec
and
cld
clc
xchg
jb
xchg
insb
testl
js
push
pop
loope
leave
fs
xchg
outsb
or
ljmp
inc
stos
push
jecxz
dec
jp
sarl
inc
push
add
push
mov
dec
mov
dec
stos
jb
pop
gs
jp
ret
pop
testb
stc
js
mov
fcmovnu
cwtl
cmp
mov
sub
mov
movsl
subb
movsl
adc
sbb
das
jno
add
xchg
sub
arpl
loope
inc
add
es
jae
push
aaa
fistl
cltd
enter
add
les
repnz
test
sahf
out
cmp
adc
mov
sahf
test
xchg
sbb
pop
inc
sub
or
push
add
cmc
bnd
loopne
in
xchg
mov
xor
cmpsl
lock
pop
hlt
out
xor
lock
pop
scas
icebp
sbb
sub
sub
cld
sub
imul
or
into
jge
jg
push
jp
inc
js
mov
mov
sbb
popf
daa
xchg
ljmp
mov
mov
inc
inc
or
and
sub
fucom
and
bound
or
fildl
ret
adc
decl
insl
cmpl
cmp
mov
sbb
add
jnp
std
pop
xchg
mov
packssdw
std
mov
mov
jmp
mov
xor
scas
jnp
arpl
mov
movsl
push
cld
mov
jmp
inc
push
ljmp
or
nop
and
cmp
cvtpi2ps
std
mov
lock
push
negl
pop
stos
xchg
sub
loop
dec
out
inc
xchg
int3
or
cmp
or
ret
cld
lret
jbe
inc
aam
rorl
test
push
cmp
pop
mov
popf
and
lds
mov
pop
popa
lds
xchg
mov
push
sub
sub
add
sahf
gs
pusha
xchg
sub
scas
and
or
mov
lds
fs
js
pop
add
push
loop
xchg
jbe
jae
dec
lods
jae
mov
dec
pusha
jg
lea
in
jl
pushl
repnz
and
in
loop
adc
inc
or
ja
xchg
add
test
pop
sub
mov
mov
jb
ss
daa
cld
jne
sub
xchg
ljmp
or
lds
and
pop
cld
mov
js
and
test
sarl
and
dec
subl
dec
mov
outsb
xlat
repnz
xchg
mov
ret
shrb
cmp
dec
jl
add
loope
or
call
dec
cmp
jmp
and
adc
popf
repz
xchg
imul
sub
adc
loope
xchg
mov
pop
leave
lret
mov
mov
adc
fdivrl
pop
bound
or
xchg
adc
jmp
mov
push
mov
mov
test
and
scas
mul
dec
jmp
sar
and
cmp
pop
sbb
cmp
out
and
out
add
push
in
mov
add
or
notb
add
and
in
jle
in
sti
jecxz
pop
scas
fs
sti
out
and
js
xor
adc
jb
icebp
dec
cwtl
rorb
gs
sbb
loopne
rolb
scas
js
bound
xchg
lea
and
mov
fsubp
iret
jno
and
push
pop
iret
mov
call
lock
dec
pop
ficoml
icebp
mov
repz
ds
iret
testb
lret
int
jle
sub
jp
or
shl
xor
or
xor
jo
call
xor
ds
sub
dec
mov
call
je
mov
cli
lea
jno
cmpsl
fldenv
sub
dec
scas
cmp
jb
loope
cmc
xchg
or
rorb
adc
xor
popl
jmp
or
int3
inc
call
lea
pop
mov
xchg
fdivr
test
add
sub
dec
test
mov
add
dec
push
inc
push
pop
call
stos
push
lea
ret
ja
fnstsw
cmc
jl
inc
sbb
sub
sbb
pop
sub
movsl
outsb
lods
xchg
shll
daa
xchg
fs
mov
outsb
and
push
leave
push
cmp
cmpsb
sub
inc
or
xchg
and
adc
fcomps
adc
jmp
jbe
push
andb
movsl
adc
cmp
fidivs
fs
inc
adc
outsb
sbb
mov
sub
dec
and
sub
dec
cmp
cmp
fistpll
jmp
stc
cmp
xlat
std
lds
and
mov
std
mov
imulb
jmp
ja
fiaddl
cmc
mov
cmp
cli
addr16
mov
mov
mov
dec
cld
cmp
or
mov
shl
mov
fisubrl
inc
inc
rclb
in
mov
das
and
dec
test
je
mov
push
loop
add
iret
leave
and
and
pop
inc
push
jp
in
and
adc
mov
cmp
cmp
les
pop
jne
pop
or
sarl
xchg
sub
addr16
pushl
push
xor
xchg
inc
pop
popf
bound
push
and
inc
ret
and
jne
dec
popf
push
imul
xchg
das
inc
xor
jb
test
jns
daa
aam
inc
lock
sub
xor
gs
add
jne
cwtl
adc
je
insb
pop
sbbl
daa
mov
or
sub
dec
push
inc
les
or
cmp
sub
or
mov
or
and
icebp
cs
inc
in
push
daa
iret
outsl
jno
xor
cmp
daa
sub
in
mov
jg
jo
js
xchg
mov
loope
xchg
pop
lcall
incl
ret
cli
addl
or
popa
push
add
loop
and
jne
pop
inc
fisttpl
inc
inc
or
push
cmp
sub
mov
add
dec
lret
adc
dec
in
cs
mov
lea
adc
push
imul
test
mov
sub
icebp
and
pop
mov
or
xor
insl
mov
cmp
cmp
shl
and
jmp
les
es
hlt
sbbl
roll
ja
inc
aad
xchg
mov
sbb
and
adc
mov
test
mov
push
add
sti
scas
push
adc
mov
movsl
mov
stc
imul
cmpl
sbb
mov
jne
adc
mov
test
and
mov
jmp
in
or
jmp
pop
adc
jmp
and
ljmp
les
mov
sbb
in
or
lods
add
loop
jmp
dec
test
lock
adc
push
in
inc
mov
dec
adc
pop
nop
test
das
imul
loopne
xchg
je
dec
sbb
sbb
mov
mov
ficompl
mov
pop
lock
inc
cli
and
add
sub
sar
cmp
pop
nop
dec
popf
js
mov
sub
clc
dec
xchg
sub
aam
pop
dec
and
shlb
dec
in
add
jmp
xor
dec
int3
xor
scas
sbb
shl
xor
sub
inc
lods
xchg
ljmp
dec
sub
adc
push
push
loopne
jge
popa
je
xor
ja
adc
xor
or
gs
adc
push
lahf
xchg
leave
pop
dec
and
adc
add
push
add
sbb
and
jb
or
mov
les
mov
adc
inc
xchg
subb
mov
lods
rcll
dec
in
dec
adc
xchg
sti
fcompl
decl
test
push
xchg
fldenv
in
or
cmpsb
js
loope
scas
xchg
mov
ret
push
xchg
out
xor
cld
push
mov
in
pop
mov
dec
jbe
mov
jmp
and
add
xor
inc
mov
into
sub
cmp
sbb
or
inc
mov
stos
and
out
pop
and
test
fimull
and
xchg
jmp
cmpsl
and
lret
nop
inc
cmpsb
lods
testl
mov
sub
inc
adc
lret
jmp
mov
adc
cltd
lods
and
pop
popf
movsl
lods
cmpb
mov
dec
jge
pop
and
leave
pop
adc
sbb
jmp
pop
cmpsl
sbb
or
ljmp
add
stos
repnz
jnp
adc
and
mov
sub
or
enter
ret
adc
add
inc
add
add
xor
add
push
xchg
or
imul
mov
imul
imul
jne
daa
leave
jge
popa
in
mov
push
dec
xchg
jmp
loopne
nop
xor
jae
or
pop
repnz
jb
dec
push
fbstp
sarb
cmp
mov
lret
sbb
add
xchg
cmpsb
enter
lods
and
clc
je
sub
repnz
xchg
lcall
aam
and
adc
or
sbb
mov
jg
mov
sbb
clc
stos
sub
lods
lock
rcrb
loopne
mov
or
jp
mov
jbe
inc
lock
mov
aad
sbb
adc
mov
into
mov
adc
sbb
xor
test
insb
mov
pop
adc
lret
or
dec
pop
add
out
mov
lock
std
xchg
dec
aaa
clc
jg
pop
das
jne
loope
enter
stos
adc
mov
shl
cwtl
cmp
inc
fwait
decb
xchg
notb
jecxz
orb
fmuls
pop
adc
popf
mov
je
dec
dec
in
mov
mov
test
scas
lock
sub
mov
inc
push
sbb
ljmp
jle
and
lock
jle
push
lcall
daa
ljmp
addr16
lock
adc
movsl
pop
shlb
cmc
mov
jmp
xchg
inc
jmp
jne
fstpl
mov
mov
cmpsl
je
jne
mov
and
xlat
mov
orl
cmp
shl
mov
mov
push
dec
les
outsb
or
or
mov
leave
mov
inc
dec
add
pop
push
sub
js
push
xor
inc
jno
mov
xchg
mov
pop
or
arpl
aas
out
push
sbb
int3
push
push
in
add
pop
ja
lea
or
test
ja
les
in
jnp
pop
sub
frstor
mov
or
out
push
test
sti
pop
out
out
jmp
and
loope
and
inc
rcll
xchg
ds
adc
lea
call
or
jmp
cmp
rorb
jbe
in
mov
adc
outsb
or
outsl
jmp
shr
and
or
js
xchg
xchg
or
dec
push
mov
cmp
adc
cld
je
mov
xlat
adc
pop
mov
jo
andl
jmp
subl
mov
and
stos
loop
push
cmpl
repnz
neg
out
stos
or
adc
popa
imul
and
add
and
jmp
and
lahf
mov
into
daa
dec
lea
addr16
leave
or
iret
mov
nop
mov
nop
push
adc
sbb
and
or
clc
push
insb
jl
daa
and
inc
adc
push
ss
inc
and
xor
xchg
xchg
leave
and
dec
push
adc
ds
or
mov
or
rcl
nop
test
in
push
pop
sub
cli
or
or
xor
sub
lods
arpl
bound
adc
xchg
adc
mov
push
shlb
xor
data16
in
dec
dec
rcll
sbb
cltd
xorl
jne
nop
xchg
inc
in
push
mov
sub
cmp
or
test
push
mov
mov
dec
and
adc
inc
xor
xor
data16
mov
mov
add
sub
cmp
cmp
test
mov
ret
arpl
fists
xchg
loopne
aas
movhps
lret
gs
mov
inc
insb
cs
ss
push
add
stc
or
loope
push
test
cmpsb
popf
stc
adc
cmp
add
cmp
jg
and
sub
jl
test
inc
fbld
inc
or
lea
dec
push
or
cld
lcall
xor
test
dec
push
and
dec
jno
inc
pop
ds
sub
and
mov
and
sub
jmp
test
or
leave
push
mov
lds
add
pusha
rcl
pop
mov
clc
insl
mov
xchg
jmp
and
sub
nop
and
loop
or
in
arpl
test
or
jmp
fsubl
xchg
xor
mov
xor
xchg
pop
xchg
lahf
cmp
mov
aad
adc
and
aaa
ljmp
mov
or
push
adc
jmp
adc
in
addr16
cld
adc
pop
mov
adc
cmp
jno
inc
add
xchg
pushf
mov
push
push
xchg
jae,pn
push
push
and
adc
lock
dec
or
push
bound
sub
push
add
sub
sub
hlt
gs
loop
or
add
frstor
and
inc
jmp
jle
leave
inc
dec
mov
stos
popf
cld
cmc
mov
mov
or
shlb
and
xchg
or
pop
sub
xchg
in
cld
lahf
pop
push
xchg
sbb
xor
push
mov
rol
and
add
and
push
push
test
lds
call
pop
sbb
xchg
xchg
cld
xchg
mov
mov
xchg
pop
in
inc
dec
int3
adc
push
push
xor
cltd
cmpsl
xor
dec
pop
dec
push
push
mov
dec
inc
sbb
in
add
movsl
inc
shlb
sbb
adc
xchg
inc
adc
inc
mov
jg
xor
and
jae
mov
sub
rorl
pusha
jno
xchg
test
add
and
sbb
pop
and
adc
pop
rcrb
sbbl
pop
add
adc
cmp
mov
xchg
dec
pop
pop
lods
enter
push
mov
lret
xchg
jg
mov
mov
leave
cmc
push
sbb
lret
push
push
insb
adcl
and
subl
lcall
cmp
push
xchg
or
jns
movsl
jecxz
sub
cmp
and
dec
add
rolb
cwtl
adc
xchg
or
pop
mov
push
jb
stos
mov
sub
add
sub
enter
movsb
lcall
lock
les
clc
nop
popf
pop
sub
add
fwait
aad
sub
sbb
or
sbb
sub
sbb
xchg
sbb
sbb
xor
push
lock
test
xor
mov
jne
test
cmp
in
xchg
sbb
push
call
nop
sbb
loope
stos
push
cmp
add
cltd
enter
inc
es
dec
add
adc
call
xchg
movsb
mov
mov
imul
push
test
pop
cld
xor
adc
test
jae
mov
pop
or
adc
fstl
pop
sti
push
or
call
test
loop
lods
adc
pop
mov
js
call
fs
jmp
pushf
xchg
jmp
mov
out
inc
je
cmp
jmp
mov
cmpb
sbb
pop
mov
adc
jnp
xor
inc
adc
sub
xchg
and
lds
into
xchg
add
in
add
enter
add
mov
jns
xchg
or
pop
add
loopne
or
jge
inc
sbb
and
jmp
jg
int3
xor
wbinvd
xchg
dec
add
xlat
push
add
mov
mov
add
and
or
lahf
or
adc
pop
or
loopne
xchg
jnp
lret
sbb
idiv
dec
jge
mov
cld
dec
pop
pop
bsf
fsubl
insb
inc
mov
inc
adc
pop
add
cld
dec
jnp
xor
add
lret
in
mov
mov
and
or
or
in
cmp
sarb
inc
inc
enter
out
pop
out
ljmp
repnz
fldt
xchg
cwtl
add
cld
movsl
and
in
testl
lock
movsb
stos
mov
and
push
dec
fs
mov
cmp
pop
push
push
sub
or
ss
or
gs
mov
fdivs
popf
xchg
lea
mov
fs
push
lods
fwait
out
out
leave
jnp
adc
test
je
mov
nop
adc
add
enter
inc
push
push
adc
adc
imul
push
movsb
bound
push
inc
clc
push
arpl
gs
out
pop
loop
pop
mov
or
push
out
je
mov
lock
mov
xchg
pop
or
sbb
outsl
sub
inc
inc
jmp
je
xlat
cmpsl
mov
xlat
cltd
dec
aas
cmpsb
rcll
and
sub
jo
stos
cmp
xor
sub
xor
or
cmp
jnp
pop
mov
iret
jo
xchg
sub
inc
sbb
cmpsb
and
std
cmp
dec
and
dec
sti
imul
sbb
cli
mov
dec
aaa
stc
test
test
mov
adc
inc
mov
add
pop
or
aad
js
fs
push
sub
xchg
ret
sub
add
test
jbe
sub
enter
out
sub
mov
xor
pusha
clc
or
and
dec
cmp
inc
add
jnp
iret
imul
cmpb
inc
clc
mov
xlat
xchg
insb
inc
dec
daa
inc
jmp
push
mov
pop
lret
sub
fstpt
adc
sbb
and
sbb
xchg
push
jmp
or
mov
imul
adc
mov
inc
add
mov
mov
push
jae
out
adc
leave
mov
dec
mov
inc
je
orb
jmp
call
mov
mov
xchg
cmpsb
mov
loopne
fildl
mov
inc
cmp
dec
enter
sub
push
or
mov
and
rcrl
jmp
sub
test
and
xor
inc
push
sub
cmp
inc
mov
in
mov
cs
leave
out
sbb
ror
movsl
cs
sub
test
mov
mov
or
jnp
xchg
movsb
negl
and
jp
jb
and
outsb
ljmp
movl
sbb
lahf
mov
pusha
sbb
adc
cmp
mov
xchg
sbb
ds
dec
inc
or
jne
movsb
adc
inc
cmpsb
test
jmp
and
std
les
imul
dec
ljmp
lods
adcl
mov
pop
adc
cs
stos
jbe
nop
and
movsb
mov
mov
pop
mov
adc
mov
mov
out
lea
or
dec
add
fmull
daa
mov
cmp
add
mov
add
addl
pop
insb
cmpsl
push
add
xchg
leave
push
push
sbb
stos
test
rcrb
movsb
adc
sahf
add
adc
in
in
cli
test
mov
xchg
rorb
adc
xorb
mov
mov
push
mov
mov
sub
test
mov
xchg
out
repz
jns
dec
inc
xchg
inc
cmp
out
lret
mov
dec
test
inc
pop
ja
pusha
movb
lods
popf
popa
dec
and
sbb
std
push
push
decb
inc
je
jp
pop
xchg
test
adc
mov
or
or
inc
adc
and
addl
iret
mov
dec
stos
popa
js
and
push
movsb
xor
and
repz
or
subl
and
xchg
adcb
push
addr16
call
adc
adc
mov
adc
and
pop
sbb
stos
dec
pop
xchg
xchg
xor
adcb
cmp
xchg
push
call
xchg
insb
xchg
orb
lahf
aam
mov
fstpt
adc
cmp
mov
jb
adc
sbb
xchg
push
xchg
cmp
inc
jp
mov
inc
and
sub
jecxz
lret
sub
pop
cmp
mov
and
inc
insb
inc
xor
std
adc
or
add
jl
pusha
mov
ja
rorb
call
jmp
or
mov
adc
cmpsl
gs
fdivrl
pop
add
or
sahf
xchg
or
popf
fldcw
mov
or
movb
jmp
jne
adc
or
movsl
cmp
or
incb
pop
mov
inc
xchg
adc
enter
mov
add
add
jge
repz
fistps
arpl
push
jae
f2xm1
push
cmpsl
int3
dec
mov
jae
mov
jae
mov
inc
cmp
add
call
or
fldenv
jo
xlat
xchg
int
push
cmp
jb
or
loopne
sti
pusha
daa
jmp
or
inc
push
lret
aas
es
sbb
pop
xor
hlt
and
or
push
call
or
and
stos
mov
jp
call
div
sbb
aaa
enter
push
xor
push
xchg
aam
xor
add
das
nop
cmp
nop
pop
rcr
rorl
jnp
push
push
mov
push
xchg
cld
lods
repnz
sbb
out
push
inc
shrb
mov
in
loop
test
cli
add
sbb
pop
pop
lcall
and
and
clc
out
adc
pop
test
adc
xchg
pop
xor
mov
add
cltd
jle
inc
jge
mov
ds
dec
mov
clc
pop
inc
or
dec
or
lret
adc
xchg
rclb
add
in
mov
add
and
mov
cmc
xchg
mov
je
inc
cld
dec
cmp
sbb
adc
inc
call
inc
sbb
rorb
scas
sarl
pop
enter
mov
loop
xor
mov
das
cld
int
out
sti
clc
subb
pop
adc
pop
sub
dec
movsb
fst
cwtl
aam
fmul
dec
sub
pop
enter
mov
adc
xchg
andl
adc
jmp
imull
ja
lret
jge
xorb
push
xchg
mov
inc
inc
fists
or
xor
xchg
sbb
adc
dec
mov
nop
push
fdivs
cmpsb
jns
in
xchg
lahf
push
out
loope
or
push
adc
push
mov
adc
clc
leave
pop
xchg
xor
or
push
int3
xchg
in
lock
fcomps
lret
out
call
cwtl
cmp
jnp
add
movl
fdivrs
movsl
icebp
hlt
dec
push
or
cli
ja
mov
add
cmp
add
sbb
mov
mov
mov
mov
call
mov
jb
adc
adc
test
fildl
and
sub
or
xchg
and
mov
sbb
movsl
paddusw
jecxz
add
mulb
in
sub
adc
xchg
test
xor
inc
push
xor
sub
xchg
sahf
loop
cmp
jns
jge
lret
aam
jmp
xchg
sub
enter
mov
adc
shll
cmp
sbb
dec
cmpsb
jmp
lods
nop
mov
cmp
cmc
mov
les
push
movsb
test
jne
sub
mov
je
outsb
jl
stc
sbb
or
fisubrl
push
sub
outsb
je
cmp
jnp
sbb
lea
sub
bound
std
jmp
ficomps
adc
pusha
and
test
or
mov
outsb
daa
subl
or
or
sbb
mov
push
and
sbb
fiaddl
leave
les
cmpb
fistpl
test
sub
ret
test
enter
or
call
and
es
mov
pop
xchg
sub
sub
jae
push
pop
mov
repz
out
gs
dec
jne
and
cli
pop
lret
jnp
ret
pop
outsb
enter
es
shll
aam
adc
inc
sbb
inc
test
or
xchg
lret
and
xchg
sbb
popf
mov
lahf
sub
mov
out
out
push
inc
mov
cmp
lahf
sar
xchg
daa
cmc
sbb
inc
mov
and
push
ja
loop
push
popa
cmp
jge
jp
stos
jnp
xor
maskmovq
testl
lock
sbb
int3
and
inc
repz
jb
add
cmp
rcll
mov
and
ret
sar
ret
inc
or
hlt
or
xchg
ss
lcall
dec
push
stos
and
sub
les
xlat
sbb
sahf
test
adcl
dec
lock
push
dec
xor
sub
adc
sub
mov
xor
test
or
je
movsl
mov
dec
adc
xchg
adc
rcl
pop
mov
lahf
aas
stos
xchg
or
stos
ret
jbe
stos
push
cmp
adc
and
jle
pop
dec
sbb
shlb
mov
and
dec
mov
adc
pop
jnp
andb
je
dec
mov
movsb
jmp
dec
jmp
jmp
sub
push
add
sub
sbb
je
or
fisubl
sub
lcall
or
mov
cmp
je
dec
rcll
int3
mov
mov
notb
shll
jo
xor
push
std
arpl
xor
jne
daa
cltd
or
add
pop
pop
sub
cwtl
adc
or
sub
gs
mov
xlat
jb
jmp
pop
mov
or
gs
sub
lds
enter
das
adc
js
test
and
clc
pop
jne
and
mov
inc
jmp
scas
inc
xchg
jbe
clc
xor
xor
and
scas
or
test
pop
jb
movsl
add
and
or
add
out
add
test
mov
adc
sti
or
adcb
pushf
in
ret
sbb
or
outsb
roll
stos
fsubs
and
aas
push
out
lret
repnz
cmpsl
test
push
add
test
sbb
rorl
mov
pop
mov
cmp
cmp
sbb
jae
adc
xor
outsb
faddp
es
mov
add
add
push
arpl
nop
lods
mov
cwtl
or
push
xchg
aaa
aas
imul
popf
cli
xor
xchg
aam
ret
adc
les
pop
cltd
rorb
jle
sbb
xchg
pop
ljmp
and
jmp
push
cwtl
rorb
mov
aam
into
mov
movsb
mov
push
adc
push
or
lock
lcall
es
jno
mov
sbb
and
lods
scas
popf
movsb
jecxz
invd
xchg
cmpb
mov
enter
in
jbe
inc
xor
push
dec
fisubs
and
or
insb
hlt
push
stos
xchg
aas
xor
and
adc
push
adc
jne
lds
inc
or
aad
mov
adc
scas
adc
in
or
and
iret
inc
jne
pop
data16
lds
je
mov
and
dec
int3
arpl
lods
ret
jmp
xor
mov
xor
fmul
and
mov
ret
popf
inc
jns
mov
addr16
into
and
add
sbb
inc
pop
nop
in
push
subl
mov
lods
icebp
or
daa
xchg
or
gs
in
arpl
xchg
sub
push
pop
and
cmpl
fsubrs
enter
leave
push
push
xchg
out
loop
jns
dec
push
inc
xchg
xchg
mov
dec
bound
shl
enter
add
enter
push
push
pushf
sub
test
lret
stos
push
and
es
inc
mov
je
mov
inc
cli
add
jb
aaa
nop
in
test
add
xchg
jp
frstor
pop
add
mov
push
or
cmp
dec
xchg
jmp
mov
xchg
pop
movsb
mov
lea
and
ss
mov
addr16
push
push
fistl
jp
fs
mov
fs
sbb
mov
outsb
rcl
jl
pop
gs
dec
gs
inc
xchg
mov
jne
cmc
mov
js
add
cwtl
dec
test
jns
mov
aad
jo
push
fwait
mov
ja
or
aas
mov
sarb
jae
and
shrl
dec
jo
popa
jo
mov
cs
sub
dec
inc
sub
lock
and
or
and
pop
jmp
mov
repz
shlb
pop
lds
fwait
es
jbe
cmp
cmp
push
lods
into
mov
andb
lret
out
sub
jp
jns
fiadds
in
aaa
push
or
or
add
cwtl
sbb
sbb
mov
dec
jge
or
outsb
je
dec
in
jl
mov
int3
add
and
scas
jb
or
mov
lcall
dec
pop
stos
lcall
mov
lahf
dec
mov
sub
add
nop
push
add
adc
and
add
add
mov
les
movsl
add
lahf
or
adc
les
add
cmp
add
or
inc
add
add
xor
jo
pop
jnp
shll
bound
sti
insb
add
jmp
sbb
pop
mov
xchg
movsl
adc
popf
inc
out
cld
xor
test
call
xchg
xor
scas
repz
cmp
jmp
pop
in
mov
out
movsl
mov
je
loop
imul
imul
jg
inc
sub
ljmpw
gs
pop
rcrb
pop
lret
fisttpll
arpl
cmp
jne
mov
ret
xchg
dec
clc
mov
orl
mov
cmp
imul
adc
jo
mov
repnz
mov
push
fmull
std
insb
cmp
sbb
push
jmp
out
loop
out
inc
adc
aaa
clc
push
sbb
sub
jo
clc
jl
push
fs
mov
in
stos
sub
mov
lcall
sbb
mov
push
sbb
outsb
mov
pop
and
add
mov
and
sub
pop
ror
dec
sub
mov
ljmp
and
xor
popa
mov
enter
sbb
and
inc
and
mov
add
mov
and
sbb
mov
push
sub
jne
push
adc
or
sub
sbb
cwtl
movsb
insb
mov
fcoml
ljmp
lock
fcompl
lods
inc
loop
push
jno
dec
subb
fmull
push
ret
jmp
cmpsl
and
adc
push
add
or
cmp
int
add
xchg
adc
leave
test
mov
ficompl
stc
sbb
xchg
adc
scas
shr
inc
pop
adc
scas
inc
inc
fs
mov
cmpl
and
or
sbb
inc
lea
dec
loope
testl
dec
and
fstps
leave
inc
ficoml
dec
or
imul
inc
adc
std
stc
and
inc
addr16
inc
call
add
mov
inc
outsb
call
movsl
clc
pop
lea
jne
jge
or
jne
sub
push
push
or
inc
cmp
dec
adc
push
inc
add
movsb
mov
test
je
inc
sbb
cmp
jmp
or
or
mov
lret
xor
mov
pop
sbb
add
or
test
mov
cld
or
or
sbb
jecxz
and
adc
mov
jb
mov
leave
pop
icebp
cs
xchg
xor
xchg
mov
dec
psrad
mov
cmpsl
stc
cli
leave
push
pusha
jp
dec
adc
enter
fisubrs
cmpsb
shrl
push
dec
sbb
sarb
adc
or
call
mov
jne
lods
dec
and
jae
xchg
or
test
jae
cmp
add
and
mov
es
shr
mov
or
xorl
shr
mov
inc
out
rclb
fists
leave
popf
add
fs
out
ja
dec
out
inc
or
mov
daa
sbb
in
fmulp
sub
mov
or
pop
les
or
scas
xchg
pop
mov
or
or
xchg
xor
aas
sub
inc
or
out
inc
inc
fidivrs
cs
inc
sub
mov
mov
scas
lcall
mov
xchg
inc
pop
inc
push
xchg
repz
and
leave
pop
pusha
mov
mov
jmp
imul
sub
or
pop
fsubp
or
add
add
je
das
or
fnstenv
xor
gs
sub
or
and
and
adc
jg
and
enter
mov
sbb
pushf
add
les
adc
mov
mov
das
jo
adc
fldl
or
xchg
imul
loopne
jmp
mov
in
and
cmp
or
jmp
dec
inc
mov
arpl
mov
addl
test
push
ds
cmpsl
push
mov
mov
lods
shll
mov
mov
icebp
cmpsb
sub
jle
xchg
fwait
pop
and
mov
dec
xor
mov
fldl
cmp
lods
movsl
push
inc
add
push
add
fldl
jmp
pop
repz
xchg
lock
xor
or
in
nop
nop
out
popf
arpl
mov
fldl
lock
arpl
popf
push
add
add
push
repnz
mov
jno
jecxz
adc
shlb
jnp
push
push
jmp
popf
icebp
mov
cld
ds
mov
repz
mov
dec
lock
pushf
push
je
or
xor
mov
cmp
mov
xchg
es
pop
imul
sbbl
add
leave
std
mov
xor
dec
mov
cmc
out
sub
lret
adc
or
add
push
out
adc
sarb
call
mov
adc
xchg
adc
and
sbb
rcrb
imul
sub
cmp
or
mov
aas
jmp
or
les
mov
and
mov
push
add
jle
dec
add
por
call
lret
mov
std
mov
repz
int
sub
sbb
fsubr
out
leave
aam
xor
cld
add
loopne
cmpsb
pop
and
jnp
lods
leave
inc
stos
jmp
pushf
mov
sbb
test
and
mov
je
push
mov
xchg
jns
and
loopne
incb
mov
mov
addb
or
sbb
fst
hlt
lret
push
es
jg
cld
stc
xor
imulb
lea
nop
and
scas
jl
popa
das
out
pusha
enter
adc
dec
cld
out
cmp
cmp
push
xlat
test
mov
mov
popa
add
sbb
shl
push
lcall
mov
or
fld
xchg
popa
push
mov
pop
add
dec
movsl
lods
xchg
clc
sub
in
nop
clc
mov
pop
fs
and
push
inc
dec
je
add
fisubl
inc
rclb
fstpl
icebp
je
aas
call
cli
or
mov
rolb
inc
scas
xor
test
imul
arpl
shl
push
cltd
fisttpll
loope
xor
mov
mov
cmp
jecxz
jnp
sbb
inc
add
cwtl
add
addl
adc
int
and
test
mov
pop
jns
mov
mov
inc
xor
in
xlat
xchg
ljmp
jnp
imul
and
dec
push
lds
fnclex
dec
and
fld
cmc
dec
movsl
and
xor
mov
fdiv
sar
lret
lods
push
or
ja
mov
or
jl
or
sub
mov
iret
adc
jg
xchg
mov
repz
sbb
in
pop
and
add
or
out
nop
call
fadds
and
push
fldpi
and
push
xchg
rcrb
add
ret
in
mov
xor
dec
testl
aas
add
sbb
fdivl
insb
dec
push
insl
repz
into
lock
mov
into
cmp
push
int3
ss
mov
add
inc
push
gs
and
push
adc
sub
rcll
or
or
cld
adc
mov
mov
mov
xchg
jl
popa
gs
aas
mov
dec
out
jno
push
pop
sub
and
fsts
add
xor
int3
pop
mov
inc
loope
outsb
and
sti
cmp
mov
adc
push
sti
testl
xlat
cmp
pusha
dec
lods
movsb
lret
dec
jae
or
rorl
mov
jmp
movsb
mov
mov
pushf
xchg
and
sub
jne
xchg
cli
inc
decb
fnstcw
cmp
add
jae
jmp
es
push
push
adc
in
push
enter
jp
cwtl
cld
pop
int
cmp
daa
fdivrs
push
cmp
out
divb
in
rorb
adc
jecxz
dec
clc
mov
outsb
sbb
popf
cli
sahf
adc
aaa
lods
clc
out
xor
cli
lahf
push
aaa
sub
mov
xchg
neg
dec
rclb
jl
call
xlat
mov
sub
jg
dec
sub
enter
in
cmp
mov
or
adc
out
jns
das
fcoms
pop
ret
push
inc
mov
adc
cmp
in
xchg
fcmove
out
xchg
mov
sarl
cmp
pop
dec
les
adc
jne
pop
xor
cltd
bound
loop
imul
cmpsl
fiadds
jp
xchg
sub
jo
dec
jmp
adc
push
sbb
das
inc
ret
xor
lds
adc
rolb
out
test
pop
and
test
cltd
cmpl
sub
and
jecxz
jno
stc
sahf
orl
enter
rclb
shl
fs
push
jl
or
xchg
mov
and
add
aaa
and
pop
jo
lock
arpl
in
dec
xchg
xchg
xchg
dec
shll
rorl
bound
ja
jle
cmp
loopne
stos
mov
and
ljmp
or
clc
bound
jp
push
inc
cwtl
idivl
cmp
xor
mov
fidivrl
movsb
cld
dec
or
and
int
push
jge
pop
push
clc
popl
push
mov
push
sub
push
popa
xchg
mov
xchg
lods
add
inc
xlat
jnp
xor
cld
dec
movsb
ljmp
jge
jb
or
or
xchg
xchg
inc
inc
fcoms
xor
jmp
mov
icebp
sub
shrl
or
es
fbld
sbb
jnp
lock
lahf
inc
sbb
mov
or
cltd
popa
jb
inc
fs
cwtl
in
movsl
dec
mov
test
pushaw
loope
test
mov
int3
add
pushf
rorl
adc
jl
lahf
xchg
cmp
notb
sbb
sbb
repnz
cld
scas
add
rcl
sbb
int
dec
cs
pop
jae
sub
test
loop
std
mov
lods
xor
orl
inc
jne
push
arpl
jecxz
dec
sti
push
adc
xor
adc
jne
sbb
and
or
jmp
xchg
pop
xchg
outsb
mov
xor
mov
aam
pusha
test
sub
adc
repz
sub
mov
xlat
or
lds
sub
add
sbb
call
dec
int3
loop,pn
in
das
rclb
jg
sbb
jmp
decl
add
xor
jns
add
cmc
cmpl
jne
dec
cltd
in
js
mov
pop
sbb
inc
fidivl
cltd
cs
aas
fsts
imul
stc
das
in
loopne
and
push
push
mov
repz
movsb
mov
push
sbb
stos
in
stc
ss
jno
test
jl
sti
movsl
pushf
repnz
dec
push
movsb
add
jno
or
cli
and
test
int3
mov
sbb
iret
imul
test
lahf
stc
stos
mov
int
pop
mov
jne
and
add
and
loope
in
mov
or
xchg
mov
xlat
sbb
mov
subl
xchg
cmp
inc
lods
and
dec
lcall
xchg
mov
push
xor
jmp
xchg
jle
in
dec
cmp
mov
lock
cmp
sub
in
ja
inc
and
cmp
shll
inc
rclb
stc
pusha
inc
hlt
jge
dec
fistps
push
add
cld
sub
outsl
jae
cmp
and
pop
xchg
pop
xor
mov
mov
mov
adc
rorl
sbb
insl
dec
ret
rorb
out
es
adc
and
push
out
jbe
fs
add
mov
leave
mov
lock
push
or
addb
sub
ds
or
sti
xor
rorb
popf
cmp
inc
adc
cmp
mov
jo
ljmp
and
dec
stos
mov
and
sarb
or
es
mov
adc
mov
sub
cmp
dec
xchg
je
pusha
ror
mov
dec
fnstsw
or
mov
imul
xchg
scas
xor
fnstsw
mov
or
lods
lahf
sahf
mov
mov
aad
push
and
lds
push
je
out
fdivrs
mov
in
adc
or
dec
push
add
xchg
test
cmp
mov
and
sarb
and
add
ffreep
and
int3
test
mov
add
jne
jbe
xchg
mov
push
add
je
and
test
daa
or
fs
cmpsb
mov
lret
cld
aam
pop
cmpsb
jp
mov
push
lods
arpl
lods
out
jg
xchg
in
xor
adc
fstpl
pop
cld
call
movsl
push
xor
repnz
das
mov
lock
lea
into
inc
sahf
adc
jnp
mov
jle
xchg
cltd
xor
inc
in
stos
out
pop
and
xchg
pop
lahf
stos
jne
cmpsb
xchg
or
test
xchg
sub
popf
cmc
test
sarl
push
ret
js
jl
scas
pop
leave
dec
pop
int3
rol
sti
inc
xorl
dec
xchg
adc
enter
mov
aas
call
push
outsl
shlb
js
lret
push
mov
mov
movsb
mov
push
xor
pop
mov
mov
xchg
dec
mov
or
and
and
sbb
sahf
xchg
cld
bound
cmp
negl
mov
mov
xor
jmp
sub
lret
sub
add
shr
cmp
insl
test
sub
hlt
das
inc
or
push
scas
in
ja
sub
xor
and
sub
xchg
leave
or
lods
xor
and
lock
aam
stc
pusha
lret
or
movl
popf
inc
insb
ss
in
add
dec
jo
repz
jns
or
push
outsb
or
mov
mov
rcr
cmp
adc
sub
or
aas
jb
xor
inc
test
lahf
je
jmp
xor
outsl
mov
scas
test
cld
or
call
in
fcmovu
and
sub
nop
xor
in
mov
or
call
int
push
pop
jmp
and
xchg
adc
pop
mov
adc
movsl
inc
test
imul
jbe
pop
jae
jb
fists
jb
inc
pop
xor
mov
push
jns
mov
cs
pop
push
ja
repz
andb
cmp
cmp
jne
jmp
repz
add
in
adc
mov
pop
repz
test
cltd
sub
lahf
add
rorb
dec
adc
jp
jae
xlat
jno
movsl
push
fs
in
loopne
ja
jbe
out
xor
lock
xlat
mov
test
adc
lahf
fcmove
aad
test
dec
sbb
inc
stos
jp
orl
fidivrs
adc
ds
xor
jp
mov
dec
out
movsl
loope
xor
pop
mov
xchg
dec
xchg
cwtl
int
add
pop
adc
mov
push
inc
jae
push
pop
xor
sbb
pusha
cmc
adc
jecxz
xor
arpl
test
das
add
cmp
pop
sub
fadds
add
add
or
data16
push
cmp
ljmp
mov
and
xor
cmp
xchg
dec
movsb
add
pop
imul
imulb
mov
test
rorb
das
cmpsb
jo
or
cltd
arpl
std
push
lods
dec
daa
clc
inc
shlb
pop
or
lock
dec
add
mov
or
push
ja
popa
mov
push
lcall
mov
cs
cmp
sub
and
call
fstpl
sub
cmp
sub
pusha
or
pop
pop
leave
cmp
or
xor
sarb
push
mov
inc
pusha
add
cmpsb
sbb
imul
and
movsb
pop
in
lods
loope
push
fmull
xlat
cmp
push
sub
neg
testl
add
fdivs
adc
lods
push
je
es
pop
in
xlat
push
loope
int3
jnp
pop
test
sar
iret
mov
push
xor
jg
or
and
xor
inc
scas
jp
fucomip
std
cwtl
pop
adc
mov
push
les
mov
lcall
in
scas
fcmovnbe
test
std
outsb
pop
adc
shr
call
lock
aam
decb
xor
imulb
xor
sbb
dec
jno
test
sub
jb
push
shll
pop
mov
sub
pop
sbb
mov
fdivrp
inc
or
push
les
hlt
stos
cmp
cmp
sub
test
jmp
into
ja
movsl
xchg
call
xchg
mov
je
xor
int
test
push
adc
jne
das
call
xlat
leave
and
cmp
dec
mov
pop
fs
xor
jne
mov
pop
hlt
xlat
repz
mov
fldcw
mov
nop
mov
add
lods
bound
and
pop
adc
fisubrs
dec
les
jne
lcall
cmp
push
lret
xlat
adc
mov
sub
fldl2t
dec
in
addr16
sbb
test
mov
and
repz
or
out
push
or
je
es
cmp
xor
push
and
mov
clc
jbe
pop
sarb
mov
popf
jb
sti
lret
jns
add
stos
jge
arpl
pop
inc
mov
sub
lods
cwtl
inc
xor
cltd
lods
push
pop
lods
popf
mov
outsb
orl
inc
cmpsl
mov
sub
or
sti
ret
out
jle
jae
and
adc
pop
into
mov
fdivrl
and
fcoms
wrmsr
sub
lea
xchg
aas
mov
cmp
pop
push
test
jae
outsl
mov
inc
jl
push
sub
lea
mov
dec
adc
mov
adc
or
in
test
adc
mov
roll
pop
scas
jne
adc
out
jp
and
lock
xor
sub
push
cmp
mov
adc
sub
je
dec
in
push
jmp
xor
in
cmc
das
ja
pop
adc
adc
mov
test
mov
pop
pop
push
in
test
cs
call
das
push
xchg
mov
outsl
lds
dec
dec
mov
dec
mov
inc
pop
in
fdiv
imul
mov
mov
stos
shlb
sub
scas
mov
adc
cld
fdivl
sar
push
int
add
push
mov
adc
add
adc
das
sub
clc
shll
mov
imul
adc
das
call
mov
jne
clc
lock
or
dec
push
jmp
dec
jg
bound
dec
push
and
inc
movsb
adc
in
xor
jmp
outsl
mov
inc
add
lock
xlat
in
mov
rcr
add
and
call
and
dec
mov
enter
fmull
dec
test
dec
xchg
fld
nop
fdivl
scas
fdivrs
stos
fdivl
fsubl
out
xor
dec
sub
push
lods
xlat
mov
scas
lock
cmp
mov
bnd
and
dec
stc
das
bound
and
clc
cwtl
movsl
sub
insl
inc
sbb
dec
fcom
pop
aam
pop
cmpsl
stos
notb
adc
xor
loopne
rorl
loopne
push
xchg
mov
inc
orl
scas
adc
stos
out
inc
xor
push
mov
test
add
xor
and
loopne
dec
xor
adc
sbb
mov
out
in
ror
clc
push
nop
jmp
popa
daa
fildll
pop
cmp
jne
or
xchg
int
test
xchg
fsubl
sub
and
mov
cli
cmp
mov
mov
or
xchg
test
pop
negb
in
add
inc
mov
gs
or
pop
xchg
xchg
adc
inc
loopne
shl
mov
mov
push
frstor
push
xchg
insb
and
je
sub
stc
pop
dec
inc
and
and
or
push
leave
inc
pop
mov
and
fs
lea
cwtl
mov
test
in
inc
push
or
jbe
mov
push
sbb
push
mov
jne
loop
and
pop
xchg
jbe
adc
or
ljmp
decl
jno
insl
jo
add
pop
test
push
push
and
sbbb
movsl
jge
adc
and
subb
push
cmp
inc
test
or
rcl
or
push
insl
mov
les
push
dec
jle
jp
xchg
push
outsb
dec
mov
daa
addr16
sbb
and
push
mov
call
mov
roll
add
dec
or
negl
iret
mov
mov
jne
cmp
xor
dec
fsubl
ficoms
ret
or
mov
jmp
outsb
leave
cmpb
pop
mov
cltd
xchg
push
das
lds
push
push
push
push
leave
push
sub
nop
insl
rcr
mov
pop
in
push
cmpsb
adc
mov
and
cmp
test
adc
decb
push
or
in
sbbb
mov
ss
es
inc
repnz
inc
xchg
push
gs
add
inc
fmuls
fldcw
xor
lock
and
push
lea
rorl
das
mov
add
cld
push
aad
es
ret
shr
sub
fcomps
cmp
aaa
pop
dec
gs
mov
inc
push
push
adc
mov
pop
push
inc
ret
pusha
add
test
test
dec
cwtl
or
lea
pop
and
xlat
imul
cmp
xorb
pop
cltd
push
rclb
icebp
adc
push
mov
sub
jne
insb
lahf
sbb
cmp
xchg
sub
aaa
scas
lds
mov
nop
adc
loop
sar
cwtl
xlat
dec
test
aam
rclb
and
cwtl
or
inc
sbb
arpl
addr16
bound
test
call
dec
cmp
addr16
jge
mov
lret
or
jnp
adc
add
std
shll
push
jge
xchg
and
add
sbbl
in
pusha
xchg
cwtl
mov
adc
jne
imul
mov
call
adc
lods
dec
cs
sub
lret
mov
imul
jmp
lret
mov
mov
push
xor
fdivrl
mov
scas
inc
imull
cmc
aas
sbb
jns
mov
inc
push
insb
adc
add
ret
je
pop
ljmp
xchg
inc
int3
adc
pushf
inc
cmpsb
call
rcrl
sbb
and
xchg
mov
and
call
stos
in
cmpsb
cmp
push
push
enter
pop
sub
sub
inc
or
and
xchg
dec
cmpsb
cwtl
sub
mov
aas
jmp
stos
sub
adc
sbb
adc
ficompl
add
out
in
add
add
inc
adc
adc
inc
inc
sub
cmpsb
lds
or
imul
push
inc
mov
inc
adc
cmp
add
fxch
repnz
sbb
dec
addr16
shll
sub
mov
fcoms
or
xchg
mov
das
dec
add
cs
jne
xor
fistpll
cmp
or
sbb
cmp
addr16
stc
push
sub
sub
push
push
in
push
ret
inc
jb
scas
inc
lds
mov
add
cwtl
push
jne
iret
aas
inc
sub
std
fs
je,pn
mov
pop
sub
push
add
and
fs
adc
sbb
push
jmp
popf
sub
pop
xchg
mov
sbb
adcl
decb
sub
push
add
sbb
cmp
xchg
pop
or
ret
loopne
xlat
jmp
and
int3
xchg
ds
adc
sbb
addb
out
sahf
scas
inc
sbb
rclb
sbb
notb
les
push
mov
mov
sub
mov
mov
dec
and
js
in
daa
lods
adcb
inc
or
add
add
mov
lcall
or
lods
mov
dec
ja
sub
push
repz
call
stc
push
dec
add
inc
test
xor
mov
in
mov
adc
in
cmp
cmc
dec
in
lods
mov
movl
les
sbbl
sub
jmp
cmpl
mov
mov
repnz
pop
and
inc
pop
test
pop
xchg
dec
and
inc
enter
xor
adc
lds
test
or
stc
lods
push
or
jmp
pop
stos
idiv
dec
mov
mov
mov
push
dec
pop
jecxz
lret
or
mov
je
into
mov
or
stc
popf
imul
in
scas
sub
sub
cmp
push
test
je
call
out
and
fcoml
add
cwtl
mov
negb
jne
push
test
hlt
xor
sub
cltd
cmp
popa
jo
xchg
cmc
pop
jmp
fwait
pop
sti
clc
inc
xchg
pop
enter
jle
or
scas
outsl
and
push
fidivrs
mov
ret
cmpsb
pop
or
push
icebp
mov
sub
cmp
sahf
imul
scas
loop
pushf
bound
jmp
push
push
clc
lea
pop
into
gs
test
js
imul
ficoml
or
or
aas
xor
xchg
stc
inc
add
stos
repz
mov
nop
jbe
imul
inc
push
mov
rol
push
push
outsb
inc
imul
jnp
cmp
fldcw
shrb
mov
or
dec
sub
xchg
out
fnstcw
loop
maxps
push
in
mov
mov
xlat
mov
lret
lcall
xchg
movsl
xchg
sbb
push
adc
outsb
inc
cmc
pop
f2xm1
push
xchg
clc
imul
arpl
test
adc
inc
push
ljmp
xchg
cmp
pop
int
mov
and
mov
xchg
or
aad
add
jecxz
and
mov
hlt
enter
mov
adc
test
mov
mov
pop
imul
mov
dec
mov
jle
cmp
les
insl
lea
loope
jo
fnstsw
mov
sbb
dec
sahf
and
lret
in
test
aam
mov
push
dec
and
add
dec
dec
adc
popf
jno
sbb
jmp
pop
push
unpcklps
daa
js
dec
mov
jle
push
leave
mov
push
lahf
arpl
stos
jmp
dec
jmp
adc
jl
stos
fisttps
aad
cmp
cmc
les
popa
xorl
xorl
pop
xchg
lock
lods
cmp
ret
dec
mov
and
pop
inc
inc
or
sub
dec
fucomip
fs
scas
adc
mov
icebp
xchg
mov
lea
sbb
adc
xor
les
cltd
or
adc
jne
cmpsl
fsubs
loope
jb
das
sub
lds
xchg
xchg
jns
sub
add
pop
dec
mov
das
mov
data16
cmpsl
shrl
mov
jl
and
sti
inc
pop
add
iret
push
sub
mov
int3
sbb
push
je
or
ret
xchg
xchg
xchg
or
popa
mov
mov
les
lcall
cltd
hlt
mov
vcvttsd2si
push
sub
add
movsl
ljmp
xor
call
add
sti
push
fbld
mov
jle
nop
xchg
or
push
dec
repnz
or
lcall
xor
cld
xchg
into
push
mov
les
mov
jg
ret
add
sahf
push
mov
inc
xchg
aaa
fstps
aas
cmpsb
imul
jne
pop
jmp
into
das
sub
sar
insb
dec
lahf
xchg
daa
lahf
add
and
stc
lock
cld
push
or
push
fadd
insb
out
mov
in
inc
push
test
jo
mov
sub
push
push
push
fadds
inc
dec
call
jge
fbstp
cli
xor
rcll
xor
dec
insl
push
cmp
sti
imul
sub
lret
push
pop
arpl
add
aad
leave
sub
pop
inc
mov
lock
xchg
sub
mov
loop
and
test
mov
nop
hlt
push
dec
add
xor
lret
inc
and
jmp
pop
shll
andl
sub
call
sbb
mov
sub
jmp
push
repz
mov
and
mov
add
cwtl
jae
pop
movb
inc
pushf
sbbl
insl
mov
mov
cmp
popf
sbb
pop
in
mov
mov
push
fs
pushf
repnz
and
iret
std
add
or
clc
pop
cwtl
daa
je
adc
push
int3
dec
pushf
lret
sbb
repnz
pop
jge
movsl
sti
inc
cltd
lds
pushf
pop
cmp
and
pushf
jmp
mov
subb
mov
mov
or
dec
adc
or
or
mov
push
jns
cs
pop
insl
aaa
adc
jge
mov
and
pushl
std
mov
daa
loopne
test
mov
lea
push
pop
test
data16
mov
push
mov
cmp
mov
testb
xchg
mov
int3
lea
or
push
add
inc
rcrl
adc
pop
call
sub
add
sbbl
int3
fwait
jmp
push
lds
xchg
cmc
fs
xchg
int
outsl
lods
loopne
mov
pop
cmp
sbb
lret
mov
lods
out
movsl
insb
add
pop
xlat
std
cmp
sub
leave
sub
jne
sbb
aad
mov
in
lods
mov
cmp
movsl
pop
cmpl
lea
dec
ds
inc
test
xchg
jmp
pop
mov
hlt
scas
call
dec
or
stos
pop
jmp
outsl
inc
out
mov
cmp
addr16
or
mov
shll
and
sbb
xor
adc
mov
pop
or
xor
lret
js
pushf
out
lret
add
add
add
xchg
in
mov
xor
or
movsb
outsl
inc
and
sub
mov
loop
sub
sub
inc
or
inc
sbb
xor
and
sbb
neg
adc
adc
add
adc
sbb
int3
mov
push
pop
bound
outsb
sbbl
dec
and
aad
xor
jmp
aam
dec
daa
jecxz
nop
shrl
pop
sbb
mov
mov
inc
int
inc
adc
cs
lock
jecxz
cs
cmp
sbb
daa
jo
ja
out
pop
notb
int3
fdivrl
mov
add
sub
movsb
pop
sahf
out
lea
push
fwait
mov
in
dec
lods
cmp
out
or
push
push
mov
and
sti
mov
xchg
ret
push
inc
scas
xchg
dec
add
faddl
bound
xchg
xor
push
and
aad
inc
pop
test
add
mov
rclb
dec
xchg
cmp
cmp
jno
imul
repz
clc
add
lock
cmp
repnz
clc
mov
mov
movsl
out
cmp
xchg
jle
jmp
cmpb
andb
adc
xor
push
mov
stc
add
les
mov
push
sbb
sbb
inc
jmp
push
mov
jns
dec
aam
je
adc
xor
adc
pop
repnz
mov
cmc
xor
inc
add
jo
or
adc
or
mov
std
cwtl
pop
sub
adc
push
xor
inc
mov
ffree
cmp
insl
dec
in
pop
inc
lock
jg
shrl
dec
lock
bound
int3
ja
pusha
test
mov
adc
jno
inc
movsl
and
fidivl
mov
adc
mov
mov
push
inc
dec
or
jbe
dec
test
jl
mov
lods
xor
enter
jmp
push
cmp
push
push
rclb
push
push
push
leave
les
test
rclb
jb
sbb
cmpsb
pop
inc
or
push
jb
js
xchg
scas
scas
xchg
adc
pop
push
push
loope
lret
out
adc
in
push
mov
push
leave
or
rolb
add
add
or
icebp
or
jns
lahf
call
push
dec
aas
jne
xchg
cmp
sarl
mov
inc
sub
enter
ds
test
pop
loop
cwtl
cs
adc
add
jns
das
jmp
sbb
cmp
in
stc
adc
pop
mov
or
and
jnp
cwtl
iret
and
xchg
inc
popa
pop
adc
mov
orl
loope
jl
adc
or
sbb
inc
or
xor
sbb
mov
adc
shl
add
xchg
fucom
cltd
jg
push
cmpl
dec
leave
xor
pop
cld
fdivrs
loopne
pop
mov
inc
inc
push
jl
addl
mov
addb
and
push
les
gs
cmpsl
push
jns
add
aas
add
cld
sub
inc
or
jge
push
mov
adc
adc
lret
sub
aam
in
push
adc
adcl
ss
decb
jo
dec
das
shll
and
mov
xlat
scas
imul
and
movsb
adc
test
fcompl
shll
and
scas
fimull
sbb
push
and
xor
adc
je
mov
bound
ds
jmp
sub
inc
ret
mov
xor
cmp
in
daa
dec
cwtl
ds
pop
sbb
dec
and
inc
and
gs
xor
out
icebp
sub
lds
lea
js
pop
xor
addr16
and
dec
mov
testb
pop
enter
repnz
and
xchg
fs
sub
in
jne
mov
dec
mov
add
fs
jmp
jnp
cltd
fists
fs
dec
mov
push
xchg
fstl
ret
sub
sbb
sbb
mov
testl
ret
inc
cld
fisubl
fbstp
xchg
nop
jp
mov
dec
sbb
jb
in
repz
repnz
mov
add
dec
cmp
inc
sub
jo
nop
fs
dec
movsl
xchg
mov
xchg
push
push
mov
testb
jo
lahf
push
add
mov
xlat
test
mov
pop
mov
test
add
xchg
mov
adc
push
adc
pusha
pop
sarl
pop
xlat
sbb
push
in
sbb
aam
scas
fcoms
shll
push
insb
push
pusha
and
xchg
mov
test
push
clc
push
in
dec
xor
imul
fs
xor
cmc
sti
dec
sbb
dec
hlt
out
loop
inc
jae
mul
lds
mov
adc
sti
loop
das
add
push
or
lea
loope
test
cmp
enter
xorl
jle
push
daa
cmc
cltd
mov
loop
add
push
call
jo
and
fs
scas
daa
dec
push
pop
ljmp
and
je
sbb
jo
jmp
cld
jae
and
push
shl
repz
sub
sbb
idiv
pop
sub
jne
or
incl
lahf
ljmp
dec
fmul
adcb
mov
mov
ja
inc
cld
jbe
sti
out
mov
dec
mov
and
popf
loope
mov
push
outsl
imul
and
xor
stos
push
decb
vdivps
pusha
inc
mov
scas
ja
lds
push
leave
lcall
cmp
add
pop
inc
push
inc
pop
in
inc
xor
shrb
cmc
cmpsb
push
mov
inc
inc
hlt
and
popa
jge
adc
xor
sbb
call
mov
pop
cs
hlt
sub
test
imul
inc
movsb
decb
jg
or
or
push
in
jmp
adc
sbb
cmp
push
in
test
loop
rcrb
loopne
cmp
or
add
adc
sbb
mov
test
loopne
pop
jae
movsl
fistl
sbb
enter
inc
sbb
pusha
mov
scas
mov
sbb
or
popa
pop
mov
sbb
mov
orb
xchg
sbb
pop
mov
push
jbe
ljmp
aam
sbb
in
xchg
leave
cli
or
inc
and
unpcklps
add
mov
mov
imul
lcall
fiadds
inc
in
rclb
out
icebp
inc
inc
imul
fcmovu
sbb
mov
mov
and
nop
push
pop
xchg
push
subb
shll
xchg
inc
and
mov
adc
xor
mov
add
inc
inc
rclb
call
es
mov
sti
sub
mov
lods
pop
out
add
inc
std
mov
pop
jb
and
xlat
jbe
adc
lods
jl
xlat
xchg
seto
mov
aas
sub
and
fdivrs
adc
in
or
xchg
les
lea
adc
cmpsl
loopne
xlat
cmp
xchg
jge
lds
or
icebp
mov
inc
mov
jne
aad
adc
jle
imul
mov
fsts
dec
aad
ja
aaa
fidivrs
in
sbb
in
fldt
sub
sbb
cli
cmp
test
inc
aam
in
push
xchg
lds
loop
push
pop
in
add
aam
dec
or
push
pop
daa
sub
insb
loopne
cwtl
mov
flds
repnz
clc
lret
push
fs
lock
xchg
int3
fcomps
push
adc
mov
xor
lods
decb
mov
rclb
out
leave
in
neg
adc
inc
bound
and
lret
dec
insb
mov
xchg
std
mov
inc
or
movsb
stos
into
nop
shrl
adc
cli
cwtl
lods
cld
popf
lds
mov
or
into
dec
jae
jle
mov
mov
mov
mov
mov
jae
sub
jmp
jmp
or
into
cmp
inc
or
test
jmp
adc
dec
or
adc
mov
xchg
xorl
dec
xor
adc
sbb
in
dec
or
daa
mov
repnz
div
imull
mov
jmp
fistpll
pop
xor
or
ja
sub
test
mov
addr16
js
push
xchg
xchg
cmp
jb
xor
inc
adc
notl
mov
clc
nop
pop
addr16
mov
stc
jg
cmpsb
or
je
xor
je
push
sub
mov
jmp
test
add
push
or
push
mov
sub
inc
adc
add
and
test
mov
cmp
sbbb
and
xchg
cmp
inc
mov
repnz
mov
dec
pop
in
sbb
shll
lock
jle
mov
fisttpll
mov
sbb
insl
leave
and
lret
push
iret
pop
mov
dec
or
and
xchg
fildll
or
ds
ja
inc
call
enter
mov
enter
daa
adc
jnp
xchg
mov
lea
xor
sbb
fbstp
inc
lods
sub
sub
and
loop
mov
sbb
in
cmp
into
dec
mov
mov
sbb
inc
addb
jnp
pop
aas
ret
jbe
inc
hlt
jnp
in
aas
xor
shl
jnp
adc
fnstenv
in
sub
popf
cmpsl
mov
lods
xlat
test
dec
out
shrb
stc
xor
sti
sub
out
xchg
inc
add
sbb
jle
ljmp
in
adc
pop
jns
add
call
cmp
dec
dec
cmc
lea
icebp
mov
shufps
sahf
das
dec
jg
fldt
lea
push
test
pop
pop
mov
sub
test
sbb
aas
xchg
les
push
sti
sbb
and
pop
pop
mov
pop
in
push
lods
mov
lods
mov
and
push
pop
stc
dec
mov
mov
lea
dec
cmp
cmpsl
pop
adc
adc
shrl
sbb
jmp
jo
inc
enter
pop
and
cs
lods
push
add
add
mov
push
shl
pop
jns
xchg
jb
mov
rcll
stc
inc
adc
push
mov
add
in
lods
js
xor
mov
xor
call
mov
or
sti
jb
ja,pn
or
cmp
adc
push
sbbb
pop
mov
add
xor
lea
cli
daa
or
lcall
dec
or
movsl
repz
mov
aad
jmp
and
sbb
or
movsb
loope
cmpsb
xchg
adc
daa
or
and
iret
mov
mov
adc
push
aam
mov
lcall
lods
dec
rclb
cmp
push
xchg
mov
cmp
imul
adc
sbb
inc
push
push
out
push
insl
stos
pop
jle
mov
or
dec
sub
xor
xchg
or
sub
adc
sub
es
aaa
xor
or
lods
dec
lret
popf
push
jle
sub
and
cmp
xchg
pop
ret
xchg
jmp
jnp
push
push
mov
pop
ss
add
cmp
jae
ljmp
ret
ret
mov
mov
jmp
mov
or
shlb
scas
fsts
aad
into
leave
orb
in
adc
sbb
xchg
push
shrl
jo
into
and
mulb
mov
in
or
adc
dec
leave
leave
push
loop
dec
test
push
cmpsl
adc
cmc
cmpsl
repnz
dec
add
inc
or
xor
push
mov
inc
je
xor
adc
mov
rclb
adc
negb
pop
adc
call
lret
push
add
sub
int
fs
cmp
mov
out
out
dec
stos
jns
imul
xchg
sti
jb
cbtw
in
add
sub
rcl
mov
jmp
inc
jmp
cli
xor
mov
add
jnp
ret
sub
push
mov
lahf
fcmovu
popf
mov
jo
int3
xlat
jae
xchg
cmp
or
js
call
fistl
jbe
movsb
dec
sbb
imul
add
stos
clc
std
rclb
push
add
or
clc
cmc
lds
sub
pop
pusha
bnd
xchg
pop
add
pop
scas
dec
jmp
cmpl
mov
test
mov
mov
lret
dec
adc
mov
cmp
and
cltd
enter
and
xor
sbb
sbb
push
loop
add
xor
and
daa
idivl
dec
pop
cli
ja
mov
jmp
int3
dec
add
cltd
sub
mov
movsl
pop
adc
or
mov
add
sbb
leave
mov
push
push
pop
xor
or
jo
or
and
or
cltd
leave
ja
lods
lcall
or
inc
mov
sbb
adc
lret
pop
cmp
dec
and
add
mov
inc
inc
add
add
ja
or
es
adc
or
cmp
imul
sbb
movsl
add
xchg
dec
jge
sbb
xchg
adc
or
data16
add
adc
mov
sbb
add
test
add
adc
or
or
and
mov
rolb
fistpll
jae
cltd
mov
add
js
pop
sbb
pop
and
jns
dec
or
inc
mov
jne
mov
loop
jo
out
lcall
sbb
call
std
xor
xlat
pop
pop
jns
out
xor
or
dec
sub
xchg
mov
shr
and
mov
lea
fldenv
jle
or
enter
lock
scas
popf
and
adc
jl
clc
cmp
add
xchg
scas
icebp
and
sbb
repnz
cld
mov
cmp
dec
loopne
inc
mov
add
fisubs
das
loope
in
and
and
push
xchg
xor
bound
mov
movsb
adc
mov
inc
nop
add
ret
xchg
cmp
mov
mov
shl
push
pushf
jae
adc
leave
aam
nop
dec
shrb
add
mov
pop
mov
das
fildll
leave
cld
jno
es
adc
mov
shrb
sub
dec
divl
xor
mov
rol
les
push
ficoms
call
lret
in
lret
xchg
jl
je
lock
xchg
pop
dec
and
push
orl
cli
inc
outsl
and
in
lret
mov
mov
mov
jmp
lret
add
and
movsb
xchg
sbb
xchg
cmp
call
and
xor
xor
dec
adc
fld
cld
ret
pop
mov
ljmp
je
jg
mov
mov
xlat
in
fs
inc
or
pop
mul
fdivr
push
dec
push
mov
in
and
rorl
cmp
add
ficomps
push
push
leave
or
aas
push
jmp
lea
mov
in
mov
dec
pop
add
shlb
mov
dec
push
dec
mov
cld
xlat
jmp
les
push
add
fisubrs
pusha
mov
pop
mov
dec
pop
pop
cwtl
or
mov
mov
push
cltd
or
cmp
rclb
push
cmp
gs
xor
sub
adc
in
adc
ret
xchg
sub
sub
jl
mov
or
inc
movsb
es
fildll
dec
xchg
push
push
or
and
es
jae
push
adc
repz
into
outsb
pop
xor
mov
lods
sbb
test
or
in
xor
sub
add
ja
sub
ljmp
insl
mov
sarl
or
incl
mov
push
push
inc
mov
jmp
adc
les
adc
xor
in
adc
mov
push
cmpsl
rolb
shrb
test
lock
xchg
rcl
lret
and
enter
lock
fdivr
push
inc
lea
es
push
adc
mov
push
movsl
fwait
lods
fdivrl
pop
mov
ret
push
stos
and
xchg
call
xor
shlb
bound
inc
adc
and
rol
adc
jno
rclb
sbb
jns
adc
and
inc
pusha
enter
insb
xor
inc
mov
pop
or
scas
shlb
movb
jle
dec
lods
icebp
dec
xchg
adc
out
and
sub
xor
stos
ficoml
jmp
cmp
and
xor
mov
jne
mov
pcmpgtb
xor
aad
mov
test
ss
leave
out
jmp
mov
in
xchg
push
cmp
stos
mov
stos
int
imul
and
insl
or
ret
sbb
dec
or
mov
pop
sbb
call
nop
sub
inc
lea
inc
ficoml
cmp
mov
lcall
iret
sub
push
push
adcb
xor
repz
or
push
push
and
stc
out
xchg
js
or
push
or
or
add
mov
outsl
idivb
dec
mov
out
pop
sbb
bound
and
jp
in
and
push
lods
pop
data16
mov
jmp
inc
in
add
mov
mov
dec
or
rcrb
push
add
ret
fcomps
mov
dec
or
je
enter
jl
imul
adc
lahf
iret
loope
mov
xchg
lock
cmp
loopne
mov
or
fimull
ja
push
insb
lret
inc
ljmp
test
shll
cmpsb
rcll
in
add
call
ljmp
jne
push
data16
enter
mov
sbb
inc
stos
adc
popf
push
mov
mov
or
mov
sub
imul
xchg
call
mov
mov
dec
inc
and
lock
out
cld
shl
je
aam
jbe
xor
xlat
in
fcoms
sub
sub
or
push
iret
decl
cmp
cs
decb
stc
pushf
adc
adc
sbb
test
lret
pop
pop
popa
jb
dec
notl
insb
push
push
out
inc
and
cmp
push
push
adc
jecxz
or
pushf
decb
mov
push
mov
pop
or
pop
out
add
pop
sahf
mov
add
xor
ss
mov
push
cmovno
lods
jo
lock
add
fcmovbe
out
nop
mov
fsubl
jge
pop
mov
pop
add
push
or
fisttps
mov
push
push
push
mov
xor
dec
pop
inc
or
mov
imul
adc
or
mov
out
dec
jno
add
cmp
or
cmp
sbb
movsl
cmp
sub
xchg
sub
and
sub
jne
sub
sub
push
or
sub
sub
xor
mov
repnz
das
jno
dec
or
ficompl
cmp
mov
jb
pop
nop
inc
and
jge
inc
addl
sbb
nop
aas
mov
and
out
push
mov
loop
or
ret
pop
inc
pop
cmp
enter
fs
mov
repnz
pop
nop
insb
and
nop
sub
test
je
cmp
ljmp
nop
lret
mov
lods
test
mov
push
cmpsb
and
repnz
aas
sbb
test
mov
inc
cmp
enter
jb
pop
nop
nop
enter
das
and
and
pop
inc
pushf
and
mov
pop
add
adc
enter
jb
pop
nop
test
push
and
lds
scas
notl
sar
xchg
or
xor
mov
imul
enter
inc
call
aam
gs
xor
pusha
sbb
sbb
xchg
or
sahf
xor
lea
dec
sub
data16
sub
sti
xchg
push
lea
xor
fsts
insb
cmp
inc
cmpsb
enter
mov
add
insl
movb
dec
andl
and
enter
mov
add
insb
pusha
orl
add
xchg
push
lea
jo
leave
fs
mov
ss
jl
lea
xchg
xor
test
cmp
mov
xor
adcb
xchg
inc
mov
sbb
sbb
inc
push
enter
insb
pushf
xchg
notb
xchg
sbb
movsb
mov
xchg
shrl
or
gs
leave
mov
cmp
add
push
lret
pop
flds
push
push
clc
or
sbbl
bswap
loopne
mov
cmp
cmp
push
add
sub
mov
inc
outsb
or
adc
inc
bound
mov
lock
sarl
movsb
fsts
or
lods
movsl
shrl
mov
clc
cmc
lds
adc
loopne
stos
xchg
push
shll
pop
or
adc
push
adcl
sub
xor
mov
inc
mov
sub
jp
je
xchg
cld
or
js
mov
fldcw
outsl
mov
dec
xchg
and
or
cs
add
add
xor
xchg
cmpl
imul
pushf
xchg
rorb
lea
in
test
sbb
inc
mov
add
in
add
add
cmp
inc
or
xchg
daa
je
out
mov
add
adc
mov
cmp
add
xor
or
jg
and
jmp
or
adc
pop
and
mov
xlat
mov
mov
or
push
mov
push
and
aaa
fsubrl
mov
lods
in
sub
test
push
jmp
jno
mov
dec
or
jb
or
jno
mov
sub
adc
stc
fildl
pusha
mov
adc
clc
or
cli
mov
mov
sub
in
push
ljmp
imul
jecxz
sub
pop
in
pop
adc
push
pop
bound
pop
enter
enter
sbb
mov
repnz
sbb
inc
or
add
inc
stos
and
inc
push
adc
inc
mov
lods
movsl
pop
sub
sbb
xor
pop
pop
sub
sbb
outsl
or
sub
push
frstor
jns
pop
js
xor
and
push
and
jns
add
repz
test
cs
nop
aam
das
adcl
sub
jp
sar
add
idivl
aas
xorl
cwtl
mov
adc
pop
sub
in
or
add
inc
and
mov
rcll
fnsave
gs
xor
or
sub
ljmp
test
imul
and
insl
loop
pop
push
jmp
add
cli
shrb
cmpsl
sbb
pusha
test
bound
jmp
test
push
cmp
shrb
and
lahf
xchg
cmp
or
ds
addl
repnz
jno
cmpl
add
mov
mov
outsl
lods
cmp
jmp
sti
sbbb
jne
dec
and
add
mov
in
add
call
das
leave
pusha
das
fsubrl
mov
rcrl
and
jmp
xor
shrl
ljmp
ja
je
loopne
xchg
or
sub
or
aam
es
fimull
jmp
dec
mov
xor
ffreep
addl
enter
cwtl
leave
sarb
mov
sub
stc
leave
jg
push
test
sub
fsubl
mull
aaa
stos
jmp
stos
fildll
and
push
gs
mov
adc
pushf
jmp
and
xchg
aam
pop
pop
lea
test
hlt
or
cmp
jmp
test
dec
scas
xchg
andb
stos
inc
xchg
rclb
sub
inc
ret
inc
push
dec
lds
lods
hlt
dec
mov
and
divb
add
sbb
xchg
fs
mov
inc
mov
dec
pop
sub
mov
adc
es
sub
fmul
dec
sbb
loope
mov
sbb
jge
call
and
mov
mov
aas
hlt
or
add
enter
push
mov
scas
mov
mov
adc
mov
nop
xor
push
lcall
inc
pop
or
adc
stos
add
adc
repz
out
call
adc
add
mov
add
ret
cs
xchg
cmp
cmp
lea
cmp
fstpl
loopne
mov
mov
mov
fs
int3
mov
dec
test
or
sbb
daa
jmp
adc
or
push
mov
adc
or
push
or
add
call
daa
dec
mov
push
mov
inc
cmp
xchg
test
and
dec
inc
clc
inc
push
imul
dec
adc
mov
dec
inc
mov
mov
push
push
pop
and
movsl
insl
mov
sbb
gs
mov
push
sti
mov
and
cli
mov
mov
rcl
xor
push
or
sub
sbb
stos
das
mov
adc
ss
push
or
jmp
and
xlat
inc
mov
leave
add
and
push
pop
mov
aas
dec
adc
mov
add
inc
dec
mov
js
push
add
adc
sarl
xchg
cmpsl
pusha
sub
lods
adc
bound
add
cltd
sub
sar
cmp
sarb
adc
jmp
rclb
mov
shll
mov
jmp
mov
imul
or
sub
hlt
notb
sbb
pop
mov
test
add
sete
or
in
das
mov
mov
and
test
lods
adc
or
aas
mov
or
sbb
inc
rorl
lcall
add
push
or
add
and
dec
pusha
or
xchg
xchg
mov
mov
call
test
lea
dec
mov
xchg
in
movsl
xchg
sbbb
sub
test
push
insb
int
icebp
or
cmp
fmul
and
mov
inc
mov
mov
sub
insb
add
or
test
aam
jo
cmp
push
pop
test
jb
lret
xchg
or
movsl
mov
test
mov
loopne
mov
mov
and
call
adc
shlb
and
ss
outsl
inc
add
mov
jne
fsubrl
cmp
jl
jo
xor
leave
push
and
add
push
mov
push
scas
mov
test
jne
cmp
loope
cmp
xchg
leave
scas
push
adc
inc
mov
lahf
lds
inc
loopne
mov
ret
inc
cmp
dec
sub
mov
sbb
sub
aad
dec
outsl
stos
cmpsb
cvtps2pi
in
repz
push
and
adc
popa
pop
mov
jge
int3
and
jecxz
xchg
jne
xor
js
add
es
jge
clc
inc
sub
adc
mov
push
or
loopne
jns
mov
shrl
mov
mov
nop
add
add
lds
dec
cmpsb
ret
lds
sub
xchg
lret
add
mov
inc
repz
cmp
or
xor
arpl
pop
xchg
test
or
jl
push
dec
inc
and
cmp
mov
nop
cmp
push
inc
pop
mov
xchg
and
leave
xchg
xor
or
and
jb
jae
push
inc
pop
into
or
add
jae
jno
jo
xor
and
inc
sbb
or
push
sbb
scas
jmp
mov
or
add
and
mov
shlb
and
push
mov
adc
xchg
push
jl
scas
xchg
adcb
push
cmp
clc
mov
add
les
cmp
add
or
cmc
repz
out
and
pushf
adc
fwait
loopne
data16
dec
pop
sbb
or
ljmp
daa
shlb
mov
pop
pop
in
push
bound
adc
mov
adc
or
int
fbld
mov
push
mov
test
repz
add
xchg
and
sub
js
sbb
sahf
outsl
sub
fbld
pop
mov
lods
stc
or
test
mov
sbb
jl
or
movl
or
mov
jo
adc
out
shll
daa
mov
jg
add
in
and
leave
dec
sub
or
xchg
lock
pusha
js
mov
pop
out
bound
ja
mov
push
dec
movsl
hlt
add
iret
or
scas
inc
subl
enter
ds
add
push
add
aas
or
push
and
cld
sbb
loopne
push
and
sub
sub
or
or
ds
mov
sub
adc
xor
or
arpl
pusha
push
test
mov
jl
inc
popf
decb
fs
popf
xchg
inc
ja
lods
xchg
and
or
or
icebp
cld
aas
mov
sub
scas
fs
and
adc
mov
rorb
push
pop
mov
xor
je
mov
adc
jg
mov
xlat
in
out
in
test
sbb
jg
or
stc
xchg
pop
popa
dec
pop
sub
jmp
sahf
call
nop
xor
test
cmpsb
js
pusha
cltd
clc
mov
pop
and
repz
mov
sbb
mov
add
bound
push
mov
cmpsb
jmp
sahf
adc
mov
repnz
add
notl
push
or
add
ret
add
sub
xchg
push
sub
call
mov
cmp
inc
mov
imul
sub
sbb
pushf
sub
push
dec
test
out
sbbb
test
adc
jne
out
dec
adc
das
push
and
push
cmp
mov
cmpsl
jo
loopne
dec
inc
inc
xchg
hlt
push
cs
inc
es
mov
cmc
pushf
jo
pop
xchg
or
fsts
push
popf
fisttpll
jbe
addr16
or
stos
ja
xor
push
in
fwait
andl
dec
ljmp
or
inc
inc
fs
es
lahf
pop
and
lock
or
jecxz
sbb
push
lea
in
call
or
mov
jge
push
mov
lea
xchg
inc
cmp
xorb
xor
pop
jl
loopne
or
ret
push
mov
adc
clc
push
xor
push
adc
push
push
dec
jle
jno
mov
xchg
or
sbb
scas
inc
sbb
hlt
xchg
rcll
jl
jp
in
xchg
pop
sub
rorb
fadd
add
pop
pop
mov
ja
testl
cmp
movsl
inc
cwtl
in
in
or
sub
pop
mov
xchg
and
stos
push
push
hlt
lret
push
mov
mov
dec
pushf
addr16
jb
test
pop
jbe
imul
mov
cs
shlb
imul
movsl
incl
jnp
adc
lods
aad
add
test
lcall
ljmp
sub
dec
xor
stos
push
mov
mov
xchg
mov
outsl
mov
dec
dec
call
xchg
scas
lret
nop
dec
mov
or
and
clc
or
adc
loop
pop
cmc
inc
add
dec
or
dec
scas
fs
adc
sub
xorb
pop
mov
xlat
cmpsl
dec
daa
add
sbb
imul
ret
mov
gs
sub
sub
jne
push
and
data16
loope
dec
inc
inc
out
out
mov
fisubrs
adc
xor
inc
mov
pop
inc
jbe
dec
dec
call
add
inc
push
mov
rcrb
out
pop
movl
sub
sbb
sar
xlat
mov
sub
cli
fiaddl
mov
sar
add
or
xchg
rcrl
popa
sarl
and
loop
jle
jmp
sbb
push
adc
jle
ds
lock
sub
cmpsl
fstpl
xchg
adc
dec
mov
push
xlat
js
cmp
dec
dec
or
and
inc
enter
rcrw
xor
mov
nop
enter
mov
shlb
mov
in
sbb
jmp
int3
dec
pop
pushf
stos
jge
imul
jle
in
cli
clc
or
mov
test
jb
pop
les
sbb
ret
xchg
adc
jmp
lea
pop
inc
sbb
jl
and
inc
or
cmp
xchg
nop
add
cld
dec
push
jne
xchg
or
or
pop
mov
cmpb
sub
or
repz
xchg
daa
and
sbb
adc
push
aas
lahf
aam
pavgw
inc
fcom
xchg
mov
push
sarb
pushf
inc
movsl
push
orl
sbb
pop
push
sub
imul
mov
mov
and
std
and
mov
cmp
out
jp
inc
lea
or
in
imul
fs
dec
sub
dec
push
mov
or
xchg
daa
inc
and
inc
or
repz
push
and
adc
push
mov
negb
das
mov
out
cmp
adc
xor
jo
scas
xlat
aaa
leave
cmc
stc
ret
and
and
lahf
je
mov
dec
mov
sbb
xor
adc
std
mov
jmp
bound
insb
xchg
or
decl
cmp
shll
sbb
mov
or
rol
pop
loopne
jmp
jne
xchg
les
push
stos
dec
jmp
in
adc
int
cwtl
clc
les
pushf
popf
inc
les
addr16
fidivs
dec
nop
xor
daa
pop
fiaddl
stc
xor
adc
xor
mov
sub
jb
dec
mov
cli
iret
inc
push
jnp
xor
push
lahf
cld
sbb
pop
inc
and
dec
xor
test
add
sub
adc
pusha
repnz
out
xchg
adc
andb
popf
loopne
in
test
popf
mov
add
or
push
mov
inc
mov
jae
cmp
stc
decl
repz
jb
and
and
and
pop
push
mov
adc
mov
pop
xchg
sti
sub
les
mov
jp
mov
imul
sbb
pop
sbb
jae
jo
movsl
mov
push
out
pop
fs
enter
push
ret
cmp
imul
mov
mov
inc
sub
test
or
lea
push
or
cld
xorl
jle
mov
add
std
das
adc
cmp
les
push
aas
cmp
xchg
mov
add
dec
into
push
pushf
sub
dec
push
sbb
leave
jl
xchg
adc
xchg
pop
gs
lahf
clc
stos
loope
sbb
lock
and
sub
dec
hlt
filds
add
sti
movsl
fsincos
push
out
ljmp
xchg
inc
loope
cmp
dec
dec
mov
std
outsl
repz
cmp
adc
mov
lea
push
xor
lret
call
push
push
mov
and
pop
xchg
ss
insb
std
outsl
mov
push
out
popf
xchg
movsl
hlt
inc
cmovb
dec
sbb
and
mov
cltd
inc
and
enter
xor
jne
call
xchg
fildl
mov
or
int3
cwtl
lock
add
mov
dec
cmp
fldcw
clc
adc
sub
jbe
dec
inc
inc
add
mov
and
and
jmp
or
jp
out
mov
and
shrl
and
lahf
lods
es
ret
push
clc
or
in
push
push
ss
jmp
add
push
inc
xor
add
add
pusha
pop
or
xchg
mov
and
mov
pop
and
and
jp
lods
mov
mov
int3
inc
lods
xlat
mov
rolb
icebp
in
mov
push
jle
enter
inc
mov
in
push
not
stos
xchg
cwtl
scas
mov
jae
and
dec
sti
decl
test
pop
jne
sti
cmp
je
leave
sbb
test
lcall
inc
adc
or
int3
or
and
dec
mov
mov
mov
mov
mov
les
add
dec
xchg
dec
mov
xchg
and
jg
sti
aad
jns
xchg
cwtl
dec
sbb
sbb
xor
pop
test
inc
add
adc
and
cmp
adc
cmp
clc
rorb
sbb
and
inc
hlt
and
sub
adc
es
das
and
das
cli
cli
inc
mov
xchg
push
or
shrb
push
pop
je
jp
sub
cmp
push
daa
push
sbb
and
call
gs
add
jge
cmp
xchg
mov
jbe
mov
sub
popa
and
hlt
dec
inc
and
push
dec
addl
in
adc
rol
je
xor
sub
and
add
pop
lahf
cmp
inc
clc
inc
lcall
cli
gs
xchg
and
out
adc
jmp
adc
stos
addb
and
xchg
xchg
add
sub
mov
push
pop
loopne
in
xchg
and
sbb
ror
add
xchg
enter
mov
ficompl
popa
andl
data16
dec
rclb
das
stc
ficompl
movsb
push
insb
push
icebp
xchg
push
lods
andb
add
pop
adc
cs
shl
xchg
inc
push
dec
sbb
sbb
mov
adc
lods
xchg
cmp
adc
sbb
inc
and
ljmp
clc
loop
or
sbb
cs
aas
loopne
aam
mov
jp
repz
imul
call
and
mov
mov
mov
mov
pop
fs
sub
adc
fs
inc
pop
sub
xchg
jmp
das
adc
lods
es
inc
int3
ja
pop
jo
dec
in
cmp
inc
sbb
lcall
cs
add
xchg
jle
je
outsl
testb
mov
ret
fcom
stos
cmp
fcoms
movsl
jnp
or
xchg
lcall
adc
test
fldenv
cmp
jae
jge
and
repz
adc
bound
add
inc
mov
jmp
mov
bound
pop
in
dec
fists
sub
fisubrs
xchg
sub
push
fs
ss
add
scas
ja
mov
movsl
icebp
test
mov
adc
push
mov
pop
dec
lock
jae
gs
mov
or
dec
xor
add
add
daa
dec
mov
shr
ss
in
test
test
stos
loop
neg
arpl
in
movb
jl
je
inc
inc
mov
push
fcoms
enter
cwtl
pop
cmp
mov
mov
mov
or
aaa
inc
jae
push
xchg
addr16
subb
nop
test
nop
sub
jl
or
xor
sbb
cmp
push
xor
in
inc
push
mov
push
les
xor
mov
fldcw
fiaddl
adc
loop
pop
dec
jne
rorb
jno
into
pop
pushf
mov
xchg
pop
pop
test
pop
cmp
xchg
call
push
loopne
mov
das
and
push
xchg
xor
sub
or
and
sbb
mov
loop
jno
rcr
or
or
xchg
cmp
add
test
and
push
pop
roll
dec
push
add
pop
add
ret
movsl
xchg
or
lods
rol
nop
adc
in
pop
stc
rolb
xchg
jo
mov
cmp
icebp
mov
push
pop
xchg
mov
into
hlt
xor
cmpsb
rclb
and
jmp
aas
popf
and
call
dec
stos
dec
jno
imul
sub
xchg
fwait
push
test
xor
les
mov
mov
cltd
push
lahf
sti
arpl
outsl
call
scas
fcom
andb
xor
push
mov
xchg
test
dec
aas
and
and
dec
stc
test
xor
cmp
das
push
popf
imul
sub
insb
hlt
lahf
push
cmpsb
push
cmp
roll
dec
xor
mov
movb
sbb
movsl
jne
mov
mov
cs
int
cmp
sahf
or
or
pop
adc
movl
add
jne
movsb
adc
addr16
sbb
fdivrl
mov
fnstcw
insw
xor
sub
adc
movsl
decb
mov
and
mov
and
frstpm(287
xorl
or
std
iret
shrl
xlat
fwait
loop
mov
and
ja
imul
sbb
aaa
cmp
jnp
and
push
xchg
add
lock
out
sbb
orl
stos
pop
adc
es
xchg
mov
shl
call
jae
cmp
mov
sbb
and
lods
mov
cltd
sbb
adc
pop
jmp
xchg
and
mov
repz
add
dec
or
cmp
das
push
add
call
sub
jmp
sub
push
xor
push
mov
inc
inc
or
idiv
jmp
mov
and
jo
clc
and
cwtl
or
pop
add
mov
neg
sub
les
cmpsb
sub
enter
sub
xchg
mov
out
add
mov
sbb
jmp
sbb
sbb
mov
jmp
stc
add
xor
xor
insl
push
and
mov
in
jle
push
pop
lock
repz
add
jecxz
in
mov
lea
adc
and
call
sbb
jns
pop
jge
jb
sub
pop
mov
cs
adc
cs
out
test
outsl
enter
push
cmovnp
push
jns
xchg
add
enter
jmp
test
inc
popa
jmp
mov
lret
cld
jns
stos
add
cmp
cmc
lock
adc
imul
push
fldcw
or
xchg
testb
adc
nop
push
jmp
hlt
and
xchg
lret
js
rcrb
jl
test
in
xor
adc
push
dec
ror
and
xchg
or
inc
sub
push
xchg
out
adc
and
push
int3
push
pop
or
push
mov
insb
jns
ret
pop
push
fwait
int3
or
fmul
or
add
add
add
pop
ret
or
nop
and
adc
adc
adc
inc
adc
cmpsb
mov
or
sahf
imul
mov
sbb
loop
jge
push
mov
and
jmp
sti
mov
ret
jb
push
fs
mov
fsubrs
jae
int
adc
xlat
mov
loopne
xor
es
in
push
xchg
xchg
outsl
xor
or
adc
movsl
sbb
sub
mov
inc
das
mov
pop
addr16
sub
test
mov
mov
dec
pop
xor
je
push
jecxz
ss
popl
movsb
inc
sub
push
xchg
clc
scas
mov
add
cmp
outsl
and
hlt
sub
clc
xchg
and
mov
xor
loop
pop
push
rcl
inc
xor
ja
push
test
mov
pop
sbb
xchg
push
add
push
in
pop
das
std
lods
xchg
stos
mov
xchg
lods
cmpsl
push
icebp
inc
fld
cmp
mov
cmp
fs
mov
cmpsb
loopne
ja
xchg
mov
sbb
incl
mov
add
jg
ret
vmread
xchg
les
push
mov
or
inc
jmp
ds
sub
mov
pop
or
inc
jmp
push
ret
je
and
or
and
cltd
aas
sarl
sub
and
movsb
push
insb
adc
push
lock
jmp
dec
int
pop
cmp
mov
jno
aam
stos
daa
int3
or
and
rcrb
mov
jb
push
push
mov
dec
jmp
test
mov
push
lock
and
sbb
jb
clc
jo
mov
pushf
adc
or
mov
or
icebp
pop
scas
xchg
sbb
popf
cmpsl
das
scas
mov
insl
shrb
sbb
stc
mov
lock
inc
or
jbe
push
imul
fdivl
cmpsl
movsb
sub
lret
mov
popf
push
xchg
in
popf
inc
loop
inc
icebp
adc
rcrw
rclb
clc
jo
cli
fmul
movaps
jnp
pop
add
lods
test
mov
mov
lds
or
xchg
cmp
jge
push
les
lea
adc
xor
xchg
adc
push
stos
jne
mov
xchg
fcmovb
push
adc
or
or
mov
aad
lds
rcll
ss
sub
dec
and
jns
aas
test
lock
jns
adc
xchg
dec
aam
jnp
imul
mov
jb
sub
jmp
sub
jecxz
xchg
or
test
and
inc
sbb
enter
loopne
cmp
or
icebp
add
sbb
and
add
add
or
xor
rorl
xlat
and
dec
add
adc
sub
mov
xchg
pushl
gs
int3
xor
lret
push
push
out
and
lahf
inc
mov
mov
pop
call
cmp
test
inc
pop
add
cmp
push
icebp
call
mov
pop
dec
adc
push
add
imul
inc
xchg
aam
jnp
dec
lea
jbe
cmpsl
mov
push
jns
dec
or
xchg
scas
pop
push
arpl
mov
push
fs
test
test
or
xor
and
cmpsl
jb
adc
outsb
xchg
mov
sbb
idivl
sbb
ficompl
mov
xchg
adc
mov
push
and
adc
or
out
cmp
out
inc
adc
jmp
out
mov
movb
lea
ja
lock
repnz
mov
add
lea
adc
dec
inc
mov
xor
push
adc
decb
das
dec
loop
mov
and
push
fs
xchg
push
test
cmp
pop
movsb
xchg
inc
fidivs
add
sbbl
sarb
les
ljmp
notl
adc
or
adc
mov
mov
cmc
mov
scas
and
add
ds
cwtl
mov
xchg
hlt
push
outsl
imul
lds
pop
dec
outsb
adc
into
xor
fcomps
bound
adc
or
ljmp
pop
pop
scas
push
and
outsl
aam
mov
aad
sbb
stos
xor
fs
gs
les
cld
loopne
pop
and
xchg
ret
adc
or
fdivrl
xchg
lret
subb
movl
cld
sbb
sbb
enter
ja
xchg
or
leave
push
or
ss
adc
jo
sbbl
sub
outsl
xchg
outsl
sbb
push
push
dec
mov
mov
push
enter
pop
push
push
push
pop
jne
pusha
mov
add
mov
lret
xchg
mov
push
inc
xchg
inc
cmp
mov
jno
adc
and
inc
rol
xchg
vmwrite
cld
je
cld
rcrb
inc
xchg
lock
mov
push
or
adc
add
adc
inc
mov
fistl
sbb
xor
in
lret
jp
lods
adc
je
sbb
xchg
fsubrs
fimuls
jmp
and
ret
pop
pop
pop
jne
scas
rclb
std
jmp
jge
fneni(8087
dec
mov
mov
pop
mov
scas
inc
mov
or
mov
sbbb
push
sbb
add
adc
jne
or
leave
adc
out
data16
decb
pop
inc
sbb
cmp
and
in
inc
les
in
je
dec
f2xm1
push
push
icebp
xchg
or
cmp
out
hlt
aad
adc
jbe
add
dec
pusha
jnp
lcall
lret
xchg
shll
int3
fnstsw
mov
lcall
jns
popl
out
out
adc
scas
mov
jg
push
test
dec
cmp
pop
push
or
stc
mov
shr
xchg
xchg
test
fsub
gs
test
aam
sarb
sbb
push
sar
pop
mov
or
inc
push
pop
iret
sbb
mov
push
repnz
cwtl
push
xor
mov
mov
inc
call
push
fsts
push
loopne
popf
mov
ds
sbb
shrb
push
sarb
and
jge
or
std
sarb
shlb
cmp
jle
enter
pop
mov
fstpl
scas
fs
mov
test
inc
cld
scas
mov
push
ret
add
scas
sub
stos
jbe
adc
add
adc
adc
push
fstpl
pop
insb
aaa
call
cmpl
push
xor
cmp
lea
int3
add
sti
mov
mov
mov
adc
mov
cmp
jge
xlat
mov
xchg
and
fistl
pop
fistl
jl
push
mov
and
mov
lea
loop
push
and
dec
mov
pusha
jg
push
int3
das
aam
jmp
pop
pop
jl
jp
or
dec
faddp
add
lea
nop
shlb
jp
mov
pop
rcrb
pop
or
jo
filds
push
cmpsl
repnz
mov
push
int
jmp
mov
fcoms
adc
stc
pop
or
add
cmc
pusha
out
jmp
ds
pop
outsl
int
sbb
ljmp
stos
flds
push
dec
pop
daa
sbb
fcom
dec
jo
lods
jae
sub
or
rcrl
or
dec
pop
imul
xor
sub
orb
dec
push
jmp
jmp
mov
xor
fwait
in
or
dec
pop
test
repnz
push
mov
xchg
and
or
popa
bound
in
jp
sbb
adc
sbb
inc
cmp
dec
dec
neg
mov
sub
adc
lcall
or
std
imul
pop
jmp
imul
les
or
aam
cld
xlat
shll
adc
sbb
cmp
ss
jbe
or
lock
hlt
xor
cmp
or
mov
loope
pusha
aad
std
lods
test
mov
jbe
mov
sahf
xchg
ljmp
gs
and
daa
je
inc
xchg
dec
push
mov
out
call
sti
mov
repnz
jmp
jne
sub
imul
mov
xchg
sti
xchg
and
les
inc
lock
dec
out
mov
lea
fwait
sub
sti
push
adc
test
mov
cmp
das
push
call
addr16
adc
adc
cmp
int3
orb
dec
enter
fs
pop
andl
add
movsl
mov
cmp
movsb
or
or
push
and
lahf
jbe
push
lock
xchg
test
xchg
xor
and
rorl
cmp
sbb
lods
idiv
in
adc
ds
cmp
dec
pusha
xor
and
popf
add
sarb
add
movsl
and
add
es
int
cmp
push
mov
cmp
mov
adc
xchg
mov
imul
pushf
mov
gs
lock
and
imul
je
inc
out
loope
inc
sub
inc
aas
mov
add
xchg
and
js
jp
jo
inc
enter
mov
test
xor
xor
test
mov
int3
dec
xlat
rolb
dec
mov
call
cmc
xchg
mov
movsb
sbb
jmp
insl
or
mov
daa
and
sub
hlt
add
ja
mov
arpl
sbb
dec
push
fwait
in
push
jo
push
adc
insb
flds
sbb
add
jo
call
inc
mov
pop
loop
ja
repz
sub
hlt
xchg
pop
sbb
dec
adc
ja
fs
cmp
mov
lods
pop
jne
dec
jl
dec
sarl
or
cmp
push
aam
cmp
pop
mov
xchg
pop
pop
xchg
sub
xor
lods
outsl
loop
lret
sarl
inc
or
adc
pop
shl
inc
dec
sarb
xchg
mov
stc
xor
test
xchg
xchg
test
mov
sti
hlt
inc
add
push
dec
sbb
outsl
repnz
in
inc
es
mov
ret
fs
xor
sub
jne
loopne
outsl
imul
dec
loop
fcoms
adc
cmp
pop
xchg
outsl
xor
ret
sub
sbb
aam
mov
pop
mov
xchg
sbb
and
and
inc
push
pop
adc
inc
orb
add
call
sub
ljmp
dec
jge
pushf
sub
sub
lds
xor
fs
jo
outsb
push
inc
insb
mov
push
jge
sub
sbb
pop
push
and
jecxz
cmpsb
fidivrl
inc
cs
call
jle
sub
push
xor
sub
stc
or
jp
leave
repnz
daa
loope
fs
fnstcw
push
and
cmc
add
push
lods
ja
add
add
xor
aaa
jle
sbb
inc
aas
cmpsb
mov
movsb
sub
inc
cmp
sub
sub
jmp
cmp
xor
and
bound
xor
jnp
sub
int3
adc
mov
leave
pop
call
pop
push
mov
or
sbb
xchg
adc
sub
adc
jge
cmp
adc
dec
test
add
dec
dec
xlat
pusha
and
lcall
test
cmp
xor
mov
cwtl
pop
dec
mov
cli
fwait
das
std
adc
cli
dec
add
jg
push
mov
stc
xor
sbb
jl
mov
mov
add
pop
add
adc
xor
pop
sbb
movsl
loopne
add
dec
fildl
and
xchg
aam
mov
or
aas
pop
or
jle
xor
pop
inc
push
xor
jb
inc
mov
in
inc
dec
adc
ljmp
push
shlb
popf
and
and
test
sub
shll
lea
sub
sub
sub
jo
ss
adc
dec
and
add
or
sub
jne
push
rclb
mov
mov
push
xorb
and
es
add
test
sub
subl
inc
sub
jl
sub
cmp
inc
test
dec
scas
jns
sub
adc
mov
lock
gs
popf
jb
mov
adc
out
sub
xor
xchg
in
mov
movsl
jl
push
adcb
xor
in
fsubl
scas
fdivrp
lret
fs
sti
push
imul
cmp
mov
adc
mov
outsb
rorb
adc
cmp
ja
shrl
xchg
inc
stos
rcrb
cltd
cmc
incl
inc
pop
sbb
notb
or
jmp
pop
sub
add
push
sti
ss
pushf
clc
sbb
int3
imull
push
nop
mov
fcomps
enter
xor
adc
sti
xchg
sub
movsl
pop
mov
pop
xchg
mov
mov
xchg
and
mov
test
pop
and
cmp
lods
aas
jge
dec
mov
push
fcoms
xorb
dec
lcall
mov
pusha
jge
daa
push
movsb
push
enter
sub
sbb
je
call
loopne
mov
ja
es
cmp
xchg
icebp
push
adc
adc
xchg
and
int3
cmp
cs
xchg
sbb
je
xchg
jl
mov
or
push
push
lods
imul
adc
xlat
pop
nop
and
cmc
sub
ljmp
or
dec
data16
mov
stos
das
inc
dec
test
bound
movsb
inc
jnp
out
mov
daa
into
test
jb
mov
dec
les
call
les
dec
movsb
pop
test
cltd
push
xor
cmp
xchg
lods
movsl
jmp
push
les
repz
jl
jne
fmull
hlt
mov
or
lret
daa
push
push
stos
mov
imul
sub
popa
pop
insb
mov
sbb
xlat
insl
subb
fmull
adc
jg
mov
pop
or
inc
mov
mov
les
pop
add
push
test
out
popa
popf
call
lods
xchg
lahf
fidivrs
xchg
sbb
jo
jmp
xchg
dec
icebp
incl
es
out
xchg
jp
je
addr16
mov
stos
or
xor
add
xor
adc
inc
add
mov
repz
mov
rcl
test
add
xor
test
xor
aad
lea
rol
add
inc
adc
jae
les
lods
xor
sbb
jle
jbe
in
mov
jnp
mov
fmul
cmp
into
xor
and
push
cmp
jl
sbb
shlb
add
sarl
in
fstp
jmp
scas
arpl
rcrl
mov
or
or
mov
adc
cmp
repz
jb
push
xor
mov
repnz
dec
arpl
orl
jecxz
mov
push
decb
outsb
sar
cmp
jo
sarl
insl
push
sahf
dec
sti
sub
xchg
mov
sahf
test
mov
fdivs
fildll
push
loopne
cli
sub
fwait
repnz
mov
aas
in
test
scas
mov
and
std
sbb
inc
xlat
lcall
cmp
mov
push
fnstsw
sarl
aas
xchg
mov
jge
lcall
and
jl
or
push
std
mov
cwtl
sti
add
lahf
push
inc
pop
jne
pop
xchg
je
push
call
scas
out
adc
mov
jno
mov
aas
jne
push
xor
daa
andl
call
push
push
arpl
xchg
mov
jne
cmp
inc
icebp
shlb
sbb
ret
or
pop
xor
mov
cmp
add
push
jns
jl
in
mov
cmp
ret
sub
nop
xor
jmp
stos
iret
pusha
jne
push
xchg
add
shll
push
inc
shl
std
inc
hlt
add
and
xor
jge
mov
jmp
dec
lds
or
xchg
xchg
mov
mov
sub
clc
in
and
and
xchg
adc
pop
xchg
aaa
add
dec
or
jns
mov
js
mov
xchg
in
jb
xor
jl
iret
lock
sarl
push
outsl
mov
insb
test
sub
xor
aad
rol
in
out
leave
sub
and
inc
mov
mov
mov
loopne
push
or
cmp
add
into
adc
add
daa
dec
call
notl
pop
push
aas
inc
ljmp
adc
scas
movsb
mov
pop
or
push
adc
pop
add
clc
add
adc
data16
rorb
int
lret
jae
movsl
data16
push
hlt
addr16
std
adc
pushf
and
push
jecxz
inc
and
jb
or
add
and
cmpsl
pop
dec
push
jne
push
mov
lea
ds
gs
lods
in
fsubr
and
inc
inc
outsl
and
cltd
adc
sbb
je
ja
mov
inc
cmp
cmc
out
cmpsl
xchg
sahf
dec
popf
push
cmp
dec
mov
ret
dec
and
stos
sub
movsb
inc
push
jmp
sub
jg
nop
jne
sub
data16
mov
push
int
sub
push
or
pop
or
in
inc
adc
cmp
mov
mov
mov
cmp
push
and
push
or
adc
push
daa
lret
aad
sub
jmp
sub
mov
arpl
push
and
mov
or
jecxz
nop
les
adc
xor
imul
cmp
push
aas
and
push
sti
push
or
fsubr
jno
xchg
mov
inc
testb
pop
ljmp
scas
pusha
xchg
push
cmc
aam
mov
call
pop
lods
mov
aaa
inc
jno
mov
movsb
ljmp
dec
mov
cmpsl
hlt
adc
stc
popf
add
pop
aas
push
call
dec
mov
jmp
in
popa
pop
test
out
inc
jmp
out
mov
fld
jle
fwait
test
xor
and
stos
push
sbb
xchg
arpl
and
xchg
sbb
mov
adc
cmpsb
cmp
push
movl
sub
inc
shlb
pop
pop
or
inc
jge
ljmp
mov
daa
rolb
cmp
and
repnz
mov
push
movsl
scas
icebp
add
mov
push
adcb
or
jo
data16
loope
std
inc
adc
add
cmp
and
mov
or
dec
mov
movsl
inc
xchg
mov
js
sub
out
std
or
bound
test
aad
mov
jmp
jg
mov
inc
push
sub
cltd
stos
cmp
mov
orl
mov
mov
popa
push
jae,pt
jle
daa
jmp
or
sbb
or
and
inc
adc
enter
xor
sbb
or
xchg
and
nop
fmul
aam
shlb
int3
sbb
or
xchg
add
jb
push
or
adc
nop
sbb
and
sub
sub
xor
nop
cmp
inc
fs
xor
dec
or
xchg
and
pop
enter
xor
insb
or
xchg
and
jl
andb
sbb
and
movsb
xor
xchg
and
les
enter
rolb
nop
fmul
loopne
lods
inc
adc
push
or
movsb
push
in
xor
sbb
or
xchg
jo
xchg
inc
jl
stc
or
enter
and
or
enter
and
or
enter
and
or
enter
and
or
enter
and
or
enter
dec
sub
inc
inc
clc
dec
push
hlt
fs
sbb
or
xchg
and
nop
fmul
aam
shlb
int3
sbb
or
xchg
and
mov
scas
xor
test
clc
and
pop
jg
scas
cltd
sub
mov
adc
stos
or
and
and
mov
and
divb
push
and
adc
jmp
daa
insb
imul
push
sbb
cwtl
adc
rcll
test
popf
fiadds
stc
cs
and
test
sub
movsb
mov
push
dec
xchg
stos
mov
mov
or
push
add
jne
fcmovbe
pop
push
call
pushl
cmc
sub
and
push
jnp
lods
pop
xor
dec
mov
pop
shlb
mov
fisubrs
rcrb
add
xor
xor
mov
xchg
jns
out
jmp
push
call
ljmp
cwtl
xor
and
jb
sarb
add
mov
pop
pop
pushf
jmp
jb
mov
jge
adc
imul
movsl
xchg
jne
pop
xor
cltd
dec
ds
in
pop
dec
dec
lcall
xlat
cs
cwtl
sahf
mov
cmp
pop
dec
dec
mov
js
pop
test
fsubs
js
pop
push
repz
mov
rorb
mov
jmp
popf
adc
fidivrl
fistl
pop
xor
and
sub
sbb
mov
shrb
adc
add
arpl
fistpl
inc
jo
mov
inc
rcl
loope
mov
xchg
add
push
call
mov
btc
xor
inc
daa
subb
repnz
mov
rorb
aam
dec
clc
push
cmp
fs
xor
xchg
int
and
movsb
sub
and
loopne
rorb
lahf
ret
jo
cmp
or
and
adc
shll
test
mov
shlb
loopne
pop
movsl
mov
inc
pop
inc
repnz
stc
icebp
pop
out
and
pop
pop
inc
inc
insb
lahf
mov
in
adc
mov
jmp
xchg
xor
mov
sbb
cli
pop
jg
cmp
pop
movsl
sub
sub
movsb
jg
pop
jnp
leave
pop
pop
shrb
mov
cmp
subb
rcl
adc
sub
lods
std
nop
dec
jge
jbe
pop
enterw
add
repnz
sub
xchg
aaa
std
inc
pushf
in
push
lret
fsubs
and
sar
cld
lds
shll
fadds
mov
pop
or
loopne
mov
jno
cmovne
loopne
mov
repz
stc
jo
mov
loopne
popf
pop
jecxz
jne
cmp
jecxz
mov
push
cmpsb
aas
in
stos
mov
jno
jns
sbb
out
jo
xchg
pop
mov
jecxz
xorb
cmpsl
inc
pop
cmpsb
lock
jmp
or
fstl
test
popa
lods
sarl
les
test
sbb
mov
push
out
stc
mov
in
push
pop
sub
out
fimull
pushl
adc
js
sub
pop
sbb
aaa
cmc
in
push
push
xor
daa
sbb
sbb
xor
mov
and
dec
fsub
fcoms
sub
xchg
mov
mov
aad
jns
or
cmpsl
cmp
fsts
mov
xor
clc
outsl
and
xchg
cmp
mov
push
sbb
lret
mov
inc
outsb
dec
mov
incl
das
stc
xor
call
pop
sbb
pop
or
and
hlt
lods
fld
outsb
inc
mov
insl
adc
stc
sub
flds
mov
ret
push
mov
shlb
sbb
push
push
jecxz
addr16
adc
test
inc
mov
sahf
int3
aam
or
push
and
call
in
cmp
and
inc
fmuls
adc
out
std
ret
call
and
push
adc
mov
mov
add
add
das
inc
ret
or
adc
jp
push
pop
xchg
xor
add
popa
push
out
mov
sbb
insl
mov
xor
mov
add
fdivrl
cld
aad
loopne
xchg
sub
mov
pop
sub
sbb
mov
repnz
mov
add
in
push
insl
push
mov
hlt
movl
test
fs
stc
std
in
leave
mov
pop
add
insb
push
arpl
cmp
or
outsb
add
pop
adc
in
pusha
add
jb
addr16
add
add
add
std
test
or
insb
cwtl
mov
inc
leave
mov
lods
jecxz
fdivs
jne
filds
add
shrl
cmp
ficoms
nop
xlat
enter
sarb
and
les
iret
femms
movsl
mov
sub
mov
or
and
or
mov
jl
das
adc
pop
stos
sbb
data16
push
jno
add
mov
adc
pxor
mov
push
movsl
add
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
add
hlt
push
imul
jge
add
xor
dec
xchg
cli
jnp
movsl
add
shl
adcb
pmaddwd
fnstenv
mov
ljmp
mov
bound
sub
rorl
pop
popa
mov
into
inc
sub
add
inc
movsl
fisttps
xlat
xchg
fadd
les
shll
jmp
fldcw
inc
mov
lods
sarb
add
in
add
pop
dec
add
stos
leave
jl
fnstsw
cmp
push
xchg
daa
adc
or
leave
and
test
add
aam
mov
add
stc
ficomps
leave
fldcw
jne
add
mov
test
pop
cmp
or
mov
mov
in
add
loop
add
cmp
ljmp
add
add
push
fdivl
or
arpl
test
fs
ds
insl
or
loopne
push
in
decl
or
mov
pop
jge
inc
add
lock
add
push
inc
push
imul
xorb
insb
sbb
shrb
sbb
incb
loopne
rorl
add
dec
frstor
fistpll
mov
pop
aad
mov
call
jle
shll
add
fisttps
addr16
cmpsb
add
push
mov
dec
ss
add
sub
scas
pop
testb
pusha
jp
inc
ret
out
in
fbstp
cmp
orb
inc
add
mov
shrb
ss
push
add
inc
or
and
es
mov
mov
pop
add
cmpsl
incl
xlat
ret
shlb
sub
scas
ficomps
clc
fs
add
repnz
pushf
mov
xchg
insl
add
add
jmp
addr16
jb
push
loopne
add
jp
loop
scas
sub
or
fwait
mov
xchg
or
mov
fdivrl
fisttpl
jg
push
roll
clc
mov
push
pop
int
mov
mov
outsl
out
or
jle
push
incl
lret
pop
or
adc
sahf
add
imul
add
loop
mov
xlat
push
addl
mov
add
popa
cmpsl
notl
add
dec
inc
imul
dec
push
scas
fcompl
fldenv
filds
cmp
fdivs
push
cmpb
jg
mov
jmp
sbb
mov
lret
mov
add
ss
fadds
xlat
int
sub
push
mov
jp,pn
mov
dec
popa
les
add
push
sub
aaa
mov
or
filds
add
sub
call
sbb
jmp
or
inc
push
and
dec
dec
mov
xor
push
je
and
repnz
jp
cli
ja
outsb
es
gs
and
sbb
sbb
sbb
popa
jno
mov
push
push
add
cltd
or
loope
mov
aas
or
mov
adc
jb
xor
mov
add
enter
bound
cmp
inc
inc
or
data16
mov
adc
ret
popa
insl
and
and
aad
sbb
inc
push
insb
imul
addr16
fucomp
push
adc
push
or
adc
xor
sbb
and
fnstsw
jne
pop
add
sub
jns
mov
aam
dec
adc
pop
jnp
sub
jo
adc
cs
pop
xor
fs
jnp,pn
jae
and
pop
cltd
jne
jns
inc
idivl
jmp
mov
lds
sub
data16
jne
jb
inc
and
fidivs
cmc
adc
cwtl
push
lret
cmp
bound
inc
or
adc
je
sbb
mov
sub
add
inc
imul
jno
out
dec
jmp
inc
dec
dec
popa
sbb
sub
xchg
mov
jl
lret
push
out
sbb
movsl
xor
jl
pop
lahf
dec
into
inc
dec
rclb
sub
outsb
or
sbb
test
xor
cmp
dec
movsb
icebp
sarb
aas
inc
pop
clc
out
mov
pop
int
nop
jno
xorb
es
push
push
adc
dec
jae
xchg
test
dec
inc
sub
cwtl
mov
iret
in
inc
nop
push
in
insb
inc
inc
jo
stc
cmc
shl
mov
addr16
jmp
js
leave
sub
lods
test
dec
sub
aad
mov
lds
js
xchg
sarb
mov
cmpsl
je
sbb
stos
fs
adc
mov
pop
inc
inc
dec
sub
data16
imul
xor
out
push
pop
fimull
sub
bound
sub
out
addr16
push
loop
inc
adcb
sub
data16
fwait
push
dec
cmp
lret
xchg
dec
ret
or
pop
lret
adc
sbb
and
or
xchg
sub
shlb
mov
adc
iret
gs
fs
daa
arpl
sub
popa
shrb
aam
mov
dec
adc
jl
jo
data16
jb
push
sbb
nop
sub
movsb
sbb
repnz
mov
mov
fnstenv
jecxz
mov
jp
push
pop
cltd
std
xor
insb
das
sub
pop
dec
inc
inc
push
inc
int
rclb
mov
jmp
imul
outsb
jge
inc
adc
loopne
inc
rorl
aam
inc
sub
test
or
fs
repz
cmpsb
loope
cmp
pop
lret
pop
jo
lcall
sbb
imul
arpl
dec
bound
ficoml
fs
push
popf
sbb
mov
jle
movsl
xchg
inc
jne,pn
mov
jecxz
js
into
or
and
and
les
aam
pop
icebp
jnp
xor
pop
out
dec
cmp
and
xchg
mov
out
mov
inc
push
leave
or
mov
insl
jle
dec
dec
sbb
sbb
push
cmp
and
cmp
cs
cmc
ficoml
inc
lea
lcall
pushf
mov
jae
mov
dec
pop
cmp
outsb
lock
jmp
mov
xchg
and
psubsw
and
int
or
sub
in
gs
pusha
movaps
pop
xor
sub
dec
push
pop
and
test
or
aaa
sub
adc
jbe
jo
xchg
lock
push
push
dec
pop
dec
cmp
sbb
lret
adcb
jno
mov
or
aas
pushf
xchg
and
sbb
adc
js
or
imul
adc
push
xor
mov
movsl
xchg
jo
xchg
sbb
lods
lret
lds
aam
inc
dec
and
das
jb
in
loop
adc
insb
outsb
mov
push
jo
xchg
inc
sbb
sub
adc
dec
bound
rcrb
lcall
cmovnp
pop
dec
adc
jmp
adc
mov
inc
jp
push
sarb
jg
test
lods
dec
data16
and
jne
arpl
xor
fs
rcrb
test
jno
inc
xchg
push
aam
call
pusha
mov
mulb
jge
jb
xor
dec
es
nop
ja
push
ficomps
sub
jecxz
add
inc
sub
push
push
push
add
or
jns
cmpsb
shll
mov
xchg
js
xchg
cwtl
pusha
xchg
lods
and
mov
dec
test
adc
mov
mov
inc
mov
js
mov
or
dec
or
dec
nop
repnz
pop
push
jno
xchg
xor
lahf
data16
leave
adc
dec
or
into
dec
mov
shl
repnz
bound
push
cmp
aaa
lods
loope
iret
jo
push
cmp
xor
gs
repnz
ds
jo
les
hlt
fimull
mov
addr16
cmc
inc
pop
in
inc
add
adc
clc
test
inc
or
pop
das
jo
xor
pop
xor
stos
xchg
sub
adc
cmp
pop
mov
dec
out
inc
xchg
leave
sbb
push
xlat
out
jb
push
pop
xlat
iret
xor
push
ret
sbb
dec
mov
sbb
fcomp
icebp
adc
or
sub
or
sub
dec
dec
dec
loopne
jp
xchg
fs
sub
sub
cli
pop
jo
adc
dec
bound
ja
mov
insb
mov
push
xchg
add
jo
outsl
add
scas
add
add
add
adc
and
cmp
pop
pop
or
out
and
repnz
cmpsl
pusha
push
jb
js
incb
mov
xor
adc
test
pop
outsb
or
insb
add
std
div
pop
nop
dec
cmp
fstl
jns
and
fs
and
shrb
test
mov
hlt
sahf
mov
arpl
or
jns
enter
mov
xorb
push
adc
mov
and
and
pop
mov
cltd
leave
outsl
jae
dec
icebp
cmp
mov
fmul
or
incl
popa
sub
xor
mov
jle
mov
fcomp
cs
mov
xor
or
addb
div
fstpt
mov
mov
inc
push
dec
xor
popa
dec
add
sub
jecxz
push
inc
or
lret
sbb
js
int
adc
adc
leave
mov
insb
ror
adc
sub
push
cmp
adc
dec
aam
ficompl
sub
insb
dec
jo
push
xor
adc
or
aam
dec
push
inc
or
ret
lahf
adc
jo
or
dec
or
inc
repnz
or
xchg
add
scas
arpl
cmc
pop
or
repnz
cmp
push
or
adc
dec
jae
sahf
pop
pop
sub
push
or
adc
leave
outsb
dec
jbe
and
mov
imulb
add
imul
push
scas
push
push
movsl
and
add
push
jecxz
adc
cpuid
dec
dec
inc
push
loopne
sbb
inc
es
push
push
xor
cmp
pop
sub
push
jnp
je
push
cmpl
and
inc
aaa
pop
les
je
or
jne
in
jae
popa
mov
data16
iret
adc
imul
cmp
push
xor
jl
imul
cmpsb
arpl
sub
std
mov
pusha
cld
pop
pushf
iret
data16
mov
pop
std
lea
cmp
xchg
daa
stos
sti
xchg
test
and
sub
cmp
dec
sbb
inc
and
xchg
insl
adc
lods
jns
push
sbb
xor
push
pop
xchg
pop
inc
push
mov
push
mov
push
adc
cmp
push
dec
cmp
imul
cmp
aad
jae
movsl
adc
pop
dec
fildll
icebp
insb
mov
jb
sbbb
mov
push
xchg
pushf
sbb
cmp
xchg
mov
inc
popa
and
dec
and
in
push
nop
fwait
jb
stos
adc
adc
push
fs
jo
ss
idivb
inc
leave
clc
lretw
loope
jp
sbbl
lret
insl
ficoml
pusha
test
andl
xchg
push
adcb
xchg
lcall
movsb
test
and
xchg
hlt
outsl
std
pop
or
bnd
mov
fwait
adc
hlt
iret
push
jle
or
inc
push
arpl
mov
sub
out
cmp
sub
inc
sbb
test
push
imul
pop
jp
adc
pushf
movsb
cmpsl
test
jne
mov
leave
push
xchg
jne
mov
xor
insl
adc
mov
sarb
push
loop
jp
mov
jne
adc
mov
jno
sbb
adc
icebp
gs
ret
inc
inc
jne
mov
insb
cmpsb
xchg
dec
inc
adc
rorb
cltd
and
sub
jg
nop
adc
xchg
js
fsubrs
mov
jl
fs
or
cmovns
mov
or
iret
xchg
mov
imul
and
adc
test
fs
add
jne
test
jne
pop
adc
mov
pop
xchg
and
push
dec
pop
es
bound
es
inc
roll
and
pop
and
repnz
mov
outsb
sub
sub
lds
and
jbe
jp
gs
filds
aam
push
or
sbb
adc
dec
lret
xchg
jmp
call
sbb
movsb
psraw
sbb
cmp
inc
mov
pop
add
and
and
data16
inc
jnp
xor
sub
adc
aaa
mov
and
mov
adc
push
loopne
adc
or
leave
sub
insl
xor
adc
xor
mov
test
iret
hlt
pop
loop
lods
mov
mov
and
sbb
adc
pop
push
adc
bound
jb
xor
test
jl
cmp
mov
adc
dec
or
ljmp
cmpsl
or
jp
jb
outsb
mov
sbb
adc
jae
imul
imul
stos
sbb
cmpl
adc
loop
jbe
add
in
adc
mov
adc
mov
push
lahf
mov
pushf
in
mov
insb
mov
dec
jp
adc
leave
daa
or
bound
insb
lods
and
movsl
or
inc
mov
adcb
pusha
xchg
sbb
push
bound
push
imul
cmp
cmp
mov
cmp
mov
aad
sbb
add
lret
add
xor
aad
je
jb
adc
or
addr16
stc
stc
dec
sub
sarb
jl
sub
xchg
lock
out
mov
or
adcb
cmp
pushf
movsl
cmp
test
or
dec
inc
push
push
inc
or
shl
outsl
jbe
adc
xor
push
and
inc
push
or
cmp
and
sbb
dec
cmp
out
cwtl
add
inc
dec
xchg
jns
loope
das
out
xchg
pavgb
xchg
or
inc
jns
sub
dec
outsl
jbe
or
arpl
mov
out
adc
xchg
test
dec
pop
insb
ss
mov
jo
jl
mov
les
in
inc
gs
dec
jne
xor
mov
or
push
add
adc
gs
adc
cmp
xor
mov
movsb
inc
inc
mov
es
adc
inc
mov
push
jne
mov
adcb
push
jne
insl
mov
adc
xor
add
adc
jo
das
jo
je
pushf
out
and
mov
andb
jnp
std
addb
jbe
push
jge
fldt
insl
test
fs
mov
inc
rcll
iret
inc
fstl
push
jmp
inc
stc
dec
shr
jae
jns
pop
push
pop
lret
test
mov
or
mov
sbb
ja
mov
ret
cmp
les
in
push
inc
mov
cmp
xor
xor
add
fsub
in
popa
pusha
out
xchg
add
movsl
popa
fmuls
or
cmp
and
filds
lahf
or
adcl
adc
xor
lea
call
push
adc
sbb
inc
test
inc
test
gs
arpl
cs
add
mov
arpl
loopne
lods
mov
add
and
icebp
scas
popf
pop
xchg
sub
or
sbb
or
jo
mov
pop
nop
xor
mov
loop
call
or
jecxz
movsb
or
data16
push
add
pusha
sub
add
push
mov
sub
enter
inc
fdivrs
shlb
add
enter
in
mov
inc
pop
dec
sub
push
aam
mov
lcall
sub
sbb
inc
adc
xor
sbb
imul
add
or
loop
mov
addb
movsl
push
and
sarb
or
lock
mov
and
jo
mov
mov
push
xor
nop
in
fadds
daa
ror
aaa
or
nop
mov
push
clc
sbb
mov
and
insb
mov
mov
dec
push
inc
repnz
adc
jo
push
mov
les
push
inc
out
adc
push
or
scas
cwtl
add
add
add
inc
add
jmp
or
shl
inc
shlb
fimuls
adc
mov
add
inc
xor
mov
push
adcb
xchg
push
add
sbb
adc
cmp
adc
fcoml
cmp
sbb
jae
or
xor
cmp
or
cmp
subl
fs
push
pop
push
inc
je
jb
outsl
aaa
dec
aaa
fs
adc
inc
jnp
popa
je
push
mov
jo
push
push
outsb
std
sahf
jae
test
sbb
push
push
arpl
in
sub
imul
dec
xchg
js
arpl
pop
push
inc
mov
mov
popa
push
inc
sub
adc
dec
outsl
imul
xor
lahf
or
aad
sbb
cmp
cwtl
jg
adc
push
sbb
jne
mov
jns
inc
cmpsl
insl
popa
outsb
iret
nop
inc
push
jne
movsb
jg
sbb
adc
jle
int
jae
mov
fisubrl
mov
outsb
lock
lds
sub
outsl
bound
dec
jae
or
sbb
cmpsl
fidivrl
adc
mov
addr16
ljmp
lret
cmp
iret
insb
fcmovbe
push
and
xchg
inc
jae
push
xor
inc
xchg
jns
cmp
jne
push
fs
mov
push
xchg
pop
inc
movsl
sbb
adc
aad
ljmp
movsb
jbe
cmp
hlt
fwait
lcall
enter
push
out
push
inc
jnp
out
and
dec
inc
or
inc
adc
out
std
dec
fisubrs
mov
xor
inc
jbe
or
adc
in
movsl
inc
adc
and
dec
inc
xor
sbb
push
xor
adc
jo
mov
pop
pop
addr16
push
mov
or
xchg
jae
pop
push
inc
dec
nop
iret
test
pop
les
je
mov
or
lret
adc
sbb
or
dec
iret
lods
fs
sub
jne
cmpsb
adc
mov
xchg
fwait
sbb
cs
orb
adc
nop
jae
cwtl
dec
push
aaa
or
insl
test
addr16
jne
popa
sbb
mov
sub
cltd
push
enter
jo
imul
out
jle
push
pop
jbe
push
dec
stos
or
ss
jle
mov
push
xor
xchg
out
cmc
dec
loopne
inc
sbb
and
pop
adc
pop
cltd
mov
sub
xchg
or
js
pusha
xor
pop
mov
outsl
cmc
inc
outsl
sbb
lcall
and
adc
repz
push
sub
lret
sub
xrelease
mul
repz
inc
mov
test
push
or
dec
or
adc
cmpsl
or
insl
es
adc
jbe
and
adc
subl
imul
xchg
push
pop
jle
jo
inc
sbb
mov
or
adc
mov
push
or
bound
push
test
adc
cmp
push
arpl
inc
inc
loopne
ja
and
in
rcrl
and
addr16
fs
inc
sbb
sar
dec
out
xchg
aam
push
es
call
mov
and
inc
enter
jp
inc
inc
insb
adc
insb
lods
cmp
enter
sub
sub
jl
cmpsl
sub
dec
mov
cmp
lock
xor
xor
sub
mov
sub
nop
scas
push
sub
rcrb
fsubs
push
adc
and
push
xorl
iret
test
dec
or
andb
mov
or
mov
in
push
dec
outsl
bound
cwtl
inc
jne
movb
sub
fldt
sub
adc
inc
adc
es
mov
mov
or
mov
push
sbb
or
inc
rolb
push
imul
popa
sub
fs
mov
inc
lret
sbb
iret
mov
jg
jbe
mov
scas
mov
mov
and
pop
movsb
imul
push
out
jne
xor
dec
not
cltd
std
dec
mov
sub
mov
dec
das
push
sub
popf
pop
fs
dec
adc
push
fs
in
insb
cmpsl
sub
jae
out
pushf
pop
in
adc
lods
cmp
pushf
mov
inc
push
dec
outsl
pop
data16
mov
bound
inc
inc
push
dec
jno
cmp
pop
mov
jbe
inc
in
jb
adc
dec
and
push
out
nop
aad
lret
pop
lahf
movsb
push
push
or
arpl
popa
mov
inc
lcall
loope
adc
mov
xor
inc
movsb
cmpsl
roll
sub
dec
cmp
and
popaw
mov
jle
imul
sbb
inc
mov
xor
inc
je
call
sbb
jae
xchg
dec
in
xor
dec
shlb
imul
sbb
hlt
js
dec
push
jo
mov
lock
dec
dec
in
push
sbb
cmp
sub
cmp
outsb
clc
hlt
and
inc
dec
hlt
pop
je
jns
push
and
inc
cs
fiaddl
or
sub
sub
inc
sub
xchg
mov
jle
js
ret
inc
push
push
dec
push
cmp
ds
faddp
sub
es
dec
sub
pop
inc
sbb
rorb
test
fucomip
jo
test
fs
jns
mov
ret
bound
aas
mov
push
or
xor
push
add
inc
jp
xchg
mov
add
insb
adc
and
daa
adc
pop
or
push
insb
loopne
jne
out
mov
shrb
push
das
inc
cs
shrl
push
add
stos
dec
scas
test
add
xor
push
stos
or
aaa
mov
adc
outsl
nop
movsl
icebp
cmc
jb
mov
divl
arpl
and
adc
cmp
push
sbb
cmp
dec
cmp
lea
xlat
pop
jnp
sub
mov
test
add
adc
js
jecxz
sbb
and
mov
add
or
dec
movsb
adcl
cmp
pop
dec
sbb
sbb
inc
mov
je
popf
pop
push
jg
push
stc
mov
sub
dec
fisubs
pop
sub
mov
or
dec
jae
sbb
or
adc
sub
or
or
mov
nop
jmp
into
repnz
je
dec
push
inc
or
ss
dec
mov
das
sub
jno
pop
enter
setg
mov
repz
cmpsl
adc
mov
fdivs
and
or
push
jae
and
ja
sub
mov
inc
adc
mov
cltd
insb
inc
jo
dec
jae
sbb
inc
push
cwtl
adc
dec
jo
popa
xchg
inc
mov
inc
and
imul
sub
mov
cmp
aam
scas
ljmp
rep
lea
push
or
xor
sub
insl
out
cmp
pusha
jb
or
and
xchg
push
sbb
or
dec
inc
dec
rcll
push
mov
xchg
xor
and
and
dec
inc
inc
xor
adc
dec
out
shrl
pushf
es
or
dec
bound
inc
cmpsl
sub
cmp
xor
xor
inc
sahf
adc
into
sbb
sub
in
cmp
ret
fwait
lea
xchg
jne
lods
out
dec
mov
pusha
lahf
imul
add
push
add
push
push
dec
lds
pusha
sub
popa
enter
insb
cmp
xor
outsl
adc
outsl
arpl
mov
xor
mov
inc
out
scas
adc
or
inc
push
cli
inc
imul
mov
xchg
xchg
mov
and
xchg
inc
inc
xor
push
adc
and
scas
push
xor
lret
ret
pop
push
lods
daa
cmp
out
cli
div
jne
pop
mov
test
jp
dec
data16
lods
pop
insb
rorb
jae
outsb
mov
imul
dec
inc
jl
mov
je
mov
lods
push
xchg
repnz
test
pop
lods
and
pop
jns
ja
jb
xchg
or
jns
enter
scas
push
jle
mov
or
cmp
sub
and
sub
inc
int3
push
sub
pop
xchg
cmp
push
mov
and
bound
pop
sahf
shlb
push
in
je
or
jns
cmp
inc
cmpb
push
sub
add
cmp
lods
pop
ficompl
cs
lods
lods
inc
and
leave
sub
or
push
jp
adc
mov
divl
imul
or
sub
ss
clc
inc
xor
pop
insl
cwtl
sbb
orb
lcall
fs
imul
adc
mov
outsl
xor
cmp
push
jbe
int3
sbb
test
fnstenv
push
dec
sub
push
and
insl
lcall
mov
jp
or
sub
int3
dec
les
pop
ficompl
push
and
pop
scas
pop
outsl
lea
jb
pushf
push
mov
xor
fdivrs
imul
mov
gs
cmp
xchg
movsb
loope
lods
cmc
cmp
data16
movaps
cwtl
out
popl
inc
and
inc
insb
jmp
cmp
push
mov
dec
xchg
xor
dec
sub
je
sub
and
push
aas
sub
cmpsl
push
dec
mov
jae
insl
jne
push
jns
jp
or
jns
daa
arpl
pop
or
and
cmp
jo
and
popfw
mov
adc
aam
nop
sub
mov
mov
aam
sub
orl
pushf
xor
mov
jo
xchg
in
sub
cmp
pop
add
sbb
loope
ret
adc
cs
lea
sarb
cld
lea
and
cltd
lea
jb
std
test
sbb
dec
and
filds
fsubrl
and
fsubs
aam
xor
mov
mov
push
inc
push
and
sub
adc
xor
cs
push
sbb
add
sbb
lea
sbb
sbb
mov
repz
and
sub
dec
cmp
xor
nop
and
mov
rcrl
pushf
movsb
adc
pop
dec
test
out
push
inc
mov
cmpsl
sbb
adc
adc
jecxz
push
mov
pushf
js
insl
imul
push
mov
mov
int
and
adc
pop
sub
repnz
cmp
xchg
lds
and
adc
sbb
mov
sub
push
jbe
xchg
aam
push
or
je
sbb
gs
jl
dec
or
mov
je,pn
xor
lea
cmpsb
or
mov
add
cld
aam
lods
pop
test
xlat
dec
sub
fisubrl
and
popa
outsb
movsl
aam
sbb
mov
adc
or
or
andb
inc
gs
sbb
or
popa
pop
and
pop
push
push
jbe
or
repnz
xchg
push
mov
adc
lahf
cmp
inc
fidivl
inc
cmp
jno
mov
lds
or
insb
rcll
jne
js
push
scas
inc
pushf
push
cmp
and
ret
shrb
mov
jp
or
add
pop
repnz
out
jmp
mov
and
xchg
dec
jp
push
cmpsb
xchg
mov
movsb
test
cmp
mov
pop
sub
jge
push
lods
out
mov
inc
into
hlt
jns
adc
xor
movsb
xor
mov
mov
dec
pop
cmpsl
sbb
adc
push
and
lock
outsb
mov
push
bnd
sub
dec
cmp
lea
sub
inc
daa
dec
nop
jge
cmpsl
in
arpl
aaa
or
xchg
nop
mov
and
insb
int3
cltd
enter
mov
in
sbb
sub
mov
mov
mov
adc
gs
xchg
cs
ds
mov
cmp
mov
lods
mov
adc
mov
jl
int
ret
pop
adc
and
lret
fs
lahf
sbb
sbb
insl
and
pop
int
mov
in
insl
cmc
mov
or
sub
pop
in
adc
ljmp
inc
outsl
nop
sbb
outsb
push
daa
jecxz
push
dec
test
xchg
cs
test
cmp
cmp
inc
testb
xor
pop
inc
shlb
sbb
dec
sub
mov
aad
fwait
sub
loopne
sub
push
mov
xor
or
loope
and
test
xor
adc
test
inc
xor
fs
addb
insl
imul
cld
xchg
pop
sub
decl
repz
or
mov
cmpsl
mov
sub
dec
push
jns
sub
push
repnz
psrld
cmp
cmp
je
sbb
shl
push
inc
lret
adc
pop
cs
icebp
fs
sub
iret
lahf
and
lahf
and
adc
test
or
push
popa
nop
clc
xchg
call
sbb
and
in
ljmp
fmull
out
xor
imul
out
and
test
sarb
movsl
and
in
test
mov
xorl
stc
mov
sahf
and
shlb
mov
mov
stos
inc
dec
ljmp
mov
outsl
dec
mov
movsb
inc
test
popa
sbb
jne
out
movsl
and
mov
mov
into
gs
or
out
jmp
sbb
dec
inc
pop
popl
lods
adc
mov
sub
adc
xchg
mov
push
cs
sbb
dec
cmp
data16
loope
xlat
mov
jne
or
je
mov
sub
mov
divb
stc
ficoml
adc
rcrb
sub
cmp
push
and
dec
nop
and
push
imul
sbb
mov
inc
dec
xor
or
lahf
cmp
inc
jmp
outsl
and
mov
mov
xor
nop
sbb
outsb
movsl
pop
sub
imul
je
dec
aam
adc
jae
insl
jae
or
cmp
mov
inc
dec
shl
cmp
lods
imul
dec
jnp
xchg
cmp
mov
mov
imul
xchg
xorb
add
popf
or
and
loopne
arpl
cmp
insl
cmpsb
js
and
push
mov
push
xor
lds
inc
adc
inc
aam
adc
cmp
pop
jle
repz
pop
and
cmp
inc
adc
imul
divl
call
jp
std
arpl
jnp
add
dec
adc
adc
push
inc
or
rcll
stc
pop
or
sub
adc
mov
mov
in
movsl
imul
mov
sbb
pop
adc
mov
mov
push
and
and
test
lahf
insb
clc
loope
jl
dec
pop
and
xor
cld
and
jmp
sbb
jae
pop
dec
outsb
sub
cmp
lds
fldt
lock
xlat
jecxz
inc
jl
push
inc
dec
cmp
jb
ja
adc
pop
jo
push
jmp
scas
inc
inc
or
push
and
test
lahf
in
mov
sbb
cmp
xor
jnp
cmpsb
xor
mov
cs
xchg
dec
xchg
mov
movsb
and
insb
sub
dec
pop
int
movsl
adc
push
dec
sub
popa
add
adc
aas
xchg
sbb
shl
pop
dec
mov
jno
sub
jmp
sbb
sub
and
and
fidivs
xor
mov
add
imul
enter
aas
lea
push
mov
rclb
and
pop
jb
lea
cs
and
aam
lea
out
pop
pop
xchg
scas
and
and
cmpsl
mov
jge
jo
push
sub
pop
hlt
mov
jle
xor
repnz
pop
xchg
xor
imul
sbb
sbb
daa
xor
test
test
fisttps
cs
jle
xchg
out
push
int
and
jbe
sbb
loop
test
adc
lcall
adc
out
insl
cld
lods
insl
xchg
adc
or
cmp
sbb
shlb
mov
cs
outsl
stos
loop
fisubrl
xchg
or
or
jae
aas
pop
fs
mov
mov
push
fs
and
std
jmp
sbb
std
jmp
or
jno
dec
aaa
and
push
sub
test
jo
xor
test
dec
push
add
inc
pop
gs
jbe
shlb
mov
aad
cs
test
out
pop
dec
sbb
inc
lods
pop
jo
jae
xchg
repnz
push
adc
dec
aas
inc
xor
fiaddl
cmp
cmpsl
add
sub
js
mov
mov
xor
mov
add
stc
sbb
dec
or
inc
pop
cmovnp
in
jo
adc
adc
and
dec
std
cmp
mov
hlt
imul
dec
test
dec
pop
movsb
adc
nop
lock
push
sub
pop
testl
popa
shrb
hlt
das
cld
sarb
pop
cld
imul
inc
loopne
xor
mov
insl
dec
ret
mov
movsb
addr16
fildl
lods
xchg
movsb
popa
test
ss
xchg
mov
outsl
jne
sbb
popf
pushf
add
stc
mov
popf
dec
and
fs
das
xchg
in
xchg
test
rcll
and
xchg
call
push
gs
xlat
lcall
xchg
daa
ljmp
shrl
fistl
bound
jo
push
ljmp
daa
inc
cld
jp
mov
mov
pop
out
dec
adc
xchg
test
dec
dec
adc
adc
xor
daa
movsl
test
test
mov
loop
push
in
xchg
xchg
jecxz
cmp
lods
xchg
mov
icebp
inc
push
pop
je
aam
lods
adcl
lods
pushw
xor
bound
lret
mov
xchg
cs
test
in
dec
cmpb
int3
xchg
ja
ja
cmp
jge
outsl
inc
push
inc
insl
lahf
les
icebp
push
pop
jge
or
ss
test
sub
imul
jmp
jo
push
cmp
leave
sub
rcrb
sub
cmp
lcall
cmpsl
pop
jmp
mov
lahf
jmp
cld
sbb
das
sbb
inc
cmp
jae
and
call
sub
popa
out
outsb
scas
add
inc
inc
push
ds
loopne
fs
and
aaa
jg
jns
or
dec
sub
test
xchg
std
push
les
cmp
jbe
pop
sub
xor
dec
ljmp
ja
fsubrl
imul
xor
ja
and
sub
xor
fs
inc
imul
inc
mov
test
test
add
cmp
cli
test
cmp
xor
insl
adc
inc
sbb
mov
in
jo
and
push
ljmp
jl
push
cs
xchg
push
jnp
pop
push
fwait
cld
ja
xchg
outsl
or
and
sub
push
adc
jge
sub
pop
xor
jge
cltd
sub
je
adc
inc
xchg
adc
and
fcompl
xor
ja
lcall
ds
adc
push
sub
test
lds
test
xchg
icebp
ja
data16
pop
fsubrl
or
push
ss
push
outsb
sbbl
pop
loopne
sub
das
sahf
jmp
xor
xchg
out
popf
ret
dec
bound
jge
push
mov
hlt
outsl
pop
lods
adc
add
and
and
cs
pop
pushf
pushf
mov
mov
add
notl
cmp
into
or
es
xchg
cmp
sbb
das
cmp
sub
test
add
or
jb
cmp
shrl
jne
sub
cmp
sarb
in
popf
inc
xor
adc
xor
aad
adc
cs
pushf
xchg
and
mov
adc
jnp,pt
in
je,pt
mov
xchg
xor
loop
movsb
push
sbb
dec
jecxz
adc
in
or
cld
jmp
mov
lcall
xor
xchg
mov
pop
hlt
push
shrl
and
jl
mov
xor
out
cmp
ret
mov
xor
js
jmp
int3
jmp
fmuls
jae
insl
xor
call
ja
cmpsb
mov
mov
aaa
pop
das
in
pusha
mov
inc
jns,pn
push
mov
lds
loope
or
gs
adc
fcmovne
dec
mov
imul
jnp
lds
inc
and
cmp
push
ja
je
insl
cmpsb
sar
inc
movsb
cmp
mov
bnd
mov
dec
adc
and
cmpsb
sub
sbb
xchg
sbb
sub
ficomps
in
call
and
push
pop
inc
ljmp
sbb
or
imul
sub
in
or
jl
out
xor
lret
mov
add
clc
mov
sub
push
and
hlt
lret
fwait
outsl
sbb
xor
jo
pop
adc
sahf
push
sub
push
pop
dec
ficoms
push
aam
jne
push
push
or
adc
leave
inc
or
xor
nop
lret
dec
cltd
aas
outsl
test
gs
add
outsb
mov
icebp
adc
xor
xchg
cmp
sti
sub
es
cmp
dec
push
or
jecxz
pop
popa
push
jns
or
push
js
fnstcw
mov
inc
mov
mov
cmpb
push
dec
mov
xor
out
or
jns
cli
aaa
xchg
gs
shrl
jo
dec
jo
subl
testb
pop
dec
jbe
sub
aad
dec
inc
dec
push
je
dec
fs
imul
arpl
xor
mov
dec
dec
pop
jb
clc
xchg
jmp
jo
outsl
dec
cwtl
shrl
cld
movsb
push
sti
in
pop
pushfw
stos
push
mov
push
fimuls
jl
sti
loop
test
fiadds
pushf
mov
sbb
nop
or
pop
sub
push
imul
jne
add
test
lahf
pop
cs
sbb
xor
cmp
sub
adc
loopne
cs
jae
daa
push
mov
adc
stos
mov
sub
leave
shrb
add
das
out
xchg
xchg
rcrb
jo
inc
adc
das
jns
jno
and
repnz
dec
inc
jo
push
dec
jne
loop
nop
mov
iret
pop
inc
sub
clc
test
mov
or
or
inc
push
test
je
adc
or
sub
push
fs
cmpl
jo
cmp
adc
fstl
xor
pusha
sbb
xor
sbb
and
dec
pop
xchg
push
orb
dec
mov
inc
mov
fsubl
dec
lock
clc
jo
push
or
and
xor
dec
and
dec
fs
jo
js
orb
test
mov
mov
aam
loopne
call
mov
inc
adc
mov
adc
and
dec
inc
xchg
dec
and
insb
mov
and
dec
xchg
xchg
mov
rorb
dec
in
xchg
clc
jo
push
leave
or
mov
adc
and
dec
xor
dec
pop
mov
jo
jl
mov
test
mov
adc
and
dec
in
hlt
and
aaa
add
rorl
xchg
or
sub
xor
mov
and
dec
push
inc
orb
dec
mov
mov
aam
fcoml
call
lea
push
loope
or
and
sub
mov
call
pusha
adc
jo
jl
test
mov
mov
dec
rclb
loopne
call
inc
add
or
adc
sbb
and
mov
cmp
shll
dec
inc
push
pop
mov
jo
js
adcb
movsb
mov
dec
int3
xchg
fsubs
in
lock
mov
fstp
and
pop
enter
and
dec
dec
xchg
push
and
insb
mov
test
dec
cwtl
xchg
mov
mov
and
dec
loopne
in
and
loopne
orl
dec
sub
cmp
dec
adc
dec
push
inc
test
movsb
dec
lods
xchg
mov
mov
aam
fsubl
dec
in
xchg
clc
dec
imul
mov
or
inc
cmp
dec
adc
dec
fs
insb
and
js
mov
dec
movsb
xchg
lods
and
adc
and
dec
call
loopne
fyl2x
or
adc
xor
xchg
inc
and
push
and
dec
nop
xchg
cwtl
and
mov
dec
aam
loopne
call
mov
or
sbb
and
sub
xor
cmp
and
dec
push
xchg
pop
and
js
adcb
and
dec
pushf
xchg
movsb
and
adc
and
dec
loopne
in
and
aaa
add
jmp
das
xchg
jl
in
and
or
pop
and
insb
je
jl
test
dec
pushf
xchg
movsb
and
adc
and
dec
loopne
call
or
loope
js
in
and
or
dec
and
push
xchg
andb
inc
xchg
pushf
mov
enter
loopne
call
or
adc
dec
and
sub
cmp
mov
pop
and
dec
je
jl
test
mov
dec
mov
inc
aam
mov
adc
and
pop
sbb
movsb
pop
and
or
xchg
sub
cmp
mov
and
dec
jo
jl
mov
mov
dec
les
aam
mov
adc
and
inc
add
or
sbb
and
xor
mov
dec
and
dec
pop
xchg
push
mov
movsb
dec
lods
xchg
mov
rolb
fcoml
in
lock
clc
lea
rcll
inc
sub
mov
call
call
insb
and
dec
jl
test
mov
mov
dec
rclb
loopne
call
pop
sbb
movsb
pop
and
push
or
mov
dec
push
xchg
pop
and
jl
test
mov
dec
mov
inc
mov
aam
fmull
xchg
in
and
loopne
or
sbb
dec
sub
adc
pop
dec
fs
insb
and
orb
movsb
dec
lods
xchg
mov
fmuls
lock
cld
mov
arpl
adc
sbb
mov
xor
cmp
mov
pop
adc
dec
je
jl
test
mov
rclb
in
mov
push
sbb
and
push
or
mov
cmp
dec
dec
push
xchg
pop
jg
insb
adc
dec
test
pushf
movsb
mov
enter
aam
fsub
mov
adc
or
or
adc
sbb
mov
xor
cmp
dec
xchg
push
and
fs
mov
and
dec
mov
movsb
lods
mov
int3
xchg
aam
loopne
in
hlt
mov
adc
data16
and
dec
and
inc
dec
mov
and
dec
insb
xchg
je
jl
test
test
mov
mov
rolb
in
lock
inc
add
or
adc
sbb
and
mov
dec
and
dec
pop
xchg
pusha
and
je
mov
dec
test
mov
mov
fcoml
call
mov
adc
and
inc
and
sub
cmp
dec
dec
xchg
push
and
insb
je
adcb
and
dec
pushf
xchg
test
mov
mov
shlb
dec
call
aaa
add
inc
xchg
or
and
cmp
mov
pop
and
dec
push
inc
mov
mov
mov
inc
aam
mov
adc
and
inc
or
enter
and
sub
cmp
dec
adc
pop
dec
pusha
xchg
push
test
mov
and
rclb
fsubs
dec
in
call
orl
sub
cmp
and
dec
push
xchg
pop
and
je
mov
pushf
xchg
movsb
and
adc
and
dec
in
xchg
hlt
push
xchg
pop
call
or
and
inc
dec
mov
pusha
das
icebp
and
test
test
mov
mov
fmull
hlt
dec
cld
mov
inc
sbb
mov
adc
dec
dec
push
xchg
pop
and
push
andb
mov
lods
mov
mov
dec
aam
fsubl
in
in
hlt
mov
adc
outsb
add
and
dec
sub
xor
cmp
adc
dec
pop
xchg
and
orb
dec
mov
inc
enter
adc
and
dec
lock
clc
adc
and
adc
mov
sub
cmp
xchg
dec
and
pop
pop
mov
and
dec
jl
mov
nop
inc
xchg
mov
and
dec
rclb
call
sub
mov
and
dec
xor
adc
fs
insb
xchg
js
test
mov
rclb
in
in
adc
and
inc
add
fldl2t
push
or
mov
xor
cmp
dec
xchg
push
and
pusha
insb
mov
and
dec
xchg
xchg
mov
mov
and
dec
fcoms
clc
add
jb
mov
sbb
and
sub
xor
cmp
adc
dec
pusha
xchg
push
mov
mov
and
adc
and
dec
lock
mov
and
dec
xor
push
pop
mov
and
dec
test
lods
mov
rclb
and
dec
loopne
call
inc
adc
or
and
dec
sub
xor
inc
inc
dec
push
mov
and
pop
loop
jl
mov
dec
lods
xchg
mov
mov
fcoms
loopne
lock
clc
mov
inc
sbb
mov
xor
inc
dec
dec
xchg
push
and
insb
mov
and
dec
mov
test
mov
aam
fsubl
call
add
fucomp
and
pop
enter
or
and
dec
push
mov
and
dec
jl
test
mov
mov
dec
enter
faddl
mov
fst
and
or
xchg
sub
cmp
adc
pop
dec
fs
insb
and
mov
mov
and
aam
loopne
call
push
in
push
mov
mov
xor
pop
mov
pop
adc
dec
je
jl
test
mov
mov
inc
aam
mov
adc
and
dec
clc
lea
icebp
shrb
adc
or
xor
mov
dec
dec
xchg
push
adc
add
insb
jb
jp
cld
stos
ds
xchg
fistps
fs
inc
mov
outsb
lds
gs
lods
fs
push
adc
ljmp
push
jae
lahf
pop
inc
sbbl
arpl
or
imul
icebp
sahf
or
adc
arpl
lods
sbb
outsb
lods
jb
push
test
jmp
or
insl
pop
insb
add
pop
jo
iret
mov
mov
jae
and
outsl
xor
adc
inc
or
outsl
loope
jb
and
bound
test
jne,pt
adc
jae
push
jns
je
fdivrl
or
cwtl
test
bound
xchg
js
sbb
pop
repnz
movsl
xor
lahf
and
jo
mov
xor
jns
sbb
lea
and
jne
ljmp
cmpsb
or
js
test
fs
mov
pusha
imul
imul
mov
dec
lock
insl
movsb
test
test
jns
jne
adc
mov
xor
fs
adc
pop
jbe
adc
popf
jp
adc
push
jb
imul
adc
inc
cmpsb
push
or
cmpb
gs
or
adc
inc
insb
push
imul
push
xor
push
fimuls
adc
push
pop
adc
pop
inc
push
lock
imul
sarb
mov
adc
jns
or
adc
sub
mov
sbb
out
or
pop
test
xchg
push
scas
scas
adc
xchg
sub
xor
jne
cmp
lret
or
arpl
xor
gs
in
ljmp
cmp
adc
lods
outsb
sub
xchg
andl
insl
jno
stos
or
push
je
push
outsb
sub
sub
repnz
pop
icebp
dec
or
aam
adc
push
cmp
sbb
arpl
sti
mov
sub
dec
out
daa
imul
dec
cmp
nop
adc
add
adc
or
incl
or
jne
les
nop
jae
add
adc
jns
mov
addr16
jo
ss
orb
or
adc
icebp
mov
dec
bound
ja
gs
ret
xchg
or
test
stos
adc
push
sbb
inc
inc
out
stos
adc
push
cltd
les
sub
push
js
dec
xor
jns
push
sub
data16
sub
jns
std
ljmp
jmp
inc
jbe
imul
sbb
push
sub
bound
jp
aas
sub
and
popa
movsb
insb
icebp
jae
push
sbb
and
adc
jb
sub
dec
leave
jl
enter
call
pushf
jns
and
out
pusha
lock
or
insl
lcall
inc
mov
sbb
and
gs
push
adc
fs
push
lods
adc
inc
adc
mov
imul
sub
mov
subl
test
repnz
rcll
stos
adc
pop
inc
fildll
rcll
insb
movb
push
aas
adc
cmc
gs
repz
push
aam
out
je
xor
out
arpl
inc
sti
jb
insb
sub
mov
popa
sub
pushf
adc
gs
jecxz
lahf
sub
iret
aam
and
adc
push
orl
xor
ficompl
rcrl
or
lods
xor
jne
pop
or
out
das
je
nop
xchg
sub
in
je
jp
xor
jg
rcrb
jg
jae
and
jmp
sub
mov
or
adc
inc
lret
andl
jae
mov
ja
mov
and
add
in
inc
jecxz
outsb
imul
sbb
jo
mov
adc
dec
cltd
addr16
cmp
jns
jmp
jmp
imul
call
sbb
fistpl
inc
pushf
or
push
sub
push
push
jp
or
movsl
outsb
data16
leave
xor
inc
aam
sbb
dec
sbb
xor
or
fisttpll
outsb
bound
jo
nop
xchg
orl
fpatan
mov
jns
mov
sbb
sbb
test
pop
adc
pop
pop
push
bound
mov
test
inc
in
movsb
fistl
or
fs
or
insl
adc
orl
rorb
dec
test
fs
and
and
lods
fsts
lods
jns
adc
outsb
repz
and
and
ljmp
adc
into
fidivrl
jge
out
leavew
mov
sbb
ret
push
std
outsb
ret
xorb
or
and
jle
mov
and
sbb
aam
and
movsl
and
daa
in
sub
cltd
test
daa
inc
insl
sub
sbb
xchg
push
push
orb
mov
xchg
jo
pop
and
loop
icebp
xor
jae
add
adc
popf
mov
lods
adc
mov
ja
inc
sahf
push
gs
pop
loop
outsl
adc
dec
in
mov
inc
imul
and
xor
inc
dec
subb
adc
jno
xchg
adc
loope
lds
sub
push
repz
out
dec
adc
push
or
jne
sbb
jo
sbb
sbb
jp
orb
adc
ficoml
rorl
adc
bound
push
dec
and
rcll
xchg
and
push
mov
int3
jp
stos
cmp
xchg
dec
adc
sub
pop
sub
sbb
gs
adc
je
or
mov
shr
or
dec
movsb
mov
data16
mov
je
or
shll
insb
outsl
ficompl
jecxz
inc
mov
jp
int3
aad
lds
dec
sti
dec
adc
jae
lcall
adc
cmc
sahf
pop
in
adc
adc
mov
js
ja
rcl
aad
adc
xchg
leave
sbb
xor
aad
mov
data16
or
mov
sbb
sub
cmp
adc
jb
lock
dec
jo
dec
dec
lret
adc
or
jp
inc
ret
dec
or
or
leave
and
fadds
ficomps
into
in
adc
loopne
adc
add
repnz
mov
and
das
lods
adc
imul
cmp
daa
mov
bound
inc
clc
sub
or
push
fsts
insb
dec
mov
rcrb
push
or
nop
mov
push
xor
mov
outsl
or
pop
icebp
mov
jo
mov
data16
sbb
adc
arpl
clc
add
popf
jl
insb
movsb
push
mov
sbb
mov
adc
adc
ficomps
test
adc
scas
loope
fnstcw
repnz
fdivrl
imul
xchg
adc
sbb
pop
jns
inc
in
int
idiv
fs
or
and
enter
sub
sbb
or
jns
pop
sbbb
mov
xor
mov
dec
rcll
dec
adc
into
inc
int
xchg
jbe
sbb
pop
push
pop
or
ja
fcom
adc
lret
adc
or
fs
adc
pusha
ret
push
ss
mov
ss
lcall
lods
dec
aam
or
insl
imul
inc
or
jo
gs
or
fwait
imul
push
popa
xor
adc
xorb
nop
dec
lds
jae
mov
sub
jns
pushf
jp
imul
shrb
or
in
int3
sbb
std
mov
addr16
into
jne
or
ret
lods
in
sbb
fdivrl
adc
dec
push
out
ficomps
push
and
es
add
or
dec
pop
adc
adc
mov
xchg
adc
adc
jns
outsl
mov
inc
mov
test
js
jp
push
shlb
dec
outsb
daa
inc
lret
mov
inc
fs
adc
adc
xlat
leave
xor
sbb
dec
rol
xchg
inc
or
pop
and
and
mov
nop
mov
adc
ja
and
pop
js
outsb
adc
and
xor
sub
cmp
imul
jmp
and
in
adc
push
arpl
or
cwtl
sub
or
mov
stos
adc
pop
mov
imul
xchg
data16
aaa
adc
lret
mov
or
pop
or
rorl
or
lods
int
pop
loopne
mov
scas
or
rclb
or
jns
jp
xor
and
jo
fdivs
adc
jns
xor
test
addb
test
je
arpl
movsl
adc
sub
adc
push
mov
js
push
mov
jo
dec
xchg
movsl
pop
cmp
ficompl
push
lret
xor
jo
and
dec
test
push
or
push
movsb
gs
xor
popa
jno
pushf
jecxz
insl
sbb
or
and
push
mov
cltd
sbb
jecxz
or
sbb
insb
and
bound
lret
pushf
pop
outsb
or
or
cmp
jae
mov
inc
fwait
adc
outsl
icebp
push
sub
mov
xchg
les
push
lea
sbb
stc
pop
and
ficompl
in
lea
push
outsl
adc
cmp
ja
mov
into
pop
xchg
xchg
rcrb
ss
adc
mov
scas
push
and
lock
mov
mov
dec
ret
and
aas
icebp
mov
int3
sbb
fs
jb
adc
shlb
ds
ret
xchg
or
cmpsb
or
or
fistl
mov
aas
adc
or
jb
out
lea
jb
xchg
or
inc
dec
sub
xor
adc
aam
sub
adc
subb
in
pop
adc
or
fwait
pusha
dec
adc
loop
jmp
pop
adc
mov
fs
arpl
inc
or
je
dec
pop
lcall
js
out
in
xchg
and
push
pop
repz
push
dec
outsb
cmpsb
and
mov
lret
mov
push
movsl
or
imul
pop
adc
or
inc
pop
icebp
das
ss
adc
outsb
mov
imul
or
movsb
add
pusha
pushf
fwait
enter
lcall
jp
sub
xor
adc
push
incl
adc
jae
ret
jns
or
and
sbbb
pslld
or
fsub
inc
lods
loop
pop
jp
mov
mov
xor
adc
adc
test
adc
lret
insb
popf
es
into
stc
cli
mov
xlat
xchg
push
or
clc
cmpsb
addr16
ja
dec
std
les
out
xor
jno
and
mov
adcb
test
subl
aad
adc
outsb
cwtl
dec
sahf
and
nop
shlb
jnp
and
add
or
jb
out
or
pop
or
pop
and
xchg
fs
or
xor
push
adc
xor
dec
and
inc
shrl
adc
fbld
shrb
inc
dec
out
sbb
faddl
ja
mov
in
lahf
das
xor
mov
mov
or
imul
test
sbb
adc
sbb
lock
add
jbe
sbb
sbb
inc
or
lcall
mov
mov
mov
mov
sub
fnstcw
mov
xchg
push
out
push
bound
in
lret
aas
std
es
mov
cmp
or
push
adc
pushf
push
sub
xchg
test
ficoml
nop
or
lods
rcrl
int
movsb
adc
mov
dec
or
popa
adc
dec
sbb
cmp
cmp
dec
test
xor
mulb
jae
or
movsb
or
mov
mov
or
or
sub
jp
fisubrl
or
stos
or
jae
push
aad
insb
sub
xor
mov
sub
adc
or
push
mov
push
arpl
mov
lret
push
sub
sbb
and
lahf
jb
mov
clc
fs
in
sbb
int3
mov
or
and
xlat
mov
out
lret
sub
daa
bound
jo
stos
mov
icebp
ljmp
sub
adc
push
xor
les
int3
addr16
inc
sub
mov
in
push
jge
cwtl
sbb
fwait
call
outsl
fs
xchg
mov
push
jg
xchg
xor
mov
sbb
in
imul
xchg
sbb
adc
lahf
mov
outsb
rclb
adc
mov
sub
test
dec
jb
cmpb
shll
sub
adc
fcomps
mov
jmp
cmp
fs
xor
xchg
sbb
pop
pop
dec
test
jnp
roll
cs
and
into
dec
in
adc
mov
enter
ja
mov
inc
sbb
int3
xchg
adc
das
data16
sbb
fs
out
sbb
pop
adc
and
or
adc
dec
imul
xchg
dec
daa
push
lcall
lods
or
mov
mov
ficomps
ja
mov
icebp
mov
push
rorb
dec
test
ret
sbb
pop
xor
clc
les
and
aam
in
inc
or
loop
jne
test
mov
out
xchg
test
ljmp
pop
in
popf
cs
jb
fiaddl
sub
dec
clc
daa
jmp
daa
ret
call
fdivl
adc
sahf
out
fwait
orl
enter
pop
mov
adc
and
sysenter
adc
les
push
xchg
push
and
sub
mov
in
dec
adc
inc
sbb
int3
sub
xor
insb
rclb
jo
push
or
push
aad
sbb
je
outsl
sub
cs
lret
je
xorl
outsl
aad
int3
fbld
into
addr16
ficompl
dec
pop
sub
lods
mov
lret
rcrl
ss
adc
adc
lret
mov
insb
mov
ja
or
cmp
jns
test
les
or
mov
sbb
sbb
shrl
jns
adc
in
adc
inc
or
pop
or
sbb
cwtl
insl
lods
dec
lret
or
lcall
aaa
or
adc
jns
mov
lcall
push
in
xchg
or
inc
into
mov
adc
hlt
cmp
push
out
imul
ret
scas
hlt
or
push
outsb
adc
or
imulb
or
mov
fidivrs
outsl
adc
adc
adc
lret
pop
adc
aaa
sub
roll
inc
out
shlb
jb
push
fcompp
stc
or
jns
mov
lods
mov
jle
aam
jne
daa
mov
cmp
inc
or
imul
mov
or
push
xchg
jo
lret
jle
sbb
nop
adc
sub
jne
sub
jns
movsl
mov
sub
xchg
mov
and
push
sbb
and
ljmp
movsl
sub
and
adc
es
adc
and
sub
cmp
dec
gs
and
dec
pushf
cmp
and
setle
sub
sbb
mov
sub
mov
fs
jns
daa
dec
lds
add
hlt
adc
mov
imul
mov
insb
data16
pop
push
xchg
je
int3
sbb
leave
adc
or
push
sbb
inc
or
insl
xchg
mov
pop
xchg
jp
sub
adc
mov
adc
push
rcr
xchg
das
dec
pushf
fists
jmp
or
mov
sarb
adc
xor
inc
outsb
movsb
jl
dec
idiv
mov
dec
or
push
cwtl
int
cmp
nop
or
sbb
pop
jle
nop
lods
sbb
or
pop
sub
and
xchg
push
or
or
ja
outsl
adc
mov
or
mov
mov
or
cli
bound
nop
insb
adc
push
xor
adc
add
mov
and
adc
sub
or
filds
mov
int3
std
inc
nop
or
fildll
mov
jbe
or
jl
or
hlt
inc
xchg
fs
lods
mov
mov
adc
adc
mov
lds
js
aad
shll
scas
fcompl
test
cmpsb
adc
mov
push
or
fcompl
nop
lret
cltd
lret
jb
mov
adc
popa
jl
dec
int
loop
mov
mov
cmp
and
cmp
push
addr16
imul
adc
cld
lahf
xchg
insl
data16
repz
jbe
push
jo
mov
shll
into
addr16
imul
in
leave
jo
or
shl
int
adc
cmpsl
adc
mov
adc
fisttpll
in
push
sbb
xchg
arpl
jge
bound
imul
addr16
call
adc
lds
les
and
test
sahf
aas
fidivs
ss
ljmp
lcall
roll
adc
or
sbb
pushfw
or
adc
or
xor
push
fwait
sbb
jecxz
sub
and
xor
and
sbb
inc
jl
xor
xor
and
jp
xor
sbb
or
mov
mov
or
mov
dec
rcrb
movl
js
outsl
or
adc
out
loop
mov
jae
cmp
pop
sub
push
fcoms
push
xor
or
test
lods
int
push
lock
push
lods
adc
je
movsb
sbb
nop
and
mov
ja
xor
and
sub
adc
adc
xchg
push
pop
or
fnstsw
fldenv
push
lret
popa
inc
adc
in
xor
jbe
sbb
and
or
jb
and
xchg
gs
pop
sub
loopne
lret
inc
xlat
jbe
insl
sub
dec
adc
pop
test
dec
fwait
jno
adc
hlt
adc
pop
test
stos
xchg
loopne
adc
push
test
and
and
pushfw
push
xchg
and
or
add
cmpsl
xchg
data16
sbb
es
adc
adc
inc
andb
rclb
cmpsb
sbb
or
jl
or
mov
lcall
imul
xor
ja
dec
fchs
jp
mov
cmp
push
push
push
insb
in
sahf
lcall
ret
mov
outsl
push
adc
clc
or
je
sub
sbb
adc
jp
xor
push
repnz
jo
sub
mov
aad
cltd
lock
cmp
or
outsl
ja
lret
cmp
cmp
daa
pop
loop
add
sbb
adc
jo
shlb
mov
ds
cmpl
adcb
mov
les
in
or
sti
pop
jle
cwtl
xor
mov
fs
arpl
push
loop
lcall
or
pop
cltd
xchg
jb
movsb
and
fucomip
push
dec
or
mov
pop
les
push
adc
jmp
adc
popa
xor
sub
dec
push
push
jnp
or
icebp
js
fwait
mov
insl
mov
int3
adc
and
push
adc
test
fsts
push
xor
or
outsb
or
mov
jb
stos
imul
cli
pushf
and
fildl
int
scas
adc
xchg
ret
outsl
sub
je
icebp
dec
push
xchg
and
jecxz
sub
pop
and
mov
pusha
jb
addr16
je
and
pop
lods
fwait
jl
or
xchg
popf
mov
out
pop
adc
add
bound
int
sub
adc
adc
push
sub
mov
jo
mov
jle
xchg
jl
pop
add
pop
popa
hlt
mov
les
adc
jnp
mov
jb
dec
icebp
insb
imul
je
js
fwait
in
bound
test
aam
or
push
inc
movsl
add
and
cmp
dec
fs
adc
add
inc
add
dec
add
push
and
cmpl
add
fcompl
fisubl
or
addr16
cmp
sbb
jmp
addl
or
leave
mov
jae,pt
mov
stc
sbb
nop
sub
rolb
add
js
mov
xor
or
cmp
rolb
or
test
and
pop
sbb
xor
mov
push
cmp
or
adc
inc
jne
repz
push
add
pop
push
cmp
popa
test
je
sar
rcl
add
or
shl
push
insb
insl
sbb
sub
scas
sbb
push
call
add
pop
lods
xchg
pop
mov
test
ret
add
pop
push
sub
inc
lahf
mov
lea
dec
inc
adc
stos
mov
stos
push
cmp
pushf
push
cwtl
add
add
test
ret
shll
mov
out
js
jns
dec
push
sbb
ds
dec
repz
jge
push
enter
adc
enter
mov
in
sub
ljmp
inc
aas
out
mov
data16
xor
movsb
pop
inc
push
dec
cs
dec
push
mov
adc
sub
sbb
sub
xchg
dec
inc
subb
jecxz
ret
add
inc
pop
test
rcll
mov
lret
jae
sahf
lea
jmp
pop
dec
xor
add
or
cmp
or
and
fbld
jmp
xchg
repnz
imul
pop
movsl
lcall
jp
jg
add
lea
cmc
cmpsb
sbbb
repz
shrb
in
xchg
add
pop
popf
fdivrl
ret
adc
adc
mov
je
pop
stos
push
fildl
cld
fistpl
test
adc
movd
pop
xchg
addr16
repz
in
fsubl
xchg
lret
iret
data16
gs
shl
popf
enter
leave
add
cwtl
repz
xor
sub
loope
int3
and
add
ficomps
int
insl
ss
or
sbb
adc
pusha
inc
xor
adc
cltd
fbld
pop
in
cwtl
test
adc
or
add
movsl
cli
hlt
std
daa
out
inc
cmp
decb
adc
pusha
enter
dec
ret
shlb
jnp
cvtps2pd
addr16
leave
jmp
sbb
fdivr
jnp
jno
xor
out
adc
loope
push
or
clc
std
jg
sti
in
leave
loopne
xor
ljmp
cmpsl
stc
data16
mov
and
lock
call
popl
jmp
fisubl
lret
cmpsl
inc
arpl
shld
aaa
xchg
pop
xchg
iret
sbb
push
outsl
xor
inc
or
leave
push
mov
outsb
cmp
inc
mov
mov
mov
push
dec
dec
pop
sbb
xlat
sub
jecxz
jne
jae
mov
dec
mov
mov
sub
inc
movaps
fsubrl
push
jl
push
lods
leave
pop
or
mov
mov
jno
mov
mov
sub
fmull
sbb
imul
outsb
daa
cli
sub
rcr
push
adc
inc
jnp
out
lock
mulb
jne
pop
popf
pushf
and
xchg
addr16
xor
int
outsl
inc
cs
xor
mov
inc
fnstenv
leave
fildll
xchg
inc
aas
ret
test
sbb
xor
cmp
andb
xchg
lcall
dec
push
push
sti
jge
pandn
mov
push
jne
bound
cmp
repz
xor
pushf
xchg
rol
pop
push
pop
push
push
ret
insl
jb
inc
repnz
ds
lea
hlt
adc
mov
cltd
cltd
dec
ljmp
pop
mov
pop
in
xor
mov
inc
stos
cmp
das
repz
movsb
cmp
shlb
nop
inc
movsb
add
sub
add
lock
jg
or
loope
sub
fstpl
lret
andb
cmpsl
pop
bound
add
and
dec
inc
push
push
dec
push
dec
inc
xchg
inc
out
dec
xorl
dec
pop
dec
mov
push
or
add
xchg
je
sbb
xor
xor
popa
push
dec
push
dec
xor
cmp
cs
in
and
xor
xor
cmc
sub
mov
incl
cmp
aam
push
orb
addl
inc
stos
inc
mov
adc
push
inc
add
xor
pop
push
lahf
inc
lock
sub
sahf
add
push
push
push
push
push
push
add
pop
pop
pop
popa
bound
fs
imul
insl
popa
sbb
addb
jbe
or
jp
ret
add
xor
ss
cmp
cmp
das
mov
data16
out
in
fildl
push
arpl
negl
mov
lock
pop
push
aad
dec
adc
cli
xchg
inc
and
int
sbb
fistpl
adc
cltd
call
mov
ret
push
mov
mov
mov
pop
xor
push
int3
add
lcall
push
or
sahf
and
les
pop
pop
pop
and
call
inc
and
lea
pop
addl
addl
arpl
lock
add
add
addr16
jl
xor
fs
xor
mov
add
filds
repz
je
inc
jmp
nop
jle
fs
pop
or
pusha
mov
mov
clc
add
stc
cmp
sbb
or
clc
cmpsl
cli
cmpsl
pop
lahf
outsl
add
negb
adc
std
add
mov
sbb
pop
outsb
push
loop
mov
inc
add
lcall
cmp
push
add
dec
sbb
jecxz
dec
divb
loopne
xor
xchg
cld
jge
add
je
ror
clc
jmp
sbb
jl
dec
jne
dec
fiaddl
data16
and
sbb
mov
fnstsw
popa
ret
and
clc
popa
les
fdivr
call
mov
dec
and
cs
lods
test
and
or
inc
sbb
adc
ret
lret
mov
xor
sbb
push
pop
icebp
xor
jl
or
pop
add
mulb
jmp
leave
out
into
and
cwtl
incb
mov
push
jmp
call
xchg
jg
jmp
nop
pop
add
inc
inc
ret
or
mov
lds
int3
add
sbb
sub
insl
mov
das
outsb
pushf
sub
movsl
ja
movsl
ds
sbb
adc
scas
dec
stc
xor
adc
lods
inc
dec
push
adc
nop
inc
adc
fldt
sbb
mov
adc
xor
call
aas
imul
and
sub
mov
and
subb
cli
cmc
in
sub
sub
fcompl
pop
mov
xchg
push
pop
out
sub
sub
push
das
push
xchg
jl
push
fdivrs
xchg
or
les
inc
xor
mov
fldl2t
mov
mov
jle
mov
cmp
stos
fbstp
cmp
cmp
lods
mov
jne
stc
xchg
lods
movsl
xchg
outsb
mov
xchg
stc
test
in
or
mov
inc
adc
jecxz
sbb
scas
inc
pop
inc
sahf
push
push
out
push
xor
xor
or
mov
mov
sub
data16
xchg
fidivs
xor
adc
xchg
popf
push
sub
cmp
popa
repnz
nop
push
scas
iret
xchg
pop
or
cld
pop
xchg
push
mov
push
nop
sbb
xor
mov
push
xor
pusha
xor
das
dec
adc
sub
fs
call
push
inc
push
mov
mov
lods
testl
in
das
and
mov
rcr
les
mov
fistpll
dec
and
and
lds
jl
mov
popf
add
inc
and
pop
sub
pop
lods
push
addr16
push
js
add
mov
add
lods
push
push
ja
push
xchg
arpl
push
pushf
and
and
fsts
inc
push
pop
jnp
scas
dec
mov
data16
jae
push
pushf
popf
xchg
sub
aam
shl
cmp
and
xor
popa
jp
inc
xchg
jnp
fs
scas
mov
imul
movsb
cwtl
dec
jle
cmp
cwtl
inc
sub
repz
dec
inc
or
and
add
adc
push
dec
jnp
xor
js
das
push
ss
insb
jno
out
sub
xor
sub
sbb
fs
outsb
jae
insl
dec
add
jns
or
in
push
xor
loope
das
cmp
and
lea
dec
mov
das
insl
jns
add
push
out
rolb
jno
mov
jg
adc
adc
sub
lret
int3
enter
pop
shrl
lahf
pop
jo
adc
test
dec
jg
xchg
es
dec
and
xchg
mov
je
jns
inc
sub
and
or
das
mov
sbb
shll
scas
sbb
adc
inc
inc
mov
es
fsub
arpl
dec
sub
addr16
xor
imul
es
loopne
loope
push
xlat
lcall
or
xor
data16
pop
pop
shll
xchg
mov
test
add
adc
inc
inc
inc
or
sarl
out
iret
pop
js
push
js
bound
das
xchg
adc
lods
and
pop
adc
pusha
jo
pop
sub
inc
inc
sbb
dec
push
inc
in
int3
cmp
sub
inc
and
push
dec
jl
dec
xor
cwtl
sarb
mov
jbe
cmpsl
daa
lret
and
sbb
sahf
iret
inc
dec
xchg
push
dec
jb
jecxz
ds
cli
jp
xor
push
mov
inc
dec
push
push
inc
cwtl
jns
jno
push
movsl
sub
cmp
inc
cmpsl
clc
test
test
adc
leave
push
ljmp
repnz
pop
sub
and
das
cmpsb
push
dec
xor
jno
or
push
push
rcrl
cmp
or
dec
hlt
testl
push
insl
xor
cmpsb
pop
test
das
mov
std
test
inc
cmp
dec
test
sbb
mov
mov
sub
mov
cld
xchg
aam
fdiv
sub
dec
or
xor
repz
fsubrl
or
xor
or
ds
imul
mov
xchg
or
or
mov
or
fbstp
adc
pop
mov
dec
mov
jae
imul
or
dec
roll
lds
frndint
jb
mov
ljmp
lods
xor
psubd
aad
adc
cmp
pop
pop
mov
inc
movsb
mov
out
mov
in
fistl
and
sub
lret
sub
cmp
cli
cmpsl
test
or
jecxz
std
sub
dec
scas
sub
sub
sub
jae
mov
scas
sbb
sub
insl
mov
cmp
inc
push
aas
push
push
arpl
fwait
add
push
mov
test
xchg
mov
pop
stos
fistps
adc
dec
mov
das
lods
shlb
fs
aaa
cmp
hlt
jmp
hlt
jp
xlat
jp
leave
lahf
popa
daa
mov
push
aam
test
out
leave
pop
xor
mov
xchg
stos
xchg
cmp
cmp
fisttpl
mov
out
mov
or
outsb
hlt
inc
je
mov
ljmp
sbbb
pop
adc
ljmp
jo
cmp
aam
jae
jge
jae
xchg
adc
pop
pop
jo
cmc
lahf
les
aas
jb
inc
sub
mov
je
inc
jno
xor
std
dec
pop
das
push
sbb
dec
mov
insb
jg
cmpsb
add
jbe
in
cs
mov
mov
mov
xor
push
xor
test
xchg
cmp
imul
dec
mov
xchg
push
je
jmp
fidivrl
movsl
or
inc
pop
xchg
xchg
sbb
sub
jbe
jne
add
std
xor
cs
xchg
adc
xlat
lds
push
imul
jp
je
add
insl
js
hlt
in
mov
pop
int
or
sub
cwtl
add
or
adc
flds
jo
adc
xor
xchg
pop
lret
or
dec
call
movsl
pop
xor
jae
or
sub
je
jge
movsl
pop
xor
jne
or
sub
jbe
jge
movsl
pop
xor
ja
or
sub
js
jge
movsl
pop
xor
jns
lods
xor
mov
adc
inc
js
inc
jnp
xor
ret
sub
add
lret
insb
add
loope
xor
adc
xor
add
loope
xor
add
add
lret
insb
add
add
add
lret
insb
add
loope
cmp
and
add
mov
add
add
or
mov
sub
adc
mov
aaa
pop
scas
pop
leave
add
clc
sbb
and
push
popf
xchg
or
addr16
cmp
and
or
xchg
push
je
xor
dec
add
mov
push
frstor
or
in
sub
adc
dec
sub
outsl
or
call
inc
add
movsb
push
jmp
jge
je
xor
cmc
or
pop
add
aam
or
add
enter
lods
jmp
inc
add
or
push
add
push
push
dec
or
or
imul
dec
add
movsl
or
add
or
and
cmp
xor
or
adc
or
xchg
pop
je
xor
dec
add
arpl
push
pushf
rorb
roll
cs
pop
jae
bound
and
add
or
dec
add
or
adc
mov
mov
aas
jb
and
arpl
adc
pop
inc
push
push
sub
sub
ds
push
dec
dec
xchg
pop
shl
inc
rolb
cmpsb
cltd
test
fs
dec
push
push
inc
push
xor
sub
xchg
adc
push
dec
dec
fiaddl
leave
mov
out
push
insb
icebp
sti
sub
jle
lods
pop
mov
xor
fs
addr16
rolb
lods
pop
jmp
inc
out
dec
pushl
imul
aad
xchg
addr16
rorb
push
sti
pop
pop
sub
mov
movsb
cltd
add
push
inc
push
xor
mov
nop
adc
dec
stos
fdivl
pop
push
pushf
jl
ret
jae
xchg
sub
insl
mov
imul
sub
pop
pusha
jae
popf
loope
popa
mov
bound
ficoms
arpl
ficoms
gs
loope
cmp
adc
addr16
loope
push
imul
inc
popa
push
mov
add
cmp
movsl
dec
call
sub
aam
imul
sbb
clc
out
and
out
mov
or
push
sahf
jae
adc
inc
add
sub
xor
inc
cmp
mov
lds
sub
sbb
and
inc
bswap
and
inc
and
es
sub
sub
das
bswap
pop
jle
cmp
daa
cld
pusha
xchg
jle
and
stc
cs
add
sbb
inc
xchg
and
and
es
sub
sub
das
xchg
pop
aas
and
daa
jle
pusha
bnd
nop
and
cs
nop
sub
and
and
and
inc
repnz
nop
sub
das
aas
and
bswap
aas
jle
daa
repnz
pop
nop
jle
and
fstpt
pop
test
fs
and
pusha
movsb
imul
or
and
enter
js,pn
and
enter
and
sbb
and
and
enter
and
mov
sub
inc
add
xchg
push
inc
mov
push
inc
inc
push
movsb
mov
pop
mov
adc
dec
inc
call
sbb
mov
push
stos
movl
add
pop
lret
sbb
lahf
push
xchg
and
jo
inc
and
lret
imul
and
js
push
cmp
rolb
clc
inc
cmp
push
aad
aad
pushw
jmp
rorb
xchg
les
jns
das
xor
divl
notb
xor
div
mov
dec
push
jmp
inc
stos
pop
cmp
rcrb
sti
out
jge
enter
xchg
mov
outsb
dec
and
inc
push
shll
push
or
xor
xor
ret
mov
out
test
adc
sub
mov
or
test
test
xchg
test
jle
and
cmp
movsl
push
aam
sarl
xchg
cld
or
dec
in
ret
movsb
mov
inc
add
xor
pushf
xchg
je
xor
xchg
je
push
push
dec
dec
lods
inc
lahf
cld
dec
mov
cmp
jb
sub
out
jo
and
dec
pop
mov
dec
testb
ja
test
dec
and
std
mov
addb
clc
sub
push
xchg
sysenter
hlt
push
hlt
xor
push
mov
xor
adcl
adc
dec
outsb
stos
xor
push
adc
dec
inc
das
sub
dec
stos
aas
mov
out
and
push
and
jl
dec
stc
sbb
je
xor
or
push
jo
leave
gs
add
cs
cmp
jo
sbb
sub
mov
cmp
lea
pop
inc
outsb
xchg
out
dec
aam
mov
sarb
jle
sbb
sub
sub
out
sub
sub
sub
inc
and
sub
and
cwtl
in
sub
cs
std
sub
jns
rclb
push
dec
dec
in
pop
cmpsl
fstps
lea
pop
hlt
test
les
pop
jg
push
cs
push
jg
jbe
gs
mov
repz
cmpsb
mov
shlb
dec
push
dec
inc
or
mov
mov
lret
sub
add
push
scas
mov
mov
addr16
pop
sbb
cmp
push
das
inc
push
imul
rcrb
mov
inc
lret
jg
pop
mov
sub
sub
cmpsl
ret
lahf
lods
pop
ss
aad
into
rol
in
jl
aam
jnp
push
add
xchg
cmp
fimuls
cmp
inc
cmp
push
stc
out
movsl
cwtl
cmp
mov
push
dec
stos
sub
leave
ret
mov
mov
les
sub
aad
pop
leave
es
push
mov
mov
sub
cmp
dec
mov
mov
daa
rcr
imul
lcall
insb
ror
mov
cwtl
add
sub
mov
fs
sub
or
cmp
dec
stos
fs
or
popf
jno
and
mov
inc
fisttpl
inc
orl
sbb
into
cmp
push
push
dec
inc
pop
or
lods
mov
mov
mov
or
js
out
cwtl
and
or
insb
sbb
mov
pop
add
js
int3
and
or
insb
inc
je
mov
enter
push
adc
loop
sub
gs
or
sbb
and
dec
mov
rolb
movsb
js
int
cmp
fidivl
mov
test
xchg
push
rclb
les
or
cmp
sbb
enter
enter
or
inc
mov
xor
xchg
adc
push
xor
shlb
xor
in
testl
and
dec
dec
fcoml
loopne
add
jecxz
xor
in
push
ds
jo
mov
or
mov
and
enter
lods
adc
and
jl
inc
push
sbb
nop
dec
clc
popa
aam
sbb
xor
lds
adc
shlb
inc
hlt
aam
dec
inc
xor
mov
inc
adc
je
and
dec
mov
rclb
and
jge
leave
add
daa
cmp
icebp
push
adc
mov
rclb
hlt
and
je
scas
test
and
sbb
movsb
xchg
lods
repnz
dec
lock
hlt
adc
lret
add
movsb
js
int3
and
lods
sbb
shr
or
mov
xor
cmp
push
xchg
pusha
inc
sbb
mov
cwtl
and
dec
aam
fcompl
xor
cmp
dec
push
add
push
test
push
jge
cmp
ljmp
dec
sbb
add
pushl
jle
enter
and
sub
inc
jne
lock
mov
push
lods
mov
xchg
mov
dec
lahf
fadd
mov
jns
pop
mov
inc
test
and
and
pop
dec
xor
push
les
or
sub
rolb
sbb
xor
dec
mov
dec
dec
mov
push
gs
sbb
stos
ja
xchg
cmpb
cmc
cmp
sti
ljmp
xor
xor
sbb
outsl
jl
sub
dec
mull
fs
jae
push
dec
cld
test
cmc
inc
mov
icebp
dec
or
inc
and
push
in
cmc
movsl
ss
cmp
addb
imul
shrb
lods
push
xchg
ljmp
arpl
rcrl
das
enter
push
fimuls
dec
inc
clc
fcoms
xlat
or
out
and
mov
rorb
inc
in
test
into
push
push
mov
mov
xor
dec
repnz
dec
or
andps
cmp
jae
popf
shl
xchg
stos
push
xor
inc
adc
push
out
lret
jb
fwait
lret
and
pushf
cmp
movsb
outsl
mov
pop
add
inc
insb
stos
jp
mov
cmp
mov
jne
dec
dec
pop
inc
fmull
das
ds
cmp
arpl
loopew
adc
mov
lret
dec
mov
int
xchg
hlt
insb
out
int3
jl
or
cmp
dec
dec
push
repz
dec
rorb
add
dec
push
xor
inc
std
push
inc
es
xor
leave
inc
jne
jno
xchg
arpl
adc
inc
xor
lock
inc
push
outsl
or
adc
shlb
mov
insb
xlat
sbb
dec
pusha
add
pop
xor
pop
int
out
jecxz
lea
sub
das
mov
push
or
xor
sbb
push
scas
pop
lods
loop
imul
and
fs
imul
mov
inc
add
sbb
stos
lcall
sbb
test
xchg
jne
test
cs
push
sub
dec
adc
dec
push
test
into
aaa
repnz
xchg
cmpsl
jl
and
mov
pop
or
xchg
or
rclb
pop
test
cltd
fstpt
xchg
fimull
push
scas
je
and
cmp
dec
cmp
jb
lods
pop
pop
call
pop
push
mov
js
dec
imul
jne
je
cmp
jb
test
mov
scas
addl
gs
jns
inc
aaa
mov
test
dec
push
mov
adc
xchg
push
aad
push
outsb
fidivrl
pop
and
inc
cmp
and
pusha
loop
push
lahf
repnz
push
mov
daa
xchg
and
pusha
outsb
inc
push
ja
movsl
gs
mov
test
inc
dec
imul
cmp
xor
push
pop
inc
dec
inc
inc
dec
das
xchg
xchg
mov
sub
inc
xor
sub
ss
dec
dec
dec
mov
dec
or
lods
xor
adc
jle
xchg
mov
inc
push
call
cmp
lcall
js
push
add
inc
dec
push
dec
dec
aam
inc
mov
jns
xchg
inc
bound
call
jbe
pop
movsl
push
popf
shlb
adc
imul
lea
pop
jne
leave
xor
insb
pop
test
xor
test
dec
or
mov
lea
inc
pop
dec
insl
push
push
nop
ret
pop
xchg
inc
rcrb
insb
ficomps
ficoms
jo
sbb
outsb
leave
cmp
adc
adc
sarl
dec
iret
std
movsb
sbb
es
inc
cli
and
outsl
inc
inc
mov
mov
mov
xchg
dec
pop
je
pusha
xchg
pop
mov
ljmp
int
cmp
lds
xor
mulb
sbb
insl
jo
test
je
ja
xorb
xor
bound
xchg
jns
inc
mov
or
pop
or
loope
sub
push
dec
outsl
mov
sbb
xor
xchg
ds
outsl
pushl
call
loope
pop
mov
popa
mov
in
sar
cmc
dec
fldt
xor
cld
jae
js
xchg
dec
outsb
jns
imul
sub
or
add
cld
mov
dec
ds
cmp
sbb
fs
push
insl
jb
rcrl
enter
test
pop
adc
lahf
cld
es
or
xor
test
hlt
cmp
out
inc
mov
repz
int
pop
xor
push
lcall
or
sbb
test
add
add
call
aaa
xchg
sub
je
adc
sbb
orb
jmp
mov
rolb
jle
pop
scas
lret
fs
popa
popa
sub
xor
mov
cmp
enter
jl
int3
aam
outsb
test
xchg
stc
cltd
pop
mov
inc
int
fdivrp
daa
arpl
sbb
or
pop
dec
cmpsb
jnp
mov
sub
je
enter
das
inc
div
dec
add
sub
outsl
and
inc
lods
xchg
imul
xor
push
imulb
dec
mov
dec
mov
inc
sbb
insl
pop
or
lods
cli
lahf
cld
push
push
mov
cmc
fwait
les
js
bound
jb
movsl
mov
outsb
jae
xor
push
fcompl
adc
mov
ret
into
or
test
inc
call
cmpl
adc
cwtl
add
jo
movsb
and
jge
adc
cmpsl
xchg
fisttpl
int
cmp
nop
dec
lods
mov
cmp
pop
je
cs
lods
sbb
push
xchg
pop
inc
cmp
mov
jl
cli
pushf
cmp
lods
fsub
arpl
xchg
call
int
sbb
xchg
push
sub
xlat
stos
fstpl
pop
push
cmp
or
or
aad
idivl
push
das
pop
sub
dec
mov
mov
dec
pop
mov
inc
sbb
push
ds
xchg
rcrl
cmc
shrl
mov
mov
push
notl
imul
inc
sub
loopne
rolb
loopne
dec
mov
out
adc
inc
inc
dec
pushf
xor
dec
sar
fidivs
test
mov
cmp
repnz
les
movsb
push
add
xor
push
ljmp
int3
sbb
sti
dec
dec
sub
pop
cli
in
mov
das
iret
mov
mov
repnz
cmp
arpl
cmc
xor
pushf
mov
in
dec
dec
repnz
jle
xor
mov
dec
insl
out
xlat
fldt
sub
xor
jbe
pop
dec
dec
inc
sub
inc
xlat
fistpll
sbb
mov
dec
push
lret
dec
push
sub
dec
fwait
inc
sub
sbb
and
dec
inc
mov
adc
push
dec
pop
xchg
pop
and
fs
and
dec
js
jl
addb
mov
nop
and
dec
cwtl
xchg
pushf
and
lods
adc
xchg
mov
enter
shlb
dec
fcoms
in
mov
adc
and
dec
clc
mov
adc
adc
and
mov
adc
and
dec
dec
xchg
push
and
push
and
dec
test
pushf
test
mov
mov
xchg
aam
loopne
call
add
or
xchg
adc
and
mov
call
inc
push
andb
nop
xchg
cwtl
and
adc
and
dec
fcoml
hlt
rcr
flds
sub
sub
inc
dec
dec
xchg
push
and
push
and
dec
xchg
xchg
mov
mov
and
dec
in
in
and
loopne
orl
and
sub
cmp
adc
pop
dec
push
inc
orb
movsb
dec
mov
mov
fmuls
lock
hlt
mov
pop
fmuls
adc
sbb
dec
sub
adc
dec
pop
xchg
and
jl
adcb
and
dec
movsb
xchg
lods
and
pop
clc
xchg
in
and
loopne
orl
sbb
sub
mov
adc
dec
dec
push
xchg
pop
and
push
test
dec
nop
xchg
xchg
and
movsb
adc
xchg
mov
mov
les
enter
rclb
fsub
mov
adc
and
dec
lock
hlt
and
loopne
addl
adc
and
mov
cmp
dec
inc
mov
adc
test
adc
les
inc
enter
pop
or
adc
jo
int3
cmp
cltd
adc
or
fcomps
xchg
sbb
xor
inc
test
mov
int3
xchg
aam
fadds
mov
adc
cs
adc
and
jno
cld
add
gs
jns
jne
imul
and
mov
push
imul
jp
js
arpl
bound
outsb
and
dec
push
xchg
push
and
push
push
mov
push
and
dec
dec
xchg
push
and
push
inc
mov
inc
and
dec
dec
xchg
dec
and
pop
mov
push
and
dec
dec
xchg
dec
cmp
inc
push
push
cs
xchg
lea
mov
jne
rolb
xchg
cmp
mov
jns
push
dec
push
dec
pop
dec
jmp
inc
pop
xor
push
jl
push
outsl
in
lods
dec
push
js
pop
ror
push
pusha
push
push
push
je
jmp
add
jb
jns
pop
cmp
ss
jecxz
mov
fs
inc
pop
lods
jne
jo
fcmovne
xchg
xor
imul
stos
fstl
ja
fs
mov
and
repnz
loope
es
xor
jne
sbb
in
inc
inc
ds
test
or
insl
fsubrs
ljmp
jne
jmp
jae
add
xor
sti
leave
jno
sbb
xor
cmpsb
mov
bound
xor
xchg
cmp
popf
dec
imul
push
push
je
inc
fmuls
imul
push
mov
xor
mov
dec
push
mov
dec
test
gs
imul
dec
fs
xor
sbb
adc
and
imul
out
xchg
fs
sti
jnp
rol
cmp
push
push
out
sbb
fwait
pop
aam
push
mov
fisttps
adc
push
dec
xchg
popa
insl
jns
imul
add
fcmovbe
dec
jo
daa
lret
push
push
mov
and
es
fisubrs
jecxz
and
adc
insl
pop
pop
inc
stos
mov
push
jp
jb
xor
aam
insb
pop
in
test
inc
pop
dec
lcall
xor
sbb
push
loopne
jne
mov
push
xor
insl
mov
dec
inc
jne
mov
push
sub
andb
sbb
fs
inc
push
add
mov
cmp
imul
sar
cmpsb
je,pt
js
cmpsb
cld
stos
movsb
movsb
inc
dec
aam
push
movsb
dec
out
sub
fists
gs
adc
xlat
mov
jp
outsl
dec
loope
jl
fcmovb
ficoms
push
or
inc
dec
inc
xchg
in
jns
sbb
push
popa
inc
icebp
xchg
mov
adc
jns
jne
xchg
inc
jns
lcall
add
cwtl
inc
and
out
and
jo
xor
ss
insb
inc
inc
inc
push
popf
loop
pop
je
sub
ja
nop
pop
cmc
dec
hlt
inc
adc
push
or
inc
sub
fdivr
mov
pop
push
sbb
mov
or
out
mov
jo
lods
inc
jp
push
pop
mov
ret
jmp
push
outsb
mov
lcall
call
les
addb
in
jmp
pusha
arpl
jb
adc
hlt
ret
xchg
cmp
das
jae
add
dec
xor
mov
jg
xor
cbtw
je
or
mov
xor
inc
dec
dec
dec
subb
inc
sub
arpl
insb
out
jne
jg
adc
xor
mov
test
call
jecxz
cmp
imul
cmp
xchg
in
and
sub
pop
adcb
xchg
movsl
jo
push
mov
adc
int3
inc
push
idivb
push
jge
adc
je
and
dec
jne
push
ss
orb
mov
and
test
xchg
sub
jo
sub
sub
sub
pop
ja
push
and
mov
imul
mov
jge
icebp
mov
shr
mov
inc
jbe
sub
mov
fs
inc
data16
dec
push
cmp
jne
out
xchg
or
idivl
loop
and
mov
mov
cmp
outsl
bound
xchg
je
cwtl
jbe
mov
js
lods
and
cli
jo
or
scas
mov
mov
jae
int
jne
adc
clc
sub
add
xor
fbstp
lcall
jo
cwtl
in
shlb
lods
jns
in
inc
sub
push
out
dec
push
inc
xor
movsw
jb
push
inc
gs
cmpsb
add
inc
pop
xor
mov
xor
inc
or
jb
pop
mov
nop
xchg
or
nop
push
sbb
or
xor
outsl
push
xchg
lcall
movsb
push
sub
or
and
add
ret
xchg
sub
lret
imul
int3
mov
mov
xor
je
pop
cmp
pop
sbb
jle
cmp
stc
xchg
xor
cmpsb
xor
xor
add
pop
jnp
pop
mov
or
adc
mov
push
add
or
push
add
jge
push
adc
adc
mov
add
mov
mov
sbb
lahf
call
add
add
cwtl
or
xorl
lret
adc
or
add
mov
sbb
add
push
mov
adc
popa
pop
jmp
mov
cmpsl
cmc
xor
dec
sbb
clc
in
das
mov
mov
xor
sub
int
mov
dec
dec
adc
and
push
imul
imul
pop
daa
mov
mov
sub
dec
adc
sbb
aas
sahf
js
stos
and
sub
fnstcw
xor
mov
insl
inc
jp
aaa
popa
fistps
outsb
cld
dec
in
lfs
pop
subb
into
jo
flds
lods
jge
cmc
inc
mov
cmc
inc
sbb
sub
clc
sub
cmp
test
lret
or
dec
dec
push
in
dec
pusha
in
dec
jo
add
js
addb
mov
xchg
and
inc
inc
sbb
std
xchg
inc
stos
lea
or
xchg
and
mov
or
push
push
mov
or
mov
jo
jge
pop
or
sub
js
or
das
stos
mov
bound
jg
cmp
xlat
push
and
cmp
mov
xchg
mov
lods
mov
mov
ds
movsb
mov
ljmp
pop
jmp
cmc
stos
mov
shr
mov
lods
pop
mov
mov
pop
push
jp
hlt
jns
aam
lret
pop
insb
xchg
popf
lahf
inc
out
jb
fisttps
cmp
mov
xchg
xor
fimuls
mov
cmp
jge
jl
mov
insb
scas
pop
lods
inc
push
jge
add
cs
dec
push
dec
pop
std
nop
pop
std
mov
xor
mov
rcrl
xchg
jmp
in
sub
xchg
lret
mov
ja
lods
xorl
mov
dec
icebp
fnstenv
jb
std
xchg
push
lock
sub
sti
je
insl
test
stc
in
pop
mov
mov
mov
inc
enter
pop
dec
fsubrs
jne
xchg
pop
push
mov
pop
idiv
pop
test
insb
jo
dec
jo
pop
sub
mov
mov
arpl
out
lret
dec
inc
xor
js
aad
sar
test
shll
sbb
ja
or
jne
jl
sub
pushw
sbb
clc
mov
or
in
push
inc
scas
inc
cmp
jmp
pop
adc
mov
pop
in
dec
xor
lcall
and
pop
dec
push
sub
iret
inc
mov
cltd
jo
jb
arpl
in
dec
fs
push
sti
ss
ja
lds
imul
testb
insb
mov
ljmp
push
xchg
shlb
jne
sbb
push
movsl
and
mov
cld
or
sub
shlb
lret
cmp
movsb
int
jae
rolb
inc
or
add
test
outsl
xchg
inc
or
out
scas
outsl
jl
mov
and
push
mov
ss
jmp
mov
test
xor
cmp
xchg
shll
lock
sub
repz
cwtl
je
sub
or
xchg
push
jmp
jl
dec
pop
dec
sbb
push
stc
ficomps
mov
cli
sbb
sub
xor
push
and
jg
xchg
sub
mov
mov
mov
gs
in
fstpl
mov
mov
cmp
mov
fistpl
in
jbe
xor
pop
and
xor
dec
and
jae
lea
sbb
jnp
mov
mov
cli
xor
xlat
test
pop
xchg
or
rorl
ret
inc
jne
jae
dec
jmp
pusha
loop
mov
xchg
dec
push
push
lahf
push
jmp
movsb
aad
ror
into
jp
pop
dec
ljmp
push
ret
pop
mov
movsl
fmull
cmp
cmp
jle
loop
out
mov
mov
sub
aas
jg
int3
test
mov
pop
out
std
adc
and
bound
hlt
fisubl
lcall
insl
sub
daa
pop
lcall
sub
outsb
fisubl
adc
jae
aad
jge
jns
xchg
inc
xor
imul
les
in
push
adc
add
xor
aad
mov
sub
xchg
ljmp
push
or
test
ljmp
pushf
lret
jo
repnz
popf
adc
pop
mov
es
subb
in
push
or
mov
stc
add
mov
pop
sbb
loope
jne
and
jbe,pn
adc
cmpsl
ljmp
cmpsl
ljmp
sub
jns
lret
adc
sub
jae
mov
push
inc
mov
lcall
jmp
or
xchg
stos
daa
fs
adcb
xchg
pop
pop
cmp
cs
fldcw
mov
dec
jns
mov
cmc
leave
imul
push
xor
hlt
mov
or
dec
xchg
xchg
mov
int3
mov
adc
and
add
dec
sbb
sub
xor
inc
push
mov
and
dec
adcb
and
scas
cmc
adc
dec
addr16
cmp
sbb
cmpb
jns
mov
and
ja
xor
push
mov
jp
pushf
bound
jb
lcall
and
imul
sbb
mulb
aas
dec
pop
popa
test
or
cwtl
sub
push
test
inc
clc
dec
sub
je
dec
sub
sub
mov
loop
insb
xchg
dec
push
cwtl
nop
dec
into
pop
push
movsl
xchg
and
push
js
je
mov
push
andl
imul
jecxz
xor
popf
mov
sub
sub
fcom
out
popf
movsb
jp
push
xchg
fsts
push
cmp
cmpsl
fucom
cltd
scas
icebp
ror
and
mov
in
adc
or
fcomip
dec
mov
daa
mov
push
adc
or
repnz
lcall
push
std
jp
xchg
pop
gs
push
mov
jecxz
shr
push
filds
in
je
pop
sarb
adc
inc
in
add
mov
enter
pushf
add
push
inc
and
xchg
jg
dec
push
dec
loope
pushl
ficomps
lahf
movsl
fcoml
aad
xor
inc
icebp
loop
sbb
inc
pop
and
ret
js
pop
mov
das
lods
lcall
shrb
sbb
scas
icebp
mov
jne
imul
jne
out
inc
out
test
shlb
rolb
shrl
inc
dec
pop
scas
inc
rcl
movsb
stos
test
hlt
jmp
stos
xor
jp
pop
shrl
mov
daa
and
jmp
fstps
nop
nop
and
jbe
push
inc
jae
jae
dec
dec
scas
mov
lods
push
push
pop
insb
in
movsb
xor
pop
xchg
insb
shl
outsb
outsb
imul
xchg
push
inc
repnz
aas
bnd
cs
imul
imul
xor
jnp
inc
dec
hlt
mov
push
fdiv
pop
das
mov
mov
pop
mov
mov
add
jae
adc
pop
adc
xchg
xor
sbb
and
outsl
hlt
xchg
or
sub
xor
shr
adc
mov
in
mov
ja
je
movsb
and
or
jns
push
inc
add
addr16
push
pop
out
sbb
js
test
dec
dec
sub
add
addb
das
push
nop
adc
mov
or
push
addr16
bound
pusha
arpl
mov
lock
faddl
pop
insb
dec
mov
xor
es
lock
shlb
cmpsl
shll
mov
call
bound
jne
push
cmp
call
mov
jo
cmp
cmp
cmp
xchg
sub
test
push
mov
pop
repnz
mov
scas
cmp
daa
bound
sub
inc
adc
jecxz
adc
cmp
ja
jo
and
insl
stos
imulb
jo
popf
cmp
cs
insb
xor
mov
pop
add
sbb
shll
mov
push
and
jne
dec
jp
and
mul
daa
fnstcw
sbb
jae
jg
inc
mov
fwait
mov
xor
int
repz
cs
inc
sub
jne
and
sbb
dec
shlb
mov
inc
lret
sbb
repz
jg
sub
or
and
scas
pop
aas
mov
insl
sub
sub
push
mov
call
mov
sub
call
pop
add
xor
mov
or
test
sbb
sub
pop
stos
imul
push
dec
mov
mov
insl
inc
xor
in
into
in
lods
adc
mov
lods
xor
push
dec
pop
test
mov
push
call
std
fnsave
sbb
movb
or
push
add
aas
pop
mov
jne
adc
lock
add
add
sbb
sbb
inc
mov
pop
mov
or
aaa
pushf
adc
add
xor
add
add
xor
add
fucomip
add
iret
popa
in
xchg
or
enter
inc
mov
adc
jo
inc
or
sbb
in
mov
push
add
sbb
add
pop
adc
and
push
add
push
and
enter
sub
dec
or
testb
push
nop
add
add
or
bound
sbb
ja
xor
or
roll
sbb
incl
or
pusha
cmpb
xor
cmpsb
fbld
or
lahf
loopne
addb
sbb
fisubrl
xor
lds
or
jb
and
mov
in
call
nop
sub
or
pop
lret
cmp
pop
cmp
and
jo
fcoms
fsubp
stc
sbb
jle
xchg
adc
cmp
add
mov
dec
or
or
or
push
dec
cmp
or
cltd
pop
adc
mov
dec
add
sbb
cmp
inc
inc
sub
xchg
push
sbb
push
or
xor
cltd
jl
dec
sbb
out
mov
jo
or
jb
sub
xor
or
xor
cmpl
dec
dec
xchg
mov
adc
nop
movsb
cmpsb
jo
cmpsl
sub
enter
pop
dec
or
and
sub
mov
adc
sub
aam
fs
xchg
xor
sbb
mov
adc
and
dec
and
or
je
adc
js
xchg
adc
push
in
adc
loopne
and
xchg
or
aam
or
mov
dec
mov
inc
adc
push
dec
pushf
xchg
pop
and
adc
add
lock
clc
jmp
lcall
or
add
xor
daa
inc
add
push
stc
dec
pop
shlb
inc
adc
xlat
sub
test
test
in
sbb
adc
inc
sub
mov
cmp
and
inc
and
xor
mov
mov
or
add
xchg
jns
adc
cmp
nop
cmp
xchg
pop
add
lret
js
mov
adc
scas
dec
orb
out
xor
xlat
adc
and
push
cmp
pop
adc
xor
cwtl
or
icebp
push
adc
arpl
lods
fdiv
test
data16
cmp
pop
adc
fcoml
jns
int3
and
dec
mov
inc
ljmp
xchg
es
add
cld
test
xor
fmull
stc
mov
sub
mov
fdivs
or
xor
popa
inc
or
fimull
cli
cwtl
xor
cmp
xor
sub
mov
sub
bound
nop
and
dec
popa
test
or
arpl
mov
or
icebp
nop/reserved
inc
insb
dec
and
dec
dec
and
mov
in
and
mov
or
sub
sub
and
push
pop
fadd
or
dec
cmp
or
loopne
mov
or
and
jmp
in
inc
movsl
mov
pop
or
arpl
and
inc
inc
inc
add
adc
or
cmp
sbb
inc
dec
adcl
or
clc
dec
lods
fsubl
and
cmp
imul
mov
sbb
xchg
or
rcrb
inc
dec
mov
xor
pop
subl
xchg
xor
or
sub
inc
dec
mov
xor
pop
mov
adc
lods
or
pop
mov
pop
push
fcompl
or
test
and
inc
rorb
aaa
pop
rclb
sub
pop
mov
sub
test
pop
mov
push
pop
mov
adc
jo
inc
jl
mov
inc
fmul
push
or
and
sub
pop
mov
or
push
sub
inc
add
pop
notb
les
pop
xor
das
mov
cmp
rcrl
lods
pop
cmp
push
inc
loop
sub
fsubl
sub
inc
rcrb
pop
adc
add
rcrb
add
mov
adc
push
adc
jo
or
pop
test
cltd
or
dec
dec
inc
mov
dec
adcb
adc
les
dec
xor
cltd
or
adc
pushf
sub
js
fwait
sub
or
repz
adc
cld
ficoml
lock
lock
mov
or
mov
les
andb
enter
test
push
push
jo
cwtl
or
dec
jecxz
int3
adc
or
mov
cmp
adc
and
or
dec
in
fimuls
loopne
sbb
stos
or
lock
or
or
and
inc
and
mov
sub
or
inc
cmp
pop
push
xor
and
mov
pusha
or
fnsave
mov
js
mov
or
or
xchg
or
push
and
stc
and
push
sbb
jl
addr16
shlb
mov
adc
or
inc
add
mov
out
loop
fs
mov
push
mov
call
pop
and
fadd
je
or
adc
ret
lods
or
inc
stos
or
nop
xor
insb
movsb
js
mov
or
fisttpl
and
js
fwait
call
int
sahf
sarb
xor
mov
lds
cli
data16
and
and
and
sbb
sbb
adc
or
add
cld
loopne
hlt
xchg
call
enter
shlb
mov
inc
lods
test
movsb
adc
xchg
nop
and
inc
insb
mov
and
dec
cmp
xor
sub
sub
mov
add
add
mov
add
adc
dec
mov
lds
xor
js
ret
lock
decl
mov
xchg
inc
inc
cli
sub
lods
cwtl
pop
and
sub
add
mov
enter
cli
or
pushf
or
push
and
punpcklwd
adc
add
xchg
cwtl
push
sub
adc
leave
sbb
in
int3
into
mov
rorl
and
add
lods
lds
pop
std
and
pop
sbb
addl
xchg
xlat
xchg
inc
push
pop
add
sar
mov
adc
pusha
cmp
cmpsb
iret
lcall
dec
pop
js
loopne
loopne
mov
or
mov
mov
cmp
jl
rcr
fdivrp
add
push
inc
mov
int3
repnz
test
andl
stos
clc
jne
pavgw
cli
sub
aam
imul
loope
dec
jp
iret
inc
gs
movl
mov
inc
or
addl
in
xchg
cmp
or
cmp
pop
cmp
sahf
xchg
cmp
lock
add
pop
enter
pop
mov
xchg
clc
pop
repz
mov
subb
leave
fwait
xchg
and
les
int3
add
add
add
jno
or
mov
loopne
cmp
fisttps
xchg
outsb
adc
shrl
mov
shl
add
mov
inc
sbb
lods
lds
cmpsl
out
add
mov
insb
scas
add
jmp
xor
in
xchg
mov
std
into
popa
add
loopne
dec
pop
add
dec
les
clc
xchg
lock
pop
cmp
int
jecxz
scas
loopne
addr16
lods
push
mov
fnstsw
and
aas
loop
cmpl
popa
mov
inc
push
pop
sarl
push
jl
mov
das
add
adc
xchg
ljmp
lods
mov
inc
add
fstl
arpl
int3
add
push
ja
call
add
sbb
and
lods
cmp
mov
cmp
add
xlat
cmp
mov
add
mov
jecxz
cmpsb
add
movb
jne
fildl
cmp
jno
shlb
loopne
out
add
pop
cmp
push
fisubl
xor
push
push
lahf
inc
pop
mov
adc
xor
dec
push
scas
into
imul
rcr
jge
call
out
pop
push
xchg
cmp
add
and
dec
dec
bound
add
adc
pop
ficomps
fstl
cmpsb
fmuls
and
push
and
dec
pop
in
cld
inc
xchg
mov
or
xchg
repz
add
xor
mov
xor
das
in
ja
pushf
imul
rorl
push
das
or
insb
mov
fsubrl
aas
or
gs
stos
test
movsl
sbb
imul
arpl
icebp
sbb
inc
jae
fs
cmp
leave
insb
push
adc
xor
xchg
sub
sbb
in
jne
mov
add
sahf
xor
xchg
pop
ss
add
push
cmp
push
add
sub
les
cmp
sub
inc
dec
lods
rorb
mov
inc
lcall
pop
inc
dec
mov
adc
and
dec
add
dec
rclb
cwtl
mov
dec
dec
ss
sbb
test
push
and
nop
mov
dec
lret
and
inc
cld
or
or
inc
adc
outsb
dec
jle
mov
mov
rclb
loop
repnz
adc
sbb
mov
xchg
dec
test
mov
enter
mov
adc
dec
mov
or
and
pop
loop
pusha
jp
mov
pushf
and
dec
xchg
loopne
cld
and
inc
es
mov
jbe
orb
cmpsb
and
in
adc
and
add
dec
xor
push
mov
xchg
and
inc
testb
dec
sbb
push
dec
fs
jb
addb
les
shlb
dec
lock
dec
adc
and
inc
cmp
mov
pusha
and
dec
jle
xchg
and
adc
and
inc
add
sub
nop
popw
push
sbbb
xchg
or
add
je
mov
dec
or
inc
add
mov
adc
and
dec
push
movsb
jo
fstpl
push
push
push
pushf
subl
push
sbb
pop
xor
cmp
mov
imul
mov
jmp
mov
cmp
data16
iret
outsl
je
push
fdivs
add
test
fs
cmp
imul
enter
push
jns
mov
fs
outsl
xlat
out
sbb
push
inc
ljmp
outsl
popa
fs
imul
jno
push
pop
inc
std
mov
and
mov
jmp
and
jecxz
push
addl
xor
xchg
xchg
dec
jo
outsb
movsl
adc
inc
jne
jne
es
adc
outsl
add
jo
and
sbb
outsb
ljmp
ficomps
pop
push
pop
nop
add
add
test
dec
bound
loop
inc
nop
xor
js
filds
push
imul
add
gs
fs
push
aad
inc
and
cltd
sub
outsb
and
outsl
push
jbe
sub
mov
xchg
push
mov
std
xchg
outsb
data16
inc
jae
icebp
outsb
inc
xchg
jmp
xor
nop
push
xchg
es
sub
cmpsb
fsts
cwtl
mov
clc
and
fldt
jp
mov
jne
jo
and
adc
jne
rcrb
loop
push
loope
xchg
inc
push
add
int
sbb
sub
lods
add
push
or
es
mov
sbb
insb
aad
xor
cmp
pushf
inc
imul
insl
les
popa
enter
adc
cmp
fiadds
pop
icebp
cmp
inc
push
cmpb
insl
adc
and
jo
lds
and
enter
les
cmpxchg
ds
xor
es
test
test
cltd
jo
push
outsl
lods
mov
test
cli
jae
mov
lods
jmp
xor
dec
jo
movsl
dec
sbb
aam
add
inc
mov
aaa
movl
lret
sub
lods
push
mov
xor
or
ljmp
sti
and
shll
mov
adc
clc
xchg
sti
stos
jo
pop
push
and
jbe
xor
insl
int
jnp
out
into
out
push
add
add
aad
sbb
adc
inc
jecxz
imul
mov
xor
push
jle
jne
xchg
push
jne
scas
and
and
inc
and
gs
into
inc
dec
ljmp
dec
inc
in
addr16
inc
push
or
inc
ret
mov
xor
imul
cmp
jno
xor
pop
jo
adc
data16
bound
divb
lods
pop
mov
xchg
push
pop
mov
test
xor
add
loope
insl
mov
sbb
es
xchg
imul
mov
adc
lahf
mov
dec
add
les
jne
sub
inc
or
cltd
das
push
mov
sub
mov
mov
push
rclb
in
xchg
ja
jno
sub
in
and
jbe
rep
xor
sub
int
sbb
mov
js
repnz
mov
ja
dec
sbb
xchg
jnp
call
js
add
jne
inc
xchg
dec
dec
js
inc
inc
fs
cmpsl
rorb
ret
inc
and
cs
and
push
ljmp
xchg
inc
sub
fisubs
subl
and
orl
pop
mov
push
outsl
pop
sub
push
xchg
add
insb
inc
out
scas
cmp
sbb
shrl
or
arpl
data16
sub
mov
inc
xor
inc
pop
ljmp
into
std
sbb
inc
lods
sbb
mov
dec
or
cmpsl
mov
and
nop
aaa
dec
jo
xchg
inc
add
mov
adc
pop
pop
movsb
in
push
ss
mov
push
pop
test
cmp
and
push
inc
cli
sbb
adcb
and
repz
cwtl
in
data16
bound
push
aaa
inc
xchg
push
data16
clc
mov
and
data16
imul
mov
xor
sub
test
sbb
jbe
sbb
dec
aaa
xor
and
scas
orl
inc
and
js
push
mov
subl
push
outsb
dec
cmc
jne
push
jl
pop
fs
fcoml
loop
pusha
pop
mov
lahf
stos
mov
jne
cmpsb
inc
mov
dec
lea
adc
adc
xchg
mov
push
dec
lods
dec
cmp
add
add
loopne
popa
add
or
bswap
sub
inc
fsts
pop
jmp
mov
sub
cmp
inc
jp
jl
jle
jle
jle
jle
jle
sbb
xor
popf
pop
sbb
int3
lahf
fistps
jmp
xchg
xor
push
addr16
sub
ds
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
loope
ss
adc
sbb
and
xor
cmp
ds
inc
stc
dec
stc
push
stc
pop
stc
pop
stc
gs
insb
stc
jb
jns
jg
xchg
mov
xchg
stc
cltd
stc
mov
stc
mov
stc
aad
fdivrp
out
in
stc
repz
stc
sti
xorl
adc
sbb
and
xor
jmp
cmp
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
pop
cmp
daa
or
xchg
cmpsl
sub
xor
cmp
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
loope
cmp
leave
adc
and
sub
xor
aas
add
aas
inc
aas
dec
aas
push
aas
pop
aas
pusha
aas
mov
jae
jp
cmpb
aas
lea
xchg
aas
lcall
aas
mov
aas
sarb
loopne
in
jmp
cmc
aas
cli
push
or
adc
mov
iret
cvtps2pi
nop
aas
inc
aas
inc
aas
dec
aas
push
aas
pop
aas
popa
aas
addr16
jnp
cmpl
xchg
aas
fwait
aas
mov
aas
mov
mov
aas
iret
aas
aas
fdivrl
jecxz
jmp
aas
std
push
add
or
mov
iret
sbb
xor
aaa
iret
ds
inc
iret
dec
iret
push
iret
pop
iret
pop
iret
gs
imul
iret
js
jg
test
mov
xchg
iret
lcall
iret
ret
iret
iret
iret
fcmovne
out
repz
inc
or
xchg
and
inc
dec
dec
push
iret
pop
iret
arpl
imul
iret
jnp
or
iret
xchg
iret
fwait
iret
mov
iret
mov
iret
fmulp
in
jmp
icebp
iret
clc
iret
inc
add
mov
and
repz
aas
repz
repz
repz
repz
repz
repz
repz
jg
mov
xchg
repz
repz
repz
repz
repz
in
repnz
testl
mov
and
xor
ud1
inc
iret
push
iret
pop
iret
arpl
push
jo
ja
jge
test
mov
xchg
iret
xchg
iret
sahf
iret
movsb
iret
stos
iret
mov
mov
iret
lret
iret
ror
fmul
in
in
iret
repnz
cli
ret
add
or
and
sub
xor
cmp
inc
repz
repz
repz
repz
rep
repz
jnp
xor
repz
repz
repz
repz
repz
loopne
in
jmp
hlt
testl
add
out
pop
or
cmp
cmp
cmp
xor
cld
push
cld
pop
cld
pop
cld
push
cld
cmp
cld
nop
cld
sahf
cld
mov
cld
mov
cld
aam
loope
out
out
cld
hlt
cld
sti
cld
add
xor
cmp
cmp
cmp
cmp
cmp
inc
aas
inc
aas
push
aas
pop
aas
gs
imul
aas
js
xchg
mov
xchg
aas
mov
mov
aas
repz
decb
pop
xor
pop
add
pop
loope
jmp
lcall
stc
out
stc
idiv
add
pop
and
dec
push
mov
xchg
iret
sahf
iret
mov
iret
repz
sti
ret
push
xor
xchg
das
mov
arpl
outsb
jecxz
repz
add
jnp
xchg
jp
pop
loop
dec
je
sub
xor
fs
cmp
xchg
inc
aad
jmp
cmc
cmpsl
std
lds
push
and
jae
movsl
xor
sarb
in
call
jno
les
cmp
je
jbe
js
dec
je
iret
xchg
iret
stos
iret
mov
mov
iret
lret
iret
aam
fcmove
loop
cld
inc
cmp
leave
pop
xor
ja
push
mov
jle
jle
jle
sbb
cmp
popf
sub
sbbl
dec
repz
repz
rep
repz
jl
push
inc
push
ret
stc
sar
fdivs
ljmp
adc
sbb
ds
push
aas
mov
es
pusha
push
ds
dec
sub
cmpsl
xchg
cmc
out
loope
aas
cs
out
outsl
xchg
adc
dec
mov
repnz
inc
push
jb
je
jbe
js
jp
jl
jle
jle
sbb
xor
mov
xor
data16
call
adc
ss
cmp
cmp
lahf
aas
mov
sti
push
sbb
inc
dec
popa
mov
iret
icebp
psubw
sub
dec
das
mov
daa
idiv
roll
adc
inc
and
cmp
leave
or
cmp
scas
xchg
xchg
pop
mov
lahf
xlat
lahf
out
xchg
adc
push
pop
iret
imul
cltd
iret
leave
lock
cmp
xchg
stc
movsl
subb
jecxz
mov
jmp
or
mov
lock
sbb
pop
loope
jmp
lcall
mov
xchg
push
add
sbb
mov
pop
dec
xchg
out
out
out
in
shrl
in
inc
lock
hlt
push
nop
pop
jle
jle
dec
mov
call
adc
sbb
xor
jmp
outsb
xor
xchg
cld
lods
cld
mov
sar
in
stc
icebp
clc
or
cmp
cmp
and
outsl
push
cs
cld
cld
loop
in
lcall
sahf
add
lahf
pop
pop
pop
lahf
push
lahf
xchg
fbld
lahf
in
incb
daa
inc
sub
aaa
xchg
push
pusha
out
out
out
in
mov
fdivrp
repz
or
ss
push
inc
out
stc
mov
vpminub
icebp
stc
clc
clc
sub
dec
inc
push
les
orb
dec
stos
inc
scas
aam
jmp
sub
xchg
mov
cld
in
cli
cld
sete
or
xchg
lahf
mov
and
push
or
int3
stc
loope
adc
or
and
mov
pop
pcmpeqb
sahf
iret
mov
leave
ret
add
push
inc
subb
xor
lcall
inc
jl
jle
jle
jle
pop
stc
les
ds
inc
jb
aas
and
mov
mov
mov
repnz
xchg
sti
and
cmp
pop
cmp
push
adc
inc
dec
dec
lahf
mov
cmpb
aas
lock
mov
mov
iret
out
out
dec
hlt
xorl
jo
fisubl
and
lock
hlt
clc
pushf
pushf
bound
stos
lahf
into
xchg
aad
adc
push
pop
xchg
scas
es
popf
mov
roll
push
inc
xor
in
xchg
loopne
jle
test
call
daa
mov
xchg
movsb
not
xchg
pop
cmp
xchg
or
jp
jl
jle
jle
pop
or
jae
test
out
ljmp
pushf
orl
daa
mov
pushf
andb
dec
daa
pop
inc
je
ficomps
sbbb
push
ds
dec
inc
mov
pop
dec
jp
or
iret
lods
iret
mov
icebp
ret
pop
aas
setae
push
test
mov
stc
loop
adc
pusha
inc
cmp
and
pop
cmpsb
xor
mov
cld
out
cld
and
xor
cmp
cmp
test
pushf
mulb
inc
xor
lea
fsubr
in
cli
popa
jle
leave
popa
shll
xchg
loope
jmp
clc
sbb
cmp
push
pop
jns
es
push
pop
arpl
xchg
dec
jmp
jmp
pop
ss
daa
dec
xchg
cmpsl
mov
movsb
out
in
xchg
xor
cltd
leave
shl
inc
cmp
je
jbe
js
jp
jl
jle
push
or
adc
mov
stos
push
ret
arpl
jle
lods
repz
repz
add
push
in
call
pop
xchg
xor
jle
dec
icebp
or
daa
shlb
xchg
adc
sbb
call
imul
test
cld
or
cmp
inc
test
je
fisubs
jle
jle
es
sbb
mov
iret
in
sti
ret
adc
sub
outsb
ds
aas
mov
lret
and
jo
loopne
xchg
cmp
wrmsr
es
cmp
adc
dec
mov
push
fisubs
fmull
and
cmp
jbe
test
xlat
xor
enter
pop
sub
sahf
dec
lahf
pop
pop
jno
xchg
dec
ds
iret
clc
ret
daa
xor
xchg
inc
mov
jmp
mov
dec
mov
inc
sub
mov
mov
bnd
dec
movsl
std
mov
fyl2xp1
jecxz
stc
clc
adc
jge
lods
and
enter
in
lret
stc
add
ss
leave
mov
and
xchg
hlt
sahf
mov
pop
lahf
rcll
aaa
and
call
xchg
hlt
mov
sar
cld
pop
mov
adc
bound
orl
mov
call
adc
push
orl
ret
cld
dec
leave
psadbw
ret
push
cmp
mov
pop
inc
dec
cwtl
bswap
iret
hlt
daa
test
daa
cmp
outsb
jle
xchg
loop
js
jle
jle
sbb
cmp
popf
ss
adcb
sti
cmpl
repz
jb
je
dec
xor
pushf
cmpsb
scas
sbb
popf
cmp
push
xchg
pop
mov
test
sbb
testl
cmp
push
xor
push
mov
aas
aad
in
push
add
sbb
dec
fstps
fs
clc
movsb
cld
mov
cmp
and
dec
cmp
addr16
aas
jmp
or
sbb
mov
sarl
xor
push
je
pop
leave
cli
and
pop
push
xor
dec
iret
push
cvtps2pd
daa
dec
adc
inc
rcll
jnp
and
aaa
jb
je
pop
pop
mov
lret
xchg
leave
pop
fidivrs
pop
and
mov
pusha
mov
and
aas
movsb
adcb
daa
cmp
in
call
call
and
push
inc
pop
push
push
inc
mov
mov
pop
or
lea
jp
std
push
daa
aas
js
xchg
and
mov
aam
nop
inc
in
call
addr16
adc
xor
sahf
jp
insl
mov
lahf
push
movsl
xor
je
dec
jle
add
mov
loop
shll
je
jbe
js
jp
jl
sbb
xor
fsubs
loopne
imul
push
daa
pop
inc
insl
gs
xchg
clc
adc
cmp
push
cmp
cmp
mov
popf
adc
cwtl
into
mov
iret
hlt
paddb
cmp
jo
jp
sbb
cmp
sahf
cli
pop
adc
and
lock
mov
jecxz
adc
pushf
jno
jae
jne
ja
pop
fwait
cmpb
int3
push
cmp
jo
sahf
lcall
nop
lock
add
and
cmp
add
xor
sub
cmp
repnz
add
sbb
mov
pop
lahf
fs
xor
sbb
gs
sahf
scas
test
sbb
sbbb
jl
dec
add
decl
cmp
add
or
test
dec
das
imul
or
push
aas
fimull
xor
popa
inc
cmpb
xor
mov
mov
rclb
pusha
mov
xchg
xor
rcrb
mov
add
cmpb
jecxz
pusha
dec
add
repnz
pop
pushf
jl
pop
loop
sbb
arpl
cmpsl
pop
lods
mov
mov
sbb
nop
lahf
ret
xchg
loopne
cmp
aas
and
inc
sbb
popa
ret
ja
mov
dec
mov
xor
push
out
sub
cmp
hlt
ja
xchg
sbb
ret
xor
in
pop
jle
pop
or
inc
cmp
daa
xchg
xchg
mov
mov
adc
push
addr16
test
lcall
repz
add
adc
and
cmp
hlt
clc
imul
cld
xchg
cld
movsb
cld
mov
dec
push
push
xor
dec
or
or
push
das
call
pop
mov
jle
push
les
repnz
je
jbe
js
jp
jl
jle
jle
jle
dec
mov
cmpsb
orb
in
call
and
or
idivl
adc
cmp
cmpl
jl
dec
cltd
orb
mov
push
xor
mov
dec
pop
lods
iret
mov
lds
dec
ds
fsubs
cmp
xchg
fstps
icebp
mov
adc
pop
xchg
ds
je
fdivl
inc
daa
push
inc
mov
adc
mov
inc
push
add
push
xchg
jb
dec
js
jp
jl
jle
jle
jle
jle
dec
rorl
xor
incl
cs
sti
dec
cmp
sub
pop
imul
lahf
sahf
xchg
lods
adcb
mov
jle
pop
add
adc
xor
push
pushf
pop
imul
iret
iret
xchg
iret
mov
pop
lock
rorb
or
sbb
les
loope
xor
pop
cld
jne
movsb
pop
test
mov
dec
mov
leave
jmp
pop
xor
js,pn
jp
dec
dec
push
aas
popa
aas
outsb
aas
cmpb
and
sub
pop
adc
loope
ss
cmp
fldl2t
loop
insb
sub
mov
dec
cmp
es
lahf
mov
notb
jl
call
sahf
dec
stos
adc
pop
das
adc
ljmp
clc
mov
lods
aas
out
movsl
add
xchg
mov
das
sahf
add
loopne
outsb
call
fcomps
mov
shll
adc
fcmove
out
cs
mov
or
sub
cmp
and
js
xchg
xchg
mov
mov
ret
fsubr
jle
inc
icebp
and
pop
js
les
js
jbe
js
sbb
xor
xchg
inc
daa
xchg
or
cmp
xor
in
call
pop
pop
rcrl
in
dec
cmp
rorb
outsb
loope
sahf
and
pop
cmp
je
test
cmp
cwtl
cmp
sti
popa
loop
leave
shll
push
or
cmpsl
test
and
xor
das
mov
in
xor
pop
dec
orb
imul
mov
ret
incb
sbb
je
add
xor
xchg
pop
push
movsb
fsub
xor
xchg
cli
sbb
popa
lahf
mov
popf
lock
cmp
inc
sub
js
jp
jl
dec
fxch
jp
call
jge
pop
lcall
pop
adc
sub
cmp
xor
ret
pop
shlb
jle,pt
jle
jle
jle
jle
jle
jle
jle
jle
dec
ffree
ds
je
imul
xchg
lock
cmp
mov
ficoml
mov
inc
sub
addr16
xchg
mov
in
call
adcb
jle
dec
out
or
push
pop
out
push
pop
dec
jbe
xchg
xchg
lods
jmp
in
push
push
ret
xor
test
cmp
sbb
sub
cmp
addr16
aas
mov
sti
test
es
jp
mov
push
nop
das
mov
dec
mov
cli
icebp
add
mov
and
cmp
pop
lds
shl
leave
std
adcl
xchg
dec
jbe
adc
mov
jle
dec
adc
push
insl
mov
sbbl
loop
add
hlt
daa
sbb
shll
mov
cmp
pop
push
insb
cmp
xor
andl
xchg
in
inc
cmp
push
cmp
mov
push
loope
dec
sub
icebp
lods
cmp
and
mov
pop
or
pop
add
xchg
mov
push
pop
push
iret
xchg
sarl
jb
dec
and
cmp
orl
leave
int
sub
ret
imul
mov
loop
sarl
push
pop
xor
ret
js
dec
rorl
es
xchg
ss
xor
fwait
hlt
lret
cld
ljmp
inc
cmp
mov
cmp
adc
xchg
shl
stc
loop
repz
push
xor
pop
loope
lret
jmp
add
adc
iret
pop
jb
clc
xchg
adc
jp
jl
jle
jle
dec
faddp
orb
sub
jmp
jp
mov
sahf
dec
xor
popa
mov
push
mov
shl
in
loopne
cmp
cmp
and
movsb
andl
scas
cld
mov
push
xor
sahf
daa
inc
popa
adc
cmp
decb
adc
leave
loop
xchg
dec
xor
daa
inc
inc
in
imul
jle
jle
jle
jle
dec
add
enter
jns
mov
and
cs
or
movsl
popa
mov
cld
scas
popf
pop
mov
out
out
loope
aas
inc
sub
ret
xchg
jp
jl
jle
jle
jle
jle
jle
xchg
and
or
push
or
push
dec
push
jl
lods
mov
iret
ljmp
add
push
mov
pop
lahf
cwtl
lahf
mov
out
xchg
xor
daa
es
inc
addr16
xchg
inc
cmp
dec
leave
push
xor
js
adcb
ret
rolb
lods
loope
cmp
mov
ficompl
ss
dec
cmp
ds
cmp
aas
or
adc
dec
loop
repnz
mov
leave
and
push
movsl
pop
in
xchg
js
inc
add
push
daa
pop
add
outsl
shlb
dec
push
hlt
stc
add
popa
mov
sub
and
stc
clc
clc
adc
dec
daa
orb
adc
dec
sub
js
jp
jl
dec
lahf
andl
repnz
fsubs
sbb
cmp
call
pop
lahf
fcomps
or
out
call
inc
cmp
test
add
das
mov
mov
mov
mov
xchg
dec
mov
jecxz
repz
pop
push
popf
and
mov
cwtl
mov
xor
adcl
test
mov
loope
pop
dec
ss
xchg
pusha
mov
mov
cld
sub
add
bound
stos
mov
fnstsw
jle
dec
adc
dec
adc
mov
lahf
jle
jle
dec
out
adc
adc
push
loope
jmp
pushf
cmp
aas
mov
aas
std
sub
mov
lahf
test
dec
lock
xor
hlt
aam
add
cmp
loope
pop
js
xchg
mov
test
cmp
push
das
dec
dec
mov
jge
xchg
and
sarb
out
dec
dec
lods
loopne
cld
jp
jl
dec
insb
adcl
fstps
add
xor
xor
in
call
or
push
adcl
leave
add
adc
rclb
jo
jl
jle
jle
jle
jle
pop
test
mov
xor
or
dec
pop
stos
dec
imul
shrl
or
dec
push
and
xchg
daa
lods
rorb
pop
jbe
ss
imul
dec
popa
push
jne
xchg
ds
sub
pop
xchg
xchg
hlt
cmp
daa
dec
test
mov
sub
inc
fldz
jecxz
cmp
jl
cmp
or
cmp
es
xchg
stos
mov
iret
leave
sbb
xchg
loop
jmp
dec
ljmp
mov
mov
jge
mov
mov
jl
rclb
pop
dec
push
pop
imul
sbb
ljmp
fiadds
test
das
outsb
and
dec
stos
adc
push
or
push
ret
xchg
xorb
and
dec
test
cmp
push
mov
mov
xchg
shll
shl
call
leave
repnz
fnstcw
push
rcrb
idivb
in
sub
loope
cmp
bound
push
aas
xchg
das
lahf
xchg
in
mov
enter
jb
dec
pop
or
fwait
leave
mov
pushf
or
jo
dec
cmp
mov
out
mov
sbb
xchg
dec
andl
insl
sarl
test
mov
push
cwtl
subl
repnz
rol
insb
pop
aas
aad
loopne
jb
dec
or
jp
or
pop
lret
mov
inc
stc
dec
cli
inc
push
push
and
arpl
xchg
leave
cwtl
daa
mulb
push
data16
jle
jle
pop
out
int3
hlt
pusha
pop
add
adc
mov
xor
lahf
imul
cmpl
add
inc
or
xchg
mov
cmc
repnz
fisubrs
sbb
dec
pop
aaa
xor
adc
and
push
sbb
lods
lret
push
xor
fdivl
push
pop
or
cli
sub
movsb
jl
pop
aas
daa
lcall
fdivrs
or
add
test
sarl
push
and
fs
mulb
jbe
dec
dec
ret
ss
pop
xchg
dec
pushf
vmread
iret
aam
call
push
jb
aaa
pusha
daa
jg
add
icebp
cmp
sub
and
jne
jl
mov
xchg
cld
stos
mov
hlt
cld
sbb
or
pusha
dec
lds
mov
mov
les
mov
xor
lock
mov
add
xor
leave
rorl
or
test
not
pusha
inc
xor
xchg
inc
sahf
pop
pop
jae
repnz
dec
lock
or
dec
sub
bound
enter
xchg
xor
in
cmpsb
lock
mov
push
push
push
xchg
jbe
test
push
push
dec
xor
adc
xchg
adc
inc
je
jbe
dec
mov
dec
repz
pop
das
addb
fdivp
push
lock
cmp
rcrb
nop
popf
add
call
xchg
mov
push
test
test
cmp
jns
cmpl
xor
dec
dec
or
icebp
mov
lock
gs
jg
fimuls
test
aas
les
test
and
sub
add
add
enter
sbb
jb
nop
mov
pop
cmp
inc
xor
popa
in
lcall
push
mov
leave
inc
lock
push
jle
jle
pop
andl
bnd
mov
test
inc
pop
mov
mov
in
aaa
and
pop
add
les
sbb
dec
shrb
rcl
jp
dec
shrb
push
add
lds
loopne
xchg
xchg
xchg
mov
aas
imull
arpl
jnp
xchg
cli
mov
sarb
in
lock
dec
xchg
xchg
push
rolb
jo
pop
movsl
addl
fistl
pop
icebp
dec
pusha
jmp
ja
inc
test
mov
stos
fdiv
add
ret
dec
sbb
push
shll
xor
repnz
xchg
stc
adc
imul
and
cmp
je
icebp
scas
push
lds
popf
pop
push
dec
mov
jae
insb
pusha
mov
cltd
cmp
cmpb
rolb
mov
sbb
xchg
lahf
fists
adc
orb
sbb
xor
fidivrl
xchg
pushf
jmp
push
push
insb
iret
mov
sbb
push
bound
sbb
sarl
pop
jle
pop
push
nop
push
mov
push
mov
and
mov
and
enter
pop
adc
adc
sbbl
and
clc
pusha
adc
cmp
mov
adcb
out
in
mov
sahf
sahf
push
jae
lret
cmpsb
pop
cmp
sbb
and
xor
ret
mov
mov
sti
stc
sbb
and
mov
ret
nop
shrb
xchg
pop
ret
jbe
adc
lahf
pop
push
daa
sbb
xor
add
dec
jl
aas
pushf
das
ret
in
in
call
add
jb
je
jbe
js
jp
dec
popl
pop
scas
mov
loopne
cmc
xchg
cld
mov
or
and
in
sbb
add
loopne
inc
cld
dec
mov
outsb
push
lock
popf
xchg
in
call
lahf
loopne
sbb
mov
loope
jmp
imul
jb
je
jbe
pop
inc
or
jo
dec
addr16
jle
pop
rcrb
push
sbb
add
mov
sbbl
lcall
test
fdivp
cmc
xorl
imul
repz
cmp
sbb
ret
dec
jle
jle
pop
sbb
push
repnz
and
cmpl
es
cld
sbb
jb
fildl
sub
mov
push
hlt
pop
mov
and
mov
repnz
xchg
pusha
sbbb
shl
adc
aas
aad
repz
or
rolb
cltd
clc
cmp
or
repz
xchg
pop
dec
pop
ret
jbe
ret
rcl
out
xchg
sbb
xchg
mov
cmp
push
dec
sub
push
loope
imul
jl
and
stc
bnd
xor
xchg
jle
test
dec
cld
cld
add
in
dec
xchg
fs
jle
dec
js
sbb
lahf
roll
mov
jbe
pop
mov
mov
orl
in
call
and
popa
inc
fstpt
in
mov
adc
add
mov
mov
push
shr
shrl
and
add
cmp
or
push
ret
jmp
insb
incl
inc
fsubl
cmp
mov
adc
sarb
fldenv
pop
lahf
incb
imul
xchg
das
cmp
and
clc
push
xchg
push
dec
jg
daa
in
inc
mov
jge
mov
iret
repz
push
push
fidivl
sbb
fisubrs
dec
xor
mov
aas
or
popa
roll
jbe
mov
xchg
pop
cltd
mov
popf
adc
add
shlb
pop
xchg
dec
enter
pop
cmpsl
push
xchg
lret
lock
sub
pop
or
inc
dec
insl
ret
data16
pop
out
mov
xor
jp
dec
sbb
mov
xchg
ficomps
xchg
push
cwtl
xchg
movsl
loopne
cmp
in
call
fwait
loopne
mov
add
cmp
es
pop
dec
mov
jo
je
jbe
ds
cmp
dec
mov
aad
clc
stc
std
jl
cmp
cmp
push
lock
arpl
imul
xchg
inc
lock
test
cmp
call
test
aas
sub
ret
or
pop
mov
mov
jp
pop
ret
leave
insb
xor
ss
jae
ret
imulb
daa
xor
fcoms
mov
es
loop
hlt
dec
pop
fcoml
mov
sub
call
inc
inc
inc
jp
dec
mulb
and
addr16
test
xor
adc
call
pop
lock
lcall
shlb
push
je
dec
test
je
cwtl
adc
js
jp
pop
jmp
cld
or
jbe
pop
dec
sahf
adcb
pop
je
adc
push
mov
xchg
lods
aas
fisttpll
xor
aas
dec
test
add
imul
push
or
in
push
fwait
inc
mov
push
int3
xchg
pop
mov
ret
into
lcall
push
inc
cmp
dec
into
hlt
xchg
or
movsb
comiss
dec
mov
and
pop
pusha
jge
inc
mov
jnp
xchg
adc
push
sub
inc
hlt
add
mov
mov
cmpsb
cld
stos
cld
dec
mov
mulb
lods
test
add
ss
test
das
ret
test
jne
in
fucomi
or
cmp
cs
push
xchg
shl
inc
sub
dec
aam
lock
and
dec
ret
or
cmp
loope
mov
add
cmp
dec
sbb
repnz
pushf
nop
loopne
push
adc
je
dec
cmc
sbbb
icebp
js
das
fadds
popa
xor
add
and
test
add
inc
sbb
push
daa
lret
popa
dec
fists
pop
cmp
sbb
xor
ret
push
push
loop
cmpsl
sbbb
lock
push
cltd
shl
add
dec
cmp
xchg
daa
sbb
outsb
xchg
rcrl
sarb
pop
je
jbe
js
dec
sbb
sbb
bound
ret
pop
dec
pushf
orl
test
repnz
cld
push
cmp
cmp
mov
xchg
out
lahf
mov
addb
push
sub
xor
pop
inc
xchg
mov
xchg
xchg
lock
sbb
cmp
mov
dec
xor
cld
dec
push
leave
push
popa
popaw
stc
addr16
test
int3
mov
mov
dec
in
and
cmp
cmp
in
scas
cmp
fs
insb
xor
mov
ret
and
repz
adc
ret
rcrb
dec
or
lock
lds
pop
out
outsb
lock
repnz
je
js
jl
addb
nop
in
mov
in
call
aaa
mov
or
aas
shrl
or
test
sub
in
xchg
jbe
je
push
mov
dec
mov
scas
mov
mov
cmp
leave
or
pop
push
adc
mov
dec
xor
jp
mov
pop
jle
and
shrl
jmp
xor
cmpsb
test
cld
mov
add
xchg
add
js
push
fcoms
cli
adc
pushw
in
call
jb
das
cwtl
add
cmp
idivl
adc
cmp
dec
jp
push
dec
pop
lcall
popf
dec
push
mov
or
ret
data16
or
fsubr
pop
mov
and
mov
dec
hlt
xchg
jo
dec
aas
mov
push
hlt
clc
imul
xchg
xchg
bnd
mov
in
loopne
das
or
mov
jecxz
testb
or
daa
leave
push
shll
inc
and
dec
adc
sub
xor
or
inc
in
and
add
inc
add
sbb
cmp
cld
je
pop
pop
jg
mov
xor
and
mov
mov
in
popf
xchg
adc
inc
inc
inc
gs
mov
mov
push
adc
and
popf
stc
jmp
xchg
shr
pop
mov
pusha
jns
nop
mov
jo
dec
out
push
adc
in
xor
pop
lea
dec
xor
sahf
out
jo
jb
pop
push
xchg
pop
addb
ss
fcmovnb
inc
and
insb
dec
pop
sbb
stos
xchg
add
or
cmp
iret
push
or
in
mov
cli
mov
or
inc
cs
xlat
stc
ljmp
popa
jle
fldcw
or
inc
pushf
mov
movsl
cmp
dec
mov
mov
jbe
xchg
pop
adc
push
or
mov
cmc
or
jb
adc
dec
jmp
and
mov
push
daa
movsb
pop
and
xor
popf
in
pop
push
dec
outsb
xorb
loope
es
xlat
lret
andb
hlt
sub
pop
call
adc
fcoms
dec
movsl
orb
jle
jle
pop
add
and
les
lcall
or
in
sub
pusha
rcrb
aas
xchg
popf
test
lock
hlt
xlat
clc
call
test
pushf
adc
xor
lods
push
mov
push
jo
push
dec
jle
sbb
ds
mov
fdivl
or
mov
push
or
popf
scas
jl
inc
mov
adcb
jb
xchg
and
jmp
insb
cli
ret
sub
fcoms
es
xor
xchg
sbb
je
dec
test
sarb
loopne
hlt
xchg
in
adc
pushf
mov
cmp
and
or
ds
inc
and
bnd
xchg
rorl
pop
xor
cmp
rcrb
orb
lock
xor
xchg
push
push
in
mov
mov
pop
jge
pusha
mov
xchg
xor
enter
pop
mov
pop
into
or
jns
xor
dec
test
das
push
subl
push
mov
mov
roll
loope
push
sbb
xor
push
test
sbb
cmp
jns
cmp
daa
inc
pop
call
test
ret
dec
mov
adc
call
pop
pop
xor
pop
push
push
in
lock
lahf
ficomps
fmull
pop
cmp
popa
cs
ret
out
jbe
mov
fxch
push
push
test
pop
and
inc
jo
mov
cmp
sub
cli
js
mov
pop
push
push
and
fsubs
xor
dec
mov
mov
push
xchg
es
imul
daa
xor
fcomi
shlb
jbe
mov
fadd
repnz
test
stos
pop
enter
pop
push
or
xchg
daa
jle
push
jl
push
xlat
lock
mov
inc
or
outsl
ret
stc
lock
test
xchg
cmp
xor
or
adc
push
sbb
inc
xor
add
in
je
out
pop
jl
pop
test
mov
pop
jle
dec
xchg
orps
test
imul
dec
loopne
stc
or
pop
cli
test
cmp
mov
sub
push
hlt
and
in
lods
or
decb
mov
fidivrl
dec
cmc
ret
pop
insb
dec
mov
mov
dec
mov
cmpsb
jle
dec
adc
sbb
mov
clc
rclb
andb
push
jne
inc
rclb
dec
outsb
ljmp
ret
hlt
dec
pop
insl
pop
ja
nop
test
pop
add
jmp
and
jl
nop
lock
mov
inc
pop
ret
fs
cwtl
mov
xor
fcomps
push
fstl
je
jg
call
dec
call
mov
lret
test
add
or
cwtl
and
jo
push
cltd
push
add
mov
aaa
fs
or
mov
mov
and
dec
mov
subb
mov
pop
mov
jb
dec
clc
mov
add
cli
ret
pop
add
sbb
adc
cmp
pop
add
sub
loop
cmp
mov
out
leave
mov
fcom
ficoms
icebp
inc
shll
rorb
xor
push
push
dec
sub
sbb
or
cs
enter
movsb
inc
jl
mov
loope
jmp
mov
ss
js
dec
ret
fstpt
daa
cmp
imul
ds
mov
jnp
adc
rcrb
xor
mov
pop
xor
jbe
rclb
push
sbb
rorb
xchg
outsb
push
xor
inc
jbe
jnp
lahf
pop
xor
mov
into
dec
fstpl
sub
pop
loope
shrb
andl
fcomps
sbb
pop
test
jb
pop
insb
mov
pusha
cld
sbb
movsb
xchg
jnp
andb
into
lock
in
popa
cmp
leave
cmp
cmp
addr16
jbe
mov
mov
or
ljmp
sbb
aad
fisubs
repnz
loopne
lods
xchg
fdivl
cwtl
push
mov
inc
adc
in
lahf
add
das
in
dec
mov
repnz
not
pop
mov
add
ljmp
dec
dec
xchg
aad
mov
sbb
mov
and
mov
ret
ss
clc
sbb
sbbb
jle
add
cmp
cmp
or
dec
mov
ret
jle
push
sbb
dec
cmp
test
dec
daa
jl
loop
stc
cwtl
stc
ret
push
enter
inc
mov
lea
cmp
pop
jbe
jg
mov
sbb
cmp
sub
ret
jne
cmp
les
icebp
js
mov
icebp
or
push
mov
mov
lock
mov
or
sbb
aam
loope
test
inc
inc
pop
loope
cmp
mov
loopne
rolb
cmp
and
jg
loopne
imul
ret
orb
pop
xchg
or
pop
rclb
cmp
lcall
dec
inc
fdivrl
repz
xor
cmp
idivb
pop
das
push
lret
mov
call
movsb
sub
or
dec
leave
icebp
loope
roll
fdivrl
xor
shlb
pop
sub
in
bound
loopne
les
sub
loope
push
sub
sbb
hlt
pop
jo
jp
jg
test
popf
fdivrl
ret
loopne
sbb
inc
hlt
fdivrp
or
push
test
sbb
sub
mov
jp
clc
xchg
sub
in
mov
call
call
mov
ret
push
and
pop
call
shll
adc
test
or
js
pop
fld
aam
testl
aaa
je
jno
add
and
jae
mov
xor
add
jo
xor
inc
decb
sbb
or
xor
jns
sub
movsb
test
or
push
test
pop
and
sub
mov
mov
test
sub
jo
mov
push
adc
dec
push
xorl
and
inc
cmp
mov
mov
int3
pop
aam
add
jbe
js
adc
cmp
mov
sahf
add
inc
xchg
dec
ljmp
add
add
sbb
ret
sahf
sub
in
stc
js
pop
adc
adc
pop
add
nop
mov
mov
scas
jg
mov
loope
loop
adc
adc
xchg
sbb
inc
pop
dec
or
popa
popa
movsb
subl
cwtl
pushf
push
adc
mov
xchg
push
adc
adc
pop
mov
dec
mov
ss
push
xchg
std
and
fcomps
call
xor
lock
jle
dec
loope
adc
loopne
addr16
dec
jle
aas
fwait
push
add
fdivrl
jp
pop
cmp
pop
call
push
push
ret
jg
add
and
das
or
pop
pop
sahf
ret
pop
push
adc
in
push
and
pop
js
dec
mov
add
add
mov
push
test
popa
push
cmp
rcrb
add
push
sub
sub
les
lock
notl
add
or
cmp
inc
pop
in
rcll
bnd
xchg
lcall
push
fistpll
popf
scas
and
inc
dec
dec
fs
je
pop
sahf
mov
lods
xchg
popa
push
shlb
ficoml
cmpsb
push
fmuls
cmp
rcr
xor
aam
inc
mov
mov
xor
test
imul
ja
ret
jle
dec
xchg
repnz
iret
xchg
out
out
in
call
xchg
popa
add
sub
xor
repnz
shlb
sub
clc
test
mov
push
mov
rolb
adc
xchg
outsl
jo
cwtl
adc
test
test
mov
into
adc
lods
cwtl
ds
sub
cli
popf
jp
cmp
jb
cld
ljmp
or
jno
adc
enter
loope
iret
enter
adc
xlat
das
std
pop
xchg
lahf
popa
and
push
leave
lret
cld
push
movsb
pop
xchg
fsubs
test
cmp
inc
das
dec
test
popf
add
in
add
jb
cmp
dec
cld
ret
or
xchg
and
pusha
inc
push
fisttps
sub
xor
aam
aaa
mov
xor
sahf
fcoms
std
loopne
push
mov
pushw
mov
mov
or
call
cltd
cs
lret
lret
jle
mov
cs
mov
xor
loop
jmp
rcr
sub
int3
jo
fmuls
ja
cmp
mov
push
addb
push
test
sub
cld
out
sub
in
out
in
leave
icebp
clc
hlt
jle
pop
std
push
cmp
movsb
nop
movsb
push
add
add
shlb
cmp
loopne
xor
ss
mov
push
movsb
lds
stos
jle
dec
push
fs
call
and
sbb
loope
cmp
sub
and
xchg
repnz
mov
fsubrs
xor
je
cli
test
cmp
loope
pushf
shrl
in
dec
cwtl
xchg
aas
inc
xchg
mov
add
decl
add
and
xchg
mov
push
test
and
lods
mov
leave
mov
adc
push
mov
dec
mov
pop
bound
mov
mov
mov
mov
iret
lret
jo
jle
dec
cmc
loop
cmp
das
sub
nop
cmp
fisubl
nop
xor
js
and
loopne
xlat
lcall
clc
shl
das
cmp
add
inc
stos
or
push
sbb
je
orb
pop
and
div
sub
mov
dec
les
inc
decb
adcl
pop
jmp
xor
daa
in
dec
inc
addb
fists
lock
loope
jmp
or
out
or
xorb
mov
or
add
call
xchg
pusha
in
dec
jnp
sbb
pop
cwtl
push
aas
cmpsl
and
cli
addr16
mov
in
dec
je
imul
mov
sub
test
adc
xor
mov
add
aam
repnz
cld
or
xor
and
out
sahf
jecxz
inc
mov
xchg
movsb
push
cmp
cmp
cmp
jle
adc
xor
push
or
jnp
fmul
xchg
loope
imulb
das
pop
pop
cs
fs
call
in
xchg
movsl
clc
mov
mov
les
ficoml
sub
inc
ret
je
pop
jnp
xchg
sub
test
or
inc
pop
mov
sub
popf
rclb
ret
lock
xchg
stos
into
sahf
loope
push
test
mov
inc
les
cmpsb
rol
outsb
add
sub
enter
es
mov
mov
cli
jle
dec
xchg
repnz
test
scas
add
mov
xchg
in
test
aas
in
ljmp
or
or
dec
adc
push
and
push
ds
inc
mov
and
in
scas
and
repnz
incb
mov
lcall
inc
cmp
ret
cmc
add
stos
or
sbb
jbe
clc
cs
les
jle
pop
dec
addb
inc
daa
jo
lods
pop
add
mov
dec
lcall
push
pop
mov
ror
fdivrs
loop
mov
loope
cli
cmp
das
push
xchg
and
xchg
fimull
dec
mov
aas
pusha
das
push
mov
js
jle
or
mov
fs
jle
dec
divps
leave
fsubs
in
ljmp
add
jb
dec
push
or
fcomp
jl
pop
incl
dec
cmp
incb
cmp
js
daa
dec
lock
je
pop
fimuls
mov
adc
sbb
jl
and
js
jbe
xchg
xchg
scas
mov
test
ds
loope
divl
pushf
aas
pop
loopne
mov
loopne
mov
xor
dec
loopne
test
lahf
cli
push
sbb
or
cmp
mov
cmp
sub
mov
mov
push
inc
inc
rolb
fdivl
jmp
fsubrl
cmpl
testl
jle
adc
movsb
pop
inc
dec
mov
and
cmp
in
pop
pop
loop
loopne
xchg
ret
cs
inc
aas
sub
mov
xchg
in
mov
or
push
xchg
call
xchg
fs
in
addl
imul
mov
mov
hlt
mov
insb
adc
jle
movsb
es
mov
pusha
xchg
popa
xchg
jl
push
xchg
lcall
mov
or
jbe
adc
add
jle
inc
insb
xchg
hlt
sbbb
cmpsb
sbb
ret
test
lods
outsb
mov
lock
mov
sbb
movsb
inc
mov
lahf
mov
push
in
pop
lods
dec
aam
aad
lock
cmp
or
or
adc
jle
jmp
repnz
stc
push
cmp
aam
push
cmp
fs
cli
adc
mov
enter
cwtl
add
jl
int3
jo
hlt
fadd
dec
cld
or
insb
push
fsts
loope
cmp
das
sbb
mov
or
xor
dec
cmp
cld
sbbb
test
or
insb
pusha
adc
jl
adc
mov
pushf
clc
mov
sub
stc
mov
popa
ror
imul
insb
cwtl
lock
in
out
popa
enter
cmp
mov
xchg
stos
dec
mov
aas
and
sub
loop
pop
xor
nop
aas
cmp
inc
add
dec
test
aas
push
aas
push
sub
mov
push
jo
pusha
and
orb
mov
or
stc
xchg
sub
aas
pushf
aas
mov
lods
sub
aas
mov
mov
ret
push
enter
or
aam
xchg
daa
fdivrl
dec
in
ss
inc
inc
hlt
stc
clc
outsl
pop
add
add
or
sahf
pop
sbb
dec
and
and
sub
push
cmp
xor
inc
stos
push
cmp
clc
bnd
pop
xorb
test
and
jmp
push
clc
jbe
xchg
pop
cwtl
ret
jp
rep
repnz
and
mov
nop
mov
pop
les
fadds
fadds
pop
call
hlt
repnz
in
dec
inc
cwtl
adc
adc
sbb
lahf
sub
add
cmp
dec
inc
ret
jne
push
push
xchg
out
dec
call
cld
insb
lahf
pop
push
je
js
jl
movsb
test
xchg
mov
pusha
pushf
cld
fsubrl
movsb
test
mov
jle
mov
xchg
dec
rorb
add
loope
loopne
or
call
hlt
sub
and
add
or
js
pop
adc
cld
sbb
and
cmp
jp
inc
pop
dec
mov
pop
sub
jp
loopne
fmuls
insb
subb
add
jl
hlt
and
mov
ret
lret
pushf
jg
inc
movsb
in
mov
cld
mov
cmpb
fs
mov
push
call
loopne
clc
pop
cld
in
add
or
sahf
adc
adc
sbb
inc
and
lods
xor
out
inc
cld
inc
cld
dec
mov
pop
insb
das
adcb
or
pop
add
mov
jle
pop
mov
leave
mov
int3
lret
shl
mov
loopne
in
addr16
cld
shll
and
or
cs
sbb
mov
xchg
xor
test
mov
pop
inc
dec
add
aam
pop
push
xor
pop
jmp
and
ja
aas
test
rcrb
cwtl
incl
lods
mov
mov
les
and
in
mov
lock
jb
or
push
dec
or
popa
dec
and
cs
mov
cmp
cmp
push
pop
inc
pop
das
dec
test
bound
mov
jo
ucomiss
xchg
push
test
dec
mov
and
inc
es
mov
mov
sub
mov
enter
xor
fdiv
stos
movsb
in
es
and
pop
sub
cmp
jle
repnz
fmulp
push
pop
cmp
and
stc
insb
jle,pt
pop
fsubl
in
mov
cld
enter
rorb
fdivrs
dec
loopne
lcall
cld
pop
ss
or
adc
dec
sbb
add
js
pop
sub
jb
push
bound
cmp
push
inc
push
in
in
mov
fs
push
inc
dec
dec
cltd
xor
pop
ss
mov
cmp
sub
mov
mov
test
das
faddl
adc
in
in
clc
daa
cld
js
jb
pop
or
add
mov
sbb
cmp
and
adc
stc
xor
adc
fsubrs
jle
pop
inc
cmpb
jle
pop
pop
add
clc
outsb
dec
insb
sbbb
ds
jl
mov
and
loopne
int3
cld
rclb
fdivrl
pop
inc
lock
decl
test
fdiv
jb
je
jbe
pop
adc
clc
and
and
test
sub
jbe
call
inc
lahf
test
jle
push
loope
pop
insb
mov
jle
jle
dec
je
xchg
jl
xchg
in
clc
sub
add
inc
rcl
sbb
testl
fmul
loopne
in
mov
das
hlt
lds
push
or
repnz
rcrb
sbb
and
repnz
xor
cmp
cs
dec
ret
push
pop
cs
out
in
mov
loopne
loopne
js
add
cmpb
js
jle
pop
cwtl
cwtl
mov
stc
mov
or
loope
stc
enter
shl
aam
sub
fsubl
and
mov
jbe
cld
call
or
adc
sbb
pop
and
push
inc
sub
out
repnz
clc
push
jle
pop
pop
ret
push
add
insb
ljmp
bound
adcb
adc
jle
dec
movsb
ret
cli
lods
repnz
xchg
jle
popf
add
int3
scas
or
aam
js
fsub
shl
mov
cmpsb
in
in
loopne
clc
cld
cld
popf
pop
sbb
or
adc
sti
mov
in
loopne
dec
cld
dec
mov
pop
loopne
pusha
cld
fs
pop
test
in
lock
js
test
subb
pop
nop
lods
inc
daa
cwtl
pop
push
jle
pop
movsb
paddusb
mov
cmpl
adc
lock
cld
loopne
in
rcrl
aas
clc
and
leave
or
or
adc
adc
sbb
and
or
stc
sub
xor
cmp
add
call
das
push
rcrl
cmove
fs
dec
insb
loopne
je
adc
orps
xchg
or
pop
test
push
mov
shll
clc
sub
stc
fdivrl
and
in
dec
lock
adcb
xchg
aam
mov
sub
sbb
pop
out
or
and
orb
fs
jo
push
fs
fs
fstps
push
dec
dec
xchg
fs
flds
cmp
xchg
fs
and
xchg
fs
fsts
or
xchg
fs
cltd
clc
es
in
xchg
fs
loopne
fimull
xchg
fs
cltd
enter
mov
mov
stos
dec
movsb
xchg
fs
cltd
cwtl
es
dec
mov
es
je
cmp
insb
xchg
cmp
push
inc
push
add
cs
or
add
js
or
pushf
jo
adc
insb
pushf
push
lret
push
pop
dec
push
test
push
add
mov
mov
cmp
insb
je
imul
sarb
loopne
and
fcoml
cld
je
or
adc
and
sub
cmp
inc
daa
push
in
dec
insb
enter
xchg
mov
sub
and
mov
sub
movb
mov
jle
inc
pop
insb
cld
je
test
mov
lods
add
sahf
xor
adc
mov
stos
and
mov
adc
dec
or
cmp
dec
andb
push
adc
mov
cltd
les
inc
call
clc
fcompl
or
insb
loope
cwtl
and
les
sbbb
xchg
adc
outsb
mov
sarb
loopne
sub
sbb
das
xchg
adc
les
jl
das
push
test
lock
add
add
nop
lock
pop
mov
adc
fsubs
clc
or
or
sbb
cmp
dec
cld
push
xchg
adc
push
insb
mov
mov
mov
subb
movsb
das
or
out
cmp
inc
jns
pop
pop
orb
xchg
adcb
ret
cmpsb
mov
add
add
pop
mov
mov
es
pop
mov
add
add
add
add
subl
pop
call
subl
mov
sub
mov
mov
pop
mov
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
push
call
add
pop
lea
lea
mov
rep
add
push
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
pusha
pushl
push
call
mov
popa
ret
nop
add
adc
xor
sub
add
dec
adc
and
shrb
add
ret
mov
add
jmp
je
cmp
cld
mov
xor
push
movsb
mov
call
idivb
test
or
jns
inc
pop
xor
ss
mov
stc
push
mov
adc
lock
pop
stos
jmp
xchg
dec
pop
sub
xor
inc
and
sub
adc
inc
sbb
dec
shl
std
cmc
sub
sub
or
push
cmp
ja
mov
xchg
mov
mov
push
test
sub
add
movsb
pop
jmp
add
jne
add
jbe
ljmp
mov
jb
ret
push
sub
popa
movsl
call
in
sbb
sbb
lea
pop
add
hlt
decl
ja
call
popf
mov
sbb
cmp
add
mov
pop
lahf
add
sub
gs
das
add
test
out
dec
add
inc
rorl
mov
aas
shlb
push
xchg
mov
or
push
push
add
mov
cmp
test
mov
clc
divb
in
jo
push
je
cmpsl
inc
or
sbb
add
into
dec
push
mov
inc
cmp
cmp
je
dec
outsl
dec
bound
scas
jns
dec
nop
andb
cmp
subb
and
mov
add
in
insb
mov
pop
add
mov
dec
sub
movl
or
jne
jmp
adc
ss
mov
mov
xor
adcb
movsl
cwtl
int
pusha
clc
inc
fldt
xchg
lods
nop
push
inc
or
add
dec
es
sbb
add
cmp
sldt
add
add
add
add
add
add
add
mov
add
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
inc
jb
add
add
dec
outsl
popa
fs
imul
add
push
push
inc
push
xor
cs
dec
dec
add
add
dec
gs
popa
addr16
outsl
js
add
