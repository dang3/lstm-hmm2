mov
adcb
mov
mov
cltd
scas
sub
fs
cmpsb
and
mov
inc
rol
dec
int3
call
jne
scas
mov
scas
movsb
int
xchg
in
ret
mov
push
jmp
xchg
cld
cmp
push
sub
and
dec
jmp
adc
sub
mov
jge
cmc
out
push
or
cmp
les
scas
mov
fisubrl
mov
mov
fiaddl
jecxz
xacquire
push
jns
dec
adc
pushf
aaa
lcall
ret
in
xor
add
push
jo
mov
push
sbb
mov
in
das
cmp
push
mov
xlat
hlt
pop
push
ret
mov
xchg
andb
cwtl
fadds
out
sbb
lret
inc
std
lret
test
mov
jge
push
stos
jl
movsl
jecxz
ret
mov
dec
loopne
js
pop
stos
fwait
xlat
es
arpl
in
mov
frstor
ja
push
test
mov
sub
jbe
and
or
adc
nop
sbb
jmp
outsb
loop
mov
lea
and
adc
mov
cmp
rcr
pop
mov
mov
in
push
push
cwtl
sti
test
sbb
jb
or
jg
xchg
adc
ret
popa
aad
movsl
push
xor
repnz
adc
ret
pop
lods
cmpsl
xor
daa
pushf
or
mov
jns
pop
pop
mov
das
cmp
pushf
mov
pushf
sub
jns
out
sbb
inc
aas
jmp
xchg
cmp
ljmp
dec
arpl
mov
cmp
shl
inc
mov
sbb
sub
mov
xor
mov
cmp
aas
paddb
cmp
jecxz
aaa
in
negl
xor
loop
lods
sti
rcr
adc
or
fwait
push
mov
popf
pop
pop
mov
or
add
xor
rcrb
mov
and
jle
gs
pop
inc
fimuls
push
jae
mov
nop
jle
push
inc
and
mov
loop
lret
movsb
sub
xchg
in
mov
pop
inc
xchg
cmp
jmp
or
mov
dec
push
insb
pusha
cmpsl
sub
inc
ret
pusha
push
daa
cmp
xchg
test
jge
jmp
mov
insb
mul
popf
xlat
cmp
mov
mov
cmp
stos
mov
and
fiaddl
xchg
sbb
jg
mov
mov
mov
sbb
jmp
flds
decb
or
cld
mov
xor
jbe
aas
pop
push
jne
inc
push
aam
pop
dec
mov
inc
clc
iret
cld
daa
push
test
ret
sub
mov
inc
or
stc
mov
scas
or
bound
enter
xrelease
xchg
pop
add
insb
sti
and
pushf
in
stc
lea
in
iret
in
jns
mov
sbb
ljmp
imul
inc
inc
push
fdivl
jle
test
and
xchg
sti
lret
mov
dec
mov
aaa
jb
out
jp
adc
loopne
inc
pop
cmc
insb
pop
or
xor
repnz
in
add
fisubrl
sbb
cmc
out
mov
push
lea
ja
jns
std
fldcw
inc
mov
mov
fisttpl
add
out
and
xchg
mov
hlt
sub
sbb
xor
jp
add
imul
call
mov
loop
or
pop
pop
lret
jp
mov
push
inc
and
adc
pop
inc
sub
dec
andb
inc
or
out
and
or
dec
inc
out
jmp
mov
sub
xor
jle
popf
jns
mov
fs
int
jbe
cltd
and
test
fldcw
push
sbb
sbb
cmp
jmp
movsb
pop
in
sbb
dec
push
fimuls
mov
les
insb
in
mov
ds
scas
loopne
inc
aad
fcoms
imul
in
mov
ss
mov
stc
push
jae
and
xchg
mov
lret
dec
jge
test
sbb
out
pop
inc
pop
lock
loopne
dec
notl
insb
adc
pop
mov
adc
add
mov
ja
stos
outsl
shlb
lret
js
mov
xchg
popf
cli
shr
xor
pop
mov
nop
popa
ret
test
push
push
push
test
std
iret
icebp
jp
aam
xchg
dec
popa
xchg
or
pop
xchg
sub
rol
wbinvd
fbld
les
push
lock
mov
sbb
or
push
and
mov
shrl
movsb
mov
jne
cmp
mov
insb
scas
xchg
insb
outsb
arpl
inc
mov
cld
imull
sbb
mov
inc
sub
cmpsb
outsl
in
sti
cmp
push
sub
jmp
cld
lods
lahf
je
stos
xor
aad
mov
cmpsb
cld
aaa
pop
mov
push
add
push
arpl
or
repz
dec
sub
cmovge
pop
pushf
fiaddl
lcall
addr16
xchg
mov
ret
adc
lods
inc
je
dec
psraw
shr
jne
xchg
pop
pop
mov
bound
or
jns
pop
nop
int3
addr16
lret
clc
clc
adc
lcall
mov
mov
adc
int3
rol
cmc
cmp
sub
outsb
mov
mov
mov
mov
sub
std
addb
movsb
xchg
jb
push
or
push
js
and
inc
cmp
dec
and
fld
mov
pop
and
rorl
leave
jmp
mov
repnz
aam
fnsave
cmp
ja
pusha
jle
cmp
pushl
shll
jae
popf
sbb
loop
pop
rol
inc
sahf
adc
dec
data16
in
jmp
lahf
repz
sub
add
sbb
push
insb
gs
popa
pop
mov
stos
fadds
shll
mov
dec
cmpsl
mov
lret
cltd
movsl
add
inc
movsb
push
jae
sbb
das
dec
imul
and
inc
pushf
fstp
ds
fdivs
std
fbstp
movsl
insl
cmp
push
and
stos
mov
in
lcall
cs
mov
mov
jl
fidivrl
daa
je
xor
push
inc
jmp
jp
push
mov
sti
adcl
loope
push
mov
popf
leave
mov
test
sub
xchg
sub
cmp
dec
xchg
pop
test
enter
lcall
aad
xchg
xor
sbb
inc
jge
ret
inc
push
sub
fsubrp
and
cmp
js
inc
fnstenv
push
test
push
out
movsl
int
mov
aad
dec
sub
sbb
shl
xor
cmp
jg
push
outsb
fisubrl
sub
ret
icebp
repnz
xor
cmpl
ja
xor
cli
stc
int3
ss
cmp
pusha
xor
hlt
jle
enter
sub
or
xor
sub
data16
iret
cmp
sbb
or
repnz
push
xor
int
add
pop
aaa
cmp
mov
loopne
jb
xchg
inc
xor
mov
fiaddl
bound
ud2
aas
pop
or
sbb
dec
sub
rolb
aas
mov
jae
subl
gs
pop
ja
pop
repz
lret
pushl
cs
xchg
insb
insb
pop
or
add
sbb
and
jg
adc
pusha
jno
adc
or
imul
shl
loope
mov
push
clc
daa
call
in
pop
jo
xlat
add
mov
cmp
xchg
push
mov
pushf
arpl
sub
mov
mov
push
fadds
sub
jno
ljmp
mov
addr16
add
stos
sub
mov
xor
lcall
add
push
mov
imul
mov
sbb
out
push
or
jns
jbe
push
sbb
dec
xor
neg
xchg
sub
and
bnd
les
mov
mov
iret
addb
test
push
push
push
fstpl
lods
mov
jmp
cmpsl
push
vaddsubps
ds
outsl
pop
sbb
pop
repz
inc
add
iret
add
test
pop
loope
xchg
cmpsl
fbld
lret
cmp
xor
sahf
cmpsb
sub
and
and
push
mov
fmuls
inc
xchg
stc
stc
cli
shl
dec
xor
divb
cmp
daa
shrl
sub
cmc
and
jo
xchg
int3
test
iret
imul
mov
les
push
adc
mov
mov
stc
mov
data16
popa
mov
in
or
mov
aam
mov
loopne
mov
sbb
lret
or
ja
dec
fldcw
popa
lods
xchg
fiadds
jmp
pop
adc
cmc
sub
push
adc
loopne
pop
in
jb
sahf
mov
cmovo
je
clc
mov
popf
clc
xor
and
stos
jecxz
adc
aam
fldcw
and
dec
rorb
shrl
mov
xchg
out
outsb
jecxz
ds
out
call
aam
test
cmpsl
int3
repz
fincstp
ds
sbb
loop
or
movsl
and
add
mov
flds
push
lcall
clc
rorb
jno
popa
inc
fucom
adcl
xorl
imulb
jb
and
aad
das
pop
xchg
jae
in
mov
in
mov
in
popf
arpl
pusha
shr
aad
add
push
lea
shl
mov
pop
jbe
pop
add
mov
push
imul
jae
pushl
gs
jb
ja
inc
xchg
pop
sub
mov
mov
lret
dec
dec
cmp
mov
lods
mov
xor
gs
inc
in
lods
push
mov
add
mov
mov
lock
or
pop
cltd
pop
mov
cli
icebp
push
sarb
cwtl
insb
sub
enter
and
int
sbb
jns
out
dec
push
push
add
adc
jmp
inc
sub
lret
mov
push
inc
adc
out
and
jb
pop
aas
add
pop
ss
push
add
mov
pop
and
mov
cwtl
mov
or
or
cmp
bound
mov
cli
mov
dec
dec
and
add
mov
icebp
outsb
pop
push
divb
cltd
sub
cmpl
pop
mov
fsubl
loopne
cltd
mov
stos
aaa
pop
inc
orl
int
xor
jae
pop
mov
pop
mov
add
sub
mov
repz
test
cmpsl
sti
add
add
inc
je
call
movsl
loope
push
dec
mov
inc
decb
jae
add
in
mov
mov
cltd
ljmp
sbb
add
jne
stos
jp
xor
jl
out
addr16
xchg
pop
pop
loope,pt
mov
sti
cmpsb
or
lret
lds
out
jle
nop
dec
out
or
stos
out
pusha
stc
nop
xor
pop
push
mov
dec
fwait
pushf
dec
xor
add
adc
clc
jge
ds
vmread
fcmovnb
fstpt
push
sahf
pop
jmp
jl
jl
and
jmp
iret
iret
leave
lock
into
adc
fstl
in
add
push
mov
fwait
adc
push
orb
ja
out
dec
cltd
bound
push
sbb
rcrl
pop
cmc
mov
repz
mov
jle
es
mov
jb
out
es
test
mov
test
pop
andb
and
inc
sti
mov
xor
shrl
insl
notb
and
insb
cli
mov
test
pop
add
std
xchg
pop
push
adc
scas
movl
dec
xchg
je
sbbb
rolb
mov
outsb
add
lods
popf
pop
adcl
jg
rolb
imul
test
sbb
mov
mov
push
xchg
push
push
jne
das
push
xchg
arpl
and
sbb
xchg
ja
push
ja
dec
lcall
mov
or
sbb
and
xchg
mov
jmp
inc
add
mov
loop
addl
xor
call
ficompl
xor
fldcw
dec
gs
mov
add
mov
pop
lods
jo
cmp
sub
dec
jbe
xor
push
lret
mov
pop
jb
xor
pop
sub
add
test
xchg
mov
mov
cmp
cwtl
fucom
jno
icebp
outsl
insl
xchg
adc
scas
xor
aaa
push
sbb
idivb
and
adc
push
pop
mov
xchg
push
cmp
fiaddl
xor
cmpsb
call
and
jns
add
cs
push
vcomisd
inc
cmpsl
cs
pop
mov
push
hlt
clc
mov
rcll
cmp
pop
mov
cmp
push
faddl
ss
hlt
daa
fwait
add
stos
ror
xlat
sub
repz
push
push
cld
test
mov
xor
aam
movsl
gs
mov
mov
push
rorl
dec
jb
mov
sbb
add
mov
push
enter
and
cltd
loope
fstpt
addr16
adcb
scas
pop
clc
imul
jp
das
sbb
shlb
mov
in
scas
imul
fbstp
addb
mov
scas
add
sahf
sbb
mov
push
mov
mov
pop
cs
sti
test
sti
mov
xchg
push
stos
cmp
aaa
pop
pop
cmc
repnz
test
mov
mov
dec
test
jne
fsubs
adc
mov
sub
dec
or
outsl
sub
adc
mov
ror
sub
sbb
insl
adc
idivb
xchg
lcall
scas
add
daa
mov
xor
cmp
scas
ds
jl
mov
push
arpl
mov
cmp
and
or
movsb
and
stos
shlb
adc
sbb
xor
shrl
nop
outsl
mov
sbb
sti
icebp
mov
xor
arpl
and
cmp
cmp
sti
mov
lea
gs
inc
push
jbe
mov
xchg
les
push
push
sbb
out
into
scas
rcrb
popa
rclb
pop
push
addl
mov
mov
cmp
insl
mov
enter
xor
loop,pn
std
adc
sti
std
fwait
in
cld
fs
call
dec
cmp
out
cltd
jno
add
sti
or
inc
jne
push
loop
inc
jle
mov
pop
jmp
inc
mov
or
mov
imul
sahf
dec
add
inc
xchg
imul
sti
test
shrb
jbe
cmc
and
iret
shl
sub
int
xchg
aas
ret
jno
push
lret
xlat
shlb
or
push
jl
xchg
stos
gs
shrb
fs
push
lret
cli
jg
mov
jmp
movsb
aad
xor
sub
pushf
loope
sub
sbb
cwtl
cli
aad
dec
popa
addl
mov
ja
lods
lret
cmp
clc
sahf
dec
inc
adc
mov
fwait
jae
sub
sub
sbb
jo
xchg
pushf
adc
xor
inc
js
and
sub
cld
or
int
jo
cmp
lods
ret
sub
mov
movsl
rcr
pop
repz
add
test
ja
mov
js
psubsw
dec
popf
aas
aas
mov
xchg
ror
jb,pt
cmp
cmp
shlb
pop
xchg
fstp
fs
adc
adc
out
cmp
adc
rorb
dec
cmp
decb
inc
pop
cmp
xchg
or
rorb
adc
pop
ret
xor
sahf
push
xchg
fmull
in
aad
test
call
inc
data16
das
xchg
jmp
inc
les
cwtl
test
pop
mov
nop
and
fistl
and
pop
aam
sti
push
pop
dec
std
sub
lcall
aam
mov
mov
ret
imulb
pop
sbb
arpl
test
test
pusha
inc
jmp
dec
jg
sbb
out
subl
sbb
lds
or
cmp
cli
or
xchg
in
pop
insb
jg
test
or
imul
pop
and
outsl
cmp
xchg
jnp
iret
xor
jbe
rcrb
xchg
jo
repz
fadds
mov
loop
mov
push
add
jbe
xchg
insl
jp
js
jb
push
rorl
mov
dec
out
ljmp
es
sub
xlat
loopne
dec
sarb
icebp
push
pop
ja
jg
addb
push
sub
pop
xlat
xlat
jne
mov
inc
pushf
push
jg
into
in
adc
fadds
add
dec
jp
pop
dec
xchg
inc
inc
int3
ss
aam
sbb
icebp
pop
pop
adc
mov
into
out
inc
repz
das
in
mov
mov
inc
orl
pop
aad
fwait
loop
popf
add
je
pop
and
dec
jmp
push
inc
mov
andl
jb
dec
or
dec
cld
or
mov
jno
xor
andl
rclb
push
and
mov
shll
fadd
aaa
fs
pop
push
int3
repz
mov
gs
aam
sub
stc
and
in
lea
mov
lock
push
push
sahf
pop
add
movsb
or
jl
jno
xor
adc
cmp
lods
push
aam
mov
mov
push
stc
and
pushf
lahf
out
repz
pop
and
mov
movsb
not
ds
fs
addr16
push
xor
cli
xchg
push
cltd
adcb
in
push
sarl
cld
lret
dec
in
scas
fstps
jne
xor
insl
daa
and
jbe
and
fldl
jg
and
inc
pop
mov
xor
scas
lret
xor
xchg
out
test
ss
push
mov
jmp
jae
or
pop
aam
mov
rcr
mov
jl
jle
adc
sbb
mov
push
sbb
pop
mov
mov
sub
rcr
xlat
mov
or
in
mov
sahf
xchg
inc
cmp
out
icebp
mov
or
xor
xor
add
fs
bound
and
and
push
or
pop
test
fcoms
mov
push
gs
imul
test
aad
cwtl
das
push
inc
push
sub
sub
and
stc
pusha
jnp
pop
cmc
data16
leave
mov
fcom
cmpsl
shll
ret
dec
mov
int
cmpsb
mov
ret
mov
xchg
adc
lods
adc
andl
push
in
or
mov
inc
sub
push
mov
scas
and
push
dec
mov
jne
fildl
or
mov
or
push
cli
sub
test
int
out
mov
dec
cmp
ljmp
mov
mov
jbe
lahf
adc
push
and
dec
rcll
push
das
and
fincstp
add
mov
lock
adc
jecxz
pop
and
addr16
loopne
arpl
sbb
xlat
xchg
cmp
push
jecxz
cli
repz
or
das
push
cmp
pop
xlat
test
xchg
aas
add
inc
dec
sti
in
pop
and
add
hlt
mov
lret
neg
out
shrb
mov
sahf
ja
mov
cmp
mov
jo
mov
insb
pop
scas
psrlq
mov
xor
xchg
rol
dec
mov
sbb
divl
inc
and
in
add
pushf
jl
push
loope
mov
pop
pop
pop
mov
and
cmpsb
sarl
jl
out
adc
je
pushf
mov
pusha
push
pop
jae
neg
loop
cmp
pop
inc
and
imul
shll
mov
xchg
adc
mov
lods
insb
mov
mov
out
dec
or
and
jb
fs
xadd
stos
add
jmp
shl
cli
sbb
pop
add
and
int3
sbb
inc
mov
mov
ss
and
stc
and
or
cmp
inc
xorb
and
or
into
mov
in
or
fsubl
dec
sbb
leave
jle
and
test
xor
nop
rolb
mov
outsb
inc
push
xor
cmpsb
mov
lret
pop
mov
in
popa
cltd
add
mov
jnp
dec
cmp
call
popa
pop
outsb
dec
scas
out
sbb
adcl
aad
jb
adc
aaa
sar
in
inc
insb
pop
lcall
cmp
xor
xchg
bound
add
pop
ret
popf
adc
jns
push
cmpsb
jp
aam
fwait
in
pop
xchg
mov
imul
adc
into
js
pop
call
mov
in
jmp
jl
shlb
mov
test
outsl
pop
mov
aas
scas
adc
or
dec
pop
xchg
out
pop
xchg
pop
push
fnstcw
pop
pop
test
mov
adc
movsb
push
fistps
lds
les
sub
jmp
aaa
push
insb
mov
sbb
mov
sbb
int
test
dec
lret
pop
je
add
es
je
daa
movsl
je
fimuls
xorl
andb
xchg
negb
lods
ljmp
lret
mov
mov
jp
cmp
lods
mov
data16
movsl
scas
push
or
adc
sub
pop
mov
outsb
mov
stos
xchg
int
push
cmp
pop
mov
sbb
jge
dec
pop
mov
cmp
mov
xlat
push
popa
insb
add
fwait
js
sub
and
imul
rcrb
or
data16
jbe
jecxz
dec
push
cmp
xchg
sbb
lods
pop
push
into
pop
cmpl
pop
mov
loopne
dec
mov
xor
adc
aam
out
leave
and
xor
or
inc
sbb
pop
scas
or
mov
mov
mov
add
adc
aam
dec
add
outsb
sbb
ret
fbld
cmpsb
sub
mov
addl
imul
in
ja
ss
pop
mov
pop
cmp
stc
loop
cmp
mov
fadd
add
push
bound
out
outsb
jne
lods
push
cmp
mov
outsl
andl
andb
xor
xor
mov
push
or
push
cld
lock
xchg
subb
sbb
push
ret
adc
inc
pop
xor
push
test
dec
and
dec
mov
in
push
rorb
push
pop
inc
xchg
int3
jbe
add
mov
leave
or
jb
aaa
int3
cmp
mov
mov
sarl
aaa
pusha
push
scas
xchg
mov
cmp
pop
sbb
imul
jmp
les
add
pop
shl
mov
mov
mov
pop
in
push
inc
dec
aas
lods
inc
loopne
in
jne
jecxz
pop
in
xchg
rcll
mov
adc
mov
ja
xchg
push
jb
insl
and
lock
sbb
fstps
cmp
mov
shr
sarl
or
out
lea
jle
js
aas
mov
mov
jl
or
sbb
arpl
sbb
arpl
hlt
insl
popa
pop
js
aaa
into
stos
addl
ds
cmp
sub
ja
shld
mov
cltd
xlat
push
imul
mov
mov
or
add
xor
andl
mov
lock
pop
ror
hlt
xchg
sbb
out
sub
fldenv
int
mov
xchg
imul
es
sbb
fisubrl
insb
das
loop
test
xchg
sti
jecxz
pop
mov
iret
int3
int3
imul
add
psubusb
or
jl
cmp
aaa
popa
jg
fldcw
fwait
push
div
jae
cmp
mov
or
andb
sub
adc
sub
jmp
add
pop
inc
arpl
dec
in
push
dec
add
adc
bound
add
dec
fistpll
jl
addl
lret
xchg
xchg
sub
mov
mov
adc
push
xchg
xchg
xor
stos
cwtl
sbb
mov
pop
jp
sti
cs
shl
mov
or
adc
push
mov
mov
in
cmc
insl
mov
push
inc
frstor
pop
add
data16
mov
nop
sbb
and
xor
sub
ljmp
fdivs
xchg
mov
scas
sub
pop
cmp
mov
dec
mov
xor
imul
test
sub
jae
fwait
mov
mov
ja
or
dec
mov
testb
cmp
pop
rolb
in
out
lds
push
sub
loopne
push
sub
pop
mov
std
clc
stos
adc
out
mov
andl
mov
fists
xor
test
cmp
adc
inc
outsb
mov
sbb
lret
addr16
mov
add
test
dec
pop
punpckhdq
xor
push
je
sub
inc
lahf
aas
icebp
cmpsb
daa
and
cmp
icebp
jo
xchg
into
inc
xchg
fwait
outsl
ss
xchg
dec
pop
aam
and
rcrb
pop
ss
inc
lds
in
cmc
cs
icebp
push
dec
add
adc
fwait
mov
push
fcomps
inc
lcall
popf
mov
test
push
inc
mov
or
sub
xchg
rcrb
xchg
jp
test
andw
push
rorb
mov
mov
icebp
jnp
rolb
pusha
fldl
xor
add
lea
outsl
sub
lret
out
jnp
ficomps
jmp
cmp
add
popf
xor
sub
pop
ret
icebp
aaa
xor
jns
fwait
test
cmp
sub
cwtl
jo
mov
int3
scas
movsl
sbb
sbbb
outsb
mov
pop
and
dec
bound
imul
test
mov
xor
adc
push
xor
inc
rclb
pushf
dec
and
push
xorb
in
add
out
pop
push
or
cmp
mov
mov
mov
int3
shll
push
clc
mov
mov
imul
sbbl
lcall
les
push
negb
mov
fcoml
or
mov
push
fbstp
cmp
sub
or
push
ret
fisubrl
jns
sahf
jb
mov
cwtl
les
lds
mov
and
repz
cli
fdivl
adc
jno
cwtl
and
insb
cltd
xchg
xchg
xor
imul
push
ljmp
cmp
into
xor
or
jmp
lcall
ljmp
lcall
fcom
xor
ljmp
leave
mov
pop
push
rclb
mov
loope
sub
push
pop
stos
add
cwtl
xchg
fstps
push
and
add
nop
fists
inc
jg
cmp
mov
push
sbb
cmc
sub
arpl
or
xor
mov
xor
push
lcall
xchg
pop
iret
cmp
pop
mov
shrb
cltd
arpl
xchg
add
neg
pop
out
or
cmp
add
lods
pop
aaa
scas
sub
jbe
sub
add
push
lret
and
xor
adc
cmp
repz
mov
cld
mov
push
add
pop
xor
mov
adc
or
jnp
out
dec
or
jecxz
jle
inc
std
cmp
push
sub
loopne
int3
pop
mov
jmp
or
sbb
or
mov
pop
lret
mov
sbb
fmuls
pop
dec
xor
arpl
add
repz
ret
icebp
lahf
out
jecxz
mov
adc
push
mov
gs
jb
jbe
mull
scas
jnp
scas
lods
in
int
icebp
mov
nop
pushf
push
cmp
fimull
mov
ret
sbb
inc
dec
xchg
enter
xchg
sub
inc
fs
sbb
jmp
sub
popf
push
stos
nop
and
fisttps
mov
adc
sub
or
cltd
adc
outsb
fnstcw
out
mov
or
inc
insb
sub
stos
outsb
jge
aas
sbb
cmp
mov
insb
into
shrb
mov
sbb
xchg
xchg
bound
imul
xor
jb
mov
ss
sub
pop
xlat
cmpsb
leave
and
in
test
lock
dec
and
and
imul
add
mov
sbb
inc
jae
xor
xchg
enter
out
shr
icebp
adc
or
mov
jae
call
std
push
xchg
insl
les
push
cmpsl
cmp
and
cmp
sbb
cmp
popa
orb
jne
jle
inc
lods
test
sbb
mov
pop
enter
out
pop
out
push
cmc
pop
cld
negb
push
mov
sub
fcompl
loopne
clc
aad
sub
stc
sti
xor
push
out
and
inc
lahf
push
mov
or
ret
inc
or
sub
or
jmp
sbb
in
outsl
jecxz
cmp
or
stos
push
call
adc
add
lea
aam
add
imul
pop
jmp
adc
cs
enter
sub
pushf
icebp
lahf
jmp
cltd
sbbl
dec
pop
or
test
lods
je
inc
sti
ret
testb
and
push
mov
decb
mov
inc
shrb
or
push
ret
dec
stc
or
and
fucomip
mov
adc
pusha
clc
fsubp
and
xchg
jns
mov
out
inc
test
pop
in
std
push
pop
xlat
hlt
xor
stos
xor
adc
cmc
sub
inc
inc
rorl
push
enter
or
leave
jl
rcr
dec
cmpsb
mov
fidivl
mov
jbe
cli
adc
enter
mov
out
xchg
cmp
or
mov
das
pop
aaa
ds
push
pop
in
pop
clc
adcb
dec
mov
push
inc
xor
cmpsb
sub
inc
jb
jb
insb
into
cmp
jmp
and
mov
setne
inc
jecxz
loop
pop
cwtl
push
xor
add
or
push
dec
sub
adc
mov
imul
lock
xor
popf
scas
subb
or
je
and
push
orl
push
xchg
dec
adc
addb
rol
popf
test
lret
repnz
mov
xor
out
lret
cwtl
test
mov
mov
ja
out
pop
insl
add
adc
dec
pushf
cmp
sub
scas
out
push
fadd
xchg
in
stos
ficompl
bound
ja
or
fstps
adc
jno
adc
lret
sub
scas
mov
mov
out
jmp
sub
pop
pop
repz
out
adc
loopne
mov
je
stc
push
jmp
addr16
add
lahf
mov
sub
xchg
aas
loope
cltd
lret
call
cmp
stc
mov
jmp
mov
pop
and
fs
mov
in
inc
test
repz
movsl
dec
push
cmc
xchg
add
out
data16
mov
xlat
and
pop
xchg
shrb
adc
push
movsb
lds
decl
cli
mov
pop
cmc
mov
ds
addl
stc
ss
pop
bnd
inc
dec
pop
push
rcrl
test
xchg
dec
movsl
bound
jne
push
mov
pop
fcomi
mov
in
jecxz
enter
std
addr16
hlt
in
test
movsl
cli
mov
push
pop
lahf
testb
jbe
sbb
pop
cmp
sbb
jbe
lret
mov
dec
lods
jmp
xor
test
popf
adc
fldt
mov
cmp
mov
test
xchg
inc
xor
ret
stos
and
inc
cmp
push
lds
jle
jo
flds
add
test
test
ret
clc
enter
sbb
cmp
scas
push
sbb
sub
roll
clc
mov
mov
sbb
xchg
push
push
xor
ja
sarb
lcall
enter
mov
mov
ljmp
fwait
push
add
xchg
or
lods
pop
repz
mov
std
ret
jns
sar
shrl
jne
and
shrl
scas
jno
and
les
enter
in
fs
fstpt
popa
jnp
pop
pop
jmp
xor
mov
or
xchg
push
and
out
cmpl
inc
mov
pop
jb
sbb
sub
ljmp
or
addb
rcrb
xor
sub
sbb
mov
mov
sbb
pop
stos
sub
mov
imul
add
or
bound
mov
ret
jo
mov
push
insl
dec
hlt
xchg
lret
jo
je
mov
push
movsl
inc
mov
ds
lret
das
sub
inc
add
rclb
push
fisttps
jl
pushf
pusha
and
stc
bound
and
and
rcll
jmp
lret
mov
sub
cmp
das
jne
cmp
xor
jnp
xchg
fldenv
or
xchg
sbb
cmp
jno
cltd
mov
jmp
pop
adc
dec
movsl
sub
or
jg
mov
sub
in
pop
add
xchg
pop
xor
cld
or
fidivrs
jbe
scas
pop
outsl
cmp
sub
inc
jb
and
sub
sub
dec
jecxz
xor
sub
inc
fisubl
mov
sbb
dec
pushl
mov
jl
sbb
xchg
cmp
movsb
iret
es
xor
jno
push
pop
adc
xchg
loope
test
mov
test
insb
aad
stos
sbb
mov
pop
nop
dec
pop
ficompl
pop
push
call
dec
dec
xor
addr16
push
dec
popf
xchg
imul
aaa
outsb
xorb
xchg
xchg
fistpll
imul
cmpsl
es
mov
aad
insl
push
inc
cli
loopne
cmp
add
sub
cltd
movsl
int
cmp
ds
push
fldenv
pop
mov
mov
mov
je
inc
test
cmp
add
cmpb
aaa
pusha
jb
xchg
rcll
inc
divb
popa
mov
das
mov
icebp
and
js
clc
ret
add
or
sub
dec
pop
out
pushf
loop
jge
dec
push
ss
sub
push
dec
out
sti
and
jae
xchg
subl
xlat
inc
call
or
cmp
cld
jno
xchg
cmpl
cmp
lret
cwtl
jl
insl
mov
mov
xchg
inc
out
xchg
or
and
gs
out
inc
cmpsl
push
fisttpll
shll
mulps
inc
cmp
xchg
xchg
push
enter
push
ret
notb
cmc
or
stos
and
mov
sbb
je
jg
mov
shll
mov
mov
mov
mov
lahf
xchg
push
push
mulps
adc
inc
sub
jge
popf
mov
test
inc
cmp
cli
push
xchg
sub
sbb
int
dec
popfw
rcll
mov
test
push
popa
les
loop
dec
pop
mov
iret
pop
inc
jl
xchg
loopne
sub
ficompl
push
repnz
pusha
int
addr16
or
push
xchg
fidivs
dec
out
imul
test
stc
js
dec
fwait
movsl
fnstenv
dec
dec
popa
cli
sarl
into
adc
out
push
mov
sub
jge
mov
adc
insb
test
cmp
lea
ret
push
subb
outsl
or
movsl
cmpl
mov
int3
mov
cltd
fists
cmp
ret
inc
icebp
std
jmp
mov
addl
fidivrs
pushf
add
iretw
sbb
mov
ljmp
dec
push
lea
iret
int3
movl
leave
xchg
imulb
pop
xchg
repnz
loop
mov
push
cmc
push
dec
aam
mov
mov
data16
aam
and
int3
cs
sub
sbb
sub
add
out
ljmp
xchg
xor
rorl
fldt
scas
or
pop
fwait
and
lahf
ja
inc
xchg
sbb
enter
pop
loope
and
test
ss
pushf
punpcklbw
inc
jg
leave
inc
push
and
dec
add
or
sahf
cmove
inc
ds
mov
cli
leave
add
daa
xchg
or
xchg
dec
sbb
fcomps
jle
fsub
lret
adc
inc
xor
jge
scas
adc
loop
push
jg
repnz
mulb
push
in
cmp
aas
lock
cmp
jge
js
inc
movsl
pushf
or
cmp
jno
testb
arpl
fcoml
mov
jmp
pop
outsb
inc
mov
aad
mov
jge
jmp
data16
cmp
enter
inc
jbe
xchg
mov
out
in
cli
mov
insb
or
fcomp
pop
or
mov
lea
test
ss
push
fsub
mov
or
dec
jp
push
fisttpl
insb
add
cld
sub
sahf
stos
shrb
and
call
dec
adc
sbb
rcl
and
mov
adc
fbld
testl
shr
dec
out
clc
fwait
or
sbb
js
push
or
xchg
sub
xchg
pop
cmp
cmc
xor
jmp
in
outsl
sbb
fsts
daa
in
sbb
mov
rclb
arpl
adc
and
mov
clc
fisubl
cmc
or
stos
std
arpl
andb
adc
lret
sbbl
test
fidivs
pushf
inc
mov
insl
sbb
sub
ds
stos
cli
add
lea
mov
jae
add
in
aaa
push
sbb
adc
sub
pop
cmp
out
jg
pop
mov
and
mov
sbb
sbb
xor
cmpsl
dec
in
mov
roll
dec
aas
dec
add
rcrb
sbb
inc
loope
cmp
mov
push
add
pop
out
add
fs
roll
push
mov
pop
les
mov
xor
xchg
xchg
scas
sarl
mov
enter
stc
scas
mov
mov
xor
lahf
orb
mov
pop
push
pop
jmp
push
in
shl
into
sub
or
sbb
mov
vpcmpgtw
sahf
sbb
mov
popa
xchg
loope
sbb
in
outsl
pop
sub
ffree
push
sahf
add
jnp
or
shlb
pop
fisubl
mov
adcl
mov
scas
mov
arpl
lds
push
inc
adc
cmp
push
sbb
clc
sbb
jp
int
or
and
push
dec
pusha
test
xchg
xor
addb
jne
push
test
popf
popa
shl
stos
mov
dec
sbb
xchg
cmp
or
pop
loop
mov
cwtl
inc
jmp
fsubr
xlat
sbb
cld
xchg
push
and
lods
mov
outsl
jno
sbb
sbb
les
mulb
mov
out
pop
xor
pop
dec
mov
pop
and
fildl
into
and
adc
jl
out
mov
lret
call
or
insb
fcomps
test
sub
lret
mov
out
imul
ss
xlat
test
mov
mov
cmp
xor
loope
loope
push
leave
sub
faddp
inc
jp
adc
push
cld
xlat
int3
inc
gs
push
pop
xchg
pop
ret
aas
xlat
mov
sub
mov
scas
pop
add
push
sti
xor
loop
mov
cltd
dec
xchg
xchg
mov
mov
subl
data16
adc
test
mov
push
movsb
loopne
inc
popa
fbld
movsl
mov
xlat
dec
fildl
sub
xor
sbb
dec
push
push
loop
push
enter
imul
push
cld
jae
iret
dec
sar
cs
mov
lock
push
add
outsb
sbb
jno
lods
das
in
mov
lods
aam
push
add
enter
add
dec
add
inc
push
sub
push
xor
lock
jmp
and
lret
pop
jecxz
adc
xchg
lds
inc
in
call
rcrl
gs
cmp
xchg
lahf
arpl
mov
add
test
scas
ss
xchg
gs
sbb
xchg
or
inc
inc
xchg
insb
xor
ficoml
cmpl
ss
repz
adc
add
fsubl
test
sub
jle
daa
lods
clc
hlt
mov
adc
xlat
les
pop
or
mov
push
jae
sbb
inc
jmp
sub
aad
sub
fwait
pushf
adcl
lahf
and
xchg
out
dec
push
gs
js
push
jno
fsts
pop
cmp
sub
xchg
fldl2e
ficoml
mov
push
je
out
pop
xchg
mov
data16
aas
std
movsb
or
push
rcrb
popf
imul
adc
movsl
mov
and
push
movsl
mov
test
movl
dec
aam
inc
jp
push
or
stc
sbb
add
xor
cltd
sub
or
call
pop
jecxz
aad
pop
sub
fwait
cmpsl
pop
in
sub
sub
sbb
das
cwtl
in
add
xchg
out
cltd
mov
fiadds
mov
leave
rorb
inc
je
push
mov
into
lods
in
jmp
sbb
in
xlat
lods
dec
sub
or
pop
movl
es
fidivrs
bound
lods
inc
sbb
stos
add
sbb
stc
in
or
jl
xchg
mov
stos
xchg
sbb
les
out
mov
cmp
xor
inc
mov
int
jne
xchg
pop
push
adc
and
pop
adcb
test
xchg
loopne
jg
int3
xchg
jge
movsb
sbb
xor
in
dec
pop
cltd
push
scas
push
lret
mov
and
adc
loop
mov
lea
stc
loopne
jp
jb
push
jge
in
sar
mov
cmp
icebp
inc
push
add
inc
in
data16
mov
xchg
movsl
gs
xlat
cmp
clc
js
mov
pop
inc
or
aam
flds
addr16
mov
pop
lcall
subb
enter
push
push
lds
pop
mov
fs
dec
cmpsl
sub
lret
jbe
sahf
iret
jecxz
inc
gs
aad
sti
in
mov
jecxz
xlat
outsl
mov
insl
sub
lret
mov
mov
and
ret
xor
pushl
popa
sub
and
and
push
lods
jge
jbe
push
mov
int
xor
adc
shl
into
xchg
or
cmp
jg
orb
out
mov
mov
add
push
and
mov
xchg
inc
xchg
imul
xchg
jge
jmp
jo
addr16
addb
adc
fisttps
daa
and
stc
add
fimuls
adc
test
outsl
push
or
mov
push
stos
lret
insl
adc
std
jb
pop
mov
pop
push
sub
add
insb
shl
repnz
int
fcmovbe
test
dec
test
lret
pop
cmp
jb
adc
aad
les
popf
inc
xchg
loopne
inc
adc
fxch
mov
or
sbb
and
outsl
dec
jns
pop
and
cwtl
call
xchg
mov
mov
arpl
cltd
or
subl
push
add
dec
ljmp
dec
lret
sbb
mov
fstps
pop
pop
pop
cmp
pop
inc
cmp
fcoml
xor
dec
xchg
sub
fistps
outsb
jle
mov
lahf
fs
and
ja
jl
mov
negl
int
adc
test
aad
add
fs
push
push
cli
rcll
sbb
lahf
adc
in
push
jo
cmp
mov
xor
add
push
xor
mov
stc
fwait
jg
test
adc
in
add
subl
lds
xor
aas
int3
mov
xchg
xchg
into
xor
cs
jecxz
jge
mov
push
loop,pt
add
adc
mov
shlb
add
jo
daa
sub
mov
dec
fstp
push
sub
cmp
or
and
rcrl
shlb
mov
addr16
mov
sbb
xor
inc
loopne
jge
add
sahf
insl
mov
mov
dec
lods
sub
xor
pop
inc
lcall
aaa
getsec
fistpl
or
or
jmp
xor
adc
stc
jmp
sti
inc
aam
xchg
adc
xchg
dec
lock
cli
mov
int3
rorb
aaa
and
sbb
mov
ret
loopne
fbld
mov
and
push
fbstp
sbb
add
push
adc
sub
int
in
int
xchg
nop
mov
pop
pop
mov
les
cmc
lods
mov
jo
or
je
cmp
mov
or
lret
fs
loope
fistps
in
and
push
jns
pop
cmc
jno
mov
imul
rclb
mov
sbb
cmp
mov
nop
subl
movntq
mov
mulb
jnp
mov
into
les
jns
lods
mul
aad
repz
stos
pcmpgtb
pop
and
jnp
xor
add
jmp
adc
test
outsl
imul
mov
sub
mulb
stos
cmp
fisubs
sub
add
adc
in
mov
adc
adc
lods
mov
or
mov
ficompl
hlt
adc
repz
push
jle
jecxz
mov
jns
adc
lcall
dec
cmp
imul
mov
gs
ljmp
rcr
ss
lret
sar
rorl
xor
dec
jg
pop
fmull
jne
insb
lods
cltd
stc
insb
insl
push
mov
leave
xor
sbb
dec
push
sbb
xchg
xchg
outsl
fistpll
jmp
cmc
hlt
aam
les
leave
cwtl
pop
in
arpl
mov
sbb
cmp
jne
mov
mov
negl
mov
adc
cmpsl
mov
nop
sub
cli
in
xorl
jo
repnz
dec
add
sarl
in
inc
mov
clc
add
movsb
dec
sub
loope
int3
stc
popf
xor
sbb
out
clc
jmp
mov
lock
fdivp
cs
jp
das
and
leavew
jecxz
and
icebp
or
mov
push
lret
fnstsw
rorl
mov
sub
and
xor
sbb
mov
push
push
cs
mov
mov
lock
cmpsl
test
or
sahf
inc
cmp
pop
jno
pop
fdivrl
shrb
sub
test
mov
sub
jl
xchg
leave
mov
cmp
js
pop
ljmp
inc
xchg
cmp
aas
mov
inc
cld
sub
daa
mov
in
dec
popa
mov
fucomi
add
xor
adc
mov
pop
ret
dec
lods
dec
and
sbb
jne
cmp
pop
fsubp
dec
xor
adc
cmpsl
jg
adc
dec
aad
mov
fincstp
push
addr16
test
ja
in
or
repnz
cli
stos
mov
fmul
pop
cltd
icebp
addr16
out
xchg
scas
push
icebp
mov
fldl
sub
data16
ds
insl
mov
cmpsb
test
aam
ss
mov
icebp
inc
out
into
loop
sbb
cmp
cli
xor
jge
cmp
sbb
and
inc
adcl
ret
xor
imul
popf
or
sub
pop
nop
fdivrl
lock
jno
pop
cs
daa
mov
fs
sbb
arpl
int3
sbb
lds
leave
dec
lods
xchg
hlt
rcl
jle
jae
pop
popa
aas
ljmp
mov
mov
jg
dec
lea
mov
aas
sbb
fstl
mov
cmpsb
int3
mov
rol
inc
out
out
adc
and
xchg
aas
mov
mov
insl
fimuls
jns
popa
sarl
mov
inc
cs
rorb
dec
dec
dec
lret
pop
es
mov
sub
or
push
mulb
pop
cmp
dec
xlat
cmp
mov
add
fistpll
in
out
push
xchg
sbb
inc
jnp
fisttps
adc
push
je
hlt
xchg
test
call
fbld
iret
inc
sub
lret
pusha
inc
out
jg
dec
jl
push
loope
jbe
inc
push
and
loope
mov
lods
scas
pop
stos
dec
cmp
dec
arpl
jo
cltd
xchg
clc
pop
jb
cli
in
inc
cmp
mov
outsl
dec
sar
aas
xchg
addr16
mov
lcall
pushf
cmp
mov
mov
mov
lods
and
in
scas
bound
aaa
sbb
mov
xlat
dec
push
mov
dec
fs
xchg
and
and
lret
sbb
xor
loope
mov
pop
out
adc
jnp,pt
push
dec
mov
out
sub
xor
lds
stc
lock
lds
xchg
lock
movsl
addl
call
lock
stos
and
inc
push
popa
xor
and
sbb
pop
or
lock
xchg
into
imul
daa
idivb
lock
and
mov
jp
dec
popf
into
mov
inc
stc
add
stos
or
mov
pop
push
sti
cmp
sbb
inc
gs
fisubrl
push
pop
cmc
add
sbb
pop
aaa
adc
pop
mov
mov
aaa
repnz
push
into
mov
xchg
andb
or
imul
jl
aas
arpl
sub
cmp
xor
push
dec
push
out
imul
std
in
repz
sub
sarb
int3
insb
cmp
mov
leave
scas
cmpsl
push
add
inc
out
and
fsubrl
jns
sub
dec
daa
sub
iret
jge
add
mov
paddq
xlat
pop
das
mov
mov
push
jb
test
cmp
scas
adc
inc
mov
mov
mov
clc
push
aaa
roll
cwtl
out
mov
insb
out
xchg
mov
xchg
cmc
mov
pushf
icebp
dec
call
sub
arpl
loopne
or
ret
stos
push
test
fnsave
aad
dec
shr
xor
sbb
pop
shrl
or
jmp
mov
cld
sbb
cltd
and
push
cs
dec
push
adcb
or
cld
inc
setae
popa
lods
in
in
xchg
xchg
lods
cs
rclb
mov
imul
or
mov
das
mov
shrl
and
sbb
popf
in
shrb
push
out
lcall
inc
dec
lock
cmp
insb
mov
dec
out
dec
xchg
add
out
fcomip
xorb
jmp
adc
loope
push
xor
xor
rol
mov
iret
fwait
push
popa
out
jl
mov
inc
adc
out
mov
xor
push
mov
mov
inc
xor
lods
out
jne
sub
dec
inc
or
scas
bound
arpl
or
and
js
inc
sub
jbe
xchg
lock
or
jbe
push
out
lods
sub
nop
add
xchg
cmp
lcall
inc
aaa
xchg
pushf
sti
pop
jle
lds
jl
sub
cld
loop
mov
adc
pushf
loopne
std
push
js
mov
incb
call
or
adc
or
pop
cli
sub
stos
mov
push
fsubrl
inc
fs
mov
int
mov
repnz
and
add
jo
fidivl
pop
adc
mov
push
xorl
mov
arpl
mov
inc
pop
sbb
xchg
cmp
enter
fimull
pop
mov
sub
pusha
xchg
add
pop
sub
in
push
cmpb
frstpm(287
imul
jno
cltd
push
inc
stc
mov
push
mov
decl
pop
xchg
jb
orl
popa
in
loopne
sti
fimull
adc
insb
cmc
pop
ja
ja
cmp
xchg
xchg
icebp
jl
imulb
xchg
sbb
adc
or
ret
dec
sbb
in
pop
aaa
insl
out
jae
jae
xchg
sub
imul
icebp
enter
repz
mov
cmpsl
pop
mov
xchg
add
push
jle
das
fisubrs
push
movsl
in
or
lods
shr
cmpsl
ss
push
mov
shlb
mov
into
mov
movsb
rep
push
inc
popa
push
jne
out
mov
mov
add
jg
mov
sbb
iret
mov
icebp
dec
scas
add
cmp
xchg
fimull
jno
mov
and
std
sub
add
inc
rcll
inc
call
ret
dec
lods
xchg
das
cmp
outsl
push
add
mov
cli
std
int3
sub
cltd
inc
inc
shll
pop
dec
sub
jge
das
push
dec
inc
lock
pop
mov
dec
mov
jnp
popa
jg
jno
adc
into
and
pushl
pop
and
aam
push
cmpsb
je
stos
mov
push
or
popf
xor
mov
fisubs
sub
mov
sahf
xor
imul
sbb
fnstcw
fadds
and
jp
loopne
daa
or
add
add
mov
leave
pop
push
mov
mov
addl
xchg
and
or
pop
sbb
data16
mov
ficompl
pop
iret
sbb
lods
mov
in
loope
sub
or
cwtl
lods
ds
sub
fxch
adc
jl
sub
ds
fisttpl
xor
jle
push
cli
leave
sbb
mov
cmp
icebp
in
ret
and
repnz
scas
outsb
jne
cwtl
loopne
stos
ret
insb
neg
xchg
jecxz
xorl
out
ss
adc
sbb
leave
add
lea
imul
int
mov
xor
cld
mov
add
push
insl
push
inc
mov
out
cld
sub
mov
push
cld
add
insl
outsl
divl
mov
push
xchg
movsl
sub
adc
filds
aam
xor
pop
int
stos
dec
mov
inc
jno
loop
adc
shl
aad
sbb
jae
popf
aam
daa
mov
xor
in
sub
mov
jae
sub
jp
mov
jns
mov
push
pusha
or
popa
mov
jl
int3
rclb
push
mov
test
lods
mov
xchg
cmp
andl
pushf
int3
cs
stos
rcll
push
in
mov
or
push
xchg
sub
xchg
lea
sbb
mov
es
aam
pop
xchg
insl
dec
xchg
push
cmp
mov
js
cld
mov
mov
js
inc
outsb
pop
and
sub
add
lcall
psllw
imul
js
sti
mov
loopne
fisttps
jmp
mov
inc
or
pop
mov
and
sbb
insb
sub
repz
sbb
adc
sub
dec
mov
imul
cmp
aas
mov
xor
mov
nop
sub
mov
and
xchg
pop
inc
jecxz
inc
shrb
call
ficomps
dec
sahf
addr16
js
push
dec
das
jbe
mov
adc
mov
or
fsubrs
dec
mov
mov
or
ss
fistl
jae
maxps
insl
add
sbb
jle
mov
mov
push
dec
jbe
sbb
xchg
loopne
push
push
xor
in
xchg
nop
push
jecxz
adc
jno
psubsb
mov
ss
or
push
adc
ljmp
or
xor
in
push
cmp
cmp
adc
cs
add
pop
inc
in
stos
subb
pop
cmp
or
inc
testl
in
mov
std
xchg
pop
mov
inc
jge
push
arpl
stos
xor
lods
in
out
jne
sahf
je
rorl
jmp
jg
sti
es
xchg
mov
sbb
xlat
cmp
xor
xor
ljmp
test
cli
cld
cmp
and
cmp
rcll
adc
adc
mov
and
out
imul
loopne
lahf
dec
jl
in
push
jge
sahf
std
ret
aad
push
lcall
rclb
add
sub
xchg
insb
and
in
out
adc
pop
xchg
lahf
jb
jnp
leave
push
fstp
adc
pop
adc
mov
dec
outsl
pop
pop
mov
fsubl
stc
xchg
leave
dec
testl
add
push
cmp
adc
lods
xlat
fwait
xor
jo
lcall
pop
mov
shrb
pop
mov
adc
movsl
insb
mov
pop
int
cmpsl
xchg
inc
insl
jno
jecxz
cld
dec
addr16
dec
cmc
mov
cs
ret
push
mov
push
xchg
push
mov
insb
mov
je
lods
cmp
gs
fdivrl
insl
mov
rcrl
cmc
pop
enter
ss
jg
add
jne
into
lods
repz
or
xchg
fldenv
mov
lock
aad
lcall
jo
or
std
and
ds
mov
je
pop
fildl
sahf
fcompl
push
aad
out
loopne
ljmp
jb
out
jmp
push
insb
pop
jne
sbb
jb
dec
sub
repnz
test
jmp
xchg
ds
adc
decl
mov
mov
insb
fcomi
jo
stc
lahf
leave
mov
or
pop
sbb
inc
jb
int
pop
pop
or
jl
leave
sub
push
out
and
push
loopne
fldenv
fs
mov
addr16
sub
jnp
notl
sarb
std
int3
dec
test
sub
mov
daa
sub
inc
out
psraw
xchg
les
test
cmp
pop
out
repnz
and
push
cmp
fsub
pop
scas
cwtl
mov
mov
fstpl
dec
shlb
push
dec
and
sbb
cmp
movsb
insl
push
inc
daa
pop
out
jne
sbb
pop
inc
mov
xor
xor
jge
arpl
and
cmp
loopne
mov
mov
pop
add
shl
push
loope
sbb
ds
mov
mov
mov
push
test
shr
xlat
scas
xchg
stc
xor
mov
cmovno
inc
xchg
or
clc
xchg
xchg
sbb
pop
pop
daa
fisttpl
inc
stos
shrl
mov
mov
lcall
pop
jo
pop
std
call
daa
test
dec
movsb
js
inc
and
push
sbb
adc
mov
xchg
cmc
cld
shlb
lret
xchg
in
sub
and
int3
pushf
or
je
xor
imul
mov
das
pop
sbb
mov
sub
dec
mov
push
mov
out
shlb
aam
icebp
inc
add
cmpsl
jecxz
outsl
sub
das
std
ljmp
clc
lods
cmp
inc
inc
sub
mov
int3
fmulp
adc
mov
cmpsl
mov
dec
ret
in
adc
int3
or
push
dec
ret
cwtl
jg
loopne
and
or
or
cmp
pop
or
jo
pop
flds
pop
sub
xor
inc
lcall
shrl
fnstcw
xchg
pop
fisubrs
fstpl
add
dec
inc
fldcw
sub
cmpsb
push
test
out
fwait
popf
or
mov
xchg
and
or
lock
push
jp
inc
jbe
cli
lret
imul
arpl
inc
jmp
int3
mov
push
mov
aaa
data16
pusha
cmpsl
daa
out
xchg
out
jecxz
push
jle
movq
les
cmp
arpl
add
xor
bound
sub
cld
xchg
xchg
lods
insb
pop
fs
jne
out
test
ss
call
jo
pop
cmp
cmp
lret
fidivl
mov
lret
jmp
xor
push
flds
or
std
push
cmp
decb
in
push
ljmp
fistps
xor
fcompl
mov
adc
lods
inc
cld
xlat
xor
mov
sbb
cli
dec
popa
fs
push
cmpsl
dec
jo
inc
fldt
mov
cld
mov
or
rcrb
dec
lods
leave
mov
or
adc
jbe
lcall
mov
dec
mov
mov
outsb
lret
inc
xor
filds
call
cmp
mov
insb
and
imulb
fucomp
and
lods
testb
push
dec
push
into
stos
push
pusha
fmull
and
ljmp
adc
xchg
xor
jae
call
lds
ljmp
sub
imul
pop
jnp
xchg
mov
pop
in
daa
jns
std
stc
pop
lock
add
jne
movsl
and
aas
lds
enter
inc
daa
xchg
mov
movsb
cwtl
and
ret
test
dec
sub
dec
push
jmp
mov
in
push
into
insb
jp
test
roll
mov
mov
fmuls
sbb
xor
lock
push
jge
fdiv
icebp
sahf
adc
and
cwtl
cmpsl
add
rcrb
and
xor
fnsave
sbb
enter
push
rorb
cmpsl
lcall
in
ds
or
pusha
jg
lahf
call
cmp
jmp
sahf
fs
nop
adc
fldenv
lods
imul
shlb
loop
scas
pop
mov
mov
sub
mov
rcll
loope
dec
int
shlb
sbb
push
pop
fcmovnu
imul
cs
lods
dec
es
xor
js
mov
adc
inc
fists
push
scas
adcb
out
pop
fldt
xchg
xchg
inc
enter
adc
imul
repz
xchg
shlb
mov
inc
lds
mov
adc
pusha
cmc
jbe
mov
sbb
mov
ret
or
or
imul
jno
orl
cmp
cmp
lock
sbb
add
jl
sarl
and
scas
leave
jnp
rcrl
scas
mov
out
mov
sub
ret
notl
adc
sbb
ds
sbb
and
mov
jmp
popf
movsl
lods
jmp
repz
popf
jg
adc
int3
out
subl
frstor
pop
std
jg
jae
or
call
sti
inc
xlat
add
or
mov
loop
out
mov
std
sub
daa
leave
fldcw
pop
pop
sbb
fcomip
pop
fcom
pop
cmc
mov
push
mov
jnp
in
sub
pop
and
repz
pop
pop
lods
test
sahf
push
cmp
jl
sbb
addr16
add
mov
mov
xchg
push
mov
inc
shr
rcr
lods
clc
sub
jnp
fnstsw
pop
cwtl
inc
inc
int3
fs
cs
push
add
adc
sbb
jns
cmp
push
mov
inc
xchg
xchg
sbb
inc
insb
push
movsb
mov
mov
mov
ljmp
dec
adc
hlt
add
mov
rcr
addr16
pop
and
mov
bound
sub
cli
arpl
filds
xor
adc
jbe
inc
xchg
int
leave
adc
cmp
xchg
mov
stos
aaa
pop
dec
stos
js
pop
dec
inc
sub
in
lcall
int
fdivrs
add
cltd
mov
and
pop
sbb
pop
sub
jnp
fiaddl
jbe
xlat
imul
cmp
fidivl
gs
out
inc
and
stos
dec
jno
in
stc
cmp
sbb
cmp
sbb
out
fldenv
push
inc
xchg
dec
pop
arpl
sbbb
or
je
gs
cld
or
ljmp
pop
sub
out
cmp
call
lods
or
push
push
push
ret
test
adc
push
xchg
inc
mov
loop
das
jb
out
inc
mov
xchg
std
es
mov
test
cmp
insl
xchg
mov
and
dec
pop
xchg
or
jle
gs
test
fs
inc
and
pushf
faddl
or
mov
push
cmc
out
lret
jns
insl
xchg
inc
mov
xorb
enter
repnz
sbb
or
je
mov
add
push
int
xlat
and
orb
xorb
fs
mov
in
loope
lret
lahf
jp
iret
test
lea
rcrl
add
test
mov
roll
sahf
ljmp
mov
cwtl
daa
mov
mov
push
xrelease
sub
xor
arpl
outsl
loopne
dec
cmp
stos
shll
mov
stos
mov
push
or
pop
loopne
shll
test
pop
or
ljmp
sbb
inc
sti
out
ret
stos
xor
outsl
xchg
push
leave
adc
push
mov
lods
and
cmp
cwtl
adc
inc
jl
inc
sub
sub
and
add
in
sbb
sub
lahf
adc
or
and
ss
mov
inc
ss
ret
mov
hlt
pop
daa
mov
inc
sbb
cli
xchg
addr16
adc
rcrb
mov
pusha
push
mov
or
ljmp
pop
dec
jb
push
rcll
sti
mov
out
mov
jnp
in
sarl
imul
mov
jbe
fisubrl
adc
fidivl
and
loop
movsb
mov
iret
loop
pop
xor
xchg
dec
pop
cmp
loop
pop
and
pop
sub
icebp
stos
cld
cmpl
cltd
js
fdivrl
push
icebp
dec
mov
in
jecxz
lods
inc
jno
daa
lahf
nop
shrl
cmp
scas
popa
lret
mov
dec
icebp
out
arpl
int3
stos
dec
iret
sub
arpl
inc
out
jecxz
or
lock
jle
data16
jp
pop
sub
sub
out
shll
dec
into
test
daa
cmp
inc
sub
mov
sub
or
repnz
push
testb
add
iret
sbb
in
push
jns
push
push
sub
push
insl
jle
xlat
mov
aaa
cmp
in
shl
mov
loop
lret
mov
xchg
or
outsb
jmp
pusha
cmp
and
mov
div
add
jecxz
push
shr
ljmp
fmuls
fcmovu
adc
cli
add
add
jecxz
mov
inc
ja
mov
sub
mov
adc
stos
stc
outsl
rcll
movsl
pop
sbb
mov
dec
mov
mov
jmp
xor
push
sbb
dec
or
xchg
imul
dec
dec
push
inc
dec
jno
aad
inc
xchg
aaa
mov
or
pop
inc
mov
pop
cmpsl
loop
dec
pop
cmp
lock
sub
sbb
iret
mov
cmp
cmpl
enter
jne
dec
out
sub
adc
gs
int3
mov
das
mov
sar
mov
or
adc
in
cs
jg
cmp
xchg
cli
rcr
cmp
insb
pushf
push
add
cmp
jmp
push
inc
mul
sbb
shr
das
adcl
push
mov
mov
adc
sbb
movsl
or
add
jecxz
fwait
push
test
stos
aad
icebp
loopne
bound
cmpsb
call
pop
xchg
mov
mov
or
and
dec
pop
sbb
pop
push
xchg
sub
movsb
imul
xchg
idiv
push
add
push
scas
and
mov
notl
xchg
fmull
cmc
mul
push
pop
adc
cmp
icebp
iret
jge
and
cwtl
imul
ret
sar
mov
push
inc
pop
adcl
dec
mov
roll
mov
mov
cmp
inc
push
jo
cmp
ljmp
gs
adc
cmp
bound
sbb
push
rcr
adc
pop
dec
nop
or
mov
std
dec
push
repz
jle
mov
cmp
cmp
adc
aaa
cmc
std
loope
insb
sbb
ficomps
adc
mov
cmp
add
ljmp
frstor
inc
mov
stos
jg
in
je
stc
fs
es
hlt
xchg
inc
mov
mov
adc
into
fcompl
jg
mov
add
sub
cmc
daa
adc
push
inc
fs
mov
cmp
xor
push
mov
push
add
xchg
and
adc
ss
mov
mul
aas
sbb
pop
lock
pop
push
sub
bound
mov
fxtract
mov
testl
xor
dec
int
daa
aam
testl
shlb
jmp
movsl
cmp
cmp
push
call
sub
mov
dec
pop
dec
in
push
cli
jl
jns
jae
popf
add
pop
sbb
inc
mov
jae
push
lahf
jle
and
je
mov
sbbb
incb
push
mov
cmp
sub
std
mov
test
cltd
sub
imul
ja
test
fdivrl
pop
or
test
xchg
mov
cmp
push
mov
daa
dec
test
test
arpl
sub
push
int3
xchg
push
pop
movsl
loop
push
xor
jae
shrl
cmc
cwtl
popf
inc
mov
xchg
in
or
mov
mov
jl
je
dec
jo
rorb
cmp
push
test
dec
push
repz
mov
jge
imul
push
daa
cld
imul
rcll
adc
decb
insl
lret
pop
pop
movsl
test
in
out
fdivr
push
add
sbb
loop
cmp
shl
dec
and
lret
test
push
and
push
sub
imul
shrl
rorb
inc
jb
test
dec
cmc
or
test
inc
cmc
cmpsl
xchg
addr16
lahf
mov
in
mov
pop
sbb
roll
or
mov
inc
add
shll
popf
aad
pop
cmp
out
sub
jne
push
inc
mov
jg
test
ljmp
and
and
imulb
xor
push
dec
cmpsb
inc
sti
sub
push
sbb
cmp
jae
shll
push
xchg
dec
shrl
mov
jecxz
xchg
dec
and
rcll
rep
cwtl
adc
mov
push
xchg
pushf
xor
mov
jmp
jmp
divb
das
add
int
std
ja
xor
dec
push
inc
je
daa
lcall
andl
inc
rorb
lret
movsl
cmp
jle
or
fistpl
repnz
cmc
jae
popf
mov
push
pusha
mov
inc
pop
adc
jp
and
orb
mov
adc
mov
mov
cmpb
mov
push
dec
fildll
incl
mov
pop
insl
insl
in
nop
or
lret
mov
scas
pop
int3
out
je
shr
mov
inc
jbe
lret
dec
pop
push
lret
out
pop
arpl
xorl
shrb
dec
fucomp
add
mov
mov
sbb
iret
pop
sub
cwtl
lahf
inc
arpl
loop
sub
jb
adc
mov
das
adc
out
shll
cmp
push
or
iret
orb
inc
in
sub
mov
mov
sbb
and
xchg
dec
push
sbb
imul
dec
cltd
and
cmp
pop
xchg
push
ja
mov
lahf
fisubs
mov
push
or
inc
in
pop
imul
out
movsb
dec
and
or
je
cmp
sbb
xchg
cmp
and
cld
pop
inc
mov
push
mov
mov
add
sub
jae
fiaddl
test
xchg
adc
sbb
add
mov
popf
outsl
sbb
mov
sub
je
fwait
nop
nop
fadd
mov
or
inc
pop
jge
adc
in
aas
ja
push
ret
push
ffreep
push
dec
mov
ljmp
call
sbb
sbb
push
inc
icebp
mov
pop
adc
dec
mov
and
sti
gs
in
adc
adc
jb
or
add
addr16
pusha
and
push
cmpl
stc
movsl
mov
dec
jo
cmc
xor
jg
jb
stc
mov
cmpsl
jo
ds
lds
inc
mov
adc
scas
ficomps
stos
xlat
shrb
jl
imul
popa
jmp
subb
cs
gs
mov
add
jne
sub
adc
adc
jb
mov
mov
or
mov
xchg
sbb
xchg
popa
pop
ret
dec
push
xor
jb
mov
imul
divb
mov
xchg
mov
mov
dec
decl
mov
sbb
les
adc
out
out
or
test
cmp
fmul
in
cmp
gs
test
push
cmp
daa
xchg
scas
mov
mov
push
mov
ffree
dec
adc
fwait
push
or
push
test
cmp
aaa
scas
mov
mov
shrl
inc
pop
fcomi
pop
out
cmp
imul
cld
lds
mov
cwtl
mov
inc
movsl
cmc
dec
int3
mov
ficoms
cmp
setnp
rolb
cmc
sub
sbbl
pop
xlat
stos
movsb
push
push
or
std
jo
sub
xor
ret
inc
inc
xor
pop
push
outsb
mov
inc
in
push
out
mov
pop
jb
push
out
ljmp
lods
add
xor
sub
dec
imul
and
inc
enter
add
pop
pop
scas
inc
fbld
iret
scas
insl
pop
adc
out
and
xchg
cld
and
mov
mov
ficoml
pop
xchg
insb
mov
and
mov
es
scas
pop
stc
ja
inc
mov
push
adc
fs
insb
or
jae
push
pop
pushf
jmp
addr16
daa
mov
or
mov
sub
shl
xchg
gs
hlt
iret
loop
jno
rol
fmuls
cmpsl
adc
adc
ljmp
jge
cmp
adc
xchg
mov
dec
roll
in
push
dec
push
or
pmulhuw
inc
adc
jge
mov
mov
cli
rclb
lret
loop
in
lcall
inc
mov
and
outsl
bound
insl
sub
in
xor
dec
leave
mov
aad
xor
push
or
push
arpl
jle
scas
inc
leave
dec
jns
out
and
jo
shlb
push
push
cltd
adc
mov
mov
mov
xchg
and
mov
jecxz
imulb
push
push
adc
xor
loope
sbb
sub
popf
mov
xchg
mov
sub
xchg
scas
jle
jmp
cmp
mov
xor
das
int3
lcall
xchg
and
enter
inc
icebp
fnstcw
or
fwait
out
jno
movhps
jmp
mov
sbb
outsl
call
xor
dec
inc
add
scas
ror
fwait
pop
inc
mov
cwtl
jb
call
popf
push
mov
bound
mov
xchg
ljmp
or
pop
xchg
pop
pop
inc
xchg
mov
enter
push
sub
out
jne
xor
push
les
aas
or
scas
outsb
mov
xor
push
ss
hlt
lods
gs
dec
fidivs
std
pop
ds
xchg
inc
fldl2e
int
dec
jo
inc
aad
jg
inc
and
mov
enter
lahf
fisttps
xchg
iret
in
push
fwait
xchg
add
lock
xor
jg
xchg
sarl
lcall
insl
outsb
mov
iret
mov
add
adc
pop
mov
or
jns
add
ss
jmp
push
ret
sub
sub
pop
sub
mov
leave
loop
cwtl
fnsave
or
xor
xchg
fidivs
mov
adc
pop
pop
push
int
jecxz
add
add
mov
push
mov
lods
pop
jmp
gs
dec
pop
push
cli
adc
xor
adc
xchg
in
cmp
pop
rclb
jle
inc
dec
aaa
aaa
idiv
or
cmp
loope
mov
xchg
stos
cmp
loop
or
jnp
mov
pop
shlb
push
add
les
test
and
enter
add
xchg
inc
mov
stos
cmp
cmp
stos
sub
in
pop
lods
cmp
gs
mov
mov
adc
sbb
pop
call
out
jmp
in
jns
subl
jmp
repz
std
mov
adc
lds
aaa
fdivl
je
jecxz
cli
xchg
push
cmp
or
pop
mov
inc
mov
mov
pop
stc
icebp
mov
leave
pop
loop
pushf
je,pt
inc
jg
or
push
push
cmp
or
push
ljmp
ja
ja
sbb
in
or
xchg
mov
cmc
movsb
inc
lods
outsl
inc
or
ret
aam
repnz
and
xor
and
into
mov
mov
cli
add
movsl
jbe
je
or
testl
mov
mov
inc
mov
cmp
xor
dec
test
dec
add
daa
mov
adc
pop
pop
sti
loope
fcomip
mov
jl
ja
mov
std
nop
fistps
ret
cltd
je
push
mov
mov
inc
pop
push
daa
xchg
lds
movsl
icebp
inc
fcompl
jg
cmpsb
and
mov
adc
or
jo
mov
aad
ja
dec
push
mov
pop
mov
in
mov
jb
in
add
or
and
in
jp
in
and
jecxz
xchg
loop
or
cld
ja
jo
cmp
aam
es
cmp
arpl
add
in
cmpsl
mov
out
mov
jo
sbb
pop
push
fsubl
mov
sub
cmp
loope
push
mov
cs
test
addl
clc
jle
mov
lahf
inc
cmpsl
xchg
jns
sub
or
xor
roll
in
xor
xchg
rclb
sbb
bswap
out
lock
mov
testb
jg
cmp
pushf
push
test
sbb
jne
andb
scas
outsl
or
sbb
stc
inc
and
lods
loopne
inc
adc
aaa
data16
ljmp
test
cmp
mov
jb
fucomi
shlb
sar
out
fldenv
xor
inc
mov
std
cmp
sbb
or
pop
das
out
fwait
scas
or
ljmp
loop
stos
adc
push
xor
jnp
int3
push
pop
imul
int
in
dec
int3
mov
movsl
mov
rcl
xlat
cmp
fnsave
lods
xor
sub
adc
adc
add
rol
shll
add
cld
movb
imul
or
jg
jno
sub
mov
mov
xor
jle
mov
xchg
in
imul
lods
xchg
shl
or
das
push
test
loope
iret
cmp
cmp
push
mov
outsb
faddl
or
popa
jp
and
clc
add
mov
popw
mov
pop
jb
addr16
pop
pop
notl
shlb
pusha
scas
and
pop
orps
push
shll
mov
xchg
mov
test
push
das
lcall
loop
outsb
loop
mov
stos
sub
mov
push
in
repnz
sub
push
jo
mov
push
adc
cltd
sar
mov
add
notl
jge
sub
sbb
cmp
movsb
pop
dec
pop
mov
jecxz
lods
je
mov
and
icebp
xchg
test
xchg
xchg
in
fucomip
lret
in
cmpsl
and
sub
iret
fbld
enter
cmp
js
lods
sub
iret
pop
xchg
icebp
mov
int
push
xor
testl
adc
aas
jae
mov
add
mov
mov
push
cmc
out
mov
dec
sbb
xchg
jmp
mov
gs
je
sarl
cmp
and
or
and
sub
cld
sarl
jl
hlt
dec
push
add
jecxz
popa
xlat
and
je,pn
bound
shll
xor
push
popa
sub
fiaddl
lods
mov
cwtl
jae
sbb
sub
js
popa
ljmp
hlt
aas
adc
push
imul
dec
movsl
cmp
push
cld
dec
add
ljmp
call
das
xchg
aaa
lods
or
stos
jno
dec
sub
test
and
pop
push
push
push
stos
loop
jb
das
movsb
in
out
insl
add
xor
pop
or
out
inc
neg
fcom
inc
xchg
cwtl
mov
xchg
enter
aas
mov
mov
iret
popa
repnz
test
xor
sub
cli
add
aaa
add
mov
lcall
aad
std
daa
sbb
push
subb
stos
adc
dec
das
fstpl
xlat
sbb
cmp
jnp
ljmp
inc
or
iret
and
outsl
jo
enter
push
sbb
xchg
cltd
sub
adc
sbb
cmp
movsb
in
dec
push
xor
inc
cmpsb
jmp
lds
jecxz
aad
aam
jmp
cli
sub
ret
inc
stos
mov
cmp
fwait
mov
sbb
and
add
xchg
mov
jnp
lret
cwtl
ja
ds
movsl
clc
xchg
adc
call
cltd
xor
xlat
nop
call
sub
mov
cmp
jno
mov
enter
jno
fucom
pop
xchg
fcomps
cmove
cmp
mov
adc
test
lock
xchg
aad
push
jno
pop
fninit
movsl
xchg
sarl
call
ret
js
push
movsb
lods
sahf
pop
xchg
jp
jl
push
sub
jnp
adc
sbb
stc
idivb
fldt
pop
rolb
lahf
sub
sub
xchg
add
adc
es
push
pop
popf
and
push
cmpsl
adc
idivb
repz
enter
sti
mov
das
rcll
cli
xchg
adcl
outsl
and
xor
rcrb
adc
sbb
imul
mov
out
push
out
mov
stos
inc
jae
cmpsb
cmpsb
xor
arpl
jno
fisttpll
lcall
loope
inc
lods
orl
push
sbb
dec
cmpsl
rolb
jge
add
std
jb
test
out
scas
div
inc
or
test
push
mov
adc
popf
jns
jno
mov
add
jecxz
repnz
sub
rclb
mov
adc
pop
ret
push
xchg
hlt
dec
inc
xlat
dec
mov
mov
jns
add
mov
sbb
cmpsl
mov
cmpsb
xlat
aad
inc
pop
stc
push
movsl
push
sbb
and
js
xchg
cmp
inc
popf
mov
adc
cmp
mov
lds
sti
pop
mov
mov
inc
sbb
clc
aas
inc
leave
in
inc
pusha
or
adc
pop
movsb
mov
mov
xlat
icebp
sub
sub
and
sbbb
jns
xchg
cmc
sub
push
mov
lahf
mul
mov
xchg
repnz
fcmovbe
aaa
jecxz
clc
mov
xor
in
push
cmp
sub
subb
cmp
call
leave
or
orl
inc
test
ftst
mov
stos
loopne
push
movsb
xchg
cmp
in
shlb
das
lea
ljmp
add
adc
in
divl
push
jle
jb
clc
sbb
shrl
fwait
pop
out
sbb
pop
add
fisubs
imul
and
fidivl
aaa
fistps
es
add
bnd
and
push
arpl
pop
cwtl
outsb
inc
arpl
dec
push
lds
addl
lahf
cmp
pop
add
push
sti
out
outsl
xor
mov
mov
xchg
aas
xor
lret
cltd
mov
xor
je
or
negb
add
in
add
xchg
inc
lret
int3
shr
jp
rcl
fcoms
loop
in
in
add
push
nop
popa
xchg
fneni(8087
nop
mov
aaa
ret
sub
shll
lahf
sarl
dec
jns
ljmp
cwtl
in
bound
or
sub
sub
xchg
adc
dec
inc
sahf
xchg
test
arpl
aaa
stos
and
leave
add
cmp
jle
pop
mull
xlat
pop
roll
or
cmp
fidivl
nop
mov
or
mov
data16
sbb
ds
push
sbb
xchg
testb
sub
test
cmp
or
jmp
adc
cmpsl
mov
push
add
iret
mov
fcmove
and
aaa
mov
jnp
pop
mull
mov
lret
cmc
xor
rorl
push
sub
int
adc
cmc
inc
and
inc
out
test
jo
out
inc
sub
or
cli
mov
js
cmpsl
jnp
iret
mov
negl
xchg
enter
int3
out
adc
jg
jo
vmovdqa
cs
push
das
push
lret
lods
push
mov
pop
mov
sub
outsb
fwait
lcall
in
or
fisubs
jecxz
cmp
cmc
dec
jmp
dec
cli
inc
daa
jb
inc
pop
jne
bound
rclb
jnp
ja
push
adc
lret
jb
ss
push
out
daa
rcr
mov
repnz
pop
in
shlb
cmpsl
nop
insb
ds
adc
jg
rcll
repz
test
cmp
sub
sti
sahf
pop
daa
push
pop
bound
push
shll
imul
stos
or
stos
subl
jg
iret
jp
aas
adc
cmc
into
push
repnz
idiv
and
and
cs
orb
loope
push
outsl
pop
fiaddl
sbb
add
sbb
and
daa
arpl
mulb
mov
push
mov
mov
add
dec
mov
xchg
repnz
stc
or
xor
pop
icebp
mov
xchg
xlat
add
ljmp
add
adc
stc
pop
dec
adc
mov
mov
fimuls
out
xor
imul
mov
aas
sarb
sbb
dec
popa
les
es
dec
dec
shrl
loope
cmpsb
inc
mov
inc
popa
outsl
aad
push
mov
xchg
ljmp
les
lock
bound
or
cmc
sti
lahf
jmp
sbb
lock
ljmp
cmp
movsl
pop
xchg
cmp
pushf
mov
jl
cmp
test
pushf
scas
pop
xor
mov
jp
shll
mov
call
xor
sbbb
or
cmp
fidivl
movsl
xchg
adc
inc
rcrl
mov
stos
scas
movsl
add
mov
and
pop
int
aam
lock
cmpsb
jae
or
cmp
add
js
cmc
cwtl
mov
addb
and
and
repz
and
jbe
pop
in
mov
inc
adc
fs
pop
fs
rorl
dec
call
test
nop
xor
or
lret
addr16
dec
adc
mov
sti
mov
dec
out
cld
add
addr16
out
cmp
jo
lods
push
xchg
out
imul
push
subl
dec
and
inc
leave
jmp
push
out
jecxz
sub
fs
lcall
add
movl
jg
iret
ljmp
in
mov
and
push
mulb
movsb
mov
xchg
fisubs
iret
mov
xor
sbb
sbbl
fimull
fld
jmp
fs
sbb
rolb
lock
xchg
adc
and
aam
pushf
js
test
jae
and
mov
pop
testl
mov
pop
or
inc
jmp
test
cmpsb
shrb
pop
inc
pop
dec
adc
cmpsl
lcall
mov
push
push
xchg
pop
leave
insb
lock
adc
pushf
es
dec
xchg
dec
arpl
inc
hlt
aam
push
add
pop
jbe
xor
nop
inc
inc
int
and
and
inc
lods
cmpsl
fwait
aam
jns
loop
imul
xchg
push
pop
and
xor
fcomps
test
lahf
mov
into
mov
inc
push
mov
lods
cltd
imull
sbb
or
inc
lea
xlat
inc
dec
dec
fisubrs
jle
stc
adc
aam
dec
aaa
imul
jmp
lret
push
nop
sbb
cmpsb
xchg
pushf
jl
mov
cmp
inc
andl
add
insl
in
pop
sbb
mov
xchg
mov
jmp
fwait
ret
mov
sbb
rolb
xchg
mov
popa
gs
cmpsb
xor
push
repz
push
push
push
hlt
cmp
bound
mov
add
insl
adcl
pop
mov
xor
dec
xor
in
sbb
inc
fsts
sbb
mov
jecxz
call
fidivs
xor
pushf
cmpsb
cmp
jge
ds
fcmovnu
sub
xor
push
in
push
cmpsb
sbb
push
mov
pop
and
sub
out
mov
and
sahf
shr
in
jle
xchg
lods
sbb
test
aas
movd
repnz
xchg
mov
popa
lahf
push
mov
clc
ds
mov
dec
subl
sub
xchg
clc
bound
adc
inc
or
inc
jl
sarb
mov
push
adc
jmp
and
out
outsb
sbb
mov
rorb
fnstenv
or
xor
jo
xchg
daa
leave
mov
or
pop
or
add
lret
pop
out
je
mov
aad
pop
lret
std
js
inc
movb
adc
xchg
mov
mov
add
sarb
ljmp
add
mov
lods
cmpsb
cltd
stos
add
xchg
cwtl
gs
pop
dec
and
jmp
negl
adc
lahf
cmp
pop
lahf
in
mov
push
mov
dec
cmp
outsb
dec
imul
lret
cmp
movsb
sti
fildll
pushf
lret
fwait
push
jle
movsb
iret
pop
movb
ja
inc
out
mov
xchg
pop
mov
call
adc
stc
cs
or
sbb
mov
jle
add
cltd
or
mov
fildl
push
insl
cmp
pop
mov
mov
iret
jnp
push
push
dec
and
xor
pop
je
fnstcw
sbb
repz
mov
mov
xchg
cmpb
repz
dec
mov
out
jae
mulb
mov
addr16
jne
icebp
xor
arpl
pop
cs
jno
rorb
scas
xor
jne
sub
and
adc
or
punpcklbw
stc
push
icebp
cwtl
inc
inc
add
mov
jae
ljmp
pop
mov
pop
out
std
pop
ss
test
insb
push
mov
dec
daa
sti
push
leave
pop
jb
push
inc
negl
sub
xchg
cmp
bound
xchg
fs
xor
mov
sbb
xchg
mov
or
int
repnz
jae
mov
mov
xchg
xor
mov
loop
xchg
jle
inc
stos
dec
xchg
out
dec
sbb
rcl
or
fimuls
add
insb
cld
mov
cmpsl
xchg
bound
iret
into
out
or
jle
inc
mov
setp
into
sti
dec
adc
jg
lret
or
mov
ljmp
mov
test
xorb
rsm
mov
and
das
xchg
mov
incb
iret
dec
setne
imul
in
lret
or
daa
popf
xor
fst
mov
ret
sub
bound
into
xor
or
adc
test
cmc
scas
sbb
pop
sbb
jne
xor
cmp
push
call
stc
mov
or
inc
xor
dec
cmp
dec
push
xor
cmp
outsb
cmpsl
mov
lock
inc
and
icebp
jl
mov
and
adc
lds
push
and
mov
out
inc
mov
popa
mov
xchg
test
or
shll
pop
and
mov
fs
subl
and
or
cli
lret
dec
je
jno
inc
and
xchg
out
mov
daa
xor
pop
ja
adc
adc
xchg
pop
xchg
mov
mov
adc
mov
and
movsl
notb
dec
push
jmp
jp
dec
mov
lods
xchg
cs
scas
mov
frstor
insl
popa
jno
fs
imul
mov
pop
add
inc
je
jle
test
xor
pop
imul
push
inc
pushf
jge
pop
iret
out
das
mov
std
mov
xlat
pop
adc
dec
inc
loopne
arpl
bound
ret
stos
or
jnp
pop
cmp
lahf
jo
out
testb
xchg
mov
outsl
jl
inc
sbb
mov
dec
mov
dec
cmp
in
cmpsb
clc
add
inc
jns
lods
or
jg
dec
notl
sub
sbb
jle
cmp
sahf
insb
lahf
xor
xchg
sti
mov
adc
rcl
mov
mov
cs
push
out
sbb
mov
push
loope
cmpsb
fs
fsts
vxorps
adc
repz
pop
in
dec
inc
cmpsl
jae
jo
jo
lcall
daa
and
jno
cli
lret
xchg
mov
pusha
xor
inc
outsl
inc
dec
dec
mov
and
int3
mov
add
xchg
xchg
test
imul
xchg
cwtl
and
lcall
sbb
out
jbe
test
insl
hlt
cmp
add
std
xchg
mov
sbb
mov
and
cmp
loopne
jp
adc
loope
mov
inc
sahf
cld
mov
out
ret
shr
in
sbb
or
xchg
mov
cli
in
pushf
add
in
cltd
lea
adc
mov
pop
sbb
fsts
test
outsb
mov
call
in
xor
mov
jle
cmp
sub
scas
dec
call
pusha
mov
inc
sub
xchg
lahf
and
addr16
pop
sti
push
nop
mov
aad
jp
mov
mov
cmc
dec
cmpl
xor
mov
and
fnstcw
pop
mov
dec
fdivl
adc
adc
cmc
add
sbb
push
push
inc
inc
ret
push
push
idivb
xor
mov
lods
call
pop
and
nop
loopne
xor
std
sub
aad
div
cwtl
and
adc
or
xor
xor
push
add
cmpsl
aaa
orb
jne
mov
mov
stc
cs
sarl
clc
adc
out
ja
mov
push
enter
loope
fwait
pop
loope
cmp
push
out
xor
mov
pop
mov
outsl
ret
mov
hlt
mov
or
data16
jecxz
daa
mov
push
call
test
fdivr
ds
dec
cmc
add
inc
or
divl
icebp
mov
or
dec
les
inc
adc
dec
loopne
cmp
mov
xor
sub
in
sbb
jno
loopne
xlat
sbb
or
inc
inc
pushf
push
in
inc
mov
mov
fwait
enter
cmp
and
push
daa
arpl
push
mov
ret
sbb
mov
adc
dec
and
pop
in
dec
lods
mov
fiadds
xchg
mov
lahf
mov
mov
cltd
popa
imul
lods
inc
push
pop
inc
dec
ret
inc
pusha
push
das
xchg
mov
push
push
shrl
add
shrb
test
mov
cmc
fcoms
jbe
dec
push
mov
cmp
test
push
xor
jb
push
jl
sub
add
scas
mov
push
imul
jne
arpl
leave
jp
mov
dec
int3
push
repz
cmpl
orb
call
icebp
xor
jbe
fistl
jg
mov
repnz
mov
sbb
movsb
cmp
incb
xor
lahf
je
jnp
lahf
imul
mov
pop
xor
push
ret
xor
xchg
dec
adc
cltd
shll
push
add
je
inc
jns
fmuls
xchg
push
push
inc
mov
adc
xor
push
call
loope
lods
fcoml
push
mov
sub
adc
inc
mov
out
adc
add
movsl
in
push
movsl
inc
xor
or
fistl
inc
movsl
lods
push
scas
and
push
jne
mov
add
lret
dec
xor
mov
hlt
int3
inc
jnp
ja
xchg
fwait
jg
dec
cmp
sub
std
out
pop
loop
push
cmpsl
mov
push
mov
mov
cmpsl
add
cmp
push
lret
fucomi
xchg
cmc
and
mov
mov
push
jl
push
sub
out
divl
jp
cmc
mov
sub
jo
fidivs
ja
loope
in
add
xor
subb
xor
fidivrl
fistpll
les
repz
adc
dec
in
lea
xchg
add
scas
mov
cltd
inc
out
out
mov
les
fcmovu
and
jbe
jbe
fs
ficoml
aad
xchg
pop
insb
jecxz
inc
xchg
jne
les
ret
and
addl
or
push
out
mov
sbb
jecxz
jle
loop
jo
mov
cs
xor
xor
sub
bnd
lods
out
jecxz
xorb
mov
cmc
in
xchg
sbb
mov
or
sti
pop
out
mov
inc
aaa
sbb
mov
pop
xchg
pusha
aad
jmp
inc
rolb
xchg
nop
mov
pop
dec
and
test
lds
out
xor
mov
mov
lahf
push
fidivrl
ja
shlb
ret
jg
icebp
call
dec
cmp
adcb
jnp
testb
out
jb
sbb
fdiv
sbb
and
xor
pop
xor
inc
jg,pn
mov
scas
notl
jmp
insb
mov
mov
popa
sub
add
fldt
jmp
sbb
push
xchg
mov
push
ret
xor
sbb
pop
cltd
movl
popa
iret
movsl
scas
xor
sub
jno
or
sub
sub
inc
mov
xor
call
xchg
xchg
pop
repz
pop
lock
fcoml
mov
cmp
lods
add
cmpsb
mov
add
xor
sub
mov
mov
xorb
dec
or
pusha
jbe
sub
or
cmp
jns
mov
mov
dec
mov
mov
stos
fisubrl
adcl
js
or
mov
add
jp
xor
repz
rolb
jp
fstl
cwtl
jecxz
mov
mov
pop
pop
adc
lahf
xchg
mov
insb
jno
call
fmul
and
sti
dec
clc
loope
scas
push
shlb
cmp
pop
fmuls
testl
adc
ret
stos
cmp
mov
xor
adc
imul
cmp
mull
inc
dec
sahf
ds
jbe
nop
ds
push
test
jge
jl
or
xchg
mov
xorb
push
push
xor
hlt
jnp
mov
cwtl
xchg
mov
mov
fwait
in
lret
pushf
repz
cmpsl
outsb
iret
out
or
cmp
cmp
in
ret
fs
test
and
jnp
and
push
and
mov
cmp
dec
test
mov
cmpsb
mov
inc
and
or
dec
test
ret
add
mov
out
pop
shrb
inc
fnsave
mov
enter
popa
or
push
cmpsb
cltd
dec
push
in
pop
addb
std
int
fdivrp
jae
adc
add
or
lahf
or
test
jns
cmp
rcl
cmp
lahf
sbb
xchg
loop
nop
cld
cmp
jnp
adc
add
outsl
jne
jae
and
sbb
mov
imul
stos
and
add
pop
ror
orb
xchg
in
add
cmpsl
sub
and
lods
mov
and
sbb
js
mov
and
sbb
popf
imulb
inc
fmuls
sbb
jp
pop
pushf
data16
idivb
xor
pop
insl
mov
jne
jp
dec
pop
sbb
mov
sub
dec
jno
dec
std
mov
negl
sbb
movb
inc
and
push
pop
in
xchg
std
pop
pop
xchg
pop
and
xor
stos
inc
mov
ss
adc
push
cmp
aad
sbb
sbb
cmpsb
notb
add
lods
or
mov
add
ja
sbb
add
ficoms
rclb
xor
or
loop
stos
pop
inc
push
cmpsb
mov
repnz
enter
xchg
xor
int3
into
mov
jg
adc
jno
push
loope
pop
xor
cwtl
frstor
xor
and
test
ret
dec
jbe
cmpxchg
inc
inc
les
test
sbb
jbe
aad
lds
test
imul
and
lret
jnp
mov
test
iret
ss
loope
jns
outsb
inc
std
sarl
outsl
dec
or
adc
mov
or
mov
dec
mov
sahf
in
aad
sbb
jns,pn
mov
mov
std
rep
cmc
mov
cwtl
mov
mov
lcall
push
or
mov
mov
cli
add
fisttpl
mov
mov
sti
dec
inc
adc
movlps
fwait
ja
ljmp
mov
or
call
fiadds
imul
fucomp
xchg
xor
out
les
mov
jecxz
xor
push
mov
mov
push
aas
or
xchg
add
and
jecxz
adc
pop
mov
jns
out
in
xor
lea
or
pushf
push
pop
notb
rcrb
enter
cld
test
xor
and
ficomps
mov
mov
test
add
inc
fcmovne
sarb
fwait
out
shlb
xor
push
sbb
mov
lea
mov
push
sub
mov
andb
shlb
out
test
std
xor
pop
push
mov
jnp
mov
je
dec
and
inc
mov
add
xchg
add
outsl
pushf
jns
ss
daa
stc
scas
repz
rcrb
jo
mov
jl
imul
jmp
mov
inc
out
and
cmpb
imul
stos
jmp
imul
loopne
sub
popa
pop
sarl
mov
mov
in
fisubs
popf
fcompl
mov
in
call
sti
xchg
xchg
cmpl
or
lcall
inc
push
sbbl
xor
xor
xor
inc
out
xchg
xlat
jne
outsl
mov
dec
fisttpl
dec
xor
and
movsl
loopne
sbb
std
shl
sti
push
lret
adc
xlat
das
or
cmpl
outsl
pop
pop
jo
in
shrl
pop
xchg
aam
and
xchg
lods
inc
ja
and
sub
xor
cmpsl
scas
add
int
arpl
xor
xchg
and
mov
lcall
add
lods
push
shll
xchg
xchg
push
inc
cmpsb
mov
sbbb
pop
cmp
dec
pop
jecxz
call
fbld
push
dec
je
mov
insb
dec
xlat
xchg
adc
bound
pop
stos
mov
dec
or
movsl
jb
or
pop
test
stos
push
fbld
lds
push
jns
and
mov
mov
ja
and
adc
psubsb
enter
push
fldl
scas
add
sub
jg
minps
loop
push
push
je
testl
mov
mov
scas
and
inc
pushf
sbb
ret
fs
or
mov
addr16
cmp
xor
mov
ds
jae
mov
and
aam
out
fcmovnb
push
push
icebp
lods
pop
adc
call
cltd
fcoml
shrb
xor
mov
and
cs
jnp
ljmp
arpl
sub
or
iret
addr16
int3
push
cmp
adc
mov
mov
pop
pop
ret
iret
jo
pop
inc
push
mov
pop
js,pn
pop
jl
jb
mov
mov
mov
inc
enter
xor
pop
ficoml
cli
and
jb
dec
aam
push
mov
les
push
lock
aas
sbb
pop
repnz
mov
lds
loope
cmp
xchg
xor
mov
test
mov
sarb
or
jo
mov
js
jns
pop
sub
dec
pop
push
mov
mov
dec
cmp
pop
popa
ds
jns
repz
outsl
iret
shl
pop
cmpsb
inc
dec
cld
dec
mov
repnz
bound
pusha
ljmp
scas
mov
or
inc
pop
mov
xor
add
add
xchg
lods
outsb
xor
repz
leave
fidivrl
pop
push
aas
push
xor
or
rorb
jl
pop
xchg
aam
lods
pop
pop
mov
ljmp
daa
dec
jns
mov
dec
xlat
mov
xor
fsts
jo
rol
cmp
lea
mov
std
dec
iret
add
cmp
in
or
xlat
aad
pop
shlb
sub
out
cwtl
fdivr
daa
daa
mov
outsb
daa
jbe
aaa
and
cmpsl
lods
sbb
test
rorl
gs
lock
jns
shll
shrl
mov
in
add
pop
bound
mov
cmp
mov
xor
jo
scas
fidivs
js
push
adc
dec
notl
mov
mov
jmp
cmpsl
adc
push
push
pusha
sbb
lea
sbb
add
jle
loop
in
sbb
out
incb
aam
test
or
ret
repz
sbb
fwait
outsl
jo
rcr
stos
mov
sbb
sub
dec
inc
push
popa
xorl
jns
cltd
lds
pop
and
mov
jmp
pop
push
jmp
dec
xchg
mov
dec
das
push
xchg
dec
cmp
or
jns
mov
mov
push
lods
cs
xor
jmp
roll
sub
jno
imul
inc
cmp
mov
int
movsl
out
out
mov
int
push
aam
mov
pop
pushf
pushf
sbb
out
inc
sarb
fidivs
aaa
lock
popa
push
hlt
orl
pop
adc
incl
sub
roll
ja
lahf
neg
outsl
and
das
mov
fsub
push
sub
jno
and
jmp
push
scas
push
sbb
icebp
push
jmp
pop
fs
negb
lea
cmc
inc
push
in
aas
outsl
mov
enter
ror
aas
das
or
xchg
loop
lds
movsb
sub
nop
pop
dec
cmp
xor
xlat
mov
xchg
loopne
clc
lret
fldl
fsubp
xchg
inc
sub
and
and
adc
jecxz
outsb
pop
cmp
clc
push
test
leave
xchg
in
jg
insb
orl
int
xchg
xchg
cmp
call
sub
popf
mov
xchg
mov
and
mov
popa
mov
mul
pushf
loope
push
enter
lcall
shll
mov
and
push
adc
out
pop
sub
shl
or
add
aaa
jb
bsf
ja
xchg
mull
xor
clc
and
xchg
out
loop
test
jne
icebp
ss
dec
leave
inc
inc
ss
add
ret
jge
inc
js
addl
dec
adc
and
ljmp
arpl
sub
add
xchg
bound
dec
adc
cmpsb
sti
jb
jp
lcall
outsl
push
xchg
mov
imul
jb
mov
clc
test
mov
push
aaa
mov
xchg
lods
ficompl
and
add
jne
mov
sub
movsb
adc
jmp
rol
fs
mov
add
mov
call
addb
ja
xor
mov
rcr
sar
xlat
std
and
mov
add
js
out
mov
mov
xchg
sub
movd
mov
les
sub
out
stos
jmp
addr16
cmp
dec
or
lret
mov
je,pn
test
jg
inc
movsb
inc
iret
nop
mov
std
sbb
in
insb
loope
ds
push
push
push
dec
dec
mov
push
rcll
cmp
jo
rorb
sti
mov
fdivs
aas
xchg
sti
ds
cs
and
jmp
je
jne
pop
pop
and
rcrb
or
shrb
xor
sub
and
xchg
orl
add
inc
or
pushf
sbbl
aam
stos
inc
push
cld
sbb
leave
subb
data16
pop
out
es
out
push
popf
rolb
mov
xchg
aas
push
and
cmp
pushf
clc
pop
cmp
cltd
xchg
fidivrs
gs
cwtl
fstpt
xchg
sbb
fld
push
shrb
and
sub
dec
insl
repz
and
xor
add
push
mov
lods
mov
adc
xchg
jae
mov
lods
xor
popf
xchg
pop
pop
mov
sub
jne
and
mov
adc
out
out
push
movsb
dec
inc
sti
insb
jmp
sbb
cmp
xor
xchg
lods
xor
test
gs
popa
push
and
loopew
pop
sub
mov
or
ret
or
push
loop
jbe
dec
xor
inc
xchg
cli
pop
jl
push
fisttps
mov
xor
call
popa
pop
je
sbb
xlat
xchg
mov
xchg
dec
out
daa
mov
lds
stos
mov
or
loope
jle
xchg
leave
jb
mov
push
fiaddl
aas
or
fs
sbbb
xchg
sarl
push
cmc
ret
lret
sti
inc
fs
fldenv
jl
fsubl
pop
enter
sbb
mov
lock
mov
pusha
xlat
into
les
push
fninit
test
push
cs
fld
stos
sti
jp
xor
sub
popf
imull
ds
jo
movsb
mov
mov
es
add
push
fcomip
pop
and
xchg
outsl
rcr
pop
xlat
call
fdivrl
push
loop
sub
ja
sub
sub
fcomps
iret
cld
movsb
pop
push
cmp
xlat
fwait
pushf
aas
outsb
loopne
push
mov
lret
pop
movsb
push
push
fnstcw
dec
popa
push
fisubl
cmpsb
mov
push
dec
in
into
jne
into
out
scas
scas
cmc
mov
cld
rorl
sbb
cmc
std
inc
cmp
fbld
inc
pop
cmp
mov
add
and
mov
jno
xor
pop
push
xor
arpl
cltd
pop
mov
mov
sub
jmp
adcl
test
sub
inc
lret
inc
lock
icebp
mov
in
mov
xchg
mov
xlat
xchg
ljmp
add
pushf
movsb
and
stos
sarb
add
xor
mov
or
call
or
push
xor
add
adc
inc
dec
cmpsb
mov
sub
pop
call
mov
push
jne
push
jno
bound
jge
add
and
unpckhps
imull
xor
popa
sbb
int3
and
mov
iret
outsl
dec
out
ljmp
stos
fdivl
daa
les
mov
movsl
add
sbb
dec
push
and
jno
aam
push
lea
cld
mov
ret
inc
fisubs
push
xorb
mov
rorl
jnp
pop
cmp
adc
push
pop
cmp
out
and
jle
mov
mov
ljmp
mov
je
js
imul
cmp
hlt
stc
insb
jae
out
dec
xchg
arpl
mov
not
loopne
mov
jns
popa
cmp
or
call
inc
mov
xor
jns
xor
in
xchg
lret
pop
push
cwtl
sub
mov
jmp
rcrb
mov
fdivrs
xor
das
out
and
loope
sub
sbb
data16
lds
loop
cmp
dec
add
addr16
xchg
int3
and
jns
fsubs
pop
xlat
inc
pop
shll
mov
add
push
or
xor
sbb
cmpsb
cmp
mov
out
mov
xor
ja
adc
xchg
cwtl
or
rclb
rorl
xchg
push
pop
rcrl
xchg
mov
mov
and
into
cmpsl
add
and
scas
pusha
push
pop
push
scas
or
or
es
leave
addb
cmp
int
inc
push
mov
mov
stos
test
rclb
sbb
cs
out
or
inc
out
sub
out
jae
in
loop
or
ja
adc
sub
mov
jno
jnp
jbe
stos
cmp
mov
adc
in
xorb
jp
and
mov
movsl
adc
int
and
dec
lcall
lods
pop
add
inc
movsl
ljmp
dec
and
sbb
in
popf
out
sub
cld
xor
jp
pushf
dec
sbb
mov
pop
lds
loopne
jmp
xchg
sbb
fisubs
push
inc
fisttpll
jnp
in
and
daa
cmpsl
test
jb
test
rclb
adc
push
or
std
sub
fisubl
cltd
add
inc
and
cmp
addb
mov
shr
xor
pusha
lea
xchg
jae
pop
pop
xor
sbb
enter
in
ljmp
imul
xchg
orb
mov
xchg
pop
pop
dec
cmp
call
out
cld
out
out
pop
flds
in
sbb
pop
push
imul
cmc
in
repnz
and
xchg
in
jmp
rcl
xchg
iret
bound
cmpsb
jo
push
sbb
push
imul
ss
data16
out
stos
cs
int
addr16
dec
adc
cli
and
les
xlat
mov
lds
and
and
jmp
addr16
sub
and
int
push
insl
movsb
mov
sahf
jnp
xchg
out
test
ret
ds
sub
pop
mov
fcmovu
fldt
lret
pop
dec
xorl
or
sbb
xchg
out
or
out
outsl
dec
fidivs
or
sub
dec
call
loope
fldenv
mov
das
pop
orb
add
fbstp
xor
push
sbb
outsb
outsl
mov
addr16
inc
mov
ds
aaa
loopne
imul
lahf
and
sar
add
push
adc
arpl
adc
test
rclb
add
sahf
mov
loop
lret
inc
sub
jb
or
shr
sub
ljmp
or
mov
inc
pop
add
jbe
in
fisubl
xor
inc
std
aad
add
js
sub
in
push
mov
lcall
inc
adc
scas
jns
xor
push
or
icebp
mov
adc
xchg
push
jg
push
adc
add
sbb
nop
or
out
push
push
repnz
jg
loopne
mov
jae
xor
nop
jg
movsb
adc
loopne
int
and
push
add
or
or
aas
lea
loopne
add
out
xchg
dec
or
loop
cs
pop
mov
nop
inc
add
cmc
jno
inc
jge
cmp
jecxz
adc
jg
cwtl
push
mov
es
cwtl
mov
lock
jl
xlat
jo
cmp
pusha
mov
mov
mov
mov
xor
or
inc
sub
or
dec
jecxz
inc
shll
or
ljmp
inc
lahf
push
js
aam
sbb
lahf
sti
mov
push
sbb
dec
in
pop
pushf
jg
pop
sbb
enter
mov
out
jns
inc
and
mov
cmc
les
jg
push
cmp
cmpsl
jnp
xchg
stc
pop
testl
sub
leave
into
jne
bnd
push
inc
inc
pop
les
lds
cmp
ds
pop
jp
movsl
mov
out
outsw
bound
push
jmp
mov
jae
jg
fwait
xor
or
xchg
sarl
mov
das
aad
jmp
inc
mov
lods
repnz
sti
mov
les
cmpsb
cwtl
lods
leave
clc
jno
test
in
mov
lea
loop
and
add
cmpb
mov
mov
adc
pop
pop
insl
and
mov
cs
mov
mov
enter
imul
jecxz
lret
enter
dec
mov
xchg
sbb
sbb
and
loop
insl
insl
cmpsl
xchg
out
xor
insb
jns
stos
sbb
inc
es
dec
stos
add
push
mov
std
ss
gs
mov
pop
xchg
fidivrs
nop
dec
sub
call
sti
iret
pop
push
jbe
push
jns
pop
mov
mov
in
test
dec
arpl
loop
in
sub
mov
fadd
push
xor
jecxz
push
or
pushf
movsb
mov
cmp
add
mov
aas
dec
or
fdivrs
lock
jecxz
push
push
mov
or
sti
sub
popf
mov
add
ds
jmp
iret
das
stos
repz
movsl
mov
inc
pusha
popa
stos
dec
ret
dec
stos
mov
xor
lods
xchg
and
push
lock
mov
in
or
cmp
imul
jge
scas
pop
pop
rorl
xchg
mov
pop
negl
ds
shrl
pop
fistps
push
xchg
jge
or
xchg
mov
xchg
and
push
cmpsb
add
aaa
shrb
xchg
xchg
mov
nop
fldl
and
xchg
in
fxch
popf
outsb
test
push
mov
pop
loop
scas
pop
int
jp
or
or
pop
jnp
rorb
scas
sub
cld
imul
and
push
shrb
imul
jo
pop
sarb
cli
fldl
and
test
btr
fistl
add
aad
int3
xor
xor
test
or
adc
inc
pop
adc
shrb
sub
daa
scas
push
pop
ret
aas
sar
enter
cmc
pop
push
outsb
into
xlat
stc
dec
mov
adc
mov
pusha
cmpsb
sbb
bound
int3
xlat
lea
fdivr
aam
lahf
test
aad
insb
incb
dec
adc
nop
add
cmp
or
mov
enter
test
pop
leave
or
or
jae
lahf
add
sbb
fwait
add
jg
lret
int3
xchg
or
call
popf
sti
arpl
add
repz
dec
adcl
xchg
push
cmpsl
lock
imul
xchg
pop
or
and
inc
xor
sahf
mov
pop
sub
inc
imul
inc
fistl
pop
adc
or
cs
xorl
and
mov
lea
movsb
xor
inc
push
inc
mov
xchg
ficoms
out
dec
jne
and
sub
imulb
imul
inc
mov
cwtl
hlt
inc
sub
sub
pop
push
jg
push
jno
xor
pop
sbb
lret
mov
fsubp
and
push
pop
or
rol
mov
in
sbb
and
fcomi
mov
enter
inc
orb
jle
dec
sbb
sbb
dec
je
cwtl
mov
cmp
jo
mov
clc
jp
pop
mov
cltd
call
lods
sar
movsl
cld
or
mov
js
mov
sbb
add
lods
add
test
cmp
adc
fdivs
add
aas
dec
or
push
mov
das
and
adc
fwait
mov
sub
aam
insb
mov
out
push
xchg
push
dec
dec
arpl
cmc
in
inc
decl
add
nop
aas
mov
jmp
xchg
fwait
inc
lods
cmp
popf
loope
incb
aaa
idivb
fwait
mov
xor
outsl
jg
popa
in
test
push
data16
into
enter
cmp
pop
jo
cmpsb
push
mov
lods
je
mov
pushf
mov
xor
jns
decl
test
test
xchg
test
stc
scas
data16
dec
jo
dec
mov
cmp
dec
xchg
xor
jmp
test
and
aad
jmp
jb
scas
call
xor
mov
add
mov
push
out
hlt
hlt
inc
cltd
xor
pop
test
test
pop
ja
fimull
add
lds
in
into
inc
cmpsl
nop
int3
xor
xchg
xlat
stos
jl
cwtl
and
sbb
jg
sbb
mov
ret
mov
xlat
loopne
das
cs
outsl
scas
mov
jl
mov
scas
enter
and
mov
test
movl
dec
das
fidivs
imul
or
gs
sbb
in
add
loopne
cltd
ss
movsl
sti
outsb
add
sub
sbb
test
jnp
loopne
mov
and
adc
cld
pop
push
je
mov
dec
push
xchg
jge
jo
std
repz
test
sbb
mov
jb
inc
mov
shlb
jne
cmp
xor
xor
jo
shrl
mov
inc
cmc
lret
mov
test
sub
ret
pop
mov
push
hlt
out
inc
push
cmpsl
stc
xor
out
test
push
jno
push
ljmp
mov
sbb
sub
adc
or
mov
std
inc
mov
add
popf
fldcw
rcll
int3
cmp
sub
lretw
jmp
push
fs
aaa
mov
loop
mov
sbb
imulb
les
cmp
mov
mov
jg
adc
lcall
mov
push
lret
cmp
or
mov
cmp
inc
aam
and
push
push
dec
mov
inc
std
jge
movsl
mov
mov
xchg
xchg
push
inc
push
roll
js
sti
je
jge
mov
das
in
fs
pop
shl
jbe
pop
out
clc
jge
inc
subl
pop
cltd
or
hlt
stos
xchg
pusha
add
fwait
in
xchg
cwtl
sub
mov
push
jmp
call
add
or
mov
xchg
out
scas
xchg
xor
fstps
inc
notb
inc
repz
dec
mov
out
dec
fdivs
cwtl
scas
aaa
std
mov
or
ljmp
lds
iret
rcrb
out
movsl
outsb
adc
xchg
setge
sbb
pop
mov
data16
sub
es
fsubrs
shr
shrl
lahf
sbb
lret
ljmp
scas
xor
jle
popa
ljmp
aad
cmc
and
and
orl
cmp
mov
pop
jno
ret
xor
test
inc
call
mov
mov
jge
testl
jg
dec
inc
dec
sbb
jp
imul
pop
add
mov
pop
bound
xor
les
xchg
bound
mov
mov
in
outsl
pop
add
mov
aam
aas
movsb
and
ss
adc
xchg
cld
repz
mov
adc
loopne
in
hlt
or
icebp
mov
inc
stc
addr16
mov
mov
sahf
insb
mov
jle
xor
aam
inc
arpl
cmp
mov
fidivrs
lret
mov
lahf
or
mov
dec
cmp
int3
sub
loope
mov
cld
int
iret
cmp
lods
lret
mov
jg
jmp
stos
cmpl
ret
sub
loop
lahf
push
mov
pop
cmpsb
int3
add
and
daa
jg
in
loopne
out
int3
test
xchg
ja
push
sbb
pusha
dec
mov
rcrl
jecxz
cmpsb
cmpsl
jno
inc
test
scas
in
int
outsl
cmpsl
orb
pop
cmp
adc
inc
ljmp
lahf
out
sahf
in
rcrb
mov
add
nop
jae
cwtl
mov
icebp
cli
testb
push
lcall
scas
cmp
xor
jle
mov
pop
and
aad
int3
mov
jo
inc
cwtl
jp
xchg
pop
subl
adc
in
mov
and
in
lock
push
jl
push
cmp
sub
inc
shr
nop
xchg
push
mov
jmp
jle
cs
xchg
add
mov
push
out
lods
das
xchg
jecxz
std
sub
or
xchg
int
divl
cmpl
mov
cmp
stos
insl
call
ljmp
xchg
pop
inc
xchg
mov
lds
outsb
out
hlt
or
insb
lea
fmulp
cmp
arpl
xchg
jge
mov
jl
lret
cli
sub
xor
ja
out
mov
ret
pop
cs
into
jg
sub
sbb
add
ljmp
adc
pop
idivb
inc
pop
jecxz
int
jbe
push
bound
xor
sub
pushf
insl
mov
and
mov
sub
mov
andb
mov
or
xor
pop
arpl
or
leave
es
or
mov
cmp
or
inc
xor
mov
and
aad
out
jno
jmp
mov
push
xchg
dec
hlt
dec
or
cmpsb
stos
dec
clc
loop
scas
and
dec
outsb
mov
xchg
addr16
out
gs
rolb
and
rclb
mov
cmp
jg
out
xor
sub
push
jp
mov
shll
xor
jle
xor
gs
out
xor
xchg
inc
push
jge
mov
mov
sbb
cmp
jbe
outsb
xchg
cld
pop
mov
call
xchg
mov
divb
sub
jle
cmp
ja
popf
fsubrs
inc
stos
flds
push
xchg
sarl
shll
mov
mov
fs
xchg
ljmp
adc
enter
lret
aad
mov
sbb
lret
es
outsl
pusha
out
xorb
fnsave
insb
jecxz
loope,pn
iret
mov
inc
mov
xor
ss
out
mov
jno
shr
popf
sbb
bound
sub
inc
sub
arpl
test
je
das
mov
fisttpl
push
or
test
jae
cmpsl
imul
decb
jmp
or
mov
push
fmul
cli
push
pop
sbbb
leave
dec
dec
outsl
mov
cmpsl
adc
mov
insl
lret
fcoms
xchg
nop
sti
sbb
add
sbb
lret
mov
jecxz
out
pop
cmpsb
rcrb
movsb
sub
inc
cld
js
fmull
in
adc
mov
or
jo
mov
subl
pop
ffree
addr16
jne
jp
jmp
fnstsw
mov
mov
mov
or
jns
gs
xchg
inc
gs
fdivrs
fbld
loope
cmp
jecxz
hlt
xor
stc
pause
insl
rorb
pop
movsl
sub
scas
ss
sbb
nop
loopne
add
aaa
cmp
cmpsl
and
insb
inc
inc
ljmp
in
cwtl
lds
sbb
popa
jo
fisttpll
xor
adc
sbb
nop
enter
and
push
mov
pop
xchg
mov
fistl
nop
xchg
out
fists
mov
ds
in
mov
call
dec
lea
or
jecxz
cwtl
nop
sbb
cmpsl
div
mov
aas
shlb
xor
jle
and
int
adc
sbbb
xor
jb
mov
lods
mov
pop
and
mov
xchg
mov
shrl
das
out
fucomi
or
mov
mov
inc
je
in
out
add
push
aam
js
imull
push
pusha
push
gs
or
mov
jecxz
es
std
adc
xchg
sub
xor
dec
jp
jo
jbe
clc
jecxz
fmuls
lds
ss
stc
mov
cmpsb
pop
mov
cld
mov
adc
cmp
out
outsb
push
mov
push
and
fcoms
jp
xlat
mov
cwtl
sti
test
mov
loopne
aas
or
es
adc
jno
fnstcw
and
scas
in
and
ret
or
in
das
mov
mov
inc
cmc
add
pop
fidivl
pop
pusha
test
xor
ficoms
mov
push
mov
pushf
rorb
and
in
mov
push
mov
mov
cmpsl
bound
fnop
mov
cmp
mov
push
and
outsb
rorb
cmpsl
nop
cmpsl
and
fisubs
call
pushf
repz
push
pop
mov
push
sbb
or
inc
pop
mov
and
sar
mov
mov
daa
jle
add
push
jg
psrlq
sub
ret
xchg
push
inc
xchg
adc
sti
arpl
das
jo
jmp
inc
ss
add
out
inc
into
stos
jl
iret
aad
es
imul
inc
cmpsb
xor
cmp
mov
push
sub
sub
jo
push
inc
push
add
mov
aaa
add
lret
sub
xor
test
adc
aam
out
and
gs
push
dec
int3
cmp
mov
push
fdivrl
pushf
aad
hlt
loopne
cwtl
or
shl
adc
sub
mov
pusha
gs
dec
scas
mov
sbb
sub
orb
sub
pop
inc
daa
push
sahf
xchg
mov
lock
inc
mov
xor
cli
fisttpll
shll
jno
ss
shlb
lds
mov
cmp
push
je
shll
lock
lahf
iret
dec
cld
mov
imul
ss
repnz
out
mov
and
pop
mov
cmp
xchg
and
cmp
out
xor
inc
mov
jl
mov
adc
fdiv
xor
jp
lock
xor
es
mov
lret
out
jl
and
jnp
and
pop
jecxz
and
jae
lods
out
rcll
adcl
xchg
daa
aam
sahf
imul
xchg
lea
pusha
jnp
push
pop
jl
pop
or
popf
and
fmuls
cmp
movsl
rclb
mov
hlt
out
push
pop
and
nop
mov
dec
cmp
sub
mov
ss
mov
imul
dec
and
loopne
dec
sbb
aad
push
xchg
imul
les
push
movb
movsl
mov
mov
sbb
scas
xchg
xchg
push
add
popf
push
aas
mov
dec
outsl
std
int3
outsb
jb
dec
insl
xor
popa
or
in
aaa
dec
push
cmpsl
mov
mov
jle
push
das
mov
cmpsb
dec
push
mov
dec
jecxz
lods
cmp
dec
testb
jno
mov
jmp
test
std
cmp
mov
test
mov
jno
pmullw
pop
ret
pop
sub
mov
pop
mov
std
outsb
into
push
mov
jg
and
mov
aas
jo
bound
mov
dec
negl
rep
repnz
sbb
add
insb
das
mov
xor
outsb
shll
or
mov
mov
stos
out
mov
cwtl
or
mov
xchg
and
jnp
jl
sub
xor
push
pop
push
mov
mov
cmp
fadds
je
jecxz
shrb
push
fmul
mov
mov
jne
scas
xchg
fisubl
imul
mov
inc
mov
jo
or
mov
jae
pop
cmpsb
jne
mov
pusha
and
test
daa
or
add
mov
test
lahf
mov
cmp
jle
add
sbb
xchg
lods
add
jb
outsl
sahf
popa
and
cmp
jg
outsb
ja
mov
pop
jb
cmp
aas
push
rclb
popf
fiadds
dec
popf
mov
int
lods
inc
test
popf
jg
imul
xchg
push
pusha
adc
sarl
stos
cmpsb
dec
adc
mov
sub
xor
outsl
cld
jg
ret
and
in
enter
gs
rcll
out
rcr
dec
inc
push
test
ret
jg
popa
mov
insl
lret
out
test
mov
mov
aaa
lahf
push
in
movsb
iret
shl
call
cld
add
and
sub
negb
aaa
stos
movsl
sub
rolb
shld
or
ror
movsb
lcall
fnsave
nop
xchg
xor
push
andb
addr16
mov
inc
aaa
add
mov
testb
in
pusha
mov
and
cmp
adc
mov
enter
cmp
out
fdivp
sub
push
mov
fwait
mov
lret
cmp
lcall
loope
cmp
adc
arpl
ret
jg
ljmp
inc
xlat
movsl
mov
je
or
fstps
mov
fcompl
sbb
or
fld
xor
lahf
xor
sahf
jmp
adc
sbb
sbb
test
push
out
xchg
sbbl
push
push
xchg
mov
insb
jno
push
fiadds
pop
push
aad
cs
ljmp
dec
pop
and
aaa
sbb
cs
cmc
dec
paddd
shr
pop
ljmp
sub
gs
inc
add
scas
sahf
xor
iret
sbb
lock
je
and
adcb
push
add
nop
sbb
fnstcw
mov
push
lcall
jo
or
jno
xor
call
xor
cmp
gs
arpl
daa
imul
imul
fisttpll
or
lahf
pop
jecxz
push
adc
sbb
fmuls
fdivl
xor
inc
cmp
cmpsl
jg
adc
rorl
and
ljmp
lock
testl
dec
lock
cwtl
test
inc
cmc
push
movsl
outsb
loop
negl
int3
inc
into
add
sub
adc
dec
out
jl
movsl
mov
or
add
push
push
cmp
inc
push
lds
cmpsb
and
enter
pop
mov
jne
cmc
clc
gs
xor
or
hlt
mov
in
adc
sbbb
icebp
mov
ds
pop
lds
lcall
add
cmp
jmp
mov
mov
ds
sbb
js
dec
push
out
add
repnz
sbb
adc
imul
sub
inc
jmp
jge
in
incb
push
adc
sbb
ja
in
pop
clc
sarb
mul
xchg
out
mov
xchg
cmp
pop
cld
pop
mov
fcomip
ficompl
mov
dec
stos
pop
ja
testl
iret
pop
pop
xchg
or
fistps
xchg
fcoml
or
insb
adc
shrl
jb
adc
mov
ja
dec
imul
jo
fidivrl
cmp
bound
sbb
xchg
xchg
push
scas
xchg
dec
pushf
mov
movsb
rclb
ljmp
int3
gs
hlt
mov
mov
loope
mov
ret
sub
arpl
jo
sbb
xchg
ds
loopne
inc
add
mov
fdivs
fiadds
pop
stc
fidivl
mov
mov
cmp
int3
aad
or
imul
ja
insb
in
jmp
pop
pop
or
xor
and
sub
lea
rorl
add
fstps
je
or
filds
cltd
adc
pop
jb
and
leave
lods
daa
dec
lock
cmp
cltd
negb
addr16
add
out
stos
in
and
cmp
test
mov
add
push
ret
xor
pop
fldl
or
sbb
push
or
jo
inc
xlat
insl
daa
sti
addr16
sbb
das
jecxz
add
nop
inc
xchg
imul
or
xor
sbb
daa
mov
cmp
imul
sub
xchg
paddusb
inc
jne
fisubrl
ljmp
inc
mov
xlat
ja
and
pop
sub
out
xchg
jge
in
inc
in
out
jmp
dec
xor
push
sbb
sub
scas
sub
or
in
in
xor
cmp
push
mov
test
xchg
dec
es
outsb
aaa
add
in
outsl
lea
enter
cli
push
sahf
adc
clc
leave
dec
pop
dec
xchg
mov
jecxz
imulb
pop
xchg
fadd
test
imul
inc
iret
gs
jg
sarb
stc
in
xchg
mov
leave
cmc
stc
cmp
cmp
inc
pop
xchg
arpl
push
xchg
das
dec
negl
int3
pop
fnstcw
icebp
cmpsl
adc
lock
out
fidivrl
repz
repz
cmpsb
cli
pop
aas
lods
sbb
cs
mov
jg
sub
add
cwtl
mov
into
mov
jb
jnp
call
mov
xor
add
dec
das
jns
cld
repz
movsl
xchg
xchg
mov
shlb
dec
aam
stos
lret
lds
popf
xchg
cli
dec
xchg
outsl
clc
adc
dec
mov
jle
lock
or
and
or
rcrl
push
sub
fmuls
outsl
jmp
adcb
pop
lock
add
stc
mov
sub
es
cmp
popa
sbb
xchg
add
movsl
xor
stos
xchg
rcrl
into
mov
cmpb
sbb
lea
push
or
mov
cmp
pop
jbe
xchg
pop
mov
loope
fisttpll
mov
xchg
mov
shll
test
hlt
adc
imul
xchg
push
mov
or
sub
adc
mov
lds
sub
xlat
out
stos
jg
loope
and
pusha
inc
mov
cmp
repnz
cmc
or
insl
jo
add
dec
loopne
add
sbb
mov
mov
and
lahf
scas
push
les
fmuls
sbb
jmp
xchg
mov
xor
out
or
les
stc
or
incb
cmp
pop
fidivrl
call
pop
scas
mov
pop
lods
pop
mov
jmp
jg
dec
sbb
sahf
cmp
dec
shrb
sbb
ret
sbb
cmp
imul
enter
adc
or
sub
cwtl
mov
std
lret
enter
or
vmaxps
pop
sbb
jns
jge
insl
sub
out
jae
inc
mov
pop
and
icebp
adc
ja
push
jne
mov
mov
adc
test
out
push
adc
inc
repz
jp
or
test
cld
mov
cmpsb
in
xchg
ficoms
sbb
ja
orb
add
and
call
jmp
mov
and
pushf
push
pushf
loope
and
in
and
mov
push
inc
cmp
inc
and
mov
push
jl
shll
xor
xchg
sar
push
adc
jl
dec
stos
lret
por
xchg
arpl
pop
adc
push
test
sub
stos
pop
mov
out
add
jo
xchg
inc
bound
sub
adc
mov
push
jmp
loopne
pop
cwtl
pop
add
push
mov
hlt
add
test
fcmovu
lock
sbb
lcall
sbb
mov
or
out
clc
xchg
mov
ret
or
jno
cmc
mov
arpl
nop
mov
fdecstp
pop
imull
inc
lcall
rcrl
xchg
jp
dec
jno
mov
pop
pop
int
cmp
notb
push
mov
push
inc
inc
cmp
clc
cltd
jns
xchg
fstpl
stos
movsl
sahf
scas
sahf
stc
jecxz
flds
je
or
lret
pushf
cmpsb
xchg
dec
pop
jne
mov
sub
outsl
lods
push
mov
lods
roll
and
das
sub
lcall
sbb
cwtl
fbld
pop
adc
int3
movsb
sbb
mov
sahf
xor
adc
xor
mov
sahf
imul
xor
adc
xlat
hlt
lret
or
dec
js
movsl
add
cmp
in
or
imul
push
lcall
aad
or
jge
ss
jmp
jnp
insb
scas
push
les
out
int
mov
in
adcl
inc
or
lock
mov
adc
cmp
movsl
add
mov
ret
es
push
fs
mov
mov
ja
inc
pop
shrb
dec
scas
adc
nop
xchg
cld
xor
outsb
sbb
flds
rol
pop
push
sbb
iret
adc
pop
jne
pop
or
movsb
cs
pusha
call
or
js
cmp
mov
fwait
lods
je
aas
xchg
shll
pop
dec
add
xchg
inc
pusha
pop
in
bound
xor
mov
sub
mov
sbb
movsb
mov
addr16
dec
add
ljmp
enter
push
ret
insl
divl
pop
mov
and
and
dec
iret
xchg
jno
scas
into
xor
mov
xorb
xlat
xchg
push
pop
imul
mov
mov
adc
mov
add
je
adc
hlt
xlat
dec
cmp
sbb
sbb
and
mov
pop
insb
imul
jp
dec
adc
lahf
xchg
mov
xchg
sarl
push
xlat
add
fdivp
test
xchg
add
dec
and
sub
push
mov
push
cmp
lods
push
xchg
push
adc
mov
xor
pop
movsb
jge
jl
shll
sbb
jg
xchg
push
or
movsl
mov
adc
add
add
mov
sub
xor
sar
imul
mov
pop
mov
and
mov
sti
out
sbb
xor
mov
test
mov
push
xchg
clc
xor
stc
jp
pop
aas
pop
jl
imul
adc
cld
xor
cltd
test
test
pop
pop
mov
fs
pop
add
push
pop
insl
dec
fcomps
jno
dec
pop
jo
es
xchg
cmc
mov
daa
jecxz
add
sti
lods
mov
sub
xchg
icebp
repnz
xchg
dec
lds
and
bound
into
popf
sahf
clc
ss
std
ja
in
sbb
fmuls
rorb
inc
mov
ret
jp
in
jecxz
cld
cmp
mov
fisttps
xchg
cmp
inc
jns
push
mov
and
mov
add
mov
adc
mov
pop
inc
inc
xchg
xchg
sbb
rorl
out
mov
loop
rolb
jl
push
pop
adc
add
repnz
pop
inc
mov
test
in
mov
and
inc
dec
into
jno
mov
int3
fs
lret
fdivrl
mov
mov
in
jne
int
in
push
movsl
mov
aas
cmpl
jp
mov
outsb
add
jmp
add
push
jne
dec
cltd
inc
xchg
xor
sub
push
pop
mov
lods
xchg
adc
cmpsl
inc
sbb
sbb
cwtl
xor
xchg
out
sub
sbb
loope
cmp
pusha
mov
adc
cld
loop
sub
test
mov
jo
inc
mov
insb
adc
cmpsb
ret
sbb
rolb
loope
push
lds
ret
aad
inc
mov
cmpsl
enter
pop
push
xchg
jnp
int3
cmp
inc
mov
add
loop
fnstcw
in
lods
pop
ret
lock
jg
pop
cmp
jge
mov
xor
adc
lock
das
xor
push
xor
dec
ror
incb
lret
pop
ja
lahf
sub
popa
call
imul
push
aad
add
xchg
sub
jne
fistps
sbb
pop
adc
dec
lock
lahf
loop
push
push
in
pushf
in
mov
mov
and
adc
fildl
inc
jge
mov
xchg
repz
and
adc
pushf
adc
dec
adc
push
fistps
jb
mov
xchg
dec
pop
mov
sub
jle
mov
xchg
test
test
push
hlt
mov
dec
int3
dec
ss
cmp
xlat
xchg
scas
inc
adc
and
jno
inc
ljmp
repz
int3
in
ret
decb
dec
pop
fsts
pop
xchg
sub
dec
stc
inc
stc
sbb
out
cs
incl
je
push
hlt
xchg
out
das
es
dec
mov
leave
sbb
fcoms
fs
lret
xchg
mov
sbb
sub
cmp
lods
dec
popa
jmp
mov
jbe
push
jno
dec
jo
add
sbb
dec
pop
daa
stos
movsl
pop
mov
das
sub
jae
hlt
sahf
push
bnd
lret
jbe
rorb
dec
cmp
adc
xchg
adcb
adc
or
xor
xor
lahf
xchg
mov
xchg
sti
les
sbb
in
xchg
stos
adc
xor
lahf
shl
sub
enter
add
je
mov
rorb
mov
pop
dec
add
cltd
fs
mov
xchg
stc
mov
push
cmp
xor
push
loope
mov
mov
mov
mov
pusha
mov
lahf
jmp
in
subb
jb
add
shll
jp
mov
in
lds
and
test
orl
jge
sub
aaa
and
lods
jns
ljmp
outsb
fld
and
lea
dec
inc
fisubs
js
sub
sub
mov
fcom
push
ljmp
cmc
es
lahf
xor
cmp
lea
ljmp
push
in
push
push
jg
cld
stc
jl
mov
pop
test
mov
nop
jnp
out
mov
stos
add
and
in
mov
daa
outsb
push
adc
pop
int3
mov
hlt
cmc
jnp
add
test
pop
movsb
sub
stc
sbb
mov
inc
inc
out
scas
mov
pop
sub
add
cld
pop
insb
lds
addr16
mov
sbb
fsubrs
jnp
stc
adc
lock
ss
jns
jecxz
pop
sub
inc
cmp
dec
push
xchg
push
in
xchg
cs
fs
mov
gs
lahf
imul
push
xchg
xchg
enter
neg
xchg
in
jp
rcrl
cmp
fcomps
mov
mov
sbb
pop
cmp
lahf
xor
mov
fistpl
je
xor
aad
ret
xor
sti
dec
ljmp
ss
mov
dec
icebp
ret
lret
sbb
inc
pop
fwait
movsl
cmp
negb
pop
pop
xor
jge
test
popa
dec
push
dec
shll
adc
cmp
push
pop
sbb
leave
data16
je
in
daa
inc
aad
xor
lods
stos
sub
jno
inc
inc
mov
jne
bound
jbe
movsl
inc
xchg
mov
mov
mov
mov
nop
adc
in
nop
mov
pop
or
or
ljmp
int3
aas
adcb
imul
insl
inc
xlat
int3
test
pop
in
sahf
dec
sbb
pop
clc
inc
cltd
dec
sbb
pushf
sbb
and
adcb
sub
adc
mov
sub
jo
lret
cmp
and
cmp
stos
cmpl
daa
cmp
inc
icebp
dec
cli
pusha
dec
ja
adc
xchg
es
out
sbb
in
jl
fs
and
push
aad
pop
jnp
add
sbb
pop
test
mov
enter
push
loopne
inc
aas
cli
pop
loop
sbb
pop
lcall
xchg
push
and
daa
mov
inc
test
sbb
popf
add
pop
pop
dec
je
int
pop
xorl
lods
lahf
filds
aaa
test
subl
pop
fst
push
in
jp
lods
mov
cmp
outsl
dec
xchg
fildll
sub
js,pt
add
cmp
cmp
push
ja
mov
imul
mov
pop
jge
outsl
movsl
xchg
fistl
xchg
rcl
enter
loopne
outsb
xlat
sub
invd
and
pusha
cmp
daa
mov
in
jecxz
rolb
nop
add
pop
add
insb
mov
sbb
jecxz
enter
xor
int
push
fistpl
xor
cwtl
loope
sub
movsl
and
sti
dec
cmpb
lods
cmp
repnz
fistpl
add
dec
inc
adc
mov
ja
stos
mov
insl
push
cmp
xor
adc
test
outsb
dec
cli
adc
pop
les
sbbl
xchg
incb
dec
cmp
sbb
sbb
dec
jnp
xchg
mov
mov
or
fnsave
loop
jle
xor
jnp
aam
cmp
push
out
mov
frstor
mov
repnz
fs
adc
pusha
xchg
lahf
push
nop
rolb
cwtl
cmp
test
sub
cltd
ss
mov
dec
sbb
adc
and
jg
mov
jmp
in
cld
stos
mov
push
lahf
xchg
sub
jo
xchg
aas
test
inc
fadd
sbb
and
xchg
rorl
mov
mov
cmp
adc
mov
push
fcomps
pop
or
clc
addl
lret
fistps
lcall
pop
inc
imul
test
jnp
adc
add
xlat
jmp
xor
adc
xchg
les
lds
lea
jmp
cs
aaa
adc
jge
add
ljmp
addr16
fxch
dec
cmpsl
adc
scas
push
call
mov
hlt
cmp
popf
iret
aaa
dec
mov
outsl
mov
jnp
cs
or
cmpsl
jbe
outsl
push
push
in
jmp
pop
sbb
movsb
dec
pop
add
popf
jae
push
pusha
sbb
daa
mov
or
sbb
fiadds
jl
xorl
jmp
dec
in
push
mov
or
xchg
mov
in
insl
ret
mov
lods
leave
sub
insb
jno
pop
add
insl
mov
cmpl
xchg
add
leave
dec
sub
bound
test
pushf
setg
enter
leave
and
push
fstl
push
sbb
js
scas
in
out
mov
pop
cmp
pop
call
jle
add
repnz
xchg
cmp
nop
dec
lahf
ret
jmp
and
xchg
push
test
stos
xchg
sub
xor
xchg
sub
push
dec
mov
sbbl
and
dec
xchg
cmp
addl
test
mov
xor
xchg
push
out
push
into
xchg
pop
pop
test
push
mov
sub
push
mov
ljmp
stos
inc
lea
xchg
pop
and
sbb
fwait
inc
dec
lods
sti
adc
mov
test
mov
scas
bound
pop
push
lret
in
mov
cli
xor
lcall
jecxz
ror
xor
enter
int3
in
mov
sbb
xchg
clc
sub
dec
inc
arpl
and
mov
inc
ja
test
cld
dec
in
subb
xchg
push
inc
das
inc
adc
movsb
xchg
rclb
neg
cltd
jl
aaa
mov
neg
and
aad
hlt
stc
shll
mov
push
add
rclb
dec
hlt
sahf
push
fcoms
std
xchg
push
jb
and
mov
aam
push
sahf
ja
pop
bnd
sahf
movsb
jb
push
push
ret
push
sbb
ret
int
mov
out
je
push
je
clc
pop
mov
push
insb
outsl
repnz
inc
cmpsb
lret
mov
dec
addb
mov
imul
xor
push
xchg
push
xchg
sarl
test
rorb
inc
imul
inc
push
jne
and
ds
lcall
int
leave
xor
clc
xchg
mov
lret
inc
pop
out
cmc
pop
addr16
hlt
adc
subb
push
das
adc
jno
inc
or
mov
ret
jnp
jns
and
das
dec
jp
add
pop
decb
rcll
mov
lret
stos
pop
ja
call
fnsave
inc
out
push
sbb
mov
xchg
adc
pop
mov
aas
push
mov
das
inc
shrl
mov
das
and
test
add
insl
shr
and
gs
xor
andb
xor
loop
sbb
sbb
aas
push
stos
imul
mov
lret
pop
out
idivl
out
jge
pop
xlat
mov
stos
jl
xchg
ret
fnsave
mov
xchg
pavgw
setb
int3
sub
jnp
fucomip
outsl
je
mov
and
add
dec
adc
and
jnp
push
call
pop
and
push
cmp
aaa
push
or
lock
sti
mov
cmp
add
sarb
and
pop
mov
sub
add
psubd
and
shll
push
add
fstpl
fisubs
lret
push
and
add
in
mov
arpl
roll
mov
or
clc
cmpsb
es
mov
inc
inc
jbe
test
test
out
dec
or
gs
push
jmp
data16
pop
pop
jo
pushf
jmp
jnp
cld
pop
push
mov
outsb
jmp
mov
jne
jecxz
test
adc
out
jge
out
push
lea
add
imul
and
xchg
loope
cmovne
out
sbbb
dec
pushf
iret
rolb
cld
xor
inc
sbb
adc
rcr
add
add
fisubl
push
xchg
cld
das
lret
push
pushf
jae
mov
fiaddl
ss
jne
sbb
sub
test
inc
add
dec
jbe
xchg
repz
fwait
bound
lret
adc
sbb
mov
xchg
pop
fldt
xchg
sti
adc
fisttpll
in
imul
cmc
inc
add
jo
push
lcall
test
mov
cltd
hlt
dec
rorl
mov
push
push
xchg
movsb
gs
xchg
xor
ja
add
inc
add
test
int3
pop
rcrl
test
xor
sbb
mov
xor
jg
or
stos
inc
insb
setns
jl,pt
mov
jge
push
jp
movsl
fcoml
fs
ja
and
popf
push
rclb
sbb
negb
mov
dec
mov
shlb
push
pusha
clc
pop
orb
pop
test
aas
out
hlt
and
cmp
cmp
xor
mov
pop
lea
push
xor
ret
push
outsb
jbe
pop
lea
lock
push
out
dec
cs
fadds
inc
loop
ljmp
insb
loop
mov
adc
xlat
pop
adcl
je
push
pop
push
maskmovq
divl
icebp
iret
out
clc
das
pop
xor
lods
xor
lcall
jle
in
popf
mov
out
mov
ds
fnsave
aaa
xor
out
or
enter
je
mov
or
iret
lcall
lret
cmpsl
aad
cltd
daa
fisubrl
xor
mov
cmp
ds
jp
add
cli
push
mov
xor
jmp
or
push
inc
pop
loop
add
mov
mov
aad
je
iret
mov
notl
or
xor
pop
sub
and
push
out
cmp
fcmovnu
jecxz
or
sub
adc
mov
or
adc
adc
fistl
gs
loope
cltd
ljmp
xchg
mov
or
or
cli
or
ss
sbb
insb
sub
roll
ss
mov
mov
fiaddl
imul
jge
jnp
mov
lret
sbb
lods
dec
inc
stc
in
xchg
mov
dec
in
sti
imul
popa
sbb
aam
flds
jo
enter
hlt
xor
mov
hlt
cld
sub
cmpsb
pop
push
mov
adc
dec
in
call
into
movsl
pop
cs
cmp
xor
arpl
mov
mov
loop
xchg
jmp
push
aad
scas
or
in
bound
xor
xor
fadd
and
scas
test
lods
daa
push
sbb
mov
cmp
mov
repz
popa
fsubrl
int
xchg
test
das
fsts
test
or
xor
out
aaa
cmp
sbb
xor
dec
sub
pop
mov
jmp
mov
mov
hlt
push
mov
mov
and
mov
mov
mov
es
mov
jle
testl
sub
iret
mov
test
jl
and
jnp
imul
in
sub
ret
push
out
mov
inc
in
ror
mov
jns
xchg
icebp
xchg
xor
adc
push
add
or
mov
rcll
mov
loop
mov
cmp
hlt
or
adc
ficoml
les
jge
pop
aam
js
push
icebp
out
fdivrs
inc
mov
jl
fs
fs
xor
sub
pop
daa
aam
mov
xchg
testb
mov
stc
xor
dec
push
xorl
inc
cmp
mov
jo
aas
fisubrs
add
adc
and
aad
inc
loopne
ret
cli
inc
mov
cmp
xchg
xchg
pop
xor
lea
and
inc
and
into
dec
push
cmp
scas
aas
adc
adc
inc
daa
arpl
movsb
aas
inc
xchg
mov
dec
call
mov
fistpll
mov
and
std
cmp
xchg
mov
dec
add
sti
push
jp
and
cmp
sub
jbe
dec
shll
jae,pn
and
lock
dec
xor
add
data16
outsb
je
mov
mov
mov
std
cld
mov
jl
shr
inc
add
jp
mov
enter
mov
inc
pop
bound
pop
pop
jb
in
sbb
arpl
in
ja
and
and
icebp
mov
cs
pop
adc
into
lea
mov
notl
pushf
test
mov
addr16
aaa
sub
inc
mov
sub
aaa
or
mov
mov
movsl
cli
jb
fs
testb
imull
stc
aaa
repz
popf
and
dec
sbb
icebp
jp
xor
adc
iret
fadds
iret
pushf
xlat
sub
ljmp
sbb
int
scas
dec
mov
icebp
outsb
sbbl
add
jg
je
ret
xchg
mov
mov
fwait
int3
pop
jl
lock
xchg
arpl
pop
cld
mov
or
xor
lret
add
mov
pushf
inc
adc
add
sub
fnstenv
loop
fistl
mov
mulb
cmp
inc
mulb
pop
push
mov
lcall
daa
ffree
dec
push
jb
movsb
aad
push
ja
sti
popf
iret
add
movsl
and
aas
ficoms
or
ljmp
inc
aas
jg
cwtl
sub
je
and
rcrl
pop
jo
inc
shll
addr16
cmp
repz
mov
xchg
add
add
inc
jg
je
sub
cmp
lret
test
lods
bound
xor
xorl
mov
out
pop
mov
std
cmp
int
push
or
mov
sbb
mov
clc
jmp
pop
adc
jno
sub
mov
fucomp
mulb
push
fistpl
cmp
xchg
in
and
fcompl
add
add
test
inc
xchg
push
pop
mov
daa
fsubs
enter
mov
xchg
xor
popf
loop
subl
push
test
mov
out
inc
jp
push
ds
push
mov
out
sub
mov
push
leave
xor
in
xchg
psubw
popf
shlb
cmp
mov
jns
jo
jo
cs
pushf
loope
in
mov
fs
lods
cmp
push
add
xchg
adc
push
xchg
jne,pt
jns
sbb
mov
adc
mov
and
jg
pop
adcl
les
mov
mov
test
rcll
jecxz
or
adc
and
mov
lret
cwtl
inc
adc
or
jbe
mov
out
lret
in
ret
js
cld
adc
ficompl
and
fdiv
or
addr16
mov
jb
jg
mov
gs
stc
lods
cmpsl
ret
pop
mov
mov
inc
mov
mov
movsl
cmp
adc
in
and
xchg
pop
jg
insl
pop
mov
outsl
into
in
mov
mov
cmp
lods
mov
mov
lods
popa
icebp
mov
imul
test
ljmp
sbbb
out
stc
arpl
hlt
mov
cmp
dec
outsl
stc
push
or
aas
js
in
sbb
jmp
pop
adc
inc
mov
inc
mov
jbe
stos
cwtl
dec
inc
hlt
sbb
pusha
xor
jns,pn
adc
jl
adc
jl
mov
dec
and
sub
test
bound
jb
sub
cwtl
jbe
jae
shl
lods
test
xchg
mov
sbb
fistps
cmpl
sbb
mov
sti
outsl
shr
jnp
push
in
add
jb
pop
rorl
dec
mov
sahf
cmpsl
mov
pop
mov
fcompl
xchg
mov
stos
xor
xchg
ret
shrb
in
pop
pop
xchg
cld
add
ret
lods
add
out
mov
mov
popa
movsb
mov
insb
fdivr
lods
int3
loope
in
hlt
repz
cmpsl
rcr
daa
out
adc
jl
and
add
sti
jno
cmp
test
sahf
add
repz
sarb
out
sub
adc
pop
into
shl
out
rcrl
outsb
js
mov
movsb
stos
xchg
xor
pop
mov
add
jmp
enter
fisttpl
jge
jno
nop
mov
iret
lahf
inc
mov
fs
xor
cmp
inc
arpl
xchg
stos
shrb
rcl
ds
jb
sbb
stos
aam
popf
cmpsb
jmp
xchg
mov
jb
jmp
cmp
sbb
clc
xor
cmp
jmp
jg
inc
mov
mull
test
adc
push
je
nop
sub
cmpsb
ljmp
xor
daa
push
jl
cmpl
mov
adc
add
add
pop
ss
sbb
push
dec
das
idivb
ss
iret
repnz
lea
and
fdivr
inc
push
popf
fstps
jno
fmul
push
jo
bnd
mov
cmp
icebp
push
pop
mov
lea
pushf
and
jb
sub
dec
jmp
jmp
push
push
stos
stos
inc
jmp
mov
testb
sub
push
push
add
stos
jnp
addr16
add
test
ss
shlb
leave
jg
movsb
inc
insl
or
ja
dec
movsb
xchg
push
sub
mov
lahf
mov
pop
dec
sahf
dec
enter
dec
xor
imul
or
or
jns
ss
mov
pop
jmp
jns
incb
scas
adc
fisttpl
xchg
shlb
pop
cwtl
mov
fs
mov
mov
shll
adc
dec
sbb
add
out
lahf
jo
mov
sbb
adc
sti
xchg
jbe
insb
add
in
mov
dec
jne
shll
push
imul
call
lods
pop
sbb
and
jl
ss
xor
xor
push
jbe
rorl
mov
pop
aad
cmp
lock
jmp
sbb
sbb
fisubrs
ljmp
cmp
dec
or
xor
sbb
xor
fwait
inc
subb
pop
shrb
shrl
push
mov
shrb
es
testl
sbb
push
sbb
mov
sbb
push
sub
loop
mov
movsb
ljmp
lahf
sub
clc
lcall
lods
mov
rcr
jo
cmp
xchg
sub
ss
inc
clc
fistl
jg
pop
mov
inc
ljmp
popl
pop
hlt
xor
mov
fucomi
xor
leave
pop
mov
arpl
fdivrs
pop
lret
xor
xlat
sbb
arpl
mov
in
sbb
imul
xchg
dec
ja
shrb
cmp
cmp
pop
mov
or
sbb
inc
loopne
je
sbb
hlt
dec
arpl
mov
cltd
adc
and
call
cld
xchg
sub
lea
arpl
add
and
jg
sahf
scas
nop
cltd
imull
enter
idivl
daa
stos
mov
lahf
or
arpl
scas
xor
test
or
out
fucomp
out
leave
xchg
jo
aas
cld
lea
or
push
sbb
or
jo
or
test
lock
pop
sbb
es
in
cmp
mov
xor
int
adc
pop
enter
fst
and
pop
push
cmpsb
add
jmp
imul
idivb
mov
add
pop
inc
sbb
fiaddl
dec
sbb
aas
popf
mov
adc
pop
fwait
gs
in
loopne
lea
or
add
cwtl
mov
add
mov
jo
adcl
inc
mov
pusha
sub
lcall
hlt
pop
dec
aas
mov
lret
popf
es
movsb
sub
mov
pop
fs
dec
fiaddl
add
push
adc
popa
and
or
add
push
outsb
jbe
fidivrl
dec
pop
in
sbb
das
pop
fcmovu
imul
sub
jbe
std
mov
add
jl
fistps
bound
aaa
push
addl
jmp
mov
pop
cmp
repz
inc
push
fisubs
stos
add
addr16
push
mov
cmp
jmp
and
sbb
lcall
int3
arpl
or
out
ret
adc
sub
sub
loop
xlat
enter
pop
movl
dec
cs
in
add
mov
je
fdivrs
or
xchg
xor
pop
pop
pop
sbb
mov
rcrb
sbb
xchg
pop
sub
dec
outsb
xor
enter
orb
cltd
sar
mov
sub
jne
int
add
dec
dec
sbb
leave
mov
scas
dec
xor
xchg
mov
xor
sbb
sbb
sbb
sbb
jne
das
dec
cmpsl
xor
add
rcrl
adc
or
test
jle
test
pop
cmc
inc
pusha
sub
out
movsb
frstor
xor
jnp
sti
inc
testl
stos
xorb
add
fcomps
mov
cmpl
add
mov
stc
mov
iret
xor
cmp
adc
popf
sbb
sbb
iret
push
cmp
mov
push
dec
pop
jno,pt
std
popf
xor
jecxz
les
mov
test
outsl
outsl
xchg
mov
inc
scas
lods
xchg
lea
inc
sbb
and
mov
leave
ss
movsb
loopne
jo
xor
add
mull
sub
mov
pushf
sub
int3
push
mov
mov
je
jb
ljmp
bound
fwait
sub
dec
cmpsb
sub
xor
loop
pushf
rcrb
daa
jo
addr16
les
push
inc
std
or
sbb
xchg
add
sbb
loop
divps
into
push
jmp
movsb
cmovnp
dec
jmp
xchg
or
out
pop
ljmp
inc
cli
sbb
and
push
cmp
push
dec
xor
test
adc
es
xchg
xchg
and
aam
lahf
push
hlt
cwtl
mov
xchg
stc
jae
jecxz
inc
mov
pop
and
mov
fnstenv
adc
mov
ret
fdivl
jb
cltd
cmp
hlt
fdivrl
adc
dec
dec
xor
cmp
aas
xchg
sub
adc
or
aaa
adc
lcall
mov
fldl
mov
pop
nop
mov
imul
lods
mov
push
out
test
mov
out
leave
inc
xchg
xchg
pop
fbstp
xor
mov
or
test
sub
into
push
fninit
adc
pop
pop
cmp
cmpsb
shrl
cld
pop
scas
sub
and
lcall
cmp
add
fwait
orb
test
mov
mov
push
cwtl
push
dec
cmpsb
cmpsl
add
add
inc
jl
popa
or
fiadds
jo
mov
shl
je
sbb
aas
cmp
lods
inc
sbb
adc
fisubrl
pop
fnstcw
aas
mov
xor
adc
arpl
jmp
aad
mov
add
jmp
mov
outsb
pop
stos
sar
lds
lds
cmc
js
cmp
jne
sbb
and
pop
aas
sub
sbb
test
icebp
and
mov
add
xor
jo
sub
dec
mov
jae
sbb
idivb
pop
lahf
jl
jg
mov
pop
popa
cmp
jle
fisttpl
xchg
ficoml
push
jmp
pop
mov
and
xor
sbb
dec
and
jle
cmp
pop
ret
leave
sbb
cmp
dec
lret
mov
sbb
jno
cmp
loope
and
aas
push
jg
gs
mov
sahf
inc
xchg
in
fdivrs
mov
repnz
and
rolb
adc
icebp
gs
clc
les
cld
add
mov
test
fidivrl
adc
add
sbb
and
add
and
xor
cli
sahf
je
push
jle
jae
mov
or
add
cmp
dec
push
or
sbb
leave
sbbb
mov
and
negl
add
cwtl
mov
aaa
ja
mov
lock
jnp
lret
int3
xchg
xorb
push
mov
push
jbe
cli
xor
fs
push
jb
hlt
or
cmp
jp
jp
movsb
ret
jp
repz
fnstenv
pop
xor
shlb
mov
xchg
lret
sub
pop
and
dec
mov
push
int3
pop
mov
fldcw
cli
dec
xor
xor
adc
pop
leave
bound
jno
cmp
and
ds
push
lret
pop
push
addr16
mov
dec
pushl
imul
imul
cld
cmpsb
popf
sbb
mov
ret
pusha
std
bound
xor
loop
movsb
xor
pop
xchg
xchg
jbe
xchg
push
pop
pop
mov
cmp
shrl
and
pop
lcall
dec
sbb
add
lds
test
cmp
pop
sbb
inc
faddl
push
sbb
clc
mov
xor
jno
leave
ljmp
add
mov
pop
lcall
roll
push
mov
enter
aaa
jbe
and
loopne
lsl
mov
and
push
sbb
in
mov
adc
stos
lcall
sub
fwait
lcall
outsb
ss
cmp
cmpsb
cli
inc
fwait
push
mov
mov
inc
or
loop
stc
cmp
fucomi
cltd
push
insb
push
and
or
pop
pop
mov
and
aas
inc
fs
mov
aad
dec
xchg
add
jnp
arpl
into
pop
sti
and
scas
movsl
adc
or
and
dec
xchg
ja
fucomp
das
lock
pop
fldt
sub
dec
jb
nop
sub
mov
out
or
and
push
mov
aad
jns
cmpsl
mov
jb
repnz
ds
sahf
sbb
sarl
cli
leave
adc
dec
daa
adc
or
xchg
outsb
add
ret
jg
test
pop
lods
int
scas
fnstenv
xchg
cs
cmp
cs
je
and
xor
pusha
mov
scas
mov
push
inc
mov
sbb
ficoml
dec
mov
ret
xchg
lret
dec
cmpsl
jle
adc
in
mov
adc
aam
push
pop
jnp
sub
pop
sti
pop
mov
repnz
ret
test
sub
repz
aam
cmp
add
psubq
xor
push
pop
enter
lahf
xchg
stc
xor
iret
xor
push
loopne
ss
mov
xor
cmpsb
mov
xchg
mov
loope
cld
push
xchg
pushf
xor
mov
dec
xchg
stc
lods
cmc
shrl
dec
push
popf
icebp
mov
adc
jns
add
xor
mov
xchg
sbb
scas
daa
inc
and
adc
imul
clc
cmpsb
sub
and
push
int3
stc
adc
jo
lds
lea
loopne
hlt
xchg
rorb
push
dec
xlat
mov
adc
inc
rol
mov
and
pop
imul
pop
sbb
xor
jle
je
fsubr
xchg
cwtl
cmpsb
leave
scas
mov
push
and
pop
lret
arpl
into
xor
sub
pop
sti
pushf
addr16
jno
mov
cmp
sar
imul
pusha
push
push
and
lret
jne
pop
jle
test
add
je
fwait
lods
pop
loopne
mov
push
mov
ljmp
lahf
setbe
xchg
mov
repz
aaa
lds
pop
fmuls
ljmp
cmp
lea
pop
sbb
call
les
dec
lret
out
xor
adc
mov
add
sbb
js
stos
leave
je
mov
and
sbb
push
inc
pop
mov
ljmp
fdiv
xlat
mov
jge
stc
or
addl
into
pop
fcmove
sbb
pop
jp
or
cli
adc
scas
mov
test
add
inc
jno
pop
repnz
lahf
das
inc
sbb
and
sub
mov
test
in
dec
je
mov
dec
jp
and
shrl
lock
jbe
fidivrl
sbb
push
jg
jl
inc
mov
jno
insb
mov
mov
lret
sbb
imul
sarb
add
cmp
repnz
sti
divb
shr
jmp
enter
lret
sub
or
fdivl
cld
or
fstps
orl
cmp
scas
movsl
rcr
push
sti
inc
lods
jbe
lods
xor
xor
push
xor
xor
sbb
cmp
cmpsb
test
adc
xor
sahf
mov
mov
sbb
push
sub
sti
cmp
jmp
inc
lock
or
pop
and
push
test
daa
movsb
scas
insb
in
lret
pop
insl
in
ss
gs
xor
and
sub
popa
adc
jge
add
and
xor
xchg
sbbl
outsl
pop
das
add
jo
lods
loope
inc
popa
sub
pop
dec
push
and
ja
lcall
or
inc
pushf
lods
and
add
aaa
xchg
xchg
arpl
add
mov
daa
testl
adc
dec
pusha
aas
xchg
enter
fisubl
and
or
xchg
jo
xor
call
jecxz
inc
ret
mov
cmc
addb
stc
into
ss
jb
fwait
dec
movsb
fcomip
into
out
hlt
ret
testl
out
sbb
sahf
cli
sub
dec
popf
ljmp
and
insb
or
shl
repz
test
cmp
rcll
jecxz
jle
jae
mov
hlt
inc
shrl
mov
xor
mov
ja
pusha
sbbl
jno
cmp
repnz
pop
dec
jnp
stos
mov
cmp
pusha
add
jb
mov
rorl
fincstp
ret
ja
mov
xor
mov
add
cmp
push
shlb
xchg
ret
movsb
outsb
les
movsb
rcrb
mov
hlt
bound
nop
sbb
sbb
mov
subl
mov
std
inc
mov
lahf
sub
mov
sub
fistpl
mov
pop
sti
mov
sbb
nop
in
arpl
lods
lret
sub
in
push
sbb
sti
fiaddl
jmp
push
push
mov
test
cli
and
in
pop
or
sbb
sub
mov
add
add
aas
std
les
xor
ds
jno
arpl
mov
insl
cmp
data16
aas
daa
scas
out
andl
out
jnp
fstp
stos
pop
xchg
in
fcomip
mov
mov
xor
fninit
jecxz
or
scas
pop
scas
push
or
lock
addb
mov
mov
ja
aam
sbbl
scas
or
xchg
inc
pop
push
sbb
push
faddl
jecxz
sbbl
mov
outsb
jae
pop
leave
inc
jno
pushf
clc
mov
pop
into
mov
xchg
mov
scas
stos
in
sti
cmpsb
sti
add
iret
jecxz
fadds
negl
mov
sub
mov
shll
pop
movsl
adc
into
repz
lods
pop
in
icebp
sahf
mov
fimull
and
mov
ret
jne
xchg
or
mov
rolb
add
lret
and
jnp
adc
mov
dec
es
sarl
xor
sbb
shrl
cmpb
repnz
int
mov
cwtl
xchg
in
inc
or
inc
pop
hlt
sub
adc
ds
pop
cmp
in
jmp
sub
add
cmovae
adcb
add
cs
mov
andb
nop
xchg
mov
cwtl
out
outsb
pop
jb
outsb
pop
cmp
jo
and
mov
mov
xor
movsl
dec
pop
sbb
mul
xor
mov
je
and
cmc
ljmp
outsb
mov
jmp
fldt
mov
arpl
test
push
in
bound
sub
fcoml
test
mov
sub
xchg
mov
mov
sbb
pop
lret
and
lock
movsb
xchg
pop
mov
sub
and
cmpsb
pop
inc
pop
fs
pop
mov
xchg
mov
icebp
lods
cs
add
xchg
jne
test
inc
pop
pop
sarb
mov
mov
inc
sub
add
add
rclb
loopne
xchg
sub
sahf
sti
mov
test
std
sub
lds
sahf
movsl
jl
mov
mov
cmp
out
test
jnp
add
loope
and
adc
inc
jge
jnp
inc
and
jmp
xchg
inc
or
hlt
stos
pop
xor
sub
decl
push
mov
inc
jo
stc
aam
push
int3
push
fnstsw
pop
cmpsl
adc
sti
jg
xchg
add
sbb
or
and
ret
add
loopne
cld
insb
ret
inc
shrb
cmp
or
xor
sbb
mov
ja
xor
mov
xchg
push
xor
cmp
pop
mov
lds
ret
sbb
jmp
fstpt
jmp
xlat
test
insb
add
daa
cmp
xor
jp
jle
jns
repz
sub
sahf
in
lea
push
mov
call
scas
repnz
cwtl
subb
push
lock
mov
mov
and
pop
out
jl
scas
out
add
or
ret
push
shrl
sub
xchg
and
mov
dec
mov
xchg
gs
int3
dec
mov
lret
pop
cmpsl
dec
std
push
jns
outsl
in
adc
in
push
push
lock
nop
test
aas
pop
lret
loope
cli
fistl
mov
mov
or
dec
sbb
xor
dec
test
pop
sub
pop
outsb
test
pop
push
fildl
xor
or
sahf
dec
addr16
out
ficompl
pop
and
push
test
imul
outsl
jb
aam
lret
loop
pop
loop
mov
jb
sti
repz
adc
leave
lcall
mov
je
dec
fwait
scas
sbb
lds
lea
inc
rorl
inc
lea
mov
dec
xchg
mov
pop
jns
jecxz
xchg
roll
fcoml
pop
lock
gs
adc
push
adc
dec
xchg
lahf
movsl
xchg
sti
sub
add
sbb
xchg
inc
xor
jle
fwait
and
imul
ss
sub
sbb
xor
nop
rclb
inc
out
or
rorb
fwait
pop
movhps
cmp
out
mov
ret
imul
pop
xor
push
cs
ss
rorl
jp
xchg
enter
sbb
push
xlat
cs
jns
inc
enter
pop
push
in
imulb
lock
inc
cmc
push
mov
jno
or
sbb
ss
clc
call
scas
push
ficompl
jb
push
ljmp
xchg
icebp
add
rolb
mov
adc
dec
ret
cmp
ss
push
adc
mov
orl
lea
insb
cld
call
lea
frstor
jb
push
out
fldenv
push
add
decl
cmp
outsb
aam
pop
je
add
inc
push
orb
or
loop
imul
pop
and
inc
subb
dec
das
jmp
sar
add
cmp
sbb
call
or
decb
and
inc
stc
dec
lcall
cmp
inc
rclb
jbe
nop
test
out
inc
popf
mov
push
push
lock
fsub
cmovl
jo
adc
push
mov
sub
into
mov
lock
mov
cmp
scas
out
mov
lahf
jmp
xchg
je
popf
je
jb
sbb
fcompl
aaa
addr16
cli
test
sub
clc
push
aad
sub
push
sbb
cmp
inc
popf
cli
faddl
fstps
insl
lock
call
cmc
and
or
fadds
inc
push
add
pop
sbb
in
daa
loope
out
pop
cmp
mov
ret
ljmp
add
insb
repz
repnz
pop
xor
cwtl
add
mov
jb
pusha
icebp
sub
imull
xor
mov
xchg
mov
outsl
jae
popf
mov
sbb
sub
dec
jl
enter
mov
jge
or
inc
ja
inc
mov
out
cld
push
mov
pop
mov
xor
mov
and
mov
and
out
insl
pop
mov
and
es
cli
mov
inc
ja
fs
cmp
outsl
in
add
out
mov
sbb
jmp
mov
mov
mov
in
fsubrp
incb
fwait
add
add
pop
movsb
int
leave
push
pop
inc
jno
incl
mov
in
adc
pop
xchg
pop
xor
jl
out
out
aaa
sbb
gs
mov
sub
dec
and
or
xchg
sub
push
out
test
aas
fwait
das
pop
fcomps
cmp
mov
fsts
cwtl
sub
push
mov
and
jmp
jns
adc
adc
lret
into
or
lcall
mov
pop
fadd
mov
jne
fwait
cs
jp
lret
aaa
dec
pop
push
dec
sub
lret
daa
push
hlt
push
pop
and
push
stos
add
cmp
mov
jle
pop
cmp
fxch
pop
call
push
pop
push
nop
adc
mov
adc
mov
add
pop
pushf
and
xchg
shr
ret
jle
mov
scas
adc
and
xchg
xor
mov
push
cs
xor
repnz
jae
lods
out
or
les
lock
and
or
xlat
imul
imul
scas
xchg
adc
aaa
fsubr
xor
cmp
jmp
loop
cmp
daa
pop
clc
mov
mov
ja
cmp
clc
es
jmp
arpl
xchg
xchg
jge
daa
jg
lret
inc
push
arpl
test
push
jb
mov
mov
inc
mov
es
movsl
mov
shl
cmp
adc
pop
pop
add
jg
sahf
lahf
mov
adc
push
orl
mov
lods
rol
out
and
jb
ljmp
cld
jle
inc
cs
fdivl
dec
cmp
cwtl
add
ljmp
adc
sbbb
insb
jmp
cmpsb
jge
out
outsl
lds
push
jg
mov
or
or
mov
mov
mov
ret
js
leave
push
shll
xchg
shll
js
inc
lahf
cs
jae
rorb
popa
mov
mov
fwait
lcall
add
inc
xchg
sbb
outsl
rcr
mov
mov
inc
and
aad
icebp
insl
scas
movsl
sub
popa
ficoml
add
cs
mulb
repnz
pop
mov
orb
shlb
in
fimuls
xchg
popf
mov
lret
pop
xchg
and
push
jp
adc
xor
cmpl
xlat
mov
and
out
sub
mov
clc
popf
loope
andl
inc
xchg
or
jo
cmc
pop
std
pop
xchg
mov
lock
jmp
inc
iret
jmp
loopne
mov
sahf
std
stc
pop
inc
fdivs
jmp
jmp
movsl
mov
ja
loopne
xor
out
adc
inc
push
xlat
sub
sub
xchg
sbb
add
jb
insl
stc
mov
out
sbb
pop
fiadds
mov
in
aas
roll
xor
adc
adcb
push
push
dec
imul
idivb
in
inc
pop
inc
mov
sbb
rcrb
xor
jle
push
rorb
sbb
rcll
jnp
mov
stos
stc
aad
mov
cli
or
stos
cwtl
rcll
arpl
ret
cld
out
loop
and
and
loope
adc
imul
stos
rcll
mov
stos
lods
lock
jmp
insl
inc
inc
sub
bound
icebp
leave
xor
adc
sub
cmc
test
adc
insb
mov
sub
cld
add
push
cwtl
add
orl
pop
mov
cmp
scas
fucomp
adc
cmp
fwait
push
sub
es
mov
inc
std
dec
rorb
xor
daa
mov
in
xor
sub
or
adc
sub
outsl
adc
in
call
xchg
adc
loopne
xchg
test
in
add
pushf
jl
int3
sbb
sahf
lahf
insb
push
jg
pop
xchg
or
adc
movsb
adc
mov
jp
cmp
stos
and
imul
fwait
fwait
dec
pop
in
ds
lret
in
sub
cmpsl
test
jmp
mov
add
aaa
inc
jns
int
shll
push
xchg
rcll
xor
or
leave
lock
fadds
fmull
leave
mov
inc
aaa
std
mov
gs
gs
fmul
xor
mov
jecxz
fld
dec
pop
ljmp
sub
push
sbb
dec
pop
jecxz
sti
sbb
push
lahf
test
sbb
lock
mov
inc
mov
insb
pop
scas
and
roll
test
call
mov
push
fstl
xlat
cwtl
push
mov
adc
repnz
je
inc
inc
daa
hlt
js
int3
mov
aad
sbb
adc
add
mov
jle
xchg
ljmp
xor
add
lea
repz
or
xor
mov
mov
test
xor
lods
mov
pop
int3
clc
dec
dec
sub
pop
ror
jmp
or
cmpsl
mov
loope
mov
jle
pop
adc
mov
insl
mov
xchg
paddusw
mov
jmp
bswap
and
jle
sub
pushf
je
repnz
jae
in
repz
outsb
dec
loop
adc
popa
and
jo
in
rol
xor
orb
mov
jmp
je
movsb
lret
or
fmuls
fimuls
test
sbbb
adc
xchg
xor
aas
fwait
xchg
popa
and
in
ds
dec
adc
ljmp
in
xchg
stos
out
pop
push
push
ljmp
inc
adc
inc
xchg
adc
push
mov
inc
and
add
inc
fsubp
xchg
mov
pop
xor
aaa
or
sarl
mov
jmp
push
xchg
lcall
imul
dec
add
lock
push
sbb
jmp
pop
cltd
mov
jg
ljmp
cli
shl
outsl
xchg
jns
repnz
jmp
ljmp
aam
jmp
movsb
cwtl
jae
imul
jb
xor
test
xchg
xchg
and
inc
fmuls
ljmp
stos
dec
sbb
mov
pop
call
sbb
dec
pop
das
add
js
cmpsl
push
jo
push
rcrb
fsubrl
movsl
push
loop
in
push
aaa
sub
lcall
lcall
push
dec
lds
call
mov
push
cmp
sub
mov
sbb
pop
and
sub
xchg
mov
add
test
mov
fwait
ret
dec
mov
shrl
sub
ljmp
xchg
and
imul
sub
add
int
sub
enter
aam
mov
loopne
jle
mov
cmp
pop
pop
sub
jb
rorl
mov
stos
jnp
loope
mov
push
test
jo
pop
ljmp
hlt
inc
cmpsb
sti
jge
in
or
sbb
dec
pop
pop
hlt
inc
pop
cmp
bnd
cmpsl
sahf
cmc
fstps
rcrb
iret
lret
sbb
and
adc
or
push
lods
std
sbb
xchg
adc
popf
pop
loopne
and
movsl
test
add
shl
sahf
jl
cld
pushf
imul
sbb
dec
adc
lret
lcall
jle
ret
xchg
ret
fcoml
enter
ljmp
repnz
ficomps
shrb
in
adc
xchg
jge
mov
idiv
push
loope
mov
movsb
dec
cmp
mov
xlat
adc
or
jno
jns
in
inc
cmp
gs
mov
popl
dec
loope
jl
out
xchg
pop
mov
and
dec
shlb
mov
pop
or
int
leave
add
dec
mov
push
mov
pop
fwait
mov
jae
and
int
movsl
pushl
insl
lcall
jp
jns
in
mov
xchg
dec
sbb
dec
cmp
cmc
imul
imul
and
ljmp
dec
std
xchg
jp
cmpl
and
xchg
pop
mov
mov
aaa
andb
push
mov
lock
mov
sbb
mov
stos
jmp
imul
rorb
notb
test
imul
pusha
in
or
jecxz
xchg
icebp
mov
mov
jns
hlt
add
fidivl
jae
int3
sbb
jle
popa
jg
in
mov
ja
jg
mov
adc
cmp
rcll
push
sub
adc
xchg
jo
or
pop
fisttpll
push
aad
ret
cmp
push
shlb
nop
mov
sub
test
mov
repz
xchg
jmp
add
loop
in
clc
into
jnp
popa
sarb
or
arpl
mov
sub
add
loope
xchg
or
pop
in
sbb
cmp
mov
nop
and
xorb
js
leave
sub
mov
idivl
adc
push
movsb
pushf
fdivl
pop
aas
jbe
inc
cmpsl
test
cmp
cmpsl
dec
outsl
outsl
andl
add
and
or
shll
popf
pop
xor
bound
sbb
xlat
jne
je
fimull
jg
or
pop
ds
out
cs
cli
jne
dec
xlat
test
in
fistl
pusha
xor
ss
shr
out
lret
mov
cmpsb
out
inc
adc
cmp
fistl
mov
jo
push
sbb
xchg
mov
repz
or
push
shll
ss
insl
lock
cmpsb
aam
ds
mov
fldt
imulb
lar
xchg
jb
xchg
mov
jnp
js
into
scas
xchg
fstpl
bound
jecxz
sarb
push
sub
inc
andb
js
adc
and
ljmp
pop
jb
or
fsubrs
push
xlat
stos
lds
ds
adc
roll
push
shll
insb
in
push
int
jb
mov
xchg
aad
pushf
insb
cmp
mov
jmp
mov
cld
mov
mov
daa
dec
jns
jno
mov
dec
in
js
lcall
push
dec
mov
push
mov
dec
icebp
and
mov
jno
inc
pop
out
lock
push
mov
and
jbe
lret
rorl
push
mov
pop
outsl
sub
in
imul
ja
notb
ficompl
push
cmpsb
mov
jb
xor
pop
cmp
stc
insb
mov
mov
dec
mov
fdivs
xchg
test
clc
or
add
sub
enter
sbb
mov
jecxz
cmp
shll
mov
or
aas
clc
sahf
mov
pop
dec
xchg
mov
add
cmp
mov
les
and
jle
repz
mov
shrl
scas
stos
mov
xchg
mov
mov
and
negb
and
add
jo
push
adc
push
sbb
dec
les
xor
and
sbb
lea
jnp
mov
lds
sub
mov
scas
sarb
jae
gs
pop
insb
int
nop
mov
mov
mov
icebp
sbb
mov
jg
push
push
fwait
ljmp
iret
repz
outsb
push
xor
cmpsl
mov
pop
cmp
stc
lds
pop
and
mov
sub
out
jg
push
xor
dec
and
je
add
or
nop
pusha
scas
cmp
dec
jnp
in
mov
das
icebp
mov
push
and
push
mov
inc
jp
dec
mov
xor
roll
push
repz
repnz
bound
fistl
xchg
popa
aaa
in
push
pop
shr
repnz
dec
xchg
cs
mov
xchg
cmp
dec
aam
cld
cmp
sbb
cs
pop
fists
test
xor
outsl
lods
adc
dec
scas
xlat
xor
sub
mov
mov
dec
mov
jmp
enter
add
sti
sahf
lods
adc
lcall
inc
xchg
and
mov
stos
and
jmp
sub
faddp
jl
adc
xor
aas
idivb
or
pop
xchg
mov
mov
test
xor
loope
push
ljmp
movsb
add
cmp
addr16
adc
mov
stc
int3
cwtl
and
outsb
cld
sbb
add
adc
icebp
ds
in
push
adc
push
cmp
sub
sub
add
enter
outsb
dec
jne
dec
mov
cmp
cltd
xchg
scas
xor
lds
xor
sub
add
cmp
jg
mov
push
mov
xor
inc
lods
inc
insb
test
sub
dec
adc
adc
in
and
sbb
repnz
test
dec
in
aaa
sar
shrl
inc
aas
scas
mov
adc
test
insb
loopne
adc
add
call
lret
lret
inc
push
mov
movsl
and
imul
push
cmp
pop
jmp
ja
js
pop
cmpsb
dec
sbb
bound
xor
sbb
push
adc
fstpl
adc
pusha
stos
jecxz
jecxz
or
or
fisubrl
fistpll
xchg
sbb
mov
cltd
addr16
shlb
lods
or
int
sub
add
nop
cmpsl
push
push
xchg
cli
and
in
ja
jns
pop
je
in
pop
icebp
adc
outsb
shll
sbb
jl
lock
adc
dec
mov
pop
fnstsw
fs
rclb
arpl
jnp
and
sub
scas
js
loope
jbe
adc
push
pop
add
xor
in
mov
iret
cli
mov
inc
mov
push
adc
mov
in
aam
push
gs
fwait
cmp
dec
pop
push
mov
inc
and
xchg
cwtl
adc
cmp
jbe
mov
les
fiaddl
stos
es
popf
xchg
aam
out
adcb
paddq
adc
dec
or
fadd
cmp
ret
push
and
dec
cmp
pop
mov
dec
test
in
std
mov
bound
jno
test
add
loop
and
xchg
shl
imul
sbb
jnp
arpl
dec
mov
inc
lock
or
xchg
lods
inc
cltd
push
adc
jmp
in
sub
rcrl
mov
test
and
mov
cmp
mov
mov
sbb
mov
add
arpl
and
cmp
jmp
pop
cmp
movd
or
xor
test
xor
in
jb
or
imul
lds
xchg
ror
mov
cmpsl
xchg
insb
shl
pusha
ret
sbb
es
lods
pushf
and
es
and
dec
dec
out
lcall
les
xor
movsb
mov
and
dec
or
dec
aas
sub
mov
xchg
test
les
pop
add
insb
xor
push
sbb
add
loope
lahf
pop
sub
xlat
inc
push
inc
mov
mov
mov
or
push
testb
push
into
push
inc
pushf
movsl
repnz
test
mov
mov
sbb
or
or
add
cmpsl
xchg
lcall
mov
shl
stos
sbb
adc
cli
leave
sub
aas
mov
aam
adc
cmpsb
mov
jmp
cltd
insl
push
cwtl
and
inc
mov
mov
xchg
mov
mov
outsb
in
mov
jno
ficomps
jle
mov
cwtl
in
rorl
mov
nop
push
rclb
jp
push
or
jo
mov
push
cli
sarl
mov
dec
sahf
std
push
jbe
add
xchg
sub
and
mov
mov
jbe
pop
test
add
cmc
and
or
mov
out
push
imul
test
and
shr
test
add
or
sub
jmp
jo
push
sbb
int3
and
pop
xchg
sbb
pop
xchg
hlt
adc
leave
mov
fwait
aad
cmpsb
icebp
dec
fs
test
inc
pop
call
cwtl
ja
xchg
stos
ja
or
cld
cld
popf
dec
jo
mov
fistpl
in
xor
negb
sarb
int3
push
xchg
clc
and
dec
and
mov
mov
nop
nop
sti
or
push
lea
mov
dec
imul
nop
inc
imul
inc
fmulp
sub
adc
in
mov
loopne
xlat
stc
mov
xor
test
jle
or
xchg
jo
iret
cmpsb
fdivs
ss
in
jg
sub
adc
sbb
adc
sbb
daa
push
xor
add
push
fiadds
pop
cld
cmp
cmpsl
adc
dec
cmpl
in
rclb
sub
out
push
xor
insl
sub
dec
push
les
add
mov
mov
mov
pop
fmulp
mov
js
and
scas
xorb
movsl
xchg
hlt
lret
in
xor
adc
jle
add
jmp
in
jecxz
pop
adc
jp
cmp
jno
pushf
cwtl
bound
cmpl
mul
mov
frstor
ds
call
out
and
or
or
jg
sbb
in
jb
xchg
fstpl
and
ja
jae
adc
test
mov
add
pop
mov
dec
push
mov
push
mov
pop
jnp
ret
inc
sbb
sbb
and
scas
and
in
lock
add
pop
popf
ficompl
insl
sbb
dec
xchg
xchg
jl
lods
cmc
push
mov
cmpsl
dec
adc
dec
pop
call
movsb
adc
sub
xchg
cmpsb
aas
mov
mov
loopne
fadds
rorb
sub
lcall
xchg
aam
dec
and
cld
mov
movsl
cmpsb
loope
call
clc
jno
push
sub
jmp
push
ucomiss
push
and
dec
fmull
cwtl
pop
mov
cmp
mov
les
xchg
pop
adc
aad
mov
sbb
jmp
mov
cmpsb
fstpt
sbb
scas
imulb
movl
jno
aaa
add
sbb
lods
jmp
and
or
movsl
sub
fisubrs
ss
cmp
adc
cltd
add
sbb
inc
or
mov
sahf
sub
neg
fwait
xchg
adcb
fldenv
inc
sub
adc
sbb
mov
sub
and
xchg
pop
fcmovu
fisttpll
push
inc
in
mov
es
test
stc
pop
jl
jmp
mov
loope
and
mov
scas
arpl
push
xlat
dec
push
sbb
xchg
insl
sbb
dec
pop
jae
movsl
jecxz
push
mov
dec
sarl
sbb
and
mov
insb
loop
iret
jle
cwtl
pop
loope
push
dec
lcall
mov
rcl
or
jmp
fidivrl
or
stos
jecxz
jns
mov
pop
pop
imul
mov
cltd
fs
sub
and
sub
aam
aam
jae
int
pop
inc
or
sbb
inc
push
insb
sbb
shufps
jns
imul
or
test
or
stos
lds
cli
push
insl
push
pop
test
xchg
add
inc
insb
iret
adc
xchg
or
mov
mov
cmp
sbbl
fstps
inc
stos
mov
mov
cmc
xchg
scas
pop
push
push
xor
pop
call
cmp
mov
test
stos
movb
adcl
pop
pop
xor
adc
push
ss
mov
push
int
fdivrs
mov
or
icebp
xor
or
add
adc
test
jle
jg
push
push
or
xchg
cmp
int3
dec
cwtl
inc
add
mov
in
mov
or
adc
cmp
mov
les
enter
loope,pt
gs
cwtl
or
dec
xchg
cmp
lret
cwtl
push
iret
push
dec
les
mov
jge
sbb
fwait
xor
push
in
dec
pushf
jbe
xchg
fcmovbe
in
inc
ss
in
push
stc
imul
shlb
mov
call
xor
loopne
fisubs
scas
lahf
es
push
aam
push
cmp
push
loope
jbe
fdivrs
jge
lcall
push
scas
loop
testl
fistpll
fs
sub
sbb
ret
out
fldt
add
jmp
repz
push
pop
shlb
xor
aad
pop
xchg
and
push
add
inc
add
cltd
jns
out
cmp
xorl
mov
sub
jns
sbbl
int3
xchg
push
je
scas
scas
jbe
jnp
cmpsb
pop
icebp
std
mov
pop
inc
pop
jge
rcl
mov
dec
push
dec
or
outsb
jecxz
push
aam
mov
sub
cmp
mov
cmpsl
aas
inc
icebp
mov
int
mov
dec
out
lret
ja
sub
xchg
pop
js
in
pop
xchg
or
mov
push
jns
stc
push
push
loopne
add
rorb
xchg
inc
inc
rorl
jbe
pop
mov
mov
imul
add
rclb
iret
jo
inc
insb
rclb
fs
sub
mov
sub
ja
sbb
in
adc
fldt
cmp
cli
call
int
je
inc
clc
incb
or
dec
pop
add
adc
xchg
adc
xor
iret
cwtl
cmpb
fcoms
mov
xchg
cmp
pop
sub
push
cwtl
push
imul
add
insl
dec
inc
inc
call
fmuls
inc
dec
int
out
out
mov
lds
fdivr
lea
aas
loop
aas
push
add
push
mov
xchg
lret
cmp
fnstsw
mov
loope
xchg
cmp
jle
cmpl
mov
pop
fdivrs
cmp
xchg
cs
arpl
add
loop
or
test
pop
xor
out
sbb
mov
ss
lock
add
add
pusha
xorl
dec
hlt
xor
ja
xchg
or
jns
mov
mov
push
pop
pop
insl
lret
add
add
rcll
scas
mov
imul
notb
das
or
daa
jmp
xchg
dec
inc
push
divb
inc
and
out
outsl
out
les
lcall
adc
mov
repz
add
push
adc
shr
les
cmc
mov
push
push
mov
das
shl
cmp
mov
js
mov
inc
lock
cmc
idivb
xor
mov
jno
je
fdivs
test
dec
sub
iret
pop
adcb
arpl
clc
dec
out
out
rcrb
js
pop
cmp
ret
bound
sti
sbb
lds
dec
jecxz
addl
adc
or
jmp
shll
cltd
mov
stos
xchg
mov
and
mov
paddsw
xchg
and
pop
addr16
das
ss
mov
mov
sub
scas
movb
fldcw
hlt
mov
mov
mov
cmp
in
scas
test
mov
in
clc
or
stos
cltd
mov
mov
lds
nop
mov
mov
mov
data16
add
sub
stos
adc
sbb
stos
jl
insl
enter
loopne
pop
rcrl
mov
sbb
aam
sbb
popa
popf
and
jnp
fistl
les
loop
das
out
sbb
ja
push
bound
mov
cmp
add
mov
mov
and
adc
aam
pusha
cmp
aaa
xor
jle
sub
test
adc
and
inc
adc
sahf
add
out
adc
cli
pop
pop
push
and
pusha
sbb
inc
imul
cmp
sbbl
adc
in
test
add
fs
je
xchg
adc
roll
xchg
lret
jae
push
aas
frstor
das
movl
push
fstl
pop
jg
repnz
sbb
rclb
into
sub
icebp
xchg
or
jnp
mov
xorb
fmuls
int3
cmpsl
sbb
add
fwait
data16
mov
push
xchg
mov
pop
push
lret
mov
adc
stos
add
or
call
daa
mov
dec
xor
xchg
mov
outsl
sbb
dec
test
mov
add
loopne
arpl
xchg
xlat
or
add
jle
std
xchg
inc
stos
jne
stos
pop
jo
int
xor
mov
add
mov
push
jns
aam
pop
adc
dec
jne
lcall
js
je
push
fdivl
add
lret
icebp
jns
es
test
addr16
jge
repz
mov
lock
rcrb
mov
inc
enter
xor
fwait
in
xor
call
fnstenv
dec
mov
test
xchg
pusha
repnz
or
sbbb
xchg
dec
subl
pop
insl
mov
out
roll
pop
test
lock
jecxz
pop
inc
mov
pop
dec
push
and
loope
ja
xchg
nop
mov
and
cmp
lret
test
add
mov
in
cmpsb
mov
mul
clc
push
xor
xchg
cmp
sbb
or
ds
adc
mov
dec
xchg
sbb
jg
leave
mov
pop
jb
sub
lock
mov
stos
andl
and
and
xlat
cmp
adc
mov
mov
jmp
int
dec
adc
push
inc
lods
lret
push
inc
iret
mov
gs
lock
es
movsb
shrb
hlt
cmc
mov
lock
inc
add
aam
jne
add
mov
xchg
sub
jecxz
in
and
xchg
popf
int3
pop
adc
test
mov
fistpl
push
fadds
in
mov
addr16
mov
xor
ljmp
mov
sub
push
test
jb
push
inc
pusha
jns
insb
loopne
mov
mov
or
adc
fxam
or
mov
dec
jle
ror
lock
xchg
test
fucomip
push
or
fistl
xor
mov
clc
push
jmp
sub
es
lret
fildll
pusha
loope
movsb
nop
test
sub
jmp
jge
divb
outsb
repnz
mov
push
xchg
test
mov
fiaddl
sbb
shr
mov
add
sub
jp
jae
icebp
sub
push
jmp
xchg
daa
add
je
pushf
cmp
mov
jg
mov
push
aaa
sbbb
rcrb
push
sbb
jecxz
mov
cld
out
xor
pop
les
fs
call
aad
mov
ret
sbb
mov
lret
stos
sbb
es
push
pusha
arpl
mov
sbb
sub
mov
hlt
adc
cmpsb
push
inc
push
push
pop
add
add
cs
adc
push
pushf
test
cmp
js
cbtw
mov
lret
mov
adc
inc
pop
push
pop
and
lcall
sub
insb
call
aad
mov
push
or
sarb
adc
fs
mov
push
xchg
push
mov
cmpsl
jle
jo
xor
mov
inc
xchg
xlat
lock
push
push
addr16
out
pop
xchg
jnp
loopne
shrl
out
pop
push
js
mov
jmp
test
aaa
flds
mul
pop
outsb
adc
mov
xor
inc
scas
ja
rcl
and
in
xor
jmp
xchg
mov
sti
loop
adc
test
cmp
loop
in
sbb
stos
in
lahf
jnp
ljmp
subl
xchg
fistpll
adc
js
repz
lock
and
mov
lcall
push
aaa
inc
enter
int
daa
sub
xor
jecxz
xor
sub
dec
std
int
popa
mov
mov
or
sub
lock
das
adc
xchg
jae
nop
add
insb
popf
sbbb
mov
sbb
add
mov
add
sbb
je
inc
xor
mov
sub
push
subb
dec
call
insl
jne
or
scas
inc
aad
outsl
dec
pop
lea
pop
pop
push
stos
and
xor
mov
push
push
lds
mov
leave
movsb
sub
and
adc
cmp
or
stc
jbe
mov
pop
and
sbb
mov
hlt
daa
lret
fisttpll
sub
loopne
fidivl
icebp
xchg
or
out
add
dec
jne
mov
rclb
outsl
xchg
cmpsl
std
packuswb
int3
insl
enter
shlb
in
cmpsb
fstpl
pusha
loop
pop
out
sbbb
push
sbb
and
jnp
add
mov
rcl
add
inc
pusha
mov
cli
aaa
testb
loopne
mov
cmc
sub
mov
pop
ucomiss
or
mov
fcmovnb
push
jbe
xor
sub
xchg
test
push
sbb
cmp
js
cwtl
lret
mov
mov
mov
mov
roll
pushf
call
jns
adc
jbe
push
push
ja
nop
lods
lret
xor
sbbb
dec
loop
pop
es
xchg
pop
dec
push
arpl
lock
xor
cmpsb
mov
cmc
xor
inc
dec
jno
adc
mov
or
xchg
pop
inc
or
mov
push
sub
sub
xchg
loopne
jecxz
jbe
and
roll
pop
and
in
mov
lahf
push
xchg
jne
pop
movups
nop
sub
out
orl
add
add
adcb
pushf
push
jns
dec
or
aam
jl
shl
insl
int3
imul
dec
bound
cmc
sub
pusha
shll
int
pop
jo
in
push
imul
jnp
iret
or
inc
xchg
cmp
inc
out
jae
mov
nop
sbb
lods
jg
lret
pop
mov
cs
scas
jge
fcmovu
stc
mov
add
cmp
and
sbb
lods
adc
jl
mov
push
cmp
dec
addr16
leave
or
mov
mov
sbbb
xchg
aam
sub
popa
mov
insb
js
jb
jno
jg
or
movsl
cli
in
add
xchg
or
mov
loopne
cmp
add
mov
test
mov
fucom
shlb
cmpsb
sbb
lret
cmp
push
lret
lret
fisttpll
and
xchg
lcall
ljmp
loop
nop
pop
or
sbb
mov
out
lock
xor
push
or
dec
mov
mov
out
sub
pop
imul
stc
add
xor
mov
add
rcrb
mov
mov
std
and
cld
dec
movsl
inc
xchg
adc
call
mov
hlt
push
xor
sub
imull
and
xlat
divb
jl
adc
pop
pop
xchg
pushf
int3
jl
jo
mov
lret
aaa
andps
inc
ja
idiv
jl
dec
cli
insb
cmp
les
mov
test
xor
in
mov
mov
mov
sub
fcmovu
push
clc
jg
ds
jnp
sbb
int3
ss
jae
add
loop
dec
repz
dec
or
lret
dec
xorb
jbe
dec
pop
enter
popf
std
or
mov
jns
ficoms
popa
sti
test
hlt
popf
lods
adcl
aaa
mov
add
aam
lods
cli
inc
and
loopne
test
mov
out
add
js
or
sbb
or
test
les
push
out
mov
sub
or
stos
add
xchg
enter
js
lahf
mov
adcl
cmpsl
inc
and
fwait
mov
dec
repnz
clc
sbb
movsb
ret
insl
insl
fs
xchg
subl
pushf
roll
ret
dec
lret
mov
shl
int3
push
lock
data16
mov
add
jne
sti
cld
outsl
push
mov
xchg
leave
test
aam
xor
in
scas
jl
fildl
cmovo
aaa
data16
or
cmp
xchg
repz
inc
loopne
pop
dec
sbb
xchg
loopne
jne
mov
aaa
lods
sti
je,pt
pop
cmpsb
in
out
fisttps
js
or
cmp
mov
stc
insb
pushf
nop
sbb
cmp
lock
je
or
int3
lock
sub
mov
test
sub
mov
pusha
adc
fstp
sbb
adc
push
mov
loope
pop
scas
icebp
mov
cmp
sbb
aam
mov
ja
add
push
or
jo
inc
les
pop
movsl
add
pop
inc
data16
ljmp
popf
sub
lea
sahf
test
adc
insb
pop
popf
xchg
or
aaa
push
push
mov
push
idiv
adc
dec
loope
cltd
lods
xchg
inc
pop
push
mov
push
cld
pop
sub
sub
cmp
pop
sbb
push
cmpsl
jbe
push
jbe
fstpl
clc
mov
or
sbb
sahf
pop
in
pop
lcall
enter
das
adc
xor
fidivrs
in
ret
pop
outsl
lcall
xchg
jo
ds
ret
mov
dec
xor
mov
sbb
mov
inc
xchg
inc
jnp
mov
adc
enter
lock
xor
repnz
cmp
sub
and
loopne
hlt
or
sti
scas
jl
sti
sarb
movsb
iret
xor
fsubrl
sbb
mov
mov
dec
pop
mov
ss
ljmp
cld
dec
or
cli
mov
cmp
or
jmp
sti
xchg
adc
js
xor
pop
xchg
popf
clc
jmp
nop
jl
adc
ret
jge
mul
test
popa
inc
ja
mov
jle
mov
daa
cwtl
push
adc
into
ss
insb
xchg
inc
jle
dec
hlt
mov
jge
jge
shrl
push
cltd
or
mov
mov
test
jl
rep
jb
in
lock
cmpsl
cmp
repz
lea
cs
and
adc
sub
lods
adc
andb
and
out
stos
jne
stc
aad
ret
dec
lods
mov
repnz
xorl
mov
sbb
dec
sub
pop
fsubp
sbb
cltd
arpl
sbb
lea
xchg
jbe
in
dec
push
sahf
aaa
sbb
bound
insl
push
js
loop
or
xor
or
sbb
fsubp
mov
outsb
andl
jb
lret
inc
int3
sti
and
pop
data16
mov
dec
out
addr16
pop
faddl
or
movsl
inc
ds
lret
roll
negl
lahf
hlt
jg
adc
aaa
or
xor
and
pop
mov
add
pop
ffreep
lods
mov
dec
xlat
mov
call
mov
enter
stos
pop
jns
nop
dec
lcall
leave
je
and
add
mov
out
sub
mov
cmpsb
mov
xorb
dec
ja
push
sub
inc
or
dec
push
scas
out
or
jo
incl
push
fidivs
pop
lahf
push
neg
add
xchg
and
cmpsl
add
fidivl
dec
cwtl
pop
mov
xchg
xchg
addr16
sub
sbb
push
mov
xchg
ljmp
in
fsubrl
in
push
lcall
into
push
jmp
cmp
ljmp
mov
mov
sub
clc
push
ja
mov
adc
cmp
mov
pusha
xchg
inc
lea
pusha
cmp
insl
pusha
popf
ret
test
mov
jl
dec
in
gs
jo
cmp
dec
mov
sbb
xor
or
insb
std
rcrb
or
clc
decl
push
push
and
cmp
cmp
sub
int3
mov
xlat
subl
push
pop
cs
sub
in
push
cmp
mov
or
lock
mov
loope
cmp
jp
lcall
dec
dec
movb
push
dec
dec
stos
adc
mov
scas
sbb
mov
or
pop
rclb
mov
and
adc
repnz
cmp
dec
push
dec
push
pop
insb
inc
xchg
fldcw
aaa
push
pop
das
fld
pop
cwtl
js
mov
es
and
ss
push
and
jae
cmpsb
ret
out
mov
pusha
loopne
push
adc
jle,pn
dec
dec
fistps
lea
jo
and
cmp
decl
cmp
mov
pop
push
mov
or
outsb
icebp
mov
insb
mov
pushf
enter
xchg
flds
out
rcl
mov
push
loop
push
adc
and
mov
xchg
dec
push
push
xor
lret
insl
adc
fmuls
jge
and
jmp
in
fcoms
and
add
jg
adc
mov
jbe
mov
aaa
mov
cld
pop
outsb
in
nop
arpl
inc
hlt
scas
cmpsl
cmc
jb
sahf
adc
fimuls
sbb
aam
test
or
or
popf
mov
in
gs
push
mov
lret
jg
pusha
mov
lcall
sub
dec
and
cmpsb
xor
in
mov
dec
inc
leave
mov
out
lcall
aaa
xchg
or
lock
inc
cmp
fldl
push
les
loope
cltd
add
cmp
adc
pop
daa
loop
jnp
add
jnp
xlat
outsl
mov
pushf
sub
sbb
imul
adc
add
push
fdivrl
mov
out
fucomip
into
clc
dec
adc
aad
ljmp
insb
mov
aam
inc
add
hlt
and
mov
cmc
xchg
xor
push
mov
mov
popf
out
xor
dec
xor
pop
pop
inc
or
push
xchg
clc
xchg
shrl
mov
mov
das
lods
out
push
jl
xchg
faddl
pop
out
popf
sbb
in
enter
dec
mov
jg
pop
bound
jno
clc
push
cwtl
adc
repz
pusha
xor
jl
mov
cmp
cs
ja
inc
scas
pushf
xor
decb
xchg
mov
push
pop
sub
xchg
lods
inc
add
cmp
dec
insl
lea
rclb
fmulp
daa
jbe
mov
fmull
mull
sub
mov
mov
xlat
cmp
mov
pop
ds
lds
xor
rcll
mov
push
mov
test
mov
lret
xchg
mov
mov
mov
std
in
mov
outsb
loop
enter
sub
adc
test
fnsave
or
test
insl
ss
adc
dec
mov
andb
push
mov
xor
push
dec
mov
mov
loopne
mov
clc
push
fcmovne
enter
rorb
mov
cltd
xor
lahf
jle
fidivs
inc
jge
lods
sbb
mov
out
mov
bound
dec
jnp
int3
xor
mov
cmpb
push
mov
jecxz
sti
rorb
mov
mov
sar
notb
std
into
mov
jle
shll
push
inc
add
mov
push
fcompl
rorl
xor
loope
and
pop
lret
mov
push
popf
add
shlb
fisubrs
jno
cmpsl
cmp
es
pop
push
test
rol
fwait
jecxz
pop
adc
loopne
rsqrtps
in
mov
mov
and
inc
pop
inc
repz
leave
mov
push
call
test
dec
daa
lret
or
xlat
or
dec
jno
js
test
fsubs
shl
bsr
enter
cmp
hlt
aaa
filds
insl
fcmove
test
push
aam
mov
iret
xchg
icebp
mov
xor
push
sahf
mov
pop
adc
push
outsb
mov
stc
push
sti
insb
xchg
pop
out
sbb
pop
in
ljmp
sub
xor
shrb
imul
push
and
push
mov
xchg
adc
sub
lea
push
stos
clc
and
sbb
xchg
sub
into
sbb
hlt
in
push
sbb
mov
mov
push
ss
jb
push
and
popa
push
test
sub
mov
push
arpl
adc
pushf
push
add
cmp
leave
mov
bnd
adc
dec
pop
mov
mov
sbb
push
cmp
pushf
int
cld
xor
out
jbe
mov
and
dec
mov
and
xor
mov
dec
xchg
xor
iret
dec
sti
xchg
adc
push
cwtl
mov
movl
and
ja
sbb
xchg
mov
xor
mov
arpl
lahf
mov
cmp
fstps
lret
popf
xchg
xchg
mov
inc
aam
mov
pop
add
imul
sub
int
frstor
arpl
xlat
scas
jnp
push
inc
mov
or
and
dec
mov
mov
idiv
outsl
lret
mov
js
mov
fcomps
jge
out
mov
hlt
jl
movl
ja
jns
insl
cmpsw
xchg
jecxz
xchg
clc
roll
xor
andl
adc
fstl
pop
fwait
jg
cmc
jg
xchg
adc
add
xor
test
jns
mov
insl
sbb
mov
inc
xor
fistpll
lea
aas
addr16
mov
out
imul
sbb
pop
sarb
fidivs
ret
scas
cltd
insb
jl
jle
push
jbe
popa
int3
push
pop
sbb
ja
add
dec
cmp
adc
sub
js
dec
dec
push
sbb
push
fwait
mulb
int
rcr
ja,pn
test
jmp
inc
jl
and
and
sub
pop
jmp
or
mov
sarb
xchg
or
loop
lods
pop
cli
pop
pop
lock
xchg
lcall
insl
loop
in
ja
hlt
lcall
cmp
fdivs
adc
or
and
lret
push
sub
xchg
pop
lcall
in
lods
and
movsb
pop
adcl
mov
pusha
movsl
mov
dec
pop
cli
mov
fcompl
sbb
leave
clc
pop
sub
data16
xchg
pop
scas
mov
rorb
cli
shlb
mov
add
sub
mov
sub
data16
pop
and
cli
pop
adc
mov
push
mov
insb
mov
mov
push
or
test
xchg
pop
mov
mov
mov
bound
adc
insb
hlt
mov
lds
lods
dec
sub
in
inc
popa
dec
es
and
jb
push
popf
jb
xchg
stc
sbb
rolb
push
sahf
jne
adc
int3
hlt
fidivs
jl
cs
lret
xlat
cltd
add
les
sbb
or
jno
shl
sbb
and
adc
outsb
outsb
push
fs
sub
xchg
pop
and
push
jnp
cmp
scas
cli
push
and
cwtl
dec
test
mov
ss
or
inc
cmp
rorb
arpl
dec
sahf
outsl
cmpsb
ret
sbb
and
jnp
lds
pusha
outsb
jp
imul
sub
inc
aaa
sbb
push
jno
xchg
lahf
nop
out
aaa
mov
lock
inc
push
leave
cwtl
push
in
rolb
jae
sub
ss
sbb
pop
cltd
cltd
cmp
std
test
jg
jnp
shrl
fimuls
xor
push
add
popa
testb
cmp
pusha
mov
mov
fstl
add
mov
negl
xor
stos
es
jle
sub
outsl
pushf
fbld
cwtl
mov
xor
loop
or
add
push
cmp
test
pushf
jle
mov
fs
jno
push
or
ficompl
cmp
arpl
xchg
push
sub
dec
ffree
scas
pusha
or
xor
out
xchg
std
and
cli
lods
dec
enter
xchg
lret
lret
pop
inc
lcall
mov
nop
mov
mov
dec
aad
daa
mov
sbb
adc
in
push
ficompl
pusha
sub
add
cmp
lret
sbb
and
mov
xor
cmp
mov
cmp
cmp
xchg
inc
pop
cmpsb
enter
test
fcoms
popf
mov
jmp
push
sub
and
fisttpll
sub
pushfw
movsl
fiadds
sbb
bound
cltd
sub
stc
inc
faddl
sbb
sbb
xor
enter
xchg
pop
mov
fs
ja
xor
cmp
int
mov
lods
sahf
lret
test
mov
out
xorl
ret
stc
div
clc
fistpll
repnz
jae
xchg
xor
mov
jbe,pn
cmp
xor
push
sbb
lahf
cmp
icebp
lret
dec
movsl
sbb
in
cmp
ror
mov
add
adc
mov
fcoms
jl
sbb
dec
push
fwait
adcl
inc
xchg
dec
mov
cmp
fmull
mov
xchg
and
mov
test
dec
sub
int3
pop
xchg
mov
cltd
lock
or
fistps
ljmp
nop
push
iret
sbbl
fnstsw
jl
add
xchg
lret
push
sub
stos
sbb
aaa
or
test
pop
sti
sbb
adc
ja
movsl
push
repnz
sub
insl
inc
mov
cs
push
les
sti
xorl
fcoms
adc
hlt
push
xor
mov
mov
test
jmp
loop
test
jmp
and
and
cmpsl
clc
aad
sti
cmp
nop
push
insb
sbb
push
sbb
jl
xlat
movsb
inc
test
and
inc
test
insl
sbb
mov
mov
jo
out
xchg
jbe
dec
xchg
jo
loope
pop
sub
sbb
int3
push
bound
sub
inc
in
in
and
or
cmp
arpl
ret
or
stos
mov
stc
imul
xchg
push
test
out
add
adc
sbb
push
fists
cmp
inc
mov
cmp
lods
adc
aas
fimull
push
jg
inc
dec
cmp
mov
call
call
mov
jg
cmpsb
loope
outsb
lods
mov
jg
adc
inc
or
and
and
cmpsb
jp
and
fs
cwtl
scas
inc
ss
add
or
pop
cmp
pop
cmc
addl
push
cmp
cmp
adc
xchg
mov
dec
call
push
jns
cmp
cli
pop
iret
lods
ret
inc
pushf
or
neg
fldenv
roll
sysexit
scas
dec
adc
data16
mov
js
out
int
jl
adc
jmp
popf
adc
pop
push
outsl
rorb
sub
cmp
sarl
adc
dec
fsubrp
out
mov
iret
xor
xor
mov
jae
mov
adc
outsl
inc
in
mov
dec
icebp
ja
xchg
fidivrs
mov
adc
jb
push
jb
shrl
pop
xchg
mov
in
nop
adc
std
pushf
inc
push
mov
aas
lds
out
dec
sahf
jne
or
cli
xchg
jne
push
lods
dec
mov
adc
xchg
mov
ret
dec
in
out
sub
lret
xchg
fsubrs
push
repnz
insb
mov
test
xchg
sbb
push
test
mov
bswap
mov
hlt
mov
gs
push
push
fmuls
xchg
mov
call
jge
pop
shrl
jecxz
movsb
outsl
push
rcr
cmp
std
or
add
leave
xchg
test
and
movsl
insb
sub
cmp
repnz
call
adc
and
mov
pop
fistps
int3
and
jb
out
mov
pop
nop
push
pop
jnp
ds
fiaddl
xchg
dec
push
jecxz
lahf
mov
mov
mov
sub
inc
push
push
or
xchg
mov
xor
fadds
or
clc
dec
pusha
jg
push
jb
mov
outsb
adc
or
pop
mov
xlat
xor
inc
push
gs
scas
inc
sub
xchg
in
inc
js
pop
js
js
es
pop
xlat
shlb
shrb
mov
stos
hlt
repnz
fwait
cmpsl
jle
add
test
inc
das
push
aaa
aam
incb
mov
lea
icebp
rcrb
jo
and
inc
pop
cmp
aas
fwait
jae
xchg
pop
and
cmc
sbb
fmuls
lahf
inc
dec
data16
mov
mov
mull
cltd
and
outsl
jle
enter
mov
mov
iret
mov
push
test
sarl
add
repnz
push
roll
bound
lods
cmc
sti
dec
scas
ljmpw
cmc
insb
out
mov
sbb
cmp
addr16
stos
xor
mov
mov
ljmp
push
cmc
sbb
jno
stos
inc
test
in
fcomps
dec
sub
pop
add
dec
push
adc
xchg
xchg
push
addr16
repnz
aaa
lcall
call
or
les
out
push
push
dec
stos
inc
es
cmp
leave
ret
mov
fildll
loope
int3
push
inc
sbb
test
aas
sbb
mov
out
fisubl
in
cmpsl
inc
pop
fwait
pop
push
andb
shll
dec
insl
popf
add
ss
mov
dec
pusha
pushf
scas
pop
xor
icebp
lea
xor
cwtl
xchg
jp
adc
call
fcompl
ja
ds
aaa
call
push
loopne
dec
call
inc
cmp
test
or
pop
call
pop
enter
pop
mov
xor
cmp
leave
outsl
push
mov
xchg
ss
push
pop
or
dec
dec
bound
into
movsb
js
jae
pop
adc
pop
cld
adc
xor
lret
enter
out
out
pop
mov
stos
mov
and
push
dec
clc
pushf
popa
pop
mov
sti
jl
subl
aad
sbb
jp
notb
jg
into
xor
pushf
or
push
ds
sub
rorl
ret
loop
sbb
mov
movb
cmp
faddl
jns
dec
sub
ja
cwtl
loope
inc
rorb
sbb
push
mov
orl
pop
jnp
shlb
out
or
xchg
lahf
or
cmc
pop
mov
incl
push
movsl
xor
dec
mov
mov
out
adc
adc
push
and
xlat
jnp
rclb
femms
shrl
scas
jge
xlat
movsl
in
push
xchg
pop
mov
push
push
call
dec
jecxz
in
sub
js
push
xor
dec
xchg
call
lret
jmp
mov
add
push
pop
sbb
mov
iret
add
adc
or
mov
push
es
inc
sub
jge
in
or
mov
lret
fs
sbb
or
mov
mov
lret
lret
lods
leave
std
xchg
adc
cmp
mov
jb
or
adc
cmp
push
arpl
or
xchg
adc
dec
hlt
cmpsl
nop
imul
add
mov
ljmp
dec
push
outsl
xchg
shl
jns
loop
iret
lock
dec
int3
xor
mov
and
cwtl
jle
add
jmp
dec
xchg
popf
imulb
int
das
gs
add
adc
xor
repz
sbb
aad
mov
adc
and
mov
mov
sbb
jle
fdivrs
scas
adc
cltd
aas
sbb
adc
adc
dec
test
push
test
cmp
and
jecxz
push
cld
stc
loopw
cltd
and
imul
mov
insl
mov
ret
add
bound
add
pop
int
addr16
fists
sahf
push
inc
cmp
aas
frndint
jle
cltd
imul
mov
fcompl
dec
push
mov
repnz
xor
fcompl
xchg
push
add
cld
imul
lods
pop
xrelease
mov
jle
lea
push
push
loopne
shll
loopne
xchg
rcll
add
lea
scas
iret
adc
adc
xor
ret
sbbb
mov
adc
loopne
sbb
in
cmp
mov
cmp
add
mov
mov
mov
adc
jbe
out
push
sub
pop
push
sbb
dec
dec
cltd
push
insb
jmp
jae
popf
xor
push
outsb
int3
or
dec
inc
add
dec
rcrl
pop
pop
jle
cmp
xor
mov
push
into
inc
sub
imul
dec
jb
fcomps
sub
cmp
stc
jb
or
mov
xchg
imul
xchg
test
iret
cmpsl
pop
lret
mov
add
cmpsl
mov
jns
add
push
adc
sub
sub
das
jo
aad
push
xor
call
mov
push
inc
pop
stc
xor
jb
cmp
ror
sbb
add
ljmp
mov
add
and
repz
outsb
into
or
inc
js
shlb
push
imul
and
mov
scas
sub
inc
mov
xor
inc
lcall
outsb
mov
pop
mov
mov
xor
adc
out
jecxz
lods
in
jp
leave
mov
sub
xor
js
aaa
dec
lods
in
push
fnstsw
pop
mov
mov
cltd
mov
xor
repz
dec
cmp
rorb
cltd
pusha
and
cmpsb
es
aaa
mov
movsb
or
out
mov
pop
out
sub
cmc
xchg
int3
leave
aam
xchg
lcall
pop
rclb
pop
call
loope
xchg
cwtl
add
stc
fcmovbe
fidivrl
in
xchg
fnsave
dec
sbb
jge
xchg
or
cmp
sub
popf
int
js
dec
dec
idivl
imul
stos
adc
outsl
sarl
add
adc
mov
push
cwtl
xor
leave
cmc
enter
or
movsb
call
shr
push
jne
ja
icebp
pushf
sahf
fdivr
mov
gs
fcoms
mov
mov
mov
adcl
les
test
xchg
sub
mov
sub
pop
and
fbstp
out
sarb
jb
and
xor
add
sbb
mov
in
dec
dec
imul
rolb
out
push
cmp
mov
mov
inc
and
adc
cli
add
pop
pusha
inc
adc
and
clc
dec
push
jbe
shrl
lret
adc
cwtl
pop
leave
jno
imul
sahf
mov
gs
sbb
incb
sbb
jmp
jbe
sbb
fldcw
or
ret
loop
cld
mov
stc
xchg
pop
mov
movsb
stc
dec
rcl
sarb
call
xchg
fstpl
loopne
cwtl
repz
movsl
clc
mov
mov
pop
sbbl
roll
push
xor
push
cmp
sahf
cli
shrb
and
mov
jo
int
fnstenv
push
xor
loope
enter
dec
arpl
jbe
jo
or
mov
adc
jb
adc
js
push
mov
push
test
fidivs
nop
push
pop
outsb
out
inc
mov
sub
mov
add
cmp
xchg
fsubrl
jae
xor
dec
cmp
pop
jo
popa
cmc
and
ljmp
xor
adc
ljmp
insb
xor
sub
in
cmpsb
stc
sub
jg
mov
repnz
fisttpl
or
push
jo
add
inc
pop
cmp
pop
orl
xor
je
sbb
mov
jl
ret
push
outsl
test
sahf
sbb
cmp
sbb
sub
jg
movsb
dec
and
and
lret
sbb
pop
pop
mov
mov
out
mov
or
mov
cli
fcompl
je
xor
imul
test
lods
adc
jp
mov
call
ret
pop
cmp
cmc
and
ret
push
dec
clc
push
out
cmp
cld
pop
push
push
nop
popf
icebp
mov
or
sbb
and
int3
add
mov
dec
or
test
jne
cmc
push
lret
sti
add
out
iret
jg
lods
sbb
cmpsb
stc
cmpsl
pusha
add
ljmp
mov
lea
sbb
push
xchg
stos
add
in
and
mov
hlt
fs
int3
adc
adc
insl
daa
pop
pop
xor
fs
movsb
pop
imul
jne
lock
or
lods
dec
push
rcr
aam
xor
loope
call
or
push
ja
cmpsb
lods
push
lcall
mov
lock
inc
shlw
xor
and
dec
stos
daa
aas
mov
and
cmp
add
mov
and
lods
jg
cld
into
aam
pop
dec
cmp
in
cs
and
cs
dec
mov
or
cld
pop
mov
insl
dec
loop
jb
pop
jl
adc
in
and
int3
mov
sbb
test
mov
or
mov
push
or
or
cs
inc
pusha
cli
clc
push
mov
pop
sub
mov
jb
mov
mov
cmpsb
ror
mov
pop
or
mov
pusha
jo
pushw
mov
daa
or
fistpl
cmp
mov
mov
call
divl
test
fistps
imul
dec
adc
add
orb
cwtl
add
lret
out
push
push
pop
and
pop
sar
push
mov
fmull
adc
inc
add
lret
fcom
mov
mov
loop
cmp
push
mov
jl
int3
mov
outsb
sub
xor
shll
sub
test
push
mov
popa
mov
mov
adc
sbb
cmp
inc
dec
test
cli
push
mov
fs
pop
lods
incb
jb
insb
lea
dec
sarb
jo
int3
rclb
adc
addr16
inc
clc
xorb
enter
pop
daa
cmc
adc
jl
scas
test
add
lea
inc
sub
xchg
sbb
push
adc
xor
jno
inc
dec
pop
popf
push
jae
mov
dec
shr
divl
push
xchg
fstp
ror
and
dec
xchg
test
loopne
jns
nop
xor
add
xor
jno
inc
add
xchg
repz
and
cld
pop
push
stos
das
inc
nop
push
aam
std
int3
pop
xchg
mov
dec
or
pusha
push
addr16
xchg
aam
dec
or
push
je
call
in
pop
mov
pushf
insb
imul
pusha
pop
dec
jmp
ss
xchg
repz
je
lock
xor
jb
test
test
push
mov
and
xchg
sub
sub
imul
cmp
sti
fsubrl
inc
jnp
stos
cmpsb
lret
adc
jae
dec
cld
bound
pushf
or
jmp
insb
cwtl
js
sub
sti
sti
lods
cld
push
add
dec
push
cmp
inc
sahf
dec
xchg
int3
mov
aaa
mov
ljmp
sbb
arpl
mov
sahf
pusha
into
add
clc
xchg
pop
into
mov
mov
dec
jle
mov
out
jbe
xchg
jmp
hlt
mov
out
fbld
in
aam
mov
sti
cwtl
jne
pop
mov
pop
or
repz
testl
and
cli
xchg
gs
sbb
mov
das
mov
in
sub
out
stc
fs
in
or
fsubl
xchg
test
pslld
ljmp
adc
mov
fnstenv
sbb
add
and
and
es
je
mov
mov
in
dec
in
cmp
mov
pop
push
xor
or
cld
insb
and
in
aas
dec
or
push
cmpl
mov
cmc
mov
push
in
leave
incl
ds
out
mov
fwait
addb
or
sbb
ret
aaa
lods
mov
bound
mov
xor
in
fwait
mov
adc
pop
shll
jbe
jno
fsubrl
aad
nop
xor
xchg
rclb
jbe
std
xchg
negb
dec
popf
fdivrl
adc
jbe
pop
fidivs
add
pop
push
xor
pushf
cmpsb
xchg
ja
cwtl
mov
add
cmp
mov
les
rcll
iret
mov
rcrb
dec
xor
push
adc
aaa
jle
cmp
push
rcrb
es
dec
cli
push
cs
xorb
fmull
leave
mov
enter
jae
xchg
push
jp
cld
ja
out
ja
fs
push
pop
enter
mov
mov
inc
pop
insb
rolb
mov
imul
mov
cmp
dec
test
mov
sub
or
cmp
add
or
pop
mov
xor
push
mov
sbb
lcall
dec
dec
push
inc
sub
cmp
frstor
inc
hlt
cli
jl
adc
ja
imul
fcmovbe
pushf
iret
push
mov
jg
lods
rclb
and
mov
mov
add
jle
adc
sub
ret
jae
cmp
lret
push
sbb
inc
inc
cmp
cmp
adc
lcall
lds
scas
das
push
je
hlt
xchg
mov
xchg
aas
rorl
sarb
call
jmp
xor
shll
jl
mov
xor
pop
adc
push
inc
fsubrl
pop
fst
repnz
pop
sub
testb
inc
sbb
jb
pop
add
bound
out
cmpsb
cld
mov
es
loop,pn
test
lds
call
xchg
in
sub
sub
ljmp
out
sub
mov
out
adc
lods
mov
mov
aam
push
inc
mov
inc
pop
fwait
jae
fs
mov
mov
cs
pusha
stos
push
xor
popa
and
movsl
jb
jle
icebp
pop
or
mov
out
push
adc
mov
cwtl
pop
stos
pushf
xor
out
sub
sti
les
xor
sub
cli
push
test
out
add
cmp
cmc
rcrl
or
mov
movsb
test
imulb
sbb
sbbl
cmp
cltd
shrb
sbbl
lds
mov
sub
add
xchg
and
sahf
adc
repnz
addb
add
out
std
pop
jge
pop
push
out
out
pushf
xchg
fwait
sbb
daa
das
imul
lahf
add
xchg
or
mov
push
fcmovu
call
enter
dec
leave
ret
sbb
inc
dec
inc
xchg
add
dec
jbe
jbe
cltd
mov
mov
dec
sub
jb
fadd
repz
insb
sub
enter
cmpsb
adc
jge
dec
clc
mov
mov
xchg
cli
adc
dec
mov
xor
cmpsb
lret
mov
inc
mov
mov
repnz
push
pcmpgtd
xor
pop
loope
je
fsubs
push
jl
outsb
push
add
dec
mov
mov
in
pushl
bound
push
mov
adc
jecxz
lea
adc
test
ret
sub
jbe
cmpsl
xor
mov
mov
jg
scas
pushf
subl
and
cmc
and
or
xchg
push
push
mov
ss
je
pop
ds
sub
insl
iret
scas
std
and
push
pop
or
lock
jbe
adc
es
cmp
mov
xchg
lret
xor
sarl
add
lds
shlb
testb
cmp
xor
arpl
jns
pop
and
aad
xor
xchg
call
or
lods
sar
mov
gs
push
xchg
cli
sti
cmp
into
dec
mov
ja
mov
jbe
inc
xlat
push
sbb
imul
or
jle
jns
lret
lret
gs
call
or
mov
ja
les
and
push
ret
or
movsb
cwtl
push
jecxz
dec
out
or
or
mov
ss
stos
loope
sbb
sbb
xchg
or
test
cli
paddq
pop
popf
testl
enter
dec
movsl
push
xor
mov
popa
xchg
mov
outsb
repnz
shlb
popa
into
gs
lahf
cltd
daa
sub
push
sub
xor
in
sub
out
jge
dec
incl
pushf
ss
sub
push
scas
int
inc
cmp
sahf
push
imul
sti
cld
and
mulb
xchg
test
jmp
xchg
pop
push
mov
mov
dec
mov
mov
lods
cmpl
pusha
stos
push
lret
es
xchg
sbb
cmpsl
xchg
int
jle
not
push
out
ficoms
mov
jle
jmp
mov
add
aas
ret
movb
lret
rcl
pop
jg
iret
in
push
sbb
adc
cmp
frstor
fdiv
mov
inc
sbb
dec
clc
cmp
push
rolb
jbe
mov
cmp
call
cmp
lds
sub
scas
nop
sahf
dec
ffreep
movhps
add
dec
std
sbb
dec
add
pushl
xchg
ja
outsb
shll
rcl
sarl
push
sbb
sbb
xor
pop
lret
cmp
test
mov
dec
mov
inc
cltd
or
push
stc
jo
sub
mov
dec
cmp
push
movsl
out
repnz
fcomps
cmc
lods
mov
sahf
sbb
mov
cli
and
push
loopne
fldcw
cmp
xchg
test
mov
mov
adc
dec
xor
or
add
inc
mov
and
push
jl
lods
inc
add
test
cwtl
or
and
or
mov
and
mov
push
dec
fdivp
push
push
add
test
mov
mov
bnd
pop
sbb
push
xor
cmpsb
inc
aas
loope
sub
mov
enter
jne
mov
les
leave
jmp
ja
in
push
cltd
arpl
add
leave
and
adc
push
nop
aam
push
nop
sbb
push
cmp
and
in
enter
jne
inc
out
mov
mov
rclb
movsb
jbe
cmp
aam
and
push
pop
rorb
and
pop
mov
je
mov
pop
fwait
xchg
and
fdivs
std
cmp
movsl
jle
xor
dec
inc
stos
sbb
mov
aam
lds
mov
sbb
mov
fnstsw
sub
adc
pop
or
inc
cli
adcl
leave
jo
lods
call
jp
aaa
xor
lahf
jnp
iret
shl
dec
rolb
jmp
int
cmp
dec
mov
add
pusha
sub
out
jo
shr
mov
orb
dec
lret
outsl
lret
mov
push
mov
sub
inc
mov
dec
into
cmpsb
fstpl
mov
stc
jmp
xchg
inc
mov
std
mov
add
mov
ret
inc
xor
cmc
push
xchg
aas
inc
pop
ja
and
pop
pusha
mov
jo
push
inc
aad
or
cmpsl
in
pop
mov
xor
pop
loopw
nop
lock
mov
xchg
test
in
das
or
add
jno
mov
jmp
cmc
adc
int
xchg
jg
addl
inc
mov
jmp
scas
adc
rcl
xchg
inc
ljmp
scas
test
add
pusha
insl
pusha
mov
imulb
pop
movsl
cmpsb
pop
sbb
jp
cwtl
lea
popf
lret
jmp
rorl
mov
adc
out
roll
test
push
decb
and
call
mov
loope
sahf
sbb
mov
ficoml
loopne
stos
repz
dec
mov
bound
adc
test
je
mov
xor
sub
push
jo
addb
or
lods
mov
aas
pop
in
inc
and
outsb
push
mov
je
jmp
bound
hlt
sbb
int
mov
outsb
xor
popa
mov
pop
adc
out
sub
sub
pop
mov
call
and
sub
push
push
dec
sub
inc
cli
fbstp
inc
sub
cs
sbb
in
stos
mov
push
test
push
xchg
lods
shlb
add
add
das
mov
cmp
and
imul
pop
jl
mov
and
push
lds
or
mov
inc
and
repz
fcomp
cmp
xor
pop
adcl
jb
ss
fs
and
je
ret
mov
xor
out
loope
repnz
sub
jbe
adc
push
mov
popa
pop
xchg
pushf
imul
lds
sub
pop
imul
popf
sbb
dec
push
sub
sbb
jmp
dec
and
pop
add
pop
mov
fimull
lock
icebp
jge
sub
ds
mov
sub
cmpsb
lahf
icebp
out
sub
push
push
dec
das
xchg
subb
fwait
mov
lret
dec
adc
or
and
sbb
popf
push
jle
imul
cmp
pushf
xor
pop
pusha
imul
cmp
adc
push
mov
lock
jns
dec
mov
push
adc
jmp
jbe
and
imul
jae
push
aad
iret
loopne
div
xchg
cltd
outsl
cld
rclb
and
daa
pop
mov
fs
test
and
shlb
cmp
push
in
push
jp
rcll
loopne
jge
and
xchg
xchg
popa
call
add
sub
dec
loope
out
movsb
into
add
dec
call
push
cltd
fcomps
xchg
add
jbe
xchg
xchg
lods
lea
and
jae
or
jmp
cltd
or
cltd
xor
mov
movb
popf
push
aam
jno
or
xchg
mov
repz
loope
lds
test
loop
mov
mov
push
mov
xchg
cmp
imul
out
pop
cmpsb
push
aas
fwait
push
adc
jno
jo
aas
push
sbb
std
mov
repnz
fcmovne
xchg
ja
mov
xchg
mov
sub
push
and
jmp
call
jmp
pop
jle
fwait
dec
sub
ret
aam
dec
ja
xchg
aas
jle
jo
xchg
inc
std
pop
stc
dec
pop
pop
pop
aas
lret
in
scas
test
lret
xchg
pusha
inc
jb
xlat
pop
stos
popa
sub
cmp
ret
cmpsb
sbb
add
jmp
jmp
imul
dec
fcoml
lods
int
pop
mov
les
push
or
cmp
push
mov
sahf
mov
sarl
jne
test
sub
push
repnz
jno
dec
mov
aas
fwait
mov
sbb
pop
xor
cmp
pushf
js
enter
mov
pop
inc
cmp
decl
lods
rolb
iret
jg
popf
sbb
addl
xor
ss
lods
push
mov
pop
outsb
ja
pop
stos
scas
lahf
lcall
sub
mov
cwtl
pop
daa
cmp
in
daa
das
push
lock
in
popl
inc
add
pusha
iret
aaa
mov
sahf
mov
mov
bsr
and
subl
sbb
add
jae
andb
push
adc
jnp
stos
mov
loopne
fstps
sub
and
jnp
movsl
iret
mov
dec
mov
jg
aam
and
jb
cmc
or
xlat
cmp
jmp
imul
inc
dec
adc
sub
pop
mov
les
sarl
xchg
lods
mov
jns
outsb
pop
cmc
enter
clc
mov
dec
dec
test
in
sbb
test
jae
lret
pusha
andl
mov
les
sub
mov
fimull
jp
rcl
cld
fldcw
jns
or
iret
mov
add
jbe
or
and
mov
das
push
jnp
fsts
movsl
jmp
jle
mov
xor
inc
cwtl
sti
cmp
pop
push
jl
mov
cmpsl
add
xchg
out
pop
pop
jp
rcrb
mov
push
cmp
loop
xchg
jnp
scas
xor
sbb
scas
nopl
out
cmp
fisttpl
and
mov
push
lret
fadd
stc
sbb
and
movsb
nop
push
stos
test
jp
pop
stos
push
pop
add
bound
add
push
sbb
jg
xor
stos
jmp
repz
addr16
inc
xlat
sahf
sbb
movsb
popf
jg
mov
pusha
in
adc
popa
lret
push
mov
fldenv
xchg
xchg
les
pusha
je
dec
imul
popf
inc
mov
push
push
test
pop
out
pop
in
out
ret
adc
pop
jp
scas
jb
mov
out
inc
mov
mov
pop
mov
and
pusha
xor
cmp
addb
jnp
xorl
shll
test
push
cmp
jbe
mov
pop
or
add
dec
fldenv
add
mov
cmp
fiadds
dec
sbbb
pop
push
pop
xor
test
sbb
inc
inc
pop
xlat
or
mov
pop
jbe
and
aad
pop
insl
cmp
inc
adc
fnstenv
adc
push
mov
mov
jmp
pop
sti
adc
sub
add
and
inc
adc
pop
lods
clc
lock
inc
and
in
lcall
imul
lret
ret
jecxz
dec
xor
mov
xchg
pop
mov
inc
jns
xlat
pop
fcmovbe
push
xor
mov
imul
mov
in
lret
jns
mov
outsl
inc
mov
cmp
mov
push
iret
mov
ret
stos
dec
test
imul
mov
aad
repz
mov
data16
jg
xchg
pop
inc
and
and
out
mov
pop
fists
xchg
daa
lahf
pop
pop
fld1
add
adc
adc
push
sbb
lret
pop
mov
shll
pop
ja
mov
sahf
int
ja
jge
dec
dec
dec
std
gs
mov
daa
scas
idivl
mov
dec
sub
lret
fwait
les
mov
fbld
jne
int
xlat
sub
jb
test
mov
sbb
pop
pop
or
inc
mov
aad
mov
jg
repnz
mov
out
dec
xchg
ret
xchg
sub
inc
test
daa
fbld
aaa
test
inc
xchg
pop
dec
enter
lea
or
or
popa
push
push
out
mov
lds
cmp
mov
rcrb
stos
mov
loope
fnsave
push
es
push
and
ret
mov
mov
mov
sbb
adcl
and
xor
movsl
lds
cmp
jae
arpl
xchg
adc
xchg
cmp
or
sub
pop
mov
push
fcoml
add
ss
inc
sbb
mov
icebp
cmp
jp
cwtl
add
cwtl
jge
cs
dec
popa
push
ret
rcrb
and
popf
lea
dec
ficoml
bound
dec
mov
cmpsb
xchg
inc
push
inc
shll
cmp
les
dec
sbb
mov
mov
popl
insl
jae
push
xor
jle
sbb
sahf
int3
xor
push
mov
mov
push
ljmp
dec
out
and
cmpsl
lret
je
mov
shrl
pushf
fisttpl
xor
pop
into
lock
rcpps
inc
bound
jl
addr16
inc
cmpsb
or
push
xor
into
xor
push
cmp
mov
jns
lret
or
mov
in
pop
fs
lret
scas
cltd
repnz
push
jl
adc
adc
jnp
jae
ret
mov
ja
pop
test
roll
inc
int
enter
sub
scas
leave
lcall
cmp
dec
mov
idiv
test
mov
xor
jns
pop
inc
sahf
xor
xchg
jbe
mov
into
fcmovu
jo
cli
push
cld
dec
nop
pop
psubusw
sub
js
mov
xchg
mov
imull
mov
lods
arpl
cmp
movsl
out
lret
push
aas
xchg
sbb
cld
lret
push
call
into
jnp
xchg
xor
sub
add
ficompl
negb
ret
adc
ljmp
roll
push
cmp
cmp
loope
nop
jmp
sub
jmp
jbe
mov
addb
sbb
push
in
rolb
mov
rclb
cmp
cli
js
mov
sub
jmp
repz
xchg
pop
mov
inc
outsb
xor
push
cmp
cld
imul
test
fdivrl
adc
das
int
adc
ss
mov
xor
icebp
cmpsb
lahf
cli
aaa
aad
into
xor
and
jecxz
aas
adc
adc
outsl
mov
sbb
pusha
rcl
sub
int3
in
or
push
push
clc
sbb
adc
loop
repz
push
cmpsb
sbb
mov
out
mov
cmpsb
jg
clc
test
fdivp
dec
pop
cmp
xlat
pop
pushf
cltd
or
test
lahf
xor
and
mov
xchg
popa
push
lret
and
cmp
rcl
or
bound
fwait
ret
mov
sbb
inc
movsb
out
mov
sub
adc
or
repz
jge
pop
outsb
mov
xor
ret
sti
jbe
xchg
or
jg
out
add
fnsave
cmp
in
push
out
mov
scas
inc
sub
pop
inc
dec
fcoml
pusha
movsl
imul
mov
push
aaa
sub
loop
mov
or
sbb
sub
pop
and
sub
pop
in
aam
mov
xchg
in
jmp
jmp
push
dec
sbb
pop
dec
aas
mov
lahf
bound
gs
sbb
jl
inc
in
push
ror
push
dec
lcall
int
test
inc
lret
sbb
sarl
adc
addr16
mov
test
call
inc
jle
sub
push
pusha
outsl
pusha
mull
movsl
jge
ljmp
jp
test
mov
sbb
add
stos
gs
rcrb
add
cmp
sbb
lcall
cmp
xor
testl
mov
loope
test
lret
jo
data16
cld
sub
lock
sbbb
mov
pop
scas
mov
add
dec
dec
sbb
cmp
out
pop
inc
les
cmp
test
mov
push
push
pusha
dec
loop
adc
push
pop
test
enter
lahf
xchg
push
into
push
out
xchg
sbb
dec
outsl
jnp
mov
jnp
stos
mov
loope
daa
mov
push
push
cld
imul
jbe
jnp
das
fs
rcrl
xor
push
jecxz
rorb
enter
mov
imull
fadd
in
cld
lea
movsl
inc
xor
pop
arpl
pop
push
adcb
fimull
mov
test
xor
sub
sub
and
imulb
sbb
push
dec
xchg
mov
adc
xchg
jp
enter
jne
aam
fisubs
out
fists
lock
arpl
pop
in
or
mov
out
sahf
jae
loope
cld
test
int3
push
lods
pop
adc
mov
mov
pop
test
sarl
mov
outsb
or
mov
push
mov
add
fcom
orb
scas
adc
pop
xchg
popf
cmp
int3
loope
lods
push
dec
nop
mov
fs
test
dec
xchg
jne
sbb
testl
xchg
ds
lods
daa
mov
jecxz
out
cwtl
mov
sub
hlt
push
aaa
jbe
je
lcall
or
imul
xchg
xor
pusha
xchg
or
loop
dec
clc
hlt
incb
mov
aas
push
mov
ret
dec
bound
pop
sub
push
cli
sub
sbb
push
divl
or
jp
add
pop
fwait
ret
ja
dec
xor
xchg
push
mov
xor
sub
jbe
or
sbb
jb
addl
lret
pop
and
sub
orb
nop
mov
and
mov
mov
aas
mov
mov
lcall
mov
pop
adc
repz
jmp
mov
push
rcll
and
or
pop
lock
cmp
jmp
loopne
add
xchg
inc
cwtl
lahf
addb
lods
adc
pop
mov
dec
and
dec
bound
enter
cmpsl
sub
push
adc
pusha
imul
mov
jae
mov
test
das
int
incb
test
sub
inc
push
fdiv
and
cmp
xchg
popf
popl
xor
fiaddl
scas
scas
test
mov
sbb
scas
xchg
inc
jl
arpl
and
adc
adc
cli
scas
xchg
adc
sbb
inc
movsb
daa
mov
call
cmc
jp
loop
xlat
adc
and
orb
movsb
lods
repnz
cmp
fdiv
fdivl
mov
lods
add
mov
xchg
push
clc
stos
sub
testb
mov
scas
or
lds
fcoml
stos
lret
adc
icebp
xchg
cmpsl
cld
push
dec
cltd
add
into
arpl
in
inc
ds
mov
dec
clc
xchg
or
stc
movsb
mov
into
and
aas
sbb
dec
sbb
dec
push
orl
daa
xchg
aaa
loop
popf
aam
sub
xchg
outsb
or
xchg
pop
mov
sbb
pop
xor
jbe
mov
mov
out
and
and
out
xor
mov
aam
xor
orl
mov
in
flds
dec
and
fdivl
inc
mov
outsl
mov
adcb
push
xor
pop
adc
and
push
xchg
iret
movsb
and
add
add
int3
pop
cmc
mov
sbb
cmpb
push
sahf
inc
and
es
pop
push
test
pop
jge
test
mov
mov
roll
in
xor
dec
scas
insl
pop
popa
lahf
cld
js
inc
int
in
sahf
cmp
rclb
and
lret
test
gs
lret
in
xchg
dec
test
in
cmp
sub
pop
fsubrl
fidivl
daa
daa
fistps
push
ja
jecxz
push
jne
dec
xchg
or
sub
cmpsb
sub
xchg
pop
add
mov
fildl
inc
pop
jbe
xchg
xor
in
xor
movsb
mov
xor
mov
mov
scas
imul
nop
cltd
insb
mov
ds
sub
stc
push
mov
mov
adc
mov
js
lcall
pusha
jo
push
cli
fidivrs
ljmp
push
ss
cmp
cwtl
adc
xor
dec
test
pop
insb
push
xchg
xor
add
dec
mov
enter
dec
in
test
movsl
sub
push
cmpsb
out
ds
sbb
out
imul
fld
daa
adc
jl
sub
dec
sti
movsb
mov
cmp
roll
inc
inc
lret
jle
mov
jo
dec
sub
stos
sbbb
stos
por
mov
cmpsl
daa
inc
cmc
iret
mov
outsb
mov
add
es
pop
fdivs
or
adc
test
femms
out
pop
rolb
sbb
outsb
daa
stos
add
fcoms
outsl
fucomi
in
movsb
sbb
sahf
mov
arpl
mov
push
stc
loope
mov
lcall
arpl
and
jno
and
jns
dec
and
xchg
scas
or
xor
lret
xchg
in
ret
xorl
clc
push
shl
lods
mov
stos
popf
and
mov
movsl
mov
mov
lods
push
add
xchg
add
insl
jbe
jo
mov
mov
and
dec
and
out
xchg
xchg
test
sbb
lods
lock
js
mov
dec
hlt
fiaddl
js
lods
gs
je
mov
mov
adc
popf
pop
test
cmpsb
jg
shll
xor
or
mov
fmull
leave
pop
outsb
loop
sub
popa
sarb
insl
xor
inc
jno
mov
arpl
sub
inc
xchg
lcall
cmc
and
xchg
add
or
pop
xor
mov
repz
add
in
arpl
mov
aaa
std
jns
jnp
pop
mov
clts
xchg
pop
xor
daa
aaa
or
mov
cwtl
sub
or
xchg
ret
xchg
cld
or
aas
std
jno
inc
jno
rorb
mov
xchg
jecxz
adc
xchg
outsw
push
clc
add
repnz
xchg
aas
or
popf
jl
cmpl
test
jg
adc
addr16
cmp
rcl
push
cltd
repz
add
jl
cmp
mov
test
out
ret
mov
push
jbe
mov
inc
lds
cmp
mov
and
mov
mov
inc
add
mov
xchg
add
inc
xchg
lods
push
jle
ret
aaa
inc
xor
push
stos
push
mov
dec
mov
mov
rorl
test
movsb
lds
inc
sbbl
mov
adc
mov
jmp
xchg
jmp
mov
cld
mov
push
mov
jnp
mov
mov
cs
addr16
test
outsb
stos
xchg
into
divb
insb
inc
popf
pop
jmp
out
in
dec
sbb
movntq
ret
loop
xchg
out
dec
jle
jecxz
ljmp
sub
push
push
dec
fs
fucomi
in
addb
xchg
dec
add
pop
sahf
push
mov
jbe
ljmp
std
inc
push
add
repnz
into
dec
xchg
xor
aaa
ss
addr16
mov
pop
adc
lret
das
test
pop
dec
xchg
cltd
mov
dec
mov
inc
jmp
push
jg
das
mov
pop
or
jne
push
cmp
mov
mov
outsb
iret
fwait
lods
lea
xchg
lock
sarl
or
fldt
dec
fwait
test
insb
sub
into
outsb
sahf
and
lock
and
mov
push
mov
iret
xchg
clc
jge
mov
test
pop
xchg
fnstenv
xchg
cs
scas
adc
or
andb
test
call
sub
pop
shl
test
push
int3
cmpl
sbb
hlt
fcomp
shll
lea
add
outsl
inc
mov
inc
out
xor
jo
fildll
vcvttpd2dqy
ret
xor
test
je
xchg
jae
sbb
into
adcb
sbb
push
pop
jns
add
jae
mov
cmc
fcmovu
inc
shr
push
mov
jg
out
xchg
pop
movsl
xchg
push
popf
inc
je
or
frstor
lea
inc
jmp
or
je
pop
and
das
jmp
pop
cmpb
xlat
leave
jg
cmp
sbb
mov
and
jb
test
clc
push
clc
jp
push
cmp
add
dec
stos
hlt
test
adc
jmp
sbb
inc
popa
pop
adc
mov
push
inc
mov
cmp
push
in
cltd
dec
mov
cmp
sbb
xor
orb
pop
cli
aad
scas
jnp
outsb
cmpsl
mov
ss
xchg
insl
aam
inc
push
sahf
jbe
mov
popf
int3
hlt
outsl
cmpsl
and
scas
or
sub
js
leave
lds
outsl
mov
inc
imul
mov
stos
mov
stos
sbb
clc
sbb
or
and
push
inc
rcl
outsb
mov
test
dec
xchg
sar
and
aad
xor
cwtl
and
xor
mov
xlat
xchg
pop
rolb
add
stos
mov
nop
dec
add
or
xchg
push
mov
or
push
dec
out
pop
scas
pusha
mov
daa
add
lods
mov
xchg
xchg
dec
xchg
cli
stc
fildl
pusha
aas
jno
ret
addr16
dec
je
and
or
sub
jmp
imul
mov
nop
xlat
or
xor
xchg
adc
fidivrs
arpl
dec
fldenv
loope
pop
xchg
push
icebp
sub
cmp
mov
subb
dec
iret
sub
push
loop
push
stos
lock
pop
sahf
dec
jo
push
cmpsl
mov
mov
movsb
sub
mov
les
mov
int
or
lret
sbbb
jnp
add
shll
sarl
lret
fwait
pop
out
int3
std
dec
xchg
or
imul
dec
sarb
insb
xchg
leave
push
push
mov
and
sub
mov
jmp
sti
and
mov
fdivrp
cmp
cmpsb
dec
mov
inc
testb
pop
into
xchg
jecxz
mov
xor
movsl
xchg
xlat
addr16
push
jecxz
aad
out
sbb
push
popa
cmpsl
add
mov
shrb
inc
xor
jmp
js
test
pushf
adc
jl
push
out
or
cmp
push
mov
add
out
jb
cwtl
dec
dec
adc
jae
lret
add
leave
jl
lahf
dec
pop
ficomps
fcoms
pop
add
les
aaa
mov
sub
ret
stos
scas
or
icebp
lret
xlat
dec
and
mov
pop
aaa
xlat
fistl
add
mov
dec
lods
aad
jp
sti
or
pop
insb
outsb
push
pop
movsb
inc
ja
ds
pushf
xor
push
pop
add
mulb
inc
push
push
xorb
stos
or
pop
imul
pusha
pop
mov
fwait
in
mov
xor
ja
mov
cs
mov
arpl
fdivrs
dec
sub
add
push
das
pop
xor
push
shr
lcall
pop
das
cli
push
mov
std
movsl
push
jo
lea
dec
inc
xor
inc
repz
movsl
or
or
das
inc
sub
imul
icebp
xchg
ljmp
iret
adc
jne
xchg
pop
mov
jbe
add
adcb
mov
pop
dec
lcall
movsl
call
imul
adc
gs
xchg
jnp
mov
fidivrl
and
jne
insl
lret
cs
xchg
sbb
gs
inc
outsl
es
and
bnd
cmp
stos
popa
lea
dec
inc
mov
sub
adc
cmp
test
jno
mov
sub
cmp
movsb
pop
push
lcall
jns
sbb
push
or
js
hlt
and
mov
add
cmpsl
push
jp
pop
popa
mov
imul
xchg
adc
dec
mov
jl
sub
push
cs
push
sbb
js
and
pop
fldt
adcl
jb,pt
dec
mov
dec
push
push
push
stc
add
inc
and
ja
aam
nop
push
scas
push
into
dec
lods
lds
or
mov
lret
sbb
shrb
xchg
push
adc
sub
loopne
in
mov
push
lret
add
mov
fisubrl
fisttpll
js
inc
adc
push
aas
push
and
jo
mov
push
imul
into
jge
movsb
mov
pushf
and
or
sahf
nop
sahf
push
insl
jbe
xchg
mov
outsb
stos
popa
orl
pop
cld
cmp
sbb
jl
dec
dec
icebp
push
insb
aas
or
mov
jecxz
sbbb
pop
dec
push
sub
mov
adc
push
xor
jnp
stos
ja
sub
lahf
cmpl
cmp
out
mov
xchg
mov
lret
loop
imul
popl
jp
inc
out
fimuls
dec
xchg
incb
shll
add
mov
push
repz
dec
test
cltd
and
fsub
dec
sbb
jo
mov
jge
pop
repnz
pushf
jno
std
mov
mov
cs
and
sar
jb
cltd
aas
sub
jge
cs
mov
xchg
sbbl
adc
push
mov
out
jle
sub
adc
insl
test
inc
sbb
xor
shll
inc
pushf
dec
pop
repz
outsb
dec
add
mov
dec
pop
ds
iret
rcl
jbe
incb
sub
push
sti
and
ds
out
mov
pandn
cmp
and
call
dec
push
bound
arpl
fs
xchg
fldcw
mov
sbb
paddb
lret
jne
mov
cwtl
stos
leave
ljmp
inc
push
fmuls
arpl
ja
inc
push
sbb
mov
test
outsb
or
stc
loop
mov
fs
xchg
add
arpl
cmp
sbb
sbb
in
sub
mov
lahf
pop
outsb
or
repnz
loopne
jne
jge
cs
fldcw
inc
dec
xor
mov
push
les
sub
lea
xchg
add
add
rcrb
movntps
ficoms
dec
lods
mov
mov
stc
int
fwait
adc
les
mov
adc
es
or
xchg
leave
adc
mov
jae
jecxz
stos
or
jo
adcb
ds
xor
add
jb
aas
rorb
out
orl
sub
sti
push
and
repz
add
outsb
or
test
ds
test
or
fistpl
jnp
leave
je
test
cli
pop
and
loop
cmpsb
inc
pop
mov
xchg
pop
cmpsl
xchg
dec
mov
testb
add
push
sub
adc
jl
int3
aad
rolb
xor
movsl
popa
or
jecxz
lahf
enter
pop
sbb
out
lock
test
fdivrs
loopne
push
cltd
mov
xchg
push
and
dec
fcomps
ret
in
clc
add
cwtl
inc
and
sub
push
imul
xor
xor
sarl
jmp
jbe
insl
xchg
mov
cltd
lods
xchg
adc
sub
and
pop
sarb
cmc
xchg
clc
sub
dec
xchg
sub
or
add
pop
stc
inc
ds
test
orl
cmp
sbb
inc
xchg
inc
lret
xchg
push
movsb
lcall
outsb
sbb
pop
mov
cmp
lea
push
mov
daa
insb
push
inc
es
mov
inc
or
or
jnp
lock
stc
or
cs
arpl
pushf
add
adc
xor
xchg
out
mov
mov
popf
sub
dec
fsub
push
outsb
adc
mov
fs
sub
jae
pop
inc
add
and
orl
nop
fstpt
inc
push
inc
mov
shl
sbb
mov
fwait
stos
xchg
pop
push
sbb
and
iret
test
aam
movsl
dec
and
lahf
dec
lods
imul
mov
stos
pushf
in
loopne
aam
mov
xor
push
sbb
ret
pop
andb
fs
test
testl
mov
mov
inc
jo
add
inc
and
adc
divb
pop
sub
push
dec
loopne
cmpsb
aaa
scas
xor
stos
out
fistps
cmp
xlat
lret
cmpsb
test
subb
and
mov
insb
imul
lds
cmpsl
cli
jmp
pop
inc
movsb
cmp
popa
daa
aad
add
out
add
out
stos
arpl
pop
cltd
das
imul
dec
mov
dec
adc
jmp
shr
pushf
test
sub
aas
xchg
pop
jns
std
pusha
ljmp
test
push
jnp
sub
mov
imul
hlt
xor
jmp
push
loope
inc
sub
pushf
or
lock
adc
or
mov
jbe
jmp
insb
cmpsb
lods
xor
sti
mov
fwait
popf
dec
push
faddl
dec
push
dec
mov
setno
imul
sub
xor
rol
lods
mov
pusha
and
cmpsl
outsb
fstl
shr
loope
scas
enter
inc
push
add
inc
cmp
outsb
or
sub
divb
sti
pushf
pop
xorl
or
adc
mov
sbb
and
xor
arpl
scas
cmpb
or
stos
aas
fwait
mov
push
in
inc
and
sarl
cmp
mov
sbb
or
inc
je
lret
pop
pop
popa
dec
pop
or
mov
fisubs
ret
add
stc
xor
std
in
xor
clc
leave
leave
xchg
jnp
mov
or
loope
adc
sub
mov
pop
inc
mov
cmp
sbb
pop
enter
test
outsl
jb
xor
adc
inc
stc
mov
lcall
inc
jae
pmullw
adc
aas
cli
loope
xor
pop
ret
pop
sub
cwtl
movsb
xor
pusha
jno
pop
fistpl
dec
cli
cwtl
rol
mov
add
xchg
inc
loopne
cwtl
jb
iret
fsub
ss
jecxz
es
adc
push
mov
adc
mov
cmp
negl
sbb
and
stos
xchg
cli
das
sbb
test
mov
sbb
jne
imull
inc
shll
insw
jl
inc
or
mov
jne
ja
push
sbb
add
fcoms
into
jmp
push
mov
and
popa
outsl
lea
push
lahf
std
loopne
jmp
test
dec
add
test
add
scas
jge
rorb
insb
scas
jle
pop
xor
add
sbb
pusha
adc
pop
pop
dec
js
lea
jo
push
and
add
outsl
or
or
add
and
pop
insl
test
push
pop
jb
mov
vmovshdup
mov
sti
cmp
cmpsl
test
pop
and
sbb
stos
sub
mov
inc
dec
fwait
pop
aas
addr16
jge
add
pop
mov
mov
in
ljmp
js
dec
or
jmp
mov
adc
jno
jle
cmp
lock
inc
cmp
lahf
pop
aad
dec
xor
adc
faddl
cmp
cmp
hlt
xchg
inc
mov
xchg
inc
retw
xchg
or
out
dec
pop
inc
outsb
adc
rcl
mov
push
adc
stos
add
pusha
push
jo
lret
inc
int
insb
mov
flds
mov
jae
ds
sub
mov
xor
cli
pop
mov
push
iret
sbb
pop
subl
pop
mov
or
pop
mov
aaa
pushf
pop
insb
and
lods
dec
scas
jno
je
fsubrs
sub
adc
dec
push
push
dec
inc
fld
xor
adc
jae
lock
pop
test
push
mov
xchg
jl
loopne
fstpt
xor
adc
outsb
inc
scas
fs
or
push
sub
jg
push
ds
inc
in
dec
iret
test
repz
imul
divb
int3
add
rolb
pusha
add
add
sub
les
mov
push
std
rcrb
jns
dec
out
sbb
ds
outsb
cs
pushf
pushf
cmpsb
ret
sbb
scas
outsb
jb
xlat
mov
xchg
pop
mov
sbb
xor
push
and
fadd
out
add
and
adc
and
jge
fisubs
xrelease
cltd
in
std
nop
mov
into
fmul
wbinvd
pushf
sub
imul
pop
push
sbb
fs
lea
pop
jle
out
shlb
inc
and
xchg
xchg
jns
test
or
or
mov
pop
pop
out
mov
sub
je
pop
test
arpl
jno
pop
lret
push
mov
cmp
mov
dec
and
mov
insb
pushf
cmp
insl
cltd
push
cltd
push
fldl
popf
cltd
push
pop
dec
int
imul
inc
jns
jb
sahf
aam
stc
jno
mov
das
insb
sub
scas
jg
fnstsw
pop
push
sub
inc
xor
sub
roll
cld
or
jmp
jbe
cmp
shrl
xor
push
pop
sbb
pop
scas
xor
push
cmpsb
loop
xchg
and
dec
andl
jne
aad
dec
push
insb
push
repnz
xor
cltd
and
insb
imulb
pop
fldenv
mov
popa
jmp
push
push
lock
adc
xor
cmp
xchg
addr16
lea
data16
xor
mov
jae
loopne
cmc
icebp
jmp
push
fsubrl
lods
nop
fwait
cmc
cmp
data16
xor
movsl
lahf
inc
shlb
aas
mov
movsl
push
sub
int3
dec
adc
icebp
sahf
cs
dec
mov
pop
pop
mov
mov
idivl
lds
adc
mov
jmp
mov
jp
scas
mov
rcrl
fstp
mov
test
mov
shrl
fsubrl
ds
pop
jae
setns
mov
idivb
fnstcw
test
inc
inc
xchg
popf
aas
das
inc
dec
in
les
in
sti
mov
test
pop
jge
xlat
xor
mov
xor
or
cmpl
cmp
sub
inc
arpl
dec
addr16
push
insb
pop
inc
jmp
mov
push
push
fldl
jecxz
lea
dec
lock
je
dec
vcomisd
lcall
lahf
mov
imul
rolb
test
scas
jmp
cwtl
cwtl
jo
mov
xor
or
repz
cmp
fsubrl
add
sahf
jne
pop
push
dec
shrl
test
hlt
jbe
sti
in
push
sysexit
or
call
xchg
xchg
popa
stos
shl
inc
jle
push
scas
stos
pop
pop
pop
out
mov
add
imulb
testl
jb
pop
inc
or
jb
out
int
or
inc
pusha
pop
mov
out
je
insb
enter
iret
xchg
stc
xor
fsubr
or
jecxz
clc
sbb
push
scas
jg
mov
mov
sub
cld
into
in
mov
popf
xchg
int
popf
cs
shrl
shrl
inc
ljmp
mov
setle
pop
jno
jno
jp
imul
fmul
jns
idiv
mov
scas
mov
fs
pusha
xchg
adc
cmpsb
add
mov
xchg
int
cltd
jge
pop
mov
xchg
pop
sti
add
or
cmp
ret
cmp
push
inc
jae
mov
test
push
jg
out
jae
aaa
shlb
test
inc
or
cmp
mov
shll
inc
popa
mov
hlt
lahf
test
push
fs
pop
jecxz
popf
pop
adc
jo
sbb
inc
pop
addr16
add
and
nop
cmp
or
sub
frstor
jmp
pop
fsubs
cmc
loope
loope
xor
loopne
inc
repz
sar
js
pushf
jbe
test
lcall
outsl
mov
in
jbe
and
pop
or
loop
inc
inc
imul
mov
popa
dec
repnz
xchg
xchg
inc
test
lods
jnp
outsb
cwtl
mov
and
cmp
adc
pushf
popa
or
inc
icebp
mov
shll
fs
jp
push
pop
xor
inc
mov
lea
jno
mov
mov
clc
aad
push
xor
fs
mov
fistps
scas
dec
adc
out
adc
push
sbb
pop
sub
mov
cli
add
xchg
mov
aas
dec
in
inc
dec
mov
push
mov
sbb
dec
cmpb
mov
ljmp
jl
jns
jno
out
mov
lock
enter
push
pop
cltd
and
les
or
xor
mov
adc
push
sbb
sub
add
dec
or
push
rorl
mov
adc
inc
cld
jae
out
loope
jp
inc
js
jno
aam
jp
clc
test
and
rorb
subb
xor
sub
sub
lret
add
xchg
cmp
scas
pop
cwtl
jge
sub
xor
movsl
inc
jne
popa
loopne
mov
sub
fs
inc
pop
popa
mov
popf
das
or
cmpsl
xchg
xor
daa
repnz
movsb
push
inc
mov
dec
nop
shrl
mov
rol
mov
es
cwtl
sbb
mov
or
cli
sbb
mov
pop
inc
jmp
mov
adc
repnz
dec
jp
add
cmp
ror
sub
sbb
xlat
hlt
ds
in
sbb
mov
mov
or
mov
dec
jecxz
stos
cmp
adc
out
daa
adc
xlat
jae
mov
cld
sbb
outsb
shll
cmp
mov
jge
fs
mov
ja
cmp
cmpsl
sub
cmp
cltd
mov
jbe
sub
dec
adc
xchg
xchg
addb
dec
cmp
les
or
inc
sbbb
js
adc
sbb
jb
sub
sbb
scas
pushf
stc
xor
out
in
sub
push
push
test
mov
daa
stc
sub
mov
pop
sub
scas
push
mov
arpl
push
mov
xor
adc
mov
jo
je
pop
push
mov
in
out
pop
sub
dec
jp
xor
fdivl
jg
adc
in
int3
mov
nop
lds
xchg
test
add
mov
call
sbb
leave
mov
cmpb
mov
rclb
jo
dec
mov
in
testl
mov
sub
push
add
out
cmpb
loope
lds
mov
mov
xor
insb
lret
add
inc
stos
aaa
xchg
in
mov
ret
in
xor
mov
pop
aas
pop
rcrb
into
incl
xor
jecxz
stos
dec
jmp
jno
mov
nop
pop
xchg
stos
popf
cmpsl
xor
inc
jno
push
shl
in
insl
lea
dec
popa
popf
adc
scas
mov
sahf
inc
dec
pop
insb
push
xchg
xor
cli
sub
push
ja
cmp
jno
scas
adc
and
aaa
ds
mov
sub
leave
pop
sub
out
dec
xchg
mov
dec
fnstsw
pop
mov
push
mov
xor
adc
mov
rorb
fs
sbb
cmp
lds
cmp
idivl
add
jb
mov
dec
push
adc
adc
xlat
int3
jl
scas
in
xchg
or
out
xlat
pushf
insl
nop
ds
hlt
mov
mov
sub
push
mov
stos
clc
lcall
lret
or
call
movb
mov
sub
push
dec
jbe
insl
imul
mov
inc
jns
and
dec
jp
cmpsl
ret
call
mov
int3
cmp
and
xor
pop
notl
ja
push
test
stos
outsl
or
dec
add
add
add
add
add
add
int
push
push
push
push
mov
mov
mov
and
shr
xor
sub
shr
imul
not
inc
loop
pop
pop
pop
pop
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
