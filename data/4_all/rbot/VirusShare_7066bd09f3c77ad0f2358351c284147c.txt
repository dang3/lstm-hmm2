push
add
push
xor
in
push
mov
lea
jmp
jmp
sbb
pushl
or
inc
unpckhps
faddl
cmp
je
in
jne
call
sbb
adc
int
cld
ds
gs
or
nop
rcll
xor
sub
sbb
movsb
pop
pop
pop
leave
ret
mov
add
addr16
adc
sbb
pusha
add
add
xchg
xor
push
out
or
add
xor
in
lock
pop
or
rcrb
cmpsb
or
fcmovnbe
call
movl
je
adc
lock
clc
pop
cwtl
xor
xor
cmp
inc
loope
call
lock
mov
mov
incl
or
call
add
testb
je
dec
push
outsb
incl
in
mov
loope
push
into
push
repz
stos
and
pushf
orl
hlt
jae
mov
test
loop
push
mov
jp
cld
shll
adc
pop
xchg
movb
pop
push
sbb
sbb
adc
test
inc
mov
push
fcomp
sub
mov
mov
test
aaa
out
cmc
push
xchg
decl
mov
sub
jae
dec
nop
mov
shlb
je
lock
push
hlt
or
inc
pop
adc
xor
loopne
rcll
xor
mov
jno
mov
jmp
enter
scas
jbe
or
adc
movsb
pop
bound
cld
fisttpl
sbb
xchg
and
jl
test
test
add
jge
test
mov
add
pop
insb
imul
and
mov
cld
pop
push
xor
and
cmp
cmp
fucom
movsb
mov
mov
cli
sbb
mov
pop
xchg
movsb
sub
pushf
sub
add
flds
aad
and
xor
push
cmp
je
push
test
push
or
sub
sbb
xor
or
hlt
fadds
arpl
fmull
movsb
sbb
sub
inc
inc
test
or
dec
mov
jge
xor
je
add
jge
cmp
xor
xor
or
adc
inc
and
test
add
push
sbb
adc
or
cmovge
add
ret
jne
sbb
add
dec
push
sub
test
sbb
inc
shrb
js
clts
shrl
sub
je
sub
daa
add
inc
pop
fsubs
cltd
mov
pop
mov
or
xrelease
fsubl
sbb
dec
sbb
xlat
or
push
in
or
orps
cmp
int3
cmp
mov
cld
fs
mov
push
fcom
xchg
and
sbb
enter
clc
inc
mov
inc
and
test
sbb
enter
adc
jmp
jb
hlt
sbb
addr16
adc
push
bound
test
mov
xchg
in
xchg
js
push
xchg
push
sbb
cmp
and
addl
gs
mov
and
and
push
xor
adc
inc
sbb
in
out
adc
cmpsb
popa
inc
adc
pop
loop
fs
inc
and
adc
or
ljmp
or
mov
and
pop
enter
xor
mov
fwait
or
adc
cmp
and
and
adc
scas
call
push
aas
into
jns
or
xchg
into
push
mov
inc
add
mov
lock
jo
mov
fs
int3
sbb
mov
sub
test
je
inc
cwtl
xor
arpl
sbb
jo
inc
add
or
and
xor
loope
or
scas
and
call
data16
sub
sub
aad
out
inc
add
mov
mov
xchg
cmpsb
and
sbb
mov
or
rorb
lret
inc
adc
enter
or
movsb
daa
js
test
sub
or
xchg
sub
loopne
sub
sbb
rolb
enter
shlb
xor
punpckhbw
aam
lds
pushf
or
fs
bound
xchg
and
rolb
bound
mov
sbb
daa
inc
inc
or
adc
outsl
lahf
adc
add
rorb
add
stc
ret
or
xchg
and
mov
lods
cmp
leave
or
enter
aam
and
fs
xor
lea
sub
xchg
jl
adc
nop
and
rorb
pop
adc
push
adc
dec
adc
sarb
sbb
mov
inc
adc
and
or
or
pushf
lret
push
hlt
adc
xchg
mov
fs
loopne
adc
arpl
int3
gs
and
mov
test
ret
mov
xchg
or
mov
cmp
or
dec
les
lock
lock
adc
test
cmp
lds
sub
cmp
sub
jmp
push
xor
add
in
pop
ror
and
adc
xchg
das
test
cli
rcll
je,pt
mov
adc
or
adcl
inc
loopne
adc
sbb
jg
test
in
push
fsubs
adc
mov
or
mov
jo
sbb
inc
nop
adc
and
js
add
jg
or
pop
and
adc
cmp
in
and
pop
add
arpl
push
inc
adc
movsb
and
jnp
daa
rclb
jbe
push
xor
adc
insb
sbb
mov
push
bound
adc
dec
and
sbb
rclb
out
jae
sbb
push
or
les
sub
loopne
dec
addr16
les
mov
inc
xor
jge
dec
mov
je
int3
mov
sub
dec
and
mov
je
cmp
cmp
sub
inc
inc
jb
sbb
and
and
mov
push
inc
dec
jo
ljmp
mov
loopne
or
xor
scas
fdivr
or
test
lock
call
dec
loop
sbb
adc
bound
aad
fbld
xchg
add
rcrb
pop
dec
ret
mov
or
xor
cmp
pop
jge
je
dec
lret
add
push
call
push
adc
push
and
bnd
push
add
and
xorl
subb
jno
or
test
icebp
cmp
push
inc
cwtl
and
pop
enter
inc
or
andb
adc
cmp
and
lods
pusha
test
sbb
sbb
dec
or
test
into
cmp
and
nop
dec
lods
clc
inc
lock
mov
push
sub
les
xor
and
loop
push
inc
nop
mov
in
cmp
xchg
mov
adc
inc
jbe
adc
enter
sub
mov
inc
inc
mov
out
sbb
and
xchg
inc
je
in
roll
cmp
pop
push
mov
adc
les
imul
fstps
and
sahf
mov
sbb
shl
jl
push
ret
mov
jl
add
dec
or
test
je
lcall
arpl
fistl
push
lea
clc
jnp
js
mov
cmp
pop
ret
and
je
sub
je
dec
stc
and
lock
push
adc
inc
popf
or
jmp
mov
and
add
das
pop
out
add
lock
in
outsl
sub
and
adc
negl
pop
shrl
int3
push
pop
add
jne
cmp
add
add
in
dec
ret
inc
addl
sbb
jb,pt
jmp
xor
xor
es
adc
push
and
push
mov
inc
lret
mov
add
jl
dec
fadds
adc
mov
inc
std
cmp
in
iret
aaa
mov
cmp
repz
bnd
or
push
lock
fwait
xchg
ret
rcrl
pop
mov
or
shl
stc
add
jle
lea
push
shr
push
inc
jnp
cmp
enter
movzwl
add
inc
mov
negb
pop
jmp
and
and
add
shr
lret
mov
jmp
idivl
call
xchg
orl
test
jbe
movl
jle
xchg
fs
aaa
add
and
test
frstor
sbbb
call
ja
xor
dec
and
sbb
or
movsb
out
leave
les
adc
aaa
jne
push
clc
dec
rclb
inc
jno
frstor
push
ret
cmpsl
data16
dec
xor
pop
ljmp
cmpb
jne
cmpb
inc
add
xor
cmp
loopne
jbe
ret
adc
loop
std
adc
filds
adc
mov
sbb
stc
rcpps
call
sbb
mov
cli
inc
or
cmp
lods
pusha
outsl
xchg
xor
es
rcll
rolb
push
inc
mov
add
mov
inc
enter
pop
popf
cmp
sbb
push
add
mov
cmp
clc
jb
mov
outsb
fs
je
ds
adc
and
es
or
sub
sarl
jne
xchg
push
and
out
or
push
ds
and
push
xchg
leave
mov
leave
gs
cltd
dec
mov
cmpsb
pop
lahf
mov
cmp
sbb
pop
push
and
and
mov
test
sbb
dec
xchg
sub
cmp
popf
push
mov
nop
cwtl
popa
push
push
push
mov
lock
jl
or
mull
int
adc
jmp
jp
push
push
in
test
aam
push
mov
jae
sub
test
push
push
jp
call
push
arpl
cmpl
jle
xor
add
mov
push
push
fwait
xchg
xor
adc
or
ret
jb
xor
sbb
fs
clc
es
xor
mov
add
test
add
adc
mov
push
xor
or
hlt
sbbb
cmp
insl
sbb
cmpsl
cmp
mov
in
pop
test
xchg
clc
pop
push
add
pop
or
imul
xor
test
sub
nop
jo
sbb
jns
addl
out
jo
pop
dec
jae
jne
sub
lret
sub
adcl
rorl
mov
adc
movsb
lret
insb
or
lret
std
add
icebp
fnstcw
faddl
push
hlt
rolb
inc
subl
dec
lcall
push
mov
push
inc
sbb
mov
cs
push
call
sbb
and
xor
push
dec
or
bound
xchg
sbb
push
sub
mov
aaa
imul
cmpl
jl
pop
cmp
adc
call
mov
adc
jle
imulb
jmp
cmpl
sub
xchg
aam
es
sti
or
jnp
les
repnz
movl
ss
mov
pop
pop
clc
add
inc
enter
inc
add
push
push
push
lcall
psllq
xor
pop
mov
sub
test
int
lods
std
add
jmp
lcall
orl
mov
hlt
mov
and
adc
adc
push
or
data16
mov
popa
clc
cli
int3
imul
sbb
and
lcall
les
sub
mov
test
aam
repz
ds
cwtl
int
xchg
shlb
imul
stos
cmp
add
dec
arpl
mov
punpcklwd
jo
cwtl
sub
sbb
dec
jp,pt
pop
sub
jp
sbb
aaa
cmp
jne
pop
push
jmp
in
push
aam
nop
fmulp
call
pop
push
pop
or
adc
popa
jmp
and
mov
call
inc
cwtl
fldt
jo
les
add
sbb
jne
add
pop
enter
push
mov
xor
mov
pop
loopne
dec
cmp
adc
pusha
decl
mov
mov
mov
sub
and
and
lret
ficoms
cmpsl
sub
in
sbb
iret
push
push
or
adc
sbb
push
pushf
pop
mov
mov
dec
inc
adc
sub
dec
pop
inc
imul
mov
dec
sbbb
aam
push
call
cltd
jb
sti
xor
adc
bound
insl
sub
nop
in
or
repz
push
les
jmp
cmp
je
mov
push
orl
push
and
cmp
jl
xor
inc
and
out
xchg
pop
xchg
adc
enter
movsl
ja
sbbl
add
xor
pop
sbb
lods
xor
sbb
inc
call
sbb
cld
xor
or
add
addl
mov
push
dec
xchg
push
push
push
into
and
popl
add
jo
inc
in
lret
subb
dec
mov
mov
inc
adc
dec
cld
je
xor
mov
or
icebp
inc
nop
mov
call
mov
jo
mov
mov
inc
sub
mov
xchg
and
mov
sahf
movl
lds
pop
lea
nop
movsb
add
cmpb
xchg
pop
movsbl
jo
mov
movb
push
xchg
dec
pop
js
add
jns
mov
inc
cmp
call
ss
push
mov
pusha
in
cmp
pushf
xor
mov
mov
inc
ret
inc
inc
inc
nop
and
xchg
or
push
cwtl
push
and
pusha
fistps
xchg
mov
dec
ss
push
mov
xor
jp
push
adc
xor
sub
popa
mov
pop
jecxz
and
push
aaa
mov
scas
inc
adc
inc
adc
jg
sub
and
xor
adc
sbb
adc
push
jl
call
add
push
sub
call
cmp
jbe
or
loop
push
in
fsubs
test
jo
daa
lods
subb
test
mov
jmp
stc
cmpl
ljmp
inc
sub
mov
inc
mov
rclb
in
sbb
cli
cmp
inc
sub
push
cmp
je
jbe
icebp
dec
dec
mov
and
pop
lods
loope
sahf
adc
adc
push
into
popf
adc
sbb
lods
cmp
cmpsb
inc
scas
call
sbb
cwtl
push
test
test
jnp
push
addr16
or
cmpsl
mov
shlb
lcall
xchg
adc
sbb
pushf
xor
mov
adc
inc
test
or
inc
sub
das
mov
in
and
push
cmp
cs
xchg
je
and
pop
jle
add
push
inc
inc
push
test
int
stc
adc
push
and
lods
pop
or
jne
add
sub
dec
push
mov
sbb
lods
pop
sbb
push
lea
lret
add
sub
push
pop
xchg
jge
and
add
jbe
mov
add
push
push
add
in
xchg
or
push
cmpl
add
fstpt
imul
inc
shl
xchg
xor
notl
push
push
scas
ret
mov
mov
call
add
jmp
cmpb
adc
test
adc
int3
adc
jne
daa
mov
adc
filds
mov
adc
dec
lret
fidivs
test
mov
xchg
in
call
xchg
mov
push
xchg
and
mov
xchg
inc
movsb
dec
in
xor
rorl
xor
pop
sbb
xor
roll
xor
mov
ss
jmp
mov
adc
in
test
push
cmp
fcompl
les
bound
sub
arpl
inc
mov
push
rcrl
mov
sahf
and
test
lods
push
lret
push
in
int3
jl
cltd
inc
subb
add
xor
incl
add
adc
mov
cmpb
ret
mov
sahf
add
mov
xor
lods
pop
sbb
sahf
adc
leave
test
sbbl
ret
jecxz
js
and
or
adc
or
andb
in
inc
or
add
jmp
adc
xor
cmp
cmp
daa
nop
clc
cmp
ret
or
mov
xchg
mov
sbb
movsl
inc
nop
outsb
test
jmp
xchg
push
lds
lea
pop
imul
adc
cmc
adc
xor
jne
icebp
pop
stos
xor
inc
js
rcll
inc
push
adc
mov
mov
test
sub
fcmovne
data16
addr16
sbb
mov
mov
arpl
enter
fcomps
sarb
and
push
les
gs
push
push
add
push
or
jg
cmpb
je
mov
add
insb
jge
cmp
or
push
xor
arpl
sbb
mov
rorl
sar
dec
add
mov
addl
dec
push
dec
sbb
sbb
cli
subb
add
out
mov
add
and
pop
movsb
and
popa
fmuls
je
rorl
or
mov
int3
into
imul
call
sbb
fsubl
mov
clc
sar
int3
cltd
mov
adc
fs
inc
mov
lock
aad
fnstcw
pushf
adc
mov
addr16
adc
adc
jg
xor
xchg
aad
mov
lea
xchg
aad
and
jb
ret
mov
dec
bound
cmp
movsl
test
and
fstps
enter
mov
adc
cmp
dec
unpcklps
xchg
sbb
and
into
std
mov
jbe
xor
ja
in
adc
jne
mov
adc
loope
xor
adc
and
ficomps
mov
sub
mov
nop
xor
adc
inc
fwait
inc
cmp
jmp
pop
in
sbb
ss
cli
pop
mov
mov
mov
xchg
clts
adc
lea
dec
and
push
lock
jo
and
cmc
pinsrw
lea
std
mov
sbb
test
lds
cmpsl
ror
das
add
cmp
pop
outsl
or
call
inc
hlt
shrd
cld
and
call
push
movsl
cmp
fbstp
xor
xchg
inc
inc
insb
adc
lahf
push
adc
mov
loop
sbb
cld
dec
sub
out
dec
add
inc
scas
bound
lea
mov
clc
mov
fcompl
js
lea
mov
or
adc
lock
test
std
xor
xchg
adc
adc
lret
push
imul
xor
jge
push
scas
rolb
pushf
adc
enter
push
xchg
negl
call
pop
mov
jle
sbb
push
mov
mov
jmp
and
scas
adc
add
push
xchg
leave
aam
test
add
cmpb
or
add
and
dec
xor
outsl
xchg
jns
adc
cli
mov
dec
jmp
adc
hlt
mov
xchg
push
and
sub
cmpsb
mov
inc
sub
sub
nop
inc
inc
mov
push
mov
mov
lahf
lret
jmp
orl
aam
push
out
cmp
mov
push
sbb
jle
or
nop
stos
mov
add
pop
xor
xchg
sub
imul
jge
inc
sub
stc
pushf
ret
cmp
sub
and
jae
fsts
lock
mov
or
repnz
cwtl
or
scas
adc
adc
mov
and
nop
test
enter
and
test
std
and
jl
je
and
nop
js
pop
pop
les
test
enter
mov
test
enter
and
push
inc
dec
and
idivb
inc
dec
and
fs
int3
or
adc
cld
and
loop
adc
or
sbb
test
jecxz
push
push
popa
sbb
jmp
hlt
fmull
ds
dec
adc
ficompl
in
and
mov
inc
adc
enter
scas
sub
or
adc
bound
inc
stos
mov
arpl
sub
test
adc
jo
inc
inc
pop
sub
or
and
and
das
test
push
inc
push
adc
pop
and
pop
adc
in
pop
jne
mov
sbb
inc
rclb
fnstsw
test
and
nop
movsb
mov
sub
adc
cmp
jnp
cmp
rcr
sti
or
inc
imul
call
mov
xchg
xchg
pop
pop
push
je
fisubs
in
dec
aas
push
or
adc
sbb
mov
jg
int
push
and
mov
mov
add
xor
adc
mov
jg
and
xor
push
jbe
sub
xor
xor
test
mov
test
and
mov
mov
pushf
lock
mov
movsl
cmp
jmp
test
mov
insb
jmp
test
mov
int3
inc
and
test
sbb
adc
mov
ds
sbb
and
jge
pop
push
test
and
or
mov
icebp
and
inc
add
and
ficompl
test
and
pop
or
or
test
adc
adc
push
pop
adc
and
fmull
aam
inc
pop
enter
mov
ficomps
test
and
fs
xor
nop
movsb
mov
pop
mov
test
icebp
mov
push
xor
nop
mov
ficoms
mov
adc
pop
mov
sub
xchg
and
adc
and
nop
insb
mov
sbb
adc
push
mov
sub
xchg
and
jne
gs
jge
add
add
jo
call
push
imul
xchg
enter
adc
jnp
mov
push
mov
push
mov
or
pop
xchg
cld
adc
mov
add
jns
and
adc
hlt
mov
or
test
enter
and
push
inc
mov
mov
sbb
or
test
sti
mov
and
adc
int3
mov
pop
ljmp
fwait
outsl
push
mov
inc
cmpsl
les
and
nop
test
jge
adc
jmp
sub
xchg
and
cmp
mov
sub
and
nop
mov
inc
jl
pushl
js
ljmp
aad
and
adc
pusha
adc
or
adc
inc
lods
inc
lcall
jne
or
inc
ret
jne
sub
test
sub
test
inc
int3
xchg
lock
sub
or
add
inc
aam
and
or
sub
inc
psubsb
into
sahf
push
cmp
adc
lret
xor
jl
and
or
jl
test
inc
mov
sbb
clc
adc
push
adc
mov
mov
fmull
sbb
das
push
call
cmc
sbb
in
adc
mov
enter
lods
fiadds
xor
pusha
lret
or
jmp
mov
je
xor
adc
enter
sub
xchg
and
sbb
cwtl
adc
or
lds
nop
inc
cld
scas
adc
mov
test
enter
and
push
inc
dec
and
mov
adc
pop
mov
inc
push
and
daa
xor
imul
inc
inc
push
sub
xchg
and
mov
cmp
or
lods
or
pop
xor
jo
lock
or
inc
mov
inc
and
inc
call
adc
fldcw
ja
loopne
push
les
sub
scas
mov
lods
cmp
in
mov
mov
push
inc
fcoms
and
add
aam
adc
nop
les
cltd
adc
and
ret
imul
ret
mov
adc
mov
add
or
sbb
xor
sub
pop
mov
push
and
dec
mov
adc
mov
idivl
add
cmp
xor
jb
adc
or
mov
add
jmp
lea
imulb
push
sbb
xchg
pop
adc
pop
add
rol
mov
mov
xor
hlt
rorl
jge
frstpm(287
or
scas
movl
jl
mov
pop
imul
inc
cmc
inc
xor
lea
cmp
sar
lods
int
test
cs
add
pop
mov
scas
xchg
or
xor
mov
push
notb
cmp
adc
add
test
push
cmp
push
pop
adc
xor
jnp
repnz
icebp
xor
cmp
xor
xchg
faddl
mov
sbb
scas
inc
cmp
mov
das
jle
mov
push
js
insb
pop
ds
mov
inc
dec
das
jb
movsbl
cmp
jl
aas
adc
sub
cmp
testb
jle
les
mov
xchg
sbb
pop
insl
pop
adc
mov
pop
and
push
call
in
mull
push
in
test
mov
dec
mov
fbstp
paddd
push
inc
sbb
pop
or
mov
jno
or
or
inc
test
popa
adc
pusha
mulb
jns
xchg
arpl
adc
adc
xlat
and
and
push
push
add
fwait
nop
adc
inc
adc
or
or
in
dec
jmp
cmp
scas
push
sbb
and
dec
out
sub
fwait
aad
mov
je
lret
sbb
jle
inc
rcrb
fwait
scas
rorl
push
sbb
inc
es
imul
inc
dec
test
int3
stos
inc
punpckhwd
sti
mov
mov
fsubr
sub
mov
loop
test
sub
and
adc
and
or
xor
xor
mov
les
jg
jno
or
testb
test
test
jbe
mov
or
xchg
mov
pushf
ja
mov
jle
test
les
mov
fadd
lahf
lret
mov
adc
jo
testl
inc
int3
push
and
movsb
push
and
adc
movsl
lea
notl
mov
js
testl
mov
test
shl
mov
mov
xor
push
call
xchg
xor
and
mov
fcoml
dec
shlb
inc
les
push
mov
das
mov
and
repz
daa
shll
push
inc
push
shrl
int3
cmp
arpl
mov
mov
push
pop
pusha
fcomps
pop
ljmp
cmp
out
dec
rolb
push
and
mov
inc
gs
cmc
push
rorb
adc
les
push
imul
cmove
push
shll
dec
sbb
push
fsubrl
xchg
xchg
push
xchg
jmp
mov
inc
xchg
movl
xchg
repz
xchg
es
adc
adc
push
mov
rcrb
lods
lods
adc
jno
gs
lods
fistl
and
in
pop
les
jne
xchg
or
push
popl
sbbb
add
push
jne
and
mov
push
sbb
dec
and
inc
nop
les
dec
dec
sub
clc
xchg
jge
push
rcrb
clc
mov
push
sti
es
cwtl
push
dec
je
jno
add
arpl
and
ret
adc
sub
mov
xor
xor
hlt
mov
clc
sbb
jecxz
fsubl
jl
or
mov
xchg
in
xchg
cmp
mov
repnz
jecxz
inc
repz
lea
mov
mov
mov
mov
es
dec
dec
xor
adcb
inc
mov
orl
jl
push
adc
mov
bound
and
or
xor
and
inc
or
xchg
push
pop
add
xchg
push
cld
inc
loop
push
push
sbb
add
jmp
adc
sub
cmc
or
shll
sub
xchg
scas
and
cld
pushf
ja
and
js
pop
dec
loop
add
sbb
rolb
push
adc
inc
inc
pop
or
sbb
insl
out
andl
jmp
cmp
mov
lods
xchg
mov
or
rcrb
jl
push
lea
jl
push
add
or
call
mov
or
movsl
sub
roll
cmpsl
int3
cmp
ja
ja
xchg
dec
ret
push
ss
mov
and
cmp
dec
clc
sub
jmp
cmp
sbb
cmpl
xlat
stos
mov
xchg
xchg
imul
inc
mov
testb
push
les
or
jae
subl
xor
push
fs
call
xchg
cmp
or
xchg
jno
jne
insl
and
cmp
sub
popf
mov
add
dec
jnp
pop
and
push
xchg
pop
bound
and
fcmovnbe
cmpl
dec
mov
les
jge
sahf
inc
ljmp
out
sbb
fcompl
hlt
cmp
push
push
leave
mov
clc
repz
stos
enter
popf
data16
adc
pop
mov
hlt
repz
jo
sbb
repz
dec
sub
movsb
pop
jno
movsb
dec
decb
cmp
add
hlt
cmp
jmp
dec
or
clc
mov
movsl
gs
pop
loopne
and
or
es
nop
xchg
jns
mov
push
sub
mov
cwtl
push
adc
test
add
jmp
loop
mov
fldenv
fildl
mov
push
and
and
das
lea
push
into
bound
push
mov
test
cld
or
push
mov
adc
cmp
loop
add
push
pop
or
and
mov
sub
les
inc
push
test
addr16
les
popa
hlt
add
xor
into
mov
ret
adc
repnz
test
sub
add
adc
adc
and
inc
mov
xlat
cmp
imul
sbb
sub
pop
mov
repnz
inc
enter
sbbl
mov
ss
adc
pop
in
sub
xor
test
mov
outsl
shlb
test
ds
lea
mov
and
inc
js
imul
sahf
sbb
cmp
popf
sbb
jb
xchg
jmp
push
push
add
push
pop
jmp
aam
pop
dec
das
lods
mov
cmpsb
repnz
mov
mov
test
sbb
add
les
and
mov
or
mov
adc
pop
jge
lds
cmc
out
mov
adc
lea
xor
jmp
add
lcall
cmp
pop
dec
cli
push
leave
adc
push
add
xchg
pop
mov
sbb
and
shll
cmp
insb
std
or
inc
stc
hlt
mov
ret
mov
add
sbb
loope
or
dec
inc
cwtl
mov
or
pusha
cli
sub
inc
stc
adc
cmpsb
ds
int3
jo
or
and
mov
aam
add
xchg
sti
std
dec
data16
sbb
adc
mov
in
lds
data16
and
call
movsb
hlt
sbb
xor
call
movzwl
rclb
les
or
call
repnz
sub
or
mov
push
push
and
cmc
xchg
fldt
cmpsb
cltd
test
bound
adc
jno
fstl
sub
push
or
test
jmp
jbe
mov
xor
insb
or
add
or
and
hlt
mov
fmull
inc
or
mov
or
dec
xlat
js
aas
pop
xchg
test
dec
adc
or
outsb
sbb
mov
jnp
push
subb
jl
cmp
jge
mov
pusha
enter
lea
pop
sbb
mov
into
adc
add
mov
push
dec
inc
or
pop
pop
mov
out
and
adc
loop
orb
out
push
pusha
sbb
test
out
and
xchg
mov
pop
ret
lahf
push
mov
into
mov
je
aaa
jp
push
push
mov
xchg
mov
mov
and
push
adcb
data16
sti
xchg
push
stos
and
outsb
repz
mov
movzbl
adc
xchg
sbb
test
movsb
jo
test
xchg
xchg
test
mov
xchg
push
jnp
push
add
push
bound
xchg
xor
dec
scas
mov
clc
inc
popa
push
dec
dec
inc
test
movl
xchg
sub
fdivrl
pop
mov
imul
mov
push
lods
cmpsl
adc
xor
sub
test
cwtl
ljmp
mov
adc
mov
les
lret
push
and
inc
or
pusha
xchg
xor
mov
or
push
inc
cmp
mov
xor
aaa
inc
in
mov
ljmp
push
or
inc
xchg
dec
test
jmp
and
ljmp
push
scas
inc
xchg
test
xor
adc
test
inc
test
rorb
mov
mov
inc
pop
pop
and
hlt
jnp
popf
jecxz
dec
addb
nop
sub
push
cmpsb
dec
add
cmp
je
lahf
xchg
lods
push
jg
push
repnz
pop
push
mov
xchg
clc
and
xor
add
and
imul
pusha
inc
stos
xchg
sti
pop
add
pop
mov
in
aad
push
push
push
pop
cmp
lea
test
or
subb
sub
dec
imul
sub
imul
pop
sbb
test
sbb
and
fcoms
mov
adc
adc
nop
cmp
cmp
outsl
push
inc
sbb
mov
push
lahf
and
or
xchg
or
adc
sub
scas
adc
pusha
and
movsl
sbb
or
inc
add
in
sbb
popl
adc
subb
jbe
aam
and
adc
or
bound
pushf
xor
adc
scas
fucomp
mov
or
loopne
stc
mov
out
push
mov
sub
pop
inc
sub
sbb
push
mov
mov
mov
iret
xchg
mov
jne
jns
scas
pop
and
fisttps
fmul
mov
jecxz
stos
mov
push
lahf
sub
cmp
repz
cltd
repz
push
xlat
pusha
out
jns
push
aaa
adc
mov
jae
sub
ds
dec
push
shlb
xchg
adc
adc
lea
lods
or
orl
jp
out
mov
add
sarl
in
enter
sbb
mov
pop
test
cmpsl
lcall
jl
out
mov
sahf
jmp
xlat
cmpsb
pop
and
jmp
xchg
test
or
xor
or
dec
pop
dec
pop
xchg
mov
ja
sets
inc
adc
adc
adc
adc
inc
ds
enter
xor
xchg
and
mov
jne
adc
mov
inc
mov
mov
mov
push
inc
aad
cmp
enter
movsb
dec
pop
ds
mov
push
jnp
les
pop
and
aas
cmp
aas
loop
dec
dec
cmp
cmp
add
popf
xor
in
mov
mov
mov
adc
in
pop
test
sub
test
mov
nop
cmp
push
js
dec
lods
in
and
inc
pop
enter
dec
mov
rorl
cld
int3
inc
mov
mov
test
lea
and
jno
nop
or
or
lds
faddl
and
loop
inc
xor
inc
popf
push
adc
or
mov
push
jmp
les
inc
loop
xchg
and
cs
adc
sub
cmp
repnz
cwtl
sti
lods
scas
cmp
clc
add
sbb
and
adc
xchg
jp
nop
and
add
pushf
mov
xchg
sub
mov
aam
xchg
lcall
push
mov
mov
jg,pt
add
je
pop
push
mov
subl
filds
inc
dec
ljmp
or
lods
or
out
movsb
or
imul
push
mov
ret
aas
icebp
stos
adc
fistl
inc
scas
adc
movsb
sub
mov
mov
pushf
scas
adc
sub
pushf
adc
xor
adc
nop
sub
les
and
xchg
or
test
and
push
inc
pop
and
mov
cmp
in
fs
or
mov
pusha
mov
test
enter
and
mov
mov
sbb
sub
and
cmp
adc
enter
sub
xchg
and
fs
xor
adc
xor
cmp
sub
jecxz
sbbl
nop
xor
and
sbb
and
pop
inc
movsb
les
sub
adc
jp
mov
aaa
inc
adc
gs
inc
and
adc
shll
or
inc
cmp
mov
es
xchg
and
fs
lock
xchg
in
and
push
inc
pushf
and
adc
mov
xor
faddl
aam
test
call
sub
pop
inc
xchg
fdivrp
inc
push
fsubs
mov
mov
push
inc
dec
or
fcomi
or
imul
inc
pop
jne
mov
dec
push
add
or
mov
cmc
scas
loope
out
sub
pop
orl
xor
mov
xchg
inc
fsubp
ret
adc
mov
mov
sarb
out
iret
mov
popf
shll
inc
out
sbb
push
rorb
mov
add
fs
orl
pop
sbb
adc
mov
mov
icebp
mov
popa
fildl
dec
mov
test
out
jno
lock
test
loopne
sub
inc
add
add
out
push
and
and
mov
push
fsubr
xchg
cld
bound
lock
or
popf
andl
lock
adc
mov
loop
inc
dec
mov
inc
add
push
push
or
je
and
cmc
andl
das
mov
ret
dec
inc
dec
rcr
xchg
push
sub
scas
push
cmp
shl
mov
or
jge
jmp
cmovae
dec
in
add
hlt
sbb
push
sbb
outsl
adcl
adc
mov
jmp
aad
adc
xor
iret
cmp
mov
adc
mov
mov
pop
or
cmp
push
nop
add
jbe
stc
addb
call
insb
cmp
fs
jl
inc
sub
mov
pop
push
sub
dec
insl
push
cmpsl
cld
inc
mov
adc
adc
fwait
pop
ret
jne
mov
repnz
jmp
imul
psubb
sbb
sbbb
test
ret
jg
adc
cmp
adc
mov
pop
sbb
fstpt
mov
add
pminub
sub
lret
call
xchg
shrl
adc
sub
dec
jmp
hlt
push
out
dec
or
push
dec
sahf
lds
in
pop
pop
push
push
in
sbb
sub
mov
jne
dec
dec
subb
dec
loop
shrb
movsb
adc
mov
daa
push
in
push
test
mov
add
in
or
fnstcw
in
sbbb
imul
test
mov
inc
add
cmp
mov
push
jmp
inc
cwtl
cmp
sbb
adc
insl
fidivs
popf
inc
test
push
push
test
stc
fwait
xchg
in
fstl
push
lock
inc
jge
sbb
xchg
dec
loop
icebp
pop
shl
adc
repnz
bnd
and
test
loop
sti
jg
jle
orb
andl
mov
mov
mov
sub
sub
and
decb
or
jle
fs
loop
add
aam
xchg
push
and
push
cs
xchg
ds
aad
jb
bound
and
mov
jns
mov
dec
jmp
popa
xor
or
mov
out
sub
addb
fldenv
js
fidivs
test
enter
call
and
sub
mov
dec
sub
mov
adc
pop
mov
push
sbb
test
ljmp
bound
inc
or
mov
pop
and
dec
and
out
daa
xor
xchg
jge
xlat
mov
jno
xchg
pop
enter
sub
mov
pop
lock
sub
inc
mov
sub
mov
inc
push
and
cmp
enter
and
and
inc
pop
mov
test
enter
mov
pop
repz
inc
or
add
add
jmp
test
lahf
cld
std
dec
aam
and
clc
test
enter
and
adc
mov
test
jmp
loopne
popa
or
inc
fsubs
dec
fs
aam
xor
adc
and
inc
mov
and
inc
out
jnp
and
adc
in
or
rcrb
mov
pop
test
test
xchg
sub
inc
sbb
movsb
adc
jg
pushf
or
pop
enter
sub
test
mov
pop
fcoms
andl
inc
sub
jp
adc
sbb
js
fbstp
mov
insb
or
test
and
push
adc
or
inc
das
in
and
add
sub
repnz
pop
push
or
push
dec
push
and
es
jne
sub
xchg
adc
mov
xchg
xor
mov
and
sahf
sbb
and
sbb
orl
cmp
inc
pop
dec
mov
les
into
xor
es
cmp
les
push
clc
test
mov
mov
and
mov
cmp
adc
test
lret
dec
push
adc
adc
aaa
push
fs
mov
ss
cmp
int3
mov
mov
jne
adc
movsl
and
cld
xchg
dec
mov
jbe
inc
and
push
push
and
aaa
inc
sub
jg
lods
sub
lret
stos
jb
adc
aaa
pop
test
sub
and
mov
cld
dec
je
mov
mov
push
nop
mov
call
mov
and
outsl
jno
push
inc
sbb
inc
adc
push
adc
mov
cmp
ljmp
inc
adc
or
mov
pop
lods
into
xor
or
and
mov
adc
dec
and
movsl
adc
adc
adc
and
and
fs
or
and
adc
or
adc
cmc
jbe
fildl
xor
or
test
sub
mov
and
in
cltd
test
subb
add
rclb
imul
push
and
add
inc
and
mov
push
enter
cmpsl
inc
xchg
cwtl
dec
pop
pop
or
es
push
push
je
xor
jp
lcall
and
scas
in
scas
jns
or
sbb
pusha
pop
inc
test
out
mov
push
or
clc
jge
or
xchg
lock
pop
test
inc
lods
cmp
dec
imulb
pop
cli
fstl
mov
mov
pop
nop
sti
test
xor
cmc
mov
xchg
push
push
pop
mov
mov
push
push
scas
or
sub
cmp
sti
mov
pop
shll
lds
popl
xor
adc
icebp
mov
adc
fwait
scas
popa
lock
adc
sbb
pop
push
dec
test
and
inc
js
or
out
sbb
les
pop
mov
xor
mov
dec
jmp
push
ljmp
mov
pop
movsb
bound
xor
je
lods
pop
inc
sub
roll
cld
cli
mov
and
dec
mov
movsb
push
test
push
in
pop
jle
ja
add
push
sbb
inc
ljmp
lret
fs
lods
shrb
outsl
into
cs
pop
cs
inc
ja
ss
or
cmp
and
clc
bound
mov
push
cmp
dec
dec
push
sub
adc
xorl
inc
or
enter
movsl
jp
idivb
mov
mov
fs
test
adc
cli
into
sub
cmpsb
outsl
stos
sub
push
mov
rolb
mov
cmc
mov
scas
mov
and
pop
movsl
stc
imul
daa
lods
out
sub
xchg
inc
pop
and
fdivl
cld
gs
adc
test
sbb
in
cmp
out
xor
nop
in
pop
push
xchg
sub
xchg
mov
and
inc
and
outsb
les
add
xor
dec
add
mov
outsl
shlb
mov
jns
lcall
lret
icebp
jmp
or
sbb
push
popa
push
and
inc
or
sbb
or
jecxz
in
lock
dec
xor
cmp
mov
adc
add
mov
call
adc
lcall
or
inc
or
mov
inc
jl
inc
dec
dec
xlat
mov
sbb
loopne
jle
leave
sub
nop
jl
ss
cmp
in
and
mov
jmpw
mov
cmc
adcl
add
push
out
nop
mov
jmp
scas
icebp
inc
add
push
insl
aam
pop
xor
add
add
jmp
ss
repnz
test
movsb
icebp
or
outsb
inc
cmp
daa
das
call
and
sbb
inc
sub
clc
orps
or
shl
xor
stos
xor
push
or
pop
xchg
inc
dec
int
jp
shld
and
shlb
mov
or
cmp
xor
push
and
xchg
xchg
jo
xor
aaa
sbb
scas
pop
or
repnz
lds
adc
or
aaa
insl
add
dec
adc
leave
and
sbb
es
imul
mov
pop
and
inc
clc
mov
cmpsb
and
out
ds
sbb
pop
sbb
and
xchg
jns
repnz
je
loop
outsl
adc
mov
mov
or
les
jmp
mov
es
shlb
adc
xor
adc
imul
push
test
or
negl
jno,pt
push
sub
sbb
int3
stos
mov
mov
test
fisubrs
pop
jmp
adc
push
nop
xor
xchg
xchg
adc
fists
hlt
or
psubsb
push
inc
mov
out
in
add
jmp
pop
cmp
jae
mov
inc
les
fucomip
push
pop
cmpsl
std
ret
imul
daa
test
or
push
pop
cmc
pushf
mov
jae
push
pop
daa
or
dec
jbe
sub
xor
test
xchg
push
push
cmp
pop
rolb
orl
dec
in
or
or
xchg
and
sub
in
stc
or
lock
mov
pop
es
cmpsl
inc
push
or
cmpb
stos
sub
or
imul
adc
imul
or
mov
sbb
aad
fs
dec
and
sub
adc
mov
sbb
sub
sbbl
xchg
and
push
loop
std
adc
test
lret
nop
push
mov
jb
pusha
jnp
sub
popa
pop
dec
test
sub
push
orb
lahf
sub
sti
mov
negl
movsb
repz
js
push
sub
xchg
push
daa
mov
sub
sbb
jle
sub
sub
jb
mov
ds
jne
add
fistpll
loopne
cmp
mov
aaa
cmp
inc
cmp
stos
xchg
inc
cld
adc
popl
jl
mov
sbb
sbb
les
sti
idivb
mov
jo
adc
add
mov
les
add
xchg
sti
inc
push
pop
dec
xlat
or
dec
pop
xchg
pop
repnz
add
add
and
rcr
inc
push
mov
hlt
or
pop
sbb
push
or
loop
and
xor
inc
adc
sub
nop
and
or
mov
inc
int3
test
sti
outsb
sbb
jns
inc
sbb
sbb
mov
jp
in
outsl
ret
cwtl
xlat
lret
popa
sub
mov
xchg
cmpsb
adc
lds
repz
mov
mov
pop
jmp
pop
xor
call
inc
mov
in
sub
loope
fidivrl
es
loope
rcr
mov
dec
adc
test
xchg
jge
and
pushf
adc
shll
pushf
ljmp
or
call
mov
sbb
cld
sbbb
call
sbb
push
sub
aam
sahf
push
pop
dec
gs
lcall
mov
mov
xchg
sbb
adc
sahf
or
stos
pop
push
mov
dec
sub
xor
mov
adc
out
or
lods
sbb
iret
gs
mov
sbb
xchg
gs
inc
xchg
jmp
std
aad
repnz
std
mov
in
or
pop
movsb
out
fsubs
and
negl
gs
adc
je
or
js
or
push
push
insb
adc
mov
inc
lret
arpl
das
sub
push
sbb
inc
inc
fidivrl
outsl
out
loop
ret
jl
mov
pop
lods
sub
jo
mov
xchg
cmpsb
imul
arpl
js
test
in
std
push
sar
js
sbb
arpl
dec
leave
mov
test
test
sbb
jp
xchg
outsl
into
mov
sbb
mov
bound
add
loopw
js
mov
and
loop
in
aaa
or
cmc
mov
xchg
sub
inc
repnz
sub
faddl
adc
xlat
sbb
pop
xchg
mov
pop
pop
sbb
shlb
dec
adc
enter
das
jb
and
arpl
or
nop
sub
bound
adc
test
push
leave
cld
stc
jle
inc
fsubrs
inc
popf
gs
add
cmc
inc
inc
cwtl
popa
mov
sbb
cmp
int
or
movsb
aad
int
push
insb
adc
sub
dec
adc
lds
cld
sub
inc
bound
jl
lret
inc
cld
push
repnz
push
xchg
leave
mov
push
mov
adc
repz
cmp
inc
xor
dec
adc
adc
and
cld
leave
sub
inc
adc
xchg
clc
hlt
inc
fiaddl
push
aam
out
cmp
sub
mov
mov
bound
iret
cmp
dec
adc
fsubs
cmp
push
jge
xchg
xor
mov
hlt
inc
int
ss
push
sub
and
cmp
mov
inc
je
cmp
outsb
and
inc
rcrb
in
ret
roll
ret
adc
mov
cmp
ret
test
pusha
push
push
dec
inc
ret
and
sub
pusha
clc
les
sbb
mov
inc
pusha
adc
pop
sahf
and
xor
jno
rorl
mov
adc
mov
xor
fcoms
jae
mov
lahf
sub
or
xchg
mov
les
jmp
adc
sub
mov
cmp
arpl
lea
or
cmpsl
out
push
imulb
cwtl
call
sbb
inc
and
call
pop
cmc
mov
add
mov
xchg
push
pop
aam
sub
clc
repz
adc
pop
sub
mov
cs
mov
and
xchg
sub
inc
mov
mov
mov
and
add
lea
popa
jb
loope
fndisi(8087
ds
mov
fistpll
xchg
jbe
pop
and
mov
sbb
mov
dec
dec
adc
xor
repnz
cmp
xor
or
mov
ret
inc
push
and
jno
or
fldl
scas
push
and
mov
out
mov
in
leave
pop
shl
popa
push
lahf
mov
mov
in
lods
mov
ror
inc
sub
mov
pushf
mov
pop
dec
pop
insl
ret
hlt
je
jbe
adc
jge
stos
arpl
movlps
pop
fsubl
addr16
inc
and
inc
sbb
pop
daa
sbb
dec
int
adc
and
pop
clc
fcompl
adc
in
sbb
das
movsb
inc
roll
xchg
test
loope
pop
sbb
and
xchg
mov
clc
mov
insb
push
xchg
adc
adc
xor
mov
inc
enter
call
sub
add
jp
call
inc
popa
dec
shlb
imul
bound
out
leave
fsts
imull
mov
repnz
fidivrs
push
inc
or
fstpt
pop
mov
loope
data16
mov
or
fdivrs
push
pop
or
mov
xor
cmp
xor
shl
adc
into
aam
fisubl
adc
loopne
xor
mov
std
pop
or
cmpsb
sbb
icebp
in
or
fdivrs
dec
inc
adc
shll
ja
ficompl
repz
pop
lret
sub
push
sub
rcr
test
loop
loope
ficompl
test
icebp
inc
cmp
fimull
adc
fcmove
xor
pop
stos
imul
cld
adc
pop
test
loope
sub
sahf
fsubs
push
lods
addr16
repz
cmp
rcrb
lods
cmpsl
aas
pop
and
cmpb
jle
cmove
xchg
push
mov
call
sub
inc
adc
loop
push
inc
inc
popf
pop
adc
inc
adc
dec
aas
filds
cli
pop
mov
je
pop
mov
notl
and
lea
dec
test
sbb
icebp
stc
cld
mov
pop
adc
add
and
fsubs
cmpsb
xchg
and
hlt
jnp
or
and
aaa
mov
pop
pop
inc
adc
dec
movlps
fisttps
mov
adc
int
data16
loopne
or
push
pushf
push
inc
setne
jle
mov
fisubs
xorb
outsb
cmp
int3
mov
and
fdivl
mov
popa
or
or
cmpsb
cmovne
loope
fimuls
cmp
fmull
bound
sbb
adc
inc
pop
adc
mov
inc
ja
or
sub
inc
inc
cmp
ret
push
cmp
mov
mov
movsb
add
lcall
into
mov
adc
xor
les
push
outsb
mov
or
push
jno
xchg
sub
dec
and
jmp
or
cld
mov
imul
jmp
push
mov
aas
mov
mov
xchg
and
repnz
lret
xchg
bound
lock
sbb
or
lock
mov
out
and
mov
xchg
adc
push
imulb
sub
dec
mov
test
push
mov
fidivl
push
arpl
mov
jae
jb
dec
adc
lret
sub
mov
pop
sub
inc
dec
enter
insb
enter
outsb
and
adc
mov
inc
outsb
pop
xchg
mov
xor
jle
pushf
sbb
jmp
loope
push
or
xchg
nop
xlat
in
cmp
jo
fsubl
push
push
add
mov
push
daa
shll
scas
pop
jg
iret
mov
and
in
sub
sub
dec
je
inc
mov
rcll
push
rol
sahf
movsl
and
adc
xchg
mov
add
mov
ljmp
sub
outsl
inc
lds
or
lret
lcall
xchg
xor
rdmsr
pop
push
adc
inc
and
and
jp
jae
popa
gs
outsl
mov
xor
daa
and
dec
sub
test
inc
push
stc
sbb
xchg
addr16
mov
xor
and
cltd
and
mov
push
mov
push
loope
popa
das
push
push
sub
push
loope
push
or
adc
out
sub
sahf
addb
adc
add
mov
and
adc
sbb
and
lods
pop
out
sub
xchg
test
and
push
mov
mov
dec
sub
dec
mov
test
repnz
inc
outsb
sub
add
mov
cld
or
mov
sbb
and
or
fistpll
and
fistpll
or
test
cmp
popf
and
mov
mov
shrl
pop
gs
or
and
sbb
pop
ja
push
push
adc
adc
dec
ret
sbb
jl
xor
pop
lods
arpl
sbb
jns
imul
hlt
data16
or
jbe
sbb
aas
push
mov
mov
aaa
adc
sbb
loop
pop
lcall
dec
xchg
cs
dec
in
sbb
sbb
mov
xchg
or
les
sub
repz
and
mov
je
mov
mov
js
popa
aam
xchg
lahf
pop
push
and
icebp
or
or
js
xor
and
sbb
cmp
in
daa
mov
mov
daa
push
sub
pusha
mov
sub
cmc
mov
repz
mov
cmpsl
aam
loope
push
push
jp
pusha
stos
into
mov
insl
insb
iret
mov
mov
or
dec
mov
ret
cmp
cwtl
and
add
jmp
push
fstp
les
mov
cmp
das
jns
push
sbb
ss
xor
xor
or
jnp
call
push
adc
and
mov
or
test
push
mov
sub
insb
mov
dec
add
dec
dec
jmp
imul
out
cwtl
in
popf
push
sbb
clc
fimull
jnp
inc
mov
xor
cmpsl
enter
mov
adc
dec
xchg
call
ds
jns
mov
test
nop
sbb
mov
cmpsl
test
ficompl
repz
xchg
fdivrl
inc
mov
test
xor
fldt
jo
pop
mov
mov
push
loope
call
loop
loope
adc
and
mul
mov
loop
jo
stos
push
and
clc
loop
cld
int
or
push
movsb
dec
xchg
xchg
cli
push
jmp
sub
mov
loop
push
rorl
cmpsb
mov
ljmp
xchg
dec
mov
scas
or
imul
and
dec
or
lods
mov
std
inc
xor
pop
inc
mov
cmp
xor
mov
mov
cwtl
fldcw
iret
pop
test
push
xor
lcall
sub
es
dec
hlt
add
or
mov
mov
pusha
mov
push
lea
loope
mov
adc
xor
xor
and
in
cmp
mov
mov
jmp
aaa
push
mov
sbb
push
dec
mov
push
xchg
dec
fisubrs
test
cmp
ret
movsl
jno
push
jne
popf
je
sbb
outsl
push
pop
aad
mov
or
movsbl
popa
add
push
lret
es
aas
dec
fcomps
dec
add
ret
cs
insb
push
mov
add
xchg
or
rorb
nop
mov
out
push
dec
push
pop
mov
decl
xor
and
cs
pop
insb
imul
sub
jl
add
movsb
movsb
out
popa
mov
xchg
cmp
push
xor
push
cwtl
sbb
push
pop
sub
mov
mov
inc
add
dec
sbb
idivb
dec
or
xchg
lods
or
cld
and
arpl
mov
aam
push
pop
test
jo
jmp
idivb
roll
lods
sub
fs
xchg
push
jl
push
mov
mov
add
mov
cmpsb
dec
jbe
cld
and
arpl
loope
lahf
inc
cmp
jb
jmp
jmp
test
in
enter
gs
adc
fsubl
inc
gs
inc
sbb
xor
pop
push
ja
and
pavgusb
movsl
push
sbb
push
pop
sbb
pop
hlt
mov
gs
fcom
inc
les
mov
repnz
les
loope
int3
dec
or
shlb
jmp
cli
fs
aad
bound
jmp
fnsave
loope
cmc
mov
out
je
stos
mov
inc
test
stc
dec
int3
xor
fldenv
mov
aad
in
mov
jmpw
cmp
out
mov
push
addr16
test
sbb
lods
pop
pop
xor
or
sub
dec
xor
inc
xchg
cmc
mov
push
mov
mov
sbb
fadd
jp
pushf
std
ret
push
xchg
push
stos
pushf
lahf
pusha
and
inc
mov
arpl
xchg
jmp
xor
and
xchg
pop
jge
sti
inc
pop
mov
dec
add
jmp
push
sub
mov
push
or
sbb
or
rol
inc
cmpl
add
jge
jb
pop
insl
adc
out
mov
js
mov
jmp
jg
jg
jne
lds
adc
push
fucomp
lret
popf
pop
pop
mov
xor
jg
add
mov
mov
xchg
dec
out
lock
icebp
inc
xorl
fbstp
sbb
fs
test
lds
sub
sub
pop
mov
mov
inc
dec
adc
ljmp
cmp
lahf
js
cmp
cli
push
pushl
inc
push
add
push
inc
sub
xchg
adc
xor
es
or
jae
push
mov
sub
inc
push
cmp
jl
fimull
xchg
insb
inc
pop
add
pop
mov
mov
testl
push
movsl
pop
sbb
inc
cmp
mov
adc
xor
mov
xor
call
je
jge
jae
pop
inc
cmp
jl
fisubs
or
ret
aad
push
imul
mov
push
popa
push
iret
sub
inc
mov
movsb
das
add
or
enter
push
mov
pop
push
leave
outsl
and
cmpsl
rorl
inc
push
hlt
jle
xor
push
mov
jo
push
pop
dec
cmp
enter
inc
inc
repz
mov
cmp
add
push
or
push
xchg
mov
in
add
cmp
jo
push
enter
add
mov
arpl
daa
orb
pop
mov
sbb
jne
mov
push
add
enter
and
and
pusha
adc
popl
int
sbb
movsb
jp
push
inc
adc
and
inc
jg
daa
sbb
cli
push
sbbb
push
cwtl
test
cmp
fdivrp
fs
and
sub
out
repnz
addl
sti
jns
sub
pop
or
sbb
movl
cmp
pop
jbe
outsb
scas
and
dec
test
pop
xchg
jno
mov
jne
xchg
popf
imul
jge
sti
add
xchg
nop
dec
cli
call
neg
pop
cli
inc
lret
mov
cmpb
or
inc
inc
or
add
add
fdivrs
test
sbb
jge
stos
aam
or
and
pop
ret
mov
or
add
lds
lods
adc
xorb
pop
pop
adc
roll
or
mov
pcmpeqd
in
leave
jg
xor
jnp
pop
fdivrp
inc
pop
or
lea
adc
xchg
dec
or
or
sub
push
push
mov
dec
popf
das
adc
je
jg
fcomp
lahf
das
jl
adc
xor
add
loope
push
adc
inc
dec
add
cld
xor
cmp
adc
xchg
inc
dec
adc
push
lret
and
push
call
das
sbb
jmp
fs
scas
movsb
out
jno
mov
enter
push
mov
adc
and
ja
pop
cmp
sbb
inc
push
xor
add
and
ss
scas
pusha
jmp
mov
mov
cmp
and
sbbb
dec
orl
add
mov
aad
and
jge
adc
mov
je
push
or
pop
pop
shlb
inc
bound
xor
jbe
mov
ret
or
je
fimull
or
add
ret
push
call
mov
fiadds
jmp
mov
leave
push
in
adc
mov
xor
xchg
xchg
or
or
ret
sarb
cmp
jb
lret
xorl
adc
pop
push
or
xor
jae
cmp
and
and
mov
sahf
and
mov
cmpl
jbe
xor
mov
or
xor
mov
adc
repnz
mov
dec
pop
nop
icebp
cmpb
add
inc
cmp
out
and
dec
dec
adc
mov
xchg
and
les
adc
addr16
in
andb
cmpsb
in
fsubr
fstp
aam
pop
aaa
mov
xor
and
incl
hlt
dec
pop
stos
or
adc
adc
loop
and
mov
add
rep
add
adcb
sar
data16
pop
hlt
adc
sub
in
daa
pop
mov
jne
mov
pop
in
lahf
jle
and
jb
mov
add
mov
in
mov
mov
sub
imul
mov
mov
inc
dec
and
test
lea
mov
inc
push
push
inc
and
in
cmp
xor
outsb
jge
imul
add
push
das
aaa
cwtl
and
pop
push
je
inc
mov
sahf
call
cli
pusha
pop
call
andl
jno
push
mov
inc
pop
inc
jle
mov
xchg
adc
pop
pop
pop
pop
and
adc
popa
push
ret
shrl
add
mov
popf
dec
movsb
xchg
add
pop
cld
mov
xor
or
jne
test
jle
cmp
arpl
shll
dec
add
xor
or
sub
inc
int
and
xchg
testl
add
call
aas
push
shlb
inc
sub
int
dec
and
and
or
mov
nop
mov
and
dec
roll
cmp
push
dec
mov
mov
mov
xchg
mov
sbb
cmp
adc
sbb
adc
repnz
into
dec
sbb
aam
adc
test
les
or
enter
xor
sbb
pop
mov
dec
lret
dec
lds
out
mov
bound
adc
push
je
cmp
ljmp
or
adc
lds
pop
jmp
lea
and
je
push
mov
adc
adc
rclb
pop
dec
or
inc
inc
mov
iret
or
adc
xchg
mov
push
daa
adc
imul
or
jmp
inc
ret
rorb
adc
repnz
dec
jmp
lock
pop
jge
inc
cmpb
mov
mov
punpcklbw
sbb
cmp
icebp
lahf
sbb
subb
jno
mov
int3
push
cmp
enter
pop
je
cmp
cmp
mov
or
sbb
adc
fmuls
jg
mov
mov
repz
inc
sbb
les
push
add
xor
or
mov
sub
mov
dec
bswap
mov
xchg
lret
mov
push
adcb
cmp
and
ljmp
andl
lahf
loop
filds
shl
add
clc
add
adc
shll
icebp
sbb
pop
xor
or
clc
test
xorl
push
jne
push
pop
or
sbb
arpl
and
fmul
xchg
or
xorl
or
sub
pop
mov
cmp
data16
or
jo
sub
cmp
dec
and
fs
xor
lods
push
adc
push
ss
jbe
and
fcom
push
inc
ficoml
mov
cmp
arpl
push
in
lret
xchg
xchg
rcrl
clc
and
xor
push
adcb
sub
push
aas
mov
mov
mov
and
push
add
sbb
cmp
into
addb
enter
sub
xor
out
mov
sub
and
and
inc
xorb
mov
push
jo
roll
shl
push
sub
push
ret
and
xor
aaa
push
enter
or
test
xchg
call
dec
or
or
inc
xchg
cmpsl
adc
adc
pop
push
xchg
mov
inc
les
jnp
adc
movsb
inc
lret
sub
push
mov
xchg
or
and
inc
lds
mov
push
push
sbb
pop
sbb
dec
add
dec
cmp
lea
icebp
pusha
xchg
sub
jo
and
icebp
sbb
cmp
fisubrs
push
stos
ret
jne
sub
adc
mov
sub
jne
clc
call
sbb
sub
outsb
in
or
cld
add
gs
enter
sub
movsb
adc
jb
cmp
stos
jo
jb
sbb
les
mov
push
adc
call
movsb
mov
pop
sbb
sbb
loopne
cmpb
pop
or
gs
and
xor
mov
mov
adc
xor
daa
les
push
and
mov
mov
call
mov
or
sbb
stos
ss
adc
sub
les
dec
or
inc
add
lea
sub
ds
cmc
inc
lret
pop
sbb
lock
xchg
or
into
scas
jne
loopne
stc
xchg
adc
push
cmp
shrb
icebp
pop
stc
int
jle
fwait
push
adc
xor
jo
loopne
mov
inc
outsl
pop
sub
push
adc
and
dec
lahf
dec
out
mov
push
into
and
outsb
sub
add
pop
test
xorb
notb
stc
movb
rcrb
cmp
mov
push
mov
mov
gs
movsb
inc
push
mov
pusha
add
push
push
mov
mov
in
mov
add
popf
jo
and
dec
cmp
xchg
cmp
sub
push
pop
sarb
or
adc
call
add
jmp
mov
xor
sbb
ficomps
cld
xlat
lahf
xor
fsubr
cmc
inc
xor
cld
push
cmc
push
pusha
sbb
xor
cs
cld
sti
adc
jl
lods
ljmp
cmp
test
or
sub
jnp
push
sti
int3
and
rolb
aam
xchg
mov
pop
loop
push
scas
adc
fsubs
sub
pop
pop
or
sbb
and
aas
call
adc
sub
mov
jno
mov
sub
xor
sub
in
push
int
sub
add
hlt
sbb
inc
push
mov
push
insl
xor
lret
add
fnstenv
enter
cmp
into
and
pop
call
addb
inc
mov
inc
arpl
sbb
mov
and
nop
fnstenv
nop
sbb
loop
arpl
shlb
adc
test
enter
xor
sub
add
xchg
arpl
test
or
test
sbb
inc
sub
and
daa
test
test
test
daa
lods
inc
lret
lea
mov
addr16
xchg
add
mov
cmp
insb
mov
imul
test
sti
pusha
incb
mov
mov
inc
insl
mov
bound
shll
subl
hlt
lea
dec
or
sub
mov
inc
xor
sbb
add
or
mov
mov
and
and
icebp
add
mov
pop
cmc
in
ficoms
mov
sub
dec
sbb
or
pop
decb
insl
adc
aas
inc
nop
adc
xor
pusha
dec
xchg
sub
mov
push
cmp
das
mov
sub
bound
sub
adc
add
push
push
inc
std
repz
into
ljmp
ss
push
inc
clc
cld
xor
aaa
xor
pop
pop
jno
jno
loop
xor
or
and
ljmp
aas
inc
jae
cmp
push
shl
xchg
sbb
and
or
popa
mov
pop
shl
add
sub
push
cmc
sbbb
add
xchg
sarl
xchg
and
inc
ljmp
ret
add
outsl
dec
or
sti
or
xor
call
out
xchg
mov
sbb
sub
pop
jnp
adc
inc
rclb
loopne
cltd
dec
pop
mov
mov
insl
mov
scas
fadds
lahf
fabs
bound
enter
jne
movl
xor
stc
rol
xchg
xor
mov
pop
imul
movsl
dec
xorl
lock
pushf
dec
inc
push
andb
into
mov
pop
mov
les
xor
je
adc
data16
push
xor
mov
pop
enter
mov
sub
dec
daa
fldt
cwtl
loopne
jnp
and
int3
push
pop
test
xchg
sub
and
pcmpgtw
jmp
sbb
insl
into
jmp
shlb
jp
adc
xor
cld
mov
inc
imul
dec
jmp
mov
shll
add
mov
or
lods
addb
or
cmp
inc
std
inc
adc
jb
test
les
dec
pushf
ficoml
mov
popf
lea
imul
andl
sar
lret
xor
mov
lds
fs
inc
shll
dec
out
shlb
pushf
lock
add
jns
sbb
cwtl
xchg
jb
fldt
fs
dec
push
test
mov
es
call
negl
out
push
add
jne
mov
fs
test
dec
fmull
jnp
mov
dec
addr16
adcl
jne
push
xchg
sbb
xchg
les
pushf
scas
xor
adc
lds
pop
push
cltd
iret
add
xor
push
sbb
imul
enter
mov
xor
push
cmpsb
jl
mov
mull
mov
or
xor
xor
dec
lods
scas
push
push
in
mov
dec
fsubrs
and
mov
aaa
mov
inc
push
ds
mov
inc
cmp
push
add
shlb
pop
lock
inc
ljmp
and
cs
je
imul
out
into
add
cs
leave
add
push
dec
push
stos
mov
js
fs
movsl
mov
push
adc
dec
mov
ret
xor
sub
or
in
hlt
push
fcmovnu
in
cmpsb
push
cltd
sub
aam
or
xchg
out
movsb
pop
push
iret
push
daa
mov
enter
and
push
xor
faddl
inc
mov
or
cs
out
nop
enter
push
push
xchg
inc
cmp
pop
pop
outsl
adc
xchg
mov
je
mov
or
or
pop
adc
mov
mov
aad
cmc
inc
inc
call
jg
ret
les
out
lods
out
mov
and
inc
add
in
repz
adc
outsl
or
andl
test
and
xchg
and
push
icebp
and
mov
sub
mov
movsl
leave
sbb
mov
test
sahf
push
out
loop
cmp
xchg
popl
je
jmp
jo
nop
adc
jge
mov
leave
mov
mov
mov
test
push
cmp
push
xor
pop
push
sub
icebp
xor
and
test
std
daa
and
push
inc
loopne
mov
jb
das
lock
or
je
stos
dec
cmp
ss
adc
pop
and
add
push
int3
and
inc
xor
js
iret
jmp
and
push
nop
add
jmp
clc
cmp
es
and
and
mov
popf
lret
jbe
push
ret
sbb
xchg
rclb
xchg
inc
mov
test
sbb
inc
xor
sbb
stos
sub
xorps
sbb
sub
ljmp
stc
xchg
xor
sub
addl
sub
dec
inc
or
push
add
dec
mov
ss
push
xchg
push
mov
or
cli
mov
push
in
xchg
ja
sub
and
inc
mov
mov
inc
mov
je
sub
mov
xor
mov
xchg
xor
test
xchg
out
or
adc
inc
call
stos
mov
pop
popa
and
inc
sub
and
mov
call
mov
ljmp
sbb
lock
inc
call
cwtl
and
adc
inc
push
jne
cltd
leave
pusha
xchg
out
inc
les
add
sub
push
sub
pop
or
nop
jae
popa
pop
adc
or
xchg
and
pop
pop
and
adc
les
mov
push
add
mov
xor
mov
add
mov
mulb
inc
mov
jl
in
xchg
dec
xchg
dec
mov
fucom
xor
mov
push
jnp
cli
fs
fdivrs
sub
inc
cld
adc
xor
adc
rcrb
add
outsl
dec
dec
inc
and
test
sbb
push
adc
sbb
xchg
int3
jno
add
mov
push
sbb
je
je
in
dec
jecxz
loop
sub
inc
repz
loop
flds
lret
enter
xlat
push
out
jmp
in
push
cmpsl
loop
sbb
and
jmp
sarl
push
daa
sbb
sbb
mov
loop
pop
inc
hlt
out
or
mov
sub
push
mov
push
mov
pushf
das
out
arpl
das
push
adc
xor
push
xlat
xor
jbe
das
sub
inc
inc
call
shlb
inc
cmp
test
orl
adc
lods
sti
add
test
add
enter
loopne
inc
pop
add
jne
push
push
and
mov
and
lods
sub
cs
stc
inc
push
pusha
mov
data16
xor
or
movsl
inc
call
das
push
cld
fxch
sub
jno
cmp
inc
dec
mov
and
push
jbe
mov
sub
sar
repnz
pusha
or
mov
or
hlt
mov
enter
aam
adcb
or
test
push
enter
xor
push
cmc
or
inc
icebp
je
ja
aam
push
mov
inc
mov
fcoms
pop
call
dec
insb
sbb
inc
sub
ret
cmp
ret
cltd
roll
les
roll
sbb
add
xchg
cwtl
dec
jne
jae
push
inc
cmp
pop
cld
hlt
or
xlat
inc
add
daa
movl
and
mov
jmp
push
push
pop
cmc
xchg
adc
dec
xchg
call
jecxz
xor
movsl
mov
jmp
mov
mov
fs
rcl
int3
scas
xor
cmp
dec
adc
bound
call
lock
mov
stos
daa
rorl
cmp
jo
push
jno
adc
or
sub
sub
lock
repz
xor
xchg
sbb
sub
pop
xor
jmp
dec
xor
fcompl
mov
mov
xor
imul
push
das
or
sbb
push
fucomip
mov
dec
rorl
decb
push
aaa
sub
sub
jo
xchg
xchg
jle
mov
jle
push
jge
adc
imul
sbb
push
push
cmpsl
push
loope
push
inc
mov
lea
pop
adc
dec
adc
cmp
lds
add
push
jmp
push
dec
cmp
shlb
lcall
popf
inc
push
pusha
dec
hlt
or
nop
pop
jg
jmp
sub
sub
sbb
sbb
and
jmp
jns
adc
into
inc
jnp
fadds
mov
js
add
movsl
lcall
xlat
xchg
enter
aam
mov
shlb
inc
or
jge
jbe
cmpsb
sbb
cmp
sub
push
mov
adc
jl
jno
xorb
or
and
adc
dec
sub
data16
mov
cmpl
das
xlat
add
pop
pushf
xchg
jns
aaa
adc
add
push
mov
push
jp
xor
dec
and
imul
call
mov
lret
mov
lcall
and
pop
dec
add
pop
rcrl
push
test
cltd
mov
call
into
push
add
jge
stos
xor
add
push
pusha
cmpsb
and
mov
or
and
or
into
enter
dec
jo
sbb
call
cmpsb
orb
pop
adc
or
dec
or
or
add
pop
imul
dec
jl
adc
sbb
xor
add
inc
in
call
sbb
inc
sbb
jnp
out
test
push
and
das
in
popf
pop
jmp
push
push
mov
xor
sbb
dec
jno
mov
daa
jmp
outsl
cmp
dec
cld
dec
call
sub
jae
jne
mov
add
dec
push
cli
xchg
test
and
or
and
pushl
adc
scas
add
push
mov
sub
cltd
cmp
mov
cmp
jmp
icebp
add
sbb
xchg
dec
adc
push
mov
pop
sub
mov
sub
popa
inc
sbb
mov
ja
push
push
sub
mov
adc
das
cmp
pusha
adc
mov
push
push
inc
cmp
jmp
enter
sbb
and
push
cli
daa
push
xor
es
or
adc
or
movsl
imul
enter
mov
mov
push
sub
in
mov
sbb
inc
mov
test
stc
sbb
adc
or
and
adc
mov
clc
test
lahf
cmp
fldenv
and
sbb
enter
and
std
adc
sbb
enter
and
test
push
xor
or
sub
and
test
and
inc
and
dec
cmp
push
stos
enter
mov
xor
sub
rolb
inc
rorl
and
inc
adc
jns
push
call
xchg
xor
bound
xchg
mov
push
inc
adc
or
imul
push
hlt
loop
dec
enter
pop
mov
mov
mov
pushf
mov
in
push
popf
mov
fsubs
sbb
imul
jbe
aam
mov
fcoml
or
js
mov
ret
jle
lret
inc
in
inc
cmp
push
inc
rorb
imul
into
leave
arpl
mov
xor
decl
xor
test
or
jge
xor
or
or
inc
and
mov
inc
fildl
and
pusha
or
jne
push
test
push
adc
push
and
inc
mov
jmp
lea
inc
cmp
rol
pop
dec
dec
popf
push
sub
scas
push
push
call
jno
add
je
loop
xchg
mov
and
mov
jmp
push
pop
or
icebp
adc
adc
and
pmovmskb
ds
jmp
sub
pop
iret
leave
jne
inc
adc
push
xchg
push
cmp
movsl
mov
mov
mov
adc
mov
jo
repz
adc
hlt
call
dec
or
or
ljmp
dec
jns
or
es
mov
cld
cmovo
sub
pusha
jl
imul
lret
pushf
xchg
add
mov
popf
mov
out
je
push
push
lds
sbbb
and
mov
xchg
push
add
mov
push
add
dec
xor
mov
cmc
or
add
add
sbb
inc
jns
or
mov
pop
sub
insb
xor
and
fwait
adc
jbe
call
pop
popf
push
fcmove
xor
mov
lret
ds
cld
add
adcb
andb
sub
xchg
jp
jmp
addr16
mov
bound
test
push
pop
inc
jle
jno
adc
in
aad
call
jbe
mov
fs
xchg
dec
pop
and
ja
mov
mov
js
out
add
push
sbb
stos
dec
pusha
jbe
push
push
mov
popf
push
roll
push
or
cltd
dec
xchg
push
aaa
jnp
jae
adc
push
loop
bound
in
lock
loop
adc
mov
lods
lock
mov
ss
test
xor
lods
xor
pop
rcrl
sub
push
add
outsl
or
movsbl
insb
cmp
pop
push
fldenv
pop
xor
jmp
inc
pop
push
and
push
or
in
inc
adc
aam
mov
lea
adc
stos
aad
xor
stos
and
push
aam
push
subb
push
mov
xor
adc
es
dec
or
sub
and
mov
test
sbb
mov
cs
mov
cli
cmp
insl
add
psubq
push
lahf
cs
sbb
jne
jmp
adc
mov
movsl
mov
aam
test
and
fsubrs
sub
jg
and
adc
inc
dec
bound
sub
sub
pop
ret
xor
cmp
filds
xchg
fxch
in
stos
cmp
xchg
inc
cmp
jmp
cld
cmc
loop
adc
fsubrl
in
das
out
mov
fadds
mov
sahf
push
push
push
or
mov
mov
ja
test
cmp
lods
stc
test
fs
test
dec
js
sub
push
fimuls
clc
adc
test
lock
sub
in
lea
push
xchg
daa
and
mov
add
and
rorl
and
imul
and
je
repnz
test
dec
je
mov
mov
adc
adc
xor
adc
xor
sbb
dec
ret
adc
add
sbb
mov
adc
push
or
inc
ja,pt
mov
push
bound
sbb
mov
xor
loop
enter
fcoml
cmp
xlat
add
clc
adc
adc
adc
sbb
clc
leave
inc
dec
inc
adc
sub
push
rcrl
cmp
test
pushf
sbb
loopne
or
bound
sbb
fisubs
aaa
adc
sbb
jl
les
mov
les
stc
xor
pop
and
jo
push
inc
mov
and
lcall
and
ret
xchg
mov
mov
sbb
cmp
lods
sbb
and
or
les
inc
jb
push
inc
mov
push
sub
mov
sub
cmpsl
push
enter
sbb
ret
sbb
and
sub
push
nop
xchg
cwtl
sbb
addb
dec
icebp
add
push
and
adc
mov
sbb
ficomps
and
pop
ljmp
sti
in
inc
add
pop
xorb
shr
and
mov
or
push
movsb
or
jg
pusha
and
psubsb
dec
cmpl
movsb
adc
xlat
sub
int3
enter
dec
add
ja
les
imul
dec
lods
shrl
add
jae
ja
nop
enter
jge
xor
push
mov
push
out
mov
pusha
cmp
out
ljmp
imul
jle
lahf
sub
pop
push
inc
push
pusha
les
and
lock
faddp
add
shl
add
cli
jne
xchg
push
xchg
jae
adc
pop
push
push
sbb
push
sub
pushf
int3
dec
stc
push
icebp
adc
and
je
sahf
popf
adc
push
push
xor
test
mov
les
fcoml
inc
jo
mov
inc
jo
sbb
mov
movsb
xor
and
xchg
or
or
xor
add
rep
call
push
pop
adc
sub
push
icebp
add
ret
sub
inc
lret
sbb
adc
call
pop
mov
adc
dec
sbb
and
sti
rol
pusha
lock
fs
mov
pop
je
bound
aaa
add
test
mov
or
pop
adc
and
xchg
jp
aad
xchg
mov
jl
add
dec
xchg
jg
in
and
xchg
mov
or
cmc
call
sahf
test
xlat
or
and
push
push
mov
adc
adcl
mov
les
inc
cld
addl
add
mov
scas
sub
xor
lret
fldcw
call
loope
call
xor
xor
and
sti
lret
scas
push
mov
out
xor
adc
xchg
in
xchg
andl
fidivrs
cmp
xchg
fs
icebp
add
cmc
push
mov
stos
mov
cmp
sbb
and
sbb
pop
add
ds
xchg
ret
mov
xor
fld
dec
adc
orb
inc
lock
jge
addb
cmp
adc
adc
add
jle
cli
jno
push
and
inc
jnp
mov
ret
push
mov
fwait
xchg
inc
sub
decl
or
xor
cli
and
jge
xor
add
popf
ret
lea
add
popf
pop
jmp
inc
push
push
shrb
lcall
mov
mov
lock
sbb
addb
cli
mov
sbb
jbe
add
xchg
xchg
fsts
xor
lret
pop
hlt
dec
pop
adc
scas
pushf
imul
scas
and
call
sub
mov
inc
mov
nop
cmp
adc
fsqrt
jne
lods
mov
lret
outsl
xchg
mov
scas
adc
cltd
xchg
inc
test
lods
nop
subl
mov
dec
jl
push
or
insb
jns
jae
out
or
mov
jge
fisubl
test
das
das
and
std
dec
fwait
push
dec
sbb
mov
pop
pop
or
sqrtps
popa
call
sbb
ret
inc
aad
or
inc
adc
imul
sub
inc
movsb
cltd
jg
push
test
jl
orl
in
stc
aas
mov
jge
jg
pop
sbb
mov
push
dec
ror
loopne
push
or
lock
xchg
loope
or
repnz
js
inc
xor
fsubs
sub
lea
aas
int
mov
setb
cmp
xadd
scas
nop
cmc
push
push
nop
xchg
jle
pop
or
xor
push
and
cs
sub
lds
bound
test
lods
cmp
mov
and
inc
jne
or
in
push
jnp
cld
push
loope
mov
lods
insl
jae
sbb
decb
in
push
cld
inc
mov
mov
scas
imul
sbb
lea
inc
adc
sub
bound
imul
xchg
xor
and
inc
rclb
mov
loope
fs
lods
iret
js
mov
or
adc
push
mov
les
and
lahf
sahf
in
pushf
daa
dec
cld
js
pop
adc
mov
aad
inc
pop
push
adc
jo
xchg
fadd
xchg
inc
add
fwait
repz
icebp
xchg
add
mov
adc
push
arpl
fsubl
mov
dec
push
sbb
cmp
mov
mov
gs
int3
dec
pop
hlt
sbb
inc
fistl
sub
aad
xchg
sbb
aas
inc
mov
sub
xchg
cmp
pop
push
enter
sbb
mov
and
sbb
adc
sub
ljmp
or
pop
pop
mov
mov
popa
lahf
adc
add
leave
adc
clc
xlat
mov
add
daa
inc
add
mov
mov
bnd
addb
jo
mov
add
cmp
fisubrl
pop
push
adc
adc
cmpsb
sub
fdivr
fisubrs
je
sti
ficoml
jno
dec
sbb
mov
push
sbb
test
add
call
inc
cmpsl
fs
pop
mov
and
or
push
xor
andb
fnsave
push
mov
call
arpl
cmp
call
fistpll
mov
mov
xchg
imull
jne
lods
imul
push
pop
fucomi
inc
mov
adc
push
push
add
xchg
cmc
cltd
lods
push
inc
or
cs
sbb
je
and
adc
mov
cwtl
xor
ret
xchg
lds
lcall
and
push
faddl
mov
test
inc
xor
jp
add
cmpb
cltd
cmp
push
lea
and
movsb
in
dec
and
out
jp
and
push
frstor
fcomps
sbb
call
shlb
mov
inc
jge
xchg
lods
adc
push
pop
in
sub
in
ret
inc
adc
cmp
mov
dec
das
push
aam
popa
xor
inc
and
inc
aam
jae
push
push
rorl
xchg
inc
mov
add
adc
pop
add
push
jge
xor
adc
inc
fcomps
fcompl
call
cld
xchg
filds
mov
inc
repnz
lret
push
shll
add
mov
lret
add
movsb
pushf
push
mov
stc
add
aas
add
and
add
lidtl
das
loop
add
inc
fs
cs
or
sbb
inc
movaps
idivb
inc
add
or
push
out
or
add
add
lret
mov
cs
xchg
and
loope
jb
mov
dec
leave
sbb
pushf
negb
jecxz
inc
repnz
pop
popa
cmp
sub
cmp
fmull
rcl
xchg
inc
mov
push
test
rcr
mov
das
call
into
dec
pop
pop
mov
andb
cmp
pop
push
mov
mov
cmp
movsb
xchg
bound
xchg
test
cmp
mov
orl
sbb
cli
popf
clc
out
mov
and
xor
mov
cmp
jne
mov
push
rcrl
push
pushf
sub
mov
imul
je
add
testb
lods
dec
ljmp
sbbl
pop
push
adc
jmp
repnz
aad
andb
mov
loope
and
out
sub
push
test
pop
dec
popa
mov
jmp
idiv
flds
sub
mov
and
add
inc
fs
enter
pusha
push
adcl
div
adc
dec
xchg
fsubrs
ds
mov
adc
out
loope
popf
push
add
adc
xchg
push
mov
jge
stos
xchg
sbb
sub
call
adc
push
add
ret
adc
ret
add
xchg
or
sti
in
hlt
cltd
pop
mov
xchg
pop
aad
sub
subb
jmp
orl
pop
sbb
sbb
adc
ret
out
adc
mov
out
pop
inc
add
mov
cmp
mov
je
push
dec
xchg
xchg
je
lea
mov
xchg
rcll
push
push
sub
add
call
jge
shlb
mov
sbb
les
cs
add
and
repz
mov
inc
fs
mov
dec
popa
pop
bound
ss
inc
or
xchg
add
cmp
and
test
pop
imul
xchg
or
sub
add
mov
pop
fdivr
cmp
jae
mov
test
fists
dec
test
sub
jae
imul
adc
mov
out
clc
jp
sbb
jl
push
jbe
xor
jo
adcb
dec
add
sub
jno
loope
cmp
mov
dec
jbe
outsb
dec
lret
jbe
decb
stos
xor
push
or
rol
in
inc
movsl
xor
lea
push
add
add
add
pusha
add
int3
cli
and
or
das
push
lock
sti
sbb
std
jbe
movl
jp
lret
cmp
adcb
cli
inc
sub
gs
and
stos
fnstsw
pop
add
push
and
je
jmp
xor
out
call
mov
aad
pop
xor
xchg
stos
orl
jae
push
and
push
jne
jmp
cmp
jae
shrl
pop
lret
push
orb
add
push
je
sar
shll
mov
test
push
or
decb
xorb
rorb
mov
lea
mov
xor
and
sbb
es
pop
pop
jae
sarl
sbb
inc
or
mov
cmpsb
test
jbe
orb
add
cmp
jae
rcr
push
test
jbe
dec
add
movsb
add
lods
cld
cmp
and
push
test
cmpsl
sub
lret
call
or
pop
cmpsb
iret
and
rorb
adc
mov
jo
pop
sbb
mov
jo
in
sub
adc
add
jnp
or
out
and
add
push
rcrb
icebp
adc
pop
mov
aaa
mov
bound
jbe
inc
bound
addr16
push
and
adc
xchg
sahf
scas
xor
push
push
jo
or
ja
sti
xchg
sbb
xorb
pop
push
stc
jmp
mov
loope
sbb
push
cltd
add
loopne
in
xchg
jl
jp
add
testb
xorb
movsl
or
add
push
add
xlat
inc
or
sub
adc
xchg
loop
mov
pop
add
mov
jmp
dec
sti
sub
adc
sub
iret
cli
cmp
cmc
add
add
aad
outsl
inc
inc
movsb
mov
jne
adc
xchg
or
xor
out
xor
nop
movswl
mov
xor
cmp
imul
movsl
lods
js
sub
mov
lahf
ja
xchg
mov
add
pushf
stos
pop
mov
push
cmpsb
mov
xor
mov
aas
test
loopne
xor
enter
mov
xor
stc
xor
movsl
push
push
mov
hlt
push
scas
push
das
push
rcrl
xor
and
inc
xchg
cwtl
outsb
mov
in
sub
test
pop
fs
xchg
daa
xchg
rcr
repz
push
cmpsl
movsb
mov
xchg
push
std
xor
xchg
movzbl
out
and
or
fcomps
inc
and
adc
in
jb
adc
dec
xchg
or
dec
or
repz
and
add
cs
push
adc
aas
lret
inc
outsb
and
inc
jae
adcl
push
sub
es
sub
sub
adc
push
xchg
cwtl
js
inc
aas
xorb
test
add
shrl
nop
xchg
and
sub
push
jmp
dec
mov
and
xchg
fdivrs
xchg
daa
pop
pop
movsb
pop
clc
lahf
enter
test
pop
in
into
mov
cwtl
mov
aaa
inc
adc
or
adc
mov
out
xchg
pop
popa
cmp
hlt
adc
clc
lcall
mov
mov
fnop
pop
jbe
imul
cwtl
mov
xchg
movsb
ret
sbb
int3
sahf
test
sub
call
pop
push
daa
jae
and
mov
xchg
and
into
mov
mov
pop
lods
rorb
adc
adc
je
int3
sahf
ja
out
jp
outsb
mov
mov
push
rep
pop
lret
sub
adc
fcompl
push
rclb
dec
jae
mov
pop
inc
cmc
mov
dec
xchg
pop
imul
rcr
pop
sahf
lods
xchg
and
and
std
in
shlb
sub
pshufw
pop
and
cmpsl
test
xchg
pop
lods
lds
loope
cmp
cmp
mov
push
sub
fadds
adc
add
call
leave
inc
out
test
out
and
push
iret
jb
aas
push
rclb
sbb
pop
in
cs
mov
and
inc
fsubl
shlb
xchg
xchg
call
mov
movsb
and
movsb
adc
pop
aad
or
mov
adc
fbld
sbb
in
mov
aam
push
cld
push
cmp
xor
ret
mov
xlat
dec
xor
push
adc
push
pusha
jg
or
mov
mov
clc
jo
mov
insl
cmp
xchg
pop
mov
lds
mov
call
test
jbe
mov
lea
push
add
push
mov
cmp
xor
cmp
or
mov
jmp
push
or
sbb
shl
cmp
insb
push
or
or
xor
jmp
and
test
pop
aaa
inc
inc
pop
mov
or
dec
pop
dec
jb
adc
xor
shr
mov
lea
decl
sbb
mov
cmp
bnd
scas
adc
ret
dec
call
mov
jecxz
xor
leave
inc
mov
jbe
pop
ljmp
adc
push
and
dec
inc
add
pop
fst
mov
in
adc
testl
pop
ret
lock
xchg
loopne
jl
sti
mov
cmp
or
mov
and
addb
push
add
arpl
add
xchg
jmp
or
movsl
cmc
adc
in
int3
cmp
jmp
insb
test
sbbl
int3
xor
das
adc
mov
sbb
rclb
or
or
dec
push
nop
jns
stos
lock
lret
cmp
sahf
lea
andl
sbb
or
movsb
ljmp
enter
add
cmp
add
inc
int
lea
lds
movsl
cwtl
in
or
cld
add
adc
aaa
xabort
pop
or
push
mov
pop
es
mov
add
mov
or
mov
mov
sahf
adcl
xor
call
push
cmp
xchg
in
fcompl
test
mov
pop
and
mov
dec
push
inc
push
insl
cmp
repz
push
push
clc
pop
sahf
or
jmp
inc
mov
xchg
popf
jl
jl
gs
fnstenv
scas
loop
sarb
dec
push
mov
adc
hlt
les
and
jg
and
popf
movsb
jmp
icebp
lret
sbb
cld
xorl
or
jle
loope
dec
mov
push
xchg
ljmp
and
inc
nop
ds
xchg
sub
xlat
dec
ds
inc
xchg
mov
orl
int3
xor
pop
push
xchg
cmp
clc
inc
inc
and
xor
popf
sbb
and
or
push
pop
adc
mov
push
sub
xchg
dec
pop
mov
xor
push
ret
push
mov
call
dec
cltd
pop
xor
dec
adc
testl
xor
popf
pop
push
adc
test
pop
push
jmp
decl
push
cld
mov
les
arpl
dec
xor
lcall
jge
movq
inc
mov
dec
ret
jmp
imul
xchg
jbe
and
jmp
movsb
and
pop
mov
mov
add
ss
xchg
push
int3
mov
jae
dec
add
or
jmp
cmpsl
std
orb
lods
ret
jns
adc
imul
or
mov
cltd
addb
js
inc
mov
nop
jle
mov
gs
mov
inc
inc
bound
rol
push
inc
adc
mov
sarb
jne
je,pn
fs
lods
int3
adc
xor
loopne
or
pop
scas
in
xchg
les
xlat
jnp
inc
push
push
and
movsl
cmp
daa
enter
mov
addb
call
mov
std
inc
fs
inc
pop
mov
xlat
inc
leave
or
mov
mov
cld
jmp
lock
xor
pop
jl
pop
xor
repz
inc
adc
mov
aas
aam
divb
rcr
call
adc
pusha
ljmp
sbb
adc
add
dec
jle
bound
sbb
xchg
outsb
loopne
fwait
rcrb
inc
movsb
cmp
in
pop
jmp
test
mov
fcoms
lods
xchg
loopne
ds
inc
test
xchg
dec
lret
movsl
sti
push
push
stos
pushf
push
pop
cmp
xorb
xchg
sbb
int3
jne
mov
mov
and
or
jge
int3
inc
push
add
adc
cmp
scas
push
rolb
add
push
mov
jnp
add
and
lret
lcall
shrb
paddusw
xor
pop
mov
inc
je
out
mov
add
scas
push
cmp
dec
hlt
outsl
idivl
dec
mov
sub
pushf
or
scas
xchg
jbe
addl
add
pop
call
addl
out
xchg
inc
mov
xchg
call
adc
or
or
test
mov
dec
sti
xorl
lods
pop
lahf
xor
push
adc
imul
sub
jecxz
add
fs
scas
push
hlt
cmp
mov
jge
ljmp
hlt
imul
iret
or
testb
push
mov
std
divb
push
mov
inc
dec
and
test
push
shr
push
rcr
inc
sub
clc
movsb
and
popa
sbb
jo
fbld
jb
xchg
pop
loop
xchg
inc
inc
xchg
jne
sahf
add
push
es
inc
incb
fldl
cmp
in
iret
cmc
in
mov
shlb
std
cmpsl
ja
or
pop
cmp
sbb
clc
pushf
in
dec
inc
movsl
add
ds
pop
cmp
push
ja
lock
subb
inc
in
js
ljmp
mov
pop
adc
mov
jmp
or
fld
mov
push
and
add
int3
mov
pop
sti
rcll
lret
mov
lock
call
xchg
xchg
dec
testb
int
and
test
xchg
and
adc
dec
add
pop
scas
push
loopne
and
outsl
in
mov
fbld
xlat
icebp
aas
lea
mov
loopne
loope
outsb
add
stos
lea
mov
push
push
xchg
mov
and
mov
inc
lea
push
and
aam
lahf
aam
js
push
adc
test
pop
jg
rolb
ds
in
jle
loope
call
test
xor
jge
lcall
jmp
repnz
int
fisubs
jle
pop
icebp
lret
jecxz
inc
xor
or
roll
insb
jecxz
lret
and
lock
and
push
push
and
jno
and
shlb
mov
pop
test
fsubl
andb
mov
hlt
dec
fisubrs
or
sub
leave
pop
mov
fld
call
and
jns
mov
and
sub
sbb
lock
sub
adc
incb
mov
mov
add
test
jle
icebp
loopne
push
popf
int3
test
inc
xchg
je
dec
out
les
dec
push
call
sub
aad
sti
cmp
cld
push
push
and
mov
pop
jmp
mov
mov
stos
xor
pop
cld
inc
inc
cmpsb
and
cmc
imul
stos
mov
dec
xchg
stos
fs
cltd
sub
add
mov
cmpb
add
adc
mov
ret
out
xor
jno
jmp
sub
mov
cli
lods
fsts
into
xor
sub
jge
or
push
and
scas
fldl2t
movsl
ret
or
dec
je
imul
insb
leave
dec
in
dec
stc
imul
scas
ucomiss
fs
inc
call
or
mov
mov
and
xchg
mov
in
out
and
cmpsb
jmp
add
rcll
mov
inc
jecxz
jle
popf
popa
test
out
push
test
call
jns
push
xor
adc
test
movsl
jb
aaa
dec
jmp
adc
jp
adc
pop
pop
loop
ljmp
mulb
adc
xor
xchg
repnz
sbb
add
insb
movzwl
ja
pop
or
adc
or
ret
xlat
or
dec
lret
mov
scas
nop
push
jecxz
jns
mov
jne
and
cmp
jmp
mov
mov
shll
or
or
push
sahf
ljmp
xchg
push
ss
sbb
xor
test
inc
repz
mov
push
imul
rolb
and
sbb
sbb
andl
xor
push
aad
or
push
loopne
fs
daa
add
pusha
xchg
cmp
xchg
mov
and
lret
push
mov
scas
cmp
hlt
mov
loope
cmp
hlt
movsb
mov
cmp
sbb
jno
and
or
ret
ljmp
and
ror
shlb
pushf
xor
and
cmpsl
push
xchg
pop
cmp
popf
push
enter
jmp
loop
sub
adc
sub
mov
jae
push
mov
inc
repnz
ja
dec
xchg
andb
lods
dec
leave
pop
imul
mov
aas
test
mov
lahf
ret
mov
dec
xor
aaa
incb
pop
jl
test
push
clc
cmp
jl
or
lret
jbe
xchg
or
mov
decl
push
dec
test
adc
add
lahf
loop
mov
or
pop
xchg
add
xchg
xor
shrl
stos
mov
xchg
ret
and
aad
sub
mov
jne
ss
mov
std
or
jno
addb
lods
dec
inc
mov
xor
push
in
in
inc
jmp
cmp
xchg
add
or
jmp
pop
push
cs
mov
lcall
sub
ljmp
inc
testl
sbb
jb
adc
cmp
sub
sbb
adc
add
xchg
popf
xor
fidivl
xor
clc
mov
sbb
std
pcmpgtd
sub
adc
clc
lret
sbb
xor
add
lret
sub
push
ret
inc
das
push
inc
fs
imul
push
mov
lea
mov
je
jge
push
jmp
inc
sub
jae
mov
mov
ja
lea
fdivl
push
xchg
add
mov
int
adc
orl
mov
cmp
jge
cmp
pop
mov
jp
add
cmp
jbe
imul
dec
nop
lods
mov
out
xchg
shlb
jbe
lock
jmp
push
jae
sbb
inc
cmp
jb
xor
push
mov
push
push
inc
dec
jmp
push
cmpsb
push
mov
incl
xchg
lea
cmp
xor
das
add
sub
jg
inc
adc
adc
adc
pop
std
adc
jge
dec
xor
js
shlb
aas
cld
call
dec
sub
jne,pt
clc
std
lahf
or
or
sbb
cltd
and
jo
je
xor
popa
imul
out
enter
xchg
outsl
lods
shrl
cmp
xor
adc
cmpsb
cmpb
pop
sub
xchg
sub
stos
arpl
in
sbb
xchg
rcrb
sub
push
sub
inc
int3
jbe
aad
jg
xchg
mov
lahf
mov
pop
mov
push
lret
push
out
clc
mov
push
out
pop
adc
or
inc
mov
mov
or
or
add
or
pusha
mov
popl
mov
subl
pop
adc
jge
das
in
jecxz
sbb
adc
es
pop
insb
mov
jne
mov
inc
push
jl
sbb
push
push
movsl
dec
jecxz
sbb
cmpsl
mov
xchg
fwait
and
or
mov
dec
mov
sub
or
fiaddl
out
or
dec
ror
lret
push
adc
adc
lock
xor
mov
or
mov
mov
dec
inc
inc
loopne
xor
xchg
mov
sub
and
mov
adc
and
rolb
ret
xor
bound
cmp
push
pop
fimull
inc
dec
mov
jg
jmp
mov
dec
push
or
cltd
and
xor
and
cmpl
adc
fwait
add
jge
jne
or
movsb
sbb
stos
or
lods
xorl
enter
int3
int3
sub
inc
mov
imul
cwtl
cli
in
das
mov
mov
pop
mov
add
ret
add
xchg
repz
cltd
push
nop
dec
and
inc
inc
push
add
sub
sti
sub
sbb
fdivs
mov
in
mov
add
cmp
jne
mov
mov
call
and
bound
test
ret
inc
mov
inc
or
push
add
ja
adc
xor
out
es
mov
test
test
or
cmpsb
cmc
ljmp
push
imul
pop
movb
inc
sbb
je
add
xchg
addl
inc
add
pop
push
out
jecxz
xor
push
jecxz
inc
inc
add
repz
int
movsb
repz
xor
jmp
xorb
loope
xchg
push
pop
push
mul
leave
or
inc
sbb
popa
inc
or
cmp
adc
rorl
setne
outsl
ret
jmp
mov
or
ret
and
test
xchg
loop
jle
aaa
pop
or
fs
rolb
and
add
pop
andb
add
mov
dec
mov
loop
mov
push
fidivrs
ds
push
enter
imul
or
jne
test
test
sub
cli
sub
jne
icebp
sub
je
ret
ja
add
xor
sti
out
push
loop
in
push
push
push
and
xor
dec
jmp
movb
popf
in
shlb
push
push
fcompl
out
jle
imul
mov
jl
push
mov
jge
sub
mov
xchg
jne
mov
cwtl
loope
imul
hlt
call
mov
jbe
in
es
push
enter
popf
stc
fstps
enter
inc
pop
pop
lds
mov
mov
push
jecxz
pop
shlb
hlt
into
push
or
rcr
or
cmc
mov
into
xchg
shll
mov
out
shrl
nop
test
dec
or
mov
jnp
mov
aam
add
clc
mov
test
mov
and
clc
push
adcl
xor
or
sub
fildll
ss
mov
ret
les
fs
and
mov
test
rcll
sbb
sbb
push
push
and
jne
push
cwtl
and
xchg
push
adc
in
sbb
adc
mov
stos
push
sub
adc
push
cmp
and
xchg
xor
jne
or
push
or
or
adc
xor
pop
aaa
mov
jp
push
xchg
in
fs
xor
sbb
xchg
xchg
in
dec
rorb
jmp
out
push
mov
ficoms
call
pusha
leave
lahf
fs
hlt
push
pop
les
jnp
inc
add
and
lret
rcr
outsb
int3
or
push
out
negl
lahf
jnp
or
xchg
adc
jno
mov
in
dec
test
push
fwait
fs
cmc
punpckldq
sub
mov
cmp
je
xchg
push
orb
push
jne
push
lea
in
ss
daa
mov
fs
gs
lahf
and
sbb
cltd
mov
insb
pop
nop
das
test
movsb
bound
jge
sub
push
push
xchg
mov
xchg
push
push
mov
imul
inc
adc
and
mov
dec
and
or
mov
fimuls
loopne
dec
adc
dec
cmpsb
les
dec
cmp
adc
nop
sahf
stc
cmp
mulb
mov
int
xor
lea
sub
sub
inc
and
fadd
test
enter
mov
movsb
adc
xor
cli
imul
jmp
adc
loop
xchg
aad
ja
jo
push
inc
mov
mov
stos
popa
jns
add
nop
inc
cmc
and
cmp
push
xchg
repnz
push
mov
push
or
into
push
push
mov
addb
in
adc
mov
push
cmc
lods
aas
mov
aam
cli
sti
jbe
mov
shrl
cmpsl
outsl
lock
mov
push
mov
lahf
sbb
inc
mov
insb
dec
imul
pop
test
sbb
mov
xchg
sub
adc
popf
xchg
test
sub
cld
push
lea
xor
insb
cmp
cs
pushf
jmp
lret
mov
stc
cmc
xchg
lret
cld
test
jl
push
lock
push
dec
pusha
mov
cmp
push
jmp
pop
add
fiadds
inc
xchg
call
mov
mov
or
pop
sub
ja
adc
jg
mov
mov
imul
das
xor
jl
add
cmp
mov
or
cmp
inc
jae
mov
dec
dec
test
adc
lods
sub
add
push
call
shr
ss
sti
or
mov
lea
jbe
xor
mov
repnz
and
and
xchg
cmp
stos
or
fxch
mov
dec
adc
in
push
push
dec
jle
dec
mov
jo
sbb
push
adc
bound
jne
not
mov
sub
jmp
and
inc
inc
sub
push
inc
add
and
bound
and
cmp
inc
jp
int
adc
sub
aam
fisttpl
or
push
push
inc
lods
and
push
xchg
cmp
adc
mov
nop
sbb
and
loop
sbb
dec
test
xchg
daa
xchg
lahf
and
sub
inc
shr
in
imul
pop
mov
fs
rol
dec
adcl
int3
in
shl
sub
cmp
sub
imul
and
por
inc
mov
push
pop
sub
std
in
int
inc
jg
xor
cld
scas
xor
fsubs
or
lds
fsts
das
sub
stos
and
aas
stos
mov
adc
push
and
jmp
adc
push
leave
xor
sub
int3
lds
shlb
jns
das
mov
in
xor
or
nop
pusha
cmp
sbb
gs
sub
loopne
and
sub
insb
out
popl
dec
add
push
adc
andb
and
xor
mov
mov
mov
test
mov
cmp
imul
rclb
mov
loope
mov
movsl
mov
mov
test
pop
nop
cmp
insb
ja
add
popa
add
cmc
call
test
and
pop
xchg
pop
sti
int3
sbb
out
sbb
or
andb
mov
jle
inc
cmp
adc
jmp
mov
mov
mov
cmp
loop
aad
adc
inc
lret
lods
add
hlt
cld
ja
stos
sub
call
sub
jne
push
adc
or
or
mov
cld
test
pop
add
mov
push
pop
icebp
and
pop
ljmp
pop
xor
inc
or
or
push
mov
xor
push
rol
adc
shrl
das
sbb
mov
mov
sbb
push
rolb
cmp
push
call
popf
popf
daa
cld
xor
lock
add
jae
mov
adc
xor
fiaddl
out
inc
push
pop
mov
fsubrl
jbe
aam
cmpsl
sti
std
fiadds
fiadds
rclb
cmp
sub
and
dec
inc
dec
imul
leave
cmpl
xchg
adc
in
sub
lods
sbb
adc
dec
popf
jbe
pushf
and
push
pop
pop
mov
fsubl
dec
das
xchg
push
mov
mov
and
add
lods
xchg
cmp
icebp
jo
test
or
cmp
mov
mov
pusha
or
and
fdivr
mov
shlb
and
pop
mov
sub
or
sub
pop
jmp
xchg
adcl
xor
adc
push
cltd
mov
push
call
outsb
sub
rolb
xchg
and
mov
add
mov
loopne
xor
mov
lea
push
daa
in
xchg
xchg
xchg
push
mov
rol
xor
ret
movsl
xchg
push
xor
mov
shrb
mov
mov
xor
nop
mov
mov
cmp
and
mov
pop
jbe
mov
push
scas
sub
stos
jno
adc
ljmp
jl
push
pop
das
adc
mov
sbb
mov
push
xor
mov
call
clc
pop
jb
test
push
xor
mov
or
out
jmp
and
scas
fs
cld
xchg
test
push
lret
sbb
incb
jae
cmp
mov
arpl
aaa
inc
lods
or
sbb
inc
xlat
movsb
cli
xor
jmp
sub
je
mov
addb
lret
sub
or
mov
fcmovb
xor
and
sbb
sbb
dec
and
call
les
xor
arpl
std
and
ffree
andb
movsb
jno
sub
lret
push
xor
movl
insl
mov
jno
inc
ret
cmp
xchg
lods
stc
adc
pop
inc
sub
cmp
leave
add
out
and
pop
push
mov
pop
icebp
jle
mov
inc
orl
xor
incl
lods
push
sub
pushf
and
cmpl
cwtl
fs
or
push
jmp
mov
sbb
inc
cmp
sbb
xchg
pop
lahf
inc
call
dec
and
lret
push
not
sbb
pop
sub
sbb
xchg
sbb
adc
jge
dec
les
sti
int3
dec
imul
test
loop
rolb
cmpb
push
xchg
inc
and
pop
or
sub
hlt
mov
dec
rolb
push
mov
ja
sarl
inc
sub
cmp
dec
es
cs
mov
jne
adc
sbb
mulb
xor
push
sbb
addl
cs
jne
add
add
mov
and
inc
jno
push
inc
xor
sub
pop
nop
fld
mov
in
cld
adc
fdivrp
adc
adc
adc
adcb
rcll
pop
sub
mov
test
dec
adc
mov
pop
jmp
aad
fwait
or
out
movsl
pop
incb
sbb
popf
cmp
inc
or
call
and
push
cwtl
pop
and
inc
inc
popf
push
leave
insl
pop
xchg
orb
sbb
insl
or
mov
bound
adc
rolb
outsl
int3
mov
pop
pop
mov
push
jmp
push
inc
push
and
out
pop
mov
and
mov
lret
mov
clc
mov
mov
jne
sti
cmp
add
in
arpl
sbb
mov
rcrb
push
subb
mov
jae
jge
sub
cmpsl
int
imul
or
popf
push
sbb
scas
ret
mov
insb
inc
cmp
and
mov
push
int
ds
pop
push
mov
lock
cltd
scas
mov
cli
add
sbb
call
dec
fisubs
loop
mov
adc
je
mov
sbb
adc
and
jbe
mov
orl
test
mov
sub
mov
push
fs
push
add
int3
mov
shll
mov
push
jmp
xor
xor
sbb
mov
pop
push
xchg
test
push
add
sub
adc
jo
dec
dec
and
mov
test
cmp
inc
iret
sub
lds
lcall
je
repnz
imul
inc
ficoml
push
and
pop
ret
xlat
subb
lock
jne
hlt
inc
push
xchg
inc
les
dec
ret
xchg
jns
mov
in
mov
js
dec
inc
mov
lock
lcall
inc
add
outsl
adc
popf
push
and
push
repz
mov
sbb
cltd
fdivrs
sar
mov
xor
fs
dec
data16
or
cmp
xchg
popf
loope
push
mov
dec
repnz
ss
addl
sbbl
test
adc
mov
or
shlb
mov
lret
inc
adc
dec
push
insb
aas
push
mov
movsb
adc
outsl
mov
cltd
mov
sub
xchg
or
ljmp
aas
jbe
int3
mov
bound
mov
jl
xchg
push
jno
adc
pusha
fs
aaa
clc
pop
push
xchg
dec
cmp
pop
dec
loop
pop
arpl
push
inc
sarb
in
pop
pop
sbb
sbb
ror
sub
cmp
cmp
mov
lret
iret
jp
pop
jb
and
dec
test
cld
inc
and
mov
call
jne
movsl
outsb
jnp
jmp
push
idivl
sub
loop
mov
push
fadds
inc
inc
adc
mov
adc
mov
pop
push
loop
xchg
xchg
jp
ret
sbb
inc
shr
push
xchg
pusha
dec
ljmp
sbb
es
and
sbb
push
push
test
or
and
test
jmp
cltd
shrb
stc
cmpsb
inc
adc
mov
xor
push
adc
sbb
test
dec
adc
pop
das
in
cltd
jmp
stos
je
mov
adc
fs
ja
movl
dec
add
mov
sub
cld
adcb
adcb
pop
jo
xchg
xchg
leave
pop
mov
in
jecxz
pop
cmp
add
jbe
fldcw
lea
cmp
push
lret
jle
cmp
push
add
fdivrs
cmpl
adc
mov
push
mov
aam
jnp
pmaxub
les
push
mov
fstl
shrb
call
adcb
cmp
pop
jne
add
jbe
das
push
inc
call
test
mov
std
test
mov
push
outsb
dec
hlt
pop
test
jnp
or
jne
aam
in
and
jg
xor
lods
push
push
or
je
sti
andb
push
icebp
pop
mov
adc
push
mov
and
mov
sbb
in
adc
cmpsb
negb
mov
enter
add
repz
adc
push
int
sub
push
xchg
adc
pop
pop
bound
pop
cmp
adc
pop
push
pop
fdivs
mov
pop
adc
adc
bound
push
aad
jnp
xchg
inc
call
xchg
inc
pop
dec
push
fadd
cwtl
mov
in
push
repz
push
push
pop
les
jg
in
hlt
mov
pop
mov
scas
jno
xchg
inc
mov
add
lret
gs
push
add
cmpsl
adc
pop
dec
test
cmovno
sub
xchg
outsl
popa
xchg
pop
mov
jge
lret
cld
sbb
push
sti
inc
mov
jae
and
cld
movsl
and
jge
divl
scas
xchg
stos
je
and
cmp
sub
jmp
call
nop
mov
ror
and
push
adc
int3
shll
mov
inc
pop
push
xchg
sahf
arpl
push
call
bound
bound
dec
push
cmpsb
les
call
fmuls
out
clc
and
scas
lods
dec
orl
std
push
xor
mov
lret
out
pop
jmp
into
jmp
dec
or
mov
rclb
clc
mov
test
call
rorb
ror
inc
fcoml
fldenv
mov
inc
subb
mov
stos
push
cmpsl
cwtl
je
inc
les
and
sbb
test
sbb
iret
idivl
sub
sbb
mov
sbb
dec
sub
adc
mov
jmp
jge
push
mov
ja
xchg
popf
inc
push
adc
out
sub
push
dec
mov
xor
inc
nop
outsl
jae
push
add
std
adc
jns
lahf
inc
jne
jno
jnp
je
call
sub
shr
sub
pop
cli
sub
pop
ldmxcsr
push
into
ret
jno
inc
mov
sbb
mov
pop
jno
pop
xor
int3
bound
rcrb
out
in
xchg
mov
or
or
mov
jae
clc
popf
fldenv
lea
aad
push
mov
std
scas
clc
add
ja
enter
inc
push
vpopcntb
dec
and
adc
test
fmull
xchg
dec
cld
push
jge
sahf
or
lret
mov
iret
lret
sub
mov
mov
inc
enter
inc
pop
ss
sbbb
xchg
adc
push
lea
jmp
pop
mov
repnz
jl
fsub
lret
jl
and
mov
jns
add
out
xor
scas
dec
jp
adc
dec
mov
int
dec
or
addl
xchg
test
call
pop
push
enter
adcl
mov
xchg
jno
dec
lea
mov
insw
cmp
and
scas
movsl
dec
jne
adc
lds
cmpsb
jne
std
ss
sahf
push
je
js
outsl
fiadds
das
jmp
call
into
or
ljmp
push
lods
inc
mov
pop
mov
mov
outsb
or
cmp
push
or
ja
sahf
jae
sbb
imul
mov
xlat
loop
jg
in
mov
sbb
xor
mov
negl
test
jne
jg
jno
or
nop
cmp
ficomps
fbstp
sub
in
int3
rolb
and
jae
aas
pop
push
inc
dec
cmp
sub
fiaddl
dec
loope
movsl
inc
inc
dec
daa
or
xchg
dec
daa
adc
dec
das
pop
lret
popf
jb
jne
dec
add
jl
jge
and
inc
decl
or
lret
in
fstpt
push
pop
ret
push
mov
push
mov
bnd
or
call
cmp
pop
out
or
inc
mov
xchg
pop
mov
mov
add
in
inc
std
pop
mov
fsubr
arpl
mov
idivb
mov
sbb
mov
mov
int
rcrl
inc
and
or
adc
jecxz
xor
mov
cmp
bound
sbb
dec
lods
xchg
inc
out
rorb
push
and
loop
in
mov
cmp
movsb
int
nop
loopne
movsb
int3
push
pop
add
pop
add
sub
xchg
shl
pop
or
xchg
scas
rcrl
call
mov
mov
imul
cmc
inc
inc
sbbl
imul
movsl
mov
inc
nop
into
add
shrb
and
adc
adc
push
or
sub
insl
out
mov
push
adc
sub
inc
pushf
ret
inc
push
and
daa
loop
shll
mov
adc
and
daa
adc
xchg
stos
jecxz
cmp
icebp
je
sbb
pop
notl
or
or
leave
or
dec
fsubrs
ljmp
pop
or
sete
pop
scas
mov
cmpsb
stc
pop
lock
popf
outsb
push
xchg
lcall
gs
repnz
je
inc
pop
mov
outsb
push
mov
push
xlat
cmp
cmp
adc
sahf
rcl
sub
hlt
and
xchg
and
dec
popa
adc
sub
and
pop
aaa
add
jbe
cmp
out
xchg
andl
sbb
adc
or
pop
or
add
mov
mov
sub
je
dec
int
mov
fcom
and
sub
dec
dec
push
xlat
or
mov
imul
push
int
xchg
fs
push
lret
or
add
pop
or
push
adc
movsb
dec
xlat
dec
clc
cmp
adc
loope
sbb
test
ds
addb
imul
pop
cmp
pop
in
pop
sub
bound
pop
je
call
xchg
jle
enter
inc
shr
dec
and
add
jg
sbb
inc
adc
addb
dec
icebp
mov
sub
pusha
adc
cmc
adc
lock
aas
sub
xor
inc
rolb
bound
add
loope
fstl
and
xor
add
stc
push
xchg
test
jno
adc
sub
pop
test
jb
pop
cmpsl
xor
stc
jae
jae
pop
or
inc
ret
mov
and
mov
out
mov
add
or
int3
push
fmull
ficoml
pop
inc
mov
sarb
xchg
cld
push
jecxz
aam
inc
mov
and
or
hlt
rorl
or
loop
pop
jnp
adc
sub
rcl
faddl
inc
xchg
push
or
fstps
cltd
mov
push
and
sub
dec
ljmp
xor
call
or
mov
stc
or
jno
add
test
inc
sub
adc
jb
repnz
ja
lods
jmp
sbb
inc
dec
mov
and
or
sbb
push
test
inc
cmp
cmp
repnz
dec
mov
jmp
mov
aam
add
enter
scas
lret
cmp
push
hlt
je
push
je
jnp
sbb
aaa
xchg
sub
jmp
out
pop
cltd
push
mov
xor
pop
or
xchg
sti
adc
or
push
jmp
xor
mov
inc
inc
cmp
jne
dec
adc
frstor
inc
add
jmp
cmp
jbe
es
mov
and
push
loope
add
and
xchg
push
cli
mov
lods
xchg
test
ss
push
add
inc
push
sub
inc
xor
mov
sbb
leave
hlt
jne
into
pop
cld
or
adc
xchg
xor
out
and
inc
ret
jg
mov
pop
in
adc
and
sub
jge
into
xchg
pop
xchg
insb
mov
mov
cmp
rcr
and
inc
lock
dec
pushf
dec
push
lahf
gs
dec
dec
loopne
adc
adc
icebp
jb
add
call
sub
outsl
fstl
xchg
or
sbb
leave
dec
xor
cmp
mov
ret
dec
cmc
xchg
cmp
cmpsl
jnp
int3
push
daa
mov
shll
cmpsb
call
inc
adc
adc
sbb
push
jae
shl
enter
into
sbb
or
sub
sahf
pop
jecxz
enter
xchg
or
dec
movsb
dec
lret
jmp
enter
decb
mov
xor
xchg
or
cmovbe
les
lock
out
aam
lret
add
sub
in
es
aam
pop
inc
mov
stc
cmp
int
lods
mov
loopne
add
fildll
dec
test
sbb
mov
fisttpl
pop
adc
sti
sub
xchg
loop
bound
or
adc
mov
adc
sbb
pop
pusha
inc
loopne
rolb
testl
call
mov
pop
push
sbb
or
fsubl
adc
std
inc
push
pop
fisttpll
or
cmpsb
adc
sbb
das
adc
addr16
in
popa
lahf
and
jae
mov
daa
lods
pop
sbb
and
mov
xchg
adcl
rorl
fnstcw
cwtl
test
cmp
inc
outsl
and
adc
clc
bound
dec
lock
call
mov
dec
dec
pop
mov
nopl
ja
lahf
and
rcll
xchg
leave
mov
push
add
xchg
in
mov
test
cmpsb
ret
push
jne
mov
test
xchg
imul
rcrb
cmp
lret
adc
push
divl
xor
clc
aaa
lahf
push
or
pusha
push
dec
pop
lock
je
fwait
ds
sub
icebp
lret
mov
loop
sbb
cmp
and
or
inc
sub
inc
jmp
int3
jp
orb
mov
je
stc
or
jnp
push
clc
lret
sub
jno
nop
scas
mov
clc
adc
or
inc
mov
rcr
or
bound
xchg
mov
or
stc
out
sub
lret
push
fsubrl
cmpsl
pop
jle
loop
jg
aam
adc
ja
lods
mov
es
pop
xor
in
inc
mov
dec
popf
adc
dec
int3
and
test
lret
jne
out
mov
pushf
xor
imul
inc
nop
dec
jecxz
sbb
popf
and
cld
jne
cmp
adc
test
lahf
nop
mov
cmp
sub
xchg
jge
xchg
lahf
mov
ret
cmp
inc
mov
sbb
inc
mov
dec
test
les
jnp
mov
cltd
dec
jb
jle
push
adc
iret
mov
pop
mov
outsb
imul
les
cmpb
ret
push
pop
ficoms
in
sub
mov
sub
mov
and
jno
mov
adc
imul
test
add
inc
mov
mov
xchg
je
roll
cmc
mov
hlt
push
divl
adc
xchg
fs
sahf
jne
stc
mov
pop
jmp
adcl
add
clc
xor
jne
or
shlb
mov
hlt
lea
push
loop
or
mov
push
leave
xchg
jbe
cltd
push
or
outsl
mov
inc
mov
call
xchg
cli
pop
lret
scas
push
mov
mov
add
test
cmpsl
icebp
nop
or
jae
cmp
or
scas
xor
aas
mov
push
lahf
in
les
in
xchg
and
imul
jne
out
push
mov
pop
cmp
xchg
pop
cmp
pusha
mov
jne
fwait
rorl
sub
in
pop
sub
dec
jecxz
les
push
jecxz
adc
dec
cltd
jle
jne
insl
xchg
sub
push
xchg
faddl
jne
adc
adc
cltd
pop
rcrb
call
jmp
test
decl
adc
mov
test
aas
repnz
ficoms
mov
ret
adc
pushf
enter
add
movsl
jne
xor
sbb
jg
aaa
or
ficomps
sbb
out
dec
xchg
mov
mov
mov
rcrb
arpl
roll
andl
and
mov
adcb
adc
imul
popa
inc
fs
sub
je
enter
icebp
push
sub
cmp
sub
insb
pop
cli
aaa
cmp
dec
dec
js
xchg
inc
or
xchg
fs
int
or
inc
adc
call
inc
mov
arpl
inc
movsb
inc
sub
adc
dec
adc
mov
jge
adc
loope
movswl
xchg
mov
sub
and
adc
sbb
jo
dec
pop
pop
push
jle
pop
mov
adc
adc
test
add
mov
sub
push
inc
sarb
sub
cmp
adc
adc
adc
xor
pop
jecxz
pop
clc
push
adc
in
outsb
test
add
in
cmp
and
pop
push
jmp
jle
xlat
adc
mov
adc
dec
mov
cwtl
jnp
cmp
inc
mov
lret
xchg
xor
inc
xor
adc
add
add
ja
mov
decl
rcl
mov
pop
cwtl
subl
xorl
popf
sarl
inc
or
adc
mov
les
call
mov
loop
push
pop
xchg
scas
inc
adc
ret
notb
call
rcll
push
push
roll
std
andb
call
fldenv
or
out
lret
adcl
jnp
xor
dec
sbb
adc
xor
rolb
lret
sarb
sub
jle
nop
enter
sahf
mov
inc
adc
and
test
cmc
sti
cltd
insb
and
cwtl
lds
cmp
xchg
push
xchg
sbb
shrl
adc
pop
loopne
mov
test
das
xor
xchg
mov
inc
adc
stos
mov
enter
mov
jne
mov
insl
push
mov
mov
je
push
lcall
jne
inc
inc
popf
push
xor
lods
ret
mov
push
movsb
pop
enter
adc
test
sbb
jp
jecxz
cvtpi2ps
pop
flds
mov
fs
jecxz
adc
jne
fcompl
xchg
lds
cwtl
clflush
xchg
fstl
fidivl
jmp
xor
test
cmp
adc
pop
mov
cmp
sub
iret
sub
mov
mov
inc
or
add
pop
mov
iret
repnz
pop
dec
ret
cli
jo
and
cwtl
or
or
xchg
ficoms
sbb
js
int
or
push
nop
and
cmpsl
xchg
dec
inc
pusha
and
jno
or
mov
jne
push
mov
adc
xchg
and
nop
inc
cmpsl
inc
push
minps
lret
adc
and
sbb
sbb
cmp
xchg
leave
pop
enter
xchg
pop
mov
xchg
pop
enter
xchg
cmc
fisubs
mov
mov
adc
pushf
sbb
cld
enter
bound
push
hlt
or
scas
xchg
in
enter
or
xchg
fmul
or
jmp
and
xchg
gs
es
jbe
dec
adc
or
mov
in
adc
nop
xchg
movsl
or
or
xchg
adc
bnd
imul
aaa
dec
icebp
push
or
xchg
dec
lret
jb
test
adc
movsb
inc
and
sub
adc
jecxz
inc
cld
mov
popf
dec
dec
mov
add
push
testl
dec
adc
sbb
push
and
sub
popf
jb
sub
aam
cmpsb
stos
xor
or
stos
cwtl
lea
inc
dec
and
or
dec
enter
and
sbb
in
sub
int3
call
jmp
out
std
shl
lret
test
mov
sbb
lods
sbb
ja
jns
aas
enter
dec
bound
or
mov
dec
fs
add
push
push
mov
addl
mov
rcrb
sub
icebp
or
mov
mov
or
xlat
movsl
movsb
outsb
stos
xchg
dec
cmpsb
cmp
sbb
pushf
mov
adc
and
pop
call
cmp
add
pop
test
adc
sub
andb
pop
adc
hlt
fs
and
cli
popa
and
mov
cmp
or
sbb
adc
or
push
popf
lods
lock
jl
add
icebp
je
or
mov
es
test
and
mov
jle
test
push
mov
insl
call
sbb
enter
pop
call
and
gs
hlt
jmp
push
lret
push
jbe
mov
or
mov
test
sub
stos
arpl
cli
jge
in
dec
push
sbb
xchg
imul
add
out
iret
inc
movsl
adc
nop
add
mov
pop
mul
lock
std
movsb
push
out
adc
xchg
aas
mov
jge
insb
xchg
add
ljmp
and
inc
clc
adc
hlt
jg
adc
lds
insb
std
es
out
out
enter
es
mov
sbb
push
out
nop
mov
test
adc
ja
jno
inc
cmp
jno
jl
sub
xchg
dec
push
dec
clc
adc
sbb
outsb
cltd
imul
sarb
pushf
outsb
loopne
xor
or
push
int
ss
stos
jge
push
adc
enter
mov
test
int
pop
add
pop
stos
ret
adc
mov
sti
jb
adc
into
or
jge
xor
xor
orb
push
fdivl
cmp
call
test
idiv
push
nop
sbb
sbb
adc
jnp
pop
sti
push
out
mov
aam
mov
or
cwtl
hlt
test
add
pop
push
push
negb
mov
push
inc
and
stc
jg
mov
push
adc
add
and
rcl
push
icebp
push
xchg
push
lods
pop
cli
sub
shll
test
daa
xor
out
sbb
aas
xor
test
sarl
cltd
test
mov
je
add
push
pop
adc
int3
jo
lret
outsl
cld
imul
add
ret
push
push
pop
aas
in
mov
cmp
out
or
or
std
xchg
inc
mov
aas
mov
mov
and
push
rorl
mov
inc
mov
xchg
xor
sub
cwtl
out
pop
and
mov
xor
pop
pop
or
sbb
push
je
xor
and
and
outsl
loop
sbb
test
cltd
icebp
jo
iret
jo
mov
sub
xchg
sub
xchg
adc
pop
test
stos
mov
inc
adc
dec
nop
rcrb
cmp
jg
jl
sbb
sbb
lock
mov
sbb
aas
xchg
fisubl
adc
xchg
add
sbb
and
mov
cld
inc
std
mov
lahf
adc
dec
fimuls
in
fsubr
rcll
mov
movsb
push
dec
dec
push
movsl
xor
sub
test
test
sti
mov
push
sbb
out
js
lcall
cmp
lahf
and
inc
in
add
pop
dec
dec
subl
sbb
sub
shrl
adc
mov
movsl
aam
vcmpps
xchg
sbb
or
push
insb
lahf
mov
and
mov
xor
enter
and
testl
cmp
hlt
insb
lcall
int
jne
push
and
incb
test
and
dec
sbb
fmulp
shlb
cmpsb
push
fcmove
pop
xor
fnstcw
orb
add
xchg
push
imul
xchg
xchg
push
add
or
test
clc
jmp
sbb
jp
add
mov
mov
sbb
push
fs
push
imul
cwtl
cmp
mov
mov
add
mov
enter
adc
jno
xchg
mov
jo
adc
cltd
adcl
je
adc
and
pop
into
lock
out
push
mov
jp
inc
adc
test
adc
push
xchg
cmp
push
cmpsb
jmp
sub
dec
cwtl
mov
loop
pop
je
sub
addb
xor
div
add
mov
shrl
imul
sub
divl
sub
push
push
dec
jbe
outsb
and
in
xor
cltd
sbbb
loope
mov
lahf
rorb
sub
xor
xor
and
sbb
mov
xchg
xchg
or
add
lret
int3
sub
mov
jno
adc
bound
fs
cmp
test
test
lock
ror
mov
sbb
push
mov
lods
push
les
daa
pop
fcmovne
das
inc
fsubrs
pop
loopne
sar
mov
mov
push
rolb
dec
cmp
repz
das
jmp
and
push
mov
adc
andl
jno
mov
inc
sarl
inc
or
xor
pop
adc
or
idiv
sarb
adc
push
rcr
incb
jne
fistps
icebp
mov
jl
cmovle
test
jns
repnz
test
mov
ret
cld
shlb
adc
aas
inc
mov
int3
shl
mov
sbb
adc
add
adc
cli
xorb
shrl
cmp
aaa
mov
and
cld
dec
rcr
pop
xorl
ljmp
pop
lcall
mov
sbb
js
daa
cmpsb
inc
out
test
popf
or
push
sub
and
adc
xchg
or
rorl
cmp
pop
stos
adc
js
sti
aas
push
insl
ljmp
jne
inc
dec
int3
pop
in
jle
or
xchg
adc
out
xchg
imulb
outsb
mov
popa
sahf
aam
ret
cmpb
stos
dec
jno
sahf
dec
push
into
and
call
xchg
sti
sub
jg
mov
cmp
xchg
les
subb
mov
sbb
insl
inc
jns
outsl
push
call
xchg
in
enter
dec
push
jo
pop
jg
ljmp
inc
cwtl
pop
mov
adc
mov
int3
cli
sub
and
and
js
lods
push
dec
push
out
jne
mov
int
jecxz
xchg
mov
adc
xor
es
push
aam
jp
mov
pop
cwtl
je
dec
cld
dec
push
in
jno
push
jg
xchg
cmpsl
pop
push
ret
mov
es
mov
mov
leave
out
add
mov
out
dec
inc
inc
mov
sahf
orl
lock
push
xor
sbb
subl
sub
cltd
les
cmp
in
adc
jg
adc
sbb
dec
inc
mov
out
nop
hlt
and
adc
mov
jns
outsl
cwtl
sbb
jle
mov
enter
and
adc
xchg
in
out
call
and
das
adc
xor
sub
sbb
fcoms
flds
cltd
popa
data16
pop
rorb
jns
or
les
mov
sahf
test
clc
mov
adc
cmpsb
xor
das
xorb
sub
jp
test
push
in
nop
out
pop
push
popf
rcll
mov
int3
push
mov
mov
adc
loopne
pop
sahf
dec
xor
pusha
mov
jl
sub
adc
mov
sub
roll
enter
or
cmp
rcl
enter
test
mov
cmp
test
or
jno
and
lds
mov
mov
int3
les
std
and
mov
popf
xor
add
dec
lcall
sub
cmp
add
and
jl
stos
and
insb
cld
and
loopne
mov
adc
sbb
and
test
test
dec
cmp
leave
test
inc
pop
mov
lods
mov
jl
cmp
jb
jae
xor
sbb
or
xchg
adc
push
sbb
nop
in
movsb
hlt
mov
stos
mov
push
data16
mov
and
adc
xor
sbb
xor
stos
push
lret
std
mov
and
cld
ds
inc
mov
sub
dec
lds
mov
jb
aam
mov
leave
icebp
leave
sub
xchg
cmp
loop
push
or
or
cmp
xor
pop
and
cmpsl
pcmpeqb
sti
push
pop
jmp
xchg
sbb
mov
in
hlt
outsb
and
sbb
rclb
sbb
jge
inc
sbb
mov
jb
fsubrs
or
add
xor
call
loopne
stc
jle
cmc
mov
mov
or
fiadds
mov
into
mov
xchg
xchg
inc
mov
scas
std
mov
dec
in
stos
pop
xor
out
sbb
add
fistl
int3
pop
push
dec
jns
xlat
mov
icebp
jge
or
pop
jmp
je
outsb
je
pop
sub
ds
mov
outsb
mov
add
push
mov
or
add
popa
call
pusha
sub
aad
lcall
jae
xchg
mov
mov
mov
adc
pop
or
sar
push
les
std
pop
inc
xchg
ja
sti
and
test
and
sub
jne
mov
jle
xchg
ljmp
jno
sbb
into
dec
fidivrl
and
jns
outsb
xor
jp
and
ret
push
and
adc
or
push
xor
nop
fisttpl
push
pop
or
adc
jmp
sub
adc
mov
in
pop
mov
fldt
and
add
je
call
xchg
out
cmpsb
sbb
inc
add
adc
fnstenv
cmp
frstor
push
mov
dec
pop
sbb
aas
add
aad
adc
mov
nop
dec
jecxz
mov
repz
clc
call
test
mov
mov
add
add
push
pop
and
xor
mov
cmp
sub
cmp
cld
jmp
hlt
das
sbb
push
jecxz
or
cmpb
data16
or
and
jmp
push
or
cmpsb
lea
and
bound
sbbb
sub
and
movsl
nop
clc
xor
inc
jb
or
cmpb
test
rorl
mov
lods
and
cmp
les
adc
cmp
mov
xlat
add
sbb
rorb
mov
push
mov
cs
rol
std
or
inc
or
sti
mov
in
inc
addr16
cmpl
lea
cmp
test
loop
in
adc
sti
test
push
xchg
jle
and
inc
sub
or
outsl
movsl
xorb
jle
cmp
aaa
ret
add
iret
movzwl
cmp
testl
aas
add
mov
mov
add
mov
and
stc
adc
mov
clc
daa
pop
lahf
pop
bound
aas
dec
es
xor
jb
pop
cmp
loope
out
or
inc
jae
add
in
jb
xchg
les
or
inc
mov
enter
inc
push
push
cld
inc
shr
adc
mov
cmpsl
xor
mov
js
mov
add
mov
inc
cld
stc
rcl
add
mov
lcall
add
ja
cmp
push
jne
ljmp
std
jb
xor
adc
stc
xchg
dec
mov
fimull
ja
mov
add
std
scas
lds
inc
and
push
adc
or
jl
dec
daa
cmp
cmpsl
outsb
sarl
and
push
or
pusha
hlt
mov
adc
mov
loop
jns
nop
adc
push
mov
mov
mov
je
mov
push
mov
test
call
in
sbb
repnz
cmp
enter
int3
shlb
or
lahf
test
shl
xor
sahf
lea
sbb
sbb
aam
arpl
mov
jns
dec
nop
mov
mov
push
mov
mov
lods
scas
daa
xchg
imul
jb
dec
push
test
scas
sub
and
and
push
mov
inc
sbb
popf
sub
mov
fisttpl
test
rorl
es
inc
sub
adc
inc
and
jno
icebp
repnz
out
xor
movsb
and
and
nop
int3
and
xchg
inc
ss
mov
loopne
out
adc
jno
aam
and
clc
adc
adc
xchg
ljmp
push
rorb
lods
enter
cmp
sbb
test
mov
or
inc
pop
dec
in
outsl
sub
pop
jecxz
dec
jb
push
cmp
lds
sbb
mov
sbb
cltd
mov
pop
imul
aad
aad
pop
data16
xchg
pop
loopne
xchg
jp
sbb
mov
inc
test
mov
sbb
repnz
pop
mov
mov
pop
imul
test
and
mov
xor
mov
add
outsl
mov
push
outsb
xchg
add
call
enter
fs
adc
mov
dec
lods
mov
mov
leave
rcl
arpl
jns,pn
push
movb
mov
and
xor
push
fwait
xchg
and
outsl
orb
xor
sub
mov
push
loopne
nop
cmp
inc
sub
lcall
loop
adc
xchg
push
sub
call
cmc
jle
xchg
lahf
call
or
or
jb
add
mov
jb
idiv
push
push
dec
insl
push
xlat
mov
imul
cld
mov
fmuls
adc
jle
xchg
inc
xchg
xchg
bsr
aad
and
xchg
movsl
or
cmp
pushf
xchg
and
or
sub
mov
and
insl
cmp
jns
xor
cltd
daa
xchg
xchg
push
popf
or
and
lods
jbe
jge
call
pop
push
jle
jno
leave
pop
and
adc
test
insl
les
push
adc
mov
pop
stos
adc
mov
dec
push
dec
enter
mov
movsl
xor
pop
push
daa
ss
jbe
loop
fs
adc
rclb
stc
rclb
sbb
xchg
out
mov
mov
iret
mov
ret
cmpsl
mov
enter
leave
adc
pop
adc
sti
sbb
je
xchg
pop
or
out
loope
pop
sub
cwtl
xchg
je
mov
gs
sbb
aad
or
hlt
daa
inc
jbe
adc
xchg
dec
pop
fmuls
cmpsb
push
cmp
out
adc
sbb
add
sbb
popf
dec
out
mov
cld
and
orb
pop
sub
jl
adc
pop
cmp
mov
xchg
xchg
push
mov
sbb
ja
test
bound
and
and
test
les
xor
mov
ljmp
fmuls
or
inc
loopne
pop
or
inc
nop
sub
sbb
mov
iret
lea
push
fcmovne
mov
push
mov
pusha
and
push
test
mov
and
popf
xchg
dec
jo
dec
cld
sub
jg
xlat
in
or
dec
cmpl
add
add
jl
mov
mov
dec
push
in
xchg
sub
push
sub
xchg
ljmp
test
es
icebp
jge
pop
hlt
call
leave
sbb
dec
xchg
imul
jl
cmpsl
push
or
movsb
inc
in
adc
imul
or
fwait
in
sbb
push
sbb
xor
aam
ss
js
mov
sub
xchg
pop
and
cmpsb
mov
push
jne
decb
cmp
shl
and
or
jmp
sub
pop
ret
mov
aam
dec
lods
mov
mov
sbb
push
test
mov
jl
mov
out
jl
test
adc
movsl
push
data16
mov
inc
dec
jge
and
movzbl
push
mov
je
push
rclb
jl
cmp
add
in
out
sub
dec
or
int3
lar
pop
sarb
nop
into
xchg
xchg
adc
add
mov
jne
call
mov
mov
movsl
fmull
lds
aam
adcl
cltd
mov
test
or
dec
orl
cmp
mov
pop
inc
enter
rep
mov
ds
dec
xchg
insb
pop
mov
subb
aad
and
sub
das
fldl
sar
xor
iret
xchg
les
xchg
pop
jl
sahf
shlb
adc
test
addr16
leave
push
dec
push
push
push
sbb
mov
ret
pop
add
bswap
add
testl
inc
mov
push
sub
sub
sahf
mov
pop
scas
mov
ss
jae
loopne
subb
aas
lea
inc
inc
in
push
pop
sbb
filds
rcll
xorb
test
data16
or
push
std
cmp
addl
inc
or
jge
leave
lds
inc
sub
xchg
stos
inc
pop
mov
loope
push
push
sub
mov
mov
test
sbb
adc
mov
cmp
das
jge
push
adc
push
pusha
mov
or
sub
inc
mov
sahf
mov
out
mov
adc
imul
mov
out
jne
or
cmp
cmp
adc
push
adc
add
jns
subl
push
lret
insl
inc
sbb
popf
cmpsl
pop
fs
adc
lods
shrl
mov
pop
inc
cmp
sarl
push
push
xchg
je
dec
cltd
sub
in
and
fistpll
mov
fiadds
fdivrs
jp
and
or
int3
out
les
jge
mov
sbb
dec
iret
adc
sbb
cmp
mov
jbe
push
jb
test
fbstp
mov
cmpsb
push
in
subb
pop
inc
ret
adc
and
push
push
sbb
adc
pop
enter
add
sub
sub
outsb
push
sbb
lds
test
lods
cmp
mov
or
mov
sbb
lock
push
xor
mov
pop
js
cmp
out
mov
mov
jo
xorb
lock
call
jnp
rcll
cwtl
xchg
sub
jno
push
xor
push
nop
add
or
pop
mov
in
push
xor
arpl
pop
adc
pop
and
cmp
adc
push
int3
sbb
push
push
decl
dec
je
xor
sbb
pmaxub
adc
sti
adcb
push
lock
push
dec
clc
imul
hlt
or
inc
push
push
shr
loopne
mov
popa
pusha
lea
cmp
fisubrl
inc
jg
push
mov
dec
add
inc
dec
ret
jle
daa
lret
test
dec
dec
lods
aaa
pop
mov
sub
mov
les
pop
clc
xor
or
add
push
push
push
or
push
leave
push
pop
sbb
xchg
test
rcrl
sbb
sbb
sbb
mov
sti
mov
in
mov
in
arpl
or
jmp
cmpsb
or
imul
int
imul
add
or
add
call
and
jl
in
dec
les
sti
or
mov
movsb
jmp
cs
int3
mov
inc
mov
or
adc
or
xor
cmp
test
jmp
add
sub
or
je
and
mov
adc
and
stos
adc
sbb
call
and
adc
adc
or
out
adc
in
outsl
lret
adc
adc
dec
movsl
leave
pop
and
jno
push
and
pop
mov
insb
mov
mov
mov
sarl
mov
pop
adc
push
shlb
and
and
sub
inc
sub
subl
or
push
jno
push
mov
sbb
adc
sbb
stc
or
sar
cmc
pop
jnp
mov
xlat
imul
rolb
dec
cld
movsl
xor
cld
sbb
push
cmp
cld
push
adc
repz
sub
xchg
stc
mov
mov
push
pop
gs
jns
jle
adc
cld
add
insb
adc
cmp
add
pop
dec
push
cmc
scas
push
insb
push
mov
in
mov
add
inc
push
imul
cmc
push
arpl
pop
int3
pop
das
add
or
ds
movsl
pop
les
int3
cs
sbb
push
xchg
inc
ds
lods
mov
andb
loope
push
aas
push
and
out
xor
dec
dec
je
sub
adc
mov
inc
movsb
in
cld
dec
push
cmpsl
dec
xor
jbe
and
inc
adc
adc
push
sub
pushf
psubusb
xlat
pop
gs
adc
cld
pop
push
sbb
xor
adc
pop
leave
and
mov
jo
daa
push
adc
nop
cmp
fldenv
mov
out
clc
and
les
jge
or
jmp
js
cmp
push
ret
lods
mov
adc
push
mov
pop
cld
jmp
test
inc
and
adc
push
and
cmpsb
xchg
adc
xchg
and
dec
xor
mov
xlat
bound
jmp
xchg
out
dec
adc
push
and
cmc
adc
xor
or
rol
lea
hlt
cmp
inc
adc
mov
call
mov
insl
les
js
in
loop
jno
adc
sbb
fcomps
mov
sub
out
add
inc
andnps
xchg
add
xor
push
sbb
add
jb
out
adc
adcb
fadds
inc
inc
cmp
in
sbb
xchg
mov
jno
popa
push
pop
repnz
inc
inc
movsl
stc
push
dec
idiv
and
push
xchg
xor
pop
xchg
pop
std
mov
in
in
repnz
lea
or
sbb
outsb
xor
je
pop
cmp
or
cmpsl
push
cmp
cmp
rol
ret
clc
jg
lea
jne
inc
and
or
addb
test
sarb
jbe
adc
fildll
test
jne
cmpb
mov
rclb
xchg
pop
test
dec
test
movsb
loopne
rcl
cmp
aam
jae
je
jl
adc
cmp
fdivs
mov
pop
sar
xchg
adc
mov
push
loopne
jnp
sub
pop
xchg
orb
inc
pop
inc
dec
push
mov
inc
loop
jbe
repz
repnz
lcall
mov
xor
out
cmpsl
fcompl
add
and
mov
cs
cld
leave
push
mov
fisttps
pop
xor
cmc
jbe
push
pop
add
xorb
push
xchg
adc
enter
cltd
pop
cld
cltd
shl
imul
pop
and
cmp
nop
xchg
rcll
mov
pop
jg
push
push
inc
push
lods
xor
sbb
bound
jmp
in
repz
lods
ds
mov
adc
sbb
mov
pop
jnp
adc
cli
dec
xlat
mov
xor
lock
je
dec
add
cmc
fwait
es
cmp
neg
ret
hlt
cmp
cltd
sub
or
mov
stos
lret
das
inc
adc
mov
mov
pop
mov
push
cltd
add
lock
push
push
push
sbb
adc
xor
mov
lods
mov
mov
orw
mov
dec
call
nop
dec
stc
sub
mov
test
arpl
xchg
and
stos
dec
mov
push
ljmp
cmp
or
jg
inc
mov
fwait
popa
add
and
mov
lods
scas
sub
push
fildl
divl
roll
test
jg
shl
in
lock
cmpsb
stc
inc
sbb
add
loop
pop
les
std
push
lods
into
dec
stc
jmp
cs
push
xchg
push
mov
icebp
mov
loope
push
sub
push
addb
pop
xchg
sub
xchg
dec
push
mov
or
or
loopne
xchg
leave
test
cmpsb
xchg
pop
das
out
or
shlb
sbb
fs
push
jno
cmp
cmp
fs
adc
cmp
and
ss
inc
xchg
cmp
rorb
je
hlt
sti
fs
lret
jmp
addb
xlat
push
adc
cli
jge
inc
in
mov
cmp
or
mov
cld
or
divb
xlat
sbb
mov
sbb
jne
cmp
sbb
in
cmp
in
ja
xorl
les
pop
mov
dec
xchg
inc
push
or
das
jecxz
leave
adc
adc
sub
inc
xor
mov
movsb
add
clc
mov
mov
jne
xor
pop
ds
and
add
sub
xor
jae
movsb
sbb
sub
pop
jecxz
cmp
cmp
xor
add
cmp
xor
and
lock
xchg
and
sbb
shlb
lahf
xor
mov
and
push
call
and
mov
cmp
mov
or
mov
mov
iret
add
sub
add
js
mov
push
xor
jae
mov
ret
sub
xor
ja
jl
in
mov
insl
int
or
cmp
ja
aas
mov
mov
imul
outsb
push
imul
lret
mov
cmpl
ljmp
add
sbb
sbb
fmuls
cmpsb
inc
jmp
test
fcoms
xor
dec
xchg
xchg
das
in
lea
cmp
loopne
icebp
pop
sbb
imul
je
cmpl
dec
enter
out
xchg
and
and
push
push
pop
dec
mov
inc
cld
outsl
sbb
movsl
jmp
mov
add
fbld
and
leave
add
fildll
or
or
fmull
and
dec
inc
adc
push
ficoml
inc
sahf
pop
les
insb
sbb
inc
xchg
cmpsb
shrb
add
jb
std
sbb
cmp
inc
add
arpl
mov
ljmp
loopne
rolb
jae
test
outsb
lea
test
inc
fldl
xor
and
xchg
push
adc
mov
pusha
push
imul
inc
push
xlat
or
push
sbb
ja
das
mov
out
pop
repnz
jmp
lret
jbe
sub
pop
mov
sub
push
or
add
pusha
inc
sbb
sub
lds
imul
mov
xchg
pusha
xor
mov
mov
addb
jle
mov
or
add
and
ljmp
lcall
mov
fstps
rclb
mov
not
or
dec
or
xor
lods
and
pop
imul
jo
or
sbb
sub
cmp
ret
push
or
push
js
pop
push
jne
pop
cltd
idiv
test
add
push
sub
jmp
popa
pop
xor
mov
dec
scas
add
cmp
jae
orb
gs
stos
mov
test
pop
sysenter
dec
out
sub
and
or
mov
in
dec
stos
push
aam
cmp
xor
sub
inc
and
and
lret
cmpsb
inc
lock
inc
hlt
clc
cmp
dec
sbb
push
leave
cld
lock
sbb
clc
or
out
in
shlb
cmc
inc
push
scas
mov
cwtl
inc
add
lea
sub
arpl
insl
pop
dec
insb
loope
cmpsl
in
pop
cmpsb
and
and
hlt
nop
xchg
fisubs
sub
popf
pushf
pop
in
rcll
movsl
sbb
adc
sub
sahf
push
sbb
adc
bound
pop
imul
dec
cmp
and
xchg
adc
into
push
pop
jmp
mov
in
aam
jae
lahf
inc
sbb
ds
ret
push
sbb
pusha
repnz
xor
ja
in
adc
scas
in
mov
imul
test
sbb
or
adc
loopne
push
pop
or
pop
cmp
and
lahf
push
pop
inc
pop
sbbb
fwait
fwait
test
sub
pop
cmpsb
test
adc
xor
xorb
in
inc
pop
xchg
notl
push
inc
sub
and
push
dec
pop
mov
sti
adc
out
dec
sbb
into
dec
mov
pop
sub
push
pop
out
loopne
or
fs
jge
leave
xor
cmp
push
adc
cmp
add
je
push
and
jl
movsl
dec
or
insb
cmp
inc
inc
lea
cmp
jne
rcrb
rcrl
dec
out
adc
nop
fs
cwtl
pop
adc
inc
in
xor
xchg
add
cmpsl
pop
jge
testl
fistpl
jno
or
and
test
dec
jecxz
and
push
mov
test
dec
imul
es
mov
dec
pop
int
adc
or
dec
test
jecxz
in
ja
sbb
mov
setb
mov
pop
dec
mov
cs
push
xchg
stos
cmp
fisttpll
int3
mov
pop
lods
imul
daa
mov
push
negb
cmpb
xchg
adc
gs
and
cs
adc
inc
mov
fcoms
ja
movsb
adc
ss
pop
data16
push
sbb
dec
xchg
and
xchg
or
imul
push
std
inc
scas
movsl
out
int3
sbb
mov
xchg
cli
mov
in
stos
mov
rorl
test
push
sub
addr16
test
mov
pushf
add
out
inc
and
xor
aaa
cmp
in
jge
je
addb
adc
and
nop
aas
sahf
fmuls
call
mov
and
sub
shlb
xor
push
dec
mov
test
or
sbb
or
inc
fldenv
jo
dec
sbb
lea
call
hlt
mov
nop
or
data16
mov
mov
pop
or
iret
pop
test
add
add
pop
call
add
lcall
push
push
out
dec
fs
mov
sbb
and
xchg
xor
inc
adc
add
xorb
lea
lods
pop
mov
leave
icebp
sbb
pop
insl
ja
lea
ret
fisubs
mov
pop
jmp
push
xor
stc
adc
cld
xchg
addr16
mov
gs
xchg
bound
xchg
icebp
xchg
or
push
aas
subl
dec
test
dec
pop
and
psubsb
popf
rolb
aad
das
pop
mov
movsl
inc
push
pop
subb
sub
lea
mov
rclb
scas
xor
sbb
call
add
clc
fldl
push
add
jb
cmpw
add
lods
adc
push
add
adc
loop
cmp
pusha
push
mov
mov
pop
les
cmpsl
dec
cwtl
mov
mov
dec
inc
arpl
add
cld
push
or
or
pushf
xor
mov
xchg
aas
pop
pop
and
ret
stos
std
scas
ucomiss
add
xor
orl
pop
call
dec
insl
cmp
sbb
mov
out
xchg
sti
sbb
sub
popf
dec
faddp
cmc
shlb
mov
mov
push
mov
loop
jmp
cli
dec
leave
push
mov
cmpsb
mov
jge
out
inc
js
test
aas
enter
push
and
mov
sub
sbb
add
lock
jg
pop
pop
mov
jmp
push
sbb
inc
les
int3
jne
mov
cmpsl
xchg
in
and
sti
push
and
cmp
test
push
and
adc
rcll
imul
mov
push
xor
test
push
adc
call
xchg
pop
adc
sub
call
adc
add
int3
cmp
or
jmp
and
cli
xchg
int3
push
je
and
mov
and
inc
sarb
and
jg
mov
cmp
sub
xchg
dec
pop
add
add
cmp
pop
inc
mov
imul
ror
pop
movsb
pop
mov
daa
lahf
jp
fs
lcall
mov
pushf
or
pop
mov
fcomp
int
jbe
test
inc
dec
xchg
inc
fcoms
ret
inc
outsl
add
push
sarb
in
outsb
sahf
mov
cld
and
cmp
in
jbe
and
push
addr16
xlat
mov
imul
gs
mov
push
movsb
inc
lcall
sub
xchg
inc
addr16
xchg
adc
ret
push
movsb
out
jno
push
adc
pop
add
cmp
movsb
push
subb
scas
xchg
mov
stos
in
xchg
sbb
and
cmp
add
inc
loop
sti
ret
mov
or
jmp
mov
dec
sub
lea
bound
xlat
dec
push
movsb
or
enter
adc
or
pop
mov
repz
push
loop
cwtl
mov
mov
jo
or
push
call
sbb
fcomip
push
les
sbb
xchg
ljmp
jne
or
xchg
mov
mov
cmp
inc
xor
pop
test
in
call
pop
mov
inc
test
es
xor
cwtl
in
fnsave
stc
addb
add
adc
adc
jne
fdivr
and
jge
jle
or
inc
cli
cwtl
mov
cmp
jb
cmpsb
xor
push
out
xchg
in
stc
adc
sbbb
xchg
sbb
and
sbb
in
xchg
jbe
jo
movsl
loop
inc
pop
test
repnz
and
scas
movsl
aad
shlb
jae
mov
inc
fbstp
cmc
lods
lods
pop
scas
xchg
adc
mov
dec
scas
dec
in
cmp
or
stc
push
sahf
leave
jmp
xor
repz
inc
xchg
dec
mov
cmpl
or
sbb
adc
mov
xlat
insl
cmp
or
leave
xlat
pop
cmp
nop
incl
sub
les
clc
or
call
daa
inc
popa
jmp
ds
inc
mov
arpl
icebp
fbstp
mul
mov
rolb
movsl
out
loopne
pusha
mov
imul
loopne
not
pop
cld
add
adc
adc
push
es
rol
inc
call
pop
ds
pop
loopne
jl
test
aas
or
pop
add
les
inc
sbb
adc
imul
pop
lods
mov
les
inc
inc
imul
xchg
mulb
in
out
add
xchg
shrl
inc
push
mov
or
cli
pop
adc
cmp
or
xchg
gs
cmp
mov
clc
filds
push
adc
cwtl
sbb
and
sbb
sbb
das
pxor
fcmovne
bound
adc
adc
mov
int3
ret
adcb
and
adc
push
jb
inc
sub
jle
inc
or
push
and
or
rcrl
pusha
add
and
loope
clc
out
mov
jmp
pop
hlt
cmp
loope
add
sub
mov
std
mov
push
movsb
adc
dec
je
cld
inc
cmp
sbb
pop
decl
sahf
adc
push
dec
addb
push
mov
adc
out
jno
xchg
xchg
sub
data16
cld
jle
out
mov
adc
and
rcll
add
negl
mov
loop
push
scas
dec
into
aas
pop
push
sub
inc
push
xchg
mov
mov
js
mov
aad
adc
fisttps
inc
push
lock
aam
enter
loope
bound
push
fildl
or
or
dec
int
add
mov
jg
bound
or
mull
sbb
sbb
mov
sbb
scas
cwtl
fdivrl
inc
pop
lcall
das
aaa
pop
mov
daa
adc
movsb
pop
sub
adc
and
out
cmp
pop
adc
ret
mov
lea
or
push
incb
mov
jle
adc
xlat
add
sti
add
cld
popa
xchg
mov
mov
adc
cmove
add
inc
push
inc
pop
xor
xchg
pop
movsb
or
inc
jnp
fwait
push
fs
and
push
aaa
lahf
pop
mov
inc
dec
popf
xorb
mov
xor
sub
insl
cltd
pop
fnsave
insl
call
dec
aam
enter
cmpb
test
mov
xor
sbb
mov
pop
mov
or
sub
sbb
push
add
lcall
add
fldt
or
inc
sub
out
sub
mov
adc
adc
sar
lock
mov
dec
or
aam
jmp
call
and
inc
sub
enter
push
dec
sbb
add
and
adc
or
mov
pop
scas
and
rorb
push
test
ret
aas
pop
adc
test
inc
aas
enter
xchg
push
add
aas
add
cmp
mov
xchg
mov
dec
dec
inc
pushf
jne
xchg
cmp
and
and
and
push
xchg
orb
dec
clc
sti
add
ds
mov
adc
arpl
fnstcw
pop
and
inc
ds
and
cwtl
cmp
cmp
jge
adc
pop
mov
inc
sbb
cmp
xchg
in
mov
cmp
jmp
fcomps
adc
jle
imul
and
mov
dec
je
in
mov
sub
add
mov
jmp
test
adc
mov
inc
mov
push
jmp
addl
scas
push
push
insb
mov
xchg
div
push
jmp
add
fcmovbe
int
sub
loopne
je
rclb
mov
cmp
push
aas
in
lock
mov
stos
cmp
mov
cmp
fstpl
dec
mov
movsb
daa
ret
sub
cmpb
jge
sbb
insb
sub
cmpsb
inc
sub
push
or
ss
xchg
push
xchg
fldenv
xorl
and
dec
pushf
shll
notb
xlat
out
enter
pop
jmp
cmpsb
enter
jne
pop
outsl
ffree
leave
jbe
cpuid
mov
pop
shrb
and
jmp
test
je
jge
scas
cmp
push
std
loope
sub
jo
push
adc
in
cmp
nop
adc
imul
mov
adc
inc
mov
push
pop
sbb
sub
xor
xor
and
mov
pop
push
pop
mov
clc
push
call
push
testb
clc
mov
rorl
mov
add
mov
add
enter
rolb
in
clc
xchg
cmp
sbbb
adc
jge
adc
mov
cmp
jl
cmp
sub
jae
jle
xchg
xchg
mov
xor
push
cli
aas
push
and
enter
mov
stos
lea
js
in
jl
push
mov
cmpb
mov
hlt
mov
inc
jg
add
mov
dec
or
in
leave
jl
inc
fs
les
xor
cmp
pop
jl
ljmp
sahf
call
mov
sbb
adc
and
cmp
adc
xor
mov
in
push
scas
pop
jp
daa
hlt
out
les
call
dec
mov
jmp
xchg
rcl
jge
rcrb
fsubs
nop
pop
pop
and
mov
pop
or
pop
cvtdq2ps
push
hlt
std
test
add
es
lock
sbb
cld
cwtl
ss
lea
decl
add
or
mov
jbe
int3
pusha
dec
dec
rorl
mov
dec
orl
mov
add
enter
lcall
ret
lea
push
sbb
sub
sbbb
cwtl
pop
mov
push
cmp
jg
or
test
jo
jecxz
sbb
sub
sbb
or
jl
das
dec
add
mov
adc
sbb
fnstenv
sub
leave
js
jp
dec
sub
fstpl
notb
jns
es
pusha
cmc
mov
adc
or
push
sbb
sub
or
jle
idivb
push
adc
cmp
add
cmp
je
js
xchg
jmp
ljmp
pop
nop
and
mov
inc
jl
xor
sbb
add
push
mov
xchg
cmpb
add
rcrb
or
add
test
repz
adc
icebp
pusha
cmp
les
sub
test
lods
stc
xor
xchg
std
jno
in
pop
gs
sti
enter
dec
lds
pushl
repz
or
shrl
jg
out
add
repz
push
ss
jmp
pusha
scas
int3
fldt
aam
call
cmp
dec
push
test
and
aas
cmpsl
pop
jge
adc
jmp
gs
inc
mov
push
dec
popf
les
lods
imul
ljmp
jne
lea
adc
push
mov
sbb
test
adc
jno
movsl
jno
jmp
push
adc
push
dec
inc
mov
dec
loope
or
sub
push
shrb
fistpll
mov
xchg
inc
cmpb
cwtl
sarl
sub
pop
push
mov
jp
out
aam
sub
push
popf
push
inc
push
or
sbb
je
adc
cwtl
xchg
and
mov
adc
sub
dec
pusha
das
mov
stos
jns
sub
jns
daa
subb
pop
and
out
push
cwtl
mov
scas
xor
push
or
pop
jno
dec
mov
scas
bound
cltd
adc
lods
and
push
lret
cmp
push
daa
in
push
pop
stos
and
xchg
and
cmp
push
fwait
addr16
xchg
sub
stc
sbb
les
sbb
pop
ret
sub
xchg
outsl
mov
call
stc
push
rol
ret
test
push
xchg
jbe
fs
mov
xchg
and
xor
jmp
xchg
jg
push
xchg
lds
stos
loop
sar
xlat
leave
leave
jno
or
mov
aad
and
inc
cli
int
adc
int3
rcll
aas
mov
sbb
sub
cs
pop
adc
es
ss
adc
inc
lds
push
xchg
movsb
bound
inc
xchg
lock
fsubrl
inc
jge
rcrb
add
sbb
mov
cltd
popf
decb
inc
cmp
or
add
out
jbe
xchg
jb
lds
mov
adc
es
cmc
xchg
pop
out
adc
jmp
rcrl
call
adc
mov
imul
incb
test
insb
cmp
sarl
lahf
adc
mov
or
pop
scas
xchg
ljmp
push
and
in
cs
or
dec
ret
insb
mov
mov
fmull
inc
inc
sub
and
scas
push
or
adc
xor
inc
sub
add
jmp
popa
lods
sbb
and
inc
adc
pop
dec
mov
push
inc
das
pop
das
cltd
cmp
adc
sub
cli
cs
jmp
adc
dec
xchg
popf
xorl
adc
fistpl
or
xchg
inc
fdivrp
adc
shl
aas
orb
push
inc
and
popa
das
jne
cmp
fsubr
mov
cmp
or
inc
repz
dec
mov
je
cmp
add
mov
sub
gs
xor
and
adc
int
das
sbb
daa
and
push
pop
adc
push
out
sub
cmp
ja
mov
ja
loope
enter
ljmp
and
or
xor
push
push
xlat
or
int3
adc
mov
mov
scas
jo
inc
movsl
sahf
mov
sbb
je
int3
scas
sbb
adc
nop
cmpsb
pushf
test
push
dec
test
adc
and
dec
jbe
inc
pop
outsl
cld
fadds
hlt
mov
ja
je
lea
stc
jge
add
mov
ret
movl
lds
push
addb
repnz
das
cli
inc
lea
movaps
les
and
cmp
adc
nop
mov
mov
fsub
xchg
dec
mov
je
adc
sub
in
mov
fisttps
popa
inc
push
push
and
dec
aaa
xchg
xorb
add
add
push
int3
or
push
or
into
sbb
xchg
daa
cmp
mov
mul
sti
jno
ds
or
xor
add
in
sub
in
cld
mov
ret
cmp
adc
cmc
test
pop
lea
inc
or
cmpsb
push
inc
cmp
subl
cld
mov
incb
nop
ret
jmp
adc
pop
aaa
sub
jmp
sbb
sbb
call
sub
shll
ss
sub
mov
pop
jbe
dec
movsb
and
enter
sub
mov
je
sub
jl
imul
inc
mov
inc
adc
stc
adc
aam
test
mov
cmc
jno
lods
sbb
mov
mov
addl
mov
cmc
jne
push
cmp
cmpsl
ss
mov
lea
or
loop
inc
sbb
and
and
adc
inc
sbb
push
push
cmpsb
push
dec
mov
in
cmp
xor
or
xchg
fildll
cmp
mov
mov
pop
and
and
sub
jle
or
push
dec
leave
mov
in
cmpsl
mov
pop
sub
push
inc
add
push
orb
mov
pop
mov
jb
pushl
xor
orl
xchg
and
ret
adc
mov
sysexit
pop
adc
mov
xchg
jne
and
dec
lock
call
mov
push
in
push
xchg
xor
cld
dec
notl
push
je
and
rolb
cmp
mov
push
scas
dec
loope
add
add
lea
cld
mov
xchg
push
push
stos
sbb
pop
lods
std
xchg
jmp
fstl
xchg
cmc
cltd
xchg
xchg
stos
mov
arpl
pop
out
lret
and
aad
mov
dec
je
dec
push
push
cmp
and
ss
test
hlt
mov
mulb
movsb
pop
fs
nop
pop
cmp
add
loope,pn
das
xchg
les
scas
lret
cmp
push
push
mov
cmp
mov
inc
or
jmp
pop
add
jge
jb
bound
lea
jle
mov
popf
mov
fldl
lea
sbb
push
adc
and
nop
dec
lret
sub
push
xchg
cmp
lods
call
and
xor
and
xchg
ficomps
dec
std
in
add
cmc
xchg
sbb
sub
je
sarb
xchg
xor
mov
add
out
sbb
pop
cmp
mov
jp
cmc
sub
add
cmpsl
jo
dec
and
push
push
mov
and
in
sbb
sub
sbb
inc
inc
adc
and
and
inc
lret
nop
pushf
rcll
stc
xchg
fistpll
and
dec
sbb
xor
fcompl
jl
das
fs
jge
call
adc
inc
push
push
push
and
sbb
imul
dec
inc
std
iret
inc
jo
and
sbb
add
ret
sbb
cmpsb
jle
pop
adc
push
xor
stos
xor
push
push
xchg
shll
xor
and
push
inc
jl
mov
adc
mov
inc
push
jmp
sbb
jne
jo
dec
xor
sub
cmp
repz
push
or
sbb
mov
push
les
mov
cmp
test
inc
sub
xchg
adc
dec
sbb
xor
push
pop
ja
shr
adc
js
outsl
fisttps
jo
dec
les
push
xchg
out
in
repnz
adc
inc
xchg
mov
dec
int3
and
xor
xchg
sub
inc
pop
push
and
inc
sbb
mov
and
lock
mov
adc
and
inc
les
jb
mov
push
popf
push
and
int3
lret
icebp
jne
push
and
nop
mov
dec
mov
test
jae
adc
repnz
xchg
or
test
inc
cmp
sbb
xchg
mov
dec
nop
insb
cmc
and
adc
pop
gs
sub
xchg
inc
fisubs
nop
mov
push
and
jmp
outsl
ds
js
loope
gs
call
ljmp
xchg
dec
fsubrl
sbb
adc
or
aad
adc
call
push
adc
popa
jg
inc
sub
out
jp
cmpsb
and
mov
cmp
cmp
mov
mov
test
and
mov
outsb
inc
mov
sub
xlat
and
sub
or
test
inc
sub
push
icebp
add
pop
adc
ret
jmp
and
and
adc
jae
sti
inc
aas
sub
or
xor
jl
push
push
push
cmp
pop
mov
sbb
les
inc
mov
mov
xlat
mov
inc
or
mov
jnp
pop
je
dec
push
add
or
xor
and
push
jne
mov
add
hlt
es
roll
leave
adc
test
mov
nop
mov
je
sub
pop
sbb
cmp
push
sbb
mov
orl
jmp
out
adc
pop
ja
loopne
mov
push
lds
daa
sub
dec
test
jne
inc
les
out
loop
pop
inc
out
xor
inc
aaa
sub
divb
gs
or
addb
sbb
pop
adc
pushf
inc
or
lea
sub
and
sahf
cmpsb
add
cmpsl
and
xor
push
sbb
add
add
in
cmp
xlat
push
outsl
pushf
inc
mov
push
pop
les
test
popf
mov
cmp
aas
inc
adc
and
or
or
call
daa
in
adc
and
movb
repz
sub
leave
pop
sub
popa
adc
jmp
jmp
aaa
out
xchg
mov
lahf
jbe
in
mov
add
sbb
ss
xor
or
into
pop
add
orl
jmp
mov
clc
stos
popf
in
leave
fs
and
sub
sub
cmp
dec
aad
xor
cmp
xor
mov
stos
mov
mov
inc
mov
dec
push
xchg
mov
inc
inc
and
aas
pop
xor
jp
sti
comiss
dec
ficomps
jno
adc
and
addr16
dec
mov
xor
cmp
add
push
shl
cwtl
and
mov
mov
push
je
mov
addb
push
sub
test
shll
pusha
jb
jmp
mov
in
dec
pop
sbb
mov
and
fldenv
mov
dec
jno
pop
popa
mov
jmp
adc
and
xchg
xchg
inc
push
or
or
mov
data16
je
push
sbb
stos
in
inc
arpl
adc
std
dec
mov
adc
jb
mov
and
sub
ljmp
cmp
cmp
ret
cmp
in
fisttpl
fsubs
pop
aam
dec
int
adc
push
mov
test
adc
sahf
mov
mov
xchg
or
jne
dec
add
inc
stos
into
je
push
sarl
rep
aad
shrl
sbb
clc
xor
test
ljmp
fnstenv
lock
sbb
cs
std
stc
adcl
lock
das
bound
pusha
jno
sbb
xchg
jne
mov
in
lock
daa
loope
icebp
jne
push
adc
push
xchg
mov
xor
es
inc
adc
cmp
or
imul
add
call
movsb
xor
mov
add
jecxz
pop
dec
push
push
and
lret
push
aad
add
sub
mov
mov
lods
push
daa
xor
pusha
push
stos
stc
add
or
dec
fildll
cmp
add
push
outsb
sbb
ljmp
mov
or
mov
mov
sbb
fmul
pop
pop
sbb
test
adc
dec
and
jg
call
fs
sbb
mov
mov
sbb
sub
popa
sbb
mov
fimuls
test
out
fwait
dec
cmp
fs
xor
into
ret
clc
filds
jle
lret
jne
test
jmp
mov
fs
outsb
test
push
or
cmp
enter
mov
cmp
test
test
mov
fdivl
push
xor
inc
push
jmp
xchg
sub
inc
clc
bound
addb
mov
ficomps
and
call
loopne
sub
push
movsb
sub
and
cwtl
push
js
xchg
call
pop
lea
rol
inc
sbb
aas
lds
rorl
mov
les
add
mov
in
add
sub
je
and
subl
lea
and
push
fisttpl
insb
add
dec
mov
call
add
xor
js
das
jmp
enter
push
ss
or
xor
push
lcall
mov
or
mov
inc
cld
mov
inc
mov
xor
clc
ret
or
mov
mov
dec
je
xor
jmp
add
jno
sbb
xchg
sbb
imul
int
fld1
popa
ljmp
dec
aam
xchg
jmp
pushf
scas
icebp
mov
pop
fldcw
cld
ja
mov
aaa
jne
push
sti
outsb
mov
inc
dec
cmp
movsb
mov
dec
dec
push
out
and
inc
push
inc
scas
test
dec
mov
pop
call
mov
imul
push
fmull
adc
xchg
lcall
test
test
add
pop
sbbl
int3
aaa
push
or
dec
pop
fistpll
adc
mov
fsubrp
iret
aad
dec
mov
or
out
call
inc
pop
cli
sub
or
dec
jmp
popa
push
sbb
das
jne
and
in
js
pop
xor
test
jno
adc
xchg
dec
cld
scas
nop
subb
lods
fs
stos
loop
insb
push
xor
mov
mov
enter
push
cmp
sbb
sub
lcall
scas
cmpsl
inc
and
lret
inc
arpl
data16
or
fs
push
out
xchg
gs
dec
push
sti
mov
aad
inc
mov
repz
xchg
push
jecxz
dec
test
jp
int3
pop
jae
stos
mov
aam
rol
in
cmp
mov
movsb
test
js
sarl
adc
adc
and
loop
or
jbe
or
popa
sti
inc
imul
pop
fdivrs
clc
gs
data16
pop
jne
lds
push
sahf
or
jmp
out
ss
nop
inc
push
and
ret
sbb
pusha
push
xor
scas
or
dec
paddb
xor
cwtl
mov
and
out
or
inc
jmp
push
shrb
and
adc
adc
jbe
inc
sbb
xchg
inc
pop
les
add
and
ret
sub
and
mov
adc
or
loopne
subb
fs
enter
pop
rcrb
xlat
xchg
loopne
movsl
xor
xchg
lods
rcll
and
push
sub
hlt
pushf
lods
and
and
sub
and
mov
jp
jbe
adc
test
lods
inc
pusha
fsubl
pop
mov
sbb
jb
mov
shll
insb
rcrb
sahf
loop
pmuludq
xor
mov
cmp
test
jnp
xchg
sbb
sub
jb
add
xor
cld
mov
popf
lea
loop
fisubrs
lcall
stos
shl
inc
mov
ret
adc
loopne
mov
into
and
call
cmp
pcmpgtw
push
lret
push
insl
adc
pop
int3
adc
add
ret
sub
insl
mov
push
sub
xor
sub
mov
dec
ss
mov
sub
enter
and
sbb
mov
pushf
pmullw
or
rorb
and
dec
sub
mov
call
cli
bound
fcomp
adc
xchg
adc
aam
jmp
dec
jno
mov
push
inc
xchg
inc
xchg
test
push
jmp
mov
xor
lea
sti
les
cmp
ret
sub
cld
sub
jmp
pop
and
xlat
sub
daa
test
sub
lods
push
inc
add
add
mov
into
repnz
pop
adc
push
mov
arpl
and
xchg
testb
daa
add
orb
adc
dec
sbb
popf
mov
or
je
mov
daa
inc
aam
fcomps
or
das
and
fs
das
jmp
xlat
cmpsb
sub
idivb
cmp
jae
outsb
hlt
mov
pop
loopne
ja
pop
or
fs
pop
cmp
sub
fldenv
fmuls
fsts
repnz
loopne
les
inc
jp
push
mov
call
xchg
dec
mov
mov
int3
xor
mov
cmpsb
lahf
or
out
xchg
adc
enter
imul
ficoms
pop
insb
mov
cld
add
xor
adc
int3
mov
aam
cwtl
adc
mov
fdivrl
loopne
or
inc
pop
adc
xor
sbb
test
ret
das
adc
fmuls
clc
shlb
js
in
push
hlt
dec
xchg
clc
cmp
and
les
xor
push
int
dec
daa
lods
adc
push
push
imul
pmaddwd
jp
pop
fisubrs
mov
push
cld
sub
ret
mov
out
cmp
jo
cmp
inc
out
testl
lret
and
les
jmp
xchg
inc
dec
xchg
cmc
ret
call
cltd
es
and
push
dec
pop
leave
adc
adc
push
push
bound
push
fimull
xlat
loope
sub
out
adc
cmpsl
jbe
xor
push
jl
jmp
adc
adc
add
and
mov
lret
shlb
or
in
push
push
push
pop
mov
shrl
or
fnsave
xchg
jb
std
fsub
dec
in
imul
cmp
ljmp
and
je
jmp
std
dec
enter
adc
or
push
inc
inc
add
loopne
mov
push
add
or
mov
jmp
mov
mov
out
xor
ljmp
or
xor
rcll
mov
adc
adc
insl
add
jb
cmp
mov
xchg
mov
adc
mov
ja
jb
addl
push
fbld
and
or
inc
xchg
inc
mov
inc
aaa
dec
xor
sub
es
bound
adc
adc
xor
or
dec
jae
mov
sbb
add
ret
adc
scas
jno
push
ljmp
xchg
notl
sub
fwait
push
adc
fcomi
and
push
pusha
push
cmp
inc
xchg
addr16
and
adc
sub
ret
jo
sub
in
cmp
pusha
or
and
or
inc
and
pop
inc
insb
xor
and
xor
push
adc
pop
sbb
lds
add
or
loopne
das
cmp
daa
std
mov
es
sbb
xor
add
adcb
aad
push
and
or
mov
ljmp
fsubrl
adc
daa
cmp
dec
sar
mov
cmp
mov
dec
popa
int
out
shlb
jo
insb
fdiv
out
xchg
adc
cmp
xlat
jmp
sbb
daa
pop
push
imull
nop
sar
cltd
xchg
xor
leave
inc
orb
adc
enter
or
inc
jge
cltd
mov
movsl
inc
imull
stos
dec
inc
das
jo
popf
fsubp
bound
mov
sbb
push
xlat
test
cwtl
stc
mov
add
and
pop
lahf
scas
pop
push
add
and
mov
inc
push
out
and
fs
xor
adc
dec
les
mov
in
mov
rorb
mov
aad
lods
and
call
cmpsl
push
or
pop
ret
mov
loopne
add
cmp
xor
cmpsb
inc
pop
push
pop
mov
arpl
sub
push
add
dec
xor
adc
fnstcw
add
je
punpckhbw
repnz
pop
out
out
ss
xchg
call
push
xlat
lret
fnstenv
pop
or
movsb
cmovns
adc
pop
or
xor
jae
mov
jb
pop
xlat
jns
inc
xor
pop
xchg
fdiv
dec
dec
mov
jle
adc
dec
xchg
jbe
xor
dec
sbb
outsl
lret
outsl
mov
mov
movsb
adc
push
add
sbb
or
stc
pop
adc
fadds
loopne
call
and
test
in
test
cmp
jbe
push
adc
lds
js
adc
jne
push
jns
fwait
int3
adc
cmp
test
sbb
cmpsl
int3
adc
xor
test
int3
adc
xor
mov
movsb
cs
add
popf
in
ds
out
mov
dec
stc
clc
pop
sbb
dec
decb
hlt
sbb
mov
gs
cli
repnz
adc
xor
das
movsb
aam
inc
sub
push
aam
int3
push
in
test
adcl
ret
rcrl
movsb
cli
or
cmp
mov
xor
cli
inc
fsts
call
or
add
call
cmp
and
push
call
into
sbb
int3
add
js
sub
je
mov
adc
test
roll
or
add
pop
jle
rolb
test
add
cwtl
or
addl
cld
pop
je
jnp
insl
and
fwait
jl
movd
pop
add
int
inc
cli
push
push
sub
ret
adc
dec
std
pop
cld
sbb
push
or
inc
pop
or
inc
sub
jnp
dec
xor
fwait
and
ds
push
ret
sub
or
push
sbb
popa
jmp
lret
fs
mov
andl
or
push
or
cmp
lret
push
testb
dec
push
pop
dec
and
push
sub
outsl
es
insb
jl
mov
cwtl
cmp
add
repz
stos
cmp
bound
add
inc
adc
jmp
mov
lahf
lcall
insb
ja
push
ljmp
adc
test
stc
out
cmc
sub
call
faddp
add
out
xor
jmp
ret
cmp
pop
adc
addr16
xchg
sub
enter
jb
idivl
pop
xchg
add
sub
cwtl
jle
add
add
sar
jmp
cmp
dec
adc
cs
je
shll
or
sub
mov
cmp
jecxz
mov
add
cwtl
imul
sub
lods
hlt
push
mov
jbe
mov
orl
xor
add
and
ss
cli
in
call
rorb
xchg
mov
pop
or
push
push
notb
mov
jmp
cmp
pop
loopne
xchg
ret
sub
sub
xor
insl
mov
mov
jno
jne
inc
mov
xor
sub
cld
dec
cmp
and
push
and
push
add
lods
jp
imul
jp
lret
xchg
addl
add
bswap
out
xchg
mov
rcrl
adc
jp
inc
pop
dec
push
andl
and
sub
adc
jge
and
cmp
add
cmpl
and
adc
mov
pusha
mov
pop
setb
sub
or
or
adc
jbe
dec
push
insb
sub
adc
pop
aad
lds
cld
xor
call
fcoms
or
lret
xorl
inc
and
add
daa
cld
mov
call
pop
xor
inc
lret
and
ret
mov
inc
invd
cmp
insl
cmp
adcb
adc
inc
test
inc
push
mov
ret
inc
sbb
pop
and
lret
mov
xchg
scas
and
ds
adc
and
imul
sbbl
push
jp
jne
movsl
push
mov
or
call
or
push
push
fistpl
shr
cmpsb
push
ret
mov
stos
ficoml
jmp
or
pop
pop
and
call
push
cmp
push
adc
cmpsb
jne
faddp
cltd
loope
mov
aaa
les
aas
lcall
xchg
dec
int
adcl
lock
enter
aad
es
loope
movsb
push
adc
jmp
jp
imul
je
test
je
mov
sti
add
jb
neg
out
loope
add
sub
mov
add
jne
mov
pop
push
movsb
dec
movups
or
add
rep
ja
dec
dec
mov
jg
ret
or
imul
cmc
ja
call
mov
test
xchg
rcll
mov
js
xchg
inc
loopne
stos
inc
mov
add
mov
and
dec
dec
inc
adc
sbb
imul
js
aas
lea
mov
adc
mov
mov
cmp
push
jecxz
dec
pop
jo
cmp
lock
push
mov
orb
or
or
and
lret
xor
shrb
mov
mov
fsubr
arpl
mov
inc
adc
add
or
inc
or
dec
mov
pop
sub
xor
iret
cmp
ret
or
neg
ja
push
xor
fs
mov
push
jmp
and
mov
pop
pop
mov
push
mov
js
mov
shll
add
shl
lea
xchg
sbb
in
push
sbb
fcoms
push
push
jle
sbb
shl
add
out
add
sbb
shll
cmp
fiaddl
push
and
push
dec
pop
rcll
es
jne
xorb
inc
popf
pop
sub
dec
pop
in
mov
imul
jp
jnp
pop
flds
adc
adc
mov
popa
test
jmp
adc
je
xchg
iret
sub
xchg
pop
sbbb
orl
or
dec
jne
rep
xor
dec
pop
xchg
test
cmp
xor
jne
cmp
xor
pop
cli
push
es
mov
mov
repnz
adc
loope
cmp
sbb
or
ret
push
or
mov
jne
je
push
sbb
adc
add
shrb
or
or
pusha
adc
push
test
or
sbb
cs
push
sbb
and
and
mov
nop
sub
outsl
jl
xchg
aaa
ret
call
inc
and
push
pop
shl
inc
jge
xchg
mov
mov
arpl
jmp
sub
inc
test
push
shlb
lret
xor
xchg
add
mov
mov
sahf
ret
push
lods
adc
call
or
cmp
mov
gs
std
push
adc
or
mov
and
cmp
jne
xor
xchg
lds
sbb
or
add
mov
sbb
mov
inc
outsl
xor
jno
cld
cmp
jb
in
pusha
cwtl
sub
mov
in
adc
push
inc
sub
sub
cmp
inc
xor
sbb
or
xchg
sbb
cmp
ljmp
sbb
jp
mov
std
inc
jg
or
scas
fmul
pop
and
xor
dec
mov
leave
mov
jno
add
xor
cmp
cmc
adc
push
mov
cmc
pop
and
pop
cmpsl
mov
jge
add
cld
enter
jns
xor
sbb
mov
mov
subb
jmp
lea
sbb
movsb
or
mull
call
cmp
pop
jb
and
sbb
incb
cmp
data16
loop
pop
or
dec
dec
int3
add
lret
xchg
mov
aaa
sbb
add
testb
rorb
sbb
pop
sbb
or
jne
or
into
push
push
lea
or
jge
sub
insb
test
jae
xlat
sub
in
pop
sub
cmp
sbb
adc
mov
loop
pop
jge
push
mov
test
cwtl
and
cmp
jb
mov
and
popa
adc
jg
loop
xor
popa
inc
sub
clc
pop
xor
dec
mov
call
inc
loope
and
push
pop
enter
pop
sub
xor
lock
cmp
mov
add
cmp
inc
jb
sub
add
jae
sub
aaa
mov
sbb
push
add
add
mov
jle
idiv
pop
jg
or
incl
and
dec
sub
in
push
dec
push
add
xlat
test
or
jb
lcall
insb
xchg
clc
enter
jne
andb
jp
jne
cmpb
or
icebp
xor
jae
inc
add
lret
mul
jb
inc
pop
jge
xlat
add
orb
inc
bound
ret
test
inc
mov
bound
add
rolb
push
lods
out
adc
add
xor
push
jb
cmp
mov
scas
xor
test
jp
push
pop
jge
les
je
in
jo
loope
xor
cmp
decb
or
pop
cwtl
adc
cmp
push
jne
push
ljmp
lods
pop
pop
add
inc
enter
sbb
mov
and
xor
ds
push
xchg
pop
mov
inc
loop
xchg
push
push
inc
adc
enter
ret
clc
sti
and
dec
aaa
aaa
cmp
inc
iret
sub
mov
jmp
adc
add
imul
xor
mov
cmp
jmp
negl
test
roll
fldcw
orb
sub
mov
popf
adc
inc
ds
std
jo
fdivs
xorb
fnstenv
sub
inc
inc
jbe
test
add
add
and
pop
loope
jmp
cwtl
mov
pusha
neg
sbb
add
mov
int
add
popa
nop
loopne
clc
xor
fcom
pop
stos
pop
add
cmp
xchg
push
add
mov
jle
imul
pop
inc
jecxz
xchg
std
repnz
mov
xchg
xchg
adc
stc
xchg
jae
das
inc
mov
stos
test
inc
mov
stc
hlt
lods
loopne
push
inc
mov
lret
movl
jne
jp
mov
inc
mov
popf
std
adcb
pop
je
popa
add
pop
leave
or
sub
push
and
outsl
fnstenv
testl
fcompl
add
cmpsb
mov
mov
cmp
ja
add
dec
adc
rorl
inc
imul
push
movsb
movsl
in
xchg
xchg
cli
push
das
bound
xor
or
dec
enter
mov
jno
sarb
iret
or
call
or
pusha
sbb
mov
mov
pop
inc
arpl
les
adc
pop
insb
loope
popa
xor
add
cmp
xlat
shll
pop
data16
or
inc
add
or
or
xlat
out
jl
fs
data16
jne
push
jo
je
mov
or
roll
add
or
subb
push
adc
hlt
nop
outsl
lret
add
in
adc
icebp
ljmp
loopne
and
push
and
stc
or
out
lea
inc
and
and
cmp
push
cmp
sahf
js
daa
adc
xchg
jmp
pop
mov
pop
and
adc
mov
inc
shrb
bound
push
shll
push
push
mov
xchg
mov
pop
inc
or
mov
sbb
xchg
jne
dec
add
or
cmc
lret
mov
lds
mov
sbb
push
fadd
and
xor
xchg
dec
push
add
lret
cmpsb
rorb
add
movq
xchg
jmp
inc
sarb
rorb
mul
mov
jmp
mov
lcall
xor
and
push
and
add
jb
mov
jb
stc
or
sub
inc
xchg
test
jmp
mov
cs
loop
loopne
push
xor
ret
sti
add
push
lea
cmp
rcrb
test
and
mov
xchg
frstor
adc
int3
sub
push
dec
sub
es
mov
popa
adc
inc
xchg
inc
inc
sbb
mov
lahf
pcmpgtb
je
insb
inc
fs
mov
rorl
jmp
and
jmp
and
jmp
lea
adc
dec
call
sub
sbb
or
adc
sub
lods
push
xchg
nop
sahf
nop
or
fs
xor
push
movsb
push
mov
or
lea
sarb
and
cmp
icebp
inc
add
test
push
mov
push
nop
mov
les
and
xor
adc
sbb
mov
cmp
gs
mov
or
jnp
cwtl
and
mov
push
out
xchg
jle
mov
mov
xchg
sub
dec
lods
loop
lret
scas
inc
inc
pop
ljmp
jle
int3
pop
or
adc
sbb
and
aaa
push
push
inc
sbb
and
pop
and
shlb
pop
and
shlb
pop
and
repnz
push
cltd
or
jl
mov
mov
adc
mov
xchg
xchg
mov
dec
push
jno
mov
and
and
mov
popa
dec
test
pop
movsl
dec
js
push
pop
repnz
or
nop
xchg
adc
call
pcmpeqw
inc
dec
fistpl
cmp
pop
inc
adc
push
push
jns
cmp
dec
pop
cmp
jnp
jecxz
sbb
outsl
loopne
adc
sub
je
jle
cmp
mov
inc
cmc
neg
cs
mov
or
loopne
sbb
ljmp
les
cmp
jne
enter
out
loopne
push
adc
loop
push
cmp
repz
popa
cmpw
xchg
or
daa
adc
jle
and
lret
xor
inc
cmc
cmp
rolb
xor
cmp
cmpsl
popa
push
bound
and
sbb
dec
jmp
push
lahf
int3
and
ds
mov
ljmp
fbld
sbb
inc
cmp
cs
out
test
mov
or
loopne
xor
pop
mov
inc
idiv
addr16
xor
sbb
xchg
adc
pop
or
add
jmp
shl
lds
test
inc
movsl
add
pop
mov
dec
xlat
out
push
repnz
mov
pop
out
and
clc
dec
adc
mov
add
mov
push
pop
adc
mov
mov
push
cmp
jge
sti
adc
sbb
cli
call
mov
push
or
and
adc
cmp
lock
sbb
mov
and
mov
or
add
shl
rclb
push
test
addb
add
sbb
test
dec
push
sub
lock
xor
shlb
or
bound
and
stc
cwtl
push
jl
nop
sbbl
cmpb
sbb
aas
dec
push
div
scas
daa
jbe
and
inc
pop
call
fldl
push
mov
and
jg
cmp
jne
call
scas
jle
sub
shll
ss
push
mov
push
call
cmpsb
jo
add
pop
int3
bound
fsubl
test
rcrb
xor
mov
rclb
pop
clc
sub
fdivl
sahf
jne
addl
test
jne
inc
sbb
xlat
lods
add
not
cmp
mov
outsl
mov
push
adc
inc
mov
movl
insb
lock
clc
mov
push
adc
cld
adc
mov
ret
jb
shlb
jmp
int3
lahf
fcomps
cld
fsubrl
fistpll
or
es
push
clc
leave
mov
call
or
push
hlt
or
stc
dec
jo
push
test
or
inc
dec
mov
push
or
push
mov
cwtl
jbe
push
lock
push
mov
stc
arpl
inc
or
loopne
and
or
pop
pop
xchg
mov
test
mov
mov
pop
fwait
mov
xchg
dec
cltd
nop
inc
std
loope
sahf
rolb
xor
push
jae
pop
enter
mov
sbb
pop
mov
dec
mov
addr16
test
push
gs
mov
cmp
shlb
or
inc
mov
inc
in
scas
or
jmp
loope
mov
call
add
xor
cld
pop
movsl
stos
or
or
mov
push
push
scas
repnz
xchg
mov
sbb
and
inc
sbb
andb
stos
mov
cwtl
cld
pop
lock
mov
sahf
mov
inc
and
add
aam
adc
jns
push
and
xor
clc
test
leave
xchg
int3
jne
aas
adc
sub
push
aaa
jmp
pop
jmp
clc
mov
adc
xchg
mov
xor
dec
or
add
adc
push
adc
add
xchg
push
mov
arpl
xorl
into
in
push
xor
addr16
imul
data16
movsl
lret
out
ja
inc
pop
lcall
jl
cmp
js
call
add
dec
lea
cmp
out
pop
add
jle
pop
or
testb
imul
insl
lret
lds
inc
xor
jb
cmp
ja
add
lock
mov
test
call
or
and
pop
and
mov
add
notl
mov
stos
xchg
add
jb
add
fbld
rcll
push
sbb
sub
lcall
sbb
test
cmp
add
lea
mov
mov
mov
xor
jl
add
and
push
out
arpl
call
jmp
popl
stos
loop
push
or
add
push
jb
mov
fidivrl
inc
sbb
shll
or
and
xor
dec
imul
pop
ret
lock
dec
push
popf
out
xchg
lret
or
mov
mov
pop
enter
call
xor
lock
sbb
inc
in
repnz
enter
enter
xor
xor
lods
or
mov
test
js
scas
enter
icebp
loopne
or
loopne
mov
adc
cmc
out
xor
pusha
adc
js
fs
or
push
lcall
pusha
adc
pop
int3
adc
sbb
or
sub
xor
cmp
mov
loop
mov
or
inc
pushf
js
scas
xchg
mov
dec
into
adc
in
stc
jle
push
mov
cmp
jns
jmp
pop
fisubs
mov
aam
cmp
pop
jae
push
call
rclb
lds
stos
fs
adc
das
mov
aam
sub
add
inc
insb
js
out
addl
mov
or
dec
ret
pop
xchg
inc
call
cwtl
pop
add
push
call
mov
and
mov
jmp
push
pop
divb
cmp
push
je
pop
adc
fs
fiaddl
xor
sub
xchg
sub
popa
fldenv
mov
call
cmp
dec
mov
inc
inc
mov
jb
in
xor
pop
or
bound
push
loope
push
int
inc
loopne
jp
pop
mov
mov
inc
scas
cmpsb
cmc
or
psubw
cmp
daa
lea
or
dec
push
sbb
adc
testb
add
jmp
stc
ficoms
mov
and
scas
scas
lods
dec
or
fildl
pop
jmp
ja
imul
adc
je
dec
outsb
xchg
xchg
push
jle
cs
loopne
popa
push
ja
fcmovne
dec
loop
adc
clc
mov
add
cs
jne
jmp
mov
and
mov
aas
inc
mov
push
mov
into
sbb
in
pop
or
mov
inc
add
call
aas
xor
push
jmp
mov
test
mov
sub
add
add
mov
add
push
xchg
pop
adc
loop
jmp
mov
lea
mov
xor
sub
sar
dec
pop
mov
pop
daa
aam
xchg
outsl
stos
push
pusha
loopne
or
shll
add
and
xor
mov
push
add
xchg
push
pop
xor
adc
and
aaa
insl
les
cld
adc
aas
adc
les
sbb
inc
sbb
and
shr
push
or
dec
mov
jmp
mov
push
fsts
sub
xchg
mov
sub
scas
sbb
or
or
add
loope
ret
push
or
fcomps
push
cltd
mov
lock
aaa
jl
repnz
les
add
adc
fists
mov
cmp
dec
or
dec
loope
jns
je
cld
fadd
and
mov
dec
add
ss
into
xlat
cmp
mov
inc
xchg
ficoml
or
pop
ss
pop
sbb
jns
and
sti
sub
mov
and
or
or
fsubs
ds
movsbl
sub
cs
movsl
mov
mov
jg
test
add
pop
mov
sahf
xchg
cld
int
sub
test
or
push
sbb
sbb
xor
adc
icebp
inc
cmp
adc
jmp
insb
lock
or
shr
dec
fisttpl
andb
repz
lock
mov
enter
add
add
jb
cmp
pop
sbb
add
lcall
inc
push
inc
sub
push
push
outsl
push
popf
data16
sbb
jmp
outsl
inc
adc
or
and
xor
or
cltd
insb
or
mov
mov
adc
adc
mov
dec
adc
out
mov
or
adcb
fwait
dec
cmp
outsb
mov
xchg
in
sbb
les
cmp
xchg
daa
icebp
adc
inc
adc
push
es
sbb
jmp
fnstcw
xor
sbb
sbb
and
adc
dec
mov
pop
pop
fwait
cmpsb
xchg
mov
fcomi
lea
pop
cld
jne
repnz
sarb
sbb
push
add
jp
add
jo
add
jne
jmp
incb
push
add
mov
dec
mov
push
add
and
loopne
add
mov
push
jne
push
outsb
mov
sbb
pop
in
mov
push
iret
fcoms
icebp
outsl
sbb
enter
ss
pop
fadds
push
and
xchg
xchg
cmpsl
inc
and
sub
or
and
dec
lret
dec
mov
rcll
mov
leave
mov
jmp
or
mov
cmp
pop
jge
sub
xor
popa
fiaddl
jle
mov
stc
ret
jmp
pop
das
mov
sar
ret
pop
xor
repz
mov
mov
pop
jmp
push
fildl
push
dec
push
cmp
daa
add
jmp
adc
push
mov
push
cmpsb
mov
or
pop
mov
jecxz
adc
pop
push
push
push
mov
or
arpl
xchg
mov
jnp
xor
mov
hlt
hlt
mov
push
outsl
incl
or
bound
add
push
in
or
cmp
mov
loope
inc
jp
cmp
sbb
mov
les
cmp
dec
push
stos
cmpsl
mov
sub
inc
add
std
inc
into
movsb
lahf
lret
int
push
call
pushf
mul
sarb
jmp
or
cmp
pushf
push
sbb
xor
inc
cmp
inc
insb
inc
mov
push
notb
add
push
push
call
inc
enter
push
aas
mov
inc
mov
sbb
pop
and
mov
test
sub
pop
es
cmp
pop
jae
jb
test
jge
inc
jb
nop
lds
xor
test
add
push
push
xlat
call
mov
pop
cmp
inc
sbb
icebp
pop
lret
pushl
adc
pop
call
cmp
pop
fildl
pop
andb
in
je
push
call
jmp
rcrb
dec
and
test
or
pop
pop
lea
sub
leave
sbb
mov
aam
pushf
subw
push
and
adc
add
sub
int
ret
in
ret
fwait
add
inc
or
add
adc
inc
sbb
and
movsb
frstpm(287
jl
add
incl
call
inc
repz
cmpb
sub
rorb
cmp
jge
inc
jne
stos
push
dec
cltd
and
fsubl
xlat
pop
inc
lret
jp
push
data16
cltd
cli
in
imul
ljmp
lea
jle
mov
add
negb
mov
xor
lds
dec
push
stos
leave
cmovs
adc
jmp
push
jo
jne
inc
add
ss
jne
or
inc
cmp
jl
pop
cmp
je
repnz
push
cmp
andl
jb
xor
dec
pop
loopne
dec
dec
cmp
sub
add
mov
sbb
sbb
or
fldcw
push
ret
jl
adc
ror
sbb
js
sbb
enter
add
pop
jmp
in
add
jo
mov
les
mov
je
cmp
popf
push
jle
in
cmp
jl
mov
lds
add
and
jne
movsb
inc
xor
jle
and
sahf
loope
xchg
lret
inc
jmp
sub
lret
sub
push
adc
add
push
xchg
inc
cmpb
fcoml
mov
adc
sbb
loop
sbb
icebp
xor
divb
push
aas
cmpb
rorl
mov
jmp
mov
push
adc
dec
fimuls
sbb
sbb
rcl
ljmp
jge
push
pop
popa
inc
or
push
push
jb
aam
dec
in
das
mov
inc
mov
mov
call
std
mov
jne
or
and
sbb
jne
rcrl
xchg
add
dec
inc
pop
shrl
stos
adc
fnsave
pop
add
ret
inc
xor
pop
push
cmp
lea
xor
popa
jmp
xor
or
mov
and
push
or
inc
addl
loope
cli
ret
es
jb
add
adc
call
xchg
loope
cmp
shlb
orl
cld
sub
shr
clc
iret
imul
lea
add
mov
dec
pop
or
test
jg
cs
push
cmp
mov
sub
clc
adc
test
pop
or
add
cli
add
andl
pop
pop
mov
cmp
or
and
and
mov
lret
lea
dec
add
loopne
pop
mov
jne
cmpb
cld
lea
dec
loopne
mov
sbb
push
or
add
cld
xchg
jmp
push
shlb
mov
cs
or
xchg
stc
adc
sub
pop
ja
test
xchg
hlt
mov
jne
and
ss
add
cmp
jbe
push
shll
sub
mov
and
arpl
inc
adc
mov
sti
or
pusha
lret
shr
notl
add
jne
nop
lcall
loopne
mov
push
pop
xchg
pop
lcall
int3
pop
loopne
and
iret
inc
pop
clc
outsl
cmp
jnp
movsl
ljmp
roll
mov
mov
pop
jo
mov
or
or
jne
mov
and
mov
inc
xlat
adc
jae
push
test
orb
pusha
mov
or
and
inc
scas
aas
mov
dec
adc
adc
push
and
cwtl
mov
into
push
enter
mov
lock
fldl
mov
faddl
in
xor
shl
add
fisubs
lods
inc
push
push
call
movsb
and
push
push
or
or
movsb
push
and
sub
or
cmp
or
andl
adc
push
mov
lahf
test
pop
adc
outsb
fwait
jbe
test
jae
hlt
add
rcrl
jge
sub
mov
push
ljmp
push
sub
and
or
das
int
mov
cmp
pop
push
dec
jb
fs
xor
int
sahf
rolb
pop
and
mov
xadd
add
pop
add
les
xor
in
xchg
dec
in
divb
ret
push
add
and
mov
pop
out
sbb
iret
jne
add
scas
cmp
xor
adc
mov
push
fsubs
adc
jmp
xor
pop
pop
dec
jae
mov
sub
es
or
out
push
push
call
test
je
push
in
ficompl
pop
iret
mov
inc
test
enter
mov
repnz
or
cld
jge
and
nop
mov
out
jl
inc
mov
notb
push
inc
fidivrs
mov
ds
cmpsb
or
aaa
sbb
pop
push
xchg
test
inc
xor
pop
js
cmp
xlat
je
lea
jmp
orl
mov
jne
arpl
add
pop
test
jl
shl
or
jmp
mov
stc
mov
sub
pop
icebp
cmpsb
pop
pop
decb
addl
enter
or
and
add
jmp
test
mov
push
iret
and
in
loop
cmp
hlt
pop
in
and
jl
push
pcmpeqw
in
add
and
jmp
lret
adc
and
push
outsl
mov
xchg
jp
frstor
adc
sbb
adc
jne
sahf
test
mov
push
gs
sbb
or
jb
fs
add
and
jge
popa
ret
filds
mov
out
or
scas
or
scas
jmp
xchg
sub
or
mov
jnp
pop
sub
mov
clc
cs
aaa
mov
sub
cld
movsl
xor
cltd
jne
fst
xchg
inc
add
adc
cld
pop
mov
jns
and
rcrb
in
sahf
sbb
cltd
fisttpll
jo
and
inc
add
or
add
sbb
sbbb
lret
insl
sbb
pop
mov
fwait
rorb
or
dec
pushw
mov
and
cmp
xor
int
test
inc
adc
lret
pusha
lods
mov
mov
or
pop
loope
push
imul
jge
and
flds
andl
leave
in
mov
aas
push
cmpsb
jno
push
inc
dec
xor
mov
and
inc
and
ret
cmp
enter
stc
dec
xor
or
mov
and
sti
mov
fstpl
or
adc
mov
test
xchg
inc
lea
cmp
ja
dec
inc
lock
mov
call
cmc
mov
movl
push
out
clc
dec
push
dec
add
sub
adcl
or
test
outsb
pop
dec
je
or
fimull
nop
push
fs
inc
xchg
xchg
in
mov
xor
rorl
je
mov
jne
or
mov
not
and
bnd
mov
std
push
adc
aaa
mov
xlat
lea
daa
sub
ljmp
adc
cld
dec
cmp
cmp
in
cwtl
pop
cmp
ret
jmp
test
adc
fnstcw
repz
sbb
mov
and
pop
mov
mov
in
xor
and
mov
pusha
clc
lea
repnz
nop
and
xor
sbb
les
fldenv
pop
jg
cwtl
xor
sub
movsb
js
pop
stos
mov
add
or
incl
aaa
mov
xor
hlt
sbb
sti
add
pop
lods
inc
adc
sbb
or
bound
push
jne
rorl
dec
repnz
push
loope
iret
je
out
mov
and
xor
insl
cs
push
or
popf
push
inc
xor
or
xchg
jns
cld
inc
fsubs
sub
jmp
neg
inc
jge
fildll
cmpsb
mov
cwtl
dec
outsb
pop
xor
pop
jmp
cwtl
fcomps
cwtl
sub
sahf
movsl
xor
cmp
jne,pn
test
xchg
insb
inc
into
je
push
jp
push
shrl
cmp
xchg
ja
push
out
jp
ja
jno
or
aaa
add
popf
or
jbe
out
loop
add
sbb
xchg
jno
dec
sti
pop
pop
out
mov
scas
push
bound
sbb
dec
cmp
into
adc
or
shlb
and
bound
maxps
mov
inc
dec
sbb
mov
inc
xor
xchg
sub
add
mov
sbb
pop
popf
jb
adc
test
jae
shll
sub
fistps
and
push
add
push
push
xor
add
or
in
or
and
lahf
sbb
or
mov
jmp
and
lea
cwtl
addr16
xor
sti
push
daa
pop
dec
jmp
jle
stc
jo
in
aaa
mov
cmp
setge
ret
shll
mov
pop
dec
xchg
test
jl
das
incb
or
add
add
cmp
jae
sbb
jbe
inc
addl
lock
fdivr
popa
daa
jae
push
adc
lods
mov
cli
inc
mov
pop
sbb
loop
adc
cmp
testl
insb
push
xchg
mov
xor
push
or
lock
mov
lods
mov
push
push
sub
lahf
jae
daa
daa
xor
or
nop
mov
mov
inc
add
jp
push
test
jne
adc
inc
stc
or
lcall
xchg
mov
mov
pop
xor
jge
mov
pop
jbe
je
mov
stos
ret
pusha
daa
lea
and
out
inc
inc
push
inc
cli
sub
or
adc
in
pop
push
cmp
or
ja
sbb
dec
testb
lret
sbb
jbe
or
popf
psubusw
out
test
es
push
adc
out
add
cmp
jb
xchg
mov
or
and
push
mov
aas
mov
pusha
into
inc
or
das
adc
push
sub
pop
stc
or
pop
enter
movzbl
add
adc
adc
movl
sub
add
push
dec
and
into
adc
sub
in
and
mov
push
sbb
jle
xor
bound
adc
sub
arpl
idivb
ret
stc
add
jae
mov
cmp
jl
lret
jl
cmp
jbe
pop
push
add
ja
sbb
or
push
movl
jb
mov
dec
test
jle
out
xor
xor
sbb
adc
in
sub
push
cltd
es
subl
jb
inc
pop
sub
inc
dec
insb
mov
sub
and
or
jmp
cld
mov
push
or
or
push
xlat
pop
jmp
pop
pop
out
dec
jmp
not
out
test
decb
out
ja
add
adc
and
divl
shll
push
jnp
xor
jnp
add
jne
cs
and
cld
movsb
mov
jle
es
hlt
mov
fwait
push
sbb
xor
adc
inc
popf
stos
push
lea
jne
mov
lds
aaa
or
enter
cmp
add
sbb
shlb
or
lret
fcompl
pop
mov
xchg
outsb
xorl
loop
and
pop
xor
sbb
fidivl
pop
rcll
push
sbb
sbb
shrl
inc
mov
orb
lea
das
or
and
movsb
cmpsb
add
add
sub
popa
lods
in
mov
mov
call
pop
add
cmpb
jbe
add
lea
cmp
add
mov
test
jne
mov
jae
sbb
cmpb
addl
jmp
pop
movsb
jae
adc
jmp
add
mov
cmp
mov
cltd
pushf
pop
ret
jmp
inc
mov
jne
call
sbb
jae
notb
mov
mov
test
xor
pop
lcall
sbb
mov
lods
sbb
stos
adc
repz
mov
xchg
ret
daa
add
jae
sub
imul
ret
rolb
mov
adc
sub
inc
mov
inc
mov
mov
mov
dec
jecxz
xchg
push
sti
mov
inc
orb
or
add
jl
sbb
add
enter
pminsw
loope
jmp
jae
sub
roll
lcall
push
shll
adc
jae
jp
dec
mov
faddl
flds
mov
fcom
ja
xchg
shrl
dec
sub
jae
into
decb
inc
cmpb
movsb
stos
inc
arpl
add
sub
shll
dec
shll
xor
sub
das
cmovo
loopne
or
and
movsbl
sub
cmp
dec
dec
or
jl
cltd
mov
pushl
sbb
adc
and
mov
jbe
insb
leave
sbb
jno
cld
test
xorb
rclb
cmp
adc
pop
rcrl
loope
push
cmp
mov
out
iret
ret
rcrb
aas
add
and
fwait
stc
cmp
push
ss
out
jb
cmpl
dec
stc
pusha
pop
addb
push
dec
sar
cmp
pop
fnstsw
aam
mov
aaa
cs
jne
decl
xor
test
movsl
sub
mov
dec
test
or
mov
jne
sbb
xor
jne
bound
mul
mov
aam
adc
dec
xor
dec
add
inc
xor
mov
cs
xor
cli
stc
cmp
leave
push
pop
mov
movsb
push
mov
jno,pt
dec
insl
mov
xor
pop
notb
sub
mov
xchg
hlt
jbe
mov
enter
push
icebp
fisubs
fdivs
call
add
and
mov
out
jae
and
lret
inc
out
lret
loope
and
daa
cmp
fstl
or
inc
call
dec
mov
xlat
inc
lods
movsl
imul
jmp
movb
inc
jns
push
jae
insl
pop
adc
ret
aad
rorl
sbb
je
inc
mov
dec
mov
inc
pop
push
and
add
inc
xor
cmovs
subb
xor
xlat
sub
negl
jb
xor
rclb
loop
mov
pop
je
hlt
push
bound
ret
sub
mov
iret
in
xchg
movsb
ds
pop
dec
mov
and
shr
xchg
ret
stc
sti
cmp
lret
sub
les
dec
dec
lds
or
popa
je
shll
push
call
popf
mov
test
jle
insb
or
adc
ret
nop
pop
mov
and
ret
pop
cmp
rcll
fldt
fbld
popf
jle
into
call
sbb
orl
lcall
xor
fdivrl
or
and
mov
xchg
mov
call
scas
movsb
cwtl
adc
outsl
jae
sub
ret
stos
cld
jnp
sbb
adcb
jne
or
jmp
call
int
sahf
adc
sbb
or
inc
popa
and
int
jmp
fists
je
loopne
mov
xor
pop
adc
into
inc
add
and
test
mov
push
int3
mov
jo
jle
pop
cmp
jge
int
sbb
inc
jo
jo
cltd
pop
add
sbb
clc
dec
adc
push
pop
add
xor
mov
jle
pop
mov
aas
jb
inc
ret
inc
outsl
xchg
ret
jmp
aas
mov
mov
and
out
call
sbb
lret
vmwrite
cmpl
mov
in
cmc
stos
lock
outsb
outsb
in
jnp
mov
gs
call
mov
adc
out
fadds
sub
mov
adc
mov
pop
incb
fstpt
cmp
and
jo
icebp
push
and
xlat
je
xchg
adc
push
and
js
jl
mov
mov
add
pop
fs
jmp
adc
jbe
add
std
sbb
jl
xchg
pop
imul
nop
and
xchg
ss
mov
outsb
mov
rolb
idivb
adc
je
incl
xor
mov
sti
push
sarl
pop
push
sub
pop
je
in
cmp
cmp
xchg
das
cmp
and
aam
scas
idivl
daa
dec
pop
sahf
imul
pop
inc
add
insl
and
xchg
push
inc
dec
lock
aam
aas
xor
adc
push
in
sbb
mov
xor
adc
js
pop
push
mov
mov
fdivl
movsb
pop
shrb
push
pop
mov
sbb
xchg
mov
fcom
fs
push
fmuls
loopne
in
cld
sbb
jmp
mov
in
into
or
test
push
or
jmp
shll
push
dec
or
inc
mov
inc
addb
add
sub
sti
sub
aas
call
ds
ds
popf
pop
jmp
mov
roll
jmp
in
add
inc
mov
lock
add
lret
push
cmp
push
mov
xlat
or
inc
mov
mov
mov
repnz
orb
ss
mov
push
inc
jnp
xchg
js
jmp
rcrb
sbb
test
adc
mov
cli
and
push
in
inc
inc
imul
mov
addr16
aaa
sbb
sub
adc
pop
and
clc
test
js
sbb
inc
jecxz
push
outsb
jo
or
cld
test
add
xor
out
sarl
in
int
pop
adcb
daa
and
rcrb
add
or
cmp
lahf
jecxz
nop
dec
test
aam
call
adc
out
or
ret
and
xchg
push
into
or
lret
add
iret
pop
ds
mov
shl
pop
mov
inc
xchg
adc
stos
addr16
loop
into
add
mov
jge
sbb
pop
jmp
inc
aam
je
cmp
or
inc
jmp
fadds
mov
mov
dec
jle
pop
jmp
bound
xor
fsubrl
inc
inc
adc
shr
mov
adcb
sbb
mov
ret
sub
es
cmp
mov
pushf
push
movsl
sub
or
pop
scas
cmpsb
mov
push
push
int3
ret
xchg
lock
arpl
and
mov
jg
fs
sar
ds
loopne
ficoml
je
ljmp
insb
inc
cld
mov
pop
adc
hlt
aam
ret
or
ljmp
call
pop
fisttpll
test
imul
daa
mov
push
sbbl
xor
leave
shrb
adc
daa
adc
cmp
push
decb
scas
imull
mov
icebp
dec
jmp
test
dec
ds
cmpsl
inc
push
cmpb
ret
je
mov
sub
add
mov
mov
dec
and
or
inc
ret
add
xor
add
dec
and
and
mov
ss
adc
scas
notb
jmp
inc
sub
push
pusha
sub
popa
in
xor
je,pt
xchg
or
call
mov
clc
mov
mov
daa
cmp
test
add
in
pop
jl
jecxz
jae
clc
push
stc
cmp
push
cli
jmp
mov
or
js
int
out
mov
rorb
jbe
cmp
or
jne
adc
stos
mov
mov
out
shlb
cltd
push
push
push
xchg
mov
push
inc
ds
cmp
xor
adc
xor
lret
cli
sti
push
cmp
jno
xor
clc
jae
or
sbb
mov
sub
sbb
and
add
cmpsb
test
lock
adcb
or
inc
and
movb
aaa
add
test
cld
test
shll
stos
pop
mov
xchg
or
inc
or
testb
and
add
out
xor
hlt
xor
adc
test
push
push
call
pop
fldenv
push
testb
push
pop
lcall
xor
jo
xchg
dec
aas
jle
dec
popl
clc
lea
inc
fiadds
inc
into
xchg
enter
push
inc
stc
jne
xor
adc
enter
dec
test
shr
push
adc
jg
mov
add
pop
cmpsb
sub
mov
data16
aam
add
cmp
aaa
cld
jecxz
or
and
dec
lods
xchg
mov
ljmp
decl
add
push
mov
mov
pop
add
push
or
rcll
adc
or
lea
out
xchg
mov
mov
push
imul
wbinvd
adc
lods
push
mov
pop
test
and
test
fnstenv
es
jnp
insl
adc
push
aaa
push
inc
insl
adc
aaa
enter
nop
outsl
loop
pop
inc
loopne
and
test
push
xor
inc
fs
cld
sbb
push
lcall
stc
jb
and
shlb
pop
enter
adc
stc
mov
add
gs
mov
std
push
add
movsl
adc
or
hlt
xchg
push
xchg
stc
xor
call
cwtl
popf
push
sbb
mov
cmp
and
dec
sub
popa
add
pop
xchg
sar
push
xor
fdiv
cmp
adc
push
pop
je
add
inc
cmp
jl
jmp
mov
les
and
push
push
jl
push
mov
inc
adc
psllq
mov
xchg
mov
adc
mov
decb
faddl
jge
aas
cmp
xchg
xchg
mov
mov
xchg
lea
mov
add
rcrl
rolb
lret
je
sbb
and
cli
cmp
ja
je
push
mov
nop
inc
popa
inc
sub
inc
aad
pusha
jne
jbe
cmpsb
add
inc
and
pop
shll
dec
ja
mov
cltd
xchg
adc
movsl
mov
dec
mov
cmpl
stos
dec
jge
mov
pop
mov
dec
fdivl
dec
push
mov
sub
push
sti
inc
or
ret
dec
dec
stos
add
or
mov
xchg
aad
scas
or
daa
lds
sub
jne
adc
and
lods
adc
jne
mov
sbb
dec
sub
cld
and
pop
or
add
fadd
mov
adc
mov
and
insl
dec
test
push
insl
sub
rol
inc
fldl
mov
gs
mov
outsb
call
push
push
jl
mov
add
js
pop
hlt
cmpsb
cmp
sub
and
aaa
push
push
lea
cmp
mov
decl
cmp
sub
sub
mov
ja
stos
inc
mov
sbbl
and
push
xor
test
lock
cmp
ret
std
and
push
push
pop
out
push
xor
cltd
and
or
sub
push
lret
lea
pop
mov
cs
je
cwtl
sti
adc
xchg
add
and
jmp
add
inc
and
jmp
andb
cmp
dec
daa
push
dec
icebp
lods
stc
sbb
dec
vprotw
xchg
dec
xor
xor
adc
or
push
mov
cmp
xchg
jmp
dec
cwtl
xchg
mov
push
adc
call
add
push
cmp
dec
ljmp
in
jg
call
jmp
or
push
loope
cmp
add
xchg
testb
je
inc
inc
fwait
xor
push
scas
xchg
adc
lret
adc
jne
rorb
lcall
or
test
mov
bound
rcll
inc
pop
pop
pop
sti
imul
andl
rclb
sub
loop
test
jmp
add
test
push
mov
dec
hlt
cmpsb
insl
jl
mov
add
or
or
imulb
cli
cmp
or
rcr
and
mov
je
and
inc
inc
cmp
in
stc
adc
jb
or
sbb
add
pop
lret
adc
xchg
cmp
adc
lret
mov
mov
pop
lods
pop
jl
imul
cltd
std
ja
xor
ljmp
push
arpl
sub
jne
adcl
test
les
or
and
and
test
adc
adc
pop
xchg
fbld
mov
pop
adc
jle
ds
pushw
orl
push
jl
inc
sub
cmpsl
pop
inc
pop
xchg
out
adc
sub
pop
mov
orl
or
pop
jns
xor
pop
push
call
sub
jmp
leave
add
push
sub
dec
dec
arpl
int3
cmpxchg
or
cmp
out
cmp
rolb
shlb
ss
and
and
adc
mov
inc
add
adc
mov
mov
adc
mov
ds
and
nop
mov
or
mov
adc
and
dec
ljmp
aad
popa
inc
loopne
or
inc
repz
ror
mov
fidivs
clc
decl
push
hlt
jle
mov
sti
push
dec
jg
je
push
dec
sub
push
or
dec
jne
pushf
enter
jle
fldt
or
xor
mov
sar
mov
rorb
lock
inc
repnz
stos
insb
xchg
ja
or
icebp
jmp
outsl
jns
pop
pushf
pop
dec
adc
cmp
dec
imul
bnd
mov
das
shl
adc
ficoms
ljmp
add
je
lock
or
ret
lret
into
xor
popa
outsb
add
sub
aad
xchg
fimull
jge
and
or
jo
push
jbe
imul
je
or
test
outsl
pusha
fstpl
add
arpl
jg
test
clc
bound
mov
packuswb
xchg
imul
mov
xor
jmp
fs
inc
cwtl
adc
jle
test
jb
insb
jp
sub
nop
test
popf
or
and
sub
lcall
daa
call
jmp
cmp
cmpl
pop
imul
add
notb
fwait
test
adc
push
push
inc
pop
jo
add
mov
sub
pop
and
sub
outsb
div
cmp
in
xlat
fs
xor
dec
inc
and
cmp
push
push
gs
cmp
ret
push
sub
xchg
inc
bound
push
mov
sub
lods
xchg
cvtps2pi
sahf
xor
insb
cmpsl
dec
xchg
or
pop
jb
or
testb
adc
add
movsbl
enter
dec
dec
xorb
jp
inc
sub
mov
jbe
imul
ljmp
jmp
jge
mov
outsl
aas
js
sub
xchg
adc
ret
std
aam
mov
jle
cmp
or
mov
ret
add
xchg
dec
sbb
mov
aas
pop
dec
jo
mov
lea
and
addr16
adc
or
xlat
rcrb
push
les
mov
sbb
xor
xchg
sbb
jbe
xor
je
popf
adc
sub
repz
int3
mov
pop
jmp
push
cmp
aam
add
pop
jmp
or
push
jmp
iret
adc
shrb
push
mov
jne
jecxz
stc
xchg
popf
jge
jnp
sbb
cmp
or
and
lret
loope
clc
je
jne
mov
xchg
fidivl
jg
popf
js
shlb
inc
cmp
jae
add
shr
ret
adc
and
nop
rolb
sub
inc
mov
add
and
mov
ja
imul
ds
jne
xor
mov
loope
fwait
movsb
in
cltd
mov
add
test
add
pop
js
cmpsb
aam
dec
shrb
push
cwtl
push
shr
push
cmp
push
xor
out
xor
mov
outsb
mov
enter
pop
xor
sbb
stc
pusha
add
dec
or
test
je
mov
jne
push
or
mov
mov
pop
xor
add
add
cs
leave
mov
mov
fisubrs
cs
lods
push
xchg
jne
adc
mov
sahf
aam
leave
push
sahf
jb
adc
or
add
cmp
movsl
sub
into
jg
add
fs
mov
xchg
mov
and
xchg
adc
mov
pop
jne
and
les
add
xchg
dec
and
jmp
jne,pt
mov
xchg
call
scas
icebp
mov
pop
push
push
mov
push
fadd
pop
call
outsb
mov
jo
jge,pn
dec
pop
push
data16
les
cmp
pop
lock
jne
mov
push
push
and
inc
fs
cmp
lods
pop
mov
push
fcomps
call
pusha
enter
sbb
cltd
add
adc
in
scas
lock
and
in
jno
jmp
incl
jmp
out
cltd
shl
jo
fisubrs
jmp
adc
jne
push
cmp
les
adc
subb
jmp
aas
lea
rorl
and
mov
inc
add
mov
lea
rcr
test
sub
xchg
add
neg
mov
int
jae
cmp
dec
pop
test
int3
push
ror
dec
adc
dec
or
dec
mov
jmp
adc
repz
out
repnz
data16
or
cmp
pop
or
dec
pop
inc
cltd
ljmp
add
cmp
dec
sti
dec
or
test
adc
sbb
mov
pop
sub
xchg
push
enter
lahf
xlat
out
push
fcmovnb
sub
cltd
enter
imull
inc
in
sub
rclb
lods
lcall
mov
lea
or
jae
mov
lcall
dec
repnz
pop
jmp
sbb
outsb
leave
loope
mov
pop
and
adc
out
and
or
loope
decl
js
aam
stos
daa
jns
ret
push
call
inc
mov
jo
popf
hlt
xor
in
adc
mov
cmp
in
jle
test
push
rcll
call
movl
pop
mov
out
xor
mov
ds
divb
test
incl
push
jle
inc
call
aas
lea
imul
movsl
mov
and
roll
add
sbb
or
jle
cmpsl
lods
adc
leave
cmp
dec
sbb
pop
xchg
or
mov
mov
or
in
pop
push
sub
inc
ret
cli
pop
xlat
cli
repnz
cmc
xor
adc
dec
mov
xchg
js
jge
ror
dec
dec
in
std
cmp
call
popf
std
sub
pop
pop
sbb
mov
add
test
mov
stos
sbb
inc
inc
add
out
or
lea
cmc
mov
and
or
jnp
arpl
xchg
enter
add
mov
or
jl
cmp
push
mov
das
xchg
mov
push
orb
add
jae
andb
or
mov
aam
xchg
sarl
loop
adc
mov
or
xchg
add
dec
test
or
jne
or
pop
push
loopne
iret
mov
mov
lret
popa
mov
inc
inc
inc
add
cmp
cmp
cmp
test
pop
add
addb
mov
dec
dec
repnz
fs
mov
ljmp
addr16
or
fcoml
mov
stc
in
or
orb
cmpb
idiv
jns
dec
inc
inc
add
ss
popf
jbe
inc
inc
cld
mov
add
jge
insb
cmp
inc
ret
inc
push
or
pushf
jp
xor
lahf
inc
loop
jl
pop
and
xor
sbb
and
andl
jmp
xor
stos
popf
adc
frstor
loop,pn
arpl
fldz
inc
cmovge
dec
shrl
add
pop
ret
sbb
xchg
jno
xchg
enter
xchg
pop
xchg
adc
mov
sbbb
jne
call
int
daa
pusha
mov
push
mov
sbb
test
pop
sub
xor
out
add
push
sub
sub
popf
frstor
fwait
les
jae
push
js
pop
cmp
shlb
push
and
out
xchg
mov
cwtl
and
inc
leave
dec
or
adc
add
aaa
adc
pop
push
or
ljmp
cmp
rclb
pop
add
jno
adc
or
test
mov
xchg
sbb
iret
jae
pop
adc
faddl
push
jmp
ja
add
shll
lret
and
rorl
add
lret
and
andl
iret
jl
shlb
pop
testl
clc
shr
add
iret
and
pop
add
pop
call
test
je
jmp
adc
out
mov
add
inc
sti
push
push
pop
or
xor
adc
mov
lods
aas
loopne
and
je
dec
cmp
faddp
mov
xchg
popa
pop
sub
mov
mov
iret
loop
lcall
inc
inc
lock
test
jl
add
test
and
jmp
out
ror
add
or
addb
dec
adc
hlt
cli
pop
sub
adc
sub
ljmp
jns
insb
pop
jecxz
hlt
out
sbb
ljmp
in
or
inc
adc
fldl
ds
popa
push
ds
scas
test
mov
bound
jb
add
es
adc
or
mov
testl
fbld
insl
cltd
loope
jmp
push
jbe
sub
push
ret
add
or
sbb
shl
in
int
add
test
testl
add
push
insb
xchg
push
cmp
loope
xor
adc
xor
sub
adc
repnz
movsb
or
pop
fldl
xor
scas
repnz
xchg
and
push
push
je
out
pop
mov
mov
or
pop
stos
adc
orb
sub
dec
jmp
push
divb
jo
or
push
call
jmp
pmovmskb
loop
sub
xchg
adc
and
mov
das
and
mov
stc
xor
pop
push
adc
sbb
cmp
test
fldl
fcompl
roll
add
ja
fldcw
mov
outsb
movsl
and
dec
mov
jmp
sub
jno
sbb
lea
jo
mov
cmp
sbb
dec
incb
test
mov
ja
add
dec
dec
lret
popa
data16
cmp
push
xor
fs
pop
and
popa
call
xchg
xor
pop
mov
std
sbb
sti
or
or
jmp
cmpsl
inc
pop
jae
cmp
je
add
mov
pop
or
dec
cmc
mov
push
sub
push
jge
sub
test
ds
inc
and
sbb
jmp
aaa
sbb
xchg
bound
or
pusha
pop
xor
mov
std
adc
dec
mov
aam
mov
or
pop
out
mov
pop
sti
adc
jne
xchg
cli
call
mul
je
sub
loope
xor
in
pop
adc
scas
enter
push
push
jne
ficoms
repnz
or
jecxz
dec
mov
sub
movsb
pop
pop
push
in
xchg
shlb
xor
sti
xchg
fwait
pop
sub
inc
and
popa
adc
cmp
push
adc
sub
ret
xchg
push
pop
fsubr
sbbl
push
subl
inc
adc
mov
add
sahf
adc
push
push
aas
inc
xor
push
icebp
repz
add
push
movsb
lahf
xchg
sarl
push
push
cld
jmp
cmpl
jne
cli
or
push
xor
pusha
cmp
sbb
sub
clc
lock
or
decb
mov
lret
adc
or
sub
mov
fsubl
pusha
in
pop
int3
movsb
stc
imul
idivl
ret
sarl
pop
je
outsb
adc
icebp
std
rclb
push
push
sub
nop
inc
sub
dec
into
xchg
data16
push
andl
adc
push
mov
outsl
jae
mov
add
bound
or
push
add
sbb
dec
jmp
inc
mov
out
cmc
or
pop
sub
adcb
or
fildll
daa
dec
push
and
imul
and
lock
sbb
fwait
cmpsb
jge
cmp
sbb
loop
movsb
jmp
pushf
ljmp
imul
bound
in
cmp
mov
or
sub
jmp
cmp
push
fmuls
adc
or
sub
xor
mov
xor
jg
imul
jmp
sbb
adcl
jg
call
aaa
notb
pop
dec
das
add
rorb
xchg
lock
jne
dec
push
insl
sbb
call
or
mov
xchg
push
push
cwtl
push
lcall
pushf
pop
cmp
imul
dec
adc
jmp
mov
jg
mov
pop
add
fnstenv
xor
fldcw
sbb
imul
push
clc
push
push
push
inc
stc
cmc
out
std
sarl
scas
aaa
shl
adc
je
or
lret
sbb
inc
cmp
cmc
sub
or
xor
inc
pop
and
in
xorl
cmp
in
cli
shlb
add
mov
dec
inc
orl
mov
mov
fs
imul
out
pop
sbb
inc
insb
shrb
xchg
mov
adc
imul
cwtl
int
cmp
fstp
daa
inc
pop
adc
pop
mov
fisttpl
lahf
rcll
cmp
add
adc
out
orb
cmp
adc
cli
rcll
add
sbb
mov
shl
lret
cltd
in
cs
sub
push
sbb
jle
xchg
or
mov
es
pop
sbb
test
loop
or
enter
xorb
push
std
pop
inc
movb
popf
loope
inc
and
cmp
sbbb
jns
neg
leave
sub
jl
mov
pop
testl
push
sti
fisubl
das
or
push
aad
sub
cs
push
add
mov
sbb
xor
ret
cmc
or
sbb
sub
sbb
adc
or
inc
sub
addl
lds
xchg
sub
add
std
jne
movb
jge
movsl
dec
jo
dec
adc
or
mov
sbb
inc
add
add
xchg
sbb
push
mov
enter
sub
scas
pop
loope
fsubrp
push
popf
or
movsl
inc
pop
rcll
pop
dec
out
push
xor
cli
xchg
jne
repz
movsl
in
repnz
test
test
mov
aas
dec
jnp
push
or
jmp
mov
sub
cmp
mov
jl
cmp
mov
mov
nop
and
jge
lret
adc
adc
pop
adc
and
push
pop
inc
inc
mov
addr16
adc
or
sahf
testl
into
sub
adc
notb
sub
dec
jno
adc
dec
and
adc
xchg
or
jmp
sbb
sbb
jmp
adc
in
cld
inc
sub
or
imul
mov
mov
inc
push
cli
add
push
cmp
pop
in
fildl
sbb
and
ds
adc
xchg
fistps
gs
outsl
ret
mov
outsl
pop
inc
and
pop
push
inc
data16
push
add
arpl
push
jge
adcb
cmp
insl
loopne
shrl
add
dec
or
add
sbb
imul
lahf
push
xchg
dec
push
rcl
adc
jmp
sbb
adc
or
pop
and
adc
rcll
sbb
or
ljmp
ja
pop
jl
pop
sbb
inc
add
stos
or
pop
ffreep
xchg
push
mov
push
ret
hlt
xchg
jle
loopne
push
pop
mov
mov
andb
fldt
rol
test
call
or
cmp
inc
jae
inc
or
jb
cmp
mov
enter
xchg
pop
sbb
inc
push
xor
sbb
cs
xor
adc
testl
jg,pt
popf
jnp
push
ja
adc
mov
adc
dec
jle
fildl
inc
loopne
js
rorb
clc
jle
sub
daa
aaa
mov
cmp
test
dec
xchg
inc
xor
push
hlt
fiadds
hlt
ret
and
pop
rorb
sub
add
sub
movsl
mov
imul
call
sti
and
adc
push
lock
inc
push
cmpsl
add
aad
push
mov
mov
enter
lods
xor
cmpsl
aad
out
cmpsb
in
jae
jns
jecxz
and
or
jae
test
jl
repz
push
pop
dec
adc
cmp
dec
pop
es
push
test
cmpb
ljmp
imul
and
and
lcall
jmp
xlat
adc
call
dec
cmpb
lea
push
inc
lods
rolb
inc
dec
andl
adcb
push
add
dec
sti
daa
jmp
add
or
out
xor
add
xchg
lods
es
add
adc
or
aam
pushf
jae
xchg
jne
mov
je
addl
jle
shlb
int
sbb
adc
inc
lock
orb
push
seta
outsl
rorl
lcall
mov
xor
sbb
add
xor
sbb
call
pop
jmp
add
lret
shlb
dec
mov
adc
push
pop
jno
and
xchg
sbbb
pop
mov
sub
add
dec
jb
add
paddusw
lahf
test
xorps
add
lds
jb
sub
xchg
xchg
jae
push
sub
dec
jo
test
inc
sbb
ljmp
lahf
jp
pop
aam
aas
fcoml
les
inc
or
in
test
loopne
or
adc
gs
cltd
and
mov
iret
imul
stc
ds
aam
daa
call
pushf
fs
adc
iret
xchg
inc
insb
out
js
sub
in
scas
jg
loopne
jle
cmpl
cmpl
and
adc
lds
adc
aam
or
sti
fdiv
add
loopne
sbb
frstor
mov
lret
cmp
gs
pop
jae
inc
add
shll
jmp
jp
test
cmp
pop
jl
mov
add
inc
mov
xor
push
es
mov
dec
mov
push
scas
push
push
lock
sub
push
out
aaa
repnz
sub
adc
nopl
pop
dec
adc
data16
les
sub
loopne
mov
sub
cmpsl
jle
aam
clc
add
test
xor
push
lock
push
xor
xchg
xor
test
jne
call
mov
sbb
je
test
cli
or
xchg
dec
pusha
xchg
data16
push
inc
ss
push
dec
dec
cli
lock
lds
imul
insl
adc
inc
and
shll
pop
sbb
add
test
xchg
dec
dec
jmp
inc
dec
jecxz
mov
stc
pop
rolb
jno
adc
adc
xchg
ljmp
add
xchg
in
push
addr16
testb
rclb
movb
sbb
sahf
pop
and
fmul
xchg
rcll
mov
dec
push
mov
fisttpl
xchg
push
push
ret
and
jmp
pop
cwtl
inc
rcl
cld
pop
jmp
inc
aam
jne
mov
xchg
adc
pop
pop
mov
pop
cld
test
das
mov
push
sub
call
xor
jmp
sub
push
adc
inc
mov
lods
js
jecxz
pop
xchg
ficomps
ja
jnp
xchg
scas
ret
daa
lock
cmp
pop
pop
push
fldenv
ret
mov
das
jmp
aam
rorb
jne
jnp
push
cmp
and
in
loope
cmp
mov
adc
dec
mov
mov
pop
pop
pop
mov
pop
lret
mov
stos
xchg
pop
les
negb
or
fisubrl
rorb
ret
dec
mov
or
ret
lds
shlb
decl
mov
xor
call
jg
add
jl
mov
test
test
sub
out
mov
cmpsl
push
fdiv
fdecstp
ret
inc
ds
clc
faddp
push
cli
fucom
jp
and
add
je
loopne
cmp
jae
and
cmp
jne
push
cmp
inc
jmp
sti
in
adc
cmpsb
lds
incb
lods
je
testb
test
es
cwtl
add
xor
push
add
inc
sub
add
imul
pop
gs
jecxz
mov
or
jg
ret
cmpsl
sbb
fidivs
cmp
inc
or
das
cld
test
dec
dec
mov
cmp
xorb
std
xchg
adc
inc
xchg
shlb
push
inc
es
xchg
sub
sub
push
mov
fdivrp
or
jns
xor
xchg
icebp
xchg
mov
jns
and
imul
outsb
xchg
pop
lock
adc
jp,pn
sub
pushf
or
shll
xor
test
mov
mov
inc
xchg
sub
inc
sti
out
or
add
or
adc
movb
inc
mov
lret
dec
jl
sub
das
rcll
jmp
je
adc
hlt
add
or
jl
push
pusha
cli
adc
jb
mov
test
mov
je
push
pop
dec
inc
jne
cltd
jp
mov
cmp
ficoms
jmp
lea
dec
hlt
fcompl
or
rolb
push
cmpsl
sub
dec
xlat
addb
jle
or
sbb
and
int
mov
mov
mov
jb
push
dec
nop
jle
push
xchg
cmp
jne
scas
inc
mov
xor
mov
es
jmp
or
sub
sbb
dec
inc
pushf
and
jle
and
inc
pop
push
adc
adc
scas
call
inc
ljmp
cmp
pop
jns
or
push
ficoms
test
stc
sbb
jp
call
sub
movsl
aam
daa
push
test
push
mov
cs
das
mov
add
sbb
xchg
pushf
jmp
insl
les
push
sub
xor
jge
adc
jb
rclb
je
mov
ficoml
inc
cmc
dec
shl
sbb
filds
je
xor
inc
or
dec
sbb
enter
jg
lods
fisttpl
roll
nop
adc
fcompp
pop
nop
mov
ss
mov
fmull
aam
mov
adc
cmp
je
push
sub
in
loop
pushf
test
mov
jne
or
push
push
lea
push
lds
rolb
jmp
faddp
imul
push
lea
je
mov
jns
ds
dec
mov
cmp
sbb
xor
icebp
js
out
andl
xchg
in
jmp
loopne
pop
adc
sti
add
or
push
or
mov
aas
sub
movsl
or
test
pop
or
xchg
aad
sbb
orps
lret
lea
sub
sbb
mov
daa
jge
stos
or
jne
testl
sub
sbb
cmp
and
xchg
xchg
xchg
push
inc
test
aaa
cmp
and
cmp
adc
and
lods
out
es
and
out
std
jmp
xchg
sti
push
scas
and
xchg
mov
inc
adc
pop
xchg
in
sub
sbb
je
out
pop
in
enter
jo
jae
pop
cmp
jne
lea
mov
adc
pop
mov
mov
push
sbb
adc
xchg
cmp
adc
mov
sbb
mov
sbb
inc
or
and
pushl
ss
push
fs
jmp
xchg
adcl
pop
push
mov
add
js
add
ret
je
cmp
push
mov
incl
scas
loopne
jmp
xor
xor
mov
outsb
xchg
gs
daa
add
dec
mov
inc
cmp
pop
je
push
push
cmpsb
inc
jge
pop
inc
xor
std
cmpsl
imul
xchg
push
das
and
jb
adc
add
add
xchg
leave
pop
ljmp
or
cmp
adc
lcall
lcall
push
jg
jl
les
adc
mov
ja
arpl
int3
push
cmpsl
in
clc
fwait
cmp
sub
rcr
sub
sub
push
mov
dec
xor
push
sahf
dec
xchg
pop
ret
ret
adc
ja
inc
dec
add
pop
lods
in
lock
push
jmp
and
pop
push
test
mov
dec
add
inc
push
aaa
das
adc
mov
add
add
cli
and
jmp
notl
dec
ds
mov
jno
mov
mov
inc
inc
movsb
or
xor
into
push
or
xchg
inc
bound
jmp
movsl
adc
lahf
mov
xchg
andl
sahf
int
rorl
je
adc
jne
cmp
add
mov
loopne
sbb
imulb
adc
adc
out
aam
or
enter
mov
sub
jle
or
sub
jle
ljmp
or
or
pop
jl
sub
in
cmp
dec
jmp
jo
or
pop
sete
mov
shr
mov
rorl
xchg
push
inc
movsb
mov
movb
inc
mov
cld
push
and
faddl
adc
jne
cmp
push
sbb
leave
push
xor
mov
mov
int
sub
pop
push
in
xor
monitor
add
cmc
aas
jp
imul
xor
sbb
jne
aad
lods
push
pop
pop
imul
sub
pop
xor
ja
adc
and
jmp
adcl
cmp
ret
in
inc
sbb
sbb
jne
pop
add
sub
out
mov
adc
clc
or
pop
cmpsl
or
xchg
add
ss
je
xor
adc
jg
sub
or
xchg
cmp
xchg
mov
ljmp
xor
push
mov
push
push
lahf
cmp
jns
mov
je
ret
popa
ret
jecxz
mov
imulb
sti
out
jle
iret
cmp
add
jmp
ret
test
xchg
aad
push
cmp
adc
xchg
add
int3
push
inc
xor
xor
jmp
mov
jb
sub
dec
add
sbbb
adc
and
jnp
fisubs
xchg
popa
pavgw
jl
test
cmovne
subl
pop
pop
test
mov
cmp
push
call
push
stos
jle
imul
inc
pop
lcall
lods
or
jns
push
jnp
fnstenv
jmp
imul
lods
lret
or
incl
das
ja
cmc
pop
push
mov
inc
sbb
sub
sbb
adc
and
mov
add
push
data16
cmp
xchg
and
mov
sbb
mov
pop
push
sbb
popf
push
push
bound
mov
mov
mov
or
pop
mov
push
shlb
add
cmp
add
pop
insl
aas
int
xchg
jecxz
shr
xor
cli
inc
jbe
inc
icebp
lea
test
in
jge
int
sbb
add
and
adc
ret
or
into
ja
or
int3
cmp
jbe
sbb
push
mov
push
subl
add
dec
push
rcrl
mov
lods
adc
int
adc
fwait
test
sarb
push
mov
stos
aam
int3
aaa
pusha
lods
and
cmpsb
adc
xor
adc
pop
jmp
fdivrl
inc
jmp
lea
cld
hlt
popf
inc
mov
ljmp
or
idivb
ds
aad
nop
cmp
mov
das
jae
mov
ljmp
daa
push
xchg
jl
das
sar
dec
push
dec
popf
push
jle
add
jle
and
insb
loope
call
fs
fildl
push
inc
mov
popf
loopw
adc
add
jmp
shl
loop
jg
push
std
xor
xor
jae
xchg
sbb
xor
scas
mov
push
filds
adc
or
jmp
or
ljmp
and
xor
pop
pop
fisubrs
or
jl
test
adc
xchg
repnz
dec
xor
sub
hlt
dec
pop
cmp
push
popf
popa
cmp
xor
xor
sbb
jae
mov
pop
stos
lock
in
testb
jae
sub
push
cmp
ret
loop
mov
and
incl
lds
leave
adc
and
jle
imul
jns
pop
dec
pop
cmp
pusha
sub
sbb
jmp
sbb
cmc
adc
xor
cltd
test
dec
test
mov
daa
add
test
dec
push
stos
jo
call
in
lock
jmp
cmp
ret
jmp
dec
adc
lds
movsb
cmp
in
jmp
popa
inc
inc
xchg
pop
and
aas
sub
lods
sub
mov
sub
daa
and
and
inc
repnz
mov
adc
push
lahf
or
or
ljmp
les
mov
xchg
inc
xchg
mov
or
into
adc
setle
mov
add
and
mov
jg
stos
push
jle
or
cmp
adc
xchg
xchg
outsb
pushl
dec
aaa
adc
aaa
cs
add
push
adc
xor
jmp
add
repz
dec
stos
inc
jo
je
lock
and
adc
cmp
inc
mov
push
inc
adc
cmpb
or
pop
out
or
call
cwtl
cmpsl
jbe
es
xchg
and
fstps
adc
sub
add
out
aam
jmp
fstl
ds
jne
sbb
xor
add
cltd
or
cld
mov
pushf
push
or
or
pop
mov
dec
repz
or
xor
mov
dec
mov
lds
cmp
cmp
dec
inc
dec
cld
in
pop
xchg
or
mov
jno
das
and
into
outsb
adc
push
push
mov
scas
jb
push
ja
xchg
sbb
lret
adc
stos
pop
std
and
pop
xlat
popf
xchg
or
push
hlt
or
pop
sar
or
and
add
lds
std
dec
xchg
repnz
inc
mov
dec
cli
js
pop
scas
das
jnp
das
aam
and
movsl
fmuls
sub
test
mov
pop
lea
ret
clc
enter
sbb
icebp
push
or
sub
in
xchg
cltd
outsb
push
push
mov
mov
cld
cwtl
mov
mov
std
hlt
adc
and
xchg
xor
js
ret
pop
mov
push
pop
jo
push
or
into
xchg
mov
inc
xchg
fsubs
fstps
xchg
add
pop
lret
inc
jmp
xchg
or
pop
sbb
dec
mov
shrb
pop
loop
xor
lds
dec
cmovp
sti
sub
mov
mov
fmull
rorl
or
stos
mov
subl
pusha
lcall
std
push
dec
enter
or
leave
ja
subl
mov
imul
pop
inc
sbb
outsb
hlt
outsb
mov
sbb
andb
push
std
lret
mov
loope
adcl
ds
mov
pop
jle
cmp
fs
xor
xchg
scas
or
adc
and
push
fucomip
pop
test
mov
jb
mov
dec
ljmp
fs
pop
fdivrl
aas
mov
dec
lret
cmp
jae
popf
or
inc
push
shld
shl
nop
outsl
shlb
loope
cmpsl
loop
adc
sar
jb
dec
or
cmpsb
push
sti
scas
daa
push
inc
xor
or
insb
xor
inc
fsubrl
das
mov
push
sbb
and
push
cmp
stc
or
xchg
mov
inc
inc
mov
negb
imul
clc
shrb
and
test
inc
adc
adc
out
sti
and
les
int3
iret
loope
inc
lret
dec
adc
call
add
xlat
and
in
js
es
and
sbb
or
push
xchg
shll
cmc
aam
fsubrs
ffree
enter
mov
sub
add
cmp
cmp
adc
mov
push
popf
adc
imul
sub
adc
inc
jb
je
mov
lds
or
rcll
xor
inc
mov
or
inc
adc
rorb
push
push
push
mov
xor
fcoml
or
cmp
in
mov
aas
xchg
or
sbb
pop
rclb
dec
sbb
sub
shr
mov
outsl
das
sbb
es
pop
push
les
lds
xorb
cmpsw
rclb
data16
cwtl
push
cli
dec
pop
jb
lods
lds
sbb
xor
orl
xor
jne
or
les
std
pop
sbb
xchg
adc
mov
rcr
leave
adc
jge
cmp
je
mov
cmp
pop
or
jg
decl
dec
icebp
mov
sub
mov
add
lods
das
test
adc
mov
xchg
mov
std
mov
neg
sbb
pop
and
movsb
xchg
mov
inc
sub
mov
mov
insb
sub
es
cmpsl
ljmp
dec
dec
ljmp
adc
add
adc
sub
jns
xor
mov
in
mov
or
data16
push
push
inc
jl
adc
js
jne
enter
push
adc
jbe
nop
jb
push
push
jmp
pop
adc
cmpsb
adc
ja
add
add
xchg
lds
push
and
sbb
test
jne
adc
adc
sbb
clc
lcall
sub
jmp
pop
adc
and
sub
cli
jmp
fst
add
mov
lcall
add
jnp
pop
adc
mov
pop
sbb
sarb
inc
lret
mov
loopne
mov
or
jle
sub
jge
les
jmp
and
inc
repnz
xor
sub
add
les
push
push
imul
cmp
loop
test
popf
shrl
dec
movups
mov
inc
add
cli
mov
mov
andl
or
adcl
inc
cs
push
or
jmp
pop
imul
call
clc
shll
push
add
call
pusha
or
jne
into
mov
loopne
push
sbb
push
mov
ret
mov
inc
adc
xchg
sbb
sbb
mov
in
popa
push
cwtl
adc
mov
and
push
mov
mov
or
test
jg
dec
xchg
inc
jge
mov
or
stos
sub
mov
std
mov
xor
movsb
sub
sub
bound
jns
add
dec
or
and
andb
mov
push
adc
xor
mov
push
lahf
push
jge
push
cmp
inc
xor
fimuls
shlb
invd
pop
adc
jmp
mov
das
loope
rep
sti
push
mov
fld
cmp
push
jp
std
sub
sbb
push
je
sbb
pop
adc
add
or
jno
adcl
and
xchg
inc
rcrl
dec
or
add
push
mov
mov
scas
and
mov
std
fwait
ds
adc
adc
nop
sub
shlb
dec
jne
lds
add
pop
je
cmp
mov
mov
inc
dec
subb
test
pop
stos
pop
inc
js
mov
and
mov
addl
xchg
lea
mov
mov
lret
sbb
adc
fsubrl
jne
lret
clc
or
xor
add
pop
hlt
jg
pop
je
mov
push
jne
or
pop
adc
inc
mov
mov
or
bound
std
inc
pop
sub
and
aas
shl
rcrb
add
incb
jge
adc
xchg
push
cmp
jl
movsb
mov
das
jmp
cwtl
or
mov
mov
pop
pop
mov
movsb
shl
and
call
push
dec
js
sbb
divb
das
dec
mov
ljmp
nop
lods
push
pop
lcall
mov
pop
add
iret
ret
pop
cltd
mov
enter
adcl
mov
cld
dec
les
adc
repnz
sub
pop
push
and
outsb
cmp
divb
and
push
cld
cmpsb
mov
hlt
lret
push
and
dec
rcl
or
enter
fimull
shrb
outsb
and
mov
mov
cmp
add
push
dec
jne
pop
popf
in
test
fstl
or
popf
shrl
fs
push
ret
pop
jne
aaa
cltd
test
iret
push
rorl
fdivs
clc
aam
cs
xchg
pusha
inc
enter
fisttpl
jmp
and
sbb
push
cmp
out
mov
cwtl
hlt
sbb
testl
fistpll
ret
clc
push
sbb
adc
std
subl
movsl
dec
mov
loopne
das
mov
pop
stc
sub
cmovs
jmp
or
pusha
aas
xor
or
push
add
loope
mov
and
jmp
scas
and
and
add
mov
xor
and
aas
into
mov
cmp
jmp
decb
pop
shlb
cmpsb
adc
mov
and
xchg
aam
inc
add
mov
adc
or
cmp
test
cmp
jg
aas
sub
xor
xor
adc
sub
or
or
inc
and
xchg
pop
push
and
cmp
mov
movsl
pop
push
dec
xor
shll
ja
jae
add
add
pop
and
jg
add
repz
rclb
adc
neg
sbb
les
xor
icebp
in
loopne
decl
in
dec
mov
arpl
pushf
subl
and
jne
mov
push
inc
rcll
lahf
fbstp
sub
shrl
and
lds
pop
or
push
std
inc
fildl
sub
sub
xchg
jmp
cmp
dec
out
pusha
push
jle
add
push
xor
pop
jg
sub
out
lret
shl
aad
adc
pop
mov
mov
jmp
push
jl
mov
push
mov
sbb
jmp
incb
incl
adcb
call
cmpsl
jecxz
addb
daa
push
shll
add
xchg
inc
push
add
inc
mov
cld
movsl
mov
or
mov
sbb
adc
xlat
mov
mov
lods
and
xchg
or
sbb
lahf
repz
pop
inc
data16
imul
enter
icebp
sub
iret
and
mov
adc
mov
jmp
mov
mov
cmpb
xchg
mov
lods
push
mov
mov
xchg
mov
lea
in
dec
enter
mov
mov
jno
outsb
enter
test
movsb
lret
adc
call
leave
add
shr
or
lea
adc
stc
jne
mov
jmp
inc
adc
iret
lcall
add
fnstenv
jg
sahf
roll
cmp
fists
inc
push
popf
add
sbb
shrb
adc
inc
push
cmpsb
add
or
jmp
gs
inc
sbb
mov
push
sub
push
sub
es
pop
fs
loope
sbb
shlb
xor
push
pop
call
loope
pushf
or
scas
add
xchg
imul
add
and
movzbl
push
fs
and
mov
sbb
or
mov
mov
inc
pop
lods
push
aaa
and
stc
icebp
xchg
mov
add
les
inc
andb
jnp
lods
leave
jo
jp
stos
subb
push
cld
mov
mov
push
loope
inc
or
mov
dec
cmp
lret
push
adc
mov
push
adc
scas
fs
add
adc
aaa
pop
mov
or
xchg
les
mov
add
cmp
adc
testb
add
stc
push
mov
and
mov
fs
mov
insb
sub
mov
aam
je
inc
outsl
push
dec
lock
push
mov
xchg
xor
or
dec
lret
popa
cmp
jge
mov
push
movsb
sub
mov
stos
fcoml
or
dec
xchg
jmp
dec
add
jne
mov
outsl
mov
popa
jmp
jge
adc
adc
sub
ljmp
sbb
ficomps
not
or
dec
inc
dec
int
aas
and
or
or
cmp
and
push
sub
in
jbe
mov
push
je
sub
adc
loope
or
sbb
pop
call
push
dec
push
mov
je
fidivl
test
mov
adc
out
shl
das
inc
cvtdq2ps
jbe
andb
cmp
cmp
je
pop
or
insb
jmp
mov
jo
rol
cmp
out
dec
mov
pop
clc
or
in
lea
xor
lret
inc
into
jae
jno
xor
pop
mov
jg
mov
aaa
outsl
push
aaa
lret
shrl
clc
or
push
lds
call
icebp
inc
or
divl
xor
and
gs
xor
push
stos
into
add
mov
or
xor
cmp
pop
icebp
scas
lock
jo,pt
mov
cld
xor
cs
ss
sub
sbb
cmp
or
into
mov
sbb
insl
push
inc
iret
cli
pop
testl
xchg
xor
inc
dec
inc
orb
push
or
push
xchg
sar
pop
repz
movsl
pop
cld
call
push
or
add
pop
lods
les
mov
and
sub
mov
cmp
pusha
pop
jne
enter
lock
mov
test
push
int3
xlat
out
clc
int
mov
cmp
dec
add
stc
cltd
adc
adc
jbe
data16
pop
jmp
orb
xchg
bound
out
movsb
mov
rcrb
aas
call
xor
faddl
or
adc
and
inc
clc
in
jmp
and
ljmp
or
pop
out
daa
pop
jle
es
or
xchg
faddl
pusha
mov
sti
sbb
jl
or
jg
pop
stos
sbb
sbb
lods
addr16
add
and
dec
call
or
add
mov
pop
jmp
pop
ret
lcall
mov
movsl
jle
xchg
dec
jge
mov
and
push
sub
xor
add
mov
jle
andl
es
jb
or
jmp
xchg
xchg
mov
enter
push
dec
lcall
or
mov
mov
mov
adc
shrb
mov
aam
call
cmp
add
out
add
sbb
or
adc
iret
lods
stos
dec
in
push
sub
mov
or
ror
das
ljmp
jne
jne
lcall
and
jns
or
lea
mov
addl
or
sub
jmp
inc
in
popa
adc
stos
lods
cmp
add
lea
mov
xchg
enter
xchg
add
gs
xchg
int
dec
xor
addr16
insb
jmp
sub
jl
and
push
pop
or
mov
inc
sub
ss
mov
insl
mov
shlb
jnp
pop
pop
jmp
addl
inc
jmp
js
mov
jge
iret
xor
popf
pop
push
loop
test
and
mov
cwtl
add
jp
ret
pushf
mov
or
dec
icebp
test
sarl
pop
rorb
movsb
das
stc
stos
clc
or
jle
lahf
push
adc
cmp
jge
add
sti
dec
repnz
hlt
dec
dec
and
cli
adc
jbe
loope
mov
gs
repnz
ret
mov
and
clc
cld
lahf
inc
sbb
fsubrs
adc
mov
enter
fdivrl
adc
cmp
mov
push
push
mov
push
out
enter
pusha
xor
mov
dec
or
and
adc
cmp
jge
stos
mov
aam
add
jmp
pause
xchg
ret
arpl
sti
jmp
pop
jb
adc
jp
push
stos
or
and
rolb
shl
mov
jno
xchg
pop
add
lcall
adc
xor
filds
or
xchg
and
inc
xchg
jg
dec
adc
lret
push
test
xchg
leave
pop
and
push
and
int3
or
adc
and
dec
call
inc
jmp
mov
adc
sti
add
aas
outsb
mov
and
inc
add
inc
cmp
xchg
add
sbb
push
dec
pop
adc
sbb
add
add
jmp
js
xor
jnp
rol
dec
cs
xor
maskmovq
sub
lock
mov
je
xorl
sub
sbb
and
imul
push
and
adc
pusha
roll
outsb
shrl
push
les
loope
mov
xchg
dec
iret
add
jmp
outsl
dec
dec
and
lock
dec
pop
add
imul
fdivrs
cli
mov
add
in
mov
xchg
inc
mov
sub
push
add
jge
aas
jb
and
in
sbb
add
pusha
or
add
sbb
insl
add
add
or
icebp
test
adc
pop
mov
push
sbb
mov
sbb
out
mov
cs
clc
jnp
dec
sbb
jne
das
add
neg
and
or
dec
ss
push
ficoml
and
pop
cli
adc
jne
pushf
adcl
lea
clc
jecxz
jns
adc
or
cltd
sti
adc
lret
dec
dec
roll
in
add
jo
mov
mov
lea
jl
xor
shll
pop
and
adc
icebp
mov
decl
mov
sub
sub
mov
rorb
adcb
sbb
sub
nop
popa
or
xor
fs
pop
add
or
andb
jmp
fstpl
pop
leave
or
movsb
adc
lsl
cmp
adc
aas
push
mov
cs
mov
clc
mov
pop
push
add
fdivs
inc
daa
loopne
jmp
sbb
call
jo
pushf
sub
and
aam
add
mov
out
mov
call
push
sbb
stc
xchg
aam
adc
xchg
out
dec
dec
sbb
sbb
xor
mov
sub
fisubs
mov
or
xor
sub
xchg
or
push
lea
je
cmp
and
push
ret
jne
cmp
dec
dec
push
mov
push
pop
idivl
out
out
push
js
adc
or
jnp
xlat
dec
mov
adc
scas
sbb
pop
fs
push
test
cmp
nop
hlt
jmp
mov
loope
pop
sub
mov
or
push
ds
xchg
mov
and
cmpsl
aas
jne
add
jg
or
aam
mov
pop
rclb
or
and
ja
add
jmp
mov
sbb
inc
sub
mov
les
cwtl
ficompl
leave
pop
aad
adc
jmp
and
ret
and
je
pop
lahf
movsl
ljmp
add
mov
adc
inc
adc
mov
push
pop
les
mov
mov
ds
push
inc
loop
stos
and
xchg
aam
mov
xor
mov
mov
push
jne
ljmp
cmc
mov
lea
dec
imul
inc
mov
imul
jae
and
xor
and
in
and
out
inc
cmp
repz
mov
mov
push
lods
sbb
std
jnp
and
ja
jnp
cmp
cmp
cmp
mov
sub
xchg
jg
or
outsl
pop
and
pop
push
adcb
addr16
cmp
push
add
das
push
jmp
push
and
rcrb
and
dec
xchg
es
lahf
mov
inc
ficompl
adc
xor
or
cld
cmpl
insb
pop
repz
push
lret
lods
sub
call
adc
call
mov
mov
push
or
jg
pushf
adcl
and
mov
insl
movsb
cmp
push
adc
loop
mov
push
push
movswl
and
add
or
je
dec
ljmp
orl
ljmp
cmp
ja
mov
das
adc
icebp
ss
xor
aam
gs
jp
loop
sbb
out
mov
push
push
hlt
push
les
lret
hlt
cli
loop
push
fimuls
sbb
sti
cmpsl
or
ret
mov
push
adc
dec
add
or
jmp
ss
push
out
push
jecxz
dec
pop
mov
andl
push
into
add
xchg
fwait
ljmp
jmp
arpl
repnz
outsb
movsl
dec
ljmp
jno
je
or
push
test
sub
js
pop
in
mov
daa
lea
dec
ret
pop
jb
or
inc
divb
sub
dec
pop
cmp
jle
pop
ret
repz
mov
ret
cmpsl
lods
push
add
pop
jne
push
mov
and
xchg
add
jo
cmp
test
fs
dec
sub
sub
jnp
sbb
repz
adc
rcrb
and
sbb
pop
sbb
aad
test
cwtl
stos
pop
push
xchg
xor
xchg
sbb
mov
test
cmpsl
add
and
je
cmpsl
xchg
xor
mov
lock
lods
rcrb
sub
idivl
lea
fstpl
sbb
push
inc
sbb
mov
add
ret
ds
cltd
je
aas
shll
das
test
inc
or
ror
jbe
inc
lahf
imul
movsl
movsb
mov
cmp
or
js
lahf
adc
pop
push
xor
test
mov
sub
sbb
insl
cmp
jl
jbe
inc
vcvtps2dq
sbb
dec
sub
push
stos
pushf
addl
in
add
mov
xor
jns
pop
dec
or
jp
loopne
sub
or
aaa
outsl
lods
sub
mov
push
pushf
fstpt
je
xor
or
xor
imul
adc
inc
mov
push
mov
and
sub
negl
add
es
movsl
cld
js
pop
sete
lea
fistl
fwait
stc
sub
add
sbb
adc
jl,pt
jmp
icebp
aas
mov
popa
mov
sub
xchg
cmp
and
roll
les
sub
mov
inc
cmp
push
sahf
sbb
test
inc
cmpl
dec
ds
mov
mov
cmp
call
pop
adc
inc
ja
dec
cmp
incb
fcomp
das
test
je
jmp
push
insl
cmp
mov
xor
scas
cwtl
add
fiadds
mov
sub
inc
jne
in
rclb
andl
mov
mov
mov
dec
cltd
dec
sub
daa
and
pop
std
int3
mov
shll
call
fwait
sub
movsl
icebp
xchg
push
into
inc
neg
sbb
mov
fcoml
nop
mov
dec
lret
jnp
cmc
stos
push
inc
inc
je
jmp
mov
in
push
sub
test
or
cmp
or
test
xchg
ljmp
add
out
in
ret
movsl
adc
leave
test
inc
cmpsl
pop
ret
xchg
sbb
das
mov
push
fcom
adc
push
push
imulb
pop
fisubl
push
mov
nop
loop
ja
hlt
adc
push
adc
pushf
xor
xor
pop
stc
jmp
sub
clc
or
pop
push
pushf
add
jne
je
call
cmc
dec
ret
cmp
jmp
shrb
loop
int3
xor
ds
sub
mov
notl
ret
pop
ds
pushf
and
hlt
push
fists
inc
rol
rcrl
ret
ljmp
sub
sahf
mov
push
jae
sub
mov
inc
mov
lahf
xchg
fstl
pop
jg
mov
cli
push
xor
icebp
and
or
jns
jno
addr16
addr16
rcll
pop
and
pop
dec
ret
mov
lock
or
push
push
inc
xchg
call
into
pop
jmp
inc
adc
lock
jecxz
push
adc
add
out
fs
mov
push
mov
xor
xor
or
lock
push
mov
xor
adc
push
cltd
add
xor
pop
and
jnp
rorl
sbb
imul
sbb
cli
imul
sub
inc
mov
mov
cmp
push
ljmp
dec
adc
call
dec
in
lods
gs
jmp
cmp
jns
mov
push
and
jbe
cmpsl
lods
pop
xchg
cmpsl
and
shl
test
bound
ret
xchg
test
int3
jae
lods
aaa
sbb
dec
mov
icebp
in
test
std
mov
inc
inc
addr16
paddd
jmp
in
and
incb
gs
push
inc
andb
or
pushf
adc
std
loop
adc
sub
nop
adc
cs
test
jp
call
sti
and
ss
pop
mov
xor
mov
or
and
jne
inc
xchg
jno
add
xchg
js
add
cmp
shrl
xor
daa
inc
cmp
sub
cmp
mov
and
and
roll
je
rclb
rcrb
in
jmp
xor
fnclex
adc
test
fadds
jno
out
inc
pusha
adc
ficompl
ja
xchg
mov
jne
cmp
mov
pop
push
bound
pusha
cmp
ja
ret
jb
loope
and
pop
adc
inc
mov
and
je
aad
test
into
jmp
mov
adc
pop
cli
push
sub
mov
inc
out
das
test
lcall
fdivl
pusha
adc
roll
sub
pop
rolb
mov
stos
int
jg
gs
dec
int
inc
lahf
jecxz
lahf
or
pop
add
fiaddl
test
xchg
icebp
and
mov
push
inc
out
and
imul
jp
push
icebp
popa
sub
and
pop
dec
cmp
pop
mov
ret
or
or
mov
fnstenv
and
push
dec
jmp
mov
popa
cmpl
int
inc
je
jmp
jl
and
movb
cltd
inc
push
lods
jmp
mov
mov
movsl
gs
jg
in
loopne
fwait
stos
dec
mov
icebp
aaa
mov
add
or
mov
jle
adc
dec
and
add
jae
fildl
jae
or
xor
dec
lahf
xor
ljmp
dec
hlt
subb
add
or
clc
mov
jl
mov
inc
call
inc
mov
in
dec
or
push
popa
les
jne
adc
pop
adc
add
add
cmp
rolb
xor
dec
jp
decb
mov
jmp
cwtl
enter
aaa
push
in
pop
or
not
dec
cmpsl
lds
and
loopne
sbb
mov
and
icebp
andb
xchg
aam
jo
pop
xchg
lods
dec
in
jns
jmp
xchg
cmp
mov
in
jae
or
push
push
push
stos
popa
mov
jg
movsb
movb
fs
sbb
add
and
mov
pop
mov
imul
xchg
mov
data16
add
inc
cmc
sti
js
setge
xchg
or
shlb
shll
sub
sar
repz
push
mov
or
dec
nop
adc
sub
or
or
and
mov
push
call
sbb
sub
dec
or
or
and
sub
mov
mov
daa
stc
lock
push
test
lock
push
pop
fs
adc
or
sbb
rcll
add
dec
or
lret
lret
stc
fidivrs
pusha
dec
push
pop
aam
sbb
xchg
dec
test
shrb
fildl
test
push
imul
push
add
insb
hlt
dec
cltd
pop
ret
push
dec
ljmp
mov
push
fmul
loopne
lea
or
pop
mov
push
outsb
daa
or
xchg
es
fsubr
mov
ljmp
je
adc
xchg
mov
push
dec
adc
call
mov
int3
mov
adc
add
cmp
std
pusha
sub
mov
dec
push
in
int3
sub
adc
out
cmp
in
fildll
mov
lock
enter
js
ret
mov
mov
sahf
pusha
loopne
scas
mov
adc
or
xchg
or
cmp
and
test
pop
and
jns
test
out
adc
sti
sti
pusha
