and
ja
ja
shlb
imul
ss
add
lock
sbb
fisubrl
mov
or
or
jmp
xchg
mov
fdivs
jnp
or
push
ret
mov
jmp
andb
lods
stos
mov
stos
stos
out
mov
sbb
dec
lahf
jns
mov
out
cmp
aas
jle
jmp
addr16
repz
xor
add
cmpsb
cs
pop
or
icebp
xor
cli
insl
repnz
ss
mov
inc
fldl
push
push
dec
add
ret
addl
mov
data16
xor
cli
test
decb
and
xchg
stc
fiadds
adc
insb
adc
fwait
jmp
push
add
ljmp
mov
mov
mov
cs
inc
push
xchg
pop
sub
cmp
push
adc
xchg
xchg
mov
scas
popf
lahf
call
mov
pop
adc
fs
xchg
mov
fdivrs
add
iret
fs
jecxz
xchg
inc
notl
aas
dec
push
sbb
jb
xchg
inc
leave
dec
loopne
fmul
rorl
jne
push
gs
inc
inc
cmp
sub
push
stos
shrl
cmc
aam
idivl
jo
or
push
xchg
inc
jnp
xchg
lods
and
sahf
add
sahf
scas
insb
dec
fcoml
aad
mov
das
repz
nop
mov
sub
mov
pusha
push
ds
lcall
mov
popa
push
gs
mov
aam
das
sbb
repnz
push
inc
repnz
xchg
int3
pop
jno
dec
aas
pop
dec
into
jbe
test
xchg
inc
adc
ss
movsb
fildl
mov
fwait
mov
in
fdivrp
mov
enter
rolb
fimuls
icebp
gs
mov
stc
sbb
jo
imul
jmp
or
xor
jnp
out
jmp
pop
addr16
out
mov
insl
testl
lock
cwtl
repz
pop
js
xor
mov
or
stc
scas
pop
mov
xchg
arpl
cmp
sub
adc
cltd
xor
js
push
cmp
mov
mov
lret
push
repnz
jne
adc
mov
leave
cltd
loope
cs
jge
repnz
xchg
xchg
adcl
jns
sarb
dec
andl
aam
pop
and
js
out
xchg
or
ret
out
mov
shll
and
addr16
add
xor
or
pop
xchg
mov
in
stos
out
or
aaa
in
dec
mov
adc
test
int
or
mov
fstpl
sbb
scas
push
push
and
jne
adc
mov
shrb
imul
add
sbb
idivb
pop
pusha
push
xor
inc
lret
stc
iret
push
daa
sahf
insb
cmpsl
cmc
push
lock
mov
mov
clc
std
testl
inc
movsb
and
jno
add
fstps
and
push
and
inc
mov
sub
jecxz
mul
jg
mov
mov
scas
mov
mov
clc
movsb
lahf
int
loopne
lock
std
mov
ljmp
mov
xchg
inc
push
mov
cmpsb
mov
adc
add
and
pop
push
cmp
inc
aaa
mull
cli
xor
call
negb
sub
mov
aad
sbb
cmp
repnz
fcomip
pushf
popf
ja
hlt
adc
sbb
add
cwtl
or
out
add
out
or
sub
lock
shrl
int
adc
or
int
mov
push
out
loope
movsb
pushf
pop
jmp
sbb
or
movl
fwait
dec
cmp
or
fs
jmp
iret
cmp
dec
push
cmp
pop
scas
pop
jnp
movsl
mov
xchg
pop
inc
lahf
inc
jmp
xchg
pop
and
cmp
jmp
leave
inc
insl
fwait
pushf
pop
cmc
pop
pop
nop
enter
testl
jl
daa
outsl
je
sti
insl
mov
daa
inc
in
dec
xchg
mov
or
out
cmp
jle
mull
movsb
aaa
aad
mul
jg
pop
aas
mov
xchg
ret
pop
xchg
ds
flds
adc
int
movsl
xchg
adc
push
jl
jge
aas
mull
imul
push
mov
push
rol
push
pop
adc
fs
mov
xor
xchg
les
bound
daa
jecxz
rcl
les
sarb
repnz
mov
lds
popa
xor
data16
loope
arpl
dec
dec
and
in
int
punpcklbw
fiadds
xor
xchg
hlt
shrl
jbe
data16
jbe
data16
mov
add
mov
fwait
xor
test
jle
mov
mov
in
jo
mov
shr
or
jmp
out
inc
insb
dec
mov
pop
sbbl
or
jge
jb
insb
and
mov
sbb
push
pop
adc
icebp
mov
mov
lods
stos
cmc
dec
add
jb
in
ja
mov
pop
scas
ds
push
dec
das
sbb
ss
jg
popf
loopne
mov
popa
mov
sbbb
add
arpl
js
cld
filds
push
ret
clc
dec
sbb
jl
jo
das
pop
push
pop
pop
and
ds
push
popa
add
mov
leave
popa
in
hlt
inc
test
xchg
pop
aam
adc
aas
dec
leave
lea
xchg
testl
clc
js
aas
aad
fdivr
not
repz
mov
outsb
fldenv
push
xchg
repnz
clc
mov
fdivr
ja
out
cmpsb
lahf
out
cmpsb
aas
js
std
loop
mov
std
divb
mulb
mov
jp
or
imull
mov
push
lds
mov
rolb
cmp
mov
dec
adc
and
fdivs
cmp
popf
adc
nop
pop
lea
imul
aas
pop
push
mov
dec
jmp
push
cmpsb
cmp
ljmp
test
mov
fbld
adc
or
push
adc
xchg
sbb
xchg
rorb
cli
inc
jo
mov
lock
xchg
jbe
push
cs
mov
pushf
es
mov
inc
or
in
mov
lock
sub
shlb
pop
lock
test
add
pop
ljmp
cmp
xchg
les
shll
aam
imull
bnd
es
lock
call
xor
xor
lods
push
mov
mov
js
dec
mov
sbb
out
std
rorb
adc
std
sbb
out
pop
mov
ss
adc
push
imul
ret
stc
std
repz
dec
push
push
jnp
and
mov
fbstp
mov
mov
ds
mov
xlat
and
out
inc
sbb
fildl
and
rolb
mov
je
insb
rcl
repnz
les
jo
mov
pop
jg
mov
sub
dec
pop
fstl
mov
push
mov
pop
leave
je
mov
and
add
ret
loop
ret
push
jg
xchg
pop
fstpl
mov
jle
pop
loope
adc
push
mov
cli
adc
sub
testb
sub
lods
jno
adc
and
pop
enter
mov
in
xor
fimull
negl
dec
ffree
cmp
je
mov
xor
dec
insb
repnz
mov
or
ljmp
je
push
rolb
mov
xlat
enter
mov
cld
push
mov
rclb
cmp
test
outsl
cli
adc
or
adc
std
or
ljmp
dec
sbb
xchg
into
aaa
cmp
mov
hlt
and
jnp
int
pop
mov
mov
pop
icebp
mull
mov
xchg
repnz
dec
cmp
inc
xor
xor
push
out
aas
insb
or
outsl
pop
inc
mov
call
aas
fnstsw
stc
pop
sti
mov
fsubrp
loopne
mov
jne
test
gs
jns
insl
cld
dec
inc
das
dec
std
and
mov
mov
test
jg
mov
pop
sbb
jecxz
pop
aad
push
icebp
mov
inc
mov
stos
mov
outsb
pop
push
fnsave
scas
bts
rcl
mov
mov
pop
xchg
in
inc
mov
mov
lahf
lea
setge
add
cmc
scas
xchg
sub
nop
pop
fcmovne
aaa
mov
aam
dec
cli
mov
lock
jmp
pop
jbe
push
or
jmp
pop
insb
mov
mov
add
jno,pt
lods
cmpsl
xchg
pop
icebp
sbb
dec
aad
pusha
sahf
int
mov
arpl
jb
push
inc
fs
xchg
sub
jmp
stc
daa
pop
mov
xlat
repnz
ret
mov
xchg
mov
fiaddl
adc
loop
and
xchg
sub
jmp
daa
mov
mov
mov
in
add
pop
inc
mov
push
add
fdivs
rcrb
push
lahf
in
or
das
loope
enter
pop
mov
stc
outsl
incb
jge
mov
out
lcall
xor
pop
lret
shll
adc
mov
xor
pop
mov
jmp
push
pop
dec
lea
xor
sti
inc
xor
hlt
xor
cmpsl
in
mov
cli
int3
adc
push
add
rorb
in
xchg
cltd
jo
cltd
lret
mov
push
inc
dec
push
push
inc
pop
pop
filds
in
out
adc
sbb
and
mov
lret
xchg
ret
cmpsb
pop
sub
dec
xchg
cmc
fildl
imul
xchg
sbb
outsl
fwait
adc
mov
js
push
fnstsw
add
mov
xor
cmp
out
mov
mov
dec
add
or
into
fimuls
clc
xchg
push
xorl
cmp
ds
adc
decl
lahf
sub
and
std
lea
sbb
rcl
fs
jb
push
cmc
insb
jle
mov
xchg
cs
sbb
lret
xor
adc
jp
pop
leave
jge
jl
rcrb
sub
not
lea
jns
xchg
add
pop
pop
mov
and
adc
popf
rcll
lret
sub
jle
jmp
xchg
or
sub
ret
pop
xchg
jle
sub
xor
push
sub
mov
enter
mov
xor
dec
mov
add
add
movd
mov
inc
rcrb
in
or
xchg
nop
fstpt
hlt
jns
xchg
loopne
jbe
add
icebp
lock
inc
outsb
icebp
lcall
mov
jno
pop
mov
orb
mov
and
jg
flds
dec
in
adc
repz
outsb
push
cld
push
jb
cmp
mov
cs
sti
mov
leave
std
mov
dec
push
stos
subl
xor
pop
call
pop
and
dec
pop
pop
leave
pop
lds
and
scas
jb
pop
negl
arpl
cli
add
cli
add
out
lcall
outsl
fiaddl
xchg
sarb
lods
jbe
mov
data16
push
push
stos
jg
fstpt
dec
inc
test
sahf
clc
enter
andb
add
push
outsl
jg
inc
in
insb
cli
imul
dec
cmp
int
roll
mov
int
dec
sub
jb
loope
sub
pop
in
into
adcb
rcrl
bound
decb
push
movsb
dec
mov
aaa
jg
shrl
or
xchg
movsl
mov
ds
pushf
adcl
sbb
cmp
lahf
adc
add
dec
push
clc
test
dec
cmp
push
cmp
add
clc
jmp
lods
jle
lcall
lods
aaa
rorl
sub
sub
aas
ret
sub
xorb
mov
std
xor
mov
xchg
pop
test
sbb
push
sti
inc
mov
sbb
xlat
ds
cmovno
outsl
icebp
and
iret
aas
or
lock
cs
mov
sbb
ja
sbb
fistps
jge
xor
fld1
jnp
nop
xchg
adc
xor
sbb
ss
and
xchg
mov
jo
adc
lahf
pop
push
pop
cmp
testb
sahf
movl
cmpl
and
in
xchg
and
mov
cltd
pop
xor
jp
mov
aaa
jbe
push
mov
jle
inc
lds
adc
lods
mov
lahf
mov
adc
lea
arpl
iret
lock
push
xor
cs
cmp
mov
adc
pushf
mov
stos
xlat
jmp
ds
xlat
jmp
inc
cmc
adc
mov
mov
frstor
bound
mov
xchg
ret
mov
push
shll
mov
push
imul
leave
mov
inc
ja
xor
push
and
or
mov
jp
jmp
inc
ss
mov
lcall
clc
push
lcall
inc
jb
insl
data16
testb
sbb
in
lods
scas
sub
jge
inc
fwait
lret
in
cmpsl
sbb
leave
es
dec
jmp
fists
je
inc
popa
pop
jmp
pop
es
dec
inc
pop
rcrl
lock
dec
sub
arpl
push
test
sub
inc
stos
aad
rcl
dec
rorl
outsl
out
mov
jns
jge
sbb
sub
jp
jmp
jp
add
add
int3
adc
rcrb
fs
adc
movzwl
les
cli
mov
out
or
out
and
mov
test
ja
and
imul
xchg
iret
mov
sahf
jecxz
and
xor
pop
cmp
int3
movsb
and
pushl
adc
dec
iret
enter
insl
mov
inc
push
mov
jge
xchg
xchg
in
xor
lcall
scas
popf
xchg
call
mov
xchg
stos
lret
les
lea
into
in
sahf
insl
jecxz
js
movsl
mov
jno
repnz
and
outsl
nop
xchg
jns
dec
lods
mov
jmp
mov
mov
lcall
outsl
ds
pusha
xor
xchg
test
pop
jmp
lods
int3
insb
repz
and
mov
jae
out
add
cmp
shl
adc
es
mov
dec
sub
bound
adc
mov
mov
cmp
mov
mov
out
xchg
push
and
repz
jle
or
push
inc
xchg
nop
jne
or
add
aas
push
daa
dec
push
sbb
daa
mov
jmp
xchg
push
and
push
inc
icebp
in
int
in
mov
pop
mov
in
sub
imull
or
push
push
cwtl
jecxz
inc
rolb
fwait
call
shll
test
push
in
lods
ret
shrl
dec
out
pop
imul
mov
xchg
mov
mov
sbb
nop
loop
addl
push
lret
mov
loopne
sarb
cmpsl
xchg
iret
fchs
cmp
leave
out
data16
push
fdiv
fdivl
shrl
insb
hlt
call
arpl
stc
cmp
xor
shrl
outsl
xchg
push
pop
and
sbb
rolb
addr16
mov
or
jbe
pop
add
int3
push
push
adc
xor
add
lret
icebp
sbb
nop
push
or
mov
mov
mov
xor
fimuls
mov
bound
mov
lret
aaa
arpl
fidivrl
sub
imul
push
dec
out
dec
xor
inc
mov
or
sbb
sub
mov
into
stos
lds
xchg
sbbb
sub
mov
mov
test
testb
ret
sbb
pop
mov
data16
and
fstl
lock
mov
es
js
iret
sbb
pushl
mov
and
pop
mov
icebp
mov
mov
mov
fmul
div
sbb
mov
mov
lods
cmp
test
xor
gs
imul
in
call
rcr
or
or
xchg
popf
rolb
push
dec
sub
mov
lea
rcl
sbb
pop
dec
sbb
dec
add
shll
cmp
dec
aad
sub
ljmp
ss
test
shl
inc
movsl
shrl
or
daa
fcomi
lahf
push
hlt
jns
sub
cmc
popf
fsubs
dec
test
add
cmp
addr16
inc
mov
arpl
dec
popf
or
push
mov
call
ja
cld
daa
jmp
jle
mov
cmp
sbb
mov
cmp
icebp
push
and
fnstenv
push
and
inc
outsl
mov
les
sbb
in
imulb
xor
lahf
adc
out
ror
icebp
push
mov
xlat
adc
mov
enter
aaa
lock
out
cmc
cs
sbbl
sti
mov
cmpsb
cmpsl
adc
enter
ret
in
push
xor
cmpsb
lahf
sub
sbb
test
jmp
push
dec
enter
lret
mov
cmp
fsubrl
lods
push
mov
xchg
mov
mov
std
fcmove
lret
cmp
mov
mov
mov
test
ss
mov
dec
jnp
xchg
mov
push
or
es
dec
cmp
cmpsb
test
pop
jno
int3
mov
xchg
call
dec
push
pop
das
into
daa
push
mov
bound
cmp
aad
test
cmp
aad
icebp
lret
movsl
call
jp
xor
dec
bnd
sub
inc
sub
add
jle
stos
sbb
cmpsl
adc
fsubrl
xchg
imul
inc
inc
mov
sub
lods
adc
mov
rorl
pop
cmp
xchg
xchg
test
mov
js
sar
sub
mov
outsb
xchg
mov
fiaddl
and
dec
out
fisttps
fsubrl
jne
push
and
xchg
cmpsb
push
jp
sub
in
jecxz
pop
mov
mov
push
add
push
cmpsb
je
adc
pop
push
sub
mov
xchg
mov
pushf
and
mov
je
mov
fbld
iret
es
sahf
in
cmpsl
or
adc
data16
pop
incw
mov
adc
jno
sbb
loope
sti
lock
test
jle
xchg
push
mov
mov
push
in
sub
popf
cmp
cmpsb
rcll
push
and
clc
sysenter
out
mov
mov
and
pusha
push
das
sub
jo
jne
mov
enter
push
sub
mov
lds
scas
fiaddl
fsqrt
neg
mov
incl
fnsave
hlt
mov
cmp
ficompl
jge
dec
insl
fsubp
in
or
arpl
in
cmp
jns
int3
ljmp
pop
adc
xlat
aam
in
mov
aad
gs
sti
dec
sbb
xchg
in
mov
pop
sbb
scas
jg
push
lock
sti
outsl
cmp
mov
jge
adc
cmp
jbe
lea
add
inc
movsl
jge
shll
fildll
mov
fstl
sbb
je
push
mov
push
gs
test
sub
es
and
lods
inc
mov
sub
mov
faddl
add
icebp
xchg
scas
shll
js
enter
pusha
push
aas
push
cli
or
mov
insl
xor
xchg
fsubrs
pop
push
pop
mov
add
push
push
fdivr
mov
pop
mov
xchg
sbb
push
cld
pop
cmp
cmpsb
push
sub
andl
ljmp
push
jne
and
adc
imul
push
mov
movsb
mov
mov
stos
movsb
mov
xchg
cltd
test
or
adc
in
into
test
sub
push
jmp
adc
rclb
mov
and
xchg
stos
cmpsb
mov
mov
stc
jmp
sbb
call
push
das
xchg
outsb
sbb
dec
mov
fldcw
mov
movsb
in
mov
push
pushf
das
aaa
inc
out
xchg
arpl
sub
ja
mov
stc
hlt
push
jmp
mov
cltd
in
out
mov
sub
imul
lahf
cmp
aas
dec
sbb
dec
ret
lea
dec
mov
pop
ret
jle
enter
push
push
add
or
push
mov
int
xchg
push
push
or
mov
cmp
inc
inc
sbb
adc
les
and
mov
lahf
dec
jg
dec
outsl
jbe
je
testb
or
leave
mov
out
data16
push
dec
jge
in
jl
in
lahf
or
mov
lahf
repz
notb
cltd
jge
sbb
aam
popf
fucom
sub
lock
popf
cmp
jg
jge
out
jae
insb
add
cmp
arpl
cli
ss
pop
push
mov
mov
dec
inc
cmpsl
inc
sbb
das
sub
mov
loop
adcl
mov
jno
je
pop
sbb
sub
es
mov
push
mov
pop
xchg
jns
pop
inc
popf
aam
dec
cmp
out
icebp
stc
mov
out
pop
bound
fs
mov
je
jno
adc
mov
idivb
add
inc
sarb
adc
sbbl
leave
xchg
shll
mov
in
cmp
mov
inc
inc
jle
popf
push
popa
jp
aam
fstps
jb
mov
test
pop
mov
lcall
mov
cmp
mov
arpl
pop
out
inc
pop
out
mulb
add
dec
test
add
in
jnp
sub
or
and
mov
enter
shll
mov
mov
sbb
mov
add
mov
aaa
ljmp
push
jg
iret
mov
jb
les
cmc
cmc
stc
adc
dec
cmp
push
jecxz
cmp
das
clc
lea
jb
lock
jns
stos
mov
out
rorl
add
fidivrl
pusha
fcmovne
mov
cmp
inc
mov
mov
jmp
mov
pop
push
orb
dec
dec
dec
imul
or
cmp
add
sbb
sub
push
or
jge
enter
pop
adc
imul
adc
sbb
in
testl
and
push
call
into
mov
pusha
test
pop
mov
aad
or
adcb
in
sub
adc
or
jmp
add
rcrl
mov
in
loopne
jne
aam
pop
and
xchg
jb
mov
shrl
stos
pop
rorl
cltd
inc
sbb
roll
in
and
xchg
aas
sub
xchg
ret
push
mov
pop
jp
rorl
mov
enter
iret
mov
ss
mov
call
add
iret
xor
sarl
add
cmp
xchg
fdivrl
jb
xor
repz
lods
rorb
dec
div
inc
mov
inc
pushf
divb
pop
push
jle
and
movsl
dec
mov
lds
cmc
in
cmpsl
out
popf
adc
out
test
shll
cmp
hlt
mov
adc
and
loopne
sub
pop
and
dec
xchg
push
mov
adc
pop
fdivrs
aad
xor
notl
loop
lret
xor
jne
aas
add
cmpsb
jae
rorb
cli
dec
jp
xchg
aaa
lahf
enter
out
mov
mov
push
cmpsb
cmp
loopne
jae
je
mov
cli
xchg
ficoms
repnz
aam
xchg
inc
movsb
dec
jl
fcmove
jmp
outsb
pop
mov
ret
scas
and
mov
dec
fldl
xchg
jb
imul
dec
lcall
stos
std
movsl
xchg
mov
xchg
cmc
and
out
mov
fistpl
mov
cmp
adc
ljmp
push
inc
ficomps
or
rol
ret
mov
in
push
jmp
dec
cmp
je
arpl
pop
xchg
insb
or
enter
and
adc
xchg
jns
movsl
stc
hlt
lea
dec
dec
clc
cmp
mov
movl
addr16
mov
nop
or
xor
shrb
dec
shll
std
mov
mov
ljmp
jl
adc
fstps
sbb
shrb
inc
xchg
jg
test
nop
jmp
outsb
cmp
cwtl
pop
popa
mov
iret
jmp
jnp
lock
sub
lods
imul
int
lods
addl
imul
jb
mov
jecxz
jb
aam
mov
scas
faddp
pop
sub
bound
popf
int
test
dec
aad
push
int
or
shll
push
adc
xchg
xchg
nop
pop
mov
ja
or
jne
xchg
or
xor
outsl
out
jo
ljmp
cmp
xchg
add
adc
mov
cltd
imul
insl
les
mov
cmpsl
jns
pop
sub
insb
fs
sub
or
movsb
push
in
fs
ficoml
adc
or
shlb
push
inc
movsb
and
cmp
flds
insb
dec
xchg
pop
pop
xchg
je
lahf
cmc
cld
ljmp
mov
mov
popf
mov
fiaddl
push
mov
aaa
xor
jne
scas
gs
scas
xor
fiaddl
cltd
dec
ljmp
scas
or
add
or
mov
scas
fidivs
xor
out
addr16
xor
stos
std
dec
and
sti
ret
rcll
scas
push
xchg
adc
adc
lea
pop
test
pop
fwait
inc
das
cmpsb
jge
in
insb
mov
adc
andb
sub
mov
xchg
or
test
inc
xchg
repz
fdivrs
dec
in
shr
rorl
iret
jnp
mov
jnp
popf
aaa
pushf
push
pop
and
and
dec
daa
adc
sbb
data16
in
fs
fs
addb
mov
loop
mov
ds
in
and
pop
out
inc
dec
lds
mov
insl
push
sbbb
dec
inc
cld
push
movsl
cs
arpl
sub
je
nop
pop
pop
xchg
mov
mov
pop
push
movl
mov
sub
loop
xchg
sub
addr16
into
scas
fmul
iret
adc
pop
dec
xor
ret
adc
sbb
popf
add
imul
xor
adc
outsb
pop
adc
pop
xor
push
jle
fwait
jl
and
jp
mov
mov
mov
insb
xor
aaa
repz
iret
jne
scas
push
in
shll
xchg
cmp
lods
mov
inc
mov
pop
dec
mov
loop
aaa
sti
sbb
cmp
std
push
nop
nop
ret
cmpsl
inc
stos
inc
clc
pop
fildll
mov
ret
outsb
nop
adc
pop
dec
xchg
xchg
mov
adc
push
pop
mov
cmp
lods
popa
cmc
fdivrs
pop
out
in
mov
xor
xchg
imul
fisttpll
hlt
add
xchg
push
push
les
orb
sub
push
mov
cli
jmp
imul
ljmp
ja
nop
rclb
repnz
or
shrl
mov
stc
cmp
ljmp
ret
pop
lahf
imul
mov
sahf
and
lahf
and
push
lods
ret
popf
aaa
pushf
ret
sahf
sbb
pop
xor
pushf
xchg
mov
lea
movsl
mov
inc
push
lods
lret
adc
and
pop
nop
test
mov
and
ja
or
out
lock
mov
test
out
mov
adc
and
sti
rclb
fnstsw
sub
add
sub
andl
jns
cmp
loopne
dec
fstpl
insb
ja
outsb
adcb
push
arpl
es
lods
dec
dec
push
fisubl
dec
adc
jnp
int
imul
mov
ljmp
xchg
subb
mov
dec
or
je
or
cmp
add
adc
loop
jge
clc
outsb
pop
xchg
cmp
and
stos
rcll
movsb
and
sbb
sbb
or
cld
and
fnstcw
jae
data16
dec
cmc
mov
int3
cmpsb
and
pop
out
push
jle
or
shll
addb
loop
sti
aaa
movb
mov
outsb
xchg
shlb
nop
fcomi
sub
out
jno
fbstp
cmp
scas
scas
jae
shr
ret
adc
in
scas
and
inc
inc
fwait
pop
xor
stos
daa
pop
mov
stos
xchg
in
sub
sti
jns
mov
sbb
fistpll
in
aas
and
aaa
jg
inc
dec
loop
cmpsb
out
out
inc
int
pop
jp
sti
adc
sub
aam
jbe
dec
in
cld
aaa
cwtl
push
in
push
fucomi
das
lret
and
flds
xor
stc
push
leave
mov
cli
sbb
xchg
mov
push
out
lods
es
xor
fidivs
jge
cmp
add
adc
mov
mov
cmp
out
icebp
xchg
ds
mov
jge
repz
movsl
push
aaa
dec
xor
scas
mov
pop
push
mov
and
pop
inc
push
xor
xor
mov
mov
add
xchg
out
sbb
clc
mov
rcll
and
mov
or
xor
mov
or
test
in
adc
gs
test
add
pop
push
pop
out
push
fwait
arpl
jns
popf
aam
stc
adc
cmp
dec
out
push
adc
leave
adc
or
pushl
jb
and
mov
aam
cmp
mov
clc
mov
pop
imull
mov
aam
jp
sub
stos
testl
lods
fs
mov
jecxz
push
push
dec
pop
mul
xor
mov
lock
pop
pop
mov
xchg
inc
fadds
and
aad
inc
lods
xchg
cmpsb
ljmp
add
std
fidivrs
loope
cmpsl
inc
insl
mov
clc
dec
fcmovbe
testb
aaa
fcoml
xor
pop
add
stc
rcr
fcoml
jmp
push
outsl
jae
mov
hlt
xorl
test
stos
loopne
outsb
mov
lods
jmp
mov
sub
push
sbb
lahf
iret
mov
jg
adc
test
sbb
js
cwtl
cmc
movl
out
lret
mov
fldenv
xchg
fnstsw
mov
xor
test
pop
push
dec
sub
xorb
adc
mov
movsl
fadds
add
mov
adc
jno
add
mov
loope
dec
jno
sbb
mov
data16
clc
les
test
mov
in
fcmovne
loop
inc
jl
repz
bound
rcrl
insl
hlt
xchg
mov
jo
pop
mov
or
aam
fnstcw
xchg
fmul
std
jae
aaa
jns
cli
in
sbb
fdivs
pop
sti
les
shll
aas
repnz
mov
fucomi
pop
add
pop
sti
frstor
jp
jg
add
lret
push
sub
or
mov
repz
jns
stos
scas
cmpsb
repnz
xchg
dec
std
xchg
xchg
fmul
mov
xchg
scas
dec
fcomip
lahf
cli
movsb
mov
cmpsl
push
jp
incl
shlb
fwait
sub
leave
xchg
jae
out
ljmp
dec
rorl
daa
cmc
stos
popa
jbe
push
int
into
inc
call
clc
mov
jns
cmp
pop
cmp
ss
addr16
imul
loop
fsubs
les
jae
cmp
aam
out
fcoms
negl
lahf
stos
jle
cmpsl
jmp
push
ret
add
cmp
cmpsl
aad
ss
fimuls
pmaddwd
fimull
in
jle
mov
or
insb
ret
dec
iret
jae
pop
lret
sub
cmp
movsl
loope
testb
aam
das
out
cmpl
popa
das
outsl
mov
add
sbb
mov
dec
imull
ror
ss
mov
pop
add
mov
cmp
movl
dec
xchg
sub
in
sbb
test
cmp
sbbb
lret
frstor
jne
ret
movsl
cmp
rorb
ds
jae
es
inc
dec
aaa
or
adc
push
push
pop
icebp
cltd
out
jbe
pusha
lea
inc
pop
add
and
mov
fidivs
sub
push
dec
add
iret
add
lret
ret
dec
mov
pop
fnsave
xchg
pop
cs
mov
sti
or
and
mov
mov
adc
and
test
pop
or
rcrb
pop
arpl
push
in
cs
fdivs
insb
sti
xchg
pushf
stc
shll
cld
jmp
aam
lret
or
test
loope
dec
ja
fnstsw
and
xor
mov
push
mov
jbe
stos
jl
mov
mov
in
test
adc
mov
lods
jno
lock
jnp
and
push
dec
dec
cmp
push
fidivrl
scas
pop
push
push
lret
pop
int3
jae
xor
out
dec
push
bswap
jnp
sbb
jl
mov
movsb
mov
push
aad
mov
lods
ror
in
rol
cwtl
lods
test
push
push
xchg
cmp
xchg
imul
dec
insl
movsb
cld
shll
xchg
ficompl
shlb
push
out
xchg
mov
cmp
xchg
ja
pop
cmp
cld
adc
and
pop
mov
dec
in
data16
rcrb
dec
sbb
pop
mov
jp
pop
sub
and
xor
xchg
xchg
movsb
xchg
push
test
mov
mov
icebp
movsb
ds
cmpsb
insb
repz
sbb
sub
loop
lock
jecxz
repnz
lods
ret
es
push
adcl
xor
xchg
mov
insb
pop
lds
popf
and
xchg
xchg
decl
fmuls
inc
mov
inc
push
pop
in
mov
xor
call
jne
push
test
out
nop
fsubrl
xchg
fsubrl
sbb
push
push
jo
xorb
dec
ja
lock
pop
push
mov
test
test
mov
xchg
cmpsb
es
outsl
sub
mov
je
push
push
fsub
lret
push
push
leave
loopne
lds
outsl
mov
xor
and
rol
enter
es
push
mov
pop
lods
insb
adc
xchg
orl
cmpsl
xchg
pop
imul
and
inc
jge
ljmp
jle
xor
stc
subb
sub
cmp
push
pop
lret
jbe
in
vmovaps
and
or
fists
incl
out
inc
cmpsb
cmpsl
push
icebp
adc
push
test
add
inc
mov
and
xchg
cmpb
nop
ljmp
rclb
les
test
mov
xor
xchg
or
loope
repnz
push
sbb
imul
dec
scas
push
icebp
xor
icebp
sub
xchg
popa
movsl
fmull
or
push
cmp
insl
das
addb
repnz
arpl
push
das
imul
outsl
mov
adc
imul
insb
mov
fwait
out
mov
scas
add
mov
mov
inc
out
xchg
pusha
testb
inc
pop
les
fistpll
shrb
in
xchg
ret
xor
aad
or
out
jb
cmc
mov
sti
ret
cli
mov
dec
call
cmp
and
cmp
adc
in
mov
ret
adc
inc
push
sub
cltd
dec
lahf
aaa
mov
cmp
cmpsl
imul
dec
inc
aam
rolb
sti
repz
sti
sti
fwait
shll
jbe
adc
mov
sbb
or
fwait
mov
out
dec
lret
pop
adc
push
inc
dec
sub
call
test
xchg
push
or
lret
adc
inc
jne
mov
mov
insb
aaa
cs
inc
movsl
iret
out
enter
jl
pop
mov
mov
fmull
and
adc
mov
lret
add
rcrl
xlat
stos
mov
int
popf
mov
add
ret
sub
lea
pop
add
cli
pushf
jb
and
dec
xchg
out
paddq
sbb
mov
neg
or
int
lret
mov
inc
jmp
sti
pop
out
call
cmpsb
loope
push
mov
ss
incb
push
ret
or
divl
pop
dec
jp
ret
call
jecxz
dec
xlat
dec
sbb
loope
popa
pop
mov
test
pop
inc
pop
popa
cmp
push
adc
out
leave
mov
inc
jae
aad
jbe
adc
insb
mov
adc
sti
cs
into
jnp
mov
dec
int3
jae
mov
stos
adc
rorl
or
jge
testb
out
pushf
ss
int3
jge
inc
or
arpl
pop
cmp
pslld
mov
add
shrl
dec
or
mov
outsb
or
in
xor
fstps
pop
pop
cltd
mov
xor
sbb
mov
mov
and
loop
inc
dec
dec
imul
int3
push
jnp
jno
pop
sub
pop
les
dec
fcmovu
jecxz
jg
cld
mov
xor
dec
mov
cmp
jbe
mov
popf
popf
sub
aam
je
xchg
dec
outsl
or
std
push
pop
push
xor
sub
mov
fwait
jae
lret
out
lds
jo
push
adc
xchg
mov
mov
and
xchg
inc
xchg
xor
sub
cmpsb
mov
adc
xchg
fsts
sbb
sahf
dec
xor
push
lea
lea
sub
mov
mov
nop
mov
hlt
inc
pop
xchg
test
cmp
or
push
das
sub
loope
cmp
push
xor
loop
jge
loop
add
jp
mov
icebp
in
imul
jns
movsl
cmp
outsb
in
sub
test
leave
cmp
addr16
xchg
xchg
adc
adc
sub
xchg
ret
stos
lahf
cmpsl
push
sbb
jl
ds
out
cmpsb
stos
std
out
xor
mov
push
or
cmp
sbb
inc
imul
and
lock
movsb
or
dec
loopne
jmp
lods
jne
adc
jne
movsb
rcrb
or
mov
sbb
and
xor
pop
aas
leave
and
pushl
jns
leave
mov
xchg
in
xchg
mov
xchg
sti
inc
jnp
shlb
icebp
out
cmp
enter
stc
in
xchg
ret
jae
adc
push
aad
repz
ja
push
js
aaa
in
mov
mov
lock
or
negl
gs
or
sub
movsl
cmpsb
jo
rcl
xor
es
mov
repz
xchg
add
adc
push
sbb
rcrl
mov
push
adc
hlt
nop
and
in
adc
shll
cmp
mov
pop
mov
push
arpl
call
leave
xchg
enter
out
fldt
inc
mov
dec
les
mov
sbb
push
xor
hlt
aam
rorl
cli
sbb
sahf
inc
adc
adc
xchg
xchg
dec
push
out
dec
hlt
push
pop
mov
pop
jno
arpl
cli
popa
in
out
xchg
cmp
xor
xchg
mov
cmpsl
lods
stos
cs
xor
popa
subb
test
jnp
jae
or
cmp
mov
cli
movsl
inc
mov
pop
fstpt
addr16
pop
xchg
xor
cltd
sbbb
push
cltd
inc
hlt
cltd
dec
sbb
jle
dec
jmp
lcall
mov
lock
es
out
in
cmpsl
jb
cli
sub
push
mov
popa
into
shrl
sarl
insl
dec
dec
ja
cmc
xchg
enter
or
push
and
test
test
mov
stc
call
add
dec
cmp
adc
testl
sub
jg
arpl
jl
xor
mov
pop
xchg
loop
pop
inc
adc
mov
cli
fmuls
sbb
mov
dec
push
les
inc
fcomp
psrlq
push
popa
cmp
loop
jp
mov
mov
dec
jge
mov
adc
test
sbbl
cmp
gs
jnp
mov
mov
push
xchg
push
mov
dec
mov
popf
push
stos
and
mov
xchg
sti
lds
out
aaa
das
lcall
movb
mov
inc
inc
fisubl
mov
xchg
mov
mov
lods
dec
jb
add
inc
loop
cmp
aad
adc
sti
adc
pop
aas
push
push
stos
fistl
lea
jecxz
scas
loopne
mov
cmp
xor
push
mov
orl
das
dec
ret
jge
clc
pop
dec
stos
aas
or
adc
or
dec
pusha
notb
xchg
loope
lret
out
sub
inc
jg
lret
sbb
ret
pop
popa
lcall
xor
dec
pop
xchg
and
cmp
jnp
and
inc
int
lods
out
mov
inc
sarl
imul
dec
pop
imull
lea
movsl
ja
lds
outsb
inc
cld
es
test
adc
outsl
ljmp
xchg
cli
aaa
out
js
inc
push
fwait
jge
sahf
scas
out
adc
pop
xchg
les
mov
jmp
and
xor
push
sub
nop
pop
sub
fs
frstor
pushf
adc
cmp
fiaddl
int3
lds
mov
cmpl
sbbb
lds
pop
sub
cmp
shlb
add
aas
mov
and
ja
mov
filds
jns
movsbl
jo
pop
and
mov
out
mov
inc
roll
movsl
inc
xchg
xor
cld
mov
aaa
ss
and
mov
mov
jae
sbb
lcall
mov
xchg
and
gs
into
testl
mov
cld
pop
cltd
xor
jmp
pop
pop
cmp
enter
je
push
or
fsubrs
lods
mov
test
add
das
mov
ffreep
jp
in
mov
pop
mov
shll
cmp
addr16
mov
sbb
das
inc
sti
and
mov
or
mov
mov
and
xchg
repnz
sbb
insb
cmc
dec
mov
pop
ret
loopne
adc
int3
inc
jl
jne
mov
inc
sahf
rcrb
stos
lods
cli
jecxz
jg
pop
fisttpll
lret
mov
sar
shrb
icebp
rorl
loopne
jb
jmp
cmpsb
fwait
loop
xchg
ret
mov
pop
ljmp
or
cmp
hlt
dec
mov
fs
out
shrb
add
testb
sbb
insl
adc
add
jmp
leave
adc
jns
xchg
test
ja
pop
fbstp
orl
cmp
mov
ret
add
bswap
xor
out
jmp
insb
fisttpll
iret
pop
das
cmp
lret
mov
push
cld
xor
jne
adc
insl
dec
push
imul
xlat
filds
xor
faddl
daa
mov
mov
or
inc
repnz
adc
pusha
jp
jnp
cmc
fnstsw
dec
or
lret
repz
repnz
jle
das
int3
add
in
mov
mov
fmuls
mov
ljmp
xor
inc
inc
pop
sub
or
sbb
inc
cmp
pop
mov
sub
pop
mov
mov
push
pushf
movsl
jo
jnp
sbb
cmp
in
mov
fimuls
cli
mov
in
sub
mov
pop
sbb
mov
xor
ret
add
cltd
push
pop
in
insl
test
loop
movsb
adc
shll
add
jg
inc
insl
in
mov
cltd
mov
ret
rclb
add
cmc
adc
sub
jb
add
push
lea
mov
bound
sbb
leave
stos
or
mov
sbb
in
inc
mov
es
dec
popf
leave
scas
lock
dec
mov
mov
mov
cmp
push
data16
cmpsl
xor
jg
sbb
rclb
push
pop
loopne
test
ljmp
push
test
repz
adc
mov
sub
jb
daa
sbb
cmc
inc
dec
mov
out
mov
sbb
call
add
push
push
mov
pop
jns
xorl
push
lret
data16
push
jecxz
sbb
inc
rolb
mov
dec
ret
jecxz
int
int
mov
mov
inc
pop
adc
push
in
fcoml
cmpsb
push
inc
sbb
push
fisttps
adc
xor
bound
push
ret
mov
fstpl
cmp
leave
sub
add
into
and
shr
xchg
or
test
dec
dec
xchg
mov
dec
cmp
repnz
popa
dec
loop
into
shl
and
fs
lcall
ret
ss
xor
cmp
mov
loop
mov
pop
mov
dec
or
aad
pop
aaa
test
mov
xchg
and
leave
scas
xchg
push
cmp
add
inc
das
mov
subb
mov
repz
add
sahf
es
dec
or
sub
pop
std
cli
sti
idiv
jg
pop
xor
leave
pushf
int
add
lea
ja
and
mov
cmp
mov
idivb
fs
decl
dec
adc
out
push
dec
and
mov
outsl
ret
adc
xor
sahf
or
fstpt
fsubl
sbb
pop
pop
jl
cmp
mov
push
aaa
cmp
add
out
imul
insb
adc
cmp
push
adc
push
lods
jmp
iret
sub
lods
sbb
outsl
and
in
mov
fildll
cmp
xor
mov
aaa
cmp
and
or
add
or
iret
mov
and
adc
div
int
sub
and
dec
mov
hlt
repnz
cmpsb
cmpsl
inc
mov
inc
or
cwtl
mov
imul
xor
sbb
cli
pushf
push
mov
mov
mov
sbbb
cmpb
sbb
popa
cld
xchg
sub
fisubrs
notl
xchg
aaa
mov
dec
adc
or
mov
mov
mov
test
fistl
popf
jg
xchg
cmp
fnsave
mov
cmp
cltd
mov
imul
dec
lcall
je
xor
mov
mov
mov
aas
arpl
outsb
pop
jmp
mul
int3
xor
push
aam
adc
mov
jmp
or
shll
pop
loop
xor
or
xchg
inc
pop
or
inc
imul
mov
adc
cmp
xchg
clc
xchg
fsubl
cmp
adc
push
mov
push
adc
rcrl
cmpsb
xchg
xor
mov
dec
push
mov
jl
mov
lret
daa
and
movswl
mov
jle
or
jmp
or
ror
cmp
xor
mov
les
add
jmp
in
data16
clc
pop
aas
sti
sub
mov
sub
idiv
and
sub
in
mov
xchg
adc
cwtl
cs
cmpsl
cmp
ds
jnp
ret
ja
aam
lock
int3
test
mov
repz
jmp
pop
push
dec
into
scas
xlat
or
dec
leave
lret
aad
adc
and
push
and
inc
cmp
or
lds
mov
es
sbb
aas
cs
daa
in
into
in
popf
cmp
or
jge
cltd
sub
mov
not
dec
into
adc
leave
lds
shlb
lahf
push
aam
or
inc
push
and
mov
ret
xchg
xor
push
fs
sahf
and
lods
and
push
add
inc
aaa
stos
xchg
pop
nop
mov
push
cmp
mov
stc
mov
out
repnz
mov
xchg
or
testl
pusha
fistpll
clts
lret
sahf
or
lods
or
outsb
std
mov
pop
js
aad
push
push
push
and
cld
nop
sbb
fildll
outsb
das
lods
xchg
jg
sahf
push
call
mov
iret
into
addr16
push
mov
jb
call
mov
inc
dec
les
add
xchg
lds
jl
push
jns
xor
repz
test
cmp
in
dec
xchg
int
or
test
sbb
sub
add
inc
mov
pop
pop
adc
add
and
jmp
jne
arpl
dec
enter
pop
imul
fldl
push
pop
and
clc
cs
data16
add
sbb
or
push
and
mov
mov
test
aas
aaa
push
fsts
pop
out
cmp
dec
dec
popf
mov
cmp
jae
or
mov
outsb
jae
mov
enter
sbb
test
cmp
xchg
fldcw
in
enter
xor
ds
push
sub
in
jns
mov
movsl
fs
xor
xchg
xor
bound
jbe
xchg
enter
mov
jmp
and
mov
xor
imul
xor
mov
add
pop
int3
leave
sub
idivl
mov
ljmp
cmp
inc
ja
sarl
das
add
mov
mov
push
jnp
ljmp
fisttpl
in
push
dec
popa
mov
test
mov
orb
pop
push
dec
mov
out
inc
add
jp
inc
aad
and
loopne
mov
inc
pop
xchg
out
shlb
mov
in
pop
int3
movsl
cltd
imul
lock
inc
and
je
jmp
bound
mov
mov
in
out
mov
addr16
jb
sub
pop
adc
adc
pusha
fists
push
mov
rcl
and
aaa
pop
ret
out
in
push
cwtl
pop
and
fistl
mov
push
cmpsb
and
pop
sbb
scas
pusha
dec
cmp
and
movsb
jb
xchg
mov
inc
dec
xchg
testb
lods
or
push
mov
sub
mov
out
pop
pop
mov
sub
pop
pop
mov
dec
sub
cmp
cmp
hlt
cld
xchg
popf
in
lods
insb
out
fisubrs
popa
imul
pop
fcomps
sahf
pop
leave
adc
sbb
push
pop
sub
pop
out
cmp
loopne
out
imul
push
push
mov
test
les
ljmp
add
test
xchg
add
xchg
pop
jbe
mov
ja
mov
aad
push
mov
enter
fwait
jne
insb
and
or
add
pop
xchg
lods
shrl
ret
mov
push
cmp
movsl
cmp
dec
imul
cmc
jns
hlt
hlt
cld
cmp
fistpl
rorb
pop
mov
cmovl
inc
jecxz
jecxz
sahf
cld
mov
sbb
sub
out
lock
push
xor
cld
hlt
leave
or
mov
jl
data16
pop
push
dec
and
call
mov
insb
and
subl
aas
or
imul
cmp
fstpt
lock
pop
mov
das
test
push
xchg
test
sub
or
insb
or
shll
nop
xchg
pop
push
pslld
or
fistpll
mov
loopne
loope
mov
insl
loop
into
ret
cmp
int
xchg
mov
mov
repnz
addr16
out
xor
mov
pop
rcr
jae
sub
jo
push
out
lds
jp
sbb
add
cmpsb
sahf
aad
and
xchg
mov
fucomp
shll
test
add
hlt
mov
test
dec
mov
cmpsb
stos
in
sahf
jl
dec
sub
pusha
xchg
add
mov
scas
xor
add
push
int3
jbe
xchg
movsb
xchg
nop
fistpll
lret
out
push
sbb
popa
jmp
lahf
and
daa
into
lock
popf
push
mov
movsl
push
pop
pushf
ror
inc
mov
cltd
test
mov
dec
test
ja
sub
in
jne
mov
cmpsb
mov
stos
stos
jmp
shl
out
sti
pop
aad
push
outsb
mov
rol
adc
out
fistpl
cmpsb
rorb
ret
je
call
dec
sub
jmp
fmuls
daa
xor
or
sahf
leave
adc
xchg
dec
gs
aas
inc
arpl
call
jmp
scas
and
stos
jmp
and
add
ss
mov
sbb
out
pop
out
xor
imul
insb
mov
lods
xor
bound
repz
pop
lods
and
sbb
inc
jae
jo
sbb
test
fisttps
add
xchg
notb
and
dec
and
cltd
lahf
push
mov
mov
roll
rcl
outsb
and
imul
out
cmpl
std
dec
xor
sti
popf
xor
ficomps
stos
mov
pop
mov
lock
loope
inc
add
push
decl
add
or
mov
cli
iret
pusha
pushf
mov
push
cwtl
iret
push
adc
outsb
jns,pt
pop
fsubs
and
loop
inc
cmc
lret
inc
stos
mov
loopne
jns
stc
mov
or
insb
mov
loope
jle
insb
pop
out
lret
mov
mov
push
add
jl
jo
fcomps
mov
pop
mov
test
les
ss
or
lahf
shl
cltd
hlt
inc
add
out
vrsqrtss
xchg
mov
outsb
jge
movsb
cmp
enter
in
popf
mov
mov
icebp
adc
cld
into
fcmovu
inc
ja
add
jmp
jg
mov
sarl
ja
sbb
mov
inc
mov
repz
pusha
incb
xor
cs
cwtl
mov
push
out
or
jge
inc
adc
fdivl
cwtl
or
pop
sub
pop
mov
sarl
iret
nop
push
dec
push
jns
insb
xchg
push
nop
xlat
daa
mov
cmp
xchg
shll
adc
gs
cmp
aam
pop
mov
xor
dec
adc
xchg
sahf
pop
in
pushf
push
and
fs
fstpl
insl
and
xor
xchg
clc
cmp
call
mov
jge
sbb
pop
es
xchg
cli
sbb
xchg
movsb
and
pop
jae
iret
add
shll
or
pop
or
push
subb
inc
lods
scas
cmp
outsl
pushf
dec
int3
mov
lods
cmpsl
rclb
les
add
ja
push
outsb
push
loopne
cmp
pop
mov
inc
fnstenv
jbe
inc
fnstenv
int
lods
xchg
xor
inc
cmp
lcall
adc
push
and
or
movsb
stc
or
push
add
ret
mov
jne
mov
scas
shrl
int
push
js
test
imul
je
xchg
and
push
xchg
mov
imul
pop
data16
insb
sahf
add
xchg
fisttpll
in
lods
popf
cmp
pushf
mov
cmp
imul
mov
bound
jg
stc
nop
imul
push
insl
cwtl
outsl
rorl
in
mov
sbb
dec
jp
test
adc
inc
jno
jbe
pop
xchg
cmp
adc
aaa
cltd
xchg
xor
out
sbb
adc
jbe
adc
out
dec
sbb
mov
mov
cmp
stos
fwait
lret
mov
int
inc
mov
cmp
fwait
ja
sub
push
and
in
push
lea
add
jne
mov
jne
into
push
mov
adc
or
dec
loope
mov
sub
icebp
and
jae
sub
lret
mov
lahf
lcall
pushf
lea
out
push
inc
xchg
in
pop
out
jecxz
mov
in
fimuls
std
mov
into
stos
jne
pop
jp
mov
cmp
outsl
bswap
cmp
pop
loopne
cmp
movb
xlat
leave
out
xor
push
xchg
hlt
xchg
push
out
mov
cli
push
cmp
cmc
nop
or
push
cmp
rcll
rcrb
add
and
mov
xchg
js
icebp
nop
es
aaa
xor
psrld
jp
xorb
push
and
mov
and
mov
ja
ror
fimull
mov
out
cmp
into
jle
sti
sbb
in
cmp
cmpsl
mov
outsl
mov
cs
push
out
inc
inc
int
lock
mov
int3
cmp
cli
leave
add
shll
cmpsl
icebp
leave
mov
xlat
ffreep
fbld
mov
inc
sbb
push
rclb
jno
mov
xorb
adc
add
mov
ss
push
push
mov
mov
inc
sbbb
sub
popf
int
inc
loope
outsl
imul
insb
pop
push
pop
xchg
pop
lds
pop
push
xor
fs
cwtl
inc
in
in
arpl
push
insl
push
push
gs
lds
les
add
push
jp
std
icebp
dec
cmc
jae
rcrb
das
rcr
hlt
xor
es
shl
or
test
lods
nop
or
inc
fsubl
mov
xchg
or
xor
ja
popl
xchg
sub
stos
shrb
mov
ret
add
fistps
jb
in
mov
inc
mov
and
ret
aaa
les
jle
js
push
sbb
sti
std
cmc
mov
das
mull
jae
repnz
mov
hlt
fdivrl
mov
sub
mov
mov
jb
and
jne
push
mov
leave
jb
pop
dec
int3
and
into
xchg
in
push
inc
mulb
andl
push
mov
rcll
jnp
cmp
dec
jb
xor
in
mov
les
je
lods
or
inc
and
xchg
jecxz
jnp
fs
jnp
shll
cmp
sbb
jecxz
pop
movsb
or
lds
mov
movsb
jmp
fidivl
jae
xor
in
dec
insb
clc
out
or
mov
loopne
adc
add
mov
push
out
cmc
movsb
push
je
iret
push
inc
push
fadd
out
xchg
pop
lods
loopne
ljmp
testl
or
jo
aam
mov
push
cwtl
les
data16
xor
and
xor
push
mov
insb
leave
mov
xchg
fdivr
movsl
add
inc
insb
lea
imul
cmp
cmp
js
into
cmp
shr
mov
dec
mov
inc
dec
jmp
outsb
push
int3
loopne
mov
dec
loope
ja
dec
pop
adc
jno
dec
jmp
mov
sbbb
cli
add
mov
xor
lea
jp
xchg
adc
repz
sub
mov
mov
adc
xlat
pop
xor
sarb
je
int3
in
rcrb
xchg
aad
fnsave
out
sub
shr
lock
or
mov
mov
pop
fsubr
dec
pushf
jae
fcmove
dec
js
cmp
xor
cmp
pop
sub
scas
push
icebp
gs
mov
rcr
push
sub
and
dec
lcall
nop
push
fs
jmp
movsl
aaa
xchg
es
dec
sbb
dec
lahf
add
jecxz
hlt
inc
sbb
cs
jo
jne
and
hlt
push
fadd
das
repz
mov
adc
movsl
xorb
iret
pop
outsl
or
in
lock
ret
adc
aaa
push
adc
add
sbb
mov
shr
jne
inc
je
into
push
arpl
jle
arpl
pop
popl
push
lods
mov
cmovbe
cmp
push
pop
mov
jp
repz
in
lock
in
pop
cltd
sub
je
idivb
mov
lods
popf
mov
adcb
jle
imul
cmp
push
inc
pop
push
or
mov
jnp
push
call
and
addr16
mov
mov
lock
daa
lret
in
xchg
in
pop
nop
pop
in
cltd
jl
out
lret
lret
les
jle
daa
shll
nop
mov
cmpsb
mov
insb
mov
stc
add
movsb
xor
or
or
mov
es
mov
loop
jnp
xchg
cmp
in
mov
lret
int3
cli
es
inc
cmp
inc
jmp
jmp
xor
jb
pop
shlb
icebp
enter
pop
dec
adc
int
xchg
fcoml
aam
aas
ss
and
pop
arpl
scas
scas
dec
push
or
mov
add
iret
sbb
aam
sub
xor
mov
xchg
or
sbb
cmc
mov
test
adc
ja
pop
mov
xlat
dec
push
bnd
jne
sti
inc
clc
aad
int3
sti
fdivrs
mov
jns
mov
push
pop
loopne
push
sbb
inc
insb
aad
cli
iret
xor
add
mov
adc
pop
jmp
dec
into
and
lea
mov
sbb
icebp
lds
std
or
dec
add
pop
sar
es
mov
ss
gs
or
pop
cs
add
mov
test
push
jnp
sub
mov
aaa
xchg
outsl
call
std
arpl
addl
or
or
gs
add
and
stos
out
dec
pop
xchg
es
mov
jle
mov
lods
movsl
movsb
imul
inc
mov
jg
fisttpl
inc
aad
pop
call
dec
scas
xor
cltd
push
mov
sbb
or
pop
stos
pop
dec
inc
fucomp
imul
mov
or
cmpb
stos
sahf
mov
pop
xlat
jo
sbb
inc
sub
inc
adc
das
js
es
mov
xchg
inc
js
and
inc
dec
push
dec
pop
mov
rcr
mov
and
pop
nop
dec
pop
cmc
inc
dec
les
add
nop
sub
sub
sti
neg
adc
jmp
or
mov
outsb
ficomps
lods
sub
pop
cmpsb
lock
test
ret
aaa
adc
xchg
cwtl
shlb
cltd
mov
pop
dec
stos
pop
sub
push
stc
jb
cmpb
aaa
xchg
jge
pop
mov
int3
cmp
jg
mov
mov
fsubl
out
sti
add
in
or
mov
ret
mov
cs
sub
dec
xorl
lcall
pop
add
loope
shll
push
fcomps
mov
mov
scas
push
sbb
shl
or
or
xchg
insl
je
xchg
push
sub
movsb
push
sbb
mov
jp
and
test
or
inc
sub
div
jbe
pusha
lret
pop
pushf
add
inc
cmp
xor
pushf
fcom
sub
xchg
xchg
mov
cs
pop
addl
out
subl
jbe
test
rcrl
push
loop
pusha
cmpsb
mov
test
icebp
push
int3
fimuls
jecxz
add
jecxz
jae
mov
push
fbstp
test
cmp
int
mov
pop
shrb
mov
das
xlat
cmp
xchg
fs
mov
push
ss
scas
imul
dec
mov
pushf
inc
pop
orb
mov
xorl
jns
insb
rorl
adc
dec
adc
icebp
xor
sbbl
mov
cmp
in
mov
ljmp
and
aam
out
cmpl
sahf
idivl
jnp
insb
and
pop
sbbl
test
or
dec
jnp
dec
and
and
cwtl
jp
ja
mov
fucomp
add
jae
into
pop
sub
push
sbb
mov
mov
pop
ds
lret
movsb
xchg
in
cmp
inc
sbb
sub
push
or
add
gs
aam
cmc
test
push
jle
mov
mov
sub
aam
xchg
sbb
out
pop
xchg
aaa
imul
stos
popf
cmp
cmpsl
mov
gs
nop
jecxz
cld
pushf
fldcw
mov
mov
jp
sub
fidivrl
gs
test
xchg
movsl
add
mov
jne
iret
je
inc
pop
rcr
inc
xchg
inc
push
mov
jno
push
jl
fidivl
mov
adc
pop
mov
or
cmp
dec
mov
push
nop
outsb
out
decb
cmp
pmulhuw
out
add
out
fcoms
pop
xchg
sarl
enter
int
mov
cmp
jmp
push
inc
test
scas
push
out
sbb
les
push
insl
or
inc
lods
add
sarb
sub
inc
or
cmp
jns
notl
adc
pusha
or
ja
mov
jae
pop
aaa
pop
mov
clc
push
pop
fnstcw
add
push
and
mov
sbb
xchg
jg
mov
mov
add
insb
push
lods
pop
icebp
dec
test
andl
dec
test
jmp
adc
jmp
int3
fiaddl
mov
js
inc
enter
ret
mov
fwait
lret
mov
mov
mov
mov
xorb
push
mov
nop
lds
movsb
mov
insl
and
inc
mov
sbb
fs
push
add
movsl
push
or
pop
or
jecxz
lcall
fiadds
fwait
push
inc
and
out
aam
sub
add
jns
mov
xchg
rol
cmp
mov
sahf
pop
lcall
js
lods
xchg
adc
mov
xor
add
icebp
jp
call
dec
movl
push
imul
into
add
in
and
or
fstpt
cmc
fnsave
pop
repnz
ljmp
aad
sti
aas
dec
cmp
sbb
cmp
dec
jns
lock
xchg
addr16
sub
push
sahf
fwait
aad
jecxz
jb
aad
insb
dec
data16
dec
pop
inc
sub
test
mov
subb
test
lods
repnz
mov
cmp
call
stos
jnp
jo
push
sub
das
imul
or
dec
mov
sbb
xchg
or
mov
insl
sbb
std
lahf
int3
jne
cmc
cmp
push
imul
adc
mov
pop
movsb
pop
in
ja
mov
repnz
std
cmp
jae
and
dec
popf
jbe
inc
pop
ss
jnp
push
mov
lock
or
xlat
mov
arpl
mov
lods
jl
mov
outsb
xor
outsb
pop
fcoms
enter
mov
pop
adc
fdivrs
fisubs
xchg
cmp
mov
cmc
das
mov
ljmp
stos
cmpsl
jp
adc
push
jbe
add
mov
adc
xchg
sbb
ds
es
pop
dec
mov
sbb
sahf
in
andnps
add
not
mov
mov
lods
popaw
mov
inc
prefetch
lret
leave
insl
lcall
pop
out
int3
push
mov
adc
add
mov
lea
scas
nop
sub
es
shr
adc
in
call
stos
loop
inc
cmc
add
shr
pop
cmp
lret
dec
nop
stc
jnp
shl
xchg
xlat
aaa
sbb
outsl
mov
dec
out
in
mov
arpl
das
pusha
push
scas
out
xor
cmc
outsl
jge
add
sti
rcl
xor
les
push
movsb
xchg
fwait
mov
inc
xor
xor
fiaddl
loope
mov
scas
xchg
dec
scas
xor
outsb
jno
pop
xor
rol
mov
and
insl
add
cltd
enter
mov
jle
xchg
aam
call
scas
movsl
popa
add
faddl
push
cmpsl
jnp
xchg
jnp
fnstsw
out
pop
mov
mov
cmp
cwtl
insb
mov
jnp
jne
dec
mov
push
jnp
jae
jbe
add
lahf
shrb
stc
ss
ret
mov
jecxz
je
test
pusha
inc
mov
adc
push
inc
sbb
mov
leave
mov
sbb
dec
int3
add
fisubrs
cmp
into
ds
cwtl
inc
int
xchg
inc
and
push
pop
add
flds
mov
and
sub
das
test
ret
mov
pop
cmp
in
imul
pop
sbb
dec
dec
or
pop
repnz
push
adc
sub
out
cmp
cld
or
or
push
popa
add
imul
push
arpl
lret
cmp
inc
fucomi
andl
add
push
test
cli
sub
and
int3
enter
pop
add
push
mov
cli
addl
dec
mov
pop
nop
in
and
cmp
outsl
or
mov
hlt
push
inc
movsb
cmpsb
cltd
dec
ficoms
out
mov
pop
scas
lods
adc
adc
fdivrl
cmp
push
cmp
out
mov
arpl
sbb
pop
pop
push
or
mov
mov
sti
aas
cmp
stos
ja
shll
xchg
push
adc
cmp
fisubrl
cmp
mov
xor
jne
out
mov
inc
das
test
mov
ljmp
popa
and
jl
push
out
cmp
stc
or
out
jne
push
xchg
ret
aam
mov
cmp
inc
mov
jo
popf
pop
mov
frstor
fdivrp
in
fisttps
outsl
test
xchg
js
lea
pop
iret
and
rcrb
or
xchg
jae
sub
pop
push
test
cmc
adc
stc
cmp
popf
shll
push
push
xor
repz
lcall
add
mov
lcall
scas
cmc
pop
fstpl
sbb
lods
pusha
add
mov
cli
inc
jbe
xchg
mov
jge
cmpsb
fdivrl
mov
push
gs
aam
cli
mov
rcrl
dec
push
aam
insb
std
mov
pop
out
sbb
gs
mov
push
xchg
cvtpi2ps
dec
decl
loop
push
and
xchg
xor
xchg
inc
push
or
dec
ret
adc
std
insb
mov
cmc
xor
or
or
out
dec
cmpsb
mov
shl
xchg
inc
sbb
cmp
pushf
pop
outsl
jns
iret
push
mov
shlb
mov
mov
stc
sti
addb
idivl
je
je
rep
xorl
cmpsb
fdivrs
fmuls
push
fdivrs
dec
popfw
ds
adc
push
iret
cmp
lret
rcll
clc
sub
fdivl
cltd
xor
mov
mov
lret
xor
inc
fistl
gs
or
out
xor
push
dec
sbb
je
pop
cmpl
jnp
adc
mov
int
xlat
les
addl
out
push
inc
gs
repnz
pop
pop
test
mov
xor
jmp
pushl
aaa
rol
in
movsl
out
dec
cmc
aam
imul
lds
repz
loopne
dec
sub
mov
stos
jle
test
insb
mov
imul
data16
loope
jge
inc
fwait
popf
clc
sub
aad
jns
push
push
xchg
xchg
push
push
pop
add
cmp
push
ljmp
shlb
dec
jnp
in
out
iret
sbb
xchg
sahf
pop
stos
mov
loop
or
cmp
ljmp
ja
sub
xor
fistps
cmp
rcrb
ss
in
popa
push
xchg
mov
mov
scas
in
fcomps
sub
fisttpl
fcoms
out
mov
les
movsb
aas
aam
xchg
mov
dec
mov
fcomps
jne
jl
dec
add
jmp
push
push
push
push
pop
sbb
aam
out
dec
sbb
xor
arpl
idivb
and
inc
xor
push
call
lahf
push
into
sub
das
lods
inc
test
mov
pop
push
cmp
test
call
enter
shlb
jle
xor
xchg
mov
lock
sarb
orl
lods
test
pop
sbb
dec
popa
push
insb
jmp
ds
lock
in
jne
movsl
in
dec
addr16
cwtl
dec
jno
pushf
cli
mov
sahf
mov
dec
xchg
lret
loop
loopne
addl
pop
cs
loop
cmc
out
test
mov
repnz
add
adc
pop
inc
in
lds
xchg
dec
cmpsb
or
cld
test
addl
add
jns
jb
push
mov
xlat
sarb
lock
aaa
ss
or
cmp
jb
dec
iret
and
loop
lret
and
mov
repnz
mov
ret
sbb
fcmovnbe
or
mov
cwtl
insb
mov
scas
setnp
jecxz
xor
pusha
out
in
je
adc
jbe
push
and
lcall
inc
add
out
adc
cwtl
push
lret
in
jp
dec
out
pop
push
jmp
xor
dec
push
mov
stc
xchg
cmpsl
dec
or
cmp
push
scas
sti
jo
and
out
cmc
jmp
cmp
pushl
pusha
push
xor
mov
call
or
push
hlt
pop
leave
sti
or
insb
dec
cwtl
push
adc
popf
or
in
mov
jne
mov
mov
lea
push
sub
fildl
xor
fsubr
rorl
push
gs
out
imul
pushf
mov
repnz
mov
mov
loope
insl
insl
or
add
cwtl
xchg
or
imul
fnsave
jb
pop
add
cmp
fst
mov
push
in
dec
addr16
sub
pop
jne
decl
mov
adc
pop
cmp
aaa
or
rcr
in
inc
je
lret
jmp
outsb
mov
movsb
adc
nop
xchg
dec
jb
clc
cmpsl
sub
pop
pop
pop
scas
jne
addr16
cmpsb
lock
lock
adc
mov
cmp
xor
lcall
pop
fsubl
iret
sti
pop
push
cld
in
test
aad
push
insl
leave
aaa
enter
sbb
aas
mov
test
pop
lahf
pop
std
imul
mov
repnz
sar
cmp
mull
fwait
mov
add
jo
sti
cmp
call
inc
cmp
test
jp
movsl
es
mov
fdivrl
push
push
imul
sbb
mov
sbb
arpl
dec
mov
and
test
jl
incb
shlb
popa
xchg
or
mov
in
std
loop
repnz
icebp
adc
push
xchg
and
fstps
mov
scas
jae
sub
push
outsb
sbb
xor
xchg
mov
fsubrl
popf
loopne
sbb
jae
orb
loope
bound
mov
popf
rorb
gs
fwait
xlat
inc
jne
out
mov
push
subb
adc
dec
mov
xchg
sti
xor
pop
xchg
mov
testb
or
sbb
sub
fildll
adc
mov
sbb
cmp
popf
jb
mov
cmp
leave
mov
ret
dec
out
repz
loop
fbstp
jmp
mov
leave
mov
sub
out
push
lret
je
cltd
xchg
jae
add
inc
sahf
sbb
out
adc
add
xor
xchg
push
andb
push
notb
mov
jnp
in
insl
sbb
inc
popa
dec
testl
push
pop
imul
sbbl
inc
push
rcrl
jnp
inc
dec
and
in
inc
xor
pop
fdivl
js
pop
inc
mov
cltd
aad
xor
shr
dec
add
mov
movsl
xchg
int
cli
and
shll
sti
push
lcall
loop
xor
xor
fcompl
fdivrs
nop
mov
mov
inc
addl
sub
filds
icebp
cmc
addr16
push
and
jle
sahf
mov
and
sub
xor
es
ja
pop
or
fs
ss
sub
dec
adc
sbb
inc
testb
in
jbe
push
push
jl
cmp
pop
lret
cs
data16
test
imul
repnz
mov
sub
and
jle
lds
fwait
xor
mov
mov
inc
mov
loope
jl
stos
das
loopne
into
test
add
movsl
xor
pop
aam
sub
cmp
roll
out
int
jne
outsb
aad
mov
mov
jne
sub
xchg
ds
jbe
pop
cmp
sub
sbb
sti
in
dec
mov
cmpsl
es
leave
mov
repz
jns
shl
js
cmp
in
hlt
hlt
xor
scas
pushf
pop
mov
pop
adc
cmpsl
das
mov
cmp
fs
pop
stc
pop
lock
xlat
mov
push
xor
sub
sti
fs
mov
gs
fisttpl
in
dec
pop
loopne
int3
fs
or
and
outsl
std
xchg
enter
loope
lret
out
icebp
test
cmp
shrb
xchg
test
cmp
std
sbb
jno
mov
rcrb
jbe
pop
jle
push
lock
repz
sub
ret
dec
outsl
push
lods
mov
inc
mov
addr16
repz
add
adc
cmpsl
ja
mov
jg
mov
pusha
ret
xor
xchg
mov
insb
add
mov
push
cmp
push
popf
sub
in
cmp
ds
sti
clc
sahf
dec
inc
ret
pop
pop
lahf
lock
je
cmc
mov
inc
push
push
cld
ss
push
insl
ret
test
out
addr16
sahf
loopne
test
repnz
fbld
sahf
push
test
mov
repz
fmuls
inc
xor
xchg
sub
leave
jp
inc
xor
inc
push
mov
dec
sub
inc
push
mov
jmp
rcll
addr16
jl
xchg
scas
mov
cltd
fistpll
fisttpl
int
movzbl
xchg
sub
cmp
add
idivb
popf
push
shll
and
inc
mov
popf
in
data16
rcll
scas
mov
sub
add
lahf
jae
mov
xchg
or
or
jns
movsb
lret
xchg
fisttps
push
iret
or
mov
dec
test
ret
movsl
adc
xchg
pop
xchg
or
add
jns
rclb
jns
pop
pop
jns
or
stos
outsl
in
mov
outsl
push
dec
fsubr
shrb
stc
ss
dec
out
inc
lods
rol
xor
clc
cmp
lea
inc
out
mov
test
inc
imul
out
xlat
ss
mov
ret
sti
xchg
call
adcb
ljmp
hlt
dec
inc
shrb
adc
std
xchg
cmp
movsl
adc
addb
filds
dec
aaa
xor
adc
mov
outsb
rcrw
bound
in
cmpsl
mov
add
cmp
add
xchg
js
pop
sahf
mov
xchg
dec
push
or
fisttps
scas
cs
push
out
rcl
sbb
push
movsb
or
imul
lret
lret
clc
hlt
adc
imul
inc
ficoms
adc
stc
jnp
pmaxub
mov
pop
xchg
idivl
loope
in
sbb
xchg
fcompl
mov
outsl
or
cmp
mov
xor
and
ss
xchg
ja
sub
mov
mov
inc
mov
cs
dec
mov
adc
sbb
cli
leave
inc
addr16
out
outsl
or
mov
out
push
xchg
inc
testl
loop
into
jge
hlt
push
imul
xor
call
inc
insl
mov
cmp
pop
inc
les
xor
hlt
fists
pop
loopne
insl
aas
lods
scas
insl
sub
in
or
test
cwtl
mov
pop
repz
adc
dec
cmpsl
jns
mov
leave
sub
jl
pop
in
xchg
mov
mov
call
mov
add
inc
jmp
es
push
cmpsl
aas
dec
inc
cli
push
pop
mov
movsl
xor
ss
xchg
sbb
dec
hlt
mov
outsb
or
imul
lahf
dec
jno
push
popf
lcall
call
mov
sub
sub
mov
lret
sbb
cmpsb
mov
lret
adc
cmpsb
mov
xor
gs
movsl
cmc
jae
mov
or
inc
add
mov
mov
in
lcall
push
dec
cwtl
mov
hlt
dec
rclb
mov
xchg
leave
hlt
lret
leave
cmp
xchg
std
ss
sub
jmp
int3
cmpsl
jg
sub
ret
bound
fbstp
fucom
adcb
outsl
xor
out
stos
outsb
dec
pop
mov
xchg
imul
xchg
xchg
mov
inc
push
push
cmp
lcall
pop
pop
push
movsb
push
jo
cmpsl
pop
es
pop
adc
mov
cli
ret
jl
out
in
cmp
outsb
adc
lcall
push
cli
imul
push
sti
fsubrl
jne
test
jmp
int
dec
lods
push
loopne
sti
lds
mov
push
pop
imul
rcll
cmp
sbbb
adc
jge
cmpsl
call
hlt
iret
daa
rol
std
sbb
adc
mov
sub
inc
mov
jns
mov
in
aad
out
cmp
mov
iret
push
rorl
push
cli
and
dec
jp
stc
cmp
push
dec
dec
sarl
lahf
dec
adc
adc
xchg
jmp
fsubr
rorl
xchg
imul
adc
xchg
push
inc
pop
adc
mov
test
xchg
push
inc
pop
fwait
sbb
ret
add
jecxz
loopne
push
loopne
fistl
lret
ficoml
shlb
in
cmovne
shrl
dec
stos
aas
dec
and
jmp
data16
ss
test
hlt
stos
aas
dec
sub
pusha
push
cli
insb
push
jmp
fldcw
dec
stc
cli
gs
xor
movsb
ljmp
das
dec
movsb
cli
pop
lahf
cmpsb
push
ds
call
jmp
hlt
mov
insl
pop
out
xchg
pop
outsb
jne
jmp
adc
fwait
dec
jle
hlt
cli
insb
shr
pop
fidivrs
dec
lcall
int3
pop
movsb
and
jle,pn
imul
mov
lock
das
ja
xchg
xchg
je
add
jno
mov
sbb
push
push
and
mov
in
sub
mov
push
mov
mov
add
ss
in
mov
push
shrl
ljmp
pop
negb
push
dec
mov
repz
iret
mov
into
out
out
cmp
out
stc
fnstsw
idivl
cmp
out
sbb
ds
xorl
and
sti
pop
sahf
movsb
cld
call
fidivrs
cmp
pop
fstpl
out
pusha
push
int3
jg
cld
jmp
ss
out
cld
jecxz
jle
cld
xor
push
sahf
cmp
sub
push
inc
adc
into
rorl
push
push
mov
xor
loop
mov
push
lods
add
jmp
popa
cmp
test
inc
out
imul
cmc
mov
clc
idiv
lret
ljmp
int3
imul
mov
in
roll
xchg
jo
in
aas
dec
push
cmp
dec
inc
cli
cmp
pop
cli
dec
daa
cs
pop
sets
lcall
jecxz
xchg
and
aam
inc
stos
push
jbe
push
sti
and
test
mov
lock
push
loope
das
dec
stos
dec
xor
pop
ret
rcll
in
jle
jo
pop
mov
jbe,pt
dec
xchg
les
add
into
sub
push
pop
mov
rcr
gs
aas
jg
add
push
mov
aas
pop
lahf
cmpsb
pop
cmp
dec
sarb
aam
arpl
pop
jmp
jmp
aas
dec
test
pop
mov
sub
jb
jns
xchg
pop
sbb
pop
cmp
mov
mov
jo
lods
sub
cmp
push
data16
xor
push
daa
sbb
inc
jne
sbb
jle
fucomi
inc
adc
inc
into
sub
xchg
jmp
stos
test
mov
scas
sar
testb
xchg
or
sub
lcall
mov
dec
xor
cmpsb
mov
fwait
dec
roll
pop
pop
dec
sahf
push
jp
out
inc
dec
mov
push
lcall
lcall
jno
scas
push
out
mov
mov
leave
cmpsb
mov
popa
cmp
jmp
push
mov
or
data16
fnsave
scas
aam
cmp
fmul
std
lret
add
jl
fbld
push
into
int
addr16
pop
add
mov
xor
fidivrs
shll
jle
out
cmpsl
xor
adc
ljmp
out
dec
push
mov
pop
imul
xchg
mov
dec
test
testb
mov
out
out
cmpsb
call
rcll
lret
cmc
cmp
mov
push
sub
push
mov
lahf
leave
lock
repz
test
std
dec
push
push
ja
dec
sbb
lahf
add
jl
cmc
cmp
push
lock
jno
mov
xlat
dec
popf
in
sahf
js
repnz
mov
push
out
push
cmpsl
jge
cmpsl
xchg
xor
push
lret
test
sbb
aad
cmpsb
aaa
push
lock
pop
sahf
xor
xchg
mov
hlt
pop
mov
xlat
mov
dec
pushf
mov
lahf
add
repnz
mov
lret
sub
push
cltd
mov
cmp
cmp
push
pushf
mov
jg
push
int
cmpsl
cmp
movsb
aam
scas
pop
pushf
ljmp
sub
shrl
push
dec
repnz
cmp
inc
bound
cmp
pop
push
mov
dec
test
push
cmp
lods
sub
aam
movsl
je
dec
dec
stos
push
mov
mov
xchg
push
xchg
stos
and
aad
adc
push
int
ret
inc
push
sbb
push
cltd
loop
xchg
inc
inc
or
popf
sbb
mov
sahf
lock
stc
les
jmp
sub
sbb
pop
adc
xchg
movl
or
sub
data16
cmc
cltd
outsb
icebp
sbb
cmp
push
out
pusha
test
imul
mov
adc
jp
dec
leave
aaa
test
out
cmpsl
mov
mov
push
or
sub
push
fs
mov
popf
cmp
mov
scas
out
imull
into
mov
fidivrs
mov
test
jne
js
push
shll
fdivr
add
clc
cwtl
sbbl
aad
pop
inc
outsl
push
je
mov
mov
pop
imul
sub
shlb
cmp
jecxz
xchg
scas
sub
pop
or
inc
les
sub
and
xor
push
dec
filds
mov
cwtl
test
movsl
in
sub
xchg
mov
pop
fldenv
mov
popf
test
ret
fs
es
ljmp
lret
daa
in
daa
mov
sarl
lcall
and
inc
mov
inc
mov
fidivs
jns
fadd
jecxz
loope
clc
add
jge
les
push
lret
jnp
sbb
aam
shll
adc
bound
cwtl
mov
mov
inc
in
rcr
push
enter
inc
mov
sub
addl
sbb
jno
adc
out
push
fdecstp
pop
mov
jp
sub
push
push
push
lods
jmp
xor
or
xchg
mov
inc
lods
adc
inc
mov
lds
cmp
xor
pop
vcvtss2si
fwait
insl
dec
adc
and
je
lds
sub
sahf
mov
add
ss
leave
and
aad
pop
in
ret
fstl
pop
mov
push
adc
rorb
mov
nop
out
pusha
lock
cmpsb
sub
fistpll
push
scas
mov
rcll
nop
lds
repnz
negb
adc
and
push
cmp
cltd
inc
shlb
andb
inc
inc
mov
lret
gs
icebp
jne
icebp
test
insl
insl
mov
sbb
adc
or
neg
adc
push
sbb
out
ret
lcall
inc
xor
inc
loopne
jecxz
push
cltd
push
popa
mov
push
scas
fistpll
push
or
sbb
dec
cmp
into
fcomp
sbb
test
sbb
pop
std
call
ret
enter
arpl
mov
ds
cli
inc
sub
or
fnclex
mov
and
push
jl
ficomps
xchg
mov
mov
movsl
dec
shlb
cwtl
mov
jns,pn
ds
mov
outsl
xchg
aam
xchg
jle
pop
mov
scas
cli
cmp
rcr
xor
xor
mov
sbb
scas
dec
xor
loopne
cmpsl
test
mov
addb
mov
sbb
inc
test
pop
inc
in
jecxz
pop
int3
pop
mov
inc
rcl
pop
in
dec
repz
imul
loope
int
jb
das
ret
cmc
fwait
popf
dec
mov
mov
adc
adc
xchg
adc
int3
in
pop
cmp
and
adc
dec
out
inc
in
stos
inc
mov
iret
jns
popa
mov
lds
pop
push
xchg
inc
mov
ret
pop
orl
inc
jp
mov
out
fwait
sub
pusha
mov
pop
adc
rep
lret
and
hlt
mov
push
adc
pushf
ret
shll
fs
mov
lods
sub
das
dec
in
jg
xor
fsubrp
dec
fdivrs
mov
add
inc
mov
testl
in
idiv
dec
lods
mov
lock
and
jmp
push
ret
stos
cmp
popf
and
cmp
ds
add
jno
mov
clc
rorb
push
mov
xchg
push
push
adc
pushf
mov
or
jno
aas
add
in
subl
aam
clc
and
cmc
and
imul
ret
lahf
or
dec
jae
hlt
mov
sbb
fstps
sbb
jb
pop
stos
mov
out
mov
adc
out
jno
pop
out
jo
lock
xlat
jle
icebp
cltd
push
ds
outsb
cmp
pop
lea
jecxz
push
jno,pt
jae
and
cmp
fcomps
push
pushf
lret
lret
stos
or
add
testb
sbb
cmc
mov
and
cltd
cmp
out
aad
mov
adc
ja
pop
mov
jnp
lea
xchg
outsb
adc
xlat
push
mov
xchg
jge
test
aaa
cmp
cli
lds
xor
ljmp
int3
lds
hlt
gs
jp
rcll
in
dec
xchg
sub
movsl
cmpsl
test
das
js
out
mov
pusha
pop
incb
mov
sti
adc
loope
sti
insb
and
mov
test
cmp
adc
mov
dec
and
lock
and
cmp
adc
inc
and
imul
mov
cmp
xchg
mov
bound
sbb
xchg
in
popa
fwait
adc
pop
or
imul
ds
push
push
push
call
push
ret
shrb
js
mov
loope
or
pop
arpl
sbb
push
xchg
scas
ret
push
sbb
xchg
aam
pop
pop
imul
test
push
movb
jg
aaa
cltd
outsl
out
ss
jne
fistps
mov
test
aas
jo
jecxz
test
orb
sub
inc
int
inc
push
pop
jecxz
sub
clc
xchg
inc
fnstsw
pop
mov
imul
frstor
jns
xchg
jg
sub
push
rcll
movsl
dec
lods
sarl
mov
or
jg
jl
mov
or
mov
ficompl
or
test
popa
outsb
xor
outsl
lods
rol
mov
and
xchg
xor
jbe
cmpsb
or
stos
cmp
data16
outsl
xor
dec
jmp
movsb
stc
push
fcoml
in
lods
jnp
cmp
fidivl
mov
fadd
stc
inc
jne
pop
cmp
mov
mov
ds
sub
in
pushf
test
lds
xor
clc
cmpsl
ret
mov
inc
jne
sbb
jbe
sbb
into
mov
jns
and
mov
xchg
mov
cmpb
inc
aaa
adc
cmpsl
push
jbe
xchg
psubw
into
or
out
cmpsl
sbb
pop
shrl
ret
pop
cmp
mov
popw
dec
pop
lds
xchg
ljmp
pusha
push
xor
or
insb
inc
sti
cmp
das
push
or
addr16
or
mov
or
stc
mov
push
push
inc
cmp
in
scas
and
out
sbb
and
pop
xor
scas
push
fxch
xor
xor
xor
test
mov
add
cmp
push
pop
xor
pop
mov
push
das
fdivs
jp
or
xor
rclb
subl
or
adc
or
data16
cmp
andl
dec
lret
dec
fadd
adc
push
lret
arpl
rcr
sub
sbb
pushl
je,pt
xor
inc
pop
sub
fcomps
adc
adc
sub
inc
arpl
aam
mov
cmpsb
sahf
bound
mov
sahf
mov
pop
ret
dec
lods
lds
aam
sub
dec
mov
imul
gs
aad
inc
ss
addr16
das
loopne
pop
xchg
mov
jbe
dec
xchg
mov
fucomip
out
cwtl
sbb
cli
std
movsb
imul
or
push
imul
jnp
pop
pusha
insb
test
push
iret
fisubrl
cmp
imul
push
test
popf
pop
das
loope
fstps
jg
fidivs
jg
ficoms
cmpsl
mov
fnsave
jmp
shll
sub
sbb
ds
mov
dec
testb
jmp
push
scas
inc
jnp
cmpsb
mov
lds
sti
or
imul
loope
mov
inc
mov
add
scas
dec
cmp
jecxz
sub
es
std
loopne
jmp
ljmp
lret
test
loope
aas
sub
out
adc
add
or
lcall
pop
movsl
aaa
dec
push
mov
xchg
mov
movsl
shll
incb
lret
mov
insb
jne
ljmp
mov
in
std
aam
mov
mov
xchg
in
jb
mov
or
dec
stos
xor
and
movsl
sub
movsl
sub
dec
loope
out
shlb
lods
scas
sub
fld
dec
movsl
sub
mov
add
pushf
fcoml
and
xchg
test
rorb
and
test
sub
sbb
dec
sub
dec
mov
or
movsb
shlb
add
push
mov
xchg
xor
daa
lcall
lods
mov
mov
xchg
hlt
outsb
ljmp
push
jns
outsb
mov
pop
ss
imul
sbb
lods
out
cs
xchg
fiadds
dec
inc
push
adc
jg
dec
jg
sbb
orb
mov
sbb
jecxz
movsl
and
mov
xchg
aad
leave
ss
das
and
shlb
push
push
cs
sub
incl
daa
dec
stos
nop
enter
lret
sbbb
ljmp
jb
cld
xchg
cld
cmc
aas
leave
push
push
lock
inc
cs
fwait
repnz
mov
sbb
mov
stc
sarb
mov
xchg
mov
jnp
in
cmp
rcrb
call
adc
loop
fistpl
mov
test
dec
pop
jl
cmp
adc
clc
ljmp
das
jl
or
jmp
jp
mov
pop
pop
jge
imul
jmp
outsl
pop
inc
cltd
push
mov
sbb
inc
icebp
pushf
sub
mov
adc
xor
mov
or
jecxz
cmp
mov
and
xchg
inc
push
cmp
jecxz
push
cmp
mov
cli
cmc
push
hlt
xchg
xor
adc
push
inc
mov
icebp
js
lods
push
test
xchg
outsb
ds
cmpsl
lock
sub
popf
daa
lcall
xchg
jg
xor
ss
movsb
xchg
sub
pop
pop
mov
jle
pop
arpl
cli
add
cmpsb
cmp
stc
stos
pop
cmp
push
pop
daa
int
add
test
cmpb
cmp
leave
arpl
shr
pop
out
into
loop
shr
adc
fstpl
in
or
sbb
mov
mov
stc
out
mov
cmp
test
cli
and
xchg
mov
pop
dec
xor
insb
mov
clc
sbb
xor
add
int3
mov
mov
nop
in
dec
cltd
movsb
fdivr
add
ret
mov
sub
add
mov
inc
fnsave
ss
nop
stc
mov
out
pop
jbe
mov
loop
lods
jnp
fisttpll
or
cmp
mov
pop
sbb
fiaddl
test
mov
sub
push
mov
sbb
fmul
sub
sbb
sti
xchg
mov
mov
fidivs
adc
pop
push
sahf
pop
hlt
mov
mov
mov
pop
in
cmp
clc
orb
out
mull
shlb
xchg
jns
aad
jle
cltd
mov
add
dec
test
aas
mov
mov
pop
je
jne
cmp
cli
in
fimuls
rcrb
xor
les
test
movsb
jmp
out
lret
clc
std
cs
jecxz
pop
pop
scas
aam
testb
add
into
out
and
and
in
mov
fdivrl
jae
lock
lahf
jnp
mov
xchg
jae
cmc
xor
outsl
pop
xchg
pop
xchg
xchg
test
sbb
insl
xchg
mov
loope
pop
sub
rorl
dec
ss
out
roll
cmp
outsl
mov
repz
and
fsub
scas
cs
pop
xchg
adc
nop
imul
and
iret
outsl
lds
mov
mov
mov
or
nop
jbe
mov
push
push
add
push
fsubrl
mov
and
pushf
and
ret
aas
mov
cmc
mov
test
sub
dec
adc
imul
shl
arpl
and
jmp
cltd
popa
mov
cs
lods
jne
lods
xchg
test
jae
pop
insl
pop
and
push
push
push
mov
not
cs
and
jb
in
jl
xchg
mov
pop
sarb
sub
xchg
jae
into
out
pop
mov
fbstp
mov
les
jb
and
jg
inc
out
adc
fs
je
scas
jo
dec
sti
push
cli
inc
hlt
mov
and
scas
dec
sbb
cmc
cmc
push
adc
push
pop
lds
fcmovu
sub
lret
and
pop
mov
fucom
mov
mov
jne
jmp
dec
push
fstl
je
movsl
ljmp
faddp
jne
pop
cmpb
ja
sub
leave
adc
popa
mov
lods
mov
pop
fs
jg
jno
sub
or
shlb
pop
ja
popf
jge
xchg
dec
pop
pop
lea
cmp
aad
in
das
push
pop
ret
mov
pop
xchg
gs
pop
push
loop
imul
add
lds
mov
jb
cmp
fistl
insb
mov
hlt
stos
mov
mov
sbb
jno
xor
iret
sbb
or
movsl
sub
lds
lods
jb
repz
sbb
ja
or
cmp
repz
pop
mov
ret
inc
sbb
aas
jbe
mov
pop
shrl
aaa
add
jbe
jae
mov
call
shrl
pop
ret
pop
xor
push
in
pop
in
jp
jecxz
cmp
out
hlt
cld
test
leave
mov
mov
inc
xor
aam
xlat
mov
loopne
je
pusha
mov
sub
adc
mov
flds
cmp
xor
xchg
sbb
hlt
dec
into
insb
xor
xchg
and
fs
xchg
jmp
into
dec
cmp
pop
mov
add
sbb
push
mov
repz
pop
add
pop
push
mov
fidivs
jns
leave
pmullw
xor
stos
push
push
in
lret
and
mov
lods
test
and
mov
mov
std
aam
cli
pop
enter
xchg
insl
pop
ret
ja
test
gs
clc
jmp
sbb
lock
lods
imul
scas
in
sbb
cmpsb
aas
or
aas
inc
std
add
pop
insl
std
fs
adc
data16
fstps
rcrl
ficoms
imul
aas
dec
mov
inc
add
jmp
mov
mov
jae
sbb
mov
iret
dec
pop
jg
jo
movsl
xchg
mov
xor
cltd
sarl
out
or
jmp
inc
sahf
filds
sbb
xchg
mov
xor
in
pop
or
mov
jne
jmp
mov
mov
xchg
ss
xchg
mov
or
test
pop
jo
fildl
aas
add
and
ss
sbb
push
fwait
jp
dec
or
fsts
mov
stos
mov
aam
cmc
call
add
lods
dec
or
push
cmc
cmp
xchg
outsb
daa
and
in
aas
out
dec
fldt
test
mov
fwait
sbb
repz
cs
movsl
out
lea
jl
cwtl
add
jno
test
in
repz
sbb
stos
fdivr
mov
adc
ret
sbb
fimull
jns
pop
out
sub
int3
or
nop
cmpsl
xchg
mov
ret
arpl
push
cmp
inc
call
loopne
lcall
jno
xor
mov
adc
nop
pop
sub
fwait
mov
outsb
jecxz
mov
push
dec
adc
add
mov
aad
dec
ljmp
iret
push
xchg
xchg
imul
mov
mov
cmpl
cmp
cld
lahf
lock
cmp
divl
jae
mov
lret
sub
mov
sahf
in
mov
pop
clc
fisubrs
xor
rclb
fildl
mov
dec
test
outsb
lock
ja
cmp
test
jbe
decl
jg
sti
pusha
stos
mov
lahf
jne
loop
pop
fsubs
sahf
stos
outsb
scas
and
push
scas
or
jbe
mov
das
mov
cmp
repz
xchg
xor
call
or
lret
ret
fstl
shlb
out
mov
mov
out
inc
mov
or
icebp
mov
daa
imul
lcall
fsubl
add
inc
arpl
pop
dec
dec
in
gs
cmp
addr16
dec
mov
ss
dec
insl
incl
jp
dec
cmp
aad
adc
sub
ljmp
adc
idivb
fsubrl
leave
xlat
push
adc
cld
in
cmpsl
push
aam
mov
push
push
dec
xchg
sub
mov
out
test
movsbl
scas
repnz
dec
leave
in
sti
fisubl
stc
or
rcl
or
jns
sub
sbb
addr16
in
lds
hlt
idivl
js
inc
mov
jb
loopne
sbb
inc
adc
cwtl
in
scas
mov
dec
xchg
in
jmp
pop
int
mov
ds
pusha
jae
je
inc
aaa
repnz
jne
xchg
rorl
dec
pusha
in
fs
je
and
rcl
movsb
cmc
sahf
lcall
scas
das
jnp
dec
test
mov
jmp
loop
add
icebp
lret
pop
das
cmp
cmc
xchg
in
cmpsb
stos
mov
pop
pop
out
push
cmp
jbe
mov
fimull
sbb
hlt
lods
lods
movsl
xor
int
clc
jecxz
xlat
outsl
push
scas
ds
mov
sahf
xlat
jp
rclb
xor
lea
and
or
fists
in
mov
shr
stc
outsb
pop
jecxz
outsl
mov
dec
lock
rorl
xorb
cltd
in
std
sub
push
xchg
add
mov
fiaddl
pop
dec
fs
xchg
mov
sub
add
fdivs
xchg
jge
iret
adc
xor
int
and
pop
xor
pop
fiaddl
and
jno
pop
dec
sarb
xlat
es
loope
inc
xor
daa
fcmove
movsl
ret
shll
or
mov
sbb
mov
inc
dec
pushf
mov
cmp
js
jne
les
pop
pop
andnps
mov
int
arpl
mov
push
cwtl
lods
lea
mov
pop
dec
in
aad
notb
push
cmc
mov
dec
mov
out
mov
arpl
mov
clc
imul
mov
mov
jl
int3
and
xlat
hlt
imul
inc
cld
ja
xchg
push
popa
pop
and
ret
jecxz
sbb
pop
je
mov
mov
dec
push
cmp
mov
mov
cli
jmp
lods
inc
add
es
xlat
adc
das
dec
ss
out
pop
push
pop
sub
jae
fsub
xor
in
xor
test
push
mov
xchg
mov
sar
or
repz
cmp
mov
data16
pop
in
dec
mov
aad
daa
inc
pop
insl
fidivl
lea
rcr
jge
iretw
enter
mov
test
mov
fisttpl
inc
cmp
lods
mov
jb
push
jge
push
jns
es
adc
mov
mov
cli
repz
push
sti
stos
cmc
mov
sub
stos
add
mov
push
xchg
inc
into
stc
mov
cld
in
sub
rorl
xor
adc
or
push
cmp
mov
pop
sbb
or
loop
jnp
and
sbb
xor
lret
pop
mov
lock
jle
cli
lret
jmp
xchg
push
jp
daa
and
scas
fucomi
pop
mov
mov
popf
lods
dec
test
push
aam
adc
add
test
cwtl
sbb
cmp
sbb
roll
mov
mov
mov
ljmp
jb
mov
jns
lds
cmp
xchg
inc
xchg
xor
test
pop
fpatan
out
and
push
and
inc
loope
in
cltd
jecxz
pop
fmull
add
bound
sub
inc
loope
rclb
mov
fstps
push
or
imul
inc
stos
ds
sub
loop
mov
out
in
or
filds
in
adc
data16
sub
mov
or
rdmsr
cmc
pop
repnz
fists
add
dec
mov
mov
jle
adc
push
pop
dec
gs
clc
addr16
aam
cli
addr16
jbe
sbb
shll
std
mov
shrl
inc
aad
bound
and
mov
popf
stos
outsl
pop
fstpt
add
aaa
mov
in
inc
fnstenv
jns
xor
loope
jmp
add
lods
mov
test
mov
jmp
pop
xor
pop
adc
cltd
dec
clc
push
bound
ss
xor
je
adc
mov
ds
push
jmp
repnz
out
aam
xor
loop
mov
adc
fwait
stc
call
xor
mov
cmp
mov
pusha
loop
sti
inc
das
or
mov
fisubs
pushf
rcr
or
sub
dec
cmp
jb
or
add
sub
mov
add
scas
fwait
inc
mov
xchg
cmp
rol
mov
sbb
jno
outsb
decl
jecxz
aad
sub
pusha
jbe
cld
xchg
fucomi
pop
xchg
outsl
fidivl
push
aad
cmp
adc
adc
fucom
lret
int3
arpl
pop
mov
jecxz
inc
jle
and
xor
cmp
pusha
xchg
adc
pusha
pop
ljmp
dec
lea
loop
mov
popa
shr
mov
test
ficomps
bound
cli
dec
xor
jo
mov
sub
xor
jmp
sbb
dec
negb
xor
dec
add
popf
mov
pop
ret
lahf
cmp
adc
push
push
mov
test
out
mov
je
xor
icebp
aaa
and
call
xchg
stos
lea
jbe
mov
cltd
xchg
pop
divb
mov
and
jno
aam
and
xor
adc
insl
adc
ljmp
pop
xor
and
and
mov
lods
fstl
cmp
shll
or
cmp
in
test
out
scas
or
xor
push
fimull
stc
repnz
mov
inc
lret
fwait
jne
pusha
adc
push
cmpb
ds
je
pop
xchg
mov
dec
sub
test
test
xchg
frstor
cmp
fnstsw
cmp
cmp
nop
push
adc
and
fimuls
ljmp
rcrb
mov
xor
sub
mov
sbb
pop
fdivl
pop
mov
and
mov
fmulp
inc
sub
add
movsb
jns
mov
in
aad
xchg
lcall
sbb
fidivl
andb
pop
pop
and
adc
test
sub
pop
xor
pop
xor
aad
xor
fs
and
iret
movl
adc
jecxz
data16
arpl
add
xchg
ja
add
aam
xlat
pop
mov
dec
xchg
mov
rcl
ret
sahf
dec
ss
push
out
cmpsl
popa
dec
pop
out
fwait
adc
sbb
pusha
pop
arpl
dec
cld
xorl
adc
aad
inc
mov
jae
xlat
and
mov
xor
negl
movsl
jg
int
inc
dec
in
imul
out
sub
dec
repz
sbb
cmpsl
into
pop
mov
and
push
fs
push
xchg
scas
and
inc
pop
scas
rcr
mov
and
scas
loope
in
push
pop
push
push
shrl
ret
mov
fdivs
fistl
mov
push
lret
andl
xchg
fwait
push
sahf
mov
clc
xchg
push
pop
adc
xor
jl
fsub
xchg
mov
test
ja
jo
test
sub
rcr
dec
push
int3
sub
pop
jp
jbe
dec
ljmp
sbbl
push
pop
std
cmpl
or
loope
sahf
pop
dec
scas
mov
ret
pop
fwait
clc
push
bound
pushf
lret
cmp
mov
call
pop
xor
das
mov
add
outsl
sub
sbb
imul
push
xchg
sbb
in
mov
std
cmp
in
push
gs
mov
mov
lods
scas
dec
loopne
sub
xlat
mov
mov
dec
jl
xor
gs
rcl
xor
aad
shll
lods
sbb
stc
mov
sahf
sahf
fisttpl
add
popf
test
stos
mov
push
stc
aas
arpl
rolb
pop
imul
adc
test
lret
je
mov
fistps
lock
scas
push
mov
sar
imul
dec
and
nop
sub
lds
test
push
cmc
xchg
inc
cmpl
call
jecxz
fidivs
or
dec
lea
push
scas
jmp
orb
push
sti
jle
add
push
cld
outsl
into
jge
mov
loop
adc
mov
jl
and
add
into
in
cmp
mov
sahf
adc
lods
xchg
cs
mul
cmp
das
mov
cltd
pop
aas
pop
popf
xor
shl
cli
sub
lock
xchg
jecxz
cs
push
add
or
rclb
mov
or
jae
nop
push
sbb
cltd
adcl
stc
psubusb
dec
cmc
mov
xchg
jg
ja
ret
vpshufhw
fwait
mov
lahf
fdivrl
lds
sbb
mov
or
mov
pop
cmp
ret
outsl
add
adcl
mov
mov
outsl
outsb
push
loopne
icebp
mov
out
inc
adc
pop
nop
ss
mov
push
fisttpll
cltd
nop
imul
mov
pop
imul
inc
iret
xor
test
jmp
lods
push
hlt
xchg
pop
cli
jle
xchg
bound
sub
out
add
dec
sub
std
mov
jbe
jl
ljmp
cmc
jp
jmp
pop
push
lea
std
mov
outsl
les
pop
iret
mov
pushl
scas
sub
imul
cmpsl
adc
dec
scas
mov
jmp
iret
scas
push
call
jecxz
daa
mov
mov
lods
dec
pop
or
push
dec
inc
test
int3
pop
xorb
in
dec
fidivs
fldenv
sahf
pusha
mov
dec
incl
inc
pop
imulb
sub
xor
js
xor
lcall
pop
dec
push
je
cmp
or
add
pop
dec
fcoms
and
scas
stc
fisttpll
je
lods
fidivl
ret
sub
out
mov
hlt
mov
imulb
dec
xchg
xor
sub
lret
popf
adc
mov
sub
enter
mov
push
insl
icebp
in
add
jbe
rcr
jl
testl
test
js
fdivrs
subl
sbb
pushf
mov
inc
cwtl
push
sub
add
movsb
pop
jns
sub
mov
imul
dec
iret
enter
shll
imul
mov
cmp
in
push
lods
or
or
sbb
mov
fldt
mov
clts
pop
mov
neg
and
push
fimull
or
js
push
test
inc
rolb
psubsb
mov
cmp
or
pop
dec
mov
test
rorl
lods
and
cmp
imull
fnstenv
lret
cmpsb
pop
inc
jbe
nop
mov
dec
adc
mov
repnz
jg
jge
fcmovnb
in
int3
push
dec
ret
lock
in
in
aas
repnz
pop
clc
jge
aaa
rorl
rcrb
mov
mov
cmp
fcoml
and
lret
sbb
push
mov
mov
sbb
pop
ljmp
jnp
mov
fwait
scas
int3
pop
and
mov
or
xchg
inc
xchg
inc
ja
mov
or
iret
add
inc
jge
fistpll
pushf
mov
dec
cmpsl
add
sbb
bound
cmpsl
mov
aad
cmpsl
hlt
pop
imull
int3
rolb
das
xor
int3
jno
out
fisubs
push
inc
js
jnp
imul
mov
mov
xchg
push
aaa
sti
mov
dec
and
push
cmpsl
jg
repnz
cli
mov
fcompl
ficoml
hlt
sbb
xor
loope
ficoml
scas
xor
adc
push
and
cmp
test
idivl
popf
mov
jl
jae
or
les
in
inc
mov
cwtl
xchg
inc
dec
cmpsb
test
in
xchg
add
or
xor
orb
enter
or
lcall
mov
mov
pop
sub
push
cmpsb
rorb
ficomps
inc
lods
and
jns
sbb
push
inc
inc
imul
xchg
and
mov
test
mov
pop
testb
fmuls
cmp
stos
push
add
lock
out
inc
call
and
push
cltd
or
shll
xor
inc
xchg
mov
insb
adc
push
xchg
inc
dec
movsb
pop
xchg
xchg
addr16
and
xchg
imul
dec
out
faddl
inc
int3
and
repnz
cmpsl
sbb
inc
xlat
test
dec
in
out
xor
jns
and
and
inc
js
and
mov
jo
rcrb
scas
cmp
sub
sbb
xchg
int
dec
adc
add
and
loopne
or
xchg
adc
es
sub
sub
enter
rcrb
test
inc
mov
dec
stos
pop
sahf
push
rcrl
das
inc
pushf
dec
ror
xchg
and
dec
lea
add
in
xor
in
xor
adcb
and
inc
push
sbb
xchg
push
and
dec
and
fmuls
sahf
dec
mov
hlt
mov
fs
sub
dec
fabs
mov
jns
inc
jbe
dec
push
into
pop
cmpsl
int
jae
mov
sub
fcomi
sahf
inc
dec
mov
fs
add
push
and
or
sbb
xor
je
mov
inc
scas
orb
or
rclb
push
rclb
dec
rcrb
stc
mov
or
leave
subl
push
add
ss
sbb
leave
add
rclb
shlb
jne
ret
mov
xor
addr16
rclb
aad
and
add
push
add
or
add
jecxz
das
mov
xchg
inc
and
dec
ret
adc
sub
pushf
add
inc
jp
and
repnz
adcl
push
int3
mov
insl
mov
mov
and
sub
xchg
adcl
and
push
xchg
fs
jbe
jnp
ljmp
dec
xchg
jp
mov
push
pop
int
mov
fadd
mov
push
jp
aam
adc
cmp
adc
xor
inc
mov
bound
add
sub
popa
mov
daa
add
and
mov
adc
push
add
adc
jbe
rcrl
rorb
js
data16
andb
mov
jo
add
adc
or
pushf
push
rcrb
lahf
dec
mov
mov
stc
ret
call
push
xchg
xor
or
int
addr16
or
subl
popa
pop
or
std
mov
fimuls
xchg
outsl
stc
cltd
scas
mov
es
mov
addl
dec
xor
out
dec
orb
sbb
imul
inc
pop
sbb
cli
jnp
push
pop
sbb
lds
aad
dec
mov
sub
ss
and
adc
adc
fisttps
andl
hlt
push
add
or
ds
inc
push
and
cmp
mov
jno
subl
insl
add
cwtl
hlt
or
lea
addr16
xchg
movsb
gs
and
jmp
adc
jmp
les
and
mov
and
fbstp
mov
sbb
or
dec
sub
ficompl
pop
mov
pusha
xor
or
insb
fildl
adc
inc
or
inc
lahf
add
sbb
cmpsb
inc
fsub
aaa
ss
push
inc
popf
add
ss
and
mov
xchg
xor
sbb
mov
cltd
cmp
dec
rol
outsl
fcmovbe
filds
andl
sbb
fistps
xor
pop
sbb
dec
shl
fs
pop
rcr
inc
lea
push
sbb
scas
cli
xor
js
xchg
push
add
cmp
inc
mov
jge
mov
mov
push
int
insb
pop
adc
inc
xchg
cwtl
pop
fcmovnbe
mov
mov
movsl
and
mov
inc
pop
aas
or
jl
test
push
loopne
in
js
cmp
andps
xchg
mov
inc
or
call
dec
std
sbb
mov
xchg
insl
movsb
ds
movsl
or
mov
sub
je
fisttpl
sub
test
lods
jmp
daa
mov
repz
repz
add
ret
add
and
push
add
sub
in
dec
pusha
lcall
sub
bound
mov
std
ja
cltd
fwait
dec
mov
pop
mov
mov
insb
mov
mov
outsb
rclb
mov
xchg
lds
lock
or
lock
dec
push
xor
xlat
mull
cmpsl
and
sub
or
test
sbb
adc
push
pop
test
mov
fwait
test
mov
movsl
icebp
outsl
repnz
in
jle
mov
jae
lret
jg
in
int3
mov
xchg
cmp
imul
xchg
scas
xor
aas
fistpll
xchg
rolb
xor
fidivs
jmp
sbb
cs
lahf
cltd
push
cltd
outsb
xor
lret
dec
into
ds
add
push
jmp
imul
rclb
outsl
pushf
shl
shlb
movsb
jne
scas
xor
inc
dec
std
and
mov
test
mov
xor
aam
aaa
ficoms
mov
mov
cmp
lock
pop
or
push
ss
movsb
sub
mov
sbb
adc
jno
pop
xchg
sti
inc
xchg
mov
xchg
adc
cmp
pop
xor
imul
add
dec
aam
xrelease
jl
push
jnp
insl
addr16
mov
or
in
push
mov
out
lea
inc
cmp
repnz
cwtl
inc
xchg
cmp
and
arpl
hlt
inc
sbb
stos
scas
data16
rolb
xor
xor
xor
sub
jno
or
push
aam
mov
jp
loop
fsubp
loop
es
sub
outsb
cltd
mov
sub
stos
call
cli
jbe
jl
jns
movsl
jp
pop
push
das
outsl
dec
enter
jle
xchg
sub
inc
dec
or
cmp
adc
rcll
push
movsl
shlb
test
int3
cmp
mov
mov
out
inc
xor
stc
flds
mov
insl
push
sbb
pop
dec
iret
mov
mov
dec
and
add
fabs
mov
sbb
and
sbb
push
mov
pop
xchg
push
das
lea
fimull
jae
pop
aam
mov
ss
or
inc
scas
add
sbb
stos
sbb
xchg
outsb
mov
push
xor
inc
jge
icebp
daa
add
std
and
push
xchg
mov
push
stc
cld
es
sbb
push
adc
xor
sbb
sbb
push
add
or
outsl
add
loope
push
iret
xor
cltd
and
mov
or
outsb
mov
lea
arpl
sbb
sahf
pop
and
or
aaa
roll
sahf
sbb
outsl
andl
xlat
mov
and
leave
mov
or
ss
rcr
push
mov
es
ss
out
ret
in
sbb
inc
shlb
call
stc
movsb
lock
jle
xchg
adc
add
xchg
pushf
push
js
subl
push
xchg
in
ss
pop
idivb
mov
addl
nop
xchg
lods
imul
pop
dec
jg
mov
jmp
popa
mov
rcl
or
outsb
mov
cmpsb
xchg
xor
xchg
dec
push
shlb
and
pop
add
mov
scas
out
test
xor
cld
and
push
sbb
push
faddl
hlt
ficompl
cltd
and
fcmovbe
xchg
repz
jo
adc
or
lods
or
cwtl
dec
cmc
rcr
xchg
push
xor
in
andb
mov
adc
xor
ds
push
adc
cmp
wrmsr
xchg
push
adc
int3
inc
and
dec
push
push
sub
adc
adc
and
adc
push
and
sub
ret
push
push
mov
jbe
rorb
and
mov
dec
add
mov
sbb
sbb
pushf
xchg
add
jp
ja
scas
cli
sti
mov
mov
xchg
inc
fldt
jg
popa
and
jecxz
lea
mov
arpl
lea
cmp
test
mov
outsl
in
mov
notl
orb
cmc
sbb
and
sub
dec
cmp
lret
arpl
xor
fisubs
insb
gs
scas
sbb
sub
stc
inc
test
lods
push
pop
stc
in
loop
xchg
stos
jge
mov
outsl
add
sub
mov
mov
cs
mov
out
lods
sub
loope
addr16
mov
sbb
aam
rcl
and
or
js
in
sub
ss
lods
xor
setnp
mov
or
fs
shlb
bound
or
pop
aam
fmull
inc
xor
and
cmpsl
pop
cmpsl
sbb
sbb
test
add
jp
mov
jae
jp
dec
cmc
add
pop
pusha
mov
repz
bound
rcl
pop
aad
xchg
fnstenv
insl
cmpsl
pop
idivl
mov
push
and
mov
push
mov
in
movsb
dec
nop
jg
adc
or
cltd
push
insb
push
stos
jecxz
inc
mov
in
dec
inc
mov
fists
rcrl
pop
cmp
movsl
je
mov
mov
sub
dec
fs
cmpsl
inc
jo
std
aas
jp
and
test
in
and
je
sbb
rol
repnz
or
in
iret
cmp
cmp
jns
xlat
lret
into
out
dec
add
add
ss
jg
sti
ret
shr
pop
inc
mov
jns
mov
popa
pop
jmp
add
pusha
popl
loopne
and
mov
dec
je
mov
imul
sbb
mov
jo
add
sarb
mov
adc
add
mov
jb
loop
rcll
jns
cmc
ss
sub
cmp
inc
inc
mov
add
mov
scas
inc
inc
mov
test
sbb
mov
jle
aam
lahf
pushf
adc
mov
sub
cmpsl
aad
test
push
aaa
mov
xchg
cmp
jno
ljmp
and
test
jecxz
pop
sbb
vmread
mov
mov
sub
mov
mov
test
cmp
cwtl
push
jle
das
dec
test
roll
mov
je
sub
pop
fnstcw
jge
push
neg
dec
ss
dec
call
mov
shrb
inc
cs
addr16
sub
mov
or
jno
lods
cmp
ss
mov
push
pop
dec
lahf
xor
dec
dec
stos
push
cmpsb
ret
pmaxsw
and
xor
adc
ds
dec
in
jge
shll
dec
mov
lret
jmp
inc
outsl
scas
jl
dec
xchg
mov
js
arpl
jne
das
mov
sbb
sahf
push
mov
jl
bound
cmpsb
jbe
test
ds
fisubl
fnstcw
ljmp
popl
imul
mov
cltd
and
scas
idivl
popa
rcrb
dec
cmp
push
cmp
xchg
aaa
pop
loop
add
hlt
sub
mov
and
mov
pushf
nop
jae
mov
push
adc
into
dec
push
sbb
nop
cltd
out
aad
cwtl
mov
scas
cmp
cld
sbb
aaa
cmp
scas
dec
aaa
leave
dec
jb
mov
dec
xor
les
mov
inc
not
mov
mov
mov
mov
add
pushw
jmp
xchg
es
dec
ret
lods
pop
movsb
mov
add
scas
xchg
cli
xchg
pushf
add
dec
inc
ffreep
fsubrp
sbb
movb
xchg
or
test
sub
adc
push
mov
imul
mov
jmp
xorb
or
repnz
mov
scas
in
imul
jecxz
js
fbstp
add
jns
cwtl
aas
xchg
leave
cmpsl
jae
ljmp
adc
cmc
bound
push
popf
xchg
inc
cwtl
ret
jb
add
repnz
add
inc
cld
fiadds
popf
mov
andl
cmp
sbbb
adc
add
jo
inc
pop
dec
insb
xchg
movsl
inc
dec
dec
mov
insb
xchg
cmp
push
divl
mov
push
hlt
cmc
add
fstpl
jo
popf
mov
xchg
subl
js
dec
in
push
add
mov
push
sti
cs
jle
out
pop
xchg
test
std
rcr
stos
outsb
lret
rolb
push
inc
cmp
dec
lods
jl
mov
shl
hlt
aas
jno
sbb
xchg
sbb
jmp
add
in
dec
imul
iret
mov
push
dec
sarb
mov
arpl
xor
aam
ja
scas
shrb
popa
imul
mov
xor
mov
sbb
ja
ds
daa
out
mov
xor
cwtl
xor
out
sbb
sub
push
cs
jge
mov
pusha
xlat
push
adc
int3
jnp
test
int3
cltd
aad
dec
inc
jp
pop
test
xchg
ret
test
fisubs
cmpsl
push
imul
pop
inc
sbb
mov
insl
pop
sbb
dec
stos
stos
fstl
stos
repnz
push
aaa
and
test
in
adc
xchg
push
xchg
push
mov
sub
call
lret
jp
mov
xchg
arpl
into
mov
push
xchg
jle
jae
mov
add
enter
test
out
push
addr16
sub
push
test
inc
jl
sbbl
mov
push
adc
inc
mov
jp
ds
mov
xchg
xor
dec
push
iret
mov
sub
pop
fsubs
test
cmpl
and
mov
jp
adc
lret
stos
adc
xchg
mov
xor
lcall
or
or
and
push
sub
loope
clc
addl
mov
enter
cwtl
xchg
cmp
jnp
faddp
popa
mov
lock
add
pop
or
xor
test
arpl
mov
pusha
mov
lret
test
popa
or
adc
dec
pop
add
sub
push
mov
jecxz
xchg
cmp
and
jae
std
aam
ret
jne
ljmp
ljmp
loope
gs
dec
or
sub
and
sbb
pop
enter
fldenv
in
and
push
je
fwait
dec
or
adc
nop
jp
dec
test
mov
mov
or
test
fwait
mov
inc
ret
and
and
pusha
xchg
push
add
jl
ret
push
call
jb
sub
push
adc
xor
bound
mov
inc
in
pop
and
ja
movsl
mov
dec
enter
repnz
xchg
leave
notl
add
gs
jbe
aaa
aaa
and
cmpsl
hlt
pop
cltd
mov
jecxz
xor
add
test
inc
pop
add
pop
and
data16
add
call
xor
add
sbb
sbb
test
pop
pop
in
repnz
mov
popf
jb
pop
in
cmpsl
mov
sbb
mov
dec
adc
xchg
cmp
mov
mov
xor
mov
mov
xchg
or
sub
leave
sbb
das
push
mov
adc
sbb
jnp
lea
dec
mov
mov
insb
ret
scas
or
cmp
add
pop
xchg
jl
push
ja
lahf
fbld
loopne
mov
ret
jle
xor
stos
sub
xor
insl
fmull
xor
shrl
test
or
mov
in
ss
xchg
push
mov
lret
mov
inc
mov
jae
pusha
mov
dec
adc
out
or
jge
sti
stos
ds
push
repz
pop
jl
ret
ds
nop
in
or
cli
movsl
pop
stos
push
mov
fistpll
xchg
insb
inc
out
mov
insl
es
cmp
gs
push
mov
jg
in
test
dec
mov
enter
nop
dec
shl
scas
repnz
movsb
aam
pop
sbb
add
mov
sub
sub
cwtl
shll
stc
dec
cwtl
lods
jne
shll
enter
into
lahf
scas
movsl
adc
push
inc
mov
xrelease
insl
mov
in
das
cs
sbb
in
push
mov
xor
sbb
rolb
mov
js
mov
jbe
inc
fwait
orl
dec
test
cli
mov
incl
movsl
pop
jbe
test
stc
mov
inc
rcrl
pushl
jecxz
mov
rcll
xor
cmp
ja
nop
or
fdivp
add
ret
cmp
and
insb
movsb
jmp
lcall
sbb
jge
enter
add
fistpl
pushf
pop
adc
xchg
shlb
pop
in
pop
test
mov
jae
cmc
push
sahf
repz
inc
inc
fisubl
mov
aas
ret
les
xchg
int3
mov
dec
mov
orl
daa
push
movsb
jmp
mov
inc
aam
lret
and
pop
mov
pop
mov
out
lret
dec
xchg
in
dec
mov
mov
and
fidivs
jg
sub
or
add
pop
stc
inc
pop
outsb
mov
and
lcall
arpl
or
lds
and
outsb
adc
pusha
inc
sbb
inc
scas
inc
nop
lds
cli
adc
cmp
jb
ret
mov
dec
adc
mov
pop
aaa
sbb
inc
mov
in
aas
sbb
jmp
sub
and
pusha
enter
xchg
add
call
push
or
mov
dec
fstps
add
lods
insl
mov
pop
adc
movsl
inc
shll
ret
jecxz
inc
sti
aam
mov
inc
test
or
and
sub
sbb
popf
orb
mov
outsl
mov
shlb
je
je
shrl
and
rolb
xor
fwait
lds
add
loopne
jl
push
mov
inc
push
cltd
outsl
and
add
inc
pop
jge
lods
inc
movsb
dec
push
inc
push
enter
outsl
insb
test
ljmp
xor
inc
or
out
jle
inc
push
and
dec
fidivrs
or
add
out
push
and
xchg
aam
pop
sbb
jae
push
add
aaa
stc
adc
sarl
fidivl
push
xor
push
aas
pop
gs
and
sub
and
inc
and
lret
loop
cmpsb
jecxz
sub
les
aaa
sbb
sbb
movsb
ffree
xlat
or
add
shll
loop,pn
pop
xchg
adc
loop
and
in
jnp
loop
and
lods
dec
inc
icebp
in
aaa
out
clc
mov
bound
jnp
jb
xchg
lahf
je
add
jg
mov
pushf
daa
mov
cs
js
fiadds
outsl
lock
cmc
jo
xor
jmp
cmpsb
lods
addb
sbb
ret
shl
push
xor
cmp
mov
and
xchg
in
or
xor
es
mov
stos
je
sbb
push
push
jns
add
dec
mov
dec
sti
adc
lahf
inc
adc
lret
adc
jnp
pop
movsb
ret
stos
f2xm1
dec
fnstenv
or
mov
aad
out
pop
lods
lret
stos
rorl
push
cmp
icebp
or
or
jecxz
je
inc
adc
daa
inc
popa
sti
sub
jl
xchg
inc
lea
shrb
cmpsl
or
test
aaa
push
xor
or
in
icebp
and
nop
inc
inc
sti
fs
hlt
hlt
inc
cmp
and
repz
mov
sub
inc
dec
and
inc
jne
cmc
jg
xchg
test
cmp
sub
fdivrs
das
jp
dec
jmp
das
jge
push
lret
pop
sbb
imul
and
je
inc
jae
jae
jb
stos
aad
and
ficoml
mov
addb
jnp
shlb
dec
fsubr
dec
movsl
aas
clc
pusha
lret
movsb
frstor
jb
inc
clc
ljmp
cmp
jge
cs
movsl
mov
je
test
mov
leave
shrl
dec
das
mov
jns
cmpl
cmp
and
and
dec
pop
jno
out
push
pop
pop
shlb
mov
and
pop
xor
les
scas
jge
ret
sbb
sbb
loop
sbb
xor
mov
lock
mov
add
cmpsb
lret
orb
xchg
cmpsb
clc
sbbb
fdivrs
in
les
adc
movsb
inc
push
mov
testb
ss
testl
mov
and
mov
and
and
push
shlb
xor
xchg
xlat
loope
inc
mov
bound
jl
in
sbb
js
cli
mov
rolb
cmpb
dec
pop
mov
push
jns
or
mov
adc
or
xchg
cmp
nop
adc
xor
xchg
jmp
adc
adc
pop
and
pop
test
lret
push
testb
test
xchg
jnp
sahf
mov
fdivl
jnp
shll
push
out
inc
pop
gs
std
push
sub
fbld
pop
and
pop
pop
shll
and
and
clc
les
add
mov
pop
sti
test
mov
in
mov
push
jnp
mov
mov
cmp
mov
aaa
je
jg
nop
or
mov
mov
xchg
pop
test
sbb
ds
pushf
pop
loope
mov
inc
add
jg
pop
mov
aam
cmp
fcomi
in
scas
jge
adc
test
sbbb
xchg
cs
leave
pop
cmp
mov
and
sti
cs
inc
dec
shlb
cmp
adc
xor
adc
cmp
jmp
mov
add
and
cmp
lods
scas
in
mov
add
test
enter
mov
inc
pop
les
cmp
and
mov
mov
xlat
int
faddl
inc
mov
lods
fsubs
sub
movsb
js
sahf
mov
orb
rcll
mov
popf
sub
in
xabort
out
mov
shrb
in
imul
push
or
movsl
gs
sbb
xchg
sub
push
roll
pop
mov
mov
nop
jnp
lret
repnz
repnz
cs
out
mov
imul
bound
push
sbb
jae
push
xchg
mov
lods
iret
out
ljmp
cs
out
dec
cld
mov
out
fldl
and
push
or
xchg
leave
mov
jns
inc
jle
clc
je
add
and
jno
sarl
jb
push
jecxz
or
pushf
jecxz
pop
sahf
sahf
adc
bound
repnz
fiadds
push
push
subl
sub
mov
rcrb
aas
ficompl
test
dec
push
cmp
es
fimuls
hlt
ds
pop
les
ss
fcoms
sbb
out
jmp
mov
or
lcall
jp
add
xor
lahf
stc
mov
sbb
pop
das
dec
daa
imul
xchg
or
mov
xchg
xchg
fsubs
or
mov
add
mov
insl
push
out
mov
mov
pusha
sti
jbe
in
mov
movsl
push
cwtl
sbb
out
mov
fldz
pushf
cmp
pop
mov
pop
sbb
cmp
rolb
sub
push
mov
push
pop
fidivs
fwait
aad
sbb
jg
cli
cmpsl
jne
arpl
or
orb
cmp
loopne
dec
out
movsb
xor
ljmp
out
adcb
sbb
sub
jmp
sbb
sub
cmp
aaa
arpl
sub
inc
adcl
je
aas
cltd
loopne
pusha
xor
and
leave
out
dec
int
jns
mov
stos
xchg
push
cli
jnp
and
xor
in
repnz
fistpll
notb
cmp
sbb
mov
xchg
push
and
fnstenv
push
stc
popa
push
loopne
icebp
pop
repnz
js
es
cmp
xor
sbb
pop
std
pop
notl
loopne
mov
insb
cmc
mov
ja
mov
imul
mov
xchg
std
jb
fsubrp
jle
mov
icebp
loope
jg
adc
sbbl
and
stc
aam
mov
sub
popf
sti
insb
hlt
jno
mov
aaa
aaa
pushf
in
or
xlat
jle
pop
sbbl
jb
outsl
inc
jecxz
insb
or
jns
pop
cs
cmp
inc
xor
mov
cwtl
ret
sub
jg
hlt
push
aam
testl
icebp
imul
pop
sti
pop
and
push
sub
loop
incb
ret
and
test
adc
push
lock
cmc
data16
out
inc
icebp
mov
movsl
xor
mov
sahf
loopne
add
push
mov
push
loopne
mov
inc
repnz
popf
subb
xchg
outsb
negl
pop
daa
aaa
or
push
daa
bound
cmpsl
outsl
pop
jl
cmp
sbb
fnsave
pop
cmp
stc
test
cmp
hlt
pop
mov
mov
insb
testl
sub
push
out
popl
jle
icebp
loopne
jg
std
sti
cmp
popf
insb
icebp
lcall
rep
idiv
rorl
outsl
not
dec
or
insl
push
push
arpl
hlt
and
mov
addr16
jp
adc
dec
jp
pop
arpl
pop
and
mov
sub
mov
cmc
int
insl
flds
fldt
push
jno
popf
shll
scas
lret
in
xchg
movsb
outsl
shufps
dec
sub
dec
inc
push
adc
dec
jnp
je
or
iret
scas
dec
loop
and
lods
add
sub
jg
or
sbb
mov
add
ror
push
mov
cmpsb
vcvtpd2dqy
cmp
add
jle
inc
add
pop
insb
sub
xchg
fdivp
xchg
or
stos
mov
rorb
inc
out
xchg
in
cli
sub
ds
and
mov
test
pop
jp
popf
test
xor
popf
aam
dec
sbb
sarb
lcall
mov
sahf
stos
enter
arpl
adc
inc
xlat
es
sub
sub
lock
inc
pop
js
movsl
lret
lods
push
pop
sub
and
roll
sub
incb
out
in
xchg
pop
call
clc
clc
imul
ja
cmp
add
mov
ret
lret
aam
in
lds
push
jns
dec
fisubs
xchg
sub
test
pop
dec
sbbl
sbb
dec
xchg
add
sbb
adcl
xchg
arpl
and
jae
pop
icebp
add
out
ljmp
cmp
mov
adc
dec
jne
aad
rol
jne
dec
cmp
ja
xchg
dec
cmp
jge
icebp
inc
lret
les
mov
push
loop
dec
pop
sub
ret
pop
jae
push
lcall
xor
adc
xor
and
dec
inc
loop
insl
adc
sub
xchg
cmp
sbb
jge
lea
sbb
loopne
lods
into
je
cmc
or
cmpl
xor
aad
xchg
fldt
sbb
mov
ss
jb
sti
jne
or
xchg
ret
or
hlt
subl
pop
in
lret
into
stos
shlb
int
jmp
test
or
popa
sbb
pushf
sub
repz
mov
std
inc
lods
test
add
xchg
js
dec
mov
mov
cmp
subb
push
mov
adc
dec
lds
dec
rol
or
addr16
push
mov
pop
xor
rcrb
sub
int
pop
js
fadds
pop
xor
cld
xor
xchg
mov
loop
cmp
add
adc
jns
xchg
cld
inc
and
shr
or
loopne
sub
ja
jecxz
rcrl
push
inc
ret
gs
push
imul
imul
mov
or
adc
dec
sub
mov
out
or
es
push
sbb
insl
and
push
mov
ss
or
in
lahf
out
lret
aam
cltd
loopne
sub
sbb
mov
test
jno
pop
push
fimuls
xchg
ds
aad
push
pop
daa
outsb
mov
enter
movsl
and
jbe
adc
fmull
popa
insl
jne
inc
adc
push
loopne
add
cmpsl
sub
movsb
jge
das
cmpsl
push
aas
fwait
mov
jle
aad
movsb
xor
out
add
aaa
mov
sub
jb
and
push
ljmp
loopne
test
into
cmpsb
mov
pop
or
push
dec
test
push
cmp
jno
hlt
addb
call
push
aam
mov
mov
popf
sti
in
out
pop
lcall
rcl
in
mov
nop
mov
pusha
out
mov
lahf
cli
xchg
pshufw
sbb
int3
add
jo
test
sbb
daa
add
std
stos
push
pop
addb
cs
into
cmp
and
ficoml
aas
ret
iret
mov
clc
lods
daa
mov
mov
and
in
popf
pusha
imul
popa
push
mov
push
cli
sbb
lret
mov
xchg
pop
jb
insl
mov
mov
nop
mov
mov
shlb
subb
add
xchg
out
pop
sbb
dec
ds
shl
xchg
sbb
imul
je
pop
xor
dec
ss
in
and
lods
push
adc
popf
pop
loop
mov
xchg
push
inc
push
pop
jno
xchg
int
sub
js
jmp
mov
sbb
and
mov
mov
stc
jecxz
rcrb
mov
leave
add
or
mov
jecxz
dec
pop
or
shrl
lret
popa
sbbb
cmp
inc
sbb
lods
or
loop
les
inc
adc
add
push
mov
les
mov
adc
jge
cmp
sbb
sbb
fistpll
jge
aad
mov
sub
sub
imul
lahf
sub
test
dec
add
cmp
add
sbb
je
clc
test
ds
out
push
lret
pop
test
or
js
fidivrs
mov
cmp
inc
mov
xor
adcl
push
mov
adc
cmp
push
in
rorl
leave
fstps
xchg
test
inc
ljmp
insl
xchg
sti
add
add
test
sbb
daa
xor
in
fcom
jl
jne
cmpsl
outsl
and
add
push
arpl
mov
lahf
aaa
xor
lret
test
sbb
addr16
dec
fbstp
mov
jle
js
xchg
fmul
mov
mov
xchg
aam
sti
dec
loope
or
cld
xor
mov
rep
jo
pop
test
movsl
inc
in
or
pop
ss
popa
popf
enter
int
imul
popf
loop
orl
xor
idivl
jl
mov
orb
mov
jecxz
inc
stc
add
int3
dec
sbb
cld
cmp
arpl
iret
dec
push
lret
push
cmp
call
pop
inc
xchg
aaa
loope
mov
adc
jp
jp
xchg
cmpsl
shll
inc
jecxz
call
cmpsb
mov
cmc
ret
push
pop
inc
mov
add
call
ret
sub
lea
fbstp
ret
dec
pop
cmp
dec
adc
xor
loopne
rcrb
push
xor
xchg
pop
inc
jge
sbb
adcb
push
push
push
rcrl
pop
pop
cmp
mov
dec
jbe
in
bound
adc
pop
lahf
push
inc
clc
scas
sbb
ss
adc
or
ret
sti
bound
mov
pop
in
test
jecxz
popf
lock
fs
loope
negl
fwait
inc
icebp
stos
cli
leave
adc
fs
push
rorb
popf
and
rcr
aaa
mov
pop
sub
cmp
jmp
mov
dec
push
and
xor
in
fisttpl
xlat
cmp
test
pminsw
push
into
inc
and
fs
or
sbb
and
adc
fs
push
jle
jmp
or
pop
cld
int
xchg
mov
jne
sbb
push
mov
popa
pop
lods
dec
fcmovnbe
sbb
jne
mov
lock
mov
lods
clc
daa
add
sub
xchg
and
out
sub
push
pop
testb
stos
inc
das
addb
dec
sub
or
dec
lods
insb
es
sub
dec
ret
sub
add
lahf
int3
addl
hlt
mov
mov
and
cs
inc
jns
lret
aas
test
imul
sub
xchg
adc
mulb
push
pop
jae
push
out
lahf
in
push
mov
imul
bound
mov
movsl
inc
push
sahf
mov
add
mov
xchg
and
testl
push
int
dec
sbb
pop
adc
imulb
adc
mov
xsha1
cmpsb
leave
xchg
sarb
inc
and
outsl
les
ljmp
xor
das
iret
ljmp
pop
mov
daa
push
out
push
rcl
dec
fists
push
outsb
roll
lds
jg
pushf
fnstsw
es
and
cmp
rcr
push
lds
sbb
sub
addb
jnp
fidivrl
adc
dec
add
jne
jns
add
cmpsb
jnp
cmp
jns
shlb
mov
cmpsb
xchg
add
das
jnp
repz
cltd
fimuls
cli
add
rcrb
cmp
in
jp
sbb
and
adc
movsl
jne
pop
sub
jle
jno
add
sbb
out
mov
push
mov
dec
ss
or
mov
sti
lock
mov
sbb
fwait
ret
stos
lret
ret
sub
jo
cwtl
xchg
insl
mov
push
cmp
xor
pop
fmull
les
decb
fiaddl
mov
inc
fmull
xor
sbbl
repnz
int
jne
push
mull
and
ror
add
push
data16
sub
inc
jmp
and
and
mov
test
daa
in
ret
je
sub
enter
push
shrb
lcall
adc
aam
inc
dec
add
pop
cltd
xor
out
mov
add
push
and
mov
mov
mov
push
testb
jnp
arpl
aas
push
sbb
out
and
xchg
ds
jmp
arpl
mov
dec
jb
test
jo
icebp
shlb
icebp
fimuls
cmpb
mov
mov
inc
mov
aam
inc
mov
add
vaddps
sub
sbbb
out
aaa
xchg
mov
push
cmp
sbb
jbe
push
jo
mov
add
data16
fdivs
in
sbb
outsl
aam
dec
cmp
sub
sar
rol
xchg
mov
sbb
and
scas
and
nop
enter
ficoms
int3
pop
add
test
jmp
sbb
lods
pop
pop
mov
loope
in
clc
popa
test
mov
cs
cmp
aad
xchg
cmc
xchg
mov
pop
les
rolb
cmpsl
sbb
xchg
pop
repz
lods
pusha
arpl
aaa
mov
cmpsl
and
les
push
inc
test
arpl
test
in
inc
movsl
mov
xor
js
and
cmp
cmp
test
shl
mov
jb
dec
test
dec
sub
out
mov
iret
in
and
pop
mov
dec
test
mov
dec
hlt
mov
dec
mov
or
js
push
shll
add
int3
fstpt
lahf
inc
cli
xchg
mov
cltd
icebp
sub
std
sub
sti
es
inc
pusha
pop
pop
mov
fisubl
add
xor
push
cmp
aam
xchg
fwait
lret
les
jmp
insb
inc
pop
lock
dec
push
mov
bound
scas
jg
bound
inc
stos
rcrb
std
jmp
and
inc
adcl
sbb
or
pop
testl
dec
in
shlb
xchg
fbld
cs
and
push
xlat
dec
or
data16
mov
scas
shll
mov
lds
push
aaa
lret
mov
sub
movsl
scas
add
or
add
and
dec
cmp
in
xlat
fcompl
dec
stos
in
jecxz
fwait
popa
adc
adc
jl
adc
push
int3
push
stos
scas
inc
jle
push
xchg
pop
pop
or
lock
xchg
mov
js
mov
mov
aaa
bound
adc
aad
test
fmulp
out
dec
mul
mov
es
inc
jg
cmp
jb
mov
inc
fsubrp
push
and
sub
sbb
and
dec
bound
cld
in
adc
inc
ret
out
fnsave
pop
cmc
pushf
xchg
inc
pop
ror
popf
loopne
negl
fwait
xor
or
xor
insl
fstpl
dec
idivl
js
mov
roll
cmp
fistpl
das
sarb
sti
xchg
int3
inc
andl
mov
cmp
test
call
push
xchg
jne
int3
enter
loope
lods
icebp
jns
adc
pop
add
popa
push
fisubl
scas
loop
loope
xchg
je
or
push
dec
inc
scas
mov
xchg
shlb
out
mov
xchg
and
es
movsb
inc
inc
mov
xor
js
or
cli
pushf
adc
inc
xchg
xchg
int3
ficomps
adc
sbb
sub
sbb
mov
push
sub
lods
pushfw
xchg
loope
jecxz
div
clc
icebp
popl
mov
ds
cli
mov
lds
mov
or
xchg
ja
dec
sub
xchg
in
nop
loopne
pop
push
nop
and
gs
sub
les
inc
or
sbb
fs
xor
repnz
out
pop
push
mov
add
fs
sub
jge
mov
rorl
into
es
int
jl
adc
or
xchg
push
lea
mov
popa
xor
mov
scas
sahf
out
popf
iret
lret
cmp
jge
sub
inc
test
jle
push
adc
negl
pop
cmp
ret
pop
mov
cli
jl
stos
xchg
sti
cmp
xor
popf
jo
cmp
or
push
dec
mov
fdivr
sbb
mov
mov
jbe
cwtl
and
jmp
insb
ss
data16
xor
xchg
fstps
add
push
pop
pop
aaa
test
movsb
mov
aaa
sbbb
pop
xor
enter
rcl
jns
ds
xor
fidivs
lock
lret
lret
ret
shl
repz
cltd
imul
imul
test
jno
sbb
xor
fs
cmp
sahf
int
jecxz
xchg
nop
and
in
inc
cmc
push
or
sub
push
push
aad
loope
lea
jmp
imul
addr16
push
insl
adc
movsl
cmpl
jbe
cmpb
mov
lea
test
add
inc
lock
sub
mov
ficoms
outsl
and
lret
xor
xor
xchg
lods
in
sti
in
out
loope
fisubrs
fisubrs
test
mov
fdivs
out
bound
in
inc
fildll
int3
cmp
pop
rclb
sbb
jecxz
ret
lds
jle
pop
fdivs
into
cli
imul
rcl
call
mov
inc
add
lea
arpl
lock
mov
inc
xor
xchg
mov
shr
sbb
push
cs
clc
and
inc
in
lods
dec
in
sub
cmp
stos
cmpsl
sub
clc
mov
mov
imul
inc
sarb
and
jp
aam
in
mov
lret
jge
insb
mov
lock
sbb
cmp
hlt
mov
push
jge
mov
sbb
mov
dec
mov
scas
xchg
or
ret
dec
int3
pop
or
xor
dec
pop
jne
push
xchg
comiss
inc
jnp
imulb
mov
dec
addl
push
js
push
pop
dec
idivl
inc
mov
sub
je
cmp
pop
fadds
std
flds
mov
mov
jl
sbb
pushf
xchg
adc
sub
lret
dec
add
cmp
pusha
inc
ret
add
xchg
ret
or
add
out
sub
push
out
aaa
adc
mov
xor
sbb
xchg
push
cld
xchg
mov
or
scas
xor
push
pop
test
cmp
hlt
or
push
fisubrl
lods
mov
adc
fidivs
adc
or
cmpsb
loop
pop
and
push
subl
mov
and
pop
movsb
outsl
inc
cli
mov
enter
push
mov
in
dec
fisubs
dec
xor
push
or
add
fdivs
lret
xor
push
in
lahf
add
mov
popf
in
iret
mov
loopne
xor
les
shl
pop
push
push
inc
fiadds
xor
gs
dec
in
jnp
xchg
mov
lea
rcl
mov
stos
outsl
rolb
pop
jnp
shl
mov
scas
enter
jmp
jle
jno
mov
stos
xchg
xchg
sbb
lret
dec
leave
add
cmp
xor
repnz
movsl
insb
cmpsb
or
lods
and
jle
lds
push
mov
jo
mov
std
jnp
scas
and
inc
das
and
daa
movsb
cmp
or
cmp
xor
add
mov
and
jnp
shrb
jmp
ret
cli
call
mov
xor
jbe
fidivrl
into
mov
movsl
xchg
xchg
int
sub
flds
mov
jo
and
fs
in
in
push
shl
ds
or
outsl
jo
jae
imul
cmp
je
pop
xor
add
and
aas
nop
inc
mov
test
add
cmc
in
popf
jmp
mulb
imul
cmp
test
mov
sbb
xchg
mov
call
cmpl
xchg
pop
cwtl
and
sub
ljmp
call
js
jmp
cltd
call
pop
pop
mov
addl
imul
fsts
lret
push
inc
cmp
stos
imul
pop
dec
rcll
shr
cmp
in
add
pop
and
test
mov
push
cmp
mov
mov
pop
inc
mov
adc
pop
lret
cmc
adc
lds
cli
xor
and
fdiv
inc
or
ljmp
mov
sub
inc
push
and
xchg
mov
icebp
cmp
je
mov
pop
or
jge
jg
add
cld
call
dec
mov
adc
xor
cld
dec
aad
adc
mov
adc
fidivrs
in
daa
dec
fmuls
or
sarl
push
lret
and
and
sub
mov
fidivs
xor
cld
sub
and
out
lret
fdivl
icebp
test
es
loope
cmp
mov
dec
mov
iret
cmpxchg
jnp
iret
stos
inc
fucomip
adc
jnp
xchg
xchg
hlt
test
mov
jg
imul
xchg
mov
inc
fisubrl
mov
add
xchg
jne
fisttpl
imul
inc
cmp
xor
fdiv
iret
data16
jns
ds
test
cmp
mov
pop
push
movb
shl
inc
xacquire
shlb
inc
or
das
out
rol
xlat
sbb
dec
dec
xor
fiaddl
and
push
pop
lods
stos
aam
movsb
data16
add
pop
fidivl
aas
orl
insb
cmpsb
and
arpl
leave
les
shll
cmpsb
shl
cld
loope
ret
push
orl
cmpl
and
ret
andb
shl
mov
fs
sub
dec
and
lret
mov
mov
mov
mov
fstl
mov
push
mov
test
cmp
push
into
dec
mov
sub
enter
xchg
insb
loopne
push
repnz
ja
fbld
out
test
adc
or
or
aad
mov
lcall
cmc
lahf
mov
movsb
sub
push
and
xor
mov
std
popa
mov
inc
or
push
push
pop
mov
or
cmp
enter
sub
adc
cmpsl
mov
push
lcall
xor
hlt
mov
mov
inc
mov
jb
push
cs
jmp
movsl
in
inc
or
mov
rcl
fwait
mov
sub
and
int3
sub
xchg
or
out
push
push
les
ljmp
sarb
or
inc
loope
mov
std
dec
shrb
ds
aad
jg
lret
out
push
stos
out
lret
out
push
stos
add
and
pop
pusha
dec
cmp
sbb
xchg
in
add
sar
lcall
add
iret
lock
imul
arpl
or
dec
pusha
popa
push
mov
xchg
pop
cld
sbb
mov
inc
mov
dec
pop
cwtl
xchg
mov
cmc
add
mov
jae
mov
mov
cli
mov
and
mov
filds
xor
adc
insb
pop
ljmp
or
bound
loope
pop
mov
dec
cmp
test
push
or
sub
xor
out
sahf
mov
cmp
lock
sub
pop
push
inc
inc
lret
jle
imul
out
pop
iret
mov
cmc
inc
out
nop
outsb
push
mov
xor
mov
lret
dec
xor
fwait
pop
ficoms
mov
cmp
idivb
repz
out
jecxz
stos
in
dec
js
aam
xchg
out
lea
lds
in
jl
loopne
push
or
push
dec
and
je
xor
dec
pop
pop
ds
dec
js
mov
iret
lret
fmulp
push
fwait
pop
push
sbb
inc
mov
jle
shlb
subl
adc
mov
xchg
test
insb
out
or
adc
iret
push
outsl
adcl
dec
jecxz
dec
filds
jo
sub
aam
arpl
push
ja
ss
jae
out
jp,pt
mov
loopne
pushf
repnz
jbe
ret
in
jl
sti
int3
cmp
fcmovu
daa
or
push
lea
sti
inc
lahf
mov
pop
mov
jmp
bound
mov
movsb
imul
fisubrs
pushf
icebp
stos
push
mov
aaa
dec
pop
aad
jnp
popf
and
xchg
pop
sub
xor
xor
and
sbb
cmp
add
mov
aaa
sbb
or
fwait
mov
arpl
cmp
pushf
or
add
shlb
insl
clc
repnz
push
jmp
inc
test
aas
ret
test
push
fs
leave
inc
aam
xchg
arpl
fbld
imul
rcrl
cs
lods
mov
cli
cmc
cwtl
jl
sahf
fisubrs
ljmp
sbb
mov
sbb
imul
push
xlat
lods
cmpsb
mov
ljmp
dec
nop
daa
mov
mov
inc
mov
mov
sub
mov
ret
testl
mov
sti
mov
push
jae
movsl
and
div
mov
imul
in
jl
add
jmp
cli
or
outsl
and
addr16
pop
fistpll
push
xchg
mov
cwtl
outsb
fimull
lods
dec
pop
lods
addr16
fnstsw
sub
and
mov
daa
rolb
sub
xchg
sbb
and
lock
stc
fwait
ja
gs
pop
jg
sub
jbe
lret
jbe
rclb
mov
add
mov
cmc
sub
push
cmc
push
lods
dec
ss
push
lods
dec
xlat
std
mov
dec
and
inc
mov
in
add
inc
jno
xor
xor
iret
pop
hlt
ret
stos
dec
es
dec
lock
inc
sub
stos
xchg
xchg
fists
inc
adc
gs
mov
push
mov
ss
shl
inc
int
push
ljmp
into
jb
xchg
adc
push
lods
dec
pop
pop
lock
lods
dec
enter
push
repz
inc
imulb
pop
bound
inc
fabs
sub
out
lods
cmp
fnsave
addr16
into
pusha
push
mov
sub
roll
pop
mov
push
test
jns
cmpsb
dec
push
sbb
scas
sub
aaa
out
roll
push
inc
dec
xor
ljmp
fbstp
scas
jmp
and
test
xchg
or
rcrb
test
addl
and
sub
push
rclb
test
mov
cmp
xchg
jno
scas
jmp
mov
pop
push
shl
into
or
mov
xchg
mov
dec
jns
rcr
inc
push
jge
mov
mov
mov
pushf
mov
mov
fbld
sbb
popf
nop
repnz
xchg
test
icebp
xchg
push
jbe
mov
jmp
mov
sarw
adc
loopne
jg
pop
fcoms
pusha
addb
nop
sub
sub
std
xchg
sti
cmp
outsb
jo
push
incb
push
add
cmc
mov
in
scas
lods
mov
mov
aas
add
xchg
pusha
jnp
fbld
call
cli
cmp
jb
jecxz
mov
and
mov
pop
subb
orb
push
pop
test
inc
mov
icebp
hlt
cmc
mov
cld
idivb
imul
stos
pushl
sub
mov
pop
mov
mov
mov
pop
jb
outsb
dec
shl
outsb
inc
or
adc
test
cli
pop
cmpsl
mov
push
mov
adc
sti
xlat
fistpll
xchg
xchg
lds
fcomi
mov
and
test
addl
movsb
add
sub
aam
test
inc
xor
push
popa
lcall
or
xor
icebp
aaa
or
ja
mov
orl
lds
dec
insl
mov
movsl
add
mov
aad
add
jge
xchg
mov
outsb
div
jbe
mov
fists
pop
out
ret
pop
and
lods
jnp
or
loop
push
sbb
aam
mov
ds
mov
pop
mov
sbb
scas
push
adc
jp
jge
movsl
aam
cwtl
inc
divb
xchg
pushf
loop
pop
std
test
adc
push
adc
sub
subl
mov
xchg
popa
jmp
push
dec
cmpsl
jb
out
sti
cmp
mov
gs
sub
repz
fildl
sbb
inc
ss
cmp
ljmp
mov
rclb
xor
dec
push
in
mov
jnp
insb
stos
sbb
ret
orl
push
js
xor
cmpsl
and
out
dec
mov
inc
out
popa
ficompl
pop
add
pop
fnsave
lahf
mov
in
cmp
iret
ljmp
outsl
push
inc
inc
stc
dec
scas
adc
inc
jmp
lods
out
pushf
pop
mov
xor
jnp
add
inc
in
xchg
cwtl
mov
sbbb
cli
fisubs
cmp
mov
jns
js
inc
out
xchg
pop
add
divl
in
mov
dec
xchg
stos
dec
inc
sbb
xchg
fwait
imul
pop
mov
mov
in
iret
pusha
aaa
mov
fcmove
scas
outsl
push
repz
mov
fmuls
mov
loope
ficomps
push
add
cmp
nop
xor
mov
mov
out
mov
cmc
xchg
call
cmp
xchg
sbb
and
xchg
mov
into
adc
jp
das
lods
xchg
push
or
mov
jmp
test
xlat
or
sbb
dec
mov
jecxz
sub
fdiv
push
incl
pop
cltd
xchg
lcall
mov
xor
adc
and
xorl
imul
mov
inc
out
pop
adc
push
mov
mov
pop
push
int
dec
and
push
mov
es
subl
cmpsl
push
push
ss
or
rorl
scas
ss
out
and
movsb
insl
enter
mov
stos
jne
mov
add
cld
push
push
das
adc
jo
lret
mov
ja
inc
fidivrs
das
dec
dec
or
jp
xlat
add
stos
inc
test
enter
stc
push
add
or
inc
add
roll
inc
jmp
shr
in
sti
push
test
mov
out
push
xchg
adc
dec
mov
inc
inc
mov
sbb
pop
pusha
sbb
jne
subl
sub
mov
sarl
xor
popf
mov
push
out
popf
and
mov
addl
pop
pop
stc
pop
test
imul
pop
out
cmp
pop
xchg
lret
int
es
lret
mov
pop
pop
add
lret
out
pop
xor
cmc
notl
push
mov
insb
and
loopne
fmul
cmp
out
sbb
push
jmp
fistl
rolb
stos
push
js
cmc
loop
dec
pop
clc
repnz
xchg
adc
stos
xchg
sub
fwait
adc
dec
jmp
jp
pop
arpl
adc
test
jo
addr16
sub
and
jmp
jae
mov
fdivrp
fiaddl
scas
adc
in
sbb
es
cltd
lea
push
aad
xor
arpl
or
imull
adc
xor
inc
lods
mov
test
rcll
push
repz
cwtl
rorl
sub
jge
subb
xchg
mov
or
popa
add
lcall
jb
xchg
leave
xchg
push
cmpsb
int3
mov
int
out
das
lock
jnp
out
mov
push
leave
repz
cmpsb
sti
lret
mov
call
inc
cmpsl
mov
aad
pop
xchg
icebp
mov
lcall
sub
and
adc
xchg
int
cmp
in
in
fcoml
sbb
dec
lahf
sub
adc
push
pop
enter
dec
dec
inc
jge
cmp
out
xchg
lds
push
push
adc
aam
mov
mov
dec
pop
adc
and
jo
nopl
sub
push
mov
stc
mov
and
nop
push
data16
int
adc
je
push
pop
jp
inc
xchg
mov
dec
inc
leave
sub
movsl
push
cmpsl
js
mov
pop
shrl
push
scas
xchg
jo
arpl
fisubl
xchg
aaa
lcall
jecxz
stc
xchg
outsl
leave
mov
push
arpl
adc
arpl
mov
dec
jp
in
jle
ja
les
ret
xor
testl
js
sbb
pop
lea
test
jb
and
mov
data16
dec
and
fcoml
adcl
lcall
jp
mov
loop
xor
cmp
divl
inc
fistl
cmp
gs
mov
jno
daa
sub
psubusw
jp
mov
data16
int3
lods
sub
movsl
xchg
in
out
cmp
out
mov
ret
sbb
xchg
je
dec
ret
pusha
in
in
push
loop
pop
sbb
into
loopne
aaa
cltd
xchg
push
aad
movsb
mov
sub
loop
fsubrp
pop
xchg
jo
int
hlt
mov
push
mov
int
lahf
cmp
out
dec
stos
test
and
add
sbb
daa
aas
xchg
sti
bound
sub
mov
mov
daa
mov
mov
in
scas
jp
scas
or
pop
push
sahf
inc
add
imul
xchg
ja
loope
incb
fimuls
mov
cltd
outsb
cmc
inc
bound
fdivs
jne
jnp
imulb
rcr
mov
xor
es
or
lahf
mov
ror
mov
lods
int3
lds
loopne
adcb
mov
xchg
jbe
stc
mov
fwait
testl
mov
mov
or
inc
aad
adcl
negb
pop
mov
jmp
inc
in
sub
cmpsl
in
stc
jecxz
pop
sbb
das
xchg
jnp
pop
pop
jb
mov
mov
jae
xor
loopne
into
bound
sarb
mov
lds
sub
jg
cmpb
negl
lahf
sti
lahf
jge
jp
cmpsl
out
dec
aas
mov
imul
sbb
mov
adc
jecxz
or
jnp
inc
shrb
ficompl
hlt
pop
fnstsw
sahf
out
pusha
imul
out
lods
pop
mov
sub
stos
cmp
cld
pop
xchg
cmp
pusha
jbe
loopne
repnz
push
lods
dec
sub
movsb
xchg
int3
jp
mov
xor
in
xchg
jle
test
lds
fldenv
xchg
sub
ljmp
push
xor
fsubr
jle
stos
mov
pop
loope
push
loopne
lods
shrl
fdivr
push
out
sbb
cltd
das
inc
pop
bnd
outsb
jge
out
out
loopne
jge,pt
mov
pop
jle
xor
cs
test
ror
mov
pop
cltd
sub
arpl
subb
inc
outsl
cwtl
jmp
or
iret
jmp
or
sarb
cmpl
out
xlat
test
push
roll
in
je
pop
mov
ljmp
and
lock
in
enter
popa
pop
pop
sahf
add
or
fsubrl
mov
jno
in
fidivrl
adc
pop
and
fstpt
mov
and
dec
mov
mov
outsb
daa
or
jl
ds
lock
jbe
mov
dec
stc
xlat
fldenv
jecxz
and
hlt
cwtl
xchg
xor
xchg
pusha
cld
lock
pop
aad
mov
mov
cs
inc
xor
and
fbld
ret
xchg
inc
mov
hlt
jl
mull
pop
add
jecxz
mov
das
std
addr16
or
shll
jne
fnstcw
mov
subb
jno
xor
push
add
cmp
addr16
dec
stos
mov
dec
sahf
push
pop
mov
pop
inc
push
ljmp
stc
and
push
loope
and
sbb
pop
sbb
dec
add
sbb
jge
rolb
fldt
sub
in
pusha
ret
jo
fs
mov
jno
xor
xor
iret
sbb
dec
pop
mov
xchg
or
or
push
sbb
xor
mov
pop
aas
push
add
gs
and
imul
or
outsb
or
inc
insl
inc
xor
push
inc
int
ret
sub
in
cmp
mov
and
mov
mov
cli
xchg
flds
cwtl
aaa
movaps
sub
xchg
lret
ljmp
movsl
shll
adc
inc
sub
jns
sti
xor
sbb
testl
mov
insl
aaa
fmull
mov
ficoml
leave
iret
pop
mov
jo
int3
mov
sub
inc
xchg
cmp
clc
int
shlb
push
test
call
pop
jl
adc
aas
push
fstpl
inc
and
sarb
xor
data16
xchg
scas
push
or
test
jl
lcall
mov
bound
sbb
mov
out
push
mov
cld
ja
jge
xchg
jae
add
adc
call
mov
cmp
xchg
jo
sbb
mov
sar
dec
jo
hlt
in
in
movsb
popf
fwait
and
out
lcall
xor
mov
sbb
mov
mov
lods
dec
clc
jmp
or
inc
mov
cwtl
jb
movsb
xchg
iret
or
test
fbstp
int3
push
ficoms
les
imul
pushf
inc
cmp
out
std
andb
lds
cmpsb
jecxz
adc
jnp
pop
jle
jmp
or
movsl
inc
xor
and
xor
in
gs
push
sub
icebp
pop
out
dec
arpl
in
insl
dec
mov
out
mov
mov
cmp
pushl
jg
insl
rcr
js
pop
adc
inc
ret
lock
cmpsb
dec
stos
push
fists
pop
jo
sbb
lcall
mov
xchg
aas
repnz
repnz
jb
xchg
push
stos
xor
mov
push
cmp
xlat
xchg
sbb
sub
out
enter
test
cmp
fwait
movsb
andl
jg
cmp
scas
int3
push
sub
sti
xor
add
push
xchg
sub
and
push
aam
dec
mov
les
stos
gs
shll
mov
iret
notl
mov
sub
mov
adc
inc
push
push
mov
cmpsl
loop
mov
and
ret
pop
je
in
call
mov
mov
cwtl
rcrb
jbe
pop
adc
stos
out
dec
subl
cmp
sahf
lcall
insl
dec
rorb
gs
ja
xlat
sub
push
xor
scas
adc
out
sub
and
mov
enter
scas
sbb
mov
xchg
insb
lods
xchg
xchg
mov
enter
xchg
jl
cwtl
aas
ja
stos
fucomip
sarb
dec
cs
out
xchg
sahf
repnz
and
pop
or
cs
or
dec
jnp
cld
out
fcmovbe
mov
clc
jbe
lods
stc
loopne
call
pop
cld
mov
in
stos
out
sub
pop
mov
jmp
push
lods
hlt
cmpsb
xor
divl
fsubl
mov
jmp
dec
dec
movsl
mov
outsb
scas
xchg
in
loope
call
mov
jb
gs
insl
rcrb
negb
scas
mov
ljmp
movsb
testl
fwait
shlb
jbe
jae
popa
daa
mov
loopne
repz
mov
mov
rol
sub
lods
cld
sub
sub
imull
add
in
jg
mov
pop
push
dec
scas
push
xchg
mov
push
push
fstps
mov
out
sbb
enter
lcall
or
or
ljmp
out
data16
sub
loopne
je
adc
fildll
xchg
mov
lods
fisttps
shrl
lds
mov
xor
mov
cltd
sti
sbb
xor
jne
cld
sti
ret
and
jg
pop
dec
scas
clc
jbe
sbb
mov
imul
mov
xchg
fisttpll
mul
xor
adc
negb
mul
xor
ja
xlat
adc
or
dec
mov
pop
and
mov
mov
or
and
push
mov
loope
adc
mov
mov
xor
sbb
cltd
dec
pop
pop
mov
pop
nop
adc
test
shlb
ljmp
leave
sahf
dec
or
jge
or
or
cli
inc
outsl
pop
cwtl
xor
push
pop
cli
or
mov
scas
fisttpll
pop
pop
xchg
inc
js
cli
lahf
fs
outsb
mov
pop
lcall
popf
sbb
sbb
inc
mov
sbb
xor
insl
fstps
and
or
cmp
inc
add
ret
das
pop
sub
aaa
mov
inc
jecxz
std
cmp
ret
mov
dec
lret
mov
sbb
xchg
xor
stos
dec
fst
add
ficompl
scas
clc
jbe
xchg
test
push
push
out
scas
sbb
rcrb
rclb
cltd
add
xchg
test
jle
mov
xchg
pop
push
inc
mov
push
sub
jne
cmp
ljmp
in
or
or
negb
jp
inc
pop
add
out
loope
les
sarb
jbe
inc
and
mov
addb
mov
pop
and
pop
lods
mov
js
or
or
jb
xor
es
sub
imul
mov
testb
xchg
notb
into
std
mov
fidivrl
xchg
cmpsb
inc
movsl
push
xor
xchg
sti
pop
inc
add
mov
pop
cmpsb
ficoms
ds
sbb
xchg
dec
jg
pusha
fadds
bound
pop
push
in
sbb
ss
push
jp
push
cltd
xlat
ljmp
mov
cmp
sub
scas
jb
jmp
cmp
arpl
and
adc
inc
cwtl
lret
push
loopne
sub
inc
test
negl
mov
inc
jg
nop
test
cs
loop
sub
add
aaa
ret
adc
xchg
xchg
mov
hlt
jge
mov
in
inc
stos
sbb
jne
inc
orl
lods
int3
sti
mov
ljmp
add
negw
add
cmp
sti
mov
pop
mov
push
es
nop
jle
out
xor
repz
fistpl
int
dec
push
jnp
sti
cmp
adc
sahf
dec
js
cmp
sbb
xor
pop
gs
imul
aas
adc
cli
mov
dec
jmp
lret
into
xlat
xor
mov
pusha
imul
inc
leave
dec
adc
add
ret
mov
int3
mov
inc
bound
mov
test
cmp
push
sub
add
repz
xchg
sarl
push
or
push
movb
or
or
subb
pusha
cmc
xor
lock
push
iret
sbb
xor
in
cld
rcll
pop
mov
mov
icebp
sub
js
hlt
fildl
mov
sub
push
lret
pop
jns
fwait
es
inc
sbb
stc
xchg
adc
rclb
adcl
xor
in
lahf
dec
in
sbb
xchg
sbb
mov
aam
je
jecxz
xor
stos
xor
sbb
je
push
loope
repnz
jae
push
pop
push
shrb
and
xchg
xor
sbb
xchg
iret
icebp
dec
xchg
sub
inc
enter
xchg
xchg
pop
mov
dec
sarb
daa
and
adc
cwtl
dec
mov
and
xor
xchg
test
and
pushf
ret
movsb
or
repz
mov
leave
cs
cltd
mov
out
shl
sub
call
ficomps
cs
pop
dec
mov
cs
enter
mov
aad
push
sub
dec
xchg
xor
aad
xor
adc
cli
sbb
push
data16
cld
mulb
rcl
fwait
lret
mov
xor
add
pop
pcmpeqw
loopne
insb
adc
fadds
xor
jno
cld
pop
ja
cltd
jae
fcom
daa
mov
sti
inc
mov
shr
or
and
inc
add
mov
loop
sbb
bswap
cmp
xchg
notl
push
roll
ja
sahf
sub
in
xchg
das
mov
jbe
mov
jns
mov
cltd
mov
popa
dec
dec
push
jge
jmp
dec
popa
xlat
lods
test
dec
cmp
out
pop
and
ja
rcrb
jns
sarl
scas
dec
sub
test
mov
inc
or
xchg
ret
mov
das
jno
in
js
jmp
xor
stc
push
xchg
data16
lahf
out
push
mov
nop
mov
scas
jle
sbbb
sub
push
rcll
jp
test
jo
clc
sti
ds
shl
std
pop
xor
xchg
inc
out
add
inc
sbb
pop
jl
sub
sub
sub
adc
pop
popa
cld
xor
sbb
in
dec
aas
add
cmp
fsubs
cmp
int3
dec
cmp
gs
add
xchg
cmc
cmc
lds
xor
sahf
sub
xchg
lds
stos
dec
jl
push
fiadds
cli
cmp
xor
xchg
mov
mov
push
dec
sbb
mov
dec
lock
xchg
das
pop
mov
and
loop
pop
outsb
sahf
jl
adc
inc
inc
punpcklbw
mov
lods
and
rorl
mov
je
mov
add
aad
jo
pop
add
testb
arpl
mov
xchg
cmpsl
jg
sub
test
popa
mov
xor
lds
or
pusha
les
mov
fmulp
mov
lods
jg
jno
or
lret
or
mov
pusha
not
mov
arpl
adc
enter
pop
test
mov
insb
shrb
pop
sbb
into
fucomi
scas
sti
jecxz
sar
pop
std
push
call
pop
pushl
mov
cli
dec
out
mov
notb
cmp
fucomp
idivl
pop
mov
sub
push
dec
cbtw
fidivs
sub
mov
jg
pop
dec
jmp
dec
ss
jle
push
xchg
movsb
inc
and
push
mov
in
call
mov
jmp
jns
mov
shl
gs
mov
rcll
out
arpl
mov
ss
cmp
clc
adc
jb
jnp
push
cmp
ja
imul
jmp
loope
pop
into
shr
insl
jge
popa
shlb
je
inc
ret
popf
mov
mov
sbb
fldcw
pop
lods
add
movsb
pop
hlt
ret
pushl
cmp
jg
jle
insb
mov
out
push
pop
mov
aam
cmp
into
push
into
push
insb
mov
mul
iret
icebp
std
fdivr
ljmp
xor
fnstenv
insl
lock
push
mov
pop
in
es
push
fs
mov
push
sbb
call
es
or
ja
in
rclb
out
inc
lea
mov
popa
orl
mov
lea
outsl
outsb
into
and
push
cmpsl
enter
sub
out
stc
iret
nop
jnp
cmp
and
mov
leave
lret
insb
or
pop
out
in
pop
xchg
or
shr
cs
mov
xor
nop
xorb
inc
inc
mov
cmc
iret
inc
jo
push
rcl
cmp
popl
scas
jg
rcl
call
shr
add
push
inc
xlat
mov
jle
push
ret
add
out
mov
enter
jle
xor
data16
lock
jnp
mov
and
inc
dec
push
cmp
shlb
xchg
ret
call
dec
jnp
mov
sub
mov
pushf
movsl
test
jb
adc
mov
int3
xchg
push
inc
arpl
push
mov
ss
ss
idivb
dec
sbb
cltd
cmp
inc
lods
lods
xchg
dec
pop
arpl
xchg
arpl
push
movsl
mov
lds
sar
adc
jne
fldcw
push
cld
fnstenv
repz
jl
mov
fstp
movsl
in
mov
aam
xor
and
popa
fdiv
in
ljmp
lock
mov
xchg
pop
jns
inc
repz
leave
js
adc
cmp
fbld
add
jl
sbbl
mov
xchg
add
sub
test
adc
cmp
and
xchg
xor
lret
add
cmpsb
jo
ret
lods
xchg
dec
pusha
pop
lcall
xchg
inc
fisubl
jle
imul
jmp
int3
test
dec
or
xchg
push
xchg
xchg
dec
push
bound
insl
jne
xchg
mov
jecxz
or
mov
fistl
pop
mov
out
xor
inc
les
xchg
divb
adc
jae
jmp
mov
js
pop
insl
das
cs
pushf
fwait
mov
mov
cmp
sbb
mov
imul
cmpsb
xor
dec
mov
xchg
sbb
pusha
cmpsb
je
or
sub
ss
and
scas
das
pushf
xor
repnz
mov
sbb
mov
xor
mov
lea
mov
popw
cmp
loopne
add
xchg
pop
jnp
ds
lea
pop
mov
in
icebp
pop
cs
enter
add
lret
dec
dec
movsl
mov
scas
pop
out
mov
test
aad
push
outsl
jl
mov
or
into
mov
test
jmp
inc
lret
dec
inc
inc
lahf
ja
xchg
and
push
xchg
imul
aas
mov
cmc
fisubl
stos
push
into
dec
inc
xchg
out
adc
mov
fidivl
movsb
and
sub
inc
pop
jmp
loope
and
or
scas
xor
int
dec
jmp
adc
xchg
and
test
int3
clc
and
loopne
xor
lods
movsb
xor
fidivl
mov
movsb
sbb
cmp
inc
or
push
jno
mov
outsb
testl
push
clc
das
sbb
add
jle
sti
xchg
clc
xor
jl
mov
xor
fwait
cld
mov
xchg
dec
pop
mov
cs
insl
test
cmc
sbb
jg
mov
aam
arpl
fidivrl
mov
in
jecxz
pop
bound
add
mov
pop
test
fisttpll
stos
repnz
push
mov
rclb
fidivl
sub
mov
int3
sub
ja
lea
aaa
hlt
insb
xchg
cmpsb
mov
arpl
pop
dec
pop
xchg
and
sbb
jle
ret
xchg
mov
add
jbe
addr16
mov
adc
adc
sub
lods
mov
and
xor
inc
xchg
dec
add
or
mov
add
push
aam
rcll
insl
mov
testb
jp
scas
push
mov
mov
adc
xor
add
xchg
lcall
out
test
outsb
xor
js
clc
jg
mov
adc
cli
incl
fnstcw
or
ja
sti
jle
push
imull
add
xor
popa
iret
jp
cmpsl
mov
and
shrl
leave
mov
pop
inc
jl
mov
mov
mov
xchg
test
mov
jmp
cmp
mov
aaa
xchg
cmpsb
repnz
jg
and
jg
adcl
nop
xchg
xor
cltd
movsl
repz
sub
imul
fildl
imul
mov
aam
xchg
addr16
inc
add
and
push
mov
shll
sarl
nop
insl
dec
jbe
inc
cmpsl
cltd
xchg
jne
cs
mov
add
xor
adc
sti
xor
out
scas
insl
dec
iret
fs
mov
andl
mov
imul
cmp
pop
mov
or
and
ss
cmp
rclb
std
xchg
xchg
mov
adc
in
add
je
inc
pop
ljmp
insl
pop
rorb
and
mov
in
adcl
cmp
pop
cli
dec
ret
sub
jmp
dec
xchg
and
mov
push
sti
scas
dec
in
imul
sahf
push
or
mov
or
and
idivb
mov
addr16
push
jb
push
ret
jo
push
test
inc
stos
jb
inc
ja,pn
out
shll
push
mov
pop
push
aam
scas
adc
or
int
dec
lcall
into
or
loope
mov
ja
roll
pop
das
lcall
mov
mov
outsl
inc
cmp
mov
mov
fdivr
inc
mov
mov
out
pop
lods
pop
push
lock
js
repz
push
cmp
ficoml
mov
mov
js
jns
mov
jle
jns
out
std
adc
ss
sbb
pop
out
mov
jmp
cld
js
imul
imul
bound
in
xchg
sbb
fwait
iret
cmc
js
pop
pop
mov
jge
pushl
outsl
aas
cld
icebp
jnp
out
xor
mov
xor
adc
xor
movsl
rorl
movsb
gs
xchg
sbb
int
jg
dec
xor
sahf
flds
xchg
pop
je
ret
cmp
js
jmp
cli
mov
addr16
divl
mov
add
test
call
cmc
arpl
xchg
ja
xchg
mov
add
lods
wrmsr
lods
sbb
and
shlb
fst
pop
mov
mov
dec
cmp
sbb
stos
jne
adc
mov
insb
sub
jbe
scas
fwait
sbb
mov
xor
fdivs
jl
sti
or
adc
mov
or
xlat
sahf
jb
andl
cmc
fadds
nop
sahf
jmp
cmpsb
add
mov
dec
cmc
dec
pop
js
dec
das
pusha
jbe
push
mov
jl
mov
arpl
adc
aas
enter
sbb
adc
sbb
mov
insb
lock
aaa
dec
adcb
pop
xchg
mov
xor
lea
mov
lcall
cltd
fs
je
fisubl
fidivrl
cmp
in
add
cmpsl
icebp
and
adc
aaa
add
xchg
jge
cltd
lds
shl
test
arpl
fsubrs
and
or
outsl
fiadds
push
xor
stc
or
cmpsb
testb
in
movsb
sub
cmc
or
rcrb
loope
xchg
xor
xor
xchg
aaa
dec
into
lahf
mov
andl
repz
push
rol
dec
fisubrl
test
gs
mov
in
xor
addr16
pop
insb
nop
clc
orl
sub
in
push
out
push
divb
dec
aaa
mov
fidivrl
imul
je
jge
pop
push
add
inc
aam
imul
insl
dec
mov
sbb
jne
mov
ret
loope
pop
push
pop
lcall
lods
or
dec
adc
outsl
js
je
or
push
jno
mov
movsl
mov
adc
inc
inc
cmp
mov
sbb
adc
sbb
xor
add
and
xchg
xchg
dec
xchg
sub
xor
lcall
mov
and
add
inc
xor
push
adc
add
cs
not
mov
pop
or
mov
sub
or
arpl
sti
and
shll
push
add
nop
mov
cmpsb
sub
out
cld
adc
in
mov
mov
dec
push
pop
sbb
adc
clc
movsl
xor
jae
mull
pushl
repnz
sbb
push
ljmp
or
push
movsl
fcompl
add
push
std
jge
arpl
out
aas
xchg
js
cwtl
and
mov
div
jnp
adc
xchg
xchg
or
sti
mov
sti
imul
mov
xchg
out
inc
cmp
sbb
sub
and
test
movsb
std
adc
dec
out
inc
lret
cs
orl
mov
pop
sahf
negb
jg
out
push
push
adc
add
and
cltd
stc
push
scas
mov
xchg
add
sub
fldt
lods
xchg
icebp
and
je
sbb
jne
pop
loope
pusha
adc
fmuls
sub
insl
jle
jbe
inc
xchg
adc
or
incb
cmp
cmp
outsl
in
filds
or
lea
aam
xchg
sub
or
sub
or
pop
shll
shrl
cmp
mov
push
jecxz,pn
cmp
push
mov
cmpsl
cld
ret
mov
aaa
pusha
jmp
push
sub
dec
aaa
inc
mov
jns
inc
xchg
rcll
jecxz
push
push
sub
xlat
int
je
sbb
or
mov
lret
test
mov
dec
cli
loope
std
aaa
mov
xor
test
out
into
sub
insl
push
testb
lds
push
mov
push
cmp
mov
loope
jg
pop
xor
shlb
add
mov
in
addr16
dec
mov
dec
jg
mov
pop
arpl
stos
scas
test
call
xchg
insl
dec
xchg
ljmp
and
popf
xchg
subl
mov
bnd
movsl
and
add
loop
push
xor
xchg
or
cmpsl
popf
subb
pop
sbb
inc
jg
popf
jmp
or
mov
movb
pop
jmp
rcrb
add
add
ljmp
mov
jb
stos
jne
sti
cwtl
rol
fnsave
inc
adc
cmp
cli
clc
lret
iret
cmp
pop
mov
xchg
add
sub
aad
sub
pop
icebp
test
dec
pop
pushf
mov
int
dec
jle
aaa
iret
inc
incb
and
pop
fnstenv
mov
adc
imul
rcrb
mov
repnz
cmp
lahf
fldenv
fsubrl
daa
fisubrs
nop
jnp
and
push
outsb
push
jno
xor
cs
lods
pushf
lcall
pusha
shl
and
pusha
fucomp
lcall
xor
lret
pop
cmp
sub
shlb
mov
mov
push
shll
bound
enter
xchg
nop
sbb
stc
mov
push
in
xchg
fsts
pop
adc
push
stos
push
pop
test
psubw
sti
insb
pop
fwait
lahf
test
sub
xor
cli
cmp
hlt
push
jae
fiaddl
call
mov
sbb
int
aam
pop
push
aam
sbb
into
push
stc
xor
mov
cli
shll
jmp
inc
fbstp
and
push
and
and
jns
or
and
jp
mov
pop
or
cmc
jl
xchg
mov
sub
movsb
insl
push
xor
jb
inc
mov
ret
ret
jle
not
pop
xor
cmp
mov
jae
scas
xorb
dec
xlat
imul
sub
ljmp
in
and
daa
daa
stos
pop
add
cmp
sbb
dec
mov
sbb
data16
enter
fidivl
gs
leave
dec
and
xlat
outsb
pop
cmp
push
mov
mov
push
or
in
push
xlat
nop
lock
push
int
mov
sub
mov
mov
movsl
daa
movl
adc
in
push
xchg
aaa
mov
and
mov
mov
insb
sub
and
rcrb
cmp
jge
popf
dec
push
xchg
mov
sub
rolb
aas
enter
out
cmp
fdivl
lods
jne
pop
pop
mov
sahf
sbb
pop
fisttpll
packuswb
insb
lock
dec
jns
mov
cmpsb
jge
jo
test
sub
or
les
imul
mov
movsb
xlat
inc
cltd
out
xchg
aam
cmp
mov
xor
xorl
shlb
imul
gs
pop
xor
xchg
or
xor
rcrb
inc
cmp
rorb
loop
xchg
jns
out
jbe
movl
mov
dec
out
cmp
dec
dec
dec
mov
or
and
adc
pop
outsb
mov
ret
inc
stos
add
cwtl
adc
dec
or
push
pcmpeqb
mov
in
imul
pop
lea
test
mov
dec
rorb
enter
dec
insb
dec
sti
xor
orb
subl
dec
dec
dec
jle
add
or
pop
sbb
loopne
pop
and
leave
xor
push
andb
lahf
cmp
or
loop
ljmp
imul
inc
popa
inc
hlt
xchg
dec
lret
mov
jne
outsb
xchg
lods
test
ficomps
cmp
sub
mov
push
sbb
add
pusha
xor
or
out
mov
insb
xchg
sub
cltd
pushf
sbb
push
inc
sub
xorl
dec
ret
pop
test
leave
add
sbb
cmp
sbb
inc
out
pop
jne
and
xchg
enter
and
and
push
insl
mov
xchg
mov
jp
adc
cmp
dec
popf
jns
int
daa
insb
and
push
and
dec
fs
shll
xor
les
adc
sbb
and
xor
sbb
sbb
dec
lcall
out
loopne
out
popa
out
int
int
scas
sbb
pop
sub
mov
jge
pushf
or
cld
ret
xor
imul
jnp
out
insb
test
ret
jno
sbb
sbbb
cmp
sahf
mov
dec
pop
lds
pop
adc
test
loop
test
jg
jb
inc
movsl
mov
push
mov
insb
or
mov
ja
mov
in
pop
repz
pop
daa
mov
mov
movsb
ret
je
lea
js
pop
popa
jle
dec
stos
jl
jno
xchg
pop
icebp
adc
adc
cld
lods
jg
add
leave
add
pusha
sub
add
add
xchg
inc
push
pusha
incb
pop
cs
pop
push
jns
fcompl
fcmovu
pop
sbb
scas
adc
icebp
or
cmpsb
inc
es
inc
stos
sbbl
mov
adc
xor
xor
mov
les
inc
out
lret
mov
push
and
xchg
loopne
dec
mov
lds
out
enter
jae
pcmpgtb
in
xchg
rclb
xor
mov
cmc
stos
jl
mov
sbb
mov
jo
cmc
pop
mov
dec
mov
cmp
mov
mov
xlat
cltd
mov
and
xor
dec
add
movsb
fdivrl
adc
or
repz
sbb
xor
adc
fistl
mov
jbe
repnz
cmpsl
out
stc
push
jbe
out
or
out
neg
std
xchg
cmp
dec
sbbb
inc
mov
mov
dec
push
mov
pop
stos
mov
mov
xchg
pop
stos
in
sti
inc
lcall
cmp
scas
dec
push
pushf
fwait
int
lcall
push
or
sbb
rorb
xchg
inc
and
sahf
subl
pop
outsl
or
xchg
push
fistpll
mov
call
add
pushf
jns
pop
pop
int3
js
fstps
fidivrs
push
inc
and
push
sbb
rolb
das
push
mov
sbb
sbb
addr16
sub
xchg
bound
mov
es
mov
dec
rcrb
and
mov
sar
pop
pop
in
xor
stos
test
cld
in
fwait
sbb
in
int
pop
fcoms
dec
push
push
push
rclb
push
jge
aad
pop
mov
xchg
cmp
mov
stos
mov
lret
inc
mov
pop
daa
repz
sub
jno
pop
mov
fmuls
stos
adc
sub
lret
adc
in
stos
jbe
divps
iret
add
dec
fxtract
jge
fistps
adc
out
dec
int
dec
movsb
call
aas
dec
cmpsb
leave
xchg
in
mov
pop
push
cmp
lcall
xor
cmpsl
mul
inc
xchg
add
add
fbld
add
jle
jb
js
or
shrb
dec
into
stos
jbe
stc
sub
mov
shrl
fldenv
and
ljmp
dec
fcompl
test
aas
mov
jb
mov
dec
xchg
in
dec
lcall
cmp
xchg
shrl
pop
jle
xchg
jnp
test
dec
dec
popf
mov
push
dec
stc
xchg
cmpb
mov
cmpsl
cmp
cmp
repnz
inc
dec
scas
cwtl
js
aas
jle
das
pop
test
int
mov
dec
aam
and
jbe
int
adc
cs
shrl
push
in
sbbl
cs
and
out
xchg
test
sub
call
mov
pop
jl
out
pop
and
jg
test
mov
add
pop
push
jge
jb
sub
daa
and
lahf
jno
xchg
insb
sbbl
test
ja
mov
loopne
test
and
andl
movl
jecxz
and
adc
or
xor
scas
out
lds
rclb
push
out
mov
icebp
outsl
imul
int3
and
jmp
cs
lret
mov
jmp
out
cmp
loopne
mov
imul
inc
push
movsl
das
xchg
mov
scas
mov
push
adc
das
je
mov
inc
xchg
in
addr16
pop
pop
sbb
in
cmpsl
gs
jmp
test
mov
test
in
adc
mov
in
xchg
sub
outsb
jp
shrb
or
adc
ret
in
mov
mov
push
lds
xchg
cwtl
jbe
and
mov
das
imul
mov
sbb
push
mov
xor
movsb
mov
sbb
xor
dec
test
test
mull
hlt
testl
or
popf
ljmp
xchg
xchg
jnp
js
cmpsb
fidivrl
sahf
jne
ss
popf
dec
pop
les
les
in
fildl
mov
call
in
dec
daa
in
clc
insl
aas
and
pop
test
cltd
iret
sbb
fmulp
sti
jnp
push
das
mov
es
testb
mov
movsl
cmp
test
and
mov
pop
ds
repz
inc
fsubrl
add
mov
repnz
mov
cmc
xor
or
push
in
imul
sub
inc
mov
arpl
or
sbb
leave
jnp
call
pop
popa
sbb
stos
icebp
adc
mov
dec
inc
pop
push
xchg
cld
lret
into
movsl
jns
daa
popf
dec
jno
xchg
stos
jns
or
pop
ret
mov
xor
xor
push
and
shll
lock
sub
cmp
outsl
and
lret
mov
arpl
mov
pop
mov
ror
add
push
fscale
jae
test
dec
sub
lret
inc
rclb
sbb
xchg
lahf
xchg
icebp
jno
or
ss
and
jno
pop
icebp
lcall
insl
pop
fs
mov
mov
adcl
pop
fadds
dec
jnp
les
stos
insl
sbb
push
gs
std
cmp
mov
and
lret
pop
push
xlat
mov
data16
xchg
sbb
cmpsl
jge
imul
pop
mov
repnz
aaa
mov
or
push
addl
lret
lods
jmp
lcall
ss
mov
mov
push
clc
sub
jnp
mov
add
cmp
out
adc
ja
je
hlt
adc
push
cli
jns
test
movsl
es
push
xor
pusha
xor
or
sub
lods
push
pop
sbb
cmp
push
cmp
dec
aam
faddl
aas
lea
and
fdiv
jmp
cmpsl
jecxz
jo
jno
sbb
sub
fildl
ror
or
ja
adc
inc
mov
and
enter
fwait
or
jne
mov
and
nop
or
dec
movsb
call
repnz
mov
outsl
jb
xchg
xor
xchg
add
mov
int
cwtl
push
inc
mov
lcall
clc
sub
xchg
xlat
rorl
imul
dec
inc
lret
xchg
scas
add
cltd
out
test
push
pusha
orb
xor
nop
in
mov
sbb
or
sti
inc
sbb
mov
mov
rol
jo
sub
bound
test
rcr
fisttpll
ret
push
insb
mov
sbb
push
xlat
psubusb
subl
rcll
pop
push
mov
test
movsb
cmp
ss
fmull
mov
loopne
movsw
sti
enter
pop
cld
mov
stc
mov
lcall
jle
push
adc
cltd
mov
xlat
and
pop
cld
in
pop
mov
sub
push
in
cmp
call
stos
pop
loope
stos
dec
mov
and
lcall
fyl2xp1
or
push
xchg
xlat
data16
inc
cmp
sub
jg
push
daa
in
jb
dec
outsb
int3
cmp
stc
add
inc
cli
mov
and
notb
or
jmp
jmp
push
ja
negl
add
orl
xor
lods
stc
in
out
dec
jp
mov
test
pop
adc
mov
xchg
outsb
out
out
xchg
dec
xchg
xor
add
or
push
inc
inc
and
mov
sbb
sbb
movsb
stos
mov
push
mov
scas
sub
add
or
arpl
stc
pop
jns
pop
ljmp
mov
int
subb
sub
mov
xchg
and
dec
es
jg
leave
add
imul
jnp
jnp
stc
repz
das
ja
dec
and
iret
push
sbb
movsl
jp
loopne
add
dec
stc
jl
lret
es
add
inc
mov
movd
movsl
imul
stos
in
push
pop
loopne
dec
xor
xchg
lea
loopne
sarb
jne
loopne
movsl
mov
lds
fimuls
push
test
loope
cmpsb
inc
scas
ret
add
popf
ret
xchg
or
sbb
and
test
pop
cltd
subl
sbb
pop
xlat
inc
mov
pop
test
out
test
ja
push
loope
cmp
mov
xor
jbe
shll
sarl
fstps
pop
hlt
and
lret
punpckhdq
dec
int
cld
fidivl
popa
stos
ljmp
gs
lret
cli
lods
push
mov
cmp
xchg
push
jl
les
or
popf
mov
mov
ret
shrl
mov
pop
xchg
mov
fstpt
pop
nop
inc
pop
out
cmp
repnz
sti
mov
daa
insl
cmpsl
adc
pushf
xor
sbb
hlt
cmp
mov
das
ret
cmp
or
add
add
adc
daa
mov
test
and
cmpsl
movsb
fs
lods
sbb
clc
mov
pop
je
jno
test
jl
pop
and
mov
pop
dec
push
fisttpl
push
inc
mov
fsub
pop
push
xor
hlt
cmp
xchg
dec
and
cmp
adc
imul
in
das
inc
cmpsl
dec
pop
dec
pop
inc
and
cmp
jp
pop
push
pop
pop
jns
xor
xchg
mov
insl
sbb
mov
lock
pop
push
fistpll
push
rclb
inc
std
sbb
sbbb
and
aam
and
repz
cltd
sahf
pusha
mov
nop
and
xchg
jl
insl
sti
decl
fyl2xp1
dec
fdivrl
mov
pop
out
nop
lahf
in
sub
push
xor
enter
push
push
loopne
jg
fistpll
icebp
lods
test
lret
rcrb
add
dec
outsb
cli
dec
outsl
ss
leave
mov
repnz
push
cmpsb
jnp
mov
push
jo
dec
pop
mov
cmpsl
adc
cmp
push
jnp
dec
aam
popf
nop
aaa
and
xor
pmulhuw
lds
and
roll
stos
sbb
daa
inc
imul
mov
cli
in
bound
push
xor
xor
ja
ret
jl
aaa
int
outsb
xchg
xor
inc
jno
sbb
pop
std
add
push
icebp
insl
and
jne
js
and
call
cmp
jg
xchg
out
sbb
ret
lods
mov
or
jae
lret
es
jb
test
sbb
dec
pop
jns
sbb
jecxz
out
pop
jo
rcll
push
xlat
ss
pop
rcr
das
mov
ss
shrl
jns
rcrb
aaa
jae
adc
sub
jne
sub
lcall
fdivrl
adcb
mov
xchg
fs
fcomp
pop
int
ljmp
add
cmp
sub
fdiv
aas
push
fwait
dec
jae
fs
ret
fdivs
jp
jle
dec
je
push
inc
movsb
push
lcall
outsb
or
stos
imul
icebp
jmp
cmp
iret
jns
es
je
dec
sub
xchg
leave
pop
xchg
push
clc
dec
sub
jge
mov
mov
push
stc
ret
stos
mov
out
inc
repz
loopne
inc
lea
add
repnz
insl
lods
out
ss
jnp
xor
pushf
shlb
fstpl
pushf
mov
inc
mov
ljmp
mov
add
dec
stos
xchg
pop
inc
xor
sti
movl
rcll
push
add
and
cmp
decb
rcll
in
jle
mov
inc
in
test
fnstenv
mov
aam
mov
mov
pusha
ss
mov
mov
adc
mov
mov
call
pushf
add
push
in
addl
adc
push
scas
inc
mov
aad
mov
in
ja
sub
pop
mov
mov
fwait
mov
xorb
jbe
lods
scas
pop
leave
mov
andl
int3
ss
adc
ret
icebp
xor
flds
lock
test
addb
xlat
ss
int
lods
and
mov
or
int3
pop
dec
pop
shll
adc
repz
aad
cmpsb
lock
pop
pop
faddp
and
or
jge
mov
sysenter
jae
fnsave
aas
fneni(8087
sysret
pop
xor
pop
jle
arpl
mov
in
inc
mov
xor
or
mov
dec
testl
mov
adc
or
jl
pusha
xor
mov
addr16
jge
cmp
jle
push
xor
jle
and
jge
cmp
mov
ds
push
sub
jl
decl
sub
leave
in
scas
faddp
inc
dec
cmovno
jg
adc
lods
call
sub
mov
leave
push
data16
clc
dec
mov
dec
push
adc
subl
or
adc
mov
jo
xor
xchg
scas
ljmp
out
mov
fcoms
mov
or
push
inc
das
lret
leave
sbb
xchg
fisttpll
add
adc
adc
sub
mov
loopne
push
out
mov
adc
xor
pusha
push
out
or
out
aam
sti
lahf
enter
and
repnz
pop
imul
or
ret
jge
cmp
sbb
dec
mov
insb
in
mov
sbb
iret
add
repnz
icebp
pop
xabort
push
out
mul
push
and
rcrl
loopne
cmp
dec
push
stc
sbb
aas
fldcw
pop
subb
mov
jbe
movsb
outsb
xchg
fisubl
jp
mov
mov
daa
shlb
icebp
push
loopne
cwtl
pop
pop
loopne
ds
mov
and
lret
mov
pop
push
jl
push
cmp
xchg
mov
popf
mov
mov
cmp
xchg
cmp
pushf
pop
cmp
push
push
loope
push
mov
cld
sub
sti
ret
dec
pusha
mov
and
test
ss
hlt
mov
fildll
loope
insl
lret
stc
or
push
push
push
xchg
hlt
jle
bound
inc
shlb
jg
insl
jnp
jecxz
mov
pushf
fisubl
pop
jmp
pushf
xchg
pop
pop
addr16
xor
scas
clc
aad
lods
repz
sbb
sub
jne
add
lds
icebp
into
ret
addr16
bswap
rcll
mov
xchg
push
and
cmp
sub
daa
test
fcmovbe
xchg
sbb
mov
mov
inc
jle
sub
and
add
outsb
aas
das
mov
arpl
xchg
int
sbb
mov
cmp
out
mov
pushf
cmp
adc
push
adc
lret
add
sbb
mov
in
mov
jnp
enter
sub
test
pop
push
aam
pop
sub
jb
int3
inc
cmp
shrb
pop
add
clc
mov
jbe
stos
sahf
inc
icebp
inc
pop
adc
testl
lods
or
loope
fnstenv
adc
sbb
test
mov
push
sub
sub
out
ficomps
leave
jae
stos
popf
stos
cmpb
out
data16
lods
out
pop
adc
or
cmpsb
push
jecxz
xchg
adc
mov
fsubl
shl
into
cmc
xor
lret
rcrl
sbb
jl
add
call
test
sbb
loop
scas
mov
fmuls
mov
out
sub
sti
sub
push
and
into
int
leave
dec
daa
push
jne
sub
mov
mov
cmp
lahf
xor
out
mov
xchg
pop
and
mov
mov
icebp
adc
int
lods
jo
into
cs
int
mov
or
imul
in
repnz
dec
icebp
cmp
add
pop
mov
push
jmp
xchg
sub
inc
jne
sbb
cs
iret
leave
test
rcrl
jne
lret
les
stos
test
notb
add
push
pop
or
push
pop
cmp
sti
xchg
mov
mov
add
dec
dec
lret
rorb
popa
outsl
mov
ljmp
hlt
dec
push
data16
idivl
push
mov
pshufw
fwait
sub
xor
xchg
jp
xor
sub
addps
orl
pop
sub
push
add
out
in
xchg
xlat
sub
dec
loopne
pop
mov
aam
data16
jecxz
mov
adc
sub
or
pop
lods
jp
sub
lock
mov
test
push
push
jp
gs
push
lods
stc
pop
ja
mov
sub
test
cld
pop
shll
ss
es
sbb
aaa
xor
pop
enter
cmp
shll
mov
clc
add
in
gs
sub
jp
cli
xor
test
cltd
enter
cmp
mov
lret
xchg
cmp
lret
jge
fisubrs
jne
mov
out
cmp
ljmp
mov
cvtdq2ps
adc
inc
cmpsb
leave
int
shrb
jnp
sub
mov
pop
sbb
ret
push
pop
fisubs
fisubs
mov
repnz
subl
aad
insl
or
js
dec
sarb
test
mov
add
pop
iret
fidivs
pop
bswap
mov
jp
fsts
movsl
mov
push
lock
insb
lods
fildl
cltd
fcoml
push
icebp
push
sub
pop
and
call
and
pop
call
insl
inc
orb
cmp
lcall
lock
lds
clc
pop
xchg
cmp
mov
fsubrs
stc
dec
enter
loope
insb
mull
js
push
xchg
out
adc
imul
add
sbb
jno
add
movsl
push
xlat
xchg
push
adc
dec
call
add
aaa
subl
add
movsl
cmp
push
test
daa
fistpll
xchg
jp
jl
mov
cmpsl
dec
jae
mov
xor
jecxz
cmpsl
add
mov
xchg
popf
xor
loope
jae
orps
inc
sub
sub
mov
push
dec
jmp
lock
or
push
hlt
sub
lds
push
mov
push
icebp
testb
sbbb
xlat
sysret
rcrb
orb
frstor
push
pusha
jae
sub
data16
dec
inc
fcmovb
out
xchg
dec
icebp
mov
sarl
mov
jle
icebp
jg
mov
pop
sub
push
lock
mov
xchg
dec
jp
dec
xlat
sub
leave
lahf
cmc
mov
gs
adc
lock
push
push
clc
dec
adc
cmp
xchg
aad
ds
xlat
sahf
xchg
ja
lods
xchg
cmp
mov
decb
jne,pn
outsb
sub
sahf
cmp
std
imul
imul
cmp
pop
addr16
pop
mov
cmp
dec
xchg
into
push
jbe
push
xchg
aaa
and
dec
jne
rclb
in
ljmp
and
fidivrs
push
call
test
cmp
jnp
adc
call
es
inc
or
mov
pop
shlb
xchg
out
int3
mov
mov
iret
cmp
pop
repz
mov
cmp
jg
jecxz
movsb
test
iret
fwait
xor
cs
cs
mov
push
aas
pop
fidivrs
cmp
insb
mov
test
stc
mov
loope
sahf
xchg
add
ret
loop
repz
mov
int3
das
sahf
sub
dec
mov
xchg
pop
leave
ljmp
int
push
js
arpl
arpl
cld
mov
or
addr16
pop
mov
xchg
jmp
and
xchg
sub
ret
xchg
pop
mov
add
and
push
out
or
jnp
xchg
pop
sahf
mov
sahf
fnstcw
push
dec
insl
sarl
jb
mov
xchg
xchg
leave
icebp
loope
adcl
xlat
push
cmp
movsb
cli
aas
mov
repz
sub
mov
imulb
push
loopne
js
popf
scas
dec
mov
jle
ficoms
test
xlat
iret
xor
add
gs
repnz
push
aam
movsb
mov
jmp
mov
insb
jne
gs
xor
inc
imul
sub
pop
or
pop
rcll
dec
mov
movsl
in
cmp
addb
jecxz
add
sbb
test
sbb
jmp
insb
push
xchg
mov
inc
mov
js
repz
insl
andl
int
arpl
or
imul
mov
pushf
add
jb
mov
iret
inc
outsb
aad
mov
icebp
lahf
outsl
enter
test
xchg
ficompl
cmpl
loopne
jne
pop
shrl
cmp
inc
in
lea
insb
leave
dec
insw
dec
setno
add
pop
mov
fwait
inc
dec
imul
mov
test
in
scas
mov
xchg
addr16
cmp
lock
out
lret
fildl
xchg
xchg
xchg
cmp
add
aad
sahf
es
mov
sub
loopne
xchg
stos
das
xchg
jns
out
and
fistpl
pop
or
sbb
sub
pop
xchg
inc
mov
add
dec
jmp
das
pop
dec
rcll
mov
leave
test
push
pop
push
repnz
xor
sbb
fistpl
jge
outsb
stos
add
mov
shr
push
mov
dec
cli
int3
cmp
dec
xor
dec
adc
or
cmc
test
inc
sarb
xlat
mov
or
fsts
idivb
fcmovb
ss
xchg
loope
loope
jo
in
pop
dec
aaa
dec
ficomps
mulb
mov
insl
insb
mov
dec
cmp
dec
pop
pop
jg
aaa
xchg
lods
sub
dec
outsb
icebp
nop
jae
fstp
popa
xor
sub
mov
push
adc
cmp
sub
push
mov
dec
enter
mov
inc
push
clc
rorb
mov
xchg
push
sti
mov
and
push
das
out
add
jne
dec
pop
jno
loopne
push
sub
fidivs
sub
xchg
andl
fwait
leave
pop
push
fwait
cmpsl
or
xchg
repnz
notb
les
dec
lea
xchg
xchg
pop
or
ds
mov
pop
jb
lcall
fcomps
lahf
jae
test
mov
mov
shl
adc
out
mov
fsub
iret
xor
inc
adc
mov
dec
sub
aas
sbb
movsl
pop
orb
mov
imul
inc
and
mov
sbb
in
movsl
fnsetpm(287
mov
xor
lahf
jp
gs
in
or
loope
shlb
inc
ret
push
imul
push
add
add
jbe
movsl
mov
mov
jmp
pusha
cmp
xchg
sub
rcr
je
out
mov
in
ljmp
and
jo
lods
push
cmp
cmc
icebp
negb
cltd
pusha
sub
shlb
iret
imul
jecxz
and
cmpsb
pop
mov
mov
mov
xchg
ret
rcr
jbe
ja
pop
cmp
loop
ss
jp
jle
sub
sar
push
scas
sti
loope
cmpsl
stc
jbe
push
push
scas
std
or
push
sbb
cmp
je
sub
ljmp
aad
out
daa
mov
push
scas
cmpsl
push
inc
xor
repnz
bound
sarb
push
mov
mov
outsb
in
cmpsb
inc
mov
add
cmpsb
mov
push
das
js
pop
pop
mov
xlat
cmp
movsl
sbb
shll
xchg
call
hlt
stos
rcrl
mov
scas
push
jno
ret
cmp
xchg
cmpsl
jns
popf
aad
repnz
repz
jle
cmp
jnp
aas
add
cmp
cmp
pop
xor
insb
xchg
mov
aad
and
shrl
test
inc
mov
hlt
icebp
adc
mov
mov
sti
push
add
shlb
mov
mov
pop
inc
pop
push
mov
shlb
rcr
ret
dec
cmp
cmpsb
popf
cmpb
cmpb
sub
sbb
push
xlat
fwait
jne
mov
mov
cmp
ret
outsb
and
push
sbb
pop
mov
mov
test
imul
and
aad
mov
jmp
jo
test
test
sbb
sub
jecxz
jns
push
cmp
mov
mov
sarb
mov
mov
jno
stos
push
int3
and
xchg
lahf
mov
test
aas
ja
clc
roll
jae
cmc
xchg
idivl
out
dec
call
das
sahf
xchg
insb
fcmovu
cmp
std
stc
jmp
sbb
cld
outsl
and
and
notl
icebp
repz
push
jle
into
into
inc
inc
inc
mov
shll
dec
daa
fcoms
sbb
mov
xor
cltd
pop
jge
scas
or
jo
inc
call
fsubs
xor
mov
loopne
jle
adc
sbb
js
dec
hlt
jg
imul
jb
repnz
sub
insl
mov
fiaddl
dec
fwait
cmp
dec
jp
push
mulps
push
add
je
push
inc
xor
stos
sub
push
mov
jo
lahf
add
aaa
xorl
scas
lds
pop
xchg
xchg
lock
clc
in
mov
test
xor
adc
fstps
movsl
sbb
movsl
sbb
imul
sub
pop
std
jno
cli
cmpsl
mov
js
or
stos
cmp
jl
jb
in
sub
ljmp
dec
into
cmp
jge
or
mov
in
into
push
xor
jbe
xor
jg
lock
and
insl
or
sub
test
dec
hlt
decb
incb
pop
adc
stc
pop
daa
iret
push
inc
in
xchg
icebp
sbb
lret
mov
pop
adc
je
jmp
mov
mov
out
push
mov
sub
es
jge
sti
cs
outsl
in
push
xlat
jl
cld
pushf
int3
cmpb
sub
testb
mov
jge
imulb
sub
push
in
push
cmp
movsl
js
ficompl
lret
mov
jnp
int3
jnp
dec
repz
dec
mov
repnz
iret
fwait
das
aas
stc
gs
lods
mov
mov
mov
es
les
cmp
cltd
dec
add
pop
cmp
ss
cwtl
and
xor
add
jnp
aam
xor
loopne
lods
imul
or
and
mov
push
mov
pop
or
in
sarl
nop
jbe
mov
sub
in
dec
aad
imul
lret
pop
loope
xor
adc
shll
ret
mov
lock
and
sbb
sub
fndisi(8087
pop
and
cli
push
or
shll
inc
imul
incl
test
jbe
sbb
out
in
vshufps
insl
jp
mov
add
imul
inc
push
push
testb
cmpsl
in
pop
push
xchg
or
divb
mov
jl
sub
mov
inc
das
pop
rorl
sbb
rolb
addr16
mov
sbb
inc
mov
xorb
stos
dec
shlb
outsl
xchg
imul
nop
loope
hlt
jnp
in
sbbl
into
pop
mov
call
and
cmpsl
jp
adc
in
inc
popl
je
push
xor
loopne
and
jecxz
into
mov
into
cmp
jl
mov
xchg
or
in
cmp
imul
adc
xchg
jecxz
sub
mov
add
insl
rcrb
test
mov
push
mov
or
cmp
leave
sbb
fstl
mov
cltd
cmp
into
fldenv
dec
sbb
mov
ds
imul
out
push
loope
add
jle
gs
jo
sbb
pusha
or
add
xchg
and
xchg
or
dec
cmpsl
push
and
loope
lcall
mov
mov
fmul
jl
xor
pop
push
shlb
or
pop
inc
pop
jne
adc
fsubs
inc
gs
fldenv
xchg
inc
rol
mov
pop
adc
adc
jns
xor
pop
bound
out
inc
mov
testb
daa
xor
pop
leave
lcall
jbe
push
gs
lret
lock
call
and
pop
mov
sarb
iret
mov
xor
fstpl
test
mov
rorl
daa
mov
idiv
cld
scas
cmp
push
xor
sub
pushf
sarl
xchg
aad
daa
in
lock
lds
dec
loope
lret
leave
dec
inc
and
or
cld
pushf
iret
xchg
mov
lea
inc
pop
call
imul
das
pop
mov
ljmp
cmp
push
nop
mov
push
and
ret
and
divb
shl
icebp
je
fisubl
sub
popf
add
mov
int
pop
jb
cmp
add
in
push
int3
mov
in
int3
in
mov
imul
push
movsl
lea
insl
cli
cs
jle
daa
aaa
cmpsb
adc
movsb
jle
stos
es
jbe
lahf
pop
mov
les
and
push
adc
jae
cmpsb
cmpsl
mov
fdivrl
or
outsl
sub
fistps
out
push
jp
lahf
dec
cmpb
inc
sbb
cmp
jb
sub
icebp
inc
int
xchg
je
mov
cmp
ret
push
xchg
jnp
push
scas
and
out
lea
mov
in
inc
jb
fstpl
add
mov
ret
pop
cmpb
lret
sidtl
cli
jbe
sub
xchg
rorb
test
push
cld
fadds
sahf
sbb
and
je
mov
and
cld
mov
rcll
scas
inc
push
repz
jo
push
inc
nop
jne
and
imul
xlat
fdivrp
adc
lods
ljmp
rcll
cmp
mov
in
imul
inc
pop
into
sti
lret
lds
push
push
sub
lcall
push
add
loopne
pop
push
inc
inc
out
cmp
add
mov
or
loopne
daa
mov
push
lea
mov
js
mov
inc
movsl
daa
jno
sub
or
jo
dec
into
arpl
lock
lahf
dec
add
insl
pop
cmp
ss
push
mov
pop
lods
out
mov
and
in
pop
ja
inc
pop
test
ret
cltd
add
sub
stos
sti
mov
mov
popa
sub
jbe
mov
mov
mov
pop
push
sub
scas
jg
or
nop
xor
dec
sub
push
and
pop
xchg
aad
test
out
and
adc
sbb
movsl
jns
lret
stc
popf
test
inc
lods
ret
or
dec
sub
stc
and
cmp
ja
dec
addr16
jnp
es
int
mov
xchg
aaa
mov
sbb
inc
fsubr
xchg
xor
enter
shrl
in
mov
mov
fsubl
push
addr16
mov
in
int3
sub
ds
add
cmp
and
cmp
cwtl
lds
pop
and
dec
jnp
xchg
fstl
fs
pop
push
inc
popl
jbe
int3
adc
popf
xlat
das
sti
ja
mov
add
dec
cmc
sbb
popa
mov
aam
fnstsw
std
cltd
jp
and
xchg
mov
sbb
sbb
pop
call
mov
xchg
scas
cmp
pop
xor
mov
shlb
repnz
or
out
shrl
lcall
into
testl
push
lock
add
lahf
movsl
inc
imul
sub
sbb
push
sub
add
mov
xor
in
or
ror
mov
pop
mov
repnz
fcomps
push
cli
push
add
pop
dec
imul
pop
ljmp
pushf
std
pop
scas
fdivl
movsb
ss
inc
xchg
outsl
mov
dec
js
jne
mov
inc
mov
adc
rcrl
push
outsl
and
push
cld
inc
loop
sub
lcall
mov
cmp
das
cmp
xchg
scas
sbb
js
bnd
in
in
fdivrp
jae
sti
push
bound
cmpl
out
fildll
push
lods
xor
test
pop
cwtd
fimull
fistl
insb
cmp
lret
stc
or
sbb
xchg
lret
cld
adc
xor
cltd
lcall
arpl
leave
jb
jb
or
aas
icebp
out
sti
lock
mov
push
mov
imul
je
adc
clc
loopne
jne
push
xchg
shll
or
int
pop
xor
and
not
lahf
sbb
enter
loop
js
xchg
hlt
mov
js
loop
push
pop
out
dec
cmp
cli
inc
rolb
cwtl
test
gs
inc
sub
icebp
inc
mov
mov
lret
sarb
xchg
pop
inc
outsb
sub
push
out
popf
arpl
insb
add
jne
push
cmc
jne
xchg
call
insb
mov
shll
test
jmp
decl
loopne
es
jmp
movsl
pushf
and
or
mov
callw
pushf
and
test
loope
subl
rcr
mov
or
jmp
aas
xor
jl
js
les
push
and
insb
push
bound
cmpsl
mov
mov
int3
xchg
cmpsb
test
push
push
jp
sbb
xchg
mov
gs
in
aad
addl
inc
xor
ficompl
lea
sub
and
out
xchg
fwait
sub
sbb
movsl
pop
xor
enter
mov
cmp
sub
pop
test
lods
fdivrl
inc
push
movsb
and
or
pop
dec
inc
mov
loope
jge
pop
fldl
subb
push
ret
inc
in
fnstcw
xor
xor
push
add
das
push
add
call
sarb
jmp
cmpsl
in
jae
sub
inc
setnp
nop
adc
sub
jecxz
ss
mov
ret
js
pop
or
mov
stos
dec
push
gs
rcrl
inc
push
into
xlat
das
inc
stc
mov
imul
adc
scas
cld
js
mov
idivb
mov
add
xchg
daa
jecxz
mov
call
xchg
and
outsb
data16
repz
leave
addr16
push
xor
scas
add
mov
popf
es
and
xchg
dec
xchg
pop
scas
mov
sti
xor
mov
sub
jnp
jne
lcall
aam
cwtl
jno
rcll
adc
nop
enter
mov
movsb
dec
aad
in
ficoms
nop
sbbl
outsb
jp
or
xchg
lock
rolb
mov
shl
test
int
popa
out
dec
mov
adc
mov
ret
jo
cmp
push
lret
out
out
cmp
int
je
hlt
and
shll
mov
test
daa
dec
inc
fmull
pop
jno
dec
fprem1
int3
jge
in
daa
fwait
arpl
jbe
out
call
push
das
xchg
inc
lea
testl
shrl
xor
jnp
test
iret
fwait
inc
add
testl
mov
daa
shrb
mov
or
mov
lea
jne
push
movsl
shr
scas
andb
pop
popa
in
mov
int
clc
sbb
movsl
sbb
out
cs
pop
xchg
out
sub
jns
sbb
jg
shll
adc
lods
pop
into
outsb
in
clc
mov
push
jnp
stc
xchg
pop
into
cmp
cmp
or
add
mov
mov
pop
push
dec
cld
loopne
mov
pop
loope
sub
in
adc
stos
mov
insl
outsb
inc
out
jle
add
xchg
cmp
imul
xlat
dec
in
xchg
mov
sub
sub
pop
out
sti
das
mov
pushl
push
inc
mov
std
lds
lret
adc
jno
add
stos
addb
gs
das
inc
adc
sub
sbb
lcall
cli
cltd
adc
push
jp
mov
shlb
sbb
cmp
out
xor
out
int3
adc
daa
testb
adc
jle
imul
fidivl
mov
adc
aaa
inc
mov
mov
dec
mov
into
fwait
cs
scas
pop
add
push
pop
call
jmp
lahf
cmpb
in
add
xor
push
ret
and
adc
jl
push
lahf
adc
fists
fcmovu
loop
bound
fmul
push
pop
dec
cmpsl
sahf
lock
in
add
xor
jp
inc
pushf
mov
int3
xorb
stos
fstps
popf
loope
push
subb
mov
fisttpl
cltd
mov
ljmp
pushf
push
inc
fwait
cwtl
push
xor
or
int3
ds
imull
or
or
pop
hlt
or
pop
mov
clc
outsb
fs
sahf
jmp
popf
je
add
push
divl
mov
mov
rcl
mov
lock
and
cmp
ja
insl
mov
mov
sbb
negl
out
into
cmp
xchg
pop
cmpsl
js
xchg
inc
mov
cmp
jmp
leave
dec
bound
jecxz
cmpsl
arpl
push
lods
xchg
leave
cwtl
je
or
in
and
push
dec
shll
jg
xlat
test
out
das
add
cmc
ja
enter
bsr
xchg
je
push
pop
push
ljmp
cmp
mov
out
pop
sub
jp
movsb
mov
mov
mov
adc
call
ljmp
adc
mov
cmpsl
shll
aad
xor
scas
mov
xchg
and
call
lcall
das
inc
in
and
movsl
jae
push
roll
leave
dec
stos
lods
jbe
imul
hlt
into
dec
pop
repnz
js
xchg
push
jb
fs
cmp
jg
dec
outsl
sub
sub
shrl
cwtl
cltd
aaa
sahf
in
adc
rclb
out
out
fcomps
call
movb
fcoms
aas
push
or
movsl
test
dec
jmp
xor
shr
xlat
aaa
mov
ja
inc
ljmp
inc
or
shll
xchg
adc
jbe
daa
adc
push
loopne
sub
inc
pop
test
movsb
sub
inc
adcb
loopne
ds
scas
mov
push
mov
mov
inc
pop
test
inc
inc
fmuls
inc
ror
movsb
jae
cwtl
jno
les
mov
sbb
mov
daa
shll
cs
push
arpl
rcrl
stc
in
daa
into
cmpsb
xchg
sti
lret
and
xchg
sub
stc
jecxz
sub
in
cmc
add
leave
lods
xchg
sub
jb
popf
dec
mov
mov
cltd
adcl
cmp
xor
mov
adc
out
bound
dec
push
inc
push
jne
das
xor
hlt
lock
inc
in
mov
inc
and
mov
test
jo
ror
out
mov
les
add
dec
xor
pushf
js
aad
mov
inc
test
inc
test
out
inc
fisubs
inc
inc
mov
fildll
mov
fcomps
lcall
pop
or
incl
push
fists
xor
mov
imul
cmp
js
hlt
sub
stos
imul
aas
push
test
dec
inc
fbstp
in
xor
push
div
or
mov
and
aas
icebp
test
cltd
sub
subl
out
leave
dec
jle
xlat
test
xchg
sti
sbb
dec
or
stos
out
outsl
mulb
std
and
stos
xchg
stc
jmp
lcall
dec
cmp
or
pop
push
adc
repnz
or
fbld
gs
std
adc
insb
mov
aaa
or
push
or
xor
jl
cld
mov
mov
shrb
pop
push
xchg
ljmp
pushf
adc
hlt
inc
je
adcl
push
add
inc
cmp
dec
or
sahf
push
pop
jp
lock
sub
mov
inc
mov
and
cmp
dec
out
lret
push
jnp
mov
lcall
jmp
imul
je
mov
push
inc
cmp
filds
test
mov
fstps
cmp
cltd
iret
mov
pop
popa
mov
scas
sbb
cmp
ficompl
cmp
cmc
outsb
int3
fsubp
add
aam
push
xchg
sti
jns
jp
xor
outsb
in
ss
std
mov
mov
hlt
cli
cmp
ja
cmp
mov
or
int3
pop
mov
inc
push
xlat
mov
push
mov
dec
and
xchg
sub
push
shrl
hlt
mov
insl
mov
sahf
test
divl
adc
fucompp
dec
pop
mov
pushf
int3
lock
xchg
repnz
fstp
inc
ds
imul
dec
test
divl
or
push
cmp
xchg
pop
push
rcrb
xchg
cmp
xchg
test
mov
inc
shlb
mov
sub
sti
icebp
push
paddd
clc
pop
push
mov
arpl
or
dec
pop
aaa
outsl
mov
inc
ja
fildll
or
cmp
sbb
in
sub
mov
imul
sub
imul
insb
adc
stc
rcrb
icebp
xor
lods
dec
mov
jge
popa
hlt
pop
inc
std
stos
pop
or
mov
sbb
cmp
and
clc
scas
mov
sub
lret
daa
mov
adc
scas
mov
sub
inc
and
pop
loop
mov
adc
jmp
ds
enter
movsb
xor
add
dec
call
movsb
mov
or
or
lret
push
imul
pusha
jmp
fmuls
fstpl
jl
add
jl
adc
xchg
in
adc
cli
push
ret
repz
cmp
or
ucomiss
and
add
mov
push
fstl
mov
or
les
js
rolb
test
shlb
mov
cmc
nopl
mov
js
cli
cmp
subb
pop
stos
adc
int
or
sti
jmp
popa
jae
in
push
mov
push
or
mov
sbb
lcall
dec
lds
lret
mov
mov
or
mov
scas
ret
mov
pop
jb
xchg
mov
mov
xor
ds
xchg
jno
xchg
stc
outsb
or
in
idivb
incl
in
jge
mov
clc
jns
out
lahf
dec
cltd
and
push
fldenv
cmp
popa
inc
outsb
and
gs
mov
push
sub
adc
cmp
mov
or
ds
fisubrs
popf
outsl
sub
mov
xchg
fdivs
in
cmp
xchg
test
imul
popa
sub
xor
fs
cmpsb
jno
cmp
imul
xchg
iret
das
mov
sub
cli
hlt
sub
push
mov
xchg
mov
mov
xchg
testl
pushf
add
add
or
icebp
cmc
icebp
ss
shlb
pop
xor
push
lock
in
bound
outsl
out
mov
cmp
xchg
lret
xlat
and
xor
mov
adc
js
lret
nop
xchg
mov
cs
rorl
ret
inc
cld
xchg
push
mov
jno
dec
int3
mov
outsl
mov
sub
lods
jle
les
sbb
push
cmp
stos
vpexpandb
inc
cs
divl
mov
xor
repnz
iret
in
das
dec
pusha
loop
shll
std
ss
clc
and
push
sub
sbb
or
xchg
pop
scas
int3
cmp
push
cld
dec
jmp
jne
sahf
xchg
xlat
dec
jb
xchg
adc
mov
loope
popa
int
outsl
add
xor
cmp
adc
mov
dec
idivb
jne
pushw
mov
jle
xlat
ss
mov
test
ds
mov
cmp
jns
xchg
repz
dec
idivb
in
ja
cmp
arpl
out
in
pop
sub
in
shrl
and
jb
nop
or
mov
lods
and
imul
repz
enter
xchg
push
fists
push
xor
in
adc
in
mov
fmuls
mov
pop
mov
je
sbb
cmp
les
or
enterw
push
xor
test
outsl
adc
mov
addr16
rcrb
call
jg
mov
pop
mov
pop
cmpsb
movsl
xchg
inc
push
dec
xlat
mov
bound
sti
mov
jle
push
xchg
add
xchg
or
xor
fcompl
xor
or
fstps
lods
mov
leave
cmp
xlat
std
loope
mov
outsb
shll
push
xchg
bound
ret
pushf
outsb
out
dec
daa
or
bound
subb
inc
mov
cmc
sub
dec
jge
pop
cli
push
pop
stc
mov
xor
add
sarl
mov
cwtl
addr16
scas
cli
push
rep
push
add
and
xlat
xchg
mov
sbb
dec
xchg
xchg
mov
xor
mov
ss
pop
dec
xchg
lret
in
jg
xchg
pop
mov
cld
cmpsb
out
mov
mov
mov
fdivrl
jnp,pt
inc
pop
iret
sub
test
xchg
jecxz
jb
imul
inc
ret
push
ret
notb
arpl
call
cmpsl
mov
mov
scas
sar
lea
pop
adc
lock
mov
shl
jl
push
jg
dec
popf
hlt
jmp
xchg
push
in
stos
and
push
fistps
pop
or
cmp
psubb
jle
mov
clc
sbb
js
sub
cwtl
fldenv
mov
addr16
mov
pushf
jb
sbb
pop
popf
add
or
push
xor
movsl
es
sbb
pop
movsb
in
lea
xchg
cmpsl
xchg
fcomp
mov
mov
js
add
rorb
mov
aaa
jae
das
outsl
dec
leave
movsb
sbb
addb
das
jnp
adc
loopne
lret
pop
pop
and
test
mov
or
test
rclb
cmp
or
and
out
push
cmp
push
and
jbe
cmp
push
jne
pop
jns
lods
vmwrite
mov
push
mov
mov
mov
xlat
jae
cmp
dec
ss
int3
jle
jg
add
mov
mov
das
movsl
mov
addl
add
ror
das
mov
pop
daa
pop
sub
push
or
jo
repz
int
rclb
lds
mov
imul
xchg
mov
push
lcall
xchg
or
mov
outsb
shrl
dec
dec
addr16
and
jle
inc
mov
aaa
adc
repnz
pop
iret
and
aaa
xor
jp
sub
sti
add
mov
xor
lods
std
movsl
imul
nop
aad
xchg
cmp
jmp
sbb
jns
outsb
inc
dec
sbb
xchg
mov
jns
mov
inc
fadd
dec
les
cli
push
movsl
lods
enter
imul
in
adc
lock
aad
and
or
and
mov
sub
call
aam
aam
mov
scas
jp
add
mov
pop
arpl
pop
pop
fcomps
divl
incl
xchg
sarl
push
or
std
aad
mov
pop
aaa
movsb
cmp
jae
jmp
test
insb
sbb
or
sub
inc
pop
loopne
cmp
fwait
pop
repz
add
ja
push
movsb
and
push
lds
test
movsl
and
inc
fisttps
pop
mov
push
stos
in
jmp
lds
lret
cmp
fbstp
mov
adc
jne
fnstsw
into
leave
pop
repnz
loope
inc
bound
adc
xchg
xchg
daa
test
sub
mov
xchg
mov
sub
stos
or
inc
enter
fdivrs
xor
sub
pop
sbb
adc
mov
cmpsb
movsl
mov
test
sti
jle
lods
mov
scas
inc
mov
andl
cld
inc
xchg
xchg
cmp
imul
int
ds
xchg
js
iret
stos
bound
inc
cmp
xchg
jl
pop
sub
clc
xor
or
and
xchg
xor
sbb
lahf
sub
xchg
ja
loopne
pop
lods
cmp
mov
enter
sbb
aaa
inc
std
fs
icebp
das
add
sub
and
jno
add
inc
jno
mov
test
xor
lret
push
sbb
testl
cmp
arpl
and
loop
les
or
inc
fmul
ss
aas
xchg
add
and
lods
testb
pop
dec
subb
adc
movsb
mov
jp,pt
outsb
lea
xchg
mov
mov
push
add
mov
mov
mov
mov
mov
xchg
push
inc
jbe
xchg
stc
adc
and
push
mov
cmp
mov
sti
scas
add
push
sub
pop
push
ja
iret
lods
out
cwtl
add
jge
mov
cmp
pop
xor
popf
mov
sbb
pushf
fldl
sub
enter
mov
add
jle
mov
inc
sub
out
dec
add
push
in
or
cltd
mov
push
inc
jl
shll
mov
inc
pop
in
insl
jno
mov
movsl
movsb
or
sub
repz
arpl
xchg
hlt
push
repz
lcall
pushl
dec
movsl
xchg
pop
cmpsb
jbe
sbbb
pop
pop
mov
es
test
ljmp
lods
jbe
and
xlat
ja
push
sbb
pushf
dec
fidivrl
add
inc
aas
pop
mov
xchg
dec
xchg
add
fimuls
jmp
mov
addb
insb
pop
inc
nop
jmp
sub
xchg
xchg
in
push
push
cmpsl
mov
ds
rcl
xlat
mov
stos
mov
lds
insl
jne
fbld
stos
inc
mov
adc
lods
push
lret
push
xchg
jge
mov
jp
and
std
push
inc
adc
mov
outsl
fistpll
leave
sbb
inc
loopne
inc
outsl
sub
dec
stos
push
sbb
xor
cmp
insb
imulb
stos
mov
sahf
addr16
push
inc
leave
jo
adc
nop
pop
jne
lds
daa
sbb
push
mov
push
push
iret
ja
out
pop
jge
jne
lcall
gs
dec
xor
stc
mov
inc
inc
mov
sub
sbb
ficompl
pop
mov
sub
dec
jp
push
or
fiadds
rcll
arpl
aad
call
adc
scas
adc
mov
icebp
push
mov
aaa
lret
fstps
daa
push
out
popf
or
pop
sub
imul
das
int3
xchg
jge
sub
dec
pop
loope
and
mov
and
cmp
sub
jns
lods
push
out
jno
aas
lods
mov
xchg
cld
ret
fimull
jne
call
xchg
imul
jb
stos
insl
mov
add
enter
or
push
cmc
inc
add
rclb
loop
jp
jo
pusha
in
jge
loop
rorl
sub
push
sub
gs
in
xor
inc
pop
inc
xchg
xchg
xlat
movsb
in
adc
xorb
lcall
fs
into
xorl
lock
jle
inc
loope
push
addr16
pop
sahf
jb
fwait
rcrl
inc
test
repz
inc
jmp
aad
mov
and
fildl
hlt
dec
es
mov
mov
nop
mov
cmp
push
push
daa
in
mov
inc
lret
mov
and
pop
adc
cmc
sub
cld
sbb
in
push
jne
mov
stc
sbb
jl
dec
repz
xchg
or
push
lds
pop
fldcw
mov
push
icebp
int3
xchg
xchg
out
inc
mov
test
mov
iret
bound
cli
hlt
mov
pop
jns
and
in
into
cmpsl
jb
leave
adc
scas
into
and
push
and
sbb
sub
lds
fiadds
jnp
mov
test
cmc
sbb
scas
bound
pop
ror
mov
cs
push
mov
fwait
cmp
ds
insb
cmp
sub
sub
repz
lcall
lods
das
sahf
cmp
xchg
cmp
push
xchg
pop
ljmp
mov
ljmp
pop
xor
loop
or
cltd
pop
hlt
incb
xor
les
pop
lods
push
das
sub
movsl
sbb
adc
call
jmp
mov
arpl
out
into
mov
repz
addr16
pop
xor
fdivs
xor
or
aad
adc
movsl
mov
fmuls
push
mov
aaa
lods
dec
push
adc
dec
push
movsl
cld
mov
jl
jge
inc
push
jp
pop
andb
and
ja
inc
sti
movsl
xchg
adc
iret
mov
fdivrl
pop
loop
mov
mov
mov
jb
fmulp
xlat
sub
or
cli
movsl
stos
xlat
addb
mov
dec
dec
rcr
push
movsb
jbe
add
push
aam
cmpsb
inc
mov
addr16
aam
mov
into
mov
add
jns
aas
and
xor
ljmp
push
insl
push
mov
loopne
shl
adc
xchg
lods
xor
mov
cmpsl
repz
cmpsb
inc
xchg
test
fwait
xchg
daa
repz
dec
xorl
cltd
adc
sti
dec
je
pop
dec
xor
mov
lcall
insb
daa
pop
xchg
shlb
jp
xor
outsb
icebp
and
and
pop
add
sub
jbe
mov
and
sub
jnp
hlt
cmp
in
daa
clc
imul
dec
ret
repnz
in
or
outsb
inc
daa
in
xchg
test
shrl
mov
test
rorb
sbb
mov
in
call
insb
sub
push
and
jmp
xchg
aad
mov
mov
ljmp
movsl
xchg
jo
cmpsb
jg
mov
fs
pop
sub
movsb
arpl
mov
enter
test
stos
mov
js
mov
and
lret
push
inc
dec
pop
fs
or
sarb
repz
mov
dec
ds
cmp
cli
mov
push
pop
nop
fisubl
cmc
dec
dec
jg
mov
into
xchg
inc
mov
pop
mov
dec
mov
imull
out
mov
lahf
push
push
cmp
movsl
aad
clc
scas
mov
std
repz
and
inc
das
fdivrl
call
mov
add
hlt
shr
je
loop
push
add
loope
lret
orb
jbe
fildll
sbb
inc
cld
lahf
xor
xchg
xchg
in
dec
mov
outsl
inc
icebp
xchg
loopne
push
cld
call
pop
xor
test
xor
fwait
cmp
xor
imul
mov
jle
jb
pop
loopne
xor
cmpb
adc
add
test
iret
dec
mov
jp
mov
les
sub
ja
iret
int3
adc
fidivl
mov
push
bound
fmul
call
adc
repz
mov
gs
jae
xchg
dec
mov
mov
sbb
mov
push
mov
and
xchg
sbb
push
arpl
shll
add
cmp
andl
lods
fiaddl
in
push
mov
pushf
jmp
insl
jmp
xchg
sbb
popa
and
lods
cmp
es
lcall
repnz
nop
fistl
or
movb
mov
push
call
jae
jno
pushf
ds
daa
shrb
clc
cwtl
cmp
cwtl
and
push
fsubrp
arpl
cmp
aad
popf
push
mov
nop
sahf
and
mov
add
xchg
push
sbb
adc
test
cmpsb
and
and
mov
outsb
adc
popa
push
mulb
sbb
outsl
and
mov
jb
jne
sbb
aaa
adc
mov
pop
negl
or
adc
push
mov
push
aam
pop
lods
mov
sub
pop
iret
pop
add
enter
movsl
xor
hlt
fstpl
and
push
push
lods
lock
jge
test
std
mov
stos
sbb
cmc
push
push
sub
icebp
outsl
aad
leave
jl
dec
iret
push
fisubrs
mov
and
testb
leave
jne
mov
add
addb
mov
movsl
mov
inc
arpl
pusha
jge
cli
negb
jge
cmpsl
sub
mov
aad
mov
add
stc
dec
popf
jg
push
and
sub
jae
jbe
sub
mov
xchg
xchg
test
repz
lahf
js
jle
mov
call
cmpsl
filds
push
push
stc
or
jbe
sarl
jns
cmc
pop
fcmovbe
push
int3
xor
sahf
cmp
push
or
fs
ljmp
inc
mov
aaa
xor
mov
insb
scas
fidivs
push
push
adc
xchg
movsl
scas
scas
test
push
enter
cmp
scas
adc
scas
inc
cmp
lods
sti
adc
ret
stos
sub
ret
xchg
rolb
mov
adc
in
movb
filds
dec
or
popf
imul
ljmp
lods
sar
jae
push
mov
scas
je
or
fsub
push
dec
mov
and
xor
js
test
and
cmp
xchg
xchg
push
push
xchg
xchg
push
sbb
lock
into
fldl
dec
pusha
shll
cs
and
push
ficompl
inc
jo
push
nop
pop
cmp
push
stos
pop
mov
cwtl
pop
fwait
js
pop
loopne
outsl
mov
int3
pushf
mov
dec
sub
sti
loop
mov
jmp
mov
fists
adc
cltd
popa
cmp
cmp
mov
insb
jecxz
addr16
adc
sub
fs
subb
push
push
in
inc
xchg
pop
add
fwait
dec
js
jbe
jmp
mov
nop
mov
in
fmull
and
inc
push
cltd
std
jmp
cli
sub
fs
push
inc
fdivrs
psubq
xchg
arpl
cmp
fstpl
and
inc
xchg
hlt
sub
dec
or
out
and
lods
call
inc
fld
xchg
xlat
out
or
dec
pushf
iret
stos
out
andb
ficoms
push
stc
ret
int
inc
in
jns
xchg
inc
push
pop
dec
hlt
orb
shll
inc
andl
push
roll
pusha
out
into
clc
push
jg
mov
fwait
fwait
inc
push
lds
cmp
cs
pop
push
cmp
ret
icebp
dec
adc
test
andb
js
sarl
adc
incb
out
inc
xchg
dec
out
mov
test
pop
mov
rol
addr16
stc
out
es
pop
sub
dec
sub
iret
or
pop
aas
inc
ret
sbb
cmp
mov
xor
inc
jmp
and
jle
push
pushf
mov
jge
cmp
hlt
and
lods
cwtl
repnz
testb
imull
xor
mov
jnp
test
out
jb
in
inc
rcrl
cs
pop
cwtl
fwait
cmc
xchg
insl
jo
mov
cmp
push
lods
pop
and
mov
dec
sub
push
jbe
dec
pushf
shll
or
popf
sub
sub
lret
push
or
sbb
popa
bound
pop
jg
ss
int
arpl
cmp
lret
cmp
mov
in
add
mov
lret
add
int
jo
ret
mov
cli
int3
xchg
out
fsubs
sub
dec
cmpsb
push
sar
jbe
fdivr
cmp
lods
and
pop
das
sbb
hlt
imul
jno
or
and
add
mov
push
repz
cmpsb
push
into
sub
pop
adc
mov
dec
jecxz
daa
inc
xor
pushf
mov
lcall
stos
jns
dec
cmp
jmp
aad
cmpsb
dec
jecxz
ljmp
in
jo
pusha
cltd
mov
mov
imul
mov
int
lock
in
je
add
loopne
push
mov
and
out
aad
icebp
jle
cmpsl
sub
mov
popf
sub
dec
jns
aas
das
insl
popa
jnp
mov
lret
push
out
add
sbb
and
popf
out
sbb
and
cmpsl
rcrb
pusha
imull
test
mov
in
mov
pop
fsubr
aaa
int
insl
or
stos
dec
icebp
imul
and
jnp
cmp
in
adc
mov
stos
jmp
cs
jmp
out
out
adc
mov
ja
pop
push
pop
mov
xor
adc
fsubrl
xor
jp
adc
sbb
lock
ljmp
sbb
divb
mov
fs
inc
push
xor
stos
int3
adc
je
sbb
fs
adc
push
and
sbb
add
ljmp
jmp
jle
ss
mov
sub
js
outsb
outsb
cmp
or
push
dec
js
mov
scas
sbb
adc
sysexit
mov
test
adc
iret
push
fisttpll
push
xchg
outsb
inc
add
sub
imul
pop
stc
lret
inc
lods
sub
mov
mov
movl
stos
scas
test
and
mov
dec
xor
sub
jne
mov
lcall
jecxz
aaa
mov
dec
mov
ss
pusha
mov
fdivl
lea
fidivl
inc
xor
mov
adc
addb
out
jl
pop
imul
sub
cmp
lods
xchg
lahf
pusha
in
stos
int
lds
dec
enter
fcmovbe
imul
mov
and
pop
cli
fidivrs
and
mov
mov
sub
movsb
mov
jle
cmp
andb
repnz
jo,pt
jg
pusha
aad
sti
out
stc
mov
movsl
mov
ljmp
jo
push
sbb
insb
loope
dec
jbe
repnz
ja
gs
repz
lock
repnz
jl
mov
inc
mov
cwtl
scas
cmp
pop
mov
rcl
fisttpl
inc
cmpsb
cmpsl
dec
mov
dec
mov
outsb
leave
es
push
pop
sub
outsl
pop
lds
mov
push
push
frstor
aaa
ret
in
loope
imul
ss
fadds
push
and
cmpl
jnp
hlt
aaa
insl
hlt
mov
push
mov
xchg
mov
fisubs
pushf
mov
mull
scas
push
sarb
icebp
xorb
je
pop
addr16
pop
sub
lret
insl
inc
mov
adc
addb
mov
xor
sub
cli
sarl
outsl
sub
mov
jns
dec
rclb
std
mov
pop
mov
mov
sbb
fimuls
mov
or
push
outsb
mov
mov
sti
mov
into
dec
sti
xchg
sbb
xchg
sub
movb
xor
shrl
bound
xchg
fwait
adc
xchg
std
filds
lret
fcoml
fstpt
prefetch
aam
scas
pop
and
shlb
in
jo
cmp
loop
pop
xor
je
add
dec
call
pop
and
adc
ret
aad
add
cli
data16
loope
ds
sbb
sahf
mov
dec
and
cmpsl
rcll
idivl
inc
hlt
pop
loopne
sub
andps
shrl
push
add
scas
shlb
lcall
or
and
mov
xor
cmp
xchg
xchg
mov
test
jns
adc
mov
stos
adc
fimull
les
lea
mov
imul
sbb
mov
mov
fbstp
outsl
cltd
mov
iret
mov
test
cwtl
dec
mov
and
jle,pt
sub
imul
stos
xchg
ds
stos
sahf
testb
mov
cmp
sub
dec
pop
popa
incl
nop
inc
xor
into
ret
test
lods
inc
dec
data16
sbbl
aad
aad
adc
repnz
into
push
inc
mov
adc
imul
pop
je
sub
ljmp
sahf
xchg
jns
cmp
loope
fs
push
arpl
inc
add
mov
sahf
stc
push
xor
test
lock
sbb
fiaddl
mov
sbb
jmp
dec
dec
lret
sbb
das
movsl
sub
add
push
addb
incb
mov
leave
fs
mov
fistpll
testb
lret
sub
pop
sub
cli
aad
pop
dec
fistpll
stos
fadds
repz
hlt
push
rcl
xlat
and
xlat
and
rorl
xor
mov
xchg
fstl
jb
pop
sahf
cmp
shll
pop
mov
sub
movsl
sbb
lock
pusha
mov
jecxz
pop
mov
mov
inc
mov
jmp
fdivrs
testb
fistl
jg
push
and
push
loopne
fildll
fadds
mov
cmp
lret
jb
xor
fcmovnu
xchg
cwtl
bound
inc
mov
outsb
mov
lret
xorl
fwait
movsb
and
mov
sub
movb
rcrl
aam
scas
xor
fisubrs
lock
mov
jne
movsl
xchg
cli
aaa
les
dec
repnz
cmp
ret
mov
inc
aaa
mov
adc
fldenv
mov
push
sub
push
mov
leave
dec
fildl
inc
or
adc
add
cmp
mov
fsub
jge
or
iret
xlat
cwtl
jnp
mov
sub
fs
add
andb
dec
fsubs
pop
push
inc
inc
and
sahf
push
lret
and
inc
cmp
mov
in
sbb
xor
push
push
push
pop
xor
bound
pop
xchg
popa
mov
sbbl
cmp
hlt
pushf
cmp
add
mov
data16
hlt
rcrw
sbb
sub
not
cmp
sbb
jnp
sub
push
les
sbb
sbb
popa
adc
mov
inc
push
cmpsb
and
pop
and
aam
clc
mov
clc
push
dec
aam
subl
or
push
popf
mov
mov
movsb
fists
push
xchg
xorl
xor
lahf
sbb
xchg
jecxz
lahf
adc
mov
divl
dec
jge
ss
sbb
fcomi
pop
pop
fs
jge
dec
int
inc
dec
jno
cmp
jg
movsl
sbb
scas
into
stos
adc
adc
stc
cmc
pop
cmp
jl
sbb
out
cs
js
xchg
popa
repnz
les
loopne
aaa
enter
mov
or
sbb
stc
xchg
leave
jbe
fistpl
ja
sbb
pop
aad
jmp
inc
cmpsl
push
xchg
xchg
pop
loop
sbb
sbb
roll
or
nop
inc
push
adc
popf
lahf
clc
fdivl
int3
sbb
cld
test
je
sbbb
inc
mov
mov
scas
ja
aam
push
xchg
sar
sbb
call
in
icebp
lret
adc
mov
mov
lret
pop
test
sub
iret
ficoms
repz
test
dec
mov
jnp
rcrl
jo
xor
xchg
push
aam
lds
sub
scas
pop
sbb
adc
daa
mov
inc
jg
adc
dec
mov
push
push
xchg
xorb
pop
dec
mov
popa
mov
sarl
push
aam
inc
cmpsb
jns
jg
ds
mov
shll
test
repz
adc
pop
dec
in
popf
cmp
pop
push
mov
xor
xchg
dec
lahf
addr16
pop
ds
inc
push
mov
pop
inc
stos
xchg
mov
outsb
stc
mov
xchg
pop
jo
push
pop
mov
and
addr16
in
mov
popa
add
js
jle
adc
mov
add
insl
pop
sub
jg
sbb
push
ss
out
adc
xchg
aas
dec
push
fisubl
lahf
insb
fidivl
dec
xchg
mov
repnz
sbb
mov
insl
fnstsw
push
cmp
and
std
pop
fnstsw
call
xor
insb
xorb
add
cmp
adc
fdivs
cmp
push
cmpsb
sub
enter
adc
cwtl
sub
mov
ret
cmpsb
in
les
mov
dec
test
mov
cmpsb
mov
ror
aam
add
mov
sti
dec
xor
addr16
mov
mov
pop
mov
push
scas
cmp
std
jae
out
push
lret
sti
jge
mov
stos
cmp
or
pop
ja
mov
test
cs
adc
out
cmp
rcrb
mov
xchg
pop
push
jnp
mov
pop
cld
lahf
mov
mull
push
mov
inc
add
jg
enter
pop
push
push
pop
inc
jmp
or
jmp
xchg
fimuls
xor
adc
push
mov
stc
mov
xor
pop
rcrb
neg
xlat
pop
ss
cmpsl
lret
stos
dec
sbb
insl
pop
jno
lret
clc
adc
dec
add
mov
imul
xchg
mov
rcrl
jg
mov
gs
pop
dec
sbb
jae
pop
cmp
in
mov
adc
ficomps
bound
sub
out
pop
adc
sbb
mov
xchg
out
cwtl
insl
adc
dec
mov
repnz
cwtl
push
fdivr
mov
push
rorl
add
loope
cmp
fsubs
mov
jmp
ss
adc
cli
aaa
mov
test
adc
out
or
mov
push
add
insl
pop
inc
add
push
adc
fwait
push
outsl
ja
gs
out
shll
lahf
sbb
mov
rcl
outsb
xchg
test
leave
mov
inc
test
mov
repz
outsl
stos
aaa
mov
sbb
scas
stos
int
lret
xchg
adc
inc
lods
jno
sbb
loope
mov
outsb
inc
in
movsl
inc
or
add
adc
sbb
lcall
arpl
inc
enter
mov
pop
dec
stos
cmp
clc
aad
mov
xchg
sub
scas
mov
fcoml
or
mov
cmc
dec
jo
ret
and
jmp
xchg
incb
jb
loopne
xorb
addl
test
cmp
dec
std
movsb
loopne
nop
mov
stc
pop
xchg
mov
jge
mov
dec
pop
and
cmc
inc
scas
shll
inc
clc
pop
fnsave
xchg
jo
jo
ror
cmp
insl
xor
ffreep
pop
or
mov
filds
mov
jl
mov
jp
popf
mov
xchg
mov
lods
pop
push
jl
and
mov
rorb
stc
jle
pop
and
sbb
out
mov
push
js
subb
xchg
push
loope
addr16
sub
mov
mov
mov
into
pop
fidivs
adc
jae
xlat
inc
inc
fstpt
lahf
mov
mov
or
cmpsl
cmp
in
enter
out
dec
cmpsb
data16
lods
adcl
or
jno
dec
add
inc
mov
movsl
inc
mov
or
push
shl
dec
negl
xchg
and
out
shrl
imul
jecxz
into
dec
repz
dec
adc
fists
jae
enter
or
jp
xlat
andb
xchg
out
iret
lret
in
lock
ljmp
aas
mov
mov
loope
or
inc
jb
mov
sbb
jmp
adcl
cmpsl
clc
ljmp
dec
into
in
in
jmp
adc
and
push
mov
sti
mov
inc
mov
mov
icebp
cmp
les
sbb
add
inc
ret
mov
scas
jb
mov
jp
pop
adc
sbb
push
push
test
mov
and
fbstp
orl
push
data16
xchg
loop
int
scas
int3
hlt
pushf
mov
imul
mov
jo
lods
lcall
add
xchg
inc
xor
mov
mov
push
mov
push
clc
loopne
inc
sbb
sub
xchg
or
push
fildll
adc
and
es
lcall
jl
dec
mov
cld
xor
mov
fwait
inc
out
in
or
jl
ja
test
pop
fstps
xchg
cmpsl
fisttpl
and
hlt
mov
bound
jns
mov
mov
mov
fwait
and
lret
dec
cmp
mov
pushl
in
mov
sbb
sti
cltd
inc
and
xchg
stos
mov
jge
sbb
sub
xor
cwtl
jge
les
xchg
dec
bound
shr
nop
decb
outsl
pop
xchg
push
inc
mov
lret
enter
rcrl
xchg
fs
incb
data16
mulb
int3
and
hlt
or
not
xor
das
imul
stos
push
mov
xchg
mov
sbb
cltd
xor
scas
enter
fs
xor
in
push
sbb
xchg
jns
out
sbb
dec
sti
test
mov
shlb
xchg
mov
adc
push
pop
stc
fisttps
xlat
xchg
adc
pop
gs
addb
leave
or
out
test
push
loope
cmc
test
push
dec
jg
inc
test
call
es
pop
pop
pop
in
mov
lret
inc
jecxz
out
je
cltd
sarl
xchg
sbb
jge
imul
pop
notl
xlat
jmp
pop
cld
xlat
inc
mov
dec
adc
cltd
mov
bound
mov
enter
loop
cmc
cwtl
xorl
nop
mov
jge
imul
int
jae
or
scas
inc
lret
and
cmpsl
mov
sub
test
xor
ret
xor
xchg
imul
xor
xchg
push
sbb
inc
push
push
sbb
insl
lea
repz
cs
call
cmp
sar
xchg
pop
clc
pop
aad
stc
or
pop
lea
inc
out
jno,pn
jmp
fucom
js
shl
jp
in
fwait
je
cli
subl
pop
insb
cmp
subb
int
mov
cmp
pop
add
or
es
out
dec
add
mov
pop
iret
jp
sahf
mov
dec
popf
jecxz
xlat
loope
fnstenv
cmp
popf
rclb
mov
shlb
jge
daa
sub
ret
and
popl
add
xor
mov
jb,pt
xor
addr16
or
inc
pusha
adc
mov
cmp
cli
scas
mul
pop
aaa
mov
dec
movsb
jecxz
out
clc
test
jge
dec
pop
or
subl
push
pop
add
xchg
inc
sub
test
mov
aas
xchg
jg
cmp
shr
sbb
cld
in
mov
xor
jg
pop
jne
or
inc
stc
pop
sbb
or
jmp
pop
pop
out
out
stc
cmp
idivl
jg
xchg
ret
pop
repnz
inc
aas
xlat
pop
cld
mov
sti
xchg
out
call
loope
mov
and
out
jmp
mov
pushf
ds
outsb
and
adc
xchg
xchg
hlt
add
int
mov
cli
ret
test
je
rolb
cs
in
pop
xchg
movsb
rol
aad
lods
je
ss
sbb
or
sahf
mov
cmp
mov
mov
lods
pop
or
xchg
orl
dec
fadd
inc
dec
cli
rcll
xchg
pop
fcmovne
lods
xchg
mov
nop
xchg
stc
pop
pusha
cmp
int
sbb
negl
cltd
pop
and
pop
pop
jge
movsb
sub
cmp
scas
aas
ja
inc
dec
inc
call
or
ret
xchg
xor
xor
and
cld
push
loop
dec
imul
pop
iret
mov
movsl
and
push
popa
dec
mov
stc
sbb
mov
adc
insb
dec
pop
mov
cmp
xchg
jecxz
hlt
inc
ss
jns
mov
push
push
bound
push
lret
sbb
ljmp
lahf
stos
imull
xrelease
xchg
cmp
mov
lret
aaa
pop
in
rcrb
push
mov
and
mov
mov
sbb
aaa
sub
xchg
dec
rcrb
pop
outsb
cli
or
rolb
je
dec
popf
cmp
orl
fnsave
aad
stc
hlt
mov
jae
test
inc
icebp
push
and
repz
add
jge
insl
mov
popa
div
out
leave
and
inc
cmpsb
mov
mov
add
movsbl
xorl
out
sbbb
bound
jmp
pop
in
ret
inc
adc
movsl
rcrl
movsb
arpl
sub
movsl
lock
hlt
das
test
mov
das
test
testb
loop
push
push
pop
bound
dec
xor
inc
fmull
bound
dec
shl
pop
sub
sahf
add
bound
ror
lret
add
mov
or
mov
addr16
xchg
pop
add
arpl
jno
mov
push
call
mov
adc
fwait
mov
cmp
popf
repnz
inc
ss
jne
ja
xor
popf
or
mov
push
xchg
adc
in
push
xchg
mov
outsl
xchg
dec
adc
call
rcrl
add
add
adc
rol
cs
notl
jl
aad
shrb
imul
hlt
out
push
dec
push
and
or
add
inc
sub
or
xor
ljmp
or
adc
mov
pop
mov
cmpsl
pop
xor
outsb
or
push
mov
orl
clc
push
test
out
adc
jecxz
mov
sarb
cmp
mulb
add
outsb
dec
negb
mov
cmp
inc
popf
add
sbb
cmp
test
add
insl
and
pop
pop
cld
xchg
mov
cltd
adc
mov
outsb
xchg
shll
scas
into
adc
mov
ljmp
test
jns
sbb
or
out
data16
fcmovb
cli
sub
cmp
jns
adc
jmp
xchg
aad
mov
jae
sbb
mov
adc
pop
or
dec
test
mov
jp
ret
mov
int
inc
jmp
lcall
pop
mov
iret
push
aam
and
aad
sub
pop
sub
pop
clc
fstpl
lock
mov
mov
out
into
pop
mov
xchg
inc
push
out
sub
repz
adc
mov
movsb
mov
mov
add
xor
es
cmp
pop
and
mov
aam
fldl
dec
mov
sbb
ss
in
cld
fcmovnb
ds
cmc
xor
mov
jge
pusha
pop
inc
hlt
ret
and
outsb
lahf
or
rcrb
cs
les
pusha
cmp
dec
ss
ret
stos
sahf
mov
mov
in
xchg
pushf
push
mov
sub
pop
inc
addb
ret
or
pusha
cmp
sar
loop
mov
punpckhwd
insl
jg
mov
inc
insb
pop
out
into
push
fcmovb
jns
jle
cmp
aam
pop
fistps
pop
cld
test
imul
in
movsl
cs
add
lock
gs
scas
pop
sub
fucom
dec
xor
adc
jg
ret
mov
mov
insl
hlt
adc
xor
lahf
mov
mov
arpl
mov
lahf
stos
jns
cmpsb
cmc
test
fprem
fmuls
sahf
scas
adc
jl
mov
and
addl
imulb
jl
ret
mov
cmp
inc
adc
mov
push
rcrb
push
mov
or
popa
sub
mov
int
mov
push
scas
inc
in
push
int
xor
sbb
dec
or
in
jnp
incb
mov
ficomps
out
sub
dec
loopne
push
sub
gs
imul
pushw
aaa
mov
xor
lods
push
xorl
cli
out
pop
lahf
xchg
cmp
mov
test
jns
mov
scas
jo
jge
movsl
xchg
cmc
push
fs
xor
ret
xor
pusha
mov
mov
sti
test
pushf
ss
push
popa
aam
jle
inc
fisubrs
test
inc
mov
cs
mov
adc
jp
das
int3
arpl
mov
cld
xchg
and
jne
fincstp
jg
lods
push
pushf
arpl
xor
adc
jo
fwait
ret
in
xchg
pushf
mov
sub
bndstx
xor
outsl
xor
pusha
outsw
dec
movsb
add
sbb
nop
cmp
xchg
mov
aad
adc
outsl
nop
cmp
cmc
scas
or
cmc
add
aam
jmp
jno
ss
sbb
movsb
pop
or
push
movsb
xor
clc
inc
jno
pop
xlat
mov
fnsave
aad
inc
loopne
fbstp
add
popf
pop
xor
outsb
in
inc
test
or
add
aam
sub
sbb
orl
jns
test
je
addr16
out
cmp
dec
mov
insl
inc
ror
sarb
push
leave
mov
jmp
lahf
lret
push
imul
jne
adc
add
mov
shlb
lret
dec
scas
and
pop
lea
mov
popa
test
je
push
jae
aam
leave
aam
inc
sub
movb
push
movsb
jge
or
dec
aam
dec
and
inc
leave
rclb
and
test
xor
test
mov
lea
or
mov
pop
test
pop
call
icebp
jae
sbb
call
shl
inc
imul
out
cmpsl
clc
cmpsl
imul
cmpsb
lahf
dec
xchg
add
mov
push
shufps
stc
aad
lahf
xor
ud1
shll
adc
out
dec
sub
pop
leave
jl
mov
pop
rorl
aas
nop
mov
sbbb
aad
les
sub
test
fnstcw
aas
sbbb
fwait
jle
dec
rclb
xchg
mov
aam
push
jle
imul
shrb
push
in
sbb
jge
sub
test
popa
sbb
jmp
push
loope
ljmp
jmp
test
out
aaa
lcall
mov
sahf
iret
negl
lret
mov
pop
inc
sarl
adc
mov
cmp
movsb
fimuls
mov
cmp
shll
ror
xor
xor
stos
je
inc
aad
cmp
inc
leave
mov
mov
js
loop
sub
or
cmp
or
xchg
cmc
es
push
imul
or
mov
hlt
mov
fstpl
stos
out
and
test
mov
inc
inc
outsl
push
cmpsb
mov
pushf
push
cltd
pop
ret
cmp
fidivl
shr
fwait
sbb
dec
rcr
int
sbb
pop
movsb
ret
das
mov
ret
xchg
sbb
enter
fs
in
pop
movsl
or
std
popf
xlat
sbb
mov
jle
mull
dec
pop
lods
jg
xchg
dec
mov
add
cmp
sti
cmp
xchg
add
les
add
iret
push
jmp
xor
and
mov
outsl
inc
daa
stos
sarl
les
or
stos
jecxz
js
fcompl
in
icebp
ret
outsb
inc
xor
jmp
adc
in
les
xor
and
fcompl
xor
mov
stos
sub
fadd
inc
xor
push
add
adc
or
ds
mov
hlt
fwait
loope
xor
movsb
jno
xor
lcall
in
test
sbb
mov
mov
outsl
jno
adcl
pop
jl
cmp
lahf
lret
stos
fcmovb
mov
scas
lods
sbb
push
stc
movsb
pusha
loop
bnd
std
inc
daa
sbb
mov
movsl
inc
shl
dec
icebp
enter
jge
int
out
js
sbbb
call
aaa
jge
in
ret
iret
inc
jne
cmpsl
mov
mov
xor
fdivs
test
mov
cwtl
fsubrl
imul
cmp
mov
xlat
cwtl
mov
int
lret
mov
jmp
adcl
xor
xor
push
and
mov
mov
lods
mov
popa
mov
ja
mov
scas
xor
jno
das
jb
mov
js
dec
aad
jb
loope
in
aas
loop
ret
or
ret
and
jecxz
mov
or
or
xchg
mov
push
push
imul
push
sub
in
xchg
xchg
fcomps
rcll
mov
sbb
push
test
xchg
movsb
add
movsb
test
push
movsl
outsl
xchg
stos
sbb
test
xchg
inc
ja
jns
stc
mov
cld
xor
pop
out
or
inc
fldt
mov
add
repz
push
loopne
movsb
mov
cmp
jmp
sub
icebp
daa
ds
std
mov
add
cli
gs
into
outsb
mov
neg
and
cmc
adc
orb
add
lock
jmp
or
iret
mov
shr
ljmp
je
push
mov
sub
shrb
lods
es
popf
es
fwait
into
xchg
movsb
fmuls
mull
xchg
lret
es
flds
minps
mov
cwtl
xchg
scas
mov
lcall
jmp
sub
xor
mov
mov
mov
ljmp
and
jae
add
adc
in
outsb
in
outsb
cmpsb
stos
fwait
jp
aaa
inc
push
push
cwtl
int3
outsl
mov
sbb
js
mov
pop
nop
adc
pop
mov
insb
and
mov
ljmp
pop
cltd
sub
je
fmul
push
lock
fcomps
adc
fsub
dec
mov
fsubrl
fsubl
xchg
mov
fs
clc
lods
xchg
popl
pop
push
inc
push
push
rclb
mov
and
loopne
mov
popa
and
pop
mov
xchg
xchg
sub
pop
repnz
lds
xor
leave
int
fsubl
inc
sub
ror
or
hlt
push
mov
lock
xchg
shr
and
aad
int
fwait
mov
mov
in
cmc
jle
movsl
ret
cld
pop
aas
adc
movsl
pop
pusha
daa
or
xor
push
mov
lock
addr16
cwtl
roll
mov
mov
iret
inc
inc
or
jg
seta
push
push
and
xchg
pop
mov
push
sti
daa
mov
adc
lret
jns
xor
xor
xchg
mov
mov
lahf
loope
pop
ret
outsb
gs
loopne
and
mov
inc
jns
cmc
call
clc
xor
dec
and
add
pop
xchg
loope
xchg
ss
ja
fisubrl
cmp
xchg
lea
adc
xor
cmp
call
and
pop
or
lret
gs
mov
inc
daa
setle
push
bound
jmp
push
scas
lahf
add
xchg
arpl
dec
mov
mov
sbb
adc
iret
insl
dec
xor
stos
mov
lds
xchg
arpl
test
jmp
daa
dec
xor
fstpl
xor
cwtd
test
mov
fdivs
rclb
jl
xor
mov
cmp
roll
push
mov
jnp
xchg
dec
cld
xchg
fsubl
and
cmp
cli
shll
daa
sarl
mov
mov
das
inc
call
aaa
sub
inc
xchg
sti
or
adc
push
push
pop
fnstsw
pushf
inc
iret
mov
pop
cmp
lcall
xchg
jae
and
dec
mov
jmp
fadds
imul
lahf
das
cs
mov
rcrb
sbb
push
and
xor
test
cmpsb
out
mov
push
add
sub
cmp
sbb
jb
call
add
inc
push
ljmp
sub
push
mov
je
inc
push
outsb
repnz
push
mov
repnz
scas
sbb
movsb
adc
cmpsb
es
xorl
jp
arpl
push
outsl
enter
testb
je
mov
sahf
scas
jmp
push
xor
xchg
std
cs
xchg
shrl
gs
jge
push
adc
mov
pop
inc
sub
idivb
out
xchg
sbb
iret
fisubrs
leave
outsl
mov
sbb
inc
lods
sub
lret
pushf
add
aaa
dec
fcos
push
inc
fs
mov
dec
imul
loop
repz
jecxz
push
jne
mov
dec
mov
mov
mov
add
sub
adc
xor
mov
or
cs
or
mov
out
pop
push
test
pop
sti
jno
add
lret
or
inc
out
or
fs
sub
mov
jmp
fs
sbb
push
mov
divps
jb
std
data16
mov
mov
mov
dec
fistl
add
outsl
mov
xchg
arpl
jg
test
and
add
adc
push
aas
pop
pop
inc
cmp
aas
orb
mov
ds
jl
adc
inc
xor
xor
je
out
test
or
aad
movl
pushf
inc
in
ja
out
out
emms
mov
dec
dec
xor
pushf
shlb
lods
sub
mov
push
inc
push
inc
sbb
pop
jbe
insb
lds
lahf
cmp
insl
stos
icebp
mov
rcr
pop
sbb
leave
aam
mov
pop
int3
push
movsb
pop
pusha
into
subl
nop
aaa
lock
dec
sbbb
imul
xor
and
mov
sbb
insb
add
add
add
scas
and
sub
ret
add
shrb
pop
ds
sar
dec
test
ror
rcrb
loopne
adcl
pop
push
sbb
add
jmp
movb
or
andl
fadds
jno
and
leave
add
or
imul
scas
pop
insb
movsbl
and
js
mov
mov
or
xor
mov
sbb
and
xchg
shlb
in
push
clc
mov
rolb
and
fildl
adc
fdivrp
push
or
pusha
sub
lret
orl
mov
xor
cmpsb
or
jp
arpl
add
jae
loopne
add
or
cmp
sarb
mov
lods
fldt
outsb
xlat
adc
in
sbbb
xor
xchg
cmc
daa
es
fs
int3
xchg
loop
sahf
jb
push
jb
xor
dec
pop
fbld
sti
jno
pop
lea
lods
jg
mov
aaa
jp
cmp
scas
push
insb
fucom
repz
out
out
call
test
leave
shrl
imul
dec
pop
imul
in
popf
xchg
insl
xor
iret
push
out
mov
lahf
jne
mov
jae
ljmp
mov
mov
pop
xchg
mul
jno
int
fcomp
jnp
int
outsb
ja
sti
scas
fldt
push
stos
jns
pop
pxor
mov
out
jnp
cld
xchg
icebp
lahf
xchg
jb
or
pop
inc
negb
push
jp
fiadds
push
sub
call
adc
cmpsb
scas
mov
mov
insb
mov
jmp
daa
fcompl
sub
stos
cmp
adcl
iret
or
aaa
rcr
mov
insl
push
mov
scas
insl
pop
push
cmp
mov
mov
pop
movsb
lods
pop
test
ja
imul
gs
fisubrs
jnp
loopne
divb
js
jp
sti
or
mov
jge
lock
outsl
stc
jle
jae
dec
ficoml
loop
sbb
scas
jmp
cmpsb
ljmp
iret
push
push
test
inc
jp
cmp
cli
aas
sbb
xchg
jg
call
gs
cld
push
sarl
lds
iret
mov
sbb
out
dec
inc
int3
lcall
sub
add
pop
inc
jns
sub
jg
mov
stos
sub
ret
imul
push
cmp
jo
dec
sub
scas
clc
repz
xor
sub
jns
mov
push
cld
fstpl
xor
jns
xchg
mov
inc
ror
scas
fsubrp
jnp
sub
pop
inc
lcall
ficoms
lock
sahf
or
sbb
aaa
frstor
clc
cltd
sub
pop
pop
sub
and
sbb
out
mov
mov
scas
mov
sahf
inc
fdivrp
jmp
notl
into
cmova
outsl
mov
aad
ds
mov
ss
mov
outsb
mov
imul
mov
mov
lods
xor
jmp
jmp
test
lds
nop
outsl
xchg
into
jg
xchg
xchg
jne
out
push
call
scas
inc
call
test
mov
xchg
rcrb
sub
int3
mov
cli
cmp
decl
mov
fstsw
aad
xchg
out
cli
inc
out
movsl
rcrb
fsubrs
xchg
aas
push
ret
movsl
clc
adc
mov
xchg
iret
push
jle
xor
fdivrp
stos
std
mov
mov
ljmp
ss
xlat
mov
jg
mov
push
fistpll
pop
fsubl
imul
dec
push
packuswb
jns
in
nop
vxorps
sub
aad
out
negb
jnp
sub
sbb
repz
inc
lret
mov
in
cmp
adc
xchg
scas
enter
mov
dec
outsl
lahf
aas
scas
ret
inc
push
aad
mov
pop
mov
and
loop
pop
mov
out
sahf
lcall
fsts
js
sti
jmp
cmp
movsl
xlat
cmp
call
jge
sbb
jecxz
sbb
iret
out
pop
jns
cmc
out
in
data16
pop
sbb
lea
mov
cmp
scas
and
xor
clc
pop
stos
mov
stc
jg
lods
sbb
test
loopne
mov
shlb
mov
push
movsb
das
in
push
inc
int
pop
out
addr16
jmp
push
stc
mov
dec
js
adc
stos
repz
test
xchg
adc
out
gs
sti
sub
jno
mov
jecxz
push
jg
jno
fnstenv
insl
fidivs
and
data16
ss
jp
ja
jbe
ficoms
and
pop
ret
mov
jns
pop
aad
dec
popf
pop
mov
jo
decb
scas
ds
add
in
aas
stc
cmp
add
stc
stos
fiaddl
cld
dec
push
or
pop
and
mov
scas
nop
mov
popf
fcomp
ja
and
fs
pop
jnp
jmp
popa
xor
xor
sbb
les
xchg
and
inc
cmpsl
pop
inc
add
pop
leave
sbb
cmp
dec
sub
and
ds
mov
adc
and
rolb
push
int3
fidivl
fstpl
mov
outsl
rclb
add
rcll
dec
mov
inc
inc
imul
in
and
dec
cmp
mov
mov
repnz
sbb
pusha
xchg
or
adc
loope
mov
xchg
int3
subb
push
dec
jmp
mov
mov
jnp
lea
adc
js
or
jnp
push
adc
pop
movsb
mov
test
cmp
stos
inc
adcb
or
es
mov
lcall
mov
jnp
popa
stc
in
adc
and
mov
in
jns
dec
das
shr
and
and
pusha
inc
pop
push
lcall
pop
mov
in
jns
in
mov
loope
div
and
add
in
xchg
xor
xchg
jns
dec
adc
nop
fimull
insb
lods
push
ss
insl
sub
xchg
jae
or
cmpsb
outsb
fs
jno
clc
clc
faddl
dec
sbb
inc
jns
push
ss
jge
push
mov
xor
cmp
call
mov
push
roll
ja
rcrl
je
cmpsb
in
sub
pop
gs
mov
lret
dec
das
movsl
cmp
jnp
dec
cmp
sbb
daa
jl,pt
inc
fs
lods
dec
shlb
subl
push
xchg
cmpsb
imul
dec
loop
into
popf
testl
push
adc
push
xchg
divl
dec
imul
and
sahf
xchg
sub
jg
repnz
cmc
and
cli
dec
sti
mov
gs
inc
mov
cmp
add
dec
mov
sub
inc
cmpsl
test
cmp
add
push
inc
clc
insl
icebp
inc
cltd
das
pop
dec
cmp
nop
mov
jecxz
xchg
push
rclb
cmp
add
rorb
mov
scas
out
jb
xor
lcall
popa
mov
out
imul
push
push
inc
lea
cmp
fcmovb
mov
ljmp
les
jo
test
mov
push
xlat
or
shrl
test
or
push
mov
fsub
cmp
push
mov
cwtl
inc
dec
pusha
ljmp
ret
lds
imul
fsubrl
add
push
xchg
stos
xor
inc
push
dec
pop
out
cmovno
rcrl
pusha
push
inc
popf
xorl
or
test
lcall
lahf
cwtl
bound
ret
outsb
cmp
popf
sti
adc
fcoms
dec
icebp
or
jns
arpl
sbb
sub
inc
lds
sbb
sahf
insb
loopne
dec
push
and
mov
fdivrs
jge
push
sbb
ret
stc
fsts
aad
jle
mull
jo
jns
fcoml
cmp
test
dec
mov
mov
mov
into
push
mov
mov
xchg
int3
dec
or
addr16
mov
stc
cmc
popa
sti
inc
fistpll
hlt
jmp
xchg
mov
in
or
cmp
dec
pop
jb
sahf
dec
ja
es
or
mov
mov
aam
xor
pop
pop
mov
mov
mov
int
loope
pushf
popl
mov
shlb
dec
xor
ret
dec
shl
adc
mov
movsb
int
data16
push
stos
fdivrl
push
rol
push
outsb
dec
jnp
lahf
jg
out
dec
xorb
daa
lcall
mov
loop
fstp
stos
push
sti
mov
mov
xlat
mov
cmp
or
or
cmpsb
lock
addr16
addr16
cli
fwait
mov
mov
pop
fcomps
gs
mov
cmpsb
ljmp
inc
pop
je
xchg
sti
push
std
jmp
cmp
pop
fisttps
jb
lahf
leave
adc
out
dec
add
lds
ds
mov
das
cli
push
imul
mov
cmp
lock
sbb
mull
clc
jnp
test
mov
sti
clc
popf
out
loop
inc
in
ret
insb
gs
aaa
sbb
icebp
and
out
or
mov
jb
popf
mov
orb
or
outsb
mov
xchg
and
movsb
leave
les
je
dec
xchg
sbbb
adc
sub
enter
jp
inc
dec
dec
adcb
and
xchg
push
push
add
inc
mov
data16
fsubl
mov
das
cmp
lret
and
cmpsb
mov
idivl
xchg
aaa
ds
dec
test
or
mov
mov
mov
aad
jne
int
xchg
movsb
cmp
ret
mov
mov
and
cmpsl
sbb
enter
ljmp
ljmpw
push
icebp
leave
es
lds
cmpsb
and
adc
adc
xor
aad
push
sub
xor
adc
sub
cltd
je
and
aaa
and
sbb
dec
push
pusha
negb
mov
mov
mov
mov
mov
in
sbb
adc
mov
sub
fs
stos
xchg
inc
xchg
cmp
lcall
add
popf
popf
iret
sub
rcll
adc
xchg
push
mov
daa
pop
xor
cwtl
push
pop
adc
stc
jbe
jae
xor
or
lcall
es
scas
or
add
test
bound
xor
cltd
rorl
aam
rcrl
es
sbb
jbe
cmp
roll
movsb
cmp
jecxz
int3
outsl
lret
sub
pop
sbb
leave
cltd
test
mov
add
sbb
sub
fsubs
lods
cli
and
xor
test
daa
shll
sbb
andb
inc
rol
jge
in
adc
dec
adc
dec
sub
aad
rcrl
nop
int3
outsl
add
xchg
xor
in
cli
xchg
jbe
andb
jne
or
cmpsl
arpl
cmc
xor
loopne
cmp
mov
and
add
test
sbb
sub
lcall
aam
cld
add
adc
mov
stos
lret
mov
mov
loopw
sbb
arpl
mov
push
popa
ror
mov
cwtl
push
add
shlb
and
cltd
cmc
sbb
and
pop
fcomps
xor
fiadds
nopl
dec
cmp
push
out
mov
lcall
cmp
repnz
and
push
mov
cmc
cmp
imul
inc
mov
sbb
jmp
mov
dec
loope
adc
push
stos
xlat
dec
xchg
pop
ret
nop
sub
pop
dec
sbb
cwtl
cmp
push
jo
mov
iret
mov
xchg
stos
mov
mov
mov
cmp
das
subb
mov
jmp
sbb
aam
push
cltd
hlt
adc
mov
add
sbb
mov
gs
lea
mov
sbb
dec
fdivl
mov
inc
dec
push
sbb
outsb
andl
movsl
ss
push
inc
cmc
push
dec
sbb
adc
push
lea
add
push
mov
cmp
push
int3
ja
adc
push
push
rorl
test
es
test
mov
pop
push
fmul
loop
and
pop
mov
adc
ret
push
xchg
mov
enter
aam
pop
in
arpl
adc
dec
adc
mov
in
aad
lret
call
mov
in
fmul
loope
dec
nop
fldenv
nop
and
dec
inc
cmpsl
and
pop
stos
lahf
shll
jg
shlb
out
std
ss
jle
jns
cwtl
sub
loopne
test
push
ja
xchg
add
lods
fisttpll
ficompl
orps
movsb
mov
and
rolb
pop
out
push
xor
jnp
dec
add
mov
add
inc
cmpsb
add
xchg
and
leave
push
in
mov
icebp
add
add
sbb
in
fs
sbb
das
out
out
fistpll
push
imul
in
into
lret
xor
mov
insl
int3
mov
jae
rorb
std
add
cld
dec
hlt
insl
dec
mov
into
minps
cwtl
div
jle
mov
sub
mov
stc
cmp
cld
adc
mov
loope
out
loopne
call
int3
and
insl
xchg
cld
sbb
pop
outsb
lahf
fdivp
inc
repz
pop
push
lods
imul
dec
je
mov
cld
or
push
outsb
sub
pop
inc
cmp
hlt
sub
push
lods
adc
lods
push
inc
fidivl
dec
dec
jno
push
outsl
fidivrl
sub
mov
fs
push
xchg
mov
les
out
push
jmp
mov
negl
jnp
out
adc
cld
or
lret
aas
pop
insl
divl
aam
cld
pop
jo
call
mov
mov
mov
filds
sub
jae
das
imul
repnz
mov
outsl
aaa
scas
rcl
fsubr
mov
clc
sbb
mov
movsl
rcr
idivb
sbb
jbe
mov
lret
outsb
leave
mov
push
mov
outsl
outsl
jns
aaa
popa
loopne
bound
fidivl
ja
in
outsl
mov
add
mov
ss
cli
pop
cld
jl
mov
mov
es
pop
pop
adc
jae
mov
sbb
mov
jmp
fiaddl
fistps
movsl
repz
mov
pop
das
out
in
mov
jge
fcoml
std
das
cltd
fdivl
dec
sub
out
add
fsubrl
cli
dec
into
dec
dec
jmp
out
adc
mov
hlt
lcall
adc
mov
das
push
decl
pop
cld
dec
push
decl
out
xchg
out
aaa
out
test
sbb
sti
int
out
loope
ja
push
mov
idivl
push
xchg
clc
fwait
std
fucomp
out
jp
pop
rcr
clc
sahf
mov
or
sti
shlb
mov
jp
std
jno
adcl
ret
ds
ret
aam
fwait
mov
je
sarl
mov
aad
or
cwtl
mov
add
push
mov
jo
cmp
sti
insl
sahf
xchg
push
dec
sbb
jmp
pop
jo
xchg
movsl
mov
imul
dec
clc
sbb
push
loop
sub
and
cmpsl
leave
lds
pextrw
mov
sahf
lods
test
incb
mov
dec
jb
je
dec
repnz
mov
jae
arpl
mov
sarb
push
imul
inc
call
dec
leave
fs
imul
movsb
fs
stos
mov
jne
pop
xchg
mov
leave
xchg
ja
scas
pop
lret
jb
mov
mov
and
or
bswap
sub
shlb
and
dec
dec
inc
dec
adc
sub
dec
cmp
ja
mov
out
pop
std
xlat
xor
jo
stc
xor
push
xor
jne
decb
lret
jl
in
icebp
fnstcw
mov
nop
cmp
dec
jnp
jns
jge
xchg
icebp
jecxz
into
cmpl
lret
mov
jmp
int3
jl
adc
in
aaa
and
sbb
test
mov
cmpsl
jmp
pop
in
push
aas
mov
add
pop
fcoms
xchg
loopne
fbld
sub
es
lcall
mov
test
jecxz
mov
dec
mov
out
daa
mov
sbb
mov
mov
cmpsb
jno
cld
sahf
es
mov
outsl
or
pop
xchg
mov
iret
mov
jg
xor
fisubrs
ss
out
psubd
call
pop
icebp
fbld
insl
mov
xor
xchg
push
js
mov
mov
aad
shl
leave
jnp
jbe
and
jae
out
dec
fadd
fmull
mov
daa
sub
xbegin
push
aad
mov
cmp
cmpsl
aaa
imulb
fdivrp
insl
xchg
repz
jnp
ss
cli
scas
mov
mov
mov
mov
lahf
pop
add
pop
mov
push
cmp
shrl
sbb
push
iret
movsb
lahf
fs
mov
pop
mov
mov
mov
adcl
xchg
fwait
or
inc
in
xchg
ljmp
outsl
out
and
inc
fwait
cmp
jge
cmp
sub
sbb
lea
cmp
icebp
ret
aas
test
pop
mov
out
pushf
in
jge
rorl
adc
into
cmp
adc
insl
dec
jno
cmp
inc
fmuls
jmp
dec
inc
jnp
adc
sub
inc
inc
inc
test
adc
idivb
into
and
sarb
sub
push
inc
js
pusha
outsl
cmp
jnp
fimull
fimull
fimull
fimull
ss
sbb
jg
das
pop
fwait
xor
test
inc
add
sar
jno
pushf
mov
push
sbb
jns
pop
cmp
pop
clc
sbb
mov
cmc
nop
pop
shrl
scas
stc
push
fsubrs
jae
mov
jno
mov
pop
out
je
jo
sbb
cli
or
push
outsb
cld
movsb
mov
mulb
out
pusha
inc
fcmovnb
in
dec
int
shr
fldt
sub
xor
dec
cmpsl
sar
pusha
leave
push
not
push
dec
ficomps
mov
movsb
dec
jle
or
xor
std
xor
adc
sub
mov
loop
ja
decb
fcmovnu
outsl
cmpsl
idivb
outsl
adc
add
out
mov
mov
push
setns
dec
lock
jle
addr16
lret
fstpl
repnz
mov
divb
jg
pop
cld
pusha
pushl
mov
in
jbe
sbb
icebp
jl
lods
dec
iret
push
dec
dec
popf
int3
dec
iret
pop
adc
es
pop
jns
ret
outsl
movntq
out
iret
add
sbb
jne
cmpsb
xlat
pop
jmp
ds
cmp
ljmp
xor
jle
ficoms
insb
cmc
iret
jo
jbe
and
mov
cmc
mov
fistpl
jmp
fildll
aaa
mov
inc
neg
jae
xchg
jg
iret
jne
fsin
rol
push
arpl
insb
pop
dec
in
cli
call
mov
fcmovnb
movsl
mov
ljmp
mov
xchg
loope
mov
shl
mov
aam
lock
inc
sub
jno
lea
adc
cs
shr
mov
xchg
pop
sahf
fiaddl
jl
add
and
jl
pop
in
xchg
jnp
fwait
mov
cli
or
cmpsb
push
stos
cmc
mov
lock
xor
dec
cs
in
ja
dec
icebp
pmaxub
xor
fs
aas
cmp
mov
sbb
mov
jno
out
mov
and
cmpsl
sbb
fnsave
mov
inc
push
mov
lds
not
push
xchg
and
pop
mov
mov
mov
dec
fwait
mov
cli
lret
aaa
jb
roll
jecxz
sahf
dec
adc
ja
je
sub
lds
cmpsb
jne
sub
fdivs
pusha
adc
lret
mul
mov
pop
sbb
mov
sub
dec
andl
bnd
into
xchg
jle
push
fs
push
lret
notl
jecxz
cld
mov
lcall
jo
test
iret
lret
xchg
btr
in
inc
inc
imull
pushf
hlt
jecxz
scas
jg
jmp
daa
inc
fidivrs
mov
cld
jmp
cwtl
aad
pop
int
jo
out
add
cmp
cmc
leave
js
mov
call
into
adc
in
fsubl
xchg
call
mov
repnz
cmp
out
addr16
xor
push
sbb
mov
pushf
xor
loopne
lahf
aaa
xor
xor
push
xchg
je
js
xchg
cltd
scas
add
sub
jo
pushf
and
xchg
test
xchg
clc
fmull
jp
lea
fcoms
sub
in
cmp
mov
out
jle
xchg
in
sti
xchg
scas
stos
cld
jbe
xchg
fucomi
divb
cmpsl
repnz
aas
movsb
jg
jge
inc
repz
sub
jp
mov
sarb
lods
pushf
cwtl
mov
xor
pop
arpl
out
imul
fdivr
aad
push
inc
std
test
jne
lock
ljmp
test
daa
dec
jmp
cwtl
loop
dec
ja
es
xchg
and
sub
ret
inc
fcom
jle
xor
and
sahf
pop
push
dec
int
out
int
xchg
push
dec
into
sbb
loope
mov
stos
push
fdiv
cmpsl
bound
cmp
pop
sbb
aaa
sub
imul
inc
std
test
push
loopne
add
adc
aad
or
xchg
sub
sbb
clc
lret
and
xchg
add
loope
fstpl
xchg
mov
lret
and
repz
in
lods
jae
outsb
ror
nop
sarl
notb
push
pop
push
pop
jno
bnd
xlat
out
pop
test
and
or
cwtl
popf
push
movsl
xchg
in
cmp
mov
or
jae
mov
jg
jo
idivl
pop
jmp
js
cmc
aad
clc
inc
loope
movsl
lods
and
cld
add
int
iret
sti
insl
scas
in
insb
dec
pop
add
popf
popf
mov
sahf
repz
push
cmc
cmc
jae
orl
mov
fistpll
jbe
dec
fldl
nop
sub
lret
clc
sbb
sbb
movsl
inc
sbb
inc
mov
sahf
mov
xchg
test
push
pop
aaa
pop
xor
cmp
pusha
mov
mov
jmp
sarl
testl
add
aam
outsl
inc
pop
lods
or
pop
outsl
mov
mov
fldenv
aaa
mov
push
xorb
cmpl
bound
lock
xchg
int
or
and
addl
jge
fisubrl
lret
add
fdivrp
adc
jnp
lahf
clc
mov
addr16
push
lret
pop
push
push
mov
push
push
add
ds
ror
mov
mov
loopne
into
jecxz
cld
fimuls
js
cmp
loope
and
jecxz
push
jo
jns
add
in
aas
jnp
aad
fwait
nop
shr
in
sti
cmc
out
cmp
xchg
mov
outsb
stc
imul
pushf
inc
imul
daa
jns
sahf
mov
xor
xlat
jne
mov
lods
adc
sub
int3
out
repz
into
pop
std
in
jecxz
lret
iret
ret
int
adc
sti
std
into
dec
jae
pushf
call
lret
scas
xor
pop
lret
clc
xchg
xchg
cli
or
cs
jb
bnd
jae
jbe
sub
jle
jge,pn
xlat
test
lock
fwait
shl
xor
out
adc
loop
scas
out
xor
cs
xor
jge
cmp
xchg
mov
sub
lods
adc
sub
in
scas
mov
rorl
mov
sbb
and
jno
mov
repz
sub
mov
cmpsb
enter
pop
negb
pop
in
sub
pop
stc
cli
iret
ja
sub
stos
clc
es
leave
jb
jle
jae
nop
jl
cmp
shl
add
rclb
loope
cmp
adc
sub
dec
push
inc
dec
add
push
aas
mov
in
sbb
jb
je
dec
repnz
mov
jno
xchg
inc
push
sub
pop
inc
mov
mov
jmp
xchg
push
push
sub
jmp
xlat
xor
sub
aam
push
sub
mov
popa
add
fsub
fidivl
iret
jle
mov
movsl
imul
arpl
ficoml
shl
leave
inc
push
sbb
cli
adc
dec
cmp
cmp
jmp
andl
into
cmpsl
lahf
cmp
dec
shrb
sarb
sub
adc
sahf
and
push
pop
fs
repz
insl
dec
imulb
js
cmpsl
rorl
adc
stos
mov
in
mov
or
inc
sub
mov
loop
js
xchg
pop
stc
pop
cmp
rclb
hlt
scas
mov
fisubl
sbb
inc
mov
dec
push
fwait
dec
es
lcall
loopne
pop
rcrb
sub
sub
sbb
outsb
ljmp
xchg
loope
js
mov
and
sbb
push
adc
mov
or
mov
or
in
mov
jnp
mov
es
imul
push
cmpsl
sbb
fwait
into
ja
inc
rcrb
jle
sti
pop
lcall
je
cmpsl
out
mov
sub
dec
mov
adc
or
popl
cmp
push
xor
mov
mov
lret
pop
dec
push
insb
mov
mov
add
mov
or
xchg
adc
test
mov
add
mov
or
sbb
rcll
out
rolb
jae
inc
xchg
out
or
xchg
rolb
adcb
sbb
mov
jns
push
lock
mov
mov
jg
repz
std
or
pop
sub
fdivr
xchg
adc
mov
shrl
mov
imul
mov
pop
ljmp
sti
cmp
push
es
ja
or
xchg
add
adc
mov
jp
into
insb
jno
stos
into
cmpb
in
xchg
test
call
sbb
xchg
lahf
push
pop
hlt
idiv
sti
sub
dec
out
or
jae
cmp
mov
push
addr16
into
xor
mov
jmp
das
lods
inc
loopne
jge
fcomps
repz
push
sbb
pushf
testl
adc
jae
mov
mov
sbb
push
out
loopne
jle
pop
out
gs
cli
mov
jge
arpl
loopne
arpl
mov
call
testb
pop
std
enter
push
sub
pop
psrad
xor
cld
je
bt
sti
lods
mov
mov
mov
in
jl
cmp
repz
xchg
cmp
movsl
repnz
fiadds
lcall
inc
clc
inc
aas
xchg
sub
orb
cmp
faddl
lret
lret
mov
mov
test
cmc
aam
unpcklps
repz
pop
add
stos
in
xchg
hlt
or
loop
mov
bnd
inc
into
test
insb
pop
mov
ss
sar
mov
es
insl
std
mov
mov
data16
sar
in
cwtl
mov
in
std
cwtl
inc
out
jbe
outsl
in
psraw
stc
fldenv
in
nop
fdivrl
negb
and
or
enter
repz
and
xchg
ficompl
jnp
xor
xchg
aam
lahf
push
lahf
push
out
pop
mov
clc
cmpsl
in
pop
pop
loope
stc
ds
mov
mov
add
incl
cmp
arpl
lock
clc
and
xorl
mov
cli
jns
sti
jo
sti
stc
jbe
ljmp
aas
push
pop
lock
roll
divl
hlt
mov
fwait
sbb
fiadds
stc
daa
sub
cli
push
xchg
inc
jle
pop
call
pop
clc
repnz
nop
add
cmp
add
or
inc
out
jle
pop
out
pop
cld
test
mov
pushl
cltd
outsl
neg
or
pop
lcall
cltd
outsl
idivl
or
mov
mov
mov
outsl
repz
or
pop
decl
xchg
dec
mulb
ljmp
xor
ljmp
pop
std
pop
jnp
dec
movsl
xor
idivl
gs
jg
sarb
lahf
jbe
cli
rcrb
sub
sarb
out
xor
xor
mov
lock
inc
cmc
lcall
negl
lock
cs
mov
adc
add
aam
pop
shll
cmp
and
cltd
sub
ds
and
cmp
pop
je
ja
test
mov
shl
xchg
jne
cmp
and
daa
cmp
adc
gs
sub
fmull
cmp
and
rcrb
ljmp
jno
mov
fisttpl
xor
mov
xor
out
jno
pop
into
xor
jl
sub
jl
sub
jl
sub
push
hlt
mov
mov
in
insb
insb
cmp
mov
divb
ret
fcmovu
fdivrs
sbb
imul
insb
insb
cmp
mov
divb
ret
fcmovu
fdivrs
pop
packssdw
in
insb
pop
cmp
mov
divb
ret
fcmovu
mov
ja
setno
lods
cmp
aaa
dec
mov
sbb
lods
arpl
lea
dec
loopne
into
arpl
int
sbb
arpl
mov
cmp
cs
pop
mov
lea
fcoml
int3
push
stc
mov
stc
pushf
push
hlt
fsubs
enter
je
ret
subb
cli
sar
jo
xchg
add
aam
sbb
es
fwait
mov
xor
or
jae
sahf
outsl
adc
adc
mov
adc
jno
ds
inc
int3
dec
cmp
xor
dec
fwait
adc
test
mov
sbb
ret
xchg
inc
pop
leave
out
stos
stos
mov
jp
int3
mov
or
mov
pusha
pop
mov
test
pop
ficompl
cmpsl
or
push
imul
dec
inc
push
ja
jmp
stos
and
es
outsl
jo
stos
sub
movsl
push
mov
clc
jge
mov
xchg
aad
inc
movsb
insl
jb
aam
push
aas
scas
pop
lahf
cmp
mov
adc
add
test
mov
movsl
sbb
jg
jg
mov
bound
inc
in
cld
jne
cs
popa
ja
add
in
mov
ljmp
push
cmp
shl
lea
jp
cmp
xchg
push
pop
pop
add
jg
xor
or
andb
pop
push
push
mov
and
mov
inc
xor
and
mov
fs
aas
mov
adc
insl
shrl
outsb
mov
sub
jmp
pmuludq
push
popa
pop
imul
add
mov
mov
stos
fistpll
lret
pop
in
mov
sbb
ret
pop
push
inc
jmp
and
std
pusha
or
cmpsb
jb
sub
mov
notb
ljmp
test
fwait
hlt
push
aad
sbb
add
outsl
int3
mov
stc
xchg
incl
movsl
jo
popa
inc
sub
or
shl
sbb
div
nop
push
fcomps
pop
fldl
mov
jne
pop
out
or
inc
jecxz
in
push
es
xchg
lret
arpl
dec
and
insl
negb
pop
mov
movsb
loop
pop
push
cmp
dec
je
push
in
adc
mov
adc
adc
or
or
repnz
push
rcrb
xor
inc
or
int3
dec
mov
in
cld
push
mov
xchg
mov
js
jg
repz
cmpsb
jno
jno
aad
rcrl
fisubl
and
scas
fwait
and
js
stc
or
xchg
jnp
mov
mov
push
xlat
lods
mov
pop
scas
insb
in
mov
mov
das
cmp
hlt
ss
push
fbstp
jmp
fsubr
lods
mov
in
scas
mov
push
ljmp
xchg
mov
mov
fldcw
mov
mov
imul
or
fnstsw
aaa
pop
scas
shr
out
jnp
jbe
mov
mov
cmp
pop
pop
jge
sti
divl
mov
ja
aaa
or
cmp
divb
fildl
mov
adc
addr16
in
out
jle
push
pop
movsb
mov
fsubp
outsl
adc
subl
adc
test
cli
mov
fbstp
push
outsl
insl
inc
out
adc
outsl
sar
mov
xchg
repz
popf
mov
jle
int3
out
cmp
adc
ja
mov
in
mov
es
movsb
hlt
mov
pop
pop
jae
mov
out
xor
fisubl
xor
mov
jg
fildll
jl
daa
or
adc
cs
test
or
jp
cs
sar
cld
sub
out
div
out
mov
pop
out
ss
mov
jl
out
div
jo
outsb
sub
mov
dec
pop
testl
imul
jmp
adc
inc
js
mov
pop
add
lods
dec
leave
mov
adc
sahf
test
and
fdivs
gs
or
mov
push
jmp
ss
xchg
mov
cltd
adc
fwait
xchg
out
test
call
scas
movsl
jl
mov
js
pop
push
pop
data16
pushf
nop
js
lods
fwait
mov
dec
sub
mov
xor
adc
cwtl
dec
lock
pop
mov
push
shrl
mov
xor
dec
mov
jle
xlat
fnstcw
movsb
mov
and
xchg
adc
xchg
mov
sbb
shll
push
xor
jb
sahf
test
cwtl
add
std
push
push
jmp
pop
xchg
jae
sbb
jo
sub
xchg
push
std
mov
cltd
mov
inc
jmp
and
xchg
jmp
add
hlt
mov
mov
add
stos
mov
fsubl
fcmovb
ret
sbb
xor
dec
pavgw
or
mov
stc
lret
sub
cli
test
mov
sbb
dec
or
js
or
cmc
sub
xchg
mov
adc
stc
mov
movl
loope
inc
and
inc
cmc
cld
sbb
dec
pop
cmc
jp
xor
xchg
jnp
ljmp
sar
mov
sahf
pop
ret
sub
cld
sub
xchg
mov
dec
das
cmp
sahf
push
inc
mov
jg
es
mov
adc
xor
popf
lcall
repnz
xor
cmp
mov
mov
nop
push
sti
scas
and
pop
mov
lcall
cld
das
sbb
negb
ret
pop
aas
xor
das
out
out
cli
sbb
rcrl
lahf
jo
cld
scas
mov
cli
cmp
jae
testb
pop
fldt
jg
xor
xlat
sub
cwtl
pop
inc
mov
lret
shl
pusha
sub
cmp
sti
jns
loop
mov
pop
popf
lcall
ret
in
dec
sarl
psllw
es
mov
fwait
das
clc
test
mov
std
mov
mov
mov
mov
xchg
cld
adcl
cli
mov
mov
int
loopne
call
mov
mov
call
or
add
mov
sahf
mov
jge
pop
mov
dec
popa
movsb
cmp
mov
test
jb
loopne
inc
mov
jl
rorl
inc
aaa
and
mov
jmp
scas
and
popa
mov
mov
mov
inc
cmp
imul
notl
pop
outsb
xchg
js
pop
push
enter
imulb
push
imul
rorb
and
inc
xor
ficoms
dec
imul
iret
mov
arpl
icebp
cli
xorl
outsb
movl
push
xchg
push
push
lds
push
imul
cmp
inc
outsb
aad
stc
or
and
sbb
xchg
xchg
shlb
and
enter
or
imul
fadds
inc
int3
dec
test
js
js
add
or
aaa
jp
test
stc
fs
sarb
aam
lock
jl
mov
xor
roll
push
loopne
sub
test
aas
rorl
push
xchg
imul
out
xchg
jmp
pushf
jo
in
popf
cmpl
fists
and
test
pop
ficompl
sti
call
stos
daa
or
jb
pop
int
mov
enter
sub
ficompl
and
jmp
xor
and
mov
xchg
int3
pushf
gs
push
fnstsw
sti
cmpsb
push
ljmp
movsl
notb
nop
sbb
jmp
xchg
fldenv
sub
hlt
jle
xor
cmpsl
sbb
push
xchg
cmpsl
mov
in
lret
jmp
inc
mov
mov
mov
rcrb
sbb
or
test
add
test
mov
pop
inc
jg
iret
xor
jae
xchg
iret
stos
push
mov
push
data16
sbb
out
sti
mov
push
test
sub
mov
int3
lret
and
xor
stc
or
inc
cltd
ja
lcall
mov
dec
out
ljmp
push
push
mov
mov
in
pop
aas
repnz
testl
mov
lea
sub
or
inc
stos
xor
test
inc
outsl
icebp
lret
dec
sub
roll
test
into
sbb
jmp
enter
stc
cs
jmp
test
mov
addr16
std
jae
and
aam
int3
xchg
lds
dec
mov
lcall
movsb
mov
arpl
mov
adc
push
les
pop
adc
leave
dec
jae
push
inc
inc
pop
inc
loope
mov
call
sti
adc
cmp
cmpsl
test
sub
in
dec
adc
mov
lahf
or
repnz
aad
inc
push
movsl
arpl
adc
inc
mov
adc
and
lahf
sahf
call
push
push
mov
ss
add
push
add
mov
repnz
test
add
cmpsb
xchg
sahf
ret
outsb
push
pop
lret
pop
fwait
xchg
nop
call
jp
inc
push
lds
dec
cli
jmp
xchg
mov
and
mov
sub
outsl
fsts
movsl
cltd
cltd
stos
add
mov
sbb
ds
dec
cmp
xor
jb
cltd
fistl
pop
into
or
sbb
dec
lock
fs
inc
cwtl
xchg
lods
sbb
aam
xchg
or
mov
mov
outsl
movsl
inc
lds
jae
inc
adc
push
sbb
lea
out
sarb
lods
mov
xchg
mov
adc
or
cli
and
cmpsl
fnstenv
dec
push
xor
cmp
sahf
push
pop
mov
loope
xchg
sbb
in
stos
xor
cmpsb
xorb
in
adc
mov
push
sbb
imul
fcmovu
sbb
sbb
cmp
xor
hlt
push
repz
adc
push
icebp
popf
shll
testl
lds
cmc
jecxz
mov
sub
pushf
aam
stos
mov
mov
addl
daa
leave
cmc
aam
test
in
ficoml
jmp
push
push
push
mov
cmp
inc
test
imul
mov
aaa
mov
xchg
mov
sbb
roll
sahf
mov
xor
adc
sub
push
in
push
sub
nop
ret
pop
je
cmpsl
xor
div
push
adc
mov
popl
xor
xor
inc
test
mov
and
xor
mov
in
push
rclb
xchg
mov
aad
mov
ret
ds
jmp
adc
cmp
aas
lret
aaa
gs
fnstenv
mov
scas
subl
dec
push
popf
xlat
fcom
push
push
mov
mov
xchg
mov
js
cmpsl
mov
dec
dec
or
pop
add
mov
test
in
sahf
push
in
push
xchg
sbb
loope
shll
dec
add
mov
xchg
movsb
fdivl
insb
cmp
sub
pusha
rol
mov
out
iret
fwait
cs
imul
xor
or
add
or
push
push
dec
mov
lret
arpl
sbb
inc
dec
xchg
xor
xchg
ret
push
add
lret
test
mov
xchg
lods
stos
inc
movsl
mov
jp
outsb
into
mov
mov
xchg
xchg
adc
jmp
call
jmp
dec
sub
outsl
lret
divl
lds
lret
pop
mov
adcl
repnz
push
je
je
nop
scas
test
jns
shl
push
sbb
cs
mov
out
std
jae
xchg
cmc
cwtl
mov
leave
cwtl
jne
sub
dec
jbe
sbb
loope
push
es
mov
cltd
pop
sub
sbb
pop
adc
pop
push
movsl
imul
aaa
fadds
dec
xchg
xorl
push
fcmovbe
jb
call
add
je
and
jo
outsl
in
cmpsl
mov
or
jbe
ret
pop
or
pop
jo
imul
mov
pop
adc
dec
and
loopne
xchg
jo
cmpsl
ds
into
xchg
pusha
std
or
iret
ret
or
xor
or
dec
jl
or
out
aas
cmp
pop
add
inc
adc
xor
and
mov
or
add
nop
sub
outsb
mov
dec
xor
loopne
enter
inc
outsl
fisubl
test
sub
pop
jp
adc
arpl
inc
push
fs
callw
dec
mov
sub
mov
ss
jo
sbb
test
in
dec
sbb
push
jge
sbb
lcall
mov
icebp
xlat
push
cmp
xor
add
int3
scas
jle
fnsave
scas
pusha
into
or
negl
mov
mov
into
fidivl
decb
lret
jl
call
mov
dec
and
xchg
stc
xchg
push
into
pushf
mov
mov
dec
xlat
sub
popf
mov
push
rorb
jae,pt
call
inc
dec
jne
shrd
mov
shll
xchg
mov
pop
adc
xchg
loope
xor
push
addr16
xchg
fisubs
into
xchg
subl
and
sub
and
in
jo
addr16
cmpsl
pop
scas
ss
add
lds
sub
nop
clc
loope
cmp
rclb
add
outsb
sbb
add
in
sbb
inc
xchg
sbb
aam
xor
and
iret
pop
or
cs
xor
movb
jb
js
adc
jo
cmp
test
movsl
jge
xor
lret
inc
lds
test
cmp
loope
and
add
mov
mov
cltd
inc
fisttpl
lahf
std
and
stc
mov
jbe
adc
mov
pop
dec
jmp
test
inc
les
es
sbb
leave
push
sahf
gs
sbb
or
mov
dec
push
leave
test
nop
jle
adc
mov
enter
cmp
pop
jbe
inc
xorb
test
add
cmp
wrmsr
adc
pop
loope
xchg
add
and
ffree
notb
ds
inc
cmp
out
stos
adc
test
test
shrl
sbb
and
xchg
mov
sarb
add
push
rcl
imul
or
sbb
xchg
mov
sub
dec
and
nop
mov
or
adc
mov
push
dec
and
lret
rcl
stos
mov
popf
sbb
das
scas
fs
jecxz
iret
cmpsl
ds
push
or
xor
cmc
outsb
scas
sahf
cmp
jne
das
sub
mov
insl
imul
inc
inc
dec
scas
mov
adc
push
or
lret
movsl
jb
and
jecxz
rol
pop
or
inc
or
rorl
push
out
stc
test
mov
nop
addr16
cmp
insl
pushf
jo
cltd
arpl
cmp
mov
int
dec
cmp
fs
sahf
sahf
repnz
fldl
push
xchg
sub
out
in
cmp
nop
test
nop
popf
aam
and
add
pop
push
add
ss
dec
in
inc
xchg
cmp
repz
inc
dec
in
iret
mov
push
xor
adc
inc
sub
sbb
xlat
inc
cmp
test
inc
test
sub
int
sub
ja
test
leave
jbe
scas
push
out
xchg
out
push
ret
push
sbb
es
lods
jg
push
mov
jle
es
into
xchg
stos
int3
cmp
cmp
shlb
aad
ds
jg
fst
lods
dec
and
xchg
test
sbb
loope
mov
loop
add
add
jbe
test
cld
mov
addr16
push
dec
mov
ja
fs
rorb
divb
std
mov
add
add
das
jg
push
out
push
push
inc
addl
cli
mov
pop
scas
lods
cmp
mov
push
jp
repz
dec
loope
jno
xchg
mov
shlb
and
jnp
cs
fcoms
loopne
xchg
push
fs
pop
jb
cli
xor
mov
repnz
adc
icebp
jmp
inc
push
dec
icebp
subb
inc
inc
inc
cmp
or
fisttpll
fdivs
rcrb
push
or
and
fs
data16
jle
stc
insb
dec
in
mov
imul
ss
rclb
pop
push
fs
inc
xchg
idivb
popa
test
jns
ds
xchg
mov
jnp
std
lock
mov
jno
movsl
out
push
xor
xor
pop
arpl
adc
lea
xchg
or
shrl
cmpsb
xchg
shrl
dec
push
add
fidivl
cltd
stos
inc
mov
int
xor
dec
in
push
sbb
leave
add
fidivl
xchg
cmp
dec
int
xor
dec
push
outsb
lods
sbb
pushf
mov
lock
mov
es
push
out
es
or
fwait
clc
jnp
mov
cwtl
ffreep
fsts
out
cld
je
pusha
sahf
push
add
data16
cmp
aaa
rep
insb
dec
addr16
cld
cmp
push
lret
xor
pop
call
jg
int
ret
fnstenv
sti
mov
rcrl
sti
cwtl
and
xlat
es
mov
int
inc
repz
or
inc
ss
adc
and
ucomiss
int3
adc
jp
aas
stos
rolb
cld
rcll
dec
aad
test
mov
lret
imul
sub
loopne
sbb
sahf
pop
sub
push
sub
fimull
sahf
stos
psadbw
add
clc
lods
add
je
call
inc
testb
sub
jecxz
adc
push
test
je
sbb
movsl
ss
int3
adc
adc
aas
ret
push
int
and
lods
push
sub
es
adc
and
mov
cmp
lcall
test
pop
daa
cmc
inc
std
and
rcrl
lahf
xchg
pop
in
lret
ret
aaa
mov
mov
orl
inc
xchg
lock
flds
sbb
jne
dec
or
int
mov
dec
jmp
fidivl
adc
gs
pop
pop
cli
rorl
or
sub
imul
loop
rcrl
idivb
add
push
mov
sub
sub
lret
lods
push
lret
adc
pop
jnp
and
out
mov
lods
xchg
and
pop
testl
add
std
sbb
pop
hlt
in
imul
stos
sbb
sbb
cmp
mov
adc
pop
repz
mov
lods
jns
or
xor
jno
aad
cmp
xor
aad
cmp
xor
or
push
loope
ss
jp
push
push
xchg
cmc
mov
mov
sbb
xchg
xchg
js
gs
in
int3
sbb
mov
xor
arpl
sbb
in
mov
and
sbb
push
mov
js
cmp
mov
jmp
test
mov
push
fisubrs
movsl
je
sbb
sarl
cmovns
in
lret
mov
pop
mov
sbb
and
mov
pop
jl
push
dec
int
cmpsl
shl
in
dec
xlat
pop
dec
movsb
repnz
pop
mov
inc
add
cwtl
insb
dec
xor
push
imul
pop
sbb
and
loop
xchg
sub
roll
xchg
sahf
jge
out
lret
sub
es
mov
xchg
fisubs
sbb
bound
test
outsl
and
pop
xchg
push
xor
and
lds
rclb
pop
jecxz
popa
outsb
inc
fnsave
mov
inc
cltd
xchg
inc
pop
lods
push
jns
ret
xor
loop
leave
int3
in
pop
push
or
mov
dec
push
fmuls
xchg
and
mov
rcrb
mov
enter
inc
push
xchg
sbb
lea
sub
pushf
push
ljmp
xor
movsb
test
mov
ffreep
and
call
or
fsubs
and
ret
shlb
pop
lods
push
cmpsb
dec
xor
sub
adcl
movsb
pop
icebp
jge
adc
xchg
bound
ret
insb
mov
and
popl
xor
mov
roll
or
jbe
iret
call
push
lock
mov
push
lret
roll
dec
ds
mov
scas
nop
cmp
cltd
in
stos
jo
sub
icebp
push
sub
mov
in
mov
mov
pop
enter
mov
xchg
lock
das
and
imul
aad
andnps
scas
fimull
ja
push
dec
xlat
push
sub
inc
cmp
push
and
xor
inc
cwtl
aam
addl
mov
stos
out
jmp
fiadds
add
fs
fldt
movsb
dec
push
lcall
movsb
dec
or
push
pusha
clc
sub
push
jo
or
mov
sbb
jne
ror
mov
test
test
mov
movsb
xor
icebp
std
inc
lds
and
push
or
stos
and
lods
sbb
push
je
cmp
enter
mov
xchg
or
xchg
jmp
dec
imul
out
pop
mov
mov
push
push
into
into
es
int3
push
lea
push
int3
push
addr16
xor
ret
cmp
xchg
xor
pop
addb
mov
frstor
out
mov
insl
in
fs
push
mov
jbe
inc
inc
jae
dec
fcoms
pop
inc
adc
xlat
or
jmp
dec
or
push
addb
cmp
adc
mov
jp
insb
sub
xchg
insl
shll
popa
add
fs
add
es
and
fbstp
xchg
push
jl
ret
push
inc
dec
inc
stos
test
inc
mov
mov
in
sbb
xchg
xchg
jne
insb
push
cmpsl
addr16
mov
xlat
rclb
mov
add
xor
stos
rcrl
and
outsb
ljmp
push
xor
or
mov
sub
or
adc
push
loop
lret
data16
fildl
push
mov
push
sub
aas
lcall
pop
xorb
or
cmpsl
and
movsl
sub
int3
sbbb
stos
mov
jl
loopne
add
dec
xchg
jno
inc
cmp
or
outsb
cmp
jg
addps
mov
xor
das
test
xchg
and
and
xor
inc
push
enter
jg
jle
xor
xor
pop
jecxz
push
int
mov
adc
adc
lds
dec
sti
adc
mov
xor
loope
bound
test
jle
dec
lret
sahf
cmp
add
xchg
int3
adc
sub
cmpsl
push
sub
ret
sbb
fs
or
rclb
xchg
jge
xor
jbe
jbe
and
pop
or
xor
push
nop
sbb
leave
fs
dec
xor
dec
sbb
cmp
cmp
sub
fldt
push
cmp
or
add
mov
jo
sbb
jnp
pop
test
sbb
out
cmp
cwtl
or
mov
ret
aas
mov
stc
loopne
mov
mov
xchg
sbb
and
sbb
pop
pop
adc
add
pop
sbb
xor
jae
mov
push
lcall
jae
inc
call
movsb
jae
sbb
cmp
add
test
imul
popf
mov
int3
xor
sbb
jl
sub
mov
stos
in
xchg
sbb
pop
mov
repnz
mov
mov
sbb
pop
push
aas
xor
nop
in
mov
movsb
inc
xor
or
test
jb
stos
push
mov
push
int
rcrb
icebp
cmpsl
repnz
jno
pop
pop
push
sbb
divb
inc
inc
aam
xchg
pusha
mov
xchg
xor
les
and
adc
push
addb
hlt
fistl
roll
stos
pop
out
cltd
pop
nop
dec
mov
js
mov
call
mov
and
dec
es
mov
loopne
call
in
lret
pop
pop
jmp
imulb
and
push
inc
ret
add
fldl
icebp
ret
xor
pop
inc
inc
call
scas
and
sub
jecxz
mov
push
andl
data16
pusha
sti
pop
dec
mov
add
jbe
mov
cwtl
out
jp
push
lret
lret
nop
add
mov
insb
call
mov
dec
mov
jge
ljmp
sbb
out
adc
sbb
jbe
mov
sbbb
add
pusha
sbb
add
or
andb
add
pusha
sbb
add
cmp
add
adc
add
out
jge
fildll
fistl
mov
cli
idivl
pop
and
repnz
pop
and
jmp
pop
mov
jecxz
int
test
mov
pop
lret
out
test
push
xchg
outsb
insl
adc
cmp
push
cmp
xlat
shl
sbb
sub
or
jae
mov
xor
mov
repnz
lods
mov
push
inc
lcall
pop
les
in
aas
inc
out
clc
in
cmc
shrb
imul
jnp
daa
sub
std
jmp
loopne
pop
jle
push
int
gs
cmc
dec
cmpsb
sbb
mov
iret
cmpsb
sbb
dec
mov
sbb
in
ret
ja
sbb
scas
xchg
sbb
cwtl
pusha
xchg
mov
leave
fwait
daa
ret
mov
inc
mov
and
mov
jae
popf
cs
jl
mov
mov
xchg
mov
movsb
jmp
fldl
dec
shl
adc
in
pop
stos
push
es
roll
hlt
fs
lcall
les
xchg
mov
dec
cmpl
loope
cmp
jecxz
loope
mov
mov
xlat
orb
mov
lock
mov
daa
arpl
fmuls
add
xlat
cwtl
fadds
and
test
je
mov
pushf
pop
pop
aaa
cmp
cld
mov
outsb
adc
xchg
imul
stos
cmp
sub
mov
cltd
sbb
fwait
iret
jmp
push
outsl
inc
jp
out
pop
cltd
push
fwait
adc
xor
or
lods
imul
stos
out
xchg
cmp
sbb
sub
loop
or
sbb
xchg
push
add
daa
jmp
or
cmp
loope
test
enter
xchg
inc
jp
leave
arpl
jne
lcall
fisubs
mov
lret
jo
and
sbb
arpl
or
and
ret
pushf
clc
cmc
pop
imul
xor
outsl
xchg
dec
push
inc
fwait
push
sbb
fcomps
push
enter
push
mov
dec
repz
push
xor
mov
mov
xchg
movsl
dec
imul
loop
shrl
ds
sub
add
or
xchg
jo
pushf
pop
cmp
dec
bound
int3
int3
mov
mov
mov
pop
notl
inc
xchg
pop
xchg
inc
pop
rolb
cwtl
call
xor
sub
jno
mov
add
push
shlb
mov
sbb
lods
or
pop
push
les
inc
in
loopne
or
push
and
mov
cld
sub
fcmovb
bound
lret
inc
mov
jge
and
popf
lods
pop
inc
pop
xchg
inc
shrl
push
test
mov
push
mov
mov
nop
loopne
mov
outsb
fdivs
jmp
dec
adc
xor
shll
stos
insl
mov
repz
mov
xor
std
lcall
sbb
push
sbb
jae
aam
push
mov
xchg
leave
scas
mov
xor
mov
insl
lcall
xor
gs
imul
aad
push
loop
ja
lock
into
lahf
ror
addr16
dec
rorl
sti
push
dec
mov
adc
or
jmp
lret
mov
lods
push
inc
mov
lcall
test
sahf
adc
jno
jge
jg
clc
movsl
movsl
mov
dec
ljmp
lods
add
lret
pop
mov
stos
invd
pop
pop
jmp
outsl
loopne
rorb
jl
lock
shr
rolb
rorb
inc
sbb
in
icebp
push
js
lods
pmovmskb
push
jl
movsb
pop
add
sub
and
sbb
sarl
sysenter
sbb
js
icebp
add
xorb
js
cli
add
shr
fildl
add
cmpl
and
pop
cmp
mov
rolb
mov
adc
testl
nop
aaa
inc
scas
or
jae
jecxz
lds
aad
test
popl
hlt
pop
movsb
push
clc
cmp
cmp
add
mov
leave
pop
mov
or
mov
popa
clc
aas
rcrb
cmp
lock
out
add
pop
lods
cmovl
loopne
push
test
shl
sahf
push
dec
cmp
js
lods
pslld
mov
pop
call
push
enter
mov
enter
add
repnz
pop
clc
and
rorb
bswap
shufps
push
mov
inc
ja
mov
push
pop
pop
cmp
mov
hlt
xor
les
jl
call
cld
inc
cld
and
cmpl
loopne
sar
cli
inc
clc
xrelease
bswap
bswap
shufps
push
mov
inc
outsl
andl
addr16
pop
sub
clc
repz
popl
ret
pop
xchg
push
loopne
mov
jmp
in
and
add
ljmp
pushf
pop
mov
cmp
push
test
shlb
mov
cmp
filds
mov
push
mov
inc
ja
insl
add
jo
and
add
add
dec
sbb
and
rorb
vmread
loopne
cmpb
sarl
push
or
cmp
push
pop
jmp
or
psrld
sbbb
push
call
cmc
sub
aad
js
shlb
pop
push
pop
dec
pop
sbb
loop
icebp
add
add
pop
mov
pop
push
mov
rcrb
sbb
push
pop
aad
test
sub
xor
sar
stc
add
add
pop
cmpsb
or
sbb
repz
into
pop
aam
pusha
jle
mov
out
add
pop
loop
loope
jl
add
add
or
adc
lock
fiadds
mov
cmp
cmpl
cmp
in
lds
xchg
fldlg2
fldl
js
fdivrs
xorl
lds
aam
test
mov
adc
testl
mov
inc
jae
lret
jge
jle
xchg
and
add
cmp
add
pop
test
lock
add
mov
inc
loop
ljmp
mov
add
xor
icebp
sbb
stos
cmovs
inc
hlt
add
push
loop
ret
add
js
jl
std
add
loopne
sub
addps
mov
loopne
rcll
cmp
ljmp
pcmpeqb
fdivrs
inc
jmp
aad
js
shlb
jecxz
lds
aam
pusha
jle
xor
lock
clc
add
inc
out
add
pop
scas
or
sbb
repz
xchg
prefetcht2
and
push
pop
jmp
movl
cmp
inc
clc
cmp
push
subb
sarb
loopne
add
xchg
sar
movsb
pop
lock
not
jle
jle
jnp
cmc
shr
roll
call
lock
out
movb
jg
movsb
pop
add
xor
shr
roll
call
push
push
pusha
cmp
inc
loope
imulb
sub
aas
push
adc
jnp
test
adc
movsb
or
or
adcl
pusha
mov
mov
shl
repz
jecxz
scas
cmpps
add
out
xchg
or
cli
mov
out
fcompl
add
xor
inc
cmc
add
push
sarb
push
push
sub
in
call
jle
jle
jnp
test
adc
int3
leave
xchg
mov
shl
fs
es
mov
dec
adc
hlt
jo
or
out
or
sub
out
add
and
mov
jg
shr
scas
pop
or
fisttpl
mov
or
rol
sbb
in
imul
jo
daa
aad
lret
arpl
xchg
daa
movsl
aaa
push
mov
jp
mov
push
jae
xchg
out
lods
in
dec
adc
pop
mov
inc
imull
push
dec
sbb
bound
into
push
mov
push
cmpsb
push
fcmovnbe
sbb
xchg
cltd
rcrb
stos
in
leave
jns
rorl
cmp
je
jmp
ljmp
mov
cmp
insl
mov
stos
cmpsb
out
xchg
cwtl
mov
ss
cmpsb
jp
xchg
push
daa
pop
int
sarl
insb
xor
mov
sahf
ss
hlt
jae
mov
mov
dec
dec
jl
push
je
test
push
fwait
insb
rol
sbb
xchg
insl
out
cs
aam
jns
mov
popa
stos
out
push
repnz
dec
jo,pn
lea
aad
ja
and
mov
mov
inc
push
xchg
adc
hlt
stos
imul
ljmp
push
fwait
push
inc
mov
rcrl
lret
pop
jne
cmpsl
mov
cmc
ss
mov
pop
mov
inc
pop
mov
aaa
mov
shll
jmp
inc
mov
mov
mov
dec
xorb
jae
stos
clc
ljmp
mov
jp
jne
inc
fimull
xchg
call
cwtl
insb
mov
jno
jae
pop
pop
sarl
movsl
mov
test
cmp
push
test
mov
pop
fimuls
jne
mov
push
push
lret
pop
mov
arpl
adc
cmpsl
sub
sub
inc
lds
bound
subb
outsb
and
bound
jne
jb
imul
mov
stos
dec
xchg
push
or
mov
into
mov
push
xchg
cmc
cmp
adc
dec
fldcw
jb
xor
lahf
sbb
lds
sarl
sub
repz
push
mov
das
xor
aad
fldt
jae
rolb
ja
cmp
int
insl
xchg
movsl
adc
out
rclb
pop
out
sub
xor
stos
bound
sbb
call
inc
daa
sub
int
push
out
test
fucom
push
push
test
xor
arpl
adc
pop
adc
test
dec
scas
lea
sub
fistps
push
mov
test
push
inc
je
int
jne
push
sbb
popa
dec
and
lahf
aas
cmp
jp
inc
pushf
shll
stc
shll
mov
mov
stos
sbb
sbb
and
or
out
jge
sub
ficoml
sub
shlb
xchg
jbe
mov
repz
hlt
adc
fwait
aam
test
jp
xchg
outsb
jl
imul
inc
push
hlt
fnsave
cmp
lcall
lahf
dec
pop
ror
mov
aas
iret
inc
jl
aaa
lods
lds
fcmovnbe
bound
js
cld
negb
sub
sahf
mov
and
mov
push
jg
dec
frstor
xchg
rclb
loopne
xor
mov
ds
mov
mov
push
stos
arpl
ss
test
lcall
popl
jmp
xor
leave
pop
mov
mov
mov
lret
out
shll
push
and
rcl
test
xor
in
frstor
jb
repz
inc
sbb
or
lcall
ret
das
test
out
inc
or
in
arpl
lret
cmp
mov
xchg
jno
adc
sbb
testl
mov
pop
sub
ljmp
adc
in
adc
mov
xchg
sbb
sub
pop
stos
in
push
lds
jno
adc
xchg
xchg
aad
push
inc
inc
mov
mov
in
dec
jae
je
jae
xlat
test
and
andb
rcl
outsb
cmp
popa
mov
sbb
lret
pushf
push
inc
inc
and
es
push
add
cmp
push
dec
push
in
cmc
daa
cmpsb
pop
int
jp
sub
mov
add
outsb
mov
dec
sub
mov
sub
lods
imul
cmp
xchg
out
in
in
outsb
imul
cmp
pop
xchg
cmpsb
sbb
add
cld
mov
jb
mov
jns
mov
cld
mov
push
add
in
cmp
gs
and
lret
mov
lret
loope
xchg
call
sbb
movsl
and
dec
and
xchg
je
repnz
out
inc
ja
popf
inc
imul
lahf
into
imul
mov
push
sub
test
sub
sbb
mov
inc
pop
mov
loopne
lret
cmp
insl
dec
pop
in
data16
sbb
sub
xchg
sub
ret
jae
pushf
xchg
pop
push
ss
leave
ss
pop
mov
adc
inc
push
insl
add
adc
stc
out
imul
xor
hlt
pop
out
outsl
lahf
cltd
sbb
ja
decl
cmp
pop
push
ss
out
js
jp
aas
ss
mov
xchg
cmp
xchg
xchg
je
inc
push
jne
inc
pushf
in
dec
adc
push
cltd
pop
xchg
test
jmp
out
adc
sbb
out
int3
ret
inc
and
sbb
push
fwait
dec
xor
mov
xchg
popf
push
sahf
xchg
jl
mull
xor
pop
ds
dec
push
les
stos
sbb
push
and
test
shll
pop
pushf
cltd
pop
dec
inc
push
jo
jb
sbb
sbb
mov
fdivl
jp
cmp
push
jg
fwait
cwtl
pop
xchg
jp
sub
cltd
xor
icebp
call
sub
movsl
jecxz
inc
test
or
add
xchg
and
jmp
jp
hlt
adc
sub
ret
push
pushf
and
cmp
sub
sbb
int
cmpsl
and
or
xchg
pop
fcoms
fcomps
adc
cmp
bound
xchg
jne
sub
bound
ret
adc
in
mov
push
test
fsubrp
mov
loope
inc
or
les
jle
aaa
rcl
test
stos
call
or
mov
ss
js
dec
xchg
aam
jmp
sbb
loop
or
stos
xchg
fcomp
dec
dec
mov
ljmp
in
stc
adc
inc
xchg
dec
lcall
pop
test
cmp
adc
xchg
adc
cmp
push
ds
sti
push
xor
mov
xor
add
mov
movsl
dec
push
sub
pop
or
xchg
aas
xchg
inc
sbb
adc
adc
push
cmpsb
xchg
jnp
addr16
pop
add
jnp
icebp
cmpsl
iret
imul
inc
jae
arpl
push
cmc
addr16
sahf
xchg
jno
jb
lds
mov
push
jne
mov
dec
lret
outsb
mov
insb
cmp
ss
mov
mov
insb
sub
push
jnp
popa
push
cmc
xchg
shll
or
addr16
xchg
stos
icebp
daa
jae,pt
loop
testl
test
sub
in
or
push
sbb
cmp
xchg
repz
popa
aam
jne
xor
out
dec
adc
dec
xchg
shrl
sbb
gs
mov
sub
je
xor
jo
jp
and
jl
mov
test
push
popf
lods
push
pop
mov
sar
out
outsb
jae,pn
stc
dec
jnp
cmp
fcoml
pushf
addr16
mov
lret
mov
roll
cmp
lock
mov
ja
xor
ljmp
jae
jmp
test
mov
lea
xchg
push
xchg
fcomps
sub
leave
inc
lods
aaa
aam
jne
dec
sbb
xor
mov
xchg
xor
jmp
xchg
stos
pop
push
rcl
rorb
out
fsubr
jmp
mov
lret
sbbb
mov
xor
fcoms
lret
ss
mov
lea
outsb
stc
movsb
lock
in
popa
push
jmp
push
fidivrl
loope
dec
push
mov
loop
add
add
sbb
dec
out
sbb
inc
popa
pop
addb
shll
aaa
sub
pop
inc
cmpsl
xor
and
cmp
mov
xor
pusha
pushf
adc
sub
jo
mov
push
pop
cmp
jecxz
pushf
outsb
push
pop
mov
dec
sbb
sub
insl
mov
and
mov
fldt
fs
sub
aam
gs
xchg
and
imul
fidivrl
scas
ss
insb
jae
push
jl
insb
sbb
cmp
push
jno
or
mov
sbb
xor
mov
pushf
xchg
imul
or
xchg
sub
mov
cmp
push
ss
lahf
scas
imul
xor
lret
add
mul
outsb
jge
mov
clc
and
or
xor
repnz
ret
and
jge
ds
int3
rep
insl
sbb
lret
inc
shll
fsts
stos
mov
mul
sbb
mov
and
ror
mov
jmp
dec
movsl
movsb
inc
push
lock
push
inc
insb
aaa
ret
sbb
je
push
pop
cmp
out
push
pusha
jo
xor
xchg
cltd
jecxz
fcmovne
pushf
outsb
adc
es
aas
dec
fnstsw
push
in
mov
jl
test
mov
andl
movsl
lods
jg
movsb
pop
pop
call
and
sub
sbb
movsb
mov
movsl
dec
sahf
lcall
dec
push
pop
mov
cmp
imul
mov
rcrb
push
jp
pushf
gs
xchg
pop
es
dec
mov
in
adc
fsubrs
cmp
sbb
insl
jae
sbb
pop
dec
jns
cmp
ret
shlb
icebp
arpl
out
test
sbb
push
in
xchg
shrb
lea
and
out
xchg
shrb
fcoml
pop
cmp
js
push
dec
pop
mov
fistl
in
pop
outsb
scas
fsubl
in
sub
loope
repz
pop
xchg
lods
push
push
loop
aam
cmp
scas
add
aaa
xor
bound
jns
xchg
fistps
cmp
test
adc
adc
mov
les
mov
out
push
jns
notl
hlt
xchg
pop
call
lea
mov
mov
or
dec
xchg
jb
and
add
push
ljmp
inc
stc
mov
jns
jns
xor
add
xor
xchg
and
pop
inc
dec
lcall
mov
cmpsb
push
notb
jnp
xlat
enter
mov
jb
mov
sub
sub
adc
lods
lds
mov
fiaddl
mov
out
fiaddl
cmp
fnstcw
loopne
inc
lods
imul
test
sub
pop
int
inc
sub
lods
mov
mov
mov
sbb
mulb
std
pop
in
pushf
jb
js
std
lods
jb
mov
cmp
lcall
jg
mov
das
rol
das
sti
icebp
lret
scas
mov
clc
das
fcomps
int3
jl
mov
jle
cmp
cmp
divb
in
xchg
divb
in
jecxz
std
js
jmp
jg
sbb
inc
sbb
out
cs
lods
mov
xor
lret
cli
fsub
stc
mov
repnz
jmp
jg
mov
das
xchg
mov
das
enter
mov
jecxz
std
cwtl
in
mov
or
mov
in
jle
pop
jbe
xor
insb
jb
insb
jb
sbb
in
add
mov
xchg
cld
xor
mov
mov
sbb
lods
cld
jle
sbb
sbb
inc
cmp
jo
hlt
jns
jb
insb
jb
pop
test
add
insb
mov
cmc
cld
xchg
jg
fstpl
insb
ljmp
in
shl
lret
ret
jbe
fidivrs
nop
out
cs
gs
test
clc
outsl
sbb
mov
jne
mov
cld
pop
pop
repnz
sti
or
mov
sbbl
push
jns
leave
cs
pop
repnz
loop
cld
jg
cmp
xchg
fwait
pop
inc
out
pop
xor
or
mov
mov
mov
mov
mov
decb
xlat
and
mov
jo
jbe
imul
mov
fadds
and
mov
in
pop
sub
mov
ret
push
scas
xlat
jne
rcl
mov
mov
xchg
sti
dec
mov
mov
into
mov
mov
pushl
push
pop
mov
xchg
gs
jg
jge
xchg
sub
sti
inc
hlt
xchg
pop
jle
stc
out
fisttpll
sti
push
fists
mov
sub
addr16
outsl
xor
xor
leave
rclb
pop
jle
push
out
mov
daa
in
lret
sbb
mov
aas
je
cmc
fwait
cmp
push
outsl
shlb
sti
mov
lcall
aam
pop
sti
lock
fwait
cwtl
mov
hlt
xor
imul
xorb
outsl
int
loope
cltd
pop
mov
jecxz
hlt
repz
pop
loop
push
pop
scas
stos
sub
pop
aad
shrl
sahf
psubusw
jnp
hlt
shrl
add
aam
pop
je
enter
sbb
ret
repz
pop
stc
cmp
frstor
inc
repnz
push
call
mov
or
push
lret
addr16
push
pop
sarl
das
jmp
jp
xor
fldenv
je
pusha
mov
cld
sub
cmpsl
lea
push
adc
ret
lock
inc
je
sub
and
inc
push
inc
cld
inc
cld
and
shll
mov
scas
push
enter
sysenter
sbb
jb
leave
add
out
lock
in
clc
sub
push
jo
outsb
xor
les
rorb
test
mov
aas
sub
sub
cmovs
loopne
push
mov
mov
cmp
gs
xlat
jo
dec
mov
std
inc
js
lods
psubusw
lock
and
jnp
cld
mov
in
sbb
scas
addps
test
cwtl
cmp
fldl
shlb
add
push
lock
push
push
jo
inc
icebp
sbbl
pusha
lock
aas
les
test
cmpsb
mov
lahf
sarb
sti
loopne
shl
in
sbb
scas
addps
test
cwtl
cmp
or
or
cld
shl
push
dec
cmp
jge
jle
add
call
sti
fistps
push
cld
inc
filds
into
ds
push
jnp
testl
fadds
scas
addps
test
cltd
push
sarl
test
hlt
mov
fstps
xchg
jle
push
inc
frstor
mov
adc
jne
mov
xchg
div
mov
test
in
xchg
inc
orl
in
adc
iret
cld
add
jo
xor
das
dec
mov
push
test
jns
arpl
cmpsb
data16
pop
imul
mov
push
adc
addr16
shl
cltd
mov
fimull
std
bound
inc
test
cwtl
mov
sahf
ret
in
mov
fdivs
mov
std
bound
outsl
add
fildll
addr16
push
cmp
push
mov
int
das
cwtl
iret
add
outsl
fsubp
sub
imul
sarb
mull
xchg
js
das
pop
lods
insb
xor
mov
sti
push
inc
mov
loop
sbb
and
shlb
js
mov
std
mov
ss
mov
and
fsubs
test
insl
test
xchg
clc
aaa
mov
pop
clc
stos
lods
lock
sti
mov
out
pop
ds
jg
or
std
xchg
dec
push
xchg
push
adc
add
rorb
sbb
xchg
and
ds
or
xchg
das
jnp
jns
call
sti
inc
lea
mov
scas
mov
sbbl
cmp
add
mov
stc
sub
push
int3
add
int3
pop
sub
pop
jne
mov
les
loopne
fisubrs
mov
adc
sub
lret
push
cmp
push
das
aas
inc
pop
nop
in
xchg
xchg
daa
rcrl
sbb
jl
scas
out
push
pop
cmp
das
mov
int
sti
inc
mov
xlat
mov
iret
cwtl
pop
push
lods
push
xlat
fwait
ljmp
sub
out
and
icebp
push
ds
sar
add
push
add
out
pop
ss
push
out
lock
dec
inc
insl
std
mov
call
mov
xor
sarl
js
sub
jecxz
insl
inc
jl
mov
pop
fwait
push
inc
mov
xor
popf
mov
jns
mov
addr16
pop
es
data16
push
sti
pushf
test
adc
fdivrs
ret
fwait
sub
leave
imul
ja
gs
pushf
mov
xor
repnz
jae
xchg
sbb
stos
cli
stc
cltd
mov
aaa
xor
pop
mov
test
in
inc
mov
movsl
fnstenv
and
in
aas
pop
jp
bound
in
outsb
into
jecxz
popf
push
mov
idivb
shll
cli
out
out
or
pop
cltd
push
icebp
mov
xchg
aaa
dec
in
scas
mov
call
sub
and
stc
insl
jb
data16
loop
and
inc
lds
enter
adc
and
mov
popf
out
scas
in
das
pop
adc
outsb
scas
sti
jmp
inc
xchg
jg
adc
aad
push
dec
inc
addr16
ret
push
clc
xor
mov
add
fbstp
les
clc
xor
outsb
sbb
sub
lods
enter
repnz
jl
mov
shl
or
daa
imul
cld
shll
xchg
or
mov
add
or
xchg
mov
pop
inc
scas
push
imul
loopne
pop
xchg
test
mov
les
fists
insb
fimull
js
test
aaa
dec
xor
cmpsb
bound
mov
jg
sub
pop
adc
arpl
add
into
mov
adc
mov
push
xchg
in
adc
dec
leave
pusha
push
shl
jbe
jl
push
gs
and
out
mov
mov
jnp
push
inc
mov
aaa
push
in
aam
jne
cltd
fstps
das
sub
xor
aaa
sub
data16
aas
jp
mov
jecxz
pop
push
push
xlat
lea
into
inc
sbb
mov
jp
lock
mov
idivb
imul
sbb
push
daa
fadd
outsb
in
fwait
xchg
mov
std
std
std
idiv
push
loope
ds
push
orl
test
push
test
mov
test
sbb
mov
imul
pushf
nop
or
add
lea
or
mov
aaa
xor
inc
icebp
xlat
jle
pop
xchg
add
inc
fs
inc
push
mov
aad
xor
icebp
lret
stc
and
rorl
xor
das
leave
xchg
lahf
cltd
clc
dec
repnz
cli
jns
mov
fistps
clc
int
pop
or
das
in
stos
fnstcw
cmpsb
js
jle
divl
sbb
sahf
dec
mov
iret
sub
xchg
mov
fistpl
sub
pop
adc
add
cmp
cmp
scas
mov
rcll
out
aas
sarb
jbe
mov
mov
fs
mov
lods
jmp
out
scas
mov
mov
cmpsl
out
test
mov
in
adc
cli
fld
fsubrs
fwait
ss
into
js
push
mov
adc
sub
repz
repz
push
add
andl
in
adc
ljmp
mov
jnp
adc
insb
and
fs
push
sbb
jecxz
in
cmp
outsl
inc
xchg
in
pop
sub
cltd
and
sbb
repnz
lock
cmc
scas
aas
adc
and
inc
pop
and
das
jle
ret
push
or
ss
ret
jae
repz
mov
dec
push
outsl
scas
ss
push
mov
push
mov
cld
mov
test
cmp
mulb
mov
pop
arpl
lods
int3
int
shlb
xor
aaa
rorb
sbb
sub
sbb
xchg
out
fnstsw
or
jne
xchg
push
dec
mov
pop
or
insb
pop
lods
das
sbb
mov
push
jae
sbb
mov
outsb
fidivs
fmul
push
es
add
inc
push
cs
and
sti
add
jg
aas
jl
sbb
mov
jb
popf
imul
into
lret
lret
jle
fisttpl
int3
into
imulb
mov
lock
jecxz
in
leave
jle
in
cmp
aaa
cmp
rolb
aad
stc
jnp
cmp
in
in
repz
xlat
in
enter
sarb
test
or
fists
and
stc
out
sahf
outsl
mov
ret
lods
mov
fwait
arpl
lret
push
pop
mov
xchg
incb
mov
test
cmp
mov
and
xor
and
stc
mov
aas
push
addr16
lcall
fistpll
fwait
scas
mov
mov
pop
lods
rcr
add
mov
scas
cmp
xchg
push
jmp
inc
sbb
push
and
mov
sti
enter
cltd
mov
jmp
cmp
test
imul
in
daa
rcl
or
fcmovu
push
movsb
xor
test
out
cltd
add
mov
fwait
notb
jbe
and
pushf
xor
mov
mov
jecxz
cmp
pop
inc
push
test
adc
mov
bnd
cld
cmp
cmp
ja
mov
or
mov
jns
sub
jge
out
test
loope
mov
jne
mov
cmp
xlat
cmp
fidivl
xlat
and
or
ret
int3
cmp
inc
adc
cmp
sub
push
js
inc
ja
fld
push
loope
xor
fstl
shlb
fsubr
inc
mov
pop
jmp
xor
pop
sub
addr16
push
jmp
mov
xchg
scas
dec
out
iret
sbb
mov
add
xor
das
mov
std
xor
mov
lock
jns
ljmp
inc
pop
int
cld
adc
mov
push
out
jns
xchg
jge
xchg
lret
lret
or
out
push
sub
dec
cmc
insb
pop
mov
lock
jp
hlt
mov
cli
jb
inc
jns
jae
inc
sbb
outsl
loope
loope
in
shll
in
or
outsb
push
mov
insl
sub
pushl
xchg
scas
pop
call
xchg
shrl
or
dec
cmp
mov
stos
sub
pop
cmp
add
icebp
dec
jae
sub
sub
loop
pop
ficoms
rep
xchg
fdiv
das
scas
cmp
xor
icebp
push
fcomip
fnstenv
xor
pop
jb
out
aam
pop
inc
mov
mov
sbb
mov
mov
xor
jbe
inc
popa
jbe
mov
xchg
in
stos
pop
hlt
jae
scas
shl
in
inc
clc
pop
in
fnsave
repz
loop
call
jmp
lea
or
and
mov
and
add
inc
push
insl
aad
gs
sar
mov
out
movsl
pop
xor
pop
fs
iret
inc
xchg
mov
pop
cli
lods
sub
dec
mov
mov
jg
pop
sti
cltd
dec
mov
xchg
xor
ret
aam
push
pop
adc
mov
std
rol
es
xorl
sahf
xchg
outsl
dec
pmulhw
dec
adc
jnp
pop
jle
jae
adc
dec
inc
xor
jne
cmp
lods
mov
or
shll
test
cs
clc
mov
xor
jo
push
or
fcomps
jbe
cld
mov
ja
mov
xchg
mov
int
es
aaa
mov
lods
dec
mov
ds
popf
mov
mov
mov
mov
jno
icebp
popf
pop
jno
and
out
popf
fs
mov
rcll
cmpsl
cld
mov
aas
push
test
popa
add
hlt
dec
shrl
add
xor
dec
or
std
imul
bound
or
lods
aam
cmp
inc
arpl
gs
fistl
loop
lds
jle
fwait
nop
lahf
cmp
mov
and
pop
in
pop
adc
inc
push
sub
repz
xchg
ficompl
mov
pushf
inc
xor
cltd
add
fnsave
ret
inc
andl
xor
gs
ss
dec
std
rcr
mov
addr16
or
pop
in
insl
fimuls
iret
fistl
sub
hlt
push
stos
repz
cmpsl
aas
cltd
ret
push
mov
test
xchg
lret
mov
push
fidivrl
xor
lea
pop
and
sub
pusha
dec
xlat
jmp
bound
mov
jb
ret
icebp
pop
xorb
mov
repnz
aas
xor
lret
js
push
vpmovsxbw
jnp
in
orps
and
je
inc
or
mov
dec
outsl
xlat
scas
add
xor
iret
lcall
cmp
sarb
in
hlt
xlat
sub
jl
jecxz
rcr
lahf
dec
mov
inc
jecxz
punpckhwd
push
jecxz
xor
and
xchg
cmpsl
push
cmp
push
jb
mov
setge
popa
dec
push
out
sbb
jno
stc
pop
lahf
cmp
es
xor
outsl
inc
adcl
imul
inc
cmp
sub
in
mov
test
jae
loopne
push
in
cmp
cltd
and
cltd
jecxz
sbb
pop
movsb
push
lret
int3
loopne
pop
xchg
clc
pop
addl
inc
mov
ret
jne
addr16
xchg
dec
push
call
rcrb
mov
dec
mov
sarb
int3
hlt
jne
ds
pop
push
jns
shlb
pop
insl
mov
lcall
push
imul
in
stc
mov
adc
aam
xchg
push
pop
ret
sahf
xchg
xor
mov
bswap
pop
ljmp
and
fldcw
jmp
mov
enter
hlt
repz
xchg
sahf
push
cs
mov
mov
adc
shl
outsl
push
mov
mov
dec
mov
push
insl
xchg
mov
fdivrp
rorl
repnz
fisubs
push
xlat
lods
mov
adc
mov
mov
adc
das
jp
loop
scas
dec
inc
es
insl
popf
lods
gs
and
push
jo
pop
push
pop
hlt
xor
shrl
idivl
ja
in
ljmp
int
dec
inc
mov
sahf
iret
pop
arpl
inc
je
shl
mov
cwtl
xchg
arpl
cmp
roll
shl
jnp
decb
jae
cmpl
push
rcl
in
jns
adc
pop
add
or
popf
mov
cli
ljmp
inc
xor
pop
jbe
ljmp
adc
sbb
andl
jmp
mov
shll
loope
add
inc
mov
pop
fldcw
and
std
subl
addr16
sti
adc
mov
sbb
xor
rcrl
loopne
pop
xchg
xor
std
add
xchg
push
mov
pop
xchg
nop
std
push
ror
xchg
xchg
adc
mov
dec
nop
jnp
mov
mov
and
enter
cmp
in
add
mov
lods
jl
testl
out
xchg
sub
repz
mov
cwtl
xchg
jae
xchg
loope
lea
jb
cmp
in
mov
std
cmp
scas
fbstp
aaa
std
xor
jns
inc
daa
lret
imul
outsb
jns
arpl
pop
and
dec
je
cmp
or
mov
lods
mov
cli
and
fbld
pop
std
subb
ja
mov
es
das
lcall
fwait
push
xor
fwait
xchg
out
and
jp
sub
mov
mov
sarl
outsl
mov
and
fildl
sub
inc
adc
jmp
ret
fnstenv
cmpsb
imul
dec
mov
hlt
mov
sub
ret
mov
icebp
pop
testl
add
sub
push
rcll
loop
ss
ss
push
cmp
mov
mov
sub
mov
jbe
jo
popf
mov
ret
enter
aam
cs
loope
aas
lcall
push
addb
mov
fcompl
dec
xchg
adc
pushf
sub
inc
or
in
insl
mov
popf
fimuls
ss
jmp
jl
cli
pop
scas
fidivrs
call
dec
and
add
add
or
push
inc
push
adc
inc
daa
inc
adc
mov
jb
addr16
cmc
mov
sbb
out
aad
out
add
sub
test
adc
leave
and
lret
add
out
jle
popa
xor
aas
test
cmp
pop
push
sub
sub
mov
mov
aas
movsl
cmpsl
push
test
cmpsl
push
sub
das
das
daa
push
xchg
imul
jnp
lea
das
std
fwait
push
jo
stc
lea
insl
pop
iret
out
mov
loopne
int3
stos
mov
out
cmp
push
jb
xchg
scas
and
or
lret
fstpt
inc
stc
pop
mov
push
inc
test
pop
aad
jae
mov
push
in
dec
mov
dec
add
cmp
fisubrs
pop
mov
nop
jno
push
frndint
jge
std
cli
into
notl
jnp
divps
cld
mov
mov
dec
frstor
ficoml
fidivs
sbb
dec
cmp
sbb
add
sbb
mov
mov
loopne
or
sti
push
and
cmp
sub
loop
sub
lods
inc
bound
inc
sub
popf
js
mov
pop
jg
sbb
mov
and
lods
jge
scas
dec
fwait
and
cmp
mov
mov
sub
sti
push
xchg
xchg
xchg
stos
cmpsl
push
fsub
ds
jbe
mov
mov
dec
idivl
scas
sbb
inc
jnp
sub
and
mov
or
imul
out
out
mov
pop
push
sbb
xor
xor
mov
dec
cmc
xchg
out
out
dec
fucom
mov
stos
data16
xor
addr16
jmp
mov
pushf
adc
push
xchg
xchg
mov
in
push
mov
jne
popf
arpl
inc
mov
icebp
cmp
xchg
cmpsb
gs
popa
and
cmp
cmp
pusha
dec
mov
pop
ret
mov
cwtl
inc
scas
pop
outsl
es
enter
cmpsb
mov
sub
jg
clc
imul
leave
lock
in
and
decl
scas
repnz
lret
mov
leave
outsb
shrl
jnp
jg
jns
sahf
mov
mov
xor
jp
fwait
ja
inc
xor
ljmp
lock
sub
sbb
push
pop
and
aas
cmp
fnstsw
std
push
scas
pop
call
push
lcall
fldt
push
add
mov
test
notl
les
cmp
pop
lcall
jle
jns
push
sbb
idivl
out
mov
or
jae
cli
cmp
fucomi
jns
popf
cmpl
bswap
fisttpll
fdivs
mov
out
fisubs
ja
dec
dec
jb
ret
mov
cmpsb
sbb
jno
jnp
lahf
in
sahf
jns
rol
mov
dec
adc
sti
pusha
jo
je
inc
add
or
adc
ss
sub
popl
pop
out
push
xchg
jnp
adc
pushf
inc
cs
dec
push
or
lahf
jns
std
push
jg
iretw
outsl
cltd
inc
xchg
negl
xlat
cmpsl
neg
hlt
insb
aad
movsb
xor
arpl
js
or
mov
loopne
fdivr
fildl
out
jmp
jb
push
mov
and
mov
incb
fists
ja
shrd
sub
and
repz
dec
stc
pop
scas
mov
fstps
mov
jb
ret
int
jno
cmc
cmp
dec
inc
in
sahf
push
mov
dec
das
fiadds
cmp
scas
mov
cli
stos
insb
lret
ficomps
in
mov
ret
sti
punpcklwd
std
nop
addr16
dec
repz
or
div
add
jnp
sbb
fdivs
aas
ret
fldpi
shr
scas
fsubr
and
aaa
push
cmc
pop
data16
int3
xchg
adc
imull
std
push
outsl
inc
cmp
jne
xor
pop
mov
push
xlat
xor
mov
or
test
mov
jns
std
push
jmp
pop
add
and
jns
ja
jns
pop
mov
icebp
sti
cld
cltd
ficoms
jg
push
cmpsb
sub
outsb
xchg
call
mov
divb
stos
cld
xor
outsl
fbld
fcompl
add
push
cld
mov
fsubrl
inc
lahf
mov
cs
mov
inc
mov
loop
sub
fs
push
cmp
mov
sub
leave
js
int
sbb
popa
adc
mov
mov
fcomip
std
mov
outsl
scas
std
lea
std
pop
jae
data16
test
adc
dec
pushf
adc
mov
mov
xor
sbb
stos
mov
sbb
std
pop
inc
shrl
cmp
fidivrs
jnp
cmc
cmp
enter
enter
cli
addr16
imul
scas
pop
loop
sahf
cmp
jp
stc
into
pop
sti
stos
stc
lock
out
mov
push
insl
jnp
std
jns
outsb
xchg
inc
clc
and
jl
shl
add
punpcklbw
dec
cmp
test
inc
bnd
test
icebp
add
lock
bswap
mov
test
out
xchg
cmp
xchg
in
xchg
call
rorl
and
ret
js
mov
ljmp
call
sarb
xchg
fmuls
jae
dec
cmp
loope
add
icebp
add
invd
ds
push
out
pop
je
push
clc
ret
loope
js
shl
fmuls
shlb
jmp
ret
push
or
mov
sbb
js
scas
hlt
fs
call
mov
adc
ret
fisttpll
insb
cmp
sbb
push
js
pop
adc
popa
rorl
cmp
filds
push
pop
dec
jge
fisttpll
loopne
popa
icebp
pop
ret
jbe
fisttpl
fs
ret
rorl
pop
cwtl
sbb
loopne
nop
js
mov
stos
cld
in
pop
dec
jge
fisttpll
loopne
popa
icebp
pop
ret
jnp
out
pop
mov
mov
push
mov
mov
or
mov
int
arpl
mov
enter
inc
fimuls
enter
pop
lods
sbb
mov
sub
ret
js
loope
loopne
fildll
je
xor
jnp
insb
cmp
push
mov
push
enter
push
js
push
jno
lret
push
or
mov
lock
sub
inc
call
in
mov
and
inc
fisttps
je
shl
xlat
andps
sarl
sbb
rorl
and
rorl
aaa
loope
pop
xlat
push
mov
movsb
jo,pt
inc
jecxz
sarb
xchg
jmp
pop
aaa
add
lods
sbb
loop
xchg
sbb
rorb
adc
loope
or
cmc
jg
sarl
jge
hlt
pop
je
xor
jnp
out
xchg
ljmp
and
jo
dec
cmp
filds
xor
repz
enter
pop
rcrb
jnp
in
xchg
jo
inc
rorl
jns
ret
icebp
inc
jle
loopne
pop
fwait
ret
cli
add
icebp
pop
ret
jbe
fisttpl
fs
mov
sub
ret
js
mov
loop
jo
mov
mov
add
xchg
ljmp
and
pop
cmp
add
sbbb
js
mov
pop
pop
dec
jge
fisttpll
loopne
popa
fimull
jl
and
pop
mov
mov
xorl
enter
push
push
popa
rorl
aaa
loope
pop
xlat
cli
gs
pop
xchg
ds
lret
jbe
fisttps
je
mov
inc
xlat
andps
push
enter
push
js
xchg
cmp
nop/reserved
loope
or
cmc
js
or
stc
and
fdivs
loopne
js
shl
fmuls
pop
cmp
cwtl
xor
cmp
ret
xchg
icebp
cmpl
jge
loopne
xor
pop
into
sbb
pop
add
push
lods
sbb
sbbl
cmp
movsb
push
xor
loope
test
push
test
push
loopne
xor
jnp
out
pop
mov
mov
inc
rorl
jns
ret
js
loop
cld
aaa
sarl
shrb
lock
inc
call
in
fdivs
loopne
js
and
xchg
nop
call
adc
mov
pop
add
icebp
add
or
cmc
ja
adc
out
pop
enter
pop
rcrb
jbe
fisttpl
fs
sbb
cmp
jmp
mov
pop
jo
dec
cmp
filds
std
loop
push
lock
fmull
nop
cmp
jo
mov
enter
xchg
add
lods
sbb
inc
rorb
cmp
filds
xlat
std
shll
stc
inc
call
in
fdivs
loopne
js
and
xchg
cwtl
ss
rorl
js
xchg
nop
js
mov
jo
ret
mov
xacquire
test
add
xchg
xchg
out
cwtl
jno
xchg
icebp
add
clc
outsl
sub
pop
pop
ds
cli
add
seto
popa
lock
fmuls
pop
cmp
cwtl
xor
sbb
pop
or
add
pop
mov
sbb
stos
sti
rorl
lock
repz
lret
jbe
fisttps
enter
xchg
rorl
jns
ret
js
mov
fisubrl
cwtl
jle
out
pop
into
pop
xor
xchg
add
inc
fmull
push
mov
orl
cmovl
loop
xchg
sbb
icebp
add
or
and
pushl
jge
hlt
pop
je
push
in
xchg
add
xorl
xchg
add
jmp
lret
push
adc
lds
or
pop
out
xchg
cmp
pop
enter
add
pop
mov
ljmp
inc
iret
or
sbb
loopne
nop
js
loope
test
push
testb
lock
repz
lret
jl
lock
in
xchg
jo
inc
mov
push
cmp
add
xchg
das
pop
aad
jae
ret
jmp
fmull
nop
ds
inc
fisttps
je
shl
push
mov
or
jmp
dec
cmp
pop
mov
lock
xlat
std
arpl
ret
xacquire
jo
xchg
push
clc
ret
mov
clc
jnp
push
mov
orl
popa
lods
sbb
rorl
and
ret
js
loope
test
push
leave
jns
jmp
repnz
les
add
in
xchg
xor
cmp
jno
int3
push
sbb
sbbb
outsl
ret
jl
sub
test
cmp
pop
insb
cmp
xchg
testb
push
shlb
jl
xor
or
cmp
movsb
push
sub
jl
sub
mov
pushf
ds
stc
inc
jecxz
sarb
out
xchg
ljmp
popa
lods
sbb
rorl
sub
and
pop
xlat
std
xor
xchg
mov
and
add
ljmp
sbbl
cmp
push
and
mov
test
push
cmp
mov
pop
mov
in
pop
scas
push
test
xorl
rorl
jo
sbbb
loop
cld
aaa
sarl
hlt
mov
ds
in
xchg
add
xorl
pop
pop
aaa
add
jmp
out
or
and
pop
pop
hlt
dec
int3
ds
cli
add
mov
add
push
lods
sbb
jp
test
inc
loope
add
add
lock
shlb
sbb
ds
in
xchg
lock
cmc
xorl
push
push
mov
pop
add
filds
stos
ret
jmp
fmull
mov
popa
fimull
cmpb
in
xchg
or
jp
iret
or
cmp
push
add
mov
stos
stc
in
pop
dec
jge
repz
loop
xor
mov
ljmp
andl
clc
cmpsl
mov
mov
pop
pusha
out
loop
xchg
loopne
in
shll
mov
cltd
push
sahf
lods
movzwl
es
sbb
popa
xchg
lahf
ret
cmp
jl
iret
imul
mov
out
pop
repz
xchg
push
jg
lock
lret
lock
xchg
mov
xor
clc
pop
and
mov
push
mov
sbb
push
jge
cmpsb
mov
sbb
comiss
and
ljmp
bound
sub
or
aas
mov
or
incl
mov
inc
mov
mov
mov
cmp
shrb
xor
dec
or
pop
das
pop
dec
filds
jge
xor
mov
adc
shl
and
icebp
hlt
push
push
iret
in
mov
ss
xchg
cmpsb
movsl
push
arpl
ret
xor
push
or
int
aam
insl
push
xlat
int
fldl
leave
cmpsl
gs
cmp
dec
call
xchg
sbb
lcall
mov
in
xlat
pop
int3
insl
push
insl
iret
outsl
pop
js
xchg
cmc
xchg
adc
and
sub
add
cli
imul
xchg
xor
jg
in
xchg
mov
cmpsl
call
sbb
in
pop
jg
test
xor
popa
mov
and
adc
or
mov
sbb
inc
mov
subl
jecxz
xlat
popf
jno
loopne
cmc
mov
jl
jns
aad
jg
xchg
mov
lcall
mov
push
xlat
xor
and
sub
jmp
cwtl
or
xchg
enter
xor
pop
ds
jmp
jp
iret
push
and
je
mov
jmp
mov
push
lret
xchg
stos
pop
inc
xor
fdivrl
test
dec
fcom
cli
cs
mov
pop
push
lods
sub
inc
and
lcall
xchg
ret
lods
sbb
fistpl
pushf
mov
outsb
mov
aas
dec
xchg
jnp
das
dec
pop
sbb
insl
pushf
inc
in
scas
cmp
mov
or
xchg
jmp
mov
cmpsb
pop
push
mov
mov
dec
or
jbe
shlw
fs
aaa
sbb
loopne
xchg
adc
les
imul
pop
cmpsl
cmp
dec
sbb
mov
cmp
sbb
sbb
pop
je
and
mov
lock
mov
inc
outsb
mov
stos
cwtl
call
pushf
adc
add
dec
pop
cmp
ss
ds
je
pop
xchg
pop
mov
pop
dec
jecxz
mov
popf
pop
int3
sbb
scas
gs
imul
mov
enter
inc
and
out
and
cmp
loope
lds
inc
inc
aas
sbb
and
ss
bound
push
fwait
xchg
iret
out
imul
adc
stos
add
and
adc
adc
es
sbb
mov
jge
cmp
lods
bound
or
addb
sub
int
push
push
cmp
faddl
or
int3
mov
mov
mov
aam
push
xchg
adc
fdivl
jl
sahf
aas
and
mov
cmp
cs
test
js
xor
jbe
fimull
aad
cmp
dec
in
push
and
fwait
cmpsb
lret
mov
mov
push
cmp
sub
std
xor
insb
loop
in
sbb
movsb
sub
sbb
inc
pop
push
mov
cmp
jp
push
ljmp
mov
xchg
dec
mov
pop
xor
mov
fs
je
movl
int3
inc
outsb
add
lods
cwtl
sub
dec
cltd
mov
icebp
xlat
push
out
sar
in
mov
sbb
inc
pushl
sub
inc
jmp
rorb
cmp
sub
enter
loope
popf
test
fbld
in
out
xchg
jo
push
mov
cmp
jge
push
push
jmp
xor
mov
xor
jge
add
imul
mulb
jge
stc
push
les
sbb
mov
inc
dec
gs
ja
add
xchg
push
xor
push
cmp
stos
or
loopne
pop
lret
mov
dec
shlb
lret
sub
ret
mov
pop
push
sarl
pop
xchg
jle
mov
mov
push
cmp
push
add
ljmp
pop
mov
mov
fisttps
fiaddl
push
aaa
pop
xchg
mov
ja
xchg
xlat
sub
ror
mov
jmp
mov
roll
pop
test
inc
in
out
push
mov
jne
rcrb
fimuls
xor
and
inc
ss
test
das
out
pop
repnz
mov
je
data16
adc
inc
imul
mov
dec
sbb
pushf
jg
sti
imul
mov
push
lods
cmpsl
out
cmp
push
test
or
mov
add
int
call
inc
inc
aad
arpl
push
fwait
sbb
into
mov
repz
mov
aas
into
popf
stos
xchg
lahf
popf
cmp
popa
ljmp
mull
lods
inc
popa
push
imul
adcl
fcmovnu
iret
xchg
fnstsw
and
movsb
addr16
pop
jne
sub
jo
lret
enter
pop
jl
out
add
cmp
jns
ret
add
inc
enter
ficompl
loope
jge
adc
adc
out
cmp
pop
add
fistpll
push
mov
push
cmp
mov
lock
popf
fsts
jmp
test
xchg
jmp
dec
cltd
jmp
pop
dec
loop
gs
nop
inc
mov
and
inc
pushf
push
and
adc
jns
sbb
xor
fwait
xchg
dec
cs
xchg
pop
jnp
stos
and
repz
cmp
fildl
dec
jb
xchg
or
movsb
push
jb
xchg
fmuls
jmp
loopne
sbb
sbb
sub
cld
iret
xor
pop
je
xchg
loopne
xlat
mov
mov
outsl
loopne
sub
les
mov
sbb
push
push
xchg
stc
cli
nop
cs
or
repz
ja
insb
jb
and
sbb
lret
in
push
lods
mov
iret
xchg
mov
sbb
jg
fistl
repz
inc
ja
or
in
mov
sbb
stc
cld
jnp
dec
mov
hlt
fdivrs
cltd
jno
shr
into
mov
mov
test
cmpsb
stc
rclb
and
addb
addr16
cmp
int
test
out
movsb
xchg
setl
fldl
pop
and
repz
ret
pushf
lret
scas
mov
cltd
cmc
mov
jge
clc
xchg
scas
sahf
lret
mov
ret
xorb
inc
cltd
pop
popf
cmp
dec
xchg
mov
rclb
dec
or
popf
sbb
and
outsl
add
imul
inc
rorl
in
inc
leave
arpl
cmp
and
xor
fisubrl
mov
dec
imul
test
lods
stos
jmp
mov
mov
mov
iret
addr16
js
enter
icebp
in
push
mov
cmp
mov
push
inc
sarl
jmp
add
cwtl
adc
jno
sub
xchg
fisttpl
pusha
mov
ret
dec
inc
or
xchg
jne
aas
cmp
adc
push
fsubl
sub
punpckhwd
cmp
bound
and
jne
ss
xchg
fwait
dec
xor
xor
test
out
fnstsw
out
out
addr16
sarl
cmp
and
sub
or
xchg
jl
mov
sti
add
push
and
dec
inc
jmp
cli
movsb
bound
mov
stc
xlat
cmp
imul
xlat
xlat
xorb
mov
sarl
int3
lahf
pop
jl
xchg
into
loop
pop
push
push
jecxz
inc
sahf
pop
je
pop
das
jb
inc
jb
pop
testb
jno
sbb
mov
sti
and
das
sub
jno
jnp
inc
test
mov
mov
xchg
push
mov
int3
mov
dec
mov
fsub
pop
int
lcall
jae
jbe
into
sub
add
mov
in
call
stc
sarb
insl
sub
mov
add
pushf
lret
pop
pop
pop
fmuls
cmp
pop
shlb
pop
xchg
fcmovb
inc
shll
add
ds
faddp
bound
xchg
push
pop
iret
iretw
scas
pushf
mov
xchg
ljmp
mov
sub
adc
pop
sarl
lea
int
orl
dec
or
sub
cmp
aaa
gs
arpl
mov
notb
test
xor
jno
inc
test
imul
pop
push
shlw
jbe
inc
lods
or
pusha
mov
pop
movsb
call
push
xor
inc
leave
sbb
int
lret
cmp
rorb
sbb
xlat
jge
pop
int
xchg
xchg
sbb
jp
xor
loope
in
popa
cmp
into
and
dec
pop
xor
icebp
mov
int
and
cmp
cmpsl
dec
les
into
imul
cltd
mov
fsubrl
dec
xchg
insl
cmp
fisubrs
xchg
dec
jns
scas
cmp
xchg
xchg
leave
cmc
dec
xchg
in
xchg
int3
popf
int3
movsb
jae
xchg
out
je
jae
mov
cmpsl
das
fsts
test
pushf
mov
jg
mov
stos
cmp
cmp
stc
xorb
push
stos
popa
and
xor
test
and
mulb
imul
mov
cmp
inc
cmp
xlat
cwtl
jne
xor
mov
push
movsb
pop
popa
andb
jmp
mov
adc
pop
sub
imul
jl
inc
ja
stos
int3
addb
mov
pop
jae
stos
ficomps
cmpsb
inc
out
xchg
xor
and
mov
sub
mov
scas
pop
xchg
mov
mov
in
dec
and
push
jne
push
adc
stos
xchg
jno
mov
pop
negb
cwtl
int
in
mov
push
dec
jns
je
clc
dec
add
loop
xor
mov
shll
sbb
mov
nop
dec
je
jo
shr
leave
jne
adc
pusha
add
dec
dec
subb
shlb
popf
cmpsb
sbb
and
scas
iret
jl
notb
mov
sbb
jg
mov
out
push
sti
jne
js
mulb
xor
xchg
into
cmp
insb
xor
sbb
and
and
pop
mov
sub
mov
dec
outsl
fistpll
and
in
and
sahf
insl
xlat
bound
xor
jl
imul
lcall
lahf
lcall
call
xor
pop
int
xchg
rcll
mov
cmp
push
mov
in
leave
stos
imul
fcoms
cld
dec
int3
cmp
and
and
xor
dec
jb
jne
inc
stos
mov
jge
inc
push
int
xchg
stos
pop
jne
xchg
imul
mov
int3
cmp
inc
stos
mov
int
out
sub
mov
sbb
dec
ja
lock
hlt
fmul
jle
outsb
xchg
lcall
xchg
aaa
sub
movsb
leave
sub
push
insb
ljmp
outsb
mov
xor
mov
std
xchg
loopne
mov
insl
push
int
dec
ljmp
mov
insb
mov
lcall
xor
aad
or
jne
xchg
push
lcall
push
out
test
adc
lods
bound
cmp
dec
out
int
jae
mov
mov
cmpsb
in
jo
or
lcall
enter
gs
cmpsb
or
push
add
xchg
test
outsb
cs
pushf
inc
pop
inc
mov
xchg
scas
xchg
es
and
sbb
lods
jns
mov
int
xchg
lods
lods
imul
sbb
jecxz
pop
je
pop
cwtl
pop
xchg
xchg
lds
pushf
push
imul
lret
stc
imul
insl
daa
mov
mov
and
pop
cmpl
scas
rorl
sub
and
shll
out
repnz
mov
adcb
into
or
pop
sub
rcrl
and
mov
inc
sub
pop
dec
das
push
jge
iret
ja
cltd
outsb
push
cmp
mov
mov
sub
ja
repnz
fdivs
sub
je
scas
xchg
test
mov
outsl
test
mov
dec
in
repnz
jne
xchg
aas
push
or
sbb
les
and
ljmp
xchg
jbe
jne
xchg
mov
sbb
lods
mov
mov
fcoms
mov
dec
sbb
in
xor
scas
inc
jbe
aad
cmp
iret
ljmp
dec
shr
in
scas
in
dec
shrl
or
fisttpll
test
lret
inc
leave
pop
in
imul
repnz
inc
pop
arpl
add
popf
filds
test
pop
mov
rsm
mov
dec
popf
aam
xor
mov
xchg
mov
mov
mov
xor
sub
jbe
push
mov
repnz
mov
cmp
mov
mov
push
test
push
popf
lcall
sbb
outsb
dec
mov
fsubr
mov
xchg
xchg
imul
je
xchg
in
sahf
leave
xchg
aad
dec
xor
xor
cltd
sbb
decb
pop
and
in
in
jb
outsb
dec
test
cwtl
scas
mov
cmp
popa
icebp
push
ret
leave
cmp
insb
mov
fs
push
xchg
mov
xor
divl
sti
nop
cld
leave
jge
adc
cmpsb
dec
filds
repz
sahf
stos
mov
shr
sahf
pushf
out
fstps
xchg
lahf
push
push
pop
cmpsb
cmp
push
cmpsb
and
inc
movsl
mov
mov
xor
jmp
xchg
mov
test
shll
rclb
movsb
bound
popa
scas
inc
add
xchg
xchg
mov
add
sub
xor
jae
and
cmp
movsb
cltd
out
cwtl
lahf
dec
pop
and
mov
aad
fstpt
xchg
or
shll
movsl
jmp
insb
lea
fistpl
in
jge
xlat
cmpb
icebp
into
lds
jno
xor
push
sarl
popf
jmp
mov
mov
adc
cmp
mov
lcall
mov
cltd
aad
ja
fistpll
mov
out
in
push
xchg
lret
out
pusha
mov
inc
in
sub
in
mov
cmp
arpl
mov
fs
or
pop
neg
mov
testb
adc
lea
and
inc
cltd
js
enter
ja
cmp
fs
sbb
in
aam
sbb
sbb
cmp
leave
pushf
lea
in
cs
fstpt
mov
adcl
setp
dec
fisttps
in
and
faddl
xchg
pop
cmpsb
mov
dec
rcrl
push
and
bound
mov
out
fs
je
clc
pusha
rcrb
push
sbb
lea
mov
and
jne
orl
mov
and
mov
test
arpl
pop
popf
pop
adc
fsubl
dec
pop
popa
cmp
inc
mov
cli
hlt
mov
dec
jle
out
out
pop
add
shll
add
mov
dec
test
mov
rorb
mov
gs
inc
inc
xchg
scas
mov
mov
push
xor
movsb
ja
lahf
cmp
sti
and
out
cmp
sbb
mov
or
or
adc
xchg
and
adc
cmp
jno
arpl
movsl
in
jo
mov
pusha
xchg
cmpsl
or
insb
mov
fimull
inc
dec
dec
test
jb
out
mov
ss
into
xor
jle
addr16
pushf
sub
and
lret
jne
sbb
insl
sub
call
fiadds
test
cmp
dec
xchg
jecxz
bound
dec
sbb
pop
repnz
in
hlt
mov
ljmp
jae
ret
aad
sub
sbb
jmp
sbb
testb
cmp
xor
sbb
test
aaa
push
insl
push
or
shrl
xor
push
mov
js
mov
mov
and
in
into
xchg
sbb
pusha
lea
aaa
lds
out
js
into
and
mov
dec
mov
in
movsl
lods
mov
shll
jmp
push
xor
mov
mov
fisubrl
pusha
mov
xchg
mov
outsb
ss
push
shll
lea
add
scas
sub
jo
stos
ja
clc
lock
xor
pop
cmp
sbb
bound
sbb
lea
pop
in
fstpt
fs
push
popf
cmp
scas
cwtl
dec
jle
sbb
xor
nop
xor
sbb
sub
mov
mov
add
hlt
cmp
inc
inc
cmc
jmp
or
adc
imul
mov
sbb
pop
pop
jb
adc
divl
jle
jo
mov
cld
push
es
jb
js
rcll
ret
mov
daa
push
sub
xchg
sbb
add
inc
mov
lods
es
jmp
xor
out
gs
das
jecxz
into
inc
icebp
mov
scas
push
sbb
hlt
jmp
cmp
pop
in
mov
in
xlat
scas
out
aaa
dec
jbe
in
xchg
pop
imul
jbe
inc
out
pushw
mov
push
xchg
rcrl
inc
xchg
aad
and
jne
cmp
insb
push
sub
in
imul
jnp
jmp
pop
cmp
fs
scas
aad
sbb
xchg
fisubs
cmpsl
pop
arpl
cmpsb
sub
clc
jmp
push
xchg
sbb
popl
lock
imul
mov
or
jnp
pop
push
cmp
sbb
fstpl
and
xchg
xor
bnd
jno
gs
pop
cmp
rcll
stc
roll
rclb
dec
arpl
test
inc
lods
mov
pushf
int
mov
dec
xlat
xchg
cmp
mov
mov
fisubs
push
sbb
rorl
mov
push
push
aaa
xchg
pop
mov
xchg
xchg
clc
jmp
bound
cmp
inc
jle
xchg
add
xchg
push
xor
std
dec
mov
or
popa
ss
cmp
shrb
push
xchg
sti
test
fldcw
mov
xchg
aad
sbb
out
lret
out
mov
fdivrs
sti
mov
int
jg
sti
pop
imul
movsl
sahf
icebp
sbb
pop
and
sbb
das
push
cmp
jno
jg
push
and
popf
idivl
jp
mov
or
rolb
mov
xchg
decl
cmp
sub
cld
fistps
cmpsl
mov
fsts
mov
cmp
cmpsl
out
je
cmpsl
xorb
nop
inc
lea
fwait
into
and
out
aam
bnd
or
ss
es
fsub
mov
xor
fisttpl
or
test
push
test
mov
cli
dec
or
loope
mov
sbb
mov
call
out
repz
mov
lret
clc
test
addr16
aas
stc
ja
sub
dec
dec
test
cmp
movsl
and
adc
xchg
cmpsb
fucom
sti
cmp
mov
ljmp
stos
imull
push
iret
in
cli
idivl
sbb
mov
fstpt
jns
cld
out
imul
xor
stc
aas
hlt
sarb
hlt
xchg
xchg
cmp
cwtl
xchg
hlt
dec
int3
fcomip
rcrb
pop
cmp
add
jbe
pop
in
pop
xor
cli
xor
divb
fs
add
jg
es
daa
iret
pop
out
in
fists
mov
xor
xchg
jbe
std
cmp
outsl
aas
das
fwait
into
cmpsb
js
push
inc
xor
mov
and
mov
nop
add
cmp
hlt
jns
push
mov
sbb
and
pop
imul
pop
out
shrb
insl
mov
adc
aas
mov
popa
and
das
fidivrl
lock
clc
mov
push
pop
repz
sub
pop
shll
mov
mov
inc
inc
push
hlt
jge
pop
or
ja
std
hlt
inc
iret
repz
ljmp
aas
aad
clc
lahf
ds
cld
mov
dec
std
js
cli
mov
jae
cvtdq2ps
dec
pushf
outsl
sar
xor
out
lock
repz
ds
pop
dec
xchg
jae
and
ja
push
pop
in
movsl
bnd
fdivr
js
scas
lahf
xchg
cli
std
push
mov
jo
ds
in
arpl
jg
bnd
ds
mov
int
or
scas
or
jg
outsl
clc
decb
iret
stc
sti
lahf
mov
hlt
lcall
test
and
je
adc
ds
movsb
notl
dec
icebp
iret
loop
lods
cli
mov
cld
and
jns
pop
scas
sbb
or
mov
inc
xchg
pop
and
push
mov
mov
add
add
xchg
cwtl
and
inc
dec
xchg
or
test
mov
push
push
push
xor
cmp
push
push
daa
cmp
mov
popl
lods
adc
lods
fsubrl
out
lock
mov
jmp
lret
mov
sbb
jbe
stos
mov
rol
and
stos
sub
pop
adc
adc
aam
imul
mov
insb
mov
mov
jo
dec
clc
test
push
pop
femms
xor
xor
cmpsb
inc
push
out
sbb
mov
sti
cmp
stc
and
mov
fwait
test
inc
pop
lods
test
add
rcl
jmp
call
aas
cmpl
hlt
dec
lret
sub
jmp
xor
or
dec
dec
stc
xlat
xor
mov
bound
dec
out
pop
loopne
cmp
movsl
push
icebp
push
push
mov
test
push
in
cmc
lock
loopne
popf
out
mov
outsb
js
mov
iret
dec
ja
mov
mov
test
mov
dec
ror
lret
pop
int3
nop
popf
push
and
adc
sub
mov
ror
dec
ret
inc
iret
and
cmp
in
or
shl
pop
repnz
sahf
lock
xor
mov
in
xor
mov
mov
repnz
ja
inc
stos
jne
lcall
push
jecxz
sbb
cmpl
popa
xor
pusha
and
add
int3
fldl
pusha
lret
cmp
mov
jne
rcl
js
pop
ss
jns
push
test
push
roll
aad
mov
pop
cmp
mov
insl
stos
and
enter
xchg
pop
inc
popa
out
adcl
push
jl
pop
dec
sub
sub
adc
xchg
imul
mov
cmp
inc
aas
xor
mov
lret
jae
mov
shrb
loop
sbb
fstpl
movsl
mov
mov
gs
andl
cltd
adc
jnp
cltd
movsl
dec
pop
mov
ds
xor
jns
fnstenv
push
scas
or
xor
jno
push
icebp
lds
add
mov
or
xchg
sbb
push
adc
test
ret
cmpsl
leave
nop
adc
outsl
loop
test
pop
adc
stos
jo
mov
out
mov
or
nop
mov
loop
jns
and
lea
shl
push
pushf
jge
or
dec
in
sub
dec
shlb
cs
daa
pop
cmp
and
and
aad
mov
test
and
cmpsl
pop
dec
push
mov
fisubl
fs
sub
stos
and
cmpsl
jl
jae
push
repnz
in
pop
in
imul
mov
cltd
dec
fcmovnb
pop
ja
cmp
push
jge
or
dec
cmp
xor
es
out
iret
imul
daa
pop
jmp
ds
pop
mov
mov
push
imull
stc
addr16
bound
inc
out
xchg
pop
xchg
cmpsb
pop
rcll
or
fdivr
sub
stos
pop
sub
js
out
dec
or
xorl
xor
dec
sub
bound
lock
dec
daa
sbb
or
dec
fisubl
jmp
mov
xor
sub
jb
mov
ret
sbb
test
sarb
mov
pushf
shlb
stos
or
cmp
xchg
sti
sbb
xchg
addr16
clc
iret
sbb
imul
stc
ret
lods
add
pusha
imul
in
dec
push
out
cmpl
addr16
stos
cmpsl
push
sbb
xchg
mov
pop
push
dec
nop
mov
mov
jge
idivb
mov
in
rcrb
cmp
or
mov
data16
mov
mov
scas
iret
call
out
jg
and
sti
adc
adc
mov
loope
movsb
out
push
mov
pop
or
and
xor
and
xor
and
xor
and
xor
and
xor
and
xor
and
xor
and
xor
xor
addr16
and
repnz
or
and
js
cmp
jge
pop
into
add
mov
push
cld
pop
les
jb
mov
mov
add
rcr
jmp
lock
xor
rcrb
pop
movsl
add
inc
call
lock
inc
ss
js
pop
lock
sbb
push
add
repnz
adc
mov
add
inc
icebp
and
addr16
mov
negb
shll
imul
lea
movsb
jns
idivb
mov
out
xchg
movsl
jge
mov
es
xchg
or
and
mov
sarb
or
outsb
and
rclb
pop
xor
cltd
pop
dec
jl
gs
xchg
cmp
dec
loop
cs
lret
xchg
lahf
int3
xchg
mov
jns
int
jns
outsb
push
stc
repnz
add
lahf
mov
lock
push
pop
cmc
and
cmc
test
mov
push
cld
or
div
in
pop
push
pop
jg
scas
popa
jl
xor
lods
imul
inc
jo
cmp
mov
or
test
sbb
out
mov
xchg
and
jle
adcl
jp
ljmp
ljmp
xchg
cmp
dec
std
mov
or
push
cltd
imul
and
or
sbb
xchg
stc
xchg
sbb
xchg
cmp
xor
movsl
ret
inc
xor
iret
jmp
fwait
inc
fildl
outsl
not
jns
add
addr16
sub
cmpsb
and
subb
or
ja
inc
mov
pop
movsb
popf
pop
fwait
cmp
mov
insl
dec
cwtl
pop
loop
mov
out
cmp
leave
mov
call
aas
pop
pop
mov
and
mov
push
addr16
mov
or
pop
popw
fsubs
and
call
ljmp
jl
incl
jecxz
aam
faddp
imul
sbb
add
jne
adc
mov
cmc
lock
je
sbb
mov
cmp
dec
sbb
xchg
pop
mov
push
jb
out
push
hlt
jo
push
insb
out
rcll
cld
fisttps
mov
dec
fldt
sbb
hlt
adc
mov
jnp
rcll
or
dec
outsl
in
shrl
loope
imul
push
pop
sahf
mov
fs
cmc
adc
mov
idivl
sbb
xchg
cmp
mov
cmp
push
sarb
push
call
aad
inc
test
out
inc
jne
cmp
out
cmp
pop
push
add
mov
popf
or
adc
aaa
popf
mov
xchg
sub
jb
iret
jae
stos
sbb
jge
test
mov
stos
mov
lret
dec
xchg
xchg
in
rolb
jb
cli
fnstsw
loop
ljmp
mov
stos
pop
outsl
out
mov
jo
int
std
jno
mov
jno,pn
shll
sub
lea
jne
pushf
call
sahf
xor
aas
xor
jns
cld
inc
push
push
xlat
sub
stos
in
xchg
xchg
test
push
lcall
mov
cmp
sahf
xor
push
add
jp
mov
inc
jo
aam
mov
subb
outsl
mov
push
jnp
xchg
xor
cmp
xchg
scas
fidivrs
and
mov
lahf
in
nop
dec
imul
mov
aas
aaa
mov
gs
pop
scas
fwait
inc
pop
mov
ficoml
dec
out
mov
dec
sarl
cltd
rcll
shll
sbb
jnp
fidivrl
popa
std
outsb
dec
mov
or
mov
clc
mov
jecxz
rcl
push
ficomps
js
jo
das
pop
scas
shll
xchg
in
jl
out
mov
jmp
push
jb
jle
cli
ret
das
imul
mov
mov
pop
add
test
or
ds
call
sbb
jmp
popf
mov
stc
push
lahf
lcall
call
fnsave
fsubp
aaa
jae
stc
dec
roll
cld
movsl
movsb
dec
lahf
sub
jb
arpl
dec
push
scas
dec
cwtl
lret
mov
movsb
push
dec
dec
das
lcall
and
push
or
and
movsb
push
dec
lods
push
mov
inc
xor
lods
push
dec
sub
lahf
push
iret
cmp
cmp
mov
nop
rolb
add
inc
xchg
or
scas
sbb
jbe
.byte
