daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
stos
or
adc
loope
imul
cmp
xchg
dec
divb
mov
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
stos
or
adc
loope
imul
cmp
xchg
dec
divb
mov
jle
add
mov
js,pn
aas
dec
jg
push
cmp
addl
int
cmc
xlat
adc
or
dec
push
cmp
adc
sahf
pop
push
pop
shrb
cli
mov
int3
cmp
stc
test
pop
cltd
fs
push
aam
scas
xchg
sub
fstl
cltd
mov
mov
jb
cld
jae
sbb
lret
repz
sbbl
in
jg
mov
fcomp
int3
inc
pop
push
push
loop
hlt
push
fsubrs
dec
aad
and
lret
fcompl
push
push
sarl
sti
movsl
cmovb
cwtl
je
leave
dec
jb
or
mov
inc
cs
mov
jle
adc
icebp
adc
push
test
push
lock
fnstcw
mov
sbb
pop
xchg
add
sub
mov
imul
adcb
inc
push
pop
mov
out
ss
int3
jo
or
ret
aad
add
movsb
in
jle
lock
repz
stos
movsl
int3
jbe
cld
ret
scas
cmc
xor
sub
jae
repz
jmp
add
add
and
cli
adc
push
push
mov
lds
push
jnp
and
mov
xor
hlt
xchg
bswap
xchg
or
in
subb
imul
mov
mov
xchg
push
push
iret
das
incl
pop
or
cmpsl
inc
test
hlt
loop
add
lret
adc
jmp
cltd
sub
movsb
sub
mov
hlt
sar
iret
cld
ret
dec
pusha
arpl
jecxz
push
out
mov
or
inc
stc
push
jge
cmp
mov
not
out
xchg
xor
adc
xchg
loope
dec
sub
push
pop
sub
jg
xchg
jl
imul
fdivr
mov
mov
test
or
mov
das
mov
pop
or
or
in
inc
push
fstl
cmpsl
cmp
push
addr16
ficoms
clc
aas
jg
inc
push
das
adc
jl
xchg
push
sub
ds
add
call
in
mov
addr16
mov
xchg
jnp
int
xchg
mov
call
or
into
xchg
jle
lcall
xchg
push
insl
and
push
pop
stos
push
jle
sbb
fsub
xor
cli
outsb
outsb
jne
and
push
cmp
sub
dec
lods
lret
jno
xor
jge
out
out
pop
out
push
negl
lock
push
fdivl
rclb
mov
fidivl
mov
push
adcb
leave
popl
jnp
inc
mov
iret
lds
call
cmpsl
cs
in
ljmp
mov
xchg
jg
adc
mov
inc
sub
sub
push
push
pop
jae
aam
push
pop
outsl
lds
mov
imul
scas
mov
enter
adc
pop
cli
cmpsb
add
arpl
movsl
loop
int
scas
or
repz
xchg
or
addl
push
jle
sub
dec
ret
mov
in
mov
or
iret
pop
pop
addr16
add
pusha
or
test
pop
insl
data16
inc
daa
dec
rorl
fmulp
or
dec
adc
pusha
sahf
mov
mov
push
dec
cs
adc
outsl
arpl
jnp
divl
fidivs
pop
mov
subb
scas
inc
xchg
lock
cmc
pop
xchg
fnstsw
xchg
push
insb
or
es
sahf
hlt
pop
pushf
and
sahf
das
int
sub
cmp
or
pusha
pusha
and
xchg
fcoml
inc
cwtl
and
cmpsl
fists
cmp
rcr
inc
xchg
je
push
mov
rorb
js
sarl
rclb
fisubrl
adc
xor
push
mov
cmp
int3
mov
js
pop
js
mov
add
and
add
ljmp
cmp
mov
adc
pop
inc
push
loop
movsb
adc
movsb
push
ret
in
mov
ja
mov
je
icebp
cmpl
jb
mov
in
pop
and
mov
gs
xchg
or
sbb
add
adc
pop
dec
lret
xchg
dec
pop
mov
sub
xor
jle
iret
mov
pop
dec
xchg
push
lahf
int
jae
push
jae
add
gs
jb
pop
push
mov
sub
fscale
popa
adc
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
stos
or
adc
loope
imul
cmp
xchg
dec
divb
mov
jle
add
mov
js,pn
aas
dec
jg
push
cmp
addl
int
cmc
xlat
adc
or
dec
push
cmp
adc
sahf
pop
push
pop
shrb
cli
mov
int3
cmp
stc
test
pop
cltd
fs
push
aam
scas
xchg
sub
sub
cld
push
repz
mov
sar
push
cli
sub
sbb
lret
rcrb
sub
ficomps
call
popa
loop
push
mov
stc
mov
jae
das
jae
adc
divl
cld
push
or
addr16
sbb
imul
jmp
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
pusha
push
jnp
js
push
dec
pop
pop
cmp
or
js
push
add
jge
jg
rol
cld
or
shr
test
xor
push
pop
je
jg
ror
ror
push
xor
pop
jp
jb
sar
sub
stc
nop
stc
lea
push
call
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
addr16
addr16
test
clc
and
jmp
jmp
call
push
movzbl
jno
and
jge
jg
xor
mov
or
loop
pop
test
xor
je
rol
sub
push
push
pop
pop
pop
clc
sub
push
shr
pop
push
call
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
add
push
pop
pop
lea
push
jge
test
pop
clc
and
push
add
mov
pop
push
or
pop
nop
sub
mov
stc
clc
sar
push
pop
and
cmp
jne
jmp
jmp
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
stos
or
adc
loope
imul
pop
sub
push
or
pop
push
mov
xor
pop
loop
jecxz
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
inc
jmp
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
nop
xor
stc
cld
clc
sub
push
movzbl
jbe
push
test
pop
lea
loop
pop
loop
jecxz
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
stos
inc
jge
jg
rol
dec
jne
add
push
movzbl
je
rol
ror
je
push
jns
and
pop
jbe
push
rol
pop
push
push
push
or
pop
pop
pop
or
clc
nop
loop
pop
jmp
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
stos
or
adc
loope
imul
cmp
xchg
dec
divb
mov
jle
add
mov
js,pn
mov
push
push
push
or
pop
pop
pop
jmp
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
stos
or
adc
loope
imul
cmp
xchg
dec
divb
mov
jle
add
mov
js,pn
aas
dec
jg
push
cmp
addl
int
pop
idiv
incl
add
push
push
push
add
pop
pop
add
jmp
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
fdivl
sbb
test
jg
fisubrl
push
jl
divb
add
and
cmp
dec
xor
clc
je
sub
je
cmp
pop
and
nop
jbe
sbb
jbe
or
mov
sub
xor
or
lock
idivb
sbb
add
ss
mov
inc
dec
cmc
mov
stc
lds
mov
fstps
and
test
lock
in
int3
cmp
sub
xor
push
inc
leave
daa
pusha
movsb
lret
test
pop
js
shlb
test
daa
nop
gs
pop
sub
pop
test
mov
sub
mov
mov
add
aaa
dec
add
pop
sub
movsb
pop
sub
stos
aaa
sub
daa
and
mov
cmp
sub
pop
sub
pop
sub
andl
mov
cmp
mov
cmp
mov
or
mov
adc
mov
test
movb
pushl
loopne
mov
pop
cli
loope
cmp
cmp
lret
pop
sub
test
int3
aaa
test
loop
loopne
lret
xor
pop
mov
lock
daa
shl
ret
icebp
lret
aaa
int
test
xor
mov
subb
clc
je
aaa
test
sub
pop
test
sub
aaa
test
addr16
pop
mov
leave
or
daa
nop
leave
or
sub
or
aaa
push
xchg
pop
js
push
pop
js
or
daa
nop
inc
sub
pop
test
cs
sub
das
daa
mov
daa
das
pop
mov
loope
daa
push
shrl
loope
pop
sub
aaa
sub
iret
pop
cmp
shlb
gs
daa
adc
pop
sub
pop
sub
iret
aaa
sub
shlb
and
scas
pop
cmp
scas
pop
cmp
scas
aaa
jmp
or
pop
sub
aaa
sub
pop
clc
mov
pop
clc
je
aaa
call
testb
insl
mov
mov
call
push
mov
cmp
pop
js
test
enter
shl
scas
pop
test
scas
pop
test
test
test
lods
daa
mov
mov
pop
mov
je
daa
nop
jbe
pop
test
roll
test
int
test
lret
xor
pop
mov
hlt
shll
hlt
int
nop
ljmp
push
mov
daa
pusha
movsb
rclb
js
sub
js
sub
push
and
and
test
sub
sub
sub
mov
les
push
mov
les
es
in
push
sub
add
sub
or
cmp
cmp
sub
adc
sub
sub
sub
sub
sub
and
and
and
cmp
and
cmp
sub
or
sub
adc
sub
call
stos
shlb
call
stos
enter
les
clc
jne
aaa
call
jne
pop
sub
pop
test
aam
sub
shll
mov
mov
pop
mov
cmc
movsb
daa
shl
mov
pop
test
movsl
aaa
test
test
pop
mov
jne
aaa
test
xchg
daa
nop
jne
pop
test
test
test
xorl
mov
mov
pop
mov
cmc
xchg
daa
nop
cmc
xchg
pop
push
mov
daa
pusha
dec
mov
pop
js
movsl
aaa
push
add
pop
test
aaa
sub
xlat
daa
mov
cmpsl
les
mov
in
daa
push
test
pop
sub
enter
xlat
aaa
sub
pop
cmp
xlat
pop
cmp
aaa
sub
daa
adc
daa
pop
sub
sbb
and
pop
pop
cmp
pop
aaa
or
pop
daa
adc
jbe
pop
or
in
mov
addr16
xchg
push
pop
sahf
push
sub
not
movhps
jle
lods
pop
inc
jo
fs
clc
imul
sbb
jge
sbb
bound
pop
icebp
jae
push
lock
and
cmpl
clc
or
cmp
nop
movb
cltd
movsl
out
out
cmp
cld
in
popa
jge
insl
adc
mov
sbb
mov
mov
cmp
pop
inc
jno,pn
add
push
xor
add
int
xchg
sti
add
mov
pop
repz
mov
mov
outsl
ja
leave
cmp
xlat
popa
popa
icebp
push
daa
mov
xor
pushf
pop
mov
es
cmp
xor
and
movsl
fwait
sar
dec
pusha
leave
inc
mov
cmp
jl
adc
enter
mov
mov
mov
mov
in
xor
push
or
sub
out
push
bound
cwtl
icebp
shll
in
gs
pop
adc
pop
addl
dec
stos
aam
xor
inc
mov
insb
arpl
repnz
sbb
xor
xchg
pop
inc
pop
rcl
aas
xor
rcrl
aam
xchg
mov
xchg
pusha
repnz
pop
andl
cld
cmp
mov
mov
fidivs
mov
mov
or
cs
stc
cwtl
jo
add
and
fwait
test
pop
test
sti
lcall
orl
jns
lods
xor
cmp
imul
fwait
push
cs
cs
inc
cmp
jo
stos
outsl
sub
pop
add
add
sub
cs
movsl
scas
fwait
push
or
ljmp
mov
xchg
mov
loop
aas
jo
inc
movsl
or
pop
adc
xor
rcl
lods
mov
pop
insb
fimuls
aas
cld
daa
test
cmp
mov
mov
nop
mulb
pop
repnz
jno
movsb
mov
xor
scas
daa
sbb
outsb
mov
dec
lods
dec
repz
fimuls
bound
xchg
and
shl
and
ret
out
adc
add
out
jnp
fbld
or
push
hlt
arpl
hlt
sub
movsb
xor
popa
fists
popf
mov
adc
inc
jg
out
outsb
aam
xlat
sub
cmp
mov
dec
mov
mov
xchg
cmp
dec
shll
add
sbb
mov
movsl
in
push
mov
scas
cltd
jp
jg
int3
hlt
cmc
mov
mov
xchg
cmp
outsb
hlt
fwait
xchg
ljmp
ss
mov
add
leave
xchg
hlt
add
jp
call
pop
pop
jo
hlt
fs
iret
shll
rorb
dec
addb
loop
clc
push
mov
and
adc
mov
inc
dec
push
lea
sbb
rcll
and
loopne
ret
jmp
adc
push
push
mov
int
lds
lcall
and
jns
inc
cs
dec
dec
sahf
repnz
pop
call
lret
pop
sub
dec
cwtl
jmp
in
divb
je
push
and
adc
ficoms
test
pop
out
stc
ss
in
std
out
in
hlt
mov
push
das
cmp
loope
es
and
xchg
mov
adc
mov
mov
into
gs
sub
cmp
rorl
push
fsubp
cwtl
push
das
pop
sub
push
daa
xchg
fs
popa
test
fists
sbb
pop
stc
jae
pop
f2xm1
sub
mov
leave
cmpsl
das
jmp
mov
cs
xor
adc
xchg
out
adc
or
imul
movsl
out
aas
sub
xchg
cmp
add
mov
jbe
cmp
mov
fdivrs
cmp
mov
pusha
xchg
popa
pop
iret
loope
mov
enter
das
dec
js
pop
mov
bound
out
mov
push
jl
adc
cs
adc
cmpsl
addb
or
in
push
out
js
adc
in
mov
jae
and
or
daa
pop
inc
or
mov
jb
sbb
popa
je
cwtl
xchg
xchg
std
lahf
dec
push
mov
mov
cmp
push
xor
mov
jmp
pop
fadds
or
neg
cmpsb
add
mov
hlt
pushf
sahf
cmp
in
mov
mov
pop
shlb
les
nop
shlb
iret
and
pushf
xchg
jle
mov
scas
jne
jp
xlat
and
lods
lock
xor
mov
push
dec
inc
sbb
add
mov
les
xor
iret
add
sub
inc
lock
or
ljmp
and
ret
scas
fiaddl
xor
dec
or
loope
jnp
push
mov
daa
adc
das
push
mov
xlat
xor
addb
push
and
testb
mov
mov
aam
fs
dec
aaa
xchg
mov
xchg
mov
jl
adcl
jo
jge
xor
lods
rcpps
fwait
cltd
aad
in
jmp
ret
pop
pusha
cltd
dec
inc
adcl
and
mov
outsb
iret
push
sti
add
xor
xchg
aaa
xor
cmp
cli
lods
stos
push
xorb
out
into
cld
add
inc
xor
mov
les
mov
lods
dec
imul
adc
lahf
jmp
data16
push
push
cmp
pusha
inc
aaa
add
xorb
cmp
daa
call
dec
jl
pop
arpl
hlt
icebp
sarb
inc
test
das
popf
jp
jno
jbe
add
ds
fistps
mov
repz
fdivl
punpcklbw
sarb
sub
add
add
mov
pop
push
cltd
add
dec
cld
ljmp
pop
pushl
sub
mov
jecxz
push
jbe
ret
pushf
iret
cltd
sti
iret
inc
xchg
pop
popf
les
sub
or
push
test
mov
les
jo
sbb
std
lods
push
lds
aaa
ret
cmp
cmp
gs
int
pop
shlb
aaa
pop
cmpsb
shll
jnp
sub
sub
loopne
scas
mulb
out
cmp
popl
xor
int
sbb
jmp
ret
mov
aaa
test
divl
mov
sbb
loope
idiv
cmp
das
stc
outsl
xor
jl
or
pop
xor
inc
sub
test
jg
les
jp
lcall
mov
lods
js
adc
xchg
fcmovbe
je
push
cs
imul
nop
stc
sub
pop
testb
inc
push
lods
jae
rcrb
mov
xor
out
sbb
icebp
cmp
dec
cmp
mov
test
sub
movsb
mov
pop
notl
adc
loopne
mov
out
enter
repz
xlat
jecxz
or
dec
loopne
mov
andl
cld
mov
fimull
jae
mov
jge
push
and
popf
mov
xchg
leave
jae
out
cmp
ffreep
pop
fsts
mov
sbbl
pusha
sub
pop
fwait
inc
das
lds
popf
data16
cmc
jnp
cs
xor
cmp
int
pop
fildll
ljmp
cld
into
shl
insl
pop
xchg
mov
fstpt
movsl
outsl
dec
lods
cmpsl
xchg
push
pop
cmp
xlat
push
mov
xor
xor
aas
fwait
adc
cld
movsb
lcall
add
pop
sub
ret
add
rolb
xchg
push
add
cmp
sbb
dec
jnp
aad
loop
fwait
lock
jl
add
cmp
sub
adc
mov
pop
sub
sbb
nop
stos
sbb
xlat
xchg
shrl
icebp
daa
cwtl
mov
cmpsl
jmp
repnz
hlt
scas
lds
test
inc
fiadds
inc
je
mov
lods
fcmovu
shll
add
fadds
shrb
mov
subl
sub
lea
imul
lds
movsl
test
sbb
mov
xor
sbb
cmp
fwait
pop
mov
inc
xchg
in
fstps
je
pop
test
mov
mov
mov
test
hlt
or
cmc
pop
or
dec
adc
rclb
imul
xchg
jno
inc
add
fs
push
movsl
call
fdivrp
xor
fcoml
cmp
and
sub
sbb
dec
rolb
pop
and
sub
in
lret
out
into
shll
mov
xchg
push
cmp
push
jle
testl
loop
ljmp
and
mov
stc
or
sub
fisubrl
stc
sbb
sub
xchg
cmc
dec
and
xchg
inc
push
cmp
subl
or
and
inc
cmp
xor
aas
adc
sub
mov
push
inc
mov
push
iret
xchg
dec
dec
push
test
in
xor
mov
cmp
and
adc
test
mov
imull
push
fs
and
push
mov
lcall
movsl
lds
js
sub
xchg
mov
push
out
jo
jge
loopne
test
mov
or
cmp
call
std
lock
icebp
mov
js
data16
xchg
dec
ds
xor
pop
xor
loopne
jle
sarl
rclb
sub
or
xlat
rol
imull
jb
outsl
pop
loopne,pn
lock
inc
push
adc
jge
add
xchg
in
mov
fcomi
repnz
sbb
andb
push
lea
push
in
cli
fstps
sub
pop
loope
dec
mov
xchg
lcall
ja
fdiv
mov
push
mov
outsl
or
bound
push
pusha
cmpsl
out
shlb
dec
test
gs
ss
jmp
stos
enter
sub
cld
shll
cmc
repnz
std
mov
imul
sbb
push
dec
and
in
test
pop
push
loope
das
pop
xchg
lods
push
or
in
mov
lods
dec
xor
adc
and
sub
add
jmp
sbb
push
mov
sahf
aas
mov
fs
push
out
xchg
frstor
xor
mov
cld
xor
xchg
arpl
hlt
sti
ret
popf
roll
jge
pop
xchg
test
sbb
xorl
adc
sub
ret
jns
enter
mov
test
clc
dec
outsb
lock
sub
push
sbbl
nop
pop
sbb
pop
lahf
int
mov
sti
adc
testb
test
aad
popf
cld
push
mov
outsb
mov
in
inc
cmp
dec
jmp
pop
xor
xor
xor
fs
int3
movsb
pusha
clc
sub
iret
xchg
test
icebp
bound
mov
mov
scas
decl
jne
enter
and
inc
shrl
mov
xchg
mov
test
add
mov
pop
xchg
rcll
out
jbe
push
sbb
shr
adc
jne
lea
cs
call
fsubr
hlt
mov
push
lahf
push
mov
jle
jle
push
push
and
pop
jle
nop
mov
movzwl
sub
mov
add
and
pusha
cmpsb
jbe
mov
cmpsb
outsl
sbb
ret
mov
stos
cmp
repz
scas
or
xchg
and
repnz
lcall
hlt
or
dec
pop
jmp
mov
xchg
enter
sbb
int3
fcomps
sti
aaa
pushf
mov
es
mov
jle
insl
clc
xchg
es
inc
mov
enter
inc
push
mov
lahf
out
pop
pushf
and
leave
nop
sbb
inc
in
cmp
and
adc
test
pop
test
lds
ljmp
xor
lds
int
sahf
es
adc
fdivl
cmpsl
add
cltd
not
mov
outsb
adc
add
dec
mov
mov
mov
outsl
sub
cld
xor
jge
out
and
test
mov
popa
fwait
pushf
imull
aas
add
jl
dec
adc
push
imul
pop
pop
aam
sbb
xchg
pusha
test
cmp
ret
ja
fnstenv
dec
inc
xlat
out
call
into
xchg
jb
add
imul
call
cld
pop
hlt
jno
bswap
outsl
nop
pop
imul
bound
ficompl
fldcw
xorl
insb
jno
add
pop
mov
lret
pop
xchg
or
inc
mov
push
inc
fsub
sti
int3
xor
sub
int
pop
ret
fs
not
push
pop
mov
adc
pop
dec
push
testb
pusha
mov
xchg
ja
push
shll
mov
or
and
les
mov
adcb
pusha
rcrb
mov
icebp
pop
sub
add
lahf
cld
lcall
in
stos
sub
lahf
jp
ja
pop
cmp
jl
data16
sbbb
add
int
dec
ret
jne
addr16
adc
fdivrp
or
popa
mov
std
imull
push
repz
and
mov
out
adc
cli
mov
add
js
cwtl
cltd
jge
mov
inc
test
xor
lock
xadd
cmpsb
push
adc
xchg
xchg
popf
xor
adc
xor
sbb
mov
fcom
jbe
sahf
adc
clc
iret
or
lods
imul
mov
push
mov
push
cmpsb
pop
test
insl
pop
lret
sbb
frndint
push
push
adc
cmp
out
outsb
inc
stc
push
jmp
xchg
jecxz
jno
cmp
shlb
gs
pop
daa
push
filds
test
dec
pop
mov
cvtps2pi
cmpsl
pop
xchg
mov
ret
rcrl
stos
jnp
push
pop
in
lods
ja
dec
jge
shll
dec
push
push
and
adc
fmul
into
xchg
out
scas
inc
mov
out
andl
leave
pop
cmpsl
jmp
pop
gs
pop
sub
neg
dec
cmp
xor
inc
sub
scas
xchg
lret
test
mov
addr16
lds
orb
outsl
sti
in
lret
mov
pop
mov
out
cltd
jnp
jecxz
xor
cltd
or
xchg
stc
add
mov
out
push
lcall
add
mov
xor
mov
pop
bound
sbb
jns
ljmp
mov
rclb
xchg
gs
cmp
push
jne
stos
sbb
cltd
xor
outsb
lods
stos
mov
scas
jne
mov
push
mov
pop
sub
sbb
add
mov
add
adc
loopne
jg
in
xor
test
dec
or
mov
mov
inc
out
push
shlb
mov
scas
pop
scas
push
push
or
and
out
outsl
cli
mov
enter
std
pop
stos
sbb
lret
mov
rcll
mov
pop
jl
jl
pop
and
mov
push
out
mov
add
sub
xchg
sub
xor
test
push
xchg
xorb
jg
aad
int
aad
jne
lea
icebp
add
out
adc
pusha
int
fdivl
adc
or
and
sbb
mov
lret
dec
mov
dec
pop
sub
adc
lcall
repnz
es
popf
pushf
inc
jmp
dec
mov
jmp
roll
pop
in
cmpsb
cmp
paddusb
into
cltd
adc
addr16
sarb
das
js
loope
xor
adc
lret
inc
cld
inc
push
mov
dec
pop
lods
cmpsb
stos
aaa
lret
xlat
subb
push
mov
in
mov
in
mov
out
pop
out
adc
repz
mov
xchg
pop
loopne
cmc
jmp
scas
dec
inc
xorb
push
sub
add
imul
cmpsl
lret
imul
or
add
imul
push
test
call
out
int
sbbb
add
ficoms
loope
push
sub
push
out
xchg
insb
push
dec
mov
ss
xchg
pop
xor
ja
inc
rclb
mov
shl
addr16
shl
arpl
popl
xchg
adc
dec
jle
mov
xor
or
xor
enter
scas
pop
lret
mov
scas
in
scas
popa
subl
inc
jo
insb
cmp
push
or
imul
loopne
xor
xchg
test
leave
lcall
aas
and
jmp
pop
imul
outsb
ret
leave
int3
ret
sbb
cmpsl
cmp
and
xchg
imul
add
cwtl
lcall
mov
in
cmp
hlt
frndint
test
xchg
out
fmuls
or
jg
push
push
decb
jno
stc
movsl
insb
adc
mov
add
std
jmp
dec
jb
pop
xor
hlt
stc
leave
mov
adc
enter
push
mov
sub
addr16
fisubl
pop
inc
movsl
cmp
and
mov
dec
jnp
xchg
add
imul
jns
xchg
jns
adc
cmc
popl
sub
movsb
fcompl
shlb
and
and
adc
int3
inc
push
cld
js
decb
push
push
or
xor
or
xchg
xlat
lahf
stos
out
xchg
sbb
jne
jns
cltd
mov
mov
popa
aaa
faddl
call
cmp
mov
stos
pop
jns
sbbb
pop
inc
xor
dec
add
popa
cmp
jbe
and
mov
or
cmc
testl
iret
imul
mov
xchg
clc
adc
insb
xchg
test
mov
inc
sub
sbb
and
jg
stos
add
shrd
ljmp
and
sub
sti
in
pop
out
idivb
das
push
sbb
pop
mov
dec
add
mov
je
adc
mov
pop
or
and
push
ja
adc
cmp
and
mov
dec
out
jge
cli
ss
dec
push
test
out
scas
mov
hlt
jnp
shll
data16
shll
ret
stos
mov
outsb
jns
jno
movsb
enter
cmp
stc
out
loopne
adc
and
sbb
or
cmpsb
dec
add
je
sahf
aad
push
jb
das
jmp
mov
addr16
imul
cmp
enter
jmp
scas
pusha
cmp
or
jnp
jecxz
fimull
mov
mov
in
in
dec
jl
sbb
scas
loop
xchg
mov
fidivl
in
aad
jmp
dec
adcb
mov
repnz
cmp
dec
cmp
testl
adc
xrelease
mov
xchg
fs
add
cmpsb
fistpll
mov
dec
jg
in
sbb
js
fnstsw
jl
call
xchg
subl
xor
rcll
fptan
xor
mov
imul
je
xchg
in
dec
popa
fs
or
mov
cld
jbe
jae
aaa
dec
pop
fdivl
imul
lcall
and
hlt
sub
lret
cmp
inc
sub
les
cmp
pop
cmp
pop
sbb
test
lret
aam
insl
jle
or
int
test
mov
js
sbb
dec
or
repnz
sti
pushf
mov
js
out
hlt
add
dec
mov
cmpsl
dec
fldl
push
cltd
jmp
xchg
lods
fadds
sub
fistl
das
jg
mov
pop
in
jae
cs
fcoms
jge
pop
pop
clc
dec
mov
mov
jnp
dec
subb
int
enter
pop
out
nop
outsb
movsb
dec
rol
add
dec
fdivl
cmp
jo
mov
push
mov
or
stos
inc
pushf
push
in
cmp
ds
pop
insb
popf
dec
jne
cmp
pop
call
stos
jns
adc
mov
int
ret
pusha
cmp
xchg
mov
lret
lods
sbb
add
sub
sahf
pushf
pop
loope
jg
and
or
mov
rcr
jle
push
aaa
pusha
hlt
sahf
pop
inc
aas
test
sbb
sbb
inc
fildl
inc
mov
mov
mov
sbb
mov
loope
sbb
std
ficoms
loop
jb
mov
in
outsl
jbe
scas
aad
addr16
jle
xor
adc
cwtl
into
mov
data16
mov
jecxz
sbb
jne
xor
jmp
inc
shl
fcomp
jp
fcompl
into
mov
lahf
mov
push
add
mov
xchg
or
lods
pop
pop
mov
or
outsb
add
jge
jbe
cmp
or
fxch
mov
push
and
outsl
push
test
add
pop
stc
lds
xor
mov
fistps
cmc
es
pop
add
xor
inc
xor
jns
sub
dec
push
insb
cli
and
and
testl
in
stos
in
push
mov
adc
fisubs
imul
add
int3
and
mov
sub
and
lret
add
cmpsl
cmp
jmp
mov
pop
lds
out
je
and
addb
push
mov
push
xor
clc
es
xchg
es
pop
scas
addr16
dec
cmp
mov
out
pop
mov
mov
or
fistpll
jns
pop
sarb
mov
mov
in
jns
ret
add
adc
inc
jae
cmpsb
addr16
push
ret
sbbl
nop
mov
dec
mov
in
enter
aaa
inc
in
xchg
pop
lock
das
rorl
call
add
pop
add
es
inc
push
into
cli
mov
test
lea
or
stos
cld
insb
imul
mov
scas
pushf
and
inc
push
mov
sbbb
add
outsl
popa
cmc
sahf
dec
pusha
aam
xor
loop
mov
lds
lds
inc
mov
cltd
cmp
jb
mov
adc
loopne
adc
and
inc
jge
lods
sub
fs
mov
sbb
arpl
push
or
cmp
mov
mov
xchg
cmp
fisttpll
lea
xor
std
sarl
sahf
test
out
adc
loope
lods
and
fwait
into
jne
leave
stc
repz
mov
js
cmp
shlb
dec
arpl
jp
or
call
sub
dec
jl
pop
dec
mov
arpl
das
btc
jo
test
loope
inc
loop
rcll
test
cs
loopne
leave
lret
jl
imul
mov
pop
mov
sbb
outsl
mov
pop
pslld
or
sbb
mov
aaa
mov
ja
jbe
cltd
lret
ret
out
les
jne
sub
test
test
lcall
ss
jne
add
lods
dec
inc
xor
adc
and
mov
and
or
enter
popa
cmp
pusha
dec
push
mov
icebp
mov
repnz
mov
jmp
fstp
out
mov
xor
out
adc
adc
jmp
enter
cmp
inc
inc
gs
pop
push
jmp
data16
or
arpl
xchg
pop
imul
mov
and
js
outsb
dec
xlat
andl
dec
in
lock
ret
sub
aam
jne
mov
imul
mov
scas
sub
or
es
jb
loopne
movsb
xchg
mov
int
push
es
inc
mov
ss
pop
imul
jl
mov
movsl
xchg
xor
incl
xor
or
std
negl
shl
bound
xchg
inc
inc
xchg
negb
lock
dec
ficoms
fs
jle
push
pushf
mov
arpl
pushf
mov
popa
xlat
call
adc
jbe
mov
jge
daa
adc
pop
aas
xor
stos
or
rorl
mov
fiaddl
push
sub
stos
inc
lea
les
mov
enter
loop
mov
in
int
cli
sbb
sbb
inc
cmp
push
cli
rorl
lahf
out
xchg
jge
jno
stos
lods
and
lahf
outsb
ret
xlat
sbbb
mov
cmp
or
fstp
xor
xchg
jecxz
cmpsl
jb
aad
or
jl
and
int3
je
aam
jg
jne
xor
xor
sbb
std
mov
push
fxch
inc
shlb
xor
fwait
jno
roll
xchg
gs
pop
test
cwtl
lret
mov
js
ja
dec
popf
ficoms
fists
stc
movsl
fimuls
xor
mov
imul
mov
inc
sub
movsl
xchg
adc
mov
mov
jnp
dec
subl
jne
pop
hlt
mov
cmp
jns
lcall
icebp
xchg
adc
pop
push
mov
fildl
std
add
popf
push
fiaddl
jp
mov
xchg
jo
cld
inc
xor
sti
mov
test
fsts
imul
bound
pusha
jbe
notl
leave
loope
dec
mov
into
jae
or
bnd
dec
icebp
movsb
scas
enter
add
sub
sub
jns
clc
lret
iret
cmp
hlt
int
cmp
inc
lahf
ror
mov
mul
repz
pop
cmp
in
subl
mov
sbb
xor
xor
addr16
sbbb
jp
lcall
bnd
scas
xor
adc
dec
jle
cmpb
stos
mov
sub
mov
test
cmp
sar
inc
repnz
insb
add
sub
addr16
loopne
mov
movsb
xchg
dec
xacquire
orb
jge
je
push
push
dec
push
xchg
xchg
push
mov
and
cld
cmp
call
pop
mov
mov
inc
insb
sbb
cltd
sub
sbb
call
dec
repz
aam
cltd
push
mov
pop
popa
xor
pop
xor
sbb
outsb
out
add
sbb
aaa
adc
ds
cmp
fwait
cmp
aam
mov
xor
bound
stc
lods
xchg
sub
pushw
fcomps
xchg
mov
jbe
daa
push
shrb
cmp
scas
mov
mulb
lods
ss
sti
push
pushf
or
test
fimuls
pushf
sbb
xchg
push
inc
sub
aam
mov
sbb
pop
mov
mov
pop
out
and
xorl
stc
mov
sarb
scas
push
xchg
inc
xor
mov
mov
out
jne
ds
jmp
and
repz
addr16
cmpsb
imulb
dec
sti
and
pop
xchg
scas
ret
and
pop
repnz
pusha
add
mov
mov
and
or
xor
mov
mov
orb
jnp
fwait
xchg
popa
repnz
pop
mov
add
aam
inc
sub
mov
bound
je
test
xchg
fisubrs
add
lret
imul
into
out
pusha
outsl
dec
inc
imul
pop
inc
push
jne
mov
mov
jne
out
sub
cmp
fcompl
mov
mov
dec
sub
loopne
sbb
xlat
mov
imul
xor
popf
mov
xchg
shll
jle
cmpsb
popa
movsl
mov
pop
test
inc
push
pop
pop
push
cmp
xchg
sbb
ret
xchg
mov
inc
ret
scas
movsb
cld
stos
test
icebp
pusha
lcall
mov
stc
cld
cwtl
inc
movb
mov
enter
addr16
dec
sahf
iret
lcall
shrb
sub
push
xchg
aaa
push
shlb
push
sar
into
jecxz
add
gs
es
sbb
dec
push
daa
sub
mov
mov
test
push
cmp
mov
add
fistps
push
shrb
push
scas
xor
push
xchg
add
mov
test
mov
lahf
lock
pop
jbe
cmpsl
insb
sbb
sub
inc
movsl
subl
mov
dec
or
xchg
ror
insl
mov
inc
pop
mov
mov
sysret
ds
into
dec
stc
cs
addr16
pop
mov
jecxz
xor
mov
cmp
outsl
lret
xorb
bound
xor
inc
mov
fstpt
dec
mov
inc
or
mov
xchg
mov
in
and
mov
pop
movsb
movsb
in
cmp
rcrb
dec
aas
cmpsl
push
test
mov
lods
lea
jg
mov
subl
cmpsl
add
shl
pop
loopne
adc
ficoms
pushf
push
mov
mov
dec
sub
cmp
cmpsl
daa
popa
shll
push
shl
cli
lea
sub
out
sbb
and
cmpsl
test
fstpt
mov
lock
jmp
push
ret
adc
mov
lods
sub
sub
cmp
mov
shr
hlt
add
movsb
stos
in
pop
adc
insl
js
dec
sahf
ret
fs
xor
idivl
bnd
or
outsb
cmp
and
mov
mov
jp
cmpsb
xor
cmp
in
fsub
iret
shrb
cmc
xchg
xor
cmp
lods
insl
int
mov
mov
mov
pop
adc
add
inc
mov
lods
sahf
cltd
xchg
xchg
loope
mov
add
pushl
icebp
mov
fcomps
loopne
jne
adc
or
sbb
push
or
sbb
ficompl
adc
push
add
mov
flds
dec
lret
js
jnp
stos
nop
add
adc
jp
jmp
pushf
cmp
enter
mov
sbb
add
not
aad
xor
pusha
add
lahf
les
mov
icebp
rcll
xchg
adc
push
scas
rcl
in
dec
pop
stos
inc
jmp
mov
jp
stos
lret
mov
js
adc
push
lret
std
mov
push
clc
mov
out
mov
les
or
adc
stos
and
cwtl
in
jo
jl
pop
inc
ja
lret
push
outsl
or
adc
shrl
aad
fisttps
and
cmpsb
add
fs
bound
div
or
movsb
xor
jbe
out
jno
push
seto
pushf
inc
xchg
lret
add
jl
or
iret
int3
cmc
into
adc
add
adc
jmp
dec
insl
leave
xchg
sahf
push
jnp
js
test
aas
dec
sti
fwait
cmp
xor
aad
scas
add
ja
imul
jne
test
fidivrs
shrb
stos
add
sub
leave
mov
dec
jno
clc
cmp
mov
mov
dec
mov
xor
outsl
sbb
xchg
sbb
or
adc
mov
and
and
xlat
mov
fbstp
sbb
jno
mulb
das
push
jae
dec
pop
xchg
les
ljmp
push
cmove
repnz
cwtl
xchg
mov
lcall
and
stos
scas
adc
xchg
cmp
das
loopne
add
add
and
in
dec
mov
repz
xor
inc
mov
mov
test
mov
sub
std
cli
jmp
sbb
cli
popa
pusha
mov
add
lods
xor
dec
cmp
sub
pop
cwtl
inc
sbb
xor
adc
dec
jp
sbb
inc
jns
xor
xor
orl
pusha
add
xchg
inc
jne
popf
and
enter
lahf
movsb
mov
les
jb
clc
icebp
mov
rcr
cmp
and
mov
stc
cmp
push
mov
sbbl
test
rol
in
inc
push
cmp
cmpsb
jnp
lret
fs
lahf
mov
cmpsl
adc
cli
sub
stos
pop
por
out
faddl
sahf
addl
ret
push
pop
loop
push
cmp
push
into
sbb
in
and
cmp
or
pushf
aaa
xor
lcall
cmp
push
lahf
in
adc
mov
mov
sti
xor
xchg
sti
movsl
cli
es
add
jne
mov
mov
xor
mov
aas
cmp
xchg
fbld
xor
jmp
popa
es
cs
add
xor
dec
and
lret
shrb
scas
mov
pop
imul
pop
lret
xchg
addr16
xchg
clc
xchg
xchg
cwtl
stos
test
push
insb
ret
pop
adc
jle
inc
hlt
loop
scas
loop
jbe
push
push
pushf
dec
mov
mov
sub
repnz
jns
lods
push
inc
dec
aad
test
sbbb
das
mov
pop
jge
sbb
push
mov
sti
repnz
push
into
jno
in
aaa
stos
out
push
mov
sub
pushf
aaa
testb
lea
mov
add
lods
call
lret
add
int3
shlb
inc
dec
push
inc
push
ss
andl
dec
push
sbb
adc
add
mov
pop
lods
add
mov
in
mov
int3
mov
push
and
pmulhw
add
outsl
push
mov
pusha
shr
js
xor
xor
std
mov
jae
aam
frstor
icebp
pop
inc
mov
and
mov
mov
stos
and
pop
mov
xchg
pop
out
sbb
andl
xchg
mov
out
out
arpl
xchg
es
imul
mov
fmuls
cmpsl
jg
cmp
sub
inc
stc
sbbb
mov
push
xor
mov
into
adc
mov
sbb
mov
sti
andb
sarb
test
test
lahf
lea
mov
movsb
xchg
push
xchg
enter
lock
call
adc
inc
cmpsl
pop
jmp
imul
call
add
mov
mov
out
mov
divb
mov
mov
pop
pop
clc
insl
or
sub
movsb
inc
repnz
mov
mov
clc
mov
dec
mov
scas
sub
jae
inc
cmp
fdivs
popa
iret
or
add
sbb
movsb
add
or
ss
and
mov
fwait
test
jmp
imul
sub
ffreep
sar
sub
imulb
stc
or
pop
push
mov
sub
inc
sbb
addr16
ljmp
cwtl
jo
mov
adc
stc
dec
aad
pop
pop
repnz
mov
pop
add
cmp
pop
mov
inc
jb
jmp
scas
pop
cmp
push
add
iret
dec
hlt
imul
or
mov
fistpll
jns
sahf
add
divb
insb
push
dec
or
daa
push
decb
pop
jp
imul
pusha
test
pop
nop
push
lds
test
pop
test
inc
and
in
les
jbe
inc
imul
cwtl
nop
xchg
rcll
sub
scas
mov
lock
sub
or
xchg
fistl
and
xor
or
xchg
sarb
push
push
push
push
jge
adc
xchg
mov
and
popa
das
and
push
loopne
pushf
push
andnps
das
jecxz
stos
lahf
sarb
lock
inc
cltd
and
or
pop
out
leave
and
popf
xchg
outsl
dec
stc
in
rep
mov
std
outsl
sti
loope
xchg
push
fs
pop
js
rcll
pop
pop
jae
and
cmpsl
ljmp
aaa
aaa
test
pop
ljmp
mov
insb
dec
or
xchg
loop
and
cld
aad
in
mov
inc
sahf
pop
or
leave
adc
mov
lods
pop
or
mov
pop
adc
xchg
sub
jmp
stos
rcr
inc
int3
out
jb
mov
jge
in
pop
mov
sarb
xlat
xor
xchg
int
into
or
pushf
mov
aaa
addr16
ficoml
and
fsubs
rcr
mov
in
mov
loop
mov
jmp
movb
fistpl
xchg
inc
mov
push
fistps
xchg
dec
std
test
sub
sbb
jns
jo
cmc
iret
mov
fs
or
dec
jne
adc
fmuls
pusha
sub
inc
data16
push
in
pop
dec
jbe
sub
xlat
lock
mov
shll
mov
cwtl
and
scas
pop
adc
pusha
in
xor
sub
popf
push
repz
sbb
test
jne
call
rcll
fcompl
cmp
cmp
mov
jmp
sbb
sub
sub
jo,pn
pusha
loope
mov
mov
scas
xor
mov
or
inc
or
hlt
cwtl
stc
es
or
jns
sarl
lret
into
inc
loop
jle
mov
stos
data16
jmp
pop
mov
movsl
sar
fidivs
sub
ljmp
mov
xchg
pop
shll
push
cmpl
imul
cmp
pop
adc
addb
scas
bound
pop
mov
ret
mov
jg
lods
fcompl
push
iret
in
aam
fcmovnbe
sbb
inc
mov
rcrb
inc
fsubs
push
inc
js
pop
jb
or
mov
or
aam
dec
aaa
sub
out
cmc
sbb
dec
pop
adc
mov
dec
adc
xchg
jnp
cli
loopne
mov
adc
inc
adc
xchg
jecxz
das
push
stos
sub
xor
jns
xor
push
testb
mov
add
jnp
imul
fidivrl
and
push
gs
fsts
movsb
pop
cmp
cmp
fs
or
push
cmpl
pop
outsb
add
or
das
hlt
adc
addl
inc
pop
aaa
push
jle
sbb
es
cmp
xor
and
js
pop
adc
or
push
jge
push
cmp
push
loopne
and
xor
popf
out
arpl
fstpt
add
popa
cmp
mov
das
pushf
push
repz
scas
imul
sbb
loopne
lods
push
sbb
and
rcrl
xlat
add
jecxz
ret
sbb
fs
jae
popa
xor
dec
sub
lock
out
aas
mov
cmc
push
test
or
or
xchg
mov
and
outsl
arpl
sub
jne
inc
fs
cmpsl
push
fadd
jmp
xor
filds
mov
nop
movsb
mov
pop
mov
push
jl
imul
incl
dec
xchg
push
ss
pop
iret
jmp
or
push
jno
pop
xorl
and
push
mov
stos
pop
ss
lods
push
mov
inc
push
mov
lahf
popa
fdivl
mov
xor
in
mov
jle
inc
or
lea
push
sbb
xchg
pop
xlat
rclb
and
repnz
adc
and
mov
jmp
push
cwtl
idivl
jno
add
sub
popa
lahf
mov
aas
cmpsb
lret
shr
push
push
push
xchg
mov
cmpsb
adcb
arpl
mov
pop
insl
dec
sarl
xchg
add
sbb
fisttps
jo
mov
adcl
push
pushf
mov
sbb
dec
push
dec
cltd
rorl
dec
sbb
fisubs
sub
xor
ds
lods
in
mov
cmpsb
push
bound
ljmp
jae
mov
mov
out
cmc
xchg
sub
dec
and
popa
jnp
adcl
cmp
mov
sbb
out
inc
pop
jns
mov
xor
addr16
out
cmpsb
popa
int3
sub
jge
push
inc
dec
jp
jbe
jae
add
cmp
pop
jbe
xchg
and
popf
flds
mov
mov
fwait
mov
out
jns
pusha
pop
int3
jb
clc
mov
mov
call
je
jno
sbbb
std
mov
or
xchg
ss
mov
and
fmul
sti
xor
push
imul
arpl
lods
jae
in
lea
out
or
mov
shlb
xlat
scas
fdivl
stc
jae
outsb
or
js
pushf
lods
push
bound
jae
enter
repnz
mov
pop
or
aam
cmpsb
and
dec
hlt
lock
lods
mov
imul
rorb
jmp
jge
loopne
clc
int
dec
pop
pop
enter
pop
fadds
jp
rcl
cwtl
shll
mov
mov
cmpsb
jbe
lret
gs
xchg
sarl
stos
adc
pop
sbb
repz
jecxz
std
test
add
int
jne
adc
dec
inc
popf
jecxz
sub
adc
fidivrs
xor
pop
jmp
pop
in
and
es
into
mov
test
and
int3
cli
mov
scas
lods
jge
ret
lods
fisubrs
sub
xor
dec
ret
test
inc
inc
xchg
orb
jp
lret
das
je
cmpsl
or
cmp
lods
lcall
aaa
xor
mov
outsl
insb
inc
loop
mov
mov
ja
imul
and
arpl
loopne
or
and
jp
rorl
mov
test
lock
or
inc
xorb
inc
cmc
test
and
rorb
jbe
xchg
mov
test
gs
cmp
mov
cmp
or
test
or
imul
clc
mov
pop
inc
and
sbb
rorb
sahf
pop
repnz
add
pusha
in
shrb
aaa
mov
cld
rorb
sub
xchg
jno
decb
cmp
stc
inc
sub
imul
out
or
jne
popa
dec
cmp
pop
int
cwtl
sbb
divb
std
scas
insl
addr16
es
push
jmp
stc
push
or
movsb
lods
int
insl
pop
adc
test
fwait
pop
add
scas
mov
pusha
popf
sbb
mov
adc
cmpl
popa
xor
scas
fwait
and
jae
je
repnz
jmp
lock
adc
xchg
push
sbb
inc
and
ss
adc
fwait
push
xchg
pop
and
pop
repz
sub
aas
pop
jae
inc
push
cli
clc
jns
repz
or
fmulp
bound
jns
mov
fcom
iret
jge
inc
shrb
mov
jno
mov
stc
and
xor
test
jl
push
cmp
ljmp
out
pushf
push
push
jp
jae
jmp
cwtl
lods
pop
stos
push
inc
test
fwait
pop
sub
cmp
rcl
xchg
mul
int
inc
out
pop
dec
cmp
mov
sub
jge
push
out
fiadds
adc
clc
cmp
push
negl
pop
xor
andb
xor
sbb
adc
out
and
or
bound
jo
cs
ret
out
push
mov
mov
out
xchg
rol
mov
and
xchg
mov
adc
dec
dec
or
adc
mov
or
mov
mov
xchg
nop
insb
mov
push
push
das
xchg
mov
jnp
and
sbb
rcll
pop
push
inc
inc
movsl
sbbl
pop
imul
adc
sti
jo
mov
mov
int3
sub
xchg
clc
and
stos
sbb
cwtl
dec
scas
mov
hlt
cld
mov
xlat
mov
mov
pop
popa
sbbb
fidivl
fists
sub
ds
negl
pop
ljmp
and
aaa
jge
sbb
xchg
pop
mov
push
sbb
pop
and
inc
dec
sbb
mov
arpl
andb
fucom
sub
stos
pop
dec
imul
or
sbb
pop
cmp
push
pop
into
pop
inc
cli
lock
fucomi
mov
enter
insb
adc
pop
out
mov
popf
outsl
sbb
ret
repz
leave
xor
movsl
jmp
cmpsl
cs
push
leave
ret
push
popa
pop
cmp
xor
xchg
popa
or
adc
in
bsr
mov
mov
push
ljmp
push
test
fisttpll
dec
lods
add
add
cld
sbb
push
lock
in
fidivs
outsl
fdivp
ss
dec
mov
jg
int
jb
lods
push
pop
mulb
vpaddusw
mov
jge
addl
mov
add
lods
repz
in
mov
scas
pushf
ds
adc
inc
jmp
lahf
popa
pop
push
divb
xchg
loope
fidivrs
ficoms
cli
scas
jnp
xchg
push
and
movsl
pusha
pop
mov
fwait
inc
out
push
rcrl
in
sub
add
ret
push
int3
pop
adc
rclb
and
lods
or
push
sbb
jmp
pop
jle
mov
shlb
adc
jo
mov
loopne
or
jp
call
clc
lea
outsb
pop
mov
fwait
xor
add
movsb
std
sahf
add
inc
jnp
push
adc
lds
lahf
inc
mov
or
scas
movsb
test
adc
jno
lods
mov
aam
rol
ljmp
xchg
fimuls
lods
testb
adc
inc
aad
push
fldenv
mov
out
mov
add
stos
fisttps
dec
adc
jno
add
icebp
mov
out
add
fwait
jae
pusha
or
add
andl
fsincos
fwait
mov
sbb
icebp
in
push
inc
fpatan
push
test
cld
gs
inc
stc
out
mov
jl
lcall
je
cmovs
dec
insl
je
pop
mov
jp
arpl
dec
negl
mov
cli
mov
add
aad
dec
xchg
mov
sub
mov
mov
inc
test
mov
pushf
loope
loop
mov
sbb
ret
rolb
dec
xchg
sbb
loope
out
ret
inc
imul
jmp
mov
dec
push
pop
test
test
xor
lds
jge
call
loope
pop
in
outsl
mov
jge
repz
push
aaa
mov
cmp
xchg
aas
sahf
shrl
daa
or
lcall
loopne
sbb
inc
and
lods
fistl
adc
push
movsl
adc
icebp
lods
inc
out
mov
stos
scas
push
loopne
adc
xchg
into
fwait
adc
push
push
pop
cmc
jns
push
xor
jno
loopne
sbb
jg
addb
in
sbb
xchg
cmp
pop
or
repz
mov
mov
fistl
jle
push
int3
xor
bound
insb
test
imul
xchg
mov
pop
rorl
ja
mov
jl
and
mov
fwait
je
outsl
jno
cmp
ljmp
andl
andl
gs
xchg
inc
imul
int3
int
out
cmpsb
popl
xlat
std
mov
push
loope
and
xor
push
sbbl
out
or
fnsave
mov
stos
dec
sbb
pop
lds
jg
je
pop
scas
imul
arpl
insb
inc
mov
popa
xchg
and
mov
dec
ret
lock
push
fimuls
jno
lods
sbb
and
insl
mov
movsb
lods
adc
push
sbb
push
cmpsl
adcb
sub
push
jns
mov
lret
mov
data16
in
lds
clc
aam
sbb
jle
out
cltd
fistpll
jmp
imul
sub
fisubs
sbb
lahf
dec
mov
inc
ja
mov
xchg
daa
push
aam
or
adc
dec
leave
jb
sti
inc
into
aaa
inc
dec
push
ss
roll
mov
adc
outsl
and
es
popf
sbb
nop
cmpsb
adc
idivl
clc
adc
in
inc
xchg
xor
mov
or
add
sub
rol
inc
flds
sahf
mov
das
call
test
jnp
lret
mov
cmp
jne
push
add
push
iret
les
lds
bound
in
or
test
rorb
lcall
mov
push
dec
mov
sub
and
dec
cmp
add
pop
cmp
jl
pop
mov
pop
sbb
stc
arpl
cmp
je
mov
dec
test
or
arpl
mov
cwtl
cmp
lods
int3
in
dec
push
jno
mov
out
scas
push
repnz
call
in
out
inc
lock
xor
subb
movsl
inc
ret
sarb
arpl
mov
dec
leave
icebp
push
jge
je
mov
cld
stos
pop
pop
adc
nop
pop
xlat
shll
mov
aaa
jb
aad
int
imul
xchg
pop
xor
or
xor
sub
add
outsl
pop
loop
in
xorl
add
cmpsb
add
dec
dec
sbb
cmpl
xchg
sti
aas
rorb
ret
adc
xchg
loopne
sub
sub
xchg
dec
xchg
jns
push
shlb
aaa
xchg
sarb
jle
pop
jnp
or
jmp
popa
xchg
push
mov
push
leave
sub
out
fildll
cmpxchg
mov
dec
xchg
jmp
in
pop
aaa
ss
push
adcb
or
int
lret
mov
popa
dec
xchg
sub
and
test
mov
lds
stc
jmp
das
aam
inc
cmp
jne
add
or
mov
repnz
outsl
jno
sti
sbb
es
adcl
idivl
pushf
jge
xchg
sbb
pop
pcmpgtw
xchg
ja
or
in
pop
dec
xchg
xchg
pop
pushf
xlat
mov
mov
cltd
sub
out
test
andb
push
push
sub
inc
xchg
outsl
and
or
test
ret
jb
pop
cmpsb
pop
inc
jp
xor
dec
cmp
call
ja
imul
push
push
and
data16
mov
lods
adc
push
push
push
sahf
sub
sub
movsl
leave
pop
negl
es
add
cmp
cld
mov
enter
aaa
push
aam
in
adc
lret
push
in
inc
adc
fidivrl
shll
or
out
das
mov
cmc
imul
sub
mov
jmp
mov
push
push
inc
rcll
dec
cmp
jnp
sub
cwtl
pop
out
fiadds
ds
push
arpl
pop
and
pop
or
inc
ja
push
jnp
gs
das
in
rcl
sbb
fnstenv
sub
mov
into
lahf
mov
aas
xor
mov
pop
test
cwtl
insl
repz
stos
or
mov
lock
adc
je
adc
in
inc
jl
pop
mov
inc
mov
rcrl
mov
pop
jno
ss
push
fwait
xchg
mov
mov
sub
mov
xchg
jbe
adc
fbld
add
xchg
xor
jb
aad
ds
in
jmp
call
jmp
cmpxchg
shll
mov
cmpsl
pusha
mov
inc
cmpsb
pop
out
out
mov
mov
xchg
mov
iret
inc
jle
sbb
jo
xchg
paddusb
fcmovb
lret
loope
mov
mov
xor
push
ja
mov
js
scas
pop
rorb
dec
jo
loop
test
shlb
sar
stos
xor
push
xlat
dec
add
lret
cmp
inc
pop
push
movsb
push
add
lcall
sahf
and
and
pop
cmc
imul
jg
mov
jns
and
insl
xchg
addr16
scas
and
xorl
dec
jbe
stc
mov
jnp
ret
xchg
enter
xor
mov
jmp
push
cmpsb
movsb
or
adc
repz
dec
push
les
cmpsb
jns
cld
xor
out
sbb
repnz
dec
imul
lret
cwtl
stos
jmp
das
pop
or
pop
fwait
inc
leave
xor
sub
pushf
mov
jbe
jmp
pop
hlt
test
mov
repnz
cltd
or
out
test
je
xor
xchg
call
rcrb
mov
cmp
and
aaa
pop
sub
pop
cs
dec
fcoms
cld
in
imul
es
cld
lods
xor
pop
sub
jecxz
or
push
push
xor
test
push
fst
pop
loop
push
stos
test
popa
mov
xorb
jecxz
push
ljmp
imul
or
inc
test
pop
mov
mov
in
sbb
jns
mov
and
push
popf
movsb
je
mov
mov
push
push
data16
adc
enter
addr16
mov
pop
sub
push
rcrl
fmuls
mov
scas
out
cltd
mov
pusha
xchg
mov
fidivrs
fdivl
test
adc
cltd
push
push
je
sub
dec
sbb
jns
add
cmpsl
rep
mov
sub
mov
push
lcall
stc
push
mov
fcomps
cltd
loope
outsl
divl
nop
jge
mov
cmpsb
or
imul
sarb
aas
xchg
jecxz
out
push
xor
mov
adc
dec
sbb
pop
mov
xchg
popa
add
cmp
jnp
shlb
jg
imul
mov
out
imul
shll
mov
mov
push
add
mov
jle
in
ret
sbb
sbb
cmp
rcr
mov
inc
lea
mov
pushf
mov
jmp
pop
test
test
cmp
xor
rorb
inc
jno
je
xchg
dec
sarb
mov
jp
stc
jns
mov
in
es
mov
and
cmp
lds
shll
out
or
and
in
pop
cli
push
add
sbbl
call
adcb
jp
lahf
fstpt
rolb
cmp
aam
mov
and
js
mov
lret
cli
loop
es
rcrl
pushl
test
hlt
pop
dec
cmp
mov
jnp
rcr
arpl
and
xor
pop
call
xchg
xor
xchg
push
pop
inc
add
dec
leave
aaa
int3
push
cwtl
lea
add
jb
in
je
testb
cmp
arpl
jo
jle
call
les
mov
lret
leave
insb
pop
push
cmp
cld
inc
push
add
test
push
pop
std
fstl
mov
lock
mov
sbb
push
imul
loopne
sub
pop
shll
xchg
addl
movsl
mov
imul
rcll
cmp
iret
sub
inc
pop
xor
sbb
push
subb
scas
fwait
lds
jno
mov
or
ret
xchg
jb
or
push
xor
jp
add
xlat
and
pushf
clc
push
das
ret
bound
cmp
jae
in
std
cmp
inc
mov
jmp
dec
dec
leave
andl
dec
adc
test
dec
push
lahf
lods
test
dec
dec
daa
push
push
repz
imulb
lock
xor
lret
jbe
mov
clc
movd
mov
nop
or
adc
jle
jno
imul
popa
cmp
or
sbb
into
xor
lss
arpl
ret
dec
in
adc
mov
jp
outsb
sbb
dec
call
add
cmp
fwait
sub
std
movsb
xchg
idivb
xor
cmc
scas
leave
add
push
and
outsb
in
or
scas
sub
push
xchg
ja
xchg
out
mov
aaa
jnp
cltd
daa
sub
imulb
push
addl
push
mov
mov
pop
dec
push
fnstcw
push
sub
rcr
leave
and
aam
sbb
jle
sti
xchg
jl
lahf
fadd
rcrb
addr16
push
pusha
movsb
les
incl
mov
mov
nop
xor
mov
and
cmp
xchg
pop
jmp
in
dec
jecxz
xlat
xchg
gs
dec
xor
rclb
fildll
pushf
in
mov
mov
add
jmp
fldenv
xchg
mov
pop
mov
test
shlb
xchg
pop
popf
sbb
sub
mov
in
ds
xchg
cmp
lods
pop
inc
jbe
in
jno
insl
nop
or
ret
bound
ret
pop
pop
jge
out
pop
ss
jp
aam
nop
je
jle
mov
xlat
mov
add
testb
into
insb
ss
fs
inc
stos
xchg
mov
scas
out
scas
xchg
push
mov
add
stos
mov
and
scas
jb
mov
std
mov
push
pop
cs
out
jge
aam
pop
pop
sbb
dec
adc
cwtl
test
mov
add
imul
fnstcw
test
push
xchg
jge
pop
fwait
int3
cmp
ficoms
xchg
jge
mov
rcll
dec
arpl
lods
mov
addr16
stos
mov
xlat
mov
pop
cmp
push
cltd
fbld
inc
iret
aaa
cmc
lods
pop
jns
pop
cmp
loopne
stos
mov
mov
push
xchg
inc
jnp
xchg
pop
xchg
cmp
add
and
orb
mov
cmp
fimull
repz
xor
js
sub
call
pop
cmp
mov
ljmp
out
fsubl
push
fbld
insl
jb
ja
fbld
and
call
gs
lods
add
jno
call
call
xchg
in
in
outsb
dec
push
dec
mov
subb
and
std
lods
jmp
out
mov
lret
xchg
fistpll
jns
jbe
cmp
push
clc
nop
xor
popf
clc
cli
ret
out
cmp
adc
sub
cwtl
mov
aad
je
and
lods
in
sbb
xchg
scas
popl
test
loopne
push
cmp
fcoms
jl
movl
fdivl
mov
xchg
scas
aas
cmp
mov
divl
movsb
mov
xchg
punpckhdq
or
scas
mov
pop
ja
mov
adc
mov
jns
cmpsb
repz
mov
std
jnp
or
mov
fs
add
iret
push
adc
dec
scas
outsl
cmp
jle
idivb
in
jg
sub
test
cmp
out
repnz
pop
jp
jmp
clc
inc
sti
xor
cmpsb
push
les
cld
sahf
loopne
mov
and
out
std
test
cmp
mov
push
push
pop
rorb
push
pushl
mov
dec
inc
jbe,pn
push
repnz
lret
outsb
lcall
call
sub
mov
orb
pop
adc
shl
xor
mov
aas
and
fsubl
adc
sahf
or
daa
adc
jp
inc
lds
inc
xchg
jbe
rolb
jmp
fsubr
pusha
push
or
addr16
pop
inc
and
sbb
xor
jno
jecxz
mov
xlat
in
ficoms
sbb
mov
fdivrs
gs
jle
dec
les
ljmp
cs
pop
xchg
inc
or
add
in
add
adc
inc
dec
adc
jp
dec
sbb
sahf
jmp
repnz
cmp
aam
jae
leave
jae
mov
xchg
mov
scas
test
clc
rcrb
lcall
rorb
mov
js
imull
cmpsb
cmpsb
sub
xchg
xchg
add
cmpsb
cmp
popf
fisttpll
out
mov
stos
es
cmc
mov
push
xchg
ja
dec
mov
iret
sub
rorb
mov
popa
cmp
xchg
hlt
mov
sti
ss
es
sub
call
aaa
dec
imul
lret
fisubrl
popa
sti
mov
sub
mov
cmc
loope
add
xor
jp
les
les
xchg
xchg
dec
insl
or
fiadds
out
addr16
add
outsb
cld
jl
xchg
aad
push
sahf
sahf
jnp
cli
nop
xor
outsl
sarl
cmp
mov
mov
aaa
mov
movsb
movsl
jbe
in
cmpl
add
std
cld
push
sub
nop
in
leave
inc
ror
or
inc
jp
in
jl
jge
jmp
int
ds
scas
data16
mov
sar
xor
mov
adc
add
dec
dec
cmpsl
fwait
xchg
cmp
inc
cmp
int
enter
mov
or
lret
cmp
js
mov
iret
xor
loop
js
cmp
cmp
xchg
cmpsb
cmovne
jno
and
jbe
fbld
int
pop
repnz
xor
jecxz
js
cmpsb
xor
push
mov
loope
mov
lcall
jge
or
test
dec
scas
inc
movsb
sub
stc
les
push
outsl
les
jle
pop
inc
push
push
mov
jl
xchg
mov
out
bound
mov
jbe
orl
std
push
out
sub
in
lods
sahf
or
int
test
dec
cmpsb
dec
xchg
mov
rclb
mov
in
and
frstor
or
mov
into
sub
ds
rorb
or
repz
mov
sahf
or
pop
cmp
or
cmp
test
nop
or
push
in
std
pushl
dec
mov
stc
movsl
adc
mov
jge
dec
xchg
in
ret
in
dec
les
adc
ret
mov
xor
adc
pop
mov
jle
aam
in
in
mov
loopne
and
jne
in
jmp
imul
lods
js
or
fsts
mov
pop
out
fdivrs
out
insl
or
hlt
cmc
push
xchg
sbb
jecxz
fmuls
and
dec
dec
in
insb
in
jb
pop
add
dec
popa
mov
cltd
lods
icebp
or
mov
xlat
lods
cmp
scas
xor
cmpb
pop
cmpsb
push
or
and
pop
addr16
aas
loopne
pop
fld
pop
iret
test
cmpb
addr16
loop
and
push
cwtl
lods
sbb
ljmp
cmp
fistl
imul
aas
movsb
push
mov
xor
xchg
mov
push
and
lea
cltd
insl
outsb
mov
sti
ljmp
int3
popl
push
xchg
nop
cld
movsl
mov
inc
aaa
push
sub
sub
push
mov
or
adc
mov
cmp
mov
mov
adc
leave
xchg
push
cmc
dec
mov
pop
outsb
call
mov
xchg
clc
rorb
in
aaa
neg
daa
shlb
or
or
push
jbe
out
test
ds
fstpl
cltd
subb
adc
lds
push
sub
pop
push
pop
lods
mov
scas
xor
and
leave
and
mov
pop
mov
mov
leave
popa
divl
sbb
jns
xchg
int
adc
arpl
adc
dec
push
mov
xchg
divb
cs
or
les
movsl
out
mov
add
add
push
scas
aas
jg
movsb
inc
lret
xchg
adc
fs
push
mov
xor
pop
call
mov
scas
mov
adc
inc
xchg
add
cmp
dec
jns
clc
or
jmp
jne
pop
dec
xchg
dec
xchg
imul
inc
out
lds
mov
cmp
out
sub
insl
jecxz
xor
stc
add
jbe
aam
mov
and
xchg
movsb
dec
ret
cs
xor
pop
mov
in
lea
push
add
jecxz
dec
leave
loop
nop
push
out
cmp
sbb
int
scas
pop
adc
scas
and
dec
fdivrs
xor
movsb
sub
andl
dec
sbb
mov
sbb
pop
jne
push
popf
lcall
aaa
and
jp
inc
pop
inc
dec
mov
and
jnp
inc
imul
shrl
mov
aam
loop
out
sbb
fidivl
xor
cmp
in
gs
idivl
and
mov
repnz
mov
jecxz
fnsave
pop
ret
mov
mov
add
cmp
mov
pop
push
es
adc
sub
xchg
dec
xor
not
inc
push
inc
xor
or
in
jg
jmp
push
cwtl
scas
mov
lcall
mov
add
mov
mov
cwtl
xchg
pop
xor
in
mov
imul
sub
dec
lcall
xchg
or
divb
dec
mov
dec
adc
int
mov
inc
dec
inc
dec
std
xchg
mov
stc
subb
sahf
xor
repz
outsl
mov
jp
push
push
and
mov
xchg
incl
scas
fprem
add
jo
mov
adc
inc
rolb
out
loop
out
mov
int
fs
xchg
shlb
out
xchg
pop
mov
leave
gs
clc
inc
repz
push
push
mov
dec
ds
xor
mov
repnz
sbb
dec
mov
daa
jb
test
ret
cld
fsubr
add
adc
push
and
jae
mov
xorb
jp
scas
iret
sbb
xchg
pop
and
adc
xchg
movsl
mov
aaa
cmp
into
add
inc
rcr
push
dec
mov
mov
jns
push
ret
loop
fimull
stos
mov
cmp
mov
xor
pushf
dec
xor
add
fdivrs
jmp
dec
inc
inc
aaa
std
out
stos
jbe
data16
lods
mov
in
add
mov
in
lret
push
inc
xchg
mov
into
and
inc
je
fildl
aas
es
jg,pt
bound
mov
out
int3
add
or
in
movsb
push
fstps
clc
jmp
mov
aam
call
mov
add
leave
push
jae
repnz
loopne
gs
xor
and
push
sbb
rcrl
mov
cmpsl
inc
xchg
out
push
sahf
movsb
jbe
neg
cmp
sbb
decl
dec
jge
push
jbe
movswl
push
jne
mov
daa
pop
int
fucomi
scas
mov
sub
mov
add
aaa
push
ljmp
push
and
sub
repnz
push
sbb
jmp
int
xchg
jp
mov
ss
jo
xchg
or
lods
orb
div
lahf
dec
mov
in
in
sbb
and
stos
jge
test
leave
call
cmp
jmp
or
jecxz
cwtl
les
mov
lods
cli
pop
cmp
add
xchg
gs
xchg
mov
ret
push
test
jbe
push
sub
cli
pop
fdivrl
push
roll
cmpsw
fs
shrl
mov
das
push
push
mov
pop
aam
add
shlb
les
pop
shrl
adc
mov
mov
rorl
jnp
ret
fmuls
cmp
mov
shll
ja
push
push
push
adc
dec
adcl
call
push
aaa
sti
je
ficoms
into
mov
inc
sbbl
xchg
xor
mov
xchg
test
xchg
popf
mov
or
mov
push
mov
adc
push
xchg
push
popa
or
rorb
mov
sbb
mov
and
stos
jp
cmp
sbb
idivl
inc
or
test
sub
mov
outsb
mov
test
mov
inc
pop
repnz
or
mov
mov
sub
sarl
or
int
adc
rcrb
jae
sub
cltd
jecxz
outsb
insl
cmp
or
in
fisttps
adc
aad
loop
lods
push
inc
push
insb
mov
es
pushf
jae
dec
xchg
shlb
mov
add
mov
jo
add
pop
jns
ds
pop
xchg
pushf
cmp
popa
sub
or
insl
fwait
jle
xchg
xchg
xchg
push
mov
jp
jl
call
mov
iret
inc
sbb
lods
xor
in
sub
popa
pop
mov
insl
cmc
xor
adc
loope
sbb
fyl2x
fisttps
dec
cmc
pop
push
rclb
mov
fnstenv
dec
cmpsb
push
xor
fdiv
aad
jno
repnz
jae
mov
bound
punpckhdq
push
sbb
int3
cmp
icebp
pushf
jae
fcomps
test
repnz
out
test
jno
jae
push
inc
test
ss
loopne
xchg
push
push
out
cmpsl
fdivrp
jp
and
inc
test
cmp
and
push
sahf
or
pop
and
mov
mov
or
xchg
fdivl
and
xchg
out
and
mov
cmp
fnsave
ficomps
mov
in
sbb
cld
cmpsl
cmp
adc
xlat
push
lods
cmp
cmp
es
inc
out
mov
or
icebp
jle
xchg
mov
mov
ja
mov
insb
cmp
sahf
dec
sbbl
cmpsl
xchg
fadds
inc
push
in
xchg
xor
ljmp
mov
cmpl
lock
out
test
pop
out
sbb
aad
ret
pop
sahf
cld
add
ficompl
iret
add
and
and
push
ja
xchg
jl
mov
pop
cmp
xlat
sub
stc
xor
shrb
movsl
pop
xchg
cld
add
movsb
test
push
jl
mov
sub
adc
ss
mov
std
sub
cmp
sti
in
xor
shrl
rclb
jge
rcll
mov
push
rorb
cmp
hlt
test
pop
inc
cmp
add
and
xor
dec
rcrb
push
mov
orl
or
jl
fsts
inc
mov
lcall
dec
sub
sub
ret
push
sub
mov
lahf
xor
sub
mov
scas
scas
cs
ret
inc
pop
aaa
pop
test
inc
into
mov
out
in
jge
mov
dec
cmp
sub
movsl
adc
adc
mov
nop
mov
pop
sti
sub
inc
mov
leave
sbb
enter
out
adc
in
add
shrl
xchg
jl
pop
mov
adc
lret
mov
mov
xchg
sub
movsl
jae
pop
sub
out
mov
push
or
clc
pcmpeqw
and
jae
cmp
pushf
sti
int
std
pop
adc
mov
inc
or
push
sbb
mov
in
push
sahf
mov
je
or
adc
out
sub
push
mov
or
jns
sahf
fdivr
add
dec
xchg
xor
pop
add
sbb
mov
lock
fisttpl
mov
jno
icebp
jle
or
ja
lock
in
in
sahf
xor
addr16
push
mov
push
test
cmp
add
adcl
dec
xor
jg
add
mov
dec
and
or
rclb
adc
adc
fwait
add
adcl
xor
lods
popa
mov
pop
mov
jae
es
push
cmpsb
cmp
pushl
ret
xchg
mov
xor
add
push
xor
adc
inc
or
xchg
test
jbe
adc
inc
xchg
add
nop
scas
lcall
and
jecxz
cmp
sub
in
iret
sbb
push
pop
mov
mov
js
mul
mov
cmp
fwait
xchg
push
scas
sub
es
stc
cmpsl
pop
sub
xchg
lret
xor
or
leave
dec
mov
jmp
bound
dec
cmp
jae
fistpll
sub
inc
loopne
imul
movsl
jp
sub
mov
adc
sbb
jmp
adc
sub
repnz
gs
and
sub
fildll
cmp
ss
test
add
int
pop
jecxz
cmp
add
lods
aam
test
push
aad
stc
push
push
jbe
pushf
insl
adc
jne
mov
stos
mov
mov
pop
push
mov
inc
inc
inc
lret
cmp
js
xor
and
scas
xchg
cmpb
cld
push
or
xlat
or
outsl
adc
dec
mov
or
jmp
pop
std
aam
push
jmp
pop
dec
arpl
sub
inc
xor
aas
pop
push
fidivrl
das
push
fcomps
inc
mov
xor
mov
mov
sub
dec
xchg
imul
insl
lds
push
lods
sbbb
cmpsl
out
test
or
ja
pop
clc
sub
push
sbb
xchg
out
mov
mov
push
add
imul
xor
std
cli
insb
inc
mov
push
inc
or
sub
fisttpll
jp
test
xor
cmc
sub
mov
xor
test
fwait
xchg
mov
push
adc
cmp
push
pop
push
add
in
rorl
movd
mov
rcrl
jl
sbb
inc
movsl
pop
sahf
xchg
xchg
push
pop
cmc
pop
nop
in
loopne
or
jo
icebp
fisubl
pop
jb
jb
pop
adc
jno
xor
stos
push
mov
insl
cs
jno
repnz
xchg
shl
adc
xchg
add
and
clc
mov
sub
pop
push
std
mov
push
add
push
xor
push
sub
jno
fsubl
jge
push
stc
hlt
push
push
jne
xlat
xor
sbb
jg
stos
setbe
or
popf
clc
int
roll
addr16
cli
outsl
xor
mov
dec
dec
test
ja
es
fcoml
sub
pop
mov
jae
stos
out
jge
mov
mov
mov
sub
shl
fwait
ret
pop
jmp
movsb
insl
mov
test
stc
push
add
arpl
sbb
inc
std
jo
dec
sarl
sahf
stos
or
cmp
int3
dec
int3
jl
and
adc
out
in
out
int
add
jg
and
aaa
out
jge
nop
lds
pextrw
pop
mov
dec
pusha
xchg
push
out
push
imul
lret
js
lock
ret
pop
int
push
add
push
repz
jmp
inc
repz
ror
ljmp
fstpl
push
sbb
testb
lea
jno
scas
and
sbb
adc
stos
loopne
cmp
adc
jno
dec
daa
inc
and
mov
sub
pop
pusha
xor
or
sbb
les
mov
cmpb
loopne
in
pushf
popa
dec
dec
rcrb
mov
xchg
ret
mov
and
iret
sbb
cmp
negb
mov
push
sets
repz
sbb
cmp
inc
xchg
adc
and
scas
outsl
lret
pusha
in
outsl
into
movb
jle
imull
fwait
stos
mov
jae
xchg
scas
jmp
push
pop
mov
or
icebp
sbb
lcall
inc
or
cmpsw
add
pop
inc
xchg
sub
mov
pop
pop
rorb
dec
dec
mov
nop
sbb
push
and
sahf
jnp
mov
scas
mov
pop
push
or
jl
and
insl
lret
pushf
and
mov
pusha
pop
sub
sub
fisttpll
push
loop
js
aad
enter
jno
xor
mov
sbb
lahf
push
decl
jo
std
enter
mov
aam
cltd
sub
push
daa
cltd
mov
adc
xchg
lea
repz
pusha
mov
int3
mov
xchg
sbb
shll
popa
les
cmc
inc
jle
cwtl
cmp
aas
inc
scas
aas
enter
jbe
cmpsb
mov
divb
pop
push
mov
xchg
insl
jmp
notb
fsubrs
add
sbb
fstpt
xor
shl
int
and
cld
xor
aad
dec
ja
out
jmp
push
mov
adc
ret
push
aam
push
jle
push
int
jmp
lret
orl
add
lock
jns
lret
addb
adc
js
mov
xchg
ljmp
sbb
mov
in
pop
out
cmp
lea
pop
test
sub
adc
sub
add
in
dec
out
insl
popf
cmp
jno
incl
fwait
inc
incl
cmp
into
jp
mov
aas
rorl
repnz
int
add
push
call
sbb
dec
movsl
inc
popf
pop
lret
jns
pop
in
loopne
jae
push
xor
push
int3
mov
jb
roll
and
testb
push
popa
out
enter
in
mov
cld
out
jno
mov
mov
out
jae
or
pop
and
jns
data16
mov
movsb
aas
movsl
pushf
insl
mov
les
loopne
js
inc
mov
nop
cmc
insl
jne
stc
testl
xor
cmp
das
push
ljmp
cld
xchg
aas
and
xchg
mov
mov
push
pand
push
out
xchg
leave
dec
js
aas
mov
test
in
add
cmp
imul
addr16
aaa
mov
fwait
xor
mov
xchg
adc
out
xchg
popl
into
std
ret
xor
sbb
or
outsb
pop
dec
and
sti
ficomps
lcall
xor
mov
push
clc
and
sbb
xor
lea
leave
xor
insb
mov
jnp
jecxz
adc
or
cmpsl
shrb
jbe
mov
ss
and
adc
cmp
inc
dec
bound
dec
xchg
xor
rorb
sbb
pop
add
aaa
and
div
gs
dec
stos
pop
cmpsb
test
loopne
mov
fwait
sub
fsts
inc
hlt
dec
jge
push
xor
xor
jno
cs
aam
dec
lds
notl
xchg
in
int
scas
pop
leave
jne
aad
jl
imul
dec
and
jae
jge
ss
pop
rclb
and
int3
mov
cmp
jne
nop
scas
xor
call
lret
scas
out
or
xor
addb
or
mov
jne
cmp
add
adc
mov
mov
push
mov
les
shrb
inc
mov
or
jl
icebp
sub
inc
int
push
cmp
int3
xor
popa
inc
testb
fcmovnbe
aas
enter
ljmp
or
rorb
mov
pop
roll
leave
dec
jg
fcmove
mov
inc
or
rolb
shll
into
dec
pop
and
repz
cmp
movsl
ret
ja
imul
in
pop
cmp
jns
push
test
ljmp
scas
fsts
mov
push
mov
imul
dec
adc
lock
adc
outsl
mov
xchg
cmp
ds
inc
mov
mov
mov
add
pushl
add
je
pop
scas
jle
add
adc
xor
dec
and
cmp
push
dec
add
out
or
mov
pop
popf
mov
fs
insl
ss
jnp
adc
divl
jle
pop
dec
pop
push
xchg
dec
in
js
mov
fbstp
mov
ss
xor
shr
sbb
shr
stos
notl
jae
push
xchg
xchg
sbbb
mov
incl
xchg
mov
mov
inc
movsl
fisubrs
dec
iret
stos
mov
cli
aaa
loope
call
loopne
filds
mov
shrb
rclb
rcrl
scas
sub
mov
insb
fmul
js
push
push
out
and
xor
cmpsl
and
adc
in
hlt
lret
and
es
add
in
add
dec
jo
mov
mov
fmuls
mov
sti
xor
repz
mov
dec
popf
daa
mov
dec
sbb
add
roll
pop
xchg
cmpsb
add
jmp
daa
xchg
insl
and
outsl
rcl
xor
push
or
adc
in
inc
addr16
into
movsb
cmp
jbe
icebp
push
movsl
pop
jne
xor
mov
ljmp
leave
loopne
stc
or
outsl
lock
in
test
cmp
nop
mov
popf
sbb
mov
inc
adc
mov
push
jno
cmp
dec
pop
xchg
popf
movsb
mov
or
add
sub
lahf
mov
flds
pshufw
or
mov
jb
mov
addr16
add
jae
jae
sub
in
jae
push
js
addr16
repz
mov
or
rcll
mov
push
push
dec
divb
movsb
jmp
test
or
das
cmpsl
test
in
mov
push
add
sub
push
add
std
cld
push
jmp
aam
jne
mov
cmp
push
xor
negl
je
sub
adc
out
movb
mov
pop
cmp
mov
int3
clc
sbb
xor
mov
inc
scas
cs
lock
in
pop
shlb
stos
push
adc
push
jecxz
arpl
adc
mov
repz
push
cmpsb
outsb
sti
jbe
or
cmp
jnp
cld
jmp
rcr
cmc
mov
xchg
insl
in
pushf
mov
xlat
idivb
js
dec
ja
in
mov
and
push
jbe
mov
add
xchg
and
pop
pop
mov
ja
out
repz
scas
in
sbb
jne
flds
sbb
xchg
xchg
pop
add
lcall
inc
xlat
mov
mov
mov
sbb
sbb
jo
mov
popf
xor
sahf
js
mov
inc
pop
stos
jns
push
popf
jmp
insl
fsubrs
adc
and
test
push
shll
dec
icebp
cmp
dec
cs
roll
cmp
xor
lods
jmp
cmpl
mov
popf
inc
shll
in
sub
jmp
addb
out
push
pop
setns
xchg
ss
fstpl
xchg
mov
sbb
xchg
sti
mov
xchg
add
dec
sahf
sarl
notl
in
jl
pop
push
fadd
repz
fnsave
push
cwtl
movsb
fabs
push
int
iret
in
ficoms
rclb
nop
mov
popa
sbb
icebp
mov
add
push
add
jmp
data16
shlb
lret
imul
and
xor
lret
mov
push
mov
idivl
fldl
pop
daa
sub
fnstenv
add
pushf
repz
repz
mov
sub
mov
data16
sbb
cmc
inc
mov
pop
es
jl
jae
addl
jle
arpl
inc
mov
mov
push
repnz
mov
iret
test
outsl
sub
rep
arpl
shl
mov
icebp
sbb
shlb
test
jo
push
sub
xchg
sub
jns
xchg
sub
in
xor
mov
mov
xchg
xor
fsubr
adc
and
mov
sarb
out
xor
mov
lods
out
dec
dec
jae
add
dec
lea
cwtl
cli
shlb
rolb
add
cwtl
daa
mov
test
insl
mov
loopne
fistps
cmp
cmp
mov
push
lds
into
orb
sbb
push
hlt
fmuls
xor
xor
sbb
fstpl
stos
mov
xchg
out
cwtl
lods
cld
ljmp
cmpsl
cmp
fwait
gs
xor
cmp
cmp
push
pop
jmp
xchg
xchg
incl
sbb
pushf
js
and
and
jae
adc
adc
add
sub
and
sti
or
add
sbb
ljmp
xor
sahf
mov
mov
lea
push
pop
dec
loopne
dec
xorl
mov
xchg
bound
inc
js
jns
xchg
aas
test
jle
lahf
xchg
jnp
jo
lret
enter
adc
mov
scas
rcrl
inc
jo
mov
mov
dec
jecxz
cs
call
adc
cmp
int
or
xor
mov
mov
add
push
xor
or
ret
or
pop
cmp
push
adc
lods
jmp
adc
cmp
add
dec
lods
dec
and
mov
test
add
push
lock
xor
aaa
bound
inc
jo
mov
aas
xchg
push
aam
rep
and
pop
lock
cmp
jmp
xchg
jae
push
dec
aaa
test
mov
mov
xchg
and
mov
mov
fisubrs
pop
mov
add
mov
xchg
mov
pop
mov
or
jle
or
mov
mov
cmc
hlt
test
cmpsl
adc
sbb
in
pop
add
dec
adc
test
sahf
mov
xchg
and
cmp
sbb
fnstsw
test
mov
in
std
pop
push
push
inc
mov
cmp
add
xchg
hlt
rcrb
jmp
out
cmp
mov
or
adc
test
mov
dec
mov
cmp
orb
cmp
mov
cs
sub
cmp
xchg
das
or
jno
or
cmp
shll
fs
adc
add
mov
cltd
dec
pop
mov
pushf
mov
mov
mov
adcl
fsubrs
add
jg
push
pop
jg
lret
lods
cmp
movsl
pushl
fsubl
mov
fists
leave
push
insb
push
mov
jmp
sbbl
add
xor
push
sub
push
jns
lock
mov
xor
int
pusha
les
movsb
js
mov
adc
mov
pusha
dec
mov
dec
push
push
dec
out
ss
jbe
mov
int3
iret
das
shrl
jp
fs
shl
xchg
or
adc
jmp
cmp
js
mov
sarl
sarb
dec
les
or
in
lods
ret
in
out
fwait
xorb
inc
popf
push
jnp
scas
popa
mov
out
mov
mov
sbb
push
add
mov
sub
sbb
pop
xchg
push
or
inc
cmp
sahf
outsl
mov
stos
ret
push
cli
mov
jb
loop
pop
or
and
enter
push
das
mov
hlt
xchg
cli
mov
jp
sbb
aam
sahf
mov
jle
insl
fsubrs
adc
mov
sub
xchg
aam
lret
cmc
ja
movsl
jno
mov
cs
incl
push
in
movl
dec
mov
out
cmpsl
dec
inc
mov
mov
dec
fs
icebp
add
jl
les
jne
push
clc
or
and
jl
jb
xor
or
mov
jp
movsb
pop
negl
mov
dec
push
inc
and
sti
in
movsl
aaa
and
sahf
pop
pop
dec
aam
jno
cli
dec
js
out
addr16
test
mov
xchg
movsb
jne
or
inc
mov
jae
push
jns
lods
aaa
xchg
push
sub
dec
outsl
xor
jge
push
mov
sbb
icebp
lods
jno
das
leave
aas
fdivrl
clc
cmp
cltd
adc
mov
in
push
sahf
fcompl
adc
xchg
imul
ds
lods
popa
dec
shr
lock
jecxz
push
xor
cld
xchg
mov
push
xchg
add
cmpsl
shrl
jae
sbb
cs
rcl
sbb
or
loopne
xor
and
push
sbb
call
push
movsl
hlt
add
sub
add
push
pushf
xor
lret
xchg
sub
cmpb
jb
outsl
adc
into
shll
fwait
dec
movsl
int3
or
cmp
arpl
stos
mov
mov
mov
cmovge
lods
cmpsb
pop
je
and
repnz
pop
sti
cld
insb
sbb
cmp
sub
aas
mov
inc
push
cld
sbb
and
inc
aad
or
das
inc
outsl
mov
sbb
push
out
xchg
add
mull
pop
pop
or
imul
inc
and
ljmp
les
pop
hlt
jae
push
aam
sub
cmp
aam
xchg
dec
mov
cs
mov
scas
and
mov
lret
and
sbb
aad
pop
adc
cmp
push
inc
ja
fcmove
adc
das
iret
push
out
or
cmc
std
push
pop
cli
inc
roll
rcrb
and
mov
stos
jb
lock
test
lods
xchg
jno
add
xchg
popa
push
pop
outsb
xchg
adc
pop
fimuls
cmpsb
stos
mov
xor
fcoms
int
push
ret
cmc
les
mov
pop
dec
shrb
psubusb
mov
mov
adc
movsl
or
pop
call
inc
and
or
add
push
js
and
ret
fsubrl
scas
rcll
fs
xor
enter
xchg
mov
adc
inc
mov
sahf
das
mov
xlat
adc
hlt
in
inc
sti
in
dec
lahf
movsb
mov
aas
push
jb
repz
mov
addr16
ja
movsl
sbb
sahf
xor
shl
push
mov
lea
in
xchg
test
mov
add
xor
xor
hlt
xor
iret
dec
dec
jno
jecxz
aad
sub
jbe
cmp
int3
pop
das
mov
aaa
mov
rcl
or
fisttps
or
mov
outsl
stos
out
sub
insl
std
pop
mov
or
cli
mov
rcl
add
jbe
mov
and
int
xlat
mov
aaa
mov
leave
inc
pushf
jb
sbb
inc
out
loop
adc
aad
bound
rcr
cmp
xor
sub
jno
mov
loope
mov
ret
cmp
mov
hlt
mov
mov
or
cmp
or
xchg
xor
sbb
mov
fbld
cmpsb
or
cli
sbb
aaa
fwait
jns
jecxz
adc
mov
mov
dec
lret
xor
stos
mov
xor
out
mov
mov
mov
flds
push
push
fidivl
lds
cmp
mov
dec
pop
aas
popf
in
cli
push
pop
sbb
mov
push
add
loope,pt
ret
mov
xor
cwtl
enter
pop
mov
jo
inc
dec
and
ljmp
jmp
add
mov
add
pop
or
cltd
push
cmp
xor
cmp
in
pop
decb
mov
mov
pop
xlat
fwait
ja
imul
add
outsl
fwait
cmp
sbb
fisubl
test
mov
pop
mov
imul
movsb
jp
dec
nop
daa
xchg
lret
mov
movsl
dec
xlat
jo
sti
imul
inc
iret
getsec
es
cmp
adc
leave
sbb
test
stos
mov
mov
pushl
test
push
cld
stos
aad
or
repz
outsl
dec
in
and
pop
push
mov
leave
pop
inc
adc
scas
ret
fcompl
lods
aas
adc
sub
adc
rolb
jae
dec
in
clc
cs
adc
jle
xchg
movb
rclb
or
xor
inc
mov
cmp
adc
xchg
mov
insb
inc
mov
or
dec
inc
lahf
add
pop
sbb
xlat
push
jl
pop
insl
jle
jle
call
insl
lret
sub
sbbb
aad
gs
scas
adc
frstor
test
and
xchg
xchg
addr16
cwtl
stos
call
mov
insb
cwtl
inc
inc
fwait
movsl
or
adc
fnstenv
xor
test
jo
or
sub
push
scas
xor
cmp
jbe
mov
out
jae
xor
pop
rcrb
mov
shlb
js
mov
pushf
fisubs
xchg
push
mov
sahf
and
shlb
stos
fiaddl
lds
lret
loopne
or
dec
and
cwtl
mov
dec
sbb
out
jae
rcll
dec
mov
pushf
xlat
push
push
xor
out
dec
dec
aaa
mov
jno
dec
xlat
fdivrs
lcall
test
insb
test
imul
jge
cltd
sub
mov
jge
adcl
jne
push
push
icebp
mov
sbb
lods
mov
push
lahf
fnstenv
inc
pushf
mov
js
stc
cmp
and
insl
fucomip
stos
mov
inc
jp
fistpl
in
test
fs
cmp
cs
push
movsb
nop
push
mov
sub
iret
mov
add
call
fs
loopne
out
pop
sbbb
cmp
and
out
popaw
mov
pop
dec
pop
je
jmp
roll
jecxz
int
out
out
pop
dec
inc
test
call
dec
push
lods
pop
jne
mov
mul
fisubrs
fwait
push
shrb
pop
sub
negb
add
jmp
pop
fnsave
js
add
add
cwtl
pop
jge
out
add
xchg
lret
imul
in
mov
xor
ficompl
mov
ja
jecxz
out
add
push
adc
xorl
jl
sbb
lahf
or
addr16
jno
jg
in
in
jne
je
or
outsl
and
lret
xchg
cmp
push
nop
ret
jecxz
ss
cmp
inc
mov
in
dec
mov
shll
jge
adc
push
mov
mov
push
arpl
xor
xor
inc
stos
and
mov
rolb
ljmp
sbb
xorb
loop
push
int3
mov
xchg
mov
clc
dec
jns
pop
icebp
push
push
ja
add
lret
fdivs
cmp
jo
enter
jns
das
xor
outsb
and
xchg
adc
imul
jb
icebp
xchg
dec
or
mov
push
push
repnz
ret
addr16
mov
popf
and
das
pop
hlt
outsb
jg
xlat
nop
jno
dec
and
loope
decb
int
shl
sti
aam
xchg
jge
cmp
jns
sbb
mov
mov
test
sbb
daa
xor
clc
jecxz
dec
xor
mov
add
mov
pop
bswap
adc
ss
xchg
pop
inc
and
outsl
insl
ss
bound
lea
call
jp
sub
fdivl
insb
lret
das
pop
cmpsl
pop
stc
xlat
jge
aas
lods
ss
xor
enter
lret
adc
dec
fnsave
jo
aas
inc
leave
int3
sbb
jnp
push
test
aas
hlt
xchg
xchg
jnp
add
pop
jecxz
aam
mov
andb
ja
shl
jmp
mov
adc
mov
dec
rep
push
dec
cmp
sbbb
push
shrl
mov
adc
ret
dec
loop
fsubrl
push
pop
lock
loope
lock
sbb
imul
fcmove
in
xchg
xchg
xor
ret
cmc
iret
pop
xchg
sub
mov
dec
loope
popf
jae
dec
adc
or
lock
and
dec
xlat
adc
sub
and
dec
sbb
jbe
push
fsubs
or
rorl
rorb
dec
jbe
repz
jmp
pushf
test
cmpsb
loop
insb
cmovo
jo
xor
xor
shrl
adc
push
ss
push
popf
lcall
mov
xchg
adc
test
cld
or
cmp
nop
vandnps
lret
and
outsb
out
sub
cmp
mov
les
push
les
lods
adc
inc
xor
loope
cmp
movsb
clc
or
popa
out
outsb
outsl
adc
js
push
pop
cmc
icebp
pop
cmc
lods
mov
and
cli
xlat
jo
ds
add
jo
les
mov
pop
insb
xchg
ss
push
xor
sub
les
mov
push
dec
shll
jns
repnz
insl
cs
pop
lods
movsb
test
loope
sahf
cmc
push
test
pop
je
aam
sti
xchg
fidivs
xor
lahf
loop
andb
test
loop
cmp
push
push
xlat
mov
xchg
outsl
lcall
sbb
pop
dec
fisttpl
push
insb
cmpsl
lods
lds
mov
fldcw
jns
ficoms
push
in
imul
fs
pop
lcall
pop
out
xor
or
stos
mov
inc
ret
mov
mov
ret
adc
stos
daa
sub
mov
es
and
fcompl
aaa
jle
dec
in
fldt
ds
fucom
sub
sub
cmp
mov
push
add
push
add
js
jp
test
add
popa
adc
test
xchg
cmp
sbb
cmpsl
jp
push
push
push
lcall
mov
data16
ja
cmpsb
pop
out
push
push
jnp
sti
sbb
cmc
xchg
scas
push
pusha
in
or
popf
dec
shrb
scas
jl
and
push
imull
test
jle
movsl
jbe
repnz
test
mov
dec
push
cmp
das
sbb
push
shlb
fcomip
pop
dec
sbb
hlt
push
icebp
mov
iret
imul
mov
xchg
repz
inc
mov
outsb
push
clc
ret
andb
adc
pop
mov
jge
mov
repz
rorb
out
mov
pop
in
dec
lahf
mov
inc
mov
or
pop
aas
push
out
and
stos
inc
dec
mov
adc
decb
mov
insb
xor
lcall
cmpsl
mov
or
dec
outsb
lahf
sub
enter
adcl
lcall
inc
jno
dec
js
cmpsl
xchg
shll
stc
addr16
lds
mov
dec
adc
dec
push
fwait
xchg
dec
stos
mov
fmuls
sbb
out
lcall
cmp
xor
mov
cmp
aad
dec
aam
cmp
rolb
fs
setne
out
icebp
adc
xor
sbb
cwtl
cmc
pop
xchg
ja
mov
adc
mov
and
cmp
ja
cmpb
in
cmpl
jno
je
cltd
pop
inc
adc
in
adc
insl
jmp
and
icebp
dec
mov
push
in
pop
inc
das
das
clc
pop
jnp
in
dec
mov
xlat
inc
lret
sub
les
dec
movsl
fsub
sub
mov
cmpsl
dec
shrb
jge
loopne
negl
jbe
mov
loope
mov
push
aaa
push
pop
loop
das
mov
out
add
mov
mov
shlb
mov
dec
fstps
jp
sub
dec
or
cmpsb
dec
push
pop
mov
dec
jno
mov
arpl
sar
xchg
out
mov
xchg
stos
ret
insl
mov
shlb
push
das
jmp
and
xlat
or
fnstsw
mov
leave
cmp
cmc
mov
out
out
pop
pop
push
out
enter
les
addl
xchg
lods
in
mov
rolb
pop
hlt
es
pop
lock
mov
imul
xchg
mov
jne
sbb
mov
cmc
mulb
dec
ljmp
lods
outsl
mov
lds
fdivrl
je
pop
stos
int
shl
ret
mov
push
push
jmp
ret
and
inc
icebp
mov
imul
xlat
pusha
stos
int
arpl
sbb
xor
xor
mov
and
mov
out
into
dec
lret
sub
pop
lock
push
xchg
mov
sbb
test
inc
loopne
mov
in
es
loopne
sub
dec
xchg
adc
test
inc
cmc
test
mov
add
xchg
es
pop
aam
mov
mov
divl
int
mov
xchg
nop
lock
cltd
dec
xor
aam
inc
cmp
inc
pop
lcall
das
mov
pop
out
in
sti
jb
fcoml
fldenv
xor
xchg
inc
into
aad
sbb
mov
in
xor
movsb
xor
repnz
pop
pop
into
lds
ror
add
and
arpl
push
mov
push
ret
notb
fcom
mov
imul
notb
aas
dec
pop
iret
push
cmp
adc
jb
loopne
mov
push
sbb
mov
out
lods
cltd
sti
dec
cmc
mov
jp
loopne
fldl
jle
sub
cmpsb
jne
mov
dec
lods
push
xchg
int
sarb
imul
xchg
or
add
hlt
out
repz
outsb
inc
jo
repnz
arpl
xchg
test
inc
pop
adc
stos
jno
cwtl
fstps
mov
mov
popf
fs
call
mov
pop
cmp
dec
int3
mov
inc
mov
xchg
and
hlt
repz
mov
or
pop
imul
dec
bound
out
or
cwtl
push
fadd
iret
pop
into
in
and
pop
add
or
and
mov
iret
sti
jg
pushl
std
adc
sub
ficomps
sub
pop
xor
push
es
jo
mov
push
jb
pushf
loope
rcr
aad
rolb
call
jae
push
mov
loope
adc
jmp
add
scas
jge
movsl
mov
push
inc
movsl
mov
popa
adc
aam
push
shrb
adc
add
enter
push
xor
push
or
notl
jb
ss
inc
and
xchg
icebp
jmp
jo
jnp
fstpt
popf
push
push
test
add
inc
push
jge
cmp
jg
add
xor
test
int
jmp
vminpd
pop
xchg
ja
sbb
lahf
js
cmp
out
dec
push
ret
xchg
pop
enter
inc
or
and
les
aaa
push
mov
or
or
leave
mov
add
in
scas
jecxz
jmp
test
jns
int
jle
cmp
xchg
cmpsl
mov
mov
mov
ret
inc
ds
shrb
push
es
loopne
adc
mov
xlat
inc
pop
mov
arpl
sbbl
mov
nop
adc
pop
lahf
fsubrs
int3
mov
into
es
mov
je
fwait
add
add
sub
xor
sub
xchg
xlat
and
daa
mov
xchg
repnz
int3
add
xchg
xchg
cmpl
loope
xchg
sub
inc
arpl
aaa
dec
in
push
and
push
push
push
xchg
sbb
repnz
cs
jge
mov
push
shr
mov
sbb
loope
ror
les
repz
outsl
and
fs
jnp
xlat
frstor
dec
jne
lea
aas
out
xchg
in
mov
jle
notb
es
cli
loop
lds
cmp
mov
and
add
das
mov
xor
inc
popa
int3
cltd
dec
add
lods
out
fisubs
ja
sbbl
inc
shl
inc
test
or
sti
scas
sbb
stos
adc
push
frstor
enter
xor
mov
roll
bound
sahf
jns
cmp
pop
hlt
divb
movsb
lock
xchg
iret
and
push
mov
lods
sti
fildll
test
fidivrs
jle
inc
xchg
ret
xorb
pop
ret
pop
or
sbb
pop
loope
cmp
and
push
mov
sub
adc
inc
stc
or
sbb
and
ljmp
stos
cmp
mov
sub
cs
xchg
cmp
fldt
jge
int3
mov
rcll
jae
aad
lock
sbb
stos
out
movsb
lea
lahf
push
cwtl
stc
adc
xchg
cltd
push
imul
xchg
xor
test
xlat
mov
popf
aam
push
push
add
adc
fistpll
sub
sbb
mov
cwtl
outsb
jne
fldl
shr
mov
push
xchg
add
pop
das
aaa
adc
jo
pop
pmuludq
inc
scas
mov
aam
inc
out
mov
dec
aas
adc
mov
sbb
mov
inc
jp
fwait
push
hlt
in
cmpsl
popf
mov
jbe
loope
push
test
adcb
jae
lret
jbe
jnp
enter
clc
sub
or
fs
dec
in
mov
adc
ficomps
push
sub
ljmp
lock
sbb
les
push
lcall
xchg
pop
daa
mov
test
loope,pt
daa
les
mov
xchg
nop
popf
ja
repz
mov
pop
push
and
or
or
in
sub
push
cmp
mov
cmp
insl
mov
xchg
insb
lahf
dec
lds
pop
out
xchg
pop
push
dec
xor
pop
cmp
jae
and
fs
cwtl
fisubs
mov
test
mov
bound
outsb
fcmovnbe
sbb
call
filds
push
mov
data16
sbb
hlt
jmp
jnp
hlt
cs
cmpsl
xor
enter
push
ljmp
xor
sub
loop
mov
dec
fwait
cmpsl
or
int3
adc
jg
xchg
and
loopne
add
push
dec
popa
jno
outsb
adc
mov
lock
mov
mov
jns
or
dec
dec
ljmp
inc
out
daa
jno
push
je
lahf
rcl
mov
sbb
cs
fnstcw
jg
mov
pop
ljmp
jle
xor
mov
push
ljmp
icebp
imul
pop
xchg
inc
or
inc
jl
sub
out
insb
jge
orb
adcb
sahf
in
or
adcb
cmc
or
dec
sahf
sbb
adc
jno
push
out
cmpsl
test
cli
push
insb
stos
clc
repnz
testb
inc
jo
jl
sub
xchg
pop
cli
mov
adc
cmp
dec
jae
push
jp
into
lods
sbbl
movsb
lds
sbb
mov
mov
xor
dec
sub
cs
jb
out
and
add
jo
lahf
xor
ss
repz
sbb
or
pop
orl
lahf
mov
push
cmpsb
out
aaa
lret
mov
movsb
jl
movsl
fistpll
sbb
pop
out
xchg
cs
push
sub
mov
mov
push
pop
and
lods
fnstenv
lcall
out
dec
adc
sub
gs
adc
inc
mov
mov
xor
ret
orb
call
mov
inc
push
mov
aaa
mov
xchg
jb
add
js
and
ss
lods
leave
loop
cmp
mov
scas
clc
xchg
cmpsl
pop
lea
mov
mov
in
pop
push
pop
jmp
xor
mov
addr16
mov
test
pop
pusha
push
cmp
adc
mov
mov
inc
lret
loopne
test
lock
inc
arpl
in
testb
hlt
cmp
mov
push
pushw
pop
push
dec
arpl
sbb
adc
aad
jl
negb
xor
popf
mov
xchg
or
xlat
and
push
pop
dec
or
xchg
cmp
imul
lahf
cmc
pop
ror
sbb
lods
out
arpl
mov
ss
je
xchg
jle
insb
cmpsb
adc
xor
lahf
jle
pop
dec
pop
mov
out
mov
out
push
adc
mov
repnz
mov
mov
mov
jl
mov
std
rcl
lret
xchg
movsl
xchg
push
movsb
pop
ret
test
xor
ds
xchg
fists
int
fsubp
sbb
xchg
mov
inc
inc
sub
push
lock
cmp
in
rcrb
std
loopne
mov
lret
cmp
mov
inc
out
push
insb
roll
push
push
les
shlb
mov
decl
mov
inc
aaa
pop
dec
daa
push
mov
xor
loop
cmp
outsb
in
add
frstor
sub
nop
call
loope
jo
cmp
mov
xor
add
filds
dec
xchg
inc
bound
insb
mov
push
push
mov
pushf
into
jo
and
inc
cltd
shrl
mov
push
or
cwtl
adc
xchg
mov
sarb
cmp
adc
sbb
shll
adc
addps
xorl
stos
clc
pop
sub
pop
dec
cmp
xchg
insl
add
and
in
push
js
mov
mov
jne
sbb
mov
and
repz
daa
xlat
movsb
ljmp
jg
das
xlat
sub
hlt
pop
inc
xchg
aas
lock
sub
rcll
sbb
lret
jge
mov
mov
fidivl
stos
pop
adc
push
mov
daa
sbb
sbb
xor
push
popa
xor
xchg
js
mov
jmp
lds
and
jp
mov
orb
xchg
and
dec
pop
mov
ror
add
lods
dec
or
push
pop
movsb
bound
xor
pop
push
add
popf
aam
pusha
pop
fs
int3
inc
mul
sub
and
jp
movsb
pusha
movsb
setl
jmp
leave
cmp
scas
mov
ss
mov
jne
xchg
sub
and
xchg
fwait
lcall
mov
xchg
test
pop
scas
ljmp
adc
popa
shrb
insl
sub
sub
fidivs
mov
push
repz
mov
pop
and
xchg
lea
and
cmc
xchg
pop
std
lea
rcl
mov
fstpl
pop
mov
pushf
inc
push
pop
mov
and
or
push
sarb
mov
push
xchg
mov
push
stos
jecxz
sub
out
xchg
sbb
scas
inc
stc
inc
idivl
fstl
mov
mov
xor
ja
scas
dec
pop
jnp
je
or
adc
ds
test
or
mov
inc
lds
ja,pn
sub
xchg
xchg
pop
scas
dec
or
and
push
inc
enter
mul
jle
mov
push
inc
mov
mov
ret
call
fucomip
fdivs
je
mov
and
data16
sub
repz
jge
pop
ret
sbbb
pop
and
ret
push
cmp
mov
inc
sbb
jmp
cli
mov
or
mov
stc
dec
ss
int
outsb
scas
clc
adc
push
das
push
and
inc
cmp
xchg
fisubrs
adc
cmp
jl
fisubl
inc
xchg
mull
arpl
in
fwait
jnp
xor
lret
mov
jmp
fcoml
shr
jmp
movsb
es
sbb
ficoms
lods
sti
imul
and
push
test
jg
mov
outsb
dec
dec
mov
mov
jae
or
aad
lret
repnz
xor
mov
ljmp
rcrl
fs
jl
xchg
sub
xchg
roll
lcall
lods
fimuls
sub
mov
push
dec
sub
dec
mov
dec
gs
inc
frstor
std
jns
mov
jo
xchg
fisubrl
out
mov
xor
pop
mull
fwait
pop
jp
xchg
push
inc
imul
inc
test
jl
lret
jge
std
out
mov
inc
xchg
or
fcompl
hlt
loopne
add
lea
or
mov
sub
and
and
ror
mull
inc
cmpb
lods
jbe
or
lds
das
adc
dec
or
aaa
dec
xor
jmp
into
xchg
push
push
mov
es
mov
mov
pop
mov
adc
fwait
outsb
imul
bound
inc
inc
cwtl
repz
mov
mov
call
rcrl
and
shll
xchg
push
xchg
enter
sar
dec
and
and
popf
cmpsb
sbb
int
repz
mov
dec
dec
outsb
aaa
cmp
xchg
push
dec
push
test
sahf
and
add
repnz
pusha
pop
and
sahf
mov
mov
xchg
or
lea
int3
idivb
dec
aad
adc
xchg
ret
rcll
movsb
pop
jo
js
mov
cmp
cltd
mov
dec
sbb
sbb
fnstenv
fcmovnbe
pop
pop
lods
mov
mov
mov
call
cmp
decl
out
les
jne
idiv
call
out
add
rol
mov
out
xchg
push
lods
into
and
push
cmp
les
mov
cmp
cs
or
ja
mov
cltd
or
mov
fistl
es
jmp
mov
and
imul
sub
test
xchg
mov
popa
jb
stos
iret
out
outsb
xor
xchg
sbb
jecxz
cmp
fstpt
out
mov
addl
popf
pop
and
aaa
sub
test
cli
jecxz
mov
cld
adc
shlb
out
std
into
in
cmpsl
fwait
cmp
push
pop
jle
sbb
scas
sub
or
push
js
loope
dec
rorl
jp
into
inc
popf
xchg
call
push
dec
inc
lds
insb
pusha
cmp
xchg
push
outsl
mov
mov
mov
and
push
adc
sbb
cmp
in
and
hlt
xchg
mov
pushf
in
xor
xor
adc
pushf
int
mov
mov
pop
mov
sarl
mov
jle
mov
cltd
jle,pn
pop
or
cmp
sbb
cmpsl
pusha
pop
std
dec
repnz
mov
xchg
dec
jb
mov
pop
add
inc
fisttpll
jnp
pop
lea
lcall
sahf
xorl
xlat
into
dec
xor
aas
dec
jge
or
ror
loopne
cmp
mov
adc
insl
xor
loopne
push
dec
jbe
rcll
sahf
aas
shrl
scas
in
xor
xchg
test
ja
sarl
sti
ss
aam
xchg
pop
and
or
mov
xor
scas
sahf
mov
and
dec
or
dec
cmp
and
and
mov
out
lret
cmp
cltd
or
es
mov
cld
and
mov
outsb
pop
mov
inc
outsb
sbb
inc
jge
xor
sub
cmp
jno
mov
push
repz
jecxz
jge
outsl
bswap
ret
pop
adc
cs
aas
nop
mov
or
hlt
or
dec
int3
adc
je
xchg
sub
out
jo
jge
jmp
dec
and
inc
push
xchg
mov
cmp
divb
cmp
push
and
xchg
pop
in
fdiv
ret
mov
fcoms
add
mov
cmc
inc
insb
ljmp
out
inc
call
mov
dec
add
mov
push
movsl
ret
mov
or
decb
popa
fcompl
js
and
mov
out
sti
or
arpl
adcb
mov
mov
or
daa
clc
pop
mov
and
lds
ja
adc
xchg
fwait
pop
jge
out
adc
repnz
add
stc
jmp
adc
push
pushf
lret
jl
jge
mov
jb
rcrb
aad
rorl
sbb
sbb
push
xor
jae
movsl
add
xor
loopne
fwait
loope
hlt
or
push
xchg
jle
and
cmp
fnstenv
dec
or
pushl
xchg
sbb
cli
mov
mov
dec
jns
push
cwtl
loope
imul
aam
addb
adc
mov
xchg
out
mov
jl
adc
insb
flds
stos
pop
clc
lcall
cltd
ljmp
loop
aam
aad
jns
fistpl
aam
push
sub
push
sahf
xchg
test
push
pushl
test
dec
xchg
pusha
test
stos
dec
mov
mov
pop
jbe
mov
sbb
mov
stos
loop,pt
jecxz
roll
add
lcall
leave
push
push
jg
add
addr16
sub
jno
scas
mov
sbb
in
ret
and
pop
adc
loop,pt
pop
jp
filds
mov
push
mov
imul
mov
mov
cmp
mov
cmpsb
outsl
sub
push
sbb
jns
testl
push
push
roll
ds
daa
fcmovu
test
pusha
pop
pop
leave
fwait
push
cld
inc
nop
push
mov
loope
fs
adc
jnp
xor
movsb
inc
xlat
pop
pop
sbb
add
mov
cmp
ret
sub
mov
jno
push
std
mov
das
jno
mov
inc
hlt
adc
xor
mov
out
mov
cmpl
fs
sub
testl
sarl
pop
sahf
cmpsl
out
push
mov
aam
stos
dec
xor
pusha
out
push
mov
jge
cli
pop
push
in
adc
dec
inc
scas
fidivl
lods
cmp
mov
icebp
mov
sub
divl
mov
push
sti
lret
and
jg
js
and
loop
in
insb
enter
pop
xor
cmp
or
xor
imul
dec
inc
mov
push
mov
xchg
cltd
test
cmp
stos
push
jno
push
sub
adc
pop
dec
dec
and
stos
sti
inc
mov
bound
pop
xchg
add
jecxz
dec
les
and
inc
dec
and
outsl
ds
fists
mov
dec
mov
or
jae
push
xchg
mov
hlt
ffreep
loop
push
add
dec
hlt
mov
nop
std
lds
mov
pop
lahf
popf
lret
repz
cs
mov
leave
inc
or
repnz
pusha
arpl
ret
inc
pop
sub
xchg
movsb
test
dec
sbb
cmpsb
fnstenv
fsubs
xor
shrl
aam
fadds
fdivl
xchg
sbb
jae
testl
insb
mov
push
xchg
shl
pop
jmp
insl
mov
sbb
xchg
nop
int3
mov
pop
loopne
adc
xor
bound
movsl
cld
dec
sbb
out
repz
movsl
pop
and
ficoms
mov
mov
sbb
mov
mulb
pushf
adc
je
ret
xorl
adc
inc
sbb
fsincos
jmp
push
frstor
ss
mov
and
dec
mov
aas
sbb
mov
leave
clc
inc
sub
jbe
mov
jmp
xor
adc
mov
ds
outsl
xchg
cmp
fistpl
push
cmp
push
arpl
and
adc
inc
sub
out
shufps
jbe
add
mov
add
xchg
xchg
pop
das
fistl
or
mov
mov
push
pushf
mov
aaa
push
aas
std
gs
ficompl
scas
fbstp
jno
icebp
int3
mov
out
push
mov
cmpxchg
dec
andb
lods
dec
daa
jo
cmp
xchg
add
mov
mov
sti
inc
xchg
fwait
jle
xchg
lahf
sub
je
cmp
es
push
shrl
and
dec
arpl
inc
and
call
xchg
pop
inc
cs
cmp
push
cmp
hlt
sbb
and
push
aas
jmp
int3
cmp
lcall
sub
imul
test
clc
shr
inc
scas
fcomps
pop
lods
clc
dec
mov
data16
push
or
mov
or
repnz
insl
lahf
insl
xchg
pop
in
shrb
and
addl
fwait
adc
push
xchg
aam
sub
in
stos
and
jecxz
and
sbb
sahf
xor
sbbl
int
xor
cmp
and
cmc
mov
jp
bound
sbb
loopne
popf
or
add
push
fs
rcl
repz
cmpsb
daa
add
das
loop
cltd
mov
fmuls
adc
aam
push
xchg
dec
out
scas
sbb
rcr
jne
inc
into
call
int
jmp
mov
pop
dec
push
fistpll
lret
test
cmpb
and
push
jo
adcb
aaa
test
xchg
xchg
mov
dec
sub
pop
imul
lock
jnp
pusha
inc
inc
xor
or
jg
ss
inc
xor
xchg
add
mov
cmp
jge
jg
pop
imul
test
inc
mov
lds
fcoml
outsb
sbb
mov
pop
fs
xor
add
lahf
mov
cmpsl
leave
pop
mov
pop
pushf
cmpb
jg
inc
adc
aam
xchg
std
xchg
into
push
mov
sub
push
cli
inc
notb
dec
sbbb
outsl
jp
inc
out
hlt
push
adc
fistl
jne
dec
je
lds
popf
adc
or
add
push
xlat
jbe
xor
sub
dec
or
cli
inc
ss
lods
mov
xor
lea
mov
pop
lds
jae
pushf
lods
aaa
cmp
and
test
pop
jae
mov
jbe
pop
mov
pop
cmp
ficompl
aas
and
cmpsl
out
inc
fnsave
lods
aas
in
mov
divb
or
pop
neg
popf
in
enter
dec
lcall
mov
mov
das
mov
mov
out
jno
dec
shl
pop
jle
xor
aaa
fs
mov
shrb
xchg
sub
mov
movsb
dec
stc
pop
jmp
stos
jmp
ljmp
add
fiaddl
add
fs
ljmp
or
xchg
insl
push
push
in
sub
mov
mov
outsl
lcall
sub
aam
mov
pop
pop
push
sbb
inc
loope
dec
test
outsl
jmp
lods
cmp
jmp
lea
daa
and
out
and
mov
testb
jbe
lock
test
cmovg
fidivrs
orb
sbb
imul
push
or
cmp
popf
cmpsl
cmp
mov
ret
icebp
inc
sub
fadds
xchg
sub
jg
out
lods
pusha
pop
xor
adc
xchg
loopne
push
mov
push
sti
pop
push
xor
mov
xor
mov
jno
scas
mov
pop
mov
js
fimull
inc
mov
pop
sub
sbbb
xchg
leave
lds
pushf
sub
out
pop
mov
xor
std
pop
push
sub
jb
dec
loopne
es
inc
hlt
and
push
sbb
and
cmpsb
in
js
subb
loopne
mov
pop
hlt
sbb
imul
push
xchg
stc
js
imul
ja
loope
mov
adc
jge
sub
test
inc
fsubs
iret
andb
out
mov
int
pop
inc
shrb
gs
ret
inc
lods
inc
mov
data16
push
push
fwait
or
jmp
cmp
insl
mov
sti
push
aam
or
jecxz
push
jns
xor
push
adc
push
fcmovne
or
xchg
in
nop
jbe
daa
aaa
sbb
jmp
dec
aad
aaa
xor
xor
in
xchg
or
pop
jnp
enter
cltd
lret
lock
mov
sahf
dec
pop
insl
mov
sub
repnz
jl
fcoml
add
mov
test
add
pop
jg
test
int3
mov
mov
loopne
xchg
lret
lahf
push
xchg
icebp
call
out
push
mov
push
sub
ljmp
or
adc
or
jge
ret
ret
stos
mov
gs
mov
pop
mov
call
inc
sbb
movsb
call
imul
pushf
stos
stos
call
int
int
mov
in
jmp
cmpsl
insl
inc
sbb
insb
jg
pushf
js
sbb
aam
test
in
and
push
cmp
xor
cmpsb
sarl
sbb
mov
adc
inc
shrl
mov
rorl
mov
sbb
add
adc
jns
fs
jbe
pusha
jecxz
xchg
or
icebp
mov
or
cmpsl
push
and
scas
cmp
jl
and
test
nop
and
xor
test
inc
inc
adcl
add
insb
cmp
fcmovbe
popf
aam
rcl
add
hlt
adc
cld
push
outsb
jne
push
cmp
out
shrl
cmpl
add
mov
mov
add
js
aas
dec
pop
add
out
mov
add
mov
mov
push
shrb
mov
sbb
xchg
xchg
or
xor
inc
outsb
push
adc
decb
mov
push
pop
pop
add
movsb
and
sahf
mov
rcrl
cmp
push
push
xor
mov
test
and
popl
adc
sbb
mov
push
outsb
pusha
stos
mov
push
sbb
inc
jmp
cmp
xor
pop
cmp
push
mov
test
mov
sbb
cmp
ret
mov
les
and
hlt
sbb
jne
hlt
psubq
pop
add
mov
sbb
mov
cld
cwtl
xor
repz
movb
xlat
cmc
call
xchg
inc
mov
jg
pop
shll
pop
popf
fs
clc
pusha
mov
daa
mov
push
xchg
mov
dec
and
push
pop
fwait
std
int3
mov
push
jns
mov
fs
adc
mov
push
sbb
ret
movsl
daa
pop
pop
adc
mov
movsl
daa
out
push
push
imul
sub
nop
mov
pop
push
and
test
inc
xchg
inc
mov
test
add
sbb
out
jmp
pop
and
pop
jle
push
add
ret
inc
mov
add
xchg
pusha
stc
mov
dec
mov
std
and
xchg
mov
push
out
aad
mov
frstor
gs
scas
or
iret
inc
out
rcll
mov
sbb
mov
mov
adc
dec
dec
adc
fdivs
adc
or
aas
cltd
mov
sub
int3
sbb
xchg
cmp
jl
jg
mov
jg
aaa
adcb
fwait
jge
ja
push
out
lcall
mov
inc
push
lret
ds
adc
into
mov
cmpsb
or
adcb
in
or
test
lods
or
mov
xchg
push
sbb
aas
movsl
jnp
push
lods
aam
pushf
ds
in
and
cld
int3
inc
mov
cmp
aam
mov
nop
mov
test
fisubrs
mov
adc
test
dec
inc
daa
mov
insb
mov
dec
push
cld
push
daa
xor
dec
mov
xor
pop
add
and
ja
bound
je
push
scas
or
imul
fadds
mov
pop
lea
xchg
lcall
jp
jge
push
jo
add
jne
or
mov
pop
mov
push
pop
rcrb
lret
insl
inc
insb
daa
cmp
dec
sbb
jle
nop
cwtl
iret
into
pop
pop
cmpsb
push
mov
outsl
cmp
pop
mov
sbb
enter
jb
sub
sbb
rcrb
sub
in
sbb
icebp
div
movl
and
fwait
push
pop
out
xor
in
sbb
pop
clc
mov
es
sbb
fwait
pop
cs
inc
lods
cmp
dec
inc
jo
adc
es
in
xor
jp
adc
daa
adc
lock
into
ffree
push
nop
aas
aas
lods
roll
insb
dec
or
mull
push
outsl
cmpsb
ljmp
adc
or
mov
imul
add
clc
inc
ret
mov
lds
inc
pop
inc
fcmovnu
xor
lahf
xchg
imul
dec
mov
mov
sbb
xlat
xchg
sbb
loope
cltd
pop
popa
dec
ss
data16
xor
sbb
sub
add
adc
adc
rolb
dec
rolb
in
cmp
push
mov
xchg
pop
lret
ljmp
arpl
dec
aad
test
fwait
jmp
aad
call
je
cmp
subb
fisttpll
mov
bnd
lods
lock
scas
int
ret
lahf
out
mov
add
dec
adc
loop
xchg
jnp
mov
out
jp
and
dec
inc
outsl
mov
xchg
pop
jno
jae
out
mov
rorl
das
inc
push
pop
fidivrl
in
shlb
loope
loopne
push
pop
adc
je
cmp
mov
jnp
stos
xor
mov
inc
adc
add
leave
or
mov
xchg
mov
xchg
lret
or
mov
xor
sub
xchg
sub
lds
scas
dec
sub
lcall
inc
inc
sbb
fwait
ss
lods
movsl
in
fcmovnbe
pop
fiaddl
scas
popa
xchg
or
jae
pop
fsubl
popf
xor
scas
push
cmp
xchg
sbb
cmp
shld
dec
xchg
iret
test
jmp
cmpsb
push
fidivl
call
mov
sbb
fsubrs
fldenv
and
jb
jns
jmp
cwtl
aas
cli
addr16
inc
inc
dec
push
fadds
sbb
addr16
lret
mov
cmpsl
cmp
mov
cld
or
mov
rolb
jo
mov
or
scas
xchg
jae
scas
aam
jae
inc
test
inc
icebp
adc
ljmp
lea
test
fiaddl
dec
mov
lcall
fstl
mov
test
pop
lds
xor
je
sub
or
nop
sbbl
add
add
out
call
movsl
es
sarl
sub
nop
inc
jge
scas
push
test
aad
adc
js
out
inc
js
xchg
pop
mov
xor
cs
pop
mov
pop
mov
xchg
cmp
adc
mov
call
int
jmp
xchg
or
sbb
arpl
dec
stos
movsl
in
mov
xchg
lret
rolw
cld
js
wrmsr
into
cmp
xlat
jno
aad
test
inc
pop
mov
jmp
scas
push
fidivrs
mov
xor
into
int3
in
insl
inc
inc
jne
outsb
pusha
add
fisttpll
push
fistl
icebp
mov
daa
sub
dec
dec
push
dec
dec
sbb
mov
jb
scas
fisttpl
jbe
mov
ljmp
lds
dec
push
mov
lds
pop
cmp
cmp
iret
pop
inc
jp
cmc
cli
push
les
sub
lods
mov
in
mov
push
or
hlt
jne
sub
fs
cmp
xor
mov
ds
inc
or
push
jmp
inc
xor
jg
ds
mov
jp
cmpl
push
std
out
dec
jecxz
jecxz
in
mov
push
add
mov
insb
ds
lea
test
sub
push
mov
sub
or
jg
sarl
push
xchg
and
fnstenv
hlt
adc
pop
xor
and
dec
cwtl
cmp
sbb
bound
jnp
pushf
std
out
daa
mov
or
sub
dec
aam
xchg
jg
dec
mov
movsb
scas
fwait
test
bound
adc
pop
addr16
sbb
mov
pop
sub
xchg
fisubs
lcall
cmp
test
dec
imul
cvttps2pi
pop
sbb
fcoml
shll
sbb
test
sahf
pop
dec
inc
inc
pop
sub
cmp
push
out
mov
and
cli
jp
adc
adc
mov
imul
arpl
rclb
dec
or
nop
cmpsl
fcomip
mov
jg
addb
jp
insb
pop
cmc
ret
jecxz
and
dec
cmpl
int3
push
inc
mov
mov
cmp
iret
push
lahf
adc
shlb
sbb
jg
sub
mov
in
or
imull
jg
cmp
orb
inc
and
lea
push
test
or
and
cmp
loope
mov
push
stc
fs
inc
sti
adc
or
push
lcall
mov
lret
xchg
pushf
or
add
push
push
pop
sbb
push
vmwrite
call
shlb
xchg
add
sbb
lcall
push
out
jle
ret
in
pop
inc
mov
pop
jle
and
je
cmpsb
and
orl
or
je
in
fmulp
push
mov
lds
and
dec
push
xchg
push
xchg
js
addr16
mov
cmp
cmp
cwtl
decl
fcomps
out
xchg
andl
mov
lods
pop
mov
enter
hlt
sbb
and
in
dec
inc
cltd
and
jg
lcall
or
and
xchg
pop
mov
dec
mov
xchg
lods
xor
lods
mov
stos
pop
cwtl
mov
lret
popa
fcmovnu
dec
jo
adc
dec
negb
cmc
lea
lahf
jae
push
dec
jae
xchg
ret
daa
cmp
xchg
cmp
test
jg
insl
mov
inc
mov
xlat
mov
std
mov
lcall
push
addr16
int3
scas
imul
mov
int
popf
and
cld
push
cltd
andl
test
mov
inc
leave
je
negb
repz
dec
mov
xchg
hlt
inc
sbb
jae
cmp
sub
jp
cld
jae
daa
xlat
adc
xchg
aad
in
cld
push
call
mov
sbb
cmpb
xor
mov
add
aas
test
mov
insl
and
mov
inc
inc
leave
jae
mov
sbb
mov
mull
or
pop
cmp
or
cmc
addb
and
pop
cmpsl
dec
cmp
cmp
ds
mov
imul
lock
mov
push
outsl
pop
jle
inc
mov
adc
lcall
ja
out
pop
imul
das
stos
shrl
enter
ficoml
cmpsb
lret
pop
mov
mov
push
cmp
mov
cmp
sub
repnz
loopne
fcmovnb
in
cmp
xchg
rorl
scas
jne
rorl
lods
ja
jno
or
sarl
pop
leave
inc
icebp
andl
and
test
jns
out
enter
imul
pop
push
fiaddl
jp
subb
push
mov
out
jb
in
jge
lock
xchg
mov
pop
sbb
leave
add
inc
push
or
fisubrs
sbb
cmc
and
xchg
inc
push
sbb
sbb
jge
stc
dec
add
sbb
idivl
cld
loope
adc
es
pop
mov
jae
jns
adc
outsb
inc
mov
dec
test
push
push
add
or
adc
pop
mov
mov
dec
xor
imul
pop
pop
or
mov
loop
xor
loop
ds
nop
lds
xor
popf
xchg
inc
insb
cmp
adc
lea
lahf
xchg
cmp
or
pop
test
mov
test
stos
pop
jge
inc
xor
in
idivl
fimuls
sub
pop
jne
lds
jns
xchg
stc
jle
add
aam
sub
sahf
jg
mov
xchg
mov
ja
mov
lret
pop
cmp
cmp
mov
into
scas
jnp
dec
or
cmp
push
sbb
loope
icebp
mov
fiaddl
xchg
xlat
push
popa
xchg
cld
mov
jno
int3
jmp
cmp
inc
out
jae
and
imul
sbb
mov
sbb
lret
outsl
leave
mov
push
xchg
test
xor
fnstenv
sbb
sti
pop
or
mov
adc
pop
sahf
pop
aaa
fsubl
aam
mov
pop
sbb
or
pop
rolb
movsl
lahf
push
pop
lods
jo
add
andb
aam
mov
and
jl
int
mov
dec
fcomp
je
ss
stos
stc
inc
dec
scas
and
dec
sub
inc
add
jle
or
shl
mov
pusha
mov
jne
mov
je
mov
faddp
in
push
test
ljmp
or
mov
scas
mov
xorb
test
pop
mov
icebp
xchg
mov
pop
shrl
test
int
sbb
jno
lret
ror
nop
std
adc
fcmovnu
sub
cld
mov
sarl
int3
push
sti
jp
push
mov
mulb
xchg
xchg
or
lea
sub
clc
inc
inc
cmp
daa
stos
movl
xchg
push
and
or
cmp
out
sbb
arpl
test
xchg
cmpsb
xor
pusha
jecxz
outsb
pop
out
outsl
cmc
mov
faddl
sub
pop
jle
inc
inc
sub
inc
adc
test
addr16
out
xchg
in
adc
aas
adc
inc
mov
daa
xchg
sbb
shl
inc
mov
cmp
push
mov
lds
movsl
xchg
inc
adc
push
xchg
sub
jns
jg
sub
pop
xor
jns
pop
xchg
or
xchg
int3
mov
aad
pop
cltd
das
jge
or
mov
or
fs
push
pop
xor
mov
mov
in
push
ja
movsl
repnz
mull
in
cmp
jo
sarl
jae
cmc
and
xchg
push
jge
fs
mov
test
rolb
mov
roll
pusha
les
stc
sti
into
movsb
sub
xlat
and
mulb
movsl
push
xor
push
shr
shlb
and
ret
xchg
cmp
dec
lahf
clc
insl
imul
das
pop
outsl
jno
rorb
out
mov
push
movsl
sbb
mov
mov
fld
pop
cmp
lock
sti
add
inc
jg,pn
stos
gs
js
xchg
jo
aas
mov
hlt
or
popf
adc
pop
mov
cmpsl
js
adc
pop
adc
push
lds
xor
adcb
repz
lds
xlat
push
arpl
mov
nop
lock
inc
jb
and
jo
shll
inc
or
cld
inc
xor
add
mov
jb
mov
jmp
rolb
push
mov
testb
push
sbb
bnd
mov
mov
push
outsb
daa
push
jnp
dec
mov
pop
add
hlt
inc
pop
roll
scas
ret
orl
or
fmull
cmpsb
mov
or
lea
lahf
add
mov
and
mov
das
loop
fwait
dec
sub
pop
xchg
ljmp
fadd
lahf
mov
and
in
data16
hlt
mov
mov
movsb
xor
jmp
scas
mov
inc
lahf
sub
push
div
rcll
mov
sbb
cld
aad
sub
jp
jl
iret
add
fimuls
push
adc
cmpb
pop
testb
in
cmp
mov
and
add
xchg
cltd
stos
mov
int
fsubrs
iret
inc
rcll
cli
inc
les
movsl
pop
aas
dec
test
cli
dec
mov
jl
add
jmp
shlb
mov
mov
or
fdivl
in
lret
ret
or
cmpsl
aas
inc
mov
loopne
xchg
pusha
mov
insb
jns
in
add
or
scas
fimull
pop
cmpsl
push
std
ds
movb
shr
popa
cmpsl
les
dec
jbe
sbb
addr16
jmp
dec
mov
mov
les
mov
sub
out
in
mov
pop
movsl
adcl
mov
mov
cli
adc
rclb
rclb
addr16
int3
ja
pop
jmp
jno
sub
ds
popa
daa
nop
and
xchg
test
sub
xor
xlat
aad
gs
mov
movsl
push
lret
lock
sub
cwtl
and
clc
xchg
insb
mov
inc
ret
aaa
inc
xchg
mov
cli
into
push
jns
test
sub
movsl
loop
fisttpll
mov
sub
pop
pop
int3
pop
and
adc
pop
lahf
in
adc
mov
and
ret
aaa
lret
les
pop
lret
mov
ja
push
sub
pop
ljmp
testb
mov
dec
lock
lret
xor
lods
in
repnz
pushf
aad
pop
inc
push
movsb
cmp
les
sbb
gs
push
sahf
cltd
fs
xor
adc
gs
in
cmpsl
stc
int
lret
pushf
cmpsb
push
inc
sub
pop
pop
repz
lock
out
mov
mov
inc
inc
pop
pop
ljmp
pop
jl
hlt
aaa
adc
mov
adc
add
add
cmp
gs
jo
or
xor
mov
addr16
scas
push
and
lods
js
mov
xchg
mov
pop
movsl
je
mov
or
enter
stc
in
scas
push
out
ljmp
inc
out
add
movsb
mov
jp
mov
and
out
orl
push
push
test
and
sub
test
inc
cmpsl
ret
pusha
add
notb
icebp
pop
sbb
jmp
dec
jnp
and
jno
mov
lods
out
das
mov
dec
xchg
cltd
push
pop
lock
out
and
sahf
mov
fimuls
xchg
hlt
mov
cwtl
icebp
pop
xchg
push
repnz
mov
jp
pop
mov
gs
hlt
mov
cs
push
inc
push
aam
cmpsb
out
sarl
nop
into
or
mov
test
jle
ja
mov
dec
popl
outsb
pop
jmp
mov
mov
rcr
inc
mov
aaa
leave
xchg
ja
inc
dec
cmp
jns
inc
and
jp
mov
gs
cmp
adc
dec
iret
mov
shrb
xchg
dec
pop
sbb
js
xchg
push
xor
insl
sbb
punpckhwd
or
jno
jl
lcall
popa
mov
xchg
shlb
mov
in
mov
adc
inc
sub
ret
sub
scas
adc
ja,pt
adc
inc
sbb
xchg
sbb
mov
sub
lea
cwtl
js
out
add
jmp
and
jp
adc
insb
sub
lods
hlt
jno
adc
jae
stos
push
loopne
dec
xchg
mov
add
std
shld
pop
repz
xchg
in
xchg
jae
adc
mov
xchg
jle
sub
mov
repz
sbb
lahf
hlt
in
mov
dec
gs
xchg
int
ret
mov
movsb
lods
cmpsl
mov
ss
rorl
and
stos
inc
out
sub
or
sbb
sub
pop
jnp
insl
outsb
int3
repnz
icebp
outsl
inc
add
mov
add
or
cmp
popf
cmpl
pop
sub
xlat
mov
jo
test
rorl
pop
mov
imul
ds
ficoml
dec
movsl
xchg
jno
or
sub
mov
sbb
imul
adc
pop
or
nop
es
dec
bound
stc
out
cmp
xchg
loop
xor
insl
movsl
mov
fxtract
int
pop
sub
int
and
cmp
or
call
enter
xchg
cmp
iret
mov
imul
popa
fcmove
inc
mov
mov
cld
out
mov
ds
stos
adcb
popf
mov
mulb
and
and
push
sbb
or
inc
push
xor
pop
xor
pop
insb
adc
sti
imul
sti
inc
arpl
adc
cs
sub
stc
popf
lahf
jbe
mov
sub
ret
inc
cmp
ss
addr16
sbb
push
popf
dec
mov
mov
dec
push
dec
sub
xlat
xor
mov
and
mov
jl
mov
pusha
enter
outsl
sub
test
test
std
xchg
inc
lea
cmc
xchg
mov
xchg
inc
cmp
inc
pop
fwait
lea
ds
and
addr16
adc
ret
stos
adc
mov
std
mov
or
ljmp
pop
loope
cmp
sbbb
inc
xchg
and
aam
dec
xlat
mov
add
cmp
mov
aas
cmp
subl
daa
mov
out
jg
sub
cmovne
jmp
jo
lahf
cmp
int3
fisttpl
ds
movsl
dec
cld
fnstenv
cmpsb
push
push
outsb
test
mov
imul
clc
aaa
push
sbb
dec
cmp
lock
filds
bound
jae
xchg
cmp
inc
mov
rorl
cmp
inc
pop
pop
sub
xor
popf
loop
cmp
arpl
xchg
push
jnp
pop
pop
mov
out
testl
jb
pop
leave
xor
jo
sbb
popa
out
mov
out
icebp
or
jp
mov
xchg
test
jecxz
out
mov
add
xor
add
xor
xchg
jns
int
dec
lds
xchg
fdiv
incb
outsb
addr16
and
je
inc
pop
push
cltd
mov
push
push
cmpsl
int3
jl
lret
adc
aas
fmuls
out
and
dec
imul
sbb
and
in
mov
xchg
adc
mov
or
push
arpl
insb
mov
adc
sub
sub
lret
or
fucomi
sbb
and
cmp
jle
pop
test
in
jns
adc
int3
add
aaa
dec
xchg
sbb
das
cmpsb
pusha
sti
call
mov
xchg
lods
aad
rol
loope
lods
inc
xchg
adc
es
sbb
or
mov
mov
aas
pmulhuw
jg
stc
scas
xor
xor
fiadds
je
jmp
inc
sbb
arpl
addr16
mov
or
mov
outsb
cltd
cld
fs
add
xchg
cmp
dec
cmp
sbb
sub
into
adc
pushf
lcall
mov
fstl
sbb
roll
add
inc
ret
fiaddl
fcmovnbe
lahf
mov
bound
mov
andb
insb
inc
inc
sub
push
popa
imul
test
cs
cld
les
add
or
cmc
scas
rcrb
sub
add
pusha
xchg
adc
daa
repnz
insb
or
cmp
cli
push
cmpsl
out
pop
and
or
push
pop
test
jnp
popa
insl
lret
pusha
xor
pusha
leave
mov
xchg
shrb
mov
push
adc
lods
jae
mov
push
scas
cwtl
lods
call
add
cmp
out
int
pushf
in
cmpsb
pop
cmp
xchg
mov
mov
pop
adc
push
mov
scas
rcrl
jbe
dec
add
rcrb
jne
add
sub
pop
mov
push
mov
mov
adc
out
hlt
push
data16
mov
stc
xchg
mov
inc
add
sar
cmpsb
outsl
dec
ja
dec
dec
out
dec
inc
xchg
nop
jmp
mov
push
ja
scas
pop
mov
movzbl
xor
sub
orb
cmpsb
or
xor
arpl
push
or
loope
xor
and
fs
jge
pop
mov
repz
push
cld
pop
jmp
aas
sub
sub
call
fsub
lret
lret
add
test
sbb
add
xor
pop
xchg
gs
push
ljmp
movsb
aas
xchg
lods
lret
dec
insb
test
adc
inc
pusha
push
push
ljmp
pusha
mov
jb
sub
pop
jbe
push
jmp
lret
mov
xchg
mov
cs
jnp
mov
mov
mov
cli
popa
out
lea
xor
sbb
and
xor
cmpps
xor
fdivrl
xor
je
mov
test
je
imul
and
inc
dec
aaa
push
push
sti
movsb
lret
or
daa
popa
xor
xchg
or
test
xchg
pop
sahf
cmp
add
inc
arpl
push
fidivl
out
js
int
mov
push
sbb
iret
sbb
cmp
xchg
scas
jno
jne
sbb
sarb
mov
xchg
fwait
xchg
jb
and
mov
outsb
sbb
mov
mov
out
cmp
ret
lods
add
xor
pop
push
pop
push
shr
cmpsl
and
cmp
pop
sbb
mov
in
cmp
incl
jmp
xor
outsl
mov
dec
add
fistpl
pusha
jbe
sahf
cltd
aam
adc
lahf
out
dec
ljmp
jns
sub
ret
rclb
lcall
repnz
mov
faddl
or
sbb
push
add
repz
dec
jmp
movlps
push
or
sbb
pop
cmp
aad
lods
mov
inc
sbb
and
dec
std
cltd
fildll
repz
pop
cltd
sub
jp
xchg
ja
cmpb
cmpsl
jo
fiaddl
mov
icebp
movsb
lret
sub
insb
jae
lea
popf
lcall
rorl
mov
iret
jg
jmp
sub
loope
or
mov
jp
cmp
aaa
xchg
xor
mov
in
ljmp
push
out
cmp
mov
addl
mov
sahf
pop
cmp
hlt
sahf
sbb
mov
jnp
enter
les
ljmp
aaa
xchg
je
addr16
adc
fcomps
push
lods
int3
arpl
stos
jne
mov
in
incl
addr16
sbb
xor
sub
hlt
aaa
jns
mov
push
movsl
stos
cli
xor
add
movsl
cmp
mov
sub
mov
jge
inc
and
lret
aaa
and
sbbl
xchg
data16
daa
xor
test
pop
sbb
dec
push
cmp
clc
inc
mov
jl
clc
sub
or
pop
xchg
gs
imull
push
pop
call
pushf
addl
xor
shll
push
jg
stos
and
insb
adc
cmp
inc
cmpsb
mov
dec
xor
mov
shrb
jle
cmp
lret
sahf
pop
ss
mov
ror
mov
mov
lea
repnz
pop
xchg
push
sbb
js
pop
dec
cmp
mov
aad
sub
inc
fisubrs
imul
in
sbb
loopne
add
mov
inc
lret
aaa
pop
mov
test
push
mov
incb
cmp
jp
pop
push
jo
jle
test
dec
nop
cld
jl
mov
push
stos
addr16
daa
imul
pop
xchg
lods
rorl
dec
sbb
or
adc
fcmovnbe
push
loopne
in
aad
mov
dec
cmp
xchg
out
jmp
inc
mov
notl
rcl
ljmp
push
cmp
fwait
shl
mov
filds
popa
mov
bound
xor
imul
stos
xor
add
lea
push
xchg
test
adc
aad
inc
add
popa
jne
stos
mov
bound
pop
cmpsl
fiadds
push
adc
inc
cs
lahf
jo
rol
and
dec
jecxz
adc
xchg
mov
pop
sub
aam
add
jge
mov
andb
or
mov
stos
and
xlat
filds
xor
orb
stc
pop
cwtl
popa
fbstp
movsb
movsb
and
adc
mov
sbb
rol
push
in
mov
arpl
cltd
pushf
repnz
push
pop
jecxz
testb
cmpsb
xchg
dec
dec
dec
mov
jg
loopne
out
fildll
xchg
movsl
cwtl
repnz
xchg
shll
and
xchg
push
xchg
pop
push
push
xor
clc
and
xchg
fldcw
stos
xchg
push
std
mov
gs
ja
out
je
push
pop
sahf
cld
shll
add
pop
sub
pop
xor
cmpsl
loope
sbb
pop
sub
cs
movsb
test
inc
roll
mov
mov
iret
cld
loope
aaa
loopne
xor
mov
cmpsl
mov
pop
sarl
sti
cmp
pop
sub
imul
inc
jg
lods
stos
div
test
fildl
jle
neg
daa
insb
xchg
sub
lock
cltd
xchg
and
mov
fnstcw
mov
data16
pop
lea
cmp
push
fimuls
pop
icebp
arpl
dec
xchg
movsl
xor
mov
les
mov
out
jbe,pn
mov
jno
mov
push
cmpsl
mov
cmp
loop
fisttpl
push
mov
adc
stos
rorb
dec
fsts
loopne
jle
inc
addr16
cld
xchg
test
cmp
jp
push
xor
mov
mov
sbb
and
push
mov
pop
and
cmc
imul
in
scas
dec
mov
adc
dec
fdivl
insb
mov
mov
lods
aas
loope
lcall
dec
pop
insl
nop
test
mov
xchg
ret
inc
adc
mov
cmp
out
sbb
sti
cltd
shlb
pushf
xchg
adc
cld
es
cwtl
scas
mov
test
xor
std
push
add
xchg
add
fldenv
xor
daa
shrb
fimuls
add
mov
push
test
xchg
aad
data16
imul
pcmpgtw
adc
hlt
or
mov
mov
and
sbb
mov
pop
cmp
dec
xchg
ljmp
adc
outsb
jge
mov
stos
pop
pop
out
mov
cltd
cmovo
hlt
dec
push
icebp
mov
mov
aaa
push
lods
mov
xlat
cmp
mov
xchg
push
cmp
add
mov
repz
adc
push
lahf
ljmp
xor
idivb
sbb
mov
mov
scas
out
mul
dec
das
imul
jbe
mov
lods
sbb
lods
sub
pop
mov
inc
cwtl
int3
push
mov
xor
addl
rorb
push
lods
adc
aaa
rorl
lods
addr16
xor
cmpl
mov
jg
sub
shlb
stos
sub
xor
stos
xor
mov
jae
push
xchg
shll
sub
testl
mov
stos
mull
stos
jecxz
jnp
pop
in
mov
shll
mov
mov
stos
mov
imull
outsb
push
cs
mov
loope
int3
cmp
adc
gs
xchg
mov
pop
insb
xchg
dec
into
rorl
into
fmuls
aaa
and
add
call
movsl
dec
popf
fistps
sbb
pop
roll
or
vmovntps
or
mov
push
sub
jecxz
sbb
test
insl
mov
jle
pop
dec
jae
push
inc
adc
lret
mov
test
xor
in
dec
push
inc
into
movb
rclb
xchg
loope
test
cmpsb
pop
jb
pushf
dec
pop
loopne
aaa
js
mov
mov
pop
xchg
jmp
les
mov
shrb
mov
mov
push
insb
ljmp
xchg
ret
stos
pop
jae
ljmp
mov
mov
fdivs
out
xor
xchg
rep
or
jo
popa
fcomps
icebp
sbb
cltd
out
mov
cmp
lods
insl
cld
mov
loopne
xor
sbb
mov
push
stos
ja
sbb
xor
push
cmp
stc
inc
mov
test
xor
pop
adc
loopne
nop
dec
xchg
mov
clc
mov
add
mov
mov
pop
sbb
cld
mov
jae
xlat
cmpsb
push
movsl
sbb
cmp
insl
pop
sarb
xchg
mov
cmpsl
insb
push
ud2
fsubrp
pop
xor
pop
mov
jae
cltd
popf
xchg
xchg
add
cmp
stc
sub
arpl
mov
pusha
mov
push
out
cmp
push
cwtl
dec
out
lods
nop
arpl
inc
cmp
aad
xchg
mov
dec
jae
mov
arpl
sbb
dec
sbb
call
xlat
jmp
into
cmp
cmp
mov
scas
cmpsb
daa
mov
xor
je
mov
inc
mov
jmp
dec
inc
pop
enter
int3
mov
scas
pop
lcall
out
in
stc
ja
inc
push
mov
jae
popf
push
jo
testl
and
mov
and
adc
fs
xor
xorb
mov
decb
lds
cld
sarb
out
fldl
push
hlt
dec
mov
mov
cmp
add
jecxz
int
xchg
scas
test
insl
aad
data16
aaa
ljmp
pop
ja
or
popa
js
shr
out
pop
jmp
mov
or
ret
xor
xlat
xor
cmp
loopne
cmp
es
sbb
aas
jnp
or
out
iret
sahf
cld
rcll
xor
lcall
and
cs
aaa
lret
test
sbb
divl
jle
lods
into
jnp
mov
cmp
mov
call
and
xor
mov
mov
shll
sub
decl
imul
cmp
aaa
pop
inc
jnp
out
movsl
int3
ret
cmpsl
jno
repz
add
mov
add
mov
cmp
wrmsr
cmp
push
sub
cmpsl
mov
inc
adc
push
out
std
jg
mov
mov
fwait
insl
popa
leave
jge
ficoml
sbb
divb
loop
jno
inc
mov
pop
out
sbbb
push
in
int
fwait
sbb
fldl
inc
sbb
sub
mov
or
bound
and
xor
sub
inc
mov
in
dec
insb
shrb
inc
arpl
rcll
or
ret
cs
lock
cli
ss
arpl
cltd
xchg
out
sbb
xor
ds
popf
sarl
das
rcrb
jae
daa
les
xchg
sti
or
push
adc
lcall
xchg
lds
mov
pop
push
adc
sub
xchg
dec
cmp
push
daa
lcall
cmp
pop
imul
ret
push
fisubrl
add
in
jle
mov
sti
out
xorl
inc
repnz
cmp
cmp
cmp
xor
xor
fidivl
jb
jle
or
rol
idiv
cld
xor
sub
sbb
and
daa
or
clc
daa
enter
sbb
sarb
mov
outsb
aad
xor
sbb
repnz
jns
fwait
inc
inc
push
call
ljmp
push
sub
sti
pop
ss
aas
pop
int
jmp
mov
mov
xor
leave
xchg
ljmp
mov
xor
dec
mov
adcl
and
mov
aad
cmp
lea
xor
adc
sbb
mov
mov
sbb
pop
sub
mov
jecxz
xchg
out
lods
scas
push
stos
add
mov
cmp
cmp
xor
lods
cmp
jmp
mov
fstpt
pop
dec
adc
adc
and
add
repnz
sbb
imul
imul
shll
in
dec
out
jns
cmp
imul
in
mov
mov
push
jp
icebp
jno
insl
xchg
lock
incb
add
pop
jmp
aam
popa
cld
lods
aas
sti
mov
mov
test
sub
jge
jmp
test
int3
jbe
int
xchg
cmp
xor
xchg
xchg
popa
loopne
movsb
bound
lahf
sbb
adcl
xor
loopne
xchg
dec
in
jg
das
sub
adc
pop
sbb
push
in
repz
or
rcrb
mov
mov
imul
sub
stc
sarb
xor
cmp
shrl
mov
mov
jb
cwtl
push
dec
xor
xchg
xchg
xchg
lahf
cmp
push
decl
cmp
cmpsb
xchg
mov
xchg
movsl
rclb
mov
add
enter
outsl
cmp
fwait
push
imul
jle
addr16
leave
inc
cld
lcall
in
outsl
shlb
push
data16
adc
push
push
inc
push
cmpsb
xor
es
fwait
clc
insl
jo
mov
xor
ja
dec
ret
aad
insl
sub
cmpsl
xchg
lock
push
pop
iret
call
mov
cmc
push
dec
andl
lahf
popf
mov
test
mov
mov
inc
and
and
cli
dec
pop
sub
int3
ret
or
add
popf
cmp
lods
cwtl
jg
inc
adc
ficomps
out
add
mov
mov
fwait
cmpsl
mov
cld
fistpll
sub
and
jle
mov
into
and
jnp
cmpsl
jnp
mov
add
int
cli
pop
rclb
xlat
add
out
xor
sahf
lods
and
mov
cmp
pop
or
pusha
negb
cmpsl
cmp
imul
mov
repnz
sti
push
imul
rol
xor
call
xchg
push
inc
jbe
xor
cmpsl
lea
je
or
mulb
pusha
inc
sbb
cmpsb
enter
mov
push
iret
rorl
or
in
cmpsb
pop
cli
inc
push
add
and
push
mov
popf
cmp
pusha
scas
jge
stc
push
or
sti
sbb
mov
cs
pop
xchg
jecxz
mov
push
mov
add
jg
mov
inc
or
pop
mov
and
cmpsl
jae
int
insb
and
jne
test
jbe
cwtl
cwtl
mul
xlat
rcrl
and
clc
add
adc
fcoml
out
push
push
arpl
hlt
out
mov
sub
enter
mov
repz
pop
imul
mov
dec
gs
test
jp
mov
cltd
jge
jno
xor
fildll
popa
or
adc
addr16
stos
cmpsl
xchg
ljmp
dec
or
inc
jmp
adc
inc
testb
xchg
fildl
and
xchg
push
in
enter
dec
bswap
or
das
push
mov
or
xchg
cld
sub
push
inc
mov
mov
ja
ret
sbb
fld
adc
jge
inc
jne
push
push
mov
xchg
adc
sub
cmp
data16
test
dec
push
cmpsl
loope
dec
and
lods
std
sub
push
jno
pop
cmpsl
pop
call
sqrtps
inc
add
adc
mov
jle
sub
xchg
ja
or
fnsave
add
or
adc
xchg
sbb
outsl
je
xor
ret
mov
fdiv
cwtl
stc
ja
inc
fdivrl
test
xor
or
jbe
orl
add
mov
loopne
scas
shlb
cmp
cmp
pop
repz
inc
mov
in
dec
push
push
shl
and
or
add
stc
pop
stos
push
mov
lret
test
stc
and
mov
mov
ficoms
aas
hlt
or
xchg
sti
shl
push
and
mov
mov
cmp
aas
xchg
or
push
rclb
jle
xor
daa
roll
add
xchg
or
lahf
shll
punpcklbw
jnp
out
jmp
xor
ret
or
mov
adc
push
push
into
or
scas
int3
bound
ffree
mov
jp
popf
daa
out
shrb
or
repz
sub
inc
push
lock
fwait
lea
inc
std
xchg
xchg
ret
and
dec
jo
sti
inc
sub
xor
sar
jl
mov
lret
ljmp
xchg
cmp
pop
pop
shlb
daa
mov
fucomp
dec
jge
xchg
fwait
int3
scas
fwait
lahf
cmp
jge
shlw
sbb
rclb
fsubp
fistpll
mov
pshufw
mov
stos
aam
outsl
adc
mov
pop
or
pop
out
cli
lret
fdivrl
and
jo
sbb
fadds
dec
aad
imul
jl
outsb
sub
out
sub
gs
jo
or
sub
xchg
push
in
outsl
xchg
cld
nop
fwait
outsb
xorb
arpl
inc
cli
dec
mov
rcr
dec
test
imul
into
mov
xchg
adc
rolb
je
jmp
inc
pop
cmp
in
lret
mov
mov
mov
jne
jb
xor
daa
imul
sbb
lea
adc
testl
lret
add
mov
mov
and
pop
cli
inc
or
push
mov
int3
sbb
cli
mov
lret
inc
xor
mov
jne
fists
imul
aad
int
gs
inc
sub
jge
dec
cmovp
cmpl
cmp
call
cltd
or
xor
rcrl
test
jmp
insl
into
or
mov
sub
inc
adc
in
or
or
jecxz
test
or
mov
adc
testb
sub
lods
push
mov
mov
mov
subl
loope
aas
adc
rcrl
ret
push
adc
call
mov
and
cmp
xchg
cmc
jmp
repz
xchg
rcll
dec
popf
mov
out
push
insl
xchg
pop
adc
jg
xchg
or
ds
mov
pop
mov
scas
jecxz
std
xchg
inc
loope
ficomps
ds
or
pop
icebp
jle
icebp
fbstp
scas
dec
ja
leave
mov
rcrb
jmp
insl
leave
jmp
jb
dec
mov
dec
orl
repnz
add
dec
xchg
xchg
jne
stos
mov
inc
aam
pop
cmp
or
or
leave
dec
mov
cmp
test
ja
sbb
out
test
sbb
jno
insb
test
sub
test
mov
pop
mov
inc
fnstenv
cmpsl
and
fcoms
das
test
push
xchg
test
xchg
imul
js
and
xchg
jno
lret
inc
lods
daa
push
es
repnz
cmpl
jecxz
cmc
cmpl
scas
mov
mov
adc
inc
ret
stc
sti
mov
hlt
xlat
popa
xchg
popf
jns
mov
sub
mov
add
mov
or
fs
and
out
inc
stc
aad
add
call
and
data16
sbb
lahf
test
and
cwtl
vmread
idivb
nop
sub
mov
jns
jge
push
push
add
xor
mov
incl
adcl
addr16
mov
cmp
test
popf
ret
mov
mov
repnz
xchg
jno
pop
inc
rorl
pop
add
or
inc
fs
jle
ret
mov
stos
pop
jb
and
cmp
pusha
cmpsl
sbbb
jae
rcll
push
add
mov
inc
icebp
mov
mov
daa
sbb
xchg
in
adc
outsl
cmp
xchg
pop
das
add
push
xor
clc
test
out
xlat
arpl
sub
pop
pop
xchg
in
testl
pop
outsb
rcrl
jbe
mov
sbb
adcb
ret
shll
rcr
out
sarl
jno
clc
cs
pop
fbld
sbb
inc
adc
ljmp
xchg
inc
pop
push
bnd
mov
jnp
jmp
dec
cwtl
mov
mov
lret
outsl
xor
mov
lock
mov
loope
mov
dec
ficompl
int3
fistl
lahf
nop
int3
fistl
or
ficompl
mov
dec
cmp
dec
enter
cmp
insl
lcall
add
sub
lea
pusha
or
jns
addr16
jne
mov
es
push
out
push
aas
mov
push
add
mov
jo
scas
das
push
sub
pop
adc
test
adc
add
inc
sub
in
addr16
dec
xchg
jae
xor
enter
mov
inc
or
pop
pop
mov
xlat
icebp
add
dec
mov
pop
scas
subl
push
gs
inc
dec
lea
sub
cmp
mov
jb
lds
adc
or
push
sub
aad
adc
push
insb
xchg
sbb
cli
rcll
adc
push
imul
or
addr16
xchg
dec
lock
mov
jno
addr16
jg
stc
push
loop
sarb
mov
lds
push
jne
or
test
lret
mov
add
bound
icebp
and
das
or
pop
lods
lea
or
xchg
mov
inc
cwtl
jge
inc
movsl
xor
xor
fdiv
mov
sti
call
mov
ja
pop
jecxz
adc
jo
gs
jge
movb
insb
push
inc
sub
mov
jle
inc
jnp
add
ret
scas
jge
xor
or
push
lahf
jecxz
jl
leave
mov
ja
iret
imul
push
jmp
loope
mov
mov
jae
cwtl
mov
xlat
jge
and
xor
jns
cmp
pop
add
mov
fsubl
notb
cwtl
incb
lock
inc
sbb
int3
repz
push
push
sub
inc
sbb
ret
scas
stos
jns
ror
mov
icebp
sub
hlt
xchg
daa
lret
dec
and
sbb
add
adc
decb
decl
in
paddusw
dec
cmp
je
shrb
jae
iret
sarl
cltd
push
jge
xor
in
sub
sti
pushf
sub
push
xor
stc
dec
mov
dec
sub
sub
mov
inc
mov
ret
inc
shlb
sub
cs
xchg
jne
mov
mov
mov
pop
ret
mov
inc
mov
iret
lret
loopne
addr16
add
or
pop
ret
xor
fdivrl
testb
jp
jno
add
ror
stc
lods
dec
ror
ds
sti
jmp
dec
in
xlat
inc
xchg
jno
jmp
ret
inc
or
pop
mov
pop
pop
dec
mov
xor
xor
push
sbb
dec
pop
mov
xchg
mov
inc
fidivrs
cwtl
and
jecxz
cmp
adc
mov
ror
xor
imul
shr
lret
push
hlt
mov
repz
xor
and
ja
adc
or
call
and
test
mov
sub
sti
mov
jl
bound
mov
xchg
pop
jmp
mov
adc
mov
movb
mov
add
loopne
lahf
cmp
stc
mov
test
or
pop
mov
push
shlb
test
jp
fbld
or
fcmovbe
xchg
inc
ret
sbb
jb
add
movsb
sbb
xlat
cmp
jno
ret
ljmp
das
pop
fwait
mov
call
jecxz
inc
loop
int3
jl
mov
cmp
fwait
into
subl
or
fisttpll
rorb
or
repnz
idivb
mov
sub
aas
rol
pusha
xchg
imul
adc
mov
ret
sbb
cli
aas
or
lods
imul
xor
mov
fiadds
sbb
mov
orb
sbb
das
push
lcall
sahf
bound
jl
pusha
sub
data16
fdivr
jb
and
cmpsl
cmp
mov
std
dec
mov
push
xchg
mov
push
addb
mov
ja
cltd
push
xchg
imul
push
push
loope
xor
outsl
pop
or
sarb
cs
icebp
div
pushf
push
sub
fiaddl
vmovaps
scas
mov
repnz
mov
cmpsl
sbb
leave
int3
mov
mov
mov
xorl
addr16
dec
xor
lea
movsb
shll
ljmp
notl
push
cmp
adc
aaa
inc
pop
push
mov
loopne
clc
adc
out
push
fisttpl
cs
mov
xor
cmp
adc
dec
iret
std
into
fnsave
ja
outsb
into
push
push
or
mov
add
adc
mov
dec
lret
mov
aas
dec
pop
xrelease
orb
divl
and
sbb
in
push
add
push
sbb
xor
int3
sahf
repnz
and
mov
and
and
xchg
mov
xchg
les
cmp
sbb
enter
mov
pushf
xor
out
out
lods
dec
cmpsl
or
xor
xorl
mov
dec
imul
lcall
sbb
jo
add
mov
add
inc
test
push
rorb
dec
push
gs
xor
std
push
divb
inc
in
jb
push
insl
loop
popa
ficompl
cmc
leave
xchg
std
push
cmpsl
sub
test
shr
mov
pop
std
jnp
fisubl
inc
push
pop
sub
cltd
ljmp
add
in
mov
jo
inc
or
and
push
lea
aam
outsl
jbe
test
and
outsl
stos
dec
fwait
in
movsb
cmpl
les
incb
sahf
mov
xchg
add
adc
arpl
or
jmp
insl
add
mov
imul
fs
loope
imulb
and
call
add
pop
mov
pop
fisubrs
pop
sub
int
mov
cli
loopne,pt
cmpsl
in
fdivs
xor
mov
dec
lods
out
xchg
sahf
push
jnp
xor
out
push
add
push
rorl
in
jne
jno
adc
sub
shr
sbb
je
lret
test
mov
xchg
hlt
pop
pop
inc
pop
mov
adc
sub
and
ljmp
mov
lock
mov
inc
bound
dec
leave
jne
jae
call
dec
mov
xor
mov
iret
in
xchg
mov
mov
iret
sub
rcll
inc
roll
cltd
jbe
leave
add
mov
dec
add
vcvttpd2dqx
in
jns
insb
and
push
sti
scas
dec
or
ficompl
mov
fildll
push
scas
shrl
xchg
jbe
stc
clc
enter
ds
or
or
cli
rcll
and
jns
popf
jo
cmc
add
sbb
arpl
mov
cmp
xor
fisubrs
arpl
test
xlat
pop
out
in
xlat
daa
push
dec
out
cmp
ljmp
adc
pop
mov
aaa
push
lret
mov
sub
dec
mov
repz
xor
xchg
dec
mov
out
sub
cmp
xchg
test
shlb
aad
icebp
lds
jl
fbld
in
pop
in
call
rorl
push
les
fmull
sub
xchg
gs
sbb
fldt
xchg
inc
and
adcb
loopne
push
aas
stc
dec
push
movsb
mov
sub
or
sub
cmc
dec
mov
push
dec
aas
jbe
in
push
fs
mov
pop
cli
gs
adc
jbe
pop
mov
and
aas
rorl
repnz
shll
mov
jecxz
scas
fwait
xchg
das
and
jb
cmc
mov
xor
out
xchg
scas
and
add
jno
test
mov
sbb
out
xchg
nop
or
mov
pop
sub
or
lea
jnp
fs
add
mov
mov
cmpsl
fdivs
mov
or
xchg
icebp
lods
add
cmp
imul
or
cltd
adc
mov
decb
push
icebp
or
fidivrs
mov
std
jbe
movsb
inc
fcmovnb
sub
dec
hlt
adc
rcrl
negl
imul
mov
adc
lods
insl
int3
cmp
mov
dec
pop
jmp
fsubs
int
or
or
in
sbb
fwait
mov
pop
push
pushf
xor
lea
pop
ss
scas
dec
push
push
dec
sbb
xor
mov
mov
repz
xchg
mov
xchg
lea
insb
dec
xchg
inc
pushf
daa
out
inc
cmpl
popa
push
mov
pushf
xor
push
cmovge
mov
xchg
pushf
adc
subl
ret
cli
loop
mov
pushf
dec
mov
dec
fwait
dec
add
fistpll
push
lahf
dec
mov
dec
inc
cwtl
mov
adc
roll
inc
mov
ret
test
shll
cmp
sub
and
idivb
ror
iret
cmp
inc
xchg
jmp
loopne
cli
jmp
pop
out
in
or
imulb
cmp
mov
pusha
mov
xchg
push
mov
clc
mov
sbb
test
test
scas
adc
push
add
ret
lods
mov
lods
adc
add
test
cwtl
pushf
mov
sbb
xchg
insl
push
sbb
mov
out
pop
sub
test
mov
into
out
xchg
mov
gs
cmp
fcmovnu
mov
cmc
loopne
sub
ss
scas
and
and
mov
jbe
fsts
mov
inc
mov
daa
mov
fcmovb
stos
mov
or
push
mov
or
ret
or
dec
outsl
adc
in
and
leave
sub
lahf
imul
add
jecxz
inc
xchg
lock
into
lock
mov
arpl
dec
or
pop
repz
xchg
push
fistpl
out
mov
lahf
xchg
stos
in
scas
cmp
out
fdivrs
sbb
xor
daa
cmp
aas
out
ret
or
dec
sti
movsl
jg
lods
leave
mov
add
out
aas
mov
pop
add
clc
cmpsb
push
outsl
fwait
mov
ds
lcall
fists
cltd
cmpb
add
cmpsb
bound
pop
push
and
clc
xor
xor
sbb
sarl
dec
shll
pop
jmp
push
push
dec
popa
pop
jg
shlb
sbbb
pop
imul
shlb
bnd
jo
adc
fdiv
ret
mov
fimull
les
pop
add
mov
mov
cs
cmp
mov
mov
pop
or
pop
cmp
xor
inc
add
int
repnz
clc
inc
jp
and
and
jmp
testb
lods
je
in
movsl
pop
sahf
xor
adcl
mov
mov
clc
cmp
fisttpll
xor
jns
gs
add
dec
repnz
inc
test
dec
xor
lret
shrb
sub
cmp
aaa
xchg
jbe
add
cmp
fdivl
xchg
outsb
add
loopne
xor
xorl
lret
lea
mov
sub
mov
pop
or
dec
mov
es
rcrl
sarb
fs
add
push
repz
push
push
shr
jae
cmp
das
push
std
mov
add
sbb
cmp
xchg
out
inc
pop
xor
pop
and
icebp
ret
sbb
jmp
jp
cmpsl
xchg
icebp
jp
incl
orl
push
pop
outsl
aad
lahf
xchg
lods
add
jmp
pop
add
push
inc
mov
mov
xor
push
pop
dec
fistpl
jp
jl
mov
imul
jo
and
icebp
jp
and
pop
lock
into
xchg
lret
adc
push
lret
pop
rcrl
in
and
imul
add
das
stc
fwait
pusha
xchg
popa
xchg
ljmp
jno
clc
pop
movsl
pop
lret
shrb
jne
mov
cmc
sbb
mov
push
jnp
imul
sub
inc
aaa
mov
and
andb
cltd
adc
pop
call
adc
arpl
mov
inc
lret
jo
out
test
or
movsl
lods
inc
cmp
inc
jae
cli
adc
adc
cmp
out
or
pushf
fs
aas
popa
dec
sub
lret
xor
addps
push
dec
and
xchg
cmc
in
js
loope
inc
sbb
xor
ror
aas
xor
sub
into
bound
rclb
adcl
rorl
and
pop
xchg
andb
cmp
pop
push
dec
mov
rcll
push
or
dec
mov
push
mov
jo
sub
jmp
inc
xchg
aas
add
or
icebp
ss
cmpb
pop
dec
adc
in
repz
cld
xor
shlb
imul
test
push
push
cwtl
scas
add
and
jmp
in
sti
xor
in
push
jge
loop
xchg
sbb
sbb
add
mov
xchg
es
push
inc
dec
insb
sbb
jns
mov
push
xor
lods
int3
scas
rol
mov
mov
insl
jg
push
or
iret
or
mov
xlat
mov
lods
jecxz
push
mov
xchg
xor
aam
push
mov
leave
xchg
or
add
mov
xchg
call
pop
repnz
std
xor
dec
or
add
movsb
xor
push
or
mov
cwtl
or
mov
aas
jnp
dec
mov
cli
and
cmp
jp
lcall
jge
mov
or
loope
fsubp
sbb
mov
in
inc
iret
dec
xchg
movsb
inc
sbb
dec
push
xorl
flds
stos
ljmp
add
pop
mov
sbb
pop
mov
lahf
ja
dec
or
xlat
xor
ljmp
pop
fisubl
cs
mov
xor
in
jbe
ss
jo
fildll
les
xchg
jne
jge
aad
mov
sub
push
jle
rcrl
int3
mov
cmpsb
sub
sti
xor
xor
fldcw
inc
cltd
mov
fs
lcall
pop
jle
xchg
pop
dec
xchg
cmpsb
cmp
cld
outsb
jae
push
push
and
pop
repz
rolb
fwait
push
les
mov
dec
in
jge
sub
aam
scas
mov
cmp
movswl
mov
cmp
outsb
cmp
cmp
sbb
push
rclb
adc
shlb
imul
enter
xlat
dec
add
in
shrl
mov
sub
mov
cmp
pop
sbb
pop
add
jmp
pusha
insl
push
sbb
mov
and
je
jo
lock
and
push
xchg
add
xor
stos
cmc
loopne
sub
ja
xchg
mov
inc
jo
fcomps
cld
mov
cmp
pop
ficoml
in
pop
aas
loop
cmp
inc
mov
das
jne
dec
and
cld
int
das
std
jp
pop
mov
adc
xchg
and
sahf
fdivrs
out
pop
fisttpl
rorl
lock
sub
cmp
mov
test
push
enter
es
add
lds
xor
adc
mov
jle
or
stos
add
jmp
xchg
lea
mov
fiaddl
jne
jnp
and
pop
pushf
lea
mov
rcrb
inc
jno
add
mov
lret
and
xchg
scas
inc
mov
popa
mov
jge
movsb
dec
ret
mov
incb
repz
addb
ret
add
push
mov
in
repz
push
fisttpll
jb
andb
lock
and
mov
push
cmpsb
movsb
xchg
cmpsb
out
ret
call
mov
jae
in
mov
or
mov
jecxz
xor
ljmp
fwait
mov
cmp
stos
jns
data16
popf
jp
mov
in
aam
ljmp
or
cmpsb
push
test
and
popf
jbe
inc
xchg
nop
sbb
inc
jae
in
jae
xor
jae
nop
dec
cld
dec
xchg
ljmp
out
push
loope
fisttpll
rcr
aad
divl
insl
sbb
in
mov
dec
push
out
scas
sti
add
fldenv
addl
in
push
cmp
lahf
lret
mov
vrsqrtss
cmp
aad
push
sbb
xchg
xor
ja
aas
repz
push
jecxz
idivl
add
dec
fs
cmp
rcll
mov
mov
loop
mov
iret
rcrb
lret
push
add
push
jo
int
cs
cmp
mov
mov
lret
and
push
jnp
mov
sub
sahf
mov
pop
daa
inc
int3
and
xchg
jge
push
jno
xor
mov
dec
sub
mov
sub
adc
jns
int3
push
inc
mov
mov
shll
xor
jno
sahf
pop
stos
int
mov
or
pop
fcmovnu
ret
pop
lcall
loop
inc
jmp
xchg
jns
sub
or
push
repz
dec
leave
push
lcall
sub
test
pop
and
mov
loop
mov
rcrb
addb
inc
stc
and
jmp
mov
xchg
pushf
lcall
pop
loopne
jbe
rorl
adc
sub
popa
mov
and
popa
and
jno
test
or
sub
adc
adc
dec
int3
adc
in
push
jecxz
sub
xor
xchg
mov
lahf
sub
sbb
cmpsb
push
aaa
aad
addr16
adc
add
dec
and
data16
sub
mov
pop
jns
lds
jne
out
push
mov
std
gs
ds
roll
add
cmp
stos
js
push
push
mov
jge
aad
or
dec
mov
sub
add
xchg
cwtl
sbb
dec
jmp
lret
test
and
aad
mov
jb
insl
mov
dec
mov
test
test
cmp
leave
push
add
push
insb
add
mov
hlt
sbb
pop
les
out
ret
jge
push
shlb
xchg
jnp
mov
mov
mov
xor
scas
into
dec
xor
aaa
xchg
inc
cs
test
loopne
xchg
or
jp
adc
stos
mov
int
xchg
sbb
cmp
jl
inc
in
jg
pop
jecxz
scas
out
pop
add
lret
and
cmp
mov
sbb
nop
aas
adc
fstpt
jmp
push
mov
sbb
je
jecxz
into
test
inc
add
inc
stos
xchg
mov
popf
clc
pop
jle
push
push
imul
xchg
lret
fiadds
icebp
ja
and
in
and
andb
out
jne
cmp
inc
xor
mov
sti
stos
sbb
jnp
mov
cmc
jecxz
movsb
jnp
out
js
mov
scas
cwtl
sub
rcr
std
mov
push
sub
push
cmpsb
adc
mov
inc
cmp
sar
iret
mov
loop
jno
mov
mov
sbb
pop
cltd
gs
aad
cmc
enter
icebp
xchg
mov
sbb
les
inc
push
cld
mov
cmp
push
inc
fsubr
sbb
nop
lret
lret
fwait
xor
inc
push
mov
inc
hlt
test
adc
lock
stos
jp
inc
mov
adc
xlat
dec
inc
sub
pushf
iret
insb
iret
add
jecxz
inc
call
pusha
sbb
add
mov
lcall
jecxz
fsts
and
xor
inc
inc
fidivrl
cmp
xchg
fsubrl
test
xchg
push
cmp
cmp
or
outsb
js
int
aad
cmp
bnd
mov
mov
jg
jb
jb
or
cwtl
inc
xorb
xor
jnp
jnp
jne
mov
lock
ja
mov
adcl
dec
icebp
out
sbb
and
fwait
lock
loope
push
mov
daa
cmp
cmpsl
dec
fcomps
mov
in
mov
sahf
sarb
popf
mov
lret
mov
shll
filds
gs
adc
rcl
dec
add
or
cmpsl
inc
popa
cwtl
inc
repnz
lahf
sahf
xchg
sub
mov
mov
lret
sub
jmp
loope
test
adc
call
and
sbb
movsl
ret
xor
push
jno
push
push
mov
cmp
imul
sahf
and
push
imul
sbbb
lock
imul
gs
jge
addr16
cmp
adc
fisttpll
add
cmp
dec
xchg
cmpsb
xchg
jecxz
mov
mov
incl
xor
push
cmpsb
xor
or
cmpsl
movsb
les
push
ret
pop
insb
cmp
jnp
lods
or
xor
ret
dec
enter
fs
and
mov
scas
mov
fucomp
sub
push
mov
cmp
int3
sbb
add
mov
fwait
imul
jmp
aad
ficoms
or
mov
or
xor
testl
add
mov
loop,pt
scas
loop
pop
pop
jle
in
in
push
stos
dec
out
nop
fdivr
sti
push
push
sbb
cmp
ds
lret
sti
cwtl
jmp
loop
xor
or
mov
les
aam
insl
movsl
test
sbb
scas
outsb
sbb
adc
push
xlat
pop
push
jb
sbb
sub
adc
jecxz
iret
stos
cmp
insl
sarb
cmp
cld
call
je
jb
les
ss
sbb
and
push
incl
sub
pop
or
lcall
lahf
xchg
xadd
sbb
or
jg
mov
jns
jnp
mov
jmp
jl
out
lea
adc
cli
inc
ss
das
mov
in
or
mov
xchg
push
cmp
test
xor
int
jmp
jnp
shr
lret
push
aam
lods
shll
or
test
lea
js
push
in
inc
inc
es
imul
sbb
lods
adc
fistl
repz
push
jg
mov
lock
cmc
ja
iret
xor
inc
or
pop
stos
mov
mov
push
cmp
mov
add
loop
lcall
pop
clc
xchg
add
lds
cmp
sub
ss
aas
ds
ret
jb
and
jl
mov
or
aad
lret
mov
int3
adc
cmp
mov
fmuls
ret
push
dec
cmp
and
lcall
lcall
sbb
ss
inc
in
inc
xchg
sub
pop
mov
lock
in
shlb
ja
outsl
shlb
das
int3
mov
sahf
add
addb
mov
rorb
data16
outsb
and
xlat
xchg
mov
testb
inc
lds
into
repz
cmp
es
fsubrp
sbb
add
cld
jne
adc
lods
dec
movsl
fsubrl
jmp
out
and
pop
inc
mov
or
cmpsl
xchg
repnz
pop
mov
mov
and
sar
lcall
jge
mov
inc
lds
div
outsb
int
jmp
cmp
jecxz
xor
xchg
xchg
cmpsl
add
mov
cs
jg
mov
cltd
push
test
out
add
pushf
aad
iret
popf
movsb
adc
jmp
jbe
mov
out
xor
mov
or
das
stos
pop
mov
cli
adcl
outsl
jecxz
xor
add
repz
lods
pop
imul
lods
sub
mov
mov
jno
into
xchg
and
dec
icebp
fs
inc
and
pop
and
jle
cmp
sub
pop
sahf
or
xchg
ret
and
loopne
testl
xchg
inc
je
mov
pop
divl
pop
mov
cwtl
fnstsw
mov
sub
fiadds
push
xchg
fcomp
push
mov
and
int3
mov
dec
mov
movl
sub
cmp
push
popa
mov
cmc
jg
outsl
aaa
iret
jmp
pop
push
mov
sbb
sbb
jne
adc
cmpsl
xchg
fdivs
push
mov
xchg
aaa
lock
inc
xor
subb
dec
cmc
xor
jno
sub
sti
and
inc
aaa
mov
add
cld
stos
adc
icebp
adc
subl
xor
pop
andb
cmp
rcr
adc
fs
aaa
addr16
or
daa
jp
xchg
mov
adc
mov
sbb
mov
ds
mov
jg
mov
cs
push
fbstp
imul
inc
adc
test
lock
aam
sbb
je
outsl
into
dec
sub
sub
mov
rolb
push
testl
stos
cwtl
in
in
lret
and
sub
inc
gs
out
into
mov
ret
mov
sahf
push
jg
mov
mov
mov
adcl
je
dec
mov
notb
jne
mov
inc
aaa
add
cmpsl
adc
pop
push
aad
sub
dec
ret
lock
mov
push
fldenv
int3
shr
adc
and
mov
dec
stos
mov
nop
push
jbe
mov
in
push
or
push
aad
lahf
jb
pop
mov
js
adc
mov
pop
mul
pop
sti
push
fwait
xor
cmpsl
add
pop
shrl
std
sub
lods
in
je
mov
aaa
scas
cwtl
jmp
jp
adc
imulb
orb
fcompl
xchg
push
xor
mov
stos
cwtl
push
ret
xor
sbb
popa
js
sbb
or
sbb
in
pop
js
mov
call
scas
iret
mov
cmpl
loop
lods
mov
adc
pusha
mov
mov
daa
push
mov
lcall
jl
jg
aad
les
hlt
or
add
scas
and
inc
lret
mov
jno
test
loope
xor
and
fldt
rol
mov
and
cmp
fnstenv
xor
or
faddl
dec
mov
sbb
lcall
jmp
pushf
cli
fists
in
push
mov
imul
ret
xchg
jmp
clc
push
mov
std
cmp
movsb
ds
inc
mov
sbb
test
test
pop
ss
dec
lock
cmp
cmp
nop
sub
mov
jae
loope
mov
xor
pop
lret
or
mov
decl
fnsave
lods
int
dec
inc
das
test
xchg
clc
or
cmpsl
stc
push
clc
jle
iret
fcompl
mov
xchg
sbb
jmp
inc
ljmp
mov
jg
lock
mov
sub
or
das
ret
jl
sub
nop
sbb
insl
xchg
jecxz
xlat
xor
and
pushf
add
ljmp
imul
cmc
mov
ret
mov
aam
or
cmp
jns
inc
bound
dec
ds
in
and
and
orb
insb
jge
ljmp
fwait
sub
push
adc
and
fsubr
stos
push
xor
push
mulb
inc
mov
pushfw
or
sbb
sbb
in
lods
push
orb
jl
push
mov
test
jmp
mov
enter
shll
pop
xchg
cmpsb
inc
pop
fstps
sbb
mov
sbbl
mov
mov
rolb
jae
stos
pop
add
cmpsl
lcall
sbb
es
cmp
in
inc
push
mov
imulb
int3
test
sub
ja
cmp
xchg
aam
cmp
pop
scas
jge
ds
ror
sbb
jno
xchg
icebp
dec
sahf
xchg
lock
movsb
insl
mov
and
stos
fs
and
and
inc
fidivs
cmp
pusha
jmp
addr16
iret
imul
scas
mov
divl
lods
sarb
sub
pop
fwait
pop
add
repnz
call
cmp
sub
push
test
jns
push
lahf
xor
jne
sub
mov
repnz
adc
adc
xchg
in
cmp
fcmovb
popf
inc
jg
test
jae
mov
xchg
lret
stc
into
test
imul
push
fnstenv
out
mov
sub
adc
cltd
add
jg
pusha
or
out
loop
sahf
jl
lret
into
leave
jecxz
push
mov
int3
push
stos
add
dec
pop
clc
repz
mov
sbb
cmpsb
push
jae
out
add
into
mov
add
push
push
jae
enter
sbb
lahf
ljmp
cli
in
arpl
mov
test
cmp
popf
lret
stos
sub
jg
jne
ja
push
arpl
xor
ret
dec
scas
mov
xor
leave
lret
dec
test
mov
add
subl
jp
test
ret
inc
jmp
cmove
jne
in
icebp
fwait
loop
xchg
outsl
dec
jne
pop
out
hlt
adc
jge
outsl
adc
or
ss
mov
aas
sub
fiadds
mov
cs
repnz
gs
dec
push
pop
ja
icebp
enter
sub
int
roll
test
jp
add
imul
add
outsl
inc
sub
nop
scas
mov
addr16
jmp
pushf
cmp
fsubs
gs
out
sub
test
fsub
adc
adc
scas
std
push
clc
sbb
sub
dec
movsb
sub
test
and
mov
lods
dec
xchg
nop
and
sub
cltd
loopne
sarl
std
mov
arpl
sub
mov
enter
add
mov
and
mov
icebp
cmc
xchg
into
es
aas
cmp
push
adc
mov
dec
push
fidivs
xor
inc
xchg
hlt
xchg
jnp
fimuls
mov
fbstp
xor
sub
popa
mov
cs
dec
sti
sbb
outsl
ret
ret
fdivl
xchg
mov
insb
pop
push
jae
sub
pop
jp
adc
mov
pop
adc
cmpsl
daa
fidivl
outsb
mov
aas
dec
iret
jp
pop
lods
es
in
jbe
adc
push
mov
mov
in
cmp
aaa
jne
jnp
fidivrs
xchg
xorl
in
das
pop
sbb
push
int
lret
and
lcall
push
add
or
push
test
mov
dec
and
xor
mov
dec
xchg
leave
addr16
inc
add
stc
rorb
arpl
fwait
jae,pn
lea
into
cmp
stc
inc
cwtl
push
mov
adc
mov
sahf
in
push
xchg
fdiv
adc
xchg
xchg
dec
mov
loopne
mov
add
jmp
call
xchg
sahf
mov
cmc
loop
addl
pop
cli
xchg
aaa
loope
loop
nop
or
cmpsb
adc
jbe
inc
sbb
dec
popa
lret
outsb
mov
rcll
addr16
test
in
daa
ja
pop
aaa
inc
pop
leave
jb
xchg
nop
mov
cmc
push
xlat
sub
lock
out
je
ljmp
shrl
js
pmaxub
ds
adc
mov
adc
dec
test
xor
and
pop
xchg
fwait
pop
lret
ja
jle
ret
mov
adc
jmp
call
dec
add
xchg
jl
sbb
pop
sti
push
sub
ds
sbb
inc
add
sub
sahf
dec
dec
or
fbstp
pop
test
cmc
test
in
movsl
cmp
mov
sub
xchg
mov
into
gs
in
add
inc
mov
data16
mov
out
iret
add
shrl
pop
mov
int3
jg
aad
iret
cmpl
mov
lds
xor
pop
mov
shrl
mov
nop
add
sahf
xchg
adc
add
sub
cmpsl
aad
movsl
and
pop
je
or
cltd
jno
hlt
xor
mov
jo
add
aaa
push
xchg
in
pushl
test
or
or
pop
jle
fbld
cwtl
cmc
inc
pop
testl
or
daa
out
inc
and
push
xchg
adc
enter
setno
sbb
mov
pop
jecxz
int3
addl
fsubs
adc
cli
xor
ret
pop
mov
jo
dec
adc
inc
or
mov
sub
sub
jl
inc
dec
or
and
mov
dec
dec
popf
loope
popa
int3
xchg
loope
jnp,pn
mov
push
mov
addr16
sbb
or
es
mov
pop
lcall
adc
aaa
sbb
cltd
mov
push
shl
idivl
or
sbb
arpl
mov
jns
xchg
shrl
cmp
loope
imul
push
js
cmpsb
push
jl
add
pop
push
lcall
jb
add
push
pop
pop
adc
int
pushf
fbstp
mov
xchg
jg
pop
lods
cmc
ja
scas
fnsave
arpl
cwtl
jbe
inc
jne
fnstsw
push
push
int
aaa
ja
or
imul
adc
mov
rclb
loop
nop
mov
rorl
ficoms
and
pop
mov
xchg
subl
outsb
sub
xchg
sbb
adc
out
loopne
cmpsb
sbb
ds
test
add
lock
cmp
xchg
add
aam
pusha
sub
int3
push
stos
xchg
sub
push
int
test
xchg
sbb
pop
mov
aaa
jb
data16
mov
icebp
push
or
sub
dec
loop
repnz
fsubrs
shr
aad
idivb
jmp
lret
inc
push
xlat
lods
jne
mov
stos
jle
into
add
aas
lahf
nop
fidivs
repz
dec
dec
subb
xlat
int3
cmpb
into
mov
cmp
jl
ret
xchg
push
xorl
lds
outsl
std
mov
out
mov
pop
ret
jb
xor
outsl
hlt
cltd
mov
movsb
xchg
add
mov
lods
adc
imul
adc
in
and
jg
mov
aas
outsb
xorb
mov
inc
lahf
inc
mov
pop
cmpsb
fistpl
cltd
sbb
push
xor
pop
hlt
mov
lcall
lret
imul
outsl
dec
sub
jno
push
adc
ja
pop
cmp
xchg
ret
std
out
xor
cmpl
jmp
ja
and
movsb
fldlg2
push
nop
cmp
fadd
popf
fcmovu
xchg
sub
sub
repnz
lcall
dec
dec
imul
push
mov
loope
cmpsl
cmp
adc
nop
pop
hlt
cmpsl
push
fstpt
jecxz
add
js
clc
aam
call
cmpsl
test
movsl
sahf
ss
pop
xchg
mov
pop
mov
rcrl
xchg
push
fnstsw
add
adc
jle
mov
mov
sub
out
pop
int3
clc
scas
stos
sahf
stc
xor
cmp
cs
aam
ljmp
nop
jecxz
div
mov
scas
push
xchg
xor
in
sbb
sub
repnz
xor
add
inc
pop
std
imul
lods
out
ret
cld
lret
aas
jo
dec
add
jo
aad
jp
out
xchg
pop
mov
outsb
je
sbb
xchg
imull
lods
inc
idivl
faddl
insb
je
shl
pop
add
in
sub
add
inc
or
mov
push
std
iret
mov
jb
pusha
cmpsb
jo
mov
cmpsb
icebp
sbb
dec
xor
add
dec
lods
stos
and
cwtl
push
or
mov
mov
hlt
arpl
fs
sbb
mov
mov
gs
push
repnz
jmp
insb
add
shlb
pop
jge
mov
mov
shr
xchg
xor
jmp
sub
mov
jne
push
ficompl
jno
cltd
rcrb
jp
das
cld
cli
dec
push
cli
out
and
rclb
or
lods
subl
cmc
out
repnz
ds
mov
sbb
ss
and
add
mov
scas
mov
scas
iret
jp
add
push
ljmp
sbb
popl
dec
test
mov
sub
xchg
sti
je
push
rol
push
outsl
and
pop
xchg
mov
ret
std
icebp
ja
in
leave
sbb
xor
mov
sahf
nop
and
repnz
stos
and
cli
jns
dec
in
mov
leave
out
mov
pop
lds
lock
ja
andl
ss
shrb
sub
cs
lcall
mov
cmp
xor
xor
sahf
into
jl
sti
push
mov
jns
imull
cmpsl
cltd
cmp
sub
movsb
dec
sub
mov
sub
test
add
sbb
sub
insl
adc
icebp
adc
jno
in
das
pushf
iret
xlat
xchg
sub
jle
adc
xchg
lods
and
pop
pop
fisttpl
scas
sub
mov
push
in
loopne
inc
sub
or
dec
add
add
loop
jg
pusha
inc
adc
nop
js
test
dec
push
in
sub
xchg
dec
inc
mov
pop
xchg
sub
or
int
aam
jno
cmp
pop
or
std
out
dec
dec
cmp
lds
mov
push
bound
and
je
jl
jg
mov
daa
inc
ja
aaa
in
jbe
xor
stc
inc
sbbb
sbb
js
pop
outsl
push
cmp
cmc
movsb
xor
lahf
lret
or
mov
dec
push
add
mov
push
and
loop
sbb
fists
xchg
and
jle
xchg
mov
and
nop
jp
jbe
sbb
fdiv
dec
or
jne
scas
cmp
xchg
lahf
mov
or
or
in
mov
popa
jne
imul
sbb
inc
ret
xchg
sti
xor
decb
jmp
pop
pop
fstl
pusha
fcoms
mov
pop
xor
pop
gs
popf
movsl
aam
mov
sar
addr16
or
push
out
das
sar
xchg
cmp
push
mov
fdivrs
cmp
xchg
rclb
inc
imul
mov
or
add
rcll
sub
insl
mov
adc
and
pop
ds
mov
sub
push
adc
pusha
movsb
cmp
je
add
lret
psllw
lock
call
lret
adc
lods
iret
cmp
sahf
into
adc
push
or
cmp
xor
lcall
rorl
test
adc
and
xchg
push
cmp
xor
jae
cs
lock
pop
jns
fiadds
test
call
fimuls
jp
loope
xor
aas
sti
xchg
add
in
cmpsb
daa
inc
into
xchg
jg
lds
jns
jns
lret
insl
xor
adc
shr
jp
mov
hlt
dec
hlt
cmpsb
push
jge
or
popf
xchg
pop
cli
jne
push
cmpsl
movsl
es
in
leave
jno
sbb
pop
cmpsb
inc
icebp
pushw
adc
xchg
bnd
pusha
push
mov
sbb
mov
lcall
jp
xchg
test
jg
fwait
cmp
sub
repz
dec
push
pop
inc
rep
inc
dec
cmc
xchg
sbb
sti
cmpsl
clc
ja
adc
fadds
push
add
jne
ljmp
sub
jmp
jne
fimull
arpl
lcall
sar
dec
push
jns
jmp
stos
mov
icebp
lods
adc
mov
repnz
mov
xor
pop
in
sbb
lock
dec
ja
rcl
fwait
divb
xchg
jg
pop
pop
cmp
mov
insl
dec
push
sub
xor
aaa
aam
icebp
sahf
cmpsb
in
xchg
jo
mov
mov
or
ret
lods
fcoms
mov
sub
inc
int3
mov
mov
movsb
jp
int
push
addr16
sti
mov
in
lds
aaa
mov
xchg
lret
or
in
jno
mov
ljmp
dec
dec
and
add
leave
mov
and
aad
and
inc
fsts
dec
mov
loop
repnz
fnstsw
clc
movsb
dec
sub
push
add
negb
jae
add
cmpsb
mov
pusha
cltd
roll
pop
adc
jle
mov
dec
lds
mov
jge
inc
ret
mov
cmp
scas
out
out
add
sbb
xor
jl
lea
inc
jae
sysret
lods
cmp
insl
cmp
push
mov
adc
and
mov
adc
xchg
pop
es
mov
jl
fsubrl
mul
insb
inc
sahf
dec
pushf
add
jbe
mov
cli
push
sbb
jmp
fucomi
aaa
jb
lret
dec
cwtl
cmpsl
or
mov
and
pop
mov
push
xlat
jg
mov
negl
mov
cld
insb
xchg
testl
xor
std
sti
filds
out
aaa
mov
ja
jecxz
clc
pop
cmpsb
push
shll
pop
test
mov
or
cmpsb
std
xchg
movsb
push
pop
clc
imul
int
in
repz
mov
leave
xchg
cmp
ja
mov
jmp
out
mov
cmp
pusha
sub
fiadds
xor
jbe
sbb
dec
scas
adc
mov
xchg
cmp
icebp
add
mov
pop
call
in
push
jae
sub
sahf
push
jo
das
mov
das
test
jg
jmp
pop
sbb
test
addr16
dec
inc
sarb
cwtl
fildl
outsl
mov
sahf
sbb
repz
pop
mov
xchg
pusha
mov
movsl
jne
inc
pop
popf
pop
cld
int
insb
sbb
mov
sub
popf
mov
mov
ljmp
xchg
sbbb
nop
dec
dec
mov
lods
nop
in
xlat
add
repnz
jb
and
rorb
jnp
fsubr
lret
mov
mov
jmp
mov
mov
jl
cmp
mov
or
mulb
mull
push
rclb
fisubrl
push
aam
or
daa
pop
mov
xsha256
cmpsb
xlat
ret
pushf
sahf
mov
mov
and
popa
push
jmp
neg
sarl
add
aaa
mov
push
das
xchg
lea
push
sbb
sub
fiadds
jae
out
add
aas
xchg
scas
add
push
jns
pop
outsb
or
jmp
sbb
in
dec
pop
cmpsl
mov
sbb
cld
sbbb
lea
fiadds
ret
sub
mov
dec
mulps
cmc
insb
mov
xor
int3
das
mov
rclb
ret
ss
push
pop
mov
stos
cltd
push
sarl
xchg
dec
sahf
adc
aaa
iret
pop
call
xor
xor
mov
and
mov
mov
mov
dec
sbbb
lock
in
xchg
xchg
jbe
popf
leave
outsl
mov
dec
fwait
test
pop
sbbl
sbb
idiv
outsl
sahf
sbb
mov
pop
js
cld
sti
jg
push
and
ljmp
sar
in
xchg
stos
pop
push
adc
iret
stos
movsb
std
add
sahf
pusha
jp
xchg
cmp
sub
jp
nop
xor
imul
mov
js
mov
mov
adc
jmp
dec
lcall
data16
jecxz
push
test
or
mov
dec
sub
mov
xor
cltd
jecxz
and
pop
aaa
push
cmp
sbb
push
ljmp
adcl
ret
mov
sbb
stos
loop
sbb
ret
sbb
mov
mov
jnp
push
and
popf
das
jmp
and
fsubr
or
cmp
pop
xor
add
ja
mov
neg
add
xor
inc
or
incl
push
repz
mov
hlt
pop
sub
jae
sti
imul
mov
sub
js
xchg
lcall
cmp
in
outsb
stos
roll
or
adc
xchg
xchg
cmp
adc
and
dec
sahf
imul
xor
dec
dec
sbb
push
incb
ret
lret
loop
faddl
inc
sub
add
ss
pop
orb
fildl
aam
push
test
outsl
xlat
ret
stc
std
and
sub
negb
add
scas
movsl
shr
jg
int
adc
dec
cmp
or
xchg
push
in
dec
adc
xchg
icebp
xchg
push
mov
dec
dec
pop
push
loopne
test
mov
inc
jl
cmc
repnz
out
fdivrs
fsubp
xor
outsl
xor
enter
inc
or
cmp
leave
outsl
mov
rorb
test
cmp
icebp
roll
enter
add
pop
dec
rcr
lods
test
mov
fstps
mov
mov
pop
stos
push
leave
pop
lahf
cwtl
fldl
aas
filds
std
and
jbe
shl
fucomip
jns
add
adc
jo,pn
inc
punpckhdq
es
mov
imul
xchg
insl
aaa
cmp
and
ret
xor
pop
inc
mov
mov
sub
sbb
push
jg
lock
and
shlb
or
movsb
jecxz
fistpll
mov
fdivrl
fistpll
aam
popf
mov
ffree
out
imul
mov
int3
mov
shrl
lea
and
rclb
add
cltd
orb
sbb
decb
push
jge
imul
push
cwtl
fstl
imul
cmp
pop
insl
and
jp
mov
scas
je
pop
pop
mov
pop
adc
loope
or
xchg
mov
loopne
shl
cs
sbb
xorl
mov
or
inc
xchg
jae
sarb
fsubrl
cmp
test
mov
dec
mov
add
arpl
push
shrw
in
std
bound
mov
cmp
cmpl
dec
call
int
nop
cmp
inc
cwtl
outsl
or
sbb
jb
arpl
js
xor
les
xchg
sub
mov
loopne
adcb
push
cmp
insb
dec
lret
xchg
aad
or
cs
int
adc
jne
mov
xchg
mov
es
loop
rcrl
lock
push
addl
push
mov
pop
test
in
aas
push
add
cmpsb
or
xor
bound
push
mov
lods
adc
les
cmpsb
adc
push
cmp
sbb
mov
aas
call
inc
inc
pop
cmp
outsl
xor
mov
aas
out
loopne
sub
cmp
push
pushf
sarl
xchg
push
add
cmp
mov
dec
dec
and
aam
jl
jne
push
enter
mov
adc
in
test
filds
pop
stos
dec
sub
lcall
gs
mov
mov
lcall
gs
sbb
dec
mov
testb
mov
or
in
sti
jmp
mov
push
imul
pop
cld
test
mov
push
xchg
mov
iret
dec
mov
fcmovu
subb
inc
dec
or
add
push
jle
or
das
int3
or
pop
shlb
daa
jecxz
jmp
fdivs
pop
sarb
rorl
out
xchg
pop
mov
lret
cmp
pusha
mov
and
sbb
inc
jl
out
insl
xor
movsl
es
fisttpl
or
adc
frstor
jno
pop
sti
jns
scas
adc
mov
inc
push
cwtl
aam
xchg
adc
push
sbb
cmpsl
sub
mov
ror
stos
inc
cmpsb
or
nop
jb
xchg
jnp
jmp
loop
ljmp
fmull
cwtl
sbb
cmp
mov
fiaddl
mov
pop
dec
add
jnp
std
cwtl
jmp
adc
enter
sti
sti
repz
dec
int
stos
mov
loopne
loopne
push
and
popa
pushf
pop
lea
int
push
pop
sbb
cmc
cmp
xchg
fadds
scas
xor
shl
pop
nop
ds
push
cmp
inc
xchg
shl
pop
xor
adc
add
sarl
sub
push
es
ja
jns
cmp
cmpsb
cmpsb
daa
inc
cmp
jmp
push
out
mov
or
je
add
mov
popa
mull
mov
daa
cmp
aaa
sub
addr16
lods
inc
push
aas
sub
mov
popa
pop
out
aad
fstpt
push
stc
adc
lea
cwtl
xchg
push
mov
mov
xor
insl
sub
push
mov
jmp
pop
jge
stos
clc
lret
popf
cmc
inc
xchg
sub
aas
stos
ja
je
ds
ficoml
subl
stos
pop
mov
ss
frstor
into
in
in
imul
mov
gs
fwait
aam
mov
cmc
stos
out
sbb
pusha
jmp
cmp
arpl
sbb
inc
mov
mov
push
pop
jg
push
mov
push
inc
neg
out
jne
xchg
mov
mov
jno
jmp
pop
faddp
stc
sbb
in
pop
xlat
adc
jo
jno
pop
add
cwtl
inc
les
jne
lods
adc
mov
lcall
adc
daa
int
lea
mov
loopne
mov
test
mov
stos
aam
and
push
sbb
mov
pop
out
int
mov
push
pop
js
dec
push
icebp
lods
add
adc
ljmp
add
cmp
loop
aaa
pop
cmp
add
data16
cmp
shlb
popa
stc
js
push
pop
popf
mov
pop
orl
outsl
sub
out
loop
sub
outsb
pop
je
mov
sbb
mov
es
xor
adc
xchg
shl
adc
cmp
lea
ret
jnp
pop
inc
mov
lret
subl
adc
loop
frstor
and
mov
push
fst
jecxz
loopne
jl
rclb
pop
les
sbb
data16
mov
xchg
xor
popf
add
inc
push
or
dec
fildll
push
inc
pop
inc
test
adc
cmp
jp
inc
pop
or
fucom
shrb
push
jg
loop
sbb
imul
and
lcall
cmp
push
lea
icebp
lahf
pop
dec
fs
orl
push
test
gs
sahf
xchg
stos
and
mov
and
enter
rcrb
cmp
add
add
dec
xchg
cmp
dec
sub
sbb
out
sahf
xor
fs
int
mov
adc
les
adc
and
mov
or
inc
in
cmp
mov
insl
cmp
dec
lahf
cmc
xchg
inc
add
sbb
scas
mov
jae
mov
mov
nop
jecxz
ret
mov
jle
cmpb
jmp
mov
cmp
inc
xchg
clc
rorl
cmpsb
nop
leave
jle
add
dec
jbe
dec
call
stos
push
mov
out
loop
cmp
int
jo
jmp
pop
call
add
inc
adc
outsl
pop
ret
and
inc
fiadds
gs
adc
mov
jne
mov
xorl
mov
xor
jae
cld
aad
lods
mov
lock
xor
jmp
push
jnp
cli
call
cmp
sub
mov
es
mov
out
push
add
jle
mov
lret
test
cmc
int3
jno
dec
xchg
xchg
sarb
pop
cmp
xor
pushf
mov
aad
sub
das
pop
test
mov
arpl
xchg
cmp
inc
addr16
andl
lcall
jb
mov
lds
push
sub
fwait
data16
das
mov
lcall
sti
xor
imul
dec
andl
push
pop
xchg
jp
push
mov
adc
xchg
cltd
popa
xor
inc
fucomp
scas
jb
fwait
push
jno
test
bound
fsubr
xorl
fxch
jo
adc
test
aam
mov
std
sbb
stos
jmp
fisttps
dec
mov
jecxz
fs
sub
mov
add
ds
leave
jo
add
lods
les
mov
and
and
cltd
clc
loope
movsl
xlat
subl
movsl
in
mov
or
xchg
sbbl
ja
lcall
sbb
jmp
out
orl
ljmp
arpl
xor
dec
sti
aas
xchg
daa
sbb
xor
sub
mov
es
sbb
inc
cmp
dec
std
popl
mov
jne
push
lods
xchg
loop
test
pop
fldl
pop
fcomps
sbb
cli
loop
dec
and
mov
fmulp
inc
sub
aaa
cltd
mov
out
fsub
push
xor
dec
or
push
mov
es
movsl
dec
add
dec
push
xlat
or
ret
outsl
imul
ret
jb
mov
lcall
rolb
inc
test
loopne
stos
xchg
fistps
sub
xchg
sbb
dec
sarl
push
xchg
mov
adc
xorb
lds
int
sbb
pushf
dec
nop
in
cmc
sbb
pop
cmc
mov
xchg
das
mov
fstl
call
insb
fists
and
add
mov
add
and
add
sahf
mov
dec
push
pusha
mov
pusha
cmp
lock
adc
mov
aaa
jg
out
or
je
movsb
bound
fwait
mov
xor
jl
mov
mov
test
sbb
jb
insb
add
push
lods
rorl
xor
xor
hlt
pop
xchg
leave
lock
sbb
add
scas
ds
mov
ss
or
insl
std
ret
pop
in
xchg
adc
pop
pop
aam
sbb
pop
lret
mov
pop
cmp
loop
out
inc
fildl
push
inc
lock
push
jecxz
sbb
and
fsubp
clc
fldcw
ja
adc
cmp
in
fwait
sbb
and
sub
add
sub
push
dec
aad
bound
out
inc
mov
lret
jecxz
ret
mov
xor
repz
bound
mov
jo
fldt
shr
pop
fdivrp
pop
loop
pop
push
xchg
inc
test
fidivs
out
stc
xor
sbbb
fwait
in
cmp
repz
int
mov
pop
push
lcall
xchg
movsb
int
aas
fwait
dec
adc
lock
cmpsl
xchg
pop
adc
cmp
cmc
mov
out
cmc
out
add
add
iret
xchg
jbe
jbe
imul
rorl
outsb
rorl
xchg
outsb
testb
push
jne
sbb
lea
mov
sub
push
popf
imul
gs
iret
mov
mov
adc
jecxz
in
and
mov
cs
mov
cltd
stos
mov
stos
clc
mov
out
mov
dec
inc
je
mov
pop
xor
add
int3
andb
lret
iret
inc
in
inc
mov
push
les
mov
aam
and
sbb
mov
subb
frstor
mov
mov
mov
out
sbb
sbb
stos
mov
push
inc
sub
sub
mov
push
enter
cltd
sbb
jae
pop
sahf
rorb
adc
stc
push
data16
add
jbe
xor
inc
mov
data16
pop
rorl
mov
mov
test
popf
adc
mov
aam
test
cmp
dec
cld
push
push
in
cmpsb
sbb
xchg
pop
inc
jae
sub
mov
mov
dec
rcl
imul
dec
scas
add
inc
push
xchg
lret
and
clc
push
std
dec
push
dec
cs
mov
inc
int
cli
add
fldt
mov
scas
sahf
xchg
cmpl
jno
inc
sahf
mov
sub
add
add
mov
movsl
cmp
cltd
or
or
cmp
pop
xchg
lret
xchg
aas
js
sbb
push
pop
inc
sub
cld
and
in
sarb
repz
cli
inc
pop
or
adc
xchg
outsl
push
xlat
icebp
pop
jb
jo
pop
sbb
mov
std
jmp
xchg
ss
push
shl
stos
or
mul
sub
sub
mov
pop
dec
lods
xor
xor
hlt
cmp
push
ret
dec
int
jp
xchg
aas
mov
in
movsl
jecxz
jb
ss
push
adc
lret
dec
mov
data16
not
mov
push
jl
push
notb
jns
xor
mov
fcompl
insb
out
jp
xor
xchg
cwtl
pop
mov
cwtl
in
sub
in
mov
inc
iret
sbb
imulb
mov
in
adc
into
cld
inc
daa
dec
xor
sbb
repz
pop
inc
cli
int
sub
dec
lcall
shrl
sti
pop
jl
jmp
inc
bound
mov
jle
lds
cwtl
data16
pop
rcll
sub
cmp
cmp
test
jmp
push
mov
inc
fildll
hlt
pop
cltd
cmp
mov
mov
and
es
fisubrs
or
jecxz
cli
sarl
adc
cmp
je
cmpsb
inc
fists
mov
cmp
push
repnz
add
pop
cltd
cs
xchg
add
xchg
cmp
enter
outsb
dec
and
sbb
out
adc
mov
mov
xor
into
xor
mov
int3
mov
xchg
bound
in
lea
push
ds
pop
and
inc
or
pop
mov
xor
movsl
fdivr
or
sti
jp
or
into
enter
jle
repz
stc
mov
int3
out
mov
sbb
mov
comiss
or
jne
idivb
sub
lret
xchg
pop
fisttpll
pop
pusha
xchg
dec
mov
or
push
cmpb
xor
in
jae,pt
push
adc
mov
sub
xchg
mov
sbb
push
mov
stos
add
mov
mov
jae
ljmp
pop
lahf
outsl
das
xor
inc
lret
mov
pop
imul
xchg
mov
xlat
fsubrl
cmc
or
pop
inc
xor
shrb
insl
cltd
dec
addr16
jbe
clc
or
xor
das
sbb
fisubs
dec
ja
mov
jg
xchg
pop
testb
insl
fisubrl
out
and
stos
pop
decb
ds
jbe
pop
sbb
imul
arpl
idivb
mov
pusha
data16
cmp
xchg
in
js
dec
sub
nop
jno
lea
dec
into
imul
jge
aam
push
incl
and
adc
inc
inc
int
and
icebp
cmp
jg
movl
xchg
loopne
test
rclb
test
rolb
and
in
push
mov
add
call
and
and
ljmp
inc
in
and
int3
jns
inc
xor
cmp
cs
inc
in
loope
push
mov
out
fucomp
lods
mov
pushf
notb
sub
mov
push
in
pushf
add
dec
sbb
mov
shrb
jne
fwait
mov
ret
sbb
loop
idivb
aad
lea
in
inc
loope
fsubp
pop
push
rcl
and
mov
mov
adc
mov
ud0
push
mov
out
xchg
jo
adcb
or
sbb
pop
hlt
jmp
orl
lret
ljmp
icebp
mov
push
andl
rorl
adc
iret
xor
ljmp
cmp
call
lret
push
mov
iret
jbe
test
adc
scas
sub
xor
jecxz
sbb
jp
ficomps
jo
xchg
jnp
push
hlt
dec
or
decb
ja
mov
pop
xor
mov
sub
jp
cmp
fistps
push
les
add
sbb
xlat
andb
or
bound
jl
xchg
xor
fistps
lcall
pop
test
repz
mov
das
bswap
sub
push
fcomps
iret
je,pt
sahf
scas
pusha
dec
inc
xor
jmp
sub
insl
mov
mov
or
mov
sub
jge
sub
orb
adc
cmp
stc
dec
popa
mov
dec
mov
or
and
aas
pop
cmpsl
xor
dec
push
and
rolb
mov
test
or
and
sarl
jo
inc
sbb
xor
push
iret
xchg
jo
xchg
cmp
mov
and
gs
ret
adc
jmp
insl
int3
mov
push
stc
or
shll
add
cmp
jo
push
or
clc
xchg
out
jae
std
pop
mov
pop
imul
sbb
mov
sub
ret
ljmp
inc
fisubrs
pop
bound
lods
out
and
insb
nop
add
pop
and
jae
outsb
jnp
shrl
sbb
dec
pop
cltd
sahf
fcmovnb
jns
pop
jg
in
shll
lahf
into
aad
add
lret
xchg
mov
mov
aaa
pop
shll
shlb
lods
xchg
push
cltd
or
outsb
xor
decb
sub
mov
scas
sub
add
and
add
aam
pop
xchg
add
popf
or
lods
sub
mov
shrb
movsb
stos
loopne
jnp
xor
xchg
lock
out
xor
pusha
or
daa
mov
push
push
popa
fs
xor
xchg
sbb
aad
insl
sahf
data16
shl
outsb
or
or
cmp
push
pop
gs
jno
mov
jb
inc
mov
test
sub
fbstp
sbb
hlt
jle
outsl
xor
lods
popf
cmp
stos
enter
mov
or
call
cli
and
push
loop
sub
or
or
lock
bound
sub
mov
lock
leave
pushf
xor
mov
pop
repnz
push
dec
and
pop
cmpsl
jge
dec
jae
sti
aad
stos
shll
xorb
lahf
jae
mov
jl
xlat
fnsave
rcrl
push
add
arpl
std
repz
outsb
lea
inc
mov
pop
andl
movsb
rol
shlb
push
xor
aam
cli
inc
push
push
iret
rcrb
sbb
insb
pop
ret
cmpb
lret
jnp
ret
ret
in
fcom
scas
rorb
dec
jnp
leave
jbe
and
fidivrl
shrb
aam
push
fcmovnb
xor
fsubl
adc
sahf
sub
sbb
jle
add
jecxz
jmp
movl
and
cltd
out
pop
inc
dec
or
or
mov
xchg
ss
jecxz
adc
sbb
popa
repz
mov
test
and
inc
pop
mov
sub
push
xor
stc
cmp
ja
inc
dec
shll
and
mov
pop
outsb
jb
inc
notl
push
insl
pop
mov
jbe
or
adc
or
xchg
mov
test
mov
sti
adc
dec
pushf
fstpt
lret
clc
xchg
mov
cmc
dec
filds
ret
stc
int3
push
xor
dec
addr16
cmp
adc
push
pop
in
or
mov
nop
dec
push
out
pop
pop
hlt
mov
mov
xor
adc
lcall
sahf
enter
cld
sbb
lcall
out
bound
mov
cmp
xchg
push
add
jns
cmp
add
adc
sbb
cli
mov
jo
inc
lods
negl
jecxz
nop
pop
or
push
addr16
orb
push
out
sbb
cmp
add
ret
push
leave
pop
repz
stos
int3
call
pop
mov
jo
adc
leave
pop
cmp
push
std
add
mov
cmp
pop
mov
in
push
push
shrl
mov
ret
imul
add
cmpsl
test
or
mov
push
mov
jecxz
inc
inc
and
popa
push
lods
nop
dec
icebp
mov
ret
loop
and
test
add
jae
jb
jb
orb
sbb
movsl
hlt
mov
cmp
mov
dec
jge
movsl
lret
or
imul
sahf
xchg
cmp
cwtl
fmuls
push
mov
fcom
xchg
adc
cmc
xchg
mov
mov
push
leave
pop
mov
mov
xchg
dec
push
bnd
adc
les
inc
stos
repz
push
icebp
dec
xchg
das
inc
mov
xchg
stos
outsb
or
out
lcall
out
mov
inc
mov
insl
iret
fistl
dec
or
jg
inc
jp
repnz
adc
push
loopne
xcrypt-ctr
cmpsl
push
sar
std
stos
shlb
push
aas
mov
imul
jl
fistpl
mov
dec
sub
mov
and
xor
add
mov
jmp
adc
rcrl
push
push
or
outsb
dec
aad
mov
fs
subb
in
icebp
test
adc
rorb
jnp
int3
out
pop
test
push
sarb
adc
jo
mov
push
clc
jle
pop
fwait
xor
aas
movsl
ljmp
scas
mov
pop
push
ljmp
repz
mov
fwait
loop
jbe
sbb
xor
insl
sbb
sub
movb
jno
xor
and
dec
movsl
clc
xchg
jecxz
aad
out
inc
insb
cmp
and
dec
inc
xor
mov
mov
jb
pusha
mov
sub
sub
negb
xor
lds
test
jle,pn
popa
sub
popf
jns
xor
or
aaa
xchg
iret
cmp
aaa
cmp
xor
lret
imul
adc
in
inc
or
popa
pop
dec
mov
add
pop
out
in
mov
lock
scas
add
xchg
outsl
add
stos
jmp
xor
jo
dec
push
cmp
mov
inc
loopne
dec
std
sub
cmc
push
fst
pop
push
or
add
clc
or
or
sub
mov
les
xor
inc
lcall
mov
and
syscall
outsl
jmp
inc
repz
loope
sbb
cltd
mov
punpcklbw
inc
adc
shrl
mov
out
mov
and
cmpb
std
decb
dec
in
insb
pop
jg
xchg
in
sub
pop
dec
adc
push
daa
fistpll
xor
insb
or
and
mov
xchg
mov
xor
sahf
cs
addr16
test
shrb
adc
stc
xor
mov
push
hlt
enter
mov
mov
xchg
xor
pop
out
mov
push
stos
inc
out
outsb
push
dec
lret
or
repnz
lock
out
fidivrs
mov
inc
push
rcrl
xor
stos
das
adc
xchg
int3
and
arpl
aad
leave
std
add
lret
xchg
idivb
jb
fcompl
dec
lcall
sub
lds
dec
pop
out
adc
or
or
or
mov
inc
mov
jge
or
jae
repnz
jmp
cmpsl
insb
push
test
mov
adc
daa
mov
mov
jnp
inc
and
out
mov
sahf
pop
lock
dec
not
push
inc
cmp
fwait
xlat
xchg
jmp
xchg
sbb
lcall
xor
mov
xchg
cmp
dec
jae
test
dec
pop
mov
mov
mov
and
xor
or
push
test
inc
mov
in
cmp
xchg
xor
xchg
inc
dec
cmp
jge
lock
xor
out
cmp
inc
sbb
inc
mov
movsb
adc
or
xchg
inc
xchg
icebp
popa
xor
aas
xchg
jg
scas
xchg
lods
into
xlat
pop
fisubrl
test
pop
imul
popa
ret
fldpi
sbb
mov
inc
int
mov
xchg
cmp
fistl
sub
iret
pushf
push
pop
ucomiss
fisttpl
loope
sub
cmp
aas
out
movsb
loop
add
or
call
stos
add
test
leave
out
pop
sarb
sub
push
test
push
mov
nop
lahf
mov
lret
jnp
nop
mov
insl
add
pop
ja
sbb
xor
lods
fmul
xchg
push
test
sbbb
sti
add
ret
cli
sub
call
add
adcb
loopne
scas
imul
push
cmpsl
shrb
dec
mov
bound
sarb
jns
loop
lahf
rcrb
add
or
clc
sbb
int3
add
dec
ret
pop
or
fldl
lock
sbbb
adc
sub
imul
jne
and
pop
jl
sub
jmp
outsl
add
push
daa
xlat
aaa
jnp
fnstsw
test
imul
call
cmp
mov
fdivrl
lahf
shl
nop
sub
jp
dec
sbb
repz
insl
sub
mov
cld
xor
je
loopne
xchg
popa
and
icebp
stc
mov
cmpsb
pop
icebp
jmp
push
or
repz
int
out
ss
jl
insb
jle
jmp
in
xchg
outsl
mov
cmp
sbb
dec
sub
je
pop
ds
in
aaa
add
pop
loopne
imul
jl
jle
sub
fimuls
fcompl
iret
pushw
jp
mov
add
mov
aaa
xchg
mov
mov
icebp
jp
cmp
xor
mov
jge
scas
out
bound
das
xchg
push
jmp
daa
loop
mov
xor
dec
push
lea
dec
ja
xchg
cmp
jns
push
sarl
sti
in
or
insb
push
shlb
rclb
or
rcr
comiss
outsl
xchg
lock
repz
lcall
cmp
scas
xor
test
stos
or
pop
and
mov
insb
daa
imul
mov
repnz
dec
mov
les
ds
divl
in
jl
push
mov
add
scas
lock
pop
push
call
mov
test
mov
push
loope
mov
and
div
inc
in
pop
aad
mov
movsb
adc
ja
sbb
es
fs
ljmp
sarb
fs
sbb
pop
cmp
fimuls
mov
adc
rdmsr
xchg
out
mov
inc
dec
push
jg
dec
mov
mov
lcall
dec
pop
insl
outsl
pop
ds
push
js
imul
inc
push
inc
sbb
sbb
out
arpl
lods
pushf
pop
jge
or
pop
dec
leave
xchg
loop
sbb
in
mov
sub
lahf
cmpl
pop
inc
test
mov
mov
pop
xlat
pusha
push
pop
cmp
ss
aam
mov
dec
lcall
cmc
insb
sub
sbb
nopl
sub
in
pop
movsb
and
fcomp
jg
sub
mov
dec
movsb
jecxz
ret
lea
out
mov
cld
rorl
jo
push
jns
sbb
push
ret
jb
sti
jmp
inc
jp
ss
jecxz
mov
out
xor
movsl
and
fistpl
mov
fdivrl
pop
ds
insb
push
aas
and
inc
and
inc
fsubl
fists
jbe
aad
das
movsl
add
push
dec
call
mov
and
scas
fs
xchg
add
jo
add
mov
test
in
int
dec
mov
dec
mov
out
and
aam
ja
loopne
mov
and
sub
leave
shrl
scas
push
sub
bound
dec
jmp
dec
mov
mov
lock
jecxz
out
push
push
mov
enter
mov
sbbb
sarb
je
add
mov
lcall
jl
loopne
cwtl
xchg
mov
iret
repz
push
mov
pop
and
punpcklbw
push
xor
aas
aaa
jo
or
scas
xchg
mov
testl
jne
test
sub
jbe
fimull
mov
jbe
sub
pushf
iret
lahf
dec
cld
daa
mov
add
jae
jno
aas
je
fisttpll
lock
add
rcrl
enter
mov
inc
jge
push
sbb
lea
imul
cmc
add
sub
mov
cmp
mov
out
jg
mov
outsl
rcr
fidivrl
sbb
adc
sbb
cmp
lret
add
aad
shll
sbb
push
inc
sub
jp
pop
pop
aaa
jge
pop
fwait
jp
cmp
pushf
sub
cmp
dec
rcrb
cmp
aaa
mov
pushf
sarl
addb
xchg
xchg
sub
cmp
sub
lcall
test
xchg
inc
gs
into
cwtl
jne
xor
js
xchg
mov
jl
lock
jg
xor
mov
fwait
dec
pop
negl
rcrl
push
out
xchg
lret
fld
mov
lahf
sbb
xchg
pop
xchg
scas
adc
mov
mov
loop
mov
mov
add
dec
xor
push
test
gs
stos
cmpsb
gs
dec
add
addr16
loop
mov
jle
cmpsl
pop
xchg
pop
adc
out
inc
inc
decl
enter
jnp,pn
xchg
pop
or
push
or
aam
dec
jns
jae
dec
cmpsb
push
mov
pop
adc
lahf
xor
xchg
push
aam
imul
pusha
divb
lret
fsubrs
test
jp
daa
addl
test
push
es
fs
push
sbb
mov
out
sbb
mov
fbld
lea
cltd
pushf
or
or
vpacksswb
icebp
shl
cmpsb
enter
mov
add
je
mov
lea
inc
sbb
xchg
sbb
mov
imul
jle
jbe
fsts
pushf
in
pop
test
and
xchg
mov
xlat
push
fidivrl
sbb
dec
movsl
in
icebp
adc
movsl
ljmp
push
adc
stc
sbb
or
dec
iret
push
out
cmp
jne
dec
in
xchg
jo
push
pop
daa
push
xor
and
shll
mov
ret
lods
cmpsb
shll
mov
leave
xchg
jge
sbb
or
icebp
mov
stos
lods
outsb
in
mov
les
jae
call
adc
les
ds
leave
mov
ret
mov
mov
push
sbb
lds
out
or
sti
bound
out
mov
push
dec
mov
cmc
js
mov
lock
push
ljmp
adc
pop
in
aas
and
bound
add
loopne
sbb
and
dec
sub
outsl
inc
je
das
cmp
cmp
jno
mov
jp
bound
arpl
ss
fcompl
mov
mov
xor
adc
mov
push
mov
cmc
shl
jle
pop
clc
pop
mov
dec
xlat
mov
std
inc
or
lahf
dec
out
lret
add
and
dec
pusha
cmc
js
je
push
stos
in
dec
popf
lret
movups
push
iret
pop
sbb
sub
popf
xlat
jmp
dec
or
rclb
xchg
loop
cmpsl
and
mov
aam
jmp
imul
lods
pop
mov
dec
popa
mov
es
mov
jle
insb
call
push
int
dec
pop
inc
divb
ja
scas
faddp
lahf
int
jbe
dec
mov
jae
fldenv
sahf
push
pop
and
movsl
ret
add
add
mov
jb
ds
gs
stos
fimuls
pop
push
jo
out
cmp
add
xor
loop
lea
in
jg
lret
mov
sbb
add
in
scas
outsl
push
mov
xchg
xor
lea
jecxz
hlt
or
xor
jo
mov
popa
sub
test
adc
cmp
aaa
sub
sbb
stos
loop
cmp
jo
pop
shll
in
in
inc
shl
sub
stc
cmpsl
enter
or
add
fisubrs
push
in
mov
push
cs
adcl
adc
sub
mov
push
dec
out
test
lock
lock
fimull
cwtl
into
xor
fucom
mov
call
jmp
pop
insb
scas
sub
jge
xor
out
data16
leave
and
aas
or
xchg
cmpsb
dec
cmpsl
les
adc
dec
scas
fs
adc
out
rorb
shll
fbld
or
or
mov
mov
mov
cmp
cmpsb
mov
jno
nop
pop
push
cs
rcl
fimull
jp
je
rcrb
dec
data16
fldenv
jge
mov
mov
xor
pop
add
shlb
dec
shrl
in
and
jp
cmp
jecxz
inc
cltd
movsb
movsb
sbb
loop
in
sub
ret
mov
scas
js
pushf
cmp
add
and
int
hlt
mov
or
and
mov
icebp
rol
xor
fldenv
scas
shl
push
out
test
push
mov
mov
shll
mov
mov
xchg
push
mov
jae
ja
montmul
cmpsb
add
cmp
mov
mov
movsl
cltd
jns
sub
jg
cmpb
add
mov
test
ffreep
lahf
out
push
sti
jl
push
mov
push
cld
cmc
in
xchg
mov
adc
ljmp
adc
out
lea
out
push
cmp
pminub
pop
addl
enter
cmp
imul
int3
hlt
stos
fisttpl
fistps
inc
fwait
and
xchg
das
push
sub
daa
add
ss
test
movsl
pop
hlt
pop
xor
lret
aas
mov
std
pushl
mov
inc
js
mov
shll
sbb
aaa
jle
int3
pusha
clc
orb
mov
iret
inc
sarb
fistpl
pop
mov
jecxz
mov
movsl
inc
aam
cs
lahf
rorl
mov
push
aas
repz
sbbl
int
loopne
jge
adc
push
dec
and
fdivl
sbb
inc
out
push
call
xor
xchg
andb
or
jge
jmp
sub
push
enter
mov
out
into
in
xchg
jns
sbb
mov
test
jecxz
or
adc
sbb
xchg
fcompp
sbb
cmp
nop
inc
into
orl
mov
and
sti
cmc
mov
jle
jp,pt
test
lock
dec
ret
push
xor
aam
sarb
dec
cld
gs
xchg
aaa
test
lods
dec
lds
jg
mov
mov
out
sbb
and
xor
idiv
fildll
aam
mov
sub
js
shlb
mov
loopne
scas
mov
sub
add
add
mov
sahf
loope
out
pop
addr16
shlb
repz
jne
out
inc
add
in
hlt
sub
cs
jb
daa
ljmp
jl
dec
icebp
std
nop
fisubrs
ja
jo
or
fdiv
fdivr
fwait
fwait
aad
arpl
das
jno
cmp
cmp
cltd
cwtl
rol
rorb
aam
movsb
push
out
lds
xchg
out
divl
adc
dec
push
dec
out
dec
sti
mov
out
jbe
decb
add
out
pop
jl
cmp
sub
sbbl
adc
mov
lahf
or
sub
popa
stos
and
shlb
das
add
popa
push
cmp
cmp
setg
inc
mov
sub
fst
andl
mov
push
mov
addr16
sub
movsb
fiadds
das
ret
stos
ja
jbe
pushf
loop
pop
or
sbb
shr
pop
rol
movsb
pop
test
icebp
add
cmc
je
ljmp
shl
in
je
std
lret
lds
mov
inc
mov
inc
add
test
cld
mov
sub
out
add
xchg
test
in
fwait
jnp
jns
mov
jl
push
add
jg
push
add
and
maskmovq
push
aas
inc
push
and
aas
add
outsl
mov
push
mov
aas
xor
pop
inc
orb
jno
push
jnp
mov
fisubs
cwtl
or
arpl
cmp
pop
loope
mov
icebp
add
repnz
xor
fcompl
dec
add
bound
imul
pop
inc
leave
fldt
pop
popf
push
pop
insb
xorb
lcall
icebp
shrb
dec
lret
pop
dec
xor
pop
mov
test
pop
mov
das
mov
aas
and
dec
mov
jle
cwtl
mov
lods
cwtl
sub
in
xchg
jge
mov
xor
mov
adc
add
pop
ljmp
pushf
clc
dec
ss
inc
loope
lock
mull
adc
mov
jnp
add
outsb
ds
cmpxchg
pushf
mov
ja
sub
data16
out
and
push
dec
insl
rorb
xchg
pop
push
xorl
scas
imull
add
loop
mov
in
adcb
fwait
xlat
cwtl
push
lea
or
add
sub
or
int3
lods
lcall
sbb
ret
pop
test
dec
jg
shrl
mov
mov
fs
push
addr16
push
lahf
push
push
jge
test
push
in
cmp
dec
repnz
aas
fisubs
adc
mov
fldcw
cmp
mov
in
mov
jl
sahf
inc
aad
cmp
gs
push
inc
xlat
fstpt
sub
fsubs
loope
mov
lahf
sbb
out
push
lock
rcr
aam
dec
shlb
shll
pop
in
mov
push
jle
icebp
push
hlt
add
insb
stos
mov
dec
and
pop
js
ret
fcmovnbe
jl
fidivl
xor
dec
mov
mov
jo
out
addb
xchg
mov
fisubrl
sbb
fisubrl
mov
xchg
inc
inc
pop
cli
push
push
cmpsl
jb
jae
push
divl
enter
daa
mov
lret
incl
pop
jl
mov
movsb
ret
add
call
std
xlat
cmp
add
sbbb
inc
sub
pop
adc
in
repz
xlat
sub
xor
imul
movsl
pusha
sub
test
or
sbb
pop
ljmp
cmpsl
jle
fistpll
push
scas
push
daa
imul
test
mov
dec
mov
add
in
inc
push
xorl
adc
cmp
xor
push
leave
cmp
and
orps
cli
push
lahf
jne
hlt
mov
movsb
mov
test
imul
cmpsb
mov
and
pop
pop
and
jae
inc
pop
shrb
mov
jecxz
ret
and
int3
xchg
cmpsb
sbb
es
mov
xchg
fwait
jle
push
sbb
call
jb
jae
mov
mov
adc
cmp
outsb
fimull
ljmp
xchg
mov
mov
cmp
int3
adc
jecxz
std
jb
or
gs
hlt
mov
jmp
loope
bound
jp
mov
dec
das
jns
push
imul
mov
xchg
in
je
xchg
cld
jne
push
ja
and
inc
lods
push
jne
and
cmpsb
mov
mov
sub
dec
mov
stos
sti
jmp
xchg
popf
daa
xor
jo
jecxz
jne
xchg
xor
xor
push
push
cmpl
out
pop
sti
cmc
movsl
movsl
stc
neg
push
ffreep
ficoml
or
or
sub
mov
xor
xchg
and
testl
les
mov
add
jp
xchg
aas
add
mov
imul
xchg
push
or
roll
push
xchg
xorl
mov
mov
inc
push
ret
xchg
inc
clc
mov
inc
pop
fdivrs
ljmp
js
jmp
sbb
lods
mov
insl
lcall
shrb
cli
orb
xchg
cmpsb
sbb
fisttpll
lret
pop
out
mov
xchg
loope
mov
mov
fstp
jecxz
ret
sbbb
pop
out
sub
add
adc
mov
push
and
loopne
in
cmp
mov
jecxz
mov
es
sbb
cmpsb
pop
pop
xchg
pop
sbb
std
notl
notb
lea
xchg
ret
mov
mov
lea
or
imul
sti
and
inc
ficoml
les
dec
cmp
jg
sub
addl
and
mov
mov
push
js
and
mov
sub
loope
cmp
jns
jg
jne
pop
jle
adc
test
inc
add
dec
pop
pop
addr16
adc
mov
inc
or
ficompl
out
mov
shr
pop
dec
repz
sbb
push
adc
cmpsl
int3
xchg
push
mov
lods
sub
fistps
repz
jecxz
jne
jno
pop
or
repz
addb
adcb
inc
xor
cmpsb
jne
into
lock
xchg
rclb
test
int
push
xchg
jbe
jmp
loop
mov
or
adc
xor
jle
add
sub
sarl
push
fnstenv
mov
enter
cmp
test
test
stos
or
mov
cmp
adc
push
mov
jns
inc
mov
and
adc
jmp
xchg
cs
xchg
shlb
and
and
ret
adc
or
ds
movsl
stc
std
mov
int3
add
xor
aad
ror
ficomps
cli
cs
vmaxss
sub
cs
bound
iret
add
iret
mov
pop
pusha
or
sub
subb
dec
popf
call
jne
enter
shll
adc
dec
inc
push
pop
jle
jecxz
xchg
dec
inc
imul
call
inc
add
adc
dec
mov
dec
sub
daa
aaa
or
out
int3
dec
test
mov
push
sbb
int3
dec
arpl
js
xchg
push
out
xchg
in
clc
repnz
mov
inc
mov
lods
in
gs
inc
daa
jne
sub
fs
inc
cmp
dec
out
or
clc
fimull
cmp
mov
jl
xor
mov
mov
jle
in
pop
imul
jmp
mov
ret
cmp
lret
dec
lret
enter
lea
push
inc
popf
out
arpl
movsb
jecxz
mov
xor
mov
dec
xchg
shr
pop
push
popl
stos
repz
adc
jge
jle
icebp
xor
stos
jge
push
lods
mov
sub
ja
cmc
loope
in
sahf
mov
xor
cwtl
adc
sbb
and
int
iret
aaa
test
mov
repz
mov
inc
lret
push
xor
push
cmp
shr
sub
sbb
int3
pop
lret
lock
dec
fwait
sub
mov
adc
push
imul
cmpsl
call
in
in
cmpsl
stos
loop
sub
and
xchg
jl
scas
cmp
cli
push
stc
ss
lods
push
divb
cli
or
mov
adc
dec
repz
enter
or
inc
xchg
mov
scas
inc
mov
jae
popa
push
jl
std
cmp
shrb
fcomp
xor
add
push
or
scas
lods
jg
in
xor
lods
ja
xor
adc
sti
js
lahf
push
sub
pusha
adc
stos
dec
adc
pop
repz
mov
sub
movsl
jle
adc
jl
sbb
sbb
sbb
or
cs
mov
lods
or
aaa
ljmp
pop
sbb
aad
add
push
mov
pop
add
lea
frstors
int3
adc
push
mov
or
push
cwtl
pop
gs
add
cmp
insb
adc
adc
sbb
aad
std
fists
xor
or
mov
lahf
sbb
pop
pop
test
int
fdiv
mov
lea
jmp
fwait
mov
mov
jmp
mov
fisttpl
outsl
push
and
pop
cmp
pop
xlat
rcll
inc
gs
xchg
inc
enter
dec
cmp
pop
ja
mov
int
xchg
xchg
mov
cmp
xchg
nop
aad
ret
or
add
fcmovnbe
cmp
add
les
test
ret
int3
inc
jle
mov
push
test
out
cmp
mov
gs
pushf
dec
and
dec
mov
and
enter
mov
sub
cmp
lods
or
lea
popl
push
frstor
jne
lea
pop
dec
adc
fdivs
xor
daa
daa
sub
push
lcall
fistpll
xchg
jmp
mov
es
bound
jge
lcall
xor
push
mov
cmp
scas
in
add
push
push
cmp
inc
loope
push
aaa
sbb
std
push
cltd
jle
pushf
in
xchg
jge
inc
shlb
pop
fistpl
pop
and
enter
rcrl
pusha
jp
push
out
outsl
inc
xor
mov
adc
test
mov
movsl
xchg
push
dec
std
and
aad
mov
or
push
mov
in
mov
jecxz
repnz
mov
cmp
xor
fcompl
repnz
call
push
pop
xchg
imul
lods
cmc
adc
cmp
and
out
or
je
sbb
adc
dec
sbb
xor
xchg
xorl
mov
mov
dec
mov
xor
pop
push
shll
mov
pop
cwtl
cmp
jge
sbb
jle
push
pop
inc
mov
mov
fisttps
push
or
les
gs
or
push
mov
gs
paddsb
insl
and
xchg
push
push
fistl
shrl
ljmp
and
andl
sbb
jo
mov
and
insl
add
test
addr16
ret
mov
cmc
pop
dec
popa
sbb
xchg
hlt
and
popa
negb
call
cmp
mov
fstpt
push
cld
bound
pop
mov
xor
push
rclb
sub
jo
lret
enter
add
add
filds
cmp
mov
test
sahf
add
mov
rcr
adc
aam
mov
add
sti
mov
add
mov
sub
pop
lea
jbe
fisubrs
lcall
push
mov
adc
cmp
sub
in
lods
in
pop
mov
imul
fbstp
jp
mov
mov
mov
pop
pop
push
cmp
insl
cmp
lods
lds
push
jb
sahf
pop
pop
scas
and
jl
test
loopne
test
mov
lcall
xchg
xchg
mov
xchg
into
sbb
add
cs
notl
orb
mov
lret
push
xchg
imul
lcall
int3
dec
sub
push
and
push
cmpsl
add
add
shl
pop
cmc
or
lds
lea
push
sub
sbbb
popa
fnsave
mov
push
inc
ret
pop
mov
jle
inc
fdivs
das
or
pushf
insb
lahf
sti
xor
subb
mov
mov
xchg
outsl
out
push
inc
mov
mov
jecxz
adc
aas
jb
sub
jp
rorl
test
aaa
xor
dec
pushf
push
shlb
or
mov
movsl
xlat
dec
xlat
cmc
cmpsl
mov
int3
cmpsb
or
mov
gs
aad
in
mov
xor
and
subb
andb
jo
push
pop
enter
nop
mov
push
jp
shrb
mov
jecxz
into
mov
jb
mov
mov
sahf
mov
fwait
inc
jmp
adc
jns
cmpsl
fld
popf
andb
aas
pop
aaa
daa
out
sahf
sub
outsb
inc
inc
mov
sub
in
out
lods
mov
fsubrs
adc
hlt
and
jnp
push
fisubs
popa
insb
mov
xor
movsb
xor
nop
inc
mov
jl
adc
pop
fwait
sub
les
push
mov
push
xor
jmp
mov
pop
imul
push
jb
xor
inc
push
cmpsb
and
nop
sbb
mov
fcmovnbe
repnz
sahf
clc
or
aad
mov
rorl
and
popa
jno
lea
andl
cmp
enter
lret
cltd
sahf
push
push
cmp
mov
jmp
mov
fsubr
aam
and
int
in
out
pop
adc
and
push
fimuls
dec
push
pop
fstpl
pop
insb
or
push
sbb
dec
xchg
mov
xlat
cmp
push
push
push
pushf
adc
enter
pop
jo
push
mov
xchg
mov
pop
ja
repnz
pop
push
ret
ds
rolb
test
inc
add
cltd
jge
js
shlb
call
cmc
cmpb
enter
mov
and
mov
push
pop
fnstcw
fucomp
test
movsb
cmp
cmpsl
pop
cmpsb
jg
out
insb
ss
and
pop
scas
mov
lahf
insl
lret
mov
shlb
fdivrp
adc
or
xor
mov
jecxz
sbb
xor
pop
dec
stos
push
scas
outsl
or
ljmp
js
outsl
mov
sbb
xor
push
sbb
ffreep
andb
adc
dec
pushf
icebp
ss
xchg
fadd
push
jnp
hlt
cmp
cmp
int
dec
or
jne
sub
outsl
movsb
pop
fidivrl
sbb
bnd
jp
repnz
in
or
or
mov
sbb
pushf
dec
jmp
loope
lods
das
inc
fwait
dec
aad
mov
inc
jb
xlat
jle
cmpsb
cli
pop
inc
mov
pop
cmc
adc
add
clc
xor
mov
xchg
xchg
test
les
imul
das
adc
add
invd
or
cmp
lahf
bound
mov
icebp
jmp
mov
and
pop
mov
jmp
push
dec
xorl
dec
xor
sub
ja
mov
enter
sarl
loop
aad
push
out
sti
adc
or
pop
pop
stos
jge
sarl
cmp
xchg
imul
scas
cld
lods
mov
inc
outsb
pop
in
cwtl
pop
xchg
js
jno
xor
loop
push
pop
inc
loope
out
mov
loopne
out
push
push
std
jl
loope
xchg
or
aas
push
insb
xor
xor
mov
mov
mov
jmp
lret
cmp
mov
out
lret
cmpsl
imul
sbb
ret
jae
lock
inc
inc
push
push
repz
lock
or
dec
pop
jae
jecxz
adc
dec
sbb
sub
divb
shll
sub
mov
ja
mov
frstor
in
cmp
mov
nop
push
push
xchg
repz
xchg
mov
xchg
scas
lret
out
dec
mov
gs
add
mov
movsl
mov
push
into
jb
je
jge
test
aam
pop
mov
femms
xchg
lret
mov
pop
mov
adc
aad
lret
mov
je
mov
add
pop
xor
sbb
jle
jne
pop
mov
out
pushf
in
jo
inc
inc
jno
xor
scas
shrb
std
stos
fiadds
fisubrs
das
and
or
and
mov
sub
xor
mov
sbb
loope
adc
add
push
add
adc
insb
hlt
fildll
push
or
shrb
adc
push
out
xchg
sbb
lahf
or
fsubr
outsb
nop
mov
sub
sub
inc
xorb
out
mov
inc
scas
fnstsw
shlb
push
ret
andb
dec
mov
ljmp
pop
xchg
lods
cmc
push
ret
xchg
scas
hlt
jmp
cmpsl
push
push
loope
adc
frstor
js
enter
xor
cmpsl
lock
mov
or
imul
in
xchg
pop
jae
push
nop
xchg
adc
cs
add
inc
push
push
jbe
adc
jmp
and
xchg
mov
inc
je
cmp
mov
add
add
pop
dec
xor
pop
out
ret
in
and
mov
lret
xchg
mov
test
dec
push
mov
insb
dec
fldt
arpl
scas
jns
cmp
addr16
add
mov
repnz
movsb
insb
frstor
jmp
lds
fs
test
jmp
dec
and
loop
fldcw
out
in
and
loop
inc
dec
imul
lret
xor
pop
les
idivb
or
nop
in
add
rorl
fisubs
xchg
hlt
sub
ret
scas
mov
loopne
fxch
inc
outsl
repnz
movsl
sti
lcall
out
lahf
mov
lods
adc
in
icebp
gs
sub
cmp
cs
xlat
hlt
pop
scas
mov
mov
lods
rcrb
pop
scas
aam
push
dec
into
adc
mov
mov
repnz
sbb
xor
dec
mov
and
xor
test
adc
push
jbe
pushf
leave
leave
jns
cli
aad
mov
je
cmp
sub
sahf
rorb
test
test
in
mov
sub
sbb
mov
int3
popf
js
loope
xor
into
cmp
mov
jo
push
push
int3
mov
and
ljmp
les
call
fdivp
mov
add
divb
mov
jmp
mov
cltd
dec
aad
pushf
repz
lock
rcrl
in
fsubl
outsb
pop
lret
dec
aam
jecxz
fmuls
push
push
or
pop
sub
lds
xchg
inc
xchg
mov
sbb
stos
js
mov
pminsw
roll
scas
pop
fcomip
inc
inc
jecxz
sahf
loope
pop
stos
xor
in
fsubs
into
push
leave
jle
sahf
lock
xchg
sti
int
dec
xor
mov
xor
cltd
popf
push
xor
xchg
cmp
arpl
cmp
mov
jecxz
and
inc
cmpsl
popf
lds
jmp
and
call
add
fidivl
sbb
pause
push
fistl
ret
idivl
stos
in
imul
stos
cli
mov
or
aad
scas
cmp
out
mov
and
fldenv
mov
pop
das
mov
sarb
scas
sub
lcall
add
pusha
and
push
rcll
xlat
xchg
push
adc
ljmp
fisubs
call
leave
repnz
push
sub
jns
cs
fidivs
adc
repz
jo
jns
iret
aaa
sub
or
icebp
xchg
xor
pop
add
pop
push
arpl
aam
xor
test
dec
fisubs
mov
cs
les
mov
lods
sahf
movb
in
push
inc
je
jno
faddl
mov
mov
mov
or
lds
std
mov
nop
outsb
add
mov
jno
addr16
addr16
addb
or
aas
adc
rorl
mov
arpl
sbbb
push
arpl
loop
xchg
jl
sti
or
shl
mov
scas
add
mov
push
pop
or
xor
int3
sbb
test
pop
faddl
insb
stos
lret
mov
andb
mov
mov
inc
nop
add
shlb
or
push
movsl
mov
sbb
mov
or
cwtl
lahf
fldenv
lea
jge
mov
aas
incb
add
push
fdiv
fimuls
roll
mov
loope
aas
xor
sbbl
fcmovu
daa
or
cmpb
outsw
js
enter
mov
pop
adc
ljmp
iret
test
jge
sub
daa
shll
pushw
mov
dec
push
sub
xor
mov
addr16
pop
mov
and
in
hlt
sbbl
sub
sbb
sahf
in
dec
or
mov
out
cmp
punpckldq
ror
mov
xchg
addl
jo
jb
or
or
call
addr16
imul
and
notl
arpl
leave
sbb
mov
in
and
push
adc
pshufw
push
push
sahf
ja
cmp
icebp
cli
repz
add
and
add
enter
xor
cld
nop
lea
aaa
add
aad
jo
mov
xchg
ljmp
test
imul
mov
sub
or
inc
push
dec
xor
sub
std
int
lock
icebp
xchg
movsl
mov
pusha
insl
mov
mov
xchg
out
xor
sub
jns
jns
and
fdivrs
outsb
mov
cmp
addl
hlt
stc
cmp
out
push
adc
scas
hlt
jmp
fdivl
in
cmp
in
sub
mov
or
outsb
or
cmp
into
or
mov
dec
adc
in
test
jnp
movsb
rorb
push
dec
xlat
or
sahf
push
mov
movsl
xchg
fst
leave
jno
adc
test
cmp
sub
xchg
pop
rolb
les
pop
dec
sqrtps
and
adc
adc
add
mov
sub
iret
cmp
sub
mov
xchg
or
xor
repnz
rcr
inc
dec
jo
mov
mov
stos
insb
mov
in
aas
push
dec
xor
mov
fisubrl
and
outsb
das
fstpt
jp
or
xchg
dec
sbb
popf
jnp
xchg
or
in
sti
jl
lods
pop
dec
push
icebp
scas
inc
mov
adc
xor
jge
fstl
test
or
add
push
inc
or
iret
pop
test
jae
or
sub
cmc
and
imul
add
and
test
imul
aaa
xor
adc
push
iret
and
sub
test
lods
movsl
jmp
std
insb
jb
lods
or
inc
sub
aaa
mov
xlat
adc
mov
mov
jns
jns
xor
adc
les
inc
lock
iret
pop
mov
jno
cmp
pop
ret
inc
in
inc
inc
mov
ja
insb
lds
mov
add
or
cmp
fadds
movsb
fwait
dec
mov
and
mov
in
xchg
popa
inc
push
add
sbb
adc
pop
add
pop
sub
add
mov
stc
mov
mov
arpl
xor
in
jp
std
cmpl
lret
lock
push
mov
jbe
and
into
sbb
lcall
cmp
mov
and
and
add
scas
cmp
cs
push
stc
clc
jns
push
fsubl
pop
lods
and
cltd
pop
mov
fs
test
fdivrp
fcmovnb
cmpsb
lock
movsb
movl
dec
sbb
inc
xchg
adc
dec
inc
mov
xchg
and
inc
mov
outsl
inc
mov
jle
pop
sub
sub
outsb
das
push
jmp
jecxz
cmp
scas
pop
jle
mov
roll
jns
dec
xchg
fs
mov
mov
inc
cmp
push
push
sbb
lock
addr16
ficoml
dec
push
enter
mov
mov
xor
xor
sbb
cwtl
stc
lea
push
mov
cmp
pushf
sub
adc
testb
test
sbb
nop
add
mov
call
movsb
sbb
add
enter
outsl
stc
cmp
mov
sbb
cmp
stc
adc
push
lahf
ljmp
test
hlt
jo
out
mov
sub
inc
adc
push
sub
xchg
push
test
sbb
cmp
mov
nop
out
sbb
rcl
jmp
xchg
movsb
aam
mov
mov
lahf
pop
insl
mov
jae
xor
shrb
cmpsb
movsbl
imul
icebp
push
fsubs
scas
pusha
scas
ljmp
xor
adc
lods
pop
or
and
cmp
adc
sub
adc
into
push
and
mov
jl
lret
xchg
loope
lea
nop
sub
lods
pop
les
lret
push
fsubs
ljmp
mov
hlt
inc
or
sahf
and
imul
ret
mov
pop
cmp
ds
fsubl
loopne
mov
xchg
lcall
push
cmp
push
aam
aaa
adc
mov
or
aad
idiv
and
fstpt
data16
jg
xchg
xchg
std
or
xchg
stos
jo
push
fstpl
aas
ljmp
mov
pop
dec
inc
stos
adc
inc
mov
push
mov
adc
push
paddw
xor
push
ja
jns
xchg
outsl
inc
das
sub
push
sbb
rcrb
sbb
inc
jo
pop
aas
pop
dec
cli
lret
or
cmpsl
arpl
adc
fwait
mov
mov
in
hlt
decl
push
cmp
pop
movsb
sahf
jo
stos
push
enter
into
pop
rol
xlat
leave
fcmove
jb
in
mov
cs
std
or
stos
imul
jle
and
push
xchg
daa
mov
addl
pop
pop
je
push
jbe
das
divl
adc
imul
add
xor
inc
sti
xchg
loop
out
maskmovq
testl
xchg
pop
lds
les
stos
outsb
and
addr16
push
xchg
push
mov
ja
out
movsb
dec
loopne
pushf
adc
mov
movsb
cmp
adc
in
in
outsb
inc
or
cmp
xor
lods
xchg
js
xchg
fdivl
dec
sbb
pushf
push
sarl
into
movsl
lods
jecxz
push
out
push
into
sbb
pop
les
jo
pop
lods
fs
cmp
jns
scas
andl
insb
cmpsb
leave
dec
icebp
lahf
insl
or
mov
add
pop
data16
lahf
and
popa
mov
iret
xor
rcll
push
bound
dec
mov
ret
dec
cld
dec
popf
lea
adc
mov
enter
xchg
cmp
add
cwtl
xchg
test
xor
pusha
pop
into
subl
inc
or
js
jbe
ss
mov
mov
sub
jo
vrsqrtps
xlat
or
fld
dec
mov
xchg
sub
popf
fadds
mov
sbb
mov
vmovaps
aaa
imul
out
lahf
int3
jo
cmp
pop
aad
pop
call
ljmp
cmc
lods
decb
xchg
fmuls
jl
xchg
shr
insb
lret
or
arpl
push
dec
pop
and
cmp
pop
push
loopne
jmp
pop
dec
dec
int3
adc
jbe
in
ret
fstpl
cwtl
mov
mov
scas
movups
ficoml
dec
xchg
or
mov
add
inc
or
jle
es
xchg
jmp
push
outsb
dec
aam
repnz
mov
xchg
cmpb
inc
fbld
cmp
inc
imul
push
ret
aam
and
in
fisubs
call
out
sub
dec
repnz
insb
dec
pushl
inc
sbb
xchg
xchg
adc
xorb
jae
push
mov
shll
inc
pop
stc
shrl
jge
xor
cltd
push
pop
and
fstl
repnz
jg
push
sti
insb
push
dec
jge
inc
scas
cmp
jne
sbb
sti
mov
fucom
jno
cmp
out
cmp
ss
dec
dec
mov
jb
add
pop
and
adc
dec
cmp
xchg
stc
addr16
push
fstps
mov
gs
cmp
or
and
jl
adc
adc
pop
rcrb
daa
mov
mov
mul
push
pop
rol
mov
push
sbb
cmp
push
mov
ljmp
or
jp
enter
adc
or
push
dec
out
ja
sbb
repz
ljmp
imull
xchg
sar
jge
mov
jmp
jne
test
fwait
jnp
jp
add
sub
push
cwtl
xchg
dec
pop
addb
mov
mov
out
xor
cmpsb
fnsave
xchg
and
cmp
std
arpl
out
icebp
xor
popf
cmp
inc
scas
push
push
test
xor
and
outsl
lcall
arpl
es
imul
jbe
shll
push
ret
xlat
sbb
inc
pop
jg
dec
jmp
jmp
leave
dec
mov
stos
mov
leave
lcall
adc
xchg
adc
sbb
jl
ja
clc
pop
lcall
inc
int
enter
mov
sub
or
sbb
pop
inc
sub
lds
aaa
cmp
scas
sub
or
dec
inc
pop
add
push
je
mov
add
fdivp
orb
jle
sbb
aas
dec
mov
cltd
fistps
adc
mov
imul
push
clc
pop
mov
orb
or
negb
jle
sub
adc
cli
adc
lea
fmull
clc
mov
mov
mov
stos
mov
dec
push
mov
pop
mov
pop
fnsave
mov
dec
pop
xchg
push
xor
adc
xchg
mov
out
adc
cli
pop
sub
inc
aaa
sbb
aam
dec
cmpsl
iret
adc
int
and
lds
sti
cmpsb
ljmp
add
pop
or
add
and
inc
push
sahf
clc
xchg
stos
or
xor
xchg
rorl
bound
jae
mov
push
adc
jo
rcr
into
add
clc
and
or
pusha
xor
push
push
jbe
popa
mov
aas
inc
scas
daa
or
push
out
mov
pop
add
adc
into
push
lret
loope
movsl
push
xor
push
jge
mov
pop
mov
and
add
mov
lock
jge
stos
cmp
cmp
lea
mov
clc
insl
mov
jge
arpl
imul
mov
xchg
jmp
mov
adc
pop
aad
or
fs
jns
xchg
and
and
or
xor
add
jp
dec
push
sbb
jl,pt
dec
and
shl
pop
mov
mov
sti
mov
cmp
xchg
ja
out
aas
cmpb
aaa
cmp
mov
leave
repz
int3
sub
out
out
push
cwtl
outsb
cmp
out
ljmp
insb
rorl
jle
hlt
test
idivb
es
mov
out
mov
lods
pop
push
fisttpll
shll
sti
adc
call
into
std
notl
or
mov
and
out
loopne
out
jmp
push
in
dec
push
adc
inc
scas
ret
xchg
js
mov
insb
js
imul
mov
jae
mov
cltd
fsubl
xchg
and
fs
inc
loop
pop
xor
cmp
xchg
call
inc
aas
dec
pop
inc
andb
sub
sub
test
jl
mov
pop
daa
repnz
adc
addl
lret
pop
pushf
shll
push
push
lcall
cmpsb
add
mov
xor
mov
or
dec
icebp
xor
mov
push
push
mov
adc
and
mov
mov
push
psrad
xor
daa
lret
adc
mov
push
mov
aad
fisubrs
push
adc
mov
sti
add
xchg
inc
push
mov
lds
xchg
xor
jae
xchg
les
dec
call
clc
shlb
test
out
adc
fnsave
mov
jbe
and
add
pusha
mov
inc
cmp
ret
out
mov
sbb
cld
mov
out
cs
add
push
jl
jmp
addb
ja,pn
xchg
push
push
aad
sbb
dec
mov
cld
xchg
mov
push
fiaddl
xor
fdivs
pusha
insl
adc
cwtl
test
lret
pop
cmp
dec
dec
mov
xchg
mov
test
push
xor
dec
or
add
mov
pop
scas
cmp
imull
xlat
mov
stc
leave
xchg
insb
icebp
ret
inc
fsubl
ss
out
xchg
imul
cs
pop
daa
mov
lea
test
inc
and
jae
xlat
inc
stos
ret
hlt
dec
fsts
jno
adc
jo
or
mov
inc
pushf
cmp
loop
das
inc
xor
loopne
cmp
xchg
shll
mov
pushf
and
dec
mov
imul
out
cmp
in
hlt
cmpsl
sbb
insl
rorl
jnp
and
cmp
sbb
ljmp
int3
pop
js
aam
or
xchg
stc
rcll
lea
dec
jnp
add
lods
jno
jg
jg
sti
and
cmpsb
mov
insl
addb
fstpl
scas
inc
rcrb
mov
mov
pop
inc
mov
rorb
call
popa
and
add
insb
sbb
outsl
xchg
stos
movsb
push
cmpsl
bound
and
adc
mov
aaa
repnz
stos
adc
lods
test
testl
xchg
cmpsl
leave
mov
xchg
pop
shll
in
mov
stc
adc
outsb
xchg
mov
andps
int3
cmp
jae
adc
jp
pushf
stos
pop
ds
jmp
shrb
inc
cmp
in
fbstp
mov
cmp
pop
imul
and
push
jnp
xchg
mov
outsb
popf
xor
shll
icebp
call
push
aas
push
scas
mov
dec
add
in
push
sbb
mov
lods
sbb
push
xchg
adc
std
xor
ja
mov
add
adc
aad
imul
push
and
pop
jecxz
mov
adc
fidivl
jb
rcrb
in
int
lock
loopne
xchg
ljmp
pop
cmpsb
pop
inc
les
mov
ds
mov
in
sub
ss
sub
divl
or
sub
cmpsb
das
in
orb
add
pop
subb
bound
in
pop
scas
clc
pop
adc
inc
xchg
test
daa
lock
fs
in
jp
mov
jl
mov
mov
push
inc
sub
lcall
testl
fisubl
addr16
enter
cmpsl
cld
les
gs
fisubrl
jecxz
jbe
pushf
jns
ds
in
ljmp
mov
in
push
hlt
mov
jmp
push
pop
fistl
mov
loopne
push
xchg
sbb
inc
sbb
gs
jb
mov
xchg
push
aas
arpl
sbb
pop
inc
fwait
outsl
xchg
mov
lods
xor
mov
shrl
lret
jb
hlt
pop
rcll
adc
imul
mov
inc
scas
and
adc
inc
inc
xchg
adc
jbe
dec
mov
lods
ret
cld
mov
mov
mov
add
mov
pop
inc
jns
mov
xchg
jle
cltd
and
leave
aad
dec
mov
pop
add
lea
fimuls
iret
or
stos
mov
lahf
jne
negb
push
pushf
call
push
mov
int
jns
and
and
stc
sub
in
outsb
mov
andb
mov
shl
sbbb
aam
sbb
inc
dec
ret
pushf
sbb
add
adc
arpl
stos
sbb
cmp
clc
subb
push
mov
fisttpll
xor
pop
rcl
int
sub
or
jmp
push
mov
sub
fstp
and
adc
push
mov
jae
imul
push
mov
dec
add
xchg
imul
rclb
fidivrl
add
jae
sahf
pusha
xchg
sar
xlat
add
imul
fsubrs
jecxz
pop
leave
inc
hlt
cmp
mov
xlat
inc
jge
push
leave
iret
jle
and
dec
adc
clc
jle
jle
or
in
daa
dec
roll
cmp
fs
in
cltd
mov
adc
adc
dec
aam
test
push
nop
repz
or
adc
pop
shll
xchg
cmp
push
movsl
inc
out
into
int
add
jne
test
xchg
stos
pusha
push
bound
adc
popf
mov
adc
or
lret
movsb
mov
fildll
sub
cmpl
out
movzbl
fwait
stos
bound
sbb
adc
cmp
pop
mov
xchg
mov
negl
mov
std
mov
inc
mov
xchg
je
dec
aaa
sbb
push
pop
push
adc
call
push
in
cli
xor
test
jo
mov
sbb
or
xor
lahf
inc
sahf
movsb
pop
push
inc
adc
cli
and
xor
pop
cmp
and
add
sbb
leave
data16
add
mov
mov
mov
les
loop
es
cli
es
push
outsb
imul
daa
dec
mov
sub
dec
xor
gs
nop
add
pop
inc
out
fidivl
or
mov
incl
daa
jecxz
dec
mov
ret
pop
mov
adc
or
fwait
test
and
inc
loope
xlat
scas
cmp
cld
cmpsl
adc
jp
ret
pushf
jbe
test
xor
stos
sub
xchg
pop
stos
mov
xor
jb
add
mov
xor
into
dec
lcall
and
nop
idivb
neg
lcall
cltd
bound
lret
call
call
jge
fsubl
idivl
xor
mov
sbb
scas
lock
xor
loop
add
insl
leave
aam
mov
cmp
sub
jp
adc
daa
dec
add
push
js
cwtl
dec
das
imul
and
add
fcoml
or
and
sbb
ds
bnd
xchg
mov
adc
fimuls
adc
mov
out
xchg
in
rcrl
imul
leave
fisttps
nop
outsb
sub
push
stos
mov
cltd
dec
jg
aad
rolb
xchg
mov
pop
mov
mov
inc
arpl
sub
dec
faddp
hlt
retw
or
into
inc
inc
sahf
popa
sub
inc
add
push
dec
addr16
dec
loope
iret
ja
mov
das
dec
inc
je
sub
movsl
and
icebp
add
hlt
xchg
pop
ret
fisubl
dec
pop
frstpm(287
pop
dec
adc
and
ds
add
sbb
pop
aad
pcmpgtw
shlb
fdivl
jl
inc
mov
cld
stc
imul
push
es
scas
loope
lock
fucom
mov
cmp
shr
in
push
xchg
in
sbb
pop
mov
pop
in
push
pushl
xor
mov
xchg
pop
pop
add
jns
sarl
pusha
mov
lods
push
adc
shll
adcl
in
pop
cmp
mov
inc
pushf
sbb
push
add
pop
jp
add
mov
cltd
mov
ret
stc
xor
ret
lret
aaa
cmp
xor
pushf
pop
sbb
xchg
lock
add
xchg
out
push
mov
jle
and
pmuludq
sub
stc
cmpsl
or
leave
insb
jae
or
xchg
xchg
and
mulb
jp
fcmovnb
pop
das
xchg
mov
insl
sbb
lea
mov
dec
mov
dec
sub
lds
push
repz
nop
icebp
lds
mull
jns
jae
mov
lods
jp
mov
test
in
sub
push
test
lock
cmpsb
dec
mov
lds
jmp
out
sub
or
sub
xor
out
lcall
add
pop
sub
adc
inc
aaa
aaa
shlb
dec
pop
fbld
in
xor
mov
ds
xor
mov
jg
mov
scas
add
daa
in
push
mov
faddl
insb
enter
cmp
aaa
fidivl
mov
adc
addb
dec
sub
fcompl
addr16
xor
rcrl
inc
loop
push
pop
call
sbbb
fldcw
dec
test
out
sbb
cmp
sbb
repnz
leave
fcomip
pop
jb
xchg
mov
clc
cwtl
lea
outsb
xorb
xchg
push
cmp
and
jmp
js
ret
cmc
lods
mov
inc
and
lahf
arpl
cmp
inc
jg
xor
jg
in
test
xchg
mov
cmp
movsl
and
enter
and
shll
push
inc
std
lods
push
sbb
stos
roll
xchg
cmc
mov
push
adc
rcr
mul
dec
rcrl
add
testl
stos
sub
mov
cmpsl
fwait
lret
cs
mov
stc
mov
fnstsw
fsubrp
ret
ja
pushf
and
sbb
cmp
jle
sbb
data16
xchg
adc
fimuls
rorb
xor
pop
popf
stc
fisttps
addb
cmp
mov
pushf
rolb
icebp
fwait
aas
fisttpll
ljmp
aam
xlat
int
xchg
mov
cmp
cli
xchg
mov
loope
cltd
and
jnp,pt
lret
mov
and
mov
pushf
add
jns
test
mov
stos
and
mov
mov
in
stc
test
lock
jmp
out
xchg
pop
cwtl
dec
roll
xchg
fadds
dec
cmp
mov
daa
jbe
ds
pop
gs
xchg
push
js
cmp
cmpl
push
sub
sbb
das
repnz
sbb
imull
mov
aam
popa
xor
ds
cmp
mov
shrb
fcoml
mov
addl
scas
popa
cwtl
add
cwtl
movsb
shll
add
cmp
jne
inc
and
testb
jecxz
lods
aaa
roll
jmp
push
mulb
push
test
aas
rcr
jae
push
mov
nop
test
jbe
adcl
in
test
int3
mov
pop
lcall
out
xabort
out
mov
mov
jbe
add
fsincos
add
int
int3
in
mov
xchg
popf
sbb
sbb
dec
jno
jnp
xchg
icebp
dec
in
popf
push
arpl
shll
pop
shlb
or
pop
fnstenv
mov
stos
out
arpl
pop
dec
in
jbe
push
push
xor
loop
ret
push
in
enter
sbb
enter
lods
sub
gs
cs
xor
sahf
pusha
pop
sbb
jle
inc
jae
insb
sub
sbb
cli
fimull
sbb
aaa
xor
xor
fs
mov
insb
out
jl
jg
lret
es
xor
out
fistpll
call
flds
jmp
std
cmp
cmpsl
out
stc
rcll
ss
pop
xchg
add
adcl
sbb
loope
fldl
xchg
cmp
leave
les
pop
cwtl
pop
in
lds
fstl
mov
bound
push
inc
stos
adcb
cli
cmpsl
and
xchg
cli
stc
pop
cli
ret
dec
rcr
jo
cmp
or
xor
pop
rorl
sbb
xchg
sub
xchg
dec
scas
cld
sub
or
cmp
mov
mov
stos
popa
insb
adc
rcl
mov
pop
xor
inc
addr16
and
lar
cltd
sub
adc
inc
push
push
mov
jb
cli
loopne
cmpsb
or
xchg
and
movsl
stc
fsubr
jae
dec
inc
sbb
inc
pop
xchg
fidivl
xchg
ret
push
pop
call
pop
mov
xor
cmp
push
popa
sub
mov
mov
test
aad
adc
pop
cld
inc
xor
mov
fwait
mov
mov
jns
cmc
stos
cmpsl
imull
dec
push
cmp
mov
and
in
pop
pop
popa
jne
dec
dec
mov
outsl
cmp
xor
fst
jno
dec
xor
test
jno
mov
dec
sub
or
or
mov
or
push
and
push
add
addr16
jae
mov
jp
into
xlat
and
aas
xor
negb
mov
clc
cwtl
xor
xor
xchg
jno
pop
add
or
jnp
stos
jb
cmp
push
rclb
rcl
cmp
jne
repz
xor
add
push
jp
das
sbb
cli
jmp
scas
pop
mov
and
lock
ret
jno
xor
lea
sti
sub
mov
push
mov
jne
cmp
leave
jno
push
adc
jg
pop
mov
ja
cld
pop
sbb
mov
cmp
test
es
shll
add
inc
add
cmp
cli
cwtl
daa
mov
data16
jge
loop
pop
pop
inc
xchg
xor
push
pop
sub
aaa
jae
repz
add
mov
fs
and
xchg
fnstsw
outsb
loope
mov
xchg
or
mov
cmp
loope
aaa
in
pop
xchg
jb
out
mov
mov
dec
scas
popl
cmp
or
arpl
shlb
pop
out
iret
push
fadd
or
mov
mov
orl
cltd
jle
inc
mov
or
repz
enter
in
push
xlat
lods
aas
pushf
pop
cltd
inc
push
sub
and
dec
shll
cmp
test
xor
pop
arpl
mov
lods
nop
xorb
add
leave
xchg
dec
lahf
fxch
sbbl
and
dec
leave
mov
xchg
shlb
ret
stc
jmp
bound
scas
push
mov
dec
cmc
or
push
mov
xor
dec
cwtl
rol
jnp
adc
mov
loopne
mov
repz
and
inc
dec
insl
mov
sub
cli
add
xor
scas
aas
xor
adc
mov
pop
ficomps
inc
hlt
lret
inc
push
cltd
aad
seto
jno
lods
sub
push
inc
call
dec
ror
xchg
les
and
mov
add
mov
gs
adc
or
add
sub
arpl
cmp
pop
lcall
mov
fidivs
push
arpl
adc
cmp
in
fdiv
cmp
outsl
mov
and
pop
lods
add
push
test
scas
mov
xchg
add
xchg
test
popf
not
fistpll
xor
inc
inc
into
mov
mov
in
inc
mov
cmp
out
lods
jb
adc
inc
add
and
sbb
imul
popf
xor
je
inc
loop
pop
mov
jp
pop
pop
test
aam
xor
push
pop
das
push
cmp
popf
enter
hlt
xchg
jo
hlt
add
mov
inc
push
sub
movsb
ret
addr16
jecxz
and
mov
fmull
stos
pop
inc
je
xchg
icebp
cmpsb
mov
sbb
sub
mov
or
iret
out
insb
hlt
cmp
int
xor
sub
push
lea
inc
adcl
xchg
call
dec
rcrb
xchg
xor
stc
stc
outsb
cmp
aas
or
leave
or
jo
pop
scas
test
leave
enter
sbb
sub
jecxz
out
test
mov
out
cmp
lods
rolb
cld
stos
inc
jmp
pusha
sub
fmull
cmp
lock
push
adc
outsl
push
adc
insb
cltd
jg
cwtl
jo
jmp
xor
ja
imul
push
in
push
or
out
arpl
cmp
loopne
insb
dec
cmp
popf
scas
jno
push
std
aad
pop
pushf
aad
dec
pop
xchg
aaa
movsl
sub
mov
inc
or
lods
pop
mov
arpl
mov
repz
pop
xor
test
dec
popf
add
add
mov
dec
in
mov
into
fsubl
scas
into
sub
inc
xchg
iret
addr16
into
shll
mov
out
cmp
cmp
iret
jne
or
roll
inc
sub
inc
cmpsb
mov
cmovno
cld
fcompl
lock
jmp
sub
pop
fcompl
out
nop
mov
inc
cmpsl
push
sbb
inc
ret
lea
jge
sub
inc
ljmp
sti
pop
mov
daa
fnstcw
gs
pop
add
rcrl
lcall
inc
push
sub
cmp
std
xchg
inc
jo
insb
jmp
icebp
cwtl
xor
adc
sub
add
inc
stos
test
xchg
pushf
into
lahf
pop
dec
push
pusha
or
and
insl
pop
sub
sub
mov
xor
pop
push
ret
fistpll
mov
dec
push
xchg
or
push
xchg
clc
cmp
fldl
mov
ljmp
or
dec
leave
pop
adc
out
setge
add
pop
loopne
sbb
stos
aas
cld
mov
inc
push
cmpl
das
ficoml
inc
fildl
ss
mov
mov
pop
cltd
push
lcall
lahf
xor
imul
and
and
cmp
repz
fldt
add
inc
push
out
mov
shll
push
in
loope
mov
or
es
insl
xor
pop
xor
and
aas
ss
sbb
arpl
inc
mov
call
out
cmp
loopne
test
pop
nop
xchg
lret
mov
insb
mov
aad
inc
xchg
add
or
call
lock
add
mov
aas
pop
aas
adc
sbb
shl
mov
pusha
jae
sub
pop
negl
inc
das
mov
adc
pop
jl
shll
adc
mov
hlt
frstor
call
sub
pop
in
cltd
dec
lea
movsb
das
push
ret
in
fildl
dec
std
sub
adc
jno
jle
outsb
mov
mov
jg
fcmovnb
adc
ja
das
fsubl
sbb
sbb
mov
test
push
sbb
pop
pop
cmpsl
xchg
push
ret
js
cmc
outsl
fbld
ret
je
movsb
sbb
pop
dec
and
insb
and
dec
sub
jno
jo
nop
xor
hlt
in
adc
ss
je
jmp
push
lea
sti
test
sub
ja
mov
jecxz
sbb
aas
cmp
cwtl
popf
bound
imul
sti
pop
or
mov
stos
jmp
imul
inc
fucomi
out
mov
or
mov
rcl
add
dec
mov
out
or
hlt
inc
test
pop
inc
nop
sbb
inc
inc
loope
sbb
aad
push
adc
mov
cmp
sbb
sahf
mov
popa
int
and
fldenv
stc
adc
cmp
inc
int3
fistps
xor
xchg
stos
sub
imulb
popf
push
sti
mov
adc
sub
cwtl
mov
dec
push
popa
cmp
sahf
cs
push
enter
xor
push
mov
cmp
stc
push
jmp
pop
xchg
xlat
divb
jp
sbb
mov
xchg
arpl
mov
in
cmp
stos
jl
jne
test
loope
mov
sahf
lods
stc
xchg
add
in
outsb
ret
xor
xchg
or
mov
loope
or
adc
xlat
push
popa
lds
cmp
push
mov
or
push
icebp
inc
or
xor
psubsw
call
inc
mov
sahf
or
xchg
pop
or
dec
outsb
jo
dec
cmpb
data16
test
cmpl
sahf
or
xchg
sub
add
lods
add
push
outsb
dec
orb
inc
push
loop
cs
pusha
js
into
push
scas
shll
jno
dec
mov
push
rclb
and
test
in
push
int3
test
jge
test
mov
sub
add
add
ret
or
jbe
fdivl
test
jg
movsl
xchg
std
pop
pushf
mov
cmpsl
adcl
inc
cli
push
into
cmp
fimuls
addr16
mov
pop
mov
clc
cmpl
jl
test
setp
adc
and
sbbb
rcrb
jmp
cmp
dec
cmp
mov
sbb
fwait
jnp
pushf
test
xchg
fwait
jp
mov
lods
xchg
cmpsl
lea
sti
adc
sahf
jne
cwtl
or
loope
outsl
jmp
gs
in
jmp
push
es
in
pop
ja
lock
xchg
or
jb
js
hlt
push
ficoml
out
jmp
repnz
pop
lods
mov
xchg
dec
popf
loopne
add
je
mov
lods
pop
adc
fisubs
push
xchg
mov
push
cmpsl
iret
pop
aaa
or
sbb
jge
push
fcmovb
lods
jmp
jae
cld
rclb
xor
out
add
test
mov
imul
sub
add
pop
and
aas
jl
outsl
xor
jne
enter
loopne
cmp
dec
decl
pop
or
xchg
inc
negb
xor
jne
inc
loope
int3
sub
ficoms
ja
push
lahf
mov
jecxz
and
adc
stos
aas
fucom
cmp
and
js
lea
jne
push
fwait
jecxz
fsubr
sahf
mov
out
adc
dec
inc
mov
xor
mov
xchg
dec
and
add
ljmp
hlt
push
notb
lahf
adc
aaa
fidivl
je
imul
push
add
sahf
add
cmpsl
push
or
inc
push
rolb
xchg
sti
aam
cmp
jmp
aam
js
or
call
add
sbb
sahf
daa
les
push
adc
jae
mov
sbb
lds
fimuls
dec
incl
rorb
scas
pop
mov
lods
out
sahf
pushf
clc
cmp
add
and
mov
cmpl
js
push
add
lods
jb
adc
roll
int
lods
push
adc
push
sbb
mov
xlat
shl
out
aaa
pop
negb
mov
vpand
ja
data16
cld
and
mov
cs
push
adc
dec
arpl
cmp
pop
cmpsl
inc
lahf
or
inc
test
pop
push
test
add
pop
shl
pop
jb
enter
lret
in
xorl
mov
jne
sub
pop
xchg
push
inc
xor
loopne
neg
nop
xor
pop
stos
or
out
and
in
iret
pop
outsb
movsb
inc
push
xor
stos
icebp
ds
nop
sbb
or
jne
pop
arpl
scas
incb
xchg
insb
stos
lahf
mov
sub
call
inc
and
jb
inc
rorl
cmp
mov
cmp
cld
or
loope
fwait
loop
in
adc
imul
shrb
push
pop
pop
loopne
movsl
xor
sbb
mov
dec
cmc
fnstenv
btc
test
cmc
int
daa
pop
std
cmp
mov
loop
adc
and
subb
es
shll
shlb
mov
dec
mov
bound
pushf
xor
xor
dec
aas
xorb
in
mov
mov
xchg
mov
cmp
stc
std
adcl
adc
pop
mov
mov
testl
adc
fistps
adc
rorl
cmc
jbe
das
dec
loopne
push
loopne
js
cltd
adc
push
sti
fs
pop
dec
push
adc
dec
fmull
mov
into
jge
cmc
pop
rcrl
ds
sti
insb
jne
jl
xor
nop
mov
jl
mov
pop
dec
pop
jne
ret
sbb
test
movsl
int3
jns
sti
cmc
push
xor
imul
and
out
jne
loope
mov
in
aas
repz
mov
xor
fldt
sti
mov
in
call
pushf
cltd
adc
cmp
dec
pcmpeqd
xor
aad
nop
aam
or
addps
in
rorb
mov
fs
lock
adc
mov
dec
mov
sbb
ret
and
jmp
xchg
sub
or
scas
xchg
xor
and
and
sub
call
out
push
xlat
xchg
jne
lea
lods
jbe
sbb
fwait
add
fcoms
mov
popa
jge
jb
ja
or
jnp
mov
push
hlt
pusha
sbb
cmp
lock
loopne
int3
jbe
or
loopne
int3
fadd
xchg
pushf
or
mov
shlb
dec
push
cli
mov
fucomi
clc
mov
cwtl
mov
add
or
pavgb
mov
cmp
mov
lds
insb
mov
and
mov
pusha
push
int3
sahf
jle
push
or
ljmp
pop
lock
push
cltd
imul
arpl
adc
lock
sub
push
out
es
stos
imul
fisttpll
adc
in
test
adc
imul
sbb
pop
xchg
cli
adcb
inc
into
scas
mov
adc
push
pushf
jno
repz
int3
push
pop
sti
icebp
jp
arpl
sbb
jg
jae
loop
xchg
lock
mov
data16
xchg
jnp
jae
xor
mov
arpl
cld
test
nop
sarb
push
imul
fwait
lcall
gs
or
nop
andb
lds
inc
dec
scas
mov
loopne
jno
pop
cmp
adc
rcrb
or
adc
sub
popf
mov
sub
push
push
sub
push
mov
out
decl
sbb
mov
insl
pop
jge
sbb
insl
xor
je
mov
pop
in
js
scas
fstl
and
sarb
xchg
xchg
pop
sub
jmp
fisttpl
andl
xchg
ret
dec
mov
add
push
xor
icebp
sbb
mov
sub
mov
dec
mov
test
repnz
es
dec
jge
mov
and
push
decb
xor
dec
loope
fadds
push
les
lret
pop
mov
arpl
out
inc
push
lea
je
es
decl
or
push
jecxz
adc
xor
ret
dec
testl
es
or
imul
cmpsb
mov
push
dec
and
jle
xor
push
pop
loopne
int
pop
mov
mov
nop
cld
cmp
arpl
sub
mov
cmp
incl
imul
mov
loop
insl
prefetchnta
push
and
inc
aaa
sbb
sub
inc
mov
push
and
out
bound
cmpps
sbb
rorl
mov
adc
ret
movsb
fdivrs
push
in
outsb
repz
lret
add
sbb
dec
iret
int
mov
xchg
int3
push
jno
pop
xor
test
xor
into
out
xchg
lahf
jmp
iret
adc
js
lea
cwtl
add
or
push
mov
int
adc
xor
fcompl
jmp
lods
xor
jnp
jno
inc
lret
cmp
push
mov
or
xor
mov
pusha
mov
sbb
out
push
and
mov
daa
imul
xor
les
push
scas
adc
out
adc
fdiv
fsubrs
push
enter
mov
mov
fldl
jnp
popf
lods
ret
out
jne
push
mov
fisubrs
aas
clc
call
aas
cmp
loope
sub
inc
out
stos
push
pop
loopne
clc
xchg
fsubp
or
lods
jns
das
bound
int3
push
pop
mov
and
lret
repnz
sbb
xchg
mov
pop
enter
in
pop
sub
into
fcompl
mov
movsb
subl
mov
stos
mov
push
seta
or
sub
inc
add
imul
pop
fdivs
fwait
movsb
ret
mov
scas
nop
or
mov
inc
movsl
jae
lock
sbb
imul
fidivrl
test
pop
xor
cmp
jno
mov
push
dec
mov
jbe
mov
shll
push
fnstenv
mov
xchg
push
push
data16
pop
in
inc
ljmp
repnz
cmp
mov
cmp
inc
pop
jmp
dec
jle
mov
or
fstl
lds
aad
cmp
jbe
jecxz
js
gs
insl
mov
popf
enter
sub
xor
sbb
out
cmc
sub
jo
loop
sahf
inc
add
mov
sahf
enterw
push
cmp
out
dec
cmp
xlat
adc
scas
ficomps
mov
leave
or
mov
adc
cmp
in
mov
jge
call
out
insl
mov
xchg
mov
sub
sbbb
cmp
mov
rolb
popa
mov
inc
xchg
rcll
pop
cmc
wbinvd
test
xchg
mov
pop
arpl
pop
shrl
jno
add
inc
scas
pop
push
mov
pop
in
mov
cli
pop
add
xlat
push
adc
xor
mov
stc
out
push
jecxz
push
lods
jns
xchg
cmp
std
cli
js
dec
pop
adc
and
dec
into
dec
jo
sbbl
mov
popf
jb
xor
ror
sbb
mov
scas
xchg
push
push
pop
sub
ljmp
inc
inc
sti
xchg
or
inc
mov
dec
je
or
pushf
jo
pop
scas
stc
shr
call
fisubs
and
sahf
cld
mov
mov
dec
test
jg
test
mov
lds
jmp
fs
insb
enter
pop
out
and
arpl
fisttps
neg
pop
sub
js
sub
notl
jecxz
push
mov
pop
lods
inc
lock
movsb
dec
push
inc
sub
and
push
pop
ret
movsb
sub
stos
push
sbb
outsl
push
jecxz
dec
cmp
test
incl
jnp
lcall
jecxz
out
lret
xor
mov
sbb
lcall
mov
jae
or
push
stos
cmpsb
sbb
push
iret
stc
xor
mov
mov
andb
mov
mov
jl
shlb
cwtl
pop
lea
adc
or
inc
pop
gs
inc
stos
lods
pop
aas
or
sub
and
std
jns
jo
mov
pushf
xchg
xor
scas
or
pusha
out
lcall
mov
push
mov
jns
popa
mov
cmp
mov
sarl
mov
lods
icebp
xchg
lods
shr
fldcw
push
into
sub
clc
inc
xor
or
and
jns
icebp
rorl
repz
or
push
lret
outsl
les
nop
cltd
insl
sbb
mov
jno
mov
mov
xchg
cmc
mov
stos
mov
shll
sub
gs
mov
xchg
shlb
sbb
mov
fs
insl
pop
inc
cmp
add
and
int
ficoml
out
inc
or
fldl
and
in
xor
clc
xor
jns
lods
inc
and
mov
xor
pop
sub
xor
int3
rorb
inc
movsl
sahf
mov
mov
stos
mov
fisubs
and
inc
jns
mov
jno
mov
jns
jns
lea
aas
popf
rcr
dec
enter
sub
pop
ret
jae
repz
loope
dec
and
mov
push
ss
outsb
das
addr16
push
rcrl
add
add
dec
cmpsl
mov
inc
cmp
shlb
rolb
cmpsb
pop
loop
scas
rcl
shl
or
sti
cmc
xchg
mov
rol
fs
incb
sub
fs
clc
outsl
mov
fistpl
cmp
test
mov
ret
xor
push
push
sbb
jae
les
pop
add
add
movsl
add
pop
cmp
xchg
jb
adc
lcall
mov
sub
loope
sbb
push
jge
leave
dec
mov
inc
pop
test
mov
into
in
loope
lds
addr16
pop
je
xor
and
loop
cltd
pusha
xchg
cli
jp
dec
cltd
pop
add
repz
out
mov
insl
jbe
sbb
imul
mov
mov
test
out
clc
divb
xchg
add
cmp
add
xchg
jecxz
stos
mov
movsl
push
outsb
push
addb
xchg
jbe
or
mov
sahf
iret
cltd
add
pop
cli
pop
sbb
xor
jmp
xchg
int
test
adc
test
and
pop
inc
lahf
push
and
ret
and
imul
xor
idivb
arpl
cs
in
fimull
repnz
aaa
dec
mov
shll
ret
and
shll
jmp
xor
xor
and
push
pop
push
cmpsb
data16
fadds
fcoml
out
icebp
adc
pusha
push
stos
mov
add
push
and
adc
jae
and
in
daa
cmp
filds
mov
sub
test
adc
scas
fnstsw
in
ret
cli
push
nop
test
test
lea
jo
push
rcrb
mov
fsubp
mov
mov
and
mov
dec
arpl
jbe
lock
adc
les
push
jns
iret
sahf
dec
lret
mov
adc
sub
scas
xor
dec
inc
scas
in
shl
push
pusha
jno
mov
mov
add
push
mov
enter
out
dec
icebp
mov
sub
jmp
dec
jnp
int3
lods
mov
insb
ds
ljmp
mov
hlt
movsb
xor
pop
test
sti
int3
and
scas
out
jecxz
cmp
int3
jp
lea
cs
and
jg
mov
mov
jo
movsb
push
test
outsl
inc
scas
xor
jmp
adc
imul
inc
xor
sbb
cmp
sbb
push
leave
leave
xchg
scas
pop
leave
sub
jbe
es
jns
xchg
add
xor
jmp
adc
test
rcll
test
into
in
mov
repnz
jns
mov
pop
push
rol
xor
push
dec
mov
add
mov
vcvttss2si
lds
jge
outsb
mov
jg
test
push
sti
bound
aaa
fcomip
xor
in
jecxz
sub
adc
jecxz
in
and
incb
shll
insb
jb
movsl
repnz
mov
test
push
out
mov
inc
cltd
adc
sbb
test
in
rol
jbe
stc
jg
jns
jbe
mov
mov
sar
inc
jns
lods
mov
loop
xchg
push
mov
sbb
inc
push
cmpsl
divb
sbb
in
fisubs
adc
icebp
por
pop
je
add
pop
jl
arpl
mov
pop
or
mov
outsb
cmpsb
xchg
or
mov
lret
xor
add
dec
lret
test
adc
out
mov
inc
cmp
roll
push
push
mov
enter
or
mov
bound
mov
jp
ficomps
mov
xchg
push
mov
lods
fwait
aad
or
mov
jno
pop
sub
call
and
dec
mov
daa
sub
flds
pop
movsl
arpl
inc
adc
sti
jb
shl
in
and
dec
std
frndint
add
xor
inc
inc
and
mov
stos
cmpsb
dec
insl
les
dec
adc
fwait
inc
push
lahf
push
and
outsb
cmp
orl
sub
addl
mov
scas
mov
jl
inc
das
add
es
mov
xor
scas
mov
mov
repnz
pop
sbb
sti
daa
je
shll
cmpsb
popa
and
jbe
lea
nop
add
pop
int3
popf
pushf
jg
in
cmpb
push
push
ror
lods
cltd
pusha
ss
dec
xor
popf
rcl
popa
or
mov
sub
jge
xor
mov
stos
daa
mov
stos
clc
rcll
xchg
or
pop
pop
mov
adc
pop
inc
mov
roll
iret
mov
es
enter
pop
jge
rep
pop
mov
dec
dec
or
call
frstor
cmpsb
xorl
popf
jp
int
add
sub
sbb
out
ja
mov
cmpsl
aaa
loopne
jb
jmp
cmp
dec
fistl
int
mov
js
sub
sub
jnp
cmp
orb
in
sbb
leave
xchg
inc
pusha
mov
jb
push
mov
adc
and
rorb
mov
jnp
adc
cld
fistpl
test
stos
mov
into
mov
fs
pslld
pop
jmp
test
push
adc
fistpll
stc
mov
mov
inc
xchg
jb
adc
sbbl
push
into
dec
test
and
testb
add
dec
sub
and
dec
mov
daa
xchg
leave
lock
pmaxub
enter
mov
cld
inc
ljmp
lea
orb
shll
jno
les
xor
lods
mov
mov
mov
adc
sbb
pop
pop
sti
inc
cwtl
test
mov
xchg
lahf
loope
shrl
cmpsl
mov
js
and
sbb
adc
add
hlt
das
popf
popf
mov
fidivrs
enter
mov
or
push
jbe
fiadds
sbb
stos
sub
and
cwtl
notl
dec
sbb
xchg
xchg
sti
push
jle
fdivl
scas
imul
jg
test
inc
ror
sub
push
jno
or
inc
and
sahf
push
push
xor
mov
cwtl
push
jno
push
cmp
xor
or
xorb
fsubrs
scas
xchg
xchg
repnz
test
pop
addb
xchg
push
add
jp
nop
push
scas
add
push
dec
push
jg
aas
adc
sub
adc
cmc
ficoms
insl
jns
sub
mov
mov
or
pop
loopne
fnsave
pop
push
repz
movsb
icebp
les
xchg
pop
enter
test
push
xor
cmpsl
xchg
into
xchg
push
in
sbb
xor
lods
lds
adc
mov
sti
in
imul
sbb
jo
add
or
xlat
movsl
fmuls
jae
dec
test
mov
cmp
lods
in
fwait
dec
mov
mov
lock
icebp
inc
mov
inc
push
pop
sbb
xchg
mov
or
jl
mov
shlb
push
xor
jle
arpl
push
popf
dec
daa
pop
jno
and
movsb
aam
dec
cmp
sbbl
aam
mov
scas
jl
add
ret
or
cmp
es
dec
out
add
sahf
fidivl
imul
insl
pop
dec
scas
cli
repnz
push
and
out
fcoml
inc
add
and
dec
push
arpl
jmp
cmp
mov
fwait
mov
cmp
sub
sub
push
push
xchg
and
xor
or
push
pushl
ljmp
sbb
lcall
test
in
mov
scas
jmp
mov
xor
in
ja
outsb
int3
mov
sub
fst
pop
in
mov
xchg
mov
sahf
mov
mov
jae
popa
sbb
and
or
stos
or
shlb
aad
cs
imul
push
mov
imul
cmp
cmc
hlt
mov
mov
sahf
inc
rcrb
mov
faddl
add
stc
mov
cmp
xchg
insl
adc
sarb
hlt
out
xlat
fdiv
sbb
pushf
cmpsl
lock
popa
pop
push
cmp
std
scas
add
mov
sbb
test
jle
ficomps
int
leave
bound
movsl
dec
sarl
fsubs
sbb
xor
jo
clc
dec
into
dec
ror
or
or
sub
lock
mov
cmpsl
and
iret
xchg
das
rcll
ss
inc
jmp
popa
into
ret
jo
jno
mov
int
dec
lcall
outsb
mov
sub
inc
xorb
inc
movsl
les
lret
mov
cmp
mov
stos
push
lret
push
in
dec
into
popl
jnp
aad
loopne
lds
jle
hlt
and
nop
sub
sub
xchg
jge
xchg
aam
loop
xor
je
stos
mov
mov
mov
jmp
sbb
outsl
inc
ret
out
xor
cltd
sarb
sti
dec
pop
fdiv
xor
pop
sar
mov
adc
dec
sbb
inc
ljmp
sub
popa
jge
sub
jmp
lock
hlt
adc
jmp
jmp
stos
ja
xor
cli
fwait
in
sarb
int3
mov
nop
add
push
lcall
fdivr
or
xchg
add
out
cli
add
clc
loop
jmp
orb
mov
and
fnop
push
pusha
mov
test
shll
stos
sbb
pop
mov
jp
shlb
push
test
jno
or
fstl
pop
lds
arpl
jmp
adc
cmpsl
dec
lods
fmull
jmp
adc
adc
jo
subl
data16
dec
mov
mov
fistpll
int3
add
pop
into
and
scas
mov
mov
imul
stc
push
xchg
orb
jo,pt
addr16
sbb
pop
jns
adc
daa
pop
and
add
adc
sbb
xor
pop
jle
mov
dec
xchg
jb
ficompl
outsb
jge
jb
jb
icebp
lea
jno
cmp
dec
movsl
mov
xor
les
repnz
mov
mov
fidivl
loopne
fwait
or
repz
push
daa
mov
idivl
mov
cmp
loopne
inc
ficomps
enter
pop
rclb
arpl
cmp
aam
or
add
out
enter
fnstcw
fcomp
icebp
imul
xor
mov
mov
add
ret
mov
and
adc
pop
sahf
adc
call
jecxz
lahf
xor
je
add
imul
push
sbb
lahf
lret
popa
sub
adc
enter
sbb
push
andl
cmpsl
cmp
add
ret
fwait
loop
sub
ret
call
sbb
ret
xor
adc
test
pop
in
in
inc
sbb
cmp
cmpsb
mov
jae
sbb
sbb
ret
bound
lahf
data16
jnp
push
inc
dec
xchg
popa
mov
xor
call
rcll
mov
fcomps
jnp
cmc
sbb
in
push
adc
in
mov
fs
mov
in
pop
test
lock
lods
jle
test
scas
fmuls
leave
and
lock
cmp
xor
lods
enter
movsw
imul
test
loope
mov
popl
mov
ret
popa
jns
inc
sbbl
cmp
ja
cmc
push
lahf
sub
enter
sahf
push
or
xchg
mov
add
jo
adc
mov
mov
ljmp
out
popf
xchg
sti
loope
xchg
dec
lcall
aam
push
jge
adcb
mov
pop
xchg
loop
mov
push
sub
inc
sbb
into
movsl
lea
jb
addr16
cld
icebp
xorb
mov
xor
push
lods
shlb
or
cmp
movsl
aam
pop
xlat
mov
inc
or
sbb
inc
or
jge
test
mov
add
sbb
in
sahf
loop
add
pop
xchg
jmp
adc
and
mov
cmp
add
xchg
movsb
xchg
xor
lret
xchg
rcrl
rcrb
test
aad
inc
or
dec
jne
inc
in
divb
stos
mov
lea
icebp
mov
pop
addl
sbb
rcrb
xchg
cmpl
in
pusha
popf
fwait
sub
mov
xor
xor
ds
mov
jne
jns
rcr
mov
pop
xlat
dec
ljmp
mov
pop
jecxz
sar
mov
movsb
add
mov
or
scas
add
push
and
sbb
addb
pop
mov
rcll
lods
fs
push
mov
xor
lods
jb
push
push
sbb
mov
loope
xchg
cmpsb
stos
sar
xlat
jge
lret
mov
dec
negb
and
adc
ret
pop
fcmove
cmp
sbb
loope
testl
pop
mov
scas
dec
das
iret
nop
cmp
repz
xor
adc
es
popaw
xchg
pop
dec
clc
imul
mov
adc
stos
aam
cmp
mov
aas
push
addr16
mov
inc
in
cmp
xor
mov
pop
and
test
dec
dec
inc
mov
push
jo
imul
ss
rcrl
inc
jae
inc
push
mov
mov
sbb
pop
pop
iret
andb
ja
hlt
repz
fmuls
popl
fsubs
xor
add
dec
mov
insl
xchg
cli
movsb
dec
outsl
out
jbe
pop
je
jno
mov
std
mov
fsubl
xchg
inc
sti
lahf
bound
lret
adcb
out
pop
mov
gs
xchg
push
stos
xor
sub
std
icebp
idiv
jbe
aad
leave
lock
cmc
cmp
les
cs
lret
fcomps
pop
mov
stos
push
xor
xor
push
fstps
nop
xchg
add
adc
sub
loope
dec
add
push
pop
sub
pop
enter
stos
inc
std
xor
test
mov
fisubrs
sti
fld
xchg
lea
or
ljmp
push
aas
jb
lcall
jge
xchg
sbb
nop
divl
inc
xorl
push
pushaw
and
or
pop
and
daa
dec
imul
push
test
xor
arpl
fs
ja
adc
xchg
xchg
pusha
xchg
rolb
and
xor
jp
imul
mov
push
test
pop
lds
sti
cmpsb
inc
cmp
test
addr16
out
fbstp
int
iret
jno
xor
stos
loop
addl
fdiv
and
push
mov
add
enter
mov
sahf
fcompl
cmpsl
mov
xchg
test
out
and
in
xlat
ja
pop
icebp
xchg
lret
and
mov
add
cld
cmpsb
imulb
sbb
sub
mov
ret
stos
ja
sub
push
in
dec
cli
add
pop
outsb
adc
in
test
and
pop
adc
jno
cmpsl
pop
lds
bound
mov
sub
cs
fistps
cs
xchg
outsl
adc
cld
sub
jo
fidivrs
mov
sub
or
mov
mov
xchg
push
pop
ja
lahf
mov
in
sbb
mov
jl
sahf
cmpsb
dec
mov
sub
jbe
jle
or
xchg
in
add
nop
pop
xchg
test
inc
arpl
mov
cmpsl
rcrl
popf
das
sub
lods
sub
fmuls
repnz
movsl
cmp
sub
cmp
mov
mov
jp
pop
adcb
mov
rcrl
popl
and
push
mov
iret
pop
jle
add
jl
push
test
jmp
push
jns
xchg
js
inc
outsl
test
mov
push
les
fnstsw
je
ds
inc
pop
xor
or
into
incb
mov
push
inc
test
cli
and
jg
bound
clc
adc
shll
add
mov
js
in
imul
stos
mov
scas
dec
bound
shlb
cmp
fmulp
inc
and
stos
cltd
adc
test
lret
mov
out
punpcklbw
mov
das
add
loop
jmp
adc
aaa
enter
push
xor
jge
mov
or
add
scas
das
mov
aam
dec
cmp
mov
and
sub
cmpsl
repnz
call
jno
pop
test
cmc
lods
xchg
insl
pop
jg
mov
xor
pusha
adc
dec
cmp
xor
sbb
xor
xor
test
cmp
pop
jge
mov
scas
punpckhbw
lret
lods
data16
pop
cwtl
fldt
inc
inc
enter
push
push
loopne
aam
or
mov
jg
jnp
shlb
push
jae
sahf
xor
push
xchg
add
stos
aaa
mov
lret
cmp
aaa
dec
mov
fxam
aad
stos
add
jns
push
sbb
mov
stos
xor
and
mov
pop
push
repnz
dec
xor
cmpb
fs
pusha
push
int3
popf
cs
fmull
aam
xchg
jmp
outsl
shrl
dec
add
push
jo
insl
hlt
test
movsb
jge
in
inc
sub
cmpsl
dec
jg
jmp
test
fisubs
mov
mov
inc
add
dec
jmp
mov
popf
jecxz
fldl
adc
lret
push
bnd
sbb
test
cli
mov
loopne
hlt
jp
mov
inc
nop
test
dec
push
in
jmp
data16
jecxz
mov
sahf
add
int
dec
cltd
inc
lods
add
xchg
jno
cwtl
sub
aaa
aad
jg
fwait
dec
sbb
leave
inc
data16
fs
stos
cs
int3
aam
jne
addr16
lods
sti
mov
lds
and
and
adc
xor
cwtl
pusha
fwait
repz
mov
xor
xor
and
dec
fs
das
xchg
aaa
sbb
popf
xor
imul
xchg
mov
push
lods
aaa
mov
lea
call
popa
sarl
xchg
ljmp
push
push
adc
popf
mov
dec
xor
and
mov
das
clc
popw
testb
inc
inc
cmpsb
out
push
test
xor
sti
push
mov
jo
push
cld
dec
push
loop
cld
cmp
dec
iret
sub
add
inc
mov
sbb
cmp
mov
inc
pop
pop
jle
fs
je
push
jmp
in
rcll
push
mov
xchg
fs
lock
out
test
sub
sub
or
cmp
in
xlat
fs
add
cmp
in
jecxz
sbb
jmp
dec
fisubrs
and
shll
adc
sbb
popf
and
rolb
mov
lods
dec
test
xor
out
cmp
ljmp
dec
push
clc
out
jl
dec
pop
cld
jg
enter
adc
sbb
adc
inc
nop
push
and
sub
xor
jnp
xchg
mov
mov
insb
out
enter
pushf
mov
pop
push
xor
loop
dec
sbb
pop
outsl
add
push
rcll
leave
adc
movsw
rorl
repnz
outsl
mov
loope
icebp
dec
push
aas
pop
mov
mov
push
push
mov
push
roll
sub
enter
pop
pop
jecxz
pop
dec
mov
insl
clc
push
lea
inc
mov
enter
loopne
test
fidivrs
push
xor
add
pop
push
and
scas
push
movsl
fsubrl
pop
cmpb
pusha
pop
mov
push
mov
cmp
int3
arpl
mov
in
lcall
aam
leave
enter
cmpsb
pop
jae
mov
jmp
pop
adc
push
xchg
mov
test
add
shrl
pop
mov
jle
mov
push
push
xorl
arpl
inc
in
sarl
sbb
pop
incl
test
lcall
add
add
xchg
push
sub
or
jg
lock
out
arpl
sbb
stos
lock
bnd
cmp
loope
andb
aad
and
fwait
es
sbb
add
fidivrl
or
xchg
mov
leave
aam
sub
out
out
fldenv
test
inc
xchg
pop
mov
sub
ret
cmpsl
jg
dec
roll
jg
sti
shlb
cs
dec
push
and
push
jl
arpl
xchg
adc
ss
jmp
sbb
dec
jbe
pop
xchg
mov
push
xchg
int
fisubrl
orb
xchg
repnz
or
fwait
inc
mov
lods
test
aas
inc
outsb
xchg
repnz
jbe
push
mov
stc
jecxz
mov
adc
into
sbb
and
xor
adc
sahf
push
test
xchg
and
xchg
cmpsl
xor
mov
cmp
test
jp
and
mov
imul
push
xor
mov
sbb
insl
orl
lcall
aam
adc
ret
dec
xchg
daa
xor
or
outsl
or
daa
inc
fldenv
icebp
cmp
mov
test
adc
dec
mov
mov
and
xor
mov
shll
push
sbb
mov
imull
sub
mov
mov
aam
daa
jecxz
xchg
mov
arpl
clc
js
out
mov
sub
inc
push
push
jl
cmpsl
outsl
jle
arpl
dec
inc
xchg
out
xchg
stc
sti
mov
cmp
imul
push
mov
ss
push
or
les
jl
push
mov
stc
in
aaa
gs
std
sbbb
dec
roll
cmovg
cltd
in
mov
mov
push
shrb
mov
sub
in
fs
lock
or
sub
ficoms
call
jnp
add
adc
mov
add
mov
icebp
daa
mov
push
aaa
cmp
pop
icebp
adc
or
ret
andl
in
sbb
xor
fwait
mov
mov
ret
add
or
cmpsb
add
and
test
sbb
inc
mov
stos
pop
rorb
pop
popf
push
lods
sahf
jle
pusha
cli
daa
loope
bound
or
in
jle
inc
cmp
cmpsb
outsl
lret
insl
ljmp
subl
in
lea
repnz
aas
faddl
call
das
add
sbb
mov
nop
sbb
into
push
stos
cmc
xchg
aas
sbb
cmp
xchg
out
mov
or
add
enter
add
out
lock
xorl
es
test
mov
jl
out
mov
out
mov
in
mov
push
test
pop
lods
dec
adc
fadd
pop
xchg
shrl
out
test
mov
or
xchg
rcll
sbb
lcall
das
sbb
sbb
sbb
scas
sbb
jb
push
scas
push
cld
pop
rcl
mov
jle
cld
lret
mov
mov
fninit
fistl
and
adc
in
outsb
repz
fidivl
mov
fs
clc
xchg
movsb
push
sbb
ret
or
sub
test
inc
inc
push
inc
mov
push
or
jmp
pop
mov
or
push
jne
jmp
jae
mov
out
arpl
stos
loop
ret
adc
fstpl
ss
jno
mov
aas
mov
mov
adc
roll
clc
mov
sarb
addr16
fists
cwtl
test
xchg
sbb
mulb
sbb
push
jno
into
out
std
mov
cs
loop
in
rclb
filds
push
mov
mov
frstor
icebp
arpl
ja
mov
jmp
int3
adc
std
mov
push
movsb
inc
sahf
iret
xchg
mov
xchg
add
fs
movsb
jno
aam
jl
fidivrs
add
pusha
test
ret
out
fsubrl
les
xor
ficoms
cmpsb
repnz
fcmovnu
mov
fidivrs
jae
sub
mov
xchg
test
stos
frstor
adc
jns
cmp
or
nop
add
enter
test
testb
inc
adc
dec
adc
repz
leave
out
push
cmp
adc
and
jle
dec
mov
jle
or
into
dec
cmc
and
enter
fistpll
adc
push
or
sti
std
adcb
cmp
icebp
or
adc
xor
or
pop
dec
int
int
dec
hlt
push
xchg
in
push
mov
int
popf
imul
pop
xor
hlt
inc
in
in
roll
xor
in
mov
adc
sarl
xchg
fmull
adc
xchg
xor
fistpll
cmp
fs
flds
cld
push
lds
les
mov
and
sbb
pop
jle
push
xchg
mov
xor
push
addr16
dec
in
push
aas
sar
fsubrs
add
cltd
call
shrd
pop
mov
pop
jg
icebp
daa
rcl
pop
mov
rcrb
lcall
mov
xor
mov
and
outsl
dec
int3
cmpl
icebp
xorl
stc
lds
mov
inc
popf
in
lock
dec
and
add
cs
arpl
xchg
and
pusha
pushf
add
or
sbb
mov
xchg
and
in
xor
jo
pop
out
adc
mov
out
adc
out
sbb
jae
out
out
push
dec
test
mov
je
jmp
inc
add
lods
add
lcall
cld
es
inc
xchg
push
adc
xor
xchg
out
push
add
cli
adc
daa
movsb
mov
movsb
insb
jne
sub
pop
inc
xor
repnz
inc
add
icebp
sbb
mov
sub
or
xchg
dec
jnp
fdivs
dec
or
mov
sbb
pop
int
add
imul
dec
inc
in
pop
aaa
mov
or
js
xor
mov
push
xchg
xor
dec
ss
push
mov
sahf
aaa
aas
jns
lods
je
cmovnp
data16
idiv
mov
movsb
mov
dec
insl
ja
mov
jp
push
bound
fs
sub
out
outsl
and
cwtl
mov
sahf
dec
test
stos
mov
leave
xor
loop
sbb
mov
sub
inc
mov
cwtl
sub
add
in
int3
mov
or
sub
mov
aaa
dec
mov
cltd
mov
shr
insl
aad
xchg
movsb
das
dec
fmulp
inc
pop
mov
jecxz
lea
add
and
fdivrs
dec
push
add
bound
xor
scas
fnstsw
sub
int3
mov
inc
jo
loope
dec
bound
push
add
shrl
cli
xor
or
daa
add
mov
mov
mov
in
out
jecxz
inc
add
pop
push
jo
test
repz
incl
lds
jns
xor
pop
inc
out
mov
or
sub
int
mov
int
jnp
jle
aam
and
cmp
jb
jge
pop
xchg
lods
pushl
inc
stc
sub
jmp
in
xchg
in
roll
pop
xor
mov
shlb
jp
or
cwtl
adc
std
cmpsb
push
push
adcb
pop
jmp
pop
sbb
gs
mov
fimull
push
xchg
data16
scas
shll
xor
lahf
inc
or
sbb
fcoms
sahf
popa
mov
call
pushf
addr16
test
cmp
mov
dec
hlt
xchg
das
bound
rcll
pop
or
mov
faddl
xchg
pushf
jmp
pop
in
test
insl
pop
sbb
adc
inc
mov
out
mov
push
adcb
mov
jne
ja
xor
pushf
push
ljmp
aas
inc
xor
adc
insb
mov
mov
pop
adc
adc
out
pushl
in
leave
in
cltd
fmuls
mov
ljmp
cmp
xor
jge
aam
cwtl
mov
int
fisubl
xor
jo
pop
out
mov
ret
cli
push
aam
mov
test
jae
insl
jbe
mov
shlb
fwait
mov
dec
scas
fimuls
and
xchg
leave
push
xsaveopt
cmpsb
pusha
lret
sbb
push
sbb
daa
mov
cs
push
icebp
ss
sbb
negl
add
cld
mov
addl
sbb
jno
leave
dec
jge
repz
pop
insb
inc
sub
adc
dec
ret
mov
add
push
pushf
mov
sbb
loope
testb
shrb
add
mov
ds
stos
sub
repnz
jbe
adc
adc
xchg
pop
mov
push
xchg
xor
fs
ljmp
les
and
xchg
pop
adc
dec
divl
mov
clc
mov
push
push
push
rorb
shrb
into
in
fwait
popf
les
dec
stos
rclb
js
enter
and
xchg
sub
bound
fidivl
or
rorl
gs
loopne
pop
push
xor
cmp
popf
sbb
mov
icebp
rcr
cli
fs
dec
mov
loope
roll
jne
lea
scas
rcrl
xchg
pop
add
iret
adc
enter
daa
xchg
push
mov
adcb
cli
dec
mov
fcmovbe
imul
sub
jno
mov
jmp
imul
mov
outsb
inc
xchg
add
add
fdivl
out
mov
jecxz
sub
movsl
dec
repz
xchg
sti
and
test
lods
mov
mov
and
mov
sbb
jne
inc
cmp
mov
jns
add
xchg
jno
sub
hlt
pop
mov
cwtl
pop
push
dec
idivl
in
cli
arpl
pop
sahf
xlat
add
mov
outsb
xchg
add
mov
xchg
popf
jne
mov
ja
std
and
or
adc
adc
jle
cmc
add
push
mov
xor
movsb
ret
pop
out
outsl
mov
jmp
pop
lods
pusha
cwtl
jae
jbe
test
dec
js
jns
sub
jns
mov
mov
adc
subb
gs
sub
push
ret
sti
sahf
bound
jecxz
psubusw
pushf
jl
mov
push
jo
cs
and
push
shrl
iret
adc
incl
mov
mov
test
jne
in
pop
test
int3
mov
sbb
hlt
dec
jp
adc
pop
test
inc
sub
sbb
mov
lods
andl
pushf
and
or
dec
out
mov
mov
inc
push
out
stos
jo
push
pop
cmpl
push
lods
push
cwtl
mov
repnz
popa
pop
cmp
lahf
gs
and
jbe
push
mov
lock
mov
dec
test
cmpsl
jmp
mov
pop
iret
dec
pop
inc
sahf
inc
popa
inc
and
cli
test
add
jnp
aaa
and
outsl
sbb
mov
push
and
ffreep
loopne
shll
cs
popl
pop
dec
xchg
cwtl
push
pop
outsl
xor
gs
lods
cmp
dec
cmc
stc
pusha
in
ss
icebp
cmpsl
insl
gs
jp
push
adc
sbb
jl
mov
dec
lret
or
mov
and
jge
jmp
jb
jle
xor
pop
arpl
hlt
sbbl
imul
xor
jbe
shl
adc
subb
push
xlat
arpl
lret
pop
sub
roll
add
dec
sar
push
add
add
push
sti
inc
lahf
out
push
jle
inc
xchg
mov
bound
jnp
repnz
inc
pop
lock
fwait
hlt
movsb
std
xor
push
lea
movsl
jnp
push
aad
test
pop
call
xchg
icebp
mov
dec
dec
jge
mov
fmuls
mov
xor
push
mov
push
lock
inc
jg
adc
xchg
ds
dec
mov
or
or
xchg
jb
ret
lret
jl
mov
cmpsl
clc
in
xchg
add
fisubs
dec
add
or
add
mov
push
mov
jg
mov
fcompl
shrb
pop
mov
mov
cmpsb
cmpsl
xor
outsb
mov
sbb
data16
popf
ror
and
add
scas
mov
add
into
mulps
push
sub
mov
xlat
ret
mov
jbe
lds
ljmp
and
pop
pop
arpl
mov
and
sub
and
imul
pop
xor
add
push
sbb
inc
rcrl
jae
scas
sahf
pop
mov
jno
incl
add
lret
rcrl
jp
into
scas
cs
xor
lret
mov
mov
cmpsb
mov
xor
outsl
cmpsl
into
fimull
pop
out
add
fwait
stc
stos
xor
xlat
imul
pop
popa
sub
loop
jno
ret
lahf
insl
pusha
test
dec
and
xchg
ja,pn
lods
mov
adc
add
cwtl
jno
insl
cmp
push
dec
lods
fdivrs
mov
add
mov
mov
xor
and
rolb
and
ds
adc
in
cltd
pop
lods
insb
push
ja
push
sarb
dec
jns
mov
mov
and
lock
inc
lahf
dec
js
mov
push
in
xchg
testl
sbb
add
xlat
sbb
jecxz
test
dec
sbb
or
pop
scas
jl
mulb
mov
and
pop
mov
xchg
xorb
out
ljmp
dec
out
sbb
lock
pop
mov
mov
sub
aam
xor
test
jnp
aam
mov
xchg
mov
xor
mov
sub
fdivrp
nop
testl
cli
notb
pop
push
inc
adc
outsb
xchg
movsl
add
pop
adc
adcl
mov
adc
push
cmp
xchg
or
subb
add
aad
inc
pop
fsubrl
ss
pop
adc
jnp
sahf
lcall
mov
shlb
or
or
lret
sar
pop
sub
lahf
ds
dec
lods
mov
lret
inc
sbb
fwait
test
mov
mov
fs
lret
daa
push
cmp
push
sub
loop
lods
xor
out
fldcw
mov
sub
imul
jp
cmp
xchg
add
xor
hlt
iret
lds
lret
push
pop
icebp
mov
dec
loope
jl
xor
popf
popa
sub
mov
mov
xchg
adc
xchg
cmpsb
cmp
jo
mov
dec
xor
adc
jg
push
inc
xor
lock
stos
nop
dec
bound
mov
ficoms
mov
mov
push
rdmsr
arpl
inc
outsb
outsl
xchg
jae
or
and
xchg
jge
scas
and
jg
cmpsl
inc
ffree
xor
inc
lock
into
loopne
adc
cmpsl
sarl
pushl
stc
xchg
mov
add
adc
mov
mov
sti
loopne
mov
daa
or
sbb
mov
push
or
and
out
inc
pop
xlat
scas
nop
or
mov
pusha
lods
mov
jp
and
insl
arpl
leave
movsl
mov
or
arpl
xchg
add
pop
test
jae
sub
shrb
and
int3
notl
mov
mov
push
dec
in
jge
jbe
push
or
sub
pop
cmp
push
adcb
or
cwtl
test
lds
and
sub
mov
loope
nop
hlt
sbb
mov
sbb
jnp
push
mov
pop
push
mov
or
xchg
xchg
lock
test
jl
xor
and
jecxz
xchg
xchg
xlat
cltd
cmp
shl
mov
mov
jb
int3
mov
fistpll
mov
popf
hlt
bnd
mov
xchg
insb
cmp
mov
addr16
push
icebp
pop
sbb
mov
insb
rorb
xor
mov
mov
mov
xchg
mov
mov
iret
in
fcom
sub
or
xlat
cmp
xchg
cmp
fdivrl
mov
mov
mov
xor
ja
dec
dec
movsb
cwtl
addr16
cmc
add
cmp
xchg
push
adc
std
aam
jp
pop
xchg
lods
jnp
jb
xlat
sbb
mov
jae
pop
inc
into
xor
repnz
cmpsl
cmp
lods
pop
imul
ljmp
and
lds
repnz
or
idivb
aam
cltd
jbe
enter
dec
jnp
gs
into
xor
pop
aam
repz
das
aad
test
popa
sbb
int
imul
add
sub
mov
xorb
out
sbb
jp
dec
jle
mov
inc
out
mov
push
add
test
hlt
pop
ret
push
int3
sti
scas
lods
in
dec
lea
lret
call
in
cld
mov
lret
add
push
shr
mov
jae
cmp
scas
test
add
sbb
es
sub
or
dec
or
push
mov
sub
lret
dec
jae
push
mov
jb
sbb
pop
xchg
insl
out
mov
dec
mov
xor
ds
or
mov
adcl
aaa
add
push
test
sbb
sti
inc
dec
add
fnstsw
sbb
or
daa
cmp
sahf
xchg
pop
add
scas
fistps
dec
add
mov
pop
xchg
or
es
mov
xchg
fbld
pop
pop
and
mov
addb
stos
and
addb
lock
scas
pop
test
mov
shll
rcrl
jp
mov
jmp
in
or
cmp
push
repz
outsb
cmp
mov
pushl
das
xchg
pop
add
popf
es
adc
fldt
push
sub
or
pop
sti
jns
lds
mov
mov
inc
push
xor
adc
xchg
push
loope
repz
shll
arpl
pop
ror
stc
xor
sbb
shll
dec
ja
cmp
imul
loope
push
cmc
test
int
iret
mov
or
repz
inc
in
outsb
hlt
stc
push
jo
pop
lock
mov
data16
mov
daa
popa
rol
mov
outsb
ficoms
sbb
daa
mov
lods
sbb
fisubl
in
cwtl
add
xchg
adc
mov
cmp
mov
rclb
iret
or
xchg
dec
push
dec
ret
lret
and
pushf
push
hlt
mov
lods
pusha
pushf
fisubs
dec
push
sahf
aas
xchg
mulb
aad
je
or
shll
ficoms
insb
xchg
dec
mov
mov
dec
aas
popf
fsubrs
outsl
jno
gs
jge
mov
iret
addl
shr
or
fisttpll
stos
pop
dec
loop
loop
push
push
pop
test
xchg
cmp
stos
addl
pop
jecxz
in
xchg
in
dec
xor
inc
sti
mov
cmp
loop
or
sahf
lea
lock
insb
fcomi
jo
test
jnp
popf
mov
lds
inc
cltd
stos
and
lea
loope
fists
stos
mov
addl
inc
or
xor
cli
pop
pop
sub
stos
adc
mov
pop
inc
adc
icebp
je
push
sub
dec
fists
adc
cmc
data16
xor
jmp
xor
and
inc
rorl
add
pop
sbb
ja
xor
enter
lds
xor
shl
or
les
arpl
iret
aad
loop
in
mov
sub
push
mov
hlt
pop
xor
jb
testb
dec
inc
je
imul
cmpsb
pop
dec
sub
les
fcompl
orl
stos
add
sbb
adc
push
lcall
cmpsl
repnz
pop
or
xchg
repnz
cltd
jb
jge
or
push
lods
jg
mov
popf
sub
cmp
notb
pop
pop
ja
jmp
cmp
hlt
push
jno
sub
jbe
mov
ret
dec
mov
or
xor
in
pop
sarb
inc
dec
out
push
lods
popa
xchg
jno
dec
data16
sbb
jg
mov
inc
sub
and
cli
sbb
test
mov
cld
xchg
sbb
je
hlt
dec
jecxz
mov
cli
jg
add
xchg
scas
push
add
cmp
xor
std
mov
fcmovbe
adc
adc
sarl
insb
push
push
out
xor
xchg
xchg
mov
lea
xchg
sub
mov
sbb
movsb
xchg
push
and
xchg
or
out
jbe
adc
inc
xorl
pushf
repz
mov
rcrl
pop
std
fs
cmpb
and
frstor
icebp
xlat
fwait
push
out
jge
sbb
dec
mov
lock
popa
dec
xor
pop
scas
pop
mov
aam
mov
or
roll
dec
in
ss
lret
out
add
imul
insb
faddl
xlat
icebp
out
sarl
add
pusha
sub
cwtl
insb
and
jg
lret
xchg
cmp
pop
iret
inc
cmp
cmp
lods
xchg
dec
or
popf
test
out
rorl
cmp
shlb
sbb
cwtl
sti
mov
fs
neg
lea
lahf
cmp
push
icebp
xor
pop
loopne
popf
pushf
div
jnp
imul
add
fucomi
rcrl
sahf
inc
push
andb
mov
aam
add
or
fmull
hlt
add
push
popf
test
fnstenv
pop
pop
mov
loope
out
fs
xchg
iret
lahf
data16
dec
jns
mov
lods
mov
rcl
mov
fcmovnbe
mov
inc
stc
push
mov
xlat
outsb
jbe
hlt
push
fcmovu
or
fistl
pop
lods
lcall
cmpsb
and
jbe,pt
pop
adc
lock
ja
mov
mov
dec
adc
cltd
mov
test
gs
and
xchg
lret
cmp
enter
pop
flds
cld
inc
test
and
xchg
pop
rcrb
pop
lods
shlb
popf
and
jl
loopne
jmp
lcall
sub
mov
add
mov
pop
inc
rolb
leave
xchg
add
out
adc
sbb
pop
fistps
mov
sbb
add
mov
or
idivl
mov
gs
mov
push
or
fiaddl
sbb
std
pop
ja
pop
shrl
mov
jbe
insb
into
add
hlt
cmp
pushf
rcr
sub
mov
dec
dec
call
in
sbbl
mov
pushf
pop
inc
xor
ret
aad
leave
pop
fldt
push
cmp
mov
orl
adc
cmpsb
and
pusha
jb
or
xchg
arpl
sub
and
ret
call
ljmp
fidivl
and
inc
lcall
add
mov
jl
test
rorl
dec
pop
imul
rcll
or
dec
insb
shll
es
push
std
sbb
clc
mov
mov
sbbl
std
sub
shlb
les
pusha
cmp
popf
loop
pop
loopne
push
sub
int
scas
shrl
mov
jae
adc
jl
ret
mov
fisttpll
icebp
or
mov
sub
pushf
pop
cld
mov
movsb
mov
pop
adc
or
ficompl
iret
fidivrl
mov
mov
sbb
repz
das
jecxz
xlat
sbb
xor
or
sbb
pop
out
fwait
nop
inc
adc
sbbl
iret
xor
insl
inc
icebp
adc
mov
and
jp
aad
push
sbb
insl
xor
cmp
xchg
shlb
inc
repnz
enter
jl
cltd
inc
sbb
cmpsb
adc
inc
rclb
loope
sbb
rclb
sub
mov
mov
pop
cmp
out
adc
jp
mov
mov
adc
xchg
aam
cmp
lahf
jno
stos
cmp
xchg
dec
add
inc
add
mov
jbe
sti
lcall
jg
sbb
jno
cmp
jle
pushf
ds
jae
in
add
jg
mov
in
sti
lret
dec
sti
fistl
minps
mov
ret
inc
addl
sbb
repz
imul
and
push
mov
or
mov
addb
jge
dec
insb
jecxz
pop
repz
rcl
je
jle
sbb
movsl
xchg
arpl
push
xchg
xchg
add
lret
sub
imul
enter
cmpsb
mov
sbb
mov
fmull
mov
fiadds
cmp
loope
sbb
mov
push
dec
clc
mov
xor
dec
mov
aam
jne
divl
pop
je
push
dec
mov
push
adc
fwait
mov
push
mov
adc
adc
pop
int
mov
sub
jnp
mov
adc
add
mov
into
or
negl
es
jmp
les
add
add
sbb
adc
adc
je
sahf
mov
ds
enter
out
fs
mov
sbb
insb
gs
notl
enter
outsl
aas
jp
inc
dec
xor
nop
push
das
or
sub
push
iret
mov
das
xor
pop
orl
pop
adc
or
shll
dec
and
push
xchg
lods
data16
xor
xchg
stos
pop
mov
jnp
fidivl
xchg
ret
lds
cmp
hlt
outsl
lods
mov
xchg
add
ds
cmp
cmp
aas
nop
shl
mov
mov
loopne
jo
aad
lcall
mov
jbe
pop
sub
adc
xchg
ret
out
ja
flds
daa
mov
mov
cmpsb
xor
das
and
add
push
lahf
and
shrl
xchg
push
adc
int3
fiadds
out
popf
lods
dec
inc
arpl
mov
xor
xchg
notl
test
repnz
cmp
dec
leave
out
jge
fidivs
sbb
pop
stos
dec
push
adc
sbb
mov
adc
mov
shr
pop
or
or
fiadds
sbb
mov
mov
ret
sbb
lods
insb
or
and
xor
int3
lahf
stos
adc
cmpsb
shll
dec
int
adc
lahf
mov
push
hlt
xor
in
out
into
shll
jg
push
push
lea
int3
test
mov
mov
dec
repz
insl
push
push
ss
dec
imul
lds
scas
add
lock
jle
call
jecxz
pop
adcl
push
fmuls
in
test
xchg
xor
push
repz
and
mov
or
dec
xchg
cmpsb
and
push
arpl
icebp
and
adc
es
mov
out
or
jmp
loopne
mov
pop
jg
push
std
fwait
in
and
out
shrb
fisubs
into
sbb
imul
lds
dec
mov
jecxz
xchg
stos
dec
or
mov
push
push
imul
notl
add
lods
shrb
and
into
test
mov
xchg
outsl
fiaddl
push
lahf
sub
int3
pop
out
xchg
lahf
lea
jge
imul
or
xorb
in
fsubrl
and
fcompp
jb
fstl
push
cmpsl
test
mov
test
test
xor
or
scas
sub
jno
sub
insb
push
jge
lcall
and
mov
sub
pop
rclb
outsb
cs
cltd
and
pushf
test
sub
cmc
ljmp
stos
inc
sahf
ss
aas
xchg
xor
cli
cld
mov
movsl
mov
xchg
out
mov
cmp
imulb
out
or
lock
fdivrl
xchg
mov
mov
sbb
fisubrl
sub
mov
pop
sub
pushf
jnp
mov
pop
movsl
adc
dec
push
and
andl
cwtl
mov
pop
mov
outsl
inc
and
mov
dec
addl
jae
sub
add
jnp
mov
pop
mov
in
or
push
cli
fidivrs
sub
int
inc
add
int
xchg
adc
outsl
sbb
or
add
fcmovnbe
xor
push
jnp
cmp
fcompl
lret
test
jg
adc
mov
in
out
dec
sahf
out
xorb
mov
sahf
aad
idivl
mov
mov
je
arpl
push
xchg
mov
dec
stos
cmp
mov
pop
sbb
dec
dec
sub
in
mov
adc
xchg
fdivrs
in
adc
pusha
dec
and
ds
pop
pop
adc
jns
lahf
mov
addr16
loope
pop
pushf
and
cmp
or
inc
cmp
mov
cmp
add
dec
xorb
repz
aas
push
ret
aad
into
in
fnstsw
rcrb
mov
scas
cwtl
ret
xchg
movsb
cli
mov
into
xor
inc
pop
sub
push
cmp
movsl
sbb
popa
mov
sub
pop
into
mov
xor
xchg
sbb
lock
jge
ficoms
testl
sub
lret
clc
sub
dec
daa
dec
test
shr
fimull
jne
xor
test
jb
ret
fdivrs
sbb
sbb
add
and
dec
enter
sarl
dec
pop
aam
mov
sbb
mov
or
in
sbbb
arpl
jo
jnp
dec
mov
cmp
out
subb
inc
inc
jge
movsb
push
hlt
popf
incl
out
fs
push
out
test
adc
shl
inc
jo
daa
ret
sub
mov
in
scas
cmp
ja
push
gs
mov
inc
mov
cmp
pusha
jl
jl
incl
daa
pop
add
pmaxsw
jle
in
test
mov
pop
cld
out
repz
or
outsb
cwtl
std
mov
xchg
push
push
insb
addr16
std
hlt
xor
pop
adc
jl
mov
icebp
push
and
or
push
inc
dec
leave
jno
sahf
and
mov
icebp
push
xor
xchg
scas
mov
sbb
popa
adc
jo
mov
adc
shll
adc
les
fs
or
mov
xchg
push
xor
inc
fbld
lcall
or
xor
in
rorl
es
and
inc
ficompl
push
inc
cmp
mov
xchg
js
outsl
dec
jle
adc
and
imul
mov
movsb
and
movsb
mov
rcl
mov
int
sahf
test
decb
or
jb
pop
push
jmp
out
add
xor
movsl
adc
call
xor
xchg
pop
jge
and
mov
inc
xchg
in
and
gs
aad
iret
push
mov
inc
mov
inc
jmp
int3
xchg
push
in
lcall
jmp
xchg
adc
test
clc
sub
xchg
mov
xor
pop
jge
sbb
push
push
out
lret
sub
push
add
mov
mov
pop
cmp
sub
lcall
cmp
mov
inc
jmp
out
mov
ds
in
add
mov
test
xor
dec
and
sbb
les
js
sarb
mov
xor
lcall
pushf
jge
mov
sbb
push
push
mov
movsb
daa
outsl
ret
cmp
pop
std
push
test
sub
andl
or
out
repz
mov
inc
mov
mov
inc
mov
or
ljmp
push
xchg
xchg
cwtl
hlt
test
xchg
xchg
sbb
adc
mov
leave
mov
adc
jmp
sbb
insl
and
hlt
add
adc
push
xchg
pop
mov
and
popf
in
pushf
cmpsl
sub
or
push
pop
imul
sbb
fidivrs
lds
xlat
pushf
adc
aaa
sarb
mov
mov
call
add
xchg
push
test
shlb
xchg
dec
aam
mov
mov
mov
insl
lret
cmp
push
push
outsb
push
mov
fcoml
and
push
mov
adc
cld
cld
xchg
sbb
xchg
jo
push
push
test
aam
mov
movsb
test
inc
sbb
xlat
imul
loopne
incb
jno
xchg
rorl
cmp
pop
pop
in
jmp
imul
or
xchg
out
or
and
pop
adc
test
mov
sbb
lahf
push
mov
enter
xchg
xor
incb
xor
mov
jne
stos
rclb
dec
lock
inc
roll
out
pop
aas
lret
pop
adc
mov
inc
ror
insb
dec
nop
es
sub
adc
dec
lea
dec
out
scas
sbb
out
jmp
inc
mov
fsubr
ret
arpl
lds
adc
mov
jae
dec
das
fs
aad
notb
pusha
test
in
pop
xchg
push
mov
pop
adc
sub
daa
jl
and
test
xchg
dec
pushf
add
icebp
pop
les
sub
pop
out
pop
sub
orl
add
in
jnp
shlb
inc
es
ficompl
data16
fcmove
push
and
add
xor
rorb
mov
nop
add
mov
mov
pusha
lahf
jmp
pop
adc
repz
popw
jae
mov
repnz
and
xchg
and
movsl
cld
stos
out
ret
imul
mov
mov
popf
shlb
loop
scas
sub
in
fadds
push
ret
jl
lea
nop
out
mov
ret
in
xor
bound
ja
and
dec
test
pop
xchg
mov
imul
push
sbb
dec
adc
xchg
int3
popa
lahf
xchg
push
pop
xchg
cmpsl
jecxz
inc
dec
int
shlb
rorl
cwtl
sahf
iret
ret
push
lahf
dec
pop
fs
in
pop
ds
test
lret
push
mov
test
mov
stos
cmpsb
add
loopnew
mov
jbe
pop
rolb
mov
mov
sbb
je
mov
and
xor
sbb
ljmp
xor
mov
ss
cltd
out
cmpsl
rclb
lahf
push
int3
push
icebp
ret
xchg
and
mov
jl
aaa
xor
dec
jo
dec
mov
adc
enter
stos
push
sub
movsb
xchg
xchg
pop
sbb
xor
push
mov
sub
xchg
sub
dec
scas
das
icebp
mov
xor
jb
into
in
inc
loope
aam
and
cwtl
xlat
and
adc
or
call
mov
icebp
arpl
fistpll
xchg
loop
mov
dec
cld
outsb
sti
jle
int3
lds
dec
cmp
cmpl
or
scas
pop
xchg
mov
adc
imul
and
or
enter
movsl
cmpsb
call
or
jge
mov
push
out
jmp
test
imul
es
mov
mov
mov
sahf
adc
mov
sub
notb
add
outsb
adc
add
shlb
lahf
movsb
call
loope
fwait
loopne
shll
mov
add
push
pushf
push
or
aad
cmp
scas
mov
inc
sub
mov
sbb
mov
fisubrl
repz
mov
dec
movups
addr16
cwtl
repnz
jae
mov
insb
adc
movsb
clc
pop
aad
mov
ljmp
fimuls
movsb
cmpsb
xchg
mov
and
dec
dec
test
insb
mov
mov
sbb
mov
daa
out
pop
sbb
arpl
add
out
dec
frstor
adc
call
ljmp
add
adc
movd
int
test
sub
mov
cmp
inc
out
xchg
adcl
inc
js
hlt
fstl
pop
test
lret
mov
lock
push
bound
pop
aad
push
push
jle
jne
cmpsl
inc
mov
in
sub
dec
mov
fs
out
inc
bound
inc
xor
cwtl
dec
enter
aad
imul
aaa
pop
call
or
push
rcr
fistpll
mov
sahf
mov
pop
cmpsb
jae
iret
in
push
lret
stos
push
daa
cmp
les
xor
jns
fidivrl
ds
das
andb
shl
sbb
clts
pop
xchg
dec
sub
sahf
arpl
adc
and
inc
mul
stos
out
jbe
mov
push
sbb
mov
loop
jno
adc
push
mov
fldcw
bnd
or
fisttpl
stos
mov
out
jmp
xchg
daa
sub
lret
stos
fsubs
push
mov
adc
mov
mov
loope
dec
testb
add
in
lock
pop
xor
lahf
mov
dec
jae
cld
and
js
jg
int
out
mov
test
int
cmp
xchg
hlt
fwait
or
jecxz
add
lock
adc
jno
push
mov
fs
push
les
cmp
daa
mov
fsubl
pop
popf
notb
xchg
ret
jne
and
iret
sub
in
subb
pusha
daa
xchg
hlt
xchg
or
mov
sub
cmp
dec
add
add
jbe
adc
inc
push
decl
or
loopne
shlb
out
ret
mov
push
stos
andb
pop
addr16
sub
mov
cmp
outsl
pusha
xchg
xchg
mov
mov
pop
lods
fwait
cs
mov
std
jbe
cwtl
out
mov
adc
or
mulb
sbb
or
out
add
inc
jne
sbb
lret
iret
ret
out
cltd
push
je
rcl
xor
mov
ret
inc
mov
ret
fadds
cmpsb
push
out
sahf
sbb
adc
sbb
popf
pop
idivb
out
je
mov
push
sbb
adcl
or
push
in
imul
pop
push
push
push
xlat
ds
sub
sbb
push
pop
cmpsb
push
push
stos
pop
icebp
add
add
std
sub
pop
pushl
sbb
sbb
dec
fcmovbe
jns
cli
pushf
jnp
repnz
mov
mov
in
scas
adc
clc
cmp
fcmovbe
xchg
push
cmp
fisubrl
movsb
cmp
insl
sarb
insl
mov
mov
jnp
cmp
adcl
loope
mov
mov
std
outsb
xchg
dec
movsl
jmp
cltd
aas
xchg
cmp
cmp
dec
cmp
sbb
fimull
mov
xor
cmp
orl
pop
sahf
lahf
cli
movsb
and
xor
jg
movsb
push
sub
or
arpl
jl
pop
cmp
shrl
lahf
jnp
jae
cmp
rcr
cld
or
call
xor
data16
cmp
jne
test
or
into
xchg
test
fsin
repz
repnz
sub
cmpsl
es
stos
lds
cmp
xchg
mov
push
sbbb
pop
in
add
jo
xor
sar
ficoml
dec
sub
lock
sti
inc
insl
je
ret
mov
clc
aam
fcoml
add
loopne
pop
std
xchg
push
push
sti
adc
cmp
xchg
sbb
xchg
adc
push
popa
shlb
icebp
mov
out
jo
lcall
lea
ljmp
mov
insl
in
sbbb
add
les
fwait
fwait
mov
sarb
imul
adc
movsb
cli
adc
in
stc
xchg
arpl
and
test
ljmp
xchg
pop
push
mov
pop
xor
jb
ss
mov
jge
inc
out
jo
pop
inc
sub
test
push
repz
out
push
xlat
jo
cwtl
jmp
mov
nop
jle
in
decl
sbb
ret
mov
xchg
mov
add
imul
fs
lcall
insb
int
dec
dec
add
sub
das
mov
add
call
jle
sti
inc
and
mov
pop
add
aad
js
scas
orb
std
and
pop
or
sub
out
lcall
outsl
dec
stos
dec
pushf
test
or
mov
pop
dec
xchg
int
cmc
int
mov
out
test
adc
loope
pop
adc
aam
xchg
movsl
pop
out
sti
pushf
pop
call
addr16
popa
dec
jmp
out
xor
add
jno
sbb
int
inc
dec
mov
sub
call
dec
add
cmc
xchg
mov
fcoms
mov
in
ficomps
jae
aam
popa
iret
stos
jecxz
push
sbbl
jmp
icebp
or
inc
xchg
jnp
pop
rorl
fwait
rorl
mov
psubq
out
jmp
jge
fwait
addr16
out
sti
pop
pop
out
jmp
cmp
fwait
addr16
in
mov
cmp
sti
pop
sbb
jmp
stc
out
fwait
inc
cltd
into
mov
clc
int
pop
fcmovne
jmp
mov
into
mov
mov
int
sti
jge
fwait
addr16
into
sti
pop
and
jmp
and
fwait
call
and
sti
out
jmp
repnz
clc
adc
mov
mov
out
fwait
out
xchg
mov
mov
iret
mov
ds
mov
scas
iret
fwait
pop
fwait
mov
int
mov
sub
movb
sub
lea
out
ds
out
jg
ljmp
rorb
pop
aas
enter
enter
int3
mov
adc
sti
pop
lock
pop
xchg
enter
lret
mov
int3
sti
pop
mov
jmp
shr
fwait
addr16
arpl
jecxz
jnp
loope
addr16
mov
jmp
pop
ds
fwait
pop
in
fwait
addr16
mov
sbb
clc
pop
clc
or
fistpl
add
pop
mov
or
jecxz
adc
jg
adc
sti
pop
adc
jecxz
ljmp
pop
loop
cmpsl
popa
loop
and
ljmp
mov
rorl
fbld
lret
loope
mov
popa
sar
popa
and
fwait
out
lret
mov
aas
aad
pop
pop
shr
fwait
jg
fwait
addr16
jmp
jecxz
jmp
pop
cltd
in
fstpt
in
ret
mov
call
ficoml
jns
sti
jg
mov
sti
cmp
mov
aas
cmp
pop
test
fstpt
fwait
cmpsl
pop
mov
pop
xchg
xchg
jmp
mov
fwait
inc
xchg
xchg
mov
call
jmp
repz
addr16
mov
out
jg
xlat
jmp
xor
fwait
addr16
mov
xlat
sti
pop
pop
xlat
jmp
jg
fwait
addr16
lds
pop
cltd
jmp
mov
mov
mov
jmp
sti
xlat
addr16
mov
jp
sti
jg
out
sti
cmp
fwait
addr16
mov
ds
pop
pop
push
jmp
jg
fwait
xchg
aam
stc
dec
or
mov
imul
shlb
inc
or
or
insl
cld
lods
sbb
xchg
int
sub
add
or
xor
or
dec
push
or
pop
push
or
add
add
dec
push
or
pop
push
or
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
