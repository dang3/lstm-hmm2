push
sbb
ret
scas
xchg
sub
adc
lock
loop
jge
sbb
pop
orl
in
inc
les
movsb
stos
inc
or
push
pop
and
lods
xchg
ja
les
scas
adc
mov
dec
xor
test
adc
adc
stos
je
rcll
lods
jmp
inc
fimull
xor
sbb
and
pop
aas
aas
xchg
xchg
stos
push
mov
inc
gs
mov
adc
pop
aas
adc
adc
push
push
daa
jl
das
xor
mov
and
jp
inc
sub
pop
ds
adc
movsb
push
pusha
sub
outsl
loop
jmp
cmovno
adc
test
les
push
xchg
push
aam
inc
test
shl
je
sub
daa
or
and
dec
add
adc
sub
cmp
inc
sub
or
mov
inc
cmpsb
push
mov
hlt
or
in
sub
and
mov
adc
adc
cmc
or
repz
insb
shlb
mov
fsts
outsl
or
les
xor
push
mov
pmuludq
call
pop
and
xor
aas
sub
nop
xchg
mov
popf
sahf
shl
sub
inc
adc
mov
pop
mov
ds
xchg
pushf
test
sub
push
int
pop
mov
sbb
dec
jl
sub
sub
subl
xchg
and
adc
ret
xchg
adc
inc
scas
cmp
shrb
stc
inc
sbb
and
insl
lret
inc
clc
sahf
adc
or
jecxz
aas
xlat
mov
sub
movsb
punpckldq
mov
negl
and
xchg
cmp
popf
mov
pop
fcomi
mov
sub
pop
sbb
xchg
ja
lcall
mov
imul
divl
ja
adc
outsl
mov
negl
adc
idivl
aas
movsb
cli
fs
add
sbb
in
rorl
cmpsb
xor
push
mov
int
cmpsb
sub
inc
adc
adc
push
cmp
cmp
daa
jecxz
popa
jb
jae
insb
bound
xlat
mov
adc
in
mov
dec
push
push
pop
sub
lahf
dec
cmp
lret
xchg
subl
push
sbb
lret
cmp
xlat
sbb
add
sbb
add
sbb
inc
xlat
out
iret
mov
out
push
fistl
or
xorl
cmpsb
stos
rcll
add
add
stos
repz
sub
cli
sub
stos
imull
into
or
enter
sub
fistps
and
es
and
stos
dec
add
push
dec
sub
cmp
movsb
cmp
push
sbb
mov
movsl
or
pop
sti
adc
repz
or
or
or
dec
leave
stos
or
fwait
adc
lods
sbb
les
dec
daa
adc
push
roll
sub
xchg
mov
ss
adc
loope
lea
mov
push
mov
xchg
and
stos
leave
cmp
jmp
xchg
mov
arpl
xor
jbe
sub
cmp
push
xchg
xor
add
and
rcrb
or
gs
add
adc
and
add
aas
insb
or
inc
or
dec
sub
adc
enter
mov
sub
xor
or
outsb
enter
pop
cltd
and
adcb
and
ret
adc
das
jmp
inc
dec
or
mulb
lret
lds
or
repz
mov
inc
and
je
adc
stc
push
dec
sub
xor
mov
or
add
ss
adc
sub
cltd
xchg
xor
sub
xchg
push
out
push
shll
fisubl
cmp
ss
lahf
adc
aaa
outsb
out
test
cmp
inc
jmp
push
push
cmp
sub
mov
rolb
pop
inc
jecxz
dec
adc
mov
adc
bound
sub
pop
pop
stos
test
inc
out
and
and
pop
inc
sub
cmp
insl
mov
in
push
xor
fldt
les
sub
mov
popa
and
in
lods
xor
jp
dec
fstps
in
lock
sub
aaa
add
jbe
xchg
lahf
adc
pusha
sti
call
pop
ja
sbb
inc
daa
or
or
arpl
test
fwait
movsb
loope
xchg
adc
dec
inc
shlb
pop
lcall
lahf
adc
out
jb
mov
mov
sbb
or
and
cmp
mov
jmp
dec
inc
sub
pop
inc
fldenv
pop
in
xor
cmp
pop
testl
outsb
add
popf
cmp
repnz
push
and
stos
adc
xor
inc
outsl
sub
fs
test
sub
dec
pop
aas
popf
jb
leave
pop
data16
outsl
test
fisubl
setp
outsb
fwait
and
mov
shll
sbb
sub
mov
mov
movsl
xchg
lea
xchg
and
iret
jns
and
xor
push
xchg
push
push
dec
and
pop
cmpsb
mov
dec
and
inc
cmp
and
inc
aaa
and
dec
sub
adc
adcl
das
cmp
jle
lcall
jl
mov
jmp
sbb
sub
pop
jmp
xlat
add
mov
scas
notl
jno
out
sub
aad
imull
cmp
jle
xor
add
cmp
andb
and
mov
das
lods
mov
insb
mov
leave
jnp
cli
push
scas
adc
jg
cmp
jl
jbe
xor
push
aad
sbb
xor
mov
xchg
push
mov
jnp
xchg
mov
or
cltd
adc
or
and
cmovo
neg
mov
mov
adc
push
fsubl
sahf
scas
jnp
je
cli
cmpsb
fsubr
and
std
pop
inc
mov
push
cmp
mov
cmp
xor
pop
or
nop
pop
and
pop
shll
movb
mov
mov
jg
dec
xor
test
dec
and
leave
scas
xor
shrl
jecxz
outsl
nop
icebp
xor
or
addb
adc
xor
and
stos
xchg
inc
loopne
lods
dec
shll
xchg
addb
and
push
pusha
cmpsl
scas
pop
jge
repz
sub
inc
mov
imul
push
inc
push
mov
xchg
sub
cmp
inc
mov
mov
rorb
outsl
push
mov
les
xchg
mov
inc
dec
ja
dec
fwait
test
mov
inc
das
aad
jnp
push
jno
shlb
mov
loope
aas
dec
adc
jnp
les
je
jb
adc
xlat
out
scas
xchg
mov
push
popa
sbb
out
iret
sub
fwait
hlt
imul
sub
and
movsl
adc
xchg
xlat
and
sbb
or
or
test
and
adc
or
mov
cmp
stos
leave
xor
lret
push
mov
pop
das
cs
loopne
out
xlat
sbb
les
shrl
pop
pop
xlat
sbb
cmp
mov
or
push
cmp
mov
inc
add
inc
dec
push
sub
dec
fisttps
and
outsl
xor
sti
pop
inc
scas
push
cmc
adc
xorl
push
push
inc
pop
and
dec
pop
push
sub
xchg
xorl
sub
addl
pop
cwtl
mov
xor
push
mov
cmp
scas
mov
scas
adcb
mov
into
xchg
adc
dec
sbb
jmp
push
xor
inc
mov
jb
pop
xchg
sub
inc
sub
mov
nop
mul
fisttpl
jo
aas
mov
test
iret
inc
jecxz
xchg
repz
and
movsl
adc
xor
fbld
xor
and
xor
or
sbb
lods
ljmp
pop
adc
test
jbe
les
mov
das
daa
sub
inc
je
mov
sbb
jns
add
adc
dec
sbb
aas
shll
dec
repz
fcmovnb
test
xor
pop
mov
jb
pop
xchg
adc
inc
imulb
in
sbb
popa
mov
mov
push
mov
sub
or
adc
bound
jo
xlat
mov
daa
pop
inc
subps
shr
push
adc
mov
inc
rcrb
xor
and
xor
daa
sub
pop
xchg
sbb
outsl
sub
aam
pop
gs
push
into
loop
and
mov
pop
push
inc
iret
inc
les
sub
arpl
and
ljmp
xchg
jg
cs
in
xor
test
mov
jo
shl
adc
push
loopne
push
imul
out
aas
jg
fistps
loop
fstps
and
xchg
jge
sarb
fstpt
dec
stos
pushf
adc
arpl
push
loopne
and
arpl
les
or
sbb
or
xor
in
out
push
or
jnp
aas
daa
scas
dec
aad
js
xor
mov
push
dec
fwait
jbe
and
and
and
mov
sub
xchg
xchg
stc
les
mov
daa
sbb
xchg
adc
dec
loop
xlat
pop
fiadds
aad
xchg
mov
add
sbb
mov
or
push
sub
push
mov
sbb
inc
dec
outsl
lea
push
jg
xor
xchg
out
mov
pop
ficompl
dec
aad
ja
xchg
scas
mov
mov
cmpsb
scas
dec
hlt
movsb
shlb
mov
es
cmpsl
fists
or
push
jbe
inc
add
inc
daa
cld
and
aas
fldt
and
adc
lret
call
cmp
adc
ret
jo
out
mov
sub
inc
sbb
outsb
fwait
pop
jns
aas
push
adc
pop
add
insl
pop
and
data16
or
shr
dec
sub
test
sahf
sbb
mov
jmp
push
jecxz
inc
sti
enter
testl
test
or
xchg
test
xchg
iret
ljmp
jbe
and
movsb
adc
pop
pop
fildll
and
sub
xor
dec
inc
insl
jle
jge
inc
xor
or
adc
dec
dec
out
jo
call
cmpsb
cmp
jle
lods
mov
pop
pusha
and
bound
mov
orb
sub
mov
push
imul
psrld
push
decl
test
sub
inc
push
inc
xor
inc
dec
nop
mov
mov
add
dec
xchg
mov
xchg
adcl
inc
push
sbb
lds
bound
in
fisubl
pop
or
inc
push
loopne
sub
push
nop
and
lcall
cwtl
sbb
test
xchg
enter
and
xchg
ds
jns
push
dec
pop
and
xor
or
stos
xchg
out
cmp
xor
push
inc
jmp
add
outsl
lret
mov
roll
cmp
add
xor
mov
cmpsl
adc
and
and
fs
std
xlat
int3
int3
icebp
ds
sbb
push
inc
mov
adcb
inc
and
bound
test
cmpsb
mov
add
mov
pusha
dec
ret
outsb
or
jae
in
inc
xchg
into
popf
push
and
nop
xchg
jae
mov
xor
xchg
addr16
xchg
xchg
sti
xchg
mov
aas
mov
fistpl
lock
loop
sub
adc
lahf
loopne
mov
fistpll
lcall
addr16
sub
xlat
andl
fbld
inc
lods
dec
js
pop
aas
sbb
mov
dec
hlt
adc
popa
adc
push
mov
sub
push
xchg
or
adc
inc
adc
adc
adc
js
test
and
insb
jnp
test
adc
sub
or
lea
and
mov
dec
gs
repz
call
adc
stos
arpl
insl
les
jecxz
les
jge
push
dec
sub
fistpl
ja
xchg
hlt
pop
stos
cmpsb
dec
icebp
sbb
jns
xor
icebp
stos
imul
adc
std
daa
jecxz
stos
jg
jbe
lea
in
aaa
push
pop
sub
pop
jg
sarb
test
mov
or
push
xor
xchg
dec
imull
cmpsb
sub
fbstp
push
enter
xlat
push
cmp
mov
stos
and
mov
or
dec
mov
dec
mov
push
sbb
aas
test
outsb
pop
mov
pop
cmp
push
or
add
mov
add
mov
sbb
xor
add
dec
inc
outsb
cmp
pop
js
xchg
lock
xchg
sub
cld
and
sub
adc
xchg
and
insl
or
sbb
fcomps
xchg
sbb
adc
fisubrs
mov
shlw
cmp
pop
fwait
das
les
dec
xchg
mov
icebp
add
mov
icebp
pop
sbb
cmp
inc
cmp
or
stos
or
push
or
sbb
shrl
call
xchg
nop
xor
int3
addr16
push
add
lods
xchg
mov
loop
adc
mov
out
ja
push
lahf
and
jg
frstor
and
mov
xchg
lcall
pushf
and
mov
lahf
sub
int
add
xor
inc
and
imul
mov
adc
inc
jae
mov
in
addl
mov
adc
or
mov
mov
adcb
adc
and
adc
and
arpl
inc
pop
imul
adcb
ret
jns
xor
push
and
cli
push
lret
pop
adcl
scas
dec
scas
mov
les
jg
sub
mov
rorl
dec
addl
int3
and
dec
jle
shll
xchg
adc
bound
and
xchg
mov
lock
mov
and
sub
scas
in
cmp
popf
xlat
pop
lahf
push
aaa
jae
jp
rorl
in
cmp
daa
rol
and
sbb
scas
int
scas
mov
sub
cmpsl
mov
out
fdivr
pop
mov
loope
inc
xchg
push
push
test
xchg
test
mov
sbb
popf
xor
andb
arpl
insb
push
inc
mov
lret
pop
push
pop
push
mov
jne
cmpsb
xor
cmp
inc
das
cmp
test
fdivrl
add
ja
fwait
xor
lahf
sbb
enter
jmp
or
and
loopne
add
and
incb
std
and
or
sti
adc
stc
pop
add
jno
testl
jne
repz
repnz
arpl
imul
add
sub
lret
inc
ds
leave
inc
pop
enter
inc
and
inc
cmp
inc
xor
inc
pop
ret
sarl
pusha
add
push
add
aas
add
insl
add
xor
sbb
xor
outsb
add
jp
xlat
add
sbb
ret
ja
jl
and
or
jg
aaa
scas
popf
and
mov
ficomps
push
loop
rcrb
stos
push
lds
scas
push
xchg
push
mov
cmp
inc
movsl
mov
sub
std
cmp
adc
push
sbbl
jmp
adc
das
cmpsl
stos
and
or
mov
subl
or
out
and
mov
inc
arpl
jecxz
mov
pop
addb
aas
popa
adc
sbb
and
sub
push
push
add
sbb
push
xchg
das
fcoms
cmpsb
mov
xor
cmpsl
fsts
mov
sbb
sbb
icebp
sbb
xor
repz
and
and
inc
xchg
enter
enter
test
sbb
insl
insl
bound
push
or
xchg
sub
pushf
sub
xchg
push
das
lock
mov
pop
cmpsl
movb
sidtl
adcb
inc
stc
and
add
jg
subl
adc
xchg
add
scas
inc
enter
inc
loop
jmp
scas
js
dec
xor
inc
fistpl
mov
ret
sub
xor
out
in
daa
das
pop
and
xchg
roll
int3
mov
aaa
rcrl
es
push
fildll
out
syscall
inc
cmp
fisubrs
cmp
ret
frstor
rcr
lea
inc
sbb
aam
cmp
sub
mov
push
and
and
hlt
stc
mov
stc
or
mov
lret
adc
adc
or
sti
scas
adc
mov
mov
dec
fistpll
push
mov
mov
mov
in
push
enter
push
mov
xchg
push
pop
mov
xchg
xor
and
sub
cmp
stos
mov
adc
pop
adc
xchg
jmp
call
sub
es
daa
pop
js
sti
insb
mov
push
push
or
insb
bound
mov
dec
cmp
xchg
mov
movaps
and
test
mov
in
xor
mov
dec
jnp
stos
push
repnz
or
pop
aas
xchg
mov
cltd
outsb
dec
popf
enter
je
add
ss
pop
and
inc
xchg
sub
cltd
shr
loopne
or
lods
dec
mov
mov
lock
mov
mov
jge
push
cmc
adc
cmpsl
out
shrb
mov
sbb
push
xlat
jo
sti
xchg
sti
push
mov
jae
stos
jo
xchg
cmpl
fs
ss
aad
sub
push
xchg
sub
daa
dec
jge
fistps
rcrl
lds
outsb
cmpsl
fwait
leave
mov
jp
int
sti
adc
jp
xchg
lods
adc
fidivrs
pop
or
rcrl
push
dec
lret
aas
ret
lds
int3
enter
or
or
or
enter
lds
test
pop
xor
shll
nop
mov
sarl
les
mov
mov
inc
push
xor
into
mov
and
jnp
inc
and
stos
mov
push
adc
xorb
roll
daa
push
sub
enter
mov
xchg
mov
movsl
js
enter
adc
sub
push
outsb
sub
nop
das
aas
add
aas
sub
xor
xlat
icebp
into
mov
out
and
lea
ret
loop
xor
lret
add
repz
call
and
cwtl
sub
pop
and
mov
sbb
les
mov
xlat
test
mov
cmp
xchg
xchg
je,pt
mov
sub
lahf
movsl
fldcw
adc
or
outsb
imul
push
popa
cmp
xchg
pop
lahf
xchg
shrl
dec
sbb
jle
dec
sarl
and
in
jb
xor
jecxz
mov
xor
mov
inc
out
outsl
jmp
and
or
mov
les
jl
jne
adc
shll
push
xchg
push
xchg
bound
inc
push
fldt
popa
push
stc
xchg
push
iret
xchg
test
sub
mov
rclb
sti
shrl
mov
outsl
loop
push
jae
or
pop
sbb
pop
fsubs
sub
add
adc
pop
cmp
xchg
data16
mov
ret
fiaddl
fldenv
loopne
ficoml
aas
dec
xor
stos
ss
inc
addr16
std
adc
pop
sbb
or
inc
lret
xchg
enter
pop
sbb
outsl
and
fmuls
cmp
dec
jo
out
or
js
dec
shrl
lret
adc
movsb
and
test
lret
repz
mov
cmp
mov
movsl
mov
sbb
mov
ficoml
xchg
sub
pop
cs
push
mov
xor
adc
jp
mov
mov
pop
xor
push
or
cwtl
sbb
test
test
stos
into
imul
cmp
test
pop
imul
push
dec
in
dec
dec
pop
sub
xor
aas
inc
sub
pop
or
fidivrl
jo
cwtl
push
adc
inc
mov
xor
or
inc
rclb
jecxz
je
xor
ss
push
mov
mov
fsubrl
or
pop
movl
xchg
arpl
shrl
xchg
xor
cmp
adc
stc
sbb
mov
push
pop
dec
addl
add
push
test
lods
push
jnp
stos
or
push
add
jbe
pop
jns
mov
xor
and
inc
and
sub
and
adc
rcrl
mov
sbb
mov
fs
pop
pop
pop
adc
adc
in
cmpsb
scas
adc
push
push
fnstenv
adc
xchg
sub
pop
xlat
push
inc
aas
cmp
arpl
mov
or
add
xchg
popa
mov
mov
pop
and
shlb
inc
sbb
mov
jno
cltd
lret
dec
sub
fnstcw
lret
aas
adc
cmp
fmuls
aas
and
movsb
mov
xchg
pop
and
bswap
xchg
jl
xchg
daa
sti
cmp
das
test
jb
outsl
adc
nop
rcl
adc
inc
rcl
sbb
aas
sub
mov
lods
test
sbb
dec
int3
push
and
les
jbe
push
pop
dec
sbb
xor
les
or
jno
sbb
sbb
dec
frstor
mov
mov
push
adc
ficompl
adc
cmp
xor
xor
or
cmp
shll
ret
ret
adc
inc
cmpsb
push
inc
inc
ret
pop
sub
inc
mov
clc
inc
inc
or
and
fwait
adc
push
dec
pop
xchg
mov
les
pop
sbb
dec
in
sub
jns
sub
aas
jo
push
sub
pop
mov
repnz
mov
stos
pop
popf
dec
and
pop
adc
inc
jnp
cs
gs
xlat
mov
jg
sti
leave
cmp
arpl
adc
cmp
fbstp
xchg
adc
movsl
push
mov
xchg
mov
xchg
jae
mov
mov
and
xchg
movsl
leave
movsb
out
xchg
and
inc
or
lret
popf
loop
pop
sbb
mov
mov
inc
in
push
call
inc
push
push
sub
sub
dec
adc
repz
lahf
dec
pop
aas
inc
mov
cmp
xor
push
add
mov
mov
data16
or
jl
dec
cmp
xchg
lret
aam
ljmp
or
pop
fs
sbb
pop
xor
sbb
enter
and
dec
xor
pop
adc
aas
xor
icebp
cmpsl
rcll
adc
out
dec
test
push
bound
popa
adc
loopne
pusha
mov
adc
jg
fsubs
icebp
int3
cs
sub
fistpl
inc
push
pop
aaa
mov
add
stos
sub
fnstsw
jmp
out
pop
cmpsb
or
mov
push
push
sub
inc
xor
sarl
pop
mov
and
xor
movl
add
lods
aad
and
movsb
arpl
outsl
cmpsb
pop
test
incl
jmp
repz
pop
insl
adc
mov
lods
or
aas
rclb
mov
pop
les
jnp
sub
inc
mov
dec
add
cmp
shr
or
sub
and
sub
scas
cs
push
adc
movsb
es
in
sbb
push
dec
pop
add
inc
sub
mov
jecxz
imul
daa
test
faddl
add
jnp
push
mov
and
sub
daa
scas
push
jnp
les
push
outsl
and
cmp
cmpsb
outsb
push
sbb
aas
pop
inc
aas
daa
scas
test
pop
stc
scas
push
push
xor
stos
sbb
sbb
sbb
sbb
cs
xchg
push
push
pop
adc
stc
mov
fldt
js
lret
push
or
xchg
push
aad
mov
mov
test
test
xchg
inc
cmp
mov
and
in
and
adc
rcrb
scas
inc
pop
arpl
inc
pop
int3
lds
call
int3
jmp
xchg
pop
push
and
and
fcompl
mov
mov
push
bound
mov
dec
xchg
decl
insl
sbb
nop
sti
cli
sub
mov
les
and
sbb
sub
pusha
out
pop
addb
icebp
xor
imul
jmp
push
adc
push
dec
inc
cmp
rclb
in
sbb
jge
pop
outsl
fiadds
and
movsb
inc
and
xchg
outsl
sub
sbb
push
out
or
xchg
mov
sub
call
das
dec
jno
mov
dec
xor
inc
mov
xchg
mov
xor
xor
fisttpll
shrl
xchg
mov
ficompl
push
fwait
and
push
mov
push
pop
imul
ret
das
dec
ret
sub
dec
jns
test
into
xchg
mov
enter
mov
and
push
addr16
mov
xor
mov
cltd
xchg
das
pop
fwait
repz
sarb
stos
dec
bound
mov
and
adc
test
pop
aam
jb,pt
pop
sub
fs
rcl
divps
loope
mov
ds
or
push
jp
inc
sub
dec
in
call
shlb
clc
les
mov
aad
out
mov
ret
push
inc
xlat
testl
repz
push
iret
movsb
pop
inc
lret
dec
add
fcomip
or
scas
les
and
fmuls
push
inc
jb
repz
sbb
xor
sbbb
out
mov
jecxz
push
loopne
mov
inc
or
jae
pop
push
notl
lret
jg,pn
sti
sbb
sub
push
inc
cmpsl
add
testl
inc
stos
add
xor
in
or
xchg
inc
sbb
rcll
or
popf
pop
push
and
jb
movsb
test
in
and
adcb
loope
orb
cmc
sbb
sbb
rcll
dec
dec
or
mov
push
and
cmpb
rcrl
addr16
nop
in
and
fwait
xchg
nop
in
incl
xlat
sub
or
xchg
jle
pop
cmp
rclb
xlat
push
imul
rcll
shrl
cli
pop
sub
dec
xchg
adc
mov
push
movsl
call
test
pop
sub
dec
pop
and
test
cli
sub
push
pop
and
icebp
lahf
push
or
inc
orb
sub
outsl
jge
mov
or
testl
testl
xor
mov
mov
jmp
add
sarb
push
xchg
mov
scas
mov
scas
iret
jg
test
sbb
push
mov
shrb
add
dec
xchg
test
inc
in
sbb
jns
in
lods
push
fistpl
fs
push
repnz
subb
lods
inc
inc
aam
ss
or
aas
test
mov
scas
and
inc
and
and
in
xchg
and
sarb
inc
sub
push
dec
dec
cs
xor
mov
pop
nop
and
addb
cmpsb
and
xor
xor
pop
in
test
sub
mov
sub
shll
mov
cmc
xchg
or
inc
mov
mov
inc
sbb
lcall
testb
loop
jp
pop
lods
dec
fldt
sbb
sti
push
popa
cmp
shl
jmp
and
cs
jge
push
push
adc
jns
cmp
adc
or
mov
mov
mov
dec
inc
pop
and
clc
les
sbb
dec
mov
dec
cmpsb
mov
and
bound
fwait
inc
and
stos
cmpsl
imul
test
movsl
jge
sbb
mov
and
mov
add
adc
jns
jmp
inc
add
dec
add
mov
mov
mov
push
and
mov
cmp
scas
in
cli
adc
adc
cmp
sub
dec
xchg
jno
and
dec
xor
and
jmp
mov
cmc
xchg
mov
sub
push
out
adc
or
aas
inc
dec
cmp
cmp
inc
test
out
sub
or
movsb
pop
push
and
scas
push
and
mov
loope
xchg
sbbb
xor
add
stc
ret
push
lock
ret
pop
in
out
inc
outsl
cs
xchg
adc
mov
sti
gs
cmpsb
push
or
out
adc
adc
mov
push
cmp
sbb
pop
sbbb
add
mov
test
xchg
scas
pop
sahf
inc
pop
cmp
or
push
imul
mov
push
mov
jl
or
push
sbb
lret
ja
rcr
fdivl
lds
sub
add
jle
inc
sub
out
insl
fstpt
and
sub
and
inc
and
int3
sbb
cmp
bound
rorb
jo
sub
inc
cs
jno
insl
imul
sbb
inc
push
sub
test
or
mov
test
xor
inc
outsl
les
cmpsb
mov
rclb
add
pop
push
adc
push
xchg
push
out
and
cmp
sbb
and
mov
and
and
push
inc
inc
dec
arpl
sbb
adc
sub
adc
bound
imul
push
sub
pop
pop
push
jbe
sbb
xchg
movsb
mov
shll
rorb
mov
sub
sbb
adc
mov
movsb
inc
es
cs
and
out
and
scas
xchg
addl
sub
das
mov
in
xchg
or
in
orb
sub
add
fildl
adc
mov
addr16
cltd
call
std
std
sbb
jne
and
leave
aas
push
mov
std
mov
in
shlb
xchg
jnp
sbb
frstor
out
nop
cmp
or
inc
sub
push
inc
push
popf
ret
inc
dec
mov
mov
insl
fisubl
lock
jl
jno
adc
leave
movsb
mov
out
in
js
push
sbb
roll
push
inc
sub
dec
mov
sub
ss
sub
in
outsl
add
inc
dec
or
and
ds
mov
sbb
cmpsl
mov
inc
aad
inc
imul
lret
rcr
shlb
pop
divb
sbb
je
xchg
out
pop
mov
cmp
cmp
pop
or
mov
and
mov
jl
lahf
pop
cmpsl
xor
adc
mov
inc
shrl
push
movsl
fdivl
pop
inc
adc
into
das
mov
out
mov
rcll
jmp
add
movsl
das
sbb
jno
fcompl
push
cmpsl
cs
divb
xchg
lret
dec
jle
ret
xchg
dec
jno
daa
sbb
fimull
mov
mov
fs
or
inc
xor
ljmp
push
and
out
push
and
xor
out
pop
mov
sarl
mov
inc
xor
aaa
jp
jmp
lahf
fcomp
pushw
adc
dec
jmp
shrb
and
das
add
sbb
pop
fs
sub
adc
cpuid
out
out
and
dec
mov
mov
jns
repz
adc
xchg
dec
jle
sub
repnz
xchg
or
prefetch
mov
and
sub
or
cmp
imul
jne
sysret
push
enter
movsb
addl
and
arpl
sub
jg
out
push
aaa
jns
stos
bound
cwtl
loop
enter
adc
lods
test
cmp
pop
lods
cwtl
mov
sbb
inc
sub
or
movsb
push
daa
in
mov
cs
stos
or
inc
in
movsb
push
fbstp
xchg
pushl
dec
and
cwtl
aad
or
inc
stos
or
and
inc
and
inc
push
and
pop
adc
jnp
xor
enter
adc
rolb
scas
arpl
roll
jns
lahf
leave
or
xchg
and
lds
outsb
xor
popa
nop
cmp
pop
fs
das
and
or
je
push
and
push
or
or
and
sub
les
push
cmp
mov
xor
or
mov
adc
and
xchg
lret
pop
xchg
adc
pop
inc
loop
push
mov
scas
rorl
adc
pop
je
je
adc
mov
jmp
scas
notl
mov
mov
arpl
dec
pop
aas
xor
inc
adc
cmp
mov
imul
int
jnp
int
lock
dec
adc
and
pop
and
test
xchg
mov
dec
or
aas
or
aaa
pop
leave
ljmp
sub
jo
jecxz
mov
xchg
fidivs
orb
inc
dec
sar
mov
mov
aaa
jae
mov
inc
enter
sub
sbb
scas
mov
inc
and
or
jae
xchg
aas
stc
adc
dec
inc
sarb
dec
ret
lcall
sub
adc
xorb
stos
adc
xor
shl
jae
mov
inc
jae
add
fimuls
les
adc
aam
or
les
shl
hlt
out
lret
push
xchg
jle
jecxz
and
mov
sbb
daa
call
clc
xchg
ret
inc
or
pop
cmp
ret
das
jg
mov
les
popf
mov
cmc
ret
test
xor
sub
xor
mov
mov
int
mov
inc
ds
into
ja
clc
cmp
movsb
fadds
movsl
cmp
dec
cltd
adc
fwait
aad
pop
cmp
fwait
aad
inc
lods
icebp
pop
mov
imul
mov
inc
or
dec
sarb
pop
rcl
jnp
sti
iret
out
and
or
pop
add
jo
repz
mov
ja
and
xchg
and
push
mov
scas
add
dec
adcl
pop
adc
or
lcall
or
push
sub
xchg
repnz
sub
test
push
ret
and
pop
mov
xor
or
push
or
pop
adc
pop
xor
pushf
in
popf
jp
xchg
jnp
sbb
aaa
sbb
cwtl
pop
push
sub
mov
push
adc
dec
dec
sub
xor
cmp
push
fsubl
dec
rol
aaa
les
cmpl
push
dec
cmpsb
enter
cmp
mov
xchg
leave
dec
cmc
sahf
lock
lahf
mov
mov
rclb
inc
mov
pop
pop
or
adc
xor
jnp
fcom
repnz
and
call
inc
inc
mov
dec
xor
int
imulb
aas
shrb
push
dec
or
sub
mov
lret
cmp
xchg
or
cld
cmpsl
fisubrs
dec
cmp
mov
in
dec
pop
mov
daa
sub
mov
pop
fnstsw
add
pop
clc
popf
ficoms
jge
unpcklps
sub
push
cwtl
outsl
daa
clc
nop
dec
inc
adc
add
repz
stos
mov
loopne
sub
sub
xor
rep
fimull
data16
stc
fwait
push
call
and
and
testl
sbb
inc
pop
xchg
dec
inc
sub
stos
cmp
notl
out
sti
inc
xchg
jbe
jo
jo
out
xor
daa
jle
pop
add
aaa
or
in
inc
mov
and
mov
xlat
les
mov
aad
xor
mov
mov
jp
iret
or
cld
mov
or
dec
bound
inc
movsb
negl
and
sub
cmp
dec
inc
fdivrl
daa
ret
lcall
jae
mov
and
push
xor
js
lret
ror
or
clc
test
jmp
dec
lret
movsl
lret
pop
nop
pop
dec
out
add
mov
movsb
and
stos
mov
mov
adc
inc
xchg
or
xor
adc
fwait
mov
stos
pop
push
les
dec
mov
sbb
int3
push
sub
xchg
push
add
scas
adc
sbb
daa
sub
mov
into
adc
cmpl
inc
aaa
inc
xchg
pop
jp
sub
inc
cmpsl
insl
add
fwait
lcall
bound
push
mov
xchg
adc
lcall
xor
bound
xor
sub
xlat
daa
mov
add
ds
es
stos
cs
mov
pop
sub
or
mov
adc
dec
dec
dec
dec
mov
dec
push
cmp
testl
repz
adc
sbb
lods
jp
pop
and
jne
stc
movsb
rol
jno
push
dec
ljmp
test
les
push
daa
cwtl
push
dec
xchg
push
and
push
pusha
and
xchg
add
push
stos
pop
inc
pushf
pop
and
push
inc
xchg
push
or
sub
xchg
aas
insl
inc
testb
mov
and
and
or
outsl
cs
sub
xchg
add
daa
or
mov
and
test
sub
int3
subb
sbb
mov
and
sub
out
shrb
cmp
pop
insb
xor
cwtl
or
sub
dec
mov
mov
aad
or
mov
and
aam
cmpsl
aas
je
enter
push
xor
add
imul
stos
sarl
out
jb
xor
xchg
aas
xchg
mov
inc
cmpsb
mov
les
divl
rorb
test
ja
pop
imul
mov
add
lret
es
pop
pop
je
je
cmpsl
push
cmpsb
sahf
hlt
add
adc
dec
jle
or
lret
sqrtps
sbb
pop
adc
pop
in
icebp
les
push
xchg
inc
pop
cld
sub
inc
xor
jnp
pop
lock
imul
and
sub
push
jo
cli
push
pop
xor
lock
dec
mov
sub
loopne
dec
ret
xchg
jl
cmp
add
cs
xor
adc
sub
jno
dec
inc
adc
call
pop
sub
push
mov
lock
lock
das
dec
xor
mov
ret
pop
sarb
sarb
cmpsb
or
rcl
push
xchg
in
out
and
mov
pop
push
push
movsb
stos
movsb
mov
xchg
stos
outsl
sub
mov
and
push
mov
push
and
adc
jg
subb
aaa
push
sub
lcall
push
loop
dec
mov
or
test
call
bound
adc
add
xchg
inc
sub
sub
out
sub
lahf
clc
les
adc
sub
adc
add
lea
jg
jmp
mov
jle
cmc
jmp
outsl
sahf
dec
daa
clc
mov
sub
clc
mov
cli
mov
sub
push
dec
mov
lods
inc
push
call
mov
inc
or
sbb
xchg
test
lahf
out
cli
cmp
out
repnz
xor
repz
push
cld
jmp
dec
testb
shlb
rorl
cmp
repz
push
push
mov
jmp
cli
xor
out
repnz
test
xchg
mov
xchg
push
sbb
xchg
sub
rclb
adcl
inc
stc
and
and
sbb
pop
or
or
dec
fisubs
pop
sub
or
shlb
mov
call
mov
imul
push
dec
pop
dec
movsl
jno
dec
lahf
dec
imul
mov
shr
fbld
dec
mov
je
ret
mov
inc
scas
repz
or
or
and
dec
loope
dec
sbb
pop
js
xchg
sub
xor
fdiv
in
ja
scas
push
test
mov
repz
jbe
or
lods
addb
push
dec
cli
xor
repz
repz
repz
jmp
xchg
sti
jmp
fnstsw
mov
push
hlt
jno
mov
pop
sahf
sub
xor
adc
mov
repz
fistps
xchg
jno
xor
inc
ljmp
push
sbb
pop
push
and
mov
daa
idivl
out
sar
xchg
cmp
add
adc
inc
jmp
sub
test
sub
hlt
push
and
and
mov
xchg
jbe
mov
xor
xor
movsl
xchg
js
and
lock
shlb
mov
outsl
push
dec
imul
bnd
mov
lret
jg
iret
sub
arpl
push
scas
jp
adc
or
inc
jns
cmpsb
jl
dec
lcall
sbb
push
jne
ja
std
jae
nop
sub
pop
stc
cmp
cwtl
push
cli
aaa
xchg
ret
fisubs
mov
pop
ret
das
dec
subl
add
cvttps2pi
scas
shll
mov
pop
mov
fisubrs
pop
jne
into
shlb
insb
sbb
fiaddl
mov
and
stos
int3
pop
and
xor
repnz
popf
adc
push
pop
or
mov
add
insb
push
push
mov
std
hlt
pop
xchg
push
lret
pop
and
sub
testb
mov
bnd
cmp
mov
ja
pop
mov
xchg
test
mov
lds
xor
les
ja
push
inc
ret
inc
pop
cmp
dec
fbstp
rcr
sub
dec
insb
add
fwait
jle
fiadds
and
xor
sbb
adc
testb
sub
xchg
or
fs
inc
dec
dec
lcall
push
sub
inc
adc
mov
mov
push
mov
mov
xor
xchg
test
movsl
jp
loop
jns
mov
cmp
outsl
pop
ret
mov
pop
xor
ret
aam
test
aas
call
lahf
das
inc
bound
add
iret
sbb
xchg
and
xor
jmp
test
mov
xchg
fildl
pop
mov
mov
ja
push
fisttpl
sub
adc
xchg
sbb
js
fildll
pop
js
cs
mov
fadds
pop
imul
sbb
xchg
pop
xor
jmp
scas
xchg
mov
or
pop
add
pop
cmp
mov
xor
leave
movsl
push
mov
push
pop
lods
sbb
lahf
mov
inc
xchg
stos
dec
push
inc
adc
xor
pop
testl
sub
or
xor
xchg
loopne
daa
lahf
in
or
movsl
and
xchg
push
and
adc
idivl
std
mov
fstpl
xchg
inc
jae
push
out
xlat
mov
dec
xor
jmp
shll
xchg
and
out
aam
lods
mov
test
icebp
call
sbb
pop
mov
xchg
add
sbb
inc
call
xchg
jo
adc
jae
movsl
imul
adc
sti
jns
and
pop
sub
pop
aaa
cld
fsts
xor
fisttpl
icebp
outsl
mulb
mov
jp
inc
mov
stos
inc
sti
add
gs
push
sub
nop
lods
mov
orb
sbb
xchg
xchg
dec
jg
in
leave
push
push
and
mov
shll
sub
jns
inc
lsl
lcall
sub
mov
int3
mov
or
jo
xor
mov
stos
data16
adc
shr
dec
incl
inc
imul
aas
inc
jne
mov
jle
mov
cmp
push
in
mov
mov
sahf
gs
xlat
test
push
and
push
adc
arpl
cmp
test
lods
cmp
mov
fisttpll
test
divb
icebp
push
adc
addr16
cmovb
push
sub
leave
cmp
adc
cli
sub
inc
repz
aas
mov
inc
mov
and
pop
pop
in
mov
movsl
push
xor
xor
rcrl
adc
mov
push
mov
shll
imul
aaa
popa
ljmp
dec
adc
ja
fs
push
jmp
loop
sbb
inc
mov
test
inc
ret
or
sub
out
sbb
adc
cmpps
popa
repnz
dec
mov
adc
fistpll
ja
push
shrl
fnstcw
or
fildl
and
xorb
dec
add
repz
xor
aaa
adc
sbb
and
sbb
jns
sbb
jg
cmpsl
inc
inc
cmp
rcr
xchg
pusha
insl
pop
push
or
jle
les
and
fistl
dec
loop
inc
mov
les
cmp
je
sbb
sub
bnd
mov
pop
int
adc
jge
pushf
mov
push
out
and
push
test
push
cmp
xor
mov
xchg
ljmp
ret
push
jl
outsb
adc
mov
cmp
test
lods
mov
sub
xorb
add
nop
or
repnz
dec
and
push
shl
mov
inc
push
mov
add
push
push
loope
psubd
cwtl
add
sub
cmp
jg
fsubs
xor
lret
inc
mov
aaa
test
mov
sub
mov
push
jae
or
jg
inc
shll
ds
enter
in
mov
rcrl
daa
test
push
jge
xor
out
rcll
daa
pop
sub
mov
add
or
mov
xlat
xchg
icebp
jae
ret
aam
rorl
movsl
cmp
jo
adc
pop
daa
fdivl
inc
aam
icebp
mov
pop
cmp
xchg
sbb
sbb
mov
mov
sbb
add
sub
sub
sub
pop
inc
jae
cs
dec
sub
mov
repz
dec
and
push
jge
loopne
dec
std
mov
push
inc
xchg
fistl
mov
add
js
dec
push
loope
aam
pop
pop
xor
and
fcoml
cmp
mov
aam
pop
jg
xchg
pop
ja
mov
or
enter
pushw
sahf
mov
inc
out
int3
loop
xchg
mov
shrb
xchg
outsl
and
mov
adc
daa
repz
data16
insb
xor
mov
or
xchg
add
and
push
jns
add
pop
push
in
dec
gs
out
jno
inc
inc
das
sarl
or
push
sahf
push
adc
scas
mov
addr16
xchg
dec
jmp
xor
fsubrl
pushf
push
cmp
mov
xchg
dec
cmpsl
and
xor
push
lods
sub
in
xor
or
jmp
cld
jmp
das
psrlw
outsl
lahf
and
mov
pop
push
fbstp
inc
jb
sub
imul
push
jmp
xor
out
sahf
mov
xchg
fldenv
aas
adc
mov
je
lods
jnp
mov
add
test
jmp
loope
xor
repnz
mov
adc
mov
adc
lahf
dec
scas
push
sahf
mov
nop
sub
xor
add
fs
inc
pop
out
iret
test
bound
aas
push
inc
aaa
cmpsb
sub
shll
fisubrs
or
or
movsb
push
lea
fistl
js
or
inc
xchg
fbstp
mov
and
out
xchg
les
in
imul
jge
inc
jmp
lods
aam
test
lret
adc
sbb
insb
outsl
test
lds
adc
sahf
stc
and
nop
or
push
lds
xor
jp
and
sbb
imul
xchg
inc
mov
push
das
lock
pushf
adc
stos
cltd
push
xchg
inc
add
pop
cmpsl
inc
loope
movsl
sub
rcrb
out
dec
in
jnp
fs
sub
test
testb
mov
loop
lret
ret
icebp
inc
insl
mov
aas
nop
xor
cmc
or
shll
imul
mov
pop
cmc
cmp
ja
push
inc
or
pop
roll
icebp
cmp
jmp
and
rorb
sub
cvtps2pi
add
fists
push
inc
pop
cmp
call
and
fwait
add
loop
es
loopne
adc
push
dec
cmp
repz
rclb
and
mov
push
xor
xchg
push
in
sub
and
push
cmpsb
or
scas
jno,pt
jmp
or
mov
rclb
and
enter
adc
cmpsb
sbb
les
and
out
or
sub
mov
xchg
in
repnz
sub
inc
mov
mov
xchg
outsl
xor
fcomip
adc
pop
lods
shrl
lahf
xlat
lods
and
push
pop
std
nop
mov
lcall
scas
jecxz
fsub
roll
lcall
jb
bound
dec
xchg
aaa
test
out
and
daa
jbe
pusha
inc
cmp
xor
adc
aaa
es
ja
das
inc
ret
jbe
mov
xchg
jg
xor
aaa
pop
mov
cmp
mov
adc
imul
pop
add
cmp
lret
test
icebp
jae
or
stos
xlat
pop
int
push
cld
das
mov
mov
sbb
roll
cmp
or
inc
push
push
sbb
and
dec
inc
ret
sarl
hlt
push
sahf
inc
setno
inc
rcll
pop
and
sbb
sbb
subl
push
cli
sbb
and
fsubs
addr16
and
scas
jmp
push
adc
lcall
ss
mov
gs
aas
fdivrs
push
ljmp
mov
pop
mov
and
mov
and
nop
out
cmp
xor
es
xchg
das
ficoms
call
push
sub
stos
scas
mov
popl
pop
add
mov
or
sysenter
outsl
sub
or
push
cmp
test
call
mov
pop
cld
push
test
or
lods
lea
sub
adc
adc
mov
push
lods
xchg
or
cmpsl
outsl
nop
xlat
xchg
or
inc
orl
pop
xor
push
jle
mov
pop
lcall
fmull
jae
and
ret
repnz
xor
xlat
and
out
mov
shll
scas
and
xchg
ja
cs
or
pop
xor
mov
mov
cmp
push
sub
adc
pop
xor
adcl
gs
push
and
lcall
cs
hlt
in
dec
pop
loop
mov
popf
nop
fbld
popa
cmp
fbld
mov
fisubl
or
dec
daa
aas
xchg
pop
in
data16
shl
push
and
les
fnstcw
loop
icebp
or
pop
scas
enter
mov
addb
xorl
in
mov
gs
pop
dec
adc
sub
repnz
std
push
cmp
mov
fdivp
inc
aam
cmpsb
cmpsl
cwtl
outsb
jecxz
xchg
sub
testl
scas
fcoms
push
dec
and
cmpsl
mov
loop
dec
cmpsl
nop
idiv
mov
cmpsl
and
pop
or
xlat
pop
xor
ljmp
lock
pop
testb
jg
call
inc
iret
lcall
lock
enter
out
pop
jbe
int3
test
jmp
mov
xchg
mov
call
popf
mov
data16
and
dec
test
jg
imul
lds
inc
adc
mov
mov
inc
jnp
es
sti
mov
inc
mov
ss
inc
jl
sbb
inc
iret
shll
sub
movsl
lock
mov
cmpsb
push
adc
aam
push
xor
or
inc
int3
xchg
cmpsl
loopne
xchg
std
xchg
lcall
inc
mov
and
xchg
call
in
mov
and
mov
sub
out
mov
cli
repnz
and
and
jbe
jle
jge
popa
imul
adc
popa
mov
jnp
sub
dec
jbe
jnp
pop
ficoms
and
lock
xchg
das
mov
enter
popf
loope
and
fld
loope
jmp
pop
sub
cmp
aam
dec
sarb
mov
sbb
jmp
jge
addl
enter
insb
daa
test
adc
or
push
xchg
aaa
mov
pop
adc
notb
mov
sbb
pop
adc
dec
adc
or
xchg
pop
cmp
cmpsl
data16
daa
sub
jle
or
andl
push
inc
sbb
adc
or
dec
and
xor
test
movsb
sbb
adc
mov
sbb
sub
aaa
jp
sub
ja
adc
inc
nop
push
lods
in
mov
sbb
cmp
mov
test
out
push
icebp
enter
notl
jns
or
lea
les
mov
cmp
fildl
adc
mov
inc
push
dec
dec
aas
mov
adc
fwait
adc
fistpl
arpl
and
inc
imul
adc
mov
push
adc
push
mov
or
pop
loop
push
cmp
lcall
push
xchg
inc
cmpsl
dec
sbb
inc
inc
xorb
adc
inc
xchg
icebp
xchg
push
pop
pop
fadds
adc
aas
push
and
fs
and
ss
iret
iret
push
pop
out
clc
loop
adc
pop
and
inc
sti
sub
cmpsl
push
xchg
or
adc
jno
or
lea
pop
fisubs
cmp
push
adc
lret
adc
ret
inc
mov
fildl
jnp
cmp
sub
inc
mov
insb
jmp
inc
fwait
int
mov
jae
ret
cld
jae
int3
jno
push
sbb
test
daa
mov
test
inc
ljmp
gs
and
imull
in
and
dec
testl
ret
mov
adc
adc
adc
psubusw
or
lea
mov
pop
adc
and
inc
jae
jecxz
pop
arpl
push
in
outsb
rcrb
jg
jns
mov
test
pop
jb
adc
jecxz
nop
inc
mov
iret
xor
adc
push
adc
pop
inc
daa
jbe
mov
inc
push
inc
push
mov
dec
mov
cmovb
xorl
rcll
inc
xchg
enter
insb
mov
adc
sbb
dec
adc
mov
adc
and
bound
sarb
jl
inc
aaa
enter
insl
out
adc
sbb
outsl
push
and
fs
daa
pop
es
outsl
cmp
sbb
xor
jg
repz
adc
and
adc
push
dec
inc
fadds
adc
mov
push
mov
push
adc
mov
fldenv
push
xchg
cmp
lea
mov
out
shlb
dec
pop
bound
adc
push
repnz
xor
mov
dec
sarl
test
adc
sbb
or
mov
movsb
rclb
or
xor
dec
adc
dec
pop
jno
ret
push
sbb
test
mov
nop
lret
mov
mov
mov
lret
lret
adc
lret
push
notl
xchg
iret
jae
hlt
pushf
mov
adc
outsl
cmpsl
adc
sti
pop
xchg
xor
ss
scas
and
mull
ja
inc
mov
lea
and
mov
mov
test
sti
pop
mov
push
out
cwtl
in
sub
sahf
and
xor
inc
aaa
daa
pop
pop
xchg
xchg
mov
inc
push
mov
das
cld
xor
xor
fistps
cmp
push
inc
sti
dec
outsl
mov
out
js
dec
inc
push
iret
fidivrl
pop
mov
xchg
inc
adc
pop
jnp
mov
jno
push
sbb
cltd
adc
or
test
aas
outsb
jno
pop
cmp
addr16
inc
sub
add
repz
pop
and
or
fsubrs
jae
adc
adc
scas
ss
pop
mov
and
push
mov
test
insb
cmp
jg
inc
pop
and
stos
cwtl
in
sub
test
icebp
aad
notl
sbb
inc
push
adc
enter
or
push
jecxz
xchg
pushl
jl
or
add
negb
adc
jecxz
add
adc
insl
nop
daa
into
sub
les
insl
cmp
sbbl
scas
adc
and
sub
sub
adc
and
aas
and
imul
inc
inc
arpl
inc
subl
adc
mov
pop
flds
mov
lret
adcl
les
jno
adc
adc
adc
cmp
lret
jp
inc
add
cmp
mov
pop
adc
jbe
push
jg
adc
test
xchg
mov
jns
pop
cmp
and
xor
pop
pop
jecxz
outsl
push
lock
mov
out
and
insb
cmpsl
test
fists
mov
add
mov
cmp
mov
test
adc
pop
inc
adc
or
outsl
insb
loopne
pusha
sbb
dec
mov
mov
inc
cmpsl
adc
adc
or
add
xor
pop
decl
nop
jo
sbbb
sbb
movsb
hlt
inc
stos
cmp
lret
mov
cmpsb
jp
jecxz
incl
mov
push
testl
or
iret
adc
and
inc
and
pop
test
sub
inc
fisttpl
mov
push
cli
adc
pop
aas
test
adc
daa
adc
out
push
aas
or
repz
sub
test
clc
xor
jg
or
loop
adc
pop
and
hlt
mov
lea
cmpsl
pop
pop
leave
fbld
fadds
xchg
fbld
fisttpl
fbld
fidivrs
push
mov
add
sbb
xchg
push
add
mov
rcrl
xlat
mov
cs
xor
je
loope
or
ja
mov
xor
sbb
les
mov
popa
sub
push
sarl
push
mov
nop
lods
and
pop
xchg
das
out
rorl
pop
or
pushf
xchg
pusha
mulb
test
and
movsb
jno
inc
fldcw
call
mov
repz
push
pop
push
push
xchg
push
mov
addb
arpl
divl
push
adc
scas
dec
pusha
inc
out
dec
mov
aas
push
push
fcmovb
cmp
push
ret
jae
sbb
icebp
movsb
data16
test
cmp
inc
shlb
xchg
jge
rcll
mov
jmp
lahf
and
lret
das
faddl
mov
lea
fcmovbe
inc
sti
sbb
push
cmp
loop
fcoms
push
hlt
xor
sub
and
nop
andl
or
andl
cmpsl
les
dec
fdivp
inc
sub
es
mov
pop
popa
fcmovnu
inc
stos
sahf
xor
mov
or
adc
push
shll
push
rcll
dec
icebp
mov
add
and
inc
cmpsl
jno
ja
stos
sub
lahf
mov
push
mov
sahf
add
sbbl
lods
test
pop
movhlps
pop
clc
loopne
cmp
out
xchg
cmp
xchg
cmp
dec
shrb
push
or
in
and
inc
out
mov
push
and
mov
xor
dec
leave
cmc
dec
jno
fwait
adc
or
int3
in
cwtl
pusha
outsl
sub
xor
fwait
push
xchg
push
cmp
fnstenv
and
mov
nop
dec
mov
dec
test
jne
mov
imul
inc
pop
jno
test
ret
adc
addb
mov
lret
or
push
lret
fcom
aas
test
notb
cmova
and
push
push
inc
push
inc
mov
mov
push
xchg
addr16
bound
cmpsl
sbb
and
out
add
mov
stc
or
add
sbb
add
inc
loop
adc
adc
leave
aaa
sub
push
dec
daa
test
ds
inc
mov
adc
addr16
loopne
inc
sub
jmp
enter
loopne
xchg
ljmp
imul
insb
popa
dec
rclb
push
imul
icebp
adc
mov
mov
sub
or
pop
outsb
xchg
or
in
xor
ljmp
lods
add
cmpsl
js
and
or
push
mov
or
and
loopne
pop
shll
sub
mov
push
mov
punpcklbw
rclb
movsl
js
rolb
sbb
xchg
xchg
jle
mov
stos
rcrb
pop
aas
repnz
stc
outsb
lds
pop
call
jmp
and
popf
push
jbe
mov
lret
add
daa
xchg
popf
daa
push
xlat
fistpll
xlat
scas
or
leave
jno
dec
in
ficoml
jg
adc
cmc
jmp
xlat
pop
mov
imul
aas
mov
dec
repz
sub
push
or
arpl
dec
dec
sbbb
iret
addr16
mov
dec
push
xor
push
adc
push
mov
adc
imul
adc
outsl
stos
pop
enter
imul
push
adc
or
push
pop
jne
outsb
add
sbb
and
andb
and
xor
push
fs
push
xchg
addr16
adc
sbb
xchg
push
push
movsb
cmp
out
pop
sbb
cmpsb
stos
xchg
int3
lods
popa
xchg
xchg
add
push
cs
sub
es
aam
repnz
and
into
aas
sarb
cmp
push
movsb
xchg
inc
lahf
xchg
addr16
xor
dec
mov
push
movsl
cld
loop
dec
out
cwtl
outsb
cmpsb
sbb
push
lret
and
adc
fwait
cmpsl
fisubrl
dec
sub
or
dec
das
mov
mov
push
pushf
aam
inc
sub
sarb
nop
or
in
fildl
lcall
inc
or
dec
sub
mov
xor
mov
and
ffreep
sub
xor
mov
ficoml
adc
mov
adc
dec
xchg
les
fidivs
in
or
jle
out
push
jmp
sbb
fwait
jmp
mov
xchg
lret
and
sbb
lea
mov
dec
push
mov
push
cmp
pop
jg
sti
sub
or
sub
into
rclb
pop
ljmp
inc
cmp
add
hlt
or
push
push
ljmp
jge
incb
pusha
out
inc
sbb
mov
xor
sbb
pop
and
or
mov
sarl
sub
or
lcall
ja
std
cltd
xlat
push
pop
lods
lret
insb
jg
cmp
push
adc
inc
ja
xchg
shll
mov
inc
lret
dec
pop
cwtl
or
cwtl
sbb
pop
cld
in
das
lret
xchg
inc
dec
out
cmp
adc
out
lahf
xchg
jg
cmp
cmp
aaa
or
shll
dec
pusha
mov
adc
aam
jecxz
jle
int
jmp
xor
sarl
sti
or
mov
pop
push
lcall
jnp
lret
daa
lcall
or
jae
pop
les
push
loop
aaa
adc
hlt
jno
jnp
cmp
ljmp
push
mov
add
push
lea
pop
dec
mov
push
pop
push
mov
in
adc
leave
sub
stos
adc
cltd
add
push
pusha
aas
mov
lahf
push
sub
pop
arpl
push
sub
mov
jb
adc
dec
roll
das
int
test
xchg
stc
popa
mov
sub
push
pop
or
daa
pushf
push
xchg
fcmovnbe
cmpsl
jns
lret
jge
pop
and
shl
fcmovnbe
adc
push
pushw
mov
inc
mov
mov
dec
sub
dec
mov
shrb
pop
inc
or
jae
mov
xlat
inc
fwait
bound
pop
pop
adc
and
sti
push
mov
pop
sahf
cmp
out
lcall
jno
pop
inc
sub
repz
cwtl
popa
xlat
shlb
sbb
cmp
inc
daa
pop
outsl
jmp
jmp
and
push
outsl
shlb
adc
fiaddl
fucomi
enter
xlat
enter
cmc
sub
arpl
and
fcomps
rcl
and
loope
mov
jnp
mov
inc
lcall
mov
pop
sub
sbb
push
ss
test
stos
ja
cwtl
into
lock
lds
fidivs
xor
pop
inc
or
daa
inc
std
imul
sbb
xchg
push
fimuls
pop
loop
sub
inc
fwait
stos
dec
and
adc
mov
shl
test
adc
jecxz
sub
idivb
lcall
cltd
push
jae
jg
sub
lahf
ds
adc
and
lcall
out
push
add
fscale
pop
ficoml
mov
jmp
out
nop
mov
fidivl
out
push
int3
adc
adc
push
mov
and
leave
lea
movsl
shll
add
imul
hlt
loope
fimull
lcall
mull
aad
mov
lods
dec
mov
jo
mov
xor
pop
testl
jg
movsb
xor
xor
fdivs
repnz
cli
cmpsl
scas
xchg
test
push
mov
rcl
sti
xchg
pushf
loop
fdivr
ss
shlb
cli
fwait
pop
xor
jmp
jns
adc
cmp
lods
js
pop
pop
add
inc
dec
lret
mov
dec
int
push
lods
scas
cmp
mov
sbb
pop
xor
test
ficoml
adc
push
movsb
push
cmp
movsl
and
ret
cmp
mov
test
lcall
gs
addr16
add
adc
or
or
xor
nop
xchg
sub
test
ret
cmp
sbb
jns
fists
fsubr
inc
inc
fsubs
stos
fxch
jge
daa
inc
xlat
xchg
push
daa
mov
aaa
jle
push
lock
stc
test
or
mov
inc
cmp
testl
xor
jb
and
dec
and
inc
and
xor
jo
aaa
jge
and
sbb
adc
inc
add
lahf
pop
cmc
push
js
mov
jno
jns
lahf
xlat
sub
xchg
lock
and
imul
sub
les
push
sbb
or
push
je
sub
jp
std
adc
add
dec
xchg
es
sbb
push
sub
xor
es
aas
pop
and
and
daa
sti
cmpsb
bound
aad
pop
dec
jle
add
movntps
and
shrl
pop
imul
adc
xor
testl
sbbl
dec
sub
adc
sahf
movsl
dec
xor
dec
or
xor
or
mov
sub
fs
pop
sbb
or
imul
aad
mov
ds
inc
cltd
scas
movsl
outsl
add
or
adc
daa
jecxz
adc
or
push
adc
mov
fs
cmp
neg
sub
sbb
and
mov
fbld
daa
jnp
inc
pop
cmp
mov
popa
fsubrs
sub
adc
dec
and
push
popa
clc
cmp
lahf
adc
pop
test
cld
mov
data16
cmpsl
push
cmpsb
mov
nop
testl
push
testb
clc
xchg
and
or
int3
and
icebp
sub
sbb
sub
or
xchg
push
daa
enter
inc
scas
fbld
loop
or
jns
cli
clc
data16
adc
sbb
pop
test
dec
pop
mov
les
popa
adc
aas
inc
scas
stos
and
or
pop
shr
xchg
repz
or
or
and
punpcklbw
sub
lods
push
xchg
push
pusha
xor
movsb
or
inc
popa
pop
cmp
jne
push
sub
sub
push
lea
sub
jae
push
xchg
mov
and
pop
shrb
dec
inc
add
cmpb
pop
adc
adc
mov
inc
jae
dec
pop
jne
fwait
sub
pushf
sbb
inc
pop
or
mov
mov
shrb
push
inc
out
jno
pop
adc
fists
pop
mov
stos
and
adc
sti
fld
out
or
insb
dec
mov
iret
ja
movb
int
sub
movsl
bnd
mov
inc
js
fwait
sub
sbb
jne
cltd
movsl
pop
xor
mov
and
je
mov
cmp
and
int3
xchg
mov
sarl
inc
mov
and
sub
insl
xchg
daa
pop
iret
in
adcb
lea
popf
sub
cmpsl
inc
std
adc
jae
push
mov
inc
insb
sbb
movsl
cs
pop
ret
sub
or
sti
stos
fdivl
or
daa
pop
shrb
pop
mov
loope
adc
lret
negl
and
pusha
pop
testl
cmp
fistl
aam
mov
jae
mov
sub
fdiv
mov
sbb
push
clc
mov
ds
xlat
lret
ficomps
or
pop
xor
rolb
leave
shll
adc
js
xchg
cmp
or
sub
sub
or
pop
int
jbe
stos
mov
mov
nop
pushf
inc
fnstcw
fcmovu
jb
jno
inc
and
cwtl
lock
call
out
mov
repz
adc
or
push
push
fdivrp
pop
or
cwtl
xlat
in
mov
cwtd
jg
cmpsl
ja
addr16
in
and
cmp
aaa
test
and
ret
cmp
aaa
mov
out
in
out
push
pop
cwtl
push
xor
cmp
cmpsl
mov
mov
jmp
xchg
inc
jmp
nop
mulb
popa
imul
iret
or
jnp
cmpsb
pop
xor
mov
out
and
into
test
jecxz
ss
add
mov
fcmovnbe
fdivrs
test
mov
adc
mov
fcomip
push
dec
pop
mov
xor
mov
arpl
iret
and
into
and
cld
es
xchg
or
and
movsb
out
decl
imul
imull
bound
dec
sub
and
inc
dec
push
dec
and
lcall
or
mov
xor
push
stos
add
xor
push
lcall
xchg
inc
sub
pop
pop
movaps
xor
adc
inc
imull
jg
mov
xchg
push
and
adc
or
les
mov
shlb
cmp
aas
mov
or
mov
adc
mov
sbb
or
inc
imul
cmova
aaa
inc
sbb
test
inc
push
push
or
xor
test
inc
subl
mov
inc
jecxz
ret
iret
xor
sbb
jne
outsl
and
push
adc
pop
cli
dec
in
xchg
fbld
push
and
out
lea
movsl
or
sbb
jecxz
enter
push
adc
mov
fistpl
or
jg
into
jns
lret
add
push
std
nop
testl
divb
test
xchg
push
insb
andb
sti
pop
shlb
lahf
xor
pop
inc
or
push
js
pushf
or
sbb
iret
lock
shr
or
lahf
xor
insb
call
test
inc
pushf
outsl
negb
aaa
sahf
dec
and
iret
dec
pop
jb
xchg
mov
in
hlt
dec
adc
xchg
or
or
es
mov
rep
mov
pusha
dec
iret
jge
das
sub
icebp
or
inc
movl
adc
pop
outsb
inc
pop
daa
add
or
daa
inc
cmc
and
daa
sub
dec
push
outsb
jmp
gs
adc
jno
sbb
inc
and
sbb
ljmp
jmp
push
rorb
mov
sbb
adc
pop
sub
inc
ret
adc
sbb
movsl
or
and
movsb
mov
mov
push
sub
paddsb
xchg
and
cmpsl
push
enter
fwait
mov
sbb
inc
jae
sbb
pop
inc
xchg
js
jb
jmp
inc
subb
cmp
les
sub
lret
aad
rclb
icebp
ds
mov
ds
dec
popf
mov
or
cltd
nop
stc
mov
les
mov
andl
push
dec
es
or
aas
push
in
inc
sbb
sbb
xor
adc
and
and
inc
in
xor
popf
data16
les
jb
adc
add
rcrb
push
imull
rorl
xchg
sbb
xlat
js
jl
bound
out
iret
xlat
out
lods
jns
pop
fwait
push
jmp
mov
subb
dec
and
pop
xor
inc
and
sbb
cwtl
fbstp
cmp
jno
mov
xor
cmovs
or
test
les
shr
mov
and
dec
test
push
push
dec
xchg
pop
inc
aam
in
adc
jmp
push
js
or
push
daa
jne
xchg
repz
sbb
push
js
mov
inc
pop
jb
fwait
mov
lcall
jae
adc
push
insl
ljmp
jg
pushf
jb
xor
dec
pop
dec
pop
inc
and
in
pop
and
icebp
xchg
add
sbb
test
pop
wrmsr
or
mov
cmpsl
xchg
dec
fbld
and
xchg
std
inc
adc
ficomps
or
add
aaa
cmpsb
int
adc
pop
push
cmpsb
insb
adc
insb
cmpsl
push
hlt
and
out
push
test
mov
add
cmpsb
push
sbb
or
daa
inc
cli
lret
rorb
sbb
cmp
pop
in
stos
lock
and
pop
mov
repz
imul
cmove
push
push
adc
fldcw
lcall
movsb
shl
push
jg
and
mov
mov
xchg
lea
cltd
insb
push
ja
je
inc
jns
bound
test
stos
jno
pop
data16
or
aas
sub
jge
push
hlt
mov
cmc
fs
jmp
aad
sti
sbb
sbb
sub
fildll
xor
repz
adc
and
xchg
sub
mov
dec
push
jbe
mov
jae
push
inc
pop
sub
sub
dec
in
adc
cltd
mov
out
jb
pop
push
js
mov
inc
mov
call
lock
pcmpgtw
ljmp
pop
mov
ss
sub
mov
fisttpll
and
mov
roll
and
pop
or
repz
daa
and
adc
jge
inc
sti
adc
call
mov
fcmovnu
sub
jbe
push
or
and
jmp
pusha
out
or
or
pop
pop
inc
cs
subb
out
jecxz
movsl
ret
sub
pop
mov
jge
pop
sub
daa
mov
sti
push
test
pop
jg
inc
imul
adc
dec
cwtl
mov
mov
repz
xchg
not
xlat
lock
leave
fbld
push
and
out
movsl
loop
ja
addb
mov
inc
test
mov
sbb
shll
mov
fidivrl
pop
sub
mov
gs
mov
cmc
stos
adc
insb
movsb
ljmp
sub
jne
xchg
sti
in
not
fnstsw
adc
xlat
xchg
or
adc
stos
stc
rorl
inc
and
ljmp
mov
shll
cmp
pop
loop
stos
and
inc
xchg
xor
jns
das
inc
bound
sub
mulb
inc
loop
pusha
popf
dec
fwait
jno
mov
sti
and
test
dec
lahf
inc
andb
push
mov
or
fisttps
aas
xlat
rol
push
push
sub
sub
xchg
fdiv
lds
ret
rcl
push
ds
std
mov
popa
xchg
sbb
lods
xor
jne
push
iret
and
insl
or
push
mov
adc
xchg
in
stc
mov
ljmp
push
mov
stos
inc
lcall
in
xor
cld
fs
test
iret
es
ljmp
movsb
movaps
stos
or
and
popf
mull
mov
cmp
enter
arpl
sbb
lods
lock
cmp
test
shlb
scas
cmp
adc
xchg
push
add
pop
data16
sub
xchg
ficoml
xchg
aaa
movsl
xchg
std
and
push
out
cmp
dec
cwtl
and
fcompl
lods
gs
add
ror
dec
xchg
imul
les
mov
pop
jb
je
jbe
js
jp
jl
jle
pop
divb
sub
stos
sub
mov
add
mov
mov
mul
in
fs
mulb
adc
sub
mov
int
lret
jp
call
movl
pushf
mull
pop
dec
enter
popa
sub
push
and
inc
out
lret
arpl
int
mov
sub
cmp
inc
inc
ds
dec
push
fucom
ss
cmp
inc
fsub
ss
lds
mov
daa
aaa
sbb
imul
ror
mov
fmull
sub
and
mov
aaa
jo
movl
pop
and
rcl
aad
cmp
les
das
adc
cs
cmp
mov
test
jo
push
mov
push
add
sbb
ds
mov
pop
nop
and
ds
inc
sbb
mov
inc
imul
js
mov
push
jae
jle
xchg
dec
push
aad
push
dec
jp
clc
cwtl
jp
or
inc
dec
jo
lds
mov
sti
add
and
or
pop
dec
lock
sti
and
or
sub
adc
out
xchg
pop
lret
sahf
cmc
jno
lahf
hlt
les
and
or
mov
or
mov
push
std
cli
jg
mov
in
das
inc
xchg
sti
ss
adc
mov
fucomi
shrb
adc
loop
adc
mov
mov
and
in
adc
pop
roll
adc
sub
mov
mov
leave
mov
sub
sub
dec
mov
pop
push
pop
jle
sbb
enter
dec
fwait
adc
mov
cmp
mov
sbb
sub
inc
repz
push
mov
mov
iret
cwtl
outsb
jmp
and
adc
pop
xor
sbbb
add
push
and
call
stos
sub
mov
into
xlat
pop
imul
das
stos
lret
aad
leave
and
push
and
jle
enter
fisubl
or
ret
punpckhwd
sbb
lret
and
push
fsubrl
outsb
sbb
sbb
addr16
adc
icebp
and
cltd
push
lock
xor
aas
sbb
lds
inc
push
adc
and
fimull
cmp
and
jmp
test
inc
fistpll
ret
pop
cmp
movsl
das
cmpsl
aad
mov
or
notb
xchg
xlat
in
push
xlat
jmp
nop
std
cmpsl
rorl
outsl
lods
jg
stos
mov
add
ficoml
lods
pop
mov
shlb
sbb
ljmp
lcall
xchg
mov
jb
cmp
xor
shrl
lcall
jne
fldl
jnp
push
out
adc
xor
outsl
xor
imul
ret
jmp
ret
jnp
mov
and
mov
cs
jg
loope
mov
lahf
test
popf
faddp
vpshlq
jp
and
jmp
push
std
in
mov
inc
rol
inc
out
mov
lahf
out
push
jle
test
bound
gs
push
jmp
popl
or
ljmp
ja
test
sbb
push
dec
sbb
jo
mov
ret
shrb
rcll
sub
inc
adc
nop
add
inc
jecxz
jo
pop
es
stos
aaa
inc
stos
cmp
xchg
pop
mov
mov
stos
cmp
adc
test
clc
enter
js
fwait
cmpsl
lds
or
and
shll
push
bound
dec
pop
sub
jle
les
dec
ficoml
cmovle
jp
pop
das
dec
adc
dec
mov
shrl
aaa
mov
rorl
lcall
sbb
jg
mov
and
ljmp
push
int3
addr16
jne
repnz
lds
adc
cmc
jbe
push
xchg
or
enter
and
and
dec
xor
inc
imul
or
rcl
jge
enter
mov
pop
lahf
cmpsb
mov
and
mov
cld
or
cmp
inc
push
inc
mov
out
jae
mov
mov
repz
add
or
mov
std
mov
lods
das
push
sbb
xchg
loop
add
push
jne
add
pop
pop
mov
or
and
pop
cmp
nop
or
dec
xor
xchg
scas
lahf
push
es
pop
pop
imul
and
daa
jge
add
inc
ds
movsl
push
pushf
je
mov
aas
adc
les
dec
rclb
or
pop
ljmp
nop
xchg
inc
sbb
inc
mov
sbb
aas
out
xor
xchg
xlat
ss
mov
xor
pop
and
and
rcrl
test
jo
pop
jge
xchg
jmp
mov
jnp
es
movsb
push
fs
xor
push
dec
sub
xchg
repz
insl
ja
cmp
push
dec
mov
adc
xchg
sbb
dec
rclb
push
loope
out
clc
gs
push
adc
or
xchg
data16
cltd
pop
cmpsb
push
or
jbe
pop
sub
jle
insl
scas
mov
iret
clc
push
adc
lret
dec
push
xor
dec
pop
pop
std
aaa
clc
xchg
out
xchg
adc
push
adc
stos
or
shrb
mov
jnp
iret
add
in
sahf
push
sahf
inc
cmp
cmp
or
mov
fcoml
les
inc
sub
mov
addr16
xchg
aam
push
inc
aaa
rol
fisubrl
out
pop
push
fistpll
push
pushf
clc
je
insl
jns
xchg
sub
inc
test
out
sbb
in
out
cltd
inc
cmp
adc
out
push
adc
bound
mov
pop
xchg
std
aad
aas
pop
pop
shll
sub
js
out
lcall
test
xchg
cmpsl
jg
mov
or
and
aad
cmp
rcrl
sub
and
or
iret
sbb
adc
pop
and
ljmp
pop
mov
fldt
and
sbb
or
sbb
push
mov
sub
rclb
push
and
adc
faddl
scas
sbbb
sub
jne
mov
daa
stc
enter
cwtl
xor
aam
inc
fistps
iret
push
sub
and
scas
adc
dec
lods
das
cwtl
hlt
incl
mov
mov
adc
ja
xchg
scas
xlat
jnp
gs
ja
in
addb
stc
repnz
pop
movsl
pop
daa
jb
inc
xor
lahf
test
jmp
mov
jg
xor
mov
push
loop
repz
or
cmp
dec
dec
sti
sub
cmp
jmp
into
inc
es
pop
sbb
cs
call
mov
pop
jb
mov
jecxz
mov
insb
test
lret
xor
xor
lcallw
imul
pop
arpl
std
sub
cld
sub
testl
adc
adc
shlb
xlat
and
js
adc
test
test
std
add
dec
sub
frstor
arpl
dec
sarb
daa
daa
arpl
xchg
dec
aad
dec
mov
xor
ret
xchg
icebp
inc
cs
push
out
unpcklps
mov
pusha
pop
sbb
mov
dec
gs
out
fstps
pushf
push
cli
ja
lods
cmp
lahf
push
lcall
jmp
cmp
fwait
jg
pop
cmp
cmp
aam
bound
dec
dec
inc
jbe
mov
xor
or
mov
xchg
xchg
xchg
xacquire
jae
push
push
and
sub
pop
sbb
test
cmp
jmp
ja
jnp
mov
adc
lock
jecxz
mov
ret
mov
dec
mul
jns
out
or
sub
and
xchg
jg
icebp
stos
inc
push
and
aas
imul
dec
call
mov
insb
mov
scas
imul
mov
and
xor
dec
jl
or
cmpsb
jo
xchg
or
cmc
rorl
mov
stc
sub
shlb
popa
inc
aad
sti
jg
popa
xchg
sti
sub
aas
xchg
stos
pop
insl
jo
mov
fidivs
sarl
icebp
aas
bound
pop
pop
sbb
dec
add
xchg
pop
movlps
dec
xchg
dec
xlat
fwait
mov
dec
xchg
stos
fs
or
test
shr
ret
cwtl
adc
push
daa
adc
pop
cmc
adc
shlb
loopne
inc
aam
lret
dec
imul
aad
div
fidivrs
sub
push
and
lret
pop
imul
mov
xor
fwait
xor
lods
mov
test
adc
je
mov
int3
xor
pop
lods
test
lods
mov
pop
xor
or
fcmovnbe
dec
mov
xor
pop
or
stos
fsqrt
imul
push
xor
lods
push
xchg
push
jle
cmp
cmp
inc
cmp
pop
push
inc
adc
movaps
or
sub
call
cmc
push
inc
mov
mov
add
jecxz
mov
jmp
jl
and
dec
arpl
jp
sbb
jl
xchg
test
or
aas
cmp
scas
sarb
or
xchg
xor
pop
mov
loop
and
adc
sbb
dec
pop
push
cmp
push
mov
sub
dec
sbb
or
dec
movsl
add
lods
adc
jp
out
jmp
inc
arpl
jle
lcall
je
inc
lods
push
jmp
int
push
sbb
xchg
sbb
pusha
pop
lds
mov
sbb
pop
imul
xchg
sarl
and
aas
into
mov
outsb
inc
in
imul
pop
adc
adc
sub
push
jae
jge
call
pop
mov
fbstp
fcmovnbe
push
fcmovnbe
xchg
pop
stos
mov
sub
push
mov
inc
inc
xchg
leave
or
jne
jg
mov
cmp
adc
test
test
adc
pop
fmull
inc
ss
in
int3
mov
sub
ret
jns
and
les
or
inc
sub
cltd
out
mov
or
out
mov
or
dec
dec
xor
xchg
dec
and
fs
repnz
mov
mov
sub
aaa
sahf
jmp
pusha
lcall
sbb
dec
cmpsb
pop
add
and
pop
ss
pop
lea
aas
repz
mov
test
xchg
cli
sub
repz
iret
mov
pop
out
gs
mov
jg
fmul
jbe
mov
dec
mov
mov
or
insl
icebp
mov
dec
bound
shl
inc
inc
rorl
pop
lret
mov
inc
sub
pop
push
add
dec
xor
and
sbb
out
xchg
or
inc
sbb
mov
je
push
lcall
sub
jl
testb
push
sub
push
inc
call
dec
imulb
mov
aad
jp
mov
loop
push
push
cmp
inc
pop
mov
adc
pop
or
outsb
out
push
cmpsl
mov
or
push
jl
scas
insl
adc
sbb
rorb
jo
jnp
xchg
sub
push
dec
stos
sarb
and
rorb
dec
push
cmp
sbb
add
xor
out
mov
mov
or
cmp
push
mov
sub
dec
sub
movsb
cwtl
pop
popa
cmp
or
pop
jg
mov
mov
cmp
addr16
test
mov
push
inc
pop
lret
lcall
push
ficoms
sbb
lods
add
and
xchg
jns
leave
and
xor
xor
outsb
test
ret
lret
lcall
in
mov
ss
xor
sti
mov
push
mov
fisubrl
fidivrs
pop
or
mov
mov
jge
push
cld
fwait
stos
push
cmp
push
mov
push
push
out
test
jb
ds
add
sub
sub
dec
and
hlt
xor
mov
cs
pop
inc
inc
lret
cld
pop
xor
sbb
test
fisubl
mov
jecxz
or
dec
aaa
jns
cmp
xchg
outsb
adc
xchg
cmp
aas
jns
out
imul
fcoms
pop
out
jne
out
jecxz
dec
mov
test
jp
jnp
iret
bound
scas
xor
cltd
xchg
xor
jne
lcall
adc
sub
fsts
lods
mov
or
aad
jno
or
out
fsubs
fldenv
pop
out
push
push
rsqrtps
xor
pop
jl
jb
inc
pop
aad
stos
fiadds
dec
or
push
dec
xchg
scas
insl
shl
xor
shll
sub
lea
shll
xor
cmpsb
mov
dec
adc
stos
or
add
adc
adc
jmp
loop
sbb
cmp
jno
mov
adc
xor
aam
mov
sbb
cltd
adc
pop
movsb
dec
mov
and
ljmp
pushf
adc
mov
jg,pn
push
xchg
mov
out
adc
in
inc
inc
jmp
popf
addr16
imul
mov
pop
inc
jecxz
test
adc
movsb
push
sahf
pop
mov
xor
mull
mov
cmp
cmpsl
pop
or
push
fs
push
sub
gs
inc
sti
inc
inc
adc
cld
pop
lea
jne
sub
inc
call
pusha
call
xchg
test
lcall
pop
in
in
or
fidivs
outsl
rclb
inc
push
mov
sbb
mov
inc
dec
dec
loope
mov
sub
add
adc
dec
paddsb
mov
popa
les
sbb
lret
data16
push
arpl
sbb
cs
pop
sbb
addr16
cltd
dec
mov
aaa
ds
mov
inc
xchg
arpl
adc
mov
jnp
push
lahf
fsts
outsl
mov
xor
daa
out
xchg
sub
rep
sbb
push
xchg
sbb
jns
push
xor
cmpsl
imul
iret
leave
push
cmp
xor
or
loopne
mov
inc
call
push
push
repnz
xchg
mov
and
arpl
test
cmpsl
cmp
jmp
and
push
daa
imulb
push
xor
and
jno
sub
inc
lret
movsl
insb
and
or
movsb
push
xor
and
cmp
jmp
dec
xor
or
and
and
cld
cmpsl
repnz
push
mov
jne
leave
aas
jle
xor
aas
sub
lods
rcll
daa
inc
fsubs
sbb
mov
push
push
push
dec
packssdw
pop
sarb
es
mov
mov
push
mov
or
pop
sbb
xor
xchg
xchg
cmp
lea
inc
mov
inc
mov
mov
lods
enter
xor
inc
jmp
sub
mov
sti
lea
pop
sbb
cmp
pop
inc
aam
es
jnp
pop
push
push
pop
loop
xchg
push
repnz
inc
adc
roll
or
push
adc
inc
push
xchg
xchg
push
and
push
movsl
je
aas
cmp
xor
xor
pop
call
cmp
test
mov
imul
xor
dec
mov
clc
rorb
mov
leave
enter
pop
fucomip
or
insb
xor
sub
in
cmp
testl
imul
mov
stc
icebp
lahf
adc
sub
dec
mov
mov
dec
cli
and
mov
xor
mov
mov
insb
arpl
pop
dec
or
push
js
add
in
push
enterw
les
jb
mov
dec
enter
movsl
jae
mov
inc
js
popa
mov
sub
and
test
inc
sti
dec
jge,pn
inc
push
cmp
gs
bound
inc
test
and
pop
adc
dec
int
lds
xchg
inc
lds
push
popf
mov
pop
xor
mov
dec
aas
sub
adc
xchg
add
xchg
and
ds
je
push
popf
dec
cmp
inc
mov
loope
and
test
fdivrs
and
cmp
adc
xchg
mov
xchg
popl
fidivrs
movsl
mov
pop
pop
dec
or
dec
push
scas
mov
add
xor
sbb
ds
shrb
jl
lock
push
test
xchg
fcoml
fimull
fildl
dec
out
out
and
push
pop
movsb
imul
fcoml
loopne
loope
fimull
test
das
adc
lods
leave
push
or
sbb
cmp
dec
repnz
flds
and
icebp
sub
jle
push
lcall
out
pop
pop
scas
cld
iret
inc
push
lds
push
jae
jl
arpl
es
inc
ret
push
push
pop
gs
xchg
cmp
push
in
dec
in
fistl
fildll
xchg
mov
test
js
pop
movsb
xor
fistl
leave
cmp
adc
lcall
sbb
mov
cs
push
add
sbb
lret
mov
loop
jmp
arpl
push
pop
cmpsl
lret
ret
sbb
sbb
jnp
loope
in
jge
das
or
pop
in
push
insb
test
das
sub
lahf
insb
aas
cltd
loopne
cmp
push
push
daa
dec
push
sub
push
in
sbbb
loop
push
jns
pop
push
pop
std
jmp
test
add
pop
pop
push
jbe
icebp
sbb
xchg
mov
arpl
mov
fdivrl
aad
inc
hlt
or
movsl
sbb
mov
or
push
jg
and
lods
sbb
xchg
mov
out
outsb
std
loope
std
test
mov
notb
add
push
jle
push
push
push
hlt
sbb
insl
loope
push
std
mov
xchg
adc
jg
test
pop
push
negl
sub
aaa
push
jg
add
xchg
push
dec
jmp
cmp
sub
fcomps
jp
push
test
ja
inc
loope
cmp
xor
sbb
mov
adc
movsb
and
pop
or
add
test
adc
push
out
and
jecxz
lds
movsb
adc
or
inc
pop
movsl
mov
push
adc
xchg
fsubr
imul
pop
lds
insl
cmp
xor
ja
xchg
and
pop
inc
sbb
add
jnp
aam
or
mov
dec
pop
cmc
int
add
inc
shrd
push
and
cmp
xor
pop
insl
inc
sbb
cmp
xchg
cmp
repnz
popw
and
adc
mov
mov
mov
mov
and
imulb
lea
pop
sub
sub
nop
xchg
sbb
aas
outsb
out
push
push
jmp
push
push
mov
outsl
inc
out
iret
outsb
imul
out
les
xor
pop
adc
repnz
fdiv
xor
or
xor
push
cltd
jbe
or
inc
mov
adc
mov
repnz
xchg
xchg
hlt
inc
xchg
leave
add
sbb
pop
cmp
repz
dec
mov
adc
jmp
inc
push
mov
insl
insl
mov
iret
inc
cmpsb
and
sbbl
cld
cmp
pop
lahf
mov
mov
add
sub
mov
inc
ret
dec
sub
sbb
cmp
sub
pusha
jmp
inc
adc
insb
jbe
mov
push
inc
movaps
sub
mov
dec
test
ja
adc
ljmp
stos
dec
xlat
dec
xchg
pop
lea
pop
insb
mov
push
mov
and
push
js
lea
or
push
js
mov
mov
es
inc
out
adc
in
adc
mov
fdivrl
daa
fsubrl
lret
in
and
sub
iret
mov
fiadds
dec
or
dec
fwait
mov
jmp
adc
push
scas
orl
into
popf
gs
or
nop
aaa
lods
cmpsl
inc
fmul
sub
sub
outsb
and
test
mov
xor
test
push
or
push
aaa
mov
and
ret
adc
adc
push
dec
movsb
sbb
or
fwait
or
ss
inc
mov
xchg
sbb
les
fildll
in
or
push
inc
xor
pop
and
push
and
inc
fidivs
mov
sbb
les
mov
adc
scas
push
mov
cmp
movsb
stos
push
adc
xor
fldl
xlat
imul
pusha
outsl
xor
sbb
jge
aas
push
popf
pop
xchg
sbb
jnp
or
outsb
fadd
fldl
mov
fstl
test
push
test
test
xchg
xorb
cmpsl
or
push
jo
ds
sub
mov
and
mov
inc
xchg
or
lea
push
xorb
adc
sbb
lret
cmp
and
push
sbb
aas
push
sbb
es
xor
pop
xor
and
scas
and
and
jnp
dec
pop
jecxz
andb
pop
adc
add
inc
mov
mov
add
adc
xlat
xchg
sti
call
inc
or
lea
push
mov
cmpb
and
cmp
adc
jmp
pop
sbb
xchg
outsl
call
pop
jnp
bnd
movsl
jge
xor
repnz
popa
daa
popf
ret
jno
sbb
add
push
lret
ret
in
mov
cs
sub
mov
or
or
roll
mov
cmp
jnp
les
lret
adc
sub
jnp
inc
jg
adc
or
inc
rcll
roll
inc
daa
push
scas
mov
inc
rorl
outsl
adc
scas
mov
js
or
mov
xchg
lret
arpl
popa
mov
fcoml
jecxz
aas
pop
sti
aas
mov
fldt
dec
pop
scas
mov
mov
xchg
jl
stos
test
xchg
scas
sbb
xor
push
jl
xchg
inc
fiadds
adc
add
xchg
in
sub
mov
jno
aam
adc
sysenter
sub
sub
pop
dec
dec
xor
inc
adc
inc
fimuls
push
and
adc
enter
arpl
scas
mov
cmp
scas
lea
into
test
cmp
sbb
push
les
imul
mov
fiadds
stos
xchg
sbb
addr16
sub
mov
inc
xor
inc
adc
sti
jno
pop
fdivrp
sbb
inc
bound
fbstp
fimuls
outsl
scas
and
repnz
mov
fists
sub
outsl
les
fidivrs
adc
cld
cmpsl
xchg
in
mov
push
or
pop
adc
push
mov
loop
ss
insl
and
or
jg
inc
cs
xor
std
mov
pop
repnz
mov
adc
mov
push
mov
cmp
sarb
js
out
in
jp
gs
je
scas
pop
cmpsl
les
shlb
mov
inc
hlt
lods
jmp
lods
cmp
add
das
out
jb
push
mov
js
dec
dec
fs
and
mov
mov
lods
mov
enter
add
out
test
lods
lds
xor
adc
cmp
inc
outsb
les
fistpll
adc
cmpsb
lahf
mov
mov
dec
sub
sbb
or
mov
inc
lahf
fidivrs
mov
lods
mov
mov
clc
fistps
xchg
sub
inc
das
test
jle
dec
adc
xchg
pop
mov
sub
and
lods
fisubs
rep
inc
add
inc
inc
sub
imul
fistpll
loopne
add
test
inc
scas
xchg
dec
push
mov
pop
and
mul
push
cmp
pop
pop
cmpb
addr16
lods
xchg
aaa
flds
sub
lods
daa
scas
pop
xlat
or
cmp
das
ret
pop
lods
iret
mov
mov
addr16
fwait
insb
fs
or
lods
out
and
mov
pusha
lock
mov
lods
icebp
sti
lods
sbb
or
testl
in
and
lock
xor
push
sub
xor
sub
inc
and
ss
push
pop
sbb
push
stos
outsl
xchg
adc
mov
jge
cli
pushf
cmp
xchg
sti
sbb
xchg
fldt
inc
dec
outsl
add
inc
rol
and
cltd
ds
push
xor
lods
xor
inc
mov
inc
sub
fsubrs
mov
aaa
dec
faddl
jbe
inc
outsl
inc
xor
stos
sbb
add
cmp
dec
adc
inc
adc
cmc
out
add
ljmp
hlt
bound
ds
inc
cs
cmp
or
jnp
cmc
imul
adc
pushf
dec
sahf
rcl
xadd
and
rcrb
jle
jg
push
sbb
stos
test
sub
lret
shlb
adc
jmp
push
and
sarb
mov
aam
imul
sbb
jnp
insb
xchg
dec
js
out
and
xchg
sbb
pop
mov
ret
idivl
aas
ror
lret
xor
test
or
ret
mov
add
adc
icebp
pop
sub
jae
push
sbbb
dec
lcall
fdivr
loope
fdivrp
ret
rcrb
jns
pop
mov
repz
pop
lds
movsb
jns
daa
sarl
out
movsl
mov
dec
ret
mov
sub
rolb
icebp
sbb
sub
pop
mov
rcl
out
jg
test
cmp
sarl
sub
push
or
inc
cmp
cwtl
xchg
sub
or
adc
mov
sub
ja
inc
or
loope
lcall
adc
popf
cmp
xchg
adc
inc
push
inc
fs
jo
mov
test
jo
inc
es
test
mov
jno
push
jl
pop
outsl
xchg
sbb
jmp
pop
test
xchg
aaa
pop
inc
test
sbbb
xchg
inc
out
test
xchg
test
out
mov
xchg
or
leave
push
and
leave
movl
mov
lds
or
inc
pop
enter
leave
mov
shrl
push
mov
das
decb
inc
sub
adc
test
insl
fimull
sbb
repnz
inc
outsb
js
pop
fs
xchg
push
inc
aas
mov
lahf
scas
std
dec
icebp
call
push
mov
jb
jle
fisubs
bswap
cmp
inc
pop
cld
inc
sbb
inc
push
fbld
mov
js
cmpsl
lea
in
cmp
pop
dec
push
repnz
dec
out
test
lods
jp
adc
imulb
lret
push
scas
cwtl
shlb
mov
push
xchg
pop
jecxz
sub
movsl
adc
xor
mov
pop
push
or
lds
das
lret
and
inc
fsubr
cwtl
push
jno
cs
in
xchg
mov
fidivrs
loop
bound
or
mov
adc
and
lcall
adc
pop
fstp
aas
loop
shll
in
aas
mov
pop
cmp
sub
push
lods
pop
sbb
subl
cmp
dec
and
push
pop
es
mov
lods
test
cmpsl
mov
das
outsb
shrb
cmpsl
icebp
pop
subb
pop
lea
and
cmp
cli
les
cmpsb
fwait
add
cmpsb
insb
pop
inc
dec
jg
xchg
xchg
lods
out
loop
push
lcall
pop
xor
cmpsb
cld
dec
jge
inc
cmpsb
pop
idivl
sbb
pop
inc
push
dec
repz
fisubrs
outsl
bound
inc
xchg
faddl
mov
dec
adc
mov
cmp
pop
test
mov
adc
jg
inc
xchg
push
mov
outsb
rcrl
cmp
sub
adc
insb
insl
cmpsl
xchg
stos
sub
push
push
out
popf
int3
sub
inc
dec
push
pop
cmp
lods
cmpsb
mov
cli
movsl
push
xchg
fiadds
les
push
pop
dec
inc
and
sti
cltd
push
imul
aaa
add
aas
movsl
sub
add
out
jae
and
gs
xor
xchg
fcoml
pop
movsl
lahf
xchg
movsl
jmp
push
jne
icebp
lret
mov
xchg
adc
les
inc
incl
push
push
in
push
jg
mov
sub
fcom
repz
adc
and
inc
lret
fbstp
xor
and
push
xlat
decl
nop
leave
cmpsl
cwtl
dec
and
dec
mov
movsl
push
gs
sub
lcall
sub
daa
lock
dec
ret
lods
leave
test
aas
leave
xor
call
jnp
clc
shrb
mov
ret
push
adc
jg
out
stc
aaa
in
lahf
dec
jecxz
jns
sub
movsl
loope
int
dec
fidivrl
sub
jg
dec
cs
into
mov
int3
dec
adc
jecxz
popf
cmp
ja
sub
cld
stos
mov
push
test
sbb
jecxz
loop
pop
cmp
jg
ljmp
jae
lret
rclb
movsb
popf
dec
cmp
daa
test
inc
xchg
xor
stos
sbb
out
adc
or
test
pop
cmp
movsb
test
mov
icebp
mov
das
mov
lahf
push
arpl
jmp
ficoml
adc
dec
and
dec
pop
lcall
rclb
mov
xor
pop
mov
mov
les
add
mov
cmp
dec
neg
adc
test
adc
lcall
dec
or
out
dec
inc
das
out
xor
ja
jo
push
cmp
cli
leave
mov
adc
pushf
pop
out
adcl
inc
cmp
mov
gs
push
inc
and
adc
pop
pop
fwait
jno
xchg
int
xchg
adc
mov
mov
sub
movsb
and
or
and
rcll
xchg
or
icebp
mov
cwtl
out
dec
mov
adc
add
adc
push
and
lea
cld
enter
mov
scas
lahf
rol
mov
cmpsl
push
inc
or
mov
shl
cmc
or
addr16
inc
push
push
mov
cmovne
mov
inc
lahf
mov
mov
aad
push
add
pop
aad
adc
aad
test
dec
mov
mov
and
cmc
mov
fdiv
pop
test
mov
daa
sbb
rcll
mov
pop
mov
jno
mov
push
adc
int
dec
pop
mov
xor
es
jmp
cmp
xchg
sub
mov
les
lret
pop
adc
rorb
cs
sub
enter
loope
into
sbb
mov
bound
adc
mov
outsl
les
into
mov
mov
adc
inc
mov
lods
jg
mov
fmuls
repz
pop
lods
sub
dec
push
cmp
mov
or
mulb
cmp
shlb
jbe
jnp
mov
or
mov
outsl
jae
mov
hlt
adc
cmc
das
cwtl
cmp
inc
dec
mov
adc
lret
mov
flds
pop
mov
test
enter
sub
lahf
pop
mov
inc
out
in
jmp
fs
test
pushl
cs
cs
pop
mov
pop
inc
sti
mov
adc
or
ss
fiadds
in
xor
mov
jae
das
xor
inc
mov
test
iret
push
popf
nop
mov
icebp
mov
push
or
cmc
lds
mov
test
iret
and
add
mov
ret
das
sahf
mov
gs
push
testb
adc
enter
or
test
mov
jecxz
cmp
push
repnz
movl
repnz
mov
mov
pop
fld
jne
iret
mov
mov
inc
ret
mov
pop
xchg
pop
hlt
jmp
xor
push
pop
das
std
sub
inc
adc
and
mov
mov
clc
inc
scas
push
mov
loope
mov
push
pop
pop
int3
cmp
lock
mov
cmc
and
shll
push
icebp
inc
cmpsl
dec
mov
xchg
xchg
mov
pop
push
xchg
roll
loop
aaa
mov
push
pop
aam
jecxz
adc
pop
das
and
push
mov
jg
mov
int3
mov
pop
add
bound
mov
sarb
mov
mov
mov
test
push
adc
push
mov
cmp
push
test
xchg
push
std
mov
inc
add
cmp
mov
and
pop
lds
and
mov
mov
push
fisttpl
loop
or
rorb
clc
push
pop
mov
pop
addr16
js
cmc
lret
push
sub
sbb
adc
lret
push
mov
aaa
scas
sub
aaa
push
sar
mov
test
cmp
cmpsl
repnz
sbb
fistpll
out
mov
mov
mov
dec
out
repnz
js
pop
scas
cmp
idiv
daa
jle
mov
pslld
cmp
adc
sbb
jbe
xchg
or
xchg
xchg
ljmp
jns
divb
adc
and
mov
aas
scas
and
push
lcall
push
lods
inc
sub
xchg
int
inc
lret
jp
and
iret
push
sbb
sbb
cmp
push
inc
fistpll
outsb
adc
stos
pop
rorl
mov
mov
insb
xchg
pop
lods
in
inc
mov
xor
dec
jno
or
dec
mov
ja
test
jg
dec
repnz
push
mov
aas
inc
outsl
mov
jg
js
mov
scas
cmc
test
fidivrl
clc
xchg
imul
cs
xor
mov
mov
cmpl
frstor
push
xchg
or
sub
inc
push
inc
mov
lcall
push
adc
pop
test
aas
adc
mov
or
inc
xchg
mov
sbb
inc
les
sbb
stos
and
rol
push
push
inc
test
jno
ret
jmp
inc
pop
mov
adc
fstpt
shl
push
mov
mov
popa
outsb
cmpsl
ja,pn
mov
lods
push
dec
inc
sbb
add
sbb
hlt
inc
adc
outsl
mov
and
adc
ja
or
mov
test
inc
dec
mov
insb
shrb
movsl
outsb
or
lret
mov
mov
push
mov
andb
js
bound
add
gs
je
xor
pop
das
pop
pusha
push
xchg
mov
ss
movsb
cmpsl
pop
out
in
jle
pop
frstor
movsb
test
lods
dec
pop
mov
out
xor
cmp
loop
test
and
mov
mov
xchg
or
and
cmp
in
xchg
pop
stos
fs
mov
std
ds
lds
out
ja
lods
inc
dec
xlat
and
aas
jg
div
mov
jnp
adc
mov
das
mov
dec
or
mov
ret
xor
mov
imul
les
fs
loopne
mov
mov
mov
bound
cmc
mov
sub
or
mov
and
out
adc
cmc
push
and
js
cmc
lea
mov
dec
mov
xchg
fcoms
jno
dec
stc
shlb
mov
jle
cs
lahf
and
and
mov
ret
aas
sbb
jbe
in
adc
inc
cmpb
mov
xchg
notl
imul
out
mov
lods
les
daa
or
mov
ret
mov
lea
jl
lret
into
les
sti
cmp
cmp
dec
frstor
xor
pop
imulb
adc
sbb
repz
inc
sbb
inc
and
dec
cltd
nop
xor
les
outsl
lea
stc
test
arpl
xor
push
xlat
mov
loop
lea
imul
jo
mov
add
mov
adc
push
mov
mov
frstor
mov
pusha
cmp
xchg
sub
xchg
orb
es
enter
in
cld
mov
adc
inc
xchg
xchg
imul
cltd
bound
std
cmp
cld
adc
and
xchg
add
sub
mov
outsl
pop
adc
mov
outsl
inc
mov
and
lahf
ljmp
std
adc
ficoml
bound
jge
mov
pop
leave
adc
add
pop
push
std
xchg
push
push
sub
inc
das
imul
daa
std
clc
roll
cmp
test
inc
std
icebp
and
sbb
pop
mov
push
jmp
xchg
inc
mov
out
mov
aas
xor
fidivrl
dec
test
cmpsl
push
fs
xor
loopne
into
mov
cvtdq2ps
loope
lcall
aaa
shl
mov
mov
cld
es
jbe
es
loope
aas
aaa
ret
jb
bound
loope
or
loope
and
in
xor
loope
mov
les
mov
ret
les
jecxz
lock
loop
cmpsl
dec
loop
mov
repz
inc
jecxz
adc
mov
loope
jecxz
mov
fcmovnu
repnz
nop
loope
cmp
mov
mov
mov
xchg
pop
das
call
imul
jae
mov
in
mov
in
stos
popa
sti
xchg
cmp
jg
and
dec
push
adc
pop
insb
sub
fisttps
sub
out
jo
dec
out
xchg
lahf
loope
ret
dec
mov
fcmovnb
adc
mov
shl
iret
xlat
xor
and
dec
cmp
rolb
iret
in
adc
in
not
imul
cmpb
mov
mov
mov
pop
mov
pop
lods
icebp
outsl
push
stc
mov
adc
repnz
repnz
push
and
out
loop
out
push
ret
pop
mov
out
lcall
inc
outsl
mov
sub
aaa
add
mov
xor
imul
xchg
out
test
cltd
outsb
insb
imul
lahf
imul
rclb
mov
fsubl
mov
js
mov
test
mov
sti
cmp
xor
sahf
fidivl
xor
mov
mov
cmp
and
sub
push
inc
aas
and
and
mov
lods
aaa
inc
out
mov
push
adc
out
aaa
inc
out
add
sbb
repz
loope
mov
les
mov
repz
pusha
and
adc
sti
dec
lret
sbb
mov
sahf
add
dec
repnz
pop
or
jp
scas
insb
or
inc
mov
lcall
leave
pop
movsl
pop
scas
mov
pop
pop
dec
pop
pop
inc
sub
sahf
dec
es
pop
xchg
add
ficomps
outsl
mov
adc
mov
testl
add
inc
imul
xchg
jb
adc
leave
mov
sbbb
pop
jg
adc
stos
push
loope
daa
mov
ljmp
jo
mov
outsb
lea
push
lret
shlb
add
adc
popf
or
divl
test
clc
addr16
call
call
mov
shl
pushf
leave
adc
cmc
in
adcl
adc
xlat
pop
arpl
push
bound
scas
xchg
xchg
fistpll
dec
fistl
enter
fistpl
mov
add
lods
mov
pop
sbb
adc
mov
insl
sbb
pop
cmp
sbb
sub
sbb
and
test
sub
and
mov
cmp
jnp
jne
out
mov
push
nop
movsl
mov
push
jns
mov
ja
cmpsl
test
out
mov
lods
aam
and
pop
mov
pop
mov
mov
dec
aas
in
ljmp
push
mov
add
sbb
stos
mov
shlb
stos
or
mov
dec
nop
lods
mov
test
jo
mov
cmpsl
dec
xor
outsl
dec
leave
cmp
pop
mov
jge
jno
xor
or
psllq
push
popf
sub
cmpsl
push
or
pop
adc
pop
push
and
push
xor
lock
jle
lret
ret
out
mov
jge
movsb
xchg
imul
inc
stc
sbb
repz
loope
jmp
les
imul
or
push
mov
pop
xchg
insl
or
sbb
rep
cli
les
adc
mov
or
pop
call
mov
mov
imul
jmp
cltd
icebp
jg
push
arpl
addr16
sub
dec
mov
add
mov
je
jnp
push
xor
or
call
cli
dec
call
aas
outsb
push
adc
mov
jmp
mov
scas
cmpl
cmp
sbb
imul
fucomi
iret
and
shr
das
das
inc
enter
pop
sub
fildl
xchg
and
fildll
cmp
xor
sub
inc
out
mov
push
leave
and
fucomip
adc
sub
les
jmp
mov
and
outsl
mov
and
arpl
mov
addl
jmp
lret
stc
or
jg
sub
jmp
testl
in
sub
adc
in
not
lcall
or
mov
std
adc
lods
iret
jmp
adc
in
test
sub
inc
jmp
iret
jmp
and
fs
jmp
sbb
jp
and
ret
sbb
and
inc
xlat
sahf
pop
push
sbb
xor
std
mov
push
or
rclb
push
mov
nop
xchg
fninit
inc
and
pop
fimull
aas
imul
out
xchg
in
cmp
in
pop
and
in
xchg
jmp
enter
aad
or
sbb
lret
pop
push
jl
add
mov
mov
inc
and
push
and
adc
insl
sbb
lahf
in
test
inc
in
icebp
out
sbb
addr16
push
push
mov
and
cwtl
ljmp
add
dec
lods
xchg
cmp
mov
sbb
rolb
xchg
mov
nop
pop
xchg
pop
sbb
xchg
mov
mov
push
push
ss
jg
out
push
push
popf
xchg
cmpsb
out
ja
mov
sbb
mov
push
fldenv
push
jg
orl
ret
test
and
mov
sbb
out
movsl
adc
mov
sbb
pop
xor
push
mov
sub
mov
mov
xchg
and
adc
cmc
mov
enter
dec
and
and
mov
ljmp
add
jae
xor
inc
call
ljmp
repnz
cs
movsb
repnz
jne
dec
dec
mov
jl
inc
dec
sub
xor
inc
mov
xchg
mov
add
or
fcom
jge
or
push
adc
sbb
inc
push
cmpsl
mov
pop
lcall
movsl
inc
out
roll
cmp
lea
loopne
push
xchg
negl
sbb
dec
push
cs
inc
adcl
fwait
mov
inc
outsb
out
scas
pushl
lea
sub
or
pop
fwait
mov
add
and
mov
jecxz
add
repnz
mov
mov
xor
jae
aad
test
test
push
push
ljmp
lahf
ds
lahf
and
fs
inc
lods
mov
rcll
or
adc
xchg
das
test
adc
cs
daa
sub
fildll
movhps
sbb
adc
out
loop
jae
ds
and
dec
sti
and
or
mov
out
cmp
or
jge
xchg
sub
and
push
in
cs
pop
jnp
pop
xlat
pusha
scas
mov
roll
dec
shlb
inc
mov
stc
xchg
outsb
push
mov
jns
daa
push
fistps
pushf
sti
lret
les
inc
dec
cli
cmp
inc
cwtl
adc
in
bound
iret
jge
lahf
lock
sti
sbb
enter
ret
test
fidivl
jmp
dec
mov
dec
shl
mov
dec
xchg
cs
cmp
test
ret
and
rcll
mov
cmp
cmpsl
xchg
out
adc
cmp
xor
out
jno
push
xor
mov
inc
ds
iret
lea
or
shlb
xchg
enter
pop
hlt
lods
jle
imul
inc
adc
ret
hlt
and
nop
adc
movsl
rorl
sbb
mov
xor
jmp
lret
pop
xchg
mov
scas
inc
jmp
adc
cltd
inc
mov
and
fildl
addr16
xchg
pop
xor
inc
cmp
rclb
mov
hlt
xlat
in
mov
jge
push
sub
aam
pop
cmp
jnp
adc
mov
xor
adc
int
sbb
lods
sti
xchg
jmp
cmp
inc
or
shrl
fs
das
test
sarl
test
push
imul
jmp
repz
rcl
lods
adc
push
sub
cmpsl
jne
pusha
sub
cmp
enter
sub
popf
fnsave
mov
daa
sub
push
inc
gs
stos
xor
js
mov
mov
push
jbe
dec
push
add
dec
les
ljmp
inc
and
loopne
aas
sbb
sbb
out
sub
mov
out
daa
fcmovnbe
inc
jl
adc
mov
fcoml
in
sbbb
sbb
inc
sub
pushf
repz
add
pop
adc
pusha
xchg
mov
adc
aad
dec
or
scas
push
pop
dec
pop
adc
scas
xchg
pop
es
mov
inc
dec
pop
push
mov
sub
xchg
mov
cmp
inc
sahf
arpl
pop
test
push
push
or
inc
cmp
js
and
imul
xor
in
movl
and
push
sbb
mov
and
popf
sbb
test
sbb
inc
stos
cmpsl
out
jb
repz
lods
jg
cmp
fistl
lahf
mov
pushl
push
enter
int3
and
jp
mov
and
mov
sbb
jne
dec
ret
pushf
push
shll
js
jb
movsb
mov
lret
xor
leave
fs
and
jg
insl
jmp
jae
not
pop
popa
sahf
repz
mov
enter
mov
xchg
push
mov
xor
test
mov
push
cmpsl
stos
fldl
mov
dec
jb
push
mov
dec
or
adc
sub
inc
aam
aam
xchg
ds
in
call
xor
sbb
scas
mov
stos
sarl
jbe
pop
mov
stos
xor
and
xchg
xchg
stc
fsubrs
sarl
and
mull
push
mov
push
mov
gs
loop
mov
and
dec
pop
call
repz
inc
shll
adc
outsl
mov
in
cs
xor
cmp
and
pop
or
and
icebp
adc
out
dec
xor
pop
sbb
or
outsl
pop
add
pushf
cmp
pop
inc
push
dec
outsl
sub
push
xchg
stos
push
or
fstpl
inc
pop
cmp
xor
mov
fistpll
jno
adc
insl
xlat
inc
rorl
and
cs
imul
repnz
pop
mov
sub
pop
xor
daa
in
and
fcmovbe
imul
notb
mov
inc
xor
cmp
fmuls
test
movsb
pop
sub
pop
sbb
outsl
sub
push
mov
lods
adc
pop
mov
inc
mov
sti
xchg
jb
imul
adc
dec
aad
push
lea
sbb
test
push
icebp
dec
or
adcb
mov
es
ret
pop
je
jb
cli
aas
pop
sbb
daa
cmpsl
daa
fldl
les
aas
adc
pop
pop
and
fcoms
and
test
cmp
dec
mov
aad
test
pop
cmp
out
push
iret
pushf
fnstcw
jp
jmp
shl
cmp
and
mov
cs
sub
shll
cmp
shl
repz
addr16
dec
cmp
cmpsl
rcrl
jno
fwait
bswap
leave
inc
or
std
iret
daa
push
xchg
inc
aas
dec
out
and
add
xor
cmp
cmpsb
cwtl
fisubl
push
xbegin
ja
sti
jmp
scas
rcll
mov
andb
repz
ret
jns
cmpsl
sub
gs
fisubs
jne
punpckhbw
inc
add
cmp
fdecstp
push
sub
push
pop
add
jbe
inc
cmc
cmpsl
scas
aad
sbb
push
xlat
test
dec
and
fs
mov
clc
ljmp
test
jg
nop
fcmovbe
xlat
cltd
insb
das
scas
jbe
ret
in
fistl
pop
inc
mov
iret
fs
mov
cmp
leave
xlat
inc
dec
adcb
lods
adc
jg
in
xor
out
or
xor
jecxz
test
xchg
pop
mov
mov
dec
mov
push
dec
and
lcall
lret
aaa
push
addr16
in
pop
lds
scas
sub
mov
insb
jne
add
pusha
mov
push
bnd
mov
inc
sti
popf
test
scas
js
sub
push
push
or
jns
data16
jl
push
mov
cmpb
in
aam
jle
stc
leave
jns
pop
inc
cmp
dec
cmpsb
jp
mov
push
aaa
cmc
rcll
aas
mulb
popa
mov
push
xorb
je
int3
fists
lret
sub
popa
and
sub
dec
jmp
aaa
and
xlat
mov
mov
mov
push
dec
nop
push
stc
dec
roll
popa
aas
sub
and
movsl
mov
push
and
jb
out
pop
push
dec
test
dec
loop
adc
xor
lret
lods
filds
mov
fdivl
lcall
push
fs
pop
imul
fxch
mov
dec
mov
add
adc
xchg
and
roll
mov
add
lods
bound
cmp
xchg
cmp
sbb
ja
inc
sub
adc
inc
and
adc
or
xchg
fiadds
out
inc
dec
addr16
mov
testb
jg
lret
rcrl
sub
fidivrs
pop
adc
je
lret
cmc
fs
dec
xchg
mov
out
fs
mov
pop
jo
jns
stc
not
cmp
repz
pop
outsl
mov
or
pop
inc
lea
mov
dec
add
je
lcall
mov
mov
cltd
pop
out
test
sub
cmp
cmp
scas
mov
icebp
and
sub
lea
mov
pushf
daa
mov
jne
and
jbe
ds
dec
pushf
jmp
jno
xchg
add
push
or
call
ficompl
shlb
and
cmp
movl
cli
pop
stc
pop
dec
inc
shrl
inc
test
dec
call
and
lock
test
ss
mov
pop
xchg
into
xchg
fsubr
push
inc
mov
lret
push
loop
stos
adc
xchg
cmp
or
sbb
out
aas
cld
mov
sbb
sti
shrl
testl
adc
cmc
bound
loop
shll
push
scas
mov
xchg
mov
fidivs
call
mov
shll
sti
sbb
xchg
sahf
mov
dec
mov
mov
push
lods
dec
inc
and
enter
adc
sbb
in
pop
lds
fstl
mov
lds
dec
push
xchg
outsl
or
adc
mov
cmp
daa
movsb
loopne
xor
pop
imul
divl
inc
xor
mov
js
imul
adc
les
dec
cs
adc
push
stos
lret
stos
les
sub
and
in
mov
xor
sbb
dec
scas
daa
je
inc
loopne
pop
dec
mov
mov
out
je
scas
or
addr16
mov
inc
sub
out
int3
mov
sahf
add
aas
mov
aam
jge
sbb
iret
inc
push
nop
inc
arpl
cs
push
and
mov
or
shrb
sub
cmp
push
xchg
and
push
push
loope
mov
mov
mov
adc
adc
jg
xor
stos
stc
clc
popf
aam
pop
mov
inc
inc
mov
or
rcll
push
lods
sub
mov
scas
pop
adc
push
sti
inc
add
cmpsb
jle
dec
fmuls
jl
pop
in
js
mov
or
test
aaa
mov
fisubs
dec
or
push
cmp
and
xor
or
daa
repnz
jg
fcompl
hlt
push
dec
sub
jmp
push
push
and
push
cli
lahf
push
push
pop
pop
jmp
sub
cld
mov
test
dec
inc
adc
mov
cmp
push
sub
lds
and
lahf
les
ljmp
pop
sbb
inc
mov
adc
fstl
cmpsl
stos
fidivrl
pop
test
inc
dec
mov
sti
cmc
mov
bound
or
pop
or
xchg
adc
jnp
xchg
mov
stos
mov
pop
pop
loop
popf
sarl
mov
xchg
pop
loope
testb
xor
clc
jo
repz
or
jbe
in
or
test
nop
mov
jmp
sbb
mov
dec
add
inc
mov
mov
sub
psrlq
add
addl
outsb
les
movsl
stos
or
pop
mov
adc
pushl
push
sub
sbb
iret
aad
in
push
frstor
xlat
outsb
mov
test
mov
inc
and
push
xchg
test
push
popf
adc
bound
iret
dec
test
lods
and
inc
scas
les
cmova
xchg
outsl
mov
xchg
xor
lods
leave
or
lcall
aas
addr16
mov
push
and
cwtl
pop
outsb
popf
jle
mov
and
rcrl
mov
outsb
aas
push
lods
push
cld
mov
test
xchg
sbb
pushf
shl
dec
mov
cmp
jo
adc
bound
jmp
xchg
daa
cli
fldenv
dec
or
aas
rcl
enter
inc
rclb
addr16
sub
fs
testl
cs
daa
sub
pop
push
jle
cs
aas
pop
test
inc
aas
mov
mov
xchg
fcmovne
fiaddl
push
call
daa
cmp
movsl
pop
nop
sub
les
mov
jecxz
or
daa
xor
in
fisttpl
xlat
or
xchg
pop
adc
rorb
and
repnz
in
roll
shl
sbb
cmp
cld
push
lret
lret
stc
or
std
mov
aaa
dec
int
or
xor
push
xor
sub
fnstsw
cmp
dec
in
push
mov
fcmovnb
aas
rcrl
sub
out
pop
stos
cmp
sbb
andb
sub
les
in
pslld
pop
icebp
sub
cmp
inc
jbe
and
and
repz
imul
sub
mov
inc
ja
popf
pop
jns
push
stc
aad
aas
inc
push
jbe
dec
dec
out
adc
mov
es
jmp
loopne
decl
jbe
adc
outsl
pop
push
icebp
cs
mov
jbe
dec
sti
imul
and
cld
sti
and
pop
or
inc
xchg
ficompl
int
xchg
lcall
inc
test
xchg
jae
xchg
cs
out
inc
arpl
out
outsb
inc
pop
sub
es
stos
xor
mov
adc
std
imul
pop
inc
or
pop
push
push
and
mov
mov
push
inc
sbb
loop
jnp
jmp
and
mov
in
mov
push
and
cmpsl
out
mov
xor
cmp
jb
xor
push
mov
pop
test
pop
mov
push
cmc
in
lods
and
pop
xor
rorl
push
xor
sbb
movsb
cmp
pop
pop
adc
xchg
bnd
cmp
xchg
add
mov
inc
xor
movsb
xor
aas
out
addr16
lcall
aaa
adc
movsb
leave
fbld
dec
les
pop
adc
out
arpl
in
xor
push
sbb
fs
add
inc
or
daa
mov
or
push
pop
inc
mov
jno
and
shr
pop
push
and
sbb
xchg
mov
out
into
cmp
jg
pushf
xorb
cmp
adc
and
mov
adc
mov
adc
mov
rdpmc
push
cmp
mov
pop
outsl
bound
and
scas
insb
adc
push
mov
jb
inc
sub
sti
or
push
and
fildll
mov
xchg
outsl
loope
cwtl
adc
lea
sub
and
out
mov
xchg
std
pop
leave
xlat
pop
jns
dec
jns
sub
add
mov
push
shlb
addr16
stos
repz
dec
in
cmp
rep
cs
adc
movsl
in
int3
sub
sub
push
xor
mov
xlat
out
imul
xor
scas
cmp
sub
xor
and
adc
into
subl
rcr
or
ja
cmp
loope
lods
dec
movl
cli
jbe
push
jl
int
pop
fcmovu
shll
push
mov
push
pushw
iret
cmp
idivl
and
inc
cmp
inc
repnz
and
jle
pop
inc
ret
pop
push
dec
xor
arpl
pop
lret
and
imul
jg
add
inc
scas
pop
push
xlat
test
or
sub
push
lret
xlat
pop
int3
push
test
lods
jmp
pop
xchg
cmp
xlat
scas
mov
lret
pop
movsl
jg
sub
dec
int3
or
jp
adc
outsb
outsl
dec
mov
xor
out
lods
iret
sub
mov
hlt
inc
xor
jo
and
and
jns
jae
daa
out
lods
cmp
fldl
adc
out
pop
fsubs
cs
sub
repz
mov
jg
push
sar
cmp
mov
push
hlt
arpl
sar
ds
cmp
sbb
dec
mov
xor
or
nop
es
or
dec
bound
push
adcl
or
sbb
inc
cmp
subl
push
les
daa
lds
adc
mov
push
sbb
ljmp
imul
sub
in
or
sub
xor
cltd
add
sub
pop
imul
sub
xchg
pop
rorb
rorb
imul
or
sbb
lret
mov
pop
lods
jmp
xlat
adc
mov
fisubrl
mov
pop
pop
cmp
pop
sub
dec
test
stos
bound
jge
cmp
and
jl
test
stos
push
and
test
cltd
adc
push
mov
jns
lds
mov
mov
aas
adc
pop
mov
loope
inc
ds
mov
push
lahf
andl
xchg
lods
and
enter
sub
popa
adc
jmp
test
imul
dec
mov
rcrl
and
addb
sti
enter
or
pop
xlat
adc
xor
xor
clc
xlat
popf
outsb
sti
std
xchg
in
xor
pop
sti
and
bnd
sti
rorl
cmp
inc
aad
xlat
pop
inc
aad
aad
add
repnz
inc
cmp
push
fisubrs
and
sub
pop
ds
mov
inc
inc
les
imul
bound
sub
test
fildl
scas
mov
lret
jb
into
xlat
jle
std
sbb
daa
add
push
in
fimull
inc
aad
or
daa
pushf
xchg
adc
dec
and
stc
loop
icebp
pop
jp
mov
mov
subl
je
mov
out
and
ljmp
jns
or
add
push
ret
lods
icebp
sub
jns
adc
adc
dec
rcrb
rcr
aad
xor
fldenv
sbb
xor
adc
dec
push
jg
ror
and
aad
push
xchg
sub
fcmovbe
cltd
call
out
or
and
inc
fistpll
and
xchg
daa
mov
jmp
gs
dec
punpckhwd
cmp
push
jle
sbb
pop
daa
cmpsb
mov
inc
or
or
ds
pop
pop
daa
les
and
pop
and
or
stos
stos
es
les
arpl
mov
mov
iret
sti
lret
in
repnz
inc
lret
mov
jns
sbb
mov
in
dec
popa
xor
out
arpl
sub
out
rdtsc
mov
lea
pop
pop
pop
mov
cs
inc
mov
pop
fwait
inc
xlat
lahf
lds
and
xlat
rcr
adc
mov
mov
mov
inc
orb
mov
movsb
xchg
cmp
inc
jns
inc
sti
lcall
in
xor
iret
aas
jne
cs
cmpsb
fdivrl
movsl
insl
pop
inc
test
cmpsb
pop
cs
aam
pop
in
add
rcl
sti
or
mov
dec
in
cs
clc
push
fidivs
adc
jae
stc
or
movl
or
xchg
pop
repnz
xchg
scas
loop
lahf
imul
test
aam
inc
inc
inc
sub
add
and
adc
push
lods
leave
pop
icebp
push
es
xchg
add
setp
mov
pop
repz
sbb
scas
ffree
mov
sub
jg
xchg
inc
push
test
gs
test
stos
xchg
lock
xchg
xor
fildl
shlb
lret
shl
out
sub
sub
xchg
fbld
stos
lret
stos
cmp
movsl
shll
sarb
add
enter
cli
mov
adc
stos
push
or
lock
sub
cli
sub
inc
mov
aam
fistpl
test
roll
imul
sub
mov
pop
cli
and
and
mov
sub
js
repnz
ds
negl
out
and
cli
lods
mov
lahf
push
stos
ret
scas
cmc
ds
and
xlat
mov
sarl
in
xchg
jp
mov
push
aaa
das
pop
adc
xorb
or
jbe
jae
xor
cli
lods
xchg
mov
jns
in
in
fdivrl
inc
mov
aas
fs
enter
adc
pop
mov
mov
pop
adc
ss
scas
or
sub
int3
test
pop
pop
mov
aad
sbb
scas
adc
adc
test
orl
outsb
cltd
xor
cmp
mov
clc
dec
add
mov
mov
roll
not
xchg
mov
loop
pop
push
mov
or
jg
lret
mov
adc
and
or
jns
out
jbe
inc
and
lds
subl
push
shll
dec
xor
xchg
ds
dec
adc
xchg
or
inc
cmp
xchg
dec
xlat
adc
fs
inc
dec
movsl
out
xchg
fldenv
pop
mov
adc
inc
pop
mov
pop
pop
mov
mov
pop
push
pop
mov
push
or
dec
je
aas
cmp
cmpb
inc
imul
pop
pop
sti
pop
mov
subb
cmp
sbb
mov
sti
dec
lock
or
repz
mov
adc
mov
push
cmp
sbb
pop
movsb
jae
popf
inc
mov
lods
das
std
mov
lret
pop
inc
movsb
ret
daa
mov
aas
and
aas
xchg
or
out
lahf
mov
stos
dec
aas
int3
pop
rcrl
ffreep
data16
pop
dec
in
cli
mov
outsl
bound
js
out
dec
fisttpl
dec
pushl
add
fldenv
jg
sti
sub
push
pop
aas
and
adc
scas
mov
inc
aad
lods
movsl
and
jg
mov
loop
cmpsb
push
or
jg
pop
inc
push
pop
jp
es
rcl
stos
sub
mov
jecxz
push
push
adcb
ret
xchg
cmp
sub
sbb
jne
sub
jp
sub
das
movsl
ss
xchg
ss
xor
sub
test
push
imul
mov
iret
stc
lret
inc
lock
ret
dec
push
add
xor
xchg
or
and
inc
sub
or
pop
ljmp
cmp
dec
xor
xlat
mov
ret
repnz
pop
leave
fcomi
jne
pop
cmp
sub
adc
jg
and
xor
xchg
loop
sbb
push
and
xchg
mov
dec
daa
cli
cltd
dec
gs
loope
hlt
sbb
xor
ret
mov
cmp
jp
cmp
inc
test
stos
inc
cmp
jnp
sub
aam
inc
insb
mov
sbb
fs
lahf
push
cltd
sub
jg
mov
or
cs
cmp
push
and
and
cmp
jne
and
push
and
inc
das
sub
inc
imul
pop
nop
sub
test
dec
mov
fwait
ljmp
jnp
int3
movb
mov
in
add
xchg
out
sbb
inc
dec
mov
adc
xchg
adc
and
negl
cmp
mov
stos
and
mov
sbb
xlat
test
fadd
jecxz
in
or
aaa
movsb
psadbw
xchg
jg
lcall
popa
and
aad
add
dec
ja
xlat
pop
imul
sub
les
inc
lcall
dec
dec
aaa
out
mov
pushf
cmp
test
pop
aad
nop
push
fst
flds
filds
mov
mov
or
shlb
xchg
sub
mov
test
or
or
enter
mov
cmp
mov
out
cmp
mov
movntq
out
xlat
aad
subb
xchg
cmpb
bound
mov
das
and
fnstcw
xchg
dec
mov
inc
xchg
push
or
xchg
adc
mov
and
xchg
mov
xchg
push
jns
out
adc
adc
pop
pop
enter
cmp
or
inc
sub
outsb
fcompl
and
jmp
pop
jg
roll
mov
std
enter
test
lahf
repz
push
sahf
les
mov
sbb
out
nop
fstl
cmp
xlat
xlat
aam
dec
shrl
xchg
jnp
sub
dec
dec
aam
pop
repnz
out
imul
push
inc
fldcw
test
sahf
xchg
xchg
std
mov
ljmp
jae
outsb
cmp
insl
mov
fbld
adc
mov
and
ds
xor
in
lret
mov
adc
push
and
lds
clc
push
imul
iret
daa
sub
or
test
fwait
jecxz
push
lcall
mov
data16
mov
sbb
and
sub
push
sbb
dec
ljmp
les
sarb
cmp
add
cmp
stos
adc
fs
stos
std
or
and
jecxz
push
cvtps2pi
push
xor
inc
push
sub
sbb
les
and
jno
jle
adc
movsl
pop
inc
loopne
and
push
cmpsl
pop
cmpsl
aad
and
cmp
push
sbb
enter
aam
scas
pushf
lret
aam
in
enter
lret
call
mov
mov
or
scas
mov
das
or
aam
dec
stc
imul
or
aam
sbb
repz
mov
mov
mov
adc
inc
cld
pop
sub
xor
stos
in
sbb
mov
or
es
push
adc
sahf
mov
cmp
mov
jne
aad
scas
xchg
adc
xchg
enter
push
pop
aad
or
pop
jg
adc
mov
fcomps
xchg
das
mov
xchg
rcll
shl
adc
xchg
arpl
mov
mov
je
nop
xchg
ja
inc
sahf
jnp
cmp
and
popf
or
cmp
cli
sub
mov
pop
mov
and
fwait
aad
fistpl
cmpsb
sbb
ss
fwait
aad
dec
mov
pop
mov
repnz
inc
popa
mov
js
inc
aad
mov
mov
cmp
mov
sbb
jns
in
out
loop
aad
mov
push
out
pop
and
sub
mov
push
dec
loop
aad
mov
inc
inc
sbb
dec
sbb
jge
or
mov
or
mov
and
sub
mov
call
inc
popf
push
mov
out
or
or
or
dec
js
push
adc
cmp
pushf
daa
xor
push
out
or
setp
mov
mov
mov
ja
fidivrs
out
mov
rorb
stos
jns
inc
mov
fiaddl
push
fsubrs
mov
push
cmpsl
negl
push
xchg
dec
jns
jb
aas
sub
pop
pop
jbe
ficomps
and
jo
rolb
mov
adc
pop
lcall
push
dec
shr
roll
movsb
adc
outsl
sbb
mov
and
pop
mov
push
sbb
jb
shll
or
daa
inc
cmp
daa
js
jns
xor
cmc
jmp
popf
or
push
ljmp
mov
idivl
push
je
pop
addb
and
shrl
mov
mov
mov
sub
fs
fisubrl
shll
sub
xchg
xchg
stos
jecxz
in
xchg
mov
pop
aas
jbe
call
dec
xlat
aas
sbb
lret
inc
movsl
negb
call
inc
testb
cltd
adc
pop
adc
cs
mov
inc
mov
and
or
push
and
int
adc
icebp
fwait
mov
inc
fwait
cmp
clc
adc
cmp
or
and
jg
repnz
adcb
lea
xchg
push
ret
gs
inc
es
aaa
pushf
daa
rorb
inc
sbb
mov
out
popf
push
mov
test
pop
inc
pop
cmp
jp
rcrb
jae
dec
mov
and
mov
and
xlat
xchg
sbb
add
cmp
dec
in
cmpsl
aas
xchg
jl
inc
subl
jecxz
fs
test
jmp
xor
scas
decl
mov
sub
in
xchg
pop
repnz
mov
adc
es
jnp
aas
inc
or
je
inc
xchg
sub
ja
inc
jns
cmp
bound
dec
cmp
pushf
in
imul
rcl
js
and
push
sbb
out
mov
mov
mov
das
inc
push
mov
mov
jmp
xchg
aas
jbe
xor
adc
enter
ficoms
pop
cmp
ficomps
daa
daa
xlat
push
jge
and
mov
xchg
gs
pop
and
sbb
xchg
xlat
mov
mov
add
sarl
frstor
jmp
dec
push
repnz
xchg
xor
mov
sbb
pop
daa
mov
rcrb
scas
and
jp
inc
cld
or
xor
mov
sub
enter
insb
push
es
or
and
lods
push
hlt
rorl
sbbl
out
sub
push
inc
xor
scas
and
inc
adc
cmc
mov
les
mov
divl
rcl
test
and
cli
inc
jp
sub
iret
dec
ror
or
and
sub
iret
cwtl
push
push
adc
and
xchg
sbb
xorb
clc
ljmp
ficoms
adc
and
fstpt
mov
or
xchg
cltd
cmovl
aad
dec
or
sbb
mov
mov
xcrypt-ecb
cmpsl
mov
insb
xchg
inc
das
cli
leave
out
sub
arpl
mov
and
and
sbb
icebp
int3
fstps
push
cmp
fdivrs
cmp
cmp
push
mov
insl
inc
push
bound
lret
fldenv
inc
push
or
xlat
xchg
mov
push
fs
repz
loope
ficomps
cmp
sub
and
daa
aas
stos
lea
ss
jle
ja
shrl
fs
mov
outsl
adc
shrl
test
cs
nop
pop
stc
or
mov
repnz
and
inc
cmpsb
je
ljmp
das
sub
fwait
pop
in
mov
fsubrp
cmpsl
insl
push
insl
jne
dec
xchg
jne
outsl
aam
rcrb
pop
rorb
call
test
adc
rcrb
adc
adc
shl
jno
mov
push
test
imul
aam
inc
adc
adc
movlps
adc
jmp
or
sti
fs
inc
inc
pop
fcoml
rol
cmp
stos
xor
jmp
dec
jmp
xor
jmp
xor
mov
or
adc
jmp
into
test
int3
mov
pop
xor
sbb
or
inc
rcl
mov
mov
sbb
or
xchg
mov
jmp
xchg
mov
xchg
mov
push
xchg
iret
divl
scas
out
icebp
nop
ret
stc
das
mov
and
fdivl
mov
inc
push
pop
shlb
xor
cmp
fwait
push
lock
pushl
mov
or
outsl
dec
sub
mov
xor
cmp
stos
jb
or
sub
mov
test
push
mov
daa
inc
int
popa
xchg
imul
iret
pusha
test
xor
loope
ret
xchg
ret
shll
add
adc
lret
and
sahf
divl
loope
jl
lahf
dec
std
pushf
jnp
sbb
ror
cli
adc
faddp
lock
or
pop
shrl
sbb
imul
subb
sub
jmp
mov
data16
jo
or
sub
iret
and
popf
inc
jmp
lods
push
push
or
imul
lods
dec
xchg
or
sti
mov
gs
or
das
adc
pinsrw
scas
or
adc
sbb
shrl
push
adc
sub
jg
mov
lods
sti
bound
les
pop
lahf
push
lcall
jo
fwait
mov
fists
lcall
mov
out
es
jg
or
jno
inc
pop
repnz
sbb
scas
cmp
adc
or
dec
cli
lret
jno
ficompl
lret
shr
addr16
cmp
push
or
xor
cmp
adc
or
stos
icebp
push
insl
pop
jne
adc
cmc
sahf
out
jle
mov
xchg
mov
mov
js
lcall
rcll
inc
jecxz
sbb
and
pop
in
movd
int
adc
aaa
push
cmp
mov
dec
cli
fsubs
imul
scas
out
cld
sbb
or
je
push
ss
or
in
or
les
in
cmp
pop
sbb
insl
addr16
xor
es
jne
jb
sarl
adc
repz
jno
mov
fldenv
dec
jb
push
leave
rdmsr
movsl
cmpsl
cmp
jbe
mov
cs
call
and
cld
test
push
pop
pop
cmp
outsl
mov
sbb
sub
jb
pop
and
out
inc
shrl
push
inc
adc
pop
inc
or
clc
rclb
cs
push
push
jge
jge
mov
push
xlat
sub
mov
aaa
xor
rolb
push
or
gs
dec
xchg
sar
les
jne
xor
sub
pop
sub
roll
dec
xlat
xor
add
dec
mov
pop
insl
push
mov
mov
rolb
or
iret
jg
and
sbb
pop
xchg
and
pop
aaa
sub
test
inc
out
icebp
sub
xor
jbe,pt
mov
daa
rcrb
inc
scas
or
cmp
xchg
dec
aas
fcomps
cmpsl
popf
and
adc
cmc
repnz
sbb
jge
cmp
inc
sbb
cltd
and
cmp
pop
and
sub
inc
mov
xchg
add
movsb
arpl
and
out
cwtl
pop
addr16
jns
call
pop
and
xchg
push
adc
pop
fisubs
push
hlt
ljmp
sub
xchg
mov
push
lret
in
cmp
and
loopne
les
lods
rol
daa
sahf
or
inc
sub
movsb
pop
or
fsubr
test
out
sub
stos
add
imul
lock
xchg
les
into
sub
and
aas
dec
sub
pop
faddl
and
imul
adc
sbb
adc
push
mov
pushl
mov
in
fucomp
pop
movsb
icebp
into
jnp
flds
add
cmp
jmp
push
sub
sub
das
cmpsl
lret
sbb
pop
cs
push
leave
xchg
repz
cmp
xor
imul
pop
add
sub
imul
sbb
add
stc
call
mov
in
frstor
stc
adc
repz
mov
jp
pop
cmp
adc
sbb
outsl
cli
dec
arpl
sti
jle
and
push
cmc
pop
pop
stc
outsl
mov
sub
jle
cwtl
lds
xor
jg
mov
das
push
or
movsb
sbb
out
into
in
add
out
movsb
dec
sbbb
movl
inc
rcrb
jb
sub
js
inc
out
nop
jge
rcr
add
movsl
popa
jb
test
pop
sub
movsb
call
adc
jns
inc
inc
add
xchg
aas
adc
out
inc
les
movsl
sub
or
loopne
lods
int3
lcall
fs
xchg
movsb
cltd
cwtl
inc
int3
adc
add
std
or
jb
rcll
aad
das
and
in
jnp
add
and
rol
scas
int
pushl
shr
sub
push
xor
lods
and
pusha
pop
xlat
pop
mov
stos
cmp
dec
xor
pop
pop
and
xchg
pop
aaa
pop
out
sar
jmp
rcl
and
inc
mov
cmp
rcl
pop
push
fmull
pop
or
sbb
pop
loope
iret
out
jecxz
or
stos
outsl
or
push
mov
adc
fs
or
sub
cs
push
scas
adc
jecxz
adc
data16
pop
mov
mov
movsb
and
imul
jno
cltd
mov
sub
shll
stc
fisttpl
ret
and
dec
repz
jnp
je
jg
enter
inc
ret
mov
mov
mov
pushf
cmp
and
or
and
outsl
and
arpl
xor
jno
push
or
cli
nop
adc
movsb
push
push
aad
inc
sub
mov
je
xchg
adcb
in
adc
out
or
pop
shl
push
nop
mov
les
inc
or
out
or
divl
sbb
or
fs
sub
cmp
ljmp
cltd
negb
sbb
push
shlb
sub
sub
mov
inc
mov
xor
pop
rcpps
inc
stos
mov
and
dec
cwtl
stos
push
adc
jmp
and
jmp
and
jmp
jns
pop
and
int3
or
rcll
push
mov
hlt
push
adc
pop
jo
xor
cmpsb
addr16
mov
push
in
in
shrl
out
insb
and
mov
dec
jp
inc
sub
sbb
push
add
aas
or
push
ljmp
add
insl
bnd
sti
scas
xchg
jnp
and
hlt
call
pushf
cmpsb
outsb
ret
or
sti
jge
in
mov
mov
lret
cwtl
push
sub
pop
out
cli
sarl
outsb
sub
outsl
sysret
pop
fisubrs
push
adc
lcall
sbb
sbb
pop
pop
loop
outsb
call
fs
sub
test
jnp
and
sub
dec
movsl
cvtdq2ps
lods
aad
adc
popa
sub
and
popf
lret
shld
pop
aas
xchg
in
pop
inc
mov
mov
push
es
adc
leave
or
cmp
or
mov
sbb
jne
movsb
jmp
inc
into
imul
in
movsb
nop
out
pop
loop
in
inc
add
adc
jmp
or
dec
adc
out
lock
or
outsb
sub
jns,pt
std
and
jp
dec
std
rolb
mov
cmp
outsl
fldlg2
adc
cs
pop
sub
outsb
arpl
fildll
popa
or
push
test
aam
inc
daa
mov
jmp
aas
pop
lods
and
fcoml
mov
fldenv
and
dec
jge,pn
decl
jno
jmp
cwtl
in
push
call
add
jle,pn
sub
jp
dec
pusha
test
mov
in
lea
and
mov
sbb
sbb
jle
dec
repnz
and
sub
jnp
sti
pop
sti
pushf
mov
adc
imul
inc
pop
cli
into
lods
movsl
repnz
orb
push
mov
cmp
cltd
rorb
dec
pop
push
cmp
and
jp
incb
pop
and
shl
movsb
sbbb
ds
mov
fstl
sbb
add
push
cmp
pop
adc
scas
dec
ficoml
adc
inc
mov
jge
test
les
adc
and
out
or
xlat
inc
out
and
daa
mov
fisubl
xlat
arpl
arpl
or
mov
push
fildl
repnz
sub
lcall
inc
add
push
cli
mov
and
int3
outsb
inc
mov
test
or
cmpsl
test
or
adc
lds
fcomip
sub
fisttpl
imull
rcrb
idivb
and
movsl
jle
les
and
inc
xlat
icebp
std
das
loopne
les
sbb
push
push
daa
adc
dec
orl
or
mov
std
pop
rclb
scas
lea
push
mov
mov
xchg
out
and
pop
cs
mov
daa
test
add
and
pushf
daa
and
dec
mov
push
pop
movsb
fs
bound
sub
pop
aad
adc
mov
daa
xorl
push
mov
and
sub
and
bound
mov
imul
rcll
xchg
push
xchg
xchg
jb
imul
add
and
mov
leave
addr16
movsb
mov
and
pop
fwait
movsl
pop
mov
lods
movd
scas
enterw
movsb
outsb
aad
sub
or
cs
pop
inc
aam
add
and
out
cmpsb
sbb
sub
jge
sub
and
sub
aas
pusha
nop
orb
and
add
scas
das
xor
nop
push
lods
into
arpl
pop
cmpsb
gs
les
dec
adc
inc
cmove
mov
test
mov
cs
pop
dec
xor
rorb
rolb
sahf
and
into
push
mov
lret
mov
loopne
adc
and
out
add
les
lret
mov
mov
mov
repnz
or
lods
push
lcall
mov
adc
mov
xchg
inc
sbb
scas
orl
or
cmc
sbb
dec
jg
movsb
cld
adcl
aaa
andb
xor
popa
aam
leave
sub
pop
jge
inc
lods
fmull
enter
sbb
andl
cld
push
icebp
and
adc
rorb
mov
mov
cmp
mov
dec
push
daa
xchg
aaa
and
and
push
lret
xchg
daa
aaa
imul
test
pusha
fbstp
sub
adc
sarl
cmp
fistl
and
xchg
push
mov
adc
cmpsb
jno
outsl
fimuls
mov
rorb
mov
sbb
cmp
xor
in
and
repz
in
mov
push
je
adc
add
lcall
fwait
sub
push
xor
adcb
xor
pop
xor
lret
andb
xchg
push
cmpsb
push
jg
cmc
pop
cmc
sbb
inc
shlb
jp
lods
pop
sbb
push
jle
inc
add
pop
add
ss
push
xchg
call
jmp
mov
sub
dec
sub
dec
cmp
inc
popa
dec
push
ds
scas
popf
popa
movsb
ss
inc
cmp
pop
jp
mov
sub
or
int
repz
sub
les
push
push
push
jae
pushf
imul
add
sub
xlat
les
shr
in
insl
lcall
cld
pop
lcall
ret
mov
stos
ljmp
insb
stos
inc
daa
aas
adcb
jno
sbb
inc
and
sbb
push
leave
fsubr
sub
fstps
cmc
or
rclb
insb
sub
lret
scas
push
jae
xchg
cli
xchg
inc
inc
jae
test
xor
mov
bound
jg
jae
icebp
sub
or
hlt
xchg
insb
iret
and
scas
aad
mov
push
lret
mov
mov
roll
jge
sbb
icebp
sub
cs
les
stos
push
inc
rcrl
arpl
inc
enter
xor
xor
mov
int3
lods
mov
jns
pushf
inc
sbb
cmp
xor
jle
dec
es
push
imul
jle
es
adc
dec
aaa
mov
mov
stc
inc
fimull
cmpsl
add
jb
sub
push
sub
nop
push
jmp
test
rolb
mov
int
daa
loop
mov
iret
xchg
pop
pop
xor
mov
cli
daa
or
je
jecxz
out
loopne
movsb
cmp
and
insl
xchg
aaa
push
iret
daa
xlat
xchg
lret
or
cmp
xor
jno
xchg
add
pop
inc
inc
mov
imul
or
fldl
inc
sub
cmc
test
ja
in
and
pop
ljmp
int
cs
sub
jne
inc
lock
pop
jecxz
aaa
or
push
sub
pop
inc
jge,pn
xchg
lods
pop
mov
xlat
sub
outsl
xchg
cmp
sub
jbe
mov
push
loop
mov
outsb
push
fiadds
cmp
cmc
sub
dec
imul
mov
outsl
mov
adc
popf
data16
and
loopne
xchg
xchg
xor
sarl
adc
aaa
add
adc
or
or
xchg
mov
or
or
push
xor
add
lods
adc
inc
or
or
es
and
shrb
sub
xchg
xchg
sub
stc
jp
adc
insl
and
dec
enter
sbb
add
das
cmc
inc
sub
cmp
pop
adc
cld
or
movsl
and
mov
push
cltd
daa
jge
inc
cmpl
sbb
dec
jg
lahf
mov
adc
mov
and
aaa
int
insl
mov
into
mov
imul
fstpt
int
movsl
pop
adc
adc
mov
cs
enter
sbbb
inc
jae
dec
inc
in
xor
aaa
jbe
cltd
mov
add
adc
adc
mov
jns
adc
stos
pop
xor
mov
mov
fsts
pop
fistps
ljmp
mov
lods
xchg
cmp
or
inc
jnp,pn
dec
cmp
stos
inc
cmp
in
xchg
cmc
mov
les
inc
mov
xor
hlt
xor
aas
push
adc
test
adc
push
push
repz
pop
push
iret
sub
xor
lods
cmpsl
loop
dec
repz
stc
and
les
out
bt
pop
push
in
dec
clc
in
mov
mov
imul
inc
push
or
mov
mov
cmpsb
in
hlt
les
cli
inc
cmp
cli
sub
in
adc
pop
jmp
and
out
and
ja
pop
shr
cltd
imul
int3
insb
jecxz
out
pop
clc
pop
xlat
adc
or
xchg
lods
in
or
and
cs
or
or
xchg
pop
mov
mov
aas
mov
int
cli
and
or
and
scas
add
pop
seto
mov
add
pop
and
xor
and
shr
and
adc
xchg
pop
outsl
cmp
mov
dec
scas
sub
adc
movsl
pop
icebp
addr16
imul
adc
xlat
xchg
outsl
or
xchg
int3
ljmp
xor
aaa
dec
int3
push
and
mov
jle
cld
or
les
mov
or
mov
xor
loopne
inc
insl
sub
pop
and
lock
sub
adc
push
add
cmpsb
aas
les
pop
pop
push
ret
inc
cli
and
pop
adc
and
xor
add
test
lods
pop
mov
mov
sub
cs
in
jge
test
push
xorb
rcr
pushf
jbe
dec
addb
adc
aas
enter
push
fwait
sbbb
into
inc
sub
mov
push
imul
inc
sub
add
mov
sub
inc
dec
sub
das
loop
fmull
cmc
cltd
push
sub
mov
mov
add
loop
sbb
repnz
adc
mov
insl
push
repz
xor
lock
cmp
insb
cmp
shll
shll
jle
outsl
cltd
hlt
repz
notl
push
movaps
mov
push
cs
cmpsl
data16
xor
aad
ficomps
int
add
xchg
fists
jnp
mov
jbe
ret
rcll
sub
in
mov
xor
das
jne
pop
and
and
and
adc
icebp
inc
xchg
and
loope
ficoms
sub
push
pop
push
xchg
adc
daa
movsl
pusha
sub
mov
les
push
mov
xchg
xlat
mov
add
int
addr16
cmp
push
push
lcall
lock
mov
daa
js
inc
out
pop
les
mov
mov
xor
inc
mov
pop
aaa
push
adc
mov
inc
cmpsl
inc
add
adc
sub
sti
out
pop
lods
arpl
popf
lahf
jbe
aas
frstor
cmpsl
adc
inc
jge
inc
sbb
xchg
or
shrl
inc
test
lds
pop
sbb
cmp
inc
pop
pop
inc
loop
leave
cld
adc
xchg
and
enter
xchg
sbb
repnz
sub
xor
mov
mov
push
push
rolb
outsb
mov
xchg
sub
xchg
jle,pt
jge
mov
sub
push
inc
bswap
jmp
mov
xor
jo
pop
and
pop
arpl
add
inc
sub
sub
rorl
xor
mov
xor
loopne
and
lock
or
stos
push
arpl
push
and
pop
loop
popa
jnp
inc
negb
xchg
loop
add
pop
inc
jmp
pop
fistl
les
testb
loopne
pop
movsl
js
pushf
cld
aam
and
enter
les
mov
cmc
lock
aas
xor
dec
arpl
and
or
xchg
dec
xchg
xor
es
sbb
pop
aaa
dec
dec
scas
shll
test
inc
sub
xor
notl
inc
jge
daa
ret
or
sub
and
das
xchg
push
jno
or
lods
pop
push
mov
inc
xor
inc
pop
inc
fidivrl
pop
jg
aas
jle
cmp
push
fs
aam
movd
dec
testb
pop
push
xchg
pop
xor
jnp
mov
xlat
mov
decl
idivb
xor
push
jge
int3
ret
clc
fldt
loop
pop
movb
arpl
mov
int
data16
ret
sbb
sbb
or
pusha
sub
xchg
js
les
and
outsb
adc
lea
xor
pop
or
mov
jae
mov
pop
rol
cmp
shr
push
jmp
xchg
lret
in
inc
fstpl
call
jbe
cmp
dec
bound
xlat
adc
xlat
adc
repnz
cmp
lea
or
adc
sbbl
ret
jl
js
cmp
sub
sub
inc
cli
fsubs
in
pop
sub
stos
add
enter
push
pusha
pop
push
xor
out
sub
sub
rclb
stc
or
es
pop
inc
loop
and
loope
pop
jb
xchg
aas
adc
xor
int3
xorb
and
pushf
mov
xorl
mov
nop
daa
mov
outsb
ror
and
mov
fimull
push
inc
jae
push
stc
pop
dec
jecxz
addl
scas
or
push
jg
das
xchg
cmp
push
push
in
stos
jae
dec
xor
test
adc
aaa
repnz
sub
jp
cmp
mov
shl
adc
clc
push
outsl
mov
mov
jp
and
incb
sub
xchg
and
add
mov
push
and
sub
aas
inc
sub
sbb
mov
and
cmc
pop
testb
push
dec
loop
jle
daa
addr16
xchg
sbb
xlat
testl
les
adcl
cs
jno
cmpsl
jnp
jno
and
or
adc
nop
and
aaa
je
dec
mov
push
mov
cs
mov
imul
sbb
xchg
cwtl
xor
cs
jmp
fadds
mov
jp
mov
into
lea
and
popa
and
pop
add
and
lret
flds
push
sahf
xor
hlt
and
mov
std
and
mov
and
cmp
pop
rolb
adc
mov
fiaddl
sub
add
jmp
jno
fiadds
push
or
enter
jmp
scas
xchg
jmp
stc
pop
inc
or
cmp
add
jle
hlt
jnp
shl
or
daa
mov
movsl
hlt
jnp
insb
call
jnp
and
pop
movsl
adc
out
xlat
stos
fisubrs
aaa
adc
hlt
sahf
or
mov
pop
ss
inc
dec
inc
jg
cmp
pop
push
mov
popf
push
inc
jnp
and
jbe
xchg
cltd
lahf
sbb
pop
cmc
fmulp
mov
dec
jo
je
enter
gs
pop
xchg
cmpsb
mov
jge
xlat
icebp
inc
mov
dec
loop
loop
sub
fwait
cmpsl
sbb
ljmp
dec
push
and
lret
sbbl
fwait
adc
fadd
adc
xchg
sub
loopne
insl
xcrypt-ofb
cmpsl
push
lahf
mov
push
xor
mov
das
lahf
lcall
les
daa
lahf
shll
mov
xor
push
xor
push
xchg
iret
test
je
ret
mov
cmovs
cmpsl
arpl
xchg
pop
pop
and
mov
inc
out
sub
add
fsubl
mov
imul
xchg
lock
je
js
nop
pop
das
cmpsl
hlt
out
mov
loope
and
and
adc
and
inc
sti
cmp
pop
jecxz
adc
idivl
hlt
lds
jle
sub
jo,pt
cwtl
mov
xchg
ret
jl
imul
jae
jle
adc
lcall
adc
les
push
mull
lods
nop
push
pop
and
icebp
and
stos
enter
ss
out
cmpl
lret
sar
mov
pop
lret
out
mov
or
jb
cwtl
push
cld
iret
clc
arpl
dec
and
mov
lcall
push
pop
cmpsb
and
and
xchg
xchg
imul
dec
and
pop
sbb
or
fbstp
adc
lds
or
or
popa
cmp
fsts
push
call
nop
out
sub
loopne
cmp
mov
adc
mov
rolb
push
out
adc
mov
xchg
daa
mov
push
aam
clc
mov
in
dec
mov
fwait
iret
jecxz
pop
push
mov
imul
iret
dec
not
cmp
pop
cmp
movsl
and
stos
test
ret
idivl
in
out
int3
aas
jns
adc
and
into
add
add
lods
imul
call
rolb
mov
stc
daa
jmp
add
jno
je
ljmp
pop
sbb
fs
ret
add
js
cmp
repz
inc
sti
les
push
rorb
ret
stos
and
xchg
jp
sub
push
pusha
cltd
lahf
xor
pop
jmp
or
and
gs
adcb
filds
mov
pop
and
push
mov
aaa
out
dec
mov
or
subl
xor
sbb
sub
and
fbstp
dec
xor
push
sar
out
adc
push
das
push
and
in
jne
mov
les
sub
jnp
and
mov
stos
daa
xorl
int3
aaa
clc
imul
pop
mov
mov
shrl
and
arpl
fnstenv
leave
and
dec
xlat
pop
cmp
and
les
es
js
movsl
cmpsl
scas
mov
out
or
and
dec
xchg
lods
jle
mov
loopne
cmp
cmp
movsl
je
add
push
cmpsb
orb
movsb
stos
sbb
dec
rolb
clc
jae
lret
dec
push
cwtl
rclb
aas
subb
cmp
jae
cmp
leave
and
cs
dec
mov
mov
inc
push
pop
jnp
pop
jp
popa
enter
jnp
fbld
mov
test
pop
sub
sub
scas
cmpsb
imul
gs
and
push
loopne
test
or
sbb
mov
pop
test
pop
testl
mov
movl
adc
mov
aam
in
movsb
jmp
filds
push
fmull
push
xor
dec
rcr
mov
cmp
mov
push
mov
loop
mov
pushf
ss
pop
adcb
mov
test
xor
jbe
subl
cmp
sarl
pop
in
les
mov
push
js
rorl
fidivrs
and
ljmp
and
jg
inc
sub
lret
pusha
gs
out
dec
jg
xor
notl
mov
push
ds
insb
into
lret
popa
sbb
sub
cltd
scas
dec
dec
or
push
push
les
loop
adc
push
dec
out
adc
dec
loop
cmp
ficompl
dec
ret
xchg
jo
sbb
fnstenv
movntq
pushf
jno
aas
int3
movsb
adc
outsl
das
test
cmpb
adc
mov
xchg
out
and
pop
addr16
mov
out
xchg
call
adc
pop
inc
daa
xor
adc
dec
mov
in
in
mov
das
push
mov
mov
inc
rorb
sbb
xor
pushf
mov
sti
sub
fwait
sahf
and
idivl
ljmp
push
arpl
jbe
shrl
icebp
jns
xchg
pop
jo
pusha
mov
addl
and
and
fsubs
into
in
sbb
testl
into
sar
mov
jge
test
push
mov
adc
mov
adc
xor
gs
xchg
shrb
sub
push
leave
enter
pop
inc
mov
lahf
les
and
adc
xchg
cs
add
mov
in
mov
jle
lcall
in
cltd
nop
add
js
inc
push
mov
into
cs
or
lods
imul
call
mov
or
jp
out
inc
fs
or
pop
dec
dec
add
sbb
dec
xchg
fidivs
dec
and
adc
les
jae
jae
jnp
pop
adc
daa
hlt
inc
lds
and
pop
add
fcomp
movsb
fists
xor
pop
xor
adc
pop
daa
loope
jecxz
pop
pop
cs
lcall
jl
sub
push
push
outsl
push
lods
pop
mov
dec
outsl
aas
xchg
and
daa
in
inc
cmp
and
icebp
pop
addr16
test
mov
adc
imull
js
jl
push
rolb
ss
push
je
nop
pop
sub
adc
jno
adc
cmp
mov
push
sbb
inc
cmp
les
idivb
daa
xor
aaa
push
inc
cmp
aas
pusha
pop
aam
mov
ljmp
sbb
mov
xchg
dec
mov
sarl
adc
push
cmp
loope
push
push
and
movsl
sub
sbb
out
pop
pop
dec
shll
test
adcb
pushf
push
pop
fnstenv
sub
or
inc
cmp
addr16
dec
loop
pop
mov
dec
and
and
les
subb
test
mov
dec
mov
loopne
sbb
shlb
fwait
shlb
pop
sub
rolb
scas
in
iret
sarl
cmpsl
adc
mov
daa
shl
imul
sub
daa
pand
lods
sub
jae
dec
inc
or
xchg
in
cmp
dec
gs
adc
dec
push
sub
mov
jle
fsubrl
aas
mov
daa
daa
push
xchg
clc
loop
sbb
in
xlat
jns
imul
inc
jecxz
xchg
mov
push
dec
ret
cli
ja
and
clc
popf
pop
pop
sbb
inc
movsl
and
imul
cmp
cli
push
popa
jnp
jae
leave
adc
jmp
int3
mov
jge
iret
loop
push
add
mov
es
dec
aas
call
cs
mov
or
out
dec
jo
shrb
sbb
movsb
cmp
enter
ffree
fmul
push
ds
dec
into
pop
adcb
lods
mov
add
inc
xor
and
es
mov
orl
loope
orl
xchg
mov
dec
insl
adc
jle
inc
aad
popf
and
add
sub
sti
mov
pop
adc
mov
test
insb
cmp
mov
loop
stc
mov
popl
aad
mov
dec
mov
notb
cmc
cmc
pushl
aad
mov
movsl
clc
cmpsl
xor
inc
and
xchg
jmp
mov
mov
adc
imul
sub
or
mov
test
push
fisttpl
add
or
push
mov
out
mov
and
mov
sarb
aas
dec
jns
sub
movsb
mov
sub
adc
call
add
ret
adc
inc
imul
lahf
pop
xlat
outsl
js
aas
xchg
sarb
xchg
xchg
adc
sbb
pop
outsb
xor
jp
stos
pop
lods
push
push
adc
aas
daa
pop
push
pop
push
sub
bound
cltd
leave
out
cmp
inc
adc
mov
loop
inc
push
cmp
les
inc
insl
lret
and
mov
ret
test
push
sub
pop
mov
push
rcrl
lds
lods
cltd
mov
add
les
xchg
sbb
fsubrl
in
ret
jns
lcall
adc
jnp
iret
repnz
and
outsl
mov
push
les
scas
xchg
fucomi
push
fidivs
push
jle
mov
or
adc
les
push
popa
mov
sub
sti
pop
or
sbb
add
stc
sub
adc
out
lock
div
test
xor
or
fildll
daa
test
inc
inc
jnp
sub
jp
mov
inc
mov
adc
in
sub
and
cmp
inc
adc
adc
adc
scas
ljmp
call
add
and
xor
stos
sbb
ja
arpl
xor
push
and
mov
or
push
or
into
les
push
out
add
repnz
cmove
pop
adc
or
mov
inc
movsl
pop
dec
setge
arpl
add
push
and
scas
jmp
outsl
les
mov
daa
dec
scas
test
scas
shl
int3
and
popf
aad
dec
lock
pop
lahf
mov
mov
xchg
mov
iret
dec
mov
jno
sub
popa
jnp
and
sub
bound
xor
cs
and
or
divb
inc
xchg
jae
push
inc
ja
test
ljmp
xor
cmc
vpdpbusd
mov
inc
xchg
outsl
shll
daa
add
fidivs
xor
into
add
insb
vdivps
aam
mov
xchg
ret
jnp
push
xchg
dec
cmp
sub
scas
dec
inc
dec
add
inc
inc
aam
xchg
or
or
and
test
es
pop
inc
mov
aad
out
stc
and
movsb
out
mov
pop
push
mov
out
adc
pop
pop
jno
sub
mov
sbbb
shlb
pop
in
sub
in
mov
xor
sub
mov
dec
xchg
mov
push
jne
push
pushf
inc
adc
les
inc
and
daa
sub
sahf
xchg
jbe
bound
cwtl
pop
mov
sub
sub
movsl
jl
jge
mov
push
and
mov
fimull
or
sbb
mov
mov
jl
cmp
lods
in
or
sub
fistps
repnz
js
pop
xor
inc
push
jp
pop
mov
shll
pop
cmp
shrb
sbb
mov
jns
lds
push
mov
les
and
into
sub
nop
adc
push
mov
das
sub
add
pop
cmp
sub
rolb
push
pop
pop
sub
cli
and
out
push
xor
scas
or
sbb
push
faddl
sbb
les
jbe
and
push
dec
mov
xor
cs
pusha
xchg
mov
es
int3
jne
idiv
dec
loop
add
fldl
rcl
mov
movsl
imul
pop
cmp
fdivr
movsb
out
test
pop
out
mov
cmc
ljmp
cmp
addr16
repz
cmp
cmp
pop
inc
dec
pop
fs
stos
lahf
jecxz
out
shll
push
jae
cmp
cld
movsl
mov
sbb
imul
fs
sub
lds
mov
shlb
adc
xor
jmp
dec
jns
jns
dec
jns
jecxz
rcl
call
mov
in
sbb
gs
or
daa
xchg
xor
and
adc
outsl
aaa
xchg
sub
insb
pop
push
push
or
sub
jo
push
mov
lahf
mov
add
sbb
fstpt
mov
dec
mov
or
jmp
dec
mov
scas
sub
and
mov
mov
jae
sbb
or
loop
test
cmp
push
out
pop
pop
sub
and
cmpsb
aam
cmp
adc
or
jmp
push
out
out
loop
pop
lods
push
adc
sub
pop
xchg
push
and
orl
fisubs
lcall
adc
andl
jecxz
xchg
dec
inc
decl
mov
sbb
mov
imul
or
xor
mov
cltd
sub
and
aas
mov
adc
ljmp
cs
outsb
pop
js
and
pop
ret
test
adc
sub
scas
dec
jns
mov
add
fbld
inc
and
mov
jp
sub
add
push
xor
popa
das
jbe
dec
lock
lcall
pop
stc
mov
sarl
adc
jecxz
lret
jb
and
scas
fsubrl
mov
mov
xchg
pop
es
cmovnp
daa
negb
and
pop
test
int
aaa
jle
iret
inc
pop
and
inc
xor
out
les
scas
pushf
and
shll
xor
in
sbb
xor
aaa
rcrb
push
cmp
das
pop
add
inc
adc
outsb
xlat
je
mov
push
xchg
ss
jns
stos
gs
adc
stos
mov
andb
mov
dec
aas
add
jle
out
push
adcb
sbb
in
lock
push
int
mov
aam
and
lds
jg
and
push
xor
insl
mov
gs
fcmovnb
addr16
and
in
out
pop
aad
pop
and
add
inc
out
or
and
fsub
push
out
push
adc
nop
imul
pop
aas
ljmp
pusha
and
xor
add
mov
cmp
pop
cmp
pop
daa
movsb
lret
mov
dec
jecxz
mov
xchg
jmp
mov
adc
repz
rol
pop
and
and
rorl
daa
pop
imul
cld
lods
inc
lahf
push
mov
movaps
sub
push
jno
xor
pop
xchg
inc
cmpsb
ret
enter
enter
movsb
mov
imul
push
mov
cmp
mov
inc
mov
mov
mov
and
mov
enter
mov
idivl
pop
ja
push
mov
and
xchg
fistl
bound
out
rorb
xchg
adc
xor
aas
sbb
mov
dec
call
test
lcall
ljmp
stos
test
pop
aas
push
inc
test
daa
shrb
push
sbbb
test
scas
arpl
cmovs
in
mov
jnp
mov
xor
fiadds
scas
in
and
daa
popf
bound
pop
and
mov
stos
dec
mov
adc
push
cmp
and
shl
adc
test
pop
adc
or
adc
mov
sbb
or
frstor
es
or
or
jg
push
jecxz
ficompl
and
mov
jp
imul
sbb
aaa
push
mov
inc
jl
pushf
and
inc
jb
aas
inc
arpl
and
pop
adc
pop
pcmpgtb
insl
inc
mov
loop
hlt
push
push
sbb
scas
loope
daa
add
xor
call
leave
cmp
or
adc
and
loop
mov
filds
inc
push
lods
aas
insb
rorb
sub
adc
inc
and
sbb
push
repz
les
or
daa
ror
pop
xchg
push
mov
push
std
pop
push
xchg
xor
ret
jmp
and
add
adc
push
scas
loop
and
les
dec
insb
aaa
jb
xchg
xor
movsl
mov
cmp
dec
dec
popa
mov
dec
movsb
pop
mov
dec
lods
and
mov
lock
daa
cmp
or
icebp
mov
cld
adc
nop
daa
lret
and
in
insl
lret
aas
inc
and
jo
aam
xor
insb
mov
movsb
ss
sub
push
pop
sbb
dec
cmp
es
lds
mov
add
pop
push
into
enter
fisubrl
lea
aas
les
jmp
dec
scas
sub
rcl
xor
jbe
into
cmc
and
addl
loope
or
jno
and
mov
ds
decl
and
call
nop
aad
icebp
les
push
push
adc
push
lahf
cltd
lds
xchg
or
xor
fstpt
or
add
out
and
sub
movsl
sbb
mov
in
nop
or
call
int3
les
dec
fsubs
scas
in
xcrypt-ofb
cmpsl
imul
aad
xor
push
and
mov
and
sub
les
adc
in
dec
in
outsb
mov
fiaddl
jl
iret
sbbb
stos
inc
mov
stos
push
inc
jecxz
and
sbb
dec
cmp
mov
out
cmp
and
xchg
sub
sub
and
xchg
addb
cmp
xor
shr
xor
int3
dec
jnp
jecxz
outsl
inc
dec
int3
out
and
shlb
pop
les
out
mov
adc
dec
sub
int
add
inc
sub
daa
aas
sbb
icebp
dec
inc
xor
ffree
dec
sub
movsb
sub
out
mov
mov
sub
or
xor
jmp
or
in
out
das
xchg
mov
inc
cld
adc
movb
gs
pmulhw
adc
outsl
push
xor
add
xor
dec
sub
push
adc
xor
and
pop
hlt
inc
sbb
mov
and
adc
es
fstpl
push
sub
lods
das
imul
mov
sub
aaa
sub
sbb
aas
jne
icebp
jmp
lods
loop
sbb
xchg
in
and
cltd
popf
fsubs
mov
fcomip
scas
cs
mov
insl
xchg
mov
or
inc
cmp
ss
repz
sub
popa
mov
jg
insb
pop
icebp
dec
pop
cli
push
push
and
clc
pop
movsl
jp
mov
and
push
mov
dec
out
sub
cs
push
rorb
lcall
mov
mov
sub
add
and
jp
cmp
outsl
mov
sub
mov
mov
dec
sbbb
xor
sub
add
repnz
xor
insb
aad
add
bound
lret
and
adc
aaa
movsb
inc
sub
pcmpeqb
inc
mov
leave
push
filds
stos
lret
and
pop
xor
and
mov
sbb
push
vmptrld
sbb
lock
leave
inc
push
dec
mov
and
push
or
xchg
pop
sub
push
adc
adc
mov
inc
stos
scas
and
repz
stos
dec
pop
mov
and
mov
mov
or
push
push
fstl
pop
in
adc
mov
test
adc
mov
and
xlat
inc
sbb
xchg
into
xchg
pop
mov
sbb
pop
xchg
cmp
xchg
and
xor
gs
or
push
add
dec
orl
loope
in
inc
rcr
jmp
mov
popf
and
sub
sub
arpl
adc
and
sbb
adc
stos
sub
fisubs
or
push
addr16
push
adc
push
adc
xor
mov
movups
ljmp
cltd
cmp
adc
xor
scas
xlat
and
mov
call
jecxz
sub
sub
cli
decl
or
and
mov
lods
fcmovbe
xchg
in
cmp
xor
aam
out
push
lods
mov
dec
idiv
js
cmp
mov
dec
lods
mov
test
or
call
and
dec
add
jns
hlt
sbb
jl
jecxz
mov
inc
aam
jl
pop
test
sbb
cmp
push
dec
xchg
lcall
test
or
and
add
inc
inc
mov
inc
sti
adc
mov
sbb
or
or
ret
cmp
ficoms
add
push
add
push
into
xlat
push
in
xor
jecxz
push
mov
ja
pusha
call
dec
rcll
test
aas
mov
xor
push
or
push
mov
pop
les
call
aaa
cmpsb
sub
or
xor
jp
mov
adc
stos
lcall
dec
jecxz
jb
mov
pop
mov
jmp
and
sub
call
mov
push
icebp
imul
imul
stc
jmp
test
adc
sub
clc
mov
pop
or
sub
insb
cmp
fneni(8087
xchg
xchg
push
jge
pop
cmova
jo
sub
mov
mov
lods
dec
inc
xor
lret
xor
jo
mov
mov
pop
and
mov
sbb
loopne
movsb
mov
mov
add
flds
dec
ret
out
cmpb
arpl
and
sub
inc
pushf
or
dec
les
cmc
or
mov
cmp
inc
mov
stos
and
push
into
jnp
int
lcall
inc
shrl
push
xchg
aas
loopne
insl
shlb
mov
jg
mov
xor
fwait
push
les
cmpsb
push
mov
test
adc
es
ret
popa
sub
sub
aaa
std
xor
xchg
outsb
ljmp
add
xchg
int3
fcoms
fidivrs
adc
rcl
jmp
fnstsw
dec
pop
pop
jb
jg
mov
adc
mov
call
arpl
xchg
icebp
push
inc
jno
push
xor
dec
sub
loopne
movsl
inc
scas
jae
inc
sub
cmp
popf
fwait
addr16
mov
mov
and
mov
mov
and
movsl
push
cmp
leave
aad
out
jge
outsl
test
scas
pusha
rclb
movsb
cmp
or
dec
lock
jl
test
mov
and
push
stc
bound
addb
mov
lret
data16
gs
por
add
or
push
test
sub
cs
xchg
scas
push
push
sbb
mov
ret
les
fdivl
cmpsb
nop
xchg
pop
rcrl
movsb
mov
loop
mov
adc
jg
shll
inc
push
adc
pop
dec
mov
dec
cmpsb
xor
icebp
xor
dec
xchg
and
push
pushf
lds
cmp
xchg
sahf
mov
inc
iret
and
ja
jmp
sbb
cmpsb
repz
popa
mov
jae
outsl
testl
mov
xor
sbb
decl
out
nop
movsl
jb
and
push
jecxz
cmp
and
test
inc
ret
ja
add
call
repz
sbb
mov
and
adc
aam
dec
inc
enter
ss
lret
sbb
adc
and
shl
cmp
aas
insl
and
shrl
out
jmp
or
cmp
xor
sbb
sub
sub
sub
sbb
lahf
das
xchg
nop
mov
add
push
pop
shlb
dec
inc
pop
adc
sub
fidivrs
imul
dec
lods
mov
mov
cmp
pushf
push
xorl
mov
lods
je
imul
inc
jo
mov
push
pop
cmp
or
lds
add
out
sub
dec
popf
bound
push
cmp
mov
xchg
mov
les
dec
inc
enter
repnz
fidivrs
inc
cmp
in
sti
mov
sub
or
push
xchg
pusha
and
fiadds
dec
adc
std
mov
stos
out
dec
mov
jmp
les
ljmp
push
sub
xchg
mov
push
mov
sbb
push
jnp
adc
out
icebp
pop
push
jnp
adc
mov
lea
scas
push
sub
lods
and
out
push
out
mov
dec
cmp
lcall
in
xchg
repz
test
push
lock
cld
sub
mov
mov
sub
cld
jmp
sbb
and
push
jp
inc
stc
inc
lea
fsubs
mov
jg
and
les
loope
imul
test
push
scas
les
mov
dec
sarb
mov
push
mov
repz
pop
out
or
aad
and
stos
xchg
mov
add
jmp
pop
mov
cmpsb
mov
sbb
xchg
lret
xchg
cmp
icebp
and
cmpsl
int
fcmovnbe
fistps
sbb
jae
and
xor
out
add
or
jecxz
dec
sti
es
out
mov
inc
lret
pop
adc
aaa
inc
sub
jle
clc
stos
sub
rcl
fistpl
add
sub
int3
xor
movsb
mov
mov
cmpsl
aad
aaa
arpl
fisttpl
arpl
mov
dec
lcall
mov
cmpsl
or
sub
mov
pop
mov
jp
add
inc
negb
ret
scas
adc
or
pop
gs
mov
sbb
jle
inc
push
sbb
pop
jle
inc
mov
or
adc
stos
add
inc
sti
sbb
sbb
push
add
mov
nop
lds
mov
cmp
fnstsw
jne
mov
pop
clc
and
jl
je
xor
or
cmpsb
cmc
lahf
test
les
push
je
jmp
ret
pop
dec
add
mov
pop
out
jl
sbb
mov
fiaddl
das
push
sub
std
inc
pop
adc
or
push
push
aaa
sarb
pop
outsl
and
push
test
push
dec
test
or
movsb
sbb
test
and
mov
adc
push
add
lods
lds
or
mov
inc
and
addl
dec
pop
mov
cmc
xchg
loop
jbe
sbb
push
push
jns
jecxz
adc
enter
or
repnz
xchg
rcl
mov
inc
and
dec
add
jno
aam
in
movsb
adc
inc
sub
lds
das
lods
sbb
stos
cmp
mov
dec
adc
or
xchg
cwtl
jb
cmp
jnp
adc
mov
test
cmp
adc
sbb
or
stos
adc
and
xor
sub
lcall
out
aad
cmp
aam
push
adc
mov
bound
call
aas
inc
jp
push
jnp
sub
cld
push
mov
loopne
push
sbb
int3
dec
imulb
or
out
mov
adc
js
xlat
movsl
rolb
movsl
imul
cmpsl
sbb
out
ret
add
pop
mov
hlt
or
xchg
mov
mov
stos
adc
xchg
xor
xor
pop
mov
mov
mov
xchg
or
mov
sub
add
mov
push
mov
push
movsb
or
test
sbb
and
xchg
jo
test
mov
jg,pt
inc
or
stos
test
pop
pop
movsl
push
push
cmp
aas
mov
in
push
sar
pop
and
test
rcll
mov
xchg
pop
idivl
enter
mov
cs
cwtl
mov
jmp
aad
fidivl
movsl
insl
sub
add
fcomps
les
test
sub
lcall
or
xchg
mov
jmp
push
movsb
sarl
pop
jecxz
divb
dec
call
sub
jmp
movsl
scas
nop
fcomp
dec
mov
bound
daa
pop
les
xchg
adc
sub
push
mov
push
lahf
cld
inc
inc
cmp
mov
jb
les
pop
sub
lds
mov
inc
lods
mov
lahf
fimuls
pop
or
push
les
mov
push
mov
jb
inc
ficoms
pop
mov
push
add
and
mov
xchg
mul
or
sbb
mov
sti
xchg
xor
sub
loope
rorb
faddl
cmpsb
push
mov
mov
daa
xchg
sub
sti
adc
inc
add
cmpsb
push
adcl
cmpsl
cltd
movsl
xchg
xor
cmc
outsb
push
sub
sub
sbbb
xor
push
fstpt
sbb
aam
pop
add
aaa
xchg
sub
mov
fnstsw
and
xchg
or
xor
rcrb
pusha
and
pop
mov
lret
jge
fiadds
xchg
or
adc
jo
test
xor
xchg
and
mov
dec
outsl
cs
lea
adc
mov
cltd
dec
mov
cmp
mov
sti
sahf
mov
mov
inc
fistpl
pop
arpl
or
lock
lcall
mov
stos
fildll
int3
paddsb
dec
out
xchg
jecxz
and
pop
mov
sbb
enter
outsb
and
or
insb
hlt
and
pop
movsl
incb
bound
out
or
pop
jbe
mov
out
sbb
lcall
mov
push
test
jno
add
aad
sbb
pop
pop
bound
jecxz
arpl
into
ret
xchg
push
push
dec
jmp
pop
shlb
sti
lahf
xchg
xor
out
arpl
jmp
movsl
jo
cmc
sub
fsubp
mov
xor
xchg
pop
mov
adc
lods
js
mov
xor
sub
mov
or
test
scas
or
dec
push
pop
loop
dec
add
push
mov
cmp
sub
imul
and
imul
pop
lds
mov
lcall
or
in
or
es
pop
mov
shlb
cmp
cmpsl
ds
inc
inc
std
mov
cli
mov
int
pop
frstor
adc
pop
and
mov
pop
cli
and
adc
sub
fsubrp
lock
cmpsl
insb
push
inc
push
sub
les
sahf
jp
jmp
xorl
xchg
push
fs
f2xm1
jp
mov
sbb
pop
gs
dec
gs
inc
xchg
mov
push
and
int3
sti
pop
mov
les
sub
push
pop
int3
push
push
loopne
inc
sub
fwait
popf
test
and
jmp
gs
xor
adc
jae
push
cmp
movsl
notl
js
and
lret
sbb
out
test
push
rolb
in
sbb
lods
xor
xchg
adc
dec
lcall
lods
cmp
mov
jns
and
mov
adc
jp
adc
cwtl
sbb
xor
mov
dec
and
inc
pop
sub
lds
add
out
jecxz
mov
jge
jmp
mov
leave
es
push
xor
sub
scas
popa
add
mov
addr16
mov
mov
lcall
enter
sub
pop
and
sub
or
add
mov
fbld
cs
adc
sub
mov
or
into
shlb
sub
daa
ja
adc
jle
jns
stc
jg
and
js
mov
test
cld
pushf
popa
xlat
les
push
test
int
mov
sub
xor
std
jo
jle
cmpsl
out
jns
decl
mov
lea
sub
push
icebp
add
and
dec
lods
fnsave
mov
enter
lds
roll
or
jg
test
cltd
js
shrl
std
push
movsb
cmpb
cmp
push
mov
mov
adc
mov
mov
pushf
daa
cwtl
ret
sub
movsl
xchg
in
int3
fucompp
daa
push
jp
inc
sub
clc
fcmovne
es
pop
jmp
and
fldenv
jmp
adc
sub
insb
out
sub
add
xchg
gs
adc
int3
movsb
int3
xchg
sub
iret
les
adc
jns
roll
or
sub
pushf
das
mov
inc
adc
push
xchg
adc
and
adc
xor
xor
shlb
cmc
xchg
pushf
nop
push
orb
sub
jg
mov
mov
mov
movsl
imull
mov
inc
inc
int
inc
and
or
mov
aas
cwtl
adc
sbb
inc
pop
cmp
sub
scas
sub
das
les
mov
hlt
jno
sub
icebp
xor
adcb
xchg
pop
testl
scas
mov
out
xlat
sub
sahf
or
les
jbe
inc
cmpxchg
xchg
mov
in
das
fisubl
hlt
das
jo
jae
sub
imul
jo
imul
lock
nop
push
pop
mov
add
mov
adc
inc
mov
push
jle
and
lock
push
ljmp
fidivrl
xchg
mov
ret
iret
scas
push
out
xor
or
or
sbb
inc
jo
pop
and
les
repnz
and
and
cs
jp
xorl
test
stos
mov
dec
mov
stos
push
dec
test
xor
push
or
sub
or
data16
aas
inc
jo
test
rolb
ret
sbb
dec
mov
sub
lods
into
shr
enter
in
mov
mov
sarl
test
jbe
dec
out
mov
dec
sub
imul
and
xor
adc
jg
lcall
nop
xchg
jae
outsl
mov
loopne
nop
jge
test
out
xor
inc
out
inc
les
and
jp
lret
inc
sub
lods
mov
imul
and
adc
xacquire
xchg
idivl
pop
cmp
and
xchg
or
mov
adc
iret
lret
and
repnz
xor
daa
cmp
popa
inc
xlat
aas
mov
xchg
jns
fidivrl
int3
or
sbb
mov
adc
es
sub
cmpsl
add
clc
shrb
cvtpi2ps
lock
movsb
push
daa
out
pop
mov
push
shr
jno
mov
or
push
pop
pop
cli
pop
pop
out
das
mov
pop
jno
xchg
out
aaa
mov
jnp
cmp
xor
jg
inc
std
out
dec
cmp
test
dec
cmpsl
daa
sbb
inc
scas
sbbb
pop
sbb
pop
out
jbe
dec
xchg
cmpsb
sub
cmpsb
enter
lret
fwait
cmpl
push
test
inc
popf
xchg
cld
adc
sub
mov
jle
mov
cs
sbb
push
incl
scas
pop
add
inc
or
sub
mov
imul
adc
in
es
subb
or
adc
bound
into
add
add
stos
popa
imul
xchg
hlt
mov
in
lahf
stos
ficoms
xchg
lock
jl
notl
adc
mov
push
mov
pop
int3
add
sbb
scas
call
cmp
repz
xchg
cmovb
jns
sbb
aam
repnz
add
jl
fisubrs
lret
mov
clc
stos
sub
sbbb
pushf
scas
mov
mov
cmpl
lods
leave
or
mov
notb
or
in
scas
cli
mov
push
jo
dec
push
add
pop
jnp
jecxz
sbb
mov
mov
cwtl
test
shlb
ja
mov
scas
sarl
or
mov
sub
pop
notl
out
jg
test
fcmovne
adc
and
xor
cmp
sub
mov
push
xlat
lret
call
push
xchg
push
push
inc
cmp
mov
loop
cmpl
mov
xor
aas
push
jle
and
cmp
pop
jne
aaa
or
and
test
int3
add
push
push
mov
push
fnstsw
jecxz
fucomip
cmp
inc
outsl
out
jno
mov
adc
cmpsb
pop
dec
xor
dec
add
sarb
cmp
and
sbb
in
mov
lret
outsl
jo
sbb
bound
sbb
adc
jbe
addr16
or
mov
xchg
cs
sub
pop
or
jg
or
cmp
mov
mov
cmpsb
push
inc
jge
cmpsb
or
inc
in
xor
nop
mov
stos
sbbb
into
repnz
aaa
loope
pop
cwtl
lods
and
mov
mov
iret
call
and
stos
adc
les
mov
pop
jl
mov
test
in
leave
inc
push
test
lods
xor
mov
popf
fisubs
lcall
push
outsl
adcb
outsb
and
lock
dec
mov
cld
dec
in
insl
ret
inc
pushf
scas
nop
or
pushf
xchg
les
and
fs
jns
test
cmc
push
mov
and
add
sub
lcall
inc
xlat
stos
adc
and
push
lods
or
out
cmp
mov
outsl
jo
aaa
sub
or
and
imul
popa
pop
call
dec
cmp
pop
mov
in
sub
xchg
and
pop
xchg
rcll
or
and
nop
mov
pop
push
sbb
cmp
push
nop
sbb
sub
mov
jg
mov
mov
cld
add
lcall
enter
jns
dec
fs
stos
mov
cltd
sub
inc
sbb
movsb
fists
test
out
test
and
add
dec
sbb
adc
out
jae
push
jg
push
jno
sarb
adc
sub
lods
jnp
lcall
xor
outsl
jne
xchg
jmp
mov
call
popf
lods
cmp
dec
sbb
adc
test
jmp
pop
inc
ss
lahf
lahf
adc
adc
mov
sub
adcl
mov
addb
xchg
sub
das
add
push
mov
inc
out
pop
bound
adc
and
repz
pushl
out
dec
iret
pop
jecxz
loopne
scas
rdmsr
mov
out
inc
sub
iret
test
test
or
mov
fisubrl
test
into
test
mov
xor
mov
stc
sub
xor
adc
and
sub
xor
mov
mov
test
push
movb
mov
cmpsb
xchg
sub
jg
cmp
fs
xchg
mov
or
inc
adc
mov
pop
lret
pop
or
sbb
cmpsb
and
aas
test
cld
inc
pop
into
movsl
cltd
decb
iret
pop
xor
xchg
pushf
sub
dec
dec
or
shll
and
subl
cwtl
xchg
xchg
test
leave
outsb
negl
outsl
jo
mov
sub
adc
enter
enter
cmpsl
cs
scas
out
mov
sbb
xchg
mov
adc
stos
push
daa
cmp
mull
fs
push
repnz
jb
les
push
jp
in
fidivl
and
popa
sbb
daa
push
add
mov
pop
push
es
aaa
fidivrl
and
dec
stos
out
xchg
and
test
orb
rcrl
cmp
cmpsb
out
adc
sbb
xchg
adc
adc
popf
pop
je
pop
out
negl
cld
xchg
mov
pop
pop
add
stos
xchg
jmp
seta
push
sub
cmp
fldenv
lahf
lahf
cmp
imulb
dec
jp
jae
dec
dec
inc
mov
add
sub
scas
and
dec
rolb
jmp
sub
mov
push
sbb
push
test
xor
xor
or
jb
adc
cs
lret
aad
xor
mov
in
jo
sbb
add
mov
push
cmpsl
mov
jmp
mov
pop
inc
push
push
sub
cwtl
outsl
mov
std
adc
bound
add
pop
nop
rorb
cmp
jb
pop
subl
mov
stos
mov
mov
dec
ret
sub
cmc
pushf
adc
movsb
xor
aad
jl
inc
xor
inc
mov
mov
out
push
cmp
arpl
mov
flds
sbb
sbb
or
sbb
mov
std
notb
mov
sub
or
nop
cmp
or
test
dec
xchg
and
lods
push
loop
test
xor
imul
sub
mov
dec
or
pop
sbb
aas
and
sbb
sbb
icebp
sbb
push
jle
sub
adc
sbb
subps
lods
jecxz
lret
dec
xchg
xchg
fsubp
je
adc
pop
sub
jbe
and
jg
sub
push
add
movl
push
adc
mov
or
pop
dec
ss
outsl
xor
nop
adc
ss
cmp
sub
mov
pop
outsl
int3
xor
into
inc
and
mov
inc
inc
sub
jns
and
outsb
lea
xchg
lds
xchg
lock
cltd
mov
cmp
mov
and
jb
push
push
data16
ljmp
movsb
mov
popf
jbe
mov
push
scas
adc
lock
pop
pop
and
push
push
and
aaa
std
cli
sub
mov
fildl
mov
or
in
scas
loop
mov
jbe
jnp
sub
out
mov
inc
iret
pop
inc
cmp
or
inc
mov
je
ficoml
imul
js
mov
add
xor
fidivrl
xor
jae
inc
pop
dec
pusha
add
std
xchg
cs
je
shll
and
dec
xchg
jae
adc
lahf
popf
jp
jns
ss
notb
mov
mov
loop
ljmp
mov
xchg
mov
std
xchg
mov
mov
xor
cli
mov
icebp
sub
leave
push
and
sub
or
idivb
mov
in
repz
xor
out
xchg
ljmp
rcr
mov
mov
add
insl
in
aad
mov
addr16
in
stos
mov
movsb
mov
dec
cmpsl
push
and
xchg
lods
lods
sub
mov
dec
pop
ds
das
pop
mov
pushf
shll
pop
cli
enter
jmp
cwtl
pop
push
js
bound
adc
gs
add
or
lds
and
nop
jp
icebp
mov
test
jge
cmpb
repnz
subb
adc
mov
int3
stos
je
mov
sub
push
in
adc
cmp
ss
fisubs
pop
inc
jle
in
and
push
imul
lret
in
adc
dec
mov
dec
xorl
out
rclb
mov
repnz
test
xchg
std
dec
insl
scas
call
aaa
xchg
xor
daa
pop
cld
call
and
mulb
add
fadd
imul
arpl
xlat
jecxz
mov
push
ljmp
xor
dec
inc
loope
mov
mov
lods
and
mov
outsb
lods
mov
or
cmp
pop
and
xchg
sub
bound
xchg
adc
in
cmp
dec
or
sbb
inc
cmpsb
xchg
test
loop
lret
cmp
das
xlat
sub
sbb
and
cwtl
inc
inc
outsl
rcrl
js
mov
and
test
hlt
loop
in
jns
lret
in
dec
aas
xchg
xchg
mov
mov
inc
sub
cmp
push
repnz
fcmovnbe
xchg
mov
pop
or
add
mov
pop
aad
and
pop
out
mov
or
sbb
cld
inc
mov
lret
mov
and
xchg
daa
add
jbe
shr
and
and
push
xchg
mov
lret
outsb
jbe
add
pop
cmovge
push
out
mov
out
imull
popf
jbe
cmpsb
mov
mov
adc
xor
add
into
pop
push
xor
and
sub
mov
mov
lds
test
fists
daa
xor
decl
into
sub
mov
out
jo
mov
aam
ficompl
cmp
add
fidivrs
jo
mov
movsl
push
jae
adc
rorb
fnstenv
test
jg
adc
rclb
push
aas
or
pop
jo
in
iret
jo
fmul
and
add
out
xchg
add
out
out
sub
inc
movsl
jle
scas
mov
daa
int3
mov
xchg
xchg
sub
sbb
pop
inc
inc
jmp
fwait
push
add
sub
adc
xor
xor
in
dec
jno
movsl
mov
addr16
movb
add
adc
out
xor
das
or
das
pop
mov
and
mov
or
jle
adc
ds
xlat
dec
sub
cmp
and
popa
movsb
pop
sub
ds
lret
add
pusha
jecxz
or
sti
out
out
push
pushfw
outsl
xor
je
push
push
adc
adc
stos
and
bound
xchg
andb
out
sti
and
imul
mov
and
sbb
sub
cmp
pop
inc
inc
in
lret
dec
and
test
and
in
sarb
pop
dec
call
sub
dec
inc
rorl
sub
in
add
sbb
or
push
popl
cmpsb
adc
loope
dec
fs
pop
or
cmp
sbb
cmp
out
mov
scas
mov
stos
adc
jns
dec
push
daa
jp
sub
inc
in
notl
mov
test
sub
sarb
cmpsl
push
enter
out
lock
and
sbb
inc
and
les
pop
lea
inc
and
aam
lds
and
sbb
sbb
and
mov
and
xchg
fisubl
push
lret
mov
push
addr16
pop
sbb
sub
mov
lock
ljmp
dec
fwait
sbb
shll
jle
mov
dec
es
sti
sub
and
and
xchg
or
or
inc
adc
and
and
stos
mov
sbb
add
insb
push
push
mov
sbb
in
dec
cmp
shrl
rcrl
xor
lock
adc
aam
inc
dec
je
je
loop
movsb
mov
or
les
sub
pop
and
xchg
in
push
jge
jp
out
adc
dec
rorl
inc
or
pop
mov
test
cmp
movsb
aaa
inc
cwtl
imul
jns
xchg
lret
sti
in
inc
cmp
mul
jb
mov
cmp
dec
stc
inc
daa
cld
je
jcxz
add
dec
cmp
mov
jg
rorb
jg
jbe
dec
sbbl
lods
fs
or
daa
and
adc
xorl
adc
mov
sti
and
loope
cltd
pop
mov
sub
xchg
xchg
inc
jle
and
xorl
jle
cmp
das
and
jo
int
pop
movsw
insb
inc
cmp
bound
lock
cmp
and
push
sub
les
mov
outsl
lods
inc
pop
cld
or
aas
cmpsb
push
stc
dec
push
or
xchg
sbb
ror
dec
jmp
dec
shlb
jmp
xor
or
fwait
pop
jmp
in
push
mov
and
inc
scas
or
stc
xchg
ret
pop
sub
cmp
out
jno
xor
mov
shrb
fdivrl
dec
mov
fsubs
nop
mov
shlb
lds
xchg
aad
pop
shrb
enter
loop
arpl
sub
pushf
add
add
notl
ds
dec
sub
add
jae
pop
adc
xor
push
and
dec
and
mov
adc
xchg
push
js
fldz
xor
shl
in
or
push
in
and
sbb
jecxz
jl
inc
iret
sub
nop
out
ror
flds
sub
movsb
adc
repnz
adc
popf
jge
jae
cmp
and
mov
dec
scas
and
xchg
inc
das
mov
fldt
repz
mov
cs
cmp
dec
inc
or
inc
ret
or
outsl
xor
cli
aad
mov
inc
cmp
fs
push
into
xchg
lods
push
dec
lds
ret
inc
adc
mov
dec
pop
push
jg
or
outsb
sub
sub
inc
sbb
sub
and
xchg
adc
and
das
sub
xor
sub
notl
lock
dec
pushf
out
jne
jns
gs
sar
je
mov
cmpsb
sub
mov
xlat
out
pop
cmp
aad
adcl
outsb
sub
lret
dec
cmp
pop
lock
shr
inc
out
jle
test
xchg
sub
cmp
xchg
bound
and
push
or
xchg
add
inc
jmp
mov
daa
xchg
adc
dec
lahf
mov
dec
aas
dec
lods
mov
popf
pop
jbe
jp
dec
setns
sub
pushf
dec
daa
and
in
push
xchg
pushf
pop
xchg
mov
enter
sbb
push
enter
dec
ror
jnp
and
sti
and
sbb
and
test
into
icebp
adc
sub
sub
inc
sti
enter
fstl
mov
jae
pop
addps
sub
xor
aam
repz
mov
mov
int
cwtl
xchg
sub
dec
adc
adc
mov
adc
ja
xchg
mov
cli
cltd
jno
aad
lods
in
les
dec
insb
les
sub
pop
repnz
pop
jb
lea
repnz
adc
inc
incl
and
and
push
cmp
adc
adc
mov
movsb
lods
adc
out
cmp
dec
xor
push
mov
sti
leave
ret
cltd
outsb
and
bound
pop
insl
push
push
in
lret
mov
in
push
test
call
sbb
push
das
mov
sar
sbb
mov
imul
sti
or
push
pop
repz
cmp
inc
xor
jno
les
or
adc
in
lret
stos
inc
jge
idiv
lods
test
fisttpl
jo
inc
aam
mov
mov
rorb
repz
ss
cld
sub
ficoms
dec
daa
inc
mov
sbb
fidivs
jno
paddsb
push
in
lret
pop
push
dec
test
cmc
push
cmp
lods
js
sahf
popa
mov
jp
out
adc
lods
mov
in
jns
jmp
inc
sahf
popa
lds
imul
js
ss
push
jg
mov
adc
push
dec
xor
mov
xchg
or
decl
xor
movsb
filds
dec
pop
dec
movsb
mov
ret
mov
fbld
push
repz
nop
mov
or
addr16
lret
aaa
imul
daa
js
rolb
sub
push
jno
dec
out
pop
imul
enter
sub
pop
mov
aas
lret
mov
aaa
shlb
repz
sub
js
pop
mov
lret
mov
and
cmp
inc
mov
xchg
pushf
mov
and
rcrl
outsb
push
shll
cld
mov
sbb
sub
clc
inc
cmpl
test
mov
negb
call
adc
out
loop
jns
cs
enter
scas
push
jae
and
mov
pop
cmc
sbb
ja
mov
mov
cmp
pop
mov
inc
daa
fs
adc
cmp
dec
pop
decb
enter
mov
pop
cmp
bound
cmc
mov
sahf
pop
pop
sub
aam
fdiv
cmc
daa
xor
pop
mov
push
dec
fcomps
inc
jmp
jne
pop
dec
mov
push
je
leave
out
add
jle
add
jle
jnp
cmp
inc
jle
mov
cwtl
dec
inc
cmp
push
jb
aas
inc
xlat
pop
sub
adc
fsubr
pop
sahf
addb
sub
mov
stos
iret
mov
sub
imul
push
dec
adc
mulb
insb
mov
mov
sub
dec
or
xchg
das
mov
or
push
test
sub
push
push
pop
clc
incb
adc
xchg
mov
sub
dec
lret
xor
lahf
jb
sti
mov
adc
mov
adc
outsl
adc
push
cld
fadd
dec
sub
sub
stc
jg
mov
push
mov
shl
adc
xchg
inc
out
test
mov
je,pt
push
push
xorl
pop
clc
incl
fbld
jl
out
fsubrl
push
call
and
aam
cmp
push
push
lcall
jae
sbb
sahf
adc
scas
xchg
test
cwtl
aad
mov
inc
or
push
mov
sahf
and
iret
xor
jbe
mov
sub
imul
jmp
out
and
fists
adc
ret
mul
adc
rcl
and
fs
and
xor
lods
and
icebp
adc
js
push
scas
mov
loop
popa
adc
xor
and
and
adc
jecxz
and
and
aad
daa
adc
mov
add
cld
mov
fildl
sub
in
call
mov
dec
mov
iret
sub
cmp
sub
push
dec
sub
pop
cmp
sbb
sub
gs
mov
pop
jp
xchg
fistpll
mov
mov
and
pushf
xor
int3
cmp
dec
pop
inc
or
xor
test
gs
mov
sub
sbb
stc
and
and
fcmove
and
cld
jbe
adc
push
inc
in
decl
aam
mov
orb
mov
loop
pop
dec
inc
enter
xchg
mov
dec
ret
cmpsb
test
sbb
sbb
cs
outsl
mov
popa
add
sbb
sbb
or
inc
stos
dec
les
push
popf
ss
fbld
fisubs
jecxz
shll
pop
cwtl
inc
inc
push
mov
gs
pop
adc
es
aaa
sub
lahf
stos
data16
add
xchg
fists
xchg
les
inc
test
mov
cmpsb
stos
or
cwtl
aam
jle
lahf
cltd
sbb
sub
inc
sub
mov
adc
pop
mov
test
sbb
inc
or
repnz
ss
sbb
inc
subb
ret
or
mov
mov
lret
pop
mov
cmp
bswap
or
xchg
xchg
pop
mov
mov
pop
and
cwtl
dec
ss
sub
outsl
rorb
gs
jmp
popf
sub
or
sub
lret
jg
fsts
xor
mov
das
cmp
sbb
outsb
pop
cmp
sub
lods
loop
pop
js
scas
lock
sbb
aad
cmc
inc
mov
stos
adc
push
pop
gs
cmc
inc
cmp
mov
sbb
mov
addb
and
scas
loop
mov
scas
push
je
inc
pop
or
adc
sub
stos
cmpsl
or
ficoml
shl
or
icebp
or
cmp
sbb
cmpsb
jo
jecxz
cpuid
lods
or
testl
in
and
sub
and
scas
rcll
adc
cs
addr16
dec
pop
jle
dec
sub
imul
movsl
jnp
sub
pop
sub
popf
cmpsl
pop
jnp
push
std
jbe
sub
jg
sub
aam
aam
inc
adc
out
sub
jmp
aam
push
inc
xlat
and
inc
inc
pop
sbb
sti
jp
stos
inc
adc
scas
orb
stos
mov
pop
loopne
imul
pop
push
jl
movsl
jae
test
or
sub
sub
clc
movsl
mov
adc
aam
push
inc
and
repnz
adc
addr16
fiadds
lods
cs
loope
jo
xor
fldcw
pop
sbb
adc
movsl
push
sub
cmpsl
jnp
daa
push
imul
sti
repnz
sbb
push
imul
push
js
dec
mov
mov
lret
test
pop
push
inc
cmp
sub
inc
and
mov
sub
push
dec
divl
pop
out
pop
mov
fbstp
jbe
es
inc
pop
adc
movsb
jmp
mov
push
jmp
movsb
xor
and
mov
lret
hlt
xor
push
test
pop
cmpsl
or
les
adc
rolb
mov
inc
push
adcb
sarb
lods
jge
jle
popf
lds
mov
pushf
add
in
rolb
call
ja
sub
jp
lahf
inc
add
jo
out
enter
scas
mov
push
pop
push
rcll
jg
repnz
repz
fldenv
inc
out
jb
mov
pushf
adc
test
fldpi
outsb
jmp
jbe
lret
aad
adc
mov
inc
xor
insb
cmc
xor
pop
mov
sub
into
fsubrs
rol
adc
adc
clc
sar
leave
push
inc
adc
dec
rorb
in
dec
daa
pop
imul
cmp
pop
pushf
add
cmp
xchg
cld
push
inc
xchg
gs
addr16
fdivr
cmp
daa
shrl
ja,pt
out
fisubrs
push
pop
clc
pop
xchg
push
jo
aad
or
jl
stc
cmp
and
mov
cmc
es
adc
and
jb
push
xor
in
cmp
and
jno
cmp
in
cmp
scas
adc
les
in
push
cltd
lahf
or
jmp
out
pop
aad
idiv
das
loopne
repnz
add
pop
iret
bound
jne
xor
shl
jbe
cmp
mov
xchg
imul
popf
lock
aas
cs
adc
jecxz
enter
sub
loopne
fisttpll
mov
sti
jle
pop
pop
cmpsl
or
xchg
xor
mov
jns
movsb
jle
cmc
pop
in
add
sub
adc
cld
lea
add
and
imul
xchg
jge
icebp
fs
and
jle
push
test
push
mov
nop
cltd
cmp
test
std
cs
adcb
out
decb
lret
xchg
xlat
cmp
cmp
bound
mov
cmp
cmpsl
dec
jecxz
shlb
inc
pop
bound
dec
call
inc
dec
aaa
fdiv
xor
push
insl
ret
sub
adc
pop
in
sub
dec
pop
xchg
add
hlt
ret
dec
dec
lea
cmp
std
sarl
xchg
pusha
xlat
dec
push
or
dec
rcll
sahf
test
cmpsl
rclb
loope
outsb
mov
js
iret
mov
and
sub
pop
jo
lock
out
xlat
icebp
jle
jge
inc
xchg
xchg
es
arpl
mov
mov
sub
push
or
stos
inc
bound
push
ret
in
fsubrl
push
push
daa
add
mov
pop
xor
cwtl
fucomp
push
sbb
ficomps
daa
std
sbb
jecxz
mov
aas
enter
jle
mov
movsb
mov
lret
les
adc
fimuls
and
mov
imul
mov
xchg
rclb
jb
and
imul
push
dec
mov
les
stc
xchg
xchg
push
dec
pop
cli
push
rclb
jmp
and
shl
and
cwtl
repnz
movsb
mov
cmc
mov
gs
jecxz
mov
cmpsl
ljmp
cmp
push
adc
loope
and
repnz
mov
roll
icebp
push
pop
push
jb
jecxz
sub
rolb
adc
popf
in
imul
sub
outsb
cltd
adc
sub
inc
dec
sub
sbb
ret
ret
les
ds
fisubs
shrb
adc
decl
fldl2t
and
mov
mov
add
add
inc
adc
ljmp
xor
inc
arpl
cli
fwait
arpl
jo
push
loop
push
cmp
and
mov
scas
fbld
icebp
adc
adc
sub
out
rorb
movsl
xor
hlt
mov
adc
and
inc
or
inc
outsl
iret
push
movl
jl
dec
xchg
ljmp
pop
push
shlb
cltd
sar
or
fisubrs
mov
push
scas
jno
loop
aas
cld
add
test
cmp
jns
pop
mov
scas
cs
inc
push
inc
inc
inc
sub
ret
movsl
push
movsbl
cmp
mov
mov
lcall
int
or
jmp
push
and
jo
aas
sub
pop
mov
call
cmpsl
pop
into
out
mov
push
lds
mov
xor
fsts
lock
aam
pop
fisubs
lret
mov
sub
and
pop
and
mov
inc
repz
in
inc
ds
ljmp
pop
insb
ds
mov
adc
push
push
and
bound
dec
lret
xchg
repz
dec
jne
jmp
sti
das
loop
sahf
stos
test
and
or
iret
mul
ret
push
int3
lea
test
dec
daa
xchg
xorl
mov
stos
and
inc
subps
test
leave
pop
and
add
dec
sub
mov
sti
iret
stc
dec
xor
jle
les
xchg
sbb
inc
mov
fldt
jo
les
pop
xlat
je
mov
push
pop
pop
ret
stos
fisubrl
hlt
adc
add
sub
rcll
dec
jge
xchg
inc
inc
adc
xor
out
les
inc
or
and
shrl
xor
cs
adc
mov
sub
xchg
dec
cmp
mulb
sub
push
jo
xor
sub
mov
dec
scas
mov
xlat
jg
in
lods
pop
arpl
aas
pop
dec
std
sub
bound
mov
jo
stos
and
sub
or
cmp
dec
mov
das
or
test
jl
push
jae
ficompl
and
pop
or
ss
mov
mov
inc
or
jnp
daa
and
repz
sub
test
ja
push
xchg
pop
das
jle
xchg
push
std
and
lods
loop,pn
push
stos
mov
adc
inc
mov
enter
xor
out
ret
leave
shrb
dec
loope
mov
sbb
test
sbb
dec
outsb
jle
jbe
test
mov
sub
pop
mov
ficomps
pop
push
dec
jno,pn
push
add
or
js
mov
outsb
mov
xor
enter
xchg
pop
xchg
outsl
push
and
bound
rcrb
push
push
push
push
add
fs
adc
aam
sub
push
rclb
out
mov
jae
and
jnp
mov
bound
add
pop
and
xchg
adc
lcall
mov
adc
xor
add
inc
lods
mov
sub
cmove
or
and
stos
xor
cmpsb
fadds
xchg
scas
call
cmpsb
lock
xchg
xlat
inc
ja
loop
dec
inc
das
dec
mov
xchg
mov
inc
sbb
iret
mov
and
jg
out
sahf
mov
dec
out
mov
adc
pop
idiv
sbb
inc
sub
push
scas
out
mov
and
mov
and
inc
test
insb
push
das
xlat
jge
fldt
xor
out
mov
mov
pop
mov
fnstenv
aaa
xor
mov
cmc
sbb
popa
and
pop
and
lahf
or
adc
and
mov
push
sbb
inc
mov
mov
nop
ja
or
dec
cmp
push
mov
jo
or
scas
rcrl
xchg
pop
ret
inc
cmp
push
mov
addr16
push
outsb
or
jle
sub
cltd
mov
test
mov
add
jbe
in
out
sub
add
inc
subl
xor
and
and
adc
mov
pusha
xchg
cwtl
mov
jae
adcb
ds
repnz
xchg
dec
add
xchg
pusha
dec
lret
inc
mov
imul
and
jno,pt
pop
mov
fisubl
inc
adc
cmpsl
add
pusha
in
xchg
fimull
imul
test
jo
dec
mov
outsb
pushf
lahf
dec
adc
sub
mov
std
push
fildll
and
adc
pop
push
cmpsb
push
lds
pop
sub
popa
inc
inc
xor
xchg
xor
push
adc
xchg
push
sar
shrl
inc
inc
punpckldq
repz
test
sub
fldl
dec
lods
mov
inc
jo
adc
xor
lret
int3
clc
cmp
mov
add
les
sbb
cmp
cli
adc
out
mov
sbb
inc
pop
and
fcompl
sbb
pop
xchg
shlb
cs
push
nop
sub
mov
dec
jo
test
repz
movsb
push
xor
jp
out
dec
mov
mov
lahf
inc
mov
pop
shll
repz
sub
cmp
in
test
pop
add
std
dec
stos
daa
cld
mov
push
out
mov
dec
in
jl
inc
pop
lahf
pop
pop
in
dec
sub
jecxz
xchg
loop
inc
push
mov
in
jae
sbb
aas
outsl
in
cs
mov
sub
push
mov
push
pop
sub
jo
ss
sti
outsb
push
cwtl
inc
sub
cs
pop
pop
xchg
add
xchg
and
pop
xor
push
out
rolb
xchg
out
and
push
xchg
pop
dec
push
mov
adc
pop
call
xlat
or
fcmovnbe
inc
stos
xchg
sub
dec
outsl
mov
xchg
jae
dec
and
add
sub
movd
sub
dec
push
imul
and
push
dec
or
mov
ret
sub
lahf
inc
nop
sub
cmp
sahf
push
mov
sub
call
pop
sub
sub
in
cmp
shrl
sub
and
je
out
sahf
cli
test
inc
stc
pop
addr16
fldt
dec
ljmp
jo
rorb
shlb
pop
xchg
mov
sub
aad
loopne
xor
xchg
xchg
iret
in
fildl
data16
and
and
js
mov
mov
sub
nop
sub
negl
aas
lahf
jns
xchg
add
cmp
jp
daa
ja
mov
imul
pop
stos
xor
lea
push
xor
xor
dec
test
pop
cmp
pop
and
xor
inc
clc
and
inc
das
dec
mov
das
and
or
je
push
sbb
shll
test
stos
xchg
addr16
pop
sti
movsl
or
adc
push
rorb
jle
imul
xchg
inc
sbbb
dec
loop
add
lcall
push
ret
push
cmp
test
ret
pop
jmp
fildll
das
comiss
setno
lahf
daa
dec
int
xlat
jge
sub
sbb
pop
or
mov
dec
xchg
dec
or
and
aaa
aam
inc
xlat
int
ficoml
inc
mov
in
sti
lret
fnstcw
cli
mov
aaa
cmc
insb
fcmovbe
stos
subl
adc
scas
cs
dec
vxorps
les
addb
pushf
add
xlat
dec
ror
push
daa
sub
cmp
fldenv
clc
jmp
push
jg
pushf
in
push
lret
jnp
inc
aas
std
jl
dec
sub
ret
push
dec
pop
push
mov
aad
adc
add
adc
fcomip
or
clc
insl
idivl
dec
jg
call
inc
lret
ja
sub
test
aas
push
ja
mov
xchg
shrl
arpl
insl
ja
inc
les
rorl
pop
inc
bound
outsb
ja
adc
dec
mov
stos
inc
les
mov
xchg
enter
xor
mov
mov
xchg
jno
cmp
enter
les
pop
popf
jns
dec
aam
xchg
jle
ja
xchg
jl
test
jecxz
mov
dec
sti
and
adc
or
jl
in
and
dec
fldt
push
cmp
xchg
lret
xchg
push
mov
cmp
and
shll
mov
mov
mov
cmp
mov
test
inc
cld
or
xchg
xor
andb
add
push
cmp
fcmovbe
xchg
push
pop
inc
cmp
sqrtps
inc
mov
jno
cmp
lahf
hlt
nop
icebp
aas
pop
ret
dec
mov
push
add
in
inc
mov
sahf
daa
ja
and
cmp
inc
push
inc
inc
jmp
fwait
push
aas
stos
mov
insl
imul
mov
idivl
dec
xor
cmp
jle
sbb
cmc
lea
xchg
push
shrl
imul
mov
cmp
out
cmc
jg
sub
sub
cltd
test
cmp
jge
xchg
and
xor
arpl
dec
aaa
sub
push
xchg
push
cmpsb
mov
push
mov
ss
popf
and
pop
pop
add
cmp
pop
mov
mov
mull
xlat
xlat
dec
das
mov
or
mov
pushl
sub
mov
xor
pop
and
movsl
out
jecxz
adc
mov
dec
cli
inc
xchg
xlat
cmpsb
and
stos
sub
gs
aaa
out
ja
iret
cs
popf
jp
and
push
pop
and
sti
xor
pop
or
into
push
es
inc
loope
pop
ja
dec
jae
xor
add
loop
push
pop
das
arpl
mov
mov
pop
aaa
mov
sarl
adc
xchg
in
cmp
jle
push
repnz
dec
in
cmpsl
pop
xchg
loope
xchg
mov
jmp
popl
cli
lcall
push
dec
data16
sub
jne
movsb
xor
mov
mov
sub
adc
divb
popa
sub
push
sub
xor
and
daa
push
cmp
mov
sub
lock
daa
std
and
push
icebp
dec
test
dec
fcomps
cmp
dec
cltd
dec
sub
inc
insb
xchg
out
mov
cmp
and
into
jp
loope
fbld
das
jnp
icebp
adc
push
in
dec
cpuid
lcall
and
xor
adc
mov
sub
jne
mov
sub
jae
push
in
ja
mov
pop
xor
push
or
xchg
or
mov
ljmp
cmp
daa
xchg
cmp
les
dec
push
lret
cmp
add
popa
xor
inc
mov
mov
nop
and
sti
dec
fists
aaa
mov
mov
adc
loope
cmp
pushf
jae
push
int
mov
xor
ss
ret
sti
mov
add
push
ds
pop
cmpl
jnp
fs
pop
sub
push
dec
stos
bound
rclb
sbb
sti
das
add
ret
decb
dec
xchg
mov
xchg
stos
shl
ret
push
xchg
outsb
xor
dec
inc
dec
repz
mov
shlb
lds
and
sub
rcl
icebp
inc
dec
faddl
in
dec
aaa
bound
out
pop
add
xorb
test
push
movsb
cmp
mov
pop
sbb
pop
lret
in
add
es
add
sub
dec
sbb
add
inc
jp
jge
cmp
cmpsb
and
pop
push
lret
ficoms
les
dec
outsb
mov
jg
mov
jne
sbb
and
push
scas
gs
xchg
scas
sahf
sub
inc
lahf
sbb
movsb
les
mov
call
jl
les
push
cmp
scas
push
in
inc
push
jg
xor
jmp
scas
repnz
pushf
xchg
insl
sub
in
mov
ss
mov
cmp
push
and
and
dec
test
xchg
mov
mov
int
xchg
cs
mov
je
adc
push
int3
dec
mov
sbb
jg
and
mov
inc
cltd
jg
dec
add
iret
mov
rorl
mov
inc
sbb
mov
cmpsb
push
or
arpl
dec
dec
cmp
push
cmp
push
das
fnsave
aaa
add
sahf
push
pop
vphaddudq
push
insb
dec
xor
adc
jno
into
cs
jecxz
pop
aam
stos
cmpl
xlat
jns
cltd
pop
push
xchg
daa
xchg
push
lahf
sbb
idivb
stos
or
or
call
xor
inc
or
push
pop
sub
movsb
cmp
pop
fimull
cmp
lods
pop
loopne,pn
add
sub
inc
mov
mov
cs
fs
mov
pusha
cltd
mov
pop
cmp
sbb
lret
mov
es
clc
sbb
pop
fwait
xchg
xlat
mov
loopne
sub
push
imul
aad
cmpsl
sub
push
and
test
and
daa
dec
cmpsl
push
outsl
sub
es
jne
xchg
mov
dec
xchg
jae
mov
ja
dec
and
push
scas
mov
iret
in
pop
dec
sub
sub
mov
pop
data16
dec
sbb
sub
aaa
sbb
push
and
sub
in
mov
stos
iret
hlt
inc
inc
inc
add
dec
inc
imul
imul
insb
std
mov
cmp
push
mov
dec
sub
imul
jnp
js
xor
jg
ja
add
inc
xor
adc
pop
cltd
xor
pusha
pop
and
out
pusha
pop
mov
pushf
cmpsb
shll
cmc
das
add
xchg
mov
cmp
sarb
adc
or
sub
and
scas
andl
adc
adc
scas
push
sub
enter
cmp
push
cmp
mov
xor
popa
or
jbe
push
insb
cwtl
incl
inc
and
in
shlb
pop
je
out
fists
lcall
outsl
dec
in
test
aaa
mov
jle
pop
add
ret
mov
addb
jp
inc
push
aas
test
test
sub
sbb
adc
dec
xlat
pop
pop
es
adc
outsl
inc
fists
mov
lods
and
rclb
iret
sbb
mov
out
xor
add
inc
jb
pop
xchg
push
jp
xchg
sahf
jbe
outsb
xor
je
scas
and
rolb
xchg
or
fistpl
inc
aas
push
xchg
scas
cltd
sahf
xchg
sub
xchg
xlat
pop
sub
or
sbb
ljmp
push
das
mov
ret
cmp
jge
scas
cmp
pop
and
sub
mov
adc
sub
sti
aaa
incb
rorb
jl
fnstcw
sbb
ror
push
push
jnp
aaa
xchg
inc
xchg
ljmp
or
jae
adc
jle
and
jmp
sub
xchg
push
jg
test
xor
pop
sub
jbe
dec
cmp
or
in
xor
sbbl
mov
jb
push
mov
sbb
dec
adc
adc
aam
ljmp
aas
cmova
push
push
or
dec
xchg
mov
adc
cmp
pop
inc
rorl
imul
jo
out
add
cmpsl
inc
shr
and
adc
gs
lods
jp
mov
xlat
jae
pop
xor
out
out
test
mov
das
les
push
in
insb
push
fldl
lods
aam
pop
adc
jne
shrb
push
lea
adc
dec
pop
shlb
xor
xchg
jle
imul
jnp
lock
dec
mov
mov
dec
or
xchg
cmp
ffree
sbb
pop
cmpsl
fisubs
or
xor
fnstsw
pushf
add
dec
lea
or
push
ds
out
movsl
jp
cmpsl
ds
jbe
jge
push
imulb
lret
or
mov
jp
sub
jne
jge
out
pop
sub
sub
lds
mov
jg
mov
insl
int3
test
cmp
shll
aas
int
sub
add
fdiv
jle
test
and
adc
clc
es
dec
cmp
push
js
dec
cmpsl
mov
pop
enter
fwait
dec
xbegin
dec
cwtl
daa
fisttps
insl
push
jmp
dec
mov
js
bound
pop
jecxz
shlb
inc
and
cli
cmc
ljmp
loopne
cmp
and
add
add
das
push
cmp
push
or
xor
in
ljmp
imul
pop
sbb
in
jmp
push
dec
mov
xchg
push
mov
pop
pop
je
inc
fucomi
mov
je
xor
fs
inc
and
dec
mov
mov
cmp
sti
jb
jns
mov
mov
fldcw
add
sbb
and
sub
push
and
and
jb
sarl
push
adc
dec
aaa
lds
add
fidivrs
inc
scas
out
mov
mov
inc
xchg
cmp
jg
jbe
fildll
mov
aaa
push
sub
movsl
out
jg
xchg
insb
dec
adc
pop
jno
fwait
or
or
imul
fs
adc
or
les
mov
lods
mov
dec
or
sub
fs
or
add
stc
mov
pop
dec
and
jl
adc
cmc
xchg
inc
and
cmc
pop
inc
sbb
fcoml
nop
int3
cltd
mov
lods
sub
das
lock
jbe
xor
mov
jg
mov
fs
dec
jg
test
mov
out
ljmp
sub
addl
mov
cmp
pop
std
adcb
jg
in
sub
and
out
fldt
push
inc
inc
sub
xchg
add
out
fsubrl
adc
xchg
add
and
test
pop
aam
stos
jae
cmp
xor
scas
xchg
or
sbb
cmp
fmuls
dec
or
sbb
cs
pop
xor
push
adc
mov
mov
les
adc
cmp
fcmovnbe
mov
fwait
dec
int3
pop
add
and
jge
push
or
add
fs
pushf
andb
sbb
stos
mov
mov
mov
fucomp
bound
sbb
dec
push
mul
inc
xchg
sti
dec
mov
mov
mov
and
adc
dec
mov
sub
dec
mov
and
sub
xor
scas
repnz
push
call
leave
add
mov
xlat
stos
sbb
std
sbb
stos
mov
lcall
lea
mov
sub
jl
xchg
enter
mov
pop
orl
inc
xor
cmp
xchg
sub
mov
push
push
mov
and
dec
sarl
add
sub
sub
lods
and
lahf
sub
sub
aas
sbb
or
xchg
jp
xchg
lock
ja
add
in
mov
test
cmp
cs
sarl
jb
rcll
mov
xor
inc
push
ret
and
andb
pop
mov
adc
push
incb
pop
test
fisubrl
adc
cmp
jmp
mov
dec
sbb
dec
cmc
jmp
push
loopne
mov
mov
cmp
mov
incb
adc
out
dec
out
adc
or
mov
and
pusha
lret
daa
int3
aas
sub
mov
mov
xchg
push
cmp
int
add
out
and
xor
mov
sbbb
andb
sbb
jb
icebp
idivb
pop
stos
push
dec
sbb
or
add
fists
in
push
in
inc
es
shlb
aaa
sbb
inc
add
jl
insb
push
mov
fstl
inc
xchg
pop
in
inc
mov
leave
mov
xchg
push
jge
inc
ds
loope
jp
sbb
test
shll
push
shll
lds
je
fmull
dec
mov
dec
shlb
inc
sub
push
gs
sbb
scas
test
out
fs
sub
loop
mov
pop
and
jle,pn
mov
out
and
je
cmp
inc
lfs
sysenter
sub
popa
adc
push
movsl
push
pop
xchg
loopne
xor
jno
das
mov
jg
jb
pop
jmp
and
xchg
mov
test
scas
sbb
cmp
paddq
and
mov
cld
iret
in
movsb
mov
sahf
int
adc
pop
and
cmp
xchg
pop
lret
mov
mov
daa
pop
aam
xor
inc
out
dec
repnz
adc
pop
add
xor
lahf
hlt
xor
and
rep
ror
jns
sub
negb
jp
cli
mov
jl
dec
cmp
repz
inc
xor
jmp
dec
inc
jb
outsl
and
push
ds
mov
in
popf
add
out
pop
cmp
les
cmp
jge
aam
cmpsl
sbb
sub
out
fs
xchg
roll
ja
push
lahf
jle
repnz
sbb
lret
xchg
lret
sub
mov
sar
xor
and
sub
sub
add
fs
out
pop
sbb
insl
jg
push
lret
inc
add
pop
add
popa
daa
es
test
mov
xlat
mov
aaa
xlat
lock
sti
or
mov
dec
jb
paddw
cld
insb
test
iret
cmpsb
push
enter
imul
int
pop
jnp
cmc
xchg
pop
mov
pop
std
xchg
pop
daa
test
iret
in
xor
aas
aaa
push
mov
mov
cmc
xor
adc
pop
enter
and
push
rcll
jmp
js
xchg
je
shr
sub
clc
jno
movsl
cmp
nop
daa
cli
test
mov
sbb
decb
pop
push
jecxz
cmp
push
scas
popf
mov
std
sub
sbb
adc
inc
shlb
xor
xlat
pop
stos
cmp
ret
xchg
mov
dec
rcr
push
xorb
xchg
jle
jp
adc
in
jbe
mov
dec
mov
test
out
les
cmpsb
leave
imul
inc
and
xchg
imul
aaa
and
cmpsl
add
les
scas
adc
les
aam
adc
out
push
cmpsl
mov
pop
lods
pop
repnz
sti
or
sub
int3
ret
scas
repnz
movsb
or
inc
or
mov
xchg
in
insb
sub
daa
or
inc
popf
sub
lods
std
adc
pop
sbb
ljmp
and
adc
mov
push
imul
or
movsb
jle
inc
clc
and
iret
int3
xchg
cs
jae
lock
sbb
les
es
sub
or
sbb
and
repnz
or
insb
in
or
mov
inc
or
adc
sub
add
nop
pop
mov
out
push
adc
adc
dec
repz
or
dec
mov
lret
dec
testl
adc
lods
shlb
xor
call
arpl
int
arpl
xor
or
stos
sub
outsb
mov
mov
out
and
in
ret
ffree
scas
mov
dec
scas
loop
and
mulps
fsubrs
frstor
fistps
mov
and
out
cltd
pop
or
and
repnz
mull
data16
sbb
test
in
xchg
or
movsb
pop
mov
loop
push
xchg
push
out
dec
add
jne
lods
scas
addr16
xchg
out
xchg
outsl
sbb
and
sub
mov
inc
jp
cmp
cmpsl
inc
aas
and
sbb
daa
sbb
xchg
loop
jbe
cmpsb
dec
movsl
hlt
push
adc
out
xchg
cmpsl
into
outsl
mov
in
sbb
push
lods
pusha
push
push
insl
and
adc
aad
and
push
gs
cmp
add
in
push
std
lods
pop
lock
mov
fwait
lret
mov
dec
and
and
jne
cwtl
jne
stos
xor
pop
adc
in
das
in
sbb
sub
pushf
andps
pop
push
mov
mov
mov
adc
je
xchg
stos
and
daa
mov
repnz
push
jns
adc
aad
pop
mov
mov
repz
sbb
and
cmp
movlps
and
pop
xlat
xchg
ret
sub
lret
orb
inc
cmp
cmc
and
and
push
xchg
into
mov
out
xchg
cmp
and
dec
sbb
shrl
jb
sbb
shrl
or
jb
adc
xor
jg
dec
daa
jmp
movl
jno
dec
popa
loop
cmp
jmp
dec
cmpsb
aad
lret
out
daa
into
sub
or
add
xorb
sarl
enter
popa
pop
test
daa
std
push
push
jnp
xchg
lds
into
lods
insb
shr
ja
roll
ja
shll
pop
iret
nop
cmpsl
cwtl
into
lock
mov
dec
pop
loop
xchg
stos
and
and
mov
sbb
lds
movsb
adc
in
stc
push
stc
in
scas
lea
cs
mov
pop
pushf
mov
inc
flds
pop
daa
fwait
or
add
fimull
fsubrp
adc
mov
jge
cmp
or
aam
aam
push
nop
fidivl
ror
cld
les
push
pop
dec
out
mov
xchg
shl
mov
sbb
inc
in
loope
or
ds
push
ss
call
cmp
shrb
dec
cmc
test
imul
nop
test
pop
jmp
icebp
or
add
sbb
daa
fildl
adc
aas
cmpsl
inc
push
pushf
pop
cmp
sub
push
and
and
xchg
outsl
dec
dec
adc
xor
sbb
xor
pop
test
pop
push
fwait
movsb
mov
clc
lret
in
adc
movsl
stos
add
lahf
push
push
repnz
lret
and
adc
cmp
lcall
daa
adc
movsb
scas
mov
mov
cld
jo
lret
repz
cmp
lahf
adc
mov
out
sub
or
fsubs
mov
inc
insb
mov
cli
sbb
cltd
rcpps
pop
adc
dec
dec
jae
jnp
arpl
mov
inc
insb
or
lahf
enter
decl
fidivl
pop
and
insb
inc
iret
adc
push
pop
adc
or
sbb
or
fistps
insb
das
ret
insb
pop
inc
and
fsubrl
or
lret
test
shll
das
and
inc
cmp
mov
jo
dec
and
outsl
or
dec
inc
movsl
ja
jo
popf
and
dec
outsl
mov
cli
mov
aas
hlt
int
and
ja
lock
inc
rolb
mov
sbb
icebp
dec
or
jg
mov
in
and
and
mov
dec
and
dec
shrl
testb
mov
stos
lods
outsl
leave
adc
xor
popf
lds
or
mov
jle
int3
jp
xor
std
das
push
data16
std
or
mov
rclb
pop
test
xlat
mov
pop
outsl
mov
xchg
andb
and
lds
jno
out
adc
test
loopne
call
out
mov
jecxz
jbe
push
inc
fimuls
les
sub
adc
mov
mov
push
dec
jmp
and
pop
cmp
movsl
xor
mov
pop
or
fnstcw
inc
movntps
pinsrw
mov
icebp
test
stos
neg
jnp
cmp
gs
scas
mov
rorl
aam
out
fsubrs
jg
rorb
or
rol
or
mov
inc
ret
mov
sub
and
sub
adc
xor
and
and
nop
cltd
out
out
pop
lcall
inc
and
mov
das
imul
mov
out
dec
jne
addb
aas
pop
or
push
insl
movsb
pop
test
sub
fs
and
pop
xor
xchg
les
inc
or
adc
fisttps
jo
insl
hlt
or
cmc
aaa
testb
mov
pop
xchg
loop
and
lds
and
aaa
mov
aaa
dec
or
mov
cmp
movsb
gs
and
mov
push
sub
loop
imull
std
pusha
hlt
mov
jl
lds
inc
pusha
adc
in
js
lahf
pop
adc
scas
push
inc
lods
out
outsl
xchg
fistps
sahf
add
in
leave
push
fdivr
int
jo
out
lcall
sbb
xchg
mov
push
xchg
mov
addb
cmp
adc
sub
and
sti
repnz
jmp
adc
nop
mov
test
xchg
dec
nop
pop
mov
out
xor
scas
mov
jb
fucomip
je
scas
repnz
lds
and
xchg
inc
sub
fildll
inc
mov
mov
xor
push
insb
sub
and
sahf
mov
rorb
jmp
push
lret
dec
add
lret
adc
lret
lret
or
adc
stc
adc
les
and
mov
dec
lds
and
sub
cmp
sub
cwtl
inc
testl
call
xor
aam
stos
mov
xchg
data16
mov
xor
and
mov
aas
mov
sub
sarl
test
cld
inc
hlt
ljmp
xor
lahf
outsl
lock
sub
cmp
aaa
mov
mov
movsb
dec
ficoml
cmp
lock
lret
pop
and
cmp
push
push
mov
pushf
inc
and
fwait
inc
cmpsb
push
xchg
bt
mov
les
je
xchg
add
xchg
adc
das
cmp
sbb
dec
pop
cwtl
mov
movsb
adc
jno
push
jmp
and
add
test
jnp
jecxz
and
iret
inc
push
jle
out
popa
adc
push
push
ret
and
out
movsb
cli
fists
dec
adc
stc
dec
xlat
test
stos
sub
cmp
roll
xchg
sub
push
mov
dec
mov
lret
cmp
inc
insb
jb
pop
push
inc
mov
jg
pop
mov
jo
sub
inc
test
cwtl
mov
imul
push
dec
jge
mov
jecxz
or
jge
mov
cwtl
mov
subl
dec
mov
push
mov
outsb
imul
lea
aam
daa
jge
icebp
fldenv
ds
push
rep
jb
push
jge
mov
cmp
pop
push
inc
sarb
sub
imul
adc
and
cmc
dec
sub
fcoms
divb
sbb
cmp
ds
aas
aam
adc
lods
dec
pop
adc
jg
ret
push
inc
mov
les
popf
pop
add
pinsrw
repz
lret
je
je
inc
out
fdivrs
jbe
push
or
and
in
sub
cmpsb
xchg
push
shlb
dec
xchg
mov
ret
outsl
aad
repnz
cmp
leave
scas
les
mov
push
popf
aad
mov
mov
aad
mov
add
push
adc
xchg
dec
xlat
subb
aas
ja
ljmp
push
mov
xor
xchg
aaa
fildl
arpl
out
dec
in
mov
mov
inc
sbb
and
pop
inc
inc
xchg
outsb
cmpsl
incb
mov
jg
pop
cmp
ljmp
pop
daa
roll
jg
inc
sub
xchg
lahf
out
orb
dec
cld
mov
mov
cmp
pop
ds
loop
enter
add
scas
in
in
stos
add
push
fs
negl
or
ljmp
movsl
stc
xor
pop
or
or
leave
adc
and
jle
or
pop
mov
cwtl
jns
lods
sub
jbe
insl
lea
cmc
jmp
lret
jo
jp
push
lcall
mov
inc
mov
push
je
out
sbbb
dec
lret
scas
into
ja
and
enter
sbb
out
in
inc
and
insl
sub
and
and
test
idivb
push
fsub
sub
cli
sub
fs
bound
and
jp
in
push
xchg
aam
push
pop
stc
push
sub
rol
lds
pop
nop
xor
sub
loop
leave
xor
or
inc
scas
shrb
sahf
mov
sub
cmpsb
pop
mov
cmp
lds
jecxz
pop
lret
pop
nop
lahf
jle
into
mov
or
and
pop
ret
xor
inc
sub
sub
and
repnz
shrb
lods
mov
adc
xchg
xor
lret
and
mov
lcall
jne
cmp
rorl
mov
pop
stos
lret
jo
jmp
pusha
mov
bound
push
addr16
dec
jecxz
dec
scas
test
stos
cmpsl
fst
stos
out
xor
push
dec
aam
pop
in
xchg
push
mov
push
adc
sbb
inc
arpl
and
loop
mov
push
icebp
jae
push
adc
mov
sbb
sub
adc
ss
push
shll
mov
adc
and
xchg
inc
or
push
hlt
scas
dec
je
inc
pop
jl
adc
in
sub
lcall
fisttps
stos
mov
into
xlat
ss
ds
sbb
sbb
hlt
or
fiadds
sbb
lret
cmp
inc
syscall
lods
pop
or
add
inc
pop
add
fiadds
add
jns
add
aaa
nop
pop
and
adc
push
nop
outsl
and
imul
aaa
nop
addr16
in
or
inc
jg
in
or
ja
in
pop
jecxz
dec
add
nop
dec
and
inc
add
aaa
nop
inc
and
jns
add
adc
push
add
aaa
nop
push
and
pop
ja
cltd
sub
and
or
in
xor
nop
mov
mov
or
in
xor
aaa
nop
mov
push
fiadds
and
inc
xlat
mov
enter
sub
pusha
and
imul
pop
and
mov
fsubrs
incb
mov
and
imul
cmp
and
out
cmc
xor
unpckhps
or
addr16
pop
xor
add
or
mov
test
test
jno
inc
arpl
and
jnp
mov
inc
jae
dec
adc
test
and
pop
or
lret
mov
pop
cmpsl
mov
les
mov
and
pop
inc
mov
xchg
or
shll
pop
jb
inc
cltd
or
sub
inc
lret
sub
adc
addr16
cmpb
fdivr
sub
sbb
xlat
test
cmp
jge
cmpsl
test
adc
cmpsb
adc
jbe
push
movsb
push
ja
lods
mov
lds
js
stos
in
adc
test
ret
mov
ja
imul
xor
or
sbb
and
and
mov
call
jae
ds
aaa
mov
mov
sub
movsl
sub
mov
cs
xor
dec
repnz
inc
add
add
mov
inc
xchg
lods
adc
dec
mov
out
sub
inc
push
mov
insl
sub
cmp
mov
inc
les
jle
sub
adcl
or
jo
incb
sti
or
and
xor
lcall
imul
or
push
or
push
push
and
pop
aas
cmpsl
and
adc
sbb
cld
mov
mov
les
cs
sub
ljmp
pop
sbb
gs
push
repz
in
lods
inc
jne
repz
or
jb
sbb
inc
test
in
rorl
enter
mov
adc
cmp
xor
pop
cmp
adc
cld
and
adc
cli
xor
nop
push
sub
pusha
push
fists
add
lahf
pop
sub
fiaddl
dec
push
out
jmp
mov
cmp
jns
lret
inc
aaa
cmp
xchg
inc
inc
rcll
cmpsl
mov
rsm
jg
in
or
inc
pop
xor
push
add
add
push
icebp
mov
enter
mov
jo
jl
iret
push
cmp
pop
popa
add
jno
lea
scas
push
and
mov
ljmp
jb
in
in
jmp
pop
lret
ficomps
adc
sbb
or
inc
or
xchg
sub
bound
sub
lret
loop
pop
or
inc
stos
rorl
jae
out
test
inc
jno
sbb
lret
inc
dec
push
cs
xor
sti
inc
dec
xor
imul
incl
cmp
or
jle
test
xorb
xlat
nop
nop
xchg
das
mov
outsb
xchg
inc
iret
jbe
scas
push
lret
xchg
cmp
push
aas
frstpm(287
push
loop
sbb
hlt
out
in
push
pop
repnz
mov
ret
sub
xchg
mov
int3
js
cmpsb
aad
in
lds
dec
lock
dec
rcrb
cli
hlt
in
cmpsl
xchg
mov
push
sub
and
sti
sub
es
push
loope
popa
lea
fisubl
jle
sahf
dec
test
adc
testl
stc
pop
in
sbb
dec
dec
out
inc
cmpsb
xlat
adc
testb
lret
pop
mov
jge
cltd
mov
gs
aaa
push
adc
pop
mov
mov
push
out
pop
push
ljmp
xorb
call
push
sub
push
and
lds
mov
xor
mov
xorb
and
fstps
idivb
xchg
add
lret
insb
call
adc
fdiv
jmp
loop
mov
adc
divl
sub
ss
lret
jns
insw
leave
div
hlt
shll
mov
adc
outsl
mov
mov
push
mov
shl
scas
lahf
pusha
xor
jg
add
dec
data16
nop
pop
dec
and
and
rclb
rorb
mov
add
and
or
jno
in
xchg
inc
dec
cmp
adc
mov
pop
or
xor
push
call
aaa
xchg
push
int3
rcrl
or
es
and
daa
jne
in
mov
jbe
sub
mov
mov
or
inc
outsl
in
jmp
dec
mov
mov
push
mov
inc
cmp
nop
xchg
in
dec
imul
push
and
enter
dec
dec
cmp
subl
repz
jge
pop
sbb
inc
femms
pop
and
movsl
insl
mov
inc
inc
or
gs
jne
pushf
imul
mov
dec
lock
aas
pop
fwait
mov
mov
mov
movsb
stos
mov
xchg
movsl
sub
and
repz
lods
in
mov
pop
jbe
in
pop
leave
ds
push
xor
ja
mov
aas
sub
inc
sub
jge
les
inc
loopne
aas
push
sub
pop
clc
dec
les
xor
sub
jb
xlat
cmc
test
fbld
fisubs
push
dec
sub
push
jae
fisubrs
std
cmp
shrb
cli
jmp
sarb
movsb
mov
out
addr16
cmpsb
and
xor
imul
call
mov
fidivrl
stos
xlat
pop
in
lods
jnp
xchg
xlat
sub
adc
jle
xchg
movsb
xor
jge
sbb
out
test
mov
bound
inc
xlat
gs
mov
testl
cmp
fwait
shll
idivl
and
adc
repnz
mov
and
and
nop
push
pop
test
roll
push
inc
push
or
xchg
imulb
jp
ret
sahf
sub
rorb
pop
dec
stos
xlat
loop
xchg
push
mov
bound
clc
lret
push
and
add
dec
insb
bound
sbb
sbb
inc
pop
out
cs
push
pop
in
adc
pop
sub
cmc
xchg
in
sbb
inc
movsl
mov
or
mov
sub
andl
push
out
jl
or
jg
lret
lea
inc
mov
or
cmpsb
push
mov
push
inc
popa
mov
les
imul
adc
adc
cmp
sub
inc
lret
inc
push
call
ja
add
arpl
adc
inc
mov
lahf
iret
scas
mov
cltd
sub
or
outsb
stos
xchg
dec
or
pop
adc
dec
arpl
clc
sbb
icebp
inc
dec
outsl
stos
cmpsb
comiss
repz
push
and
cmp
xor
dec
pop
mov
and
or
jecxz
mov
sbb
xchg
push
cli
js
outsl
mov
test
inc
inc
xchg
sti
leave
xor
stos
mov
mov
jecxz
inc
sub
dec
inc
inc
js
dec
adc
cmp
mov
pop
into
shrb
and
pop
bound
jne
test
or
cmpsl
jge
inc
pushf
test
sbb
pushw
sbbl
sub
out
lfs
aas
stos
push
and
repnz
jae
out
test
movsl
adc
jo
pop
and
jp
sbb
push
sub
xchg
test
sub
fists
mov
aaa
in
mov
xlat
cmp
cwtl
sbb
inc
cmp
insb
stos
mov
mov
cmp
mov
mov
mov
xlat
cmpsb
lock
sub
cmp
inc
or
xchg
repz
loopne
or
add
adc
mov
jp
shlb
lods
negl
gs
mov
jmp
inc
mov
test
test
rclb
push
jns
mov
adc
sti
adc
dec
or
and
stos
or
add
imul
repnz
leave
jno
nop
stc
scas
lret
xchg
stos
inc
in
dec
pop
mov
mov
lods
xchg
push
and
jp
jns
mov
daa
or
cmpsl
aad
loop
mulb
mov
imul
and
mov
jmp
mulb
and
add
test
enter
inc
mov
pop
push
push
push
and
stos
jp
xor
xchg
divl
sub
dec
jg
enter
sbb
adc
adc
adc
stc
dec
pop
scas
jbe
xlat
mov
aam
std
loopne
roll
iret
fsubl
out
sbb
test
daa
enter
je
pop
adc
lahf
clc
js
and
add
cmp
push
std
cs
inc
pusha
mov
push
push
jmp
rcr
sub
aad
jmp
popf
push
outsl
ja
mov
or
mov
pop
fisttps
test
sub
xchg
mov
xor
mov
stos
in
jp
and
pop
data16
pusha
or
cmp
cwtl
aas
dec
push
sub
mulb
inc
outsb
sub
sbb
imul
lret
xchg
aad
pop
out
enter
mov
gs
sub
cmpb
in
outsl
js
dec
xlat
mov
adc
cmp
or
sbb
xor
out
pusha
popf
xor
jp
popa
shrb
ret
sub
jle
pop
push
sub
mov
aas
xchg
cs
ss
and
and
sub
inc
cmp
js
mov
sub
call
daa
mov
lcall
adc
in
in
mov
fcoml
and
cs
push
mov
cmp
addr16
mov
ret
mov
pushf
sti
cmpsb
dec
shr
push
pop
mov
jmp
push
pop
add
mov
pop
loop,pn
lcall
test
xor
test
out
movsb
stos
cmpsb
in
ret
iret
or
cld
cmpsl
out
popa
push
inc
or
push
jns
scas
pop
aaa
das
pop
lahf
pop
push
inc
in
pop
mov
enter
test
push
lock
dec
xor
sbb
pop
and
add
mov
push
and
pop
aad
and
xchg
xor
cmp
sub
scas
fwait
jbe
test
outsb
and
pop
leave
pop
push
inc
dec
rolb
push
shlb
jbe,pt
xlat
nop
popa
dec
loop
sbb
or
push
jle
jle
jno
divb
stos
xlat
stos
xchg
lahf
pop
sub
push
gs
mov
xlat
movsb
jp
push
or
jl
sbbb
inc
pop
mov
xor
mov
rclb
jno
aas
sub
or
ja
dec
lods
dec
mov
iret
fdivs
fwait
adcb
popa
cmpsb
stos
lret
push
pop
push
gs
sahf
aad
push
cmpsl
inc
pop
xchg
ds
mov
fs
sub
pushf
cmp
iret
cld
pop
shr
int
mov
stc
dec
mov
ds
jge
in
ljmp
dec
pop
mov
and
and
lea
lret
jno
ds
xor
and
jle
sbb
fistps
sub
outsl
cmp
inc
in
jl
mov
pop
pop
push
mov
sbb
jae
mov
js
cmp
cld
sub
or
adc
push
adc
addr16
sub
dec
pop
sub
push
sub
and
add
add
xlat
mov
mov
push
loop
lock
dec
mov
imul
ret
mov
gs
adcb
adc
dec
shl
outsl
mov
fisubs
cmp
jmp
or
dec
cmp
mov
mov
pop
imul
sub
jge
fsubr
imul
pop
jnp
repz
or
adc
mov
jecxz
pop
out
inc
sbb
int
movsb
xchg
dec
cmpsl
call
add
jge
add
or
xchg
push
pop
sbb
icebp
out
stos
add
bswap
or
testl
ds
sbb
test
outsl
lods
cmp
icebp
adc
fwait
imul
outsb
call
xchg
cmpsb
push
inc
jp
mov
adc
jmp
repz
xchg
fwait
nop
cmpsl
push
mov
lret
leave
or
enter
outsb
jae
push
jmp
sub
mov
fs
cmpsl
xor
fwait
xlat
mov
popf
pop
mov
inc
push
cmp
jb
and
and
lock
out
stos
aas
fwait
and
lcall
xchg
mov
ret
test
adc
incl
jle
popa
jmp
push
push
xor
adc
xlat
push
push
cmp
shll
leave
or
jne
pop
incl
inc
stc
adc
jb
mov
insl
inc
add
xor
add
or
jns
mov
lea
adc
sub
iret
ljmp
adc
mov
push
push
test
push
cmpb
add
xor
bound
and
dec
loop,pn
push
or
and
test
or
pop
cmpsb
cld
xchg
adc
push
dec
loop
add
or
xchg
push
or
scas
jne
push
lds
ud1
repz
pop
cmpsb
in
fs
dec
sub
mov
xor
mov
inc
test
and
mov
and
les
inc
repz
xor
dec
icebp
jmp
repz
stos
pop
pop
mov
jg
andb
lahf
push
lcall
ss
xor
out
stc
dec
ffreep
gs
lods
mov
pop
out
adc
cmpsl
and
pop
push
xor
inc
outsb
shlb
pop
aas
adc
lods
into
or
aam
sti
push
sbb
xor
jne
push
inc
jmp
stos
xchg
jmp
dec
les
int
push
cwtl
and
scas
jge
or
rcrb
inc
dec
inc
sbb
sbb
int3
and
dec
pop
inc
aas
cmpsl
out
sub
push
push
and
out
movl
clc
outsl
icebp
rcrl
pop
mov
insb
adc
xor
sub
xor
dec
movsl
jb
fistl
aas
jmp
dec
stc
sub
hlt
test
adc
mov
sub
and
arpl
or
mov
int3
jo
repz
xor
iret
lahf
xor
or
xchg
sub
mov
dec
adc
xchg
push
push
sti
pop
mov
adc
andb
mov
mov
cmp
rorl
clc
push
stos
ja
shl
daa
ss
into
adc
or
dec
in
cli
gs
enter
pop
pop
sub
enter
lahf
push
pop
stos
inc
or
shlb
outsb
rorb
out
and
cli
dec
scas
push
xor
sub
clc
jle
adc
mov
mov
cli
pop
std
es
xlat
adc
ficompl
in
or
les
push
sysenter
dec
popa
into
mov
arpl
push
dec
es
stc
decl
adc
and
lret
and
sbb
adc
mov
cmpl
out
or
adc
pop
add
hlt
lock
das
push
scas
dec
out
test
out
fwait
arpl
jbe
jmp
dec
daa
out
xlat
mov
aad
pop
adc
mov
xor
sub
and
mov
ret
insl
mov
add
fwait
mov
jb
outsb
push
imul
packuswb
xor
or
push
out
sub
mov
lahf
in
and
and
mov
xor
insl
push
cmp
or
xor
jl
pushf
fstl
xchg
mov
repnz
dec
jmp
fs
xlat
inc
inc
pop
push
sahf
and
push
push
or
pop
mov
mov
or
rcrb
imulb
pop
fs
es
jp
push
sti
xchg
dec
add
jge
cs
mov
xchg
cmpsl
mov
xlat
dec
insl
loop
pop
in
sub
mov
and
pop
inc
push
insb
jl
fs
or
inc
add
pop
nop
push
adc
and
and
push
inc
pop
or
push
mov
mov
fs
mov
lods
xchg
aaa
cs
add
lcall
flds
cltd
xlat
cmp
add
add
cs
icebp
in
xchg
inc
popa
stos
xor
dec
sub
scas
adc
or
mov
pop
das
xor
cwtl
inc
daa
cli
bound
imul
enter
mov
inc
leave
mov
bound
or
mov
or
cmp
andl
dec
adcl
adc
aam
cwtl
adc
xchg
fsubp
imul
bound
cmc
scas
xor
xchg
aas
lret
xchg
lods
ror
cmpsl
sbb
sbb
lcall
inc
dec
xor
outsl
sub
inc
adc
pop
jbe
adc
cmp
xor
xchg
push
insl
adc
aas
adc
sub
xor
mov
dec
scas
movsb
scas
testl
push
cmp
rcrb
or
mov
jg
cs
adc
sub
pop
sti
rol
stos
jae
dec
out
pushf
adc
push
adc
pop
add
outsl
ds
and
mov
jp
push
xor
pop
or
out
sub
shl
shll
ret
pop
and
or
sub
adc
sbb
push
xor
test
aad
arpl
mov
or
test
out
dec
aaa
mov
out
inc
mov
and
and
fnstenv
sub
sub
sub
xchg
add
les
mov
mov
sbb
shl
add
xchg
out
pop
pop
lock
into
hlt
lret
push
dec
lret
hlt
dec
mov
orl
and
pop
repz
popf
push
and
or
cmp
lcall
in
xor
push
add
xor
sub
and
xor
test
xchg
imul
xchg
movsb
inc
std
xor
add
adc
and
jmp
int3
aaa
clc
cmp
daa
lods
and
out
cwtl
cli
les
in
into
fdivrl
cld
sub
sahf
in
dec
push
and
repz
enter
push
das
fiadds
push
std
and
out
dec
movsb
jecxz
mov
xor
cmp
movsl
sub
lret
fs
lods
notl
cld
stc
add
xor
cld
mov
xchg
jns
sub
adc
sbb
lcall
inc
push
cmp
pop
cmp
ret
outsb
mov
mulb
push
add
pushf
and
icebp
das
push
adc
cmpsb
mov
inc
sub
inc
cmpsl
clc
les
mov
jp
cmp
pop
adc
xchg
push
dec
add
jmp
les
ss
xchg
add
xchg
push
xor
or
popf
scas
addr16
test
mov
cmp
testb
sub
sub
sub
sub
fcmovnu
and
fbstp
adc
mov
sub
mov
daa
xchg
xchg
jecxz
dec
xor
aad
mov
stos
vfmaddsub231pd
jne
ja
fiaddl
je
jmp
pop
movsb
je
loope
bound
mov
inc
sub
int
inc
cwtl
adc
mov
xor
in
adc
les
sbb
test
mov
xor
and
test
mov
mov
inc
xchg
mov
fcompl
xor
sti
lods
xor
inc
pop
enter
jle
leave
pop
pusha
jb
dec
xchg
jl
pop
test
pop
pop
jg
dec
mov
arpl
out
xchg
push
push
xor
sub
jno
push
push
mov
sbb
mov
pop
in
mov
movsl
es
lret
pop
xchg
cmp
xor
adc
ret
cmp
aas
mov
adc
inc
or
dec
mov
pop
stc
aaa
xchg
aas
push
and
ds
xor
cmp
shll
jg
and
xchg
cmp
xor
fwait
ss
adc
popf
enter
jg
cmpsb
mov
jno
cmp
fwait
shlb
leave
inc
xchg
test
aaa
imul
mov
pop
sub
or
aaa
sbb
sbb
and
mov
push
int3
cmp
mov
cmp
xchg
jnp
pop
rcr
xor
cmp
and
mov
xchg
fiadds
addb
cli
filds
cli
pop
nop
xlat
cmpsl
cwtl
dec
pop
enter
dec
mov
int3
daa
ret
scas
jne
cmp
jo
push
sbb
sub
mov
nop
add
push
cmp
and
and
lock
sahf
xlat
daa
mov
inc
fadds
xchg
mov
test
pop
or
jns
imul
and
pop
dec
stos
xlat
jge
jl
cmp
in
in
pop
and
add
mov
mov
and
adc
or
test
cmp
dec
aad
jo
xor
jnp
xlat
sahf
int
aaa
adc
push
cld
in
jecxz
data16
imul
and
pop
inc
inc
xchg
push
sbb
mov
enter
loope
jno
rol
push
mov
pop
push
mov
push
sbb
mov
insl
icebp
or
mov
or
inc
push
mov
xor
les
dec
jne
or
movsb
divl
push
inc
sub
adc
mov
mov
xor
test
imul
push
rcr
inc
outsl
daa
cmp
adc
mov
pop
cmp
sub
rcrl
xchg
popa
or
sub
and
sub
and
sub
xlat
fdivrs
pushf
mov
je
pushf
inc
les
loop
mov
shrl
and
dec
aaa
repz
fldenv
nop
mov
enter
push
test
xor
in
jp
cmc
leave
add
movsl
xor
sub
push
cs
adc
mov
lahf
imul
stos
filds
aaa
push
jns
adc
push
or
mov
push
xchg
xchg
cmc
insl
adc
outsb
cmp
xor
push
sbb
jmp
xchg
cmp
jge
xchg
push
mov
xchg
sbb
cs
sub
les
ret
dec
xchg
ret
cmc
imul
mov
ret
out
cltd
cs
shl
or
and
fnstcw
mov
mov
mov
mov
mov
xchg
or
adc
mov
mov
sub
and
xchg
or
push
aaa
mov
test
push
sub
sub
cld
daa
sub
and
and
ds
cmp
and
sbb
mov
ds
cmp
jg
xor
xrelease
dec
mov
outsl
mov
js
les
sbbb
sub
daa
xlat
test
sub
pop
inc
int
adc
xlat
mov
loopne
sbb
in
mov
xchg
outsl
xor
daa
dec
cmpsl
cmp
movsl
sbb
sub
xchg
and
sub
inc
cmpsb
and
or
in
xchg
mov
mov
xchg
cli
fs
pop
xor
je
push
jecxz
ss
popl
movsb
inc
sub
push
xchg
xlat
es
test
sub
xchg
adc
push
push
dec
xlat
gs
sbb
jmp
into
dec
out
imul
testb
mov
or
or
scas
movsb
xchg
nop
jns
push
data16
pop
mov
hlt
xchg
lods
cmpsl
push
icebp
inc
fld
adc
mov
cmp
fs
mov
cmpsb
loopne
and
sub
roll
mov
pushl
jns
jae
mov
sub
or
les
mov
mov
and
adc
mov
xchg
cmp
jl
mov
dec
xor
outsb
push
aaa
iret
push
sub
sub
xchg
jg
loop
push
push
inc
insb
and
sub
adc
inc
test
addr16
sti
sbb
daa
repz
pop
cmp
mov
push
ret
xchg
jne
fistps
add
adc
add
stos
subb
jg
sbb
jbe
inc
xlat
pop
dec
sub
aaa
lcall
xlat
int
jl
xchg
sarb
mov
pushf
scas
mov
jp
mov
push
sbb
adc
fs
fildll
lret
jle
popf
add
imul
xor
cltd
fnsave
xchg
out
pushf
xchg
cmp
repnz
and
imull
mov
jecxz
xlat
dec
jnp
movl
cmpsl
push
xor
loop
mov
sbb
das
scas
fists
push
push
in
aad
pop
xor
push
ret
inc
lret
imul
in
aaa
push
push
and
sbb
loopne
loope
lret
out
in
mov
lock
jg
sarl
xchg
sahf
push
push
scas
test
pop
mov
insl
jb
mov
jb
ds
lea
rorl
adc
and
cwtl
sub
sub
or
jg
ds
sbb
and
sub
and
mov
daa
inc
sbb
mov
or
bound
xchg
push
and
jo
lds
cmp
xchg
call
pop
lods
jmp
inc
and
lahf
and
jecxz
sub
stc
shrb
push
inc
cmp
in
and
add
xor
call
sub
ja
scas
lret
leave
mov
repz
pop
shll
dec
sub
xchg
pop
scas
or
dec
push
lret
pop
mov
push
xor
pop
sub
sbb
bound
and
cmpsl
push
adc
mov
ds
cmp
or
xlat
outsl
dec
cmpsl
fcoms
xchg
and
xor
adc
sub
clc
cs
call
jae
inc
mov
add
pop
sbb
jmp
aaa
scas
mov
xor
add
mov
sub
mov
add
sbb
cmpsl
xlat
lcall
sub
rclb
push
cltd
push
push
dec
adc
push
movsb
mov
pop
stos
or
inc
sub
out
push
cmpb
push
pusha
cld
pop
add
fildl
mov
pop
xor
jl
daa
xchg
pop
nop
and
sub
imull
daa
jmp
push
mov
lret
and
inc
cvtps2pi
icebp
scas
lock
cld
xchg
fistpl
call
push
das
jns
cmpsl
xchg
aaa
aas
fsave
clc
insb
sti
movsl
pop
and
in
sbb
sbb
inc
pop
push
mov
lret
jae
repz
leave
ds
mov
inc
xlat
add
dec
call
xchg
or
jg
sbb
enter
mov
iret
xor
lds
mov
or
scas
aad
add
movsl
adc
lods
repnz
popa
xor
dec
jg
push
cmp
cmp
enter
xor
pop
dec
dec
mov
mov
sarl
cmp
xchg
pop
add
push
push
add
xor
inc
inc
out
inc
les
pop
pop
pop
std
mov
xor
add
sub
mov
outsb
sbbl
and
or
pop
sbb
mov
xor
testl
mov
jmp
jmp
stos
add
in
pop
cmc
xor
in
inc
xchg
xor
js
xchg
les
in
out
xchg
mov
andl
mov
sahf
fildl
popa
cwtl
outsb
pushf
jne
cvtpi2ps
mov
cmp
and
rcrl
call
mov
mull
and
clc
sbb
rclb
dec
mov
orl
pop
das
out
and
mov
nop
xchg
and
sub
or
repz
insb
lock
icebp
inc
jbe
in
inc
out
inc
cli
sahf
adc
jbe
pop
sub
rol
push
in
jbe
fcmovbe
lahf
mov
mov
cmpsl
pop
out
dec
scas
mov
fcmovnbe
into
push
outsl
sub
inc
outsl
pop
mov
and
scas
jo
aas
xchg
jle
sarb
xchg
aad
enter
cmc
pop
cld
shl
or
jg
sbb
push
cmpsl
cld
imul
iret
mov
lea
push
cwtl
push
sbb
mov
sti
push
dec
push
push
or
push
push
fsts
push
iret
cs
mov
test
aaa
xchg
ss
lcall
fistps
scas
xchg
dec
jo
andb
jo
adc
pop
push
adc
rclb
adc
mov
mov
out
or
pop
jmp
mov
repnz
pop
add
xor
adc
push
pushf
sub
mov
ret
rcl
xchg
popa
adc
or
lret
mov
call
lods
push
jns
cmp
sub
aaa
mov
lods
inc
cmp
mov
mov
in
js
jl
dec
cmp
dec
cmp
fcoml
rolb
divb
into
ljmp
aad
inc
pop
es
and
cmp
push
mov
and
movsl
dec
mov
dec
xchg
sub
or
xchg
js
mov
movsb
lods
pop
loopne
and
mov
out
and
fiadds
testl
out
and
pusha
jmp
pop
xchg
sub
xchg
inc
stc
sub
pop
mov
mov
testl
and
dec
push
sub
xor
adc
jmp
pop
outsl
int
sbb
vmovupd
inc
pop
flds
push
decl
or
pop
inc
pop
je
imul
pop
inc
out
push
ja
lds
inc
push
sbb
ret
fisttpll
mov
mov
xor
ja
int
mov
lret
ljmp
ret
scas
in
dec
cmc
adc
repnz
push
ds
push
dec
cld
shrb
addr16
push
outsl
enter
adc
fldcw
cmp
sbb
xchg
std
fnstcw
and
mov
mov
mov
mov
sbb
dec
pop
jg
xlat
xor
and
lods
shrl
les
jno
nop
shll
call
push
aaa
jb
sub
imul
dec
lcall
hlt
xchg
pop
mov
imul
fs
lds
jp
aas
dec
mov
pop
pop
call
cld
inc
int
je
dec
aaa
or
sub
imul
ljmp
jle
inc
xchg
push
xchg
sti
and
ret
outsl
mov
filds
adc
mov
xlat
scas
lret
mov
les
adc
inc
dec
and
je
xor
cmp
je
adc
or
dec
push
mov
lock
and
mov
inc
xor
xlat
pop
in
adc
push
dec
shlb
mov
dec
das
inc
filds
inc
movl
test
push
sarb
cmovp
stos
in
cmp
movsb
and
push
adc
jne
mov
dec
and
jnp
sbb
adc
adc
out
mov
xor
and
xchg
cmp
push
mov
arpl
pop
xchg
mov
imul
pushf
mov
gs
push
sub
imul
pop
cmp
and
adc
inc
xor
ss
mov
int3
and
ja
and
inc
ds
push
mov
jmp
xor
faddl
xor
syscall
xorl
or
or
and
stos
into
cmc
and
pop
jb
cmp
fimull
and
sub
fstpt
in
mov
mov
push
xorb
push
xor
mov
mov
outsl
popf
lcall
js
push
mov
or
lret
push
into
sub
jg
jnp
addb
and
clc
and
lods
aad
stos
mov
stos
mov
push
negl
push
sub
sub
push
es
dec
into
push
inc
mov
mov
xor
lods
cli
sub
lock
push
adc
out
fs
adc
dec
push
jmp
lock
test
inc
xor
mov
icebp
mov
imul
movsb
sbb
outsl
stc
sbb
clc
nop
hlt
vpxor
sub
dec
xor
jo
outsl
jl
test
ret
adc
lret
mov
std
arpl
dec
cmpsl
sbb
lahf
fwait
adc
bound
into
orb
aam
mov
js
xchg
pop
je
test
mov
adc
and
pop
inc
push
mov
mov
sbb
add
sahf
daa
addr16
ljmp
dec
jge
pushf
sub
sub
lds
or
sbb
jge
jg
inc
popa
enter
or
gs
add
imul
push
mov
cli
xor
cmp
xor
and
rorl
adc
xchg
push
fs
and
inc
cmc
add
and
push
xor
shlb
sub
mov
xor
aas
cmpsl
aam
enter
insb
cmp
lret
mov
push
cmp
xor
xchg
jo
dec
test
lret
sub
mov
es
sbb
rcr
dec
rcrb
mov
and
aaa
mov
aaa
xchg
cmp
sub
and
dec
push
scas
mov
xchg
ljmp
daa
popf
test
stos
dec
imul
jmp
pop
jb
pop
in
jno
push
and
mov
xor
imul
hlt
fwait
pop
sti
and
out
aad
popf
test
stos
pop
push
repnz
xor
bound
aaa
pusha
mov
sub
popf
dec
jl
push
xor
dec
push
sahf
sub
add
jle
dec
ret
sbb
js
or
sub
sub
std
stos
in
fcoms
adcl
sub
sbb
xor
xor
int3
dec
jmp
jecxz
imul
stos
sarb
bound
jnp
or
sub
xor
pop
popa
adc
xchg
ds
in
aas
loope
xlat
adc
adc
adc
in
and
adc
xchg
jne
std
inc
pop
mov
ret
push
mov
or
daa
scas
andl
add
pushl
add
inc
push
xor
add
inc
sarl
out
repz
mov
xlat
lahf
pop
lock
mov
mov
cmpsl
add
or
cmpsl
or
or
push
arpl
andb
rcll
push
and
xchg
test
jmp
stos
jbe
dec
pop
mov
mov
or
fwait
inc
sub
mov
enter
and
jo
inc
int3
leave
iret
pop
sbbb
daa
push
call
push
cmp
push
shlb
sub
pop
aaa
jle
lods
movl
iret
xchg
out
clc
inc
out
xor
jecxz
jae
fisubl
inc
xchg
outsb
and
jb
xchg
adc
movsb
adc
and
xchg
xor
mov
lods
jge
pop
test
aam
fs
adc
fwait
mov
sbb
shrb
pop
test
in
test
jmp
and
pop
scas
add
inc
movsl
xor
mov
cmp
and
ljmp
in
stos
nop
pop
push
je
cmp
and
dec
push
jge
push
fucomip
rep
pop
and
push
sbb
adc
pop
push
aaa
mov
xchg
sub
lods
in
adc
pop
pop
sub
clc
lods
xor
scas
cwtl
cmp
lods
sarl
imul
sub
test
mov
stos
das
inc
dec
test
bound
xchg
inc
jmp
lcall
not
dec
neg
jg
sub
stc
pop
xchg
sub
mov
popf
or
xchg
pop
stos
jno
movsl
add
sub
sub
leave
mov
enter
inc
adc
dec
ljmp
pop
and
xor
fistl
xlat
sbb
sahf
ds
xchg
add
daa
xor
sbb
daa
clc
frstor
add
scas
jecxz
pushf
push
ret
test
xchg
mov
nop
pop
fwait
add
pop
xchg
or
adc
rorl
sub
pop
fisubl
lahf
dec
mov
push
xchg
inc
sub
loope
lods
xor
popf
adc
push
xor
pop
inc
test
push
xorb
sub
nop
stc
inc
jp
and
daa
xchg
pop
cld
and
test
repnz
shlb
test
adc
sahf
popa
inc
mov
psubq
push
sub
pop
push
add
push
inc
pop
and
out
mov
ds
mov
enter
pop
sbb
outsb
in
mov
mov
lds
mov
fmul
adc
sub
jb
push
add
and
push
adc
push
inc
xor
mov
sbb
xor
adc
push
in
les
jns
or
jp
or
mov
ds
fistl
push
lahf
cmp
repz
jb
push
xor
mov
repnz
arpl
sub
fsubl
cmp
dec
and
ficompl
mov
rcrb
xchg
insl
and
xor
iret
mov
xor
repz
jbe
xor
iret
scas
fwait
roll
inc
fwait
nop
and
ret
cld
adc
pop
iret
test
add
fdivrl
add
mov
nop
jne
je
cmpsl
pop
xor
lret
push
into
gs
popf
mov
pop
adc
out
out
push
cwtl
mov
nop
mov
and
dec
pop
shlb
pop
or
push
xchg
or
dec
xchg
or
dec
mov
ficoms
pop
je
cmp
repz
mov
pop
sbb
bound
sub
and
movsl
jb
repz
insb
pop
pop
sub
inc
jns
or
or
xlat
mov
sbb
pop
inc
inc
xchg
cmp
nop
decb
adcb
mov
jmp
xchg
bound
scas
cmp
pop
xor
dec
arpl
sub
cwtl
pop
or
mov
stc
inc
push
xchg
mov
inc
out
iret
in
jg
push
in
test
es
pushf
jo
push
and
daa
inc
push
pop
xchg
dec
mov
pop
in
sub
push
imul
fistl
xor
cmp
stos
pop
xchg
aaa
sub
imul
jp
pop
nop
loop
inc
push
lret
daa
icebp
push
iret
lock
mov
daa
jge
push
in
sti
cmp
stos
test
mov
cmp
rol
mov
or
push
ss
stos
fs
scas
sub
jno
loopne
jle
or
mov
fs
dec
push
nop
mov
ret
aas
and
cld
sub
daa
aas
xchg
push
pop
rclb
nop
and
xlat
sub
dec
adc
aas
lods
andb
dec
mov
aas
cld
stos
fwait
iret
lods
cli
daa
mov
cmp
int3
cmp
imul
pop
push
aam
ds
mov
push
jne
stos
inc
es
lcall
outsl
mov
dec
pop
mov
cmp
ja
mov
pop
sahf
sahf
pop
mov
push
xor
mov
xchg
mov
push
mov
sub
dec
sub
lret
xchg
push
nop
cmp
and
adc
test
or
in
sti
out
mov
jb
jns
sub
push
dec
inc
cmp
push
and
jp
pop
cmp
adc
scas
andb
and
gs
fwait
cmp
add
pop
push
and
insl
jno
ret
jne
adc
xchg
and
nop
outsl
enter
xor
jg
jnp
inc
ja
jae
dec
enter
xor
pop
or
xchg
and
scas
enter
xor
xchg
and
xchg
sbbl
or
xchg
and
fs
jecxz
decl
xchg
and
nop
iret
enter
mulb
or
movsb
push
xlat
sbb
or
xchg
and
nop
aas
enter
xor
sbb
or
xchg
and
nop
pop
enter
xor
sbb
imul
jg
jnp
ja
jae
dec
or
xchg
and
pop
enter
xor
scas
or
xchg
and
fs
mov
or
xchg
and
fs
xor
xchg
and
nop
dec
sti
divl
repz
or
xchg
jne
sub
push
inc
xlat
nop
rcr
rcrb
xor
sbb
or
xchg
and
nop
bswap
or
add
pop
adc
cmpsl
repnz
fstl
push
xor
out
insb
popf
cli
cmpsb
dec
aas
clc
int3
lcall
xchg
loope
mov
push
test
adc
out
shr
cmp
test
jge
movsb
push
xchg
scas
mov
sbb
mov
gs
pop
ficompl
int
sbb
and
mov
or
pop
push
and
mov
sub
mov
push
bound
test
ret
call
call
scas
lods
mov
repz
mov
mov
notb
jno
dec
mov
pop
lcall
mov
pop
mov
out
ljmp
ror
jge
in
pop
cmp
repz
ja
push
cli
pop
mov
and
pop
es
or
bnd
push
mov
or
dec
aad
aas
and
mov
pop
or
add
inc
add
sub
mov
jns
adc
lods
mov
dec
lods
dec
subb
pop
xchg
inc
mov
sbb
xchg
jne
shrb
cmp
inc
daa
dec
aam
gs
jb
sub
mov
push
and
jnp
mov
pop
sbb
inc
ret
adc
out
mov
test
pop
cmp
sub
xorb
fists
jno
or
push
movsb
cli
mov
xchg
ljmp
repnz
ficoml
ficomps
lret
sub
repnz
and
gs
sub
js
not
inc
xorb
push
mov
push
sti
movsl
scas
push
push
movsl
mov
sbb
mov
xchg
daa
shlb
sub
mov
sbb
stc
jge
aad
pop
sbb
sti
loop
mov
sub
outsl
sub
stos
mov
aaa
xchg
inc
inc
or
jns
or
xor
sti
push
and
mov
fs
dec
repz
enter
sub
push
mov
xchg
outsb
dec
lret
stos
mov
aas
stc
sub
mov
notb
push
pop
and
push
es
fstpl
adc
aaa
in
xchg
mov
pop
mov
mov
fadd
xor
dec
imul
cmp
mov
and
or
adc
sti
movsl
add
fstps
fiaddl
or
