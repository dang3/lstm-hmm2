call
in
sub
andl
push
push
mov
push
push
lea
mov
js
and
mov
or
cmp
mov
mov
movl
dec
pushl
call
incl
dec
cld
mov
add
push
push
xchg
lock
idivl
push
mov
orl
mov
cmpl
jne
push
xor
adc
mov
add
aaa
sub
cltd
lcall
mov
sub
inc
adc
pop
pop
jg
cmpl
xchg
adc
or
pop
mov
ret
cmc
mov
imulb
fldln2
inc
lock
fiaddl
inc
hlt
cmp
or
and
enter
out
out
xchg
push
add
xchg
push
push
outsb
fdivp
add
repnz
fadds
jns
fstpl
add
xchg
push
push
dec
xor
clc
sub
xor
lcall
sarb
pop
or
int3
in
clc
mov
imul
adc
std
adc
js
push
inc
aaa
jl
cs
add
std
and
mov
mov
or
or
cld
push
sbb
nop
int
pop
add
jnp
mov
push
push
xchg
pop
sub
add
sbb
in
testb
pop
push
pop
mov
jbe
popa
ja
inc
cmc
add
push
push
xor
xor
jmp
addr16
and
sbb
aas
jno
adc
inc
jb
sub
jg
jle
repnz
cmp
push
xchg
loop
inc
pop
loopne
ret
int
mov
lock
jo
shl
and
lock
jns
out
decl
push
mov
xor
pop
cmp
pop
mov
das
nop
sbb
add
in
add
cmp
mov
roll
adc
or
fdivr
mov
push
push
jmp
mov
jmp
push
add
xor
mov
shll
push
push
sbb
jne
mov
sub
add
in
lock
lods
sbb
sbb
add
std
push
into
fistpll
cli
pusha
xor
stos
adc
xor
sub
insb
xchg
inc
fs
push
addb
mov
adc
ret
xor
pop
cmpsb
push
mov
add
shl
xor
ss
cmc
cmp
push
jmp
pop
stos
fildl
js
sub
or
call
mov
clc
loop
ret
adc
mov
sbb
decb
mov
mov
push
push
mov
or
adc
in
xor
loopne
testb
dec
mov
inc
sbb
in
scas
repz
mov
icebp
test
sahf
lea
stos
fsubl
mov
adc
dec
pop
out
js
jge
call
mov
dec
sbb
ja
iret
rol
inc
stc
push
add
sbb
cmpl
mov
adc
or
mov
add
lret
cmp
je
pop
jl
js
pop
or
add
or
mov
mov
xor
mov
inc
pop
mov
dec
mov
dec
pop
pop
lods
adc
iret
lcall
mov
add
and
rcll
sub
outsb
pop
push
bswap
sbb
clc
hlt
and
imul
loopne
je
cmp
mov
inc
fists
mov
in
mul
pop
int
add
or
jns
push
sbb
lcall
fldpi
push
in
xor
and
pop
dec
adc
push
aad
mov
aaa
lock
jno
movups
jl
cmpsl
in
pop
cmp
repnz
call
jle
sub
sub
add
push
pop
test
cs
mov
mov
cld
imul
fadds
mov
push
push
cwtl
and
imul
sti
setg
xchg
mov
add
pusha
and
add
jo
and
inc
rep
dec
mov
out
mov
loope
pop
ja
fsubr
aam
mov
sbbl
mov
out
add
or
int3
jbe
jle
subl
jne
cmp
jns
jmp
and
and
ss
roll
add
aam
pop
loopne
in
dec
icebp
pop
xrelease
push
push
xor
arpl
mov
or
sbb
pop
sub
lods
loope
pop
inc
xorb
enter
orl
popa
sbb
add
or
add
push
das
mov
shlb
cmp
jbe
xor
cmp
je
sub
mov
sti
mov
xor
adc
pop
adc
push
fistps
in
push
jne
mov
jne
pop
in
je
loopne
jge
push
add
sti
sbbb
adc
mov
pushf
mov
or
sbb
mov
mov
imul
add
pop
pop
sub
pop
lret
sub
cltd
das
dec
lock
mov
movl
movsl
mov
pop
add
cmp
mov
cmpl
cmp
sbb
sti
es
je
jns
cli
add
push
and
clc
jne
add
push
inc
lock
add
test
insb
fsubrs
dec
jge
xchg
fdivl
sub
sub
sbb
cld
sbb
lcall
inc
imul
call
out
fcomps
add
popf
push
cmp
rorb
fmull
incb
iret
xor
push
adc
xor
xchg
mov
adc
mov
sbb
adc
orl
in
in
sahf
into
push
call
mov
fsubs
dec
adc
sbb
lret
push
push
dec
adc
andl
and
ret
push
mov
pop
jmp
pop
mov
clc
xchg
fnstenv
negl
push
push
push
lret
and
adc
cli
or
push
scas
ret
rcrl
and
jae
mov
stc
xor
or
lock
push
insl
cltd
gs
or
add
idivb
and
jnp
pop
mov
cmp
pop
das
pop
ret
icebp
mov
jg
orl
inc
aad
andl
add
scas
pop
subl
mov
cmp
lea
call
mov
lea
add
push
jge
pop
xchg
xor
push
push
sub
sti
arpl
sti
add
mov
mov
lea
jmp
movb
inc
cmp
or
sub
pushl
rol
shrl
pop
out
sti
loopne
out
add
clc
pop
ds
clc
cmp
outsl
mov
sub
es
or
xchg
inc
and
adc
cmp
and
add
daa
loope
mov
jl
pop
ss
xchg
inc
in
das
and
leave
popf
call
add
out
int3
sahf
xchg
icebp
jno
mov
jp
gs
lds
dec
pop
orl
jbe
dec
sbb
or
pop
mov
cwtl
fldenv
pop
roll
pop
sub
rol
mov
xchg
aad
arpl
mov
push
loope
push
or
pop
mov
pop
or
pop
loop
jo
nop
jno
or
jge
jg
sti
pop
mov
or
ja
rolb
sbb
pavgb
nop
ror
push
push
push
je
test
add
sbb
ud2
lods
pop
mov
idiv
rorb
imul
push
push
int3
jo
push
push
jo
mov
es
push
jno
mov
fstpt
mov
mov
push
sub
or
fisubrl
ret
and
test
hlt
cmp
jge
or
pop
aad
jo
sbb
cmp
in
or
sub
inc
push
data16
out
push
shr
xor
push
sbb
aaa
add
leave
loope
push
pop
push
bnd
in
xchg
or
sbb
adc
mov
mov
sbb
pop
sbb
sbb
les
inc
push
jns
enter
lcall
xor
jle
or
ss
fsubrs
push
inc
push
fmul
adc
enter
xor
enter
addr16
xor
dec
fsubl
fsub
and
enter
mov
mov
jns
enter
xchg
daa
inc
xor
cld
stos
clc
clc
mov
mov
mov
mov
sub
pop
pop
mov
mov
mov
jmp
sti
sbb
sub
pop
push
dec
xlat
andl
hlt
mov
add
sbb
std
inc
add
mov
outsb
data16
hlt
std
pop
outsl
or
inc
dec
cmp
lea
jno
cwtl
pop
jno
jae
xchg
inc
and
add
mov
jecxz
test
sar
mov
add
mov
add
notb
jns
ljmp
insl
xor
rolb
sbb
pop
inc
push
mov
loopne
fsubr
xchg
jne
sub
ficoml
and
jo
push
push
lahf
push
push
push
mov
mov
mov
daa
leave
pop
cmp
push
cmp
adc
fdivrp
push
add
push
test
jno
pop
pop
xchg
adc
push
mov
shlb
fucomi
inc
mov
pop
stos
mov
push
pop
sbb
push
dec
shll
mov
xchg
push
loope
inc
lock
push
jne
stos
xor
xlat
sbb
mov
jge
xorb
decb
sbb
andb
add
mov
in
rep
stos
stos
push
inc
mov
fsts
lods
jo
adc
sbb
mov
daa
movb
cld
gs
dec
lea
add
pop
push
stos
push
push
loop
jo
notb
sub
xor
pop
clc
xchg
mov
adc
push
xchg
test
jne
movsb
push
push
push
adc
das
imul
pushl
inc
mov
addl
and
fimuls
push
cmp
jne
mov
sub
fucomip
sbb
mov
xchg
push
pop
mov
inc
cmp
icebp
lahf
xor
add
mov
jnp
mov
hlt
cmpl
adc
je
sub
out
or
mov
mov
push
ret
hlt
je
cmp
mov
push
ret
arpl
or
or
je
add
movsb
pusha
clc
call
in
call
jl
or
addl
fbstp
pushw
lret
call
adc
push
jbe
or
jg
xor
push
call
cmc
das
xchg
loop
popa
inc
mov
data16
lods
shll
in
lahf
xor
leave
jg
insl
xchg
sub
pop
jg
mov
nop
xchg
mov
or
cmp
je
mov
and
or
xchg
jne
push
pop
pop
fisttpl
mov
push
dec
jmp
xchg
mov
arpl
push
xor
js
add
xor
inc
adc
xlat
jne
out
mov
cmpsl
xchg
inc
mov
rcr
inc
cmp
xchg
xorb
popa
je
inc
push
seta
jmp
add
mov
mov
js
or
loop
jbe
scas
clc
stc
addb
add
hlt
mov
repnz
add
jbe
movsw
sti
adcl
jle
inc
mov
in
pop
push
lea
push
xor
xor
pop
add
enter
pop
shrb
sbb
sbb
dec
mov
mov
jns
pop
out
jle
add
sbb
mov
inc
fidivl
dec
or
and
cltd
mov
gs
add
mov
in
mov
add
pop
xor
ret
lods
sub
add
int
movl
call
push
jle
aas
aas
out
cltd
lock
inc
sbb
cmp
icebp
push
jo
mov
lods
mov
add
cltd
cltd
lar
scas
test
aaa
push
cmp
push
repnz
iret
jne
sbb
xor
clc
fistpll
mov
in
or
sub
nop
mov
push
push
shll
aaa
fxam
jg
addl
sub
pop
pop
call
mov
cltd
aad
idiv
cmp
jne
imul
adc
rolb
sbb
mov
int3
pop
and
add
xor
mov
test
adc
leave
sbb
cmpsb
pusha
or
xchg
out
pusha
test
fisttps
popf
lds
pop
repz
and
ja
outsl
xchg
mov
push
xchg
test
shll
cmp
push
lcall
jnp
xor
add
das
lock
xor
mov
push
or
sbb
fs
xchg
dec
jl
lods
sbb
enter
inc
test
lea
and
repnz
mov
lods
rolb
fcoms
push
dec
mov
and
sahf
xor
add
pop
pop
mov
or
cmp
test
test
int3
push
sbb
sub
add
or
xchg
addr16
and
inc
stos
mov
sub
dec
add
sahf
rcr
fists
shlb
jp
xchg
or
pop
das
cmp
pop
sub
sbb
rcrl
sbb
les
fstpt
add
enter
push
fldt
les
inc
push
loopne
imul
mov
push
push
cmp
std
les
lds
pop
pop
inc
push
test
repnz
push
clc
pusha
cmpb
push
cmp
xorb
add
sbbl
dec
pusha
insl
jo
das
xor
push
push
fcompl
sub
inc
xlat
push
add
adc
inc
shll
mov
sub
mov
in
movsb
or
mov
andl
jbe
mov
add
push
pop
pusha
inc
in
ficomps
xchg
loopne
jb
ja
popa
js
jne
clc
jns
jae
inc
cwtl
ljmp
je
ret
lock
jmp
push
push
push
lea
push
fsubr
clc
adc
scas
xor
push
jne
dec
orb
push
add
add
daa
push
adc
out
pop
add
and
gs
push
enter
ja
or
incl
adc
icebp
lock
lea
addb
je
cmp
sub
arpl
add
xchg
enter
test
xor
sub
test
jle
add
rcrb
inc
jb
xor
inc
cmp
jl
xor
xchg
std
pop
ret
mov
jmp
and
adc
xor
in
xchg
sbb
enter
inc
or
or
daa
jmp
in
int
push
dec
sub
xor
inc
sahf
add
sbb
test
adc
sbb
jns
xlat
gs
ds
push
push
in
in
shlb
dec
push
out
stos
mov
add
sbb
das
into
rclb
repnz
mov
jmp
adc
sbbb
movb
mov
je
popa
xor
xchg
cmpb
push
sub
xchg
dec
push
jno
jb
and
or
jle
lea
jge
fsubp
loop
cmp
das
sub
xchg
dec
sbb
stos
test
push
std
push
push
clts
xor
dec
sarb
sub
dec
lea
rcll
dec
insb
sub
dec
xor
mov
movl
cmp
stos
push
out
mov
adc
sti
lods
cmp
in
repz
pop
in
arpl
mov
stc
aas
movsb
pusha
push
cwtl
neg
pop
sbb
pop
and
dec
cwtl
push
adc
mov
adc
xchg
or
cmp
mov
and
sbb
jno
add
xchg
ljmp
and
push
jo
imul
pop
icebp
cmpb
add
xor
and
movsb
add
dec
xor
sahf
sbb
inc
inc
jmp
adcl
stc
stc
xchg
push
ja
add
gs
or
add
adc
jo
xor
push
mov
jge
fwait
cmp
or
loopne
xchg
mov
adc
jns
movsl
popf
cmp
fldl
jge
insl
xor
xor
push
jnp
je
imul
xor
popa
and
jmp
dec
mov
jo
cmpsb
rcr
mov
pop
mov
mov
mov
icebp
inc
pop
in
mov
fcomps
pop
scas
jle
inc
enter
jmp
mov
mov
aas
lea
inc
lds
jl
push
stc
push
push
dec
shlb
fcmovu
sbb
push
cmpsb
xorb
shl
aaa
insb
cmp
pop
in
lea
jbe
jns
sbb
repnz
js
cmp
add
and
xchg
in
or
jge
inc
inc
push
add
mov
jbe
repz
add
jns
cltd
add
and
inc
jecxz
push
xor
cmc
sub
popf
lret
imul
xchg
out
cs
mov
pop
fnstsw
mov
test
cmp
imul
lds
inc
and
dec
dec
push
add
sbb
mov
incl
sbb
push
jbe
push
mov
pop
rcll
or
sub
pop
xor
jmp
inc
and
fildll
lock
pop
nop
icebp
in
push
jns
fwait
sub
lods
clc
mov
mov
push
rcr
movsb
mov
imul
pop
dec
xchg
jmp
xlat
es
inc
push
sahf
and
imul
pop
jae
sti
inc
pop
je
inc
pop
lods
pop
cmpsl
inc
xchg
clc
dec
test
cmp
dec
repnz
cwtl
push
fcoms
sbb
dec
mov
jo
push
sub
push
xchg
or
and
pop
pop
mov
lods
rorb
out
push
jo
pop
mov
sahf
jbe
call
rcll
sub
mov
fcom
nop
aas
fstps
cwtl
and
push
loopne
leave
subl
or
or
and
push
adc
or
repnz
dec
bound
cmp
enter
add
sub
jg
scas
pop
pushf
jne
dec
and
jge
mov
icebp
mov
in
dec
xchg
add
in
call
lret
and
std
cwtl
jae
cmp
ja
mov
xchg
cmp
ret
sub
push
push
xlat
jno
in
mov
cmc
movsb
stc
xor
repnz
mov
test
nop
inc
in
or
push
sub
inc
xchg
xor
inc
push
adc
mov
maxps
pushf
mov
mov
mov
jae
dec
je
cmp
sbb
push
repnz
jge
lcall
dec
in
pop
vandnpd
outsb
and
jp
inc
testl
mov
lds
add
jne
add
dec
leave
adc
cmc
inc
push
and
cmp
popa
dec
pushf
je
leave
data16
pop
jns
leave
cmp
je
popf
outsb
pop
repnz
dec
push
xchg
add
subb
hlt
lea
inc
xor
les
lock
push
enter
jns
shl
fwait
outsl
or
inc
out
loopne
faddl
jmp
aam
push
popf
jl
inc
lahf
enter
push
popa
dec
fisubl
dec
push
je
push
adc
in
add
xchg
sub
push
pop
in
call
in
cmp
mov
xor
mov
pop
cltd
dec
call
xor
or
outsb
stos
lea
cli
shrb
or
loop
sub
repnz
inc
pop
add
outsb
hlt
cs
adc
cmp
sbb
incl
add
mov
cmpl
adcl
inc
bound
popf
in
push
mov
sar
roll
pop
mov
rclb
and
mov
mov
std
adc
scas
pusha
xchg
popa
pusha
andl
xor
push
dec
push
cmp
cwtl
aaa
lds
xchg
cli
sub
jmp
clc
lea
ret
mov
jmp
mov
and
bound
push
loope
dec
roll
test
ljmp
jbe
inc
std
call
lahf
adc
cmp
xchg
cmp
mov
in
mov
int3
loope
sbb
loop
call
sbb
jae
xchg
jp
fldt
xor
cli
jne
mov
mov
imulb
pop
fcoml
mov
cltd
pop
cwtl
adc
cld
enter
lock
sahf
mov
incl
adc
push
xlat
add
xor
mov
push
push
popf
xchg
inc
sub
repz
notb
sub
adc
push
mov
sub
push
pusha
imul
pusha
adc
rorb
or
xlat
cmp
loope
push
xchg
or
inc
insb
xchg
ja
stos
push
sbb
fsubr
lods
leave
jno
popa
ret
pop
push
add
aaa
or
add
lcall
or
inc
aas
adc
pop
mov
jb
cmp
je
out
ljmp
add
cmp
rcrb
testb
adc
inc
sbb
inc
div
les
sub
cmc
in
xacquire
or
sbb
fcoms
push
hlt
inc
mov
add
inc
pop
das
push
jo
add
iret
imul
mov
sbb
lock
jo
imul
lret
add
mov
jnp
xchg
sarb
rcl
les
rolb
fsubr
mov
xchg
test
fisttps
insl
popa
loopne
popf
or
fmul
xchg
and
in
mov
pushf
mov
mov
cmp
jl
loopne
xor
cli
mov
lcall
test
push
test
insl
mov
xor
adcl
xchg
in
adc
lock
sbb
and
xor
push
loopne
xor
cmp
add
in
sbb
mov
pop
les
add
addl
xorb
jne
in
imul
cmc
inc
out
xor
mov
xchg
divb
or
jl
mov
int3
add
sbb
sub
adc
cwtl
or
inc
mov
inc
add
dec
mov
or
ret
xor
add
push
inc
mov
shl
push
popf
adc
das
roll
cld
shl
lea
inc
adc
push
sub
sub
leave
sbb
insl
add
sbb
mov
out
xchg
adc
psubusb
je
lock
inc
jne
mov
add
jns
jmp
pushf
dec
js
lods
ljmp
push
sub
fistpl
inc
dec
int
popa
sbb
ja
dec
xor
test
loopne
add
pop
pop
mov
ret
add
cmpl
mov
inc
pop
ret
sbb
int
mov
mov
or
inc
gs
aam
in
in
std
xchg
xor
pop
aam
jb
or
mov
movsl
sbb
mov
cmp
pop
lock
scas
lods
mov
arpl
mov
popa
push
js
dec
pop
pushl
or
clc
xor
or
push
in
movb
shrl
push
fcompl
decb
pop
hlt
je
cmpl
fiadds
je
cmp
sub
outsl
icebp
pop
punpckhbw
push
xchg
fdivrl
ss
pusha
leave
sahf
iret
adc
jns
fiadds
or
jae
xor
test
sar
je
dec
add
sbb
les
js
or
cmp
jne
cmp
or
add
fiaddl
add
lea
stc
or
jno
sbb
jae
lods
mov
and
orl
or
mov
mov
dec
dec
push
add
lret
icebp
pop
mov
pop
push
ljmp
mov
loop
mov
idivb
push
sub
mov
addl
mov
and
mov
add
adc
push
fisubl
fisttpl
jecxz
jle
pop
jne,pn
fmuls
jns
sbb
jge
fmuls
stc
int3
fiadds
call
and
push
push
roll
sarb
out
mov
xor
mov
lock
mov
xor
and
jno
movzwl
jg
icebp
adc
loop
outsb
adc
or
adc
push
xchg
lea
jle
mov
jne
sub
sub
out
mov
dec
inc
sub
rcpps
inc
lock
clc
push
aad
add
ja
and
add
dec
push
push
nop
imul
pop
fwait
push
addr16
dec
sarb
int3
sbbb
pop
mov
cmp
arpl
out
push
lret
js
loope
pop
inc
and
lret
cmpsl
loope
xchg
jnp
icebp
push
ds
push
shll
mov
enter
sahf
pop
leave
xorl
lock
push
bound
sbb
inc
or
mov
adc
sbb
data16
cmp
mov
sarb
push
cmp
cmc
aas
fisttps
add
shlb
mov
cmp
push
das
cmp
jb
pop
jg
or
cmpb
push
orb
jmp
paddd
pop
sub
sub
dec
sbb
enter
add
xor
add
filds
std
sbb
adc
adc
cmp
pop
mov
adc
inc
xor
and
js
adc
jnp
sub
js
dec
js
xchg
clc
test
mov
push
mov
pushf
jp
sbb
clc
push
ret
dec
add
add
or
cmp
adc
sbb
sub
inc
sub
inc
add
imul
or
sbb
add
cmp
sbb
repnz
int3
les
xchg
dec
add
in
add
add
mov
lock
fwait
lock
inc
mov
adc
shr
test
push
and
out
popa
push
pusha
xchg
and
cmp
dec
jb
shrl
mov
or
xchg
xchg
push
push
popl
cli
cld
mov
and
mov
pop
addr16
idiv
aas
xchg
imull
xorb
sbb
divb
xor
xchg
mov
aam
push
test
xor
and
testl
std
mov
inc
cmp
jb
addl
mov
add
mov
cmp
xor
lods
iret
and
pop
sbb
mov
jo
xchg
push
test
jae
iret
rcrb
mov
insb
pushl
xchg
xchg
out
sbb
mov
push
inc
mov
stos
mov
std
mov
sub
push
xchg
aad
add
inc
sti
mov
cmp
mov
push
push
imul
fcoms
push
inc
pop
js,pn
pop
add
or
xchg
mov
pop
test
idivl
or
imul
adc
jae
rcrb
movsb
and
sti
je
push
lods
pop
add
ret
mov
cltd
xchg
jg
cmp
mov
std
call
pop
add
jmp
test
jne
cmp
cmpb
pop
push
movsb
dec
roll
inc
test
sti
inc
fdivrl
cmpb
stos
pop
mov
pop
xor
xor
push
cmp
fadd
icebp
sub
loopne
dec
inc
or
jnp
mov
add
out
jge
mov
add
push
pop
push
jb
js
or
jmp
cmp
adcl
add
push
and
push
fcmovnu
std
imul
add
add
add
and
adcl
push
fstpl
imul
jecxz
or
push
jmp
xchg
bswap
and
mov
jmp
push
add
add
sbb
aaa
jae
xchg
fcomp
add
ficompl
xor
pop
pop
cmp
cmp
loop
loopne
xor
rcll
out
idiv
xchg
jne
or
and
movb
imul
add
push
rolb
jle
in
popa
pop
lods
test
push
push
imul
repnz
inc
xor
push
push
and
inc
dec
popf
or
lret
fwait
pop
dec
cmp
or
pusha
ficomps
pop
fmull
aam
cs
enter
cmpsl
enter
adc
add
add
xor
int3
ret
cmp
mov
test
in
mov
add
in
add
add
inc
loope
add
and
in
test
call
arpl
and
jp
mov
and
cmp
push
cmpl
iret
fwait
es
jbe
rcll
pop
mov
test
lret
mov
jmp
adc
mov
pop
in
addr16
notl
insb
jmp
cmpl
sbb
dec
pusha
adc
cmpsl
jo
cmp
test
loop
mov
push
adc
jo
mov
jg
je
pushl
push
mov
jl
dec
inc
and
xchg
mov
inc
test
leave
cwtl
xchg
pushf
dec
jbe
gs
out
sub
mov
xorb
dec
dec
dec
es
in
xchg
xchg
and
adc
add
loop
xor
leave
and
aam
dec
dec
push
jns
arpl
xchg
test
xchg
pushf
dec
push
add
or
leave
leave
and
sbb
xchg
pushf
dec
jb
pop
or
repnz
xchg
add
pushf
sbb
cld
ret
inc
call
mov
mov
je
jl
push
in
inc
fs
and
xchg
inc
xor
sub
leave
leave
and
inc
incl
and
sbb
arpl
insb
je
jle
push
imul
pop
push
imul
cmc
aam
adc
cmp
fidivrs
cmp
lock
push
cmp
add
pop
std
repz
add
pusha
sbb
fsubrl
sahf
cmp
add
cmp
and
fs
nop
pushf
cli
and
test
jle
mov
bound
or
pop
push
xor
repz
rcl
push
mov
push
mov
fisubrs
adc
push
pop
cmp
dec
sahf
adc
or
and
or
add
out
negb
daa
dec
add
push
add
sbb
fstpt
add
inc
and
int
jno
cwtl
pusha
pop
in
in
mov
int3
incl
lcall
inc
enter
jne
inc
lea
sbb
push
dec
push
sbb
mov
pop
xor
cmp
scas
cmc
out
add
aas
or
je
push
mov
cmp
pop
cmp
jl
imul
mov
or
sbb
test
jge
popa
enter
sbb
and
mov
je
test
jecxz
cmpsb
sbb
mov
mov
xlat
test
lret
mov
add
outsl
pop
mov
xchg
jbe
dec
jecxz
mov
pop
in
xchg
inc
testl
bsf
add
test
adc
add
je
xor
outsb
call
inc
fimuls
pop
lret
test
xor
sbb
add
enter
incb
jl
inc
push
jo
sbb
shll
fstpt
push
loopne
inc
xchg
push
add
leave
in
or
xor
iret
bound
pop
cmp
jl
sbb
inc
cmp
dec
and
inc
ret
add
jb
fldenv
repz
and
or
daa
call
pop
jg,pt
movlps
cmp
mov
fiadds
cmp
repnz
xchg
mov
mov
cmp
xchg
xchg
pushf
dec
sbb
fs
mov
or
daa
dec
xor
and
and
aam
add
nop
mov
jns
xor
cmp
xchg
dec
dec
es
outsb
pop
repnz
test
leave
enter
mov
pushf
andb
movsb
dec
stos
inc
dec
jb
cmp
xchg
dec
shlb
mov
leave
leave
and
pop
sbb
sbb
mov
insb
mov
adc
xor
push
xor
or
or
cltd
in
xchg
sbb
and
daa
cmp
adc
out
add
fs
mov
and
daa
cmp
shlb
aam
das
in
iret
daa
and
push
and
and
or
fisubl
sub
mov
mov
xlat
pop
and
xor
leave
and
int3
xchg
and
fdivs
adc
dec
mov
and
popa
adc
test
and
and
mov
cmp
xor
xchg
cmp
add
jo
push
sti
push
gs
or
push
xchg
dec
outsb
xchg
mov
pop
jge
repnz
pop
insb
sub
sbb
nop
xchg
dec
inc
sub
sbb
les
adc
push
loopne
or
mov
pop
and
inc
adc
xchg
sbb
test
aaa
push
push
add
popa
rclb
or
les
mov
sub
mov
mov
icebp
mov
mov
loopne
aam
sbb
or
cld
mov
mov
test
lods
adc
bound
rcr
test
push
push
sti
add
adc
cmpsb
clc
sub
clc
outsl
int3
cmp
xchg
sub
ret
and
nop
ja
std
rcr
jnp
mov
into
sar
je
push
lcall
mov
add
roll
and
or
aas
nop
mov
jl
jae
push
pop
add
repnz
in
mov
fwait
jge
cmp
inc
pop
pop
dec
push
fcmovnbe
inc
inc
pop
jne
and
inc
dec
jle
ss
iret
jg
shrb
mov
popf
xchg
jle
mov
jge
iret
ret
enter
loope
bound
in
test
xor
sbb
fistpl
loope
mov
xor
push
add
or
insl
sub
and
fs
xchg
xchg
call
jns
sbb
je
ds
jns
lret
mov
lcall
mov
jns
mov
add
and
inc
add
mov
mov
cmc
ffreep
popa
xchg
mov
pop
mov
inc
cmc
push
sar
pop
je
mov
and
pop
andl
scas
subb
mov
mov
add
cmp
jne
movb
lcall
cltd
xchg
negl
loop
push
push
stc
icebp
push
inc
in
jo
xchg
sbb
adc
mov
or
icebp
pusha
add
test
sub
cmp
js
inc
popa
cmp
mov
js
aaa
lds
mov
rcrl
add
mov
bound
mov
pop
rolb
fidivs
cmp
aaa
push
loope
and
insl
push
jbe
imul
out
inc
mov
in
cmp
cmp
aas
int
pop
and
das
hlt
push
sbb
sub
mov
mov
mov
imul
mov
std
dec
imul
pop
push
or
mov
push
xor
xchg
inc
xchg
scas
jg
jp
icebp
mov
and
pop
jne
pop
pop
and
and
clc
inc
call
cmp
xchg
or
push
lods
sub
mov
inc
scas
je
cmpsl
cmp
outsl
mov
ja
or
or
loopne
sbb
jae
jbe
inc
cmpsb
mov
dec
popf
push
xor
sarb
cs
js
outsb
jbe
test
loope
iret
test
out
mov
mov
sbb
xor
jle
and
jmp
sbb
daa
push
inc
push
push
nop
popf
adc
push
shrb
fcoms
rcrb
stos
adc
mov
adc
jns
pushf
cmpl
xchg
mov
fadds
scas
data16
aad
pop
mov
pop
push
sub
mov
lods
push
push
xor
pop
sbb
cmp
fsub
dec
sbb
inc
pop
and
xlat
add
push
push
call
xor
xor
xchg
sub
pop
pushf
loopne
leave
xchg
add
fiadds
mov
inc
cwtl
xor
cmp
or
jns
sub
js
cld
stos
mov
or
xlat
les
or
cmp
adc
loopne
enter
pusha
es
or
leavew
jb
xchg
inc
push
arpl
sub
mov
adc
je
rorb
mov
repnz
jbe
xchg
mov
pop
adc
and
and
cltd
test
mov
dec
xchg
mov
sbbb
ficoml
into
and
daa
roll
cmp
mov
xchg
fisttpl
imul
sbb
popl
popfw
or
cmp
mov
insb
pop
push
mov
daa
lcall
add
pop
add
test
inc
adc
jns
je
hlt
lcall
je
jo
jp
fildl
outsb
mov
jo
fldenv
push
inc
dec
fs
imul
insb
and
inc
hlt
enter
push
dec
jb
jnp
and
fdivl
nop
aaa
ret
add
push
pusha
aas
es
in
mov
xchg
cmpsb
ss
add
je
cmp
repnz
cmp
je
inc
mov
add
and
fs
sbb
and
dec
insb
sbb
pop
roll
add
and
roll
fdivrs
pop
pop
cmp
in
add
sarl
aam
dec
out
jne
movsl
and
loope
les
adc
es
xor
loop
sbb
and
sbb
xchg
add
push
or
xorb
push
dec
in
enter
iret
vmwrite
or
pop
xor
add
nop
inc
and
iret
adc
or
adc
xchg
and
adc
cmp
add
sub
dec
movl
mov
sarb
push
fdivrp
shl
dec
mov
in
setns
push
xchg
out
sbb
sbb
and
pusha
pop
fs
addl
rcr
push
adc
sbbl
adc
inc
mov
xor
loope
nop
mov
pop
push
add
movsb
pop
xor
stos
add
fcoml
xchg
loopne
out
jmp
sub
sbb
cmp
pop
push
adc
jg
mov
aam
pop
jae
or
pop
cmp
aam
fistpl
pop
jmp
sub
scas
xor
mov
push
div
push
clc
mov
adc
mov
clc
mov
sbb
imul
mov
daa
adc
jne
pop
es
xor
mov
insb
or
push
mov
or
xchg
or
into
mov
sbb
xor
out
popl
addr16
mov
fnstenv
leave
je
xor
xor
or
or
loop
adc
mov
rcrb
push
push
scas
adc
fsubr
sbb
sbb
add
cmpsb
jmp
dec
push
sub
inc
xchg
push
pop
and
stos
sub
pop
jo
lods
clc
addr16
jbe
mov
adc
cmpsb
jmp
in
xlat
mov
nop
mov
lds
mov
xchg
pop
mov
lret
add
adc
inc
sub
and
xor
xor
push
call
inc
pop
pop
xor
push
xor
pop
jmp
add
test
sub
add
pop
out
inc
inc
negb
inc
cmp
jl
mov
jmp
adcb
je
lea
jns
mov
icebp
ja
notb
popa
cmp
cmpb
jne
cmpb
pop
xor
fs
pop
fadds
sarl
pop
jb
xchg
je
inc
xor
imul
test
adc
push
and
xchg
sbb
add
bound
add
sbb
ss
mov
loopne
add
or
and
add
je
movsb
jns
add
sbb
mov
inc
or
sarb
xor
inc
xchg
ja
sbb
outsl
jo
inc
or
or
cmp
or
adc
pop
int3
mov
pop
cmp
jp
jle
mov
cmp
bnd
insb
aas
movsb
hlt
xchg
gs
or
je
mov
idivl
pop
add
arpl
push
jp
lods
xchg
add
imul
pop
cmp
jbe
mov
flds
cld
fucomp
cmp
daa
xor
pop
sub
or
sbb
and
rorb
push
sbb
and
lea
or
loopne
cmp
aas
cwtl
pop
loopne
sub
incl
out
adcb
add
inc
cmpl
cli
dec
mov
jmp
mov
test
stc
mov
xchg
ds
shlb
push
pop
adc
add
call
cmc
xchg
mov
push
xchg
jo
inc
rolb
dec
idivb
cmpb
cmp
je
push
push
sbb
iret
xor
in
mov
push
fadds
or
inc
push
es
enter
ja
sahf
push
fstps
pop
jne
push
or
adc
mov
pop
jne
pop
inc
in
add
or
mov
mov
xor
fistps
add
nop
arpl
mov
je,pn
add
in
cltd
fldpi
push
mov
addr16
imul
xor
and
adc
int
mov
repnz
and
rclb
shll
shl
mov
push
lret
je
push
scas
lods
or
in
ucomiss
out
sub
push
add
push
in
andl
pop
andb
add
mov
fs
and
cmpsb
je
and
enter
fwait
je
test
cwtl
popa
shll
push
jnp
sbb
cs
jo
pminub
cmpb
inc
pop
icebp
mov
mov
jl
add
mov
push
pop
sbb
jle
lret
repnz
sbb
mov
pop
lea
ljmp
dec
inc
cwtl
inc
test
jo
loopne
pop
mov
push
shlb
lea
out
std
lock
and
add
addl
fcmovnu
mov
pop
add
sbb
int3
cmp
shlb
jne
sbb
jmp
jne
mov
mov
inc
adc
or
mov
sti
and
or
pop
pop
in
jmp
or
jne
and
sub
jge
jne
add
push
lahf
jmp
xchg
int
dec
mov
sub
add
mov
dec
fwait
or
mov
mov
pusha
push
imul
lret
out
push
mov
je
or
faddl
add
in
mov
sub
call
add
orb
pop
mov
xor
add
jecxz
mov
jne
orb
sar
mov
fsubr
outsl
insl
add
mov
data16
icebp
lods
enter
sbb
or
xor
push
xor
cmp
cmp
sub
push
cmp
jmp
fwait
add
orb
sahf
rorb
sbb
test
mov
rclb
inc
add
inc
push
adc
jmp
in
mov
addr16
loope
mov
stc
pusha
vphaddwq
js
sbb
or
mov
das
adc
jmp
xor
cld
mov
and
mov
in
jl
pop
imul
xchg
gs
push
or
cmp
xchg
pop
testl
in
cmp
or
or
cmp
int
add
mov
cs
push
and
xchg
mov
and
cmp
push
push
push
mov
pop
push
enter
adcb
sbb
pop
xor
pcmpeqw
mull
inc
mov
adc
sahf
and
loopne
jb
mov
rolb
push
inc
into
and
imul
sbb
mov
fisubrs
nop
iret
push
imul
mov
adc
adc
jle
inc
mov
pop
jb
add
das
imul
pushf
test
addb
mov
or
daa
repnz
rcrb
mov
popf
or
sbb
loopne
or
cltd
nop
inc
popa
inc
loopne
pop
xchg
push
into
ds
repz
ljmp
push
inc
gs
push
shrb
adc
dec
rorl
xchg
nop
pop
mov
outsl
pop
cmp
xchg
in
add
pop
outsl
stos
mov
push
add
xchg
inc
sub
add
fcmovbe
pop
add
sub
repnz
cmp
push
test
inc
mov
popl
adc
sti
sbb
imul
push
inc
push
adc
push
push
jns
std
sbb
shl
pop
adc
adc
push
pop
cltd
mov
subb
xlat
maskmovq
jg
js
mov
adc
or
gs
ja
sbb
or
adc
lret
dec
enter
shl
pop
mov
mov
inc
lds
pusha
sub
mov
jnp
push
push
cmp
xchg
push
mov
push
cmp
mov
shrb
and
ret
lret
nop
xor
dec
sub
jae
jmp
hlt
shll
addb
jns
adc
adc
pop
fmulp
mov
xchg
xor
pop
repz
sbb
jge
and
adc
jg
out
mov
lds
jno
cmp
mov
clc
mov
push
aam
adc
push
sub
xor
je
cmp
jae
and
mov
rclb
lret
mov
ret
push
pop
cmp
adc
popf
and
push
or
dec
stc
add
xchg
or
push
push
arpl
push
out
out
hlt
scas
lock
xchg
adc
pop
sahf
hlt
daa
daa
mov
jnp
and
dec
or
xchg
rclb
fildl
rcl
shll
jl
pop
fdivl
in
fs
fs
in
mov
and
xchg
xchg
or
dec
hlt
loop
nopl
sar
test
xchg
scas
and
xor
or
testb
mov
lds
and
or
test
enter
movsb
inc
pop
outsl
push
and
loop
fwait
pop
daa
aas
nop
jns
inc
jb
js
push
in
nop
and
add
inc
cmpsb
popf
cmp
add
enter
xchg
adc
in
sbbl
and
or
cltd
xlat
sub
mov
cmp
gs
push
iret
aad
ret
add
pop
inc
divl
lock
cmpl
jge
add
inc
lock
mov
and
cmp
pop
mov
stos
loopne
add
cltd
hlt
push
movsl
xchg
cmpsl
iret
pop
cltd
insb
enter
sbb
mov
dec
sbb
dec
jl
nop
dec
inc
je
sbb
fimuls
adc
add
sbb
push
add
sbbl
jne
movsb
cltd
in
add
jl
enter
ja
or
stos
sahf
cld
sbb
inc
movsb
xor
xchg
inc
icebp
xlat
lea
jno
mov
sub
mov
fisubrl
pusha
cmpb
insl
jne
sete
leave
xor
sbb
in
es
das
sbb
repz
sbbb
inc
fidivs
dec
xorl
xor
js
leave
rcrl
aam
mov
sbb
dec
cli
sbb
xchg
cmp
lock
pop
daa
and
mov
sbb
clc
lods
mov
add
jbe
or
in
dec
fcmovne
aas
dec
addl
mov
pop
pop
jb
jg
jns
jbe
gs
sub
or
inc
cmp
jns
into
outsl
jl
les
push
cs
ss
outsl
and
inc
outsl
mov
insl
lods
lods
pop
lea
mov
dec
dec
dec
add
jmp
xchg
mov
fs
sbb
das
pop
mov
pop
leave
cmp
cmp
mov
xchg
lods
push
repnz
insb
lods
add
pusha
pop
xchg
mov
inc
or
or
neg
rcrb
mov
sub
sbb
aaa
in
daa
mov
jmp
fwait
test
sbb
lods
rcpps
mov
lods
push
pop
cmp
or
pop
sbb
enter
sahf
pop
mov
stos
movl
add
rcrb
xor
inc
cmp
xor
mov
push
mov
push
aaa
cmp
js
mov
push
cltd
jle
enter
shll
sub
bound
incl
sbb
les
jge
pop
ja
arpl
sahf
sarb
rolb
aam
mov
je
jae
xor
arpl
mov
pop
aam
add
jbe
test
xchg
and
inc
mov
jmp
adc
jne
or
or
add
adc
in
lods
imul
sbb
and
call
and
dec
jmp
in
jp
frstor
add
test
or
mov
mov
dec
sub
js
cli
xchg
and
aaa
dec
sti
sbb
jo
xchg
test
cli
add
jge
dec
mov
sbb
rorb
in
adc
push
xchg
dec
mov
pop
adc
movsb
sbb
das
push
nopl
mov
mov
or
in
add
mov
addb
out
add
ss
and
mov
adc
mov
push
stos
pop
adc
cmp
jge
xor
pop
dec
and
hlt
shr
jo
mov
lock
push
xorb
cmpsb
js
xchg
pop
and
fldl
or
pop
daa
test
test
mov
xor
xlat
in
into
or
daa
das
je
lea
lods
scas
addb
cmp
loope
sub
pushl
ret
lods
push
add
jg
notb
adc
inc
adc
dec
pop
aas
mov
push
pop
mov
mov
pop
div
cmp
je
call
pop
sbb
stc
mov
mov
movsl
push
inc
das
loope
dec
enter
add
cmp
pop
aas
cmpsl
inc
call
popa
enter
adc
lock
jae
in
loope
add
ljmp
stos
pop
cmpsb
shlb
pop
add
scas
or
xchg
aad
fimull
mov
and
int
and
mov
xchg
mov
cltd
push
push
sbb
mov
aas
or
mov
aad
clc
sub
add
jo
pop
add
aad
push
push
nop
push
xor
daa
popf
mov
adc
jge
xor
jb
and
gs
sbb
jecxz
push
stos
int3
insb
mov
sbb
stos
sub
dec
test
std
adc
dec
cmpsb
cmp
or
fmuls
and
add
nop
pop
loopne
es
pop
stos
inc
pop
add
js
leave
pop
inc
dec
adc
and
sbb
or
cmp
repnz
cmc
mov
imul
out
xor
push
cmpl
test
lcall
pop
shrb
mov
jns
test
push
push
or
mov
xchg
inc
cli
cmp
mov
mov
and
scas
pushl
or
aaa
or
and
mov
xchg
dec
adc
add
rclb
fmuls
push
jmp
jg
pushf
mov
shlb
icebp
mov
cmp
jns
sti
in
xchg
mov
push
into
xor
jecxz
xor
adc
jmp
sbb
scas
dec
push
add
inc
movsl
pop
xor
pop
ror
test
xor
aad
xor
add
adc
ja
jnp
jg
std
add
enter
hlt
shr
dec
je
sbb
or
cmpb
inc
fiadds
dec
clc
xchg
xchg
mov
je
xchg
jge
fwait
aam
shrb
fs
dec
in
test
in
repnz
xor
and
dec
push
adc
add
sub
cmp
push
gs
dec
cld
adc
xchg
adc
jecxz
mov
adc
xor
loopne
xor
sbb
xor
or
nop
aaa
fdivrs
jns
test
xchg
push
shl
cmp
nop
jmp
sub
mov
push
es
sbb
test
cmpsb
fwait
mov
shlb
cmp
aam
sti
jecxz
movsl
pop
movsl
sahf
imul
sar
add
inc
pop
pop
test
pop
icebp
repnz
add
xor
push
les
push
sbb
push
les
jecxz
pushf
adc
jmp
xor
push
jns
add
jno
sahf
andl
mov
aaa
js
rclb
or
adc
pop
xor
jg
inc
push
mov
cmc
or
test
out
xor
je
and
cmp
or
fsts
pop
mov
mov
xchg
mov
mov
push
hlt
mov
leave
pop
sub
test
dec
dec
jl,pn
cld
iret
mov
inc
add
mov
ret
repnz
mov
xchg
fdivs
xchg
mov
cmpsl
test
test
jb
add
and
xchg
pusha
push
mov
mov
sub
inc
cmp
daa
add
add
cmp
and
push
jle
push
or
enter
jo
jo
mov
je
dec
test
and
js
std
pop
or
inc
sbb
push
jmp
daa
or
adc
pusha
or
adc
sbb
fdiv
lods
pop
cmp
dec
add
movsb
mov
or
and
sub
add
pop
add
push
lods
fnstsw
sbb
cmp
sbb
adc
push
loope
jno
fistps
xchg
inc
test
rorl
pop
push
cmp
and
add
xchg
jecxz
insl
or
pop
movsb
cmp
push
movzbl
jbe
xor
add
inc
pop
mov
dec
daa
out
sub
add
dec
je
lea
sbb
faddl
pop
lea
int3
rcll
insl
and
jo
pop
inc
es
out
mov
pop
jge
adc
add
int
dec
bound
push
xor
subl
aam
or
lret
prefetcht0
cwtl
test
pop
and
ret
ss
repnz
aaa
pop
daa
inc
int
mov
cmp
sub
mov
jns
add
add
push
and
mov
jbe
mov
xor
sbb
ret
or
pop
pop
je
out
jmp
mov
mov
icebp
push
mov
ror
jmp
jle
aad
fcompl
test
in
sbb
push
xor
and
sbb
mov
rorb
repz
adc
enter
push
enter
mov
mov
or
repz
loopne
pop
lds
sbb
loope
push
sbb
mov
sbb
and
fcoml
ss
sbb
dec
and
sub
test
sbb
ret
push
adc
outsb
aaa
push
cmpps
ret
mov
inc
sahf
addl
adc
shll
sbb
dec
xor
mov
mov
inc
addl
or
fwait
mov
les
mov
repz
fsts
push
sbb
dec
out
leave
mov
mov
xchg
cmp
arpl
cmp
test
sbb
rcl
lods
out
pop
nop
movsb
xor
adc
and
or
rcrl
adc
imul
cmp
pusha
xor
pop
ds
mov
mov
xor
inc
xchg
rolb
adc
push
adc
jmp
popa
lret
loopne
cli
sub
mov
inc
rolb
lock
push
bound
inc
nop
xchg
cmp
pop
add
test
dec
fisttpl
int3
aaa
adc
mov
add
dec
xchg
or
jg
or
pushl
push
jecxz
cld
rcrl
add
sub
or
xor
hlt
sub
fldcw
test
arpl
divl
cmp
movsb
jl
test
pop
xchg
jns
xchg
outsb
inc
jo
in
cmpb
movsb
push
xor
dec
es
pop
or
mov
add
test
mov
imul
hlt
and
xlat
mov
mov
ret
add
rcl
cwtl
and
dec
ret
repnz
sbb
into
test
enter
push
arpl
rol
cmpsl
add
jnp
pop
mov
or
or
icebp
sahf
sbb
scas
jb
inc
mov
add
test
sbb
call
inc
push
add
push
cmp
in
xchg
push
stc
add
inc
pop
andl
and
int3
lds
negb
pop
jge
sbb
push
bound
pop
addb
test
jb
cmpsl
imul
outsb
dec
fs
test
xchg
cmp
mov
sbb
mov
das
mov
pop
xchg
cld
inc
dec
xor
or
sahf
lock
mov
push
xchg
in
cli
lar
cmpsl
jns
jbe
movzbl
cmp
dec
jl
and
fstpt
sahf
sbb
add
jo
jge
out
jb
popa
roll
push
or
push
or
mov
adc
dec
cwtl
and
jb
sub
and
mov
mov
inc
sbb
dec
ficoms
fadd
roll
and
mov
or
in
stc
pop
lds
and
dec
enter
pop
cs
sub
or
and
cmp
daa
xchg
lret
in
into
sub
pop
shrb
rcrl
shrb
rcrl
aam
aad
dec
pop
cs
lret
xlat
inc
fcoms
flds
push
fldt
xchg
lret
mov
adc
fstl
cmp
adc
or
loope
loop
jecxz
in
jb
jl
in
push
pop
out
call
xchg
lret
in
inc
jmp
in
aaa
in
sbb
mov
sub
repnz
repz
mov
hlt
sbb
test
sub
dec
mov
mov
add
pop
inc
inc
mov
jb
jg
movsb
jo
outsl
add
fiadds
mov
inc
cmp
jb
pop
sti
std
inc
clc
sub
mov
jb
jg
cld
mov
add
add
enter
cmp
testb
adc
mov
or
clc
jbe
inc
and
cmp
jns
mov
mov
xor
arpl
ret
clc
mov
mov
add
lret
mov
mov
cmp
shlb
test
rcr
xchg
aad
xorb
mov
sbb
shrl
push
popa
fs
and
inc
xchg
or
test
xchg
jle
lea
pop
fdivr
aaa
inc
adc
or
adc
or
or
js
push
sbb
jno
sahf
adc
inc
dec
addr16
gs
arpl
push
adc
lea
push
sub
add
es
or
cmpsl
je
cltd
jbe
pop
cmpl
pushf
testl
clc
lods
sti
das
and
cld
mov
clc
and
das
push
cmpsb
jo
lods
imul
je
and
das
adc
add
push
std
inc
lock
lds
mov
dec
test
cli
inc
rolb
sbb
insl
fnstenv
int3
mov
add
mov
pushl
or
movsb
jo
lods
in
mov
pop
xor
pop
jno
add
clc
das
mov
dec
cmp
jne
or
sbb
arpl
lea
aaa
sbb
fcomps
adc
lock
dec
cwtl
mov
andb
nop
adc
sbb
rorb
add
pop
insl
loopne
mov
push
push
lahf
aam
mov
xchg
daa
cmp
testb
int3
mov
xorb
push
xor
cs
add
iret
jae
mov
sub
cmp
add
cmpl
or
mov
add
femms
sbb
adc
rolb
shl
fs
cmp
pop
mov
lret
call
cmp
cmp
and
push
push
inc
loope
les
fmull
and
nop
jbe
popa
outsb
dec
xor
and
xchg
daa
pop
loop
lods
stc
pop
lods
fsubrs
mov
rcl
add
pop
and
or
add
jne
ds
mov
jecxz
leave
jae
aam
mov
test
mov
ret
push
pop
aam
outsl
lea
aas
sbb
jecxz
cmp
fsts
jnp
out
xor
add
mov
ret
cmp
stc
pusha
add
mov
pusha
inc
mov
loopne
cmp
xor
pop
enter
sbb
je
pusha
bsr
jne
sub
mov
les
pop
sbb
mov
ffree
fldt
pushf
nop
std
cmp
pop
mov
lods
out
or
negb
cmp
mov
mov
cmp
mov
and
imul
mov
sbb
sbb
mov
std
push
sub
hlt
push
lds
mov
das
adc
mov
aam
or
aam
pop
push
es
in
and
push
mov
ja
js
mov
mov
pop
mov
mov
mov
mov
add
inc
idivl
add
add
adc
and
or
or
orb
pop
aad
aaa
les
fdivl
mov
cmp
mov
mov
das
push
push
call
sub
and
gs
mov
sbb
sbb
and
adc
rorb
sbb
lret
xchg
inc
cmp
orb
jno
lret
add
std
mov
mov
insl
fwait
or
aas
sbb
loopne
xchg
sbbb
ret
or
add
int3
mov
loopnew
jl
sub
fcompl
jge
push
dec
loopnew
push
rolb
sub
sbb
adc
rcrb
addr16
sahf
pop
cmpsl
push
mov
addr16
push
mul
sub
cld
insl
cmpl
mov
push
xchg
pop
pop
mov
jbe
lods
or
jl
add
xor
clc
mov
dec
jnp
push
push
loopne
lock
sahf
in
pusha
lcall
sub
subl
in
pop
lods
loope
xchg
push
pusha
mov
pop
sbb
xor
push
shr
outsl
ret
arpl
adc
movsl
shll
dec
xor
loopne
pop
pop
clc
push
or
bound
leave
sti
pop
and
sbb
push
push
aam
lock
fs
cld
outsb
and
in
xor
loopne
lea
pop
add
mov
pop
sbb
add
push
aas
add
mov
das
mov
jo
adc
leave
adc
add
mov
xor
add
inc
xor
adc
cmovle
xor
in
ficoml
loopne
mov
rcrl
jo
cmp
orl
pop
dec
lods
inc
and
cmp
gs
ret
inc
mov
call
ret
sbb
cmpb
je
push
data16
lahf
inc
sbb
cld
add
mov
es
add
push
jb
int3
int3
add
pop
lret
mov
lret
aam
fdiv
fsub
inc
fsubrl
adc
lea
test
cmp
xchg
sbb
test
mov
inc
popa
xchg
fisttps
sub
dec
xor
in
xor
sbb
in
and
daa
movsb
and
add
push
mov
jmp
xor
mov
stc
pop
adc
inc
sbb
test
add
jno
and
add
push
ret
sbb
jecxz
mov
pop
jl
add
fisttpll
and
ret
or
repz
push
sarl
sbb
sbb
pop
shll
jmp
sbb
ret
xor
dec
je
ds
out
push
add
scas
lods
cmp
cltd
test
dec
add
push
jne
adc
xor
mov
pop
xor
inc
pushf
cmpsb
movl
faddl
jnp
pushl
jne
outsb
movsb
add
jbe
stc
or
movsb
or
xor
notb
mov
nop
or
std
push
adcb
movsl
mov
out
roll
mov
add
add
add
add
xchg
mov
int
loopne
xor
mov
imul
cmp
dec
mov
or
sbb
push
jge
mov
mov
movsb
jecxz
or
clc
mov
or
or
adc
inc
inc
xchg
mov
das
cmc
stos
or
fs
inc
push
dec
rorl
popf
and
add
jl
push
xchg
sub
sbb
mov
add
daa
sbb
xor
sbb
cmp
cmp
jne
stc
in
jge
push
or
adc
rcrb
in
sbb
out
mov
nop
and
jbe
cmp
std
add
repnz
jne
cmp
jae
mov
aam
add
sahf
push
push
fwait
mov
outsb
sbb
or
push
pop
mov
cltd
ret
dec
mov
inc
cmp
jbe
cmp
and
mov
sub
out
pop
mov
pop
mov
xor
test
or
push
pushf
jbe
in
sbb
jmp
iret
ds
fsubrs
mov
xchg
rclb
inc
adc
push
xor
and
push
nop
cmp
push
dec
dec
sbb
je
adc
cmp
or
pop
cmp
jns
lahf
ficompl
inc
sub
in
mov
orl
mov
outsl
movswl
mov
pop
sub
fsub
push
push
push
mov
mov
inc
movsb
sbb
mov
mov
add
nop
and
push
imul
lock
mov
lea
inc
sahf
outsb
and
push
lock
sbb
cmpb
xor
jnp
imul
xor
pop
dec
fimull
nop
shrl
call
and
outsb
mov
mov
mov
nop
cld
xor
popa
and
sbb
inc
rcll
aam
subl
mov
je
mov
mov
cld
xor
outsb
fists
or
push
push
fnstcw
and
pop
testl
lcall
add
lods
and
jno
push
jnp
and
lock
inc
push
or
adc
cltd
mov
push
dec
aas
cmp
test
imul
popa
push
pusha
sub
push
push
in
mov
js
repz
jmp
sbb
es
and
gs
mov
jnp
sub
inc
add
mov
imul
jo
mov
xchg
scas
add
pop
add
xor
repz
mov
pop
jne
and
aad
mov
testl
sbb
lea
pop
cmpsb
nop
inc
ss
popa
fisubs
aam
pop
mov
dec
or
or
mov
les
xchg
cmp
fisttpll
hlt
inc
dec
test
adc
sub
cwtl
add
pushf
mov
pop
add
je
push
cmp
sub
mov
pop
xchg
lcall
pop
mov
adc
jmp
mov
fisubs
mov
testb
jne
notl
add
scas
loopne
push
cmp
je
movsb
jp
psubsw
sub
pop
cmp
add
rcrb
or
push
dec
aad
dec
xchg
ja
lock
out
lea
daa
movsb
inc
inc
pop
mov
fmull
sahf
int3
inc
or
aam
sahf
enter
jae
in
xchg
pop
xor
mov
pop
adc
xorl
rcr
mov
inc
pusha
es
mov
ja
js
sub
or
add
aad
les
push
mov
test
test
in
add
push
cmp
addb
stos
mov
add
and
lods
aam
or
fwait
pusha
xchg
cmp
pop
imull
mov
and
inc
or
jbe
pop
inc
lret
dec
dec
scas
push
cmpl
sub
stc
out
pop
jp
push
cwtl
es
fmull
add
aam
push
or
in
xor
mov
add
das
in
movsb
mov
inc
out
sahf
in
fs
jmp
xchg
dec
dec
fidivl
dec
dec
push
out
jmp
inc
movsl
mov
jb
je
ficoms
pushf
mov
lea
ljmp
push
jnp
ret
add
and
xorl
sub
sub
imul
das
dec
sub
cmp
add
push
push
in
insl
fs
push
push
sub
xlat
sti
rorb
test
fists
test
les
inc
push
dec
scas
in
cmp
mov
pop
loopne
or
out
mov
and
rcll
fldl
insb
sbb
or
out
out
or
adc
iret
sbb
in
sbb
and
and
sbb
mov
mov
jnp
dec
lods
or
cmp
shll
mov
js
dec
mov
add
imul
xor
xor
add
xchg
sub
xchg
ret
adc
and
xlat
enter
push
lahf
push
sbb
lcall
movsb
adc
mov
xchg
bswap
fsubrp
cld
push
and
out
loope
movsb
push
loope
mov
leave
ds
rorl
lcall
mov
lock
push
pusha
jge
adc
mov
push
push
push
movsl
push
adc
aas
inc
loopne
mov
je
push
and
adc
sbb
icebp
jp
divb
add
or
dec
test
scas
and
xor
jge
mov
add
test
push
or
xor
cmp
sti
rsqrtps
pop
jne
aam
dec
mov
push
push
adc
add
mov
roll
pop
scas
les
dec
mov
enter
or
adc
int
stos
ficomps
pop
iret
inc
scas
inc
sbb
loopne
imul
pop
fmuls
enter
xor
push
push
cmp
jae
mov
inc
dec
jne
fisttps
adc
rorl
leave
loope
add
pop
push
mov
repnz
test
pop
roll
and
pusha
sub
leave
sahf
xchg
push
xchg
test
xor
in
jbe
xor
adc
lahf
mov
sti
jo
adc
lods
imulb
and
pop
lea
jmp
dec
or
sbb
inc
push
loopne
jg
and
mov
jbe
cmp
pushl
js
subb
mov
pop
lock
lock
out
test
leave
pop
pop
mov
ja
outsl
cld
push
lock
es
adc
and
jge
mov
clc
pushf
push
push
repz
xor
sub
enter
pop
add
les
rorb
flds
or
inc
dec
aaa
push
push
pop
push
add
maxps
ss
js
dec
imul
add
inc
cmpsl
dec
cld
test
scas
mov
xor
pusha
push
repz
mov
cmc
push
jbe
cmp
or
or
test
subb
loope
lds
daa
outsb
mov
mov
xlat
cld
push
shlb
pop
mov
shll
and
and
mov
pop
fisubrl
daa
or
aas
out
jp
pop
jmp
push
loope
scas
mov
xchg
inc
rdtsc
push
mov
movsl
cmp
inc
and
negl
shrl
call
fmull
ja
jb
cmp
ja
dec
pop
mov
fs
inc
pop
mov
push
loopne
pushf
fistps
pop
jb
cltd
push
jae
xlat
icebp
mov
add
inc
inc
out
jns
cmp
xor
movsb
jns
lcall
cmp
jae
pop
sub
roll
enter
ret
adc
cmp
add
orb
fisubrl
adc
or
gs
pop
sbb
popf
inc
jne
and
and
and
subb
dec
cmp
out
movsb
cwtl
lcall
sub
jne
and
dec
stc
divb
sub
mov
jne
out
dec
repz
and
pushf
popf
cmp
add
sbb
jne
mov
loop
cmp
out
enter
push
adc
test
ret
and
cld
mov
or
pop
push
outsl
test
adc
cld
insl
xor
and
loopne
push
cli
xor
loope
push
hlt
inc
insb
mov
mov
mov
int3
inc
inc
add
fldcw
jmp
movsb
aas
std
pop
cmpsl
sbb
inc
lods
push
shr
movsl
nop
pop
add
inc
es
mov
jae
popf
les
jb
ss
or
lods
rolb
or
ja
repnz
clc
daa
pop
test
cmp
xor
or
clc
cmp
sub
fbld
pop
add
les
jns
xor
hlt
call
outsl
xor
jecxz
sbb
push
add
and
mov
mov
cwtl
add
or
shlb
cld
mov
cmp
lcall
jne
bound
dec
imul
outsl
mov
sbb
jno
mov
les
and
adc
test
fs
inc
mov
aad
lcall
jp
and
fdivs
call
push
ret
loop
cltd
cld
bound
xor
cmpsl
mov
ds
lret
data16
xchg
mov
jecxz
mov
sbb
scas
mov
add
cmc
mov
imul
add
ret
sbb
pop
or
mov
jmp
or
loopne
test
push
popa
cld
add
bound
add
xor
cmp
pop
jne
push
xor
add
jle
mov
jecxz
adc
inc
fistpl
pop
mulb
rolb
xchg
je
push
shl
es
cmc
xor
or
addb
lock
mov
push
orb
pop
js
mov
push
adc
push
loopne
pop
fcoml
push
je
shr
push
xchg
or
iret
in
mov
jmp
jmp
jge
xchg
jmp
mov
or
rcll
lock
mov
sahf
push
mov
mov
mov
js
add
jle
mov
sbb
add
push
enter
push
mov
lahf
or
sbb
aad
pop
and
add
mov
cmp
test
and
mov
fidivl
fstp
fldz
inc
mov
cmp
pop
or
or
push
and
out
in
rorb
dec
inc
or
xor
leave
or
mov
push
movsl
or
pop
push
inc
cmp
cli
add
aam
ret
cmp
out
int3
je
jecxz
repnz
mov
jle
iret
cmpl
sbb
jae
dec
dec
ss
pop
repnz
je
mov
jo
xor
inc
call
and
mov
adc
and
es
mov
adc
or
clc
inc
cmp
or
inc
ret
rcr
jae
inc
cmpsb
dec
lods
adc
push
shl
xchg
or
nop
dec
es
pushf
cwtl
dec
es
cmp
add
mov
das
js
and
xor
insb
push
enter
leave
test
inc
cmp
and
xor
xor
and
xor
test
add
repnz
adc
fdivr
fsubr
xchg
dec
enter
faddl
and
xor
enter
insb
pusha
leave
mov
ss
les
movsb
das
pushf
es
nop
dec
cwtl
mov
jl
dec
es
jo
pusha
nop
imul
cltd
dec
inc
cmp
cltd
xor
sub
sbb
aad
inc
es
or
jg
fsubs
fcmovnu
das
in
cltd
fs
es
xchg
or
enter
nop
dec
mov
js
pop
mov
pushf
sub
push
push
or
cltd
nop
test
js
ret
push
push
and
mov
les
xor
mov
add
inc
add
lods
xor
rcrb
mov
ret
les
test
insl
add
push
push
mov
pop
lahf
jl
adc
mov
mov
out
xchg
into
test
pushl
push
fimuls
repz
ja
out
xchg
cmpsl
out
ss
shlb
pop
push
sarb
sub
push
push
push
div
push
push
jne
enter
push
sub
push
cs
fs
adc
adc
xor
jo
mov
mov
das
dec
pop
jo
and
adc
movb
xor
pop
clc
or
jnp
or
push
cmp
movsb
inc
inc
mov
push
jno
pop
sbb
or
sub
cwtl
sub
jnp
hlt
inc
add
inc
push
popa
dec
and
jbe
mov
xchg
and
ljmp
mov
rol
mov
stos
sbb
sub
pop
or
and
pusha
or
stc
gs
jmp
sbb
push
test
inc
or
push
pop
fadds
pop
push
or
scas
mov
clc
mov
and
inc
cmp
sahf
mov
aad
and
imul
sti
lea
lret
xchg
add
mov
pop
jmp
push
fxch
mov
ds
push
or
push
adc
inc
adc
ja
and
cmp
cmp
lret
mul
outsl
insb
jo
jmp
push
mov
inc
pop
test
out
mov
test
mov
xor
popa
movsl
ss
mov
rcr
sub
arpl
sbbb
mov
push
mov
and
or
adc
lock
mov
or
enter
imull
packuswb
aam
jmp
jnp
lret
adc
js
insb
push
movl
stc
push
xor
cs
sbb
sbb
lea
divl
fadds
scas
push
push
and
mov
adc
dec
mov
cwtl
inc
rorb
xor
ljmp
std
add
dec
push
mov
je
push
pushf
mov
add
sub
or
sub
mov
clc
sbb
mov
jno
hlt
mov
imul
mov
adcb
inc
dec
test
jno
sbb
pop
gs
cltd
les
adc
or
daa
push
lahf
out
addb
lret
into
mov
xor
or
mov
loope
dec
inc
lods
push
push
loope
je
pop
jbe
out
xor
adc
mov
cmp
ss
mov
faddp
dec
or
loopne
les
mov
cmc
out
jno
sub
das
rorl
and
addb
sub
faddl
mov
pop
dec
add
pop
xor
push
push
xor
sbbb
or
sti
xor
sbb
sbb
and
adc
xor
adc
jno
mov
inc
dec
push
push
add
add
ss
iret
movsl
ja
test
andb
add
arpl
pop
rorb
ret
mov
push
rcrb
or
cmpsl
jle
adc
mov
mov
andb
incb
ret
jle
jg
shll
lods
adcb
jne
test
loopne
ret
mov
int
push
jge
push
mov
outsb
add
aam
mov
test
fcomps
inc
pop
pop
sbb
jge
pop
sbb
pop
negb
js
inc
pop
inc
imull
push
negl
adc
push
decl
push
sub
je
lock
sbb
push
or
repnz
sub
sbb
scas
shll
xor
and
ljmp
cld
loopne
test
jge
add
jb
aaa
jmp
push
sti
int3
add
jmp
push
cmp
call
and
or
cmpsb
xlat
pusha
inc
cmp
cmp
adc
loopne
push
push
and
aas
sbb
in
xchg
push
lea
cmpsl
sbb
lahf
ficomps
xlat
xor
inc
push
push
or
xchg
or
pop
hlt
push
cmp
push
sbb
mov
inc
stc
mov
adc
mov
inc
or
call
pop
push
test
pop
pop
inc
pop
mov
cwtl
cwtl
dec
pop
mov
dec
add
inc
repnz
jnp
add
push
and
push
cmc
inc
push
mov
add
xchg
sbb
adc
jmp
iret
outsb
sbb
subl
cmp
cs
sub
aaa
push
adc
jbe
and
cmpb
xchg
add
lcall
add
bound
or
push
jns
and
movsb
inc
nop
xchg
xlat
or
sub
aaa
call
int3
pop
shl
nop
fneni(8087
jmp
divb
inc
pop
jae
mov
in
adc
imul
rorl
pop
imul
add
xor
das
jmp
mov
pop
mov
jmp
out
and
add
xor
add
and
mov
lcall
push
mov
divb
ljmp
pop
push
mov
ret
xchg
push
inc
cmp
add
xchg
push
add
adc
mov
inc
popa
jnp
clc
sahf
or
mov
inc
sbb
jno
inc
cmp
jl
fildl
push
pop
jnp
dec
loopne
push
push
xlat
ffreep
jo
js
mov
push
je
imul
sub
push
push
hlt
dec
test
xchg
and
push
or
xorb
push
mov
or
mov
repnz
outsl
cwtl
add
movlps
adc
sub
aam
mov
xchg
mov
insb
xchg
dec
cmp
mov
mov
int
lsl
and
mov
stc
and
pop
mov
stc
idiv
pop
jne
mov
jne
dec
leave
rorl
lock
push
in
adc
aas
add
add
movsb
in
outsb
pop
push
or
lock
mov
jae
dec
inc
in
jo
add
sti
or
add
pusha
push
jl
pop
in
inc
loopne
sub
js
out
fmuls
adc
add
call
faddl
and
pop
cvttps2pi
xor
jg
loopne
mov
jge
sub
dec
xchg
push
push
loopne
cmpsl
inc
inc
fidivl
mov
jne
push
or
stos
shrl
xchg
xor
push
mov
stc
pop
adc
or
pop
mov
dec
movsb
fists
inc
sub
add
or
imul
fidivs
push
push
add
lds
pusha
sbb
xor
adc
sbbb
cmp
rorl
inc
and
mov
mov
xchg
call
and
fimuls
inc
add
sbb
mov
ret
add
xchg
mov
jp
insl
sti
xlat
sarl
add
orb
and
inc
lcall
rclb
xchg
cmp
xchg
xchg
xchg
sub
adc
daa
mov
call
ljmp
aam
xchg
shlb
inc
cmp
dec
sbb
xchg
daa
adc
inc
sarb
lret
mov
dec
xor
sub
and
repnz
pop
lcall
or
xor
mov
mov
flds
loop
add
ficomps
ja
into
shr
adc
ror
pop
pushf
sbb
jbe
nop
ljmp
je
sub
sbb
cmp
push
fs
cmp
cwtl
xor
jo
ret
leave
in
and
movsb
adc
and
sahf
mov
mov
int3
xchg
in
daa
dec
sub
jns,pn
movsb
xchg
and
mov
or
clc
jmp
sbb
cmp
shlb
push
cmp
inc
mov
popa
xchg
jl
sahf
idivl
xor
inc
sub
addr16
and
je
enter
push
pop
jmp
sarl
mov
enter
dec
jmp
in
leave
enter
insb
xchg
leave
in
fs
xor
mov
sbb
enter
adcb
jb
xchg
fsubrp
lock
xchg
inc
push
cmp
xchg
adc
xchg
shr
into
fcoms
mov
xchg
je
and
test
push
inc
jmp
in
ret
mov
mov
addr16
and
mov
and
and
push
push
and
sub
sbb
das
enter
pop
test
mov
mov
les
jb
xchg
xchg
mov
test
jnp
nop
dec
hlt
out
out
enter
sbb
enter
dec
mov
mov
int3
mov
fwait
xchg
xchg
xchg
xchg
pop
pusha
dec
inc
mov
mov
xchg
sub
sbb
pushf
cmp
cltd
popf
add
call
mov
dec
mov
loopne
ret
xor
mov
in
xchg
repnz
xor
push
fs
pop
iret
repnz
rclb
inc
in
jno
pop
lds
sbb
jl
xchg
cld
adc
add
fcoml
and
sbb
cmp
sbb
jge
sbb
enter
cmp
jae
enter
cmpl
dec
xor
enter
pushf
and
cmp
fistl
stc
sbb
in
enter
sbb
cmp
xor
sbb
enter
int
call
xchg
push
inc
cmp
xchg
sbb
mov
pushf
xchg
repnz
pushf
cmp
and
push
ror
mov
and
mov
in
leave
add
movsb
dec
hlt
xchg
adcb
test
and
in
push
push
sbb
fwait
aam
sbb
inc
imul
sub
pop
nop
out
in
iret
mov
adc
test
in
insb
in
sbb
in
fisttpl
in
mov
and
aam
mov
and
mov
sbb
int3
dec
data16
je
mov
pushf
mov
nop
aam
xor
xor
in
pusha
pop
push
pop
adcb
xor
push
hlt
mov
ss
cltd
push
mov
or
jl
inc
test
icebp
in
xor
sbb
aam
enter
xchg
int
rcrl
mov
xor
inc
insb
test
and
ds
inc
test
je
out
push
dec
jae
xchg
jne
insl
in
cmpb
cmp
cld
push
cwtl
dec
iret
jnp
mov
inc
pop
je
pop
mov
wrmsr
sub
test
cmp
sbb
inc
nopl
fcom
push
in
sbb
xor
sbb
stos
daa
mov
mov
sbb
jecxz
mov
iret
leave
insb
xchg
jecxz
sbb
les
jecxz
xchg
pop
nop
jl
and
xchg
js
fs
adc
pop
vpshuflw
xchg
sub
add
in
clc
sub
lret
xchg
mov
push
jo
fs
js
daa
mov
es
xor
jmp
loop
shll
xchg
sbb
sub
pop
mov
mov
add
and
pop
adc
xor
loop
sbb
jns
call
inc
inc
mov
int3
movsb
xchg
shlb
daa
and
xor
mov
or
rclb
xor
push
mov
dec
add
jns
xchg
cmp
fcoml
sub
xchg
jo
mov
adc
dec
mov
jge
xchg
xchg
clc
hlt
popa
iret
and
sub
adc
pop
or
movsb
or
loope
js
loope
js
dec
nop
pop
notl
leave
pop
js
or
or
push
jl
fsub
sahf
push
jo
sub
jecxz
xchg
cld
outsb
xor
inc
aam
push
inc
push
clc
lods
sub
dec
dec
jo
sub
pop
leave
leave
popa
lret
mov
sbbl
pusha
iret
xor
push
cmp
xchg
adc
inc
cltd
pusha
nop
das
jl
xor
popa
or
sbb
adc
add
fdivl
loopne
in
out
adc
xchg
or
jb
xchg
or
and
sbb
sbb
aam
leave
dec
mov
in
test
sbb
xchg
and
insb
mov
pop
sbbl
js
jbe
fidivrl
inc
inc
adc
ds
pop
adc
data16
jg
xchg
imul
pop
sub
cs
cmp
pop
pop
ret
push
fs
andl
pushl
das
int3
add
mov
iret
xor
mov
repnz
jl
punpckhbw
in
addr16
shl
or
xchg
xor
cmp
sbb
iret
and
loopne
or
or
in
call
nop
in
lock
hlt
nop
and
clc
mov
or
dec
jae
xchg
cwtl
add
insb
in
andb
leave
xor
cmp
nop
cmp
or
sbb
or
xor
sub
xor
inc
xorl
cmp
and
sbb
rclb
mov
or
pop
xorl
lea
filds
movzbl
push
add
xchg
adc
push
or
lock
cmp
stos
lahf
adc
mov
and
mov
mov
mov
int
rorb
cmpb
mov
jne
idiv
push
jmp
push
add
cmpl
add
cmpl
or
jl
out
add
ds
int
loopne
mov
shl
inc
dec
adc
jge
shlb
or
sahf
test
mov
xor
nop
scas
xchg
sub
test
test
xchg
scas
rclb
mov
xchg
js
clc
pop
cwtl
mov
push
cmp
mov
test
xor
les
enter
mov
dec
or
adc
lcall
mov
jno
fldl
inc
or
aaa
cmp
fstpl
lcall
pop
add
adc
cld
mov
ret
cmp
cmpsl
cmpl
xchg
cmp
shlb
out
mov
inc
mov
rclb
rcrb
rclb
aaa
mov
mov
movsl
filds
cmp
ds
push
push
repnz
push
or
test
push
sbb
xchg
add
add
inc
inc
dec
push
cmp
add
sub
popl
jno
mov
addr16
cwtl
cmp
ficoml
insl
nop
and
test
lea
loopne
and
jae
xchg
faddl
xor
jg
adc
loop
push
and
push
adc
add
ds
push
push
decl
roll
push
sbb
push
and
arpl
scas
hlt
cld
mov
in
xor
mov
pop
loopne
push
mov
cmp
scas
mov
inc
adc
jp
ss
cmpl
fs
xchg
dec
pop
cld
mov
xchg
add
popf
mov
xchg
repnz
jecxz
push
inc
add
popa
dec
mov
jl
push
pop
sbbb
ret
pusha
lock
call
mov
push
outsl
and
or
in
fs
sbb
in
xchg
mov
sub
sub
mov
rclb
inc
or
and
mov
in
sub
aam
mov
stos
sub
mov
push
mov
adc
or
insb
lock
and
jne
je
xor
cmp
rcrb
push
mov
repnz
pushf
mov
lock
push
push
or
adc
and
sbb
mov
mov
mov
ds
cmp
jne
mov
push
in
daa
call
orl
fiaddl
inc
cld
sbb
lea
sbb
les
test
mov
cs
mov
out
je
cmp
pop
add
insb
xlat
fxch
push
sbb
jnp
aam
ljmp
aaa
xor
xor
aaa
xchg
outsl
rcll
stc
fcomps
push
mov
adc
mov
leave
mov
mov
popa
out
adc
or
mov
push
cmp
cltd
add
in
lock
cltd
push
imul
mov
ja
adcl
test
adc
or
push
cld
orl
mov
cmp
lods
pop
nop
inc
rcrb
xlat
shlb
int
out
je
mov
cs
push
mov
adc
jge
ljmp
mov
cld
sub
dec
and
call
shlb
mov
sbb
sbb
shr
aam
lcall
je
inc
cmp
sub
fcmovnu
inc
bound
leave
pop
jns
cwtl
push
mov
sub
popf
and
push
fwait
imul
or
sub
or
sahf
lahf
cmp
sub
inc
ja
out
daa
out
or
lds
push
aaa
cmp
adc
jne
mov
add
in
or
lahf
sub
daa
xor
sysenter
cli
xor
xor
xchg
mov
js
xchg
lock
jl
fmul
fs
cmp
sti
inc
popf
sub
mov
aas
mov
and
mov
dec
or
xchg
sahf
lock
sub
dec
imul
adc
xchg
cmovae
insb
mov
les
add
leave
jo
xchg
add
mov
cmp
ret
lret
pushf
int3
push
mov
leave
xor
adc
mov
ss
bound
sbb
das
push
daa
cmp
adc
into
xor
leave
out
lods
stc
call
xor
cmp
jle
jne
inc
add
pop
int
jo
pop
dec
push
aaa
and
hlt
aam
sahf
cmp
push
push
cmp
into
xchg
inc
repnz
push
xchg
loopne
cwtl
xchg
and
and
lods
das
enter
movsbl
push
fnsave
in
mov
pop
push
cmp
call
jb
outsl
pop
pop
pusha
ret
jne
shr
and
inc
push
jno
cmp
incl
push
xchg
hlt
outsl
hlt
add
mov
lea
lcall
jecxz
inc
cmp
in
inc
xchg
sbb
fcoms
aad
fdivl
mov
mov
adc
pop
pop
adc
inc
sbb
divl
mov
stos
loop
notl
push
icebp
jmp
in
cmp
je
in
push
in
inc
cs
sub
or
ss
xchg
test
sub
adc
jmp
cmp
ds
scas
or
xchg
or
leave
cmpl
divl
push
test
mov
pop
adc
pusha
add
sbb
jmp
and
or
adc
lods
push
mov
orl
push
mov
pop
cmp
adc
pop
in
enter
stc
rolb
add
in
xchg
loop
sbb
lock
fidivrl
rorb
mov
hlt
adc
jmp
ds
mov
jne
push
mov
inc
aaa
nop
cld
je
pop
push
pop
clc
aas
les
xor
dec
cmp
je
aas
cmp
sbb
xchg
jb
jmp
add
and
in
clc
cmp
xor
push
lea
pop
jecxz
sbb
push
out
jo
add
repz
aam
mov
pop
ret
push
jg
shrl
xlat
fnstcw
push
loope
mov
lea
loop
js
test
add
inc
dec
sbb
push
mov
sbb
jge
incl
shrl
rol
mov
inc
jmp
mov
mov
push
push
pop
out
push
add
push
sar
dec
or
lea
push
sbb
mov
lods
cmp
mov
fiaddl
test
test
cmc
scas
or
or
je
xchg
fnsave
push
inc
or
inc
in
adc
jne
xor
pop
sub
call
add
push
mov
cmp
jne
cmp
jne
jle
jno
add
test
cs
js
cmp
cmp
sub
mov
mov
mov
xchg
loop
lahf
out
mov
or
addl
adc
lods
mov
es
mov
adc
xor
enter
shlb
push
imul
xchg
out
xchg
insl
pop
jo
mov
imul
repz
dec
dec
dec
jge
push
mov
in
adc
adc
out
mov
mov
adc
push
push
inc
lahf
sub
pop
repz
add
push
push
add
xor
inc
pusha
add
sbbb
loop
mov
icebp
or
pushf
sahf
leave
inc
xor
es
lods
add
and
daa
repz
cmp
fs
adc
push
inc
sub
jnp
int
out
jae
add
and
call
or
lock
push
bound
bound
jae
push
cwtl
insl
pop
imul
pop
fwait
inc
lret
sbb
jbe
add
fwait
in
mov
lret
adcl
stc
and
icebp
pop
mov
dec
aaa
mov
pop
sbb
sub
pusha
add
sbb
add
or
negb
or
in
movsb
and
cmp
adc
add
xor
push
mov
sub
pop
add
pop
jmp
push
xchg
sbb
test
jl
xchg
loope
je
push
mov
fwait
mov
push
rclb
scas
and
mov
push
sbb
daa
xor
int3
and
rorb
xchg
mov
iret
add
mov
lock
rcrl
imul
jmp
push
push
xor
jne
mov
jl
add
push
pop
add
fcmovnb
xchg
dec
mov
cltd
mull
cmpsl
ret
sbb
lock
lock
arpl
mov
test
push
in
inc
cmp
aam
shll
leave
xor
xor
mov
push
cmp
push
xor
movsl
xchg
pop
inc
or
popf
xor
test
sub
aad
imul
call
sub
mov
popa
loopne
into
sarl
jbe
and
pop
loope
mov
adc
mov
rcll
mov
icebp
inc
shlb
dec
xchg
cmc
xor
mov
sbb
data16
mov
inc
lea
test
jge
add
cmp
fiaddl
adc
aaa
cmp
arpl
clc
mov
aad
mov
jmp
cs
ret
push
ret
add
mov
aas
sub
cmp
rorl
in
cmp
daa
xor
push
pop
jbe
pop
dec
dec
lds
movsb
out
push
push
adc
fbstp
imul
idivl
test
cmp
pushf
xor
cltd
aam
mov
popf
sbb
mov
xor
adc
or
test
daa
inc
stc
mov
popf
test
aam
add
mov
mov
mov
sub
sbb
fdivs
jbe
cmp
add
jmp
jae
adc
xadd
movsl
mov
lea
jo
adc
testb
push
mov
arpl
mov
add
inc
or
cmp
mov
je
inc
mov
test
push
pusha
pushf
dec
ljmp
lret
pop
and
sub
fsts
ds
add
popf
add
mov
in
add
pusha
test
stos
sbb
movsl
sbbb
cltd
and
icebp
push
mov
fildll
std
inc
and
add
pop
out
mov
jne
and
rolb
add
cmp
dec
xchg
dec
pop
mov
add
inc
call
add
cmp
mov
xchg
shr
jmp
sbb
nop
mov
or
xor
call
jmp
push
fisttpll
inc
or
fnsave
cltd
cmpsb
ret
sbb
xchg
popa
outsb
cmp
xor
jmp
adc
adc
insl
enter
pusha
ja
pop
sbb
cld
cwtl
cmp
sbb
inc
xchg
sarb
cmp
sub
inc
sub
dec
adc
sub
push
les
xchg
adc
mov
adc
in
test
into
enter
inc
test
add
jns
xchg
sub
shrl
pop
and
sbb
daa
cltd
inc
sub
pop
in
xchg
push
adc
stos
pop
movsb
cwtl
push
add
jbe
mov
fnsave
mov
sub
pop
shl
or
mov
inc
and
sub
mov
cmp
xchg
dec
movsb
shrb
mov
out
pop
cmp
cltd
pop
jp
iret
xchg
adc
sub
lcall
add
sub
je
cmp
je
cmp
je
cmp
je
cmp
outsl
out
pop
and
mov
adcb
mov
setge
les
mov
jo
clc
jb
cmp
jo
adc
inc
sub
sbb
add
mov
and
cmp
add
jno
dec
xchg
or
ja
in
mov
insl
movl
jge
dec
invd
pop
dec
cmp
or
mov
and
pop
ljmp
inc
cmp
sbb
or
data16
mov
aaa
jo
dec
fsqrt
dec
adc
call
mov
rorl
cmp
jge
cmp
dec
lcall
pop
jne
pushf
jmp
addr16
scas
or
dec
add
adc
pop
xchg
inc
mov
pop
negb
xchg
test
pop
aaa
xor
enter
and
scas
mov
xor
adcb
je
mov
push
or
lock
sub
pop
je
add
pop
add
adc
push
push
push
test
bound
lret
push
jns
sbbl
lahf
jl
add
push
push
push
jo
or
cmpl
add
or
push
lods
inc
loopne
push
xadd
push
push
scas
cmp
jge
push
rcll
or
adc
aam
push
es
jge
out
popa
bound
xchg
jne
inc
notb
pop
push
imul
push
push
jb
fmull
cs
add
loope
fcomp
stos
les
pop
shlb
jae
test
in
rol
or
jle
mov
xchg
popa
push
in
push
push
xchg
or
adc
stos
inc
arpl
icebp
sbb
in
pop
rclb
jae
xor
out
lahf
or
xor
test
jbe
jne
add
test
mov
rolb
mov
inc
inc
inc
cmp
sar
jb
andb
push
inc
inc
dec
sbb
loope
inc
mov
inc
sbb
adc
jne
movsl
pop
jbe
jnp
mov
mov
dec
insb
rcrb
pop
xor
in
inc
pop
push
pop
sahf
sub
shrb
mov
jnp
sbb
ret
mov
and
sbb
push
gs
hlt
bnd
mov
adc
lds
in
cmp
test
repnz
mov
cmpsb
cmp
xor
dec
shll
mov
invd
ficoms
lods
pop
jae
push
mov
imul
int3
add
les
or
fisubrs
mov
repnz
dec
push
dec
mov
mov
cs
imul
jmp
inc
mov
test
push
cmp
sub
dec
jne
cmp
stc
inc
iret
mov
fbstp
je,pn
pop
jne
and
inc
jge
mov
push
cmp
push
js
test
bound
inc
hlt
xchg
sbb
data16
push
inc
test
push
adc
pop
sub
add
mov
jb
fcmovne
xor
je
or
push
pop
sti
sub
in
sub
pop
fdivrp
adc
enter
push
xor
std
movzbl
cmp
pop
outsb
add
pop
mov
mov
xor
arpl
jmp
je
jne
add
subl
add
mov
jmp
push
iret
mov
pusha
divb
jno
movb
push
ljmp
add
mov
push
mov
dec
and
pop
or
dec
or
sarl
push
movsb
lea
call
xor
add
cmp
nop
jno
and
lods
dec
lcall
push
pop
in
aam
pop
dec
js
imul
push
dec
push
or
inc
mov
add
pop
xor
add
mov
mov
xor
or
fmuls
bound
sub
push
imul
sbb
jbe
ficoms
dec
cmp
ss
mov
jo
add
test
icebp
cmp
std
sbb
mov
jge
pusha
repnz
or
add
push
call
rcll
xchg
mov
pop
cmp
inc
into
sub
leave
jmp
and
push
stos
clc
dec
dec
or
push
sbb
adc
dec
cmp
cmp
loope
sar
sub
and
cmp
push
push
hlt
mov
pop
cmp
sbb
arpl
sbb
xchg
mov
shlb
adc
and
and
add
popa
cmp
hlt
nop
xchg
rolb
mov
arpl
jbe
sbb
sbb
mov
dec
dec
cld
test
daa
xchg
ja
mov
inc
inc
dec
sub
sbb
fcoms
mov
adc
xchg
xchg
dec
jb
adc
rcrl
push
sbb
ret
push
sahf
and
pop
sub
daa
das
mov
enter
stc
push
enter
je
and
repz
xchg
add
push
es
nop
fdivrl
aam
inc
xchg
or
adc
in
inc
cli
jne
mov
mov
imul
add
push
xchg
add
loop
add
push
jns
dec
cli
popa
push
insb
inc
push
push
push
jns
push
or
mov
jmp
push
jmp
jno
rclb
pop
pusha
loopne
cmp
je
cld
sbb
adc
cmp
jne
mov
or
rorb
je
sbb
push
scas
mov
adc
lods
rcrb
cltd
or
mov
pop
xor
test
mov
imul
test
fsubl
mov
inc
cmpl
cwtl
push
mov
test
imul
add
sarl
pop
hlt
push
adc
into
js
fnsetpm(287
mov
jmp
test
rol
cmpb
mov
inc
push
jl
push
lea
stos
xchg
and
pop
cld
sbb
add
jmp
and
fcoms
outsl
loopne
and
mov
or
jne
cmp
daa
je
cmp
ja
jp
cmp
aaa
mov
std
push
jp
dec
lods
and
or
or
sbb
cwtl
ds
rolb
setne
sub
or
add
mov
add
rolb
neg
sbb
pop
adc
and
fs
cmp
mov
push
push
lea
push
inc
cld
mov
xchg
sub
or
stos
daa
push
scas
shl
and
test
pop
add
fmuls
mov
mov
adc
or
cmp
dec
add
movsb
jmp
rcr
or
cs
sub
add
loopne
outsb
shl
dec
adc
aas
inc
fistpll
jne
cmp
out
hlt
jb
test
add
jle
xchg
scas
mov
call
mov
inc
and
out
inc
push
popf
pop
inc
mov
lret
call
hlt
inc
sahf
xor
fucomip
xchg
cmp
push
push
sub
insl
fdivr
dec
mov
pop
push
sbb
ds
mov
and
cld
rcll
cmp
xor
or
or
leave
and
dec
insb
adc
cmpsl
jge
mov
or
or
rclb
xor
test
mov
lcall
cli
add
push
xchg
imull
adc
xor
sahf
repz
jge
or
mov
cmp
sarb
lret
jbe
lea
popf
or
shll
jge
or
push
or
dec
add
jb
jecxz
fucom
loopne
or
push
inc
push
daa
sti
inc
pop
add
clc
mov
dec
inc
add
cmp
xor
test
sbb
test
jmp
add
rcl
stos
cmp
push
xor
incl
lahf
xchg
and
daa
movsb
out
cmp
inc
sti
xchg
add
dec
aad
je
dec
pop
xchg
cmp
clc
pop
sub
rorb
out
push
imul
inc
sbb
dec
mov
xrelease
adc
mulb
or
mov
inc
cmp
jl
adc
inc
inc
ja
mov
aaa
fstpl
pop
push
xor
daa
leave
mov
add
or
bound
out
lock
loope
adc
add
mov
or
jmp
sti
adc
xor
sbb
inc
jbe
ret
sub
sbb
dec
nop
mov
mov
add
cmp
and
mov
pop
vmread
enter
int3
enter
or
fcoms
or
adc
or
add
clc
jl
insb
cmc
add
sub
and
xor
jns
or
mov
stos
mov
sbb
mov
cmc
das
ret
xorl
test
xor
pop
je
mov
cmp
clc
xchg
pushf
negl
inc
cltd
mov
fwait
mov
inc
imul
xchg
xchg
filds
punpckldq
orb
add
lahf
je
inc
cmp
jle
adc
jl
mov
cmpsb
xorl
pop
and
mov
add
push
sub
xchg
jb
js
mov
and
jmp
xor
jge
es
mov
push
test
push
and
and
add
enter
shl
test
push
js
js
idivl
int3
add
bound
aas
hlt
dec
cmpsb
or
cmp
jo
push
push
inc
jno
jo
push
gs
icebp
mov
mov
push
push
mov
or
fdivs
adc
jae
push
dec
dec
push
pop
addr16
shll
xor
adc
aam
adc
inc
jge
add
mov
and
ljmp
adc
dec
loopne
and
mov
sbb
push
xchg
mov
aad
ja
and
test
cwtl
jg
inc
rcrb
xor
add
add
push
or
add
mov
adc
mov
rcrb
and
add
int
sbb
add
push
add
sbb
lock
sub
sub
adc
sbb
scas
xor
cmp
or
add
ret
push
fnsave
push
push
outsb
adc
or
imul
xchg
addr16
in
pushl
push
aaa
rol
sbb
mov
testl
das
jmp
lcall
mov
pop
pop
sbb
xchg
jmp
xchg
into
adc
pushf
gs
mov
jnp
shlb
push
dec
xor
leave
push
ja
xchg
repz
sub
or
out
int3
pusha
rorl
lea
pop
pusha
sub
jp
pop
adc
inc
and
cvttps2pi
cmp
push
jb
add
les
in
dec
sbb
mov
add
mov
mov
movsb
cmp
push
loopne
adc
add
fcomip
jl,pt
jmp
push
inc
repnz
dec
jb
pop
push
inc
imul
shl
jb
lea
mov
xchg
add
add
vmwrite
add
rcrl
lea
xchg
push
jmp
pop
jne
xor
mov
in
mov
les
push
add
push
cmp
into
fildll
pushf
bound
jne
nop/reserved
or
adc
imul
jne
mov
adc
lods
scas
push
push
popa
in
push
jns
ja
aaa
fucomip
in
insb
cmp
testb
daa
ret
jo
fildl
rclb
sbb
ret
fdivrl
cmp
xor
push
pop
xor
dec
adc
inc
add
add
ret
push
icebp
mov
jbe
cmc
shll
sarb
jbe
xchg
inc
jo
push
jp
mov
mov
hlt
push
or
jne
pusha
push
jmp
addb
in
xchg
mov
adc
sahf
cmp
pop
inc
jl
icebp
mov
sub
inc
cs
pop
pop
jle
pop
inc
or
adc
dec
sbb
ret
pop
cld
jle
loope
repnz
sti
add
in
mov
pop
cmp
pop
or
jbe
les
mov
dec
and
xor
add
ds
nop
sarb
cmpw
pop
jne
ret
repnz
int
daa
push
cmp
or
pop
faddl
daa
inc
cmp
or
adc
sub
test
cmpl
pushl
not
insl
repnz
xlat
sti
cmp
clc
jne
pop
xchg
push
xchg
repz
push
std
mov
jno
pop
sub
fstp
push
in
leave
and
xchg
mov
fxch
push
jecxz
in
push
sbb
pop
xor
push
push
ret
lods
mov
lahf
mov
add
pop
mov
push
loopne
add
int3
push
push
and
push
inc
xchg
jmp
add
call
pop
pop
clc
das
xor
inc
shll
clc
mov
sub
pop
pushl
shlb
enter
push
lds
jmp
je
push
out
dec
mov
aam
adc
xorb
insb
je
dec
xchg
adc
mov
adcl
mov
mov
xchg
cwtl
andb
pop
xchg
mov
and
insl
mov
or
add
jne
dec
adc
insl
xchg
rolb
push
push
and
popa
mov
rolb
fdivs
and
jne
xorb
and
mov
popf
test
movsb
jmp
jno
sub
lock
add
xchg
dec
cmp
jnp
mov
push
adc
cmp
mov
cld
jne
inc
inc
mov
repnz
jmp
dec
and
sahf
xchg
shlb
and
or
mov
add
fmull
mov
aaa
cmp
movsb
cmp
push
push
loop
jns
and
push
adc
mov
pop
mov
push
lret
loop
in
pop
sub
lret
add
test
mov
mov
mov
dec
and
mov
dec
push
push
xchg
mov
lret
lret
lahf
adc
cltd
mov
xchg
jo
and
divb
inc
sub
js
jne
mov
mov
es
push
xorl
insb
lret
iret
and
inc
mov
mov
adc
mov
push
sbb
xchg
push
sbb
or
xor
dec
xor
push
mov
mov
mov
mov
aaa
icebp
jne
pop
dec
cmpl
ret
push
dec
jg
call
inc
add
mov
push
jp
cmp
inc
add
adc
xor
xchg
sbb
add
sbb
xor
cmpl
xchg
les
mov
xchg
in
fcoms
cmpsb
xor
std
jmp
jbe
pop
sar
addb
mov
push
xchg
mov
jo
inc
cmp
fwait
icebp
sbb
add
hlt
insb
cmp
pop
pop
adc
ret
push
push
icebp
add
add
mov
push
mov
mov
pop
xchg
or
je
adc
mov
dec
xbegin
add
sub
decb
jb
jmp
jbe
popa
push
out
nop
sahf
hlt
or
clc
pop
mov
lods
mov
cmp
jbe
push
mov
mull
add
push
mov
mov
or
daa
test
aas
outsb
sbb
test
inc
pushf
daa
add
xchg
je
push
fsubrl
je
cmpsl
inc
jge
ret
test
in
add
add
cwtl
jp
popa
les
aaa
jae
push
das
add
xor
pop
popa
test
xchg
sub
push
mov
pop
cmp
xor
or
scas
jl
int3
push
nop
rcll
addb
sarb
xor
lea
pushf
sub
jl
cmp
popa
incl
inc
daa
nop
loop
repnz
cltd
dec
add
sub
in
pop
xchg
push
xchg
test
mov
hlt
imul
push
sub
cli
push
je
clc
add
dec
sbbb
rorb
xor
jmp
fldl
pop
or
xchg
enter
add
xor
ret
jl
out
dec
dec
xchg
mov
mov
andl
cmp
dec
les
xlat
pop
sbb
aas
push
cmp
xor
inc
xorb
adc
cmpsl
loope
xor
ds
sbb
sbb
clc
push
ret
sub
mov
jbe
lds
jl
lock
sbb
in
jne
dec
pop
cmp
mov
jbe
inc
call
xchg
and
dec
call
sbb
jne
stc
lea
push
testb
pop
pop
fs
add
xor
in
lea
fdiv
and
cmp
add
jge
jge
push
dec
and
lock
push
push
sbb
je
xchg
fbstp
mov
cwtl
sub
inc
in
loopne
adcl
cwtl
lea
fsubs
test
sub
push
and
add
mov
cmpl
shrb
ja
imul
loop
mov
in
push
and
push
paddsb
push
in
push
sbbb
sub
mov
pop
repnz
lock
mov
push
sbb
jl
out
or
push
add
aad
cmp
scas
add
and
jo
mov
shll
popa
jmp
test
or
cwtl
hlt
adc
icebp
leave
shll
jmp
insb
call
xor
dec
in
data16
pop
adcl
loopne
jl
loop
push
sub
in
xor
ljmp
and
inc
pop
jl
inc
dec
inc
pop
in
add
sbbl
or
mov
inc
or
std
pop
fsts
pop
push
cmp
push
push
vphaddubd
cwtl
push
lret
inc
push
cmp
pop
add
outsl
or
pop
and
lea
and
sbb
out
mov
jge
or
adc
and
fldenv
leave
sbb
pop
and
mov
inc
mov
cmp
sbb
mov
adc
popa
pop
and
mov
jp
lock
jbe
lret
sbb
mov
and
incb
arpl
inc
jns,pn
out
push
sbb
dec
cwtl
das
jns
out
lea
cwtl
ret
ljmp
sub
dec
es
or
loopne
pop
jno
fwait
cltd
push
je
shll
push
or
ss
and
push
inc
or
push
pop
dec
dec
jmp
addr16
jecxz
je
adc
mov
jnp
inc
cs
addr16
jl
adc
lods
loope
and
or
add
andb
sbbl
cltd
pop
popf
add
ds
mov
leave
ja
lahf
lock
js
push
or
xchg
lcall
out
adc
mov
mov
lcall
sarl
cli
sub
add
test
sub
push
addr16
es
or
pop
inc
pop
pop
sub
add
mov
sub
jnp
out
mov
xchg
mov
punpckhwd
pop
add
pusha
or
and
sub
or
xchg
xor
in
add
dec
mov
mov
push
xchg
in
nop
and
add
pop
rorb
loope
jbe
test
loope
jne
cmc
xor
add
data16
loop
push
sub
sahf
pop
out
in
push
test
ret
and
sub
frstor
aad
std
sbb
into
push
jne
movb
lods
sti
cs
aaa
add
pop
pusha
adcl
clc
and
mov
int3
repnz
xchg
or
or
xorl
test
dec
push
enter
xor
adc
stc
and
sub
cmp
test
and
in
push
push
pushf
clc
in
xor
pop
cmp
dec
push
test
or
mov
stc
xor
or
sahf
xchg
dec
mov
imul
and
ret
inc
in
jle
xor
pop
sub
push
jge
mov
icebp
str
lret
sub
xchg
pop
inc
jmp
arpl
lea
rcrb
mov
test
push
lds
inc
jmp
mov
popf
sbb
pop
inc
jp
enter
addb
push
xor
add
add
stos
or
lea
faddl
adc
rcrl
rorb
add
lock
je
push
subl
sbb
push
fildl
jmp
fldz
repz
rclb
push
cld
mov
adc
movsb
sbb
push
push
pop
mov
jno
dec
mov
mov
minps
mov
rcl
hlt
jnp
arpl
sbb
fs
mov
shl
jg
leave
xchg
mov
cld
xor
push
jno
mov
mov
push
dec
push
xchg
mov
test
loope
jne
xchg
hlt
cltd
add
cmp
xchg
mov
lock
imul
mov
push
je
adc
cs
insl
lea
xor
sbb
add
adc
push
xchg
push
lods
and
mov
mov
in
sub
pop
test
add
adc
push
pop
fsincos
inc
sub
push
xchg
and
sbb
sub
xchg
pop
clc
jne
lds
inc
enter
mov
adc
inc
mov
loopne
jne
dec
int
mov
mov
nop
int
xor
inc
mov
jbe
int
jmp
sbb
push
enter
sbb
insb
mov
cmp
addr16
nop
sbb
sbb
call
loope
gs
xchg
nop
cmp
popa
mov
pusha
fmuls
mov
fsubs
pop
mov
stc
fsts
cli
int3
inc
pusha
mov
pop
and
popa
fistpl
fstps
jns
mov
xor
insb
je
mov
cmp
adc
mov
in
sar
jb
arpl
jo
jnp
sbb
gs
or
xor
hlt
popa
push
mov
xchg
adc
or
das
test
mov
and
jp
flds
sub
pop
mov
enter
daa
test
jp
test
jb
mov
mov
daa
pop
lods
mov
mov
inc
ret
out
jp
sbb
xchg
mov
mov
or
test
and
xchg
adc
decl
jg
xor
rolb
add
dec
in
pop
push
cs
ds
ret
mov
xchg
xchg
inc
test
in
cmpsb
or
or
aam
mov
sbb
int3
pop
and
push
push
cmp
jle
cmp
aas
mov
mov
sub
mov
cmp
jbe
dec
inc
popa
and
lea
js
pop
mov
lds
dec
imul
jbe
cmp
or
push
inc
xor
sbb
rcrl
ret
loopne
push
bound
inc
or
push
loope
jecxz
fdivs
push
test
dec
push
or
xchg
xchg
addr16
inc
rolb
iret
arpl
adc
add
fmuls
int3
rcl
cmp
inc
popa
fcompl
lcall
pop
gs
sahf
imull
ja
and
mov
sub
xor
iret
leave
cld
jae
pop
ret
inc
and
sbb
cmp
cs
sbb
mov
inc
sbb
xor
push
cwtl
add
xchg
mov
leave
aas
or
mov
xor
sub
xor
add
cmp
add
pop
stc
jge
mov
mov
and
add
add
rcll
mov
cld
jmp
fbstp
cmp
in
adc
inc
fdivs
movsl
ret
lock
and
push
imul
cwtl
adc
push
inc
push
sbb
cmp
rorb
add
jl
push
out
xor
jmp
pop
sub
out
mov
shr
and
je
push
mov
cld
dec
popa
lds
push
hlt
fisubrs
add
mov
sti
cmp
mov
into
jb
lock
mov
dec
mov
movzwl
test
roll
rcll
inc
or
jne
out
icebp
or
adc
aas
movsb
roll
adc
loop
aas
test
je
rcr
pavgw
icebp
jle
arpl
sbb
add
jne
mov
adc
and
into
cmc
sbb
push
cmp
ss
mov
les
gs
mov
outsl
out
movsl
cmpsb
sub
pop
popf
push
xchg
outsl
jge
aaa
inc
pushf
pop
sbb
inc
and
lret
out
push
call
out
fwait
movsl
pop
ret
push
xor
dec
aad
cmp
or
adc
mov
ss
popa
and
xor
inc
repz
sub
adc
pop
xor
scas
add
dec
pop
std
inc
mov
sub
rcl
xor
sub
add
in
in
xor
sbb
mov
nop
inc
lret
es
inc
mov
dec
mov
mov
rep
or
cmp
or
shl
lock
fcmovnu
outsb
mov
mov
inc
sub
jle
pop
decl
mov
jns
aaa
icebp
push
cmpsb
je
cwtl
jbe
movsb
inc
in
add
push
mov
mov
or
jno
cwtl
mov
sub
mov
adcb
xor
pop
andb
mov
and
jl
and
xor
adc
mov
mov
pop
lds
daa
in
sub
dec
test
orb
add
mov
aas
sti
leave
idiv
sub
adc
mov
mov
cmp
jne
jg
cld
loop
add
push
jno
je
and
adc
shrb
ljmp
xchg
cmp
pop
mov
jmp
cmp
fdivrs
mov
pusha
je
sbbl
cmp
jne
jp
mov
xor
jnp
mov
into
fidivrl
outsl
mov
push
and
icebp
add
sbbb
inc
add
or
adc
or
jbe
adcl
adc
movsl
add
pop
xor
insb
mov
dec
inc
inc
mov
loop
mov
push
test
cmc
adc
add
add
push
cmpsb
ret
in
pop
pop
test
hlt
enter
add
mov
adc
mov
mov
jmp
pop
cmp
stos
fucomip
pushf
data16
test
cmp
ja
mov
popa
adc
push
mov
xlat
loope
cli
movsb
lock
repnz
sub
add
lea
nop
lods
sbb
mov
es
scas
cmp
xchg
adc
jp
xor
pop
rolb
je
scas
scas
or
hlt
je
dec
jecxz
mov
shrb
sahf
dec
sbb
aam
mov
maskmovq
test
pop
mov
push
cmp
je
jno
jne
fstpt
imul
bound
cmp
jbe
pop
xlat
mov
inc
aad
adc
push
testb
mov
sub
sti
xchg
cmp
mov
or
xor
pop
or
fistl
mov
ret
imul
clc
mov
jg
push
es
ret
adc
jecxz
int3
les
xchg
or
inc
push
jae
test
lods
cltd
cmp
xor
int3
ja
inc
pop
test
enter
test
call
cwtl
std
add
mov
inc
and
orl
imul
mov
mov
cmp
movb
inc
jmp
cmp
add
xchg
cmovns
icebp
jae
mov
sti
in
sbb
inc
jl
movsl
mulb
lahf
fstp
iret
sbb
push
inc
fimull
lods
testb
and
aad
add
mov
push
sbb
aad
jmp
xorl
dec
xor
add
in
xorl
xchg
inc
test
xor
jge
mov
or
sub
fwait
subb
adc
mov
aam
mov
in
inc
mov
imul
add
pop
cmp
cmp
push
pop
add
sub
sbb
in
mov
icebp
pop
jb
enter
in
or
mov
je
fsubrs
xchg
cmc
pop
je
inc
jmp
lods
inc
loope
mov
lods
adc
xor
shll
hlt
int
push
adc
inc
arpl
je
add
ret
lock
jb
push
mov
test
push
pop
fmuls
ds
in
pop
adc
sub
push
push
lock
xchg
jo
add
mov
cltd
xchg
pushf
adc
imull
pop
aam
pop
mov
dec
test
xor
cmp
xchg
add
out
cmp
jg
or
subb
push
sti
xchg
push
adc
xor
pop
cli
sbb
inc
xor
adc
pop
jae
test
clc
cld
fsubs
insl
psubb
testb
idivb
dec
dec
xchg
add
pop
jne
scas
inc
ljmp
inc
jp
outsb
inc
mov
jp
loope
push
pop
pop
sar
mov
aam
in
jmp
push
ljmp
in
adc
test
ja
xchg
jnp
push
dec
imul
rorb
imul
mov
sbb
and
push
shrl
xor
arpl
push
cmp
xorl
es
outsb
fwait
sbb
push
movsl
loopne
or
icebp
jb
leave
mov
push
nop
pusha
xchg
add
ljmp
push
loope
add
xchg
addr16
inc
es
inc
sbb
cmpsl
test
sti
stos
jns
xchg
dec
sbb
pusha
sbb
jne
pop
enter
dec
adc
and
enter
push
daa
movl
sahf
add
sub
jbe
sti
shrb
arpl
sbb
jl
push
nop
inc
jmp
ret
inc
js
and
adc
push
loopne
add
adc
mov
xor
dec
cwtl
adc
add
clc
jle
lea
xorl
inc
add
cmp
popl
dec
jne
cmp
sub
fisttpl
popf
mov
sete
xchg
cmp
cwtl
mov
cmc
lea
jbe
sub
jbe
jp
mov
add
test
dec
sbb
sub
in
xor
imul
add
inc
inc
jbe
push
jnp
cmp
dec
in
add
xchg
cmpsb
insl
fwait
mov
push
pop
push
adc
xchg
and
adc
sub
dec
jbe
sub
mov
push
in
ljmp
sbb
adc
push
xchg
sbb
sub
inc
push
mov
dec
xor
cmp
xor
lods
xor
and
lea
adc
and
xchg
add
add
mov
pop
adc
cmpsl
add
imul
mulb
push
adc
cli
cmovbe
popf
push
push
mov
cmp
icebp
mov
pop
push
sub
lock
pop
mov
je
mov
mov
and
inc
push
or
test
dec
adc
lods
pop
or
add
sub
sbb
xchg
and
repz
imul
aaa
hlt
imul
fadd
mov
ss
addl
xchg
pop
cmpsl
pop
mov
pop
int
inc
sub
lcall
jo
loop
punpckhbw
mov
inc
jo
scas
cwtl
mov
cltd
push
jecxz
cmp
insb
add
dec
xchg
test
mov
inc
push
mov
sarl
mov
add
frstor
add
mov
adc
push
and
fcmovb
sub
sub
push
adc
cmp
lcall
out
call
pop
push
add
cmp
sahf
jbe
mov
inc
jl
xor
ret
aad
sbb
sbb
push
xor
cmp
adc
stos
jmp
push
sti
movb
cmpsb
int
or
push
add
push
add
clc
inc
mov
test
adcl
mov
adc
jl
cmp
sbb
dec
and
pop
fwait
das
jne
seto
bound
cld
in
cmpb
or
dec
or
ds
in
xor
aad
adc
addr16
loopne
adc
pop
clc
mov
movl
or
fiadds
pop
test
push
mov
pop
or
jo
sub
and
cmp
mov
lods
pop
test
mov
push
aaa
jmp
lock
repz
add
pop
ret
int3
jmp
popa
in
data16
ror
int3
and
ror
lds
idivl
mov
lea
push
mov
scas
je
icebp
push
cmp
cmpb
fiadds
test
das
jae
in
pusha
lock
les
mov
sbb
outsb
mov
xor
xlat
sarb
imul
adc
sti
aad
inc
mov
neg
sbb
es
xchg
inc
lcall
dec
and
inc
jle
mov
sub
adc
push
shr
inc
push
xor
es
rcr
shr
rcr
or
jne
lock
mov
out
shll
cmp
xchg
test
dec
cltd
lds
jne
fabs
sbb
pop
pop
pop
ret
inc
out
cmp
and
add
xchg
das
adc
pop
repz
ljmp
xor
fmull
jmp
repz
adc
or
into
or
adc
or
push
jbe
sub
dec
push
or
mov
lahf
mov
rorb
xor
or
sbb
shlb
add
push
inc
xor
adc
sbb
or
in
daa
aad
mov
lock
inc
sbb
ret
push
pcmpgtw
pop
data16
inc
or
aad
popl
insl
and
call
push
jl
or
push
cmp
push
repz
cmc
mov
xor
or
mov
decl
fisubl
orb
fucomip
ja
mov
xchg
sbb
inc
adc
sbb
pop
inc
or
add
pop
out
xor
push
std
dec
xchg
or
mov
lea
mov
sbb
pushf
push
pop
nop
mov
cwtl
mov
add
not
sbb
mov
incb
mov
inc
adc
mov
pop
sbb
and
add
jbe
mov
xor
outsl
je
sarb
mov
push
push
and
jmp
push
pop
bound
mov
cmpsb
or
inc
outsb
in
enter
cld
or
or
pop
cmc
mov
jmp
cltd
fistl
loopne
xor
bound
je
int
mov
push
sbb
sub
out
adc
mov
inc
or
imul
aad
mov
and
pavgb
and
enter
push
add
jg
daa
sub
insb
add
imul
gs
int3
outsl
in
fs
jae
bound
imul
outsl
out
out
mov
pop
ja
or
outsl
jbe
pop
bound
fnstsw
jae
fs
imul
jo
imul
aaa
popa
gs
lods
imul
shll
xor
xchg
fstpl
arpl
movq
fwait
imull
add
push
jo
outsl
mov
pop
jo
imul
ss
push
sub
jl
adc
arpl
fs
mov
or
inc
push
push
jbe
pusha
lock
popf
sub
dec
pop
or
int
jae
push
push
jb
imul
jb
jae
and
sub
test
cmp
cmp
popa
jb
push
cmpsl
outsb
sbb
push
mov
push
mov
ja
subb
ja
scas
repz
js
insb
test
incl
sbb
push
jo
or
out
cmp
bound
in
add
jbe
arpl
ret
mov
add
xchg
jae
inc
or
jno
mov
push
ja
popa
fldln2
mov
movq
in
loopne
xor
insb
xor
jo
insb
aaa
mov
push
comiss
outsl
push
push
out
jns
outsb
mov
ja
or
gs
outsb
fs
jo
pop
ss
sbb
push
arpl
out
in
ret
pop
addr16
punpckhwd
arpl
lds
jbe
mov
insl
bswap
mov
pop
xchg
mov
mov
cli
maskmovq
divl
insl
push
insl
sub
rcll
mov
push
outsl
jo
addr16
je
fwait
or
add
outsl
ja
mov
add
addr16
cmp
sub
xchg
add
jg
std
or
pop
inc
and
rcll
xor
adc
or
out
cwtl
jo
ret
inc
add
pop
adc
movsl
cmpb
adc
push
cmp
xchg
push
add
lret
ficoms
mov
fcomps
add
pop
loopne
jbe
xchg
lret
add
es
or
insb
push
ja
daa
ja
jnp
pop
leave
sub
daa
jbe
daa
in
loopne
ds
in
insb
dec
push
jo
push
dec
out
fadds
push
idivl
add
xchg
ficoms
aam
rcll
ss
inc
sahf
imul
pop
push
add
push
ja
sub
adc
scas
das
push
xchg
add
aas
push
adc
push
inc
push
xor
add
xchg
push
add
add
jmp
in
inc
add
adc
xor
mov
xorb
loop
idivl
jmp
call
cwtl
cltd
cltd
ret
std
cmp
xchg
adc
test
lcall
adc
ljmp
push
out
lcall
iret
into
enter
out
fists
imul
shrb
xchg
rol
pop
popf
fdivrl
adc
mov
jnp
js
pop
stos
push
call
xchg
sbb
adc
sti
jmp
outsb
sbb
adc
lcall
lret
iret
data16
gs
iret
fistpll
fdivp
pushf
and
cwtl
repz
sub
pop
sahf
mov
cltd
popf
dec
stos
pop
adc
popf
repz
lret
xor
sti
jg
scas
popa
sbb
adc
aaa
rclb
pop
jnp
adc
mov
lret
movsl
fcos
pop
fbstp
mov
iret
or
std
out
imul
fisubs
sub
lret
in
lret
outsl
imul
sbb
in
pusha
enter
mov
xor
pop
jno
addr16
in
leave
jmp
cli
fdivr
std
jmp
ljmp
cld
clc
in
cld
sbb
cltd
fsub
lock
int
lods
aad
xchg
sti
jmp
das
out
ljmp
stos
stos
cltd
popa
fmul
push
repnz
in
sti
lock
lock
jmp
ljmp
cltd
cs
add
addr16
fdivrl
xor
xor
ret
jbe
outsb
mov
fadd
bound
ret
dec
sbb
inc
jg
add
outsb
je
sbb
push
outsl
insl
jge
or
pop
add
dec
jg
sub
mov
xor
and
in
xchg
in
add
ja
jbe
gs
dec
pop
mov
jg
dec
outsl
sub
adc
out
add
jg
lock
mov
ljmp
jno
enter
dec
push
push
push
dec
cs
pop
into
jg
add
pop
adc
push
dec
idivb
mov
jg
xor
sbb
movzbl
jg
outsb
jo
dec
push
mov
sbb
or
add
repnz
add
push
sbb
jg
mov
mov
pop
push
pop
jl
shll
test
outsl
and
xor
add
or
and
and
ljmp
and
push
adc
int3
in
mull
imul
xor
fistps
or
cs
jl
push
cmp
dec
cs
dec
arpl
and
js
ds
pop
imul
es
jne
jge
xor
ds
daa
cmp
and
mov
mov
and
sti
mov
popa
mov
pop
lods
add
cwtl
shl
gs
push
add
push
js
cs
mov
outsb
outsl
cmpsl
popa
arpl
or
inc
frstor
dec
push
cmp
pop
or
ds
gs
js
ss
push
outsl
adc
fstp
sub
add
pmaxsw
std
push
and
insb
mov
insl
xor
sub
jo
push
push
outsb
addr16
sub
sub
and
outsb
in
jne
sub
cld
lahf
je
das
push
jbe
fadds
and
adc
or
jnp
insb
mov
jnp
lock
shll
popa
imul
pusha
jle
cmp
and
stc
mov
call
bswap
hlt
mov
jg
push
dec
inc
sbb
pushl
jnp
aaa
adc
and
jg
sti
push
push
dec
push
dec
iret
push
dec
inc
push
inc
dec
lods
xor
dec
inc
dec
dec
into
ret
add
jnp
pop
push
pcmpgtd
push
pop
imul
jo
ja
pop
sti
xor
xor
dec
inc
xor
xor
xor
adc
dec
and
xor
jae
jo
sbb
or
loopne
repnz
adc
aam
addb
inc
and
inc
inc
inc
inc
or
inc
bound
pop
sti
inc
inc
add
push
add
add
mov
dec
dec
dec
xor
orl
dec
push
push
push
push
push
popf
pop
aas
lcall
popa
bound
gs
imul
jno
mov
lahf
push
jne
ja
jns
xor
cmp
sub
mov
rcll
dec
mov
call
mov
or
arpl
notl
mov
mov
lret
in
call
aas
cli
xchg
add
xor
ja
adc
mov
mov
xor
fisttps
cli
mov
call
cmpsl
rol
addb
aaa
dec
xor
loopne
call
clc
fists
pop
jl
inc
cmp
addl
iret
rolb
movsb
add
stc
push
inc
sti
jg
ret
xor
pushl
mov
lds
add
add
scas
je
inc
jmp
xor
pop
popa
ret
pusha
incb
mov
pop
jg
add
and
add
or
clc
mov
cmp
out
sti
jmp
push
add
testb
inc
std
add
or
inc
testl
pop
or
pop
imul
cmc
loopne
push
cmp
push
add
sbb
jecxz
dec
mov
add
xor
lret
sti
ljmp
cld
lods
cmp
je
ror
add
jmp
cmp
jne
inc
and
mov
or
adc
nop
lcall
les
xchg
test
call
jg
addr16
cs
lods
test
lcall
jecxz
lret
jae
inc
mov
sbb
jg
push
add
xor
cli
aaa
inc
lret
lods
mov
jmp
sti
call
push
pusha
push
jmp
push
cwtl
decb
and
out
insb
xchg
outsb
paddb
push
push
sub
rcrl
add
add
push
nop
and
sub
insb
sub
inc
subl
xchg
and
imul
outsl
and
and
add
sbb
pusha
or
jnp
inc
add
push
fcompl
xlat
mov
or
xor
add
lods
jmp
xor
ja
fists
and
push
push
das
loope
and
fstpl
adc
add
notl
aas
pop
add
inc
push
pop
pop
jbe
or
jne
outsl
adc
adc
nop
add
dec
push
jg
push
add
push
add
xchg
sbb
jmp
leave
adc
fwait
sub
dec
pusha
add
push
and
fisttps
out
sub
mov
mov
pop
push
pop
mov
xor
mov
xor
xor
lods
or
add
jg
psrad
lods
mov
add
add
mov
push
shl
add
push
pop
cmp
and
std
int3
inc
fs
mov
pusha
pop
or
insl
jo
add
jl
xchg
adcb
into
adc
jb
or
inc
push
inc
addr16
std
or
test
in
pusha
fiadds
aas
xchg
repz
dec
push
add
cmp
scas
fadds
adc
add
mov
add
lock
xchg
les
int
sub
mov
out
pop
fs
xchg
movsb
test
lods
stos
inc
lcall
nop
inc
mov
pop
scas
push
adc
dec
mov
and
enter
mov
push
or
loopne
orl
vmread
or
decl
data16
jo
cwtl
xchg
cwtl
dec
rclb
test
dec
mov
arpl
add
add
sbb
jno
out
sarb
pop
cmpsb
add
add
jmp
mov
int3
dec
ljmp
mov
xor
dec
sahf
inc
fcomp
or
popf
adc
divps
adc
cs
jnp
andb
ret
or
dec
mov
push
popf
adc
sbb
testl
inc
andl
out
mov
imul
popa
jo
jb
pop
das
inc
jb
loopne
pop
add
iret
scas
decl
cmpb
mov
imul
sbb
sar
add
pop
rclb
test
adcb
cld
dec
dec
es
sbb
arpl
and
scas
mov
inc
inc
inc
inc
dec
inc
inc
cmpsb
bound
add
mov
insl
or
addr16
mov
inc
bnd
subb
daa
lcall
cmp
mov
int3
clc
popa
and
add
xor
popf
xor
xor
and
and
mov
inc
sub
rcrb
sub
lea
push
test
mov
adc
incb
push
push
aam
movsb
addr16
adc
movsb
and
insb
popf
loopne
hlt
lahf
std
gs
adc
or
adc
mov
jo
outsb
xor
jae
icebp
xor
xorl
xlat
adc
scas
inc
push
xor
cmp
push
add
pop
dec
push
in
or
ficoml
xchg
lahf
add
sbb
add
adc
ds
dec
out
cli
and
lcall
push
repnz
sbb
scas
xor
lret
jge
in
pop
mov
fimuls
jne
or
cs
cmc
in
fmull
add
push
out
xor
cmpb
into
mov
or
add
add
lret
stc
mov
add
pop
xor
adc
insb
mov
add
cmpsb
nop
addr16
and
jbe
dec
mov
push
es
mov
es
pop
inc
mov
ds
adc
jg
sub
cmp
rclb
fwait
test
rorb
cmc
add
or
pusha
mov
and
or
or
mov
ds
setne
scas
inc
mov
loopne
jo
aaa
jbe
daa
js
adc
stos
pop
cmpsb
jmp
mov
jno
inc
mov
pop
sbb
or
roll
and
add
cmp
mov
or
push
psubusb
add
scas
in
jo
je
repnz
sldt
push
test
sbb
insb
repnz
lidtl
jbe
xchg
add
ljmp
and
jne
nopl
push
add
inc
xor
imul
cmp
sbb
jmp
notl
imul
and
xor
dec
pop
push
adc
pop
sub
jg
enter
xchg
or
insb
popa
outsb
imul
pop
jmp
dec
pop
inc
inc
and
jae
cs
push
insb
insb
and
cmpsb
gs
fst
movsb
arpl
sub
push
and
imul
aas
les
int
or
rcll
inc
mov
cmp
cmp
sti
repnz
and
imull
push
dec
inc
adc
push
push
or
mov
or
pop
push
jb
outsl
into
push
mov
xchg
inc
adc
pop
mov
fs
pushf
mov
shll
nop
mov
jo
pusha
and
pop
rcrl
sahf
mov
sub
and
cmp
sbb
and
pop
sldt
add
xor
aad
gs
leave
add
push
push
xor
rorb
pusha
add
imul
or
pop
xchg
push
xchg
cmp
sbb
lock
inc
outsb
inc
cmp
push
push
add
sti
fistps
popa
push
xchg
bound
sub
daa
je
inc
out
mov
fs
ja
pop
mov
push
or
and
xor
jne
fcmovb
inc
ds
pop
das
push
mov
jmp
jg
in
inc
sub
xchg
rcrb
mov
stos
add
cmp
pop
pop
pop
and
mov
adc
in
add
sub
and
ja
adc
js
pop
and
inc
dec
lahf
js
cld
decl
xor
add
mov
or
dec
add
inc
pop
cmp
dec
or
scas
jno
and
and
movups
icebp
ret
push
push
add
lods
mov
push
push
jp
sbb
repz
rolb
in
les
or
addr16
pop
lods
dec
dec
inc
mov
dec
mov
dec
add
mov
loop
pop
out
push
inc
rolb
pop
je
adc
outsl
and
pusha
jmp
pop
push
ret
call
mov
rolb
fcoms
xor
add
inc
add
inc
push
and
ret
rcrb
std
loop
shr
sbb
sub
add
inc
pop
xor
add
mov
inc
xor
pop
rcrb
xchg
add
gs
push
call
stos
xlat
inc
cwtl
sar
imul
adc
cwtl
xor
clc
jle
push
and
aaa
bound
pop
add
jb
sbb
lock
inc
arpl
jge
sbb
mov
bound
jge
and
pop
outsb
jns
in
lock
rcr
sub
outsl
imul
inc
call
add
inc
mov
and
mov
popa
jne
push
fisttpl
es
test
sub
cwtl
fcompl
add
mov
pop
and
and
cmp
imul
insb
aaa
dec
sbb
mov
mov
arpl
outsb
jbe
std
mov
popa
insb
imul
bound
adc
adc
and
in
cmp
mov
jne
mov
dec
imul
jae
mov
pushf
push
xor
add
test
aaa
daa
fbstp
cli
adc
push
lret
pusha
mov
lahf
add
dec
sbbl
dec
xchg
sahf
and
js
test
sbb
sub
inc
outsl
cltd
or
stos
gs
shrb
dec
dec
and
jg
insb
xor
arpl
jns
jo
in
daa
gs
data16
pop
and
jns
mov
jp
push
and
mov
in
push
jp
mov
push
pop
cmp
fcmovbe
dec
movl
xor
and
ficompl
andb
loope
aas
dec
jg
outsl
data16
sub
repnz
mov
sbb
jne
sub
loop
push
dec
stos
jae
gs
lods
jb
jno
imul
pop
stc
insb
outsb
daa
mov
and
inc
lds
addr16
and
cli
push
mov
and
js
xor
pop
lods
test
pop
push
pop
sarl
and
and
int3
sbb
cs
push
movsl
xor
pop
push
stos
adc
sub
outsl
mov
daa
imul
ja
cmp
and
mov
inc
outsb
ja
add
dec
and
push
jnp
inc
cwtl
push
lret
fwait
and
test
sbb
leave
sub
daa
push
adc
gs
xor
inc
lahf
addr16
sbb
lahf
inc
arpl
dec
mov
ss
popa
xchg
ror
pop
fadds
mov
cmp
js
ss
sub
pop
dec
rcrl
and
pusha
pop
pop
into
mov
mov
jne
je
lock
cwtl
arpl
xor
push
or
pop
ss
icebp
cmpsb
pusha
pop
cmc
push
adc
push
out
sub
fwait
lea
inc
push
push
and
std
and
adc
push
inc
sarl
cmp
mov
imul
shll
mov
ja
inc
lret
lea
loope
pop
pop
sbb
mov
pop
and
and
mov
xor
pop
and
outsl
adc
jne
pop
or
mov
or
out
cltd
fimuls
ret
fildl
push
popa
add
mov
mov
push
int
dec
lcall
addr16
dec
call
cmpsb
je
jbe
mov
push
mov
ja
ja
pop
jecxz
sub
jae
pop
fldenv
test
outsl
filds
or
mov
ja
adc
hlt
jg
pop
scas
inc
lcall
incb
cs
call
jbe
lock
popa
pop
scas
pop
add
outsl
mov
sub
aas
pop
inc
mov
push
pop
pusha
je
push
in
and
arpl
out
insl
jo
loope
mov
outsl
ffree
sub
lods
cmpsl
inc
je
insb
push
sub
cmp
ret
inc
ja
insb
int
mov
xchg
imul
or
inc
push
and
xor
daa
or
leave
and
imul
aaa
jb
loope
fsubl
mov
xor
or
loop
dec
popa
jns
mov
and
ret
cli
outsl
xlat
int3
popa
mov
ss
adcl
pop
pop
mov
ficomps
mov
jo
mov
sbb
or
lahf
xchg
push
or
lea
stos
data16
pop
cmp
xchg
add
fadds
pop
subl
in
shlb
das
dec
push
jbe
push
mov
cmp
xchg
jbe
jae
pop
mov
cs
loope
les
lds
cmp
mov
test
cmp
dec
xor
xchg
xchg
mov
and
cmp
cld
dec
xlat
sbb
xor
data16
in
out
add
push
jecxz
arpl
shlb
arpl
jbe
das
push
push
jb
inc
sub
shlb
bound
aaa
leave
or
ret
cs
nop
pop
int
push
cs
xor
in
imulb
ds
out
adc
mov
dec
mov
daa
and
ret
ja
jne
mov
jns
data16
adc
sbb
ret
data16
jp
jno
pop
addr16
lcall
sbb
fidivrs
adc
fldt
adc
mov
imul
cmp
push
das
popa
add
cmp
fs
aas
xchg
pusha
dec
rclb
or
imul
pushf
cmc
sbb
dec
mov
adc
jae
xor
sahf
jno
fisttps
and
out
push
aaa
adc
cmp
xchg
loope
xor
push
and
sbb
push
fldcw
and
fdivrs
xor
xor
sub
jb
es
mov
push
sub
pop
fnstenv
pop
test
or
cmp
cs
ja
mov
xor
aaa
outsl
fidivl
mov
xor
ss
inc
push
sub
cmp
fs
jg
push
jne
and
inc
daa
or
push
insb
jns
outsl
xlat
into
into
sbb
push
test
jno
and
cmp
sbb
xchg
outsl
or
dec
mov
inc
jno
mov
jo
jbe
shl
adc
mov
push
mov
lds
clc
pop
insb
popa
and
out
cmp
xor
add
push
out
lods
pop
rorl
and
insb
jo
mov
jae
mov
cmp
sub
push
dec
jb
andl
jns
jbe
in
outsb
rorb
inc
sub
pop
in
push
jae
add
lods
push
cs
jns
cld
pop
test
add
push
inc
das
das
add
lea
and
or
into
and
pop
daa
shrb
arpl
mov
pop
mov
inc
xchg
adcl
mov
xchg
mov
inc
pop
cs
gs
in
push
lods
out
pop
xor
nop
push
stc
sti
and
or
adc
cmp
lods
outsb
les
pusha
iret
frstor
fmuls
mov
addl
xchg
jnp
mov
push
or
xor
push
fisttpll
push
push
push
ret
arpl
pop
or
adc
addb
popf
sbb
cmp
popa
mull
dec
inc
sbb
inc
pop
das
test
popa
jne
jmp
pop
lea
mov
dec
imul
pusha
pop
push
addb
imul
das
jl
pop
adc
inc
xor
outsb
ret
dec
add
mov
fistps
shrb
imul
jmp
adc
mov
fbld
pop
data16
adc
push
xchg
imul
insl
loop
inc
fstps
test
imul
jno
and
pop
fistpll
xorb
jmp
aam
xor
mov
flds
jns
call
mov
add
xor
xor
inc
sbb
mov
bound
sbb
mov
push
pop
xor
xor
and
bound
mov
jno
lahf
cmpsl
dec
les
xchg
jmp
std
jmp
mov
add
push
imul
add
xchg
xchg
inc
mov
xor
clc
packsswb
inc
push
pop
stos
mov
adc
std
jns
adc
mov
push
inc
push
push
mov
cmp
inc
imul
imul
sbb
ret
fiaddl
adc
pop
sub
sub
out
test
add
mov
inc
mov
adc
or
push
and
lcall
test
mov
sbb
push
push
lock
push
cmp
aad
aaa
sbb
enter
out
pop
push
sub
stos
mov
jg
aaa
in
and
arpl
lret
sbbb
icebp
jns
add
and
push
xchg
por
xchg
push
push
pop
sbbb
xor
outsb
jns
aad
js
mov
xor
add
outsl
outsb
push
sahf
sbb
xor
push
call
lock
cmpsl
or
pushf
jne
and
ja
insb
push
xlat
add
js
pushf
pop
fwait
imul
xlat
jb
imull
pusha
movsl
sub
lret
and
cs
jae
rclb
mov
xor
mov
nop
cmp
or
lds
mov
int
fmuls
pop
mov
int
mov
add
dec
add
test
outsb
or
and
addl
dec
push
jmp
mov
out
fdivrs
outsb
cmp
faddp
mov
orb
imul
jbe
mov
push
lea
sti
jg
or
cmp
add
cmp
pop
sbb
pop
add
add
and
int
data16
pusha
and
push
add
or
xchg
nop/reserved
adc
outsb
jae
jno
prefetch
or
subl
sub
adc
nop
cs
push
lods
or
and
test
jb,pn
and
jnp
and
addb
xor
dec
leave
and
movsl
insl
fcomps
inc
out
out
sahf
imull
arpl
xchg
inc
sbb
pop
add
push
add
push
add
add
push
ret
mov
mov
add
and
movl
add
cld
fistps
mov
mov
mov
mov
and
mov
fwait
and
xor
inc
or
add
icebp
pusha
cmp
jp
dec
dec
and
iret
add
pop
sub
inc
mov
pop
xor
lret
in
out
mov
or
add
es
mov
ss
mov
dec
push
add
add
xor
inc
lea
les
add
dec
mov
mov
sbb
pop
adc
pop
mov
jge
add
mov
js
inc
test
jl
xchg
test
push
dec
pop
pushf
aas
mov
pmulhuw
add
jmp
insb
ds
add
xchg
std
sub
xchg
add
jmp
lret
jg
xchg
xor
ret
mov
mov
decl
add
mov
dec
aam
or
push
sub
leave
mov
dec
adc
push
sub
mov
mov
je
xchg
push
fidivrs
add
sub
mov
sti
decl
pop
iret
inc
and
sub
sub
arpl
add
jmp
pop
xchg
bound
add
call
std
mov
push
pop
outsb
icebp
testb
cwtl
jle
rol
jbe
imul
jne
mov
pop
jb
xchg
add
add
mov
sub
repnz
dec
add
adc
xor
rcrb
cs
sahf
loop
push
and
jbe
mov
std
pop
sub
add
aaa
cwtl
shr
stos
and
sub
jns
and
mov
jbe
xor
add
sahf
nop
push
ret
sbb
enter
mov
call
or
cmp
leave
movsl
rol
push
jl
inc
cmp
cmpsl
add
sbb
test
stos
inc
pop
cwtl
push
testb
push
int3
xchg
mov
adc
fisubl
sub
sbb
pop
xchg
fistpll
and
lock
mov
jg
cmpsb
push
cld
pop
push
inc
jnp
add
adc
add
mov
sub
pop
cmc
iret
push
jmp
mov
xor
adc
jo
mov
cmp
and
call
mov
rorl
test
xchg
pop
add
or
inc
add
xorb
or
mov
or
pusha
mov
lea
decl
or
sbb
or
sub
cmp
jecxz
lea
addr16
cmp
pop
mov
add
mov
push
fists
scas
fbstp
call
out
and
pop
add
lds
ja
mov
push
jno
push
mov
xchg
dec
ror
and
scas
xchg
jae
ja
frstor
fwait
add
sbb
fs
outsl
cmp
faddl
and
xlat
and
test
adcb
imul
dec
adc
jle
sub
int
into
mov
fucomip
fisttpll
ja
je
xor
adc
movl
sbb
dec
sbb
mov
hlt
xor
inc
imul
or
cmpsl
or
or
mov
fdivrl
cmp
xor
inc
ret
dec
clc
cmc
dec
mov
xchg
test
pop
pop
mov
fidivrl
mov
lret
lea
adc
fnstsw
mov
in
push
and
wbinvd
jns
mov
sub
cld
jnp
rcll
dec
jne
sbb
lea
imull
shrl
add
push
loopne
cmp
push
jle
out
jge
push
aad
cmp
add
mov
sbb
loop
and
lds
add
add
aas
call
pushf
loop
jle
adc
sub
jne
push
mov
inc
cmp
dec
lret
cmp
jmp
mov
shl
adc
mov
xlat
fucomi
aas
clc
das
or
ja
mov
sub
xor
cli
lret
add
adc
and
xchg
cmp
dec
add
out
hlt
sbb
jl
fildl
ret
stc
or
mov
inc
sub
xor
or
cs
je
repz
sbb
add
divl
push
add
push
push
sbb
mov
sbb
call
xchg
xor
adc
dec
sbb
jg
fidivs
lods
sbb
mov
xor
mov
jmp
clc
sbb
cmp
mov
or
push
xor
push
movsl
div
xor
orb
dec
push
sbb
orb
loopne
sbbb
cmc
and
test
push
inc
out
call
fistpll
pop
mov
mov
or
cld
lea
push
push
call
adc
mov
mov
nop
and
sub
nop
pop
sbbl
cltd
jle
dec
and
mov
add
add
adc
jns
and
adc
scas
push
sbb
sbb
xor
fcompl
pop
inc
add
push
xchg
and
loop
cmp
fs
xchg
xchg
gs
cmp
dec
or
sbb
adc
icebp
lock
sbb
inc
sbb
shr
in
in
flds
lret
ret
pop
test
lods
test
jmp
bswap
or
add
sub
fistpl
adc
dec
jmp
inc
xchg
jle
pop
mov
popa
jae
push
jle
inc
pop
xor
aam
jae
cmpsb
lcall
sub
xor
ja
cmpsl
jne
push
mov
roll
add
jmp
jne
jl
mov
sahf
sahf
cld
jg
add
popf
add
lods
pusha
shll
cmp
dec
mov
sbb
clc
daa
cld
cmp
ljmp
jne
jmp
ds
or
je
push
cmp
add
out
arpl
ret
fisubs
add
pop
xchg
dec
into
movsl
adc
xor
insl
xlat
push
std
fadds
fimull
mov
rclb
notb
jmp
lahf
add
adc
xchg
push
je
js
fsubl
or
cmp
push
jo
xor
jecxz
in
je
push
ss
jmp
jnp
ss
inc
mov
mov
dec
std
add
insb
add
ljmp
cmp
enter
or
leave
inc
push
add
testl
jecxz
js
mov
enter
cli
add
mov
cmpsb
imul
xor
cs
xor
pop
lds
jb
sar
scas
dec
cmp
and
cmp
pop
mov
shrb
rcrl
or
mov
add
xor
sbb
add
pop
add
sbb
jecxz
cmp
loopne
or
fsubrs
pusha
jmp
stos
enter
jge
cs
add
dec
inc
test
imul
jo
add
or
jg
add
sub
mov
sub
add
push
loopne
ret
sbb
mov
push
roll
push
cld
push
cmp
jl
pop
in
mov
dec
lret
or
je
add
add
and
push
or
or
mov
shrb
mov
imul
xchg
jg
enter
cmp
sub
pop
ljmp
add
hlt
int3
sub
call
addb
pop
scas
add
inc
ret
pushf
jmp
sti
push
jmp
aaa
sahf
add
xchg
dec
dec
mov
aam
jne
inc
sbb
add
jnp
or
add
push
and
adc
cmp
xor
push
cmp
inc
loope
adc
lea
sbb
add
add
or
clc
push
sub
inc
mov
jmp
adc
add
or
data16
inc
dec
sbb
xorb
and
fistps
dec
daa
repnz
lahf
dec
decl
xlat
and
je
test
cmp
jne
in
out
mov
je
adc
jne
mov
mov
adc
icebp
ljmp
mov
jecxz
aas
call
add
jmp
cmpsl
mov
dec
outsl
push
cld
dec
adc
cmc
jne
lock
sub
sbb
enter
fstpt
sbb
imul
cmp
jne
out
pop
icebp
sti
sbb
out
jne
or
add
int
inc
adc
dec
mov
dec
shll
lcall
es
imul
dec
fwait
cmpsb
fsubr
hlt
inc
xchg
sbb
pop
movb
inc
jbe
add
jae
jb
jb
mov
lods
push
jbe
cmp
add
pop
sbb
fcomip
xchg
xchg
push
insl
mov
add
mov
inc
dec
or
inc
pop
inc
shlb
inc
add
leave
rclb
add
mov
push
test
fstpl
pop
ja
xor
outsl
dec
clc
sahf
adc
je
outsl
insb
or
add
inc
xchg
adc
pop
fisubl
call
arpl
icebp
or
arpl
xchg
adc
jmp
dec
dec
xchg
pusha
mov
and
insl
bound
icebp
scas
subl
insb
dec
sbb
add
push
and
adcl
push
test
bound
pop
mov
adc
jnp
inc
sub
fiaddl
mov
das
fildll
ficomps
repz
stos
cs
outsl
push
xor
jae
pop
mov
outsl
jae
add
cmp
inc
add
adc
add
add
ret
loopne
outsl
aaa
inc
mov
add
mov
or
or
and
jle
in
test
jns
andl
adc
fisttps
xor
aaa
xor
xor
mov
movsb
xor
dec
xor
xor
xor
xor
xor
imul
mov
sahf
xor
fidivl
out
repz
xor
xor
xor
xor
xor
xor
insl
xor
aam
jecxz
push
ss
imul
xchg
aaa
jmp
cmp
cmp
cmp
dec
cmp
pop
cmp
pushl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
js
lcall
cmp
cmp
cmp
cmp
cmp
cmp
sub
inc
add
pushw
ucomiss
les
dec
push
cmc
push
inc
pop
push
cs
push
inc
sbb
cld
jne
popa
insb
jg
inc
aaa
lock
fidivl
mov
or
and
xchg
jne
inc
clc
pop
inc
push
push
pop
mov
dec
dec
jp
and
mov
test
ljmp
or
out
cld
cmp
cmp
data16
or
cld
sub
xchg
sub
push
add
repz
test
dec
cmp
xchg
lret
sub
mov
inc
arpl
mov
or
push
imul
sbb
popa
arpl
inc
inc
das
seta
sbb
xor
mov
dec
cmp
cmp
adc
cmp
cmp
dec
ss
cmp
and
mov
ret
mov
ja
fs
cwtl
or
nop
sbb
aaa
sbb
pop
fsubs
push
and
xor
ds
and
jge
daa
xor
pop
addr16
jne
push
popa
adc
das
sti
or
xchg
nop
cld
cmp
ds
test
push
sbb
inc
js
dec
adc
sbb
pop
push
mov
push
sub
lret
outsl
pop
pop
mov
out
cmovge
add
sti
test
je
jno
push
add
mov
faddl
sub
xlat
xor
daa
cmp
iret
scas
mov
jne
imul
push
aas
push
sub
xchg
js
ja
pop
je
inc
mov
push
jb
push
bound
pushf
aad
stos
cmp
jbe
add
jae
push
jae
iret
imul
sbb
imul
test
xchg
imul
scas
mov
gs
gs
popa
mov
imul
jb
jo
mov
das
fldt
or
xchg
mov
insb
aas
fstpl
aas
sti
fisttps
gs
pop
gs
and
outsb
jp
dec
pop
imull
jl
xchg
xchg
jns
nop
pop
js
outsl
mov
cmp
dec
jae
outsl
dec
pushl
insb
jbe
lret
scas
jo
scas
jne
push
mov
push
pop
push
imul
imul
je
imul
addr16
in
cmp
out
dec
add
jbe
fstl
enter
cmpsb
adc
nop
movsl
outsb
jb
ret
lock
dec
jne
fsubs
push
ror
mov
xchg
push
addr16
push
testl
mov
int3
out
rcrl
sub
sbb
push
iret
data16
jo
lret
mov
inc
gs
pop
sbb
stc
mov
dec
dec
sbb
pop
push
das
inc
jp
xchg
ret
or
mov
outsb
arpl
js
pop
addr16
mov
xlat
inc
push
aaa
xor
insb
stc
jge
sub
mov
testl
cld
inc
cld
lea
bound
fistpl
jae
bound
insb
int3
fistpll
or
adc
addr16
imul
mov
jne
insb
dec
rcll
sub
pop
xchg
jb
jo
push
arpl
adc
xchg
ja
insl
lret
push
jl
ret
les
cmpsb
dec
dec
popa
and
lcall
xchg
cmp
es
and
mov
jns
and
push
cmp
pop
cmp
fidivrs
and
pusha
mov
mov
es
sbb
out
push
test
xchg
dec
dec
dec
inc
pop
dec
imul
mov
loopne
das
dec
push
and
fimuls
and
push
dec
dec
push
push
fdivs
das
jp
pop
dec
fcmovnb
and
pop
sbb
lahf
sbb
inc
xchg
cmp
pop
push
mov
loopne
cmp
mov
xchg
scas
sub
sub
dec
push
jo
mov
xor
push
loop
mov
ficoms
pop
xorl
jle
imul
and
insb
ja
test
ss
add
stos
iret
dec
dec
inc
aaa
aam
xlat
arpl
les
xchg
icebp
dec
ret
int
inc
cmc
xor
pop
in
add
sub
or
data16
inc
loope
aaa
or
mov
out
add
and
movsl
cmp
mov
xor
addr16
mov
and
mov
push
into
inc
fidivl
aad
jbe
sti
xor
jb
sbb
mov
jb
fisubs
arpl
sbb
mov
loope
dec
rcrb
das
data16
pop
mov
fnstcw
js
aad
ret
pop
push
cmp
notb
jb
xor
das
adc
xchg
inc
ret
pop
arpl
aad
push
cmp
xor
adc
jmp
fs
push
push
arpl
shlb
mov
dec
jo
ret
js
outsl
and
lds
ja
jo
sub
inc
cli
push
push
enter
cmp
xchg
xchg
bound
pop
inc
aas
cs
out
cmp
icebp
xor
loop
out
and
fsubs
bound
dec
pop
sbb
xor
sbb
pop
mov
jbe
lea
inc
iret
scas
sbb
ja
andl
pop
addl
push
xchg
outsb
pop
shlb
jmp
outsl
mov
popa
ret
jmp
xor
iret
sub
or
xchg
push
push
insb
sbb
inc
jmp
daa
bound
jl
and
push
jb
inc
daa
pusha
mov
ss
or
or
sbb
in
inc
push
inc
gs
je
pop
test
sbb
insb
insl
in
xchg
daa
cmpsl
jo
rcll
and
js
aaa
push
xchg
pop
add
shll
add
imul
imul
fadds
push
sub
imul
pop
cmp
cmc
fs
push
adcb
outsl
jo
inc
inc
dec
add
and
xchg
mov
pushf
xor
jg
jbe
lods
xor
dec
pop
incb
call
nopl
mov
outsb
push
fdivs
pop
inc
pop
push
fisubrs
es
or
pop
or
mov
jo
outsl
andl
inc
push
dec
into
out
negb
sbb
dec
jae
push
inc
jae
mov
push
push
push
movsl
inc
pop
inc
jg
bound
ja
xor
sbb
mov
push
pop
inc
fisubl
push
inc
insb
sub
shll
inc
test
cmc
aam
daa
sub
cs
push
pusha
out
mov
outsb
push
je
in
ficomps
addr16
inc
push
mov
sar
sub
jecxz
sbb
push
pusha
jne
xchg
xor
xor
jne
xor
dec
shlb
inc
inc
lods
ss
lea
pop
xchg
arpl
pop
into
sub
sbb
andl
addr16
pop
sub
dec
jb
mov
push
dec
or
ja
jl
or
dec
ljmp
sbb
push
add
mov
xor
insb
push
iret
loopne
push
mov
push
cmc
scas
inc
dec
sub
mov
or
jle
leave
mov
insl
lds
lods
and
pop
in
mov
or
inc
cmp
inc
push
outsl
out
mov
and
mov
xor
push
insb
jno
push
call
stc
dec
push
cmp
jnp
lahf
push
jae
cmp
push
xlat
stos
in
outsb
jo
addr16
aam
jecxz
sub
cwtl
gs
dec
push
push
test
xor
push
mov
call
mov
or
in
inc
or
mov
ss
nop
imul
mov
mov
push
insl
cmpl
or
subb
imul
mov
push
adc
movsl
insl
jnp
sbb
pop
adc
and
push
dec
fbstp
pusha
jo
push
iret
out
arpl
pop
pop
cmp
cmp
sub
mov
pop
and
jmp
icebp
add
clc
jle
adc
js
je
inc
jne
adc
div
dec
bound
fs
cmp
xchg
add
push
es
dec
ss
pusha
mov
sbb
stos
jmp
aad
pop
inc
or
push
jmp
cmpsl
push
mov
dec
je
dec
jo
ljmp
pop
xor
xchg
lret
xchg
mov
in
cltd
sub
arpl
dec
pop
cs
sbb
add
xlat
pusha
imul
mov
xchg
fsubrs
and
js
inc
jge
adc
jns
xor
pop
sbb
sub
push
ret
push
adc
inc
cmp
jns
jno
outsl
jmp
sbb
stos
jno
das
stc
test
dec
mov
imulb
push
jae
dec
rol
insl
mov
scas
xor
shll
push
jo
xor
sbb
roll
ret
fs
js
xchg
adc
mov
jo
inc
sub
pushf
fmuls
loopne
shrb
dec
in
test
pusha
das
push
pop
xor
ss
adc
mov
fimull
inc
sub
sub
data16
push
xor
inc
or
dec
push
icebp
push
sbb
inc
add
mov
out
mov
js
sbb
daa
cmp
das
push
cmpsb
push
cli
add
das
insl
shlb
loop
arpl
ret
js
fs
add
mov
cmp
js
inc
jmp
push
popa
js
dec
das
dec
sub
add
imul
aam
int
addr16
insb
mov
in
jg
sbb
cmp
adc
mul
push
mov
pop
ja
rcrl
or
dec
stos
in
in
jg
add
dec
push
inc
pop
inc
inc
inc
push
cmp
or
cmp
jns
jmp
cmp
xor
cld
pop
xor
cmp
xor
add
es
inc
sub
das
sti
imul
aam
fwait
dec
mov
pop
inc
or
lods
jbe
mov
cmp
and
sbb
das
jae
xor
das
int3
mov
scas
testb
and
or
lret
mov
sub
out
test
xor
or
add
sbb
push
push
daa
das
jns
or
loope
pop
or
push
repz
enter
rorl
add
add
mov
push
push
shrl
cli
add
push
xchg
push
dec
dec
testb
shrb
add
sbb
repnz
lods
push
cmp
mov
arpl
xor
aaa
aaa
jmp
ss
push
dec
add
dec
add
aam
mov
push
xor
or
inc
inc
xor
dec
pop
loopne
or
dec
or
push
inc
repnz
call
lcall
pusha
and
sbb
ret
and
pop
ljmp
jecxz
mov
jae
scas
addl
add
jb
xchg
mov
push
in
insb
das
xorb
push
std
out
fs
dec
ljmpw
cmp
jge
xor
lcall
adc
fldcw
sbb
push
or
push
pop
pop
cmp
ret
fmuls
ljmp
xor
push
pop
shl
cmp
shll
adc
push
shlb
clc
pushl
mov
rclb
mov
or
lret
push
into
adc
inc
shrb
adc
es
cmp
inc
incl
dec
rclb
pop
pop
fcoms
test
inc
push
jecxz
dec
push
jo
inc
dec
inc
ss
dec
in
add
pop
and
mov
leave
push
cmpsb
aaa
dec
dec
ds
jg
dec
inc
inc
dec
pop
dec
inc
inc
dec
mov
lea
jbe
pop
fcoms
sarb
push
pop
cmovl
push
pop
ja
fists
inc
dec
inc
sub
es
sahf
jbe
jg
inc
dec
dec
inc
dec
dec
outsb
inc
pop
cmpsb
jnp
dec
lret
ja
push
fneni(8087
mov
push
and
daa
adc
aas
lock
inc
ja
push
inc
imul
sub
fnsave
clc
aas
pop
fmuls
push
push
cs
ljmp
test
jl
insb
adc
jmp
xchg
inc
xchg
inc
push
nop
lcall
shlb
pop
mov
clc
es
bound
lds
pushl
mov
xorl
sahf
sahf
gs
lcall
pop
into
pop
add
std
and
nop
unpcklps
or
insl
call
or
mov
mov
imul
push
sti
lcall
inc
mov
push
dec
cwtl
scas
and
dec
push
loop
cmp
jno
movsb
addr16
dec
int3
dec
gs
pop
xchg
loope
lods
cmp
inc
gs
lods
fcmovne
dec
fistpll
pushl
out
pop
mov
sbb
or
and
mov
push
xchg
jmp
xor
push
cs
cld
pop
xchg
pop
adc
leave
pop
dec
mov
and
mov
dec
pop
sbb
sub
test
push
pushl
ret
dec
jbe
mov
icebp
mov
sub
dec
push
jmp
xchg
xchg
movsb
add
mov
out
cwtl
xchg
cmp
cwtl
aam
js
fimuls
cld
inc
imul
pop
add
pop
pop
jbe
cltd
dec
jg
add
or
sbb
mov
ret
inc
popa
sub
inc
dec
dec
das
das
adc
inc
inc
push
popf
lea
lods
pop
push
inc
xlat
dec
mov
jle
push
fs
add
inc
inc
ja
cmp
imulb
dec
addr16
push
pop
ja
and
mov
dec
dec
xchg
dec
repz
dec
testl
inc
dec
push
pop
mov
shll
push
push
dec
jmp
sbb
sar
in
call
inc
inc
push
pop
and
ja
imul
inc
inc
mov
rcr
movsl
dec
push
xor
popl
outsb
jmp
jo
sti
inc
push
dec
add
add
sbb
xor
or
ret
add
je
adc
fisubs
ret
mov
aaa
sub
jge
aaa
xor
enter
jbe
mov
mov
jl
popa
fisubl
fs
push
pop
stos
push
jo
push
mov
cmp
ret
inc
sub
push
in
in
add
rclb
inc
push
and
xor
push
jg
add
jmp
add
jb
add
pop
inc
add
inc
add
sbb
add
jb
pop
mov
shlb
rcrl
add
lret
push
and
je
mov
cmpsl
pop
inc
mov
add
bound
inc
ds
sbb
stos
arpl
inc
shlb
add
and
lods
imul
add
or
xor
pop
jp
jno
mov
rclb
push
push
fcompl
and
push
arpl
add
dec
rolb
xor
xlat
out
adc
push
insb
daa
push
jbe
pop
adc
push
push
add
andb
ret
int3
test
jb
inc
movsl
stos
ljmp
push
outsl
aas
add
inc
push
add
aam
push
adc
sub
add
mov
jns
outsl
jne
lahf
or
int3
and
fs
mov
test
pop
jno
pusha
add
dec
stos
sbb
push
imul
add
pop
add
sub
adc
mov
push
sub
cmpl
jbe
add
sub
pop
addb
sbb
inc
outsl
lds
jne
ja
push
xor
push
push
adc
inc
or
dec
inc
add
jg
adc
and
pop
mov
mov
xchg
sbb
pop
lods
sbb
push
inc
sub
and
adc
ss
clc
push
lcall
loopne
ror
roll
movsb
imul
dec
shll
cmpb
shll
push
xor
rorl
cmp
sub
xor
and
adc
add
lcall
loopne
shrb
cmpsb
imul
and
movsb
test
out
sbb
mov
inc
push
xchg
jae
sbb
xchg
inc
imul
fldenv
pop
inc
pop
rdmsr
enter
pop
pop
pop
pop
enter
pop
push
push
and
push
orl
push
push
push
push
or
enter
push
xor
and
and
and
dec
orl
dec
dec
dec
dec
or
enter
dec
xor
and
and
and
inc
orl
inc
inc
inc
inc
mov
enter
xor
dec
test
shlb
add
sbb
xor
out
push
das
dec
inc
push
mov
adc
or
or
jg
adc
test
and
xchg
cmp
das
or
ss
rclb
dec
mov
jo
cmp
mov
scas
dec
push
and
insl
les
xchg
orb
xchg
lea
pop
pop
imul
mov
lret
fiadds
ja
push
out
fcoms
add
repnz
add
xchg
in
inc
cmp
cmp
mov
outsw
push
repz
push
fwait
jecxz
mov
add
and
inc
bound
fadds
sub
xchg
add
jno
sbb
pusha
arpl
lods
and
push
add
popa
iret
cwtl
and
add
xchg
adc
jbe
ret
xor
mov
popa
outsb
jns
repnz
in
mov
fs
pusha
add
jnp
mov
cmpsl
leave
add
scas
fisttps
push
dec
andb
ja
imul
data16
mov
mov
adc
dec
cltd
dec
test
shlb
cmpsb
mov
jnp
inc
loopne
and
fs
mov
pusha
cmp
pop
sub
sub
adc
popa
arpl
data16
pop
sbb
sub
stc
mov
sub
push
aas
outsb
inc
xchg
adc
bound
or
fld
jns
in
sbb
adc
jmp
mov
sbb
dec
fs
loop
cli
and
mov
mov
pop
mov
aam
push
outsb
pop
mov
mov
dec
dec
push
inc
mov
nop
dec
ds
dec
xor
cs
imull
das
pusha
xchg
dec
jecxz
or
ss
jae
repz
push
adc
jo
and
and
jne
jl
bound
mov
pop
data16
push
jne
mov
xlat
scas
and
pop
outsb
arpl
sbb
imul
repnz
popa
arpl
arpl
xlat
adc
add
dec
insb
adc
jae,pn
xchg
addl
inc
cmpsb
mov
popa
outsl
insb
stc
mov
jp
das
popa
imul
lods
adc
testl
cmp
jns
aad
sti
and
or
cltd
punpckhbw
les
imul
cmp
adc
sbb
test
sub
xor
inc
add
pop
mulb
inc
add
dec
push
pop
inc
jne
outsl
pop
cmp
xor
outsl
ja
jbe
sbb
sbb
add
inc
outsb
or
pop
adc
add
push
aad
mov
jne
jecxz
cs
out
sub
xsha1
cmpsb
mov
inc
push
pop
dec
je
js
xor
popa
sub
inc
and
inc
sub
jmp
and
cmp
incb
js
insb
addl
imul
int
inc
dec
in
je
add
out
push
das
das
imul
xchg
icebp
or
outsl
add
hlt
sub
mov
and
imul
leave
sub
inc
lods
dec
dec
push
sub
ret
mov
xor
in
cmp
dec
mov
fwait
xorl
icebp
add
rolb
xchg
pop
push
inc
shll
leave
jnp
mov
pusha
divl
fildl
and
ret
push
ja
mov
sbb
pop
in
sub
fidivl
fldcw
test
rolb
pop
or
mov
adc
mov
mov
jne
lea
pop
bound
aaa
jo
pop
std
insb
orb
flds
aas
mov
fcoml
add
xor
sub
cmpl
push
icebp
xor
mov
or
mov
mov
fs
ret
test
ds
xor
xchg
mov
push
push
fadds
les
and
fldenv
cs
or
sub
dec
dec
jecxz
jge
gs
dec
add
outsl
cmpsl
inc
testl
pop
xor
inc
pop
and
insb
or
push
test
inc
insl
gs
ret
dec
mov
sbb
dec
and
in
test
lea
dec
sub
push
jae
lods
pop
adcb
inc
dec
and
push
push
rorl
sbb
push
sti
jmp
loope
inc
xor
rolb
cs
rolb
xchg
mov
pop
sub
xchg
jne
out
jne
mov
sub
arpl
lea
mov
jae
add
push
jge
and
and
dec
inc
dec
adc
loope
jecxz,pn
fisttps
scas
fisttps
add
or
iret
ss
fisttps
ljmp
rcrl
mov
aas
inc
push
pop
sbb
popf
xor
testl
push
pop
pop
aam
mov
rorb
sbbb
add
nop
sub
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
mov
add
dec
outsl
arpl
inc
insb
insb
pop
insb
jae
jb
sar
arpl
imul
jo
dec
add
dec
addr16
xchg
sub
icebp
xor
push
adc
dec
in
inc
and
adc
ror
inc
outsb
fs
roll
leave
outsb
testb
popa
or
xor
add
xchg
add
xor
adc
rolb
push
and
jns
bndstx
add
dec
gs
pop
inc
push
shlb
add
push
imul
fwait
sub
push
sbb
sbb
push
jp
outsl
xor
jne
js
insb
sbb
paddd
scas
inc
outsb
jbe
mov
movb
mov
sbb
mov
adc
outsb
adc
sbb
cmpsl
push
and
pop
mov
add
insl
imul
jmp
push
inc
fs
or
dec
imul
sbb
lds
xlat
xchg
mov
xor
movsb
andb
rcl
movsb
sbbb
inc
jne
and
and
xchg
aad
dec
push
xor
mov
and
inc
lidtl
push
mov
gs
dec
pop
cmp
rorb
jo
scas
adc
gs
data16
and
stos
and
adc
insb
push
ss
xor
inc
sbb
add
fdivs
jae
cmpsl
pop
dec
sbb
push
outsl
jnp
adc
inc
jns
stos
adc
mov
addb
inc
pop
es
addr16
subl
xchg
adc
pusha
mov
ret
xor
je
fs
imul
insl
cmp
sub
mov
aas
push
andb
adcb
test
jbe
or
jge
imul
fwait
int
cmc
cltd
sbb
pop
pop
jo
popa
xlat
or
dec
outsl
xlat
sbb
fidivs
pop
and
mov
faddp
leave
push
roll
dec
cmpb
jb
and
dec
push
lds
add
fs
dec
loope
mov
sbb
xchg
addr16
je
cmp
mov
jb
jb
mov
outsb
dec
gs
or
mov
pop
cmp
aas
xor
imull
inc
inc
pop
pop
sub
xchg
imul
dec
xor
fisubrs
jae
insb
inc
jo
xorb
pop
inc
push
inc
adc
inc
jb
jbe
outsb
dec
inc
js
fmull
push
pop
cmp
imul
imul
lret
int3
mov
or
pusha
loop
push
scas
sti
in
jb
in
shrl
loop
xor
pusha
lret
sub
movsl
mov
sub
jae
arpl
cmp
add
jmp
mov
xor
pushf
sub
andb
insl
pop
fsts
push
add
in
jo
push
xchg
mov
push
adcl
test
cmp
mov
aas
add
popf
nop
pop
pop
jbe
imul
pop
cmpsb
cmp
ret
adc
pop
ljmp
jo
movsb
push
dec
dec
add
pop
mov
add
add
ljmp
pop
cmp
aad
xor
dec
addb
add
call
into
inc
cmovs
add
lcall
xchg
add
adc
jg
cmp
stos
in
add
mov
or
adc
add
stos
add
jp
add
addb
imull
cmp
add
inc
add
dec
mov
fiadds
cmp
dec
and
mov
aad
das
dec
pop
or
test
dec
xchg
incl
add
add
add
inc
add
call
int
jmp
jmp
jmp
jmp
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
push
pop
loop
lea
mov
test
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
push
pop
jns
movzwl
inc
push
inc
mov
push
call
test
je
mov
add
jmp
call
pusha
jmp
mov
or
xor
add
xor
add
or
mov
or
test
or
mov
xor
add
xor
add
add
add
xor
add
add
add
add
addb
add
out
xor
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
push
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
inc
push
xor
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
add
gs
je
add
jo
imul
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmpl
jne
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
lea
push
pushl
call
pushl
call
mov
pushl
pushl
call
mov
push
push
push
pushl
pushl
pushl
push
push
pushl
call
pushl
pushl
call
pushl
call
lea
push
pushl
call
xor
jmp
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
andl
lea
push
pushl
call
call
cmp
jne
pushl
call
pushl
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
movl
movl
movl
push
call
mov
push
call
push
call
mov
push
call
mov
push
push
push
push
pushl
pushl
mov
sub
cltd
sub
sar
push
mov
sub
cltd
sub
sar
push
push
push
push
push
call
mov
mov
mov
push
push
pushl
lea
push
call
test
je
mov
cmp
jne
cmpl
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
pushl
call
andl
pushl
call
push
push
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
pushl
call
pop
mov
cmpl
je
push
push
pushl
push
push
push
call
push
call
push
pushl
call
leave
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
call
mov
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
push
add
add
fs
add
add
add
adc
add
gs
add
add
add
add
add
add
fiadds
add
add
add
add
jb
jb
add
add
add
add
add
or
add
add
add
add
inc
add
loopne
je
js
add
add
or
or
add
add
inc
add
loopne
jb
popa
je
add
les
add
push
or
add
add
add
add
inc
add
loopne
fs
je
add
add
add
add
add
sbb
add
mov
add
inc
add
loopne
add
xor
xor
call
pusha
call
ss
inc
imul
cltd
mov
jnp
dec
iret
inc
xor
outsl
ljmp
pop
cltd
mov
dec
mov
and
mov
and
divb
sbb
fisubrl
add
out
push
push
sti
repnz
jg
add
sub
jno
lods
cli
fs
sub
mov
stos
mov
xor
imul
test
stos
xor
and
shl
mov
mov
dec
push
and
cli
mov
or
jg
cmp
bound
cmpl
es
inc
xchg
pop
cwtl
idiv
add
pop
lods
and
pop
mov
stc
gs
movsl
mov
pop
pushf
out
adc
imul
sti
fbstp
addl
pushf
sub
rcrb
adc
test
sbb
push
add
stos
mov
rcrl
inc
enter
jl
sub
in
sahf
out
aam
mov
enter
cmp
pop
mov
push
xchg
add
mov
mov
sbb
mov
leave
pop
jbe
lea
iret
xor
pushf
in
mov
push
cmp
mov
in
mov
xor
cmp
fimull
mov
xchg
xor
or
stc
xchg
sub
outsb
insl
test
js
xlat
push
mov
test
push
scas
arpl
ret
fcomps
je
jno
movsb
cmp
pop
sub
cld
cs
popf
ss
xchg
filds
lret
int3
dec
in
mov
mov
xchg
inc
xchg
arpl
cmpb
sbb
lahf
push
scas
mov
lahf
int
or
repnz
add
int3
xor
inc
int
divps
hlt
out
pop
cmp
push
pop
call
xchg
imul
fisubrs
stos
sbb
leave
jle
mov
push
inc
int
push
or
mov
dec
add
es
scas
cmpsl
jo,pn
push
mov
jg
mov
pop
sub
fldcw
pop
jp
lcall
mov
lahf
or
pop
inc
sahf
mov
sbb
lret
mov
inc
push
mov
sbb
and
xor
cmpsl
mov
xor
push
mov
aas
call
mov
cld
mov
addr16
sbb
mov
lea
cmp
mov
push
std
sbb
aad
cmp
icebp
clc
sub
dec
in
cs
ja
scas
test
out
pushf
xchg
data16
dec
add
mov
test
xor
lock
mov
lock
pop
xchg
movsb
add
in
in
sub
or
cmp
cmp
pop
out
cs
add
pop
ds
pop
mov
inc
xor
mov
aam
xor
rol
mov
repz
mov
lea
mov
push
add
pop
pop
sbb
leave
bnd
clc
cmpsl
rorl
push
hlt
lods
ja
sub
mov
test
mov
hlt
push
fwait
cltd
mov
adc
outsb
jmp
notl
jno
or
jmp
xchg
lret
jae
scas
call
inc
adc
push
mov
and
pop
jmp
and
lret
hlt
or
add
and
cli
loop
pop
push
dec
jp
shrl
rcrl
sar
pop
pop
adc
repz
flds
inc
jmp
aam
jg
ja
xchg
sub
xor
jno
ret
imul
imul
ja
in
mov
sub
pop
mov
mov
mov
addr16
and
test
fbstp
push
jo
insb
push
ficoms
movsb
insl
pop
dec
aad
cmpsl
add
adc
mov
in
bound
jo
mov
sub
pop
push
loope
mov
ficoms
mov
or
mov
outsb
mov
xchg
sarl
and
jle
sbb
push
adc
sbb
push
or
aaa
xchg
xor
in
inc
add
fsubrs
cmp
jnp
fldcw
push
or
xlat
mov
push
push
fists
pop
mov
jmp
out
and
test
dec
dec
cwtl
mov
lahf
in
in
rol
adc
and
dec
pop
fstps
mov
imul
and
popa
scas
mov
dec
cwtl
xor
jbe
push
gs
scas
scas
lock
xor
cmc
mov
xor
and
sbb
sub
add
test
jae
cmp
lahf
dec
ja
pushf
push
cli
bound
mov
cmp
enter
cmp
mov
jbe
mov
push
cs
push
mov
pop
sub
cmp
fisubl
pop
in
jno
cmp
mov
movsb
insl
in
push
add
int
jg
mov
cmp
jnp
xlat
mov
mov
pop
jno
push
js
movsb
andl
repz
mov
cmp
bound
push
cli
jge
mov
scas
jns
repnz
jle
fsubrl
ss
lock
loope
fisttpl
filds
adc
dec
xor
adc
adc
push
push
fsts
cmp
fyl2xp1
or
js
sti
mov
jecxz
dec
push
xchg
popa
xchg
inc
enter
add
mov
sbb
xor
jno
xchg
xchg
or
mov
jp
cli
lahf
jo
or
push
mov
inc
push
pop
mov
nop
add
push
push
xchg
cmc
mov
adc
cli
ftst
cmp
dec
xchg
sub
cli
mov
gs
in
cmp
jns
jae
adc
bound
data16
insl
jmp
jbe
dec
add
mov
or
ficoms
stos
prefetcht1
insl
add
lcall
movsl
pop
pop
or
mov
daa
aam
mov
mov
xor
inc
and
shll
sub
les
mov
cmpsb
mov
in
push
push
mov
les
jcxz
jnp
mov
xor
sub
lret
pusha
ficompl
dec
out
inc
jle
out
mov
xchg
or
scas
loopne
mov
iret
loop
aad
jecxz
fldenv
iret
sub
out
push
sarb
push
imul
clc
cld
push
or
jb
xchg
jge
cmp
sub
insl
icebp
es
add
xorl
sbb
dec
mov
jmp
test
xor
push
loop
popf
push
adc
xchg
push
cmp
mov
movsb
jecxz
insb
push
push
aaa
jbe
adc
xchg
dec
outsl
imul
jmp
push
pop
mov
lods
test
jg
sbb
add
js
mov
orl
rcrl
sbb
sbb
icebp
cld
pop
xchg
sbb
das
xchg
inc
hlt
adc
insb
mov
add
or
fidivrl
idiv
inc
icebp
fisubl
xor
fmulp
ret
rol
pop
or
pop
add
push
mov
pop
imul
js
bound
push
mov
lods
xchg
add
xchg
push
jecxz
sub
mov
xor
xor
add
imul
call
jg
repnz
or
enter
jg
ja
stos
pop
cli
rol
dec
lock
cmp
cltd
push
jnp
cmpsl
outsl
mov
dec
mov
mov
xor
cwtl
push
cwtl
fidivl
jmp
xchg
decb
add
jno
pop
inc
push
push
mov
mov
pop
xchg
sub
sub
ja
pop
mov
xchg
and
mov
sub
loop
cmp
jnp
inc
lods
push
mov
lahf
lock
stc
dec
mov
xor
xor
jp
pop
lods
push
cmc
lahf
iret
cmp
xor
adc
xor
outsl
adc
jmp
mov
add
cld
cmp
outsl
or
test
push
mov
fadds
and
or
push
inc
cs
aas
es
jno
and
xlat
std
push
jnp
lcall
in
loop
pushl
icebp
dec
loop
cli
stc
test
xor
gs
inc
cwtl
popa
movsl
sub
mov
pop
mov
aas
push
jmp
xor
idivl
daa
int3
lcall
aad
scas
inc
jae
mov
lcall
pusha
cmp
xor
and
pop
cmpl
clc
add
js
or
roll
adc
sub
and
jo
movsl
fistpll
sbb
mov
in
pop
inc
out
in
pop
jno
dec
add
lods
mov
pop
mov
cmp
push
add
mov
sti
pop
push
mov
push
sub
mov
addr16
xor
or
xchg
in
inc
nop
jb
jge
ficompl
xor
cmpsl
insb
rcl
fs
pop
in
icebp
inc
or
xchg
rcrb
mov
test
pop
ss
xchg
test
mov
fldl
pop
sbb
or
sub
es
sbb
icebp
cmc
les
xchg
leave
sbb
in
mov
jne
sbb
in
sub
jb
out
mov
jb
fs
sahf
shrl
add
pop
inc
ret
aam
call
in
sbb
inc
cmp
lcall
xchg
add
or
cmpsl
call
enter
cmp
pop
fsubl
stc
add
enter
or
xchg
aas
repnz
jmp
xor
jmp
lods
sub
push
mov
js
add
sbb
cli
fnstsw
stc
mov
fs
popa
jl
cs
and
mov
and
ss
lds
push
popa
inc
dec
push
jno
test
adc
test
pop
imul
cmp
out
sarb
lahf
jo
incl
jecxz
into
fcompl
add
lcall
shll
add
mov
test
fwait
mov
ljmp
push
push
bnd
push
sub
lcall
movsw
fldcw
inc
mov
xorb
push
fistps
shl
repz
test
sbb
jno
or
jno
mov
sbb
add
mov
mov
xor
mov
sti
enter
adc
jb
lret
sbb
inc
or
dec
mov
orb
add
daa
sub
inc
mov
rcll
push
adc
sbb
imul
sbb
rcl
mov
das
bound
mov
mov
sbb
mov
adc
mov
loop
ret
testb
lret
imul
push
lods
int
cmc
pusha
cmp
fstpl
nop
in
mov
jecxz
push
mov
adc
daa
lock
imul
dec
or
lahf
sti
and
dec
add
out
dec
cltd
pop
sub
in
adc
xchg
cmpb
scas
or
sbb
sub
adc
inc
mov
mov
inc
loop
sub
xor
inc
cmpsb
lret
mov
test
push
sbb
subb
gs
sub
cmpsl
ret
fiaddl
stc
pop
mov
or
divb
scas
jb
and
push
std
scas
push
push
adc
lock
aam
test
adc
sahf
pop
sti
mov
mov
push
adc
daa
outsb
popf
ja
loopne
and
insb
sub
shrl
insl
mov
int3
or
mov
push
inc
mov
adc
mov
mov
pop
mov
fwait
das
push
adc
pushw
or
sub
and
fadds
push
sub
mov
xorl
imul
icebp
adc
xor
inc
ss
jge
adc
pushl
add
mov
imul
ds
push
pop
les
es
xor
insb
cmpsb
or
push
sbb
xor
dec
inc
stos
mov
sub
mov
lods
cld
mov
add
jbe
push
stos
push
cld
cld
pop
sbbb
loop
lock
ss
test
pushf
sub
mov
fdivr
mov
shrl
mov
fwait
xchg
xorl
mov
test
xchg
fidivs
pop
lcall
cmpsb
iret
jecxz
dec
ja
mov
mov
movsl
clc
fs
lret
ja
out
adc
call
add
adc
push
jle
daa
int3
cmpb
shrb
mov
and
add
std
fisubs
inc
fadds
mov
mov
cmpsb
inc
lock
pop
and
mov
mov
das
fsubr
cmpl
pop
mov
popf
xchg
in
jb
pop
sub
push
cwtl
mov
clc
push
adc
icebp
mov
inc
jno
push
adc
mov
mov
cmpsb
daa
sbb
lods
mov
or
cmc
fstl
cltd
and
call
sub
push
dec
push
xchg
andl
or
mov
data16
sub
fidivrl
pop
and
inc
lea
pop
frstor
adc
fisubs
mov
push
movsb
mov
xlat
insl
mov
lcall
icebp
and
jge
fistl
cmp
inc
lock
divb
add
sbb
inc
inc
outsl
or
shr
das
push
ret
dec
iret
push
mov
dec
rcr
mov
inc
mov
les
rorb
add
mov
mov
mov
pop
test
mov
and
xchg
mov
xlat
jl
cs
mov
mov
inc
inc
dec
xor
cmp
mov
lcall
jb
stos
rcr
jns
out
scas
pop
test
xor
mov
lret
test
or
xchg
dec
push
mov
push
pop
pop
pop
dec
lcall
add
jnp
data16
fabs
pop
repz
out
ljmp
shll
cwtl
loopne
bound
lcall
scas
mov
push
scas
mov
sub
movsb
and
out
int
adc
dec
sbb
jnp
loopne
and
lds
in
jg
out
pop
or
inc
cmp
inc
push
xchg
push
push
xchg
int3
mov
xchg
pop
sbb
mov
bound
insb
repz
or
mov
or
sub
ja
sar
jno
shl
mov
rcrl
adc
mov
loop
mov
sub
scas
xchg
sub
out
push
fstl
dec
xor
xor
in
sub
shr
out
repz
sbb
jbe
aaa
cmc
add
sub
xchg
add
cmp
testl
rclb
pop
mov
divb
cld
sub
mov
pop
je
lods
xchg
int
movsb
jne
std
call
or
sub
roll
jne
rcrl
xor
jae
jge
jb
and
inc
mov
pop
inc
insl
dec
je
sahf
dec
adc
ds
daa
or
loope
out
shr
fstpl
pop
test
inc
xor
push
sahf
push
cmp
shlb
lea
pop
out
fsubrl
mov
mov
push
and
jge
inc
mov
and
xchg
jb
rorb
xchg
movsl
divb
mov
lock
clc
cmp
or
push
lock
popf
push
pop
repnz
mov
or
dec
mov
cmpsb
mov
dec
es
mov
and
loopne
mov
scas
cmp
shlb
outsl
and
mov
divl
push
mov
icebp
cltd
mov
push
xchg
mov
dec
jle
adc
push
imul
mov
pop
rorl
or
sbb
shl
mov
mov
out
push
xor
in
call
stc
outsl
inc
test
mov
fsubrs
sbb
add
aad
fldt
fwait
jne
inc
cmp
sti
mov
into
xchg
jmp
std
or
loope
sub
jl
dec
jmp
movsl
fimull
fisubrl
fcoml
cld
xchg
testb
adc
or
jg
rcll
shlb
lret
pop
xchg
fidivrl
jae
lcall
push
aad
cmp
jmp
cli
cmp
push
loop
out
cmpsb
ret
daa
enter
or
scas
xchg
repz
or
pop
daa
pusha
xlat
adc
sbb
push
int
cwtl
movsl
repnz
add
scas
dec
pusha
jnp
mov
fs
testb
xlat
cwtl
lods
stos
push
mov
push
mov
es
popf
sti
stos
insb
xchg
int3
cld
or
dec
bnd
xor
sbb
flds
jae
es
jg
adc
xchg
in
cld
and
pop
mov
push
popa
jmp
iret
rcr
mov
mov
fstl
test
test
fstl
mov
lock
es
rorl
aas
and
pop
dec
mov
cltd
sarb
test
outsb
sbb
push
adc
ret
filds
ret
sub
das
mov
pop
or
enter
call
push
xchg
xor
and
sub
je
shll
jo
xlat
cmpsb
mov
xor
sbb
scas
pushf
test
jp
shlb
pop
mov
push
xchg
test
std
mov
mov
push
enter
sbb
arpl
push
cmpl
push
popa
dec
out
xchg
cmpsb
or
sbb
lahf
cmp
push
loopne
int
ret
lds
sub
mov
lahf
jecxz
insl
cmp
xor
test
fcomi
cmc
push
nop
mov
out
cmpsb
lret
sub
jl
inc
mov
mov
mov
ret
dec
mov
test
inc
scas
nop
lds
sahf
inc
bound
fsubr
jo
cwtl
sub
and
push
cmp
xchg
cmp
push
into
jnp
ss
dec
hlt
addr16
and
mov
cmp
out
dec
xchg
sub
push
into
inc
pop
pop
out
call
or
std
adc
subb
test
or
shlb
ret
push
aad
mov
enter
cltd
sbb
adc
pop
cld
out
pusha
inc
mov
and
out
hlt
mov
movsb
cmp
mov
imul
cwtl
push
ja
add
xchg
push
shrl
cmp
cs
jo
cmp
inc
mov
sub
add
fcoml
jns
adc
or
loopne
mov
mov
cld
mov
push
sbb
insl
subl
mov
fcmovne
iret
out
movsl
movl
pop
popf
int
out
sbb
sbb
fidivl
pop
push
int
jl
inc
add
movsl
lods
fists
cld
mov
test
outsl
aad
lahf
pop
mov
xchg
cmp
and
or
daa
jl
xchg
bound
jmp
xchg
cmp
lahf
sub
sbb
imul
mov
push
ljmp
pop
pop
insl
sub
into
sti
test
add
push
fwait
cmc
shrb
test
ljmp
dec
jns
in
mov
cmp
nop
stc
gs
cltd
adc
jno
notb
out
xchg
out
or
xchg
xor
je
dec
pop
aas
lds
jmp
jne
mov
jnp
mov
sbb
lcall
lcall
or
dec
data16
pop
dec
jbe
ret
test
in
int
loope
rorb
mov
pop
loop
daa
test
fimull
mov
mov
sbb
push
js
xbegin
inc
push
out
shll
test
push
xchg
lods
or
adc
ljmp
enter
movsb
jns
jmp
push
inc
xchg
push
jmp
pop
outsl
mov
in
leave
add
cmpsb
in
bound
mov
jae
pop
pop
hlt
pusha
xchg
jo
xchg
pusha
adc
cmp
sub
inc
pop
mov
rcrl
push
inc
xchg
and
imul
out
aad
xlat
addb
clc
aam
out
in
rcll
pop
adc
mov
cli
mov
add
sbb
test
mov
leave
mov
push
push
aad
or
mov
es
clc
cmpsl
push
cmc
mov
imul
outsb
and
loop
jns
jge
xchg
out
mov
shrl
push
xor
push
push
xchg
cwtl
testl
or
mov
add
jle
leave
shl
add
divb
rolb
shll
mov
aas
mov
rclb
sahf
jecxz
push
lahf
mov
pop
cmp
sub
inc
popa
jae
pop
iret
sub
mov
test
dec
loop
jp
les
inc
std
incb
add
out
mov
test
xchg
or
and
mov
cmp
or
repz
xor
insb
sub
sub
sub
ja
int3
push
loop
xor
mov
sbb
mov
mov
add
pop
lock
pop
movsb
lret
cmp
push
and
cwtl
mov
pop
test
leave
add
and
pop
sub
fmuls
out
sbb
xchg
jle
lret
sbb
push
and
and
pop
in
in
push
jmp
sub
jne
or
mov
add
je
in
adc
inc
jge
add
movsl
std
jnp
mov
lea
mov
out
lods
in
fistps
mov
cmp
add
dec
frstor
jge
loopne
call
push
arpl
mov
push
xchg
pusha
ja
adc
das
or
sbb
jl
dec
mov
sbb
hlt
sub
test
mov
sbb
push
in
add
stos
jne
and
repnz
lds
lcall
shrb
loope
pop
or
jbe
in
aas
jmp
mov
xchg
xchg
mov
inc
jmp
nop
int3
int
mov
sub
lahf
jmp
test
sub
decl
movl
mov
jmp
fwait
imul
not
xchg
inc
in
inc
pop
cmc
push
dec
xchg
xchg
mov
shrb
aad
pop
jo
bnd
inc
jne
mov
cli
adc
cmp
lcall
outsl
fnstcw
inc
push
add
cmpsb
and
add
rcrl
add
sbb
repnz
or
xchg
dec
push
mov
into
add
stos
jmp
pop
push
cmc
ret
jl
inc
in
and
int
je
add
flds
rorb
aas
xchg
dec
pop
and
mov
cmp
in
gs
jo
pushf
adc
and
push
jne
lret
lods
fstps
xor
icebp
es
test
push
sti
pop
fidivs
gs
inc
inc
lret
sbb
or
loopne
and
push
sub
fsts
sbb
adc
cwtl
iret
mov
and
inc
and
scas
pop
jg
fs
movb
lahf
or
fdivs
inc
into
ret
mov
mov
sub
lds
mov
or
mov
add
or
out
js
push
mov
dec
and
adc
mov
jbe
pushf
or
pop
aaa
sbb
xor
mov
sub
int
xchg
adc
mov
mov
push
push
bound
insb
mov
push
mov
jl
shlb
adc
jae
pop
inc
xchg
dec
mov
dec
clc
leave
sub
fcom
enter
cmp
subl
add
inc
rorl
sahf
mov
cs
call
insb
push
mov
addr16
pop
stos
insl
and
pop
xor
dec
mov
or
inc
sbb
subb
jecxz
or
jl
sbb
cltd
xlat
fsubr
pop
test
movb
out
je
pop
das
jg
ret
shlb
subl
or
mov
jae
jo
rclb
das
xor
cmp
jbe
cwtl
mov
ljmp
pop
lods
fdiv
dec
dec
mov
mov
inc
sbb
sub
fdivl
lods
pusha
cmp
outsl
insl
jmp
xchg
cli
jge
sbb
push
gs
mov
cmpsl
mov
lret
xchg
scas
out
addb
jp
cmp
int
add
jnp
jmp
pop
cmp
jne
loope
lea
dec
icebp
data16
jp
xchg
sub
cmpsb
inc
addb
or
rcl
mov
xchg
push
mov
arpl
cmovb
sub
sbb
int3
mov
outsb
cmp
lcall
dec
test
setae
fstpl
fisubs
xcrypt-ofb
cmpsl
jmp
or
dec
push
test
leave
ficoms
loop
les
jb
les
pop
adc
inc
jg
sbb
shll
mov
adcb
mov
lds
clc
xlat
test
iret
jns
sbb
inc
test
in
mov
cmp
xchg
lea
imul
aad
mov
add
fsts
iret
pusha
pop
pop
scas
movsl
push
fadds
mov
jp
pop
sahf
push
leave
stos
dec
push
lcall
loopne
dec
push
or
shll
sahf
fsubs
int
fadd
or
mov
xchg
into
daa
push
test
mov
push
inc
mov
xor
aaa
mov
or
jae
jb
dec
cmpsb
and
mov
lea
je
repz
mov
out
shlb
or
dec
fiaddl
imul
in
push
pop
movsl
sub
add
cmpsb
gs
mov
xor
xchg
rorb
lods
or
pop
lcall
and
or
inc
pop
lds
ja
jge
mov
popf
mov
sub
enter
mov
and
inc
arpl
xchg
dec
vpminub
adc
xor
add
out
push
push
dec
push
add
xchg
aad
fwait
jnp
cmc
and
lea
testl
pop
adc
mov
push
mov
cmp
ficoml
jns
mov
mov
sub
gs
rorb
fs
mov
divb
imul
leave
out
fldcw
jae
push
push
sbb
movsb
subb
lahf
mov
cmp
mov
or
mov
dec
ret
pop
push
popf
lock
jb
repz
in
push
ljmp
and
test
jg
insl
sarb
and
loop
sbb
call
and
imul
or
xchg
xor
inc
jecxz
add
xor
adc
jb
dec
cmp
xchg
mov
call
inc
test
sbb
lret
mov
mov
push
jbe
xchg
inc
out
mov
cltd
lock
enter
sub
xor
pop
push
jecxz
sub
adc
push
jge
push
cmp
inc
out
jns
js
jmp
sub
stos
mov
sar
into
jl
je
sub
jo
aas
insb
loope
pop
stc
iret
push
loope
add
imul
sub
and
out
push
and
push
dec
hlt
test
xchg
and
idivb
insl
mov
imul
out
ss
lahf
leave
in
jnp
dec
into
or
jo
cmpl
ficompl
ljmp
nop
icebp
gs
fimuls
call
loop
dec
pop
mov
jge
mov
mov
or
adc
adc
sub
stos
jl
and
inc
dec
ss
nop
dec
fsubrp
mov
stos
stc
mov
and
mov
nop
in
adc
lret
fadd
cmpsb
movsl
push
repz
mov
push
shrl
or
outsb
ds
pop
jl
inc
movsl
add
inc
arpl
enter
sbb
xchg
mov
add
xchg
stos
lcall
sbbb
out
adc
pop
pop
ja
inc
sbb
pop
mov
aas
imul
jae
pop
inc
je
inc
mov
nop
cmp
lods
nop
and
adc
pop
add
out
fnstsw
aam
out
repz
jecxz
ja
popf
dec
bnd
nop
adc
out
cmp
push
inc
cltd
gs
fisubrs
popl
shl
int
and
loope
and
call
xchg
outsb
adc
sbb
fistpll
push
jg
popa
pusha
push
ret
push
pushf
in
shrl
xor
cld
std
fnstenv
mov
dec
int
and
lret
adc
sahf
xlat
or
pop
cmpsb
mov
mov
xchg
arpl
rcll
fcmovbe
mov
and
dec
pop
pop
fadds
jb
ljmp
pusha
lods
mov
xchg
sbb
out
fcomps
lret
stos
xchg
mov
sbb
jl
pop
in
push
sub
cmp
jns
in
imul
sbb
jle
stos
jnp
xchg
lcall
rclb
add
cli
push
punpckhwd
inc
push
mov
aaa
bsf
bound
sbb
add
mov
mov
add
pop
scas
mov
fmuls
xchg
or
fnstcw
inc
sub
add
test
loop
nop
sub
faddl
sub
sbb
push
mov
icebp
clc
fnstenv
scas
jns
stos
andl
fdivrp
aad
fs
scas
fiaddl
stos
hlt
arpl
add
out
pop
or
movsb
or
xchg
push
addr16
and
xlat
sub
mov
test
cld
jge
cmp
sub
adc
fmull
or
in
bound
xchg
sbb
and
sbb
xor
iret
and
sbb
xor
outsb
jb
stc
dec
insl
mov
hlt
scas
adc
gs
push
and
jl
and
mov
xor
and
aam
lock
fstpt
std
ds
jle
daa
into
mov
pop
mov
mov
test
out
jle
repnz
lcall
mov
add
adc
das
das
mov
or
shr
pop
jg
iret
lock
std
jg
shrl
pop
ss
mov
sbb
adcb
mov
cmp
adc
rcl
jno
popf
xchg
jbe
and
sub
xor
push
dec
jecxz
adc
test
jnp
sbb
in
mov
jge
cmp
pop
pop
lret
cmp
mov
xchg
in
pop
mov
xor
ljmp
add
outsl
push
sbb
mov
mov
and
popa
sbb
fbstp
jge
sar
sti
sbb
lret
pop
mov
hlt
mov
icebp
std
sub
and
cmp
aam
add
sar
out
out
push
hlt
out
ret
add
cmp
or
mov
cmp
jns
ja
mov
push
pop
mov
sbb
or
lods
jae
mov
xchg
pop
mov
sbb
mov
outsb
adcl
push
or
cli
lods
dec
fidivrl
mov
and
insl
outsb
pop
jnp
lods
clc
popf
pushf
sti
lret
pop
inc
repnz
push
rcrl
in
and
dec
aam
mov
ds
rorb
lret
or
or
xchg
mov
cmpsb
loop
sbb
jg
out
stc
cltd
pop
test
xchg
cmp
add
and
pop
mov
stos
cmp
ds
pop
jecxz
sub
sbb
clc
dec
ja
push
stc
jmp
xchg
push
sti
xchg
aas
sub
std
jecxz
pop
aam
ret
popf
mov
mov
mov
xchg
andl
push
into
inc
fldenv
cld
aas
stos
mov
out
jl
mov
inc
push
mov
push
iret
xchg
call
cmpsl
das
repz
xchg
push
out
dec
movsb
bound
in
jmp
and
add
pop
mov
icebp
sahf
sbb
movsb
and
xchg
fnsave
je
testl
and
jle
movsl
mov
rcll
jno
adc
aam
inc
pop
out
pop
addb
fisttps
iret
pop
notl
fs
dec
dec
mov
fists
shlb
lock
and
jmp
xchg
xor
aad
rorb
mov
pop
and
stos
cmpsl
insb
push
xor
movsl
add
ljmp
leave
repnz
mov
repnz
mov
arpl
sbb
add
incb
xchg
les
in
push
stos
test
cmp
pop
inc
push
into
arpl
subb
jno
lods
jnp
mov
das
int3
lods
dec
lds
add
in
pop
xchg
in
leave
or
inc
pmaddwd
dec
idivl
fisttpl
mov
mov
lahf
cmp
sar
aaa
ja
ret
pop
adcb
fs
and
sbb
and
icebp
mov
jns
pop
std
das
jge
inc
and
stos
dec
std
outsb
clc
scas
test
sub
rorl
and
push
or
popa
push
sub
jg
and
mov
aaa
dec
xor
adc
dec
into
mov
xor
leave
or
jno
stc
jo
lahf
and
xchg
lods
fisttps
push
je
jp
adc
pop
lods
xchg
jne
cltd
mov
inc
xor
jecxz
push
push
outsl
mov
hlt
sub
enter
pushf
out
jle
xor
lret
xor
divb
fildl
push
xor
andl
jmp
jmp
fsubl
mov
adc
cld
mov
xchg
mov
stc
mov
mov
out
sbb
into
or
xchg
mov
fs
or
jecxz
xchg
inc
fwait
es
daa
mov
mov
xlat
pop
jb
mov
out
cmp
sahf
pusha
imul
aas
std
adc
jl
adc
push
popf
and
ret
gs
hlt
shrb
mov
stos
adc
andl
lcall
mov
push
test
ja
pop
icebp
es
and
sbb
dec
inc
xchg
mov
pop
mov
jp
lds
jecxz
data16
repnz
icebp
fmull
pop
movsl
repz
ret
pop
mov
push
pop
pop
push
mov
xchg
pop
inc
jb
xchg
mov
fstp
ds
jae
pop
leave
imulb
into
ds
mov
fmull
mov
scas
xor
push
lret
push
jns
int3
mov
cmp
fiadds
mov
lds
dec
push
inc
and
dec
daa
mov
in
nop
dec
mov
lock
pop
cmpsl
mov
enter
inc
notb
jp
mov
mov
fwait
add
inc
das
pop
sti
xor
idiv
test
sub
add
outsb
cld
pop
push
fwait
lahf
cmp
adc
mov
pop
cmp
xchg
lcall
sbb
shlb
mov
fs
dec
idivb
fcomip
cld
xchg
sub
jmp
hlt
pop
pop
in
lar
mov
lds
or
sub
les
and
jg
jecxz
repz
adc
rcrl
xor
mov
push
pop
mov
adc
movsb
inc
cmp
xor
push
push
and
loop
inc
mov
mov
dec
xchg
xor
stc
mov
insb
gs
sahf
popa
mov
jo
pop
outsb
adc
xchg
repnz
bound
outsl
jns
popf
stos
mov
push
dec
movsl
ret
mov
mov
mov
xchg
jo
daa
or
push
lahf
call
and
aad
push
xchg
sub
sub
pop
jnp
sbb
mov
out
mov
xor
dec
mov
fwait
pusha
test
iret
jb
repnz
push
mov
mov
sbbb
int3
pop
mov
addr16
pop
jae
pop
addb
gs
xchg
fld
mov
pusha
mov
sbb
je
push
cs
push
loop
repnz
sti
shr
inc
push
cmp
fdivs
cli
mov
sbb
jne
sub
std
xchg
xchg
xor
push
pop
jb
pop
mov
sahf
inc
pop
gs
push
sahf
adcb
sub
popf
mov
inc
mov
jp
das
ja
je
stc
cltd
push
mov
or
lcall
add
jl
stos
aam
mov
push
outsb
ret
pop
in
sub
and
push
les
push
jnp
out
inc
cld
mov
mov
lahf
mov
sbb
sub
sbb
repnz
mov
jge
mov
mov
mov
sarb
loopne
ds
dec
gs
jmp
cmp
test
jmp
add
shlb
xor
mov
xlat
dec
adc
insb
hlt
mov
push
xchg
add
mov
js
xor
jb
jle
cmc
and
jae
mov
dec
testb
dec
lds
xor
shlb
loopne
inc
push
inc
cmp
fidivrl
mov
xchg
dec
xchg
xchg
ret
pushw
clc
fsts
xor
loopne
pop
mov
jp
mov
jp
push
dec
mov
mov
cmp
dec
nop
or
push
sub
mov
outsb
inc
loopne
push
add
ror
iret
test
cmp
lret
outsb
in
js
pop
mov
nop
fistpl
and
and
xadd
fimull
icebp
fildll
cltd
jecxz
and
je
mov
pop
outsl
sbb
daa
pushf
aam
mov
iret
cmp
cmp
mov
fmull
push
enter
pop
mov
test
inc
int
rclb
mov
dec
repz
sub
lds
iret
mov
adc
sbb
popa
adc
jb
pushf
popa
xchg
icebp
push
jecxz
shll
subb
in
lea
jno
lea
inc
enter
sbb
pop
push
or
rcll
es
daa
adc
or
xorl
mov
or
dec
clc
repnz
jg
rorl
add
icebp
std
lock
mov
mov
lea
andl
and
dec
jns
outsl
push
mov
cld
fmul
icebp
pop
xor
iret
call
out
fs
jmp
inc
arpl
bnd
pop
cmp
xlat
xchg
xor
inc
or
out
lods
mov
mov
test
xchg
or
push
jmp
insb
roll
popf
test
or
and
popf
lahf
xchg
lcall
xorl
dec
pop
pop
xor
rolb
cmp
cli
inc
push
movsb
ss
xlat
inc
sbb
pop
fcmovb
mov
push
imul
mov
inc
pop
mov
je
adc
sbb
or
adc
sub
or
insb
clc
ljmp
cmpb
test
aas
cmc
stc
fsubrs
adc
cmc
mov
xchg
mov
sbb
movsl
iret
arpl
mov
test
stc
mov
sub
mov
lods
rcll
push
or
add
jbe
add
into
xor
push
push
ret
inc
int
test
sahf
cs
shrl
inc
jp
pop
sbb
out
adc
dec
lret
lods
lds
fisubs
mov
add
loope
outsb
and
outsb
adc
mov
lret
ret
and
test
xor
andl
addw
dec
xchg
test
movsl
in
dec
jge
inc
stc
pop
mov
cli
test
dec
xchg
dec
cmpsb
cmpsb
stos
dec
cmpsb
sub
loop
cwtl
mov
cmp
js
xchg
addb
loop
out
or
lods
stos
dec
adc
push
inc
stos
adcb
pop
dec
daa
sub
mov
in
lock
or
andl
cmp
sbb
out
test
xor
cs
mov
loopne
jmp
push
imul
push
ja
outsb
daa
jne
and
inc
cmp
ds
mov
out
leave
mov
iret
rcll
pop
pusha
out
stc
sbb
cltd
mov
hlt
dec
sbb
inc
lret
out
rolb
add
dec
jb
fwait
push
call
in
sbb
out
rolb
sub
movsl
sub
pop
push
fisttps
movsl
mov
mov
lcall
outsl
mov
and
stc
lret
scas
loopne
xchg
test
bnd
push
jb
jle
hlt
mov
cmc
jg
mov
mov
lret
push
popa
inc
imul
cltd
fstps
data16
ds
fiadds
test
pop
fisubrs
clc
pop
sbb
cmp
mov
jecxz
jns
xchg
jae
lods
cwtl
and
push
cmp
push
mov
adc
iret
loope
adc
rorb
lods
pop
insl
lret
daa
add
dec
out
in
pop
iret
shrb
loop
inc
je
and
jmp
cltd
jp
clc
stos
mov
cmp
push
cltd
fiaddl
cmp
inc
push
out
jge
push
push
mov
adc
repnz
sub
adc
push
and
std
inc
popf
and
leave
and
sub
imul
pop
or
xchg
mov
jg
sub
mov
sbb
andb
mov
pop
adc
cmp
sub
pop
sub
sbb
lock
movsb
mov
cmp
and
xor
dec
jg
mov
bound
or
adc
mov
or
stc
push
data16
push
fwait
mov
ret
test
fidivrl
push
jb
movsb
lcall
out
xor
cli
jp
xor
jg
sub
in
mov
cld
jmp
loop
mov
rorb
outsl
mov
cli
nop
je
cwtl
sub
test
test
push
mov
xor
aam
fidivrl
sub
xchg
pop
aaa
push
loop
cmpsb
mov
loop
add
mov
sub
push
shrb
iret
scas
push
lods
xchg
jns
push
sbb
push
dec
outsb
lcall
movsb
and
scas
cmp
push
aam
push
cld
out
jnp
stc
sub
push
out
cmp
ds
rolb
in
mov
sub
dec
cmp
mov
add
out
ljmp
pop
mov
movsb
sub
test
jno
mov
mov
andl
push
ret
popf
inc
fwait
adc
push
and
leave
jge
das
push
pop
popa
dec
add
mov
andb
lods
or
arpl
lods
push
add
js
sbb
daa
into
cmp
daa
movsb
add
loopne
jp
push
daa
pop
lods
push
dec
sub
outsl
arpl
sub
add
mov
dec
cwtl
sahf
aad
cmp
and
out
aad
fcmovb
push
or
mov
jne
pushf
test
push
inc
sub
add
jnp
rclb
lahf
es
push
ds
sub
jb
adc
sbb
add
push
outsb
jo
adc
out
movzbl
jns
push
jl
loopne
adc
into
mov
push
ja
outsb
leave
pop
mov
outsl
or
xlat
mov
arpl
test
adc
enter
mov
or
or
mull
mov
xlat
aad
sets
jno
lret
es
nop
or
out
push
in
mov
sbb
outsw
fnstenv
push
addb
lds
iret
mov
mov
in
insb
mov
int
push
adc
out
notb
pop
mov
into
sub
adcl
pop
sub
lock
clc
out
dec
xchg
cmp
fisubrs
mov
imul
dec
or
ret
popf
movsb
xchg
sbb
jp
inc
shlb
ffreep
inc
dec
or
sbb
mov
jl
adc
enter
sub
and
mov
mov
bound
adc
sbb
sti
push
adc
push
dec
ja
mov
lods
push
gs
xor
stos
mov
iret
pop
pop
lret
inc
and
sub
rolb
hlt
cwtl
mov
lods
ja
sbb
call
mov
mov
hlt
pop
out
adc
pusha
pop
outsl
out
mov
aaa
xlat
mov
mov
mov
dec
pop
cmp
mov
dec
xchg
enter
dec
dec
cmc
cmp
clc
fldl
insb
fwait
sub
xchg
add
xlat
lret
notb
inc
xor
inc
pop
in
fimuls
mov
std
sbb
dec
int
dec
cltd
out
lret
int3
push
adc
lods
cltd
inc
xchg
arpl
les
jae
jg
lea
push
test
xor
adc
pop
xor
inc
outsb
ret
pop
mov
inc
mov
push
mov
sub
mov
inc
adc
ds
mov
adc
ja
sub
stos
out
fdivrs
sbb
mov
out
xor
shr
sub
mov
pop
jecxz
test
xor
pop
jns
mov
enter
cli
dec
loopne
lock
int3
adc
addr16
jecxz
insb
pop
aaa
or
xor
cld
scas
add
sub
scas
xchg
sbb
hlt
jmp
fwait
xchg
sbb
mov
inc
pop
push
pop
add
nop
adc
mov
mov
psrld
enter
jo
ljmp
lods
sbb
add
addb
and
lds
mov
add
pop
sbb
mov
les
jo
push
or
lds
sub
dec
jg
jmp
xchg
mov
lcall
pusha
push
or
cwtl
xchg
imul
outsl
iret
cmp
jecxz
fsubs
push
push
out
mov
ds
mov
mov
icebp
fs
fsubrl
bound
icebp
fldl
adc
cmp
jae
or
inc
adc
lock
sub
in
iret
push
dec
pusha
shrb
mov
punpcklbw
push
cwtl
repnz
arpl
adc
xchg
push
jno
push
jecxz
addr16
dec
mov
add
and
sbbb
out
ss
mov
xor
sti
adc
out
dec
and
je
adc
jae
mov
mov
repnz
xchg
mov
das
jns
add
shll
or
daa
bound
outsb
int
dec
cmp
gs
mov
xchg
call
sub
mul
nop
hlt
pusha
xchg
bound
lock
mov
xchg
cli
xchg
pop
mov
sbb
scas
test
lods
inc
mov
dec
add
xor
mov
xchg
shrb
add
das
icebp
add
pop
sub
mov
fstps
jmp
fdivrl
ret
xlat
and
loope
cmc
inc
sbb
jne
clc
sbb
sbb
mov
test
dec
sub
mov
mov
sti
mov
test
ffreep
adc
push
testb
scas
jns
stc
gs
mov
pop
cmpsb
cmp
dec
cmpsl
aaa
jbe
inc
push
hlt
xor
aad
loopne
popa
cltd
into
sahf
outsb
pop
sbb
imul
and
lcall
dec
add
clc
int
xchg
jno
stos
and
shl
aad
ljmp
shll
repz
sti
push
mov
mov
push
icebp
xchg
adc
pusha
sbb
out
ds
add
lods
lds
test
xor
push
push
mov
xchg
icebp
inc
add
inc
aas
mov
adc
adc
imul
dec
shlb
scas
mov
sbb
push
pop
adc
pop
out
fmuls
sub
lea
ret
into
test
aad
push
in
sbb
mov
cmp
or
pop
jg
js
shll
mov
flds
nop
mov
outsb
xchg
jo
stos
cwtl
subb
push
bound
jae
in
shll
jp
test
shrl
daa
mov
repnz
mov
or
subb
cmp
jns
fdivl
lcall
push
bound
shl
ss
or
bound
stos
cmpsb
or
rcl
ja
loopne
push
lahf
je
mov
rorl
popa
lret
push
cli
mov
add
dec
data16
ret
and
rcr
xor
cmpsb
lret
cmpsb
out
pop
dec
fcmovne
xlat
or
add
xchg
cmp
je
pop
test
insl
cld
fnstsw
mov
stc
mov
negl
or
fsub
xchg
popf
sbb
cwtl
add
inc
xor
and
inc
jg
test
push
push
out
push
test
jno
lds
xchg
inc
lea
cmpsl
sbb
inc
mov
inc
stos
jno
cmp
sub
mov
jae
jo
push
xchg
loop
test
add
jnp
rcrl
sbb
nop
test
pusha
ljmp
dec
dec
rdmsr
mov
push
adc
jmp
pop
jecxz
push
shlb
in
and
jle
out
ds
or
pop
mov
xor
xchg
add
push
inc
clc
test
ret
test
arpl
mov
mov
out
aad
push
sub
and
je
iret
shr
lret
out
imul
pop
push
push
jecxz
add
out
adc
cltd
rol
add
mov
xorl
in
adc
in
mov
dec
xor
or
fcomip
cmpsl
push
js
addr16
xchg
xor
andb
adc
insl
lods
ljmp
cltd
sbb
xchg
sbb
lret
les
and
daa
pop
pop
inc
push
movsl
push
pop
add
arpl
mov
out
ds
popa
js
inc
mov
js
adcb
mov
test
in
loop
pop
inc
fbld
ljmp
dec
inc
mov
jmp
jns
add
frndint
fcmovb
mov
mov
ds
mov
cmp
add
inc
jno
or
shll
iret
xor
push
cmp
arpl
push
loope
jbe
dec
movsb
mov
and
xchg
jo
xor
addr16
repz
fisttps
pop
jge
add
imul
or
lret
cmc
pop
fiadds
xor
test
cld
lds
jmp
jp
test
test
lea
imul
mov
pop
ret
aam
or
arpl
cmp
inc
roll
push
loop
scas
decl
int
call
and
push
clc
xor
jg
in
stos
sub
pop
imul
loopne
mov
xor
call
inc
or
js
sbb
jo
clc
adc
pop
call
gs
inc
mov
mov
cld
xor
mov
int
icebp
test
push
jl
cmpsl
inc
fnstcw
loope
cmpsb
or
xchg
mov
pop
or
push
repnz
xchg
mov
in
ss
mov
hlt
sbb
cmp
lret
js
cmpsb
mov
and
push
repz
fldl
add
adc
sub
out
lcall
out
mov
pop
pop
inc
mov
add
mov
fwait
mov
cmp
push
dec
mov
jecxz
mov
call
dec
pop
in
adc
xchg
xchg
iret
scas
lock
dec
in
adc
cmpsb
es
dec
cmc
xor
sbb
out
iret
mov
jle
jbe
xor
stos
jmp
popl
in
jb
cmpsb
stos
or
xchg
pop
xchg
or
subl
shlb
and
cmp
es
push
mov
fsubs
ud0
ret
add
xor
daa
pop
cwtl
jno
sahf
loopne
inc
outsb
xchg
xchg
and
aam
dec
cmp
sub
add
jns
mov
fisttps
and
test
cmpsb
lret
sub
sub
pop
lret
jle
mov
insb
mov
adc
into
cmp
sub
mov
mov
and
jge
inc
mov
cmp
cmp
xor
and
mov
cld
sahf
cli
cltd
mov
pop
rcrl
dec
std
inc
push
xor
cmp
cwtl
sbb
test
or
scas
push
push
inc
adc
adc
lahf
lea
addl
lcall
inc
sahf
lret
cmp
pop
bndstx
rorb
jns
mull
pop
adc
cld
add
cmp
pop
gs
or
pop
fnstcw
sbb
sbb
adc
cli
cmp
pop
lahf
sbbb
out
aas
xchg
push
repnz
ret
dec
pop
cld
psrld
mov
mov
pop
aaa
stos
push
mov
sbb
add
or
test
in
into
add
mov
pop
add
add
sub
pop
mov
inc
sbbb
dec
lahf
mov
mov
mov
fwait
insb
adcl
sub
or
push
into
xlat
pop
cmpsb
cli
dec
add
aaa
inc
jge
mov
cs
sbb
jecxz
les
cmp
insb
inc
fimull
lock
push
in
stos
mov
push
jmp
dec
int
mov
ja
imul
sbb
pop
cmpsl
std
xchg
mov
pop
stc
arpl
shll
xchg
or
inc
jae
fnstenv
xor
lea
iret
rcl
pop
xor
mov
ljmp
mov
pop
andb
xchg
push
int
aas
ret
int
dec
rol
xchg
push
fildll
adc
sbb
pcmpeqw
xor
inc
pop
xor
fmulp
push
les
fbstp
add
pop
mov
ret
shl
and
aaa
add
scas
lock
ss
int3
aaa
daa
ficomps
in
iret
xchg
push
pop
enter
inc
jns
nop
jle
sub
xor
inc
mov
sub
jmp
jbe
pop
rcrl
ret
pop
add
lea
add
cmp
lds
enter
mov
call
pop
out
jns
mov
lcall
ss
fnsave
ja
adc
stos
adc
xchg
add
cld
in
inc
and
test
inc
inc
dec
xchg
idivl
jp
and
add
xchg
mov
xchg
mov
jmp
stc
dec
add
xlat
lds
mov
out
mov
sbb
dec
sub
xchg
popa
std
movsb
push
sti
add
lods
sub
aas
add
sti
pop
aaa
gs
sbb
mov
cmp
lea
lar
push
iret
ljmp
aad
subb
cli
cmp
inc
xchg
pusha
aam
xchg
sahf
mov
jp
cmpsl
scas
inc
nop
sahf
adc
xor
gs
adc
sub
push
rolb
mov
mov
out
mov
jmp
clc
test
xchg
push
and
dec
call
subl
xorl
add
bound
test
int3
fldenv
fimull
lret
out
push
lret
xchg
xor
in
xchg
js
push
pop
ret
mov
pop
adc
and
mov
loopne
inc
xorl
stc
push
bnd
add
adc
int
das
idivl
aad
sub
cwtl
jp
daa
cmp
loope
cmp
inc
mov
mov
movsb
sbb
xlat
push
and
mov
fcompl
clc
jae
inc
fists
lods
xchg
xor
push
fwait
popf
rorw
std
scas
mov
leave
mov
loopne
mov
ds
inc
cli
and
mov
dec
and
daa
cld
ss
jg
gs
xlat
hlt
inc
or
outsb
xchg
xchg
mov
add
xor
jae
pop
xlat
in
sbb
fildl
pop
or
pop
loop
sbb
sub
lret
test
jo
bound
cmp
ret
imul
sahf
cmp
mov
out
inc
adc
fidivrs
and
subl
mov
jns
pop
movsl
fstp
jnp
loop
popf
inc
test
xchg
stos
mov
dec
ror
ds
int
testb
cmpsl
mov
sbb
aaa
xor
push
inc
stos
inc
lret
xor
mov
sti
out
or
xor
cld
lret
ret
in
dec
mov
cmp
xchg
lods
xchg
adc
push
push
pop
and
lret
and
mov
sbb
mov
jb
outsl
dec
and
jmp
aaa
dec
cld
jge
and
les
mov
icebp
xchg
dec
cltd
enter
sub
in
push
stos
jae
sub
je
iret
jb
adc
push
insl
add
scas
dec
imul
add
or
pop
xor
imul
jae
dec
outsb
repnz
fistpll
and
cmp
xchg
xor
push
add
push
cltd
pop
mov
nop
ljmp
pop
cwtl
inc
pop
sub
mov
ss
jnp
jnp
pop
adc
aas
lods
cmp
lea
jmp
sub
ret
inc
sub
xor
xor
in
xor
cli
ret
fsubrl
lret
pushf
movsl
and
iret
add
adc
jno
int3
mov
test
mov
insl
lcall
repnz
cmp
fs
hlt
mov
xor
push
sbb
push
inc
add
jne
add
call
gs
into
pop
stos
ja
lea
cmpsb
adc
ljmp
pop
jne
xlat
push
mov
xchg
inc
je
cmp
dec
mov
or
mov
rorb
cs
xchg
repnz
push
out
lret
adc
imul
push
jmp
sbb
dec
sbb
or
loop
pusha
dec
mov
xor
pop
lock
inc
xchg
mov
cmp
push
push
and
cmp
out
pop
testb
jg
dec
dec
pushf
mov
xchg
push
lahf
test
cmp
jns
jb
push
outsb
inc
or
cli
jnp
mov
inc
fld
pop
and
lea
arpl
push
scas
push
inc
sub
dec
mov
test
stos
or
loop
lods
ljmp
pusha
repz
call
mov
sbb
call
fdivl
lods
imul
mov
and
sbb
dec
movsb
cwtl
movsl
aas
cmp
push
push
xor
sti
sbb
clc
jp
inc
fs
cmpsb
stos
mov
popa
sub
pushf
call
gs
ss
loope
js
sbb
and
xchg
push
inc
fsubrl
mov
or
in
clc
jo
lahf
fucom
push
fnstsw
push
dec
fwait
sbb
mov
shll
mov
or
jno
les
add
push
push
pop
cmp
scas
mov
aas
push
and
pop
cltd
mov
test
xchg
cmp
repz
cmc
mov
imul
andl
adc
psrlq
pop
mov
pop
imul
xor
test
daa
push
sbb
out
mov
push
cmpsl
cmpsb
lods
push
pusha
jne
pop
and
xchg
stos
or
mov
fwait
or
mov
test
xor
lahf
cmp
jmp
inc
nop
sub
xchg
jmp
sub
lods
imul
and
int
xlat
pop
mov
mov
cmpsb
stc
sub
inc
and
outsl
popa
mov
aam
mov
pusha
lods
jb
dec
push
aam
loopne
mov
add
pop
add
ret
pop
in
jb
aam
stos
fmull
in
sub
or
mov
mov
add
pushf
inc
mov
je
movsl
data16
call
cmpsl
rol
or
in
inc
and
mov
sbb
mov
mov
mov
fbstp
sub
xor
jb
add
lods
mov
add
and
dec
loop
fisubrs
in
ret
pusha
test
pop
outsl
or
data16
and
sub
sbb
sub
jbe
aas
jae
cmc
mov
mov
loop
aas
in
repnz
sarb
xchg
and
cmp
xlat
mov
inc
xchg
clc
in
fcompl
out
or
shll
hlt
xchg
clc
pop
ud2
dec
jp
xchg
pop
loope
sbb
jno
cmp
push
lahf
and
arpl
xor
push
imul
cwtl
sbb
push
push
arpl
inc
fisubrl
dec
mov
pop
test
cli
loopne
aas
dec
add
mov
fsub
stos
loop
loop
xchg
cmpsl
outsl
add
int3
sbb
pop
and
adcl
shlb
movsl
ret
or
jne
inc
mov
add
push
rcrl
mov
arpl
inc
mov
shr
xchg
push
push
shll
cmpsb
and
shrl
pop
mov
div
aaa
fsts
and
pop
jno
fmull
and
xor
sar
sub
mov
pop
clc
lahf
mov
sub
lods
das
xor
pop
test
aam
je
dec
cmp
in
stos
and
add
xchg
test
cwtl
inc
aas
arpl
decb
pop
push
arpl
sti
loop
mov
cltd
fisubrl
mov
mov
xchg
movsl
aad
xchg
fwait
loop
fiaddl
and
jmp
es
push
xor
int
outsl
pop
popa
fsubr
ljmp
mov
jb
adcb
xchg
mov
insl
mov
mov
sbb
out
xor
xchg
jne
push
pop
pop
dec
xor
mov
int3
insl
jg
inc
ret
inc
or
icebp
mov
pop
cmp
xor
movaps
sbb
or
ljmp
cmpsl
pushf
cmpsl
hlt
push
mov
ret
add
adc
and
push
inc
clc
test
cld
mov
int3
cld
aas
rclb
pop
pop
jnp
push
fisttpl
repnz
lea
jmp
mov
mov
dec
scas
push
fildll
xcrypt-cfb
cmpsl
jecxz
mov
jecxz
mov
psllq
jae
loope
dec
lods
pop
cli
pop
ficompl
xchg
pop
jne
cmp
rolw
lret
jb
dec
sub
jnp
jno
and
jb
cmp
push
push
in
dec
push
and
int
pop
cmp
sbb
xor
cmp
xorl
xor
popf
lods
cwtl
in
mull
ljmp
gs
aam
cmp
mov
std
es
mov
mov
jg
mov
dec
testl
fcmovne
mov
sub
push
out
test
call
stc
int3
pusha
cli
mov
jge
or
mov
adc
sbb
dec
mov
pop
jbe
mov
sbb
ljmp
jns
icebp
int3
sahf
loopne
mov
fistl
sbb
cmc
das
popf
and
les
sub
sbb
daa
cmpsb
daa
shll
aad
insl
sub
fistl
xchg
mov
mov
icebp
inc
pop
ret
xchg
test
mov
fcoms
mov
inc
mov
and
sbb
xchg
rcll
mov
fs
test
dec
lea
jne
stos
sbb
insb
xlat
pop
outsl
push
add
rcrb
test
into
cltd
and
outsl
nop
out
push
fistps
fidivrl
mov
imul
stos
mov
push
lret
mov
pop
icebp
mov
in
shll
mov
stc
ja
add
jmp
or
cmp
enter
shl
mov
cmp
dec
mov
leave
rcrb
mull
addr16
jp
out
fists
rclb
fidivrs
or
mov
mov
dec
loope,pt
daa
mov
xchg
lret
mov
pop
mov
sbb
inc
xor
mov
inc
dec
lahf
mov
push
int
and
or
fucom
out
leave
shll
fbld
aam
inc
jp
arpl
test
fsub
mov
pop
jne
inc
xchg
mov
aaa
pop
loop
xchg
jge
sub
cltd
sti
cltd
cwtl
inc
xchg
jmp
push
push
out
jae
adc
cltd
outsl
sbb
mov
pop
stos
xor
xlat
ljmp
lcall
sbb
ss
adc
cmp
jle
mov
sahf
xor
inc
jp
arpl
enter
cli
mov
or
mov
into
mov
std
pop
pusha
mov
movsl
adcb
or
push
ljmp
sub
push
outsb
out
xorl
mov
xor
cmpl
lds
mov
adc
and
fidivs
lock
lcall
lret
rcrb
adc
ljmp
cmp
fists
fs
hlt
or
cmc
test
shr
push
daa
imulb
inc
or
or
dec
or
jo
hlt
std
mov
test
pop
jo
mov
adc
jge
imul
cmp
jg
mov
and
add
movsl
cmp
or
pop
cmp
sub
inc
out
rclb
xor
int
hlt
int3
addb
pop
sub
cmp
repnz
mov
and
cmp
sbb
repnz
xor
mov
jb
cwtl
dec
jo
pop
jne
xchg
cmp
das
add
in
sti
mov
mov
mov
stos
xor
mull
lods
xchg
push
inc
imul
mov
cmc
push
movb
cmp
lods
inc
bound
mov
xchg
std
aas
movsb
pop
ja
jecxz
mov
dec
rcl
mov
movsb
adc
cmp
cld
mov
jo
inc
xchg
sbb
xchg
outsb
inc
stc
outsl
sbb
divb
and
nop
push
loop
imul
cli
leave
jmp
loop
add
movsb
negl
clc
add
sbb
and
fistpl
xor
inc
mov
inc
dec
sbb
push
inc
lods
lcall
cmc
and
in
adc
rorl
aam
hlt
icebp
xchg
je
stc
orl
cltd
lea
lods
sbb
sbbl
xor
mov
push
push
mov
call
aaa
jl
aam
lret
inc
xor
mov
or
jle
cltd
cs
sbb
push
or
xchg
pop
push
out
cli
in
movb
sub
pop
movsl
outsl
rcrl
and
aad
mov
pop
rcrl
loope
jb
adc
int3
sub
jl
cwtl
jmp
psrlw
add
push
mov
call
test
add
mov
lret
and
jno
xchg
sub
jecxz
mov
ljmp
mov
ret
sub
inc
and
loope
lds
stos
xchg
and
test
mov
insb
inc
dec
xchg
mov
jle
adc
dec
test
loope
and
pop
mov
push
jp
insb
mov
jne
jecxz
or
mov
insb
xor
jae
mov
out
in
mov
lea
jae
pop
and
add
loop
ss
inc
js
and
enter
lods
lea
shrl
pop
cmp
cmp
test
adc
mov
cmpsb
cmp
dec
and
mov
imul
jbe
cmp
movsb
insl
dec
mov
popf
mov
push
inc
pop
inc
inc
push
flds
mov
mov
ret
adc
es
mull
filds
loop
aaa
mov
jle
jg
arpl
das
cmp
bound
test
test
jmp
xorb
cmpsb
mov
inc
dec
imul
lods
inc
xchg
das
out
cs
mov
stos
pusha
add
iret
mov
mov
fdivrs
fnstcw
insb
sbb
sti
hlt
sti
add
in
and
jbe
ficoml
mov
stos
loope
hlt
mov
pusha
pop
sub
ret
cmp
inc
cmp
cltd
pop
inc
mov
outsb
je
enter
mov
shlb
cmp
adc
sahf
jne
dec
or
insb
and
inc
mov
loop
outsb
inc
cmpl
sub
inc
cwtl
hlt
leave
push
cs
into
das
push
pop
jmp
jl
mov
and
or
and
or
test
fs
jae
test
out
arpl
dec
cmpsb
pop
in
mov
mov
mov
lret
cmc
add
lret
dec
pop
subb
pushf
sbb
imul
jo
and
cmp
pushf
cmp
fs
inc
sbb
cwtl
out
dec
lods
sbb
mov
je
mov
bound
stos
addl
or
daa
ds
loop
mov
mov
xor
loopne
sbb
mov
push
bound
push
insb
test
fs
test
lods
inc
popl
arpl
xor
jb
insb
sub
inc
pop
pop
xchg
dec
cmp
scas
icebp
adc
inc
mov
addr16
cmpsl
cmovg
repz
jmp
fiadds
inc
loop
add
or
push
mov
push
jo
mov
mov
mov
jns
je
push
mov
ffree
sti
std
push
sub
push
mov
dec
xchg
out
clc
lahf
cmp
fidivs
pop
int3
stos
jbe
ret
pop
js
roll
jmp
pop
pop
in
std
in
hlt
in
sub
mov
xor
call
sbb
lea
imul
pop
inc
mov
ljmp
insl
xor
rolb
and
pop
jno
mov
fldl
lods
sub
fs
sbb
ja
jecxz
out
inc
pop
pop
notb
stos
add
aam
adc
ficoml
dec
push
or
rorb
sub
inc
xor
ret
adc
adc
repnz
push
pop
xchg
jo
adc
fwait
jle
outsl
xor
add
add
rcrb
sbb
stc
mov
sub
xchg
aam
add
std
int
pop
jp
dec
mov
out
mov
mov
out
cmc
pop
push
cmp
cmp
andb
in
xchg
push
ret
fcomps
mov
jg
dec
push
dec
mov
movsb
movsb
loope
je
pop
in
dec
sbb
add
inc
rcr
push
aam
cs
in
cs
js
out
xchg
scas
mulps
in
mov
and
pop
inc
lods
cld
aas
loop
movsb
and
loope
jbe
xor
xchg
jne
xor
xor
and
push
cli
test
cs
push
aaa
mov
negl
pop
arpl
loope
push
mov
push
sarl
jge
add
adc
sbb
sbb
dec
mov
xlat
sbb
lock
push
in
cmp
dec
pop
pop
dec
xlat
test
lahf
pop
sbb
arpl
xchg
sbb
mov
xor
data16
cmpsl
fs
jecxz
xlat
in
add
xor
pop
pop
js
arpl
pop
cmp
lods
inc
cld
push
sub
loopne
sub
outsb
subl
or
sub
cmp
insl
imul
fcoml
jl
jo
andl
jle
jne
iret
mov
cmp
add
cmc
movsb
and
push
in
xchg
mov
push
mov
mov
nop
mov
jnp
loopne
inc
xor
dec
jmp
fidivrs
je
mov
cltd
sub
or
adc
cmpsl
dec
push
bound
xchg
sti
pushf
mov
cmp
jns
xlat
and
stc
xchg
dec
push
test
inc
repnz
mov
mov
ja
dec
or
adc
push
and
stos
xchg
movsb
pusha
sbb
jl
dec
outsb
jl
inc
cltd
pop
les
pop
jae
sub
addr16
mov
xchg
int
fldz
or
test
pop
lods
mov
notl
outsb
sti
test
or
adc
xor
sahf
xor
cmp
dec
or
sub
sar
mov
cmp
sub
insl
sub
ret
mov
sub
out
test
cmpsl
stos
stos
dec
popf
and
aas
ljmp
outsb
rcrb
cld
mov
and
cltd
cmpl
rcr
test
lods
ljmp
arpl
fcompl
imul
pop
mov
dec
mov
sbb
adc
jno
push
jne
push
cmpsb
sub
outsl
ds
inc
lea
mov
call
adc
pop
ret
inc
scas
push
pop
or
push
aaa
lea
mov
outsb
aad
adc
rolb
push
xchg
xchg
mov
mov
outsb
int3
xchg
jg
fnstcw
push
test
mov
xor
popa
insb
mov
movsb
dec
mov
and
arpl
cmc
mov
cmpsl
sti
cs
clc
pop
xor
dec
shrl
lods
int3
pop
inc
cmc
subb
enter
jle
jecxz
cmpsl
inc
mov
xor
loope
aam
mull
xchg
and
std
in
pushf
jle
or
mull
sbb
sahf
fldcw
pusha
pushf
mov
jae
mov
push
addr16
cmp
aas
out
scas
and
fdivrp
hlt
cmc
cs
nop
add
cmc
jecxz
mov
call
inc
sbb
ret
jp
std
pop
cltd
xor
sbbb
cmp
mov
out
mov
pop
mov
mov
xchg
stos
adc
and
movsl
cltd
dec
adc
lods
pop
pop
cs
leave
cmp
cltd
out
pop
xor
mov
pop
sub
fisubrs
ret
sub
push
push
inc
lahf
mov
pop
loopne
lahf
mov
xchg
out
or
push
movsl
lods
or
mov
and
add
movsl
jae
test
cmpsl
out
lret
out
loope
aam
cwtl
cmp
arpl
xorl
adc
sub
push
imul
imul
xor
xor
and
in
ds
or
cmp
push
cmp
adc
xor
ficomps
pop
add
gs
and
xchg
cli
nop
rorb
mov
out
cmc
imul
add
lcall
sbb
add
and
adc
inc
add
mov
or
int3
lea
ds
mov
xor
dec
mov
push
jns
shll
int3
mov
sbb
js
addr16
daa
adc
dec
stc
push
das
mov
loope
leave
test
stos
dec
jo
fdivrl
mov
bound
xor
xor
xchg
outsl
call
cmp
dec
xchg
add
les
or
gs
adc
add
imul
fcoms
xchg
sahf
jge
jb
mov
pcmpgtw
adc
inc
pop
aas
fs
frstor
in
test
hlt
xchg
pop
outsl
rol
mov
push
loop
test
leave
popa
lea
insl
push
sbb
aas
dec
xchg
je
icebp
sub
push
xor
call
inc
sti
add
pop
pop
icebp
or
in
fsubrl
add
stos
dec
ds
mov
jge
mov
mov
ss
jno
fmuls
jle
add
mov
push
jecxz
pop
sub
insb
mov
ret
jmp
mov
movsl
dec
mov
inc
std
scas
sbb
dec
cwtl
ds
and
ss
jle
mov
xchg
push
bound
je
adc
or
mov
out
sbb
add
loop
cmp
test
dec
ss
push
push
cmp
fwait
sahf
xchg
fdivp
push
data16
clc
lds
sbb
pop
push
push
test
fidivl
push
lahf
mov
dec
push
insb
xorb
fistps
mov
pop
ja
test
xor
xor
dec
push
outsl
imull
adc
inc
clc
mov
rcl
cs
aaa
xchg
push
lahf
test
sbbb
inc
js
and
je
jge
popa
push
or
lahf
ret
mov
xchg
lret
sub
dec
iret
lret
ljmp
pop
jge
lret
mov
xchg
std
cmp
mov
iret
fdivr
int3
cld
aad
push
clc
mov
sbb
in
arpl
dec
icebp
movl
dec
adc
comiss
inc
das
push
aam
mov
fimull
mov
sarl
js
cltd
dec
inc
add
push
jnp
call
scas
sub
shrb
xor
mov
es
dec
xchg
in
aam
test
test
outsb
add
scas
bound
fsubs
sub
push
push
hlt
ret
inc
xchg
pop
sysret
and
outsl
fidivl
sbb
add
inc
cmp
xor
and
inc
ss
pop
jmp
jge
add
mov
jno
sub
popa
data16
xor
flds
push
stc
cli
mov
popf
pop
fistpll
cmp
pop
or
dec
out
sbb
pushf
nop
stc
add
xchg
repz
shlb
xchg
lods
sub
jecxz
push
add
inc
inc
fidivrl
loope
insl
aas
xchg
cld
out
imul
das
inc
imul
lods
inc
sbb
aaa
xchg
outsb
mov
dec
sub
sbb
adc
rcrb
loop
fidivrs
mulb
mov
push
ss
add
or
add
ffreep
and
test
popa
outsl
sbbl
repz
ss
daa
sub
test
dec
or
leave
dec
mov
add
mov
pop
cmpsb
xor
pop
mov
sub
mov
cltd
leave
sbb
imul
inc
sbb
cmpsb
mov
lea
or
push
out
js
fsubl
pusha
sbb
rolb
fucomi
push
out
rolb
cmp
movsl
push
lcall
add
fdiv
xor
cmp
cmp
es
and
lahf
std
ss
and
inc
ret
cmp
mov
arpl
and
lock
adc
mov
mov
jg
dec
mov
push
daa
ret
jno
add
sbb
sub
cmp
lods
ret
xor
inc
add
inc
mov
push
cwtl
xchg
pop
mov
enter
dec
test
pop
insl
out
xor
mov
dec
scas
outsl
jne
push
xchg
ljmp
fisttpl
or
vmwrite
shl
movsb
jbe
adc
popf
inc
out
dec
mov
add
inc
inc
inc
ss
adc
jbe
mov
jnp
in
jle
scas
inc
add
ficompl
cwtl
cs
add
mov
rolb
iret
and
cmc
shll
push
test
aam
movsl
in
xor
jno
cli
and
add
into
cwtl
rcl
iret
cmpsl
add
mov
in
mov
movsb
subb
dec
sti
push
out
dec
sub
inc
loop
pop
and
xchg
xor
push
mov
mov
int3
add
repz
xchg
cld
cltd
ror
cwtl
pop
jge
xor
daa
das
dec
jne
cmpsl
pop
lods
mov
mov
jmp
sbb
imul
aam
into
jno,pt
dec
mov
xchg
shll
std
mov
push
xchg
cs
pand
xchg
lret
xchg
push
frstor
or
mov
rcll
sub
imul
or
xchg
xchg
inc
xor
add
ret
jp
xor
mov
jae
pop
daa
push
aas
fcoms
push
mov
dec
in
mov
mov
arpl
push
in
or
cmp
nop
ss
mov
in
icebp
and
rcr
lahf
mov
jno
lea
mov
xchg
out
cli
jb
lods
cmp
dec
xchg
leave
fcoml
fadd
pop
insb
dec
cwtl
cmpl
xor
test
cs
fwait
and
repnz
pop
js
gs
sbb
popf
in
repz
cmc
stc
pop
inc
aam
in
cmpsb
lds
and
add
cmpsl
mov
pop
xor
jg
cltd
dec
add
add
inc
pop
dec
iret
xlat
or
xor
iret
js
mov
sbb
ljmp
add
adc
jl
pushf
shlb
push
popa
mov
xor
std
adc
and
clc
and
xlat
push
repnz
data16
mov
sub
cmp
sbb
shll
int
shrl
sarb
adc
cltd
in
pop
fs
mov
call
ja
imul
jg
sub
in
ret
sbb
insb
pop
lods
popa
shlb
xor
jno
cwtl
fwait
je
jnp
mov
repz
dec
xchg
mov
filds
xchg
mov
dec
xlat
sbb
repz
sbb
popa
pushl
outsb
popf
mov
and
ret
fimuls
shrb
and
add
aas
dec
shrl
xchg
popf
sti
lcall
jmp
lock
pop
jp
mov
call
mov
dec
lds
repnz
add
stos
mov
mov
in
adc
xchg
jns
int
outsl
dec
pop
sbb
fcompl
into
rsqrtps
push
mov
shll
mov
sub
js
ds
dec
inc
pop
and
push
inc
and
pop
cmc
or
jge
xrelease
mov
mov
ljmp
push
add
jns
adc
cmp
sbb
mov
lret
cmc
mov
lods
pushf
idivb
pop
mov
jg
loop
insl
dec
repz
subl
mov
add
xchg
enter
ja
lods
stc
push
cwtl
jmp
paddsb
jo
popa
push
shr
dec
je
xchg
nop
test
sbb
mov
cli
push
loope
int
xor
adc
xorb
test
pushf
mov
cmp
xor
jge
stc
fildl
popf
dec
pop
dec
cli
mov
mov
adc
pop
jae
jns
and
repz
xor
popf
lret
ds
mov
mov
call
add
xor
inc
cmp
dec
inc
mov
int3
decb
xchg
adc
mov
idivb
mov
clc
fs
pop
mov
xor
stos
notb
mov
inc
into
adc
mov
mov
pop
inc
mov
xchg
push
in
scas
ja
ret
sbb
jne
push
rol
jno
xchg
inc
dec
mov
call
inc
mov
mov
addl
xchg
xchg
push
fbld
dec
push
cmc
mov
mov
das
out
outsl
add
aam
dec
pop
pusha
popf
popf
cli
cs
sbb
pusha
sbb
testl
test
push
inc
fdivr
rclb
test
dec
mov
mov
adc
or
popa
int3
mov
stos
mov
mov
cmp
sbb
inc
jb
cmc
jne
mov
repnz
das
cmp
das
dec
and
xor
lock
jecxz
lcall
adc
jecxz
lock
ja
ret
xchg
imul
out
mov
sti
sti
push
xlat
sbbb
nop
adc
movsl
inc
movsb
test
cmp
xchg
nop
pop
adc
in
xor
pushf
sbb
xor
loop
fsubs
iret
dec
mov
out
int
sub
jae
mov
insb
sub
jp
xchg
cmp
mov
imul
bound
lahf
pop
pop
lods
int3
sbb
jno
adc
loope
mov
mov
mov
push
std
fs
or
arpl
rcrl
push
pop
sbbl
jb
or
je
xchg
xchg
sub
adc
data16
loopne
int3
xchg
mov
int3
dec
fwait
loop
cmpsl
adc
sbb
cmp
cmpsb
mov
cmpsl
mov
or
mov
pop
shl
cmp
inc
popf
mov
nop
mov
roll
inc
or
xchg
mov
adc
pushl
xor
call
mov
pop
rcl
lret
in
je
push
mov
pop
xchg
jne
fs
rclb
es
js
mov
mov
pop
mov
inc
hlt
pop
pushf
cmp
mov
pop
jns
inc
mov
scas
in
repz
xor
js
ss
xor
jns
or
arpl
cmp
jo
mov
rorl
loopne
ret
mov
cmp
jle
sbb
add
sbb
out
fs
fistpll
in
leave
idivl
sahf
pop
jo
push
mov
mov
dec
cmp
pop
pop
iret
les
lods
pop
inc
xor
repz
mov
loop
cmp
test
cmp
jne
push
cmpsl
sbb
ja
cmpsb
movsl
in
aam
dec
cltd
xlat
fmuls
fimull
sbb
stos
dec
loope
mov
xor
pop
adc
mov
fisubs
iret
rcl
cmpl
adc
and
mov
loope
xchg
mov
jae
xor
mov
lret
fiaddl
mov
stc
ljmp
xor
scas
fimull
dec
test
std
faddl
and
into
ret
jo
jae
test
loop
add
push
pop
cld
das
mov
push
inc
sub
sahf
add
fwait
or
add
mov
mov
xchg
pop
sub
sti
rorb
adc
rcr
test
inc
clc
rol
aas
mov
sti
shlb
jo
sub
and
pop
mov
daa
pushf
call
orl
lret
jle
loop
xchg
add
sbb
inc
stc
or
idivb
pop
orb
mov
divl
xchg
xor
sahf
mov
pop
je
or
gs
sbb
push
adc
jb
or
xchg
bound
inc
dec
pusha
data16
xchg
sbb
jl,pt
iret
cltd
add
mov
jae
ss
mov
xor
pop
mov
mov
das
mov
in
stos
mov
mov
pop
lods
xor
mulb
jne
lret
cs
xor
mov
pop
push
xchg
std
jbe
pop
xlat
mov
aam
sbb
out
ficoml
push
addr16
ret
pushf
int3
push
ljmp
es
push
mov
sti
into
jge
or
aas
sahf
mov
sahf
jmp
xor
call
dec
jae
push
sbb
inc
lahf
fidivrl
pushf
xor
pop
inc
stos
aam
or
je
xor
xlat
nop
cmp
icebp
or
sub
push
mov
sbb
mov
xchg
cmpb
lret
das
fdivrp
or
pushf
pop
stos
mov
or
call
fs
mov
insb
and
roll
sub
in
sahf
jbe
les
lahf
sti
out
adc
and
lret
jns
mov
and
icebp
orb
into
push
inc
xor
movsl
mov
in
mov
daa
cltd
jmp
sbb
pop
cwtl
pop
xchg
scas
fnstenv
js
mov
inc
xor
mov
in
push
pop
in
ja
inc
repz
int
daa
popa
pop
dec
insl
leave
js
loopne
enter
sub
mov
fnstenv
imul
adc
popa
push
cmp
lret
shr
xor
pop
or
int3
stos
loope
mov
sbb
push
pop
mov
and
add
sub
xchg
stos
rcr
push
outsb
cmp
and
mov
movsl
ja
pop
or
ror
cmp
mov
sbb
jp
add
or
out
push
addb
adc
stos
mov
push
push
shlb
iret
icebp
stos
cwtl
test
daa
mov
push
stos
sub
sbb
pop
mov
inc
inc
or
rclb
in
add
movsb
add
mov
je
mov
xchg
stos
lret
hlt
mov
mov
xor
in
xchg
add
insl
pop
sub
or
and
jne
iret
cmp
shl
push
lahf
mov
call
sti
sbb
xor
fsubrl
sub
aas
lods
call
xor
out
dec
adc
sbb
xchg
sub
inc
push
pop
rolb
sub
push
push
push
lret
dec
loop
in
mov
jnp
addr16
lret
push
jp
push
orb
int3
xchg
repz
push
ret
outsl
js
push
xchg
mov
ret
cmp
push
popf
inc
sahf
fidivrl
or
imul
jnp
lods
xchg
cmp
xchg
and
sub
repnz
leave
bound
idiv
jle
push
lret
or
aas
aad
test
je
popa
loope
gs
repz
dec
shll
orb
adc
f2xm1
inc
inc
jae
cmp
xor
adc
ficoms
repnz
cli
inc
data16
mov
mov
dec
adc
repnz
inc
pop
rcr
dec
push
mov
add
sbb
push
bnd
shrb
xlat
push
jecxz
mov
mov
pop
cld
cli
popf
mov
xchg
sbb
aas
fsubrs
xor
lods
enter
scas
cs
popa
aas
pop
add
inc
xchg
popa
sbb
push
adc
dec
icebp
sbb
in
cmc
aad
or
push
or
imul
inc
data16
in
sub
add
push
movsb
jmp
shll
mov
dec
loopne
add
push
pusha
leave
sub
push
imul
mov
push
out
sbb
loope
fdivp
adc
cmp
pop
jns
mov
push
dec
iret
mov
or
adc
jb
test
mov
imul
xchg
cltd
pusha
lcall
xor
mov
test
dec
xor
jmp
jnp
push
popf
or
mov
xor
in
lock
pop
fsts
jae
pop
or
push
cmp
test
loop
testb
fdivs
cmp
es
stos
out
out
jl
jns
cli
jb
mov
cli
push
jg
mov
faddl
cmpsb
jecxz
lcall
mov
jno
dec
adc
clc
and
xor
outsl
and
jl
dec
imul
push
je
ja
or
js
inc
into
nop
daa
ret
lcall
in
dec
or
lret
xchg
vrsqrtps
mov
lods
or
aaa
ret
jle
mov
mov
push
push
cld
cltd
aaa
in
loop
lcall
or
cmp
ljmp
iret
movsb
ljmp
cmpsl
sbb
xor
js
cmp
push
sub
shrl
std
popa
pop
adc
out
lret
pop
ds
mov
icebp
push
mov
in
fstpt
sahf
jmp
lock
mov
xchg
std
xor
lret
sub
aad
dec
cs
lods
mov
adc
sti
dec
xchg
outsb
and
arpl
sub
xor
cmp
lret
dec
mov
dec
add
or
testb
jecxz
push
jb
idiv
loopnew
dec
lods
xor
into
mov
xchg
sub
iret
add
push
mov
dec
sub
add
filds
lock
xorb
in
push
dec
mov
xchg
dec
int3
xor
pop
testl
inc
inc
push
in
ror
clc
addb
stos
push
into
test
cmp
jmp
and
sahf
jmp
xor
cmp
dec
popa
incb
cmpsl
nop
inc
mov
lret
aas
stc
sti
aam
cmpsl
xchg
aad
xchg
cmpsl
fisttpl
pushf
xor
movsb
fsubl
inc
xor
leave
adc
scas
cmp
sbb
adc
mov
inc
out
in
jg
xor
std
nop
ret
insl
ljmp
and
inc
mov
cld
or
cmp
es
shlb
test
push
leave
mov
push
push
stos
ds
push
inc
push
orb
mov
int3
nop
mov
push
sub
cmp
int
flds
test
or
hlt
lods
pop
icebp
filds
fcoml
mov
repz
es
scas
fs
repnz
jg
cmpsb
jmp
addb
sbb
push
inc
jbe
rolb
enter
mov
sub
inc
xor
mov
enter
imul
sbb
in
adc
mov
in
sub
mov
std
jl
ljmp
xlat
or
and
shl
arpl
sub
or
xor
pop
cmp
and
xor
nop
push
or
push
push
scas
aas
clc
in
cmp
sahf
or
lahf
sti
mov
jo
sub
inc
xchg
out
decl
nop
fucomi
xor
fst
sbb
mov
or
add
adc
mov
dec
loop
test
cmpsl
xchg
inc
clc
das
cmpsb
sub
pop
dec
iret
hlt
add
pushf
cli
push
pop
jg
xlat
fxch
mov
stc
push
xchg
pop
sti
aam
adc
outsb
in
lods
cmpb
cmp
and
nop
dec
cld
sub
mov
rcrb
push
pop
xchg
xchg
pop
div
add
std
adcl
movsl
adcl
push
addr16
imul
mov
lods
int3
push
inc
stos
fimull
xchg
scas
cmp
lods
shrl
mov
iret
mov
pop
aam
test
pop
lods
push
mov
sub
test
xor
mov
mov
mov
jae
mov
hlt
lods
cmp
je
jmp
in
clc
mov
push
cltd
push
nop
call
xchg
dec
jnp
adc
adcb
lock
adc
inc
or
jno
arpl
and
add
push
shrl
popa
push
iret
into
push
sub
and
movb
imul
jb
dec
out
pop
sub
lock
push
lock
cmp
jecxz
mov
jmp
gs
mov
loope
test
jne
mov
add
loop
pop
mov
divl
xchg
icebp
icebp
gs
push
push
jle
or
dec
scas
xchg
and
inc
pushf
cmp
xchg
adc
stos
aas
jp
inc
cmpsb
sbb
and
dec
add
jp
xor
addr16
xchg
dec
add
lcall
rorb
cmp
loope
adc
imul
and
push
pop
inc
sarb
or
push
dec
lea
popa
dec
dec
add
fsubrs
pusha
xchg
stos
xchg
mov
into
xor
cld
mov
lret
out
fnsave
rorb
test
call
nop
ret
or
aad
and
out
sub
insl
int
leave
popa
mov
add
sbb
mov
pushl
cmp
out
mulb
pop
xchg
sub
mov
jge
dec
jge
mov
inc
insb
in
adc
and
jmp
add
movsl
cmp
push
lds
mov
pop
jl
sub
push
cmp
sub
mov
xchg
repnz
sti
out
lock
pop
push
in
push
and
imul
inc
mov
popa
adc
mov
out
bound
mov
pop
int
mov
cmpsl
mov
add
jl
pop
iret
in
jp,pt
out
cli
pop
dec
pop
xorb
mov
sbb
negl
into
mov
aam
sbb
inc
out
fcoms
jp
mov
insl
imul
cs
xor
stos
adcb
xorb
stc
jecxz
sbb
push
repz
mov
out
rclb
inc
arpl
aaa
jae
xchg
pop
ficoms
test
pop
fnsave
gs
clc
xchg
sub
fnop
jb
adc
push
push
xchg
fxam
ret
cmp
jne
mov
rorl
sbb
jmp
in
jp
insb
lret
mov
pmulhuw
out
addr16
push
push
sub
or
call
movsl
cli
js
cmp
xchg
or
cmp
addl
call
orb
jae
dec
imul
xor
cmp
fs
inc
test
push
loop
test
mov
xor
push
sbb
rcll
fistps
xor
insl
pop
mov
test
xchg
sahf
xor
cmp
mov
js
inc
sbb
ljmp
and
clc
pop
and
jl
or
jae
sub
xchg
xor
ja
ss
adc
inc
pop
dec
adc
mov
pop
std
push
lret
adc
push
pushl
fwait
sti
ficoms
mov
lret
mov
shl
popa
dec
jb
divl
fxam
xorl
xchg
mov
xchg
cmp
je
jnp
aam
push
sbb
repnz
xor
lahf
fdivrs
push
imulb
es
mov
xor
jl
xor
mov
jg
and
sbb
bound
in
notl
pop
repnz
jl
dec
lods
xchg
push
push
test
pushf
lret
sub
pop
push
pop
idivb
insl
subb
inc
lods
shrl
or
test
jb
std
cld
mov
add
or
inc
sti
adc
jbe
sbb
cmp
mov
cmp
and
cmp
or
mov
jno
das
dec
cltd
xor
jbe
push
aam
push
dec
lods
loop
sahf
dec
ss
mov
shrl
out
cmp
mov
jb
inc
loopne
nop
xlat
sub
add
mov
inc
inc
lret
dec
out
out
in
jge
dec
sub
test
jg
fcompl
xor
xchg
lods
or
bound
pop
scas
pop
cmp
lods
leave
inc
outsl
fsubs
dec
mov
mov
out
mov
sub
setns
inc
lea
cs
and
cmp
aaa
imul
mov
push
daa
jmp
sbb
insb
push
ret
sbb
fsubl
insb
inc
mov
jno
lock
imul
add
xor
pop
outsb
dec
subb
lret
lahf
sbb
cmp
xchg
add
imul
pop
mov
repnz
imul
and
sbb
mov
nop
and
stos
daa
jle
jmp
ds
pop
add
decl
cmp
xchg
insb
sbbl
push
adc
lret
movsb
sarb
insl
mov
jno
jmp
adc
jg
xor
push
mov
negb
addr16
add
pop
lahf
es
outsl
movsb
jb
push
sub
and
and
int3
aad
pop
addr16
or
lret
and
dec
pop
xor
gs
outsl
xchg
cmc
das
loope
jnp
outsb
xor
adc
or
in
dec
sub
or
and
lods
les
insb
enter
xor
dec
jl
mov
pop
pusha
fidivs
test
jbe
inc
inc
pop
mov
inc
aaa
jmp
lcall
sub
pop
sub
popf
inc
xchg
sbbl
pop
nop
or
fcom
sbb
lea
sbb
and
fldl
sbb
clc
cmpl
cmp
push
mov
sub
jne
mov
adc
mov
and
dec
sub
xor
pop
xor
mov
incl
call
dec
cmp
stos
xchg
jbe
clc
ret
or
lds
out
loope
inc
shlb
push
or
xor
push
idiv
xor
nop
and
dec
lds
xor
int
and
lret
mov
or
push
stos
push
pop
das
push
clc
int3
xor
xchg
add
inc
cld
cmp
lock
mov
dec
mov
xchg
fcomp
dec
test
aas
xor
stos
sub
mov
sub
cmp
and
jns
sbb
sbb
adc
sahf
sbb
mov
es
arpl
push
test
push
jbe
pop
adc
call
jecxz
and
push
cmp
cmpsl
cmpsl
mov
in
movsb
sub
call
push
inc
nop
sub
xor
dec
sbb
mov
imul
inc
pushf
inc
push
rcr
jmp
xchg
push
in
lret
cs
lret
inc
lcall
mov
fbld
jno
stos
push
dec
repnz
ret
xchg
test
jecxz
es
loop
mov
in
aam
mov
mov
cmp
dec
clc
scas
pop
fld
xchg
adc
push
lds
adc
cmpsb
xor
repz
xor
push
mov
push
xor
cmpsb
mov
add
sub
and
sbb
cs
mov
call
lcall
int
orl
imul
outsb
xchg
stc
inc
sbb
mov
push
cmp
fcmovnb
incl
cwtl
dec
add
xorb
push
pushf
cltd
cmc
xor
jge
adc
gs
or
pop
in
mov
popa
ja
xchg
jb
data16
insl
jae
add
les
test
xor
jmp
push
outsl
andb
and
sbbl
jae
enter
js
inc
mov
push
push
or
filds
test
add
ret
icebp
lcall
adcb
scas
ljmp
lods
cmpsl
push
cmp
inc
push
jbe
jae
pop
in
aaa
out
mov
sub
popf
sub
jo
sub
xchg
xchg
jecxz
clc
inc
sbb
adc
mov
and
repz
and
sbb
shlb
xchg
push
push
add
fs
pop
dec
xchg
jmp
std
lods
mov
pop
fsubl
fsubl
pusha
ret
inc
mov
inc
sbb
test
fisttps
push
sar
sarl
sub
xorb
int3
adc
xor
popf
sub
iret
loop
sahf
mov
test
dec
testb
hlt
and
add
lret
arpl
add
fists
int3
jmp
adc
rol
arpl
pop
pop
and
out
in
in
popf
dec
mov
xor
jle
fwait
enter
dec
icebp
xor
fs
jmp
xor
jg
outsb
cmp
jo
add
ss
inc
outsb
mov
addb
and
adc
out
out
cli
mov
fsub
js
daa
inc
mov
jl
add
dec
bound
cmp
fwait
test
in
movsb
jecxz
dec
or
loop
jle
mov
pop
fdivrs
and
mov
enter
lcall
jne
mov
mov
add
jo
dec
call
jmp
inc
push
data16
mov
and
inc
repz
push
clts
xchg
insb
xor
stc
cmp
mov
incl
testl
sbb
push
aad
test
pop
loop
pop
aad
and
scas
lcall
orl
mov
xor
in
sbb
sbb
jmp
pop
scas
adc
inc
ret
rol
lods
ror
stc
addr16
mov
fcomp
icebp
xchg
hlt
fildll
aad
sub
xor
lds
aad
fimuls
repnz
nop
push
jns
push
push
mov
mov
clc
adc
jne
xor
outsb
sbb
mov
mov
rcrl
icebp
mov
xchg
subl
xchg
clc
imul
pop
mov
mov
ja
lret
inc
nop
cltd
js
insl
das
rorb
cli
dec
ljmp
push
jno
pop
xchg
inc
mov
call
add
jl,pn
mov
cmp
test
inc
in
js
fbstp
mov
mov
push
ret
xorl
xchg
mov
int3
or
loop
lret
pop
fnsave
test
lock
and
jbe
jo
bound
aas
xchg
sbb
pop
fwait
leave
or
mov
xlat
add
pusha
icebp
call
addl
mov
ret
and
insl
dec
inc
push
data16
sbb
test
outsb
jle
cmp
ja
add
stos
cmp
push
iret
ret
scas
and
call
test
push
in
and
daa
arpl
loop
adc
in
dec
jle
adc
test
movsb
addr16
pop
negb
and
xor
xor
dec
lock
or
das
cmc
bound
cld
mov
pop
jb
ja
sub
inc
xor
pop
hlt
xchg
cmp
jmp
xor
push
int
push
push
lahf
out
orb
add
call
fwait
cltd
ds
negl
dec
add
nop
and
adc
jge
mov
push
push
imul
test
fbstp
or
cld
mov
imul
cmp
imul
fisubrl
repz
aad
dec
mov
xchg
xchg
add
xchg
ret
mov
mov
outsl
addr16
repnz
cmp
pop
pop
cwtl
sbb
push
inc
sub
xchg
repz
pusha
mov
cmp
into
jp
mov
out
scas
jmp
shlb
in
inc
jmp
pop
mov
mov
mov
aaa
ss
cltd
in
inc
jg
xor
lea
stc
xlat
xchg
stos
fdiv
xor
mov
paddw
into
loop
jp
mov
inc
push
adc
in
cmc
scas
movsl
mov
mov
fcomps
inc
mov
enter
shll
fcomps
aas
mov
and
add
mov
loopne
inc
sbb
pop
sbb
jp
sub
out
outsl
gs
dec
inc
mov
pushf
test
in
sti
icebp
int
pop
outsb
jle
aam
jae
sahf
mov
enter
sub
pushf
xor
out
jbe
pop
mov
leave
xor
jo
cmp
aas
jp
or
pop
push
pop
mov
jg
jne
fstpl
mov
imulb
cmpsb
jb
clc
push
in
pop
rolb
add
nop
lea
xlat
jmp
rcrl
push
mov
mov
enter
mov
ret
fstp
cltd
pop
cld
out
mov
cltd
aaa
lods
clc
fisubl
xchg
enter
leave
xorl
jl
jns
out
lds
repnz
jge
xor
cltd
cltd
pusha
cwtl
std
dec
mov
cmc
lret
xor
out
enter
in
popf
push
stc
dec
out
push
add
push
ja
jg
push
cmpsb
icebp
sahf
subb
ljmp
cmp
fisubs
outsb
adc
xor
cmp
pop
pop
cld
shl
lcall
rorb
hlt
jmp
pop
mov
out
lret
jge
xchg
cmp
pushl
testb
enter
mov
mov
xchg
dec
push
jo
or
xor
nop
js
mov
into
sub
sbb
pop
enter
mov
out
cwtl
mov
mov
dec
lcall
mov
jo
test
dec
in
das
xchg
xchg
inc
lcall
or
cmpsl
repnz
push
dec
xlat
lret
dec
push
cmpsl
mov
loopne
add
lods
inc
mov
xor
cmp
and
mov
enter
arpl
test
dec
lock
rol
add
pushf
sub
into
sbb
out
rcr
lcall
dec
inc
jl
sub
clc
ret
sub
mov
imul
lods
xchg
mov
das
push
repz
push
test
lods
xlat
push
int3
rclb
out
pop
loop
or
arpl
cld
rcr
cmp
xchg
and
fsubs
jecxz
sbb
jne
sbb
int3
jmp
jecxz
mov
aad
adcl
aad
xor
daa
pusha
fidivs
rolb
mov
jno
repnz
popf
shl
mov
mov
sub
mov
int3
xor
dec
mov
jmp
lret
or
scas
sub
clc
add
adc
cmc
push
aaa
enter
clc
push
push
jp
push
and
jae
add
dec
push
cs
out
push
lods
mov
mov
push
adc
adc
dec
mov
js
cmp
mov
mov
aam
dec
jae
dec
idiv
jmp
popa
aam
lock
int
cli
xchg
pop
out
push
mov
popa
xor
shll
pushf
stos
inc
mov
rolb
inc
pushf
sbb
test
fstpt
xor
push
pop
xchg
mov
sti
out
loope
push
adc
sbb
cld
sahf
inc
inc
cli
sub
call
and
sub
push
push
pop
jl,pt
int3
fwait
cmc
cmp
ljmp
rclb
sub
rcl
ja
js
mov
imul
jecxz
dec
sbb
cld
int
je
int3
pop
jae
push
xchg
int
pop
push
subl
std
shlb
stc
inc
cmp
inc
xchg
xor
mov
fildll
jnp
enter
dec
rorl
xchg
das
add
lcall
inc
pop
pop
and
sbb
aad
fcoml
loope
ljmp
decb
cltd
sbb
fsub
jmp
pop
xor
jbe
clc
test
pop
push
add
rclb
mov
das
adc
push
dec
pop
xchg
jae
xchg
mov
in
jle
jne
mov
rorb
adc
lds
fs
popf
and
ret
lret
nop
inc
das
enter
adc
or
jb
xor
imul
int3
iret
add
jb
fs
popa
xchg
xchg
dec
or
jnp
push
cltd
bound
sahf
ds
pusha
jns
enter
in
adc
add
inc
inc
movb
xor
cmp
pop
lock
or
cli
stos
dec
test
add
pop
jecxz
mov
ret
xor
dec
cs
dec
pop
inc
push
and
arpl
jl
xchg
jns
in
cmp
mov
leave
and
mov
leave
mov
aad
cmp
and
push
sub
mov
cmc
sbb
push
roll
aam
repz
ja
and
pop
and
lods
mov
jbe
nopl
clc
inc
dec
movsb
sbb
fistpll
pop
inc
jb
out
or
mov
leave
xor
scas
dec
inc
out
xchg
adc
pushf
mov
mov
or
mov
in
int3
xlat
ret
mov
sbb
lods
or
std
jae
ss
pusha
roll
cmpsl
or
sbb
add
loope
les
xchg
dec
sbb
add
les
test
clc
pop
stc
pusha
jg
lret
shlb
outsb
xchg
jnp
and
xlat
mov
frstor
inc
testl
je
popa
mov
xor
dec
addr16
xchg
push
add
ds
push
mov
frstor
inc
mov
test
out
scas
sub
pop
push
lcall
sbb
mov
jle
xor
sahf
xchg
xchg
adcl
inc
mov
stc
mov
repz
addr16
insb
ljmp
outsb
aad
cmp
out
jp
cmp
cmp
jae
es
jg
es
stos
sahf
jge
aaa
ds
cld
push
aad
mov
inc
or
or
xor
rep
insl
dec
roll
mov
stc
sbb
or
and
das
mov
rorl
jecxz
test
sbbl
inc
push
dec
or
imul
fdivrp
xchg
das
es
mov
adc
pop
xor
loopne
mov
adc
sarb
mov
push
pop
ret
jg
push
arpl
cmp
data16
add
and
push
add
in
dec
insb
pushf
out
aad
into
jmp
push
rcll
movsl
add
xchg
ror
inc
mov
int3
insl
sub
adc
mov
movsb
xchg
dec
mov
pop
mov
mov
inc
mov
scas
mov
or
lods
test
pusha
lock
and
addb
js
push
push
pushf
je
inc
adc
mov
lods
cmp
call
xor
das
cld
pushf
stos
push
mov
and
loopne
aam
dec
jg
mov
pop
ja
cmp
cmp
into
push
hlt
and
call
add
jbe
rcll
push
int3
cmpsl
ret
in
xchg
ret
jne
push
pop
pop
dec
jnp
jbe
xor
cmpsl
xor
stos
mov
imul
cltd
mov
nop
adc
stc
xor
sbb
aaa
jle
sbb
sbb
push
adc
and
push
incl
pop
jmp
dec
xor
or
sub
js
mov
pop
mov
stc
dec
pop
aaa
fisubrl
adc
mov
mov
pop
ret
pop
xchg
xlat
jle
and
xor
ja
movb
hlt
adc
or
aas
dec
adc
sbb
lea
fwait
sbb
mov
cmp
cltd
lret
mov
es
sar
hlt
pop
sti
jns
cmp
cmp
cmp
shrb
add
add
or
jecxz
mov
push
inc
sbb
adc
testl
ret
fsts
sahf
rcr
adc
stos
dec
push
leave
inc
mov
xchg
sti
cmp
xor
aas
mov
ss
inc
imul
movsb
cmp
call
ds
in
jp
push
bound
in
xor
into
dec
mov
je
xchg
jne
std
repnz
loopne
pop
jnp
mov
es
or
stos
xor
push
es
pop
add
mov
mov
push
addr16
xor
popa
push
cs
mov
mov
add
dec
cmp
inc
jnp
je
lret
in
ljmp
aam
lock
or
popf
sahf
fiaddl
adc
iret
je
push
push
aas
mov
pushf
xchg
sbb
xchg
xchg
dec
and
repz
jge
popf
fwait
dec
loope
add
aas
mov
sti
cmp
les
sbbl
daa
add
push
adc
orl
pushf
adc
scas
cld
dec
shll
pop
push
pusha
cld
jle
jno
stos
jmp
jbe
lret
out
outsl
mov
xchg
fildll
in
xor
hlt
sbb
jle
adcb
std
jns
leave
add
adc
inc
inc
adc
xchg
scas
cli
sub
test
sti
inc
test
or
cmp
sub
popf
mov
lea
push
ja
jnp
test
mov
call
lret
insb
jmp
imul
cmp
enter
add
push
mov
and
insl
add
in
push
mov
imul
add
int3
and
jmp
lods
ja
or
int3
push
dec
mov
imul
or
mov
lret
dec
jle
jg
mov
insb
lock
jle
xchg
lods
mov
mov
push
pushf
lods
jg
cmp
or
movsl
cmpsb
fcoml
add
dec
es
pop
icebp
add
pop
xor
mov
fildll
test
add
fmul
xchg
leave
xchg
and
cli
mov
adc
pop
or
xchg
ds
ret
or
fwait
mov
mov
pause
cmp
push
jo
nop
call
cli
pop
fildll
inc
or
lods
arpl
and
outsl
mov
mov
sbb
fiaddl
or
cmp
cmp
push
dec
cld
xchg
dec
add
dec
mov
and
and
xchg
jge
sbb
in
mov
aam
dec
inc
xor
stc
sbb
hlt
and
mov
mov
and
ljmp
stos
cwtl
dec
int3
inc
testl
js
lret
test
mov
xchg
inc
jae
xchg
push
icebp
dec
mov
mov
stos
dec
xchg
cmp
or
bound
incl
shrb
push
push
add
rcrb
ja
jbe
fcoms
jns
cwtl
sub
xchg
sahf
out
mov
add
in
pushf
adc
stos
ret
adcl
insl
jnp
ss
scas
sar
mov
dec
mov
mov
sub
outsb
sbb
test
jne
and
mov
mov
xchg
sti
xchg
xchg
xor
lods
ljmp
mov
adc
push
dec
lahf
mov
pop
mov
cmpsl
loope
scas
cmp
xchg
pop
mov
dec
test
lods
cwtl
dec
mov
push
dec
jnp
inc
test
adc
icebp
mov
lds
js
aas
pop
popf
or
pushf
imul
sti
fsubrl
xor
test
dec
jb
addr16
jno
cmp
add
popa
fsubs
fmuls
or
mov
or
add
ret
shll
jno
xchg
and
lcall
stc
xor
imul
aas
out
scas
jne
in
pmaddwd
pusha
adc
adc
sub
add
mov
dec
pop
inc
xor
ja
push
jmp
lock
ljmp
xchg
cli
jnp
cmc
push
jge
stos
and
fnstcw
lods
jle
jno
push
sti
dec
in
sbb
test
adc
xlat
or
out
jl
out
imul
mov
push
daa
mov
mov
adc
push
jbe
push
inc
lret
daa
outsl
and
adc
adc
add
pop
mov
sub
add
add
mov
xchg
pop
jno
ret
inc
sub
push
stos
mov
jno
dec
stc
lock
andb
enter
pushf
dec
pusha
scas
adc
test
sbb
rcrl
inc
cltd
add
sbbb
je
lahf
push
adc
cld
xlat
cmp
jne
ret
jnp
lods
loop
insl
add
daa
test
sbb
inc
push
mov
adc
or
inc
int3
inc
cmpsl
ss
out
cwtl
hlt
mov
jb
or
xor
jle
dec
lcall
mov
jbe
fcoms
pushf
push
cltd
mov
xchg
aaa
add
or
add
sahf
in
xor
pop
xor
mov
fnstsw
xchg
cwtl
inc
and
cwtl
adc
cmp
enter
ret
cmp
pop
xchg
scas
or
in
shll
jns
repz
xchg
mov
sahf
hlt
lcall
or
fadds
inc
and
inc
insl
push
out
mov
pop
scas
dec
inc
pop
or
xor
sbb
or
sbbl
roll
pop
push
iret
aaa
sub
push
lods
cmp
andb
push
sub
in
scas
cmpsl
inc
add
add
mov
das
add
dec
cli
mov
gs
sub
cltd
aad
call
adc
mov
pop
sbb
jnp
push
sbb
pop
lea
sub
cmc
pushf
xor
sub
dec
push
out
jbe
inc
outsb
addl
pop
push
mov
pop
xor
cmp
repnz
lea
cmp
pop
addr16
leave
idiv
std
xlat
inc
jmp
add
push
xor
lret
xor
adc
out
dec
pop
test
test
mov
movsb
sub
mov
sar
cmp
mov
stos
cli
aam
fwait
loop
mov
xchg
and
iret
insl
and
inc
mov
aas
in
filds
clc
imul
sub
sbb
adc
inc
mov
pop
fsts
and
ror
jne
decl
sub
add
leave
fcoms
scas
mov
inc
mov
das
scas
je
sbb
push
repz
aad
lret
insl
lcall
xchg
pop
lret
jge
fwait
jg
sbb
and
adc
jo
mov
das
jno
cmp
xor
inc
xlat
jo
cmpsb
mov
enter
out
jo
test
mov
adc
mov
sarl
mov
imul
xchg
sbb
hlt
lahf
pop
push
repnz
andnps
pop
xchg
dec
cmp
push
mov
pop
xor
pop
cwtl
cmp
lock
in
pop
mov
cmpsl
adcb
test
push
sub
fisubl
adc
ljmp
jmp
mov
das
imul
mov
test
or
mov
ljmp
mov
push
cld
push
xor
inc
add
xchg
sbb
mov
in
hlt
add
dec
outsl
pop
notl
mov
call
loop
fsubl
lret
int3
push
out
xor
dec
push
dec
sbb
cmpl
mov
or
dec
movsb
jecxz
je
ja
xchg
fs
cli
jle
mov
sub
dec
jnp
aad
xchg
and
lods
loopne
aaa
or
dec
mov
test
pop
lret
jns
loop
mov
pause
es
and
lret
loop
orb
fiaddl
test
pop
ret
dec
jo
incb
out
mov
test
imul
loope
mov
xchg
jne,pn
pop
jb
mov
popa
mov
xchg
cli
jo
test
jnp
pop
pop
mov
fimull
lock
ret
sbb
xchg
push
je
js
mov
movsl
mov
add
xor
orb
loopne
loopne
xchg
lds
ret
in
inc
mov
jo
jmp
sbb
lgs
test
mov
ljmp
dec
dec
pop
xor
pop
lret
cmp
add
lods
cmpsl
xor
lcall
sti
enter
pop
ja
mov
mov
lret
push
xchg
jno
dec
sti
mov
gs
hlt
add
sub
rorb
sub
lock
mov
push
push
arpl
hlt
dec
mov
es
pop
les
xchg
loope
dec
mull
data16
or
push
lret
adc
inc
bound
js
movsb
cltd
pusha
outsl
push
and
std
mov
or
jg
xor
aaa
ss
lock
and
xchg
ds
sbb
cld
int3
ss
add
mov
out
sbb
and
enter
inc
dec
push
adc
int3
sub
mov
out
loop
ret
insb
cs
adc
insb
fnstsw
nop
xor
xchg
add
sbb
stos
insl
lea
jo
bound
xor
jl
adc
insb
cwtl
push
cwtl
repz
les
imul
jp
sbb
das
mov
mov
enter
cmovg
lods
out
notl
out
ja
cmpsl
xchg
rcrb
jl
cmp
popa
xchg
xchg
jmp
cmpsl
xchg
ficomps
arpl
mov
push
xchg
outsb
test
test
fcmovne
pop
mov
mov
enter
inc
add
gs
incb
xchg
adc
fstps
xorb
push
fidivrs
sbb
xor
clc
jmp
and
pop
sbb
lock
call
mov
cmpsl
fsub
mov
pop
into
adc
fucompp
xchg
aaa
xor
cmpsb
aas
out
or
cmpsb
fld
mov
and
lret
xor
xchg
mov
sub
inc
out
and
cltd
and
imul
pusha
sub
insb
pusha
pop
das
ret
out
leave
mov
loopne
mov
outsb
fs
loopne
jns
xor
push
or
add
mov
js
and
mov
sahf
adc
call
pop
cmp
cmpsb
pop
pop
and
and
rcrl
insb
jge
pop
dec
mov
mov
pop
xor
leave
mov
repz
arpl
cltd
ljmp
xchg
inc
sub
cmp
ret
mov
sub
push
and
jbe
fstl
and
sub
adc
out
adc
cli
and
adc
jp
cli
fstps
mov
scas
jae
sub
xor
movsb
mov
mov
lea
lret
mov
xor
jne
push
daa
movsl
inc
scas
repnz
sub
bound
dec
fs
dec
icebp
mov
fucomip
ror
icebp
or
add
orb
jp
test
xchg
lcall
xchg
xorl
gs
in
ja
out
in
inc
fwait
lret
cwtl
in
xchg
iret
xchg
cbtw
pop
push
in
jb
dec
and
xor
sbb
ret
outsl
sahf
mov
and
push
mov
xor
nop
cmpsl
mov
clc
sbb
inc
es
or
mov
inc
mov
and
dec
inc
imul
jo
mov
or
sub
fld
xchg
stos
sub
loopne
cmp
out
mov
or
mov
fadd
stos
fldenv
push
add
xor
insl
jl
adc
add
xchg
jg
inc
push
mov
cs
loop
loope
inc
repnz
cmp
and
mov
aam
inc
scas
cmpsl
push
sbb
adc
mov
add
sub
rcll
cmpl
mov
sub
movsl
lahf
mov
sub
cmp
out
rolb
icebp
pusha
cmpsb
iret
outsl
add
repnz
or
dec
leave
imul
je
mov
sub
sub
rolb
mov
dec
out
push
arpl
ljmp
or
add
ret
adc
push
sbb
repz
imul
push
xchg
cmp
scas
and
pop
jns
repz
mov
out
push
cmp
lods
cmp
ss
jle
inc
lods
jo
inc
ljmp
loopne
sub
pop
das
jb
dec
cmp
push
mov
push
adc
sub
dec
xchg
popa
xor
jmp
push
push
mov
inc
sbb
and
push
mov
addr16
test
and
fisubl
xchg
inc
ret
test
fdiv
fimull
in
push
fstpt
dec
cmc
jae
sbb
mov
xchg
add
jmp
jp
cmp
int
push
sti
in
sbb
xchg
dec
gs
jmp
adc
push
sbb
adc
lods
push
nop
test
addl
fcoml
jo
mov
sub
ret
push
inc
jecxz
subl
movsb
fistps
jecxz
call
into
enter
lods
loop
repz
lcall
das
jno
xchg
push
test
mov
or
outsl
sahf
js
mov
push
lock
in
clc
sbb
add
or
adc
jae
mov
pop
cmp
std
mov
cmpsb
push
in
pop
out
lods
ja
movsl
mov
add
dec
adc
push
add
jge
stc
xor
enter
cmc
arpl
sub
movsb
sbb
fwait
subb
adc
shl
test
and
sbb
movsl
pop
insb
insb
push
and
leave
popf
mov
xorl
or
fstps
xchg
jbe
out
mov
and
xlat
or
outsb
fcomps
nop
mul
daa
jne
test
sbb
push
mov
cmc
pop
push
lods
jle
push
jns
xor
dec
dec
sub
inc
in
call
cs
popl
xchg
push
sbb
nop
push
popf
dec
sti
xor
lods
es
ret
aas
cmp
ss
jno
in
pop
stos
jle
scas
out
test
dec
leave
sti
cmp
sub
loop
jecxz
inc
lahf
xchg
and
aam
in
inc
out
inc
jecxz
fwait
jb
push
arpl
jo
jae
push
mov
rclb
add
fildl
cmp
xchg
shrl
fucomi
mov
mov
mov
cmp
sub
mov
dec
xor
repz
pop
out
in
sbb
sub
les
cmp
inc
pop
loopne
jnp
push
out
xchg
dec
movsb
aam
dec
mov
push
pop
inc
jle
add
sti
aas
and
stos
repz
lock
cmp
ret
jge
xor
outsl
mov
cmpb
inc
or
pusha
push
std
xchg
test
or
movsb
xchg
push
sbb
std
cmp
or
and
push
push
ljmp
repz
idivl
ja
or
jbe
bound
ja
mov
or
shlb
sbb
dec
fdivl
lods
xor
ret
xorl
lret
jl
sbb
leave
jle
add
jp
jp
sbb
shll
sub
icebp
popf
inc
sbb
xor
push
mov
push
dec
inc
fs
mov
cmp
jo
mov
insb
inc
je
gs
add
fidivl
and
fdivrl
dec
mov
mov
mov
data16
stos
in
jecxz
dec
das
sti
sbbb
mov
sub
scas
xchg
imul
cltd
jge
lock
mov
aaa
fdivr
cmp
lds
pushf
insb
or
lcall
push
push
xor
mov
sbb
sarb
outsl
mov
shl
aam
sbb
cmp
mov
les
cmpsb
lcall
mov
adc
adc
adcl
mov
icebp
lods
nop
adc
mov
aad
in
rol
and
rcr
shr
out
imul
inc
dec
jns
in
adc
insb
jg
or
adc
cld
dec
shr
cmc
or
mov
dec
mov
cmc
or
jge
mov
xchg
pop
lock
sub
fidivrl
mov
sub
push
cmp
xchg
dec
pop
or
push
pop
or
xchg
add
pop
or
mov
pop
or
ljmp
add
pop
or
mov
pop
or
sbbb
pop
or
dec
pop
or
push
pop
or
mov
or
add
add
mov
add
andb
add
add
add
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
dec
add
add
add
insl
dec
add
insl
dec
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
js
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
jl
add
jp
add
incl
add
add
jle
add
add
add
incl
add
add
jg
add
add
add
incl
add
add
orl
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
xchg
add
add
incl
add
add
mov
add
add
incl
add
add
mov
add
add
incl
add
add
mov
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
mov
add
incl
add
add
dec
add
add
add
mov
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
dec
add
dec
add
add
add
int
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
dec
add
add
add
add
dec
add
dec
add
add
add
fmuls
fmuls
incl
add
add
add
scas
loop
add
add
add
add
add
dec
add
add
add
push
jmp
dec
add
jge
add
jl
add
jl
add
incl
sti
dec
add
add
add
incl
add
add
decb
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
decl
add
adc
dec
add
add
add
push
push
dec
add
push
dec
add
add
add
aas
or
inc
or
mov
or
incl
add
add
or
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
gs
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
