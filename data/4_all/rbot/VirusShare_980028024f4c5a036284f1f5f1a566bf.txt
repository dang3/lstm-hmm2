dec
out
sub
imul
adc
sbb
mov
jmp
jne
or
pop
pushf
and
xlat
push
cwtl
push
icebp
sti
stc
cmpsl
pop
sub
push
test
mov
and
cltd
ja
adc
jbe
mov
roll
hlt
inc
inc
rclb
inc
pusha
out
shl
mov
xchg
xor
aam
or
dec
xchg
push
addb
jp
icebp
adc
test
hlt
mov
mov
xor
int3
sbb
xor
iret
xor
dec
add
mov
pushf
fincstp
xor
cs
jne
lahf
mov
mov
xchg
in
jp
adc
leave
jbe
das
loopne
lock
test
jne
add
mov
cld
sub
pop
arpl
push
imul
fadds
movsl
fistpl
mov
mov
mov
test
xchg
ds
pop
mov
and
in
jmp
std
jg
shrb
cmp
dec
mov
test
std
dec
xlat
scas
mov
dec
pop
hlt
das
jae
xchg
mov
xor
sarl
push
negl
repz
mov
loop
cmp
insl
flds
test
leave
or
jmp
push
subl
jno
stos
and
mov
out
jae
mov
xchg
or
imul
sub
je
dec
repz
mov
lea
into
sbb
cmp
jb
or
test
push
add
mov
lods
xchg
adc
inc
pop
mov
mov
outsl
ljmp
pop
push
std
jbe
sahf
cli
es
xchg
inc
int3
xchg
test
jmp
in
xchg
cld
rcr
mov
fcomi
push
inc
ds
test
mov
cld
lret
push
in
fs
mov
pop
add
cmpsl
sbb
mov
xorb
add
adc
in
push
xlat
stos
out
jo
das
jbe
and
push
enter
add
adc
mov
pushf
mov
cmp
pop
test
out
jecxz
jae
roll
adc
pop
out
and
stos
mov
in
jg
in
popf
mov
es
aam
mov
fucomip
sbb
pop
in
sub
lahf
scas
hlt
sub
add
jo
cmp
cmp
jg
int
lds
or
ds
dec
shll
nop
mov
loop
or
sbb
push
lcall
add
lahf
cmp
adc
mov
xchg
pop
jo
pop
test
orl
add
sarl
xor
fucom
dec
cs
and
rolb
cld
lcall
xor
adc
sub
push
pop
rcrb
les
sub
push
loope
sbb
mov
jle
jle
negb
cli
lea
mov
fbld
xchg
mov
sub
subl
pop
mov
sbb
xchg
outsb
jnp
aad
jp
notb
popl
in
push
pop
repz
push
bound
and
cld
mov
fsubr
ja
pop
xchg
out
jae
cmp
popf
jge
aas
jl
push
insl
fnsave
pop
data16
and
cmp
xchg
push
out
test
push
push
push
rep
jne
shl
pop
sub
rorb
cli
push
push
push
in
mov
andl
push
adc
aaa
mov
xor
jo
jmp
fsubrl
inc
in
sbb
xor
cmp
and
movsl
push
sbb
pop
ljmp
clc
add
out
mov
ret
or
pop
cld
mov
dec
loope
das
das
cmp
mov
lcall
push
imul
xchg
out
pop
movsl
xchg
ret
dec
dec
jl
xor
lods
dec
sbb
les
mov
enter
xchg
xchg
fucomi
jns
loope
int
repnz
leave
push
cltd
testb
sub
lahf
push
lods
adc
jmp
insl
and
pusha
lods
or
mov
data16
xor
push
ja
jecxz
mov
fisubrs
xchg
aam
sub
pusha
push
shlb
mov
pop
add
shll
pop
outsl
jl
cmpsl
xchg
aam
mov
pushf
lds
inc
mov
add
repz
cltd
xchg
stos
lcall
ret
dec
jmp
xchg
cmp
add
lods
inc
mov
aas
cmpsl
cmp
adc
stos
push
jecxz
jle
xor
insb
das
jmp
inc
push
js
mov
dec
daa
add
out
je
inc
mov
sbb
loopne
ds
jle
rcr
mov
daa
cmp
and
xor
pop
mov
mov
push
jnp
mov
push
xchg
push
pusha
mov
inc
adc
hlt
push
cmp
mov
sti
mulw
pop
arpl
mov
mov
cwtl
mov
dec
add
loope
lcall
sahf
dec
test
cltd
lret
clc
lfs
jmp
mov
dec
xchg
iret
cmp
xchg
out
jno
mov
int
jne
int
xor
and
lret
mov
loopne
rcrl
inc
insb
jne
pop
jle
mov
jge
cli
xchg
int
imul
sahf
fiadds
push
call
pusha
pop
adc
enter
movl
aam
sub
or
cmp
ret
stos
adc
or
mov
push
and
add
and
mov
sub
mov
xchg
xor
cmpsl
mov
xor
jae
aam
outsb
nop
add
mov
pop
mov
xchg
push
outsb
jmp
push
mov
dec
pusha
lahf
in
shlb
mov
pop
inc
xchg
jl
adc
inc
lock
mov
icebp
jnp
subl
rorb
mov
and
or
jle
je
dec
dec
out
les
into
xchg
sub
fmulp
adc
jmp
push
push
mov
sti
mov
loope
into
mov
push
ja
addr16
mov
or
stc
sbb
je
ja
dec
test
xchg
xor
push
and
dec
adc
jb
sbb
aam
lcall
jle
fadds
sbb
imul
mov
fisubl
pop
inc
dec
lahf
loop
push
mov
ret
mov
fcomps
push
push
or
cmpsl
or
pop
sbb
lea
call
sbb
jecxz
in
cwtl
jnp
push
mov
xlat
clc
push
sarb
jns
jbe
aaa
mov
mov
mov
mov
addr16
inc
pause
in
xor
lea
mov
test
and
lret
pop
inc
bound
adc
mov
pop
pop
mov
cld
test
notb
cltd
iret
mov
or
adc
adc
gs
mov
fwait
inc
inc
dec
mov
imul
insb
dec
and
nop
jmp
lds
fwait
in
out
add
in
pop
cs
sub
jnp
adc
adc
rcrb
jnp
das
cmp
popf
in
imul
movsb
or
pop
mov
dec
add
pop
jno
mov
pop
dec
mov
cmp
rol
stos
sub
out
sarb
mov
jae
outsb
fildll
mov
lock
stos
sub
in
add
int
inc
jge
das
enter
jmp
jmp
cmp
daa
popf
jecxz
mov
dec
popa
popf
cs
scas
dec
inc
in
scas
in
lods
out
jmp
in
ss
outsl
hlt
cmp
fidivrs
in
mov
push
icebp
cmp
add
lods
cmp
add
ja
pop
outsb
imul
jl
dec
popf
add
aas
add
xor
ljmp
test
shl
mov
movsb
xchg
pop
inc
in
ss
outsb
mov
jns
mov
fcomps
or
je
int
cli
insb
notb
inc
add
mov
dec
imul
and
cwtl
sbb
push
xor
sti
mov
mov
pop
dec
gs
aas
dec
mov
sub
ja
repnz
repz
adc
cs
mov
shlb
xor
or
jns
inc
lret
sbb
xchg
push
adc
mov
negl
mov
lock
cmp
mov
lds
or
mov
lods
test
mov
mov
xorl
ror
lret
or
mov
jbe
xlat
push
inc
add
sbb
icebp
faddp
ret
xchg
jle
out
jnp
xor
pop
rcl
lcall
add
jne
inc
dec
jo
sbb
insl
jne
outsl
fists
hlt
push
lock
and
mov
push
lret
and
add
sub
ret
add
inc
in
loope
cmp
sub
out
das
jmp
adc
ror
push
cmp
inc
in
fs
int
int
ror
dec
jne
repnz
pop
push
lods
ja
lods
arpl
dec
pop
fsubrs
jbe
or
xchg
jp
subl
cmp
push
mov
outsl
mov
ret
mov
xchg
imull
pop
movsb
dec
lods
ret
lods
js
mov
pop
test
outsl
nop
mov
aam
mov
daa
idivb
mov
add
push
dec
repz
add
shlb
imul
and
movsb
shrb
mov
lea
insl
mov
mov
out
lahf
jne
sub
pop
sbb
jb
daa
or
cli
adc
push
js
cld
fcoms
outsb
mov
fbstp
xchg
ret
idiv
lods
test
insb
push
addb
push
jnp
in
fidivrl
test
lds
testl
mov
jle
sti
pop
in
orb
mov
lret
mov
jge
inc
inc
int
push
data16
push
cmp
lods
jg
cmp
sti
in
out
mov
ja
push
shll
std
or
lahf
xchg
add
mov
lret
push
fldt
dec
push
sub
adc
ret
test
rorl
jnp
icebp
mov
adc
fmuls
sub
push
mov
mov
pop
in
fdivl
out
outsb
sub
faddl
and
lea
popa
or
push
adc
sbb
dec
sub
xchg
hlt
ret
and
pusha
jp
mov
scas
call
out
iret
ds
and
fldcw
sbb
dec
pop
incb
jb
out
icebp
test
sub
push
into
subl
dec
mov
lods
jecxz
lods
jle
test
add
idiv
inc
test
inc
sbb
sbb
das
es
xchg
jge
mov
jns
mov
mov
pop
push
clc
jns
adc
sub
lcall
cmpsl
jnp
cmpl
fildll
rorl
mov
adc
incl
mov
es
jne
test
in
loope
jo
les
or
adc
mov
dec
jb
inc
mov
mov
lods
xchg
div
inc
push
adc
mov
xchg
test
popf
push
sbb
stc
addr16
test
push
push
push
push
xchg
sub
imul
mov
out
xor
or
inc
push
mov
mov
cmp
sub
push
ja
aas
cli
pusha
into
sub
jl
pop
pop
xlat
and
jl
movsb
je
cmp
outsb
jmp
inc
cmp
gs
loop
mov
push
mov
iret
mov
xchg
sbbb
lret
sub
repnz
sub
cmp
inc
sbb
mov
mov
popf
test
push
mov
outsl
sub
mov
add
rclb
xchg
ja
jmp
mov
sti
imul
pop
stos
push
loop
rorb
xchg
int3
mov
sbbl
cmp
lods
jmp
and
push
sbb
lods
outsb
das
add
fsub
push
push
stc
push
ja
jae
scas
test
dec
daa
sub
push
mov
push
mov
cmp
mov
data16
call
movsb
mov
add
cmp
sub
push
pop
gs
dec
xchg
fld
leave
loopne
sbb
cmpsb
cmpl
jbe
pop
and
popa
ja
sbb
fnsave
pop
jne
loopne
shrl
popf
stc
cmc
mov
arpl
mov
fldl
mov
imul
fsubs
iret
les
xlat
mov
roll
mov
cmp
jge
sub
idivl
jle
xor
sub
mov
push
cld
in
push
cli
fwait
shll
mov
pop
call
or
sub
lret
rorb
std
inc
rcll
pop
loope
leave
fsubs
in
repz
data16
mov
xchg
lret
outsb
out
adc
subb
jbe
add
call
outsl
sahf
inc
mov
cmp
add
ja
inc
pushf
call
xchg
notb
icebp
mov
mov
ljmp
cmc
push
dec
sub
dec
or
and
out
push
popa
fadds
int
test
sub
out
jo
bound
push
cmp
hlt
and
xlat
lea
dec
fcmovbe
out
sarb
pop
aad
push
fldenv
mov
test
lcall
dec
fwait
and
sbb
jge
jg
push
js
mov
gs
sbbl
in
jmp
loop
xor
add
inc
daa
pop
cmp
cmp
scas
jbe
xchg
cmp
fidivrl
pop
call
incb
jp
into
lea
pusha
push
or
jl
jecxz
mov
pushf
popa
out
push
pop
sti
test
or
jmp
out
jl
decl
outsb
mov
in
ja
mov
push
adc
push
jmp
mov
or
popa
mov
stos
enter
xchg
jp
pop
xchg
sahf
jg
add
xchg
test
pop
std
js
push
mov
stos
jb
cmp
cmp
push
sub
mov
shll
and
dec
cmpsl
nop
addr16
or
jp
daa
and
in
popa
jecxz
jmp
int
cs
out
push
hlt
dec
add
iret
lea
testb
cmpsb
dec
insb
add
jnp
add
push
mov
xchg
push
or
call
fwait
insb
in
bound
cld
adc
and
pusha
add
popa
jns
mov
mov
mov
or
pop
out
cltd
cmpb
lret
lahf
mov
xchg
push
test
adc
sub
add
xchg
aam
jno
or
push
in
ljmp
jmp
cmpsl
sahf
push
pop
gs
loop
sbb
adc
mov
sub
push
fisubrs
out
mov
lea
cli
jp
outsb
jl
shl
pop
mov
lods
stos
dec
pop
popa
insl
and
xchg
add
js
mov
dec
and
sbb
xor
or
dec
xor
mov
loope
mov
jbe
sub
movsl
jne
mov
xchg
clc
dec
inc
jp
int3
xor
push
adcl
dec
mov
and
sbb
jecxz
imul
pop
inc
add
pusha
jno
jno
lret
in
leave
xlat
mov
jo
mov
aam
push
push
test
mov
popa
xchg
push
jb
lret
jbe
andl
push
cwtl
cltd
jne
mov
std
mov
xor
push
push
inc
int3
lds
es
leave
aaa
add
fs
mov
lods
pop
pop
pop
and
das
aas
mov
setne
inc
es
and
ss
in
mov
sub
dec
ja
add
cmp
adc
push
mov
movsl
loopne
fcompl
mov
mov
in
imul
cmp
cmp
mov
and
push
sarl
mov
adc
push
xorb
test
push
ret
imul
andb
ret
push
cmp
insl
out
notb
xchg
inc
push
stc
sti
dec
push
jle
inc
xlat
jne
xchg
ret
jbe
mov
rorl
enter
inc
popa
dec
lret
cld
mov
push
xchg
iret
sbb
cld
outsl
and
testb
in
dec
lahf
out
lret
dec
dec
leave
pop
loopne
xchg
enter
cmpsl
cmp
cmp
ds
and
aad
in
push
pushf
push
inc
mov
std
jbe
loopne
sahf
cwtl
cmp
jmp
sbb
push
fistpll
clc
in
test
push
push
sarl
outsb
dec
cli
mov
or
jb
jno
movsl
dec
lret
xor
xor
out
push
mov
sub
lods
jo
add
adc
jecxz
xor
jmp
push
dec
cmc
das
xor
dec
and
movl
clc
jecxz
sub
test
pop
mov
outsb
pop
cmp
xor
push
pop
js
xlat
sbbb
pop
dec
inc
je
test
enter
or
pop
mov
imul
roll
push
mov
sub
or
xor
and
lods
xor
inc
mov
in
popf
divb
orb
call
movsb
jns
push
push
fisubrs
mov
cld
ret
addr16
cmp
int
fsubr
fisttpl
insl
lods
jae
aam
sub
push
insl
pushf
fistl
into
inc
cmc
jbe
adc
ja
ret
sub
mov
idivb
ja
mov
jmp
sarl
fstl
call
xor
dec
test
ror
add
mov
mulb
rcrb
sub
fwait
inc
cmpsb
mov
pop
sub
jmp
adc
repz
fcoml
cld
cltd
scas
mov
pop
hlt
jo
je
mov
cmc
jnp
jnp
xor
sub
cs
push
test
xor
cmpsl
mov
jns
or
jecxz
lods
inc
ret
or
cmp
lret
enter
inc
into
xchg
jg
dec
jp
mov
dec
imul
sbb
adc
dec
mov
ret
jl
push
adc
sub
sbb
adc
cmp
add
sub
add
lods
in
daa
and
xchg
shrl
cwtl
icebp
test
shlb
bound
pop
insl
test
sub
mov
or
mov
and
stc
jp
dec
pop
scas
scas
scas
ret
add
jno
ja
xchg
add
jmp
out
sbbb
dec
add
sub
sbb
mov
enter
push
lock
imul
outsl
comiss
int3
roll
outsb
push
sub
fists
imul
sbb
cmp
insb
fisttpl
stc
cmp
scas
dec
push
jmp
dec
mov
add
xchg
aam
fldt
pop
push
dec
push
pop
sub
outsb
dec
test
in
inc
rcrb
inc
orb
mov
push
pop
and
faddl
pop
inc
out
inc
push
sub
xor
lret
test
sub
je
cmp
pop
mov
jns
jne
lods
movsl
flds
movsl
stc
mov
int
lods
imul
xor
xchg
xor
add
roll
sbbb
imul
stos
cmp
inc
dec
add
xor
frstor
push
lods
sbb
int
cmpl
aas
add
call
fisttpll
xlat
lock
icebp
lahf
mov
xor
add
pop
add
jmp
sub
daa
cltd
imul
lret
into
mov
jne
movsl
adc
xlat
sarb
popf
je
sub
enter
pop
dec
jns
mov
test
leave
clc
iret
into
iret
mov
aam
sub
les
repnz
mov
cmp
jb
sbb
sarb
cmp
outsl
mov
pop
xlat
inc
sahf
jo
inc
inc
shll
test
mov
divb
cmpsl
jbe
pop
hlt
sub
pop
pop
out
incl
jnp
sti
jmp
addb
lahf
scas
outsb
lret
sbb
cli
test
mov
arpl
xchg
xlat
and
inc
xlat
sub
int
add
push
sbb
test
push
dec
incl
cs
inc
and
pop
gs
into
xor
adc
rcrb
pop
pop
stos
inc
push
faddl
jno
pushf
daa
mov
mov
mov
imul
rcll
inc
inc
mov
jbe
icebp
aam
mov
lret
cs
daa
or
mov
cli
jae
mov
ret
stos
jns
lret
lcall
lret
insb
push
xor
inc
lods
ss
mov
dec
jno
stos
add
pop
nop
flds
stos
outsb
lock
xchg
xchg
int3
les
push
cmp
or
adc
imul
push
sbb
push
cmp
push
ror
sbb
out
mov
cs
adcb
mov
cmp
push
jle
jae
jl
push
stc
rcrb
mov
mov
xchg
insl
inc
add
pop
push
mov
push
pop
mov
lret
xchg
insb
mov
int3
pop
dec
pushf
and
insl
imul
cmpsl
lds
pop
dec
xorl
jecxz
ljmp
outsb
jecxz
jnp
xchg
cltd
shlb
in
sahf
adc
xlat
add
je
push
push
mov
mov
shlb
mov
lock
aad
or
dec
mov
mov
repnz
pop
hlt
fwait
xor
jno
test
aaa
push
pop
mov
test
or
loopne
outsl
fsubrs
std
xchg
repz
aaa
mov
mov
orb
inc
test
push
bound
loop
inc
popf
outsb
jo
rcl
fbld
bound
inc
pop
jbe
or
pop
outsl
icebp
sbb
loop
stos
idiv
inc
shl
in
inc
and
insl
adc
in
rcrb
dec
pop
and
sbbl
mov
outsl
cmp
les
iret
push
adc
xchg
bswap
xchg
or
push
cmpsl
jno
out
xor
aad
movsb
pop
insb
and
daa
push
cmc
jmp
in
cmpsb
cmp
aaa
push
adc
iret
inc
scas
repz
cs
repz
lret
sbb
ljmp
aam
adc
test
jg
iret
les
not
loopne
push
mov
arpl
movsl
pop
jecxz
mov
jmp
xlat
pushf
test
pop
xor
xchg
inc
jae
cmpsl
cld
pop
jl
inc
mov
jnp
cmp
or
xchg
cltd
or
dec
stos
cmp
add
sbb
cwtl
push
pop
mov
jecxz
loope
movsb
insb
cli
mov
jp
mov
mov
fsts
xchg
mov
je
loope
push
out
push
mov
pop
pop
outsb
loope
js
mov
mov
mov
lods
test
dec
jo
pop
pop
xchg
ljmp
int3
lahf
in
mov
inc
dec
adc
xchg
imulb
mov
shl
pop
cmp
adc
inc
shlb
ljmp
push
test
je
shll
loopne
cmpsl
pop
jo
fs
shlb
fbld
xchg
fldt
jecxz
add
loope
clc
cwtl
subl
xor
outsl
shrb
sbb
add
mov
shll
cmp
das
push
imul
sub
arpl
inc
xchg
jnp
adc
sub
movsb
in
xchg
out
jns
shrb
inc
dec
jb
xchg
pop
push
mov
mov
inc
gs
mov
jb
jb
shrb
fistpl
sbb
lret
rcrb
loopne
inc
cmp
fdiv
pop
into
cmp
adc
stos
mov
lret
insb
add
sti
or
or
aas
sbb
xchg
sbbl
shll
mov
rsqrtps
mov
cltd
fwait
popa
jnp
xchg
inc
cmp
cmp
fbld
jne
sub
sbb
fcomps
fcompl
gs
ja
sbb
xchg
out
adc
scas
aaa
push
fisubrs
test
lahf
std
repnz
inc
dec
in
dec
js
jl
jae
stc
iret
rcrl
shrl
sub
ret
iret
out
test
mov
dec
and
mov
in
repnz
pop
xchg
daa
ja
icebp
inc
cmpsl
xor
out
dec
xchg
std
sub
inc
add
sub
int
repz
sub
cmpsb
inc
push
add
xor
cmpb
push
jb
pop
in
mov
int3
jae
xor
hlt
pop
sub
sti
mov
sbb
leave
ret
xor
arpl
dec
ret
jno
stos
and
sub
jecxz
test
movsb
enter
popa
es
xchg
arpl
dec
loopne
ja
cltd
fdivrl
xor
ret
insb
push
or
into
mov
jnp
mov
mov
or
add
sub
adc
jmp
mov
mov
cs
xchg
jmp
sub
dec
push
pop
sbb
and
lods
or
fadds
mov
add
insb
push
popf
leave
jp
test
in
pop
stos
pusha
in
fldcw
ret
pop
jle
jno
push
mov
fsubrl
xor
pop
add
mov
out
fsubp
stos
movsb
dec
gs
sbb
je
mov
mov
loope
loop
jbe
ljmp
or
add
leave
xor
mov
mov
mov
fidivrl
add
out
sub
inc
scas
in
dec
or
lret
mov
inc
cli
insb
repz
push
or
inc
dec
mov
push
xchg
xchg
xchg
lcall
cmc
in
lds
pushf
inc
sbb
jg
inc
outsl
outsb
mov
aad
cmp
cmpsb
cmp
mov
adc
out
xor
sbb
mov
inc
and
aas
or
or
jecxz
loope
arpl
lret
insb
sub
push
ljmp
mov
hlt
jmp
adc
fstpt
lahf
jecxz
fwait
dec
xchg
inc
cmpsb
sbb
divl
int3
addl
fs
pop
lock
into
cmp
dec
rcr
fmuls
jp
mov
or
sub
mov
inc
rclb
ret
cwtl
icebp
bnd
daa
mov
rolw
pusha
dec
stos
cmp
sbb
js
sahf
xchg
popl
adc
sbb
addr16
icebp
xchg
outsb
jp
jmp
cwtl
jae
aaa
in
cmp
xchg
cli
loop
cmp
imul
push
xlat
sub
sub
cmp
in
cmpsb
ja
outsb
jno
and
add
or
cmp
mov
cmp
stos
sahf
or
xor
movsb
dec
mov
jmp
mov
sub
mov
rclb
ja
jno
pusha
push
add
in
clc
nop
dec
pop
pop
jl
xor
int3
in
cmp
ss
lods
mov
add
loope
and
shrb
mov
pop
aad
push
mov
mov
jecxz
pop
mov
inc
or
cmp
cmp
jge
xlat
outsb
mov
push
push
insl
inc
adc
sub
test
cld
mov
mov
inc
mov
jae
leave
scas
scas
jbe
sub
sbb
and
add
int3
jmp
bound
or
arpl
push
int3
mov
jle
mov
inc
sub
fldcw
xor
nop
insb
mov
lahf
negl
mov
repz
jecxz
incb
cmpsb
xlat
pop
pusha
jmp
mov
mov
mov
cmp
push
dec
mov
shrb
pop
or
inc
mov
je
push
test
scas
adc
sbb
lds
mov
sub
cwtl
ds
jmp
mov
jb
adc
sbb
data16
pop
repnz
push
repz
and
int
cltd
push
xor
add
and
xor
outsb
mov
and
rcr
insb
jmp
jbe
xchg
int3
cmp
aas
test
pop
shll
fs
fwait
out
pop
loop
sub
add
dec
mov
cwtl
fldl
jge
in
es
fs
xchg
jno
stos
xchg
sbb
pop
out
inc
call
out
int
xor
xchg
cmpsb
or
adc
in
jbe
imul
shrb
or
cmp
or
xchg
cmpsb
call
xor
fsubl
sbb
and
cmpsb
sbb
sub
lods
repz
dec
fdivl
xchg
or
xor
hlt
or
ret
pop
mov
addr16
push
out
pushf
fcoml
in
push
xor
enter
ja
incl
sbb
jecxz
pop
pop
shrl
enter
jo
out
mov
jno
inc
or
or
loope
cmc
ret
adc
fsts
mov
pushf
je
fistl
je
nop
jbe
mov
lret
xchg
je
aam
sub
xchg
shll
cmc
cmpsl
loop
xchg
fimull
std
push
mov
xor
adc
dec
adc
mov
add
fisubrs
daa
cltd
outsb
xor
ds
lret
jae
jae
mov
repnz
std
jmp
ss
jnp
xchg
cmp
sub
lea
sbb
xchg
sbb
add
popa
imul
aaa
loop
call
jbe
mov
xchg
iret
add
push
mov
popa
pop
nop
lcall
and
mov
dec
cmp
jb
sbb
icebp
filds
push
cmp
repnz
lcall
xchg
cmp
xchg
insb
movsl
pop
mov
daa
shlb
loop
mov
jo
xchg
orl
les
mov
in
and
lds
insl
xor
das
lahf
xchg
and
mov
mov
arpl
jnp
xchg
pop
inc
dec
cmc
call
lods
imul
aam
push
mov
icebp
mov
inc
mov
jns
pop
add
cmpsl
loope
xchg
mov
test
and
faddp
cmp
inc
lret
push
mov
sbb
movlps
dec
int3
loopne
mov
call
mov
rcll
fimuls
inc
iret
add
test
in
and
fnstenv
jns
adc
pop
incb
xchg
add
or
in
leave
mov
adc
dec
mov
ja
or
xlat
add
int3
adc
mov
out
mov
sti
daa
in
xchg
in
call
xlat
hlt
pop
and
fldl
lahf
lods
push
icebp
and
add
out
adc
mov
mulb
out
test
jmp
cmp
ss
iret
or
or
mov
cmp
sbb
cmp
dec
in
testl
jle
out
xchg
pusha
push
mov
iret
and
insb
repnz
cld
lods
gs
sbb
xchg
add
mov
push
lret
or
pop
inc
inc
je
neg
inc
outsl
js
pop
adcl
int
mov
sub
inc
mov
jecxz
jecxz
mov
xchg
xchg
inc
insb
aaa
xor
mov
mov
fistps
or
push
shlb
cld
inc
or
mov
dec
sbb
rcll
sahf
jmp
mov
xchg
pop
aad
mov
jl
inc
push
cmp
std
aaa
xchg
push
push
mov
jo
cmp
push
ret
icebp
push
icebp
xor
xchg
fadds
pushf
lds
cwtl
xchg
daa
cmc
push
lea
push
data16
outsl
mov
xchg
pop
xor
out
xchg
inc
in
scas
jmp
cmp
xchg
push
dec
jno
push
mov
mov
push
lcall
bound
or
dec
push
add
sbb
and
subl
push
mov
lea
fcompl
inc
call
and
andb
je
aam
push
loop
mov
inc
pop
cmpsb
push
shrl
in
jbe
movsb
cmpsb
jno
into
and
fadd
mov
ret
push
enter
jbe
mov
push
lcall
dec
movsb
rol
mov
sbb
mov
xor
or
shll
push
or
lret
push
xlat
pop
push
or
rcrb
gs
insb
fistpll
in
jb
imul
lock
stos
push
pusha
stos
pop
incb
mov
sbb
fstpt
push
jmp
cmpsl
xor
or
aaa
jae
pop
dec
daa
push
repnz
add
aaa
mull
test
xchg
je
movsl
xor
dec
mov
and
mov
dec
push
push
sub
mov
call
inc
inc
jae
in
pop
int
pushf
scas
js
push
dec
int
dec
and
mov
jbe
insl
sub
test
js
mov
popf
jo
lret
testl
les
xchg
inc
aam
push
stos
dec
test
mov
push
add
inc
adc
push
mov
jge
push
stos
mov
cmp
fst
fdivs
mov
int3
xchg
jb
js
push
xchg
xor
rol
cmpsl
out
dec
jb
and
test
inc
in
pop
cmp
adc
shlb
sahf
stc
outsb
jmp
addl
out
xor
mov
lods
sub
lret
sub
das
pusha
sub
push
sbb
ss
pop
test
pop
cmpsl
or
jbe
jb
test
dec
xchg
sbb
movsb
or
push
xchg
loope
incb
in
dec
xchg
loopne
call
cwtl
adc
lahf
push
jle
add
cltd
sbb
mov
clc
adc
xchg
aas
fcomip
push
rclb
and
imul
js
fdivr
iret
hlt
mov
xchg
pop
pop
cmpsb
rcll
notb
loopne
cmp
lret
out
call
sub
jae
xchg
inc
sbb
adc
xor
sbb
jne
xchg
out
xchg
fnsave
ljmp
inc
iret
dec
arpl
xor
mov
xchg
and
add
addr16
addr16
cmp
jae
pop
rcrl
sub
push
add
aaa
test
or
inc
movl
pop
sahf
mov
js
jmp
outsl
out
jp
mov
lret
iret
bound
sub
mov
or
inc
pusha
hlt
push
out
mov
sbb
dec
and
push
mov
sub
cli
mov
scas
leave
push
aas
lret
loop
fnstsw
pop
arpl
push
mov
dec
ds
sbb
test
pushf
lods
cmp
jmp
nop
inc
push
ret
add
jae
cmp
pop
adc
andb
and
push
sub
xchg
xchg
jl
sub
dec
cwtl
adc
pop
stos
repnz
test
inc
aam
out
in
pop
or
stos
stos
repnz
icebp
mov
cmc
popa
das
cs
lret
iret
adc
push
into
in
sub
pop
xor
or
dec
dec
mov
mov
xchg
adc
vpsubsb
testb
xor
dec
pop
ret
les
push
pop
add
ret
sti
test
xchg
mov
stos
mov
jb
mov
mov
cwtl
mov
test
cld
js
pop
xchg
loope
or
icebp
test
jne
sub
inc
loopne
xchg
andb
jb
out
imulb
insl
add
add
cmp
inc
outsl
decl
sbb
rclb
push
pop
std
lahf
das
jno
inc
fwait
out
cmc
lods
pop
lret
jns
sub
mov
mov
stos
push
or
xor
insb
mov
cld
pushl
xchg
cmp
cmp
aas
lods
lahf
push
mov
mov
fistl
inc
movsb
loop
mov
push
lock
xor
pusha
ss
sbb
stos
mov
testb
notl
dec
cwtl
or
pop
xchg
je
dec
xlat
and
mull
gs
add
xchg
rcr
jb
test
push
jg
or
xorl
stos
rcrb
fcomps
cwtl
xchg
stc
xlat
cli
push
pop
imul
out
je
out
mov
pop
negl
push
mov
out
shr
jl
lods
ja
aad
imul
adc
mov
xchg
push
dec
inc
and
jnp
data16
cmpsl
mov
shlb
xchg
in
mov
sbb
cmp
cwtl
cmp
or
into
mov
and
xchg
add
xchg
mov
pop
aas
adc
movsb
pop
iret
push
in
xorl
mov
mov
jbe
mov
jns
mov
mov
xchg
jle
flds
dec
or
test
jl
loope
xchg
inc
subb
adc
adc
loope
call
xor
ret
and
fucom
push
inc
addr16
push
and
icebp
out
jg
sbb
dec
adc
loop
push
lcall
dec
test
push
arpl
mov
das
out
mov
mov
cmc
idivl
movsl
call
out
fcoms
int
pop
mov
test
jp
arpl
mov
adc
les
daa
push
loope
push
inc
fisubl
adc
sbb
nop
inc
pop
add
pushf
mov
xlat
pop
add
push
imul
cmc
sbb
pusha
aam
inc
pop
cwtl
dec
push
and
jmp
ljmp
xlat
and
test
xor
fstpl
data16
cmovnp
push
sarl
cmp
imul
xchg
jmp
repnz
sbb
mov
jmp
push
inc
rcr
fs
lea
in
cmp
push
insb
cltd
iret
inc
leave
dec
sahf
xchg
cli
add
pop
out
bound
test
dec
dec
cltd
test
xchg
rcr
shrb
lcall
add
fadds
test
jl
dec
imul
sar
fnsave
mov
jp
imul
movsb
aam
aad
pushf
movsb
cli
lret
or
inc
add
cmp
sub
jb
dec
cmpsl
pop
jmp
xchg
sbb
mov
fsub
mov
mov
fldl
cmp
mov
arpl
test
out
aas
pop
imul
lcall
test
jecxz
push
and
idivb
aam
ffreep
icebp
scas
mov
jae
pop
mov
out
ljmp
jl
out
aam
fistpll
pusha
mov
jo
fwait
and
daa
xchg
xchg
inc
shll
xor
repnz
outsl
popf
es
push
fs
add
adc
xchg
xchg
into
cmpb
jle
and
cvtps2pi
push
sub
daa
iret
sbb
add
aas
push
fmull
loope
test
mov
jb
in
fwait
mov
ss
xchg
scas
mov
sub
mov
repz
daa
xor
dec
mov
add
push
fs
mov
adc
push
or
cmc
sub
push
rolb
jg
ds
cmp
in
mov
lods
insl
test
mov
jno
es
repnz
mov
imul
lcallw
mov
xor
mov
push
nop
cmp
cmp
xchg
ja
movsb
push
cwtl
into
jo
ret
adc
insl
push
ljmp
lds
or
popf
xchg
mov
out
pusha
lret
or
mov
rcll
cmp
or
jge
and
jo
dec
fcomps
xor
lods
mov
inc
rorb
sub
mov
lcall
sbb
mov
xchg
out
xchg
movsl
mov
test
xchg
inc
imul
push
nop
lahf
out
inc
jmp
mov
notb
fsubrs
mov
push
shll
test
sahf
sbbl
or
cmp
sbb
pop
out
jge
add
into
add
sub
sub
ficoms
lcall
sbb
js
repz
ja
add
faddl
aad
and
mov
popf
imul
mov
ficompl
pop
mov
adc
int3
push
iret
sub
and
inc
ror
dec
test
ja
cli
leave
fistpll
xchg
test
icebp
mov
jmp
stos
out
test
mov
cmc
xlat
sub
jnp
jb
mov
xchg
sbb
and
std
adc
nop
dec
out
add
mov
cwtl
mov
or
sub
jno
or
stos
mov
addr16
shlb
jne
cltd
fisttpl
test
cld
jae
add
stc
popf
inc
pushf
pop
sub
sbb
add
cld
inc
push
loop
ret
pop
jp
sbb
pop
jecxz
adc
aad
mov
and
xor
mov
ret
jle
pop
movsb
sbb
mov
stos
sub
cmp
orl
insb
adc
cs
repz
adc
inc
pop
adc
daa
aaa
aas
lret
bound
or
mov
jmp
dec
cmp
xor
aas
and
lods
jp
ret
jb
and
jge
dec
outsl
jb
cmp
ficoms
xchg
ds
test
xlat
sub
in
push
lods
or
xchg
cwtl
loop
or
fistpl
addr16
nop
cmp
loope
ret
mov
clc
or
mov
sbb
leave
mov
cmp
pop
mov
push
pop
outsb
sahf
negb
xchg
sbb
sbb
inc
out
sbb
int
loope
xor
xchg
fidivrs
out
test
xchg
insw
mov
push
mov
addb
aam
mov
in
xchg
arpl
movsl
xor
loopne
mov
push
or
adc
xchg
movsb
jle
jne
jno
sub
lods
js
pop
popa
xchg
mov
or
xchg
rorb
stc
scas
popf
mov
dec
je
mov
xchg
jnp
and
rorb
jmp
ja
arpl
loopne
adcl
sub
jg
and
in
xchg
call
das
arpl
repnz
ljmp
gs
aad
push
push
xchg
sahf
cmpsl
pushf
jl
xor
shr
sub
fcomip
dec
sub
inc
sbb
xchg
and
and
rcll
push
xor
sub
dec
cmp
int
jno
pop
push
xor
or
dec
inc
dec
ljmp
dec
push
push
pop
ds
cli
or
inc
inc
sub
cmp
adcl
sbb
je
sub
and
out
push
imul
cmpl
out
jae
xor
js
leave
sub
in
mov
sub
mov
lret
mov
xor
inc
scas
xlat
push
sub
out
test
in
xchg
dec
sbb
rorl
mov
jo
pushf
movsb
mov
fimull
shrb
push
js
cmpsb
jl
or
stc
or
xor
notl
adc
nop
enter
and
xor
fisttpl
scas
cmpsl
test
push
cmpsb
mov
sbb
jle
or
sbb
faddl
xchg
out
jb
ja
dec
jo
adc
mov
cmp
sbb
std
pop
dec
jmp
sarl
inc
stos
out
shlb
cli
into
xchg
jecxz
aam
pop
scas
cmpsb
mov
push
rcrl
rcll
dec
and
jns
pop
in
sti
outsb
mov
ficoms
push
adc
xor
jmp
cwtl
xchg
leave
xor
lods
popa
aad
or
mov
xchg
adc
push
mov
pop
push
jno
repnz
pop
adc
mov
push
outsl
pop
scas
push
xchg
xchg
add
pop
push
xchg
in
add
mov
lret
mov
lds
cwtl
or
pop
int
nop
mov
push
add
aas
cmp
cld
addr16
cmp
push
cmpsb
xchg
sarl
insb
cmc
gs
or
inc
aad
mov
xchg
inc
mov
into
std
xor
mov
ja
sub
cld
xchg
add
cmp
in
cmp
or
int
jl
std
bound
sahf
testb
rcrl
lds
xor
or
xchg
cmp
shll
mov
testb
add
inc
dec
bound
push
outsl
and
in
daa
cmp
adc
stc
mov
leave
in
fcmovu
add
jae
or
xor
inc
popf
loopne
sub
ret
mov
adc
cmp
cmp
sub
cld
push
fstl
pop
fisubrl
jb
sarl
fldpi
pop
arpl
mov
fisubrs
dec
je
lods
push
test
cmp
push
xchg
cmpsb
mov
pusha
outsb
gs
push
pop
inc
jl
inc
pop
ds
pmaxub
jecxz
xchg
fisubrs
mov
dec
popa
popa
xchg
lock
push
in
cmpsl
inc
add
sub
cmp
imul
inc
stos
xor
divl
divl
inc
mov
sti
shll
mov
lods
xchg
mov
cmp
call
mov
movsl
sbb
sbb
movsl
popf
sbb
out
insl
mov
mov
push
lret
shlb
es
inc
mov
sbb
lock
nop
push
rcrb
ds
pusha
push
mov
jp
sub
mul
cmc
push
stos
adcl
sub
xor
je
pcmpgtw
mov
in
sbb
pop
in
xchg
cmc
aas
daa
xchg
popa
sahf
int
xor
daa
mov
repnz
mov
or
repz
shlb
sbb
jmp
mov
xor
std
pushf
mov
xchg
xchg
fsubr
pop
outsl
mov
mov
stc
cld
sbb
insb
scas
popa
loopne
mov
and
repz
mov
jmp
in
out
and
enter
mov
nop
inc
mov
dec
imul
pop
insl
or
xlat
mov
inc
xchg
inc
jge
mov
jg
jne
dec
push
adc
arpl
pusha
mov
mov
outsb
pop
dec
call
prefetch
leave
loop
push
add
loope
sub
sbb
sub
pop
sbb
sub
popf
add
sub
and
dec
ljmp
sub
and
adc
adc
sbb
aaa
imul
lret
add
inc
lock
ds
stc
adc
mov
adc
ja
fnstcw
sub
dec
aaa
test
and
lcall
fldl
sbb
fcmovnbe
out
pusha
psubq
cltd
sub
mov
addr16
je
cmp
and
and
test
pop
mov
jmp
xchg
test
add
or
pop
mov
add
mov
push
rcrb
lea
jb
into
xchg
jp
in
pop
and
aad
fnstsw
xchg
sub
mov
push
add
sub
pop
aam
jl
stc
arpl
scas
pop
adc
call
clc
js
cmp
outsl
ss
mov
cs
cmovae
popf
test
rcrb
cmp
out
jbe
inc
or
pop
bound
ja,pn
gs
and
and
popf
adc
pop
movsb
leave
xchg
mov
cmp
or
popf
in
inc
cmp
lock
adc
test
ficoms
mov
sub
rcll
mov
pop
fadds
add
imul
sub
jo
adc
je
jbe
idivb
mov
push
sbb
hlt
add
in
in
pop
out
es
mov
add
imul
add
xor
or
es
jne
in
fisubl
pushf
sub
popa
lods
sahf
sbb
hlt
popf
cmpsl
cmp
jae
jmp
push
and
imul
inc
inc
idivb
cltd
mov
lock
shlb
aad
or
cmp
in
sbb
jmp
in
aad
cmpb
xchg
and
test
icebp
pop
aas
icebp
and
fucomip
mov
sub
cmpsl
ljmp
push
in
lahf
sbb
dec
adc
dec
add
mov
sbb
inc
push
mov
inc
inc
arpl
pop
adc
mov
loopne
iret
test
push
aaa
dec
arpl
and
std
and
inc
imul
enter
es
imul
xchg
adc
mov
shl
out
xchg
lods
lock
pop
imul
shlb
pop
sbbb
pop
xchg
das
movsb
in
and
lds
add
loope
mov
xchg
mov
and
inc
jle
test
std
adc
mov
jle
pop
and
jle
fcmovu
lods
ret
xchg
lock
push
les
cmp
lds
lods
sub
shll
loop
adc
fxch
pop
adc
xchg
dec
bound
cmp
pop
loopne
sbb
mov
icebp
mov
jle
adc
add
fwait
or
je
cld
jno
shl
imul
push
jb,pn
test
insb
movb
orb
inc
jb
lds
mov
in
mov
mov
shrl
adc
sbb
pop
test
imul
repnz
sub
sub
or
mov
mov
enter
adc
testl
sub
out
xor
or
mov
movsl
imul
das
sbb
pop
xor
cmp
inc
repz
fisttpl
sarl
mov
clc
inc
xchg
cmp
jns
sbb
push
ret
sub
sbb
mov
lock
daa
popa
lods
iret
mov
xlat
mov
clc
mov
rorb
push
imul
in
enter
ret
imul
incb
test
pop
out
stos
cmp
ja
sub
xor
xchg
dec
ret
xchg
xchg
cmp
mov
scas
cmp
push
lahf
inc
daa
fisubrl
jl
pop
pop
mov
js
xchg
xor
sti
add
mulb
psubusb
sbb
mov
mov
mov
rol
daa
stos
out
movsl
fcmovbe
sti
lods
jl
out
pop
out
jns
dec
outsb
push
iret
mov
imul
xor
bound
and
sub
sbb
cmp
inc
inc
xchg
call
cld
cmpsb
fucom
adc
sti
mov
mov
cmp
xchg
in
xor
shrl
push
pop
ret
mov
add
cmp
in
add
xlat
icebp
push
pop
aam
push
ds
sub
and
xchg
pop
pop
lds
dec
scas
ds
xor
push
std
jl
and
mov
std
ret
push
enter
jno
inc
lods
pop
adc
mov
and
push
imul
mov
mov
xchg
popf
aam
test
xchg
adc
in
add
adcb
push
sub
aas
les
iret
call
pushf
test
shlb
mov
and
pushf
inc
lcall
loop
dec
sub
inc
or
add
jecxz
insl
shlb
in
fwait
inc
jg
loope
popl
sub
insl
push
push
into
lods
jp
popf
andb
jb
or
inc
loop
loope
xlat
out
sbb
cli
or
jbe
enter
sub
dec
imul
xor
push
xor
jnp
mov
aam
rcrl
bound
pop
fs
fisttpll
aad
mov
mov
mov
movsl
mov
and
js
push
addr16
jmp
cmpb
jno
addr16
loopne
add
std
psraw
in
lahf
xchg
mov
aad
enter
mov
imul
mov
add
iret
daa
std
popf
jmp
mov
lcall
gs
shrl
in
add
movsl
cmpsb
or
repnz
xor
dec
or
out
cmc
lock
dec
xchg
loope
addr16
ffreep
dec
dec
push
pop
adc
xlat
das
fcmove
sti
fdivrl
iret
and
out
call
dec
push
push
dec
inc
fcomps
ja
ljmp
adc
in
stos
push
rorb
push
ja
sbb
mov
ret
lret
mov
out
das
outsl
xlat
mov
push
roll
sub
sub
push
and
sti
push
mov
das
inc
imul
mov
inc
add
cld
xchg
sub
jo
pop
fsubrl
incl
jns
je
inc
xchg
adc
mov
ret
aad
ret
into
setnp
lods
pushf
or
mov
push
mov
push
mov
mov
pop
mov
loopne
int3
pop
cmc
or
fwait
sbb
jb
push
daa
in
mov
add
imul
jecxz
jmp
lcall
mov
cltd
hlt
pop
hlt
push
jle
xchg
mov
mov
mov
stos
aam
out
daa
jbe
in
stos
xor
jnp
dec
adc
sub
jp
push
dec
fimull
inc
testl
enter
sbb
jae
xor
ret
xchg
out
jns
pop
hlt
mov
pop
imul
outsl
lret
inc
push
fadds
in
test
cs
fs
faddl
enter
jo
data16
idivb
call
out
or
and
mov
jae
loope
pop
sarl
pop
test
and
inc
and
dec
add
leave
sti
sbb
popa
mov
out
adc
jmp
mov
or
cmpsl
add
fwait
xchg
iret
jle
sub
ficompl
inc
push
aam
mov
stos
xor
cli
out
loopne
addr16
and
xchg
sbb
popa
cwtl
lods
js
div
ret
pop
clc
xchg
jo
fdivrl
cli
push
pop
test
bnd
mov
sbb
inc
adc
push
pop
fidivrl
lods
popa
cmp
cmp
fistpll
test
dec
xor
int3
and
push
mov
je
jge
fidivl
aad
jl,pn
js
neg
jecxz
jl
lods
movsb
mov
gs
xor
jo
frstor
xchg
pop
fdiv
enter
adcb
dec
push
xchg
lods
mov
xchg
cltd
xchg
inc
mov
or
mov
xchg
adc
nop
mulb
lret
mov
mov
fwait
push
jmp
cmpsl
fmul
movups
pop
imul
mulb
hlt
or
ja
cmp
dec
or
jae
mov
scas
popf
cwtl
mov
addr16
mov
stc
cmpsl
cmp
scas
or
arpl
adc
pcmpgtw
shr
push
inc
and
imul
mov
mov
inc
xor
mov
or
inc
mov
and
mov
repnz
int
mov
sbb
adc
mov
lods
sbb
jnp
sub
pop
sbb
xchg
rol
mov
fistps
xchg
add
sub
cmp
xor
and
jno
add
sub
rcrb
jnp
sbbl
out
shl
popa
cmpsb
xchg
and
stc
pop
sahf
xchg
mov
cmp
and
inc
inc
sub
sbbl
mov
int3
lock
cmc
scas
sub
lahf
loope
es
and
ds
dec
adc
xchg
std
and
and
fsubs
adc
stos
stc
add
aad
mov
adc
insl
mov
cmp
jp
aas
jns
dec
ret
cmp
cltd
mov
mov
mov
imul
mov
es
sub
adc
idivb
pusha
mov
insl
das
push
or
xor
xor
inc
jnp
cwtl
stos
fisttps
dec
cmc
xor
out
dec
mov
cmp
jecxz
lcall
insl
push
call
and
sub
out
mov
cmp
dec
dec
movsl
sbb
pop
int
sub
mov
fistpll
sub
jnp
and
xchg
enter
add
jmp
jg
movsl
gs
dec
mov
mov
dec
mov
xlat
mov
insb
in
xor
sti
fdivl
xor
jnp
push
sbbb
mov
xor
jg
add
and
mov
or
popf
test
add
dec
or
ss
sbb
xchg
mov
add
jmp
into
xor
hlt
aam
mov
in
jmp
mov
mov
jnp
cld
test
jmp
add
mov
bound
cld
push
sbb
mov
sbb
jge
movsb
cs
in
das
cmp
ds
ret
pushw
or
or
jbe
or
pop
sahf
sub
scas
jno
outsl
sub
sub
lea
stos
je
in
xchg
mov
in
data16
cmp
mov
shlb
data16
dec
jo
outsb
jb
pop
cmp
sub
cltd
push
dec
std
cmpsb
mov
jno
je
mov
sub
hlt
push
sub
inc
xchg
rcl
popf
test
out
adc
fcmovb
mov
cmp
xchg
loope
adc
outsl
imul
adc
or
mov
sub
fistpl
fists
ljmp
sbb
pushf
mov
lods
aas
cld
mov
lea
adc
push
mov
outsl
push
cmp
cmp
pusha
shlb
lods
lret
sub
imulb
into
adc
push
add
jle
cmp
xchg
fbstp
dec
nop
outsl
xchg
hlt
or
mov
inc
in
mov
jp
repnz
je
mov
js
lea
pop
cmp
xor
sbb
lods
dec
mov
pop
cmp
es
imul
pop
dec
jge
xor
addr16
stos
fmuls
jo
fwait
aas
inc
imul
lret
pop
jmp
in
mov
sbb
insl
xor
stos
outsl
or
aam
dec
scas
adc
pop
mov
dec
pop
add
lret
sbb
jno
or
xchg
outsl
push
mov
mov
inc
mov
fists
or
jbe
lods
scas
xor
and
shll
xor
mov
fdivr
loope
nop
push
mov
rolb
xor
mov
repnz
sti
gs
adc
out
ret
hlt
fdecstp
loopne
mull
je
sub
mov
push
push
cltd
xchg
mov
dec
cmp
dec
div
loop
idivl
mov
test
mov
stc
jecxz
std
xchg
and
ds
add
cmp
sti
mov
fldcw
mov
ret
test
test
dec
sbb
cs
mov
add
cmp
inc
mov
daa
stos
inc
out
daa
xchg
orl
and
inc
mov
std
mov
out
stc
adc
int
andb
lcall
pusha
mov
sarl
lret
mov
xchg
sbb
nop
inc
push
sbb
pop
mov
test
jg
repz
das
mov
out
or
and
mov
add
adc
jae
jecxz
imul
cwtl
mov
mov
sbbb
mov
insb
add
xor
subb
inc
inc
icebp
inc
cmp
and
out
jae
xchg
aas
and
div
loope
mov
imull
push
jg
mov
lret
jp
aas
and
rcll
lret
fistps
rorb
sbb
dec
rolb
pop
sti
popa
jle
iret
mov
cltd
test
adc
sub
aad
xor
xchg
in
dec
ljmp
xor
ss
icebp
dec
jle
mov
mov
xor
cmpsl
cwtl
int3
xor
or
je
cmp
daa
inc
fdivrl
decb
enter
mov
aam
jmp
addr16
sbb
jb
cmp
jg
sub
pop
ljmp
mov
out
imul
sarl
rorb
in
imul
mov
mov
dec
pop
roll
in
xchg
mov
sub
testl
mov
idiv
mov
pop
js
lret
imul
push
rclb
inc
sarl
loop
data16
int3
sti
pushf
addb
add
mov
fcomi
or
std
fdivrs
adc
push
jno
insb
sti
cmp
scas
mov
inc
repnz
push
mov
imul
loopne
xor
ja
xchg
jp
xchg
mov
roll
pop
std
jae
push
adc
pushf
xor
mov
repnz
insl
xor
xor
int3
push
xor
ret
adc
sbb
fdivl
or
jl
pop
fwait
mov
mov
dec
mov
push
jns
xchg
arpl
or
mov
pusha
mov
mov
lea
add
aam
mov
push
lret
cmpsl
js
push
xchg
push
fcmovnu
idivb
add
je
add
lret
or
sub
into
leave
mov
lea
pop
dec
pop
movsb
mov
sbb
add
daa
cld
ss
sbb
rcll
jg
rclb
rclb
dec
daa
xor
lods
xchg
rcrl
insl
das
pushf
jg
xchg
xor
dec
sub
addr16
pop
leave
jle
movsb
rorb
stos
jecxz
cmp
sahf
pushf
repnz
lods
jo
sub
out
adc
es
rolb
xchg
push
ret
xchg
pusha
add
loop
push
xor
xchg
pop
nop
addr16
sub
add
cltd
pop
adcb
push
das
or
cmc
push
sub
movsb
push
adc
incl
in
aam
stos
mov
in
push
adcl
adc
sub
mov
outsl
or
sti
bound
iret
sub
or
sub
mov
add
cmp
sbb
and
fistl
adc
mov
sbb
lret
add
movsl
mov
mov
push
and
inc
test
hlt
inc
adc
aam
pop
jge
bound
test
pushf
cmp
and
mov
sub
adc
lock
or
jo
negl
nop
mov
mov
hlt
ss
nop
xchg
cwtl
inc
mov
or
sahf
jno
test
scas
movsb
mov
das
cmp
hlt
pop
inc
mov
rol
pop
sbb
into
sub
aas
xchg
jg
cmp
inc
cmc
cmpb
into
cmp
and
sub
pop
dec
sub
test
mov
xor
pop
xor
call
adc
push
flds
mov
pop
and
imul
push
out
pop
cld
imul
and
data16
jecxz
push
fucomp
jp
mov
jmp
pop
repz
mov
adc
mov
and
test
dec
dec
lock
dec
into
or
mov
dec
add
ljmp
lahf
out
nop
stos
enter
insb
xchg
div
add
adc
cli
dec
stos
hlt
push
cmpsb
push
mov
add
push
push
pop
push
in
pop
daa
addr16
flds
mov
shld
mov
int3
aas
push
fnstcw
fbld
frstor
pop
cmp
push
cli
mov
js
mov
xor
ja
sarl
jmp
pop
in
test
pop
adc
push
xlat
or
jnp
shll
lahf
dec
jecxz
jl
push
jmp
dec
jg
into
add
das
pop
or
lahf
or
imul
fsubrl
rcll
dec
movsl
inc
push
shlb
inc
lahf
add
mov
jmp
imul
test
js
sbb
xchg
mov
xchg
cmp
add
in
and
in
push
jne
arpl
scas
dec
cmp
fsubrl
nop
pop
ja
sbb
push
inc
fistpll
pop
fs
mov
dec
mov
add
cmp
ja
pop
js
cmp
xor
adc
pop
fsub
inc
fcmovnb
or
enter
icebp
xchg
xchg
fwait
aad
mov
test
repnz
cmp
mov
lahf
mov
mov
js
in
xor
inc
jp
push
fst
adc
mov
std
push
mov
fdivrs
incb
sub
jecxz
fwait
jno
pop
lea
lds
test
sub
dec
sbb
rorb
js
sbb
shlb
lods
and
rorb
xchg
les
xor
lcall
rolb
lods
enter
xchg
xor
add
inc
add
xor
cmpsb
xor
mov
sub
cmpsb
mov
or
idivl
bound
imul
xchg
mov
arpl
pop
or
cmpsb
push
jbe
shlb
and
loope
hlt
jecxz
sbbb
cmp
aas
mov
mov
test
push
mov
or
mov
nop
mov
pop
neg
lret
push
pop
or
or
pushf
lods
stos
mov
repz
add
push
lods
or
popf
out
int3
sbb
outsb
movsl
jnp
jp
jnp
outsl
push
mov
test
shlb
daa
jp
mov
outsb
je
add
aad
sub
push
test
sahf
add
ds
mov
lods
popf
mov
movsl
lock
or
aam
ja
fmull
add
cld
rcr
hlt
orl
mov
roll
mov
call
push
push
pop
pop
add
or
adcb
cmc
les
or
outsl
xor
test
rorb
mov
jae
jmp
jns
and
lahf
int
push
ss
insb
inc
mov
std
ds
icebp
xor
add
and
pop
sti
xorl
loop
push
fs
add
lcall
mov
pop
sbb
es
jbe
xor
inc
fwait
mov
jle
lret
pusha
mov
dec
cwtl
daa
push
sub
sub
mov
mov
rcl
or
les
xchg
fisubl
mov
xchg
add
xchg
bswap
xchg
push
outsl
and
sub
iret
lret
sub
mov
inc
mov
jns
dec
iret
pop
push
icebp
and
pop
xchg
sbb
cmp
shlb
fsub
or
fists
inc
sbb
faddl
insb
mov
mov
cltd
sbb
aaa
faddl
sbb
fbld
iret
sahf
pop
push
int3
std
sbb
jno
std
push
jae
dec
pop
or
jl
xchg
insl
int3
adc
int3
sub
pop
lahf
jb
mov
shr
daa
xchg
push
xchg
mov
in
repnz
idiv
lds
mov
fmulp
scas
cmp
inc
jnp
cmp
in
hlt
icebp
out
and
bound
xchg
lea
loopne
jecxz
inc
cld
and
sub
loope
adc
xor
mov
outsl
test
xchg
jmp
cld
fwait
xchg
jnp
in
shl
or
pop
stos
cmp
push
push
iret
fbld
lea
mov
icebp
inc
jg
push
lock
push
stc
add
in
xchg
ret
push
fwait
sbb
adcl
ror
aaa
pop
mov
dec
push
notl
add
mov
dec
loop
dec
insb
xor
fnstenv
rcrb
xchg
xchg
pop
aas
push
lcall
xor
inc
js
int3
nop/reserved
jmp
sti
push
adc
imul
jne
add
or
ss
push
xchg
das
icebp
pop
mov
pop
or
xor
add
push
movb
push
dec
sub
pusha
jnp
repz
stos
dec
adc
dec
cmpsb
mov
sarl
xor
adc
push
lock
imul
rolb
shl
addl
fucomp
cmpsl
mov
sub
and
aad
mov
sub
int3
lahf
fdivrl
sbb
xchg
jmp
lahf
jno
mov
pop
mov
inc
cltd
icebp
pop
pop
adc
push
sti
mov
jno
sbb
jle
mov
mov
jle
sub
cmp
ljmp
add
adc
adc
or
dec
xor
add
xchg
test
push
pop
mov
mov
rclb
mov
cmp
xchg
cmp
rorl
imul
lret
jecxz
call
rcr
fldenv
mov
push
mov
xchg
sarl
icebp
dec
addr16
in
fldt
cs
jo
pop
test
incl
fnsave
add
push
popf
or
lea
movsb
pop
inc
add
dec
mov
fnsave
gs
xchg
fs
dec
movntq
sub
mov
cmp
push
mov
jmp
or
andb
cmc
and
xchg
sub
sub
inc
mov
pop
lds
and
sub
bound
xor
and
movsb
mov
fldenv
scas
pushf
mov
fdivrs
mov
and
addr16
mov
rcrl
imul
mov
push
cli
sub
dec
sub
lahf
mov
test
in
xor
call
xor
push
cmp
pop
mov
dec
fcompl
mov
mov
mov
pop
ja
pusha
out
pop
and
inc
clc
or
movsl
fwait
cmp
xchg
jb
rorb
fmull
cmp
mov
ret
push
scas
fimull
mov
sahf
sbb
mov
and
rolb
sbb
call
jmp
ja
aam
and
mov
dec
mov
fisubrl
sub
roll
mov
cld
movsl
iret
lea
lods
cmp
roll
mov
add
shlb
test
cli
call
insb
or
push
push
mov
cs
jl
aam
aad
fistps
ds
notb
enter
sub
call
sub
xlat
push
sub
lds
inc
fwait
push
jne
loop
lods
popf
lret
sub
popf
jg
lds
sahf
je
mov
pop
loope
or
push
loope
fidivrl
sbb
pusha
add
cmp
rorl
sub
js
out
inc
pop
test
imul
sti
scas
or
test
shll
fs
ror
cmpsb
leave
in
sub
je,pn
leave
paddq
ror
orl
inc
negl
into
xor
pop
in
repz
lahf
ss
outsb
das
call
cmp
mov
lcall
xchg
ret
ret
xlat
cwtl
pop
jb
and
movsb
outsl
or
jg
pop
mov
xchg
in
loop
fisubrs
pop
jp
sub
ret
repz
sarb
xor
xlat
push
cltd
push
dec
std
sti
pop
sbb
lret
loop
ss
ss
sub
xor
out
pushf
into
pop
lds
mov
mov
repnz
fiadds
clc
mov
repz
xor
mov
sbb
push
lret
pop
repnz
adc
sbb
dec
push
mov
clc
lret
das
inc
pusha
xor
mov
hlt
mov
fucomi
fistpl
cmp
sub
data16
stc
inc
lret
sub
ss
mov
push
sub
xchg
fstpl
jle
inc
aas
mov
enter
xorb
jp
xchg
mov
mov
icebp
push
pusha
outsl
imul
cli
test
add
xchg
xchg
or
xlat
lock
sbb
popa
push
nop
movsl
ret
stc
pop
and
call
jne
xchg
mov
and
mov
xchg
jo
shrl
sub
fmuls
mov
outsl
push
mov
test
repnz
mov
xchg
hlt
cld
call
push
lods
add
mov
popa
nop
xlat
and
pop
punpcklwd
and
clc
or
pushl
test
add
dec
adcl
cmp
jle
inc
xchg
int3
lcall
xchg
outsb
xchg
inc
rclb
push
test
lcall
adc
pop
cmp
or
push
adc
lea
mov
ffree
inc
mov
inc
out
jecxz
cmp
and
xchg
repz
xor
push
mov
add
xor
xchg
mov
pop
ret
ss
mov
das
xchg
mov
lcall
dec
sbb
ljmp
ljmp
js
pop
movsb
lods
push
mov
xchg
adc
sbb
sbb
sbb
pop
add
ljmp
cmc
testb
sbb
lods
or
inc
aaa
sahf
cmp
cmp
aas
adc
fwait
ret
fwait
inc
pop
push
insl
std
mov
inc
push
lea
push
push
lods
xor
pop
jb
pcmpeqd
pusha
js
dec
xchg
daa
das
adc
add
clc
dec
mov
popa
cmp
fcomps
in
inc
orl
fsub
jne
mov
enter
adc
es
cwtl
pop
in
mov
repz
mov
xchg
xchg
add
inc
ret
cmp
pop
jmp
or
jno
fiadds
js
xor
dec
push
xor
adc
int
pop
pop
and
test
xchg
add
add
in
add
pop
mov
push
xchg
repnz
sqrtps
push
inc
mov
repz
loopne
cs
and
imulb
loop
sub
mov
in
out
add
adc
cmp
hlt
adcl
push
xchg
data16
jae
push
pop
add
or
out
cmp
aad
iret
mov
sbb
jb
lcall
test
push
icebp
mov
ds
push
fcmovnu
and
add
dec
push
pop
inc
push
imul
neg
fsubs
and
jb
push
add
inc
clc
adc
in
inc
sbb
js
mov
mov
inc
mov
sbb
or
aad
and
movsl
aaa
imul
mov
push
popf
mov
pop
icebp
lock
jecxz
jb
insb
xchg
lcall
fnstcw
lods
push
adc
popf
nop
popa
cmp
addl
or
repz
mov
fadd
lcall
dec
lret
xchg
mov
notl
mov
xchg
out
sbb
movsb
push
xlat
xchg
fdivl
in
shl
pusha
xchg
fldenv
sbb
into
out
pusha
aad
pop
jb
icebp
push
leave
lds
inc
mov
mov
aam
xchg
cwtl
aas
loope
adc
sbb
pop
imul
cmp
inc
mov
mov
lcall
pop
add
or
cmpsb
loope
xorb
icebp
je
add
mov
sti
ret
or
daa
xor
xor
fdivr
xchg
push
adc
fidivl
add
cmp
inc
mov
pop
fsubrl
sbb
xor
push
sub
fstl
stos
adc
mov
jp
sbb
out
popa
int3
push
push
and
imul
shlb
insl
into
mov
scas
cmpsb
in
neg
test
and
push
test
jmp
sub
or
ret
fidivrl
repz
lret
jge
adc
sbb
rcr
pop
cwtl
fnsave
in
and
xor
and
mul
pop
mov
dec
mov
dec
daa
push
inc
js
sub
sti
cmp
xor
sti
setno
int3
in
out
mull
addr16
mov
fists
outsb
repnz
jo
xchg
sbbb
cmp
dec
and
push
cmp
sbb
daa
pop
dec
out
mov
out
mov
cmp
xchg
int
cmp
test
clc
fsts
aad
shll
popf
dec
ret
lods
and
adc
add
inc
jmp
out
dec
xor
outsl
pop
lahf
daa
dec
dec
sbb
fistpll
lods
cmp
jg
add
cmpsb
scas
inc
dec
arpl
les
mov
mov
jl
pop
sub
dec
cwtl
push
sub
mov
sbb
das
inc
addr16
lahf
mov
push
mov
repnz
jle
jp
loopne
dec
ds
pop
addb
cmp
push
nop
mov
popf
or
cmp
movsl
sbb
adc
mov
loopne
push
daa
or
xlat
ljmp
in
dec
icebp
sub
jnp
jno
pusha
stos
mov
cs
repz
loopne
test
insb
fisttps
add
lret
mov
xor
ja
pop
ret
mov
push
sbb
pop
xor
movsb
ds
jnp
fsubrs
insl
dec
dec
sbb
flds
cmpsb
imul
cmp
or
push
sbb
xchg
jp
lcall
or
inc
adc
jnp
enter
sarb
inc
stc
scas
cwtl
loop
add
adc
out
fstps
je
pop
inc
decl
and
arpl
dec
pop
sub
push
lret
cli
sub
inc
xor
jmp
arpl
ljmp
xchg
in
mov
dec
sbb
mov
pop
ret
js
pop
xchg
outsl
test
push
inc
fimull
aas
dec
cltd
hlt
mov
mov
test
aam
mov
cld
ficoml
movsl
and
fadd
and
iret
mov
jo
and
cmpsl
inc
test
jae
push
sub
mov
insb
xor
hlt
test
out
andb
and
xchg
xchg
jle
int3
scas
mov
mov
lock
push
inc
dec
jmp
int3
les
js
cmp
shlb
aam
and
icebp
jo
add
cltd
mov
adc
and
arpl
mov
shrl
iret
mov
pop
add
repnz
dec
and
dec
jecxz
cmp
fwait
loopne
das
xchg
arpl
push
stos
and
sbb
fstp
rorb
jne
pop
xchg
and
cld
mov
scas
dec
push
clc
push
xor
cmp
out
add
data16
rolb
mov
mov
loopne
fsubrl
and
sub
jge
arpl
pushf
add
notb
addb
jle
jbe
xchg
lods
mov
push
lret
cmpb
mov
lds
clc
push
arpl
rcrb
movsb
push
shlb
jge
shrb
out
mov
addr16
fisubrs
jb
lds
popl
inc
iret
in
sti
fcomps
xchg
iret
xchg
inc
mov
insb
into
adc
lret
jmp
clc
or
scas
xchg
andl
sub
lret
mov
mov
sbb
filds
inc
mov
xchg
je
mov
mov
rcr
leave
mov
or
and
lret
and
lcall
or
and
lret
ficompl
add
push
and
ja
jl
inc
mov
push
popa
out
mov
or
addr16
inc
fcompl
adc
mov
dec
call
add
insl
pop
repz
sahf
mov
adc
push
jns
or
cmp
inc
nop
stos
pusha
push
and
jle
jae
jae
xor
daa
rorl
test
add
add
dec
aam
pop
and
pop
std
sbb
inc
scas
cmp
xchg
icebp
scas
xchg
xchg
pop
outsl
out
mov
xchg
insl
adc
push
cmp
test
test
pop
push
fidivrs
rcl
pop
mov
cmp
inc
pop
mov
ficomps
sbbl
test
test
fcomps
pusha
inc
mov
aaa
mov
shrb
rcl
test
fistl
test
in
int3
inc
pop
test
cs
or
outsl
add
and
mov
adc
add
xor
or
cmp
clc
add
jmp
call
xchg
sbb
dec
cmp
loop
adc
inc
shrb
xchg
jle
lcall
jnp
xchg
or
ljmp
dec
mov
testl
mov
ss
sub
sbb
repz
mov
or
pop
repnz
pushf
shrb
push
imul
mov
push
pop
stos
xor
fcomps
je
mov
mov
jecxz
cmp
mov
sbb
push
and
cld
mov
in
gs
sub
xchg
mov
iret
jns
sbb
stos
jo
inc
add
push
inc
jns
int3
ret
shlb
in
fidivs
push
and
push
jle
lods
dec
dec
mov
fldt
cltd
cmp
dec
adc
clc
shlb
or
scas
inc
ss
adc
inc
mov
mov
pop
shl
pop
sub
mov
mov
xor
push
pop
jb
mov
lea
lcall
inc
negb
sbb
shl
fsubrs
insb
add
xor
stos
loop
out
pop
imul
repz
stos
inc
scas
and
testl
mov
cmp
inc
inc
cmp
and
jae
dec
sbb
pop
sbb
xchg
sub
cmp
fcmovnu
out
mov
ret
pop
mov
popa
scas
loop
aas
mov
mov
testl
shlb
enter
push
in
mov
imull
cmpsl
and
push
ja
sbb
mov
sub
call
or
out
movsb
addr16
pop
mov
jne
dec
mov
nop
mov
pop
fidivl
aaa
imul
fidivrl
mov
mov
rolb
sub
and
cld
je
xor
out
add
hlt
adc
sti
cs
insl
mov
push
in
adc
adc
dec
pop
popf
xor
dec
jae
add
mov
aaa
aad
xchg
inc
pusha
loopne
scas
lods
mov
mov
jns
xor
mov
xchg
xchg
call
cwtl
stos
sbb
bound
sub
ret
or
rcrb
roll
xor
mov
fildl
daa
push
fwait
xchg
hlt
pop
and
fstl
sub
ror
adc
mov
xchg
rclb
fidivl
mov
sub
jb
xor
adc
in
gs
add
sub
scas
fdivs
es
or
sahf
dec
add
aad
and
sbb
jge
ret
popf
loopne
pop
je
sarb
sub
sbb
inc
jg
inc
test
push
add
jmp
leave
in
adc
loopne
cld
sbb
scas
je
and
mov
stos
push
clc
cmpsl
xchg
xchg
loop
dec
out
dec
sbb
mov
lcall
xor
outsl
adc
pop
fwait
pop
repnz
push
cmp
lods
sbb
sub
adc
xchg
aaa
pusha
pop
aad
or
push
cmp
leave
cmpsb
ret
dec
testl
add
loopne
add
add
jp
mov
and
call
mov
outsl
sub
or
outsl
popa
xchg
sub
daa
loop
jne
and
out
xor
inc
sarl
in
inc
jb
in
jecxz
sbb
cwtl
cmp
cmp
jns
in
aad
dec
lea
loope
cwtl
and
scas
push
xlat
out
jp
jg
mov
jb
rcll
hlt
lock
aas
cmp
out
insb
xor
xor
lock
mov
xchg
xor
xchg
data16
push
mov
dec
xchg
pusha
push
pop
dec
mov
shll
call
outsl
push
in
lcall
xchg
mov
fistpll
xor
xlat
repz
incb
int3
mov
cmpsl
insl
cmovo
sbb
cld
dec
jne
addr16
fwait
insb
jbe
xor
repz
daa
cmp
mov
pop
cmpsb
push
inc
cmp
and
xchg
leave
jecxz
out
popa
push
xchg
aam
fdivs
sbbl
dec
xchg
shll
ret
negb
lods
push
sbb
outsb
mov
dec
mov
pop
lods
lret
bnd
iret
int3
jecxz
pop
es
out
pushf
sub
mov
imull
jo
sbb
jno
mov
adc
mov
test
add
test
dec
pop
sub
pop
jae
ds
xchg
xor
mov
sbb
call
push
mov
push
inc
push
out
jg
pop
cmc
jns
push
rolb
aad
sub
mov
and
leave
or
and
sbb
inc
xchg
jnp
mov
out
mov
in
jno
mov
cmp
xor
ret
jo
mov
outsb
pop
jg
xchg
stos
jo
sub
inc
out
dec
adc
pop
dec
scas
sub
pop
push
dec
push
hlt
gs
adc
enter
repz
xchg
pushf
movsb
test
gs
jle
and
jle
daa
aas
leave
cmp
les
mov
aas
adc
xchg
aad
and
fisttps
inc
sbb
mov
stos
insb
mov
mov
mov
add
es
leave
lret
xor
arpl
scas
icebp
sbb
push
dec
cmp
cs
cmpsb
and
lods
add
pop
pop
adc
js
mov
fs
cmp
jmp
sub
aad
pop
loopne
orl
and
enter
cmp
outsl
push
pusha
je
fcoms
in
leave
mov
inc
mov
test
mov
sub
js
popf
fbld
loope
call
cli
lds
mov
xor
pushf
jb
mov
aad
dec
push
mov
sub
fadds
rcrl
fnclex
inc
imul
cmp
mov
dec
pop
addl
mov
lret
xchg
mov
xor
stos
or
xor
xchg
mov
dec
xchg
cmc
aas
stos
insl
mov
out
jo
sub
sbb
aad
pusha
rcl
jmp
lahf
add
lret
call
addr16
or
mov
das
push
aaa
icebp
xor
cmp
outsb
or
pop
add
call
repnz
insl
popf
dec
jle
dec
and
lock
imul
aaa
push
jmp
mov
sub
xor
jne
pop
mov
loopne
std
xor
stos
cmp
mov
pop
test
dec
dec
in
fists
mov
mov
andb
xchg
shl
cltd
mov
test
loop
cmpsl
lods
xacquire
mov
push
mov
mov
jmp
mov
pusha
sbb
int
xor
push
popf
leave
je
ljmp
or
jns
notl
out
aaa
enter
outsb
push
mov
sbb
ja
inc
test
inc
sub
scas
and
jae
or
mov
dec
dec
cmpsl
xchg
xchg
add
mov
push
divl
sbb
mov
jmp
lcall
and
cmp
imul
outsb
ss
jp
mov
mov
and
leave
ficompl
inc
push
inc
mov
std
outsl
mov
xchg
cltd
imul
data16
sub
xor
leave
int
popa
cmc
push
jle
enter
inc
repnz
pop
js
test
adc
out
stos
adc
jne
sti
mov
stc
push
jecxz
mov
out
and
pusha
scas
adc
push
xchg
mov
sub
xchg
addr16
dec
popf
ret
aaa
jg
push
cmp
jecxz
pop
dec
enter
xorl
lcall
in
and
popf
mov
pop
xlat
xchg
aas
mov
clc
push
jbe
sub
clc
add
mov
mov
xchg
push
ja
jmp
andb
or
ficoml
iret
xor
xchg
out
xchg
idivb
adc
and
icebp
mov
jecxz
in
pop
repz
pushf
es
call
add
subb
lea
xchg
jecxz
mov
roll
xor
add
xchg
cmp
mov
jl
fdivl
sub
pop
ljmp
sbb
es
fst
aam
fstpt
add
push
mov
xchg
jl
xor
mov
mov
iret
test
outsl
movaps
sub
add
adc
mov
in
and
dec
push
negl
in
xchg
iret
push
add
lods
push
mov
adc
imul
popa
pop
adc
jo
pop
xchg
loop
sub
dec
lock
adc
and
ljmp
add
xor
push
fisttpl
jecxz
push
ds
jl
lock
int3
iret
in
jg
sub
sub
mov
movsb
push
fsubrs
ds
push
push
cmp
xorl
mov
cmp
sbb
dec
mov
xor
notb
adc
movsl
loop
pop
scas
dec
scas
imul
popa
mov
jle
xchg
sub
ret
sbb
cmp
sub
and
pop
or
push
je
sbb
out
shrb
dec
cmp
or
sbb
outsb
add
lds
fimull
imul
dec
sbb
dec
adc
mov
popf
cltd
adc
mov
pop
and
gs
inc
adc
popa
insl
or
cmpsl
mov
inc
cld
push
xchg
dec
aas
ljmp
add
js
fdivr
inc
leave
sub
call
push
cli
push
into
mov
lods
notb
push
aad
pop
ds
mov
xchg
scas
pop
push
insb
sub
pop
aam
and
push
and
fistps
fdivs
cmp
jl
lds
frstor
adc
sbb
push
and
pop
xor
repz
push
mov
bound
insl
inc
push
cmp
or
cmpsb
lock
movsl
xchg
mov
mov
mov
aam
cltd
mov
inc
sub
add
insb
or
jmp
cltd
push
push
mov
jmp
mov
bound
push
jmp
dec
inc
clc
dec
scas
add
in
sub
jne
push
je
rep
ret
cmp
shrl
jb
cli
lret
mov
xor
mov
jno
xor
into
push
bound
dec
adc
imul
mov
cmp
popf
mov
jmp
icebp
dec
in
movsb
cwtl
notb
in
inc
loope
outsb
ja
xchg
sub
ret
inc
xchg
sub
mov
fbld
inc
jg
or
jno
sbb
ds
mov
jbe
popf
lret
imul
mov
cmpsl
in
dec
in
sbb
pusha
inc
icebp
popa
xor
test
dec
xor
shrb
pop
add
jbe
mov
rclb
les
cmp
fwait
lret
lock
adc
dec
jbe
lods
and
xor
outsl
fwait
stos
and
bound
push
push
insb
or
test
es
pop
ds
in
pop
cmovbe
cmpsb
add
iret
shlb
inc
sub
dec
lea
pop
cmpsl
movsb
xor
pusha
dec
xchg
nop
fldl
int
sti
xlat
lea
out
in
sbb
sbbl
mov
push
jp
ret
add
mov
xchg
xor
xor
pop
in
ss
xchg
nop
aaa
inc
jae
jmp
dec
add
and
push
imul
dec
dec
call
jp
aaa
mov
in
mov
pop
inc
aaa
mov
insb
ljmp
cmpsl
xor
mov
loope
mov
jnp
enter
mov
fdivrl
je
xorl
test
and
popf
fadds
negb
or
pop
mov
aam
inc
mov
leave
cmp
dec
clc
mov
pinsrw
push
lock
dec
rol
popa
mov
hlt
movsb
mov
adc
call
push
xor
iret
mov
sti
or
aas
sub
adcb
std
push
adc
outsl
lahf
fbstp
inc
inc
dec
inc
lods
mov
or
jp
xor
mov
movsl
adc
repnz
xor
xchg
jb
mov
sti
jl
stos
add
imul
filds
jmp
lods
mov
add
xchg
cmpsb
mov
and
imul
lods
push
and
mov
xchg
add
push
rcpps
insl
movsl
das
js
and
pop
ret
mov
scas
pusha
or
dec
stos
repnz
cmpsl
sub
lock
rcll
pusha
hlt
daa
add
jne
adc
aas
xchg
mov
add
in
lret
and
insl
sbb
mov
adc
into
mov
movsb
enter
in
mov
out
or
repnz
xchg
cltd
rol
sti
ja
mov
out
sbb
movsb
mov
out
test
out
pop
mov
scas
add
imul
aad
cwtl
lods
lds
rorb
mov
iret
jnp
add
in
mov
jae
mov
mov
in
rcrl
xlat
pop
mov
rcll
jecxz
ljmp
push
rorb
and
cmpsl
fldt
sahf
pop
jno
jl
and
mov
pop
notb
mov
push
test
sbb
movsb
push
bound
test
push
cmovs
mov
in
add
and
sub
mov
ja
ret
or
sub
fisubs
aaa
js
lds
push
lret
int
lea
cmc
cltd
jp
inc
push
fxch
push
fs
nop
cmp
addl
jecxz
cmp
cmc
mov
stos
and
inc
sub
scas
adc
or
movsl
movsb
dec
and
sub
in
jecxz
dec
push
in
dec
lds
test
push
dec
dec
push
movsb
xchg
les
lret
leave
jg
fs
xchg
sub
lods
aad
inc
jg
and
inc
sbb
sbb
cltd
ljmp
in
cli
mov
sub
scas
movsl
push
fldt
sbb
mov
xor
push
idivb
push
loop
xchg
pop
test
jne
daa
and
and
roll
jg
sar
sbb
ja
jae
sub
mov
or
add
xorb
dec
out
mov
arpl
std
movsl
test
les
jmp
pop
fwait
pslld
in
mov
jbe
push
hlt
lods
push
sti
and
les
pop
inc
cmpsb
jecxz
xor
add
aas
mov
ficompl
push
jae
dec
mov
add
test
pop
dec
xchg
out
ds
daa
pop
push
jge
out
lock
loopne
cmp
push
or
pop
call
cmpsl
push
pop
lods
rol
jg
jo
fbstp
popa
imul
mov
xchg
mov
mov
xchg
push
test
mov
loopne
dec
lahf
pop
jae
mov
jl
pusha
adc
sbb
fildl
aaa
lahf
and
jmp
pushf
push
je
mov
addr16
jne
push
daa
inc
jg
mov
into
movsl
bound
ljmp
cmp
jmp
gs
jge
pop
stos
xor
stos
hlt
jno
xor
std
cmc
js
outsl
dec
lahf
les
fsts
sti
and
lfs
loope
xchg
in
pop
dec
out
int3
insb
cmp
jecxz
arpl
pop
adc
or
int3
cmp
mov
dec
and
dec
pushf
fwait
mov
and
fmull
cmp
pop
mov
jmp
mov
adc
jle
push
cli
jl
loopne
into
rcl
pusha
ja
inc
inc
leave
mov
lea
arpl
inc
in
sbb
cltd
das
sub
and
int
push
outsl
test
push
jg
and
xchg
sub
lea
jns
popf
sub
cmpl
loopne
lds
pusha
imul
scas
clc
arpl
cmp
loopne
xchg
xor
sub
jl
adc
stc
sbb
dec
mov
adc
xor
test
cmp
rcll
outsb
cwtl
xor
jp
mov
loopne
daa
cmp
out
mov
adc
aad
nop
push
adc
cwtl
ljmp
repz
mov
cmp
push
fisttpl
sub
insb
aaa
pushf
arpl
dec
js
and
push
stos
dec
fldcw
jecxz
xor
or
cmpsl
pop
es
cmp
fsubrs
mov
mov
inc
cmpsl
pusha
call
xor
jecxz
mov
xchg
and
insb
stos
fnstsw
mov
cli
cld
das
add
push
cs
mov
in
lret
push
xchg
lahf
xchg
dec
jbe
jp
lock
stos
scas
sbb
sbb
stos
inc
jo
cld
add
cs
inc
cli
jle
cltd
out
add
push
pop
and
cltd
repnz
mov
jecxz
and
rorb
hlt
pop
fisttpl
jg
add
jno
sub
pop
ss
or
pushf
ret
or
sub
cmp
je
jno
in
test
ds
inc
or
jl
mov
pop
repnz
lock
push
inc
inc
shlb
and
lock
jo
and
arpl
pop
mov
xchg
popa
fwait
and
mov
mov
popf
rcl
lock
das
clc
jmp
mov
or
pop
out
sar
aad
cmpsl
xchg
dec
pushf
fs
sbb
orb
fwait
inc
out
xor
xor
mov
call
mov
lcall
cmp
pop
xchg
cwtl
push
xchg
push
fidivrl
mov
and
lahf
lahf
ficomps
insb
add
dec
ss
cmp
rcrb
insl
jo
or
fimuls
daa
dec
mov
loope
cld
or
daa
and
mov
pop
mov
xor
xor
clc
jne
add
fsubr
subl
daa
in
sbb
adc
or
xor
jo
mov
push
mov
dec
inc
sbb
sbb
enter
adc
aaa
fstpt
cmp
dec
div
mov
inc
push
jge
adc
jne
dec
lret
mov
mov
outsb
mov
loopne
fwait
fs
sub
add
cld
sub
popf
in
rolb
test
xchg
fdivl
fistl
push
sub
mov
out
stos
popf
adc
xchg
mov
mov
sar
add
or
sbb
xlat
cld
cld
dec
and
ret
lea
fidivs
mov
gs
cltd
xchg
ds
xor
push
dec
int
nop
movsl
inc
jge
cwtl
push
call
in
inc
int3
or
ss
dec
fistpll
ss
aas
push
cmp
mov
pop
push
mov
xor
push
mov
jecxz,pt
pop
lds
pop
das
dec
jb
call
push
jg
rcl
and
push
and
jnp
push
and
fdivrs
pop
fcoms
push
cmpsb
inc
pop
push
lock
pop
sub
aas
xlat
gs
dec
inc
fistpl
mov
insl
in
or
push
xchg
popf
inc
lret
repnz
mov
notl
cs
nop
add
cmpsl
test
cmp
sahf
rcr
int
ja
sub
cmp
mov
adc
jae
jbe
ds
js
das
test
sbb
shll
bound
lods
stc
lahf
insb
ret
xor
ret
jmp
push
js
les
mov
cwtl
mov
enter
lahf
in
movsb
mov
mov
ja
out
push
xchg
mov
pop
std
pop
jb
dec
push
in
jl
dec
hlt
lods
enter
mov
loop
jl
das
push
sub
popa
and
pusha
mov
sbb
fstl
push
jg
xchg
je
inc
filds
sbb
repnz
ljmp
sbb
jmp
pusha
dec
or
notb
das
adc
sbb
and
and
cmc
jge
xchg
jne
sub
push
lea
dec
mov
mov
xchg
fyl2x
pop
outsb
and
mov
stc
enter
cld
movsl
or
rol
mov
xor
mov
loope
sarl
imul
scas
xlat
mov
test
jle
cld
rclb
orl
popf
push
add
ret
mov
sub
add
aam
ja
push
mov
cltd
test
jb
xchg
pop
push
andps
fcomi
mov
dec
stos
nop
sbb
dec
push
test
add
dec
jae
pop
adc
scas
mov
mov
shlb
insl
rclb
into
or
push
add
cmp
cltd
sbbb
ds
cmp
jbe
movsl
and
jl
adc
jns
bnd
jl
xchg
mov
faddl
dec
loope
sahf
imul
jae
rorl
push
out
and
test
in
add
jb
or
ret
or
pop
jecxz
cmp
arpl
in
xlat
and
insb
inc
stc
mov
bound
ljmp
lret
in
imul
dec
push
push
mov
insb
mov
or
mov
leave
jbe
cs
repz
mov
push
test
ss
jnp
inc
aad
fwait
ds
push
cmpsb
jbe
imul
inc
mov
cmpl
mov
xchg
testl
ss
popa
xor
fists
cs
imulb
in
sahf
popa
mov
mov
fnstsw
xor
lock
mov
stos
xor
movsb
cs
popf
xor
mov
and
or
lods
lcall
fstpl
cmp
in
xor
sbb
and
std
sbb
cmp
xchg
adc
cmpsb
ret
sbb
sub
cmp
rcrl
jg
cmp
lds
or
fsts
cld
insl
ljmp
cmp
pop
addr16
push
std
adc
mov
jbe
add
lock
jbe
fcoms
dec
dec
inc
addr16
mov
xor
or
sarl
loope
rsm
ficomps
pop
push
xor
add
xchg
mov
fbstp
call
xchg
add
icebp
mov
sbb
push
mov
cmp
mov
scas
mov
ds
xchg
fisubrs
out
pop
es
or
sbb
loopne
jmp
push
mov
jno
loopne
cmp
cmpsl
psubw
jge
push
xor
repnz
pop
test
jp
aas
and
imul
cli
push
cwtl
lock
lret
in
jae
mov
cmpsl
jno
add
xchg
cmp
test
add
movl
xor
or
adc
fimull
push
push
ja
jne
roll
or
sbb
es
outsb
lea
lods
dec
cmpsb
mov
roll
movsb
mov
lods
lret
mov
sbb
dec
add
xor
mov
daa
sbb
addr16
mov
mov
sub
insl
das
stc
stc
xor
mov
mov
aam
aad
sbb
xchg
jmp
or
ja
out
cld
inc
adc
adc
in
dec
or
stos
xchg
jae
jmp
pop
repnz
lods
jl
in
inc
in
mov
push
repnz
mov
jno
roll
pop
push
and
rorl
push
lods
xchg
out
or
stos
inc
jne
push
or
inc
out
mul
sbb
in
cmp
je
imul
mov
push
mov
arpl
js
add
scas
mov
xchg
neg
xchg
aam
in
add
jle
xor
add
ds
fsubrs
fwait
xchg
pusha
jno
cltd
pop
pop
inc
sbb
adc
aad
pop
adc
shrb
cmp
cmpsb
pusha
sbb
inc
pop
lods
xchg
test
cs
fsts
clc
mov
jbe
sub
je
add
mov
mov
cmp
inc
nop
cmovnp
xor
movhps
jmp
lahf
cmp
movsl
push
inc
dec
mov
pop
stc
mov
aaa
call
jle
or
push
sbb
jns
out
shrl
mov
push
ret
jo
dec
and
shlb
xor
lcall
test
dec
cmp
ja
cmp
stos
dec
call
inc
adc
les
or
cmp
mov
mov
cmc
ret
push
push
push
adc
mov
cmp
sbb
add
push
add
xor
ljmp
cltd
cmp
outsb
mov
pop
scas
mov
fs
repz
or
mov
jp
mov
jmp
mov
rcrl
jne,pt
mov
xchg
sub
fstpt
iret
cwtl
aam
iret
adc
scas
jnp
push
dec
addr16
jbe
shrl
mov
icebp
test
pop
or
mov
sub
out
xor
add
inc
call
aas
jo
mov
insl
jmp
test
sarb
arpl
cmp
jb
insl
aaa
js
aaa
inc
and
mov
mov
fbstp
pop
pop
sbb
lds
pop
movsb
or
movq
sub
ljmp
dec
test
call
nop
loop
cmpb
push
fcompl
jecxz
arpl
jnp
clc
pop
sub
ds
mov
pop
je
scas
mov
dec
sub
jl
bound
inc
sbb
jl
out
aam
adc
inc
enter
fdivl
mov
push
push
aas
cmp
mov
dec
js
mov
movsl
add
call
loopne
dec
inc
xchg
test
xor
jge
inc
and
add
xchg
xchg
test
add
pop
es
ss
mov
mov
cmp
jno
mov
sbb
mov
cmc
mov
sub
mov
pusha
mov
paddq
mov
push
std
push
mov
ret
cs
into
and
in
sbb
sarl
jmp
ljmp
cmpsl
dec
dec
out
nop
push
xchg
jae
in
mov
jo
js
mov
cs
sub
pop
mov
rorb
sub
mov
xor
push
aam
daa
cmp
in
test
jmp
pop
mov
lcall
pop
mov
xor
and
cltd
xchg
imul
pop
adc
push
push
gs
pushf
jg
pushf
jns
cmp
push
int
xchg
int
dec
sbb
xchg
add
lcall
mov
mov
fimull
scas
cltd
rcl
xchg
mov
or
cmpsb
mov
mov
lds
mov
data16
sub
ljmp
popf
dec
fbstp
xchg
outsb
xor
ja
std
mov
mov
jp
int3
fildl
pop
jp
xchg
xchg
insl
dec
inc
mov
adc
sub
dec
mov
pop
jecxz
cmp
ret
mov
push
mull
into
jg
rcr
sti
sti
int
lret
outsb
cmp
xor
push
cmp
enter
loopne
pop
pop
cwtl
dec
dec
mov
pop
fiaddl
pusha
adc
pusha
popa
dec
cmc
lock
push
mov
jno
pop
jo
nop
dec
and
xchg
mov
xchg
scas
and
aas
xor
mov
add
dec
lea
filds
inc
pop
xchg
repz
xor
add
cmpl
pop
pop
movsl
out
push
repnz
or
adc
push
in
jb
jno
mov
stos
fsubl
nop
das
mov
cs
repnz
enter
and
lea
fldt
sbb
aas
ret
pop
std
jl
int3
jle
ficomps
hlt
xorb
mov
fldt
out
cltd
lods
adcl
leave
subl
movb
rclb
or
in
imul
cld
jns
mov
dec
xorl
ds
pop
dec
sub
fs
out
mov
dec
psllw
fcmovnu
les
shrl
or
cmp
stos
cmp
sbb
pushf
repnz
fiadds
pop
mov
push
adc
out
repnz
das
dec
ljmp
fwait
sahf
jle
sarl
outsl
fidivs
and
mov
add
jp
sub
jne
ja
dec
loopne
dec
out
pop
xchg
push
rol
sahf
nop
inc
jmp
out
iret
sbb
mov
jnp
inc
int
cmp
jb
push
mov
in
mov
stc
sub
sar
and
out
call
xchg
int
push
cs
inc
scas
lock
xor
lret
sbb
jo
cmc
and
adc
sub
push
pop
ljmp
and
push
adc
cld
test
js
fcoml
ret
lcall
ret
data16
sbb
in
jns
int3
mov
and
mov
cmp
adc
shll
inc
or
in
sub
add
dec
xchg
es
push
add
mov
mov
bound
dec
mov
popa
mov
cmp
leave
pop
xchg
das
dec
cmpsb
dec
pop
jno
cltd
cmp
mov
mov
sub
adc
cmpsb
mov
adc
mov
sbb
push
sub
loopne
es
jo
mov
mov
sub
and
jno
sbb
xchg
or
mov
pop
cmp
and
fldt
cmpsb
scas
jmp
orl
sbb
lcall
xor
aad
repnz
ficoms
jle
pop
repnz
cltd
mov
pop
arpl
push
push
mov
js
cmp
dec
dec
xor
out
shlb
pusha
arpl
in
jnp
jo
jl
inc
adc
lods
mov
sub
mov
mov
add
mov
add
jge
sub
mov
push
adc
insb
jae
repnz
xchg
jecxz
data16
xor
scas
or
xchg
jp
rorl
xor
or
adc
cmp
shl
mov
cmp
enter
adc
sarb
push
add
test
dec
and
xchg
fistl
outsl
sbb
mov
stos
mov
mov
sub
arpl
insl
sub
xor
inc
leave
add
and
and
dec
cmpsb
jnp
daa
pushf
scas
add
pusha
and
adc
leave
sbb
dec
xor
fstl
dec
cmp
mov
push
pop
lret
adcl
push
sbb
add
incl
sahf
add
adc
pop
and
dec
pop
sub
push
rcrl
inc
test
jb
mov
push
push
ret
sub
mov
dec
dec
mov
jle
mov
ret
or
and
add
out
mov
sarl
push
push
rclb
aaa
cmp
adc
hlt
not
mov
leave
xchg
addr16
in
add
jecxz
jno
scas
hlt
mov
stos
enter
add
pop
add
sbb
xchg
aad
mov
jnp
dec
aaa
or
jno
push
push
fs
cmc
mov
arpl
fildl
insb
bound
pusha
and
xor
setl
jbe
int3
mov
or
stos
xor
je
jne
sub
push
stc
inc
fbld
push
int3
adc
dec
and
mov
add
aad
ficoms
jecxz
fmuls
scas
inc
xchg
cmc
out
scas
imul
sbb
out
inc
jb
hlt
popf
add
sub
les
sbb
xor
jno
push
insl
pushf
es
lea
xchg
pop
addr16
and
pop
les
hlt
xchg
and
andl
je
jmp
jne
test
or
in
dec
cmp
add
mov
fcmovbe
out
vinserti64x4
xor
push
or
mov
jmp
aam
add
dec
cli
dec
int
cmpsl
test
mov
lret
xchg
inc
xor
xchg
into
inc
inc
movsb
mov
jl
mov
loope
dec
xorl
bnd
or
mov
sti
out
adc
and
fidivrs
hlt
mov
push
fbstp
fwait
dec
jae
stc
fiaddl
aas
test
sbb
push
sub
inc
pusha
ja
adcl
ljmp
loop
lret
stos
dec
and
outsb
mov
or
in
imul
shlb
repnz
add
xchg
mov
enter
push
cltd
mov
adc
fldt
inc
test
mov
push
cwtl
aaa
or
test
fcmove
cltd
sub
call
clc
outsb
daa
aas
cmpsb
sbb
out
shlb
cmc
popf
rcrb
add
out
mov
popa
inc
push
xlat
push
cmp
inc
push
sub
cmc
or
pop
adc
push
mov
out
mov
repnz
add
jmp
cs
ljmp
bound
jne
push
lods
iret
and
movsl
jae
jns
das
out
rolb
jb
enter
dec
mov
mov
rcl
lret
mov
testb
pop
push
jle
jmp
test
ja
loop
addr16
and
popa
adc
push
mulb
and
gs
das
mov
jns
push
push
ficoml
pusha
adc
cmp
lret
icebp
orl
data16
cmp
jns
push
mov
mulb
je
mov
iret
push
xor
adc
daa
adc
js
lea
or
push
arpl
lods
cs
lcall
add
test
mov
loopne
dec
test
pop
cmpb
lods
pop
int3
dec
pop
jns
mov
mov
push
sbb
mov
pop
mov
es
xchg
and
shrb
loop
mov
ret
pop
inc
mov
shr
lret
xor
pop
js
test
nop
mov
pop
push
movsl
clc
test
es
pushf
dec
mov
cld
daa
pop
pop
mov
dec
push
xchg
and
sbb
outsl
test
je
stos
and
jne
pop
fmuls
sbb
and
lret
std
xchg
test
push
sub
pop
xor
mull
pop
jno
jbe
insl
sti
dec
bound
insl
lret
insb
popa
in
js
repz
and
fidivrs
mov
fisubs
test
push
xchg
dec
andl
sbb
xor
test
pop
test
push
inc
in
lcall
je
mov
jne
mov
pop
ret
popf
cmp
mov
data16
cmp
cmp
clc
out
notl
roll
mov
aad
shll
mov
scas
mov
pop
mov
pop
in
je
iret
fbstp
lcall
je
sti
add
lods
push
push
cwtl
out
xor
daa
sbb
jl
push
mov
mov
stc
rcrb
adcb
int
jmp
shl
jae
int
decl
adc
popa
mov
pop
leave
sbbb
and
push
neg
lods
repz
add
repz
mov
xchg
add
es
aaa
dec
or
fnstcw
subl
inc
jle
mov
inc
stc
je
mov
mov
lahf
lods
xchg
sahf
mov
mov
fistpll
popa
sub
fistpll
lcall
cmp
pop
pop
sbb
out
dec
stos
inc
xor
popf
dec
push
sub
jb
cmc
push
loopne
leave
ja
sti
adc
jns
xor
mov
lods
cmc
fildll
mov
mov
cwtl
xchg
je
cmp
shrb
xor
mov
xor
lods
sbb
mov
push
stc
jecxz
add
cmpsb
inc
and
sbb
pop
xchg
push
stc
pop
adc
sbb
adc
sbb
bound
inc
out
popf
outsb
jg
nopl
in
lret
xchg
mov
out
jo
inc
jne
notl
movl
iret
nop
cmp
dec
clc
shlb
push
fldl
and
jnp
dec
out
inc
mov
push
push
inc
aas
lret
idiv
fists
call
mov
sub
std
daa
inc
dec
cwtl
xor
inc
jmp
cmpl
adc
jnp
je
sub
xor
rcll
inc
repz
in
std
pushf
gs
cmp
xor
test
ret
scas
and
sub
rclb
out
adc
add
add
xchg
cwtl
ss
cwtl
mov
mov
jne
jbe
insl
xchg
repz
push
arpl
pop
inc
clc
pop
mov
xchg
push
sar
shr
imul
xchg
hlt
sarl
imul
imul
push
fstpt
sbbb
into
adc
or
inc
jbe
int
jb
push
lcall
inc
idivb
jmp
inc
orl
sub
xchg
add
xchg
and
sub
pop
int3
or
inc
les
xor
lds
adc
and
cmp
xchg
and
push
ljmp
inc
push
dec
stos
push
sbb
jno
mov
arpl
push
adc
jecxz
mov
push
insb
pushf
mov
daa
dec
xor
test
jae
jmp
adc
cwtl
mov
pop
dec
pop
xchg
xchg
stos
mov
mov
jne
scas
std
and
sbb
push
push
lret
aad
es
adc
xor
aaa
imul
lcall
je
shr
adc
mov
pop
gs
test
push
je
arpl
jbe
dec
push
xabort
shll
dec
in
dec
xchg
insb
or
leave
inc
dec
jge
mov
shll
sub
int
and
pop
jbe
clc
ds
inc
subl
cmp
push
fldcw
dec
pop
mov
aam
testl
jb
inc
adc
rcr
hlt
mov
lds
stos
dec
inc
mov
aam
imul
add
push
fwait
mov
cmpsl
pop
mov
push
pop
and
and
sbb
hlt
lds
subb
stos
adc
loopne
mov
xor
ljmp
cltd
aam
shlb
inc
movsl
sbb
xor
xchg
or
jmp
adc
add
pop
inc
lcall
push
ss
data16
incl
daa
push
jecxz
repz
xor
push
js
shrb
mov
pop
data16
fdivrs
jecxz
scas
and
mov
xchg
incb
adc
push
jbe
xchg
test
jno
pop
xchg
jle
push
aam
jecxz
pop
xchg
sub
push
and
scas
xchg
mov
test
adc
dec
xor
aas
ret
pop
dec
mov
int
jg
mov
jl
sub
jl
jmp
mov
imul
pop
jecxz
inc
repz
jbe
xchg
sub
lods
sti
int
xor
out
jge
leave
sbb
push
xor
ret
je
dec
fistps
in
lret
dec
ja
or
jg
cwtl
addb
shll
outsb
aas
notl
sbb
xor
fcmove
test
jecxz
data16
and
pop
aas
enter
xchg
or
adc
xor
das
xor
and
mov
out
push
sbb
das
jo
orb
jle
in
sbb
pop
int
cmp
out
call
pop
dec
cmpsl
jl
push
outsb
ss
pop
daa
vpunpcklqdq
cli
mov
rcll
loopne
and
cmp
mov
imul
xor
das
cmp
pop
jb
xchg
ret
pop
repnz
adc
mov
push
mov
aam
in
xor
test
and
sub
xchg
and
fstpl
testl
clc
fisubrl
dec
pop
aaa
lods
push
or
or
cwtl
ret
pusha
call
jnp
js,pt
fidivrs
jg
and
out
test
jne
loopne
lods
inc
repz
pushl
push
roll
cmp
mov
xchg
test
push
aad
dec
fstpt
lods
scas
and
add
or
scas
mov
lods
mov
pop
push
mov
inc
sbb
adc
sti
cmp
fbstp
dec
or
pop
adc
out
mov
mov
cli
jne
cmp
mov
in
sub
fwait
inc
clc
icebp
out
movsl
dec
cmpsb
add
daa
mov
sbb
outsb
or
popa
sti
push
aaa
sbb
lods
mov
and
xor
test
xor
xchg
cmp
adc
scas
add
add
in
mov
stc
and
mov
jp
xchg
scas
pushf
call
bound
aam
stos
fldcw
mov
push
imul
inc
or
movsb
and
imul
sarb
mov
mov
out
stos
or
mov
orb
cmp
lcall
int
inc
push
fdivl
or
or
mov
pop
sbb
hlt
mov
pop
sub
fstpt
sbb
jne
fcoms
mov
test
inc
mov
js
mov
dec
adc
and
in
sbb
je
out
pop
and
push
into
fbld
pusha
aad
xchg
mov
jmp
ja
and
mov
and
or
jne
sti
lret
fisttps
and
popf
lods
push
testl
adc
sarb
lretw
stos
rcll
add
outsl
adc
push
repnz
sbb
jg
cmp
cld
mov
push
sbb
inc
pop
ss
loop
out
inc
testb
mov
sti
push
movsb
xlat
pop
das
jnp
dec
and
sub
loop
mov
sahf
cmpsl
xchg
xorb
popf
mov
pusha
lods
xlat
and
out
cmp
cmc
icebp
imul
insb
mov
out
js
and
dec
into
and
add
sbb
inc
out
inc
dec
push
pop
sbb
or
and
js
xchg
sbb
lods
or
aas
pop
clc
outsb
cmp
fisttpll
jnp
cmc
and
ficompl
pusha
sub
jl
enter
jmp
sbb
out
imul
repz
scas
bound
fmull
ja
into
sub
lahf
es
jmp
mov
cmp
jnp
push
mov
movsl
pop
push
jae
adc
or
jmp
lea
xlat
enter
dec
lods
mov
imul
inc
lcall
xchg
testb
loop
jb
xor
xchg
lret
push
or
jne
pop
jns
xorl
mov
leave
dec
jns
xor
xor
add
test
mov
push
out
cmpsb
icebp
pop
push
mov
out
cs
and
sahf
xchg
adc
jns
xor
scas
or
xorb
andb
into
jo
inc
shl
loop
jo
and
ret
sub
iret
push
sbb
lcall
loope
adc
add
imul
sarl
xor
inc
stos
and
jle
std
mov
and
imul
ja
dec
push
mov
mov
lea
aad
ljmp
lret
sbb
lret
imul
fdiv
sub
xchg
fcoms
out
in
sbb
subl
mov
cmp
fdivrl
mov
testb
sub
push
clc
sbb
cld
fisubs
in
into
jecxz
or
pop
inc
add
mov
cmc
sub
push
jae
jg
fsts
outsb
out
movsb
add
inc
js
int3
loope
test
popf
pop
jae
insl
out
dec
mov
enter
js
adc
in
cmp
fwait
addr16
out
push
pushf
or
or
out
xor
mov
push
je
lahf
pop
test
and
jb
data16
icebp
pop
mov
ret
stos
hlt
mov
cmpsb
and
loope
es
mov
mov
xchg
ret
testl
lcall
addb
jno
fsubl
testb
std
cmp
stos
adc
das
mov
sub
setno
sbb
adc
rorb
jg
test
mov
jecxz
xor
or
mov
sub
and
xor
shrb
push
add
inc
mov
insl
fstpt
sub
inc
cmpsb
adcb
xchg
and
push
dec
adc
cmp
orb
xchg
mov
movsl
cwtl
ds
jp
fldl2e
xchg
xchg
jb
xor
es
push
aaa
adcl
test
inc
imul
int
or
cmp
xchg
or
lret
jmp
pop
cltd
sub
clc
daa
test
or
mov
iret
lock
mov
sbbb
push
pop
in
sub
jp
mov
mov
movsl
push
clc
sbb
icebp
ret
pop
scas
dec
pusha
xor
test
movsb
ret
sbb
adc
xor
test
bound
sbb
shrb
rcrl
jecxz
push
pop
insb
add
mov
icebp
pop
out
mov
cld
dec
test
mov
xchg
cwtl
mov
shrb
int
mov
imul
pusha
loop
jecxz
std
negb
std
mov
cmp
sub
sub
fsub
daa
mov
xchg
mov
add
pop
xchg
pop
fcomps
movl
lds
mov
sbbl
inc
lcall
jo
push
nop
cmp
add
int
or
push
inc
cmp
push
enter
scas
fwait
loope
cmovo
xabort
lock
mov
cmp
mov
push
jo
mov
cmpsb
sub
jnp
xchg
sbb
inc
jnp
leave
xchg
aas
jno
mov
popa
adc
push
test
and
cmp
iret
add
in
in
sbb
or
fdivrl
xchg
jnp
stc
bound
das
cmpsb
flds
stos
inc
movsb
xchg
or
rcrb
jb
add
pop
add
add
jp
mov
je
dec
iret
pop
cmpsl
adc
ss
clc
pushf
pop
mov
jecxz
icebp
xchg
and
repz
push
movsl
add
imul
mov
inc
mov
and
mov
cld
lea
xor
loope
mov
push
mov
sub
inc
mov
arpl
popa
fs
cmp
dec
nop
jns
jbe
sub
insl
add
mov
mov
lcall
push
outsb
mov
jecxz
pop
jb
aas
cmp
sahf
or
sub
cmp
xchg
aad
stc
sub
sub
lods
or
cltd
ss
xchg
dec
pop
movsl
imul
in
mov
xchg
daa
jbe
jg
cmp
push
lods
inc
push
in
sti
mov
dec
sub
mov
in
imul
pcmpgtw
lret
insb
or
scas
imul
lea
movsl
and
cmc
mov
mov
test
jle
push
push
std
cmp
pop
pop
or
push
xchg
xor
shlb
addr16
dec
loope
lock
or
lret
mov
pop
sub
mov
frstor
mov
sbb
mov
mov
rorb
mov
mov
push
mov
dec
mov
fisubl
add
js
push
pop
xchg
das
and
fisttps
out
notl
push
ds
sbb
cvtdq2ps
push
out
repz
negl
push
daa
or
jle
addb
push
xchg
or
xchg
bound
sbb
shlb
in
adc
aam
pop
shll
push
mov
mov
loop
xor
ret
lock
ds
xchg
sub
test
test
std
outsl
es
sbb
xchg
adc
stc
mov
mov
cmpsb
xlat
dec
lea
sahf
sarb
push
push
pmulhuw
add
mov
cwtl
repnz
pop
cltd
sub
mov
shlb
pop
jb
cmpsl
repz
stos
imul
fisubrs
scas
jp
sub
mov
out
dec
xchg
ret
pop
insb
sub
push
cmp
ss
shlb
lock
sub
loopne
fiadds
jno
lret
lods
mov
dec
ds
pushf
aad
ficoml
xchg
int
cltd
and
and
scas
and
jne
fwait
push
mov
jle
mov
push
fildll
lret
pop
aam
xchg
aam
inc
lret
mov
int
mov
ss
and
aaa
or
cmp
mov
repnz
xorl
mov
mov
cmp
or
add
dec
clc
push
adc
fadds
inc
xchg
or
fstpl
aam
or
mov
cltd
aam
jmp
mov
rorb
loop,pt
cwtl
lret
pushf
push
push
int
js
bound
cmp
dec
mov
jmp
xor
pop
repz
mov
xor
outsl
mov
es
cmp
push
sub
pushf
clc
sub
adc
mov
pop
push
mov
xor
fld
xlat
out
push
mov
lods
fdivrl
pop
out
lods
mov
mov
arpl
jo
pop
bound
jle
xor
lods
arpl
adcl
jge
aam
mov
dec
rolb
or
adc
xchg
iret
scas
ljmp
dec
cmp
fwait
jae
clc
mov
inc
lcall
mov
enter
adc
cmp
inc
adc
mov
xchg
mov
scas
sbb
mov
and
popf
frstor
jns
fisubrl
dec
xchg
push
fld
loope
shll
mov
fstpt
mov
leave
xor
lods
or
inc
sbb
cmp
and
mov
xchg
arpl
sti
pop
sbb
pop
mov
and
pop
insl
stc
nop
and
mov
aaa
mov
lcall
test
jbe
sub
shrl
pop
outsl
xchg
imul
pop
inc
jne
fildl
or
mov
jbe
and
jmp
pushf
mov
pop
outsb
imul
imul
push
loope
nop
jle
mov
shrb
loop
je
pop
jb
cmp
enter
add
inc
ret
xchg
cmp
mov
and
mov
adc
sub
jecxz
rcll
iret
scas
sahf
push
jns
lods
cli
jno
jg
cmpsb
mov
add
popf
xchg
fistl
popa
fs
icebp
daa
mov
adc
cmpsb
loope
rorb
or
sbbl
leave
xchg
mov
adc
std
lret
adc
stc
imul
icebp
sbb
ss
mov
dec
jne
xchg
loope
out
mov
push
addb
mov
jmp
test
sub
pop
insb
lret
loope
push
dec
sahf
cmp
inc
jnp
daa
rclb
in
push
dec
pop
fs
sti
dec
jmp
leave
mov
aam
dec
test
loopne
sub
mov
cwtl
test
cs
jne
sub
or
sub
out
loopne
es
fs
stc
inc
repnz
fildl
pop
test
xorl
mov
or
fidivs
hlt
ja
les
inc
sbb
pusha
xchg
addr16
lret
inc
dec
xor
int3
mov
mov
sbb
mov
scas
cld
cmp
adcb
or
sub
cli
mov
jecxz
movsb
imul
in
and
mov
cmp
shlb
cmp
sbb
push
fwait
addr16
sbb
sbb
vmovaps
cli
cli
jp
int
xchg
and
testb
inc
addr16
cmp
push
or
cmp
mov
push
sti
dec
mov
fs
and
mov
mov
inc
adc
scas
add
movsl
cmpsl
enter
mov
lahf
cmp
test
pop
mov
fcomps
sbb
or
cmp
sbb
mov
in
lea
jae
or
add
pop
fists
mov
mov
push
xor
aas
sbb
lock
cmc
aam
fs
add
andl
adc
adc
adc
jb
sub
jns
popf
push
ja
cmp
mov
fs
out
inc
cli
add
aad
data16
test
lods
inc
dec
addr16
es
sub
std
cs
push
add
lcall
xchg
std
in
pop
idivb
ret
test
or
lcall
lods
pop
test
pop
dec
sub
mov
mov
sbb
inc
daa
in
add
movsb
sub
jl
orb
aad
sbb
repz
mov
das
jp
scas
sti
lods
mov
mov
bound
fdivrs
mov
in
sbb
adc
leave
mov
push
push
mov
out
xchg
stos
and
add
test
jae
jb
cmp
arpl
addb
into
scas
jb
test
adc
mov
imul
inc
xor
xor
movsl
mov
cld
mov
adcb
cmp
stos
and
cmp
inc
cli
movsb
jle
gs
inc
clc
jecxz
or
dec
mov
repnz
mov
lea
or
add
scas
bound
lds
repnz
push
inc
fsin
movsb
sub
jb
mov
dec
test
pop
and
outsl
jns
push
jbe
fucom
jmp
sub
cmpl
out
pop
test
insl
iret
sub
cmpsl
adc
pop
gs
or
stc
mov
xchg
sub
mov
das
fs
cmp
jb
outsl
lods
pushf
adc
mov
push
xor
pop
mov
adc
adc
sahf
mov
xchg
adc
mov
nop
adc
and
in
int
sbb
adc
repz
outsb
or
imul
mov
lods
cmp
sub
gs
xor
imul
mov
mov
xor
shrb
or
out
aas
add
popa
int3
mov
xchg
int3
mov
ficomps
xchg
sbb
insl
mov
inc
cltd
xchg
enter
or
popf
ja
inc
pop
cmp
push
clc
dec
or
loopne
divb
xchg
xchg
fwait
int3
ret
xchg
enter
xchg
lock
int
pop
dec
fcomps
adc
je
rolb
loopne
dec
pop
in
repnz
test
mov
and
out
aad
cltd
aad
mov
or
pop
pop
push
jmp
rorb
xor
xor
or
jecxz
cmp
mov
dec
cmpsb
pop
in
ds
dec
movsb
aam
sub
mov
out
cmp
std
add
pop
lds
sbb
adcl
inc
xchg
dec
mov
or
jbe
aad
int3
push
inc
movsb
hlt
lea
mov
icebp
and
sub
fwait
xchg
clc
sbb
jp
lods
fs
mov
mov
push
mov
test
cmp
inc
push
pop
push
loopne
insl
inc
xchg
movsl
data16
adc
pop
pop
data16
mov
jnp
test
insl
sub
in
movsl
pop
mov
pop
cs
rorl
dec
adc
aaa
repnz
es
add
cs
dec
in
cmc
test
fcompl
mov
fildl
mov
pushl
stos
lret
mov
fstl
sub
and
push
cmc
shr
push
xchg
sahf
pop
filds
test
gs
icebp
imul
mov
aad
dec
mov
outsb
es
in
pushf
add
push
ret
ffree
jne
push
mov
inc
or
ss
pop
jp
mov
ds
mov
into
aam
xchg
adc
loopne
xchg
shlb
insl
adc
fistps
aam
lods
add
mov
ja
popa
aad
test
xor
or
fwait
pop
adc
xor
mov
add
push
addr16
loop
add
inc
pop
inc
inc
mull
sub
inc
push
cld
inc
cs
mov
pop
cmpsl
pop
psllq
inc
jp
call
ja
addr16
aaa
cld
lret
xor
mov
addr16
repnz
popf
mov
cmp
push
xchg
inc
xchg
fists
xchg
dec
mov
xor
cmp
jmp
adc
test
or
fcoml
mov
sbb
pop
test
xchg
pop
adc
xlat
shll
push
in
jnp
xor
pop
and
and
sarl
lea
in
push
lcall
out
iret
arpl
fldt
icebp
mov
xor
xchg
nop
dec
mov
xchg
mov
insb
mov
out
mov
enter
repnz
movsb
out
cltd
or
mov
inc
adc
sbb
rcrb
jne
sbbb
and
cld
mov
insl
int3
inc
pop
jp
sub
mov
inc
enter
mov
add
pop
adc
aas
lcall
imul
pop
adc
out
fildl
mov
out
xor
in
dec
pop
pop
jno
sti
incb
lods
or
inc
gs
inc
mov
sub
push
dec
and
es
mov
stos
xchg
push
in
test
add
rcl
sbb
sbb
test
push
fs
push
xor
pop
lods
outsl
fldl
test
cli
sub
rorl
mov
or
mov
xchg
mov
in
hlt
jns
repz
fstpl
jb
pop
hlt
bound
das
pop
xor
fucomp
fwait
cmp
inc
dec
mov
jp
shll
pusha
ret
inc
push
dec
stc
mov
dec
lea
repz
lret
lahf
adc
pop
xor
cmpsb
int3
push
push
cmp
pop
sub
std
gs
xchg
test
and
add
fstpt
nop
sub
inc
test
addr16
fucomi
lcall
push
adc
movsl
rcrb
mov
pop
mov
sbb
xchg
dec
cli
fsubl
popf
cmp
add
shlb
mov
int3
dec
or
push
jmp
lcall
push
insl
pop
out
sbb
add
insl
and
mov
iret
push
push
or
inc
push
push
scas
push
hlt
dec
or
in
inc
lods
cs
jae
dec
sbbb
fisubl
int3
or
or
or
sar
cld
ja
cmp
sbb
sub
push
lahf
mov
sub
jmp
mov
test
leave
divl
repz
xor
lret
cmp
jp
outsl
jmp
lea
fstpl
add
push
imul
in
shrb
mov
mov
push
adc
rorl
sarb
push
test
or
add
push
mov
mov
stos
outsb
sahf
out
sub
outsl
jmp
jbe
mov
ljmp
or
push
in
sub
popa
test
push
or
mov
mov
pop
cltd
pop
adc
dec
mov
nop
and
add
adc
lea
pop
popf
aam
rcll
xchg
in
sbbb
clc
and
shl
jbe
out
mov
enter
pop
add
push
rcll
insl
dec
jo
std
dec
cltd
je
sbb
adc
cmp
lods
push
stc
clc
loop
or
adc
jmp
pop
xor
cli
aad
cmp
jae
hlt
loope
pop
mov
pop
jo
stos
incb
test
cmp
jbe
inc
pop
pop
or
lods
mov
and
cmp
clc
dec
xor
push
sub
cmp
push
test
jb
ret
dec
idivb
dec
add
hlt
and
sub
lcall
scas
cmp
cmp
mov
imul
test
fiadds
lcall
mov
jno
mov
arpl
fcoml
adc
and
insl
mov
and
flds
jns
xlat
ja
js
and
bound
push
push
inc
xchg
inc
ljmp
loope
add
mov
clc
xor
push
adc
add
mov
mov
pop
repz
xchg
popa
int3
pop
xchg
dec
sahf
ss
inc
cltd
jo
mov
out
testb
jmp
jns
jnp
out
in
loopne
sub
popf
cmp
aas
hlt
cmc
mov
cmp
sub
daa
gs
loopne
lods
sbbb
aam
xchg
pop
insl
hlt
outsw
and
pusha
shrl
mulb
jns
fisttpll
cmpsb
cmpsl
icebp
in
jecxz
add
jb
out
pusha
movsb
jno
jne
mov
adc
push
dec
adc
in
std
mov
scas
inc
test
mov
das
mov
and
push
push
xor
push
jmp
mov
stos
loop
xor
in
and
in
xchg
mov
sbb
mov
gs
sbb
das
lods
inc
movsl
dec
cli
inc
pop
outsl
fidivl
es
xor
cltd
xchg
xchg
pop
xchg
jns
icebp
inc
pop
jno
hlt
adc
cmpsb
dec
int
xchg
sahf
aas
xor
arpl
mov
clc
adcl
sub
mov
add
and
lcall
popa
push
inc
ds
push
sbb
scas
es
ss
scas
mov
jg
idiv
addb
mov
xor
shr
sub
adc
and
cmc
and
in
addr16
jo
cmp
cli
stos
test
lods
adc
adc
mov
into
jp
imul
fs
push
sbb
shlb
inc
out
pop
loope
fs
mov
adc
popl
insl
popa
cmp
arpl
pop
mov
test
cld
ljmp
rcl
sub
into
popa
loop
jno
pop
sahf
pushf
mov
mov
pop
daa
push
dec
mov
aaa
ds
push
xchg
repnz
xchg
xchg
test
test
push
out
lahf
xchg
add
bound
or
push
shrl
add
and
jo
mov
inc
cmp
out
fistl
repz
shrl
mov
pop
iret
pop
test
and
rcrl
mov
bnd
adc
sub
jge
push
mov
push
jecxz
and
or
sbb
fisubrs
add
push
stos
jb
sub
xchg
rcll
in
je
inc
cmp
add
xlat
lods
mov
ljmp
sbb
mov
ficoml
cmp
shrb
mov
in
in
shrl
inc
loop
mov
push
fadds
add
push
rcll
pop
inc
mov
jle
jo
adc
adc
and
add
xchg
jg
in
ja
adc
cmpsl
xor
inc
adc
inc
mov
cli
js
pusha
rol
dec
ja
push
scas
sub
sbb
mov
cmp
lods
sbb
fisttpl
inc
shlb
lock
lcall
xor
daa
jno
scas
fs
lods
daa
dec
mov
lcall
adc
cvtps2pd
add
repnz
repnz
clc
into
fstps
in
pop
mov
xor
int3
insb
sub
cli
cmp
insl
cmpsl
loopne
loope,pt
js
movsb
loop
inc
jmp
jecxz
aam
jle
aad
xor
rclb
jo
fwait
ja
cwtl
dec
dec
ljmp
stos
lods
or
or
imulb
mov
in
push
rcll
fsubrs
loopne
mov
data16
call
sub
movsb
sarb
cwtl
add
inc
incl
dec
std
pop
cmp
sub
lods
popf
fwait
int3
inc
repnz
xchg
xchg
dec
adc
andl
add
repz
out
aam
enter
xor
pop
fistl
jg
sbbb
cld
mov
push
imul
std
bnd
js
mov
movzwl
ficoml
or
sarl
fsubs
pop
push
add
imul
std
lret
testb
xchg
cmpb
pop
pop
jecxz
mov
das
pop
or
aad
pusha
xchg
jmp
and
ficoms
outsl
mov
stos
loopne
jg
leave
push
dec
subl
mov
jno
out
dec
xchg
repnz
mov
insl
mov
ljmp
incb
rolb
dec
xchg
in
aaa
sbb
inc
add
outsb
and
divb
add
mov
xchg
fistpll
lcall
xor
push
cmpl
insb
pop
jb
imul
int
xor
les
push
data16
dec
mov
fdivs
into
leave
xchg
rcrb
lods
cmp
lcall
aaa
xorl
dec
pop
or
mov
lret
mov
popf
or
packsswb
cmp
xchg
sub
movsl
jae
dec
clc
lds
adc
sbb
rcl
std
out
adc
adc
mov
and
lret
sbb
jl
mov
push
adc
adc
in
add
or
testb
cmpsb
mov
test
das
hlt
roll
in
insl
add
jp
fwait
and
sbb
aaa
dec
imul
xchg
fisttpl
dec
sbb
test
or
stos
push
cmp
jecxz
stos
cwtl
or
ljmp
int
loope
popa
in
sbb
pop
repz
imul
dec
mov
in
test
jmp
adc
cld
daa
in
ja
mov
xchg
or
movsl
jg
cmpsb
test
pop
add
movsb
push
jp
dec
push
jge
pop
mov
jg
jge
mov
dec
outsb
dec
ljmp
adc
sub
in
mov
adc
pop
repz
push
js
es
adc
pusha
pusha
jbe
cwtl
nop
inc
repz
and
mov
lret
mov
sahf
inc
xchg
xchg
in
stos
push
js
popa
sahf
bound
out
and
mov
mov
pop
push
mov
push
shrl
rolb
mov
cli
ss
xchg
mov
sbb
fstl
xorl
call
mov
or
lods
pop
xor
scas
mov
inc
sbb
or
out
scas
push
xchg
test
xchg
cmpsb
inc
inc
mov
cmpsb
cmp
out
add
out
jb
jne
jne
cmc
push
lahf
test
lods
mov
cmp
popa
inc
push
cmp
push
inc
adc
push
dec
pusha
jge
xchg
out
sbb
js
sbb
pushf
into
xor
sahf
icebp
xor
std
xlat
out
test
and
add
jnp
sub
sbb
cli
pop
fs
fs
fwait
sbb
je
push
repnz
push
jo
push
adcl
call
inc
movsb
faddl
cmp
mov
gs
push
cld
push
data16
fidivs
and
stos
in
push
loop
dec
sub
xor
mov
shll
dec
int
mov
mov
out
jae
cmp
pop
aam
shrb
lahf
dec
xor
mov
insw
sarl
dec
je
loopne
inc
cmpsl
push
mov
arpl
outsb
dec
test
mov
mov
pop
in
imul
mov
jge
inc
test
jl
data16
adc
push
pop
rorb
dec
scas
loope
mov
jl
aaa
inc
pushl
cs
lcall
ror
stos
frstor
ficoml
mov
and
xchg
out
inc
adc
cmpsl
not
imul
lock
push
xor
das
imul
movsl
cld
push
dec
mov
and
sub
xor
fsubp
repz
mov
push
arpl
mov
push
scas
popa
or
lret
jle
jg
std
rorl
mov
enter
and
nop
pop
push
fnstenv
push
gs
movsl
sub
fstps
dec
and
leave
push
pop
stos
mov
dec
dec
xor
clc
sbb
push
lret
cli
cmp
xchg
xchg
pop
mov
fcomip
stos
cmp
xchg
and
and
incb
fisubs
adc
mov
lahf
stos
scas
sarb
shlb
movl
add
and
push
fldl
std
xchg
adc
dec
jno
jns
in
fcoms
xor
jae
mov
mov
sahf
inc
fcomp
sahf
fsub
jg
outsl
mov
into
call
jecxz
xor
fnstsw
popf
aam
leave
add
xchg
xor
xor
aas
or
add
pushf
lea
ljmp
ret
lret
mov
push
loopew
jl
int3
inc
outsl
dec
rolb
movsl
stos
int
fadds
lret
in
xor
repnz
aam
mov
popa
pop
push
fimull
insb
pushf
mov
loopne
ds
mov
shrb
mov
pop
hlt
inc
fidivs
stos
inc
test
inc
inc
lds
les
negl
mov
rcl
cmp
fcompl
addb
dec
or
cmp
ds
jno
xchg
imul
dec
dec
pushf
pop
or
ja
fnstsw
insb
pushf
fldcw
push
add
nop
pop
jno
xchg
dec
loop
xchg
xor
cmp
iret
je
cmp
insl
adc
imul
mov
jo
add
or
leave
jle
jmp
test
inc
dec
mov
rcrb
mov
fcmove
cmp
sub
in
das
stos
ja
fidivrs
fmuls
scas
mov
out
test
push
push
call
arpl
dec
jno
mov
mov
cmc
fs
and
negb
aaa
outsb
lcall
cltd
loopne
mov
xchg
popf
mov
mov
mov
or
dec
inc
stos
sub
adc
dec
pusha
sbb
cld
rorl
je
add
and
mov
pop
add
and
push
ret
dec
jae
xchg
inc
ficoml
cmp
inc
pop
add
mov
sbb
loope
lods
dec
mov
out
andb
ret
mul
outsl
aam
in
scas
push
jge
inc
sub
inc
jne
adc
imul
mov
ljmp
adc
mov
stc
lret
data16
popf
jo
aam
cld
inc
pop
xchg
aad
push
fmull
sub
mov
fwait
imul
fldcw
mov
enter
or
mov
xlat
into
shrl
inc
xchg
dec
xchg
mov
jb
repz
xor
or
je
push
sbb
call
lds
leave
jge
sbb
mov
pusha
and
mov
fstpt
insb
js
xor
mov
fs
je
jo
enter
lds
dec
bound
daa
xor
shlb
outsl
cmpsl
ss
fldcw
sbb
mov
repnz
ret
dec
cld
jno
lods
loope
dec
pop
scas
push
sbb
pop
mov
dec
push
cmpsl
scas
xlat
dec
pop
jns
jns
test
ret
int3
scas
out
xchg
sti
rcr
sahf
mov
lods
sub
push
add
push
pop
xchg
out
sub
out
mov
lahf
mov
int3
fisubs
insb
cmp
cmpsb
sbb
or
daa
mov
push
imul
outsl
cmp
push
ljmp
sub
in
fdivs
sbb
sahf
in
sti
mov
daa
sub
mov
out
or
xor
repnz
lret
mov
adc
add
cmp
jno
lock
int3
leave
jo
pop
imul
bound
cmp
xor
fmulp
pop
in
pop
adc
sahf
dec
and
arpl
or
mov
int3
pushf
and
cs
cmp
in
adc
jne
or
xor
shlb
cltd
xchg
jno
pop
pop
rclb
inc
fildl
ret
add
mov
cmpsl
inc
sub
mov
jl
pop
add
dec
sbb
or
in
outsl
inc
shrl
xchg
mov
into
imul
frstor
lods
push
mov
xchg
add
mov
add
xchg
adc
sbb
test
movsb
addr16
jp
add
jmp
nop
call
and
pop
cwtl
jle
sbb
js
pop
pushf
push
sbb
xchg
sbb
mov
mov
aaa
adc
cmp
rcr
dec
jbe
xor
mov
dec
cmp
in
sbb
scas
inc
jne
or
add
test
sub
jno
stos
inc
aas
cmp
or
movsl
pop
imul
dec
fstp
push
ds
and
dec
xor
mov
loop
enter
sti
and
call
movb
mov
test
inc
inc
inc
and
jmp
fisttps
or
pop
mov
sbb
cs
and
std
ss
jne
rcrl
cwtl
in
mov
push
sbb
rolb
call
js
jae
pop
xor
mov
mov
mov
cmpsl
push
popf
jg
aam
dec
adc
sbb
inc
add
push
test
lds
pop
movsl
lods
shlb
dec
and
xlat
call
cltd
mov
xlat
or
lods
fcmovb
rcr
inc
sbb
out
xlat
cmpsb
jg
cmc
mov
sti
add
std
ss
fadd
inc
out
sub
dec
cmpsb
inc
mov
jg
ret
leave
xchg
xor
mov
pop
js
movsb
nop
add
dec
sub
mov
sub
pop
xchg
cltd
cmp
pop
xlat
push
sahf
icebp
into
mov
scas
mov
sub
cmp
es
repnz
out
fnsetpm(287
inc
addr16
stos
push
sbb
mov
jo
gs
ret
pop
pop
das
xchg
cmp
test
pop
jno
cmp
jb
inc
jns
jg
sub
in
or
mov
cmc
push
into
sbb
ret
movsb
sub
repnz
neg
or
sbb
in
popa
or
dec
add
mov
sub
pop
rorb
dec
loopne
loop
jge
repnz
adcl
cwtl
hlt
pop
cmpsl
mov
in
adcl
fcmovne
push
data16
xor
sahf
jbe
jae
iret
and
insl
daa
dec
mov
xor
jecxz
lock
popf
test
jne
dec
stos
xor
lods
orl
xchg
dec
scas
inc
mov
xchg
in
in
fcmovu
xor
lds
pushf
and
adc
push
mov
movsl
aaa
dec
xchg
fistps
mov
aaa
xchg
addr16
fnstsw
test
and
or
lret
scas
or
cs
lea
test
movsb
push
filds
sbb
xor
movb
into
mov
add
arpl
jne
outsb
jg
mov
outsl
adcl
lahf
inc
leave
scas
out
mov
cwtl
movsb
stos
cmp
ret
aaa
cmp
xchg
and
cwtl
mov
das
cli
cmp
test
movb
insb
in
pop
mov
dec
xor
mov
push
daa
lds
hlt
push
arpl
movhps
cmp
test
shrl
into
cmc
or
adc
sbb
clc
shrl
adc
xor
std
inc
imul
inc
insb
xchg
ficoms
mov
mov
pop
fstpl
pop
add
and
push
pop
shrl
mov
movsl
testl
decb
xor
pop
or
cmpl
xchg
leave
mov
sub
sub
mov
shr
push
jl
cs
and
jae
inc
inc
sbb
or
xlat
shl
mov
mov
pusha
mov
xchg
rorl
xchg
lods
lock
pop
adc
push
jno
sub
or
push
scas
icebp
mov
jo
and
stos
lret
cmp
ret
cs
dec
pop
xchg
pop
cmp
xchg
mov
pushf
aas
test
sub
mov
call
inc
test
call
cmc
sub
shl
scas
sub
sti
pushf
shl
pop
fcmovnu
aaa
xchg
sub
insb
sub
das
cmp
dec
sub
xchg
and
push
ss
movsb
dec
cmp
cmc
adc
or
test
inc
ret
pop
gs
or
sub
outsl
push
mov
lock
scas
pop
jo
pop
sahf
inc
mov
adc
stos
dec
inc
adc
inc
and
hlt
lods
pusha
mov
push
lret
imul
mov
jae
push
sarl
pop
jp
lahf
add
idivb
dec
mov
sub
lds
pminub
or
sbb
jbe
mov
test
ljmp
or
sbb
je
lahf
iret
mov
je
cli
push
pop
xchg
sarb
aam
mov
cli
ret
jbe
aaa
push
lods
mov
add
and
adc
lods
gs
aas
adc
jae
cmpsl
ret
and
add
in
sbb
lea
push
push
adc
es
insb
imul
jl
cmc
lret
jo
leave
adc
out
fwait
jmp
or
add
push
mov
sbb
and
adc
je
cmp
cmp
mov
addb
dec
shll
mov
xchg
mov
push
sub
xor
popf
ss
pop
xor
aaa
aad
loopne
jl
movsb
in
xchg
sbb
lods
push
dec
sbb
adcb
mov
adc
cmpsl
or
sbb
stc
int
in
pop
jb
fidivrs
mov
in
loopne
mov
in
sub
xor
stos
jecxz
pusha
int
jmp
imul
sub
xor
insb
stos
popf
sbb
test
mov
fsubr
jp
lret
decb
lahf
pop
mov
inc
mov
jae
pop
pop
clc
and
in
outsb
mov
jmp
xchg
push
ret
popf
jl
xchg
fwait
or
lods
jl
clc
mov
xor
mov
test
insl
mov
sti
dec
lock
leave
pop
lahf
fsubrl
scas
or
dec
lcall
leave
in
pop
out
xchg
or
push
inc
std
xor
mov
cmp
xor
push
adc
or
push
sbb
rclb
ret
insb
cwtl
pop
addr16
lahf
das
pushf
subb
int3
cmpsb
sbb
mov
clc
mov
mov
xor
je
pavgw
push
std
xchg
mov
push
pop
mov
lret
sub
aas
or
lods
fnsave
sub
push
mov
add
punpcklwd
xor
sbb
pop
cmp
dec
imul
rolb
push
popa
push
stc
fldcw
lret
cmp
cmpsl
clc
pop
mov
push
push
cli
fwait
sub
outsl
xor
xor
es
inc
pushf
sbb
popa
cmp
jp
movsb
popa
xchg
sbb
push
xorb
sbb
mov
cli
jge
jnp
mov
fucomi
dec
mov
popa
pop
arpl
in
fcoms
mov
hlt
movsb
loope
jnp
in
cs
in
rcll
mov
cmc
or
imul
jne
jmp
or
pop
mov
nopl
push
test
stos
mov
fistpl
fdivp
push
fidivrs
push
jbe
scas
dec
push
pop
shrl
inc
jmp
out
sbb
push
mov
fnstenv
mov
and
pushf
mul
mov
dec
jge
cli
xor
fs
pusha
cmp
or
jge
pop
inc
into
fcoms
adc
js
mov
add
mov
pop
xchg
add
cmp
inc
rolb
cmp
pop
dec
fs
scas
iret
ja
decl
jae
pop
scas
push
jecxz
popa
ja
loop
lds
fmuls
add
mov
pop
daa
push
mov
mov
xor
int
fisttpl
mov
xchg
ret
jno
push
leave
cmp
mov
sub
dec
sarl
loop
sbb
test
push
push
xchg
dec
jg
shrl
push
fsubl
inc
add
in
sbb
loope
xchg
jo
dec
lods
in
mov
mov
inc
xor
mov
enter
cld
into
jne
sbb
pop
inc
sbb
popa
cltd
cmp
loope
push
mov
dec
jl
adc
ss
sahf
inc
dec
pop
pop
mov
mov
adc
adc
out
jb
stos
push
push
jp
pop
sbb
fwait
outsl
fwait
ja
pop
popa
or
rcrl
pop
pop
aas
push
out
inc
jg
mov
push
repnz
mov
pop
add
or
rcll
in
int3
or
xchg
sahf
mov
ss
lahf
orl
sub
mov
inc
xor
and
push
sub
fwait
lds
stos
test
pop
ljmp
xchg
push
jl
jp
and
nop
push
shrb
popf
xchg
inc
lea
imul
in
inc
clc
add
daa
test
and
inc
in
adc
xchg
adc
int
lea
cmp
sub
or
xor
jg
push
gs
sahf
ret
or
jo
lcall
fwait
insb
mov
stos
sbb
xchg
push
cltd
pop
pop
xor
xchg
xor
fisttps
add
xor
orb
dec
into
pop
mov
fdivs
push
jmp
addr16
cmpsl
cltd
cmc
push
fwait
outsb
repnz
xchg
addr16
jnp
gs
inc
add
arpl
or
sbb
pop
jmp
add
out
mov
cwtl
inc
imul
mov
jl
xchg
pop
fisttpl
push
aaa
and
sti
lds
fsubr
sahf
in
test
subb
jg
icebp
pop
mov
mov
out
fdivl
pop
ljmp
push
sti
sub
push
cmp
cmpl
js
push
fucomi
int
pop
mov
xchg
ja
int3
jne
pop
push
stos
and
testl
in
out
int3
cwtl
add
mov
outsl
sbb
and
fldl
into
and
in
pop
enter
add
mov
icebp
sub
sub
js
push
jno
imul
arpl
test
and
int3
mov
dec
pop
scas
mov
std
and
icebp
xchg
adc
sub
cmp
cltd
xor
das
sub
cmp
add
movsl
dec
jle
pushf
ret
hlt
mov
xlat
push
or
pop
sbb
mov
out
sarb
sbb
cmp
cli
push
movsl
pop
pusha
sub
push
xchg
jg
jae
xlat
leave
popf
add
pop
das
sbb
or
push
mov
pop
imul
cmp
dec
and
cmp
hlt
mov
pop
icebp
imul
mov
loopne
push
inc
push
int3
popf
fwait
and
mov
out
jo
adc
mov
lods
or
dec
adc
sbb
pushf
jmp
xchg
lds
cld
outsl
ja
repz
jl
pop
or
inc
pop
in
add
sbb
jg
andl
inc
pop
sbb
pop
inc
and
popf
add
and
lahf
and
out
xchg
insl
sbb
nop
cli
outsl
sahf
gs
xchg
adcl
ljmp
push
fdivrl
notl
stos
sbb
js
popa
sbb
push
dec
xor
sbb
fstp
arpl
ret
sbb
cli
rorl
or
push
mov
out
iret
push
stos
xchg
pop
mov
adc
mov
xchg
push
mov
pusha
push
fwait
mov
orb
lds
or
imul
adc
pushf
or
inc
jns
lds
sbb
lods
mov
cmp
sti
in
ljmp
scas
pop
push
sub
lea
mov
xor
sub
sub
push
xchg
mov
push
xor
add
loopne
add
in
xchg
lock
jae
xor
aas
test
mov
pop
adc
xor
mov
mov
xor
dec
adcb
test
push
xor
push
shll
scas
adc
or
lcall
es
cmpsb
and
aad
roll
bound
push
sbb
in
test
adc
loope
pop
lods
mov
lock
inc
adc
ss
pop
xchg
sbb
popa
outsb
int3
flds
cmpsb
xchg
rcrb
repnz
mov
dec
cli
xchg
dec
jno
xor
out
push
dec
inc
sub
pop
add
das
lock
jno
jno
mov
mov
mov
push
rcrb
iret
inc
sarb
js
cmc
cmp
xchg
and
scas
jb
xchg
xchg
scas
lods
sbb
les
pop
mov
scas
inc
sub
cmp
lret
enter
xchg
push
test
adc
dec
movsb
lret
outsl
enter
cmc
or
sub
adc
mov
add
adc
inc
or
sub
adc
lahf
int
dec
or
js
dec
xor
scas
fstl
es
jl
cmp
lea
es
pop
inc
xchg
jns
cld
or
loop
pop
pushf
in
adc
xchg
push
lcall
add
popf
jmp
xchg
jo
xlat
inc
ret
cltd
cmp
movsb
mov
mov
mov
insb
mov
cmp
in
xor
jae
or
mov
nop
inc
mov
xchg
inc
test
sub
jp
jecxz
aaa
xor
rclb
mov
ret
das
add
bound
out
repz
jp
ret
mov
xchg
testb
jne
xchg
in
xor
movsb
shll
mov
mov
pop
sbb
mov
popa
icebp
repz
or
sub
mov
pushf
cmp
cmp
in
jne
call
and
jg
hlt
add
icebp
icebp
push
stos
fcomi
repnz
mov
imul
sbb
pop
push
pop
sbb
jle
lods
or
pop
xor
in
pop
fwait
xorb
fnsave
jb
aam
hlt
imul
pop
jnp
or
outsl
mov
aad
dec
pushf
xchg
data16
mov
insl
sbb
pop
scas
scas
jg
insb
movsb
dec
xchg
in
xor
popa
jnp
jno
jg
and
jno
int3
inc
sub
sbb
sarl
lds
and
jne
test
add
pusha
or
push
fidivrs
adc
push
stos
pop
adc
adc
and
rcrl
loopne
mov
imul
jo
mov
aas
jo
clc
sbb
push
call
xchg
mov
scas
pop
int3
outsb
data16
adc
push
sarl
dec
adc
cmp
push
xor
dec
shll
jp
cmp
xchg
repnz
mov
imul
cmc
pop
xchg
mov
dec
addr16
sub
popf
test
jmp
xor
xlat
sbb
push
insb
es
cwtl
leave
inc
push
jbe
imul
pop
push
out
sbb
test
js
or
pushf
pushf
dec
and
aad
inc
lock
test
and
lret
cmp
fabs
inc
fnstsw
pop
repnz
ficoms
dec
push
cmpsl
cli
repnz
mov
jp
clc
add
or
dec
push
sub
add
inc
dec
stos
pop
jl
cmp
rclb
mov
sub
sbb
popf
ja
xchg
jnp
dec
adc
pop
pop
lahf
rcrl
loop
xor
pushf
mov
mov
mov
aam
or
jmp
inc
mov
out
mov
dec
mov
js
call
adc
sahf
pop
jb
loopne
call
loopne
jp
cli
subl
outsb
outsl
cltd
pusha
fmull
je
xchg
dec
jg
test
push
or
inc
lcall
mov
adc
xlat
aam
cmp
add
jnp
adc
add
add
xor
fidivl
push
dec
bound
inc
xor
faddl
out
cld
cmp
cmp
sbb
xchg
rcrl
repz
mov
xchg
movsb
pop
fidivl
cmp
cmp
stos
cmpsl
sbb
add
in
pop
out
sub
pop
xor
aas
sbb
adc
ret
lock
leave
cmpsl
aas
or
fwait
jnp
mov
lods
js
rcrb
mov
sti
mov
or
out
sbb
pusha
pushf
add
testb
push
dec
mov
add
sub
xor
xchg
xorb
xchg
push
add
out
dec
fs
mov
movsb
mov
pop
outsb
jle
jb
aas
and
mov
inc
push
aas
jle
call
test
jg
inc
xor
inc
sub
or
cmp
movsl
pop
mov
cwtl
cmp
jge
xor
cmpsl
xchg
cli
jo
jg
mov
dec
subl
outsl
or
leave
or
xor
fwait
sub
rolb
inc
popl
dec
inc
pop
fmul
daa
pop
cmp
loopne
sub
insl
std
fwait
lcall
sahf
mov
icebp
dec
cmpsb
mov
xor
ljmp
cmpl
gs
test
cwtl
mov
daa
inc
cli
loop
mov
cmc
sbb
push
mov
lret
sub
xor
lock
fsubrs
cltd
adc
xor
inc
jmp
jne
lret
fildl
mov
mov
pusha
jne
bound
mov
push
inc
dec
test
adc
jge
adc
sub
pop
call
or
cmpsb
sub
mull
mov
lods
cs
sbb
les
sbb
fdivrl
mov
mov
fldt
les
cmpsl
jp
pop
loope
inc
pop
inc
fiaddl
std
in
dec
push
add
jp
sub
aad
dec
dec
jmp
sbb
mov
insl
cli
arpl
sbb
hlt
adc
add
in
mov
cwtl
jle
int3
pop
add
imul
stc
xor
cmp
lahf
push
or
loope
push
movsb
push
sub
jb
dec
nop
std
adc
mov
pop
cmpsl
inc
test
pop
mov
iret
inc
mov
dec
pop
es
inc
popf
sbb
add
mov
xor
pop
mov
loope
push
add
mov
int
sbb
xlat
pop
ljmp
xchg
lahf
ja
lcall
adc
pop
adc
pop
xchg
stc
pop
push
xor
mov
in
dec
sub
fst
lods
loop
mov
push
pop
jl
pop
repnz
or
mov
popf
out
jb
scas
jmp
shll
loop
int3
leave
pop
push
addb
jno
scas
mov
lcall
daa
mov
setge
add
ds
dec
cltd
cmp
add
inc
imul
add
pop
mov
aaa
push
clc
cmp
lret
lock
out
gs
jnp
fs
inc
add
mov
push
pop
inc
xor
cltd
mov
xchg
dec
mov
inc
xor
ud2
and
jo
lcall
insb
mov
popa
stos
ja
add
sbb
push
mov
inc
mov
fadds
mov
inc
fstps
imul
sbb
mov
push
nop
pop
and
aas
test
pop
sub
insb
int
push
jmp
ficompl
pop
jbe
ss
data16
mov
cwtl
push
xchg
jmp
cmp
shrb
leave
xchg
pop
test
es
add
stos
inc
cmp
movsl
mov
lret
call
cmpsb
mov
cli
adc
data16
cld
sub
and
js
out
mov
sarl
nop
xchg
cmp
pop
push
rorb
jno
imul
dec
jno
call
or
scas
out
dec
push
inc
out
sub
mov
adc
fcmovnu
stos
call
xchg
or
loope
or
add
ss
aas
stos
sub
iret
test
xor
mov
jmp
sarb
and
or
jmp
cld
jmp
imul
cmp
psllq
push
in
popf
mov
mov
jge
jb
in
sbb
test
lods
inc
cltd
push
cli
inc
aad
ds
inc
adc
cmpsl
imul
mov
test
mov
sbb
mov
xor
fwait
popw
pop
mov
sub
daa
stc
frstor
gs
jle
sub
xchg
popf
sbb
mov
clc
mov
gs
cmpsl
sub
in
or
push
loopne
insb
xor
mov
pop
cmp
xchg
xchg
mov
cwtl
jmp
cmp
lds
lcall
shlb
mov
mov
ret
leave
jge
stos
loope
or
or
adc
nop
lret
cmp
sahf
arpl
adc
cmpb
movq
stos
repz
sub
dec
dec
out
clc
dec
jnp
movsb
pop
mov
arpl
fdivrs
sbb
fnsave
adc
mov
shl
lea
and
cld
andb
das
cmpsb
jnp
xor
lds
xchg
fdivl
outsl
xor
aam
push
dec
jnp
mov
ret
in
mov
push
clc
pop
imulb
lret
movsb
and
in
adc
test
sbb
fadd
mov
sbb
ds
or
out
jl
xchg
fdivrs
imul
jnp
jecxz
and
js
or
fincstp
fs
data16
and
test
stos
cmp
setbe
cmp
jno
in
mov
punpcklbw
xchg
out
push
or
pop
mov
nop
jg
sbb
xor
sub
mov
lahf
fidivrs
add
or
lea
addr16
outsl
nop
loopne
mov
insl
repnz
add
cltd
test
mov
call
bound
dec
outsl
cmp
inc
sbb
sub
mov
add
inc
imul
jns
andl
jmp
dec
in
mov
js
lret
sub
scas
or
popf
pop
jae
test
pop
xlat
push
mov
inc
sub
in
xchg
movsl
outsl
leave
lahf
pop
cmp
cwtl
and
fistpl
push
jo
push
xchg
stos
fisubl
insb
mov
sbb
ja
dec
fldt
sub
adc
test
sbb
mov
gs
cmc
addl
xor
outsb
or
xchg
cmp
jge
mov
cmp
sub
outsb
insl
pop
test
mov
movsl
leave
xorl
mov
push
lds
mov
stos
rcll
dec
sbb
std
aad
or
in
push
cmp
xchg
lcall
jb
test
xor
mov
xchg
jbe
push
mov
enter
cmp
loope
add
lret
adc
mov
pop
sub
adc
insl
flds
mov
or
aad
add
inc
scas
cmp
js
lahf
lcall
test
lcall
aad
pusha
stc
pop
sbb
xchg
test
mov
test
insb
xchg
or
pop
hlt
popf
adc
lds
push
cld
mov
aad
fidivl
aas
inc
jnp
xor
insb
mov
int
flds
scas
mov
movsl
cmc
jl
or
mov
dec
insl
aas
mov
push
jge
stos
sub
ss
jge
add
aaa
mov
subb
cmp
test
sbb
xchg
jmp
fmuls
or
add
aaa
scas
or
cwtl
ss
scas
loope
aaa
xor
pop
inc
jecxz
lods
ret
add
sub
out
cmpsb
fists
pushf
pop
xlat
inc
test
fdivs
jbe
test
loop
mov
push
ret
aas
push
xchg
fbld
jmp
fstpl
inc
popf
pop
bound
pop
shr
xchg
rcrl
jg
sub
aaa
cmc
bound
xchg
xchg
rclb
loope
pop
adc
or
xor
mov
jb
movsb
call
nop
stc
xchg
sbb
rorb
xchg
xchg
mov
add
push
sub
andb
jge
imul
scas
mov
pop
xchg
bound
lods
ds
movsl
icebp
cmc
test
xchg
xor
push
adc
inc
lods
adc
dec
xchg
or
push
sub
arpl
push
mov
mulb
and
mov
cltd
add
cmp
test
or
push
push
out
sbb
jno
testl
mov
ja
imul
add
fwait
jl
int
scas
mov
and
mov
cli
rcl
ficomps
je
decb
mov
jo
add
xchg
rcl
iret
insb
hlt
or
outsl
ja
inc
sub
movsb
pop
gs
and
xor
push
mov
es
fimull
fidivrs
inc
push
push
add
shrl
sahf
adc
insb
or
es
addl
xchg
xor
js
insl
stc
popf
and
push
xlat
dec
xchg
dec
inc
test
sbb
sbb
ret
add
mov
scas
pop
ret
or
data16
jmp
dec
test
lret
sub
movsl
push
shll
pop
stc
lcall
mov
insl
pop
and
mov
or
mov
lret
pop
mov
cmp
pusha
test
adc
push
enter
add
shlb
mov
lret
dec
xor
inc
fiadds
adcl
fcomps
and
xchg
test
push
and
sub
push
sub
pop
sti
scas
mov
adc
addr16
in
lods
cli
inc
leave
dec
sbb
mov
cmp
pop
mov
into
fldl
jno
cmp
cmp
pusha
popf
sahf
sbbb
adcb
sub
scas
dec
flds
and
sbb
cs
sbb
jle
mov
cmp
fcmovbe
adc
mov
or
mov
mov
xchg
imul
adc
sbbl
stc
test
xor
test
sbb
ret
jl
jns
psubsw
sarl
inc
cmp
xchg
mov
xor
dec
rcrl
sahf
rorb
test
scas
jmp
out
arpl
mov
cmp
test
push
out
pushf
inc
xlat
xorl
loopne
adc
out
in
leave
jne
dec
and
insl
fcomps
sub
imul
in
sbb
dec
lret
inc
nop
jo
or
and
mov
push
in
mov
or
dec
test
movsb
popf
xchg
mov
mov
mov
inc
notb
jecxz
cmp
loop
scas
push
ds
sub
inc
mov
fnstenv
push
icebp
inc
stc
dec
and
das
xchg
mov
and
flds
xchg
lock
push
loope
js
dec
shlb
push
mov
xchg
addr16
xchg
outsb
dec
jns
call
mov
test
out
cwtl
sub
shll
mov
inc
sbb
dec
add
cld
loope
lret
inc
mov
jg
sbb
sub
call
rolb
push
cltd
cmp
dec
cmpb
mov
xchg
nop
and
lods
into
dec
adc
pop
fwait
out
and
mov
inc
enter
rorb
cmp
rorl
in
fsubs
loop
enter
xchg
in
rorb
or
in
xor
dec
add
jns
sub
mov
repnz
test
push
mov
push
push
mov
and
sbb
sbb
lock
roll
lods
movsb
outsb
popf
fildl
pop
xor
adc
test
xchg
arpl
lret
sub
mov
jg
clc
sub
cmpsl
push
jl
fidivrs
jno
cmp
xchg
movsl
lahf
fimuls
jmp
repnz
inc
icebp
xchg
cmp
add
mov
mov
les
lea
cmpb
shlb
or
add
xchg
jo
hlt
mov
sub
adc
cmp
sti
xor
sbb
add
and
outsl
les
cmc
cwtl
cmp
test
pop
loopne
mov
xchg
lcall
in
or
mov
mov
jae
loop
stos
cmpsb
dec
shll
je
or
lock
xchg
inc
mov
jmp
into
lea
dec
in
mov
jnp
addl
mov
or
add
jge
mov
mov
inc
cmp
sbb
push
and
and
xchg
pop
es
sub
test
psadbw
mov
pop
je
out
cmp
mov
jl,pt
imul
jae
adc
cs
shl
popa
rcrb
pop
aad
lcall
sbb
sbb
xchg
and
xchg
jg
sbb
sub
push
and
jl
sbb
sub
stos
sub
out
jb
gs
ljmp
push
inc
repz
and
push
std
xchg
xorb
jl
pop
in
mov
push
outsb
imul
into
aas
cmc
pusha
pop
sbb
xor
sbb
aaa
cmpsb
adc
sbb
mov
clc
and
mov
sbb
subl
pop
pop
pusha
or
inc
and
xor
xchg
lods
arpl
test
shll
sbb
loope
inc
push
mov
mov
sub
fwait
push
xchg
cmp
inc
test
inc
fistpl
xchg
sbb
dec
xor
ret
add
jbe
and
fidivl
pop
loop
fdivp
ret
add
sub
out
pop
dec
fldenv
hlt
dec
adc
inc
mov
popa
jne
push
xor
cmp
in
data16
mov
xor
js
sub
filds
cmp
jne
add
or
or
rcrl
jge
outsb
pop
hlt
adc
xchg
mov
xor
inc
call
pop
lods
add
sub
mov
add
or
add
lahf
enter
test
fs
loope
jns
jge
adc
lcall
popf
pop
xchg
sub
push
jle
sub
bound
adcl
add
mov
sub
add
add
jl
pop
lock
outsb
mov
push
outsl
mov
sbb
jno
insb
sti
scas
sub
enter
dec
adc
and
es
aas
test
stos
das
jp
jmp
scas
int3
pop
pop
adc
popa
jle
lods
stos
sub
adc
test
movb
cmp
dec
pop
mov
stos
std
mov
iret
xor
shr
pop
loopne
cld
inc
lea
pusha
das
in
mov
inc
and
dec
pop
mov
push
and
pop
mov
iret
mov
mov
sarb
ds
dec
lds
icebp
fisubrs
inc
cmp
pop
enter
outsl
jle
jno
cmp
adc
stc
icebp
jb
jno
mov
cmp
push
dec
adc
and
or
or
lods
sbb
pop
cmp
test
fbstp
lret
xchg
std
popl
int3
subl
int3
cld
loope
jle
mov
adc
adc
fimuls
cmp
rorb
push
sbb
or
pop
push
pop
jno
or
mov
bsr
jb
les
ljmp
add
mov
jno
in
jl
adc
into
lgs
push
fadd
mov
scas
adc
int
je
pusha
push
in
mov
adcb
jp
pop
shll
jl
imul
pop
js
arpl
lahf
jle
pushf
dec
push
popf
loope
lods
pop
pop
mov
dec
sub
inc
mov
sbb
out
lea
fdiv
js
inc
push
or
jg
lahf
sub
xchg
mov
adc
js
push
mov
push
out
ficoml
push
dec
push
fucom
inc
xor
mov
push
add
js
push
lahf
in
loop
pop
repnz
mov
xchg
jmp
and
xchg
mov
jb
push
sti
fwait
mov
lret
sbb
mov
lret
sbb
inc
adc
mov
out
jo
aaa
add
push
andps
out
mov
lds
iret
push
daa
cs
fadds
movsl
fistpl
and
mov
add
xchg
mov
xlat
in
adcb
std
mov
xchg
bound
loopne
pop
xlat
xor
cmp
sahf
mov
out
inc
cmp
lods
and
push
sti
pop
aad
test
xchg
mov
in
pop
xchg
dec
fldl
lea
mov
hlt
ret
inc
aad
aam
lret
ljmp
jb
loop
adc
xor
xchg
inc
leave
mov
cld
shlb
pop
xchg
add
pop
push
push
test
push
xlat
push
add
and
sub
mov
out
xchg
xor
test
xor
test
mov
imul
and
fcomps
mov
stc
and
fldl
loope
repz
push
cmp
push
cmp
aam
dec
rclb
insl
pop
pusha
arpl
sbb
inc
nop
cmp
mov
in
int
xchg
mov
int
shll
addb
or
push
fnstenv
mov
xor
mov
ret
or
pop
sti
pop
fdivrs
pop
orb
insb
int3
sub
repz
jge
push
add
orb
movsl
xchg
fistpll
or
push
or
mov
mov
movsl
push
xchg
or
pop
int3
sahf
jo
adc
cmp
sti
mov
adc
inc
std
out
mov
adc
or
cmp
and
rcll
jle
inc
adc
dec
sub
movsb
and
in
in
lret
stc
adc
xchg
push
imul
dec
fwait
or
daa
mov
aas
cwtl
ss
cmp
add
mov
add
inc
jnp
push
aad
ficoml
jg
mov
jne
and
shr
lret
mov
and
aaa
xor
ret
std
aad
stos
xchg
les
jne
lock
aam
cmpsb
dec
imul
adc
jbe
and
iret
sbb
shll
cmc
imul
cmp
cmp
push
or
sub
aam
jmp
int
aaa
out
pop
mov
cmp
xchg
das
sub
fldt
pushl
and
rclb
popa
pop
and
push
out
sub
ds
pop
das
sub
in
cs
cs
rorb
dec
mov
sbb
mov
sub
sub
ljmp
mov
jl
jo
cmp
rcl
push
in
scas
shl
in
inc
fidivrl
leave
cli
in
das
insb
cmc
loope
jecxz
add
cmpsb
fidivl
mov
mov
lcall
fs
popa
sbb
pop
cmp
push
scas
repz
out
or
mov
cmp
dec
lods
mov
addl
mov
enter
cmc
aaa
stos
mov
stc
or
dec
jle
std
pop
cmp
insl
push
xorb
mov
push
pop
loop
mov
loop
jmp
push
mov
push
inc
xor
orl
rcl
jbe
jne
sahf
clc
decb
lcall
cmp
mov
fisubs
gs
sbb
mov
nop
je
stc
add
outsl
fxch
cmp
mov
mov
sbb
icebp
imul
rolb
popa
cli
aad
mov
mov
cs
mov
jbe
enter
out
and
sbb
adc
pop
dec
add
lods
aam
clc
lret
js
mov
sahf
fidivrs
add
adc
cmp
or
not
scas
mov
das
xor
cmp
inc
les
aam
das
push
cwtl
sub
sti
sbb
jecxz
sbb
in
sub
adc
jno
mov
adc
xlat
push
cmp
dec
nop
daa
inc
movl
or
pop
popa
icebp
inc
mov
dec
sar
mov
mov
and
push
es
call
or
dec
push
icebp
cs
inc
pop
adc
jbe
notb
sub
jmp
lret
lods
add
mov
shlb
cmp
shl
in
sbb
jno
xor
lods
test
out
sub
ljmp
inc
or
scas
jo
jo
xor
test
adc
fcoms
xchg
cltd
mov
arpl
dec
inc
stos
mov
lret
adc
and
cli
aaa
lods
mov
and
sub
mov
pop
cmpl
sbb
pop
ficompl
icebp
or
test
popa
cmp
dec
pop
lcall
enter
xchg
xor
xchg
test
test
xchg
or
rcr
sbb
mov
lods
xchg
pop
push
mov
xchg
push
insl
pop
adc
orb
jp,pn
ljmp
mov
inc
push
idivb
adc
lock
or
adc
clc
idivb
lahf
pop
mov
iret
mov
cmpsb
out
pusha
mov
divb
dec
aaa
dec
loop
mov
imul
int3
pop
lret
filds
add
mov
mov
add
push
test
dec
pop
in
xchg
and
addr16
inc
xchg
clc
or
icebp
mov
cmpsb
ja
jns
jge
pusha
mov
mov
in
mov
mov
xlat
xchg
jge
leave
shll
xchg
pop
dec
or
loope
mov
mov
sbb
aad
pop
and
cmp
mov
loope
popa
jo
idivl
add
sahf
fistpll
nop
lahf
sub
dec
cmp
push
dec
mov
shll
sub
xchg
xchg
jmp
and
rep
inc
aad
lahf
popa
rol
imul
mov
jae
out
jne
int
cwtl
or
cmp
or
fstpl
out
mov
das
call
mov
push
mov
or
rdtsc
ss
not
in
movsb
add
imul
push
jb
sbb
mov
scas
stos
ja
mov
cli
sub
push
popf
fnstsw
je
addr16
inc
mov
mov
xor
mov
sbbb
cwtl
push
jae
inc
cmpsb
mov
stos
mov
iret
arpl
push
pop
jnp
cli
aam
xor
and
rorb
inc
and
xchg
jae
mov
pop
push
cmpsb
cmpsb
add
les
mov
mov
mov
ltr
cmp
ljmp
test
repnz
or
sbb
xlat
push
test
jl
sub
adc
test
scas
xchg
push
mov
mov
mov
adc
add
or
xchg
mov
aaa
fsubrs
adc
mov
inc
mov
ljmp
notb
popf
pop
pop
xor
scas
cmpsb
shll
mov
cmp
or
cwtl
cmc
push
aam
adc
rclb
inc
notb
scas
cmc
adc
mov
in
pop
dec
sti
inc
jns
insb
repz
push
adc
lret
sbb
outsb
es
jns
icebp
sti
sahf
inc
decb
mov
out
lret
les
icebp
pop
jnp
mov
mov
xchg
mov
movsl
dec
mov
imul
dec
shl
rorl
cld
int3
push
icebp
add
fdivs
or
mov
sub
idivl
je
push
lods
dec
xchg
push
adc
sti
jmp
fists
pop
in
inc
jb
jmp
mov
dec
cmp
cmp
stos
sbb
inc
mov
scas
adc
cltd
mov
cwtl
jae
mov
xor
leave
pusha
jb
or
inc
lret
cltd
push
sbb
lret
lods
and
les
xor
mov
adc
cs
mov
cmp
mov
cmp
rcrb
jecxz
ljmp
jg
sbb
add
les
test
movsl
push
orl
jne
out
inc
mov
mov
adc
inc
lret
sbb
daa
pop
cmp
iret
insb
mov
sub
dec
lods
pushf
jl
add
clc
xor
pop
rorl
shl
xlat
les
icebp
mov
sub
sbb
bound
cld
adc
inc
xchg
aam
into
push
mov
js
and
pushf
movsb
nop
push
sub
pushf
push
xchg
and
loop
jb
ror
jo
pop
cmp
jmp
sub
inc
add
cmp
movsl
mov
popf
push
ror
cmp
jmp
lcall
dec
sub
jbe
stos
ret
mov
mov
xor
dec
test
pop
adc
pop
xchg
sub
mov
sbb
jmp
cltd
ret
push
pusha
stos
int3
pop
xchg
sbb
adc
adcl
xor
add
xor
fistpl
mov
shlb
dec
sub
cmp
scas
mov
or
testb
and
sbb
pop
jp
or
aad
cmpsb
lahf
adc
stos
adc
cmp
dec
fbld
push
push
and
test
dec
loope
push
lret
push
out
stc
or
mov
enter
pop
lods
pop
sbb
sub
jge
cltd
rcrb
adc
rcrl
outsb
pusha
pusha
pushf
push
and
ret
inc
sbb
and
sbb
pop
popf
jns
push
mov
jae
stos
iret
adc
imul
mov
out
clc
mov
negl
pop
mov
ret
call
cld
and
notl
jge
sbb
sub
leave
stos
cmpsb
cmp
push
or
inc
leave
push
and
or
repz
jle
jg
roll
das
call
cmp
es
dec
or
lret
int3
sbb
out
out
outsb
push
cltd
mov
bound
icebp
loope
adc
fs
jnp
cmp
add
or
aad
mov
xchg
and
push
sbb
aam
cltd
push
fldcw
lock
pop
push
fcoms
aam
xchg
lcall
sbb
jl
and
sarl
stos
ret
test
notb
out
inc
jecxz
push
lret
sbb
sub
ret
push
mov
jne
call
fstp
push
xchg
jl
lods
cmp
adc
bswap
xor
jns
add
pop
inc
sub
fcoml
push
and
sbb
hlt
mov
shl
pop
out
movsl
xor
fldcw
mov
rcr
mov
mov
jg
add
fiaddl
pop
stos
fdivs
cld
adc
in
adc
add
xchg
and
rcl
iret
mov
and
pop
mov
dec
dec
adc
nop
rorl
cmpb
jg
dec
jne
adc
sub
jae
punpcklbw
adc
dec
or
push
addr16
insl
test
dec
inc
scas
call
push
sarl
fsincos
cmp
jl
inc
pusha
xlat
sbb
js
loope
cs
fsubl
mov
and
jae
jmp
pop
push
test
test
cmp
fisttps
cld
push
or
je
out
push
gs
hlt
fnstcw
fsubl
sbb
enter
jo
sub
repnz
insb
outsb
mov
sti
in
dec
dec
lea
and
pop
fimull
das
adc
mov
xor
shrb
or
aam
lahf
adc
int3
pusha
xlat
inc
ljmp
addr16
test
aad
fdivr
or
lock
jecxz
out
rcrb
adc
and
mov
out
or
imul
shl
fstpl
fwait
stos
dec
lea
sbb
dec
and
out
loop
jbe
mov
repz
sub
jns
inc
scas
jne
mov
fadd
leave
pop
adc
shlb
pop
test
rorl
pop
cs
outsb
aas
test
es
dec
mov
mov
adc
cli
mov
inc
cs
je
ficoml
lods
or
shl
shlb
jmp
fdivrl
lods
insb
pushf
sub
xor
ficompl
push
outsb
aas
mov
popf
and
fdivrs
pop
shr
out
dec
movsb
fistl
outsl
push
fwait
jge
shll
ret
push
inc
icebp
mov
scas
sbb
sbb
sbb
fsub
sub
out
jl
into
and
insb
stos
test
lret
xor
out
pop
pop
push
sti
out
xchg
imul
rcr
push
lea
enter
xor
dec
lret
xchg
inc
or
jmp
or
mov
jecxz
mov
stos
lret
mov
lahf
add
inc
cmp
pop
fadds
daa
stos
xchg
mov
popa
jbe
xor
jb
jae
mov
mov
cs
jle,pt
rcrb
in
jecxz
lock
les
push
xor
push
and
add
sub
jmp
inc
cwtl
jge
cmp
ret
pop
jp
or
outsl
inc
inc
xor
sbbl
adc
es
test
sub
xchg
in
aad
xor
push
jmp
add
add
arpl
imul
out
data16
adc
rorb
xchg
push
push
sbb
ds
inc
fdivr
jp
popf
and
test
adc
fmull
cs
push
ret
enter
mov
xchg
enter
cmp
mov
pop
fidivs
int3
ficompl
xor
mov
imul
mov
adc
dec
jmp
pop
sbb
nop
push
out
es
je
dec
or
int3
mov
idivl
fldl
sub
popf
cmc
push
and
adc
adc
mov
sbb
push
adc
call
jnp
testl
jl
mov
push
mov
xchg
fistpl
add
adc
bound
sub
mov
xchg
adc
xor
adc
dec
cwtl
and
cltd
mulb
jno
ret
iret
sbb
lea
mov
movsb
xor
and
sub
imul
xchg
loop
into
in
jge
sub
add
js
daa
pop
lods
into
roll
out
dec
ret
lcall
fistl
inc
xchg
pop
mov
loope
jmp
fnsave
psubb
cmp
pop
mov
xchg
sub
sub
sahf
aas
mov
dec
lock
jno
inc
dec
sbb
inc
jns
dec
cld
ja
mov
pop
fsubr
dec
out
jmp
rcr
adc
mov
js
inc
pop
std
sbb
inc
push
pop
pop
add
mov
pushf
test
and
add
cmp
popa
inc
std
loop
bound
dec
inc
lea
pop
pusha
dec
jp
jg
mov
test
mov
cli
mov
sbb
shlb
mov
aam
fidivrl
cwtl
sbb
ret
lods
xchg
xor
iret
fcmovbe
shl
movsl
in
in
test
or
ds
and
cmc
inc
fnstsw
adc
dec
scas
jl
dec
add
les
push
adc
mov
or
xor
pop
sti
enter
sub
inc
jle
aaa
and
or
cmp
mov
push
repnz
sub
lea
pop
fsubl
xor
xor
icebp
and
xchg
int
and
jb
pop
sbb
int
ret
cmpl
sbb
inc
scas
loop
arpl
daa
fs
sahf
fists
fcomip
mov
ret
addl
rclb
std
adc
push
sti
sub
in
sbb
hlt
or
scas
enter
popl
daa
mov
jge
adc
hlt
cli
mov
xor
icebp
mov
or
not
jecxz
push
das
shrb
imul
pop
pop
pop
mov
pop
test
ljmp
mov
mov
mov
imul
pop
ret
inc
cmc
pop
sub
cmp
push
adcl
shl
sbb
adc
jo
or
lods
mov
xor
outsb
push
jbe
mov
iret
add
orb
outsl
inc
cs
pop
lods
test
int
cmpsb
stc
int3
cmp
imul
lods
sti
push
addr16
jecxz
push
mov
jno
cld
lods
mov
mov
mov
jl
jbe
and
sub
and
mov
mov
mov
mov
test
dec
bound
outsl
cmp
push
lea
pop
sbb
outsl
mov
shll
mov
mov
test
lret
nop
push
loop
mov
inc
addr16
cmp
push
xchg
push
pop
fidivl
adc
iret
loopne
and
push
cmp
stos
and
xchg
nop
mov
ror
dec
filds
das
pop
sha1msg1
fisubrs
dec
jle
push
push
adc
xor
negl
sahf
popa
cmp
xchg
repz
mov
fs
cmpsb
and
xor
and
sub
xchg
pusha
mov
mov
repz
mov
xor
fildl
mov
add
iret
mov
dec
sbb
hlt
in
pop
and
int
xor
jns
push
dec
dec
push
ljmp
mov
mov
std
iret
lret
ja
cmpsl
lea
pop
adc
mov
cmpl
xor
clc
jmp
int
push
testl
shlb
aas
loopne
mov
or
cwtl
mov
icebp
pop
jo
fs
movaps
pop
push
dec
lcall
dec
push
loope
test
mov
jns
jg
int3
in
fidivl
add
cmp
cld
repz
cmpb
pusha
sbb
fisubl
stc
pop
cmpsl
ret
into
iret
fwait
pop
sub
jae
xor
int3
rcrl
sub
cmc
mov
jle
inc
scas
pusha
insl
ds
sub
adc
call
adc
and
sarl
sub
mov
repnz
orl
aam
cmp
cmp
mov
in
adc
push
push
test
stc
cmp
lods
push
pop
dec
mov
mov
jne
ds
mov
push
nop
in
int3
std
sub
aaa
popa
mov
fs
inc
mov
scas
ficoml
mov
stc
out
xor
js
add
punpckhdq
xor
pop
xor
pop
pop
shll
bound
aam
lcall
inc
fildl
jnp
js
sti
pop
pop
or
adc
mov
inc
rcll
push
pushf
adc
rcrl
cs
cmp
fxch
das
test
mov
in
or
adc
inc
ret
mov
or
imul
dec
ja
add
les
je
je
loopne
int3
test
int
leave
mov
in
sbb
popf
stos
pop
add
adc
or
push
jmp
js
sbb
sub
cmp
add
lcall
out
pop
cs
icebp
out
and
popa
pop
repnz
out
push
sbb
adc
aas
mov
out
aas
sub
dec
hlt
data16
cmc
popa
xor
xchg
mov
popa
popf
std
push
movsl
inc
daa
out
sub
or
call
sub
int
repnz
xchg
add
cmp
xor
pop
inc
push
mov
pusha
cmc
std
icebp
ss
dec
dec
mov
adc
aaa
ss
rorb
pop
push
pushf
es
gs
shlb
add
inc
pop
mov
push
scas
ret
push
fs
out
gs
sub
xor
push
int
jo
inc
xor
sti
cmpb
insb
push
jne
xchg
test
loope
mov
lcall
sbb
frndint
jecxz
fstps
lahf
lock
cld
add
std
sbb
adc
mov
mov
cmc
xor
bound
jge
push
push
push
mov
int3
push
push
aaa
ja
loope
sub
les
add
lods
repz
shll
je
pop
insl
xchg
ja
push
inc
loopne
call
sbb
add
add
jo
je
stos
adc
ret
sub
dec
ret
sub
push
and
addl
adc
pop
sub
mov
mov
or
pushf
enter
mov
cs
xor
and
insl
mov
cmpl
xor
std
mov
jo
jge
sahf
popf
into
jbe
in
pop
inc
jecxz
cmpsb
jecxz
lea
jmp
adc
mov
int
ljmp
shll
cmp
mov
or
je
bound
fneni(8087
cmp
or
leave
out
push
shlb
das
push
ret
inc
mov
pusha
cltd
mov
fldl
stc
cmp
in
stos
lret
jg
cli
pop
mov
shll
mov
pop
gs
xchg
mov
dec
dec
mov
inc
xor
test
lds
pop
push
les
pop
sbb
movsb
mov
loopne
inc
movsl
jne
aad
pop
pop
pushf
ret
jg
movsb
sub
fcoml
push
or
hlt
popf
dec
test
cmc
les
sbb
push
mov
mov
pop
jae
jl
call
mov
jecxz
pop
mov
dec
ficompl
lds
inc
hlt
xchg
mov
or
in
gs
mov
inc
add
cmp
push
add
or
cmp
testb
dec
int3
mov
iret
xor
inc
cmpsl
xchg
loop
scas
mov
dec
sbb
push
push
and
xor
add
xchg
lods
mov
add
mov
sub
shrl
and
and
sub
into
mov
jle
cmp
mov
or
and
push
sbb
pop
inc
fistpll
mov
inc
scas
pop
adc
jnp
ljmp
mov
dec
xor
lret
scas
jo
enter
rorb
mov
lcall
adc
jl
insb
jae
mov
push
sub
cmp
pop
je
inc
out
hlt
jno
bound
pminsw
add
push
jecxz
mov
lea
push
mov
inc
mov
add
inc
sub
jb
imul
push
shrb
out
and
or
lcall
mov
les
or
mov
gs
jp
loop
xchg
sbb
push
lahf
push
mov
cli
inc
jl
jmp
push
dec
xchg
das
sub
pushf
add
sti
mov
cmpsb
imulb
fnstenv
mov
repnz
inc
lods
lds
xchg
push
std
cmpsl
pushf
fstp
andl
movsb
mov
jp
fnsave
add
xor
into
sbb
insb
icebp
add
push
sbb
aas
xlat
xchg
push
sbb
outsl
insl
pop
dec
jno
dec
adc
inc
jno
outsb
jl
js
mov
or
add
jb
sub
adc
mov
xor
jae
mov
ficomps
xchg
aaa
mov
pop
dec
dec
inc
or
ljmp
enter
lods
int
cwtl
cmp
cmp
or
scas
add
std
ret
cli
jne
push
or
lcall
movsb
in
or
push
pusha
mov
nop
jns
jp
jb
je
xchg
ret
inc
ret
mov
rcr
sbb
shrb
or
sbb
cmp
imul
cmpsb
jge
lea
jecxz
pop
push
dec
and
pushf
lds
jne
insl
das
psubsw
pushf
pop
loopne
push
loop
pop
pop
js
push
ret
inc
std
add
aam
aaa
jmp
scas
lock
xor
mov
mov
fsin
mov
or
xchg
jnp
je
pop
jb
inc
test
pop
cmpsb
int
inc
jns
fcmovnbe
es
xchg
inc
xchg
xor
xchg
mov
aas
and
cmp
in
push
add
dec
jb
push
test
aam
ljmp
je
push
repz
pop
into
inc
pusha
push
decl
or
sbb
repz
pop
adc
call
dec
stc
and
push
mov
xor
stos
cmp
inc
jl
arpl
jle
jb
mov
dec
cmp
sub
or
popa
enter
inc
shll
mov
lcall
mov
xchg
in
ljmp
enter
popa
pop
ljmp
push
jge
xor
pop
jno
and
or
sub
add
lret
cmp
mov
repnz
fildl
test
loopne
roll
test
or
mov
inc
sub
push
js
lret
sub
imul
in
out
adc
or
xchg
loopne
js
push
or
mov
dec
mov
mov
ja
push
in
jg
push
or
cs
test
scas
mov
sub
sub
outsl
ss
and
xor
ret
adc
cmp
and
in
sbb
data16
pusha
imul
xor
add
mov
xchg
push
cmp
insl
jne
adc
sub
and
inc
jb
insb
movsl
lret
adc
lea
scas
sahf
lock
push
xchg
bound
pop
cli
lods
sub
adc
push
addr16
pop
into
sub
xchg
ror
pop
scas
stos
popf
mov
push
in
fstps
adcb
xchg
call
and
aaa
fistpl
lcall
in
jbe
pop
mov
xor
scas
cld
pop
sub
pop
jbe
push
dec
add
mov
arpl
jl,pt
in
jno
enter
mov
cmc
pushf
xor
xchg
jb
scas
adc
in
fmull
pop
aad
mov
jecxz
sub
pop
sbb
push
ret
lods
inc
stos
dec
cmp
jb
push
sbb
jle
fstl
sbb
mov
dec
fwait
jo
pxor
imul
out
scas
add
lods
add
xchg
lods
xor
add
pop
clc
sbb
out
lret
popl
cmc
in
ljmp
outsb
repz
out
sub
leave
pop
cmpsl
das
push
ret
adc
mov
inc
mov
pop
mov
fdivr
imul
adc
push
lret
jbe
mov
daa
jge
pop
gs
fisttps
test
fwait
xchg
insb
fwait
pop
clc
out
leave
fstps
jnp
pushw
xchg
bound
gs
gs
iret
out
pop
movsb
mov
int3
mov
mov
mov
filds
punpcklwd
jecxz
push
sbb
pop
push
ja
inc
fcoms
scas
or
movsb
dec
sub
or
dec
mov
and
adc
cmpsb
pop
outsl
shl
sub
mov
and
xchg
and
fdivrs
arpl
aad
cmp
pop
nop
mov
push
xchg
inc
loopne
sub
cmp
fidivrl
dec
sub
dec
mov
push
mov
cmp
popa
xor
push
pop
jge
mov
shll
pop
filds
jno
push
push
push
xor
xchg
cld
nop
es
out
and
int3
sar
movsl
rorb
in
push
or
les
ss
mov
ds
mov
mov
push
leave
out
push
subl
jnp
pop
jp
push
dec
stc
das
data16
pop
cmc
jmp
imul
pop
repnz
xor
xor
sub
or
push
iret
adc
cmp
sub
aam
repz
pop
divb
mov
cmp
shll
and
iret
in
movb
xor
lret
testl
pop
add
dec
leave
ds
ds
sub
push
jae
je
pop
xor
in
push
fs
xadd
jl
and
sbbl
push
cmpsb
lret
lock
sbb
cmp
jmp
insl
shl
dec
incl
test
add
mov
lods
repnz
or
xor
lcall
push
jnp
aas
fisttps
mov
lahf
test
push
test
pushf
int
fcmovnb
jle
fwait
ret
cmp
or
jge
pop
bswap
cmp
fisttpl
mov
add
shrb
lcall
popa
push
popf
cltd
jnp
mov
push
inc
ret
mov
sub
mull
pop
scas
jnp
hlt
or
imul
mov
sbb
jns
adc
orb
pop
mulb
push
jae
cmp
or
outsb
outsl
and
xchg
pop
pop
mov
lods
sbb
sbb
in
shrb
or
mov
mov
cmp
pcmpeqb
std
hlt
incl
mov
jmp
cld
in
jbe
sbb
push
pop
aad
in
repnz
and
cmp
lods
push
lahf
add
jmp
mov
sub
fs
xchg
mov
shlb
jbe
aas
sub
les
pusha
and
pop
adc
lret
lahf
lea
add
ret
dec
pop
decb
jo
nop
cli
jle
xchg
inc
xor
or
jns
add
mov
js
xlat
pushl
mov
mov
dec
pop
or
in
aam
clc
in
ja
cmc
out
dec
popf
pop
arpl
push
nop
pop
and
gs
filds
mov
adc
lods
mov
ss
bound
mov
aad
add
adc
push
int
jecxz
mov
outsb
mov
xchg
rclb
std
ret
icebp
lret
fldl2t
sub
test
fsubrl
xor
inc
sarl
lock
mov
jmp
cmp
stos
push
imul
fs
cmpsb
push
jp
ret
out
jmp
pop
sarl
pop
cwtl
or
or
and
int3
and
mov
push
std
scas
ffreep
lds
sbb
push
inc
lret
dec
push
call
dec
cmp
pop
pop
mov
fwait
xor
into
arpl
outsb
in
xor
fld
xchg
adc
out
imul
loopne
addr16
adc
add
inc
and
mov
pop
inc
and
xor
stos
lock
push
jns
pop
mov
mov
addr16
out
xchg
sub
push
repz
es
shrl
sub
xor
xchg
and
ds
jae
movsl
cmc
adc
std
jne
insl
daa
outsl
outsb
jnp
jecxz
aaa
xchg
lds
add
cmp
cmp
jno
stos
sbb
push
cmp
sbb
cmp
mov
push
sub
lock
loope
ljmp
std
cmp
insl
sbb
subb
rclb
push
int
js
mov
xlat
push
dec
out
mov
and
mov
cmp
sbbl
inc
cmpsb
imul
ljmp
and
pop
cmp
es
xlat
inc
sub
cmp
add
sub
pop
mov
add
inc
mov
imul
jp
fs
popf
into
inc
std
and
andl
sar
mov
lds
fstp
pop
clc
mov
insl
ds
movsb
in
mov
cmp
ret
sbb
scas
test
xchg
mov
movsl
movsb
cmp
lds
loope
mov
inc
adc
mov
test
imul
sbb
or
push
int
lea
cmpsb
testl
or
arpl
pusha
mov
test
enter
fistpll
and
mov
xor
shrl
aaa
loopne
out
fwait
mov
and
or
std
aam
pop
xor
push
sti
cmp
cmc
lds
js
fs
nop
popf
mov
out
sbbl
sbb
pop
mov
and
push
cwtl
lret
xchg
xchg
sub
jle,pt
into
pop
dec
test
cli
out
int3
imul
pop
ljmp
ret
arpl
adc
push
cmp
lret
or
mov
push
push
jo
dec
mov
repz
or
ja
push
or
sub
lds
clc
mov
cld
pop
sbb
out
mov
addl
push
pop
mov
cld
xor
shr
rcrb
fdivrs
arpl
pop
and
mull
jb
cmc
sbb
ret
inc
sub
cld
sbb
popf
add
nop
sub
or
lods
add
cmp
cmp
data16
aam
push
scas
or
ljmp
push
int3
ret
push
xchg
insb
sub
pop
sbb
or
adcb
cmp
jo
das
push
xchg
lret
jb
sub
inc
ret
mov
ja
mov
leave
mov
pop
push
stos
push
insb
mov
ror
ss
and
aas
push
es
inc
mov
clc
lock
inc
in
jne
mov
loope
add
push
in
pop
cli
icebp
imul
sub
data16
pushf
mov
mov
cmp
cmp
das
xor
mov
testb
xlat
mov
out
mov
loop
std
xor
mov
mov
jp
popf
sbb
sar
jnp
push
shr
pop
stos
pop
ds
or
xchg
mov
aam
hlt
ljmp
roll
iret
in
xor
mov
mov
imul
jge
imul
icebp
rorb
mov
scas
push
pop
pop
sbb
fisubl
fistpl
sbbb
shll
inc
jecxz
adcb
mov
sti
das
mov
mov
shrl
imul
sub
call
push
daa
jecxz
fcomp
mov
add
out
shlb
das
jg
sub
or
movl
iret
xor
addr16
hlt
mov
aaa
imul
pop
jo
cli
inc
arpl
add
ss
cmp
shll
aad
inc
dec
mov
jns
inc
ret
ret
and
fnstcw
dec
clc
jge
dec
pop
ret
dec
dec
and
jmp
test
in
shrb
xchg
cld
xor
sub
sbb
dec
mov
lods
xchg
bswap
or
push
jmp
aas
mov
mov
sbb
or
mov
subl
movb
fwait
mov
imul
and
fucomi
clc
shll
filds
dec
orl
lret
mov
das
mov
add
adc
adc
cmp
int
ljmp
les
out
rorb
sub
adc
cmp
inc
add
arpl
data16
insb
pop
out
inc
or
push
rcrb
bound
addl
test
imul
jne
jge
xor
or
out
loope
mov
sahf
fimuls
sahf
mov
loopne
xchg
lds
sbb
sbb
ss
test
inc
pop
js
and
and
fstl
dec
sbbb
jl
jecxz
xlat
mov
addb
or
mov
ljmp
imul
mov
fs
pop
leave
stos
xchg
and
int
jle
sub
sti
adc
or
jns
push
jge
repnz
mov
add
jg
pop
sbb
adc
push
push
xor
movsl
inc
ljmp
jne
ja
and
sbb
pushf
jne
in
mov
sub
adc
test
adc
adc
ljmp
xchg
push
inc
ja
mov
xor
mov
xchg
xor
fidivrl
popa
mov
xchg
sub
sbbl
lock
loopne
cmp
das
mov
push
or
mov
stc
pop
lock
andb
mov
cwtl
sarl
sub
cltd
jno
push
push
sbb
dec
js
pop
adcb
mov
test
mov
adc
jbe
and
movsl
jle
mov
push
std
loopne
sub
es
jo
xchg
fisttps
ds
jg
jl
or
jae
adc
mov
bound
add
gs
out
lcall
xchg
jg
movsl
xor
in
inc
inc
cmpl
push
jl
pop
jnp
mov
pusha
andl
jnp
lods
inc
inc
aam
xor
mov
jmp
inc
std
dec
inc
test
push
add
inc
mov
lods
cmp
cmp
lret
sbb
fwait
in
dec
jae
inc
cmp
popa
js
xchg
mov
xchg
jae
ret
xor
cmpsb
xor
rclb
out
and
aas
mov
sahf
xor
fstl
cmp
filds
out
jmp
lret
fildl
cld
jge
or
or
jno
arpl
outsb
push
in
fistpll
and
movntps
mov
pop
sahf
lcall
jp
push
clc
pop
adc
and
xchg
mov
mov
jae
ret
mov
int
das
std
es
push
add
cmp
dec
iret
xchg
aas
mov
or
aaa
ds
push
test
int3
imul
out
jb
clc
ret
imul
dec
or
in
popf
pop
nop
pop
lea
daa
push
in
jg
icebp
push
jge
push
mov
mov
xchg
jae
test
jle,pn
xor
xor
js
dec
cmp
cwtl
mov
sbb
imul
fwait
sub
in
mov
xchg
or
mov
out
imul
out
mov
pop
mov
in
inc
fstpl
testb
imul
in
daa
push
cmp
fld
sub
lret
mov
sub
nop
push
push
das
and
test
js
scas
jns
mov
jg
xor
add
inc
pop
xchg
cmpsb
cmp
xor
std
jmp
daa
xor
adc
fstpl
or
inc
sahf
imul
loopne
push
or
rorb
adc
and
and
pop
shlb
jg
mov
lods
lahf
sub
xchg
xorl
inc
mov
ljmp
clc
add
mov
jnp
xor
mov
aad
jp
xor
jno
test
stos
sti
aas
iret
xchg
fldl
nop
adc
sub
imul
mov
in
xchg
pop
mov
fsubrl
xor
lea
sbb
lods
orl
lret
sti
insl
mov
in
push
out
add
cmp
hlt
xchg
ja
and
mov
push
mov
in
repz
fdivp
xor
xchg
jb
mov
popf
push
ja
xor
mov
and
push
push
sti
aas
mov
pop
popf
in
pop
mov
jle
add
iret
sbbb
and
lock
or
pop
test
clc
in
dec
enter
shlb
mov
xchg
cld
iret
adc
outsl
mov
pop
cmp
movsb
addr16
push
push
imul
and
xchg
pop
int3
test
jge
mov
leave
test
aam
mov
shll
gs
push
lods
sbb
xorb
xchg
repnz
loope
adc
mov
or
jge
lret
int3
xor
jle
das
push
ja
mov
lock
imul
in
pop
jl
pop
scas
aas
dec
cmp
push
push
scas
mov
pushf
sub
jmp
hlt
dec
xchg
or
mov
or
imul
xchg
push
push
mov
ret
into
stos
adc
repnz
lds
jo
xor
stos
push
hlt
sbb
cmp
cltd
stc
pop
ret
das
sub
push
sub
aad
loopne
push
insl
cmp
ljmp
pop
out
or
sub
mov
add
mov
je
pop
gs
clc
xchg
jns
enter
movsb
and
jb
dec
enter
adc
add
sub
cmp
fs
xchg
aas
or
dec
lret
jne
jecxz
sub
adc
jg
int
mov
jle
cwtl
or
push
push
add
adcb
inc
or
icebp
pop
stc
xor
mov
dec
sbb
daa
fsubr
in
push
inc
dec
test
loope
out
test
filds
sbb
mov
push
ja
fnstcw
jo
iret
pop
imul
inc
fisttpl
or
xor
push
aad
xchg
ret
rcll
pop
in
xchg
jmp
xor
or
loop
push
bound
fsubl
xor
insl
bswap
cmp
cwtl
lea
out
push
mov
mov
and
sbb
shl
ljmp
sbb
push
fidivl
test
mov
xor
lods
pop
hlt
sti
test
inc
mov
inc
insb
xchg
xor
icebp
cli
inc
mov
pusha
cmc
sbb
bound
push
repz
xchg
sbb
icebp
mov
or
adc
int
mov
cmpsl
xor
ficomps
pop
inc
popa
mov
mov
pop
inc
les
sub
mov
lahf
insl
inc
push
mov
mov
inc
scas
lcall
imul
inc
int
imulb
fadds
dec
icebp
call
and
dec
or
pop
jb
clc
ret
clc
fcoms
push
mov
inc
mov
mov
loop
fnstsw
or
enter
and
fistps
mov
mov
repnz
divl
test
mov
push
scas
adc
mov
cmp
push
setg
xor
jge
popa
cmp
sbb
jp
xchg
hlt
es
cmp
lds
jb
xchg
jne
mov
jno
mov
mov
jge
xchg
sar
jle
les
jb
repnz
jno
aad
clc
orl
sbb
push
pop
movsb
and
or
xchg
pop
test
iret
int3
mov
lret
hlt
loopne
sub
stos
lcall
push
dec
ds
enter
out
shll
xlat
insb
fbld
mov
and
add
test
andb
sbb
movsl
das
inc
cmp
and
in
or
mov
ss
mov
mov
sbb
scas
pop
or
mov
jl
cmpsl
xor
and
mov
mov
jne
jg
faddp
das
mov
js
sbb
in
cmc
dec
push
add
pop
cld
or
data16
sbb
insb
xchg
ret
xchg
cmp
sub
jbe
xchg
out
pop
test
or
testl
int3
dec
bswap
stc
jge
mov
pushf
jne
mov
xchg
mov
test
loopne
add
and
add
adcb
movsl
mov
fldcw
xchg
js
cli
adc
mov
jne
cld
or
cmc
lret
inc
mov
mov
into
rclb
or
xchg
fnstenv
mov
out
mov
cmpsb
xchg
popa
cmp
jno
int3
jns
mov
cmp
jbe
jmp
and
mov
push
push
fildll
repnz
mov
xchg
lret
cs
lret
sbb
inc
pop
adc
cmpsl
xchg
iret
or
mov
jl
sbb
xchg
ret
mov
push
ret
lret
sub
ret
aaa
xor
es
enter
dec
mov
mov
mov
outsb
inc
or
or
outsl
mov
cmp
lock
inc
lahf
rorb
mov
outsb
lods
loop
mov
sbb
pushf
addb
jmp
imul
jg
sbb
loopne
cmp
ficoms
or
in
iret
jle
add
jnp
ret
ja
cmp
jle
call
sbb
aaa
mov
jne
lea
fldl
shl
mov
ljmp
aam
sbb
and
mov
iret
outsl
add
xchg
jb
addr16
stc
ljmp
cmp
test
mov
repz
push
cmp
jmp
mov
test
jb
sbb
mov
pushf
push
aad
aad
ret
cltd
push
fsin
pop
jae
mov
lods
inc
mov
nop
push
push
fisttpl
outsb
mov
sub
scas
aad
sbb
js
xor
lea
and
fnstsw
ss
in
std
nop
xor
dec
je
pop
jns
mov
xorb
cmp
test
divl
cld
fbstp
subl
adc
int
clc
xchg
push
adc
mov
ficoms
pop
mov
xchg
rolb
inc
adc
push
ret
pop
out
pushf
iret
jns
inc
dec
sar
mov
xchg
push
psadbw
pop
xor
mov
jo
sbb
xchg
repz
lock
cmpsl
test
push
mov
movl
sub
push
outsb
rorb
fadd
lret
jmp
test
bound
fwait
adc
adc
cmp
mov
js
scas
push
sbb
cltd
loope
add
stc
jae
lret
add
xor
sub
into
movsb
push
mov
xor
mov
nop
nop
xor
sub
push
mov
aam
popf
jmp
pop
jle
pop
dec
frstor
xor
push
addr16
add
fildll
ja
mov
mov
xor
and
mov
xor
ss
cmpsl
cmp
sub
ds
cmp
cli
mov
xor
aam
imul
aas
fucomip
or
mov
int
aam
insl
andl
mov
dec
popa
int
in
jl
mov
mov
mov
neg
pusha
test
pop
imul
or
ret
shll
push
jbe
xchg
in
sub
mov
movsl
mov
dec
jne
mov
cs
stos
hlt
mov
insl
lret
or
bswap
xchg
adc
rol
addr16
mov
lcall
in
xor
inc
jnp
sub
imul
cltd
pop
movsb
inc
sahf
inc
out
sti
pop
push
enter
mov
arpl
push
push
dec
mov
xlat
xchg
push
pop
mov
into
or
andb
dec
fcmove
std
jnp,pt
or
push
sbb
and
adc
mov
movsb
fdivl
dec
test
gs
mov
add
ja
mov
aas
or
jl
dec
cmp
daa
ss
xlat
nop
dec
cs
sub
push
add
push
test
push
repz
fcmovne
loop
push
sti
add
mov
xchg
mov
out
pop
iret
xchg
roll
movsl
dec
vpshrdd
add
push
fistpl
sahf
stc
pop
mov
loop
test
dec
xchg
lret
mov
sub
xor
fmuls
dec
xchg
loop
enter
stos
adc
pop
int
jnp
push
movsb
andl
xchg
ss
lds
mov
cmp
iret
movsb
insl
aad
push
cltd
sbb
jne
lods
mov
and
xchg
mov
xchg
mov
js
mov
mov
sub
int3
addr16
jnp
mov
imul
int3
jno
sahf
sub
inc
out
or
pop
lret
in
mov
mov
stos
xchg
cmpsl
or
cmp
gs
jg
push
pop
sbb
add
gs
aad
add
or
fcmovb
ret
sub
fs
dec
stos
inc
cmp
push
mov
sub
neg
pop
cmp
mov
and
adc
lods
jl
xor
mov
shl
fcom
pop
test
jns
fcmovbe
lea
add
rorl
cmc
mov
dec
js
pop
scas
mov
mov
sub
cmpsb
cmp
mov
mov
push
lret
xchg
push
mov
xor
jp
sbb
pop
jo
fwait
cwtl
xlat
pop
or
popa
pop
cmp
addb
pop
and
jns
cli
push
jne
and
insb
cmpsb
inc
inc
pop
daa
shll
dec
xchg
cmpsl
outsb
pop
push
dec
enter
add
inc
ret
xor
mov
test
xchg
mov
adcb
ja
rorl
xchg
int
sub
lcall
sbb
sub
pop
jmp
add
pop
cmp
jle
xor
mov
mov
imul
jae
mov
dec
push
mov
cli
shrl
pop
rcll
pop
xchg
xchg
mov
dec
fistpll
jo
movsl
and
cs
add
mov
sti
jnp
jno
adcl
int3
jnp
push
cld
out
inc
mov
xor
pop
in
pop
xor
hlt
aaa
xor
sbb
jno
push
int
daa
flds
aad
pop
cmp
dec
mov
fsubl
pop
aad
or
add
iret
xchg
sub
mov
mov
cli
add
add
lret
adc
sbb
xor
or
inc
ret
xor
cmp
fnstcw
dec
cmp
imul
lret
movsl
add
push
push
pushf
fprem1
test
xor
adc
cmc
mov
sbb
into
fiadds
jp
and
jae
movsb
aam
xchg
fstpt
cld
orb
pop
dec
inc
gs
inc
or
jmp
lcall
aaa
shrl
mov
cmp
mov
out
lock
popa
mov
mov
sar
push
aaa
pop
cwtl
cmpsl
adc
cmp
jp
scas
mov
or
jns
outsb
push
data16
ja
jae
mov
cmp
enter
dec
ljmp
sub
push
rcrb
cld
cltd
xor
inc
mov
jmp
mov
pushf
jne
fildll
inc
cmc
mov
ja
roll
fidivs
dec
mov
pusha
push
ds
sahf
pop
mov
lret
mov
insb
sub
jns
fldlg2
cmp
mov
and
jle
loope
mov
mov
ja
jns
or
mov
rolb
jo
bound
sbb
inc
fwait
xchg
mov
cltd
adc
sub
das
rol
xchg
and
or
mull
cmpsl
repnz
lea
mov
repz
test
pop
xchg
rcrl
repnz
lea
adc
cs
leave
pop
ss
hlt
ljmp
cltd
fisubl
mov
lds
adc
cs
test
aad
mov
data16
inc
imul
insl
test
aam
rcl
sarb
push
sbb
loop
fistpll
xchg
or
jmp
pop
test
aaa
cmp
adc
mov
sti
cmp
jb
addr16
or
loop
fdivrl
adc
mov
or
sub
pop
lods
mov
sahf
pop
push
or
add
jg
xchg
int
or
in
les
in
adc
shlb
pop
fs
iret
sbb
iret
push
cmpsl
mov
mov
int3
movsb
mov
mov
pop
xor
xor
lahf
jnp
sub
stc
daa
dec
adc
inc
mov
adc
mov
and
pop
orb
fs
dec
mov
bound
subl
int
adc
daa
loopne
aas
cmp
jmp
cmpsl
push
inc
imul
mov
fnstsw
adc
cmp
repnz
movsl
jae
xor
int
pop
adcb
or
out
jns
dec
ja
mov
jb
and
loope
add
test
cmp
xchg
mov
xor
cmp
arpl
in
outsb
lods
mov
loope
loopne
jmp
sub
je
in
lds
leave
scas
cli
fs
xchg
cmp
xor
ljmp
mov
cmp
scas
mov
cmp
into
mov
jo
add
adc
scas
sbb
fstl
addl
out
jb
out
jnp
push
lods
loop
jne
arpl
add
ds
repnz
pop
dec
mov
push
sub
fwait
bound
stc
mov
mov
jmp
lods
adc
jge
or
sub
jp
pop
jne
out
repnz
add
adc
loopne
lods
movl
pop
shrb
sbb
push
sbb
mov
mov
or
pop
xchg
test
dec
xchg
arpl
jp
push
mov
pop
jecxz
mov
ds
idivb
mov
xchg
enter
mov
stc
orb
sti
iret
mov
sub
cld
stos
jecxz
fwait
sub
shlb
sbb
push
lret
out
loopne
xchg
or
dec
xor
fsubrp
shlb
mov
cmp
mov
and
icebp
in
push
outsb
cmp
andl
ret
fcoms
jno
ljmp
dec
add
ljmp
pop
loope
lock
xchg
xlat
es
icebp
adc
jg
mov
loope
cmpsb
pop
iret
pusha
stos
stos
mov
mov
imul
mov
pusha
inc
shll
fcomps
adc
xor
ljmpw
and
lods
das
stos
add
adc
adc
cltd
leave
loopne
insl
pushf
xchg
mov
adc
adc
gs
loope
dec
call
icebp
ret
and
test
pop
add
dec
in
jbe
in
sbb
shrb
add
icebp
pusha
cmpsl
pop
add
pop
das
leave
sahf
aam
cs
repz
xor
mov
sbb
mov
push
lret
and
into
xor
cmpsl
popa
nopl
jb
cmp
mov
inc
sub
pushf
jb
les
sub
nop
pop
jle
dec
mov
add
test
cwtl
loopne
mov
xchg
add
pop
push
sub
and
add
notb
push
inc
lock
shrb
sbb
add
imul
test
xchg
mov
dec
mov
pop
add
push
jp
inc
xchg
jge
leave
inc
test
jecxz
mov
fcomi
cs
sub
adc
loop
cs
lea
xchg
lea
insl
repz
sub
stc
dec
out
dec
pop
adc
or
sbb
inc
sub
sbb
adc
loop
pop
mov
fidivrl
insl
xchg
xor
insb
pop
mov
dec
ret
cwtl
push
outsl
xor
mov
pop
test
mov
inc
cmpsl
adc
push
rclb
sarb
dec
ljmp
in
or
cmp
jg
js
loopne
xor
mov
fadds
dec
adc
pop
je
jg
arpl
push
shrl
xchg
and
lods
add
pop
jg
lock
push
fstl
push
jo
ja
mulb
or
repnz
fsubrl
fwait
and
aad
scas
push
stos
out
cmpsl
rcrl
stc
aam
arpl
insb
push
cmp
daa
popf
fwait
lret
int3
cwtl
or
pop
xor
sbb
stos
divl
dec
xor
sti
cmp
mov
in
stos
push
pusha
xchg
fistl
test
mov
gs
dec
push
mov
sbb
mov
mov
lock
aad
or
push
in
ljmp
popa
push
add
xchg
movl
out
xlat
test
dec
and
xor
jb
sbb
in
mov
pop
jle
fistpll
mov
cmp
mov
xor
push
lds
xchg
outsl
push
add
xor
jns
jl
mov
push
insb
test
shl
js
testb
sbb
out
fnstenv
jl
sbb
stos
and
push
and
sub
aad
add
jge
xorl
gs
jge
outsb
insb
cmp
lret
push
mov
mov
mov
mov
mov
mov
inc
jecxz
jb
mov
adc
mov
hlt
mov
inc
int3
fs
sbbb
push
lods
insl
mov
lahf
sbb
cmp
aaa
call
mov
repnz
movsb
jecxz
jnp
sbb
sbb
arpl
outsb
notb
test
inc
gs
mov
fwait
enter
rolb
pushf
sbb
fs
inc
test
jns
xlat
mov
pop
sub
outsl
rclb
jg
sbb
fbld
pop
fwait
pop
ds
adc
pop
and
mov
inc
jp
dec
pop
or
aaa
push
jmp
and
jnp
lods
test
mov
test
or
mov
jns
andb
cmpsl
lods
shlb
popa
mov
test
bound
push
fimull
jne
cmpsb
in
insb
sub
xchg
or
das
negb
dec
mov
cs
into
inc
fsubrl
mov
xor
lret
mov
push
jae
int
popl
mov
sti
xor
mov
push
das
je
test
jg
ds
aaa
data16
cld
xor
dec
sbb
das
in
xchg
dec
mov
sub
ror
in
mov
push
dec
jo
xchg
int
out
data16
cmpsb
repz
ret
jge
test
pop
pushf
xchg
scas
inc
and
ret
idivl
dec
sbb
fcomi
movl
push
mov
pop
jl
cmp
sub
and
scas
lcall
cmc
sub
fdivrl
and
push
cmp
repnz
clc
and
jl
inc
imulb
cwtl
sub
lods
je
or
sbbl
testb
cs
int3
mov
pop
pusha
add
mov
aaa
cs
movsl
mov
divl
cmpsb
pusha
prefetchnta
cmpsb
cmp
insb
add
repz
mov
jg
ss
fstp
inc
mov
or
add
cwtl
scas
sub
stos
clc
push
xchg
pop
jp
xlat
loop
cmpsb
stc
loope
xchg
cs
xchg
mov
pusha
cwtl
pop
ljmp
push
bound
inc
push
movsb
in
dec
add
xchg
xchg
int
imul
sbb
sbb
movsl
adc
dec
push
sbb
xchg
lret
fists
jge
bound
imull
shll
mov
adc
xchg
jbe
negb
mov
rolb
cmpsb
sahf
xor
sbb
stos
mov
out
scas
xchg
int3
test
inc
mov
adc
leave
xchg
jo
stos
test
jne
xor
jge
or
in
inc
push
mov
sbb
subl
decb
dec
scas
cmp
dec
inc
outsw
test
fs
sbbl
int3
adc
sarb
addb
inc
add
icebp
xchg
add
xor
xor
stc
stos
in
imul
pop
sbb
inc
lea
inc
jle
lods
aas
pop
sbb
outsb
inc
adcb
out
adc
push
lahf
call
pop
mov
and
icebp
dec
dec
add
pop
addps
pop
leave
cltd
fstl
inc
or
into
in
adc
sahf
inc
sahf
lret
push
and
push
push
add
int3
das
jmp
cltd
push
sbb
cwtl
rclb
sub
jle
in
dec
push
cmp
inc
pop
shrl
out
and
mov
jae
out
into
lds
outsb
in
pop
fdivrs
popf
aaa
cmp
pop
in
mov
outsb
into
lds
outsb
in
pop
fdivrs
inc
into
mov
in
enter
cs
inc
pushf
mov
aaa
jb
in
enter
ds
into
mov
in
enter
cs
inc
pushf
mov
aaa
jb
in
enter
push
out
iret
mov
pop
cld
mov
out
iret
lds
outsb
cld
pop
clc
mov
lahf
aaa
aas
outsb
jle
cld
mov
out
iret
lds
outsb
cld
pop
clc
mov
inc
into
mov
in
enter
cs
inc
pushf
mov
aaa
jb
in
enter
ds
into
mov
in
enter
cs
inc
pushf
mov
aaa
jb
in
enter
push
out
into
mov
pop
in
mov
outsb
into
lds
outsb
in
pop
fdivrs
popf
aaa
cmp
pop
in
mov
outsb
into
lds
outsb
in
pop
fdivrs
inc
into
mov
in
enter
cs
inc
pushf
mov
aaa
jb
in
enter
ds
into
mov
in
enter
cs
inc
pushf
mov
aaa
jb
in
enter
or
out
test
dec
shll
cmp
sbb
dec
insb
dec
push
jae
mov
inc
mov
daa
dec
or
call
sbb
sbb
cmp
or
pusha
xor
push
js
dec
inc
pushf
js
sbb
arpl
into
add
jns
fstpl
daa
dec
fcomps
mov
pop
sub
faddl
add
stos
xor
sbb
cmpsb
daa
into
iret
sbb
sub
outsb
push
add
aaa
inc
pop
mov
inc
cmpsb
aaa
lea
scas
xchg
sbb
push
aas
mov
mov
pop
push
adc
mov
in
rolb
enter
cmpsl
jno
insb
lods
lock
jl
lds
mov
cs
das
adc
pop
mov
shlb
jbe
push
enter
pop
mov
dec
sbb
sbb
mov
dec
aas
test
cwtl
fsub
and
cs
jb
repz
in
data16
pusha
cmp
xchg
pop
cmpsw
push
and
inc
mov
cmp
shl
rol
cmpb
rcrb
cmp
jg
outsb
inc
or
push
ja
pushf
je
pushl
jo
mov
pop
sub
sbb
push
ss
xchg
sub
lods
lcall
dec
gs
xor
test
dec
push
ret
pop
and
or
test
in
xchg
ja
mov
js
stos
js
mov
adc
les
jo
pop
data16
outsb
add
test
adc
ret
mov
push
sbb
dec
add
xchg
jmp
ret
fidivs
xor
lea
mov
pop
movsl
push
or
rcr
adc
jp
xor
fwait
mov
sub
int
imul
or
pop
subl
mov
es
daa
out
adc
out
jne
push
jl
aas
in
pop
adc
dec
adc
or
xchg
xchg
sub
nop
loop
stos
cs
xlat
sub
push
mov
loope
outsl
movsl
mov
ss
in
movsb
rclb
adcl
mov
mov
lcall
in
shlb
mov
enter
sbb
jp
out
or
jo
shlb
mov
inc
xchg
adc
repz
stos
pop
inc
ret
dec
dec
lock
imul
pop
out
pop
dec
dec
loop
and
sub
inc
cmc
xchg
xchg
aam
jbe
and
xchg
jne
jns
sbb
cmpb
push
sub
movsb
mov
add
lds
mov
movsb
cmp
sub
push
add
push
pop
xchg
push
daa
push
mov
mov
pusha
xchg
scas
pop
pop
test
mov
outsl
xor
push
push
push
add
clc
je
jno
fnstenv
xchg
pusha
pop
push
jb
sub
inc
enter
add
notb
scas
in
push
xchg
popf
imul
sti
xchg
jb
test
fnsave
lea
sub
pop
inc
lds
std
mov
je
dec
mov
dec
jns
dec
out
xchg
and
ss
outsl
mov
adc
mov
imull
mov
mov
into
pop
sarb
aad
mov
adcl
sub
cltd
mov
push
jecxz
dec
add
insl
stos
sbb
mov
cmp
js
or
pop
enter
fcomps
or
dec
mov
loop
jns
or
push
stos
fistps
cmp
mov
popa
or
sbb
pop
push
pop
imul
cmp
push
adc
xchg
pusha
data16
adc
lds
out
fisubl
insb
and
mov
xor
add
mov
movsb
jg
dec
mov
or
insl
and
shll
add
jmp
loopne
push
mov
leave
js
sub
jmp
push
pop
and
test
mov
int
pop
ror
xchg
cmp
xor
xchg
cmp
mov
xor
or
push
sbb
pop
xchg
test
mov
inc
xchg
xor
push
pop
mov
sub
xchg
jnp
into
cld
adc
test
pusha
add
int
jne
mov
lock
imulb
mov
xchg
outsl
fldt
sbbl
mov
mov
sub
sbb
icebp
jge
inc
mov
mov
push
out
lret
jo
std
mov
add
jae
fldenv
add
pop
or
aas
or
mov
inc
cmp
push
adc
ss
les
xchg
scas
mov
std
push
push
inc
loope
pop
jecxz
mov
test
sbb
xchg
push
gs
roll
sahf
mov
mov
icebp
movsl
lret
jecxz
cltd
jbe
rcll
xchg
mov
adc
xchg
jecxz
jmp
fwait
cmp
sbb
mov
idivb
xchg
insb
je
sub
xchg
ficomps
lods
mov
cmp
xor
adc
cmp
sub
stos
mov
push
pop
cli
mov
test
roll
inc
rcr
and
out
cmp
fs
add
into
leave
jmp
pop
cwtl
mov
mov
add
xchg
xorb
test
push
xorb
lcall
sti
adc
and
in
rolb
dec
repnz
add
cs
sbb
push
ja
movsl
push
inc
pop
pop
inc
sbb
addr16
jns
jb
xchg
stos
cmpsb
out
add
clc
das
test
push
shlb
mov
int3
adc
add
mov
out
add
dec
ljmp
dec
icebp
cmc
push
cmp
mov
pop
push
push
mov
cmp
xchg
cmpsb
hlt
jno
test
push
insl
xchg
sbb
scas
pop
cmpsb
hlt
cld
gs
cmp
xchg
lret
pop
push
scas
popa
adc
mov
and
in
jns
cmp
je
pop
jnp
cmpsl
rcrb
lret
scas
es
dec
adc
add
mov
insb
xchg
xlat
dec
mov
aam
mov
add
cmpl
roll
rolb
xor
push
insl
mov
jp
mov
push
sub
cwtl
les
icebp
in
jecxz
xor
push
jge
insl
dec
subb
das
arpl
andb
xor
mov
rcrl
cmp
dec
enter
push
adc
dec
xchg
mov
pop
test
fadds
cmp
pop
mov
mov
push
inc
push
mov
cwtl
inc
dec
or
sbb
or
fs
ja
mov
loopne
jb
adcb
cmc
inc
cmp
movsl
xor
aaa
inc
jmp
cmp
and
test
mov
fcomi
sub
push
pop
in
lahf
mov
sbb
test
inc
lcall
jecxz
pop
jne
and
push
mov
lahf
daa
dec
dec
adc
dec
adc
mov
mov
ja
and
sti
push
dec
lret
mov
inc
dec
pop
int
mov
xor
add
mov
fstpl
mov
in
pop
cmp
ss
lcall
xchg
mov
mov
insb
cmp
adc
mov
sub
out
add
inc
lock
imul
jge
xor
mov
dec
rorb
xor
jmp
xorb
add
xchg
testl
add
enter
push
arpl
sbb
add
cmpsb
jae
popl
push
mov
xchg
hlt
rolb
inc
std
andl
mov
mov
cmp
add
in
pop
xorl
lret
dec
fisubs
xchg
pushf
sbb
std
lods
ret
data16
inc
mov
je
icebp
xchg
lea
mov
jg
mov
rolb
add
xchg
lods
aaa
or
shlb
lcall
adc
lds
add
stos
and
out
add
xchg
in
xor
cld
mov
push
outsb
mov
mov
rcll
es
pop
dec
fnstsw
jne
insb
xchg
sbb
testb
xchg
dec
sbb
sub
jmp
out
push
jbe
cltd
es
aas
test
mov
dec
sub
daa
mov
sub
aad
es
rorl
iret
test
pop
hlt
push
cmp
movsb
cmp
bound
popf
xor
cmpsb
lret
xorl
and
push
mov
cs
out
inc
jmp
and
sub
outsb
sbb
movsl
push
mov
and
stc
cmp
test
and
cwtl
loopne
fimuls
sarb
hlt
cld
adcl
ret
inc
imul
push
cmpsl
shrb
cmp
adc
xchg
sub
cli
pop
jno
xor
or
sahf
push
fwait
dec
add
call
mov
xor
aam
out
cmc
mov
lret
add
mov
mov
mov
rcrl
push
cs
decb
xchg
cmc
mov
fs
cmp
xor
test
scas
jo
inc
push
movsl
out
mov
orl
add
add
inc
hlt
out
mov
addr16
lret
adc
push
xchg
sbbb
and
inc
add
out
shl
sbb
cmp
push
sub
fwait
inc
add
daa
lock
cmp
sub
jle
sub
mov
mov
pop
ja
cmc
loop
jne
mov
mov
in
push
cwtl
sub
test
dec
mov
push
das
and
inc
in
xor
aaa
inc
add
outsl
repz
rorl
xchg
jecxz
inc
xchg
lods
inc
out
mov
subb
mov
mov
sbb
das
pop
pop
popf
add
pop
ja
dec
sbb
inc
jecxz
mov
lret
cmp
inc
push
out
sbb
or
clc
cs
or
push
mov
cmp
inc
sub
dec
arpl
test
jge
and
loop
out
dec
sub
in
fs
into
mov
mov
xchg
je
xor
inc
adc
and
or
sbb
ror
pop
nop
mov
sub
cmp
dec
pushf
xor
xor
and
fiaddl
rcr
pop
data16
in
fsubrp
xchg
or
mov
sarb
enter
push
icebp
push
dec
mov
loopne
pushl
push
ret
and
popf
sbb
test
xchg
outsl
adc
and
scas
mov
inc
jb
jo
and
pop
mov
repnz
or
mov
cmp
punpcklbw
in
jae
xchg
push
hlt
ljmp
mov
cmpl
pop
xor
ret
test
mov
nop
imul
jge
mov
mov
fmuls
fcmovnb
inc
push
dec
movsl
or
and
fisubl
inc
sbb
push
cld
icebp
fisttps
fsubrl
insb
call
xchg
loopne
pushf
outsb
jp
jg
dec
jb
loopne
dec
shll
hlt
or
or
cltd
xor
or
add
hlt
adc
fwait
push
xor
faddl
std
repz
and
inc
inc
pop
dec
mov
and
out
sbb
push
jge
cmp
in
xchg
jmp
add
test
mov
mov
mov
enter
jns
xor
sbb
les
mov
adc
lock
jns
mulb
pop
or
jae
iret
inc
out
sub
lcall
xor
out
ret
pushf
pushf
decb
jge
popa
enter
ss
jg
or
push
js
gs
fiadds
or
mov
push
sti
mov
rcr
adc
sbb
fidivl
fcompl
mov
outsb
sub
leave
or
fwait
mov
pop
mov
movsb
clc
push
cmc
shl
or
and
mov
mov
imul
call
aad
or
leave
insl
je
mov
sbb
mov
sub
clc
sbb
cmp
gs
pop
lahf
inc
pop
andb
mov
add
or
outsb
xchg
xor
push
jb
sub
popf
lret
xchg
addr16
jae
adc
idivl
mov
aaa
aas
push
popl
jp
add
loope
lcall
and
loop
mov
arpl
push
xor
xor
rorb
fs
ret
mov
xchg
inc
add
sbb
push
out
or
xlat
cmp
loop
mov
pop
cmpl
sti
add
into
jmp
jp
lcall
addr16
dec
mov
inc
xor
jnp
or
jmp
pop
and
cltd
jo
int3
push
dec
rcr
add
jb
pop
orb
cmp
cmpsl
xor
xor
fsubp
movsb
ret
aam
insb
scas
outsb
notb
shl
sub
scas
adc
dec
add
das
mov
rcll
or
fst
cmp
data16
ljmp
sbb
in
pusha
pop
or
cmpb
fidivl
add
inc
scas
xor
add
dec
pusha
lcall
dec
push
adcb
pusha
int
adc
pop
bound
call
cltd
adc
pop
loopne
adcl
dec
lret
sbb
cmp
xor
inc
loope
xchg
push
shlb
or
adc
xchg
mov
ljmp
push
test
push
test
jnp
cmp
leave
out
jmp
sbbl
in
mov
push
add
das
mov
xor
mov
repz
cmp
mov
jmp
or
addl
inc
and
imul
popf
repnz
je
jb
jnp
fwait
jp
test
sbb
icebp
es
aaa
jmp
sbb
clc
nop
and
and
dec
or
inc
add
inc
stc
cmp
lds
mov
add
cmp
outsb
stc
stos
or
mov
adc
push
dec
in
inc
cmp
adc
dec
rcrb
lods
idivl
add
mov
or
mov
pushf
jle
hlt
mov
adc
repnz
mov
test
sub
add
aam
insb
mov
std
lret
adc
push
clc
mov
ds
adc
inc
repz
aaa
sub
mov
xor
int3
jp
pop
push
sub
adc
shrb
or
push
fsubrp
mov
mov
insb
stos
push
cltd
adc
and
dec
inc
xor
and
rorl
scas
dec
aad
mov
mov
bound
aaa
xor
and
ret
iret
mov
loopne
mov
mov
ror
jne
ficompl
jecxz
xchg
lea
lock
push
sbb
hlt
lods
mov
shll
dec
stc
loopne
add
loopne
mov
jnp
cwtl
fistl
cmpsb
movsb
dec
pusha
push
cmp
mov
inc
and
sahf
sbb
adc
jbe
gs
mov
or
xor
lcall
or
jbe
jl
pop
ss
test
sub
test
out
dec
pushf
repz
sub
sahf
sti
mov
in
adc
in
int3
stc
cmpsb
adc
dec
cmp
add
negb
testb
adc
out
cmp
lea
xchg
mov
mov
je
loope
ret
stos
int
neg
and
add
sbb
lock
inc
je
aaa
in
ret
repz
cmp
xor
ret
pop
dec
push
shr
cmpsl
shlb
mov
mov
enter
clc
popa
je
das
mov
push
mov
push
mov
mov
jge
in
push
xchg
lret
call
ret
jb
test
inc
sti
repz
std
xchg
mov
jo
scas
lcall
jecxz
les
nop
xchg
rcll
out
adc
mov
jmp
pop
xlat
jge
loop
pusha
test
add
daa
mov
ret
inc
dec
sbb
xchg
rcrb
sbb
pushf
dec
push
jne
cmpsl
or
es
xor
call
and
stos
cmpsb
adc
mov
aam
movnti
repnz
movsb
addr16
inc
aaa
sbbl
test
dec
orb
cmp
ret
xor
test
or
lea
lret
xchg
inc
lock
dec
xchg
cmpb
pop
push
std
out
lcall
xchg
pop
loop
pop
into
adc
dec
mov
pushl
and
cmp
mov
add
addl
xchg
test
incb
fldcw
test
fnstcw
out
mov
enter
cs
adc
jne
xchg
scas
adc
mov
cmp
mov
dec
adc
inc
inc
jp
fwait
dec
test
push
push
inc
sbb
inc
xchg
ret
cld
and
push
mov
sbb
imul
daa
mov
cmp
xchg
pop
push
inc
daa
adc
or
and
add
adc
pop
movsl
cltd
fwait
sarl
dec
pop
mov
mov
xchg
or
pop
mov
add
nop
xchg
and
jecxz
and
push
xchg
push
push
pop
jle
shl
stos
aad
cmp
stc
fisubl
pop
mov
and
dec
mov
xchg
dec
push
xlat
lret
hlt
pop
rep
mov
lret
adc
outsb
xchg
enter
shrb
jle
push
inc
mov
jae
push
push
aas
das
loope
mov
push
cmp
add
xor
adc
mov
dec
mov
cld
mov
ret
mov
shl
ljmp
lods
jbe
jbe
adc
xor
xorb
in
mov
pushf
mov
jns
jae
dec
mov
sbb
xchg
inc
pop
adc
pop
mov
xchg
jns
rorb
ss
pusha
sti
pop
sub
adc
ja
fldt
rcrl
mov
ret
stos
or
nop
or
jge
lds
jae
es
or
std
in
pop
xor
loope
mov
mov
mov
cmp
adc
mov
in
subb
dec
mov
and
and
aad
xchg
shrl
push
push
mov
fsubrl
pusha
push
xorb
sub
xchg
jg
sub
xor
into
aaa
enter
test
sub
insl
popa
std
jo
popa
adc
jns
stc
add
and
sahf
out
xchg
dec
push
mov
bound
sbb
ret
add
jmp
std
lock
sbb
add
sbb
and
ljmp
addb
lret
sub
test
test
inc
mov
mov
inc
pop
clc
pop
dec
and
push
adcb
sbb
lret
ss
in
pop
and
shrl
mov
scas
sahf
sarb
and
pop
bound
je
repz
xor
fisttpl
das
pop
or
repz
fidivs
jno
add
push
push
pusha
or
ret
in
cmpsl
dec
aas
mov
mov
jg
sbb
icebp
jle
nop
cmp
add
in
or
inc
fs
insb
push
sbb
ret
scas
sbb
mov
daa
insl
sti
orb
xchg
cmpsb
repz
stc
mov
arpl
and
mov
cmpsl
mov
repz
xlat
adc
or
int3
loope
shlb
scas
imul
scas
das
mov
ret
xor
and
xor
lds
push
ret
mov
inc
sahf
push
xlat
sub
jne
hlt
jo
and
sub
pop
out
clc
repz
int
test
mov
jle
add
add
mov
jle
outsl
clc
sbb
push
imul
adc
push
xor
jecxz
rcrl
pop
jl,pn
add
xorl
dec
seto
and
or
push
cmp
dec
ja
popf
cli
mov
outsl
pop
in
push
add
or
fwait
popa
negl
fwait
out
mov
cmpsb
ret
mov
mov
inc
xchg
dec
cld
or
xor
sbb
adc
das
sbb
dec
mov
gs
pop
inc
fcmovb
pop
jne
data16
mov
ret
cli
push
ret
push
push
fldenv
xchg
ljmp
insl
mov
mov
pop
insl
adc
lret
pop
jp
add
pop
in
and
stc
cmp
mov
roll
ds
lea
push
sbb
xchg
xor
dec
mov
stos
and
das
jge
or
mov
or
mov
xchg
aad
sahf
test
dec
sub
shlb
sbb
out
jmp
cmp
outsl
imul
pop
or
pop
adc
out
jae
insl
aas
or
inc
cli
outsb
cmp
add
xchg
sti
popa
jb
jmp
pop
or
xchg
and
mov
xchg
inc
mov
lds
andb
push
std
mov
and
dec
lods
xor
shrl
pop
adc
outsb
jmp
cmp
xor
inc
pop
mov
inc
lods
dec
xlat
hlt
xchg
aaa
sbb
cltd
mov
adc
sbb
movsl
testl
into
loop
xor
fisubs
pop
add
and
pop
mov
inc
add
push
push
dec
nop
das
push
mov
enter
sbb
xchg
mov
mov
into
mov
fists
out
jb
ds
mov
dec
inc
cli
mov
push
and
cmp
mov
test
cwtl
das
jnp
ljmp
imul
lea
cmove
inc
push
rcl
and
cmpsb
subb
mov
inc
mov
adc
dec
sti
mov
cmp
jecxz
jge
movsb
bound
or
sti
hlt
cld
sbb
cld
dec
lret
insb
jbe
inc
inc
ja
mov
push
adc
cmp
icebp
rolb
into
fcomps
xchg
pushf
sbb
dec
in
inc
add
cmp
mov
inc
lahf
pop
add
pop
aas
jg
and
imul
lahf
mov
daa
in
jne
push
test
lock
jl
jle
testl
jmp
cmp
mov
mov
shl
jb
fsts
inc
cs
inc
inc
cmp
dec
pop
pop
sahf
pop
mov
in
loopne
movsb
push
push
pop
sub
inc
movsl
mov
lods
jne
xor
fs
jle
sub
pop
inc
adc
dec
sbb
xor
lea
pushf
mov
leave
faddl
mov
fs
jne
push
stc
scas
and
inc
xorl
fs
push
movsl
dec
mov
sbb
es
push
xor
dec
out
cmp
push
adc
aas
or
jo
push
jge
pop
xchg
hlt
int3
xchg
lea
in
add
pop
xor
call
pop
fimuls
loop
mov
jno
iret
mov
or
xor
xlat
mov
fdivl
jl
repz
sti
subb
inc
inc
jo
mov
xchg
mov
test
inc
test
sub
lock
add
aad
add
dec
xchg
dec
inc
aas
jae
mov
inc
jb
jg
lock
xor
dec
push
stc
xchg
in
mov
push
or
add
lods
adc
inc
inc
in
xor
pop
out
enter
add
sub
dec
sub
cltd
adc
cs
mov
cmp
iret
arpl
xlat
push
loop
pop
mov
lock
push
and
add
jle
mov
aas
sbb
outsb
adc
dec
cmp
or
xor
cltd
cmp
adc
sarb
mov
sbb
ljmp
fdivr
xchg
decb
xchg
aam
lea
inc
movsl
popa
mov
or
test
cli
xor
jmp
mov
mov
sub
cmc
loope
xchg
dec
inc
xor
pop
nop
and
cmp
pop
ss
lock
cmp
movsl
stos
out
icebp
in
clc
sub
hlt
add
stos
lahf
and
mov
call
and
lea
inc
cmp
jmp
testb
neg
dec
jbe
inc
cmp
addr16
inc
dec
push
int
xor
mov
enter
xlat
sbb
test
add
push
xchg
adc
repnz
add
mov
add
sub
nop
icebp
mov
cmpsb
push
mov
jl
ds
in
xchg
mov
or
and
push
fcompl
fwait
inc
ljmp
leave
les
mov
in
inc
mov
mov
xchg
loopne
cld
adcl
daa
mov
lds
pusha
and
add
cmpsb
cmp
outsb
and
and
jae
imul
or
mov
fdiv
rcrb
sub
mov
sarl
mov
mov
xor
test
vmaxpd
sbb
push
movb
dec
sub
push
add
fnsave
lcall
mov
jnp
cwtl
ret
arpl
inc
scas
mov
adc
or
sahf
push
push
or
bound
and
test
fldl
imul
mov
and
jns,pn
test
cmp
dec
sub
mov
test
andl
or
push
into
xchg
mov
mov
xchg
pushf
dec
fwait
lods
cltd
gs
push
fwait
xchg
add
push
pop
mov
stmxcsr
arpl
fbld
cld
jno
mov
pop
xor
addr16
mov
mov
dec
cmpl
and
es
lea
jl
pushf
pop
mov
mov
bound
add
jbe
sub
or
jle
scas
push
inc
int
sub
jb
dec
stos
ficompl
push
cmp
fcoms
add
inc
rol
xchg
mov
aad
enter
mov
in
shl
xor
pop
jmp
mov
in
cmp
cmp
data16
in
pushf
iret
and
loop
sub
aam
mov
push
call
push
arpl
mov
in
cli
fildl
cwtl
or
insl
adc
mov
mov
and
leave
andb
or
aas
popf
ja
scas
sub
mov
and
nop
mov
cmpsl
mov
pop
nop
out
lret
in
sbb
adc
xor
leave
subb
cmpl
pop
aas
fdivr
pop
loope
movsb
out
decl
fstpt
adc
int3
jns
ret
or
enter
enter
adc
and
int
fwait
out
popa
loope
push
mov
std
mov
ficoml
lea
or
add
lods
insl
jbe
jno
stc
outsb
dec
mov
xchg
cmp
mov
lret
call
jge
fxch
repz
pop
push
mov
icebp
shrl
pop
insl
cs
pop
push
jb
sbb
jecxz
mov
add
mov
and
fstps
xor
adc
mov
loope
unpcklps
lock
arpl
fnsave
fucomp
and
mov
addr16
cmp
stc
jmp
xchg
jb
je
xor
repz
push
xchg
data16
inc
das
mov
mov
int3
fwait
ret
sarl
xchg
iret
loop
push
scas
cmp
inc
leave
and
fnstsw
mov
jbe
sub
pop
jb
insb
aas
cmpsb
dec
out
add
stos
pop
xor
xchg
decb
cmpsl
cli
inc
fsts
aam
xorb
inc
mov
movsl
lea
loope
and
xor
sbbb
dec
mov
sub
xchg
cld
pop
loope
mov
or
jnp,pn
fdiv
ret
test
into
xchg
push
add
dec
inc
mov
cltd
jg
insb
ror
adc
adc
pop
adc
push
cmpsb
inc
inc
cmp
shl
mov
aaa
pop
iret
insl
push
inc
pop
aam
dec
xchg
cld
bound
jmp
pushf
xor
divl
shll
stc
xor
adc
loopne
inc
cmp
outsb
lea
dec
push
ret
xorb
push
inc
popf
mov
jge,pn
xchg
xchg
gs
xchg
pop
loopne
mov
insl
jmp
test
dec
scas
lcall
cltd
imul
stos
loope
out
or
mov
sub
insb
pop
push
push
aam
push
test
inc
xchg
push
inc
push
inc
cld
mov
sbb
or
lods
xor
sub
jmp
pop
jo
in
loopne
leave
imul
mov
adc
lret
and
test
in
outsl
dec
lcall
fwait
cwtl
shlb
testl
inc
sub
inc
push
and
in
add
cmp
jb
cmp
les
fnstsw
loop
sub
mov
sbb
cwtl
incl
pop
stos
jp
rcrb
inc
mov
xlat
adc
mov
or
enter
mov
int
rcrb
jno
cmp
xor
xchg
lret
xor
mov
mov
xchg
mov
jbe,pn
mov
scas
xlat
fiadds
pusha
push
push
inc
fdivs
daa
mov
in
sbb
ss
mov
add
loope
clc
add
lods
repnz
push
scas
fstpl
in
sbb
push
filds
mov
adc
mov
mov
lret
sub
mov
mov
arpl
xchg
mov
cs
cltd
sbb
pushl
mov
fs
mov
pop
push
add
cltd
adc
dec
call
enter
jge
pop
pop
or
sub
pop
xor
call
leave
pop
add
dec
mov
inc
push
pop
scas
add
add
push
daa
push
dec
pop
rorb
out
and
cmp
lahf
mov
out
xchg
xchg
xchg
hlt
pop
int
xchg
pop
daa
aad
cmc
add
sbb
lea
mov
arpl
stc
in
xchg
roll
add
fcoml
stos
dec
adc
cmp
pop
push
mov
int
pop
adc
mov
orl
jo
outsb
pusha
mov
daa
and
pop
pusha
sahf
imul
test
imul
lret
lock
lcall
movsb
lahf
movsb
lods
cmp
mov
push
mov
popa
scas
sub
xchg
jb
lds
inc
mov
mov
test
push
lock
rcll
sbb
leave
jno
imul
aas
jle
loop
sti
jne
add
jl
mov
dec
sub
or
clc
xor
add
out
xlat
sub
clc
addr16
xorl
js
jg
ret
push
sub
sub
adc
adc
xchg
mov
repz
sub
and
lret
call
aam
adc
push
clc
add
push
jae
scas
cltd
mov
enter
jns,pn
sbb
sbb
scas
jle
sbb
inc
aam
cld
js
lds
inc
or
je
pop
outsl
lock
push
mov
mov
pop
test
jae
add
dec
rcll
je
in
sbb
push
shr
push
aam
jmp
cmp
adc
mov
ficompl
mov
lock
push
sbb
mov
ljmp
push
ret
mov
dec
bound
jb
jle
mov
out
sbbl
inc
fcomps
pop
add
sbb
cmp
xchg
cmp
push
sbb
negl
push
test
push
cmp
push
mov
cmp
leave
daa
jecxz
mov
movsb
sbb
pop
add
adc
jge
cmpsl
jne
int
xorl
cs
cmp
sub
ret
mov
mov
xchg
enter
jnp
sub
jne
mov
jp
sarb
jo
stc
mov
outsl
jecxz
fld
fistl
mov
mov
mov
push
out
sub
ret
sbb
lock
push
pop
lcall
mov
xlat
rolb
repnz
mov
mov
add
hlt
dec
xor
scas
stc
jnp
bound
in
andb
dec
imul
or
dec
pop
pop
enter
cmp
test
outsb
cmp
xor
cld
ss
cmp
fwait
jmp
pop
sbb
iret
lods
repz
outsl
jp
mov
repz
push
cwtl
cmp
stos
adc
inc
pop
int3
and
xchg
adc
addr16
bound
add
cwtl
mov
leave
sbb
adc
int3
pop
xchg
mov
cmp
addr16
into
or
xchg
lds
imul
scas
dec
mov
inc
xchg
or
adc
inc
mov
xchg
sbb
add
push
lea
jo
jp
clc
fs
cmp
sub
dec
mov
mov
jnp
xchg
xor
pop
test
test
fs
add
cmp
xchg
seto
repnz
cwtl
adc
out
out
jle
repz
jbe
xor
lock
add
aas
fwait
movsb
aas
push
cmp
sub
jbe
ret
addr16
dec
add
stos
mov
cwtl
xchg
inc
mov
sub
xchg
mov
mov
inc
mov
lds
dec
fdivrl
cmp
jno
cmp
push
cmp
fists
test
stos
and
and
repz
test
add
xchg
ljmp
nop
imul
push
mov
sub
mov
xor
imul
jns
push
mov
les
arpl
jne
ss
popa
cs
dec
mov
movsb
aad
movsb
xchg
jbe
ret
adc
xchg
and
pop
das
fisttpl
movsb
fsubrs
add
push
sbbl
push
mov
fistpll
in
in
mov
fwait
rcr
pusha
arpl
xchg
mov
movsl
xchg
imul
daa
retw
dec
mov
cmp
push
inc
xor
dec
jl
ret
and
dec
iret
cmpsl
fstl
dec
dec
fnsave
popa
scas
pop
pop
mov
shll
fsubrs
insb
stos
push
xchg
jge
sbb
pop
dec
inc
ljmp
insl
mov
and
lcall
inc
in
imul
nop
and
xchg
rclb
jmp
mov
test
imul
cmp
or
sbb
scas
mov
or
push
push
cmpsl
lret
addb
adc
xchg
fstl
or
or
fcomps
or
inc
and
sbb
inc
xor
jle
inc
aad
cs
and
popf
je
jbe
push
sub
dec
fwait
pop
sbbb
popa
cmp
sub
push
insb
push
lret
sti
pop
sbb
leave
or
out
int3
xor
js
pop
popa
pop
jb
loopne
iretw
outsl
push
sbb
sub
stos
call
movsl
mov
xchg
shrl
pusha
lahf
shll
iret
stos
mov
enter
test
xchg
repz
jecxz
rolb
inc
mov
in
lret
dec
leave
clc
cmpsl
sbb
pop
or
add
push
mov
xchg
push
adcb
out
dec
neg
fwait
push
mov
test
mov
fwait
push
mov
out
lock
jbe
sarb
xchg
stos
or
mov
cmp
adc
xchg
dec
pop
clc
lods
sub
push
test
jne
scas
pop
fidivl
jl
and
dec
xorb
daa
test
imul
loope
push
sub
pop
xor
mov
mov
cwtl
dec
dec
mov
push
and
or
pop
sub
mov
adc
sub
mov
sub
add
out
stos
pop
shl
mov
rcrb
enter
push
std
or
imul
jge
and
add
mov
jle
dec
cli
test
jne
cli
sarl
mov
pop
and
sbb
xor
test
call
loopne
mov
xor
inc
ljmp
loopne
or
cmp
test
and
int
mov
adc
and
mov
and
mov
push
paddusb
sbb
test
sub
jns
popa
testb
pushf
jnp
mov
iret
mov
rolb
rolb
fstpl
xor
push
sbb
dec
inc
cmp
rclb
and
pusha
push
insb
enter
mov
fs
and
in
inc
push
sbb
sub
add
adc
mov
pop
cmp
icebp
mov
fnstsw
push
jb
test
fcoms
jmp
clc
jmp
rolb
mov
push
ja
push
push
hlt
ss
push
inc
pop
cmp
mov
fs
or
out
and
dec
lock
call
adc
jno
mov
pusha
int3
leave
ficompl
dec
xchg
xor
or
test
sarl
out
aas
push
xchg
push
rcll
pop
and
or
stc
dec
movb
xor
insb
js
add
mov
dec
rclb
or
dec
into
dec
pusha
push
cmp
popa
xor
pusha
push
fwait
jle
stc
clc
dec
inc
sub
test
push
arpl
cmp
or
mov
lahf
sub
cmp
xor
stc
jmp
mov
rcrb
cmp
loopew
and
inc
lods
seta
jns
paddsb
push
out
out
imul
lahf
faddl
and
daa
xor
sub
jl
adc
add
out
mov
push
jle
mov
xor
int
mov
hlt
out
ret
jbe
jg
dec
xchg
ss
inc
push
rcl
cli
out
xchg
fsts
ds
nop
mov
mov
mov
jno
pop
lock
inc
lcall
pop
in
jno
sbb
cld
dec
mov
sub
test
cs
push
scas
mov
leave
roll
sahf
repz
mov
std
int
loope
adc
mov
movsl
or
jns
fstl
or
push
ds
or
adc
out
pop
push
push
or
daa
mov
jle
fwait
ret
adc
or
or
push
pop
mov
rcr
leave
push
movsb
inc
mov
adc
xchg
sbb
xchg
pop
jg
out
in
cmc
sbb
mov
cmp
xor
int3
outsb
pop
push
jo
dec
xor
mov
fnstcw
ret
sub
outsl
js
repnz
xchg
in
xchg
mov
push
mov
mov
cmp
inc
scas
mov
sub
frstor
and
pop
jp
jl
or
push
add
dec
inc
js
je
scas
xor
adc
and
mov
sbb
mov
mov
push
mov
mov
test
hlt
call
inc
jmp
adc
dec
das
inc
sbb
pop
es
movsb
int
or
jo
into
leave
das
xchg
mov
loop
fwait
and
xchg
dec
jg
sbb
cmp
sahf
fstpl
xchg
les
mov
jle
inc
inc
xchg
mov
add
sar
orb
gs
or
fld
xor
dec
movsb
jo
jg
mov
cmc
push
rcr
sub
cmp
arpl
repz
shrb
lret
fsubp
inc
loop
testl
xor
pop
mov
mov
je
loop
sub
fwait
push
jae
xchg
pop
repnz
cmp
push
movsb
lahf
fists
fisttpl
fsubl
sbb
mov
dec
mov
std
testl
xlat
pop
ja
imul
sbb
int3
mov
jl
arpl
sub
mov
xlat
gs
repz
pop
pop
sarl
xchg
or
je
inc
push
mov
test
outsb
das
or
imul
pusha
insb
lods
push
lahf
sbb
inc
insl
xchg
mov
call
imul
or
js
dec
adc
in
sub
sbb
adc
rcl
jmp
jge
int3
xor
jne
arpl
xchg
sbb
stc
ret
mov
outsb
cmp
mov
inc
ljmp
roll
mov
bnd
cld
test
scas
mov
sub
rolb
mov
rcll
out
orb
in
or
jp
pop
std
adc
cmp
imulb
hlt
xor
iret
cmpsb
add
push
xchg
cld
mov
xchg
fcomp
pusha
mov
mov
sahf
stc
cmc
cmp
and
and
fs
adc
loopne
shrb
outsl
push
mov
sbb
stos
xchg
jecxz
xchg
shl
stos
in
or
jp
mov
lret
lods
xchg
sbb
in
pop
sbb
mov
inc
bswap
lods
out
outsl
int3
jnp
fimuls
jecxz
insl
pop
cmp
ds
or
addb
push
cmp
in
loop
sub
cmp
xchg
movsl
imul
pushf
movsb
or
fbld
xlat
cmp
jae
push
shll
shrl
adcb
xchg
subl
mov
in
add
sub
mov
sbb
imul
aas
cltd
mov
xchg
xor
push
iret
daa
lock
sbb
dec
jbe,pn
mov
scas
add
sub
pop
int
add
or
mov
jmp
sbb
pop
add
mov
aad
lret
pop
pop
lods
stos
fsts
pop
enter
and
pop
imul
fldenv
jle
imul
xor
xchg
xadd
repnz
sti
mov
movsb
lahf
popf
mov
pop
and
mov
xchg
xchg
dec
adc
pop
test
repnz
jbe
in
add
test
sub
xlat
jne
insb
push
es
icebp
mov
cmpsb
pop
pop
mov
add
jp
xchg
pop
lret
int3
call
insb
lret
addr16
movb
and
mov
addr16
add
loop
pop
jl
lea
in
mov
mov
xchg
fisubl
sbb
cmp
cmpb
insb
out
and
call
mov
bound
fcmovb
jnp
sbb
cld
sbbl
push
cmp
push
test
stos
push
fstpl
add
jl
push
add
xchg
icebp
pop
xor
cmp
out
out
stc
push
mov
outsl
xchg
ja
fisubrl
sub
inc
jge
mov
clc
adc
cwtl
mov
and
stc
out
js
subl
mov
jno
cmp
fs
mov
xor
push
add
sub
push
popa
mov
or
clc
movsb
addl
xor
mov
lret
inc
mov
and
loopne
repnz
inc
sarb
mov
and
push
mov
mov
jnp
cld
sub
outsl
popf
push
loopne
mov
lahf
out
test
mov
mov
bound
aas
pop
out
jbe
pushf
sbb
adc
mov
dec
stos
lods
repnz
lods
rcl
xchg
movsl
or
or
fsubrl
xchg
cli
dec
insb
push
and
jbe
test
dec
repnz
xchg
addl
or
movsb
sub
sub
sbb
pop
and
and
push
iret
bound
ret
aaa
lds
imul
dec
push
dec
les
xlat
fs
popa
sbb
and
jp
out
xchg
in
adc
push
loopne
xor
xorl
mov
iret
dec
iret
adc
sub
stos
cmp
lret
insl
inc
imul
push
xchg
sbb
push
iret
cs
cmp
jbe
xchg
push
neg
insl
aad
cli
out
dec
mov
mov
stos
cmpsl
dec
imul
dec
mov
es
inc
addb
adc
dec
xor
pusha
jmp
mov
dec
dec
push
lock
les
pop
jle
mov
mov
test
icebp
pop
sub
xchg
sub
mov
out
jno
push
jge
mov
out
xchg
or
pop
sti
inc
nop
xlat
sbb
mov
mov
cmp
in
sbb
mov
sub
stos
into
insl
lahf
add
mov
div
pop
sub
ja
mov
out
mov
aas
mov
in
aam
ret
repz
int3
loop
mov
loope
push
mov
inc
sbb
call
push
jne
sbb
andl
mov
test
mov
test
xor
pop
test
pop
movsl
movsl
icebp
push
imul
lcall
jp
cmp
mov
inc
push
mov
inc
adc
das
lret
ja
mov
popa
adc
ds
push
jo
pusha
push
mov
cmp
repz
inc
stos
xor
lahf
mov
adc
in
add
notl
pop
dec
cltd
xlat
fisubrs
xchg
and
cmp
dec
jnp
inc
nop
aad
mov
aad
test
xchg
dec
shl
shlb
cmpsb
loope
aaa
imul
mov
leave
ret
pop
rorb
cld
enter
xor
fcoml
cs
sti
sbb
mov
mov
mov
movsl
andl
fdecstp
adc
mov
push
idiv
stos
push
cwtl
cwtl
fucom
adc
es
pop
fs
sti
pop
gs
sub
repnz
push
adc
rol
or
sar
cmp
sbb
jge
sub
ljmp
ror
bound
and
clc
push
pop
aaa
je
mov
xchg
and
pop
xchg
push
dec
or
xchg
outsl
lds
dec
cwtl
loop
add
lahf
pop
mov
sbb
sahf
push
lock
fists
movsb
mov
cmp
jnp
inc
fmul
cmp
lock
into
fidivrl
cmp
repz
in
adc
imul
enter
push
outsb
mov
add
das
cmpsb
jno
push
mov
push
inc
pop
repz
cmpsl
cli
inc
jb
or
out
sete
das
pop
add
and
jae
jbe
sbb
out
cmc
stos
or
notl
sahf
pop
out
mov
or
push
out
data16
je
stos
adc
scas
les
rol
mov
push
xchg
ljmp
adcl
in
xchg
cli
enter
ljmp
dec
scas
sub
jns
imul
cli
mov
popf
xor
add
push
xor
fildll
xchg
jle
xchg
in
pop
pusha
shlb
orl
dec
dec
adc
das
rorb
jge
hlt
sub
adc
mov
lea
out
xor
xchg
add
les
xchg
sub
js
or
fs
iret
xor
lcall
dec
nop
shrl
cmpsl
pop
mov
xchg
fwait
xchg
pusha
leave
mov
add
popa
xchg
xchg
in
rcrb
out
sahf
adc
repz
and
fxch
push
js
bound
fcoml
add
add
mov
call
cltd
repnz
ret
sub
jo
pop
mov
fwait
dec
mov
jecxz
loope
insl
arpl
xor
filds
xor
push
jmp
xchg
inc
and
inc
xchg
pusha
lahf
hlt
scas
xor
mov
pushf
sbb
or
inc
int
jl
ret
inc
loope
mov
insb
cld
shl
stos
jg
test
inc
xadd
les
jl
shrb
outsb
jbe
push
xor
cwtl
inc
lea
xchg
leave
sti
outsl
aaa
test
mov
xlat
in
cli
jne
jl
movsb
dec
dec
push
mov
jge
sbb
repnz
sub
and
cmp
into
mov
pushf
shll
outsb
sbb
dec
sbb
movsl
mov
sbb
lret
mov
movsb
xorl
sub
adc
addr16
into
push
jg
ret
nop
cmp
movsb
dec
sub
mov
jae
lcall
aaa
rorb
or
add
stc
pop
pop
push
data16
in
popa
cmp
sarb
gs
xchg
add
gs
rolb
stos
xchg
inc
imul
add
mov
sarb
dec
sbb
stos
push
push
jns
or
lret
pop
push
pop
es
jecxz
mov
xchg
in
cmp
stc
stc
mov
ss
cmp
inc
in
out
and
jae
cld
lahf
mov
clc
mul
lea
fimuls
imul
pop
daa
or
jge
add
fstps
jae
in
pop
negl
fs
xchg
adc
sbb
in
lea
add
cltd
rolb
scas
add
ja
dec
mov
push
movd
movsb
stos
repz
cld
ret
jnp
or
xor
rorl
xchg
cmpsb
pop
ret
fnsave
dec
addb
insb
popf
dec
cli
adc
enter
sbb
and
mov
cmp
lds
cli
inc
add
jae
shrb
sbb
xchg
pop
fs
lcall
mov
adc
jbe
dec
adc
add
sbb
sbb
rcll
push
cmp
mov
mov
or
push
xchg
outsb
lock
mov
adc
and
dec
ret
pop
stos
sub
fmuls
clc
fsubrl
jne
xchg
fdivrp
sub
or
cli
jo
xchg
and
mov
cmp
jae
sbbl
pop
out
fdivs
inc
inc
stos
scas
pop
push
push
mov
cmp
xchg
add
xor
lock
mov
and
push
mov
or
aad
nop
int
iret
fistps
adc
fsubs
push
scas
jp
rcll
popa
xchg
xchg
push
inc
or
add
ret
cltd
loope
adcl
or
push
stos
mov
jl
xrelease
jp
flds
loop
mov
mov
sub
aaa
cld
jns
or
adc
lret
call
xchg
lcall
shlb
dec
or
xor
and
push
lods
test
insb
js
jae
inc
movb
mov
add
pop
pop
shlb
jmp
fwait
aas
scas
add
lock
sub
jne
lret
push
fwait
or
dec
push
xchg
mov
push
test
inc
mov
cmp
add
lea
out
in
and
pop
fs
mov
pop
sbb
pop
push
xor
push
cwtl
mov
pop
add
in
xchg
mov
aaa
rcrl
pop
add
sahf
adc
cmp
lret
ret
jg
ret
test
push
add
push
adc
test
jbe
popf
rcrl
test
int3
sub
dec
and
cmc
mov
inc
sub
dec
mov
stc
imul
jns
xchg
inc
lcall
sarl
mov
stos
les
cwtl
in
xor
in
pusha
out
add
xchg
jg
jne
or
inc
xor
xchg
mov
jmp
or
or
sbb
xchg
daa
cld
inc
lahf
test
negl
sub
adc
xchg
sbb
divl
mov
pop
jbe
inc
sbb
xor
movsl
jle
mov
cmp
and
bound
enter
mov
int
add
xor
aaa
pop
test
pop
cs
cmp
out
dec
or
sti
mov
aaa
stos
cmpsb
movsb
scas
mov
stos
ss
das
push
sahf
pop
into
or
std
adc
xorb
lret
inc
cmp
jno
insb
in
cmp
adc
or
mov
xchg
adc
mov
inc
orl
stos
cmp
fimuls
pop
cli
xor
scas
dec
test
dec
xchg
xchg
daa
push
mov
fdivrs
or
push
lods
ret
clc
inc
push
xchg
enter
cmp
xchg
adcl
mov
sub
arpl
iret
cmp
scas
nop
les
mov
inc
or
mov
ror
daa
cs
shr
mov
pushf
bound
xchg
shr
in
out
cmp
cs
mov
add
adc
sahf
loopne
insb
sub
jnp
shlb
mov
js
out
lds
inc
loope
sbb
xchg
pop
jb
cmp
inc
sar
fsubrl
inc
mov
iret
movups
out
roll
mov
mov
adc
mov
rorb
leave
leave
stos
es
mov
dec
ss
cmp
sub
and
test
mov
add
xchg
push
cltd
fcoms
bound
mov
into
fwait
icebp
test
test
and
sub
pop
pushf
and
push
push
mov
stc
mov
push
push
push
mov
movsb
sti
push
bound
inc
hlt
xorl
mov
push
mov
sub
cmp
or
mov
into
inc
mov
pop
mov
inc
pop
lret
mov
push
clc
outsl
mov
scas
mov
sbb
jle
loop
test
test
sbb
imul
int
rcrb
mov
and
es
pop
ss
into
adc
mov
inc
push
clc
movsl
std
lret
pop
push
dec
inc
lods
dec
clc
mov
addr16
aad
cmp
xor
push
daa
int
mov
out
xor
sbb
in
adc
mov
sbb
mov
xchg
arpl
leave
out
mov
cwtl
ficompl
mov
ljmp
xchg
aam
fldl
cwtl
in
roll
stos
pushl
xchg
xor
jle
inc
jl
sub
cmpb
inc
jmp
leave
shrb
sarb
repnz
pusha
cs
xor
aam
shlb
and
add
pop
inc
or
popf
in
out
movl
push
adc
xlat
mov
cmp
pop
xchg
insb
call
mov
leave
pop
std
or
dec
lods
jecxz
dec
mov
cmc
arpl
xor
push
or
xor
jl
jae
sub
push
jecxz
mov
xor
fcoml
addr16
jno
dec
mov
inc
mov
add
lcall
in
addps
es
or
cmpb
ja
js
rcrb
cmpsl
rclb
cmp
into
add
sbb
cwtl
mov
adc
and
fs
popa
lods
jo
sub
enter
mov
sbb
popf
frstor
jo
mov
sub
jo
ljmp
push
lret
in
jl
movsb
or
mov
out
pop
mov
pop
pop
or
pop
mov
push
mov
push
repnz
call
sub
in
inc
shl
sub
negl
stos
les
lcall
mov
in
mov
pop
mov
xor
sub
notl
push
inc
and
inc
aam
cmp
lods
in
push
adc
outsb
loopne
push
push
mov
fsubrs
sbb
loopne
pusha
rcll
fcmovnu
pop
mov
mov
out
adc
movsb
call
mov
ret
pop
or
sub
push
nop
pushf
sub
fstpl
andl
sub
enter
mov
add
mov
out
cmpsb
mov
sub
stos
repnz
adc
lock
fisubs
add
movsl
insb
scas
jne
jp
mov
mov
subl
mov
push
mov
sub
lods
jno
leave
sarl
inc
jp
fdiv
xor
push
hlt
insl
inc
pop
lret
std
jmp
in
jecxz
pusha
out
fsubrl
pop
push
pop
adc
cwtl
jge
xchg
cmpsb
mov
mov
repz
fsubs
xchg
jp
movsw
mov
test
lret
test
aaa
pop
inc
loopne
push
std
pop
mov
mov
pop
cmp
push
push
dec
loopne
insl
imul
ja
mov
xchg
std
jbe
xor
sbb
popa
stc
cld
mov
cmp
adc
insl
lret
pop
mov
divb
dec
dec
out
xchg
je
push
push
ret
addr16
loope
lahf
add
unpckhps
int
mov
outsb
xchg
mov
nop
sbb
bound
jnp
cmp
xchg
sub
push
or
mov
dec
xchg
jecxz
add
add
insl
mov
pavgb
push
jbe
xlat
pop
push
dec
mov
loop
mov
std
xor
jmp
ja
loop
adc
mov
popa
cmp
dec
jno
lcall
pusha
dec
cmp
inc
dec
xchg
fsubrl
gs
loope
sbb
vpaddq
imul
lret
dec
push
inc
fstl
stc
mov
jo
mov
sahf
les
cwtl
ret
sbb
add
bound
pop
and
xor
cmc
pushf
cvttps2pi
jo
inc
bound
and
pop
sub
xchg
mov
sbb
loop
or
xchg
push
ja
mov
test
mov
mov
jnp
fildll
mov
fwait
bound
xchg
mov
dec
adc
inc
xchg
ja
fisubl
repnz
adcl
lea
and
loope
imul
lahf
aas
xchg
imul
insb
pop
lcall
and
ljmp
jmp
movsl
pop
dec
dec
mov
xchg
xchg
or
dec
fsts
dec
adcl
jns
rclb
lock
mov
leave
int
dec
fnstsw
push
call
dec
subl
xchg
jmp
jns
imul
xchg
int3
sahf
and
inc
mov
mov
lcall
xchg
push
stos
mov
insb
cli
leave
dec
adcl
jne
xor
lods
sahf
shll
cmp
cmpsl
popa
movb
pushfw
fdiv
out
and
mov
fbld
gs
lea
pop
push
rorb
fmuls
movsl
pop
push
mov
stos
jge
repnz
sbb
xchg
sub
incb
jecxz
dec
ds
cmp
iret
xchg
lahf
daa
cmp
cmp
gs
test
leave
adcl
pushf
pop
cmp
jo
loope
ret
xchg
xchg
negl
sbb
imul
inc
inc
mov
or
clc
ds
sbb
or
sbb
sub
xchg
roll
cmp
test
jnp
cmpsl
test
pop
daa
or
mov
bound
jb
add
adc
ret
lahf
cmpsl
push
aaa
in
bound
dec
or
pop
daa
test
mov
outsl
scas
int3
sbb
xchg
lahf
pop
push
out
cmpsb
or
pop
sar
add
gs
cmp
sbb
mov
mov
sub
xor
cwtl
clc
jecxz
xchg
out
mov
inc
out
adc
shrb
ds
mov
mov
and
inc
xchg
stos
rcr
cmpsb
outsl
nop
shll
dec
sarb
daa
pop
pop
in
ret
add
dec
aad
inc
test
dec
int
test
aas
sbb
lret
or
mov
jmp
repz
das
inc
or
sub
add
sub
mov
xor
out
sub
and
cwtl
pop
add
sbb
add
sub
in
adc
lds
lcall
lock
callw
in
xor
push
mov
cwtl
jecxz
lret
push
jecxz
pop
and
data16
xor
dec
sbb
xchg
pop
dec
aas
nop
mov
xchg
cmp
sub
jp
pop
sbb
fmulp
mov
movsb
aas
jg
jns
jae
and
std
mov
jmp
mov
jmp
je
pop
sbb
inc
or
sub
es
fdivl
fnstsw
adc
add
sbb
sub
aas
out
inc
mov
or
lahf
cmpsb
sbb
push
push
aad
pop
sbb
push
push
bound
sbb
or
rorb
sub
mov
nop
movsb
loope
ret
xchg
xchg
or
cmp
push
loopne
ror
xchg
add
pushf
fnstcw
shlb
jecxz
xchg
daa
sbb
cmp
jo
loopne
ror
xchg
add
pushf
pop
cmp
jo
loope
ret
xchg
xchg
or
cmp
push
loopne
ror
xchg
add
popf
fnstcw
shlb
out
leave
fists
cli
popf
in
cmp
jo
loopne
ror
xchg
add
pushf
pop
cmp
jo
loope
ret
xchg
xchg
or
cmp
push
loopne
ror
xchg
add
pushf
fnstcw
shlb
jecxz
xchg
daa
sbb
cmp
jo
loopne
ror
xchg
add
pushf
pop
cmp
jo
loope
ret
xchg
xchg
or
cmp
push
loopne
ror
xchg
add
pushf
fnstcw
shlb
out
iret
xchg
lahf
daa
cmp
cmp
jo
loopne
ror
xchg
add
pushf
pop
cmp
jo
loope
ret
xchg
xchg
or
cmp
push
loopne
ror
xchg
add
pushf
fnstcw
shlb
jecxz
xchg
daa
sbb
cmp
jo
loopne
ror
xchg
add
pushf
pop
cmp
jo
loope
ret
xchg
xchg
or
cmp
push
loopne
ror
xchg
.byte
daa
