cmp
jo
pop
xor
jno
push
fiaddl
addr16
add
outsb
fdivr
and
push
addr16
push
ret
adc
les
dec
jae
sub
inc
leave
xchg
pop
nop
out
add
clc
push
es
push
add
sub
xor
dec
mov
cltd
xchg
inc
cmpsl
ret
test
popa
add
xlat
pop
adc
enter
jg
jl
xorb
add
imul
sahf
pop
mov
xor
adc
jge
popa
ret
call
stc
out
std
mov
dec
jnp
negl
sub
sar
rolb
iret
cmpsl
dec
popf
cmp
xor
imulb
dec
stc
arpl
mov
jns
push
fildll
jecxz
mov
test
and
addl
pop
xchg
lods
pop
ret
ficoml
add
popf
addps
or
test
popf
xchg
fsubrl
jo
inc
pusha
leave
mov
int3
pushf
push
xchg
jl
jae
je
icebp
sbb
adc
arpl
inc
cwtl
or
mov
dec
es
or
fwait
jge
sbb
adc
cmpsb
xchg
rcrb
clc
jb
sub
movsl
xchg
fistps
loopne
mov
sub
cmp
xchg
les
lods
cmp
and
dec
inc
mov
adc
jae
push
bndstx
movsb
lea
add
decb
les
fcomp
mov
cmpsb
in
jmp
xchg
xor
push
gs
cmp
test
data16
and
cwtl
lret
jo
aam
lahf
fisubrs
jle
jbe
jo
inc
out
dec
mov
movsb
aam
test
mov
ret
in
jmp
lods
test
adc
sub
xchg
dec
scas
fsubrl
push
add
jb
jo
adc
cmp
lds
dec
rcr
mov
fistps
enter
adc
jmp
dec
xchg
jb
mov
or
pusha
shlb
sub
fs
sarl
push
push
addr16
movsl
xor
pop
xchg
pop
jae
adc
jl
push
and
xor
out
cmovno
or
lahf
pop
sahf
pop
fdivs
add
pop
jb
sbb
sbb
loope
aam
sbb
dec
pop
addb
add
aam
fwait
aas
jmp
popa
popf
pop
jo
xor
mov
jo
repnz
nop
jb
pop
leave
pop
sbb
aaa
icebp
mov
insb
int
shl
test
inc
out
movsb
mov
pop
shrl
mov
std
rcrl
inc
add
pop
shll
push
mov
xchg
popa
add
shlb
lcall
xchg
lahf
push
mov
jnp
xor
sbb
jle
sub
mov
sbb
sti
cmp
cmp
or
or
sbbb
in
fstpl
add
or
xchg
mov
cmp
fistpll
mov
sahf
and
stos
sbb
fsubr
fs
mov
lea
aas
pop
jl
std
mov
inc
lcall
cmc
test
and
xor
push
popf
negl
dec
test
xchg
in
pop
jo
js
pop
dec
add
jecxz
hlt
in
icebp
enter
lret
jge
dec
and
add
rcr
lret
loopne
aam
push
mov
push
xchg
fldcw
mov
test
std
fxch
xor
xor
jbe
arpl
push
jl
mov
xchg
push
adc
lods
test
ret
pushf
lods
out
jl
lcall
outsb
sub
fs
imul
lods
xchg
out
jnp
xchg
mov
inc
cmp
add
in
jge
xchg
mov
sub
sarb
je
loop
fmuls
cwtl
xor
cmp
jle
repz
fs
int3
test
movsl
fs
adcl
lahf
xchg
ret
and
int3
add
mov
pop
mov
sbb
and
mov
loopne
in
xchg
mov
jae
mov
jle
add
cld
dec
add
fwait
pop
cmc
call
jl
lret
in
inc
cmc
lcall
push
add
dec
rclb
xorb
data16
lret
jns
lds
nop
lds
mov
dec
maskmovq
notl
and
mov
test
test
repnz
icebp
add
push
sbb
ret
or
or
test
pop
mov
movsl
or
sbb
fistl
xchg
push
jecxz
mov
fldenv
pop
leave
sbb
js
ds
inc
fwait
leave
cmc
cmp
and
lahf
or
es
mov
inc
nop
sbb
sarb
cmp
xchg
mov
lahf
sub
xchg
imul
popf
jmp
cmp
loopne
fdivrl
jne
shl
stos
int3
add
push
and
mov
add
loopne
fildl
lret
sbb
inc
sub
outsb
int3
sbb
lods
add
jb
mov
cmp
ljmp
stc
jge
rol
pop
repz
xlat
lds
pop
stos
dec
aaa
loopne
pushf
jnp
mov
pushf
mov
lcall
jno
mov
push
push
cld
sub
aaa
mov
sub
sar
pusha
cmc
movsl
dec
sbb
xchg
xor
or
pop
sbb
imul
mov
fiaddl
movsb
ss
mov
xchg
pop
or
mov
add
jmp
imul
inc
sarb
loope
jecxz
dec
xor
out
push
dec
sarb
js
dec
jmp
or
ljmp
mov
pop
sub
popf
xor
in
cmovs
mov
xchg
pop
out
mov
decl
add
sbb
in
sub
and
dec
sbb
in
sbb
xor
sub
test
ss
and
xchg
movsl
dec
sbb
aas
push
cmc
sbb
mov
pop
adc
rorl
test
or
mov
jl
cltd
inc
or
lods
jno
mov
int
fists
mov
jne
pop
sub
cmp
sub
cmc
sbb
mov
cld
sub
idivl
loopne
mov
mov
add
inc
sbb
sbb
outsb
jno
cs
adc
and
mov
sbb
sub
xchg
adc
cmp
pop
mov
adc
xchg
lahf
and
pushf
jne
pop
jns
or
test
inc
insb
orl
xlat
pop
leave
call
mov
and
add
mov
sbb
mov
dec
push
enter
mov
add
insl
sub
ret
fwait
pop
loop
cmp
mov
shlb
jbe
outsb
adc
fists
iret
int3
mov
testl
mov
mov
inc
sub
movsl
and
popf
xchg
mov
lods
jecxz
cli
rorb
dec
fisttps
fcoms
popf
lods
leave
test
outsb
cli
cmp
or
dec
popf
ljmp
sbbb
mov
fisttpl
sahf
out
pop
mov
ret
sbb
pop
cmpsl
pop
fs
lods
loopne
and
or
sbb
popf
fimuls
sbb
push
inc
add
add
adc
inc
sbb
mov
mov
jb
addr16
sbb
mov
mov
mov
and
movsl
pop
xchg
dec
testb
std
bound
mov
sti
and
jb
mov
mov
pop
mov
cmp
dec
adc
bound
dec
sbbb
push
mov
les
mov
arpl
inc
or
mov
inc
sbb
sub
xor
popa
mov
adc
lret
repz
dec
add
cmpsb
sbbl
xor
testl
arpl
jge
cli
mov
fistpll
arpl
lds
and
cld
jo
and
jp
rorl
xchg
fistl
fimull
cltd
dec
dec
inc
pop
icebp
mov
js
pop
fstl
pop
enter
lahf
scas
std
fabs
cmp
xchg
push
call
adc
sub
into
popa
loopne
add
mov
or
or
cmp
mov
insl
xchg
imul
jle
clc
xor
sti
sti
and
xchg
sti
xor
dec
dec
mov
inc
loope
mov
sub
fwait
pop
loop
insb
out
mov
shlb
cmc
lret
push
adc
repz
jns
mov
lock
mulb
xchg
or
mov
fwait
lock
cwtl
lret
inc
sub
rcrb
cli
shlb
adc
ja
repz
add
mov
add
cli
sti
mov
cmpsl
movsl
push
mov
fidivl
mov
jae
lds
cmp
ret
or
aad
imul
arpl
mov
lret
loop
mov
pop
jno
push
imul
adc
lahf
scas
std
fabs
cmp
mov
dec
js
mov
adc
rolb
outsb
mov
or
in
mov
jnp
inc
push
mov
adc
mov
mov
mov
cltd
inc
je
adc
ret
adc
or
mov
cmpb
sbb
mov
sbb
pop
xchg
xchg
fwait
adc
das
in
cmc
mov
leave
adc
mov
adc
inc
mov
mov
call
iret
stc
jnp
mov
adc
ss
outsl
or
mov
fwait
lock
cwtl
lret
inc
sub
rcrb
sbb
test
xchg
imul
add
cli
mov
lcall
dec
fucomp
je
push
lret
into
lcall
sbb
jno
test
xchg
sub
add
lret
stos
xchg
fimull
fisubrl
pop
jb
lods
fmulp
mov
push
movb
cmp
mov
scas
aaa
mov
cli
jnp
inc
mov
push
out
ret
xor
mov
test
sbb
mov
adc
std
inc
jp
sbb
xor
cmpsb
gs
clc
xor
enter
rcll
dec
or
loop
pop
pop
lock
and
outsb
das
mov
fcomp
sbbl
inc
sahf
rcl
out
iret
mov
jecxz
stc
daa
pop
jmp
outsl
cltd
mov
lret
ret
sbb
dec
adc
xchg
or
mov
fwait
mov
cwtl
lret
inc
sub
fidivs
cmc
jb
mov
inc
jb
mov
add
cli
sti
mov
cmpsl
mov
mov
fidivl
mov
jae
lds
cmp
and
or
cld
mov
es
cltd
stos
stos
rorl
xchg
fistl
ficompl
pushf
xchg
sbb
lret
jnp
xchg
sub
mov
iret
js
jle
scas
pop
or
lahf
sub
loope
inc
add
add
mov
mov
fwait
push
dec
mov
fisubl
fsub
cmp
imul
xchg
mov
push
jns
enter
cmpsb
fisttpl
insb
lods
insb
out
or
lret
sub
loop
leave
sbb
jecxz
jecxz
and
sub
sub
inc
cwtl
ds
dec
movsb
adc
fsts
ljmp
lods
loopne
pop
daa
setae
jecxz
clc
daa
sbb
mov
inc
sbb
outsb
mov
inc
cmp
add
std
xchg
xlat
mov
hlt
mov
fwait
xor
lret
inc
sub
pop
xor
jge
test
fdivl
mov
mov
push
lret
pop
dec
pop
dec
sbb
sbb
adc
adc
xlat
xor
sbb
or
stos
arpl
scas
xchg
lcall
inc
or
insl
xchg
sbb
lahf
scas
std
test
jno
icebp
jmp
mov
andl
push
out
jl
jp
jb
and
jnp
inc
push
mov
xchg
sbb
jnp
xchg
push
pop
and
popf
adc
rcl
add
cmpsb
inc
test
inc
mov
push
sub
push
aam
sub
testb
mov
dec
sahf
inc
sub
xor
mov
arpl
xchg
shl
ret
loopne
mov
push
cmc
lret
daa
sti
into
cmp
sbb
xorb
fsubl
add
cmp
mov
popf
cwtl
stos
fsubrl
pop
int
sbb
iret
push
xor
sar
test
hlt
stos
push
sub
and
pop
dec
sbb
mov
lods
movb
in
jmp
mov
cmp
sbb
sbb
sbb
or
stos
arpl
inc
sub
scas
xchg
lcall
inc
pop
cld
ret
cmp
push
cmpsl
xchg
loop
iret
and
inc
fwait
imul
inc
push
mov
sub
add
inc
mov
add
shlb
adc
mov
or
fwait
sub
lahf
xlat
cltd
into
clc
xor
hlt
jne
jecxz
movsb
dec
imull
xchg
dec
xorl
adc
enter
mov
add
insl
sub
xor
mov
sub
call
jns
cltd
mov
add
mov
cmp
jp
add
mov
seto
ljmp
pop
lods
lret
movsl
ret
insb
test
pop
push
xchg
inc
std
xlat
cmp
inc
and
inc
mov
lds
arpl
jo
inc
dec
xchg
xchg
fsts
xor
pop
mov
std
xor
mov
inc
mov
loope
dec
xchg
aad
mov
jmp
lahf
adc
out
js
push
jge
push
add
sbb
clc
mov
cmpsb
call
les
xchg
sub
xor
dec
clc
test
stos
icebp
mov
dec
sbb
inc
push
dec
pop
or
stc
out
call
cltd
push
bound
jp
mov
test
sub
cmp
ret
vpmacsdd
icebp
fsts
repnz
lcall
setae
jecxz
icebp
daa
divl
scas
mov
inc
cmp
add
std
out
pop
xlat
mov
divb
cwtl
lret
inc
sub
pop
xor
jno
test
mov
in
ljmp
dec
dec
dec
sbb
sbb
ret
es
xor
shrb
cmp
mov
cmpsb
xor
jb
fcoml
cmp
out
mov
dec
sbb
popf
fimuls
sti
out
push
inc
or
add
inc
orl
xchg
xchg
cwtl
shrl
xchg
adc
movsb
pop
jae
xchg
cmpsb
or
mov
jmp
rol
out
sub
cmpsl
in
popa
insb
mov
arpl
xchg
enter
aam
sub
fidivl
mov
dec
sahf
inc
sub
xor
mov
arpl
xchg
shl
ret
loopne
mov
push
cmc
lret
daa
loop
cmp
repz
pop
and
cwtl
pop
lock
je
mov
fsubrl
pop
iret
sbb
sarb
das
fcmovu
adc
leave
mov
inc
fists
stos
or
lret
fucom
cli
mov
cld
mov
mov
or
fcmovnu
xchg
pop
jo
inc
inc
xchg
nop
in
inc
cmp
adc
xor
cmp
les
pop
sahf
mov
aad
mov
add
inc
pushf
rclb
sbb
mov
cld
loop
cmp
jmp
mov
andl
adc
adc
mov
sbb
pop
xor
imul
push
pop
scas
enter
ljmp
or
inc
cltd
jmp
and
mov
inc
dec
mov
ret
add
xchg
push
hlt
dec
movsb
popf
out
loop
cmp
xor
or
les
mov
mov
jo
pop
iret
adc
mov
cltd
xor
rcrl
cmpsl
mov
cli
dec
and
iret
aas
or
lods
jecxz
sbb
mov
test
cwtl
mov
aaa
stos
xchg
lods
ljmp
mov
lods
mov
mov
jno
inc
push
loop
push
ret
adc
imul
xchg
mov
pop
push
stos
fnsave
lcall
cmp
jo
into
scas
jg
leave
icebp
mov
pushf
repnz
or
inc
add
sbb
cwtl
outsb
rcr
es
push
fisubs
xchg
imul
in
adc
clc
xor
enter
rcll
dec
or
loop
pop
pop
jno
shr
and
xchg
das
mov
fcomp
sbbl
dec
iret
pop
out
out
mov
clc
sti
pop
es
rcr
repz
mov
sbb
add
mov
and
iret
xor
adc
add
repnz
stos
jecxz
add
push
xor
sti
push
ljmp
shrl
xchg
lret
rcll
dec
outsl
sub
dec
bound
add
jo
cmp
sbb
lods
sub
popf
adc
out
sbb
bnd
lods
scas
fbstp
jecxz
loop
bound
sub
dec
pusha
adc
inc
push
push
xchg
adc
pop
imul
xchg
mov
push
jns
enter
xchg
cltd
mov
cmpsb
jnp
call
cltd
push
add
cwtl
pop
push
or
lea
movsb
xchg
out
loope
inc
out
mov
lcall
push
into
lea
js
mov
jns
into
mov
repz
pop
and
test
lock
add
aaa
or
cltd
inc
popa
stos
xor
mov
xor
sar
int
cmp
sub
cmc
sbb
std
fistpll
arpl
lds
mov
mov
stos
mov
mov
pop
out
sbb
add
add
fs
lods
loopne
cmpsl
dec
push
fucomi
cmc
mov
enter
inc
shlb
or
sbb
or
lret
js
mov
test
mov
mov
inc
inc
sbb
cmpsb
roll
mov
mov
loope
bound
cmpb
je
test
movb
inc
mov
and
or
sub
xor
mov
sbb
mov
adc
mov
mov
cmp
jp
add
jns
inc
hlt
sbbl
inc
sbb
leave
pop
mov
movsl
ret
insb
test
ror
add
push
lret
push
lret
xchg
cmpsb
ljmp
or
lods
mov
mov
jno
inc
push
out
rol
in
add
mov
inc
dec
lret
stos
xchg
fimull
cli
outsl
sub
lcall
mov
mov
push
ret
fwait
sahf
xchg
fwait
inc
out
cmp
adc
pop
xchg
cwtl
add
mov
xor
in
inc
mov
and
inc
jmp
mov
adc
xchg
jae
loopne
add
ret
mov
jmp
lret
gs
movsb
dec
daa
sub
sbb
mov
dec
mov
inc
loope
mov
sub
rol
cmp
mov
sahf
ret
mov
pop
test
cmp
mov
or
mov
lcall
mov
jb
mov
add
sbb
insl
movsl
jmp
push
divb
nop
xlat
dec
sub
ret
push
repnz
out
adc
lret
sar
xor
sti
sbb
fbstp
rorl
sbb
shrb
or
mov
push
sub
mov
jbe
jb
lods
jecxz
lock
jns
push
pushf
shr
sbb
fisubrl
jnp
inc
mov
add
or
mov
dec
mov
xchg
sub
cld
and
push
mov
xchg
push
fsubl
and
std
bound
pop
add
mov
ret
cmp
inc
inc
mov
mov
sub
mov
fsubr
push
and
mov
icebp
and
cmc
mov
xor
mov
imul
mov
sbb
bound
lcall
mov
xor
and
insl
movsl
mov
aas
and
mov
inc
stos
cwtl
adc
mov
jge
jne
jno
mov
mov
test
sti
pop
sar
loope
cmp
pop
daa
sbb
shrb
xchg
mov
scas
testl
cmp
jmp
pop
mov
int3
jno
pusha
mov
scas
mov
lahf
jecxz
enter
inc
mov
or
sbb
inc
jns
dec
xchg
lock
cmp
sbb
out
fidivl
xchg
aam
push
ljmp
add
inc
cltd
jmp
and
mov
inc
pop
enter
sub
fidivl
sbb
mov
jne
jnp
xchg
repz
pop
dec
push
pusha
mov
sbb
dec
call
mov
mov
cmp
jp
add
pop
or
rolb
ljmp
pop
mov
movsl
ret
insb
test
cli
add
inc
cli
cmpsl
cmp
dec
sbb
mov
xchg
stc
mov
xchg
xchg
popf
lret
mov
sbb
leave
pop
popa
inc
xchg
inc
das
sbb
adc
inc
xchg
or
adc
inc
lcall
pusha
jnp
enter
add
cltd
sub
dec
mov
iret
js
mov
repnz
adc
pop
es
add
shlb
push
or
lret
cwtl
xor
outsb
test
push
fisubl
cmc
mov
mov
mov
pop
fsubl
xor
push
and
adc
andl
sub
sub
jge
int
js
push
dec
mov
or
ja
xor
mov
call
push
sahf
rorl
cmc
lret
push
adc
mov
jns
mov
lock
je
rcl
jbe
xlat
ja
repnz
fwait
lock
lret
inc
sub
rcrb
cli
pop
xor
jb
mov
inc
jb
mov
add
cli
lret
mov
stos
inc
lret
lds
cmp
sub
xchg
adc
xor
xchg
int
xor
jb
fcoml
pop
adc
jmp
popf
test
inc
bnd
lods
scas
fbstp
inc
in
lock
add
sbb
inc
sbb
mov
dec
mov
xchg
sub
and
push
mov
inc
gs
jmp
mov
mov
cmpsb
and
cmpsl
data16
xor
push
and
adc
addl
push
adc
mov
in
lea
movsb
xchg
out
loope
inc
iret
dec
mov
lcall
pop
divb
cmc
mov
jno
mov
movsl
add
xchg
push
lock
pop
jno
or
sub
nop
jg
repnz
icebp
imulb
js
and
and
lds
pop
mov
push
ja
cmpsl
push
out
lods
sti
cli
rcr
loopne
cmp
shrb
xorl
mov
imul
movb
loope
fwait
loope
dec
movsl
push
arpl
scas
ret
mov
inc
xlat
fdiv
sbb
popa
or
mov
addl
or
mov
ret
cwtl
out
rol
xor
mov
lret
in
mov
mov
xchg
cltd
cmp
push
add
xchg
pop
fldenv
mov
loope
xchg
enter
aam
sub
fidivl
cwtl
sahf
and
jg
mov
xchg
repz
arpl
mov
loopne
ret
loopne
mov
in
ds
mov
lock
loop
cmp
push
sarb
imul
test
adc
push
sub
movsb
fldcw
dec
in
pusha
cmc
fbstp
push
repz
ljmp
inc
cmp
fs
insl
push
inc
push
stos
rcrb
xor
mov
ss
jle
mov
add
lods
inc
pop
lcall
mov
es
enter
jo
jo
arpl
rcll
clc
xor
mov
rol
sub
les
inc
jecxz
mov
and
movsl
in
and
xor
dec
jb
pop
mov
jne
jecxz
roll
sbb
add
andb
js
sbb
lea
popf
out
mov
mov
lcall
xchg
shlb
loopne
mov
test
iret
sbb
xorb
shll
add
cmp
out
or
daa
or
mov
cwtl
or
xchg
loop
les
sbb
test
push
in
xor
jnp
jno
cld
vorps
data16
inc
mov
shrb
scas
ja
inc
xchg
jl
rorl
cmpsb
pop
xchg
jae
lods
pusha
inc
add
jecxz
fwait
out
loope
ret
scas
cs
icebp
leave
es
fstp
adc
mov
pushf
adc
mov
dec
xchg
jb
mov
rol
and
lret
or
push
push
fisubs
xchg
imul
adc
rcl
adc
jp
inc
mov
addl
sbbl
add
mov
sub
sbb
rcrb
mov
push
mov
dec
and
mov
mov
test
fwait
lahf
aas
test
sbb
jnp
mov
adc
ss
mov
decb
cmpb
lret
jbe
pushf
inc
stos
adcb
mov
xor
stos
mov
mov
test
mov
fidivl
das
mov
jae
inc
push
cmp
and
sub
test
pop
stos
stos
rorl
xchg
out
leave
or
jb
lods
ret
sbb
sahf
push
push
pushf
rorb
ds
push
nop
adc
xchg
cli
stc
and
cs
mov
add
mov
sbb
pop
xor
cmpsb
ficomps
push
fisubl
stos
xor
jo
cmp
daa
hlt
enter
inc
int3
jo
mov
test
push
adc
lods
int
mov
pop
mov
shr
xor
aam
sti
call
push
popf
mov
cmp
jp
add
add
mov
adc
sbb
mov
mov
xor
loopne
sarb
cli
xor
jb
mov
inc
add
mov
add
cli
lret
fs
fistpll
arpl
lds
or
in
push
popf
and
xchg
or
jo
push
mov
fsubrl
fsts
jge
mov
pop
and
or
jge
inc
push
dec
pop
pop
mov
out
push
rorl
add
inc
xor
add
cwtl
shll
andl
ss
mov
mov
mov
and
int
sub
cmpsl
sti
dec
popa
jge
pop
pop
in
out
cmp
mov
in
adc
dec
rclb
fidivl
int3
jns
mov
xchg
repz
xor
mov
dec
add
into
lcall
fcmovnbe
xor
hlt
leave
add
sbb
test
lcall
mov
sbbl
dec
sbb
xlat
or
shrl
leave
test
das
cli
push
mov
adc
ljmp
adcb
loop
addb
sub
dec
push
outsb
stos
push
fnsave
ljmp
mov
int
mov
addb
incl
enter
inc
shlb
or
sbb
sarl
nop
lock
mov
cltd
xor
lods
inc
jge
sbb
inc
mov
cltd
inc
pusha
mov
lods
int
inc
bound
cmpb
out
xchg
dec
mov
insl
cmpb
mov
inc
sub
xor
mov
arpl
mov
loope
ret
loopne
mov
push
cmc
lret
daa
cmc
into
jl
fisttps
mov
jp
add
cmp
lock
cmpsl
push
sarb
imul
test
jl
push
sub
movsb
fldcw
mov
aaa
xor
mov
leave
mov
pop
sub
les
xchg
add
ret
imul
cmp
or
dec
mov
fmull
jnp
dec
push
mov
scas
aaa
mov
cli
jnp
inc
mov
add
dec
add
add
cwtl
rcr
sub
les
adc
movsb
pop
jae
xchg
enter
rcll
fsubs
lahf
outsl
push
ret
xor
adc
inc
shlb
loop
pop
pop
lock
push
and
sbb
int
call
int
pop
lea
cli
icebp
ds
sahf
shll
jp
aas
in
mov
jnp
mov
adc
ss
jbe
repnz
fwait
lock
lret
inc
sub
rcrb
sbb
adc
adc
mov
xor
stos
or
cli
mov
cld
mov
sbb
xchg
jecxz
arpl
sub
xor
push
inc
lcall
sub
xchg
stos
jge
jns
adc
sbb
mov
lds
es
sbb
adc
xorb
xchg
andl
xchg
jle
xor
mov
rol
and
lret
dec
xor
dec
dec
test
stos
icebp
mov
dec
xchg
insl
or
sbb
out
call
mov
xchg
sbb
dec
push
add
mov
sub
sbb
sub
jle
pop
push
mov
dec
and
mov
mov
test
fwait
lahf
aas
pusha
pop
sar
sbb
in
lret
dec
mov
add
sub
mov
and
and
mov
inc
stos
pushf
adc
mov
dec
add
fmull
lret
cmp
pop
int3
stc
mov
sub
lahf
fisttpll
test
or
push
ret
mov
shlb
int
push
jbe
lods
pop
jno
push
jp
pop
fstl
das
lahf
scas
std
fabs
cmp
xor
inc
cwtl
sbb
mov
andl
sbb
inc
mov
xor
fsubs
sbb
data16
in
gs
adc
cli
mov
out
sbb
cmpsl
ret
mov
xlat
pop
fstps
xchg
adcl
push
xorb
popa
mov
push
hlt
dec
addr16
je
sbb
add
addr16
shrb
movsl
dec
call
fucomip
hlt
cmp
fists
iret
int3
aaa
icebp
add
mov
sbb
sub
movsl
and
fsubrs
lock
aam
or
jne
mov
test
cwtl
xor
scas
ljmp
jmp
popf
ljmp
or
mov
mov
sbb
mov
dec
outsb
les
push
mov
xor
add
add
jno
pusha
mov
xlat
scas
mov
lahf
fists
fcmovne
pop
adc
fcomps
or
sbb
dec
rcr
lahf
xchg
pop
pop
add
sbb
sbb
mov
rcrb
push
in
xchg
jmp
ret
xchg
daa
pop
fisubl
cmp
fnsave
adc
dec
fmull
enter
or
sub
mov
adc
xlat
adc
int
mov
repz
mov
imul
dec
call
inc
int
lock
mov
repz
pop
and
test
lock
pop
and
mov
popf
xchg
fsubrl
pop
iret
sbb
iret
add
xchg
adc
mov
sbb
sub
push
lahf
push
lret
push
dec
push
dec
js
fldt
jmp
fmul
mov
push
dec
adcb
and
fcmovne
xchg
fwait
adc
loopne
cmp
mov
jb
lods
inc
pop
lcall
mov
in
mov
leave
loop
in
nop
xchg
sbb
or
lcall
lea
mov
fs
mov
cmp
jne
mov
xchg
cltd
cmp
push
popa
push
xchg
pop
fldenv
pop
outsb
push
adc
cltd
call
jle
or
fidivl
movsb
out
and
push
xchg
mov
ret
arpl
mov
popa
repz
loopne
mov
test
iret
fisttps
mov
jp
add
cmp
push
sarb
imul
test
movsl
stos
push
sub
and
pop
xor
rcll
sub
cmp
and
inc
loop
add
xchg
lcall
ja
lds
ljmp
cmp
fstl
mov
scas
std
leave
loope
mov
add
xchg
sbb
jecxz
xor
mov
rol
adc
lret
pop
xor
dec
test
mov
stos
xor
nop
jb
pop
mov
jne
jecxz
pop
push
xchg
orb
mov
xchg
inc
adc
aad
imul
jp
fwait
pop
loop
insb
cld
mov
shlb
jg
jns
roll
in
rol
dec
add
add
and
lcall
cmp
insb
dec
and
mov
test
push
dec
sbb
mov
mov
push
sti
dec
into
out
in
pop
mov
mov
xchg
lret
rcll
dec
xor
dec
cmp
push
xchg
fimull
or
fwait
lods
jge
shrl
cmpsl
push
push
fucomi
cmc
mov
enter
mov
rclb
andl
inc
aam
dec
sbb
pop
xchg
xchg
fsub
fwait
cmp
fcoml
push
mov
xchg
daa
stos
into
xchg
cltd
test
cmpsb
jnp
clc
jno
jecxz
clc
push
add
mov
jmp
test
fstp
xor
sbb
add
jns
mov
lods
mull
ds
xlat
test
cmp
fists
iret
int3
or
mov
mov
mov
pop
ljmp
cltd
test
movsl
ret
insb
test
sahf
sbb
test
push
in
xor
push
xor
pushf
arpl
jo
inc
inc
xchg
push
fsts
pop
inc
push
cmp
xchg
stos
std
cld
pop
mov
lds
or
movsl
mov
mov
xor
xor
fwait
cmp
lahf
adc
pusha
lret
popa
or
mov
or
mov
dec
shlb
mov
lret
pop
notb
mov
xchg
sbb
subl
jp
enter
adc
call
xchg
cltd
enter
rcll
dec
add
dec
lcall
enter
cmp
jle
mov
inc
sub
xor
mov
xorb
into
xchg
sub
sti
mov
jns
into
cmp
out
ret
sahf
repz
pop
and
test
lock
sub
add
lods
xchg
sub
adc
inc
in
xlat
mov
inc
and
inc
mov
xlat
aaa
push
repz
rcrl
test
roll
in
dec
jne
adc
cmp
fcmovne
xchg
fwait
adc
sub
je
int
pop
pusha
xchg
loope
inc
mov
sub
jnp
jg
scas
loope
pusha
ljmp
mov
adc
mov
dec
mov
fisttpll
mov
fwait
xor
push
sub
and
jne
out
stc
xor
movsl
iret
mov
xlat
pop
fnstcw
enter
inc
and
pop
mov
pop
mov
xchg
inc
loope
mov
sub
ffree
mov
ret
mov
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
cltd
push
repnz
pop
mov
or
sub
jg
repnz
xchg
icebp
ss
js
insl
mov
inc
mov
stc
sub
push
in
mov
jae
mov
arpl
movsb
or
jl
or
mov
push
sbb
xchg
or
or
sub
lret
jno
push
mov
pop
xor
xchg
loop
iret
or
imul
mov
bound
arpl
rclb
rorl
mov
sbb
mov
cmpsb
fsubs
stos
cmp
xorb
mov
mov
and
mov
enter
int3
push
push
xchg
stos
out
sbb
dec
pop
xor
xor
pop
push
mov
pop
out
call
icebp
loopne
pop
daa
into
xchg
jecxz
test
iret
adc
mov
cltd
addb
mov
mov
sbb
jg
lds
xchg
sub
adc
imul
pop
and
jns
popf
inc
loope
jae
sbb
in
repz
in
rorl
in
dec
sub
inc
or
fcmovne
xchg
fwait
adc
loopne
cmp
mov
jb
lods
inc
pop
lcall
mov
in
mov
leave
loop
in
nop
xchg
sbb
stos
into
popa
insb
add
dec
mov
pop
repnz
and
insb
and
jg
xor
aad
cmc
mov
mov
xchg
cltd
cmp
shrd
xchg
pop
fldenv
mov
loope
xchg
enter
aam
sub
lret
and
addr16
jne
jnp
xchg
repz
lar
arpl
mov
loopne
ret
loopne
mov
icebp
into
mov
xor
sbb
int
inc
sbb
adc
pop
int
roll
imul
mov
ja
inc
in
leave
mov
jns
lahf
popf
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
nop
sbb
in
sahf
cwtd
adc
xchg
sub
dec
adc
xchg
fsts
mov
cmp
rorl
sahf
xchg
fwait
inc
call
pushl
test
andl
sub
dec
sbb
fwait
jmp
loope
jp
imul
xor
scas
enter
cmpsb
nop
inc
int
xor
adc
clc
cmp
xchg
out
adc
dec
add
sub
mov
fsubr
push
and
push
mov
js
push
mov
aam
sti
jmp
inc
pop
jmp
jnp
mov
lret
jnp
mov
adc
ss
mov
cmpsb
ret
sub
int3
movsl
mov
mov
dec
sbb
push
insl
jmp
sahf
pop
and
fimuls
dec
dec
dec
sbb
std
in
jmp
nop
sbb
cmp
xchg
test
cmp
xchg
add
scas
xor
xchg
mov
inc
leave
or
jo
cltd
fmull
jnp
dec
push
fwait
test
cmp
popf
scas
jg
jmp
or
out
rorl
inc
jmp
xchg
pop
mov
add
dec
xchg
lock
inc
test
cltd
xor
mov
inc
inc
sbb
cmpsb
gs
inc
jp
adc
ret
adc
daa
out
leave
sbb
sbb
jae
lods
inc
pop
xchg
xchg
fwait
or
fisubs
aam
in
cmc
mov
sbb
xchg
mov
cmp
and
mov
test
jg
shl
mov
daa
lret
jecxz
movsl
mov
out
loop
cmp
push
sarb
imul
ja
pop
movsb
fisubl
jp
inc
lret
pop
dec
pop
dec
sbb
sbb
shrb
ja
add
dec
sahf
xchg
adc
push
mov
leave
xchg
fwait
adc
loopne
cmp
sbb
cltd
fmull
jnp
dec
push
push
out
shlb
cmc
and
call
adcl
mov
inc
pop
lret
cltd
push
mov
test
push
fsubs
test
or
and
fisubl
cmp
fnsave
xchg
push
adc
js
jecxz
enter
or
fidivl
mov
dec
sahf
inc
sub
xor
mov
sbb
out
mov
push
mov
and
push
adc
cmp
jns
mov
add
mov
adc
add
mov
divb
push
divl
cli
xor
jb
mov
inc
add
dec
add
cli
jnp
lret
stos
dec
sub
nop
cwtl
nop
sbb
jmp
mov
es
shrb
rorl
xchg
out
leave
push
mov
mov
mov
jmp
shr
rcrl
das
or
leave
push
nop
add
scas
inc
xchg
ret
adc
mov
pop
pop
fdivs
rcr
or
in
mov
jnp
inc
push
mov
xchg
sbb
mov
and
push
adc
rcl
add
cmpsb
inc
test
inc
mov
or
and
addl
mov
dec
mov
ret
pusha
sbb
push
jne
pop
out
cmp
ds
mov
cmp
call
inc
in
clc
out
cltd
xchg
mov
xlat
xchg
or
mov
fwait
mov
cwtl
lret
inc
sub
aam
hlt
insb
lds
or
int
dec
mov
cmpsl
mov
fidivl
mov
jae
add
cmp
and
or
dec
xchg
mov
mov
gs
jb
lods
rcrl
clc
push
push
pushf
rorb
mov
pop
jo
cmpsl
addb
leave
in
loope
inc
add
add
push
sbb
and
dec
nop
lock
mov
cltd
xor
std
inc
jp
or
lret
sub
cmpsb
jnp
enter
push
adc
mov
mov
and
mov
enter
int3
push
push
xchg
dec
dec
mov
icebp
mov
xchg
cmp
xor
add
fimuls
test
cmp
mov
or
lods
rclb
mov
sbb
mov
ret
mov
mov
cmpb
mov
inc
stos
pushf
adc
mov
aaa
mov
fsubrl
imul
aaa
insl
movsl
fnstenv
popf
lret
scas
icebp
add
inc
dec
data16
scas
ja
add
push
push
jecxz
cmp
mov
aad
mov
mov
scas
loop
xor
js
jge
xchg
fdiv
sbb
sbb
data16
add
or
inc
mov
dec
mov
adc
mov
push
ret
pop
xor
into
clc
xor
aam
jne
cmpsl
movsb
dec
sub
sbb
jbe
dec
mov
inc
loope
mov
sub
ret
ret
fwait
pop
loop
insb
jp
mov
movsl
sti
and
pushl
mov
jecxz
push
xchg
mov
jbe
add
mov
push
or
ret
pop
mov
lods
xchg
sub
adc
ss
pop
and
fmull
dec
push
dec
sbb
std
in
jmp
mov
jl
sbb
xor
inc
sbb
or
stos
arpl
xchg
mov
push
jbe
sub
jno
push
arpl
int3
adc
lahf
scas
std
fabs
cmp
xchg
out
js
mov
adc
rolb
cmovae
jb
addr16
adc
sbb
xchg
mov
mov
mov
and
fstl
jmp
in
sti
xor
fsubl
cmp
mov
or
rcll
int3
inc
ds
inc
pop
mov
sub
fidivs
sbb
add
jg
mov
lods
mull
cmp
aas
and
imul
inc
pusha
scas
repz
cmp
mov
pop
leave
xor
mov
adc
lret
xor
sbb
fs
sbb
out
lds
push
scas
mov
sti
lret
fisttps
lret
xchg
add
lods
aam
cwtl
xchg
sbb
add
cwtl
stos
mov
mov
xchg
out
leave
popa
mov
mov
mov
shrl
popf
adc
push
sbbl
loope
mov
jnp
inc
mov
aaa
dec
mov
mov
loop
mov
nop
lock
mov
cltd
xor
lods
inc
jge
sbb
inc
mov
cltd
xabort
add
add
cmp
iret
enter
inc
cmp
mov
je
sub
dec
shlb
mov
fsubp
mov
dec
fisttpll
fdivr
repz
dec
call
push
sub
add
fists
iret
int3
cmp
hlt
repnz
popf
sbb
ret
mov
adc
lret
cmp
xchg
jo
mov
xor
jne
les
sbb
adc
xchg
pop
sbb
mov
lcall
lret
rcr
jae
mov
or
mov
push
sbb
sbb
or
sub
lret
icebp
mov
lcall
rorb
mov
jg
leave
push
nop
inc
cltd
scas
inc
xchg
cli
stc
and
adc
inc
xchg
mov
sub
xchg
xchg
cwtl
shrl
addr16
or
mov
mov
mov
and
popf
push
jo
or
xor
fsubl
mov
arpl
enter
aam
sub
fadds
push
inc
mov
sbb
ds
xor
adc
stos
lea
pop
and
mov
push
dec
push
dec
pop
call
in
imul
orps
or
add
ret
das
adc
mov
nop
push
lcall
xlat
leave
mov
jns
cli
imul
push
dec
popf
ljmp
sbbb
loop
addb
sub
dec
pop
outsb
stos
push
fnsave
mov
inc
pop
mov
sub
stos
cmpsl
push
aaa
fucomi
cmc
mov
enter
adcl
mov
adcl
push
or
lret
cltd
pop
mov
test
push
fisubs
pop
jmp
ret
xchg
and
lret
xchg
cltd
test
cmpsb
jnp
mov
jecxz
adc
pop
subb
cwtl
pop
mov
adc
enter
mov
add
insl
sub
ret
incb
mov
pop
dec
pop
test
cmp
mov
lock
xchg
xor
rcrl
add
or
sub
mov
mov
and
mov
inc
stos
pushf
adc
mov
add
dec
sbb
scas
fildll
stc
mov
cld
mov
cmp
in
test
pop
or
inc
inc
data16
scas
ja
les
cvtpi2ps
lock
movb
loope
fstl
pop
daa
cmp
jno
es
jle
scas
inc
fdivl
jo
arpl
inc
adc
add
sbb
clc
jb
mov
rol
sub
lret
je
inc
xchg
pop
mov
stos
icebp
mov
sub
into
clc
xor
mov
jecxz
movsb
dec
sub
sbb
sub
das
or
and
sbb
xchg
fcomp
orl
dec
sbb
lods
sti
jmp
inc
mov
repz
mov
ds
mov
xor
mov
add
and
insl
movsl
cmpb
mov
inc
stos
cwtl
adc
mov
lds
pop
and
sahf
in
inc
mov
test
mov
fidivl
jns
cmpsl
jae
inc
push
cmp
ret
add
or
or
pop
mov
inc
lcall
pusha
and
rolb
cmp
push
mov
cmp
lahf
fisttps
mov
repnz
adc
pop
es
add
shlb
icebp
mov
pop
and
jnp
inc
push
mov
xchg
sbb
fldenv
dec
stos
cmp
jb
pop
mov
mov
shlb
inc
insb
gs
je
cmp
dec
ja
inc
jb
xlat
adc
int
mov
repz
mov
imul
in
mov
pop
adc
cmc
sti
mov
imul
sbb
ret
mov
adc
lret
cmp
test
cltd
pushf
dec
and
ror
sbb
stos
push
cld
mov
pop
lock
mov
xchg
jmp
jns
adc
js
ljmp
sbb
sbb
or
or
stos
arpl
xchg
loopne
loope
mov
pop
jno
push
jl
enter
mov
pusha
mov
cld
loop
cmp
dec
push
jmp
mov
andl
adc
dec
mov
xchg
jp
imul
push
jns
enter
cmpsb
push
fucomi
hlt
std
mov
sti
and
test
jbe
addl
mov
call
call
int
aas
lea
jp
ds
mov
or
iret
jp
aas
in
mov
clc
out
cltd
xchg
sub
mov
xlat
xchg
or
mov
fwait
mov
cwtl
lret
inc
sub
mov
or
shrl
leave
test
mov
lcall
sarl
mov
pop
arpl
add
xchg
dec
bound
push
push
lcall
dec
lods
xchg
stos
jge
jns
adc
jno
jb
sbb
inc
pop
lcall
mov
in
mov
leave
loop
in
nop
xchg
sbb
ljmp
mov
pop
repnz
and
out
int
xor
adc
jns
enter
pushf
repnz
cmovae
sbb
mov
mov
cwtl
push
add
dec
add
sub
mov
adc
xchg
cmp
or
pop
jg
inc
mov
and
mov
std
ja
lret
push
adc
aas
mov
jns
mov
add
xor
add
lods
movsb
sbbb
or
cwtl
loop
les
sbb
test
push
in
dec
sbb
lock
inc
fmuls
fmuls
jp
or
rcr
adc
xchg
stos
jge
imul
jecxz
fwait
out
loopne
ret
scas
lods
pop
icebp
leave
outsb
mov
fisttpl
mov
dec
xchg
rclb
je
inc
xchg
adc
and
and
push
mov
xchg
cmpsb
dec
jmp
jo
add
ret
sti
sub
cmpsl
sti
repz
movsl
cltd
adc
andl
test
leave
out
mov
sbbl
notl
mov
inc
add
cmp
adc
jmp
pop
int
lock
mov
repz
pop
and
test
lock
sub
add
lods
xchg
sub
adc
inc
in
xlat
mov
inc
and
inc
mov
pop
aaa
xor
imul
rcrl
test
roll
fsts
pop
packuswb
cmp
test
dec
data16
fnsave
mov
mov
xor
jecxz
fwait
pushf
pop
nop
test
xor
je
in
xor
or
jns
adc
fmuls
cwtl
add
dec
shrl
xchg
pop
addr16
xchg
popf
fs
dec
xchg
push
sbb
jle
adc
ret
js
lahf
xlat
mov
icebp
jmp
lret
jne
cmpsl
movsb
dec
push
sub
sbb
pop
dec
dec
mov
inc
loope
mov
sub
ffree
cmp
fwait
pop
loop
insb
ja
mov
movsl
sti
pop
pop
dec
jbe
dec
scas
das
fists
iret
int3
sub
mov
sbb
adc
mov
and
mov
sbb
lret
popf
sub
xor
movsb
fs
pop
pop
stos
push
insb
aad
sbb
dec
dec
xchg
movsl
ljmp
or
lods
mov
mov
jno
inc
push
loop
jecxz
add
or
xor
mov
cmpsb
xor
jb
fcoml
dec
xchg
popf
adc
out
or
dec
sbb
popf
fimuls
sti
out
push
rorb
add
inc
pop
or
sub
xchg
xchg
cwtl
sarl
xchg
rcrl
js
xchg
mov
mov
mov
and
mov
cmpsb
ret
sti
xor
fsubl
cmp
mov
or
rcll
int3
dec
add
fidivl
cltd
sahf
sub
out
mov
jne
or
dec
push
insb
sub
lcall
cmc
inc
loope
repz
cmp
repnz
ret
mov
adc
lret
inc
sbb
gs
push
lods
xchg
sub
adc
inc
in
xlat
mov
inc
and
inc
mov
jge
pushf
lds
arpl
jo
test
push
shlb
leave
add
push
pop
outsb
les
push
mov
xor
add
xchg
sub
mov
iret
js
mov
jecxz
pushf
repnz
cmp
pop
es
add
shlb
mov
dec
xor
dec
mov
fnstenv
mov
xor
sbb
xchg
xor
cmpsb
imul
int
aam
xor
cmpb
je
test
icebp
fistl
dec
xor
sub
js
test
or
pop
jg
icebp
push
lea
pop
and
mov
pop
push
dec
push
dec
pop
sti
mov
imul
add
fidivl
add
mov
divb
repnz
inc
sbb
push
jmp
lds
out
lds
fsubrl
pusha
std
fbstp
xchg
in
lods
in
mov
pop
sub
les
push
inc
push
stos
rcrb
xor
mov
dec
jle
mov
add
inc
pop
lcall
mov
es
enter
jo
jo
arpl
rcll
rcrb
rorl
dec
mov
in
mov
or
or
xchg
push
fsubl
and
std
bound
pop
test
mov
ret
jb
int3
inc
cmp
sbb
sbb
sub
mov
fsubr
push
and
mov
jb
fnsave
mov
xor
mov
imul
jecxz
or
push
add
mov
jbe
test
test
lcall
jg
enter
dec
pushf
inc
stos
cwtl
adc
mov
add
stos
sahf
in
inc
mov
test
sti
pop
rcrl
les
sbb
shrb
or
jno
pop
push
sub
mov
jbe
sbbb
insb
mov
lods
jle
mov
add
lahf
lds
pop
sti
and
cmp
or
mov
hlt
mov
pop
and
adc
inc
cwtl
inc
stos
add
movsb
fs
add
mov
int3
loope
inc
and
es
repz
dec
xlat
pop
mov
out
cwtl
ljmp
test
in
xlat
adc
int
mov
repz
mov
imul
and
jg
sbb
cmc
lret
push
adc
mov
ret
jns
mov
add
cmc
lods
dec
xor
add
lods
movsb
sbbb
inc
sbb
push
jmp
lds
push
clc
mov
das
out
xchg
fistps
mov
test
das
xchg
stc
cli
in
test
nop
sbb
pusha
insb
cmpsb
lods
cltd
adc
mov
or
mov
push
stos
fnsave
sti
repz
sbb
shlb
lret
or
jnp
jg
scas
loope
pusha
in
and
adc
inc
mov
fdivs
sub
out
lea
out
adc
pop
xor
or
push
fsubs
dec
adc
dec
sbb
nop
call
mov
xchg
xor
dec
push
add
mov
aam
jb
aad
imul
sti
int3
sbb
out
add
mov
movsl
sti
and
pop
lock
in
rol
dec
add
add
push
pop
adc
dec
cmp
test
jns
dec
and
sbb
cmpsl
push
cld
mov
pop
lock
mov
xchg
jmp
push
aaa
div
mov
ret
pop
xor
mov
add
xchg
adc
or
cmp
les
cmp
fldcw
cltd
fmull
fwait
scas
dec
push
xchg
loop
iret
and
inc
fwait
imul
js
or
mov
fwait
push
dec
mov
and
dec
orb
cmc
mov
adc
data16
jae
loopne
add
ret
mov
jmp
lds
stc
int3
pop
and
mov
dec
dec
mov
inc
bound
fsubrs
test
aad
imul
js
sbb
out
add
mov
shlb
inc
inc
stc
jae
mov
jecxz
push
xchg
mov
jbe
add
in
push
ret
lock
jae
je
test
jns
dec
and
ror
sbb
test
pop
jb
mov
xchg
jmp
jns
adc
add
jne
add
add
add
xchg
lcall
invd
std
xor
mov
inc
mov
loope
inc
pushf
shlb
lret
or
jnp
jg
scas
push
jmp
pop
xchg
sar
sub
rol
sub
les
inc
jecxz
in
pop
cmpsb
push
fsubs
roll
frstor
out
or
or
xor
mov
sbbb
sbb
es
pop
aad
xchg
xor
out
jne
dec
or
lea
cmp
pop
jg
fcmovnb
repz
pop
and
mov
pop
ja
lret
push
adc
std
mov
jns
mov
add
xor
add
lods
movsb
sbbb
aas
push
icebp
mov
cmpl
mov
inc
mov
lds
push
ljmp
out
lods
sti
or
lahf
jae
sarl
mov
pop
daa
sbb
shrb
or
popa
mov
push
sub
mov
jbe
sbbb
cmp
cmp
jnp
scas
jg
leave
icebp
mov
mov
push
sbb
js
cwtl
add
or
inc
mov
out
dec
mov
adc
mov
movsl
in
cmpsb
call
rcr
call
push
ret
insl
push
andb
cmp
or
cmp
xchg
sub
lret
cs
dec
fnstenv
shl
pop
and
cmp
cld
divb
popa
or
mov
jno
mov
aaa
hlt
add
mov
sbb
sub
pop
adc
insl
movsl
adc
adc
incl
adc
mov
sbb
sub
push
lahf
push
lret
pop
jae
lret
inc
in
mov
sbb
in
or
inc
pop
data16
scas
ja
les
xchg
lcall
enter
add
add
push
mov
cmp
lahf
fisttps
mov
repnz
cmp
add
shlb
push
or
lret
cwtl
sbb
outsb
test
push
fisubs
pop
jmp
ret
push
jge
mov
jmp
std
mov
sti
and
imul
sbb
adc
pop
stos
or
dec
cmc
popf
icebp
pop
pop
dec
shll
sub
and
mov
test
add
loop
divl
rcrl
mov
adc
addb
push
cmpb
insl
mov
ficompl
jne
les
cmp
lds
sbb
test
fcmovb
rcrb
pop
in
dec
shrb
or
or
fldl
push
outsl
les
mov
imul
lcall
jge
pop
xor
pop
or
js
popf
fists
repz
nop
xchg
filds
mov
jge
cs
dec
mov
pop
cmc
addr16
sbbl
mov
push
ficoms
add
fadd
pop
fisubs
out
push
hlt
or
add
sbb
jle
mov
jmp
lret
cltd
incb
push
cmp
sbb
in
popa
push
test
lcall
mov
pop
add
clc
sti
mov
es
pushf
rcrb
nop
mov
push
add
jbe
mov
dec
pushf
in
sbb
vandnps
stc
ja
mov
stc
ja
fwait
mov
cld
test
mov
jo
fbstp
or
scas
addl
shrl
jge
stos
movsl
mov
cld
jp
add
pop
test
xor
xor
fwait
out
cmp
int
xchg
loopne
data16
or
sbb
mov
fwait
push
dec
mov
repz
jnp
inc
push
mov
jp
mov
mov
add
jae
inc
rcr
cmpsl
ret
popw
std
xchg
xor
popa
shl
mov
int3
loope
movsl
sbb
add
pop
dec
mov
fisttps
in
dec
sahf
dec
mov
nop
mov
dec
and
mov
mov
test
fwait
lahf
jg
clc
sti
mov
in
inc
inc
sbb
lods
adc
les
jmp
pop
push
adc
mov
sahf
sbb
test
lods
js
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
push
dec
pop
cmpsl
lret
dec
movsl
push
or
xor
mov
cmpsb
xor
jb
fcoml
mov
push
lret
ret
mov
or
scas
aaa
mov
cli
jnp
inc
mov
rorl
mov
dec
cmpsl
imul
mov
mov
jnp
inc
push
mov
xchg
sbb
dec
cmpsb
jmp
jecxz
mov
jmp
std
mov
sti
and
push
leave
sbb
sbbl
lea
cmp
jne
aam
shl
sbb
jne
rolb
mov
lds
cmp
sahf
divl
mov
and
sti
dec
fists
inc
insl
cwtl
mov
fsubrl
lahf
sub
sub
sbb
les
lcall
sbb
mov
inc
leave
fs
jno
inc
push
scas
xchg
inc
mov
test
aam
fwait
lcall
cmp
sbb
push
lret
ret
mov
mov
mov
scas
aaa
mov
cli
jnp
inc
mov
rorl
mov
dec
add
add
mov
or
in
mov
jnp
inc
push
mov
xchg
sbb
sub
mov
pop
fcomp
movswl
jmp
std
mov
sti
and
push
mov
xchg
inc
add
sbbl
lea
cmp
inc
pop
lret
call
add
iret
add
test
jnp
push
xchg
xor
leave
add
mov
movsl
or
pop
into
push
inc
inc
mov
movsb
rorl
mov
sbb
or
sub
aaa
pop
add
lock
inc
sub
int3
adc
jecxz
dec
bound
jg
shl
mov
cmpsb
dec
mov
test
pop
cltd
enter
mov
test
clc
aam
push
sahf
pop
and
imul
jno
insb
out
pop
mov
out
or
js
inc
int3
out
lsl
mov
fwait
jns
or
adc
cwtl
dec
and
mov
xchg
shll
pusha
cmpsl
icebp
iret
movsl
rorb
mov
jb
out
orb
xlat
das
jl
pop
push
mov
dec
test
call
inc
gs
imul
test
rolb
incb
lds
testl
test
ljmp
jmp
mov
jo
outsl
add
mov
or
mov
push
stos
and
dec
pop
push
mov
and
je
jmp
arpl
xchg
movsl
stos
mov
jne
in
clc
movsb
pop
cmpsb
cmc
or
sub
out
ret
xchg
pop
mov
mov
mov
lret
repnz
push
mov
inc
pop
mov
shlb
dec
arpl
pop
dec
rcrb
jno
orl
add
ret
and
jl
jnp
inc
shl
xchg
jne
addr16
clc
mov
cmp
cs
movsl
icebp
xor
mov
xchg
std
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
jle
call
dec
mov
xchg
dec
xorl
lret
add
mov
cmp
mov
lods
insl
lret
inc
pop
mov
or
aas
iret
fucomip
test
sti
mov
jb
jae,pn
cld
inc
and
xor
or
inc
lds
outsl
cmpsl
arpl
aad
dec
adc
fwait
push
fwait
push
lcall
jns
sbb
ljmp
lret
into
jo
fnstenv
or
mov
jl
sbb
pop
rcl
mov
cmpsb
xor
jb
fisttpll
cmp
jle
jbe
lods
inc
in
sti
std
cltd
lahf
fisttps
jle
mov
inc
lret
loop
xchg
jnp
sub
or
mov
repz
push
shrl
jo
inc
int
pop
and
imulb
movsl
into
imul
int3
cmpsb
add
iret
daa
adc
imul
xchg
sub
or
inc
es
jns
inc
and
stc
les
fwait
dec
sub
enter
das
lea
mov
lods
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
xor
sbb
fs
push
cmp
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
jp
jge
scas
xchg
iret
stc
push
mov
mov
scas
push
mov
roll
xor
and
dec
pop
jo
sub
cmpxchg
out
sub
inc
cwtl
das
push
roll
fsubr
das
add
mov
lcall
lcall
cmc
jp
scas
scas
loope
sti
mov
cltd
mov
pop
cs
icebp
in
jns
outsb
out
lahf
stc
sbb
pop
inc
loope
lea
pushf
shrl
loope
xchg
fcoms
push
jmp
mov
xlat
leave
jnp
sahf
popa
jp
add
sub
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
push
mov
mov
mov
xor
xorl
jle
mov
sti
cmp
pop
in
dec
mov
aam
or
dec
icebp
push
cmpsb
mov
sub
sub
dec
lds
mov
jp
cmpsb
cmpsl
push
insl
mov
popa
shrb
jecxz
aas
and
enter
pushf
sarl
cli
repz
test
fwait
adc
add
pop
xchg
mov
inc
mov
jp
jge
dec
shlb
mov
inc
lret
popf
outsl
mov
int3
pop
into
xor
cmp
shrb
add
ficoml
popa
dec
sbb
in
dec
popa
pop
sbb
int
jg
les
jns
pop
mov
test
add
inc
sbb
jae
jecxz
movsl
mov
cltd
jo
iret
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
mov
ficoms
shr
ja
imul
mov
and
adc
inc
cmp
mov
pop
incb
shl
pop
pop
add
out
mov
xchg
mov
sub
dec
xchg
aam
jne
insl
jb
inc
fisubs
jbe
call
xchg
inc
mov
jb
jg
iret
fs
das
jo
sbb
je
jge
xchg
repz
pop
lods
fs
lcall
jmp
or
mov
and
xchg
xchg
jle
cwtl
out
cwtl
je
fcoms
inc
push
jp
adc
movsl
add
imul
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
lahf
lret
jecxz
inc
dec
mov
stc
ret
mov
xchg
ja
ja
std
shlb
pop
movsb
mov
pushf
inc
nop
sarl
lods
clc
inc
mov
iret
lods
leave
push
sbb
and
mov
jno
dec
adc
std
fnstenv
mov
add
scas
fsubr
adc
sub
cmp
fimull
mov
imul
lcall
jge
pop
xor
mov
mov
mov
mov
pop
jb
add
mov
out
push
out
and
push
push
hlt
ja
scas
mov
xor
scas
xchg
xchg
ss
out
cmpsl
push
jecxz
and
fsts
out
mov
popf
jae
into
cmpb
jns
hlt
and
orl
fcoms
inc
pop
subb
jle
push
dec
xchg
adc
or
subl
ds
ret
pop
pop
xor
sbb
test
lcall
daa
popf
adc
fdiv
jbe
push
outsl
sub
cmp
jae
fcomps
adc
and
adc
inc
cmp
xor
dec
inc
sub
sub
or
je
sbb
mov
sub
hlt
mov
scas
push
and
sub
es
sahf
pop
and
iret
mov
sti
out
test
out
jl
jne
mov
jbe
dec
js
or
aad
aam
mov
dec
add
shl
or
sub
xchg
and
cmp
sbb
adc
jmp
dec
gs
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
insl
int
jg
cmp
mov
lods
push
sbb
leave
cmp
xchg
adc
xor
mov
push
or
sub
or
mov
test
sub
dec
clc
xchg
test
push
dec
cmp
hlt
movsl
push
jno
pop
cmp
mov
adc
inc
aas
adc
ret
sub
add
in
subl
gs
xchg
push
subb
mov
das
mov
sbb
dec
dec
fs
in
mov
and
push
addr16
mov
enter
adc
sbb
mov
aam
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
sbb
lret
dec
sbb
lea
cmp
inc
fstpt
mov
inc
pop
sbb
xchg
pop
adc
out
xchg
fcmovnbe
out
jno
pop
in
xchg
pop
aad
push
xor
sub
mov
das
inc
mov
and
lret
movsl
mov
lret
lahf
mov
lea
leave
gs
aaa
pop
push
lods
mov
lret
std
lods
mov
lcall
adcl
cmp
cli
xchg
add
mov
movsb
sub
mov
and
or
in
sub
push
lcall
jle
das
pop
icebp
or
cmp
fcmovne
loop
addl
das
adc
sbb
pushf
lcall
sub
mov
dec
int
insb
decl
imul
shlb
fisttps
stc
in
jns
test
js
pop
or
and
adc
add
in
push
inc
test
mov
std
mov
xlat
mov
lods
xor
push
add
pop
das
or
addr16
stc
loope
mov
test
add
mov
faddl
stos
out
inc
mov
icebp
cwtl
add
insb
adc
mov
repnz
shlb
imul
lea
ljmp
and
call
imul
push
push
dec
in
clc
popa
mov
push
repnz
repnz
mov
fcmovb
xchg
mov
lods
mov
mov
in
scas
aas
test
fs
in
mov
jmp
jecxz
xchg
sbb
mov
filds
inc
shll
jecxz
cwtl
cwtl
popf
jmp
sub
mov
mov
out
inc
and
aas
int
and
loope
cs
sbb
les
aas
outsb
add
push
shll
inc
stos
jae
imul
mov
bound
pop
adc
push
xchg
cltd
popa
jle
mov
jmp
cmpsl
mov
inc
insl
test
push
pop
stos
gs
std
rolb
push
movsl
add
popf
jnp
sub
mov
jp
cltd
fisttps
aad
test
mov
sahf
cmp
stc
inc
repz
adc
jno
arpl
lds
adc
mov
adc
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
aas
test
pop
mov
mov
enter
in
xchg
or
jmp
xchg
xchg
mov
cs
je
out
jae
pushf
sub
in
sti
jnp
sbb
xor
icebp
pop
mov
lods
xlat
xor
into
add
outsb
add
mov
fists
dec
dec
adc
mov
inc
popf
push
push
push
adc
test
pop
aaa
xchg
mov
jbe
mov
sbb
mov
into
mov
inc
inc
xor
rol
fiadds
push
xlat
aad
in
mov
test
sahf
adc
cmc
test
cmp
mov
xchg
repz
cmp
icebp
add
push
cmp
sbb
lea
test
sub
jp
add
cmp
lds
cwtl
lcall
jle
das
pop
icebp
or
cmp
andl
mov
ret
addl
pop
lock
cmp
hlt
jbe
mov
xchg
mov
loope
jo
xor
test
jge
es
mov
outsb
out
sti
cwtl
inc
data16
add
add
or
dec
sarl
xchg
jno
dec
adc
mov
ret
mov
inc
test
rorl
fildll
cwtl
cmp
or
add
lock
add
mov
cmc
sub
cli
jp
adc
repnz
jns
lds
nop
lds
mov
testl
shll
pop
push
pop
ds
enter
cwtl
in
subl
gs
xchg
mov
outsb
pop
cltd
enter
imul
push
and
mov
jb
loopne
fucomip
ljmp
lret
xor
stc
mov
sar
jg
out
das
dec
lock
jl
das
dec
or
pop
pop
loopne
call
and
mov
rorl
dec
or
jbe
fwait
xor
scas
xor
into
test
and
push
orb
mov
mov
bound
test
ds
arpl
nop
jae
mov
push
test
lea
nop
jl
fbstp
hlt
sbb
push
ret
adc
orl
lds
enter
jl
loop
jg
or
mov
cmp
push
in
and
mov
sbb
sbb
lds
mov
push
push
clc
sub
fisubrs
cmp
std
xchg
pop
das
xchg
stc
cli
in
test
or
test
sahf
jg
inc
outsb
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
jne
or
popa
mov
cmpxchg
out
jno
insb
out
pop
mov
and
flds
jg
out
das
dec
lock
test
cwtl
jg
jge
outsl
outsl
and
push
xor
cli
pop
test
jnp
sbb
xor
cmp
testl
add
cmp
hlt
xor
xchg
jle
inc
lret
mov
ret
mov
push
push
mov
rcll
xchg
push
mov
cwtl
add
jmp
or
arpl
mov
push
test
or
shlb
fsts
inc
pop
cli
jmp
movsl
mov
jg
adc
mov
adc
sbb
mov
pushf
jmp
sbb
jae
mov
or
cmp
adc
mov
les
int
fisttpll
jbe
mov
and
mov
push
push
ret
inc
bound
lds
xor
in
push
push
dec
lods
cmpsl
push
subl
cmp
arpl
or
scas
scas
loope
sbb
mov
aam
jg
lahf
dec
andb
or
and
ljmp
mov
lds
jb
adc
jo
push
sub
test
and
cmpl
sub
sbb
jl
inc
push
out
push
xor
or
jl
loop
jg
or
xchg
jnp
leave
push
in
and
mov
sbb
sbb
lds
mov
push
push
clc
sub
fidivs
xchg
xchg
iret
jecxz
aam
ja
stc
cli
in
test
or
test
cltd
jg
inc
outsb
cmpsb
sub
mov
mov
dec
mov
xor
xchg
fdivl
adcb
les
test
xor
not
jle
pop
xchg
adc
cld
jb
ds
add
cmp
leave
fs
ror
aas
inc
scas
into
mov
out
repnz
sub
mov
mov
in
push
iret
inc
fnstenv
sbb
mov
sbb
sub
es
je
seto
pop
xchg
cltd
fsubs
pop
adc
add
cwtl
dec
and
mov
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
loopne
jg
cmpsl
xlat
in
lret
adc
mov
adc
push
movsl
xor
push
int3
mov
inc
adc
dec
pop
inc
jno
cs
cmpsb
cmc
xchg
inc
in
mov
mov
sbb
xor
ret
rcll
ret
iret
xlat
mov
fdivl
fistl
fdivrs
icebp
cmp
xor
pop
ret
jge
or
ret
adc
sbb
rolb
inc
clc
or
fwait
push
dec
mov
and
adc
mov
pop
jae
inc
insl
out
sbb
inc
add
pop
ljmp
ja
mov
push
mov
adc
jb
rolb
push
xor
mov
test
jae
push
xchg
ror
xor
fwait
shr
add
mov
dec
clc
jb
mov
loopne
lahf
fildll
shl
push
js
cli
dec
adc
jmp
mov
iret
adc
sbb
sub
mov
pop
aas
jle
lahf
dec
and
push
in
shl
mov
push
inc
push
pop
cmp
inc
insl
ret
sub
sbb
out
and
rclb
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
mov
inc
xchg
or
push
cli
cmp
stos
xor
xor
mov
mov
pop
mov
and
lret
add
mov
out
push
test
out
cmp
daa
pop
push
xor
leave
dec
loope
jo
lret
sbb
xor
sub
ljmp
fists
jecxz
cmp
aas
ja
dec
int3
dec
xchg
test
imul
call
or
xchg
fcmovbe
movb
push
cmc
cmp
cmc
popa
aaa
dec
push
cmp
adc
ljmp
and
jl
adc
and
mov
dec
sbb
cmp
nop
push
lcall
mov
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
in
andb
out
add
rorl
mov
xchg
dec
and
shll
xorl
and
inc
outsb
ret
mov
or
jnp
aad
jae
ret
xchg
cld
inc
out
xor
out
mov
jp
scas
xchg
scas
cwtl
cld
lds
outsl
jae
idivb
sbb
mov
fldl
lods
lock
mov
popf
loopne
fdivrl
sti
icebp
sub
lds
xchg
sbb
rcll
addl
push
aad
lret
gs
loopne
cmc
mov
add
jge
or
pop
in
pop
pop
add
cmp
scas
ds
mov
insl
loope
roll
scas
jge
cmc
cld
or
lret
fcompl
rep
xchg
imul
aad
or
stos
popf
pop
dec
or
out
sub
mov
sub
in
inc
aas
adc
pop
daa
sub
out
dec
and
ret
mov
inc
push
insl
imul
push
mov
pop
outsl
sub
test
and
sub
fstpt
loopne
adc
dec
mov
lds
adc
pop
dec
decb
std
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
pop
sarl
out
push
pop
pushf
xchg
dec
adc
cmp
sub
mov
dec
adc
lcall
adc
bound
lods
sub
adc
pop
popf
xchg
mov
or
mov
push
push
decb
aad
push
sub
push
mov
insl
aad
insl
int3
inc
push
cltd
dec
xlat
and
fxtract
push
and
aam
filds
pop
add
sti
arpl
pop
outsb
push
roll
push
push
xor
mov
or
sbb
lods
jge
fs
into
aam
jge
pop
xor
mov
mov
sbb
and
lret
add
mov
out
push
out
xor
push
sbb
mov
xor
scas
xchg
lcall
add
cmpsl
sbb
neg
ss
lods
out
lret
cwtl
add
iret
fs
insb
loop
popa
lock
pop
xor
xchg
adc
ret
mov
jns
dec
call
clc
test
adc
mov
hlt
xor
adc
ret
ficomps
mov
sub
shll
testb
pop
mov
mov
sbb
lcall
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
aas
dec
push
add
shl
je
sub
out
pop
insl
outsb
pop
cltd
enter
and
jae
in
scas
aas
test
xchg
adc
dec
sbb
repz
out
rol
popa
scas
push
repz
and
fmul
or
outsl
cmp
pop
repz
xor
leave
scas
jmp
or
mov
push
cltd
clc
bound
cmpsl
or
test
xor
add
mov
nop
xchg
xlat
mov
pop
dec
pop
jno
rorl
pop
addr16
sbb
stos
mov
sbb
loopne
iret
jl
in
test
pop
rcrl
mov
or
and
xchg
sub
lods
xchg
sub
adc
fldenv
icebp
mov
xchg
jae
mov
popf
lret
cmpsl
xchg
test
mov
push
mov
rcl
insb
xor
or
adc
mov
scas
push
and
push
test
test
in
mov
mov
fsts
jno
pop
jge
out
adcb
push
sub
ds
jo
in
dec
add
inc
pop
xor
jnp
or
lods
leave
aam
mov
fdivrl
cli
xor
fists
out
cmp
hlt
or
and
test
cmp
xchg
push
hlt
mov
popa
dec
mov
into
cmpsl
stos
shll
inc
xchg
in
mov
sub
test
mov
mov
outsb
xor
xchg
aaa
or
mov
cmp
mov
sub
jb
sbb
inc
lret
push
ficomps
sbb
stos
subl
pusha
mov
movsb
mov
push
gs
orl
inc
stos
sbb
fildl
add
popl
gs
dec
mov
sti
push
dec
mov
int
or
rcrb
sbbb
add
sbb
sbb
enter
int
and
fcmovbe
cmp
int
mov
mov
fisttpl
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
sbb
mov
xchg
int3
sub
sbb
pop
popf
sar
stos
test
imul
mov
push
xchg
bound
pop
adc
mov
dec
clc
xor
pop
ret
loopne
add
mov
push
xor
xor
mov
mov
stos
stc
sbb
mov
insl
lcall
push
out
jle
dec
xorb
sub
mov
push
fcoml
push
test
mov
lahf
cmp
aas
dec
sbb
add
cmp
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
lret
loop
pop
int
jge
pop
dec
data16
sbb
fwait
jl
jle
scas
pslld
mov
inc
dec
je
jge
jecxz
mov
cwtl
jp
jge
pushf
mull
jo
pop
shrb
enter
rorb
arpl
loope
les
pop
jecxz
sbb
mov
and
mov
test
pop
mov
insl
xchg
mov
test
sbb
stos
cmp
ss
and
shlb
pop
adc
cld
xor
fistl
xor
sbb
test
lcall
daa
and
iret
mov
sbb
cmp
nop
push
lcall
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
inc
dec
push
add
shl
je
insl
lods
xchg
shl
dec
jmp
lahf
and
sub
mov
push
sahf
pop
and
mov
out
or
leave
loop
jae
jle
out
or
js
inc
int3
fiaddl
pop
dec
add
shlb
or
les
mov
ret
adc
lret
icebp
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
es
loope
leave
adc
add
xchg
sub
rol
dec
sbb
mov
pop
adc
adc
inc
push
add
and
push
sahf
inc
call
sbb
enter
cmp
mov
mov
mov
mov
dec
inc
lret
pop
ficomps
sbb
pop
add
cmpsb
push
imul
cmpl
dec
mov
scas
dec
rcr
mov
and
mov
adc
enter
dec
movsl
or
sbb
fistl
sbb
and
jns
push
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
pop
repnz
dec
cwtl
dec
and
adc
test
imul
pop
iret
sti
fsubrp
jno
fwait
cmpsb
inc
ret
lea
xor
mov
cld
nop
es
xchg
xchg
int
imul
inc
pop
and
sarb
push
dec
xchg
adc
or
subl
ds
ret
pop
pop
xor
sbb
test
lcall
daa
and
iret
mov
sbb
cmp
nop
push
lcall
scas
jge
inc
sbb
inc
aaa
lret
fucomp
add
fldt
mov
mov
xchg
mov
push
cmpsb
jge
push
ja
cmp
dec
or
stos
inc
lcall
dec
inc
cmpsb
fs
fistps
inc
leave
scas
dec
xchg
jp
cmp
mov
inc
daa
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
test
and
cmp
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
mov
cmp
test
loope
and
arpl
adc
xor
ret
xorb
dec
push
adc
inc
mov
orb
push
inc
jg
xor
or
out
inc
sbbl
cmpsl
dec
or
xchg
mov
insb
sub
push
mov
mov
xchg
push
das
jno
xchg
add
pushl
sbb
sub
or
test
sti
arpl
icebp
add
inc
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
lcall
lcall
adc
dec
movsb
aad
xor
xor
mov
bound
ja
loop
in
nop
xchg
lahf
push
cwtl
lock
mov
or
push
push
mov
push
xchg
dec
mov
push
lods
shrb
loope
call
fbstp
xor
mov
xor
enter
pop
int3
aaa
adc
psraw
push
push
adc
ret
mov
mov
rorl
jmp
hlt
xor
adc
ret
ficomps
mov
sub
roll
add
lcall
daa
and
iret
mov
sbb
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
imul
jg
pusha
jbe
jae
xchg
dec
mov
cs
cmpsl
jbe
mov
cmpsb
dec
sub
stos
les
aam
add
das
mov
movsb
fsubrl
popf
popa
jne
xchg
cld
mov
mov
loop
xchg
dec
lret
testl
je
iret
rclb
or
lods
sarl
cmc
pop
adc
popa
test
xchg
test
xchg
push
sub
adc
inc
sarl
push
scas
std
int3
inc
aas
mov
lock
adc
pop
inc
in
mov
xlat
cmp
dec
or
mov
add
mul
loopne
ret
loopne
pmullw
xchg
icebp
aas
out
scas
test
pop
dec
rolb
out
inc
jmp
leave
cmpsl
inc
add
shlb
in
out
lret
imul
push
pop
adc
mov
xchg
lea
cmp
jb
pop
mov
mov
sbb
pop
add
pop
push
leave
ret
or
jne
dec
mov
dec
xor
xchg
mov
xor
stc
inc
outsb
inc
cmp
lods
add
dec
pop
fimuls
out
push
idivl
sub
pop
sub
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
mov
mov
aam
cmp
push
lds
jg
movswl
jmp
std
mov
sti
and
aas
lahf
es
dec
loope
dec
pop
leave
mov
cmp
in
dec
pop
pop
mov
mov
lret
mov
mov
push
pushf
add
sub
insl
push
cwtl
add
test
pusha
mov
lahf
mov
jo
iret
cmpsl
mov
arpl
subl
insl
and
xlat
test
pop
sub
lods
imul
xchg
cmc
and
jno
mov
lret
xor
dec
sub
int3
or
and
in
and
shlb
add
test
in
mov
and
in
nop
fidivs
lds
xchg
adc
mov
sbb
mov
orb
es
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
xchg
inc
test
dec
les
lds
mov
jo
fstp
inc
sbb
stos
adc
nop
sub
or
jl
cmp
jo
xor
cmp
call
lds
pop
xlat
pusha
push
xchg
jle
mov
xor
adc
push
mov
dec
mov
fldt
imul
test
movsl
push
imul
lods
mov
push
sub
mov
fsts
and
mov
adc
lock
ss
addb
add
xchg
adc
mov
jecxz
pop
test
push
jnp
test
mov
sti
jmp
shl
ljmp
pop
sub
adc
inc
ja
jo
mov
pop
es
addl
add
pop
push
ja
ret
adc
fldl
cmpsl
mov
sub
ljmp
outsb
out
repz
rorb
dec
xchg
jno
mov
mov
addr16
mov
ret
mov
scas
push
xchg
adc
aaa
call
and
add
sub
fists
addb
rcrb
hlt
das
lock
mov
or
inc
push
pushf
cmpb
adc
inc
in
xlat
mov
testl
loope
lret
movb
adc
mov
shll
rcrl
repnz
das
fcomp
aad
sub
test
lret
inc
stos
rclb
clc
popf
adc
adcb
sarl
push
pop
movsl
arpl
mov
xchg
mov
filds
orb
sub
xchg
cwtl
cwtl
popf
jmp
dec
mov
mov
test
lcall
test
mov
into
mov
shll
loopne
hlt
mov
xchg
mov
add
orl
sub
shlb
dec
sbbb
xor
push
repnz
and
mov
test
add
inc
sbb
jae
jecxz
movsl
mov
cltd
jo
bound
push
xchg
xchg
cltd
lret
movsl
mov
and
xchg
addr16
std
jmp
mov
mov
mov
adc
inc
mov
icebp
sahf
jle
and
lods
adc
in
and
shlb
dec
xchg
aam
jne
insl
bound
imull
in
jb
xlat
pop
mov
mov
scas
cmpsl
pop
icebp
cmp
jne
inc
daa
inc
add
fwait
add
sbb
mov
cld
dec
xor
and
adc
mov
jp
fst
in
mov
mov
or
lahf
cltd
pop
adc
mov
cmp
test
loope
and
arpl
in
add
and
push
cmp
data16
test
xlat
jmp
mov
call
xlat
or
incb
mov
inc
xchg
sub
xor
mov
pop
mov
and
in
shr
xchg
push
hlt
lds
ret
xchg
mov
pop
mov
sub
lods
loopne
sub
js
hlt
roll
arpl
icebp
add
inc
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
lcall
lcall
adc
dec
movsb
aad
xor
xor
mov
bound
in
nop
xchg
lahf
push
cwtl
lock
mov
or
xchg
out
arpl
mov
lret
and
fisttpl
jae
pushf
lods
pop
xchg
sub
cs
repnz
jnp
sahf
jnp
loopne
bound
daa
push
mov
out
sbb
movsb
mov
xchg
jmp
xchg
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
jp
add
add
mov
sbb
fwait
orb
xor
mov
fmull
jnp
inc
movsl
lret
and
shrl
rclb
jg
inc
in
jmp
popf
shl
or
testb
mov
or
imul
inc
adc
mov
leave
jnp
mov
shl
cmpsb
fsubr
adc
xor
and
dec
in
popf
fimuls
mov
jae
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
stos
ret
sub
jb
mov
fdivl
sbb
les
cmp
mov
lock
or
dec
pop
xchg
inc
gs
push
pop
roll
cli
int3
mov
test
out
or
and
mov
loop
inc
sbb
rorb
out
dec
mov
and
bound
dec
inc
add
mov
imul
daa
std
aas
stos
lock
pop
cli
sub
pop
inc
aam
dec
sbb
xor
pop
jp
pushf
movsl
iret
mov
les
lcall
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
dec
cmpsl
ficoms
hlt
ja
std
outsl
addr16
call
push
lds
xchg
dec
enter
ss
repnz
leave
mov
sbb
or
jp
and
or
and
in
cmc
xor
push
adc
pop
test
lcall
xor
mov
mov
mov
cmp
jp
add
add
mov
sbb
fwait
orb
xor
mov
cld
mov
shl
jmp
addr16
mov
outsl
push
xchg
lahf
cmp
lods
rclb
and
sub
int3
add
imul
inc
add
test
sbb
add
arpl
mov
adc
adc
mov
imul
loope
lds
mov
ss
mov
xorl
mov
fwait
push
dec
mov
sahf
dec
dec
aam
je
mov
adc
sbb
lds
mov
js
fisttps
lahf
outsb
lcall
sbb
adc
or
test
out
dec
pop
cmp
call
mov
pop
int
mov
mov
orl
ja
sbb
xor
pop
add
sbb
sub
shll
inc
popf
mov
add
lods
xchg
sub
adc
inc
in
xlat
mov
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
cmpsb
scas
push
and
into
adc
aas
mov
arpl
mov
xchg
xchg
xchg
mov
scas
pxor
ret
sti
mov
leave
lock
jl
das
dec
iret
shl
idivl
outsl
outsl
int
adc
scas
jmp
pop
cmpsb
ret
jns
mov
shlb
mov
into
test
and
rcrb
orb
mov
mov
jl
push
or
jns
decb
inc
sbb
adc
int3
inc
pop
and
arpl
cmp
cmc
mov
call
adc
ljmp
and
jl
adc
and
mov
dec
sbb
cmp
jg
cmp
sub
cmc
sbb
mov
push
adc
jno
arpl
lds
sbb
sbb
icebp
or
push
and
nop
dec
and
pop
lret
test
push
lods
push
sub
leave
jae
in
mov
mov
aad
jno
pop
and
jp
pop
testb
shr
mov
push
addl
push
add
pop
cmpsb
out
push
les
mov
ret
adc
icebp
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
cmp
loope
add
add
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
add
add
mov
es
mov
clc
inc
mov
daa
cmpsb
cmc
fxch
mov
gs
sbb
pop
mov
outsl
pop
mov
lods
cmpsl
mov
hlt
rclb
and
push
popa
cmp
daa
push
or
jge
bound
insl
nop
outsb
cmpsl
mov
push
adc
push
mov
js
test
sbb
xchg
and
sarb
sbb
pop
aad
bound
add
arpl
jae
mov
icebp
xchg
sub
dec
lret
fidivrs
cli
shrd
imul
pushf
cmpsl
sti
clc
les
sti
sti
and
sbb
lret
dec
sbb
lea
cmp
inc
fstpt
mov
inc
pop
sbb
xchg
pop
adc
out
xchg
fisttpl
int
pop
xchg
loop
mov
sar
fcoml
add
jmp
decb
xlat
ret
aad
xchg
mov
sub
mov
aaa
sub
shrl
pop
iret
mov
cmpl
dec
inc
add
cld
sub
cmc
js
cld
cmpsl
pop
or
rcrl
cltd
push
repz
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
jbe
pop
jp
mov
fisttps
mov
mov
mov
mov
pop
jb
add
mov
outsb
rcll
cmc
or
xlat
lock
sub
popa
in
dec
push
cmpb
outsb
scas
insb
repnz
inc
out
outsb
out
lahf
stc
iret
or
and
sub
pushf
ret
rcrb
ret
sbb
xchg
fwait
movsl
shrl
pop
sbb
push
inc
int
mov
std
push
sbb
xchg
xchg
xor
negl
stos
cmpsl
xor
xchg
lcall
ret
sbb
inc
ds
jmp
cmpsl
stos
cwtl
and
sbbl
mov
jb
pop
push
bound
push
test
mov
add
jnp
adc
bound
test
cmp
inc
outsb
cmpsb
sub
mov
mov
dec
loopne
subl
mov
adc
cltd
dec
bound
sub
outsl
jno
xchg
mov
fdiv
lcall
adc
or
into
iret
cmp
cs
push
pmuludq
out
inc
and
enter
pop
jae
inc
and
cmpb
xchg
fisttpll
add
out
int3
add
lea
jns
shrb
cmp
cld
or
lea
cmp
aas
test
fildl
pop
repz
mov
push
sarl
std
mov
cmpb
cwtl
pop
push
jno
fst
outsl
mov
imul
pop
imul
test
push
rclb
push
mov
aas
sub
jae
fldt
pop
dec
div
xchg
inc
lds
subb
adc
ss
jb
fs
pop
or
pop
mov
pop
testl
push
xchg
mov
int3
xor
xor
lahf
xor
out
jl
in
jnp
cli
jnp
inc
mov
add
adc
jle
add
and
mov
inc
fmuls
sti
adc
test
pop
xchg
mov
jbe
iret
sti
enter
mov
jae
jo
incb
jl
outsb
xorl
int
imul
mov
ret
popf
addr16
rcll
mov
movsl
test
add
lret
jge
rorb
popa
pushf
rcrl
sub
addl
push
adc
mov
sbb
pop
xchg
sbb
pop
xchg
sbb
cltd
lret
lcall
sbb
std
fistpll
sti
mov
mov
test
in
andb
sbb
mov
mov
inc
insl
jle
popf
mul
dec
sub
cmc
sbb
cmpl
pop
sub
cmpxchg
out
jno
sub
cld
mov
scas
pxor
cld
repz
lcall
loopne
dec
iret
ror
inc
scas
inc
jecxz
call
push
jmp
push
sbb
and
adc
jg
lahf
cmp
hlt
repz
pshufw
pushf
sar
inc
or
aaa
xorl
add
cmp
imulb
jp
dec
addr16
shrl
movsl
lea
add
pop
shrl
or
xlat
int
add
in
and
lahf
cmp
roll
sub
pushf
ret
pop
mov
mov
sbb
lcall
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
pop
dec
push
add
shl
je
sub
out
fldcw
out
dec
push
mov
mov
cltd
jb
sahf
pop
mov
cmpxchg
out
test
and
clc
icebp
jle
scas
leave
test
cltd
scas
push
pushf
add
popl
mov
ds
je
out
dec
mov
jmp
inc
mov
xlat
repz
mov
jge
and
fisubs
pusha
and
rorb
jmp
dec
mov
adc
jnp
jle
push
lcall
gs
std
aaa
jns
movsb
repz
jne
les
cmpl
sbb
imul
sbb
or
jg
aad
pushf
ret
pop
mov
pop
adc
jnp
adc
test
push
jnp
lea
orl
mov
and
jecxz
lret
mov
insb
xchg
stos
insb
repnz
mov
pushf
xchg
das
cmpsb
int3
mov
adc
enter
lods
xchg
int3
mov
in
mov
jo
fs
les
jno
insb
loop
mov
dec
repz
das
mov
gs
inc
pop
xor
or
psraw
test
and
cmp
mov
loope
pop
pop
pop
cmp
cmpsb
jnp
fdivs
dec
inc
and
cmp
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
adc
add
inc
inc
or
stos
adc
dec
inc
arpl
decb
pop
cwtl
jl
imul
inc
xchg
lods
hlt
xchg
sub
vandnps
push
aaa
pop
push
lods
xchg
jae
lret
inc
fiadds
std
lods
mov
lcall
adcl
cmp
cli
xchg
add
jl
sub
movsb
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
fdivrs
and
lret
add
mov
out
push
scas
shrl
xor
sub
add
lea
jp
lods
addr16
push
sbb
jge
dec
lcall
xor
mov
aaa
test
pop
repnz
out
insl
push
or
inc
mov
push
mov
cs
xor
jnp
je
repz
inc
cmpsl
xor
arpl
iret
inc
fisttps
push
sar
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
sbb
stos
cwtl
or
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
sbb
subb
imul
cmp
movsb
push
sub
jns
push
inc
int3
mov
mov
in
ja
push
repnz
aam
jl
ljmp
pop
sub
cmp
jae
xchg
fwait
xor
data16
push
cmp
insl
in
popf
pop
adc
mov
enter
aas
sti
sti
and
aas
lahf
es
jns
jle
orl
xor
imul
inc
fdivrs
inc
icebp
dec
mov
and
test
lods
nop
aas
jo
pusha
or
adc
jno
decl
out
mov
fs
adc
ret
jb
dec
push
pop
repnz
jle
jmp
movsl
mov
pop
ficoml
imul
xchg
shlb
push
cmc
mov
pushf
jmp
sbb
push
or
or
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
das
es
inc
xor
and
leave
xchg
shl
ja
std
outsl
addr16
call
xchg
xchg
adc
popa
stos
mov
jbe
mov
arpl
lds
stos
mov
pop
out
enter
jnp
or
and
in
cmc
xor
push
adc
pop
test
lcall
xor
mov
mov
mov
cmp
jp
add
add
mov
sbb
fwait
orb
xor
mov
arpl
mov
jg
lret
push
repz
cmp
sahf
push
aam
push
mov
mov
pop
imul
and
pushf
xor
imul
mov
scas
mov
dec
jmp
lret
jbe
mov
pop
lods
pop
push
inc
call
pop
and
sahf
fisubl
imulb
int
addr16
and
lea
les
into
test
les
pushf
ss
mov
in
fidivrl
cmp
jmp
std
stos
mov
mov
jnp
lahf
outsl
aas
addl
mov
sti
sti
and
test
lcall
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
inc
and
mov
xor
inc
enter
jmp
daa
add
test
push
leave
cmpsl
inc
or
mov
pop
leave
cmp
xchg
divb
dec
xchg
addr16
mov
pop
push
ljmp
lods
jae
lret
push
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
ret
xchg
fisttpl
add
jp
add
cmp
lds
sbb
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
mov
jae
pushf
sub
call
lret
pop
jmp
fisttpll
jg
lahf
dec
xchg
clc
lahf
stc
cwtl
shll
or
add
push
rcll
mov
push
andl
inc
xchg
sbb
push
inc
mov
xchg
jns
lret
add
adc
ss
xchg
xor
push
push
ja
popa
stos
int
sub
mov
enter
mov
sbb
pop
mov
mov
jne
in
mov
lcall
iret
rcrl
jnp
mov
inc
leave
or
pop
push
outsb
shlb
leave
jns
or
push
clc
cwtl
std
mov
dec
enter
fisubrl
jnp
inc
mov
add
adc
jle
add
and
mov
mov
jbe
adc
pop
pop
push
test
cmpl
popf
xor
lret
mov
cmc
mov
nop
mov
add
and
sub
cwtl
test
test
lds
int3
xchg
es
addl
pop
sbb
mov
and
adc
or
push
sub
push
xor
push
cmp
push
inc
jecxz
or
push
or
orb
icebp
dec
inc
add
mov
jecxz
sbb
dec
dec
and
and
mov
insb
movsl
sub
cmpl
fs
mov
dec
jno
jecxz
nop
std
pop
mov
jb
fs
jecxz
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
idivl
les
pushf
jne
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
xor
jae
mov
adc
jge
adc
push
sbb
lcall
test
xchg
mov
cmpsl
inc
sbb
and
xor
ja,pt
fs
sub
inc
ret
mov
cmp
and
cmp
rolb
and
rcrl
inc
mov
jecxz
sbb
or
sub
negb
add
jp
or
inc
cltd
lret
lcall
sbb
out
push
cld
mov
bound
data16
scas
pop
repz
mov
cmpsb
dec
mov
push
insl
jbe
mov
pop
test
xchg
fs
sbbl
pop
and
test
hlt
pop
mov
and
test
push
mov
enter
jp
outsl
mov
jo
inc
int
inc
xor
jae
ja
jb
fdivrs
cli
jno
movsb
insb
lahf
inc
push
mov
jb
imul
mov
icebp
enter
push
leave
daa
in
hlt
xor
and
gs
cmp
inc
and
cmc
mov
and
xor
les
pop
std
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
jmp
hlt
inc
pop
adc
mov
push
insb
xor
iret
movsl
mov
shrb
cmp
mov
add
int
inc
jno
pop
cmp
into
and
adc
inc
ds
lret
ljmp
dec
dec
imul
dec
addl
mov
lret
movsw
cwtl
push
push
push
fsts
fs
push
jns
popa
cmpl
repnz
jg
mov
mov
in
sbb
add
or
decb
std
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
xchg
inc
test
dec
les
lds
mov
jo
fstp
inc
sbb
stos
adc
nop
sub
or
jl
cmp
jo
xor
cmp
call
lds
pop
xlat
pusha
push
xchg
jle
mov
xor
adc
push
mov
dec
mov
fldt
imul
test
movsl
push
imul
lods
mov
push
sub
mov
fsts
and
mov
ret
ret
mov
inc
das
xchg
stos
jge
mov
xchg
push
xlat
adc
dec
psubd
movsb
test
cmpsb
cmp
pop
and
movsl
adc
pop
and
fwait
jmp
stos
xor
mov
sar
stos
ljmp
cmp
outsb
cmp
scas
mov
out
jb
fsubrl
in
jnp
cld
loope
lods
repz
jecxz
jp
mov
lock
and
sbb
lret
mov
or
add
pop
js
dec
dec
fstpl
je
insb
scas
lcall
test
jae
push
push
lds
jp
or
xor
or
sbb
add
inc
rolb
je
and
mov
push
fiadds
in
inc
out
test
loopne
mov
je
xchg
ja
jmp
stos
mov
mov
daa
push
dec
dec
repz
or
adc
aad
sbb
adc
mov
fnsave
inc
and
ret
sbb
mov
scas
adcb
mov
xor
cmc
xor
cmp
or
and
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
xchg
inc
test
dec
les
shrl
fsubl
dec
in
nop
inc
xor
push
dec
pop
xchg
inc
gs
je
shl
mov
int
loop
mov
cld
xchg
adc
popa
repz
push
outsb
je
add
repz
inc
or
lahf
cld
pop
leave
cmp
xchg
divb
dec
xchg
addr16
mov
pop
push
ljmp
mov
ds
push
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
mov
mov
movsl
mov
cld
jp
add
cmp
lds
mov
scas
das
pop
icebp
or
cmp
fs
loop
out
lods
shlb
adc
ret
das
adc
sbb
pushf
lcall
hlt
jbe
scas
out
mov
ds
pop
push
jo
jp
cmp
sub
lahf
xor
sub
adc
xor
lods
iret
xor
into
adcb
add
arpl
shl
mov
pop
dec
inc
outsl
mov
pop
daa
fwait
jge
lret
cmp
mov
mov
inc
fldcw
inc
lods
mov
add
loop
dec
cmp
hlt
movsl
mov
jg
add
mov
int3
iret
inc
sub
sub
mov
add
test
mov
icebp
mov
xchg
repnz
jmp
mov
out
jecxz
mov
mov
fs
add
shlb
je
sub
and
pop
lcall
push
xor
xor
jae
and
mov
fdiv
test
xchg
jo
rcl
mov
aam
clc
xor
mov
add
dec
cld
or
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
int3
scas
sub
sbb
pop
popf
sar
stos
test
imul
je
pop
iret
jp
incb
mov
sbbl
ret
loopne
dec
scas
xor
sub
xlat
add
mov
mov
out
inc
sbbl
cmpsl
dec
or
mov
popa
test
xor
xor
lods
dec
adc
fwait
push
fwait
push
cwtl
fimull
jns
sbb
ljmp
lret
into
jo
fnstenv
or
mov
jl
sbb
pop
rcl
mov
cmpsb
xor
jb
fisttpll
cmp
lds
lcall
jle
das
pop
icebp
or
cmp
fs
loop
out
lods
rclb
push
cld
jb
xor
add
add
pop
push
out
je
dec
cmpsb
mov
xlat
push
push
fst
jo
pop
inc
and
lret
sbb
unpckhps
test
or
les
das
outsb
add
jle
nop
inc
push
add
mov
inc
orb
add
inc
ret
inc
test
adc
inc
ret
mov
pop
push
add
lret
jge
rorb
popa
pushf
rcrl
sub
addl
push
adc
mov
sbb
pop
xchg
sbb
pop
xchg
sbb
cltd
lret
lcall
sbb
out
push
cld
mov
movsl
cmp
and
into
in
mov
fbld
mov
test
sub
dec
push
xchg
add
je
mov
pop
test
mov
sahf
pop
mov
repnz
out
inc
insb
icebp
xor
cmp
je
loope
sub
mov
inc
icebp
addr16
fdivrs
rcr
nop
outsb
mov
out
cld
push
mov
mov
push
cmp
jnp
testb
fucomi
hlt
std
mov
sti
and
aas
lahf
es
dec
loope
adc
mov
cmp
in
push
divl
sti
fnsave
push
adc
inc
outsb
ss
loopne
jl
dec
cmpsl
int3
mov
and
popa
repz
xor
jo
je
test
jbe
push
leave
inc
inc
mov
jne
lds
lds
and
jb
mov
iret
lods
leave
push
sbb
movsb
cld
mov
jno
dec
adc
std
fnstenv
mov
add
scas
fsubr
adc
sub
cmp
fimull
mov
loop
cli
cmp
stos
xor
xor
mov
mov
jg
jp
inc
mov
pop
jb
add
mov
out
push
test
out
cmp
out
mov
sub
je
pop
lods
addr16
fidivrs
cmpsl
inc
fld1
insb
icebp
mov
lahf
popa
cmpsb
push
imul
mov
or
dec
sarl
xchg
jno
dec
adc
mov
ret
mov
addb
or
lods
xor
or
cmp
or
add
lock
add
mov
cmc
sub
jp
adc
repnz
jns
lds
nop
lds
mov
testl
loope
lret
movb
mov
shll
adc
adc
xchg
jnp
imul
outsb
lret
jbe
lahf
and
push
dec
call
xor
aas
scas
scas
data16
cmpsb
fucomi
repnz
mov
jecxz
cmpl
push
roll
bound
gs
jecxz
mov
in
dec
mov
cli
dec
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
inc
pushfw
subl
test
js
sbb
mov
mov
cmp
mov
lods
lods
stos
push
pop
mov
out
fwait
inc
movsl
dec
dec
xor
dec
sti
add
shll
outsb
push
movsb
sbb
daa
push
out
dec
imul
xchg
dec
in
push
xchg
cmpsl
mov
fsubrl
fmul
movsl
mov
and
xchg
addr16
std
push
stos
mov
dec
shrl
mov
cmpsl
shll
mov
jno
dec
rcrb
out
jb
inc
mov
and
in
and
sub
push
enter
fsts
fs
push
jns
popa
cmpl
repnz
jg
mov
mov
in
sbb
add
or
decb
std
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
sarl
out
push
pop
pushf
xchg
dec
adc
cmp
sub
mov
dec
adc
lcall
and
test
pop
shrb
int
push
fisttpl
pop
add
cmp
or
outsl
aam
sub
mov
sub
push
mov
insl
aad
insl
ficomps
fldcw
loop
dec
pusha
sub
push
ljmp
jae
pushf
pusha
push
popf
dec
movb
inc
shlb
repz
hlt
inc
iret
dec
and
xchg
or
fidivrl
fucompp
xchg
outsl
or
std
cli
cmc
xchg
cltd
fmull
cmp
aad
adc
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
lcall
mov
mov
negb
mov
je
pop
dec
cmpsb
mov
mov
xchg
mov
je
sub
or
and
rolb
push
push
shll
inc
fs
inc
dec
adc
pop
sbb
test
add
jae
test
pop
push
jl
in
roll
add
popf
sti
arpl
adc
dec
mov
lahf
fwait
cmp
pop
les
imul
test
movsl
je
xor
xorl
jle
mov
sti
cmp
pop
in
dec
mov
aam
or
dec
icebp
cltd
sub
mov
mov
mov
adc
push
and
pop
test
mov
inc
test
pop
orl
mov
and
les
cmpsb
mov
and
pop
rorl
lods
sbb
or
cld
push
call
pop
scas
cltd
addl
add
pop
push
ja
pusha
mov
lods
lcall
test
inc
cmpl
mov
hlt
pop
sub
lds
nop
aad
fisubrs
push
dec
mov
lcall
and
or
adc
popf
je
cmp
sti
inc
jae
ljmp
add
add
mov
sbb
fwait
orb
xor
mov
fmull
sub
stos
mov
loop
dec
pusha
sub
pushf
pop
pop
pop
loope
push
lea
std
sahf
pop
xchg
iret
loope
pop
roll
inc
jno
xchg
in
push
jg
shl
je
sub
loopne
mov
sub
test
arpl
ficoms
inc
popf
scas
jne
mov
enter
mov
cmp
cltd
cmpb
sbb
lret
jmp
scas
mov
nop
arpl
jnp
and
jnp
out
scas
inc
leave
xchg
xor
xor
jns
outsb
out
lahf
stc
cwtl
shll
mov
shr
sub
or
dec
dec
adc
dec
add
pop
lods
xlat
cwtl
ja
sbb
daa
mov
mov
ret
in
inc
mov
popf
in
mov
mov
in
mov
imul
lock
mov
pop
mov
cwtl
in
outsb
xor
push
dec
jae
int
inc
ret
pop
mov
push
mov
jmp
mov
sub
mov
cli
and
mov
push
mov
aam
or
test
imul
fidivs
pop
aad
repz
movl
xchg
pop
xlat
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
push
sbb
hlt
fistps
push
aas
fwait
lret
in
mov
mov
or
pop
fsubl
xor
cli
mov
jge
xchg
add
or
add
mov
dec
adc
lock
shrb
std
leave
xchg
lock
inc
pop
and
scas
pop
pop
mov
jno
orl
inc
xchg
or
insl
rolb
popa
sahf
rcrb
hlt
sub
xchg
outsb
and
mov
sbb
cltd
mov
in
idivb
or
sbb
std
fistpll
sti
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
mov
test
xchg
data16
inc
dec
leave
addr16
sbb
sbb
daa
xlat
insb
mov
sbb
pop
sub
adc
jl
pop
lods
out
std
adc
es
movl
or
inc
fs
inc
dec
adc
mov
repz
mov
pop
sbb
insb
add
fadd
fldl
push
rorb
aad
movb
sbb
sbb
ja
push
mov
adc
add
lock
mov
mov
stos
out
jbe
push
push
movsb
jmp
scas
jmp
outsb
mov
pop
sub
jae
int3
or
push
inc
outsb
scas
stos
rcll
les
push
mov
xchg
jb
xor
lods
aad
sarl
xchg
mov
movsb
mov
xchg
addb
cmp
mov
and
adc
mov
pop
jae
inc
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
push
fwait
ret
push
cmp
pop
rorb
ss
cmp
sub
icebp
lods
push
pop
pop
xor
pop
sbb
xchg
inc
push
fwait
jp
mov
or
repnz
add
addb
je
sti
jae
fildll
jmp
decb
aad
push
pop
push
insl
aad
insl
ficomps
fldcw
stos
lea
mov
fbld
xor
leave
jecxz
arpl
aaa
jl
sbb
pop
or
cmp
or
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
dec
adc
adc
fisubrl
jnp
inc
mov
cwtl
add
cmp
sub
xchg
xchg
pop
inc
mov
dec
out
mov
xor
das
stos
xlat
shll
test
mov
ret
cltd
call
sti
mov
xchg
dec
data16
addb
sbb
fs
inc
dec
adc
movsl
push
addb
mov
bound
test
ja
xchg
jns
lret
xchg
sbb
xchg
mov
mov
aad
or
je
cs
mov
inc
ljmp
lcall
xlat
dec
sub
imul
sbb
std
fistpll
sti
mov
mov
test
in
andb
sbb
fcomps
jne
insl
jle
mov
xor
das
movsl
mov
cs
xchg
xlat
pop
xchg
test
aad
xchg
xchg
dec
aam
pop
mov
cmp
xor
push
repz
imul
out
cmp
out
jae
pushf
sub
jae
popf
lods
push
jae
xlat
ja
mov
jnp
sahf
arpl
dec
mov
cwtl
es
out
add
mov
xchg
add
and
pop
push
or
xchg
fcmovbe
movb
push
cmc
cmp
cmc
mov
aaa
dec
push
call
and
mov
adc
ljmp
and
jl
adc
and
mov
dec
sbb
cmp
jg
cmp
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
cmp
insb
aas
xchg
and
mov
fsubrs
stos
push
adc
mov
out
cmp
out
mov
out
loopne
ret
out
mov
outsl
mov
aaa
fnstenv
pushf
adc
and
jg
dec
es
test
insl
inc
xor
dec
or
adc
cwtl
mov
cltd
addr16
lahf
adc
push
mov
mov
add
setle
xor
mov
cltd
mov
nop
xor
inc
popf
mov
add
lods
xchg
sub
adc
fldenv
icebp
mov
xchg
jae
mov
mov
aam
add
cltd
adc
xchg
addb
adcb
and
push
cmpsl
adc
mov
jbe
popf
adc
gs
ret
sub
ud1
out
rorl
and
jo
add
push
inc
mov
nop
pop
lds
idivb
cmp
adc
or
cmp
mov
ret
mov
fcmovu
sti
sti
and
sbb
lret
dec
sbb
repnz
cltd
sbb
and
mov
mov
inc
pop
sbb
xchg
pop
adc
out
xchg
fcmovnbe
out
jno
pop
out
xchg
mov
daa
inc
mov
stos
sub
outsl
push
jmp
add
lret
cld
push
cwtl
dec
pop
lcall
push
scas
jnp
stos
out
jno
lds
inc
in
sub
mov
sub
sbb
and
or
nop
rorl
fsts
std
dec
jge
mov
jp
rcrl
rorb
jb
fisttpll
cmp
push
int3
idivl
sahf
xchg
sbb
js
xchg
xor
dec
in
ss
mov
cs
test
or
into
sahf
ds
rcrl
mov
loop
mov
or
pop
dec
dec
pushf
mov
outsl
fldl
mov
outsb
ret
lahf
repnz
sub
mov
pushf
fld
sbb
jbe
and
mov
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
jecxz
ss
ret
clc
sti
jae
ljmp
add
add
mov
sbb
fwait
orb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
mov
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
xchg
and
cmp
dec
dec
dec
cmpsb
xor
dec
push
pop
mov
pusha
jp
mov
push
push
or
jb
pop
in
mov
pop
das
rorl
scas
pushfw
add
popl
mov
dec
pop
call
xchg
sbb
jnp
dec
ljmp
sti
lahf
movsl
call
add
xor
repnz
hlt
add
pop
shrl
push
push
rcl
hlt
cmp
or
movb
cs
push
lds
jle
pop
inc
jl
and
cmp
xor
xchg
dec
stos
add
repnz
sbb
sahf
add
sarl
ss
mov
or
fisubl
cmp
inc
push
ret
call
xor
stos
enter
and
xrelease
cltd
outsl
aad
sbb
adc
push
stos
fnsave
inc
and
ret
sbb
mov
scas
adcb
mov
xor
cmc
xor
mov
mov
cmc
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
sbb
mov
xchg
pushf
test
add
push
xchg
lds
movl
fisubrs
fistl
outsb
mov
fisubl
imul
bound
jmp
jno
or
sbb
jnp
pop
loopne
sub
jo
flds
hlt
dec
inc
sbb
rolb
popa
lcall
scas
mov
inc
mov
pop
jbe
mov
movl
bound
data16
push
push
adc
cmp
dec
mov
sub
ljmp
jmp
out
test
aad
mov
imull
clc
icebp
jle
pop
mulb
inc
xchg
cmpsl
or
mov
ficomps
dec
xor
mov
add
stos
xorl
out
scas
lods
icebp
sbb
ret
outsl
mov
aas
and
add
inc
mov
or
add
dec
dec
sub
xchg
inc
gs
je
pop
mov
xor
ret
call
lods
xchg
es
scas
jno
adc
add
mov
in
enter
les
xchg
in
push
dec
xchg
div
subb
cmpsl
arpl
rcll
stos
incl
popa
int3
pop
dec
lcall
xchg
adc
lcall
sahf
jg
push
dec
dec
fsubl
cmp
mov
push
mov
xchg
test
stos
push
int3
movsb
mov
sbb
lret
lahf
cmpsl
pop
icebp
cmp
jne
inc
daa
inc
add
jnp
mov
sbb
mov
cld
dec
xor
and
adc
ds
aaa
stos
lds
cmp
mov
xlat
or
lahf
cltd
pop
adc
mov
cmp
test
loope
and
jecxz
cmp
mov
aam
xorb
dec
rorb
mov
js
shlb
pusha
or
mov
cmp
and
jl
jp
push
fs
xor
ficoml
stos
inc
test
shll
stos
fstps
push
mov
stos
in
sbb
outsb
mov
mov
rcr
mov
ja
inc
frstor
mov
xchg
jp
jmp
add
rcll
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
dec
cmpsl
ficoms
hlt
ja
std
outsl
addr16
call
push
lds
xchg
dec
enter
ss
repnz
leave
mov
cmp
or
jp
cmpsb
jnp
or
and
in
cmc
xor
push
adc
pop
test
lcall
xor
mov
mov
mov
cmp
jp
add
cltd
sub
adc
cmp
add
inc
mov
cmpsb
ljmp
ret
mov
in
imul
dec
and
jb
and
jmp
cltd
popa
pushf
xor
insb
cmpsl
mov
and
xlat
cli
aad
push
inc
shlb
dec
xchg
aam
jne
insl
bound
mull
int
or
das
mov
in
cmpb
scas
das
in
sbb
int3
xor
repz
xchg
mov
sbb
fnstenv
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
lock
mov
or
lahf
cltd
pop
adc
mov
cmp
test
loope
and
arpl
adc
xor
ret
xorb
or
mov
mov
out
pusha
xor
push
cmc
mov
dec
dec
jecxz
movl
hlt
fs
arpl
pop
inc
xchg
mov
xchg
test
jle
jecxz
stos
aam
lahf
stos
sub
mov
push
movsb
jmp
push
ja
fs
movsl
mov
sti
mov
mov
sub
jl
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
fwait
jmp
stos
xor
mov
fst
sbb
sbb
jae
dec
jmp
xchg
pop
out
or
int
sbb
mov
xchg
inc
pop
clc
es
cmpsl
into
call
inc
cmp
jne
cltd
push
loopne
adc
inc
inc
mov
mov
push
and
or
cmp
aas
out
arpl
mov
mov
clc
lods
lcall
xchg
incb
jae
xorl
xchg
dec
lds
mov
incb
push
pop
es
jns
pop
repnz
push
fbld
sub
mov
mov
xlat
ljmp
out
shr
and
insb
das
push
dec
cmpsl
xchg
test
sub
jg
or
jae
sub
xchg
jne
insl
push
inc
push
mov
xchg
sbb
and
xchg
in
mov
xchg
fidivrs
aaa
les
jno
loope
aaa
clc
xor
scas
add
scas
jecxz
cmove
jae
xchg
adc
stos
sbb
xchg
xchg
jg
fsub
xchg
xchg
test
pop
push
loop
jmp
lea
mov
sbb
pop
int
mov
in
and
test
sbb
shrb
cmp
mov
popa
dec
mov
into
scas
stos
shll
inc
xchg
in
mov
sub
test
mov
inc
mov
aaa
scas
stc
aaa
add
dec
call
mov
divb
dec
add
nop
xlat
adc
ret
scas
bound
jno
pop
mov
xchg
dec
mov
scas
dec
rcr
mov
and
mov
das
sbb
dec
movsl
or
sbb
fistl
imul
push
shll
or
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
cmp
sub
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
lcall
fisttps
stc
in
jns
test
inc
mov
xor
enter
pop
int3
aaa
adc
ja
rcll
add
mov
push
push
cmp
push
xchg
push
mov
cwtl
ja
mov
xchg
mov
decl
aas
cli
add
fimuls
mov
aam
dec
test
dec
aas
outsb
xor
test
ljmp
mov
dec
js
fisttps
mov
sahf
das
xchg
stc
cli
in
test
or
test
clc
jg
inc
outsb
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
inc
dec
aam
pop
mov
scas
ud0
add
jle
pusha
and
leave
lock
test
cwtl
jg
jge
sbb
lret
xchg
mov
inc
out
scas
mov
fildll
les
fldcw
andb
rolb
aas
or
xor
lret
push
mov
dec
sahf
dec
mov
mov
ljmp
insl
mov
daa
jo
push
sbb
inc
and
add
lahf
jmp
lock
sarl
cmp
and
insb
jne
inc
into
push
mov
mov
inc
push
cltd
jns
ret
xchg
ret
dec
lods
jmp
cmp
inc
push
stc
inc
jb
dec
mov
lret
wbinvd
sub
push
outsl
sbb
push
in
dec
out
outsl
stos
sub
mov
jb
int
sahf
pop
js
lahf
fstpt
push
aam
into
xchg
xlat
jg
xlat
sbb
jae
fcmovnu
test
fstpl
repz
ds
jo
in
dec
add
inc
pop
xor
jnp
or
lods
leave
aam
mov
fdivrl
cli
xor
fists
out
cmp
outsl
sbb
and
sbb
lret
dec
sbb
lea
cmp
inc
fstpt
idivl
inc
pop
sbb
xchg
pop
adc
iret
mov
mov
aad
push
xor
sub
cltd
insl
leave
sbb
or
ljmp
repz
les
dec
cli
leave
sbb
fcomi
test
cmp
mov
xchg
repz
cmp
icebp
add
push
cmp
sbb
popf
js
test
pop
sub
jp
add
cmp
push
inc
idivl
sahf
xchg
sbb
js
xchg
xor
in
or
or
jns
dec
sti
mov
inc
fisttpll
adc
popl
pop
or
testb
jle
mov
or
pop
add
mov
mov
cmc
sbb
mov
sahf
cmpsb
jo
sbb
xor
xchg
mov
mov
faddl
jp
mov
mov
ret
dec
sbb
jp
push
xchg
mov
dec
and
mov
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
push
cmpb
sub
sahf
imul
jns
loope
sub
add
push
adc
jp
pop
xchg
addb
mov
insl
outsb
pop
cltd
enter
sub
xchg
push
shrb
xor
xchg
sub
pop
mov
adc
repz
xchg
inc
sbb
add
je
sbb
adc
ds
push
test
mov
xor
sub
je
pop
adc
test
and
std
lods
xor
lods
fistl
outsb
out
sti
cwtl
inc
data16
add
add
insb
adc
ja
inc
push
and
or
clc
and
xchg
adc
sub
pop
adc
inc
mov
mov
pop
sub
push
xor
mov
xchg
daa
and
int3
mov
pushf
mov
fidivrl
stos
pop
push
in
addr16
shrb
mov
lahf
stc
pop
pop
dec
and
imul
cmc
sbb
dec
rcrl
cltd
push
repz
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
push
jnp
xchg
add
movsb
fisttps
mov
bound
in
nop
xchg
lahf
push
cwtl
lock
sbb
je
jge
in
pusha
rcrb
mov
fists
fistps
jl
das
and
out
cmpl
jecxz,pn
repnz
jns
mov
in
xchg
mov
inc
adc
jbe
gs
jnp
inc
inc
pop
mov
sbb
adc
int
int3
fwait
mov
in
and
xor
mov
or
in
cld
les
movsl
add
add
mov
sbb
jl
orb
xor
mov
arpl
mov
jg
lret
jge
push
rep
pop
imul
das
push
mov
push
movsb
ret
enter
imul
push
or
xor
insl
cmpsl
and
cwtl
sub
xlat
and
aaa
movsl
into
lret
xor
fcom
ss
mov
gs
ret
cltd
sub
add
addr16
mov
push
or
pop
or
bsr
adc
fprem1
jmp
xchg
xchg
xchg
jg
sub
xor
les
cltd
pop
xor
push
jmp
fnstsw
xchg
ds
mov
add
jne
bound
jno
adc
test
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
add
inc
pop
mov
xor
jbe
roll
add
into
stc
push
xchg
movsb
mov
pushf
dec
ficomps
adc
and
lods
sbb
and
jecxz
js
lahf
dec
inc
xchg
lcall
popf
push
jns
push
subb
into
ss
mov
ja
aad
cmp
rorl
stos
mov
sbb
jnp
xchg
stos
xor
xor
fwait
movsb
pop
das
jle
scas
jb
jo
dec
cmc
push
sbb
add
int
shlb
and
push
xor
loop
stc
adc
clc
jp
pop
pop
inc
stos
jecxz
fnstenv
arpl
push
sub
ljmp
popf
jg
into
add
mov
je
shlb
mov
gs
ret
cmpsl
push
hlt
cwtl
mov
xchg
mov
ffree
jle
push
adc
mov
mov
inc
push
sar
ret
arpl
lds
movsl
sbb
jp
add
add
mov
sbb
fwait
orb
xor
mov
arpl
mov
jg
cmp
push
push
mov
sub
jne
adc
call
orl
in
xchg
iret
or
int
gs
xchg
jmp
dec
stos
in
shrl
data16
pop
test
sub
cmpb
add
scas
xor
sbb
leave
or
ds
push
sub
pop
std
arpl
lcall
stc
js
xchg
jns
fimull
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
fsts
mov
mov
int3
loope
lea
sbb
nop
fcoms
adc
aam
xor
xchg
dec
and
adc
jmp
inc
push
pop
add
cmc
test
popa
push
push
rol
aam
movzwl
shll
fimull
xlat
aad
add
pop
dec
les
dec
xor
stos
jg
xor
xor
add
sub
jb
fsts
cmovae
sahf
jge
ljmp
inc
cs
dec
push
adc
sub
jne
mov
out
fistpl
mov
scas
push
mov
das
mov
in
scas
aas
test
xchg
in
cmpxchg
out
jno
insb
out
pop
mov
scas
paddw
add
pop
pop
pusha
sub
ror
jecxz
nop
cltd
cmp
or
and
scas
cmc
out
sti
mov
lret
fs
inc
popf
mov
ret
ret
fldenv
scas
dec
int
sarl
push
scas
std
int3
inc
aas
mov
dec
jle
nop
inc
lret
ret
aam
and
push
xor
sbb
dec
ljmp
cltd
popa
ds
add
xchg
sbb
adc
cld
sub
sbb
insl
jecxz
and
les
mov
stc
shr
adc
ret
cltd
mov
call
lock
pop
cli
sub
pop
inc
aam
dec
sbb
xor
pop
jp
pushf
movsl
aad
and
inc
cmp
js
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
and
jne
xor
bound
shrl
fnsave
repz
and
mov
testb
jnp
out
push
data16
sbb
mov
cli
jno
movsb
insb
lahf
inc
push
dec
inc
fnstenv
imul
mov
icebp
enter
push
leave
daa
in
hlt
xor
and
subb
fisubs
faddl
push
cwtl
cmpb
xor
pop
loopne
inc
push
lret
repz
mov
ret
jl
jg
fbstp
test
pop
mov
jmp
popa
int
pop
fcomi
imul
push
stos
loop
sub
ljmp
popf
pop
mov
pop
push
ljmp
mov
lret
push
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
push
fmull
inc
jns
dec
cmpsb
xor
jb
fisttpll
cmp
push
xor
sahf
sahf
xchg
sbb
js
xchg
xor
test
xor
hlt
das
pusha
enter
bsr
adc
cmc
jmp
cmpsl
ds
int
incb
mov
addr16
imul
xlat
xor
imulb
mov
sub
adc
sbb
sbb
inc
lret
loop
inc
mov
sbb
out
enter
jnp
or
and
in
cmc
xor
push
adc
pop
test
lcall
xor
imul
push
popf
mov
cmp
jp
add
add
mov
sbb
fwait
orb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
mov
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
xchg
and
cmp
dec
dec
dec
cmpsb
lds
sbb
into
xor
or
mov
clc
loop
ja
or
inc
or
push
xchg
add
cmp
repnz
xchg
out
mov
stos
adc
imul
in
mov
mov
or
mov
add
jne
bound
cltd
add
mov
mov
mov
mov
push
and
add
xchg
pop
xchg
dec
and
push
scas
push
test
call
iret
push
and
adc
sbb
xchg
arpl
out
pop
sub
mov
add
sbbl
mov
push
mov
out
ret
sbb
xlat
stos
movsl
and
push
into
push
mov
insl
movsl
imul
mov
jmp
push
mov
dec
jno
jecxz
nop
std
pop
mov
sbb
fs
jecxz
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
dec
mov
ficomps
jnp
inc
mov
add
adc
lcall
mov
mov
jbe
adc
pop
pop
push
test
cmpl
popf
xor
lret
mov
cmc
mov
nop
test
add
les
xor
fs
inc
data16
or
nop
and
setne
sbb
mov
and
sub
int3
push
xor
or
inc
xchg
dec
aad
or
dec
adc
push
and
fnstenv
rol
fiadds
xchg
adc
in
mov
outsb
mov
insl
and
mov
insb
movsl
sub
cmpl
fs
mov
dec
jno
jecxz
nop
std
pop
mov
sbb
fs
jecxz
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
leave
mov
les
pushf
jne
jnp
inc
mov
add
adc
lcall
mov
mov
jbe
test
sbb
jnp
out
mov
js
fisttps
inc
outsb
jecxz
or
les
daa
outsb
add
jle
nop
lds
dec
mov
imul
outsl
nop
cs
mov
movsl
push
jmp
cltd
test
cmpl
sbb
jns
ds
sub
std
xchg
jg
enter
lds
fistl
or
ret
gs
cltd
fs
hlt
sub
or
stos
lds
jge
sub
cmc
sbb
xor
imul
inc
xchg
fcmovnb
sbb
sahf
dec
xchg
sub
add
cs
pop
adc
aad
mov
mov
shr
sbb
pop
loop
cmp
or
pop
or
jg
push
sbb
sub
inc
jl
imul
fistl
adc
test
jae
push
jne
sbb
jns
ljmp
out
insl
push
andb
cmp
or
cmp
xchg
sub
rol
dec
sbb
jb
mov
lcall
mov
out
mov
bound
adc
xchg
pop
xchg
into
popa
mov
shll
fcoml
xchg
or
popa
cwtl
pop
push
jno
aad
insl
into
pop
or
adc
aaa
adc
and
ja
jecxz
sbb
cld
cmp
fwait
aad
and
fcoms
in
dec
cmp
mov
mov
xor
add
sbb
call
and
jmp
enter
fisubrl
jnp
inc
mov
mov
mov
cmp
ret
xchg
sub
and
push
cmp
in
scas
out
jp
inc
pop
mov
jnp
inc
pop
enter
in
jns
outsb
out
sti
inc
pusha
data16
add
add
lock
or
ret
nop
and
push
xor
imul
daa
mov
pop
sbb
insb
add
fadd
fldl
pop
ret
add
jecxz
inc
nop
fisttps
insl
rolb
gs
rcrb
repnz
mov
int
inc
sbb
sbb
in
repz
rcrb
jbe
mov
movl
jno
arpl
lds
sbb
insb
repnz
fdivrl
push
lea
xlat
adc
dec
mov
sub
call
jmp
cld
add
addr16
leave
cmp
xor
insb
pop
adcl
jle
in
out
add
ret
lods
mov
fs
push
cwtl
push
shlb
xor
fs
inc
add
icebp
outsl
in
push
or
sbb
xlat
push
jle
divl
and
es
fdivs
aaa
imul
adc
mov
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
lahf
lret
jecxz
inc
dec
xor
pop
sub
mov
xchg
ja
ja
icebp
ret
sbb
fs
sarb
fstpl
mov
sti
sbb
cli
sbb
sub
cmp
les
sti
arpl
icebp
add
inc
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
lcall
lcall
adc
dec
movsb
aad
xor
xor
mov
bound
ja
loop
in
nop
xchg
lahf
push
cwtl
lock
sbb
je
jge
in
push
iret
hlt
ss
outsl
jae
fsubrp
cmp
scas
xchg
scas
out
cmp
and
push
adc
mov
outsb
inc
scas
andb
mov
sbb
or
hlt
lods
cli
mov
imul
popf
mov
sbbl
int3
loop
lods
imul
mov
into
add
nop
sub
sbb
test
lcall
daa
and
iret
mov
sbb
lcall
scas
jge
dec
pop
mov
pop
inc
cmpsl
lret
fucomp
add
fldt
repnz
dec
inc
shll
adc
add
les
icebp
inc
scas
xchg
stos
cmc
adc
lods
nop
xchg
push
and
and
popa
xchg
hlt
inc
les
jecxz
cmpsl
dec
cwtl
loop
cs
fistl
outsl
xchg
and
in
ss
mov
out
and
mov
das
je
mov
sub
xchg
jbe
popf
push
sbb
add
rcll
movsb
cld
popa
xchg
repz
std
dec
data16
inc
aad
mov
pop
out
cmp
mov
sbb
call
movsb
lea
push
pop
pop
push
test
movsb
repz
and
lds
add
mov
cmp
jp
add
cltd
sub
adc
lods
cmpsb
sbbb
lret
mov
pushf
dec
push
pushf
xlat
stos
mov
rcll
pushf
pop
pop
pop
loope
lcall
stc
jnp
lahf
pop
push
sahf
jno
jecxz
fdivs
rclb
mov
cs
stos
adc
add
dec
adc
mov
stos
push
repz
dec
jne
jae
int
dec
subl
or
mov
pop
frstor
js
in
xchg
jl
sbb
fistl
popl
push
jo
cmp
mov
addr16
xchg
xchg
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
xlat
xchg
stc
es
iret
out
aam
fwait
xchg
pushf
ret
addr16
sub
or
dec
sbb
xchg
inc
gs
je
pop
mov
xor
dec
push
sbb
push
sbb
inc
pop
add
inc
movsb
ja
iret
adc
les
lock
loop,pn
mov
fsts
inc
pop
lcall
jg
adc
mov
adc
sbb
mov
pushf
jmp
sbb
jae
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
cmp
call
pop
pop
lahf
push
mulb
sbb
adc
int
hlt
out
push
mov
icebp
mov
fwait
scas
mov
out
jae
lahf
xor
jae
daa
divb
popf
lods
push
leave
mov
pop
dec
adc
dec
sbb
mov
adc
push
inc
test
ss
push
andl
imull
fsubr
xchg
xchg
leave
inc
shll
mov
je
mov
adc
cmpsl
aas
repz
clc
sti
pop
push
rorb
aad
imul
outsl
mov
xor
insb
xor
iret
movsl
mov
shrb
cmp
inc
pop
add
int
inc
jno
pop
cmp
into
and
call
int3
mov
and
and
iret
push
mov
enter
push
mov
pop
xchg
dec
pop
stos
pop
rclb
pop
adc
adc
je
dec
add
aas
scas
jmp
movsl
jmp
jns
outsb
ljmp
sbbl
jbe
pop
dec
add
add
add
inc
shlb
rorb
out
xchg
out
lods
pop
jae
inc
and
cmpb
xchg
fisttpll
add
out
int3
add
lea
jge
shrb
cmp
cld
or
lea
cmp
aas
test
fildl
repz
mov
push
sarl
mov
rclb
cmpb
cwtl
pop
push
jno
fst
outsl
mov
imul
pop
imul
test
scas
scas
imul
jmp
in
addr16
repnz
dec
popf
lret
add
xchg
imul
leave
ret
cwtl
xor
mov
xchg
int3
xchg
jge
cmp
jecxz
adc
mov
lds
xchg
or
inc
fsubrs
mov
popa
sbb
in
cmp
mov
and
adc
and
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
bound
out
pop
push
pushf
pop
add
adc
inc
inc
pop
jle
nop
inc
fs
call
ret
inc
shll
sbb
xlat
pop
pop
sbb
sub
fstl
addb
fcomps
das
fildl
jl
mov
add
dec
lds
push
cmpb
xor
xor
aad
les
lcall
sbb
std
fistpll
sti
mov
mov
test
sbb
orb
mov
dec
mov
out
stos
sub
aam
das
scas
aam
jne
insl
in
scas
sbb
cmp
lahf
scas
fldt
scas
pop
and
push
xchg
jle
scas
xor
jmp
andl
lock
out
out
cmp
pushf
repz
lock
jno
xchg
in
cmp
out
mov
sub
adc
sbb
sbb
mov
mov
test
lds
xchg
mov
pop
cmpb
pop
mov
mov
jns
sub
inc
pop
add
mov
inc
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
imul
leave
fsubrl
stos
lret
movsl
mov
add
addr16
repnz
mov
stc
push
mov
sbb
insb
scas
stc
ret
xchg
rcr
mov
and
mov
adc
enter
dec
movsl
or
sbb
fistl
mov
xor
shll
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
and
mov
mov
negb
mov
je
pop
lods
addr16
fidivrs
pop
xchg
fxch
jb
sbb
lods
mov
inc
lods
andl
pushf
test
inc
addr16
inc
stos
jae
nop
and
push
jb
xor
ja
mov
dec
pop
inc
dec
movsb
les
pop
inc
cmpsl
lcall
push
jb
cmp
and
js
mov
jno
roll
and
rcrl
inc
mov
jecxz
sbb
or
sub
negb
add
jp
or
inc
cltd
lret
lcall
sbb
std
fistpll
sti
mov
mov
test
in
andb
out
add
rorl
mov
xchg
dec
and
into
add
shrl
pop
xchg
iret
int3
jmp
outsb
test
xor
loopne
jl
scas
adc
xchg
cmp
in
or
or
int
in
jo
rorb
stos
adc
insb
mov
dec
pushf
sub
movsb
insb
lahf
sti
fwait
pop
mov
jne
loope
sub
lds
mov
lret
dec
sbb
cli
cmp
jne
push
xor
lea
cmp
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
pop
inc
roll
pop
test
push
ljmp
out
lods
mov
and
call
imul
inc
sub
sub
adc
jecxz
fdivs
or
xor
dec
dec
xchg
aam
push
pop
loop
dec
xorl
xchg
dec
scas
iret
dec
movsb
ljmp
std
and
js
fidivs
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
mov
cmp
test
jle
jl
out
mov
icebp
push
mov
pop
pop
lcall
xor
clc
adc
add
push
pop
add
push
das
pusha
call
or
mov
nop
add
bound
jmp
mov
test
push
je
push
test
mov
imul
lahf
mov
dec
inc
sbb
nop
mov
or
fisubrl
pop
aam
jne
insl
jb
xchg
dec
lods
into
lret
jae
sub
lret
push
fildl
pop
std
pop
mov
popf
enter
jp
outsl
sti
nop
adc
es
clc
mov
add
push
test
dec
je
ds
dec
and
pushf
mov
lret
in
mov
mov
or
lahf
cltd
pop
adc
cli
xor
cmpb
je
test
loope
and
arpl
es
inc
mov
adc
pushf
pop
mov
call
push
add
mov
les
xor
push
cmp
roll
xorb
out
push
push
inc
int
test
or
and
mov
test
popa
in
jg
push
dec
pop
cmp
dec
and
adc
inc
cmp
dec
movsb
jecxz
arpl
cwtl
adc
mov
mov
gs
sub
addr16
sahf
out
ss
outsl
dec
dec
push
adc
sbb
scas
cmpsl
bound
mov
loop
push
xor
data16
rcr
pusha
inc
dec
je
jge
leave
xchg
mov
mov
push
jno
dec
cli
inc
test
push
mov
lods
inc
mov
inc
cs
ss
in
cltd
xor
mov
repz
popf
ljmp
add
test
xlat
loop
xor
rcll
add
xor
mov
stc
aas
roll
popf
scas
xchg
cmp
rol
test
or
fsts
inc
pop
push
in
movsl
mov
jg
adc
mov
adc
sbb
mov
cwtl
jmp
sbb
jae
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
lret
mov
and
out
jno
lahf
jle
lock
jle
scas
pop
push
in
pop
test
out
das
add
mov
lcall
idivl
outsl
arpl
fld1
cmp
pop
andps
ja
std
dec
push
mov
jbe
jmp
xor
dec
xchg
das
mov
sbb
leave
rclb
or
xchg
jl
movsb
mov
xchg
jmp
xchg
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
movsl
add
add
mov
sbb
fwait
orb
xor
mov
arpl
mov
incl
or
push
sub
mov
push
ret
mov
mov
aam
mov
inc
sub
int3
adc
jecxz
dec
bound
jg
shl
mov
cmpsb
dec
mov
test
pop
cltd
enter
lods
mov
mov
push
lea
test
sub
cmpxchg
out
jno
insb
out
or
frstor
or
leave
ret
icebp
loopne
push
sbbl
ror
or
pop
test
cmc
cmp
cmp
pop
inc
push
sbb
or
ret
jo
xor
popf
and
inc
cmp
jo
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
movsl
pop
mov
and
imul
ret
add
sti
mov
mov
mov
adc
outsl
mov
xor
pop
leave
pushf
push
xchg
das
mov
aad
aad
xchg
jmp
jnp
inc
das
inc
or
inc
lcall
lds
in
ds
lret
ljmp
push
stc
and
pop
mov
and
test
test
sarl
and
pushf
xchg
cld
xchg
mov
jae
and
mov
sbb
add
pushf
sbb
loop
nop
xchg
mov
jle
add
cmp
sub
enter
mov
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
sarl
out
push
test
xchg
add
or
mov
sub
sbb
push
inc
roll
sbb
mov
cmp
push
addr16
or
and
cmp
sbb
sbb
xor
mov
daa
inc
lods
dec
jmp
decb
aad
aad
xchg
mov
dec
pushf
dec
and
adc
and
cmp
xor
into
ffreep
pop
xor
lods
rcr
mov
and
mov
das
sbb
dec
movsl
or
sbb
fistl
test
xor
shll
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
and
mov
xchg
clc
cmpsb
fucomp
xchg
mov
sarl
test
leave
mov
sbb
fidivrs
sbb
sbb
pop
popa
mov
xorb
or
add
aaa
adc
xchg
nop
nop
and
push
cmpsb
pop
lcall
push
fwait
and
sub
jmp
popa
shrl
push
cmp
insl
or
jmp
add
das
mov
paddusb
xchg
mov
sbb
fisttpl
pop
dec
dec
push
mov
adc
lret
jle
fs
movsl
dec
out
pop
rcrl
mov
add
jno
add
daa
dec
sbb
mov
cmpsb
xor
jb
fisttpll
cmp
push
into
idivl
sahf
xchg
sbb
js
xchg
xor
test
xor
hlt
das
pusha
enter
bsr
adc
cmc
jmp
cmpsl
ds
int
incb
mov
addr16
imul
xlat
xor
imulb
mov
sub
adc
sbb
sbb
call
ss
jne
jecxz
test
je
test
cmpb
pop
mov
mov
jns
sub
inc
pop
dec
mov
shrl
mov
pop
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
push
push
mov
mov
stos
mov
stos
test
rclb
int
ljmp
lret
fstl
out
cmp
dec
dec
rcrb
jno
mulb
push
ret
insb
mov
xor
xchg
dec
int
and
inc
pop
and
lea
pop
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
adc
adc
and
insl
out
pop
rorl
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
hlt
inc
or
dec
push
pop
xor
rolb
add
inc
rorb
xor
and
cmp
gs
lods
sbbl
jae
or
xchg
in
dec
or
repnz
jle
adc
cmp
adc
popa
push
sub
lods
xchg
sub
adc
inc
in
xlat
mov
testl
rorl
arpl
jge
les
in
mov
xor
ret
icebp
shlb
xchg
ret
push
push
pop
mov
push
and
mov
sbb
into
mov
fcmovnu
bnd
mov
loopne
jl
scas
adc
adc
pop
int
or
pop
pop
je
sbb
pop
push
inc
out
sub
xchg
inc
add
test
enter
dec
ficoml
insl
mov
shl
scas
pop
or
cltd
psubusw
rcrl
test
aad
imul
popf
mov
sbbl
int3
loop
lods
imul
mov
into
add
push
sub
sbb
test
lcall
daa
lahf
iret
push
hlt
mov
sarb
shll
dec
xor
jnp
xor
mov
xlat
adc
and
call
imul
lods
push
test
mov
fcmovne
fcmovb
mov
mov
dec
mov
lret
repz
cmp
and
and
fstpt
loopne
sbb
out
js
inc
ds
jl
xchg
movsl
adc
pop
dec
decb
std
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
pop
roll
enter
pop
test
mov
xorb
aaa
push
addr16
rorb
aaa
mov
dec
sahf
inc
adc
inc
cmp
jle
mov
push
sahf
sub
adc
fbld
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
cli
or
mov
aam
inc
sub
inc
fs
push
cmp
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
in
andb
mov
cmpsb
dec
sub
scas
shll
sub
es
test
pop
and
xchg
and
mov
cmp
das
es
inc
xor
and
leave
xchg
hlt
ja
std
outsl
addr16
call
push
loopne
mov
and
jmp
mov
repz
push
mov
or
xchg
aam
fcoms
inc
pop
loop
int
adcb
pop
push
dec
xchg
adc
or
subl
ds
ret
pop
pop
xor
sbb
test
lcall
daa
and
iret
mov
sbb
mov
push
ja
inc
in
scas
jge
lahf
jge
mov
notl
sub
lea
pop
cltd
jge
dec
inc
sub
int3
xor
loop
cwtl
cltd
adc
xchg
addb
pop
dec
aad
pop
cltd
enter
dec
jb
addr16
and
mov
jb
sahf
pop
mov
sub
repz
mov
xchg
test
and
clc
icebp
jle
scas
leave
test
cltd
scas
push
pushf
add
popl
mov
ds
je
out
dec
mov
call
popa
sahf
mov
xchg
push
mov
cmpsb
jno
test
xchg
and
rorb
add
inc
mov
out
mov
int
dec
add
inc
jbe
dec
je
mov
jb
test
and
ret
es
repnz
enter
jle
insl
and
rol
pop
inc
add
imul
xchg
cld
jg
cmpsl
xlat
cmc
push
ret
cmp
mov
insl
aad
insl
ficomps
fildl
pop
and
dec
jp
mov
dec
pop
adc
loop
lds
sbb
loop
pop
imul
fists
jl
or
or
pop
push
stos
inc
pop
dec
mov
add
enter
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
fwait
sub
cmp
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
xor
cmp
mov
int3
pop
insl
loopne
jecxz
mov
aaa
pop
loope
cmpsb
outsb
imul
imul
inc
test
cs
sbb
push
or
inc
into
jo
icebp
test
popa
jecxz
loopne
cmp
outsb
fs
add
inc
mov
add
dec
mov
insb
in
inc
into
push
mov
insl
in
inc
and
sbb
dec
mov
xchg
sbb
jmp
inc
out
and
rclb
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
mov
inc
xchg
fildl
aad
cmp
stos
xor
xor
mov
mov
pop
mov
and
lret
add
xchg
cmpsl
or
mov
ficomps
xchg
out
test
jge
sahf
jp
popa
lret
mov
pop
push
leave
jne
sbb
out
mov
push
loope
cs
mov
outsb
out
lahf
stc
cmpsl
leave
jns
fcoms
add
mov
mov
sbb
mov
in
or
mov
ja
cmp
push
arpl
call
int
push
pop
jmp
popa
shrl
push
cmp
or
push
les
xlat
mov
adc
dec
int3
dec
jp
sbb
fcomi
test
cmp
mov
xchg
repz
cmp
icebp
add
push
cmp
sbb
popf
js
test
sub
jp
add
cmp
lds
cwtl
lcall
jle
das
pop
icebp
or
cmp
fs
loop
out
in
xor
jnp
mov
nop
ljmp
xchg
movsl
dec
hlt
ja
std
outsl
addr16
push
mov
sub
mov
bound
lahf
js
fstl
cld
lods
jnp
outsb
repz
dec
and
adc
mov
pushf
sbb
sbb
jbe
and
mov
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
fdivs
iret
ret
clc
sti
mov
stc
clc
jp
add
add
mov
sbb
jl
orb
xor
mov
pushf
dec
and
inc
xor
lcall
rclb
jg
mov
scas
mov
cmc
push
in
inc
push
sbbl
xchg
dec
and
rcl
sub
xchg
push
xchg
pop
mov
shl
and
stc
add
sbb
inc
pop
pusha
push
out
adc
or
cmp
mov
add
jmp
jl
cmp
lea
lahf
xor
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
sbb
mov
xchg
int3
cmpsb
sub
sbb
pop
popf
sar
stos
test
imul
je
pop
gs
mov
push
aaa
ljmp
xor
ljmp
sub
int3
mov
adc
push
jmp
dec
mov
insb
sub
push
repz
sbb
push
cmp
je
and
repz
push
scas
sti
sbb
sub
sbb
jmp
inc
out
sub
rclb
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
repnz
pop
stos
or
push
cli
cmp
stos
xor
xor
mov
mov
fnstcw
and
lret
add
mov
out
push
out
loope
xchg
movsl
out
or
out
xlat
xor
sub
mov
iret
rorl
movsl
ds
mov
push
lock
mov
pop
mov
gs
ret
xchg
cwtl
mov
xchg
mov
ffree
push
pop
push
xchg
sti
mov
fildl
ret
sti
mov
aam
lock
je
popf
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
scas
cmp
adc
fwait
push
push
movsb
ret
xor
dec
inc
jae
les
arpl
in
es
test
pop
mov
testl
and
fs
push
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
and
cmp
adc
push
repnz
fwait
push
dec
mov
pushf
xchg
sub
xor
xchg
xchg
inc
add
test
cwtl
inc
and
adc
mov
mov
sbb
lcall
test
bound
add
push
pop
fcmovu
mov
or
imul
jnp
sahf
add
add
pop
mov
loop
add
push
cmc
or
jl
sbb
push
jbe
adc
mov
aas
cli
add
out
sbb
loop
adc
jnp
adc
cmp
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
cmp
insb
aas
xchg
and
mov
fsubrs
stos
push
adc
mov
out
cmp
out
mov
out
loopne
ret
out
mov
outsl
mov
repnz
xchg
andl
cmpsb
jnp
or
int
imul
push
in
mov
add
test
bound
jns
ss
mov
cmp
in
push
dec
daa
cmp
jp
add
add
mov
sbb
fwait
orb
xor
mov
arpl
mov
jg
cmp
push
int
inc
mov
adcl
cmp
push
cmpsb
ja
xor
xor
mov
mov
popa
jle
push
addb
sub
mov
aam
je
sub
es
insl
jb
sahf
fsubl
jbe
lods
adc
enter
popf
sbb
xchg
arpl
jmp
mov
mul
in
mov
les
jg
xchg
push
mov
xchg
test
mov
inc
ljmp
mov
enter
enter
gs
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
cltd
sub
push
mov
insl
cmc
imul
test
movsl
je
push
les
mov
mov
mov
leave
aaa
jnp
popf
fnsave
cmpsb
loop
mov
add
test
sbb
out
lcall
mov
lcall
sub
dec
fsubrl
mov
out
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
cmp
sub
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
xor
mov
jno
shrb
shll
or
inc
sysexit
xchg
call
jmp
jecxz
dec
ja
push
pop
jnp
rclb
inc
cmpsl
jmp
sahf
sub
xchg
rorl
fbld
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
cli
or
mov
aam
inc
sub
rcr
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
pop
or
lds
stos
xchg
stos
cmp
mov
cwtl
lods
inc
sbb
mov
lds
loop
out
mov
addl
sub
or
xor
out
xor
into
lock
sub
push
mov
stc
push
sub
cmp
adc
xor
and
int3
mov
fstps
cmp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
jmp
js
subl
adc
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
jmp
aad
adcl
adc
sbb
xor
sub
dec
pop
imul
jmp
loop
fsubrl
push
dec
push
mov
in
mov
sbb
loop
fistl
cld
pop
sub
or
sub
jno
or
dec
dec
pop
jb
xor
or
jnp
mov
mov
repz
lret
std
cli
jnp
inc
mov
add
adc
mov
pop
repnz
inc
fmuls
sti
adc
test
pop
xchg
mov
jbe
iret
sti
enter
mov
jae
jo
incb
jl
outsb
addl
sub
and
aad
imul
popf
mov
sbbl
int3
loop
lods
imul
mov
into
add
push
sub
sbb
test
lcall
inc
mov
shll
adc
test
push
cli
add
movsl
imul
lods
add
mov
lret
sbb
sbb
lods
add
in
mov
mov
sub
mov
sti
mov
dec
stos
inc
in
push
adc
xor
aas
mov
pop
cmc
or
fcompl
mov
cmp
das
dec
roll
scas
dec
repz
out
cmp
mov
cli
scas
mov
cld
loopne
roll
imul
sbb
mov
cmp
enter
out
hlt
or
sbbb
hlt
test
cmc
clc
jnp
cmp
clc
js
test
or
aas
test
fildl
repz
mov
push
rcll
and
dec
aad
das
xchg
leave
add
adc
add
xchg
mov
sub
mov
jbe
push
test
push
inc
lods
inc
loope
pop
xor
sbb
cmp
shr
fwait
cmp
dec
movb
ljmp
mov
mov
push
in
xor
shlb
sub
and
and
fisttps
sub
fcoms
xor
orl
inc
clc
mov
cmp
inc
pop
inc
xchg
iret
mov
cmpsl
add
incl
sub
xor
les
cltd
pop
xor
push
jmp
fnstsw
xchg
ds
mov
add
jne
bound
mov
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
movsl
pop
mov
and
or
inc
ret
add
fidivl
sbb
mov
jbe
orl
jmp
lods
fistpl
aas
cmpsl
insl
aad
in
das
mov
movsl
fistl
lea
lret
mov
adc
inc
aas
adc
dec
inc
sub
int3
adc
cs
stos
push
repnz
xchg
xchg
and
fcoml
xchg
into
push
mov
rcll
and
pop
xchg
jg
mov
lret
push
idivl
sub
pop
sub
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
bound
cmp
push
lds
jg
movswl
jmp
std
mov
sti
and
test
jl
sbb
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
and
add
loope
jl
and
daa
and
mov
push
dec
cmpsl
sbb
mov
sbb
loop
and
lahf
xchg
rorb
sahf
mov
ja
lds
fsts
iret
movsb
ret
xor
xor
jbe
lods
push
xchg
mov
bound
dec
mov
push
mov
les
add
leave
dec
and
cmpsb
fcoml
mov
fidivrl
cmpl
repnz
jg
mov
mov
in
sbb
add
or
decb
std
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
sarl
out
push
test
xchg
add
or
mov
sub
sbb
or
sbb
mov
and
test
pop
arpl
int3
push
xor
push
cmp
roll
imul
fst
es
repnz
and
adc
cwtl
pop
stos
push
test
rcll
push
jno
pop
cmp
mov
xor
mov
fsub
jbe
dec
test
sbb
xor
imul
jge
jmp
adc
pop
or
add
addl
cmp
fcmovnu
adc
xchg
jnp
xor
sbb
xor
imul
adc
in
cmp
mov
and
adc
ds
pop
jae
inc
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
and
sbbl
mov
bound
or
push
pop
push
test
mov
pusha
push
sub
push
xor
xor
mov
or
outsl
aam
sub
push
inc
arpl
mov
sbb
test
sub
jne
movsl
in
fbld
addl
pop
test
rcr
xchg
mov
les
cld
xor
and
fisubl
pop
push
ja
nop
test
add
cmp
lds
cmp
pop
pusha
jle
das
pop
icebp
or
cmp
fwait
leave
loop
add
sub
addl
mull
lret
stc
fildll
fisttpl
dec
and
push
std
int
and
cmp
jno
movsb
insb
lahf
inc
push
dec
inc
fnstenv
imul
mov
icebp
enter
push
leave
daa
in
hlt
xor
and
mov
or
gs
inc
push
push
cwtl
cmpb
xor
les
cmp
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
or
cmp
or
mov
into
push
fcmovu
test
xor
and
test
push
stos
leave
pop
imul
adc
mov
lods
push
outsl
sbb
scas
movsb
mov
xchg
xchg
and
pop
adc
pop
cltd
enter
lods
mov
pop
arpl
out
in
jae
inc
stos
int
and
push
stc
and
in
or
ret
jp
mov
stc
xor
or
cmp
jmp
sub
jnp
testb
fucomi
hlt
std
mov
sti
and
test
pop
jge
shrb
cmp
mov
mov
out
mov
mov
mov
das
orb
aam
clc
mov
std
cmp
pop
mov
es
leave
cmpsl
inc
icebp
xchg
jle
xchg
push
xor
lds
and
jb
mov
mov
sbb
xchg
std
pusha
and
fmull
sahf
jg
pusha
jbe
lods
push
outsl
xchg
bound
xor
xchg
inc
scas
push
xchg
inc
mov
mov
sti
mov
xor
sub
es
inc
mov
mov
cmpsb
in
mov
insl
fisttps
push
push
imul
ljmp
adc
add
out
push
out
adc
test
inc
mov
ror
jmp
jno
lds
jnp
incb
scas
sbb
in
jp
cmpsb
adc
or
and
sub
repnz
jmp
iret
loope
inc
jne
mov
jmp
cmp
dec
and
xchg
push
cltd
dec
call
jge
pusha
add
in
and
xor
repz
adc
and
jns
pushf
rcrb
cmp
sbb
fisttpl
ficomps
cmc
mov
xchg
sub
adc
inc
in
xlat
mov
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
cmpsb
scas
push
and
sub
lods
dec
fisubrl
jo
fisttps
xchg
xchg
dec
xchg
stc
pop
mov
or
pop
pop
cmpsl
icebp
imul
cs
xchg
mov
fists
xor
sub
ja
popf
lods
push
push
loope
sti
jb
xor
or
shrb
sbbl
sub
dec
es
test
insl
inc
xor
bound
mov
subb
xor
dec
arpl
insl
mov
pusha
mov
add
loop
inc
sbb
daa
add
test
push
leave
cmpsl
inc
icebp
xchg
add
and
lds
lds
and
jb
mov
out
inc
test
std
pusha
and
fsubr
cmpsl
bound
sub
shrl
mov
push
out
insl
lret
inc
sub
xchg
call
rol
pop
adc
dec
rorb
fucom
inc
and
inc
clc
mov
cltd
call
fcoml
jg
test
jl
jge
mov
stos
rol
int
pop
and
cli
pop
test
mov
fiadds
and
int3
cmp
mov
fidivrs
jnp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
repz
int
js
subl
adc
js
test
or
aas
test
fildl
repz
mov
push
sarl
mov
mov
cmpb
cwtl
pop
push
inc
dec
negl
fldcw
lcall
adc
repnz
sahf
scas
imul
negb
add
fldt
jge
data16
notb
nop
mov
or
fisubrl
pop
aam
jne
insl
jb
sahf
enter
inc
mov
movsb
popf
call
and
test
jge
inc
addr16
hlt
lea
in
or
jns
mov
mov
leave
or
push
jge
mov
stos
jg
jns
dec
xor
imul
sbb
subl
pop
fdivrs
jnp
int3
jno
cltd
push
adc
mov
je
sbb
mov
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
jecxz
shll
inc
cmp
cwtl
pop
push
jno
fst
outsl
mov
imul
fstl
adc
repnz
sahf
scas
imul
negb
add
fldt
jge
ss
popa
jbe
mov
int
test
inc
sbb
adc
push
xor
fwait
xchg
dec
jns
enter
pop
push
ficoml
in
mov
mov
xchg
xchg
daa
sub
cld
mov
scas
pxor
ret
sti
mov
subb
pop
das
dec
iret
shl
idivl
outsl
outsl
and
lahf
stos
cwtl
shrb
sti
jnp
out
scas
mov
pop
scas
insb
lock
stc
inc
iret
outsb
iret
arpl
out
sbbl
mov
or
sbb
imul
inc
das
pop
clc
sbb
jp
out
outsb
jp
add
cltd
rcrl
movsb
arpl
sbb
neg
out
push
xor
push
push
and
leave
arpl
mov
sahf
add
icebp
test
xor
push
pop
insl
sub
les
test
aaa
pop
push
lods
jae
lret
inc
fidivrs
lret
std
lods
mov
lcall
adcl
cmp
cli
xchg
add
fstpl
sub
movsb
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
pop
mov
and
lret
add
adc
popl
xor
mov
sub
push
jno
dec
cli
inc
test
sarl
dec
daa
ja
out
scas
pop
cmp
testl
aaa
fnstenv
pushf
sbb
and
pop
pop
inc
inc
das
jle
nop
inc
fs
les
mov
fcmovu
movsl
mov
je
imul
bound
jmp
mov
push
icebp
cmpsl
test
mov
or
cmp
inc
dec
hlt
xor
int
imul
movsb
jbe
mov
aad
mov
mov
pop
push
ljmp
lods
jae
lret
push
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
ret
xchg
fisttpl
add
jp
add
cmp
jle
jbe
lods
inc
in
sti
std
cltd
lahf
fisttps
jle
mov
dec
ss
cmc
ficoml
mov
dec
lods
cmp
fmuls
sbb
lods
inc
pop
je
xor
sub
jbe
fnsave
jp
outsl
sub
adc
ja
lods
fnclex
outsb
out
jbe
dec
pop
stos
loope
or
xor
push
cmpsl
int
push
aas
subl
and
idiv
inc
pushf
divl
rol
sarl
add
adc
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
jg
aad
pushf
ret
pop
mov
hlt
mov
arpl
mov
xchg
fsts
clc
stos
jg
jne
mov
jo
jb
pop
lea
dec
push
sahf
jge
call
dec
dec
fsub
in
sbb
sub
fcomps
je
loop
dec
xorb
jb
lods
mov
cmpl
in
jo
sub
adc
pop
rcll
movsl
sbb
das
push
roll
inc
push
add
cs
xchg
mov
fucomp
mov
out
jae
pushf
mov
jnp
mov
and
jmp
mov
arpl
mov
int3
pop
test
dec
ret
ret
out
dec
sarl
push
ret
push
rcl
idivl
popa
out
jno
sti
mov
sub
inc
push
lds
rclb
inc
mov
lret
movsl
xor
push
jge
push
jmp
ss
push
imul
inc
xchg
data16
jno
dec
ficomps
push
test
ss
loope
fiadds
mov
adc
cmp
aad
pop
movsl
lret
dec
in
fwait
shll
adc
adc
xchg
jnp
mov
or
mov
in
mov
mov
mov
sbb
cmp
mov
inc
daa
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
test
xor
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
es
inc
mov
idivl
inc
lret
insb
inc
inc
lahf
sub
iret
or
push
jl
outsb
scas
sbb
sbb
enter
test
or
imul
hlt
movsb
dec
ljmp
stos
imul
add
and
loope
jne
mov
pusha
out
mov
xchg
sahf
mov
mov
pop
xchg
sub
and
jge
add
andb
mov
fistl
push
shrb
sub
loopne
in
imul
addr16
dec
roll
notl
cmp
inc
addb
das
push
xor
or
jnp
out
push
data16
sbb
shlb
lret
sub
inc
xchg
pop
xor
loop
mov
cmp
inc
aaa
jae
int3
adc
add
lret
ret
fimuls
sub
imulb
fnstsw
sub
movsl
lea
add
pop
shrl
or
xlat
int
add
in
and
lahf
inc
insb
loope
roll
sub
pushf
ret
pop
mov
mov
sbb
cmp
nop
push
lcall
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
inc
dec
push
add
shl
je
insl
lods
xchg
shl
dec
jmp
lahf
and
sub
jmp
fiaddl
or
pop
and
jbe
out
jno
mov
loop
xchg
out
sar
pop
pop
pusha
sub
rorl
mov
jecxz
inc
mov
jo
rorl
xor
imul
adc
iret
subl
pop
fdivrs
jnp
int3
jno
cltd
push
adc
mov
je
sbb
add
xchg
cmp
or
aas
test
fildl
repz
mov
push
sarl
mov
rclb
cmpb
cwtl
pop
push
jno
fst
outsl
mov
outsl
cmc
insl
push
imul
push
fistl
xor
mov
jnp
loopne
fucomp
jae
mov
loopne
ss
mov
iret
pop
cltd
adc
test
adc
loope
mov
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
and
cmp
cwtl
add
cmp
sub
xchg
xchg
pop
inc
mov
scas
out
mov
push
jno
dec
cli
inc
test
mov
mov
mov
xchg
aas
movsl
dec
fistl
ficomps
xchg
fistpl
cmp
jle
push
dec
xchg
xor
sbb
and
andl
and
xchg
push
jns
dec
call
jge
pusha
add
in
and
xor
repz
adc
and
jns
pushf
rcrb
cmp
sbb
or
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
testl
sahf
std
and
dec
cmpsl
xchg
int
sar
lret
sarl
mov
sub
sub
addr16
inc
rolb
jb
lods
mov
mov
popf
mov
xchg
xlat
pop
xchg
sub
jge
push
lahf
outsb
ret
cmp
enter
sar
jg
out
das
dec
lock
mov
pop
push
sbb
idivl
outsl
outsl
call
out
dec
loopne
std
inc
into
out
popl
sahf
pop
lahf
jnp
lea
not
fisttpll
or
mov
pop
mov
sbb
call
movsb
lea
push
pop
pop
push
test
movsb
repz
and
lds
add
mov
cmp
jp
add
add
mov
sbb
jl
orb
xor
mov
arpl
mov
jg
lret
push
repz
push
aam
arpl
pop
cmp
je
sti
adc
loop
rorl
xchg
inc
cmpsl
repnz
stos
daa
cmpsb
into
mov
jne
bound
sub
es
inc
push
js
mov
in
movsl
js
and
loop
stos
aam
jl
nop
xchg
incl
or
jo
in
repz
pop
mov
xor
rol
sbb
xchg
xchg
mov
jbe
int3
std
mov
int3
jnp
popf
cmc
hlt
std
mov
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
mov
test
arpl
orb
imul
jecxz
sti
jle
lret
cmpsl
pop
push
add
stos
add
outsl
hlt
jmp
decb
push
insb
jne
inc
into
pop
mov
insl
cmc
imul
test
push
stos
test
imul
movsl
mov
ja
lds
imull
sahf
jnp
popa
jbe
lods
push
outsl
sbb
ja
in
es
shlb
jns
mov
push
popa
dec
leave
test
adc
jle
les
jecxz
pushf
sub
cmp
call
pop
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
sti
mov
clc
or
cmp
inc
jmpw
mov
lret
in
mov
mov
or
pop
fsubl
xor
cli
mov
jge
xchg
add
or
add
sub
xchg
gs
imul
xor
push
adc
add
push
sbb
and
popf
ret
out
push
sbb
jge
popf
adc
mov
popf
cmp
cmpsl
mov
mov
jb
addr16
jo
push
mov
pop
movsb
xchg
test
cmp
mov
cmc
js
hlt
fcmovnu
stos
shll
xchg
daa
push
push
sbb
lret
inc
rcrl
mov
ds
mov
leave
xchg
inc
mov
push
test
or
stos
xor
xor
mov
mov
mov
mov
pop
jb
add
mov
outsb
rcll
cmc
or
xlat
lock
sub
popa
in
dec
push
cmpb
cs
icebp
in
jns
cs
jl
pushf
pop
pusha
test
ret
rcrb
or
dec
adc
inc
bound
test
shrb
hlt
push
test
mov
pusha
push
pop
add
pop
das
pusha
test
stos
sub
hlt
push
inc
or
mov
pop
and
mov
adc
pop
jnp
mov
pop
in
nop
and
les
sbb
sub
mov
pusha
in
movsl
dec
push
test
xor
test
ret
push
rorb
push
fisttpl
mov
adcl
jbe
sub
sub
add
enter
rcrb
add
imul
lea
jle
xchg
pop
or
or
stos
mov
or
or
ret
jg
lret
jle
aam
outsl
addr16
call
xchg
out
cmpsl
mov
jg
inc
inc
jle
subl
icebp
or
fnsave
sbb
fidivl
aas
ret
jne
push
pop
add
mov
rcrb
pop
jno
rorl
pop
addr16
sub
mov
sbb
loopne
iret
jl
in
test
pop
rcrl
mov
or
and
xchg
sub
lods
xchg
sub
adc
call
clc
mov
sahf
xchg
mov
mov
inc
addb
lods
mov
test
roll
push
outsl
test
loop
xor
add
aam
adc
ja
test
je
arpl
pop
test
pop
aam
xor
and
inc
outsb
sub
push
sub
mov
loop
add
sarl
cli
repz
fnsave
bound
sbb
mov
jmp
aad
jmp
out
jno
lods
pop
jae
adc
sub
movsb
insb
lahf
sti
mov
inc
out
sub
mov
xrelease
mov
dec
sbb
lea
js
or
cmp
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
add
xchg
loop
sub
ficomps
pop
push
stos
test
hlt
or
push
int
fwait
jae
imul
ror
inc
lret
push
mov
mov
or
sbb
jg
shlb
je
ret
bound
movsl
mov
cltd
pop
and
add
add
arpl
sbb
btc
and
out
xchg
out
push
idivl
sub
pop
sub
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
bound
cmp
push
lds
jg
movswl
jmp
std
mov
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
and
iret
mov
roll
inc
add
int3
mov
push
outsl
hlt
jmp
decb
push
insb
jne
inc
xor
test
mov
mov
dec
mull
cltd
fbstp
repnz
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
shrb
pushf
clc
dec
movsl
xchg
mov
fcompl
aad
xor
xor
mov
mov
clc
mov
and
lret
add
dec
sbb
add
or
push
mov
adc
ja
imul
int3
jbe
xchg
aaa
loope
ret
fld1
je
cmp
inc
iret
add
mov
enter
cmp
repnz
jnp
or
int
imul
push
in
mov
add
test
bound
jns
ss
cmp
iret
cmp
in
push
dec
daa
cmp
jp
add
add
mov
sbb
jl
orb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
inc
test
scas
push
push
pop
loopne
sub
inc
ret
jnp
popa
jbe
inc
stos
xchg
mov
rorl
jg
shlb
jns
inc
dec
xchg
aam
jne
insl
pop
fwait
enter
lods
xchg
inc
pop
pusha
cmp
imul
ljmp
sbb
jp
push
sarb
cmp
mov
inc
sarb
js
fildl
je
or
les
xchg
and
fldl
inc
mov
movd
mov
or
lahf
cltd
pop
adc
mov
cmp
test
loope
and
arpl
es
inc
mov
idivl
inc
lret
insb
inc
inc
lahf
sub
les
xor
xlat
push
and
mov
cmpsl
cmp
sub
bound
add
movsb
jl
cwtl
lret
movsl
ret
sbb
sub
repz
push
push
dec
jb
pop
imul
and
inc
ds
movsb
ret
enter
outsb
shll
mov
fwait
and
in
js
or
ret
push
mov
or
or
mov
dec
mov
push
mov
cmc
repz
sbb
xchg
and
sarb
pop
mov
insb
out
nop
cmpsl
cmp
enter
jecxz
xchg
jg
or
ja
xchg
out
sbb
ss
mov
jbe
jae
test
add
and
mov
mov
les
jb
sub
repz
js
sbb
add
outsb
push
cmpsl
int
jle
push
insl
xchg
aam
sahf
xchg
rcll
dec
adc
out
dec
mov
pop
out
xchg
mov
mov
aaa
test
mov
xchg
aad
xchg
sub
pushf
ret
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
cmp
inc
cmpl
jae
movsb
pop
imul
dec
mov
inc
jecxz
sub
out
insl
mov
test
mov
mov
push
mov
or
and
ljmp
movsb
lret
aas
mov
adc
aaa
jecxz
scas
add
jns
les
jmp
inc
mov
nop
ljmp
dec
rcrb
mov
fists
cmpsb
cltd
aad
imul
test
lcall
lahf
sti
fwait
pop
mov
jne
loope
sub
lds
mov
lret
dec
sbb
lea
xor
lea
cmp
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
xchg
std
pop
int3
push
mov
ja
mov
pop
add
out
pop
fstl
wbinvd
imul
push
adc
call
daa
sub
ljmp
movsb
pop
loopne
mov
movsb
shll
lock
jbe
lods
push
xchg
mov
repnz
sub
lret
jnp
jbe
mov
insl
outsb
pop
cltd
enter
fldt
jae
in
scas
aas
test
sub
cmpxchg
dec
lret
and
cld
mov
dec
mov
lret
sbb
xor
add
xchg
pop
mov
fists
les
repnz
repnz
scas
cmp
jae
fidivrs
pop
sub
adc
jl
pop
adc
shll
pusha
scas
fdiv
ss
cmp
leave
int
fcmovb
mov
mov
adc
and
test
lods
lock
sub
js
jae
inc
xlat
ficompl
pop
cmpsb
cli
and
rolb
jo
cmovg
cmp
pop
dec
lret
popf
ds
push
sub
enter
repz
ss
int
and
xchg
cmp
je
sti
adc
inc
ret
pop
test
dec
es
stos
xchg
test
insb
or
shlb
sub
loope
add
dec
xor
xor
dec
mov
sarl
sbb
shlb
inc
addr16
inc
fxch
jb
add
sarl
cli
repz
test
shrl
push
dec
mov
xor
push
les
mov
ret
adc
gs
icebp
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
mov
or
addr16
adc
add
xchg
sub
popf
out
mov
cmp
mov
lods
movsl
pop
mov
and
or
inc
ret
lds
es
inc
dec
lahf
inc
mov
push
sub
cwtl
mov
mov
push
stc
sub
jge
mov
lock
lods
lahf
push
push
ljmp
sbb
mov
rcr
mov
fildll
push
fwait
mov
rclb
test
xchg
stos
push
repnz
pop
xchg
mov
cmpsb
dec
sub
scas
push
and
sub
fs
mov
jb
loopne
pop
jmp
xchg
inc
xlat
pop
mov
inc
out
push
idivl
sub
pop
sub
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
stos
mov
mov
push
cmp
push
lds
jg
movswl
jmp
std
mov
sti
and
test
cmp
sbb
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
dec
movsb
popf
subl
push
cmp
or
outsl
aam
dec
sbb
sub
push
mov
insl
aad
mov
outsb
xor
scas
popa
xchg
rcl
movsl
push
push
inc
mov
sub
mov
fnsave
shll
lock
cmpsl
xchg
test
mov
xchg
xor
fcmove
adc
roll
push
ljmp
rclb
insl
add
mov
xchg
testb
in
add
iret
or
arpl
cwtl
fdivs
fistl
roll
imul
fistl
adc
test
mov
push
gs
pop
xchg
jg
ljmp
pop
fdiv
addl
and
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
cltd
sub
push
mov
insl
cmc
imul
test
movsl
je
push
les
mov
mov
mov
leave
aaa
jnp
popf
fnsave
cmpsb
loop
lret
add
mov
sbb
fs
jecxz
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
mov
mov
les
pushf
jne
jnp
inc
mov
cwtl
add
cmp
sub
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fisttpll
jno
jecxz
fsubrs
ror
push
lock
invd
xor
inc
dec
sbb
pop
push
mov
push
mov
mov
push
aad
jb
lahf
scas
hlt
push
cmc
cmp
cmc
movsl
popa
aaa
dec
push
jmp
loope
mov
adc
ljmp
and
jl
adc
and
mov
dec
sbb
mov
jb
fs
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
jp
jge
scas
xchg
iret
jmp
aam
jne
insl
jbe
lahf
enter
lods
xchg
cwtl
push
push
call
fldcw
pop
and
test
xor
bound
das
push
sub
xor
xchg
in
rorl
mov
std
add
cmp
or
sahf
inc
cwtl
dec
xor
cmp
repnz
scas
cmp
jae
fidivrs
pop
sub
jl
xor
hlt
icebp
adc
stos
les
aas
outsb
add
jle
nop
inc
fs
les
shrl
lds
cmp
jle
mov
inc
test
imul
and
clc
push
aam
cmpsb
add
stc
loop
mov
aas
pop
dec
inc
inc
push
decb
sbb
subb
aas
movsl
hlt
imul
test
mov
ljmp
lret
fstl
out
cmp
insl
xchg
aam
loop
pushf
inc
adc
xchg
mov
push
and
adc
push
mov
js
test
sub
es
rcrb
mov
fwait
ljmpw
pop
jb
add
inc
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
fisubl
pop
mov
enter
aas
sti
sti
and
sbb
lret
dec
sbb
cmp
cltd
sbb
and
je
jge
pop
jo
or
jmp
mov
jmp
clc
mov
push
cld
mov
stc
adc
inc
ret
shrb
push
ds
adc
inc
rcrb
out
jmp
inc
inc
mov
insl
test
dec
mov
jle
dec
inc
popf
lea
lret
inc
in
dec
sbb
jne
addr16
flds
sub
sahf
subb
inc
mov
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
dec
cmpsl
ficoms
hlt
ja
std
outsl
addr16
call
push
lds
xchg
dec
enter
ss
repnz
pop
shrl
loop
je
mov
sbb
test
adcl
aad
add
sahf
pop
fcom
test
shll
out
and
pop
jae
jns
jp
push
pop
add
rcr
xor
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
incl
sbb
mov
dec
ljmp
and
adc
lcall
lock
inc
sub
stos
aam
pop
mov
push
repnz
shl
je
fmulp
xchg
cmpsb
dec
mov
and
mov
lods
mov
mov
jb
loopne
sbb
pop
sub
mov
dec
aam
pop
mov
out
or
js
inc
int3
fiaddl
enter
cmp
mov
xchg
inc
mov
jnp
out
mov
out
loopne
js
testl
lcall
sub
leave
data16
daa
ss
stos
jae
nop
and
push
or
mov
adc
movb
pop
pop
sbb
sub
dec
into
ret
add
lods
cmc
neg
mov
mov
ja
aaa
mov
cmc
std
or
icebp
nop
jle
sbb
das
dec
test
dec
cwtl
cmc
sub
mov
stos
xchg
pop
dec
jg
add
mov
lahf
xchg
push
xor
push
inc
leave
fs
icebp
cmp
sub
add
or
movsb
sub
mov
clc
dec
add
mov
rcrb
jnp
mov
mov
ficoms
mov
sub
or
sbb
mov
fwait
push
dec
mov
mov
or
xchg
cmc
mov
mov
dec
dec
pop
push
jne
dec
jp
movsl
rcr
out
pop
enter
jo
mov
dec
xchg
bound
fs
inc
lcall
cli
mov
and
popf
sub
push
popa
push
test
sahf
cmp
loopne
cld
mov
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
ffree
cmp
sarb
cmp
lret
jns
lds
nop
lds
mov
testl
loope
lret
movb
sub
xor
imul
xchg
push
pop
push
jnp
sub
aam
fimull
dec
jne
fwait
and
sub
fsubrl
and
lods
cmc
movzbl
stos
aam
cmpsl
loope
popl
mov
nop
faddp
lcall
enterw
cmp
mov
prefetch
int3
es
jnp
inc
in
pop
popf
xor
jmp
std
mov
sti
and
sbb
lret
dec
sbb
lea
cmp
ret
mov
test
jl
or
int
rcrl
pop
xor
add
or
mov
scas
loope
leave
ss
roll
js
mov
jmp
lret
mov
inc
dec
mov
sbb
addr16
test
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
aad
and
mov
pop
rcl
mov
cmpsb
xor
jb
fisttpll
cmp
lds
pop
pusha
jle
das
pop
icebp
or
cmp
fwait
leave
loop
add
sub
addl
mull
lret
cmc
les
push
and
and
dec
and
fldl
cmpsl
in
decl
inc
push
popf
stos
stos
sbb
push
pop
xchg
out
clc
int3
es
daa
int3
std
je
pop
push
pop
jp
dec
mov
xchg
jmp
and
push
mov
cmp
and
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
push
stos
and
dec
pop
push
mov
and
je
push
clc
lods
pop
imul
scas
mov
ljmp
stos
dec
push
bound
mov
hlt
cwtl
rolb
sbb
jg
out
sub
sub
shl
sub
mov
sbb
sub
add
inc
cld
ja
adc
fadd
push
bound
cmpsl
xchg
scas
mov
and
or
xlat
or
inc
cmc
add
or
psraw
test
and
cmp
mov
loope
pop
pop
pop
sahf
cmpsb
jnp
fcom
mov
cmp
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
imul
push
cmpsb
outsb
and
cmpsb
shlb
push
stos
lea
movsl
push
mov
xlat
sub
mov
xlat
xchg
movsb
rol
mov
pop
lods
push
xchg
mov
xchg
stos
push
popf
addl
mov
cmpsb
dec
sub
scas
push
and
mov
pop
pop
mov
in
mov
mov
lret
adc
pop
jg
shlb
aam
jl
lret
sti
add
inc
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
fisubl
pop
mov
enter
aas
sti
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
into
cmpsl
stos
shll
inc
xchg
in
mov
sub
roll
inc
mov
mov
in
jbe
orl
cmp
adc
fsubrl
push
mov
mov
outsb
mov
in
and
push
mov
hlt
and
ror
mov
loope
loop
fwait
aad
lahf
jmp
mov
and
cmp
imul
enter
insl
dec
xor
pop
push
inc
push
mov
xchg
gs
orl
adc
scas
hlt
mov
adc
mov
cmp
or
add
jmp
out
xchg
adc
cmpsl
js
xorl
fwait
jmp
cmp
aad
cmp
inc
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
sbb
mov
xchg
int3
scas
sub
sbb
pop
popf
sar
stos
test
imul
mov
mov
addr16
test
add
inc
pusha
or
xor
mov
aaa
ljmp
push
mov
test
xlat
inc
aad
push
sbb
rorl
mov
in
push
push
push
cmp
xor
data16
jecxz
js
lahf
mov
mov
jno
dec
add
add
adcl
test
push
daa
sub
lcall
std
cmp
push
jbe
sub
stos
aad
xor
xor
mov
mov
mov
and
lret
add
adc
popl
pop
pop
hlt
jbe
mov
xlat
jbe
nop
pop
mov
adc
scas
mov
add
xchg
cs
repz
jns
outsb
out
sti
cwtl
inc
test
sbb
xor
push
mov
sbb
and
or
test
std
aaa
sub
jne
les
cmpl
sbb
imul
sbb
or
jg
aad
pushf
ret
pop
mov
mov
sbb
cmp
nop
push
lcall
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
inc
dec
push
add
shl
je
sub
daa
je
loop
pop
cltd
enter
adc
sbb
cmp
ficoms
xchg
mov
insb
out
pop
mov
sub
xor
sbb
add
add
lcall
inc
mov
dec
xchg
aam
xchg
ja
xor
cltd
iret
fidivl
pop
push
sub
inc
fmull
mov
std
fwait
mov
mov
xor
add
test
sbb
fsubrs
test
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
aam
xor
mov
mov
xchg
mov
fcoml
pop
dec
inc
and
and
dec
and
adc
inc
cmp
gs
and
into
cmc
pop
fsubl
cli
sub
adc
int
insl
dec
xchg
aam
jne
insl
pop
fwait
enter
add
push
dec
pop
mov
cltd
dec
push
push
lret
lock
cmpsb
ret
sbb
sbb
inc
inc
loope
stc
loope
js
test
jmp
inc
loope
jnp
in
stos
xchg
stos
lds
insb
ficoml
push
cltd
xchg
push
mov
pushf
cmpsl
lock
xchg
je
stc
lcall
mov
pop
add
dec
xchg
mov
stc
and
sbb
cmp
pop
mov
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
add
pop
test
push
stos
lea
stos
int
push
fistl
sub
mov
fildll
pop
xor
dec
inc
mov
in
push
outsl
and
pop
inc
add
in
pop
sub
sub
push
mov
mov
xchg
push
es
cmp
pop
mov
sub
ud1
in
ljmp
inc
mov
dec
ljmp
mov
out
cs
xchg
scas
cmp
js
lock
dec
xor
jno
imul
addr16
fstps
ljmp
pop
into
mov
cmp
shrb
add
ficoml
popa
dec
sbb
in
dec
popa
pop
orl
int
jg
les
jns
pop
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
push
xchg
movsb
data16
inc
xorb
int
pop
pop
inc
push
push
sub
pop
dec
ret
ret
adc
into
mov
lds
xchg
sbb
cmp
dec
or
sub
sub
ja
insl
jb
sahf
cmpsb
and
arpl
cmp
lods
fmull
outsb
adc
lret
rorl
les
js
xor
xchg
popf
addl
xchg
lods
sarl
cmc
pop
adc
popa
test
fdivrs
cli
jno
movsb
insb
lahf
inc
push
dec
inc
fnstenv
imul
mov
icebp
enter
push
leave
daa
in
hlt
xor
and
gs
or
gs
inc
push
push
cwtl
cmpb
xor
les
pop
std
pop
loopne
mov
push
cmc
or
mov
xchg
std
pop
int3
push
mov
ja
mov
pop
add
out
pop
fstl
wbinvd
imul
push
adc
call
daa
sub
ljmp
movsb
pop
loopne
mov
movsb
shll
lock
jbe
lods
push
xchg
mov
repnz
sub
lret
jnp
jbe
mov
insl
outsb
pop
cltd
enter
fldt
jae
in
scas
aas
test
sub
cmpxchg
dec
lret
and
cld
mov
dec
mov
lret
sbb
xor
add
xchg
pop
mov
fists
les
repnz
repnz
scas
cmp
jae
fidivrs
pop
sub
adc
jl
pop
adc
shll
pusha
scas
fdiv
ss
imul
leave
int
sub
xchg
inc
gs
imul
add
mov
js
sti
repz
seta
dec
dec
in
mov
mov
in
mov
imul
lock
mov
pop
mov
cwtl
in
outsb
xor
mov
in
imul
dec
and
fildll
lds
shl
mov
popf
lret
test
dec
es
stos
xchg
test
insb
or
shlb
sub
loope
add
dec
xor
xor
dec
mov
sarl
sbb
shlb
inc
addr16
inc
fxch
jb
add
sarl
cli
repz
test
shrl
push
dec
mov
xor
push
les
mov
ret
adc
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
cmpsb
add
loope
leave
adc
add
xchg
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
cltd
sub
push
mov
ret
dec
ficomps
pop
movsl
je
push
les
mov
mov
mov
leave
fs
iret
push
add
and
adcl
cltd
nop
std
pop
js
scas
mov
xchg
sub
add
dec
fidivs
lods
mov
fstpl
icebp
xchg
jp
fisttps
mov
mov
mov
mov
pop
jb
add
xchg
cmpsl
or
mov
ficomps
inc
mov
jp
inc
cwtl
les
sbb
stos
mov
in
cli
jnp
sbb
scas
sbb
fbstp
fldl
mov
mov
icebp
into
add
les
xor
fs
inc
add
andb
imul
shlb
fnsave
mov
adc
arpl
call
int
push
fucomp
and
test
popa
shrl
push
cmp
or
mov
stos
sbb
ret
pmuludq
hlt
cwtl
addr16
fwait
push
jns
lret
sbb
mov
cmp
out
pop
clc
sub
mov
ret
dec
sub
daa
sbb
adc
add
sbb
mov
adcl
jbe
sub
sub
jnp
cmp
jmp
test
mov
popf
jno
insb
negb
mov
push
jmp
add
mov
mov
cmp
outsl
addr16
lcall
fistpll
inc
test
daa
dec
leave
movsl
jno
pop
fistl
in
jle
fcomip
aad
mov
pop
out
adc
mov
sbb
call
movsb
lea
push
pop
pop
push
test
movsb
repz
and
lds
add
mov
cmp
jp
add
cltd
sub
adc
cmpsb
sbbb
lret
lcall
stos
mov
rcll
pushf
pop
pop
mov
fwait
jecxz
test
std
sahf
pop
xchg
iret
loope
pop
ret
adc
and
pop
mov
mov
push
aam
jne
insl
dec
pop
xchg
enter
adc
cmpsl
insb
mov
lods
jbe
mov
fistl
push
fs
mov
cmp
clc
in
ds
mov
inc
xor
fdivs
add
push
test
xchg
adc
data16
mov
cltd
push
stos
icebp
mov
sbb
xchg
jne
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
push
inc
push
cmpl
or
push
push
leave
pop
jecxz
in
push
cmp
sbb
daa
adc
rcrb
push
sti
cmpl
mov
mov
insl
ficomps
push
shrb
stc
movsb
aam
push
loopne
mov
mov
jns
popf
popf
xor
cmpsb
loop
or
add
test
sbb
out
lcall
mov
lcall
sub
dec
fdivl
jns
lds
out
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
cmp
sub
xchg
xchg
pop
inc
mov
jno
pop
icebp
fs
lcall
dec
fsts
pop
pop
mov
arpl
jle
scas
pusha
mov
sub
adc
push
loop
je
push
sbb
test
adcl
aad
add
sahf
pop
fcom
test
shll
out
and
pop
jae
jns
jp
cmp
adc
mov
mov
cmp
jp
add
cltd
sub
adc
lods
cmpsb
sbbb
mov
adc
int3
inc
mov
and
mov
mov
push
mov
and
jbe
lods
adc
push
mov
mov
lods
push
and
sub
dec
stos
inc
in
test
lea
mov
in
mov
jo
sub
repz
insb
loop
ja
inc
fcoml
jg
clc
inc
and
add
or
and
add
add
and
mov
xchg
mov
mov
fidivrl
sti
in
popa
insl
in
push
mov
aaa
dec
aam
mov
test
js
sbb
mov
mov
cmp
mov
lods
in
pop
shlb
xchg
scas
iret
fucomip
rolb
mov
inc
test
xlat
lcall
adc
jmp
decb
adc
and
mov
pop
inc
jmp
ficomps
adc
ret
int
mov
push
lea
push
lret
jno
mov
pop
imul
pop
out
push
fsubl
ja
push
add
imul
mov
inc
out
jb
es
ss
setge
mov
mov
xor
jmp
in
std
subl
add
jmp
out
xchg
adc
cmpsl
js
inc
xor
xor
mov
movsl
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
mov
out
out
aaa
lahf
cmpsl
or
sub
dec
aaa
mov
movd
decb
in
int
imul
lcall
pusha
pop
push
pop
mov
inc
inc
dec
lahf
sub
rorb
test
scas
loope
xor
cmpsb
sbb
ljmp
sbbl
mov
cli
mov
aad
lret
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
dec
xor
jae
mov
bound
test
pop
jg
inc
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
inc
call
xchg
mov
xor
xchg
push
mov
cmpsb
jno
test
xchg
and
rorb
add
inc
mov
out
mov
int
dec
add
inc
jbe
dec
je
mov
jb
test
and
ret
es
repnz
enter
jle
insl
and
rol
pop
inc
add
imul
mov
cld
jg
cmpsl
xlat
in
ret
sub
repz
sbb
push
cmp
je
test
lods
lods
pop
mov
and
inc
jne
movsb
pop
bnd
lret
cmpsl
sub
int3
sub
sub
insb
orl
fsubrl
arpl
enter
dec
and
pop
mov
ret
inc
fdivr
push
mov
test
xor
in
cmc
and
adc
jmp
and
cmp
cmp
push
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
pop
roll
enter
pop
test
mov
xorb
aaa
push
addr16
rorb
aaa
mov
dec
sahf
inc
adc
inc
cmp
jle
mov
popf
movsl
dec
sbb
jmp
popa
mov
mov
and
push
dec
xchg
mov
dec
mull
stc
cmpl
ss
cli
mov
adc
push
imul
enter
mov
outsb
movb
insl
int3
imul
mov
repz
inc
cmp
int
pop
movsb
sub
in
fwait
xchg
jge
pop
movsb
mov
mov
pop
aad
xor
push
mov
cmp
inc
fidivl
push
mov
dec
fistps
jno
jnp
inc
mov
add
adc
lcall
mov
mov
jbe
adc
pop
pop
push
test
cmpl
popf
xor
lret
mov
cmc
mov
nop
mov
add
and
sub
cwtl
test
test
lds
int3
xchg
es
addl
pop
sbb
mov
and
adc
or
push
sub
push
xor
push
cmp
push
inc
jecxz
or
push
or
orb
icebp
dec
inc
add
mov
jecxz
sbb
dec
dec
and
and
mov
insb
movsl
sub
cmpl
fs
movsl
cmp
and
into
in
cltd
push
cmpsb
aam
sbb
outsl
adcb
mov
push
jae
xor
ljmp
cmpb
or
sbb
js
adc
jno
js,pt
test
push
mov
gs
adc
pop
stos
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
sarl
out
mov
andl
sub
push
inc
inc
loope
pop
pop
out
xchg
jnp
test
loopne
int3
inc
pop
insb
adc
add
iret
ret
xlat
or
cmp
mov
and
mov
sti
xor
cmc
shlb
add
mov
cmp
sbb
fs
mov
test
repnz
cmc
sbb
std
fistpll
sti
mov
mov
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
cmp
imul
or
pop
mov
hlt
and
outsl
ljmp
cmp
enter
mov
inc
scas
outsb
or
mov
mov
xchg
sub
mov
cmc
cmp
cmp
pop
inc
push
sbb
or
ret
jo
xor
popf
and
inc
cmp
jo
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
test
mov
je
jo
and
dec
mov
xchg
or
orl
test
pop
lea
lret
cmp
jmp
leave
sub
xchg
aam
bound
pop
add
sti
arpl
pop
outsb
push
roll
push
push
xor
mov
or
sbb
lods
jge
fs
into
aam
jge
pop
xor
mov
mov
fistpll
and
lret
add
mov
out
push
scas
shll
xor
sub
add
lea
addr16
mov
fstl
mov
out
lods
mov
mov
and
loope
dec
pop
jle
nop
add
dec
adc
add
xchg
adc
leave
xor
mov
lods
dec
adcl
hlt
test
sahf
sbb
jecxz
popf
mov
pop
adc
lock
add
pop
mov
lods
xchg
sub
adc
inc
in
xlat
mov
testl
loope
lret
movb
push
sub
xor
add
aam
adc
fs
dec
movsb
mov
xchg
dec
and
sub
pop
xchg
push
adc
and
mov
push
xchg
insb
les
stc
mov
jne
bound
enter
ret
cld
jae
cld
sbb
add
outsb
push
call
out
jecxz
mov
out
imul
pushl
xor
sub
inc
faddl
dec
mov
std
fwait
mov
mov
xor
add
test
sbb
fsubrs
test
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
push
cmpb
sub
sahf
imul
jns
loope
sub
add
push
adc
jp
pop
xchg
addb
mov
insl
outsb
pop
cltd
enter
sub
xchg
push
shrb
xor
xchg
sub
pop
mov
adc
repz
xchg
mull
cmc
push
sbb
int
fsubs
pop
xchg
outsb
mov
ret
inc
jge
imul
stos
cmp
fwait
dec
je
insl
add
test
add
sbb
add
andb
js
sbb
mov
mov
mov
ljmp
adc
mul
loopne
ret
loopne
pmullw
dec
dec
inc
lahf
lret
jecxz
mov
mov
jae
aaa
add
sbb
cmp
cs
mov
jo
lret
test
scas
je
leave
dec
addr16
out
lahf
push
xor
bound
dec
jbe
jmp
mov
in
movsb
mov
jecxz
xor
xchg
dec
repz
and
inc
pop
lret
sub
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
out
sub
sbb
mov
fwait
push
dec
mov
and
adc
ds
pop
jae
inc
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
and
sbbl
mov
bound
or
push
pop
push
test
mov
pusha
push
sub
push
xor
xor
mov
or
outsl
aam
sub
push
inc
arpl
mov
sbb
test
sbb
inc
mov
rcrl
fwait
daa
jmp
xor
xchg
cmpsl
mov
andb
add
push
shrb
sbb
imul
add
cmp
lds
pop
lcall
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
dec
xor
or
test
mov
scas
xchg
out
cmpsl
mov
jge
jno
jmp
mov
repz
push
mov
or
daa
mov
mov
movsb
mov
xchg
jmp
xchg
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
movsl
add
add
mov
sbb
fwait
orb
xor
mov
cld
movsb
fsubrl
stos
shl
xlat
jl
push
xor
mov
and
adc
inc
cmp
xor
dec
inc
sub
sub
or
je
pop
inc
shl
je
lret
shl
jmp
ljmp
and
sub
es
test
pop
and
ja
and
arpl
das
push
imul
fiadds
inc
jl
jmp
out
cmp
sbb
pop
test
test
add
popa
stos
lods
icebp
sbb
icebp
jnp
sahf
sti
lahf
lods
call
adc
jp
gs
mov
cltd
sbb
movsb
mov
and
ljmp
mov
ficoms
sub
xchg
lods
lcall
popl
mov
cmp
jp
add
add
mov
sbb
jl
orb
xor
mov
cld
movsb
and
subb
dec
sbb
popf
dec
test
cmc
sti
sbb
jg
in
paddw
les
xchg
xchg
add
dec
enter
mov
push
mov
or
lods
outsb
mov
pop
loope
and
aad
shll
pop
shr
adc
iret
pop
test
xor
popf
xor
mov
inc
add
mov
fwait
push
dec
mov
mov
je
and
sahf
xchg
sarb
out
ret
xor
cmpsl
mov
jae
mov
int
jno
jecxz
fcoms
mov
addr16
jmp
shrl
insb
dec
sbb
lds
mov
pop
add
and
push
inc
push
pop
push
test
pop
sub
fucomip
repz
sahf
in
cmc
mov
push
rcrl
enter
pop
inc
ds
repz
cmpsl
stos
cwtl
and
sbbl
mov
jb
pop
push
bound
push
test
mov
adc
dec
or
bound
test
jle
sbb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
inc
call
pop
mov
test
aas
and
mov
shll
loopne
hlt
mov
xchg
mov
add
orl
sub
shlb
dec
sbbb
xor
push
repnz
and
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
imul
pop
push
jns
loope
sub
add
push
push
cmpsb
xor
add
aam
adc
test
insl
outsb
pop
cltd
imul
insb
sub
mov
pop
and
push
pop
mov
mov
cmc
mov
jle
jno
sub
mov
les
stc
dec
cmp
adc
or
cmp
mov
ret
arpl
or
and
aas
lahf
es
jns
hlt
jl
out
jg
fdivs
mov
imul
sbb
xor
int
jg
pop
rcll
hlt
sbb
inc
pop
mov
pusha
mov
pushf
fwait
lods
repnz
in
sbb
lahf
sbbb
mov
and
push
leave
sbb
add
stos
cli
sub
mov
jg
inc
fnstsw
jle
jge
jnp
sahf
das
xchg
stc
cli
in
test
or
fs
add
pushf
mov
test
and
outsl
or
cmp
lods
pop
cmpsl
adc
ljmp
push
or
fistps
xchg
mov
les
sarl
cli
repz
rorb
sub
jl
xchg
jge
mov
add
mov
lahf
int3
adc
mov
add
pop
std
xchg
sbb
in
pop
adc
mov
cmp
test
and
sub
push
dec
mov
mulb
mov
xchg
ds
mov
pusha
or
aad
sbb
clc
loop
sbb
sti
lret
cld
shlb
sbb
or
mov
mov
jb
mov
mov
fildll
aad
test
mov
pop
cmp
flds
adc
jno
arpl
lds
sub
jl
sbb
fdivs
adcb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
sbb
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
stos
loop
xchg
dec
jnp
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
pop
popf
scas
inc
movsl
fcompl
xchg
jnp
addl
add
push
aas
insb
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
sbb
mov
sbb
push
and
xchg
jp
dec
inc
test
sub
cmp
sbb
adc
fld1
std
jge
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
test
jae
sub
xchg
mov
mov
lahf
jle
dec
xor
jb
js
cmp
inc
sub
lea
adc
add
mov
fucomip
mov
cmc
mov
and
jne
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
dec
mov
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
jle
cmpsb
inc
cmpsl
fstp
sbb
mov
mov
test
enter
sbb
sbb
inc
pusha
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
hlt
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xor
fucomip
jl
sub
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
mov
mov
sbb
enter
dec
pop
inc
in
repz
sbb
and
lahf
lret
jecxz
gs
pop
enter
int
and
inc
lds
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
xor
mov
idiv
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
bswap
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
add
pop
aas
mov
test
cmp
or
sbb
push
cwtl
sub
das
stos
pushf
dec
and
xchg
inc
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
aad
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
inc
addr16
aaa
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
fbld
lcall
sub
push
cmp
mov
shr
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
pop
fildll
leave
mov
mov
bound
dec
js
xchg
dec
inc
shlb
or
imul
nop
xor
mov
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
iret
lods
mov
mov
xchg
test
dec
mov
call
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
sbb
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
shll
mov
jb
sahf
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
add
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
out
bnd
int3
xor
and
sub
inc
sbb
mov
add
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jg
jo
jb
dec
pop
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
ficompl
pop
xor
stos
dec
or
test
add
push
aas
mov
mov
ret
stos
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
mov
insl
popl
rcrb
mov
and
xchg
jp
dec
lock
sub
cmp
sbb
xchg
ret
fld1
std
jge
sub
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
rcll
sub
xchg
mov
xor
lahf
jle
dec
stos
call
cmp
cltd
enter
mov
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
icebp
pop
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
ja
or
int
imul
push
sub
ja
mov
out
repz
pusha
or
xchg
mov
mov
sbb
mov
cltd
pop
push
lock
shll
or
mov
dec
and
mov
push
xor
mov
lods
ficoml
test
shrb
jne
lahf
pop
les
cwtl
aas
dec
add
push
jl
or
inc
imul
sub
xchg
hlt
icebp
mov
push
jge
add
jae
rcrl
pop
jo
jge
mov
pop
mov
lods
scas
inc
fsubrl
fsubs
add
test
mull
xchg
aas
inc
mov
stc
mov
movsl
inc
push
mov
or
mov
lock
sti
sbb
cmpsl
mov
fwait
lea
mov
inc
adc
sub
sbb
or
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
push
cmpsb
inc
cmpsl
fstp
test
mov
mov
test
enter
sbb
adc
inc
sub
in
sub
xchg
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
aaa
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
add
fucomip
jl
and
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
idivl
mov
repz
ret
loopne
dec
pop
inc
out
jmp
clc
sbb
and
lret
jecxz
gs
mov
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
push
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
jno
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
ret
dec
mov
mov
xor
cmp
add
or
xor
pushf
dec
and
xchg
xor
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
sbb
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
ror
ljmp
popf
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
outsb
movsl
mov
mov
stos
mov
ja
popf
test
test
inc
mov
push
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
add
cmp
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
add
mov
mov
cmp
xchg
mov
dec
cmp
pushf
cmpsl
jnp
lret
adc
push
mov
xchg
loop
leave
add
sbb
mov
or
ficoms
sbb
gs
pop
pop
pop
or
jns
xor
dec
out
mov
jmp
in
cmp
xor
jae
mov
cltd
je
cltd
nop
lock
aad
pushf
ret
pop
fidivs
inc
mulb
lcall
sub
test
test
inc
mov
add
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
loop
scas
mov
imull
mov
mov
bound
dec
jg
xchg
dec
inc
shlb
or
imul
nop
xor
mov
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
mull
stos
repz
mov
lret
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
stos
mov
stos
xchg
push
adc
push
dec
fildll
xor
sbb
cmpsl
fucomi
jge
rcll
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
shll
mov
jb
sahf
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xor
stos
inc
movsb
pop
sbb
jno
pop
push
cmp
ret
outsb
pop
dec
inc
jmp
xor
and
sub
inc
sbb
mov
or
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
adc
jo
jb
dec
jmp
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
pop
inc
xchg
mov
adc
out
add
jbe
dec
shrb
sbb
aas
sub
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
ljmp
sahf
sbb
or
fld1
std
jge
add
lock
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
xchg
xchg
mov
sub
xchg
lahf
jle
dec
loopne
jb
js
cmp
cltd
enter
scas
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repnz
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
mov
repz
lea
mov
inc
adc
sub
jb
or
int
imul
push
sub
jae
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
sbb
fcmovnbe
out
mov
enter
sbb
pusha
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
out
mov
mov
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
fucomip
jl
subl
shll
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
push
call
cmp
ret
loopne
dec
pop
inc
mov
in
and
lahf
lret
jecxz
gs
enter
int
sub
inc
dec
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
mov
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
xchg
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
les
pop
xor
mov
mov
ret
mov
add
dec
push
cwtl
sub
das
adc
lods
lret
fsubr
test
xchg
leave
pusha
fsubrl
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jp
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
sub
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
sub
lcall
sub
shrl
inc
mov
jno
jae
cmp
sub
scas
mov
pop
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
add
cmp
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
add
mov
mov
cmp
xchg
mov
dec
cmp
pushf
cmpsl
jnp
lret
adc
push
mov
xchg
loop
leave
add
sbb
mov
or
ficoms
sbb
gs
pop
pop
pop
or
jns
xor
dec
out
mov
jmp
in
cmp
xor
jae
mov
cltd
je
cltd
nop
lock
aad
pushf
ret
pop
fidivs
inc
xor
lcall
sub
shrl
inc
mov
stc
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
pandn
fs
mov
bound
dec
imull
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
stos
lods
mov
mov
xchg
test
dec
mov
jmp
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
push
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
cltd
push
dec
test
dec
aam
fcoms
and
xchg
jbe
pop
jae
inc
insl
icebp
out
xchg
repz
or
add
mov
repz
repz
sub
sbb
sub
out
jne
cmp
fmull
negl
inc
fwait
clc
lock
stos
mov
movsl
stc
stos
into
sbb
xlat
mov
fidivl
dec
ret
fcmovne
and
and
mov
lock
jbe
mov
ss
xor
iret
mov
sbb
int3
cmp
add
dec
call
mov
jae
sbb
dec
or
bound
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
les
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
shll
mov
jb
sahf
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adcb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
addr16
xor
loop
and
sub
inc
sbb
mov
lea
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
or
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
xor
pop
xacquire
or
addl
add
push
aas
sub
mov
ret
pushf
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
mov
mov
mov
and
xchg
jp
dec
fs
sub
cmp
inc
out
mov
ret
fld1
std
jge
repz
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
pop
jne
jge
push
dec
test
sbb
mov
pop
cmp
call
ret
loopne
inc
adcb
in
xchg
jae
ret
xor
hlt
mov
inc
test
mov
mov
xchg
or
ret
inc
sub
add
mov
xor
mov
ss
sbb
mov
mov
cmpsl
cmp
pop
xor
rcll
push
pop
jne
mov
sbb
pop
sub
mov
lds
pop
sbbb
jcxz
sahf
sahf
xchg
cmp
js
jp
mov
mov
gs
pop
aaa
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
popf
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
outsl
xchg
mov
sub
mov
and
call
cmp
inc
pop
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
hlt
pop
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
out
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
sub
or
int
imul
push
sub
icebp
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
int
cmpsb
inc
cmpsl
fstp
jno
mov
mov
test
enter
sbb
adc
inc
xchg
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
jg
repz
ret
loopne
dec
pop
inc
mov
in
and
lahf
fs
int
add
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
lods
mov
in
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
dec
mov
pop
ljmp
ret
mov
mov
add
nop
push
cwtl
sub
das
add
dec
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
stos
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
popf
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
inc
movsl
mov
mov
stos
mov
ja
aaa
test
test
inc
mov
push
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
xor
scas
mov
imull
mov
mov
bound
dec
push
sub
push
sbb
addb
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
ficoml
xchg
test
dec
mov
sbb
dec
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
cmp
xor
sbb
out
fucomi
jge
shll
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
shll
mov
jb
sahf
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adcb
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
shr
js
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jo
jb
dec
adc
adc
pusha
sarb
sub
push
mov
rclb
mov
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
scas
inc
movsl
fcompl
xchg
or
addl
add
push
aas
push
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
sbb
mov
sbb
xchg
and
xchg
jp
dec
je
push
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jp
mov
sub
sahf
inc
and
call
cmp
inc
and
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lcall
mov
aaa
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
dec
push
or
int
imul
push
sub
repz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
outsb
lea
cmp
mov
mov
test
enter
sbb
mov
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
inc
sbb
fwait
push
jo
cmp
add
rcrl
jo
iret
cmpsl
mov
adc
push
hlt
sub
push
and
testl
push
in
dec
scas
fistl
or
mov
rcrl
fcoms
mull
pop
push
test
push
popa
xchg
les
jb
sub
pop
pushf
pop
addr16
std
mov
fs
cmp
fistl
push
sti
fstps
pusha
das
popa
or
inc
mov
inc
inc
sbb
mov
mov
xchg
adc
cmc
mov
push
mov
cli
ss
lds
mov
or
orl
mov
enter
sbb
mov
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
inc
sbb
fwait
push
jo
cmp
add
rcrl
jo
iret
cmpsl
mov
adc
push
hlt
sub
push
and
testl
push
in
dec
scas
fistl
or
mov
rcrl
fcoms
mull
pop
push
test
push
popa
xchg
les
jb
sub
pop
pushf
pop
addr16
std
mov
fs
cmp
fistl
push
sti
fstps
pusha
das
popa
or
inc
mov
inc
inc
sbb
mov
mov
xchg
adc
cmc
mov
push
mov
cli
ss
lds
mov
or
repnz
movntq
out
enter
sbb
dec
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xchg
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
orl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
outsb
call
cmp
pop
inc
movsl
jmp
clc
sbb
and
lahf
cltd
enter
int
call
mov
cmpsl
mov
loop
ret
movsl
mov
mov
and
push
dec
cmp
fwait
mov
insb
push
clc
sub
shl
inc
mov
imull
cmp
pop
icebp
add
jl
jae
mov
adc
iret
xlat
cwtl
pop
add
pop
push
jmp
adc
or
mov
cmp
cmpl
and
mov
pusha
add
cmc
xor
jle
outsl
cltd
sub
sbb
rol
xchg
mov
sbb
aam
stc
repnz
cmp
xchg
popf
aad
aas
mov
test
call
imul
jmp
and
es
fcoms
add
sbb
fdivl
in
mov
and
jne
jge
repz
ret
loopne
dec
pop
inc
dec
jmp
clc
sbb
and
gs
movsl
enter
int
divl
inc
dec
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
cmc
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
ror
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
jno
mov
lods
mov
nop
mov
mov
add
pop
push
cwtl
sub
das
in
dec
and
xchg
or
pop
stos
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
inc
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
rorl
fwait
lods
mov
jbe
xor
in
pusha
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
or
cwtl
movsl
jp
mov
pop
scas
fsubr
pop
fisubs
movb
mov
sti
enter
xchg
or
xor
mov
sbb
push
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
shlb
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
and
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
popf
sbb
sub
and
xchg
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
subb
or
xchg
adc
dec
mov
int3
lods
test
xorl
jns
sub
push
gs
fwait
pop
call
pop
ret
ljmp
test
and
and
je
and
xor
je
mov
out
mov
ficomps
fdivl
add
enter
mov
in
out
and
sbb
sbb
add
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
movsl
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
lahf
movsl
mov
mov
stos
mov
ja
call
push
cmp
inc
mov
stos
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
xor
scas
mov
imull
mov
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
test
out
cmpsl
xchg
test
dec
mov
or
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
loopne
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
shll
mov
jb
sahf
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
or
stos
inc
movsb
pop
sbb
jno
pop
push
cmp
ret
outsb
pop
dec
pusha
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
xchg
loop
xchg
dec
add
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
test
fcompl
xchg
or
pop
add
jbe
dec
stc
push
aas
insb
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
mov
aam
xchg
sbb
stos
and
xchg
jp
dec
gs
sub
cmp
sbb
fcmovnb
fld1
std
jge
mov
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
adc
mov
sub
roll
lahf
jle
dec
cmpsl
call
cmp
cltd
enter
lahf
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jb
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
repz
or
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
fstp
mov
mov
mov
test
enter
sbb
xchg
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jb
mov
pop
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
fucomip
jl
andl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
outsb
call
cmp
pop
inc
or
repz
sbb
and
lret
jecxz
gs
pop
enter
int
pop
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
and
push
dec
cmp
fwait
mov
insb
push
clc
sub
shl
inc
mov
imull
cmp
pop
icebp
add
jl
jae
mov
adc
iret
xlat
cwtl
pop
add
pop
push
jmp
adc
or
mov
cmp
cmpl
and
mov
pusha
add
cmc
xor
jle
outsl
cltd
sub
sbb
rol
xchg
mov
sbb
aam
stc
repnz
cmp
xchg
popf
aad
aas
mov
test
call
imul
jmp
and
es
fcoms
add
sbb
fdivl
sbb
sbb
idivl
xchg
repz
ret
loopne
dec
pop
inc
jmp
clc
sbb
and
lret
jecxz
gs
insl
enter
int
add
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
cmp
mov
test
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
or
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
pop
mov
pop
mov
mov
mov
mov
add
es
cwtl
sub
das
jg
dec
and
xchg
xor
pop
stos
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jl
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
in
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
pop
movsl
mov
mov
stos
mov
ja
out
test
test
inc
mov
iret
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
push
fildll
outsl
mov
mov
bound
dec
cltd
sub
cwtl
sbb
addb
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
sub
shlb
stos
pop
dec
mov
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
fsubrs
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
shll
mov
jb
sahf
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
inc
movsb
pop
sbb
jno
iret
push
cmp
ret
outsb
pop
dec
inc
jmp
xor
leave
loop
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
jo
jb
dec
insb
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
scas
popf
scas
inc
movsl
fcompl
xchg
jl
addl
add
push
aas
add
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
sbb
mov
sbb
movsl
and
xchg
jp
dec
fwait
test
sub
cmp
sbb
mov
fld1
std
jge
mov
call
int3
pusha
ds
iret
jecxz
mov
sub
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
seta
mov
push
rolb
jle
dec
mov
jb
js
cmp
enter
jp
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jno
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
xchg
or
int
imul
push
sub
jle
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lea
xchg
out
mov
enter
sbb
lds
inc
sbb
in
xchg
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
add
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
sbbl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
cmp
mov
mov
repz
ret
loopne
dec
pop
inc
pop
jmp
clc
sbb
and
lahf
lret
jecxz
gs
adc
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
and
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
stc
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
inc
inc
pop
dec
ds
sbb
jmp
rclb
arpl
jo
test
sbb
xorb
cmp
arpl
cmpsl
add
pop
xor
xlat
fistpl
push
pop
cmpsl
push
jg
mov
enter
add
xchg
dec
rcrl
adc
xchg
mov
inc
mov
dec
mov
loop
inc
les
rcr
movsl
cmp
push
fdivrs
cli
jae
loopne
xor
lahf
cltd
xlat
pop
mov
aam
int3
add
mov
add
and
hlt
cwtl
mov
imul
cmpb
xor
pop
xor
mov
jp
mov
pop
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
pop
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
mov
cli
mov
ret
mov
mov
add
outsb
push
cwtl
sub
das
xor
ret
lret
fsubr
test
xchg
leave
pusha
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
xchg
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
cmp
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
rorl
fwait
lods
mov
jbe
xor
in
pusha
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
or
cwtl
movsl
jp
mov
pop
scas
fsubr
pop
fisubs
movb
mov
sti
enter
xchg
or
xor
mov
sbb
push
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
xor
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
cmpsl
movsl
mov
mov
stos
mov
ja
jge
shrl
inc
mov
mov
cld
sub
scas
repz
sbb
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
scas
mov
imull
mov
mov
bound
dec
imull
xchg
dec
inc
shlb
or
imul
nop
ds
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
hlt
lods
mov
mov
xchg
test
dec
mov
lret
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
adc
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
shll
mov
jb
sahf
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
andb
sbb
jno
adc
adc
ret
outsb
pop
dec
fucomp
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
dec
loop
xchg
dec
pop
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
cs
pop
into
call
ficoml
xor
dec
xchg
test
push
or
inc
cmpb
jecxz
xchg
ret
push
xchg
sti
mov
stos
shr
or
lea
pop
movsl
imul
mov
fmuls
movl
nop
jp
mov
jbe
adc
leave
mov
sbb
xchg
ret
rcrb
cltd
mov
fisubrl
lret
jne
std
xor
fnstenv
mov
push
cmp
hlt
and
push
jns
or
test
mov
or
xor
lock
test
add
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jl
jo
jb
dec
sub
or
cmp
sub
push
mov
rclb
mov
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
das
popf
scas
inc
movsl
fcompl
xchg
push
or
scas
add
jbe
dec
jns
xor
push
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
jg
push
sub
cmp
sbb
out
ret
fld1
std
jge
xor
lock
int3
pusha
ds
iret
jecxz
mov
sub
pop
jne
jge
push
dec
test
sbb
mov
pop
cmp
call
ret
loopne
inc
adcb
in
xchg
jae
ret
xor
hlt
mov
inc
test
mov
mov
xchg
or
ret
inc
sub
add
mov
xor
mov
ss
sbb
mov
mov
cmpsl
cmp
pop
xor
rcll
push
pop
jne
mov
sbb
pop
sub
mov
lds
pop
sbbb
jcxz
sahf
sahf
xchg
cmp
js
jp
mov
mov
gs
pop
aaa
cwtl
rolb
andl
mov
mov
and
xchg
jp
dec
test
cmp
sbb
add
fld1
std
jge
push
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
pop
jne
jge
push
dec
test
sbb
mov
pop
cmp
call
ret
loopne
inc
adcb
in
xchg
jae
ret
xor
hlt
mov
inc
test
mov
mov
xchg
or
ret
inc
sub
add
mov
xor
mov
ss
sbb
mov
mov
cmpsl
cmp
pop
xor
rcll
push
pop
jne
mov
sbb
pop
sub
mov
lds
pop
sbbb
jcxz
sahf
sahf
xchg
cmp
js
jp
mov
mov
gs
pop
aaa
cwtl
sarb
mov
int
xchg
sbb
mov
adc
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
scas
xchg
mov
sub
mov
cmovge
call
cmp
enter
mov
lea
adc
add
mov
int
jle
fucomip
mov
cmc
mov
movsb
xor
xchg
cltd
lea
ss
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
imul
adcb
xor
fisubl
adc
scas
jb
cld
add
rorb
fisttps
inc
inc
ficompl
bound
je
mov
adc
and
test
cmp
pop
outsl
les
std
lock
fistpl
lcall
cmp
clc
movl
imul
js
fistl
xchg
push
cmp
pminub
sarb
mov
outsl
xchg
mov
sub
mov
and
call
cmp
inc
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jo
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
daa
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
loopne
or
int
imul
push
sub
idivb
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
out
cmpsb
inc
cmpsl
fstp
fucom
mov
mov
test
enter
sbb
fiaddl
inc
mov
in
out
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
in
inc
inc
cmp
push
lock
shll
or
mov
sub
pushf
dec
and
leave
pop
inc
add
repnz
jns
sbb
lahf
shlb
mov
ljmp
fnsetpm(287
leave
je
ret
cmp
pushf
test
fs
jne
dec
inc
pop
cltd
inc
adc
mov
mov
fcoml
jge
scas
stc
jmp
and
mov
mov
jl
int3
xor
icebp
mov
sub
sbb
adc
xor
mov
loopne
roll
mov
push
fidivrl
jp
pop
push
enter
xchg
pop
mov
xlat
or
les
out
mov
enter
sbb
nop
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
iret
loope
add
sti
mov
pusha
sbb
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
inc
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xor
fucomip
jl
adcl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
or
repz
ret
loopne
dec
pop
inc
jmp
clc
sbb
and
gs
mov
int
dec
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
cmc
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
sub
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
pop
popf
mov
pop
mov
mov
add
pushf
push
cwtl
sub
das
cmp
pop
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
pop
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
xor
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
aad
mov
mov
stos
mov
ja
aad
shrl
inc
mov
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
add
scas
mov
imull
mov
mov
bound
dec
int3
sub
fistps
or
cmp
inc
lcall
gs
lods
xor
es
sbb
int3
ficoms
loop
xchg
pop
jb
add
icebp
sbb
add
jae
or
cmp
or
les
xchg
test
push
sub
xchg
pop
pop
cmpsb
call
jnp
mov
rolb
push
adc
sbb
aam
cmp
clc
push
into
dec
mov
xor
pop
mov
mov
movsl
pop
in
aaa
call
popa
imul
xor
hlt
cmp
test
sahf
js
les
enter
enter
mov
add
test
imulb
negb
push
pushf
cmpb
adc
fnstenv
test
cli
adc
scas
mov
imull
mov
mov
bound
dec
jle
xchg
dec
inc
shlb
or
imul
nop
ss
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
and
ficompl
test
dec
mov
push
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
jnp
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
shll
mov
jb
sahf
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
sbb
jno
pushf
push
cmp
ret
outsb
pop
dec
sbb
int3
xor
and
sub
inc
sbb
mov
test
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jle
jo
jb
dec
xchg
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
lcall
fwait
xchg
or
addl
add
push
aas
inc
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
mov
push
popl
ja
mov
and
xchg
jp
dec
test
cmp
sbb
pop
ret
fld1
std
jge
pop
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
lcall
mov
push
add
lahf
jle
dec
inc
call
cmp
enter
ror
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jne
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
sbb
or
int
imul
push
sub
jge
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
das
lea
jno
mov
mov
test
enter
sbb
into
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
scas
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
fucomip
jl
xorl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
idivl
out
repz
ret
loopne
dec
pop
inc
mov
repz
sbb
and
lret
jecxz
gs
xor
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
xor
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
adc
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
adc
mov
jns
mov
or
sbb
mov
or
sbb
push
cwtl
sub
das
ljmp
pop
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
inc
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
ror
ljmp
popf
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
stc
movsl
mov
mov
stos
mov
ja
imull
cmp
inc
mov
fsubr
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
rcr
mov
imull
mov
mov
bound
dec
in
sub
mov
or
imul
nop
mov
lods
gs
lods
xor
es
sbb
int3
ficoms
loop
xchg
pop
jb
add
icebp
sbb
add
jae
or
cmp
or
les
xchg
test
push
sub
xchg
pop
pop
cmpsb
call
jnp
mov
rolb
push
adc
sbb
aam
cmp
clc
push
into
dec
mov
xor
pop
mov
mov
movsl
pop
in
aaa
call
popa
imul
xor
hlt
cmp
test
sahf
js
les
enter
enter
mov
add
test
imulb
negb
push
pushf
cmpb
adc
fnstenv
test
cli
sahf
fildll
dec
mov
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
es
sbb
int3
ficoms
loop
xchg
pop
jb
add
icebp
sbb
add
jae
or
cmp
or
les
xchg
test
push
sub
xchg
pop
pop
cmpsb
call
jnp
mov
rolb
push
adc
sbb
aam
cmp
clc
push
into
dec
mov
xor
pop
mov
mov
movsl
pop
in
aaa
call
popa
imul
xor
hlt
cmp
test
sahf
js
les
enter
enter
mov
add
test
imulb
negb
push
pushf
cmpb
adc
fnstenv
test
cli
jnp
scas
mov
imull
mov
mov
bound
dec
adc
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
es
sbb
int3
ficoms
loop
xchg
pop
jb
add
icebp
sbb
add
jae
or
cmp
or
les
xchg
test
push
sub
xchg
pop
pop
cmpsb
call
jnp
mov
rolb
push
adc
sbb
aam
cmp
clc
push
into
dec
mov
xor
pop
mov
mov
movsl
pop
in
aaa
call
popa
imul
xor
hlt
cmp
test
sahf
js
les
enter
enter
mov
add
test
imulb
negb
push
pushf
cmpb
adc
fnstenv
test
cli
inc
fildll
add
mov
bound
dec
popa
sub
xchg
sbb
addb
imul
nop
mov
lods
gs
lods
xor
es
sbb
int3
ficoms
loop
xchg
pop
jb
add
icebp
sbb
add
jae
or
cmp
or
les
xchg
test
push
sub
xchg
pop
pop
cmpsb
call
jnp
mov
rolb
push
adc
sbb
aam
cmp
clc
push
into
dec
mov
xor
pop
mov
mov
movsl
pop
in
aaa
call
popa
imul
xor
hlt
cmp
test
sahf
js
les
enter
enter
mov
add
test
imulb
negb
push
pushf
cmpb
adc
fnstenv
test
cli
js
scas
mov
imull
mov
mov
bound
dec
and
xchg
dec
inc
shlb
or
imul
nop
aas
fwait
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
add
ficoml
cmpsl
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
imul
jns
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
shll
mov
jb
sahf
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmp
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
shr
js
int3
xor
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jo
jb
dec
xchg
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
xor
pop
lods
xchg
push
or
push
add
jbe
dec
xor
sbb
aas
repnz
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
cmp
and
or
cmp
fucomi
mov
mov
dec
cmp
cs
aam
daa
mov
push
cmc
mov
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
cmp
cmp
cwtl
jbe
mov
jbe
push
xchg
add
mov
iret
add
mov
movsb
adc
adc
xchg
cmp
stc
mov
enter
bound
or
mov
sbb
imul
rcl
lcall
jb
mov
xor
inc
xor
fdecstp
js
add
pop
adc
jb
and
addl
add
push
aas
sbbb
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
sbb
mov
sbb
or
adc
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
pushf
xchg
mov
sub
mov
lahf
jle
dec
inc
call
cmp
cltd
enter
fcmove
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jae
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
jg
or
int
imul
push
sub
jge
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
outsb
lea
inc
out
mov
enter
sbb
or
inc
pop
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
push
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbb
fucomip
jl
adc
imul
bound
loop
ret
mov
mov
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
js
clc
sub
shl
inc
mov
ja
fs
mov
sbb
mov
jae
aam
iret
movsb
dec
mov
pop
adc
add
inc
stos
int
mov
test
jle
mov
sbb
cs
jnp
in
mov
je
mov
add
xlat
mov
loope
xchg
adc
es
adc
or
mov
inc
les
pop
enter
cmp
pop
xchg
ja
mov
ds
pop
mov
sti
mov
in
and
sbb
scas
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
addl
adc
imul
bound
loop
ret
mov
add
dec
inc
cmp
push
hlt
sub
push
and
ja
inc
in
mov
cmp
mov
and
sbb
xorl
pop
rcr
xor
rcrl
dec
pop
out
cltd
adc
test
mov
mov
xchg
int3
test
jns
dec
ret
jo
mov
mov
aad
jmp
fxch
mov
fisubs
fwait
or
sarb
clc
jb
mov
jb,pt
xor
adc
iret
in
sub
add
lcall
pop
fidivrs
jnp
sbb
sbb
xchg
xchg
sti
and
sbb
pop
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
cmp
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
jne
int
repz
ret
loopne
dec
pop
inc
test
in
and
lahf
lret
jecxz
gs
enter
int
and
inc
dec
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
add
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
inc
mov
pop
xchg
mov
movsb
mov
mov
add
mov
cwtl
sub
das
lahf
pushf
dec
and
xchg
jp
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jnp
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
dec
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
jmp
lcall
sub
test
inc
mov
in
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
aad
scas
mov
imull
mov
mov
bound
dec
lock
add
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
xchg
lods
mov
mov
xchg
test
dec
mov
flds
dec
mov
mov
dec
les
std
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
dec
test
xor
sbb
pop
fucomi
jge
roll
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
shll
mov
jb
sahf
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
orb
inc
movsb
pop
sbb
sub
mov
push
adc
ret
outsb
pop
dec
cld
jmp
xor
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
adc
jo
jb
dec
les
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
enter
movsl
fcompl
xchg
sub
addl
add
push
aas
sub
mov
ret
outsl
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rol
andl
mov
mov
and
xchg
jp
dec
lds
cmp
sbb
adc
jge
scas
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
xchg
xchg
mov
sub
cmpsb
inc
and
call
cmp
cltd
enter
fxch
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jo
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
jnp
or
int
imul
push
sub
jbe
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
pop
lea
out
mov
enter
sbb
mov
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
cmp
push
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
into
mov
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
idivl
inc
call
cmp
pop
inc
mov
repz
sbb
and
lahf
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
in
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
inc
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
xchg
mov
pop
sbb
mov
sbb
sbb
sub
or
sbb
push
cwtl
sub
das
dec
pushf
dec
and
xchg
adc
pop
stos
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
int
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
popf
sbb
sub
and
xchg
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
subb
or
xchg
adc
dec
mov
int3
lods
test
xorl
jns
sub
push
gs
fwait
pop
call
pop
ret
ljmp
test
and
and
je
and
xor
je
mov
out
mov
ficomps
fdivl
add
enter
mov
in
out
and
sbb
sbb
add
add
cltd
push
pop
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
adc
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
lds
lcall
sub
shrl
inc
mov
aad
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
imull
mov
mov
bound
dec
xchg
sub
or
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
sahf
lods
mov
mov
xchg
test
dec
mov
in
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
sbb
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
shll
mov
jb
sahf
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
sbb
mov
lods
mov
mov
push
adc
pop
dec
es
xor
fwait
leave
loop
and
sub
inc
sbb
mov
test
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
fsubp
jo
jb
dec
js
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
push
popf
scas
inc
movsl
fcompl
xchg
orl
sbbl
jbe
dec
fs
aas
lods
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
sbb
mov
sbb
lds
adc
test
sub
cmp
sbb
pop
ret
fld1
std
jge
fisubs
lock
int3
pusha
ds
iret
jecxz
mov
sub
pop
jne
jge
push
dec
test
sbb
mov
pop
cmp
call
ret
loopne
inc
adcb
in
xchg
jae
ret
xor
hlt
mov
inc
test
mov
mov
xchg
or
ret
inc
sub
add
mov
xor
mov
ss
sbb
mov
mov
cmpsl
cmp
pop
xor
rcll
push
pop
jne
mov
sbb
pop
sub
mov
lds
pop
sbbb
jcxz
sahf
sahf
xchg
cmp
js
jp
mov
mov
gs
pop
aaa
cwtl
shlb
sbb
mov
sbb
pop
and
xchg
jp
dec
push
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
sub
sub
sub
add
and
call
cmp
cltd
enter
mov
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jae
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
movsl
push
or
int
imul
push
sub
repz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
testb
add
mov
mov
test
enter
sbb
cmpsl
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
sub
push
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
fucomip
jl
xorl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
jae
mov
add
sbb
lock
loopne
dec
pop
inc
shr
repz
sbb
and
lahf
lret
jecxz
gs
xchg
enter
int
loope
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
cmpb
push
jb
mov
lds
cmp
xor
adc
stc
push
push
cmpsb
arpl
lock
enter
add
push
popl
sbb
fistpl
xchg
std
out
and
js
mov
je
fwait
rolb
shlb
lds
mov
jp
adc
add
jmp
mov
imul
in
mov
lret
das
shrb
sub
popf
adc
mov
mov
cwtl
mov
mov
xchg
sub
add
mov
dec
mov
mov
fld1
repz
ret
loopne
dec
pop
inc
fucomip
repz
sbb
and
lahf
lret
jecxz
gs
inc
enter
int
or
inc
enter
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
sub
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
sub
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmpb
lock
mov
rorl
mov
or
sbb
push
cwtl
sub
das
pop
pushf
dec
and
xchg
add
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
cmp
and
add
outsl
icebp
pop
scas
xchg
stos
mov
outsb
les
fcoml
mov
pop
icebp
mov
cmp
mov
aad
fstpt
xlat
pop
pinsrw
push
fcom
pushf
jae
sub
push
or
cmpl
mov
adc
or
cwtl
outsb
mov
movl
mov
push
mov
sarl
aas
out
and
adc
and
or
mov
lods
adc
imul
mov
push
xchg
mov
pop
adc
sbbl
jns
mov
mov
gs
mov
or
sbb
mov
or
sbb
push
cwtl
sub
das
and
mov
in
test
xchg
leave
pusha
fisubrs
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jo
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
pop
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
xor
lcall
sub
cmp
mov
mov
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
and
scas
mov
imull
mov
mov
bound
dec
pop
sub
xor
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
inc
lods
mov
mov
xchg
test
dec
mov
ret
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
mov
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
shll
mov
jb
sahf
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
xchg
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
test
jo
jb
dec
sub
or
cmp
sub
push
mov
rclb
movsl
ret
mov
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
add
scas
inc
movsl
fcompl
xchg
inc
or
out
add
jbe
dec
out
xor
push
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
andl
mov
mov
and
xchg
jp
dec
sbb
cmp
sbb
fs
fld1
std
jge
mov
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
inc
xchg
mov
sub
int3
inc
and
call
cmp
cltd
enter
addr16
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
std
pop
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
daa
popf
sti
mov
cmpsl
mov
fwait
lea
mov
inc
adc
sub
cmc
push
or
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
push
lea
outsb
out
mov
enter
sbb
fiadds
inc
xlat
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
inc
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
subl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
or
repz
ret
loopne
dec
pop
inc
jmp
clc
sbb
and
lret
jecxz
gs
leave
enter
int
enter
adc
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
cmp
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
pop
mov
mov
fimull
cmp
or
sbb
push
cwtl
sub
das
fistpl
aaa
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
imul
mov
imul
adc
mov
pop
sbb
test
clc
sub
sbb
xchg
pop
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
popf
sbb
sub
and
xchg
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
subb
or
xchg
adc
dec
mov
int3
lods
test
xorl
jns
sub
push
gs
fwait
pop
call
pop
ret
ljmp
test
and
and
je
and
xor
je
mov
out
mov
ficomps
fdivl
add
enter
mov
in
out
and
sbb
sbb
add
add
cltd
push
adc
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
inc
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
les
lcall
sub
push
cmp
mov
sbb
cld
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
scas
mov
imull
mov
mov
bound
dec
out
sub
iret
sbb
addb
imul
nop
xor
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
pusha
cmpsl
xchg
test
dec
mov
iret
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
test
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
je
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
shll
mov
jb
sahf
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
adc
int3
xor
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
xchg
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
inc
loop
xchg
dec
ljmp
ret
add
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
iret
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
loopne
scas
inc
movsl
fcompl
xchg
js
addl
add
push
aas
jmp
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
bound
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
ror
andl
mov
mov
and
xchg
jp
dec
pop
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
cmc
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
int
cwtl
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jecxz
mov
sub
lret
lahf
jle
dec
imul
jb
js
cmp
cltd
enter
lods
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
add
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
cmpsl
jecxz
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
rcrb
mov
jge
les
xchg
mov
ja
adc
popf
in
stc
jl
ret
push
sbb
inc
cld
cmc
mov
inc
mov
adc
leave
xchg
fwait
adc
cmp
jns
mov
push
js
jb
lods
inc
inc
pushf
dec
outsl
loopne
mov
insb
jge
sbb
repz
nop
xchg
mov
mov
test
mov
mov
inc
cmpsb
pop
fwait
imul
aad
xchg
mov
enter
jle
dec
sub
jb
js
cmp
cltd
enter
mov
pop
sub
push
adc
add
int
jle
fucomip
mov
cmc
mov
and
je
mov
xor
ljmp
jb
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
cmpsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
sti
push
or
int
imul
push
sub
jbe
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lret
mov
adc
jp
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
rorl
fistpl
je
cmp
jecxz
inc
sbb
sbb
inc
dec
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
lret
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
aas
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmp
fucomip
jl
and
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jne
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
leave
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
push
call
cmp
pop
inc
int
repz
sbb
and
lahf
lret
jecxz
gs
ss
int
mov
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
scas
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
add
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
cs
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
repz
pop
sbb
mov
rorl
cmp
or
sbb
push
cwtl
sub
das
scas
pushf
dec
and
xchg
or
pop
stos
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
xor
push
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
xchg
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
rorl
fwait
lods
mov
jbe
xor
in
pusha
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
or
cwtl
movsl
jp
mov
pop
scas
fsubr
pop
fisubs
movb
mov
sti
enter
xchg
or
xor
mov
sbb
push
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
jmp
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
hlt
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lds
fidivl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
pushf
movsl
mov
mov
stos
mov
ja
in
test
test
inc
mov
pusha
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
aam
xchg
addl
frstor
mov
push
inc
add
outsb
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
pop
fildll
mov
fldt
arpl
and
xchg
dec
inc
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
cmpsl
cmp
cltd
add
mov
outsl
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
ret
mov
adc
leave
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
dec
lods
mov
mov
xchg
test
dec
mov
xor
dec
subb
dec
les
nop
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbbl
leave
or
lcall
gs
adc
xchg
mov
push
cmp
mov
pusha
mov
push
or
inc
fwait
leave
cmc
cmc
jmp
pop
aas
sub
or
imul
jo
fwait
rclb
mov
xchg
mov
pop
xchg
imul
mov
add
pop
iret
mov
lea
icebp
or
out
mov
fsubrl
xor
dec
push
mov
add
and
bound
jnp
aam
mov
sub
or
icebp
dec
loopne
stos
xchg
fnstcw
adc
pusha
jecxz
push
xchg
mov
jo
call
xchg
cmc
cld
xor
ret
popf
int3
or
repnz
sbb
outsl
sub
adc
test
sub
add
cli
jne
sub
lcall
mov
dec
mov
rorl
cmpsl
xchg
jecxz
mov
mov
mov
jnp
mov
subl
xchg
mov
sbb
jmp
mov
sub
cld
xor
and
ds
mov
out
xcrypt-cbc
cmpsl
xlat
adc
popf
andb
add
leave
cmp
mov
fucomp
mov
push
lods
test
sbb
mov
ret
cmc
jmp
mov
lret
movsl
lahf
int3
inc
xor
mov
mov
add
mov
dec
inc
cmc
xor
dec
daa
adc
xor
ret
sub
dec
fdivrs
lea
lock
fcoms
add
push
mov
or
add
or
js
sbb
add
stos
pop
mov
mov
mov
iret
inc
sub
shlb
nop
dec
pop
xchg
xlat
stos
lahf
inc
loopne
push
test
cwtl
mov
xor
mov
add
loope
adc
cmp
jmp
and
and
xor
imul
pop
inc
jge
pop
or
cld
mov
inc
test
xlat
fucomi
es
clc
xchg
mov
cwtl
bound
or
shll
jo
test
movsb
xor
cmp
jmp
lock
xchg
imul
pusha
jo
sbb
sbb
sti
xor
push
loope
adc
xor
dec
lds
dec
mov
cs
and
cmp
movsl
push
fiaddl
les
and
or
add
cmpsb
lea
mov
sbb
dec
jo
jns
jg
cmpsl
cmp
fs
push
pushf
jmp
xchg
xlat
stos
les
adc
mov
sbb
push
adc
rcr
in
mov
icebp
fsubl
jl
dec
imul
or
sarb
mov
inc
lcall
or
lods
inc
pop
lcall
and
mov
cmc
cmc
jmp
sub
addl
sbb
daa
dec
sub
cmc
jp
stc
xor
fucomi
push
pop
lods
xlat
adc
xchg
pushf
xor
enter
out
mov
icebp
push
mov
jecxz
enter
mov
dec
inc
cmc
xor
dec
daa
adc
xor
ret
sub
inc
gs
pop
add
andb
jb
add
int3
xlat
jmp
test
and
lahf
lds
add
stos
pop
mov
insl
or
mov
ficomps
cmc
mov
xchg
sub
adc
push
test
mov
enter
push
mov
fcmovne
scas
sbb
aad
rcrb
push
lea
xchg
lds
push
mov
sti
lret
and
inc
and
mov
repz
insl
jg
and
mov
cmp
imul
loope
cmp
sbb
mov
fwait
push
dec
mov
test
dec
aam
jns
or
push
pop
add
test
inc
add
mov
adc
call
cmpsl
push
fmuls
mov
and
adc
or
push
je
movsb
popf
xchg
push
mov
sahf
sahf
mov
xchg
fwait
mov
call
shrb
jne
in
std
pop
pop
adc
repz
sahf
shr
add
jl
mov
rclb
inc
stos
enter
cmp
mov
icebp
mov
cmpsb
xchg
xlat
cwtl
sub
cmp
sub
cmc
sbb
push
push
cld
sub
mov
dec
sub
xor
mov
jae
mov
in
xchg
inc
sub
movsl
or
pop
push
fistl
mov
push
pusha
ja
lods
jno
lds
mov
mov
scas
inc
fwait
leave
in
addl
or
adc
in
jge
dec
pushl
push
sbb
fsubs
insb
mov
pop
fisubrs
mov
inc
loope
sub
popf
mov
lea
test
shr
arpl
popf
push
orb
je
test
data16
les
jns
pop
mov
test
add
imul
mov
dec
mov
pusha
movsl
lods
nop
dec
add
or
insl
cltd
ret
push
sbb
mov
divb
js
call
mov
push
pop
sbb
sbb
cli
test
std
mov
pop
dec
cmp
scas
fcoms
data16
jo
xchg
or
mov
add
sbb
xchg
jbe
lods
ficoms
jg
pop
push
fcomp
add
addr16
mov
or
sbb
mov
fwait
push
dec
mov
test
dec
aam
jns
or
push
pop
mov
xlat
xchg
imul
sbb
gs
in
outsl
out
ret
aad
xchg
mov
cltd
add
mov
mov
cmpb
pop
lret
dec
sahf
dec
movsb
lods
repz
lret
call
jg
aam
sbbl
dec
lds
roll
in
roll
add
out
and
adc
mov
sbb
sbbb
insl
cwtl
ret
dec
lret
lahf
loop
les
cli
or
movsb
shrl
dec
addr16
mov
fucomp
std
and
push
cli
out
mov
rcrl
xchg
ret
fstps
lock
or
xor
jb
fisttpll
sbb
lods
loopne
sub
lcall
jmp
daa
inc
xlat
fcompl
sti
and
inc
andl
sbb
dec
mov
and
or
mov
enter
pop
xchg
mov
lock
push
mov
loopne
clc
pop
hlt
or
and
sbb
jecxz
int3
inc
fdivrs
cmpl
mov
cmp
cmc
mov
fbstp
add
xor
mov
lods
jmp
lcall
aaa
dec
mov
or
add
lods
int
jle
cli
in
add
cmp
leave
xchg
add
cwtl
lret
lret
cmpsb
decb
lods
shrl
pop
jp
mov
push
mov
sbb
xchg
dec
popf
es
in
jmp
je
subb
std
mov
xchg
xor
dec
pop
inc
stc
pop
and
adc
push
fnstsw
mov
mov
fwait
leave
stc
cmp
pop
sub
inc
out
mov
rorl
imul
or
enter
repnz
fildl
inc
aam
rep
lahf
mov
sbb
pop
insb
mov
in
lahf
mov
fs
xor
push
sbb
sbb
lods
imul
aad
or
cmp
jmp
mov
add
mov
push
jge
sarl
pop
je
fadd
lods
mov
mov
jmp
jnp
add
sub
ss
ret
mov
stos
sarb
fs
dec
arpl
inc
loopne
stos
les
fucomi
xchg
sbb
scas
mov
hlt
fstpt
mov
adc
movsl
and
fcom
mov
fisubl
xchg
stos
aad
pop
sub
lcall
jbe
test
lods
inc
pop
lcall
sub
sub
add
imul
lds
and
cmpl
fwait
cmp
mov
sub
sub
pop
mov
inc
add
cmp
and
std
jecxz
fs
enter
out
int3
sbb
mov
dec
push
or
dec
gs
mov
xor
mov
rcr
inc
pop
add
lcall
push
stc
ret
loopne
movsl
mov
mov
xchg
xchg
xchg
cmp
sbb
les
sub
test
arpl
cwtl
jecxz
mov
and
aad
lods
fcmovu
or
shrl
ja
xlat
inc
push
mov
jmp
dec
add
or
xchg
fisttpl
add
inc
sbb
fistpl
or
imul
ret
mov
add
test
nop
cmp
push
cmp
xlat
pop
xchg
cmp
cwtl
pop
mov
sti
adc
test
call
xlat
adc
test
sub
ja
mov
fcomps
movl
ret
push
addl
and
sub
mov
xor
dec
test
int
int3
lcall
mov
lock
pop
adc
jae
mov
jecxz
dec
mov
or
add
test
sub
pushf
ret
pop
jl
mov
leave
push
mov
adc
mov
and
dec
gs
les
popf
push
jns
mov
mov
mov
test
mov
lock
add
xchg
push
xchg
mov
testl
sbb
fs
cwtl
rorb
ja
xor
into
pusha
push
fcmovnbe
popf
mov
xchg
dec
sbb
mov
push
xor
add
push
pop
adc
cmpl
xlat
sbb
push
gs
xor
mov
xchg
das
inc
stos
out
call
ret
push
mov
pop
aaa
or
in
lea
imul
push
andb
cmpsb
or
add
jb
mov
pop
jne
icebp
or
in
pop
xchg
scas
mov
xor
int3
cwtl
cltd
adc
or
add
or
pusha
xor
push
and
inc
mov
pop
mov
push
rorl
dec
and
mov
testl
arpl
pop
sub
adc
imul
mov
stos
xchg
cmpsl
inc
popa
dec
mov
ror
shl
adc
ret
outsb
pop
mov
jmp
xor
icebp
sub
and
sti
loope
or
pop
mov
addr16
xor
test
adc
xchg
movsl
ret
subb
mov
stos
mov
pop
fld
clc
les
enter
das
xor
adc
xor
test
sub
jle
add
cmpsb
mov
shl
mov
cwtl
mov
pop
mov
loopne
out
test
xchg
sti
inc
sbb
sbb
jecxz
mov
cltd
sub
mov
mov
xlat
xorb
mov
fstl
dec
and
pop
stos
push
and
test
notb
or
mov
xor
xchg
les
sub
mov
or
mov
stos
mov
inc
lcall
movb
dec
cmp
jbe
loopne
mov
cmp
test
jnp
inc
mov
adc
push
xchg
adc
mov
cmp
ja
pop
stc
hlt
sbb
out
push
test
mov
out
cmp
arpl
inc
mov
xlat
sbb
das
popf
iret
sbb
xchg
inc
inc
mov
sbb
and
inc
xor
imul
mov
sbb
dec
jbe
fsts
sbbl
jp
inc
xor
mov
dec
mov
mov
or
push
sub
loop
ret
repz
cld
sarb
fs
mov
adc
or
dec
jno
cmpsb
pop
and
inc
gs
jno
sbb
mov
divb
data16
mov
mov
insl
test
outsb
fistpl
sub
and
cli
sbb
hlt
jbe
xor
sbb
jnp
jns
dec
mov
loop
mov
cli
add
push
or
jge
pop
push
pop
cmp
cmp
imul
mov
jle
loopne
je
out
jl
sub
mov
cmpsl
ret
lcall
dec
inc
aaa
popf
pusha
xchg
cmc
inc
fcompl
sbb
and
sbb
inc
dec
sbb
pop
pop
mov
loopne,pn
push
sarl
sub
fildl
mov
mov
pop
add
inc
push
std
or
hlt
rcrl
and
mov
mov
or
sbb
xor
mov
and
in
iret
add
aam
sbb
push
adc
push
inc
in
mov
leave
sahf
cmp
adcl
test
sbb
hlt
cmp
aad
jge
jns
pop
loope
and
pop
lahf
xor
sbb
sbb
sub
sub
push
fwait
imul
rcrb
clc
jle
inc
sub
cwtl
clc
daa
js
inc
pop
pop
xor
lds
jmp
add
int3
scas
inc
jnp
pop
lods
out
pop
cmp
dec
cmp
ud1
jecxz
movsl
push
mov
adc
mov
adc
ficoml
out
aam
or
add
sarl
sub
fildl
les
fisubs
clc
sti
cmpsl
sub
mov
mov
pop
sbb
cmc
cli
ds
and
in
cmp
fs
pmaxub
jmp
loop
mov
lret
out
int3
stc
inc
sbb
xor
cmpsl
add
orl
scas
xchg
dec
mov
shl
idivb
insb
sub
cmp
lods
push
pop
sbb
pusha
mov
push
fdiv
orb
jno
cmpl
mov
dec
mov
rcrl
test
aas
fisubs
xor
cmp
mov
mov
stos
cmp
sub
sti
repz
ror
mov
cwtl
and
dec
inc
hlt
mov
jo
adc
mov
sbb
xor
dec
inc
mov
pop
mov
cmp
in
mov
sbb
mov
stc
sti
test
xor
mov
mov
dec
mov
mov
subb
mov
and
repz
xor
adc
fwait
fwait
push
and
test
inc
mov
pop
jns
mov
sbb
and
adc
repnz
aad
jge
imul
push
rorl
nop
mov
push
ret
sbb
mov
push
pop
adc
ret
pusha
mov
and
pop
or
mov
in
sbb
push
push
mov
sbb
int
and
mov
cli
dec
repz
in
je
jp
cmp
adc
ret
fwait
decb
mov
add
sbb
bound
mov
dec
inc
pop
rorl
mov
and
mov
mov
loopne
test
jbe
sti
jae
cmpl
loope
pop
push
adcl
clc
xor
std
lret
test
xor
ffree
xor
add
lods
xchg
leave
pop
lret
lock
lret
movsl
ret
sbb
xorl
test
inc
fbld
sbb
ss
sbb
cmp
je
fistps
dec
mov
call
mov
stc
xchg
dec
mov
jg
stos
fcmovnbe
push
lods
pop
push
mov
andl
ret
lea
mov
scas
aaa
mov
cli
jnp
inc
mov
popa
test
xchg
mov
add
ja
or
in
mov
jnp
inc
push
mov
xchg
cmp
inc
gs
fnstsw
mov
mov
mov
sti
and
test
pop
jae
icebp
mov
xchg
cmp
xorb
fwait
jae
push
mov
shl
mov
xor
mov
cmp
jp
add
mov
mov
add
ret
push
lods
xchg
sub
adc
leave
push
push
clc
stos
ss
lcall
popf
scas
mov
jae
fisubl
xchg
rcll
mov
lret
push
add
lret
add
inc
mov
push
push
pop
mov
pusha
mov
jle
mov
std
cli
jnp
inc
mov
add
inc
sbb
adc
sarl
and
sub
dec
and
mov
mov
pop
mov
or
pop
fdivrl
sti
fldz
clc
int3
and
es
jecxz
and
push
push
lret
mov
sbb
inc
sbb
ret
das
xchg
dec
movsb
adc
pop
add
inc
cwtl
dec
and
mov
mov
test
add
in
mov
lock
roll
add
add
adcl
xor
data16
pop
jg
jecxz
push
stos
push
insb
ror
sbb
inc
lahf
mov
jns
xchg
fnstenv
shr
loope
sbb
pop
daa
sbb
les
inc
scas
xchg
ficoml
lret
mov
jp
add
xor
sub
fsubrs
fildl
scas
aaa
mov
cli
jnp
inc
mov
add
rclb
jge
sti
sbb
mov
jnp
inc
push
mov
or
mov
shlb
sub
push
pop
xlat
stc
into
clc
les
mov
cmp
mov
in
pop
adcb
pushf
test
out
mov
cmpl
js
test
or
pop
lea
ss
pop
sbb
ljmp
sti
pop
movnti
mov
sbb
test
lcall
cltd
and
mov
mov
mov
movsb
lds
nop
lds
test
push
test
movl
idivl
jo
xchg
xchg
test
ret
or
jns
das
xchg
fisttpl
outsb
in
add
adc
cmpsb
loope
gs
dec
xchg
or
cmp
mov
inc
out
in
ret
mov
out
adc
push
shll
int
sub
fbld
leave
jge
jnp
inc
push
mov
jp
mov
and
inc
pop
movsl
jnp
daa
loopne
inc
jbe
sbb
jg
sti
sti
and
xchg
inc
loope
cmp
add
pop
sub
js
test
subb
adc
pop
mov
test
into
mov
and
lahf
xor
lods
mov
outsb
push
mov
ret
inc
mov
lcall
dec
je
mov
jns
lds
nop
lds
sub
fcomi
test
mov
mov
pushf
xor
xchg
mov
dec
sub
xchg
popf
or
dec
scas
fstpt
xchg
int3
dec
aad
cmpsb
push
mov
add
inc
scas
ret
movsb
je
in
lds
sub
sarl
repz
lahf
jb
mov
or
in
xchg
mov
cli
sbb
add
ror
sub
outsb
jns
xchg
test
push
sub
and
dec
pop
xchg
mov
mov
cmp
inc
test
pusha
popa
xchg
outsl
sbb
and
jl
or
cs
imul
mov
add
xchg
call
xor
mov
and
jnp
mov
sbb
mov
inc
cmp
add
rcrb
xchg
mov
aam
xor
lret
aas
xchg
push
jl
mov
enter
sub
xor
out
mov
frstor
repnz
xchg
in
mov
fimuls
and
cmpsl
jno
add
xlat
add
or
xor
or
add
cmp
gs
mov
mov
and
mov
fdiv
sub
push
lods
shlb
adc
hlt
test
dec
popf
scas
mov
xor
push
test
cmpsb
pop
or
xchg
xchg
xchg
inc
dec
mov
or
push
jg
jmp
and
and
popf
xchg
rcrl
dec
loopne
orl
iret
or
dec
mov
push
inc
or
mov
push
fidivs
out
movsb
mov
mov
jle
fwait
pop
lds
add
scas
aaa
hlt
mov
sbb
sbbl
cwtl
icebp
loope
sbb
lea
cmp
arpl
mov
aaa
dec
adc
scas
dec
lahf
js
mov
fistpl
sbb
sti
mov
shlb
xor
test
pop
stc
inc
or
cmc
add
or
sub
dec
lods
cwtl
shrb
pop
fstl
cmp
pop
pusha
jnp
cmp
inc
xacquire
mov
aam
shlb
add
push
cmp
pop
ds
xchg
sub
adc
fldl
adc
fidivrl
cli
mov
lods
pop
xchg
imul
jp
insb
lahf
jne
sti
xor
dec
sahf
jl
mov
mov
hlt
mov
xchg
mov
xchg
hlt
test
jne
fsubs
clc
js
test
or
pop
sub
lea
fadds
pop
cld
sti
mov
jns
add
lods
jo
leave
adc
pop
inc
aas
ljmp
dec
test
shll
mov
insl
mov
dec
xor
sub
mov
dec
sbb
xor
pop
sbb
loop
arpl
mov
xor
in
ror
loopne
mov
xchg
add
push
mov
push
or
jle
push
sub
push
pushf
add
mov
jmp
mov
ror
loop
in
adc
repz
dec
repz
cmp
rcr
or
in
mov
jnp
inc
push
mov
or
lods
push
sub
adc
test
mov
lea
and
or
data16
sbb
cs
fwait
lcall
loopne
out
mov
into
inc
mov
lea
ffree
loopne
jl
lcall
pop
movsb
mov
in
inc
pusha
add
push
sub
add
push
xor
mov
testb
lret
leave
sarb
pop
leave
pop
test
stos
les
lods
leave
test
int3
sub
adc
xchg
dec
pop
imul
mov
cltd
xchg
fsubrl
cld
mov
jg
push
cmc
sbb
xchg
dec
shrl
jne
outsl
sub
pop
mov
push
or
jbe
loope
lahf
scas
xlat
fcmovne
fsts
jmp
lds
mov
add
jge
fwait
xor
test
ret
mov
insb
jbe
adc
cmp
adc
std
test
js
test
mov
aaa
sbb
inc
dec
push
or
sub
test
and
dec
sbbb
idiv
mov
push
or
mov
sti
or
add
mov
mov
jmp
sbb
sbb
pop
push
cmp
pop
rcl
fistl
and
push
sbb
push
cmpsb
jno
scas
push
sub
push
mov
and
scas
pushf
insb
push
cmc
ror
sbb
les
mov
subb
mov
fdivrs
nop
and
mov
inc
jg
scas
dec
xchg
cmp
push
mov
aas
lahf
inc
std
sbb
repz
jno
mov
imul
cmp
push
xor
ljmp
insb
and
addr16
test
cltd
xor
push
lods
cli
xchg
cmp
test
sub
mov
insl
lahf
insl
incb
aad
jb
and
mov
mov
lock
aad
lret
addr16
xchg
dec
inc
aad
imul
shlb
pop
in
push
imul
sbb
push
dec
ret
pop
pop
xor
sbb
test
lcall
jno
addr16
inc
sbb
shrb
stos
dec
pop
dec
inc
mov
lds
ficompl
inc
mov
sbb
dec
mov
in
stc
dec
inc
fsubl
and
testb
cmp
and
mov
sub
add
sti
fwait
lods
movb
and
fldcw
aas
lahf
fisttps
jle
mov
icebp
sbb
and
sbb
inc
stc
aad
inc
loopne
add
cwtl
fs
loopne
shlb
fs
adc
mov
mov
out
and
sbb
mov
ret
adc
enter
adc
add
shlb
out
adc
sahf
inc
fcoms
inc
sbb
idivl
add
ss
and
mov
aam
mov
or
cltd
mov
adc
add
or
mov
jae
sbb
mov
mov
aad
inc
sbb
cli
xlat
dec
pop
inc
iret
test
movsb
sti
dec
sbb
popa
and
xchg
popa
xor
push
pop
in
leave
mov
xor
addl
jl
adc
stc
call
xlat
adc
test
and
sub
enter
sbbl
ret
xorb
jmp
cmp
jmp
cmp
and
std
fldcw
lods
enter
js
mov
adc
jecxz
pop
pop
push
cmp
and
lds
xor
test
daa
pop
cltd
pop
std
cwtl
sbbb
cmp
push
sub
mov
inc
test
mov
lret
loope
dec
sbb
shll
rcrl
or
jbe
cwtl
jae
sti
test
dec
add
into
sbb
int
sub
call
xchg
icebp
mov
insl
add
sbbl
cltd
xchg
adc
cwtl
jecxz
fsubrl
lcall
xlat
test
nop
scas
mov
ss
jae
ficoml
repz
cmp
ret
icebp
add
add
repz
inc
cmp
lret
add
dec
sbb
pop
mov
fnstcw
mov
loop
adc
popl
mov
mov
cmp
xlat
cld
cmp
jl
inc
dec
lcall
insl
fwait
xor
sbb
xchg
rcrl
pop
push
sti
lahf
xchg
pop
cmc
mov
repz
in
push
daa
or
xchg
movsl
ljmp
sarl
dec
xorl
mov
rcll
ret
xchg
aaa
adc
pop
mov
popa
mov
cwtl
std
push
inc
or
mov
ror
ljmp
add
adc
and
daa
pop
xchg
mov
test
xlat
jmp
bound
daa
mov
adc
fistpll
loopne
and
movsb
mov
sbb
lahf
jb
sbb
push
pop
mov
mov
lock
movsl
cld
pop
mov
fwait
pop
addr16
sub
dec
inc
fwait
adc
xchg
pop
rcrb
adc
test
je
loop
lret
les
jb
mov
cwtl
fcomp
push
cmpb
pop
outsl
shll
lahf
scas
orb
sbb
jo
mov
scas
and
pop
je
mov
push
loope
mov
ficoms
jl
std
outsb
dec
daa
inc
lret
bound
cwtl
jl
pop
jmp
jb
ret
xor
dec
mov
iret
jae
lds
out
jmp
fldt
push
push
mov
lock
mov
out
pop
stos
les
xchg
movsl
imul
pop
dec
pop
jecxz
mov
in
mov
adc
push
repnz
shlb
adc
mov
mov
dec
hlt
scas
shll
gs
sti
xchg
fwait
mov
hlt
hlt
mov
and
or
movsb
mov
xor
adc
daa
lret
add
mov
inc
lret
mov
movsl
or
or
mov
enter
cltd
jo
add
inc
pop
lcall
lcall
adc
pop
rcrb
jmp
mov
pusha
jp
stc
test
or
outsl
cwtl
mov
loope
xchg
mov
jno
test
test
loopne
adc
cli
pop
xchg
in
mov
std
andl
inc
loope
lea
sbb
leave
cwtl
pop
and
stos
int
imul
xchg
test
push
add
mov
and
xchg
cmpsl
out
sbb
lea
shl
imul
cmpl
into
cli
add
iret
mov
int
mov
jmp
mov
and
pushf
mov
inc
rcrl
roll
dec
sbb
ss
pop
mov
inc
scas
ja
les
enter
out
cmp
mov
mov
insl
movl
loop
cld
sbb
iret
cmp
inc
fwait
imul
mov
cmp
sti
les
or
iret
test
and
mov
and
push
fdivrs
jge
cmp
sbb
fld
clc
xchg
or
push
inc
pop
cltd
je
cltd
nop
sub
mov
dec
mov
test
fsubr
mov
or
dec
adc
call
xor
push
mov
int3
sbb
sbb
test
sbb
pusha
addr16
jmp
push
sbb
sbb
dec
popf
sbb
xor
sub
adc
call
mov
ss
push
lret
incl
mov
aaa
dec
je
fstl
add
cmp
ret
add
das
sub
imul
ret
or
mov
add
and
cmp
push
push
pop
push
pop
pusha
mov
ljmp
xchg
imul
aas
cmpsl
xlat
add
sldt
and
test
xchg
sub
add
jmp
jg
inc
insl
jmp
mov
fwait
insl
sbb
fucomi
hlt
std
mov
sti
and
sbb
daa
loopne
hlt
je
test
cmpb
repz
mov
sbb
stos
int3
ja
mov
lods
mov
dec
pop
mov
imul
ficoms
or
mov
imulb
clc
idivb
sbb
int3
inc
sbb
popa
lcall
adc
test
ja
inc
in
stos
dec
sbb
scas
push
fidivs
inc
call
cmp
lods
dec
invd
mov
jl
leave
push
addb
mov
push
pop
adc
pop
mov
popa
pop
jno
int3
fists
pop
nop
outsl
fs
jno
loope
sarl
or
pop
repnz
sub
xlat
adc
arpl
mov
enter
cmpsl
xchg
inc
in
or
or
stos
es
push
mov
fidivrl
xchg
sahf
insl
push
dec
aad
lea
fwait
lea
pop
out
inc
xchg
push
test
cmp
movsb
je
pop
imul
sbbb
loope
ficompl
pop
ja
xchg
cltd
pop
adc
adc
roll
cmc
jp
sbb
popf
xchg
std
xor
pop
add
addl
xor
inc
inc
inc
or
inc
movsl
xchg
sub
pushf
ret
pop
std
jne
pusha
lret
movsl
mov
cmpb
ficoml
imul
dec
sbb
add
nop
pop
cmp
xorl
lods
fsub
cmp
mov
jo
xchg
push
cs
jo
movsl
sbb
cmpb
cmpsl
loopne
movsb
std
rcrl
xchg
cltd
fstl
pop
sarb
xchg
cld
sbb
add
call
lock
sub
testl
dec
adc
iret
fstpl
jo
std
sub
leave
pop
adc
stos
add
jae
inc
sbb
call
cmpsb
inc
cltd
enter
push
stc
sahf
pop
sub
cwtl
jns
mov
int
repnz
sbb
out
inc
lahf
cld
push
call
hlt
sbb
xchg
imul
rcr
repz
sti
mov
and
pop
or
ret
mov
shrb
out
icebp
cli
sub
jp,pt
lods
sarb
pop
dec
sbb
stos
pop
cli
das
repnz
out
jge
mov
hlt
fcmovne
push
add
sbb
scas
or
xchg
test
inc
cmp
adc
mov
cltd
fcomi
adc
lods
pop
clc
dec
jae
test
jmp
fstl
pushf
cmpsl
pop
test
ficoms
jg
mov
mov
in
test
or
pop
mov
or
sub
int
or
xchg
xchg
inc
push
mov
or
xchg
and
cmp
jae
push
insl
in
insl
or
cmp
out
shlb
cmpsb
int3
pop
sub
inc
inc
push
push
into
test
sub
loopne
jge
lret
mov
mov
add
sahf
cmp
xlat
mov
lcall
and
int
loopne
xchg
lahf
lret
jecxz
xor
rcrb
nop
mov
repnz
mov
adc
mov
lcall
rcrb
aad
test
jnp
push
vphadduwd
movl
sar
mov
jo
test
inc
push
push
inc
pop
mov
or
cld
jp
add
sbb
and
cmpl
mov
out
jnp
bound
cltd
jp
pop
sarb
aam
adc
inc
je
jecxz
pop
xchg
lock
clc
ret
jmp
xchg
stos
jae
xchg
xchg
push
cmpsb
push
pop
jae
gs
insl
mov
mov
pop
or
movsb
je
seto
pushf
imul
cmc
mov
cmp
mov
movsb
rep
inc
pop
lcall
aad
jmp
jne
add
adc
mov
cmp
pop
dec
insl
dec
or
or
enter
les
ja
push
shlb
sbb
mov
xchg
hlt
les
sti
arpl
push
fwait
dec
mov
aam
jae
or
push
movsl
mov
lds
arpl
lea
cmp
cli
mov
movsb
push
jb
jns
mov
lcall
and
es
popf
push
push
mov
loop
das
cmpsl
xlat
adc
mov
ja
rclb
push
inc
cwtl
dec
cmp
cwtl
lret
movsl
ret
mov
into
out
ja
jb
lret
mov
xor
test
jmp
sbb
fisubrs
inc
inc
push
or
int
in
lret
mov
sbb
outsb
cli
mov
add
xor
push
add
inc
xchg
add
clc
cmp
mov
pop
test
mov
add
orl
xchg
xor
std
dec
and
fistl
push
sti
mov
push
jg
mov
lret
xchg
cld
repnz
and
nop
fwait
xor
or
xchg
jno
je
and
cmp
pop
mov
popf
add
xchg
cltd
popf
sahf
sahf
jb
lahf
jp
mov
mov
push
mov
repz
nop
cwtl
std
shr
notl
jnp
sbb
or
mov
iret
out
shr
inc
lret
popa
xor
cmp
stos
lcall
pusha
fwait
pop
xchg
cmp
int
inc
cltd
outsl
fidivs
sbb
cltd
enter
or
rcrl
daa
sub
outsl
mov
lock
lds
jmp
fwait
aad
int3
pusha
sbb
mov
repz
cmp
xor
cwtl
in
lret
cmp
mov
mov
push
or
push
repnz
movb
jnp
fadd
mov
movsb
fisubl
jne
addr16
out
jae
fistl
repz
dec
pop
jae
aam
jg
mov
outsb
fcomps
neg
inc
cmpsl
push
andl
cmp
lods
jle
mov
push
cmp
stc
enter
inc
fs
roll
mov
sbb
jnp
add
add
les
addl
nop
dec
and
cmpsb
loope
cmp
sbb
jg
lahf
lods
pop
leave
push
pop
lea
int
inc
lret
mov
aam
cwtl
fldenv
enter
test
inc
jb
inc
daa
adc
ficompl
dec
ja
xor
xchg
push
mov
std
pushf
dec
add
fs
out
sbb
cmp
xor
pusha
xor
test
rolb
mov
in
fnstenv
add
test
test
adc
arpl
stos
push
dec
dec
jge
push
test
lret
loop
loope
fists
add
jae
mov
insl
fidivs
faddp
insl
mov
repnz
int
jge
lcall
pop
sahf
xchg
out
gs
cmpsl
push
aaa
test
xchg
dec
int
pop
jg
pop
pusha
jge
add
popf
popf
outsb
inc
fwait
leave
sbb
rcr
dec
test
pop
cmp
call
les
sub
push
jno
dec
cmc
add
xchg
out
jbe
addr16
repnz
mov
call
cmpsb
inc
xchg
jmp
jl
jg
xchg
sbb
mov
add
dec
in
fisubrs
aad
imul
mov
imull
movsb
rep
mov
adc
pusha
xor
mov
mov
jne
sbb
aaa
fiadds
push
dec
jecxz
push
lock
jl
lcall
xor
icebp
stos
mov
in
sbb
shlb
mov
fstl
mov
mov
nop
dec
pop
jae
inc
xchg
insl
dec
cltd
sbb
or
cltd
xchg
cmp
mov
inc
pop
fwait
test
fstpl
mov
mov
inc
mov
jecxz
stc
inc
inc
bound
movsl
fbld
rcrb
popf
sarl
sub
xor
add
adc
mov
xchg
mov
fstpt
movsl
xor
xor
data16
enter
sbbb
inc
mov
sbb
fstl
jnp
fsubrs
jp
das
xor
lds
or
xchg
pop
xchg
dec
sbb
inc
inc
xor
inc
inc
pop
or
in
ss
xchg
sub
xor
or
rcl
aad
aam
mov
and
push
adc
mov
lret
mov
jns
pop
inc
dec
into
push
shll
ljmp
mov
in
daa
xchg
add
mov
mov
ss
loop,pt
mov
xchg
mov
ret
push
sbb
sbb
and
test
and
addr16
add
inc
mov
push
inc
pop
aad
out
fisubl
repz
fldl
fiadds
pop
repz
mov
jno
xchg
dec
xor
pushf
cmpsl
rcrl
shll
lcall
mov
mov
add
int3
test
sub
push
or
in
inc
xchg
add
rolb
fdivl
hlt
push
inc
fdiv
mov
jge
lea
cmpsl
enter
adc
mov
cmpsl
mov
icebp
or
cmp
or
and
loop
shl
mov
mov
adc
xor
rcll
add
dec
adc
pop
mov
mov
jae
test
repz
inc
int3
sub
or
push
stos
cwtl
and
lcall
cmp
lods
jle
mov
scas
fildl
adc
leave
in
test
rcrl
es
ss
mov
push
mov
into
add
xchg
out
sub
insb
mov
int3
out
push
movsl
stc
xor
mov
mov
jnp
fdivs
fcompl
sbb
and
and
in
cmpsb
and
xor
pop
stos
pop
xor
or
aaa
mov
mov
imul
mov
pop
mov
push
sbb
mov
movsl
std
dec
dec
or
aas
mov
int3
and
jae
in
movsl
ret
adc
mov
outsl
adc
stos
mov
sahf
push
test
test
push
in
mov
push
inc
mov
aam
ja
stc
cli
in
test
pop
sti
mov
insb
ret
sbb
shlb
mov
xchg
push
addr16
icebp
add
sub
inc
push
pop
pop
sub
jg
test
fdiv
js
fimuls
icebp
jmp
add
bound
fwait
push
dec
mov
int
push
cmp
push
mov
or
lods
push
sub
adc
test
es
cmpsb
mov
out
adc
fisubs
fldenv
mov
cmp
xor
push
xchg
jmp
adc
mov
inc
fdivrs
push
inc
xchg
mov
mov
call
pop
fmul
test
movl
jbe
pop
cli
out
sbb
add
mov
xor
add
stos
test
push
lods
and
stc
dec
pop
fbld
mov
pop
lcall
sti
arpl
xchg
push
add
sbb
ss
jo
in
fildl
fiaddl
add
cld
jp
add
ss
cmpb
lret
pushf
push
add
inc
repnz
leave
inc
or
pop
xchg
in
cmp
mov
xor
pop
xchg
adc
xor
push
fs
jbe
lret
lcall
pop
fld1
lcall
out
call
sarb
xchg
enter
sbb
sbb
mov
fcomps
insl
sub
in
fdivp
mov
aad
dec
xor
mov
ss
mov
in
out
aaa
dec
adc
mov
push
jbe
adc
mov
xor
jg
imul
ds
pop
pushf
dec
and
push
push
inc
push
stos
push
test
xor
or
gs
inc
repnz
test
bound
mov
inc
cmp
mov
das
xchg
fisttpl
aas
aas
pop
clc
dec
mov
cmp
or
inc
xor
sbb
mov
ja
ror
loop
in
lods
rcrl
bound
idiv
push
mov
mov
filds
movl
icebp
aaa
or
sbb
xchg
jne
mov
or
mov
lcall
rcll
andl
enter
xor
add
mov
sbb
ljmp
ret
into
adc
push
add
mov
pop
mov
fists
andb
and
sbbb
scas
lock
cmpsl
push
sarb
dec
inc
sbb
out
mov
icebp
push
pop
mov
leave
pop
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
sbb
leave
or
sub
sti
repz
fcoml
sbb
sub
inc
inc
fdivrl
xor
js
xchg
bound
or
loop
js
cmpsb
out
sub
add
dec
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
or
xchg
mov
mov
pop
xabort
pop
fdivrl
sti
repz
fwait
push
adc
inc
dec
pop
mov
shr
lret
je
sbb
test
adc
fsts
add
and
repnz
mov
sbb
aas
push
cmc
or
mov
and
pop
xchg
lret
hlt
movsl
mov
jg
add
jl
sbb
add
imul
lods
das
mov
cli
stos
repnz
mov
sbb
fcmovnu
dec
sbb
xor
pop
pop
push
in
mov
xchg
fcoms
popf
daa
adc
ret
mov
dec
xchg
mov
lret
push
ss
fldt
jmp
sbb
cwtl
mov
fcmovnb
push
fcomip
sub
and
sbb
add
pusha
push
sbb
mov
adc
cmp
pop
jmp
stc
mov
sbbb
or
mov
cwtl
sub
inc
sub
dec
add
mov
inc
mov
into
imul
mov
sub
ljmp
repz
sub
cmp
mov
mov
rcr
adc
sub
inc
bound
adc
fildl
test
repnz
jno
mov
sarb
aaa
stos
test
lcall
dec
sbb
lahf
notl
or
xor
pop
popf
lret
in
jl
ret
add
or
test
sub
movsb
inc
out
jb
mov
pop
mov
add
mov
jge
dec
loop
icebp
adc
insl
jo
jl
adc
es
or
mov
mov
mov
fmuls
jge
jbe
lret
movsl
ret
mov
pop
fisubs
cmpsl
ret
fld
call
fcomi
sub
push
hlt
cwtl
test
xor
jl
lea
movsb
popf
xchg
push
push
cwtl
cmpb
xor
rcll
jns
mov
pop
add
inc
lahf
cwtl
nop
imul
mov
lret
push
mov
cmp
add
xor
inc
popf
imul
sub
lcall
repnz
jnp
subl
ds
mov
testl
fmulp
and
lock
and
inc
push
sbb
xchg
std
inc
sub
ljmp
sbb
mov
xor
push
mov
push
jge
leave
in
and
adc
xorl
inc
add
insb
mov
mov
test
adc
outsb
mov
push
fidivrl
push
jo
sub
imul
bound
rcrb
lds
out
hlt
dec
xor
and
cwtl
dec
add
xchg
inc
testb
jmp
inc
mov
in
mov
idivl
pop
cmp
cmpsl
call
xor
iret
jg
cwtl
dec
cmp
iret
mov
or
and
mov
ja
pop
int
inc
pop
repnz
inc
mov
adc
fwait
arpl
jge
push
and
andb
mov
cmp
lret
fists
lahf
sbb
cmp
aas
adc
push
cmp
lret
add
and
fldt
jge
pop
in
push
mov
sub
mov
sbb
lods
in
rorl
dec
mov
loop
in
nop
xchg
incl
cwtl
lock
sarb
add
mov
sbb
dec
enter
and
cmp
aad
mov
pushf
cmpsl
dec
fs
pop
mov
bound
and
cmpsb
push
je
inc
xchg
mov
mov
sub
fwait
int
js
pop
mov
mov
pushf
idivl
jns
fisubl
adc
lret
and
mov
lock
mov
add
mov
push
add
lods
movsl
add
ja
mov
dec
mov
nop
and
xchg
lret
stc
push
pop
cld
and
aas
add
mov
lcall
lret
mov
mov
cmp
xchg
dec
mov
or
adc
enter
xchg
fistl
pop
add
test
lods
jge
fldcw
cli
add
mov
add
js
jg
enter
sbb
sbb
insb
push
sbb
mov
dec
mov
xor
jl
cli
lods
test
inc
cwtl
dec
icebp
rclb
inc
jge
xchg
mov
gs
fwait
mov
mov
xor
in
xor
push
sub
dec
push
and
cs
pop
loope
fsubrs
loopne
push
negl
dec
jae
cmp
adc
cmp
mov
loopne
mov
add
xchg
mov
mov
jecxz
popa
mov
mov
nop
mov
sbb
sbb
test
or
lret
pop
mov
lds
stos
inc
in
cmpl
pop
jbe
cld
mov
int
arpl
popf
invd
call
pop
cmp
dec
fucomp
mov
push
sub
adc
call
lods
enter
pusha
jle
scas
dec
arpl
or
jg
cmp
add
adc
sub
sbb
pop
mov
cmpsb
mov
xor
lods
addr16
clc
or
pop
lods
repz
add
pop
fidivrs
cmp
std
xchg
mov
test
insb
cwtl
es
imul
and
sub
cmc
mov
add
int3
lcall
pop
lods
pop
or
ljmp
mov
mov
jae
mov
fcom
mov
cmp
pop
pushf
inc
mov
jno
lret
adc
mov
dec
scas
inc
std
xlat
push
jmp
in
dec
push
inc
movsl
adc
mov
je
mov
jge
mov
add
lock
push
pop
jae
fbstp
dec
cmpl
stos
fistl
mov
fcoml
mov
mov
push
or
in
repnz
sbb
rclb
push
add
fsubl
nop
jge
stos
sbb
test
cli
dec
and
mov
or
xchg
mov
fwait
add
and
xor
mov
xor
add
mov
sar
inc
lods
sbb
sub
or
inc
nop
mov
jecxz
sbb
push
daa
or
ja
push
jne
les
pop
stos
push
mov
loop
aas
sti
mov
clc
sti
pop
mov
lock
mov
adc
jmp
dec
dec
sbb
jmp
push
popf
rorl
icebp
scas
pop
imul
jae
imul
pop
fcmovnu
ljmp
popf
insl
adc
mov
push
cmp
mov
loope
pop
stos
jne
inc
mov
xchg
sbb
push
sub
scas
add
ficoms
jl
mov
js
add
add
daa
pop
rcr
out
mov
jns
and
dec
inc
or
push
mov
cmpsl
ret
inc
fdivrp
test
add
xor
test
xor
or
jecxz
push
or
cmp
or
sub
aad
mov
mov
inc
pop
popa
dec
xchg
xor
lret
jne
mov
fbld
sbb
sbb
jecxz
xlat
mov
in
std
lahf
pop
push
int3
or
add
mov
or
xor
mov
decb
in
lea
cmp
sub
mov
jg
mov
inc
and
adc
push
sti
arpl
icebp
fwait
insl
pop
mov
cmpsb
test
and
xchg
int3
mov
lahf
fs
mov
pop
and
icebp
cmpsl
push
test
movsl
cmp
mov
lret
je
out
mov
dec
sbb
xor
inc
sbb
in
or
add
pop
xor
add
test
es
js
les
adc
sahf
into
jb
fwait
outsl
mov
ret
or
fincstp
inc
sbb
sub
xor
mov
jne
dec
xchg
xchg
es
lods
je
lods
mov
mov
inc
pop
jmp
add
sub
cli
in
add
add
mov
jg
enter
outsb
decb
aad
mov
lret
test
stos
stc
pop
loop
jp
stc
scas
jge
arpl
repnz
jp
js
cmpsl
lock
xchg
add
mov
cwtl
mov
addb
sbb
fisubl
stos
inc
lcall
movb
mov
push
sbb
cmp
repnz
cmp
out
enter
movsl
loop
stos
ljmp
lcall
push
or
les
xchg
adc
lret
jbe
les
add
and
ror
test
cmpsb
inc
sbb
out
lret
mov
test
movsl
inc
sbb
sbb
mov
jo
leave
fdivp
inc
sbb
mov
shlb
stos
rcrl
push
loopne
inc
sbb
lret
sbbb
lock
mov
fildll
fistps
cmp
pop
and
lret
pop
xor
jno
push
add
lahf
mov
and
test
fbstp
lret
pop
mov
lods
jecxz
aas
dec
cltd
cmp
mov
xchg
test
cmp
and
lret
hlt
incb
cld
in
and
pop
mov
loope
test
and
mov
js
xchg
xchg
bound
inc
jl
rcrb
ljmp
cmp
jmp
dec
add
or
insl
les
aam
sbb
lret
stc
xchg
lock
mov
inc
mov
pop
mov
sahf
cmpsb
adc
and
shll
lock
mov
jl
int
xor
pop
jmp
shlb
cmc
idivl
shr
idiv
mov
cmp
sub
jle
in
jo
dec
scas
dec
lahf
lret
inc
cmovge
sbb
adc
sub
divb
aam
pop
adc
and
or
mov
in
or
mov
xchg
hlt
fistl
dec
mov
arpl
push
sbb
push
sbb
or
mov
adc
push
int3
sbb
icebp
lahf
and
insl
mov
lods
ja
ret
dec
fs
mov
and
jo
icebp
fsts
popf
adc
pop
pop
mov
imul
mov
addl
pop
sbb
repz
sbb
dec
mov
std
sti
outsb
mov
test
push
adc
inc
hlt
cmc
adc
cmpb
add
ffree
faddl
or
jb,pt
bnd
stos
or
mov
xchg
cld
fdivl
iret
sahf
inc
out
lret
fwait
lods
out
jecxz
dec
clc
hlt
add
imul
mov
sub
or
subb
xor
das
rcrb
adc
xor
add
jne
aaa
fsts
xlat
dec
pop
inc
xchg
repz
xor
xchg
pop
in
push
arpl
sub
orl
push
adc
outsb
enter
push
mov
std
jno
and
sbb
sbbb
filds
inc
inc
into
es
pushf
push
fwait
leave
loop
jl
inc
leave
push
mull
aam
or
cmpl
mov
stc
mov
and
mov
cmpsb
add
or
xchg
sbb
cld
imul
mov
or
cwtl
arpl
mov
push
aaa
in
xchg
out
push
mov
loope
mov
loopne
mov
dec
cmpb
mov
cld
mov
js
mov
sbb
out
mov
ret
jecxz
sbb
icebp
lock
cmp
inc
out
sbb
inc
scas
mov
sarb
and
out
js
mov
mov
rcrl
popa
jmp
pop
cli
sub
and
mov
fiaddl
shlb
push
sbb
mov
fcmovb
mov
push
enter
pop
jbe
lahf
dec
push
xchg
jnp
dec
push
push
pushf
rclb
add
pop
xchg
push
push
jnp
jp
lods
mov
add
aad
gs
inc
mov
adc
jge
cltd
xchg
imul
push
pop
mov
pop
fdivrp
shlb
cltd
iret
sbb
or
sub
pushf
xchg
mov
cmpl
mov
call
pop
das
mov
lds
push
ficoml
mov
popl
sbb
lods
jnp
gs
mov
add
jecxz
xlat
xorb
and
mov
movsb
hlt
inc
ret
sarl
sbb
xlat
pushf
js
sub
fidivs
sar
scas
xchg
and
ss
add
sti
jb
mov
idivb
push
stos
loopne
xor
vpsllw
inc
int
sub
push
mov
lock
and
repnz
jg
or
ss
rolb
bound
or
or
in
mov
jnp
inc
push
mov
or
mov
adc
test
shr
jb
pop
stos
fnstcw
imulb
fstpt
cwtl
or
incb
stos
cwtl
dec
mov
pop
cwtl
inc
push
dec
inc
push
sarl
sub
in
insl
sbb
xor
adc
xor
mov
sbb
mov
inc
sub
dec
mov
scas
inc
push
xchg
int3
sbb
mov
and
push
dec
add
cmp
mov
pop
out
fs
cmpsl
popa
pextrw
mov
ljmp
lds
sbb
cmp
mov
or
fistpl
stos
xor
jnp
enter
mov
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
sarb
jp
xor
fsubs
testl
aas
mov
test
gs
ljmp
pusha
dec
cmpsl
ret
shl
rcrb
fwait
or
aaa
cmp
bound
xchg
mov
sbb
cwtl
sbb
jp
cmp
test
xchg
loope
lret
sbb
add
pop
out
add
inc
jbe
lret
aam
cmc
jg
rorb
call
ret
sti
repz
lahf
fwait
jo
or
mov
sbb
xor
cmp
pusha
lret
movsl
ret
insb
test
push
ja
inc
in
dec
push
test
test
xor
xor
fistpl
mov
aaa
pop
cli
das
test
push
sub
xchg
pop
dec
ss
outsb
test
frstor
pushf
push
mov
xor
jecxz
movsb
fstl
pop
scas
jmp
fwait
test
mov
ffreep
adc
mov
ljmp
jle
fwait
push
dec
mov
cmp
or
iret
cmp
movsb
clc
cmp
sub
dec
popf
cmp
ret
aam
xchg
mov
out
pop
es
pmulhw
lret
jnp
push
cmp
jg
fiaddl
cmp
icebp
xchg
test
mov
lds
int
stos
mov
stos
inc
insl
xchg
in
rclb
into
ret
sbb
jns
inc
pop
dec
lahf
int3
xor
add
lods
xchg
sub
int
or
loopne
insl
jmp
stos
das
mov
and
push
mov
je
dec
test
mov
hlt
xchg
xor
push
subb
mov
gs
or
hlt
dec
dec
in
mov
mov
test
mov
in
push
lret
icebp
lahf
fisttpl
add
or
lret
mov
pop
data16
leave
inc
icebp
sahf
sbb
cli
or
scas
xchg
adc
jae
loope
inc
sbb
daa
or
mov
mov
test
sub
mov
fs
dec
push
dec
mulb
sbb
call
neg
mov
mov
sub
adc
push
mulb
das
jge
xchg
pop
cld
push
mov
sub
test
or
add
clc
sti
mov
pusha
pop
sub
fstpl
in
mov
inc
sub
push
pop
ljmp
pop
xor
dec
mov
lret
imul
rcll
or
dec
sbb
mov
jmp
popf
ljmp
ljmp
movsl
dec
pushf
mov
in
xchg
push
xlat
xchg
add
push
inc
lahf
xchg
aam
cmp
inc
fcomps
adc
and
jp
xchg
stc
jne
fisubrl
popf
lods
sub
out
lcall
andl
mov
add
pop
sti
fwait
xor
lret
je
mov
jmp
fidivl
sub
adc
addr16
leave
es
push
mov
mov
loopne
fiaddl
jnp
jae
int3
cmp
ret
inc
in
cmp
mov
je
inc
push
xchg
fs
jmp
clc
add
push
sti
mov
adc
mov
and
push
fsubr
push
pop
jno
iret
sbb
xchg
int
add
fwait
push
loop
inc
fstps
test
dec
mov
aaa
mov
arpl
push
sbb
lret
inc
rcrl
mov
mov
les
sbb
push
fisubs
xor
pop
pusha
pop
sahf
mov
repz
pop
jp
fs
cmpsl
xlat
in
andl
rcll
insb
xchg
repz
addr16
xchg
xchg
inc
push
mov
or
cs
mov
xchg
push
cmpsb
fcomp
aaa
mov
cli
ss
jne
cltd
outsl
add
mov
enter
inc
sbb
into
inc
je
sbb
xchg
pop
pop
push
inc
mov
ret
jnp
pop
das
mov
call
jne
popa
or
clc
sti
jae
andb
lahf
in
dec
sbb
repnz
sbb
cmp
sub
inc
ds
fs
inc
cltd
jo
lahf
jge
jae
and
aad
or
inc
cltd
lret
lcall
sbb
hlt
stos
adc
das
sbb
fsubrl
pop
sbb
sbb
mov
hlt
dec
cmp
negb
data16
lods
pop
sbb
aaa
ljmp
jae
adc
mov
mov
loopne
das
cmpsl
xlat
mov
xor
mov
paddq
loop
or
fucomip
push
popa
lret
or
js
clc
ret
fld1
lea
mov
lock
mov
and
mov
iret
mov
or
jne
aad
pop
les
movsl
idivl
sub
fildl
lret
mov
mov
mov
mov
loope
movl
popf
fnstsw
scas
or
and
rorl
xor
jl
outsb
sub
rcrl
sub
jno
pop
sbb
stos
and
adc
add
push
pushf
cmp
jbe
movsl
daa
inc
dec
addr16
xchg
xchg
push
out
mov
or
push
mov
jb
movsb
cmpsl
test
out
scas
ret
subl
mov
mov
mov
adc
inc
aam
enter
in
mov
pop
repnz
in
dec
ds
mov
push
lods
xlat
mov
mov
cltd
jle
mov
pop
fsubr
lahf
cmpsb
in
aaa
dec
pusha
fbld
outsb
aaa
sbb
or
hlt
jl
sub
pop
test
xchg
dec
inc
pop
popa
pop
pop
mov
or
sub
ret
mov
movsl
mov
clc
sti
mov
jecxz
repz
adc
jo
ret
pop
stc
outsl
fcoml
mov
mov
fisubrs
xor
test
jmp
mov
mov
jae
jns
mov
popf
lret
lret
sub
cmp
mov
dec
mov
xor
and
pop
sahf
xchg
sbb
lahf
fs
enter
roll
das
sahf
ja
aas
lahf
inc
lret
push
xchg
jg
push
jge
mov
or
xchg
and
aad
rol
mov
jge
je
mov
fucomp
push
mov
inc
and
shl
jnp
fdivrl
rcrl
push
addl
and
sub
inc
data16
mov
adc
cwtl
dec
and
mov
mov
test
jae
mov
add
fcomp
dec
sbb
sub
push
sub
lods
xchg
sub
adc
push
inc
pop
lods
xchg
dec
adc
rcpps
imul
adc
aad
test
and
mov
or
pop
mov
cmpsl
dec
test
fstpt
xchg
fwait
pushw
pop
mov
movl
leave
xor
andl
addl
jmp
les
inc
sub
pop
jmp
xchg
ljmp
push
fdivrs
insl
loope
or
fstpt
stc
bound
idivb
test
jge
rcrb
xor
mov
cltd
cmc
mov
shl
fistl
push
scas
shr
je
sub
mov
cmc
fwait
arpl
iret
inc
mov
fcomps
pop
push
jnp
push
sbb
mov
mov
cld
xchg
lahf
sti
cmp
ljmp
dec
pushf
dec
and
nop
mov
pop
stos
test
sbb
push
add
std
lods
push
xchg
lret
mov
xor
dec
sbb
push
pop
dec
lret
or
cli
sub
nop
lcall
fwait
lods
movb
or
xor
cmpsl
ljmp
pop
bnd
incb
leave
sbb
pusha
xchg
in
imull
arpl
push
mov
rolb
xchg
sbb
mov
mov
xchg
xchg
mov
ljmp
jecxz
sti
cltd
leave
ret
cmp
xchg
addr16
jno
icebp
inc
out
mov
mov
inc
dec
imul
or
insb
add
push
sarl
sbb
jo
dec
adc
mov
addr16
xor
inc
mov
pop
jmp
jne
test
pusha
mov
outsl
fmull
jp
add
mov
adc
cmp
add
ljmp
sbb
mov
push
pop
or
les
and
xor
mov
mov
test
jbe
dec
mov
xchg
test
sbb
push
cmp
divb
mov
fldenv
cmp
cltd
add
leave
or
movsl
pushf
das
xor
in
aad
push
mov
mov
push
or
je
pop
clc
mov
lret
dec
in
imul
fcmovb
pop
xchg
movsl
test
pop
test
xor
aad
mov
fcmovnbe
xchg
mov
cltd
pop
adc
add
xor
loopne
pushl
mov
jecxz,pt
leave
adc
add
add
xchg
cmp
xor
or
pop
stc
ss
ficoml
je
daa
clc
iret
test
jns
outsl
pop
adc
iret
sbb
mov
xor
add
pushf
push
push
lods
xchg
sub
adc
inc
in
lods
dec
sbb
repnz
sub
scas
cmpsl
scas
push
clc
mov
bound
mov
ret
push
lock
cmp
adc
cmp
pop
jnp
sbb
adc
jl
cmpl
lret
jmp
rclb
pushf
and
add
or
push
in
or
fildll
mov
sub
push
mov
fwait
xor
mov
fcoml
cmp
mov
test
cmp
push
jns
cwtl
dec
inc
push
xor
adc
inc
sbb
push
imul
ret
fildll
stos
shll
andb
test
pusha
xor
xlat
mov
cmp
hlt
jge
sbb
aaa
inc
sub
outsl
mov
and
insb
push
pop
xchg
push
jbe
in
or
mov
cli
xlat
xor
in
lret
sbb
add
mov
ds
mov
push
in
inc
or
sbb
fsubs
mov
xchg
loope
movsl
pop
test
xchg
add
dec
out
xchg
pop
gs
arpl
clc
and
pusha
dec
fdivrl
mov
nop
mov
inc
out
decl
setb
mov
popf
push
lea
data16
push
icebp
jns
xchg
sbb
xchg
mov
pop
scas
dec
sub
push
mov
fwait
dec
adc
aam
fs
jb
stos
ja
outsb
sbb
mov
jle
aaa
int3
add
dec
sbb
inc
inc
pop
lock
stos
inc
cli
or
jecxz
in
cmp
pop
jae,pt
cmpsl
add
scas
loope
mov
fwait
inc
test
adc
loop
iret
fadds
js
xchg
sahf
mov
add
sub
pushf
es
mov
out
dec
jmp
xlat
stos
mov
fbld
dec
sbb
scas
or
jns
rclb
rcr
add
mov
sbb
ljmp
push
pushf
push
xchg
je
and
bswap
jecxz
ljmp
sbb
stos
int3
xchg
cltd
push
pop
clc
dec
pop
pusha
jnp
mov
cmp
js
int3
mov
fs
or
mov
es
out
test
pop
xchg
sahf
sub
test
push
stos
clc
jns
nop
xchg
pop
scas
stos
or
pop
je
cmpsb
iret
lock
roll
add
inc
cld
adc
pusha
fisttpll
xchg
sti
mov
f2xm1
lds
fisubl
sub
mov
repnz
or
or
xchg
dec
or
jl
mov
cmp
add
inc
sahf
lcall
jg
fbstp
test
pop
mov
mov
out
ja
and
fsubrs
push
mov
xchg
ja
fs
insb
xor
jb
sub
arpl
xor
mov
pop
lock
mov
repz
mov
dec
adc
popf
dec
rcrl
jnp
mov
mov
fnstsw
pop
enter
clc
dec
mov
out
std
add
loope
dec
fimuls
adc
or
add
in
stos
mov
imul
ja
jp
jmp
xor
shll
inc
rcll
scas
fcoms
fs
sti
insl
leave
out
sti
push
lcall
jnp
jae
adcl
sub
mov
pop
add
or
rolb
aad
fisubs
mov
shl
cmpsb
pop
mov
repz
mov
sbb
or
fld
je
pop
hlt
ret
ds
lahf
fadds
decl
xchg
push
sti
js
inc
lret
out
fwait
mov
cli
cmpsl
dec
cwtl
pop
stos
stos
cwtl
push
loopne
push
decb
test
push
cmc
test
mov
push
push
bound
sbb
mov
inc
or
mov
xor
pop
in
lea
lds
jnp
push
pop
pop
pop
mov
cltd
dec
xchg
mov
pop
roll
sub
add
xchg
insb
leave
push
repnz
lcall
add
in
or
sarb
or
jne
stc
xchg
mov
sti
adc
dec
sbb
cmp
imul
ret
mov
adc
or
push
adc
mov
add
fdiv
cmp
inc
pop
push
arpl
push
inc
inc
inc
xchg
xchg
clc
cmp
sbbl
xchg
mov
outsb
pop
mov
add
and
jg
test
or
push
sbb
pushf
adc
sbb
sbb
pop
push
sub
rolb
adcb
add
fcoml
lds
repnz
inc
pop
test
mov
pop
lds
imul
fwait
sbb
pop
and
add
add
arpl
mov
bound
adc
repz
divb
pop
fstl
pushf
sar
cmpsl
sub
dec
negl
adc
into
dec
pop
loope
fwait
adc
mov
xchg
inc
push
push
cmc
movsl
dec
repz
pop
add
fsub
fstl
inc
aad
ret
ss
inc
dec
jo
pop
ja
les
test
jp
adcb
adc
add
xchg
mov
xor
negl
test
mov
pop
jmp
hlt
inc
pop
adc
mov
sub
and
mov
jnp
push
rol
test
movsb
jmp
leave
lcall
adc
dec
cs
int
sbb
roll
sbb
xchg
mov
sbb
xchg
cmp
test
pop
sub
mov
flds
repz
roll
ss
sbb
hlt
add
in
lcall
sti
dec
push
pop
or
js
inc
int3
cmpsl
dec
add
shll
mov
adc
ja
fldl
je
xchg
jns
lret
fdivrs
jp
fildl
sbb
mov
cmp
push
sti
enter
int3
inc
xor
pop
xor
push
or
test
cmp
lock
mov
pop
das
or
sub
pop
pop
push
shl
cmp
add
and
mov
mov
jecxz
movb
cmp
mov
jb
cltd
fwait
orb
mov
pop
xor
lock
outsl
sub
inc
sub
inc
mov
dec
xor
mov
adc
push
pushf
dec
shlb
repz
hlt
dec
inc
sbbl
xchg
fidivrl
cmp
clc
dec
mov
lds
lds
mov
or
sti
push
fmul
add
sub
loope
inc
add
fucomi
movsl
sbbl
or
test
cltd
pop
mov
into
and
push
in
xchg
ljmp
stos
mov
pop
fsts
pop
mov
loope
loope
dec
mov
movsb
sub
arpl
jo
aaa
xchg
jae
push
test
repz
in
or
mov
int
xor
orl
jae
mov
cld
xor
scas
push
inc
xor
xor
enter
daa
leave
lods
push
jle
jbe
iret
cmpsl
mov
lret
push
adc
rcl
lds
jmp
lds
mov
sbb
test
mov
add
les
push
inc
jmp
push
flds
and
jp
shrl
jbe
gs
cld
cmp
jmp
enter
fidivrl
in
call
fisttpll
clc
jle
add
inc
push
mov
mov
pop
xor
outsl
in
mov
adc
mov
jmp
xchg
sub
sub
stc
into
jns
call
stos
scas
iret
sbb
cmpb
enter
ret
add
repnz
adc
or
test
test
or
inc
dec
xchg
ret
loopne
inc
jecxz
pop
in
sbb
jle
xchg
sarl
lock
xchg
xor
imul
inc
sub
cld
and
mov
xchg
scas
mov
dec
js
hlt
mov
mov
rcr
push
mov
add
aam
push
pop
push
subb
ljmp
aam
add
imul
mov
inc
movsl
push
fsubs
xor
clc
dec
and
cmp
lahf
dec
fadd
push
fcompl
shll
fucomi
repnz
cmp
sbb
jl
sbb
cltd
in
notl
cmp
sbb
ret
add
out
push
daa
xchg
enter
xor
jecxz
push
lret
cmp
sub
push
mov
cmp
cmp
int3
xor
jne
mov
add
sub
mov
or
movsb
mov
cmpl
mov
cmp
repz
insb
sub
repz
or
subl
test
dec
lahf
lret
jecxz
inc
inc
add
aad
or
stc
cld
jg
les
push
and
cmp
jnp
add
push
imul
pop
sbb
cs
adc
aas
dec
mov
xchg
test
mov
jae
lret
cmp
notl
xchg
movsl
int
stos
push
mov
mov
sub
push
push
push
popa
xor
adc
sub
mov
mov
inc
frstor
les
dec
xchg
outsl
sti
and
push
cltd
sub
push
mov
shrl
mov
mov
test
gs
pop
das
gs
rcrl
or
sbb
add
adc
mov
cmp
test
repz
inc
sbbl
xor
loopne
jae
cwtl
iret
inc
fsts
bound
add
xor
lods
out
sub
lock
mov
aam
and
lods
ret
inc
out
in
jecxz
test
fisubrl
lds
lret
imul
lea
push
rcl
mov
jns
cs
xchg
or
out
test
cmpsb
test
mov
cmpsl
push
pop
xchg
out
icebp
or
lods
sbb
cmp
iret
jns
dec
sbb
xchg
clc
loop
or
push
sbb
lcall
daa
xchg
xchg
out
cwtl
lods
test
mov
push
pop
xchg
in
jbe
push
out
stos
push
mov
adc
je
enter
outsl
xor
jg
mov
push
fimull
xor
mov
dec
out
mov
xchg
adc
mov
pop
add
inc
sahf
jnp
imul
xchg
insl
mov
pop
dec
dec
inc
adc
adc
cld
jg
popf
xchg
neg
push
pop
int
adc
sbb
or
shrl
mov
inc
gs
sbb
xor
mov
gs
xchg
push
data16
add
data16
movsb
sub
lea
sub
stc
in
adc
scas
pop
ja
pop
xchg
inc
fs
fwait
add
xor
enter
inc
sbb
test
out
shr
inc
lret
dec
notb
lret
call
cmp
fwait
mov
pop
out
mov
push
dec
xor
push
lock
mov
mov
aas
xchg
push
test
mov
das
jge
mov
pop
xor
std
stos
push
xor
mov
jecxz
clc
into
mov
sbb
out
cltd
cwtl
out
sub
lds
rcrl
lds
dec
imul
dec
iret
dec
cmp
iret
or
dec
shrl
cs
into
scas
mov
dec
dec
ss
js
xchg
lods
push
cmp
mov
scas
pop
outsb
fmuls
cmp
and
mov
sti
stos
pop
scas
sbbl
jo
push
push
dec
mov
imul
sbb
lods
xchg
and
mov
add
popa
or
lcall
addr16
xor
jp
dec
sbb
inc
push
call
lock
sbb
ret
push
sbb
mov
cmp
xlat
push
sahf
xorl
enter
dec
jl
nop
inc
cltd
enter
jge
and
stc
mov
cmp
leave
cs
or
mov
lods
lcall
inc
sub
sti
fidivl
jecxz
dec
mov
or
add
adc
adc
xchg
repz
push
arpl
pop
fbstp
fwait
add
shll
lock
lahf
sbbl
hlt
aam
push
repz
test
cmc
in
insb
jns
sahf
mov
jnp
mov
iret
es
insl
cmpsl
add
loop,pt
clc
std
pushf
or
cmp
fwait
mov
lds
fsubrs
fdiv
nop
jo
arpl
inc
push
imul
andl
xchg
imull
call
jo
sti
push
mov
rcrl
or
scas
cwtl
movsl
pop
jne
scas
xlat
insb
imul
aaa
mov
cmp
imul
sbb
mov
pop
outsb
inc
mov
mov
aad
mov
int
bound
add
dec
mov
icebp
das
mov
imul
ret
loopne
stos
inc
ret
inc
mov
lcall
xor
xlat
push
ljmp
les
mov
pop
mov
mov
push
aam
ret
loope
jnp
push
push
in
lds
icebp
mov
push
aaa
insb
scas
mov
fdivr
jl
aaa
mov
cmc
mov
loope
ljmp
sbb
test
xchg
test
sub
imul
push
sub
pop
sub
repnz
popf
mov
xchg
mov
loop
lret
mov
std
mov
sbb
shll
test
push
stos
clc
jns
nop
xchg
pop
scas
stos
or
pop
je
cmpsb
iret
lock
roll
add
inc
cld
adc
pusha
fisttpll
xchg
sti
mov
f2xm1
lds
fisubl
sub
mov
repnz
or
or
xchg
or
jmp
inc
lahf
adc
test
mov
pop
decb
jo
sub
daa
bound
das
sbb
xchg
sbb
stos
stos
clc
mov
cld
mov
jnp
xchg
sti
sub
notl
jnp
xchg
mov
mov
sbb
or
fstps
xchg
int
push
cmp
or
popf
fdivrl
sbbl
out
add
fldl
hlt
fnstsw
xchg
xor
dec
xor
fcoml
pop
loope
jno
jle
inc
shrl
lock
fsubs
ljmp
addr16
shl
movsl
jp
mov
adc
loope
inc
das
ljmp
mov
pop
cli
xor
cs
enter
jnp
or
lds
call
sbb
jne
and
pop
pop
adc
mov
lods
adc
pusha
test
xor
popa
mov
and
and
sbb
or
jo
push
jmp
cmp
test
mov
icebp
hlt
add
push
mov
imul
leave
fmuls
js
mov
xor
or
mov
enter
pop
push
pop
mov
lcall
push
inc
test
rcrb
loop
pop
gs
jne
adc
cmp
jno
fucomi
adc
pop
rcll
fcompl
adc
lret
not
in
andl
lcall
xchg
sub
or
pop
mov
aad
gs
js
test
mov
ffreep
adc
aaa
pop
in
inc
cltd
lea
mov
fmul
dec
mov
call
dec
mov
inc
fstpt
or
dec
xor
add
dec
rcl
pop
loop
vcmpss
cmp
inc
cmp
mov
mov
or
enter
mov
cmc
cld
or
scas
adcb
mov
das
pop
decb
lahf
adc
sub
sbb
ret
xor
int3
lods
inc
imul
sahf
arpl
and
mov
test
jl
addb
sbb
scas
xchg
mov
push
dec
int3
push
sub
sahf
aaa
stos
daa
lahf
inc
mov
pop
pop
jp
js
leave
bound
add
cmp
or
xlat
mov
pop
xchg
std
ljmp
push
int
mov
sub
test
inc
cmc
push
lahf
jne
dec
xchg
add
push
sbb
jle
aaa
jecxz
xor
mov
pop
fcoml
ja
subb
cmpsl
enter
pop
or
mov
fsubrs
inc
inc
mov
lcall
orl
ret
jge
and
mov
hlt
ja
imul
cmp
add
movsb
adcb
les
data16
dec
xor
mov
mov
sub
int3
lods
inc
dec
mov
mov
cmc
sbb
mov
pop
cltd
push
jmp
popa
xor
pop
test
gs
xchg
sar
and
call
in
int3
mov
pop
sbb
pop
out
divl
decl
or
sarl
cli
repz
lods
jae
fldl
jmp
jge
int
or
adc
push
fists
outsl
je
ret
mov
in
or
pop
ljmp
xchg
out
push
mov
aaa
popf
mov
mov
mov
xchg
push
cmp
inc
xor
dec
fistps
pop
cmpl
or
push
or
pop
loopne
int
xchg
jle
xor
mov
fwait
clc
pushf
sahf
aas
insb
pusha
push
mov
dec
mov
daa
icebp
and
inc
add
iret
jp
fwait
and
test
cmp
lea
pusha
in
mov
cmp
xchg
mov
fmul
push
jg
mov
adc
jp
das
jne
iret
jne
dec
push
lock
jg
dec
mov
out
push
cmp
jae
sub
mov
cltd
lahf
leave
test
stos
adc
mov
ss
cli
cmp
je
dec
movsl
into
test
or
lahf
insb
add
daa
scas
xor
lods
and
pop
lcall
cmp
pop
mov
ss
popf
mov
repz
fs
xchg
enter
dec
mov
imul
shll
pushf
pop
insb
dec
rolb
mov
cmp
clc
mov
lahf
pop
sbb
addb
jb
test
cmova
sub
arpl
in
scas
sub
pop
aad
or
or
cltd
push
out
pop
decb
in
loop
les
push
add
push
add
or
push
sub
inc
aas
dec
rcrl
and
subb
test
jge
sub
mov
imul
mov
out
push
cmp
shl
outsl
sahf
lods
inc
sbb
jmp
imul
aad
in
jmp
push
mov
inc
sarb
cmp
or
adc
std
decl
add
mov
sbb
push
ficoml
lret
xchg
mov
mov
dec
xstore-rng
cmpsl
ret
test
xor
fs
xchg
ficomps
xor
lret
in
pop
sub
mov
sbb
mov
push
xor
outsb
aam
fisubrl
out
repz
les
subl
mov
pop
or
xor
jno
bound
ret
scas
insb
rolb
lds
mov
jno
pop
adc
in
movsl
aam
mov
dec
add
repnz
lods
sub
push
dec
jmp
movsl
xor
or
inc
ret
adcl
sub
insl
mov
imulb
mov
aaa
cmpsl
jle
sub
xchg
dec
int
dec
lret
mov
jecxz
pushf
dec
lods
pop
call
stc
stos
mov
cltd
loopne
jl
shl
push
sarb
mov
dec
dec
add
pop
xor
cmp
in
sub
add
lods
jnp
out
cmp
jp
gs
inc
fiadds
sbb
add
mov
or
xchg
and
add
dec
mov
mov
mov
fistpl
mov
jns
pop
cwtl
js
clc
sbb
aas
jg
cwtl
sub
aad
xchg
xchg
mov
fsubrl
stos
stos
clc
repnz
cli
or
xchg
test
xchg
jne
mov
xor
ret
rcrb
pushf
pop
inc
pop
insb
jecxz
fdivrl
or
jle
mov
testb
addb
rcrb
jmp
dec
pushfw
push
leave
ret
cli
cmp
and
push
ja
pusha
xchg
inc
and
xchg
sbb
xchg
push
xchg
movsl
in
in
dec
fcmovbe
mov
jl
fs
jle
flds
cwtl
out
test
dec
xchg
mov
outsl
xchg
add
orb
fwait
repz
jne
mov
and
mov
or
cwtl
js
dec
inc
fadds
mov
insl
sbb
mov
iret
test
xchg
pop
jp
out
fisubrl
popa
loopne
rcrb
sub
in
popl
repz
xchg
sub
pop
mov
mov
mov
jnp
add
lds
repz
cwtl
add
scas
mov
shlb
xor
pop
pushf
shll
test
jae
pop
imul
jmp
insb
xchg
mov
and
and
out
mov
loope
lea
shrb
in
fsub
pop
sahf
scas
pop
cmc
or
fdivl
sti
dec
scas
pop
aas
cmpsl
push
xchg
adc
mov
out
lea
fsubrs
sbb
add
jae
adc
daa
enter
jnp
dec
repnz
insb
mov
sbb
and
int3
pop
add
inc
hlt
xchg
fwait
nop
push
mov
jge
sub
fistps
pop
cmpl
or
push
or
pop
loopne
int
xchg
jle
xor
mov
fwait
clc
pushf
sahf
aas
insb
pusha
push
mov
dec
mov
daa
icebp
and
inc
add
iret
jp
fwait
and
test
cmp
lea
pusha
in
mov
cmp
xchg
mov
fmul
push
jg
mov
adc
jp
das
jne
cmovge
ret
dec
mov
loope
push
cmp
jae
sub
mov
cltd
lahf
leave
test
stos
adc
mov
ss
cli
cmp
je
dec
movsl
into
test
or
insb
add
daa
scas
xor
lods
and
pop
lcall
cmp
pop
mov
push
aaa
popf
mov
repz
fs
enter
dec
mov
imul
shll
pushf
pop
insb
dec
rolb
mov
cmp
clc
mov
lahf
pop
sbb
addb
jb
test
cmova
sub
arpl
in
scas
sub
pop
aad
or
mov
and
push
out
pop
decb
in
loop
les
push
add
push
add
jmp
sub
inc
aas
dec
rcrl
and
subb
test
jge
sub
mov
imul
mov
loope
push
cmp
shl
outsl
sahf
lods
inc
sbb
jmp
imul
aad
in
in
and
neg
xchg
sarb
cmp
or
adc
std
decl
add
mov
sbb
test
jl
stos
mov
mov
cwtl
rcrl
xor
and
pop
cmp
insb
aaa
jecxz
sub
sub
xor
and
jbe
sbb
pop
or
pusha
push
inc
fstpl
loope
jmp
js
cld
divl
sub
pushf
add
repnz
adc
pushf
cltd
xchg
mov
push
mov
mov
ret
fwait
push
fwait
int
cmpsb
jge
mov
adc
hlt
divb
fwait
repz
iret
sub
mov
jnp
repnz
vmovntpd
xchg
push
fcmovb
bound
mul
xchg
movsb
rorl
jmp
mov
cmp
and
xor
cld
out
loop
xchg
test
fstl
inc
les
test
sub
mov
lea
sbb
imul
cmpsb
fadd
inc
mov
xor
xcrypt-cbc
cmpsl
rcr
test
lods
je
mov
mov
add
add
mov
dec
roll
popf
adc
xchg
lods
sbb
in
dec
and
or
add
sbb
dec
sarl
mov
xor
push
xlat
bound
adc
divl
inc
mov
dec
add
or
jno
mov
fsubs
inc
popf
mov
jmp
mov
dec
add
mov
mov
fucomp
insl
push
jno
push
in
pop
mov
xchg
cmpsl
mov
and
xlat
cli
aad
mov
push
push
mov
mov
dec
fs
jp
fxch
les
ja
sub
adc
ja
sub
sbb
mov
jecxz
and
stos
iret
pushl
xlat
add
dec
scas
jle
sbb
xchg
imul
push
in
mov
out
out
pop
test
cmp
test
cmpsb
fwait
cmc
push
iret
sbb
movsb
outsl
xchg
sub
dec
push
pop
subl
xchg
dec
mov
mov
sbb
cmpb
add
cmp
pop
sub
sbb
mov
fnstcw
xlat
clc
out
std
mov
ds
mov
pop
add
pushf
stc
mov
jnp
test
adc
inc
pop
xor
or
or
mov
cmc
cmp
inc
xchg
push
and
std
lods
rcrb
jns
sti
mov
sarb
repz
or
inc
cmp
int
pop
movsb
sub
mov
fstl
std
rcrb
pop
pop
pusha
fidivl
lock
es
mov
xchg
or
add
or
pop
jns
cmp
push
mov
or
jns
and
mov
push
pop
fs
xor
lcall
pusha
insl
add
or
movsb
enter
dec
lods
pop
mov
jnp
jecxz
or
imul
xor
inc
jg
lods
int
fcompl
outsb
cli
es
cmp
add
inc
mov
fstps
pop
cmp
and
std
int
cmp
adc
data16
rcrl
fistpl
mov
jns
dec
rcrb
jle
push
addl
fimull
mov
icebp
jnp
inc
and
pop
push
push
sti
arpl
pop
in
inc
cltd
subb
push
jne
popl
mov
and
mov
sbb
xchg
dec
icebp
add
movsb
gs
inc
movl
enter
jp
inc
loop
cmpsl
xlat
add
inc
cmpl
adc
sbb
mov
popf
lods
xor
add
mov
adc
xor
mov
nop
das
inc
aad
xchg
ficomps
dec
lea
popa
mov
mov
mov
aad
mov
xchg
jmp
or
jno
rorl
pop
addr16
clc
leave
stos
mov
lods
pushl
mov
jno
popf
arpl
std
mov
sti
hlt
sub
add
add
in
loop
in
movsl
aam
sbb
stos
std
aas
stos
inc
sub
inc
mov
rcrl
jp
jmp
inc
out
aaa
or
lret
loope
push
cmp
jge
cmp
les
inc
shlb
int
cs
mov
lds
fcomi
aaa
cltd
lods
push
arpl
mov
mov
cmp
repz
divb
pop
fstl
pushf
sar
cmpsl
sub
dec
negl
adc
into
dec
pop
loope
fwait
adc
mov
xchg
inc
push
push
cmc
movsl
dec
repz
cltd
enter
mov
int3
add
pop
sub
mov
fstpt
popf
inc
lret
int
aas
jp
int
lret
imul
mov
shrb
inc
mov
mov
mov
fistpll
ret
jl
jg
fbstp
test
pop
mov
mov
sub
sar
cli
aam
inc
mov
nop
and
cmp
lret
imul
stos
mov
sahf
push
loop
cmpsb
imul
push
sahf
xchg
cmpsb
movsb
inc
cmp
xchg
cmp
inc
push
xchg
test
inc
lock
fcoml
jl
dec
push
pop
cmp
adc
iret
fstp
pop
mov
loop
or
push
cmp
jle
cmp
test
pushl
mov
xchg
dec
jg
addr16
mov
sub
push
push
xchg
xchg
pop
mov
pop
test
es
pop
or
jb
sti
mov
push
xchg
dec
xor
add
enter
cwtl
hlt
cwtl
dec
inc
jae
je
hlt
pushf
dec
inc
dec
sahf
dec
mov
xor
inc
pop
divb
pop
out
xchg
mov
into
xchg
mov
pusha
shll
xchg
push
push
scas
cli
mov
mov
lahf
cld
test
xlat
cmc
xchg
fiaddl
mov
sub
les
stos
push
aas
dec
dec
fisubl
cmpsl
outsb
cmc
xor
jge,pn
mov
addb
sub
dec
jg
push
ja
pop
in
mov
jno
movsb
and
cmc
lods
and
cmp
mov
jo
cmp
push
mull
xchg
mov
xchg
out
in
scas
addr16
popf
cmc
xor
adc
lcall
pusha
insl
daa
lcall
popa
or
enter
rorl
shrb
inc
and
and
inc
push
jle
push
cmp
mov
rol
sbb
int3
mov
sub
repz
cmp
pop
mov
js
xchg
popl
dec
lahf
lds
add
cmpsb
mov
sbb
inc
cmp
data16
or
sub
aam
mov
inc
in
xchg
jecxz
mov
cmpsb
es
rcl
mov
dec
mov
jle
movsb
mov
loop
xchg
inc
stos
gs
jns
addb
imul
cli
push
inc
pop
and
inc
push
mov
adc
test
pop
test
push
inc
insb
jbe
jecxz
fistps
xchg
sub
pop
loope
add
xlat
in
addl
mov
clc
js
jb
pop
repz
lods
test
decl
adc
and
push
inc
and
fidivl
cli
mov
movsb
insb
lahf
inc
add
or
outsl
push
add
aaa
popf
mov
cmp
test
or
push
cmp
xor
gs
das
cmp
popa
mov
inc
in
inc
xor
mov
mov
pop
add
mov
fistpll
ret
fisttpll
les
mov
jo
fidivrs
inc
xor
pop
in
cwtl
push
les
sbb
or
push
or
mov
xchg
jl
mov
out
movsb
jl
lret
std
dec
and
push
jg
cmpsb
pop
outsb
into
in
pop
ret
push
mov
stos
push
sarb
jp
sub
inc
cmp
ret
xchg
jb
and
ljmp
ss
test
adc
insl
ds
mov
addr16
pop
int3
sbb
loope
lods
sahf
lahf
subl
dec
or
jb
add
jge
or
fdivrl
mov
sar
loop
pop
mov
cmp
pop
shlb
in
and
popa
gs
add
dec
push
pop
or
or
sub
mov
adc
in
cld
lret
jno
sbb
xchg
pop
dec
sbb
xchg
loop
outsl
insb
out
loopne
inc
cmpsl
pushf
pop
jg
in
cmp
xor
iret
loop
and
lock
icebp
ret
lret
dec
pop
xor
shl
ds
mov
push
pop
rolb
push
push
lahf
cmp
out
ljmp
push
stos
divl
fcomps
and
push
test
pop
pusha
mov
jmp
dec
lret
pop
add
in
mov
in
fistl
lds
inc
dec
icebp
xorl
enter
repz
lret
push
jge
insb
push
pop
xchg
ret
jge
daa
incl
xchg
bnd
xlat
adc
lahf
aaa
shll
pushl
sti
cmc
or
dec
int3
mov
jecxz
enter
mov
cwtl
dec
inc
lret
mov
imul
mov
rolb
inc
inc
dec
pop
repnz
loopne
pop
daa
psraw
adcl
inc
sahf
dec
xchg
lret
clc
jge
pop
dec
aaa
add
cwtl
mov
dec
insl
jecxz
mov
jmp
push
mov
dec
ret
out
loopne
push
push
stc
adc
inc
fcmovnbe
les
pop
bound
ror
jle
xchg
inc
mov
gs
push
jmp
sbb
pop
and
iret
adc
mov
dec
gs
mov
andb
mov
cmpsb
enter
lahf
jle
cs
testl
sbb
rcrb
stc
inc
in
scas
out
adc
ds
inc
cmp
cld
jp
stc
clc
pop
xchg
mov
mov
inc
mov
jns
out
dec
sub
jo
ret
fld1
jb
push
jnp
data16
movsl
xchg
dec
xor
adc
leave
xchg
jle
jl
jb
cmp
and
mov
icebp
add
xchg
pop
push
cmp
je
imul
inc
inc
idivl
mov
in
ja
les
cmpsb
jecxz
jne
mov
xchg
jno
mov
stos
pop
rcrb
sub
add
xchg
std
xor
fstpt
ja
push
push
rolb
stos
xchg
mov
sbb
outsb
or
push
pop
jbe
bound
aam
outsb
lock
stos
gs
push
jge
icebp
add
leave
les
mov
and
cmp
popf
test
jl
mov
adc
mov
shlb
jmp
fbld
test
dec
push
xchg
and
pop
dec
lret
push
mov
loope
mov
outsl
mov
in
sub
fnsave
sbb
fidivl
push
or
xchg
dec
push
in
aam
jae
dec
mov
icebp
add
add
shll
inc
inc
xlat
shlb
shlb
or
sub
mov
mov
adc
cmpb
pop
push
mov
mov
sbb
test
es
dec
pop
inc
fcompl
dec
and
jae
push
inc
and
xchg
sbb
pushf
dec
bound
xchg
mov
jno
test
lret
push
dec
cmpsl
push
mov
mov
lret
lret
add
adc
pusha
ficoml
mov
roll
mov
rcl
sbb
fwait
inc
jne
iret
pop
in
addl
mov
cmpsl
mov
sub
je
les
and
xchg
jbe
jp
cwtl
xlat
insb
imul
call
sub
dec
aaa
popf
popa
pusha
roll
hlt
xor
jmp
mov
add
or
mov
inc
lcall
cld
stos
add
scas
inc
pop
aad
lods
xor
mov
xor
adcb
xor
mov
mov
ss
mov
testb
adc
test
popa
push
shlb
sbb
test
movsb
push
dec
mov
adc
int3
pop
dec
cs
dec
dec
and
test
lcall
push
pop
xchg
xchg
std
push
gs
enter
sti
sbb
out
jnp
movb
cmc
inc
cli
mov
push
insb
leave
ja
pusha
xchg
mov
push
inc
and
icebp
pop
fstp
divl
xchg
xchg
mov
daa
mov
and
xchg
jg
test
and
and
icebp
sub
loop
push
fistps
les
stos
push
mov
aas
adc
dec
daa
inc
dec
sbb
sbb
mov
out
add
add
xchg
in
jmp
jns
icebp
das
adc
or
sti
jecxz
or
fs
sub
lahf
movsl
sti
push
xor
dec
push
in
push
push
lds
jo
pop
iret
rcrb
sub
cmp
push
dec
bnd
xchg
pop
and
push
sub
test
ljmp
mov
pop
mov
out
test
sbb
sahf
shll
cmp
mov
sti
lret
cld
dec
fs
out
lods
rolb
inc
fbld
fs
cmp
sub
dec
lret
pop
add
in
mov
in
fistl
lds
inc
dec
icebp
xorl
enter
repz
lret
push
jge
insb
push
pop
xchg
ret
jge
daa
incl
xchg
bnd
xlat
adc
lahf
aaa
shll
pushl
pop
pop
sbb
xor
sbbl
shrb
xchg
jmp
mov
mov
shl
pop
and
sbb
pop
mov
mov
jae
sbb
add
stc
sysenter
lcall
hlt
test
jns
decl
mov
xchg
sbb
ret
push
xchg
ljmp
mov
pop
add
stos
in
fisttps
shlb
xor
cld
arpl
jbe
jns
pop
adc
inc
scas
xchg
ficompl
push
or
inc
or
cltd
dec
out
cmpsl
mov
add
cltd
mov
fs
inc
in
push
aad
andl
push
jne
rolb
arpl
add
push
fsubs
stc
mov
fdivp
fidivrs
stos
lds
push
movsb
int
ja
repz
mov
iret
cmpsl
pop
add
jb
pop
out
mov
data16
gs
jo
cmp
sub
repnz
cmp
leave
lret
mov
repnz
rcrb
cmp
inc
int3
push
incl
pop
xor
cld
pop
pop
cmpsl
adc
lcall
xchg
std
lcall
push
sbb
add
mov
mov
bound
loopne
insl
jmp
stos
das
mov
and
push
mov
je
dec
test
mov
hlt
xchg
xor
push
subb
mov
gs
or
hlt
dec
dec
in
mov
inc
pop
stos
stos
push
push
movsl
aad
outsl
push
mov
dec
fs
jle
cltd
jb
xor
cmpsl
loopne
inc
fidivl
std
jecxz
push
mov
inc
icebp
das
inc
inc
ficoms
jl
mov
sbb
pop
in
jae,pt
je
filds
mov
aam
cltd
pop
lods
xlat
mov
mov
xchg
sbb
pop
call
fmuls
cmp
mov
add
fisubrs
pop
mov
inc
mov
stos
mov
jne
adc
pop
stos
les
les
add
out
cmp
xlat
sahf
in
lret
mov
std
je
mov
shl
in
mov
pop
fwait
adcb
mov
xchg
lea
mov
sub
lahf
sub
dec
fildll
push
pop
into
lret
pop
cmp
pop
lahf
lea
inc
repz
addb
mov
push
xchg
push
adc
pop
scas
dec
cmp
orl
lahf
fwait
xchg
inc
pusha
out
shr
in
shll
and
mov
sub
mov
out
adc
nop
pop
test
mov
addr16
pop
popf
fistps
sahf
imul
adc
push
mov
xchg
outsb
into
mov
iret
insl
mov
pop
std
call
cmpsb
inc
xchg
inc
cmp
insb
xchg
in
dec
sahf
dec
inc
xlat
leave
jnp
sahf
sbb
add
dec
or
inc
je
loopne
mov
clc
call
cltd
iret
lock
pop
dec
aaa
add
ret
mov
sbb
gs
test
xchg
arpl
mov
jne
mov
shll
inc
xchg
cmp
frstor
jns
bound
mov
pop
jno
or
xchg
shll
adc
pop
fsubl
popf
icebp
popf
test
lcall
rorl
aad
jmp
sub
jbe
add
jns
or
fdivrs
mov
add
jns
int3
sti
jecxz
addr16
test
jmp
jmp
and
inc
cwtl
or
mov
movsb
inc
xchg
mov
xlat
ja
pop
into
sbb
mov
scas
lahf
jle
mov
rorb
test
inc
ss
adcl
mov
xlat
aaa
push
adc
or
jne
fcmovnb
cld
pusha
mov
push
sbb
or
jae
in
mov
insl
mov
pop
dec
dec
inc
adc
push
mov
xchg
aad
push
pop
int
adc
sbb
or
shrl
inc
dec
and
inc
gs
jae
sbb
dec
pop
jno
add
pop
outsb
fcomps
scas
push
cmp
shrb
xor
mov
fcompl
mov
jnp
dec
cmp
ret
mov
popf
sub
jp
xor
fs
lds
or
movsl
dec
inc
test
inc
xor
adc
cmc
and
cmpsb
cmp
ret
adc
dec
mov
test
jge
cmpsb
mov
jo
popa
bound
xor
cs
mov
jb
push
aas
adc
lret
clc
sub
cs
inc
pushf
neg
or
push
andb
sub
inc
fnstcw
or
rolb
in
ret
mov
sbb
pop
int
dec
or
add
pop
leave
cmp
xor
ret
insb
sub
push
dec
jb
sbb
pop
xor
stos
nop
sbb
stos
movsl
and
dec
mov
mov
xchg
mov
repz
sub
lods
ja
and
divb
sub
jne
inc
mov
pop
call
cmpsl
jno
sti
add
test
roll
movl
nop
xchg
xchg
jl
pop
ljmp
fstpt
sahf
jg
mov
test
jno
add
pop
dec
mov
fistpll
movsb
les
mov
pop
ljmp
pop
mov
mov
add
aaa
imul
mov
pop
mov
pop
scas
mov
push
inc
cmpsl
dec
loopne
popa
je
jne
or
and
or
xor
sbb
adc
rcll
ret
loop
sti
pop
sti
divb
add
mov
pop
cmp
add
stos
inc
add
mov
sbb
test
xor
rcrl
xorb
mov
icebp
pop
cwtl
inc
and
xchg
sbb
test
push
aas
repz
cmp
mov
lds
aad
std
mov
dec
jns
inc
flds
push
xchg
cltd
data16
xor
dec
sbb
mov
sbb
cmpsl
aaa
cwtl
hlt
cld
jle
mov
sub
imul
ljmp
mov
cli
adc
out
ja
fildll
jl
es
in
pop
mov
out
inc
popf
cmp
or
add
and
jl
add
mov
sbb
dec
int
test
or
or
push
test
rcr
dec
pop
mov
mov
mov
xchg
xor
lahf
in
lods
es
sub
sbb
test
lcall
xor
lds
and
push
shl
ficoms
cmp
lret
daa
outsl
cmp
cmp
push
shll
push
imul
aam
adc
sub
push
xchg
repz
sbb
iret
push
dec
push
inc
cmc
pop
jl
adc
sub
outsb
add
push
xchg
fisttpl
or
addr16
cli
dec
or
inc
add
sti
in
movsl
adc
add
cmpsb
pop
icebp
fsubrs
out
jecxz
mov
jo
inc
inc
sub
push
cld
cltd
outsl
inc
rcrl
xchg
mov
icebp
push
movsl
sub
mov
in
add
repnz
movsb
es
rcrb
popa
sub
adc
rcrl
or
ficomps
xor
int
rcrl
pop
xor
add
pop
push
pusha
lods
push
setae
rorb
add
shl
mov
cmp
fwait
sbbl
pop
divl
add
movsl
mul
lods
sub
sub
test
and
sbb
xchg
outsl
dec
ficoms
aad
dec
cmpsl
xchg
test
lods
test
cmpsb
lret
add
dec
sbb
pushf
pop
mov
leave
jns
dec
sbbb
cmpsb
inc
fdivrl
jmp
push
pop
inc
jo
and
mov
push
inc
and
push
adc
mov
shlb
jmp
fbld
test
dec
push
xchg
and
pop
dec
lret
push
mov
loope
mov
outsl
mov
in
sub
imul
shrb
movsb
jle
fdivrs
jmp
or
mov
out
add
add
xchg
in
jmp
jns
icebp
das
adc
or
sti
jecxz
or
fs
sub
lahf
movsl
sti
push
add
jo
sbb
insl
adc
lret
mov
sbb
stos
cwtl
or
xor
mov
or
jne
cmpsl
mov
fimull
or
xor
push
mov
orl
jp
sbb
mul
lds
fildl
outsl
lret
stos
pusha
int
test
cmp
or
aad
mov
sbb
xchg
cmp
add
inc
fcoml
jg
sbb
sbb
add
add
push
pop
adc
mov
lret
mov
push
sarl
inc
sbb
sahf
jne
jge
jmp
and
cld
mov
loopne
xchg
imulb
popa
rcr
lds
loop
pusha
jbe
xchg
cmp
adc
jnp
sub
cmp
inc
xchg
sti
or
in
andb
mov
inc
pop
shl
ja
fnsave
rcll
fsts
nop
shr
stos
sahf
xor
icebp
add
rorb
rcr
jmp
dec
cmc
test
lods
jo
popf
mov
push
dec
sbb
jns
xchg
aam
xchg
daa
jno
cltd
mov
adc
cmpsb
mov
ljmp
xchg
sti
xchg
out
mov
add
mov
cmp
outsb
pop
mov
jmp
xor
leave
loop
add
pop
fstp
divl
xchg
xchg
mov
daa
mov
and
xchg
jg
test
and
and
icebp
sub
loop
push
fistps
les
stos
push
mov
sub
xor
popf
xchg
mov
adc
pop
adc
aad
stc
cmp
lret
sti
jecxz
iret
pop
xor
negl
dec
xor
scas
mov
cmp
pop
mov
add
add
push
subl
ja
sbb
call
mov
fnsave
hlt
mov
cmp
movsl
leave
pushf
imul
xchg
stos
les
sbb
cmp
add
lods
sub
pop
mov
mov
mov
mov
mov
imul
lahf
adcb
and
dec
add
jae
rol
adcl
clc
jb
mov
rol
sub
shlb
inc
shlb
vmulss
mov
jne
cli
or
cmp
icebp
mov
movb
xchg
test
arpl
fs
sbb
or
in
jge
add
mov
js
mov
xchg
inc
pop
sbb
adc
or
cwtl
pop
add
mov
inc
pop
rorl
add
out
pop
adc
repnz
push
incl
mov
mov
imul
dec
pop
push
fistl
addb
mov
push
dec
xor
insb
xchg
pop
std
lods
mov
cld
cmpsl
jae
test
mov
mov
dec
pushf
mov
mov
sbb
stc
mov
mov
in
pusha
hlt
adcl
add
xchg
test
adcl
sbb
mov
stc
divl
xor
call
cmpsl
dec
icebp
pop
xchg
jmp
add
jns
fwait
xor
rcrl
jae
cld
orb
and
rcrl
cmp
pop
mov
ret
jp
pop
daa
je
mov
push
imul
jne
sbb
or
add
rcl
jns
xor
jg
mov
xor
popa
mov
and
and
sbb
or
jo
push
jmp
cmp
test
mov
icebp
hlt
add
push
mov
imul
leave
fmuls
js
mov
xor
aas
dec
subl
rclb
push
dec
fistpll
sub
fisttps
leave
push
mov
fwait
xor
insl
and
add
add
clc
jae
adc
pop
jp
add
addr16
xchg
mull
test
pop
std
test
imul
rclb
mov
sarb
sti
jns
push
sbb
dec
ds
xchg
in
loope
jb
daa
int3
out
jnp
sub
aas
mov
sub
inc
pop
bound
mov
or
jmp
stos
fidivl
jmp
movsl
sarl
cmp
fwait
inc
pop
loopne
mov
movb
lea
adc
mov
pop
mov
add
mov
push
mov
lret
imul
test
stos
inc
mov
inc
lcall
fnsave
dec
jae
mulb
xor
cli
test
xchg
jge
sbb
shlb
pop
out
xorl
mov
or
adc
hlt
xchg
cmp
xchg
mov
ficomps
sbb
fwait
add
xchg
hlt
repnz
pop
cmpsl
xlat
jmp
dec
sbb
lret
cmp
insb
incl
out
inc
and
inc
fsubl
orl
inc
test
dec
les
dec
outsb
aaa
sbb
cwtl
mov
push
test
add
xchg
cmp
or
pop
test
adc
or
fisttps
sbb
mov
leave
or
mov
rorb
xor
pop
movb
inc
imul
test
shl
mov
jmp
arpl
mov
loope
lahf
fucom
dec
inc
aad
test
test
int3
ljmp
lods
and
cwtl
pop
xchg
jmp
lcall
mov
add
cltd
mov
fs
inc
in
push
aad
andl
push
jne
rolb
arpl
add
push
fsubs
stc
mov
fdivp
fidivrs
stos
lds
push
movsb
int
ja
repz
inc
test
daa
dec
enter
pop
mov
decl
test
jb
popf
mov
int3
add
mov
adc
ss
pushf
aam
iret
mov
repz
movsb
testl
pushf
mov
lret
sub
inc
add
outsb
add
inc
adc
mov
shll
enter
xchg
dec
push
fs
push
xchg
mov
push
leave
dec
xlat
dec
push
push
xchg
subb
icebp
sbb
dec
out
push
fwait
jmp
jno
mov
push
lret
idivb
lret
sti
imul
jmp
es
lds
xor
mov
mov
push
jbe
xchg
jns
push
icebp
dec
jbe
mov
lods
inc
sbb
ficoms
pop
jp
js
ftst
mov
xchg
mov
sarl
aas
sahf
ljmp
imul
js
les
seto
pop
push
ret
or
inc
inc
mov
push
pop
push
cmp
mov
sbb
dec
jb
jns
pop
jmp
cmpsb
dec
cmp
fcomp
jns
sbb
mov
dec
mov
mov
pop
jne
nop
pop
jl
and
push
and
mov
mov
enter
add
sub
sbb
adc
mov
xchg
sti
pop
xor
iret
icebp
dec
sbb
mov
jle
jne
cmpsl
mov
fimull
or
xor
push
mov
orl
jp
sbb
mul
lds
fildl
outsl
lret
stos
pusha
int
test
cmp
es
mov
adc
iret
jns
dec
sbb
xor
insl
loopne
sub
cmp
fsub
mov
shlb
in
lcall
arpl
pop
mov
adc
leave
sub
push
mov
push
jmp
ret
stos
movsb
insb
lahf
inc
pop
mov
jb
sbb
mov
sbb
add
mov
and
stos
fisubrs
lret
jmp
lret
popf
jns
cmp
pop
subl
sub
pop
push
into
inc
mov
fmuls
jns
and
scas
pusha
test
sub
call
insb
movsl
cmp
pop
lea
dec
mov
hlt
sub
ret
ds
jmp
jge
test
jne
inc
add
push
and
sahf
lds
xchg
mov
inc
pop
lcall
insl
adc
push
sarl
xchg
rclb
fdivr
push
dec
fsts
cmp
xchg
jp
in
pop
dec
push
aad
fwait
data16
enter
mov
jg
add
orl
lcall
decl
adcb
xchg
cmp
lret
inc
dec
aam
pushf
cmpsl
lock
stos
xchg
je
inc
push
inc
cmp
bound
gs
xlat
or
sbb
jo
jl
pop
push
mov
dec
test
cwtl
lds
xor
mov
outsb
ljmp
ss
and
fwait
shlb
out
cmc
adc
xor
shrb
ret
inc
adc
leave
rol
jmp
mov
mov
icebp
push
aad
or
sbb
jo
mov
push
loop
and
pushf
add
es
int3
pop
push
repnz
add
mov
and
popf
sbbl
push
jae
mov
dec
out
xor
imul
jle
xchg
mov
inc
aaa
ret
jp
mov
fucomi
bnd
int3
xor
mov
andl
out
into
inc
cld
mov
sub
fwait
bound
movsb
mov
fiadds
add
sub
cli
jecxz
inc
cmc
lret
ljmp
and
ja
std
cvtpi2ps
shll
or
sbb
and
cmp
push
pop
cld
sub
lahf
cmp
fsubrl
int3
sbb
roll
dec
mov
roll
xchg
iret
sbb
jnp
cmp
jecxz
imull
lahf
dec
test
arpl
push
leave
iret
cmp
mov
in
out
lods
shlb
movsl
popf
fnstcw
mov
pop
cmp
inc
mov
test
or
stc
scas
rcrl
cmp
mov
aaa
movsl
and
test
add
lcall
nop
fldl
dec
scas
mov
mov
pop
jp
ret
sub
jno
lds
test
mov
add
fistl
jb
sti
sub
mov
icebp
push
lcall
mov
int3
out
mov
and
clc
pop
push
das
test
ljmp
cwtl
das
call
insb
lock
stc
xlat
push
aam
mov
or
and
mov
shrb
test
or
dec
mov
mov
xor
lock
fwait
scas
inc
push
aad
add
adc
xchg
and
mov
std
dec
add
mov
ss
test
mov
or
out
mov
lds
loopne
add
mov
test
stos
pop
popa
jmp
sbb
mov
repz
mov
rcr
mov
push
cmp
mov
push
cmp
test
xchg
shrl
js
arpl
gs
or
sub
push
jl
sbb
js
ds
xchg
mov
mov
xchg
ljmp
add
clc
dec
cwtl
in
mov
cmp
in
movsl
cli
mov
mov
dec
pop
push
jne
dec
jp
movsl
rcrl
pop
fistps
xor
mov
push
xor
push
sti
sub
repnz
in
push
mov
or
lahf
sub
adc
roll
fs
mov
loopne
sahf
aas
jmp
negl
inc
test
mov
rcll
lds
mov
je
data16
ds
sub
push
cmp
das
mov
hlt
test
mov
lahf
cld
repnz
xlat
lcall
mov
push
inc
and
xor
js
xchg
add
addl
iret
int3
dec
xor
inc
inc
push
mov
fwait
inc
lret
arpl
xchg
inc
fisubrl
xchg
js
loope
sahf
add
shl
sbb
inc
jmp
andb
lret
dec
popl
dec
pop
lret
pop
mov
test
or
adc
xchg
ret
push
cmp
and
movsl
fcmovb
push
out
cmp
addr16
inc
adc
jecxz
inc
cmc
adc
or
xor
inc
std
andl
mov
daa
pop
pop
adc
add
lret
popa
pop
lea
in
mov
push
push
add
iret
sbb
in
cmp
sub
frstor
fldt
insl
xchg
sbbb
icebp
xor
ss
aad
dec
mov
aaa
mov
test
and
int3
stc
js
scas
pop
ficompl
cmp
add
stc
mov
js
or
sub
shlb
clc
dec
mov
bnd
xchg
mov
mov
mov
mov
je
push
rcll
jg
add
xchg
or
clc
jbe
lahf
mov
js
rcrl
xchg
or
or
pop
cli
jg
inc
jge
imul
popf
jmp
xor
mov
mov
push
test
jl
iret
dec
sbb
mov
sbb
ja
out
andl
rclb
lds
nop
jp
add
xor
xchg
push
mov
xor
enter
ret
enter
lret
das
xchg
sub
mov
or
adc
mov
cmp
nop
pop
adc
dec
mov
lret
imul
les
sbb
mov
inc
push
cmpl
push
mov
stos
and
jbe
jp
retw
adc
cmc
add
test
sbb
lcall
pop
test
lods
inc
inc
mov
mov
mov
bound
adc
loop
out
enter
or
scas
pop
mov
shlb
dec
ficompl
jle
popf
jns
inc
lret
lret
fnstcw
pop
out
xor
xchg
lret
fwait
jge
and
outsb
dec
fldt
dec
pop
aas
orl
sbb
xor
or
dec
push
or
iret
or
enter
mov
in
aaa
push
push
xor
jge
filds
popf
je
mov
mov
adc
or
mov
inc
jmp
aaa
shrl
pusha
cmp
sti
jp
inc
mov
xor
fstpl
or
xchg
add
mov
stos
push
and
mov
in
fisttps
out
and
push
inc
testb
sbb
sbb
in
adc
movsl
xor
ljmp
fldenv
mov
daa
out
nop
out
push
or
cmp
std
cli
jnp
inc
mov
cwtl
add
or
push
les
ror
addr16
sti
adc
or
mov
aad
dec
cmpsb
ret
testb
fucomi
hlt
std
mov
sti
and
sbb
jecxz
mov
mov
aad
add
mov
sti
push
test
jmp
xchg
adc
mov
jmp
ds
cmc
jnp
sahf
rol
or
jo
and
pushf
mov
pop
ret
xchg
nop
cmp
test
in
stos
inc
mov
les
push
or
int
mov
inc
imul
add
xchg
sbb
adc
or
and
add
jp
add
fwait
add
jecxz
fwait
cmpsb
enter
lahf
jle
scas
pop
icebp
sbb
add
xchg
int
jo
shlb
test
sub
in
adc
rcll
or
xor
adc
pop
lods
push
sub
clc
xchg
scas
enter
xchg
add
fnstenv
cltd
lea
mov
sbb
stc
or
nop
test
stos
jbe
jmp
sbb
mov
mov
jbe
dec
ja
lret
add
dec
mov
imul
xor
mov
aaa
inc
cmp
sub
fdivrs
dec
inc
pop
cli
inc
mov
cltd
and
repz
rclb
sub
imul
cmp
scas
mov
sti
fisubl
dec
popf
ljmp
lcall
nop
daa
sub
jne
or
testl
adc
pop
xchg
jbe
mov
xor
leave
cmp
jge
push
xchg
sub
popa
sbb
in
cmp
mov
xor
pusha
mov
out
push
mov
push
push
in
mov
xlat
inc
mov
sti
pop
fld
jp
pop
fdivrl
fdivrs
cltd
mov
inc
imul
mov
rcrb
cmpsb
mov
xor
scas
int3
sbb
stos
mov
mov
in
and
sub
mov
fidivrs
out
push
roll
sub
pushf
addl
bound
cwtl
sbb
test
jne
jns
aas
cmp
test
lret
sbb
dec
mov
cmpsb
pop
or
mov
popf
lret
and
leave
jp
mov
push
out
movsl
mov
or
xor
sub
pop
pop
pop
xchg
mov
out
ret
js
mov
fcomip
je
fs
inc
push
lret
cmp
jae
or
repz
adc
add
push
xchg
stc
xchg
mov
push
fdivs
dec
mov
not
push
pop
push
ficomps
dec
daa
sahf
add
pusha
jo
ret
shr
mov
sti
shl
std
xor
lock
mov
or
adc
sub
test
ret
add
xchg
popf
fcompl
pop
jecxz
or
xor
sub
pop
loopne
inc
movsl
aas
cltd
mov
std
or
lcall
dec
outsl
mov
add
rorb
cwtl
movsl
or
cmp
andb
leave
test
fsubr
or
xchg
jno
popf
dec
cmp
xchg
sbb
repnz
xor
adc
mov
out
and
xchg
outsb
stos
std
adc
pop
inc
roll
inc
lahf
pop
lea
fidivrs
add
fstpl
jmp
adc
jne
lock
mov
mov
rcpps
pop
jns
shrl
dec
cmp
lods
lcall
push
loopne
fidivrs
mov
imul
xorl
mov
mov
cmp
pop
push
lds
les
jmp
ljmp
fucomip
les
loopne
fistl
pop
xlat
bound
shlb
rcrb
adc
adc
ffreep
push
add
and
leave
into
enter
bound
in
jns
ror
pop
lret
inc
push
push
out
rcll
pop
push
bound
sub
imul
test
mov
sbb
sbb
mov
jnp
sbb
adc
xchg
cmp
cmp
mov
cmp
mov
dec
cmp
repz
sbb
rorb
in
sbb
inc
pop
adc
jo
rclb
cmp
dec
notb
push
call
lock
inc
add
test
cmp
in
jb
fwait
out
adc
jbe
popf
bound
loop
je
cmp
aaa
imul
or
xor
insl
roll
xor
and
xor
cmpsb
inc
repz
pop
mov
test
add
push
sbb
mov
cltd
adc
mov
cmp
imulb
add
xor
and
xor
push
ret
mov
mov
out
push
push
mov
sar
jg
sahf
mov
popf
lret
iret
xchg
test
in
test
sbb
xor
xor
mov
adc
clc
push
jle,pt
fcmovnb
adc
cld
push
dec
push
push
pop
in
jp
pushl
rorl
sbb
call
out
imull
and
mov
push
je
cmpsb
data16
dec
xor
adc
mov
fwait
cmpsb
fcomp
ja
lea
enter
mov
xchg
in
or
sbb
add
andb
js
sbb
push
lret
int
inc
sbb
mov
shlb
ljmp
shll
aam
subl
mov
test
push
sbb
sub
mov
lock
jg
movsl
std
or
sub
sub
arpl
lahf
xor
rorl
lahf
add
popf
push
mov
fs
movsl
dec
pop
lret
shr
je
fnstenv
add
and
sbb
add
xchg
xchg
dec
cmpsl
imul
adc
lods
cmc
jne
fldlg2
mov
lods
jae
cmpsl
test
hlt
add
dec
push
push
sbb
jp
inc
mov
adc
inc
rclb
cmp
aaa
rcr
mov
inc
cwtl
jle
nop
mov
insl
lret
fdivs
std
cmpsl
jnp
add
popa
aaa
rol
fwait
jb
jns
cmpsl
sub
jno
enter
incl
jns
cli
scas
pop
cmp
mov
mov
pop
mov
shr
rep
xor
mov
repz
mov
dec
sbb
push
mov
inc
cmp
add
or
leave
mov
xor
ljmp
mov
adc
push
test
cwtl
mov
test
mov
sar
bound
sti
stc
cli
in
test
sub
dec
xor
mov
scas
xchg
stos
lds
cmp
jg
push
das
lret
jne
leave
sub
sbb
ficoms
jle
das
cmp
sbbl
sub
or
imull
mov
je
filds
les
fwait
xchg
imul
xchg
jle
xchg
sbb
cmpsl
sti
dec
cmc
mov
mov
push
stc
shll
and
and
mov
inc
adc
sub
movsl
mov
mov
mov
pop
dec
and
cmp
and
mov
test
fwait
mov
mov
inc
jnp
mov
add
pop
mov
sub
iret
cmpsl
mov
ret
push
lods
xchg
sub
adc
shrl
sbb
dec
cmp
popf
lret
sti
shrl
dec
es
add
cwtl
lds
xchg
stos
std
cld
dec
mov
test
js
pop
push
sti
cmp
pop
test
fcompl
mov
pusha
mov
in
and
xchg
test
jnp
inc
mov
mov
rcll
add
sub
push
mov
call
addr16
movsb
cli
xor
cmpsl
test
cmp
cmp
enter
jg
push
mov
dec
sahf
or
stos
cmp
hlt
stc
mov
out
pop
pop
xchg
jb
or
mov
xor
loop
push
mov
repz
lret
fidivs
or
js
shrb
mov
add
movsb
lahf
mov
cltd
xor
sahf
inc
lods
aad
jmp
lret
pop
adc
test
pop
jo
das
lret
jmp
pop
or
or
mov
inc
stos
aam
sub
inc
sbb
inc
jae
addr16
xchg
sbb
push
std
xor
dec
inc
inc
push
jp
pop
test
push
fimuls
xchg
inc
ljmp
movsl
aam
jo
andl
addl
mov
inc
test
imul
icebp
xchg
data16
jg
out
add
aad
repz
jne
mov
xchg
jns
gs
fldpi
inc
lret
aas
shlb
test
push
or
icebp
je
push
popf
mov
sbb
dec
mov
int3
pop
jp
arpl
pop
movsl
pop
movsl
jmp
aas
sub
test
inc
cmp
cwtl
mov
sbb
jbe
ret
mov
jmp
ss
jbe
lret
movsl
ret
popf
fcoml
mov
stos
mov
add
inc
sub
mov
leave
test
mov
jae
jge
dec
pop
fmul
arpl
inc
rcr
sbb
fsts
pop
push
add
add
pushf
stos
cmpsl
adc
cli
push
mov
xchg
int3
scas
adc
sub
mov
cmc
add
xchg
jns
or
pop
fmuls
clc
sub
fisubs
sar
jo
jge
inc
dec
inc
les
rclb
push
aam
ret
push
push
popf
or
fdivl
fbld
jcxz
call
cmpsb
in
out
cmp
and
dec
mov
or
cs
ret
dec
inc
sarl
mov
jbe
dec
shrb
imul
sbb
mov
imul
ss
mov
mov
movsb
bound
imulb
mov
cwtl
or
xchg
test
cmp
leave
mov
fsts
imul
or
jae
fisttpl
iret
add
cmc
fcomi
mov
ret
or
or
mov
movsl
sbb
add
push
mov
lods
mov
ja
cmpsb
loopne
cmpsl
dec
cwtl
jp
sub
xchg
push
jmp
cmp
add
jecxz
mov
sbb
mov
dec
and
xchg
fdivs
and
repz
inc
push
adc
cli
xor
push
cltd
notb
mov
movnti
and
cltd
or
mov
shr
mov
and
aad
sub
dec
ja
xor
mov
call
pop
movsl
popa
enter
dec
and
sbb
jns
add
cs
or
lods
or
inc
aas
daa
ret
dec
cmpsl
xchg
push
hlt
lods
jno
mov
in
dec
sbb
inc
dec
and
fiaddl
jae
or
lods
sbb
sub
wrmsr
push
data16
scas
ja
test
lcall
lock
mov
std
push
lods
aad
lds
inc
fdivl
jmp
fcmovnb
js
jle
cmp
fwait
leave
xor
push
popa
or
and
or
or
push
push
and
popl
mov
stc
repnz
xor
lret
push
mov
cltd
stos
sarb
sahf
jbe
cmp
pop
fdiv
dec
push
and
cmp
inc
inc
mov
sbb
adc
xor
mov
int
sahf
mov
cltd
fiadds
int3
mull
rcrl
cmp
ret
mov
push
pop
add
orl
mov
mov
dec
inc
aas
sbb
or
mov
into
stos
xchg
jo
cs
sbbb
jno
test
fsubl
jns
sub
sahf
cmp
negl
cs
adc
sub
sbb
xchg
adc
cmpl
xchg
lret
jl
fistpl
cltd
jb
adc
rclb
lock
scas
std
fxam
cmp
xlat
call
rclb
sarb
clc
xchg
enter
pop
rclb
dec
sarb
inc
mov
lods
mov
imul
pop
inc
mov
imul
mov
shll
cmpsb
je
seto
ret
loope
mov
pop
pop
pop
push
test
lret
pop
test
sbb
int
clc
movsl
push
sarb
out
mov
stc
cli
jno
div
cmp
pop
adc
add
rcrl
mov
xor
and
arpl
sbb
sarb
jge
rcr
cmp
fsts
mov
inc
lahf
stos
sbb
fs
shr
cmp
mov
push
cld
imul
push
xchg
jge
mov
stos
pop
mov
ficomps
xchg
sbb
pop
ret
pop
fstl
pop
xchg
jl
sub
mov
cmc
add
pushf
repnz
lret
jl
popf
test
sub
push
or
cmpsb
dec
xor
xchg
mov
push
mov
jl
and
fld1
jb
cmp
out
enter
es
jnp
enter
cwtl
stc
and
mov
xchg
xchg
push
xchg
int3
sahf
mov
inc
ljmp
adc
inc
stos
repz
adc
not
div
cmp
pop
adc
shl
jmp
mov
adc
and
inc
or
mov
jbe
xchg
jo
cs
sbbb
jne
mov
test
cwtl
xor
sbb
add
jns
mov
popf
lret
mov
cmp
lret
lahf
xchg
test
dec
jmp
mov
fisubrl
rorl
outsl
or
lock
sub
sbb
in
pushl
fchs
pop
mov
cmp
repz
out
idivl
jmp
or
mov
lds
or
dec
xor
imul
lret
fisubl
movsl
or
xchg
cltd
out
xor
out
cmp
mov
pop
sub
inc
jb,pt
inc
test
cwtl
mov
mov
cltd
insl
xor
fwait
mov
rcrb
cmp
mov
sbb
pop
hlt
dec
or
jl
push
hlt
jb
mov
enter
add
xorb
jp
xor
and
lods
mov
dec
sarb
pop
mov
movsb
sbb
sbb
push
and
filds
push
pop
in
mov
pop
sub
xchg
add
xchg
lods
outsb
lods
sub
xor
sub
ja
lds
cwtl
fstl
cmp
sub
sahf
inc
pusha
push
pop
inc
in
js
into
scas
call
mov
or
leave
or
mov
push
jo
xor
data16
sbb
fsub
stc
mov
and
sub
push
sub
cmpsb
fsubrs
pop
lret
mov
mov
mov
data16
je
or
inc
ds
dec
gs
or
dec
adc
mov
inc
mov
in
jo
idivl
dec
loopne
mov
inc
sarb
mov
lods
std
fists
sti
mov
adc
inc
dec
push
add
fs
sub
xor
test
or
sbb
mov
pop
out
mov
xchg
inc
outsl
cmp
cmp
ret
add
or
push
xor
or
add
rorl
fwait
lods
mov
mov
leave
push
mov
push
mov
pushf
addb
cmc
xor
mov
andl
xchg
mov
rol
sbb
add
imul
sub
cmpsb
enter
mov
cmp
xorl
out
mov
push
or
cmc
adc
push
adc
or
idivl
pop
loopne
cmpsl
mov
lods
orl
pop
bound
jecxz
push
inc
sbb
ret
sbb
jl
mov
mov
fisttpl
xor
rcr
xlat
leave
lahf
dec
cwtl
inc
lods
push
sub
pop
pop
sbb
iret
mov
mov
ffree
xchg
mov
mov
jl
or
inc
pop
subb
push
push
mov
outsb
stos
jge
pop
mov
or
or
pop
fcoml
dec
lahf
scas
movl
leave
cld
hlt
imul
aas
gs
sbb
into
pop
mov
xchg
mov
push
loope
or
jns
stos
sub
cmpsb
call
push
call
cmpsb
add
cwtl
fsub
out
cli
je
or
inc
jp,pt
dec
mov
aad
pop
push
mov
cmp
out
divb
push
orl
inc
jge
sti
daa
mov
or
cltd
sbb
pop
sub
lret
inc
pop
mov
pop
or
ret
inc
mov
das
mov
stos
les
adc
and
jne
out
cmp
mov
jae
cli
je
mov
sub
adc
jbe
scas
lret
lock
test
mov
jnp
ficompl
arpl
sbb
in
bnd
movsb
pushl
jmp
mov
hlt
sub
add
inc
test
cmp
sbb
in
aas
mov
ret
push
in
xchg
imul
mov
cwtl
and
xabort
js
movsl
mov
inc
mov
rolb
enter
hlt
xor
xchg
sub
shrb
out
cmc
adc
mov
repz
xchg
sbb
int
mov
in
mov
lods
std
fucom
mov
lret
jecxz
mov
cltd
addb
xor
mov
inc
cltd
mov
popa
xor
imul
lahf
jb
mov
dec
sahf
or
mov
pop
cmp
jecxz
loopne
push
fucom
out
arpl
ss
mov
xchg
cmp
sbb
xchg
or
lcall
push
sbb
fistl
not
push
jno
aad
mov
cld
loop
xchg
sahf
fists
inc
adc
inc
xchg
adcl
inc
js
test
dec
shlb
push
xchg
imul
cltd
cmpsb
enter
and
push
mov
push
ret
vcvtpd2psx
push
add
cmp
xchg
jmp
xchg
or
jle
push
iret
mov
push
xor
push
repnz
test
mov
mov
pop
mov
fistpll
out
test
mov
or
lock
add
mov
stc
jl
mov
shr
inc
lds
nop
in
sub
inc
xor
push
sub
insb
popf
ljmp
fistpll
fcoms
or
in
lret
xchg
ficoml
push
sub
add
pop
mov
decb
sub
sbb
jnp
jle
scas
decl
subl
add
add
dec
mov
inc
dec
inc
mov
jns
push
popl
inc
inc
xor
test
cmpsb
sarb
mov
xchg
cmc
push
and
addl
xchg
hlt
mov
xchg
cmp
lret
xchg
adc
sub
xchg
stc
mov
push
imul
mov
add
sbb
mov
aas
sub
mov
adc
inc
inc
sbb
jne
movsb
and
mov
sarb
jg
test
cvtpi2ps
es
mov
rcrb
push
lret
shr
loope
test
enter
movsl
repz
push
cld
imul
mov
mov
aad
inc
pop
mov
adc
sub
popf
ret
neg
xchg
jl
js
jg
jecxz
cld
or
das
mov
js
or
adc
dec
mov
jns
mov
loop
xor
aam
sbb
or
out
add
jle
lock
out
je
push
adc
ret
lcall
test
push
adc
jmp
inc
mov
idivl
les
pop
je
sarb
ds
cmc
sbb
mov
pop
adc
rorl
rorl
sti
xchg
push
bnd
ljmp
rolb
sbb
xlat
divb
aaa
mov
inc
dec
mov
cltd
dec
sbb
loop
mov
rol
popa
xlat
xchg
adc
jae
or
loop
fisttpl
cmp
fisubl
push
outsb
shlb
jns
dec
pop
in
mov
pop
imul
cli
ljmp
mov
and
mov
andl
rol
stc
dec
sarl
pop
and
sbbl
fbld
mov
mov
loope
inc
and
es
or
out
out
inc
shr
mov
push
daa
adc
mov
xor
pop
sub
out
xchg
ds
mov
fldcw
arpl
int
mov
or
ja
cmp
mov
jge
divl
es
add
cli
lea
aas
ljmp
inc
cltd
insb
or
xor
lods
leave
cmpsl
or
xchg
test
mov
sub
dec
gs
outsl
in
in
inc
fmuls
push
cmp
ret
xchg
xchg
leave
mov
and
shrb
xchg
mov
pop
xchg
jbe
and
cmp
aas
xor
push
inc
xchg
cmpsl
xchg
outsb
fwait
leave
in
andl
arpl
insl
sub
and
fstl
dec
mov
or
les
ret
into
push
push
loopne
lcall
fisttpll
bound
stc
add
push
and
test
push
or
dec
cmp
add
adc
pushf
negl
dec
adc
cmp
mov
ret
loopne
pop
adc
clc
sti
mov
insb
mov
mov
mov
sbb
add
movsl
dec
in
push
bound
cwtl
lret
inc
sbb
mov
stos
mov
aaa
mov
jmp
sbb
xchg
movl
rcr
cmp
int
mov
xchg
fsts
pop
daa
push
dec
outsb
lods
or
lcall
xchg
xchg
ret
cltd
out
arpl
sub
xor
add
sbb
js
pop
enter
loopne
xchg
inc
inc
int
or
rcrb
and
inc
test
or
das
stc
xor
push
movsl
imul
cli
jae
push
jno
dec
or
mov
les
loopne
je
mov
call
dec
dec
mov
dec
std
sub
loopne,pn
aad
cli
mov
repz
adc
adc
int3
jmp
cmp
mov
lods
jge
or
decb
sbb
xchg
mov
mov
cltd
mov
mov
jnp
cmp
icebp
imulb
js
popa
mov
inc
mov
lds
pop
movsb
rol
sbb
fs
bound
add
xchg
xor
or
das
xchg
stos
jge
dec
movsl
adc
ret
or
fistl
scas
add
cltd
lods
cmc
xchg
inc
sbb
adc
jmp
scas
cmc
and
adc
repz
jo
dec
sbb
add
mov
inc
test
dec
xchg
repz
xchg
xor
movsb
inc
add
xchg
cltd
loop
pop
pop
sub
xor
jne
iret
mov
or
push
adc
inc
dec
test
inc
push
mov
das
xor
mov
xchg
jnp
adc
imul
lret
pop
adc
jl
sbb
lret
jecxz
outsl
mov
mov
sbb
mov
adc
lret
inc
cli
popl
lock
insb
rcrb
mov
movsb
fidivrl
mov
push
loop
int
mov
cmp
xor
xchg
fcoms
pop
xchg
test
lds
ret
adc
fcmovnu
adc
mov
dec
subl
xor
inc
xor
cmp
add
sub
push
xchg
xchg
sub
dec
mov
popf
fistpl
xor
rcll
xchg
daa
jp
mov
movsl
mov
repnz
fnstsw
and
call
pop
adc
out
les
mov
loop
mov
hlt
je
xchg
xchg
std
push
adc
mov
xchg
and
rcrl
push
stos
shll
xchg
mov
jg
add
jns
ds
mov
lock
add
mov
cltd
mov
idivl
outsl
sbb
ja
les
inc
clc
sub
ja
push
loope
dec
sbb
xor
lahf
fucom
rorl
addl
add
movsl
and
outsb
xchg
fwait
xchg
sbb
into
xor
add
xor
xor
adc
fucomi
repnz
push
stc
punpcklwd
push
inc
mov
andl
or
mov
mov
and
ret
sti
popf
popf
cltd
xchg
xchg
sahf
xchg
rclb
in
xor
insl
jecxz
std
movsl
test
dec
inc
fstpl
ret
pop
push
push
inc
mov
cmp
push
dec
shr
mov
push
dec
mov
mov
cmp
rcrl
test
sub
push
orb
ds
or
xor
mov
enter
or
shrl
inc
mov
pop
sarb
pop
aas
test
pop
stos
push
sub
movsb
leave
test
mov
fs
decl
fwait
mov
jecxz
pop
or
lds
or
inc
movsl
adc
sbb
fistl
xchg
pop
and
adc
push
add
into
scas
jg
sub
add
mov
cmp
rcll
mov
dec
loopw
pop
pop
and
push
cmp
inc
int
jns
cli
jle
push
gs
insl
scas
adcl
rcll
adc
inc
mov
cwtl
mov
in
cmp
movsb
pop
dec
dec
mov
fdivr
sbb
in
aad
pop
mov
repz
xchg
cmovae
call
clc
lret
sti
pop
popf
ljmp
xchg
shll
push
xchg
xor
or
lret
sbb
or
stc
jno
pop
xchg
jo
mov
sbbb
jno
fildl
stos
and
test
mov
xlat
sahf
cmp
stc
mov
mov
je
or
jl
daa
dec
push
sbb
addb
stos
fstpl
fdivrs
jbe
jl
add
sbb
cmp
lods
pop
enter
mov
sbb
js
pop
enter
call
inc
inc
leave
lret
rcrb
sub
insb
dec
shlb
inc
mov
lods
mov
imul
mov
cltd
bound
add
xchg
flds
and
mov
test
push
xchg
dec
inc
push
xchg
dec
lret
mov
mov
cmc
hlt
imul
mov
int
ficoms
aam
andl
bswap
lds
ds
hlt
mov
outsl
add
in
lock
xor
repnz
ret
inc
mov
pop
hlt
lods
icebp
imulb
rol
call
xchg
mov
lock
stos
inc
sbb
cmp
jge
pushf
repz
ljmp
inc
cmp
push
fsubs
sub
or
pop
stos
xchg
fistl
fisubl
or
int
xor
cmp
inc
mov
arpl
cmp
sub
sub
loop
and
adc
mov
or
sub
sbb
shlb
sbb
push
adc
xchg
mov
push
fimuls
movsl
cli
or
outsl
mov
mov
stos
fs
cltd
push
jne
popf
sub
bound
sbbb
hlt
add
jnp
gs
int
gs
pop
mov
mov
mov
loopne
jae
addr16
leave
nop
mov
pop
pop
iret
lods
in
ljmp
jg
or
or
orb
push
je
mov
dec
pushf
xchg
push
pop
mov
inc
es
lds
mov
scas
mov
or
adc
inc
dec
jo
shll
dec
push
jl
cs
dec
push
or
jge
lret
scas
or
or
mov
add
jle
cltd
adc
mov
mov
js
mov
cmc
cmp
add
lret
xchg
rcll
shlb
push
cmpsl
dec
stos
loopne
mov
xchg
sbb
hlt
mov
cmp
out
cmp
cmpsl
fcmovne
test
mov
inc
sub
inc
dec
mov
call
sub
mov
xchg
ret
inc
out
mov
mov
lds
dec
add
aaa
into
cmova
mov
jns
aas
test
hlt
mov
add
imul
sub
js
hlt
mov
jbe
and
stc
insl
cli
mov
jg
sbb
jns
aaa
dec
lahf
and
cmp
pop
pop
movsb
loopne
cld
mov
push
sbb
xor
fistpll
jno
inc
push
and
lret
xlat
rcr
nop
pop
das
add
push
stos
std
or
mov
imul
sub
mov
push
lods
lds
inc
or
and
xchg
adc
out
jb
inc
shlb
or
xchg
dec
aam
jns
stc
push
ror
xchg
pop
mov
or
mov
fwait
movl
xor
mov
cmp
ret
je
or
cltd
lds
int3
push
dec
add
mov
mov
push
inc
mov
xor
sbb
lods
negl
scas
mov
imul
out
mov
clc
enter
lahf
lret
hlt
mov
in
sub
add
rol
push
add
cld
inc
and
iret
inc
add
dec
and
mov
les
fsubrs
inc
inc
and
arpl
push
mov
sbbl
test
test
inc
pop
xchg
imul
rorl
xchg
fcmovne
adc
jle
mov
sbb
pop
or
xchg
jmp
inc
xchg
sub
xor
add
push
inc
sbb
rcll
aas
push
mov
insb
pop
imul
mov
mov
dec
pop
xchg
call
cmpsb
sti
xor
jne
jecxz
lock
or
cltd
es
imul
dec
fisubs
enter
cmc
xor
mov
mov
sahf
ret
arpl
mov
arpl
inc
mov
bound
mov
in
cmp
sbb
add
stos
xor
ret
inc
mov
jns
sbb
frstor
sub
shrl
pop
movsb
pop
mov
xor
pop
mov
jno
lret
cmp
stos
shlb
test
pop
mov
inc
cmp
pop
jb
xchg
push
xchg
jb
sub
mov
aad
jle
lods
jo
xchg
mov
jecxz
arpl
inc
mov
cwtl
add
mov
andl
mov
inc
push
rorl
xor
mov
cld
push
fsubl
insl
fwait
dec
popl
xor
call
je
or
add
xchg
dec
lret
mov
mov
loopne,pn
fmulp
fimull
xor
mov
add
stc
mov
imul
fcmovbe
xchg
push
js
push
sbbl
sub
test
clc
lret
push
pop
mov
imul
mov
fimuls
std
mov
cwtl
push
stos
push
test
push
cmc
test
jecxz
xor
lahf
cli
stc
pop
loop
mov
inc
retw
cwtl
enter
xchg
stos
lds
movsl
sbb
pop
or
adc
jo
mov
fstl
pop
cmpsl
push
or
int3
xor
leave
in
mov
faddl
sti
and
mov
or
xor
add
vpshld
inc
test
or
mov
out
push
fidivrl
sub
mov
mov
jnp
pop
adc
fimuls
jne
lahf
push
loope
adc
inc
inc
dec
sub
int3
outsl
lds
shl
xchg
dec
mov
rorb
dec
add
in
mov
mov
pop
pop
add
call
iret
fwait
clc
pop
inc
jp
inc
sbb
inc
sub
add
rcrl
test
cwtl
lret
inc
sbb
jno
les
rorb
inc
add
sahf
pop
es
fisubs
mov
cmpsl
jno
or
nop
rorl
fsts
jge
adc
stos
jne
lret
mov
add
pop
fidivrl
mov
add
pop
mov
jmp
mov
jg
dec
xchg
loopne
and
in
addb
mov
add
outsl
xor
incl
int
scas
push
mov
sahf
inc
shrl
sbb
fcom
pop
cmp
jne
xchg
jg
fs
add
cwtl
aam
enter
jnp
gs
xchg
lods
rcll
orb
push
or
cmp
bound
adc
add
into
sbb
jb
jnp
movsb
sbb
in
sbb
rcll
fnsave
and
jo
xlat
xchg
push
mov
and
mov
mov
int3
cmpsb
mov
add
push
cmpsl
xchg
cwtl
imul
sub
out
jae
dec
lahf
xchg
addr16
aam
sub
mov
sbb
ds
add
cmp
roll
fistl
jl
sub
xor
push
mov
adc
mov
dec
icebp
or
xor
iret
repz
inc
cmp
insl
sub
sub
shlb
jns
pop
inc
pop
sti
sbb
stc
repnz
popl
sti
sub
sbb
out
push
jne
insl
cmovge
loope
dec
sbb
int
shlb
jecxz
xchg
or
mov
and
pop
dec
mov
popf
out
aad
mov
ja
sbb
out
add
inc
jbe
fwait
aam
sti
fcomip
or
out
repz
inc
dec
cwtl
dec
or
pop
xchg
mov
insb
sub
add
ror
or
test
lock
faddl
or
aas
jns
fwait
xor
rorl
dec
add
shll
idivl
push
sub
mov
lahf
popf
xrelease
out
ffree
add
not
sbb
inc
inc
cmp
lret
pop
xchg
xchg
lcall
std
mov
jns
inc
pop
cld
ret
or
jp
pop
push
xchg
add
jg
out
xor
cmc
xor
insl
push
and
cltd
into
mov
inc
mov
fxch
mov
inc
add
sahf
aad
pop
xchg
js
cmpsl
ret
lds
ss
cltd
enter
push
adc
jae
dec
scas
sub
xchg
dec
lret
scas
ficomps
sbb
shrb
and
mov
sub
sahf
ret
imul
mov
idivb
ljmp
lcall
add
mov
push
dec
add
movl
or
ret
inc
fsubrs
cwtl
dec
mov
and
sti
imul
add
inc
and
es
pop
shll
mov
clc
mov
stos
addr16
xchg
fcoms
and
das
or
or
xchg
ficoml
ss
cmpsb
push
mov
add
pop
in
sbb
adc
push
inc
std
add
repz
sbb
pushf
inc
mov
loopne
arpl
rolb
dec
mov
lcall
xor
pop
xor
jmp
xchg
orb
call
mov
lahf
outsl
xchg
lret
bound
fiadds
stos
sub
outsl
push
adc
insl
or
mov
cmc
xor
outsl
push
cmp
push
cmc
push
inc
dec
pop
mov
aam
jmp
lods
jmp
pop
lret
mov
lock
cmp
fcomps
fs
dec
dec
sbb
gs
mov
mov
aad
cmp
add
or
nop
xlat
dec
pop
lds
lods
push
shrl
inc
mov
pop
jle
inc
fldt
jb
adcl
cwtl
push
testb
faddl
shl
xchg
sbb
push
fldt
jp
mov
jno
ds
stc
aas
mov
xor
call
rcl
pop
les
rcr
sbb
dec
aam
stc
repnz
clc
rolb
xchg
shr
fstl
mov
loop
pop
mul
sti
xor
jno
fists
dec
add
pop
dec
add
leave
sbb
pop
movsb
sub
mov
xchg
xchg
push
mov
repz
test
sbbb
inc
stos
or
mov
inc
jb
mov
jns
push
idivl
jo
or
fsub
inc
sbb
inc
dec
orl
movsl
ret
cmpsb
mov
push
movsb
cwtl
shll
dec
pop
dec
add
lds
in
dec
push
inc
out
int3
imul
clc
mov
lret
je
mov
sbb
cs
and
push
cmp
lret
add
arpl
stos
fstl
jnp
rcrl
ds
push
xor
scas
fcmovnb
push
addr16
leave
loop
sub
es
or
mov
jge
xchg
fwait
mov
mov
sbb
mov
bound
xchg
int
icebp
cmpsl
ret
flds
mov
xlat
xchg
ret
out
jmp
es
pop
pop
or
int3
cmpb
push
dec
mov
leave
mov
out
mov
faddl
inc
inc
jbe
fwait
aam
sti
pop
popf
testl
cmpsb
shll
ret
jecxz
xor
cltd
addb
mov
or
inc
xchg
cld
push
hlt
mov
fimuls
movsb
lahf
sbb
sub
dec
out
insl
ljmp
popf
in
mov
pop
sub
int
or
test
icebp
mov
xchg
aaa
jns
inc
pop
jmp
jle
cltd
fstl
mov
leave
ds
aas
aas
inc
fwait
leave
jne,pn
adc
pop
cs
addl
mov
and
and
or
dec
and
sbb
scas
inc
sbb
sti
xor
jb
mov
movnti
test
clc
es
jl
pop
nop
test
or
dec
ret
pop
push
mov
inc
mov
lea
int3
pop
fucomip
hlt
cmp
pop
pop
iret
ret
sahf
repz
mov
mov
fs
xor
dec
and
stc
inc
mov
pop
xor
repnz
sahf
sbb
rcll
jmp
lret
shrl
mov
daa
xchg
test
inc
inc
add
or
xor
shrb
mov
movsb
add
shl
sbb
or
fwait
out
sbb
leave
loop
and
cwtl
add
cmpsb
call
and
inc
and
xor
xchg
movsl
ret
pop
pusha
xchg
mov
xchg
pop
cmpsb
popa
mov
cmpsl
jnp
enter
or
mov
push
add
mov
test
aad
inc
outsb
imul
popa
dec
mov
test
mov
mov
imul
shll
jmp
clc
ds
idivb
mov
jbe
add
mov
dec
add
aad
adc
movsl
push
add
clc
mov
push
sub
shrl
mov
fbstp
fs
dec
sbb
test
lret
cmp
cmpsb
aam
fs
dec
mov
pop
js
lods
push
cmp
pop
inc
sub
shrb
popf
fcoml
std
in
lds
fisttpl
ficoms
jle
and
sbb
mov
idivl
add
mov
mov
or
shlb
xchg
inc
insl
xchg
imul
iret
roll
sti
sti
and
jnp
es
je
jnp
mov
cltd
xor
xchg
mov
out
xor
int3
fwait
pop
mov
loopne
mov
shll
fistpll
in
lcall
mov
ret
stos
gs
lcall
divb
adc
ret
insl
cmp
repnz
jbe
mov
jnp
xor
bnd
mov
jae
lret
aad
cmp
sar
xor
lcall
pop
outsb
aad
inc
pop
xchg
lret
mov
pop
dec
outsb
stos
push
sbb
fistl
in
add
cmp
jge
push
pop
push
fdiv
scas
mov
mov
push
mov
pusha
shll
inc
sbb
add
out
rcr
xchg
test
xor
xor
pop
add
enter
icebp
jns
fs
inc
std
adc
adcl
outsl
add
cmp
out
clc
inc
test
cmp
enter
int
imul
lahf
dec
dec
les
out
mov
mov
int
pop
xchg
inc
enter
iret
sbb
jnp
mov
sbb
in
clc
and
xor
loop
cmp
enter
pushf
pushf
xchg
xchg
mov
imulb
rcr
dec
pop
dec
inc
inc
imul
jne
dec
ds
mov
cmp
dec
pop
cmp
jno
inc
push
and
inc
sbb
test
xchg
inc
testl
fistl
lods
shrb
jns
xchg
into
jecxz
pushf
dec
and
push
test
ss
test
lds
aam
clc
or
dec
mov
stos
rorb
or
xor
xchg
and
aas
outsl
cmpsb
ret
inc
ret
mov
dec
xabort
mov
mov
hlt
loope
adc
stos
inc
ret
sbb
adc
cs
movsb
out
and
push
xchg
mov
sub
hlt
pop
adc
popf
sub
add
cmp
jb
sbb
iret
add
lock
movhps
jmp
cld
add
inc
ljmp
dec
lret
adcl
ficoml
xlat
dec
sbb
aad
subl
fsubrs
cltd
mov
or
push
mov
les
cmp
ljmp
fisubrl
push
cmp
stos
dec
mov
sarl
movsb
fcoml
sub
scas
movl
leave
cmc
and
pop
std
add
sub
add
pop
inc
test
dec
shll
jns
dec
xor
addb
aam
adc
cmpsb
jnp
enter
fsubl
lock
add
cmp
or
test
push
das
mov
imul
rorb
movsb
sub
cmpsb
mov
stos
std
dec
mov
imul
fistpl
sbb
mov
pop
adc
ret
ret
out
adc
pop
sub
adc
mov
jbe
adc
roll
ror
cmp
stos
cmpsl
ret
popf
fsubl
dec
cmp
mov
adc
dec
sbb
and
mov
je
test
sub
inc
sbb
sub
pop
sub
stos
ja
lds
cltd
fcoml
mov
fstl
jnp
push
jg
stc
cmc
xchg
cmp
xlat
loopne
sti
and
es
or
mov
inc
mov
repnz
inc
adc
fsubs
xchg
ja
aam
sbb
aad
stc
cmpsb
shlb
cmpsb
repz
inc
dec
cmpsb
inc
cltd
pop
xorl
in
inc
mov
dec
dec
mov
fstps
flds
jmp
adc
ret
pop
xlat
mov
add
mov
les
out
fiadds
lock
jecxz
fldenv
pop
sub
and
pop
or
ret
fs
pushf
lret
clc
mov
mov
lock
aad
mov
aaa
lcall
inc
orl
out
pop
popf
int3
icebp
mov
daa
jno
inc
push
sub
ret
or
xchg
dec
dec
out
test
jo
movsl
sbb
jl
fstpt
jnp
pop
mov
add
cmpsl
mov
js
jp
cs
xor
cmc
xor
pop
sub
iret
inc
pop
adc
rolb
adc
and
xor
push
xchg
imul
xor
cmp
fsubl
mov
std
lcall
push
adc
stos
inc
dec
mov
sbb
xchg
test
push
inc
mov
imul
mov
xchg
icebp
mov
xor
and
mov
iret
sbb
in
hlt
push
fsts
ret
sbb
inc
sub
add
out
pushf
pushf
dec
cmpsl
nop
push
hlt
mov
fidivrs
xor
rorl
stc
lret
xorb
stos
lds
xchg
sub
fidivrs
cld
mov
ffree
loopne
test
or
sbb
subl
adc
add
cmpb
pop
out
sub
mov
fcoml
jbe
lods
xchg
cltd
lds
xchg
test
repz
addr16
shlb
inc
xchg
addl
imul
mov
adc
data16
or
cltd
movsb
jp
mov
push
cmp
pop
fsubl
jge
outsl
out
ret
aad
add
mov
mov
push
or
int
inc
sub
loope,pn
xor
pop
adc
sub
stos
mov
mov
dec
testl
pusha
insb
lods
repnz
mov
add
cmc
rcrl
mov
fcompl
inc
sub
imul
aaa
ss
dec
push
dec
subl
mov
cmpsb
xchg
test
cmp
push
sbb
ret
adc
cmp
lcall
jle
mov
sub
cmpsl
pop
push
xchg
lret
cwtl
test
pusha
cmp
and
or
sbbb
and
cmp
adc
test
adc
movsb
jp
fcomp
sub
fstl
mov
xabort
outsl
mov
inc
cltd
out
cmp
loop
je
or
inc
push
xchg
dec
mov
sbb
add
mov
repz
adc
add
mov
mov
test
movsl
pop
call
int
in
lcall
ja
iret
hlt
movsl
ret
shl
jbe
add
int
nop
fcomps
add
movsl
ret
outsb
cld
push
nop
push
hlt
lods
xlat
rorb
nop
adc
xor
ja
inc
in
dec
sahf
or
and
jge
xchg
std
jmp
jae
into
je
mov
sbb
ret
or
xchg
jae
xor
movsl
adc
imul
jecxz
jns
push
inc
pushf
shr
mov
push
inc
xchg
inc
fwait
out
js
popf
and
repz
push
sbb
adc
dec
test
ror
nop
mov
push
imul
cltd
mulb
fisubs
mov
add
lret
or
int3
inc
sub
cwtl
sahf
inc
mov
mov
lret
cltd
fisubrs
pop
pop
mov
shl
repz
les
cmp
adc
sahf
sti
jns
popf
rcrb
nop
lock
adc
int
sbb
dec
and
sub
ret
sbb
insb
mov
adc
mov
pop
fiaddl
dec
hlt
jns
mov
xlat
out
fbld
jae
xchg
in
mov
push
pop
cmp
adc
adc
adc
stos
jge
sbb
lds
fnsave
pop
gs
fstl
aad
movl
fucom
jo
jns
js
or
sbbb
add
xchg
in
jp
clc
stos
fucomip
push
push
mov
xchg
pop
je
imul
add
xlat
cltd
pop
jns
aaa
rcrb
jno
and
mov
xor
xchg
or
sahf
or
cltd
imull
pop
pop
inc
add
pop
adc
push
sahf
cmp
mov
imul
cmp
hlt
movsl
ret
inc
stc
or
pop
cld
outsl
mov
cmc
rorb
cmpsl
mov
mov
xchg
adc
clc
out
xchg
jmp
lds
dec
stc
mov
and
push
lret
mov
xchg
dec
popf
lret
mov
sub
addl
or
jge
dec
movsl
adc
dec
mov
mov
lods
sarl
pushf
cmp
sbb
repz
inc
sti
and
xchg
sbb
mov
add
inc
test
mov
gs
xchg
add
imul
stos
cmp
call
pop
mov
out
enter
xor
and
sbb
and
cmp
jmp
adc
ret
pop
xlat
mov
les
push
ficomps
arpl
mov
pop
add
andl
jecxz
mov
ljmp
and
test
hlt
lods
icebp
aaa
fnstenv
in
out
sbb
sbb
rol
or
out
loop
mov
in
fbld
pushf
test
stc
dec
sbb
mov
shlb
int3
add
cmp
lret
scas
xchg
jne
jns
pop
stos
pop
add
pop
inc
fistl
movsb
fstp
push
int3
xor
shll
icebp
leave
in
lds
pushl
jmp
cltd
js
or
dec
xchg
rolb
mov
inc
test
rcll
push
fidivrs
push
jmp
sub
fdivrl
fbld
pusha
jnp
enter
out
bswap
lds
mov
dec
mov
add
push
adc
jle
push
lret
cltd
fisubs
and
out
aas
jbe
mov
mov
pop
mov
rcrl
mov
mov
mov
inc
mov
add
rcrl
notl
xchg
int3
addr16
sbb
adc
aaa
out
sbb
test
dec
sub
testl
jae
cmp
movl
adc
jae
les
lret
or
dec
lods
ficompl
mov
jle
mov
sbb
scas
jg
jp
popf
popf
enter
repnz
and
push
cwtl
add
shlb
jae
and
mov
xchg
xor
mov
rcll
sub
stc
push
fsubl
loopne
in
lsl
das
test
mov
add
jne
mov
rolb
mov
gs
mov
rclb
mov
inc
xchg
insl
sub
xor
cmp
leave
xor
bound
je
loopne
pop
push
dec
rorl
icebp
fdivl
adc
add
mov
jbe
adc
inc
ret
sbb
cmpsb
add
push
pop
pop
pop
mov
pushf
fs
jb
mov
rclb
fists
jge
mov
push
aaa
js
loopne
cmp
xchg
dec
mov
scas
xchg
lret
movsl
mulb
lahf
mov
shrb
aaa
stc
add
pop
fidivrl
mov
xor
scas
fcmovnb
push
cmp
push
mov
jge
andl
rorb
mov
aam
repnz
inc
adc
mov
and
xchg
imul
cltd
call
and
pop
fisubl
clc
sbb
push
add
inc
mov
mov
sbb
mov
fwait
sahf
or
sub
cmp
fadds
push
dec
mov
rcll
int3
fwait
pop
lods
push
loopne
mov
ret
rcrl
fsubrp
jnp
std
fwait
jmp
dec
loopne
sbb
cmc
lret
mov
adc
mov
sbb
mov
xchg
sub
adc
push
cmc
xor
lds
gs
dec
cmp
mov
sbbl
stc
adc
inc
inc
cmp
inc
lret
cmc
add
outsb
les
inc
fwait
push
mov
xor
jecxz
jnp
xchg
lahf
fisttps
jnp
inc
mov
cwtl
add
jle
inc
sbb
mov
dec
aam
fstl
jp
inc
aam
rcll
or
sub
mov
and
jbe
fwait
in
or
pushf
bound
pop
mov
cltd
fimuls
inc
sbb
push
adc
xchg
jle
push
dec
mov
cltd
cmp
shlb
and
daa
cltd
sahf
jmp
jg
inc
push
pop
push
add
enter
pop
adc
xchg
rcrb
rcrl
cwtl
ret
mov
hlt
lods
icebp
idivb
inc
xchg
push
jb
pop
push
push
clc
sub
ja
inc
in
mov
mov
jnp
lcall
or
jl
dec
or
or
cli
inc
cli
inc
sbb
sub
xor
dec
lds
xchg
popf
aad
rcrl
icebp
sbb
xor
xlat
cld
adc
sub
and
andl
sti
mov
dec
cwtl
loopne
aam
jb
bound
repnz
mov
aam
fdivrs
gs
push
add
imul
jne
push
adc
push
push
inc
movl
sbb
and
mov
sbb
or
out
mov
and
js
xor
ljmp
test
push
rol
sti
ret
scas
add
mov
aas
repnz
sbb
push
xchg
jecxz
cld
fs
push
mov
cld
sub
mov
push
in
arpl
in
movsl
insl
mov
aaa
cmp
push
add
push
cmp
ret
add
dec
sahf
lret
or
jl
rorl
outsl
cmp
pop
adcl
lret
pop
scas
pop
pushf
jp
mov
jno
loope
jg
xchg
adc
jmp
rcrl
sarb
ficomps
fdivrs
dec
lea
jmp
push
mov
clc
and
cmp
jecxz
xchg
std
xorl
out
clc
les
in
daa
int3
cmc
push
loop
xchg
hlt
add
lret
mov
jb
lea
dec
mov
inc
adc
adc
adc
jecxz
pop
or
xor
mov
cmp
jp
add
adc
popa
mov
add
imul
mov
mov
xor
push
pop
test
mov
sbb
iret
xor
fucomp
fs
fistps
or
subb
cmpsb
xchg
test
jo
xchg
sarl
mov
inc
lcall
inc
push
cltd
lods
inc
sbb
cmp
mov
out
mov
adc
dec
or
add
and
cmp
or
decl
movsl
ret
inc
mov
adc
cmp
shr
jb
xchg
outsl
jl
add
call
enter
xor
add
mov
pop
cmpb
mov
mov
jns
pop
sub
in
jbe
pop
les
dec
mov
loopne
mov
jns
sti
mov
hlt
mov
inc
test
or
rcrb
or
mov
loop
es
into
movsl
mov
pushf
in
sbb
jns
pop
cwtl
pop
test
jmp
int3
and
ljmp
mov
mov
xchg
test
inc
inc
mov
and
scas
xchg
ficoml
lcall
inc
lcall
xchg
pop
sbb
test
mov
pusha
jecxz
scas
fildl
test
scas
aam
sbb
jo
inc
jo
pop
sub
subl
xchg
adc
dec
sarb
mov
stc
mov
out
fwait
shll
inc
loop
fsubl
ss
xchg
cltd
and
pop
pop
scas
mov
cltd
enter
mov
int3
add
inc
ret
sbb
daa
aam
mov
jne
dec
movsb
nop
loope
sbbb
mov
sarb
inc
mov
fwait
stos
das
pop
mov
sti
pop
adc
jae
mov
sti
loopne
repnz
push
jp
dec
inc
inc
sbb
push
and
or
pop
and
adc
in
pushf
dec
and
pop
test
jnp
dec
sbb
adc
scas
mov
ja
cmp
lcall
jl
or
inc
inc
loope
or
xchg
dec
stos
xchg
shrb
pop
mov
jb
mov
arpl
jnp
sub
scas
jg
leave
in
loope
scas
inc
cmp
sti
sub
jo
or
dec
adc
xchg
cwtl
and
pop
xchg
test
cmc
cmp
jp
cmpsb
mov
jo
cmp
mov
xchg
cmpsl
ret
cmp
mov
popl
xor
inc
int3
pop
sub
push
and
movsb
jne
mov
cmpsb
cmc
hlt
imul
xchg
jg
pop
xor
cmp
call
mov
sbb
fldcw
adc
mov
add
out
rcrl
adcl
and
roll
rcrb
ljmp
test
int
sub
dec
pop
dec
or
dec
cmp
shrb
and
les
stos
lret
add
xchg
mov
outsb
les
push
and
jne
jbe
lods
and
mov
xchg
fwait
test
icebp
cmp
and
mov
xor
es
or
pop
mov
lods
addb
sbb
push
dec
push
cmp
pop
pop
adc
or
mov
mov
clc
int3
and
mov
enter
sub
inc
fimuls
sub
add
push
mov
mov
jg
pop
xchg
into
and
mov
xorb
mov
mov
pop
adc
ret
in
mov
mov
add
push
andl
stos
inc
sbb
dec
es
movsl
mov
mov
inc
pop
in
movsb
shr
push
sub
push
mov
sbb
aas
mov
ja
fs
jae
adcl
inc
add
cld
xor
in
pushf
jne
into
push
mov
push
xchg
fistl
fisubl
pop
jb
lods
jle
stc
ret
fs
test
jecxz
xchg
fwait
iret
data16
jle
mov
fs
inc
shlb
or
in
and
or
adc
roll
mov
fwait
cmpsb
addr16
enter
movsl
dec
inc
popf
push
test
flds
or
xlat
xchg
sbb
enter
cmpb
jno
and
mov
outsb
imul
mov
scas
ds
arpl
xchg
cmp
mov
clc
sti
pop
adc
or
mov
cltd
addb
and
inc
dec
inc
sbb
inc
pop
mov
movsl
ret
jbe
int
stos
mov
ja
push
test
test
inc
mov
pop
popf
push
jo
shrb
arpl
dec
sub
cld
xor
stos
lds
adc
pop
adc
jle
mov
loope
mov
inc
sbb
arpl
sub
js
std
repnz
and
push
cwtl
add
and
mov
mov
sub
mov
jp
push
sub
popf
push
stos
mov
repnz
mov
popa
in
push
loope
add
addl
leave
sbb
inc
aas
adc
ror
mov
ficompl
loop
xor
xchg
jle
pop
movsl
imul
fucomip
in
fidivs
sbb
imul
pop
sub
mov
repnz
or
add
fsubrl
jp
hlt
mov
shrb
xlat
stos
jns
or
inc
lods
mov
jge
movb
jae
pop
sub
aaa
ljmp
ret
sub
ljmp
stc
cmpsl
xchg
stos
lds
xchg
in
aas
adc
pop
test
mov
and
xchg
inc
fwait
xchg
sti
and
ljmp
inc
pop
adc
and
and
daa
les
push
xchg
mov
sub
movsl
cli
or
in
sbbb
xlat
cmp
loope
and
mov
out
subl
out
mov
push
sahf
inc
sbb
cs
mov
std
cltd
cmp
add
int3
push
pop
movsl
imul
cmc
push
mov
loopne
mov
aas
mov
inc
jmp
mov
lds
adc
ret
popa
cmp
and
decl
test
rolb
sub
rcll
les
mov
jmp
movsl
pop
sub
and
jecxz
scas
xchg
addr16
inc
sub
negl
fistpl
icebp
shrb
enter
test
scas
movl
imul
mov
addl
sbb
leave
pop
outsb
rcl
pinsrw
fildll
mov
xor
add
xchg
mov
fcmovu
and
push
loopne
xor
fsubl
xor
push
and
mov
dec
push
dec
xchg
xchg
jmp
cmpsb
stos
imul
ficomps
fcomi
mov
jno
inc
jns
dec
add
cmc
inc
mov
mov
xlat
mov
hlt
mov
inc
mov
or
and
je
repnz
enter
lret
inc
stos
jmp
jne
les
lcall
pop
fisubrl
lahf
pop
in
mov
imull
jo
fnsave
lds
lcall
cld
lcall
sub
adc
add
or
xchg
lea
mov
jmp
mov
stc
inc
cmp
in
xchg
adc
sub
and
dec
xor
mov
add
aam
sbb
xor
sbb
cmpsb
movsl
test
push
pop
out
cmp
shrl
inc
inc
mov
popa
sub
mov
aad
xchg
mov
jmp
adc
ret
pop
push
mov
sti
jmp
xchg
fcmovnb
and
pop
dec
xchg
stos
mov
rolb
mov
mov
add
movl
or
mov
test
jno
dec
xor
ror
mov
sub
movsb
leave
test
stos
mov
fldl
or
lods
mov
dec
in
mov
ljmp
insb
mov
les
rorl
xchg
fwait
dec
aas
adc
xchg
sti
cmpsl
push
push
enter
pop
out
pusha
mov
leave
repz
insb
inc
fwait
push
hlt
mov
shlb
push
addl
mov
xchg
push
out
or
dec
and
pusha
sub
sbb
pop
fs
imul
mov
fdivrl
lahf
xlat
mov
lea
faddp
bound
out
mov
lea
or
pop
and
loopne,pn
jne
pop
mov
test
dec
add
sbb
xchg
jle
pop
les
imul
ja
sub
clc
sti
and
jecxz
sahf
repz
add
cmpsl
test
insl
mov
inc
sub
iret
cmpsl
adc
push
cwtl
push
lock
mov
decl
jno
test
mov
mov
sub
cmpsl
xchg
xchg
pop
sbb
cmp
add
adc
jl
rorl
or
or
jle
cmp
jno
mov
mov
cmp
js
jg
jp
out
js
loope
lret
call
adc
mov
aam
sbb
rcll
cmp
aam
stc
cmpsb
xlat
sub
fsubs
and
enter
mov
je
and
mov
fsubp
mov
sbb
xchg
mov
xchg
out
xlat
mov
cs
mov
loop
loop
lods
negl
dec
inc
mov
arpl
call
jp
jg
dec
or
mov
sbb
sub
pop
adc
scas
xchg
in
dec
pushf
dec
sbbl
test
push
test
cwtl
xor
dec
in
rorb
sar
cmp
mov
std
in
mov
pop
sub
xchg
add
xchg
lods
outsb
lods
das
mov
scas
testl
fistl
pushf
cmp
sbb
push
insb
jnp
mov
icebp
dec
or
adc
out
lea
adc
jp
add
adc
mov
sbb
mov
sti
test
cmp
loope
push
int
cmc
push
gs
insl
push
int3
inc
mov
push
outsb
cmp
jne
xchg
rcll
inc
add
addl
cmp
push
shrl
mov
fsubr
push
adc
ret
idivl
dec
add
lcall
push
mov
imulb
sar
mov
inc
sbb
outsl
xor
mov
cwtl
and
mov
or
xchg
or
inc
fnstcw
hlt
xchg
jb
or
lret
sbb
inc
mov
lret
pushl
repz
ljmp
inc
sub
pop
pop
pop
addb
stos
jge
dec
lcall
sbb
fscale
sti
daa
jbe
test
add
inc
mov
arpl
jle
scas
ja
cmp
scas
xchg
add
mov
sbb
add
inc
xchg
sub
mov
lret
fdivrs
jp
jnp
call
or
xor
pop
fsubl
xor
leave
push
xor
push
adc
push
dec
mov
mov
lds
loop
pop
insl
sub
stc
int3
sbb
add
aaa
ljmp
hlt
pop
adc
or
pop
pop
iret
adc
mov
movsb
add
sbbl
fsubrl
aad
inc
sbb
rolb
xlat
stos
les
sbb
mov
cmovne
lret
ffree
jmp
or
jno
inc
push
imul
mov
cmp
adc
stos
loopne
cmp
test
pop
mov
repz
int3
pop
int3
lods
decb
mov
mov
xchg
loop
jnp
sub
fwait
out
js
and
sbbl
or
push
pop
add
mov
nop
lods
andb
cmp
clc
push
sub
movsl
cli
pop
mov
or
mov
das
sub
cltd
enter
push
adc
sub
loope
leave
cwtl
jns
sub
jbe
ja
jg
mov
cs
cmc
xor
outsl
pop
cmc
sbb
lcall
in
popf
fcmovnb
loopne
ljmp
mov
lret
xchg
cmp
rcrb
mov
loope
sahf
pop
add
push
inc
mov
jp
pusha
xor
inc
std
mov
lahf
push
mov
pop
mov
sub
aaa
or
pop
js
xchg
ret
add
nop
xchg
add
mov
adc
movlps
fcoml
ja
xor
adc
add
js
popf
fimuls
sti
out
js
lods
test
pop
sub
pop
inc
mov
cwtl
or
sub
or
rcl
mov
push
sbb
movsb
cli
xor
xchg
inc
sub
sub
cltd
enter
daa
enter
inc
or
mov
jmp
orl
loopne
push
orl
in
pop
add
test
call
cmp
dec
sti
mov
cltd
cwtl
sub
cltd
mov
repnz
jp
dec
sbb
xchg
dec
and
jne
les
lcall
mov
fisttps
inc
cmp
mov
in
pop
mov
push
cmp
adc
fwait
lret
stos
lds
or
push
into
movsl
das
sub
jns
dec
pop
pushf
ret
stc
cmpsl
negb
mov
and
xchg
shl
adc
lret
loopne
inc
mov
cmp
sbb
add
or
cmp
test
pop
xchg
inc
ljmp
lods
repnz
mov
push
fisubs
xchg
xchg
pop
dec
mov
mov
inc
dec
sub
and
mov
aad
fcoms
push
ret
pop
push
mov
pop
adc
imul
fsubs
test
popl
in
das
jnp
xchg
popf
fwait
add
addb
mov
or
aad
out
inc
pop
or
sbb
sarb
jno
shl
or
repz
fisubl
mov
scas
shl
leave
mov
test
mov
inc
sbb
lret
or
stos
adcl
add
fwait
lods
jle
dec
sarl
or
and
and
in
mov
add
fcompl
stc
lds
sub
sub
jl
fildl
repnz
and
stc
xor
push
xchg
jmp
dec
mov
push
popf
mov
cltd
idivb
fdivrl
sti
repz
jne
jecxz
icebp
dec
adc
cmp
mov
pop
pop
and
movsb
mov
mov
inc
sbb
dec
mov
jbe
or
sub
adc
out
inc
cmp
lcall
cs
ds
lock
mov
add
or
mov
test
adc
jle
mov
dec
sbb
mov
adc
in
sahf
idivb
jbe
sbb
sbb
mov
jo
xchg
aam
or
fimull
mov
mov
lock
addb
cwtl
sub
pusha
jns
jecxz
fistps
nop
es
out
mov
mov
leave
add
or
inc
pop
mov
jns
lret
xchg
lods
mov
push
inc
icebp
adc
jl
xchg
rclb
and
fcmovb
adc
cmpsl
movsl
vpshuflw
push
jno
inc
mov
sbb
mov
dec
inc
pop
and
inc
xorb
or
stc
mov
out
es
call
int
adc
shlb
notb
clc
sti
pop
pop
roll
rcrb
mov
test
test
push
in
movsl
cmp
rcrb
sub
add
shlb
fisubrs
push
movsl
push
xor
push
mov
cmpsl
fcoms
test
test
or
enter
jge
pop
sub
movsl
mov
pop
cld
add
adc
movsl
pop
scas
test
mov
int3
int
and
jb
add
or
fcoms
push
shrl
inc
mov
daa
aam
mov
jp
or
xchg
adc
mov
push
xlat
fcom
pop
fsubl
push
bound
test
dec
fistl
fstp
inc
sub
loopne,pn
sub
pop
aaa
in
mov
aam
repnz
add
loopne
pop
adc
and
mov
fists
rol
hlt
movsl
mov
in
fcoms
jg
or
mov
cmp
inc
sbbb
mov
lcall
inc
pop
repnz
mov
mov
dec
stos
fistl
xchg
push
fucom
push
lea
les
cmp
ret
add
lock
xchg
dec
or
sbbl
xchg
sub
inc
mov
mov
push
js
jle
mov
sub
cmc
inc
inc
inc
push
lods
add
add
sbb
mov
xor
sbb
mov
fwait
cmp
scas
push
mov
adc
pop
cmp
dec
cli
fs
sti
mov
in
and
pop
cmovno
jp
out
mov
jae
inc
cmp
test
lods
mov
or
sahf
bound
inc
inc
dec
pop
movsl
imul
jb
mov
add
mov
popa
xchg
rcrb
add
scas
cmp
inc
sub
sub
fsubrl
jae
inc
sbb
dec
and
jne
les
sti
inc
leave
movsb
insb
cld
lds
mov
fnstsw
mov
cltd
pushf
sbb
mov
fsubl
or
inc
cmp
pushf
imul
jge
pop
push
rorl
mov
sbb
jbe
lea
ljmp
inc
stc
ret
scas
scas
jg
mov
lahf
pop
iret
data16
cs
cli
or
repnz
lret
pop
inc
shlb
add
outsb
mov
mov
xor
movsl
ret
fisubl
and
cld
jae
fwait
lea
pop
mov
int3
inc
cmp
pusha
pop
daa
add
push
adc
enter
dec
lret
push
sub
mov
les
push
mov
fisttps
faddp
pop
add
out
addr16
jnp
add
mov
lret
sbb
cmp
dec
sbb
cmpsb
hlt
into
pop
repz
inc
mov
lcall
dec
xchg
in
stos
push
and
ja
push
and
decl
push
sarl
test
insl
mov
shrb
push
nop
xchg
or
jl
pop
stos
xchg
stos
cmp
fwait
push
xchg
fdivrl
add
sbb
sbb
jmp
scas
inc
fwait
out
pusha
inc
shlb
cmpsb
cmp
push
jl
pop
adc
or
add
sti
xor
pinsrw
cmp
lods
push
sub
mov
insl
in
insl
or
mov
das
data16
push
sbb
dec
mov
sbb
mov
cltd
sbb
adc
gs
pop
add
mov
scas
or
ret
xchg
and
pop
in
jmp
xchg
sbb
lock
fldenv
cmc
mov
ds
inc
aas
fidivrl
cmpb
adc
jle
clc
or
lcall
inc
std
movsl
dec
sbb
lods
pop
xor
sub
arpl
push
leave
and
popf
lret
rcr
nop
sbb
test
inc
jmp
inc
xchg
outsb
icebp
mov
rcl
fcmovnu
xchg
sbb
sar
sbb
mov
shl
mov
push
fdiv
push
inc
cmpsl
ss
pop
sub
inc
sbb
cwtl
in
dec
aam
stc
xor
or
int3
dec
and
je
mov
ret
subb
rcr
push
xchg
jle
mov
call
mov
fneni(8087
inc
adc
add
cmpsb
or
or
xor
push
daa
jne
fldt
pop
dec
repz
fsubs
sub
sbb
sahf
sti
jno
jecxz
enter
jl
lock
mov
adc
xchg
and
cmp
rcrl
and
testl
leave
test
fnstsw
cltd
sub
fcmovne
mov
xchg
fsub
sbb
cmp
add
xchg
add
outsb
mov
add
sub
jmp
push
inc
jmp
popf
ficoms
lcall
cmc
cmp
jge
andl
xchg
adc
mov
and
push
cmp
dec
add
jmp
push
jne
insl
testl
jne
jecxz
stos
xchg
sub
mov
mov
lret
inc
mov
jo
gs
les
rorl
pop
adc
popa
cmpsl
cmp
jae
nop
jl
lahf
imul
push
clc
aas
mov
push
sbb
or
adcb
cltd
push
sbb
fs
pop
stos
push
and
aam
lods
mov
negl
xor
dec
je
mov
jno
dec
nop
push
mov
xor
dec
leave
out
imul
xor
data16
push
mov
cmp
shl
adc
dec
push
jnp
in
mov
ret
and
push
mov
sbb
add
jge
xchg
scas
xchg
adc
rorl
inc
jns
imul
test
mov
lea
and
mov
jle
stc
mov
hlt
je
dec
dec
daa
fwait
jns
fiadds
shrb
adc
mov
fdivs
dec
fadds
sub
pop
mov
mov
in
lcall
add
lret
jecxz
mov
sbb
add
cmp
mov
adc
lret
ds
xor
cwtl
push
lock
mov
sbb
and
test
sbb
scas
mov
or
sbb
rcr
mov
mov
popl
jo
test
xchg
rorl
lods
fucomi
aas
adc
adc
xor
stc
jmp
lods
inc
sub
arpl
sub
js
jg
movl
scas
arpl
pop
xlat
testl
or
imul
xchg
fsubs
add
cmp
js
imul
push
mov
xchg
pop
fsubl
jne
push
mov
sbb
inc
inc
mov
pop
mov
out
push
pop
cmp
popa
dec
mov
iret
pop
stos
rol
mov
jle
pop
les
imul
push
push
sub
clc
sti
pop
adc
ret
rorl
sbb
cmpb
push
iret
cmpsl
into
sbb
movsb
ret
sbb
fsubrl
leave
mov
lods
mov
pop
pop
pop
popf
jae
cmp
lahf
jae
out
imul
and
test
inc
scas
add
fisubrl
pop
pop
xlat
fistl
jge
daa
push
jae
xor
pop
movsb
sub
adc
iret
fucomi
subl
dec
cmc
and
call
mov
inc
sbb
mov
push
cmc
repnz
cmp
stos
sbb
mov
xchg
rclb
in
pop
mov
hlt
push
fisubl
test
inc
arpl
lahf
adc
lret
sbb
bound
aam
loopne
hlt
or
cmpsb
popf
jp
push
and
ja
lcall
mov
dec
mov
ljmp
ds
jg
aam
sti
pop
mov
ret
in
icebp
jae
mov
imul
sbb
aas
mov
rorl
or
movsl
ret
inc
xchg
mov
push
fcomp
dec
fiaddl
incl
imulb
pop
fildll
push
mov
cmp
rorl
sbb
cs
mov
adc
push
mov
or
mov
jmp
rolb
add
icebp
xorl
fisttps
xchg
js
or
inc
xchg
rcr
pop
xor
sbb
push
addr16
clc
and
xor
sbb
push
inc
xchg
out
sbb
fwait
lea
mov
push
bound
push
or
dec
dec
mov
inc
imul
xor
movsb
cmp
int3
lcall
mov
jne
popa
or
iret
ret
clc
jmp
or
sbb
js
sbb
push
sbb
aad
ja
lock
xchg
adc
into
lds
inc
loop
lret
movsl
mov
mov
sub
sahf
fidivrl
sbb
sbb
xchg
out
fucomp
cld
std
mov
aad
push
cmpsl
xchg
test
sbb
push
pop
dec
lret
or
push
lods
sub
xchg
stos
std
lock
mov
sarl
pop
mov
fldl
ret
jge
or
loop
icebp
adc
push
adc
les
jmp
pop
sti
cmp
insb
xor
dec
aam
stc
repnz
aaa
adcb
fdivrl
and
fidivrs
mov
loope
lds
out
enter
sbb
jp
je
jp
imul
mov
sbb
inc
sbb
cs
cmc
lret
shl
dec
mov
arpl
xchg
jle
pop
adc
xor
out
mov
out
sti
mov
inc
xchg
add
cmpsl
test
cmp
mov
inc
pop
adc
jmp
ret
inc
mov
mov
xor
fisttpll
fiaddl
mov
lds
sbb
mov
inc
fisttps
lret
shr
cmp
or
cld
nop
pop
test
xchg
sub
imul
push
jb
lods
pop
fldt
cmp
sbb
scas
mov
mov
out
les
or
rcll
and
inc
test
dec
shlb
xchg
rclb
enter
xor
sbb
cmpsb
movsl
test
adc
fwait
lea
enter
call
inc
inc
mov
les
in
jne
dec
mov
dec
ret
push
cmp
lcall
or
call
mov
sub
jl
sub
lret
hlt
mov
and
rcrl
aad
jno
sub
xchg
lret
movsl
sbbl
stos
rcrb
dec
lea
sub
scas
mov
sbb
rolb
in
cmp
cmp
ret
add
daa
xchg
hlt
movsb
xchg
stos
clc
int
cmp
ja
dec
sub
xor
fcoml
jmp
lods
inc
inc
pushf
rclb
push
fimuls
mov
js
in
inc
fwait
leave
cmc
and
add
add
cwtl
mov
dec
xchg
and
insb
and
add
pop
xor
jae
aam
fdiv
push
sub
movsl
cli
mov
push
bound
mov
xlat
pop
repnz
ret
cltd
je
or
add
hlt
jl
out
push
adc
sub
push
cs
mov
jbe
mov
popa
xor
imul
fucomip
in
xchg
fidivs
sbb
imul
pop
sub
iret
push
repnz
inc
cld
inc
and
inc
xor
rcrb
test
and
adc
sbb
mov
xchg
rclb
fldt
jb
lods
xchg
test
sbb
stos
or
dec
rorb
movsb
outsb
stos
jbe
shlb
pop
cld
jae
mov
pushf
arpl
sbb
bnd
ds
fwait
leave
cmc
and
add
jnp
addl
or
cmp
mov
stc
mov
out
fwait
shll
inc
loop
fsubl
ss
xchg
cltd
and
pop
pop
scas
mov
cltd
enter
mov
int3
add
inc
ret
sbb
daa
aam
mov
jne
dec
movsb
nop
loope
sbbb
mov
sarb
inc
mov
fwait
stos
das
pop
mov
sti
pop
adc
jae
mov
sti
loopne
repnz
push
jp
dec
inc
inc
sbb
push
and
or
pop
and
adc
in
pushf
dec
and
pop
test
jnp
dec
sbb
adc
scas
mov
ja
cmp
inc
cmp
jo
sbb
inc
add
or
xchg
fistl
xchg
fistl
fisubl
in
fwait
lods
sti
dec
xchg
cmpb
stos
mov
push
cmp
ficoms
fwait
jo
stc
jecxz
scas
inc
pushf
repnz
scas
arpl
pop
and
fadds
mov
add
push
mov
fcoms
movsb
push
fnstsw
sub
mov
cmp
call
sti
mov
jne
mov
test
test
sub
push
fwait
push
add
jne
jne
dec
jg
mov
gs
outsb
jbe
imul
mov
mov
imul
dec
lahf
lds
lods
cmp
aas
iret
hlt
mov
inc
and
add
orl
adc
push
test
cwtl
lret
aad
leave
rcrb
repz
sarl
stos
push
icebp
aad
out
fildl
test
push
mov
xchg
test
pop
mov
fldt
jge
dec
jle
arpl
or
cmp
cmpsl
pop
test
es
pushf
cmpsl
dec
push
fucomi
and
jg
andl
call
arpl
shrb
add
andb
sbb
pop
sbb
fisubs
xchg
dec
or
inc
mov
gs
cmp
xchg
jle
jl
push
xor
sti
subl
fs
and
push
pop
imul
xor
rcrl
ds
call
pop
inc
push
xchg
popf
test
fucomip
loopne
movsl
pop
adc
ret
ficomps
enter
add
jl
nop
enter
ds
cmpb
jno
xor
shll
lods
add
xor
loop
inc
mov
lahf
lret
fisttps
or
lcall
cli
daa
pop
dec
data16
stos
pop
icebp
mov
stos
xchg
xchg
ljmp
lods
jle
mov
sub
mov
fucomip
rol
js
jg
sub
xor
loope
js
mov
mov
andl
outsb
test
jle
loope
and
imul
mov
pop
dec
push
gs
in
mov
imul
movnti
subl
pop
add
cs
sub
mov
into
jmp
jbe
mov
fadd
arpl
int
mov
out
cmpsl
ja
lret
loopne
mov
ficoms
arpl
sub
mov
cmpsl
lock
xchg
and
cwtl
lret
movsl
ret
popf
jnp
lock
adc
and
mov
dec
in
lods
mov
scas
dec
push
dec
out
les
shrb
je
mov
jno
dec
retw
mov
stos
dec
pop
stos
xchg
fistl
fisubl
pop
jb
lods
jle
stc
ret
jl
jnp
movb
jecxz
xchg
fwait
iret
push
insb
jle
scas
je
push
cmc
loope
push
mov
andl
rol
pop
mov
dec
xchg
and
insb
and
add
xchg
stc
xchg
pushf
push
xor
sbb
movsl
ret
fld1
and
rorl
inc
pop
and
jecxz
mov
enter
hlt
or
scas
shr
adc
cmp
aad
cltd
shl
inc
sbb
pop
aam
jb
adc
inc
test
fsubp
sahf
sti
cmpsb
inc
sbb
or
cmp
mov
adc
xchg
and
adc
adcl
and
pop
test
mov
or
mov
adc
pop
inc
rcrl
les
popl
xor
in
pushf
jne
push
mov
rorl
addr16
jb
cmp
jbe
lods
and
mov
ja
js
mov
mov
sti
and
xor
maskmovq
testl
inc
test
xchg
sub
or
push
fsubs
adc
ret
push
cmp
push
mov
call
mov
add
addl
test
enter
cmc
enter
out
xlat
mov
ret
push
xchg
pop
test
das
mov
rclb
mov
lock
das
lret
jecxz
insl
mov
adc
mov
movsl
add
xor
cwtl
jne,pt
popf
faddl
and
stos
inc
in
xlat
dec
movsl
add
dec
push
dec
out
les
shrb
je
mov
jno
dec
les
inc
scas
push
add
xchg
imul
clc
xor
lods
mov
shrb
push
push
int3
inc
pushf
rcrb
mov
fcmovnbe
out
mov
popf
scas
push
cmp
cltd
add
or
and
add
mov
cwtl
icebp
and
inc
stos
sbbl
push
sub
ret
mov
fldz
mov
fwait
lea
js
push
adc
mov
cwtl
pop
and
fwait
jne
dec
mov
int
add
aas
xchg
jg
pop
lods
es
call
aam
sti
pop
mov
fwait
mov
iret
pop
aas
lds
add
mov
fidivrs
fstl
or
or
test
fsubrl
mov
mov
pushf
add
jns
shrl
test
dec
push
lret
sub
cwtl
mov
dec
push
lret
rorl
aam
push
jl
lret
push
fsts
pop
daa
xchg
hlt
movsb
xchg
stos
clc
int
sub
ja
dec
sub
xor
fcoml
sbb
shr
sbb
inc
inc
jmp
mov
frstpm(287
js
jle
scas
fists
jb
addps
adc
inc
aam
fdivs
xchg
xchg
mov
and
xchg
mov
mov
xor
stos
es
cmpsl
mov
fwait
out
mov
enter
cmp
loopne
cwtl
sbb
push
dec
mov
lds
mov
jbe
fcos
call
jg
shl
fistpl
dec
or
out
sti
mov
out
int3
mov
add
sub
xchg
iret
cmpsl
ret
aad
inc
cltd
nop
sysret
mov
in
shrl
jae
jne
js
mov
scas
jnp
lret
out
fs
rorl
lret
scas
in
dec
xor
xchg
test
dec
mov
add
push
scas
xchg
fcmovne
rolb
push
outsl
cmc
mov
add
pop
cld
lret
popf
lret
stos
rcl
cltd
lahf
ficoms
mov
call
rol
pop
cltd
in
sub
cmp
xchg
enter
cltd
xor
dec
les
push
fisubs
pop
adcb
lcall
pop
fsubl
fists
jmp
jno
cltd
push
adc
add
subl
or
jne
cwtl
movsb
xchg
out
sub
add
dec
mov
negl
dec
add
int3
rclb
pop
call
sbb
out
mov
sub
inc
cltd
orl
mov
sbb
adc
lret
inc
movsb
inc
insb
push
cwtl
dec
test
sub
xchg
in
stos
push
and
rcl
movsb
pop
loop
cld
test
ja
cmp
mov
inc
push
jl
ret
add
or
jg
pop
stos
xchg
fistl
cs
popa
jle
adc
adc
ret
movsl
ficoms
mov
scas
mov
mov
jo
popa
or
ljmp
in
mov
nop
roll
mov
push
xchg
adc
dec
fdiv
push
sub
test
test
fld
clc
xor
ljmp
fisttpll
dec
xor
roll
inc
dec
mov
push
sub
cmp
sub
orb
mov
pop
loopne
lret
jo
pop
dec
out
loopne
iret
orb
jecxz
fidivrl
inc
in
mov
add
leave
inc
mov
pop
adc
ljmp
addr16
movsl
ret
popf
fsubl
rcl
clc
repnz
test
sbb
lds
push
sbb
mov
in
fisttps
add
test
test
stos
or
mov
or
add
jb
cmp
jbe
lods
and
mov
ja
pop
jo
decl
loop
and
jo
or
sarb
mov
add
sbb
outsl
aaa
cwtl
shl
sub
adc
mov
push
jns
roll
lods
mov
stc
call
icebp
inc
cltd
enter
mov
cwtl
push
iret
mov
call
pop
add
push
adc
cmpb
jmp
sub
add
neg
adc
arpl
int
mov
pop
into
fwait
lahf
jb
jo
cmp
jnp
mov
aas
mov
inc
sbb
test
jno
fsubrl
lret
movsl
mov
ss
rcl
dec
pop
dec
add
jnp
aad
lds
pop
movsb
shll
lret
rorl
lret
add
scas
cmp
mov
popa
inc
les
adc
sahf
pop
xchg
rorl
xchg
fcmovnb
cmp
push
jb
lods
pop
or
lds
sbb
lods
fucomi
movsb
jmp
loop
mov
mov
push
addl
mov
xchg
dec
mov
add
xchg
fcoms
and
movsb
fimull
call
and
out
stos
add
repnz
mov
cld
pop
and
ljmp
mov
lds
adc
jbe
mov
bound
sahf
and
fidivs
push
mov
pop
adc
inc
mov
add
mov
rcrb
mov
and
cmpsl
or
lds
call
push
mov
sbb
sub
mov
push
push
shl
cmpsb
cmpsl
xchg
ror
push
sbb
cs
mov
dec
jne
inc
jmp
xchg
stos
std
lock
int
test
lods
inc
sbb
scas
jg
leave
in
mov
sub
cld
repnz
das
xchg
in
push
push
cwtl
add
and
jb
sarb
xor
testb
sbb
movsb
jp
clc
inc
cmp
imul
dec
xchg
cltd
into
shrb
fdivrs
mov
popf
xor
push
adc
xchg
enter
pop
scas
or
dec
in
dec
nop
push
xor
mov
lods
ds
fnstcw
shlb
cmp
mov
pop
adc
ret
in
mov
mov
add
push
andl
stos
inc
sbb
dec
es
movsl
mov
mov
xor
lea
mov
inc
lahf
loop
jns
test
mov
test
lcall
les
xchg
fcoms
popf
in
ret
pop
sbbb
sub
pop
rcr
xchg
sbb
out
int
mov
push
jae
mov
cmp
inc
mov
fiadds
shll
mov
out
popa
or
jnp,pn
addl
add
mov
sarl
jge
fwait
cmp
xchg
cwtl
mov
lods
insl
xchg
enter
pop
push
mov
jno
mov
push
cmp
sub
push
fwait
push
add
cmove
fisubrs
popf
out
push
mov
ret
pop
xlat
mov
dec
loopne
in
jbe,pt
aam
sti
fnsave
lret
xchg
and
push
sbb
mov
jbe
add
movl
or
out
sbb
or
xor
fisttpll
push
push
and
pop
insb
arpl
js
jae
xor
lahf
fstl
and
push
test
ret
loop
push
sbb
sbb
xchg
jecxz
push
fistl
cmpsl
fcoml
jbe
std
jno
aad
in
scas
movl
fucomip
push
xchg
loop
mov
mov
add
mov
dec
movsl
xor
push
jecxz
or
aam
dec
push
xchg
mov
xchg
fiadds
sub
mov
std
pop
jo
fwait
outsl
or
sbb
es
sub
adcl
jp
mov
int
and
mov
inc
cmp
mov
into
pop
stos
les
inc
imul
addr16
repz
adc
hlt
popa
lahf
es
outsl
push
mov
popa
mov
das
or
sbb
and
adc
mov
pushf
dec
out
xlat
stos
mov
ja
inc
loopne
dec
sbb
inc
mov
aad
pop
popf
shrl
ljmp
ret
bound
imul
dec
push
stos
jge
dec
movsl
sbb
ficomps
mov
sar
cmpsl
push
imul
aad
repz
repnz
loop
ret
scas
arpl
pop
addr16
and
lret
or
bound
mov
mov
out
imul
loope
mov
pop
jl
jb
jb
xlat
pop
fsts
mov
insl
pop
push
inc
dec
mov
aam
leave
scas
shr
adc
dec
fcmove
jmp
ficompl
xor
sub
negl
add
repnz
mov
or
ds
hlt
jb
mov
xchg
xor
mov
orb
movsl
xchg
popa
jns
xor
pushf
dec
xor
shll
lods
add
test
sbb
and
cmp
fistpl
repz
scas
cmp
imul
mov
cwtl
data16
scas
xchg
ficoml
lcall
and
dec
mov
movb
ret
fstl
pop
cmpsl
inc
je
lcall
mov
notb
fdiv
stc
scas
xchg
adc
in
outsb
inc
in
and
or
inc
test
xchg
sub
or
push
fsubs
adc
ret
push
xor
pop
jb
pop
fsubl
xor
das
lods
pop
sub
es
sub
loop
out
mov
cwtl
sahf
inc
mov
loopne
mov
test
xchg
lcall
mov
in
or
push
jmp
clc
sti
pop
push
iret
ret
jmp
lret
out
pop
add
push
shll
scas
inc
sbb
dec
xor
shlb
adc
mov
test
rolb
sbb
ss
cmp
lods
mov
sar
cmp
imul
pop
pop
adc
push
mov
stos
cmp
inc
lcall
movb
outsl
or
cmpsl
pop
push
jg
jmp
mov
lds
and
es
or
ds
cmpsb
push
clc
hlt
iret
xchg
dec
icebp
addr16
add
fwait
shrl
inc
jge
dec
sahf
fidivl
outsl
mov
shl
in
or
int3
bound
pop
jnp
sbb
add
je
cmp
lcall
and
mov
sbb
inc
shll
out
and
test
adc
cmc
sub
adc
jae
ljmp
gs
mov
pop
sub
inc
aas
cli
mov
aas
and
sbb
rcrb
cmpsl
leave
sbb
sub
jmp
mov
jae
sbb
push
push
aam
ja
in
cmp
jno
dec
stos
int3
cmpsl
cld
jo
in
pushf
jne
into
push
mov
fisubrl
inc
lcall
jle
mov
sub
mov
fucomip
rol
js
jg
sub
icebp
jmp
xchg
lret
call
adc
pop
es
or
mov
or
addr16
les
aam
sbb
movsl
and
mov
ss
cmpsl
ret
test
fs
cltd
enter
dec
mov
je
xchg
jo
xor
dec
pop
cli
sub
mov
fcomps
cmpsl
cmp
mov
mov
scas
ds
arpl
int
mov
out
mov
mov
and
push
sbb
in
dec
add
add
pop
test
int
inc
addl
fsubrl
fsubrl
inc
inc
push
clc
mov
fcomps
mov
sbb
push
sbb
push
les
test
inc
sbb
lret
xchg
mov
push
outsb
shrl
mov
adc
pop
pushf
ret
add
pop
sahf
rol
pusha
pop
and
xor
enter
ret
rclb
push
mov
inc
xor
push
test
jns
dec
xor
inc
cwtl
mov
fwait
cmp
xchg
and
es
jae
push
test
popf
fcoms
xor
jecxz
and
mov
popf
out
inc
fs
push
add
mov
cltd
sahf
je
insb
loopne
mov
lea
out
int3
add
mov
inc
mov
test
cmp
mov
clc
sti
mov
sbb
pusha
and
pop
sub
add
andb
add
fsubrl
inc
mov
sbb
scas
movsb
mov
leave
mov
or
mov
cmp
push
dec
dec
popf
int
mov
dec
or
add
or
xor
shrb
mov
push
shrb
data16
inc
sbb
scas
jg
leave
in
mov
cs
pushf
repnz
cmpsb
xchg
int3
push
push
mov
inc
shll
clc
mov
in
rorb
pop
fsubrs
loop
addr16
les
fwait
xor
mov
push
fisubl
loop
insl
cmovae
mov
push
sbb
mov
and
mov
inc
inc
mov
enter
enter
jne
pop
cmpsb
lret
lcall
pop
test
add
ret
popa
mov
inc
loope
out
jno,pt
sahf
je
popf
mov
cmp
jp
add
sti
addl
mov
jbe
adc
rol
mov
testb
leave
mov
and
push
notb
testl
loope
testb
and
lahf
ffree
adc
cmp
or
nop
stos
push
arpl
inc
sbb
adc
mov
mov
movsl
pop
pop
test
lods
cmp
or
pusha
mov
js
jle
stos
sbb
and
add
jp
cmpsb
rcll
lcall
mov
shll
xchg
cmc
mov
push
sbb
and
push
xor
fdivs
lret
jne
push
mov
aam
cmp
sbb
mov
test
mov
xchg
sahf
dec
mov
into
or
les
xchg
movsl
imul
stc
fnsetpm(287
mov
fists
jae
stos
mov
test
je
inc
sbb
inc
dec
push
rorb
divb
pop
iret
imul
fisttps
scas
inc
std
xlat
dec
cld
enter
test
sti
mov
sti
fisubl
iret
dec
rcr
xor
pop
or
sbb
lret
mov
dec
or
pop
pop
add
lods
jle
or
adc
dec
push
xchg
or
adc
push
js
fildl
ret
inc
sbb
mov
xchg
sub
mov
pop
cmp
xor
call
add
std
push
lahf
out
jl
mov
cwtl
jns
or
es
aam
fcoms
xchg
pop
push
inc
mov
imul
call
movsl
mov
xor
jne
inc
ret
dec
icebp
jno
xchg
ret
pop
sahf
repz
test
pushf
fwait
or
and
repnz
or
push
cmp
movsl
mov
mov
xor
adc
mov
cmpsl
adc
dec
sbb
cmpsb
add
cmp
mov
cmpsl
jae
mov
orb
or
push
stos
jge
mov
add
pop
jnp
xchg
pushf
fcoml
cmp
sub
xor
scas
jg
fxam
cmp
stc
icebp
xor
cmp
or
inc
pop
xrelease
mov
xchg
pop
sub
adc
add
pop
orl
movsb
cli
xor
inc
enter
lea
das
test
repz
shlb
loop
jl
or
daa
je
seto
ret
push
inc
mov
pop
push
xchg
shlb
sbb
ljmp
sti
dec
cmp
sub
ds
repz
inc
inc
fcomps
lds
mov
orb
sub
int
inc
sbb
jne
les
cmp
repnz
push
in
cmpsl
pop
ljmp
addr16
inc
rcr
mov
aam
sub
inc
sbb
sub
add
add
add
jg
mov
test
add
mov
jge
or
push
lret
cmp
adc
clc
push
mov
inc
shll
clc
mov
add
out
jge
in
jp
stc
mov
xor
rolb
xchg
data16
cmpsb
fsubrs
fidivrl
pop
push
clc
gs
outsl
jl
loope
icebp
dec
inc
sub
test
rcll
dec
dec
mov
push
inc
mov
rcr
adc
aad
jns
fiaddl
les
fucomip
in
or
or
cwtl
rcll
mov
mov
or
add
fsubrl
fnsave
pop
lret
nop
lds
leave
inc
push
cld
mov
or
aad
lret
fucomp
fs
mov
fisttps
pop
inc
invd
movsb
les
inc
scas
jne
add
pop
xchg
scas
dec
fcoml
sbb
test
xor
cmpsb
push
xchg
arpl
jb,pt
push
cwtl
add
xchg
mov
or
adc
and
stc
xor
push
jmp
in
addl
popf
push
jo
add
ret
sti
xor
pop
movsb
inc
cltd
outsl
adc
out
leave
sbb
stos
lea
mov
dec
add
dec
rcl
inc
cltd
pop
imul
hlt
imul
mov
lret
imul
int
in
std
pop
adc
hlt
mov
inc
mov
ffree
ret
stc
enter
or
orb
and
imul
pop
or
test
mov
sbb
aad
cmp
ljmp
sar
stos
cmp
and
cld
jo
xchg
mov
xor
lcall
jnp
xlat
cltd
pushf
xchg
cmp
bound
mov
fwait
lahf
fldenv
bnd
enter
ss
xchg
push
cwtl
add
addl
jbe
inc
pop
lea
sahf
addr16
fwait
cmp
mov
or
movsl
cli
mov
push
jno
insl
lsl
mov
push
stc
out
int3
jb
enter
xor
bound
and
sub
cmp
cwtl
mov
cmc
hlt
test
cwtl
in
pop
pop
iret
int
pop
in
pop
adc
enter
cmpl
iret
sbb
int
mov
jbe
add
rcll
sbb
add
mov
and
iret
inc
std
or
cmc
lret
test
pop
ljmp
in
jmp
repz
jo
push
ds
lods
mov
sub
movl
or
lret
dec
mov
push
mov
aad
mov
ret
mov
fdivr
sti
and
andl
xchg
fs
or
dec
inc
mov
ret
cwtl
dec
and
and
push
push
out
inc
sbb
mov
pop
fsubl
imul
push
mov
xchg
mov
inc
sub
dec
dec
mov
cwtl
sahf
inc
cmp
jbe
mov
fdivs
out
mov
add
push
xchg
aam
sti
pop
mov
xchg
add
lcall
push
cld
lods
enter
mov
mov
cltd
js
mov
jno
sub
icebp
imulb
js
bound
and
lds
pop
movsb
xchg
sbb
test
mov
fs
cmpsl
arpl
mov
sbb
lret
push
rcrl
lret
add
lds
mov
lock
inc
pop
mov
add
inc
mov
pop
add
fists
inc
mov
inc
decl
inc
orl
gs
cmpl
adc
xor
clc
rclb
ss
xor
push
gs
or
cmp
xlat
push
ds
rclb
loop
je
cwtl
addb
push
dec
dec
into
mov
sbb
icebp
lret
sbb
gs
jbe
int3
fwait
aas
lea
ss
shr
cmp
mov
mov
adc
inc
sbb
mov
scas
ret
mov
fimuls
push
cwtl
lret
inc
sbb
rorb
sbb
les
call
lods
fsts
cli
test
mov
mov
je
ffreep
fcoms
filds
add
xchg
ficoml
cmp
xor
add
pop
mov
popf
adc
cmpsl
pop
mov
int3
mov
mov
in
mov
faddl
sti
and
mov
inc
mov
xchg
push
xchg
lock
inc
loope
push
fisubs
xchg
mov
xchg
jle
pop
mov
lds
pop
pop
sbb
bound
out
shlb
test
inc
pop
xchg
dec
dec
mov
aam
loopne
aad
pop
mov
icebp
pop
adc
push
mov
mov
pop
mov
lods
stc
fstl
jae
orb
insl
popf
sbb
add
cwtl
jmp
sbb
out
mov
int
out
stc
pushf
dec
xor
movsl
dec
test
adc
shlb
into
push
in
test
cmp
pop
cld
sub
idivl
fs
icebp
add
push
jl
lret
ret
adc
xor
jge
dec
stos
xchg
fwait
adc
into
mov
sarl
mov
pop
push
pop
mov
dec
clc
sti
dec
pop
jae
or
sub
sub
or
and
push
pop
xchg
pop
lahf
int
je
or
les
aam
sbb
daa
cli
mov
push
gs
in
out
addl
ret
push
mov
add
inc
mov
sbb
sbb
mov
cwtl
sahf
inc
cmp
das
and
add
mov
jae
jb
mov
or
jge
iret
sbb
jnp
jp
sbb
int3
ss
push
sbb
js
pop
mov
mov
or
imul
ret
popf
cld
mov
mov
lcall
aad
sbb
add
mov
pop
sbb
rcrl
nop
sbb
or
cmp
test
stos
iret
push
pop
mov
push
cld
lret
fstl
jnp
pop
pushf
jnp
ficoms
jg
sub
icebp
mov
sub
or
inc
add
sbb
mov
pop
fcmovnu
jg
xchg
xchg
aas
data16
push
xor
sbb
xchg
js
ret
inc
and
cmpsb
mov
fwait
outsl
or
vpunpckhdq
xchg
xor
sarb
sarb
mov
out
push
adc
push
mov
jmp
mov
movsb
jae
adc
call
pop
movsl
dec
adc
das
mov
lods
fists
popa
lcall
push
lock
cli
or
cltd
mov
repz
pop
inc
mov
icebp
idivb
lds
mov
lret
mov
repnz
ss
sbb
rorb
ljmp
pop
cmp
lcall
lcall
imul
dec
pop
stc
add
jmp
fstps
mov
scas
pop
jno
and
inc
bound
mov
in
add
or
insl
add
jp
adc
add
rol
fadds
adc
movsb
pop
or
mov
stos
cmp
aam
mov
mov
es
test
inc
pop
cwtl
mov
movsb
mov
nop
in
inc
cmp
mov
jbe
mov
sub
adc
or
loop
sti
mov
inc
jnp
mov
add
movl
mov
xlat
mov
cmpb
adc
cmpsb
mov
nop
push
lcall
stos
test
inc
mov
mov
je
rcl
sbb
lahf
jae
xchg
test
mov
fsts
jp
and
stos
jge
dec
cmp
inc
sbb
fistl
xchg
jbe
xor
xchg
stc
aad
mov
enter
sahf
fists
jl
out
and
mov
and
cwtl
or
sarb
push
inc
mov
cwtl
xor
xchg
cmp
inc
gs
fnstsw
mov
cltd
call
pop
addr16
bound
out
adc
cltd
enter
cwtl
pop
and
movsl
jne
test
cmp
inc
nop
in
test
xchg
mov
adc
lret
movsl
ffreep
imul
xor
insl
sbb
and
cs
mov
jmp
sub
mov
fsubrl
jae
inc
sbb
rcrb
sbb
les
pop
mov
push
in
int
mov
xchg
rcrl
fistpll
adcl
roll
sbb
inc
cmp
lock
fistpl
mov
jb
lods
inc
pop
lcall
xchg
cmp
dec
fstpl
mov
mov
loopne
sbb
or
inc
sub
dec
cmc
or
les
xchg
and
mov
pop
jmp
lods
xlat
push
fidivrl
xor
lods
ss
fld
clc
xor
and
cmp
adc
or
andb
inc
inc
pop
sbb
mov
cltd
pop
gs
or
imul
popf
dec
loopne
cmc
js
lods
test
inc
push
sahf
sbb
mov
jns
ds
aas
divl
inc
sbb
outsl
add
mov
sub
mov
ja
leave
fsubl
ret
xor
xlat
stos
enter
repnz
sub
xor
cli
scas
jae
test
lods
cli
fwait
pop
xchg
xor
push
cwtl
nop
jl
or
jo
pushf
ret
call
jnp
xchg
xlat
push
adc
dec
mov
jle
mov
sub
inc
mov
sahf
sarb
js
jle
xor
cmc
and
add
add
rolb
adc
inc
test
xchg
and
xor
clc
xchg
cmp
cmpsb
fsubrs
aaa
mov
rcr
jne
popf
imul
and
push
in
adc
inc
inc
mov
rorb
xchg
adc
in
lock
inc
cmp
add
cmp
lret
popf
push
xor
pop
in
push
ficomps
or
inc
xor
add
jnp
cwtl
aam
fisttpl
fs
hlt
test
test
inc
test
popf
mov
clc
lods
testl
clc
sub
aaa
test
push
dec
subl
repz
shlb
shll
push
mov
bnd
insl
mov
gs
dec
mov
mov
bnd
lods
inc
sbb
fisttps
fucomi
repnz
xor
andl
add
adc
adc
push
fsubrs
xchg
sub
mov
or
xlat
push
fsubl
bound
mov
xlat
pop
stc
out
aam
mov
test
je
xchg
xchg
jmp
mov
mov
push
adc
jg
adc
popa
xlat
mov
sbb
stos
into
sbb
mov
xor
mov
xor
lret
enter
or
ret
cltd
and
lea
xor
xlat
stos
les
push
cli
mov
xchg
mov
push
xchg
fidivl
jno
addr16
in
leave
js
ret
sbb
jno
or
fdivl
lret
or
adc
into
xor
pop
push
mov
pop
test
lea
mov
fistps
scas
fcmovnb
push
fbstp
or
xor
sbb
mov
stos
loop
dec
lcall
int
pop
mov
rol
cmp
fidivrl
enter
push
fwait
cmpsb
fcom
pop
testl
fnstcw
mov
mov
imul
push
or
lcall
cmp
jle
pop
pop
mov
jbe
fwait
sub
loope
and
inc
mov
mov
or
call
hlt
mov
add
add
subl
das
push
push
jp
inc
sbb
rorl
dec
inc
lods
inc
in
lret
pushf
lret
pop
sub
xchg
sbb
xchg
in
mov
rolb
cmp
stos
pushf
xchg
sbb
test
imul
add
pop
call
mov
cmp
sahf
xchg
ds
les
mov
js
rclb
inc
adc
stc
in
add
xchg
lds
fidivrl
jo
xchg
and
frstor
sub
fwait
cmpsb
jnp
fsubs
in
test
mov
jne
fwait
shll
lcall
xchg
xchg
fwait
xor
int
gs
pop
jge
dec
sahf
gs
xor
sub
mov
xchg
mov
lods
mov
pop
shlb
clc
and
jno
pop
sub
push
dec
inc
or
ret
dec
mov
icebp
mov
xor
aad
sbb
add
stos
sbbl
mov
push
mov
xchg
ret
arpl
jns
lahf
jp
jae
or
movhps
stos
push
inc
pop
lcall
mov
stos
jne
test
pop
adc
lahf
lea
sbb
xchg
movsl
addb
jmp
addr16
leave
insl
xor
pop
push
mov
arpl
rolb
sti
inc
add
dec
and
adc
in
push
fisubl
sbb
push
ret
add
cltd
shlb
fdivrs
sti
mov
jne
std
rcll
inc
add
inc
inc
fildll
mov
fcomps
sbb
sub
lcall
ljmp
fistl
imul
add
sti
loopne
div
jmp
icebp
mov
adc
and
or
popf
pushf
inc
test
icebp
or
jb
mov
inc
xor
dec
add
sahf
popf
testl
pop
add
insl
test
inc
cmp
ret
pop
xlat
lcall
xchg
in
test
lret
xor
push
movb
jmp
xchg
enter
inc
repz
push
inc
shlb
pop
lea
addb
stos
xchg
xchg
mov
add
sbbb
mov
repnz
and
xor
cmpsb
jnp
or
subl
cmp
push
adc
jecxz
enter
ffreep
out
mov
cwtl
sahf
je
shr
mov
xor
int3
lcall
mov
movsl
mov
testl
push
test
cld
add
jp,pn
add
test
xor
mov
divl
fnsave
push
lds
mov
xor
repnz
add
lret
fucom
cli
mov
pop
mov
popf
aad
mov
push
cmp
ret
add
daa
sub
ss
enter
lods
ja
or
or
fistl
add
frstor
test
sbb
je
int3
xor
mov
js
inc
mov
dec
mov
adc
inc
or
fwait
jmp
pop
add
push
mov
jmp
fstl
cmp
call
fistl
fdivs
loope
adc
pop
or
push
or
jmp
ds
push
dec
mov
pop
pop
test
fistpl
mov
test
cmp
inc
push
shr
jl
lar
sbb
fwait
inc
orl
jp
lcall
or
dec
mov
sbbb
ret
xchg
clc
shll
arpl
dec
aaa
in
fisubl
pop
or
stos
sahf
ljmp
add
pusha
loop
outsb
sub
adc
push
fistl
cmpsl
pop
pusha
jbe
lods
xchg
sbb
sbb
lods
in
mov
sti
and
sbb
adc
mull
repnz
rcll
xchg
xchg
sbb
addb
mov
cltd
insl
push
inc
test
xlat
pop
fldz
ret
loopne
je
or
hlt
add
dec
cltd
push
adc
dec
mov
imul
ret
adc
cwtl
dec
and
mov
mov
test
jae
mov
hlt
movsl
lret
pop
sti
lret
or
popa
sahf
rcrb
imulb
lret
inc
sbb
jg
les
xchg
mov
push
in
int
mov
test
pop
pop
in
dec
ljmp
aad
fsts
pop
daa
adc
mov
jo
movsl
pop
outsl
les
add
mov
popf
xchg
mov
cvttps2pi
lcall
xlat
pushf
adc
and
les
adc
sbb
mov
pop
jecxz
and
repnz
cmovge
mov
inc
and
cli
pop
xor
xlat
push
push
out
mov
cmp
lea
mov
dec
inc
sbb
std
aam
push
xchg
imul
sahf
ja
sub
mov
out
inc
mov
call
int
in
lcall
adc
fstpt
mov
orl
push
orb
xor
dec
xor
rcrl
push
fst
dec
pop
add
xlat
dec
sbb
sub
std
jae
lret
jge
pop
pop
xorl
mov
mov
xchg
dec
xchg
or
push
sub
mov
shrl
fsts
xchg
loope
cmpsb
fstl
jnp
inc
fs
xor
sub
fdiv
sti
mov
push
mov
fdivs
jmp
dec
mov
dec
add
or
les
cmp
mov
pop
push
mov
loopne
mov
pop
pop
cmpsb
or
fidivrs
jne
out
bswap
test
enter
inc
leave
sbb
addb
pop
dec
xchg
xor
ja
dec
ret
jecxz
sbb
popa
fstpt
imul
aad
in
orl
lret
jecxz
insl
lahf
shr
or
push
jbe
sbb
leave
rcrb
sbb
xlat
push
fidivs
mov
lret
cld
dec
inc
mov
xchg
cmp
sub
je
mov
and
les
dec
xchg
add
xchg
add
mov
adc
js
lcall
push
fucomi
cmc
mov
fwait
leave
cmc
and
adc
mov
fmull
rorl
cmp
iret
inc
mov
adc
push
sti
test
pop
inc
jge
imul
leave
mov
pop
cmp
std
mov
cmp
ljmp
add
addl
mov
jbe
ljmp
mov
jecxz
push
dec
pop
push
sbb
or
fsts
fidivrs
pop
test
push
mov
loopne
pop
adc
lahf
push
xlat
jnp
lahf
rcrb
mov
mov
mov
xchg
push
daa
cwtl
lret
inc
sbb
or
adc
aaa
or
dec
push
inc
push
mov
pop
mov
mov
in
mov
xchg
test
dec
mov
mov
lds
scas
jge
stos
movsl
sbb
jl
fistpl
lcall
jbe
mov
dec
test
scas
jg
dec
cmc
cwtl
stos
cld
mov
jmp
js
fs
inc
rcrb
aam
andl
roll
out
dec
lods
push
lahf
hlt
pop
cmp
push
fdivrl
ficoml
insl
push
push
xchg
leave
dec
mov
mov
pop
aas
out
out
and
cmp
loopne
hlt
pop
sub
push
mov
popf
in
push
adc
repz
adc
arpl
xchg
divb
mov
repz
cmp
lock
scas
jo
or
fnsave
pop
ret
add
dec
lret
mov
and
add
test
movsb
leave
test
cld
sub
lahf
lcall
rol
imul
nop
fcoms
add
pop
lret
add
inc
cmp
xor
pop
jb
mov
dec
jns
and
jnp
aad
mov
jmp
xchg
cltd
fcmovne
loop
and
mov
inc
aam
jae
and
mov
mov
iret
test
adc
out
push
les
xchg
xchg
mov
mov
xchg
jbe
jo
jnp
imul
inc
and
cli
xor
loop
je
cmp
aam
sbb
inc
enter
push
adc
push
mov
fsubs
vfmsub132pd
ljmp
neg
test
arpl
js
mov
shlb
adc
mov
fs
cwtl
lret
movsl
ret
dec
lret
cltd
xor
mov
pop
stos
push
inc
jle
sbb
inc
mov
sahf
popf
stc
fs
cmp
je
int
addl
int
inc
pop
lcall
pop
stos
rorl
xchg
fistl
cli
sub
fcoml
sbb
sub
xor
jmp
pushf
test
leave
push
nop
add
inc
xchg
cli
cltd
repz
mov
mov
rcll
push
xor
rolb
or
rolb
in
imul
incl
cmp
imul
pop
fdivrl
cmp
xchg
sub
pop
add
mov
lea
push
mov
cmp
out
and
sbb
divb
ljmp
mov
in
sbb
sbb
add
rolb
cltd
jo
divl
fnstsw
arpl
sbb
dec
ljmp
push
dec
sbb
xchg
mov
xor
push
sarl
test
inc
cmp
leave
setne
roll
test
mov
mov
xchg
cltd
push
adc
jge
inc
xchg
adc
out
lods
inc
xchg
and
sbb
add
mov
jge
xchg
scas
xchg
in
les
aam
cmp
aad
pop
cmpsb
enter
and
test
mov
mov
sti
mov
ret
aaa
mov
and
bound
mov
cwtl
flds
add
in
mov
negl
sbbl
das
push
mov
adc
cmp
mov
test
ret
pop
jns
movsb
rcrb
xor
lock
adc
mov
xchg
jno
pop
and
iret
gs
ss
fcmovbe
dec
sbb
and
dec
push
lret
mov
mov
fs
fnstsw
pop
fisttpll
test
imul
cmc
add
lret
aaa
ljmp
enter
int3
xor
shll
ljmp
fs
xchg
jmp
inc
inc
sbb
ret
insl
test
rcll
jle
xchg
xchg
incb
mov
jne
jle
xchg
fld1
jb
cmp
repnz
loopne
je
or
test
jmp
adc
outsb
jmp
lret
cltd
mov
add
add
xor
mov
shl
pop
adc
xlat
clc
lcall
hlt
mov
idivl
add
movl
mov
cmpb
adc
scas
sbbl
stos
jns
push
mov
pop
dec
adc
fistl
dec
sbb
rol
fwait
add
pop
or
push
dec
insl
xchg
mov
fiaddl
push
outsb
les
sbb
cmp
lds
fwait
mov
jecxz
pushf
sahf
xchg
pop
push
fbstp
sub
xor
orl
or
inc
add
sub
dec
mov
xchg
fsubs
cmp
fidivrs
insl
repz
iret
inc
mov
rcl
cmp
xlat
xchg
ret
out
mov
add
mov
xchg
jmp
adc
stos
arpl
int
push
ret
sti
pop
test
pusha
push
lea
push
mov
push
int3
push
mov
lods
movsl
fists
cmpl
lock
rcrb
mov
mov
adc
mov
pop
sub
popa
nop
sbbl
pushf
adc
sub
test
movsb
push
cmp
lods
sbb
mov
ja
fs
movsl
iret
div
imul
je
fcomi
addl
ret
inc
pop
xchg
adc
xor
fisubl
push
pop
push
sub
push
sub
fwait
lods
movb
and
adc
leave
aad
ret
jg
xlat
xchg
cld
add
sbb
out
js
inc
mov
pop
out
arpl
rolb
stos
mov
xchg
stos
xchg
adc
push
fbld
insl
jmp
scas
add
mov
int3
out
jb
fwait
lea
mov
test
enter
int3
inc
push
jb
into
mov
mov
pop
pop
cmpsl
daa
clc
int
int3
sbb
test
aaa
in
mov
lods
xorl
inc
scas
in
lcall
dec
ficoms
jae
jecxz
pushf
cltd
test
add
rcrl
test
jno
mov
frstor
jbe
cwtl
push
stos
mov
aaa
mov
lret
sahf
or
arpl
sbb
fiadds
add
popf
ljmp
or
lret
inc
pop
xchg
lret
or
movsb
nop
rorl
in
test
and
fs
lods
pop
cmp
xchg
adc
out
mov
xchg
and
jb
mov
clc
dec
enter
lcall
lahf
out
into
les
fwait
cmp
gs
xor
fcomp
pop
cmc
xchg
sub
sti
mov
jne
rcll
movl
xchg
fmuls
imul
sti
push
adc
ret
pop
pop
mov
dec
cmp
stos
cmp
mov
aam
xorl
test
mov
lock
add
add
sbb
inc
aas
repnz
stos
ret
and
fmull
repnz
push
stos
mov
jnp
sub
test
inc
mov
sbb
stc
dec
sahf
mov
leave
dec
and
or
push
sbb
lret
or
mov
pop
pop
ljmp
push
into
jle
fcmovbe
xorb
imul
fistps
test
mov
icebp
cmp
and
adc
jp
and
cmp
dec
bound
dec
mov
fnstenv
imul
xchg
fisubs
es
xchg
cltd
testb
fdivrl
jne
dec
cmp
test
push
pop
fimull
pushf
mov
loopne,pn
cmc
xchg
mov
xchg
in
cmpsb
jbe
mov
mov
inc
sahf
shrl
mov
hlt
ds
and
fcomi
mov
add
inc
mov
aad
cmpb
insl
lcall
jne
test
cld
test
mov
movsb
leave
test
xchg
orb
ljmp
popf
lret
fbld
inc
pop
sub
inc
sbb
xchg
adc
xchg
pusha
repnz
outsl
add
sub
xor
shll
jnp
xchg
cmp
jge
pop
xchg
xchg
mov
sti
and
xor
fildll
xchg
xor
shlb
dec
dec
mov
adc
cmpsl
push
sub
ja
fistps
cmpsb
jnp
cmp
mov
ret
lds
enter
or
mov
xchg
test
pop
movsb
mov
jne
cmc
mov
mov
repz
adc
add
sub
pop
adc
inc
mov
into
lcall
iret
fisttps
mov
jp
in
and
mov
jecxz
cld
or
ret
dec
mov
push
divb
rcr
sbb
and
test
pop
jge
leave
pop
dec
das
pop
mov
cltd
pop
std
in
ret
mov
lock
cld
jo
xchg
or
inc
cmp
add
adc
mov
mov
push
fadds
inc
push
js
je
xchg
pusha
js
jno
inc
lods
sbb
inc
cs
fwait
testb
call
test
rorl
aas
stc
mov
sbbb
loope
insl
xchg
jbe
add
mov
jmp
std
mov
sti
and
sbb
jecxz
mov
shrl
out
jne
lret
adc
mov
push
xor
and
mov
rcrl
loopne
adc
cmp
and
mov
add
ret
fdivrp
mov
cvtpi2ps
mov
gs
jns
pop
adc
mov
fs
jno
mov
sbb
xor
mov
mov
jae
fidivl
lock
repz
stos
in
repnz
mov
sbb
sbb
adc
test
push
leave
push
rorl
xchg
push
inc
mov
lret
je
push
cmp
pop
ret
into
cmp
sbb
xor
fwait
leave
loop
sub
push
mov
cmp
or
add
outsl
cmp
jg
adc
pop
push
call
inc
mov
cmpsl
ret
fld
fadd
pop
cmp
jne
cltd
inc
mov
inc
inc
mov
push
ds
and
into
imul
orb
push
test
sbb
mov
les
std
fstl
aas
sti
mov
jns
push
shll
push
flds
sbb
add
insl
cwtl
ret
mov
xor
xlat
dec
pop
add
jns
lds
cli
xchg
inc
mov
mov
je
fxch
pop
test
lahf
lcall
pop
sbb
cli
xchg
or
fisubrl
roll
stos
fisubrl
outsl
or
test
add
jmp
cmp
idivb
popf
scas
pushl
loope
sbb
mov
cld
dec
aaa
and
fwait
and
mov
jge
cltd
push
mov
cmpsb
xchg
aam
or
xchg
insl
or
je
cmpsb
xlat
xchg
jle
loope
and
es
jnp
aaa
sbb
in
push
pop
stos
aas
adc
push
jle
dec
daa
jmp
jecxz
mov
aad
icebp
out
jbe
fistpl
mov
andl
mov
jb
popa
jl
dec
ret
fisubs
enter
dec
add
add
jo
int3
addr16
ljmp
push
lds
cmp
je
repnz
cmp
cs
jnp
pop
insb
cwtl
sbb
insl
mov
hlt
test
in
hlt
aad
push
movsl
pop
mov
sahf
sti
push
sub
inc
inc
mov
in
mov
push
cmp
dec
lock
jge
push
mov
js
pop
sar
add
mov
lcall
dec
sbbb
outsb
sub
je
jp
test
xlat
insb
inc
adc
push
cltd
insl
adc
mov
lea
data16
adc
sarb
sarb
cwtl
int3
adc
lock
dec
cwtl
rclb
repz
test
or
pop
scas
shrb
inc
mov
mov
test
xchg
ffree
pop
add
iret
push
pushl
cvtps2pd
xor
mov
shlb
jecxz
adc
ret
pop
dec
test
xor
mov
arpl
dec
xor
sub
mov
fists
jae
mov
push
lret
pushf
fwait
test
cmp
jbe
insl
mov
jno
vpsadbw
adc
dec
mov
aam
inc
jg
scas
dec
faddl
mov
lahf
ljmp
pop
jge
mov
leave
loop
inc
loopne
aas
cmpsl
xlat
add
je
arpl
cltd
xchg
int
dec
in
mov
popf
je
cmp
push
mov
out
cmp
jo
ret
jp
gs
in
push
andl
xor
rorl
or
aam
inc
and
and
inc
push
push
inc
mov
jne
pop
mov
ret
inc
inc
xor
sahf
sub
mov
pushf
imul
lcall
inc
dec
lahf
lret
jecxz
gs
rorb
or
pop
rcll
cmc
cld
jg
imulb
fidivrl
fnsave
cmp
pushf
adc
push
lds
jl
pop
mov
push
dec
push
mov
push
dec
mov
fmuls
pop
insb
push
cld
pop
sub
push
mov
push
push
dec
cmpsl
push
jne
push
pop
mov
sti
push
sub
popa
cmpsl
flds
inc
pusha
push
jg
fbstp
adc
jmp
rcrb
addl
mov
jo
pop
jns
fsubs
push
cmc
je
andb
out
push
test
xlat
insb
je
fidivl
jle
les
pop
lea
fwait
lea
xor
mov
xchg
insb
aaa
jecxz
mov
inc
in
dec
inc
xor
push
inc
mov
gs
jge
sub
or
dec
mov
imul
jnp
lods
fists
add
decb
jnp
sahf
shll
mov
add
add
and
dec
mov
pop
sub
push
push
and
test
lret
loop
inc
popa
pop
int
or
adc
dec
mov
dec
mov
insb
push
pop
idivb
sbb
idivb
insl
mov
dec
mov
std
testb
scas
dec
push
sbb
movsb
push
sub
inc
in
cmp
cmp
ljmp
out
jmp
js
fucomi
idivl
inc
out
std
mov
pop
ds
les
jl
jp
fnstenv
fucomp
push
test
movsl
xchg
jbe
mov
test
fstpl
fwait
cli
aaa
popf
iret
pusha
adc
int3
pop
sub
inc
sbb
fsubp
xchg
jge
daa
adc
lret
xchg
mov
scas
or
adc
add
or
int
jg
cmp
fidivrs
lcall
in
inc
roll
mov
mov
sub
testb
pop
dec
push
fwait
insb
sub
sub
xor
lods
push
sub
mov
push
mov
xchg
sahf
adc
cmp
adc
movsl
push
pop
inc
mov
outsb
fstps
cmp
lcall
xor
push
cmp
push
mov
jp
iret
sahf
pop
push
or
pop
fwait
leave
push
jp
cld
pop
aas
cmpsl
pop
or
adc
mov
loopne
out
mov
jmp
aaa
sbb
push
lods
xlat
push
fsubs
xor
pop
jnp
dec
popa
xor
and
inc
pop
push
or
and
sub
inc
xor
dec
stos
sbb
popa
test
or
jne
les
inc
inc
mov
mov
into
xchg
jg
or
adc
push
pushl
lar
xor
mov
imul
jg
cld
jg
jnp
pop
int3
addr16
sbb
sbb
outsl
sub
icebp
sbb
loop
mov
mov
mov
je
test
or
pop
outsb
push
cld
mov
jge
push
pop
sbb
add
fistl
cli
cmp
sahf
popf
push
icebp
pop
outsb
ror
xor
lock
sarl
mov
adc
jle
xor
leave
loopne
xchg
sbbb
push
jb
adc
jns
fwait
xor
mov
lock
jo
call
and
test
mov
xchg
ds
jbe
cmp
dec
mov
out
je
fcoms
inc
cmp
ficoms
mov
mov
pop
cmp
test
cld
or
inc
divb
cmp
add
push
repz
add
cld
div
sti
sbb
cmp
push
mov
mov
sub
sub
addr16
mov
mov
fsubrl
dec
sbb
add
mov
lds
lcall
jae
cli
mov
dec
mov
into
arpl
jbe
insl
mov
imul
cmp
push
jecxz
pop
mov
dec
cmpsl
push
ja
add
mov
jae
cwtl
push
cmp
sbb
in
cmp
cmp
stc
insb
inc
bound
in
out
fs
pop
repz
in
idivl
add
idiv
mov
test
out
jp
outsl
test
and
cmpsb
xchg
insb
jbe
jo
test
fbld
push
add
pop
lea
fldz
mov
or
cmp
mov
rorl
loope
jl
sub
mov
aad
ficompl
adc
les
inc
inc
mov
add
or
or
adc
xor
cmp
pop
dec
lock
in
ja
mov
ret
jg
pop
xchg
mov
dec
mulb
fdivrl
pop
add
test
test
mov
push
ret
mov
aaa
aaa
mov
arpl
sbb
add
inc
sub
adc
scas
cmp
mov
lods
testl
push
or
push
sub
inc
inc
pushf
sub
jns
mov
xchg
inc
cld
fisubl
mov
aaa
add
mov
mov
adc
add
repnz
mov
xor
test
and
es
mov
sbb
fsubs
jl
ret
cli
xor
jbe
sbb
loopne
xor
xchg
dec
leave
mov
cltd
cmp
add
mov
pop
pop
mov
add
dec
sbb
iret
mov
or
ficoms
rcrb
sbb
add
test
mov
shrl
mov
outsl
faddl
arpl
leave
rcrb
rorl
lods
push
adc
inc
frstor
mov
sbb
daa
xchg
test
mov
int3
sub
xor
cmp
fcmovb
rcr
adc
cmp
lret
scas
inc
aas
cwtl
shrb
in
adc
or
in
scas
insb
out
mov
sarb
pop
cmpsl
xlat
in
andl
stos
clc
jb
adc
xchg
cltd
xchg
xchg
cmp
mov
stc
mov
cmc
push
push
fdivrs
xlat
add
subl
lea
inc
inc
jmp
fnsave
out
cmp
lock
imul
shlb
cmp
loop
shrb
lret
je
inc
cmpsb
mov
sarb
test
sub
mov
iret
add
jns
ds
aas
xlat
cmc
cmp
movsl
ret
inc
stc
lret
adc
loop
mov
mov
popf
pushf
inc
mov
not
mov
ja
inc
in
arpl
sub
lahf
jp
imull
std
in
mov
mov
xchg
cmp
jno
inc
xchg
imul
fistpl
xchg
jbe
jbe,pn
pop
aad
mov
cld
loop
xchg
js
das
popa
or
push
cwtl
add
daa
push
inc
pop
adc
cmpsb
mov
lea
aad
stc
xor
push
xchg
imul
xor
stos
cmp
jb
pop
mov
fs
rcll
add
ds
lret
inc
mov
enter
jle
fldt
dec
ret
pop
shll
jns
ss
mov
jmp
lret
in
lcall
int
loop
jnp
mov
cltd
jo
lock
adc
mov
cltd
enter
inc
mov
adc
mov
xor
hlt
push
ss
lret
fildll
imull
idiv
jo
scas
jno
add
and
nop
jp
add
stos
std
or
add
sbb
test
jns
inc
pop
mov
lods
mov
mov
loopne
repz
inc
dec
inc
xchg
cmpsl
js
sti
mov
and
sti
cmpsb
call
les
xchg
sub
test
push
fdivrs
gs
imul
inc
popf
mov
pop
cltd
fadd
pop
fldenv
aad
inc
and
cmp
or
cmp
xchg
sub
les
mov
cltd
jns
or
xor
cmp
movsl
lcall
dec
push
fisubs
imul
dec
aas
int
and
call
lock
inc
sbb
jg
mov
lods
ficomps
pop
xor
jmp
sbb
psadbw
mov
cmp
js
dec
inc
in
mov
sbb
sub
mov
push
fcmovne
push
xchg
jnp
lods
lock
sbb
mov
movsb
fisttpl
dec
cmp
arpl
call
sar
add
inc
mov
sahf
adc
pop
mov
xor
mov
inc
mov
and
lret
mov
dec
and
gs
fwait
cmp
mov
push
dec
xchg
push
jne
insl
jge
sbb
into
rorb
inc
add
pop
inc
dec
mov
dec
inc
push
jb
testl
aad
sbb
jne
mov
sub
movsl
imul
pop
lds
iret
out
lret
xchg
in
sub
sbbb
cltd
mov
sbb
or
cmpsl
mov
mov
xor
dec
sbb
pop
loop
jne
rorl
rorl
add
iret
dec
mov
cmp
int3
vpandn
adc
or
add
not
xchg
cmp
rorl
stos
int3
fxch
imul
cwtl
sub
pushf
jle
pop
mov
in
xlat
jge
xlat
pushf
push
fwait
fs
or
inc
cmp
adc
push
cs
dec
aas
repnz
inc
and
mov
lret
aam
add
jmp
dec
inc
popf
mov
jnp
scas
roll
out
or
mov
mov
shlb
test
cwtl
sbb
cmpsl
jne
or
lea
js
cmp
adc
fistpl
call
mov
or
out
and
iret
lock
inc
and
add
int
inc
pop
ret
fwait
xlat
or
dec
sub
lret
inc
sbb
rolb
aaa
leave
sbb
and
into
in
fbld
lahf
fcmove
stc
pusha
push
sub
idivl
std
int
add
jl
rorl
fsts
fisubl
sbb
cmp
pop
xchg
fistl
xchg
xor
popf
adc
xor
push
cltd
jle
lods
decl
loope
into
add
lret
xor
pop
fldt
and
inc
mov
jmp
xor
mov
rclb
cmp
mov
in
or
mov
mov
xchg
sahf
enter
loop
je
mov
ret
inc
push
push
jmp
cli
jne
mov
ret
push
xchg
sti
mov
xor
pushf
jne
les
cmpb
lods
xchg
add
jmp
cli
add
scas
lock
cs
mov
or
or
ret
fs
psadbw
icebp
ss
mov
or
sbb
movsl
dec
scas
fistl
xchg
aad
in
stc
pop
mov
jo
xchg
adc
adc
pop
pop
inc
imul
jge
mov
add
jl
roll
pushf
adc
sub
cmpsl
push
outsl
fwait
lret
out
adc
dec
mov
aas
clc
pop
sub
dec
stc
arpl
mov
add
pop
inc
mov
loope
sbb
xchg
xchg
sahf
xchg
fcoml
test
xor
insl
jmp
pop
loop,pt
mov
inc
and
sbb
out
jne
fdivs
cmpb
xor
shll
or
xchg
in
pop
addl
in
imul
jmp
and
movsb
test
int
imul
lret
leave
mov
stc
mov
jns
inc
sub
out
std
inc
stc
je
cld
sub
imull
add
roll
je
pop
or
xchg
jl
rorl
or
xor
lcall
push
pushf
cmp
sbb
mov
pop
out
push
sbb
or
push
add
mov
adc
mov
aam
stc
repnz
es
mov
fisubl
ficoml
test
jne
insl
xchg
loopne
jne
outsl
or
aad
or
adc
enter
dec
push
or
add
xchg
pusha
pop
imul
xor
fiaddl
sub
jne
fdiv
pop
fstl
jae
sbb
mov
xor
xchg
popa
cwtl
rcrl
sbb
rcrb
sbb
repz
lahf
xchg
jns
lds
cmp
sub
out
sahf
sbb
xor
pop
pop
in
push
loop
sub
sbb
xor
xchg
or
xchg
pop
sbb
aad
mov
enter
in
ficompl
out
sbb
fiadds
inc
push
pushl
stos
popa
lcall
add
jo
sbb
or
xchg
pop
mov
and
test
push
fidivrl
pop
jae
inc
gs
inc
or
stos
xor
xabort
push
cmp
clc
sub
out
push
aam
test
push
sub
cltd
mov
out
cmc
xor
cmc
shll
jbe,pt
mov
and
in
aas
dec
stos
aam
icebp
pop
push
add
pop
push
rcl
mov
mov
adc
and
xor
mov
jbe
and
leave
outsl
sbb
jno
lea
leave
inc
push
lds
fisttpl
and
stc
push
pop
cld
and
idivl
jo
shll
or
dec
rorl
fsts
std
movsl
or
fidivl
mov
ret
push
mov
fstpt
inc
pop
pushf
xor
xchg
xchg
fstl
sub
mov
in
test
sti
and
andl
cmp
cmp
in
add
mov
push
fbld
dec
mov
lods
xlat
addr16
inc
and
and
fs
xchg
aas
shlb
das
clc
hlt
mov
xchg
and
sbb
sub
cmp
pop
mov
rclb
sarl
sahf
bound
pop
jns
lcall
mov
aas
in
and
cmc
clc
in
mov
sbb
jg
mov
sti
and
insb
das
lahf
shll
or
psadbw
aad
leave
std
enter
and
test
movsb
leave
mov
lahf
cli
fs
aad
push
test
ret
test
push
or
inc
cmp
lret
add
jl
rorl
test
fildl
aad
jb
ss
data16
mov
loope
fisttpl
push
mov
push
rcr
pop
fisttpll
xorl
mov
add
rcr
pop
push
mov
mov
fwait
outsl
jp
or
cltd
push
shl
movsb
inc
scas
cltd
or
pop
xchg
inc
cmpsb
sahf
sbb
das
imul
xor
dec
aaa
mov
add
mov
jne
mov
mov
inc
push
daa
jne
jnp
fisttpll
out
inc
and
shr
xor
sub
mov
jb
roll
sub
arpl
loope
xchg
and
mov
mov
rcrb
inc
push
iret
xchg
int3
addr16
mov
mov
xor
mov
pop
pop
loop
pop
test
stc
dec
lods
sarb
ficoml
mov
mov
or
cmp
lret
test
mov
jbe
arpl
je
mov
daa
push
imul
js
and
cs
test
xchg
mov
adc
packuswb
shrb
mov
shl
pop
fiadds
stc
cltd
bound
cmp
arpl
insl
sti
push
xor
jne
cmc
mov
lock
fcmovne
add
sbb
cmpb
lcall
gs
jb
rorl
mov
popa
add
int
movsb
ficomps
insb
shll
push
jnp
mov
mov
fcmovu
push
pop
dec
movsl
mov
aaa
push
mov
cli
inc
dec
inc
fcmovb
push
add
jnp
movsl
jae
add
fldt
jnp
xlat
push
leave
dec
movsl
mov
test
cmp
stos
xchg
or
orl
mov
inc
std
mov
dec
pop
cmp
mov
outsl
jmp
mov
in
fs
rcrl
loope
sti
push
jle
sbb
pop
nop
add
mov
nop
or
push
xchg
out
es
xor
aad
dec
cmpsb
push
mull
fisttps
call
lretw
mov
leave
stc
hlt
pusha
das
xchg
xor
sub
lret
push
in
ret
mov
mov
and
mov
inc
stc
mov
cmp
scas
ret
and
into
repz
push
and
mov
add
loope
sub
or
add
push
push
rclb
jmp
je
sbb
or
and
or
sarb
mov
sub
fucomp
jne
pop
xchg
dec
or
fcmove
stc
cmpsl
jno
test
or
push
dec
ret
test
mov
cmpb
jge
dec
push
pop
dec
gs
fistl
cmpsb
repz
mov
shll
aas
jge
inc
sub
out
stos
jmp
cli
movsb
ret
mov
push
add
clc
xor
mov
sbb
lret
xchg
mov
cmp
adc
mov
fwait
ret
mov
xorl
pop
cmp
aaa
sub
xor
xchg
inc
add
fmuls
test
in
sub
cmc
fldenv
adc
or
xor
das
in
test
pop
sbb
mov
loopne
in
mov
sub
iret
pusha
sbb
inc
dec
fadds
add
lcall
adc
mov
xor
call
push
and
push
dec
mov
stos
adc
hlt
jb
addb
cmpsb
adc
jl
inc
leave
enter
lret
test
fstps
xor
ret
mov
inc
dec
in
jmp
loopne
mov
sub
jne
scas
mov
testb
cmp
sub
push
rclb
jns
scas
subb
and
iret
scas
add
shll
je
shll
xchg
in
mov
xchg
test
jb
cltd
mov
cmpsb
jp
xchg
jp
mov
es
cmp
movsl
jnp
shrb
mov
bnd
lds
je
adc
xchg
ds
fcmovnb
mov
popf
pusha
fstps
jmp
shll
cwtl
jmp
subl
je
xchg
in
jb
jge
cmp
je
hlt
xor
adc
loopne
mov
orb
pop
das
push
mov
xlat
push
or
sbb
movsl
ds
js
idivl
sahf
das
xchg
stc
cli
in
test
mov
add
daa
add
inc
push
jae
sub
push
cli
setb
rorl
pop
pusha
in
jmp
or
sbb
fistpll
and
xor
pop
das
sub
sub
pop
sub
iret
add
sub
les
push
mov
xor
push
sub
inc
pop
mov
es
mov
fbld
call
jg
adcl
mov
lds
in
inc
pusha
dec
mov
add
jp
cmpsb
popa
das
shll
mov
push
outsb
add
iret
push
lahf
and
sub
push
cmp
jno
add
mov
rolb
pop
add
js
adc
ret
movsl
int3
fs
outsb
test
into
cmp
stos
jb
cmp
je
and
aad
repz
je
fbstp
cmpsl
je
xor
add
or
and
ret
test
fsubrl
adc
lds
sbb
stos
pop
insb
mov
inc
popf
mov
jecxz
cmp
fidivrs
mov
jmp
cmp
pop
stc
xlat
and
cltd
ds
mov
and
andl
jmp
lods
and
pop
cli
push
ret
xchg
test
jbe
popf
xchg
call
push
fcoms
mov
add
insl
pop
mov
int
mov
fbld
pushf
mov
mov
xchg
pop
inc
stos
in
sub
cmp
xchg
pop
in
dec
mov
ja
adc
sub
test
scas
mov
mov
jmp
scas
and
adc
out
ljmp
push
add
xchg
bound
dec
inc
leave
movd
arpl
ljmp
shll
sub
mov
jae
cmp
dec
popf
lret
movsl
movaps
pop
and
sbb
mov
imul
and
lods
outsb
imul
inc
mov
push
loop
loop
rcrb
xor
adc
pop
adc
fwait
pop
enter
dec
loop,pt
out
and
sbb
sub
arpl
popf
cmc
je
mov
loop
xor
leave
stc
inc
fs
xchg
bound
jl
in
xchg
iret
scas
and
pushf
push
jge
dec
ds
and
shlb
jmp
shll
jmp
add
scas
ret
cmp
in
mov
adc
out
mov
imull
adc
add
inc
xor
xor
or
inc
mov
push
sbb
jmp
jo
sbb
dec
mov
jg
dec
and
dec
xor
sub
dec
mov
call
jnp
stc
dec
ss
mov
xchg
leave
lret
inc
lret
imul
stos
inc
or
mov
mov
orl
xor
pop
mov
push
mov
repnz
pop
mov
jb
push
loope
jb
scas
push
addr16
call
push
and
ss
test
mov
nop
data16
mov
pushf
shlb
xchg
cmpsl
xchg
test
outsl
pop
shlb
pusha
xchg
add
mov
sub
int
push
mov
leave
out
rol
idivl
pop
loopne
and
loopne
pop
mov
mull
addr16
dec
outsl
lret
push
sub
add
lds
jbe
sahf
mov
push
cs
and
jne
in
out
shll
jno
aaa
xor
aas
sti
loop
movsb
and
std
ljmp
sub
or
test
jg
insb
popa
sbb
insl
sub
jecxz
mov
sub
movsb
jne
xchg
adc
addr16
ret
sahf
xor
aam
stc
in
jmp
gs
hlt
insb
lcall
ja
sbb
add
and
addl
je
dec
fcomps
dec
xchg
sarl
ljmp
stos
enter
pushf
adc
movsl
lret
cmc
xor
out
sub
mov
jo
inc
inc
sub
mov
push
stos
sbb
add
xlat
and
or
xor
cmpsl
shr
je
mov
addr16
jno
push
xor
inc
test
push
jl
xchg
jge
sbb
ds
icebp
sti
jmp
incb
sbb
jecxz
push
sti
mov
das
push
pop
call
fsub
in
addr16
xchg
ljmp
mov
inc
dec
push
pop
into
sahf
sti
fucomp
insl
push
jecxz
push
and
xor
jns
repnz
inc
repnz
in
vandps
inc
ret
push
lock
mov
sub
jnp
xchg
cmc
test
sbb
xchg
jge
dec
lahf
jecxz
bnd
xor
jnp
jg
rol
inc
sbb
add
fcomps
jbe
jecxz
outsl
jle
pop
dec
cmp
ret
xlat
and
stos
xchg
aas
pop
xchg
dec
jb
jns
movsl
push
adc
aam
sti
pop
lcall
pusha
rorb
jle
repnz
daa
aam
aad
aad
fnsave
mov
inc
or
xor
popa
gs
push
mov
inc
dec
stos
shl
test
jge
stos
out
push
mov
push
divl
hlt
add
and
mov
mov
pop
pop
cmp
outsb
dec
inc
lret
fcompl
cs
cmc
stc
ljmp
dec
sbb
repz
cs
push
loope
outsb
pusha
dec
sbb
pop
rcrb
xchg
mov
sub
mov
fisubrl
out
xchg
rorl
push
or
lret
jnp
jb
notl
daa
mul
cmpsl
and
inc
lret
jmp
in
mov
lods
pop
jle
add
xchg
incl
dec
jno
test
notl
cltd
out
xor
or
lods
jo
xchg
nop
add
ja
rol
pop
ficoms
fcompl
data16
lock
lahf
aaa
pop
cmp
andb
cmp
jmp
cmpsl
fs
jnp
xchg
imul
mov
test
ficomps
int
lret
cld
pop
and
jb
xor
addr16
xor
jne
pusha
add
sub
xchg
outsl
das
stos
ss
ficoms
inc
mov
arpl
scas
push
test
add
cmp
icebp
mov
push
cmp
inc
test
pop
dec
into
xchg
jg
pushf
cmp
jmp
inc
popa
sbb
bound
lret
test
sub
sub
in
and
push
sahf
in
xchg
in
stos
jne
iret
mov
cmp
mov
fucomi
in
into
sbb
sub
lods
mov
mov
repz
sub
out
in
hlt
inc
adc
push
loope
sub
xchg
pop
icebp
xchg
adc
rcrl
inc
fwait
out
jb
sbb
test
loope
shrb
jb
aaa
ffree
inc
cwtl
ds
rclb
sti
imul
dec
sahf
gs
int3
push
ds
xchg
mov
daa
and
ja
les
cmp
add
push
jge
push
mov
outsl
out
ja
dec
gs
or
pop
mov
sub
jbe
call
mov
jns
pushf
scas
scas
adc
push
add
adc
jg
adc
xor
cmp
sub
add
jge
mov
shl
je
mov
push
rclb
jne
xchg
aad
dec
push
jbe
test
inc
pop
dec
mov
inc
xchg
sbb
sbb
loop
in
js
pop
sub
push
mov
inc
jne
inc
xlat
insb
add
sbb
je
rclb
out
add
cld
inc
sub
test
jp
adc
pop
xor
dec
and
push
out
jmp
lods
fs
xchg
stos
cltd
decb
pop
xlat
and
or
push
mov
and
jno
pcmpeqb
xor
sub
or
mov
sarl
inc
testl
ret
jo
in
ja
inc
mov
hlt
jno
gs
mov
jo
sbb
add
dec
in
adc
loop
and
mov
pop
and
xchg
push
jmp
xor
push
pop
call
sub
bound
fdivrs
pop
ret
add
iret
push
sbb
dec
aas
dec
lahf
jp
dec
jnp
push
lods
mov
insb
inc
pusha
push
aaa
outsb
sub
cmc
or
rolb
jg
movsb
and
pop
mov
outsl
inc
add
cmp
out
int
dec
xchg
aas
repnz
lret
es
xor
in
mov
ljmp
das
push
aas
push
xchg
gs
inc
sbb
iret
pusha
push
mov
es
xor
xchg
ss
and
aam
mov
or
leave
sub
loop
mov
data16
mov
xlat
pop
add
and
fstpl
push
cmp
fists
aad
mov
sbb
lret
mov
in
testl
lods
and
xchg
rcrl
pop
mov
mov
loope
shlb
adc
lock
movsl
pop
ja
fcoms
inc
in
idivb
hlt
mov
jae
mov
jbe
pop
dec
pop
js
sbb
lret
push
lds
arpl
lahf
cmp
mov
mov
and
push
add
stc
sbb
pusha
in
cmp
jle
xor
stc
pushl
jne
inc
push
pop
dec
jb
cld
push
adc
out
xor
xor
dec
sbb
sahf
sbb
pop
gs
cmp
jl
dec
mov
lds
fxtract
fisubs
rcrb
in
and
pop
nop
jbe
inc
jno
pop
fildll
cmp
mov
out
xor
push
mov
in
cmp
pop
pop
fs
cmovo
mov
jle
sbb
or
inc
jmp
jle
int3
adc
xor
outsl
sub
int
xchg
ds
sub
or
movsb
insb
inc
out
mov
lret
imul
inc
and
mov
movsl
test
fistps
lret
mov
push
jge
sbb
pop
lock
jno
out
cmp
fstps
in
xchg
dec
lods
push
push
movsb
mov
adc
out
out
sub
cmpsl
push
testl
aam
cld
xor
xor
cwtl
add
pop
iret
pop
pop
cmp
leave
push
inc
ficoml
inc
sbb
mov
jl
xor
ret
push
xor
push
add
loope
cld
arpl
dec
clc
jg
sbb
and
and
and
loope
or
ja
and
xchg
add
pusha
cmp
push
or
addr16
inc
insl
aad
inc
xchg
dec
ds
mull
mov
fstpt
cmp
xchg
add
jne
push
mov
arpl
xlat
data16
push
inc
inc
adc
pushf
sti
mov
cmp
insb
popa
iret
and
push
icebp
and
mov
push
pop
fdivs
sbb
orl
adcb
adc
stos
xchg
fildl
movsl
add
int3
xchg
mov
add
pop
pop
jmp
mov
push
sub
fistps
mov
inc
stos
fstpt
lds
pop
rorb
inc
cmp
pop
lcall
je
int3
push
pop
xor
imul
adc
out
jns
and
jb
insb
mov
jl
cmp
xor
icebp
jae
fs
and
imul
add
mov
shll
cmc
or
cmpsl
jecxz
fisubl
jae
and
or
mov
into
or
inc
jl
loopne
xor
outsb
add
push
push
sub
inc
inc
jmp
add
mov
jg
fs
fwait
push
pop
leave
mov
xchg
out
sti
ja
push
adc
fstps
push
push
mov
jae
shll
add
cmp
pop
jae
sbb
xor
push
xor
lock
or
cli
jae
cmpsl
mov
andl
jle
shl
adc
or
in
insl
lds
cli
pushf
add
push
out
cmovo
adc
cmp
mov
stos
or
jb
les
xor
dec
sbb
sbb
lea
mov
xchg
iret
sbb
lret
xor
cltd
adc
es
xchg
je
loope
cmp
and
pop
cwtl
sub
inc
pop
movsl
fcoml
int
pop
add
popa
mov
add
leave
fstpl
add
loopne
popl
push
jne
pusha
add
aad
add
pop
xlat
pop
arpl
stc
xchg
sbb
push
aad
push
loopne
fs
cmp
jmp
test
dec
lret
scas
test
xchg
xchg
mov
fmull
or
sub
sbb
loop
mov
mov
sub
add
test
push
stc
loope
jecxz
clc
jb
aaa
mov
lahf
inc
pop
jns
dec
aad
sub
push
lock
add
push
in
xor
testl
or
or
sahf
pop
daa
xchg
and
jle
mov
jae
movb
sbb
sbb
lcall
sbb
sahf
fsubl
jl
fisttps
lds
fxtract
fisubs
rcrb
in
and
pop
nop
jbe
inc
push
mov
fildll
cmp
mov
out
xor
push
mov
in
cmp
pop
pop
fs
cmovo
mov
jle
sbb
or
inc
jmp
jle
int3
adc
pop
into
lahf
adc
test
pop
dec
std
dec
or
and
popa
int3
bound
int3
push
popa
in
adc
negb
xchg
cmp
loop
mov
in
pushf
notb
mov
stos
xchg
ror
push
clc
daa
out
xchg
in
enter
aam
cmp
aaa
outsb
lods
add
orb
fisttps
jg
xor
test
xlat
add
sbb
std
decl
sub
loop
cmp
add
sub
adc
sti
loopne
mov
scas
sahf
scas
das
pop
cmp
rol
push
add
hlt
cmpps
jae
loopne
fnstsw
or
data16
dec
lds
inc
jne
jge
xlat
sub
into
mov
mov
jne
push
test
cld
and
stos
std
xor
fmull
inc
fcoml
fldl
stc
in
gs
sbb
call
mov
add
mov
lahf
mov
scas
subl
scas
scas
adc
push
mov
fs
cs
jge
cmp
add
inc
push
pushf
les
dec
mov
popf
clc
insl
pop
fistl
jo
movsb
push
lds
ret
push
pop
jns
int3
inc
pop
or
push
hlt
pop
sub
fnsave
add
sbb
add
sahf
aas
out
sbb
mov
inc
stos
push
out
ljmp
cmp
imul
das
jecxz
xchg
dec
cmpsb
ja
das
les
mov
jo
fimuls
mov
aam
cmp
or
adc
aam
aas
push
mov
cmp
pop
add
push
std
jecxz
arpl
popf
cs
cmp
lds
jmpw
je
mov
inc
push
fwait
cmpsb
add
adc
xchg
dec
jl
xchg
or
dec
loopne
push
mov
pop
gs
adc
mov
js
pop
int3
sahf
xor
xor
dec
scas
rorb
into
imul
hlt
and
and
push
sbb
mov
pop
in
xchg
inc
lret
jne
lahf
das
outsl
jo
push
orb
mov
enter
cld
cmc
jp
pop
aas
add
xor
cmp
xchg
pusha
shl
paddq
jae
mov
jl
fs
cmp
aam
jne
dec
lods
jp
pop
mov
sbb
lea
and
sub
mov
mov
leave
cmp
data16
aaa
out
mov
je
fdivrs
jns
adc
xor
fcomps
je
mov
loopne
fstl
les
push
pop
movsl
or
stc
fsubs
adc
outsl
cmpsb
sarb
mov
insl
outsb
adc
pop
dec
jno
roll
mov
cmpl
jp
adc
mov
mov
jmp
cld
mov
or
int
mov
mov
add
ljmp
push
mov
xor
xchg
add
jge
sub
inc
in
xchg
sbb
dec
lcall
ja
sbb
popl
jg
ja
xlat
test
jl
dec
cli
sbb
xchg
loope
test
adc
loopne
cltd
in
je
into
inc
lock
mov
jno
inc
stc
test
xlat
mov
cmc
cltd
inc
iret
and
or
sbb
pop
daa
popf
les
loop
aas
aad
sub
pop
mov
jge
ret
jecxz
call
inc
inc
mov
movsb
jmp
jge
cmp
lret
xchg
fsubl
arpl
clc
movsb
into
pop
shl
icebp
or
mov
shl
jne
or
mov
add
in
cmpsb
sbb
lret
fwait
test
push
xor
mov
int3
in
pusha
pop
sub
push
rcr
testl
jbe
cmpsb
mov
mov
push
adc
enter
mov
jno
dec
mov
inc
jge
lahf
insb
aad
jl
bound
mov
jg
lahf
mov
cmp
loopne
mov
add
push
xchg
out
hlt
mov
popf
jp
pop
mov
adc
stos
pop
add
cmp
cmp
lods
mov
pop
jnp
inc
jbe
loopne
js
mov
mov
sbb
arpl
jb
arpl
and
jp
xor
cs
push
loop
cmp
pop
pop
mov
arpl
jae
cmp
or
push
shlb
mov
push
jge
jle
arpl
lcall
and
stc
jl
pop
push
and
cwtl
out
ds
dec
or
push
mov
jl
subb
jmp
ljmp
mov
test
or
cmp
mov
push
in
insb
fsubr
add
sub
sbb
fidivrl
pushf
jne
sub
test
cmpsb
sub
xor
gs
out
and
lods
fcoms
lcall
movsb
mov
and
int
pop
push
cld
hlt
mov
test
jo
stc
jbe
cmpsl
xlat
add
pop
mov
incl
pop
out
fs
cmp
imul
das
jecxz
xchg
dec
xchg
das
les
mov
loop
add
pmaxub
mov
aam
cmp
or
adc
les
sbb
cmp
xor
pop
add
push
std
jecxz
arpl
mov
pop
add
clc
xlat
sahf
test
pop
pop
inc
jne
pusha
inc
in
jnp
ja
sbb
or
sahf
mulb
xchg
and
cmp
pop
aas
mov
arpl
jb
mov
pop
gs
adc
mov
js
pop
int3
sahf
je
xor
dec
scas
shlb
into
imul
hlt
and
and
push
sbb
mov
pop
in
xchg
out
in
sbb
jne
lahf
das
outsl
jo
push
orb
mov
dec
pop
add
dec
and
mov
push
cmp
or
or
sbb
int
bnd
jb
pop
iret
pop
push
cmp
repnz
cltd
add
sbb
lea
and
sub
mov
mov
leave
cmp
out
loope
out
mov
je
fmuls
jns
adc
xor
fcomps
je
mov
je
push
movl
or
clc
fsubs
adc
outsl
cmpsb
sarb
mov
bound
dec
mov
cld
xchg
mov
ljmp
pop
into
lahf
sbb
add
int
inc
pop
es
and
jp
dec
xor
stos
test
jae
cmp
adc
int
mov
mov
add
ljmp
push
mov
xor
xchg
add
jge
sub
inc
in
xchg
sbb
dec
lcall
ja
sbb
popl
jo
ja
daa
test
jl
dec
cli
sbb
xchg
loope
test
sahf
pop
addr16
cmpsb
scas
mov
test
test
push
pop
mov
es
xchg
rcrl
hlt
imul
lods
ja
stos
dec
pusha
iret
mov
test
mov
fs
incb
jae
int
cmp
inc
mov
push
and
js
xchg
loopne
and
in
bound
push
and
mov
jge
daa
dec
jo
cmp
xchg
cmp
outsb
lock
in
inc
imul
push
adc
pop
pop
push
enter
jne
push
out
push
mov
loope
shlb
adc
lock
movsl
pop
ja
mov
xor
push
jge
mov
add
out
out
jmp
jno
dec
mov
inc
jge
lahf
insb
aad
jl
bound
or
jg
xlat
jg
iret
stc
cmp
ljmp
push
xchg
out
hlt
mov
popf
jp
pop
mov
adc
mov
or
lods
mov
pop
jnp
lahf
aaa
pop
cmp
cmovo
xchg
imul
test
mov
fidivl
or
out
cwtl
and
inc
int3
lret
nop
inc
jno
leave
out
and
add
mov
push
jge
jle
arpl
lcall
and
stc
js
pop
push
and
sbb
out
ds
dec
or
push
mov
jl
subb
jmp
ljmp
mov
test
enter
pop
mov
sarl
insb
fsubr
jbe
mov
cmp
bound
mov
sbb
loop
daa
fstpl
push
pop
enter
aaa
mov
lahf
inc
pop
jns
xor
lahf
sub
lock
mov
sti
cwtl
out
adc
lret
loop
xor
sbb
ljmp
mov
repnz
jae
and
add
xchg
push
jno
sahf
ret
das
push
aas
push
xchg
gs
pop
mov
bound
pusha
push
xchg
fsubl
icebp
aas
leave
jbe
ss
push
and
aam
mov
idivl
fimull
mov
or
jl
jecxz
mov
push
inc
out
mov
mov
or
push
sbb
iret
cmpsl
aad
lock
jns
stos
mov
add
push
and
pop
cmp
inc
mov
out
xchg
aas
sbbb
adc
jle
adc
icebp
popf
fcoml
lcall
test
lods
push
mov
shrl
add
aad
outsb
cs
jmp
sbb
pusha
in
and
mov
inc
cmove
ror
shl
je
rcll
adc
movsl
xor
mov
jno
cmc
jge
insl
pop
repnz
int
cmp
in
bound
adc
mov
mov
dec
andl
mov
ds
mov
les
mov
mov
push
scas
ret
fs
mov
xor
out
jecxz
mov
mov
pop
movlps
pop
das
add
mov
dec
xor
cmp
mov
mov
stc
mov
mov
sti
mov
and
mov
mov
sahf
das
xchg
stc
cli
loope
subb
pop
movsl
int3
enter
inc
xlat
push
cmpsb
rorl
cmp
lcall
pop
test
xor
aaa
jp
sub
push
jmp
inc
fwait
out
sti
mov
das
adc
addl
rorl
mov
sbb
data16
scas
push
push
clc
push
mov
jno
xchg
and
popl
mov
mov
dec
cmp
fnsave
xchg
mov
push
hlt
imul
les
pop
and
test
int
scas
pop
cmp
xchg
add
lcall
pop
mov
std
mov
stc
push
mov
lahf
pop
ja
iret
or
inc
mov
les
cmp
cld
jle
cmp
fld
sub
xor
ljmp
stos
xchg
ficoml
nop
sub
mov
add
scas
mov
fnstsw
push
dec
mov
sbb
inc
icebp
dec
jl
mov
cltd
xor
int3
inc
jmp
and
shll
ja
pop
fidivl
test
aam
jecxz
nop
sub
mov
pop
arpl
in
jo
lcall
xor
sbb
sbb
mov
fwait
lea
cli
jp
mov
and
imull
sub
lock
movsl
cli
mov
dec
cmpsl
ret
fnstcw
pop
mov
insl
push
dec
out
jmp
and
repnz
push
int3
insb
inc
add
pop
inc
mov
xor
jb
push
inc
jbe
je
das
pushw
iret
jecxz
in
xor
jnp
mov
jg
jecxz
inc
ret
aas
cmc
jne
adc
sub
add
es
push
pop
sub
xchg
lret
cmpsb
xchg
fwait
cmp
and
cmp
sub
ds
sbb
lret
mov
add
add
sbb
and
add
loopne
add
xor
test
add
test
add
mov
mov
jb
push
imul
fistpll
rol
js
inc
and
movsl
int
ja
add
pop
and
jl
sbb
mov
cmp
push
aaa
sub
lcall
pop
repnz
sahf
adc
xchg
lea
bound
adc
fbstp
adc
dec
sbb
push
mov
mov
dec
dec
out
in
mov
ret
orb
mov
shll
shr
rep
cmp
pop
test
mov
in
cmc
clc
sti
mov
jecxz
mov
adc
sbb
add
dec
or
xchg
xor
jp
inc
mov
ficoml
andb
xchg
and
mov
cmpsb
or
adc
mov
popf
xor
sbb
movsl
pop
or
nop
js
or
lret
mov
test
pop
mov
lret
xor
cmp
inc
push
imul
mov
into
in
cld
repnz
scas
inc
sub
and
adc
or
jecxz
hlt
jle
sbb
inc
scas
adc
dec
aad
push
cmpsb
subl
mov
cmpsl
ret
jb
gs
mul
adc
movsl
xor
ja
lods
inc
xor
pop
cmp
imul
dec
fwait
lcall
jno
adcb
out
mov
imul
int3
rclb
mov
js
mov
repz
sti
loopne
notl
xor
jge
mov
or
loope
daa
jae
frstor
xor
leave
inc
pop
aas
xor
outsl
test
jp
insl
cmpsb
repnz
rolb
lds
fs
sbb
mov
and
inc
pop
and
test
inc
loop
cmpsl
stos
xchg
fwait
xor
jno
mov
fwait
lods
pop
cmc
add
aaa
pop
xchg
lret
jg
xlat
js
xchg
mov
mov
ds
inc
adc
jg
jle
clc
cmp
fstpt
clc
cmp
xchg
gs
inc
sub
pusha
jb
sub
jbe
insl
sub
outsl
sub
sbb
or
mov
and
pop
inc
or
aad
add
testl
insb
int3
mov
loope
or
lods
movsl
and
fdivrl
out
mov
jae
add
rorb
mov
and
cwtl
push
pop
fwait
xor
ret
and
cwtl
or
sub
add
out
sbb
lods
sbb
movsb
jmp
sbb
sub
jp
push
inc
fadds
test
xchg
pop
jae
mov
xchg
fwait
movsl
dec
stos
fsts
fisubrl
jnp
jle
leave
cmp
enter
xchg
dec
xchg
mov
daa
rcrb
clc
stos
sbb
mov
lahf
xchg
or
mov
pop
xchg
dec
jae
sbb
cmp
xchg
push
insl
jecxz
mov
ss
cmc
mov
cltd
enter
mov
repz
lds
test
in
inc
test
mov
inc
mov
adc
or
into
pop
push
cmp
icebp
cmpl
xlat
fdivl
iret
cwtl
icebp
cmpsl
inc
dec
lahf
lret
sbb
push
xchg
xor
pop
cmp
ret
pop
adc
cmp
add
jnp
stos
cwtl
jecxz
adc
pop
jnp
adc
cmp
mov
lcall
and
cmp
lret
mov
sub
mov
or
lret
movsl
pop
imul
and
or
add
test
pop
lret
jo
in
jns
and
mov
mov
dec
das
cmpb
lds
arpl
add
push
notb
xor
adc
adc
sub
lods
adc
sbb
xchg
imul
jle
scas
mov
mov
lret
fdivp
and
jle
sub
ret
add
and
insb
je
into
jmp
mov
shlb
mov
push
outsl
hlt
mov
jge
sub
cmp
xor
lock
loop
popa
mov
adc
sub
icebp
cmp
pushf
xor
mov
js
loop
lret
mov
shll
xchg
xchg
and
xchg
fisttpl
pop
int
mov
call
cmp
cmp
scas
pop
push
push
inc
push
movsl
pop
imul
push
loope
cmpsl
test
xor
lods
inc
loope
sub
mov
mov
dec
push
sbb
sbb
xlat
cmp
pop
adc
lret
mov
mov
data16
pop
stos
sbb
adcl
adc
cmp
fsubl
jnp
cmp
mov
shrb
daa
xor
mov
jmp
mov
sahf
dec
adc
pop
dec
sub
xor
mov
and
pop
in
clc
roll
lock
insl
scas
jae
ret
mov
aam
sti
cwtl
std
or
in
movsl
scas
push
mov
leave
jecxz
fisttpl
pop
dec
push
fcomi
test
mov
and
adc
mov
cmpl
cwtl
adc
xchg
xchg
mov
adc
sbbb
lret
dec
sahf
dec
cmpsl
xor
jge
or
dec
mov
shrb
imul
and
mov
mov
sbb
sub
mov
add
rorl
stc
jge
addr16
stos
sbb
adc
shl
pop
mov
mov
mov
enter
inc
cltd
enter
stc
mov
jmp
pop
scas
add
lea
xor
mov
cmc
idivl
shr
sub
clc
mov
push
jne
mov
push
rolb
cltd
push
fistpl
xchg
popf
jl
cmp
das
mov
inc
daa
xchg
lret
bound
pushf
dec
and
and
sub
lahf
push
fwait
ds
scas
xchg
jmp
pop
sbb
nop
sbb
shrl
mov
mov
in
stos
jne
inc
gs
fcmovne
test
jno
ret
jo
lcall
mov
scas
adc
jnp
fsubrs
add
daa
mov
inc
sbb
std
xor
lahf
repz
mov
add
retw
clc
movsl
dec
movsl
ret
adc
int3
mov
inc
and
movsl
jnp
xchg
cmc
movl
imul
out
or
xchg
cli
lea
fnstcw
add
fsubl
or
cmp
mov
xchg
mov
xchg
insl
fnstcw
add
cwtl
lods
cmp
aam
aam
jecxz
enter
cwtl
stc
loop
lods
cmp
pushf
mov
test
int3
adc
cmpsb
ret
sub
shll
lods
and
mov
scas
sbb
les
repz
cmp
js
stos
roll
push
imul
sbb
jae
sub
movsb
sub
lahf
inc
cmpsb
popf
xchg
int
cmp
or
jle
sub
xchg
pop
sti
repz
enter
or
jmp
je
gs
rclb
xchg
mov
xor
inc
inc
xchg
xor
mov
scas
out
push
lea
jne
xchg
jge
pop
mov
mov
mov
and
aam
jne
imul
mov
mov
jnp
aaa
jge
dec
jb
out
mov
sub
mov
pop
loope
inc
sbb
jnp
mov
xor
mov
dec
mov
mov
sbb
iret
jb
xchg
orb
shll
jnp
icebp
mov
inc
scas
adc
fbld
dec
cmpsl
data16
scas
std
in
mov
mov
f2xm1
pop
daa
sub
stos
cmpsb
sub
mov
adc
lods
mov
xchg
enter
pusha
dec
ficoml
and
in
adc
pop
adc
gs
sub
add
jecxz
and
or
rcrl
xor
sbb
out
scas
adc
repz
mov
loope
enter
int
jmp
stc
repz
xchg
insl
mov
in
out
pop
mov
jecxz
xchg
jo
pushl
lcall
inc
or
mov
shr
xchg
jecxz
loopne
jno
int3
fistps
iret
fucomip
repz
loopne
push
jle
arpl
pop
lea
int
mov
jb
iret
mov
jns
mov
mov
pushf
jb
sahf
dec
fsts
test
int3
mov
adc
mov
mov
popf
les
int
mov
cmp
cli
jg
push
push
mov
sahf
xchg
fistl
outsl
cmpsl
cmp
ljmp
lods
pop
fmuls
mov
cmp
inc
xchg
or
jno
or
push
mov
add
iret
ljmp
outsb
test
push
sbb
outsb
xchg
jmp
iret
inc
jno
mov
fsts
aad
fs
enter
push
data16
std
xor
dec
inc
cmp
cmpsl
dec
cmpb
fisttpl
jp
jae
inc
xor
adc
lea
fstl
loopne
lock
jmp
or
mov
test
data16
dec
movsl
sub
roll
xchg
push
enter
cmp
test
push
fsub
add
adc
xor
shrl
inc
pushf
fildll
cmpsl
mov
bound
and
inc
mov
sbb
vsubps
pop
imul
push
push
sbb
mov
xchg
pop
and
mov
movsb
and
inc
bound
mov
or
mov
mov
inc
cmp
jnp
mov
faddp
xor
mov
mov
repnz
lahf
scas
xlat
push
fdivrs
jp
or
pushf
fwait
mov
shl
xor
jo
jne
push
mov
sbb
in
inc
pop
or
fwait
cltd
inc
cmp
in
jne
enter
scas
mov
add
pop
inc
mov
sahf
cmp
add
ja
js
jmp
lea
aaa
gs
outsb
aaa
mov
mov
add
fsubrl
mov
add
stos
test
movsl
stos
push
and
shlb
ljmp
cmpl
inc
lahf
pop
pop
pop
jo
test
dec
mov
push
sub
shrb
imul
adc
dec
mov
fsts
jl
push
dec
int3
jne
nop
movsb
mov
sub
sbb
jp
cmpsb
addr16
leave
in
and
xor
cmpl
in
xor
sarl
imul
push
outsb
fsubr
push
mov
sub
jmp
or
popf
mov
dec
and
jb
pop
fidivrl
lock
pop
mov
stc
sbb
xor
sbb
and
sub
push
xchg
jmp
sbb
jp
pop
fwait
jne
cltd
cmp
stos
mov
and
inc
inc
pop
repz
inc
mov
faddp
lret
and
and
mov
mov
mov
pop
aad
cmpb
call
dec
pop
sbb
add
je
sbb
dec
iret
inc
lcall
test
les
nop
mov
outsb
push
les
jg
push
jne
std
cld
pop
mov
std
xor
mov
mov
test
stc
ret
xchg
fs
xchg
popa
mov
adc
add
rolb
js
or
dec
popl
cmc
mov
fiaddl
fstp
adc
loopne
xor
out
jo
jno
ret
jns
data16
mov
out
mov
mov
inc
and
fwait
fwait
cwtl
int
push
xor
fidivs
cmp
or
and
cmp
cmp
push
decl
sbb
test
push
fisttpll
in
out
test
pop
and
xor
and
xorl
cmpsl
ret
jmp
cwtl
movzwl
fmull
sbb
mov
fsubrl
inc
xchg
cld
lods
pop
movl
push
ret
pop
push
push
cmp
lret
xlat
push
call
sbb
cmc
arpl
test
lea
js
cmpsl
push
insb
mov
int3
fisubrs
cltd
jl
fmull
jmp
jmp
push
push
cltd
pop
jp
mov
mov
idivb
jl
or
add
mov
sbb
rcrl
pop
fucomp
push
lods
mov
dec
out
lock
cld
sbb
sbb
std
cmp
and
shrl
dec
inc
and
xchg
rcl
jno
xor
dec
daa
inc
push
bound
pop
out
ja
mov
mov
ret
pop
mov
adc
mov
shll
add
or
dec
inc
jne
pop
or
icebp
xor
loopne
lahf
xchg
int
dec
xor
dec
sahf
std
cmovs
shrl
push
pop
push
shlb
loope
xor
out
push
arpl
icebp
jne
push
stos
pop
jo
add
xor
xchg
mov
push
imul
push
lahf
clc
sub
xlat
int3
push
add
dec
pop
aad
js
pop
fidivrs
mov
andl
andl
clc
insl
aad
push
mov
and
add
and
cltd
jmp
and
or
daa
xchg
mov
push
jns
scas
andl
je
fwait
rolb
in
test
mov
mov
jl
push
enter
inc
in
dec
daa
sub
and
cmp
add
xor
call
cmp
jnp
mov
adc
mov
outsl
add
pop
leave
aaa
mov
dec
mov
imul
lock
dec
sbb
in
push
mov
test
sbb
sub
imul
jo
sbb
mov
scas
xchg
ficoml
stos
xchg
shl
mov
fwait
xchg
icebp
xchg
dec
mov
adc
xchg
std
pusha
mov
stos
adc
or
sub
mov
loopne
add
inc
dec
jo
jnp
xchg
sbb
out
mov
mov
or
inc
dec
push
pop
xchg
inc
jns
cmp
mov
mov
xor
iret
sbb
xchg
mov
jg
push
test
push
xor
leave
xor
add
and
mov
icebp
mov
pop
fnstenv
and
jb
inc
ffree
aas
fadds
shl
mov
adc
sub
repnz
ret
imul
dec
pushf
push
and
std
push
xchg
les
jp
dec
pop
adc
pushf
lcall
nop
cmp
adc
shlb
mov
mov
lock
sbb
cmp
add
cmp
inc
push
pop
cli
icebp
add
out
jl
stc
inc
cmpsb
and
xor
sbb
add
push
inc
ss
sub
sub
bound
push
dec
shrl
outsl
mov
inc
mov
leave
mov
and
movsl
mov
bound
inc
push
push
add
mov
and
mov
adc
jmp
jg
jne
ja
sub
or
movsl
sti
pop
xchg
jbe
mov
jno
mov
test
shlb
ret
inc
sbb
jg
or
ss
push
inc
or
lods
cli
fiaddl
push
imulb
leave
fs
aaa
inc
mov
and
rolb
jg
sub
leave
popa
cmp
push
sbb
pop
in
rorb
fmuls
jp
or
enter
sbb
fstpt
lret
dec
jae
adc
movsl
dec
push
inc
cmp
mov
cmp
repz
js
addr16
inc
jle
push
and
es
mov
data16
jmp
in
dec
fwait
sbb
mov
mov
pop
sub
xor
push
dec
inc
sub
xor
sub
lods
and
aam
push
sub
mov
mov
mov
and
in
push
dec
cmpsl
rcl
insb
inc
sahf
dec
mov
into
pop
mov
dec
ss
div
js
add
mov
loop
xlat
xor
lock
mov
and
sbb
test
push
dec
push
fists
mov
cmpsb
add
fwait
aam
lds
ljmp
hlt
std
repnz
push
outsb
push
xlat
pop
push
mov
add
push
das
xchg
pop
xor
push
cmp
mov
add
adc
jne
les
pop
nop
fnsave
cli
movsb
mov
in
pushf
adc
xchg
test
mov
jno
and
jns
add
xchg
jg
mov
cmp
add
add
inc
cmp
rclb
aam
repz
addb
sub
cmpsb
push
push
in
xchg
imul
loopne
push
cltd
insl
or
fstl
jae
fwait
arpl
pop
jne
es
fpatan
jnp
sbb
es
hlt
mov
xchg
mov
sarb
xor
mov
js
test
push
aaa
cmp
movsb
repz
inc
pop
mov
mov
pusha
scas
mov
mov
pop
mov
add
add
mov
mov
adc
xchg
mov
xchg
cmp
outsb
cwtl
or
mov
xor
scas
lahf
frstor
std
lods
pop
mov
xchg
sbb
test
jge
dec
mov
mov
xchg
sahf
dec
fnstsw
repz
and
gs
lea
sbb
es
shr
bnd
lea
sbbl
pop
fidivrl
mov
inc
loopne
out
std
adc
lds
or
inc
and
cmp
movsl
cmp
xchg
xchg
xor
jnp
mov
ret
lds
fistpll
popa
pusha
fmuls
arpl
int3
jecxz
inc
sbb
dec
sbb
push
pop
mov
or
jge,pn
dec
dec
repnz
or
inc
inc
and
in
ljmp
repz
push
cmpsb
fnstcw
dec
push
jp
icebp
push
add
inc
xchg
sub
lds
in
fsubrl
xor
push
scas
mov
aad
lods
xchg
out
lret
or
je
frstor
jecxz
stos
jb
push
rolb
adc
inc
adc
or
xlat
mov
scas
add
add
test
cld
movsl
adc
movsb
scas
or
lods
pop
sbb
sahf
lahf
pop
stc
bnd
dec
pop
adc
jl
push
rcrl
adc
sbb
sbb
js
mov
pushf
or
push
xlat
scas
mov
xchg
or
scas
les
or
xor
mov
inc
mov
jo
shrb
sbb
daa
xchg
enter
ret
jl
xchg
stc
mov
pop
mov
mov
fdivl
ljmp
xor
mov
jg
mov
clc
bound
mov
jne
and
add
sbb
lods
jg
movsb
flds
jae
cwtl
or
sbb
pop
div
call
mov
enter
lret
and
imul
lods
jle
popf
ljmp
cmp
mov
push
cmp
xchg
push
popa
mov
pop
shll
cwtl
mov
xchg
sbb
les
fdiv
xor
clc
popa
mov
sti
cmp
insl
add
or
insb
pop
adc
xorl
in
std
call
cmc
xchg
dec
movsb
arpl
call
pusha
pop
xchg
test
push
icebp
fistpll
mov
and
push
mov
jmp
xchg
in
sbb
lret
xorb
add
fisubrs
jmp
arpl
push
adc
mov
mov
adc
cmc
mov
repz
orl
fs
lret
mov
sarl
sbb
cmc
lret
cmp
int3
addr16
push
pushf
push
and
hlt
out
push
test
dec
sbb
sbb
sub
imul
mov
adc
sbb
pop
aaa
sarl
sub
stos
sbb
push
popa
dec
cmpsb
insb
clc
dec
mov
cmpl
iret
cwtl
shl
or
and
outsb
pop
or
or
inc
fwait
data16
sti
cmp
fisttpl
adc
adc
xchg
jl
pop
test
call
fistpll
push
int3
cmp
ss
cmp
jnp
inc
and
sub
cmp
out
enter
adc
fistl
sbb
out
idivl
and
mov
sub
aas
int3
lcall
and
jge
shl
mov
or
dec
add
inc
jg
add
fwait
adcb
popf
cmp
and
int
ret
push
fcoml
repnz
sub
lcall
lret
push
arpl
es
adc
mov
rcrl
stos
add
mov
inc
loope
test
sbb
or
imul
push
xor
rcll
arpl
dec
mov
mov
lret
mov
cmp
add
out
inc
xor
push
mov
inc
mov
push
xor
mov
cmp
rcr
xchg
test
mov
lea
aas
movsl
inc
mov
daa
cmpsb
xor
shlb
push
shr
pop
cmpsb
in
xchg
lods
outsb
bswap
outsb
dec
sahf
dec
jae
ja
mov
mov
loopne
pop
add
mov
jns
sub
lea
cli
jecxz
jge
int3
push
xor
or
mov
sbb
jno
jmp
cmp
pop
push
lea
jge
addr16
mov
lret
inc
sahf
fcomip
lea
jns
std
stos
dec
outsb
lret
cmpl
xor
rcrl
push
jo
or
fstpt
xchg
pop
outsl
inc
sub
cmpl
lds
add
sub
jp
xchg
test
ss
push
les
les
adc
test
gs
mov
pushf
push
lcall
jbe
fiaddl
mov
pop
inc
enter
push
movsb
stc
les
cmpb
bound
lea
push
inc
mov
sub
mov
inc
pop
add
mov
inc
ja
ret
xchg
xchg
pop
or
stc
repz
adc
mov
or
pop
and
add
mov
inc
fucomp
ja
lock
push
sbb
leave
lahf
ljmp
pushf
dec
xchg
sbb
mov
test
movsl
dec
sbb
dec
enter
xor
lret
fcmovu
cwtl
dec
pop
lds
mov
aaa
inc
sbb
xchg
xor
and
xchg
sbb
or
stos
cmp
in
jns
jbe
jmp
xor
adc
bound
or
jg
cmp
push
dec
xchg
mov
add
jnp
sbb
dec
xor
insb
cmp
mov
arpl
call
cmp
fcompl
clc
fidivs
in
push
or
xchg
fldpi
mov
popf
lret
int3
mov
mov
cmp
jne
xor
mov
ljmp
jmp
mov
call
mov
loope
iret
stos
sahf
inc
in
repz
movsl
adc
in
mov
lods
icebp
pop
out
mov
pop
xor
pop
add
adc
mov
popf
gs
and
and
in
ret
cltd
jp
fidivrl
hlt
mov
mov
lods
mov
mov
sub
xor
ret
cmpsl
mov
pop
jmp
and
leave
loop
mov
push
dec
ljmp
xchg
cmp
mov
dec
mov
data16
lods
xchg
mov
jg
push
add
stos
insl
ja
fld1
jb
jns
insl
rcr
sbb
mov
mov
xchg
gs
dec
inc
xor
mov
jmp
ja
sahf
dec
adc
pop
stos
movsl
sub
mov
arpl
mov
xor
lahf
mov
pop
addr16
pop
sub
pusha
cmc
fisttpll
jecxz
jp
iret
cmpsl
scas
fists
int3
shll
inc
pushf
dec
and
sbb
shll
nop
cwtl
mov
sbb
scas
mov
inc
push
or
dec
popf
lret
cmpsl
xchg
test
gs
outsb
push
cld
cs
addb
push
rcrb
jl
lcall
cmp
repnz
lods
lods
inc
sbb
es
js
adc
popf
scas
inc
xor
inc
cwtl
sti
shll
in
jle
aad
mov
enter
repnz
push
push
aad
dec
addb
repnz
pop
mov
movsl
or
mov
add
dec
push
ret
mov
test
xor
sbbl
ret
jl
inc
pusha
jo
add
adc
nopl
mov
out
into
in
push
jl
mov
mov
xchg
jle
inc
mov
icebp
cmp
mov
inc
cvttps2pi
sbbl
mov
push
adc
scas
cmpsl
mov
lock
out
lods
jl
sarb
inc
pop
in
test
jmp
jp
mov
repz
sbb
fimuls
or
insb
push
cld
inc
imul
or
or
lds
sbb
jns
addr16
je
cli
jae
mov
xor
mov
push
jge
int3
fucomi
repnz
fildl
cmc
neg
andl
stos
jle
clc
sub
add
out
xchg
sub
iret
dec
and
inc
cwtl
dec
sub
lods
dec
scas
cmp
mov
imul
test
jns
mov
xchg
int3
out
clc
je
cmp
mov
add
mov
fsubr
hlt
sub
sahf
dec
add
sbb
push
jnp
mov
sub
inc
xor
aam
mov
scas
aas
mov
xor
sbb
mov
mov
stos
sbb
jmp
lock
lahf
mov
sbb
int
pop
movsl
xchg
sub
lods
fildll
jae
mov
lret
lahf
mov
cld
test
stos
add
xchg
xor
shl
jmp
addr16
mov
inc
add
orb
inc
roll
add
in
popf
popf
mov
fs
xchg
mov
mov
aad
mov
push
jge,pt
data16
inc
aas
pop
outsl
icebp
out
sahf
fcom
mov
filds
pop
mov
xor
lea
push
jne
adc
push
stc
mov
mov
dec
incl
bound
arpl
push
aad
mov
les
ja
call
mov
xlat
mul
dec
test
ret
jae
repnz
cmp
call
cmp
or
popf
or
stos
mov
mov
in
lods
popf
stc
mov
jo
lahf
cmp
call
lret
sub
mov
or
fstps
xchg
ret
fcomi
jbe
add
sbb
jns
bound
stos
and
dec
and
subl
push
sub
es
jg
mov
js
sub
iret
inc
out
or
mov
xchg
les
fwait
idivl
xor
mov
inc
fstpl
rep
repz
movsl
cli
sbb
jne
inc
cmp
enter
enter
push
aaa
sbb
sbb
mov
js
mov
xor
push
xchg
jmp
mov
hlt
repz
cmpsl
push
jge
ret
arpl
mov
stos
add
inc
lods
mov
pop
popa
test
mov
mov
jo
cmp
std
dec
pop
push
enter
push
push
inc
ror
xor
cmp
decb
test
mov
imul
mov
sub
hlt
fistl
rorl
jae
sar
xchg
mov
test
sbbb
jae
xchg
adc
cmp
push
adc
jne
add
js
scas
inc
imul
lret
in
and
pusha
mov
jmp
daa
inc
xlat
fsubrl
sti
cmp
or
xor
icebp
sub
clc
xchg
int
dec
mov
and
cmp
xchg
je
mov
mov
push
xchg
mov
lahf
fnstenv
and
xor
mov
sub
xor
js
adc
inc
pop
push
sub
das
and
dec
popa
pop
inc
mov
sbb
call
clc
mov
movsl
stc
fnsave
repz
sub
lahf
in
outsl
pushf
cmp
cmp
sub
in
ja
push
sbb
mov
leave
aas
xchg
lret
movsl
lret
jmp
sahf
imul
imull
loop
jecxz
stc
scas
movb
inc
and
lods
repz
mov
orb
dec
xlat
out
imul
addb
mov
inc
gs
mov
inc
lods
push
sub
dec
mov
movsl
push
sub
inc
and
inc
stc
leave
in
test
pop
or
loopne
jnp
mov
jo
mov
mov
adc
and
inc
fucomp
push
jge
inc
fwait
mov
insb
out
lock
cld
sbb
gs
dec
push
ljmp
bound
cmp
jecxz
leave
sub
sbb
cmpsb
xlat
adcl
addb
les
daa
lret
or
pop
xor
jge
mov
xor
cmp
shrb
lods
fiadds
cld
ss
enter
mov
das
xor
stc
in
mov
stos
mov
hlt
loop
icebp
lret
push
stos
fucomp
sarl
xchg
mov
outsb
imul
adc
jo
mov
js
test
inc
pop
push
shlb
push
dec
loope
shrb
lcall
pop
into
xor
fucomi
repnz
dec
cwtl
jmp
pop
aas
xchg
les
leave
xchg
mov
push
mov
inc
dec
iret
das
stos
fucomp
cmp
or
out
movsb
inc
sbb
xchg
in
jo
push
sahf
jne
cmp
sbb
dec
mov
and
es
mov
out
mov
icebp
fs
int
inc
sbb
mov
shlb
test
aad
inc
inc
jge
testb
xor
mov
scas
mov
mov
inc
cmp
into
ds
mov
mov
stos
movsl
lea
mov
jmp
sub
pop
stc
scas
ret
lret
jae
rorb
lret
ret
mov
rcr
pop
cmp
sub
fmul
loope
lret
and
dec
gs
std
cmp
dec
sub
loope,pn
push
jns
test
mov
xor
jge
mov
xchg
or
sub
negl
sbb
sbb
dec
mov
mov
inc
fidivrs
bound
lods
xlat
insb
les
and
pushf
cmpsl
dec
pop
pop
shlb
sti
enter
mov
insb
aaa
sbb
mov
int3
sbb
daa
sub
rolb
mov
xor
dec
mov
cwtl
icebp
add
add
inc
inc
subl
push
out
xchg
enter
pushf
ret
out
adc
imul
add
xor
push
adc
add
dec
mov
jne
and
fnsave
dec
ficoms
dec
sbb
subb
mov
adc
push
neg
adc
add
jge
sub
or
or
mov
data16
and
in
repz
loop
add
inc
pop
std
add
icebp
xadd
mov
cmpsl
or
xchg
xor
mov
and
leave
sbb
cmpsb
or
frndint
fdivrp
ret
adc
or
or
xor
adc
das
insb
mov
jb
jp
inc
aam
inc
pop
pop
cmp
fdivp
mov
jl
mov
xchg
pop
jle
rclb
xor
inc
sahf
and
mov
fcomi
and
and
sti
loop
mov
pop
repnz
paddw
mov
or
push
outsb
push
pop
aad
jae
or
xlat
mov
mov
sub
cmp
lods
mov
lds
xchg
lods
mov
scas
jge
aas
shrl
dec
cmp
test
sbb
push
sub
jmp
dec
push
lods
mov
lods
ss
shrb
subl
ds
scas
repnz
gs
leave
loop
in
adc
sti
sbb
pop
test
push
pop
add
add
and
insb
xor
aam
filds
hlt
lret
cmp
mov
mov
mov
fimuls
xor
push
and
sub
jp
mov
pushf
dec
and
lea
mov
mov
dec
movsb
sub
in
jae
in
or
xor
int3
mov
jle
cmp
mov
scas
mov
sbb
insl
mov
inc
cmp
or
stos
push
scas
in
scas
ror
push
sbb
xchg
repz
or
add
shrl
ret
cmp
outsl
mov
in
lods
mov
mov
test
add
cmp
push
sbb
mov
fistps
inc
lcall
pop
or
xchg
cltd
push
enter
pusha
jle
jns,pn
inc
sbb
fwait
out
dec
lock
add
sub
pop
mov
mov
adc
sub
ficomps
sbb
pop
outsl
not
xchg
ret
cmpl
nop
add
subl
rclb
mov
punpckhwd
fisttpl
adc
mov
sahf
dec
mov
xor
jne
mov
xor
ds
mov
repz
inc
cmp
wrmsr
mov
mov
pop
push
adc
fsubrl
add
push
pand
add
idivl
inc
cmp
dec
test
adc
push
test
je
gs
daa
cmc
inc
rcrb
mov
fsubrl
std
jmp
add
enter
sbb
cmp
lods
jp
negl
sbb
mov
filds
negl
push
sti
fcomps
jp
mov
jge
in
shlb
xchg
test
lods
stos
sbb
test
pop
xchg
mov
sbbb
xlat
xor
or
out
cmp
jb
mov
in
imul
sbb
pop
sub
mov
outsb
xchg
mov
aam
xchg
pop
cmp
xor
ret
mov
lahf
stos
shll
mov
adc
mov
repz
sti
jno
icebp
adc
mov
test
mov
sbb
es
xor
les
pop
repnz
adcl
sbb
xchg
lret
adc
bound
jbe
movsl
inc
inc
mov
lcall
mov
jb
push
rolb
lods
mov
jns
lods
jle
mov
jae
movsl
sub
and
stc
mov
adc
stos
js
mov
jmp
xchg
mov
inc
popf
xchg
leave
cmpsl
pop
xor
and
aaa
add
fucomp
push
mov
repnz
test
push
aaa
scas
dec
test
arpl
fwait
lea
xor
test
xchg
fst
push
lret
push
imul
imul
nop
mov
iret
and
cmp
lret
and
gs
mov
cli
sti
mov
jecxz
add
and
pop
sub
sbb
push
jno
cltd
out
pinsrw
pushf
dec
cmp
xchg
xor
push
sub
sbb
push
lahf
loop
jge
movl
rcrl
jp
add
in
or
xchg
pop
dec
xor
sub
fcmovne
and
dec
dec
pop
jne
add
mov
lods
rcrl
ret
pusha
or
sub
push
stc
leave
cmc
std
aad
mov
loopne
cs
mov
popl
jmp
adc
cltd
in
je
into
xchg
jns
jne
mov
bound
push
and
adc
add
out
adc
add
mov
and
sbb
sub
mov
push
cmp
push
cli
xor
out
ja
lcall
pop
inc
arpl
xor
pop
cmp
int3
mov
sbb
ret
pop
dec
adc
fisttps
cmp
fs
sub
scas
aaa
arpl
mov
adc
dec
filds
xchg
pusha
and
push
pop
xchg
hlt
out
jo
stos
mov
lret
inc
subb
and
push
mov
add
shlb
and
pop
leave
and
jnp
jno
cmpsl
into
in
sub
pop
out
jl
pusha
loopne
popa
mov
es
pop
sbb
stos
cmp
into
fcmovnu
std
decl
and
daa
enter
sbb
fwait
mov
and
jb
dec
ret
cmpsb
rcrb
xchg
inc
pop
std
jb
and
xchg
sub
pop
test
adc
test
sbb
mov
mov
insb
pop
xchg
or
adc
jecxz
jo
sarl
cmp
cmc
pop
mov
push
or
icebp
ds
mov
add
jmp
mov
cmp
mov
add
lods
xchg
sub
adc
mul
shll
mov
fildll
stos
mov
cmp
cld
sti
mov
ret
je
mov
sbb
or
lods
push
xchg
cmp
dec
jae
dec
fs
jge
fldcw
pop
cmp
movsl
inc
fucomi
jb
iret
or
fs
imul
das
jae
sub
testl
sub
xchg
and
xchg
cwtl
dec
and
cmp
add
fdivrs
cli
pop
cmpsb
inc
adc
rolb
fldpi
insb
lods
cli
outsl
jg
pop
mov
inc
mov
mov
loop
or
add
mov
cmp
movsb
cmp
fwait
mov
sbb
pop
stos
shll
mov
jl
jecxz
leave
mov
jge
cmpsb
pop
scas
sub
imul
mov
std
mov
pop
cli
jle
pop
dec
push
testb
dec
pushf
dec
and
clc
stos
mov
sahf
push
test
test
cmc
sub
lret
mov
mov
inc
xor
pop
cmp
mov
jnp
push
mov
xor
mov
pop
scas
dec
fs
lcall
mov
lcall
and
push
sbbl
mov
ljmp
dec
xor
sbb
lods
mov
mov
and
sbb
iret
push
nop
jns
mov
add
inc
fsubp
scas
inc
repz
cmp
adc
pop
mov
rolb
and
or
xorl
inc
add
adc
jne
aad
pop
dec
mov
aad
mov
mov
rol
loope
pop
mov
sbb
das
and
jmp
jae
movsl
fwait
pop
in
cld
add
mov
jno
bound
ret
sbb
add
dec
mov
or
xchg
shrb
adc
cmp
pop
mov
mov
lret
sbbl
loopne
cmp
ljmp
jns
sbb
xchg
ds
lret
call
xchg
xlat
mov
xlat
mov
mov
shll
ffreep
mov
mov
xchg
jo
fiadds
or
add
out
fiaddl
sbb
jbe
adc
test
xchg
mov
mov
call
inc
mov
fwait
lea
mov
in
sub
popf
dec
shll
xchg
test
and
inc
bound
andb
cmc
push
lods
xor
stos
mov
loopne
lcall
jmp
test
mov
jns
sbb
js
lcall
dec
vsqrtpd
cmp
fdivl
push
push
outsb
ljmp
mov
dec
sbb
cmp
hlt
ror
mov
dec
mov
pop
insb
push
mull
into
mov
lock
xorb
xor
shl
lea
test
mov
jmp
std
add
push
sbb
push
fsts
mov
add
movsl
sbb
mov
scas
ds
xchg
and
stc
test
xchg
fwait
jbe
mov
rclb
xchg
pusha
bound
mov
fwait
inc
mov
pusha
xchg
inc
out
mov
sbb
popa
cmp
int
xor
push
sbb
mov
rolb
cmp
and
xor
loope
mov
adc
add
push
inc
push
pop
bound
fwait
xchg
cmp
adc
mov
xlat
cmpl
mov
jne
fsubrl
lods
push
ja
push
push
xlat
mov
jb
cmpsb
stos
movsl
push
push
aaa
pushf
add
sub
cmpsl
dec
fs
mov
mov
inc
add
addb
stos
xchg
stos
inc
test
out
stos
cmp
movb
push
lock
cltd
int3
ljmp
push
or
mov
xor
das
xchg
in
testl
std
pushl
add
fsubrs
jecxz
fadds
and
test
cmp
xchg
and
mov
push
fwait
adc
aaa
jge
mov
sbb
test
dec
xchg
test
test
inc
rclb
jecxz
cmp
arpl
mov
je
xor
loopne
pop
aaa
jmp
pop
fnstsw
jmp
xchg
pop
cmp
inc
aad
lods
rcrl
xchg
cmp
mov
mov
dec
fadd
sbb
xchg
adc
dec
dec
push
mov
lods
popf
test
dec
pop
mov
pop
and
mov
xor
sub
jmp
dec
pop
stc
sbb
inc
lret
jge
outsb
cmpsb
sub
xor
mov
cmp
pop
inc
lahf
xchg
xorb
sbbb
cmp
movl
loopne
repz
dec
push
movsb
je
mov
jne
js
inc
daa
xor
pop
sti
jg
stc
mov
xor
xchg
mov
mov
jg
xchg
sahf
out
mov
adc
mov
sbb
test
lods
xchg
mov
sbb
lock
adc
ret
cltd
jbe
daa
adc
adc
stc
push
cvtdq2ps
ja
push
shr
aaa
call
xchg
bound
pop
inc
add
or
sbb
in
shrl
mov
mov
shlb
pop
dec
mov
loop
cwtl
lret
pop
into
jl
and
mov
cmpsl
xchg
enter
movsb
fildll
lods
int3
pushl
jne
js
or
addr16
sub
lock
push
xor
test
fcoms
jnp
ret
cmp
les
pusha
jge
test
movsl
popf
scas
shrb
ret
dec
xor
or
lock
in
jns
or
dec
fstp
ljmp
xchg
cmp
ficoms
xchg
mov
push
jns
enter
xlat
dec
fmul
xor
mov
clc
cmp
int
mov
xor
push
add
lret
cmpb
hlt
dec
je
stos
mov
push
in
jecxz
ds
mov
jbe
cltd
mov
test
sbb
or
arpl
insl
dec
cmp
cmp
mov
pop
sbb
cwtl
lret
inc
sub
imul
hlt
pop
movsb
leave
test
push
mov
fstl
push
mov
int
stc
mov
leave
cld
xchg
sub
leave
test
out
shll
sbb
fisttpll
jl
popa
mov
push
es
jge
jns
push
mov
js
pop
clc
test
fisubs
inc
jecxz
mov
add
and
cltd
push
cmp
sbb
cmp
nop
jae
ljmp
pop
dec
int
cmp
mov
sbb
inc
hlt
lahf
cmpl
inc
scas
mov
adc
mov
arpl
sbb
stc
jmp
mov
cmp
call
jge
movsl
and
fucomip
in
sti
cmp
fdiv
mov
mov
dec
sbb
push
adc
sbb
sbb
test
pop
hlt
sub
mov
push
aad
xchg
mov
int
lock
add
pushf
dec
mov
arpl
mov
sarb
outsb
cmpsb
sub
xor
mov
sub
jbe
test
shrb
enter
mov
scas
fldt
scas
jg
ss
add
jl
int
xor
andl
rcr
push
pushl
push
lcall
or
push
xor
sub
mov
and
js
xchg
jmp
inc
cs
sub
rclb
xor
mov
cmp
loope
scas
and
mov
mov
mov
cltd
cltd
aam
mov
xor
cmp
repz
mov
fwait
cmpsl
lods
shrl
ss
dec
sarb
add
scas
mov
addr16
imul
adc
test
fwait
cli
dec
cmp
push
jge
fstpt
pushf
sti
lret
sti
push
cmp
bound
xchg
ret
lods
xchg
aam
dec
lock
dec
scas
fisubrs
iret
adc
jne
mov
xchg
jne
cs
lret
fldt
dec
xchg
inc
cwtl
mov
cld
jmp
js
dec
inc
fwait
ss
cmc
vprotb
sbb
mov
mov
adc
in
lea
lahf
les
cmp
dec
pop
jns
stos
out
sub
adc
mov
xor
mov
iret
sub
shlb
pop
add
in
fstl
aad
ret
lcall
into
pop
movsl
dec
add
ret
popf
ds
mov
sbb
loop
mul
sti
loopne
xchg
pop
push
addb
lea
sub
or
xor
testb
fs
cmpsl
mov
imulb
pop
into
gs
pop
xor
cli
lods
push
and
test
and
repnz
xor
repnz
cmp
xor
xchg
sahf
dec
mov
scas
leave
inc
scas
xchg
ficoml
sub
repz
mov
mov
shr
into
lret
and
pop
bound
adc
mov
repz
push
shrb
mov
addb
adc
out
dec
fsubrs
xor
dec
shlb
adc
mov
sub
das
enter
div
cmp
cwtl
das
fistl
add
mov
jae
loopne
int3
pop
sub
into
or
lds
rclb
call
mov
lcall
or
leave
out
mov
or
sti
mov
or
mov
enter
aaa
iret
fs
test
cmpsl
xor
movsb
js
popf
lret
movsl
sbbl
jl
or
push
mov
dec
sbb
decb
jle
fs
mov
sbb
pop
xor
lock
adcl
or
jae
push
push
int3
mov
mov
dec
js
int
xor
shlb
mov
mov
popf
and
xchg
add
xchg
test
pop
or
mov
xor
add
jge
sbb
xlat
and
xchg
pop
sahf
call
inc
sbb
mov
mov
jo
fwait
jl
dec
test
icebp
stc
int3
pop
mov
lea
or
mov
das
dec
mov
popf
cmpl
or
movl
add
mov
jb
mov
je
hlt
mov
cmp
mov
inc
aam
mov
push
negb
and
movsl
push
sbb
and
aad
pop
movsb
xor
mov
call
movsl
clc
mov
iret
in
pop
mov
xchg
fnstcw
xlat
xchg
test
sub
or
mov
stos
xchg
sbb
std
or
bound
popf
sbb
mov
fildll
repnz
push
shlb
inc
add
add
add
gs
addr16
ficompl
fisubrs
or
adc
movsb
fidivl
stos
xor
ficomps
idiv
test
lea
xor
rcll
pop
adc
enter
lds
test
xchg
dec
sbbl
inc
push
mov
pop
stos
int
leave
stc
mov
out
mov
in
lahf
jl
stos
mov
jae
lcall
lahf
pop
mov
iret
sbb
inc
fdivs
inc
iret
movsl
mov
aas
outsl
and
mov
add
dec
or
ljmp
jmp
mov
sub
mov
popf
shll
jo
pop
shll
xchg
inc
dec
mov
mov
push
stos
inc
xchg
push
lret
pop
test
pusha
push
push
mov
and
lahf
scas
jg
pop
jl
insb
scas
fld
int
jo
add
iret
and
aad
adc
mov
clc
dec
fidivrl
outsb
add
int3
push
mov
sub
xchg
inc
and
notb
int
out
mov
jno
stos
push
mov
sub
mov
dec
xchg
xchg
cs
mov
lahf
xchg
xlat
adc
or
lods
ds
mov
adc
popf
je
js
out
scas
cli
pop
adc
inc
xor
sbb
imul
mov
int
dec
inc
sbb
add
ret
ja
sub
test
or
xlat
xchg
sahf
movsb
mov
lcall
aad
popa
push
and
jns
sbb
sbb
insl
cwtl
vmptrst
rorl
stos
aad
imul
or
mov
pop
test
rcll
and
std
adcl
and
bound
gs
fs
xor
loop
rcrb
popf
dec
inc
sbb
mov
iret
jbe
dec
pop
push
fwait
scas
addr16
push
int
scas
jae
xor
aas
addb
cmc
xchg
sub
pop
mov
mov
add
mov
sub
mov
push
sub
les
aam
or
xlat
pop
push
add
cmpsl
loopne
bnd
hlt
fsubrs
and
mov
fildl
adc
jae
mov
ret
mov
rolb
sbb
sbb
push
jne
xchg
lret
test
fmuls
pop
lds
out
std
stos
dec
dec
sti
sbbl
xchg
add
sub
mov
jo
mov
andb
outsb
les
pop
ret
add
pop
cmpsl
push
pop
jb
mov
icebp
jmp
cwtl
jp
pusha
test
push
rorl
xchg
std
dec
testl
sub
in
movsl
test
dec
fstpl
imul
add
rorb
es
cmp
popa
and
inc
jecxz
mov
cmp
orb
pop
adc
mov
popf
faddl
adc
dec
xchg
mov
call
pop
mov
mov
mov
fcmove
or
movsb
repnz
add
inc
mov
arpl
pop
mov
faddl
pop
repnz
aad
test
lcall
and
xchg
repnz
xchg
mov
js
ret
test
jg
xlat
xchg
addl
rorb
test
lret
inc
rcl
or
pop
rcl
cwtl
fstl
mov
test
jmp
test
xchg
pop
aad
jle
into
mov
cmc
icebp
ret
mov
cwtl
mov
rolb
add
mov
and
mov
add
lods
push
sub
mov
mov
lahf
filds
jb
xchg
vpand
loop
inc
adc
insb
aaa
dec
push
pop
sbbb
test
mov
adc
or
push
inc
pop
mov
leave
cli
inc
sbb
into
xor
inc
iret
cltd
mov
xchg
out
jg
enter
mov
add
test
jmp
push
and
mov
movsl
mov
lcall
mov
push
lods
sub
mov
and
mov
adc
ljmp
mov
addl
adc
insl
leave
inc
scas
mov
add
xchg
jecxz
mov
cmp
stos
mov
and
lods
fldenv
rolb
or
xchg
dec
fiadds
test
test
mov
xchg
xchg
mov
push
inc
sbb
add
inc
jnp
pop
cltd
xchg
fnstenv
imul
addb
js
jp
gs
mov
push
sahf
jl,pn
push
mov
sub
lcall
lret
jns
call
mov
pop
stos
shll
mov
ret
or
jmp
clc
cmp
jnp
stos
xor
ret
mov
add
push
inc
cmp
push
xchg
scas
adc
mov
lds
mov
xor
fistl
or
mov
or
sti
pushf
fisttps
or
xchg
test
add
xchg
in
mov
rcrb
push
or
cmp
push
mov
addr16
xchg
pop
rcll
jne
inc
das
push
inc
pusha
xchg
jb
nop
dec
mov
into
ss
jle
rcrb
cmp
cltd
jae
std
cld
rcl
cmovb
pushf
jb
pop
mov
adc
mov
push
pop
test
jbe
pop
inc
cmp
sub
mov
pop
jnp
clc
fdiv
jecxz
and
cmp
or
cmp
xchg
les
push
inc
xor
ds
pushl
mov
test
shll
or
cmpsb
ja
jnp
jae
mov
idivl
xlat
lret
insl
mov
aaa
andl
std
scas
mov
lcall
jns
cmpl
std
mov
pop
xchg
icebp
mov
and
jle
stos
jae
mov
stc
cli
out
inc
iret
cmp
cmp
pop
mov
sub
mov
or
add
test
add
sbb
inc
jb
sub
add
es
push
jae
sarb
xchg
clc
mov
mov
or
nop
and
sbb
xor
adc
fiadds
roll
test
icebp
ret
jnp
sahf
in
xchg
jmp
sti
and
sub
iret
sub
int
in
icebp
mov
int3
lea
cmc
test
mov
adc
and
dec
or
or
push
clc
repz
mov
jae
ja
jnp
repz
loop
cmp
lcall
inc
dec
adc
loope
mov
mov
scas
mov
ficompl
xor
pop
xchg
xchg
adc
lret
shrl
int
cld
stos
adc
bsf
mov
and
jmp
or
cld
js
stos
lret
test
stos
mov
xchg
pop
int
adc
xor
adcl
loope
add
loopne
inc
fsubrs
test
and
xchg
xchg
add
cmp
popf
orl
mov
out
out
stc
inc
bound
sub
jns
xor
push
jnp
aaa
mov
mov
jl
test
in
mov
add
sar
les
enter
push
sub
xor
lods
jmp
add
cltd
std
ljmp
adc
fs
mov
adc
xchg
ljmp
xor
pop
sub
pop
sbb
cmp
shll
jl
shll
sbb
mov
xor
ror
les
mov
paddusw
jne
mov
in
lds
push
xor
sub
inc
in
lret
mov
test
ja
jge
jns
scas
or
push
push
mov
and
cld
jg
ret
jmp
mov
fwait
adc
repz
rorl
push
repz
arpl
ljmp
xchg
sub
insb
cltd
cmpl
push
xchg
jge
adc
insb
dec
dec
out
cmpsl
movsb
and
das
inc
cmc
shlb
pushf
sbb
jno
shl
jb
sub
or
pmaxub
mov
in
push
ds
rcl
push
lds
mov
movsb
fldl
inc
ficompl
fisubs
in
xlat
ret
jl
nop
cld
scas
jbe
push
out
add
cs
mov
dec
fsubrl
pop
xchg
pop
sbb
xchg
dec
mov
in
jbe
mov
fucomp
jae
notl
dec
mov
lods
daa
mov
cmp
lret
xchg
lea
iret
in
jge
pop
cmc
stos
movsl
and
ret
ljmp
shl
scas
mov
lods
inc
sbb
xchg
jnp
dec
test
and
jns
pop
aas
cmpsl
aad
pop
inc
sarb
or
lahf
imul
cmp
xor
ret
mov
mov
mov
xor
jne
fldcw
cmpb
jle
ss
inc
enter
mov
movsb
xchg
xchg
push
xchg
dec
jno
adc
add
shrl
loope
pop
pop
mov
ds
add
add
je
sub
mov
fdivl
inc
sub
fprem1
cld
jg
pop
rcrb
pop
fildl
loop
mov
sub
xor
testb
jb
mov
movb
scas
pop
lahf
sbb
jo
insb
dec
scas
jo
test
sbb
orb
adcl
lret
cmp
sbb
mov
push
add
sub
push
mov
scas
aaa
mov
cli
jnp
inc
nop
and
jmp
push
and
pop
jnp
aam
daa
sub
int
iret
sub
ja
pushf
jb
int
mov
cmp
dec
stos
lahf
out
mov
dec
mov
inc
sbbl
mov
sbb
outsl
imul
aas
sbb
push
mov
mov
pop
jb
add
pop
mov
sbb
pop
je
add
lods
mov
scas
bound
pushf
jl
jns
jge
lods
fistps
mov
out
cmc
dec
or
and
lods
pop
leave
mov
push
cmp
dec
fildl
and
pop
dec
ja
fldt
popa
testb
push
out
cmp
fidivrs
int3
add
lock
push
rolb
add
adc
push
ret
pop
mov
movsb
xchg
jne
gs
cmp
or
xchg
aam
cwtl
sub
pop
aas
xchg
push
cli
push
add
pusha
jecxz
fst
push
push
dec
dec
lods
fwait
int
dec
mov
xor
cli
xchg
inc
mov
ret
add
mov
cmp
dec
mov
or
mov
ret
xchg
mov
in
aam
or
push
add
aad
push
sub
xchg
mov
sub
lock
xor
cmp
sti
xchg
shll
lock
pop
cmp
adc
sti
popa
sbb
or
adcb
sbb
adc
aaa
decb
lds
push
dec
push
mov
pushf
in
dec
lods
mov
sbb
sub
cmpsl
adc
cs
je
sub
mov
sub
hlt
xchg
jl
fdivs
rclb
ljmp
roll
test
jbe
adc
and
sbb
das
pushf
ret
push
clc
or
lcall
je
and
nop
push
sub
push
fisubs
xor
mov
inc
mov
inc
fisttpl
int3
cwtl
cmpsl
pop
cmp
add
ljmp
mov
and
push
xchg
mov
jae
orl
into
pop
stos
aam
idivl
shll
mov
icebp
lret
push
insl
fcom
rol
mov
sub
xchg
sub
jns
outsb
push
adc
cmp
mov
negb
mov
lods
stc
orl
push
mov
sbb
cld
int3
fstps
mov
into
xchg
pop
lock
adc
cld
jnp
adc
inc
lret
inc
sbb
cmp
mov
clc
and
lods
push
sbb
push
ficoms
mov
frstor
mov
add
cmp
adc
add
or
shlb
ret
movsl
daa
je
pop
dec
shlb
and
push
mov
sub
xchg
push
insl
xchg
cmc
data16
pop
gs
in
mov
mov
mov
fcoml
and
inc
xchg
push
and
stc
popa
test
sbb
xor
adc
jae
ja
mov
call
mov
cli
sub
mov
out
mov
mov
mov
fs
popa
sahf
push
js
or
add
or
mov
outsl
adc
stos
bnd
sub
push
push
jge
movsb
fsts
dec
cld
iret
les
or
es
mov
insl
ret
fistpl
sarl
hlt
add
gs
jo
jle
scas
dec
jns
dec
inc
mov
push
sbbb
test
dec
mov
sti
fbld
mov
das
jmp
fistpll
sub
jnp
lcall
addr16
and
retw
sub
and
jno
mov
xchg
leave
movsb
inc
sbb
push
fists
out
inc
and
xlat
pop
test
cmpl
or
and
add
jns
lcall
les
cmpsb
xchg
cmp
mov
out
arpl
adc
xchg
in
movnti
sbb
jecxz
outsb
ja
movsb
insl
loop
jmp
fidivrl
sbb
xor
inc
add
lahf
scas
arpl
cmp
sti
jp
mov
divb
dec
mov
jmp
xor
push
out
dec
pop
lds
adc
xchg
bound
scas
jne
jnp
test
sub
pop
rclb
sahf
mov
and
mov
addr16
test
in
adc
push
jb
mov
jo
lods
enter
mov
add
pop
js
std
adc
xchg
jns
out
shrb
fcomip
adc
push
push
js
sub
jge
repnz
cmpsb
int
pop
popf
iret
jle
mov
mov
dec
sbb
dec
mov
xchg
loopnew
mov
push
das
or
xchg
jge
xchg
repnz
pop
loopne
repnz
out
mov
call
dec
shrb
lds
xchg
mov
enter
subb
xchg
or
daa
fst
lret
lret
push
xchg
xor
fisubrs
ffree
stc
push
or
arpl
jp
lcall
sub
in
mov
scas
mov
jecxz
loopne
mov
xchg
int3
fldcw
mov
sub
repz
divb
fwait
aad
jo
or
js
adc
adc
ret
cmpsl
scas
sbb
mov
mov
and
inc
mov
out
pop
mov
sub
cmp
das
sub
sahf
fsubl
mov
pushf
out
cltd
test
out
inc
sub
mov
shl
fisubrl
inc
adc
xor
scas
int
add
jge
xchg
or
push
pushf
in
pop
adc
nop
inc
sbb
arpl
test
cmp
fdivl
mov
inc
mov
insb
add
inc
or
or
xor
int3
addr16
pop
mov
xlat
stos
dec
scas
sbb
dec
sbb
cmp
dec
shll
and
adc
jmp
movsb
jae
cmp
add
push
stos
xchg
arpl
sub
je
lds
xchg
xchg
data16
pop
cmpsl
push
popf
fwait
pushw
push
nop
mov
push
cmp
stc
xchg
pop
add
loop
xchg
push
outsb
sub
add
push
jne
cmpsl
push
fcmovb
and
pushf
jno
sbb
sahf
fisubs
mov
sub
ja
jns
mov
add
dec
inc
clc
inc
les
mov
hlt
jmp
xor
push
xchg
jmp
mov
nop
push
pop
adc
mov
inc
jbe
je
int
inc
inc
repz
sub
js
push
mov
test
dec
adc
outsl
jmp
in
jns
outsb
leave
iret
inc
xor
ret
jl
push
mov
mov
das
scas
shr
imulb
in
lods
sbb
sub
pop
jne
sbb
adc
inc
popa
in
fsubrs
add
xchg
shlb
sbb
add
sarl
test
xchg
sbbb
les
outsl
mov
and
or
inc
mov
loop
xchg
cltd
mov
mov
push
insl
call
fidivrs
fldcw
inc
test
mov
movsl
jl
shrl
mov
in
cs
lds
cmp
cmp
xchg
sbb
jg
lds
pushf
xor
leave
adc
iret
mov
and
sbb
pop
lds
jle
fisttpl
inc
pop
lcall
sahf
mov
addl
pop
lahf
add
std
cmp
pop
ljmp
mov
lahf
xchg
jbe
dec
inc
in
adc
imul
sbb
mov
xchg
hlt
jp
xlat
subl
cmpsl
xchg
in
movsl
std
push
test
sbb
cmpsl
filds
lret
sub
mov
out
pop
cmpsl
cwtl
inc
mov
lods
inc
push
pop
sub
mov
divb
mov
loop
xchg
or
adc
pop
jns
cwtl
add
cmc
and
sahf
push
xchg
mov
js
ljmp
push
call
dec
inc
ret
jecxz
insl
cmp
mov
outsl
mov
out
cmp
push
data16
sbb
inc
xor
or
aaa
mov
pushf
imul
ficoms
test
adc
cld
dec
pop
fdivr
addr16
fstl
cmp
scas
test
adc
ret
sahf
or
cmpsb
jecxz
sbb
mov
imul
cmp
clc
jno
jp
ror
clc
cli
jno
lret
xlat
stos
movsl
std
xchg
test
jnp
lret
cmp
cmpl
xor
xchg
fcmovb
mov
aam
cmp
lcall
or
movsl
xchg
pop
xchg
fistl
jb
sub
and
inc
jmp
sahf
fsubp
fwait
iret
push
jo
into
xor
adc
arpl
xor
and
aaa
scas
arpl
iret
add
add
movsb
push
mov
jmp
adc
repnz
les
ds
inc
repz
insl
jecxz
popf
fisttps
clc
out
lock
jl
jp
aaa
sub
push
mov
mov
pop
pop
fdivp
inc
adc
mov
pusha
push
ret
jo
xchg
push
icebp
int
xor
popf
arpl
into
push
dec
adc
cmp
repnz
pop
fldenv
lret
push
mov
add
add
jl
loope
or
xor
jp
aad
inc
pushf
or
outsl
xor
lock
push
and
les
inc
sbb
fldl2e
jae
push
test
std
lea
icebp
pusha
inc
push
push
lcall
das
pusha
dec
push
sub
dec
pop
cmp
xchg
add
push
jnp
les
cwtl
insb
or
mov
outsb
jp
fadd
fucomi
rep
dec
jg
shrl
mov
push
lds
sub
fsubs
mov
clc
push
test
fwait
xor
enter
inc
sbb
mov
pusha
sub
cmp
test
push
adc
mov
mov
dec
adc
pusha
mov
mov
fsubr
push
sbb
insl
lods
xchg
or
shrl
xchg
and
push
pop
nop
pop
pop
mov
fistpll
enter
mov
sub
aaa
mov
jno
sub
sbb
push
xlat
stos
mov
push
mov
mov
add
lret
push
cmp
mov
aad
mov
fstpt
sub
adc
xchg
push
test
jnp
adc
push
inc
leave
dec
pop
gs
and
movsb
std
dec
sbb
sbbl
fildl
jle
sub
leave
mov
inc
nop
orl
push
sbbb
mov
mov
xchg
sub
mov
mov
pop
xchg
push
and
mov
pop
inc
insl
lahf
insl
cmovae
cli
xchg
je
out
add
dec
and
lock
lret
xchg
test
and
pop
pop
add
rolb
pop
mov
xlat
inc
or
cmp
in
mov
mov
lret
pushl
cwtl
jmp
jb
pop
push
int3
jecxz
add
mov
sub
repnz
stos
pop
add
leave
lahf
jns
cwtl
lret
aas
mov
xor
push
pop
fwait
push
xchg
xor
jl
mov
scas
mov
fisttpll
mov
xor
pop
push
pop
push
or
xor
fnstsw
mov
sub
jae
mov
jae
sub
and
pop
test
fs
jno
sub
adc
mov
popa
pop
loop
movsl
jecxz
inc
mov
stc
dec
ja
int
pusha
xor
dec
movsb
movsb
add
or
or
and
and
pop
test
push
in
daa
jnp
dec
jb
fwait
lea
cmp
mov
int3
pop
jbe
fstp
lods
xor
imul
xor
fsubrs
dec
aad
xor
and
adc
orl
ret
leave
sub
sti
mov
std
lock
int3
ja
push
mov
orb
xor
lret
cltd
push
dec
pushf
pop
and
add
sbb
mov
sbb
lahf
cli
pusha
stc
decl
pop
xchg
flds
pop
inc
cltd
out
sbb
icebp
mov
cltd
jmp
imul
or
inc
shrb
mov
sub
jg
xchg
dec
and
add
cld
cmp
mov
pop
inc
fsubl
mov
add
jae
fsin
inc
shr
shrl
adc
mov
or
mov
push
fimuls
fcomi
mov
cltd
jo
cltd
push
sub
adc
jae
repnz
push
vpor
push
aam
pop
cmpb
and
push
mov
fdivrs
lahf
jne,pt
pop
mov
dec
lahf
lret
loop
lret
jo
leave
or
inc
mov
and
mov
sbb
mov
xchg
leave
test
clc
stos
adc
scas
pop
pop
cmp
daa
inc
cmp
sbb
ja
mov
arpl
sub
test
cmpsl
repz
inc
cmp
imul
add
pushf
dec
pop
sub
push
inc
lcall
push
push
push
fisubl
jb
dec
sahf
jns
cmp
ds
sbb
mov
lahf
xchg
sbb
push
je
aad
js
push
leave
add
mov
test
push
clc
test
test
xor
cli
cmpsb
sub
adc
and
call
repz
stos
mov
adc
call
mov
cwtl
lahf
pop
mov
xor
out
fstl
push
mov
popf
dec
or
les
jmp
sbb
jne
xor
xlat
fucomip
jnp
mov
sbb
into
inc
ret
clc
xchg
addr16
test
leave
fsubl
mov
in
jge
xlat
stos
les
cmp
cmp
inc
nop
pushf
pop
in
mov
mov
addr16
or
cs
or
or
xchg
mov
and
dec
sub
sub
test
sbb
fisubrs
inc
inc
jmp
jp
mov
pslld
and
dec
xchg
arpl
ret
mov
inc
cwtl
mov
gs
imul
cmp
cmpsb
lods
and
shll
jnp
enter
out
mov
lds
mov
les
mov
rclb
mov
push
push
push
mov
stc
fisubrs
aam
in
cmp
mov
pop
aad
cmpsb
rcll
dec
imul
sahf
jmp
xor
mov
adc
les
mov
or
add
pop
ret
dec
inc
adc
ljmp
popf
fstpl
dec
sbb
pushf
sub
xchg
pop
std
fdivrl
mov
repz
int3
les
stos
faddl
das
or
pop
mov
and
add
dec
rcr
xchg
mov
mov
pushf
ret
pushf
int3
push
jp
pop
pusha
jle
dec
call
sub
xor
add
in
xchg
push
dec
pop
add
imull
rclb
idivl
out
bound
xchg
adc
data16
fsubs
mov
add
mov
loopne
pop
xchg
mov
cmc
sub
mov
mov
mov
push
je
fwait
xchg
test
dec
lcall
loop
ljmp
inc
sbb
out
push
ret
sub
repz
mov
add
pop
ror
pop
pop
xlat
arpl
mov
inc
mov
in
fadd
lock
adc
in
ret
cld
icebp
jo
pop
jne
or
mov
pop
xchg
out
mov
dec
adc
jg
fwait
mov
xchg
push
mov
dec
call
xor
in
pop
in
jg
les
dec
popf
ljmp
inc
stos
cld
lcall
cmpb
enter
inc
mov
mov
lods
test
daa
jns
mov
cmpsl
jecxz
mov
clc
in
sub
mov
insb
in
add
add
sbb
addl
mov
dec
cmp
mov
and
xchg
jmp
jae
or
scas
mov
push
lods
xlat
mov
call
std
add
push
push
add
jp
leave
iret
cmp
dec
cmpsl
sbb
sub
andl
push
mov
je
adc
insl
inc
ja
fdivs
jnp,pt
shr
repz
cmc
push
mov
inc
int
jmp
clc
mov
test
popa
pushf
add
popf
cmp
pop
pop
imulb
or
test
movsb
mov
ret
pushf
fmul
xor
vpclmulqdq
lret
cmp
mov
bound
xchg
or
add
push
push
fsts
scas
jne
inc
xchg
fndisi(8087
mov
lds
mov
add
jmp
sahf
sahf
arpl
leave
cs
fyl2x
and
add
jge
and
and
sub
push
mov
dec
jae
and
movsl
ret
inc
out
jb
icebp
inc
mov
and
call
pop
insb
arpl
mov
sbb
adc
jecxz
mov
mov
mov
mov
xchg
in
enter
mov
mov
sarb
popf
add
pop
adc
mov
mov
loop,pt
add
shrl
lds
xchg
sbb
mov
push
or
mov
ljmp
and
jg
inc
sub
xchg
jecxz
out
jnp
ja
cli
mov
into
subb
xchg
adc
sbb
xor
xchg
fnstcw
cmc
loope
dec
mov
push
sbb
ret
cltd
stc
loope
mov
ss
dec
fcomip
in
imull
popa
insb
add
pop
mov
lock
ds
inc
xor
mov
movsl
fwait
pushl
sub
in
insb
jbe
jle
mov
daa
jnp
js
iret
cli
dec
cmpsb
inc
cltd
sbb
cltd
fwait
das
add
mov
mov
xchg
and
lock
xor
push
repz
inc
cmp
out
notb
aam
icebp
cmp
sbb
dec
lods
jle
lods
xor
std
xor
mov
xchg
mov
loope
add
sub
lret
mov
and
and
rcr
mov
cwtl
pop
mov
push
inc
in
xlat
int
shll
mov
int
push
negl
inc
cmp
mov
dec
lret
push
and
dec
xchg
push
pop
sbb
inc
dec
cmp
sub
jle
jbe
xor
cmpsl
out
jmp
cs
jne
sbb
cmpps
fdivs
mov
inc
shl
aas
out
adc
incl
fidivrl
sub
add
adcl
dec
cmp
sbb
xchg
stc
bound
pushf
js
aaa
add
hlt
hlt
sub
mov
dec
daa
inc
inc
testl
mov
mov
dec
movsl
mov
jae
xchg
dec
ret
lret
cltd
cmc
mov
sub
test
test
test
dec
sbb
sub
test
jne
push
sub
push
bnd
lcall
sbb
mov
mov
test
aad
pop
int
mov
cmpsl
dec
out
xchg
jl
roll
outsl
cmp
pop
xchg
xchg
loope
cmpsb
popf
adc
in
and
sti
cmp
nop
xchg
bound
mov
or
mov
jle
in
push
addr16
stc
out
std
mov
inc
imul
cwtl
dec
movsl
inc
push
mov
or
shlb
push
popf
mov
push
xor
xlat
pop
xor
les
dec
push
mov
jecxz
mov
aas
cmpsl
xchg
or
jge
lods
out
xlat
sbb
cmp
pop
dec
fcompl
adc
and
dec
fucomip
andl
iret
icebp
mov
decl
xchg
mov
cld
outsb
jo
cmc
adc
lds
dec
add
mov
sbb
icebp
stos
lds
xchg
pop
add
mov
add
mov
sbb
insl
cmp
push
mov
pop
inc
push
xor
inc
inc
fisttpll
xor
sbb
or
push
add
pop
and
jne
shrb
lea
sbb
jmp
push
shlb
call
lock
add
loope
add
rorl
loope
test
sbb
add
mov
xchg
jmp
push
and
icebp
mov
xchg
enter
pop
in
stos
sub
push
fld1
jne
lahf
out
push
or
les
popf
std
adc
jecxz
push
mov
fdivrs
dec
adc
lods
sti
dec
pusha
adc
idivl
xor
pop
sub
inc
mov
pop
jae
jae
xlat
cmc
sub
je
mov
cltd
test
mov
cmp
faddl
inc
dec
pushf
dec
fsub
fsts
out
mov
mov
stos
mov
lret
fldl
in
jns
stos
js
stos
mov
lods
jmp
inc
cmpsl
fisubrs
push
fistpl
pop
arpl
out
stos
jp
push
mov
jne
add
jb
iret
hlt
push
mov
cmp
sbb
lahf
fisttps
roll
std
jecxz
sub
movntq
out
sbb
xor
lods
stos
sbb
sub
push
cmp
and
xlat
sub
test
mov
pop
xchg
fcoms
pop
js
sahf
cmpsb
sbb
xchg
aam
cmp
mov
loope
or
inc
int
fstp
imul
out
xlat
adc
sarb
inc
movsl
repz
jge
pop
sti
shrb
stos
aam
cmp
or
incl
in
cmp
sbbb
xchg
pop
sbb
jne
fbld
fsubrl
lret
sbb
push
mov
cmp
sbb
sbb
insl
test
dec
sub
les
sub
hlt
fstpt
mov
lcall
sbb
aas
jae
repz
mov
in
pop
jp
enter
inc
movb
lods
loopne
add
push
cld
gs
or
lahf
shl
sbb
les
cld
xchg
stc
add
xor
inc
sbb
orl
mov
inc
jecxz
test
push
pop
add
pop
cmp
sub
mov
add
cmp
mov
mov
push
les
inc
popl
fimuls
aas
push
mov
lret
mov
inc
rcrb
inc
and
insb
mov
mov
aas
adc
loopne
loopne
mov
mov
mov
mov
ljmp
pop
push
addr16
ret
sbb
shl
sbb
inc
cmc
lds
xlat
movsb
into
sub
pop
jmp
sbb
inc
fmuls
inc
lcall
popf
stos
stos
out
push
sub
xor
pop
and
movsb
jl
xchg
or
cwtl
pushf
inc
pusha
fisttps
mov
sub
adc
push
lret
pop
sub
test
jp
lds
cmp
jl
stos
sbb
adc
cld
inc
inc
mov
jae
repnz
sbb
jns
fisubl
mov
add
mov
xor
aas
xor
lret
jecxz
cmpsl
lret
mov
push
ret
sub
mov
nop
test
jo
inc
into
pop
stos
movsl
sub
dec
pop
mov
sbb
cmovno
jmp
rcll
lcall
mov
add
sahf
mov
cmpb
mov
dec
push
cld
jl
push
push
stos
mov
fists
mov
sbb
pop
and
scas
mov
sbb
mov
sbb
cmp
xchg
aas
sub
xchg
test
addr16
xchg
stos
xchg
xlat
push
sbb
cmpsb
jecxz
fs
js
scas
mov
pop
inc
sbb
pop
jp
dec
jmp
inc
add
bnd
rorl
test
js
add
xor
imul
je
and
enter
mov
insl
out
pop
mov
stos
cmp
and
add
aam
jo
rcll
or
out
pop
hlt
sbb
nop
test
dec
adc
fsubr
push
movsl
mov
sahf
stos
jecxz
inc
push
jge
lret
cmp
pop
insl
or
xchg
stc
stos
inc
cwtl
pop
dec
lret
mov
ror
ds
in
std
leave
pop
push
dec
jecxz
sbb
movsl
dec
sahf
cmp
sbb
fs
push
ds
and
icebp
push
pop
add
sti
sbb
sub
mov
cmpsl
xor
ja
in
xor
xchg
push
xchg
sbb
or
in
push
cmp
dec
sub
gs
mov
cmp
out
dec
data16
sti
mov
pushf
mov
or
sbb
out
push
and
xor
or
xchg
pop
pushl
insl
inc
lahf
pop
outsl
out
jp
sbb
je
ret
push
xchg
insb
jbe
add
pop
fbld
imul
jb
int
jb
iret
sbb
mov
aaa
sbb
cmp
pop
mov
aas
adc
mov
daa
adc
aas
ret
pop
icebp
pop
das
or
mov
pop
or
cmp
pop
xor
add
cmp
fistl
pop
add
mov
ss
fists
mov
in
pop
dec
outsl
jnp
lds
repnz
fwait
and
push
dec
mov
lret
xchg
in
push
dec
xor
mov
dec
mov
stos
mov
lock
push
cmp
pop
inc
gs
outsb
push
mov
clc
push
arpl
push
mov
loopne
push
cmp
sbb
gs
push
mov
call
cmp
test
push
mov
push
jl
aas
jmp
ret
in
jle
js
or
mov
xchg
out
jp
or
loopne
cmp
xchg
mov
ffreep
lods
cmpsl
ret
xchg
fs
sub
pop
or
mov
mov
ret
jl
adc
test
fisubrs
inc
cmp
cmp
adc
push
sub
mov
xchg
cwtl
pop
add
test
jmp
adc
inc
mov
adc
fbstp
aad
or
and
movsb
lret
insl
mov
aas
mov
pushf
fwait
sub
xor
shll
dec
sarl
stos
fbstp
xor
cld
cmpsl
mov
sbb
arpl
daa
push
stos
divb
sub
push
ss
fdivr
dec
dec
push
lahf
mov
pusha
jecxz
popf
lret
push
js
pop
pusha
test
dec
fistpl
xchg
jg
push
inc
fldl
jmp
fimull
mov
sub
add
jnp
xchg
lock
pop
mov
or
stos
pop
cmp
std
mov
ja
stos
mov
mov
cmp
jp
iret
dec
push
ja
xchg
xchg
push
lds
into
insb
adc
sub
inc
cmp
jmp
inc
ja
jle
movsl
adc
mov
mov
sub
stos
push
xchg
xor
xor
inc
imul
outsl
into
pop
cmp
xor
inc
test
fisubrl
cli
inc
fwait
sbb
mov
out
outsl
inc
fcoml
sbb
gs
add
sti
xchg
rorl
and
mov
sbb
fsubrl
adc
addl
pop
jno
lods
outsb
dec
adcl
arpl
lret
jecxz
nop
fwait
out
xchg
scas
jg
int
jbe
mov
push
inc
xor
pop
push
andb
addl
and
rcll
fadds
xchg
flds
fwait
jb
xor
int3
push
movl
sub
cmpb
test
sub
js
push
mov
fidivs
aam
cmp
bound
repz
in
out
and
arpl
inc
ja
ds
jb
lahf
mov
test
jo
testl
mov
jmp
push
cmp
jbe
repnz
mov
stos
sub
repnz
lods
fstl
mov
push
cld
fcoml
push
push
adc
stos
add
lds
lret
xor
push
popa
neg
sub
or
or
leave
lods
outsb
dec
adcl
arpl
lret
jecxz
nop
fwait
or
add
outsl
jno
imul
ret
out
or
popa
cmp
das
test
mov
sahf
dec
push
xor
sub
lods
fwait
push
pop
mov
rclb
cmp
repz
push
jge
dec
pop
sub
call
das
inc
pushfw
lcall
les
dec
inc
fildll
leave
mov
lret
mov
adc
fnsave
pop
gs
mov
sub
adc
ret
mov
cwtl
orl
jg
mov
aam
aam
push
cmp
out
push
jns
mov
out
cmp
pop
movl
xlat
int3
fsubrl
fwait
sahf
pop
sahf
cmc
sti
jp
faddp
pop
popf
mov
repz
int
mov
dec
int
int3
xchg
inc
fmull
movsl
lea
cmpsl
rolb
or
xchg
add
sbbl
gs
adc
rorl
or
add
sbb
add
push
repz
outsl
pop
mov
dec
mov
fimull
xor
jge
sub
pop
loope
call
jns
leave
scas
mov
pushf
xor
dec
sarl
lods
int
dec
popf
iret
and
xor
movsl
sarb
hlt
jl
lea
push
shrl
out
dec
sahf
lret
mov
iret
pop
stos
fucomi
push
ja
inc
nop
mov
xor
pop
dec
clc
inc
add
fnstenv
sbb
push
jbe
sti
xchg
adc
mov
arpl
addr16
push
cltd
push
fdivl
test
sub
mov
mov
cltd
test
lock
mov
ljmp
dec
in
pop
mov
js
cmp
inc
test
jbe
cwtl
mov
push
adc
movsb
and
cmp
push
sbbb
fdivr
dec
mov
mov
sub
mov
int
jle
or
push
xchg
jmp
jne
out
rcr
adc
cli
push
imul
xchg
loope
lcall
xor
fld1
lahf
cmp
xchg
xchg
mov
shlb
movsb
mov
xchg
out
mov
sbb
jns
and
dec
daa
inc
or
inc
push
jp
shlb
test
insl
mov
mov
loopne
mov
repz
aas
ljmp
std
cmp
xchg
pop
sub
mov
addb
sbb
add
mov
mov
decb
jmp
adc
cmpsb
lret
inc
sbb
jno
sbb
cmp
jae
cmp
lods
pop
popf
into
arpl
jge
test
mov
test
inc
imul
arpl
dec
movsl
xchg
mov
add
add
mov
and
ds
icebp
mov
daa
inc
neg
inc
and
mov
or
mov
test
stc
rorl
xchg
xor
test
cmp
xchg
xchg
mov
mov
mov
and
pop
lcall
out
mov
cmc
jnp
test
dec
jl
imul
xor
pop
je
popf
xchg
call
inc
pushf
neg
movsl
mov
ljmp
inc
mov
es
pop
jns
or
jns
ds
pushf
ret
jns
add
call
sbb
cs
stos
cwtl
mov
inc
mov
push
imulb
inc
in
xlat
dec
stos
movsl
mov
xchg
jae
push
dec
repz
mov
aaa
popf
out
arpl
in
mov
dec
mov
push
jp
xor
and
mov
push
jns
call
mov
jo
push
cmp
shrb
inc
xor
outsl
push
cmp
cli
ficoml
push
insb
inc
fwait
loope
pop
push
repz
inc
int
fldenv
adc
aam
test
cwtl
mov
xor
jecxz
fnstsw
xchg
mov
jmp
cmp
out
sub
aas
pop
sti
addr16
xchg
ret
pop
int3
pop
dec
xorb
lret
mov
aad
inc
lcall
cmp
mov
jns
shrb
jecxz
loopne
inc
inc
mov
iret
repz
sti
xchg
enter
aaa
inc
pop
shlb
lock
cmpsl
jecxz
cld
push
cmpb
popa
popf
scas
pop
mov
fcoml
divb
jg
push
xchg
js
xchg
pop
and
add
or
call
les
cltd
insb
and
lock
mov
jl
rcll
mov
lods
arpl
loope
xchg
pop
test
mov
or
movsl
add
and
pop
cs
or
xchg
loop
xchg
adc
mov
gs
dec
dec
xor
jg
in
sub
popf
dec
jno
dec
adc
xchg
in
sbb
scas
or
repz
jb
jae
xor
jns
sarb
adc
jmp
adc
fsubl
rorb
inc
stos
in
bnd
adc
adc
inc
inc
idiv
mov
mov
test
icebp
outsb
pop
adcl
mov
movzwl
add
nop
in
in
cltd
fsubrl
pop
data16
and
push
push
cmp
sub
jmp
xor
dec
mov
lock
push
add
cwtl
loopne
bound
xchg
jno
sub
add
cmpsl
mov
fidivrl
sub
mov
lcall
fwait
lods
cmp
sbb
and
jns
dec
sbb
scas
movl
cmc
out
popl
andl
add
mov
test
inc
adc
mov
or
or
adc
rorb
mov
xchg
adc
fisubrs
xchg
movsl
inc
cltd
jmp
lea
jp
xchg
enter
hlt
xor
aad
outsb
mov
and
push
xchg
mov
in
ljmp
cmp
das
xlat
jmp
mov
cltd
mov
inc
rolb
je
adc
mul
add
xchg
idiv
and
lea
dec
pop
jnp
sbb
xchg
push
test
xor
sbb
ss
shll
pop
push
xor
sahf
jb
adcl
fsts
lahf
or
dec
or
push
mov
push
mov
loopne
aaa
mov
sbb
pusha
xchg
jge
stos
neg
clc
js
ficoms
xorl
clc
aas
nop
mov
in
addb
bswap
jg
rcr
mov
mov
test
xchg
adcl
mov
push
outsl
sti
repz
mov
cmpsb
xchg
adc
out
enter
aaa
mov
in
sub
rcr
adc
adc
mov
mov
leave
movsb
lods
mov
xor
or
arpl
fstp
ret
loopne
jno
add
cli
mov
sbb
mov
dec
je
adc
xlat
icebp
cld
jg
jg
leave
faddl
sub
mov
mov
stos
mov
ja
xor
dec
push
pop
sbb
fisttpll
sbb
mov
jge
adc
sbb
lret
adc
cltd
add
repnz
fidivrl
jl
xchg
adc
cmp
ret
and
mov
pop
fwait
leave
push
mov
std
test
bound
push
sbb
xchg
shlb
add
mov
ret
fdivrs
mov
in
cmpsl
jnp
sub
mov
bound
leave
out
fcompl
xchg
mov
xor
repnz
popf
fisubrs
popf
mov
push
xchg
dec
mov
mov
push
xchg
fistl
inc
repz
lcall
dec
outsb
xchg
into
das
jae
and
sbb
and
sbb
add
inc
sbb
out
dec
adc
jmp
jp
imul
jb
pushf
fstps
xchg
stc
dec
jno
push
hlt
int3
pop
sbbb
inc
shrl
sti
mov
mov
xchg
dec
data16
xor
out
aad
imul
push
mov
dec
out
loopne
sub
inc
sbb
dec
cmp
jnp
sub
cld
stos
repz
pop
or
mov
sbb
mov
rcr
push
and
mov
cmp
mov
movsb
xchg
sbb
xchg
pop
jno
sub
cmp
xchg
sbb
pusha
xor
das
and
jmp
xor
shr
xchg
adc
jmp
adc
inc
add
fistps
lret
in
or
adc
sbb
sbb
clc
cmp
aam
ss
shlb
sbb
adc
inc
or
mov
pop
adc
pop
xor
aaa
sbb
push
mov
push
js
mov
addl
jmp
cmp
xchg
sbb
mov
mov
or
adc
aad
xchg
jno
aad
in
popf
adc
rcrb
fcmovne
js
jle
mov
sti
cmp
dec
jl
sbb
movsl
rcr
pop
jne
mov
mov
inc
in
shll
ret
add
sub
movsl
mov
xchg
cmp
mov
dec
mov
inc
mov
pop
xchg
enter
xchg
loope
nop
lock
cmp
arpl
xchg
ds
mov
inc
mov
enter
mov
lret
dec
inc
adc
inc
mov
fdivp
jae
sbb
jns
cmp
mov
pop
cmpl
fsubrl
sbb
dec
and
sbb
cli
mov
adc
ljmp
add
inc
and
mov
popf
lret
or
inc
mov
add
mov
jno
add
dec
jmp
jb
or
rcrb
and
pop
mov
nop
push
mov
fldt
test
jo
sbb
loopne
mov
cmpsl
std
or
cmp
std
sub
xchg
xchg
inc
push
lock
xor
xchg
mov
mov
out
enter
pop
cmp
int3
jb
fwait
outsl
push
or
sbb
fwait
push
mov
mov
jo
pop
loop
leave
mov
int
imul
mov
adc
mov
push
push
mov
in
jmp
into
and
mov
hlt
stc
ficoms
aaa
movsl
icebp
enter
leave
movl
inc
or
into
in
int3
lahf
or
arpl
mov
les
shll
stos
xor
lret
dec
lcall
das
xchg
iret
out
xchg
mov
pop
sub
jle
push
jl
pop
in
andb
ljmp
mov
mov
and
imul
mov
xor
enter
add
mov
push
push
xor
xor
and
sub
mov
jp
sbb
aaa
sub
repnz
inc
or
pop
cmp
jmp
popa
dec
mov
xchg
movsl
jb
pusha
loopne
das
mov
mov
leave
mov
or
sub
lcall
shlb
mov
aam
ds
pop
jns
or
cmp
sbbl
mov
mov
loop
stc
mov
or
daa
sbb
insl
jae
or
mov
decb
pop
js
lods
das
inc
or
cltd
sbb
pop
inc
cmp
ss
mov
call
jo
cmp
xchg
mov
jnp
or
dec
jmp
xchg
dec
fcmovu
fcmovu
in
add
imul
jg
nop
bound
popaw
sub
cmp
dec
ror
sarl
jns
clc
sub
cwtl
dec
nop
rcll
and
stos
adc
int3
mov
jnp
lds
pushf
mov
cmp
std
call
jl
outsb
pop
aam
sbb
dec
fstl
call
mov
mov
dec
daa
inc
inc
lret
or
out
into
inc
test
icebp
pop
orl
lcall
mov
pop
xchg
push
lcall
in
pop
jle
test
in
scas
xor
loop
add
mov
cld
jg,pt
arpl
test
and
xchg
hlt
xor
test
js
cmpsl
jae
aam
push
loopne
stc
in
and
add
dec
add
imul
fistl
cli
test
adc
jl
push
dec
add
xor
sahf
inc
inc
ljmp
test
in
cmpl
xlat
in
ja
inc
mov
push
adc
hlt
inc
and
jl
addr16
aam
imul
push
fidivrl
fistps
mov
mov
stos
out
and
cld
inc
int3
in
repz
fnstenv
rep
daa
sub
cmp
xchg
mov
in
sbb
popa
mov
shl
mov
mov
addl
mov
cmpsl
aam
xchg
add
ficomps
pop
dec
sbb
hlt
lods
xchg
shll
mov
aas
mov
or
jbe
lret
adc
cli
stos
repnz
imul
pop
xchg
push
in
popa
iret
mov
cmc
jae
fldt
jge
mov
cmp
lret
xchg
lea
fidivrl
idivb
imul
push
xor
testb
adc
or
movsb
std
push
sbb
fnstenv
loope
push
or
sti
cmp
icebp
jno
in
pop
xchg
fwait
jmp
out
mov
sub
pushl
fnsave
cld
vmovntdq
mov
vpxor
iret
cmpsl
push
xor
adcb
fbld
cmpsl
cmp
js
mov
pop
dec
iret
fnstsw
insb
aaa
and
sbb
xchg
lock
ds
ret
fsubrl
inc
roll
enter
mov
aam
add
cmp
or
add
mov
xchg
rorb
mov
mov
addr16
or
jbe
mov
hlt
lds
sbb
mov
pop
dec
dec
add
fucomi
data16
scas
push
and
sbbl
mov
or
movsl
xchg
outsb
popa
fcmovnu
push
xchg
cwtl
sub
cmp
mov
lahf
mov
xchg
lahf
mov
and
loop
sub
js
pop
xchg
andl
push
add
push
sub
cmp
in
push
mov
lods
jge
xchg
cmpsb
cli
fwait
sub
stos
mov
in
dec
jns
jb
pop
mov
sub
and
loop
jecxz
mov
dec
int
mov
mov
in
repz
mov
mov
dec
call
cmp
mov
jnp
out
pop
mov
ret
or
jae
pop
aas
imul
movsb
cmp
jo
mov
les
adc
lods
xor
fidivrs
in
push
stos
mov
in
push
test
subb
jae
and
push
je
mov
ret
cld
mov
and
dec
mov
jo
xorl
daa
jge
imul
push
or
xchg
das
int
adc
imul
mov
pop
xchg
in
popf
shl
add
js
mov
xchg
je
cs
and
sbb
mov
sbb
cwtl
cmpl
mov
mov
js
xor
outsl
das
add
sbb
cmp
dec
dec
test
fsubs
aaa
jle
add
mov
add
xchg
mov
loop
aad
mov
imul
jb
rorl
pusha
xor
sbb
decl
or
pop
xchg
xor
icebp
mov
push
mov
popf
pushf
inc
cmp
lret
inc
aad
dec
imul
mov
lcall
pushf
jp
mov
dec
insb
push
push
push
cmp
jae
push
cmp
xor
mov
push
add
pop
rcl
cwtl
sbb
xor
pop
sub
inc
leave
sahf
xchg
cld
add
mov
and
jns
ret
in
notl
sub
repnz
pop
pop
bnd
dec
incl
mov
or
cmp
nop
inc
jp
push
pop
pop
mov
pop
into
cwtl
xor
pop
pop
adc
cli
xor
mulb
lea
and
arpl
into
inc
mov
adc
f2xm1
jne
or
cltd
pop
or
or
int3
add
inc
inc
xor
pop
adc
push
xorl
xor
pop
jl
movsl
ljmp
xor
mov
lea
sbb
add
inc
ret
pop
popa
loop
icebp
arpl
lock
fldt
cmp
mov
sbb
sbb
pop
daa
mov
jg
dec
popa
adc
mov
mov
dec
fmull
fisubrs
es
inc
pop
pop
fucomi
repnz
add
and
jb
add
adc
cmp
jle
adc
scas
push
mov
scas
stos
sbb
push
cli
dec
xor
cmpsl
nop
mov
sub
stos
sub
pusha
jo
fistpll
dec
mov
sub
mov
pop
stc
insb
aaa
add
in
fwait
gs
xor
fs
shlb
pop
das
xor
cmpl
mov
and
adc
jno
jmp
xor
orb
inc
sub
jae
std
pop
pop
sbb
inc
sbb
push
cwtl
lret
imul
fs
lret
push
fxch
sbb
lahf
and
stos
bound
and
jmp
cmc
cmc
in
js
xchg
test
lret
rcl
sbb
xor
stos
lds
jl
inc
lcall
jle
push
or
or
pusha
mov
or
mov
fsubl
cmp
mov
add
xchg
cmp
daa
shrl
int3
pop
xor
test
test
xlat
inc
fcoml
mov
fwait
inc
lahf
lret
jae
out
jne
mov
je
mov
sbb
cmp
jecxz
sbb
cs
daa
shll
jb
add
cmp
sub
mov
je
sbb
jg
push
add
jle
push
jp
popf
rcl
pop
mov
pusha
rcrl
fcoms
aas
and
or
xor
divb
jbe
push
inc
loop
test
shrb
popf
les
pop
mov
loope
ss
out
orl
fldcw
movsl
sbb
mov
pusha
push
lahf
pop
pusha
fwait
cli
add
dec
lea
mov
cli
lret
ror
mov
jecxz
sti
subl
add
sti
mov
sbb
and
dec
mov
dec
mov
mov
sub
or
mov
cltd
cmpsb
test
push
jo
mov
push
jo
sbb
push
mov
call
add
aas
adc
mov
sahf
inc
fcom
je
sbb
inc
arpl
jmp
out
or
cmp
mov
mov
addl
and
and
mov
sbb
mov
ret
and
mov
fs
je
test
shrl
pop
push
fnstsw
mov
pop
andnps
ret
dec
xor
imul
and
xchg
pop
or
add
aad
inc
xchg
pop
cmpsl
and
dec
push
sbb
mov
mov
fwait
leave
xor
inc
sti
sbb
push
mov
sub
add
cmp
sbb
stos
add
stos
fcmovb
repnz
inc
das
lea
test
cmp
inc
mov
jecxz,pn
fwait
iret
data16
pop
mov
cmpsl
add
cld
les
or
sub
into
addl
lcall
jecxz
push
xchg
xchg
scas
and
int3
rcrb
test
in
cmp
loopne
repz
orb
hlt
pop
adc
inc
pop
and
xchg
ja
xor
ret
movsl
cmp
sarb
je
test
push
push
inc
pop
or
or
and
pop
push
sbb
into
outsb
cld
pop
and
arpl
aaa
inc
sbb
xorl
divb
movsb
nop
pop
mov
pop
mov
cmpsb
adc
and
push
jno
cmp
inc
cli
loope
mov
adc
xor
je
cli
or
jle
fadds
ljmp
mov
insb
or
push
test
ret
fidivrl
jl
xchg
cmp
sub
dec
inc
pop
jecxz
sub
stos
xchg
sbb
movsl
fsubrl
inc
adc
adc
popa
mov
mov
dec
jl
out
adc
lods
push
dec
je
filds
aam
stc
out
les
inc
cmp
or
inc
adc
ficoms
adc
adc
add
das
pusha
idivb
faddl
push
test
cmc
and
sbb
lret
movsl
mov
and
mov
scas
enter
pop
push
pop
mov
jae
or
rorb
mov
mov
call
cmp
add
or
xchg
int3
sbb
pop
pop
cmp
fidivrl
cltd
push
adc
dec
lcall
repnz
fcmovnb
push
jg
ss
lds
jl
idivl
xchg
inc
cltd
call
xchg
addr16
xchg
std
gs
add
inc
sbb
insl
fwait
imul
cmp
stos
cmp
fnsave
jle
ficomps
daa
out
movsb
aam
pop
popf
inc
inc
idivl
test
add
pushf
fisubl
movsb
rep
ja
hlt
sub
xchg
rcr
pop
inc
pop
adc
hlt
add
push
inc
cmp
in
mov
pop
pushf
add
stos
or
add
ja
loop
or
icebp
sbb
scas
stos
sub
stos
imul
fildll
mov
repz
bound
mov
mov
jge
ret
or
dec
mov
int
xor
nop
inc
out
lods
pop
call
push
cmc
and
lahf
adc
fucomi
cmc
mov
cmc
int
mov
dec
or
xchg
dec
mov
mov
pop
sahf
out
mov
enter
pop
xchg
sbb
lods
repz
dec
cli
repz
dec
mov
cmp
or
sbb
mov
cmp
cwtl
or
test
xor
sbb
stos
sub
push
mov
cmp
comiss
push
xor
fwait
sub
ss
xor
mov
and
sbb
ss
fistpll
xor
enter
fwait
pop
adc
repz
pushf
dec
lea
leave
js
jmp
mov
jae
imul
sar
addl
jb
add
jge
and
inc
flds
les
lods
faddl
stos
inc
gs
mov
adc
sub
movsb
pop
sbbl
inc
movsb
jge
mov
scas
inc
faddl
cmp
add
iret
add
loop
sarl
ds
add
mov
aad
jb
pop
cmp
fwait
adc
int3
add
mov
testb
cs
lea
iret
cmpb
mov
jnp
es
je
lret
mov
jne
test
and
sbb
dec
mov
shrl
mov
dec
imul
fstps
ret
ds
mov
mov
jmp
in
ja
lock
fwait
outsb
xchg
hlt
lods
fcompl
cli
pusha
xor
ret
push
fbstp
pop
xchg
stos
mov
clc
lcall
ds
xchg
jnp
dec
sub
add
adc
icebp
int
cmp
pop
mov
popa
mov
stos
xchg
stos
lret
cmp
pop
scas
jbe
das
dec
movsb
push
sub
adc
jnp
add
sbb
xchg
lret
fcmovne
loop
js
mov
jge
mov
add
std
test
sbb
dec
fptan
adc
dec
popf
push
pop
cmp
jp
hlt
xchg
subl
push
cld
imul
out
xor
stc
dec
decl
dec
add
stos
dec
leave
mov
lcall
xor
aam
test
lds
cmp
jb
icebp
and
fisttps
mov
bound
mov
cmp
pop
pop
sub
pusha
mov
push
dec
xor
jl
inc
mov
cmpsb
aaa
push
bnd
push
dec
repnz
stos
andb
dec
ss
dec
scas
xor
mov
dec
inc
sbb
imul
gs
or
adc
mov
test
imul
bound
fimull
rol
data16
roll
or
jae
test
rol
stos
daa
movb
fiaddl
js
push
cwtl
inc
mov
ds
sbb
in
test
xorl
or
adc
andb
cmp
push
fldenv
sarb
push
cmpsl
mov
jb
fwait
nop
fwait
cmpsl
lea
and
add
call
pop
xchg
repz
adc
pop
xchg
jns
mov
or
jnp
jp
mov
in
jne
and
enter
test
pop
adc
cmp
or
scas
pop
mov
int3
pop
push
push
ret
sahf
fsub
aaa
js
orl
shrl
lret
mov
les
jmp
pop
dec
icebp
insb
or
or
jl
dec
roll
test
movsb
sbbb
xor
fs
mov
jmp
mov
add
pop
aaa
into
pusha
mov
jmp
outsb
and
ss
adc
insl
or
mov
sbb
xchg
mov
fwait
adc
inc
enter
stos
lds
test
shrb
dec
jnp
lahf
sbb
icebp
fdivrp
int3
mov
xchg
sbb
cmp
cmp
xor
imul
mov
jnp
adc
or
xor
sub
movsb
repz
sti
pop
push
add
dec
adc
les
test
enter
mov
pop
sbb
jnp
ficoml
mov
mov
lret
sahf
lret
sub
lret
add
aam
push
ljmp
and
pop
xor
mov
mov
cld
lods
ret
add
dec
dec
hlt
adc
pop
lcall
adc
bound
dec
push
mov
add
leave
sub
sub
adc
pop
pusha
push
lahf
fisttpll
dec
jmp
jo
adc
push
rcrl
and
inc
jo
mov
dec
xchg
fcoms
and
out
shll
sub
sbb
mov
or
mov
cmpsl
ret
fldenv
xor
mov
sub
pop
mov
mov
lods
sbb
inc
hlt
je
test
and
mov
dec
not
idivl
frstor
xchg
dec
pushf
jl
sub
and
mov
jge
rcrb
dec
dec
cmp
sub
ja
mov
ficoml
mov
dec
jecxz
outsl
in
mov
jae
jmp
jno
pop
push
sahf
mov
mov
mov
inc
pusha
pushf
dec
ds
adc
nop
mov
shrb
cmp
ljmp
jno
mov
push
and
fdivrl
dec
push
mov
cs
js
push
nop
mov
scas
inc
push
adc
jg
in
sbb
mov
lea
ror
fldcw
int
lret
fldcw
inc
xchg
pop
pop
xchg
je
mov
insb
fists
test
sub
jb
mov
out
adc
sbb
cmc
pop
pop
fxch
aas
adc
ret
clc
insb
inc
pop
cld
in
push
jb
ret
xor
mov
mov
mov
cmpsb
sti
push
sub
or
pop
les
stc
push
cmp
sbb
sub
or
xor
mov
in
adc
test
repnz
and
stos
les
dec
iret
jle
mov
int3
leave
scas
push
and
out
iret
pop
ds
test
push
xlat
xor
in
add
xchg
fisttpl
adc
inc
cwtl
cwtl
mov
ret
xor
cmp
lods
rcl
push
jae
fisttps
xlat
hlt
fstl
mov
stc
leave
xor
push
jl
repz
push
call
out
stos
xchg
movsl
jo
mov
fwait
push
out
dec
fdivrs
pop
xchg
dec
adc
pop
test
mov
cwtl
and
adcl
xor
nop
insb
inc
sub
fcompl
dec
xchg
pop
pusha
pop
inc
dec
mov
in
fwait
lret
mov
pop
sarl
sbb
sahf
addl
or
jg
xor
loopne
cwtl
jg
jo
sarl
ss
packssdw
aaa
mull
add
lods
ret
pop
xchg
add
inc
xchg
and
mov
dec
fsubl
push
lods
icebp
jg
dec
push
cli
jno
pop
and
je
fucomip
pop
mov
movsb
mov
pop
insl
mov
idivb
dec
or
dec
cmpsl
pop
gs
std
inc
jnp
mov
add
pop
loope
cmpsb
fcoml
adc
dec
hlt
fisttpll
jns
popf
lcall
lea
cmp
cmp
les
inc
repz
leave
inc
mov
jp
sbb
mov
push
pop
pop
outsb
xlat
sbb
mov
and
mov
mov
cmp
fwait
aam
rcrb
cmp
jmp
outsl
mov
sub
sub
mov
pop
cmp
inc
mov
mov
push
push
lret
lea
push
iret
ret
lret
hlt
mov
rcrl
mov
sbb
mov
pop
cmp
cmc
movsl
ret
inc
and
ret
cwtl
sahf
mov
mov
imul
shlb
and
bound
adc
cmpsl
xor
inc
mov
push
cmp
mov
dec
mov
sbb
push
sub
and
lahf
fwait
iret
js
dec
pop
lahf
nop
pop
sub
sbb
cmpsl
xlat
mov
into
in
std
decl
and
jp
add
add
es
shll
inc
sbb
push
and
add
out
mov
jl
dec
inc
hlt
clc
out
iret
lods
push
mov
adc
mov
jne
imul
jb
mov
movsb
popf
xor
cld
js
lcall
dec
orl
mov
inc
xchg
xlat
shlb
or
push
mov
shlb
mov
pop
data16
addr16
add
fs
pushf
in
je
mov
leave
jge
loop
mov
lret
out
in
popl
push
xchg
cmp
dec
addr16
cmp
adc
stos
lret
jge
outsb
cmpsb
sub
addr16
stos
inc
mov
mov
mov
adc
xor
ja
or
nop
dec
ficoms
cmp
imul
icebp
arpl
cmpsl
std
add
repz
pushl
xchg
fadds
fsubs
gs
je
add
or
aad
jbe
push
stc
mov
jnp
or
mov
sti
sti
and
or
retw
ss
inc
ficoms
flds
fdivrp
sub
arpl
je
pop
outsb
pop
jp
imul
or
cld
xor
mov
sbb
jle
adcl
lods
lahf
add
rorb
mov
mov
pop
dec
and
mov
outsb
aaa
mov
dec
fwait
mov
ret
mov
sbb
mov
xchg
hlt
fildl
cmp
in
lds
push
data16
dec
outsb
test
dec
mov
cmp
lea
aam
dec
sub
jp
rcl
adc
pushf
inc
hlt
and
xchg
pusha
add
js
dec
mov
jne
or
add
pushl
cmp
lock
jns
xchg
mov
add
cmp
jmp
movsb
inc
stos
sub
leave
pusha
jo
dec
popa
loopne
cmp
movsb
sbb
dec
fldl
xor
dec
pop
xchg
mov
adc
mov
ds
dec
aam
inc
push
test
inc
ja
ret
mov
or
xor
int3
lcall
mov
divl
fnstenv
xor
xor
xchg
pop
dec
mov
jb
mov
je
cmp
sahf
pop
dec
icebp
cli
cmp
xor
xor
scas
jp
in
leave
jp
add
dec
mov
rcll
pop
xchg
pop
mov
scas
dec
mov
scas
jo
aad
add
lods
insl
mov
shrb
lret
adc
lret
pop
gs
sbb
mov
lds
mov
adc
out
pusha
push
mov
mov
arpl
jo
dec
fidivl
flds
xor
nop
loopne
sbb
ss
out
and
mov
test
out
jecxz
cmp
sti
imul
pop
xchg
out
fld
xchg
mov
pop
out
aas
mov
lods
xchg
mov
test
loopne
jne
mov
fsubrp
cmc
xor
popa
sahf
mov
outsl
push
inc
xor
in
dec
xor
mov
mov
inc
jne
xchg
lods
mov
xchg
inc
stos
lods
in
ja
repnz
pop
test
dec
leave
xchg
push
cwtl
or
cs
pop
fisubrl
push
dec
inc
adc
clc
sub
lcall
dec
lcall
rcrl
mov
cmc
insl
lret
fildll
add
jg
jg
jmp
fidivrl
adc
inc
pop
push
or
lods
cmp
sbb
or
jge
dec
aaa
ds
sarb
mov
pop
aas
xchg
imul
inc
xor
call
mov
add
in
je
scas
inc
xor
xchg
popf
out
stos
jecxz
call
es
cmp
int3
fmuls
inc
xor
fiadds
jb
stos
out
mov
mov
dec
inc
cmc
mov
movsb
sub
sub
mov
pop
sbb
sahf
iret
fucomip
hlt
xor
outsl
dec
lahf
lret
test
pop
push
ds
test
fwait
mov
pop
pop
fldl
xor
mov
add
int3
sub
pushf
dec
jl
pop
inc
sub
push
movsb
shlb
out
push
or
dec
test
stos
mov
inc
mov
sbb
dec
jmp
push
jae
push
dec
shrl
sub
inc
mov
lods
dec
lds
xchg
pop
sti
add
inc
mov
loopne
pusha
push
mov
mov
push
aas
pop
or
or
ss
pushl
pop
xchg
cwtl
lret
sub
je
mov
lretw
imul
mov
jecxz
push
push
enter
cmp
jno
iret
data16
jo
lods
jno
and
mov
or
cmp
add
pop
daa
push
mov
cltd
sbb
stos
test
pop
rcrl
rolb
cmp
aam
jne
insl
hlt
repz
sti
mov
sbb
push
xchg
xor
mov
adc
inc
inc
sbb
add
dec
ss
int
cwtl
lret
movsl
pop
icebp
ja
push
outsb
insl
pusha
test
mov
cmp
das
and
stos
push
and
cmpsb
pushf
jp
mov
pop
call
push
mov
sub
lret
lcall
mov
popa
adc
jb
test
cmpsb
dec
cmp
or
loopne
and
arpl
push
dec
mov
incl
pop
mov
ret
sub
jecxz
jmp
test
gs
shrl
adc
mov
mov
gs
int3
inc
add
cmp
lahf
xlat
pop
cmc
cld
pop
pop
xor
lahf
sbb
jp
aaa
xor
cmc
add
cmp
fstl
jp
aad
lret
gs
adc
inc
pavgw
sarl
ds
mov
scas
shrb
je
mov
mov
in
or
cmc
std
imul
mov
in
daa
inc
cmp
jmp
mov
mov
fidivs
adc
frstor
popa
fiadds
mov
test
loop
add
loope
imul
es
in
xor
push
pop
enter
jae
outsl
mov
gs
ljmp
xor
xchg
dec
jns
xchg
lock
xor
and
repnz
int
aam
jmp
mov
add
sarb
decl
jns,pt
cmp
jno
add
pop
xor
xchg
int3
mov
mov
mov
ret
fnstenv
jge
push
sbbl
dec
pop
dec
sbb
inc
aaa
sbb
and
mov
pop
sbbb
das
xchg
data16
sti
shlb
xchg
pop
xchg
and
insl
pop
mov
jns
roll
in
xlat
ret
loope
add
shll
sti
ljmp
jnp
icebp
call
ss
adc
fwait
push
fwait
xor
sbb
xchg
push
xchg
push
ds
inc
test
movsl
fistl
aas
dec
daa
in
lds
mov
test
adcb
and
leave
jns
cmp
inc
xchg
dec
mov
xchg
cwtl
push
mov
pusha
mov
inc
adc
cld
lret
xchg
add
fildl
subl
outsb
cli
dec
and
cmp
lahf
jbe
add
pop
fbld
pop
dec
int
inc
test
inc
in
rcrl
out
sbb
lea
mov
cltd
sahf
mov
cmp
push
mov
cltd
pop
or
add
push
out
sub
addl
ds
std
lret
inc
mov
cld
aad
cwtl
push
push
dec
jecxz
adc
push
pop
sbbb
mov
sbb
dec
loop
shl
lahf
jne
sub
xchg
push
popf
fildll
mov
repz
bound
mov
push
idivb
dec
shll
stos
xchg
fimull
outsl
sub
pushf
dec
push
jae
jbe
cwtl
inc
ret
jo
push
xchg
xchg
push
sub
andl
cmp
lcall
dec
int
dec
mov
pop
adc
sub
mov
mov
adc
clc
jb
and
dec
cmp
popf
mov
mov
mov
repnz
dec
push
push
scas
dec
inc
jle
push
pop
rorl
mov
nop
sahf
dec
movsb
adc
pop
cmpsb
xchg
cmpl
inc
loopne
xor
inc
mov
pop
jge
mov
sti
lock
jne
pop
push
sbbl
lods
js
adc
lahf
lret
jecxz
sbb
fistpl
sub
cwtl
js
pop
aas
cmpsl
sub
xchg
xor
ss
loopne
adc
mov
inc
in
in
ret
xchg
lods
add
adc
adcb
adc
adc
or
and
bound
test
aas
repz
inc
sti
mov
std
jne
in
into
daa
mov
pop
push
pop
mov
add
cmpsl
cmp
insl
jbe
jp
clc
inc
pop
loope
sub
sub
sti
and
xchg
sti
popa
mov
mov
mov
push
movsb
mov
fdivs
cmp
enter
std
aaa
test
dec
ja
inc
mov
fcomps
sahf
push
jnp
add
cmpsl
test
sub
stos
xor
int3
iret
imul
inc
pop
xor
xchg
nop
cmp
mov
xlat
addr16
fwait
push
fwait
push
mov
pop
sbb
leave
mov
dec
add
les
jge
pushf
test
xorb
lds
fisubl
stos
jg
sbb
push
imul
jo
mov
mov
fdiv
ret
inc
inc
add
xchg
cltd
in
or
mov
mov
lock
push
mov
addb
and
xchg
stos
jmp
xchg
inc
add
adc
lahf
leave
pop
fxch
push
call
jle
mov
ffree
insl
xor
sub
mov
ret
fidivl
jmp
mov
mov
test
hlt
cltd
clc
dec
call
pop
inc
fprem
inc
lods
mov
mov
fistps
cmpb
jecxz
pushl
sti
in
sbb
loop
test
je
jp
sub
addr16
or
dec
cmp
fbld
dec
inc
pop
mov
jns
int
test
dec
cmp
stos
jae
or
push
orl
mov
push
mov
add
fmuls
or
pop
pusha
arpl
call
je
pop
add
xchg
add
fwait
push
dec
inc
sbbl
fwait
movsl
stos
sbb
mov
pusha
sbbb
jno
mov
xchg
inc
add
cmpb
ret
adc
jle
inc
pop
ret
bound
popa
scas
xlat
or
mov
or
or
cli
mov
imul
add
dec
mov
rorb
inc
lods
mov
clc
daa
mov
sub
mov
sti
xor
cmc
mov
sbb
inc
ds
in
movsl
aam
cwtl
xchg
xchg
aas
stos
and
xor
arpl
dec
inc
rcr
aas
dec
push
or
add
and
das
cwtl
pop
inc
test
pop
xor
sub
dec
les
inc
and
pop
std
ljmp
xchg
ret
cwtl
roll
and
scas
jge
sahf
jp
pop
mov
or
xchg
mov
dec
in
xorl
mov
add
arpl
gs
int3
mov
sar
push
cmpsl
lock
cwtl
xchg
je
inc
push
inc
add
bound
xchg
imul
test
xor
mov
test
out
sub
stc
cmp
gs
xor
sti
div
lret
jns
rorb
jle
mov
popf
jge
mov
mov
sub
sbb
imul
lret
adc
imull
lret
imul
test
mov
cmp
js
mov
or
sbb
inc
xlat
dec
lcall
pop
mov
sub
outsl
mov
insl
pop
inc
pop
push
jns
movsb
jne
inc
es
xchg
mov
mov
inc
add
in
pop
cmp
lcall
movsb
sub
xchg
mov
pop
xchg
jmp
push
xchg
jmp
insb
inc
sbb
push
mov
and
lods
push
sti
enter
bound
test
jge
dec
test
andl
xor
adc
sahf
jmp
sbb
mov
leave
mov
stos
mov
loopne
cli
cmp
mov
popa
aaa
dec
rcrl
cmpsb
int
aaa
adc
sbb
or
jbe
mov
lahf
cmp
push
cmp
outsb
mov
mov
ror
adc
sbb
mov
rcrb
ds
sti
mov
cmpsl
cltd
cmp
jecxz
addl
xor
or
pop
or
pop
mov
xchg
loopne
inc
push
dec
xor
mov
or
rcrb
sbbb
fcomps
push
mov
js
fsubrs
gs
pop
sub
adc
ljmp
adc
xor
movsb
cmp
xor
mov
mov
fs
or
lcall
lahf
in
push
mov
jb
jmp
dec
inc
add
popf
jg
or
daa
hlt
test
adcb
mov
xchg
jmp
sbb
add
into
xor
xchg
push
sbb
sarl
rorl
jmp
in
lods
outsl
lock
out
sub
aad
cmp
pop
sub
cmpsl
movsb
int3
push
ja
stos
dec
lods
fmull
outsb
mov
lret
test
sbb
andb
clc
mov
xchg
hlt
fcmovne
pop
xorb
arpl
lahf
roll
ret
jge
cmp
les
inc
imul
cwtl
mov
add
jbe
leave
inc
sbb
push
or
lret
loope
and
daa
mov
fdiv
dec
cmp
out
clc
fsubrs
mov
or
les
lods
pop
sub
xchg
cmp
int
test
and
fs
pusha
sub
fisubl
inc
xchg
clc
cmpsl
fldenv
sbb
sahf
cmpsb
jo
stc
test
sbb
addl
dec
xchg
mov
mov
pushf
pop
cmpsb
sub
das
lock
adc
dec
rolb
push
std
ja
xor
or
ss
adc
lret
mov
add
jecxz
inc
mov
or
or
dec
sub
lea
mov
jns
dec
rcrb
stos
inc
icebp
stos
mov
fwait
push
mov
dec
shlb
icebp
fwait
mov
sub
nop
push
subb
mov
cmp
lds
repnz
test
push
jae
mov
cmp
lods
jne
or
mov
fdiv
fcmovnbe
call
jmp
xchg
ret
adc
add
cs
gs
mov
sbb
shlb
lods
push
sub
adc
mov
adc
and
inc
and
cli
xor
mov
mov
pop
mov
gs
aad
xorl
sti
hlt
push
dec
pop
pop
jecxz
sarl
dec
call
jge
mov
lret
outsb
mov
mov
jno
into
add
jecxz
mov
cmp
xchg
jmp
adc
xchg
add
fmull
and
lods
nop
dec
out
xor
aas
stos
xor
dec
push
fisubrs
loop
jae
pop
movsb
fmuls
push
subb
jg
push
and
lds
divb
testl
ljmp
lcall
inc
pop
pusha
jnp
scas
stos
mov
dec
scas
je
pop
add
xchg
ret
ret
sbb
stos
xorl
inc
dec
add
or
outsb
cmp
cld
cwtl
movsl
imul
int3
and
mov
xchg
mov
mov
mov
mov
cltd
hlt
pop
mov
sbb
xor
test
jle
dec
inc
pushf
neg
sbb
jmp
lret
xchg
mov
std
es
clc
mov
nop
pop
jb
sti
je
cmc
int3
xchg
add
rcll
leave
adc
imul
mov
pop
mov
mov
jecxz
mov
mov
jno
dec
rcrl
mov
jnp
cwtl
movb
test
pop
ja
pop
xor
mov
and
sti
or
aas
inc
movl
enter
jp
inc
cmpsl
lods
cmp
arpl
stc
adc
dec
dec
add
inc
pop
xor
push
dec
lock
xchg
inc
add
ret
sbb
scas
pop
sbb
pushf
cmpsl
push
add
and
add
shrl
int3
adc
push
lds
xor
mov
mov
ja
adc
shrb
xchg
int3
dec
stos
mov
lods
fstpl
mov
repz
lret
xor
stos
and
xlat
cltd
jmp
mov
jle
jb
adc
mov
hlt
cli
aad
lret
imul
xor
push
cmp
nop
ljmp
xchg
imul
sbb
out
mov
sub
pop
jecxz
and
sub
jnp
mov
sub
test
push
mov
push
sbb
dec
push
mov
xor
decl
subb
dec
rol
inc
jnp
add
add
scas
lods
mov
push
mov
pop
xchg
inc
add
mov
dec
andl
push
inc
inc
fnstenv
sbb
out
js
mov
sbb
jnp
or
aad
imul
xchg
aas
imul
mov
inc
lds
jecxz
mov
or
dec
stos
mov
loopne
mov
fbld
jmp
jl
sbb
xor
cld
pop
dec
test
repz
cmpsl
stos
cwtl
pavgb
adc
or
mov
sbb
lret
adc
pop
leave
push
sti
arpl
pop
js
out
popf
popf
or
shrb
dec
mov
inc
sbb
mov
pop
xor
enter
scas
std
lahf
mov
js
mov
clc
pop
ds
mov
inc
and
mov
ret
dec
roll
imul
mov
scas
cmp
movsb
jno
sub
inc
fnstenv
sarl
das
inc
push
mov
ja
jg
dec
lds
xchg
sti
cmpsl
mov
sub
mov
fdivs
mov
vpackuswb
adc
ljmp
xchg
ret
sarl
rorl
fbld
stc
cwtl
inc
scas
mov
lock
or
je
in
iret
lds
subl
and
push
jae
icebp
stos
rcrl
pop
in
mov
loopne
jle
clc
cmc
dec
xchg
hlt
lea
sti
arpl
icebp
es
xchg
push
push
mov
cmp
add
dec
test
rolb
push
fisubrs
jge
inc
and
mov
lahf
mov
dec
cmp
call
cli
popf
jae
or
out
sbb
sbb
ss
mov
push
mov
add
mov
insl
ret
add
mov
adc
lret
mov
pop
cmpsb
jo
js
jl
jg
dec
lds
xchg
imul
dec
xchg
jnp
cmovne
jmp
mov
mov
test
gs
dec
pop
call
jge
movsl
cmc
out
arpl
iret
xchg
mov
test
ret
inc
test
or
out
lods
jp
mov
lcall
mov
jb
mov
hlt
ljmp
jmp
push
adc
ficomps
sar
scas
rcrl
pop
call
adc
pop
inc
test
add
pop
or
cmp
lds
sub
xchg
js
arpl
xchg
ret
add
enter
lods
in
popf
cld
dec
pusha
fisubrl
lock
inc
daa
inc
xlat
popf
sub
push
xor
cmp
mov
test
les
cmp
xchg
mov
sbb
lea
cs
movsl
icebp
xor
add
lcall
sub
rclb
add
cmpsl
mov
push
pusha
mov
mov
jnp
dec
inc
pop
mov
xchg
add
dec
push
dec
or
divl
or
lcall
pop
lods
fstps
xchg
lods
mov
clc
clc
cmp
lret
test
out
jg
enter
pop
in
cmpsl
dec
jge
add
fsubl
mov
pushf
adc
mov
test
mov
jne
movsl
in
push
mov
jae
fistl
ret
adcl
test
loopne
inc
stos
div
fsts
pop
or
js
repz
and
xchg
ljmp
cmpb
add
iret
call
in
pop
xor
jo
and
cmp
je
mov
sub
pop
sub
test
jne
sub
mov
test
cwtl
movsl
clc
cltd
test
sbb
es
cmpsl
lock
xchg
je
out
pop
andb
bound
jg
mov
mov
repnz
or
fs
pushf
divl
dec
les
xor
cmpsl
pushl
or
jge
rorb
sub
mov
pop
dec
popf
mov
xor
xchg
jnp
leave
nop
imul
movsl
inc
movsl
push
and
pop
pop
mov
mov
frstor
imul
cmpsl
icebp
or
jmp
inc
inc
sbbl
mov
sub
shrb
lock
or
and
push
or
cmpb
push
push
cmove
clc
loop
add
or
xchg
mov
add
ret
mov
pop
sub
sbb
mov
mov
sub
lret
inc
dec
adc
pushf
cmpsl
stc
fwait
mov
cmp
and
cltd
add
add
mov
test
rcrl
mov
cmp
inc
aas
shrl
pop
xchg
shlb
mov
cmp
sub
pushl
or
pop
rorl
dec
push
dec
or
sbb
mov
sbb
sbb
and
mov
fisubs
mov
jle
dec
inc
test
ja
lret
jmp
cmc
test
inc
xchg
pop
mov
jns
bound
sti
mov
lahf
adc
sbb
fs
cmc
or
xchg
push
inc
inc
add
lret
xchg
fldenv
ja
mov
add
push
scas
hlt
repz
mov
clc
loop
mov
sub
xchg
push
add
cmp
xor
xchg
int
fmuls
push
sbb
mov
cmp
push
fsubrl
lds
cmc
jb
sbb
push
negb
mov
push
cltd
lock
movsb
mov
xchg
jmp
sbb
mov
pushl
pop
pop
inc
pop
loopne
cli
scas
mov
jmp
sbb
mov
mov
sbb
sub
dec
mov
lret
xor
pushf
insb
cmp
cmp
mov
pop
jge
test
in
mov
jg
and
lret
xchg
mov
mov
andl
cwtl
xor
subb
jae
inc
mov
movsl
test
adc
inc
sbb
stc
or
in
rcl
rcrl
inc
inc
sbb
adc
and
js
fdivrs
mov
push
mov
inc
orl
cmpl
mov
adc
dec
add
add
and
mov
push
pop
mov
js
movsb
jmp
push
lret
mov
push
das
inc
aad
sub
shll
sti
popa
mov
mov
push
movsb
mov
fdivs
test
in
test
std
aaa
or
test
dec
ja
inc
mov
fcomps
incb
jnp
add
cmpsl
mov
sub
inc
jo
jnp
int3
iret
imul
inc
pop
xor
xchg
push
cmp
or
fwait
push
fwait
push
cmpsl
fimull
xor
mov
pop
adc
mov
dec
add
les
jge
lahf
test
xorb
lds
fisubl
stos
jg
push
cmp
lahf
leave
mov
gs
lods
jne
mov
mov
fdiv
ret
inc
inc
add
xchg
jp
mov
inc
les
inc
adcb
lock
add
add
mov
jle
ret
cli
outsl
xchg
inc
add
adc
pushf
leave
pop
fxch
push
call
jle
aas
sti
cmp
cmc
insl
xor
sub
leave
mov
roll
jmp
mov
test
hlt
cltd
hlt
dec
call
pop
inc
inc
lods
mov
mov
fistps
andb
jecxz
xchg
enter
sti
in
sbb
fwait
orb
scas
mov
push
mov
mov
addr16
or
mov
fbld
mov
jae
pop
mov
popf
in
jns
dec
subb
cmp
jae,pn
or
push
fwait
dec
and
xchg
cmp
mov
arpl
fadds
mov
arpl
call
je
or
xchg
add
xchg
cli
push
jae
xchg
nop
jnp
stos
sbb
mov
and
js
fs
inc
add
cmpb
ret
adc
sub
inc
pop
add
stc
bound
popa
lods
xlat
or
mov
mov
or
cli
mov
imul
or
mov
rcr
jno
rorb
inc
lods
mov
clc
daa
test
sub
mov
sti
xor
cmc
mov
cmp
cmp
ds
jmp
movsl
aam
popf
xchg
inc
aas
stos
and
out
js
jns
push
in
fbld
mov
jae
rcrl
lahf
mull
sbb
sbbb
cwtl
pop
ret
test
pop
xor
lods
jb
dec
les
inc
and
pop
std
ljmp
xchg
ret
xchg
roll
and
scas
jge
stos
jp
pop
mov
movsb
pop
in
xor
xchg
mov
dec
in
sbbl
xor
add
arpl
gs
int3
mov
add
push
cmpsl
lock
or
add
bound
xchg
test
sbb
test
xor
cmpsl
aad
fimuls
call
sahf
push
das
shrb
mov
std
shll
dec
push
fildll
lds
mov
mov
mov
repnz
dec
mov
sbb
sbb
mov
aad
lret
adc
out
jbe
lret
and
cmc
test
mov
jl
js
sub
add
cmpsl
and
inc
pop
scas
pop
or
pop
mov
sub
outsl
mov
insl
fidivs
pop
push
jns
movsb
jne
inc
es
xchg
mov
mov
inc
add
in
push
lcall
movsl
fsubs
jb
fld
pop
xchg
jmp
push
xchg
sti
std
insb
inc
sbb
push
mov
and
lods
into
sti
enter
bound
test
jge
mov
xorl
lahf
jmp
sbb
add
cmpsl
rorl
pop
leave
mov
cmp
data16
mov
in
shll
rcrl
cmpsb
lret
inc
xor
mov
sbb
or
jbe
mov
lahf
or
sub
outsb
mov
mov
ror
adc
sbb
fdivrs
inc
mov
rcrb
cltd
pop
sti
mov
cmpsl
dec
cmp
jecxz
movsl
inc
test
xor
fs
pop
or
mov
xchg
mov
aas
push
mov
or
rcrb
sbbb
fcomps
rorl
js
fsubrs
jo
leave
test
pop
sub
adc
ljmp
adc
xor
movsb
cmp
xchg
mov
adc
test
sub
movsb
insb
lahf
in
push
mov
fnstenv
rcll
sbb
mov
popf
aas
out
enter
sarl
push
es
xchg
jmp
sbb
jp
jae
lea
xchg
sub
scas
repz
lea
rorl
jmp
in
aad
lock
out
sub
fistpll
dec
push
pop
sub
cmpsl
sbb
mov
xchg
sub
adc
push
inc
pop
test
sbb
call
popf
imul
clc
fs
xor
je
test
cmpsl
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
shr
mov
fisubl
cmc
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
aam
movsb
pop
jl
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
