in
mov
dec
push
pop
push
ret
gs
cmc
nop/reserved
jmp
call
cwtl
sti
pop
aaa
pop
dec
mov
pop
and
mov
fcoml
cmp
dec
testb
das
pusha
fstpl
dec
cli
das
movsb
xchg
out
add
int3
xchg
loopne
xchg
clc
lods
dec
daa
sahf
sub
mov
pop
sub
sbb
mov
lret
mov
and
cmp
mov
cmp
mov
xchg
mov
xchg
es
adc
xor
xor
imul
adc
andb
dec
insl
dec
shll
mov
je
loopne
mov
gs
dec
sti
mov
insl
dec
fbld
stos
addb
push
mov
sub
push
xchg
jnp
ja
cld
pop
gs
mov
dec
fcoms
mov
xchg
insl
stos
jge
mov
mov
sub
roll
mov
jle
xchg
pop
stos
arpl
adc
mov
push
in
out
popf
sub
iret
jnp
cs
xor
lds
cltd
pop
pop
repnz
pushf
mov
xchg
or
push
mov
ret
jmp
imul
outsb
adc
and
outsb
mov
stc
cmc
sbb
int3
aaa
gs
inc
hlt
es
orl
aad
and
jno
popa
or
ja
outsl
inc
dec
call
mov
lods
xchg
loope
or
xchg
ds
or
xchg
in
lods
das
adc
inc
cld
ljmp
cli
fdivrl
lods
push
stos
mov
mov
add
sub
pop
or
mov
data16
iret
mov
pop
test
jno
mov
mov
and
and
fsubl
pop
cmc
lea
das
mulb
aas
cmp
or
orb
pop
pop
jmp
sti
lods
cld
add
cmp
in
imul
fldt
jle
pop
lods
sbb
xor
sub
or
gs
inc
aam
dec
fwait
lods
sbbb
pop
gs
mov
sub
xchg
popf
or
js
xchg
fidivrl
pop
inc
fsubrp
leave
stos
iret
leave
rcrl
bound
fnstcw
in
fs
add
mov
call
stc
inc
enter
sbb
mov
addr16
sbb
mov
fsubr
scas
aam
dec
sbb
or
sub
adc
pop
xchg
xlat
jle
flds
add
mov
lock
sti
enter
xor
cmp
cmpsb
and
xor
inc
push
leave
adc
popf
dec
cltd
sbb
mov
cmp
fcos
cmpb
jae
mov
js
loop
or
mov
add
mov
mov
xor
jecxz
jnp
neg
enter
cmp
sti
jecxz
test
repz
imul
mov
jl
xor
pop
stc
mov
push
mov
push
push
movq
hlt
stos
push
stos
jg
stos
mov
cmpsl
imul
arpl
adc
jecxz
loope
or
jge
and
add
cli
mov
pusha
or
fcoml
and
fcmovnbe
adc
shll
pop
movsl
push
jl
push
mov
xor
or
lods
sbb
dec
mov
iret
hlt
movsb
gs
or
das
lahf
xchg
mov
ja
cli
xor
jo
movsl
dec
push
lahf
in
ret
or
in
fwait
sub
lcall
adc
fistpll
sahf
ss
and
jb
jns
int3
ljmp
fcomps
pop
jno
gs
loopne
ljmp
or
inc
add
mov
pop
fistps
jecxz
add
nop
adc
fstl
push
lds
loope
xor
cmc
dec
sbb
mov
repnz
in
mov
jg
and
mov
dec
xchg
dec
and
adc
xor
jge
loopne
mov
pop
in
jbe
mov
dec
dec
mov
inc
or
push
cmp
xchg
insb
jl
add
cmc
sub
pop
pop
fisttps
jmp
into
ja
fimull
dec
push
loopne
std
push
push
jbe
push
fildll
decl
inc
stc
sub
leave
scas
inc
cltd
cwtl
sub
xor
push
call
mov
push
cmc
xor
mov
dec
fistpl
sbb
addl
and
jmp
push
mov
mov
test
sub
rcr
lds
sahf
outsb
mull
jns
pop
jns
push
xor
cld
jecxz
mov
pop
sbb
dec
adc
out
jne
or
dec
jae
xchg
orl
cmpsb
es
lea
int3
repz
ret
cli
add
sbb
lret
loop
pop
jae
jmp
ret
xchg
push
outsl
pop
enter
clc
lds
mov
cmp
pop
mov
shrb
cmp
mov
jnp
ficoms
imul
mov
push
jae
push
push
cmpsl
sub
shll
sti
push
xchg
xchg
cmp
mov
sbb
enter
fs
cmpsl
xlat
dec
fs
jno
call
push
pop
fcoml
movsb
push
in
jb
ret
add
lcall
push
push
mov
mov
xchg
pusha
cmp
xchg
popf
sub
dec
into
pop
sub
mov
push
test
sbb
or
mov
jp
mov
pop
lret
jle
inc
jo
dec
mov
sub
push
outsl
out
push
aad
lds
jge
and
out
mov
add
cmp
adc
pop
dec
push
or
xor
cmp
cmp
jmp
je
and
aas
dec
loop
movsl
xor
add
dec
lcall
leave
jae
dec
in
or
jnp
rolb
inc
std
sbbb
push
or
pop
es
jp
mov
test
adc
cmpsb
ret
mov
adc
lods
dec
fiadds
in
mov
sbb
or
fs
xchg
pop
subl
punpcklbw
pop
push
push
std
adc
cmp
inc
pop
cwtl
dec
adc
push
addb
mov
jb
movsl
jo
flds
push
fstps
dec
inc
dec
mov
popf
pop
cwtl
repnz
sarl
fcoml
mov
jg
fs
add
jbe
adc
mov
fs
mov
dec
lahf
cwtl
jnp
rolb
test
sti
gs
movsb
xchg
or
lret
cmpsl
imul
rolb
sarl
sbb
or
stos
pop
adc
pop
sbb
mov
dec
test
inc
les
push
adc
mov
push
in
xchg
mov
adc
aam
inc
mov
or
push
pop
js
das
cwtl
test
xor
xorb
sbb
xor
push
adcb
mov
divl
and
mov
inc
lea
mov
test
add
inc
xor
loop
in
and
rorb
or
das
sbb
push
test
mov
dec
xor
jecxz
jmp
xchg
imul
test
outsb
dec
dec
in
repnz
add
mov
hlt
adcb
or
inc
lods
decb
pop
push
popf
and
addr16
out
enter
push
stos
leave
ds
or
pop
jnp
mov
into
insb
and
bound
and
cmpb
xor
sahf
icebp
xchg
jb
bound
stos
or
inc
shll
out
sbb
push
pop
jecxz
int3
call
movsl
lds
pushf
cld
dec
pop
loopne
and
or
dec
jae
out
or
xchg
shrb
fstps
test
xlat
mov
or
cmp
xchg
neg
add
aad
add
cmpsl
xor
mov
adcb
in
dec
push
jmp
or
adc
jbe
daa
test
repz
popa
insl
and
lods
xchg
aam
in
sbb
fstl
push
or
cli
call
sub
ret
addr16
adc
jg
pop
cmpsl
sub
mov
lret
fwait
js
ret
pop
icebp
cmp
popa
xchg
movsl
mov
xor
out
mov
cmc
ds
xchg
add
cmp
jle
loope
jb
push
adc
rorb
xchg
in
inc
outsb
cld
les
mov
jmp
daa
mov
loop
add
push
shl
leave
dec
out
into
aad
mov
cmp
and
jo
mov
in
imul
and
rcl
mov
dec
inc
adc
in
mov
jb
xor
iret
std
test
push
push
and
in
lods
jl
sti
daa
pop
dec
out
sahf
int3
pop
fistl
fdivrs
dec
xlat
or
pop
cmp
sbb
in
ja
fisttpl
add
out
stc
jo
xorb
psubw
or
dec
or
stos
adc
clc
mov
inc
xchg
mov
test
mov
xchg
dec
xor
mov
push
xchg
mov
test
rcl
cld
andb
add
loop
mov
frstor
cmpsl
shlb
rcrb
sub
inc
aad
fdivs
pop
inc
frstor
insb
push
lods
outsb
out
jnp
mov
and
outsl
cmp
mov
push
sub
mov
xchg
movsl
or
mov
mov
aaa
aam
iret
push
sub
mov
push
sub
push
inc
sbb
daa
fdivr
cmp
lods
mov
jb
lahf
movsb
repnz
rcr
mov
lds
adc
scas
ret
push
xchg
ja
clc
repnz
jns
rorl
cli
fcmovnu
mov
test
or
mov
inc
xchg
push
mov
xchg
pop
test
sbb
push
adc
mov
add
out
popl
dec
or
call
mov
jp
loope
sahf
sbb
jae
pop
xchg
pusha
sbb
sub
xchg
test
mov
add
xor
stos
scas
gs
sub
jbe
jle
clc
in
mov
test
aam
jl
pop
dec
adc
mov
pop
push
es
enter
pop
push
imul
pushf
xor
iret
pop
movsb
sub
cmp
cli
pop
fsubs
add
jmp
cmovl
mov
push
cli
xchg
test
cltd
xchg
xor
inc
movsb
mov
aad
xchg
sarl
or
pusha
xor
inc
mov
sbb
mov
fsubp
decl
cmp
js
mov
cltd
sub
push
mov
mov
pop
into
inc
jo
fwait
lods
jecxz
out
scas
push
ljmp
sbb
mov
mov
pop
pop
test
iret
testl
fadds
lret
jle
leave
push
xchg
movsl
in
and
mov
xlat
xor
xorb
fwait
int3
fisubrl
stos
xchg
lds
shll
or
jg
out
dec
sub
or
lods
or
inc
jl
inc
xor
push
sti
rolb
mov
fsubrl
cmpsl
clc
jb
sbb
sbb
mov
mov
mov
popf
and
mov
xor
push
inc
jl
xchg
stos
std
mov
es
fwait
loop
mov
andb
inc
sub
jb
jae
in
clc
ss
test
jb
mov
cmp
jae
dec
movswl
push
js
jecxz
stos
sub
shrl
scas
mov
outsl
enter
arpl
outsb
mov
xor
add
dec
push
and
mov
jmp
orb
pop
fwait
dec
mov
jne
mov
or
sbb
xchg
int
fimuls
popa
fsubrl
mov
ret
jp
rcll
jp
sahf
jo
insb
in
fdivrs
inc
dec
iret
pop
xchg
shl
std
mov
lock
mov
lds
in
or
into
jmp
stc
mov
xchg
js
and
ja
jae
sahf
sti
rolb
in
lret
dec
jecxz
push
xor
adc
adc
xchg
xchg
xchg
xchg
adc
jbe
test
xor
adc
mov
jmp
sub
dec
es
adc
xchg
push
dec
popf
cmp
rclb
aad
mov
lods
cmpsb
jmp
rcrb
loop
mov
jl
clc
inc
or
sub
sbb
ret
pusha
stc
int3
push
dec
in
jle
or
into
cltd
cmp
adc
sahf
push
leave
inc
push
xor
js
adcl
mov
flds
jo
xchg
xor
mov
inc
jno
sub
lcall
jne
cli
mov
lcall
sbb
cmpsb
shlb
loop
cmp
fcoms
and
pop
push
outsl
testl
mov
mov
jns
jne
cmpsb
nop
lods
or
inc
dec
aad
pop
mov
pop
mov
lret
aad
push
and
xor
repnz
clc
lcall
dec
scas
or
xchg
pop
lcall
inc
push
stc
adc
push
cmpsb
mov
fs
xchg
dec
test
rolb
adc
mov
mov
sbb
flds
dec
cmp
jbe
xlat
dec
bnd
inc
out
mov
xor
and
mov
mov
fstps
rcll
and
add
jl
test
pop
rol
aad
push
cmpsb
test
loope
fwait
and
lret
xchg
mov
sbb
jl
push
imul
cmpsl
and
out
push
shrb
fstpt
je
xchg
dec
call
xor
mov
gs
cmpsl
addl
std
cmp
jmp
subl
and
cmp
cmpb
add
pop
popf
push
cmpw
loop
call
pop
jno
inc
and
xor
and
cs
fimull
xlat
push
out
jecxz
or
adc
or
inc
pop
cmp
or
dec
inc
sbb
mov
jge
mov
mov
sahf
xchg
adc
ss
xor
mov
pop
inc
sub
adc
xchg
faddl
pop
sbb
stc
xchg
test
lds
insb
pusha
loopne
pop
into
cltd
dec
scas
xorl
cmp
imul
and
jp
add
xor
imul
xor
inc
call
jp,pn
push
adc
lods
adc
mov
repnz
repnz
loop
or
xchg
mov
jb
jae
fdiv
dec
leave
out
clc
nop
in
push
dec
shrl
add
push
or
faddp
add
push
add
xchg
mov
inc
rorb
dec
add
push
pushf
shlb
mov
leave
flds
repnz
pmuludq
pop
sub
data16
jno
dec
cld
dec
or
loopne
mov
icebp
aam
dec
inc
mov
xchg
es
cmp
call
call
inc
hlt
sub
addb
pop
aaa
jp
inc
lods
jp
mov
adc
cs
fsubrs
into
cmc
sub
sub
mov
push
sbb
stos
fstpl
aas
divb
shll
xchg
inc
or
cmp
push
push
mov
dec
or
mov
push
dec
sbb
loopne
aad
enter
xor
mov
and
lahf
and
lods
and
ret
in
scas
cmc
addr16
dec
fildll
or
push
movsb
add
adc
pop
arpl
fnsave
inc
xchg
and
fldl
lret
rorl
xchg
pop
out
mov
aad
mov
loopne
mov
stos
cmp
mov
and
enter
mov
adcb
jmp
xchg
or
inc
cli
mov
sub
push
negl
daa
cmp
cwtl
testl
and
mov
jb
clc
mov
shll
dec
inc
dec
jg
rol
add
cmp
test
jg
adc
and
and
inc
push
cwtl
cmpsb
dec
sbb
pop
cmp
fbld
repnz
hlt
xchg
xor
xchg
adc
rcl
dec
jg
stc
aad
lahf
and
fmull
jmp
lods
rorb
mov
adcl
adcb
xchg
pop
sub
dec
pop
in
call
xchg
inc
xor
pop
out
push
push
ret
out
pop
mov
push
mov
cli
pop
and
test
test
lahf
sbb
cmpsl
push
and
push
ror
push
jecxz
enter
rcll
pushf
ds
bound
in
icebp
and
adc
hlt
inc
out
inc
repz
int3
test
aad
mov
dec
loopne
add
or
cli
mov
sbb
aam
xchg
jno
mov
mov
mov
pop
aas
out
jno
add
xchg
loope
movsb
test
mov
mov
mov
ja
hlt
pop
xchg
jmp
adc
les
sti
adc
mov
out
cli
test
jmp
lock
ss
ss
aad
call
aam
lahf
popa
loop
stos
mov
mov
jb
jne
hlt
add
lret
ss
push
dec
out
or
jmp
jnp
fsubp
adc
push
or
dec
add
xchg
adc
ja
sub
sti
push
jecxz
popa
test
out
and
xchg
fidivrl
xchg
adc
sub
xchg
cwtl
mov
hlt
mov
mov
jle
shr
ret
pop
xor
mov
popf
or
mov
das
mov
push
icebp
ds
and
daa
mov
push
cs
pop
jnp
je
mov
das
data16
fiaddl
loope
pusha
dec
into
adc
adc
mov
xchg
shll
lcall
and
xor
cltd
loop
jecxz
test
and
ds
rcrb
loop
mov
mov
jmp
xor
push
or
rcrb
ja
or
inc
and
scas
gs
mov
lea
sub
jo
les
aas
xchg
and
sbbb
dec
dec
fiadds
pop
jnp
out
inc
sbb
add
mov
xchg
sub
stos
cli
mov
fwait
mov
idivl
xorb
adc
xchg
mov
xor
and
stc
push
xor
and
xchg
fucomp
mov
lret
mov
mov
mov
rcll
pop
pop
addl
call
add
push
jo
mov
pop
sub
imul
xlat
stos
inc
mov
fsubrl
arpl
fs
sbb
xchg
insb
rcr
push
add
mov
cmp
mov
xor
xor
cltd
mov
mov
scas
xlat
bnd
and
shll
mov
and
ljmp
mov
aam
add
aas
mov
mov
mov
dec
mov
aam
jbe
pop
xchg
sahf
stos
das
sub
cmp
scas
cltd
sbb
jg
inc
xchg
jmp
hlt
mov
shl
jns
cli
lret
lret
mov
stos
xchg
dec
fstpt
repnz
mov
movsl
mov
inc
cmp
mov
xor
outsl
xchg
lods
push
adc
push
cmp
clc
push
int
and
stos
sub
cmp
sbb
mov
xchg
mov
in
mov
sbb
shr
les
push
mov
sbb
stos
repz
add
nop
int3
fistl
dec
sarb
dec
out
pop
jbe
aas
xor
mov
popa
movsl
xchg
fcmovnb
lahf
lahf
adc
mull
repnz
or
fdiv
cld
and
xor
das
adc
icebp
test
xchg
imulb
sub
les
rorl
ret
mov
das
push
dec
fildll
and
mov
sti
inc
popf
push
push
cmp
js
scas
mov
sub
xchg
popa
jne
push
xchg
jecxz
add
push
in
loopne
dec
push
inc
and
fldt
dec
into
adc
mov
adc
outsb
mov
mov
sub
dec
or
xchg
dec
rcrb
cwtl
cmp
jo
xchg
int3
js
repnz
xchg
arpl
push
orb
and
dec
lret
aas
or
inc
add
jmp
imul
pop
and
mov
dec
sbb
jecxz
jge
ja
or
adc
sbb
xchg
mov
xchg
aam
or
xchg
xchg
xrelease
dec
lret
add
frstor
into
fs
or
pop
xchg
int3
jbe
mov
ror
xchg
add
adc
pop
lods
push
sub
mov
xchg
jae
fmul
pop
cmp
push
mov
sbb
loopne
xchg
outsl
xorb
divl
pop
mov
or
mov
fcompl
sahf
mov
icebp
sub
mov
enter
adc
divl
int3
sbb
mov
loopne
or
add
pop
hlt
gs
shrl
dec
stos
loopne
adc
jb
inc
cmpsl
daa
pusha
jno
int
in
mov
mov
cmp
push
nop
jmp
dec
pop
out
dec
jp
jg
es
jl
in
jo
daa
std
ja
cmpsl
sahf
mov
push
jl
rcrl
fidivrs
jmp
insl
cmp
pop
mov
dec
sahf
sahf
sbb
out
icebp
insl
gs
scas
inc
adc
mov
sbb
sub
fcompl
mov
add
icebp
pop
insb
fnstenv
cmpsl
xchg
in
mov
sbb
and
pop
ds
jnp
mov
loopne
data16
and
frstor
out
outsb
fwait
hlt
xchg
xchg
lea
loopne
ret
gs
nop
xchg
jp
or
pushf
lcall
stos
cmp
daa
gs
pop
sub
mov
popa
sti
in
scas
rclb
ja
push
shl
hlt
mov
sbb
das
xor
les
push
add
xchg
out
lods
das
insl
in
cmp
add
inc
sbb
imul
pushl
jge
lds
jbe
mov
nop
cmp
mov
xor
mov
push
mov
js
test
lods
ds
inc
sub
sbb
mov
sbb
adc
adc
imul
mov
outsl
push
aam
push
cli
ret
add
mov
adc
je
stos
iret
mov
out
or
popf
mov
add
cmp
fwait
pop
je
lea
add
push
into
push
fcoml
lahf
push
sarb
xchg
imul
push
or
jb
jnp
test
in
pop
dec
fdivrs
in
inc
imul
sbb
and
aad
in
mov
cmp
add
icebp
pop
cs
rclb
mov
stos
repz
dec
out
das
push
movsl
sbb
rorb
mov
cmpb
add
xor
popa
repz
jmp
popf
sub
int
and
in
lea
sbb
ds
mov
xchg
int
out
je
clc
mov
stos
pop
mov
mov
out
das
adc
xorb
jbe
push
jg
sahf
add
cli
sbb
shll
inc
mov
aaa
pop
nop
inc
cltd
jnp
adc
xor
inc
sbb
cmp
sahf
dec
sub
mov
int
stc
push
aad
push
test
adc
adc
aas
ljmp
test
cmp
xor
shll
leave
cmp
inc
lret
push
cmp
mov
pop
jnp
add
bound
shlb
in
sub
push
dec
loope
mov
jno
mov
ret
cmp
xchg
xor
daa
gs
push
xchg
mov
jns
mov
test
das
cs
test
clc
or
xchg
test
xor
xor
push
mov
pop
adc
in
mov
lahf
mov
mov
pop
push
mov
push
cmp
xchg
pop
stos
gs
testl
cmp
jb
int
jno
mov
daa
lock
push
sub
les
jae
jns
and
inc
mov
cmc
clc
xor
sbb
nop
cltd
outsb
enter
call
lret
xchg
lock
add
test
out
add
dec
sub
into
data16
stos
jo
and
mov
popf
push
pop
mov
pop
xor
cs
pop
mov
cmp
xchg
notl
cmp
xchg
dec
jb
sbb
push
and
loope
sbb
je
sub
mov
xchg
insb
and
xchg
lods
ds
jae
jbe
add
insb
fcompl
mov
cmpsl
jo
jg
or
mov
push
sub
cs
sub
add
test
sbb
jle
lods
sahf
pop
fistl
push
fwait
pop
jo
loope
mov
sbb
and
xor
stc
lods
add
rcrb
loop
icebp
mov
sbb
fidivrl
xor
iret
imul
sbb
xchg
dec
adc
lods
les
lcall
xchg
fimuls
cmp
xchg
jl
lahf
lret
push
add
out
je
das
shll
sahf
xchg
test
xchg
insl
add
int
cmpsb
adc
outsl
stos
or
sti
mov
popa
push
xor
mov
dec
mov
push
mov
test
addr16
dec
adc
cs
add
and
sbb
sub
fsub
clc
cmp
fwait
lea
lcall
inc
cmp
ret
je
add
adc
test
pop
inc
add
fstl
dec
adc
pop
mov
test
adc
test
xchg
xchg
std
fistps
mov
push
adc
mov
sub
imul
and
nop
icebp
js
pop
insb
cmc
inc
jle
pop
test
mov
imul
mov
lds
imul
jmp
orb
lea
dec
or
movsb
adc
mov
aam
and
cmp
fldcw
lock
in
arpl
outsb
mov
loope
sub
xor
sbb
pop
sub
rorl
dec
jbe
aad
aam
and
cmp
loop
mov
mov
push
mov
into
sbb
mov
jp
push
loopne
aam
clc
xchg
or
andl
out
data16
mov
pop
into
call
cmp
sub
dec
push
fisttpl
lret
mov
mov
adc
dec
sbb
xchg
cmp
sti
hlt
jo
sub
out
mull
in
and
pop
push
fisttpl
inc
scas
fxch
inc
pop
lock
jl
inc
jae
add
lret
mov
es
testl
dec
pop
mov
sbb
sarb
add
and
ret
lcall
mov
dec
jbe
lret
or
add
and
mov
iret
mov
sub
push
fnstcw
daa
cmp
sub
add
and
out
int
and
and
lods
adc
mov
mov
push
cwtl
mov
xor
mov
ljmp
jg
aad
test
movsb
in
push
cs
mov
push
push
jle
stos
dec
jnp
std
lret
fsts
jnp
jge
ljmp
icebp
leave
push
dec
std
js
in
sub
adc
mov
xor
mov
shlb
pusha
imul
mov
and
xor
mov
inc
pop
aam
testl
enter
movsl
dec
dec
imul
jnp
mov
sar
or
stc
and
out
pop
push
add
fstps
and
rcrl
popf
inc
adc
mov
xor
mov
jl
ja
mov
dec
pusha
sub
pop
lock
fstps
movsl
aam
and
jae
cmpsl
dec
das
push
mov
xchg
pop
outsl
push
and
jnp
push
arpl
jae
inc
cmp
dec
ret
mov
jno
cmpsl
lea
xchg
push
cld
ret
mov
fcomps
or
bound
cmc
and
aaa
xchg
mov
cmp
dec
add
int
sbb
push
pop
or
push
lahf
popf
jb
mov
mov
das
bound
loope
jnp
int3
js
repnz
sbb
push
mov
lcall
xor
sbbl
addr16
dec
adc
xchg
mov
test
pxor
push
dec
xor
shlb
or
push
mov
mov
aas
aad
add
inc
mov
xor
sbb
in
cmc
dec
cltd
imul
push
in
sbb
push
lret
and
add
sbbb
push
xchg
scas
ret
stc
in
shlb
cmp
and
sarb
mov
mov
cld
mov
and
and
cmpsl
add
push
scas
enter
xor
jecxz
xchg
sbb
mov
movsb
outsb
jl
sbb
inc
adc
loopne
fyl2x
jns
add
or
pop
cmp
jns
xlat
xchg
xor
loopne
pushf
push
sbb
enter
mov
dec
or
ds
fsubrl
sub
out
push
xor
fidivrl
cmp
repz
incl
add
test
test
int3
push
push
cmp
cmp
inc
lcall
in
fmuls
cli
cs
mov
and
adc
mov
sbb
and
push
jg
add
xchg
adc
inc
sbb
pushf
mov
sahf
or
mov
pop
jl
dec
stc
push
cs
adc
xchg
push
jmp
test
sbb
mov
insl
xchg
lds
sbb
fsubrs
adc
inc
negb
mov
jne
mov
or
xor
roll
mov
or
adc
dec
test
or
dec
adc
dec
test
enter
dec
push
filds
push
inc
jg
aam
andb
in
bound
insb
gs
lods
aad
insl
mov
cmpsb
adc
mov
mov
out
rcr
push
mov
sbb
lods
stos
xor
test
lret
icebp
call
push
add
fmulp
or
cmp
lock
push
data16
mov
push
test
loop
adc
incb
test
ja
dec
push
mov
mov
fnclex
jle
xor
pushf
jle
mov
lahf
sbb
notl
popf
mov
push
xchg
sbb
jnp
mov
mov
lret
loope
ds
addr16
sahf
mov
push
push
mov
inc
mov
hlt
jo
and
inc
dec
lcall
add
inc
mov
mov
dec
jmp
jl
addr16
sub
mov
dec
movl
fsubl
sub
mov
and
pop
in
mov
add
push
push
repz
mov
jbe
xchg
push
test
ret
mov
stos
pop
lahf
cs
mov
fwait
adc
dec
adc
push
leave
inc
inc
jp
cmp
in
jae
and
xchg
setnp
call
pop
jbe
adc
sbbb
ret
dec
mov
sbb
mov
lret
mov
sub
inc
mov
mov
idiv
fdivl
mov
or
dec
sbbb
out
push
repz
je
or
cmp
int
mov
sbb
mov
push
shrl
stos
sbb
jnp
cwtl
fbstp
mov
or
pop
fs
xorb
dec
ds
lea
movsl
sub
subl
sub
inc
andl
cld
pop
xor
sarb
xor
add
add
mov
cmp
jmp
jge
add
imul
mov
scas
pop
mov
js
mov
imul
in
cmp
push
inc
mov
sub
mov
push
mov
les
lret
pop
sub
je
push
out
cs
lods
lods
jnp
inc
mov
mov
xlat
mov
sbb
dec
adc
add
inc
aam
cmp
mov
add
les
sub
or
mov
pushl
stc
sbb
aam
pop
test
xchg
cmp
nop
rorl
js
push
mov
dec
xor
and
add
mov
add
rcl
push
ret
pusha
jg
inc
mov
jle
shrb
inc
jp
out
divl
stos
cmp
inc
jno
adc
popf
xchg
rclb
ret
pop
rorl
lea
mov
sub
xchg
and
xor
mov
in
push
sar
jb
jnp
cmp
inc
call
jle
jmp
imul
xlat
outsb
sbb
aaa
jle
cmp
popf
cmpsb
mov
enter
loopne
adc
stc
fs
in
add
nop
stos
das
jb
jmp
mov
roll
inc
sub
pop
jae,pt
out
lcall
mov
rorb
lret
pop
mov
adc
jle
sbb
dec
orb
dec
mov
in
inc
inc
stos
cwtl
lds
pop
lea
xchg
movb
in
mov
pop
cmpsl
test
mov
jo
sub
mov
ror
xchg
mov
jmp
inc
rcrl
clc
inc
fisttpl
add
fsub
jecxz
push
xor
je
push
xchg
jne
scas
push
daa
pop
sub
ror
jmp
inc
dec
in
pop
sub
lds
push
lahf
popf
or
pop
lret
add
lods
lcall
and
jecxz
push
and
push
pop
subb
mov
sbb
pop
lret
fdiv
mov
pusha
cld
inc
inc
ret
push
pop
movsl
add
inc
scas
mov
sti
adc
xchg
ljmp
jnp
mov
inc
sub
imul
jbe
jnp
dec
jp
lea
cmpsl
sub
cmp
xor
test
out
clc
imul
out
mov
lcall
in
or
stc
insl
dec
jg
add
jne
cmp
dec
into
decb
sbb
jne
into
movswl
mov
cs
int3
shrb
pushf
mov
sbb
fdivrl
out
popa
cmovb
filds
xchg
mov
insl
in
arpl
fisubrs
ds
mov
push
push
mov
adc
cld
fdivr
inc
insb
leave
rorb
lret
cmp
jae
insb
push
popf
sbb
mov
je
push
sub
shl
pop
jo
lds
clc
and
sbb
in
adc
adc
popa
sbb
mov
imul
mov
jl
cli
or
nop
or
mov
stos
push
int3
stos
push
adc
lret
mov
iret
ja
mov
and
pop
fldcw
into
shrb
ja
insl
adc
cmpsb
dec
add
fmull
mov
inc
add
insl
cmp
mov
iret
inc
add
ds
inc
xor
aad
mull
dec
xchg
cmp
pop
mov
subb
ret
gs
add
loope
xchg
add
jns
in
ss
cmc
fisttpll
push
fisttps
push
fldt
imul
scas
pop
sbb
push
pop
cmp
in
lret
or
lods
xchg
dec
xlat
pop
xchg
add
rcl
icebp
dec
dec
fpatan
sti
inc
enter
pop
sub
xchg
fnstsw
addr16
pusha
in
push
out
sbb
jge
mov
lea
aad
jno
add
mov
pop
cmpsb
mov
ds
lcall
mov
jl
sub
negb
xor
cld
push
outsl
lret
ljmp
mov
adc
addr16
push
aad
ret
dec
mov
xchg
xor
sub
das
test
add
leave
mov
jp
rcrb
lret
mov
in
mov
pusha
jb
inc
push
jle
mov
xor
inc
xchg
popf
pop
in
mov
lea
mov
mov
and
pop
int3
cmpl
sub
jmp
test
add
dec
push
and
and
shr
ljmp
jb
adc
mov
movsl
mov
jb
std
repnz
filds
mov
or
leave
mov
pushf
inc
mov
mov
jno
fadds
loop
movb
js
movsb
popl
jbe
and
in
mov
sbb
movsb
dec
push
insb
stos
lock
mov
sbb
std
mov
in
and
fwait
insl
push
add
pop
aam
adc
scas
std
in
mov
icebp
repnz
into
and
jle
sbb
data16
pop
out
jo
cmp
das
cs
cmp
mov
jae
fcoml
xchg
add
or
xor
lahf
push
push
dec
and
lods
xor
jp
mov
mov
cmpsb
imul
cltd
inc
push
fcmovnu
lock
outsl
push
jne
ret
jnp
push
pop
or
jl
fmull
aam
pop
jl,pt
jecxz
sbb
fistl
xchg
pop
mov
mov
das
enter
rclb
push
lods
pop
inc
ret
push
movsl
ljmp
fdivrl
mov
or
cwtl
cmpsl
sub
mulps
ss
das
lods
in
or
outsl
popa
and
rorb
jns
hlt
adc
mov
mov
testb
in
sarb
in
adc
xlat
je,pn
pop
sbb
insb
mov
imul
popf
xor
cld
popf
jge
jge
jbe
clc
ljmp
out
jo
out
pop
ss
mov
hlt
jmp
sub
ret
mov
test
dec
lcall
adc
nop
pop
inc
lcall
adc
mov
xchg
push
aas
pushf
pop
cmpl
into
and
inc
and
imul
mov
adc
popf
lret
stos
into
jae
and
pop
push
dec
fnstenv
rolb
jp
or
mov
shr
sbb
sub
popf
ds
lods
dec
jecxz
stc
adc
jne
jo
cld
aam
sub
out
push
stos
cltd
shr
jp
ss
cmp
notl
pop
sub
stos
jae
sub
dec
inc
sbb
push
js
pop
int
push
adc
mov
sbb
xor
ds
and
mov
push
mov
and
addb
adc
mov
fsubrl
push
int
test
inc
xchg
add
andb
mov
dec
and
push
cli
push
inc
scas
and
loopne
icebp
push
fisttpll
mov
les
cmp
adc
fwait
adc
fistpll
shlb
outsb
mov
ss
push
jmp
lea
add
loope
enter
sahf
loop
push
cmp
cmpl
jecxz
mov
into
inc
jnp
sar
lea
sub
cs
mov
subl
pop
adc
add
sbb
in
mov
mov
lahf
and
sbb
repnz
push
fwait
or
push
in
loop
mov
addl
or
aas
pop
arpl
jle
es
sahf
jne
fcomip
movsl
lea
lods
push
jp
cs
ret
in
xchg
aam
mov
jnp
andl
xlat
mov
inc
mov
mov
into
mov
adc
xchg
jae
mov
notb
dec
jl
cs
fidivl
mov
pop
sbb
dec
fisubl
jle
icebp
sub
popa
lods
fdivl
mov
jnp
cmpsb
sub
enter
pop
jge
jmp
mov
imul
leave
sbb
bound
mov
call
xchg
pusha
imul
test
lahf
repz
mov
loope
popf
cld
inc
enter
pusha
out
mov
roll
cmp
int3
and
leave
push
pop
inc
test
push
lret
idivl
lock
mulb
cld
add
inc
test
in
test
sub
fsubl
jmp
mov
add
mov
cmp
add
dec
mov
test
and
xchg
add
lods
cmp
daa
xchg
dec
jmp
xchg
cmp
cmp
mov
fldcw
inc
inc
cmp
cmpsl
iret
push
das
pop
enter
movsl
sub
cmp
mov
sbb
jns
ret
mov
mov
xor
sub
and
faddl
pop
test
or
ds
rcl
jp
fisubrs
mov
rcl
push
mov
pop
mov
aam
mov
mov
xor
and
fnstenv
repz
aam
add
sbb
and
sti
cli
mov
ret
cmp
xor
popa
sbb
sbb
inc
inc
push
sahf
jb
adc
push
xchg
adc
mov
xchg
hlt
cmp
mov
adc
cmpsl
je
mov
or
in
cmp
int3
outsl
jo
mov
lahf
sahf
lahf
or
or
mov
icebp
in
cmp
mov
xorl
sbb
jge
xchg
cmpsl
fnsave
xlat
ljmp
iret
dec
je
scas
mov
test
sbb
sub
mov
pop
cmpsl
sahf
add
pop
inc
pusha
sbb
xor
sbb
dec
fld
mov
jo
hlt
cltd
loopne
and
dec
imul
data16
lret
mul
inc
inc
sub
xchg
jmp
dec
loop
addr16
lret
out
repnz
addr16
arpl
jmp
cmp
loope
xchg
jno
mov
outsb
cmp
inc
loope
mov
rclb
divl
scas
std
push
movsl
hlt
inc
xor
pop
stos
pusha
push
or
xchg
adc
loopne
push
and
movsb
inc
shrl
cwtl
rorb
in
out
arpl
rcrl
test
mov
movsb
cs
or
xchg
pop
sarb
and
scas
push
adc
adc
andl
cmc
aaa
jp
mov
pop
cmp
push
subl
testl
or
test
fstpt
cld
xchg
movsl
jle
rcll
test
je
arpl
jns
bound
mov
shr
fbstp
mov
mov
js
xchg
push
push
fisubs
sti
inc
inc
or
xchg
shll
inc
jg
sarl
mov
cwtl
inc
dec
in
mov
jp
aad
sub
inc
ds
ret
push
adc
xchg
sti
mov
jb
mov
popf
inc
lahf
cmp
jno
divps
in
add
stc
stos
test
gs
cltd
pop
pop
xor
out
outsl
mov
cmp
cmpsl
int3
add
inc
inc
ret
xchg
mov
rolw
adc
mov
mov
adc
mov
push
lock
subb
xor
push
mov
fsubs
outsl
lret
sub
pop
pusha
test
fiaddl
adc
and
loope
jmp
stos
stc
lds
or
imul
jl
lds
adc
sub
adc
jb
pop
cwtl
sbb
xchg
push
dec
cmp
dec
enter
dec
inc
mov
pop
imul
mov
loope
aaa
in
filds
lret
out
mov
into
mov
mov
jle
lret
and
xor
loopne
jnp
aam
movl
sbb
fnsave
sti
push
nop
pop
pushf
xlat
fsub
mov
mov
in
push
fsubrs
dec
arpl
lea
pop
jmp
ret
jecxz
xor
mov
inc
adc
xor
xchg
xchg
push
and
xor
cmp
icebp
movsb
jne
out
jp
stos
subl
pushf
mov
cmp
ret
cltd
rol
aad
test
scas
int3
lahf
mov
xor
jp
add
nop
fbld
into
and
int3
lcall
sbb
pop
cmc
cmpl
sub
inc
mov
xor
sbb
ret
push
pop
or
mov
out
mulb
adcb
xlat
xor
idiv
sub
in
adc
mov
inc
leave
jnp
push
xor
aam
loop
lret
push
pusha
rcrl
popa
pusha
into
pusha
lahf
in
pop
mov
xchg
clc
jl
cli
mov
and
and
fcmove
lcall
push
clc
and
imull
pop
out
int
addb
mov
xchg
push
cmp
jge
loopne
shll
loop
fs
dec
sti
xchg
out
test
ret
movsb
insb
mov
fwait
ret
inc
fmuls
mov
negl
rcr
or
and
in
shll
xchg
aam
cmp
pop
jmp
insl
or
imul
sub
and
test
andl
icebp
or
or
mov
sub
dec
xor
cmpsb
ret
out
orb
cmp
sbb
mov
divb
lret
clc
push
out
jb
sub
lock
hlt
cli
test
cld
repz
adc
cmovge
dec
icebp
pop
aas
dec
mov
push
or
movntq
ficomps
mov
xor
adc
lods
mov
jecxz
jo
inc
jo
imul
xor
cmp
push
inc
stos
aas
out
pop
lcall
ja
pop
push
or
mov
ljmp
dec
out
mov
or
fcoms
push
repnz
cld
mov
cli
add
push
and
mov
dec
js
fs
and
xchg
adc
inc
popa
sbb
cs
imul
insb
ret
outsb
insb
inc
stc
pushf
cmp
movsl
ret
fidivrl
sub
lcall
dec
fwait
in
les
xchg
in
dec
cld
and
and
sbb
sbb
loope
and
add
lds
push
sub
sti
loope
pop
mov
shrl
aaa
sbb
fnstenv
pop
sub
add
cli
push
mov
and
add
mov
sbb
mov
fldcw
cltd
push
cwtl
test
pop
call
lods
dec
dec
lret
cmp
mov
call
or
andl
adc
cld
shl
push
popa
and
fldenv
cs
aad
mov
inc
sti
push
pop
xlat
mov
test
sbb
push
sti
jecxz
rclb
arpl
jne
les
sub
repnz
xchg
test
sub
js
enter
sub
movsl
mov
in
into
and
fnstcw
push
xchg
nop
daa
mov
xor
mov
aam
sub
adc
sbb
mov
jnp
fcmovb
add
lods
inc
test
pop
scas
adc
adc
punpckldq
popf
mov
sub
dec
movsl
xor
push
add
jle
cmp
mov
flds
cli
cs
mov
lds
mov
fwait
add
je
inc
add
xor
and
cli
lcall
cmp
popl
jmp
dec
pushf
ss
mov
out
lock
mov
repnz
sub
hlt
lahf
fisttps
mov
loopne
mov
enter
jge
fs
rclb
or
add
pop
test
js
push
loopne
int3
scas
xchg
pop
xchg
adc
inc
xor
adc
or
repnz
jp
flds
movsl
les
mov
enter
fwait
in
rorl
xor
jmp
jle
or
dec
xchg
pop
sub
or
mov
je
dec
and
push
lret
xchg
mov
aam
pop
fildl
xchg
mov
shrb
dec
scas
aam
mov
outsb
sbb
xchg
pop
pop
push
pusha
push
inc
pop
int
stc
stos
js
div
pop
dec
in
pop
push
aaa
les
mov
mov
jne
cmp
movsb
or
pop
test
rolb
push
daa
fisttpl
shl
fwait
mov
or
fucomip
out
out
cmp
jb
or
cmpsl
add
mov
mov
lcall
lock
inc
pop
cmp
jg
mov
mov
add
in
xchg
icebp
lock
aaa
push
rcrb
mov
add
scas
and
mov
pop
gs
mov
push
push
ja
sub
cmp
mov
into
mov
jo
js
xchg
sub
jp
into
inc
xchg
andl
fmuls
inc
rcll
push
sub
mov
stos
mov
cmpsl
sbb
adc
cmp
push
mov
aas
cld
push
push
pushf
ljmp
dec
dec
arpl
ret
xchg
mov
std
and
mov
fnstsw
push
fs
jg
in
repnz
in
pop
jb
insl
mov
xchg
in
inc
sub
cltd
jle
inc
push
les
xchg
aaa
int
lods
std
inc
test
adc
int3
stos
mov
xchg
xchg
data16
leave
sbb
inc
daa
enter
aam
sub
orb
xor
cmpsl
clc
lods
int3
or
jp
inc
push
fwait
cmc
mov
mov
mov
dec
mov
jle
call
fs
xor
adc
inc
inc
xchg
cs
sub
mov
repnz
and
std
mov
insb
ret
sbb
bound
daa
push
or
gs
lea
les
out
roll
ret
jmp
mov
shl
and
sub
xchg
mov
push
xor
push
mov
xor
add
stc
and
and
cmp
cmp
int
das
cli
xor
clc
ror
sbb
add
popa
xor
cmp
adc
add
int
xor
fidivrl
pop
scas
xor
mov
leave
mov
xlat
jle
test
fsubrl
add
in
js
cwtl
test
divl
inc
inc
rclb
cwtl
mov
mov
or
jle
or
jle
das
dec
ficoms
lahf
add
and
add
push
test
cmp
jne
stos
or
lds
sahf
jl
inc
add
enter
mulb
incl
lods
dec
mov
dec
push
mov
cwtl
lea
aam
dec
jnp
faddl
pop
scas
ss
dec
dec
jae
xor
fsubrl
xor
dec
xchg
movsb
cwtl
and
lret
adc
sub
dec
adc
data16
xchg
mov
call
testb
andb
pop
test
mov
mov
xchg
cmp
inc
jae
pop
imulb
lret
or
out
jge
pop
in
cmc
pop
mov
jnp
pop
jb
mov
mov
rclb
fsts
pop
frstor
xor
pop
jmp
sbb
fidivrs
frstor
int3
mov
dec
push
mov
push
sahf
xorl
push
sub
stc
inc
stc
pmaxub
cmp
xchg
mov
xlat
pop
inc
popa
stos
fldt
push
stos
mov
xor
loopne
push
int
pushf
mov
mov
arpl
notb
orl
or
add
out
adc
cmpsb
lock
popf
push
fdiv
call
aam
jno
and
mov
jbe
movsb
inc
and
cmpb
lea
sub
mov
or
es
add
loope
cmc
out
scas
xor
call
xchg
movsl
mov
js
inc
gs
fs
aaa
insb
jno
std
stos
notb
in
push
loop
test
pop
pop
jp
sbb
in
pop
outsl
cs
mov
orb
loopne
js
add
fsubs
mov
mov
inc
ljmp
dec
out
and
jl
outsb
add
fst
shlb
sbb
xor
push
rcll
mov
insb
push
cmp
rorl
lds
lods
subb
fs
movsb
and
mov
lea
inc
push
mov
out
ss
mov
adc
mov
icebp
or
stos
push
push
cmp
je
gs
dec
add
icebp
sbb
iret
ja
sbb
das
les
mov
std
push
mull
push
add
mov
jl
fisttpll
xchg
push
das
mov
xchg
dec
xor
test
xor
pop
xor
sbb
leave
loop
xchg
mov
cmpsl
test
fisubrl
scas
mov
std
adc
push
push
cmp
xchg
dec
sub
loop
inc
test
push
xchg
out
stc
sbb
je
int3
jno,pn
aam
shrl
lcall
in
xchg
xchg
mov
stos
stos
ret
or
mov
aad
adc
xchg
iret
aas
cmpsb
jbe
dec
xchg
scas
bound
int3
dec
mov
dec
aad
lcall
mov
mov
jo
fisubrl
mov
mov
testl
dec
rorl
gs
movsb
out
roll
adc
scas
sub
and
mov
repnz
pop
xchg
mov
cld
fsubrl
dec
pop
pop
xchg
mov
shlb
xchg
or
gs
leave
xchg
push
push
mov
cmpsb
add
adc
out
adc
sahf
sub
or
xchg
pop
popf
xor
stc
sub
cwtl
ret
imul
fstpt
pop
negl
inc
mov
mov
pop
xchg
or
push
sti
and
jo
in
fstps
mov
cld
call
into
popa
popf
mov
cmp
inc
andl
aas
sub
or
sub
dec
test
int3
mov
test
lock
dec
out
stc
aad
mov
call
jae
mov
ret
push
xchg
push
dec
mulb
and
mov
jns
fdivrs
adc
movsb
or
sub
mov
jo
or
mov
xor
push
add
push
jns
pop
rolb
or
adc
jge
or
sahf
sub
in
and
jb
push
dec
cmp
xchg
fs
verr
ret
cli
inc
jne
xchg
bound
stos
orl
mov
stos
test
mov
adc
or
jl
xchg
adc
xlat
lea
pop
push
mov
sub
in
cwtl
dec
sub
xchg
sub
stos
cmp
jmp
dec
popf
xor
les
pop
pop
cmp
mov
and
jecxz
inc
stos
dec
ljmp
dec
or
and
call
dec
loope
mov
dec
and
lods
scas
mov
sub
jne
push
fimuls
sbb
aad
jno
mov
pop
movsl
sahf
jne
ret
mov
pusha
dec
jp
mov
aas
dec
xchg
push
shlb
or
pusha
jne
aaa
adc
imull
add
popa
imul
cli
les
pop
push
jno
xchg
sub
bound
in
push
push
xchg
cli
loopne
into
jmp
mov
loopne
mov
movq
xlat
pop
adc
nop
es
movd
sbb
out
sub
xor
dec
jns
sub
cmpsl
push
les
xchg
enter
adc
cmp
inc
in
ljmp
pop
out
jg
push
adc
or
mov
fdivrl
dec
or
push
fdivs
out
push
mov
pop
sbb
xchg
sar
fs
outsb
dec
xchg
shlb
xchg
push
int
push
jle
xchg
sub
cmpsb
jp
mov
dec
sbb
inc
testl
pushf
and
sub
xor
sahf
aas
lock
sbb
sbb
fistpl
ss
imul
add
lds
push
aaa
enter
daa
mov
mov
sbb
or
pop
cmpl
mov
adc
or
into
loope
std
iret
and
xor
fwait
in
cmp
fistpll
pop
scas
pop
outsb
pop
aam
push
outsb
bound
fcoml
ss
nop
jbe
sub
mov
and
sti
adc
lcall
inc
push
pop
xchg
dec
sahf
adc
jge
dec
sub
outsl
mov
stc
pop
jp
xor
fisubrl
sbb
xor
dec
xlat
scas
out
xchg
dec
clc
das
push
xchg
enter
test
movsl
pop
inc
fldenv
rclb
and
scas
shr
dec
cli
sbb
test
loope
mov
xor
js
jo
paddusb
jmp
add
out
cwtl
fimull
aad
jle
fdivp
mov
and
xchg
sbb
int
fnstsw
or
subl
jle
dec
sbb
sub
dec
cmp
jg
aam
ret
repnz
push
adc
aam
xor
mov
mov
icebp
popa
scas
add
pop
inc
push
cmp
loop
aam
inc
mov
call
cmpsl
pop
push
test
push
mov
cmp
inc
add
loop
outsl
xchg
out
sub
clc
or
ja
cmp
and
ss
xchg
pop
loopne
cmp
scas
jbe
sub
sub
leave
fisubrs
icebp
push
out
push
cmp
inc
inc
sub
push
sbb
enter
cld
ljmp
mov
cmp
cltd
cmp
cmp
popf
adc
mov
cs
aam
jo
cmp
cmp
stos
or
std
inc
mov
sahf
xchg
cltd
mov
push
add
outsb
pop
popa
pushf
hlt
mov
push
sub
cmpsb
lahf
fwait
lret
outsb
dec
mov
cmpsb
dec
lret
movsb
inc
xor
imul
aam
and
lea
xor
sbb
push
popw
jge
add
mov
jge
push
sub
in
sub
cmp
xor
jb
out
lahf
adc
pop
out
inc
insl
popf
fimuls
nop
lods
adc
mov
ljmp
movsb
shlb
or
sbb
out
sub
fwait
mov
pushf
imul
loop
mov
cmp
xor
insb
cmp
add
dec
sub
daa
out
and
and
ja
imul
loopne
lods
cmp
addl
inc
idivl
testl
mov
nop
jae
ret
add
leave
outsb
jecxz
int
sbb
xorb
jge
inc
inc
addr16
fcoml
ret
mov
iret
lods
pop
negb
addr16
pop
mov
or
clc
and
js
mov
inc
or
ss
xor
mov
jno
add
iret
int
imul
pop
and
fidivrs
sub
pop
mov
loope
and
or
mov
add
push
push
aaa
push
outsb
mov
mov
div
push
pushf
adc
dec
cmp
test
xchg
adc
scas
pushf
dec
mov
lahf
mov
lods
nop
xlat
jns
pop
push
and
repz
mov
inc
pop
pop
adc
add
inc
push
rorb
popa
adc
sub
push
inc
jnp
test
sbb
cmp
mov
xor
adc
repz
mov
rcrl
les
sbbb
sti
cmp
cmpsb
test
mov
dec
mov
std
sbb
jnp
xchg
mov
cmp
mov
push
jne
lds
xor
cmp
mull
push
pop
push
mov
mov
or
test
cmc
xor
out
push
or
loope
jae
mov
aas
xchg
jno
addr16
xchg
cs
xchg
jmp
adc
or
rclb
imul
or
jecxz
faddl
or
iret
mov
ja
fidivrl
push
sahf
out
clc
les
jmp
test
daa
and
mov
mov
pop
inc
or
das
or
cmp
xor
lea
push
sbb
ljmp
sub
push
add
sub
dec
inc
mov
mov
fcomps
mov
sub
jg
xchg
mov
imul
xor
ficoms
clc
xor
mov
test
mov
xor
push
fwait
rcll
cmp
js
jne
inc
pop
sub
pusha
mov
ds
cmp
inc
cmp
jmp
imul
daa
andb
lret
jg
xor
mov
push
mov
shrl
xchg
repnz
push
xor
scas
jo
movsb
pop
ret
xchg
repz
cwtl
lahf
jp
or
xchg
cwtl
test
or
addr16
cmpl
and
sbb
insl
stos
xor
addl
add
hlt
ficoml
adc
pop
and
cmp
sub
add
inc
call
rcrl
push
jle
mov
fcoms
add
aas
xor
jecxz
test
sbb
lret
mov
xchg
xor
test
lret
xlat
inc
mov
and
inc
jg
enter
inc
mov
ss
fsubr
mov
pop
dec
sbb
adc
and
pop
movsb
loopne
iret
inc
scas
ror
mov
cmpb
jns
push
xor
in
aam
mov
stos
sbb
cmpsl
and
leave
in
mov
push
mov
cmp
add
mov
xchg
sarl
adc
pop
outsb
cli
dec
adc
add
pushf
add
fiadds
xor
mov
dec
cmovle
cmp
mov
pop
mov
adc
mov
pop
cltd
int3
xor
sahf
nop
dec
loopne
push
test
mov
lds
fsub
or
loop
push
loop
test
dec
add
lcall
adc
cli
jne
mov
mov
pop
mov
arpl
xchg
enter
dec
dec
add
rorb
pop
cli
jmp
mov
jle
mov
jl
adc
and
sahf
push
jg
rcl
mov
ret
add
lods
push
fldenv
xchg
loop
dec
sbb
push
rorl
mov
bound
dec
hlt
fiadds
sbb
or
mov
test
xchg
inc
or
jmp
mov
rclb
out
sbb
rcr
mov
xchg
fstpl
or
imul
mov
sbbb
jg
loope
xchg
dec
push
ret
enter
cmp
pushf
repnz
rorl
int3
cltd
dec
jp
sarl
mov
pop
je
add
nop
pop
popa
testb
mov
lock
inc
cld
xorb
shll
jbe
arpl
cli
mov
pop
shll
inc
and
add
sbb
sub
mov
repnz
repz
sar
out
neg
es
adc
dec
popa
dec
and
mov
into
pop
push
mov
xchg
and
sub
ds
dec
sbb
daa
stos
int
cmc
iret
sbb
aam
pop
adc
rclb
push
js
jg
rcl
push
int
inc
out
cld
out
mov
inc
in
fdiv
sbb
cmp
mov
lds
rcrb
movl
aas
aas
and
mov
pop
cmpsb
or
add
cmpb
rcll
adc
jae
mov
mov
jg
mov
sub
push
inc
pop
lret
enter
cmp
inc
and
outsl
gs
xor
imul
movhps
lret
ds
sub
inc
ffreep
les
pop
outsl
or
mov
shll
dec
push
or
subl
sbb
cmc
lret
add
sti
fnstcw
adc
dec
jne
in
lods
xor
xchg
imul
mov
lret
int3
push
fwait
shl
sbb
pop
push
cmc
popa
daa
pop
pop
daa
out
cmp
mov
or
add
dec
jo
mov
addl
popa
dec
fmull
push
fwait
out
push
push
sbb
aam
cmp
xor
fildll
pop
mov
xor
fnstcw
notl
roll
or
adc
xchg
les
cs
sahf
push
stc
aaa
movsb
or
xlat
push
arpl
push
call
and
mov
fisttpl
jge
lock
xor
jmp
mulb
cmp
das
add
xchg
push
xor
sbbb
add
je
cmp
sub
rclb
and
es
pop
jb
test
call
or
fdivs
das
negl
mov
lret
leave
fsubrs
cmpsb
fistl
and
repnz
mov
inc
push
add
adc
sub
pop
divb
cmp
cmp
outsl
arpl
repz
test
shll
xor
adc
adc
xor
add
imul
jo
adc
ja
push
cmp
nopl
and
jle
std
sahf
fisttpl
or
jmp
loop
popa
push
add
add
imul
jg
pop
dec
cmp
pushf
adc
bound
xor
dec
stos
push
jne
xchg
jmp
cmp
leave
lods
ja
leave
fbstp
mov
xor
cld
mov
inc
aas
orb
loopne
sbb
outsl
push
push
jp
or
testb
jl
inc
push
arpl
test
ss
mov
xor
notb
add
notb
jo
sub
iret
push
mov
cmp
in
es
and
pusha
mov
mov
enter
das
enter
ljmp
pop
mov
and
mov
aad
push
cltd
xchg
mov
bound
jmp
and
js
int
fldenv
mov
add
mov
pop
xchg
divl
bound
sbb
mov
ficomps
adc
push
xchg
cmp
inc
adc
ds
hlt
push
jns
xor
pop
adc
and
stc
and
add
push
nop
mov
mov
xchg
shlb
mov
jmp
adc
mov
mov
push
push
mov
jle
stos
jg
andb
cld
mov
and
mov
cli
mov
sarl
pop
jcxz
jno
adc
mov
xchg
rclb
shl
lea
xchg
outsl
lret
xchg
repz
cltd
pop
push
je
cmp
mov
cmp
jecxz
mov
addr16
inc
repnz
pushf
lret
divb
inc
iret
insl
enter
jae
call
or
fildl
jecxz
movsb
mov
lahf
pop
push
and
bound
hlt
dec
sub
sar
pop
adc
jmp
pop
inc
bswap
pop
jl
repnz
pop
sbb
push
xlat
add
xor
repnz
ljmp
inc
xchg
ret
or
les
pusha
xor
fbstp
and
hlt
sbb
adc
jne
test
dec
decb
pushf
out
pop
and
mov
xchg
sahf
push
movsb
sar
les
xchg
ja
popa
mov
inc
fimuls
in
adc
mov
lds
insl
push
mov
mov
xchg
loopne
xlat
push
hlt
aas
sarl
xor
cmp
adc
add
stc
inc
mov
xchg
out
xchg
clc
push
ja
hlt
clc
sub
push
faddl
das
daa
cmpsb
insb
outsb
inc
pop
adc
adc
cmp
adc
adc
into
movsl
mov
or
ss
dec
cmp
mov
xchg
adc
xchg
xchg
enter
test
arpl
xor
ret
cs
stos
jecxz
idiv
jmp
icebp
sub
pop
inc
sub
in
xor
leave
aad
jb
xor
push
inc
sub
test
sbb
mov
outsb
add
cmp
test
inc
push
ret
jmp
in
aam
xchg
xor
push
inc
lds
fdiv
daa
dec
ljmp
sbb
mov
shl
sub
xchg
jl
mov
jb
repz
hlt
popf
push
cmp
mov
outsl
push
out
mov
sub
push
lods
pop
mov
sarl
lret
pop
jmp
pusha
in
sbb
push
leave
push
dec
or
xchg
inc
pop
out
pop
std
dec
dec
mov
sbb
lret
jne
xchg
mov
popa
aad
xchg
cmc
test
jb
xchg
mov
outsb
in
push
das
sti
push
rcr
movsl
test
adc
xor
push
cmp
ljmp
jecxz
imul
xor
popa
leave
jb
mov
ja
shl
inc
xchg
add
test
xchg
mov
adc
int
int3
movl
xchg
ret
mov
cmpsb
dec
test
mov
add
add
es
sub
cmc
popf
and
daa
mov
jmp
sbb
int3
icebp
jnp
outsl
loop
pop
push
jmp
mov
imul
inc
mov
cmc
mov
movsl
add
test
push
mov
xor
sub
or
cmpsl
push
mov
jle
jne
add
cmc
mov
mov
and
pop
cmp
aaa
rclb
in
shl
out
int
and
je
sbb
mov
jecxz
movsl
xchg
outsb
xchg
pop
mov
jbe
adc
or
out
jmp
std
cwtl
jle
jbe
js
dec
out
les
jb
es
pusha
xor
mov
jnp
mov
clc
push
inc
sbb
daa
cmp
mov
jne
popf
lret
std
xlat
mov
mov
lods
arpl
test
mov
inc
leave
pop
arpl
mov
xchg
adc
addr16
or
loopne
inc
in
js
sbb
adc
dec
xor
loop
cmp
jge
dec
ljmp
into
enter
add
adc
xchg
dec
aad
addr16
std
insb
mov
out
jmp
es
sub
lahf
andb
mov
jno
gs
add
lcall
sarb
sbb
adc
lds
leave
xor
jo
fpatan
sbb
insl
mov
rorb
ret
inc
cmp
pop
orb
or
iret
popa
mov
pmaddwd
cmp
mov
sub
fistpl
xchg
adc
adc
in
inc
scas
xlat
cwtl
in
stos
push
mov
ret
popa
xchg
xorb
pop
push
test
and
add
rclb
testl
je
sbb
push
inc
out
add
inc
mov
jo
xor
pop
inc
sbb
push
push
mov
lock
mov
les
cwtl
nop
sub
mov
sbb
or
imulb
or
addr16
sbb
or
cmp
mov
inc
push
jns
pusha
jmp
pop
int3
gs
adc
mov
repz
cmp
loop
push
enter
mov
add
pop
and
test
lcall
lea
and
imul
xchg
imull
dec
int3
iret
ret
add
jno
jnp
gs
out
sbb
in
out
xchg
popa
inc
mov
dec
repz
dec
decl
mov
ja
frstor
cmc
push
idivb
pop
loopne
push
push
and
aaa
mov
dec
aad
lds
clc
pop
push
lock
cmp
insl
dec
jbe
mov
push
push
push
xchg
pop
aam
nop
das
and
sti
imul
in
sahf
ss
ja
push
into
int3
cltd
pop
jle
sbb
mov
sbb
outsb
lock
xchg
or
cmc
push
pop
and
mov
scas
xchg
lea
sbb
mov
out
fisubl
lret
sub
sti
out
mov
lods
and
adc
mov
inc
sub
sub
ficomps
ja
push
lret
mov
in
in
add
pop
lahf
or
ffreep
sbb
pop
mov
shlb
sbbb
ret
mov
hlt
jno
or
mov
cmc
and
sbb
push
pop
daa
loop
out
outsl
push
dec
in
es
add
test
arpl
xchg
fldcw
xchg
jb
mov
aam
aad
les
and
and
cmp
xor
fsubr
sub
mov
cs
hlt
inc
sti
adc
mov
push
int
enter
mov
cmp
push
ret
dec
or
das
daa
jb
lcall
push
push
push
push
mov
fistpl
and
dec
nop
add
add
in
mov
xchg
test
inc
adc
jo
push
stc
loope
xchg
and
ds
bound
sbb
daa
fstps
cmp
pop
adc
lret
divb
push
fs
cmp
rolb
fidivrl
xchg
pop
shr
fsubrl
jle
inc
ret
repz
aam
call
pop
out
sbb
roll
xor
cmp
imull
cmpsl
repnz
lret
aas
in
insb
cmp
fists
push
mov
cmp
push
adc
mov
cld
mov
in
pop
sbb
aas
mov
mov
or
push
inc
popf
add
ss
mov
into
fstps
and
ja
push
xlat
add
sbb
xchg
and
inc
dec
aaa
fcomip
testl
js
call
sahf
and
mov
pop
js
dec
into
icebp
lcall
in
imul
xchg
out
out
loop
pop
int3
push
out
pop
lret
pop
clc
xchg
pop
xlat
dec
dec
dec
and
cmp
test
stc
or
popf
xchg
adc
fimull
push
xor
int3
adc
add
xor
and
out
repz
das
gs
cmc
sub
xorl
pop
lock
pusha
mov
mov
pusha
dec
jnp
mov
and
mov
jns
jne
or
ret
xlat
cmp
jae
aam
dec
outsb
and
int
or
lret
pop
into
outsb
clc
lea
sti
xor
jge
jg
jle
cmpsb
add
addr16
dec
dec
iret
arpl
clc
in
inc
ljmp
or
inc
fisubs
jp
inc
jo
pop
outsl
jo
sbb
ret
xor
pop
xor
in
into
outsb
int3
mov
inc
xchg
leave
cltd
jbe
movsl
sub
das
xchg
cmpsl
sub
xchg
and
mov
lcall
sbb
pusha
in
notb
push
outsb
mov
in
mov
sti
mov
movsb
incb
or
pop
push
sbb
test
addr16
xchg
mov
imul
cmp
dec
test
cmc
push
add
dec
sub
inc
lahf
adc
inc
das
xor
push
incl
xchg
mov
stos
push
mov
push
pop
divb
push
sub
fs
lock
cmpsl
push
jp
jae
jns
xlat
das
jg
daa
or
repz
cmc
sub
jl
xlat
and
rclb
lds
into
leave
push
out
cmp
aas
ficoms
test
lods
lret
push
xchg
or
add
shr
dec
add
stc
andl
xlat
repnz
jno
mov
sahf
dec
ds
mov
fnstenv
inc
push
push
js
test
bound
and
in
ret
xchg
xor
call
and
xchg
sti
fnstcw
lret
loop
mov
jns
xor
cli
xor
jo
or
aad
movsl
stc
add
out
or
scas
adc
addr16
push
or
stos
nop
arpl
inc
xor
adc
sbb
test
cmpsb
aaa
imul
gs
push
xchg
dec
push
rcl
sbb
ret
pop
jmp
ja
inc
fs
xchg
mov
add
and
jno
lahf
mov
cwtl
jle
mov
add
push
or
les
leave
sub
pusha
sbb
dec
cmpl
test
inc
and
pop
xchg
cmp
xorl
nop
into
cmp
cmp
xor
arpl
mov
or
mov
or
pop
mov
or
fsts
out
mov
xor
push
mov
lock
jmp
loope
or
jbe
popf
fimull
enter
inc
xchg
dec
js
jp
add
shll
mov
pop
lods
sbb
mov
cmc
jne
ds
mov
loopne
dec
mov
or
arpl
hlt
pop
jns
jle
mov
push
lcall
ja
xchg
leave
in
clc
mov
and
xchg
mov
or
js
in
jae
fidivrs
pop
mov
add
sub
xor
dec
mov
jecxz
scas
enter
xor
das
in
test
sbb
push
mov
nop
pop
mov
cmp
int3
push
sub
mov
gs
and
jb
pop
insl
cmp
xchg
loopne
cli
iret
and
jge
xor
fisttps
mov
out
iret
and
pop
push
nop
xchg
shlb
lods
mov
mov
filds
out
imul
int
sbb
sub
decb
add
cmp
mov
xor
ficoms
push
outsb
pop
scas
pop
mov
insb
jecxz
pop
roll
sub
shrb
popa
pop
call
test
jno
adc
je
xchg
push
call
popf
ror
dec
mov
pushl
cmc
mov
dec
out
inc
mov
adc
fidivrl
mov
out
mov
mov
lcall
cmp
xor
adc
std
adc
mov
push
lahf
les
push
push
push
pop
pop
push
sbb
scas
mov
addr16
ds
cld
cmp
or
imul
mov
mov
pushf
fnsave
mov
mov
std
int
jo
hlt
push
dec
ds
push
icebp
jnp
cltd
int
ss
das
xchg
push
jge
adc
xchg
add
and
movsb
xchg
fadds
adc
int3
es
mov
mov
insl
out
fsubs
cmp
out
int3
sbb
mov
inc
daa
ljmp
mov
sub
mov
popa
inc
imul
cmp
pop
push
push
inc
aam
mov
cmp
jle
dec
adc
clc
jns
jo
das
dec
lcall
push
or
mov
pop
loop
imul
cltd
mov
cld
data16
cwtl
jns
mov
xchg
xor
cmpsb
andb
aas
or
fs
and
aad
lahf
arpl
scas
dec
das
sahf
stos
jae,pn
fiadds
cld
and
sub
enter
dec
jle
mov
jbe
push
andl
call
roll
lds
hlt
pushf
or
lret
jnp
mov
pop
les
out
lods
dec
das
ds
ret
push
repz
jo
pop
movsl
dec
mov
iret
lock
rolb
add
rcrl
stos
ss
xchg
adc
fs
cwtl
jne
jecxz
and
and
in
outsl
pop
mov
sahf
mov
fwait
je
cmc
pop
rclb
loopne
cmp
dec
jg
pop
daa
push
sub
push
pusha
call
sti
mov
fs
or
adc
push
into
int
push
mov
jnp
adc
jl
adc
sahf
stos
js
push
je
adc
imul
xor
xchg
insl
repz
int
jl
lret
mov
dec
add
jbe
pop
xor
xchg
add
incb
xchg
add
leave
mov
mov
mov
adcl
aad
cmp
leave
ret
cmp
jp
cmc
movsb
or
lock
int3
xchg
push
lcall
cmpsb
jo
cltd
pop
sub
sbb
mov
and
aam
nop
lds
push
mov
out
scas
loop
pop
popf
cmpsl
mov
movsl
cmp
xchg
lods
andl
cs
repnz
adc
pop
cmp
adc
jle
xchg
stc
or
xlat
rolb
test
mov
jge
xchg
xor
mov
lods
pop
sbb
mov
das
rep
ret
jb
push
lods
push
subb
lods
sbb
pop
pop
mov
inc
jno
add
sbb
outsb
adc
aas
sub
cmpsb
jne
ja
pop
pop
pop
leave
es
mov
loop
arpl
sub
shrl
inc
sub
jbe
outsb
fsubrs
jo
adcb
sub
inc
test
jle
mov
sarl
dec
inc
lcall
and
pop
xor
adc
push
add
xor
lock
xor
pop
popf
push
pop
imul
and
sti
mov
call
outsb
cmp
sub
pop
std
adc
add
sbb
insl
loopne
push
stos
out
out
lods
xorl
nop
repz
std
cwtl
loope
out
cmpsl
out
lahf
rolb
daa
push
leave
in
xor
or
iretw
scas
loopne
jle
jle
ljmp
scas
lds
sti
cmp
lret
pop
movsb
mov
pushf
mov
xchg
lods
and
xchg
orb
in
push
lds
scas
cmp
lock
sub
mov
push
fadd
jo
orl
test
addr16
inc
xchg
push
std
cld
mov
scas
mov
xor
cmp
and
cs
mov
fdivr
out
mov
rclb
inc
mov
shll
adc
fldl2t
lcall
push
push
stos
outsb
sbb
adc
shlb
xor
dec
pop
insb
adc
dec
pop
daa
mov
mov
or
dec
stos
inc
dec
cmc
inc
gs
cmp
in
sbb
xchg
mov
fnstenv
add
gs
shll
jae
decb
fistpll
xchg
or
std
int
ret
add
out
xor
std
scas
aas
xchg
ror
push
popf
adc
xorl
clc
xchg
sbb
in
ror
scas
mov
imul
mov
out
mov
mov
jp
add
popf
pushf
sbb
test
jle
dec
call
ljmp
mov
xor
insl
dec
add
xchg
inc
ja
mov
push
out
bound
jns
std
jp
pop
fldcw
mov
jnp
cli
daa
cmpsb
xchg
flds
scas
int3
imul
popf
out
lcall
mov
mov
popf
xchg
push
or
loopne
mov
push
lcall
pop
or
fnstcw
pusha
dec
sti
cmp
adc
loopne
xor
jns
inc
enter
das
jae
arpl
fnsave
xchg
jg
ljmp
push
fwait
mov
mov
test
pminub
daa
bound
fnstcw
jmp
repz
push
jno
sub
mov
stc
or
jo
test
mov
cmpsl
js
mov
enter
test
sub
test
mov
ret
aaa
repnz
popf
xor
scas
cmpsl
lret
fs
or
mov
shlb
sahf
cmpl
pop
popf
push
mov
push
xchg
add
int
shlb
call
jl
pop
adc
dec
jno
test
push
push
maskmovq
negl
lret
ljmp
jbe
xor
rcrb
push
push
lea
shll
jge
in
add
mov
data16
stos
sub
les
xchg
cmp
mov
jecxz
pop
iret
rolb
not
sub
and
test
imul
and
inc
hlt
repz
push
int3
sbb
iret
and
cli
dec
xchg
pop
roll
outsb
cmp
dec
test
sbb
mov
jp
enter
cmp
loop
std
lods
adc
insl
push
jnp
aad
shrb
fcompl
mov
cltd
add
or
lea
je
es
mov
and
jns
jl
dec
hlt
pusha
cmp
dec
loop
movsl
mov
test
or
mov
test
jo
and
pop
or
mov
aad
xchg
mov
adc
movl
mov
xlat
xor
jle
cltd
jle
leave
mov
lahf
push
and
push
inc
adc
xlat
leave
sbb
sbb
out
cld
push
push
out
push
fsubrl
fwait
jae
adc
cmp
sahf
jns
mov
hlt
ficompl
fsubs
out
and
add
jb
and
ret
gs
ficoms
aam
xchg
jno
fidivl
sbb
mov
mov
pop
inc
into
sub
lcall
sub
not
mov
bound
lcall
out
add
or
repz
stos
sbb
jne
cwtl
push
dec
xchg
mov
jle
sub
mov
xor
mov
pop
mov
pop
mov
lock
ficoml
leave
inc
scas
out
inc
imulb
xchg
test
cmp
add
sub
pop
or
dec
xchg
in
sbb
adc
inc
or
pop
pop
add
xor
inc
mov
lcall
outsb
cld
and
jmp
test
push
mov
cmp
enter
popa
xor
adc
fstps
imul
mov
fbld
dec
int
mov
pop
xor
pop
andb
ret
sub
lds
xor
xchg
push
or
movsb
adc
add
out
das
shll
or
xchg
ficoml
call
cmp
mov
lret
xchg
test
fstps
jae
loop
mov
into
add
xchg
mov
sbb
xchg
mov
dec
popf
push
nopl
data16
inc
xchg
cltd
in
lcall
sti
leave
mov
xchg
push
mov
sbb
lds
mov
cmpsl
in
add
mov
mov
lds
add
outsl
add
in
lahf
ds
and
push
ds
xchg
pusha
mov
xor
idiv
jbe
les
cmp
or
push
aas
adc
inc
cmc
mov
inc
adcl
insl
lret
xchg
into
jp
cmpsl
mov
xor
adc
sahf
push
incl
lods
leave
dec
sbb
jne
ja
xchg
inc
and
out
rolb
mov
sub
test
into
add
movsb
push
xchg
daa
inc
sbb
xlat
gs
mov
inc
ja
cwtl
sti
icebp
adc
mov
pop
pop
lods
stos
leave
jb
popa
mov
inc
mov
sbb
cmp
outsb
or
lret
xor
push
mov
and
sbb
xchg
gs
or
les
xchg
add
test
popf
lds
stos
mov
xchg
cwtl
xchg
sbb
test
pop
cmpsb
jp
test
dec
pop
mov
push
movsb
loopw
jmp
adcb
sub
push
mov
pop
add
or
icebp
nop
in
fs
sahf
mov
ss
mov
rorb
inc
cmovl
jno
ljmp
xor
rcl
jo
jle
push
js
idivb
testl
in
insb
call
cwtl
ds
xor
xchg
mov
rcr
sbb
xchg
fcmove
aas
xchg
cs
jmp
push
cld
adc
test
popa
aas
mov
and
in
test
das
mov
mov
mov
movsb
shrl
xchg
jns
in
test
push
mov
je
adc
scas
pop
adc
fs
repnz
fistpll
pop
clc
stc
or
mov
sub
dec
lret
loope
inc
mov
test
loope
in
and
dec
mov
adc
mov
jle
sub
insb
test
adc
cs
jne
adc
pusha
mov
subb
xchg
std
movsl
jo
outsl
adc
mov
out
mov
adc
loope
repz
adc
xchg
lds
pushf
inc
mov
mov
push
adc
loope
shrl
mov
scas
xor
sub
xchg
xchg
movsb
fidivl
cmp
cmp
cmp
sti
xchg
outsl
push
mov
fs
bound
popa
icebp
pop
inc
mov
pop
dec
leave
popa
adc
leave
imul
repnz
in
jne
outsb
add
insb
stc
jmp
sbb
int3
out
imul
push
int
push
test
out
jbe
and
fstpt
push
sti
cltd
loop
pop
repz
mov
rclb
sbb
fwait
mov
cmp
enter
js
jl
or
add
lret
mov
and
push
mov
fidivl
lret
xor
mov
lods
in
lods
inc
bound
xchg
mov
repnz
leave
or
dec
xor
xor
mov
push
sbb
data16
cmc
cld
call
fcoms
pop
mov
movsb
clc
pop
sub
out
bound
mov
xchg
in
inc
mov
add
rcl
ljmp
inc
movsb
pop
lods
shll
inc
and
add
jp
arpl
or
sub
pop
dec
jne
jb
roll
cltd
push
out
icebp
or
pushf
lret
cmc
cs
imul
jo
fnstenv
push
fnstcw
jne
sub
bound
int
int3
push
inc
inc
leave
sub
mov
es
sbb
ret
cmpsl
test
sbb
xchg
or
pop
pop
in
mov
sub
dec
pop
xchg
in
aad
push
jge
test
insb
in
je
les
sbb
sarb
lret
mov
nop
cmp
fwait
xor
push
add
adc
xor
lock
test
repnz
mov
lret
iret
shlb
dec
jg
fcoms
cmpsl
inc
leave
xchg
std
jmp
imul
int
cli
scas
data16
sarb
jns
test
xchg
jb
std
bound
cwtl
dec
adc
xchg
push
lods
fistpl
or
xchg
adc
jmp
lock
clc
call
cmp
loop
xchg
xor
lods
mov
subb
sahf
iret
cmp
out
xchg
loopne
sub
fnstenv
cs
int3
sub
adc
out
mov
xor
xor
mov
cmc
pop
inc
jl
test
leave
or
inc
mov
fstps
adc
or
mov
cmp
andb
jg
or
pop
push
xchg
in
pop
je
pop
adc
ss
jmp
ja
mov
scas
fwait
mov
insb
add
xchg
aaa
shll
cs
mov
aas
adc
cltd
jp
add
xchg
dec
dec
orl
lods
out
in
jns
scas
fimull
push
xchg
popa
aad
push
pop
das
test
shl
cwtl
das
and
call
gs
fsubrl
stos
shll
jl
addr16
out
mov
pop
sbb
aam
shll
sbb
inc
xor
test
sbb
std
inc
test
cmp
cltd
mov
aas
dec
adc
fists
mov
sti
mov
loop
xchg
xor
jecxz
jg
cs
push
xor
ret
sub
imul
jg
sbb
jne
mov
cmp
inc
mov
jo
cmp
cmp
cmp
je
cmp
dec
jecxz
mov
mov
jmp
vpsubsw
jl
adc
out
jo
outsl
in
adcl
in
push
mov
xchg
dec
mov
mov
insl
sbb
les
ret
jb
fwait
out
es
scas
cmpsl
jno
imulb
lods
mov
nop
cmp
adc
mov
loop
push
andb
shl
cs
pusha
in
cwtl
or
divl
movsb
adc
add
xchg
stos
out
mov
leave
test
cld
mov
add
mov
cmpsb
movsb
mov
scas
xor
cmp
or
repnz
cmpsb
pushf
insb
sub
xor
adc
inc
leave
jmp
jbe
loop
movsl
stc
and
ret
int3
rorl
hlt
mov
adc
addr16
shrl
jne
cmp
sbb
data16
mov
and
enter
loopne
test
sub
lods
xchg
cs
insb
aaa
add
pop
imul
ja
sahf
pop
xchg
sbb
xchg
nop
dec
icebp
pop
mov
and
xchg
insl
add
cli
das
int
xchg
nop
das
adc
xor
pop
fdivrs
shll
mov
arpl
pop
hlt
stc
aad
arpl
jno
mov
mov
sub
dec
inc
mov
loop
aam
and
xor
frstor
mov
aad
and
mov
pop
sbb
stos
out
cmp
inc
testb
jecxz
and
mov
or
mov
frstor
movsl
push
adc
mov
lcall
mov
std
data16
or
or
jp
or
shlb
xchg
mov
addr16
jo
aaa
lcall
sub
inc
arpl
pushl
enter
adcl
loop
push
dec
mov
xor
mov
sbb
out
xor
mov
gs
aas
push
shrl
pop
mov
je
adc
movsb
fistl
cmp
cwtl
or
icebp
sbb
pop
mov
adc
xchg
pusha
jb
push
pop
pushf
call
inc
mov
fcmovnbe
call
stos
adc
jmpw
mov
xor
mov
in
scas
add
mov
std
mov
pop
leave
les
gs
int3
cmp
clc
jge
aaa
nop
in
gs
jbe
push
jae
jns
add
mov
adc
imul
into
cmp
and
test
sbb
scas
pop
movsl
cmp
fmuls
into
sub
sub
adc
add
and
jle
aam
pop
mov
dec
dec
push
mov
int
testb
daa
cmpsl
jne,pn
aad
jns
mov
addr16
xchg
mov
xor
mov
xor
je
insl
adc
inc
mov
dec
and
aad
int3
mov
push
ret
insb
stos
adc
xor
pusha
js
push
xor
sbb
jge
cmp
pop
jle
mov
dec
ljmp
add
lcall
ret
xor
daa
jecxz
out
push
and
cmp
sbb
mov
outsw
jbe
clc
push
jg
stc
mov
sbb
aam
xchg
cmp
adc
pop
movsl
push
mov
ficoml
push
lods
or
rclb
mov
xor
sbb
addr16
push
sub
jb
xchg
ficoms
mov
mov
stos
dec
daa
imul
or
pop
xchg
test
xor
push
daa
push
xor
add
push
dec
pop
repnz
or
jo
or
mov
and
cltd
adc
jecxz
cmp
scas
xchg
cld
sbb
int3
ljmp
add
imul
lock
jge
les
sub
push
sub
xchg
mov
ja
insb
mov
add
lods
icebp
sarl
cmp
inc
fildll
dec
icebp
mov
fdivl
xchg
adc
je
jno
jb
lret
push
ljmp
sbb
jecxz
mov
and
xchg
sbb
add
pop
in
sub
mov
rclb
imul
push
repz
pusha
pop
imul
cmp
add
and
stos
cmp
stos
inc
popw
xor
adc
push
ret
cli
fsubs
xchg
lret
rclb
cltd
in
jl
in
push
in
lcall
setl
inc
or
jle
xor
sbbl
jns
das
mov
push
les
jns
incb
add
fwait
lcall
jmp
lock
add
jae
mov
jmp
jp
das
push
scas
es
dec
fbstp
popa
dec
popa
int3
cwtl
scas
pop
jae
loope
data16
mov
or
lret
mov
int
or
or
test
push
sti
sbb
sbb
mov
pop
cmc
push
inc
ficomps
xor
pop
mulb
dec
push
push
jnp
adc
arpl
mov
jmp
loope
sub
aam
fcoml
xchg
and
adc
xchg
jmp
pop
or
push
notl
and
xorl
jno
or
dec
iret
or
dec
pop
test
cmc
into
pop
int
push
and
mov
and
rcl
mov
pop
xchg
xlat
aad
ret
arpl
fcompl
jb
subl
ret
mov
fs
in
mov
cmp
dec
sbb
push
cs
test
mov
xor
jae
push
mov
and
icebp
push
xchg
and
inc
data16
lods
ret
leave
scas
mov
aas
pop
mov
xor
je
das
loope
jns
push
and
jmp
push
sub
push
sub
call
dec
fistpl
rorb
aaa
pop
sti
adc
jns
js
loope
mov
imul
xchg
mov
test
sbb
dec
call
push
add
outsl
jno
mov
and
pop
push
xchg
in
mov
sub
out
or
sub
stos
mov
jp
add
dec
adcl
enter
inc
pop
inc
push
mov
jb
int3
fnstenv
dec
in
xchg
stos
loop
sti
jne
stc
cmp
adc
in
out
sti
scas
test
cmpsl
mov
test
int3
pop
push
lcall
sbb
inc
cmp
repnz
dec
out
call
test
mov
cmp
xchg
and
test
sbb
mov
daa
jmp
sbb
and
aam
add
lahf
xchg
mov
inc
outsb
popf
or
pushf
cmp
mov
sbb
add
pop
add
pop
mov
push
cmp
push
sbb
loop
lret
fidivrl
xor
cmpsl
dec
sbb
inc
in
test
insb
jp
inc
test
cmpb
outsl
cmpsl
xchg
mov
sbb
adcl
adc
mov
jmp
test
dec
lcall
or
mov
sbb
fildll
sarl
fnstenv
aas
dec
out
mov
jg
lret
jle
or
pop
mov
lret
mov
mov
in
insb
pop
icebp
or
clc
std
sub
out
mov
mov
mov
pop
loopne
dec
or
insl
sbb
jg
push
cmp
mov
fwait
cltd
dec
stos
mov
dec
push
jb
push
test
fistpl
pop
enter
add
mov
iret
int
push
pusha
mov
negb
pop
xchg
xor
xlat
sub
push
or
mov
testl
jbe
iret
repz
js
jge
fwait
daa
inc
dec
in
mov
cmpsb
jae
mov
push
pop
add
aaa
push
mov
cmpsl
push
in
xchg
aaa
push
fcompl
jb
filds
lret
push
jo
lret
addr16
jmp
fimuls
lock
aam
fisttps
cmpb
mov
and
stos
cmp
xchg
jle
pop
cmpb
pop
xchg
iret
mov
inc
int3
mov
data16
or
cmp
cmp
jmp
mov
sahf
fimuls
aad
xor
xchg
add
mov
mov
in
mov
jg
aas
cmpsb
inc
jmp
and
ret
or
shll
add
movsl
mov
outsl
int
mov
adc
and
xchg
aad
sbbb
jle
jne
fnstenv
sub
and
arpl
sub
and
inc
xlat
ds
push
mov
adc
mov
dec
sahf
or
lock
dec
add
push
ret
data16
mov
iret
fldl
push
adc
dec
jl
jo
clc
lock
sub
out
cmpsl
outsl
adc
pop
cmp
pop
jg
test
enter
leave
xchg
imul
in
icebp
loopne
movsb
decb
dec
outsl
mov
inc
mov
int3
mov
adc
mov
jb
clc
add
jno
sub
sub
push
lcall
insl
aas
jp
insb
addr16
outsl
xor
mov
inc
push
pop
mov
fistl
scas
rcll
lods
inc
testb
xchg
adc
or
fsub
addr16
or
lcall
sbb
data16
xchg
int
clc
addr16
arpl
adc
js
xchg
add
pop
adc
and
jmp
push
pushf
fisubrl
xchg
jle
aam
cmp
jae
cmpsl
es
push
out
add
nop
repz
xchg
cmp
cwtl
ljmp
or
mov
adc
addr16
divl
mov
sbbb
sahf
rorb
std
insb
es
adc
mov
test
xchg
jae
fildll
xor
pop
ss
out
xchg
leave
cmp
pop
insb
fmull
lds
fstl
push
xor
adc
jno
push
or
push
xchg
outsl
adcb
xor
rcr
dec
aaa
test
add
mov
test
xor
data16
and
leave
jnp
jne
mov
mov
rcl
pushf
arpl
subb
xchg
orl
mov
push
sub
lock
inc
pop
inc
into
jle
mov
cli
sbb
mov
add
test
nop
jne
lahf
sub
mov
testl
rorb
pop
push
cmpsb
fstps
jmp
aam
lock
gs
lods
sbb
inc
mov
popf
pop
es
int3
mov
stos
jns
jmp
hlt
mov
addr16
enter
stc
pop
mov
mov
and
fidivrl
or
hlt
aaa
or
ret
push
aad
push
arpl
repz
sub
cmpl
xchg
popa
push
icebp
scas
lret
mov
dec
sub
dec
out
push
xlat
aas
pusha
push
out
dec
sbb
mov
mov
pop
fdivrs
dec
add
inc
outsl
xor
out
in
testl
pushf
test
mov
jnp
mov
push
lods
add
or
adc
ja
fcompl
mov
push
sub
scas
add
dec
and
add
or
and
push
lahf
inc
xor
cwtl
xor
jl
sub
jo
aaa
dec
pop
jo
cmp
mov
jno
lahf
subl
jmp
and
mov
or
lea
inc
daa
adc
or
std
add
andl
dec
gs
add
cmp
xor
je
xchg
sbb
adc
insb
and
sub
mov
out
imul
daa
cmp
mov
stc
and
jo
push
mov
imul
pop
shrb
inc
cwtl
cmc
push
popf
mov
push
and
pop
and
das
sub
push
out
add
popa
xor
imul
mov
pop
aad
movsb
mov
test
and
jp
jbe
out
jns
in
fmul
pop
cmp
push
int
fcompl
mov
mov
cltd
mov
aas
xor
popf
insl
push
ltr
lods
pop
in
insl
outsb
bswap
xor
sub
cmp
outsl
cmp
mov
jg
jecxz
dec
push
pop
cld
cmp
push
mov
sahf
or
je
jecxz
ficoml
xchg
outsl
imul
lods
imul
lret
movsb
mov
jns
int3
iret
es
and
shl
imul
mov
pop
call
push
sub
fsubrp
and
push
testl
cmp
fldenv
mov
mov
mov
mov
push
lcall
mov
mov
lea
arpl
cmp
out
pushf
mov
sbb
sub
je
adc
dec
and
dec
in
cmp
lcall
sub
push
divb
jecxz
ljmp
in
add
cmp
ret
mov
mov
fdivs
pop
mov
in
and
pop
pop
fbstp
pop
and
stos
xlat
mov
and
jns
in
fst
cmp
sub
fsts
in
dec
dec
stos
push
cmp
fisttpl
out
mov
inc
insl
jae
adc
shll
add
xchg
das
data16
rcll
das
push
scas
or
mov
or
fildl
adc
cmpsb
xor
outsb
std
or
xor
xchg
lahf
mov
xchg
fldt
cmp
stos
lods
push
push
xor
pop
fucom
or
jnp
xor
ret
sub
push
pop
fwait
inc
sbbl
jae
xchg
stos
xor
push
rcr
aad
shlb
jg
cmp
stos
outsb
xchg
push
ret
incb
push
stc
pop
cmpl
cli
dec
loopne
push
in
xchg
test
loop
test
dec
rcr
andl
js
jle
adc
cmp
mov
unpcklps
stc
leave
or
jnp
fisubrs
push
in
mov
sbb
addr16
loopne
lods
fwait
mov
mov
pop
sub
mov
mov
cmp
enter
lahf
outsb
fs
or
test
sti
ljmp
bound
mov
xor
push
adc
shll
add
xchg
add
decb
mov
cmpsb
dec
clc
in
pop
xchg
shrb
inc
in
mov
xor
or
sub
adc
push
lods
xchg
call
jp
xchg
jg
push
js
in
insl
lock
insl
sbb
sub
push
sub
mov
pop
loope
cmp
les
ja
xor
mov
out
lret
addl
imul
test
jle
dec
jb
lods
movsb
std
loopne
inc
lret
lret
adc
cmp
pop
mov
stos
aaa
push
lahf
mov
scas
inc
cmp
lret
shlb
test
sub
push
outsb
pop
pop
mov
scas
or
ficomps
adc
test
push
hlt
push
mov
add
inc
iret
push
and
ds
imul
in
fcoms
mov
sbb
stos
gs
std
fcmovnu
and
pusha
mov
jno
xor
cmp
shll
cs
lahf
dec
adc
movsb
inc
cmp
xchg
stc
push
sbb
and
icebp
xchg
mov
add
dec
mov
cmp
outsb
cli
inc
test
jbe
jp
or
movsb
cmp
jb
mov
push
lea
mov
out
in
js
hlt
or
xchg
jp
xchg
dec
std
movsl
leave
pop
sahf
int3
mov
daa
xchg
xor
insb
cmp
xchg
mov
adc
lret
jb
or
por
stos
mov
lds
hlt
xor
fdiv
jb
jae
xchg
dec
push
pushf
enter
popa
xor
adc
flds
aas
sub
pop
push
jmp
bound
xchg
fucomp
pushf
jl
in
jmp
mov
add
rcll
sbb
pop
sub
adc
add
aad
insb
test
mov
iret
pop
xor
mov
adcb
nop
loop
add
scas
cmpsl
cs
rcll
rcrl
jne
lea
fcoml
push
add
bound
fs
pop
mov
int3
mov
push
cmp
xchg
jl
stc
stos
fcmovnu
sub
enter
pop
push
testl
iret
cmc
pop
mov
loop
cmpsb
and
nop
loop
icebp
aaa
mov
add
rclb
pop
data16
rcr
mov
call
aaa
jmp
out
jecxz
add
push
fs
scas
mov
mov
sahf
stos
or
mov
repz
mov
outsb
pop
jecxz
sub
popa
jne
in
fld
jb
xor
add
pop
cld
imul
test
sbb
jl
xchg
mov
jecxz
jp
add
xchg
or
or
jb
adc
inc
sbb
push
sbb
add
icebp
mov
repz
pop
out
sub
push
mov
mov
dec
hlt
in
add
cmp
mov
fmuls
fs
ret
loope
mov
mov
push
pushf
add
in
pusha
sbb
std
push
das
loop
repnz
lock
out
adc
inc
rcrl
or
dec
mov
in
lret
push
cltd
fimull
cmp
cmp
out
enter
movsl
push
add
daa
mov
mov
out
adc
into
test
repnz
inc
pop
gs
or
cmp
pop
sub
fists
pop
shll
inc
lock
xor
pop
leave
mov
andl
inc
fsubr
ficoms
pop
jmp
movsl
adc
lcall
out
scas
pop
je
in
je
flds
shrl
xor
ljmp
cmp
pop
cmp
and
xor
or
pusha
icebp
mov
outsb
gs
and
roll
aad
push
xchg
lea
in
dec
stc
fisttpll
push
adc
or
pop
stos
stos
or
and
pop
xchg
call
pop
test
or
mov
sub
push
dec
iret
add
add
lret
jnp
arpl
mov
xor
add
cld
ret
push
test
xlat
out
inc
jbe
sub
push
loopne
xor
roll
mov
push
lods
imul
cmp
mov
mov
cmp
mov
xchg
jmp
clc
sbb
dec
adc
xor
out
mov
clc
mull
push
into
je
lcallw
adc
or
xchg
mov
push
insb
jbe
sub
dec
movntq
out
and
xor
cmp
ret
pop
dec
cltd
sub
sub
or
scas
dec
xor
adc
adc
jecxz
inc
inc
pop
jne
mov
sub
fcomp
push
and
inc
dec
fwait
push
cs
add
xchg
in
ljmp
outsl
xor
aam
and
lret
ret
mov
mov
jno
test
aam
imulb
fmull
andb
dec
dec
mov
xor
mov
outsl
mov
jae,pn
cmpsl
mov
adc
push
sub
pusha
add
daa
lahf
loop
xlat
sub
pop
mov
xor
enter
mov
cmc
aam
push
test
cmc
sahf
pop
add
shr
sub
jo
in
xchg
add
jge
cmp
dec
in
jmp
inc
pop
jg
mov
iret
push
xlat
mov
pop
xor
fcmovnbe
mov
cmp
cmp
or
stos
push
pop
jnp
fnstcw
cmp
mov
arpl
jb
inc
push
inc
pop
aas
clc
pop
mov
jbe
pop
fcoms
out
and
cmc
aam
and
movsb
push
stos
stos
pop
mov
cmp
pop
lods
ds
jp
imul
jg
icebp
inc
push
xor
dec
bound
xor
add
std
push
mov
adc
mov
stos
mov
pop
addl
repz
data16
fwait
imul
add
sub
stos
iret
or
inc
and
cmpsl
movb
daa
dec
push
xor
sbb
cmp
pop
or
jecxz
sub
xchg
and
mov
mov
aam
cmpsb
pop
sub
cld
and
fsts
mov
cmpsb
mov
jnp
es
mov
outsl
and
or
cs
sbb
stos
nop
jns
test
cmp
enter
mov
push
repnz
xchg
out
add
sbb
fldt
shlb
stos
dec
push
sub
mov
jne
pop
aas
cmp
rcl
mov
mov
xor
dec
in
add
mov
sbb
inc
gs
cmp
and
and
out
cwtl
mov
pop
dec
inc
add
lock
stos
dec
and
push
enter
loopne
or
mov
adc
inc
xchg
pop
popa
jo
stos
insl
aam
xchg
lods
call
mov
jbe
out
mov
pop
test
cmp
data16
inc
sub
add
repnz
out
lods
pop
mov
push
xor
mov
cmp
leave
sub
or
push
nop
nop
arpl
and
loopne
mov
add
rclw
mov
adc
mov
inc
push
fadd
out
scas
and
mov
fstpl
stos
pop
mov
pusha
out
push
xor
sub
sub
outsl
repnz
fadds
mov
dec
clc
push
mulb
mov
rorl
push
aam
push
mov
and
test
xor
jns
push
fidivrl
movsl
repnz
cli
push
push
mov
addr16
int3
movsl
inc
test
mov
cmp
call
adc
arpl
int3
sbb
fwait
pop
cmpsl
lock
mov
imul
ds
rcll
jmp
push
cs
lods
movsb
stos
rclb
loop
les
shll
in
push
mov
lods
mov
cmpb
pop
xchg
push
mov
mov
dec
jb
stos
dec
loop
xchg
sub
sbb
icebp
or
cld
pop
test
adc
inc
inc
sub
jb
push
in
out
pop
adc
mov
pop
movsl
push
fwait
shrb
loope
add
pop
mov
addr16
divl
cmp
lcall
add
pop
push
or
mov
or
nop
dec
mov
add
daa
lcall
stos
sub
adcl
or
sarb
push
push
and
fs
scas
xor
xchg
mov
aaa
sbb
fidivl
inc
and
sti
out
sbb
xchg
lea
jbe
lret
addps
ret
js
sbb
xor
push
push
cmc
stos
sbb
icebp
and
sbb
int3
mov
or
lret
cltd
test
stos
idivb
outsl
cltd
jb
fildll
sbb
push
or
push
fbstp
movsb
lret
and
outsb
xor
pop
dec
inc
pop
fildll
arpl
divb
dec
sub
add
stc
insl
jbe
rorl
cmc
enter
std
lahf
int
xchg
jmp
or
mov
loop
or
push
dec
or
jns
mov
into
jnp
push
aam
and
add
inc
les
pop
movsl
mov
mov
adc
mov
push
popa
imul
ret
sbbb
sti
or
xchg
sbbl
pop
mov
xor
sarb
or
add
aaa
add
popa
inc
mov
pop
fistps
les
mov
xchg
aam
or
or
cmp
xor
out
adc
gs
jmp
mov
push
or
pop
out
mov
mov
lock
int3
jg
jne
fistpl
insb
sbb
push
jb
lea
aad
pop
sbbl
andb
push
push
shrl
cmp
ffreep
hlt
jmp
push
jle
mov
inc
in
cmc
sub
daa
add
icebp
sub
sarl
lods
jbe
xor
jmp
sbb
sbbl
test
outsb
and
in
loop
jmp
mov
fistpll
xchg
out
xchg
and
mov
fidivrs
dec
adc
dec
jns
insl
jb
xor
dec
or
xor
or
and
jmp
add
add
ret
imul
pop
loop
inc
ljmp
and
xchg
sub
jnp
scas
mov
xchg
sbb
wbinvd
imul
mov
pop
popf
out
sub
shrl
shr
mov
fdivs
mov
cmpsb
sub
cltd
pop
xchg
sub
cs
test
aam
aaa
out
dec
push
ds
xchg
push
in
inc
dec
lock
scas
mov
sbb
inc
rolb
push
xor
sbb
data16
jecxz
movsb
in
shrb
lcall
pop
jp
xor
push
pop
xchg
mov
stos
shr
xchg
clc
test
push
or
lock
sbb
leave
push
cmpsb
fistl
imul
adc
inc
mov
push
mov
push
imul
dec
shrl
inc
pop
enter
addb
hlt
and
lds
ret
pop
addr16
push
mov
mov
stos
negb
add
push
adc
push
add
std
cld
add
pop
stos
pop
push
out
rcr
mov
imul
cmp
sbb
inc
jnp
push
mov
add
mov
jecxz
push
cwtl
gs
jo
jle
mov
cmp
ret
je
jle
shrl
shll
lods
fs
xor
in
cwtl
pop
sbbb
aas
cmp
jae
pop
js
adc
pop
or
int
sub
mov
repz
jmp
scas
insl
dec
sub
jbe
xor
in
pop
int3
and
ret
idivb
std
addl
lcall
cmp
add
inc
les
xor
faddl
sbb
decl
mov
lcall
test
pop
gs
adc
test
push
xchg
roll
setb
jb
das
jnp
into
push
jnp
jne
or
jp
stos
lods
loopne
cwtl
std
jge
stc
mov
push
xlat
push
cmpb
dec
mov
jno
ret
or
in
push
test
jl
ror
enter
jge
xor
mov
mov
and
xchg
test
inc
pop
xor
test
out
mov
mov
mov
xor
lods
sub
mov
cltd
dec
sti
shll
or
loopne
cmp
mov
flds
outsb
jb
shrl
jbe
pop
lea
sarb
jns
inc
mov
jecxz
jg
testl
pushf
dec
in
shlb
xor
jno
in
dec
out
jg
dec
cmp
mov
push
imul
int
jae
mov
dec
aaa
adc
inc
xor
pop
int
mov
sub
pusha
push
xor
mov
je
jg
inc
jmp
loope
push
adc
int3
outsb
pop
jns
xchg
test
sub
sbb
jmp
ficoms
add
or
ja
jg
aas
mov
or
pop
jnp
adc
mov
mov
dec
dec
loop,pt
jo
jne
cld
xor
mov
lahf
sahf
repz
mov
hlt
out
jnp
insl
pop
cmp
popf
mov
sbb
sub
push
sbb
outsb
fdivp
testl
outsb
ja
jp
in
xorb
pushf
cmp
inc
orb
cmp
cltd
and
subl
and
xlat
int3
insb
fmuls
outsl
std
arpl
in
jp
cld
cmp
adc
adc
dec
dec
iret
sub
or
xchg
mov
mov
dec
fwait
pushl
jae
or
sub
jne
scas
sub
enter
pop
pop
cmp
das
push
cmp
fdivs
mov
sub
dec
loope
scas
scas
mov
int3
mov
scas
pop
cmp
inc
push
jl
jbe
cmpb
xor
or
inc
and
lahf
lods
pop
les
addl
sub
push
loope
mov
pushl
cs
movsb
out
sub
loop
stc
std
and
loope
mov
loopne
lret
inc
into
jns
in
push
mov
sub
mov
pop
inc
les
and
xchg
mov
mov
call
jg
mov
and
sbb
mov
pop
pop
mov
cmp
inc
clc
xchg
sub
mov
iret
jge
push
rol
test
mov
sub
lock
add
mull
mov
les
cmp
jecxz
mull
push
cli
pop
mov
lock
dec
clc
lret
into
push
push
ljmp
adc
testb
jno
jnp
jle
test
adc
rcl
jmp
or
mov
aam
add
mov
mov
inc
repnz
sub
aam
test
add
jnp
inc
out
adc
xor
jns
fsts
mov
ret
aaa
and
loopne
or
icebp
popf
jo
mov
fcmovnb
ret
add
into
rol
xor
popf
in
mov
ds
jns
aad
push
pop
xchg
bound
ret
inc
mov
pushf
cmpb
and
repz
pop
xchg
insb
in
add
jge
dec
movsb
das
retw
lahf
sub
stos
std
lds
sub
push
cld
jns
out
subb
mov
shlb
dec
cltd
or
or
incl
mov
cmpsb
push
dec
push
mov
fldenv
add
scas
in
add
daa
xchg
mov
in
ficomps
fisubl
lock
mov
hlt
int3
mov
lods
or
andb
mov
inc
outsl
and
or
or
or
add
add
loopne
and
cmp
and
lods
inc
mov
in
repnz
sbb
mov
cmp
jns
push
lahf
ljmp
arpl
call
cld
ret
fadd
ljmp
enter
sahf
cmp
lods
mov
test
jnp
xchg
jmp
mov
loope
scas
add
leave
cmp
in
lea
ret
or
push
push
ret
push
rolb
cmp
lret
leave
mov
mov
cwtl
popf
jp
mov
mov
stos
shrl
incl
cmp
jns
ss
xor
mov
mov
mov
sbb
outsb
mov
mov
pushf
adc
lcall
stos
xchg
lahf
push
add
ret
cmpsb
bt
push
and
fistps
int
adc
xchg
outsl
lods
add
jp
lock
dec
xchg
or
out
fcoml
mov
lahf
pop
movsl
xor
stc
orb
pop
mov
cmp
repnz
je
or
pop
pop
scas
fwait
daa
test
sub
or
les
repnz
xor
sti
xchg
jnp
shl
repz
aad
shrl
je
into
jl
mov
mov
jns
mov
sub
sub
data16
sub
es
inc
push
dec
adc
pushf
adc
sti
jle
fmull
test
sbb
dec
jb
imul
jle
adc
jge
loope
inc
mov
ljmp
idiv
cwtl
jnp
adc
inc
inc
lds
test
das
outsb
hlt
sbb
add
jge
arpl
out
or
negl
arpl
shll
jnp
lea
lea
adc
lods
mov
mov
add
cmpsl
fnsave
mov
xor
adc
mov
push
inc
fisubrl
sahf
cmp
pop
adc
les
mov
test
jl
adc
pop
inc
movsl
repz
mov
dec
push
dec
xor
jo
sarb
cmp
mov
xlat
imul
pop
imul
imul
jno
dec
lret
call
test
mov
or
movsl
mov
fcompl
add
fwait
dec
inc
ret
push
mov
fstpl
and
stc
mov
inc
inc
in
rcrb
and
lahf
loopne
jle
mov
jp
xor
jne
pop
xchg
and
lock
jge
imul
xchg
cmc
mov
sub
sbb
push
gs
xorb
cld
lock
jle
adc
jo
adc
push
xchg
sbb
aaa
jp
mov
jmp
pop
aas
int
xor
pop
test
inc
in
dec
insl
ret
push
bndstx
bswap
rorb
push
adc
dec
push
lahf
xchg
push
cld
jl
inc
ret
pop
cmpl
sahf
test
adc
jns
push
mov
imul
add
sbb
adc
sub
test
add
push
test
sub
mov
out
mov
jo
mov
pop
dec
or
out
ret
bnd
in
cmp
sar
lea
popf
mov
stos
jo
fldcw
sub
dec
inc
stos
dec
xchg
mov
or
out
in
mov
imul
add
jns
sahf
xor
cmp
mov
imul
pop
mov
adc
aam
add
out
sbb
inc
mov
js
shl
sub
sbb
mov
xchg
filds
mov
add
mov
or
test
and
repnz
mov
pusha
std
xlat
ja
test
fmulp
push
jns
filds
xchg
push
loopne
fldenv
pop
dec
jne
add
adcb
or
add
das
dec
in
push
sarl
outsb
jae
xchg
xchg
cmp
sub
or
cmp
iret
mov
popf
adc
push
cs
fistps
out
or
clc
les
push
popa
add
xor
fucomp
push
fisttps
adcl
lret
pop
shlb
add
push
ljmp
cltd
out
ljmp
xlat
pop
xchg
jbe
clc
scas
jnp
xchg
shrb
adc
push
jge
inc
dec
in
loopne
mov
xchg
arpl
and
inc
push
cmp
sub
repz
mov
xchg
or
push
mov
mov
jge
inc
xor
aaa
inc
sbb
xchg
psrlw
jo
fisttpll
lret
lods
jne
cwtl
pop
sub
mov
inc
mov
ret
jne
mov
sub
loope
dec
inc
adc
fwait
adc
jo
lcall
adc
pushf
sub
jb
xchg
xlat
or
daa
rolb
in
mov
mov
je
and
repz
test
stos
mov
fiadds
sub
push
or
shr
mov
jle
mov
flds
fisubrl
push
pushf
cmpsl
sarl
ljmp
and
andl
and
inc
lock
daa
xor
subb
frstor
fidivs
pop
iret
sub
mov
fxch
and
inc
sbb
outsl
sahf
into
fs
cs
fadds
sub
jge
aam
bound
fimull
dec
cmc
sbb
dec
inc
mov
add
dec
push
mov
mov
xor
jno
pop
jl
mov
leave
adcb
cltd
ret
jo
or
push
incl
xorb
aam
sub
cltd
xchg
xor
adc
push
mov
jb
mov
push
push
adc
icebp
in
xchg
dec
movsl
imul
popf
mov
aaa
mov
dec
loope
xor
out
test
push
mov
pop
nop
sbb
push
sub
aas
xor
add
xlat
add
nop
insb
ret
xchg
xchg
es
and
jae
push
test
mov
ret
xor
inc
imul
movsl
movsl
std
sbb
xchg
inc
js
aas
outsl
jle
movsl
push
push
xchg
test
mov
lods
adc
xor
mov
jmp
popa
pushf
out
xlat
leave
sub
imul
adc
mov
pop
push
popa
gs
js
add
push
sbb
jl
push
movsl
out
add
out
add
push
pop
out
mov
andl
pmulhuw
add
fwait
and
xorl
pop
mov
mov
stos
test
int3
lret
out
stos
xor
iret
mov
cmpsl
inc
mov
and
mov
and
xchg
mov
xor
decl
xchg
ret
xor
test
lods
sbb
sub
in
inc
xor
aaa
push
into
test
lret
jns
and
stos
stos
push
jo
and
jl
out
les
pop
mov
inc
aaa
neg
enter
xchg
xor
dec
sbb
ja
adc
jge
sub
jle
or
gs
dec
jl
xchg
lahf
dec
shll
and
inc
sub
push
mov
jnp
xchg
imulb
fists
sbb
fwait
and
push
jnp
std
adcl
data16
loop
scas
or
jmp
imul
imulb
andl
mov
sub
out
mov
xchg
in
int
inc
ficompl
mov
or
sub
lods
add
mov
push
inc
fwait
stos
push
push
in
in
dec
adc
push
test
xor
cmpsl
mov
pop
mov
xlat
pop
clc
mov
mov
mov
adc
or
cli
pop
mov
dec
sar
cli
mov
out
push
roll
jnp
in
insb
sub
mov
sbb
rclb
test
push
jnp
int
stos
dec
subb
sbb
repz
rclb
js
rol
or
mov
scas
inc
lret
lods
mov
mov
iret
imul
cmp
sbb
ds
mov
adc
xor
in
mov
dec
into
cli
sbb
adc
icebp
adc
sub
dec
addr16
or
movsl
adc
shll
mov
lds
adcb
sub
mov
and
push
xor
sub
adc
pop
jb
push
sub
or
sbb
mov
das
lods
imul
pop
add
cmp
sahf
test
inc
xchg
pop
inc
jle
add
xorl
pop
jge
scas
inc
mov
int3
jge
cltd
mov
pop
fsts
dec
xchg
insl
xchg
or
sub
out
cmpsb
adc
std
fidivs
faddl
mov
add
into
inc
mov
aaa
lret
test
lods
scas
popf
lret
fs
sbb
enter
add
dec
icebp
xorb
out
push
or
in
xor
push
xchg
adc
cmp
lcall
push
inc
push
fmuls
mov
popa
inc
inc
fwait
outsl
push
shl
hlt
rcrl
dec
jl
mov
xor
and
add
fldl
sbb
xor
jp
movl
fistpl
fists
cmpsl
lahf
or
mov
push
xor
cmp
ljmp
push
mov
fisubrl
mov
popf
fnsave
insl
mov
xor
mov
sbb
cmp
add
out
movsb
into
je
xlat
js
pop
cmp
push
daa
jb
dec
bound
mov
fbld
pop
or
arpl
mov
fnsave
into
add
ret
xchg
pop
dec
movsb
aaa
lods
dec
call
xlat
push
aas
nop
xchg
cmpsb
jns
jmp
and
int3
icebp
fcomps
fwait
xor
inc
ja
push
jae
cmp
dec
xchg
pop
pop
pop
ljmp
dec
fxch
inc
ja
dec
and
inc
inc
pop
pop
shl
fistl
mov
lods
xlat
fwait
push
shlb
aam
inc
fcoms
cmp
out
jge
aas
xchg
ljmp
je
popa
jmp
xor
stos
clc
mov
inc
ss
cmp
das
pop
ja
in
or
sbb
mov
mov
dec
mov
std
xchg
mov
pop
bnd
pop
xchg
sarl
xchg
ljmp
arpl
sbb
sub
fwait
mov
mov
stos
aas
inc
pop
pop
andb
in
sub
xor
mov
ss
ffree
jo
dec
mov
or
sub
in
icebp
insb
pop
cmp
mov
cli
fwait
ss
fisubrs
lds
pusha
test
sub
mov
mov
iret
or
mov
and
add
pop
clc
mov
mov
mov
mov
xchg
sub
xchg
push
adc
outsb
imul
andl
mov
popf
xchg
or
orl
pop
ss
cmp
shll
or
leave
test
mov
or
mov
pop
sub
movsl
insl
and
lahf
xchg
jns
lods
mov
addr16
cmpsb
mov
xor
push
xchg
mov
cs
into
inc
pop
fs
xor
pop
push
mov
std
xlat
push
dec
xor
sbb
and
adc
inc
out
or
loopne
adc
push
rcr
or
fdivrl
lds
movsb
cmova
leave
jmp
adc
adc
push
movsl
add
jle
push
mov
lds
test
push
sarb
cltd
push
fldenv
adc
push
icebp
data16
jb
icebp
lcall
xor
aad
jp
lcall
adcb
adc
sarb
div
jb
push
icebp
movsl
inc
xchg
sbb
mov
and
mov
mov
add
cmpsb
or
fidivrl
rcrl
pop
cltd
cmpsb
xchg
pushf
test
lret
xchg
repz
push
cli
rcrl
popf
rcrb
sub
out
stc
xor
jecxz
fsubrs
sbb
pop
int
xchg
jmp
xor
aam
mov
shrb
or
dec
in
pop
out
sub
sub
dec
mov
inc
adc
xchg
pop
and
outsb
mov
popa
std
int3
dec
xchg
push
rol
push
cwtl
lahf
xor
adc
push
mov
or
jl
push
dec
sti
or
cmpsb
mov
fcmovu
inc
push
cmp
jmp
push
aaa
out
and
test
lahf
test
in
dec
lahf
scas
push
gs
orb
mov
adc
xor
aas
shlb
xchg
cwtl
lahf
push
push
and
jle
add
lock
mov
jmp
stos
push
xchg
or
sti
mov
test
sbb
push
fisubl
cmp
sbb
std
add
push
xchg
push
add
cmp
and
pop
ret
loop
xorb
movsl
and
mov
mov
and
inc
xchg
inc
loopne
mov
jge
popf
sbb
dec
sbbb
shlb
sub
stos
pop
mov
mov
mov
and
dec
or
dec
int
movsl
dec
add
mov
jnp
adc
ficoml
test
xchg
shll
push
cmpb
pop
sbb
sbb
pop
test
jge
out
adc
test
gs
sub
gs
and
mov
mov
stos
cli
jns
adc
mov
jne
testb
adc
int
loop
xchg
or
adc
pop
cmpsl
and
sarb
sbb
mov
imul
or
push
jecxz
mov
aas
pop
daa
xchg
xor
cmp
ja
cmp
push
sub
dec
push
test
mov
outsl
imul
sub
clc
pop
scas
jne
leave
into
rclb
add
scas
enter
popf
push
mov
and
sub
cmp
movsl
cmpb
cmp
mov
add
xchg
test
sub
aad
jle
lock
ljmp
jnp
pop
mov
mov
push
mov
inc
inc
jo
addr16
cld
shrb
jo
ss
push
cmp
outsl
cmc
xor
adc
xchg
mov
cmp
push
fs
icebp
rolb
cli
lcall
out
dec
dec
cli
or
mov
flds
and
cmc
pop
cmpsl
mov
cmp
loope
mov
shl
and
fs
jno
jecxz
lret
fadds
pop
and
pop
icebp
mov
cmc
pop
push
sub
inc
xor
push
shll
sub
in
or
push
mov
fldcw
or
mov
lcall
xor
hlt
lods
std
out
sbb
cmpsl
mov
lds
inc
jp
jg
xor
adc
sub
push
repz
mov
sti
mov
fsqrt
leave
insb
popf
or
pop
sub
test
sub
and
mov
daa
pop
int
add
daa
in
jno
pop
in
mov
ds
lret
pop
es
out
push
fdiv
sub
push
xorps
subb
sbb
push
adc
cmp
cwtl
push
xor
mov
and
daa
xchg
mov
cmp
sbb
lock
fadds
int3
lcall
arpl
push
inc
ds
jg
icebp
lret
mov
adc
push
iret
xchg
or
xchg
sahf
lret
or
mov
imul
iret
mov
and
pop
pop
test
mov
and
rol
add
lcall
push
in
addr16
push
aad
lret
cld
xchg
sarb
mov
or
es
outsl
cmpsl
push
inc
rcll
xlat
pop
pop
dec
jbe
int3
add
jle
stos
lds
xor
cltd
inc
mov
clc
gs
movsb
aad
in
popf
inc
je
sub
rorl
jnp
adc
fs
das
mov
sub
ja
or
js
cmp
or
pusha
repnz
push
cs
mov
cmp
imul
jo
fmuls
dec
shrl
sbb
repz
cmp
push
roll
dec
insb
daa
cld
add
fimuls
and
fistps
mov
popf
mov
int
or
mov
sbb
push
pop
sbb
push
nop
pushf
jl
xorb
xor
push
push
mov
in
adc
jnp
sub
mov
push
rorb
sub
xchg
mov
xor
in
jmp
pop
sbb
cwtl
jmp
dec
pop
addr16
fldl
sub
pop
inc
push
fwait
mov
push
les
std
jg
xor
loopne
notb
mov
xchg
xor
dec
xchg
dec
cmpsl
push
sub
jb
sub
or
dec
mov
fstps
in
jle
aam
stc
ret
pop
popa
fiadds
xorl
scas
adc
into
add
mov
outsb
ljmp
lret
push
pop
mov
inc
es
hlt
in
imul
inc
shl
ljmp
mov
xchg
outsb
jmp
hlt
mov
fs
int
movsb
jmp
add
adc
pop
addr16
mov
test
dec
adc
scas
ss
in
lods
sub
aam
ss
jmp
fcmovb
push
adc
enter
aad
sti
js
inc
mov
push
pop
arpl
push
mov
jmp
ljmp
sbb
xchg
cmp
cmp
roll
pop
mov
inc
les
mov
mov
inc
fidivs
push
daa
negl
ja
lea
pop
shlb
dec
pop
scas
dec
lret
stc
sub
repz
in
sbb
inc
scas
jb
and
out
pushf
sar
dec
out
loopne
inc
adc
hlt
xor
stos
test
xor
inc
add
das
pop
lret
push
push
ficoml
and
mov
push
fcompl
inc
in
mov
outsb
aaa
dec
push
sub
xor
in
mov
imul
xchg
pop
outsl
shrl
pop
xor
mov
fwait
pop
add
xchg
or
cmp
movsl
mov
aad
jnp
or
and
pop
cmp
ss
rcrl
push
cmpsl
or
movsb
xchg
in
push
js
std
add
mov
aad
sti
cmpsl
rolb
ret
jae
mov
and
cmp
filds
insb
adc
jmp
adc
sub
fwait
ss
dec
mov
xchg
adc
push
adc
clc
addr16
dec
jbe
fld
or
scas
jnp
fs
movb
sub
mov
test
lcall
push
jae
xor
daa
fistps
jnp
addr16
or
js
scas
sub
loopne
sbb
sbbb
lcall
incl
xchg
out
fwait
dec
flds
mov
test
mov
xchg
jecxz
ret
jge
arpl
andl
lahf
mov
sbb
jp
mov
ror
jno
push
scas
cmpsb
jno
out
push
es
adc
or
sub
xor
int3
pop
rolb
outsl
and
in
sarl
int3
sahf
xor
call
pop
jo
in
or
sahf
cld
sarl
repz
cmc
xchg
movsl
add
xchg
mov
and
cmp
lods
inc
shll
jg
int3
mov
test
popa
popf
pop
arpl
mov
cmp
fiaddl
jge
lret
out
adc
or
pop
stos
out
lahf
roll
fisubs
push
xchg
cli
rcrb
imul
cmp
movsb
mov
stos
gs
adc
xor
out
movsl
cmp
stc
decl
pop
loope
push
fndisi(8087
iret
iret
pop
inc
int3
fmull
stos
ds
out
sarb
fcmovne
andb
arpl
inc
hlt
add
mov
xlat
mov
jecxz
xor
and
gs
ret
pop
dec
push
in
add
int
xor
xchg
sub
sbb
mov
dec
rolb
push
das
mov
mov
mov
and
dec
lods
pushf
insb
rcrb
mov
xor
scas
push
jg,pn
gs
es
test
xchg
mov
xchg
es
mov
mov
in
loop
mov
cli
cs
ljmp
addr16
movsl
sbb
jmp
mov
xchg
jbe
fidivl
arpl
outsb
data16
fldl
jb
jb
and
iret
and
jne
fwait
rcl
xchg
mov
xchg
dec
lock
aas
dec
mov
scas
xchg
adc
mov
push
outsb
fisttps
cli
pop
jge
push
adcb
test
js
clc
cwtl
popa
xchg
fbld
cli
xor
fstps
gs
push
lds
pop
scas
pop
push
fadds
mov
mov
pushw
push
and
lds
xchg
xchg
popa
js
sub
adc
pop
arpl
mov
aaa
addr16
and
push
cmp
sub
std
and
sbb
aad
test
mov
popf
repnz
loopne
test
lret
lcall
pop
jb
or
mov
add
stos
mov
push
and
mov
insb
xor
adc
adc
test
add
cld
xlat
dec
jp
jge
sub
cmpsl
jmp
add
int
push
mov
sbb
imul
repnz
pop
cli
mov
iret
cli
mov
ljmp
nop
mov
lods
xor
mov
cmc
cmp
clc
inc
fstl
mov
cld
out
add
fdivl
sbb
in
fadds
fnstcw
adcl
nop
div
test
lret
dec
cld
dec
jns
ficoml
in
shlb
cmp
filds
xor
pop
das
mov
leave
and
dec
sbb
push
jg
sbb
xor
lock
sahf
outsl
inc
repz
push
lcall
aaa
cmp
mov
bound
fwait
push
pop
add
test
pop
ret
shll
add
pop
xchg
adc
mov
sahf
jmp
mov
fsubs
jne
popf
fsub
or
loope
out
test
and
icebp
lret
outsb
shlb
lret
mov
mov
ds
or
sahf
or
push
sbb
popa
int3
pause
inc
inc
sbb
cli
mov
and
popa
mov
inc
into
cli
sbb
cmpsb
add
mov
sub
mov
call
or
inc
jb
in
lret
out
das
xchg
clc
inc
dec
pop
addl
pop
aam
scas
dec
or
scas
mov
cli
add
adc
mov
sti
scas
jo
sahf
movsb
clc
add
push
fists
jl
mov
jmp
lahf
fcmove
sbb
xlat
popa
ja
mov
jb
testb
clc
xchg
fcomps
pop
sti
lds
outsb
cmpsb
mov
pop
cs
dec
fbstp
and
pop
and
dec
inc
pop
mov
dec
mov
nop
cmp
pushw
test
loopne
push
mov
rcrb
andb
mov
push
fidivrl
mov
sbb
push
hlt
sbb
dec
adc
mov
mov
out
ja
jp
sub
ficoms
int
sbb
add
cwtl
xchg
fstpt
jmp
sbb
arpl
arpl
add
pop
cmp
dec
cmp
xchg
test
out
outsl
mov
shrl
bound
lods
push
aaa
sub
movb
out
push
leave
mov
stos
cmp
sub
insb
mov
or
xchg
imul
mov
adc
mov
stc
popa
cltd
jge
xchg
out
cmpsl
arpl
loope
push
pop
lods
pop
pop
sbb
sbb
mov
xchg
stc
or
push
mov
sub
push
jbe
out
dec
outsl
jp
mov
add
pop
insb
cmp
sub
data16
mov
lods
sbb
mov
cmp
call
sbb
fsubrl
aaa
mov
imul
iret
ss
pop
mov
das
fists
dec
push
push
pushf
dec
inc
pop
mov
ret
call
fadd
fidivrl
mov
mov
pop
xor
hlt
push
push
hlt
push
adc
add
pop
pop
mov
xchg
outsl
mov
cmp
push
lahf
movsl
pusha
add
push
mov
xor
dec
jns
es
push
mov
inc
int3
stos
cmp
mov
lds
and
inc
jge
imul
lds
mov
xor
xor
aaa
push
nop
loopne
in
std
and
pushf
sub
int
cltd
test
sub
in
cmp
repz
iret
jp
pushf
add
pop
jbe
pop
subl
adc
stos
cli
outsl
out
into
mov
push
pushl
popa
cs
cwtl
jge
outsb
stos
ss
and
ds
xor
in
lahf
or
mov
rorl
sti
shl
inc
pop
mov
sub
into
fldl
mov
adc
and
fidivs
sbb
cmp
dec
or
out
pop
mov
push
cmp
mov
mov
je
cs
and
insb
xor
push
pop
inc
popf
xchg
out
mov
cmp
popa
jge
enter
sub
push
fcoml
pop
xchg
std
adc
les
mov
cmp
mov
mov
or
hlt
fs
movsl
ret
adc
int3
ljmp
jb
sarl
mov
mov
jmp
rolb
shrl
enter
mov
fsubl
shll
inc
test
mov
lret
jae
sbb
scas
outsb
outsb
xor
lods
stos
inc
out
push
mov
pop
insb
pop
sub
dec
in
lea
push
mov
mov
repnz
mov
xor
push
icebp
push
int3
nop
insb
test
scas
repz
call
inc
mov
pop
call
mov
nop
scas
cli
iret
or
mov
es
pop
adc
dec
push
icebp
adc
mov
inc
dec
fadds
jmp
fisttps
jb
lret
bswap
jge
clc
mov
andl
loopne
sub
jge
rorl
lock
aas
mov
mov
pop
xchg
or
jae
or
out
mov
mov
es
fstpt
lea
rolb
sti
pop
xchg
fdiv
mov
push
and
jbe
lods
pop
inc
mov
mov
pusha
adc
xchg
sbb
stc
arpl
pop
and
add
pop
mov
aas
mov
sub
sub
cmp
shrb
or
xchg
sub
jo
inc
cmp
dec
push
enter
dec
test
lahf
lods
fcmovu
cmp
cmpsb
dec
hlt
aad
xchg
leave
mov
fadds
leave
add
lret
subb
incb
fwait
or
jno
es
mov
int
hlt
mov
movsl
sahf
pusha
cwtl
mov
pop
pop
push
movsl
addr16
out
cmp
les
sub
enter
dec
int
jno
adc
xor
xchg
leave
adc
out
lods
add
enter
pop
clc
imul
repz
dec
jns
outsl
adc
inc
jl
mov
jge
jmp
push
cld
fnstenv
fmuls
fdivrs
dec
dec
xchg
pop
xorl
sub
cmp
fcmovnb
jmp
and
daa
jae
insb
xchg
popf
adc
jp
mov
sbb
jbe
or
ds
cltd
insl
inc
idivb
movsl
add
andb
push
subl
cmpsb
mov
push
test
jecxz
dec
fldl
icebp
pop
js
mov
push
mov
xchg
xchg
aad
mov
movsb
push
mov
mov
scas
push
sbb
mov
mov
add
and
imul
cld
and
ror
or
jle
cwtl
mov
mov
js
jno
js
xchg
lods
cld
jmp
nop
mov
popf
cwtl
sahf
xchg
out
movsb
sub
jge
mov
loopne
lret
out
into
stos
lds
out
movsl
xchg
les
outsb
fstpt
adc
adc
cmp
mov
jmp
or
adc
pop
clc
gs
sub
cwtl
ret
dec
push
arpl
sahf
lods
fstpl
arpl
sub
sbb
mov
mov
ret
lds
out
fs
lods
loop
out
add
out
cmp
jb
sub
inc
in
test
dec
cltd
scas
or
loop
inc
mov
mov
sub
jo
mov
lcall
mov
dec
mov
jp
test
xchg
lea
push
andb
test
pop
outsb
fs
jge
or
mov
xchg
subb
test
cmp
aas
jp
xor
jnp
out
aam
stos
stos
cmp
movsb
jne
add
cld
mov
mov
stos
jno
iret
and
ljmp
sub
xchg
icebp
test
hlt
fsub
ficompl
test
pop
xor
idivl
mov
push
or
inc
iret
inc
and
mov
int
sbb
mov
inc
and
xchg
or
lcall
sahf
repz
adc
cmp
inc
imul
rorb
push
inc
ret
add
pop
mov
cltd
sub
or
sub
popa
adc
sub
jns
mov
fucomi
fistl
out
fdiv
aas
cmp
push
push
andb
imul
mov
lods
ds
andb
cmpsl
nop
out
divb
sbb
lret
lea
insl
dec
sub
pop
ja
pop
mov
popf
and
clc
daa
fists
mov
xchg
mov
xor
jne
push
dec
leave
inc
inc
cmp
cld
push
stos
mov
mov
mov
insb
or
mov
cmp
sub
rorb
mov
pusha
std
and
fstpt
cmp
aaa
add
inc
scas
cmpb
inc
adc
test
inc
inc
jae
movsl
repz
cmp
xor
cmp
fucomip
ltr
stos
mov
ret
push
sbb
into
pop
and
addl
rorl
pop
cmp
push
in
jnp
adc
mov
mov
stos
sub
pushf
mov
xlat
jge
sti
jb
imul
sub
inc
cmp
cmpsl
cs
jl
leave
push
popa
push
push
fsubs
sbb
cs
decb
fdivl
jbe
lods
mov
push
xchg
add
popa
aam
mov
fldt
mov
repnz
in
or
lret
mov
xchg
mov
and
rcll
xor
lret
repnz
mov
repnz
cmp
call
jecxz
loop
pop
shlb
sub
mov
in
pop
or
jne
inc
xchg
add
test
scas
cmp
xchg
imul
pop
mov
xor
mov
sarb
loope
outsb
xlat
sbb
and
or
in
fcompl
mov
cmp
jecxz
xchg
xchg
cwtl
inc
inc
sti
orb
inc
mov
pop
shlb
cmpsb
cmp
and
enter
jno
sub
xchg
pop
popa
xchg
or
push
ljmp
das
xor
mov
nop
shl
xor
addr16
mov
les
cmp
add
not
or
push
daa
push
outsb
jecxz
daa
push
pop
arpl
xor
mov
mov
gs
out
mov
cmp
call
int3
enter
push
jmp
push
call
push
femms
add
arpl
fadds
inc
inc
or
les
mov
pop
xor
aas
push
push
xchg
mov
mov
dec
mov
out
and
mov
das
sti
sub
sub
mov
gs
push
xlat
scas
fsubl
jo
push
push
jns
pop
negb
lret
add
sbb
movsl
mov
fs
dec
jmp
and
sub
pop
hlt
cmc
cli
push
fsubl
fs
mov
js,pt
pop
popf
push
js
push
ja
xor
sahf
cmp
frstor
mov
inc
mov
push
mov
stc
mov
adc
jb
lea
adc
and
stos
loop
push
decl
mov
std
adc
jbe
or
fnstcw
jb
cmc
cmpsb
dec
adc
and
rcll
rcrl
cmp
add
mov
cmpsb
pop
into
or
mov
test
push
bnd
xor
dec
dec
je
mov
xor
xorl
divb
outsl
jb
insl
xchg
xor
push
mov
pop
adc
fstpt
nop
jmp
xor
notl
adc
popf
push
out
dec
in
jge
inc
sti
dec
sahf
stos
xchg
xor
cld
add
int3
pop
aaa
hlt
pcmpeqw
and
les
cmp
rcrb
stos
dec
fcoms
test
jle
shl
jae
lcall
inc
inc
xor
cmp
sub
jno
lahf
sti
orl
push
rorb
loope
test
pop
insl
lods
rcl
pushf
gs
cmpsl
int3
negl
pusha
jbe
xor
sub
popa
negb
lahf
pop
mov
idivl
loopne
dec
pop
lea
repz
mov
mov
cmp
insl
adc
in
fdiv
dec
xor
adc
inc
cmp
push
icebp
outsb
lahf
mov
add
pop
nop
adc
dec
dec
adc
sbb
or
gs
mov
cmpl
add
pop
add
push
jp
ficompl
je
sbb
add
int3
shlb
cwtl
rcrl
sub
stos
js
cmp
daa
insb
pop
push
or
jbe
mov
add
or
cwtl
push
ja
lods
fildl
test
fldcw
test
mov
add
inc
or
sbb
leave
fcmovu
dec
dec
outsb
movsb
sub
js
loop
mov
testb
adc
adc
lea
lret
mov
add
jae
sub
mov
and
mov
push
test
xchg
fistl
sub
xlat
sahf
sahf
mov
into
mov
xor
adc
mov
jns
adc
and
mov
pop
enter
pop
dec
popa
ljmp
xchg
pop
shrb
out
lea
inc
cmpsl
inc
pop
xor
jl
test
sarb
xchg
mov
xchg
sbb
add
cltd
out
lret
mov
xchg
mov
mov
adc
inc
xchg
add
push
mov
adc
pop
dec
and
add
mov
gs
imul
fsts
icebp
lods
mov
call
test
pop
push
xor
adc
push
dec
inc
into
dec
mov
scas
sbb
aas
inc
ja
sbb
cmpsb
in
jle
jmp
and
mov
mov
fs
pusha
js
ds
sub
roll
movsb
iret
sbb
popf
out
jo
out
pop
and
jmp
xor
movsl
loopne
xchg
push
gs
cmp
cmp
dec
mov
sub
xor
xchg
or
loope
test
inc
jle
mov
or
test
movsl
xchg
movsb
cmp
xor
gs
stos
negl
pop
das
xchg
pop
gs
nop
push
cmp
push
andl
mov
sbb
cmp
test
jg
addl
aas
orl
inc
loopne
adc
in
mov
leave
mov
mov
mov
jmp
jmp
nop
out
or
add
jl
mov
pop
inc
xor
pop
inc
push
cmp
outsb
xchg
mov
pop
nop
dec
ds
push
xchg
push
enter
jbe
jnp
cmp
jb
cmp
aad
sbb
jg
addr16
loope
mov
mov
sbb
jle
andb
dec
adc
mov
push
jmp
add
jg
cmp
outsb
mov
push
jbe
lods
into
stos
pop
jmp
in
or
pop
push
fdivr
ja
xor
nop
std
xorb
mov
insb
das
adc
inc
xlat
jmp
push
lods
stos
cmp
ljmp
mov
push
lahf
sti
aad
pop
xor
lret
pop
mov
mov
push
adc
in
mov
xchg
push
roll
ficompl
bnd
shll
pop
jmp
fnstcw
enter
inc
mov
lea
mov
add
into
test
jno
adc
add
enter
aam
pop
mov
dec
or
jbe
xor
int3
push
adc
ret
sbb
cmp
and
in
pop
push
push
inc
sub
notb
mov
mov
xlat
xchg
add
xchg
lds
cwtl
test
cmp
push
sub
scas
lret
movsb
xor
stc
popa
mov
add
adc
cmp
loop
gs
clc
sarb
lds
es
stos
push
dec
out
inc
adc
cld
push
push
and
subb
lahf
push
add
add
cltd
imul
ja
xlat
xchg
cmp
out
lahf
pop
pop
push
inc
repnz
add
test
rcrb
inc
dec
test
rcrb
pushf
xor
lea
addr16
push
xor
and
mov
jb
inc
push
fnstcw
rcll
nop
shrl
dec
and
pop
mov
in
dec
xchg
or
xor
clc
adc
out
mov
xchg
jge
js
sbb
mov
sub
out
jbe
and
push
ja
or
hlt
js
leave
push
inc
add
cmc
mull
mov
into
mov
or
mov
cmp
mov
lret
ret
icebp
xor
mov
data16
cltd
inc
idiv
inc
in
pop
ja
cmc
sub
pop
loop
mov
imul
mov
lods
in
inc
lds
fwait
inc
ret
or
movsl
or
and
pop
fidivl
pop
ret
popa
jg
mov
sti
cmpsb
aas
mov
sbb
pop
xor
cmp
dec
mov
dec
mov
jno
pop
ficoms
ja
cmp
mov
sarb
xor
jne
testl
inc
repz
sti
in
ja
repz
lcall
pop
outsl
xchg
jne
lret
jge
cltd
jecxz
cmp
stos
lcall
insb
pop
into
insl
sbb
push
aad
jle
inc
add
or
jns
jae
adc
push
popf
ret
clc
mov
xor
jae
jno
lds
pushf
and
push
lock
fwait
jns
mov
jno
mov
faddl
pusha
fistpll
or
jae
clc
cmpsb
mov
xor
xor
dec
lret
fstps
jae
call
xchg
cwtl
ss
mov
ja
add
and
push
push
shll
js
stc
add
rorb
xor
lahf
les
jae
mov
sbb
push
cmp
jbe
adc
sahf
pop
mov
sarl
shrl
loopne
pushf
add
jnp
int
xchg
xlat
mov
les
adc
add
pop
jge
stos
outsl
add
sbb
ja
mov
push
and
mov
mov
flds
pushf
add
push
jmp
iret
xor
das
imul
ds
pop
or
cmpsl
fsubl
push
cmp
xlat
outsb
add
add
popf
mov
xchg
insl
sbb
push
mov
push
fstpl
sub
mov
add
add
push
in
push
add
adc
dec
out
int
jp
rorl
cli
dec
pusha
push
pop
popa
insl
stos
xor
daa
push
lock
dec
jecxz
test
ja
stc
dec
push
xchg
mov
fdivrs
sbb
jp
lret
jo
push
cmp
lods
imulb
jp
sub
jmp
mov
cwtl
add
ret
inc
push
hlt
std
flds
mov
test
jb
cs
aaa
mov
dec
push
roll
test
mov
out
sub
sbb
call
sarl
stos
dec
cs
push
stos
add
js
data16
fwait
loop
mov
cs
add
fmul
jmp
sbb
or
sti
fdivrl
jp
mov
mov
cmp
insb
adc
add
loope
sarl
xlat
outsl
imul
stc
push
clc
push
div
or
mov
push
out
fs
dec
fldenv
insl
popa
int
cmpsl
inc
sahf
jle
clc
inc
int
adc
int
je
pop
pushf
jmp
in
or
lea
jle
cmpsl
popf
push
mov
out
inc
lods
cmp
imul
cmp
add
pop
add
mov
jnp
cli
push
sarl
push
xor
repnz
sahf
adc
ljmp
sbb
jbe
adc
mov
sub
add
andb
lock
fmul
mov
jle
inc
dec
xchg
pop
sub
ja
and
sub
add
ss
lods
jmp
push
sahf
or
cmpb
pop
mov
outsl
adc
cmp
rcr
lock
push
mul
sub
jle
add
push
mov
sub
mov
movsb
mov
stos
movsb
xchg
push
inc
das
cmp
pop
jb
in
mov
aas
cmc
mov
loope
or
pop
xor
iret
rcl
lds
push
test
jno
lret
imul
repnz
pop
xor
and
cli
lods
cwtl
ret
push
out
repz
test
in
sbb
movsb
loopne
icebp
jnp
and
mov
fadd
in
mov
mov
orl
mov
and
std
jne
lock
xor
mov
push
cli
mov
jmp
dec
repnz
cmpsb
xor
cmp
push
xor
pop
in
mov
cmp
inc
insl
je
jne
shll
xor
or
outsb
stos
push
ds
pop
cmp
or
out
or
dec
lock
and
loope
mov
pusha
jo
mov
popa
out
add
and
pop
insb
mov
leave
pop
or
lcall
das
cwtl
lret
xchg
inc
mov
and
and
pop
rolb
mov
lahf
pop
push
mov
xchg
push
aad
push
pusha
rcll
aas
mov
jnp
mov
push
push
mov
aad
push
data16
in
ds
xor
sub
in
outsb
out
or
inc
loopne
dec
fidivs
insb
adc
cmp
es
es
xor
mov
push
xor
or
fsubr
and
mov
dec
mov
andl
add
test
jno
push
or
or
jne
lods
repnz
xchg
aad
sbb
and
js
lcall
int
inc
and
and
cmp
or
cltd
outsb
mov
bound
div
pop
pop
js
mov
cmp
xchg
pop
add
out
and
mov
xchg
add
inc
outsl
adc
fs
dec
push
or
cmpsb
arpl
sub
into
daa
lcall
jbe
inc
stos
inc
aas
ficoml
fldl
jl
les
xchg
or
int3
and
sub
out
and
pop
cmpsb
mov
outsb
mov
sbb
imul
cwtl
sbb
in
into
jp
mov
int3
fadds
xchg
and
add
cmpsl
push
pusha
mov
xor
iret
inc
lret
les
xchg
andl
push
cmpsb
add
out
aam
mov
dec
cmp
mov
xchg
cmp
push
xlat
lods
add
sub
mov
js
sbb
rolb
aaa
out
inc
rcrb
cmp
fwait
rcpps
mov
sbb
mov
pop
cmp
icebp
jnp
iret
pop
ds
or
nop
fstps
insl
sub
push
test
sbb
inc
jp
divb
fdivl
test
cmc
nop
cwtl
add
push
repnz
cmp
dec
lcall
mov
add
fwait
xchg
jae
pushf
int3
cmp
adc
sarl
fwait
cmpsb
cli
arpl
mov
divb
mov
and
stos
or
imul
push
dec
xchg
pushf
jmp
pop
jmp
sub
add
mov
xor
scas
adc
frstor
test
jns
cltd
xchg
pushf
arpl
mov
movsl
lret
in
aad
inc
and
std
adc
xchg
and
inc
lret
mov
stos
mov
cmp
and
xchg
jb
stos
clc
addr16
jne
jno
imul
fsubl
imul
push
gs
jmp
sbb
iret
out
int3
idivl
xor
adc
aas
loop
or
aam
iret
cli
mov
ficompl
mov
mov
lock
mov
std
repz
or
loop
sub
rol
loope
xchg
test
mov
call
cmp
xor
pop
in
dec
ds
rcr
jb
outsb
mov
xchg
add
dec
adc
mov
je
push
pop
or
cmc
inc
in
inc
xchg
jge
test
pop
jecxz
push
icebp
or
ret
xchg
aaa
stc
cmp
fwait
cld
sti
jp
mov
xchg
repz
xchg
xor
dec
cmpsb
push
pop
clc
and
mov
in
negl
fidivs
jl
lret
push
xchg
into
loope
jecxz
mov
sbb
dec
add
pop
adc
movsl
popa
jae
push
cmp
call
jp
push
test
aam
mov
jecxz
int
nop
sbb
movsl
lret
les
inc
pop
add
and
popa
outsb
in
inc
imul
sbbl
lahf
sbb
jo
aas
pop
cltd
jle
xor
jmp
in
pusha
pop
in
ret
jae
adc
adc
iret
nop
cmp
cmp
push
mov
fistps
adc
or
mov
push
insb
cltd
jne
ret
mov
pop
xchg
xor
dec
insb
adc
in
outsb
jnp
add
mov
je
sub
and
and
out
sbb
jo
jge
xchg
and
and
outsb
mov
nop
jno
mov
scas
out
xchg
sbb
test
add
imul
pusha
push
mov
jbe
movsl
adc
ds
popa
mov
jmp
inc
sbb
mov
out
push
cmp
aam
jae
inc
clc
je
sbb
adc
mov
xchg
and
cmp
jnp
mov
insb
sbb
lock
add
fdivp
ret
in
pop
popa
push
in
mov
mov
frstor
pop
cmpsl
divb
jns
stos
insb
xor
popa
xor
push
mov
xchg
aaa
stc
int3
xchg
sbb
fwait
pop
jecxz
in
dec
adc
sbb
sbb
dec
xor
cmp
mov
push
lret
mov
lea
mov
jne
fiaddl
pop
and
sub
jb
xchg
mov
popa
and
pop
insb
push
mov
mov
call
jge
addr16
xchg
cmp
xchg
xor
push
mov
mov
push
shll
es
ja
sub
pop
adc
movsl
sahf
dec
lcall
jecxz
xor
and
mov
jb
or
push
ljmp
roll
push
das
pop
cmp
add
jg
inc
xchg
daa
arpl
xchg
fstpt
icebp
stos
into
mov
push
rorl
fmuls
xor
cmp
or
ss
sti
mov
or
and
out
adc
sbb
sub
mov
imul
fistps
push
dec
cmpsl
jmp
jle
xor
sbb
or
jp
stos
or
pop
push
movsb
xor
xorb
mov
lock
push
mov
ss
mov
xor
in
inc
jp
push
int
pop
rcrl
mov
scas
fs
fistps
lods
aas
bnd
cmp
cwtl
dec
outsl
ror
xlat
pop
mov
arpl
or
xchg
jb
fiadds
xchg
adc
push
and
adc
and
fisttps
popf
stos
xchg
cmpsb
xchg
pop
std
jle
stc
lods
in
sahf
mov
and
mov
js
repz
aaa
je
sbb
xlat
addr16
hlt
mov
xchg
das
arpl
test
pop
pop
hlt
mov
shl
shlb
sbb
xchg
sbb
mov
sahf
scas
pop
add
subb
icebp
jno
popf
add
jbe
jae
xor
inc
xor
outsb
das
faddl
jne
aas
pushl
lods
nop
imul
mov
adc
or
jno
out
ret
inc
mov
pop
sti
ffreep
leave
inc
test
or
and
outsl
pop
bound
and
add
push
and
sub
sub
mov
cltd
push
enter
jne
call
pop
mov
sahf
clc
pop
or
adc
dec
or
cmp
cmp
rclb
cmpsb
pmulhw
cmpsl
pop
ret
inc
aam
push
pavgw
mov
sub
mov
sbb
cs
cmovl
cli
mov
ret
push
pop
pop
dec
in
mov
ret
pop
xchg
add
xchg
push
in
inc
in
push
aad
pop
cwtl
test
int3
fcoml
pushf
je
push
out
fisttpll
xchg
pavgb
xlat
cmc
add
cmp
pop
fistps
shl
loopne
inc
cmp
jg
nop
or
or
inc
or
stos
fsubl
add
imul
hlt
std
cmpsl
lcall
mov
ficoml
inc
pop
sbb
lds
jb
addr16
adc
jbe
xchg
xor
jge
push
sbb
mov
adc
jecxz
pushf
aad
test
dec
mov
lret
pop
test
jle
sti
ret
es
jns
rolb
mov
clc
imul
inc
iret
cli
aam
mov
push
pop
pop
push
or
test
filds
das
jmp
aad
jmp
addb
je
outsb
repz
das
adc
jg
daa
xor
lcall
fistl
fcomps
out
mov
dec
bound
test
sub
cmp
or
cs
lret
sub
dec
jb
jne
xchg
call
rcrb
lahf
xchg
outsb
cltd
jno
push
add
pop
pop
loop
push
mov
lods
adcb
sub
xchg
xchg
stos
test
dec
cltd
adc
lock
mov
cmpsl
sbbb
push
mov
rcrl
or
gs
xor
mov
pop
dec
lock
push
popa
push
mov
imul
or
jg
adc
divl
jne
les
loope
das
cmp
push
cmp
mov
inc
cmp
sbbl
popl
pop
call
rep
sub
inc
dec
subl
dec
inc
jnp
inc
lahf
pushf
ret
sub
push
sub
imul
pop
xchg
and
pop
hlt
cwtl
mov
dec
push
inc
sub
lods
out
lahf
mov
divb
xchg
movsb
int
add
inc
lods
pop
mov
adc
repz
ret
push
mov
sub
push
loopne
test
mov
frstor
add
iret
jno
push
and
and
xchg
fisttpl
add
ljmp
jb
popf
push
repnz
push
or
enter
sub
sbb
mov
push
out
xor
dec
enter
cmp
iret
add
mov
insl
aad
pop
push
shlb
xchg
push
sbb
cmp
sahf
inc
add
pushf
rol
popa
loop
movsb
xor
lahf
jmp
jae
dec
mov
jbe
jae
outsl
int
sub
sub
dec
mov
sete
mov
je
xor
and
xor
or
cli
pushf
xchg
ljmp
adc
aad
dec
lock
imul
jns
xor
test
cmpsb
dec
xor
rcrb
xchg
ds
gs
test
mov
pop
testl
in
mov
pusha
adc
sti
shlb
dec
lret
sbb
push
fnstsw
and
shl
dec
push
or
les
mov
shrl
int
je
inc
jp
jae
out
out
inc
cli
loope
int
insb
addr16
inc
jp
hlt
or
data16
inc
sbb
sarb
jns
hlt
jno
int3
xchg
mov
movsl
xchg
out
sbb
add
dec
lret
imul
clc
in
lock
out
sahf
rorb
mov
xchg
mov
test
lods
testb
bnd
mov
test
and
pop
ret
cmp
push
pop
xor
mov
and
ljmp
fisubs
xchg
mov
aad
mov
sub
xchg
lods
push
lods
ret
test
mov
or
pop
mov
xchg
scas
jge
imul
popf
dec
xchg
jmp
xchg
dec
adc
pushf
movsb
mov
mov
loop
add
and
js
push
mov
jmp
pop
test
popf
add
jns
ds
lock
cmpsl
aam
cmpsl
inc
cmp
daa
fistpl
and
gs
mov
add
out
in
adc
and
pop
sbb
jnp
inc
aad
pusha
mov
cli
enter
sub
nop
jle
sbbb
cmp
in
pop
popf
enter
push
out
bound
les
fildl
sbb
cmp
arpl
test
inc
xchg
imul
test
adc
mov
loopne
sbb
and
jns
cmp
in
dec
insb
dec
fmuls
lea
decl
and
ret
or
rcrl
xor
jl
pop
and
out
in
out
mov
dec
data16
push
and
inc
sbb
xor
mov
adc
and
out
adc
pop
sub
mov
or
and
add
stc
and
ja
insl
xchg
bnd
test
in
js
dec
and
sub
shrl
jbe
stos
jp
mov
lahf
dec
shrb
inc
jo
pop
sti
sub
nop
lea
mov
sbb
push
loop
testl
pusha
shlb
mov
or
sub
jge
sbb
sub
loope
pop
xor
xor
sbbl
inc
dec
jbe
sbb
std
mov
inc
icebp
shlb
fisttps
and
inc
inc
mov
push
lds
leave
loop
cmp
mov
pop
add
je
pop
pop
mov
aad
mov
and
jmp
dec
or
iret
repz
sub
pop
lret
or
mov
jle
xchg
ret
mov
fdivl
adc
jae
mov
shll
mov
mov
add
in
lret
inc
xchg
dec
push
adc
flds
sub
lret
in
adc
inc
jl
hlt
mov
sub
jno
sub
push
pop
adc
mov
int
inc
rcrl
mov
fstpt
ret
mov
sbb
das
sub
pop
enter
mov
adc
mov
idiv
aad
cld
add
ds
mov
insb
dec
repnz
adcb
jno
jl
pop
fistl
addr16
cmp
push
int
mov
insl
aaa
ret
jl
es
pop
notb
xchg
sti
jae
adc
sti
fistl
cmp
cld
imul
push
pop
aad
addr16
loop
cwtl
in
jno
jg
add
cmp
dec
insl
or
jmp
sti
out
insb
ss
clc
stos
push
std
pop
lea
js
sbb
hlt
add
mov
sbb
shlb
mov
xchg
out
mov
fsts
outsl
out
std
mov
sbb
decl
ret
sub
jno
lcall
in
cmp
test
add
cmp
push
add
xchg
in
mov
sbb
test
test
sub
into
dec
clc
adc
cltd
rol
fld
inc
loope
pop
lcall
bound
mov
cmp
scas
cmc
fs
sbb
mov
mov
mov
sub
jae
enter
push
lret
push
mov
dec
mov
fldenv
jne
shll
lods
xchg
imul
test
stos
pushf
dec
sbb
leave
fimuls
push
xchg
incl
stc
or
enter
rclb
addr16
ret
idivb
dec
int
gs
lret
lods
jo
xchg
lret
pop
ret
pop
daa
pop
getsec
push
orb
test
subl
mov
scas
call
and
cwtl
stos
faddp
nop
orl
jl
dec
mov
mov
push
lret
cmp
adcb
out
inc
retw
xor
aas
stos
pop
adcb
inc
cmp
pushf
inc
mov
xor
outsl
arpl
cltd
roll
xchg
push
xchg
test
and
adc
xor
jmp
push
daa
ds
add
out
dec
xchg
mov
mov
cld
test
pop
int
lret
pop
outsb
sub
lret
rcrl
addb
stos
cmp
mov
mov
jecxz
and
push
ss
mov
fbstp
mov
ret
das
adcl
jmp
cmp
in
xchg
fidivl
mov
push
fisubs
mov
ljmp
dec
into
loopne
xchg
mov
and
les
aaa
out
jb
xchg
mov
out
and
sbb
shrl
adc
mov
fnstsw
lret
inc
in
int
push
imul
xor
push
out
xchg
dec
or
jle
push
jmp
xchg
call
inc
bound
call
rcrb
cmpsb
dec
jp
dec
movsb
dec
inc
adc
xchg
fistps
mov
xlat
out
cwtl
jbe
aad
rcrl
mov
pop
roll
cli
mov
mov
out
mov
rcr
divb
xchg
popa
sahf
popf
les
jbe
or
xchg
mov
dec
cmp
fcomip
jae
and
lret
sub
pop
lods
jp
test
addr16
xlat
mov
cmpsb
divl
mov
adc
mov
inc
and
test
aaa
dec
sub
les
adc
pop
cltd
repz
sti
insl
mov
and
pop
inc
fnsave
adc
xor
push
cmp
pushf
xor
data16
enter
add
fstpt
ret
test
shl
and
xlat
daa
jle
jle
lcall
mov
inc
sub
jecxz
scas
or
jmp
xchg
stos
std
test
arpl
int
mov
jge
ds
pushf
jne
cmp
outsb
std
out
loopne
mov
sbb
insb
mov
stos
mov
lahf
dec
int3
pushl
cmp
into
pop
nop
imull
jle
sbb
mov
cmpl
or
into
fiaddl
lods
and
js
sbb
push
xchg
rcll
lock
pop
xor
lods
push
or
movsl
or
pusha
subb
push
iret
popf
stos
mov
repnz
inc
cmc
mov
aam
cmp
or
mov
cmp
pop
jmp
and
test
adc
jns
repz
mull
push
inc
aaa
sbb
xor
cmpsl
jl
in
push
adc
cmp
mov
jge
sbb
xlat
imul
and
rcrb
xchg
push
aam
push
and
dec
pop
xchg
sti
popf
repz
scas
in
iret
subl
jg
loopne
sub
stos
lret
in
stos
negb
movsb
push
xor
fildll
out
je
addl
dec
decb
loope
les
lods
addr16
mov
loop
xor
mov
fwait
ret
and
and
imul
adc
xor
insl
cld
sti
mov
inc
scas
cmp
jmp
lea
and
call
int3
int
pop
call
mov
into
sub
scas
mov
scas
mov
lcall
fldt
push
das
mov
push
shrl
mov
dec
push
popf
dec
sbb
loope
fcmovnbe
cmpsl
leave
mov
and
aaa
subl
jl
icebp
sub
je
ss
mov
adc
cmp
popa
cmp
mov
pop
int3
sbb
dec
out
cmp
in
xchg
inc
pop
aaa
lahf
xchg
or
fcoml
es
xor
hlt
test
cmp
nop
fisttpl
xor
out
cmpsb
in
mov
pop
xor
sbb
in
outsl
leave
fidivs
mov
shlb
mov
sahf
andps
mov
inc
gs
xchg
mov
or
pop
xor
pop
cmpsl
jecxz
sbb
or
lahf
xchg
push
lcall
cld
cmp
rcrb
pop
adc
jae
imul
aad
sbb
jmp
clc
mov
nop
cmpsl
jns
loope
inc
push
jns
scas
jp
mov
mov
imulb
ja
cmpsl
sbb
negb
call
lahf
jae
mov
or
inc
in
imul
ss
sbb
xchg
jb
in
pop
push
aas
and
jbe
and
subb
dec
pusha
or
sbb
fsts
in
mov
aam
outsb
mov
jle
push
ja
sub
push
punpckhbw
call
ret
movsb
mov
cmpsl
inc
fwait
cmc
ja
pop
jb
out
fstpt
cmpsb
mov
jne
int
daa
pop
call
jg
cmpsb
and
fdivs
xchg
movsl
sub
imul
inc
dec
dec
add
adc
clc
add
adc
sub
or
inc
loopne
jae
aam
xor
cmp
daa
adc
negb
imul
pusha
add
lcall
ret
push
fildll
ljmp
cmp
bt
jo
test
sub
mov
pop
mov
cld
loop
or
sub
sub
jle
jno
out
leave
inc
cltd
adc
push
pop
mov
iret
fcompl
jmp
stos
cmp
popa
mov
pop
test
mov
js
pusha
imul
bound
and
push
bound
sub
jp
roll
cmc
xchg
xchg
repnz
jne
mov
enter
xchg
or
mov
mov
cwtl
cs
lock
mov
mov
adc
inc
xchg
outsl
push
sub
add
mov
pop
daa
js
in
sub
and
dec
lods
pop
testl
arpl
repz
xchg
in
ss
int3
jb
sub
das
dec
jle
pop
or
mov
sub
lods
mov
cmp
mov
and
cmpsl
sbb
jp
imulb
adc
mov
mov
mov
mov
fildl
adc
mov
jl
and
cmp
lcall
out
imul
fucomip
lret
sahf
ret
jp
dec
pop
jns
cmp
xchg
cltd
and
cs
mov
push
std
sbb
aad
sub
test
inc
sbb
andb
sub
and
fnstcw
jns
adc
repnz
dec
mov
mov
xor
mov
movsl
add
test
jge
insl
xchg
enter
je
mov
ret
xchg
sbb
jp
pop
dec
fcomip
sbb
pop
or
inc
outsl
pop
mov
ss
ret
fs
and
repnz
jg
cld
call
inc
xlat
leave
pop
loope
push
sub
aas
cmpsl
inc
pop
imul
xor
jnp
stos
inc
rolb
aam
les
les
xor
sbb
jge
jg
fs
scas
or
adc
mov
out
fucomip
push
sbb
pop
out
loope
mov
or
add
out
mov
and
mov
dec
jnp
xor
cmp
jle
shl
sub
jns
add
jmp
in
add
sbb
fdivr
and
fsubl
ds
mov
dec
dec
in
xlat
lock
loope
popf
pop
ljmp
cs
jecxz
test
out
scas
mov
mov
sub
ds
outsb
dec
and
loope
test
bound
and
rcrb
xchg
fwait
xor
inc
cmc
jmp
add
inc
in
sub
inc
fists
ret
dec
lret
dec
sbb
int3
xchg
sbb
jg
scas
loopne
das
inc
fidivrs
dec
xchg
clc
clc
cltd
mov
or
fwait
cmp
mov
add
inc
pop
and
in
bound
cltd
add
push
xor
sbb
lods
ss
xor
sbb
loop
sub
sbb
and
push
loop
jmp
scas
xor
aam
mov
addr16
loopne
push
ds
sub
mov
sub
sahf
ret
js
fiaddl
sahf
dec
pop
and
lret
aaa
pop
inc
sub
push
js
cltd
jp
out
xchg
xor
cmpb
pop
push
push
mov
cmp
daa
inc
pop
test
pop
dec
add
faddp
dec
scas
lock
leave
cmp
add
and
jp
std
outsl
shr
cs
lahf
push
pop
and
pop
outsl
movsl
mov
sahf
xchg
xchg
and
adc
fisttps
lods
adcl
mov
ds
cltd
iret
ja
jae
pop
popa
lahf
adc
out
pop
loopne
or
inc
aas
fsubr
jmp
lods
fs
dec
push
popf
and
pop
mov
jno
cltd
mov
jae
fnstenv
cmp
cmpsb
movsl
mov
pop
and
std
xchg
int
mov
jbe
in
shl
je
push
ret
aad
lds
push
adc
in
inc
je
fcoms
cmpsb
ljmp
or
aam
hlt
dec
xor
pop
sbb
lret
xchg
aas
cltd
pop
loop
xor
push
or
xor
cltd
cmp
jbe
sub
sub
add
addr16
or
jbe
rcrl
add
jge
je
mov
aad
test
cmp
pusha
stos
imul
in
lret
inc
push
loopne
pop
int
pushf
jmp
mov
imulb
lock
enter
mov
dec
aaa
or
mov
pop
fcoms
nop
lcall
loopne
shll
lea
out
push
lods
mov
lea
jecxz
cmp
cmp
lods
dec
daa
pop
fiaddl
repnz
xchg
into
jo
clc
jns
sbb
adc
repnz
mov
mov
cmp
jp
dec
inc
dec
lods
or
xchg
int
cltd
dec
add
or
xchg
dec
sbb
mov
cmp
pop
incb
or
push
rclb
ret
mov
test
adc
sbb
mov
sbb
sub
dec
les
jnp
push
jge
or
fbstp
and
sbbl
mov
inc
mov
iret
or
inc
jno
dec
aas
jb
xchg
jnp
rol
and
aas
or
xor
mov
xor
jne
movsb
mov
cmp
stos
jge
mov
fildl
or
aaa
stos
ret
jno
call
sub
mov
xchg
rol
scas
roll
in
pusha
push
aad
imul
lea
hlt
or
or
mov
xchg
pop
out
xchg
dec
test
int
pcmpgtw
inc
enter
into
notb
out
outsb
repz
repnz
push
push
cmc
cmp
push
stos
hlt
mov
lods
dec
aad
mov
in
iret
push
pop
or
jecxz
mov
ret
fcoml
pop
inc
fcmovne
jae
lret
imul
sub
and
aaa
push
xor
mov
cs
jmp
pushf
fdivrl
rcrb
xlat
icebp
mov
iret
clc
mov
xorb
cmc
sub
jns
add
sub
cmp
dec
pop
dec
cwtl
data16
std
dec
mov
pop
push
fidivl
sbb
scas
pop
jge
mov
mov
andb
fwait
add
std
hlt
adc
cmp
cld
xchg
ds
lock
scas
xchg
xor
imul
adc
mov
stos
ret
cli
into
mov
xchg
pop
jo
test
rcr
ficoml
mov
mov
cmpsb
jo
dec
xchg
xchg
out
cmp
mov
cmpsb
xor
out
cli
scas
lods
mov
lcall
imul
mov
cmpsl
jl
xchg
ret
pop
sub
fwait
loopne
push
ror
mov
loopne
sbb
mov
data16
scas
stos
mov
inc
xchg
xlat
push
or
xchg
pop
dec
lcall
fdiv
stos
lea
inc
or
or
sub
or
pop
out
mov
int
jo
test
lret
mov
and
icebp
sub
daa
and
fisubrs
mov
add
mov
mov
fsub
movsb
dec
pop
into
and
and
test
add
das
sub
cwtl
lahf
sbb
mov
es
movsb
and
and
ljmp
fiaddl
jns
jno
cs
mov
pop
and
jmp
iret
int3
imul
xchg
in
sarb
or
popa
add
xchg
push
pop
lret
test
push
int
es
mov
jl
xchg
and
dec
lds
xchg
daa
hlt
dec
cltd
adc
ret
jecxz
outsb
pop
cwtl
ret
pop
pop
fdivrs
cmc
pop
push
sti
push
cmpb
test
cli
pop
stos
push
iret
ja
jo
std
aad
movsl
dec
and
mov
enter
ja
mov
and
test
inc
mov
pop
dec
mov
mov
pop
clc
scas
push
jnp
push
and
sbb
and
sbb
pop
xor
in
pop
mov
ja
das
pop
adc
jno
pop
std
scas
cwtl
and
pop
sub
jp
cmpsb
xchg
lcall
jge
sub
cmc
inc
or
fstpl
cltd
push
jle
xchg
mov
sahf
adc
xor
addr16
loope
in
mov
test
sarl
andl
mov
ror
js
call
cmp
mov
filds
pop
and
fidivl
xchg
jno
popa
mov
xchg
cmpsl
andb
xchg
push
cmpsb
scas
adc
movsb
decb
ljmp
xchg
sub
mov
pop
test
dec
cwtl
sub
xchg
xor
add
mov
repnz
imul
imul
lods
pop
adc
movsb
jno
dec
mov
jle
insb
sub
push
sub
cvtdq2ps
pop
mov
mov
sti
push
pop
pop
js
mov
inc
push
xor
pop
or
jl
loope
sbb
cmp
js
incb
rcrl
addr16
stos
out
fstpl
pop
mov
mov
jne
and
movsl
push
inc
adc
les
mov
inc
dec
adc
pusha
inc
inc
pop
jmp
clc
push
or
and
mov
pop
sub
dec
dec
push
jb
pop
jmp
sbb
xchg
hlt
mov
lods
repz
sti
fwait
and
int3
jns
scas
jae
push
xchg
sbb
push
push
iret
in
lds
jg
push
jge
mov
mov
notl
jb
inc
mov
fimuls
shr
imulb
push
sub
xorl
lret
out
mov
out
jge
fs
imul
or
push
push
sub
sbb
sbb
repz
or
cwtl
movl
cltd
or
out
sbb
mov
loopne
stos
subl
push
ds
enter
push
fmull
cs
add
inc
sub
mov
and
fadds
sbb
dec
pusha
imul
fcompl
loopne
mov
call
pop
push
pushf
enter
shrl
cs
pop
in
and
xchg
dec
int
stc
jmp
out
jp
popf
ja
repnz
push
iret
je
cwtl
hlt
call
leave
in
leave
lock
mov
in
sub
lret
or
scas
sbb
mov
rorl
dec
xor
pop
add
adc
mov
loopne
jg
cmp
sbb
mov
or
call
cltd
test
scas
mov
mov
mov
in
pop
lahf
push
mov
mov
mov
sahf
mov
in
mov
xor
push
xchg
dec
sub
gs
popa
add
inc
sbb
out
sbb
inc
jbe
add
insl
jg
ret
imul
mov
ljmp
out
cli
sub
out
inc
push
dec
cltd
dec
les
dec
out
jle
and
leave
call
push
stc
xor
out
xor
cmp
in
or
incl
inc
repz
mov
mov
testb
adc
push
mov
xchg
test
push
mov
cmp
sub
sbb
sbb
sub
mov
cmp
hlt
mov
imul
mov
and
or
cmp
xchg
test
pop
dec
pop
xor
lahf
and
pop
inc
stos
insl
cmp
sbb
mov
aas
leave
xchg
scas
push
and
add
xor
inc
mov
jae
mov
mov
aaa
pop
sbb
inc
neg
insb
arpl
jl
mov
mov
mov
or
push
in
aas
loope
push
add
jg
loop
xchg
push
jg
mov
movsb
les
ds
test
pop
clc
mov
and
cmc
test
lods
push
fbstp
sbb
inc
nop
sahf
jo
sub
lock
clc
les
inc
negl
fwait
arpl
xchg
fs
cmp
rorb
sahf
test
in
test
lcall
into
dec
aaa
sub
stos
push
loop
sbb
lds
jb
sub
mov
xor
cmpsl
cmp
add
pop
sub
or
jecxz
enter
pop
or
insl
popa
scas
aas
rcrl
les
inc
sbb
adc
fldcw
or
mov
mov
pop
mov
fsubr
jg
mov
rcr
mov
dec
movsl
lcall
dec
pop
insl
sub
rclb
cmpsl
cmp
sub
and
rclb
dec
cmpsb
xor
mov
dec
sbb
fstpt
jb
add
xchg
adc
pusha
outsb
jae
int3
cli
cmp
popf
pop
aam
mov
icebp
inc
outsb
loop
adc
pop
fmuls
jl
incb
popa
enter
rol
das
mov
fnstsw
pop
or
movsb
xchg
add
das
sbb
sbb
jl
out
sub
mov
fstpt
sub
stc
shrl
inc
sub
push
dec
popf
fstl
lcall
dec
push
xor
cltd
sub
imull
adc
mov
aam
xchg
ret
inc
movsb
or
and
lock
jnp
iret
adc
repz
mov
rorl
in
mov
fsubs
out
testl
jge
cmp
pop
ror
cld
dec
adc
and
push
sti
sub
or
dec
sbb
lcall
add
fcmovnu
sbbl
test
ds
movsl
xchg
arpl
test
sbb
shll
push
jp
mov
pop
push
js
popa
lahf
or
xor
fstpl
inc
sub
xchg
or
mov
ret
ret
push
and
pop
insb
cmp
pop
mov
pop
sub
in
mov
jnp
cmp
in
push
shlb
mov
add
jl
fidivrl
mov
sbb
rcrl
loopne,pn
mov
jp
push
imul
add
inc
pusha
pushf
fnsetpm(287
mov
push
lret
or
mov
or
mov
and
loope
lahf
mov
adcb
mov
das
cmpsb
fildll
mov
fs
jecxz
add
dec
inc
leave
push
dec
jb
lods
sbb
subb
dec
push
jno
sub
xor
into
loop
mov
les
imul
lret
fisttpl
jae
into
and
ja
mov
cmp
lods
dec
inc
fst
xlat
mov
cmpsl
inc
popa
mov
jb
inc
ret
hlt
leave
and
stos
mov
jp
mov
ss
mov
idivl
push
fists
add
mov
sub
sub
out
sub
sbb
iret
xchg
mov
test
xchg
dec
nop
imulb
sub
sahf
pushl
andb
dec
test
in
adc
orb
mov
mov
add
cs
dec
out
int
stos
push
insl
mov
inc
sbb
lock
test
in
les
adc
testl
xchg
imulb
and
enter
lea
dec
scas
xchg
mov
inc
mov
imul
mov
imul
mov
bound
in
test
and
mov
insl
movsl
xchg
sub
jbe
mov
mov
mov
nop
cmp
and
mov
cmp
aas
xchg
sub
xchg
cmpb
inc
push
or
mov
sub
xorb
mov
mov
push
adc
insb
push
mov
cld
mov
pop
push
cmp
xor
push
arpl
push
mov
xchg
cmp
sub
push
nop
and
lret
out
ror
mov
xchg
or
lods
mov
xor
cmp
insl
jge
inc
xor
sbb
addr16
arpl
mov
mov
in
push
clc
sub
pop
jmp
pop
xor
inc
sub
cmp
into
mov
sbb
adc
pusha
iret
sahf
add
cmp
xor
movsl
scas
shll
cld
in
pop
adc
aam
lret
sub
or
int3
xchg
out
inc
sub
repz
es
xor
jbe
and
dec
popa
mov
add
popa
cmp
bound
loop
mov
push
sub
pop
xchg
or
shl
mov
sahf
xchg
pop
pop
insb
dec
jbe
jo
dec
add
loope
and
cmp
dec
mov
inc
mov
add
or
aad
in
push
mov
call
in
daa
popf
stos
inc
push
cmp
inc
fmull
and
lret
fmul
aam
fistps
inc
mov
mov
pop
loope
jns
fs
mov
xor
jmp
out
fsub
leave
mov
mov
mov
cmp
arpl
mov
xor
je
mov
mov
div
loope
and
jp
flds
inc
push
addr16
out
dec
dec
loopne
out
lds
leave
sbbl
jl
aaa
sbb
pop
sub
mov
data16
dec
sar
push
mov
sbb
xchg
sbb
cmpsb
aaa
or
adc
loopne
scas
cs
loopne
inc
push
adc
dec
sub
adc
into
cmp
or
test
pop
xchg
or
and
mov
cmp
cmp
push
lods
sub
dec
or
sbbb
fstpl
outsb
out
icebp
xchg
sub
loopne
mov
test
arpl
sbb
mov
mov
aam
repz
jl
fildl
stos
aad
jbe
bound
sbb
jl
iret
or
mov
das
sub
in
outsl
or
test
mov
inc
pop
movsb
xor
mov
in
enter
or
push
addb
cmp
mov
cmpsb
jp
int3
mov
adcl
pushf
inc
imulb
mov
loopne
mulb
les
and
mov
movsb
shlb
sbb
ret
pop
and
sub
cmc
outsb
sub
xor
sub
sbb
lahf
in
sbbb
addr16
mov
push
jne
decl
cmp
cmp
mov
mov
xchg
jp
mov
dec
loopne
mov
push
pushf
ja
test
pop
fcoms
xchg
ljmp
scas
movsb
jl
sbb
dec
in
iret
fstps
push
sbb
jp
cmc
sbb
in
mov
les
aaa
jg
mulb
rcr
pop
lahf
test
xchg
mov
sbb
aas
jns
and
xor
xor
movsl
in
sbb
sbb
jno
jbe
popl
shl
adc
jl
les
mov
mov
arpl
aas
sub
lret
repz
xchg
les
cltd
fnstcw
test
and
adc
in
xchg
scas
aam
jmp
pusha
inc
pusha
insl
ja
jns
inc
jo
mov
lret
lret
xchg
test
xchg
shll
imul
push
inc
pusha
lods
dec
inc
mov
inc
fwait
push
cmp
mov
jae
mov
cmp
repnz
fsubl
dec
dec
inc
xor
js
mov
adc
xchg
cmp
pop
popa
cmp
adcb
mov
lahf
xchg
sub
dec
das
mov
shrl
jnp
sbb
xor
pushl
cmp
or
loop
xchg
jno
flds
push
add
push
pop
and
repz
sbb
out
insl
fdivs
loope
cmp
mov
int
ja
adc
movswl
stos
or
inc
xchg
push
and
xor
inc
xchg
inc
repz
stos
push
je
popa
test
jecxz
push
addl
gs
jnp
xchg
add
lret
ret
loop
push
inc
lahf
sub
jnp
push
mov
push
push
adc
cmpsb
adc
pop
push
mov
xchg
cld
testb
roll
pop
add
mov
nop
fcmove
mov
inc
sbb
sbb
lret
aas
pop
out
mov
test
out
xlat
decb
xchg
cwtl
jl
mov
popf
jb
mov
dec
fisubs
cmc
hlt
adc
jb
mov
push
pop
and
lret
inc
or
ret
or
daa
xlat
out
ss
xorl
push
pop
lds
in
jp
or
imul
fiadds
dec
cli
push
xorb
xor
jmp
lret
cmp
mov
jmp
ss
hlt
mov
xor
jnp
mov
dec
shrb
xor
push
mov
lcall
shlb
mov
test
into
or
lods
xchg
cli
pop
lea
icebp
sub
ds
mov
out
inc
dec
clc
int3
cli
mov
or
jo
es
jecxz
stos
mov
sub
dec
in
cs
les
or
pusha
mov
sub
lock
clc
das
int3
and
pop
add
push
xor
xchg
mov
stos
sub
sbb
call
fcomps
repnz
popa
dec
test
xchg
adc
jl
subb
clc
shl
cmpsl
adc
jmp
es
xor
bound
push
lea
mov
adc
xor
and
std
lods
mov
add
sbb
pop
xor
outsl
lock
xchg
adc
xor
sbb
test
fcmovb
and
ud0
mov
jp
jp
out
out
and
xchg
xchg
notl
movsb
adcb
daa
mov
aad
add
adc
mov
cli
negb
and
push
pop
stos
mov
dec
les
cmp
mov
in
adc
mov
or
xor
clc
cmp
sbb
adc
xchg
or
call
repnz
in
iret
int
jmp
sbb
cmp
mov
inc
jecxz
sub
jl
inc
aad
push
or
inc
insb
adc
cmpsb
sbb
jmp
ljmp
mov
insl
sahf
hlt
cli
cs
sub
leave
mov
pop
clc
loopne
pop
mov
mov
sarb
jle
jne
lods
jns
ret
cmp
jmp
pop
pop
test
or
pushf
in
imul
mov
xor
jno
adc
or
push
fs
adc
jmp
xchg
push
bound
aam
lock
mov
mov
mov
ljmp
lcall
lods
and
cs
push
pop
dec
mov
xchg
or
fdivrl
stc
mov
add
mov
xchg
xchg
cmp
nop
rorb
mov
outsl
inc
add
shr
xor
inc
xchg
out
lock
pop
dec
ret
nop
inc
jmp
dec
or
test
outsl
mov
cs
jb
sub
push
outsb
std
mov
mov
jne
nop
rol
aad
dec
fst
loope
ljmp
pop
jnp
fimull
and
cmp
les
or
mov
fwait
out
xor
sbb
out
fstpl
inc
scas
mov
or
and
outsl
popa
cmp
or
adc
test
cmp
stos
int3
add
lods
jmp
outsb
icebp
lock
mov
add
repnz
ljmp
cmp
and
scas
test
xchg
push
dec
pop
mov
inc
movsl
fidivs
lcall
das
mov
jmp
sub
or
pop
pop
mov
int
xchg
cmp
mov
cltd
add
jl
pusha
mov
fidivl
cld
out
mov
sti
and
pop
mov
pop
push
loope
ret
sub
pushf
out
inc
adc
insl
push
push
cmp
imul
dec
push
es
xor
stos
sbb
lcall
sbb
testb
jg
pushf
and
add
adc
in
sub
push
xor
inc
sbb
mov
repz
pop
mov
adc
in
mov
mov
orl
idivb
xchg
in
xchg
enter
add
pop
je
shll
out
inc
pop
lret
mov
out
inc
shrb
cmpl
adc
and
je
sub
fsts
nop
in
clc
sbb
rorb
mov
loope
or
lret
mov
mov
out
insb
mov
ljmp
adc
add
add
xor
jbe
xchg
push
loope
fistl
lods
sbbb
stc
mov
xor
xor
jl
and
ror
in
les
pop
cmp
push
xchg
outsl
cs
dec
arpl
incb
imul
jp
or
adc
lds
ja
jns
out
mov
jae
dec
xchg
out
xchg
sub
sbb
test
out
xchg
data16
xchg
data16
push
rolb
rcrb
mov
mov
pop
inc
imul
leave
int
pusha
andb
loope
or
aaa
shrb
inc
cmp
mov
mov
push
or
xchg
dec
mov
sti
or
test
leave
lods
cs
cli
pop
mov
hlt
dec
aad
iret
xor
sar
jmp
mov
jae
inc
cmp
outsb
aad
push
adc
shrb
stc
pop
and
shr
sub
aas
rep
pop
or
sub
or
subb
jge
bound
xchg
or
incl
push
mov
inc
popa
mov
sbb
mov
and
jb
es
cmpsl
fldt
push
dec
sub
dec
add
cli
adcl
push
mulb
dec
mov
sub
mov
lock
sub
sub
pop
insb
xchg
stc
and
ss
insb
mov
cmc
mov
ja
mov
pop
lods
nop
outsb
clc
xchg
mov
imul
lds
outsb
cli
cmp
dec
pop
pop
iret
rcrl
jno
hlt
pop
aam
arpl
sub
push
inc
and
test
cmp
xchg
cmp
jle
sbb
mov
push
mov
popf
adc
clc
stos
dec
out
jecxz
sbb
sbb
outsl
cmp
xchg
adc
jno
xchg
push
jb
fidivl
jne
xor
std
loopne
sub
ja
adc
imul
mov
or
add
test
jo
xchg
out
mov
cmp
stos
sub
sar
xor
add
mov
pop
mov
inc
imul
lret
mov
mov
test
cmp
cmpsl
ds
cmp
scas
inc
loop
pop
jbe
cmp
outsb
outsl
cmp
sub
push
test
xor
lods
fsubrs
int
and
inc
push
xchg
shll
jmp
cwtl
pop
add
in
das
xor
xor
adc
and
cmp
and
and
shlb
lea
cmp
inc
nop
pop
add
sbb
test
adc
test
mov
sahf
call
mov
inc
ja
and
jo
aad
daa
mov
mov
sti
imul
jbe
repnz
adc
cmpsb
cmpsb
icebp
test
aam
or
imul
mov
fcom
adc
repnz
cmp
add
fld
mov
adc
outsl
repnz
and
fwait
in
mov
push
push
mov
repnz
or
mov
enter
dec
xchg
xor
mov
cltd
movsb
inc
or
inc
repz
pusha
loope
dec
jmp
outsb
lahf
shrl
cmpsl
jmp
xchg
xor
xor
das
hlt
adc
fwait
lret
gs
mov
dec
lods
push
xor
jecxz
add
mov
dec
out
xlat
mov
xor
mov
sub
imul
xlat
jmp
addb
jne
and
dec
fildl
add
add
add
mov
out
cmpsl
push
fstp
jge
pavgw
adc
clc
jl
mov
mov
jbe
jbe
cwtl
xchg
enter
addr16
fisubs
test
out
mov
shrl
loopne
mov
mov
movsl
ja
xorl
repnz
sarl
fldl
mov
popf
sar
aam
adc
push
in
js
incl
or
movsb
and
popa
mov
insb
mov
rclb
in
scas
jne
repnz
outsl
mov
scas
xchg
rclb
mov
cld
mov
push
mov
arpl
dec
xchg
dec
adc
rorl
inc
push
or
mov
mov
scas
fprem1
test
mov
push
stos
xchg
mov
sub
pop
mov
sub
mov
and
push
inc
negl
data16
xlat
enter
cmp
or
sbb
leave
in
mov
pop
insb
ljmp
int
enter
adc
cmpsl
pusha
pop
sub
lret
loop
fldl
sbbb
push
sub
arpl
fwait
adc
in
sbb
add
mov
mov
stos
push
les
sbb
jl
cmp
mov
pop
in
cmp
mov
mov
cmpsl
lea
aad
xchg
fcmove
mov
inc
imulb
xchg
adc
imul
jl
sub
insb
and
pop
mov
push
pop
add
fucomp
push
push
inc
das
push
pop
sub
cmp
cltd
ljmp
push
mov
test
sbb
and
fs
inc
ficoms
in
push
cs
scas
loope
inc
sub
inc
insb
repnz
imul
cmp
fdivl
xor
rcll
mov
sbb
or
aam
mov
popl
mov
mov
push
ja
jnp
xor
mov
movmskps
adc
mov
std
dec
xchg
filds
fwait
aaa
lret
aad
cmpsb
scas
add
xor
aaa
mov
push
adc
lahf
clc
sub
cmp
imul
xlat
lea
adc
pop
ret
mov
add
loop
mov
sub
push
xchg
fmulp
mov
outsb
lret
fs
sar
lods
mov
jnp
fnstcw
movsb
cltd
add
and
lea
das
push
iret
gs
push
jae
idivb
ret
cmpl
fisttpl
stos
nop
inc
les
fstpl
xlat
cwtl
ljmp
push
mov
in
cli
std
pop
in
mov
pop
xor
repz
cmp
outsb
ficomps
leave
aad
xor
cmp
push
push
sub
cmp
add
jp
cmp
ljmp
mov
push
es
das
sbb
jmp
or
adc
in
mov
mov
cmp
push
mov
and
add
cmp
popf
popa
inc
add
pop
dec
ret
inc
xchg
rclb
jns
push
pop
xchg
push
mov
mov
cmp
cmp
add
dec
sti
adc
xchg
pop
cmpsl
enter
inc
push
cmp
pusha
aad
adc
cmp
add
jo
es
aam
and
dec
int
mov
test
cmp
pusha
cmpsb
and
aad
xchg
cld
cmp
mov
xorb
test
inc
pop
sbb
mov
ljmp
sbb
repz
xor
add
sub
ljmp
clc
xor
jmp
out
and
orl
pop
sti
cmc
das
pop
sbb
icebp
pop
sub
iret
clc
push
xor
jo
or
adc
inc
ja
ljmp
push
xchg
inc
mov
popa
test
push
or
inc
fs
cmp
out
fisttpll
xorl
insl
fildl
adc
push
cli
js
nop
pusha
loope
xchg
ds
loope
mov
ds
repz
mov
pop
in
movsb
xchg
popa
push
dec
loop
lods
insb
leave
pop
push
add
pop
in
bnd
int3
addr16
jg
insb
sti
shrl
ljmp
sub
sbb
xchg
pop
cmp
mov
dec
cmc
cltd
jecxz
pop
push
test
xchg
cltd
add
sbb
mov
mov
sbbl
loop
int
or
jge
es
faddl
daa
mov
clc
getsec
and
lret
inc
or
jl
movsl
push
and
mov
dec
pop
push
scas
mov
enter
loopne
or
sbb
hlt
push
jg
inc
push
push
xchg
inc
sub
inc
ja
mov
sub
cmp
and
mov
fiaddl
imul
test
add
mov
rorl
outsb
sub
ffreep
in
bound
rcrl
xlat
xor
mov
or
loopne
jb
pop
cmp
test
cli
xchg
mov
sbb
push
orb
mov
and
pusha
mov
xchg
pop
stos
fldl
or
decb
mov
jne
xlat
cmp
scas
fwait
add
addl
cmp
shrl
shll
loopne
lahf
mov
push
xchg
xchg
movsl
popf
xchg
xchg
push
mov
mov
mov
sahf
pop
fadd
out
jl
adc
inc
stos
ja
iret
mov
lock
mov
loop
lret
out
mov
shlb
dec
insl
data16
dec
jae
enter
mov
and
adc
push
push
add
ds
sub
jl
pop
adc
gs
adc
cmp
push
sahf
xchg
mov
rorb
sub
test
cs
push
stos
mov
jecxz
dec
mov
dec
inc
and
jmp
call
mov
sbb
ret
mov
icebp
rorb
or
leave
ret
sbb
mov
scas
cmc
pop
or
add
sub
je
loopne
loope
fmuls
loop
sub
mov
lock
out
jmp
add
cld
xchg
int3
jno
mov
add
add
ficompl
or
pop
pop
bound
in
decb
lret
pop
and
add
leave
jle
mov
jno
push
mov
rolb
orb
movsl
sub
test
jno
add
jl
adc
ficoml
mov
dec
in
mov
adcl
ds
lcall
negl
sbb
pop
and
and
mov
lcall
mov
pop
fcom
push
cmpsb
imul
cmp
or
inc
jne
rcll
jne
xor
and
aad
movsl
fs
es
ficompl
dec
sub
movsl
cld
inc
push
repz
dec
pushf
aaa
dec
or
xchg
pusha
xor
inc
add
xlat
mov
arpl
data16
cmp
inc
mov
js
test
outsl
icebp
mov
dec
or
sbb
movmskps
inc
sub
add
dec
mov
jne
test
cmp
mov
dec
pop
cwtl
jbe
rorl
xchg
rcr
jmp
jp
ss
adc
cmpsb
sub
outsl
aam
mov
je
jno
jnp
jbe
sub
dec
and
addr16
inc
xchg
cli
dec
xor
push
aad
bts
sub
mov
mov
test
out
jbe
cli
das
mov
subl
mov
ss
dec
sarb
shll
in
fstps
and
imul
pop
cmp
add
dec
lods
aad
mov
or
sub
or
test
aam
mov
in
adc
loopne
cmp
add
pop
adc
push
inc
or
dec
push
shlb
gs
aas
or
inc
dec
mov
sub
and
sti
push
aaa
dec
push
adc
js
imul
mov
subb
pop
mov
sub
dec
dec
mov
mov
sub
rorb
cmp
cld
mov
fisubrl
std
mov
decb
stos
dec
adc
push
jo
les
or
aam
sbb
sbb
jno
lret
pop
jge
push
sub
or
jnp
add
xchg
fldenv
test
dec
xchg
notb
ds
add
mov
sub
push
loopne
add
cmp
sbb
jmp
aaa
idivl
adc
adc
lock
test
adc
std
and
cmp
mov
inc
mov
je
std
inc
in
jmp
rorb
mov
push
lods
fwait
dec
sahf
dec
clc
xchg
and
aam
xchg
test
loop
push
adc
fildll
pop
lea
add
fwait
adc
iret
fcompl
or
pop
fwait
sahf
sbb
cmc
sbb
push
xor
xor
push
cmp
fsubrs
repnz
gs
push
xor
jmp
stos
push
jp
xchg
test
xor
pop
cld
int
jne
jbe
stos
jmp
adc
push
cmp
mov
mov
xor
rcl
and
add
jg
aam
xor
add
dec
xorl
repz
sbbl
fdivl
dec
rclb
imul
mov
mov
adc
inc
push
mov
imul
sbb
push
dec
add
enter
pop
fadd
pop
outsl
sahf
out
pop
movsb
mov
jb
push
in
mov
divl
and
movsb
neg
push
and
mov
int3
test
pop
mov
xchg
xchg
arpl
orb
xorl
scas
aas
ds
scas
and
mov
mov
inc
les
divl
mov
stos
xlat
jno
ljmp
mov
inc
cmpsl
push
ret
es
fwait
inc
fimull
adc
fisubrl
or
insb
hlt
icebp
in
dec
test
rolb
sbb
jg
fwait
mov
stos
loop
jne
insb
lret
jne
cmp
stos
sub
dec
sbb
cmp
add
pop
in
fadds
test
jnp
mov
xor
mov
rol
pushf
mov
mov
xchg
inc
mov
xchg
mov
mov
jge
sbb
sti
mov
fdivl
stos
pop
pop
dec
imul
rcrb
sahf
sub
cmp
cmpsb
mov
mov
and
pusha
in
adc
push
subb
je
shll
pop
iret
lret
sub
scas
and
xchg
cmp
push
jle
adc
xchg
adc
and
push
dec
xor
rolb
out
pop
push
jb
cmpsb
in
js
std
and
mov
fs
sahf
jp
xlat
push
mov
aam
push
test
inc
mov
inc
mov
or
pop
test
lock
sbb
mov
stc
shrl
and
cmp
outsl
jne
dec
cmp
aaa
push
xor
add
jne
leave
pushf
gs
mov
push
cmp
cmp
fs
mov
adc
mov
in
cmpsl
test
aad
movsl
sub
and
aad
scas
sarb
aas
push
push
push
aaa
xor
xchg
dec
jge
lock
pop
fcomp
pusha
cltd
rclb
mov
data16
ljmp
ja
sub
jmp
js
add
in
aas
mov
add
inc
int
xchg
jnp
mov
lea
aad
popf
addr16
mov
or
mov
and
ja
xchg
mov
setno
xchg
in
ret
leave
adc
mov
add
push
sarb
dec
repz
jmp
inc
xor
scas
addr16
fnstsw
test
or
sub
lret
and
idivb
jne
les
jno
lock
mov
subb
jb
mov
xchg
lcall
lods
mov
xchg
push
ss
out
sbb
xor
pop
icebp
jnp
popf
movsb
and
mov
cwtl
xor
sbb
jg
xor
xchg
call
inc
mov
fwait
xor
jno
imul
jg
push
mov
imul
and
or
xlat
out
or
cmpsl
lods
jg
mov
add
jae
push
mov
and
and
push
sbb
jne
push
cmpsl
adc
rorb
mov
loopne
jb
xchg
cmp
ja
loop
push
xchg
shrb
insl
mov
xchg
lock
mov
test
jl
out
jbe
mov
xchg
pop
xchg
les
inc
in
jl
dec
in
sahf
mov
aad
into
push
arpl
add
push
out
lods
inc
insb
xchg
pop
es
or
xchg
or
iret
mov
push
in
sahf
push
sbb
xchg
mov
sti
imul
jae
lea
hlt
and
lds
xor
bound
rcr
add
dec
fcomi
insb
sbb
jb
aam
pop
or
flds
aaa
divl
js
and
dec
bound
nop
and
pop
sbb
or
cmc
sbb
mov
pop
jo
dec
adc
fadd
shr
lret
xlat
clc
cltd
jae
jge
cld
push
inc
and
cld
out
add
shrl
adc
sbb
cmp
pop
cmp
mull
mov
lret
xor
pop
mov
add
test
add
loopne
nop
mov
inc
sti
arpl
mov
fnstsw
fsubr
pusha
jmp
dec
ret
sbb
sbb
adc
int3
in
add
sarl
push
aaa
push
jmp
push
or
sbb
xchg
lock
call
icebp
jb
orb
cmp
sbb
and
ljmp
dec
test
ret
push
xorb
inc
icebp
adc
xchg
xchg
mov
lds
cmp
and
repnz
lods
pop
lcall
lea
je
fisubl
lods
add
scas
xchg
add
call
fstl
mov
mov
aas
bnd
xor
rcl
adc
aad
pusha
mov
xor
cli
sub
xor
rorb
or
loopne
push
push
adcl
cwtl
push
and
ret
es
cli
or
lahf
add
cmp
mov
add
test
popa
mov
ret
into
mov
dec
lret
and
scas
aam
test
jmp
xchg
sub
add
jae
xor
loope
movsl
test
cltd
jecxz
pop
dec
jb
pop
jns
fwait
mov
lea
sub
xchg
jmp
pushaw
adc
jne
pushf
arpl
cmp
fs
xor
dec
stc
int
imulb
out
or
test
jl
int
pop
pushf
mov
incb
sbb
cmp
cli
jge
push
cmp
cltd
pop
pusha
inc
pop
inc
daa
xchg
fistl
mov
and
pop
cmp
push
call
dec
mov
xchg
leave
rorl
sub
movsl
xor
mov
aaa
adc
add
cmp
xchg
jmp
in
sub
sbb
cwtl
mov
sbb
mov
scas
cs
and
add
clc
in
lcall
sbb
stos
xor
xchg
cmpsb
add
fstps
push
lret
popa
in
add
fldt
and
loop
test
xchg
pop
outsl
iret
push
fldl
push
out
out
mov
imul
cmpb
outsb
mov
sub
cltd
sbb
js
outsb
pop
xor
add
add
push
stc
pop
and
imul
jg
hlt
adc
mov
push
out
xor
and
testl
dec
fidivl
lcall
push
insl
out
push
fs
push
mov
inc
cmpsb
addr16
mov
mov
sbb
enter
loopne
inc
bound
cld
pop
push
fcmovb
pop
imul
lods
jl
int3
cmpsb
jp
inc
mov
test
cmp
and
mov
sub
les
pushf
sub
or
das
add
sarb
out
push
test
cmp
sub
test
inc
jbe
add
dec
arpl
loope
pop
movsb
sbb
jp
adc
mov
adc
lea
mov
add
adc
cld
cmp
mov
sbb
iret
aas
sbb
mov
dec
xchg
lahf
push
ror
mov
int3
xor
add
xchg
sub
fcmove
sub
xor
inc
inc
xchg
out
pop
inc
jne
movsl
xor
out
jne
es
dec
movsl
xor
mov
dec
pop
xchg
out
outsb
test
add
imul
jne
pop
pop
vxorps
pop
jo
xlat
dec
cmp
add
and
mov
push
adc
in
mov
xchg
insl
jo,pt
mov
jg
adcb
lcall
inc
ss
dec
fistl
xchg
mov
push
popa
cmp
lock
cld
mov
shl
lcall
mov
out
cmpsb
ss
sbb
mov
jmp
jl
dec
push
inc
pop
adcl
loop
adc
imul
lods
ja
xchg
sub
insb
and
test
mov
inc
das
dec
mov
or
jb
rcrb
jb
mov
xor
mov
inc
mov
adc
fisubs
jp
roll
cmp
xchg
and
mov
pop
cmpsb
loopne
aad
sarl
push
in
pop
pop
mov
mov
pop
dec
push
pop
sbb
jns
adc
add
stos
inc
sbb
xor
push
xor
stc
or
idivl
sbb
xor
pop
push
addr16
xor
fiaddl
sahf
pop
fldt
mov
stc
mov
loop
in
cmp
fwait
fwait
clc
mov
loope
js
pop
pop
fmuls
ljmp
movsb
fisubl
cmp
jmp
sbb
sbb
pop
icebp
push
sahf
inc
xorb
dec
shlb
cmp
lahf
sbb
dec
sbb
andb
xchg
dec
cli
dec
or
das
lods
sti
xchg
call
in
jo
cmc
fcmovnu
call
jp
pop
popl
lcall
mov
or
nop
dec
cmpsl
mov
sahf
pop
jb
sbb
movsb
mov
jmp
add
in
pop
sarl
adc
mov
xor
outsl
insl
imulb
outsl
sbbl
cmpsl
cld
add
and
and
pop
or
and
ds
push
mov
inc
push
pop
dec
mov
and
clc
hlt
lds
and
sbb
mov
cmc
aas
sti
jg
mov
hlt
mov
testb
sbb
add
push
push
inc
jno
outsb
xchg
dec
adc
aam
mov
mov
adc
jae
rcrb
mov
ret
jno
mov
or
movsb
jae
sub
outsl
add
pop
test
add
xor
faddl
into
mov
jmp
test
daa
in
adc
mov
ret
rclb
cmp
or
imulb
out
es
repz
test
mov
pushf
loope
out
fdivp
sub
stos
cmpsb
sub
popa
ds
mov
or
cs
repz
and
jmp
data16
aaa
gs
push
sbb
call
xchg
in
pushf
pop
add
inc
jne
fsubrl
xchg
mov
xchg
shl
or
rcrl
push
add
jle
xchg
gs
mov
pop
dec
lahf
and
loopne
mov
add
lret
mov
xor
lret
call
and
in
ret
dec
shll
dec
pop
in
sbb
adc
push
int
int3
lods
pop
lds
movsl
ss
dec
das
mov
mov
cld
into
adc
jno
cmp
and
fldcw
sahf
or
lahf
cmp
bound
lock
cmp
in
or
lods
dec
icebp
mov
add
stos
xor
nop
lea
cld
ja
insl
in
addr16
fisttpll
mov
lea
or
mov
dec
jge
inc
xchg
mov
sub
jno
shll
cmp
shlb
xor
cmpsb
adc
dec
int3
fdivs
and
or
cmpsl
jmp
addl
and
or
jecxz
mov
rolb
mov
lret
mov
ret
cmpsl
fcmovu
out
mov
inc
std
push
xor
pop
xor
mov
bound
dec
mov
ret
mov
pop
pop
mov
sbb
aam
adcb
jp
mov
cs
das
mull
mov
mov
imul
js
into
dec
mov
fdivrl
cmpsb
fldt
inc
adc
jb
adc
jle,pn
jl
inc
pop
jle
pminub
add
xchg
loope
mov
mov
fistpl
enter
pop
and
in
xlat
cmpl
dec
addr16
ret
or
pop
jmp
pop
test
pop
ljmp
cmp
xor
or
add
sti
adc
jmp
mov
daa
pop
in
add
mov
jbe
adc
daa
mov
cmpsl
daa
and
dec
loopne
repnz
sahf
sub
mov
or
and
lret
and
in
int
dec
add
fs
call
add
aaa
pop
mov
dec
mov
mov
test
jge
scas
adc
rcll
sbb
cli
lahf
movsb
movsl
inc
sub
adc
ficomps
int3
jecxz
cwtl
mov
arpl
lret
aaa
rcrb
sahf
pop
and
push
test
stos
adc
push
xchg
cli
cmp
mov
lds
fstl
sub
lret
mov
inc
bound
xchg
aas
push
call
in
pushl
leave
pop
dec
and
cmp
or
mov
xor
pop
add
ret
mov
fstpl
jno
xchg
jb
cltd
cli
add
sbb
inc
inc
pop
enter
je
sub
jmp
push
mov
pop
xorb
sbb
cmp
mov
xchg
mov
sahf
dec
lea
inc
cmp
cmp
sub
jno
cmp
push
cmc
xchg
movsb
dec
push
in
lods
enter
xchg
bound
mov
mov
add
sbb
arpl
fisubrl
scas
mov
mov
mov
sub
dec
rorb
call
ja
insl
enter
cmp
push
cmpsb
sarb
mov
out
fldl
push
dec
stc
out
scas
ret
push
push
xchg
lahf
cmp
pop
xchg
ret
sbb
mov
or
add
cwtl
popa
enter
jmp
mov
int3
and
lahf
sub
lods
xor
ds
lret
outsl
mov
fnstsw
rclb
mov
pop
fisubs
pop
push
dec
rcll
pop
jbe
jecxz
data16
gs
roll
mov
pop
xchg
gs
iret
cmpsl
jbe,pn
fs
arpl
push
pusha
lea
in
add
in
inc
sti
loopne
push
mov
ja
neg
sahf
cld
jae
ljmp
push
and
xchg
mov
adc
lahf
xchg
stc
sub
xchg
in
xchg
aaa
aaa
push
scas
mov
pop
movsb
dec
data16
scas
mov
js
dec
sbb
cli
or
pop
mov
sti
adc
push
insb
push
mov
xor
loope
scas
pop
repz
call
sti
das
pushf
mov
or
sub
shr
sar
lahf
fwait
daa
adc
aad
stc
adc
dec
pop
xor
inc
adc
mov
incl
pop
addr16
lods
lods
adc
add
aaa
or
std
pop
mov
inc
and
sub
pop
aam
jle
arpl
lods
leave
je
dec
jge
cmp
int
push
jnp
adcb
jl
hlt
xor
orb
shrb
push
push
sub
test
out
mov
jbe
out
sub
push
xor
scas
push
xchg
xchg
adc
xor
mov
pop
mov
shlb
push
push
push
test
xchg
mov
call
push
mov
in
movsl
std
hlt
leave
loopne
sahf
aam
popa
and
imul
push
inc
and
add
imul
push
xorps
cmp
mov
dec
mov
add
lcall
xor
in
inc
and
fstpt
xchg
mov
push
pop
int
xchg
ficompl
inc
stos
sub
pop
addb
sub
sti
fwait
scas
and
pop
mov
popa
shll
push
cmp
fnstcw
adc
sub
js
push
ss
mov
je
andb
mov
xchg
mov
popa
incl
push
loope
pop
shr
negb
outsl
test
rorb
repnz
data16
ljmp
js
push
push
push
ret
ret
outsb
mov
clc
out
in
addb
movsb
jb
adc
stos
jae
dec
sbb
cmpsl
orps
xchg
loopne
and
pop
lods
push
out
pop
mov
pop
test
pop
loop
fs
inc
or
or
add
cmp
movsl
cmp
mov
in
push
js
mov
data16
or
sbb
or
imul
pop
movsb
cmp
dec
addr16
daa
movsl
mov
cld
xchg
sub
pop
and
cmp
rcr
out
leave
in
movl
pop
rcrb
jmp
pop
lods
jl
sub
out
aaa
imul
mov
js
pop
pop
or
cmpsl
shlb
fidivl
pop
push
cwtl
jo
mov
pop
pushf
insl
repnz
ret
ficoml
rorl
jae
mov
sbb
jle
cltd
adc
xorb
es
fwait
mov
mov
pop
sahf
mov
orb
dec
or
mov
mov
or
shufps
jb
jne
push
push
cmpsb
cltd
pop
xlat
pusha
add
pop
add
mov
jp
sub
je
cmpsb
pushf
pop
jge
sti
sub
mov
stos
call
inc
negb
pop
mov
dec
dec
push
jge
sahf
xchg
das
cmpsb
call
xor
mov
xorb
add
subb
stos
pop
jl
cmp
cmp
jne
clc
roll
aam
and
pop
lods
mov
mov
imul
push
sbb
cs
mov
mov
mov
fdivp
push
es
mov
mov
aam
or
or
xlat
int
mov
mov
stos
fxtract
push
pop
mov
out
jns
sbb
push
xchg
sbb
inc
popa
xor
fsubrl
mov
pop
mov
imul
ja
scas
cmpxchg
in
shrl
lods
dec
mov
sub
pop
inc
push
shl
jecxz
add
jp
mov
inc
not
leave
xchg
sahf
push
dec
mov
lcall
lahf
sbb
je
iret
jmp
fs
stc
jmp
ud1
dec
mov
pusha
or
cmp
test
push
insb
sub
inc
es
addr16
xchg
pop
lret
shr
cmp
test
gs
or
call
iret
stos
sub
or
jle
xor
or
lcall
push
inc
sub
pop
rorb
push
jp
shll
insl
pandn
pushf
mov
push
mov
xchg
stos
mov
pop
push
cmp
outsb
loope
cmp
movsb
push
add
in
fsubrl
sub
cmpsb
cmp
add
ljmp
sbb
rcrl
xchg
mov
adc
or
leave
imul
mov
stos
mov
aaa
and
popf
inc
add
repnz
or
sub
aam
lret
xor
pop
fstpl
cld
xchg
adc
xor
push
and
push
jnp
mov
xor
fdivrs
jecxz
pop
test
movsb
or
in
ja
push
jbe
pop
sub
mov
sti
mov
fs
push
xorl
jecxz
and
rcrl
add
aad
inc
clc
out
filds
jns
je
add
xor
out
and
push
mov
xor
xchg
jnp
into
fcmovnu
push
movsb
pusha
inc
add
add
mov
adc
pop
cmp
pushf
add
sti
cld
xor
stos
les
push
xor
xor
lock
xor
pop
push
movsl
xchg
outsl
in
idiv
nop
dec
hlt
dec
shrb
mov
shlb
mov
fcompl
bound
jp
xchg
mov
cmc
or
aam
repz
daa
lods
into
inc
je
mov
pop
push
cld
mov
adc
aaa
jmp
nop
xor
pushf
adc
sub
and
mov
push
sbb
or
dec
or
test
lahf
sbb
lods
xchg
or
fsubrl
inc
push
rcr
nop
jge
push
jb
in
lock
addr16
push
sahf
or
js
sub
loop
hlt
sbb
pop
imul
lahf
outsb
or
adc
mov
arpl
rcrl
xchg
arpl
push
adc
push
in
pop
inc
jno
sbb
insb
xchg
sub
cmp
or
stos
adc
sub
divb
cmp
and
sub
loope
lods
cld
mov
dec
dec
cwtl
and
mov
js
cmp
cld
lods
out
movsl
jns
mov
daa
sub
shr
ficoml
adc
mov
in
jb
mov
jnp
jmp
neg
jg
or
fcmove
sub
adc
cmp
in
imul
pop
mov
sbb
and
outsl
fcmovb
dec
xchg
xor
outsb
int3
jno,pt
shll
jo
scas
jl
leave
push
das
divb
pushf
lret
ret
jmp
pop
rcrb
clc
aad
adc
gs
inc
adc
inc
cmp
xor
pusha
lret
icebp
jb
dec
xor
push
xor
lock
mov
pusha
and
mov
dec
push
addl
mov
rclb
push
out
cmp
pop
jecxz
push
xchg
ret
lock
ret
loopne
call
bound
test
jg
aaa
push
xchg
jo
mov
jae
mov
and
jle
mov
push
jle
divb
or
push
xchg
xlat
icebp
add
add
out
out
xor
mov
pop
int
rcrb
pop
pop
push
add
add
fmuls
push
jecxz
iret
jge
ret
in
or
fsin
dec
cmpsb
pop
icebp
test
nop
bound
xchg
jno
inc
les
cli
iret
mov
jmp
lret
pop
into
mov
xchg
push
iret
add
pop
std
aad
daa
or
sti
dec
daa
repnz
orps
and
pop
and
outsl
pop
in
insl
xor
lret
cli
cli
aam
repz
cmpsl
lock
add
sti
jecxz
popa
imul
insl
pop
out
arpl
pop
sbb
jns
js
dec
lahf
jb
mov
jae
into
push
mov
jl
inc
div
xor
xor
jo
push
mov
lock
push
adc
fwait
and
mov
xor
rcr
jns
popa
pop
test
mov
scas
mov
inc
jb
xchg
scas
push
and
aad
dec
lcall
push
inc
loope
sti
ja
sbb
out
notb
sub
jb
mov
xchg
sbbl
mov
xor
cmpsl
add
inc
mov
es
jecxz
rorl
sub
adc
shll
and
and
sub
jae,pt
jno
bound
std
in
orb
pop
rcr
in
xor
sub
sub
push
lds
js
outsl
sub
fsubl
aaa
bound
add
xchg
push
shrl
cltd
push
js
fistl
pop
add
and
and
jns
test
icebp
test
xchg
jecxz
and
mov
or
mov
jmp
ds
inc
std
push
inc
pop
testl
inc
xchg
mov
in
add
pop
xchg
xor
or
filds
lea
cmp
adc
lea
sub
fs
cld
test
imul
nop
mov
push
pop
xlat
sub
pop
adc
sti
mov
adc
mov
xlat
xor
out
rorb
jns
aaa
rcrl
mov
js
fwait
aad
xchg
cmp
dec
lret
adc
out
clc
lret
fnstcw
cmp
lock
dec
xor
adc
dec
sti
fwait
pop
adc
add
mov
mov
stc
add
lret
xchg
jbe
inc
nop
fnstenv
jae
jmpw
fs
fld
idivb
adc
pop
outsb
js
shlb
mov
fnsave
sub
rorb
jp
mov
outsl
push
and
push
cmpsl
aas
and
xchg
cmp
cmc
xchg
inc
gs
shll
cmp
inc
or
push
rolb
and
iret
adc
insl
mov
mov
and
mov
xchg
loopne
insb
lea
fs
out
shll
adc
ja
mov
sub
add
into
dec
dec
clc
enter
inc
cli
adc
pop
add
xchg
mov
xlat
fimuls
xor
lahf
cmp
into
outsb
inc
xchg
out
cmp
gs
xor
sahf
in
pusha
aas
pop
sub
int
sbb
mov
mov
push
dec
test
popf
stc
adc
lock
xchg
or
ss
xor
xor
sbb
push
fld
in
xchg
leave
cmp
dec
mov
xchg
dec
dec
xchg
sahf
sbb
int
aam
add
pop
adc
lret
xor
int3
xchg
into
cmp
orb
outsl
mov
xlat
push
mov
mov
jmp
fisttpl
lods
stc
cmp
pusha
lods
repz
arpl
adc
mov
lock
cltd
loope
cmpsl
shll
or
jge
inc
cli
jg
shl
iret
and
mov
repnz
cmc
xlat
jo
addb
inc
insb
decb
and
cltd
add
les
sbb
add
or
cmp
inc
mov
pop
cmp
lea
out
fadd
mov
sub
add
negb
sbb
xchg
push
mov
xlat
dec
mov
cmp
push
and
sahf
mov
mov
negb
sub
shlb
pusha
or
xor
test
cwtl
cmc
frstor
mov
sbb
inc
jmp
jl
add
mov
pop
daa
cli
movl
dec
push
push
sbb
mov
jle
mov
out
shrl
pop
scas
outsl
adcb
rcll
in
test
cmp
sub
push
ror
enter
xchg
call
jg
mov
jmp
push
mov
dec
hlt
jg
test
lock
push
jo
sarb
mov
iret
or
pop
mov
lcall
inc
in
mov
jno
js
xchg
cmpsl
adc
xchg
pminsw
xor
outsl
std
mov
hlt
xor
cmp
pop
cwtl
in
mov
mov
rolb
mov
out
int3
in
out
inc
int3
xchg
shrb
mov
fidivrl
negl
inc
push
mov
and
cmp
pop
insb
xlat
and
in
sahf
xlat
out
push
jns
lods
xorl
es
nop
sti
add
pop
gs
movsb
leave
cli
or
rolb
xchg
jmp
das
push
pop
and
test
mov
xor
jge
fs
cli
xchg
movsb
fcompl
xor
or
fidivs
dec
pop
pop
jno
ror
cmp
sub
shl
mov
sbb
repnz
je
js
pop
or
jb
sti
addr16
lret
push
ljmp
jbe
mov
ja
sub
imul
dec
mov
fs
mov
in
adc
into
adc
in
cmp
out
jle
cmp
arpl
jno
mov
sti
movsl
and
insb
push
sbbl
mov
icebp
xlat
aaa
mov
loope
pop
jbe
out
cs
pop
loope
scas
pop
pop
push
aas
mov
rol
cmpl
daa
mov
push
mov
dec
adc
mov
push
in
mov
jmp
add
add
movsl
stc
inc
popf
lds
repz
int
iret
push
inc
mov
xor
push
add
call
pop
lahf
mov
adc
lea
sahf
xchg
or
cmp
jmp
xchg
cmp
out
lea
outsb
cmp
mov
xor
scas
dec
mov
call
rcrl
cmp
inc
lock
shrb
pop
sbb
sbb
pop
fwait
aam
cli
imul
pop
xor
push
sbb
xor
into
cs
pop
adc
hlt
push
fsubrl
cwtl
dec
das
mov
filds
xchg
mov
add
lret
xor
icebp
pop
roll
daa
es
dec
xor
movsb
jecxz
fisttpll
jge
xchg
inc
and
and
test
outsl
pop
xchg
andb
aas
add
xchg
cmp
jo
mov
push
mov
push
lahf
jmp
mov
outsb
mov
mov
cmpsl
jno
jecxz
jp
pop
push
push
ffreep
sbb
push
icebp
add
int3
pop
mov
sbb
subb
daa
int
les
fs
cmp
and
lcall
jl
inc
neg
ret
int3
repnz
int
in
js
push
enter
mov
daa
add
popa
xchg
mov
ss
push
add
jae
dec
movl
push
jl
out
imul
xchg
test
mov
inc
data16
or
repz
out
or
mov
mov
dec
sahf
or
adc
out
mov
sbb
dec
in
mov
cli
clc
xchg
cmpsb
jge
mov
jae
pop
mov
or
mov
fldt
xor
lods
fiaddl
scas
cwtl
popf
movsb
sub
or
mov
pop
lock
jo
daa
inc
inc
lcall
ja
testb
xchg
rorb
sahf
fsubrl
in
pop
pop
nop
mov
mov
mov
inc
mov
pop
jg
bound
cli
call
dec
ret
pop
sbb
or
stc
mov
mov
fnstsw
leave
and
mov
inc
push
stc
fucomip
adc
les
pop
lret
imul
and
push
scas
sbb
mov
mov
je
in
ret
push
add
sbb
sahf
stc
add
inc
aam
cltd
jo
das
mov
jg
sbb
insb
ret
fwait
ret
pop
jns
mov
test
rcll
movsl
dec
in
cmp
ljmp
add
cmp
addr16
mov
xor
cli
lret
xchg
cli
movsl
or
jae
jp
adc
mov
ret
fs
stos
push
jb
jp
xchg
arpl
fnsave
outsl
jbe
or
jp
mov
xor
xchg
sub
or
adc
out
cmp
inc
dec
dec
add
xor
mov
push
rolb
pop
es
movsl
jge
stos
fidivrl
mov
test
add
add
mov
or
sbb
and
stos
sbbl
outsl
xor
cli
notl
jne
popa
jne
hlt
loop
sbb
fwait
imul
aad
sahf
fsubl
cmp
pop
push
push
mov
pop
test
pusha
adc
daa
cli
pop
lods
insl
push
out
sarb
out
adc
inc
sbb
fisubrs
push
in
mov
and
adcb
push
push
sub
dec
inc
sahf
or
and
imul
data16
mov
cli
xlat
xchg
xor
or
ret
xchg
mov
ja
ja
mov
or
lods
dec
roll
repnz
outsb
push
sub
xor
addr16
xchg
jle
push
sar
cmc
jnp
sbb
test
insb
fwait
xchg
call
xchg
or
cmp
sub
xor
sub
leave
stos
out
sti
sbb
inc
mov
mov
pop
or
lret
lock
lds
mov
inc
les
test
mov
sbb
jo
xchg
sub
and
and
dec
xor
push
lret
shlb
jo
stos
or
xchg
lock
xor
sbb
adc
sbb
in
test
push
sbb
push
adc
mov
rcl
insl
add
imull
xchg
nop
adc
jmp
xlat
addr16
lahf
jnp
insb
stos
arpl
mov
fs
in
data16
fsub
pop
andl
jg
jge
call
cmp
xchg
sub
add
cmpb
cltd
or
inc
and
nop
rorb
insl
outsl
or
jo
mov
in
inc
and
adc
xchg
xchg
adc
fildll
cmc
xchg
ja
jae
and
inc
pop
cltd
pop
jecxz
es
xchg
fiadds
stos
fcoms
mov
ss
in
lcall
xor
nop
cmpl
das
inc
dec
inc
xchg
movsb
insb
lods
cmpsb
dec
push
aam
popa
lds
int
mov
push
mov
mov
popa
es
fsubp
lret
ljmp
outsl
inc
cmp
pop
shlb
icebp
jle
dec
orl
out
inc
loopnew
test
pop
fs
sahf
jno
call
imul
icebp
xchg
out
leave
mov
jg
inc
in
and
pop
in
aam
loop
inc
push
gs
fistl
pop
orl
or
sub
xchg
dec
mov
xchg
roll
je
loopne
mov
mov
add
sbb
ret
stos
test
fsubr
pop
repz
mov
in
jp
ret
mov
iret
push
ret
jns
popf
test
mov
jno
sub
pop
pop
inc
or
sub
test
scas
xchg
nop
add
loope
ret
cwtl
pusha
ficomps
push
and
push
out
out
sarb
dec
jnp
jp
fwait
outsb
pop
mov
and
jb
adc
fdivs
mov
and
stc
or
cmp
push
or
movsb
sbb
mov
ss
loop
or
and
sub
pop
cwtl
sub
mul
fs
lock
pop
pushf
pusha
dec
pop
dec
xchg
incb
dec
inc
addr16
int
cmp
sbb
stos
mov
outsb
or
adc
pop
sub
pop
dec
push
out
shll
repnz
pushf
fldt
inc
xchg
lds
mov
jp
and
dec
mov
hlt
mov
mov
and
cmp
mov
rcrl
in
nop
arpl
fimuls
ret
dec
psrld
mov
adc
rcrl
xchg
filds
test
dec
cmpsl
sub
sub
mov
fists
xor
xchg
out
dec
repnz
daa
jns
cmp
adc
lret
pop
jnp
ret
pop
sbb
cmpsl
sbb
xchg
xchg
repnz
jo
jnp
repnz
push
xchg
test
imul
int3
les
mov
test
lcall
jle
cmpsb
xchg
mov
cli
icebp
popf
and
jge
inc
cmpsl
pop
mov
ss
popf
fstl
das
add
cmpsl
jg
cwtl
mov
push
or
or
jne
dec
insb
adc
pop
xchg
sub
jp
add
mov
mov
dec
cmc
ss
mov
sub
insl
popa
incb
sar
je
sub
adcl
or
popa
or
imul
cmp
dec
cmpsl
cmp
dec
mov
or
pop
xlat
fs
lods
ret
int
decl
daa
pop
add
scas
daa
shlb
pop
cmp
push
and
cmp
adc
mov
test
xchg
adc
push
lods
dec
mov
cli
test
data16
sub
fwait
cmp
mov
pop
out
dec
je
xchg
add
into
orl
ljmp
sub
add
arpl
cmpsl
and
sub
sahf
dec
mov
pop
push
xchg
sbb
fsubrs
loopne,pt
into
jmp
adc
mov
pop
and
jmp
ja
andl
or
imul
jecxz
addl
push
in
cmpsb
std
push
xchg
jne
cmp
enter
mov
fsubrl
sbb
jns
or
das
cs
loop
fmull
in
sub
pop
adc
pop
cld
mov
test
push
jnp
fnstenv
cmp
sbb
push
sbb
pop
inc
jl
call
xor
loope
cmp
mov
mov
aam
sbb
sbb
jp
fisttpll
or
ret
outsb
aas
sbb
xor
dec
sbb
loopne
fstpt
mov
fwait
push
mov
ret
push
pop
push
repz
cmc
push
push
mov
ljmp
hlt
mov
mov
jae
mov
xchg
dec
hlt
stos
fisubs
mov
ss
roll
mov
sub
push
or
mov
ret
test
rcrl
xchg
ss
mov
or
out
fwait
dec
imul
hlt
popa
add
inc
cmp
jno
lret
shr
sub
and
jle
mov
jecxz
add
push
xchg
sarb
sbb
mov
push
movsl
cwtl
arpl
mov
sbb
push
es
imul
aad
dec
mov
int3
xor
addr16
cmp
fldl
inc
pop
das
and
jnp
movl
push
insl
push
sub
sbb
fistps
pop
das
cs
mov
fldt
into
arpl
pop
sbb
rep
and
je
mov
mov
test
sub
int3
cmpsl
ja
pop
mov
shll
shll
push
nop
jbe
jo
aad
das
je
roll
out
or
mov
dec
push
cltd
out
aaa
dec
cmp
push
fwait
mov
add
scas
mov
xor
loope
xor
adc
or
fistl
in
xor
in
inc
data16
pop
cltd
loopne
adc
push
mov
fwait
cmc
enter
mov
mov
jbe
and
mov
icebp
insl
inc
cmp
aad
mov
iret
push
cmp
lds
lock
and
push
fisubs
arpl
imul
das
inc
imul
rcl
xchg
lds
lea
inc
mov
std
test
cmpsb
loop
jo
push
jae
stos
mov
insl
xor
mov
xchg
push
clc
dec
mov
test
inc
or
jmp
sub
int3
cli
dec
in
mov
jmp
adc
xchg
jne
push
nop
addr16
add
adc
movsl
data16
pop
sahf
subb
arpl
iret
push
negl
pop
loop
sub
adcl
pop
les
ret
dec
and
cltd
or
out
cmp
je
lahf
mov
mov
ss
and
aad
fsubrs
adc
inc
push
jge
outsl
in
pop
outsl
lret
or
imul
dec
mov
mov
sbb
pop
mov
fstps
outsl
or
xor
scas
xor
test
dec
out
or
loope
adc
xchg
push
loope
cmc
fstps
xchg
xchg
gs
mov
pop
or
pop
sbb
jecxz
jmp
sbb
or
sbb
pop
sbb
adc
in
cmp
pusha
push
test
push
stc
cs
popf
aam
or
push
sub
lds
mov
adc
cwtl
int3
xor
lret
dec
xchg
cmpl
push
repnz
ja
sar
dec
imul
mov
xchg
inc
test
lcall
sbb
dec
fmulp
dec
aad
pop
insl
mov
and
mov
mov
pavgb
ja
jae
jb
mov
sbb
fistps
mov
mov
pop
pop
aam
sbb
mov
insb
je
call
scas
enter
cs
push
xorl
mov
sahf
inc
mov
xchg
outsb
stos
stos
insl
jmp
mov
add
push
mov
loope
cmpsl
loopne
ficoml
into
notl
les
push
or
jb
jp
cmp
adc
aam
cmp
imulb
or
dec
loope
jno
push
lea
sub
inc
push
dec
cmp
aaa
mov
pop
push
loopne
add
add
xor
dec
cmp
into
xchg
sub
lahf
scas
jmp
repz
xchg
jmp
add
push
inc
mov
mov
out
mov
fadd
dec
nop
adc
addb
aam
mov
call
jnp
in
enter
pop
test
out
mov
es
cmc
pusha
rcrb
mov
mov
into
popa
xor
add
imulb
test
dec
jecxz
dec
mov
scas
mov
mov
lock
sub
je
pop
popa
js
mov
add
add
pop
xchg
cmp
inc
xchg
xchg
outsb
jmp
inc
cmp
xlat
psrlw
pop
sub
inc
sbb
in
movsb
imul
and
push
dec
lods
sub
mov
xchg
sbb
and
int
nop
cmp
mov
and
ret
in
imul
mov
jl
lahf
std
adc
repz
out
fwait
xor
aad
jne
cmpsl
addr16
mov
jge
cltd
leave
sub
cmc
mov
pop
sbb
ret
xchg
ficompl
push
cmpsb
std
sbb
pop
or
bound
mov
fdivl
scas
popf
and
cmpsl
inc
into
xlat
subb
xchg
jo
push
insb
mov
inc
lcall
jns
sub
cmp
enter
insb
adc
fcomps
or
jg
imul
mov
es
push
pusha
leave
mov
adc
sahf
mov
mov
xor
flds
cmpsl
mov
push
mov
and
movsl
fs
xlat
dec
aas
mov
cli
mov
push
cmp
sahf
lret
dec
scas
mov
pop
sub
dec
test
mov
mov
mov
inc
les
pop
ds
pop
xchg
out
jmp
icebp
mov
cmpsl
loop
pop
insl
movsl
sbb
add
push
shrl
icebp
imul
push
jns
movsl
cs
stc
push
daa
dec
jnp
pop
sarb
push
sti
int3
adc
into
push
adc
pop
shlb
sbb
mov
mov
cwtl
sub
data16
jp
outsb
mov
leave
xor
inc
lret
or
push
shl
sbb
push
sbb
fstps
in
add
fs
dec
pop
jo
push
int3
adc
and
ficoml
imul
divl
pop
inc
enter
mov
shr
jle
mov
lahf
jne
sub
xchg
or
jmp
cmp
adc
enter
in
fiaddl
out
mov
mov
int3
mov
or
jge
sub
cmp
aam
cmpsl
pop
arpl
out
and
pop
fnstsw
imul
out
test
adc
inc
in
adc
fwait
pop
inc
push
cli
mov
cmpsl
push
pop
jae
jp
push
or
rcrl
dec
shlb
dec
pop
popf
adc
dec
scas
mov
xchg
jge
fmul
aam
repnz
xor
addr16
dec
cwtl
mov
mov
push
aas
sbb
hlt
aad
sbb
dec
xor
xchg
and
loopne
insb
ficoms
adc
mull
out
mov
dec
scas
mov
insb
add
imul
adc
jbe
outsl
iret
inc
cmp
negb
cmp
dec
pop
decl
cltd
adc
arpl
pop
sbb
lods
std
dec
xorb
adc
lcall
and
mov
in
sub
sbb
pusha
imull
fwait
mov
and
scas
repnz
pop
int3
fldcw
ljmp
jge
rclb
and
jb
jp
jl
cmpsl
jo
jns
ss
push
repz
cmp
cmc
fisttps
out
jle
xor
cmp
dec
pop
pop
lods
int3
daa
xchg
pusha
sub
adc
pop
fdivs
xchg
mov
jg
cli
fs
push
jbe
sbb
or
lea
aaa
mov
adc
lret
ds
and
cmpl
pop
xor
popa
std
mov
mov
outsl
pop
mov
pushf
popl
lods
xchg
pop
cmpsl
scas
inc
jg
adc
jecxz
and
rcll
or
inc
les
loope
imul
mov
jmp
or
mov
lcall
jo
push
notb
or
out
mov
pop
das
lods
out
loopne
cmp
dec
mov
sub
mov
push
aas
lock
ret
dec
xchg
pop
sbb
push
inc
repnz
std
out
and
dec
cmp
mov
scas
mov
jmp
cmp
outsl
xor
mov
xlat
mov
xchg
icebp
or
testb
sbb
je
add
adc
ja
push
add
or
adc
cmpsb
push
lods
out
xorb
je
cmp
addb
jp
mov
mov
jo
aaa
pushf
bswap
dec
push
add
daa
rol
pushf
ja
in
and
pop
sbb
pop
push
push
or
imull
cmpsb
xchg
faddl
adcb
pop
into
xchg
and
cmp
aaa
sbb
mov
das
xchg
mov
xchg
outsl
int3
test
out
or
mov
shl
arpl
mov
out
mov
xor
or
call
dec
add
push
outsb
lock
add
aad
dec
aam
sub
stos
test
ds
xchg
imul
sub
inc
jae
int3
jbe
push
jb
jp
xchg
xchg
scas
sbb
cmpsb
jae
shll
adc
pslld
mov
stc
xlat
and
sub
cltd
clc
mov
mov
dec
outsl
sub
fbstp
popa
fldpi
jb,pn
push
fisttpll
cmp
out
pusha
sub
lds
loop
divl
inc
pop
dec
sub
repz
jo
out
fwait
sbb
add
xor
cmp
sbb
test
xor
sbb
inc
or
nop
cmp
pop
rcl
sub
push
mov
pop
fldl
pop
outsl
and
xor
in
mov
stos
stc
ds
xchg
or
cwtl
mov
sub
ret
pop
dec
adc
fnstcw
in
add
pop
shll
and
lea
sub
add
push
pop
das
dec
clc
imul
xchg
sbb
pop
or
sub
inc
popf
test
lods
pop
das
cs
mov
mov
iret
sub
push
mov
xchg
sbb
imul
push
leave
cmp
fidivrs
nop
call
or
mov
loopne
sub
xchg
jno
test
sub
scas
jg
ljmp
test
pop
adc
rorb
add
arpl
jmp
and
aaa
in
adc
stos
xor
stos
jns
adc
pushl
dec
fisubrl
push
repz
push
pop
inc
xchg
inc
fnstenv
mov
push
dec
enter
lods
int
push
movsl
mov
lcall
mov
sub
fs
mov
add
cmp
test
les
push
mov
fiadds
add
mov
loope
xchg
sbb
adc
je
xor
pop
dec
mov
arpl
das
dec
mov
xor
rolb
das
out
push
popf
fistl
push
stc
push
dec
or
into
pop
test
xchg
out
out
mov
xchg
or
pop
mov
add
jns
mov
or
cmp
clc
xchg
movsl
jns
call
ret
imul
inc
fmuls
gs
icebp
or
add
lret
aam
add
dec
add
mov
lock
sbb
addr16
sar
mov
pusha
pop
int3
sbb
out
jge
mov
imul
insl
mov
sahf
pop
pop
in
inc
jg
inc
gs
cmc
add
xor
in
loope
xlat
jmp
dec
cwtl
mov
jle,pt
mov
repnz
lret
push
mov
sub
ja
jp
ja
inc
mov
xchg
daa
rclb
xor
sti
popf
jle
lret
addl
fdivs
incl
aam
fucom
test
or
jge
pop
sub
or
pop
flds
or
lds
sti
mov
cmp
cwtl
fld
ficompl
stc
jp
xchg
imul
jne
mov
popf
fists
xchg
cmp
in
addr16
xchg
dec
or
push
aam
ficoms
repz
int3
arpl
movsl
fisubl
push
adc
push
dec
sub
ret
in
and
test
scas
cli
sub
and
mov
gs
dec
pushf
mov
push
adc
inc
mov
pop
add
add
in
adc
xor
xchg
mulb
nop
mov
mov
into
push
pop
mov
xchg
mov
pop
fcomp
cmp
movsb
leave
aas
insl
out
sub
push
es
mov
icebp
loop
mov
jo
shr
hlt
aam
mov
push
sub
out
mov
popa
jle
das
xchg
mov
sbb
rorl
add
enter
dec
imul
mov
hlt
mov
and
fcmove
cmpsl
in
stos
adc
xlat
outsb
or
mov
sbb
sbb
cmp
push
sub
mov
mov
mov
cmp
push
ljmp
adc
sbb
imul
adc
cs
mov
dec
je
dec
add
lret
sub
xchg
lret
lds
mov
adc
inc
test
push
imul
decb
pop
mov
cs
inc
jle
icebp
jae
pop
aad
dec
adc
and
mov
mov
xlat
cmpsb
ret
cmp
dec
lds
pop
sarl
mov
shrb
pop
and
inc
mov
xor
scas
loop
cmp
cmp
gs
std
aaa
mov
bound
out
xlat
fisubl
arpl
sub
or
cmp
lds
mov
xor
scas
imul
jb
and
fistl
adc
lcall
or
pop
add
xor
pop
shl
push
subl
mov
sub
and
mov
gs
stos
jmp
and
ja
inc
fisubrs
mov
lret
inc
jbe
insb
and
sbbb
inc
cld
pusha
stos
lcall
push
mov
push
adc
hlt
aaa
mov
inc
movsb
into
cld
popa
or
daa
nop
dec
xlat
jmp
lcall
loope
add
or
mov
jno
and
cmp
sarl
clc
cs
negb
and
fisubs
push
sub
push
mov
adc
adc
xchg
jnp
aas
or
pop
mov
out
mov
dec
adc
xchg
insb
push
xor
movsb
into
jmp
dec
movsl
and
and
xchg
jmp
jb
cmp
push
test
push
repnz
fiadds
push
cld
lods
fwait
sub
test
das
and
test
lods
daa
mov
pop
adc
pushf
and
movsb
jge
cmpsb
mov
shl
xchg
test
mov
push
pop
test
xor
call
jecxz
push
decl
movsl
setle
dec
shr
aad
sbb
fyl2xp1
outsl
orb
cmp
lret
sbb
jo
loopne
in
scas
mov
mov
mov
int3
jns
mov
dec
jns
dec
mov
sub
into
test
push
testl
pop
aad
inc
inc
pusha
mov
and
and
mov
mov
idivl
addr16
movsb
mov
jecxz
dec
das
mov
movsb
enter
pop
mov
lret
int3
lret
cld
sbb
mov
adc
pop
mov
shll
and
gs
pop
xor
cmp
push
iret
ljmp
cwtl
popa
xchg
int3
cmp
add
test
std
xchg
push
scas
add
xor
aam
inc
sbb
sbb
inc
decl
mov
add
ror
loop
sbbb
jno
xchg
push
sbb
lock
pop
idiv
fstpt
pop
adc
outsl
call
hlt
lret
pop
decl
je
int
loop
adc
fdivr
mov
cmp
and
stos
or
rcr
jns
cltd
xorl
clts
int
add
mov
popa
js
pop
imul
inc
pushf
enter
lea
push
cmp
mov
das
loopne
sbb
xor
sub
ret
mov
mov
xorb
scas
push
pop
outsb
into
mov
nop
add
xor
inc
pop
jg
sbb
fsubp
adc
lods
pop
arpl
push
in
sub
or
loop
sbb
xor
popf
push
ret
xor
test
insl
xor
fninit
push
pop
hlt
dec
mov
popf
xor
stc
push
pop
add
mov
test
mov
fbstp
ja
mov
outsb
daa
dec
aaa
pop
icebp
repz
std
rcrb
cmc
in
or
loop
fimuls
push
lods
sti
xor
mov
xor
mov
inc
mov
jp
and
pusha
lret
cmp
nop
out
fistl
pop
fwait
or
fisubrl
mov
int
adc
dec
adc
mov
arpl
repnz
pop
out
lahf
jae
pop
ret
bswap
and
pop
vmovq
sahf
mov
leave
xor
aas
xor
adc
loopne
enter
bound
dec
push
stc
sti
rcll
lea
cmpsl
inc
fs
dec
shrb
daa
fstpl
pop
test
pop
mov
shlb
or
lret
mov
pop
mov
imul
mov
fwait
cmpb
push
scas
in
add
jge
push
mov
push
imul
push
cmp
mov
sub
dec
repz
bound
adc
push
mov
fwait
jecxz
js
gs
xchg
aaa
cltd
pop
fbld
pop
cmc
sub
pop
inc
repz
mull
fistpl
push
add
je
call
int
in
fldl
test
and
leave
push
scas
out
sar
je
pop
inc
sub
stos
dec
xchg
xchg
dec
test
mov
int3
cmpsl
movsl
xchg
outsb
jp
mov
data16
sub
pop
outsb
cli
cld
cmpl
insl
xor
stc
mov
fs
gs
pop
lods
popa
popf
or
popf
roll
push
mov
shrb
inc
cmp
push
push
mov
cmp
sub
enter
and
xchg
push
pop
xor
repz
cmp
into
stos
cvtps2pd
fs
lods
lret
jmp
pop
popa
pop
scas
xor
sbb
iret
adc
pop
test
xchg
cmp
lcall
pop
data16
push
or
xor
pop
add
ljmp
sub
push
aas
fdivs
fnsave
popa
in
add
jae
data16
mov
in
adc
shll
inc
mov
fs
lret
sti
adc
lock
add
ja
sub
push
cmpsb
pop
outsb
ret
xchg
movsb
and
mov
xchg
push
xchg
push
mov
add
sub
adc
jb
xchg
adc
lahf
xchg
xor
aam
dec
and
lret
inc
push
sar
mov
fbstp
push
stos
ret
cmp
shlb
cmp
add
lods
jo
stc
ret
fimuls
aad
cmp
xchg
adc
shl
int3
sbb
stc
lret
test
push
add
mov
loop
mov
mov
xlat
pop
popf
dec
push
inc
dec
mov
push
add
fisubs
outsl
lods
cli
jge
sbb
out
cmc
mov
mov
cmp
dec
sub
xor
mov
les
add
rorl
es
cli
pusha
sub
sub
dec
sub
call
rcrb
push
push
jg
aas
stos
mov
inc
fs
mov
and
out
outsl
mov
mov
xlat
popa
adc
fwait
lods
xor
inc
gs
xchg
cmp
add
clc
std
dec
or
dec
ret
pushf
lret
jno
jb
jecxz
mov
ljmp
popf
into
push
mov
fists
fs
std
inc
fimuls
pusha
add
xchg
aam
sbb
vpshufhw
sub
fimuls
add
xchg
insl
xor
call
fwait
dec
mov
cmp
pop
sbb
fs
mov
in
pop
jg
pop
in
push
mov
mov
std
lahf
push
fsqrt
adc
xor
pusha
stos
push
insb
cmp
lds
mov
xchg
loope
ds
mov
cwtl
fbld
jne
aam
or
rorb
dec
call
add
lods
mov
movaps
aam
bsr
jnp
mov
push
sbb
pushf
idivb
jne
mov
pop
sahf
mov
adc
or
cld
sub
enter
xchg
push
call
adc
outsb
jle
jno
jmp
sbb
fisttps
mov
sti
in
rorb
adc
mov
push
cmp
jmp
jg
scas
mov
aam
jg
xor
aaa
cmpb
cmp
lock
imul
jg
sahf
pop
pop
cmpsb
orb
lcall
rcll
pusha
mov
jno
sbb
cltd
pop
lret
mov
stc
rdmsr
add
and
daa
lods
mov
add
gs
cltd
dec
lods
fcomp
mov
fdivrs
jl
inc
mov
lds
adc
loope
adc
in
and
repnz
repz
inc
inc
shll
sub
xchg
ret
out
and
xor
inc
sbb
xchg
insb
clc
add
pop
push
inc
into
movsb
js
adc
cmp
push
pop
fiaddl
inc
rep
sbb
stos
mov
in
cltd
adc
dec
cmc
jmp
xlat
adc
dec
xor
add
lret
adc
aam
fisttpl
pop
mov
stos
xor
out
lods
jl
sbb
jae
dec
xchg
xchg
ffreep
es
xchg
nop
aas
mov
ss
mov
stos
imul
fstpt
ret
xlat
leave
lcall
aam
push
dec
jmp
adc
or
mov
cld
mov
adc
jg
stos
out
enter
mov
jb
js
push
nop
mov
jo
cmp
gs
jae
insb
push
adc
repz
loope
movsb
dec
sub
mov
ret
cmpsl
call
dec
movsl
pop
or
enter
sbb
jno
hlt
pop
jmp
out
nop
insl
fbld
inc
fwait
push
xchg
fbstp
movsl
ds
out
and
cmpl
jnp
adc
popf
and
aaa
adc
leave
xchg
sub
mov
gs
mov
jmp
sysret
cmp
dec
push
popa
stc
pop
push
stos
mov
test
dec
push
xor
ljmp
xchg
add
mov
jecxz
popf
lret
faddp
xchg
fiaddl
sub
add
and
lret
inc
rcrb
fdiv
or
jbe
ret
dec
mov
and
fistl
jmp
cmp
adc
jp
mov
mov
xor
popf
sbb
insl
cmp
rorl
dec
push
cmpsb
sub
stc
fcmove
addb
insl
mov
cmc
leave
adc
mov
pop
pop
pushf
lahf
hlt
aam
mov
dec
aas
adc
xchg
add
xchg
pop
fadds
shlb
mov
add
mov
mov
jae
xlat
xor
rcll
lds
nop
mov
lret
add
in
inc
in
xorb
mov
bound
cli
xchg
sbbl
mov
push
sbb
adc
shlb
mov
lret
lahf
inc
xor
push
les
mov
out
sbb
or
bnd
push
cmp
jnp
and
and
or
out
xchg
xchg
xchg
pop
or
addr16
das
insb
dec
xor
ja
mov
lock
jae
mov
cltd
lahf
test
mov
xor
out
sbb
es
mov
in
mov
jge
lock
adc
in
movsl
push
sbb
push
lahf
xlat
xor
dec
je
xchg
or
shlb
mov
lret
adc
pop
dec
mov
mov
inc
cmc
jae
pop
imul
inc
mov
push
fsubrs
repz
sub
cmpsb
out
aam
cmp
xor
pop
insb
fdivs
fsub
xor
sbb
aad
clc
add
out
inc
mov
xor
ss
fidivrl
roll
lret
ja
and
inc
imul
movsb
dec
stos
cmpsl
cmpsb
sbb
fsubrl
test
push
jno
inc
lret
leave
or
sbb
fmul
lods
push
sbbb
pop
cli
ret
mov
jl
sti
mov
xchg
out
fildll
test
jecxz
pop
mov
test
mov
bound
mov
cwtl
mov
dec
lods
out
pusha
cltd
mov
popf
outsl
mov
pop
movsl
stos
lret
lret
sbb
pop
xor
in
mov
out
xchg
add
inc
mov
add
dec
fdivrp
arpl
or
sbb
lods
sub
xor
mov
pop
lods
inc
or
std
int3
fistpl
push
mov
add
push
cmp
insb
jmp
push
rcrb
mov
dec
pushf
dec
add
add
lock
pop
sbb
ret
cmp
insb
mov
fildl
cmpsb
into
sub
sbb
in
es
flds
cmc
mov
inc
mov
enter
lea
push
pop
jmp
cmpsl
xor
mov
pop
sub
icebp
pop
int3
lock
dec
pop
adc
mov
cli
mov
sbb
sbb
ds
sbbb
inc
mov
xor
jne
jnp
jae
cli
cmp
mov
cmp
lret
cmp
and
test
mov
cmp
out
imul
mov
lretw
mov
add
dec
lock
mov
in
bound
mov
ret
mov
mov
adc
insl
daa
jne
push
xor
dec
sbb
push
out
sub
lahf
dec
rcll
sub
xor
rclb
cwtl
mov
in
jb
inc
adc
or
xchg
ds
push
test
mov
jno
pop
enter
insl
cmp
dec
lcall
push
jl
stos
repz
stc
push
jnp
jb
rcrl
cld
push
xchg
shl
xchg
cmpb
pushf
cmp
sarb
cli
or
test
js
dec
shll
repnz
pop
andl
jmp
call
paddusb
fistpl
js
pop
gs
arpl
movsl
shlb
aas
push
sub
push
mov
xchg
fwait
xlat
pop
roll
mov
fistps
xchg
jg
lea
je
sub
and
outsl
cmpsb
pop
clc
cmpsl
jge
dec
mov
jnp
ret
mov
add
daa
mov
inc
repz
lret
scas
mov
mov
cmp
sti
mov
test
inc
cmp
ds
pusha
sub
movsb
insl
inc
xchg
mov
mov
idiv
push
sub
int3
movsb
or
ds
mov
int3
mov
ret
push
sbbb
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
.byte
mov
adc
das
stos
or
out
test
pop
sub
mov
dec
das
stos
or
mov
jae
das
stos
or
das
stos
or
mov
and
cmp
jmp
inc
mov
clc
stos
jp
jg
scas
adc
jns
adc
sub
push
dec
inc
adc
inc
dec
out
lret
sbb
jmp
mov
jo
pop
sbb
mov
insb
mov
dec
pop
add
xchg
bound
sbb
rcrl
cmpsb
mov
adc
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
or
das
stos
.byte
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
dec
or
cmp
dec
mov
xlat
in
jbe
inc
push
mov
iret
sbbb
push
inc
aad
fcmovbe
or
rclb
add
push
inc
aad
fcmovbe
or
push
inc
aad
fcmovbe
or
mov
add
pushf
pop
add
jmp
call
stos
into
add
pop
jl
add
mov
add
dec
das
pop
lea
out
push
lds
xor
cmpsl
inc
leave
cs
movsl
leave
and
int
outsb
leave
mov
jecxz
in
pop
mov
adc
mov
daa
mov
mov
idivl
adc
mov
enter
adc
ja
imul
out
xor
cld
xor
rclb
and
jmp
inc
xchg
jle
lcall
dec
cld
cmc
mov
out
cmp
push
fbld
lock
pushf
xor
inc
ja
inc
das
test
andb
das
popl
fcmovnb
adc
mov
std
hlt
std
ficomps
loopne
lret
je
mov
xlat
dec
loop
rcll
fdivs
insl
jae
mov
jno
xchg
test
or
mov
and
lret
xchg
bound
mov
or
mov
scas
or
test
dec
ficoms
inc
and
in
push
cli
std
lock
sbb
xchg
jl
pop
mov
pop
rorl
fiadds
add
jnp
push
sbb
arpl
fimuls
hlt
pop
dec
xor
add
faddp
in
pop
sbb
ror
ret
sbb
les
and
xchg
cmpsb
jge
xlat
rolb
add
mov
and
js
inc
ror
shl
aad
mov
insl
sub
push
dec
cmpsb
idivb
xchg
cmp
loope
and
and
mov
push
enter
test
xor
add
add
pop
outsl
dec
and
cltd
lcall
daa
les
fstl
push
jecxz
lret
or
in
jb
pop
push
fwait
jno
sbb
xchg
cmp
add
dec
mov
mov
xor
fcomip
shr
and
xchg
sub
shlb
pop
rorl
into
and
cmp
adc
popf
fnstcw
test
mov
sub
mov
mov
sub
sbb
xchg
mov
pop
lret
mov
iret
mov
pop
leave
jecxz
orb
dec
cmp
shrl
pusha
iret
ss
fistl
adc
add
or
cmp
jmp
imul
iret
insl
push
cmp
imul
mov
fcoms
scas
out
jo
adc
cmp
leave
push
icebp
and
or
adc
ljmp
lahf
aaa
int
mov
xor
mov
xor
mov
jecxz
sahf
jp
pop
fisubl
add
add
fdivs
test
mov
sbb
xchg
ja
stc
icebp
cmp
mov
mov
xchg
or
mov
leave
lds
sub
mov
jne
nop
mov
and
add
pop
mov
mov
outsb
mov
fdivr
fcmovbe
cmc
out
or
pushf
sub
cmp
sub
mov
cld
mov
xchg
or
push
mov
test
int
pushf
andb
addl
subb
add
xchg
push
in
loop
or
push
inc
sahf
clc
adc
jp
dec
or
fcom
push
mov
loop
mov
movsb
aas
jmp
out
jne
or
dec
lea
loope
ss
cmp
ret
push
push
fdivl
push
and
jle
jge
xor
cmp
push
xchg
ds
stos
imul
sbb
das
subb
outsl
jo
sarl
fisttps
lods
sbb
stc
inc
sub
fisttpll
sub
jno
inc
sub
mov
xchg
xchg
dec
dec
xor
es
cmpsb
scas
sub
dec
sbb
out
push
xchg
mov
shr
popf
enter
popf
loope
repnz
jae
dec
iret
notl
scas
adc
notb
xchg
inc
pop
gs
jmp
mov
sub
aaa
testb
jmp
cmp
mov
enter
ds
xchg
nop
jo
fisubl
jbe
mov
pop
jae
movsl
lock
cli
fwait
outsl
xchg
ror
mov
dec
sub
push
dec
lret
lret
outsl
jne
pop
stc
mov
xchg
dec
sub
cli
mov
out
xchg
sbb
push
adc
das
jecxz
lcall
lcall
js
mov
push
xchg
std
xor
dec
xor
push
add
lahf
movsl
in
inc
mov
sbb
mov
int3
inc
lret
ljmp
orl
aaa
push
fistl
mov
in
rorl
sbb
jecxz
mov
pop
sub
cmp
sbb
stos
nop
dec
out
xchg
cmp
or
lahf
jbe
mov
jl
subl
rcrl
in
fsubrp
jbe
cmp
out
push
xchg
fcomps
cmpsb
pop
xor
push
push
push
mov
stos
adc
xchg
addr16
sbb
stc
mov
or
fcoml
xchg
movsb
lret
pop
scas
test
pop
cwtl
movsl
inc
outsl
inc
jmp
cmpsl
jge
dec
mov
dec
sub
rcrb
xchg
into
xor
push
add
sub
lcall
daa
shlb
or
leave
jae
dec
xchg
or
or
das
lods
test
mov
fldenv
mov
add
or
push
std
dec
and
push
sbb
divl
mov
shr
mov
and
repnz
sbb
ja
loope
pop
jb
int
in
pusha
sbb
jmp
daa
add
sbb
enter
or
mov
jbe
sahf
mul
xchg
sub
add
fwait
pop
xchg
out
std
fwait
in
je
or
jbe
inc
out
push
inc
mov
or
test
or
int3
imul
stos
pushf
sete
orl
jle
inc
sbb
lahf
mov
mov
or
out
jo
test
push
mov
fiadds
adc
mov
or
fcomi
cmpsb
loope
dec
push
dec
ret
fwait
sub
repnz
cmp
into
lret
mov
jmp
aas
mov
outsb
out
sub
inc
sub
push
mov
test
sarl
inc
outsl
jnp
in
aas
adc
mov
aam
in
xchg
insl
mov
shrl
out
cwtl
add
push
push
xchg
add
fistps
fisubrl
hlt
mov
push
cmp
enter
lods
jge
xchg
pop
rolb
test
xchg
cmp
insl
out
pop
mov
test
xchg
xchg
push
dec
mov
aas
and
es
decl
ret
inc
test
test
mov
data16
push
xchg
ss
ljmp
sbb
insl
sarl
adc
test
test
or
cmpsl
sti
testb
xor
rorb
xchg
icebp
test
inc
or
sub
xchg
fstpl
jle
push
mov
insl
and
insb
cmp
mov
push
aaa
inc
sub
jbe
jne
imul
cs
mov
xchg
push
movsb
cmp
lcall
pusha
repz
xchg
cli
and
ss
out
and
andb
mov
push
les
xchg
movsb
mov
fbstp
nop
jmp
xchg
jmp
inc
mov
jb
test
inc
inc
test
xchg
dec
outsb
xor
pop
data16
dec
adc
push
mov
adc
in
adc
outsl
movsl
mov
testb
movsb
xchg
pusha
test
or
iret
pop
pop
data16
clc
pop
push
add
cmpsb
jb
inc
or
cmp
inc
inc
add
movsl
cmp
mov
cmp
and
int3
in
cs
stos
orl
test
mov
sbb
add
sti
cmp
in
shlb
arpl
nop
and
and
imul
push
jb
xchg
cmp
mov
lahf
add
mov
sarb
repnz
xor
pop
in
xor
xorl
xor
add
jno
cmp
mov
mov
add
push
mov
daa
int3
loope
pusha
cmpsl
adc
stc
cs
lret
mov
xchg
pop
sub
rclb
or
out
mov
pop
jno
jae
fwait
jmp
jle
ret
or
add
pop
roll
add
jo
rcrb
ja
inc
add
jmp
mov
mov
adc
in
sub
adc
push
xchg
and
inc
jmp
mov
mov
mov
sub
jno
or
sub
and
in
or
sbbl
or
pop
inc
test
push
jne
stos
dec
push
sbb
insl
mov
jno
sbb
inc
mov
orb
daa
adc
ffreep
push
pop
int3
xor
pusha
sbb
ficoml
xor
scas
fistpl
mov
add
cmp
nop
loopne
mov
dec
roll
sbb
sahf
lods
ds
push
in
mov
lahf
fnstcw
cmpsl
sbb
js
inc
adc
std
add
leave
push
lret
xchg
gs
or
or
push
adc
negb
test
sti
dec
sbb
dec
cmp
std
clc
pop
jnp
jae
and
mov
pop
xor
push
cmp
sub
dec
popa
dec
fnstenv
mov
test
push
das
rcrb
sbb
dec
adc
xor
movsb
sbb
fnstenv
fadd
add
loop
iret
sub
or
inc
cmp
or
cltd
jle
popf
mov
std
outsl
stos
push
and
icebp
call
xchg
decl
cmp
ret
in
mov
fiaddl
jl
repz
pop
das
jae
mov
push
lahf
pop
cwtl
lock
and
cmp
jns
sbb
add
movsl
push
pop
mov
fists
xor
push
ret
ja
adc
push
out
jno
push
fidivl
jo
mul
push
test
not
mov
push
dec
sbb
rclb
push
lds
movsl
inc
cwtl
fisubs
push
ja
push
popa
adc
nop
mov
add
maxps
clc
xor
imul
push
mov
pop
xor
addb
test
fsubs
adc
popa
out
fstpt
xchg
das
or
repz
shll
push
mov
jl
std
shlb
dec
add
in
or
and
mov
loopne,pn
loop
jp
dec
int
fcoml
insb
or
mov
pop
jp
cld
push
inc
ret
lahf
xchg
jmp
jae
mov
push
fcomi
fisubrl
inc
insl
push
xchg
mov
and
push
sbb
pop
mov
mov
mov
pop
jno
sbb
xchg
mov
bound
push
pop
lds
popa
in
xchg
cmp
aas
nop
mov
dec
divb
mov
sbb
pop
sbb
sahf
out
int3
aad
adc
inc
test
xlat
mov
into
xchg
push
pop
fbstp
add
add
mov
push
arpl
and
repnz
pop
add
movsb
fwait
xchg
xchg
adc
js
aas
inc
push
mov
popa
or
push
cmp
imul
divb
cs
mov
idivl
dec
mov
fidivs
adc
in
loopne
push
xor
sub
es
xchg
pop
inc
cmp
cmp
sarl
sbb
mov
ss
aaa
out
xorps
std
movsb
jnp
sub
sbb
adc
stos
repnz
sub
cmp
loope
push
mov
shll
fucom
dec
xchg
loop
int3
xchg
or
mov
dec
cltd
fwait
xchg
and
sub
add
mov
and
scas
stc
psllq
incl
jp
adc
rolb
jmp
rorb
xor
fcoml
mov
xchg
cmpsb
cltd
xchg
xor
push
js
inc
push
in
cmpsb
jb
dec
push
daa
daa
imul
jecxz
mov
adcb
pop
lret
je
outsl
scas
movsb
push
jns
out
jbe
pop
fwait
ret
andl
add
lds
fisubrl
ds
jge
jbe
sbb
sub
fs
push
int3
sub
xchg
fisttps
movsb
cmp
mov
fs
lock
mov
jne
movsb
mov
push
lods
aad
in
aad
mov
popa
neg
movsl
add
bound
aaa
dec
addr16
push
jns
push
out
je
in
mov
jbe
movsl
aad
jb
sub
repz
iret
shll
mov
jae
ja
mov
and
les
jl
jo
dec
enter
cmp
sti
cmp
adc
lock
and
incb
mov
test
in
mov
dec
movsl
lea
hlt
cs
or
adc
lds
push
shlb
mov
mov
mov
rcrb
mov
jne
xchg
fsubl
xchg
std
mov
out
inc
arpl
cmp
cltd
xchg
loopne
sbb
pop
inc
push
adc
xchg
shr
shll
out
sti
push
dec
ret
ljmp
inc
inc
dec
or
sub
ret
data16
and
push
mov
add
mov
pop
insb
mov
jno
lahf
movsb
les
jl
mov
mov
xor
or
int
sbb
fcom
push
xchg
cltd
push
insb
push
push
and
sbb
xchg
mov
and
inc
cmp
decb
cwtl
out
mov
push
jp
test
fidivs
push
mov
movsb
dec
mov
mov
sbb
aad
aas
test
lea
and
aaa
dec
ret
stos
bound
cmp
mov
mov
jmp
rorl
push
dec
push
fisttpl
pusha
pop
and
mov
push
mov
mov
aam
jno
enter
roll
jae
fadd
push
sbb
xchg
call
add
add
pop
mov
cli
je
insb
xchg
mov
xchg
aad
xchg
push
es
test
insl
test
inc
outsb
add
mov
dec
push
adc
test
sti
push
pop
push
pop
mov
rorb
test
jns
stos
movb
daa
add
les
push
sub
lock
lods
and
pop
dec
add
mov
pop
sbb
lds
add
je
lret
or
addr16
sbb
rdmsr
xor
sbb
mov
in
sub
pop
sbb
jbe
pop
ficoms
cwtl
jle
mov
sbb
xor
mov
or
repz
adc
mov
adc
jl
jecxz
pop
cli
gs
cld
xchg
movsb
ss
mov
add
fisubs
enter
xchg
fidivrl
or
pop
xchg
aas
hlt
js
cmp
testb
int3
addr16
enter
xlat
daa
push
add
xor
adc
adc
adc
cs
pop
mov
in
nop
mov
pop
lods
out
mov
mov
je
pop
mov
inc
ficoml
shll
out
xchg
mov
adc
jno
mov
dec
pop
lcall
fdivs
jnp
jg
cld
imul
dec
dec
nop
dec
cmp
mov
cwtl
loop
cmp
fsubrs
mov
sti
pop
stc
pop
cwtl
mov
loopne
dec
and
cmpb
sub
test
xchg
dec
mov
add
cltd
lret
aam
in
sub
movsb
test
xchg
push
mov
and
mov
shlb
loop
mov
inc
ss
xor
ss
sub
dec
cmp
ss
mov
push
jbe
pop
lods
sub
pop
xchg
adc
jo
insl
pop
mov
jb
mov
mov
sbb
sbb
outsb
cmp
psllq
gs
mov
sbb
sub
nop
adc
aaa
mov
sbb
out
push
test
xchg
mov
cmovns
stos
mov
push
jns
dec
add
sub
scas
stc
je
xchg
xchg
rcrl
add
scas
xor
mov
mov
sub
gs
test
sub
dec
adc
mov
aas
pusha
out
mov
jbe
sub
dec
pushf
adc
int3
outsb
push
add
insb
fadd
rorl
and
pop
xor
stos
push
mov
std
jmp
std
scas
sub
daa
dec
fstpt
shll
das
inc
into
push
fmulp
cmp
or
cwtl
mov
mov
sahf
ret
sbb
es
out
or
or
andl
nop
push
dec
repnz
popa
pop
or
push
in
jns
inc
push
nop
xor
iret
sub
lods
adc
xor
outsb
rcrb
hlt
inc
test
cmp
out
xor
mov
mov
hlt
in
js
iret
adc
stos
mov
loop
xchg
fdiv
sbb
aaa
dec
in
ss
adc
sahf
je
mov
fcmovb
shl
loop
into
mov
pushf
mov
imulb
shl
jl
cmp
push
movsl
jo
pop
subl
pop
push
push
lea
mov
or
mov
subl
in
popa
lods
lcall
in
fdivrl
lret
movsb
or
stos
sar
add
sub
lds
jl
repz
mov
sbb
rolb
fisttpll
push
daa
loop
imul
lock
lret
loopne
fidivrl
dec
fs
int
mov
ss
repnz
mov
adc
adc
fs
test
or
sti
imul
icebp
inc
add
lock
aam
movsb
dec
icebp
xchg
dec
sbb
out
movsb
aam
xchg
mov
mov
push
xor
mov
push
jmp
push
lods
sbb
mov
cwtl
jp
mov
icebp
mov
sbb
orl
cmpsb
jae
adc
mov
test
inc
out
lock
pop
in
mov
sbb
jmp
sbb
pusha
jo
pushf
and
mov
jae
jns
or
addr16
out
pop
aad
std
push
shlb
mov
jl
cltd
outsb
jp
mov
dec
negl
dec
mov
adc
cmpsl
enter
stos
or
add
sbbl
and
outsl
mov
scas
sarb
adc
lods
or
aam
out
loop
sub
cwtl
fcmovu
shlb
cmpl
loope
jne
add
xchg
aas
fdivl
vcvtsd2si
inc
scas
mov
out
test
fisttpl
aad
sub
repnz
jl
gs
ljmp
shll
fimuls
adc
mov
shr
pop
cmpl
jne
and
jmp
jp
ljmp
hlt
push
push
add
mov
divb
and
jne
outsl
inc
mov
mov
lods
loop
mov
or
in
dec
stos
fucom
hlt
pop
pop
cmp
cmp
int3
or
outsb
lods
leave
gs
test
cmp
das
pop
rol
sub
je
lea
pushl
xchg
cmpsb
cmp
mov
mov
out
aaa
movlps
sbbb
dec
mov
in
mov
scas
cmp
out
push
nop
adc
scas
or
pusha
stos
shr
mov
and
and
add
jecxz
repz
push
mov
cmc
repnz
test
mov
subb
xchg
daa
sub
push
mov
int3
stos
lret
lcall
cmpsb
or
inc
je
sub
jp
and
rcrb
test
cmp
xchg
pop
mov
mov
outsl
test
ds
lret
in
add
cltd
push
ss
fwait
push
add
arpl
add
add
fsub
or
xchg
out
insb
ret
and
cmp
ljmp
iret
push
cltd
ficompl
stos
shll
gs
sahf
data16
popf
aas
xchg
pop
pop
loope
xor
add
scas
into
sbb
hlt
loop
shrb
inc
mov
jecxz
and
and
mov
pop
fs
mov
aaa
aaa
push
scas
sbb
mov
outsl
xchg
mov
mov
rcl
mov
movd
dec
ja
or
push
and
inc
cmp
pop
sub
arpl
movsl
mov
push
movsb
cltd
rcrb
out
pop
sub
lret
add
daa
sub
jl
daa
pop
mov
pop
addr16
add
xchg
scas
popf
pusha
dec
push
pushf
dec
ror
jae
mov
add
mov
orb
lea
adc
jp
ret
daa
push
nop
mov
sbb
push
pop
mov
fidivl
ds
mov
shrl
int
fsts
mov
int
jmp
dec
decb
jnp
andb
sbb
out
xchg
pop
adc
fidivrs
out
add
mov
out
mov
jo
fdivrl
push
dec
fnstcw
inc
inc
xlat
add
loope
aam
daa
leave
es
jecxz
lods
lcall
fsubl
ss
xchg
xchg
int3
mov
outsb
cmp
inc
imulb
imulb
mov
fistpl
lea
rcll
fbstp
or
sub
imul
pop
mov
scas
ljmp
int
sahf
aaa
sti
ret
cmp
shrb
mov
rclb
inc
sbb
inc
addr16
pop
sub
cmpsb
jb
and
jno
movsl
out
push
add
pop
mov
movsb
mov
or
mov
inc
cmp
stos
in
cmp
js
ffree
sbb
enter
and
and
pop
fwait
add
or
insb
add
cmp
cmp
jmp
popa
fcomp
mulb
pop
lcall
pop
imul
popf
pop
push
pop
call
pop
mov
imul
sub
sub
fdivrl
mov
jecxz
je
ds
push
adc
push
adc
lret
fldt
fadd
movsb
idivl
mov
fsubrl
mov
pop
add
or
push
lret
movsb
std
ss
mov
das
mov
push
out
ret
std
pop
jae
or
pushf
jle
ret
mov
jne
or
ficoml
and
add
es
jmp
pop
les
jle
mov
into
fst
xchg
movsb
push
mov
insl
scas
les
sub
cmpsl
xchg
movsl
pop
hlt
dec
cmp
test
scas
lds
push
aaa
xchg
bound
test
insb
imul
orl
arpl
test
inc
shld
sbb
xor
xchg
cmpsl
lcall
shlb
into
pop
mov
mov
mov
loop
mov
xchg
dec
cmp
xchg
jg
je
cltd
xorb
xchg
fidivrl
cmc
gs
test
lds
sbbb
mov
test
sub
fisttpl
jmp
adc
jmp
sahf
xor
lret
jbe
inc
in
lahf
dec
mov
stos
pop
inc
aam
or
sbb
push
sub
jns
or
imul
outsl
inc
orb
insb
mov
push
in
add
lahf
faddl
sarb
sbb
fldenv
fisttps
jg
aas
test
xorl
stc
xorl
cwtl
adc
mov
dec
add
cmpsb
dec
push
jecxz
nop
aaa
fs
cmpsl
push
jle
fsubrs
cwtl
loopne
sahf
int3
sub
jbe
lds
testb
push
xchg
lret
int
aaa
dec
enter
enter
add
mov
sti
mov
in
inc
fs
lods
jbe
sarl
lds
sub
sbb
lea
call
add
testb
rolb
je
sbb
stos
sarl
popf
mov
or
xchg
bound
js
cwtl
mov
fistpl
rorl
push
pop
or
push
pop
test
imul
idiv
cld
ja
and
jmp
and
pushf
xchg
aad
je
inc
sbbb
test
push
inc
stos
xchg
sub
mov
daa
es
mov
jp
cmc
dec
mov
outsl
jecxz
cmp
je
test
dec
mov
cmp
insb
cmc
data16
fnstsw
neg
std
in
into
bound
mov
inc
test
adc
sbb
sbb
pop
sbb
cmpsb
sub
cltd
out
push
hlt
and
rcrb
dec
or
aad
sub
pop
es
es
pop
cs
stc
ficoms
or
fwait
sbb
add
lods
les
flds
fcomps
pop
pop
int3
jle
cmp
sti
adc
mov
mov
adc
arpl
cmp
cmp
divb
dec
inc
push
leave
xchg
hlt
cmp
or
mov
xchg
or
adc
scas
cwtl
inc
push
mov
dec
int3
mov
mov
push
stos
leave
imul
cmpsb
add
ficompl
jb
imul
inc
add
cmp
push
mov
stc
mov
sub
sub
pop
lret
loope
jnp
hlt
xor
sbb
stos
pop
loope
lods
dec
or
aam
jecxz
popf
aad
out
fs
pop
push
and
scas
jb
imul
jnp
test
daa
cmp
add
stos
cmp
lret
mov
inc
cltd
rorb
arpl
pushf
and
mov
scas
and
xlat
xchg
imull
rorb
inc
mov
sbb
arpl
xor
cmpsb
test
scas
add
sub
or
jo
sti
sub
sub
shl
xchg
and
dec
cmpsb
idivl
sti
es
add
mov
dec
mov
jecxz
adc
jge
fldenv
pop
out
ds
loopne
fwait
adc
mov
pop
dec
xchg
int3
rorb
test
jge
aad
lret
xor
in
add
xchg
dec
mov
jb
fdivl
cltd
inc
push
shl
sbb
push
sbb
mov
int
outsb
mov
int3
cld
jle
push
or
fdivp
or
stc
xchg
ja
and
and
xor
push
or
xlat
and
sti
dec
cltd
sbb
testb
xorl
mov
shlb
psllw
pop
enter
aas
stc
rorl
mov
xor
leave
add
out
mov
out
in
jl
jnp
negl
push
dec
int3
adc
mov
ss
xchg
cwtl
stc
adc
dec
lods
mov
fiadds
fstps
into
fnsave
jp
cmp
add
dec
jns
mov
mov
lret
add
mov
out
mov
icebp
cmp
sub
and
dec
mov
mov
loop
jmp
mov
inc
iret
out
icebp
leave
movl
fisubrs
pop
sbb
xchg
adc
add
pop
pop
add
mov
sbb
mov
addl
mov
lcall
lea
in
pop
cmp
push
mov
idivb
lods
test
pop
mov
sub
xor
lock
ficoms
stc
pop
out
and
inc
shrl
sti
loop
aad
fcmovnbe
mov
enter
push
and
popf
popf
cmp
sub
daa
dec
std
mov
cld
cmc
fstl
in
sub
add
adcl
dec
pop
sahf
scas
or
or
dec
push
inc
push
shlb
mov
and
sub
iret
adc
ljmp
leave
mov
andb
cmp
mov
push
popa
movsl
dec
or
pop
mov
add
test
lods
push
je
add
lea
lahf
imulb
push
mov
xor
scas
mov
or
pop
or
lock
std
sub
mov
pop
push
clc
gs
rolb
vmovd
sub
jg
nop
add
xor
in
mov
jnp
push
ud2
cmp
sub
jae
cmp
fdiv
mov
pop
xchg
icebp
mov
mov
popf
mov
xor
cmp
cmpsb
je
mov
mov
aam
imul
repnz
inc
push
xor
js
xadd
lock
mov
test
daa
movsl
leave
js
stc
push
xchg
push
ja
and
pusha
mov
push
sub
pop
hlt
mov
add
fwait
lods
jo
or
push
push
sbb
xor
andl
fcompp
mov
add
lock
rcll
jmp
cmp
lods
xchg
xchg
mov
and
jge
dec
mov
or
jecxz
imul
or
pop
push
js
mov
movsl
gs
or
int
sbb
vdivss
mov
adc
cmpsl
mov
jmp
ja
mov
cmp
enter
out
inc
mov
cmc
repnz
jns
xor
xor
loope
mov
subl
js
push
cmp
clc
stos
jge
into
aaa
sub
push
test
out
iret
cmp
outsb
imul
mov
or
mov
adc
cs
cwtl
or
and
imul
cmp
mov
lods
idivl
aaa
pop
mulb
jge
and
aam
add
jnp
stos
push
sub
mov
cld
jmp
loope
iret
lds
lods
mov
movsb
imul
movsb
es
cmp
mov
dec
push
scas
in
movsl
xor
xchg
mov
cmp
mov
int3
scas
int3
mov
fbstp
bound
cmp
jmp
jae
mov
push
push
negb
lock
int3
pop
pop
push
jmp
out
test
test
inc
int
or
outsb
xchg
dec
outsb
jmp
scas
sbb
adc
xchg
jbe
lcall
push
jp
enter
jge
fldcw
fs
leave
push
outsl
dec
pop
loop
dec
and
inc
movsb
push
mov
rorb
cs
nopl
and
dec
sub
add
hlt
add
lret
in
in
mov
shl
test
or
test
scas
dec
adc
mov
adc
shll
jne
cmp
divl
mov
fmull
gs
int
xchg
pop
sub
aaa
idiv
test
nop
sub
and
mov
lahf
or
pop
fdivs
mov
sbb
xor
sahf
rorb
insb
jne
lret
cltd
es
add
in
pop
pusha
int
xchg
testb
ds
adc
jne
inc
aaa
xchg
ja
es
dec
fnsave
and
cltd
filds
jge
gs
in
in
and
and
lock
int3
mov
or
sub
push
sbb
das
ja
cmpsl
mov
push
push
outsb
in
loope
jp
dec
and
cmc
mov
sub
push
xchg
rorl
mov
jle
outsl
outsl
mov
push
dec
lahf
pop
enter
mov
adc
es
sbb
insb
jecxz
negl
outsl
mov
pop
cmp
dec
stos
jp
in
sahf
jno
push
inc
mov
push
outsl
cwtl
inc
mov
daa
cld
pop
cmp
jecxz
sbbl
stc
push
mov
mov
jle
das
push
fdivs
mov
and
es
fxam
xlat
xchg
loope
or
jge
inc
sub
insb
jmp
mov
jecxz
test
mov
xor
out
subb
jno
mov
jo
pusha
out
aad
shrb
rclb
in
mov
push
xor
fucom
mov
pusha
aaa
es
outsb
mov
mov
jl
and
push
inc
add
rorb
ffreep
jae
popa
int3
dec
test
xchg
and
call
pop
rorl
or
xor
orl
cmpsb
mov
sub
fs
dec
icebp
out
sub
inc
push
and
in
push
sahf
cmp
adc
add
notl
hlt
and
sarb
dec
fsubs
into
adc
or
sbb
decb
pop
data16
fldl
push
mov
ficoms
ret
cmpsb
popf
push
xor
inc
nop
test
lret
iret
cmp
lret
inc
jns
xor
inc
jae
push
jb
push
cs
dec
cli
in
add
mov
in
jl
fstps
sbb
in
xor
mov
out
out
push
cli
cmp
and
lahf
out
and
aas
sbb
add
add
fisubl
jg
cltd
test
mov
cwtl
add
dec
adc
test
rcll
lea
jl
push
inc
mov
inc
jnp
or
repz
inc
jl
outsl
icebp
test
cmp
lods
inc
cmp
mov
loope
jnp
xchg
jge
pop
test
mov
dec
pop
or
rcll
aaa
idivl
int
and
mov
fld
mov
jle
cwtl
dec
loopne
dec
es
into
int
push
push
das
jge
js
adc
push
lods
mov
jl
dec
add
loopne
sarb
mov
stos
rol
push
scas
jl
lea
cs
cld
xor
mov
cmp
or
inc
popa
mov
fwait
shr
hlt
popf
push
enter
mov
popa
push
rcrb
push
or
movsl
pop
pop
jmp
jp
dec
ret
push
das
in
inc
cld
adc
jne
cmpsb
int3
adc
pusha
lock
imul
adc
push
sub
xor
ja
sub
fs
jecxz
mov
jns
jmp
push
aas
sub
mov
xor
inc
jl
add
jae
jmp
cmp
push
push
mov
lret
enter
mov
dec
clc
inc
pop
sahf
fidivrl
aam
sbb
mov
mov
adc
out
adc
out
sbb
fidivl
iret
ret
mov
rorl
xchg
imul
lret
fwait
sub
mov
imul
sahf
inc
mov
or
pop
leave
pop
stos
cli
in
xor
jb
das
cmpsl
into
aad
or
out
popa
cmpsl
or
in
pop
sbb
dec
bound
mov
sbb
sbb
cmpsb
xor
adc
into
cs
stc
pop
insb
enter
iret
rcrl
mulb
movsl
cli
mov
and
sbb
jne
jnp
xlat
test
test
enter
and
jecxz
es
clc
add
ljmp
ret
fst
push
or
cltd
xchg
xor
jns
or
push
inc
or
adc
push
loop
dec
mov
cmp
xchg
outsb
xor
jmp
outsb
sbb
pop
out
hlt
cmp
cli
movsl
aaa
jo
pop
pop
sub
push
push
dec
mov
jo
dec
loope
icebp
inc
cmpsl
call
je
jne
dec
mov
stc
je
cmp
insl
fs
xchg
mov
jecxz
xchg
jg
and
popf
mov
gs
fidivs
mov
push
adc
inc
fs
fdivrs
and
cmpsb
add
xchg
icebp
mov
outsl
scas
xchg
ja
fidivrl
js
fcomi
loopne
lahf
mov
push
cltd
mov
lods
mov
mov
psadbw
sahf
lock
inc
aad
cmp
lcall
inc
sub
dec
std
dec
xor
nop
outsl
repz
push
rol
jge
push
push
mov
adc
pop
movsb
xor
inc
shrb
dec
dec
xchg
js
push
dec
and
inc
out
push
int
rcrb
scas
xor
test
lcall
jae
mov
pop
in
out
mov
ret
push
ss
shll
or
pop
jne
cld
or
ret
push
rolb
jp
stc
mov
adc
adc
ret
xchg
scas
push
outsl
pop
fldcw
stc
inc
jb
push
cmc
xchg
inc
add
js
jno
pop
daa
bound
out
dec
push
inc
movq
arpl
push
out
es
pop
ljmp
pop
gs
sub
push
sbb
cltd
push
enter
adc
test
cli
inc
iret
jae
inc
in
pop
mov
repnz
scas
insb
lods
in
adc
loopne
xlat
popa
cmpsl
lds
dec
xchg
mov
mov
lret
je
xchg
ds
sub
mov
test
xor
jno
js
popa
je
insw
aam
les
fwait
cmc
cmp
fdivl
xcrypt-ctr
cmpsl
fimull
call
pop
jmp
pop
lahf
jmp
cmp
enter
insb
sar
in
add
leave
sbb
adc
adc
sbb
mov
mov
and
dec
mov
mov
mov
scas
adc
rclb
leave
mov
xchg
pop
sbb
test
stos
xlat
dec
outsb
call
xor
add
leave
daa
insb
dec
mov
jp
jno
sti
push
sbb
push
fidivs
inc
rorb
push
inc
jle
imulb
pop
iret
out
cltd
cli
imul
popf
movsb
mov
and
mov
pop
roll
jbe
mulb
or
scas
repnz
daa
popf
adc
ljmp
and
test
mov
aas
adc
cmp
cmp
stc
jo
xor
mov
inc
mov
sbb
out
or
lock
jmp
nop
mov
mov
test
lret
fs
pop
xchg
mov
pop
cmpsl
inc
fidivs
mov
loop
int3
dec
cmp
push
test
xor
das
cltd
bound
xor
push
rol
mov
add
sahf
cmp
xor
and
jp
mov
out
dec
lods
arpl
rcll
jne
inc
shr
mov
mov
stos
push
ret
inc
adc
push
nop
add
stc
ret
repz
jecxz
or
out
aam
lods
and
jge
jbe
scas
es
jp
push
stc
dec
xchg
cmc
ja
push
jns
dec
jns
push
std
adc
ror
lcall
aas
stos
stos
cmpsl
rcrl
or
jbe
xor
adc
or
lds
sbb
pop
xor
add
jb
push
pusha
sbbb
sub
mov
cmc
fs
cmc
pop
sub
cmp
sbb
push
scas
sub
mov
push
cmp
inc
lods
inc
aas
repz
out
outsl
imull
adc
out
lahf
jge
inc
inc
mov
es
and
mov
mov
imul
out
adc
aas
ret
rcr
sar
stos
dec
jae
ret
push
int
rorb
mov
mov
icebp
movsl
push
in
icebp
loop
lahf
add
push
lds
mov
int3
leave
jnp
jg
dec
add
hlt
cmp
std
sbb
in
pop
mov
xchg
sbb
mov
clc
adc
test
pop
sbb
loop
mov
pop
loope
xchg
jmp
pop
push
add
sub
iret
push
pop
mov
sti
dec
push
mov
stos
add
cli
mov
pop
mov
or
sub
push
pop
jmp
mov
add
dec
mov
mov
sub
les
out
or
pop
aaa
in
cltd
dec
fisttps
sub
xchg
in
cld
mov
xchg
xchg
or
test
pushf
adc
adc
lds
sub
and
div
aaa
hlt
sub
and
leave
jmp
popf
xchg
add
adc
adc
or
mov
in
das
jae
mov
inc
sbb
lahf
pop
or
sub
and
push
cmc
sub
sarl
dec
pop
push
mov
icebp
xchg
inc
xchg
dec
decb
inc
shlb
loope
loop
int
lahf
jb
and
ss
push
or
enter
jne
pop
mov
pop
sub
pushf
sub
cltd
ficoms
icebp
push
adc
fsubl
mov
fdivs
ret
sub
cmpsb
adc
fisubl
popa
outsl
loopne
push
sbb
adcl
movsl
pop
pusha
rorl
das
clc
lcall
rcrb
popa
data16
sbb
call
pop
shl
mov
mov
or
push
out
mov
flds
call
xor
ret
icebp
stos
pop
cmp
shlb
and
or
movsl
jb
jge,pn
inc
dec
test
sar
lods
test
and
sbb
es
jg
fsts
mov
sub
fprem
mov
sub
pop
enter
shlb
push
sbbl
sbb
aam
mov
cmc
dec
sbbb
push
mov
insb
dec
and
xchg
lock
add
clc
dec
ret
mov
or
jg
test
mov
out
pusha
lods
call
jg
mov
js
orb
daa
push
sbb
jno
jp
and
lahf
sarl
je
lret
fwait
hlt
and
inc
jae
push
adc
push
leave
scas
mov
pop
mov
arpl
in
adc
push
loop
dec
adc
mov
jnp
mov
popa
hlt
inc
incb
nop
pusha
aad
dec
hlt
movsl
dec
sbb
mov
out
out
jno
in
pop
lods
repnz
pop
cmp
lods
dec
push
pop
ficoml
mov
popa
mov
xor
and
cmp
push
lea
movsl
stos
inc
jg
out
adc
mull
inc
sbb
inc
dec
jo
add
xor
mov
dec
sub
jne
repnz
pop
aaa
fdivrl
ds
aaa
imul
adc
mov
push
shlb
push
inc
xchg
push
cmp
aas
inc
insl
pop
xchg
and
jle
pop
fwait
adc
and
jnp
push
xchg
rep
daa
pushf
je
data16
inc
int
add
popa
lcall
movsb
js
scas
movsb
mov
stos
mov
enter
lods
mov
jne
call
ss
testb
mov
or
cmp
inc
push
jnp
lods
inc
inc
cld
jnp
add
cmpb
popa
in
and
pop
xor
mov
or
push
cmp
flds
in
adc
cmpsl
xorl
testb
inc
call
push
cld
cltd
push
dec
outsb
lahf
cmpl
std
loope
dec
loopne
or
dec
cmp
inc
repz
pop
lock
fists
cmp
ss
hlt
adc
imul
dec
jbe
in
pop
je
add
and
movl
push
adc
jne
in
ret
sub
mov
ss
jae
mov
mov
push
cmc
out
mov
pop
xchg
lods
stos
mov
jbe
dec
and
inc
shl
sbb
jg
xor
subb
daa
mov
jmp
lds
orb
inc
int
leave
in
fs
jns
pmullw
dec
hlt
xchg
push
lods
cmpsb
xor
xchg
leave
mov
shl
push
cmp
mov
inc
add
mov
xchg
pop
cmc
cmpsl
out
mov
mov
popf
outsb
pop
add
jno
popl
mov
ja
push
dec
xchg
jae
in
sub
push
gs
lret
xor
jmp
cmpsl
mov
repz
popa
sub
insb
jbe
aam
mov
ds
lods
jno
push
outsl
pop
adc
loop
icebp
popa
xchg
scas
mov
ljmp
jp
repz
or
xor
out
jle
and
sbb
aam
rorb
push
repnz
inc
add
jmp
pushf
mov
push
mov
aas
inc
test
mov
lea
sbb
sub
jge
sarb
sti
dec
mov
cld
aad
aam
std
in
test
es
mov
xor
lea
je
inc
add
mov
arpl
cmpsb
jle
fistpll
lahf
jne
incb
insl
xor
jge
pop
mulb
out
sub
lods
inc
out
dec
add
xor
int3
stc
cmp
scas
jg
in
cli
adc
jp
pop
push
mov
xchg
stos
cwtl
xor
es
orb
nop
and
loop
aad
jo
pop
mov
leave
lahf
je
dec
lock
jnp
mov
sahf
inc
ljmp
fisttps
inc
addl
pop
pop
cltd
aas
lea
popa
pop
adc
and
js
cs
out
xlat
arpl
dec
adc
jae
dec
fcmove
loop
push
pop
pop
jg
and
out
pushf
ljmp
fs
movsb
mov
stos
movaps
mov
in
mov
mov
les
adc
and
xchg
loope
add
push
outsl
pop
ja
mov
pop
ret
sbb
scas
pop
or
ljmp
sub
ret
pop
testl
mov
mov
pusha
int3
imul
jnp
pop
lret
and
pop
mov
xor
mov
sarl
inc
test
jbe
and
adc
dec
jp
add
cmp
roll
stos
dec
out
inc
lret
in
shrl
xchg
inc
mov
ds
dec
cmp
inc
enter
inc
lds
lock
xchg
arpl
sub
das
mov
cwtl
or
mov
test
jecxz
inc
pushl
pop
pop
lcall
fcmovnb
test
hlt
ret
ret
scas
push
ljmp
mov
pop
out
ljmp
inc
xchg
movsb
dec
mov
loop
popf
xlat
sub
andb
notl
ljmp
fincstp
push
loop
or
jns
ss
dec
sub
mov
mov
or
xchg
movsl
cmp
xchg
out
add
or
das
ret
movsl
cmc
push
add
js
std
iret
mov
xor
cltd
sbb
xor
dec
test
fsubrl
push
stos
dec
inc
sub
leave
jmp
inc
insl
xor
aad
scas
movl
jb
cli
sbb
cmp
sub
push
adc
add
dec
push
fbld
adc
repnz
push
das
mov
add
daa
mov
pop
iret
jp
xor
fwait
inc
push
mov
outsl
shlb
fldenv
jo
outsl
adc
rcr
push
dec
in
cmp
mov
add
sbbb
jle
inc
ficompl
sub
cmp
jp
ja
arpl
outsl
cmp
push
adc
jp
clc
cmpsb
xlat
inc
das
mov
inc
jne
sbb
frndint
pusha
outsb
mov
or
xor
push
mov
dec
test
mov
aaa
testb
test
js
lods
pop
mov
mov
fsts
xchg
xchg
popa
fnsetpm(287
mov
mov
jbe
pop
outsl
cmpsl
loope
rcll
in
lock
sbb
mov
pop
dec
or
and
xchg
xor
pushf
cltd
ljmp
pop
test
xchg
pop
ds
inc
es
fdivs
inc
leave
fwait
mov
inc
rcrb
dec
mov
stos
in
jo
roll
imul
dec
call
push
les
push
fisttpll
jb
jmp
insl
int3
idivb
push
iret
das
mov
mov
test
out
pop
jp
push
pop
popa
nop
cld
loopne
cs
pushf
bndldx
pop
xor
mov
push
or
adc
aas
in
xor
lahf
repz
aam
or
aam
int3
push
sub
rclb
mov
loopne
cld
jne
int3
imul
push
fwait
jne
pusha
das
not
cmp
sbb
jns
push
dec
test
push
push
push
lds
push
pop
bound
adc
arpl
sbb
jmp
faddl
xor
rorl
cmp
mov
test
inc
xor
mov
pop
xchg
adc
cmp
push
or
xchg
and
or
pop
mov
mov
shl
lret
dec
stc
ljmp
loope
add
shrb
mov
and
push
mov
sub
lods
add
fildll
jl
adc
pop
jae
inc
loop
inc
lcall
out
push
test
mov
jae
js
add
loop
inc
mov
shll
lock
mov
sub
adc
and
stc
lcall
mov
mov
loope
insl
popf
sub
imul
out
or
out
inc
mov
cmp
in
jne
xor
sub
or
dec
push
dec
xor
rolb
sarb
pop
and
pop
insb
movsl
add
xchg
mov
or
pop
mov
out
cli
inc
lcall
dec
out
mov
pop
adc
daa
mov
fwait
andb
mov
inc
adc
mov
push
mov
mov
adc
hlt
adc
xchg
xor
cs
sub
testl
fs
negb
mov
adc
gs
push
pop
xchg
mov
imulb
push
mov
leave
jnp
test
dec
loope
xor
jmp
repz
mov
mov
das
pop
sarl
mov
fmul
mov
pop
cmp
gs
jp
clc
in
cmp
pop
stos
fcomps
jbe
fwait
add
inc
mov
push
adc
out
shl
push
clc
adc
int3
ficompl
push
stc
int
xchg
ss
and
repz
rclb
test
sub
sub
mov
leave
int
fcmove
stc
jbe
push
fcomip
mov
pop
mov
jo
pop
add
cmp
push
pushf
popf
mov
out
push
sbb
cmp
ss
mov
mov
outsl
or
test
mov
testl
outsb
and
leave
lahf
mov
sub
xorb
bound
xchg
stos
or
ja
mov
outsb
fadds
xchg
push
pop
jno
sub
bound
mov
add
fisubs
pusha
sub
inc
in
jp
insb
or
cmp
sbb
inc
mov
cwtl
dec
jmp
scas
add
into
loope
lds
out
dec
add
mov
jg
push
lods
lods
aaa
cmp
sub
add
insb
mov
js
mov
jbe
leave
push
and
sbb
inc
sahf
mov
add
bnd
cltd
lods
testl
scas
add
mov
call
data16
movl
lret
add
pop
push
xchg
pushf
push
aas
cmp
mov
lea
int3
and
jne
cmp
les
pop
sbb
scas
lock
rol
fbstp
fsubrl
test
jmp
xor
xchg
pop
fwait
mov
cltd
inc
call
clc
ret
lahf
loope
xchg
data16
stos
or
mov
cmp
mov
xor
ret
mov
jnp
aaa
fdivp
add
xchg
mov
mov
idivb
pop
enter
sbb
cli
xchg
inc
push
push
inc
adc
das
jno
insl
pushf
inc
dec
scas
pop
imull
mov
or
iret
cltd
inc
ret
cli
xchg
mov
jg
loopne
test
pop
imul
or
rclb
xchg
add
clc
aas
pop
cmp
lock
inc
test
out
test
xchg
pop
sub
sbb
jne
gs
fsqrt
or
inc
mov
test
jl
aad
test
mov
int
inc
fs
push
aad
jae
mov
dec
xchg
fcom
and
or
inc
gs
std
notl
ss
push
jle
pop
pop
xorb
in
dec
sub
call
inc
push
lret
adc
mov
sbb
fildll
xchg
jge
into
jge
adc
stc
data16
push
js
aas
jmp
dec
push
xor
inc
add
decb
push
test
mov
inc
gs
and
fildl
je
outsb
pop
sub
hlt
dec
and
cld
and
adc
insl
test
mov
jno
insb
dec
inc
xor
jne
xchg
push
inc
aas
out
sbb
popf
popf
sbb
cmpsb
xchg
incl
cmpsl
call
call
jg
push
jo
popa
mov
int
mov
sub
cmp
mov
push
and
lahf
sub
repz
pusha
cwtl
sub
mov
ss
ds
xlat
sbb
dec
adcw
shrl
xchg
les
inc
lds
sub
dec
in
iret
sbb
push
cwtl
cmp
and
lret
and
rolb
enter
jo
les
sub
push
xchg
mov
daa
mov
sub
sahf
or
ja
dec
sbb
mov
xchg
jp
fstps
xor
filds
arpl
inc
cmc
sti
mov
orb
jno
cmpl
das
jl
gs
xchg
ss
mov
in
shr
inc
jno
mov
xor
push
frstor
outsb
rorl
mov
dec
adc
mov
adc
sarb
test
jge
hlt
lods
adc
pop
into
jae
add
and
ret
in
iret
les
jecxz
dec
dec
out
add
loope
movsb
push
repnz
adc
inc
ds
xorb
in
fisubl
mov
pop
lea
lods
pop
push
and
mov
ss
hlt
add
mov
inc
mov
push
lcall
inc
xlat
in
mov
sub
lds
test
shll
loopne
or
xchg
notl
mov
ficoml
inc
jnp
shl
adc
mov
in
lock
pop
test
inc
test
mov
andl
push
push
imul
push
sbb
shll
outsl
iret
int3
mov
fildl
sbb
jne
les
cmp
mov
lahf
ja
push
cmpsb
loope
mov
push
xchg
subb
jns
cmpsb
cmp
popa
adc
test
mov
mov
inc
sub
shrl
das
push
fcoml
mov
inc
add
rclb
mov
lods
cltd
or
in
mov
loope
jne
mov
pop
stos
lods
or
in
jb
or
xor
adc
jg
movsb
popf
xor
test
call
and
adc
and
push
xchg
cmp
dec
xchg
jecxz
mov
fwait
push
cmpsl
xchg
inc
sub
sub
notb
pop
popl
int3
nop
push
mov
mov
loopne
dec
shll
fcompl
pop
or
in
aaa
inc
aad
rolb
add
push
aad
nop
test
lods
test
sbb
or
in
scas
inc
fdivs
idivb
sub
mov
ret
mov
inc
outsb
mov
jns
imul
test
jo
mov
mov
lahf
jae
adc
or
or
jns
adc
jbe
out
add
sub
dec
scas
mov
sbb
mov
cli
inc
loope
int
lds
iret
inc
jb
mov
mov
mov
fmuls
dec
flds
movsb
andb
lock
jmp
daa
and
rorb
xchg
int
push
cwtl
xchg
lods
shll
idiv
aad
dec
push
inc
movb
push
dec
lret
xchg
push
out
fmull
fsubl
dec
xchg
xorl
mov
insl
jecxz
into
into
or
jmp
fs
adc
or
roll
cmp
mov
sbb
push
pavgb
outsl
jle
int3
sahf
fmull
push
push
push
xchg
ret
or
dec
add
popa
lcall
xchg
pop
dec
out
adc
lahf
dec
sbb
stos
inc
lcall
mov
lods
push
in
add
out
or
ficomps
push
icebp
in
outsb
adc
outsl
jecxz
icebp
cltd
inc
mov
sub
mov
sub
ds
cmp
cmp
mov
push
into
je
jae
addb
sar
insl
mov
inc
in
arpl
in
aam
or
mov
inc
or
fnstsw
in
int
fstpl
mov
jecxz
lds
jle
and
into
repnz
sbb
mov
sub
shr
xchg
fisubrs
sub
out
leave
mov
cmpsb
lret
rcr
addr16
mov
mov
icebp
sub
gs
mov
push
pop
popf
cmc
testb
int
jnp
fcompl
dec
xor
push
dec
mov
movsl
loopne
mov
movsb
dec
pop
imul
sbb
jl
idivb
ds
mov
pop
pop
jmp
add
mov
bound
ss
adc
sbb
cmp
xchg
jbe,pn
push
ss
std
mov
sbb
lods
cmp
cs
cwtl
out
sbb
jae
test
mov
int
mov
cmp
jge
movsl
mov
sub
or
mov
cmp
sub
mov
mov
mov
mov
pop
out
sbb
insb
dec
mov
pop
shll
jns
jmp
bound
movsl
xor
pop
fistpl
shrl
xchg
ret
test
iret
mov
sbb
in
mov
inc
mov
and
sbb
mov
push
push
repnz
xor
gs
sbb
xor
jbe
dec
cmp
adc
lret
or
filds
loopne
rcl
aas
stos
repz
data16
aas
repz
adc
ljmp
or
push
add
push
int
push
imul
sub
out
xorb
push
xor
cmp
xchg
cmpsl
les
stos
mov
aam
pop
jne
jecxz
mov
lods
dec
pop
repz
mov
nop
lea
cli
pushf
push
sbb
push
mov
lret
fdivrs
std
xchg
aas
sbb
xchg
dec
mov
inc
or
loope
sbb
xor
pop
mov
and
repnz
mov
push
daa
stc
imul
and
cmp
icebp
mov
and
add
out
sbb
jle
and
aaa
addl
imul
push
sti
xchg
push
pushf
add
sti
movsb
sbb
loop
out
test
cwtl
jge
adc
xchg
les
inc
inc
push
stos
aam
mov
stc
iret
dec
sbb
call
push
je
mov
jmp
cmpsl
pop
cmpsb
bound
and
inc
jbe
ja
ljmp
mov
jae
ss
dec
inc
jbe
inc
fistl
imul
fstps
in
cli
inc
add
ds
jbe
mov
xor
movsb
out
mov
adc
in
cmp
std
xor
xchg
add
aas
mov
repz
xchg
cmp
lahf
fildl
movswl
imul
xchg
push
cmp
mov
lock
xchg
xchg
push
cmp
adc
js
outsl
outsl
roll
mov
ss
jb
inc
ret
or
call
xchg
in
cmp
push
hlt
add
cmp
pusha
fcoms
jns
roll
repnz
bnd
add
fimull
mov
call
out
addr16
add
jae
data16
js
pop
jmp
ss
outsl
add
data16
adc
js
aam
mov
mov
bound
hlt
cmp
xchg
out
in
mov
adc
cld
xor
pop
pop
outsl
out
add
mov
aad
mov
mov
pop
daa
sub
sbb
cmp
fidivs
pop
add
mov
mov
xchg
push
and
sti
ret
ss
and
idivl
and
and
scas
inc
xchg
and
mov
add
mov
jbe
jno
xor
mov
icebp
pop
gs
sbb
dec
xchg
out
jl
stos
add
lds
repnz
jo
aad
rcl
sbb
cmc
cmp
rcl
mov
mov
ja
push
inc
xchg
xor
push
imul
mov
mov
in
cmp
loop
testl
movsl
mov
js
jnp
mov
push
lea
lcall
adc
sti
out
jmp
sbb
dec
imul
int3
xor
ljmp
sahf
inc
mov
std
push
or
add
scas
mov
xlat
inc
fsubs
jp
pushf
sbb
insl
jnp
out
jp
inc
je
cmpsl
jmp
mov
mov
jmp
lock
mov
jbe
lods
sub
inc
out
pop
mov
adc
inc
mov
dec
ljmp
fs
cs
pop
xchg
or
into
dec
ficomps
movsl
cs
sub
je
and
aas
mov
sbb
inc
jnp
and
flds
jo
add
lds
jo
test
pop
adcl
cmc
ljmp
jno
ficoms
icebp
pop
call
push
mov
fs
sub
sti
cltd
or
push
dec
pop
xchg
aam
xor
cmpsb
pop
shrb
cmpsl
sub
pop
out
sub
cmp
js
xor
sub
fldl
mov
loop
push
in
loop
fisubl
push
mov
sbb
cmp
adc
dec
or
and
arpl
and
inc
and
adc
add
adc
out
xchg
push
xchg
mov
cs
rcl
sub
xchg
and
nop
test
ljmp
mov
clc
inc
imul
cmp
push
push
sbb
inc
cmpsb
jne
pop
mov
iret
outsb
jecxz
insb
jnp
and
adc
mov
movsb
int
cmc
or
and
push
std
mov
mov
test
inc
movb
cmpsb
mov
fwait
adc
cwtl
loop
shl
rorb
xor
shl
filds
jl
mov
or
out
xlat
test
push
int3
cs
fwait
cs
mov
imul
das
or
mov
imul
scas
mov
repnz
xchg
jns
call
mov
cmp
push
add
push
sbb
sbb
cld
fs
mov
mov
add
jg
fdivl
arpl
push
xorl
jg
xchg
pop
push
mov
mov
cmp
insl
sarl
push
xlat
mov
out
dec
fldt
xchg
xchg
jnp
std
xor
leave
and
sar
jmp
hlt
mov
sub
arpl
fcmovnbe
add
jmp
lock
mov
dec
es
shll
xlat
outsl
pushw
out
out
jns
pop
je
xor
push
mov
test
dec
out
sbb
cmpsl
mov
xchg
aaa
mov
daa
outsb
sub
mov
adc
or
orps
aas
outsb
jge
adc
sub
rcrl
jno
pusha
or
adc
mov
mov
inc
push
mov
mov
sbb
xchg
js
jns
shrb
jmp
pop
loope
loope
out
add
mov
jnp
loop
das
pop
adc
mov
outsl
int
push
outsb
jl
pop
and
lock
ja
push
jmp
imul
pop
sti
out
mov
dec
dec
cld
mov
fildl
mov
pushf
push
jo
pop
pop
mov
or
add
in
insb
sub
jae
cmp
add
pushl
jb,pn
add
xchg
clc
jecxz
xchg
or
push
stc
sbb
cmp
bound
pop
jge
mov
pop
hlt
cld
cmp
mov
test
fdivs
jnp
cwtl
ja
inc
in
push
adc
repnz
aam
jp
andb
fdivrl
in
add
xchg
lcall
sub
jnp
jbe
cmp
xchg
dec
adc
fisubrs
iret
ficompl
subb
adc
fs
shlb
and
ret
sbb
mov
dec
ljmp
cmpb
fs
iret
add
jge
addl
test
xchg
leave
jb
popa
nop
fiaddl
test
hlt
and
push
inc
aam
cmp
insl
loope
dec
mov
mov
sub
cmp
ss
js
jl
xchg
and
gs
push
pop
and
jns
fcompl
and
sbb
sbb
xchg
data16
mov
mov
cs
pop
mov
loope
ljmp
sbb
jns
jo
sbb
push
lahf
repz
and
cwtl
repnz
cmpsb
add
data16
ljmp
cmpsl
shl
xor
pop
jae
push
xor
xchg
into
shrl
pop
xor
jecxz
or
cmpb
push
pop
push
xor
cltd
mov
lret
lds
xchg
inc
mov
push
or
xchg
loope
mov
pop
mov
and
cmpsb
jo
xchg
jb
cmp
dec
mov
inc
gs
jp
aad
mov
jo
inc
xor
pop
xor
inc
xor
and
iret
test
sub
rclb
mov
repz
daa
imul
add
mov
xchg
scas
adcb
cmp
and
mov
xchg
int
jbe
rolb
adc
pop
int
mov
mov
test
repnz
fsubrs
xchg
xchg
int
iret
inc
adcb
pop
popa
or
cmp
ja
lret
add
daa
repz
jmp
aas
pop
fldl
cli
ljmp
rcll
cmpsb
and
outsl
jns
aam
xor
cld
pop
mov
add
adc
pushf
fldcw
mov
add
inc
push
inc
lods
iret
fst
fbld
dec
shrl
scas
adc
int3
mov
jae
gs
mov
jne,pt
test
mov
push
in
cld
andb
insb
ficompl
xchg
fistl
lret
sbb
ja
cld
dec
hlt
mov
mov
push
idivl
iret
mov
repz
xlat
in
roll
sub
addr16
sarl
lcall
add
push
or
adc
jmp
or
mov
aas
cld
cmp
push
loope
stos
jecxz
fldenv
insl
push
mov
xchg
mov
or
lret
xor
xor
insl
jae
mov
jo
negl
dec
pop
and
adc
inc
fs
in
iret
xchg
fbstp
jg
rcr
inc
std
and
sbb
dec
mov
xlat
mov
xchg
sub
mov
nop
imul
push
mov
ds
jle
or
or
pop
xor
movsl
sub
xor
movsl
jmp
mov
jns
js
mov
bound
jle
mov
jmp
and
setne
sbb
mov
fmulp
pop
lods
push
xor
xor
lods
jb
inc
jb
repz
mov
test
push
inc
in
movl
fnstcw
cld
mov
or
jne
pop
mov
sub
rolb
mov
dec
xor
hlt
out
sbb
pop
lahf
es
lret
or
add
stos
add
cli
add
int3
test
or
fsubr
aas
imul
sbb
xchg
and
add
sub
lods
inc
in
adcb
ss
and
cld
lods
ljmp
jle
and
data16
int3
std
mov
mov
call
adc
mov
pop
xorl
mov
cmpsl
mov
mov
in
sub
les
mov
cld
fstp
sbb
push
sbbb
sub
jo
mov
mov
fstp
fisttpll
mov
mov
jle
xor
jo
ficoms
daa
cmpsl
inc
adc
cmp
imul
mov
lret
cmp
cmp
andl
mov
ds
gs
insl
adc
dec
out
cmp
sbb
mov
and
push
lcall
dec
xor
call
mov
and
xchg
popa
in
test
enter
push
adc
mov
adc
lcall
outsb
ret
test
shlb
idivb
lret
loopne
cmp
adc
pop
push
imul
addr16
jbe
fprem
inc
in
dec
xor
div
das
jmp
ret
aas
mov
xor
cmp
push
es
mov
fsubr
dec
mov
mov
inc
sbb
jbe
and
jo
and
xchg
icebp
add
jns
in
xchg
adc
fsubrs
mov
or
out
stc
mov
fwait
xchg
cmp
ret
negl
fs
pop
sbb
pushf
dec
dec
imul
es
push
stc
pop
pop
sbb
nop
dec
dec
movsl
mov
mov
push
out
jmp
and
sbbl
pop
xor
mov
in
jmp
mov
xchg
into
mov
cmp
jl
sbb
push
scas
and
cltd
movsl
fdivrl
enter
test
fstpl
xlat
push
aaa
cld
mov
adc
in
mov
add
pop
push
aas
movsl
lcall
aad
xlat
or
das
cltd
xchg
mov
mov
in
mov
ds
loop
xlat
stos
rcr
std
mov
cmp
push
repz
stc
cmpsb
pop
or
pop
aaa
fisubrs
or
or
dec
lea
jl
cs
or
xchg
stc
mov
imul
push
mov
loop
pop
js
fdivrs
cmc
mulb
dec
popa
mov
int
test
push
push
addr16
xchg
inc
fdivrl
jae
jp
in
pop
mov
xor
inc
movsb
popa
cli
in
int
stc
dec
repz
les
or
lock
mov
and
aaa
xchg
mov
outsb
pop
loop
cmp
out
xchg
movsb
sub
sub
scas
or
bound
mov
inc
mov
mov
adc
mov
mov
cmp
cmp
comiss
cmpsl
mov
mov
orb
fcompl
cmp
pop
das
push
lea
pop
int
or
getsec
bsf
repz
mov
addr16
scas
dec
sub
xchg
jecxz
mov
mov
inc
push
add
not
pop
ret
aas
mov
mov
cmp
in
dec
roll
mov
mov
mov
xorl
xor
push
push
ja
pushf
aam
inc
inc
andb
pop
lods
push
mov
push
cli
test
and
ja
mov
cltd
jmp
push
pop
jmp
jbe
or
pop
int
in
ds
nop
int3
xchg
bound
lcall
insb
mov
sbb
inc
sbb
inc
out
mov
inc
lcall
push
inc
dec
mov
cmp
loop
lea
subl
xchg
mov
pusha
sub
fmull
adc
into
lea
shrb
pop
cmp
sub
and
mov
test
cwtl
jecxz
cmp
sub
and
push
jp
ret
lahf
pop
cld
mov
bound
inc
inc
daa
adc
or
out
pop
jle
mull
inc
adc
rcrb
lods
int
fists
adc
iret
aam
inc
into
push
xor
shl
int3
jge
addr16
test
popf
movntq
and
mov
ds
stos
and
add
jb
mov
lds
jmp
inc
in
scas
test
test
cltd
add
lea
and
lret
mov
push
iret
pop
add
ret
int
ret
scas
psubd
push
mov
cmpsb
mov
dec
into
mov
mov
stos
xorb
out
mov
push
xor
fnstcw
rclb
and
and
mov
ror
push
mov
and
cmpsl
cmp
mov
mov
sbb
push
andb
mulb
les
xchg
popf
fstpl
dec
dec
xchg
cmp
sub
mov
pop
push
push
into
cmp
xchg
and
mov
int3
push
imul
push
ret
sbb
jnp
mov
popf
pop
test
movsb
sub
ss
jmp
sti
xchg
addl
jge
sti
in
sub
mov
pop
fsubs
lods
cmp
dec
iret
xchg
mov
adc
add
xchg
pop
sbb
dec
and
rcr
idiv
jle
push
or
jbe
shll
shrl
push
adc
mov
lret
dec
jbe
ja
aas
add
cmpsl
sub
jecxz
pop
loopne
inc
jecxz
scas
jg
icebp
inc
xchg
lock
xorl
push
pusha
adc
jmp
rcrl
mov
lret
insb
pop
mov
pushf
push
aam
into
stos
insb
mov
in
je
and
pop
addr16
rclb
cs
xchg
jno
subl
ret
sbb
je
int3
mov
push
mov
sbb
bswap
rorb
pop
call
jb
rcl
dec
xchg
add
pop
jle
cmp
jbe
enter
push
mov
dec
adc
inc
push
mov
daa
jae
in
push
mov
adc
and
jb
pop
ss
mov
push
and
gs
imul
sti
iret
subl
insl
inc
jns
in
les
push
cmp
fistpll
add
lcall
in
jo
jnp
dec
jmp
mov
in
inc
jecxz
dec
gs
mov
jnp
int
and
into
jle
je
sub
roll
dec
jp
jnp
jno
pop
and
incl
cmp
adc
int3
aam
popa
inc
shl
lret
lock
test
cmp
outsl
into
rolb
clc
xchg
das
popa
nop
cli
sbb
adc
pop
hlt
clc
cmp
imul
fldenv
and
add
or
fstpt
cmp
mov
xchg
divl
dec
inc
enter
ret
and
pop
xchg
leave
gs
stos
pop
sbb
inc
dec
jnp
mov
push
adc
leave
or
pusha
jp
outsb
mov
cli
in
cmc
test
xor
pop
mov
push
scas
cmp
sbb
lds
scas
aad
fmul
insl
mov
jmp
dec
ja
loop
sar
icebp
out
daa
lods
jae
sbb
adc
pop
dec
cmp
data16
jnp
in
sub
add
add
dec
movsb
cmp
test
add
xor
sti
pop
cld
adc
dec
es
imul
jo
bound
or
xchg
inc
xchg
sbb
jb
mov
hlt
ljmp
pop
sti
sbb
stos
add
mov
je
mov
into
nop
fisubrs
push
jmp
push
jae
arpl
add
sbb
sahf
jge
fwait
cmp
add
pop
xlat
add
les
addr16
lret
xchg
sub
lcall
enter
daa
inc
or
in
repz
mov
dec
adcl
test
xchg
hlt
pushf
and
push
data16
cmp
dec
add
filds
lret
jb
and
or
mov
mov
cmpl
mov
cmpsb
or
mov
cmpsb
outsl
cmpsl
sub
cmc
mov
in
mov
or
icebp
stos
dec
in
sti
mov
imul
aas
dec
out
add
xor
push
leave
add
mov
sub
sbb
and
loop
mov
cmpsb
sahf
cmp
test
sbb
rorl
mov
add
int
pop
add
sarb
inc
stc
jecxz
out
js
nop
imul
stc
and
xchg
jl
push
or
in
add
adc
mov
jbe
xchg
ror
inc
sbb
mov
cmp
add
xor
xor
lret
push
leave
pop
xor
or
test
lods
add
mov
xor
mov
aam
dec
mov
jmp
adc
in
push
cmp
mov
mov
nop
and
jns
leave
dec
sub
pop
arpl
mov
pop
dec
cmp
xchg
mov
out
andb
fmuls
xchg
mov
mov
or
mov
xchg
jge
xor
leave
sbb
mov
repnz
ja
xchg
mov
outsl
add
jb
insb
xchg
enter
or
mov
cmp
les
jae
mov
shlb
add
scas
lods
cs
das
and
jne
retw
adc
cmc
mov
shl
lret
ja
scas
adc
into
push
cmp
adc
jo
pusha
mov
adc
shlb
cmpsl
test
pop
je
lods
jae
or
imul
shlb
fwait
mov
push
push
push
cli
aam
adc
int3
addr16
pushf
or
mov
dec
loope
je
sub
fisubs
pop
iret
pop
add
mov
sbb
popf
hlt
sub
out
fcompl
out
ret
fildll
jmp
clc
andl
xor
pushf
rclb
sub
repz
std
pop
pop
ffree
push
mov
jae
pcmpeqb
jb
mov
add
xlat
aam
inc
sub
dec
mov
add
mov
sub
pop
xor
stc
hlt
push
mov
insl
lock
setns
and
lret
and
mov
add
rolb
dec
lods
mov
mov
mov
mov
dec
cmp
xor
ss
jecxz
mov
scas
daa
cmpsb
dec
fstps
rcr
cwtl
cmp
testl
dec
arpl
out
cmp
sbb
leave
test
push
sbb
or
test
test
inc
mov
xor
inc
pop
inc
aaa
xchg
jo
addr16
es
insb
data16
stc
pop
std
push
pop
call
add
loopne
and
cmpsl
jbe
cwtl
cmp
push
stos
xchg
aad
fwait
inc
sbb
cld
jle
sbb
mov
and
cmpsl
lcall
sub
jge
sbb
cmpsb
mov
lods
enter
cmpsl
mov
xor
loop
mov
lcall
sbb
vhaddpd
mov
push
cmpsl
mov
gs
fsubrl
lea
movsl
or
pusha
pushf
std
pop
jle
in
xchg
loopne
repnz
enter
pushf
sub
xor
xchg
pop
and
js
outsb
mov
cmpsl
pop
fidivrl
call
adc
imul
iret
arpl
mov
dec
scas
clc
mov
sub
sbb
ror
mov
mov
xchg
andps
ret
sub
stos
aam
push
aam
scas
andl
test
out
xchg
iret
in
sub
sbb
imul
or
popf
hlt
das
aam
and
xor
sbb
inc
mov
sti
jmp
sbb
outsb
push
outsl
adc
shll
xor
scas
pop
fistpl
lcall
stc
fildll
sbb
cltd
shrb
rcr
push
out
xchg
push
cmp
and
stos
jecxz
sti
iret
arpl
cwtl
cmc
mov
or
das
stos
notb
popa
jmp
out
adc
pop
dec
stos
mov
cwtl
sub
push
add
arpl
outsb
lea
out
movsb
adc
cld
das
dec
mov
incl
or
push
jmp
inc
js
addr16
inc
add
ror
sub
cld
sub
inc
mov
xchg
and
mov
and
iret
add
loop
and
adc
cltd
mov
sub
push
dec
je
push
lcall
das
dec
cmp
call
ljmp
sub
je
jne
jp
popa
cmpsl
mov
adc
jnp
rorb
movsl
cld
out
sub
mov
mov
das
pop
push
xchg
mov
rorl
or
push
int
addr16
mov
adc
out
ret
lds
in
das
orb
xchg
outsb
lahf
push
dec
mov
aam
or
popf
mov
dec
jmp
pop
lods
cmc
cmp
pop
adc
mov
adc
mov
or
push
xchg
jp
cwtl
fcmovb
aaa
inc
jno
ljmp
mov
divl
mov
pop
inc
lods
adc
add
sbb
add
push
addb
fs
jae
cmp
mov
push
add
mov
cmp
sbb
stos
xchg
push
or
and
mov
iret
in
sar
jbe
dec
test
ds
ja
loopne
push
push
lea
and
push
xchg
adc
scas
je
orb
adc
int
je
mov
pop
pop
ljmp
push
shll
dec
adc
mov
xchg
lea
loop
lret
mov
mov
mov
adc
pop
lods
inc
dec
adcb
jecxz
cmp
adc
lods
aad
rolb
negl
sbb
mov
gs
lds
jb
in
mov
add
mov
ss
es
pop
or
add
pop
shrl
push
cs
add
or
sbb
faddl
push
jecxz
or
aam
fldt
data16
ja
mov
fbstp
test
mov
jbe
mov
aas
stc
in
adc
inc
std
int3
cli
or
ljmp
ret
cs
push
mov
mov
fstl
sahf
push
lahf
jnp
mov
sbb
sti
xor
and
and
clc
sub
int
outsb
ds
adcb
xchg
cmp
add
out
enter
and
push
iret
mov
ss
adc
imul
sbb
dec
pushf
ret
loop
mov
fiadds
loope
das
std
push
mov
scas
adc
nop
mov
aad
sbb
xchg
fwait
adc
aad
shlb
out
ds
lret
mov
xor
sbb
sbb
int
arpl
insb
inc
outsl
out
xchg
out
stc
or
xorl
sarb
lcall
mov
xchg
xchg
inc
inc
jo
pusha
in
je
xor
add
mov
xchg
ds
pop
xchg
sbb
mov
lret
mulb
xor
dec
adc
xchg
dec
mov
push
jmp
scas
inc
lods
lods
mov
cmp
push
mov
mov
inc
jmp
sbb
and
jge
test
xor
cmp
pop
cmpb
sahf
outsb
nop
inc
inc
ret
fdivrs
or
push
fsub
repz
fstpt
lods
xchg
mov
pop
sub
cmp
dec
or
bound
fsubs
andl
cmp
loope
mov
stos
mov
push
xor
fsubrs
gs
fcomp
popf
xlat
mov
xchg
sub
fidivs
mov
inc
jge
gs
mov
rorl
popf
inc
fisttpl
in
je
dec
push
or
cmp
popl
cmc
lahf
call
xchg
pop
out
popf
insl
sbb
mov
adc
cli
adc
inc
mov
in
lock
xor
fnstenv
push
fwait
jecxz
adc
dec
cmp
xor
ljmp
out
cmp
pop
idivl
xchg
add
rclb
dec
cmpsl
mov
ss
cmc
lcall
enter
mov
adcb
addl
push
jg
lds
jnp
cwtl
ss
adcb
shr
sub
divb
mov
pop
les
xor
sub
rclb
pop
push
jle
push
push
stos
jle
lds
std
outsb
jbe
cs
sbb
loope
stc
xchg
enter
ret
movsl
loopne
in
scas
loop
pop
push
leave
cmc
aaa
dec
imul
mov
mov
xchg
out
push
aaa
mov
enter
lahf
xchg
jno,pn
sub
push
ss
cmp
push
rcrl
addr16
insb
sub
test
into
xchg
sub
test
jecxz
cwtl
cmp
negb
lods
mov
push
je
dec
aas
daa
repz
mov
push
dec
xchg
fisttpll
repz
adc
cs
adc
gs
cwtl
bound
cli
dec
scas
jle
adc
adc
roll
and
dec
pop
jns
push
loope
popa
adc
addl
or
dec
inc
sbb
addl
aad
cmp
fmull
mov
mov
fidivl
cld
inc
fcompl
xchg
das
adc
mov
add
sarb
pop
mov
inc
daa
icebp
sbb
imul
scas
mov
and
loopne
sub
in
push
cmp
lret
cmpsl
shl
sbb
mov
xchg
lahf
into
add
dec
je
cwtl
cld
pop
and
in
repnz
aas
or
adc
pop
imul
mov
pusha
movsl
push
loope
leave
and
cs
mov
xchg
add
repnz
sub
pop
je,pt
adc
adc
sub
and
movsb
sub
push
inc
sar
ret
xor
dec
adc
leave
lret
das
and
shlb
push
int3
add
sbb
stc
aam
or
mov
repz
out
les
sub
push
out
pusha
inc
std
cmp
pop
or
and
aam
scas
push
mov
cwtl
mov
hlt
jno
lock
mov
mov
repnz
aaa
jge
inc
pop
lods
add
movsl
add
adc
pushf
outsb
dec
jl
or
pop
dec
mov
fnstcw
xchg
cmp
sub
lea
cmpsl
aam
pop
mov
push
jp
adcb
pushf
movsb
pop
sub
push
or
push
neg
xor
jl
rolb
ds
mov
pushw
mov
imul
sub
pop
inc
adc
ret
pusha
add
sub
or
sbb
cmp
pop
clc
ss
adc
in
lock
fsubrs
roll
dec
pop
mov
fwait
pop
int3
pushf
add
insl
xor
push
loopne
loop
push
sub
stos
inc
das
push
fnstsw
xchg
jne
xor
jb
inc
int
push
pop
jmp
fcompl
test
adc
out
mov
pop
fwait
jnp
mov
xchg
jecxz
scas
testl
or
fsubs
jmp
fiaddl
inc
cmc
lahf
xchg
clc
cli
inc
jg
xchg
gs
adc
popa
popf
push
inc
aam
add
push
and
mov
sub
repnz
mov
jl
fs
data16
fs
cmp
xchg
xlat
and
cmp
pusha
mulb
cmpsb
or
jne
scas
push
outsb
push
and
into
adc
aam
in
das
fcoms
pop
push
and
or
int3
adc
xchg
or
cmp
dec
sbb
xor
dec
das
mov
push
dec
add
insb
and
xchg
jo
stos
stos
into
sbb
cmp
jmp
push
test
cmp
push
add
fwait
inc
adc
popa
push
xor
sub
push
xor
mov
lret
mov
sub
xor
dec
push
push
jb
push
loopne
dec
movsl
mov
mov
jbe
dec
outsb
xor
test
sbb
mov
add
cmp
std
insb
add
dec
movsl
leave
dec
test
ret
popf
push
push
xchg
mov
pushf
into
push
add
ds
mov
add
mov
xor
or
and
test
clc
punpckhbw
xor
shlb
sbb
sbb
push
dec
jb
cld
mov
pushl
cmpsb
mull
and
sub
sub
push
shl
cmp
sbb
xchg
sub
pop
add
and
mov
cld
mov
daa
imull
pop
pop
ficoml
dec
scas
pop
xor
xor
mov
aad
les
push
and
jbe
in
lahf
xchg
xor
xchg
enter
dec
pop
xchg
push
unpcklps
jae
mov
ja
sti
es
jnp
out
xorl
xchg
loop
jp
stos
in
pop
cmp
sub
call
leave
xchg
test
sti
sarb
cltd
adc
mov
add
shr
repz
sub
cld
test
dec
lcall
xlat
mov
mov
cmp
inc
dec
repz
stos
pop
or
rcrb
cmpsl
push
aas
fsubr
and
pop
imul
pushf
cmpsb
jmp
dec
xchg
add
in
jmp
subl
loope
mov
aad
mov
cmp
push
cmp
xchg
fsubrl
pusha
insl
jmp
test
inc
add
lock
pop
xor
loop
into
outsl
xor
cmp
or
fucomip
shll
fmull
jp
enter
push
dec
mov
add
jns
std
sub
lcall
add
lahf
fidivs
std
movsl
mov
inc
mov
nop
pop
inc
push
adc
push
and
pop
sbb
lds
shll
pop
divb
sub
adc
ret
add
ret
cmpsl
movsl
jne
inc
mov
add
shll
jbe
adcb
push
aam
dec
add
push
addr16
repz
cld
adc
pushf
mov
sbb
and
xchg
fs
dec
repnz
pop
iret
jmp
nop
jbe
xchg
mov
mov
pop
in
cli
int3
mov
stos
dec
test
push
push
lods
mov
int
jp
in
inc
sub
cmpsl
xchg
enter
jl
jns
lcall
subb
xchg
js
add
adc
jge
repz
xor
rorb
and
inc
jne
addl
incl
rcll
adc
push
mov
inc
aam
scas
aad
inc
sub
das
inc
leave
mov
sti
xor
add
sarb
cmp
aaa
ja
dec
shll
jg
adc
add
inc
or
movsl
icebp
xor
test
jg
out
cmc
aas
pusha
daa
lea
sbb
addr16
sub
in
mov
pop
or
push
sbb
pop
sub
pop
jge
mov
fmull
iret
jns
or
dec
mov
xchg
inc
rolb
lret
lods
push
mov
mov
jo
aas
outsl
cli
xorl
jmp
push
adc
push
pop
movsl
jns
push
pop
jp
add
and
pushf
mov
xchg
push
mov
xor
mov
dec
outsl
jns
dec
shr
cmp
cmp
shlb
jge
mov
loop
sub
mov
sbb
mov
jl
dec
rcll
pop
aam
in
gs
testb
int3
loope
les
mov
jp
sbb
mov
test
xor
lods
adc
push
ljmp
pop
mov
cld
inc
nop
ljmp
ss
loope
idivl
into
push
push
pand
push
sbb
pop
out
jo
xor
sub
xchg
stc
lcall
movsb
mov
repz
aas
push
and
cmc
or
inc
sbb
push
mov
dec
scas
aas
stos
mov
sbb
in
rcll
add
adc
inc
and
add
gs
mov
shlb
sub
loope
and
mov
or
jp
push
mov
lods
jl
mov
add
movsl
roll
outsl
mov
cli
and
imul
sbb
xor
dec
add
bound
mov
das
out
push
jb
push
or
jecxz
fmuls
hlt
sbbl
popa
ljmp
std
adc
lahf
out
sub
lret
adc
or
mov
negl
sbb
ficoms
add
xchg
es
inc
mov
dec
add
ljmp
out
in
xor
dec
pop
mov
pushf
ds
or
repz
cmpsl
mov
mov
cmpsb
and
or
cli
subl
jnp
mov
lds
mov
rcr
add
inc
enter
filds
movsl
xchg
in
aad
in
cwtl
call
push
jge
or
fstpt
test
jno
out
sti
xchg
or
cmpl
sbb
pop
lods
ror
out
pop
and
bound
add
push
repnz
dec
outsl
aad
jae
mov
test
movlps
frstor
xor
test
popa
stos
movsb
daa
shrb
mov
lret
cltd
mov
pop
pop
push
dec
cmp
push
das
pop
repz
sti
ljmp
xchg
shr
xchg
or
loope
push
xchg
or
ret
and
jae
or
inc
mov
sahf
je
xchg
or
sub
sbb
es
mov
mov
subb
gs
cltd
hlt
fstpl
insb
jb
xlat
mov
jecxz
negl
repnz
push
fisttps
xchg
sbb
pop
cmpsl
adc
es
mov
or
add
push
push
fistpll
pop
jg
lcall
push
hlt
iret
stos
push
sbb
insb
or
mov
lds
or
pop
les
loope
sub
lret
mov
sub
mov
scas
add
lea
jne
aam
lods
js
add
shrb
lahf
test
pop
mov
lret
popf
ret
das
jmp
pop
scas
popa
xchg
ret
mov
popf
push
fisubs
dec
js
jns
push
push
jle
les
mov
leave
jnp
fcomps
sti
stc
lock
or
inc
cmovae
add
test
xchg
outsb
sub
test
and
sbb
dec
pop
int3
pushf
or
fadd
xor
mov
testb
jle
add
jb
test
dec
xor
addr16
xchg
call
jmp
arpl
lret
movsl
repnz
faddl
inc
push
inc
insb
call
in
mov
xchg
ljmp
stos
xchg
mov
js
add
sbb
push
ss
sbb
push
jg
and
sbb
and
adc
lret
push
loopne
scas
mov
cmpsb
mov
inc
sub
mov
int
loopne
dec
push
mov
sub
ja
adc
add
idivb
pop
popf
xor
jne
jle
fnstsw
xor
sbb
sub
out
sahf
in
pop
pop
std
movsb
dec
fst
xor
ja
lods
sbb
jmp
loope
cmpsb
cld
into
orb
out
jle
imul
mov
pop
xchg
addr16
adc
stos
test
dec
cmc
ret
jp
jecxz,pn
push
adc
inc
cmp
jle
lahf
pop
sub
xchg
pop
sbb
in
ds
mov
mov
push
outsl
sbb
dec
cs
or
cmp
movsl
call
imul
int3
lret
push
cmp
xchg
or
test
dec
jo
push
sub
es
into
push
push
mov
fisubl
push
xchg
inc
pop
gs
sub
loope
inc
mov
lods
mov
iret
jbe
dec
fcomi
xlat
push
xor
pop
fs
sub
cmc
testb
adc
mov
test
jne
lods
adc
mov
out
enter
pop
and
stos
push
lcall
repz
test
jmp
fs
add
mov
fwait
icebp
mov
push
mov
mov
lods
mov
adc
loopne
xor
pop
or
ja
push
sbb
pop
or
insl
pushf
lcall
imul
inc
movsl
push
and
aam
or
push
mov
popa
bound
xchg
ds
pop
les
mov
and
jle
jnp
sub
push
imul
cmp
and
and
inc
sbb
dec
mov
leave
add
mov
push
test
adc
daa
cmpsl
add
cmpsl
mov
icebp
clc
sarl
lea
mov
dec
xor
push
daa
jle
jmp
icebp
push
ja
dec
out
mov
outsb
pop
push
addr16
shlb
mov
and
dec
push
bound
xchg
pop
pop
and
sbb
cmp
sbbb
orb
cld
sbb
and
out
dec
cld
and
push
lock
mov
in
push
xlat
aad
xchg
in
xor
loope
pushf
cmp
push
jge
xorb
inc
push
push
adc
add
xchg
sbb
pushf
push
push
cmpsb
out
int
xchg
cmpsl
mov
mov
xor
jnp
mov
aaa
andl
mov
fs
loope
pop
or
add
xchg
jns
jg
mov
fistpl
pop
add
inc
mov
sub
push
in
add
xor
in
add
mov
inc
loope
ret
pop
fsts
xchg
scas
sarl
add
mov
int3
or
out
cltd
inc
fisubs
jb
inc
mov
xchg
jmp
mov
xor
cli
stos
adc
mov
mov
ljmp
add
xor
adc
push
mov
xor
int3
adc
mov
mov
js
cmp
fidivl
sub
push
ret
inc
add
incb
add
in
ror
push
out
imulb
sub
sbb
mov
sbb
pop
inc
pop
cmpl
cmp
test
fs
movsl
cs
loopne
pop
xchg
and
adc
xchg
addb
sbb
pop
fistps
dec
add
data16
ret
into
jge
push
test
sar
and
iret
in
add
xor
and
mov
jge
xorb
jbe
sbb
mov
add
movsb
mov
repz
adc
mov
xchg
sbb
sbb
pushf
push
je
dec
add
jae
lods
popa
sub
repz
enter
mov
stos
aas
out
cmp
push
push
orl
pop
bound
push
mov
add
jle
cmp
scas
addr16
mov
loopne
jp
sbb
adc
dec
rorb
mov
pop
inc
out
dec
int
les
addl
xchg
jo
repz
adc
andb
sbbb
ljmp
xchg
hlt
and
pusha
lret
lock
in
bound
and
out
frstor
sahf
sub
adc
dec
paddw
sub
enter
in
xor
stos
mov
mov
mov
out
mov
sub
enter
xchg
mov
add
push
sub
fstl
xor
add
xchg
dec
mov
jne
lods
cltd
pop
jp
bound
pop
les
sarb
push
insb
sarb
sahf
icebp
mov
sbb
insb
fisttps
stos
lcall
outsb
xor
pushf
pop
jne
lcall
enter
push
sbb
aad
js
fistpll
out
test
loop
leave
push
jecxz
stos
inc
stos
dec
aaa
xlat
mov
in
negl
mov
lahf
mov
xchg
test
in
and
ficoms
rcll
stos
adc
jp
mov
sub
fmul
lds
push
lea
aas
push
xor
xchg
jno
fxch
mov
jnp
mov
jno
cs
xchg
inc
xchg
pop
lods
dec
mov
negb
cmovg
mov
icebp
cmp
lahf
rorl
sarb
loopne
sbb
or
jge
lahf
call
pop
jno
dec
adc
insl
dec
and
mov
jg
aaa
jp
or
cmp
cli
sub
hlt
mov
insb
subl
in
inc
dec
test
jle
inc
repz
sbb
aaa
push
iret
repz
mov
jnp
fidivrs
call
pop
adc
repnz
xchg
lcall
mov
daa
call
lcall
mov
push
jns
xchg
pushf
sti
jnp
mov
sti
inc
ss
xchg
sbb
mov
push
into
icebp
xchg
movsb
outsl
xchg
xor
sysret
jecxz
pop
ret
sub
inc
insb
rcll
xor
int
cmp
in
sub
cmp
jg
rolb
inc
repz
push
pop
xchg
out
push
inc
clc
add
add
cmp
adc
push
sbb
mov
inc
mov
jle
mov
push
cltd
or
sub
xchg
sbb
ret
add
stc
dec
sub
inc
int
inc
sub
es
fimull
icebp
test
jae
mov
or
je
xor
fld
mov
and
sub
sbb
inc
leave
pop
repnz
mov
pusha
sahf
bound
rcrb
jle
pop
andl
cltd
mov
xchg
or
inc
popf
mov
and
sub
xor
das
icebp
scas
lds
and
sbb
push
xchg
iret
inc
jg
js
sbb
aas
iret
jmp
dec
dec
adc
push
test
push
push
pop
arpl
mov
add
push
test
fsubs
and
lea
test
lahf
aam
push
out
mov
jmp
cmp
xor
repnz
aaa
xchg
cmp
pop
xchg
lock
or
sub
or
jns
lods
in
movsl
cmp
or
pop
xchg
add
fwait
sub
test
movsb
rorl
popl
xor
and
stos
loop
lds
jmp
sub
and
ja
jne
data16
push
xor
add
repz
push
mov
mov
shll
data16
adc
mov
xchg
mov
pop
add
jnp
jmp
testl
sub
div
lods
mov
inc
jmp
and
lret
xchg
sbb
cmp
and
jns
pop
sub
push
sub
sub
cli
dec
lahf
daa
add
cli
push
jae
cli
test
mov
and
mull
enter
cmp
das
aaa
aas
add
bound
xchg
call
and
mov
adc
popf
outsb
pop
gs
shll
pop
mov
or
loope
xchg
les
fwait
mov
push
int3
mov
imul
sbb
push
push
cmp
and
das
mov
jns
ss
adc
or
addl
std
fyl2xp1
adc
test
stos
jae
pop
cmpsl
out
loopne
out
jmp
cmp
xlat
sbb
rclb
xlat
decb
repnz
jp
xor
jo
sub
jnp
sbb
scas
mov
andb
jl
je
aas
lcall
into
adc
mov
push
sub
mov
fstp
scas
dec
or
imul
and
xor
push
cltd
add
xchg
inc
dec
ror
sub
icebp
and
cmp
jp
dec
out
subl
lds
or
loopne
sub
sub
or
arpl
ljmp
iret
mov
inc
jns
fs
xor
pop
ret
subb
aam
insl
dec
mov
push
dec
xor
adc
hlt
repnz
clc
dec
adc
push
sti
mov
pop
cmp
fs
fsubrp
sub
mov
add
ficompl
adc
push
movsl
incl
xchg
imul
stos
lret
adc
push
xlat
clc
dec
sub
sarl
xchg
cmp
dec
pop
cld
push
dec
pop
sbb
pop
add
into
jno
shll
mov
sbb
sbb
in
sub
push
shl
in
scas
out
lcall
push
ret
cmpsb
iret
mov
out
pop
push
mov
imul
rol
not
lahf
mov
mov
mov
push
adc
int
int3
xor
and
jge
xor
mov
xlat
push
dec
pop
loopne
xchg
mov
sbb
or
and
ret
repnz
fnstsw
xchg
pop
sbbb
xor
cmpl
push
pop
in
xor
xchg
mov
mov
pop
pop
sbb
daa
movsl
lret
jmp
xchg
mov
dec
pop
mov
ds
pop
lods
imul
scas
xchg
dec
or
mov
loopne
dec
add
mov
xor
movsb
adc
mov
ror
cs
jb
test
imul
dec
pop
push
in
addr16
iret
je
hlt
sub
leave
fidivl
dec
or
pop
or
mov
lcall
std
xor
testb
jl
aam
jo
pop
jo
sbb
fisubrl
in
pop
dec
sbb
or
je
pop
les
aam
xor
fidivrs
in
push
cltd
ret
sub
rorb
xchg
hlt
dec
mov
cmp
inc
xchg
pusha
aad
adc
pop
mov
int
add
inc
and
sub
mov
or
and
daa
xlat
xchg
repnz
loopne
jg
mov
out
into
ljmp
mov
das
inc
xchg
sub
sub
adc
in
jns
lea
into
stc
push
mov
cmpsl
sbb
or
push
data16
add
lds
jb
ret
daa
mov
adc
popf
mov
enter
clc
lret
in
and
movsl
lret
rol
cmp
pusha
pop
scas
je
loop
ds
push
stos
imull
out
add
xor
and
aas
xchg
pop
fists
aaa
icebp
addr16
xchg
push
mov
push
imul
dec
rol
add
fwait
push
xchg
loope
icebp
int3
adc
xchg
dec
add
cmpsl
mov
sbb
and
or
cmp
in
push
xchg
dec
mov
ds
imul
fmul
xchg
fadd
ja
je
sbb
add
int
adc
fdivs
inc
fs
int
lcall
xchg
sti
ret
dec
fucomip
das
jmp
cmp
sub
pop
mov
or
nop
inc
xor
loope
sbb
mov
ja
add
mov
inc
fildll
mov
test
ljmp
stc
test
mov
repnz
cltd
xchg
and
std
jb
cmc
pop
jmp
shlb
into
push
mov
xchg
rol
or
push
outsl
cmpsb
mov
xchg
int
push
push
dec
cmp
xchg
push
aas
repz
lods
popa
fdiv
xlat
adc
add
inc
pop
lretw
adc
mov
inc
mov
ljmp
cltd
pop
dec
or
xchg
xor
mov
aad
std
mov
shll
jno
mov
pop
cld
imul
repnz
dec
jge
sbb
fcoml
sarb
hlt
stos
cltd
rep
mov
mov
mov
and
fwait
adcl
clc
loop
pop
mov
xchg
inc
or
aas
out
sub
jg
adc
pop
stos
adc
mov
xchg
cmp
mov
pop
sub
xlat
sarb
push
call
xchg
in
aad
xor
mov
or
inc
sub
jne
jecxz
in
adc
sub
out
xchg
sub
out
inc
adc
in
inc
clc
push
mov
lods
popa
mov
pop
lret
gs
lcall
popf
mov
es
iret
add
mov
loop
cmpl
and
out
std
stc
dec
adc
jbe
adcb
jg
xor
cmp
push
out
or
negb
jbe
daa
in
lods
shll
jmp
insl
insl
pushf
test
repz
daa
push
push
mov
jns
fstps
jmp
push
cmp
or
rclw
xchg
pop
jmp
lods
sub
testb
stos
pop
cmpsl
lock
add
mov
push
pop
or
lret
xchg
dec
fwait
xchg
cli
stc
push
mov
and
ss
fsub
jne
int
idiv
dec
sti
sbb
mov
mov
cwtl
mov
jb
inc
jnp
push
adc
inc
fcomp
mov
adc
fst
sub
shll
in
push
testl
mov
mov
jo
jo
push
popa
dec
cmpsb
rcll
mov
pop
hlt
pop
jl
stos
xorl
daa
mov
and
test
aad
popf
inc
shlb
loop
xchg
mov
inc
lds
xor
push
test
push
cmpb
sar
cmc
xchg
cmc
jge
push
xchg
pop
jle
mov
mov
jp
lea
mov
cmp
gs
loop
test
je
lods
jnp
nop
sub
xchg
mov
push
sbb
adc
sbb
dec
int3
shrl
inc
dec
rolb
add
pop
xor
sahf
inc
mov
lock
push
jge
aas
add
sub
sets
mov
mov
fcompl
mov
jnp
jp
cmpsb
out
outsl
movsl
aaa
pop
test
popf
sub
ror
mov
cmp
xchg
testl
dec
js
bound
adc
repz
repnz
test
jmp
nop
test
cs
inc
hlt
fsubs
pop
popa
sbb
cmp
mov
sahf
xor
jb
pop
xor
inc
mov
inc
mov
mov
hlt
cmp
adc
add
orb
ja
mov
inc
mov
push
pop
cli
push
push
cli
mov
lods
cmpsb
ds
int3
inc
fcomip
mov
adc
arpl
inc
sub
movsl
hlt
or
jp
jecxz
.byte
mov
sbb
add
sbb
add
sbb
add
sbb
add
or
sub
or
sbb
add
or
add
add
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
pusha
dec
add
add
add
incl
add
add
arpl
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
jl
add
add
add
incl
add
add
dec
add
add
add
mov
incl
add
add
add
add
incl
add
add
xchg
dec
add
add
add
incl
add
add
cwtl
dec
add
add
add
incl
add
add
add
add
decl
add
dec
add
add
add
mov
dec
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
stos
dec
add
stos
dec
add
lcall
dec
add
dec
add
incl
add
add
mov
add
add
add
mov
add
mov
add
incl
add
add
add
incl
mov
add
cmp
cmpb
add
jmp
dec
add
les
add
add
incl
add
add
les
add
add
incl
add
add
dec
add
add
add
incl
add
add
enter
add
add
incl
add
add
enter
add
add
incl
add
add
add
add
incl
add
add
lret
dec
add
add
add
sti
into
dec
add
into
dec
add
add
add
incl
dec
add
dec
add
inc
rorl
rorl
mov
dec
add
xor
dec
add
inc
dec
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
aad
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
fmuls
add
add
incl
add
add
fmuls
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
fisttpll
add
add
incl
add
add
dec
add
add
add
jmp
fimuls
jmp
jmp
fisttps
in
fisttps
lock
incl
loopne
add
dec
add
jmp
loopne
add
pushl
loopne
add
lcall
dec
add
dec
add
ljmp
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
out
add
add
add
incl
add
add
call
add
ljmp
ss
add
add
add
add
push
sbb
add
adc
add
or
ficompl
or
in
sbb
add
sbb
add
or
sub
or
sbb
add
or
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
in
addr16
inc
shll
xchg
clc
inc
jle
ja
jl
mov
cli
cmpl
mov
and
lods
cmp
bound
xchg
aas
std
mov
adc
cmpl
jno
shlb
je
mov
and
push
js
xor
loope
push
pop
out
insb
push
xor
dec
push
dec
sbb
jae
cmc
add
jne
xchg
stc
insb
cmp
pop
jge
push
inc
lcall
arpl
inc
imul
or
add
mov
pop
sahf
jns,pn
or
sbb
mov
imul
fisttps
push
out
cmp
sbbb
das
stos
fistpll
mov
scas
in
std
fs
push
ret
hlt
mov
xor
imul
decb
dec
mov
repnz
pop
insl
xchg
ljmp
faddp
pop
out
imul
jno
mov
mov
add
divb
inc
sub
lods
mov
aad
mov
jb
mov
add
clc
and
gs
mov
cld
mov
cmpsb
mov
or
cli
in
movl
stos
xchg
rolb
fiadds
cmc
outsb
mov
into
and
lock
jo
test
ret
xchg
xchg
scas
iret
test
mov
aas
sahf
movb
sbb
sbbb
mov
pop
lcall
mov
repnz
mov
out
rorb
imul
ljmp
cmp
ret
xchg
lret
xor
mov
mov
movsb
xchg
mov
adc
add
inc
and
rcrb
mov
stos
pop
mov
xchg
imul
add
xchg
add
scas
test
call
mov
push
das
cmp
mov
xchg
int3
or
or
in
cmp
jmp
ret
xlat
dec
fists
cwtl
shrl
inc
jmp
imul
cmp
rcl
cmc
fdivrl
mov
movsl
ja
in
insl
enterw
jge
popf
xchg
or
ljmp
hlt
jne
jo
cmp
scas
or
mov
int3
es
fucomip
push
sahf
scas
push
insb
leave
sbb
mov
adc
add
scas
in
pushf
sti
jae
movsb
push
in
movsb
mov
cltd
cmp
dec
cmp
enter
sahf
sub
icebp
sub
scas
insl
or
rcrl
inc
mov
mov
mov
push
icebp
push
shrb
inc
push
aas
sub
mov
test
nop
add
andl
mov
or
jns
jbe
jge
mov
push
cmp
test
push
popa
movsl
rcl
add
aad
adcl
jns
loope
insb
dec
or
fdivrs
xchg
stos
pop
mov
std
xchg
cmc
sbb
sbb
aaa
jecxz
aad
sub
xor
sbb
daa
jl
xor
jo
scas
test
fucom
insb
add
jno
pop
pop
lahf
xchg
pop
cld
xor
sti
mov
mov
pop
push
imul
push
data16
cmc
push
std
adc
push
movsb
ss
in
push
imull
or
and
inc
push
mov
jnp
jno
jecxz
cmpsb
and
das
ret
and
lcall
or
imul
mov
pop
testb
push
aas
cmp
pop
xor
xchg
sbb
xor
popf
xlat
dec
inc
push
std
outsb
out
pop
roll
or
jecxz
in
xchg
fidivl
mov
push
and
jne
loopne
or
adc
test
xor
and
in
call
pop
xchg
fistpll
push
out
push
push
sbb
scas
mov
repnz
rclb
in
lret
adc
pop
inc
mov
dec
add
inc
loop
dec
subl
int3
lock
leave
dec
es
adc
adc
xor
adc
xchg
fadds
imul
cmp
add
push
outsb
lods
daa
pop
in
sub
and
add
adcl
inc
lret
sbb
adc
pop
push
lea
scas
pop
and
push
add
push
sbb
fmuls
ja
pop
cmpsb
pop
jno
mov
pop
ret
mov
aaa
orb
sbb
outsl
ret
xlat
sbb
pop
mov
lods
mov
sbb
or
sub
mov
aaa
cltd
mov
loope
inc
cmp
xchg
int
gs
jo
dec
mov
pop
inc
jae
pop
aaa
pop
push
ds
jnp
fimuls
sti
dec
in
sti
mov
or
stos
mov
imul
fs
mov
aad
sub
lcall
xor
lock
scas
add
ljmp
mov
mov
push
stos
stc
arpl
and
ret
add
mov
repnz
pop
icebp
out
or
sub
sbb
pushl
sbb
in
bound
adcb
xlat
mov
imul
out
jl
add
mov
incl
add
cmp
mov
adc
mov
xor
cli
dec
adc
cmp
das
push
in
outsb
inc
pop
lret
mov
pop
pop
int
sahf
add
jl
imul
xor
mov
jmp
out
add
shlb
push
pusha
daa
sbb
sbb
pop
mov
aad
popa
mov
cwtl
dec
inc
imul
and
lds
stos
xlat
fcomps
mov
out
xchg
pop
fildl
mov
shl
ds
jno
loope,pt
out
scas
movsb
and
repnz
subb
into
lret
mov
jl
sbb
call
mov
push
shlb
fmulp
jmp
scas
movsl
mov
out
mov
xchg
daa
push
sti
pop
enter
push
rcl
xchg
gs
dec
enter
add
into
sti
mov
lea
push
cmp
ss
mov
dec
add
fiadds
jbe
pop
push
jl
sar
es
adcl
fistpl
ficoms
out
push
xchg
jle,pt
daa
pop
xchg
add
dec
add
push
sub
cwtl
jb
iret
mov
arpl
push
ret
mov
lahf
inc
mov
int
leave
popa
enter
push
cli
cmp
push
lods
xor
cmp
add
cmp
add
test
test
push
stos
shr
dec
pop
int3
dec
stc
pop
jo
je
imull
push
jo
nop
sub
mov
roll
push
sti
rorl
mov
sbb
ret
adc
cmp
iret
adc
enter
outsl
leave
cld
adc
insl
add
push
push
sahf
test
mov
push
or
add
movsl
adc
sbb
movsl
push
pop
out
fwait
add
or
jl
jne
stos
jg
popa
cltd
mov
insb
cs
push
mov
or
or
xor
dec
adc
loop
push
ss
int
adc
push
fldt
test
dec
jl
mov
or
mov
ret
mov
dec
push
xchg
bound
adc
push
aam
and
xchg
addr16
cmc
sbb
inc
mov
repz
pop
pop
in
mov
xor
test
loop
outsb
inc
negb
bound
aas
push
xor
pop
js
sbb
or
push
push
ss
jg
jge
imul
cmp
push
sub
mov
jnp
aas
dec
pop
imul
cli
mov
ss
stos
daa
lahf
test
insb
mov
sahf
sti
push
in
pop
das
je
lds
xchg
and
sub
jb
cwtl
add
push
leave
sub
mov
sub
pusha
pop
pop
cmp
adc
push
mov
push
sti
push
push
xor
push
pop
push
inc
sub
inc
lds
xor
inc
cmove
inc
stos
pmulhw
daa
and
imul
inc
mov
xchg
mov
outsl
lock
mov
sub
inc
pushf
inc
fs
mov
pop
hlt
jle
inc
mov
dec
xor
cmp
repz
repz
dec
cmc
call
stos
rcrb
sub
bound
mov
dec
clc
add
and
movsl
or
sub
jecxz
js
and
sub
lret
sub
rcll
xor
scas
clc
popa
in
mov
cltd
adc
insb
xor
jno
dec
push
jnp
fwait
pop
shrl
dec
scas
mov
sub
lret
enter
faddl
lahf
nop
xchg
lds
lods
je
and
pushf
aad
jg
xor
sbb
mov
sub
in
into
jp
popa
and
dec
cmc
popf
push
ret
movsl
lahf
popf
jne
mov
in
lods
and
mov
mov
jbe
xchg
movsb
pop
movsb
loope
stos
adc
xor
sbb
xchg
mov
pop
popa
mov
dec
mov
mov
test
mov
mov
add
sti
mov
lods
call
push
or
sbb
xor
hlt
push
test
xchg
stos
hlt
pop
xchg
mov
fistps
les
and
fwait
test
cmpsl
xor
inc
cmp
cmpsl
ja
add
stos
rorl
es
push
insl
jecxz
or
xlat
xchg
loopne
jno,pt
fildl
sub
scas
lcall
pop
outsl
pushf
fwait
stc
sbb
add
xchg
push
cmp
test
jbe
push
adcl
mov
dec
xchg
mov
mov
cmp
cmp
lods
scas
xchg
adc
adc
jmp
pop
and
jo
cli
cli
mov
frstor
sbb
xchg
mov
inc
aaa
cmp
push
jo
fnsave
shrb
into
add
in
dec
mov
imul
repz
gs
and
jecxz
xor
jns
movsb
divl
adc
outsb
jl
outsb
testb
jae
in
jns
js
insb
jo
sarl
loopne
cltd
rcl
arpl
push
movb
mov
test
inc
xor
sub
inc
pop
mov
xor
and
clc
pop
inc
outsl
imull
dec
aas
fcoms
mov
jge
sti
mov
jnp
lods
arpl
mov
das
inc
pushl
or
int3
mov
sbb
jnp
xor
fcoms
xchg
or
cmp
add
pop
cmp
push
in
xchg
testb
aad
jp
out
fwait
inc
repz
out
sbb
jne
jl
cld
mov
or
xchg
sti
popa
sbb
and
repz
ret
xlat
mov
daa
loopne
aam
out
xor
inc
and
js
mov
aaa
or
push
lods
lds
xlat
dec
or
std
pop
xchg
imul
or
fildll
and
adc
sbb
inc
repnz
mov
pop
push
js
dec
push
js
mov
or
jge
adc
inc
mov
ljmp
int3
push
pop
and
rcrb
cmc
bound
gs
fnstcw
clc
bound
sarb
jmp
push
cmp
push
sahf
in
or
nop
add
sub
jg
or
fistps
push
adc
or
or
out
ret
mov
scas
js
xchg
xchg
mov
or
mov
cmp
repz
or
dec
cmpsb
notl
inc
mov
test
push
lahf
cmpsb
push
jmp
jl
imul
nop
sbb
hlt
enter
fildl
adc
repnz
icebp
pop
in
mov
insb
cli
mov
ret
and
jecxz
pop
lret
rcll
or
cmc
sbb
inc
into
jl
push
jp
mov
jl
lea
popa
std
push
mov
push
shl
idiv
mov
sbb
xchg
testl
sub
gs
mov
and
xchg
xchg
jge
into
ds
out
mov
push
scas
dec
shlb
stc
mov
jecxz
je
inc
xchg
push
add
cmc
xor
test
lds
sbb
clc
bound
xchg
push
adc
adc
pop
inc
push
mov
jge
insl
push
cld
lret
movsl
scas
daa
jl
push
mov
int
pop
and
aam
shrl
ret
movsl
and
scas
add
sbb
jge
out
push
lret
xor
shlb
or
aam
dec
cmpsb
push
test
icebp
imul
cltd
fwait
insl
inc
sbb
sub
sbb
jmp
test
cmp
sub
data16
cmp
or
push
in
sbb
std
mov
or
fstps
shlb
aam
imul
push
mov
nop
or
cmc
inc
scas
jns
cmpsb
xchg
aaa
cmp
iret
out
ret
rcll
je
mov
xchg
push
push
pop
jno
sbb
aad
out
push
ja
and
or
dec
loope
fstpt
dec
or
add
daa
xor
mov
mov
mov
sub
popl
mov
jl
out
shrd
ret
jecxz
into
loopne
int
jg
out
arpl
push
jbe
scas
cmp
aaa
sub
xlat
test
pusha
and
push
mov
mov
add
adc
lret
cmp
pop
cmp
movl
inc
sub
lods
test
dec
mov
std
xlat
leave
mov
sbb
xchg
in
rcrl
adc
jecxz
add
fs
test
imul
cmp
cmpsl
filds
pop
fisttpll
aas
or
dec
shl
inc
lahf
jno
jmp
addr16
sahf
mov
lret
dec
add
push
lock
mov
cmpsl
and
pop
add
arpl
test
cmp
or
mov
imul
sbb
sbb
cwtl
cmc
inc
daa
sbb
mov
roll
in
jmp
mov
mov
ljmp
call
aaa
push
insb
xchg
sti
mov
in
jl
scas
or
stos
push
les
in
fpatan
popf
insb
mov
mov
and
in
roll
or
sarl
rolb
mov
in
std
pop
shll
inc
ret
jns
mov
inc
movsb
mov
ficompl
push
cwtl
orb
adc
dec
xchg
stc
bound
lahf
xor
dec
dec
fimuls
push
add
mov
sarb
cmp
std
fsts
dec
mov
or
in
sbb
in
add
inc
mov
jnp
cmp
js
jecxz
push
adc
cld
vzeroupper
jp
mov
enter
push
ljmp
add
cwtl
sbb
push
push
ss
add
mov
callw
ja
dec
lea
mov
lods
mov
pop
mov
std
ja
or
subb
in
pop
push
imul
xchg
cwtl
pop
adc
sbb
xchg
lret
cmp
mov
fildl
mov
into
sub
pop
int
mov
shlb
mov
orl
sar
fidivs
push
movsl
inc
mull
call
imul
and
push
xchg
jge
jp
cmp
cmpl
inc
dec
fs
call
fs
cs
xorb
test
mov
jo
pop
iret
jle
cmp
pop
sbb
enter
cmp
rolb
mov
jmp
lods
inc
idivl
and
adcb
loop
loop
xor
loop
adcl
lahf
sub
inc
dec
scas
lahf
sbb
xchg
iret
push
mov
adc
ljmp
push
pop
ss
xor
mull
in
pop
mov
adc
mov
std
jl
mov
jne
or
imull
lock
mov
dec
inc
stos
sub
mov
sbb
cmc
iret
lret
sub
lea
jb
negl
inc
push
mov
mov
jp
sub
xchg
loopne
js
daa
mov
cmpsb
stos
xchg
and
xlat
xlat
repnz
sub
dec
sub
dec
fcmovnu
cmp
mov
push
and
adcl
aam
mov
or
pop
cmp
mov
popa
imul
push
jbe
gs
xchg
xor
in
rcl
jg
mov
jecxz
mov
in
jbe
lret
mov
mov
jo
or
idiv
cmp
cmp
pop
andl
lret
mov
push
repnz
cwtl
jle
xor
adc
push
mov
pop
cs
sti
xor
fcoml
dec
mull
lcall
cmp
or
sbb
push
sub
sbb
mov
pop
dec
std
adc
pop
in
int3
lods
jno
and
adc
cmpsl
adc
cmp
add
aas
cmpsb
mul
cmp
xchg
popa
repnz
enter
movsl
inc
sbb
lods
or
or
mov
inc
sbb
cmp
or
mov
mov
jp
scas
les
or
rolb
roll
jp
movsl
test
fadd
pop
adc
sbb
pop
jg
xor
push
outsl
mov
fisttpll
lods
out
fstpl
mov
inc
test
ljmp
sbb
jo
pop
sub
fisubrs
mov
push
test
les
sti
adc
fsubs
cmp
lret
andb
adc
adc
test
lea
mov
mov
es
pop
mov
fisttps
mov
mov
out
filds
rcl
fwait
add
ficoml
pushf
cli
ja
cmc
sbbl
repz
loope
jb
mov
int
lea
lret
and
sbb
sub
sub
cmp
inc
mov
das
sub
fwait
jnp,pt
and
test
jg
add
into
aad
and
jo
sbb
or
ret
add
add
or
pop
xchg
fcompl
stc
ja
fidivl
mov
repnz
shll
ficompl
dec
mov
loop
sti
scas
test
out
jge
sub
xchg
pop
jmp
mov
cs
fwait
leave
jnp
inc
dec
dec
punpckhdq
cmp
filds
xor
dec
xchg
inc
mov
loope
repz
les
cmpsb
xor
icebp
jo
in
fsubrs
mov
cmp
fs
push
rorl
inc
push
xor
mov
mov
nop
push
add
inc
fwait
xor
jbe
ret
fmull
jecxz
xchg
fmuls
jns
in
cltd
mov
xor
shll
mov
sub
inc
shl
dec
fbld
push
nop
xchg
cmc
in
sub
sub
repnz
xor
adc
mov
xchg
and
in
mov
push
mov
sbbl
test
into
and
jb
scas
rcr
inc
mul
repz
shlb
xor
xor
jnp
push
aam
push
fidivs
clc
loopne
pop
das
and
shlb
pusha
jae
icebp
scas
int3
negl
cmp
jno
adc
cmp
inc
jp
fistl
xchg
pop
xor
jns
test
aam
xchg
repnz
lahf
xchg
idiv
stos
jg
push
add
aad
pop
pop
into
repz
push
sbb
testl
xchg
mov
insl
mov
mov
icebp
testb
and
mov
sbb
xlat
clc
dec
mov
or
cltd
fmuls
bound
adc
xchg
in
int
push
daa
scas
and
add
ss
sub
hlt
in
jae
popl
mov
ljmp
test
decl
jp
xchg
out
imul
mov
ror
pushf
jnp
cmp
arpl
in
lret
cwtl
inc
xchg
leave
dec
and
call
insb
out
push
addr16
int3
pop
lea
xor
jns
jno
cld
mov
testl
xor
in
mov
xchg
in
in
xchg
in
jno
mov
fisttpl
jmp
ss
addr16
inc
add
push
mov
jge
into
jo
or
mov
roll
addl
enter
rcrl
dec
repnz
push
pop
push
or
fildl
mov
mov
xor
test
js
ljmp
or
dec
arpl
loop
fs
les
inc
repz
outsl
xor
jno
data16
lds
ds
sub
xchg
jg
inc
cmpb
xchg
jp
jae
add
push
add
inc
pop
mov
jp
push
icebp
cli
and
out
jns
sub
fcoml
imul
mov
cmp
adc
or
popf
shr
popf
mov
sbb
out
movsl
jl
dec
mov
xchg
lods
mov
lea
adc
pusha
jne
imul
repnz
dec
cmpsl
scas
stos
gs
adc
cmc
and
outsl
add
in
xor
sub
mov
jmp
shlb
std
lock
mov
mov
sub
fcmovnb
xor
jns,pt
fbstp
out
xor
jbe
sti
test
jnp
lcall
cli
stos
icebp
rcll
xor
cmpsl
inc
add
pop
icebp
sub
sar
xor
iret
or
ljmp
loope
outsb
push
dec
cmp
and
mull
add
movsl
lcall
popf
cmpl
sarl
cmp
push
dec
leave
sahf
jb
cwtl
insl
inc
cmpb
xor
sbb
cmpsl
xchg
daa
loop
cld
shl
scas
hlt
inc
xchg
xchg
xlat
xor
mov
xor
bound
lcall
aas
insb
in
adc
dec
aas
mov
loope
or
hlt
xor
xchg
movsb
outsl
sub
sub
gs
or
sbb
mov
push
mov
rcrb
xchg
add
daa
pop
mov
insb
mov
iret
and
add
roll
lret
pop
mov
mov
pop
fpatan
sbb
xchg
sbb
lods
add
xchg
int3
pop
jae
repz
mov
out
js
xchg
pop
xchg
mov
stos
cmp
mov
imul
cli
and
jg
popl
pop
ret
xchg
xchg
pop
mov
ds
stos
jle
cmpsl
or
mov
lahf
jecxz
fucomip
imul
mov
xchg
mov
dec
hlt
pop
popa
and
lcall
jmp
push
add
sbb
lret
mov
subl
push
mov
insb
in
sahf
mov
add
pop
xchg
mov
cmc
cmp
leave
adc
mov
insl
mov
fiadds
lods
sbbl
inc
stos
mov
lds
das
shlb
inc
pop
mov
je
xor
popf
push
shll
or
imul
int3
add
push
cmp
inc
jne
jecxz
cmp
jl
out
xchg
loop
sub
popa
shll
jae
adc
lahf
jle
mov
mov
in
aaa
push
pop
ds
lods
add
stos
pop
mov
cmp
enter
lock
or
inc
cmp
stos
leave
jbe
dec
add
aaa
in
loopne
.byte
