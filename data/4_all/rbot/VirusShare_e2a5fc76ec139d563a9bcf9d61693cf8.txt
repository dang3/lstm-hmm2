or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
jb
add
fnsave
add
jno
add
jno
add
jb
add
jb
add
add
add
jb
add
add
add
or
add
add
pop
jb
add
add
add
add
push
add
add
or
mov
add
add
xchg
jno
add
add
add
jo
add
jo
add
jo
add
jno
add
jo
add
jno
add
jo
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
outsb
fs
gs
popa
addr16
add
add
addr16
jo
outsb
dec
gs
js
add
add
gs
insb
inc
js
arpl
gs
add
add
je
push
outsb
fs
gs
gs
inc
add
add
je
push
outsb
jne
add
add
lret
js
jne
hlt
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
popa
xor
add
pusha
or
add
add
sub
push
dec
fadd
xlat
mov
and
sub
mov
je
pop
mov
push
in
jl
mov
test
mov
or
sub
pop
pop
mov
jg
and
sbb
cltd
ficompl
push
pop
lea
jae
inc
mov
jmp
stos
xchg
jg
xchg
mov
sti
mov
shlb
lret
xor
mov
stc
fists
pusha
xor
fwait
mov
sti
aas
test
dec
or
sti
jne
mov
pusha
test
fidivrl
mov
add
mov
and
jp
jmp
and
push
adc
jg
imul
call
mov
cmc
decl
js
mov
add
add
add
mov
and
and
shlb
dec
insb
loope
lds
insb
movsb
jge
inc
aaa
jb
bound
cltd
mov
inc
cltd
mov
push
push
cmp
in
jns
int
xchg
cs
aaa
push
xlat
xor
gs
pop
sub
inc
cld
push
dec
sbb
incl
xchg
or
dec
dec
sub
ljmp
lock
hlt
xchg
cmp
sbb
call
xlat
aad
mov
imul
popl
repz
sbb
jmp
xchg
ja
cmp
cmpsb
js
mov
popf
fisubrl
fstpl
xchg
fwait
popa
adc
lds
pop
jo
mov
xlat
dec
lret
mov
sub
xor
adc
and
icebp
gs
aaa
push
sub
jno
daa
daa
xor
add
test
repnz
test
push
frstor
das
nop
sbb
daa
and
push
jo
inc
jle
sarb
int
adc
out
or
gs
sbb
repnz
mov
jl
stos
sub
mov
push
cmpsl
xor
cmpsb
pushf
lahf
jae
lret
adc
aas
push
mov
inc
or
in
mov
sbb
push
loop
push
mov
mov
mov
lock
lahf
fcoms
pop
xchg
and
mov
cmp
xor
out
test
push
aaa
stos
or
cmp
pop
int3
out
and
sbb
shll
push
clc
addl
mov
mov
jecxz
dec
push
inc
out
adc
cmp
out
jns
test
subl
pop
int
jmp
and
sub
loop
das
or
ret
cmp
and
xlat
out
pop
js
out
xchg
arpl
cmpsl
sbb
inc
ja
rorb
or
fcmovnu
test
shll
out
arpl
mov
int3
adc
inc
add
cmc
add
aam
add
cmp
imul
decl
push
std
cmpsb
cltd
jge
popa
adcl
xchg
jmp
mov
pusha
sbb
xchg
repnz
sarb
jl
pop
mov
negl
inc
pop
mov
xchg
jns
rcll
push
cmp
adc
add
or
sahf
pushf
push
jl
add
shrl
or
dec
pop
inc
into
cmpsl
pop
loop
mov
inc
mov
sbb
enter
movsl
fcmovb
jne
xchg
addl
mov
enter
mov
jne
mov
fidivrs
loopne
jno
rclb
ret
add
cmpsl
nop
ret
das
sbb
and
dec
mov
lods
iret
jb
add
int3
xor
das
xchg
sbb
cmp
mov
mov
sti
loop
dec
mov
mov
aaa
clc
mov
mov
lcall
mov
roll
jne
push
stos
pusha
leave
std
dec
sub
call
insl
dec
xchg
cmp
out
rolb
push
sahf
jge
das
mov
daa
push
push
push
dec
jbe
mov
sahf
ja
lods
dec
jae
pop
jbe
ret
test
and
dec
test
or
mov
sbb
imul
push
xor
clc
sbb
in
fbld
pop
iret
cmp
inc
push
sbb
pop
out
test
cmp
pusha
out
push
inc
cmp
ret
mov
mov
dec
repnz
fildl
add
cmp
ret
out
jmp
std
adc
fs
push
icebp
jnp
sbb
lret
mov
jno
mov
mov
mov
jno
test
popl
fdivrs
push
pop
lock
sub
movsb
lcall
or
pop
sbb
repnz
sub
repnz
and
fsts
sbb
inc
push
mov
ret
sbb
push
jle
or
aaa
and
jno
ja
test
call
aaa
outsl
shl
in
or
or
loop
out
xchg
gs
nop
mov
dec
cmpb
mov
icebp
testb
rclb
int3
pop
sahf
lods
fldenv
cmpsl
in
not
dec
mov
push
mov
lock
bound
cld
js
push
push
jne
cwtl
cmp
mov
ss
inc
arpl
sti
imul
mov
addr16
add
xor
test
dec
or
arpl
testb
outsl
jl
cmp
popa
mov
dec
push
mov
jnp
jge
aas
add
jg
push
or
mov
sbb
andps
xor
mov
xlat
or
mov
movb
insl
out
pop
repnz
call
in
aam
movsb
cmp
cmp
fwait
outsl
cwtl
or
fs
repz
popl
cmpsb
adc
fwait
and
sbb
adc
dec
jnp
sub
out
pop
push
divl
rcrl
push
xchg
addl
push
adc
push
in
fisubs
mov
jecxz,pn
push
mov
add
fdivrs
in
and
orb
fs
push
inc
jp
jae
lods
adc
and
or
lods
rclb
test
icebp
jb
pop
xchg
push
push
cmp
insl
les
pop
test
xchg
sbb
orb
mov
push
leave
lock
in
mov
ss
push
jp
jmp
cmpb
add
out
dec
sub
adc
mov
mov
sub
mov
jae
dec
jecxz
pop
movsl
fstpl
jp
int
push
nop
push
xor
and
ljmp
fldt
addr16
sarl
stc
lcall
imul
aam
inc
pop
jno
lods
lret
and
std
mov
sarb
lods
rolb
pop
popl
ja
xchg
xchg
mov
int
push
sbb
sarl
push
jb
int
mov
test
push
scas
loope
scas
repz
push
fisubrs
mov
inc
div
pop
jne
inc
cmp
jle
mov
mov
outsl
push
xor
xchg
and
bound
idiv
xchg
in
or
hlt
cmp
inc
test
sub
and
xor
inc
mov
fmul
cmp
fistpll
xor
pop
rorb
cmp
pop
xchg
jle
adcl
js
je
or
cld
mov
fs
mov
aad
push
out
xlat
mov
popf
push
aas
fwait
test
bound
jp
popf
mov
sbb
fbstp
sub
test
call
push
jne,pt
ret
shlb
out
int
jne
jb
mov
insb
fldcw
notb
cmc
jno
pop
inc
dec
repnz
in
icebp
subl
fistpl
imul
sbb
mov
push
push
mov
mov
mov
dec
jbe,pn
add
and
mov
pop
add
lret
cli
insb
xor
mov
mov
push
divl
int3
mov
in
dec
test
fucom
mov
in
xchg
mov
mov
icebp
js
xor
add
mov
notb
popa
push
movsb
mov
dec
cmp
popf
pop
cmc
add
int
fildl
inc
je
jbe
and
xchg
pop
fimull
xchg
or
mov
xchg
clc
insb
iret
mov
fiaddl
cmc
daa
cld
scas
cmp
stos
sub
jbe
xchg
int3
out
adc
icebp
popf
icebp
jno
pop
lock
cld
jbe
jp
cmp
aam
mov
and
jp
jb
xchg
cmp
movsb
and
mov
mov
dec
cmp
mov
and
pop
push
ret
mov
mov
pop
jno
cmc
adc
mov
xchg
dec
mov
out
iret
push
jg
fsubrl
or
mov
push
rcl
dec
inc
mov
sbbl
ljmp
push
mov
add
jge
leave
jg,pt
out
int
aad
fisttpl
or
popf
out
into
aad
bound
pop
jb
repnz
aas
ja
sbb
sbb
jle
test
in
mov
xchg
xlat
movsb
jl
mov
push
ja
cmp
mov
push
mov
out
push
xchg
iret
jo
xor
jge
sti
inc
cmp
jmp
sub
lcall
addl
or
lret
xorl
bound
jg
mov
jb
xchg
lret
cmp
enter
push
test
shlb
lret
in
xchg
shll
das
stc
hlt
sti
insb
xchg
mov
gs
cld
mov
jne
out
xor
dec
push
mov
movsb
sub
xchg
push
dec
xor
pushf
hlt
in
mov
movsl
inc
push
xlat
fnstenv
jb
xchg
or
cmpsb
sbb
in
fadd
in
push
add
push
inc
test
loope
in
inc
fstpl
stos
xchg
cmp
imul
mov
aad
jmp
add
sti
gs
cs
sti
cwtl
js
mov
adc
add
sub
test
and
shlb
shll
xor
pop
pop
lret
fsubs
out
loope
je
ret
nop
les
out
cmpsb
aaa
cmpsb
popa
mov
movl
lock
mov
call
or
mov
sub
mov
push
scas
shlb
pop
imul
lods
mov
dec
cmc
push
fwait
pop
push
push
xchg
icebp
dec
cmp
xorb
daa
or
mov
inc
push
cmpsb
fnsave
loopne
sub
les
test
xchg
outsl
xchg
push
mov
iret
cmp
jmp
jne
lods
sub
sbb
pop
add
cmpsb
xor
cmpsl
jl
cmp
dec
orl
xchg
inc
fs
lcall
nop
lods
pusha
in
loopne
addl
or
xchg
aaa
lock
adc
jmp
push
mov
out
scas
cmp
xorl
mov
jb
cmp
add
pop
xchg
pop
push
xor
lcall
cmp
xchg
jmp
cmp
cltd
mov
adc
cmp
clc
in
inc
xor
jbe
sbb
xor
xchg
loopne
cld
cltd
call
lods
xchg
push
jecxz
fchs
xchg
jge
mov
orb
sbb
cmpsl
cmpsb
xchg
xchg
xchg
pop
push
add
sbb
flds
mov
in
push
inc
sbbl
add
pop
mov
mov
or
jl
sub
cmp
mov
test
icebp
dec
xchg
mov
lods
test
lahf
inc
cmp
or
rcrb
popa
or
cmpsl
lds
dec
or
loop
mov
pop
je
adc
cmp
jge
pusha
outsl
lcall
sbb
aam
js
ret
shlb
mov
ret
fcoms
testl
pop
fistpll
xchg
mov
divb
insb
jmp
sub
mov
int
adc
int3
jae
inc
sbbl
jmp
mov
cmpsb
sahf
inc
sbbb
push
push
and
ficoms
fstpt
nop
sub
jb
adc
icebp
xor
daa
xor
dec
mov
lock
pop
les
add
sbb
xor
dec
mov
sub
inc
pop
xchg
pushf
push
lcall
int
das
das
jmp
divb
cmp
out
mov
movl
dec
scas
sbb
sbb
pop
sub
jo
xor
mov
dec
cmc
repnz
mov
push
xor
adcl
cmp
xor
adc
cmp
adc
pop
shll
dec
fs
xchg
daa
add
jne
xlat
sub
insb
jl
mov
sarl
push
xchg
jb
inc
cltd
or
push
outsl
ss
cmpsb
jp
out
jae
mov
xor
sarl
push
mov
mov
fmull
mov
inc
jecxz
jns
and
push
or
shlb
push
mov
pushf
loop
lret
orl
sbb
scas
leave
cmp
inc
cmpb
sbb
int
in
fwait
js
jecxz
dec
cmp
cmp
insb
add
jmp
gs
cmp
enter
scas
andb
mov
jg
pop
insl
ret
sahf
lret
mov
repnz
and
and
jns
stos
xchg
hlt
fisubs
pop
repnz
ret
sub
lcall
aaa
add
cltd
bound
xchg
xlat
pop
jl
fiadds
mull
test
sub
sub
cltd
lods
repnz
xchg
mov
repnz
outsb
fmul
xor
pop
add
xchg
lcall
ja
pusha
jno
sbb
pusha
fs
cmp
sub
jbe
lea
mov
cmp
push
cs
shrl
dec
sub
imul
or
popa
stc
dec
lock
subb
dec
aam
leave
lods
sbb
mov
fs
in
arpl
jl
sub
or
rclb
pop
roll
out
xor
jnp
mov
mov
mov
jp
jle
inc
imul
mov
aas
pop
sub
test
cwtl
stos
fisubl
dec
mov
and
mov
ret
ret
aaa
outsb
popa
loopne
xor
out
into
loopne
or
mov
stos
push
inc
mov
push
or
jmp
stos
mov
adc
test
cld
lods
in
icebp
xorl
pop
test
push
loopne
out
pop
dec
adcb
push
or
sbb
in
adc
je
xchg
rcpps
les
enter
pop
adc
imul
pop
mov
jg
aas
in
sbb
dec
xchg
sbb
xor
xchg
adc
fildll
cltd
out
inc
in
sub
gs
mov
jp
cmp
shl
or
inc
lcall
sbb
mov
mov
jbe
int
and
ds
dec
jge
cmp
repnz
xchg
and
pop
jmp
leave
or
mov
push
push
push
or
xchg
roll
aad
pop
push
inc
and
mov
in
or
fwait
mov
in
jnp
sub
and
bound
rorl
incb
mov
jmp
mov
cli
xor
mov
subb
ds
out
imul
jo
pop
out
jbe
xor
push
call
mov
dec
xrstors
sti
rcrb
imul
roll
dec
test
out
cmp
mov
stos
cmpsb
cld
in
cmp
test
add
rclb
mov
ret
gs
sahf
imul
scas
dec
sbb
nop
stos
adc
les
inc
addb
fdivs
xor
cs
ds
das
push
sarl
xchg
lea
stos
inc
sub
aam
popa
push
arpl
mov
cmp
data16
out
ljmp
repz
negl
aad
sbb
mov
ja
notl
jmp
mov
andb
sbb
in
stos
or
xor
cmp
sbb
daa
push
in
divl
outsb
addl
jns
imul
mov
jecxz
mov
mov
cli
std
inc
inc
je
dec
dec
bound
imul
jae
dec
pop
inc
dec
add
lcall
cmp
and
pop
sbb
iret
add
loope
mov
mov
mov
adc
mov
xor
cmp
jecxz
loopne
jb
push
fimuls
sub
cltd
cli
test
add
test
scas
sbb
roll
dec
stc
jnp
mov
jne
inc
stos
cld
wrmsr
sub
mov
mov
jo
add
pop
mov
mov
imul
aas
add
and
mov
test
add
push
sub
andb
les
int
cmp
pop
jb
add
inc
fcomps
imull
xchg
popf
fadd
add
inc
shll
clc
popa
inc
sbb
fs
fidivs
cltd
mov
scas
in
fdivl
sub
inc
lods
lcall
cli
push
stos
lods
xchg
adc
xor
enter
jnp
into
lcall
sub
inc
cmpsb
sub
repz
sti
sbb
ficompl
movsb
xchg
pop
add
inc
sbb
ficomps
insb
shll
xor
adc
dec
adc
imul
adc
mov
dec
fwait
out
in
mov
fists
movsl
xchg
ljmp
and
iret
gs
idiv
aas
adc
mov
fsubs
clc
bound
xor
and
outsl
mov
push
fstl
pop
inc
pop
jg
push
sub
imulb
pop
mov
sub
add
or
pop
stc
in
jecxz
jae
cmpsb
je
mov
add
ja
stos
add
lcall
mov
repz
dec
xor
outsl
fidivrs
bsr
xchg
notb
lea
inc
cwtl
fstpt
dec
out
test
jns
fs
mov
dec
lods
or
xor
repnz
das
loope
adc
icebp
outsb
sbb
fdivrl
test
dec
in
adc
lea
js
inc
sbb
mov
xor
dec
or
push
test
mov
push
outsb
lcall
sub
scas
in
clc
cmpsl
mov
cs
ds
push
jae
test
loope
scas
or
sub
out
rorl
enter
xor
or
test
aam
inc
insb
fucomp
lcall
pop
mov
ljmp
mov
and
lret
inc
sub
aaa
pusha
imul
nop
mov
inc
adc
cld
movsb
mov
pusha
cld
out
jle
dec
push
cmp
ja
into
mov
mov
pop
add
and
data16
jnp,pt
fisubs
das
push
adc
pop
xchg
stos
aaa
inc
mov
cmp
repnz
faddl
insl
imul
adc
fadd
hlt
sub
sbb
pop
sbb
shrl
sbb
lcall
sti
out
lea
mov
pop
push
leave
add
outsl
pop
lcall
or
inc
dec
xchg
ss
psrlq
sub
mov
inc
out
add
pop
cmp
cmp
or
iret
sti
negb
in
lock
sbb
pop
fsubrs
and
mov
xchg
gs
push
bnd
movsb
insl
xchg
push
cmc
push
orl
loopne
and
test
add
fbld
ret
and
shl
into
sahf
push
mov
or
cmp
fsts
sub
aam
sub
pop
aam
mov
les
xchg
adc
sbb
jle
dec
push
in
in
inc
add
or
pop
out
cmc
rcll
xor
push
sbb
mov
dec
test
mov
or
xor
je
int3
xor
lcall
test
push
or
imul
lock
or
btc
outsb
iret
pop
arpl
pusha
xchg
in
mov
scas
arpl
mov
cmpsb
push
push
dec
add
push
mov
jg
inc
cmp
and
add
inc
ret
add
mov
inc
ss
jo
shl
mov
movl
cmp
or
ss
jae
sub
test
jne
inc
inc
rcl
jb
clc
scas
dec
mov
cmc
shll
js
sub
insl
jns
out
pop
sbb
and
and
or
cmp
adc
jg
and
pop
xchg
mov
enter
insb
and
and
or
loop
clc
xor
mov
in
cmp
popl
cmp
lret
or
push
cmpsb
jbe
xor
pop
xchg
call
fnstcw
inc
fwait
cmp
or
stos
sub
xchg
jge
mov
hlt
scas
test
dec
aas
add
out
push
scas
add
sbb
jbe
loope
jne
ss
jns
nop
fdivr
add
js
loope
inc
dec
mov
mov
jg
xor
paddd
xchg
push
int
lret
add
fucomip
je
jg
sub
ja
repz
stos
stos
push
dec
imul
xchg
and
mov
scas
push
mov
in
imul
adc
stos
cmp
push
jl
xchg
and
cmp
dec
push
testb
rorl
addl
cwtl
iret
lret
imul
push
push
int
fisubl
pop
mov
add
std
xor
shr
aad
dec
enter
add
jge
popa
outsb
daa
test
mov
aas
cmp
pop
adc
cmp
adc
enter
and
adc
pop
mov
mov
inc
pusha
or
dec
sub
adc
xchg
inc
test
xor
dec
dec
pop
xchg
jae
sti
push
outsl
add
mov
or
add
fsts
xor
push
int
sbb
fdivr
jb
xchg
mov
nop
clc
mov
add
jp
pop
add
add
lret
aad
xchg
jle
sub
add
mov
cltd
fadds
adc
add
mov
cli
popa
push
push
into
mov
inc
mov
fmuls
sbb
add
lahf
mov
mov
or
cwtl
lret
jno
popa
sti
xor
sbb
xchg
pop
clc
gs
call
jl
adc
cmp
add
pop
scas
mov
into
cmp
lret
in
push
and
push
out
dec
fbld
mov
pusha
mov
pusha
xchg
sub
xor
pusha
aad
or
movsb
mov
insb
jl
pop
enter
jge
sub
mov
adc
int3
pop
cwtl
jns
sbb
lcall
push
pop
out
movsb
jecxz
push
sub
adc
les
stos
test
or
inc
int3
lahf
or
inc
mov
jns
and
test
scas
dec
leave
int3
shr
aam
inc
sub
data16
movsb
sbb
dec
pop
dec
lret
mov
inc
xor
arpl
xchg
xor
adc
mov
rclb
push
adc
xchg
psraw
xchg
mov
mov
adc
int
insl
gs
mov
in
mov
rep
xchg
mov
rclb
jecxz
add
sbb
jl
lock
inc
lods
sbb
jle
xchg
aam
fidivrs
mov
sub
scas
and
adc
scas
mov
inc
pop
push
pop
mov
jg
or
jno
aas
popf
out
ljmp
imul
leave
fistpll
mov
dec
imul
xor
push
pop
mov
fidivrs
pop
icebp
push
xor
les
test
dec
out
cmpsb
scas
in
pop
aad
jb
imul
cmpsb
pop
cmp
mov
mov
adc
jb
fwait
pop
stos
pop
push
push
nop
mov
fwait
jl
stos
ds
cmp
mov
enter
gs
in
in
in
jnp
jmp
jmp
cltd
cmc
push
out
dec
bound
popa
shrl
jge
dec
xchg
vsqrtpd
decl
pop
push
dec
adc
shl
inc
adc
xor
mov
jecxz
xchg
popa
xor
sahf
xor
sbb
fidivs
push
sarb
cmp
into
gs
imul
sbb
or
or
into
lock
in
call
clc
pop
out
mov
mulb
imul
dec
xor
sarb
in
in
pop
sub
or
adc
das
pop
cmp
clc
std
jne
sub
mov
mov
push
adc
hlt
jns
inc
mov
push
fldcw
add
push
mov
mov
pop
or
mov
jns
leave
fs
or
xor
and
pop
and
les
in
je
push
jmp
push
or
fmull
cmp
out
testl
push
inc
iret
fcoml
test
bnd
dec
push
jg
jbe
je
dec
nop
cmp
dec
xchg
fld
int
adc
mov
cmp
pop
sbb
out
mov
scas
sbb
dec
mov
sub
in
rcll
xchg
cmpsb
or
adc
stos
je
mov
jae
inc
scas
push
sti
icebp
stc
mov
lahf
call
push
or
orl
push
stos
jg
mov
add
fsubl
clc
adc
stos
insb
jge
cmp
outsl
test
pop
test
popa
inc
or
push
push
xor
dec
fucomp
insl
adc
and
aad
adc
cltd
pop
sub
xor
into
adc
in
insl
xchg
out
pushf
or
notb
arpl
cmp
pop
pop
inc
inc
pop
fisubrl
cwtl
add
mov
icebp
gs
jno
mov
cmpsb
jne
mov
mov
mov
clc
gs
out
movl
sub
sub
xor
fistpl
ss
outsb
mov
pop
fisubrl
out
mov
cwtl
dec
push
aas
jg
push
cmpsb
nop
and
dec
or
xchg
test
mov
cs
or
push
dec
xchg
pop
negl
stos
jno
aad
xchg
stc
aaa
syscall
mov
pop
or
ret
mov
test
enter
pop
repz
movsb
jg
cmp
out
pop
push
inc
cmpl
in
bound
loop
pop
mov
aaa
je
outsl
inc
cld
jp
mov
sbb
sub
rcll
test
dec
mov
add
pushf
push
jecxz
in
repz
and
stos
loope
mov
scas
xor
sbb
test
xchg
lock
jl
push
icebp
and
mov
gs
leave
inc
xchg
lock
dec
pop
rolb
inc
js
inc
jbe
repz
pop
mov
push
xor
sub
outsl
add
cmp
jle
repnz
clc
shl
mov
inc
xor
xchg
xchg
dec
loop
xchg
inc
sbb
mov
bound
mov
cmp
fs
jl
jecxz
push
push
mov
ror
shr
mov
xchg
push
js
loopne
push
mov
iret
add
push
xchg
xchg
sub
sub
call
cmp
jne
push
rol
sbb
lret
imul
dec
int3
ljmp
in
inc
mov
gs
loop
mov
push
mov
jo
dec
cmpb
cltd
shlb
scas
xchg
dec
sub
inc
adc
mov
push
xchg
mov
add
in
test
push
sbb
test
out
and
lret
out
jo
enter
fisubrs
push
xor
mov
insb
lret
cmp
std
jbe
dec
mov
xor
out
mov
xchg
popa
xchg
cld
push
push
movsb
pop
ss
movsl
fdivrl
dec
dec
or
xchg
cmp
push
gs
jl
fdivl
loop
pushf
dec
shll
xchg
jmp
inc
stc
sbb
test
pop
inc
das
inc
pop
inc
add
xchg
mov
bound
cmp
movsl
add
cmp
movsl
mov
shll
fistpl
adc
sub
loopne
stc
dec
inc
mov
outsb
sbb
sub
pushf
test
out
ss
std
pop
cmp
xchg
adc
mov
pop
subb
inc
pop
sbb
ret
xor
clc
arpl
sub
shrb
cmp
xor
rcrl
inc
push
jne
push
jo
jb
fldcw
std
sbb
repz
repnz
mov
sti
inc
shll
pushl
repz
popf
cmp
dec
add
inc
jmpw
jl
add
pop
cmp
inc
jno
adcl
or
imul
scas
inc
or
adc
mov
jmp
movsl
fiaddl
mov
insb
repz
push
xor
cmc
repz
xchg
inc
mov
pop
loop
stos
call
push
and
mov
xor
flds
popa
nop
jne
pop
ret
rcrl
jl
int
std
xor
inc
jp
cld
sbb
lds
sbb
test
add
in
or
hlt
lahf
iret
or
jae
pusha
jo
test
inc
in
sahf
lahf
mov
sub
aam
mov
hlt
lods
dec
rorl
in
jmp
xchg
leave
shlb
ja
int
add
mov
jmp
jmp
add
mov
pop
hlt
xor
add
es
jnp
push
xor
cld
or
mov
cmp
cltd
scas
fstpl
enter
pop
push
out
stos
mov
and
add
insb
cmp
fwait
popa
cmp
sarb
push
mov
js
dec
sub
or
mov
push
fdivr
pop
insb
scas
push
lds
jle
mov
int3
fnstenv
mov
test
not
fincstp
pop
inc
cwtl
cmp
or
mov
xchg
ja
cld
sbb
or
mov
jno
in
daa
xor
cmp
fstl
dec
mov
mov
sbb
movsl
sbb
jb
add
jo
push
mov
icebp
mov
aaa
xor
push
jl
or
xor
xchg
lahf
lret
jno
sbb
movsl
inc
dec
xor
inc
or
push
aas
or
or
pop
stos
les
jbe
mov
xchg
and
push
push
fldt
cmp
fildll
jb
mov
je
lret
sbb
imul
mov
add
inc
adc
test
pop
dec
or
mov
ljmp
xor
or
push
sub
pop
es
sbbb
mov
or
stos
add
fildl
jns
mov
mov
xor
icebp
xchg
rcrb
mov
xor
das
insl
or
neg
enter
pop
idivl
adc
mov
jl
arpl
cmp
repnz
cli
shlb
xchg
xor
push
cli
sbb
sarl
in
push
adc
inc
cltd
pop
mov
cmp
subl
stos
mov
jecxz
das
add
sbb
jnp
cmc
adc
mov
mov
xor
in
or
mov
jge
loop
dec
add
int3
icebp
pop
adc
pop
mov
shl
arpl
cwtl
cmp
cmp
or
sub
jmp
push
dec
dec
mov
pop
fldl
cwtl
iret
xchg
addr16
sbbb
movsl
mov
mov
movsb
lock
gs
mov
outsl
leavew
leave
gs
xor
mov
push
fimuls
lods
push
pop
jmp
popa
repnz
mov
mov
fisttpll
movsb
or
lcall
xchg
push
cmp
imul
jle
push
push
sub
mov
mov
ret
cmc
cmp
fcompl
pop
sub
aad
pop
or
out
xor
in
ds
pop
jle
jp
pusha
pusha
jnp
add
loope
fisubl
jne
xchg
in
or
pop
ret
mov
stos
int3
cmp
cmp
push
loop
dec
subb
enter
int3
aam
fidivs
mov
or
pop
pop
nop
mov
sub
dec
shlb
mov
insl
adc
pop
ret
and
cmp
cmp
sti
fiadds
in
test
scas
cli
out
mov
pop
pop
push
ret
loopne
xchg
sbb
arpl
adc
gs
aaa
pop
add
arpl
inc
mov
testb
ret
ret
mov
inc
iret
xchg
out
imul
inc
mov
imul
jg
xchg
movsl
loope
mov
lock
and
or
pop
mov
and
sbbb
inc
add
cmp
out
sbb
pushf
int3
ficomps
pushf
mov
fcmovnu
sub
xor
pop
cld
cmp
xor
lahf
xchg
fcmovnbe
rorl
pushf
mov
divb
push
jp
aam
push
xchg
popf
sub
pop
and
add
negb
sbb
or
mov
dec
rcrl
aam
cld
in
pop
mov
sbb
mov
mov
sbb
xor
add
rol
xchg
lock
mov
int3
pop
mov
outsl
cmpsl
mov
cwtl
imul
xchg
push
push
jmp
add
cmpl
fisubs
mov
pop
std
sub
mov
or
enter
push
loop
je
cmc
adc
inc
xchg
dec
sub
cmp
and
xor
adcl
lock
pop
push
dec
dec
inc
jno
decl
mov
xchg
dec
or
xor
adc
dec
clc
push
mov
mov
mov
imul
add
xor
mov
dec
incb
sbb
xchg
jmp
test
sub
pusha
lret
jmp
pop
mov
sub
xchg
mov
xchg
ds
xchg
and
fists
xchg
sbb
or
orl
int3
rorl
mov
sub
stc
lret
jns
push
mov
call
and
icebp
push
imul
popf
dec
lock
cmc
rcr
sub
call
cwtl
lcall
xor
aam
sti
popa
es
xchg
shrb
shll
subl
and
mov
jbe
inc
pop
loope
lds
loopne
mov
outsl
mov
inc
cmp
push
cs
push
fdivrs
roll
mov
vfmsub132ps
xor
jns
sbb
mov
in
pop
out
ror
adc
insb
or
insl
mov
iret
cli
leave
sub
mov
inc
xchg
mov
push
cmpsl
mov
xchg
adc
fcmovnbe
nop
aas
pop
not
add
cmc
jecxz
pop
lock
pop
ja
test
adc
mov
mov
inc
sbb
adc
mov
cwtl
nop
and
push
pop
test
scas
cmpl
mov
dec
aas
jnp
mov
nop
sbb
mov
cmp
add
int3
fwait
adc
fistpll
sahf
mov
ss
hlt
in
push
fidivs
inc
aad
mov
or
push
fdivs
es
shrl
sub
das
or
shl
lcall
cmpsb
inc
bound
dec
inc
shll
mov
push
cmp
je
insb
int3
cltd
loope
cmp
mov
adc
dec
pop
push
lret
push
mov
aam
sub
xlat
lods
insl
dec
movsl
ds
shrb
or
and
cmp
popf
jae
shrb
push
enter
xchg
and
inc
pop
adcb
imul
test
scas
ja
mov
repz
xchg
lea
imull
mov
das
dec
cmpsb
and
mov
add
repz
mov
pop
ja
out
xchg
xchg
aas
sbb
sub
xchg
or
in
cltd
pop
jle
test
pop
pop
jnp
scas
loop
leave
fsts
xchg
orb
out
mov
pop
xchg
xchg
testb
insl
pushf
cwtl
ret
push
jbe
cwtl
jae
push
movsl
imul
fwait
pop
outsb
clc
dec
mov
sub
decl
mov
out
shrb
inc
fstl
push
mov
test
and
clc
mov
dec
int3
rcrb
stc
adc
or
std
mov
mov
pop
outsl
int3
and
inc
xchg
movsl
sub
dec
mov
ja
repnz
push
dec
inc
xchg
cmpsb
aam
sbb
movl
lahf
mov
call
xchg
push
push
fcmovu
rorb
adc
jbe
xchg
mov
mov
sbb
in
sbb
sub
pop
fldcw
pop
ffree
outsb
loopne
rcl
pop
cmpsl
mov
cmpsb
xor
adc
jp
mov
and
pop
bound
mov
push
ljmp
adc
gs
sbb
mov
jmp
imul
lds
adc
std
jmp
jb
cmp
insb
aas
sub
sub
imul
inc
xchg
mov
mov
or
in
push
cmc
dec
inc
negl
stc
out
stos
add
xchg
lods
pop
and
dec
mov
push
insl
into
fimull
pop
inc
xchg
push
clc
sbb
xchg
jno
out
push
repnz
push
mov
imul
cmpsl
xchg
xchg
and
aaa
fdivs
jbe
fldcw
in
ret
js
insl
inc
mov
mov
pop
xchg
xchg
fsubl
rcl
mov
add
test
mov
and
add
pop
gs
lahf
adc
add
inc
ret
jae
xor
dec
push
shr
xchg
jmp
sbb
push
mov
pop
xlat
negb
imul
fsubrl
nop
outsb
adc
popa
ss
out
bound
mov
jnp
pushf
subb
in
sbb
dec
adc
cmp
mov
rcr
push
mov
mov
push
iret
cmp
mov
xchg
cmpsl
pop
pop
lea
cmp
add
fmuls
and
fcmovbe
xor
pop
aam
jge
cmc
jns
bound
adc
add
push
jp
sub
or
dec
mov
loop
cltd
cli
repnz
sbb
fs
mov
mov
fs
inc
aaa
in
inc
adc
shrb
bound
ljmp
pop
pop
mov
push
popf
push
xor
icebp
dec
orl
dec
cli
push
xor
xchg
imul
inc
outsl
sub
in
jecxz
int3
outsb
sub
dec
pop
out
mov
sub
je
in
mov
bound
adc
xchg
push
out
cmpsl
xchg
addr16
lock
pop
dec
mov
sti
jg
xchg
and
fnop
xlat
test
mov
jg
insb
mov
cmpb
xchg
mov
in
in
jg
mov
pop
lds
jns
mov
add
out
in
sbb
cltd
xchg
fwait
gs
sti
mov
mov
mov
scas
cmpsl
and
sub
mov
or
xor
cmp
sub
repnz
adc
xor
push
dec
xchg
jg
mov
js
cmpsl
lret
push
pop
or
jnp
das
and
divl
popf
movsl
adc
mov
xchg
inc
xchg
cwtl
and
dec
lret
fnsave
je
addr16
stos
add
push
dec
in
nop
rcr
out
fsubl
mov
call
stos
nop
xor
ficompl
mov
xchg
ret
add
fisttpl
mov
insb
xchg
imul
addr16
push
mov
cmp
fildl
and
xor
scas
cmp
pop
inc
pop
push
jb
add
push
aad
push
jb
lahf
test
adc
cmp
int3
icebp
test
cs
and
es
mov
sbb
loopne
clc
popf
pushl
mov
sbb
incl
rclb
pop
mov
cmpsb
or
fwait
imul
pusha
adc
fcompl
or
andl
out
adc
xlat
in
and
pusha
adc
or
fsub
lods
out
jmp
jb
push
xchg
sahf
lods
mov
xchg
loop
jns
mov
mov
inc
scas
fldl
stc
push
mov
xor
xchg
adc
adc
dec
ds
outsb
pop
enter
aam
aam
xchg
faddl
add
jno
inc
mov
inc
scas
mov
lods
mov
cmp
inc
fucomi
in
cltd
sub
hlt
mov
dec
js
int3
and
bound
push
cmpsl
xchg
outsb
pop
dec
add
movsl
cmpsb
xchg
xor
cmp
int3
mov
fcom
xlat
arpl
push
inc
or
lcall
je
sub
insb
pop
pop
cmp
dec
and
pop
ja
adc
bound
mov
push
xchg
xchg
test
xchg
and
pop
aam
dec
xchg
dec
and
pop
xchg
or
mov
mov
outsb
movsb
repnz
loope
mov
movsl
xor
push
dec
hlt
mov
push
ficoms
xor
fnstsw
jns
pop
iret
mov
push
daa
ljmp
sub
in
dec
sub
fwait
push
test
jl
outsb
js
addr16
add
xchg
lahf
adc
fildl
pop
aad
push
mov
call
sbb
cmp
fwait
or
inc
fldt
xor
jle
das
out
dec
mov
sti
jnp
out
adc
mov
jmp
jne
popa
cli
or
pop
mov
jne
cwtl
pop
mov
fistl
push
add
sar
push
lds
cmpsl
push
cmp
sbb
xor
xchg
test
inc
jge
sub
loopne
ljmp
jp
ds
mov
cmp
insb
jge
adc
cmp
negl
ljmp
sbb
push
lods
repz
ds
mov
fildll
xchg
cmp
pop
je
push
ret
pop
mov
push
mov
sbb
and
int
and
cmc
data16
cmpsb
pop
inc
aas
sti
sbb
mov
fcmovb
ss
clc
cmp
sarb
push
jne
pop
or
cmp
pop
add
add
pop
nop
dec
dec
leave
dec
cmp
popa
shrl
jle
call
jmp
add
popf
or
outsl
sbb
jae
data16
cmp
adc
add
aas
jmp
push
adc
mov
dec
fists
sub
xchg
inc
and
mov
cmp
mov
ror
aam
pusha
sti
sbb
std
pushf
and
cmp
mov
fdivrl
shll
xlat
sbb
scas
jo
repz
cmpsb
push
push
push
pop
imul
adc
jb
mov
scas
mov
lea
jno
xchg
pop
sbb
div
scas
jns
add
fdivr
outsl
in
ljmp
and
fisttpll
xor
pop
pusha
pop
and
or
pop
gs
dec
aaa
sub
push
sbb
sub
sub
lcall
dec
ss
mov
sti
push
outsb
xor
push
out
icebp
adcb
mov
xchg
data16
xor
dec
pop
movsb
and
xchg
out
bswap
adc
dec
xchg
xor
adc
adc
cld
xchg
push
cwtl
pop
mov
in
lea
int3
cmp
aad
mov
jg
shl
pop
jg
push
movsb
scas
daa
cwtl
das
and
testl
fsts
and
jbe
jmp
cmp
aad
push
repz
dec
out
stos
cwtl
movb
cs
insb
movsb
jl,pn
test
pop
cld
gs
mov
push
mov
mov
fiadds
xor
loopne
sti
int
or
enter
dec
and
aad
pusha
jne
dec
fwait
call
jae
mov
je
in
jnp
mov
push
and
xchg
inc
dec
dec
jae
stos
push
es
loop
fsubs
mov
mov
repnz
sbb
out
sbb
jo
dec
jbe
jnp
dec
xor
push
test
sbb
dec
sub
push
jg
or
clc
dec
push
jl
mov
ds
sahf
jecxz
ss
cmp
inc
xchg
lds
jbe
jae
jno
shlb
xchg
es
xchg
flds
lock
mov
sub
push
inc
stc
cmp
es
dec
popfw
pop
fwait
sub
or
insl
dec
lods
imul
sub
mov
pop
sbb
int3
push
add
rcll
rcl
bound
mov
lock
push
pop
jb
lock
addr16
f2xm1
or
stos
in
scas
out
add
mov
int3
push
test
lret
push
adc
scas
xchg
out
xor
xlat
inc
pop
fistl
mov
push
and
jbe
dec
idivb
inc
mov
pop
mov
or
repz
testb
jge
int
nop
inc
lcall
jb
and
pop
in
jp
std
out
cld
sar
in
daa
cmp
into
add
cs
push
sbb
dec
cld
cs
rolb
enter
fsubp
mov
loope
js
mov
out
in
inc
dec
adc
xchg
lds
jl
daa
sbb
mov
dec
imul
lods
inc
mov
gs
sub
add
sbb
scas
mov
enter
mov
and
es
fcomps
jne
dec
cwtl
mov
jae
cmp
shlb
cltd
fstpl
dec
sub
fistl
pop
stos
jnp
not
mov
out
pop
pushf
insl
movsl
dec
subl
pop
jne
sub
stos
xor
in
mov
mov
xor
test
pop
mov
aam
or
js
popa
das
dec
hlt
out
pop
dec
and
sti
pop
xor
fiaddl
es
mov
and
add
lret
into
cmp
push
dec
js
cmp
sbb
daa
nop
pop
sub
rep
adc
sarl
std
mov
and
pop
in
subl
cs
mov
outsb
lds
adc
imul
dec
pop
add
pushf
hlt
xor
shll
or
daa
stos
add
or
dec
movsb
cwtl
sub
xor
es
mov
iret
mov
jge
cmp
into
fmul
aas
inc
movsl
insb
jne
or
mov
mov
inc
gs
cmp
movsb
loopne
xlat
inc
adc
insl
sbb
and
xor
add
and
cltd
mov
imul
jmp
fbld
dec
pop
nop
jl
scas
insb
cmpsb
sbbb
inc
sahf
xchg
cmp
push
iret
xchg
out
push
fiaddl
fdivrl
pushf
jg
add
cmp
mov
dec
push
ffreep
adc
jnp
aad
jne
imulb
inc
jbe
add
divl
or
mov
mov
adc
lock
cmp
sahf
lret
test
jg
icebp
adc
lods
push
lods
loopne
xor
daa
adc
jb
sub
nop
inc
mov
pop
xchg
mov
jge
sub
mov
push
fimull
jb
jbe
jo
cmc
stc
push
or
dec
sahf
pop
sti
xor
push
dec
leave
adc
jnp
jnp
push
cmpb
lds
cmp
jmp
xchg
mov
push
data16
out
gs
lock
pusha
lods
mov
les
dec
dec
jo
sti
out
ss
xor
scas
popa
push
pop
adc
rcl
adc
mov
jmp
ja
dec
js
int
fs
in
push
arpl
shrl
imul
lahf
lret
dec
add
adc
test
mov
aas
sub
call
shlb
rolb
popf
dec
cmp
orb
mov
int
sysenter
inc
cmp
gs
insb
pop
or
in
cld
cld
popf
fst
push
mov
stos
xor
jnp
movb
dec
lock
xor
xor
iret
cmova
daa
push
xlat
add
push
out
enter
sbb
cs
mov
dec
pop
mov
jecxz
push
pop
mov
das
sub
sub
clc
and
jne
cmpsl
inc
stc
mov
push
sbb
inc
mov
xchg
sbb
and
xchg
and
idiv
cmp
pop
adcl
inc
jns
adc
call
movsb
add
xchg
outsb
lcall
repnz
push
jecxz
add
xlat
push
cmp
sub
jmp
sub
das
insb
jns
lods
xchg
add
dec
out
stc
mov
fstpl
fildll
mov
clc
xchg
repz
pop
xor
sti
jmp
aam
jnp
fwait
and
jb
xchg
xor
test
test
mov
adc
dec
test
mov
movsb
out
fdivrs
leave
mov
popa
jne
loopne
insb
cmpsl
lahf
ficoml
push
ss
shrb
bound
pop
aam
mov
xchg
jmp
addr16
movsl
and
and
sub
cmp
cmp
mov
stos
icebp
pop
dec
lahf
and
hlt
roll
jp
orb
popa
jo
insb
repz
stc
dec
inc
mov
pop
cmp
jge
cli
xor
dec
sub
cmp
cmp
fsubrs
rcr
jnp
mov
outsl
lods
mov
or
int3
push
mov
scas
pop
adc
popf
test
and
jge
fwait
and
dec
rcrl
cmp
xchg
cmp
xor
mov
sbb
leave
mov
fstl
push
leave
xor
dec
loopne
jbe
addr16
jbe
je
pop
cli
pop
jmp
js
insl
dec
adc
jecxz
cld
cmpb
sbb
or
xorl
sub
shrb
push
xlat
push
xchg
cmp
cld
mov
cmc
and
mov
lea
test
adc
or
xchg
jo
decb
shlb
je
movsb
in
and
pop
pop
xchg
mov
adc
pop
push
dec
ret
insl
shr
mov
cli
sbb
test
add
mov
idivl
dec
test
ret
pop
addr16
jb
pop
dec
push
fwait
adc
sbb
outsl
jbe
mov
pop
and
adc
mov
std
test
mov
adc
test
sub
add
jge
xchg
fs
int3
outsb
les
pop
cwtl
call
jb,pn
fwait
cwtl
loope
push
lock
push
cmp
lock
pop
not
adc
mov
cmp
push
jbe
fs
adc
pop
out
push
sub
sub
sub
jg
popl
rorb
and
xchg
pop
inc
call
test
insb
pop
fidivl
pushf
push
incb
pop
jecxz
mov
jae
movsb
jmp
xchg
loopne
dec
sbb
mov
testl
or
push
dec
add
jp
inc
or
ret
jno
xchg
push
jo
add
pop
inc
dec
test
push
xlat
sub
es
mov
test
sub
int3
jg
in
inc
or
inc
sbb
add
pop
jo
push
test
sbb
jg
hlt
sbb
popa
movsl
imull
jge
or
mov
out
jb
mov
clc
in
push
push
mov
lods
jb
lcall
repz
sub
and
push
inc
outsb
adc
lock
xchg
repnz
nop
scas
mov
pop
push
pop
push
test
mov
out
add
int
mov
cmp
test
leave
add
pop
pop
mov
dec
cmpsl
sarl
cltd
lods
cmp
mov
icebp
es
adc
pop
lods
and
fdivrl
sub
mov
ja
pushf
pop
lock
out
mov
mov
in
push
test
in
shr
rorl
shr
sbb
jcxz
pop
test
mov
nop
imul
add
jecxz
loope
leave
or
jno
mov
xor
shll
in
cmp
inc
push
cmp
icebp
sbb
and
sbb
loop
pop
lock
loop
push
add
jo
xchg
loope
jns
loop
mov
ljmp
popa
jle
or
sti
lea
cmpsb
adc
dec
repz
xchg
lods
and
pop
dec
decb
jmp
cmp
fadds
fcmovb
mov
cmpsl
ds
adc
and
loope
adc
icebp
xchg
inc
add
pop
mov
lds
outsl
dec
sub
fistpl
lea
pusha
mov
pop
addr16
lds
pop
push
scas
add
jno
enter
mov
adc
lods
xor
lahf
adc
arpl
sub
repz
cmp
movsl
mov
cwtl
inc
jnp
xchg
aaa
ret
mov
jmp
xor
loopne
sbb
ret
push
sbb
lods
cwtl
loope
push
mov
pop
mov
push
shl
ljmp
push
pusha
outsl
mov
add
push
jae
or
or
lret
adc
add
ds
dec
inc
push
sbb
arpl
faddl
sbb
js
xor
lds
sti
ret
xchg
jns
out
sub
sbb
mov
iret
xor
out
push
cmp
lods
jp
hlt
or
rcll
call
push
sbb
iret
stos
fdivs
push
mov
stos
mov
loopne
out
bound
xchg
ret
cmp
xchg
add
gs
lret
lea
fdivs
cmp
insb
stos
sti
repz
ss
daa
fisttpl
sub
das
or
cltd
int
frstor
in
mov
cmp
add
icebp
pop
mov
jmp
sub
mov
fsubr
jb
inc
aad
dec
lea
repnz
push
pop
cmpsl
mov
pop
cmp
jmp
mov
jns
pop
and
cmp
insb
sub
jbe
pop
aam
cmpl
out
pop
cmpsb
sub
ljmp
xchg
inc
mov
imul
subl
roll
sub
out
cmp
push
roll
sbb
mov
fucomip
imul
fidivs
rorl
pop
pushf
ljmp
outsb
xor
mov
imul
stc
sub
sbb
mov
out
cmp
add
lods
sub
sarb
jns
mov
sbb
mov
loopne
outsl
jae
cwtl
or
xchg
pop
dec
call
xor
sub
push
mov
pushf
movsb
mov
jp
dec
sbb
adcl
lret
adc
imul
mov
test
jnp
mov
vpunpckhqdq
imul
mov
mov
in
stos
mov
mov
lret
lahf
mov
lea
pop
push
mov
out
cwtl
cld
push
sbbb
jle
pop
in
repnz
ds
cmpsb
int3
xor
mov
cmc
in
mov
fcmovu
lret
loopne
push
scas
ljmp
mov
inc
insb
mov
add
daa
jae
xor
xchg
jno
xchg
mov
jmp
sahf
cmp
jo
imul
daa
sbb
addr16
mov
psubq
aad
inc
pop
fs
popa
jl
daa
mov
dec
int
push
sbb
cmp
fldenv
outsb
inc
fcomp
popa
inc
sub
adc
scas
adc
clc
mov
xor
ss
inc
loopne
pop
xchg
stos
xchg
xor
dec
lret
sbb
int3
push
fsubrl
ret
ljmp
cmp
loop
fwait
jb
or
dec
xchg
push
dec
sbb
out
jno
les
sbb
in
dec
pop
subb
cli
xchg
or
shrb
and
xor
inc
cmp
sub
mov
dec
in
add
jne
stos
inc
xor
sahf
mov
negl
lret
mov
mov
jmp
jae
cmc
dec
pushf
sbb
and
and
pushl
arpl
ja
shrb
add
jne
or
fwait
lcall
xchg
xor
cld
cli
pushf
adc
push
sbb
data16
xchg
pop
int
mov
jp
lock
jl
push
in
aad
xor
enter
xchg
popa
sub
fs
fcomps
out
imul
adc
mov
add
or
mov
test
adc
popa
loopne
dec
es
lds
adc
mov
fcoml
xchg
flds
ljmp
nop
jle
cli
fsubrp
test
shrb
fisttpll
jecxz
nop
cld
and
pop
push
pop
sub
dec
adc
push
scas
lds
int3
outsl
cmp
sub
mov
push
push
outsl
int3
jb
sbb
repz
mov
fnstenv
xchg
xchg
adc
cmpsl
stc
sub
xor
sub
sbb
adc
icebp
popf
cltd
rorl
jmp
or
pop
dec
fldl
dec
push
loopne
mov
test
or
fnstcw
or
lret
mov
es
repz
nop
mov
mov
lret
adc
scas
std
xor
outsb
jae
push
dec
xor
in
adc
cli
pop
insb
and
mov
or
xor
cmc
pop
xchg
adc
mov
lahf
outsl
xor
in
xchg
push
rorl
subl
lock
lds
cmp
in
fisubs
movsl
iret
aad
sbb
gs
and
loope
addb
adc
cmpsl
in
push
rorl
popa
xchg
out
mov
mov
sub
test
xor
fisttps
push
and
and
les
sub
dec
cmp
ret
mov
jbe
gs
std
ror
es
into
inc
in
dec
leave
push
mov
aaa
lods
loop
les
jno
jg
int
nop
push
loope
push
pop
jecxz
out
out
mov
pop
int
loope
cld
sbb
pop
psubb
xor
gs
push
clc
icebp
pop
push
pop
aad
test
mov
push
ljmp
add
pushfw
testb
add
test
pop
ss
inc
jnp
lret
lret
xchg
xor
cltd
scas
mov
cmp
cwtl
xor
sbbl
pop
imul
dec
mov
outsb
daa
mov
mov
shlb
pop
pop
nop
testb
fistpl
inc
add
inc
rcrb
adc
add
fnsave
push
cld
jb
jmp
loopne
xchg
push
pop
call
imul
insl
mov
leave
jmp
mov
inc
pusha
push
adc
adc
adc
loop
and
repz
jg
push
popf
inc
adc
push
incb
fcmovbe
mov
jecxz
ss
dec
add
mov
in
enter
add
jmp
adcl
repz
int
aad
mov
jae
aad
lea
fnsetpm(287
sbb
pop
es
lods
dec
dec
mov
mov
movsb
jge
test
push
ljmp
jg
adc
xchg
or
ret
sub
sarl
orl
dec
xchg
jmp
int3
cmc
xorb
lcall
xor
popf
xchg
ret
outsb
add
cli
loope
inc
int
roll
icebp
pop
jp
jp
lods
subl
enter
mov
jb
xchg
sub
aas
lds
mov
ss
orl
mov
and
mov
dec
gs
and
dec
in
fdivrs
cmp
push
mov
cs
mov
test
or
sbb
mov
adc
dec
fcos
test
leave
or
sub
or
lcall
xchg
push
jne
mov
or
inc
sbb
push
push
loope
fadds
les
and
iret
loopne
push
xchg
repnz
repnz
xor
stos
mov
stc
mov
pop
pop
jb
popa
pop
or
mov
pop
ret
fsubl
inc
sbb
mov
cld
mov
cli
out
sbb
adc
or
push
or
sti
clc
cmp
ljmp
cmovge
jno
lds
mov
cltd
pop
nop
pop
pop
mov
sbb
les
ja
jnp
stc
pop
aad
sarl
mov
xchg
fnstcw
adc
call
xor
and
inc
imul
es
or
xor
clc
add
es
or
in
call
and
ds
push
dec
data16
bnd
loope
add
cld
cltd
xor
leave
adc
cmpsb
leave
lods
leave
ds
pop
dec
mov
mov
outsb
rcrb
jne
jbe
int
xchg
insb
insl
jl
xor
sub
aaa
lcall
adc
cmp
and
push
lock
mov
add
jbe
addr16
pop
int3
mov
jg
pop
pop
push
repnz
mov
inc
std
aad
cmp
xchg
sbb
lods
xchg
push
push
int3
pop
sarb
dec
dec
dec
lret
aaa
sti
scas
addr16
push
leave
cmp
orb
push
jmp
loop
lods
cwtl
test
xchg
cmp
adc
push
mov
pushf
arpl
fstpl
lahf
ljmp
mov
pop
je
es
jae
pop
iret
int3
sbb
popa
xchg
testb
xor
scas
push
xchg
pop
push
outsl
dec
aaa
aas
divb
andb
fcmovne
inc
call
decl
sub
jo
push
pop
lea
gs
mov
dec
loopne
test
lea
mov
ficoml
push
mov
out
outsl
in
mov
sub
ret
jmp
add
dec
sbb
or
add
pushf
cltd
jo
pop
gs
data16
jl
rclb
mov
cwtl
dec
popf
xor
ja
fldl
jmp
xchg
push
sahf
lock
jne
in
cli
jb
or
xchg
fldt
mov
idiv
pop
xchg
inc
xor
inc
cmpsb
repnz
lock
enter
sbb
mov
ss
mov
out
je
push
sub
fwait
daa
icebp
xchg
mov
push
repnz
out
lea
icebp
nop
rcll
rcr
insl
inc
jb
or
and
or
inc
in
pop
mov
idiv
pop
or
pop
test
sub
add
dec
shll
lods
jp
sbb
icebp
movsl
sbb
stos
push
sbb
ljmp
pop
jo
ja
aaa
inc
pop
inc
out
ja
pop
jp
xor
add
aas
subl
es
sbb
push
xor
loop
test
dec
cltd
add
pop
push
ret
movl
push
pop
fbstp
mov
dec
and
mov
fistpll
cld
ret
movsb
xlat
mov
mov
out
or
xchg
jle
test
insl
jne
adc
test
jp
cli
loopne
pop
les
xchg
add
push
out
jle
mov
xor
ret
push
cld
out
leave
lret
pop
cltd
push
and
adc
cltd
xor
xchg
aaa
dec
xor
mov
cmpsl
filds
int3
lret
push
mov
rolb
jnp
xchg
leave
mov
std
xor
lods
in
pop
adc
dec
rcrl
movsl
mov
pop
loopne
add
or
sbb
enter
pop
dec
sub
cmp
pop
xor
insb
push
sti
inc
sub
and
fwait
std
aad
and
mov
sbb
scas
adcb
mov
addl
data16
push
fcoml
ja
shr
test
sub
jne
repz
jecxz
lret
pop
out
and
or
popa
movsb
inc
std
push
cmp
sub
mov
aam
inc
test
std
call
push
or
dec
fwait
sub
jne
pop
cmp
into
push
cmp
mov
dec
mov
mov
sbb
in
les
imul
cmc
or
lea
in
xor
and
adc
shrl
rcl
mov
pop
in
into
stc
std
xchg
dec
xor
mov
and
push
scas
add
mov
popf
sub
rolb
lds
inc
add
pop
cmp
sti
push
sbb
sarl
inc
or
daa
xchg
mov
jbe
loope
adc
inc
lds
mov
inc
insb
ljmp
dec
pop
popf
sbb
adc
loop
pop
xchg
arpl
in
jp
stos
popf
mov
fucomp
mov
movzbl
rcrl
ljmp
fldl
sub
dec
stos
inc
mov
mov
jo
scas
sub
dec
lods
jno
mov
test
jnp
popa
mov
inc
lods
add
pusha
adc
call
xor
test
or
jno
sbb
xor
mov
aas
ja
xor
stos
jmp
mov
in
cmp
sbb
cltd
out
shr
scas
out
inc
scas
push
xchg
imul
out
mov
push
xchg
jne
inc
stos
lods
sbb
inc
enter
push
jg
jae
imulb
sahf
sbb
adc
or
jmp
mov
xchg
mov
or
dec
push
mov
lcall
sub
jns
jg
inc
inc
push
std
mov
pop
add
jnp
sbb
jbe
stos
mov
fisttps
pop
mov
shlb
xlat
mov
lcall
pop
mov
in
in
jns
push
shrb
lret
ret
and
jge
pusha
ret
jmp
pop
iret
adc
mov
ret
sub
in
dec
imull
and
mov
aas
lods
and
iret
pop
mov
faddl
stos
jns
js
add
push
and
pushf
fidivrs
popa
inc
jns
jecxz
jle
gs
loope
xlat
leave
clc
loopne
sti
and
loop
loopne
loope
push
test
aad
cmpb
roll
lret
clc
fs
fs
mov
and
out
xor
out
lret
push
dec
stos
mov
jmp
sbb
pop
in
xor
inc
lds
push
or
dec
jo
dec
mov
loope
js
cmp
lods
ss
cmpsb
adc
xchg
mov
sub
pop
outsl
push
dec
cmpsb
test
es
dec
ljmp
jmp
movsb
xchg
mov
or
adc
arpl
fimuls
lods
or
shr
bound
mov
mov
jp
leave
cmp
add
lcall
inc
push
mov
mov
divl
sbb
out
in
ds
ret
mov
pusha
jno
or
fcmovnb
dec
pop
jle
je
inc
stos
sti
lds
gs
add
jg
pop
outsb
dec
push
mov
mov
decb
mov
mov
ret
lea
adcl
ret
outsb
or
jl
popf
mov
mov
jmp
call
mov
sbb
add
dec
push
mov
fnstcw
adc
loope
add
xlat
mov
xor
jl
outsl
outsl
ljmp
or
push
sbb
js
pop
pop
adc
jno
mov
sbb
fldl
mov
ss
sahf
cmpsb
dec
pop
pop
popf
cld
lcall
xor
stos
in
js
cld
push
push
pop
and
cwtl
bound
rcrl
lahf
mov
add
loope
js
nop
inc
das
insl
xchg
jno
mov
sbbl
and
push
hlt
outsl
insb
mov
fs
ret
xor
sbb
imul
stc
addr16
sub
sarl
xor
dec
sub
ljmp
push
and
xor
mov
popa
xchg
in
inc
jp
out
and
inc
scas
int
xchg
lds
shrl
and
mov
mov
add
std
jb
inc
cld
cmp
pop
sahf
and
lret
mov
bound
sub
xchg
mov
fisubs
inc
ret
test
sarb
test
ss
dec
lea
xlat
and
gs
mov
jge
fiaddl
push
xchg
jno
or
mov
cmc
pop
shr
jbe
movsl
xchg
or
in
addr16
lods
rclb
xchg
jg
int3
inc
jbe
jb
push
lods
mov
dec
dec
data16
push
xor
push
sub
xchg
sbb
lods
xchg
test
out
push
ljmp
add
addr16
jae
xchg
pop
and
stos
inc
icebp
movsl
inc
imull
lds
imul
stos
lcall
cmc
and
push
cmc
repnz
notb
lahf
cmc
xchg
arpl
mulb
push
je
arpl
sbb
adc
out
fs
add
push
and
imul
mov
fmuls
shrl
dec
pop
xor
mov
or
mov
into
les
test
repnz
pop
popf
pop
inc
fsubrl
xchg
mov
cld
shll
cmp
sbb
push
push
fs
jne
cli
fwait
pop
jo
pop
decl
push
mov
out
mov
jns
lret
pop
adc
push
xor
jbe
aad
xchg
ds
outsl
dec
pop
jle
je
movsl
mov
lods
fildll
cmp
outsl
adcb
cmpsb
pop
lret
jne
test
dec
test
loope
fnsave
jge
and
hlt
lock
movsl
add
dec
shrb
orb
and
nop
sub
sbb
sub
pushf
mov
sub
sub
enter
aaa
xchg
inc
jge
xlat
push
notl
or
dec
fisubl
inc
int3
test
xor
sbb
jo
jl
in
aaa
lcall
fcmovnbe
sbb
movsl
bound
pop
data16
fnsave
or
xchg
and
shl
imul
aaa
sub
or
sbb
dec
cmpsb
fdivs
jmp
les
jmp
orl
inc
test
aad
gs
pop
jbe
inc
push
pop
dec
xchg
and
sub
cmp
cli
mov
pop
dec
jnp
jbe
jl
inc
push
sbb
add
rolb
pop
xor
outsb
inc
pop
inc
xchg
ja
xor
mov
lret
cltd
enter
ret
inc
xchg
mov
adc
movsb
iret
cmpsb
add
cmpsb
fwait
cli
imull
lock
cmc
and
mov
mov
or
sub
dec
mov
and
cwtl
xor
icebp
test
movsl
cmpsb
sub
into
pop
mov
or
or
xchg
daa
inc
mov
jnp
or
jle
add
pop
ja
popa
icebp
pop
xchg
push
orl
aas
mov
stc
in
ja
xor
sub
insb
lds
test
adc
dec
loopne
xchg
sub
mov
push
pop
adc
imul
popf
xor
out
dec
jb
popl
xor
xchg
stc
cltd
mov
push
inc
mov
jb
mov
fs
xchg
fdivs
jnp
gs
cmpsl
sub
in
push
popf
inc
sub
xlat
pop
jno
sub
push
inc
mov
bound
mov
fadds
xlat
in
push
lds
adc
ss
aad
inc
push
jge
les
iret
mov
movl
pop
push
jle
or
lods
add
in
movsl
inc
mov
repnz
jl
inc
cmpsb
sub
fcomi
push
shlb
jg
pop
sbb
ds
or
or
cld
and
and
test
pop
popf
popa
sbb
nop
je
dec
dec
mov
addl
mov
stos
push
push
stos
mov
rcrb
pop
pop
enter
fstl
or
jle
jne
imul
pushf
pop
les
or
cmp
pop
sbb
pop
dec
mov
mov
out
imul
scas
sbb
mov
mov
xchg
aad
cmp
cli
sub
xor
and
int
push
lods
push
add
leave
aam
xchg
int
sub
das
popf
mov
sahf
xchg
lret
outsl
xor
rcrl
fimull
or
jno
lret
xchg
insb
pop
adc
xor
mov
lcall
xor
push
pop
lods
in
in
sbb
mov
mov
addr16
pop
jecxz
mov
idiv
imul
sahf
ds
adc
inc
ffree
lds
dec
mov
into
movsb
cmpsb
fsts
ss
mov
sbb
push
into
lcall
dec
movsb
mov
inc
je
sub
pop
push
inc
mov
repnz
push
push
jnp
ret
test
xchg
adc
fstp
adc
add
fs
cs
je
lret
add
jg
pop
and
cmpsl
push
mov
pop
dec
xchg
sub
movsl
jne
pop
stos
hlt
daa
test
popf
ret
xchg
mov
pop
repz
int3
pop
not
movsl
inc
fldl
jb
inc
sbbl
push
inc
sub
push
sub
stos
push
sub
add
stos
fsubs
mov
leave
call
sub
mov
cmp
inc
bound
in
sub
adc
mov
adc
dec
sahf
jno
cmp
clc
mov
push
push
lret
fldenv
and
mov
test
loopne
faddl
push
push
pop
bound
dec
inc
insb
pop
sub
in
test
cs
inc
movsb
insl
test
movsb
xorl
vpavgb
pxor
outsl
or
nop
inc
push
fdivrl
xor
mov
daa
int3
int
add
scas
outsl
jb
fcmovnu
leave
xlat
movsb
push
div
add
shr
mov
sahf
stos
jp
aad
xor
sub
dec
mov
push
cmpsl
push
popa
inc
xchg
movsb
add
mov
inc
in
jl
sbb
jge
imul
push
negl
push
jecxz
sbb
test
pop
jmp
lea
pop
nop
jne
adc
jp
push
and
or
lds
or
orb
ja
in
stos
push
rol
fucomi
mov
jg
stc
jae
lock
cltd
inc
out
and
adc
inc
xchg
xchg
xlat
jnp
dec
pop
xor
bound
ja
pop
push
mov
stos
or
nop
pop
dec
ds
push
mov
inc
insl
js
ljmp
push
lahf
sarb
xchg
jp
sbb
inc
rclb
in
jmp
pop
hlt
and
pop
in
movsb
mov
cltd
sti
popf
mov
ss
fxtract
loope
cltd
lods
cmp
fildll
jp
cmp
pop
adc
xor
out
cmp
jnp
pop
iret
cmp
icebp
repnz
inc
into
and
sbb
mov
sbb
mov
inc
mov
jne
out
loope
cmp
or
repz
popf
mov
sub
aad
cmpsb
push
xor
fidivrl
mov
fisubl
mov
pop
adc
push
pusha
adc
xchg
or
rcl
pop
jb
pop
repz
xchg
cmp
into
inc
xchg
mov
sub
mov
rcl
mov
push
mov
fstpt
cmp
mov
sbb
sub
aam
pop
notl
cmp
mov
aam
pop
push
in
adc
mov
sarb
enter
fsubrl
cmc
add
push
inc
mov
lahf
insl
inc
ret
outsb
add
popf
dec
loop
int3
clc
sub
mov
add
shll
mov
test
aaa
jl
dec
scas
sahf
jmp
addl
push
in
mov
mov
jo
fwait
loope
and
or
daa
jl
out
in
pushf
mov
cmpsb
mov
inc
cmp
call
sbb
pop
sbb
cmp
sub
out
xchg
pop
sub
add
adc
orb
sti
aad
out
pop
cltd
pop
dec
movsl
mov
shll
jge
into
les
ja
js
xchg
cmp
lods
or
int3
mov
xchg
mov
divb
es
mov
in
daa
mov
decb
mov
xchg
cmpsb
stc
gs
jbe
sbb
lds
fmuls
cld
jl
cmpsb
pop
into
xchg
les
imul
mov
mov
cmp
pop
inc
aad
loope
xchg
push
cmp
and
test
insl
xchg
sub
fnsave
pop
mov
and
clc
push
scas
sub
mov
dec
mov
aam
shlb
mov
adc
xchg
loop
imul
add
xlat
cmc
add
add
aad
jnp
adc
imul
mov
jl
scas
sbb
test
in
add
imul
ss
and
dec
pop
add
cli
inc
fstpl
in
sbb
jmp
jle
push
mov
xchg
movsl
int3
pop
mov
mov
sbb
sti
aad
test
sub
gs
in
or
int3
ljmp
out
pusha
sbb
add
inc
cli
shl
cmp
cmp
sub
xorb
push
push
or
rolb
push
jnp
xchg
pop
sbb
sub
mov
ds
xchg
outsb
mull
mov
push
in
ret
jbe
cmp
cmp
dec
push
and
sarb
cmpsl
dec
and
inc
adc
dec
and
add
or
fidivrl
mov
into
push
pop
lea
adc
out
in
das
add
mov
inc
jb
aaa
jmp
xor
inc
adc
filds
mov
in
mov
clc
jg
mov
mov
mov
pop
adc
inc
xchg
push
pop
or
inc
ds
mov
hlt
pop
stc
repz
test
scas
into
js
sbb
test
std
fwait
mov
mov
cmp
mov
ret
aad
sbb
add
xchg
or
xchg
dec
cltd
in
insl
lods
shll
das
push
adc
out
lret
loopne
or
add
mov
adc
rep
sub
jge
push
cmp
push
jae
adc
inc
pop
lret
and
mov
sbb
xor
xor
add
push
mov
jle
and
and
lock
mov
cmpsb
dec
mov
iret
cmc
adc
nop
xchg
mov
push
cmp
test
sub
and
leave
in
and
add
mov
mov
push
lds
xor
mov
jno
mov
bnd
popa
inc
adc
mov
cmp
sbb
mov
xor
movsb
xchg
ret
test
cmp
jl
stos
cltd
adc
ds
xchg
push
dec
cmp
xor
lock
and
xchg
push
out
pusha
imull
imul
fdivrl
addr16
das
insl
jge
xchg
stc
mov
in
data16
mov
cmpsb
pop
push
and
rorb
stc
add
ud2
xlat
sub
jo
sbb
xchg
and
pop
add
mov
mov
int3
clc
mov
mov
mov
or
repnz
int3
dec
inc
xchg
xchg
mov
mov
insb
fwait
lock
test
rcl
jecxz
mov
sahf
adc
mov
aam
loope
add
dec
sarb
mov
cmp
cli
and
dec
pusha
pop
xchg
mov
das
in
or
cmp
add
jge
cmpb
enter
mov
out
sahf
outsb
not
and
pop
pop
loope
and
lea
or
xor
addr16
xlat
fwait
popf
aad
cmpsb
movsb
and
add
and
inc
mov
mov
lcall
cmp
and
pusha
imul
push
cli
cmpsl
inc
test
mov
lea
jmp
lock
add
sbb
fnstcw
jp
push
out
push
cmp
adc
cmp
popf
xchg
inc
loop
notl
jb
push
xchg
cli
mov
push
add
mov
fstl
adc
jb
lcall
aam
popf
decl
lcall
push
or
imul
add
div
ja
sub
mov
dec
sarl
pusha
movsb
fsubr
jecxz
pop
dec
xor
xor
cmp
add
sbb
inc
sbb
js
fwait
mov
pop
lret
xchg
mov
js
adc
inc
ffreep
arpl
cmp
dec
mov
icebp
xchg
stc
adc
and
sub
outsb
push
or
pop
pop
and
ss
mov
sub
push
or
sti
mov
jge
repz
or
ret
shlb
jle
sbb
jne
outsl
lock
pop
test
jnp
movsl
inc
fs
add
pop
cmp
xor
loope
loop
push
mov
test
fadds
data16
loopne
mov
ljmp
ret
dec
scas
adcb
cs
mov
add
sbb
xchg
orl
inc
dec
shll
and
pop
pop
popf
clc
and
std
imul
pop
lds
fnstcw
or
sub
loope
imul
gs
std
ret
add
iret
repz
mov
and
ds
xchg
mov
fnstenv
fdivrs
jbe
lods
sbb
cmpsb
enter
mov
lods
dec
js
mov
jae
cmp
pusha
xlat
int3
sti
out
mov
insl
stos
ja
mov
andb
daa
fidivrs
repnz
fildl
pushf
popf
and
stos
aaa
sub
leave
and
adc
sahf
jne
cmp
je
das
sbb
les
enter
test
pop
or
clc
out
les
repz
mov
xlat
imul
and
js
push
push
xorl
sbb
mov
jecxz
lahf
pop
dec
dec
xor
jg
mov
jge
mov
add
cmp
add
stos
es
jb
mov
sarb
mov
cmc
dec
ret
sbb
mov
dec
int3
fs
cltd
sub
pop
cmp
lods
in
dec
ss
or
adc
jae
mov
insl
pop
sbb
adc
cli
dec
test
and
aas
mov
and
dec
fldcw
out
jmp
jns
xorb
jmp
push
sub
daa
xor
push
int3
xor
mov
mov
sarb
aad
cmp
push
aam
jbe
jp
or
into
rcr
stos
outsb
ds
sahf
push
int3
or
es
ja
imul
mov
add
mov
pop
jbe
or
adc
xorl
fcmovu
out
pop
dec
push
jae
out
push
sub
stos
imul
cmc
fcmovu
popf
int
xchg
in
mov
xor
ja
dec
in
scas
ja
xchg
xor
add
sbb
inc
pop
sub
or
movsb
movsb
hlt
pusha
add
test
out
rclb
mov
jne
mov
dec
mov
xor
sub
cwtl
jmp
sbb
mov
xor
insl
ljmp
push
lcall
fadds
outsb
push
insb
inc
in
dec
push
int
arpl
jg
sbb
scas
fcmovu
or
add
mov
imul
movl
jno
in
ficompl
adc
out
pop
and
jae
adc
add
les
pop
jge
outsl
fsts
cmp
outsb
popa
inc
mov
mov
popf
cmp
imul
data16
popa
out
mov
das
jle
inc
arpl
scas
aaa
xchg
out
xlat
ret
pop
mov
aam
and
lods
push
xor
jno,pt
lods
loop
lock
cs
cmc
aam
add
and
scas
dec
lods
test
je
in
ja
fcompl
outsb
sub
out
bound
jns
sub
iret
mov
xlat
das
in
icebp
push
adc
stc
push
pop
cmpsb
mov
pop
fwait
xchg
test
or
xchg
dec
bound
out
jle
mov
jp
jg
call
fstpl
sub
ljmp
cmp
decb
mov
push
mov
xor
xchg
adc
mov
stc
sti
jle
test
das
call
mov
jb
push
test
fldcw
pop
int
imulb
and
sbb
je
pop
out
jmp
enter
ja
jge
or
mov
pusha
cmp
scas
and
mov
jo
fcompl
jo
add
stos
push
ja
imul
mov
out
pop
xor
ficompl
shlb
lock
lods
push
push
scas
xchg
iret
and
out
rcl
lea
xchg
xorl
jno
pop
sub
cmp
mov
shrl
lods
bound
sarl
cmp
jge
and
scas
jle
hlt
popf
cwtl
insb
jo
hlt
add
cmc
cltd
mov
dec
test
pusha
push
jb
mov
mov
addr16
adc
adc
cmp
iret
mov
cmp
cwtl
fidivs
pop
fsubl
out
jo
loope
add
out
out
mov
test
repnz
jp
sub
or
add
jl
test
cmp
out
xlat
or
ret
sti
mov
fdiv
push
aas
push
cltd
jae
and
jae
jg
in
adc
insl
daa
dec
fsts
jmp
xchg
xchg
orl
adc
mov
or
cltd
or
inc
adc
mov
out
inc
push
mov
fwait
sbb
pop
ficompl
fdivrp
popw
xchg
push
sbbl
test
iret
popf
int
pop
pop
and
jge
adcl
sub
insb
movsl
dec
sbb
xor
cmp
sub
pop
jmp
cmp
push
jle
aam
test
jmp
mov
jge
ds
mov
data16
mov
jmp
test
cltd
pop
nop
lahf
push
mov
pop
or
rcl
push
movsb
int
and
hlt
lea
xchg
push
fs
in
pop
add
push
call
inc
mov
or
or
cmp
adc
enter
and
faddp
push
lods
pop
mov
adc
jns
addr16
ficoms
jge
out
push
lret
cld
cmpsl
adc
loop
out
popa
jg
and
add
clc
adc
mov
adc
xchg
jg
imul
push
rol
or
jp
enter
pusha
or
mov
aas
mov
aaa
and
mov
jnp
inc
shlb
lahf
sti
scas
enter
mov
cs
adc
jns
xchg
rcl
pop
rdtsc
out
mov
rorl
pop
int3
adc
mov
out
repz
out
fidivs
mov
xchg
pop
stos
and
aaa
lcall
in
lods
lods
in
outsb
repz
push
push
inc
stos
movsl
mov
inc
adc
push
inc
mov
negw
lahf
shll
cld
test
test
imul
out
dec
addb
jmp
imull
add
and
pushf
pop
jecxz
adc
push
fs
lret
js
add
loop
jae
fsts
xchg
mov
jbe
mov
mov
and
mov
subl
xchg
push
nop
mov
insl
sub
mov
or
jbe
ds
ljmp
sbb
sbbl
icebp
sysenter
fcoml
sbb
add
lea
mov
cmpsl
bound
jge
mov
push
movb
in
ljmp
mov
or
or
pusha
sbb
mov
test
insl
ss
mov
ss
dec
cmc
dec
fwait
mov
movsb
and
pop
sub
mov
push
gs
sub
dec
mov
pop
scas
xchg
and
adc
adcb
sub
les
outsb
and
jmp
push
inc
stos
and
lret
mov
fdivl
sub
xchg
daa
lahf
jne
lret
imul
pushf
cli
bound
mov
insl
push
or
into
add
aaa
aad
mov
dec
xor
or
adc
lret
and
stos
fbstp
imul
dec
nop
repnz
out
jge
jno
popa
jae
jmp
and
mov
pop
add
into
pop
hlt
mov
dec
adc
into
add
xor
add
lods
js
xchg
mov
mov
inc
fsubl
xlat
and
xor
mov
cmpsl
cmc
push
fcomps
fnstsw
push
jle
dec
add
mov
fsubr
fstps
movsl
sub
xchg
adc
xchg
call
cmp
xchg
mov
mov
inc
mov
je
mov
repnz
inc
dec
push
test
lock
outsb
jle
jns
dec
lret
data16
stc
shrb
stos
mov
aas
hlt
gs
aad
mov
daa
sbb
lret
shlb
orl
cmpsb
adc
hlt
insb
aam
sub
decl
div
loope
jge
lods
sti
and
mov
xchg
mov
mov
cmp
inc
mov
inc
in
daa
add
jge
xor
ds
push
add
fnsave
int
je
xchg
arpl
add
addr16
popf
push
cmp
cli
int
icebp
int
push
adc
push
dec
fucom
das
push
sbb
daa
pop
cmpsb
fcoms
add
aas
pop
mov
jbe
jle
push
adc
mov
aaa
ror
inc
rcrl
sub
pop
xchg
scas
bound
jo
jmp
sbb
call
adcl
pop
inc
dec
pop
stos
push
xchg
ljmp
repnz
jmp
shlb
xchg
add
inc
add
add
test
sbb
in
xor
sbb
cwtl
pop
insl
mov
inc
fnsave
jns
pop
sar
inc
inc
sbb
sbb
outsb
stos
jg
outsl
in
adc
fldl
pop
xchg
movsb
inc
fnsave
outsb
mov
or
mov
arpl
scas
int3
loop
inc
out
xor
push
loope
adc
mov
jo
popa
and
inc
pop
xor
push
mov
in
mov
and
loope
mov
cmp
lods
fisubs
jmp
jle
xchg
push
div
nop
push
and
int
aas
int3
insb
loop
or
adc
dec
lods
and
xchg
lcall
mov
jb
int3
test
ljmp
out
push
lds
inc
aaa
data16
pop
fildll
sahf
sub
inc
std
inc
sub
hlt
lods
jne
popa
adc
inc
es
xchg
mov
mov
ds
jp
scas
test
stos
xor
cli
sbb
loop
mov
inc
or
int3
push
hlt
ret
jnp
aas
and
add
aam
push
push
out
sbb
mov
sub
call
in
shlb
gs
scas
mov
fnstenv
rcr
rolb
xchg
cmp
add
or
lods
dec
dec
sub
bound
mov
push
inc
adc
cwtl
push
jp
movd
mov
jg
pop
sub
and
loopne
dec
adcb
or
mov
hlt
test
addl
movsl
jp
xor
outsb
dec
cs
movsl
mov
dec
and
and
fmul
test
push
jnp
imul
xor
out
push
mov
push
insl
mov
mov
jae
popa
daa
scas
jbe,pn
jno
mov
xorb
imul
cmp
jp
ja
mov
pusha
push
ja
mov
lods
cmp
int
lret
cmp
repz
add
faddp
fs
mov
xor
dec
in
push
inc
test
jle
add
lock
jbe
loope
outsb
inc
xchg
mov
xor
insb
in
and
jp
loope
jo
add
int
fidivrs
std
xchg
and
psubusb
pop
aas
inc
pop
imul
in
cmp
sbb
xlat
nop
jecxz
int
sbb
fnstcw
xchg
cmovne
bound
icebp
sbb
cmpl
pusha
jae
inc
leave
adc
loope
popa
push
adc
and
sub
and
neg
sub
adc
inc
xchg
mov
mov
jge
fwait
adc
push
js
fisubs
pusha
xchg
mov
mov
xchg
inc
jno
dec
aaa
lret
sub
fidivs
gs
jmp
data16
addr16
inc
pushf
cmpsb
clc
loope
icebp
cmp
aas
push
inc
jnp
mov
push
mov
fwait
push
xor
ds
push
jnp
sbb
dec
jbe
rclb
in
dec
mov
lret
and
loop
test
cmp
andl
int
inc
leave
xor
mov
lea
adc
mov
and
paddsb
and
xor
inc
sbb
push
or
mov
add
xor
mov
pop
fcom
or
mov
ret
pop
cld
add
pop
mov
mov
jmp
addr16
inc
and
in
fistps
mov
lcall
movzbl
sahf
jg
sbb
ret
cmp
sub
and
jl
movsb
lea
add
loopne
shrb
movsl
outsl
rcll
pop
add
jae
xchg
cld
shll
dec
xchg
jnp
sub
mov
scas
sbb
ret
lods
scas
cltd
add
ja
test
pop
dec
fisubl
ret
lods
in
cmp
jb
bound
je
data16
hlt
aas
inc
inc
inc
pop
add
or
pop
popa
pushf
adc
jle
leave
addb
xchg
cmpsb
jp
sbb
fisttpl
or
cmp
mov
enter
imul
cs
enter
sub
mov
push
cwtl
cs
rcr
xchg
xchg
add
xchg
test
xchg
cmp
sub
int
out
or
jno
or
cmp
cltd
cmp
icebp
push
cltd
sahf
cmp
push
sub
into
sti
pop
test
lods
aas
pop
push
inc
shlb
and
ljmp
xor
pop
sub
dec
int
mov
adc
sbb
sbb
aad
sub
mov
aaa
mov
sbb
cld
hlt
movb
fcmovnbe
or
push
cmp
fistps
clc
or
add
mov
lea
insl
into
dec
stos
lock
lods
out
xchg
lods
adc
dec
ss
in
mov
xchg
aaa
jne
pop
and
ljmp
ds
sub
mov
mov
std
pop
jae
popa
cli
add
hlt
lret
push
movsb
cmp
adc
and
sbb
es
lcall
mov
mov
mov
sub
pop
imul
mov
jo
outsl
in
mov
arpl
mov
test
mov
testb
dec
mov
adc
cli
cmp
aad
mov
movsb
add
lahf
or
or
dec
sti
int3
add
push
fxrstor
icebp
push
xor
mov
xor
fs
push
xor
xchg
popf
xchg
jmp
sbb
xor
jmp
push
pusha
inc
add
lcall
and
push
std
cmp
mov
xchg
pop
fcomps
xchg
mov
fidivs
lods
and
lret
nop
sub
sbb
mov
std
xlat
scas
popf
xchg
lea
cmpsl
jmp
ss
xor
pop
fidivl
ficoml
imul
xchg
popa
or
and
mov
fimull
call
push
push
xchg
jns
mov
jae
push
push
scas
lods
add
cmpsb
aad
je
mov
mov
nop
stc
popa
outsb
movsl
push
mov
lret
lret
lock
mov
outsb
cltd
js
clc
xchg
lods
add
loope
int
dec
hlt
sub
mov
pop
mov
jmp
outsl
mov
pop
fstl
sub
dec
push
mov
xchg
cmp
scas
repz
dec
sbb
cmp
icebp
pop
adc
outsb
xchg
xor
sarb
mov
hlt
jns
or
pop
cmp
dec
xor
dec
aaa
jno
mov
testb
or
int3
int
mov
iret
cmp
sbb
mov
mov
pop
dec
shll
sti
fcmovbe
movsbl
jae
adc
jmp
pop
cltd
inc
inc
dec
xlat
incb
dec
dec
and
stos
mov
std
lret
movsb
les
mov
loopne
enter
adc
lea
call
mov
mov
fildl
dec
js
pop
push
shll
pop
lods
and
mov
sbb
aad
sbb
xchg
popf
rcrl
in
xor
cli
add
fwait
jl
pop
or
inc
mov
data16
sbb
stos
aaa
subl
iret
cmpl
and
js
jae
pop
mov
roll
idiv
add
sbb
adc
cs
inc
ret
aam
pushf
add
imul
lock
xchg
mov
pop
mov
xchg
or
sbb
push
scas
jl
push
imul
xchg
in
adc
bnd
sbb
pop
sub
daa
push
and
in
cmpsl
enter
out
push
push
mov
pop
xor
mov
jno
and
stos
loope
in
shll
jno
mov
add
add
jo
pop
jg
in
rorl
out
and
ret
ret
xchg
cmp
add
cmp
xor
arpl
mov
add
mov
int
dec
and
jecxz
adc
aaa
adc
xor
shrb
nop
push
ficoms
pop
jo
icebp
insl
rolb
movsb
or
pop
scas
insl
into
int
loop
daa
stc
sti
mov
mov
and
mov
sbb
test
push
and
jno
pop
mov
sbb
hlt
inc
ret
into
push
and
fsubl
sub
outsb
jno
cwtl
push
lods
test
pop
ljmp
ret
mov
sub
das
sbb
fstl
mov
pop
or
push
sub
outsl
fildl
fcmovu
jne
dec
push
pusha
mov
push
jae
xchg
push
and
and
adc
dec
mov
cltd
mov
xlat
add
xlat
les
cltd
xchg
jecxz
mov
lcall
xor
jp
lods
notl
or
dec
in
bound
sub
arpl
rol
aas
mov
adc
movsb
subb
push
mov
int3
jbe
xchg
adc
bound
ja
fs
test
xor
stos
mov
xchg
sbb
stc
add
lcall
out
cmp
pop
pop
mov
cld
push
rcll
faddp
fwait
testl
jns
imul
jge
cmp
arpl
dec
sbb
cs
sub
pop
ret
rolb
ror
mov
sahf
stc
ss
dec
cmp
rcr
stos
dec
push
inc
cmpsb
and
pop
push
iret
inc
pop
daa
xchg
push
xchg
xor
sub
sbb
adc
fisttpl
in
and
dec
pop
decb
mov
cwtl
mov
add
lea
test
jg
mov
cmp
fs
adc
xor
in
mov
push
gs
in
loop
add
sub
stos
xor
cwtl
xor
insl
sub
outsl
jae
out
nop
leave
into
dec
cmp
adc
dec
es
test
xor
adc
mov
xor
sub
loop
mov
loop
mov
rclb
lock
inc
jmp
add
scas
jecxz
mov
xor
imul
jnp
mov
cwtl
push
xchg
adc
push
pop
push
test
js
repnz
scas
xor
mov
xor
add
mov
or
andb
mov
xor
adc
lock
mov
lret
xor
adc
sub
std
and
mov
sti
inc
lea
mov
in
inc
pop
ss
shll
mov
xchg
ret
push
jp
ljmp
hlt
pop
test
sub
shll
xor
push
subl
xor
sbb
sub
inc
lds
mov
pop
mov
addb
das
fwait
loopne
rorl
scas
and
sbb
fnstenv
testb
dec
fstpl
cmp
adc
mov
jp
out
pop
loop
mov
cli
xchg
jbe
lock
xchg
adc
mov
add
test
sbb
fstps
cmp
sub
into
lods
xchg
rcrb
test
cmpb
adc
inc
daa
push
pop
sub
test
in
jo
sbb
scas
cwtl
mov
mov
test
sub
pushf
mov
sbb
push
popa
cmc
int3
scas
jnp
fwait
jns
lahf
movsl
fsubl
pop
in
push
pop
je
pop
cli
cmp
test
jge
xor
adc
push
loopne
and
andb
jae
sbb
in
std
test
inc
inc
xorl
outsb
xchg
sbb
iret
mov
sbb
neg
jg
daa
push
inc
and
or
outsb
mov
jo
dec
mov
mov
push
orl
mov
xor
jge
sub
mov
sbb
arpl
and
inc
mov
clc
jo
dec
in
mov
icebp
in
stos
add
rcrb
push
xorl
lods
dec
aaa
jl
dec
xchg
push
gs
fldenv
das
mov
sub
ja
dec
sbb
rol
and
sbb
enter
das
std
ficompl
ss
and
jns
push
fildll
sub
add
inc
test
xorb
or
inc
sbb
and
rclb
xor
add
push
push
xchg
loopne
xchg
stos
enter
ljmp
shlb
dec
cmp
add
cmp
xchg
es
dec
or
push
mov
adc
and
ja
mov
scas
and
stos
sub
ljmp
push
cmpsb
aas
cmp
test
push
or
stos
popf
mov
pop
add
lds
decb
std
loope
cmp
cmp
inc
push
cmp
fcmove
pop
sub
in
orl
sti
add
aaa
das
push
fstpl
add
dec
push
lcall
or
or
mov
test
int
inc
inc
in
xchg
or
xor
inc
xor
mov
xor
sbb
mov
adc
mov
mov
dec
lahf
mov
push
mov
aam
push
gs
into
or
or
cmc
stc
mov
daa
mov
xor
pop
cwtl
lret
jle
pop
cmp
xchg
push
popf
ficoml
adc
test
pop
les
aaa
adc
lock
xor
cli
shlb
add
lods
sarb
inc
inc
fs
sub
imul
fwait
ljmp
adc
je
add
test
and
in
add
inc
mov
negb
mov
and
clc
dec
pop
and
push
pop
je
int
fimuls
fistpl
and
shll
mov
scas
fsts
mov
mov
mov
sub
out
outsl
icebp
stos
push
mov
cmp
mov
sub
out
push
lds
addb
outsb
mov
xchg
aad
lret
je
sub
scas
mov
xchg
cmp
aas
dec
jbe
lds
inc
test
fcomp
xchg
inc
or
mov
nop
repnz
mov
push
mov
lret
mov
xor
inc
cmp
and
pop
sub
hlt
inc
xor
out
cli
push
std
push
mov
mov
pop
inc
or
xlat
xchg
push
lcall
test
jno
nop
daa
test
pusha
aas
inc
dec
sarl
mov
pop
clc
pop
mov
xchg
adc
test
push
je
sub
jbe
adc
dec
sti
jmp
repz
jae
imul
iret
cmp
cs
cmpsb
add
cmp
and
test
rolb
fsub
pop
dec
dec
aad
sub
inc
cmpsl
loop
fcomps
push
inc
pop
sbb
test
popa
rolb
sbb
jl
pop
lea
lret
and
mov
cmc
lock
sub
add
iret
cs
in
xchg
loop
lods
or
aad
add
mov
popa
xor
in
dec
andl
and
fstl
fisttps
cmpb
xchg
ljmp
adc
jecxz
clc
notb
dec
nop
jl
pop
jle
inc
cltd
mov
outsb
mov
xlat
bound
flds
add
pop
stos
aam
xor
shl
pusha
pop
mov
adc
xchg
insb
xor
pop
sbb
and
imul
ficompl
mov
mov
xchg
dec
pushl
in
mov
jne
inc
push
das
in
jl
sbb
dec
pop
bound
out
mov
stos
and
jl
mov
cmp
sahf
inc
out
sbb
mov
push
pop
sahf
adc
insb
mov
arpl
and
sbb
outsl
or
icebp
mov
adc
nop
fiaddl
loope
icebp
int3
xor
pop
jns
jbe
lcall
and
rorb
enter
mov
push
lds
and
std
pop
leave
push
fdivrl
fisttpl
das
mov
dec
mov
stc
cmp
mov
iret
hlt
mov
lcall
cmp
mov
mulb
inc
mov
out
dec
inc
dec
mov
div
std
fdivrl
adc
sar
pop
pop
cli
fistps
xchg
push
mov
mov
or
xor
sub
adc
jnp
int
or
add
popf
push
lret
jl
xor
pop
pop
mov
out
in
xor
fs
mov
mov
mov
dec
jb
sub
xchg
popf
inc
aaa
flds
popl
enter
sbb
or
adc
and
jo
push
stos
ret
mov
sbb
call
dec
mov
std
pop
scas
sahf
popf
sub
stos
dec
mov
add
push
mov
fsub
cmc
add
movsl
out
pop
xlat
pop
daa
mulb
dec
cmp
nop
push
enter
jmp
and
sahf
nop
jnp
pop
pop
arpl
fstpt
sub
mov
fcomps
stos
jbe
push
lcall
jns
iret
jp
shl
or
dec
cmp
pop
inc
in
dec
call
xchg
data16
add
or
jg
clc
or
in
xchg
and
bnd
mov
ret
adc
mov
lds
js
mov
in
lret
pop
aas
outsb
fwait
xchg
jno
pop
js
cmpsb
mov
jmp
imul
push
rcll
rolb
in
sub
push
inc
jmp
push
sarb
js
mov
je
adc
loope
xor
pushf
adc
mov
das
cmp
sub
fcoms
nop
push
dec
mov
push
enter
adc
arpl
in
mov
xor
jno
clc
lods
mov
lea
ret
mov
test
leave
push
cwtl
fwait
mul
jno
gs
insl
push
outsl
std
xchg
insl
xor
leave
aad
mov
and
cld
das
add
shr
movsl
xor
or
and
mov
loopne
stc
addr16
push
out
sbb
lret
in
jae
xor
bound
pop
data16
sti
ljmp
fs
insb
je
movsb
pop
jno
jbe
jge
xor
jle
adc
movsl
xor
push
lret
pop
lods
icebp
fistpll
shlb
and
mov
fiaddl
repz
inc
and
mov
filds
jno
je
es
jmp
xchg
pusha
test
iret
add
movsb
jge
or
in
cli
movsb
jae
xchg
mov
lret
mov
jne
pop
mov
ret
add
rcrl
hlt
test
scas
sbb
mov
pusha
push
rcll
dec
push
sub
js
lret
inc
shrl
mov
push
push
out
movb
jo
cmpsl
xor
ds
pusha
mov
push
cld
push
sbb
mov
mov
pusha
sub
jg
test
fs
sub
pop
and
mov
lcall
mov
adc
test
or
xlat
arpl
lock
mov
scas
movsb
shl
adc
dec
push
fucompp
inc
jge
xchg
imul
dec
or
fs
daa
pop
push
out
push
mov
rcrl
jne
cmp
mov
xchg
cmp
inc
xchg
sti
rcrl
ficoms
jnp
cwtl
mov
xchg
xcrypt-cbc
cmpsl
xlat
sti
stc
addl
xchg
mov
testl
popl
push
and
jne
int
jge
lret
sbb
or
je
pop
aam
fucomip
push
lds
xor
xchg
mov
xchg
pop
sahf
add
ljmp
and
cmp
scas
into
insl
sub
and
xor
and
dec
mov
lcall
test
stos
adc
xor
cmp
enter
aaa
and
or
dec
inc
or
and
pop
arpl
out
cmp
cmpsl
sbb
push
and
jo
imull
inc
jbe
imulb
jae
cmp
pushf
dec
mov
or
dec
cmpsb
pop
adc
pusha
jnp
xchg
and
inc
movsb
pop
call
repz
jnp
sub
sub
scas
pop
les
lea
add
mov
sub
out
and
shll
xchg
repz
mov
or
or
inc
ljmp
xor
ficoms
insl
cli
jb
push
cmpsb
sub
out
adc
test
xor
cmp
call
cmpsl
dec
cmpsl
jnp
or
test
pop
shlb
mov
not
out
fldcw
arpl
mov
push
fninit
rcr
out
jns
in
faddl
aad
push
imul
std
or
sbb
enter
in
and
pushf
jmp
pop
xchg
dec
mov
call
in
push
inc
inc
in
sub
mov
pop
arpl
insb
fisubl
jb
or
cld
push
pop
pop
mov
into
jae
sbb
outsb
mov
fisttps
pop
test
or
sub
sarb
sti
inc
and
shlb
and
xchg
shl
push
ljmp
push
aaa
mov
lret
push
sub
sub
mov
fcmovnu
mov
fstpl
shlb
dec
dec
xor
jl
pop
add
rcrl
leave
in
xor
adc
scas
xor
lret
lfs
add
inc
add
imul
dec
mov
std
jbe
mov
test
das
jg
jmp
js
xor
sub
jl
jnp,pt
cmp
mov
fs
ljmp
or
call
rcll
jmp
popf
inc
repz
sbb
mov
int3
jo
sti
popa
sbb
mov
pop
add
dec
negb
stc
xchg
popf
sbb
cmp
loopne
pop
pop
sub
iret
mov
jmp
push
pop
pop
pop
stos
lahf
gs
mov
mov
dec
adc
fiaddl
xchg
add
negl
mov
and
pop
scas
call
int3
add
aas
addr16
addr16
sub
popf
xor
int3
stc
pop
add
fwait
test
cmp
xorl
sub
rcll
call
cmc
jmp
shll
mov
fwait
outsb
shlb
mov
cli
xchg
lods
in
pop
push
fmul
das
fsubl
jae
fbstp
adc
dec
popa
icebp
js
je
adc
jb
sbbl
xor
xor
mov
rorl
int
gs
das
sub
int
and
cmpsb
jge
int
out
jg
dec
jns
dec
sbb
idiv
mov
dec
test
je
sbb
jno
sbb
mov
decl
or
mov
notb
pop
les
add
pushf
inc
lods
das
mov
pop
push
pop
push
int
sub
jmp
lahf
sbb
ljmp
leave
out
mov
mov
dec
push
adc
into
mov
mov
ds
or
xorl
push
das
movsb
stos
xor
cmpsb
add
jne
mov
cmp
ljmp
das
push
mov
and
aaa
stos
in
push
int3
cmp
mov
data16
out
sahf
dec
fwait
aam
addb
cmp
add
push
ja
cld
ljmp
movl
push
inc
sub
pusha
and
push
or
in
mov
add
mov
mov
pop
cmp
sahf
lret
in
cmpb
pop
repnz
jno
push
mov
jno
push
int
pop
lahf
test
movsl
lods
pusha
data16
lret
xchg
cmp
fwait
or
xor
xchg
pop
out
jb
pushf
sbb
jecxz
add
mov
mov
cld
cwtl
ret
loopne
test
and
addr16
jbe
jge
test
jg
sbbl
cltd
jl
pop
stos
shll
cmp
and
cmp
mov
adc
add
test
hlt
fmuls
inc
cmpsb
mov
popf
test
mov
push
data16
rolb
icebp
mov
mov
jne
loopne
insl
cltd
mov
mov
sub
pop
or
das
mov
adc
mov
aad
jno
cmp
aas
pop
imul
fdivrs
int3
scas
mov
jp,pn
jge
cwtl
js
popl
xor
sbb
imul
xor
sub
out
scas
sub
and
jbe
sub
xor
dec
loopne
out
pop
fs
jns
addl
sub
and
lods
outsl
es
inc
jle
data16
mov
xchg
jne
sub
outsb
or
jb
sub
xor
stos
mov
rcrb
scas
je
push
out
ficompl
ljmp
pop
in
rcrl
xchg
bound
xlat
inc
xchg
leave
arpl
je
adc
jmp
mov
mov
mov
jmp
in
mov
cmp
sbb
sbb
push
jns
imul
aad
or
inc
push
popa
jno
je
or
mov
adc
lahf
mov
fs
fisubs
lock
mov
mov
mov
loop
imul
cwtl
imul
in
mov
cwtl
push
fldl
xor
addr16
rcr
test
adc
mov
pop
ret
repz
add
in
and
mov
shlb
lea
pop
xor
xor
js
hlt
aam
and
ljmp
mov
sbb
sti
test
dec
pop
scas
lret
mov
or
or
popf
imul
add
decb
inc
out
stos
insl
cmc
int
sub
or
insb
push
dec
adc
ret
shr
mov
movsl
mov
and
std
push
mov
mov
add
push
mov
mov
pop
fisubl
filds
mov
xchg
adc
sbb
jl
int3
test
insb
jp
and
ja
mov
push
dec
cmp
inc
enter
jne
rcrl
fistl
jl
sbb
jmp
nop
mov
outsb
lds
mov
popf
cmp
jle
lods
sub
lret
adc
mov
push
ss
and
pop
test
fbld
cmpsl
pop
loop
cmc
icebp
push
testb
pushf
adc
sbb
sarb
fadd
adc
stos
test
push
sub
push
and
rcrb
pop
inc
es
xor
add
clc
sub
sub
enter
xchg
fadd
test
inc
mov
shlb
sbb
mov
pop
jo
dec
mov
jg
or
movsb
xor
adc
nop
test
push
fsubrp
ja
inc
mov
mov
lret
iret
cs
sbb
int
fsubrl
sbb
dec
sbb
sahf
lahf
mov
loopne
outsb
sarb
pushf
dec
sub
fiadds
inc
or
fwait
sbb
loop
test
mov
aaa
addr16
mov
push
daa
cmpsb
clc
pop
xchg
insb
out
dec
pop
adc
fwait
mov
lret
incb
jmp
sti
shrl
fildl
out
pusha
stc
js
into
cld
scas
out
mov
inc
jle
aas
inc
xor
icebp
ja
pushf
nop
shrl
aad
mov
mov
or
adc
mov
inc
lret
xchg
jno
mov
push
jne
dec
lea
push
sub
push
aaa
call
mov
ficomps
mov
xor
cmp
in
fwait
adc
push
sahf
sub
stos
rep
stos
stos
shrl
je
adc
jno
mov
imul
adc
jb
cmp
js
jg
in
add
xor
mov
xchg
call
movsl
nop
ja
dec
test
test
int3
enter
push
push
mov
rolb
inc
cmp
dec
pop
jp
sahf
pop
mov
out
or
push
out
cmp
push
lcall
rcll
mov
sbb
jns
loopne
fistl
ds
out
test
lcall
fsubr
pop
aaa
ljmp
iret
divb
dec
hlt
ljmp
loopne
pop
mov
mov
cmp
imul
push
out
push
pop
inc
sbb
mov
test
xor
leave
lcall
pop
fwait
mov
cwtl
sahf
push
scas
or
fiadds
fidivrs
notb
leave
ret
push
aam
out
push
rcrl
mov
movsl
inc
jae
idivl
cwtl
pop
outsl
or
xor
mov
mov
mov
xor
in
sbb
jl
iret
push
mov
adc
push
mov
and
int
pop
push
or
insl
push
add
inc
add
lret
idiv
push
outsb
jmp
dec
mov
mov
out
push
aaa
and
pop
adc
frstor
jg
mov
push
out
lahf
rorl
mov
mov
mov
dec
mov
lds
mov
fnstcw
mov
jno
lcall
imul
mov
dec
jmp
mov
call
mov
aad
mov
test
shll
addr16
mov
xchg
or
les
adc
mov
cmp
push
inc
nop
cwtl
mov
push
subb
cld
dec
cmc
clc
cmc
out
pop
jge
fwait
or
aas
aas
xor
test
jge
xchg
mov
or
push
das
mov
jo
hlt
test
gs
test
scas
sti
lret
pop
push
inc
xchg
or
das
insl
jle
pop
add
in
bound
js
leave
rcrl
xlat
inc
outsl
mov
sbb
xor
jecxz
addr16
jp
es
sub
cli
jle
out
cmp
test
in
cld
cmp
js
lret
xchg
int
dec
icebp
imul
push
mov
mov
mov
xor
mov
dec
dec
mov
mov
and
mov
jb
xchg
outsl
push
cmp
lods
push
js
or
push
mov
push
dec
pop
xor
stc
or
addr16
in
fstps
push
jbe
repnz
cmp
jno
cmpsb
sahf
xor
in
rorb
jle
rorl
out
mov
sbb
jb
movsb
mov
imul
mov
push
push
jecxz
sarl
push
add
adc
inc
push
add
add
or
iret
jmp
dec
adcl
les
insb
jge
push
dec
stc
je
mov
mov
js
inc
add
jb
frstor
out
in
fwait
aas
dec
and
jle
ds
cmc
dec
inc
mov
into
aam
xchg
cltd
loopne
test
add
lock
ret
es
cmpsb
cmp
add
dec
in
in
orb
lret
jge
cmp
push
cmp
mov
out
or
jp
pop
sub
inc
repnz
repz
xchg
jns
push
in
fwait
xlat
jno
sbb
enter
mov
adc
repnz
lods
push
ret
into
mov
push
orl
mov
hlt
cwtl
jge
lock
jns
pop
mov
je
dec
push
iret
sti
adc
outsl
mov
cmpsb
in
popa
filds
fsubrs
in
decb
jecxz
in
push
fadds
mov
pusha
stos
lret
lcall
shlb
jb
ljmp
push
push
scas
and
imul
jno
mov
fwait
popa
out
xor
loop
xor
lret
pop
or
xlat
in
lcall
jl
mov
jge
adcb
in
dec
mov
mov
das
fcmovne
aas
loope
loop
loop
add
frstor
jnp
mov
mov
add
ja
cmpsl
xchg
incb
out
pop
orb
add
lods
xchg
inc
inc
loop
push
mov
int
jb
push
mov
xchg
mov
imul
outsl
sub
jns
out
jb
fisubl
lods
add
inc
add
rep
orb
mov
int
mov
jmp
sbb
lcall
icebp
pop
iret
movsb
aas
fldl2e
dec
jnp
ljmp
pop
stos
push
push
inc
adc
inc
lret
js
les
je
je
push
stos
cltd
cwtl
adc
insl
cli
xchg
adc
mov
xchg
loope
push
add
add
push
xor
mov
fdivs
add
pop
xor
ljmp
lods
cmp
push
cmp
loopne
push
pusha
xchg
cmp
fdivr
movsb
jno
testb
ret
xor
mov
or
cmp
add
xchg
sub
mov
mov
or
and
and
inc
mov
lock
sbb
jo
xchg
mov
hlt
jne
je
out
and
sahf
mov
mov
lea
pop
or
fsubrl
pop
jecxz
cmp
ss
adc
xchg
add
pop
sub
cld
leave
and
stos
push
shll
in
loop
imul
mov
daa
lods
out
pusha
inc
xor
fiaddl
in
inc
lahf
or
inc
loopne
arpl
cmp
test
inc
inc
jecxz
inc
inc
sbb
out
repz
mov
insl
jae
push
inc
cmp
pop
int3
jns
inc
fsub
leave
mov
enter
pop
das
xchg
mov
in
nop
aam
push
jmp
jnp
shlb
adc
sbb
in
test
push
mov
fsubs
bound
movsl
pusha
xchg
jne
add
xchg
lcall
dec
adc
cwtl
out
in
div
jge
rep
pushf
jbe
mov
test
xchg
mov
mov
xlat
sub
pop
push
fldenv
mov
pop
vmread
mov
and
mov
test
leave
pushl
sti
jge
test
adc
mov
ret
outsb
mov
in
or
imul
and
add
addr16
cmp
pushf
add
mov
mov
inc
rolb
shll
test
movsl
mov
xchg
cmp
mov
add
mov
pop
jbe
jg
not
xchg
or
push
stos
dec
shrl
jne
arpl
and
scas
sub
mov
or
popa
fs
out
add
pushf
dec
push
fimuls
inc
lahf
pop
or
cwtl
xchg
sbb
in
xor
sti
pusha
les
and
mov
mov
cmpsb
mov
mov
popa
incb
push
push
inc
ja
jecxz
push
lret
push
and
movsb
cltd
dec
mov
xchg
mov
dec
fcomi
sub
mov
sahf
add
push
cltd
mov
cmp
jp
mov
add
in
jae
mov
mov
dec
pop
insb
dec
push
shlb
add
mov
jns
sub
daa
shlb
mov
cmpsb
pushf
loopne
pop
pop
ret
ret
lret
shll
lret
fucomi
data16
scas
insb
nop
les
stos
mov
int3
test
or
jne
push
pop
lods
outsl
imul
xor
insb
lea
mov
dec
jmp
aad
sbb
rcrl
push
jg
pushf
add
nop
push
stos
or
lods
movq
aam
inc
repz
and
mov
lods
push
xchg
and
test
fidivl
dec
addr16
cwtl
int
inc
cmpsb
repz
mov
or
xor
jb
jae
inc
dec
mov
mov
sub
jge
or
xor
mov
push
test
xchg
xorb
cmp
arpl
adc
or
mov
imul
scas
out
ja
pushf
mov
insl
cld
xchg
mov
mov
add
std
clc
ljmp
lds
rcll
dec
cld
sti
leave
rcll
mov
jnp
or
mov
stos
sbb
pop
cmp
mov
or
inc
mov
outsl
push
loop
pop
or
mov
jmp
xchg
cmp
xor
xor
add
mov
int3
sbbl
inc
jle
mov
push
xchg
add
and
inc
fcompl
inc
inc
mov
cltd
jl
or
or
add
xchg
popa
cmp
cmpsl
das
movsl
pop
mov
sbb
push
dec
or
mov
lods
outsl
jbe
lret
iret
xchg
cmc
shlb
lret
jge
shrl
pop
jno
sar
cmp
stos
cs
clc
mov
hlt
test
outsb
cwtl
cmp
daa
inc
out
push
out
fidivl
cmp
sbb
mov
stos
xchg
movsl
pop
jecxz
xlat
mov
dec
rolb
es
and
adc
dec
mov
or
jbe
hlt
loope
or
loop
leave
or
aam
push
add
inc
xchg
xchg
pop
inc
inc
mov
dec
dec
jno
fcomps
push
mov
jo
adc
jnp
and
cmc
xor
cmp
xchg
jae
movsb
inc
xorl
or
aam
rclb
rorb
aam
xor
push
xchg
push
loop
add
in
sbbb
inc
jecxz
mov
stc
pusha
js
mov
lret
xchg
add
pushf
pop
mov
imul
adc
out
add
mov
xchg
cwtl
shrl
aam
ja
cmp
daa
and
push
pop
jae
inc
and
dec
add
ljmp
xor
mov
sbb
push
mov
int3
mov
add
xor
ficomps
mov
int
xchg
jno
jo
int
and
xlat
fs
adc
cmp
sbb
dec
pop
jecxz
flds
mov
mov
xor
or
or
jecxz
jmp
in
stos
inc
push
and
jge,pn
ret
or
mov
adc
pusha
mov
add
lret
cwtl
xchg
leave
int
and
addl
mov
lock
xlat
jno
mov
mov
jp
mov
mov
fucomip
mov
fcoml
dec
dec
jmp
fs
or
mov
daa
icebp
adc
orl
mov
cmp
aam
movsl
fisttpll
notb
xchg
cmpsb
inc
or
mov
mov
imul
sahf
or
ds
and
pop
jecxz
xchg
fnstcw
rcrl
pop
pop
push
push
mov
push
sub
inc
add
popa
mov
mov
in
adc
push
loop
lahf
ret
mov
shll
add
fwait
arpl
jecxz
xor
out
pop
push
xor
inc
outsl
das
pop
jae
movsb
xor
cmpsl
addb
jb
sub
xlat
enter
jb
bound
in
jl
gs
aaa
std
push
ret
pop
lds
pop
ret
jmp
int
lock
sbb
loop
stos
and
jo
je
sbb
in
jbe
cmp
aam
into
addr16
add
shlb
add
jns
or
sub
sbb
cli
push
adc
sbb
movsl
sahf
movsb
idivl
mov
and
and
data16
icebp
imul
stos
insb
mov
fildl
push
out
aaa
mov
repz
adc
add
inc
mul
mov
es
adc
orl
push
cmp
inc
sbb
add
or
mov
or
lcall
sahf
shlb
fiaddl
push
dec
dec
pop
cmp
push
test
mov
popf
push
fwait
mov
xchg
inc
pop
es
cmp
aaa
xchg
lock
xchg
iret
pop
nop
mov
das
jb
xor
daa
xchg
dec
out
scas
daa
sub
fcoml
cmp
repz
cmpsb
fmull
dec
jo
push
mov
and
xor
fcom
push
scas
cld
pop
dec
mov
sub
dec
fcoml
lret
cmp
mov
lods
sbb
gs
push
insb
sub
adc
stc
pop
sub
rclb
add
cmp
mov
inc
andl
or
lods
icebp
addr16
sbb
lret
push
nop
icebp
inc
push
cmp
out
je
lods
imulb
jb
fwait
sbb
push
mov
clc
adc
scas
lret
mov
ljmp
imul
cmp
sbb
xchg
or
gs
lods
xchg
sbb
sbb
push
stos
jmp
pusha
jns
jge
loopne
add
gs
cmpsb
sbb
cmp
sub
jecxz
fadds
ss
rcrl
mov
jne
jae
mov
xor
hlt
mov
ja
rcrb
pop
int3
repz
fdivrl
push
lods
pop
fldt
sbb
test
xor
mov
inc
pop
nop
adc
dec
sbb
cmp
cs
mov
add
xchg
xchg
into
lods
adc
inc
mov
cmpsb
inc
mov
aad
movsl
jno
call
mov
cmp
cmp
cltd
jbe
mov
add
jg
fwait
cmp
cmc
xchg
inc
je
xor
add
push
mov
xchg
loope
push
jne
mov
lods
push
int
mov
stos
pop
repz
dec
mov
stos
mov
push
pusha
pop
lea
out
xchg
ret
mov
sbb
pop
sbb
adc
fwait
mov
fisubl
xor
dec
adc
pop
je
sahf
test
push
add
fdivr
pop
nop
sub
lahf
jb
sub
scas
dec
and
mov
cmp
sbb
pop
mov
fdivp
es
pop
mov
mov
ljmp
fwait
xchg
test
sub
sbb
inc
andl
imul
pop
loopne
scas
pop
test
std
mov
gs
loop
movsb
cmp
sub
dec
pop
cmpsl
daa
cli
jp
pop
rdtsc
push
xchg
lea
jns
out
pushf
jb
xchg
inc
fs
adc
loope
stos
mov
sahf
add
daa
pop
lret
gs
imulb
mov
and
mov
popa
shrl
mov
inc
cmpsl
fiadds
sub
xor
pop
enter
sbb
scas
jl
or
or
lods
jmp
push
data16
iret
adc
sub
adc
sahf
jecxz
lock
mov
int3
je
adc
and
inc
mov
bt
push
xchg
cmp
or
jbe
mov
insl
jae
notb
inc
sar
in
pop
adc
aaa
xor
dec
mov
mov
mov
std
fmul
mov
xchg
popa
outsl
jnp
jns
sub
add
fucom
mov
fstl
nop
inc
push
mov
stc
mov
lods
vphaddubd
inc
dec
arpl
adc
fcoms
out
in
ret
or
add
dec
and
mov
mov
cmp
cmp
mov
pop
jo
pop
mov
xor
pushf
sub
pop
cli
notl
fwait
pusha
or
mov
or
fcmovbe
sub
pop
ja
cwtl
xchg
push
cmpsb
mov
sub
cwtl
mov
enter
mov
dec
dec
std
push
addl
fwait
add
outsb
loopne
add
int3
mov
fiadds
jecxz
aas
mov
mov
shll
or
lret
mov
lahf
mov
repnz
cmc
push
xor
sub
cmpsl
cltd
fwait
jo
mov
cwtl
movsl
xor
sub
test
adc
dec
sub
clc
dec
sub
sar
jle
scas
mov
incb
hlt
sub
clc
fildl
mov
jbe
test
jle
xchg
adc
cmp
or
mov
aas
sub
into
test
push
add
mov
aas
or
sub
adc
outsb
aas
fwait
lret
pop
or
movsl
enter
pop
test
cld
inc
incb
psubusb
xchg
jno
adc
jb
xchg
cmpsl
andl
vpcmpgtd
enter
es
xor
scas
mov
cmp
and
pop
ds
and
or
xchg
imul
mov
mov
fistl
push
and
les
in
jnp
sbb
jp
sbbl
dec
and
addr16
faddl
popf
outsl
out
notb
xchg
xchg
ds
insl
hlt
xchg
pop
sub
and
mov
rcrl
sub
pushf
sub
hlt
cmp
mov
lcall
mov
pushf
push
add
sub
mov
pop
leave
dec
pop
jecxz
mov
movsl
shlb
repz
xor
push
mov
mov
cmp
push
and
dec
andl
inc
mov
cmpsl
leave
mov
mov
jb
out
sbb
dec
pop
movsl
mov
mov
lods
sbb
incl
pop
sub
or
popa
mov
xor
cmp
cs
adc
inc
jmp
shl
jp
xchg
cmp
test
pop
sbb
inc
out
out
cmp
ret
bound
cmc
lea
cmpsl
and
shll
push
mov
sbb
lea
lret
adc
push
xor
in
fidivrl
pop
sbb
into
mov
inc
sub
push
das
std
xor
add
or
lea
jno
shl
in
sbb
adc
xchg
loopne,pt
loope
jg
daa
ficoml
cmp
mov
jl
cmpsl
ret
ret
add
dec
push
out
sahf
out
dec
add
dec
in
or
lahf
xchg
lahf
jbe
sbb
sbb
loope
push
movsb
pop
pop
jns
cmpsb
popa
xlat
cmpsl
mov
and
lret
and
add
push
nop
dec
mov
xor
xchg
xchg
sti
mov
shl
sahf
sti
sub
push
pop
out
arpl
push
imul
in
xor
mov
push
mov
in
push
negl
fsubs
adc
sbb
mov
daa
and
jmp
inc
pxor
ds
js
push
cmp
xor
iret
xchg
lret
daa
fwait
rolw
enter
rclb
sub
lock
mov
mov
aaa
add
pop
sbb
fdivp
dec
fdiv
add
and
sub
mov
stos
andl
pop
mov
xchg
and
push
sub
and
cmp
out
mov
mov
in
jo
add
mov
repz
js
ja
mov
xchg
movsb
inc
jl
data16
xlat
outsb
xchg
and
adc
sti
pop
pop
popf
xchg
mov
repnz
orb
jp
sbb
cmp
adc
push
jg
lods
sarl
add
mov
lret
xchg
cmpsb
add
jno
push
lods
pop
push
inc
push
adc
ljmp
sub
add
jae
clc
mov
jns
push
lahf
sbb
jp
push
out
sub
cmc
cmp
jl
leave
adc
divl
idivl
in
sub
mov
std
ljmp
cwtl
je
jl
inc
adc
xlat
jp
aaa
mov
jb
mov
sub
movsl
inc
jno
dec
push
js
jmp
add
mov
negb
sub
fistpl
sub
insb
in
inc
add
jmp
sbb
call
jp
call
sbb
lcall
fxch
xor
xchg
pop
mov
or
inc
mov
lcall
pop
inc
push
das
cmp
out
mov
lahf
ja
cmpb
fidivs
int3
arpl
ja
push
and
pusha
fstpt
stos
push
or
and
sbb
xor
mov
xor
sbb
push
mov
sub
and
add
les
jne
push
jle
xor
sahf
sbb
jge
in
jg
pop
lods
fbstp
cmpsb
imul
gs
fprem1
cmpsl
iret
dec
das
ds
fcmovnb
int3
inc
ss
fsubr
out
repz
loop
or
int3
pop
cmpl
popw
add
and
or
push
mov
push
pop
lahf
and
pop
addr16
aad
ret
xor
push
pop
ss
fldt
aad
add
inc
mov
pop
mov
xchg
sub
xor
fsubl
jae
cmp
xor
aam
test
arpl
clc
jne
inc
mov
or
in
mov
out
add
stos
idivl
jns
insl
iret
dec
adc
pop
xor
aad
push
or
jne
mov
mov
rcll
sahf
enter
xchg
aam
xlat
push
loop
jno
lret
push
repnz
lods
fcomps
push
pop
stos
movsl
cld
xchg
in
and
fucomi
out
out
and
fbld
push
or
and
xchg
addr16
stos
insl
jbe
lds
mov
icebp
or
cli
inc
sarb
fwait
push
imul
push
in
and
sbb
test
inc
into
pushf
movsl
xchg
cmp
pop
mov
cld
push
dec
add
and
enter
jae
into
or
dec
adc
mov
pop
cmpsb
clc
repnz
jb
loopne
mov
pop
pavgb
cltd
or
movsl
add
mov
clc
inc
das
cmp
cmp
int
lret
sbb
pop
cwtl
xor
and
addb
add
call
std
sub
mov
push
fisttpll
mov
mov
pminsw
and
repz
movsb
jle
call
inc
or
sbb
sub
jb
mov
mov
xor
fwait
enter
inc
or
or
movb
dec
mov
add
fisttpll
stos
outsb
adc
sub
inc
add
pop
or
push
frstor
roll
jne
ret
cwtl
adc
mov
addr16
add
and
loop
add
or
loop
xor
mov
movl
repz
xlat
jp
and
scas
inc
push
inc
dec
in
pop
inc
sub
les
lock
or
mov
cmp
enter
xor
dec
rcrl
and
xchg
adc
ja
jmp
mov
lock
imul
gs
out
addr16
out
adc
popa
jno
add
add
pop
mov
jle
mov
mov
popa
lods
pop
push
push
xchg
mov
adc
fwait
jbe
js
addb
xchg
loopne
in
das
push
dec
outsl
dec
adc
fsubs
or
push
jo
fdivrs
dec
mov
outsl
ljmp
mov
orb
sub
sub
testl
sbb
ret
xor
pop
adcb
andb
repnz
icebp
icebp
and
push
mov
push
xchg
outsb
jae
push
mov
xorl
sbb
adc
and
jecxz
stos
scas
and
mov
lcall
push
and
xchg
sbb
jg
psadbw
lods
jp
rcll
mov
sub
rclb
inc
das
or
mov
adc
shll
cs
fdivl
lret
cmp
add
add
inc
movsb
inc
adc
or
mulb
aad
jecxz
push
cmpsl
dec
adc
push
leave
push
pop
or
cli
mov
cmp
push
dec
cmp
fsubs
scas
xor
push
cmp
xchg
or
or
adc
arpl
repnz
sahf
getsec
out
gs
cltd
test
shlb
clc
mov
lahf
and
xor
orl
pop
pop
xchg
jg
lret
jne
and
mov
ss
ds
or
adc
aas
adc
mov
jno
adc
orl
ljmp
lea
inc
mov
sarl
pop
daa
lea
pushfw
sub
loope
sarb
in
mov
or
lahf
adc
pop
std
fbstp
mov
ret
push
popf
popa
sub
xor
or
gs
sbb
dec
xchg
ja
push
lret
hlt
xchg
push
scas
int3
sbb
mov
das
xor
push
outsb
xchg
mov
cwtl
or
adc
dec
loop
scas
push
pop
bound
ljmp
pop
dec
cltd
adc
sub
dec
adc
js
or
pushf
fsubs
addb
andb
push
jb
hlt
sti
shl
jg
jecxz
push
sbb
sbb
inc
aam
xlat
pop
cmpsb
cltd
movsl
xchg
xchg
es
mulb
push
sbb
adc
ret
out
sbb
mov
or
mov
jo
div
xchg
mov
out
in
sub
push
jl
push
pushf
lgs
sub
mov
add
cmpsl
lahf
cmp
outsl
xor
cmpb
and
jae
xor
cmp
fisttps
pop
aam
jo
pop
pop
jl
mov
sbb
es
das
pop
in
inc
or
sbbb
out
hlt
nop
sysenter
stos
inc
js
je
test
leave
sarb
lock
cmp
pop
xchg
xchg
test
pusha
sahf
lret
jge
sbb
lcall
cmp
inc
sbb
cmp
mov
or
test
mov
sbb
add
shlb
push
adc
add
cld
js
or
inc
ljmp
xchg
callw
pop
into
out
es
ds
lods
lahf
into
pop
or
sub
fsts
in
jmp
add
inc
sbb
cmp
mov
push
xchg
mov
lea
in
sbb
jmp
mov
pop
lret
lods
in
mov
ds
clc
push
xchg
in
icebp
push
cmp
ljmp
out
repnz
dec
out
pop
fisubs
sub
jp
push
xchg
fdiv
sbb
fistl
jo
inc
rolb
loop
cmpl
push
cmp
loopne
add
lock
mov
push
je
mov
gs
xchg
test
sbbl
cltd
dec
in
xchg
xchg
pushf
aad
sub
mov
mov
push
popa
scas
fadd
mov
cwtl
sbb
mov
or
ret
ja
iret
test
and
rcr
mov
dec
push
inc
inc
aad
fsubl
sub
and
xchg
mov
lret
dec
pop
fistps
sbb
pop
inc
inc
push
fistl
jp
ret
int
stos
jnp
test
outsl
jmp
mov
leave
ss
fsub
inc
fidivl
xor
test
mov
xor
subps
adc
mov
scas
test
add
cmp
hlt
push
inc
or
ret
mov
or
fwait
incb
addr16
hlt
and
ljmp
pop
and
push
into
outsl
insl
movsb
add
pop
std
dec
fdivs
cld
cmp
and
cmpsb
adc
lods
mov
shlb
or
mov
out
mov
adc
lcall
test
in
out
mov
adc
jp
xor
test
sub
push
imul
push
outsb
ja
adc
cld
jge
cmpsl
addr16
aaa
ljmp
addr16
ss
mov
jb
xchg
push
xor
hlt
jle
mov
in
inc
xchg
hlt
int
scas
push
lahf
mov
fdivs
push
test
out
push
adc
xchg
jmp
sub
gs
or
sbb
sahf
cmp
icebp
notl
mov
fdivl
nop
dec
dec
or
mov
lea
cmp
movsl
mov
sbb
imul
adc
xor
sbb
push
mov
lds
jb
pusha
test
mov
pop
and
test
adc
addr16
mov
inc
mov
mov
jne
cs
xchg
sti
inc
or
adc
mov
js
or
fwait
iret
cld
mov
mull
lods
cmp
test
xor
idivb
push
arpl
adc
sub
push
cld
out
jno
je
movsb
cmp
dec
add
int3
cmp
aaa
lahf
adc
call
nop
pop
push
cmp
loope
add
insl
insl
out
dec
das
sbb
fistpll
test
dec
rcll
out
xlat
fistl
lret
jns
inc
bound
out
lcall
jmp
jne
jbe
mov
xchg
xchg
sub
ret
in
mov
jmp
sbb
adc
jle
and
cmp
push
lods
jg
add
jne
ds
add
sar
add
or
fists
pusha
pop
int3
stc
and
pop
in
loope
gs
adc
or
pusha
jae
jbe
mov
lret
testl
mov
push
sub
dec
sub
outsl
pop
faddl
xor
or
es
add
mov
pop
inc
inc
outsl
scas
dec
mov
xor
cmp
rclb
outsl
idivb
insl
call
xchg
add
adc
rcrl
fldenv
lods
xor
nop
sarb
adc
add
sar
push
insl
out
stos
lret
push
and
scas
das
cmp
xchg
icebp
jns
dec
dec
jp
sti
fdivs
and
lock
and
sub
or
jmp
jo
adcl
adc
lock
sub
jb
int3
rcrl
cmpsb
pop
xor
icebp
dec
mov
or
fwait
in
imul
adc
sbb
movsl
inc
rcrl
inc
xchg
mov
push
popa
xchg
ljmp
xchg
push
push
pop
jo
test
inc
sahf
xor
dec
out
mov
mull
ret
mov
or
add
push
push
sbb
out
mov
popa
lea
add
fldcw
xor
sbb
sbb
loop
dec
cmp
sbb
cld
stc
es
ret
push
mov
cmp
cmpsb
and
mov
adc
or
idivb
jg
cmp
mov
dec
stos
imul
mov
mov
sub
jmp
xor
or
push
repz
jae
sub
or
pusha
outsb
andl
mov
test
aaa
add
test
inc
mov
xlat
cli
lret
lret
mov
je
lds
mov
push
ficomps
popa
push
add
repnz
jnp
sub
stos
add
push
and
xchg
pop
test
cmp
mov
xorl
ss
fsubs
cmp
mov
pop
push
fdivrp
sbb
push
jne
fistpll
mov
sbb
push
into
and
cmp
add
pop
sbb
add
mov
push
or
test
jl
ret
xor
inc
sti
mov
xchg
adc
push
mov
iret
dec
mov
and
shrb
iret
push
js
cmp
add
lahf
insl
fisubl
jge
cmpsl
mov
and
push
test
es
stc
cmp
xorl
or
jae
movsl
dec
inc
jl
push
movsl
aaa
les
xchg
cmp
pop
test
movb
test
std
xor
push
inc
dec
fsubrs
jbe
scas
push
jge
and
cmc
rol
aam
mov
mov
adc
pop
lret
dec
lcall
in
rcrb
cmp
mov
les
jb
lret
xchg
lret
mov
sbb
sbb
dec
sbb
inc
xchg
loop
rorb
push
aaa
addr16
roll
add
pop
jmp
cmp
dec
rol
and
outsb
push
jbe
into
xor
jg
lods
dec
std
imul
and
cmp
imul
adc
pop
out
mov
outsl
test
mov
aad
fidivl
push
out
sub
ret
inc
jnp
hlt
xlat
or
data16
mov
aam
icebp
dec
in
lods
fisubs
or
pop
or
xchg
mov
sub
in
mull
movsl
imul
and
cmpsb
dec
inc
or
mov
pop
scas
leave
addl
or
mov
das
loopne
sub
stc
rcl
cmp
popa
dec
pop
push
mov
popa
je
jno
adc
int3
psrad
sub
adc
xchg
cld
pop
sbbb
cmpsb
sub
xchg
mov
cmp
xchg
push
mov
dec
add
mov
int
in
and
shll
sub
gs
xor
aam
xor
xchg
arpl
add
sbb
and
frstor
clc
xchg
nop
pop
lahf
outsl
mov
push
pop
lcall
or
std
cmpsl
push
lcall
mov
arpl
and
cltd
inc
arpl
sub
aaa
push
fwait
mov
inc
lods
jle
arpl
pop
jbe
xor
iret
stos
mov
adc
dec
cmpsb
cmp
fnstenv
push
loope
or
adc
sub
cmp
popf
mov
inc
lods
and
pop
add
jge
and
sub
mov
fcoms
cmp
dec
lcall
hlt
mov
mov
leave
jo
mov
sahf
in
in
repnz
sub
and
mov
dec
mov
test
add
adc
test
mov
fwait
ljmp
push
sbb
pop
cltd
cli
rcrb
jne
sub
std
adc
mov
and
jle
pop
push
sub
inc
pop
lahf
cmp
cltd
stos
shrb
cmpb
dec
dec
jg
mov
loopne
jle
inc
or
lahf
push
test
xchg
out
inc
jbe
adc
sbb
out
fidivrl
sub
jnp
cmp
cwtl
stc
xor
mov
rol
nop
xlat
add
clc
add
mov
fcmovbe
mull
out
pop
pusha
in
addr16
jae
imul
mov
mov
xor
ret
out
je
jle
sub
stos
cs
dec
push
mov
mov
pusha
shll
add
sti
xchg
lods
sub
xchg
mov
data16
xor
jge
add
inc
xchg
xchg
push
lods
cmp
sbb
push
repz
jne
popf
test
std
mov
outsb
jno
test
std
mov
mov
mov
adc
scas
mov
mov
sbb
mov
pop
bound
cmp
sbb
add
mov
mov
shrl
cmp
inc
sbb
push
js
adc
fimull
inc
push
repz
push
push
cmp
mov
push
arpl
xchg
icebp
jge
adc
test
push
inc
punpckldq
and
fwait
cwtl
mov
int3
mov
rcl
es
or
movsl
div
dec
int
jmp
fildll
mov
int3
jmp
js
imul
dec
cs
xchg
mov
adc
xchg
jecxz
sahf
mov
or
lcall
adc
add
xlat
push
push
cmp
jl
mov
dec
call
fcompl
sbb
pop
cwtl
psrad
cwtd
gs
insb
and
sbb
nop
xchg
sti
nop
add
jge
push
xchg
xchg
dec
dec
outsb
leave
add
or
and
push
add
add
sub
imul
int3
mov
mov
imul
aaa
aam
jae
jno,pn
call
xor
mov
pop
int
ja
ret
inc
sahf
cltd
push
gs
mov
fisttps
push
in
inc
or
dec
and
inc
add
cmp
lcall
and
mov
add
fucomp
mov
sub
faddl
insb
mov
jmp
dec
aaa
xchg
add
sbb
repz
inc
jge
dec
loope
jae
clc
sub
xorb
pop
or
mov
jmp
inc
lds
ljmp
xor
aad
enter
ret
sti
popl
loopne
xor
dec
popf
and
icebp
sbb
aad
andl
rclb
dec
xchg
test
nop
jbe
pop
pop
mov
cmp
fs
sbb
sahf
and
mov
xchg
and
movsb
mov
int
mov
cmp
xchg
sti
ljmp
fwait
mov
cmp
mov
mov
in
fsubl
outsl
imul
movsl
int3
mov
popf
mov
push
xchg
movsb
ffreep
xor
leave
adc
ss
fldl
mov
in
cmp
adc
push
cld
and
and
xor
bswap
insb
movsl
shrb
lock
dec
xor
push
fnstenv
je
xlat
inc
scas
lea
popf
jnp
sbb
pop
pop
mov
and
jbe
sarb
daa
mov
ret
mov
pop
aam
cwtl
test
shlb
loope
cmp
lock
jne
add
sarb
cmp
cmp
add
ds
and
cmpsl
jbe
clc
stc
je
push
sbb
and
sub
xor
addr16
test
jl
sbb
popa
shlb
mov
out
out
push
push
test
scas
xchg
mov
fldl
into
cs
add
outsl
dec
dec
fcoms
push
aas
lahf
push
out
jmp
outsl
add
mov
cmp
mov
fxch
push
sbb
adc
scas
fnstsw
sti
aam
int
in
add
mov
xchg
in
cmc
jp
sbb
repz
pop
dec
adc
ljmp
mov
out
mov
pop
iret
pop
ja
fwait
push
sub
aaa
xor
lea
push
leave
lahf
push
daa
aam
dec
js
inc
adc
and
rcl
in
gs
or
jmp
mov
lds
sarb
mov
insl
sub
insl
dec
jle
repz
jmp
int
and
add
mov
jp
fmuls
aas
cld
mov
or
fcompl
mov
mov
mov
stos
rorl
xlat
test
sbb
or
stos
push
add
test
lods
dec
sbb
lcall
jmp
into
jns
mov
inc
int3
add
test
fdiv
or
out
cmp
mov
dec
and
pop
or
cmpsb
and
shll
mov
out
insb
push
push
ja
lods
mov
mov
out
mov
fld
idivl
mov
xchg
stc
xor
adc
mov
adc
cwtl
sub
add
insb
mov
lods
test
xchg
enter
cwtl
push
jb
test
jl
xchg
lahf
adc
add
or
popa
icebp
popf
pop
adc
mov
movsl
mov
inc
xchg
push
lock
pop
adc
subl
dec
ljmp
sbb
mov
pop
jle
mov
outsl
lock
jno
outsb
mov
insl
lret
xor
add
or
ds
push
mov
mov
lcall
imul
fcoml
inc
xor
fldt
sub
fnstenv
rcrl
xchg
test
mulb
cwtl
xor
add
xchg
fidivl
or
ljmp
mov
mov
shl
test
stos
sub
call
cmc
iret
mov
or
push
or
jo
sbb
cld
xchg
add
rcll
clc
mov
sub
push
or
lcall
in
insl
repz
cmp
push
xor
or
clc
shll
insl
filds
pop
cmp
jae
xchg
push
dec
mov
and
cmp
jne
rcr
dec
add
divb
mov
xchg
xor
jae
sti
repz
je
cmp
adc
dec
xchg
je
and
stos
mov
mov
sti
cmpb
jae
mov
push
sti
xchg
out
jb
pop
iret
mov
add
pop
sbb
cmp
cltd
repnz
fdivrl
jecxz
fwait
jns
add
imul
xchg
and
mov
push
shr
dec
test
fdivr
fisubl
daa
dec
pushf
enter
loop
xchg
ret
pop
xchg
les
fs
inc
iret
jmp
test
cmp
inc
or
inc
fsubs
leave
nop
pop
stos
popa
mov
add
daa
loopne
insl
mov
lcall
mov
add
insb
ja
cwtl
push
add
mov
insb
mov
ret
stos
dec
shrb
rolb
cltd
leave
push
mov
fsub
test
lret
mov
icebp
sub
add
cmp
mov
mov
aas
repnz
fcmovne
ret
out
push
and
insl
lock
cmp
lods
rclb
shrb
pop
push
jns
push
imul
ss
lcall
sti
sbb
adc
movb
stos
mov
mov
xchg
xor
fs
jge
dec
jl
push
mov
stos
imul
xlat
addr16
push
das
xor
cmp
call
pop
jo
sti
in
fsub
xchg
add
mov
dec
shl
mov
sar
cmpsl
and
les
adcl
pusha
clc
mov
ret
hlt
outsb
aam
sahf
movsb
push
sahf
pop
daa
ja
lret
xor
mov
jnp
ja
cmp
xchg
lds
lahf
sbb
pop
gs
repnz
out
push
dec
jae
aas
out
or
mov
inc
inc
inc
push
jg
mov
aad
aaa
aad
fcomp
mov
jo
arpl
and
mov
in
movsl
mov
pop
pop
mov
sti
imul
sarb
popf
push
ret
xchg
scas
add
adc
cwtd
mov
cmpb
xlat
jnp
jb
ret
dec
pop
loope
sub
addb
mov
js
xor
arpl
inc
push
ljmp
lods
movb
mov
cld
call
pop
out
in
jo
popf
addr16
xor
mov
rcrl
push
jo
int3
or
fists
push
fcmovnbe
fistpl
jecxz
xchg
les
pop
mov
lcall
lret
leave
adc
and
mov
test
mov
inc
cmc
adc
lret
es
cmp
sub
xchg
mov
fs
pop
add
sbb
jecxz
das
inc
in
movsb
mov
repz
stos
pop
mov
sbb
push
inc
lds
jl
js
movsb
in
inc
lcall
movsl
lret
js
pop
rolb
adc
movsb
les
fadds
mov
push
dec
fistpll
or
out
add
lea
out
in
push
sti
arpl
filds
stc
mov
mov
aaa
xchg
sahf
insl
inc
xchg
fcmovnbe
adc
push
mov
daa
mov
fisubl
mov
add
clc
adc
and
int3
fisubs
aad
test
in
inc
pop
sbb
loope
xor
and
vfnmsub231pd
int3
daa
f2xm1
xchg
fisubrs
adc
or
sub
je
shlb
xchg
into
jnp
pusha
jecxz
jo
repz
push
movsb
dec
jmp
mov
nop
ss
cli
inc
mov
fnstcw
dec
in
pop
or
out
scas
push
xlat
push
leave
dec
es
or
cmpsl
repz
jns
push
adc
mov
mov
sub
xor
sub
pop
pop
pop
popa
xchg
pop
gs
xchg
cmp
adc
sbb
mov
adcl
sbb
cmp
push
push
test
or
sbb
pop
and
mov
into
cmc
outsl
push
or
roll
ds
fwait
lahf
movsb
xchg
call
lock
mov
xchg
cmp
stc
je
ljmp
cmpl
imul
lahf
inc
fstps
mov
std
in
mov
mov
sbb
fwait
or
jl
call
pop
pusha
fiaddl
sti
test
xor
lods
sbb
leave
jl
lcall
mov
sti
push
mov
xchg
adc
test
mov
mov
push
stos
mov
mov
lds
ret
ficompl
mov
push
int3
sbb
idivl
inc
add
enter
jno
scas
inc
pop
loopne
sbb
jno
jno
cs
dec
movsb
cmp
pop
outsb
cmp
jl
and
mov
cmp
add
lret
inc
xor
xchg
jb
xchg
imul
inc
loop
ja
adc
add
lcall
push
xor
sbb
lock
pop
stos
sar
hlt
and
jmp
call
push
and
loope
push
aam
loopne
daa
sub
mov
inc
xchg
loopne
sub
sub
in
pusha
xchg
pushf
cld
jg
mov
jge
cmp
mov
jp
mov
stc
scas
shr
int3
je
xchg
gs
mov
mov
jl
mov
mov
cmp
and
xchg
mov
mov
mov
pop
ret
addr16
mov
repnz
fbstp
jg
pop
mov
and
int3
dec
or
rcrl
addr16
mov
lahf
push
lods
sbb
mov
pop
pop
nop
mov
jae
imul
mov
xchg
add
xor
adc
mov
roll
push
pushl
lea
loopne
mov
fadd
clc
cli
adc
jo
sub
sbb
and
dec
mov
add
insb
pop
test
jle
fnsave
cmp
jmp
sbb
mov
xchg
jg
pop
jl
sbb
lret
fistpl
scas
imul
imul
push
add
fildll
mov
xchg
test
pop
clc
inc
jg
popf
es
popf
push
dec
cmpsb
xchg
mov
push
cmp
mov
pop
mov
mov
cs
mov
loope
clc
adc
lret
xlat
sbb
decl
movsl
pop
stos
inc
inc
out
aas
pop
jp
lret
dec
lcall
notl
push
mov
out
mov
adc
inc
loop
pop
cwtl
push
mov
xor
sahf
fistpll
adc
mov
je
ja
adc
imul
pop
xor
mov
mov
cmp
cltd
lahf
cmpsl
popf
push
fnstsw
push
sub
jne,pn
add
sub
shlb
or
cli
sub
jae
adc
in
pop
cmp
out
loop
or
push
imul
rclb
add
sub
adc
fdivrl
mov
pusha
movsb
add
cli
ljmp
popf
or
dec
stos
idivl
daa
mov
xor
inc
mov
jecxz
outsl
lret
scas
push
bound
leave
loope
rcrb
cmp
insb
add
and
or
test
sbb
lds
ja
jne
mov
cmc
dec
pop
popa
cmp
sbb
cmc
mov
shlb
fs
push
notl
cld
das
cltd
jmp
negb
idiv
test
lods
mov
or
into
nop
out
xor
test
mov
push
dec
sub
pushf
mov
jo
sbb
push
imul
or
cmp
decl
arpl
jne
fdivs
ret
std
cmp
add
and
lods
dec
arpl
ja
iret
aaa
ljmp
push
cli
fwait
insb
aas
push
adc
push
jo
aad
jnp
add
cs
jp
mov
dec
xchg
xor
cmp
mov
dec
cmp
clc
fldcw
pop
cmp
cmpsl
mov
pop
mov
cltd
and
sub
cmpsl
call
enter
xor
neg
enter
fs
stos
outsl
xlat
xchg
ss
or
dec
mov
adcl
les
sub
fwait
jl
mov
repnz
xor
pop
cmp
inc
and
mov
dec
lea
push
cmp
test
movsl
test
neg
outsb
mov
jae
imul
add
xchg
inc
pop
subl
cwtl
sbb
movsl
pop
jp
cmpl
mov
xor
cld
sbb
loopne
mov
lcall
bound
shrb
jp
cld
push
rcr
mov
xchg
and
das
cmp
adc
cmp
call
jge
dec
cmpsb
dec
das
push
push
cwtl
imul
xchg
xlat
fisttpl
adc
mov
dec
jbe
adc
cwtl
mov
and
adc
insl
repz
out
nop
jmp
test
jecxz
dec
push
out
mov
clc
inc
lds
add
in
test
daa
cli
xchg
mov
xchg
inc
and
in
ss
jb
repnz
fsubrs
jle
pop
xor
movsb
and
scas
adc
mov
fwait
sbb
pop
cmp
jl
bound
movsl
ret
les
dec
sbb
mov
dec
inc
pop
or
addr16
lea
jp
mov
lret
mov
mov
daa
cmp
iret
lret
pusha
enter
cmp
das
ss
jbe
mov
xor
negb
sub
add
rcl
mov
test
xor
lock
insl
fsts
mov
mov
sbb
inc
jmp
nop
push
fcmovnb
test
inc
push
movsb
mov
pop
into
rcr
cmp
push
sbb
pop
or
push
push
aaa
fwait
push
nop
mov
mov
mov
push
jle
and
or
xchg
push
mov
daa
cmp
fbld
xchg
push
add
xchg
inc
es
mov
cmp
fdivrs
jmp
mov
add
push
daa
jae
hlt
fcomp
lods
pop
ret
sbb
call
push
out
aam
addb
cmovle
cmpsl
mov
pop
insl
adc
adc
test
andb
dec
inc
dec
popf
xchg
cltd
nop
mov
cmp
fwait
add
pushf
js
pop
ss
es
ss
pop
mov
push
sti
sbb
cmp
fxch
daa
adc
mov
push
jns
mov
rcl
call
in
xchg
pop
lahf
cwtl
add
int
xorb
ja
dec
test
push
xchg
jbe
adc
and
outsl
jno
stos
sbb
dec
mov
mov
sbb
mov
aaa
out
pop
push
dec
imul
xlat
aaa
cs
mov
push
inc
insb
imulb
addr16
xor
mov
gs
xchg
rcll
test
mov
mov
mov
sub
push
push
and
dec
stos
dec
or
push
sub
cs
cmp
out
pushf
imul
hlt
push
ja
pusha
fcmovnbe
aam
arpl
iret
or
pop
add
fmuls
lea
insl
pop
pop
jle
lods
pop
add
leave
cs
into
mov
test
push
lcall
mov
or
cmp
bound
pushf
loop
sub
movsl
push
cs
addr16
and
xchg
fst
and
insl
nop
enter
filds
sub
inc
pop
and
xchg
mov
rcrl
cmp
jg
cld
std
out
jmp
loopne
ds
push
notb
or
into
jle
cmpsb
mov
jns
mov
subb
lods
cli
sarl
mov
test
push
push
dec
push
stos
addr16
mov
push
sub
cld
lea
and
cltd
mov
outsb
xchg
sub
sahf
mov
jp
insl
mov
imulb
mov
mov
std
into
mov
ja
cmp
cmp
and
aam
push
fsubrl
jae
repnz
and
push
sub
jl
or
outsb
jae
call
loop
mov
mov
lods
xchg
mov
push
or
push
shrb
inc
mov
pop
sar
inc
leave
pop
repnz
daa
shrb
int3
sti
testb
dec
ljmp
aam
in
mov
fsubp
lcall
push
sbb
xor
shlb
and
repnz
addr16
fldt
jp
cltd
xor
mov
cmpsb
das
cmpsl
cmp
jle
jno
sbb
push
or
dec
xchg
subb
push
mov
mov
fbstp
ja
add
ds
mov
loopne
sahf
inc
xor
inc
inc
pop
fdivrl
and
jae
jg
jns
imul
mov
xor
lahf
lret
adc
sbb
lahf
dec
push
test
je
fcomi
xchg
xor
shll
pop
dec
push
sub
clc
jg
andb
and
nop
xchg
fwait
push
sub
ret
mov
fmuls
out
in
shlb
loopne
bswap
push
in
fs
push
xchg
lds
aaa
mov
mov
nop
movsl
out
jb
mov
aaa
and
xor
xchg
pop
push
sub
push
sub
sub
and
mov
dec
fsincos
daa
sbb
sarl
mov
dec
in
push
dec
call
xlat
arpl
or
fwait
insl
sbb
xor
mov
or
sub
sbb
decb
sub
out
or
ljmp
int
aam
cmpsb
mov
lods
addl
sbbb
cs
fsubr
xor
pop
mov
xor
push
push
pusha
cmp
mov
mov
mov
loope
sub
sbb
aad
clc
dec
mov
mov
xor
ret
xor
test
scas
xor
loopne
push
mov
xchg
adc
icebp
inc
das
sub
rolb
enter
inc
arpl
cmpsb
mov
frstor
lock
daa
jge
mov
or
dec
push
fsts
pop
jecxz
flds
sub
inc
push
pop
inc
jnp
jecxz
mov
push
sub
sub
daa
push
mov
rcl
pusha
mov
not
dec
adc
sbb
xchg
clc
and
push
xchg
dec
mov
mov
dec
in
inc
mov
adcl
test
xor
jne
movsb
in
ret
lret
mov
adc
add
orb
cmpsl
mov
inc
and
test
loope
xchg
lods
notb
popf
cmp
cmp
inc
adc
mov
pop
push
adc
push
add
pop
dec
dec
arpl
imul
push
xor
fsts
xchg
sub
repz
mov
stos
and
stos
mov
test
adc
cltd
fisttpl
jb
or
push
sub
cmc
popa
add
inc
inc
xlat
adc
mov
jmp
ss
pop
scas
addb
adc
add
jmp
in
jp
sbb
add
lock
mov
adc
in
dec
mov
push
iret
xlat
jns
add
test
stos
aaa
out
into
sub
lahf
sub
sbb
jle
outsb
in
mov
push
jne
xchg
mov
fbstp
jns
lcall
adc
repnz
jno
js
jae
jl
adc
stos
movhps
inc
js
push
fildl
mov
add
adc
popf
pop
mov
mov
pop
fcmovb
mov
ret
adc
nop
mov
dec
jnp
push
repz
mov
pushf
add
jno
mov
xlat
inc
push
dec
mov
sub
push
incb
sahf
enter
outsl
addb
and
mov
shll
mov
push
sbb
sbb
fbld
xor
cmp
imul
pop
ficoms
cmp
fimuls
imul
pop
inc
iret
mov
rcr
mov
jecxz
dec
and
mov
sbb
popf
and
imul
aam
fs
es
mov
leave
out
paddusb
fs
mov
inc
popf
addb
out
andl
jno
cmpsl
jl
flds
inc
pop
call
in
push
cmpsb
jg
rorl
inc
sub
sub
es
fcomps
sbb
nop
cmpsl
imulb
mov
xor
fdivp
pop
and
jp
mov
nop
mov
push
cmp
dec
mov
stos
sub
stos
dec
push
pop
inc
mov
call
mov
out
in
mov
stos
mov
push
inc
imul
sub
repz
inc
push
nop
adc
xchg
out
adc
lret
cmpsl
jmp
sbb
cmpsl
gs
fistps
or
aas
movsl
mov
cwtl
imul
xor
inc
cmp
adc
jmp
loop
xchg
pop
xchg
fnsave
sbb
mov
xchg
in
mov
dec
loop
xchg
outsb
arpl
movsl
pop
jecxz
mov
imul
addr16
into
insb
pop
lcall
sub
aad
xchg
fdivr
test
sub
push
fistps
out
loope
dec
push
push
rep
fwait
add
mov
cmp
sub
jo
and
inc
ljmp
aaa
mov
pop
push
and
push
adcb
ret
mov
aam
dec
push
adc
aam
sub
stc
ss
popf
lock
aas
push
mov
and
adc
xlat
int3
xchg
stos
in
gs
daa
mov
lods
pushf
lods
ret
scas
pop
mulb
and
js
fiaddl
notrack
or
fwait
mov
shll
out
jg
or
jecxz
das
inc
lods
daa
mov
inc
ret
sbb
inc
xchg
rcrl
dec
nop
test
jecxz
lods
mov
in
and
cwtl
mov
and
pop
stos
inc
mov
repnz
cmpsl
and
mov
mov
notl
arpl
sbb
sbb
stos
shlb
mov
mov
stos
or
mov
mov
push
out
inc
inc
testl
lds
xor
fildll
lock
inc
out
outsb
push
pop
mov
ljmp
jbe
pushf
xchg
mov
mov
dec
mov
sbb
inc
shlb
adc
xlat
lds
jecxz
subl
inc
mov
and
push
mov
jb
scas
mov
and
repz
out
push
mov
mov
fiaddl
cmp
mov
or
pop
pop
stc
shll
repnz
push
adc
add
cwtl
test
adc
jno
adc
xor
addl
mov
jp,pn
mov
imul
aam
outsb
xchg
cmp
aas
addr16
xchg
mov
out
neg
stc
cmp
push
daa
js
add
pop
insb
mov
or
add
je
daa
aad
pop
mov
sbb
test
movsl
push
xlat
test
andl
addl
push
pushf
insl
jecxz
sbb
mov
and
rolb
gs
into
mov
shll
inc
sti
addb
sub
ds
add
xor
pop
cmp
sahf
fimull
in
rcll
lea
add
jmp
scas
jbe
mov
outsb
jl
xchg
adc
mov
and
push
jb
shl
fs
inc
imul
andb
lods
or
scas
sub
ret
or
jb
dec
ds
mov
out
dec
xchg
mov
pushl
pop
sbb
mov
cwtl
aam
ljmp
psubq
mov
lahf
out
xchg
inc
pop
dec
loope
ret
add
rol
add
mov
out
out
jg
add
xchg
xor
jl
pop
clc
cmc
xorl
pop
push
pop
xorb
jb
lea
mov
add
inc
sbb
push
xchg
pushf
and
jae
jno,pt
sar
ret
aam
enter
dec
das
imul
inc
jle
lods
jmp
cwtl
hlt
add
inc
outsl
mov
push
and
mov
sti
push
xor
pop
adc
and
mov
add
xchg
mov
repz
stos
lret
out
jo
mov
mov
out
jg
ret
or
leave
or
fstpt
loope
push
mov
out
adc
mov
jo
aam
ss
sahf
lret
inc
pushf
lret
and
rolb
or
wrmsr
icebp
shld
aam
mov
aad
cmpsl
cwtl
inc
sub
adc
lcall
out
sub
imul
push
test
mov
popf
sbb
mov
sti
add
paddusb
dec
into
and
add
in
stos
add
push
add
popa
mov
hlt
in
ss
cmpsl
add
xor
bound
add
push
hlt
inc
lds
push
js
mov
dec
sub
les
test
dec
ror
call
xchg
repz
pop
xchg
cli
mov
leave
int3
adc
push
xor
cmpsl
rcrb
push
lock
sahf
scas
cwtl
ret
sub
loop
fisubs
gs
jl
mov
ss
mov
mov
insl
push
pushf
idivb
pop
movsl
shlb
inc
jo
pop
xchg
movsb
inc
daa
mov
push
data16
std
in
divb
pop
loop
je
nop
xchg
cs
into
ret
mov
in
mov
gs
mov
pop
aaa
cs
pop
aas
adc
mov
inc
pop
lret
shlb
bound
mov
stos
dec
mov
pop
inc
test
in
xchg
push
xor
jp
int3
mov
out
test
mov
ja
es
aam
test
inc
lods
aas
sbb
out
push
xor
mov
or
insb
adc
add
mov
shlb
sbb
mov
out
xchg
sub
mov
ret
jb
mov
jbe
add
jne
ror
xchg
inc
or
or
and
scas
aad
mov
cmp
or
push
mov
repnz
ljmp
cmp
pushf
mov
bound
adc
negb
lods
push
push
mov
jns
mull
iret
ficoms
mov
cmpsb
ficoml
adc
mov
pop
cwtl
sub
mov
sub
or
add
scas
movsb
fldt
inc
sbb
sub
jne
lds
inc
fs
jmp
je
dec
mov
dec
sub
roll
clc
in
push
jl
pop
lock
mov
xchg
push
orl
stc
push
dec
outsb
cmp
jbe
sub
add
or
outsb
sahf
inc
cld
int3
pop
call
xchg
xchg
or
int
es
cmp
push
or
scas
dec
sbb
mov
add
mov
pusha
lahf
pop
adc
arpl
sbb
insb
loopne
mov
inc
pop
in
jbe
xchg
sbb
loope
and
push
scas
inc
adc
fwait
lods
mov
enter
icebp
mov
sub
test
and
roll
sub
outsl
cmpsl
sarl
xchg
or
enter
out
cmp
bnd
cwtl
xor
mov
notb
loop
out
hlt
jo
jns
sub
nop
sub
xchg
loopne
fst
notl
mov
divl
mov
mulb
daa
leave
cmpsb
xor
xchg
lods
loop
xor
iret
jmp
lret
mov
test
loopne
insl
insb
adc
jae
mov
jns
jge
xor
popf
add
stos
mov
jne
sub
mov
push
xchg
lods
xchg
les
arpl
dec
in
xor
mov
mov
or
xor
jns
imul
ljmp
mov
les
xchg
push
lods
push
xchg
ja
push
mov
push
mov
sub
mov
jecxz
and
into
adc
or
out
into
fucomi
ss
mov
adcl
aam
arpl
xor
mov
xor
repz
jecxz
or
and
mov
jg
or
loopne
cmp
jo
pop
popa
dec
std
scas
out
jne
mov
mov
inc
test
or
and
cmp
mov
xlat
push
outsb
push
pusha
push
mov
cwtl
leave
stc
add
in
adc
push
push
int3
es
xchg
dec
out
insl
xchg
rolb
adc
mov
mov
pop
push
xor
shrl
adc
data16
popl
icebp
mov
sti
pop
push
insl
sub
fsubs
adc
hlt
rclb
rclb
leave
out
inc
mov
imul
dec
cli
and
cmp
jae
daa
dec
bound
dec
or
std
ret
mov
cmc
and
popf
pop
lahf
add
out
es
jbe
sbb
xchg
jo
xchg
xlat
andb
idiv
cld
int
fsubs
fiadds
push
test
cmp
sbbb
push
jnp
push
test
cmp
sub
hlt
movb
pop
movsb
test
or
es
imul
je
ds
pop
push
scas
adc
pop
les
sbb
rcrl
icebp
test
stos
push
cli
dec
popf
cmp
dec
loopne
repz
lock
push
hlt
jns
hlt
icebp
mov
mov
mov
pop
fwait
inc
test
sbbl
mul
inc
mov
aaa
dec
rorb
outsl
call
add
xor
xchg
cmp
rorb
xor
pushf
mov
sub
bound
scas
jecxz
push
lret
cmc
repnz
mov
inc
push
scas
stos
gs
jns
mov
and
sub
add
push
sbb
xchg
iret
mov
hlt
or
xor
scas
xchg
cmp
cli
daa
test
inc
jp
leave
sti
or
mov
mov
add
or
pop
fsubl
ja
pop
and
movsb
and
pop
fidivrl
mov
pushf
scas
call
jne
push
xlat
dec
mov
lods
insb
push
mov
outsb
mov
adc
mov
push
into
test
adc
xchg
dec
jle
mov
loop
scas
jmp
push
mov
adc
push
scas
scas
les
bound
inc
lret
inc
out
lods
mov
jecxz
jp
or
jg
fcmovu
sbb
mov
ja
in
cwtl
bound
pcmpeqd
ljmp
frstor
jmp
pop
imul
stos
bnd
daa
in
movsb
insl
inc
sbb
jle
pop
dec
mov
mov
xor
pop
add
les
js
cmp
xchg
mov
sub
nop
and
adc
jae
outsl
out
mov
std
push
lret
pop
fcompl
notl
dec
sbb
pop
movsl
push
jle
push
mov
push
pop
iret
xor
es
clc
rol
mov
loopne
adc
cmpsb
mov
ljmp
mov
mov
cli
test
mov
cmp
sbb
loope
adc
leave
xchg
sub
add
lahf
mov
dec
in
xor
xlat
adc
aad
mov
out
push
aaa
int3
mov
xor
into
mov
jge
push
jp
addl
xor
repz
pop
inc
mov
in
push
loopne
repnz
daa
cmpsb
and
cmp
adc
push
je
mov
xchg
jns
xor
cld
jmp
popa
mov
ja
dec
mov
arpl
stos
xorl
pop
movsb
or
pop
jnp
and
adc
adc
mov
ret
in
xchg
mov
jb
sub
pop
cmp
mov
sub
lret
stc
test
int
mov
xor
movsb
cmp
loop
jae
loopne
out
or
stos
aam
sti
shll
dec
and
inc
add
das
xor
cwtl
test
repz
mov
icebp
jae
mov
xchg
adc
je
push
shr
sub
push
dec
push
loopne
mov
andb
push
loopne
stos
in
rcr
adc
sahf
jae
mov
sub
fwait
jbe
shlb
or
mov
add
or
fcom
lret
push
sbbb
xor
enter
dec
into
stos
in
push
mov
sar
xchg
in
inc
icebp
add
or
pop
out
xchg
mov
xor
xchg
leave
repz
repz
out
mov
add
aas
dec
nop
bound
mov
lret
pusha
sahf
out
shrl
pop
nop
pop
add
rcr
sub
lcall
jnp
mov
jge
insb
popa
cs
adc
mov
jmp
fdivrl
shl
and
cmp
push
dec
push
das
jno
fimull
cs
repnz
leave
sub
mov
pop
rcrl
data16
inc
enter
repnz
xchg
int3
mov
and
jle
cmp
fisttps
mov
shl
shr
pusha
pop
push
hlt
mov
add
mov
xchg
in
out
mov
scas
repz
fs
popf
aam
pop
inc
sbb
jbe
iret
rolb
test
push
cmp
insb
adc
xchg
and
cld
add
aad
and
jbe
sub
jmp
or
orb
sub
push
test
sti
lds
mov
fistl
mov
push
call
xor
sub
push
popa
sub
xor
sbb
fistpll
dec
cwtl
dec
adc
ja
sbb
jge
pop
dec
repz
xchg
in
mov
sub
jge
lret
push
push
aas
xor
and
pop
or
dec
aad
jns
cmc
movsl
inc
xchg
lods
xor
xchg
arpl
mov
and
and
and
dec
call
pushf
pop
lods
lret
lods
mov
sub
add
xchg
mov
test
sub
fiadds
les
outsb
jle
div
icebp
cli
push
ret
xchg
loop
btrl
test
xchg
shll
out
pop
adc
movsl
push
in
xchg
jae
lahf
mov
pushf
dec
mov
and
mov
mov
or
loope
cld
mov
pop
xor
sub
shl
push
ficomps
fmuls
mov
lret
test
mov
mov
fdivl
xchg
fs
lods
and
fisubl
sub
adc
xor
jae
xchg
stos
insl
lods
in
int3
pushf
loope
bound
addl
mov
test
push
adc
shll
xchg
jp
pop
loop
inc
xlat
lret
dec
sar
js
xor
gs
mov
repz
pop
dec
mov
shlb
and
xor
adcb
push
xchg
or
dec
test
mov
sbb
cltd
sub
dec
and
int3
ljmp
pop
mov
gs
dec
out
jp
cmpsb
xor
sub
adc
movsb
pop
mov
xchg
pop
loopne
jo
test
fmul
test
mov
in
arpl
mov
pop
jge
add
pop
inc
mov
mov
pop
repz
fildll
out
ss
lea
push
mov
xor
movsl
pop
push
mov
in
test
jmp
jecxz
mov
mov
add
add
lds
testb
outsb
nop
dec
push
cwtl
notl
push
sub
lcall
xor
fnsave
cmp
cmp
dec
in
or
push
adc
mov
xchg
int3
add
cmp
rorb
iret
jno
inc
sahf
mov
jne
fildll
inc
jnp
pusha
add
mov
adc
ret
mov
pushf
dec
push
mov
lods
mov
jbe
xchg
cmp
inc
jle
adc
add
mov
popf
stc
mov
dec
or
cmp
divl
pop
movb
jae
in
into
adc
fdivr
jl
mov
sbbl
jmp
fimull
mov
pop
js
jne
mov
sbb
addr16
xchg
shl
test
adc
sub
scas
lock
pop
adc
in
in
adc
popf
xchg
lret
or
repz
jo
lock
data16
sar
push
sub
mov
mov
cli
testl
fstps
xchg
movsb
lahf
in
or
ds
std
dec
jo
push
push
in
jbe
add
insl
data16
push
rcrl
mov
ja
or
push
in
insb
mov
bound
rcl
dec
inc
movsl
inc
lods
mov
push
in
incl
jns
jnp
push
jno
das
in
hlt
jle
mov
cmpsl
push
mov
lock
enter
xchg
xchg
lret
stc
addb
push
in
add
add
mov
inc
jbe
gs
and
lret
in
sub
mov
and
mov
pop
mov
arpl
movsl
xor
ja
mov
adc
lock
push
dec
inc
inc
insl
movsl
or
movsl
xlat
imull
scas
pop
xchg
xchg
add
xchg
lods
cs
sub
iret
push
xchg
data16
js
aaa
push
les
cmp
clc
and
mov
je
mov
stc
adc
pop
mov
sub
stc
cld
xchg
cwtl
shrb
je
roll
cmp
mov
jg
sub
adc
add
pop
xor
xlat
xor
and
cmpsb
mov
popf
xchg
pop
sub
fstpt
fldl
pop
sti
push
aam
dec
lahf
shrb
fwait
shrb
adc
sbb
rol
add
iret
jecxz
ret
ret
dec
jne
test
ljmp
in
out
or
pop
cmpsl
repnz
pop
push
mov
in
in
test
in
leave
mov
adc
add
out
imul
pop
or
outsb
jmp
icebp
scas
pop
mov
push
inc
pop
pop
fisttpll
sbb
jb
sub
clc
ret
jnp
inc
push
pop
adc
mov
adc
sbbb
jg
stos
or
fs
mov
mov
mov
push
cmp
xchg
mov
push
xchg
inc
pop
dec
cltd
fiadds
push
xchg
test
cmp
scas
xchg
xor
stc
shll
pop
pop
je
or
rclb
ss
push
pop
sahf
inc
addb
je
test
leave
cmp
loopne
ret
mov
inc
hlt
fcoml
and
mov
push
cmc
stc
dec
je
jno
or
movsl
xchg
adc
lods
out
push
or
stos
inc
push
adc
inc
add
testb
mov
mov
mov
mov
dec
adc
adc
push
and
clc
jo
mov
xchg
add
mov
inc
pop
mov
pop
xor
dec
jmp
jle
out
pop
and
jne
inc
inc
int3
les
add
jmp
and
jno
es
orb
cwtl
fwait
pop
arpl
dec
mov
xor
ret
aaa
movl
jo
pusha
jne
sbb
in
xor
jg
addr16
mov
mov
mov
loope
sbb
mov
sbb
mov
repz
inc
mov
xchg
mov
xchg
dec
hlt
or
or
jae
xchg
cmpsb
shrl
inc
lret
loopne
out
sbb
jp
pusha
ss
and
int
sbb
or
sbb
roll
pop
fcoml
push
hlt
aad
test
clc
and
movsb
dec
push
mov
sub
int3
and
lcall
inc
jnp
adc
jae
and
adc
pop
dec
jmp
xchg
lahf
xchg
jl
xor
aam
jmp
std
mov
mov
scas
stos
arpl
out
fnstcw
push
dec
call
cmp
pop
roll
aaa
bnd
bnd
xchg
fs
arpl
dec
pop
xchg
imul
jle
pushf
negl
push
or
jb
mov
jle
repnz
stc
arpl
sti
mov
jmp
adcb
xchg
iret
adc
sbb
test
cmp
mov
pop
outsl
popf
adc
in
aad
cli
or
fsubs
scas
adc
add
mov
mov
into
icebp
out
push
lcall
and
xchg
subl
push
outsb
push
arpl
mov
push
mov
pushf
stos
pop
rcll
cmp
out
jecxz
bswap
jmp
xor
cld
outsb
adc
call
leave
call
jo
adc
mov
pop
dec
pushf
out
dec
daa
mov
popf
sbb
inc
add
cmp
in
int3
adc
inc
cmpsl
mov
testl
pushf
mov
add
lods
lds
out
add
mov
cli
add
xchg
adc
imul
sub
xor
push
xorl
idivb
jp
adc
nop
jns
cld
stc
pop
cmp
pushl
cmp
inc
js
push
pop
sub
mov
test
movsl
mov
popf
test
out
push
cwtl
mov
shlb
clc
sbb
push
pop
and
or
mov
and
cwtl
out
xchg
cmp
pop
out
or
xchg
pop
jl
jecxz
test
jae
sub
push
add
scas
negb
lcall
pop
aad
aad
mov
jg
jecxz
cld
repz
pop
xor
les
mov
int3
adc
and
pop
scas
sbb
repz
ret
add
or
popl
call
rorl
adc
and
mov
push
push
pusha
or
pop
aas
mov
enter
lahf
js
pop
push
dec
push
mov
jecxz
std
cmc
jns
pop
sub
mov
xor
fldenv
cltd
andb
dec
movsb
pop
mov
loope
add
cld
xchg
mov
scas
jo
lcall
iret
dec
movsb
jecxz
xor
pop
fiaddl
adc
ds
dec
push
sbbl
data16
mov
int
pushf
jo
push
mov
or
repnz
pop
imul
sbb
outsb
hlt
rcl
leave
cmp
int3
or
stc
stc
int3
and
outsb
sarb
mov
push
jno
jne
adc
lret
aad
or
mov
imul
sub
mov
sub
pop
cmc
jb
lds
fistps
incl
in
cmp
and
push
loopne
outsb
imul
pop
adc
rcr
mov
dec
pusha
imul
mov
dec
insl
imul
clc
lock
xchg
mov
pushf
and
enter
je
idivb
pop
int
js
cmp
mov
ret
mov
ficomps
adc
cmp
mov
jne
adc
sub
rcrb
cmpsb
xorb
jns
jmp
xchg
bound
mov
jp
sbb
lods
popa
loop
inc
cld
lret
std
scas
dec
arpl
mov
jb
les
fs
js
fwait
and
sbb
cmp
std
jne
cmp
fnstcw
xlat
push
jl
test
mov
inc
add
adc
into
sbb
mov
ds
add
int3
stos
sahf
cmpsb
push
adc
fdivr
ljmp
and
adc
movsl
orl
inc
movb
std
shll
ds
pop
xchg
out
mov
scas
sbb
mov
mov
out
mov
push
dec
cmp
out
xchg
call
mov
dec
es
cwtl
push
dec
pop
das
or
adc
aaa
negb
popf
popa
sub
cmp
push
movups
daa
push
push
dec
stos
cmovno
jg
push
jecxz
mov
xor
adc
cmp
xchg
cmp
aas
jmp
mov
test
xchg
loop
mov
jns
xchg
mov
cmp
lock
jp
bound
dec
leave
movsl
fs
outsb
dec
sub
popa
pop
lods
les
repnz
mov
add
pusha
or
movsl
in
out
loopne,pn
mov
or
adc
in
out
stos
lock
pop
movsl
out
push
shlb
subb
cmp
sahf
popl
push
dec
es
ret
or
insb
xor
popf
adc
inc
stos
in
inc
ja
mov
sbb
scas
xchg
mov
adc
leave
adc
std
sub
pop
pop
out
jmp
jae
lret
push
pop
ret
sbb
add
add
sahf
adc
fcmovb
mov
mov
sbb
aas
ja
dec
enter
inc
lds
or
mov
enter
adc
out
stos
inc
es
and
cmp
and
inc
add
push
inc
inc
scas
in
scas
cmp
inc
push
ss
or
sbb
pop
mov
mov
je
daa
inc
mov
addl
lcall
outsb
cmpsl
xchg
xor
pop
sub
mov
xlat
sbb
jg
leave
inc
orb
divl
loopne
jge
cmc
mov
dec
xlat
adc
jle
sub
movsb
cmpsb
xor
adc
fbstp
idiv
js
jns
lcall
mov
mov
cmp
mov
or
test
push
movswl
sbb
cmpsb
xchg
push
mov
cmp
jns
add
mov
add
pusha
divb
jne
in
mov
sti
add
and
inc
pop
ficompl
sahf
mov
ljmp
loope
pop
inc
pop
mov
push
push
flds
pop
jmp
cs
js
paddusw
xor
popa
pop
mov
pop
xor
fdivrp
aaa
pop
cltd
adc
inc
mov
inc
fstp
jg
cmovo
mov
sub
ljmp
stos
loopne
mov
ret
push
cmp
dec
and
cmp
aas
sarb
rcrl
and
add
mov
leave
inc
aad
adc
push
iret
dec
mov
sub
popf
mov
sbb
imul
push
ljmp
add
mov
and
and
jae
push
xchg
sbb
out
pop
or
xchg
cmp
or
pop
lds
iret
pop
pusha
jns
aam
ss
ljmp
jmp
ja
sti
xlat
rol
sbb
shlb
cmp
lret
mov
cwtl
xchg
ficoml
lods
dec
xlat
fiaddl
sbb
add
enter
arpl
add
imul
jnp
mov
enter
adc
adc
lds
xchg
pop
lods
imul
mov
xor
jmp
sbb
mov
mov
mov
jae
roll
fiadds
push
das
jb
add
lea
das
fwait
sbb
repnz
pop
sahf
adc
inc
mov
mov
cmpsl
mov
sub
mov
leave
out
sbb
or
sbb
and
bound
inc
xchg
daa
retw
sarl
adc
push
popa
subl
and
cld
out
mov
push
fisttpl
adc
push
jg
push
sbb
dec
mov
mov
shrl
lds
sbb
mov
mov
sub
or
inc
mov
cmp
pop
adc
insl
and
inc
dec
add
out
jl
xchg
mov
mov
jl
lret
lahf
mov
add
insb
dec
sub
loop
shrb
hlt
je
cmpsl
popf
pop
add
push
pop
jb
shlb
movsl
sbb
xlat
std
movsb
imul
jbe
leave
or
jns
xchg
insb
xchg
sub
sbb
icebp
test
shl
stc
sub
xchg
sahf
test
mov
mov
cmp
jg
cmp
pop
jg
or
xchg
std
add
dec
mov
sub
add
jae
push
adc
aam
std
ja
test
inc
pop
packuswb
xor
int
aad
inc
mov
push
movsl
jge
add
dec
mov
cmp
test
sbb
ret
jnp
sbb
test
pushf
xchg
stc
mov
xor
push
iret
stos
aas
pop
rcrl
sub
fadd
xor
lahf
adc
movl
ficompl
scas
js
mov
pop
xchg
enter
mov
xor
faddl
daa
cmpsl
sbb
push
rcrl
push
testl
pop
fstpt
jge
or
js
jecxz
or
jbe
insl
std
xor
mov
cmpsb
add
int
add
jne
lahf
sbb
sub
cmc
movsb
daa
xchg
mov
lret
adc
scas
cli
mov
mov
mov
sbb
cmpsl
cwtl
iret
add
xor
lahf
xlat
lea
ret
push
jnp
cmp
pop
push
mov
dec
adc
pop
jmp
dec
add
inc
std
stos
sub
lea
pop
cmp
mov
mov
sbb
adcl
dec
add
divl
imul
push
mov
mov
mov
mov
sahf
dec
xor
shr
fucom
jle
jno
dec
xchg
inc
pop
mov
mov
adc
jns
sbb
cmp
sub
int3
jns
ss
pop
lock
jecxz
fidivrs
fsts
push
aam
cmpsb
sbb
ret
add
inc
ds
pop
fwait
jae
xlat
mov
inc
xor
mov
cmpsb
xchg
sbb
pop
sbb
sbb
push
sbb
push
gs
call
mov
lcall
inc
push
daa
sub
xchg
xchg
in
jge
pop
fucomp
xor
loop
cmpsl
pop
orl
add
and
bound
insl
outsl
rolb
push
jle
mov
push
test
pop
sub
fs
fidivl
xchg
jns
pop
sub
les
mov
lods
and
xchg
xchg
scas
push
outsl
insb
stos
fdivrs
jno
inc
cwtl
pushw
call
repz
push
scas
inc
shll
inc
imul
and
inc
cmp
sub
enter
push
push
mov
lock
inc
lods
xchg
pop
scas
pop
mov
scas
test
and
iret
lds
lret
pop
cs
not
movsb
push
sub
jne
repnz
nop
call
inc
mov
movsl
dec
in
lods
leave
int3
cmp
stc
std
adc
test
push
jl
xchg
adc
dec
popf
xchg
shrl
scas
sbb
loopne,pn
shl
int
inc
xchg
lcall
or
sub
stos
xchg
pop
pusha
sub
pop
push
xor
pushw
adcl
nop
push
add
out
nop
or
mov
mov
xor
sarb
pop
clc
push
cwtl
add
push
outsb
and
cld
fldl
lcall
add
jg
xlat
xor
daa
out
cmp
addr16
popa
sub
add
mov
adc
data16
nop
clc
sbb
push
imul
jle
or
adc
pop
ljmp
mov
sarl
sub
jl
lds
dec
and
popf
roll
loopne
xchg
xorb
cmpsl
mov
js
push
and
in
xchg
mov
inc
hlt
lcall
xchg
push
cmp
add
ret
outsb
lea
jns
ficoms
cli
ret
jns
push
xor
pushf
pop
dec
mov
and
repnz
cmp
push
pop
jecxz
xor
adc
push
xchg
scas
sbb
fcomp
test
push
fiaddl
pop
leave
gs
rcrl
out
pushf
fbstp
push
lods
insb
mov
add
inc
mov
outsb
add
jnp
ficompl
mov
xchg
fucomi
pop
out
add
push
lret
ja
test
arpl
inc
in
or
xor
push
push
mov
aad
dec
pop
out
movsl
inc
test
jnp
mov
scas
add
inc
push
sub
ja
jmp
or
into
repz
inc
in
mov
push
sub
lahf
hlt
push
inc
mov
add
sbb
pop
and
call
inc
and
jmp
loope
outsb
out
repnz
repnz
sbb
jne
cwtl
ffreep
lahf
or
jge
xchg
jg
or
cli
push
and
idivb
mov
sub
leave
dec
mov
arpl
outsb
cmp
mov
pop
pop
and
nop
dec
loope
push
sarl
iret
lahf
lock
faddl
push
mov
jmp
mov
rorb
cmpsb
and
jbe
inc
mov
imul
imul
outsb
ficoms
stos
jnp
xor
jg
jl
dec
clc
or
xchg
dec
movsl
fdivr
sub
push
inc
lret
push
push
xor
dec
aad
decl
sub
pop
cmpb
nop
inc
ds
rcrb
add
pop
enter
fwait
mov
arpl
ficomps
push
aad
cmp
dec
cld
rcrl
pusha
test
test
inc
adc
or
add
mov
daa
mov
xchg
adc
jno
mov
push
sbb
rcrb
fwait
jno
pusha
enter
adc
adc
pop
inc
enter
fucomp
out
cmpl
adc
mov
cld
inc
ss
sbb
fdiv
dec
inc
nop
movsb
mov
in
in
mov
sbb
xlat
fwait
pop
sub
mov
mov
inc
cmpxchg
imul
inc
cmp
mov
push
inc
shll
xor
out
xchg
inc
sti
fldenv
insb
and
add
lods
xchg
adc
cmpsl
je
pop
and
or
pop
cli
or
push
lret
shll
nop
aaa
jo
gs
adc
add
aad
lea
dec
or
inc
test
mov
fadds
sahf
add
and
cmp
jecxz
mov
stc
ficoms
pop
push
ret
fsubs
jno
cwtl
loop
adc
aas
rclb
xor
mov
sub
insl
sbb
sbb
shrl
js
outsb
push
inc
fisttps
js
jo
dec
dec
push
data16
mov
aaa
and
jne
out
mov
addr16
pusha
sub
fmull
lret
and
int3
push
cmp
jae
lret
or
dec
loopne
clc
repnz
rorb
xchg
push
jnp
mov
sub
xor
sub
pop
shl
pop
loope
cmc
adc
ret
cmp
jbe
fwait
pop
sub
lea
cmp
data16
scas
push
std
ljmp
mov
pop
aas
jp
hlt
nop
push
mov
leave
int
mov
fildll
inc
aaa
repz
sbb
mov
jecxz
daa
push
pop
add
cmp
loopne
and
addl
sbb
or
arpl
and
mul
pop
hlt
mov
cmp
popa
aaa
adc
outsl
mov
ss
sbb
and
rcrl
inc
adc
subl
cs
das
lods
and
fcmovu
push
sbb
clc
std
inc
jb
fisttpll
and
hlt
jno
hlt
addr16
hlt
push
add
lcall
jno
fisubl
cwtl
dec
ljmp
jecxz
dec
jecxz
push
dec
mov
add
mov
in
fs
stc
dec
lret
cltd
jp
fisttpll
lret
push
arpl
mov
jmp
xor
test
push
dec
in
les
mov
lcall
iret
das
adc
cli
xchg
cmp
aaa
outsl
sbb
je
les
mov
clc
inc
outsl
pop
pop
and
adc
adc
rcrb
stc
or
pop
fists
insl
inc
std
pop
inc
inc
in
fcompl
das
xor
or
andb
shlb
js
push
jb
inc
jns
push
xor
cmpsl
cmp
stc
outsb
sub
xchg
movsb
mov
xchg
sbb
in
mov
push
mov
stos
lahf
jle
test
xlat
out
push
std
and
jo
jg
push
rolb
push
sub
mov
cld
daa
mov
push
push
in
mov
pop
ret
sbb
popf
icebp
pusha
xchg
in
mov
mov
push
xchg
std
test
or
fwait
push
fcom
jge
popf
sti
jnp
pop
or
adc
daa
punpckhbw
out
cmp
popf
pop
sbb
xchg
sub
inc
mov
mov
dec
push
decl
rorl
movsb
xchg
rcl
and
cmp
mov
push
fucomp
and
push
adc
inc
xorl
cld
test
sub
test
adc
shl
popl
lret
pop
and
mov
xchg
loopne
in
rclb
int
mov
enter
push
bound
decb
mov
push
dec
pop
or
dec
insl
and
pop
in
aad
sbb
jmp
cmpsb
mov
ret
mov
mov
mov
dec
push
adc
xchg
mov
lock
test
lds
cmp
add
jle
leave
fldcw
push
push
loopne
xchg
pop
mov
add
adc
and
fcoms
mov
fnstsw
mov
shlb
loope
sbb
cwtl
mov
int
and
mov
push
jmp
xchg
mov
add
inc
call
jmp
add
dec
fisttpll
cmpsl
cld
push
cltd
scas
out
mov
rcll
xchg
out
push
adc
sti
fisubs
jno
jno
popf
lds
and
rol
jns
ljmp
inc
stos
xor
int3
jg
adc
fst
out
cmp
push
push
adc
psllq
fisubrl
int
lret
rcrl
mov
aas
int3
hlt
aaa
scas
jge
cmpsl
or
cmp
xor
sti
mov
call
or
lds
sub
inc
into
jmp
push
jne
push
imul
push
test
and
out
adc
loop
sti
lcall
sbb
repz
xchg
out
aad
inc
pop
cmp
loop
loope
ljmp
cmpsb
push
push
shl
fiaddl
imul
mov
das
push
cmp
dec
jge
and
fstpl
cmp
shrb
lcall
push
adc
addb
and
das
mov
cmpb
add
xchg
cmp
jnp
push
dec
jge
sti
xchg
repnz
inc
out
xor
popf
or
xchg
add
lock
int
and
call
or
or
and
add
loope
push
push
jbe
jnp
add
bound
adc
adc
outsl
inc
pusha
xor
mov
outsl
mov
or
int3
in
js
jae
int
push
les
xchg
dec
mov
test
mov
push
leavew
inc
stos
stc
in
cmp
mov
jne
notl
add
adc
jmp
sub
cmpsl
subb
mov
icebp
inc
mov
in
leave
sub
xor
mov
loop
roll
test
lcall
fs
sub
sub
call
out
jge
or
call
loope
mov
ja
fldl
popf
js
adc
rcll
inc
addl
adc
jg
inc
scas
ds
lea
and
xor
add
pusha
aas
xor
addr16
xchg
cmpsl
aam
test
fldcw
idivl
mov
mov
sbb
mov
js
cmp
xor
xchg
lcall
shlb
inc
mov
mov
lret
push
into
xor
arpl
into
loopne
and
pop
add
cmpsb
ds
cmpsl
iret
out
shrl
xor
jnp
icebp
shr
movsb
jb
jle
push
xor
jb
or
mov
ss
xchg
xor
xor
pop
xchg
mov
dec
call
rol
sub
dec
mov
nop
neg
xchg
adc
in
push
mov
or
mov
xlat
lret
add
mov
movsb
lods
cmp
mov
out
inc
iret
aad
int
xor
cmpsl
cmp
imul
movl
dec
mov
xchg
mov
dec
loop
cmp
mov
xor
jp
jnp
mov
sub
and
adc
jmp
mov
cmpsl
add
clc
pop
dec
dec
mov
movsb
mov
cs
fnsave
push
out
into
push
add
adc
iret
mov
adc
addl
mov
sbb
add
icebp
mov
leave
mov
cmpb
jo
mov
xchg
mov
mov
dec
imul
test
sbb
push
inc
jo
inc
sar
and
lret
inc
fcomps
dec
or
mov
shl
rcrb
movsl
ficoml
jg
js
sarb
fucomip
adc
jl
imul
push
push
or
pop
or
rcr
in
rcr
loopne
stos
in
jb
push
fnstenv
sar
add
xor
push
mov
jb
dec
xchg
loope
cmp
xchg
out
and
push
xchg
cltd
pop
sub
test
cmpsb
and
adc
bound
jle
add
dec
xor
loope
or
outsb
push
mov
bound
cmp
mov
shrl
inc
fiadds
call
lods
xchg
sbb
cwtl
jb
repnz
loope
lret
daa
aam
jl
inc
repnz
or
rorb
dec
rolb
aad
mov
jns
add
adc
mov
cmp
mov
rclb
dec
cmpsb
out
mov
lret
or
sub
pop
divl
push
jle
pmaxsw
in
dec
pop
iret
pop
or
xchg
mov
lea
fcmovbe
xor
loop,pn
insb
inc
pop
ss
subl
inc
push
iret
and
push
cltd
dec
dec
xor
loop
jecxz
testl
or
mov
push
popf
das
mov
or
lcall
mov
adc
mov
fstpt
imul
add
ss
dec
mov
pop
popa
push
push
gs
push
mov
int3
lods
cmp
scas
cld
sbb
fmul
loop
scas
out
bound
das
and
aas
aas
jnp
sbb
add
movsb
stos
dec
jp
stos
scas
imul
cmp
cmp
dec
xchg
outsb
cwtl
movsl
jl
pusha
ror
jno
mov
imul
add
dec
sbbl
addr16
mov
dec
out
jns
push
xor
mov
addl
je
sub
sub
adc
outsl
push
or
sub
mov
pop
in
jecxz
outsb
sbb
inc
pusha
repnz
add
sbb
dec
test
sub
mov
xorl
jae
add
mov
sbb
loopne
cmpsb
push
mov
ret
pop
xor
push
idivl
shll
mov
mov
in
push
shl
sti
pop
pop
std
push
add
fwait
sub
push
mov
mov
aam
fwait
push
xorl
xor
xor
lahf
lock
in
pop
je
fs
fnstenv
xchg
jge
sub
scas
or
pop
aad
inc
sub
rcrl
mov
jbe
xchg
rcr
xchg
popf
mov
xchg
popa
xchg
in
mov
aad
test
lods
nop
cmpsl
fstp
mov
roll
das
sbb
dec
movsb
mov
push
push
daa
fcom
sub
xchg
test
cs
xor
lods
bound
pop
in
popa
jp
inc
cmc
push
out
das
or
out
shlb
cmc
popf
inc
push
int3
in
mov
jno
leave
jmp
insl
cmp
adc
mov
test
aas
and
adc
outsl
adc
sub
icebp
lds
std
sbb
mov
icebp
movsb
push
adc
in
mov
mov
dec
add
push
and
aad
inc
mov
scas
clc
jns
cs
scas
stos
incb
lea
shrd
inc
add
mov
lcall
lahf
dec
sbb
mov
jle
orb
and
in
add
fs
dec
jne
int3
mov
loopne
out
icebp
and
aas
mov
js
mov
dec
add
test
test
jle
mov
lds
cmp
popf
mov
pop
dec
mov
je
repz
and
sub
jecxz
movsb
sub
fwait
adc
xchg
mov
xor
pop
psllw
jo
lcall
xor
lock
jl
ret
xchg
adc
fcmovne
gs
xor
adc
push
into
clc
out
mov
pop
mov
jg
dec
adc
in
xor
test
aam
mov
jp
dec
jecxz
cmpsl
shll
mov
mov
and
and
lods
das
loope
mov
ljmp
fdivrl
xor
jecxz
aas
sbb
xor
mov
mov
in
js
fnstenv
mov
xchg
rcl
ffreep
mov
mov
fs
lods
das
push
and
inc
rcrb
repz
dec
pop
fwait
xchg
shrl
cmpsb
rep
jmp
xchg
bound
mov
xor
mov
jmp
unpckhps
in
cmp
sbb
inc
addr16
xchg
dec
cmp
lahf
mov
enter
and
mov
out
aad
adc
xchg
add
fwait
pushf
ja
pop
cmp
mov
inc
push
sbb
or
or
subl
push
inc
lds
je
mov
jnp
xchg
or
mov
nop
clc
sbb
iret
cwtl
sbb
mov
aaa
pop
or
lds
or
and
mov
sti
std
loope
sbb
xor
or
jnp
cmp
pop
pop
test
test
daa
pop
mov
fistps
aad
lret
loope
inc
add
sbb
js
jge
imul
mov
inc
dec
icebp
and
scas
inc
jge
push
popa
push
out
cmpsb
bound
jnp
sbb
bound
mov
push
mov
jmp
cmp
stos
not
aas
dec
movsb
sbb
and
add
scas
cs
adc
hlt
cs
lods
pop
xchg
int
pushf
sbb
test
inc
clc
aas
in
es
mov
roll
dec
dec
rcr
lock
movl
mov
int3
xor
cmp
data16
loope
jns
imul
repnz
adc
outsb
stc
add
shl
cltd
xchg
arpl
enter
arpl
cmpsb
ret
cwtl
scas
js
cs
call
outsb
aad
inc
stc
push
pop
jmp
shr
sarl
wbinvd
push
mov
xchg
inc
cmp
mov
notl
ljmp
cmp
cs
aam
add
mov
cmp
incb
insl
lods
scas
fcmovnbe
bound
add
adc
js
mov
sub
cltd
sub
lds
and
pop
sub
aad
movsb
aas
cmc
cwtl
mov
out
iret
xchg
mov
out
push
jo
sub
ret
jg
mov
js
push
mov
xchg
addr16
enter
add
xor
sarb
stos
mov
hlt
push
aad
pop
and
push
mov
inc
adc
mov
jbe
adc
jl
nop
sub
cmp
shll
add
sbb
cmp
cmc
jge
mov
cmp
clc
mov
test
lcall
jecxz
nop
lret
ret
pushf
xchg
sbb
lea
insb
sub
or
jg
les
and
push
or
mov
mov
mov
fwait
dec
fdiv
xor
jo
jp
imul
out
jmp
bound
subb
testl
pop
cmpsl
adcb
pop
add
sbb
in
add
faddl
imul
xor
mov
out
push
fstp
dec
pushf
clc
outsl
div
push
rcrl
sub
sub
xchg
stos
cmp
add
pop
ljmp
and
lock
lods
mov
dec
sub
int3
sbb
fwait
inc
cmp
xorl
outsl
mov
xchg
hlt
or
mov
cli
add
jbe
jbe
cmp
sbb
arpl
je
dec
or
gs
insl
or
jp
call
rorl
dec
dec
xchg
xorb
fidivrs
lahf
fcmovb
push
lock
inc
pop
mov
insl
hlt
andl
arpl
and
pminsw
test
mov
in
vorps
cmpsb
outsl
inc
add
sub
push
xchg
fwait
call
push
jns
add
int3
cmpsb
mov
out
or
jb
sbb
pop
mov
shrl
dec
pusha
or
jmp
cld
popf
add
clc
add
or
mov
or
xor
pusha
icebp
xchg
mov
jno
lret
mov
and
mov
test
cs
mov
adc
cmp
es
roll
repz
sbb
inc
repz
scas
fs
jne
xor
jp
iret
xchg
sub
andb
jne
mov
enter
push
scas
mov
lret
and
push
pop
into
outsl
and
ljmp
cmp
ret
rolb
sub
andl
sub
aaa
jbe
jecxz
mov
popf
pop
mov
jae
jne
sahf
fldcw
inc
stos
or
scas
movb
outsl
jge
vfrczps
sub
lret
int
arpl
pop
and
cld
mov
jmp
inc
repnz
cmc
add
fisttpl
mov
jecxz
push
mov
pop
subb
aam
and
mov
out
mov
xor
aam
aas
mov
sbb
adc
and
mov
mov
aaa
lds
mov
mov
out
imul
add
push
adc
hlt
cmp
mov
out
inc
shl
mov
dec
sbb
adc
insb
mov
into
mov
notb
int3
lahf
mov
mov
hlt
mov
nop
lret
inc
hlt
fidivrs
or
imul
mov
push
push
outsl
jnp
or
cmp
add
jb
lret
or
xor
add
and
sbb
jbe
push
aaa
leave
sahf
xchg
push
js
xchg
aad
sbb
vmread
xor
mov
sub
mov
arpl
xor
inc
jbe
adc
addl
inc
push
in
sbb
push
push
mov
fsubrs
movq
mov
xor
ljmp
dec
mov
sbb
adc
adc
fcmovu
jmp
mov
shlb
or
sbb
xchg
test
fmuls
xorl
mov
pop
cmc
jbe
or
cmc
add
jmp
rorb
inc
test
nop
pop
jbe
je
fs
mov
dec
js
pop
repz
mov
ret
negl
pop
xor
loopne
movsl
repz
test
mov
adc
aam
jmp
movntps
scas
or
stos
or
rcl
mov
sub
push
inc
jbe
lret
mov
and
cs
imul
inc
add
push
mov
adc
lret
imulb
cmp
adc
cmpsl
cltd
mov
mov
shll
fs
xchg
mov
cs
dec
inc
dec
xchg
int
add
scas
repz
xchg
mov
xchg
fimuls
stc
mov
je
cmc
mov
cmp
sbb
sub
sarl
lahf
push
mov
jbe
aaa
adc
movsb
loopne
xchg
inc
and
cmpsb
xor
mov
imul
data16
gs
mov
mov
into
mov
notl
shll
es
pop
xchg
lods
cli
outsl
pop
push
mov
pop
sbb
adc
push
arpl
add
xchg
mov
add
xchg
shrl
or
test
dec
imul
sahf
lcall
sub
ds
imul
add
lea
adc
lock
adc
ror
adc
insb
icebp
cmpsl
mov
push
push
enter
or
push
in
mulb
enter
inc
movsl
cwtl
les
xchg
aad
sbb
mov
loope
movsb
cmp
sbb
movsb
jl
gs
xlat
pop
mov
mov
sub
jmp
jle
jo
jnp
mov
cmpsl
cltd
out
dec
mov
lods
insb
or
outsb
mov
lcall
lds
out
and
sub
mov
lcall
add
jnp
std
roll
lcall
mov
cmpsb
mov
push
cmp
xchg
daa
arpl
aaa
pusha
pop
test
mov
sbb
arpl
mov
fistps
sbb
sub
adc
lcall
stos
icebp
mov
mov
dec
out
repz
mov
bound
lcall
pop
mov
cld
leave
mov
rorl
js
ja
mov
aam
mov
cmc
fists
clc
mov
pushf
cmp
sub
imul
stos
pop
mov
sub
cmp
inc
and
cld
mov
push
mov
in
call
push
aaa
cmp
dec
cmpsb
repz
mov
pop
pushf
ja
inc
and
fcompl
or
push
add
add
movzwl
xor
push
andl
lods
test
xor
mov
or
shrb
sbb
jg
pushf
or
mov
fistpl
push
hlt
push
xor
mov
xchg
push
nop
in
or
or
pop
daa
dec
adc
jmp
movsb
pop
mov
adc
xor
dec
sarl
pusha
inc
subl
sub
lods
fcmove
mov
mov
lcall
sbb
or
cmpsb
xchg
lea
inc
mov
mov
jge
cmc
mov
mov
lock
loopne
push
jp
xor
sbb
shl
add
dec
leave
fwait
lods
push
sbb
adc
xlat
cmp
hlt
inc
loope
mov
lcall
fstl
push
xor
je
lock
sub
jno
mov
mov
add
daa
inc
jmp
sbb
inc
out
jl
jb
repz
jl
and
mov
jg
and
arpl
fdivrl
adc
insl
inc
push
cltd
jne
inc
dec
sbb
sub
sbb
cmp
dec
and
adc
incl
and
or
mov
mov
dec
icebp
adc
sub
lods
add
outsb
add
dec
add
fwait
test
pop
out
mov
shrb
add
mov
das
jnp
repnz
pop
mov
test
sti
sub
out
dec
bound
pop
xor
xchg
add
dec
dec
xor
add
jo
inc
sub
push
dec
pop
push
cmp
add
clc
lret
mov
mov
inc
ss
out
or
mov
je
cmpsl
mov
notl
and
out
cli
sub
cmpsb
enter
push
sti
mov
fsubp
orb
icebp
ss
lret
cltd
out
mov
in
outsb
imul
sbb
outsl
adc
jp
arpl
ror
ja
mov
scas
data16
loop
sub
fidivrs
sbb
ret
stos
mov
sub
imul
cmp
xor
and
inc
sbb
test
sbbb
pop
push
arpl
aaa
loope
prefetch
dec
xchg
fisttps
cmp
add
xchg
sbb
cltd
dec
lcall
cmp
outsb
xchg
cmpsl
dec
cli
xor
sahf
jecxz
adc
cltd
sbb
mov
or
pop
lds
sbb
loopne
push
jns
push
mov
into
fistl
cmp
jp
enter
dec
xor
jl
or
xchg
enter
sbb
cmp
jmp
mov
sbb
pop
pop
add
sbb
scas
push
xor
mov
jl
out
dec
push
imul
push
test
xchg
sub
fidivrs
cmp
dec
xchg
push
imul
das
shrb
les
aad
stos
mov
ljmp
dec
stc
mov
adc
pop
in
cmpsb
jns
fstpl
push
mov
mov
fcoms
jmp
aad
loope
xchg
mov
stos
jmp
jae
lock
enter
xchg
lahf
xchg
xor
mov
cmp
cld
pop
cwtl
cmpsb
mov
das
inc
and
mov
pop
out
imul
fwait
leave
insb
and
stos
decb
sub
xchg
dec
inc
mov
test
test
fdivrs
pop
mov
je
inc
mov
in
mov
cmc
fdivs
lods
add
fidivs
outsl
popa
adc
mov
add
cwtl
mov
mov
push
mov
jecxz
dec
in
lret
fimuls
dec
adc
ljmp
xor
in
mov
mov
je
jnp
movsl
test
adc
fwait
dec
js
test
dec
xor
inc
jmp
ret
jl
daa
loop
call
data16
stc
ret
fcmove
in
gs
push
xlat
in
cld
mov
inc
or
in
std
addl
xchg
cltd
out
push
shll
xchg
lahf
insb
add
push
mov
lcall
lock
add
lahf
push
mov
mov
jo
out
sarb
addr16
xor
push
lods
gs
stos
jecxz
lahf
ljmp
pop
stos
pop
or
push
stos
lods
or
loope
popf
mov
fmulp
sbb
pop
fidivl
pusha
xchg
sbb
jb
mov
and
jge
xor
mov
data16
adc
mov
lahf
add
add
inc
xchg
stos
mov
sahf
mov
jb
cltd
or
es
call
or
lods
push
jnp
pop
pop
aas
pop
leave
clc
xchg
pop
mov
xor
and
mov
and
sbb
popa
mov
imull
adc
push
dec
out
mov
fnstcw
push
xchg
xor
mov
or
cld
in
sbb
adc
imul
sub
movsb
sbb
dec
int
pop
leave
inc
mov
push
jno
sub
or
int
add
shrb
data16
ljmp
jp
shrl
dec
jno
mov
add
adc
pop
cmp
data16
fs
push
out
aas
leave
popf
mov
sbb
mov
pop
jecxz
lods
inc
sti
ja
enter
imul
movsl
icebp
sub
adc
arpl
fisubrs
pop
mov
mull
dec
add
fcoml
movsl
adc
jnp
cli
cltd
popa
test
loope
ja
inc
xor
or
shll
mov
cmp
test
cmp
and
insl
sbb
pusha
and
and
sub
xor
sub
cli
mov
lret
inc
gs
test
lods
or
add
out
fsubs
mov
int
pushf
jmp
mov
fldt
adc
sub
pop
mov
fistl
sbb
jle
shll
movsl
in
int
mov
push
xchg
cwtl
ret
add
test
roll
mov
mov
cmp
dec
dec
mov
pop
ljmp
or
jo
xlat
jb
sub
out
jno
adc
in
jle
int
add
add
pop
movsl
fldl
test
aaa
loope
and
cli
mov
jmp
xchg
test
xchg
add
cmpsb
inc
mov
adcl
mov
pusha
push
mov
sbb
dec
lcall
push
fneni(8087
dec
xor
stos
in
test
ret
in
aad
dec
in
or
mov
insl
xor
mov
push
push
fs
dec
into
in
inc
jbe
out
scas
loope
and
jno
cmp
and
inc
and
or
int
push
mov
aaa
mov
or
or
cmp
sub
in
mov
xchg
mov
fucomp
pop
mov
inc
jmp
loop
adc
mov
mov
cmpsl
xchg
outsl
mov
shlb
add
inc
sub
sub
sub
and
adc
xchg
pop
pop
jno
in
xor
iret
xor
std
sbb
sub
add
cld
mov
daa
fildll
jo
sub
mov
mov
cmp
xchg
mov
cmovle
insl
mov
push
pop
lods
sbb
call
mov
mov
in
adc
out
add
push
in
fdivrs
faddl
inc
xor
push
fs
mov
aam
daa
subl
push
int
and
xchg
or
and
mov
test
mov
or
xrelease
jno
cmp
loopne
inc
hlt
loope,pt
testl
push
pop
int3
jmp
es
inc
xor
pop
pop
call
cmp
lods
inc
jbe
divb
std
cmp
shrb
ja
xchg
pop
hlt
leave
popf
xchg
xor
sar
hlt
add
push
pusha
adc
gs
or
xchg
and
add
shll
sbb
adcl
popf
clc
push
add
rol
push
or
repnz
shrb
cmpsb
sti
dec
rcll
cmc
push
and
jo
bound
push
daa
lea
out
aaa
add
dec
xchg
lahf
push
xor
push
adc
jbe
test
inc
ds
jp
movsb
loop
js
push
xchg
lcall
sub
mov
dec
jne
mov
mov
add
stos
jle
or
ds
xchg
mov
daa
jne
mov
sub
pop
xchg
fistl
int
adc
mov
adc
out
js
xor
sub
and
insl
dec
ror
sbbl
loope
jmp
sarb
repnz
and
xor
or
lods
int3
inc
push
sbb
push
enter
stc
mulb
mov
jecxz
stos
sbb
repnz
mov
adc
lock
mov
inc
std
inc
out
pop
into
push
fs
and
pop
fs
in
jns
jbe
sbb
mov
xchg
std
mov
push
popa
subl
mov
out
mov
imul
test
icebp
imul
je
test
out
repnz
dec
xor
or
out
dec
adc
dec
hlt
cmp
das
pop
push
sbb
leave
push
mov
and
sbb
pop
loopne
lahf
push
test
les
adc
mov
push
aaa
jecxz
jno
add
xchg
mov
mov
cmpsl
out
dec
fnsave
dec
pop
inc
push
jb
pop
and
movsb
cmp
repz
cmpl
daa
jmp
add
add
mov
and
sub
xor
in
hlt
adc
out
push
adc
xchg
imul
pop
jmp
add
mov
push
and
or
push
or
jne,pt
adc
hlt
mov
pushf
sub
inc
mov
clc
inc
out
std
jle
push
lcall
outsl
or
mov
or
or
bound
push
shl
and
pop
pop
test
insb
or
movsb
sub
imul
jle
xor
adc
test
inc
push
sar
sbb
ss
repnz
outsl
adc
repnz
jecxz
jae
cmovg
jne
push
fisubrs
xchg
shlb
shrl
jne
xchg
mov
mov
cmpsl
andb
cmp
add
push
mov
cmp
addr16
xchg
jg
lret
xchg
fs
mov
fyl2xp1
xor
cmpsl
jno
bound
cmpsl
or
cmp
scas
add
in
into
push
dec
int3
fistps
cmpsl
aas
outsl
std
mov
mov
notl
das
pop
lcall
jecxz
xchg
push
push
cltd
or
push
add
insl
mov
inc
push
push
insb
jnp
jg
hlt
add
les
sbb
add
mov
cmpsl
jle
xchg
cmp
mov
push
fwait
mov
inc
xchg
scas
or
mov
clc
xor
push
clc
notb
pop
or
test
out
xchg
js
out
sbb
aad
inc
inc
mov
rclb
fldcw
leave
jb
test
lahf
inc
lahf
std
jmp
pop
addl
add
out
fstpl
testb
pop
leave
leave
call
insl
pop
scas
pusha
adc
outsb
pop
dec
adc
push
paddusb
mov
leave
shlb
int
adc
dec
xchg
adc
enter
in
lds
int3
mov
hlt
filds
inc
sbb
out
pushl
mov
jmp
xchg
aam
xchg
pshufw
subl
rolb
mov
lcall
cli
add
mov
jge
dec
mov
std
dec
outsl
pop
test
idiv
daa
pop
inc
jo
sti
fnsave
mov
cs
inc
xchg
fsubrl
dec
sti
mov
mov
addr16
pop
mov
jp
insb
mov
and
push
test
das
dec
cmp
in
ret
sbb
leave
cmp
repz
gs
pusha
push
xchg
inc
mulb
mov
add
xor
adc
inc
sbb
add
dec
cli
and
pop
mov
out
sub
add
mov
push
xchg
shll
sbb
mov
loope
stos
int3
xlat
pusha
add
add
shll
std
test
pop
xor
stc
std
sti
out
int3
xchg
cmp
rclb
inc
or
daa
pop
sub
insb
je
mov
mov
call
inc
stos
mov
int3
in
roll
daa
jg
stc
test
xchg
flds
lret
inc
mov
je
or
mov
sbb
jecxz
fcmovb
or
xchg
stos
shrb
pop
jp
sarl
push
mov
test
pop
jb
test
call
shl
push
mov
jns
lcall
push
rol
ss
mov
pop
pop
adc
dec
fisttps
jnp
jl
call
push
ja
jmp
lods
sbb
bound
scas
sbb
ja
sub
sbb
shrb
dec
xchg
jecxz
es
mov
cmp
pop
outsl
push
jb
lret
fwait
insl
in
lds
pop
popf
lods
mov
in
mov
data16
push
push
dec
mov
imul
inc
rcll
add
mov
jmp
loop
out
fidivrl
mov
or
cmc
xor
dec
adc
adc
pop
jae
jle
fstps
mov
cmpsl
scas
or
shl
leave
leave
jo
and
pop
mov
pusha
jmp
lods
stos
mov
sub
gs
cmp
mov
or
scas
push
loop
cmc
mov
pop
jecxz
aas
sbb
enter
mov
les
lock
movsl
add
inc
jnp
sbb
and
jo
or
mov
fsts
leave
in
into
mov
pop
mov
pop
or
out
add
daa
int
test
sbb
hlt
movsb
push
fnsave
lcall
mov
ljmp
cli
xchg
imul
xchg
scas
or
mov
pop
insb
pop
orl
jae
push
test
je
pop
cmp
sbb
cmc
push
dec
lea
or
sub
dec
cmp
les
mov
jg
lea
mov
jns
int
sub
cmp
and
fstp
test
adc
cmp
dec
call
and
jge
cwtd
ja
out
in
insl
int
inc
ss
sbb
jo
outsb
sbb
pop
cli
push
push
xor
aam
and
sub
adcb
pusha
les
inc
stos
cmp
je
sahf
sub
popf
sbbb
jnp
arpl
jp
pop
sub
pop
enter
jno
or
inc
cmpsb
mov
lahf
add
xlat
xchg
test
xor
imul
daa
orb
inc
add
adc
clc
outsl
push
repnz
fs
addl
ficoms
push
dec
pop
cmpsl
sbb
aam
cmp
ret
fcomip
repz
das
dec
negl
add
test
iret
sbb
cmp
jne
fnstenv
pusha
xor
push
mov
popf
stc
and
insl
push
popa
adc
jbe
or
insb
push
push
lcall
push
into
push
bound
push
test
xor
add
pushf
jb
aad
lds
or
test
cmp
in
pop
dec
jne
scas
xor
jb
pusha
push
lods
cmpsb
xor
xorl
repnz
mov
cmp
aaa
pusha
mov
mov
inc
adc
scas
ret
push
and
popl
test
cmpsl
push
xchg
cmp
es
test
mov
movsl
in
in
lahf
ret
pop
xchg
or
pop
xor
dec
or
popw
sbb
inc
push
lret
fwait
pop
out
pop
dec
cmp
xor
out
adc
mov
adc
xor
sub
fs
imul
mov
stos
movsb
add
lods
pop
ljmp
cwtl
ret
and
shl
adc
dec
stos
into
mov
insb
fnsave
std
mov
push
shll
mov
test
mov
pop
add
mov
pop
cltd
shll
xchg
test
cmp
lret
in
jae
pop
daa
dec
xchg
mov
mov
xor
jbe
sbb
je
cmpsb
xchg
dec
or
mov
sub
inc
jae
popf
clc
hlt
loopne
lret
xchg
test
cmpsb
pusha
mov
adc
lcall
fists
sbb
int3
insl
test
push
test
adc
loope
add
out
enter
ljmp
and
sub
arpl
dec
dec
and
lret
sub
xchg
lret
in
xor
addb
cmp
or
loop
add
pushf
mov
inc
push
or
and
adc
jbe
add
xor
lods
jge
pop
pop
push
mov
mov
dec
cmpsb
rolb
push
push
cltd
and
rol
add
pop
jnp
push
jbe
pop
lret
icebp
mov
pop
lret
imulb
pop
daa
scas
cmp
lods
das
inc
sub
sbb
pop
test
lret
fimuls
pop
mov
gs
xor
leave
adc
jo
sbb
icebp
loopne
xor
ror
mov
and
add
mov
add
addr16
mov
sbb
scas
mov
push
or
pushf
stos
aas
cmp
xchg
mov
adc
inc
add
add
mov
xchg
mov
sub
mov
ds
mov
dec
sub
aam
pushf
hlt
jo
adc
test
and
push
cmp
dec
lea
fcomp
add
scas
cmp
cmp
jbe
push
mov
pop
ret
sub
xor
add
dec
xor
leave
mov
js
xchg
mov
shrb
xchg
mov
clc
push
jecxz
loop
mov
push
mov
es
or
pop
push
mov
inc
jecxz
jp
cmc
stos
inc
mov
cs
mov
mov
loope
xorb
push
bound
loope
sbb
lock
push
scas
pushf
sub
adc
jmp
sbb
dec
cli
mov
rolb
push
adc
andb
in
addr16
lods
dec
mov
mov
aaa
sbb
inc
cld
stos
dec
shl
push
jge
mov
sub
jge
fucomp
sub
xor
scas
mov
in
cs
idivl
mov
pmuludq
jmp
sub
sub
jecxz
jb
sbb
inc
lret
jns
push
imul
shrb
cltd
adc
roll
cmpb
inc
lock
fildl
add
xor
jne
pop
stos
ss
adc
bound
addw
and
fwait
jb
cwtl
repnz
icebp
xorb
adc
cmpsl
fldl
inc
fucom
jecxz
adc
addr16
inc
lret
cmpsb
sahf
das
out
sbb
shlb
sti
idivb
stos
xchg
out
daa
jae
xchg
shll
and
in
push
mov
js
sub
in
mov
mov
stc
xor
lods
sub
test
rcll
lock
lods
ja
inc
inc
inc
sahf
or
mov
jns
and
add
pop
ljmp
and
mov
lock
pushl
jne
ror
ja
sbb
xlat
xor
adc
sbb
or
jnp
push
sbb
jne
lret
rclb
jns
push
inc
mov
jns
call
push
fwait
stc
aas
mov
jne
das
mov
cmp
adc
stos
fnsave
testb
jne
lea
icebp
scas
xlat
shl
outsb
push
sbbl
mov
ja
es
ljmp
lods
xlat
mov
jne
inc
inc
pop
fldt
and
xchg
in
jp
ret
xor
pop
inc
jmp
outsl
in
add
inc
repz
movl
cmp
jmp
and
inc
in
xchg
lret
cmp
cwtl
jbe
out
dec
lods
ljmp
inc
xchg
data16
sbb
jecxz
mov
add
pop
add
lcall
and
test
dec
dec
int
fwait
rcl
js
ss
mov
pushf
popf
jmp
or
mov
mov
loop
fsub
xor
push
push
mov
cmpsl
adc
mov
sub
orb
fstpl
lret
test
and
ja
aaa
mov
ds
mov
rol
sbb
cmpsb
dec
sbb
pop
repz
imul
sbb
scas
push
add
sub
in
sbb
pop
xchg
sbb
jne
lods
xchg
mov
mov
pop
inc
xchg
roll
out
scas
cli
jl
dec
cmpsl
rorl
push
iret
orb
sti
jbe
icebp
std
test
out
pop
cltd
out
sub
imulb
aad
dec
fstps
pop
or
aam
inc
push
xchg
outsl
ffreep
ss
int
sbb
fsubrl
adc
popf
cmp
lods
fs
cmc
xchg
std
scas
mov
test
insl
inc
scas
push
sbb
movsl
lds
shlb
jmp
icebp
mov
lcall
mov
fstl
xlat
mov
mov
cmpsb
push
cmpsl
leave
les
dec
push
xchg
and
cmpsb
and
push
fildl
push
sub
shll
sub
out
aas
cmc
mov
add
lahf
cmp
imul
dec
les
sub
aam
xor
push
adc
add
xor
cltd
jg
or
or
cmp
loope
mov
mov
sbb
push
das
adc
xor
inc
xor
loope
sbb
test
cltd
in
mov
sarl
int3
in
or
sbb
xchg
and
lcall
sbb
mov
cmp
in
sub
std
push
inc
repnz
dec
pop
mov
inc
xchg
mov
and
and
pop
out
mov
dec
bound
iret
clc
arpl
adc
jns
fsts
sahf
mov
xor
addr16
fisubrl
xlat
jbe
xchg
cmp
jp
fisttps
andb
push
in
fsubrs
addr16
ljmp
push
ss
je
mov
test
push
sti
xorb
insl
popf
xorb
pusha
icebp
sbb
mov
jl
mov
add
xor
xor
sub
push
nop
iret
fdivr
xor
jmp
stos
mov
dec
ljmp
or
and
outsb
stc
push
push
hlt
scas
xchg
inc
jo
pop
dec
test
add
jae
mov
outsl
cs
sahf
sbb
add
outsb
into
mov
jmp
pop
jno
dec
pop
rcrl
jne
xchg
into
aas
add
mov
divb
enter
out
int3
mov
inc
outsb
outsb
push
sar
xor
rcll
shlb
clc
jge
mov
add
popf
je
mov
ljmp
cmc
lds
dec
out
sbb
insl
push
scas
lds
or
inc
mov
lahf
sub
hlt
sarl
mov
es
jo
pushf
adc
cmc
jmp
mov
sub
popf
das
cmp
mov
xchg
xor
xchg
inc
cmp
pop
xor
cmp
outsl
add
jns
jecxz
xor
test
dec
sahf
push
mov
aad
decl
out
ret
mov
fs
andl
clc
fcoml
jno
loope
inc
sbb
sub
ret
repnz
les
jle
pusha
jae
add
dec
aaa
ja
pop
outsb
jne
test
pop
pop
push
ror
and
pop
std
mov
mov
pop
and
xchg
in
pop
mov
pop
push
adc
xor
mov
push
icebp
xchg
pop
push
add
andl
inc
add
lahf
arpl
adc
mov
sub
in
insb
mov
outsb
cmp
jmp
cli
xor
clc
testl
mov
mov
out
dec
ljmp
fisttpll
inc
push
xor
ss
lret
gs
and
sbbl
or
iret
dec
sub
sbb
setno
pop
cmp
subl
cmp
outsl
xor
pusha
aaa
gs
outsl
jmp
push
xor
test
adc
sub
cmp
rorl
or
xor
pushaw
mov
out
adc
mov
mov
sbb
pop
popa
cltd
push
inc
mov
lcall
inc
mov
mov
mov
push
push
xlat
dec
lods
scas
ret
mov
xor
test
mov
shll
or
rcrb
cs
jo
mov
repz
add
iret
mov
das
dec
sbb
cli
or
pop
xlat
insl
xor
outsl
aad
add
cwtl
sub
wrmsr
popa
aam
xchg
pop
js
cmp
popf
mov
sahf
popl
in
adc
dec
stos
rorb
adc
dec
jg
dec
arpl
fs
pop
inc
mov
sub
jne,pt
mov
iret
xchg
cmp
xor
ret
inc
jo
jnp
out
push
fdivl
sub
fistpl
hlt
js
sub
arpl
mov
daa
dec
movsl
lea
and
daa
xor
push
ds
mov
ds
or
fucompp
cmp
mov
dec
and
cmp
call
mov
push
or
fdivs
mov
stc
divb
imul
std
xchg
mov
int3
arpl
sub
mov
imul
loop
mov
inc
cmp
imul
enter
xchg
inc
mov
sysret
je
ret
or
xchg
cmp
fldl
push
inc
outsl
or
add
ret
dec
movsl
movsl
lock
fildl
xor
dec
jge
mov
dec
popf
mov
mov
addr16
jns
sub
subl
out
aas
mov
pop
sub
cmp
push
enter
xchg
sub
or
test
mov
sti
pop
add
push
pop
cmpsl
pop
jo
bnd
mov
outsb
scas
dec
orb
sub
pop
cli
xor
mov
dec
jo
je
lahf
mov
movsb
test
cs
or
and
jae
sahf
mov
pushf
or
mov
fdivrs
mov
test
mov
ds
fisubrl
add
call
jmp
pusha
pop
and
jne
aaa
idivb
das
mov
sub
nop
mov
xchg
mov
mov
jle
int
aaa
mov
test
adc
aaa
fs
sahf
jae
push
loopne
cli
rorb
idivb
fnstenv
or
mov
aaa
mov
lods
les
xchg
scas
aad
or
clc
sbbl
pop
cmpsb
int3
pop
and
xchg
dec
fdivs
dec
adc
pop
jno
inc
fsubr
cmp
adc
add
sub
int
push
push
hlt
and
mov
jno
inc
js
stc
shlb
ret
add
push
add
outsl
or
or
xchg
add
sbb
or
xchg
mov
pop
mov
lock
cmpl
stc
insl
ss
jg
jo
jns
inc
sahf
pop
xchg
sbb
vrsqrtps
cli
rcl
xor
cwtl
sbb
aaa
hlt
sbb
pop
cmc
xor
xchg
mov
mov
xchg
sbb
xchg
test
in
inc
cmp
jns
jno
adc
inc
jp
test
and
xchg
in
out
dec
enter
adcl
mov
rcll
xor
sub
cmp
mov
or
lds
daa
mov
aad
imul
mov
sub
jnp
fisubrs
cli
cs
add
cmpsb
xchg
inc
xor
or
test
pop
mov
icebp
cmp
mov
jne
stos
pop
or
jecxz
push
mov
push
mov
cmp
xchg
xchg
xchg
lds
ret
jge
outsl
jo
inc
pushf
sbb
mov
stos
outsl
mov
pop
add
xor
imull
sti
and
bound
aam
xlat
or
cmp
cmp
inc
imul
jle
mov
cmpsb
negl
sbb
cmp
or
loope
push
pop
ds
dec
inc
cmc
xchg
add
dec
test
push
mov
out
xchg
and
or
add
test
jo
xchg
sub
lea
mov
dec
mov
data16
imul
jl
jge
aas
sub
lret
mov
in
sti
das
push
jg
lret
or
mov
sahf
adc
repnz
mov
daa
dec
pop
xor
mov
fld
stos
sub
aam
jno
sti
dec
adc
mov
stos
mov
lcall
sub
pusha
out
adc
hlt
shlb
ret
aaa
dec
mov
cmpxchg
add
aaa
call
mov
add
insb
mov
outsb
outsl
into
adc
insb
lret
das
push
aam
test
ljmp
xchg
sahf
mov
sbb
js
sbb
mov
mov
out
xchg
cmp
dec
lret
xchg
dec
dec
jbe
aad
iret
mov
dec
xchg
push
xchg
mov
jle
scas
loope
inc
popf
inc
leave
dec
gs
cmpsl
dec
mov
stos
imul
jmp
aaa
das
mov
cmp
addr16
ficoms
cmp
add
mov
xchg
mov
xchg
push
addr16
shll
mov
daa
leave
push
xchg
push
stc
inc
sub
mov
dec
push
jmp
lcall
into
addr16
xor
enter
sti
pop
mov
jp
pop
adc
ret
das
xchg
imul
ljmp
mov
jecxz
mov
cmpsb
sbb
jl
ss
movsb
idiv
addl
mov
pop
je
add
popa
adc
inc
jne
inc
jl
dec
mov
imul
push
lahf
test
repz
movsl
cld
jno
outsl
ror
pusha
cmp
or
and
pop
push
add
lret
push
outsb
xchg
lahf
lahf
sub
popa
mov
imul
out
scas
leave
mov
inc
lods
jle
sub
jne
pusha
mov
jp
inc
xchg
pop
mov
mov
out
add
loope
jae
adc
sbb
pop
into
mov
out
in
je
adc
sub
sub
popa
fwait
je
leave
or
sarl
pop
icebp
xor
jo
fbld
ljmp
and
fwait
push
cli
jmp
test
cmp
push
not
xor
inc
icebp
loope
sbb
adc
push
jbe
mov
cld
add
out
dec
jp
sbb
repz
xor
movsl
inc
cmp
pop
pop
ja
mov
fsubrl
mov
add
push
mov
xchg
inc
test
cmp
and
xor
adc
and
lods
mov
outsl
stos
mov
mov
popf
sbb
push
lret
xchg
gs
add
data16
add
dec
bound
and
xor
or
idivl
pop
enter
inc
cmp
pop
nop
pop
fistps
xor
arpl
sbb
push
or
sbb
inc
fidivrl
pop
push
lcall
repnz
js
mov
xchg
and
and
ja
xchg
movsl
mov
and
cmp
cs
adc
add
bound
popa
fsub
mov
jne
add
gs
aam
leave
rorl
dec
mov
roll
dec
xchg
pop
es
in
pop
or
enter
into
add
out
push
cltd
clc
and
in
jno
mov
clc
pop
sub
xor
vmlaunch
sub
rorl
add
insb
xor
sub
les
sub
add
out
or
mov
rcrb
push
scas
sbb
and
pop
mov
cmpsb
cmp
or
adc
enter
clc
inc
popw
loope
pusha
mov
inc
in
and
aas
push
adc
dec
scas
mov
test
enter
push
aad
cmp
int
fisttpl
fcmovnb
out
and
push
pop
repz
xor
lahf
pop
psubd
cmp
and
mov
sbb
jecxz
jle
icebp
iret
lcall
pop
pop
jg
in
sbb
and
bound
cwtl
cld
mov
inc
push
mov
add
out
adc
cs
mov
aaa
mov
out
xor
inc
pop
cmpsb
sub
mov
arpl
call
out
outsl
sbbb
rclb
mov
jle
gs
xor
dec
jl
ret
or
or
jge
add
sbb
sub
ficompl
xor
sti
add
mov
cs
push
imul
mov
push
push
mov
xor
sti
cmpsb
insb
cmp
cmp
jns
int3
fsubrl
xor
and
sub
and
leave
cmp
adc
xchg
inc
scas
jmp
xlat
and
add
push
xchg
out
pop
fdivrl
adc
sbb
pop
rcll
sub
stos
aam
roll
scas
clc
cs
lock
push
jmp
push
js
lea
aam
imul
pop
cmc
cmp
jno
or
xchg
stos
enter
sbb
int3
push
lcall
repnz
pop
cmp
lds
dec
pop
push
jecxz
imul
shrb
cld
pop
cmp
add
clc
loop
pop
fwait
and
add
in
fs
xchg
sub
ret
and
popa
daa
dec
out
jno
pop
subl
insl
stc
xchg
cmp
mov
mov
mov
testb
mov
push
mov
movsb
cmp
gs
cmp
leave
push
xor
ret
pop
jp
outsl
jmp
and
sbb
in
inc
cmpsl
mov
push
dec
and
rol
lcall
inc
imul
xlat
stos
orb
int
loop
lds
ficoml
add
and
mov
dec
ja
shl
movsl
icebp
aas
sbb
inc
push
popa
aaa
xor
in
push
xchg
scas
inc
xchg
daa
jge
iret
push
jle
mov
aam
push
gs
mov
test
mov
jecxz
imul
repnz
dec
cltd
not
rcrl
adc
jb
rclb
cmp
cmpsl
add
pop
inc
add
fadd
rolb
pop
mov
jbe
inc
rorb
cmp
out
cmpsb
in
jbe
push
cmpb
dec
and
and
inc
and
mov
cmp
push
into
jge
imul
mov
dec
adc
mov
pop
stos
mov
mov
ret
xor
sbb
or
pop
outsl
sub
sahf
popl
movsb
fisubrl
sbb
jp
mov
pushf
or
inc
int3
jle
xchg
push
loopne
hlt
inc
mov
cmp
hlt
lcall
xor
jnp
lret
fcomip
cs
arpl
jle
outsl
lods
sbb
jne
push
push
cld
mov
sbb
add
movsb
push
push
out
sub
adc
roll
or
push
sbb
lock
rolb
inc
xor
enter
jl
iret
repz
js
int
add
push
ja
jmp
pop
mov
stos
cmpsl
sbb
scas
test
mov
ss
and
inc
add
rorb
and
xchg
test
aas
ret
push
pop
cmpsl
int3
dec
orl
and
in
enter
pop
cwtl
adc
lcall
cmp
sub
mov
mov
nop
arpl
pusha
mov
inc
mov
push
mov
mov
icebp
int
andw
pop
enter
adc
jle
mov
push
cmpsl
sub
test
out
iret
adcb
stos
lret
mov
mov
scas
xor
hlt
iret
in
pop
int
jmp
push
icebp
lcall
popa
xlat
xor
cmc
sbb
adc
cmp
stos
inc
lds
pop
test
mov
aaa
jmp
cltd
jae
push
mov
xor
in
add
xchg
loop
pop
add
mov
test
cmpsb
in
bound
bound
test
iret
xor
cmpb
sub
fimull
rcrl
pop
mov
inc
mov
mov
jae
mov
ret
xchg
lret
or
jge
push
or
xchg
jne
gs
dec
inc
bound
jbe
addl
ja
xchg
mov
aad
jne
sub
insl
xchg
out
or
out
mov
jnp
test
or
xor
dec
add
xlat
fists
movsb
xor
cmp
adc
push
pop
push
arpl
mov
cmc
sub
movsl
xor
sub
or
sbb
push
xor
ret
shll
or
cltd
mov
inc
test
leave
add
push
faddl
out
cmp
inc
pop
and
inc
dec
push
mov
inc
outsb
adc
adcb
jecxz
mov
lea
push
ret
scas
imul
outsl
shll
subb
mov
inc
jo
inc
inc
sti
cmpsb
imul
add
push
inc
xor
push
and
mov
inc
addl
dec
cmc
leave
cmp
dec
addl
sub
add
sub
rcr
mov
gs
ficoml
roll
cli
sbb
bound
or
les
mov
cmpsl
inc
or
jns
and
cmc
or
ret
orl
sti
xor
or
incl
mov
cmp
mov
leave
sahf
or
cmp
call
clc
addl
and
lahf
mov
ret
inc
les
cmp
cmp
test
push
and
mov
cld
test
dec
sub
in
push
jecxz
iret
mov
insl
add
sbb
hlt
insb
jbe
sub
in
es
test
add
jmp
test
xchg
shl
jge
mov
mov
mov
cmp
jge
mov
icebp
pop
xor
xor
sub
loopne
mov
adc
dec
jno
inc
js
scas
int3
es
gs
sub
mov
xor
mov
leave
jns
push
adc
and
lret
xor
mov
sub
jae
pop
and
lret
std
sub
out
pop
pop
out
movsb
ss
mov
jp
pop
jmp
mov
pop
ficoml
imul
push
sub
pop
jnp
in
sub
std
adc
movsb
gs
in
mov
add
cmp
inc
std
sbb
fsubp
inc
rorb
pop
sub
stos
shlb
adc
fwait
adc
popf
pop
mov
roll
mov
push
adc
testl
decl
xor
outsl
and
es
cld
jl
ret
loop
dec
sub
jmp
or
fdivs
ret
mov
nop
sbb
data16
cmp
ds
cld
cld
push
mov
pop
into
cmp
inc
add
add
xchg
int
sbb
pusha
fs
mov
fwait
xor
sbb
repnz
sbb
daa
hlt
xor
dec
test
jns
sbb
cltd
fcoms
dec
dec
ret
ss
enter
out
push
mov
adc
repnz
test
scas
icebp
xor
add
lcall
mov
mov
fwait
aam
pop
push
pop
cmc
insb
jg
test
in
js
ds
lahf
pop
mov
imul
decl
and
mov
das
das
jo,pn
jns
rcr
out
lods
mov
cli
std
inc
dec
psraw
mov
and
iret
adc
andl
cmp
xor
mov
clc
andl
pop
jecxz
lcall
cmp
mov
adc
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
dec
push
mov
sub
dec
mov
into
icebp
rcl
lods
test
sub
rcrb
xor
mov
mov
mov
icebp
fsubs
jb
pop
sbb
sbb
mov
lahf
dec
jge
in
addr16
cmp
jmp
cmp
fcos
push
imul
xlat
push
in
sarb
leave
add
push
mov
push
pop
notl
jno
mov
addr16
inc
int3
jns
cmp
push
stos
sbb
cmp
fmul
inc
in
adc
stos
mov
enter
xchg
and
jbe
lcall
idivb
xor
gs
adc
fnstcw
les
sub
dec
fstps
dec
and
test
cmp
mov
mov
hlt
test
aaa
cmpsb
fcomip
add
test
or
fildll
outsb
pop
sarl
sbb
stc
sub
cmp
std
loope
mov
pop
roll
std
insb
mov
sub
enter
jg
or
shlb
ror
lcall
sarb
sub
push
cmp
pop
mov
sub
xchg
push
inc
cmpsl
or
lods
vpunpcklqdq
test
in
jb
mov
sub
cmp
mov
fs
mov
jb
test
mov
inc
inc
xchg
pushf
dec
xchg
fstps
int
xchg
jge
outsb
sub
movsl
dec
lods
push
fs
pop
jbe
in
pop
sbb
incb
and
inc
inc
lret
fstpt
shlb
cmp
xchg
inc
lock
or
sub
lahf
jae
leave
sarl
enter
aad
add
sub
sarl
inc
stos
nop
dec
lods
inc
jne
rcll
dec
and
cmp
cmp
cmp
roll
test
push
sub
cmp
xchg
bound
mov
test
mov
push
movl
hlt
fstpl
and
scas
loope
and
inc
jb
mov
into
jecxz
int3
add
push
dec
sbb
push
std
in
sub
call
fwait
jbe
test
fmuls
mov
push
les
shrl
jmp
lods
mov
mov
jb
or
int3
xor
scas
and
in
loop
scas
inc
lods
fnstcw
dec
or
xchg
cmpsb
les
mov
mov
loop
mov
dec
xor
or
rcl
mov
js
inc
into
sbbb
xchg
add
or
jno
push
push
lcall
ret
dec
or
adc
jb
mov
and
pushf
xchg
xor
mov
inc
lret
pop
out
sub
aam
or
test
push
enter
in
push
sbb
and
xor
jb
or
push
jg
mov
xor
les
repz
mov
insb
scas
pop
push
punpckldq
push
jbe
cmpsb
add
mov
lock
mov
sub
xorl
push
test
adc
cmp
in
pop
inc
mov
scas
imul
test
adc
mov
dec
aas
xor
fistpl
push
ss
adc
cltd
lahf
push
idiv
cmpsb
int
ds
mov
dec
pop
je
adc
ret
pop
cmp
xlat
fidivl
pop
stc
cmp
push
sbb
mov
lds
push
fs
daa
push
pop
mov
mov
rcll
push
mov
nop
imul
movsl
sbbl
icebp
push
gs
or
test
ljmp
cmp
rclb
scas
dec
mov
and
pop
dec
sbb
ss
add
jae
sub
scas
dec
lods
inc
int3
cltd
push
mov
shlb
mov
mov
pop
inc
sub
pop
xchg
dec
in
cmc
fwait
add
cmc
cmp
clc
outsl
stc
mov
les
pop
loopne
fcomp
mov
jmp
pop
push
or
fists
into
jmp
push
cld
out
filds
and
pusha
mov
icebp
xor
test
mov
push
mov
mov
push
add
rorb
xchg
cmp
ljmp
push
popf
or
aad
addb
