sub
jecxz
dec
sti
jnp
adc
adc
jmp
sub
out
in
mov
js
mov
sbb
sub
or
test
dec
iret
inc
lock
adc
sbb
mov
jns
mov
mov
iret
or
sbbb
cld
sub
cmc
pop
dec
hlt
enter
push
and
lret
mov
fdivrl
ja
out
in
stc
add
nop
sbb
jle
xchg
ficomps
stos
sbb
add
pop
inc
add
movsl
mov
inc
in
jnp
adc
jl
mov
mov
shr
or
push
inc
or
add
pop
inc
aam
inc
lock
ja
ja
shrl
push
das
gs
push
mov
push
sbb
fldl
jae
mov
lods
xor
sbb
sub
dec
rorb
aam
jge
sti
pop
or
push
add
mov
mov
dec
iret
ror
pop
xor
jge
xlat
aad
cmc
aas
cmp
push
andb
pop
rcrb
mov
sub
shrl
push
bound
dec
cmp
sarb
mov
adc
push
incl
mov
jmp
dec
and
mov
into
inc
fwait
or
inc
stos
dec
jge
pusha
repnz
mov
cs
ret
ljmp
mov
sub
gs
cmp
mov
xor
in
fdivrl
mov
lret
mov
lret
xor
nop
inc
outsb
cltd
ja
xchg
or
dec
fwait
jl
sub
sub
test
jle
int
jle
cmp
outsl
inc
add
inc
adc
add
jl
add
test
insb
cmpsl
scas
shll
iret
mov
sbb
cmp
cmp
cmp
add
mov
aas
add
inc
aad
repnz
addr16
addr16
lds
jns
je
mov
adc
in
jmp
or
push
rol
or
xchg
push
hlt
or
xchg
rorb
cmc
cmpsl
popa
ljmp
xchg
cld
dec
lcall
nop
xchg
aad
cli
and
inc
popf
xchg
lahf
int
pop
add
push
xchg
mov
mov
fimuls
dec
aam
dec
imul
fs
int3
push
imul
sbb
and
jp
int
aam
cmp
sub
lock
in
mov
pop
xor
imul
imul
cmpsl
insb
push
fldl
mov
jg
inc
mov
xchg
fwait
jl
icebp
movsb
push
cltd
fsubrs
sub
inc
lods
scas
js
push
push
movsb
adc
push
push
mov
sub
test
out
jecxz
sbb
xchg
pushf
lds
dec
sbb
add
enter
lea
scas
sbb
fadds
flds
pop
repz
mov
xor
xchg
sbb
xor
and
xor
aad
or
pop
stc
pop
lock
cmp
test
or
jae
push
js
mov
into
xchg
rolb
pop
mov
je
fsubrp
jmp
test
sbb
push
xchg
ljmp
shll
outsl
popf
pushf
xchg
cltd
stc
ja
lods
cld
sub
jle
mov
loop
jle
xchg
jle
inc
cld
fwait
movsb
ret
jbe
js
roll
insl
repnz
cs
adc
popa
lret
xchg
push
push
pop
repz
in
xor
addl
adc
cltd
xchg
push
adc
lcall
sar
in
shl
mulps
jl
in
mov
and
push
fucom
jmp
inc
int3
fstpt
mov
in
inc
add
or
jecxz
and
and
fstl
testl
sbb
mov
enter
loopne
shll
adc
push
aam
sub
outsl
lea
int3
js
push
sub
test
imul
mov
ds
lcall
mov
jbe
jge,pn
clc
fadds
int3
add
push
lcall
or
iret
lea
je
and
out
pop
mov
push
fistpl
fildl
aas
test
sbbb
ljmp
sbb
dec
leave
jl
js
data16
shr
cmp
jge
or
add
pushf
ja
cmp
jbe
or
and
mov
ret
add
mov
pop
adc
pop
pop
xchg
xor
sbb
adc
mov
xor
out
addr16
ds
add
outsb
jnp
mov
dec
cmc
call
mov
rcrl
sub
outsb
rolb
xor
repnz
adc
test
aaa
adc
adc
pop
adc
xchg
inc
mov
push
adc
fimuls
lds
fnstenv
scas
mov
movsl
dec
in
test
imul
xchg
icebp
inc
and
call
pushf
mulb
adc
pop
ds
xchg
pop
loopne
jp
sarb
dec
xchg
jb
xchg
pop
dec
outsl
pop
aaa
fwait
notb
mov
sub
imul
sahf
sbb
dec
jle
js
mov
cld
test
jg
imul
pushf
pop
das
enter
cmpsl
and
mov
cltd
aaa
and
mov
push
adc
ljmp
and
rolb
stc
fsts
inc
xchg
push
insl
cmpsb
push
in
enter
imul
lret
xor
or
sub
push
adc
jbe
pop
mov
enter
sub
dec
xorb
or
movsl
das
sti
pusha
dec
pop
mov
jb
xor
jne
dec
mov
in
jns
movsb
in
icebp
std
out
xchg
mov
jmp
rclb
add
add
lea
scas
fnstcw
push
in
xchg
sbb
inc
shrl
dec
mov
mov
in
aam
pop
ss
int
sub
mov
mov
pusha
dec
inc
nop
push
ja
and
pop
push
jns
add
pop
and
jmp
fwait
cmpsl
mov
ss
cltd
je
lea
push
push
push
sbb
xor
rcrb
stos
cmp
dec
add
add
push
pop
cmp
je
cmp
jne
int3
push
jno
rol
pop
jp
add
push
push
xor
pop
pop
push
rol
pop
or
clc
loop
pop
jae
push
or
pop
and
push
jp
jg
cmc
pop
cmc
push
pop
push
push
pop
cmp
je
cmp
jne
int3
stc
stc
loop
pop
push
je
rol
pop
test
push
add
and
push
push
pop
cmp
je
cmp
jne
int3
push
addr16
addr16
pop
push
push
jg
jle
and
pop
pop
cmc
test
push
je
cmp
pop
cmp
push
push
sub
pop
pop
push
and
pop
push
mov
pop
push
and
pop
clc
loop
pop
cmc
clc
or
xchg
and
jmp
jmp
call
and
push
push
push
push
pop
pop
pop
pop
and
test
loop
jecxz
les
mov
add
jmp
push
movzbl
jbe
test
push
test
pop
jno
jo
push
rol
pop
and
stc
loop
pop
xchg
xor
test
nop
test
cmp
mov
add
add
jp
jg
jo
push
jb
pop
jnp
test
cmp
cmc
js
sub
and
cmc
add
push
push
pop
cmp
je
cmp
jne
int3
clc
clc
push
mov
pop
loop
pop
cmp
xchg
mov
xchg
push
call
and
movsw
call
aas
add
stos
das
push
popf
mov
cmp
insb
push
jb
mov
movb
sti
lcall
pop
mov
and
jns
push
jle
pop
cmp
inc
mov
pop
push
add
pop
push
movzbl
sub
push
push
or
pop
pop
push
and
pop
xor
test
stc
loop
pop
push
add
sub
mov
push
push
pop
pop
rol
mov
shr
test
jne
jmp
push
inc
pop
push
movzbl
cld
loop
pop
js
jo
xor
push
and
pop
jmp
xchg
xor
stos
shll
mov
addr16
mov
cmpsl
out
cli
in
xchg
mov
sub
pop
int
jno
xchg
sub
mov
negl
cld
pop
test
push
push
xor
pop
pop
sub
sub
push
mov
push
xor
pop
pop
jns
cmp
jb
or
cmc
jge
jge
je
not
not
mov
push
mov
push
xchg
movsl
xchg
mov
pop
loop
jecxz
cmpsb
inc
push
hlt
jg
jmp
sbb
pop
loope
mov
xlat
pop
xchg
jecxz
leave
lea
jne
je
ds
pop
inc
and
cs
cmc
inc
inc
push
push
and
pop
pop
or
je
push
add
test
nop
sub
loop
jecxz
adc
insl
dec
outsb
jecxz
int3
sub
fadds
cmp
test
loop
jecxz
jns
sti
shl
leave
jg
clc
cmpsb
sbbl
add
orl
mov
adc
mov
jbe
jp
jbe
push
mov
sub
test
arpl
add
adc
xchg
faddl
cmp
sbbb
add
adc
fisubrs
pop
add
inc
fsubrp
imul
subb
lahf
mov
adcb
lretw
sub
adc
arpl
test
xchg
stos
das
insl
inc
out
pusha
enter
or
push
push
movzbl
xchg
cmc
loop
pop
clc
or
loop
jecxz
and
jns
mov
mov
addb
call
inc
push
stc
pop
push
movzbl
loop
pop
jns
push
push
add
pop
loop
jecxz
xor
ja
dec
jns
and
testb
mov
push
push
jp
clc
pop
pop
push
test
pop
cmc
jmp
push
call
push
cmp
lret
and
idiv
leave
lret
out
mov
push
shrl
out
mov
cld
cs
lret
dec
xor
sub
cs
xchg
sub
ja
test
lea
xchg
arpl
rcrb
jnp
jmp
call
push
mov
xlat
arpl
mov
ljmp
es
sarb
inc
xchg
push
xorl
iret
or
adc
sbb
pop
jge
add
icebp
repz
cmp
inc
in
jp
icebp
ret
out
fmull
jge
push
inc
mull
sbb
cmp
push
in
movsb
imul
and
rcr
adc
inc
pop
idivb
push
lds
fwait
vorpd
cli
js
add
pop
loop
and
mull
sub
shrl
push
imull
ret
sbb
sub
inc
dec
scas
mov
cltd
lods
ljmp
and
push
mov
aam
mov
stos
dec
enter
test
je
nop
fcoms
ss
addb
cwtl
clc
push
cli
lret
dec
lret
mov
mov
xchg
in
xlat
xchg
icebp
inc
push
mov
je
mov
push
pop
pop
xor
test
mov
out
js
inc
cmp
push
in
fidivrs
dec
jecxz
or
push
add
sbbl
jns
in
adc
sbb
outsw
mov
pop
out
repz
sub
lret
pop
int
hlt
cmp
or
cmp
lahf
test
pop
mov
andl
pop
fiaddl
xchg
inc
int3
scas
or
out
subl
pusha
push
xorl
jge
pop
out
cmpsl
inc
mov
shr
and
inc
mov
jecxz
seta
xchg
out
js
repnz
fwait
leave
mov
mov
sub
loopne
xlat
xchg
inc
int
pop
xor
sub
test
jae
mov
mov
mov
iret
mov
insb
xchg
mov
xor
jne
and
pop
and
ret
inc
fidivs
and
lahf
or
jg
and
outsb
frstor
leave
pop
frstor
std
dec
frstor
icebp
frstor
test
frstor
cltd
push
frstor
lods
repnz
adc
mulb
cltd
cmp
lea
sub
jbe
or
sbbb
cs
pop
ljmp
mov
mov
fabs
pop
and
or
loop
repnz
mov
fidivrl
mov
mov
insb
or
mov
inc
test
pop
push
lahf
sub
jp
or
add
call
pop
sub
enter
or
mov
mov
lcall
and
lods
fisubs
icebp
pusha
insl
jo
dec
shl
inc
fs
pop
ficomps
pop
lods
fnstsw
push
cmpb
das
ficomps
or
jecxz
pmaxub
adc
out
fstps
xchg
fcompp
pop
pop
ficompl
push
mov
fstps
bound
or
sbbb
outsl
fstps
push
pop
fldenv
std
dec
fstps
test
sbb
sbb
fstps
sar
and
out
fcomps
sub
fcomps
sbb
mov
fcomps
out
bound
dec
jae
and
xchg
insb
fcomps
mov
mov
cmp
pop
lds
pop
dec
loop
push
in
lock
cld
fistpl
cmc
in
fistpl
jmp
int3
fistpl
sarl
pop
mov
mov
pop
mov
insl
fistpl
dec
pop
fistpl
jge
fistpl
jno
fistpl
add
sbb
fistpl
inc
std
ficompl
mov
ficompl
test
iret
ficompl
aas
dec
scas
mov
test
ficompl
jge
pop
adc
pop
ficompl
cmp
ficompl
inc
cs
int
popa
popa
repnz
inc
xchg
std
aad
stos
in
aad
outsl
fst
aad
push
mov
aad
cmp
std
and
insb
cmc
daa
or
pop
cmovge
sbb
cmp
fndisi(8087
sub
fwait
cltd
sbb
sbb
cld
aam
xor
scas
mov
and
mov
aam
jnp
aam
push
jl
sbb
pop
aam
mov
in
mov
inc
fistpl
aam
pop
or
xlat
sbb
out
xlat
pop
jmp
iret
xlat
sbb
mov
jmp
mov
xlat
sbb
outsb
xlat
sbb
xlat
sbb
xlat
sbb
xlat
sbb
push
xlat
sbb
sbb
sbb
mov
sbb
sahf
sbb
mov
sbb
jle
sbb
pop
pop
cmp
cmp
pop
pop
sbb
pop
cmp
rcll
imul
rcll
push
mov
rcll
cmp
pop
and
aad
rcll
leave
pop
rcll
std
dec
rcll
icebp
cmp
rcll
cltd
sbb
rcll
sar
pop
xor
fst
pop
sbb
mov
rclb
jns
rclb
dec
rclb
popa
jge
pop
xchg
outsb
rclb
mov
pop
mov
rclb
lds
rclb
fstps
rclb
in
push
rclb
add
rcll
cmc
out
rcll
jmp
into
rcll
sarl
rcll
mov
mov
pop
mov
outsl
rcll
dec
pop
rcll
jge
rcll
jno
rcll
add
pop
rcll
sub
call
pop
mov
rclb
test
iret
rclb
xchg
mov
rclb
stc
lahf
rclb
int
rclb
loope
rclb
adc
pop
rclb
cmp
cmp
adc
rclb
pop
sbb
adc
rclb
jmp
add
xor
cmc
repnz
pop
sbb
repz
aas
ljmp
and
sub
xchg
xchg
into
bound
out
outsb
mov
loope
mov
movsl
rcr
fstp
in
adc
enter
stos
xlat
dec
and
adc
or
jge
xchg
lods
cmpl
mov
stc
addl
cli
jp
popa
leave
sbbb
add
fsub
and
repnz
push
pusha
sbb
xor
and
dec
gs
adc
mov
cmp
in
test
adc
pop
mov
push
cltd
in
fldl
dec
lock
mov
fnsave
or
roll
out
pop
dec
lret
push
or
mov
add
adc
dec
sub
jmp
ds
inc
jge
jae
out
movsl
cmc
aad
sbb
adc
mov
arpl
xor
mov
lcall
and
addb
mov
and
jl
sti
aad
xchg
jmp
test
and
scas
adcl
decl
sar
cmc
push
cmc
inc
and
jne
xchg
xorb
cmp
cmp
mov
push
adc
stos
fldl
scas
into
mov
mov
xchg
sbb
ljmp
sbbl
shlb
xchg
fisubrl
aam
cmpb
or
nop
jo
rcl
mov
lods
into
lods
and
xchg
into
jp
and
sbbl
es
into
xor
xor
xchg
jne
mov
add
xor
jae
xchg
sbb
inc
iret
ret
lods
or
loopne,pt
cmp
into
testl
imull
xorl
jg
mov
loope
bnd
jmp
mov
add
imull
in
arpl
jecxz
dec
sub
sub
fidivrl
test
pshufw
cmp
out
inc
ss
mov
adc
jge
insl
sbb
ret
shll
arpl
jae
int3
push
or
repnz
pusha
sahf
sbb
push
sub
xlat
add
outsl
mov
cmp
cli
repz
popf
idivl
inc
mov
rolb
xor
subl
or
add
mov
scas
int3
lahf
push
call
insb
outsb
inc
add
sub
pusha
pop
jb
ljmp
arpl
fs
sub
push
push
imul
jb
addr16
popf
xchg
enter
lea
hlt
xchg
mov
or
cld
insl
cmpsl
cmp
pushf
arpl
lods
push
adc
push
sbb
fucomp
loopne
adc
cmpsb
mov
xadd
jno
push
ret
sbb
inc
dec
insb
leave
cmpsb
lods
xorb
xorb
cld
call
jae
insb
jne
mov
cmc
jecxz
xor
cmpb
aas
or
cld
jmp
jbe
sub
fs
cwtl
add
in
aaa
mov
movsl
inc
andb
push
push
mov
and
in
loope
aam
sbb
or
subl
pusha
pushf
or
mov
xchg
sbb
and
mov
aad
jmp
vfrczss
dec
pusha
push
aad
fcompl
data16
mov
nop
xchg
divb
cld
jo
mov
movsl
idiv
addr16
xor
stc
iret
pop
out
ret
dec
dec
xchg
mov
cwtl
and
xchg
xlat
sub
mov
pop
and
fwait
outsb
adc
xor
cli
adc
mov
sahf
or
adc
pop
fcompl
push
out
mov
inc
psubsw
mov
mov
sub
xchg
jp
je
aas
popf
clc
pushf
cli
ja
clc
adc
loopne
sbb
cwtl
dec
test
add
iret
or
mov
jnp
add
or
rclb
or
lcall
repz
shrb
filds
mov
pop
mov
push
xorl
roll
jg
je
adc
out
dec
and
shlb
mov
lret
add
sbb
fstp
clc
push
cld
ffree
cmp
mov
add
adc
push
mov
jp
xchg
insl
xchg
pop
mov
add
mov
add
pushf
dec
jae
add
adc
xchg
xchg
popf
lods
rcrb
pushf
jne
and
out
fimull
js
pop
fs
sub
pop
dec
mov
pop
mov
test
jb
lea
or
mov
roll
xchg
int3
stos
jmp
mov
sbb
out
data16
mov
inc
fnop
or
mov
mov
jmp
scas
aaa
lcall
jb
stc
loop
add
nop
sbbl
pop
in
push
decl
inc
xchg
lretw
or
test
data16
test
mov
mov
xchg
inc
or
stc
fwait
mov
pop
rclb
cld
pusha
xorb
int3
lds
jmp
sub
rcr
mov
arpl
push
inc
dec
mov
xlat
or
stos
cwtl
pushl
xchg
clc
sarb
push
cmc
add
flds
sbb
subb
and
fdivl
xchg
cwtl
std
inc
push
add
pop
jp
sbb
cmpb
mov
cmpsb
pop
mov
pushf
movsb
fwait
inc
sahf
in
cmpsl
lock
sub
out
outsl
mov
pop
inc
mov
ficoms
scas
loopne
dec
js
insl
inc
lods
or
xor
ss
stos
bound
jmp
daa
es
mov
cwtl
pusha
push
xor
inc
xchg
xor
test
xor
pop
popf
repnz
jns
rorb
out
je
subl
pop
dec
idiv
vmptrst
gs
lcall
fnsave
test
inc
push
out
dec
cltd
mov
mov
aad
imul
je
sbb
adc
add
xchg
add
outsb
inc
and
ror
mov
insb
ja
punpcklwd
or
mov
lds
lahf
jg
mov
xor
icebp
aaa
xchg
rolb
inc
xchg
cmp
in
and
daa
cwtl
shll
jge
mov
mov
push
cld
loope
int
jnp
mov
mov
mov
filds
in
out
add
arpl
cmp
je
cmp
adc
ficoml
mov
fldt
or
xchg
mov
pop
aas
xor
mov
xchg
cwtl
inc
push
mov
xchg
outsl
cltd
mulb
fstpt
adc
int3
or
std
pop
int
cmp
faddl
xchg
pop
cwtl
stos
psrlq
xor
fcompl
fwait
pop
mov
mov
dec
jg
mov
and
icebp
sbb
test
xlat
fcomi
shll
inc
aas
popa
stos
cmovnp
push
push
xor
fstl
andb
dec
inc
dec
stos
push
xor
sti
scas
cmpl
jne
mov
dec
xlat
sub
mov
mov
mov
mov
inc
fisttpl
repnz
jbe
sbb
cmp
adc
dec
clc
inc
mov
mov
add
push
mov
sbb
iret
push
jle
and
lods
add
inc
leave
xchg
sub
je
jecxz
mov
divl
popa
js
cmpsb
mov
adc
int
cld
mov
inc
inc
mov
jg
pop
pop
rcll
icebp
cmp
push
cmp
mov
ja
sbb
push
cld
icebp
or
mov
add
mov
sahf
bound
cwtl
ret
cmp
incb
mov
test
ret
and
sub
sub
adcl
mov
loop
xor
jbe
sti
js
cmp
push
out
fmul
cld
aam
shll
rcrb
cmp
stos
add
add
dec
mov
outsb
sub
dec
xor
xchg
stos
mov
hlt
shl
sbb
and
popa
dec
ss
nop
jmp
jl
lret
dec
mov
imul
std
inc
sbb
lret
in
cli
pushl
popf
out
dec
into
movsl
adc
sub
xor
fidivrl
pushw
xchg
iret
cmc
mov
mov
adc
push
loopne
mov
adc
movsl
and
inc
push
jbe
mov
push
es
pop
add
push
dec
lret
or
loop
mov
push
add
jbe
sti
xchg
ljmp
icebp
and
mov
mov
sti
mov
xchg
jo
ss
and
sub
cli
lods
xchg
icebp
mov
xor
sbb
sbb
cmp
insl
int
jb
push
pop
adc
mov
arpl
pop
xor
push
pop
xchg
das
sbb
loope
or
sbbb
add
nop
call
ds
gs
xor
xchg
and
cmp
jle
call
notb
pop
or
inc
cmp
shlb
pop
cmc
leave
in
push
jecxz
inc
outsb
int
or
testl
inc
or
push
mov
mov
lret
cld
lods
cmp
aad
inc
popa
xor
ret
insl
movsb
adc
cs
roll
mov
lods
outsb
bsf
imul
xor
push
or
movsl
ss
and
test
xabort
or
xchg
and
test
xchg
sbb
push
icebp
sahf
add
faddp
mov
dec
leave
jg
addl
mov
sahf
jmp
mov
push
mov
clc
add
jge
dec
sbb
push
sbb
and
sbb
push
arpl
std
cmp
xchg
and
aas
and
jl
imul
das
jp
repz
lcall
jnp
xor
outsl
out
daa
mov
iret
dec
add
mov
lods
pop
gs
ffreep
xchg
pop
fistpll
pop
mov
inc
push
rcr
inc
dec
and
aas
xlat
inc
jo
mov
aas
xlat
lcall
in
dec
jnp
adc
arpl
cltd
pop
sub
arpl
adc
push
mov
fiaddl
iret
popf
repz
imul
mov
adc
loopne
xor
popa
out
lds
inc
movsl
lret
xor
aaa
cmpsl
cmpsb
cwtl
aad
lret
outsb
cmp
cmpsb
mov
mov
jnp
in
pop
gs
mov
inc
cmp
sti
fsubr
fistpl
mov
or
nop
orl
std
cmp
push
mov
shll
sub
ja
push
loop
pop
mov
xchg
aaa
lret
sub
stos
in
xchg
sbb
xchg
jl
xchg
rorb
xchg
lds
cmp
fprem
pop
cmp
shlb
mov
fisttpll
dec
pushf
inc
and
scas
xchg
addr16
mov
aas
and
movsl
push
inc
insb
add
pop
xor
fildl
mov
add
mov
and
adc
movsw
pop
and
insl
sahf
push
adc
inc
nop
or
mov
popa
xor
clc
inc
and
pop
xchg
inc
jg
repz
imul
std
add
inc
push
push
imul
or
call
inc
cld
inc
imul
push
and
inc
in
cwtl
add
rorl
jno
mov
out
bound
or
insl
push
repz
ss
mov
je
sbb
imul
repnz
pop
out
in
push
das
pop
jae
push
lahf
inc
not
or
sub
int3
xor
daa
ret
mov
cmp
ret
jbe
jo
ret
and
pop
push
aad
adc
hlt
dec
enter
or
std
insb
mov
xor
test
test
jo
lahf
cmpsl
mov
mov
addr16
add
loop
fwait
ds
data16
or
ss
jno
loope
push
fs
dec
sti
mov
cmp
mov
pop
inc
je
mov
cmp
jnp
repnz
pushf
dec
std
xlat
push
add
adc
sub
insb
stos
add
in
outsb
call
add
das
push
mov
ljmp
mov
inc
incl
int3
xchg
mov
push
mov
and
xor
mov
jge
mov
lods
addr16
shll
scas
or
push
mov
js
enter
xchg
fiaddl
push
in
pop
and
pushf
xor
shr
es
add
jmp
out
mov
cmp
push
jns
jle
xor
inc
and
jne
cmp
pushf
push
je
fsubl
pop
stc
fidivl
cltd
data16
das
inc
push
lds
sub
test
cli
and
pop
inc
mov
push
jnp
jecxz
xchg
andl
cmp
jp
popl
inc
dec
xchg
xchg
sarl
inc
pop
fmull
fcomi
or
push
mov
add
fsubl
in
lods
pop
mov
repnz
mov
pop
mov
lahf
push
js
inc
ja
pop
shll
mov
outsb
scas
inc
inc
xor
js
ffreep
into
xchg
xchg
xchg
scas
test
sub
mov
mov
lahf
cmp
shll
aad
insl
lret
mov
xor
jp
sbb
push
cmpsb
xchg
mov
push
loope
jnp
ret
hlt
out
cmp
pop
movsl
inc
scas
decb
jno
jns
sub
testb
loope
arpl
add
stc
add
mov
in
add
outsl
sub
and
mov
and
sub
dec
mov
push
loop
xchg
dec
out
test
xchg
jno
cmpsb
clc
jl
jo
add
enter
mov
rcll
push
aad
xor
xlat
and
test
pop
cmp
push
test
in
insb
and
repnz
pop
mov
push
or
mov
int3
jns
gs
aam
pop
cli
push
xchg
je
cltd
xor
mov
inc
mov
dec
dec
cmpsl
xor
bound
lahf
stos
add
xor
xor
dec
and
adc
int
stc
rcr
data16
cmp
push
inc
push
sub
and
fimull
or
fiadds
push
xchg
and
push
adc
xlat
into
and
dec
cmp
jecxz
dec
push
pop
mov
sub
mov
dec
dec
cmpsb
jecxz
stos
sbb
out
jns
pop
pcmpgtw
insl
dec
push
incb
mov
pushf
dec
ds
cld
rolb
pop
sbb
shrb
fildl
or
popf
inc
in
push
std
inc
adc
xchg
sbb
push
jnp
pop
mov
xorl
mov
pop
aas
mov
pop
push
pop
movsb
icebp
into
and
jge
add
aaa
pop
jmp
lahf
inc
leave
negb
ret
lea
adc
mov
scas
push
xchg
jbe
mov
popa
iret
sbb
lock
aam
cmp
mov
inc
popa
ja
into
clc
movsl
fcoml
fs
arpl
fcmovbe
out
andb
test
inc
adc
enter
mov
push
push
stos
jnp
xchg
mov
sbb
adc
pop
scas
push
ljmp
xor
test
jmp
loopne
imul
mov
jo
mov
inc
push
mov
divl
dec
inc
or
sbb
loope
sub
inc
cmp
je
cli
mov
xchg
mov
addr16
sbb
push
cmpsb
out
enter
je
jmp
xchg
and
int3
aas
orb
gs
je
test
stos
xlat
es
or
mov
mov
stos
or
pusha
or
fwait
ret
shlb
xlat
push
xor
adc
aad
inc
dec
mov
push
jl
fisubl
nop
inc
push
repz
into
jmp
cmp
pop
cltd
push
mov
sbb
aas
fwait
out
fbstp
sub
shl
decl
nop
xchg
loopne
push
aas
dec
sbb
divl
xchg
clc
cld
push
xchg
inc
add
xor
or
pop
out
notl
push
lock
test
clc
rcrl
stos
dec
push
xor
xorl
stos
adc
mov
out
insl
add
stos
nop
mov
mov
mov
sarb
mov
pop
scas
adc
sbb
sub
sbb
in
xor
inc
mov
fsubl
push
notl
add
mov
es
ret
cmp
adc
hlt
stos
les
test
fsubr
nop
pop
es
add
jle
push
repz
xlat
dec
jl
mov
icebp
jge
xchg
ds
js
and
xchg
mov
int3
stos
mov
mov
pop
dec
mov
and
jbe
ret
shlb
aaa
movsl
les
xor
dec
fiaddl
andl
mov
gs
bound
inc
cmpl
call
pushf
xor
jbe
sub
adc
and
inc
sub
push
mov
orl
jae
jmp
test
dec
fsubrs
pop
rolb
dec
stos
jbe
subb
fdivrs
mov
dec
cmpsb
ror
scas
aad
jg
out
lcall
pop
fcompl
jb
subl
xor
cmp
or
fwait
mov
xchg
cmpsb
push
enter
je
push
sub
adcl
inc
loope
push
movsb
pusha
addr16
rclb
push
jecxz
sbb
popa
sub
mov
popf
pop
inc
mov
mov
adc
adc
sahf
pop
test
lahf
lods
and
cltd
inc
cmp
cmp
cmpsl
xor
mov
mov
or
in
cmp
orl
inc
pminub
mov
push
mov
jnp
push
aas
movsb
and
mov
fisttps
or
sbb
jp
mov
xchg
jnp
mov
addr16
jecxz
dec
insb
mov
lods
and
xor
mov
repnz
mov
imul
inc
pop
cmpsl
lret
mov
and
rcl
mov
es
adc
mov
jl
xor
sub
mov
mov
aad
xchg
enter
cmp
pop
and
cld
xor
or
inc
ret
jge
fisttps
lods
cmp
rorl
mov
mov
dec
add
jecxz
loop
mov
test
adc
mov
sahf
mov
xchg
sti
sub
push
and
xchg
andl
sub
outsb
inc
out
xor
pop
fcmovu
or
sahf
or
jno
push
ds
ds
out
dec
aas
inc
lock
mov
sbb
dec
lcall
sub
mov
repnz
jnp
icebp
mov
adcb
in
cmpsb
aad
imul
int
leave
jne
or
and
and
pusha
or
cmpsb
ljmp
sub
pop
ds
leave
xor
dec
repnz
xor
testb
dec
jo
insb
dec
xchg
push
mov
outsb
sub
add
jmp
cmp
adc
into
or
arpl
push
stc
jnp
imul
or
fucomi
fnstsw
loopne
lret
push
lret
jg
shll
iret
mov
push
sub
mov
out
pop
inc
lcall
xchg
int3
rcrb
push
push
sbb
cltd
inc
push
nop
cmp
mov
xor
test
xchg
mov
xor
adc
call
daa
stc
jo
jecxz
cld
fistps
xchg
test
cmp
int3
shrb
scas
call
push
pop
imul
int3
xor
sub
jne
repnz
mov
mov
clc
dec
scas
xchg
and
pop
add
xchg
push
shll
cmp
gs
mov
clc
aad
mov
jecxz
lcall
dec
pusha
jo
je
call
inc
jae
or
push
mov
loopne
mov
jge
adc
jmp
data16
mov
ja
add
cmpl
sbb
sub
ret
mov
pop
scas
rcl
lcall
pop
ljmp
aas
and
jnp
in
enter
sub
push
stos
fsubs
pxor
push
mov
test
push
push
mov
or
mov
mov
pop
ret
aad
xor
xchg
xor
inc
gs
cmp
add
pop
dec
cmp
out
pushf
inc
sbb
mov
loope
fimuls
mov
daa
jg
sbb
and
out
jnp
dec
test
and
test
sbb
in
xchg
xchg
mov
mov
jmp
xchg
roll
cld
mov
mov
dec
xchg
sub
inc
jb
daa
lds
sub
ja
cmp
jne
enter
jmp
xor
inc
repz
and
imul
xchg
adc
aas
fwait
dec
dec
push
arpl
jge
adc
lcall
and
add
sbb
xchg
inc
adc
fs
pop
or
pop
out
jno
shrb
dec
jno
roll
jne
rcr
jmp
jbe
xchg
xchg
jae
jp
inc
cld
mov
test
dec
call
ret
fisttpll
mov
mul
in
sbb
mov
pushf
loopne
and
pusha
and
movsb
pop
fimuls
jae
fadds
adc
xchg
bound
test
push
add
inc
adcb
xor
dec
lock
and
rorl
xor
dec
pop
pop
xlat
hlt
insl
pop
and
xor
test
push
jns
test
test
pop
push
adc
in
insb
jnp
dec
inc
aam
dec
je
fcmovb
adc
or
aad
mov
mov
inc
pop
push
cmp
inc
inc
sub
mov
and
pop
xchg
xor
lock
out
xlat
cmpsl
mov
jp
cmpsl
sub
inc
pop
icebp
jg
in
jecxz
or
cmp
sbb
filds
push
sub
inc
inc
push
pusha
or
mov
testb
jbe
lds
fsubrl
aaa
pop
ffree
subb
shrl
mov
gs
je
or
fistl
mov
test
cli
vpaddd
mov
xchg
outsb
pop
or
sbb
negb
pushf
sub
scas
push
jnp
mov
rorb
pop
inc
jbe
xchg
test
sbb
push
loopne
cmp
lret
mov
cmp
repnz
fidivrs
cmp
jbe
mov
xchg
out
push
mov
out
sub
lcall
jo
and
test
mov
mov
push
sarb
or
jle
adc
fs
xor
jbe
cmp
add
dec
xchg
mov
lods
adc
push
push
dec
cmp
mov
shlb
pushf
mov
push
shr
sti
add
add
and
imul
cltd
aam
add
add
pop
jl
out
sarb
ret
sarl
mov
pop
clc
in
jge
fcompl
fs
fwait
out
pop
gs
mov
mov
js
mov
repz
push
mov
mov
push
ss
adc
sub
sub
mov
mov
in
push
cwtl
pop
mov
movsl
pop
pop
js
dec
xchg
fcompl
pop
jb
xchg
and
pop
push
test
inc
dec
stc
aas
stos
lock
dec
xor
xchg
lcall
inc
or
mov
sbb
add
nop
cmp
fstl
in
cmp
xchg
and
adcb
fnstenv
std
scas
je
adc
es
and
push
adc
mov
sbb
les
test
sti
or
das
mov
xchg
rolb
pop
movsb
fistl
rorb
popa
push
xchg
rcr
dec
inc
mov
pop
mov
and
adc
pop
push
xchg
sar
xor
mov
inc
mov
movsl
and
push
loopne
xchg
pop
mov
jae
loope
rorl
push
aas
lret
mov
pusha
sub
filds
fidivs
sbb
imul
lahf
or
out
insl
dec
in
bound
fisubrs
ret
pop
int3
xchg
scas
cmc
dec
jmp
ss
mov
mov
sahf
cmp
push
div
xor
test
cwtl
aad
cltd
mov
ds
repz
leave
jecxz
mov
xchg
push
pop
adc
sub
pop
daa
mov
in
es
cmp
cli
xlat
es
sbb
je
test
xor
and
mov
popf
out
push
push
jo
rcrl
stc
scas
ljmp
iret
lahf
pusha
dec
adc
xorb
pop
jmp
loop
stc
pusha
stos
jmp
fstpt
mov
notb
enter
test
dec
jg
leave
lods
push
inc
idivl
pop
divb
add
fistl
fsubl
mov
mov
mov
and
inc
mov
hlt
inc
shlb
outsl
sbb
adc
dec
cs
ret
lret
inc
push
add
imul
cmp
dec
pop
call
push
push
in
jne
xlat
insb
inc
inc
je
inc
adc
dec
dec
cld
adc
xchg
in
mov
jle,pn
ss
jno
hlt
push
scas
fdivs
lret
lods
xor
int3
fisubrs
add
xlat
add
mov
xor
fisubl
mov
xor
pop
clc
push
test
pop
cmp
out
jle
iret
and
mov
pop
mov
testl
or
scas
lahf
jmp
pop
mov
cmp
mov
fistl
int
fdivs
sub
fucomp
clc
adc
and
fcoms
iret
cmp
fisubrs
fs
mov
in
adc
xor
ret
das
cmpsb
jnp
push
iret
je
jno
test
cld
lock
jo
pop
cmp
insl
xchg
cltd
mov
xor
loopne
adc
inc
xor
loope
movsb
mov
inc
xor
and
aam
push
mov
add
cli
rcl
xor
aaa
je
cmpl
and
xchg
mov
movsl
xchg
hlt
xor
sub
xchg
fcmovbe
mov
ljmp
or
outsb
push
ja
aas
mov
mov
test
dec
stos
sarl
push
psrad
jno
not
cmpsl
sub
lea
fistl
jae
idivb
push
and
mov
pop
repz
push
mov
into
push
xchg
test
pushf
in
sbb
movsb
test
and
test
int3
fldl
pusha
sti
mov
iret
addr16
xchg
notb
xor
sbb
jo
inc
pop
neg
mov
cmp
jle
cmp
xchg
push
or
and
fists
cltd
rorl
mov
std
adc
inc
xchg
daa
adc
xchg
imul
and
sub
and
mov
es
mov
jp
enter
mov
insb
sub
and
mov
cltd
pop
clc
mov
filds
sbb
dec
fwait
mov
dec
add
aam
je
jne
shl
aaa
jae
sbb
mov
cmp
movsb
pop
jl
xor
dec
aas
inc
adc
jnp
aas
dec
jb
ljmp
push
lods
pop
leave
push
inc
jo
ljmp
push
cmp
inc
shlb
sub
cmpsl
cmp
jns
or
adc
push
or
cmp
clc
xor
ja
notb
cld
out
adc
pop
daa
xor
int
fidivl
mov
imul
and
out
es
mov
jecxz
popl
outsb
cld
arpl
hlt
push
cld
adc
pop
call
fmuls
cmp
push
mov
arpl
arpl
ret
mov
mov
mov
push
inc
and
cmp
lcall
mov
inc
push
or
movsb
aaa
jns
mov
repz
add
dec
test
lahf
into
jne
roll
ret
cmpsl
jecxz
fiaddl
mov
outsb
adc
rolb
int
cmp
mov
nopl
lock
xchg
lods
test
cmp
sub
hlt
dec
sahf
daa
jle
push
incb
adc
cwtl
insb
push
mov
fidivrl
cmp
icebp
dec
or
in
ror
negb
cwtl
mov
mov
in
call
sahf
cltd
repnz
mov
sbb
jmp
sub
xchg
mov
xor
add
xor
cmpsl
cs
adcb
xor
jmp
or
fdivrs
or
rcll
ret
xlat
enter
cld
aad
enter
cmp
test
and
push
out
pop
into
out
mov
dec
jno
adc
dec
xor
inc
or
mov
jge
out
icebp
cmp
movl
or
jbe
xchg
inc
mov
ja
cmp
rcl
xor
adc
js
shrl
inc
sub
rorb
in
or
xor
ljmp
xchg
test
fcomps
je
xchg
sub
shll
dec
pop
jecxz
dec
stos
sub
jne
mov
xchg
push
xchg
insl
xorl
pop
pop
cmp
sbb
aaa
mov
mov
jl
or
jp
or
xchg
pop
inc
mov
movsb
add
xchg
push
jno
icebp
add
cltd
pop
and
or
sbb
insb
xchg
icebp
xor
sub
cmp
lods
lods
jge
insl
xchg
stc
adc
jle
mov
cmp
es
imul
hlt
mov
pop
lods
movsb
call
sub
and
jl
jmp
daa
dec
mov
cld
sahf
out
or
cwtl
scas
fistl
fidivl
jno
push
sti
xor
rolb
mov
adcb
sub
sub
sbb
cltd
fimull
add
jb
test
xor
mov
cmp
inc
scas
xchg
cmpsl
push
inc
inc
loopne
mov
ret
and
xor
push
sahf
rorb
inc
nop
push
jbe
pusha
or
std
mov
cmp
mov
test
lcall
xor
icebp
fiadds
xor
mov
pop
popf
sbb
push
je
inc
jbe
mov
add
ja
and
clc
mov
cltd
mov
mov
jnp
aas
dec
pop
cwtl
pop
stc
mov
adc
imul
push
bound
xchg
lds
mov
iret
lret
rcll
js
inc
and
loopne
in
xchg
add
xchg
mov
filds
das
mov
dec
mov
int3
stos
pop
jno
mov
mov
js
cmpl
add
inc
push
cs
xor
mov
push
sbb
imul
sti
fistps
clc
sahf
cmp
popf
adc
sbb
int
push
sub
sub
mov
push
inc
aas
pop
shrl
adc
sub
scas
cmp
imul
iret
inc
sub
repnz
push
pusha
fsubrl
or
and
movsl
xchg
aam
mov
inc
cmp
push
in
mov
adc
sub
jle
jle
xor
pop
dec
mov
mov
jle
xchg
xor
mov
jecxz
mov
xor
mov
jmp
and
mov
xchg
cmp
movsl
mov
add
adc
out
or
inc
shlb
repz
lret
notl
notb
popf
dec
pop
out
and
cmpsl
add
push
sub
nop
ja
jbe
sub
js
cli
xchg
leave
sbb
push
cmpsb
cmp
rcrl
ficoms
or
sub
sahf
rorb
dec
outsb
sti
mov
les
cltd
aaa
push
push
and
inc
add
add
aad
ljmp
jg
fidivl
add
jne
clc
daa
lods
out
movsl
sub
stc
pop
add
xchg
push
lret
scas
pop
test
hlt
sub
xlat
dec
adc
lods
arpl
push
mov
xor
stc
gs
cmc
in
pop
out
pop
sub
jb
adc
popa
mov
inc
pop
pop
call
cmp
ja
out
jae
loope
imul
adc
cli
cltd
mov
iret
mov
push
jl
pop
das
push
mov
lea
inc
das
pop
je
xchg
pop
jge
ds
xor
scas
and
mov
loopne
add
aaa
fmuls
mov
sbb
dec
loop
inc
outsb
test
push
and
jge
cmpb
mov
cmp
add
rorl
dec
or
out
ljmp
mov
stc
fwait
xor
inc
sub
mov
test
fsubl
icebp
push
int3
dec
insb
movsl
stos
aas
ret
cmc
dec
ret
xor
ret
mov
rclb
adc
std
jb
insb
push
xchg
les
subb
pop
and
mull
push
mov
mov
mov
stos
xor
jmp
lods
pop
cmp
icebp
cwtl
xchg
daa
je
xor
orl
insl
mov
sub
sbb
out
test
outsb
cli
mov
adc
cwtl
jne
mov
jmp
xchg
neg
and
push
out
dec
iret
mov
sbb
adcb
push
int3
insl
pop
lock
adc
iret
lcall
ss
mov
mov
jns
jg
pop
dec
cmpsl
test
rcr
mov
lret
fs
lods
jg
mov
xor
arpl
xor
pop
add
test
inc
js
mov
and
push
pop
dec
push
sub
mov
test
in
pop
mov
mov
ret
jg
lret
pop
sbb
ficoml
aam
mov
in
xor
add
scas
add
adc
xlat
sbb
dec
cmp
push
dec
xchg
jecxz
cmp
cld
mov
in
xor
fcoml
dec
inc
in
cmp
xor
pop
jbe
lret
xor
sti
scas
mov
test
movsl
jp
adc
movsb
mov
fisttpll
rorb
pop
and
push
jns
je
aam
sub
sbb
test
pop
fistpll
xchg
xchg
mov
lahf
xor
insb
push
xor
loope
jmp
imul
mov
add
cwtl
pop
popa
int
pop
inc
inc
xchg
and
pause
or
mov
mov
cmp
sub
mov
or
pop
std
hlt
lds
push
fdivl
adc
or
mov
cli
fs
loopne
test
in
bound
and
int3
mov
aad
dec
mov
or
imul
inc
ret
and
mov
aaa
rcrl
repz
aad
fcmovne
insb
insl
shrb
jl
pop
inc
pop
jl
adc
lea
aaa
lods
xchg
movsb
sub
sbb
xchg
popf
bound
mov
inc
inc
cmpsl
js
or
or
lcall
push
lea
mov
aas
hlt
nop
in
mov
into
add
cmp
pop
fistpll
jge
loope
mov
jg
jb
mov
lcall
pusha
cmp
addb
data16
imul
pop
mov
mov
jl
stos
mov
jmp
addr16
and
xchg
jno
mov
jb
mov
jae
push
push
punpckhdq
test
movsl
movsb
push
sahf
aaa
dec
jle
ret
mov
jle
sti
xor
jb
test
mov
rcr
es
xchg
lcall
jge
int
movsb
jne
sbb
aas
rorb
inc
mov
jmp
mov
ror
mov
push
mov
leave
lcall
or
cmp
pusha
std
push
insl
ret
stos
test
jl
mov
dec
pop
imul
push
mov
pop
add
mov
pop
and
jae,pn
xchg
shrl
jecxz
test
out
les
mov
test
movsl
adc
lret
mov
add
jle
imul
addr16
lea
iret
popa
add
lret
adc
xor
or
cmp
pusha
outsb
xor
dec
iret
pop
jg
jl
adc
movsb
xchg
mov
pop
xchg
add
das
cmp
test
addr16
aad
mov
and
push
lret
jns
push
and
sarb
pop
adc
enter
popa
add
push
outsl
inc
fcoms
xor
or
popf
faddl
and
push
scas
aam
jo
mov
ret
xchg
or
loop
icebp
scas
push
and
xchg
fildl
adc
push
aaa
ja
cmpsb
stc
push
fwait
addb
jno
test
jb
jmp
in
push
sbb
jl
and
fprem1
xchg
lahf
movl
xchg
adc
xchg
daa
outsl
mov
std
aam
cmpsb
mov
js
repnz
mov
cmovae
mov
out
cli
mov
xor
fistpll
and
mov
xchg
and
sbb
mov
xchg
ljmp
dec
or
mov
js
stc
idivl
bswap
dec
jg
scas
data16
mov
sub
mov
outsl
into
int3
adcb
aas
xchg
cmp
sub
mov
push
adc
dec
adc
cmpsb
mov
sbb
and
ss
fisttps
xchg
sti
ret
imul
lock
mov
sub
push
and
push
arpl
lcall
and
or
movsl
pop
pop
dec
push
imul
das
or
outsb
adc
stos
push
aad
outsl
jg
lss
cs
or
and
adc
mov
fidivl
popa
mov
xor
or
sub
fcomp
lods
jl
incb
and
ret
dec
mull
push
xchg
dec
enter
jl
adc
jno
add
stc
cpuid
xorl
adc
pop
dec
hlt
loop
cli
mov
stos
ljmp
jnp
mov
mov
cmp
pop
add
stos
mov
cli
lock
daa
pushf
dec
and
and
push
daa
fisttpll
fidivrs
pop
mov
loop,pn
mov
inc
mov
repnz
loopne
fistl
sti
lret
daa
cmp
sbb
pop
xor
decb
fldenv
repz
stos
jle
and
smsw
jne
loop
push
pop
in
add
daa
dec
xor
mov
loop
clc
gs
cmp
xchg
push
add
shll
cltd
pop
xchg
jge
xchg
lods
jo
sub
mov
ds
xor
pop
xor
pop
push
mov
popa
ret
sbb
lret
ret
dec
push
and
or
dec
add
sub
out
push
push
dec
and
jb
and
pushf
in
dec
jno
dec
test
inc
scas
fcomps
movsl
mov
mov
inc
xor
hlt
pop
stc
lret
lret
lock
popa
insl
movsb
sbb
shl
jae
jp
sub
or
cmpsl
xchg
repz
stos
clc
adcl
sbb
insl
test
out
pop
mov
or
out
stos
out
mov
sub
mov
sub
daa
out
sbb
nop
iret
ja
xor
loop
adc
in
pop
sub
xchg
stc
sub
mov
pop
pop
mov
jne
dec
pop
xchg
repnz
fldt
dec
test
movsl
sub
and
pop
sbb
mov
or
loopne
xor
and
and
loope
lock
adc
mov
push
std
sub
xor
ljmp
or
push
outsb
or
xchg
jecxz
and
aas
inc
ret
jge
fdivs
xor
or
push
js
inc
cmp
repz
inc
stc
mov
repz
data16
pop
push
mov
je
mov
and
push
xor
out
fdivrl
sub
cmpsb
movb
cmp
fsubs
ss
mov
adc
dec
mov
inc
push
aaa
pop
adc
pop
pop
je
push
mov
cmp
pop
out
ds
inc
jae
xor
inc
rclb
das
nop
ret
xchg
or
test
loopne
movl
pop
cwtl
sbb
jl
rsqrtps
mov
sbbl
ret
dec
push
pop
xor
sahf
fisttpll
jnp
inc
and
subb
jmp
pop
push
clc
xor
mov
push
fisubs
loopne
add
int
lcall
xor
jno
sub
adc
add
inc
and
test
xchg
jmp
cld
lret
sbb
fwait
xor
dec
fs
ljmp
divps
fcoms
pop
fadds
push
push
sub
push
cs
in
test
and
mov
and
cmp
xor
mov
popf
std
je
mov
xlat
test
fcmovb
shll
arpl
fwait
pop
mov
mov
sub
jl
and
pop
testl
daa
jge
mov
mov
adcl
push
pop
inc
push
lods
dec
lea
lret
es
cli
sarb
inc
xchg
xor
mov
jp
push
in
aaa
adcb
fstpl
dec
call
push
adc
jb
bound
adc
xchg
or
push
mov
cmp
stc
icebp
in
sbb
mov
dec
inc
jecxz
repz
je
or
xchg
arpl
out
and
out
mov
loope
jno
pusha
mov
xchg
jne
sub
sarb
push
int3
bswap
push
arpl
es
sub
xor
test
cld
sub
fbld
adc
inc
addr16
adc
dec
mov
xor
cmp
push
push
lods
push
adcl
loopne
cmp
sub
pushl
leave
lods
sbb
sbb
ret
jge
xchg
mov
pop
frstor
mov
sub
mov
hlt
inc
jle
int
adc
jl
jne
jnp
stc
pop
insb
push
insb
add
dec
int
lods
inc
movsl
xchg
adcl
cli
and
fs
mov
out
jo
loopne
mov
pusha
js
stos
jl
incl
addr16
pop
jo
push
add
scas
sub
roll
int3
cwtl
mov
xchg
std
push
insl
call
aas
jg
sbb
dec
push
xchg
scas
lret
mov
out
cmp
cmp
mov
lahf
je
pusha
push
push
jbe
sar
loop
lock
je
loope
push
cmpsb
lcall
and
jp
mov
mov
aaa
cmpsb
mov
cmp
push
add
add
decl
push
adc
ror
sti
bound
rolb
push
pop
insl
pop
cmc
in
outsl
mov
jne
push
shr
in
cld
rclb
lcall
fwait
sub
in
pop
pop
ja
sti
xor
pusha
mov
pop
push
push
mov
xchg
adc
mov
inc
cmp
sub
data16
xor
sub
insb
jbe
imul
jecxz
ja
xchg
fwait
dec
fidivl
aad
xor
mov
pop
int
lea
jecxz
cmp
adc
cmp
addr16
adc
out
cld
fisttps
in
cmp
ret
in
icebp
arpl
xchg
ja
dec
push
ja
je
shr
mov
xlat
pop
dec
xchg
jo
pop
xor
pop
add
pop
shlb
xlat
mov
addr16
adc
pop
mov
inc
sarl
cmc
lea
cmpsb
fdivl
jmp
clc
mov
std
pop
or
ret
xor
pop
sub
add
sub
or
iret
push
fdivrs
cwtl
mov
or
repnz
loope
mov
adc
out
mov
nop
push
xchg
ret
sub
mov
loopne
stc
mov
imul
dec
mov
push
jg
push
out
xchg
jo
test
fndisi(8087
rcr
xchg
loopne
xchg
js
pop
adc
mov
push
mov
push
jae
and
stc
mov
inc
icebp
out
insb
dec
dec
aas
or
fldpi
rolb
dec
dec
add
xchg
add
sbb
sbbb
icebp
divl
xchg
jmp
lea
cmp
cmpsb
rolb
cli
shl
push
in
mov
fprem
sub
pop
jle
out
push
mov
mov
xchg
rol
ljmp
push
popf
loop
out
and
sbb
stc
insb
push
push
das
push
add
and
shl
mov
and
repnz
cld
test
dec
mov
jp
sub
and
pop
sub
sahf
out
cmp
jg
aas
repnz
push
rcll
ljmp
adc
cmp
sbb
je
jae
sub
lock
pushf
jns
mov
and
bound
popf
outsl
stc
mov
push
adc
sbb
sbb
inc
and
jne
in
mov
sbb
mov
xlat
or
dec
adc
sbb
sub
fldcw
xchg
shll
sbb
stos
cmc
pop
pop
fldpi
je
outsl
les
pop
cli
pop
bound
jmp
movsl
push
mov
mov
repz
out
ss
pop
mov
mov
adc
daa
jnp
push
in
jbe
xor
nop
je
mov
cli
dec
ds
daa
pop
sbb
out
mov
int
or
and
sub
lcall
fdivrp
mov
jne
mov
ret
rolb
sti
inc
scas
test
scas
popa
pushf
xchg
lea
fldl
jne
popa
mov
in
fiaddl
out
shlb
stos
movsl
jne
mov
inc
xchg
ja
movsl
add
enter
fnstenv
xor
loopne
fidivl
je,pt
rclb
dec
pop
pushf
incl
stos
dec
addb
ss
int
xchg
repnz
fldt
shrb
mov
popf
lahf
push
fbstp
gs
or
idivl
xlat
rcrl
js
mov
pop
mov
xchg
and
insb
push
popa
add
sbbb
jl
pop
mov
jmp
xchg
jno
pop
les
mov
fstp
cmp
in
or
rcl
scas
pop
ss
in
dec
cli
les
jo
push
jge
jecxz
mov
pop
sarl
jno
add
lds
lret
mov
cmpsl
push
in
jb
movsb
or
mov
lret
int3
subb
test
mov
pop
daa
fcom
jno
popa
sbb
and
add
ds
sbb
sahf
pop
jmp
loope
repz
dec
mov
test
add
pop
xchg
lret
adc
mov
ret
dec
loopne
cli
sbb
add
and
pop
or
jecxz
lods
mov
push
and
jmp
adc
mov
flds
rcrl
pop
lods
jmp
ffree
dec
popa
push
es
xchg
lahf
sbb
loope
jl,pn
mov
cld
add
xchg
or
mov
ds
sub
mov
je
push
mov
add
or
icebp
data16
lahf
repnz
mov
add
jae
aas
imul
push
pushf
adc
pop
bound
mov
test
int3
in
in
dec
pop
push
mov
dec
das
push
dec
sbb
or
lret
sahf
mov
lret
adc
repnz
repz
sti
lock
popf
loope
xor
mov
push
adc
cmpsb
push
mov
iret
out
cmp
adc
pusha
addr16
pop
jbe
cli
jl
rol
imul
pop
xchg
imul
orb
push
out
and
cli
lret
movzwl
xor
mov
mov
cmp
pop
aad
pop
outsl
dec
test
pop
xchg
rcll
sbb
dec
sbb
xchg
cmpsb
mov
ficoms
mov
pop
out
bound
sbb
stos
sbb
pop
arpl
shll
inc
dec
inc
adcl
mov
in
inc
jo
les
inc
ljmp
test
imul
mov
in
push
xchg
jnp
jecxz
ret
sti
adc
inc
gs
xchg
xchg
fcoml
mov
inc
jno
lcall
inc
test
lcall
subl
aaa
cli
iret
xchg
mov
add
orb
rolb
cmp
jbe
in
scas
dec
jno
jecxz
pop
repnz
fidivrs
sbb
mov
cmp
js
stc
xchg
test
push
push
loopne
and
fidivs
movsl
in
mov
cmp
fmul
mov
cs
int3
insl
testb
adc
lds
out
test
mov
mov
push
dec
gs
cmp
repz
lods
cmpsl
inc
hlt
inc
inc
sbb
add
push
sub
mov
adc
xchg
inc
or
pushf
test
inc
add
xchg
cli
pop
iret
pop
pop
sbb
mov
scas
mov
cmpsb
ja
gs
inc
add
jno
lock
js
out
jge
adc
aas
loop
insb
rclb
loopne
mov
mov
dec
jb
addr16
sub
cltd
sub
xor
adc
sub
imul
lcall
cwtl
aam
cld
ret
fstl
fwait
or
mov
imul
fs
jb
dec
test
xchg
jnp
dec
test
icebp
imul
mov
dec
mov
jmp
ret
push
es
mov
icebp
lret
jg
dec
inc
inc
jle
mov
pop
cmpsb
jns
pop
pusha
jno
bswap
add
ljmp
or
lret
push
lods
pop
and
jae
mov
js
ret
mov
les
cmp
lahf
push
or
mov
scas
andnps
les
mov
cmp
fistps
sahf
loopne
lahf
sub
add
mov
cmp
das
lcall
aaa
shll
es
add
rorl
xlat
xchg
out
std
rolb
pop
clc
add
jbe
xchg
mov
push
jp
cmc
add
stos
mov
add
cmpsb
pop
push
insb
dec
in
mov
iret
lock
scas
test
mov
mov
lcall
and
and
pop
repz
fildl
pop
js
fidivl
dec
or
or
jno
mov
add
mov
jmp
insl
fsubr
sub
dec
xchg
sbb
ret
jp
lea
add
and
mov
fsubl
ror
or
jge
adc
push
pusha
mov
or
add
add
xor
aad
xchg
adc
jp
push
xchg
stos
ljmp
cli
jno
and
dec
ljmp
sti
frstor
and
shll
outsb
into
jno
fimull
jl
and
jno
mov
popf
and
lret
movsb
mov
rcll
or
je
out
into
mov
sub
sbb
movsl
lock
inc
jbe
inc
repnz
into
fidivrl
mov
in
push
mov
hlt
jg
or
jae
push
cmc
sub
mov
lcall
inc
mov
or
inc
mov
mov
orl
ljmp
pop
dec
dec
mov
mov
stc
lds
ljmp
xchg
xor
push
pop
rcl
addb
and
in
dec
mov
rcll
mov
pop
adc
pop
ds
pop
dec
insb
push
popl
and
lret
jp
lods
and
sbb
mov
sub
jb
fs
xchg
mov
out
lea
cmp
fwait
pop
dec
cmp
imul
add
jb
je
pusha
push
dec
jmp
out
loope
insl
imul
lods
mov
sub
cmp
mov
xchg
adc
dec
mov
sub
and
xchg
test
push
xchg
push
sti
out
pop
jg
test
lcall
data16
movsl
jns
push
inc
pop
int
fimull
xchg
jno
jno
jne
and
sub
inc
pop
popa
adcl
sub
loop
aas
inc
movsb
mov
dec
dec
xchg
ret
xlat
adc
cmp
popa
xor
or
imul
adc
push
and
lahf
loop
and
push
jmp
mov
stc
push
jb
cmp
jmp
out
call
arpl
fs
lods
icebp
lods
sbb
pop
shr
pop
out
in
jne
xor
iret
sbb
mov
pop
sub
mov
ljmp
adc
xchg
divl
jne
dec
bound
sarl
sbb
add
aad
jnp
push
or
lcall
or
xchg
dec
shlb
mov
sub
mov
and
mov
out
mov
fs
add
xchg
inc
dec
cmp
iret
scas
mov
aas
mov
sbb
cmp
bound
repz
xor
or
adc
adc
repnz
addr16
or
sub
repz
sub
add
shrb
shlb
enter
test
dec
cs
dec
sbb
dec
lods
nop
stos
stc
sbb
cmc
jecxz
jne
pop
test
bound
and
lds
notb
ss
arpl
arpl
xor
es
fwait
movsl
adc
inc
add
pop
fneni(8087
mov
cmp
loop
mov
push
mov
data16
rcr
dec
out
xor
fdivrs
fdivrl
mov
sbb
sbb
cmp
iret
movsl
sub
jb
jae
inc
int
test
jae
mov
add
pop
mov
mov
fidivrs
inc
pop
mov
sbb
inc
gs
lcall
add
es
inc
jge
or
mov
or
lods
xchg
and
or
aaa
enter
lret
je
pop
ror
cs
fists
push
rorl
dec
aaa
iret
add
stc
mov
inc
jne
jns
mov
negb
mov
jl
jae
pop
mov
dec
jo
sub
lahf
aaa
sub
cmp
out
out
rclb
and
lret
ljmp
xchg
mov
push
xchg
xchg
int
leave
jecxz
sbb
popf
and
jp
inc
sub
cld
ja
aad
sti
mov
fs
mov
add
xor
xor
xlat
rcll
enter
pop
into
out
or
int
outsb
mov
xor
pop
cli
dec
arpl
sarl
jnp
or
adc
jp
dec
sbb
mov
and
add
aad
inc
aam
jp
mov
cmp
mov
ret
sub
arpl
adc
xchg
scas
dec
xor
jns
mov
dec
jnp
int
daa
inc
popa
dec
lock
adc
imul
iret
daa
insl
stc
jp
mov
lods
xor
imul
cmp
add
sub
rol
aas
xor
bswap
add
or
cmp
mov
aam
pop
ja
jne
xlat
dec
js
ss
or
cmpsl
fcoml
out
loope
scas
adc
dec
enter
pop
and
leave
inc
lcall
add
add
cmp
sahf
push
lcall
sub
xchg
stos
sbb
lods
cmp
call
pop
xor
inc
into
sbbb
sbbb
sbb
shl
adc
popf
mov
mov
arpl
rcl
push
pop
dec
pop
out
cmp
and
or
jge
inc
call
mov
cld
mov
sub
mov
push
addr16
xor
mov
jb
mov
dec
sti
popa
mov
push
jne
or
cmpsb
mov
cmpsl
outsl
or
mov
cmp
or
out
inc
push
inc
dec
test
mov
adc
sub
popa
call
les
mov
and
loopne
mov
mov
out
xchg
or
push
std
nop
and
ucomiss
sbbb
xor
mov
pop
mov
add
test
mov
stc
fidivl
and
xlat
mov
hlt
ljmp
sbb
lret
insl
pop
adc
jb
mov
cld
scas
cmp
jbe
ja
jnp
mov
shr
aas
xchg
pop
shlb
xor
cmpsl
nop
dec
imul
xor
arpl
add
push
subl
sbb
sub
jmp
sbb
xor
mov
mov
cmp
jl
mov
in
push
ret
nop
xchg
cmp
jmp
fstpl
pop
adc
mov
test
negl
imul
lcall
test
mov
fcomps
xor
jno
data16
rep
das
adc
sbb
push
and
fnstcw
lods
cmp
xorl
lods
xchg
mov
cmp
pop
jg
and
xor
popf
in
daa
fidivrl
add
insl
xchg
enter
lock
insb
inc
mov
inc
out
mov
out
jmp
outsl
sbb
push
lcall
jne
pop
mov
mov
or
pop
sub
sub
and
fdivrl
popf
jle
fwait
jl
push
xchg
repnz
jmp
lods
leave
pop
fdivp
cs
push
and
jne
ss
or
std
or
inc
jp
cmp
shlb
es
pop
pop
test
push
cld
jle
mov
lods
lret
mov
jg
inc
movsl
xchg
in
lods
dec
and
jae
xorb
sbb
mov
or
imul
fsubl
andl
scas
jbe
insl
pop
es
fwait
sahf
scas
sti
mov
mov
imul
push
mov
test
add
test
mov
leave
xor
pusha
faddl
test
push
sbb
mov
inc
dec
dec
cs
cmpsb
jecxz
cwtl
loope
or
popf
out
or
ret
jle,pt
push
mov
repnz
lcall
cli
or
push
pop
xchg
xor
xor
pop
pop
xor
push
jge
mov
jno
xchg
push
test
lcall
sub
roll
xlat
mov
dec
add
cmp
mov
xorb
pop
lea
add
jg
mov
out
sub
ret
testb
cmp
pop
sti
scas
inc
in
leave
mov
call
xor
loope
inc
ljmp
rorl
adc
test
outsl
imul
arpl
pusha
xchg
jge
popa
mov
jecxz
xor
mov
bound
testb
es
idivb
ficoml
mov
loope
mov
xor
pop
jb
push
jmp
cmpsl
pop
enter
cmpsl
test
movsl
push
cs
push
fcomp
scas
mov
xor
mov
sti
fidivs
daa
lahf
fnstenv
scas
pushw
pop
and
or
cwtl
lret
mov
arpl
cmovns
mov
jle
cltd
or
xchg
pop
mov
out
insl
mov
testl
jecxz
inc
int3
and
mov
aas
loope
outsl
pop
adc
pop
xor
xchg
jne
in
mov
scas
dec
mov
xchg
mov
mov
sbb
mov
cmpsl
fidivrs
add
push
daa
addb
push
and
xor
notb
cmpb
jnp
add
daa
hlt
add
ret
test
cmpsb
and
dec
cmpl
fbld
jae
adc
jge
in
add
adc
jl
dec
jbe
add
and
pushf
scas
popa
js
jle
in
inc
decl
mov
outsl
rorb
xchg
and
std
push
mov
cmc
cltd
hlt
nop
adc
enter
sub
and
testl
jo
sbb
jne
pop
pop
cld
xchg
insb
cmc
mov
popf
mov
xchg
stos
mov
fwait
dec
xor
mov
call
sbb
jge
popa
push
cli
jg
dec
fstl
lods
cltd
push
mov
sbb
mov
and
jmp
push
push
lcall
inc
push
xorl
data16
push
push
orb
jp
jns
cmp
test
mov
push
loope
mov
clc
movsb
mov
dec
inc
movsb
je
cmp
mov
test
sbb
bound
addr16
hlt
or
scas
int3
xor
pusha
stc
cmp
les
fidivs
hlt
jae
jmp
rsm
sarb
add
mov
dec
stos
or
repnz
pop
insl
fimuls
jmp
ds
xor
fsubp
std
inc
and
mov
fdiv
mov
scas
in
xor
xchg
xor
cmp
mov
sub
jecxz
test
jecxz
mov
out
cmp
lcall
jecxz
fimull
adc
enter
push
xchg
test
pusha
rcrb
mov
dec
outsb
cli
pop
daa
sbb
gs
rclb
pop
sub
push
orl
stc
das
xchg
mov
movb
popf
pop
jb
xor
mov
xor
andl
xor
repnz
sbb
sub
push
jle
aas
xchg
out
mov
jecxz
cmp
loope
addr16
sbb
xchg
sub
mov
mov
lods
mov
adc
scas
shlb
or
cmp
sbb
mov
stos
loop
ljmp
xchg
lea
test
jge
sbb
clc
loop
cmpsb
sbb
inc
and
inc
inc
movsb
inc
mov
xchg
sti
movl
aaa
sbb
push
scas
add
stc
pop
lods
and
js
cmp
cmp
xchg
sub
shlb
mov
xor
sub
cmp
mov
out
jae
xchg
loop
orl
int
push
push
aas
mov
int
or
mov
push
mov
into
push
and
ja
rcrb
call
ljmp
stos
push
jne
jp
xchg
inc
sbb
pop
mov
xchg
jmp
sub
data16
mov
cmp
and
jno
sub
test
mov
repnz
sub
sub
or
or
dec
test
adc
pop
test
pop
adc
test
add
or
xchg
jno
sbb
call
das
mov
roll
stos
fcomps
jae
out
and
das
mov
int3
adc
loopne
out
mov
inc
scas
mov
cs
or
mov
adc
cmp
bound
das
mov
cmp
test
cli
popf
insb
add
mov
das
fsubs
sbb
xchg
ds
sbb
pusha
mov
test
call
xor
mov
mov
and
aas
mov
pop
or
movsb
jae
and
psllw
insl
xorl
fwait
das
jo
roll
sbb
adc
mov
stos
push
sbb
mov
mov
jle
incl
push
imul
call
dec
mov
out
push
xchg
jnp
or
push
xchg
push
jl
mov
test
frstor
cmp
adc
cmp
sub
mov
adc
xor
jl
xlat
mov
mov
push
stc
push
aaa
repnz
enter
mov
push
mov
xor
mov
aaa
mov
filds
pushf
test
jns
pop
and
pop
sub
xor
ds
jne
pop
or
xor
xchg
out
aas
push
aaa
inc
push
loop
out
dec
ret
sbb
je
lcall
dec
xchg
mov
xchg
shll
push
adc
inc
scas
inc
sarl
int3
dec
pop
xchg
mov
addl
xlat
fwait
stos
cld
fs
les
addr16
fists
ds
mov
int
push
das
stos
add
leave
aas
xchg
adc
push
push
cmc
or
adc
in
sahf
inc
inc
dec
mov
cltd
mov
inc
cli
and
sahf
lds
cli
xor
add
sahf
cmc
cmp
in
scas
rcrl
add
and
shlb
mov
pop
xchg
lahf
or
call
sub
jae
outsl
xlat
mov
adc
pop
pop
add
push
mov
repnz
mov
stos
mov
cmpsb
inc
cmpsb
add
fldenv
mov
out
subb
loopne
jb
ja
pop
or
push
xchg
cmp
adc
outsb
fldcw
mov
stc
mov
imul
mov
mov
xchg
test
div
pop
push
cwtl
es
aaa
repnz
jae
daa
mov
sti
jg
or
sub
loopne
leave
mov
fisubl
adc
out
inc
cld
cmp
xchg
cmp
data16
add
aaa
dec
les
ja
lock
push
cmpsl
push
xchg
icebp
std
cmp
outsb
sub
push
and
aad
pop
fdivrs
jb
xchg
les
dec
cmp
cli
testb
cmp
icebp
popa
aaa
scas
je
cmp
pop
inc
iret
ret
add
imull
scas
nop
inc
hlt
jecxz
push
adc
push
jp
dec
jae
add
lret
cmpsb
lret
add
or
xor
sbb
mov
outsb
jb
mov
mov
dec
movsl
sbbb
xchg
pop
test
jl
sbb
inc
cli
sub
movsl
dec
push
or
jl
sub
cs
jno
mov
inc
hlt
out
cld
pop
push
dec
call
ret
ds
fsts
xchg
adc
rcl
mov
pushf
ja
push
test
jge
psubusw
mov
push
mov
jl
mov
and
sub
hlt
cmp
leave
mov
jne
outsb
outsb
push
and
test
xchg
push
ret
pop
add
sub
lcall
andb
mov
push
jle
loope
push
incl
or
aad
loope
mov
ds
jno
jae
icebp
mov
out
cs
mov
adc
shld
adc
std
push
dec
and
mov
imul
push
sub
inc
pop
jle
xlat
es
fptan
rorb
mov
jb
jle
and
lods
pop
loope
push
fwait
jl
mov
adc
cltd
and
std
xchg
lods
lods
clc
ljmp
rcll
ret
ds
mov
shlb
int3
cmpsb
pushf
scas
lds
inc
pop
insl
aam
in
rcrb
imul
out
fwait
addb
lods
fwait
jg
push
push
xchg
in
mov
sbb
cmpsl
lahf
aaa
jg
andl
dec
ret
or
sbb
or
test
cmc
shlb
pop
lods
push
xchg
jo
scas
popa
flds
and
stos
jno
sub
aam
jp
aam
cmpsb
pop
enter
pop
dec
rorl
cld
mov
push
and
xorl
xor
in
out
ret
push
sarl
mov
out
test
push
loopne
adc
adc
cmp
xor
jnp
mov
mov
popf
test
addr16
test
xor
pop
imul
push
xor
xchg
push
rolb
push
xor
push
cmpsb
pop
xor
sub
inc
sbb
xchg
dec
inc
daa
dec
cmpsb
stc
cmp
sti
shll
cmp
push
pop
or
out
outsl
xchg
ljmp
ja
adc
mov
cmp
mov
dec
or
imul
sub
sub
xchg
cmp
in
xlat
lock
rcr
xchg
sti
jmp
cmp
or
test
lds
pxor
sti
testl
in
sub
ds
cmp
dec
inc
mov
dec
sub
loope
lret
pop
bts
loopne
push
mov
inc
mov
jb
pop
aad
rcl
adc
mov
shrb
gs
fdivr
aad
pop
xchg
xchg
lea
adc
hlt
enter
cli
xchg
pop
pusha
push
sub
sbb
sub
popf
popa
fstl
popf
imul
xor
push
sub
adc
je
mov
mov
xchg
dec
add
stos
int3
stos
into
cmp
sub
fs
mov
cld
pop
leave
sbb
loop
sarb
test
xor
cmp
stc
xchg
and
pop
mov
or
xchg
movsl
lock
lods
jnp
dec
cmp
popf
imul
insb
jnp
cmp
test
mov
or
or
push
pop
adc
aam
arpl
stos
daa
adc
add
pop
cmpsl
and
adc
cld
scas
inc
test
xchg
test
out
mov
repnz
in
add
inc
popa
add
incb
loopne
lock
mov
pop
aaa
es
test
rcll
rorb
adcb
or
in
inc
cmp
and
aad
addr16
mov
pop
pop
repz
mov
jmp
fdivl
mov
repz
jae
fdivl
das
loopne
and
adc
outsb
lret
cmp
mov
xor
mov
jge
mov
icebp
mov
hlt
sbb
in
jmp
test
aas
xchg
jb
adc
or
fwait
jo
xchg
pop
stos
orb
mov
ret
fwait
mov
sbb
pop
in
mov
xor
mov
jae
mov
rcrl
mov
and
and
lods
cmp
adc
aad
out
ds
daa
mov
sarb
and
mov
stc
cli
in
xor
aaa
testl
adc
and
rorl
rcll
jns
jne
insb
sbb
lock
add
dec
stos
sub
in
inc
data16
or
xor
fwait
mov
ja
aam
popf
pop
hlt
xor
in
cmpsb
jp,pn
adc
inc
lods
fyl2x
sub
mov
movsb
xor
and
pop
shll
add
push
fcoml
xchg
add
cmp
imulb
iret
inc
mov
sahf
aam
in
or
or
mov
and
adc
jecxz
add
lret
xchg
push
adc
jae
adc
sbb
jge
dec
inc
cmp
adc
std
addb
pop
in
arpl
shll
push
or
jge
lea
mov
or
ja
and
divb
mov
dec
cwtl
jl
mull
insb
aad
inc
xchg
aaa
fistl
xchg
push
push
mov
sub
inc
push
mov
pushf
das
outsl
xchg
imul
jge
fstps
shrl
push
mov
mov
mov
pop
shrb
adc
std
sahf
or
and
pop
sbb
mov
sbb
aad
repz
or
mov
in
loopne
and
adc
pop
movl
push
mov
addr16
pusha
lret
xchg
pop
mov
int
sbb
out
adc
push
int3
sbb
dec
jnp
rcpps
roll
hlt
xchg
and
or
rolb
cwtl
insb
sub
popf
inc
sub
js
test
cmovp
into
push
scas
xchg
cltd
divb
mov
stc
mov
push
mov
or
cmp
jns
and
lods
and
fisubrl
cmp
leave
aaa
mov
push
loop
cmc
inc
aad
xchg
xchg
ds
inc
sbb
testb
nop
rclb
je
leave
push
dec
ljmp
pop
fwait
mov
loope
ds
fsubl
push
pop
sbb
inc
push
fbstp
outsl
jbe
jge
popa
stos
push
mov
stos
ja
fcoml
scas
mov
push
pop
or
test
push
cltd
aam
mov
sarb
cmpsb
mov
loope
imul
push
pop
mov
repnz
movsb
in
cmpsl
inc
mov
rcll
daa
mov
inc
aaa
xor
clc
arpl
test
cwtl
sbb
sti
mov
push
jns
lea
dec
inc
and
pop
cwtl
dec
inc
sub
out
jb
or
hlt
pop
inc
cwtl
lret
inc
xor
add
or
xchg
iret
test
sbb
and
in
scas
int3
iret
icebp
jmp
outsb
cmpsl
add
mov
push
xor
push
jb
cmp
lds
xor
out
imul
std
xchg
push
scas
sbb
sbb
mov
outsb
mov
pop
sahf
out
call
or
adc
add
out
fists
or
jns
inc
fs
lock
push
xchg
and
cltd
icebp
fadds
mov
jle
pusha
dec
mov
and
cwtl
fs
xchg
push
mov
mov
jmp
xlat
xchg
sub
or
dec
in
push
mov
mov
adc
ficomps
mov
jp
mov
xchg
rorb
mov
push
jbe
shl
cmc
push
jmp
cwtl
sub
jnp
push
adc
push
arpl
fldl
movsl
leave
nop
pushf
or
andb
xchg
int3
popa
jne
cld
addr16
popf
jecxz
inc
testl
mov
add
jb
add
sahf
adcl
ljmp
xorb
shl
xchg
mov
pushf
aas
jb
imul
cmc
pop
mov
adc
out
scas
pop
aam
sub
adc
dec
loopne
addr16
fisubs
mov
cmp
popf
sbb
cld
xchg
mov
pop
shlb
ret
and
push
xor
jne
mov
jb
shlb
mov
cs
in
inc
mov
cmp
cmpsb
mov
and
sbb
mov
dec
popa
cld
inc
jno
pop
mov
dec
aam
lods
sub
mov
lock
and
js
xchg
cmpsl
test
shrl
js
xchg
push
ss
pop
cmp
jbe
nop
sub
shll
jns
loop
jbe
xchg
movsb
add
jns
and
mov
xchg
in
add
sbb
and
cltd
push
insl
test
mov
mov
sub
dec
push
push
fsubrl
lods
xlat
xor
test
sub
dec
mov
and
push
dec
xor
jl
pop
out
mov
xorb
pop
shl
or
jmp
or
aaa
outsb
lret
push
adc
pop
xlat
sbb
inc
out
pop
jecxz
out
int
jnp
cmp
dec
roll
pop
ficompl
jno
lods
insl
pusha
xor
inc
pusha
push
and
mov
sub
out
aad
push
out
add
movsl
dec
aaa
sbb
arpl
dec
dec
loopne
shrb
mov
rcll
pop
jae
call
push
lds
sar
jb
add
cmp
pop
mov
gs
movsb
insb
test
pop
icebp
clc
ret
lds
loop
incl
pop
cs
push
push
movsb
mov
mov
sub
loope
xchg
loop
push
add
mov
ret
rorl
adc
out
jb
xor
push
jb
leave
bnd
cwtl
cmp
lcall
jne
aam
xchg
cs
or
andl
and
call
mov
mov
test
jno
adc
dec
imul
cmp
shll
add
jae
test
testl
stc
cltd
out
or
fstpl
popf
xlat
inc
out
jmp
les
xlat
cmpsb
lcall
scas
push
cmc
jae
mov
mov
ficoms
rcrb
mov
inc
jae
inc
adc
fmulp
and
adc
aad
popa
mov
cld
fwait
dec
xchg
cmc
xlat
mov
mov
cli
sti
mov
imull
pop
xchg
mov
pop
pushf
in
imul
sub
insl
xchg
xor
fistpl
lods
pop
in
cmp
pop
pop
xor
cmp
cmp
inc
mov
push
mov
xor
push
ret
mov
adc
pusha
jl
push
into
adc
shll
lock
jnp
movsb
or
inc
fisttps
xor
andb
in
dec
mov
loop
pop
push
out
push
or
jg
ljmp
or
lcall
xchg
jp
pop
pop
xchg
sbb
loop
or
mov
push
loopne
int
cmpsb
out
or
mov
dec
repnz
or
xor
repz
push
fildl
inc
push
pop
adc
xorb
mov
ljmp
mov
sub
shlb
repz
repz
int3
mov
clc
ret
jg
sahf
mov
call
xor
es
and
push
sahf
mov
jne
pusha
jmp
or
add
out
cmp
gs
hlt
jne
test
fnsetpm(287
sub
imull
xchg
in
cmc
and
and
and
jmp
test
mov
cmc
xor
xchg
ret
mov
repz
cwtl
xchg
cmpsl
mov
mov
jg
pushf
in
dec
pop
pop
dec
roll
jecxz
dec
jns
fcmove
push
add
ret
add
jecxz
pop
lea
jmp
pop
dec
or
rcll
dec
fdivrl
sbb
aam
pusha
jae
xchg
mov
test
cmp
mov
mov
std
mov
jb
and
movsl
dec
fs
jge
bswap
mov
sbb
mov
out
and
call
loop
push
and
aam
rclb
arpl
sbb
out
dec
in
push
jno
sbb
push
pop
mov
jle
fcoms
out
push
xor
jp
sbb
push
pop
in
loop
arpl
fldcw
jae
cld
or
push
push
ret
mov
or
mov
cmp
dec
mov
dec
push
xchg
pop
pop
les
aad
sahf
inc
xchg
lea
pop
adc
jbe
push
dec
add
add
push
jl,pn
notl
push
aad
nop
stc
push
cwtl
outsl
add
dec
adc
dec
xchg
push
push
mov
pop
lret
leave
in
sbb
mov
nop
jecxz
mov
lds
popfw
out
sub
mov
aam
mov
outsl
mov
add
pusha
loope
pushf
push
fcomps
mov
popa
stos
cmp
mov
inc
sbb
inc
rorl
es
divl
dec
rol
fstl
leave
arpl
lock
cwtl
mov
data16
insb
nop
cmpsb
cmp
or
ds
pushf
mov
jnp
call
sbb
addr16
adc
or
ja
push
dec
les
jecxz
iret
jbe
cmp
stos
mov
aad
lar
scas
and
ds
add
xlat
ret
andl
jno
mov
inc
cmpsl
dec
adcb
scas
jae
and
sahf
mov
dec
mov
popf
cmp
or
xchg
xchg
test
sahf
and
adc
andl
pop
les
lret
cmp
cwtl
aaa
cld
cs
jnp
pop
test
or
fldcw
ja
xchg
fiaddl
push
ljmp
gs
push
sbb
or
fstps
and
out
cmp
movl
dec
loop
xchg
sarb
jecxz
loop
lahf
and
insb
or
jno
int3
test
aad
xchg
xchg
ss
or
or
ljmp
jle
xor
lcall
pop
jmp
not
jmp
mov
and
mov
fidivs
and
pop
ret
jno
inc
mov
shrl
pop
xchg
cmp
fsubs
lahf
pop
loop
mov
mov
dec
jb
pop
scas
jecxz
pop
push
push
push
dec
mov
push
jne
add
loopne
nop
sbb
and
mov
mov
sub
sbb
dec
in
and
cld
loope
scas
in
add
arpl
sbb
or
aaa
loopne
movsb
sub
jge
ljmp
std
cmpl
mov
mov
mov
popf
loop
cmpsl
shrl
add
ret
mov
or
in
das
adc
add
loop
std
ret
stc
and
add
ret
gs
roll
and
out
rcl
add
pop
clc
addr16
scas
jae
fneni(8087
fnstenv
out
test
cltd
clc
ret
ret
inc
ret
insb
cmp
or
aad
lods
repnz
dec
mov
inc
outsl
mov
or
das
mov
jnp
sbb
insl
mov
xlat
or
movsb
jp
mov
std
mov
fidivrl
pop
cltd
lret
clc
inc
xor
fisubrs
push
pop
ss
je
sub
mov
out
data16
mov
pushl
xchg
imul
mov
cmp
stos
fwait
repnz
mov
in
mov
icebp
fiaddl
sarl
inc
in
push
jne
data16
call
movsb
andl
dec
ret
imul
xor
cmc
jecxz
cmp
outsl
fwait
sub
test
sbb
adc
subb
icebp
mov
rclb
jmp
imul
lods
cmpsb
in
dec
mov
in
sti
jmp
xor
cwtl
shlb
mov
push
iret
xchg
add
clc
mov
sbb
je
and
and
and
xor
ja
repnz
scas
jg
leave
lcall
sbb
outsb
pop
incl
imul
icebp
mov
popf
xchg
dec
cmp
dec
gs
add
decl
into
push
dec
cmc
lret
icebp
sbb
add
jmp
sbb
lock
and
jb,pt
mov
jb
fists
mov
shlb
mov
dec
rcrb
icebp
sub
ret
pop
sub
mov
inc
out
mov
in
out
or
out
arpl
mov
fadds
jp
push
cmp
pop
pop
cmp
mov
outsl
xor
iret
inc
push
and
mov
or
jnp
xchg
ficoms
or
cmp
xchg
push
push
outsb
xchg
in
into
or
adc
fistpll
popf
out
lret
dec
inc
push
mov
xchg
lahf
and
and
sahf
lahf
adcb
jmp
mov
je
loope
xchg
cmc
pop
in
addr16
push
xlat
vpmulhuw
test
out
icebp
push
leave
je
inc
subb
loopne
xor
sbbb
iret
jnp
jmp
inc
xor
jmp
jmp
ss
sbb
loop
out
dec
std
xchg
call
pop
lock
add
fildl
nop
enter
mov
movsl
sub
scas
or
ret
pop
and
add
inc
xchg
jb
mov
adc
xlat
popf
fistl
in
jno
mov
dec
ss
loopne
imul
inc
lods
orb
pop
insb
xchg
hlt
xchg
out
jge
ffreep
aam
orb
ja
pop
mov
jo
mov
mov
movsb
jge
mov
iret
jbe
add
dec
pop
fcomip
xchg
fcomps
repz
push
pusha
aas
jbe
into
add
push
pop
cs
addr16
jne
cltd
mov
xor
movsl
clc
add
adc
shr
outsl
and
push
fsubrs
lock
push
push
or
int
in
movsl
addr16
sub
jecxz
dec
dec
jmp
mov
push
mov
xchg
test
sub
insl
pop
jge
or
pop
mov
sbb
xchg
insb
mov
xchg
ss
stc
lea
pop
xchg
les
or
lcall
xor
jg
push
in
or
add
test
arpl
lret
pop
not
xchg
imul
add
ja
pop
mov
inc
nop
dec
mov
adc
mov
sbb
mov
ss
mov
cmp
neg
scas
mov
repz
inc
into
mov
adc
int
add
sti
popf
shlb
push
dec
adc
xchg
sbb
xchg
rclb
call
push
push
pop
cmp
mov
nop
or
int
arpl
sbb
arpl
iret
pop
sti
int3
sahf
stos
jnp
scas
adc
inc
sub
jg
popa
cmp
aad
mov
mov
negb
insl
test
push
iret
xor
nop
pop
mov
pop
insl
ret
mov
push
push
addr16
lea
and
iret
fwait
bound
xchg
in
pop
xchg
loop
jle
nop
aas
or
xchg
jo
bound
mov
lcall
sub
and
sbb
adcl
pop
movsb
pusha
mov
xor
aam
prefetchwt1
or
xor
cmp
inc
out
sub
cs
pop
pop
xor
pop
mov
pop
sub
test
xor
xor
adc
cmc
test
lcall
ds
sub
enter
cmpsl
add
rcr
or
leave
loope
jl
jnp
stc
and
les
push
leave
jge
or
xchg
xor
test
push
pop
test
stc
inc
rcl
cmp
inc
mov
jmp
iret
inc
mov
and
xchg
enter
xchg
addr16
mov
call
mov
inc
dec
mov
pop
les
aas
adcb
dec
test
xchg
je
dec
das
andb
sbbb
test
subps
inc
ds
jp
ds
ds
lret
cmp
jg
fwait
arpl
lea
dec
sarl
xchg
jg
cmp
ljmp
cwtl
push
jmp
das
fcomps
mov
fcomip
jl
loope
out
mov
inc
jbe
mov
cmc
xchg
jp
js
jb
cmp
stc
xchg
push
mov
and
jae
or
movsb
xchg
or
mov
iret
mov
ja
push
push
jns
cmp
in
adc
int
and
pop
jbe
mov
jo
cmpl
sti
fstpl
or
jae
sub
pop
out
adc
stc
xor
inc
les
mov
sbb
mov
push
mov
adc
push
ljmp
pop
push
mov
int3
shrl
lods
mov
adc
mov
jmp
movsb
rcr
in
xchg
lahf
mov
adc
loop
adc
dec
add
cld
xchg
enter
es
scas
stc
les
add
aam
fnstenv
jno
and
fistpll
rcrb
and
popa
cmp
lahf
push
xchg
stc
xor
xor
aas
addr16
mov
cmp
inc
pop
or
outsl
sarl
mov
mov
aas
jg
stos
pop
out
ret
lock
hlt
sub
fs
or
insb
push
push
popf
mov
sbb
jae
mov
js
and
loopne
cmp
pushf
jns
ljmp
dec
pop
push
xor
jb
adc
fisubs
stos
sub
lcall
lea
and
popa
gs
jl
sub
cmpsl
jae
push
sbb
dec
iret
dec
inc
insl
movsl
aas
ljmp
adc
sub
lock
dec
mov
push
mov
xlat
push
cwtl
into
fistps
loope
fwait
pop
jmp
sub
adc
push
loope
add
xor
in
and
mov
int
inc
cmp
movsl
sbb
inc
jmp
pop
add
movsl
push
pop
xchg
jo
outsl
jg
jmp
outsl
xchg
nop
xchg
sbb
sbbb
adc
or
push
orb
ss
insl
xchg
mov
aad
dec
mov
sarb
cmpl
add
sbb
jmp
in
nop
in
adcb
adc
in
pop
add
insb
dec
mov
pop
jmp
sbb
fwait
mov
mov
xchg
mov
sbb
dec
sbb
or
shrb
lds
stc
scas
fldl
fmul
insb
adc
or
mov
test
imul
fildl
popa
push
dec
mov
cli
sarl
cwtl
les
sbb
shlb
mov
sti
sub
inc
jnp
mov
ljmp
arpl
movsb
in
lods
push
jnp
mov
and
ljmp
ret
stos
int3
repz
or
xchg
rol
xor
ret
loopne
pop
inc
push
add
rclb
pop
xor
push
mov
cmpsb
inc
scas
push
out
jno
push
xchg
dec
xor
and
dec
mov
pop
mov
outsb
cmp
pop
push
loopne
or
jne
push
pop
and
ss
and
push
popa
jl
sub
sub
dec
clc
clc
add
jbe
bound
mov
jmp
insb
mov
inc
adc
imul
sbb
sub
dec
lods
clc
test
add
cwtl
xchg
filds
shlb
xchg
or
or
ret
movsb
shlb
lods
mov
inc
push
mov
pushf
xchg
fxch
popf
fsubrl
xchg
enter
push
xchg
pop
xor
jno
das
xor
loop
push
pop
aas
pop
push
xchg
cld
pop
aaa
inc
xor
stos
pop
sbb
icebp
sbb
int
pop
rcrl
sbb
sub
mov
arpl
rcrb
repnz
jno
int
fld
int
add
notb
lods
mov
dec
sbb
stc
mov
sub
dec
sub
sbb
inc
cli
in
inc
pop
sub
sub
xor
leave
movsb
int3
or
xorl
cs
stos
stos
test
movsb
push
xchg
inc
adc
pushf
fwait
inc
daa
adc
dec
divb
jl
push
sub
jne
mov
sub
test
push
insl
or
and
xor
cmp
mov
aas
mov
popa
setbe
mov
iret
mov
stos
jbe
sbb
push
push
pop
shll
shrb
lods
fimull
and
and
mov
add
add
xchg
out
add
scas
cmp
sub
mov
pop
mov
mov
mov
in
jecxz
or
dec
pop
cmpsb
pusha
dec
test
xchg
cmc
scas
inc
push
fidivrs
imul
in
stos
daa
adc
jmp
adc
lahf
dec
nop
mov
enter
dec
mov
test
rcrl
xchg
outsl
hlt
lcall
stc
inc
sahf
sbb
sbb
int
cmpsl
add
sub
sub
rdpmc
test
movsl
sbb
lea
sub
jns
outsl
data16
cmp
inc
outsb
jns
mov
sbb
outsb
lock
xchg
adc
inc
nop
ss
loopne
xor
orl
movsl
sub
and
cmc
nop
push
mov
inc
mov
bound
mov
sub
mov
or
and
dec
andl
cmp
and
mov
stos
fimuls
daa
sub
js
jno
cmc
push
lods
je
dec
or
push
in
scas
imulb
andb
or
push
dec
imul
roll
and
sbb
mov
movsb
sbb
sub
insl
into
out
push
sbbb
and
push
xchg
adc
jns
mov
fbstp
pop
pop
mov
lcall
shr
lds
and
in
push
pop
les
out
xchg
leave
add
push
sub
push
outsb
test
adc
mov
outsl
fidivrl
int
mov
mov
mov
insb
popa
mov
addr16
sub
out
push
dec
lea
shlb
aam
jb
fmul
movsl
notl
lret
mov
mov
add
xor
ds
mov
sub
test
pop
mov
mov
cmc
jae
mov
push
call
sbb
sbb
mov
pushf
mov
cmp
popa
sbb
scas
rclb
mov
adc
mov
mov
sahf
pop
insl
jg
jle
sbbl
mov
les
pop
adc
sub
add
or
xor
or
pusha
sub
loopne
adc
movsl
or
lret
cmpsb
xchg
std
out
xor
jb
and
sub
sbb
lcall
repz
fidivrl
sbb
dec
loop
in
and
cmp
sti
popa
xchg
and
xorb
and
lcall
lock
mov
cmpsb
leave
lahf
test
adc
jae
ss
pop
sbb
mov
inc
pop
inc
pop
sub
jg
jnp
aaa
fsubrl
rcr
xchg
ss
adc
push
loopne
aaa
add
add
jp
in
lock
mov
jnp
pushf
cld
push
xchg
xchg
pop
or
out
ss
jno
sub
lds
stos
out
mov
jbe
mov
add
enter
pop
ds
inc
adc
pop
bnd
dec
dec
dec
dec
ds
cmp
xor
xchg
xor
sbb
lcall
dec
insb
inc
mov
popa
push
and
rcrl
mov
scas
xchg
mov
jmp
jno
jg
adc
mov
addr16
mov
cld
fcmovbe
pop
ret
imul
dec
repnz
add
roll
and
jne
mov
scas
mov
shrl
xlat
jecxz
jp
test
fisttpl
add
jbe
in
nop
jecxz
fnstenv
insl
sbb
adc
stos
popf
cmp
clc
loope
mov
pop
test
jbe
lods
test
enter
lahf
adc
push
dec
nop
mov
das
mov
fs
fisttps
pop
cmp
mov
andb
pop
loopne
imul
xchg
rol
in
sub
xor
cwtl
mov
aam
mov
dec
mov
xchg
and
mov
aad
fsubrl
mov
inc
jb
rorl
divl
les
movb
pushf
pop
stc
insl
push
cs
fcompl
movq
or
test
push
arpl
mov
lahf
jg
scas
lea
adc
cwtl
test
and
test
sub
dec
and
sub
popa
pop
aaa
shrl
cmp
hlt
imul
jae
pushf
cmp
in
sbb
adc
xchg
ficomps
sbb
sbb
out
das
int3
addl
mov
mov
shr
jne
fildll
xorl
test
lcall
das
mov
add
pop
into
xorb
mov
int
loopne
cs
lret
out
sbb
lock
roll
daa
fdivl
out
dec
fisubrl
or
inc
in
dec
leave
push
push
fldt
in
in
das
sub
loope
int
outsl
mov
xchg
dec
repnz
jns
outsb
jne
inc
ljmp
or
je
xlat
mov
mov
fcompl
stos
cltd
sbb
add
outsl
outsl
mov
ss
popf
fadds
pop
bnd
jecxz
adc
or
pop
mov
xchg
inc
es
xchg
add
cli
jg
mov
dec
and
push
testb
xchg
pop
dec
bnd
push
popf
sarl
shr
lock
nop
mov
cli
imul
inc
xchg
jae
or
xchg
test
pop
fwait
dec
movsb
lret
push
movsl
jp
hlt
jp
stos
sbb
dec
xchg
push
arpl
scas
sbb
mov
mov
push
leave
incl
shll
sbb
mov
dec
mov
inc
dec
imul
mov
cmp
inc
mov
je
push
mov
stc
les
aam
add
cmp
dec
push
shrb
scas
inc
push
xlat
sarb
or
inc
inc
out
add
fists
dec
mov
xlat
push
push
lahf
int3
int
dec
jbe
add
xor
xor
in
jge
mov
and
pop
sbb
push
xor
scas
mov
pop
dec
and
je
addl
push
rcrb
mov
push
loope
lea
mov
sti
pop
jae
out
xor
xor
xor
rcr
mov
insb
imul
push
nop
jecxz
and
mov
dec
test
nop
or
ret
or
int
xor
pop
aam
xor
inc
push
and
dec
sbbb
mov
mov
addr16
addl
sbb
sarb
push
out
add
jecxz
cs
mov
jg
inc
push
mov
xchg
loop
xor
mov
xchg
mov
cld
ja
mov
pop
jae
cmp
lret
pop
ljmp
andl
loopne
cs
leave
xor
sbb
push
fidivs
cltd
movsl
sbb
sti
aas
je
dec
sbb
jno
lea
or
rorb
dec
test
mov
sub
sbb
push
mov
add
movsl
mov
inc
push
lret
add
mov
mov
ja
sub
adc
adc
hlt
psubb
shrl
adcb
push
popa
out
inc
data16
leave
sub
ret
pop
je
mov
add
nop
ret
idiv
pop
xchg
dec
lea
cmp
ss
dec
adc
lds
lds
sub
xchg
cmpsb
adc
ljmp
pop
xchg
add
inc
jecxz
dec
addr16
push
sbb
outsb
test
jae
iret
fs
pop
mov
and
enter
mov
or
ds
ftst
in
or
imul
sar
insb
and
fildll
dec
xchg
push
mov
lds
filds
mov
or
inc
ret
mov
and
mov
aaa
or
inc
cmpsl
sbb
fiadds
push
mov
clc
out
sahf
cwtl
stc
cmc
xchg
movsb
sbb
pop
and
add
push
outsb
lock
stos
cwtl
lds
inc
pop
std
jmp
push
pop
addr16
mov
add
sub
imul
aad
mov
mov
movsl
ds
cmp
mov
popf
je
cmpsl
lods
in
stos
outsl
lock
pop
jo
or
or
sbb
fcomp
addr16
xlat
mov
stc
jae
dec
jno
mov
dec
sbb
mov
jl
insb
mov
mov
popa
imul
adc
pop
and
cmpxchg
sti
gs
ror
insb
test
pusha
jbe
aam
fwait
mov
lahf
mov
in
push
fstl
sbb
mov
mov
or
push
int
cli
lret
aad
bound
sub
cmp
popl
inc
pusha
push
dec
adc
outsb
add
cmc
cltd
cltd
and
pop
int3
repnz
inc
xor
jno
inc
cs
fld
mov
clc
xor
add
mov
push
sub
or
push
out
pushf
movsl
hlt
and
sub
jecxz
add
gs
out
popf
in
pop
movsb
pop
add
cmp
mov
ds
aaa
push
in
add
sbbl
add
adcl
roll
push
call
rclb
les
pop
xchg
xlat
repnz
sti
fisubrs
or
fisttps
cld
sub
xchg
clc
mov
negb
jae
call
sub
cli
sahf
cs
pop
in
adc
dec
sub
add
and
popf
out
mov
add
xchg
cwtl
mov
dec
sbb
xchg
push
imul
mov
aaa
ss
idivb
add
mov
mov
addr16
pop
add
push
fdivp
test
mov
les
int3
xor
pop
ficoms
dec
int3
fsubl
outsl
fcomps
mov
or
push
mov
fimuls
add
mov
inc
mov
cmp
pop
or
dec
clc
repnz
pusha
mov
cmp
ficoml
xor
pusha
or
int3
data16
mov
scas
adc
sbb
push
js
pop
lcall
sti
xor
adc
xor
call
sti
sub
cmc
lahf
pop
xchg
int
addb
adc
adc
or
aam
stos
pushf
ljmp
ret
ret
mov
add
push
xchg
loope
or
js
mov
or
fstl
adc
out
add
sbb
and
jg
pop
lods
inc
stos
cs
mov
in
pop
cmp
sbb
icebp
test
jle
add
or
dec
les
repz
jnp
add
cmp
js
sbbl
fsubl
pop
adc
pop
sub
scas
sub
pop
sub
in
inc
or
mov
sbb
in
jbe
jns
dec
jo
ja
aaa
push
scas
std
pop
and
mov
sbb
stos
rcl
mov
xor
jne
xor
ret
std
add
fs
add
mov
push
cmp
cwtl
subl
sbb
push
cltd
inc
sbb
mov
subl
xlat
hlt
test
xchg
iret
sti
xor
imul
pop
push
and
and
push
int
dec
push
mov
movsb
xorb
adc
push
push
test
fadds
icebp
sar
test
inc
inc
mov
outsb
inc
cmp
cmp
scas
cmc
mov
mov
stc
das
mov
imul
or
dec
loop
pop
movl
and
push
push
dec
pop
loop
test
cmp
sub
lds
add
ret
dec
ljmp
xor
dec
add
lds
call
mov
mov
ljmp
rorl
scas
sbb
pop
int
xchg
mov
out
or
test
inc
int3
push
push
cmc
cmp
fistpll
stc
pop
push
add
mov
stc
stc
sub
push
or
pop
enter
jb
jle
in
pop
mov
jno
cltd
lmsw
lea
hlt
loopne
movsb
xchg
fisubrs
fdivs
sub
sbb
mov
mov
push
les
popf
xchg
or
xchg
mov
xor
mov
or
stos
fstl
push
lahf
mov
xchg
push
mov
jae
fimull
scas
sbb
shll
iret
adc
je
aam
jno
bnd
cwtl
push
std
jge
pop
mov
mov
adc
dec
fists
pop
mov
or
mov
pop
out
xchg
sbb
repz
push
mov
push
push
repz
jecxz
jg
mov
pop
mov
mov
jge
push
cmpsb
or
sbb
fldenv
mov
arpl
inc
xchg
pop
aaa
cs
or
mov
negl
rcr
push
mov
xlat
orb
jle
daa
pushf
xchg
es
or
xor
ljmp
jle
arpl
imul
inc
subl
orb
jmp
int
shll
pop
xor
icebp
xchg
fs
imul
mov
divl
mov
imul
dec
lods
test
in
mov
aad
addr16
pop
dec
mov
mov
ret
cld
test
insb
movsb
xor
sub
adc
mov
in
xchg
out
lahf
pop
hlt
push
fnstsw
jb
sbb
mov
sbb
mov
popf
aas
mov
inc
ljmp
push
cmp
sbb
sbb
cmp
repz
inc
inc
adc
dec
arpl
sbb
jbe
test
dec
testb
scas
imul
cmp
jo
int3
int3
jecxz
in
popa
and
pushf
in
mov
imul
pop
push
add
push
mov
fidivrs
adc
aas
sub
scas
adc
or
cs
js
cltd
inc
cwtl
into
jae
jo
sbb
add
pmulhuw
stc
mov
and
sti
lret
mov
jmp
mov
sahf
outsl
add
data16
movsl
mov
bound
dec
jo
rcll
inc
andb
mov
and
or
out
cld
and
into
mov
cli
jge
jmp
fldt
ja
into
pop
jl
pop
jae
mov
or
daa
loope
inc
or
test
sub
mov
pop
dec
mov
pop
fcompl
mov
lods
or
and
test
je
lahf
mov
mov
dec
addl
mov
cmp
pusha
push
mov
lods
lret
mov
pop
orb
fsubl
push
sub
pop
lcall
push
insb
xor
pop
hlt
cmp
and
mov
repz
gs
rolb
push
inc
mov
pusha
lds
lcall
faddp
cmpsb
push
pop
cld
or
xor
sbb
shrb
mov
mov
movsl
xchg
jecxz
sbb
mov
ja
lea
stos
pop
push
dec
imul
jns
dec
jecxz
rol
imul
pushf
je
daa
fstpt
cmp
pop
pop
ffree
xchg
pusha
mov
mov
repz
mov
push
xchg
inc
leave
push
jns
mov
aad
or
adc
xchg
popl
jb
mov
dec
cmp
in
ret
sub
notl
in
subl
int3
ret
mov
out
inc
fmul
sbb
add
andl
fiadds
sbb
mov
clc
and
lahf
mov
lods
push
cs
mov
dec
daa
jno
push
icebp
mov
pop
push
sbb
scas
rolb
xchg
ficoml
jl
cwtl
scas
nop
pop
jbe
mov
ds
push
out
stc
jb
xchg
mov
jg
mov
xchg
lods
add
and
out
ljmp
or
mov
fdiv
sub
push
inc
xchg
mov
mov
hlt
enter
cld
mov
test
lret
ret
jg
fs
fists
xlat
sbb
xchg
pop
cmp
sbb
push
andl
les
dec
lea
hlt
pop
popf
fs
push
lds
xor
lahf
lahf
mov
xor
and
fisubrs
sbb
or
test
adc
std
push
lahf
sub
and
push
xlat
push
mov
xchg
cld
xor
ds
outsb
sbb
ud2
inc
jle
mov
aaa
inc
inc
mov
pop
mov
push
iret
cmpsl
adc
cmp
mov
adc
cld
xchg
sub
cs
sub
and
push
bound
dec
jl
pop
mov
mov
and
push
sbb
sbb
shl
loop
xchg
nop
or
push
scas
aaa
fs
orb
fcmovb
jl
aaa
int3
mov
mov
or
pop
adc
sub
pop
pop
ja
mov
mov
mov
subb
into
dec
outsl
inc
jl
jb
sub
daa
fdivl
out
lds
mov
mov
pop
or
cmp
fistpl
cmp
cmp
stos
cmp
sub
xor
xor
inc
fidivrs
cmp
jns
cmp
fstpt
xchg
pop
or
stos
mov
xchg
or
pop
mov
test
inc
push
pop
testl
gs
into
popf
sub
push
sub
cmp
dec
fsub
das
addl
xor
xchg
sahf
movl
sub
cwtl
in
call
clc
mov
cmp
int
or
sub
stc
mov
dec
and
pop
pop
lahf
push
clc
insl
je
in
cmp
xor
jl
inc
mov
or
and
rorb
mov
sbb
sbb
daa
repnz
imul
ja
arpl
fcmovne
adc
dec
cmp
dec
xor
pop
mov
fsubl
movsl
mov
push
or
int
movsl
mov
cs
sub
mov
jg
cmp
jnp
inc
xchg
cs
lock
xor
icebp
pop
adc
loop
rcll
jae
mov
xchg
pop
movsb
fisttpll
in
mov
cwtl
insb
cmp
shl
popf
push
xor
push
or
loop
popf
dec
lret
mov
xor
cli
inc
bound
xchg
cmp
jno
inc
stos
daa
mov
inc
mov
cmp
mov
cmp
and
inc
jbe
arpl
ss
push
mov
imul
std
pop
lock
push
push
or
adc
stc
dec
xor
mov
push
int3
shrb
test
mov
or
lea
jecxz
mov
fdivs
and
or
popf
push
pop
bound
push
imul
pop
dec
and
fidivs
fisubrs
pop
mov
in
and
aas
and
pop
mov
dec
mov
mov
adc
out
pop
mov
xchg
add
ret
shrl
movsl
jnp
push
sub
aam
shr
in
imul
mov
rolb
jb
or
bound
ljmp
fsts
pop
sub
adc
cltd
inc
dec
arpl
lea
sub
push
clc
jnp
lods
or
stos
xchg
sub
and
sub
clc
cld
cli
ret
mov
mov
mov
aaa
int
stos
jae
xorl
rorb
scas
xor
mov
lds
xchg
push
sub
and
or
outsb
ret
out
xchg
sub
xor
test
test
jle
xor
lret
mov
call
dec
jle
test
jge
fistpll
shll
pop
sub
stc
mov
sub
sub
lcall
or
iret
roll
es
test
xor
xor
dec
fimull
in
mov
sub
and
add
xchg
push
loope
and
std
or
cmp
lret
stos
aas
sbb
dec
shr
pop
push
or
mov
cs
sbb
out
negl
repnz
mov
into
pusha
outsl
outsl
pop
jmp
cmp
mov
cmp
sub
xor
and
loop
xchg
mov
mov
arpl
das
jmp
and
sbb
fxch
js
jge
dec
iret
adc
arpl
and
adc
push
jno
cwtl
pop
mov
lods
pushl
in
int
or
dec
cmp
lret
lret
loopne
mov
test
inc
out
jl
dec
mov
add
xor
push
jge
lods
sbb
faddl
outsl
push
test
mov
lock
repz
mov
mov
inc
pop
fisubs
cs
popa
pop
dec
ret
cmp
dec
adc
adc
dec
sbb
sbb
or
sub
mov
scas
int
repz
repz
mov
lock
mov
outsb
aad
push
inc
fwait
loop
sbb
addr16
sub
notb
sbb
mov
mov
push
mov
subb
push
pop
push
jae
call
adc
xchg
out
jecxz
gs
iret
js
push
mov
xchg
pop
nop
pop
mov
add
rcrb
cmp
test
imul
jo
cmp
dec
and
add
jg
adc
int3
adc
xor
mov
mov
sti
cltd
inc
adc
ffree
mov
push
inc
test
push
jae
scas
xchg
pop
cmpl
lock
arpl
clc
insb
sahf
in
dec
mov
xchg
sti
dec
out
ss
add
pop
mov
fnstcw
lret
idivl
pop
fisttpl
lahf
cs
ficomps
pop
ret
mov
inc
xchg
mov
aas
xor
jb,pn
cmpsl
adc
mov
mov
cld
or
push
int
hlt
cmp
inc
cmpsb
mov
xchg
and
add
xor
dec
jbe
enter
or
xor
fsubrp
or
outsb
dec
cltd
stos
adc
dec
sub
and
lahf
sarl
pop
cmp
lret
push
mov
test
aad
push
popa
inc
cmp
lods
data16
testl
adc
es
scas
pop
mov
mov
jmp
out
jns
dec
movsb
xor
or
push
lods
fcom
push
or
filds
lahf
int3
clc
add
addr16
adc
jg
mov
xor
std
and
inc
cmp
out
sbb
pop
and
lcall
inc
in
cmp
or
sub
imul
loope
or
cmp
or
or
aam
dec
das
cmp
js
xchg
xchg
std
or
subl
cli
and
gs
movsb
push
fbstp
in
jae
mov
xchg
push
jl
icebp
movsl
popl
hlt
aaa
lcall
adc
inc
jne
bound
fimull
cmp
mov
lret
dec
stos
sub
jo
std
pop
enter
icebp
cli
daa
outsl
push
fwait
jbe
push
int3
cwtl
cs
xchg
xchg
lret
adc
mov
cmp
mov
leave
mov
cltd
mov
out
int
test
dec
in
or
in
or
xor
mov
pop
dec
imull
fwait
adcl
add
rclb
or
push
fxch
add
mov
fdiv
xchg
pop
and
imul
sbb
cmp
inc
mov
adc
imull
xchg
push
imul
rcll
xchg
push
and
shlb
mov
mov
dec
fs
dec
sub
mov
daa
loopne
cmc
stc
xchg
mov
dec
sbb
fimull
inc
jne
sub
mov
mov
shl
fxch
push
mov
test
sbb
adc
sub
fldt
xchg
or
or
mov
subl
repnz
sbb
mov
jne
cmpsb
sahf
push
sbb
xor
pop
mov
pop
fildl
xchg
stc
mov
sbb
adc
push
mov
imul
data16
or
pushf
ss
lahf
mov
lahf
loopne
push
dec
inc
scas
and
fcmovu
sbb
aaa
scas
lods
stos
lret
ret
mov
and
push
and
test
cmpsb
jl
xchg
inc
jge
aam
xor
and
mov
fs
ret
pop
pop
pop
mov
bound
imul
pop
lods
int
push
outsb
adc
outsl
pop
push
xchg
sub
mov
xchg
sub
nop
mov
mov
das
mov
add
sbb
xchg
in
add
repz
in
imul
jne
jmp
pop
data16
lea
lcall
sub
cwtl
in
cmpsl
mov
loop
lahf
adc
jns
dec
xchg
mov
pop
sbb
or
test
faddp
push
hlt
cmp
push
mov
inc
pop
lret
mov
pop
loope
outsb
add
outsb
scas
pusha
adc
mov
ror
sbb
js
dec
mov
jge
xchg
pop
int
cli
sub
cli
call
fstpt
or
push
xlat
ret
push
xor
xchg
push
enter
xchg
adc
push
and
movsb
fisubrs
push
cld
inc
cmc
inc
adc
dec
repnz
ss
sbb
inc
jae
pop
push
movsb
out
mov
test
mov
popf
push
mov
xor
push
inc
push
icebp
push
lods
icebp
lods
sbb
divl
mov
jns
xlat
mov
test
jmp
int3
sbb
push
jmp
add
xor
into
sub
das
mov
fsts
dec
cmp
push
cs
into
cmp
mov
mov
in
int
fstpl
nop
pop
popf
popf
inc
xlat
add
sbb
or
jp
push
out
push
adc
jae
pop
jecxz
out
mov
jb
cs
nop
adc
jnp
xor
adc
dec
aaa
clc
xchg
fwait
dec
inc
dec
outsl
sub
lods
stc
xchg
sbb
das
in
pop
ss
int
cmp
test
inc
mov
adc
clc
pop
subb
and
lods
add
push
rol
or
imul
out
xchg
push
rcrb
xchg
jb
and
xor
push
push
les
jl
mov
and
aas
out
push
adcl
cmp
lods
movsl
mov
cltd
dec
daa
fstpt
cld
call
push
adc
mov
arpl
push
test
leave
shrl
dec
sbbb
pop
cmpsl
push
pop
pop
xchg
mov
imull
and
jp
rep
sbb
add
adc
mov
test
fwait
sarl
icebp
incl
enter
inc
xchg
jnp
cmp
push
bound
loopne
inc
mov
fs
push
sbb
inc
addl
jge
lea
mov
inc
cmc
ffreep
mov
call
int
push
popf
and
cltd
testb
mov
jp
push
mov
insl
xor
mov
cmp
ds
repz
dec
pop
dec
addr16
shrl
mov
outsl
dec
and
fadds
inc
or
ret
xchg
mov
xchg
pop
iret
add
bnd
in
or
hlt
fmuls
int3
jp
iret
out
mov
fadds
mov
popa
outsl
xlat
stos
outsb
xchg
inc
xchg
sub
mov
jl
mov
lods
ss
cmp
jbe
xchg
aam
sub
in
addr16
ds
or
mov
jnp
mov
cmp
cmpsb
jg
lret
push
movsl
xchg
mov
push
scas
mov
ja
pop
repnz
lret
sub
jae
or
cs
fsubrs
add
subb
int
push
shrb
pop
pop
sbb
paddusw
fistpl
cmpsl
jle
pop
xchg
aad
lods
out
ds
mov
mov
rep
push
lods
dec
mov
jl
sahf
push
clc
xor
lahf
dec
jo
mov
add
xor
jbe
add
xor
sbb
rol
or
test
xor
sbb
rorb
mov
lds
fisubrs
aaa
and
mov
dec
push
int3
xor
inc
outsl
pop
mov
add
or
cmp
cmp
push
scas
push
dec
mov
js
fcomip
push
jmp
mov
cmp
adc
sub
and
push
xchg
icebp
cmp
mov
movsl
pushf
and
data16
stc
or
add
sbb
mov
xor
push
mov
xchg
pushf
into
iret
adc
enter
imul
cltd
sbb
mov
loopne
cmc
outsl
sbb
lds
faddl
lock
dec
xchg
or
das
push
push
cmpsl
dec
and
or
out
pop
add
test
jge
movsl
aaa
push
jo
xchg
mov
jns
jne
shll
jle
cwtl
lcall
cmp
mov
enter
push
mov
cmp
mov
jmp
jae
jnp
adc
cmc
fwait
shrl
cli
push
cmp
imull
ljmp
sub
mov
sahf
xor
imul
movsl
mov
and
loop
add
jo
insb
faddp
adc
scas
inc
mov
dec
cmp
xor
stos
pop
add
pop
cltd
test
mov
or
cmpsb
xor
push
xchg
test
leave
pop
lock
dec
push
in
lock
iret
mov
sbb
mov
jmp
shrl
cmpsl
cld
imul
sbb
push
adc
test
int
add
adc
dec
repnz
js
jnp
insl
xchg
out
pop
in
shl
stos
test
je
or
add
push
mov
insl
out
iret
mov
mov
addl
std
cmp
aas
and
inc
loopne
mov
xor
cltd
inc
cmc
shrb
jns
push
add
push
das
sbb
lea
pop
add
adcl
in
push
cmpsb
movl
and
mov
clc
in
fsubr
test
and
inc
jl
inc
mov
dec
shll
sub
sbb
mov
and
aas
outsb
mov
loop
dec
mov
outsl
inc
jecxz
ljmp
aas
cwtl
addr16
push
clc
push
jo
imul
jnp
or
cmp
into
xchg
cmp
xor
pusha
repnz
lods
and
sub
lahf
sahf
out
adc
pop
jp
push
adc
mov
adc
sbb
mov
int3
mov
clc
sub
pop
ret
fdivrs
fcompl
push
mov
xchg
pop
int
mov
push
inc
mov
xchg
jp
outsl
inc
icebp
push
jmp
aam
sbb
xor
mov
and
adc
sub
inc
ret
rcrl
pop
fistpll
sbb
dec
rcl
mov
adc
lret
cmp
xor
xchg
xchg
or
or
adc
cld
cwtl
dec
xchg
adcb
divb
outsb
aaa
ljmp
push
out
inc
pop
and
leave
mov
lock
jle
js
shrb
sbb
cs
dec
jno
cld
jbe
xor
push
push
cwtl
pop
mov
outsb
fdiv
mov
out
mov
int3
mov
xchg
xor
and
jae
iret
clc
or
add
cmp
sub
stos
notb
sbb
adc
rolb
cmp
xchg
out
cmp
idivb
out
leave
lcall
jbe
lods
roll
xor
mov
leave
in
adc
xlat
lcall
pop
bound
js
aaa
dec
out
mov
fldenv
inc
xor
xchg
or
mov
cwtl
data16
cmp
push
outsb
push
or
sbb
cwtl
inc
xor
out
mov
sbb
hlt
jp
adc
pop
inc
xor
jp
icebp
jns
std
dec
mov
push
fisttpl
fwait
jecxz
cmp
jno
out
es
lods
or
push
loop
aam
call
xchg
jg
test
pop
rcll
insb
js
pushf
xchg
movsb
and
push
xor
mov
loope
rcr
addr16
xor
sti
in
mov
in
ds
aam
mov
inc
lcall
data16
gs
daa
sbb
cs
push
ret
lock
mov
out
lahf
push
or
bnd
out
mov
adc
shlb
sub
mov
outsb
stos
les
fwait
lret
sahf
cmp
arpl
cmovg
add
or
jl
aam
cmpsl
lret
cmp
adc
cld
loop
shlb
adc
push
dec
cmp
addb
ds
inc
js
popf
repnz
sub
fists
fdivrp
outsb
shl
shlb
cmp
lock
dec
stos
aaa
aas
push
or
and
adc
dec
loop
lds
jg
mov
clc
inc
inc
out
cmp
fidivs
mov
push
push
int3
fsub
fs
arpl
cmpl
xchg
jnp
jl
int3
push
dec
push
mov
imul
sub
int
std
jle
xor
or
push
jae
mov
enter
repz
std
fisttpl
mov
mov
outsl
jne
repnz
and
jno
xorb
ljmp
jg
loopne
cmp
pusha
in
dec
jae
mov
out
mov
gs
ja
mov
repnz
xor
stc
sub
inc
push
enter
cmp
or
int3
jns
lea
in
sbb
push
cmp
idiv
je
mov
add
push
ljmp
popf
mov
or
mov
dec
mulb
sub
loope
dec
mov
mov
dec
dec
pop
mov
ss
jle
sbb
dec
xchg
pop
addr16
mov
pop
add
xor
mov
leave
dec
cltd
shll
mov
mov
leave
pop
test
push
hlt
sub
fwait
icebp
inc
mov
jo
rcr
nop
cmp
cltd
and
lock
ja
out
cltd
pop
lcall
ret
out
sub
mov
cltd
mov
loop
das
aas
mov
or
mov
pop
and
push
js
pop
cmpsl
add
movsb
xor
ds
call
push
jmp
aaa
stos
cs
outsl
sub
stos
and
add
imulb
leave
enter
or
cmpsb
sbb
mov
mov
sbb
stc
adc
outsl
leave
in
rolb
aaa
xchg
mov
inc
cmp
mov
add
adc
cmpsl
xchg
xchg
jbe
dec
dec
adc
pop
pop
mov
or
out
dec
push
and
fs
jecxz
das
fldenv
lret
sar
lods
aad
rcr
into
enter
add
bound
pop
cmp
inc
cli
jb
movsb
cli
mov
ljmp
jo
inc
fs
mov
mov
cwtl
push
dec
mov
sbb
or
mov
je
jmp
lods
adc
add
push
or
mov
ja
fcmovne
add
push
sbb
mov
push
lahf
and
and
inc
fdivs
stos
lcall
add
pop
cli
gs
sub
xor
repz
push
xchg
std
dec
jno
inc
cwtl
sbb
adc
adc
mov
inc
fldt
je
fisttps
loop
andb
fmul
and
ljmp
pop
js
sub
sbb
scas
shr
sbb
mov
int3
imul
xchg
scas
negl
jmp
hlt
lock
xchg
sti
or
or
outsb
mov
aam
mov
mov
sub
mov
in
ret
sbb
cmp
cmp
jmp
stc
into
iret
nop
push
push
jno
test
sbb
pop
lods
fmuls
cmp
adc
popa
jbe
mov
mov
lahf
test
inc
popa
mov
dec
push
cmpsb
sbb
rcl
jmp
pop
push
stos
push
clc
push
int3
sbbl
fsubr
add
push
mov
test
pushf
sar
and
or
push
popa
xor
out
inc
inc
mov
bound
sarb
pop
jmp
xor
repnz
xchg
les
mov
pop
sbb
repnz
mov
sbb
sub
dec
add
xor
push
js
cmp
pop
and
cmpsl
mov
subl
jo
in
mull
and
mov
jnp
addb
popa
sub
aaa
and
push
movsb
mov
shll
dec
pushf
inc
je
dec
xlat
sub
jae
gs
daa
jnp
mov
jge
out
adc
jp
aad
fisubs
xchg
and
xor
and
and
jge
jno
mov
mov
ljmp
mov
call
rcll
lods
add
mov
add
mov
insl
es
inc
jo
test
jae
push
cmc
lods
jnp
std
loopne
adc
push
pushf
into
add
loope
mov
je
sbb
jmp
sub
scas
ret
mov
mov
shlb
cwtl
xchg
lcall
cwtl
mov
pop
cmp
outsb
xchg
or
add
xchg
iret
out
ficompl
adcl
out
in
sar
fldenv
jmp
subl
mov
gs
imul
xor
imul
jno
pop
cli
dec
fs
cmp
stos
sbb
sbb
enter
test
into
int3
cmpsb
sti
mov
inc
call
pop
lcall
fwait
dec
cld
stc
cmp
mov
inc
rcrb
cli
or
jle
bound
jno
push
hlt
add
dec
jmp
clc
je
cmp
inc
jecxz
jns
aam
addr16
loope
inc
jmp
leave
enter
jno
in
cmpsb
xchg
fisttps
mov
sarb
outsl
rcrb
psubsb
rorl
sti
ss
cmp
repz
out
xlat
mov
inc
mov
inc
pop
lods
cltd
pop
aam
push
xor
sahf
jo
clc
and
ret
repz
pushf
aam
inc
cmp
pop
pop
mov
ret
call
das
adc
ds
fdivrl
dec
pusha
fnstenv
add
lcall
incl
ljmp
add
aad
mov
and
mov
jae
shrl
jo
xor
mov
imul
add
xchg
stc
loop
sbb
sbb
popa
not
aaa
dec
mov
rclb
test
imul
lret
mov
cmp
mov
xor
ja
js
mov
movsb
je
adc
cmp
std
out
cmp
xchg
xchg
stos
test
inc
ret
pop
mov
iret
jo
js
push
cmp
xchg
jb
and
xor
mov
push
push
mov
add
fcmovnb
gs
cmpsb
mov
stc
cmp
nop
sub
pushf
imul
test
jg
push
fcoms
cmp
add
jne
imul
loopne
dec
xchg
mov
cmp
push
push
xchg
jo
sahf
sbb
loopne
jp
iret
jns
mov
cld
jne
clc
mov
xchg
push
shrl
pop
test
jae
or
or
dec
push
xchg
rcrb
adc
add
aaa
and
xchg
xor
sbb
mov
std
loop
mov
test
xlat
movsb
xchg
add
add
cmp
adc
xchg
bound
fs
jmp
cmp
adc
jae
sbbb
outsl
loope
rorl
sbb
sti
fiadds
mov
mov
orb
or
movsb
jg
fwait
mov
shll
daa
jecxz
sub
jns
hlt
loopne
pop
aam
mov
outsl
push
aas
or
pop
mov
pusha
mov
sti
adc
cmpsl
leave
pop
inc
xchg
scas
out
jbe
les
add
cld
or
mov
dec
decl
and
mov
push
dec
ds
out
adc
jb
jmp
push
jge
cmpb
imul
jle
push
fmulp
adc
push
stos
jae
in
mov
stos
int3
aam
fucomip
mov
rorb
push
rorl
cmp
cmc
jmp
fdivl
std
insb
das
fnsave
mov
or
add
data16
cmp
xor
pop
jmp
fdivs
loopne
bound
mov
cmp
xchg
jecxz
jg
push
movswl
mov
mov
outsl
add
outsb
lock
and
and
es
loope
mov
fisubrs
sbb
lds
jno
cli
add
mov
icebp
jl
sti
sbb
aad
fildll
out
sub
lcall
sarb
pop
add
pop
das
xchg
push
adc
jge
movsl
xor
xchg
das
sbb
nop
xor
adc
in
cmp
inc
push
dec
loopne
call
rcrl
xor
inc
outsb
insl
jne
sub
and
stos
sub
into
dec
repnz
outsl
push
insl
fidivl
jo
cmc
push
sbb
add
dec
mov
jo
xchg
cmp
adc
pop
sub
cmp
nop
pop
pop
mov
inc
lods
jo
cmc
xchg
lret
jb
int
inc
pop
push
mov
jge
outsb
hlt
in
mov
mov
push
scas
idivb
xlat
mov
xor
cld
sub
daa
jo
fsubrl
mov
movups
loop
fildll
in
xor
mov
mov
sub
ja
and
out
mov
lahf
xchg
test
and
mov
xor
sbb
mov
ss
stc
mov
push
add
into
push
inc
xchg
mov
sub
mov
cmpsl
mov
sub
lods
xchg
cli
out
in
jge
push
sbb
and
sub
mov
mov
icebp
jle
stc
mov
inc
xchg
mov
pop
int
pusha
push
icebp
nop
out
adc
or
aas
hlt
lret
jg
pop
sahf
add
mov
shlb
jno
lahf
add
xor
xchg
xchg
out
repnz
mov
mov
cmp
sub
cwtl
or
nop
or
jmp
lahf
xlat
fs
aaa
rclb
pop
jo
add
add
daa
les
ja
mov
inc
mov
jo
pop
pop
fcompl
loopne
fnstenv
fs
bound
sarl
scas
leave
jl
mov
lods
inc
addl
xor
mov
adc
jge
imul
movsl
jecxz
shlb
add
out
push
adc
xlat
jmp
shll
push
jno
cli
mov
shl
iret
mov
dec
jae
mov
mov
les
daa
cmpb
addb
clc
dec
in
pop
bound
stc
rorl
scas
nop
push
aad
or
inc
sub
je
fwait
sub
and
stos
in
xor
xchg
fisttpll
lods
sub
and
lock
and
sbb
adc
les
fsubrl
mov
pop
cmp
data16
aaa
repz
sub
stc
jne
push
rcl
mov
shlb
hlt
cli
cmp
sbb
xchg
adc
jbe
outsb
mov
mov
cli
jmp
xor
shl
aas
inc
dec
movsb
or
pop
add
outsl
fildll
jmp
sahf
and
sub
xor
xor
aaa
inc
adc
sbbb
xchg
pushf
adcl
mov
stos
and
push
loope
jle
mov
dec
adc
sbb
inc
push
push
int3
fnstcw
int
daa
or
and
pop
xchg
movb
int
fdivl
das
rcll
xchg
jo
mov
cmp
cmp
cltd
push
cwtl
cltd
jmp
push
mov
cs
je
test
cwtl
lcall
pusha
jecxz
leave
repz
repz
mov
push
xchg
lret
jno
stc
daa
cwtl
cmp
or
jl
sub
push
mov
aaa
ss
iret
mov
into
int3
lret
cltd
adc
in
add
cltd
popf
or
jg
in
jg
stos
sbb
mov
div
negb
sbb
jo
push
movb
and
popa
pop
mov
outsb
mov
mov
push
gs
out
add
lahf
dec
es
sbb
sbb
std
ja
jmp
lahf
jo
dec
jl
aas
xchg
insb
in
int
jno
out
push
push
cmp
xchg
fwait
inc
inc
mov
jns
ljmp
cmp
add
add
adc
outsl
xchg
fstpl
mov
mov
mov
addb
test
adc
push
jae
and
cmp
ret
push
mov
andnps
sub
pop
cmp
mov
sti
sbb
push
cmp
jle
xchg
icebp
xchg
mov
insb
in
xchg
jl
repnz
sub
scas
push
test
dec
in
jecxz
jg,pt
test
loop
jp
aad
stos
fisttpl
movsl
ret
pop
sbb
lea
sti
enter
add
call
jl
jmp
mov
lds
cmp
fidivrl
subl
mov
inc
push
inc
push
movsb
add
mov
mov
cmp
mov
out
lock
das
xchg
cmp
cltd
inc
push
les
dec
js
dec
adc
in
into
lcall
es
inc
add
jge
sbb
xchg
dec
inc
sub
fstpl
cld
mov
mov
outsl
popf
aaa
les
cwtl
loop,pt
sub
xor
add
in
mov
divb
shrl
scas
jecxz
push
stc
lcall
jecxz
jns
imul
push
xor
sbb
mov
mov
stc
and
adc
mov
je
cmp
outsb
dec
xchg
outsl
in
xor
lea
lods
adc
test
cmpsb
push
mov
out
cmp
mov
xchg
cmp
inc
push
and
push
pop
inc
scas
lods
fwait
outsl
mov
out
sbb
inc
fimuls
and
mov
or
daa
sub
loop
or
pop
ja
mov
adc
pop
outsb
fs
gs
test
mov
mov
xchg
test
lods
imul
fidivs
loope
out
in
inc
mov
pusha
lret
push
aaa
les
dec
mov
cltd
cmovle
mov
outsl
mov
dec
inc
cmp
or
adc
insb
cmpl
aaa
xor
xor
xchg
jecxz
and
pusha
out
enter
pusha
es
leave
sbb
std
pop
push
loope
push
jb
jo
push
mov
daa
lret
fsubr
jo
or
movsl
adc
in
mov
and
pop
dec
stos
push
rcl
inc
shlb
cs
mov
push
mov
hlt
fistpll
out
mov
sub
insl
dec
aam
out
rcll
add
xor
sub
jle
fwait
adc
xlat
pop
in
data16
dec
iret
push
dec
push
loopne
inc
aaa
mov
inc
cwtl
int
in
add
mov
sarb
mov
sbb
or
add
and
inc
cld
push
adc
jp
mov
in
daa
sub
cmp
in
dec
int3
jb
out
clc
mov
sbb
cmp
movsl
mov
fisubrl
gs
sbb
dec
and
push
cld
cmp
push
xchg
mov
sub
sub
push
sub
mov
fnsave
inc
out
outsl
mov
faddl
lea
jne
mov
pop
cltd
lret
movsb
imul
aaa
sub
lret
sbb
jmp
push
pushf
and
dec
les
dec
xor
pop
dec
outsl
daa
ficomps
pop
sub
fsubr
mov
dec
popf
idivb
sub
ret
xor
movsl
mov
test
loopne
es
inc
mov
pushf
cld
or
and
jno
dec
loop
lds
xor
fwait
jae
mov
rolb
dec
ss
and
mov
aaa
sbb
fstpt
mov
test
lcall
stc
xchg
mov
jg
loope
mov
sarb
mov
aad
mov
dec
xchg
movsl
gs
mov
adc
filds
xorl
jae
and
mov
pop
stos
push
mov
and
cmc
jecxz
push
js
xor
imul
loope
arpl
dec
xor
ja
mov
mov
jae
fs
pushw
cld
pop
and
cmp
adc
fimuls
je
xlat
mov
push
gs
dec
dec
cmp
xchg
xchg
cld
mov
sub
mov
adc
jo
xchg
jnp
mov
sub
ljmp
out
aaa
outsl
insl
test
adc
sub
push
xchg
stc
cwtl
jae
rolb
out
stos
push
add
test
movsl
add
out
lock
in
fists
and
jnp
psubw
sub
push
mov
inc
sub
add
jnp
pop
popf
sti
out
or
dec
fs
and
lea
push
int3
jae
inc
dec
mov
int
fimuls
ss
add
jle
shll
stc
push
pop
fsubrs
int3
mov
and
add
mov
or
cmp
lcall
mov
ds
sbb
mov
aad
and
inc
xchg
push
adc
dec
mov
xchg
test
pop
adc
mov
and
inc
movsl
rolb
sub
xor
movsb
mov
push
lock
cmp
bound
sbb
xchg
mov
dec
push
or
fldl
xchg
jnp
jmp
ja
mov
faddp
cmp
les
jmp
push
inc
or
xchg
add
imull
sbb
rol
test
mov
and
sub
jle
cltd
add
aas
dec
outsb
xchg
sbb
dec
xor
movsb
sbb
and
mov
dec
cmp
mov
and
popf
popa
gs
nop
dec
xchg
int3
fcoms
mov
std
std
cmp
dec
lea
or
daa
or
xor
jo
ret
ret
cmpsl
enter
cmp
std
xchg
mov
pop
jno
lahf
cmp
cltd
xchg
dec
add
push
pop
adc
push
fdivrl
fdivs
mov
push
cmpsl
into
je
aam
mov
repnz
pusha
rcrb
or
loopne
dec
add
lahf
cmp
pushf
mov
seta
insb
lahf
xlat
mov
outsb
or
movsl
into
push
arpl
push
les
cmp
and
cwtl
mov
rcrl
imul
sub
add
sbb
push
inc
rorb
sub
dec
jl
add
inc
jbe
inc
xchg
adc
jno
subl
fprem1
xor
mov
lcall
push
sbbl
mov
shrb
jmp
mov
pop
ja
das
xor
mov
fnsave
inc
orl
aaa
in
popf
in
out
xchg
jecxz
sub
cmpsl
mov
push
ljmpw
nop
ljmp
pushf
bound
imul
insl
call
notb
or
cli
popa
jb
or
rol
sub
or
add
cld
pop
xchg
idivb
fildll
jne
ror
or
push
push
cmpsl
mov
or
xchg
add
or
enter
or
test
ret
jnp
fistpl
insl
in
xchg
test
xchg
xchg
roll
decb
push
sub
adc
std
xchg
mov
cmp
sub
and
xor
mov
aaa
data16
xor
jns
sub
mov
repz
ret
inc
rorb
push
pop
shr
sub
lods
andl
hlt
stc
jge
rorb
mov
push
sbb
and
adc
sahf
and
lret
mov
scas
arpl
ret
popa
pop
sub
cld
test
push
into
sub
fstl
xchg
out
lds
pop
movsl
push
adc
inc
aas
and
mov
pop
add
outsb
mov
jle
cmp
and
aas
test
push
add
sbb
sub
in
jno
jbe
lock
inc
leave
dec
jge
xor
in
imul
andl
xchg
fidivl
sbb
hlt
adc
mov
jecxz
call
push
movsb
sub
sub
sub
cltd
test
add
call
jl
push
mov
inc
mov
arpl
add
test
mov
push
xchg
inc
inc
or
jmp
add
mov
shl
dec
inc
fdivl
xor
mov
mov
movsb
dec
pop
pop
push
xor
cmpl
sbb
push
aaa
mov
cmpsb
lea
mov
andb
and
cmpsb
pop
jmp
xchg
stc
enter
cwtl
adc
out
aam
sbb
aas
out
lahf
xchg
mov
cli
subl
loop
js
dec
xchg
inc
cld
or
xchg
test
add
movsb
jnp
out
sbb
sub
xor
mov
sti
push
pushf
or
into
hlt
movsl
xor
repnz
xchg
cmp
cld
cmp
enter
in
fstl
jns
mov
fcomp
cmpb
xor
ja
inc
push
add
not
fcompl
fisttpl
out
sbb
inc
xor
xor
ds
int
ljmp
sub
mov
stc
mov
xor
gs
fcompl
arpl
xchg
push
mov
cmp
call
addr16
add
shl
or
rorl
mov
add
mov
jmp
xor
xchg
sbb
or
sub
push
ljmp
inc
cltd
adc
pop
push
aam
aaa
adc
pop
adc
xor
idiv
cs
imul
sbb
mov
in
sub
movsb
nop
test
jl
movsl
add
add
test
icebp
sbb
mov
roll
das
pushf
cmp
or
dec
cmp
fcmovnu
and
mov
sub
dec
aam
mov
mov
fxch
les
xor
cmpb
pop
mov
icebp
movsl
mov
or
cmpsb
scas
push
pop
and
out
aas
bound
jg
shrb
clc
sbb
add
negl
cs
mov
fimull
push
scas
iret
cli
fldenv
or
rcll
sbb
lahf
divl
out
inc
xlat
fistps
fdivp
and
add
adc
sbb
test
testl
in
and
dec
and
push
xor
sbb
mull
js
jnp
es
sub
sarl
inc
std
ret
popf
fistps
and
pop
out
gs
popa
stos
clc
dec
xor
sub
or
cmp
push
enter
cmp
not
sub
or
in
test
pop
lahf
and
fsubrs
jp
testb
repz
dec
xchg
mov
push
sbb
imul
fcmove
cmp
jno
into
inc
cmp
or
jg
lcall
test
and
das
hlt
shrb
addb
push
sub
mov
ret
enter
cmp
std
jbe
arpl
push
stos
or
aas
aas
cli
iret
shrl
ret
sub
xchg
lds
movsl
pop
lock
fidivrs
in
dec
stc
or
push
sub
sub
jb
addr16
sub
xor
aaa
xlat
jno
push
add
mov
xchg
jp
push
cld
js
loopew
nop
xor
bound
pop
pusha
loop,pn
stos
popa
fcoms
mov
sti
and
push
int3
stos
mov
aad
fsubs
lret
pop
test
sub
sti
cmp
pushl
sbb
sbb
mov
mov
or
mov
sub
in
push
or
inc
and
aaa
mov
pop
mov
push
imul
and
iret
add
les
sub
adc
dec
sub
in
out
mov
mov
mov
stos
cmpsl
jb
fists
ret
jno
lahf
adc
daa
xchg
repnz
mov
inc
xor
xor
clc
aaa
or
xchg
mov
xchg
jg
fucomip
dec
inc
mov
sbb
pop
xchg
add
loopne
cmpsl
xchg
xchg
lods
inc
sub
mov
jecxz
dec
push
jp
popf
xchg
mov
mov
ljmp
pop
int
pop
pop
inc
xor
jg
jle
fildll
jmp
push
sbb
gs
mov
cli
mov
mov
dec
test
aad
lods
sbb
and
cmp
outsb
jmp
push
adc
push
in
mov
mov
mov
cmp
pop
add
mov
jne
inc
stos
pause
jle
shlb
adc
xchg
aaa
cmc
das
add
out
pop
insb
mov
adc
jno
jb
shl
ficompl
adc
daa
push
sbb
gs
lock
mov
mov
push
jb
sahf
sti
das
push
mov
mov
mov
xchg
repz
mov
jmp
mov
aaa
outsb
ds
repnz
inc
fsubrs
out
push
test
into
xlat
insb
sbb
push
mov
shlb
dec
sub
inc
inc
loope
jae
push
mov
out
xchg
dec
push
vpsubb
out
cmp
js
pop
rorb
daa
stc
pop
ja
dec
imul
mov
mov
mov
and
test
arpl
sub
cmp
xlat
dec
xchg
fnstcw
and
je
sbb
add
cwtl
mov
xor
mov
fs
fimull
cs
sbb
pop
mov
sub
idivl
mov
pop
and
cltd
mov
push
cmpsl
pop
fmuls
adc
cmpl
out
dec
mov
pop
in
mov
lahf
cmp
mov
cmp
xchg
mov
fnstsw
test
adc
out
or
inc
not
add
mov
ret
lods
push
pop
dec
and
popl
cmpsb
jge
jmp
pop
or
fldt
cmp
es
cmpsl
push
int3
cltd
mov
stc
ljmp
movsb
ss
insb
sbb
inc
loop
sub
pop
jo
int
std
lods
dec
xchg
xchg
roll
inc
fdivp
pop
sub
mov
sbbb
dec
push
or
dec
jbe
enter
and
cwtd
sub
mov
repz
fidivrs
shl
pop
test
into
push
sub
mov
aam
std
mov
mov
lods
pusha
mov
outsb
das
inc
mov
adc
mov
mov
hlt
lahf
and
lret
mov
sub
cltd
mov
aad
or
or
cmpsl
std
psllq
out
rcr
mov
and
mov
pop
pusha
cltd
push
sub
cmpsb
nop
insb
jbe
daa
lret
push
scas
lcall
lds
sti
pop
fnstsw
and
sti
add
icebp
xor
rcll
ret
sbb
mov
xchg
lock
scas
add
xor
and
test
mov
push
cltd
xchg
fwait
dec
outsb
mov
mov
mov
pop
lea
adc
shll
mov
imul
mov
inc
inc
dec
inc
push
push
xchg
or
mov
dec
push
dec
mov
cmpsb
fs
inc
test
dec
dec
push
mov
pop
in
cmp
arpl
cmp
or
fwait
sahf
pop
cmp
xchg
sub
int
test
out
int
xorl
and
xchg
fdivp
jp
add
pop
push
stos
mov
in
into
addr16
lcall
mov
arpl
rcrb
repnz
dec
mov
mov
push
mov
cmp
push
push
mov
gs
pusha
test
dec
fdivs
cmpsl
mov
cltd
push
in
jb
mov
sub
int3
add
mov
dec
andps
cli
mov
fstl
idiv
ss
and
push
pop
shll
xchg
in
ret
xchg
dec
cmpsl
xor
push
sub
push
cmp
cmovno
or
cld
test
dec
orb
pushl
mov
adcb
in
cwtl
xchg
hlt
sub
adc
test
mov
or
cmp
rorb
push
insl
pop
gs
xor
dec
xchg
sbb
push
adcb
scas
mov
cmpsl
sbb
lods
lods
jle
xor
scas
mov
mov
pop
imul
cs
push
mov
movsl
out
into
pop
inc
in
imul
add
jno
jmp
xor
jg
lcall
lcall
loope
mov
shlb
mov
xor
pushf
aaa
repnz
cmp
into
mov
xchg
js
fisubs
int
into
and
jns
inc
jle
inc
shll
inc
ret
or
outsl
outsb
orl
dec
cmpsl
push
sbb
stc
mov
int
xlat
rorb
dec
push
inc
mov
mov
js
and
pushf
out
mov
pop
clc
into
pop
test
mov
testl
aad
jge
mov
xlat
sbb
call
aam
iret
mov
daa
mov
inc
inc
jl
pop
add
mov
xchg
and
pop
push
daa
je
leave
sub
add
js
insb
int
pop
fbstp
scas
inc
mov
incb
cld
jge
mov
jnp
xor
call
and
leave
jg
leave
in
aas
or
cmpsb
cmp
jns
jp,pn
shl
dec
out
sbbl
mov
xor
int3
lcall
sub
into
fs
push
imul
test
inc
dec
insl
add
inc
int3
sbb
or
xchg
or
cmp
push
and
xchg
stos
xchg
fwait
xor
and
stc
aad
stos
mov
sbb
bound
inc
sub
stos
mov
pop
mov
pop
and
mov
cmp
stc
lcall
in
mov
fisubs
inc
popf
or
and
cwtl
push
mov
pop
fldl
es
push
jb
pop
movsb
inc
imul
pop
xor
popf
pop
fisubrl
mov
and
and
sub
dec
jge
pop
jg
sbb
call
pop
jae
mov
fcomi
pop
cmpsb
cli
pop
scas
ficompl
xor
jbe
andb
mov
jne
push
jl
sahf
push
call
sub
repz
mov
lods
mov
rcll
add
out
cltd
and
hlt
inc
pop
push
sub
sarl
bound
push
fucomip
xchg
xor
outsb
std
divb
mov
jo
in
cmp
xlat
mov
js
lcall
jecxz
and
test
sarl
xchg
sbb
gs
push
adc
pushf
xor
and
roll
xor
pop
and
xor
popa
adc
xchg
jle
icebp
cs
aas
sub
sbb
incb
xchg
cmp
mov
sub
push
lret
add
push
push
xor
mov
push
in
mov
and
or
pop
adc
shrl
jb
inc
enter
push
stos
mov
add
dec
arpl
push
mov
popa
push
cltd
jmp
push
cmp
and
push
mov
sub
lahf
test
imul
adc
or
test
dec
push
out
add
push
mov
hlt
adc
mov
test
lds
xor
mov
dec
clc
scas
xor
daa
ret
and
loopne
rorl
int3
je
dec
mov
push
xchg
jmp
aas
jge
push
out
add
or
add
jle,pt
push
cmp
jbe
out
pushf
test
lods
and
xor
xchg
cld
fisubrl
loopne
adc
or
and
icebp
stos
jae
out
pop
data16
in
adc
mov
xchg
shrb
iret
mov
adc
loopne
xchg
dec
mov
cmc
sub
cmc
lea
imul
mov
repz
pop
cmp
push
mov
insl
js
push
jmp
insb
int
dec
ja
stos
cs
outsb
das
pop
push
paddsb
sbb
fwait
xor
movsl
and
aaa
add
mov
aaa
cmovp
call
pop
into
mov
dec
push
fpatan
pop
mov
arpl
push
pop
pushf
lea
jb
adc
fsubrl
addb
push
and
sub
dec
mov
jmp
push
fisubs
mov
dec
sbb
iret
xchg
testl
xchg
dec
hlt
lock
iret
mov
jl
sub
pop
lahf
lods
cmpsl
add
leave
push
mov
pop
xor
fucomip
add
or
sub
add
mov
pushf
scas
lcall
ss
cwtl
push
push
inc
cwtl
imul
or
xchg
insl
pop
fstps
jmp
insb
mov
stc
jmp
fidivrl
jl
pop
sahf
clc
insl
and
dec
jp
adc
jno
shrl
mov
jmp
nop
inc
mov
jnp
mov
das
pop
frstor
dec
mov
sbb
leave
dec
fstps
out
dec
mov
jae
outsl
mov
and
mov
fisttps
and
lods
or
lahf
arpl
test
mov
aaa
jg
rcll
xchg
add
add
scas
mov
sub
shll
inc
out
jno
dec
imul
bound
rorl
sub
shr
cwtl
hlt
dec
dec
sub
or
int3
mov
xor
lock
cmpsl
mov
sub
stc
jns
inc
mov
pop
shrl
pop
js
jbe
mov
mov
rcll
insl
inc
mov
popa
fcmovbe
mov
insl
mov
out
push
push
in
nop
sub
dec
fmull
or
add
rclb
ja
lret
fnstsw
pop
cld
das
aam
mov
arpl
std
mov
sub
pop
outsl
scas
push
mov
inc
fwait
cmp
mov
cmp
xchg
idivb
pop
iret
mov
inc
leave
insb
adc
xor
inc
jbe
fdivr
xor
pop
xchg
fidivrl
in
xor
mull
push
mul
aas
pop
idivl
in
inc
ficompl
xchg
lods
add
fildll
mov
gs
inc
jmp
xchg
or
fs
sti
xor
daa
sti
dec
fs
push
in
sub
pop
push
iret
cmp
out
data16
add
add
sub
js
and
cltd
sub
das
out
push
inc
cmpsl
xor
cmc
pop
pop
in
out
les
loope
pop
es
or
xchg
shr
inc
lret
in
leave
loopne
fst
std
lods
sub
jae
mov
scas
cwtl
xor
xchg
stos
movsb
iret
add
outsb
iret
dec
pop
push
sub
nop
in
jno
inc
mov
call
pop
lcall
mov
push
mov
and
insl
add
outsl
lds
cmp
mov
std
loope
add
aaa
dec
dec
pop
lret
inc
push
aaa
daa
pop
pusha
lods
mov
xor
das
push
pop
cmp
aad
sarb
push
dec
or
icebp
ficoml
sub
fisttpll
mov
mov
addr16
lods
xor
pop
scas
js
cmc
mov
gs
mov
xorl
xchg
push
insb
scas
decl
cmp
in
mov
mov
lret
rorb
addl
cmc
sub
imul
push
bsf
or
hlt
lret
mov
lret
jne
imul
sti
addr16
jmp
and
loop
mov
pop
xchg
xorl
mov
jns
pop
push
push
jmp
pop
pop
cmpsb
loopne
mov
pop
iret
push
pop
dec
hlt
jno
push
add
push
or
sbb
and
sub
add
push
pop
xchg
data16
out
ljmp
data16
mov
inc
jmp
push
jbe
mov
cmp
fistl
decb
push
xchg
mov
sarb
loop
test
and
std
push
pop
imul
pop
mov
jne
insb
cmp
push
dec
stc
xchg
data16
or
aam
mov
incl
out
es
popa
repnz
jae
mov
mov
movsl
lods
dec
test
adc
sbb
int
frstpm(287
stos
dec
xor
fsubr
inc
dec
cmp
xchg
push
xchg
xor
or
dec
mov
sbb
push
jl
outsb
in
int3
in
pop
jp
dec
fs
and
cmpsl
jmp
loope
daa
sub
jp
popa
mov
adc
movsl
ret
xchg
mov
add
fwait
cmpsl
lahf
or
xchg
fsubrs
andl
mov
outsb
repz
movsb
mov
push
and
cmc
sti
adc
pavgw
into
push
fsubr
fcoml
jecxz
addl
scas
in
xchg
sahf
data16
sub
mov
push
mov
call
aam
scas
sub
sbb
icebp
mov
sub
lods
pop
xchg
inc
pop
loope
or
cwtl
call
cmp
lret
das
dec
sbb
xor
sbb
icebp
cmp
pusha
adc
addb
insb
sub
xchg
push
adc
and
mov
fcmovne
pop
les
mov
inc
scas
push
dec
adc
lea
rclb
xchg
adc
push
outsb
rcrb
jae
adc
jge
jb
lret
pop
leave
sbb
popf
hlt
movsb
inc
mov
dec
leave
inc
inc
insb
mov
mov
mov
pushf
insb
cmp
add
mov
sti
inc
lods
dec
loope
sub
push
ja
pop
inc
push
int3
stc
in
xchg
sahf
mov
jo
scas
js
iret
mov
cli
lret
je
popl
dec
or
imul
loop
push
xchg
dec
inc
or
or
cmp
pop
cmp
add
arpl
sbb
in
icebp
and
sub
jl
ror
pop
pop
and
int3
out
insb
cwtl
mov
out
cli
jbe
mov
out
xor
fidivrl
push
mov
movsl
cs
pop
cmp
iret
sub
push
clc
add
mov
mov
sub
test
add
mov
lcall
insb
ljmp
daa
ds
hlt
xchg
mov
xchg
cmpsb
dec
mov
test
test
dec
pop
push
sbb
pop
cmpb
and
fs
push
dec
lods
mov
icebp
fildll
sub
iret
iret
sub
stos
test
pop
mov
inc
outsb
mov
mov
inc
cmpl
pop
cmp
orb
xchg
cmpl
cwtl
and
xchg
std
mov
mov
roll
or
sbb
mov
adc
out
cmp
movsl
mov
inc
pop
or
test
lcall
pop
sbb
push
clc
cs
movsl
imul
test
mov
rclb
xchg
jb
cld
ljmp
jb
mov
fwait
inc
std
es
pop
fiaddl
add
cmc
mov
and
gs
negl
jl
pop
leave
imul
pop
lret
pop
jmp
jl
mov
cmp
lcall
jb
outsl
js
push
pop
fnstsw
dec
into
dec
rol
and
mov
jle,pn
push
ffree
out
ret
fldenv
jo
lods
cltd
mov
sub
sti
mov
and
repnz
xchg
adc
cmc
loop
dec
sub
xor
scas
sub
and
cmp
push
loopne
mov
xor
fisubrl
inc
fiaddl
fwait
in
mov
nop
aad
mov
mov
out
sbb
mov
push
sbb
rclb
ljmp
movsb
addl
or
stos
imul
cmp
les
out
mov
sub
sub
in
push
xchg
mov
mov
out
mov
inc
sbb
fptan
sub
fimull
cmp
cmp
lcall
rorb
iret
inc
jmp
loope
or
mov
je
outsb
push
mov
aaa
push
sbb
mov
mov
gs
sbb
xor
out
addr16
mov
and
test
xchg
leave
lds
repz
lods
xor
pop
sbb
test
cmpsl
lcall
icebp
sti
icebp
adc
sbb
push
fstl
and
aaa
psubsw
cmp
js
sub
xor
or
pop
lods
cmp
cmp
je
jnp
cmc
addr16
int
test
cmpl
outsb
cmpsl
movsl
ror
stos
jns
lret
sahf
in
and
orb
mov
cmp
pop
add
pop
popa
clc
jge
mov
and
mov
push
mov
cmp
ja
pop
cmp
notb
jmp
je
push
aam
xlat
cld
mov
xchg
sbb
test
out
gs
mov
test
mov
out
xchg
les
in
cmp
or
add
mov
mov
sbb
mov
mov
ss
test
mov
jo
jl
test
xchg
cmpsl
adc
out
sub
fmuls
testb
addb
imul
add
jmp
out
ficomps
xor
sub
call
cli
outsb
xor
adc
mov
ja
add
outsb
les
xchg
and
jns
pop
adc
dec
shrb
pop
xor
inc
cmc
jle,pn
cmp
cld
cs
pop
mov
sahf
mov
sub
or
xlat
inc
aas
xchg
insl
cmp
decl
lret
testl
lea
adc
xor
mov
pushf
pop
rolb
xchg
movb
pop
insb
jns
imul
add
pusha
inc
cmp
adc
and
adc
fldcw
and
or
hlt
icebp
ret
addr16
insl
outsb
lcall
adc
mov
pop
mov
or
scas
adc
subb
sarl
pusha
inc
push
fcomps
inc
or
add
in
or
scas
in
aam
test
add
lods
ljmp
gs
pop
adc
xor
data16
mov
add
add
jbe
push
or
xchg
xchg
mov
xchg
clc
out
mov
imul
inc
test
mov
mov
sahf
lahf
sarb
fistpll
mov
jge
cmp
movsl
insb
ficoms
push
jnp
test
outsl
pop
loope
dec
xor
add
jne
ret
in
mov
and
xor
mov
lcall
mov
mov
inc
fadds
inc
push
push
mov
cmpsl
lea
adc
stos
aaa
div
inc
push
dec
bound
cmp
pop
sub
cltd
xor
iret
adcl
hlt
ljmp
inc
mov
out
rol
test
fdivr
shrb
outsb
mov
movsb
push
push
jno
sti
dec
mov
stos
pop
imul
or
inc
push
sti
cmp
push
call
inc
mov
call
test
mov
pop
ret
rorb
adc
lcallw
inc
cmp
loopne
sbb
je
mov
cmp
jge
ret
sub
mov
dec
xor
mov
movsl
bound
fimuls
sub
jp
mov
das
fstps
push
xchg
sahf
lock
aad
ds
fld
xor
cmp
or
push
mov
mov
std
push
pushf
mov
add
mov
xchg
inc
jo
push
aaa
cs
testb
mov
fmul
mov
sbb
int
cmpsb
xchg
and
popf
mov
daa
add
lods
push
outsb
push
addr16
ja
mov
out
mov
xor
mov
daa
jb
pushf
sbb
inc
es
pop
ljmp
mov
mov
movsb
cmc
out
cwtl
push
ret
xchg
das
mov
outsb
fistpll
jno
xlat
nop
mov
or
loop
inc
bound
aam
pop
test
mov
sti
inc
mov
decl
pop
mov
pop
lds
mov
lds
je
test
adc
push
hlt
dec
inc
push
sbb
or
lock
lds
rclb
inc
mov
rcr
jae
addr16
and
mov
cmp
pop
push
cmp
fadds
iret
or
mov
push
push
aam
and
mov
inc
in
push
or
sub
outsl
popf
iret
out
cmpsb
mov
jle
int3
int3
mov
adc
xchg
fcomp
push
mov
cs
jnp
data16
mov
xchg
push
push
das
mov
xchg
add
adc
les
inc
pusha
adc
dec
push
mov
sbb
add
neg
jo
sub
mov
push
nop
inc
push
arpl
in
lea
std
aam
ret
xor
stos
movsl
xchg
mov
in
add
cmpsl
add
sbb
sahf
add
repz
cmpb
frstor
adc
inc
pop
shrl
dec
rolb
pop
jne
ljmp
mov
jae
inc
xor
orb
test
push
jno
cs
aas
das
pop
push
ret
data16
cwtl
push
pop
add
xchg
mov
bound
pushf
mov
rorl
stos
mov
mov
or
push
addl
jae
fists
inc
lret
push
loop,pn
xor
je
mov
add
out
push
lock
sub
push
pusha
ret
and
xchg
sbb
pop
lods
adc
out
mov
mov
jmp
popa
jmp
and
dec
push
xchg
and
or
adc
ja
sub
add
sahf
cmp
int3
jae
jmp
and
dec
or
repz
test
adc
fbld
jmp
push
mov
test
xor
fldt
aas
sub
fnstsw
xchg
xchg
les
pop
test
movsb
cmc
in
pop
jg
int
loopne
loop
mov
jp
in
sub
xchg
call
cmp
inc
adc
push
dec
clc
push
mov
clc
mov
fldenv
inc
xchg
cmp
mov
xchg
adc
xchg
stos
std
push
jle
in
daa
jnp
add
stc
int3
loopne
gs
push
cmpsb
mov
jne
cmp
filds
int3
and
pop
pusha
cmp
jo
xor
aad
jns
mov
mov
mulb
dec
jnp
sub
xchg
mov
mov
fldcw
cmp
dec
out
ja
test
int3
mov
incb
mov
inc
pop
dec
mov
inc
push
lds
shl
or
into
xchg
or
mov
mov
rcll
xchg
rorb
fstp
xchg
or
into
push
sbb
cs
loopne
lds
sbb
push
cmp
std
popa
mov
pop
orb
or
lret
inc
add
out
aas
mov
add
add
ljmp
lret
mov
sbb
xor
mov
cmp
adc
jmp
cmp
mov
mov
and
bound
or
jp
and
xor
xchg
loope
lret
push
push
stc
fidivrl
cld
sbb
dec
shlb
sbb
and
dec
fwait
dec
adc
inc
subl
pop
mov
sub
dec
mov
push
add
fsubl
movsl
add
aas
pop
daa
es
cmp
jb
iret
jg
ror
es
sub
inc
xlat
cmp
ficomps
add
push
mov
push
sbb
in
xor
loope
xor
fbld
xor
hlt
cmp
jno
sbb
push
mov
scas
xor
and
push
lock
daa
cmp
sub
loope
pmuludq
loop
push
idivb
dec
rol
pop
clc
iret
jp
cmp
ret
dec
les
dec
les
rcll
outsl
jecxz
rcll
cld
xchg
mov
addr16
ret
das
mov
inc
jg
scas
pusha
std
loope
arpl
cmp
cltd
jne
out
sub
or
mov
es
jg
mov
movsl
push
mov
mov
outsl
sub
xor
test
sub
push
pusha
imul
push
les
add
mov
push
movsl
shll
jle
dec
xlat
mov
xchg
int3
popa
lret
xlat
ja
movsl
out
std
mov
adc
js
fwait
clc
ret
xorl
jne
mov
or
in
xor
dec
loop
jae
and
mov
negl
pop
icebp
and
outsl
inc
jg
into
push
mov
sub
jp
and
aaa
dec
movsb
cmp
clc
in
cs
in
out
jmp
or
rorb
sbb
sbb
insb
int3
jnp
sbbb
fistps
mov
mov
shrb
and
cli
push
or
mov
and
mov
mov
and
jae
mov
sbb
leave
adc
test
sbb
mov
mov
xor
repnz
xchg
mov
xor
xchg
in
cs
xchg
sbb
mov
sub
jl
jl
dec
subb
inc
loopne
mov
push
push
jae
lret
pop
sub
or
cmovb
mov
scas
mov
dec
int
ds
clc
sbb
xchg
iret
notl
mov
xor
xor
in
inc
pop
int3
movsb
mov
imul
ret
mov
lds
or
cmp
aas
leave
subb
data16
imul
sbb
arpl
jg
int
test
idivl
pop
mov
and
lods
fsubr
out
mov
adc
pop
mov
or
push
sar
fwait
mov
hlt
pop
xor
mov
ss
mov
clc
mov
sbb
in
stos
int3
sub
cmp
test
mov
shr
js
outsb
test
rorl
push
sbb
mov
iret
iret
stos
sub
push
imul
out
out
or
es
mov
or
dec
xchg
sub
scas
sahf
cmp
cmp
pushf
mov
and
adc
cmpsl
shll
test
push
push
fsubr
lcall
inc
xchg
sub
mov
pop
mov
fcompl
adc
movsb
mov
insl
insl
inc
and
inc
daa
mov
dec
pop
dec
jge
popa
xor
sbb
int
and
jae
add
xlat
push
xchg
fbstp
sub
cmc
lcall
repnz
sbb
das
xor
jp
pop
incl
push
fwait
mov
mov
or
mov
aaa
scas
sbb
adc
pop
pushf
mov
add
adc
mov
call
xchg
fbstp
pop
adc
mov
jnp
mul
ficomps
in
push
push
adc
sub
rclb
js
sbb
add
mov
inc
scas
pop
scas
insl
pop
inc
push
shll
ja
js
movsb
sub
fdivrl
xor
push
xchg
js
dec
data16
and
lods
cmp
dec
adc
xchg
int
pop
push
cwtl
sbb
xor
push
xorb
push
xchg
dec
loop
jae
push
jle
out
repnz
test
lret
dec
dec
mov
fstl
out
mov
mov
imul
sub
inc
roll
xor
movsl
or
sbb
sub
or
xchg
popa
icebp
jae
jb
push
push
lahf
aaa
jbe
out
pop
jecxz
addr16
xchg
aaa
pop
push
aas
or
dec
paddd
push
cwtl
sarl
add
aas
clc
jbe
jne
fldl
test
xorl
cmpl
mov
xor
cmpps
xchg
add
fldcw
jno
pop
idiv
xchg
and
inc
xor
lret
jae
shll
cmp
adc
push
repz
add
enter
xor
jnp
shr
adcl
pusha
jmp
mov
adc
mov
gs
rcrb
mov
in
mov
lods
mov
out
jbe
mov
xor
push
push
ret
dec
or
bound
insb
xchg
popa
mov
out
int
inc
xor
mov
push
cmpsl
push
cmp
loop
fidivl
pop
arpl
pop
test
pop
es
add
scas
dec
out
in
iret
or
mov
mov
jne
adc
sub
in
decl
orl
sbbb
cwtl
lea
mov
xchg
and
add
enter
mov
cmc
cmp
or
cwtl
inc
or
push
inc
lods
cmpsb
push
ret
dec
cmp
pop
adc
nop
and
cld
and
outsl
es
mov
push
mov
andb
jns
push
andl
jl
xor
test
xchg
lods
push
fistps
test
pusha
xchg
jl
incl
mov
jge
and
fsubr
pop
jo
pop
push
push
outsb
and
lock
mov
push
les
xchg
cmp
pop
push
dec
jecxz
adc
adc
push
std
xchg
dec
xorb
aad
mov
mov
insl
lea
ret
test
jne
pop
stc
shl
push
sbb
adc
dec
add
jl
sub
push
or
mov
and
lods
stc
mov
stos
mov
mov
inc
cvtdq2ps
mov
mov
cmp
cmp
pop
test
add
aam
and
sarb
push
add
jp
jl
cmp
fldl
add
and
fbstp
test
and
sub
lea
cpuid
fiadds
test
xor
cmpb
and
mov
fists
mov
sub
cld
push
xor
cmpsb
inc
jl
mov
pusha
xchg
pop
adc
push
inc
add
add
adc
cmpsl
jns
dec
mov
mov
lret
cmp
and
dec
jnp
sarl
or
iret
loopne
loopne
or
mov
jne
pushf
jmp
ret
mov
cmp
and
mov
clc
push
mov
lcall
loop
inc
test
enter
xor
jmp
sbb
mov
fsubs
fcmove
mov
cli
xor
xchg
dec
pop
lds
decl
call
mov
inc
les
shlb
mov
xchg
ret
jns
daa
add
rcrl
mov
es
jp
aaa
cmp
ja
or
call
jae
and
sbb
nop
push
mov
scas
cmp
popa
add
adc
dec
mov
dec
aad
ret
adc
cmpsb
inc
mov
push
test
ret
lret
in
call
cs
sbb
jns
xor
add
pop
nop
js
cmp
dec
jp
sbb
aas
inc
cs
daa
add
insl
sahf
mov
rcrl
mov
unpcklps
mov
cs
inc
xchg
pushf
fldt
jbe
movsb
mov
fldenv
in
jl
int
les
ds
pushf
xor
or
mov
xchg
aad
jp
loopne
adc
das
in
adc
scas
int
out
in
mov
push
sub
lret
das
and
or
jo
es
mov
push
xor
mov
int
push
sub
and
inc
sub
adc
push
mov
addl
pop
idivb
popa
cmp
adc
out
rcr
scas
popa
jge
test
roll
call
cmpl
cwtl
aad
fs
push
ja
push
call
in
cltd
ljmp
imul
xor
je
outsb
idivl
jg
jmp
jb
in
mov
in
fcoms
cmc
pop
mov
dec
js
nop
cmp
xor
add
and
pop
data16
jb
sahf
into
enter
cmp
in
and
jmp
sarb
sbb
xchg
repz
cmp
cli
mov
jno
and
aaa
repz
mov
adc
and
xchg
mov
ja
cmp
je
or
sub
pop
in
test
jno
push
cmpsl
icebp
mov
fwait
add
lock
dec
pop
or
cmp
jle
inc
ret
ror
sub
or
and
xor
xchg
scas
out
mov
sub
inc
add
push
xchg
mov
xchg
lea
leave
stc
jno
push
mov
iret
add
adc
mov
ss
call
dec
out
stc
test
cwtl
lods
xor
leave
iret
rcll
je
movsl
sbb
cmpsb
enter
lock
mov
pop
fistpll
das
btr
lcall
out
inc
in
repz
or
mov
cwtl
aam
dec
cmp
movsl
cmp
cmpsl
rcll
icebp
popa
mov
jne
mov
mov
out
enter
adc
or
out
and
cmpsb
std
xchg
aad
lds
cmc
imul
mov
sarb
jp
cltd
sbb
shl
xchg
pop
mov
and
rolb
push
inc
or
push
and
xchg
bound
ret
fistps
dec
pop
xor
lods
sarb
lret
pop
sbb
mov
cmp
clflush
dec
push
mov
cld
ret
insb
lahf
jnp
fsub
sti
and
and
sbb
push
out
outsl
jl
add
inc
xchg
inc
pop
icebp
nop
cmp
push
ljmp
mov
cmp
add
cwtl
inc
mov
loop
iret
push
push
testl
mov
mov
push
in
shll
btr
ja
jnp
adc
cmp
xchg
addr16
mov
lods
inc
pop
jg
outsl
push
xor
fwait
imul
inc
lret
repz
xchg
xchg
jns
popf
ret
pop
mov
cmp
cs
sahf
idivb
in
stc
stos
xor
decb
xchg
out
or
aaa
repnz
lret
mov
xlat
jge
and
ret
mov
or
or
mov
popa
in
jne
lods
test
rol
sbb
cmpsl
mov
mov
out
lds
sbb
dec
add
xor
mov
and
inc
mov
sub
stos
incb
xchg
popa
xchg
lods
jbe
sbb
lea
cmc
jmp
fisubrs
out
fldenv
add
sub
mov
sbb
sbb
fiaddl
cmc
dec
xor
sub
test
test
cwtl
sbb
je
lods
dec
mov
jle
and
cmp
in
sbb
mov
ret
lock
fistpl
pop
mov
test
movsl
scas
add
mov
xlat
fdivrl
jns
xorl
pop
push
mov
push
add
mov
mov
fmul
mov
cltd
aad
pop
jp
loopne
int
xor
jo
fwait
cmp
mov
cs
add
imulb
add
lods
jmp
in
std
pop
clc
xor
mov
add
dec
pusha
push
jmp
sub
xor
or
fiaddl
ds
scas
mov
int
sub
xchg
sahf
xchg
inc
push
inc
ss
sub
jbe
outsb
test
add
cmp
sbb
jo
cmp
add
add
sbb
lahf
jo
pop
push
leave
sbbb
mov
dec
mov
repz
bound
aad
mov
inc
cwtl
les
movsb
xchg
dec
imul
jae
call
call
dec
shr
loop
in
or
mov
mov
lock
out
and
repnz
cmpsb
popf
push
test
std
imul
cmp
imul
ljmp
push
in
in
add
jb
sbb
stos
adc
les
daa
int3
jp
cld
shl
test
mov
add
xchg
cwtl
push
sub
imul
adc
cmp
xchg
sbb
sub
aaa
cs
sbb
loop
jle
add
sub
lcall
sub
fsubs
xchg
and
or
lds
fiaddl
dec
mov
mov
adc
filds
and
mov
insb
and
out
ret
xor
sti
adc
push
or
imull
pop
shlb
into
int
fstl
inc
push
and
push
cltd
pusha
xlat
xor
push
push
in
or
add
rorb
mov
lcall
xchg
jb
loopne
push
test
sbb
cmp
gs
dec
dec
sbb
shll
ss
pop
xchg
in
jg
sub
pop
adc
bswap
aam
xchg
cli
sub
lret
mov
cmp
fidivrl
xlat
dec
das
loope
pop
in
idivl
test
jecxz
pop
cmp
daa
jo
ret
mov
aaa
and
xchg
xchg
fldl
int3
cmpsl
mov
sbb
repnz
rorl
sbb
mov
sub
lods
andb
jne
mov
lds
jmp
fwait
cmpsl
rorb
scas
dec
mov
mov
fildll
gs
xor
dec
push
movntq
dec
ljmp
add
imul
xor
fstpl
lods
sub
std
ror
rclb
ficoml
outsl
mov
and
mov
add
ss
jno
aam
xchg
sub
xlat
rorl
nop
iret
jae
jae
repz
notl
scas
loope
xchg
xchg
pop
jnp
lret
xchg
cld
xchg
stos
ss
xchg
loop
cmp
shl
inc
pop
cmp
jmp
and
xchg
dec
lret
hlt
add
mov
stos
adc
xlat
cli
loop
sub
ss
add
inc
push
stos
test
dec
ljmp
mov
pusha
jns
cmp
imul
cmp
sub
imull
cs
xor
inc
fs
xor
push
out
lret
pop
sti
or
jb
push
push
sbb
add
jmp
movsl
xchg
scas
jb
xchg
and
rcrb
lahf
mov
or
inc
sub
mov
stos
mov
mov
and
inc
decl
xor
sub
call
sbb
adc
repnz
push
mov
arpl
mov
leave
mul
scas
pushw
xchg
jg
and
inc
push
adc
cmp
repz
in
adc
pop
test
jnp
adc
sbb
es
stc
push
movb
jno
inc
inc
ret
and
mov
push
ljmp
inc
loop
es
dec
mov
out
xchg
add
gs
pause
and
xchg
xchg
xchg
dec
nop
mov
jae
lret
fcomps
jnp
push
call
test
mov
movntq
out
test
or
jo
cmp
stos
mov
jle
insl
adcl
adc
jmp
push
ret
movsb
adc
test
jmp
jl
or
sahf
inc
sarb
fwait
popa
push
lock
cmp
mov
faddl
fcoms
xchg
xchg
addr16
dec
int
pop
sbb
mov
push
mov
out
mov
push
adc
js
lea
cmpsb
or
imul
pop
cmpl
stos
pop
pop
jo
add
daa
iret
inc
mov
add
jb
jno
pop
xchg
mov
mov
in
aaa
cmpsl
ss
jmp
je
ffreep
daa
or
mov
daa
fisttpl
inc
sub
mov
mov
daa
cltd
insl
sub
mov
sti
xor
jb
xor
dec
sbb
or
xor
das
xor
int3
adc
and
xchg
out
movsl
pushf
jecxz
aaa
pusha
lock
movsb
les
ds
inc
test
lods
aad
push
and
jb
push
test
pop
imul
jl
or
jp
jno
repz
sbb
xchg
int3
sbb
xchg
popa
fisttpl
gs
aas
std
push
lods
xchg
inc
fwait
into
popl
inc
dec
push
inc
push
pop
sbb
xor
pop
ljmp
test
pushf
pop
mov
movb
jnp
mov
inc
sub
push
pop
test
mov
add
cmc
mov
fidivrl
push
push
push
and
mov
add
mov
enter
jecxz
int
jno
test
dec
cld
mov
popf
cld
movsb
lret
ret
ret
lods
outsl
adc
push
inc
dec
out
cld
shlb
dec
jle
xor
push
mov
movsb
adcl
xor
or
enter
push
mov
cmpsb
adc
or
push
jo
and
sub
cwtl
pop
test
inc
int
xchg
ret
and
adc
mull
pushf
dec
push
aaa
jae
adc
cmp
push
aad
outsl
xchg
mov
and
mov
adc
cld
push
out
loopne
mov
repnz
push
pop
rorb
repz
cmpb
and
xlat
push
test
mov
push
inc
into
adc
mov
dec
popa
decl
clc
xor
repz
add
pusha
inc
sbb
add
idiv
arpl
mov
pushf
clc
pusha
addr16
cmpsb
mov
pop
nop
or
cld
call
inc
sbb
or
fldenv
mov
inc
cmp
jecxz
fs
jle
pop
sub
mov
out
sub
andb
aaa
stos
insb
insb
adcl
dec
inc
inc
loope
jle
aas
xchg
icebp
dec
dec
mov
cmp
or
xchg
xchg
cwtl
xchg
decb
xchg
pop
shl
pop
lock
sar
test
mov
orb
test
pop
lods
fbld
sub
ret
enter
inc
mov
imul
sub
popf
inc
jns
mov
pop
imul
stc
gs
mov
sub
and
movsl
pushf
hlt
lods
inc
adc
cmp
loopne
jbe
dec
jp
dec
pusha
pushf
test
add
xchg
xor
mov
sbb
addl
xor
fists
fmuls
in
jo
cmp
cmpsl
movsl
loop
aad
adc
xchg
mov
push
pushf
xor
mov
ss
stc
sbb
and
mov
jno
mov
xor
aas
mov
movsb
xchg
mov
jge
pop
lods
mov
xchg
bnd
mov
adc
addb
and
dec
repz
dec
lret
orb
jmp
scas
std
inc
shr
mov
xor
add
xchg
sub
jne
cmp
xor
cmpsb
or
xchg
mov
je
fsubl
push
push
xchg
xor
rcll
or
leave
rcrb
hlt
dec
jb
add
push
arpl
int
mov
retw
add
xchg
inc
add
adc
mov
je
mov
add
mov
fbld
jbe
jo
fimuls
sbb
mov
mov
and
push
lods
dec
mov
repnz
test
lcall
sbb
leave
dec
push
cli
mov
cwtl
cmp
inc
push
push
inc
out
pop
sbb
fidivs
int
pop
call
cltd
xor
cmp
adcb
test
ret
mov
dec
push
sahf
xchg
push
push
aad
lods
rclb
pusha
imul
jmp
ret
cmp
inc
jp
add
push
xor
aas
sub
aad
jle
xchg
mov
std
repz
fldl
clc
out
psubq
inc
jp
mov
xchg
push
sbb
jecxz
mov
jl
cmp
mov
out
cltd
add
push
push
rcll
adcl
rcrl
pop
and
cmp
add
adc
cmpsl
cmp
pop
cli
inc
aaa
pop
out
add
mov
daa
push
std
sbb
hlt
mov
jbe
loop
mov
stos
jl
mov
cmp
push
lea
push
mov
lods
mov
inc
xor
lods
pop
mov
negb
scas
aaa
push
add
mov
je
mov
into
mov
sbb
hlt
cmovl
loop
out
mov
orl
jl
lret
xchg
push
scas
inc
xchg
xor
mov
mov
cmp
outsl
jp
mov
ret
repz
sub
mov
ds
xor
pop
aas
in
sub
int
jb
cmp
xchg
jbe
add
pop
sub
fiadds
cmp
loopne
mov
jb
jno
int3
repnz
jne
fwait
subl
push
shl
pop
dec
cltd
add
mov
test
xchg
fcompl
jns
movl
ss
sbb
adc
rcll
jl
pop
add
movsl
in
and
leave
adcb
pop
divb
cmpsl
ljmp
dec
mov
adc
arpl
push
and
jp
xchg
cmp
xor
paddsw
insb
lret
scas
pop
and
cld
fs
aad
ret
pop
mov
sbb
dec
push
mov
inc
rorl
out
mov
sbb
xchg
or
pop
dec
push
mov
int3
andl
arpl
or
sub
ja
repz
or
fdivrl
pmaxsw
mov
cmp
inc
mov
ja
xchg
jbe
or
inc
mov
fcmovnu
xchg
aaa
fisubl
not
adc
cmp
push
or
and
pop
insb
clc
int3
inc
pop
jg
mov
mov
movsb
mov
xchg
sbb
ja
test
shlw
into
and
lods
nop
inc
fsub
xchg
adc
xchg
popf
scas
dec
fidivrl
inc
or
push
mov
out
dec
mov
jbe
ljmp
jge
lahf
lods
sbb
mov
push
shlb
xlat
or
js
pop
xchg
outsl
iret
sub
mov
in
xchg
mov
std
in
addr16
sbb
push
xchg
sbb
cmpsb
in
test
test
sbb
mov
sbb
mov
and
outsb
jmp
cltd
mov
cmp
jl
xchg
out
mov
dec
xor
mov
pushf
xor
mov
inc
xor
jle
andb
lods
insb
or
aas
or
or
les
adc
jl
jecxz
outsb
inc
jnp
add
mov
dec
cmpl
adc
push
adcl
sahf
popf
test
inc
gs
shr
jp
cmp
lahf
scas
out
pop
mov
and
leave
jl
xchg
mov
xor
mov
mov
adc
aad
sub
scas
inc
shrb
inc
lcall
mov
ret
xor
int
pop
mov
mov
pop
xor
outsl
sub
cld
cmp
es
cmp
push
lret
shl
xchg
sbb
lret
cltd
adc
or
xchg
ficoml
jmp
cld
mov
sbb
dec
gs
mov
push
cwtl
dec
push
out
rcll
filds
and
mov
cmpb
aam
and
fistps
adc
icebp
mov
cli
lods
mov
sbb
decb
int
mov
xchg
or
movsl
cmp
or
add
lcall
es
push
mov
mov
pushf
bound
andb
cltd
mov
insb
xchg
stos
or
lahf
jbe
rcl
push
repz
inc
ficompl
adc
aad
mov
mov
ficompl
std
jp
fldz
xor
insl
pop
pop
cmp
sbbl
or
scas
test
sbbb
ret
pop
mov
xor
sbb
xchg
jge
adc
xchg
xchg
dec
cwtl
lcall
scas
and
adc
jne
jnp
jnp
mov
pop
xchg
jo
jae
mov
enter
outsl
sub
mov
inc
out
rorl
inc
inc
repnz
push
sahf
inc
add
and
sbb
add
inc
outsl
pop
out
int3
mov
add
rcll
push
pop
adcb
add
icebp
mov
int
add
repnz
lcall
jmp
or
push
mov
xlat
inc
xchg
ljmp
mov
mov
fsubr
stc
xor
popa
adc
ja
aaa
sub
pop
hlt
pop
lea
pop
sub
dec
cmp
data16
rolb
jl
enter
ds
ret
sub
insl
jmp
pop
add
fadds
aad
fmuls
stc
or
or
inc
dec
lods
mov
cs
fildll
lcall
xchg
pushf
idivl
sub
push
in
sub
xor
xor
cmp
sub
ret
xor
mov
aad
mov
sahf
or
adc
icebp
mov
in
repnz
sub
jns
pop
or
inc
test
xor
xchg
pop
iret
pop
mov
cli
fsubs
xchg
idivl
dec
stos
out
cli
dec
xchg
jge
test
inc
dec
inc
mov
test
rclb
jo
sbb
mov
dec
jae
repnz
push
adc
std
xor
pop
jns
movsb
int3
stos
iret
sbb
mov
pop
jne
rcrb
xchg
in
sbbl
icebp
dec
test
pop
adc
add
sbb
push
sarb
out
add
stos
fstpl
mov
pop
cld
leave
sub
test
mov
out
xor
in
test
sub
mov
hlt
jne
movsb
sub
jge
ds
lock
adc
push
sub
out
push
push
scas
ljmp
sbb
adc
inc
inc
inc
lods
push
jecxz
xchg
aad
shlb
cmp
xchg
xor
adc
negl
cmp
pop
push
xchg
fiadds
sub
xchg
sbb
lcall
xor
or
mov
add
enter
and
pop
and
dec
call
popa
push
dec
inc
cmpsl
out
push
or
jns
mov
dec
fidivs
cmpl
mov
jne
outsl
rcl
xlat
je
xchg
imul
mov
clc
mov
jmp
mov
sti
and
in
mov
xor
inc
adc
loop
bound
mov
and
sbb
or
push
scas
or
movsb
fcmovnbe
mov
outsb
dec
shl
popa
xor
xchg
movups
xchg
xor
bound
in
xor
xlat
xchg
xor
cmp
push
data16
mov
sbb
inc
outsl
mov
divsd
arpl
mov
mov
add
cmp
leave
mov
psrad
push
movsb
inc
xchg
lods
testl
push
inc
mov
lret
push
dec
pop
mov
cli
lcall
jmp
popa
xchg
mov
push
es
jl
sti
push
ljmp
sub
dec
sbb
fs
out
icebp
in
pop
add
in
addr16
sub
lock
mov
pop
mov
pop
jbe
shlb
pop
mov
lds
aad
aas
and
fidivrl
in
inc
mov
ds
xorl
xor
into
sar
mov
popf
jno
outsl
mov
lcall
nop
mov
mov
push
push
adc
into
xor
pop
test
pop
movsl
ret
loop
cmpsb
js
shrb
push
xchg
xlat
mov
shlb
push
jne
movsb
notl
and
into
sbb
mov
jne
into
jl
ja
pop
rcrb
mov
sahf
jb
mov
adc
cld
pop
sti
add
pushf
lcall
mov
inc
lods
mov
stc
rep
cld
lahf
les
dec
les
out
mov
ror
out
push
out
bound
xchg
movsl
enter
pop
adc
add
push
and
jae
dec
mov
mov
dec
xchg
sbb
stos
shll
pop
adc
mov
stos
rcr
popf
enter
sbb
pop
out
arpl
aad
ficoml
cmp
aam
jecxz
aam
int
js
inc
add
popa
mov
mov
jne
in
movsb
dec
lods
inc
push
andb
jb
hlt
mov
xlat
test
data16
sahf
add
shlb
lret
pop
dec
xlat
sar
jno
add
mov
push
and
jge
jp
outsb
mov
sbb
test
mov
xchg
into
je
mov
pop
dec
stos
je
pop
pushf
nop
pop
xchg
xchg
fsubrs
stos
daa
or
lods
cmp
js
js
imul
cmp
jp
mov
cld
ss
jg
push
and
insb
fsubrs
inc
fcomps
mov
mov
pop
push
mov
or
xchg
or
pusha
jl
bound
call
add
inc
xchg
or
mov
push
fsts
cmpl
bound
outsb
xor
push
rcr
and
pop
scas
add
pop
add
jecxz
aad
or
pop
loopne
xchg
pusha
or
push
xchg
ret
arpl
mov
inc
dec
cmp
les
gs
dec
pop
lahf
cmp
add
je
fdivrs
or
hlt
dec
pop
mov
mov
push
mov
testb
sbb
inc
nop
cmp
adc
cltd
iret
add
adc
jo
gs
and
repnz
data16
gs
mov
lcall
or
shlb
sub
ds
sahf
loop
das
fwait
out
push
push
mov
es
or
sahf
jmp
call
enter
adc
jmp
adc
popf
lahf
out
insl
mov
cld
xchg
or
mov
out
inc
insb
gs
ret
notl
or
mov
shr
mov
cmc
sti
xor
xchg
loope
jg
jg
add
hlt
sub
lcall
mov
gs
adc
fistpl
insl
or
sub
aam
nop
mov
sbb
sub
cmpb
rolb
loope
add
outsl
mov
test
clc
mov
inc
into
push
xor
add
cwtl
push
nop
xchg
scas
nop
out
mov
xor
lock
lea
lods
imul
je
mov
cmp
sbb
orb
sbb
mov
jo
aas
sbb
xor
cli
insb
and
mov
or
xorl
pop
movsl
imul
mov
lea
mov
mov
sbb
pop
sub
das
mov
test
inc
xlat
jno
sbb
dec
in
jg
es
mov
test
jg
xchg
fdivrl
into
out
mov
out
mov
xchg
inc
loopne
repnz
dec
adc
mov
or
popf
lods
pop
roll
mov
push
xor
push
inc
push
aaa
dec
jb
dec
mov
mov
jae
cltd
jmp
mov
mov
dec
daa
mov
call
scas
popf
jecxz
jmp
jno
inc
inc
sahf
xchg
das
pusha
dec
inc
hlt
jns
pop
imul
stos
inc
fadd
mov
icebp
insb
mov
out
lret
daa
mov
mov
out
ret
out
jp
sub
xor
jle
inc
dec
or
inc
mov
imul
jnp
sbb
sbb
data16
or
jnp
sbb
dec
clc
dec
out
aaa
jmp
adc
out
push
or
mov
jae
cmp
jb
lcall
dec
dec
popa
sbb
cmpsb
rcrb
decl
inc
jnp
adc
cmp
std
dec
ret
into
aad
mov
cmpsl
xchg
mov
test
jge
out
sub
xchg
mov
addl
cmp
dec
fwait
imul
inc
iret
pop
fs
out
test
push
mov
loopne
fwait
jo
outsl
cltd
into
fdiv
xchg
cld
pop
cmpsb
in
and
iret
fidivrs
or
xor
inc
dec
sub
pop
icebp
cli
push
jb
or
sahf
ret
pop
xchg
outsl
shl
push
add
push
adc
fmull
cmp
or
mov
lea
sahf
rcll
pusha
xchg
cmp
sbb
add
ret
mov
jnp
mov
mov
mov
ljmp
es
testl
or
jb
xlat
inc
fsts
mov
rorb
aaa
js
pop
pushf
fst
jnp
or
shll
cmp
mov
push
bswap
shl
iret
mov
je
loope
hlt
sbb
mov
nop
sub
fnstcw
pop
jl
sub
insl
add
in
cltd
fiaddl
and
fstpl
cmp
push
movb
mov
jge
nop
fnstsw
jecxz
and
dec
rcrb
out
xchg
sub
test
cmp
sbb
aam
lock
and
adc
pop
jmp
lock
fidivs
ss
hlt
pusha
jge
mov
test
popa
outsb
sub
pop
icebp
aaa
adc
mov
roll
add
push
mov
int
cwtl
and
pop
mov
not
ss
lods
pop
rcrb
mov
xor
mov
fildll
imulb
xor
dec
aas
arpl
out
shr
xor
stos
das
das
inc
push
pop
lcall
sbb
mov
pop
lret
outsl
test
add
sub
push
int
stos
sub
punpckhwd
daa
lret
int
imul
in
mov
mov
mov
fsubrs
movsb
out
out
movsl
or
repz
das
and
xchg
or
sub
fwait
mov
or
mov
jle
jnp
loop
mov
shlb
std
push
and
and
dec
fucom
rclb
mov
mov
movsl
mov
lcall
jnp
test
xor
int3
ret
test
xor
sub
mov
pop
cmp
in
pop
xor
adc
push
xlat
fcmovb
int3
mov
push
push
xchg
push
loope
lock
in
rcrb
sub
popf
add
mov
es
and
and
sar
xor
movsb
sub
push
loope
pop
ret
pop
sub
lods
into
xor
adc
xor
mov
cld
arpl
rclb
pop
loopne
fidivl
adc
mov
and
push
push
clc
pusha
cmp
dec
mov
fsubl
loop
adc
nop
xor
cmc
insb
jmp
stos
mov
sti
sbb
aam
ds
xor
shrl
repz
jge
mov
shrl
inc
ret
imul
cmpsb
ja
out
inc
into
jo
hlt
lds
dec
std
mov
mov
adc
xchg
push
and
iret
xchg
push
mov
jbe
mov
test
xor
push
mov
subl
xchg
stc
xchg
and
js
pop
sub
pop
ret
lods
call
jbe
or
mov
imul
int
add
je
es
fcoml
cli
xchg
cmp
inc
ljmp
xchg
cmp
and
cmp
icebp
sub
ss
movsl
push
cmp
mov
out
push
pop
fcom
insl
add
loope
adc
js
xor
daa
xor
pop
dec
fildl
test
xchg
push
mov
sahf
mov
subb
cmp
jno
insb
int
outsb
insb
loope
outsb
insb
adc
mov
push
xor
outsb
push
pop
repnz
push
in
dec
shl
in
inc
ret
xor
add
jns
push
test
push
out
mov
xchg
fdivrp
inc
sub
iret
cmp
sti
sub
sahf
shll
cs
push
imul
lahf
shrl
cmc
adc
scas
fstps
mov
sub
insb
mov
push
push
sbb
aad
push
les
sbb
jne
mov
mov
ret
cld
loope
add
push
cwtl
in
idivl
mov
mov
push
scas
push
pushf
xor
cwtl
pop
hlt
xor
jbe
fnstsw
lret
not
dec
fsts
sahf
ja
subl
add
and
loope
xchg
movsb
jae
mov
aam
in
push
sbbl
fs
xor
repnz
xlat
or
call
leave
cmp
jo
push
adc
sub
cmpsb
pop
lret
repz
data16
cltd
push
dec
mov
dec
sub
sbb
push
shll
sbb
or
stc
mov
lods
mov
das
addr16
mov
cwtl
shrb
imul
fstp
loope
mov
addr16
divl
mov
lret
insl
hlt
pop
jbe
lods
cmp
ret
mov
popf
xor
icebp
std
into
adc
and
inc
sbb
scas
aaa
cmpsb
mov
les
cmp
repz
xor
and
shll
xchg
lcall
pop
in
js
outsl
add
int
push
addr16
and
xlat
push
aam
aam
push
pop
pop
mov
inc
lea
popa
xlat
addr16
add
add
jne
and
xchg
repnz
mov
add
inc
mov
mov
lcall
jmp
push
jnp
xchg
test
mov
leave
das
repz
loope
push
push
insb
or
mov
pop
push
xor
sti
mov
push
cmpsl
mov
cmp
and
ljmp
gs
aam
cli
ljmp
jae
mov
je
push
push
cmp
cmp
jns
dec
add
aaa
out
inc
add
jg
pop
shlb
jno
push
sbb
mov
mov
mov
mov
out
imul
lods
repz
sahf
mov
push
shrl
stos
mov
and
in
in
popa
and
or
in
dec
cmp
xchg
out
xor
pop
sub
cmp
rcrl
mov
xchg
mov
push
aam
and
xor
lcall
mov
cmc
bound
aad
inc
add
add
push
and
outsb
push
push
cli
push
push
test
movsl
rcll
push
xor
sbb
pop
xor
loope
mov
adc
lret
inc
cmpsl
pop
sub
aaa
test
test
mov
and
cmp
pop
inc
scas
fimull
std
mov
add
outsl
icebp
lea
dec
push
mov
in
mov
fwait
inc
popl
mov
pop
in
pop
in
clc
shlb
out
aam
push
mov
cmc
fnsave
push
and
scas
sti
or
cmp
test
push
jmp
pushf
xchg
mov
shlb
daa
xchg
out
js
xchg
jp
xor
sub
lock
mov
or
mov
mov
cmp
imul
mov
test
or
in
jg
pop
push
mov
iret
mov
mov
pop
cwtl
adc
mov
pop
insl
mov
push
mov
lock
rcrb
adc
and
cwtl
sbb
mov
jl
popfw
sbb
pop
in
out
bound
push
xchg
nop
or
and
test
ret
and
push
sbb
mov
jbe
mov
call
push
adc
jmp
imul
loopw
lods
dec
out
stc
ss
aas
jle
daa
sbb
sbb
xor
ffree
aas
in
or
movsb
pop
push
inc
rorb
fstpt
sahf
mov
xchg
dec
pop
adc
cmp
add
dec
ret
xor
adc
fadd
inc
aam
cmp
inc
mov
pop
lock
or
loopne
adc
dec
repz
xor
inc
loope
cld
push
jmp
daa
mov
jbe
lahf
and
push
out
enter
sbb
lds
call
mov
sbb
xor
stos
sub
inc
xchg
sub
andb
dec
subb
sub
xor
or
test
xchg
inc
clc
daa
jle
or
call
enter
cmp
push
sbb
push
inc
repnz
lods
mov
mov
sbb
mov
dec
insb
outsl
fbstp
push
lods
mov
jl
cmc
mov
mov
inc
xor
int
loop
xchg
xor
frstor
iret
clc
inc
insl
dec
pop
cwtl
or
pop
dec
adc
inc
jle
adc
pushl
pop
out
loope
or
adc
addr16
ljmp
mov
xchg
mov
popa
push
add
pop
adc
mov
cli
rorb
and
or
icebp
outsl
pop
xchg
mov
push
ret
mov
xor
outsb
push
jo
push
out
pop
fisubl
cwtl
mov
pop
lcall
inc
mov
push
jns
in
fistpll
ljmp
add
add
mov
cli
push
or
push
lahf
std
scas
outsl
movsb
mov
rclb
rolb
mov
lods
cwtl
les
icebp
and
sti
int3
fwait
das
fisttps
jmp
mov
pop
nop
xchg
xlat
xchg
xor
and
repnz
push
mov
out
push
in
cmpsl
sbb
xchg
repnz
shll
and
loop
cmp
inc
push
ret
sbb
push
jg
lcall
mov
push
sahf
cmp
data16
shll
push
notl
stc
cld
mov
bound
mov
test
cltd
dec
inc
mov
fdivrp
hlt
sbb
pop
ja
pushf
shll
stc
inc
cld
push
xor
dec
out
imul
jnp
jb
cmpsb
negb
lahf
shlb
daa
dec
dec
adcl
mov
icebp
fiadds
sub
aad
fisubs
mov
imul
hlt
pushf
pusha
pop
xor
scas
nop
js
or
lret
nop
out
cmp
push
test
cmp
cmpsl
and
dec
subl
push
jo
push
iret
mov
mov
pusha
pop
sahf
lds
rcrb
push
sub
pop
jg
test
shrl
jle
mov
add
cmp
add
cmp
pop
xchg
jecxz
iret
pop
or
cltd
or
adc
das
and
cmp
jns
sub
in
cmc
push
pop
hlt
fisttps
sub
push
fnstsw
cmpb
fs
inc
push
jbe
jecxz
jae
lret
add
adc
mov
pop
stos
stc
mov
sub
cwtl
scas
mov
stc
or
add
inc
jle
in
mov
test
les
fistpl
cwtl
push
fsubrp
in
push
fimuls
dec
sub
loope
sub
cmp
cmp
in
les
mov
out
or
sbb
shr
pop
mov
mov
movsl
sbb
test
inc
mov
sbb
mov
adc
or
nop
xor
into
push
cmpsl
cmpsl
in
mov
leave
and
lret
into
sub
movsb
fdivrs
cmpsb
enter
sbb
lret
cli
xchg
loop
bnd
arpl
pop
mov
mov
xor
or
sub
jg
inc
pop
push
outsl
inc
cmp
std
push
push
jns
or
shrl
sub
outsl
jle
pushf
cli
in
sbb
cs
cmp
lret
out
sahf
les
mov
xor
out
js
cld
mov
and
pop
dec
jno
push
add
dec
sbb
dec
mov
and
or
adc
lds
lods
mov
jns
loop
js
shrl
or
dec
adc
add
stos
xchg
mov
or
adc
add
jmp
and
push
pop
outsl
add
cmp
and
data16
mov
lock
popa
je
ljmp
jecxz
call
sbb
add
adc
pop
mov
mov
shrb
push
dec
add
movsl
mov
or
xchg
inc
mov
out
testb
inc
mov
mov
xchg
movsl
jb
insb
addr16
iretw
push
sbb
adc
hlt
fnstcw
adc
mov
es
jno
xchg
mov
adc
jno
push
lcall
jno
fdivrl
movb
xchg
jns
sbb
hlt
lcall
into
data16
sbb
fs
xchg
cltd
enter
dec
scas
sbb
fs
sbb
mov
push
pop
xor
call
cmc
xchg
std
add
inc
popa
aas
lock
sub
add
fdivrs
inc
adc
adc
out
cmp
mov
mov
dec
call
divl
test
shlb
cmp
pusha
sbb
loop
cmp
inc
in
in
jne
scas
unpcklps
xchg
test
movsl
mov
mov
sub
loope
daa
je
pop
ja
pop
mov
or
idivl
xchg
aas
or
pop
push
pop
inc
daa
jae
jp
adc
aaa
repnz
les
and
ret
subl
inc
xor
rcll
cmp
push
xor
push
test
add
xchg
push
sahf
inc
lock
push
hlt
ds
movsl
dec
into
jecxz
jns
test
cmp
adc
mov
cmp
pop
jmp
cmp
push
xchg
lea
adc
adc
into
loop
dec
cmpb
jbe
daa
dec
and
movsl
or
fildl
mov
adc
push
xor
in
sub
add
mov
sbb
jno
push
and
jge
push
push
ja
fucom
xor
xchg
xor
mov
push
test
insb
orl
mov
rorb
in
jno
push
mov
fidivs
pop
jecxz
and
xrelease
lods
pop
cmpsl
pop
dec
stos
mov
shll
mov
subb
mov
cs
and
dec
out
and
mov
je
rcll
jns
xchg
dec
fwait
add
mov
lret
cmp
nop
fsubl
cmpsb
pop
pop
cmp
sub
je
lods
mov
sbb
testl
jecxz
hlt
nop
jo
std
or
mov
cmp
push
or
sbb
in
in
sahf
nop
sub
loope
push
pop
int3
shrb
clc
fnstenv
sbb
adc
daa
out
cld
add
xor
mov
data16
add
rcr
push
add
push
shl
xor
push
mov
push
movsl
sahf
mov
in
xlat
dec
or
sub
aaa
sar
sbb
cmpl
ret
inc
stc
fmull
lds
fisubrl
shr
sbb
std
cmpsb
lahf
jl
gs
jne
imul
cmp
mov
jg
pop
push
fldt
sub
loope
dec
lock
sarb
nop
xchg
inc
addr16
mov
jg
add
mov
sbb
test
adc
mov
lods
sti
xchg
bound
imul
push
or
or
rclb
ss
mov
push
mov
jns
sbb
xchg
add
leave
push
mov
stc
lret
int3
sbb
clc
push
push
dec
mov
insl
jo
iret
jnp
ss
pop
aam
dec
cld
mov
notl
xor
cmp
stc
fistps
insl
and
jo
fcmovnbe
cmpb
jge
jle
cmp
fsubrs
inc
inc
stos
jl
inc
and
mov
out
xchg
dec
test
movsl
out
or
andb
fadd
dec
sub
fdivr
mov
testl
xor
scas
fdivrl
cwtl
sbb
in
pushf
repz
or
hlt
jp
push
mov
mov
stc
jnp
xor
rolb
xchg
sbbb
mov
addr16
sub
sbb
cmp
icebp
test
xchg
mov
xor
pushl
dec
movsl
dec
lahf
pop
inc
mov
repz
fcmovne
loop
inc
cmpsl
outsb
pop
test
mov
imul
adc
out
push
orl
inc
mov
xor
in
pop
sbb
rcl
jl
xor
pop
and
xor
dec
cmpsl
test
lods
pop
js
sbb
jge
push
clc
push
cmp
adc
xor
push
and
mov
mov
lods
test
xchg
or
push
inc
push
and
sub
cmp
inc
lcall
and
hlt
jbe
ret
into
sbb
add
ret
push
jge
mov
sub
insl
sub
adc
inc
dec
cs
mov
push
out
dec
push
xchg
jo
mov
dec
push
push
mov
iret
clc
push
pop
fldenv
jno
rcrl
leave
mov
jno
test
test
aas
test
sub
imul
xchg
xor
aam
orb
jge
add
push
push
jl
stos
jne
jno
cmpsb
pop
push
jo
lds
push
dec
rorb
xchg
adc
adc
aam
shrl
ja
stos
sub
fs
inc
iret
sbb
arpl
sbb
adc
sub
or
jns
scas
cmp
xor
filds
push
jbe
fnstenv
insb
icebp
nop
and
xchg
roll
and
xchg
xor
push
xlat
filds
cmpsl
pop
lods
mov
sbb
fstpt
sbb
sub
pop
repz
sub
mov
pop
cwtl
push
out
xlat
cmp
jecxz
scas
xchg
lret
and
pop
or
sar
push
mov
out
lock
loope
shlb
scas
pop
dec
cmp
dec
sbb
mov
cltd
jmp
imul
mov
mov
adc
mov
fcoms
xor
outsb
movsl
adc
dec
adc
pop
xchg
ret
jnp
jo
and
mov
push
data16
mov
in
stc
jp
or
xchg
or
xor
push
stos
mov
xor
test
gs
test
cwtl
dec
push
adc
adc
std
xlat
icebp
add
mov
loopne
loopne
sbb
stos
lret
or
popa
je
mov
aas
mov
push
inc
jne
shll
jae
mov
sub
out
mov
mov
out
leave
and
mov
push
xchg
inc
adc
cmp
das
mov
in
stos
iret
std
adc
pop
inc
ficompl
sbb
lods
cmp
call
push
scas
push
fucomip
fiadds
mov
cltd
frstor
jg
add
les
aaa
add
cmpsb
cld
movsl
pop
imul
popa
jg
scas
push
xchg
sarb
mov
mov
inc
mov
mov
rcrl
fwait
and
fmul
jmp
shld
pop
push
push
mov
fsubrl
mov
xchg
add
cmp
std
out
in
lahf
xchg
inc
lds
mov
arpl
pop
or
and
inc
fbld
movsl
movsl
pop
push
fisubl
jb
stc
aaa
sbb
scas
add
adc
ret
jl
cmpsb
sbb
jle
ja
scas
inc
int3
scas
lods
adc
and
enter
push
shll
cmpsb
sbb
and
inc
pop
js
dec
xor
mov
or
sbb
sbb
int
mov
adc
loope
scas
and
mov
test
add
lcall
jmp
pop
ds
lds
and
jae
inc
xchg
imul
pop
int3
jmp
bound
xchg
pop
mov
add
insl
add
xor
push
and
insl
jge
ret
and
pop
in
xchg
push
jp
push
add
sub
clc
je
mov
lods
jle
sahf
cwtl
outsl
rorb
out
jb
enter
bound
data16
fadd
add
shll
ret
and
jns
fisubrl
mov
cli
and
or
lods
mov
or
addr16
push
fisttps
adc
pop
cmp
xchg
iret
imul
mov
push
xchg
sub
adc
lds
mov
cmc
in
loope
inc
stos
sub
pushf
seta
dec
out
sbb
in
add
lret
mov
add
adc
cmpsl
push
jnp
mov
inc
es
inc
mov
dec
pop
test
imul
jbe
jne
fmulp
mov
jg
insb
je
xlat
mov
push
jmp
dec
push
dec
cmp
divl
jo
inc
mov
pop
xor
pop
adc
outsb
ds
fs
sub
pop
loope
lret
xor
mov
jle
mov
push
dec
fcmovu
cwtl
xchg
in
or
adcb
mov
jne
mov
fildl
dec
sbb
scas
sar
aas
pop
cld
ret
fstpl
stos
mov
cmp
and
dec
cld
sahf
rcrb
and
lock
xchg
inc
inc
dec
xchg
xchg
jecxz
outsl
jg
imul
in
jg
and
jge
cmpsb
lods
add
pop
loope
adc
dec
mov
gs
adc
inc
mov
xor
sub
pop
adc
shlb
add
xchg
dec
adc
dec
mov
mov
setae
adc
mov
mov
out
jns
mov
aaa
mov
sbb
in
sub
in
push
fsubs
mov
pop
cld
jle
xchg
jns
stos
pop
cmpsl
test
jns
jmp
sarb
out
enter
sub
test
inc
add
dec
sub
movsb
mov
out
cmpsl
mov
xchg
add
jo
lcall
pop
je
in
lret
jbe
xchg
hlt
outsl
ret
inc
jne
test
fnsave
into
sti
pextrw
push
add
mov
sub
fs
clc
rorb
jae
stos
sub
lret
mov
inc
jecxz
jge
jge
nop
fcmove
dec
inc
pop
icebp
mov
into
xor
mov
add
loope
add
push
jmp
fsub
mov
xchg
mov
xchg
lods
dec
es
push
fadds
sub
fildll
adc
aam
add
jg
lahf
jo
push
mov
fwait
hlt
adc
je
stos
mov
jbe
pop
xor
add
inc
std
xchg
mov
xchg
and
out
dec
adc
mov
sbbl
daa
lods
xchg
pop
mov
pop
or
mov
cli
ret
jmp
push
adc
inc
lea
and
sbb
jecxz
int
xchg
sbbl
loop
push
cmp
popf
mov
int
fs
push
mov
icebp
cs
decl
push
aaa
mov
xchg
aam
shlb
addr16
mov
xor
movsb
adc
out
adc
mov
ja
cmp
out
inc
mulb
add
inc
jo
lret
mov
adc
push
stc
daa
add
or
daa
fisubs
rclb
outsb
sub
in
test
lds
outsb
and
mov
dec
jge
mov
cli
sbb
add
stc
mov
pop
nop
testl
mov
xchg
bound
rcl
cmp
mov
pushf
ret
psubq
ficoml
ja
movsl
ja
rolb
xchg
pop
scas
inc
mov
xor
fnstenv
push
push
test
and
lock
mov
incb
stos
pop
sbb
call
pusha
mov
dec
or
xor
sbb
mov
movsl
jp
add
add
mov
pop
mov
lock
or
inc
into
loop
or
mov
ret
sub
mov
xor
and
mov
pop
rcrb
mov
adc
add
testb
mov
sub
xchg
adc
test
rclb
outsl
mov
insb
xchg
pop
adc
or
cmpl
sti
mov
adcl
out
pop
mov
leave
in
xchg
and
mov
lods
sub
push
pop
ss
mov
rcrl
test
mov
mov
mov
inc
mov
inc
adc
sbbl
adc
mov
sbb
cltd
push
icebp
fistl
loopne
ret
notb
lock
lret
cmpsb
stos
hlt
in
mov
loope
movsb
out
jns
sub
xor
and
jo
arpl
data16
lods
mov
loope
gs
inc
sub
adc
push
cmpsb
repnz
cld
popa
daa
or
test
sbb
push
test
pop
pushl
and
cmp
dec
and
addr16
call
js
in
sub
push
aaa
lds
movsb
es
mov
xlat
rcr
pop
add
fdivr
sbb
mov
mov
fnsave
push
daa
roll
jmp
pop
add
dec
inc
jl
add
int3
fwait
div
sub
repz
jp
mov
cmp
xchg
or
dec
mov
jmp
sbb
adc
arpl
sbb
movsl
repz
cld
pop
cmp
test
mov
jl
dec
lds
fldcw
loopne
inc
imul
adc
stos
outsl
inc
inc
into
dec
movsb
outsl
jbe
clc
jae
mov
clc
ret
dec
mov
add
cmp
stos
inc
movsl
push
xchg
cmc
inc
addr16
sub
jl
fstpt
mov
pop
out
stc
pushf
pop
aam
xchg
in
cmp
inc
gs
xor
repz
sub
popf
stos
inc
and
xor
mov
or
clc
pop
jg
fdivrl
dec
cli
mov
jmp
lds
xchg
js
je
in
les
mov
inc
stc
dec
dec
es
fst
and
imul
lret
popa
arpl
std
in
hlt
or
xor
lahf
int3
pop
add
js,pn
arpl
push
sub
idiv
dec
std
add
push
mov
bound
and
out
lcall
sub
sub
push
in
xchg
sarl
int
inc
xchg
fld
lret
int
sbb
lods
xchg
and
fisubs
dec
xor
sub
jl
inc
loopne
inc
or
dec
lods
test
ljmp
xlat
pop
adc
xchg
mov
xor
lret
scas
add
xorl
jge
cltd
data16
test
cs
pop
rep
jl
adc
orl
adc
adcb
xchg
adc
into
cmp
mov
cmp
mov
add
mull
add
push
je
mov
xor
loopne
sbb
add
js
and
push
ret
mov
outsb
cmpsb
rcr
int3
push
xchg
sub
adc
or
int3
push
enter
fstp
lods
pushl
movsl
and
fiadds
mov
push
std
ljmp
push
push
shll
dec
mov
xchg
jecxz
sub
lods
mov
repz
lock
lods
sahf
js
xchg
dec
popa
pop
mov
repnz
xchg
pusha
mov
scas
mov
cmpsb
dec
xchg
dec
pop
aam
arpl
mov
imul
int
fistl
cmp
adc
push
cmp
sbb
test
push
mov
les
xchg
add
sarl
xor
mov
mov
add
loope
or
pop
lahf
iret
mov
pop
das
cmp
rcr
mov
ljmp
mov
enter
inc
sbb
inc
out
xchg
pusha
bound
mov
dec
inc
jl
push
adc
pop
test
bound
inc
sub
roll
cmc
leave
outsb
pop
jle
test
or
and
movsb
in
xchg
push
cmpsl
push
ret
arpl
daa
or
cmpsb
adc
dec
insb
das
aam
call
and
mov
lock
jmpw
sub
mov
inc
insl
mov
addl
add
lcall
iret
lahf
sti
jecxz
pop
repnz
adc
rolb
nop
or
es
ja
outsl
cmpsb
dec
cmpsl
mov
push
cmp
sub
xchg
fwait
call
ja
movsb
push
mov
mov
lahf
in
sbb
cltd
jnp
jp
or
pop
push
pop
push
xor
repnz
inc
jp
add
shrl
cmp
sbb
add
inc
pop
cmp
sbbb
xchg
push
into
mov
xchg
cltd
lods
lods
inc
cli
or
aaa
dec
outsl
lret
stc
test
push
jnp
add
mov
fcoms
mov
add
jmp
mov
clc
fsubs
stos
sub
mov
sti
mov
lahf
scas
int3
fdivp
lret
or
pop
faddl
dec
in
xor
dec
lahf
shrl
in
adc
les
adc
ljmp
outsl
aaa
pop
ja
sbb
shr
xor
jb
mov
pop
movsl
push
ljmp
mov
inc
mov
adc
sub
inc
push
sbb
xor
arpl
pop
shl
mov
add
xor
jbe
xor
fidivrs
mov
xor
and
sub
adc
icebp
aam
cld
cmpsb
inc
jns
mov
fmuls
pop
int
sbb
mov
fcoml
inc
mov
les
lea
or
call
in
xor
inc
mov
mov
loop
ret
add
jmp
out
xchg
orb
mov
xor
xchg
inc
xchg
xchg
mov
lcall
adc
fmul
sub
gs
mov
adc
das
movsl
repnz
push
mov
inc
and
pop
push
sar
mov
or
adc
adc
sub
push
jp
or
cmpsb
gs
mov
mov
lretw
mov
dec
pop
push
ret
adc
cli
call
loopne
dec
int3
adc
negl
sbb
inc
fdivs
jge
in
or
mov
pop
stc
dec
pop
xor
addr16
and
pop
dec
out
imul
outsl
jg
inc
stos
lds
out
sbb
icebp
or
dec
jnp
test
stc
imul
add
outsl
pop
cmp
pop
call
cmp
mov
cmp
cmp
inc
loop
rorb
lahf
dec
mov
sub
or
cli
popf
pop
mov
in
lret
sub
scas
mov
lock
les
adc
jne
push
add
push
mov
fists
test
fld
inc
inc
iret
lahf
xchg
sub
dec
mov
jbe
jg
daa
ret
xor
jge
shr
lret
mov
xchg
jmp
cwtl
cmc
mov
mov
into
lcall
jne
jb
addr16
mov
jg
lret
fwait
dec
gs
pop
pop
das
or
sub
cs
xchg
mov
ljmp
loopne,pn
in
popf
inc
pinsrw
pop
jmp
pop
cmpsb
xchg
aas
icebp
lea
lahf
push
or
repnz
pop
dec
in
std
dec
inc
inc
pop
popf
test
mov
inc
aam
cmc
add
jo
mov
jb
xchg
xor
iret
jl
add
or
fidivrs
inc
cltd
shr
test
dec
mov
dec
fwait
dec
hlt
nop
scas
int
popf
test
xor
cld
xor
decl
test
mov
xchg
xor
mov
lahf
fsts
dec
mov
in
fldl
mov
and
sub
adc
xchg
add
lock
sbb
scas
sub
push
pop
cmpsb
or
jmp
fdivl
je
jle
mov
pop
push
enter
repnz
aas
add
add
sub
in
lret
stos
pop
pop
jbe
in
jbe
add
movsb
jbe
loope
xor
push
icebp
fnstcw
insb
push
pop
add
adc
dec
push
inc
push
jle
fsubs
mov
xor
outsb
loopne
xor
add
push
xchg
pop
sub
pop
add
and
xlat
fadds
add
jp
cmpl
sbb
iret
mov
cmpsl
pop
inc
sbb
xlat
mov
fistps
pop
or
mov
subb
test
add
pop
push
in
and
cmc
mov
ljmp
dec
xchg
dec
nop
in
mov
jo
test
shl
or
lahf
push
add
mov
lcall
fistpl
hlt
sub
cmpsb
negl
sub
clc
sub
or
movsl
dec
gs
dec
push
mov
imul
mov
or
cmpl
ret
pop
cmp
fidivl
pop
pusha
imulb
xor
gs
xor
xor
jne
pop
xorl
js
stos
cmp
and
sti
ret
sar
mov
adc
fstp
shlb
outsb
fstpt
test
mov
cs
push
ficoml
jb
std
and
dec
cmp
push
data16
push
cmp
test
add
add
insb
inc
out
pop
orb
pop
dec
mov
sbb
sub
into
adc
sahf
jne
fwait
out
push
jmp
lock
aam
mov
xchg
icebp
dec
inc
mov
jnp
push
mov
into
lds
popa
adc
jmp
pop
jb
test
mov
mov
mov
leave
or
and
or
pop
aad
cltd
jl
push
xor
sub
jge
mov
imul
pop
outsb
xor
mov
repnz
adc
sub
push
and
or
mov
scas
and
in
mov
rclb
mov
mov
sub
mov
cli
into
arpl
fmuls
sarb
adc
int
mov
mov
sub
cmp
pop
mov
add
or
iret
cwtl
push
mov
arpl
lock
and
iret
mulb
mov
push
adc
adc
fmuls
pop
rclb
adc
andl
push
fwait
mov
shr
cmp
mov
cwtl
dec
test
daa
jb
mov
mov
push
loope
mov
jmp
mov
test
inc
divb
ja
out
jae
mov
nop
jp
pop
enter
push
out
lret
ret
dec
cmpb
gs
in
push
loop
cld
sub
mov
cmp
inc
jnp
std
cltd
pop
test
lahf
adc
mov
mov
inc
popa
adc
mov
jns
mov
enter
jnp
cmc
ret
nop
out
pop
or
inc
sbb
lds
ja
push
sbb
cmpsb
xchg
push
inc
cli
test
lcall
fsubrp
sub
sbb
inc
jo
xor
xchg
xor
rorb
sbb
sub
aaa
mov
repnz
jmp
sbbl
mov
bound
ja
and
and
push
int3
pop
outsl
je
and
jo
aaa
jbe
push
push
fsubrl
adc
jl
push
add
imul
fidivl
dec
incb
jge,pt
int
lds
dec
lret
mov
cltd
out
leave
inc
cli
aaa
or
push
ret
stc
popa
rol
js
shlb
nop
push
push
or
insb
xor
lret
lcall
idivb
lds
cltd
mov
mov
mov
lock
jns
mov
jne
jnp
pop
lcall
sbb
push
sbb
mov
shlb
gs
xor
pop
pushf
fadd
xchg
lret
sub
cmpsb
or
cmpsb
cltd
lds
orb
sub
fdiv
and
dec
pusha
lcall
xchg
lods
ds
cmp
dec
ror
mov
mov
aaa
fstl
mov
push
mov
inc
push
dec
jo
scas
or
mov
xor
sahf
push
inc
push
loop
dec
cs
pop
popa
pop
cmp
push
push
push
sarl
addb
cmpsb
dec
notl
mov
xor
stos
ljmp
dec
iret
push
sbb
es
fcoms
push
aas
fisttpll
in
jne
xor
cmp
xchg
movsl
mov
lods
cwtl
inc
sbbl
in
sub
enter
cmp
mov
xor
lock
das
lods
push
xchg
in
in
mov
mov
insb
pop
std
pop
push
xor
inc
and
lret
jecxz
mov
jns
pop
stos
aad
push
cli
stos
adc
dec
push
in
xchg
fcompl
ds
push
clc
cs
insl
sbb
or
pushf
out
repnz
sub
stos
insl
adc
cs
aas
dec
add
test
mov
xor
cltd
mov
mov
pop
mov
xor
xorb
xor
or
mov
loopne
push
mov
cmpsl
sbb
enter
idivb
or
xor
add
pop
xor
xor
mov
sub
pop
push
fwait
pop
test
dec
jae
mov
xor
lret
or
fadd
add
pop
xor
pop
out
fwait
jo
sarb
and
cltd
rcll
std
test
adc
mov
in
mov
push
push
out
mov
sbb
in
stc
pop
sbb
aas
xor
add
ret
pop
pop
mov
mov
jp
and
jbe
sub
aas
sbb
fstl
sbb
mov
sub
push
pop
mov
or
or
jge
cmp
aad
mov
xrstor
push
divl
push
popa
or
int
test
xchg
xor
mov
jne
pop
test
jmp
adc
sarl
dec
and
movl
aam
mov
push
fidivrs
mov
mov
fists
imul
test
hlt
fcmovnb
jnp
jne
mov
fs
ljmp
sbb
add
into
push
pop
xor
xor
mov
repnz
stos
mov
nop
jmp
sbb
xchg
adc
or
mov
sub
dec
mov
add
cmpsb
neg
scas
cmp
repz
adcb
mov
or
clc
icebp
pop
push
jo
xchg
xchg
repnz
lods
out
repz
cltd
cwtl
aas
jo
adc
scas
unpcklps
fwait
push
dec
mov
out
mov
dec
lret
adc
xchg
js
dec
outsl
sub
mov
mov
cmpsb
popa
inc
fadds
shlb
push
jmp
xchg
pop
js
lock
popa
xlat
repnz
fists
xchg
inc
jns
es
fnsave
inc
mov
data16
sub
call
cmp
mov
push
sbb
jb
cmp
lods
inc
xor
ja
inc
mov
inc
shll
pop
sub
or
inc
add
stos
lods
scas
gs
out
jmp
push
scas
iret
lahf
adc
insl
out
pop
iret
or
jb
arpl
add
jo
aad
pop
mov
ljmp
stos
mov
hlt
data16
dec
js
cs
push
lock
mov
ds
sub
add
jg
outsb
ret
fisubrl
dec
aam
jnp
dec
sarl
sub
dec
js
je
hlt
and
imul
jge
aad
jl
dec
adc
mov
rcrl
and
jecxz
test
aaa
outsl
xor
das
inc
and
jmp
adc
push
adc
test
jmp
in
xchg
arpl
test
xchg
xlat
lds
mov
push
stos
and
dec
jb
or
leave
xchg
in
mov
xor
ret
dec
xchg
popf
push
test
ret
stos
xlat
out
and
adc
pop
std
outsl
mov
mov
movsb
subb
scas
fs
aas
mov
shlb
fldl
outsl
fisubrs
mov
jae
pop
js
inc
out
out
jl
mov
xor
pop
gs
push
or
mov
stos
jno
jmp
mov
mov
iret
les
push
jo
les
outsb
push
jbe
shlb
int3
xlat
lds
mov
fsubp
dec
aad
int
sbb
or
rcrb
pusha
pop
test
lret
stc
icebp
or
xor
out
push
jmp
lret
pop
adc
cpuid
push
iret
pop
push
cmpsb
jae
pop
test
fs
jb
pusha
dec
sti
pop
sub
jbe
in
fisubrs
cmp
inc
imul
push
xor
xor
or
inc
addb
xor
stos
pop
or
jne
jb
fcoms
fdivrl
jecxz
loop
pop
ficoml
repz
cmp
sbb
push
jb
fstpl
movsl
inc
mov
cmp
dec
data16
movsl
mov
aas
cld
mov
lods
fld
jmp
insb
jb
dec
push
dec
je
push
aad
stc
insb
sub
xchg
popa
mov
sub
jne
and
push
dec
fisttpl
mov
mov
push
ret
dec
shll
fcmovne
iret
lea
test
adc
stc
mov
push
in
scas
enter
xchg
or
mov
or
cmp
mov
test
jl
ljmp
loope
xchg
mov
lds
jns
enter
pusha
pop
inc
jno
sbb
xchg
rorl
dec
lods
pushf
sbb
jmp
push
dec
xor
je
xchg
and
dec
leave
pop
test
hlt
filds
data16
in
mov
push
psubusb
mov
pop
pop
jb
add
cs
mov
sbb
sub
ja
sti
add
hlt
sbb
lods
ret
addr16
cli
or
in
xchg
rcll
test
or
sahf
sbb
xor
pop
xchg
in
sub
fwait
int
jl
xor
filds
test
int
dec
fdecstp
fnsave
add
cmpsl
lcall
ror
xlat
into
in
and
lret
scas
sbb
into
xchg
jl
fnstsw
jae
inc
jg
cld
and
ljmp
lea
push
fldt
or
int
jle
jg
push
mov
jnp
aam
mov
popf
dec
mov
inc
pop
mov
fsubrl
add
mov
hlt
add
cmpb
jge
out
adc
js
aam
or
leave
movl
add
sbb
stc
sbb
and
ss
sar
add
ja
cs
push
cltd
lahf
mov
and
movsl
jmp
cmc
jns
nop
pop
xor
and
sub
aad
fistpl
cmpsl
pop
mov
mov
adc
push
test
jg
andl
xorl
jae
sub
out
adc
je
add
stos
scas
iret
test
pop
insl
jp
xchg
push
ror
sub
mov
or
push
ljmp
xchg
xchg
movsl
imul
nop
dec
insl
scas
rolb
mov
cmp
sub
adc
mov
dec
js
faddl
mov
adc
ret
mov
jge
nop
ds
xchg
lcall
lret
jg
jnp
push
inc
push
mov
sub
insb
shl
fucomip
in
test
sub
pop
jmp
add
and
jmp
int3
or
xchg
xchg
inc
loop
lods
cltd
push
jne,pt
lods
mov
shrl
fs
cs
pop
mov
dec
mov
sub
mov
xor
jl
jmp
sub
inc
rep
add
icebp
pop
push
add
fcmovu
or
pop
adc
ljmp
jl
imul
imul
pop
cmp
jmp
out
mov
stos
cmp
add
adc
lea
sub
insl
das
pushf
clc
rcrl
sahf
sub
sub
aaa
and
dec
mov
test
ds
inc
dec
aam
inc
mov
sbb
dec
test
sub
scas
scas
adc
aas
push
or
add
adc
cmpsb
dec
mov
sub
xchg
lock
cmpsl
loop
leave
cmpsb
mov
fs
and
adc
scas
cmp
mov
sti
imul
dec
mov
rolb
push
sti
mov
loope
lea
dec
sahf
pop
sub
gs
sahf
fimuls
pop
dec
out
cmpsb
gs
ret
sbb
mov
cmpsb
push
imulb
scas
push
pop
daa
xchg
aas
iret
scas
rorb
loope
mov
lock
push
add
enter
or
clc
cmc
fiaddl
push
mov
dec
adc
pop
sub
jp
shrl
and
mov
loop
push
dec
mov
repz
insl
add
and
or
aad
inc
insl
cmp
fstps
jecxz
adc
sub
inc
shrb
or
ljmp
fisttpll
cmpsb
cld
scas
inc
rolb
ficoml
ret
inc
lods
dec
mul
or
outsl
ret
jp
in
pop
jb
xor
mov
cmp
jp
dec
daa
push
sub
shlb
push
int
fsubrl
stc
pop
lds
ret
add
push
sarl
cli
popf
mov
or
mov
xor
inc
fwait
jecxz
in
shl
icebp
out
inc
push
shlb
xchg
rol
push
cld
mov
xor
sbb
mov
pop
aaa
iret
jmp
adc
xchg
mov
mov
les
stos
sub
mov
add
movsb
jp
lods
sub
ret
xchg
sbb
pop
lahf
fdivs
inc
dec
xor
mov
sbbb
cmp
jecxz
lds
hlt
jbe
xor
cld
pop
pop
js
popa
cmp
mov
popa
sbb
jo
int3
fisttpll
mov
adc
insb
jl
lret
iret
arpl
dec
push
arpl
js
fwait
and
je
push
xchg
push
pop
cld
cmp
dec
jb
pushf
popf
ds
add
lret
adc
call
mov
xchg
inc
xor
add
inc
mov
loopne
aaa
and
cmpsl
jecxz
clc
xchg
xor
cmc
fcoml
jb
mov
lods
loopne
je
daa
out
sub
mov
add
jbe
mov
nop
rcll
push
add
into
mov
movsb
sub
dec
in
sub
xchg
fldenv
jno
jl
shl
in
lahf
scas
int3
loope
pop
pushf
leave
sbb
cwtl
pop
dec
and
xchg
or
mov
mov
fwait
movsl
daa
sbb
mov
xchg
popa
dec
in
mov
pop
inc
fimuls
cpuid
cmp
pop
jecxz
adc
das
leave
fildll
and
mov
pusha
sub
in
xorb
mov
add
out
cmp
sub
push
and
dec
loop
or
adc
add
mov
rcll
cld
mov
and
xchg
call
stc
push
mov
fsubs
aad
xchg
mov
in
je
ficompl
xchg
inc
push
fnsave
xor
jle
std
dec
repz
mov
pop
dec
aad
adcl
push
sub
cwtl
sub
loopne
jbe
repnz
shrl
jo
call
arpl
lret
repz
adc
push
xchg
pop
sbb
cmpsl
pop
push
xchg
test
shrb
cmp
mov
loope
xlat
push
pop
out
cmp
lret
pop
pop
int3
push
enter
inc
push
std
pop
pop
push
inc
push
jno
jge
mov
mov
das
sbb
or
in
fwait
loop
jne
test
sbb
jge
out
ds
push
cwtl
push
push
rcrl
std
hlt
das
js
sbb
mov
bound
in
daa
int3
testb
nop
shll
cmp
xor
xor
ljmpw
aad
xchg
xchg
or
jno
push
sub
sbb
lcall
shrl
xor
sbb
push
rclb
orb
cs
aaa
test
cmp
in
xor
nop
adc
faddl
push
bound
xchg
or
shlb
loop
push
es
out
sbb
test
cmpl
cmpsl
sbb
xchg
les
dec
adc
pushf
stos
jmp
popa
add
dec
daa
movsl
flds
mov
push
cmp
push
scas
xchg
jo
xchg
dec
pop
mov
test
xchg
cmpsl
imul
repnz
mov
mov
mov
jp,pt
lea
mov
aam
adc
repz
push
leave
scas
out
add
pop
sub
adc
out
inc
xor
mov
cld
pop
scas
cmp
inc
arpl
orb
out
enter
fisubrl
jle
push
or
jecxz
mov
lods
jo
mov
sbb
dec
dec
rcl
jp
fmull
jne
scas
movsb
mov
pop
daa
cmpl
jns
je
rcr
add
sub
movsl
add
cmp
cmp
dec
in
xchg
mov
call
pop
mov
mov
dec
pop
cmc
jae
iret
sbb
push
loopne
das
test
sarl
cmpsb
xor
push
mov
dec
nop
lods
xor
aam
scas
jl
adc
push
bswap
int
lods
cwtl
and
neg
leave
and
out
imul
xlat
imul
sbb
aad
fadd
and
lods
fs
or
imul
bound
repz
and
movsb
sub
popf
push
mov
adc
and
push
int
push
mov
sarb
sbb
jg
xlat
mov
pop
cmp
jmp
arpl
inc
mov
pop
lcall
scas
push
scas
mov
jb
mov
mov
xchg
pop
stc
and
leave
and
cmp
mov
pop
in
inc
inc
loopne
repz
shlb
imull
and
sbb
cmp
lock
clc
mov
cs
cltd
test
cmp
push
rcl
lods
scas
mov
stc
in
add
aad
jns
jl
test
inc
mov
fsts
rcrl
inc
test
mov
xor
xlat
test
imul
xor
mov
test
ljmp
test
add
cli
xlat
xor
bound
jecxz
loope
lock
loop
sbb
cld
mov
sub
adc
dec
in
icebp
push
iret
mov
dec
jae
setnp
in
sbbb
stos
mov
sub
and
or
jne
pushf
dec
mov
and
inc
aad
add
shr
mov
sub
invd
inc
jo
mov
adcl
mull
sbb
test
mov
fildll
test
icebp
addr16
and
push
inc
cld
xlat
int
sarl
fs
lock
stos
pop
ret
add
stc
mov
xor
and
mov
subl
adc
pop
or
lods
sarl
dec
lea
clc
sub
xor
sub
add
inc
insl
mov
shlb
push
add
xor
into
sbb
aaa
std
les
jae
mov
lods
adc
adc
shrb
push
outsb
das
cmp
cmpsl
add
mov
jbe
arpl
dec
mov
xchg
mov
cs
jne
push
cs
cli
cmp
pop
push
jg
scas
movsb
sbb
dec
sub
adc
pop
adc
cmp
call
lea
add
test
icebp
pop
adc
or
leave
cmp
mov
sub
jo
inc
or
xchg
pop
cmp
xchg
insb
sub
xchg
enter
ja
imul
adc
cmpsb
idivb
jmp
lahf
das
push
cmpsl
sub
imul
and
dec
scas
fsub
dec
sbb
ja
in
dec
push
or
test
clc
mov
lods
or
testl
bound
stos
ffreep
lea
outsb
stos
js
dec
inc
add
in
in
aaa
ret
mov
out
pop
cmp
push
insb
lds
mov
xchg
mov
inc
mov
sti
add
out
mov
and
and
in
mov
mov
mov
das
aas
mov
pop
or
lds
dec
cmp
sub
out
push
push
call
insl
jne
jge
int
icebp
cmpsl
test
pop
or
adc
das
xchg
stos
mov
es
ds
and
clc
push
mov
or
sbbl
lock
lods
cli
fistpll
xchg
addr16
adc
stos
je
jne
into
jns
push
mov
aad
jecxz
mov
jbe
or
in
mov
adc
inc
fiadds
push
adc
adc
hlt
ret
xchg
lea
fwait
sbb
scas
mov
xor
imul
cli
jae
stos
jecxz
movsl
add
insl
sbb
xor
stos
shll
cmp
subl
clc
repz
jb,pt
push
hlt
or
pop
sub
pop
popf
and
scas
loopne
aam
lcall
inc
cmpsl
lcall
sbb
dec
mov
ja
fidivrl
gs
adcl
jle
rclb
es
inc
lods
repz
mov
insb
test
repz
lret
push
in
inc
xlat
mov
das
sbb
ret
inc
jae
push
insb
shl
inc
cmc
xor
imul
loop
stc
shlb
aas
pushf
mov
dec
push
fcompl
fnstcw
fsubl
mov
repnz
adc
addr16
repz
imul
mov
mov
out
mov
mov
jle
adc
leave
xchg
dec
and
jne
shrl
les
gs
xchg
add
xchg
cmp
inc
add
pop
test
xchg
cltd
or
scas
push
pop
pushl
mov
iret
lret
adc
or
jno
popf
push
es
rorb
xor
pop
jle
push
ror
fisubs
out
xor
shl
rcrl
pop
cmp
repnz
mov
mov
sub
insl
test
scas
mov
add
test
fs
andb
insb
rorb
in
push
gs
or
movl
popa
loop
lcall
out
adc
adc
icebp
mov
xor
lods
and
inc
xchg
sbb
xchg
cmpsb
pop
enter
or
bound
inc
adc
jae
inc
pusha
mov
add
xchg
or
shll
aam
fcoms
dec
incl
add
je
adc
xchg
adc
test
mov
jb
nop
je
mov
and
addb
jns
jns
lods
aam
push
fprem
add
pop
adc
shl
jbe
cmc
pop
nop
jle
and
mov
addr16
int
mov
inc
outsb
jne
imulb
fwait
mov
or
out
pop
outsl
rclb
pop
js
sbb
std
push
adc
dec
jle
inc
xor
stos
lret
aad
and
notl
inc
add
sub
pop
cmpsl
in
addr16
sbbl
std
mov
pop
lahf
call
push
cmc
jle
push
repz
insl
pop
lea
pop
cmp
jae
xor
jle
add
pop
fnstenv
scas
and
push
sbb
sbb
insl
or
push
dec
xorb
sbb
fdivl
hlt
push
jno
xor
int
and
mov
icebp
aam
out
mov
xchg
cmc
jg
test
or
lods
pop
xor
and
push
push
cmpsb
pop
std
ljmp
or
insb
jo
sar
and
mov
arpl
and
ja
xchg
sti
repnz
push
jge
std
insl
aaa
in
jb
aas
add
add
bound
rcll
jle
inc
ja
mov
xchg
add
nop
push
mov
popf
into
mov
clc
data16
push
test
fidivs
sub
mov
in
jle
xor
inc
jb
imul
ja
aam
bound
aam
cwtl
xor
stos
or
popf
jge
rclb
repnz
ror
dec
mov
sbb
aam
lahf
mov
ja
out
push
popf
xchg
mov
jae
push
or
test
insl
mov
aam
mull
ret
jno
dec
add
pop
jne
clc
sub
adc
gs
dec
andb
pop
stc
mov
in
lds
icebp
push
cld
in
pmaxub
sbb
xchg
mov
rorl
scas
dec
adc
std
shrl
roll
mov
inc
loopne
bound
or
imul
mov
hlt
sub
xchg
rcll
xor
sbb
dec
cmp
cltd
mov
jg,pt
or
cmp
and
mov
add
push
repz
push
jl
addr16
shrl
outsl
stos
in
je
add
aam
inc
xor
ljmp
ret
sarb
gs
push
dec
jo
dec
out
sub
inc
out
leave
cwtl
mov
or
jno
lahf
sub
shrl
stc
sub
push
xor
adc
jbe
sub
lods
xor
int3
stc
adc
xchg
stc
push
fcmove
pop
pop
scas
lahf
and
xchg
mov
add
xchg
jge
divl
and
jge
mov
adc
inc
subb
imul
jne
clc
mov
cli
xchg
imulb
xlat
ljmp
push
mov
pop
roll
pop
or
jge
xchg
movsb
or
jge
or
out
or
das
icebp
rorb
outsb
xchg
movsb
adc
xchg
pop
jecxz
ljmp
fbld
jmp
lea
sbb
decl
mov
mov
sub
dec
fcomps
jmp
arpl
popf
int
int3
dec
jno
add
sub
jle
inc
push
jmp
sbb
dec
push
inc
adc
sub
pop
xorb
and
dec
push
into
popf
jecxz
jmp
stc
or
mov
loop
dec
mov
sub
stos
lea
ret
data16
mov
movsl
dec
mov
inc
inc
sbb
pop
dec
in
dec
test
mov
mov
mov
or
dec
adc
movb
push
adc
iret
pop
shrb
inc
sub
xchg
sub
insb
cmp
dec
pushf
mulb
add
mov
mov
jecxz
je
jnp
lret
sub
sbbb
push
and
test
pop
cltd
ljmp
push
rcrl
in
push
mov
add
add
dec
cwtl
pop
outsb
inc
xorb
adc
push
cmp
inc
or
ljmp
or
jbe
leave
xchg
idivl
lock
scas
jb
mov
ret
mov
jb
movsb
sahf
jl
push
and
xchg
mov
imul
inc
data16
jae
cli
and
lea
aad
scas
xchg
xorb
mov
push
mov
cmp
jbe
xchg
jmp
xor
xor
push
jbe
stc
mov
inc
mov
in
jno
jp
mov
xor
repnz
mov
fwait
outsb
cwtl
lock
mov
dec
repnz
inc
adc
push
adc
jg
cmpsl
or
adc
jns
out
in
sbb
frstor
test
imul
insl
sub
push
sarl
jle
movsb
flds
push
push
jb
neg
les
fdivrp
repz
mov
push
or
aas
hlt
in
out
adc
cmp
fisubrs
dec
mov
add
push
sbb
sub
push
mov
cwtl
dec
mov
or
xchg
pop
mov
cmp
sub
mov
mov
dec
or
pusha
repnz
sbb
sbb
loope
pop
push
jbe
xchg
cmc
cmp
xlat
xchg
mov
and
xor
xor
das
cmpsb
mov
xlat
pop
leave
mov
inc
add
push
rol
sbb
stos
outsl
es
cmpsl
sub
arpl
hlt
mov
movb
sbb
xchg
jo
inc
out
fiaddl
test
aas
adc
lret
pushf
xorb
cmp
enter
imul
cmc
jl,pt
or
je
adc
es
push
cltd
movsl
lret
das
jno
std
cwtl
mov
dec
std
inc
outsb
in
xchg
xchg
lods
push
or
adc
jle
adc
add
test
push
aas
adc
mov
loop
add
push
xor
jae
clc
or
js
cmp
cwtl
popf
inc
lret
mov
mov
jmp
gs
jl
inc
dec
fdivrs
dec
outsl
fwait
shlb
push
cwtl
in
xor
bound
and
sbb
lcall
mov
inc
out
lahf
cmp
mov
xchg
sti
adc
fcomi
rol
sub
into
fsubrl
cmp
push
xchg
cld
in
daa
fsubs
fidivrs
sub
test
mov
gs
cli
xor
fimull
inc
push
out
stc
adc
xchg
push
out
xor
push
mov
mov
jae
fbld
push
cld
push
cld
sahf
repnz
cmp
pushf
cmp
ja
mov
jne
nop
fidivrl
jno
jne
cmp
mov
cmp
inc
and
mov
xor
jmp
mov
imul
jo
loop
scas
popf
sti
mov
cltd
inc
xor
andb
dec
jnp
and
adc
aas
movsl
or
lahf
in
inc
sbb
stos
popf
rcll
bound
idivl
mov
sbbb
xor
mov
xchg
add
cmp
in
sub
dec
jb
rcll
lret
add
sbb
sub
sub
add
push
inc
out
sbb
push
stos
jae
scas
arpl
iret
lds
in
cld
mov
pop
dec
push
lods
pusha
jp
movsb
inc
or
std
xor
mov
mov
movsl
mov
in
aas
call
sub
mov
in
jl
lahf
or
leave
pop
lock
outsb
lahf
jge
lret
mov
sbb
int
jg
or
fwait
aad
xchg
leave
push
imul
cmc
stos
fmuls
push
pop
cmp
js
push
ljmp
cli
in
xlat
movsb
jnp
xor
lcall
ret
sbb
xchg
pushf
mov
dec
mov
lock
cmp
std
dec
fdiv
or
fucomp
pop
mov
cmp
mov
int3
rorb
sbb
xchg
xorl
sbb
xlat
mov
dec
aad
push
sbb
lea
sbb
mov
imul
jns
xor
sub
hlt
icebp
popf
xchg
sbb
loopne
mov
sub
fidivrl
out
repz
push
out
pop
dec
cmpsl
push
inc
fldt
jb
outsb
xor
lcall
push
loopne
repnz
inc
sub
addr16
inc
jecxz
pop
ja
into
cmp
fidivrs
jecxz
cmp
jl
push
cmp
jl
outsb
cmp
jl
pop
push
or
imul
aad
out
mov
aam
icebp
pusha
jnp
mov
xlat
xchg
ljmp
cmp
pop
js
lods
outsl
add
out
mov
das
xor
mov
jno
and
ret
popa
mov
cwtl
xchg
jae
orb
xchg
mov
adc
icebp
pop
jnp
mov
adcl
and
pop
mov
mov
call
adc
and
mov
dec
movsb
stos
fwait
lret
xor
push
and
mov
insl
mov
xchg
push
sahf
repz
sbb
iret
push
icebp
dec
and
call
jg
lods
sub
jge
lcall
mov
push
out
pop
rorb
test
add
sahf
push
bnd
ret
xor
into
mov
dec
aam
std
dec
cmp
dec
cmp
xlat
leave
lret
and
arpl
iret
or
and
and
lahf
arpl
iret
xchg
or
xchg
leave
fdivrs
or
fiadds
mov
lret
rolb
jg
aad
fnstcw
dec
mov
adc
jecxz
xor
mov
aam
loopne
cmpsb
bnd
mov
mov
inc
enter
push
push
xchg
out
cld
popf
mov
dec
pop
jecxz
push
int
inc
sbb
cmp
push
test
xor
popfw
xchg
shll
cs
pop
mov
cmp
cmp
fbld
test
mov
test
cmp
inc
adc
pop
std
inc
sbb
cmp
mov
mov
fidivs
pop
add
mov
push
mov
mov
negb
cmpl
cmp
sbb
gs
dec
inc
sub
jb
jo
mov
hlt
and
or
loope
mov
inc
or
pop
mov
lds
xchg
lods
call
xor
lcall
jb
push
pop
std
aas
pusha
xchg
lcall
adc
movsb
sbb
pop
or
push
jge
repnz
jg
push
push
push
xchg
ljmp
lahf
dec
add
jp
movsb
loopne
stc
and
adc
adc
push
lock
rorl
aas
in
fs
push
shrb
xchg
or
push
lds
sub
cmp
test
es
ficompl
jb
mov
jns
dec
cli
xchg
scas
sub
inc
stc
inc
mov
arpl
mov
pop
inc
movsl
jb
push
in
ds
ja
addb
ljmp
sub
call
sub
lahf
popf
mov
jnp
sti
xchg
adcl
sarb
sbb
and
sub
out
repz
sbb
xchg
pop
jg
fwait
adc
orb
lret
ja
jmp
jb
add
sbb
std
dec
xorb
sahf
mov
jb
mov
cld
roll
call
pusha
stc
and
fcoms
and
xor
lret
xor
nop
outsl
adc
cmp
js
pop
aam
shlb
lcall
loopne
xor
mov
push
mov
fwait
inc
xchg
sbb
xchg
lods
mov
mov
push
es
lock
cmp
packsswb
aam
or
and
or
mov
out
fwait
pop
xchg
jecxz
std
push
mov
das
pop
stc
sbb
add
xor
outsl
pushf
shrb
xor
jmp
mov
mov
aad
xor
stos
fs
mull
xchg
cmp
sahf
push
jo
mov
xor
out
call
xchg
hlt
mov
sbb
repz
add
aaa
aad
xchg
mov
xor
mov
xlat
cs
xchg
adc
lcall
cmp
cmp
aaa
mov
mov
xchg
pop
adc
shll
shlb
push
inc
insl
or
ljmp
inc
or
mov
xor
in
mov
pop
mov
imulb
popa
repnz
xchg
jne
push
popf
pop
pop
add
mov
test
test
into
outsb
fsubs
fidivl
jle
push
fsubl
jp
sub
xlat
sbb
push
cli
ficoml
loopne
incb
cli
jae
mov
sarb
jge
ret
or
dec
xchg
fisttps
inc
pushf
cmp
dec
fcom
or
cmpsl
or
xor
xchg
popf
test
mov
lret
adc
shll
sahf
getsec
or
pop
and
or
pop
push
es
fisubs
sub
test
dec
mov
cmp
ljmp
scas
mov
nop
sahf
pop
repz
xor
movsl
test
and
dec
call
mov
outsl
push
pop
in
inc
cmpl
pop
movsb
or
sbb
sub
inc
outsb
mov
mov
jmp
cmp
cmp
negl
cmp
int3
mov
rorl
jge
mov
jl
shl
xor
mov
movsb
add
mov
lahf
out
xchg
or
or
in
xor
pop
movsb
sti
es
add
mov
jge
scas
fcomip
adc
stc
mov
scas
shrb
leave
mov
leave
push
shrb
stos
pop
dec
in
mov
jne
mov
push
mov
mov
les
in
bound
fs
lret
xor
dec
jns
push
pop
adcl
jns
sub
jge
lods
aad
jb,pt
mov
cmp
cs
bound
aaa
or
xchg
in
movsb
scas
adc
ret
pop
mov
subl
or
dec
sti
jl
push
fnsave
divl
mov
nop
daa
cmpsb
outsb
xchg
pop
in
fsubl
jo
dec
adc
shll
popa
jmp
icebp
leave
lcall
cmp
xchg
sbb
jmp
mov
add
ds
add
shr
or
sbb
ja
jnp
xor
jo
cli
jl
hlt
sub
inc
rcll
mov
fiadds
jo
movsl
mov
out
xchg
nop
and
cld
insl
fsubrl
in
sbb
fwait
insl
mov
fdivp
or
inc
pusha
pusha
ja
cmp
out
mov
nop
pop
mov
mov
add
lret
mov
andb
pop
add
jmp
add
repnz
xchg
fdivr
xor
or
pop
push
in
outsb
and
cmpsb
fidivl
xor
fidivs
icebp
into
cmp
xor
test
ja
add
push
and
in
pop
and
xor
sub
adc
out
addr16
inc
xchg
cmp
pop
cwtl
pop
dec
fnsave
nop
addr16
imul
fstpt
xor
adc
xor
mov
adc
stos
mov
fdivl
adc
ds
push
add
sbb
imul
push
lret
adcb
pop
cmp
and
out
in
icebp
popa
dec
iret
in
adc
movsl
mov
add
rol
lock
mov
fmuls
push
es
jno
inc
leave
mov
pushf
mov
scas
jne
or
insl
dec
adc
repz
insl
sahf
mov
xchg
push
call
push
inc
fcmovb
mov
fdivrs
test
cmpl
insb
fdivl
and
push
add
lds
mov
mov
fiadds
mov
pop
orl
je
test
dec
in
aas
cmp
movsl
aas
cmp
mov
cmp
inc
aas
cmp
aas
aas
or
aas
cmp
aas
aas
xor
aas
aas
inc
push
aas
aas
pop
es
aas
insb
ss
aas
mov
dec
je
push
aas
or
xchg
mov
repz
jl
test
cmp
xor
lods
inc
or
mov
push
xchg
in
push
and
mov
and
loopne
add
xor
jb
push
stos
test
mov
mov
or
clc
arpl
mov
push
repz
add
mov
jge
fwait
mov
adc
xor
scas
dec
scas
push
int
cmp
test
inc
fmull
adc
dec
xor
mov
fisubrl
out
mov
dec
aam
lods
fwait
mov
icebp
ja
jg
push
xor
add
xor
push
push
jg
lret
xchg
out
icebp
testl
cmp
pushf
dec
in
cmp
jp
cmp
sub
aas
add
or
cmp
mov
xor
fistpl
rcr
pop
xor
aas
xor
jo
lret
ljmp
or
xor
lahf
movsb
or
push
pop
jae
push
cwtl
cwtl
xor
aas
cli
add
or
inc
test
dec
pushf
enter
fstl
test
cmp
mov
sbb
mov
mov
stc
rcll
xchg
frstor
popf
mov
imul
imul
addr16
stos
xor
std
pop
xchg
adc
xchg
mov
xchg
mov
mov
pusha
loopne
mov
fdivl
or
sub
adc
xchg
bound
xchg
movsb
pop
rolb
je
jbe
inc
fwait
and
xor
rclb
and
pop
aas
sbb
adc
loope
popw
xor
mov
push
xor
into
aam
pop
pop
push
xor
in
dec
inc
popf
shrl
mov
clc
xor
call
mov
icebp
sbb
imul
jecxz
aaa
int3
sub
loope
sti
test
icebp
lret
out
mov
mov
imul
sahf
pop
movsb
enter
and
sub
mov
mov
sub
cmp
mov
push
xor
dec
xor
insb
in
inc
movsb
leave
cmpsb
add
sbb
mov
pusha
fimuls
cmp
into
cmpb
mov
cwtl
adc
cs
add
xor
cmpsb
call
inc
fmull
mov
sbb
bound
adc
xchg
push
dec
jmp
add
aaa
dec
pushf
mov
lods
es
in
jo
sub
movsb
inc
sbb
sbb
jmp
add
je
sub
lods
push
sbb
mov
enter
add
mov
movb
adc
sbb
test
arpl
dec
add
fwait
pop
fisttps
jmp
xor
aaa
pop
shlb
jb
adc
add
xchg
clc
push
aaa
orb
lret
aaa
aam
das
cmp
arpl
movsb
adc
outsl
mov
inc
js
sub
cmp
pop
incl
cltd
xchg
sub
sti
clc
int
les
mov
and
sub
mov
dec
xchg
and
into
enter
sub
pop
mov
mov
adc
lods
pop
into
lea
roll
sub
ror
adc
cmc
stc
mov
outsb
mov
jp
mov
dec
movsb
sub
mov
lock
enter
aaa
cmp
sub
lea
add
add
sub
add
sbbl
divb
or
xor
or
sbb
sbb
int3
dec
dec
mov
adc
adc
cmp
js
rclb
xor
xchg
sub
fists
adc
cmp
pop
xor
mov
sub
sbb
or
cmp
pop
pop
sbb
or
adc
push
aad
fstpl
jbe
popf
sbbl
or
pop
std
sbb
adc
das
cwtl
and
das
lods
xor
das
insl
jne
mov
nop
fucomip
mov
ss
mov
cwtl
xor
in
xor
std
les
movsb
xor
adc
sbb
or
push
rcrb
push
fs
je
ss
movsl
ss
sbb
mov
mov
movsl
jle
sbbb
fistpl
mov
mov
lret
hlt
adc
inc
mov
xor
addr16
stos
pop
inc
cld
rolb
sbb
xor
or
xor
negl
add
or
xor
icebp
jo
and
data16
xor
push
pushf
xor
sbb
mov
cld
mov
and
sub
add
push
adc
push
jge
sbb
pushf
push
daa
lret
sti
jbe
jmp
stos
pop
xchg
and
fidivrs
movsl
add
roll
movsl
adc
mov
int3
mov
cmp
and
and
and
and
and
and
and
and
and
and
jb
and
adc
and
xor
and
shlb
and
loop
arpl
repnz
andb
movsb
xchg
and
mov
and
push
and
and
and
and
and
and
and
and
daa
and
daa
and
daa
and
xchg
daa
and
mov
daa
and
inc
daa
and
daa
daa
or
daa
cmp
daa
daa
xor
daa
daa
inc
adc
daa
pop
and
daa
insb
xor
daa
cmpb
es
fsubs
push
fsubs
and
fsubs
cmp
fsubs
or
fsubs
and
fsubs
aam
fsubs
enter
cld
push
fsubs
lock
test
es
pop
fsubs
lods
dec
fsubs
sarb
sub
fldenv
adc
fldenv
fs
fldenv
js
fldenv
dec
into
fldenv
pusha
fldenv
xchg
sub
fldenv
xor
cmp
pop
jecxz
fsubrs
ficoml
hlt
xor
in
or
cld
aaa
jecxz
pop
test
and
xchg
out
mov
cmpsl
stc
mov
movsl
call
mov
jle
es
sub
adcb
fxtract
lcall
mov
push
pop
mov
sub
bound
inc
push
and
js
sbb
loope
pop
in
xlat
fstpl
xor
in
cs
inc
outsl
fistpl
cmp
clc
cmp
and
pop
hlt
sarb
jns
rcrl
jb
mov
test
pop
fadds
lahf
flds
loope
and
test
adc
and
mov
inc
cli
cmp
inc
addb
notb
sbb
fnstcw
aaa
cmp
push
mov
gs
fbstp
sahf
push
sbbb
orl
shlb
xchg
insb
repnz
inc
clc
sub
outsl
test
xor
imul
adc
xchg
and
push
xlat
je
lds
fcomps
inc
cmp
sarb
ja
dec
add
jo
sub
xor
mov
sbb
stos
jno
in
cmp
insb
pop
pushf
jno
sub
in
fistps
cs
stos
lods
xchg
out
sarl
cmpsb
adcl
cld
or
jo
jp
scas
ficompl
mov
out
jb
leave
cmp
rorb
xor
push
and
in
clc
loop
rorl
jns
pusha
lea
xor
pop
add
sbb
subb
outsl
imul
cmc
push
lods
iret
adc
cmpsl
or
cli
mov
ljmp
cmp
or
js
sbb
pop
add
jecxz
cld
les
jge
mov
icebp
inc
aam
inc
add
xor
inc
sbb
jb
fs
lods
mov
xor
mov
push
lods
leave
aad
rolb
mov
cmp
adc
sub
mov
jns
ficoml
lods
push
and
mov
sbb
jp
and
and
imul
mov
pusha
sbb
adc
stos
aam
jge
aam
inc
xchg
insb
decl
in
les
or
mov
push
adc
popf
sti
test
inc
pop
popf
clc
adc
pusha
sbb
sub
repz
popf
rcrl
fcompl
sub
lods
sar
adc
pushf
out
and
movsw
js
jg
fcoml
data16
hlt
jl
cltd
aas
repz
sub
mov
and
sbb
jns
stc
imul
jno
sub
jnp
xchg
lock
xor
and
rclb
daa
jbe
daa
inc
or
addr16
stc
xlat
jno
add
push
dec
les
out
pusha
adc
cwtl
add
jno
pusha
or
push
jge
adc
aad
push
jno
and
das
leave
inc
pushl
dec
rcll
scas
xchg
jmp
or
adc
dec
inc
xor
jg
enter
lret
adc
sbb
jge
out
adc
gs
fidivs
mov
pop
cmp
adc
fidivs
mov
mov
adc
test
imul
push
rcrb
aaa
fimuls
pop
adc
loopne
jp
jno
call
inc
mov
outsl
inc
pop
aad
stc
xchg
pop
pop
jp
cmp
mov
arpl
loop
pop
fstpt
in
xchg
adcl
mov
lods
idivb
adc
je
jge
sub
inc
in
sbb
xchg
fistl
and
scas
mov
dec
pushf
lret
into
repz
mov
xchg
push
pop
pop
cmp
and
jne
stos
stos
sub
xchg
push
add
int3
push
call
xchg
cmp
mov
dec
jae
out
mov
aad
mov
imul
hlt
inc
jno
jmp
jno
movsb
mov
test
popf
nop
movsl
lods
sub
bound
lret
and
cmp
push
nop
clc
lret
dec
mov
cmp
push
xchg
and
adc
cmp
ret
in
and
xor
or
pop
sub
insb
sbbb
and
dec
lods
mov
in
cli
jne
fildll
dec
cmc
and
sub
adc
dec
sbb
das
es
mov
push
mov
xor
cmpsl
pop
pusha
xchg
and
int
adc
mov
and
int
xchg
jae
cwtl
popa
sbb
loope
orb
out
aad
clc
lcall
mov
or
scas
out
sbb
xchg
imul
aas
or
mov
jne
test
sub
and
es
loop
aam
lods
mov
xchg
and
add
or
aam
gs
pop
stos
pop
pop
aaa
push
sbb
les
push
leave
pop
push
imul
mov
jnp
movsb
pop
sbb
cld
loop
and
in
rorw
movsb
adc
xor
insb
arpl
imul
cwtl
add
push
mov
or
dec
jl
push
push
fimull
mov
mov
mov
push
adc
imull
push
cmp
lea
pop
call
lock
or
cwtl
test
popf
xchg
arpl
jge
push
sub
push
push
xchg
mov
icebp
add
movsl
pop
popa
repnz
js
inc
push
dec
and
outsb
inc
cmpsb
inc
cmpsb
xor
cld
push
and
in
or
dec
adc
int
mov
or
dec
cmp
push
and
outsl
xchg
hlt
aaa
das
or
cmp
icebp
inc
xor
inc
movsl
fsubrl
outsb
mov
enter
cmpsl
mov
int3
xchg
push
out
popa
xlat
jo
ret
adc
jae
mov
xchg
xchg
jg
cmpb
ret
mov
adcl
pop
and
in
ficomps
rcll
imul
inc
or
inc
pop
add
mov
push
fs
add
test
in
mov
stc
out
mov
jecxz
cwtl
testb
adc
adc
cmpsb
call
add
std
insl
stc
sub
rcrl
bound
add
lcall
jmp
mov
xchg
dec
and
rclb
pop
push
in
mov
and
pop
movl
pusha
sbb
sub
movsb
push
shlb
test
popf
jecxz
xchg
mov
ret
add
test
cmpsl
push
inc
int3
jns
add
cmc
popa
call
sbb
in
lods
pop
rolb
loop
jge
js
je
or
cmp
js
xchg
je
test
test
jo
lds
pushf
dec
dec
daa
pop
sub
lock
sub
imul
xchg
imul
sbb
xor
mov
xchg
cmp
cmp
xchg
add
jg
and
xchg
fs
mov
data16
adc
adc
popa
mov
or
test
rolb
adc
mov
icebp
iret
cli
es
negb
sti
lock
and
data16
cmp
ljmp
dec
sbb
xchg
mov
sub
jnp
and
sub
fwait
ret
add
test
ds
xchg
jg
pop
loope
into
aad
xor
jb
sbb
adc
ljmp
pand
rolb
outsb
inc
je
jmp
fsts
lods
jl
and
jbe
fstpt
cli
mov
ja
jp
fsubs
push
js
add
mov
mov
es
stc
dec
mov
mov
sbb
aam
roll
jns
cmp
mov
es
dec
or
dec
pop
jp
shl
leave
arpl
mov
jl
cwtl
add
lahf
jp
aad
pop
push
rcrl
cmp
fs
xchg
jnp
test
push
sbb
xchg
test
js
mov
jp
pop
cli
jg
pop
ret
cltd
into
das
push
xlat
jb
stos
jg
scas
inc
lock
ret
mov
cli
aaa
cmpsl
icebp
cli
sub
icebp
cli
adc
icebp
cli
addr16
cli
jnp
repnz
stc
cmp
out
cmc
lret
loope
pop
ljmp
arpl
dec
push
addl
mov
insb
lcall
movmskps
in
jl
loopne
int
mov
lea
inc
in
cwtl
mulb
dec
cmpsl
loopne
das
jg
repnz
jae
repnz
pop
gs
lea
jge
inc
mov
cli
mov
repz
stos
xchg
repz
sub
std
add
in
cli
sti
aad
cli
iret
jecxz
repz
pop
es
movntq
jl
inc
cmp
xchg
lock
pop
push
repz
outsl
inc
repz
imul
pop
loopne
xor
sbb
pop
pop
sub
inc
push
adc
add
or
lahf
lds
outsb
iret
inc
popf
sub
or
inc
rorb
xor
or
dec
rorb
pop
rorb
add
add
dec
rorb
pop
rorb
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
