jns
jg
jp
sbb
lret
aam
addb
lods
fsubrl
neg
or
sub
outsl
xor
fdivrl
pop
mov
aam
mov
stc
xchg
fadds
leave
into
mov
ds
cwtl
sahf
jl
sbb
xchg
cmp
push
cld
nop
mov
scas
mov
std
fcmovnu
mov
and
xlat
bnd
stos
lea
dec
push
loope
js
lods
jno
or
mov
loope
xchg
imul
mov
jge
iret
ds
loope
xor
mov
orb
out
test
out
pop
mov
mov
push
lret
dec
ss
pop
mov
inc
mov
jmp
cmp
movsl
inc
addb
or
rclb
call
add
push
in
loope
jle
pop
mov
nop
add
push
sub
xor
lcall
out
mov
outsl
adc
xor
out
pop
inc
test
adc
push
sub
inc
shrl
div
inc
mov
test
inc
sbb
out
ja
fmul
int3
and
xchg
dec
xor
stc
sbb
pop
pop
adc
fwait
ss
push
repnz
shrb
xor
jno
push
pop
xchg
loope
fstps
test
add
cmp
xor
push
push
mov
dec
xchg
jle
or
fldcw
fmul
xchg
test
aas
les
add
mulb
jge
adc
test
pop
mov
mov
out
test
or
loopne
jne
pop
pop
pop
pop
aam
repz
and
aaa
adc
clc
mov
cmpsb
addr16
jnp
adc
data16
cmp
lods
push
inc
pop
cmp
sub
push
inc
scas
ret
dec
sub
sahf
adc
push
fs
fmul
sbb
pop
push
adc
mov
fnstsw
ret
ljmp
mov
push
mov
test
jmp
aad
xchg
ljmp
sti
mov
xchg
das
stos
or
and
arpl
jp
cmc
fcomip
ljmp
pop
inc
stos
pop
inc
sub
push
aaa
mov
popf
popf
and
mov
sub
push
push
stos
jmp
lahf
mov
aaa
adc
stos
adc
jmp
in
or
add
mov
das
loope
icebp
sbb
fildll
and
leave
fsts
xchg
push
sbb
mov
popa
mov
jno
xlat
dec
add
cld
mov
push
mov
mov
and
sbbb
adc
mov
inc
pushf
shrb
jle
cmc
dec
add
sub
ficoml
fwait
sub
mov
shl
adc
push
sbbl
jecxz
js
dec
dec
mov
fdivrl
adc
sub
pop
push
in
in
pop
repz
or
sub
pop
aaa
adc
sub
lahf
mov
push
cwtl
cmp
lods
xchg
imul
test
icebp
jno
push
lret
xchg
or
push
ja
adc
jmp
aam
xor
leave
xor
xchg
mov
mov
mov
xlat
lea
enter
pop
xchg
mov
sbb
jae
es
dec
inc
aam
ljmp
movsl
pop
test
jecxz
stos
addr16
sbb
aad
jnp
pop
ss
aam
adc
into
or
or
mov
jmp
insb
xchg
iret
xchg
cmp
push
dec
movsb
jecxz
adc
and
adc
jecxz
imul
fildll
mov
cmpsl
push
leave
cmp
pop
lock
adc
mov
push
pop
lahf
pop
xchg
jbe
repnz
imul
dec
ja
mov
mov
cmp
mov
mov
mov
xchg
fimull
push
ds
out
int
sbb
pop
xchg
jae
andl
jns
aas
cs
ret
pop
or
arpl
popa
sbb
pushf
add
xor
lret
cmpsl
sti
cmp
jnp
inc
mov
sbb
sub
hlt
movsb
mov
xor
cmpb
dec
jnp
push
imul
stc
stos
mov
movsb
mov
jnp
test
lods
dec
and
cmp
in
jne
cltd
insb
cwtl
jns
xor
mov
cld
repnz
push
rcl
jbe
ljmp
int3
or
mov
movsb
mov
cltd
sub
jo
ljmp
ja
loope
inc
sahf
js
movsb
dec
inc
fldl
or
nop
aam
dec
stos
and
loop
inc
rolb
jb
mov
stos
lea
mov
jmp
pop
mov
icebp
stc
adc
mov
pop
lahf
loopne
pop
testb
and
jbe
icebp
aam
pop
xchg
sahf
push
dec
lcall
xchg
or
jb
dec
int
and
notb
adc
dec
push
mov
push
mov
or
stc
scas
mov
pop
adc
push
scas
loopne
js
jb
dec
xor
lds
das
lret
cli
or
test
pop
mov
fcoml
daa
popa
xchg
lods
scas
in
test
adc
lock
js
enter
fcmovnbe
adc
jp
into
pop
adc
mov
movsl
push
mov
add
push
xchg
test
lods
stos
cmpsb
outsb
add
pop
and
lds
sar
xor
sbb
add
loop
out
cmpsl
daa
jae
out
test
sahf
jb
loope
les
xchg
inc
loopne
scas
cmpsb
jl
frstor
adc
subl
mov
stos
jae
popf
cmc
inc
jns
loopne
shrb
insl
lea
rol
jae
mov
iret
mov
inc
pop
lret
add
mov
enter
stos
dec
sahf
ja
or
pop
je,pt
mov
testb
fsubrs
push
jb
mov
inc
pop
or
add
and
out
pop
in
mov
andl
cmc
arpl
repz
jo
scas
gs
push
cmp
stc
xchg
cwtl
mov
call
ljmp
adc
add
mov
cmp
cld
mov
in
xchg
and
dec
dec
inc
gs
mull
mov
jl
addr16
call
sti
dec
ret
in
arpl
and
jmp
jecxz
or
mov
setp
sbb
sbb
in
adc
add
adc
mov
inc
aam
leave
in
mov
mov
sbb
or
push
daa
leave
or
sarb
andl
ljmp
mov
inc
call
mov
loop
out
out
mov
sub
inc
repnz
insl
stos
sub
pop
jne
aad
inc
arpl
neg
xchg
sbbb
mov
or
rorb
pop
xor
je
ret
adcl
outsl
push
inc
stos
cmpsl
push
stos
adc
shll
cmp
decl
dec
jge
cli
dec
repnz
push
test
inc
test
outsb
outsl
vcvtpd2dqy
lahf
cmpsb
push
push
dec
dec
sub
mov
xchg
les
ljmp
lcall
sub
gs
jae
xor
sub
xlat
pop
mov
negl
jecxz
mov
xchg
sbb
sub
mov
test
lods
je
data16
shl
pushw
xlat
lahf
cmp
in
outsb
sub
push
jo
movsl
iret
sbb
pop
or
lcall
mov
fmull
mov
jbe
aas
lahf
pusha
repz
lahf
repnz
mov
pop
adcl
sbb
jbe
jp
ss
push
pop
sbb
sub
xor
hlt
fadd
cmpsl
mov
adc
cmpsb
cwtl
and
dec
rorb
jg
cmp
adc
mov
pop
pop
jp
dec
cli
mov
sar
fld
push
mov
nop
dec
lods
inc
fldcw
fwait
gs
stos
out
lahf
int3
in
inc
insb
dec
push
mov
into
es
mov
icebp
xchg
dec
sbb
xchg
mov
inc
sbb
test
mov
pop
push
mov
testl
aam
mov
jge
int3
sbb
sbb
sbb
mov
jmp
or
mov
xor
xor
xlat
mov
push
push
push
jnp
jae
hlt
xchg
lcall
bound
sbb
in
sbb
inc
out
ret
push
mov
mov
and
mov
lock
or
push
addr16
jae
and
sbb
popa
call
dec
cmp
lcall
or
div
sbbl
subl
scas
movsb
sub
data16
nop
pop
inc
sahf
decb
cltd
leave
sbb
jecxz
or
fisubrl
aam
push
jo
jo
pushf
test
adc
mov
addb
mov
movsb
xchg
mov
sbb
pusha
mov
fimuls
sub
aam
push
jecxz
pop
fisubl
in
rcll
scas
stos
xor
pop
dec
mov
sahf
xchg
in
in
pop
cmp
rcll
xorl
mov
add
in
ljmp
pop
inc
lcall
jnp
hlt
mov
cmp
test
test
jae
and
inc
fiaddl
pop
xchg
jno
mov
cwtl
loopne
adc
popa
pusha
mov
inc
jmp
mov
mov
xchg
cmp
mov
inc
xor
fbstp
xchg
jmp
pop
aas
xor
mov
nop
out
inc
inc
dec
fisttps
xchg
ficomps
mov
imul
dec
cmc
sub
pusha
add
insb
mov
fildll
adc
mov
cltd
cmp
push
push
push
sbb
dec
imul
std
stos
xchg
arpl
sarl
jb
xchg
xchg
out
outsl
and
out
cmp
sahf
shlb
mov
xchg
cli
mov
lods
cmp
and
lods
mov
and
and
popa
cmp
inc
adc
cmpsb
test
bound
test
testl
push
mov
fdivl
inc
das
jg
fs
and
xor
mov
inc
sarl
adc
jne
ss
sub
cli
pop
sarl
nop
inc
ffreep
push
into
sub
popa
jno
jge
adc
xchg
std
leave
div
add
into
sub
jge
in
fs
imul
ss
rcl
add
sti
and
xchg
pop
sbb
sbb
push
or
add
das
xchg
imul
cltd
outsw
or
imul
cld
mov
loop
std
ja
lods
pop
stos
pop
shll
repz
cs
add
fstps
xchg
iret
cmp
jmp
xchg
mov
clc
outsl
pop
sub
jmp
mov
add
bound
mov
or
nop
mov
pusha
lods
cmp
fists
ljmp
jnp
movsb
inc
fistl
mov
aad
xchg
loop
mov
aam
out
popa
test
mov
arpl
mov
jmp
pusha
xchg
mov
xor
adc
repz
jp
mov
cmpl
movsl
hlt
psllq
int
dec
into
rcrb
xor
xchg
loope
insb
popf
cltd
jge
jo
cmp
data16
pop
andl
mov
fadds
lcall
adc
mov
pop
xchg
inc
mov
cmp
dec
loope
aad
lods
mov
clc
sub
push
jo
outsl
adc
xlat
outsl
insl
pcmpgtb
out
jae
xor
add
cmpsb
add
leave
stos
lds
sbb
bound
and
add
push
adc
das
dec
daa
out
jp
mov
insl
leave
out
and
dec
dec
jl
or
adc
shrb
push
push
data16
enter
push
fwait
ja
fs
out
xor
xchg
out
loope
aam
jl
sbb
add
cmp
inc
fdivp
inc
clc
jo
xchg
and
dec
or
cwtl
or
fistpll
aaa
sbb
test
insb
sbb
push
lret
std
cwtl
inc
jle
xchg
int3
mov
fstl
negb
into
data16
push
fimuls
loop
sub
addr16
push
mov
dec
push
xchg
lds
es
or
pop
iret
push
inc
test
adc
iret
or
mov
in
cmpsb
gs
mov
stos
gs
sti
xchg
mov
sub
popa
add
out
cli
push
aas
adc
out
cmc
outsb
loop
mov
cmp
cmpsl
xchg
xchg
dec
adc
cs
fildll
ss
pop
cmp
xor
lods
fidivs
aad
jns
ljmp
stos
push
mov
sbb
fdivl
arpl
outsb
pop
push
lds
mov
mov
bound
push
xor
insb
adc
pushf
push
xchg
pop
popa
mov
mov
sub
es
es
cmpsb
pop
insl
cli
xor
icebp
mov
int3
mov
scas
and
imul
mov
lea
or
test
and
fldpi
sub
jo
pushl
ret
pushw
lea
es
xchg
clc
cmp
cmp
jnp
pop
mov
fstps
jle
jg
dec
xchg
jg
inc
addb
dec
hlt
test
mov
insb
mov
cmpsb
mov
mov
loop
inc
mov
mov
or
inc
cmp
cmp
sbb
aam
push
push
mov
in
test
ret
pop
dec
fsubr
mov
xchg
cwtl
mov
mov
mov
xor
cs
lock
mov
sbb
das
xchg
or
popf
mov
xchg
shll
fdivl
addr16
test
pop
mov
jns
xchg
lods
popa
bound
and
jp
inc
pop
mov
negl
jge
sarl
arpl
fsubp
mov
cwtl
xchg
stos
pop
or
sti
jbe
arpl
cmc
fbstp
lea
pop
aad
lods
xor
mov
mov
loop
lods
push
push
test
adc
dec
dec
adc
out
fisubs
push
gs
dec
jae
sbb
call
mov
ja
int3
or
aam
stc
movsb
xchg
mov
in
sub
cmpsl
mov
adc
pop
sti
xchg
les
jmp
movsb
enter
sub
inc
daa
arpl
pop
mov
adc
mov
clc
adc
cmc
addr16
jb
fildl
sahf
push
and
jecxz
lods
inc
lock
mov
stc
jb
test
or
inc
divl
mov
mov
mov
cmpsl
mov
inc
inc
ret
mov
out
test
mov
xlat
movsl
shll
xchg
pop
lcall
mov
popa
inc
in
jo
cmp
fiadds
inc
cmp
fisubl
gs
and
cmp
pop
jbe
aaa
adc
add
pop
cltd
clc
mov
xlat
negb
adc
xlat
cwtl
add
test
xchg
or
jmp
in
roll
dec
stos
sbb
cltd
pop
jge
mov
out
inc
fidivl
mov
xchg
sbb
xchg
jge
fcomi
and
mov
cmp
adc
mov
ds
xchg
sub
and
mov
add
movsb
mov
jb
add
mov
testl
jne
ret
in
sub
pop
xchg
xchg
js
mov
arpl
out
xor
or
shlb
pop
outsl
leave
pop
iret
xor
mov
or
sub
push
pop
lcall
inc
jp
add
jecxz
inc
sub
shlb
leave
dec
jns
imul
pop
ljmp
mov
stc
add
or
sbb
mov
hlt
xchg
and
mov
xchg
xchg
mov
in
push
adc
in
aam
out
shlb
and
ret
xchg
pop
push
adc
add
bound
dec
dec
popa
mov
push
aaa
dec
in
xchg
cmp
imul
mov
cmp
adc
fucom
jecxz
adc
inc
stc
cmc
push
push
call
roll
adc
push
decb
daa
lods
xchg
add
vmwrite
sbb
xchg
clc
loopne
into
sbb
cmpsl
sarl
mov
sub
or
lods
loopne
xchg
aam
roll
movsl
mov
rcll
mov
fldl
mov
int3
aaa
mov
xchg
ficoml
shr
dec
sub
int3
in
pusha
mov
mov
fcomi
mov
cmp
in
in
cmp
enter
mov
lret
sbb
adc
pop
add
pop
xlat
imul
imul
pop
data16
and
mov
adc
out
and
mov
testb
sbb
inc
gs
popa
shlb
mov
test
fcoms
hlt
ljmp
cmp
or
or
outsb
xchg
jmp
jno
and
cld
push
and
add
dec
mov
push
icebp
sub
adc
adc
inc
mov
mov
pop
adc
mov
mov
cmpsb
mov
sbb
cmp
push
pusha
push
sbb
sub
sub
loope
movsb
arpl
lock
into
stos
test
or
jp
adc
xor
fwait
sub
pop
mov
push
push
aas
stos
es
movl
loopne
mov
pop
scas
gs
mov
and
mov
fcoml
and
inc
std
test
je
mov
push
sarb
add
xor
adc
cltd
iret
dec
popf
mov
or
mov
push
add
mov
jecxz
push
ljmp
mov
xchg
daa
mov
movsl
jns
out
enter
push
xor
jb
pop
roll
sbb
pop
inc
push
in
cwtl
and
imulb
adcl
mov
bound
lret
dec
and
sbb
mov
sub
sbb
add
ljmp
leave
aad
push
test
insb
divps
ljmp
add
jb
repz
ror
insl
ret
pop
mov
out
addr16
fadd
mov
ret
xchg
jno
lahf
inc
rcrb
jns
js
pop
and
jns
inc
and
in
xchg
xor
mov
sbb
xor
jle
inc
mov
shrb
and
dec
jb
mov
aam
pop
mov
sbb
mov
mov
adc
or
pop
mov
and
in
stos
mov
into
lds
in
bound
and
in
shll
orb
mov
imul
loopne
lods
repnz
sub
adc
fldln2
repnz
add
scas
jnp
xchg
ds
cwtl
loope
nop
push
test
mov
pop
cmp
mov
pop
xchg
rclb
or
aad
and
or
mov
fcoms
dec
cld
rclb
sti
or
push
push
add
xchg
add
inc
jbe
cmp
lahf
push
add
sbb
ljmp
lcall
push
cmp
ss
mov
pop
add
push
mov
adc
mov
sub
push
lods
mov
jge
in
test
rcrl
arpl
jne
xchg
pop
mov
or
sti
test
add
ret
outsl
xchg
fstps
dec
cmp
jl
push
lret
or
jmp
adc
pop
or
shll
mov
ljmp
cld
mov
lret
sub
jns
cwtl
and
jbe
lahf
and
add
andb
jle
dec
clc
adc
jno
loopne
dec
les
aad
fcmovu
rolb
out
sub
sub
out
xor
jle
sbbl
and
movsb
lret
into
inc
lock
push
pop
fdivs
mov
lea
sub
je
mov
shll
push
push
mov
ljmp
xchg
sbbb
jb
pushf
cmc
xchg
add
loop
mov
mov
lods
mov
cwtl
sbb
sbb
cwtl
aaa
mov
out
jbe
pop
xor
test
cmc
inc
jns
push
roll
inc
shrb
popa
inc
jle
shlb
fmuls
outsl
stos
daa
mov
in
mov
xor
sbb
push
xchg
sahf
cmpsb
lods
add
pop
shrl
add
test
ja
xchg
scas
faddp
fwait
aam
test
mov
stos
inc
adc
xchg
loop
sbb
jp
pop
jp
jb
cli
inc
sub
adc
daa
pop
inc
xchg
lret
cs
inc
enter
add
jl
xchg
mov
mov
mov
xor
test
repnz
pushf
std
xchg
mov
pop
or
adc
arpl
xor
jo
push
push
fsubs
ljmp
enter
mov
out
sbbb
lahf
push
or
and
std
jns
cld
or
cmp
or
jbe
mov
imull
mov
loopne
das
jge
or
push
idivb
frstor
aam
mov
imul
cmpb
or
and
push
mov
add
adc
ficoms
rolb
ja
outsb
push
cmp
xchg
das
mov
fstl
push
pop
sbb
sti
cli
dec
int
jo
mov
insb
adc
mov
cmp
push
add
cld
dec
ja
push
sti
push
xor
push
lret
sub
sbb
jno
mov
xlat
das
push
pop
ret
test
loop
pop
test
cmp
sub
and
sti
and
fldl
pop
cltd
pop
scas
incl
aam
cwtl
pop
xchg
loop
add
je
dec
rcll
ljmp
dec
stos
mov
mov
mov
clc
arpl
sahf
leave
inc
jbe
sbb
in
repz
xor
push
mov
push
and
pop
cmc
imul
dec
aaa
xchg
jge
setge
lods
dec
mov
jg
adc
mov
repnz
rcrb
mov
inc
cltd
popf
arpl
lss
add
pusha
push
inc
rclb
test
add
jns
imul
iret
inc
pushf
into
rorl
lock
stos
out
fdivrp
data16
shrb
test
sub
mov
push
jae
add
in
sub
fcoms
jbe
mov
inc
daa
sbb
mov
pop
bswap
lods
neg
negb
outsl
adcb
hlt
mov
add
addl
add
jns
out
jns
dec
mov
imul
js
sub
or
inc
lock
xchg
mov
add
lods
nop
cs
sahf
inc
ja
ficompl
push
pop
mov
dec
jmp
jo
jne
jnp
add
pushf
adc
jb
loop
push
xor
push
mov
pusha
jle
and
xor
imul
jne
add
ret
pop
pop
xor
xlat
repz
sarb
cmc
inc
mov
movsb
in
cltd
imul
aam
and
repz
push
cmp
imul
leave
jle
das
sub
push
popf
xchg
or
add
cmp
cmp
sub
jo
xorb
dec
mov
pop
je
in
mov
xchg
xor
mov
mov
mov
pop
vpshuflw
mov
inc
cmp
mov
xor
rcrb
pop
out
int
xor
stc
inc
inc
int3
loopne
sbb
rol
sub
fmuls
xchg
dec
dec
data16
sub
jb
stos
out
das
pusha
add
shl
xor
adcb
mov
mov
lret
sub
jb
jne
insl
inc
xor
subl
aaa
stos
outsl
cmp
pop
inc
ret
push
clc
push
clc
out
or
mov
aam
cld
push
mov
ja
mov
outsl
pushf
and
enter
fldl
pushf
and
dec
lahf
sbb
sub
cmpsb
ljmp
or
inc
out
in
negl
sub
aam
push
and
mov
pop
add
enter
adc
add
arpl
jl
lods
jl
cwtl
add
frstor
lret
inc
xchg
movsb
sbbb
cwtl
test
push
dec
mov
arpl
lcall
jle,pn
adcl
repz
in
sbb
out
test
bound
out
test
mov
push
cmp
fldt
mov
testl
xchg
aaa
ds
dec
add
lahf
and
xor
fidivrs
dec
sbb
mov
inc
subl
outsl
push
sub
outsb
insl
ss
insl
ret
adc
gs
pop
stc
adc
add
and
and
push
mov
jecxz
cmp
and
fnsave
clc
fdivr
adc
fwait
adc
out
dec
sarb
sub
adc
jns
mov
push
xchg
pop
fnstenv
fists
js
movsl
or
mov
sahf
sub
in
in
fsubl
js
cmpsl
fwait
mov
pop
jg
js
ljmp
jmp
add
sahf
adc
push
jne
inc
mov
out
pop
adc
adc
lret
in
mov
push
mov
xchg
jg
xchg
lcall
sbb
pushf
stos
testl
or
adc
sti
jg
mov
pop
mov
push
mov
daa
lods
arpl
push
cmc
rolb
mov
test
aam
mov
dec
shrb
outsb
lods
jg
cmp
mov
xchg
leave
notb
cmp
jecxz
cmp
bound
stos
pop
jo
xchg
add
js
jns
adc
jg
cmpsb
pop
cs
popa
sbb
xchg
and
sub
jnp
scas
test
filds
jmp
clc
rol
push
adc
inc
fldt
sub
rcrl
mov
xchg
mov
or
lcall
push
insl
jno
dec
jecxz
jl
pop
divl
push
lock
fwait
dec
fstl
and
cmp
add
sub
mov
adc
adc
rcrl
movsl
in
xchg
mov
mov
insb
mov
sub
push
or
loop
testb
pcmpgtw
es
lock
inc
dec
fmull
call
into
jecxz
popf
sarl
dec
inc
xor
hlt
lahf
push
xrelease
decl
xlat
movsb
sub
mov
subl
mov
cmp
lods
jge
xchg
dec
test
sub
jmp
fwait
or
insl
outsl
lea
dec
repz
lods
sub
pushf
sarl
push
aad
icebp
ror
cmc
xchg
iret
pop
sti
es
dec
lds
stos
js
addr16
dec
inc
dec
mov
std
arpl
rorb
sbb
jle
arpl
imul
shrb
inc
jbe
addb
addr16
push
xor
dec
js
shlb
cmp
ja
pop
insb
dec
add
fsubrl
cs
popa
mov
lea
aam
sub
lahf
andb
test
es
jmp
mov
sbb
fisubrs
xchg
aaa
mov
cld
dec
das
jb
dec
fistl
push
ja
lret
add
mov
xor
pmaxsw
cmc
hlt
cmp
sbb
or
ret
rol
or
test
xchg
in
ljmp
js
in
data16
loope
jl
sbb
in
popa
pop
pop
push
pop
jmp
push
dec
dec
pop
ficomps
mov
mov
pop
insl
ljmp
sub
aas
sub
out
call
mov
ljmp
jle
stos
jbe
inc
mov
pop
iret
or
mov
icebp
dec
aaa
popa
das
jno
push
imul
inc
clc
push
xchg
in
mov
jl
sbb
pusha
push
pushf
ja
jmp
ljmp
mov
jnp
lret
adcb
jl
or
push
xchg
lods
data16
or
adc
jnp
xor
aas
pushf
inc
setbe
jge
push
push
fistpl
add
or
dec
hlt
int3
and
jle
aam
lock
jns
mov
arpl
mov
fsubrl
std
sbb
mov
fldenv
imul
shlb
pusha
dec
aas
adc
stos
les
or
cmp
mov
pusha
sbb
jl
test
jl
sub
pop
cmp
jb
xor
lock
mov
pop
repnz
popa
lahf
neg
lahf
stos
out
lcall
testb
aas
or
sbb
clc
leave
iret
mov
or
out
lcall
sbb
xor
sub
xchg
shll
fwait
mov
jecxz
outsl
out
std
lahf
insl
sub
pop
in
xchg
xchg
jne
xchg
imul
pop
jns
mov
cmp
pop
xor
or
fcoms
in
sbb
and
pop
mov
push
jge
xor
pushf
leave
adc
roll
mov
xor
mov
mov
adc
xchg
rorb
insb
mov
in
and
mov
inc
mov
int
push
pop
fdiv
filds
pop
sub
pusha
fwait
jb
in
loope
icebp
stc
mov
push
push
mov
out
xor
aaa
test
in
cltd
sub
xchg
cmp
ficomps
inc
and
frstor
rol
and
lods
daa
fidivs
push
jne
aad
bound
adc
push
pop
jo
mov
jb
pop
dec
imul
insb
pop
leave
nop
cmp
mov
sbb
inc
cmp
add
popa
mov
inc
fwait
mov
sub
imull
ret
jge
cmpsl
fisttps
jmp
jb
add
cs
in
xor
mov
add
cmpsl
mov
outsl
sbb
addl
fdivs
push
fstpt
xor
sub
inc
int3
push
dec
loop
dec
dec
daa
jns
jle
jbe
addr16
cmp
dec
insb
xor
stc
or
or
insb
test
nop
mulb
lods
mov
pusha
outsb
insb
aad
push
loopne
lahf
adc
rorl
xor
pop
mov
hlt
lret
push
or
cmpb
stc
das
jae
xchg
adc
cld
andb
xlat
out
jns
outsl
xlat
xor
jle
xchg
hlt
imul
mov
add
les
push
into
jne
mov
aas
aas
lods
into
mov
pop
xchg
mov
pop
mov
pop
push
fimuls
xchg
xchg
cld
aad
jl
insb
fisttpl
add
outsb
ret
xor
pop
fnstsw
je
sbb
adc
movsl
pop
mov
mov
scas
movsb
inc
sub
jne
in
mov
push
js
push
cmp
insl
cmp
jns
loopne
push
push
add
test
xor
push
or
ljmpw
pop
mov
daa
es
push
loopne
aam
leave
xorb
sub
cmp
and
sub
and
inc
leave
fldl
pushf
add
adc
test
pop
mov
shr
rorb
mov
stos
xchg
out
in
push
jmp
sub
cld
jp
fs
clc
xchg
jmp
mov
jae
test
mov
mov
inc
repz
xchg
fwait
dec
xchg
scas
inc
insb
cmp
ja
sbb
mov
add
repnz
adc
fmulp
loop
push
xlat
test
lods
inc
push
mov
jmp
lahf
enter
cmp
adc
mov
std
sbb
popf
ljmp
sbb
leave
testb
inc
lret
ret
cli
repz
cmpsl
fldcw
sub
mov
in
lods
jp
pop
cmp
fld
push
sbb
stos
mov
jge
out
das
mov
fisubrs
xchg
inc
out
out
push
gs
mov
cwtl
sahf
aaa
rcrb
loope
jl
inc
cmp
xor
inc
dec
iret
push
ror
xor
mov
in
out
fwait
clc
adc
pop
cld
ljmp
ret
xor
push
std
push
ss
xchg
cwtl
lods
clc
pop
pop
mov
dec
out
xlat
cmc
adcb
clc
mov
inc
shll
lds
adc
nop
enter
sbb
jno
cs
dec
and
cmp
ret
out
out
push
orps
loopne
daa
mov
and
sub
div
inc
push
jb
subl
cmp
jle
lods
push
ret
xchg
xchg
nop
std
pop
jae
mov
movsl
test
repnz
adc
fyl2x
stos
loope
sbb
sbb
inc
pop
leave
int
divl
pop
cmp
mov
ds
push
mov
jo
sbbl
sbb
cwtl
je
rorl
push
mov
add
aad
fnstenv
pop
xchg
mov
jb
les
les
in
mov
insb
jle
mov
scas
dec
dec
cmc
jecxz
pop
and
shlb
lcall
mov
and
dec
dec
push
out
mov
loope
lods
sarb
cmp
mov
outsl
ljmp
mov
mov
sub
aas
iret
mov
or
add
shr
sti
xor
mov
xor
lds
lds
shll
movsb
int
std
mov
adc
push
push
inc
setns
ror
push
insb
fsubrs
sahf
loop
sbb
mov
mov
sbb
add
adc
xor
mov
or
nop
cmc
sbb
sbb
scas
ret
sbb
roll
sbb
out
jae
pop
pop
cli
jb
adc
mov
push
jns
and
popa
add
mov
push
cltd
pop
sub
cli
xlat
ljmp
in
mov
lahf
inc
push
inc
test
out
mov
stos
xchg
loope
inc
repnz
xchg
insb
lret
into
jmp
insl
pop
mov
out
push
adc
or
int3
arpl
sbb
aad
sub
pop
test
gs
negb
test
ret
jge
jb
insb
int
out
cmpsl
pushf
mov
dec
mov
dec
dec
pop
imul
std
cmp
decl
popa
push
ljmp
call
fcmovnb
pop
push
inc
pop
rcll
ds
fs
inc
ja
pop
adc
xchg
js
movsb
test
sub
fiadds
aaa
movsl
jp
insl
or
and
ret
adc
adc
cmpsl
sbb
lret
and
sbb
xchg
popa
lahf
aad
std
or
mov
scas
cmp
push
fsubrs
fwait
bound
cmp
js
cwtl
mov
shlb
sbb
cwtl
adc
stc
rcll
pushf
bnd
xchg
pusha
repz
test
cmp
js
mov
cmp
daa
cmp
xor
jno
push
cmp
sarb
sub
push
push
mov
js
mov
cli
push
arpl
test
cli
mov
and
gs
mov
xchg
shrl
or
stc
mov
and
or
push
lahf
mov
pop
push
js
lret
inc
push
add
test
scas
stos
push
not
dec
jle
jg
mov
pop
jge
jae
hlt
adc
cli
sub
rcll
mov
add
and
imul
jnp,pt
xor
mov
lock
scas
mov
pusha
push
mov
mov
mov
iret
sub
dec
mov
cmp
icebp
lods
aad
xor
int3
lret
mov
jg
aas
test
jae
push
push
in
fwait
loop
in
aam
add
mov
std
cmpsl
out
pop
in
ret
out
cmp
sbb
fwait
jno
inc
xor
sbb
pop
cmp
ficoms
shll
and
sbb
movsb
arpl
mov
push
mov
sbb
inc
xor
fisttps
pop
jne
mov
or
ja
cmp
fs
pop
call
sti
clc
sub
imul
mov
add
fucomip
scas
popl
inc
xchg
add
jnp
mov
push
xchg
cmpsb
jnp
dec
pop
test
mov
jnp
scas
cmp
xor
leave
adc
or
mov
xchg
mov
xchg
shll
loop
je
sahf
pushf
push
popa
jb
mov
neg
das
sbb
stc
mov
aas
insl
xor
jne
mov
add
inc
or
lret
jp
inc
pop
sahf
fistps
pushl
and
cmp
in
inc
jne
loopne
bound
dec
sbb
data16
fwait
jmp
sbb
push
inc
pop
inc
sbb
cwtl
outsl
cmp
jno
or
lock
lahf
aad
aad
fcoms
fsubr
dec
jmp
sub
xor
sbb
mov
jp
shrl
subl
add
das
jb
aaa
ficoml
fs
shlb
out
dec
repz
call
bound
sub
cwtl
sarl
mov
fwait
xorb
into
xor
jge
mov
push
adc
xor
jl
movb
out
add
add
stos
filds
pop
dec
inc
cmovge
jp
mov
xchg
push
data16
mov
dec
adc
push
imul
imul
jae
insb
pop
test
inc
popa
push
jb
pop
jns
jnp
mov
ljmp
push
aaa
adc
xor
xchg
lods
xor
xor
xor
sub
clc
aam
fnstsw
mov
sub
loopne
add
mov
add
sbb
popa
push
inc
cmp
loope
sbb
mov
into
mov
and
outsl
add
adc
cli
movsl
push
xchg
int
cmp
les
daa
outsb
sti
fistl
mov
out
inc
sub
or
push
sarl
sti
cmp
mov
inc
jae
sub
dec
adc
das
push
cli
cmp
out
out
mov
push
mov
sbb
sahf
adc
cmp
sbb
mov
cmp
mov
rorb
js
in
mov
lock
add
in
int3
xchg
inc
popf
nop
bound
pop
add
dec
iret
shll
movsl
int3
dec
cmpsl
fstpt
mov
mov
jecxz
pop
jbe
insb
cwtl
movsb
int3
add
mov
stc
inc
rorl
push
aam
inc
push
push
cmp
and
or
cmp
or
add
das
std
add
pop
push
repz
mov
push
push
mov
fs
cmp
fnsave
dec
fistpl
xor
dec
cmp
mov
sbb
jae
movsb
xchg
dec
mov
sarb
or
mov
cli
xchg
dec
orl
jb
push
mov
shll
mov
and
push
push
test
and
jle
fdivl
or
xlat
lods
rorl
repnz
sub
mov
in
pop
movsb
jae
push
addl
and
insl
mov
adc
movsl
or
outsl
test
adc
aaa
mov
movsl
js
inc
shrl
add
shrb
xchg
push
bound
popf
pop
aaa
adc
adc
push
stos
test
test
cmp
and
lcall
clc
jp
mov
pop
shrb
gs
or
xchg
int3
in
scas
sbb
sub
test
cmp
add
sbb
in
or
pushl
mov
pop
movsb
mov
repz
cmp
dec
adc
test
js
adc
cltd
hlt
aad
pop
ret
fwait
cs
jp
rcr
mov
jbe
cmpb
fcmove
lret
lods
mov
xchg
dec
mov
mov
cmp
loopne
sbb
xor
test
sub
sarb
adc
fimull
fisubs
mov
int3
insb
sti
shrb
add
mov
clc
shr
mov
mov
out
and
and
ljmp
xchg
in
test
mov
sahf
stos
out
in
mov
inc
sti
and
push
cld
jae
sub
sub
mov
shlb
xchg
dec
insb
adcb
lods
sub
repnz
in
and
inc
cltd
push
jmp
scas
fdivp
sbb
mov
mov
push
nop
mov
mov
cwtl
and
mov
mov
fstpt
int
sub
or
ljmp
jl
mov
nop
adc
jge
out
mov
lods
enter
xor
adc
xchg
lock
imul
mov
mov
inc
or
mov
fcompl
jp
and
add
inc
in
cmp
imul
pop
cli
adc
es
adc
push
lcall
pop
jmp
cmpsb
or
pop
and
cltd
shlb
gs
mov
imul
mov
push
cmp
cltd
loope
bound
mov
push
cli
cwtl
mov
incb
pusha
jmp
sub
fldt
mov
mov
aam
in
pushf
faddl
out
mov
fldenv
cmpsl
and
fmul
stos
ds
jl
test
in
push
std
daa
out
xlat
stos
gs
loope
sub
ret
fwait
movsl
cli
dec
sub
aas
pop
mov
inc
in
mov
xchg
scas
push
rdmsr
mov
lods
out
les
push
jecxz
frstor
dec
pop
ja
jb
lret
jge
add
jne
mov
lret
push
pop
adc
jp
push
add
mov
jge
iret
sbb
movsl
js
add
push
test
xchg
mov
imul
add
sbb
das
xor
cs
cli
mov
sti
rorb
imul
sbb
push
test
out
adc
rcrl
dec
jl
movsl
pop
subl
xchg
jne
fisttps
push
mov
sub
lret
mov
in
jp
inc
sbb
pop
imul
xchg
mov
cmpsl
into
adc
and
sub
pop
jg
inc
cmp
outsl
jns
sub
or
dec
dec
shlb
mov
push
sbb
enter
loope
dec
pop
jae
aad
jmp
sti
aaa
insb
fsubr
mov
lods
push
cmp
popa
scas
mov
hlt
and
mov
leave
push
lcall
mov
xor
dec
pop
inc
dec
cwtl
loope
adc
cmpsb
mov
lret
push
push
dec
mul
add
stos
xchg
lods
adc
and
xchg
in
mov
hlt
xchg
sub
push
cmpsb
push
push
negb
cmp
sti
dec
pop
adc
fldl
xchg
pop
or
aas
cmpsl
and
push
or
cmp
in
std
scas
jo
inc
pop
aad
test
cld
sbb
xchg
mov
pop
psubsb
sub
repnz
sbbl
pop
push
enter
jmp
mov
pop
ljmp
fstp
aaa
rclb
into
cmp
mov
aad
or
mov
mov
mov
mov
gs
leave
data16
daa
call
lahf
cmp
subb
dec
nop
xor
je
inc
mov
mov
js
sahf
dec
fcoms
dec
pop
shll
adc
sub
cmp
test
dec
ss
mov
bound
mov
outsb
xor
cmc
sub
and
mov
and
add
adc
xor
add
gs
jo
subl
cmp
aam
lcall
xor
test
dec
lcall
cwtl
cmpsl
cli
insb
push
and
pop
mov
nop
or
fs
xor
xor
adc
dec
sub
or
andl
lret
or
cmp
sbb
popa
ss
xor
mov
fiaddl
mov
sti
das
hlt
xorb
dec
push
test
pop
sub
mov
rorl
and
pusha
xchg
pop
data16
repz
lcall
mov
sahf
pop
mov
adc
cmp
out
scas
mov
mov
cmp
jl
or
xchg
cwtl
push
add
loope
xchg
xchg
lods
ds
mov
mov
test
pop
dec
aas
dec
adc
mov
cwtl
test
jp
xchg
loopne
xchg
xor
jb
gs
sbb
das
push
xchg
hlt
cwtl
ror
mov
test
je
gs
addb
addl
in
imulb
outsb
jbe
mov
adc
enter
add
cltd
push
mov
inc
push
and
push
push
imul
sbbb
ss
sub
test
xor
xor
mov
push
test
fidivrs
or
mov
adc
mov
or
int3
or
stos
and
aaa
rorb
dec
out
sub
ljmp
mov
data16
inc
sbb
mov
mov
out
mov
jl
loopne
or
es
mov
xor
sbb
gs
jl
pop
call
xchg
push
adc
mov
push
lea
movsb
push
ja
repnz
in
lock
fcompl
aad
lret
mov
cmp
stos
cmpsl
cmp
repnz
jl
ss
lods
add
xchg
fldenv
xchg
mov
and
or
jo
xchg
or
jg
in
call
clc
add
mov
adc
aaa
mov
mov
xor
pop
stos
mov
data16
xor
cwtl
aam
and
inc
loope
lret
push
push
xchg
mov
insl
in
lock
cmp
adc
pop
and
dec
cs
sbb
sbb
fwait
test
in
mov
mov
stos
jg
dec
ret
xchg
inc
fisubrs
cld
mov
gs
aam
or
xor
in
fidivl
xchg
test
insl
fcoms
aam
sub
jae
push
nop
and
add
dec
cmp
dec
sub
inc
fildl
stc
in
dec
xlat
addr16
adc
dec
icebp
sarb
jno
cmc
adc
and
lret
add
jg
out
add
xchg
jnp
popa
push
bound
nop
js
adc
leave
mov
jle
inc
jge
jg
dec
das
xchg
add
aam
dec
imul
movsl
testb
int
sbb
dec
fcoml
sarl
sub
sbb
daa
enter
jnp
push
repnz
inc
jno
jb
int
jnp
les
sbb
xor
shlb
stc
loopne
pusha
call
out
mov
cmpsb
inc
and
xchg
cltd
popl
pop
sahf
insl
fsubrs
mov
rclb
stos
mov
int
imul
mov
lds
fisubrl
insb
enter
pusha
cld
cmp
pushf
pop
lahf
push
out
stos
cmp
add
add
pop
mov
ja
cmp
push
xor
xchg
mov
xchg
daa
adc
cltd
cli
add
std
cmpsl
mov
int
bnd
dec
bound
jnp
addr16
xorb
imul
adc
je
inc
push
sbb
and
ret
mov
or
neg
icebp
shrl
or
sub
pop
pop
dec
push
jle
jp
ret
in
pop
jge
sub
inc
mov
sbb
ret
ja
push
out
cmp
sub
dec
aas
loopne
add
or
adc
adc
daa
jns
mov
sub
mov
inc
int
in
repnz
pop
mov
mov
ret
mov
mov
fucomip
xchg
test
test
std
dec
xor
enter
call
fstpt
xorl
shlb
enter
mov
xchg
hlt
adc
sub
cmc
dec
sbb
mov
out
aas
leave
xchg
mov
xor
adc
decb
stos
pop
dec
jmp
movsb
adc
add
call
lea
add
ret
dec
cli
in
jecxz
sbb
ja
pop
repnz
sub
repz
sbb
ss
mov
ds
push
xor
ds
or
add
dec
aaa
loopne
pop
mov
jns
mov
fisttpl
inc
mov
mov
int3
fadds
jo
inc
cwtl
xchg
adc
rcl
adc
data16
add
in
hlt
scas
pushf
inc
sub
adc
popf
ret
dec
adc
les
in
adc
mov
call
adc
popa
push
mov
movsl
nop
cmp
bound
aad
cmp
jle
icebp
xor
mov
cmpsb
test
adc
mov
xchg
or
xor
mov
lret
sub
loope
rclb
mov
outsb
fildl
lret
xor
aas
xchg
push
out
inc
push
outsb
lahf
or
pop
mov
mov
dec
iret
mov
shll
testl
and
sub
mov
mov
arpl
les
pop
movsb
lods
pop
xchg
add
test
insb
ret
push
sbb
repz
mov
xchg
int3
push
or
popa
lds
or
ficompl
pop
sbb
stos
xchg
sub
mov
int
sahf
stos
fwait
cmp
pop
xor
pop
xchg
inc
and
add
in
insb
je
xchg
lret
push
lfs
push
lcall
sub
or
je
enter
adc
gs
popa
jecxz
idivl
sbb
add
fptan
ja
movsl
subl
add
cmp
aaa
jb
xchg
loope
daa
bound
inc
mov
lock
ds
das
mov
push
inc
add
mov
sub
or
leave
faddl
daa
add
and
jmp
insb
xor
je
repz
stos
test
sbb
sub
int3
pop
dec
xchg
and
add
jno
lods
ljmp
cmp
shrl
addr16
rolb
test
cs
rcrl
push
and
cs
movq
xchg
push
insb
js
cmp
push
cmp
mov
xorl
push
jmp
and
cmpb
cmp
add
xchg
stc
nop
mov
cld
jmp
mov
xor
arpl
mov
pop
sbb
and
pop
add
or
mov
lods
ja
mov
je
ja
xor
cli
insl
push
ror
mov
push
jg
jl
lret
and
adc
pop
jp
test
push
fwait
leave
mov
adc
shr
fsubrl
push
inc
mov
dec
lds
leave
loope
sbb
subb
out
bound
clc
push
fdivrs
loope
sbb
es
ret
xchg
sarb
aad
dec
jmp
mov
cmpsb
cld
add
ror
sbb
les
jnp
dec
fwait
mull
cmpsl
jb
ret
xchg
mov
and
sahf
jecxz
xor
inc
xor
insl
xorl
cmc
jbe
mov
sbb
clc
mov
ret
jo
push
cmp
pop
sarl
out
jmp
repnz
in
fsub
xchg
sub
arpl
inc
test
xchg
sbb
jnp
cmc
in
imul
or
pusha
push
cmpsb
leave
sbbl
push
pop
or
cs
in
mov
adc
cwtl
add
adc
mov
mov
decl
rclb
mov
jg
test
jecxz
cmpsl
adc
fidivl
insb
loopne
aas
je
mov
dec
add
lds
pop
std
adc
adc
jno
jmp
imul
test
and
ret
add
enter
inc
cld
loope
stos
dec
into
xchg
or
ja
in
mov
sub
push
ret
test
je
cmc
dec
in
lock
je
jp
mov
pop
std
sbb
inc
out
daa
mov
dec
mov
std
xchg
cmp
push
xor
sbb
xchg
fistl
subl
fidivl
xchg
mov
add
popf
mov
out
ljmp
pop
push
mov
movsl
and
pop
ja
mov
mov
cmp
mov
stc
int
lret
jae
and
mov
inc
xor
fnstsw
jb
jns
in
dec
or
add
mov
push
gs
mov
mov
aad
loope
mov
pop
mov
test
jp
xchg
dec
nop
pop
cwtl
mov
adc
ret
arpl
mov
jno
subl
shll
out
stos
mov
cmpsb
insb
pop
loop
push
outsb
daa
mov
int3
loopne
dec
sbb
insl
cmpsb
cltd
mov
jl
add
add
loopne
dec
sahf
std
mov
fdiv
mov
push
inc
xor
push
popa
loop
movsl
push
or
fsubs
add
rep
push
in
inc
jne
mov
pop
fisubl
iret
lods
pop
cmp
jae
les
stos
add
movsl
daa
mov
rcrb
pop
or
scas
jecxz
addb
jae
inc
ja
mov
jecxz
and
dec
sbb
in
push
scas
dec
mov
xchg
sbb
adc
jg
imul
jns
mov
or
les
inc
mov
jae
scas
out
and
idivb
mov
cmp
pop
aam
aam
pop
pop
rolb
jmp
and
popa
vpaddusb
scas
add
mov
mov
push
pop
stc
sbb
sahf
aaa
mov
dec
fwait
xchg
push
pop
icebp
push
and
test
dec
mov
jne
jmp
mov
mov
jb
enter
outsb
cli
mov
ss
test
int3
jns
lahf
adc
cmpsb
ret
jae
cs
push
xor
sbb
testb
imul
mov
loopne
lods
dec
std
or
jl
cwtl
push
xor
cmpsl
in
jecxz
push
stc
sbb
jmp
ret
and
test
push
and
sti
sbb
mov
stc
mov
aas
mov
sub
or
aad
test
mov
add
adc
sbb
fdivrs
fimull
push
xor
inc
repz
icebp
roll
push
mov
xor
cmp
jae
sbb
mov
clc
shll
mov
jmp
fwait
cmpsl
test
pop
cmp
mov
ss
sbb
and
cltd
or
test
cmp
and
scas
sti
xchg
ret
addr16
testl
pushf
push
mov
pop
fmuls
adc
adc
inc
data16
pop
sub
imul
mov
std
mov
rcll
mov
and
pushl
loope
mov
sub
fistps
loope
insl
pop
rol
leave
sub
xchg
in
xchg
rcrb
arpl
cmp
leave
clc
mov
std
and
out
jmp
subb
jbe
roll
inc
stos
hlt
dec
sbb
sub
popf
push
push
aad
lret
xchg
negl
xchg
xor
mov
out
dec
mov
fs
jle
mov
ds
into
mov
xlat
or
push
lods
add
mov
lds
sbb
cmpsl
jb
loop
nop
mov
mov
mov
stc
mov
clc
push
sti
and
add
out
leave
jo
inc
dec
or
aaa
shll
xor
addr16
iret
dec
xchg
insl
xchg
test
not
xchg
inc
aaa
or
lahf
out
sti
out
lahf
lret
fldl2e
ja
cmp
ret
js
push
lret
adc
jecxz
cmc
or
push
jg
pop
cld
mov
jge
into
fcomps
adc
pop
or
push
sub
mov
dec
inc
push
test
insl
or
rcr
sahf
push
xchg
xor
dec
sub
into
shl
je
arpl
and
mov
mov
or
xchg
fs
sbb
adcl
inc
imul
push
lcall
xor
xchg
pop
push
adc
cwtl
push
aaa
ret
and
fldl
adc
and
in
shll
mov
push
pop
lret
repnz
loope
push
add
ss
or
jnp
push
adcb
clc
jge
loope
lret
movb
fdivrs
or
jae
inc
call
push
mov
out
aad
inc
xchg
adc
jge
cmp
out
pop
adc
lcall
int3
cmp
push
push
popf
push
mov
mov
mov
sbbl
ret
pop
cmp
jmp
sbb
int
add
addl
enter
data16
xchg
add
cmpsb
cmp
in
sbb
xor
sbb
cmp
cltd
jae
inc
and
scas
and
gs
leave
ljmp
xor
rolb
cmpsb
mov
mov
repnz
scas
lret
aas
mov
test
outsb
mov
dec
xlat
adc
stc
aad
jno
jnp
cmp
mov
jl
adc
push
les
aaa
sbb
nop
adc
shll
daa
inc
popf
mov
mov
mov
in
push
stos
inc
lret
mov
xchg
dec
data16
es
add
sbb
insl
dec
js
push
cmp
inc
scas
data16
jg
or
bound
push
mov
bound
and
or
jbe
inc
pop
shlb
test
add
pop
mov
lods
loopne
call
xchg
jns
dec
mov
sbb
jns
push
jle
loop
and
jb
mov
test
lods
add
mov
or
nop
data16
in
push
addb
adc
sbb
cmp
arpl
test
popf
or
cmp
adc
xchg
stos
push
mov
xchg
scas
adc
inc
lds
or
xchg
jbe
in
push
pxor
cwtl
loope
test
xlat
bound
inc
xorb
pop
ds
stos
mov
mov
loope
pop
xchg
sti
pushl
std
mov
push
and
jp
loop
pop
insb
ret
enter
out
addr16
push
fs
ljmp
insl
xchg
jb
loope
sub
jcxz
ds
mov
in
fldl
jl
sbb
xor
pop
push
pop
pop
lret
rolb
sbb
sub
movsl
pop
inc
dec
lods
movsl
int3
hlt
jb
add
or
xor
dec
out
cltd
cmp
stos
inc
jl
push
push
repz
add
mov
loopne
mov
inc
or
mov
in
fwait
cwtl
push
pop
jns
mov
inc
mov
sub
push
mov
dec
mov
sbb
popf
daa
mulb
pop
scas
pop
cmp
inc
xchg
fbstp
gs
loopne
jae,pt
mov
inc
mov
jb
je
dec
clc
mov
mov
push
rcr
loopne
add
sub
pop
aas
cli
loop
sbb
mov
stos
push
adc
add
xor
or
ja
push
cmp
lods
lds
add
cs
pusha
shrl
test
push
in
xor
pop
pushf
push
pop
adc
pop
mov
icebp
ja
or
in
les
into
inc
cmpsl
ja
add
aad
mov
dec
cmc
fwait
sub
lret
movsl
mov
sub
fbstp
je
adc
jle
sub
inc
push
push
adc
xor
scas
adc
insb
fnstsw
push
add
push
test
into
popa
das
mov
mov
sbb
push
cmp
fsubrl
cmp
jne
cmp
outsl
mov
stos
iret
mov
clc
sub
mov
sbb
adc
shrb
jno
shll
sbb
loopne
loope
jecxz
push
xchg
leave
in
xor
sub
pop
enter
cmp
lcall
fstpt
pusha
dec
jl
inc
xor
xchg
mov
mov
sbb
mov
sub
dec
fisubrl
shl
pusha
adc
jmp
movsl
inc
inc
pop
je
xchg
jecxz
lahf
mov
arpl
xchg
sub
aam
or
pop
out
cmc
js
dec
mov
add
nop
hlt
push
add
movsb
push
rcrb
test
lock
leave
orb
movsl
movsb
mov
int3
mov
shlb
xor
jbe
add
sbb
push
add
add
icebp
or
rcl
xor
leave
sbb
sbb
mov
push
sti
cmc
aam
xor
test
and
cmp
ret
shrb
inc
fiaddl
es
xor
jmp
mov
cmp
adc
jp
daa
popf
push
les
add
push
scas
sbb
ret
and
and
push
shll
push
in
pushf
int3
hlt
sbb
insl
int
lods
mov
das
lahf
lahf
inc
mov
mov
sti
mov
inc
scas
xor
sar
les
js
push
shr
push
sbb
jnp
push
repnz
mov
into
add
and
fwait
int3
std
aas
das
dec
and
cmp
or
and
popf
cmc
es
int
xchg
fsubrl
inc
mov
jae
test
mov
jge
sbb
in
pop
add
and
int3
push
rcrb
mov
jge
or
sbbl
and
sarl
adc
je
ds
adc
test
or
fdivl
lret
xor
icebp
sbb
repz
mov
mov
xchg
dec
cmp
sbb
xchg
ret
mov
add
xchg
aaa
adc
ja
mov
mov
imulb
pop
inc
and
data16
and
push
add
sub
lods
loop
xor
mov
jg
xor
ror
sub
jp
cmp
push
subl
shll
leave
jmp
flds
lea
sbb
fdivs
push
cmp
sub
pop
lcall
js
mov
sbb
in
push
data16
mov
xchg
mov
repnz
fwait
ret
iret
pop
or
rorl
sbb
std
pushf
push
fwait
clc
lret
lock
cwtl
or
mov
inc
in
repz
add
adc
fstpl
ss
jmp
xor
jb
rorl
jl
jg
pop
jae
lds
aam
sarb
sbb
lea
push
fnstcw
cmc
mov
jae
push
ss
pop
test
sbb
adc
daa
scas
int3
rcrl
sbb
movl
test
sbb
push
dec
sti
inc
std
sub
outsb
call
rcrb
aam
mov
rclb
and
in
mov
insb
fwait
test
stc
int3
sbb
loopne
lods
push
lcall
sbb
dec
addl
sahf
pop
test
rcrb
lcall
push
cmp
out
cli
aad
dec
imul
gs
and
sub
push
inc
mov
int3
jl
cmc
inc
mov
fdivl
daa
jne
mov
daa
mov
cmp
mov
dec
out
in
jg
xor
inc
lret
mov
jns
cmc
lods
ja
cmpsl
loope
lea
in
cmc
scas
jle
test
dec
push
mov
dec
shrb
lea
xchg
jg
lcall
pushf
stos
pop
jo
ja
notb
mov
rcl
jo
sbb
jae
dec
or
mov
je
enter
xor
mov
aam
push
xor
push
inc
mov
ja
into
cld
add
mul
and
mov
sbb
push
test
loopne
pop
mov
or
jnp
ficoml
std
mov
or
or
in
std
push
in
xor
sbb
xchg
add
cmc
fcoml
jecxz
orb
mov
push
mov
mov
cli
sbb
sti
or
test
or
jmp
sub
cli
outsl
pushf
adc
push
mov
xchg
aas
sbb
stos
idivb
mov
nop
push
dec
repz
jg
movsb
cmp
cld
pop
test
mov
leave
or
sbb
test
insb
xor
stc
popw
jbe
les
mov
sub
test
scas
pop
fst
add
imul
pop
fimull
repz
jmp
addr16
hlt
add
les
test
mov
scas
ret
bound
xor
inc
aad
fsubl
dec
cmp
jmp
rorb
xchg
pop
xorl
mov
mov
and
dec
or
ret
aas
in
das
dec
mov
into
xchg
test
out
outsb
mov
mov
mov
sub
fimull
jbe
nop
jbe
ljmp
push
mov
mov
and
mov
mov
shll
fwait
dec
repz
mov
and
popf
or
shr
inc
rcl
sbb
push
add
adc
lcall
bound
push
xor
fstps
xor
inc
mov
je
imul
div
outsl
sahf
add
push
cltd
int3
cmp
clc
enter
lea
ljmp
test
aaa
pop
jp
inc
adcl
dec
mov
adc
fimuls
movsl
arpl
cmpsb
pop
in
bound
mov
ja
aaa
adc
cmpl
sub
mov
sbb
gs
sub
adc
jmp
pop
pushf
les
and
adc
push
inc
pop
cmpl
les
unpckhpd
dec
or
cmc
addr16
push
or
je
leave
mov
pushl
jg
jo
mov
aam
aam
repz
dec
sbb
sub
inc
popf
inc
lock
cmp
cld
popa
pushw
pop
mov
add
data16
dec
xor
imul
jecxz
pop
mov
sbb
inc
outsb
fld
mov
sarl
inc
inc
inc
faddl
shrb
ret
and
lods
pop
mov
ror
lds
push
pop
call
push
mov
cltd
ror
aam
loope
or
adc
add
add
aam
sbb
push
or
bound
push
pop
adc
test
or
inc
cmp
add
out
lock
mov
mov
call
idivb
dec
stc
rorb
inc
xor
fsubrl
lahf
and
lret
fidivl
scas
lods
xchg
mov
movsl
mov
cmp
out
push
inc
fs
into
adc
mov
xchg
or
add
cmpb
inc
cli
add
sbb
stos
cs
repnz
mov
es
push
mov
out
xor
lods
push
leave
js
and
ffree
sbb
adcb
leave
jg
adc
lret
pop
adc
out
mov
ret
mov
add
xchg
or
dec
mov
sahf
mov
mov
dec
cmp
jo
cmp
push
cmp
push
dec
mov
pushf
loope
mov
mov
cmp
jno
dec
cmp
scas
add
cmp
icebp
stos
mov
adc
dec
cmp
iret
ljmp
fisubrs
inc
int3
pusha
or
push
add
sahf
jbe
sub
insl
cmpsb
adc
repnz
cmp
mov
jle
clc
add
mov
dec
add
push
je
jle
add
stos
sbb
inc
add
out
or
call
nop
push
les
cmpsb
fwait
and
mov
movsl
in
rcrl
ja
hlt
xchg
out
repz
call
out
shlb
pop
push
inc
mov
inc
addr16
push
inc
xchg
mov
rcll
push
xor
popf
add
fsubr
iret
xor
repz
lea
and
jg
and
push
jne
push
cltd
push
pop
in
mov
dec
sub
cwtl
stc
test
pop
pop
cmpsl
mov
push
mov
mov
add
adc
or
scas
in
dec
mov
mov
aas
pop
ret
adc
aam
sbb
notb
mov
push
and
jp
inc
adc
inc
les
xor
fstp
shrb
mov
xor
inc
adc
push
push
jl
call
mov
loop
fistps
push
jge
mov
mov
lods
cltd
or
jb
jae
jnp
dec
xchg
scas
imul
mov
rolb
xchg
inc
movsb
or
jae
jl
or
out
fcompl
mov
lods
mov
stc
shll
pop
cld
inc
mov
cs
jg
pop
xchg
sub
ja
push
add
cmpsb
pop
dec
dec
ss
jno
jno
or
xlat
mov
mov
and
call
sub
rolb
push
vpcmpeqw
dec
stos
xor
fs
cmp
test
xchg
out
in
jl
cmc
jge
aad
cmpsl
push
fimull
xchg
fcomp
pop
mov
mov
das
mov
out
popf
popa
popa
jmp
sbb
xchg
aad
mov
out
mov
fsubr
sub
mov
cmp
fcmovb
negb
cmp
es
mov
jp
in
inc
mov
outsl
out
pop
daa
jb
sbb
cmp
add
push
xchg
roll
call
cli
jns
mov
popf
sub
lret
jnp
sahf
pushf
or
push
scas
cmpsl
aad
jne
shll
add
jl
stos
jle
inc
fstps
mov
sub
cmp
adc
add
mov
movsb
mov
xchg
pop
jp
mov
lods
and
outsl
push
push
and
enter
out
cltd
dec
xor
or
and
aas
mov
mov
pop
shll
cmpb
or
xor
scas
mov
pop
push
loop
test
cmp
lock
stos
xchg
ljmp
lahf
daa
dec
pandn
add
sti
imul
xor
xor
dec
jns
and
cwtl
mov
insb
xlat
iret
subl
rcll
xor
mov
add
push
inc
in
sti
jno
sbb
inc
lret
aam
out
mov
shlb
faddl
mov
clc
jg
xchg
pushl
sub
imul
leave
mov
insl
test
lret
jp
scas
xchg
lcall
push
lods
sbb
cmc
or
repnz
mov
ss
std
push
push
or
jecxz
mov
or
mov
mov
xchg
xor
aam
hlt
les
fadd
rcrl
ffree
fwait
xchg
dec
sub
shrl
dec
stos
incl
ja
in
cltd
sbb
ret
stc
iret
adc
add
jnp
jo
leave
enter
or
inc
mov
icebp
dec
jp
mov
mov
xchg
hlt
sub
mov
xchg
outsb
xor
pop
stos
scas
dec
aas
fmuls
jb
jecxz
aad
into
in
jp
xor
mov
cltd
jbe
push
pop
ss
jl
pop
cmpsl
cmp
inc
inc
mov
mov
pop
add
rcrl
and
dec
adc
push
push
cltd
scas
imul
cs
inc
jge
mov
movsb
stos
scas
scas
push
popf
jecxz
add
mov
out
adc
mov
or
hlt
pusha
in
mov
adcb
rorb
xchg
sar
hlt
clc
xor
or
push
adc
movsl
shll
stos
pop
lods
cmp
negl
xchg
xor
in
add
xor
pop
jnp
mov
cmpsl
insb
test
pop
mov
in
pop
jl
xor
ret
push
dec
cmp
lcall
sahf
inc
sbb
cli
push
mov
pop
repnz
jbe
mov
and
sbb
push
imul
mov
inc
lods
xor
fldcw
out
sub
nop
scas
and
andb
sub
test
jmp
mov
je
out
push
jno
pop
sbb
mov
je
cmp
inc
cmpsb
xor
mov
stos
or
pop
outsb
in
stos
mov
xor
push
push
fisubrl
sub
cmp
mov
mov
in
popa
gs
push
subl
insw
push
rorb
out
clc
push
lods
popf
xor
mov
jo
pop
mov
out
inc
xchg
popf
mov
fisubrl
test
pop
loope
cmp
pop
addb
cmp
and
jo
scas
jp
xchg
mov
cmp
push
xchg
or
xlat
mov
mov
or
xor
adc
je
jns
imul
add
cbtw
mov
jp
push
pop
or
repnz
or
or
dec
jb
or
pop
out
inc
loop
fwait
js
and
cmp
push
pop
in
lods
or
mov
xchg
xchg
mov
mov
outsl
jns
jge
neg
out
jnp
imull
divl
push
test
fbstp
fstpt
sub
push
loope
mov
pop
bnd
fs
imul
insb
insl
fxch
cli
mov
sbb
test
mov
mov
mov
sbb
pop
xchg
ss
add
lea
mov
pop
test
mov
fisttpl
das
jecxz
fisubrl
in
xchg
xchg
test
cmpsl
mov
add
movsb
pushf
inc
pop
int3
push
lea
std
loop
xchg
and
lret
ljmp
sbb
mov
test
jle
lods
mov
test
sbb
inc
or
dec
sti
cmp
fadds
loopne
xchg
and
xor
stc
ss
cmc
pushf
inc
dec
ret
rorl
pop
iret
punpckldq
jo
and
mov
inc
mov
sbb
add
aad
lcall
test
movsl
cli
xchg
stos
lahf
add
imul
xor
jno
sub
lea
pop
sbb
jae
es
jno
js
mov
pop
into
mov
cwtl
loopne
insb
ret
ds
lods
in
orb
ret
ret
push
subb
cmp
xor
jge
xchg
push
cmc
adc
mov
aaa
push
and
jnp
pop
mov
pop
xor
mov
popf
mov
mov
pop
mov
add
sbbl
ret
lret
jp
je
jmp
sbb
pop
sarl
nop
int3
out
es
mov
mov
jecxz
shrl
idivb
mov
adc
js
xor
inc
mov
sahf
push
jp
test
and
int3
nop
adc
imul
clc
std
mov
mov
jnp
or
mov
dec
push
jo
out
fsubs
stos
es
or
mov
pop
push
or
mov
pop
pop
sub
jno
das
jmp
xlat
adc
mov
cmp
mov
notl
das
push
cltd
in
sub
mov
cmpsb
imul
push
adc
mov
inc
notl
push
scas
adc
and
nop
add
add
pop
cld
lahf
out
push
cmp
data16
pop
dec
cmp
sub
jo
push
add
icebp
dec
mov
rcrl
std
unpcklps
movsb
ljmp
or
mov
xchg
pop
cwtl
push
sbb
add
add
clc
loope
xchg
pop
mov
mov
xor
cld
push
xor
xor
and
cmpb
adc
or
mov
sub
push
ror
sti
push
js
xlat
cmp
lods
adc
stos
stos
sbb
pop
hlt
into
push
add
adc
test
push
push
mov
mov
mov
jp
stos
pop
pop
sub
xorb
gs
pop
pop
into
mov
sub
int
mov
cs
mov
inc
es
cmc
mov
push
lcall
gs
in
aaa
ja
inc
pusha
mov
out
addl
enter
mov
cld
ds
imulb
js
inc
les
xlat
jbe
clc
inc
adc
push
jmp
adc
push
add
or
test
adc
movsl
xchg
and
mov
aad
lock
pop
pop
xor
pop
ss
icebp
mov
jb
pop
sub
jge
arpl
enter
enter
loopne
sub
out
pop
ds
sbb
in
sub
mov
imul
mov
add
mov
xorl
mov
inc
fdivs
out
pop
js
rcl
daa
dec
in
fucomi
mov
mov
lods
lcall
in
in
mov
cmpsl
daa
jns
dec
adc
jne
jmp
js
aaa
in
cmp
test
jnp
bound
scas
sub
ljmp
cmpsb
push
push
sti
lods
xor
fldln2
bound
ret
mov
ret
aad
repnz
cli
popf
xchg
lods
fdivl
call
adcb
dec
dec
push
xor
fsubl
test
in
shl
movsl
movsl
les
pop
mov
lea
add
fldcw
pop
push
repz
add
js
out
pop
add
popa
mov
enter
out
pop
inc
sbbl
mov
xlat
test
cmp
add
gs
lea
clc
test
ret
not
enter
pusha
pop
sbb
sub
cli
aam
or
std
dec
jo
mov
xlat
loopne
fisttpl
gs
dec
cmc
cmc
add
jnp
xor
fstpl
cmc
ljmp
imul
loope
xchg
mov
sahf
mov
into
sub
inc
mov
sub
notb
xor
xor
jb
outsl
lods
notl
cltd
std
in
cmp
or
xchg
rolb
test
push
adc
push
sub
movsb
and
fimuls
push
in
mov
adcl
xor
inc
xchg
xchg
out
into
sbb
rcrl
popa
push
xchg
dec
cld
scas
mov
ret
mov
pushl
cmp
inc
insb
fsubp
into
sbb
dec
ret
xor
lret
es
jo
mov
je
outsl
jge
pushf
add
jp
sub
inc
inc
cmp
jmp
adc
mov
repz
fisttps
cmpsl
push
inc
push
dec
pushf
adc
cmp
inc
test
lahf
gs
mov
push
sub
jp
dec
add
xor
add
mov
sbb
out
pusha
mov
jo
push
mov
sbb
jae
ds
fsubrl
xchg
imulw
cmp
sbb
add
negb
push
mov
adcb
mov
xchg
xchg
ficompl
mov
outsw
inc
mov
fs
cmpl
packsswb
jae
xorl
xchg
dec
psubsb
dec
push
lret
jb
jmp
pop
imul
cltd
mov
push
add
push
add
adcb
pop
insb
insb
fs
pop
repnz
pop
cwtl
lea
imull
push
sahf
cmp
push
xchg
mul
add
clc
insl
int
mov
ja
push
movsl
and
jno
dec
inc
jecxz
push
cmp
mov
xchg
jg
lods
xchg
js
lcall
cmpsl
or
fldl
adc
in
jl
jp
push
xchg
addr16
int
imul
lods
push
movsl
xor
pop
ss
cli
jmp
std
fistpl
mov
pop
xchg
dec
ficoms
mov
pop
into
out
mov
pop
push
loop
xor
into
popw
push
ret
push
lods
cmpb
stc
ljmp
sbbl
jge
sub
add
hlt
pop
and
sub
orb
aam
xchg
jns
fs
sti
jp
imul
inc
jne
in
sbb
lods
loope
test
mov
xlat
or
mov
in
movb
lods
fistpll
call
data16
dec
add
cmp
mov
or
scas
imul
xor
out
pop
sub
push
popaw
lds
mov
movsl
pop
subl
cmp
aas
stos
sar
pop
sbb
or
testb
cli
leave
push
cmp
push
repz
xchg
mov
pop
xor
lret
cmp
scas
sbb
mov
call
jnp
lahf
pop
das
pop
xlat
insb
faddl
push
fiadds
inc
jmp
call
pop
inc
repz
add
add
adc
mov
xor
bound
ret
popa
cmp
cmp
pop
call
adc
fisubrs
cmpb
in
or
movl
arpl
jb
jb
iret
fstpt
mov
sbb
xor
lock
cmp
nop
mov
imull
push
add
stos
dec
sbb
fbstp
jge
jne
test
inc
add
test
push
mov
push
insl
ljmp
push
in
add
push
adc
ds
outsb
mov
aas
int3
lret
adc
or
dec
sub
imul
test
mov
ss
ljmp
js
mov
fistpl
imul
sbb
adcb
sub
mov
in
dec
ss
movsb
fmuls
pop
add
in
mov
gs
out
mov
fcmovne
lds
fadds
outsl
in
out
leave
enter
call
sbb
and
inc
and
or
xchg
sub
pop
xchg
sub
xchg
andl
jne
testl
push
sub
test
imul
fldl
jb
sub
ret
in
pop
daa
mov
repnz
fidivl
inc
jle
push
mov
jle
push
clc
mov
ja
hlt
xor
out
dec
out
arpl
das
mov
inc
insl
insb
inc
orl
push
into
mov
mov
test
mov
sahf
iret
or
push
shl
jbe
push
movsl
aas
aam
xchg
jle
mov
mov
ret
jno
mov
arpl
and
cs
mov
xor
fstps
xlat
jo
cld
sti
mov
mov
push
cmp
sub
adcb
sbb
aas
aas
loopne
and
clc
push
fstps
cmp
xchg
mov
jl
fucomp
bound
inc
repz
dec
push
cmp
mov
les
xor
push
and
pusha
das
rorb
loop
lahf
cwtl
or
jns
push
insl
das
mov
test
out
fs
xlat
loop
pop
out
or
mov
adc
inc
pop
stos
mov
shll
gs
mov
outsb
xchg
sbb
xchg
mov
iret
scas
lret
fsubp
fldt
xchg
mov
mov
jae
loop
hlt
or
dec
add
fs
dec
or
shl
and
pop
icebp
push
pop
sbb
cld
in
out
sarl
xor
js
lahf
xor
popf
push
cmp
xor
mov
sti
into
cwtl
xchg
mov
cmp
inc
in
adc
decb
xor
aam
inc
bound
js
pop
aaa
stos
inc
pop
lock
sub
or
or
subb
or
in
mov
call
pop
out
stc
jno
in
test
mov
jne
mov
decb
mov
mov
xchg
jb
dec
shlb
push
out
out
fs
push
in
lret
andl
ret
pushf
mov
mov
loope
adc
mov
mov
xchg
adc
leave
and
enter
push
inc
push
insb
adc
inc
ret
rcrb
orl
insl
or
xor
sub
sub
mov
push
add
dec
cmpsl
push
mov
mov
add
mov
sbb
nop
mov
and
cltd
je
fisubrs
push
or
adc
jno
loope
pop
adc
lret
inc
lret
xlat
push
data16
mov
shlb
push
aad
jmp
mov
mov
call
out
out
jb
adc
stc
push
lret
movsl
sub
jo
sub
loop
ja
in
add
jmp
mov
roll
adc
lock
mov
hlt
xchg
mov
xorb
cmp
adc
add
je
and
sub
test
sarb
xchg
js
dec
sar
mov
pop
mov
incb
repz
arpl
dec
ret
sub
adc
push
add
fs
pop
cmp
fs
negl
mov
mov
and
pop
xchg
or
xchg
out
call
fcomps
ja
loop
lret
dec
xchg
push
xchg
cli
insl
ret
jge
and
mov
mov
adc
dec
pop
mov
movl
xchg
jg
cmpsl
mov
mov
outsb
fstps
jmp
ss
mov
mov
lods
mov
mov
scas
int
loopne
or
xor
scas
push
out
add
iret
popa
pop
cmp
shl
pop
jns
loop
xchg
pop
mov
nop
dec
fmull
mov
daa
ret
roll
inc
out
cmp
fiadds
cmp
or
movsl
test
outsl
xlat
lods
adc
sub
mov
outsb
or
les
xchg
hlt
pusha
sub
outsb
jecxz
scas
sub
sahf
hlt
repnz
lret
arpl
cmp
test
rcll
pop
cmpsl
pop
cltd
inc
cmpl
push
int
ds
xor
cwtl
lcall
and
sbbl
xchg
jbe
rorl
adc
cmpsl
pop
js
pop
xchg
repnz
cmpl
repz
push
sub
inc
pop
add
xor
lock
inc
lea
enter
lahf
or
icebp
ja
push
add
aas
cmp
sahf
je
repnz
stc
pop
movsb
scas
enter
fwait
aaa
mov
notl
sbb
xlat
es
pop
cmpsl
inc
adcb
cmc
jmp
rorb
test
pop
lock
sub
adcl
sahf
cmp
xor
push
addr16
lcall
push
or
mov
push
cmc
shlb
dec
xchg
divb
inc
pop
loop
lret
mov
out
lcall
mov
add
ret
mov
mov
pop
add
fldenv
sbb
outsl
mov
and
iret
xor
push
jecxz
fidivl
shlb
inc
icebp
jbe
xorb
inc
push
es
insl
mov
fsubp
pop
int
mov
shrb
adc
cltd
cmpsl
iret
mov
lret
ret
mov
leave
jnp
cmovl
mov
jmp
dec
inc
lock
dec
ds
add
xor
out
xchg
pop
sbb
scas
push
insb
sbbb
sbb
enter
push
call
jecxz
jno
std
fsubs
mov
xor
int3
and
adc
sub
adc
mov
sbb
out
jbe
xor
mov
popa
sub
inc
cmp
or
cli
dec
xchg
popf
mov
or
adc
pop
adc
mov
jae
pop
pop
imul
pushf
mov
fnstsw
push
add
push
push
icebp
cmpsb
arpl
pop
dec
enter
cld
rclb
in
mov
or
jb
xchg
hlt
cltd
jl
cli
mov
xor
mov
jns
inc
loope
mov
sbb
cmpsl
int
ficoml
adc
scas
push
push
lret
xchg
out
loopne
cwtl
insl
sarl
mov
pusha
pop
sub
dec
wbinvd
fcomp
icebp
adc
aas
in
subb
daa
pop
xor
xor
or
lret
jmp
lret
daa
pop
js
jbe
test
cmp
repnz
mov
add
cwtl
enter
inc
loopne
add
cli
mov
ror
mov
popa
lret
mov
xor
mov
dec
loopne
imul
cmp
jbe
aad
jo
pop
or
pop
xor
lds
xchg
xchg
movsl
mov
test
dec
aaa
incl
cwtl
outsb
call
jle
xlat
jno
stos
data16
push
repz
push
ljmp
push
shl
mov
pop
adc
mov
push
mov
leave
inc
call
xor
rcrl
stc
std
xor
pop
dec
pop
add
pop
mov
rolb
dec
vpaddb
cltd
stos
js
popf
jp
fucom
ss
dec
add
inc
push
dec
movsl
insb
cmc
xchg
mov
je
jp
mov
push
test
inc
push
jecxz
cli
out
ja
mov
fdivr
mov
fstpt
clc
mov
test
sbb
dec
xchg
fsubrl
loope
js
sarb
dec
fistpll
push
ret
aad
mov
insb
xchg
jae
mov
in
shrl
sbb
inc
ds
xchg
aad
mov
orb
or
sahf
pop
out
insl
icebp
scas
and
cmp
adc
sub
es
shll
jle
mov
xor
cmc
or
mov
cmp
adc
or
mov
mov
out
addr16
mov
sub
dec
xchg
dec
cmpb
inc
ljmp
fcomps
mov
mov
icebp
lds
sbb
mov
data16
cmp
mov
gs
xchg
inc
sarl
sbb
inc
mov
jg
in
pop
mov
xchg
cmp
xor
mov
cli
rcrl
fmuls
mov
sub
inc
or
imul
inc
xchg
rcll
adc
xchg
ljmp
clc
repnz
rcrb
adc
xor
ja
loope
in
call
mov
push
dec
dec
ljmp
and
out
jl
out
jmp
cld
mov
sbb
jno
movsb
cmpl
sub
push
xchg
pop
sub
cmp
movsl
clc
jmp
xor
dec
pushf
aaa
fdivrs
inc
mov
cmp
xchg
xchg
insl
fmull
dec
xchg
xchg
add
sub
inc
clc
in
jo
xchg
xchg
cmp
popa
jo
add
test
add
cmp
mov
test
ds
mov
dec
icebp
pop
repz
sbb
scas
mov
inc
enter
xchg
mov
dec
pusha
push
xchg
sbb
jg
push
xchg
fistpl
adc
adc
jmp
mov
outsl
pop
lods
test
in
sub
in
mov
and
mov
mov
sbb
call
hlt
test
fidivl
and
lods
jno
insb
mov
jle
fimull
pop
pushf
xorl
or
gs
dec
mov
imul
cmpsl
push
pusha
push
sbb
push
cmp
imul
incl
sub
stos
sub
fwait
scas
lahf
cmp
add
push
sti
shrb
mov
cld
or
iret
lcall
dec
jl
push
mov
popf
add
inc
loopne
sbb
cwtl
mov
jae
ds
das
lea
fwait
pop
inc
cmp
xchg
xchg
xchg
add
sub
mov
outsb
inc
das
and
mov
aaa
mov
in
mov
sti
jae
sbb
inc
loopne
pushf
push
adc
and
fnsave
divl
into
call
cmp
xchg
mov
ljmp
add
sahf
gs
cld
divb
cmpsl
or
roll
jecxz
loopne
mov
ret
xchg
movsl
dec
arpl
fs
jmp
test
mul
mov
push
mov
xorl
je
cmpsl
push
and
popf
mov
jnp
hlt
cs
and
arpl
bswap
inc
rcrl
mov
icebp
enter
dec
pop
push
pop
jmp
ljmp
hlt
jle
sbbl
sbb
mov
push
nop
sbb
and
shrb
dec
adc
dec
cmp
and
xor
notl
and
pop
out
dec
loope
roll
test
mov
adc
mov
std
push
or
xchg
ljmp
dec
sub
repnz
cmp
or
sbb
mov
fstpl
jo
push
pop
or
xchg
sbb
lret
ret
and
inc
jmp
xlat
nop
jmp
dec
aaa
push
push
push
insb
push
push
adc
push
cld
jnp
push
cltd
leave
ja
sub
int
push
je
cmpsb
xor
lods
jb
loopne
iret
mov
cld
faddl
test
sbb
xor
mov
int3
cmp
int
inc
ljmp
inc
jnp
push
xorl
adc
fdivl
fistl
inc
push
mov
repz
stos
xor
inc
test
in
jecxz
adc
fs
xchg
lret
xchg
mov
xchg
out
fdivr
cli
stos
fstps
lcall
cmp
add
dec
adc
in
pop
and
cmp
pusha
js
push
cld
mov
addr16
out
leave
sahf
scas
ret
xorb
xchg
daa
xchg
and
and
mov
in
aas
cli
inc
cmp
clc
lret
stos
inc
je
dec
stos
out
test
loopne
xchg
popa
shlb
pop
das
pushf
or
mov
imul
xor
imul
leave
dec
lods
push
mov
cwtl
mov
movsl
jge
xchg
and
ljmp
fsubs
sub
push
mov
push
sub
test
cwtl
imul
dec
imul
sub
mov
mov
push
mov
push
adc
jno
out
jecxz
call
dec
mov
fsts
sub
and
dec
test
mov
scas
or
ljmp
inc
lods
adc
pop
mov
mov
decl
or
add
mov
test
push
mov
xchg
mov
scas
push
outsl
mov
pop
pop
iret
push
and
jmp
sub
or
jge
mov
in
or
test
fsubrs
adc
push
bnd
stos
jp
mov
mov
push
adc
nop
mov
movsb
pusha
sbb
int
lods
fldlg2
repnz
outsl
stos
push
leave
pop
push
cmp
push
cld
xchg
adc
jmp
xor
mov
lock
lret
push
jae
pop
xor
lods
lods
adc
or
ret
inc
push
lcall
and
mov
repnz
scas
ljmp
outsl
add
push
mov
or
out
push
adc
mov
inc
jne
incl
nop
jnp
mov
xchg
mov
cmpsl
insb
insb
stos
stc
in
stos
jmp
or
xchg
jmp
and
jnp
test
mov
int
mov
inc
add
imul
mov
or
xorl
test
push
adc
pop
xor
push
and
fdivr
xchg
adc
adc
lret
push
cmp
shl
outsb
clc
ljmp
movaps
sahf
xchg
dec
add
xor
push
scas
push
add
mov
stos
xor
in
xor
sbb
cltd
inc
out
adc
mov
jg
sub
insl
into
dec
shrl
sbb
addr16
and
mov
adc
stos
xchg
xlat
ljmp
sub
fldt
dec
int3
out
push
cmp
rcr
xor
daa
lcall
sbb
xor
xchg
cwtl
xor
stos
jg
inc
push
sbb
or
jle
jae
or
orb
jns
daa
inc
inc
outsl
and
lret
xchg
addb
push
scas
mov
xchg
adcb
and
fwait
jp
jns
add
pop
mov
and
jl
mov
lahf
push
sub
push
pop
mov
movsb
pop
push
test
mov
jbe
push
shll
das
adc
mov
mov
test
insl
cmc
popl
je
popf
shrb
push
inc
dec
call
les
jmp
mov
rcl
push
xchg
dec
fwait
js
out
jo
repnz
shlb
push
xchg
outsb
pop
adc
ds
and
fiaddl
daa
mov
xchg
ds
mov
add
or
cmp
call
mov
rol
daa
adcb
sub
test
in
insb
incl
mov
jmp
adc
mov
test
lock
fsubrl
push
js
mov
cmp
test
lods
int3
cmp
rorl
inc
cmp
cmpsl
xor
pop
mov
pop
push
and
aad
pop
roll
out
ljmp
sti
decl
std
mov
or
inc
cmp
jmp
jo
xlat
mov
xchg
pusha
shll
icebp
push
das
icebp
mov
add
dec
pop
pop
cmp
shrl
inc
cmc
fwait
jle
and
in
cmp
mov
cmpsb
or
leave
ss
lods
test
push
addl
in
jns
js
mov
jl
in
lds
push
adc
out
fwait
push
leave
mov
call
push
je
subb
pop
mov
int3
jg
cli
dec
fisubl
or
out
aas
mov
add
push
push
or
jecxz
cld
les
and
lods
inc
dec
sub
inc
test
arpl
mov
fistpll
push
add
lods
es
or
jno
inc
iret
push
jl
sub
pop
cmpsl
or
movsl
pop
shlb
dec
cltd
or
orb
popf
outsl
pop
lahf
sahf
movsl
negb
ljmp
jg
or
jge
push
adc
dec
inc
inc
add
sub
inc
inc
mov
push
add
xor
mov
lret
jge
movsl
cmp
in
es
pop
push
test
cmp
mov
or
lods
inc
lods
mov
jae
add
cwtl
mov
dec
subl
shrb
or
jb
adc
addr16
imul
cmc
std
in
xor
outsl
and
in
gs
mov
lea
fsubl
mov
cmpsl
add
dec
jl
inc
repnz
lds
push
sub
mov
ret
ljmp
pop
andl
and
sti
xchg
test
popf
push
adcl
mov
lds
in
jmp
mov
lods
addr16
in
in
mov
outsl
test
movsl
arpl
dec
adc
mov
clc
call
scas
popa
sbb
rorb
fcoms
mov
xlat
add
ret
jl
add
hlt
decl
mov
pop
mov
lahf
dec
xchg
inc
mov
and
movsb
movsb
cmp
out
sti
push
outsb
mov
shl
mov
add
dec
pop
mov
xchg
cmovb
ret
or
shrb
popl
popa
pop
call
jbe
inc
imul
stos
ja
mov
xor
pop
sbb
imul
shrb
pushf
leavew
mov
fcoms
cld
sub
mov
and
std
packsswb
pop
hlt
cli
mov
lret
cmp
xchg
jns
pop
addl
mov
sub
into
push
pushf
xchg
pop
mov
mov
lods
mov
cmpsl
jecxz
out
or
xchg
dec
sub
mov
add
das
movsl
mov
in
jne
xchg
push
jnp
rorb
cli
xchg
jmp
sub
lcall
dec
mov
sbb
roll
xchg
xchg
sub
jecxz
inc
les
pop
ja
jnp
shrl
out
lret
insl
or
insl
and
cmp
sbb
xchg
adc
mov
dec
sbb
sahf
mov
imul
xlat
imul
xchg
aad
fwait
popf
push
lds
movsb
push
fbstp
mov
mov
daa
jo
cmp
xor
and
mov
divl
movsl
push
test
cmp
sub
inc
sub
or
push
jg
pop
fstpt
loop
aad
push
out
test
pop
ret
xor
movaps
sarl
inc
inc
pop
loop
add
cs
scas
daa
sti
jno
jns
mov
lea
shrb
aaa
nop
sub
outsl
cmc
adc
jno
popa
popa
pop
mov
mov
sbb
js
sub
je
std
or
xor
ss
mov
pop
aad
lretw
rorl
fs
cmpsb
dec
xor
jb
or
icebp
xchg
mov
inc
test
imul
aaa
repz
push
incl
mov
aaa
fbstp
inc
test
sub
sub
xlat
push
call
and
jmp
push
divl
lock
repnz
fs
lret
scas
dec
and
xor
fdivs
pop
pop
pop
inc
ja
and
jb
mov
lods
bound
and
xlat
lods
xchg
test
je
cmp
sub
sbb
sub
mov
dec
jbe
and
cmp
cmp
loop
test
add
mov
jle
das
jbe
and
and
cmpsl
inc
scas
in
mov
cld
adcb
mov
dec
stos
fdiv
xor
mov
sbb
mov
roll
push
movsb
ja
mov
push
push
xchg
lcall
xchg
aam
pop
cmp
push
icebp
push
insl
pop
cmpl
push
adc
icebp
ljmp
mov
movb
shl
xor
add
push
xor
addr16
mov
cmc
jg,pn
dec
sub
cltd
es
push
out
dec
stos
inc
in
add
das
adc
lds
adc
and
pop
mov
push
and
loopne
enter
pop
xchg
xchg
fwait
inc
mov
movsb
into
xchg
sbb
cwtl
lahf
aad
aad
popa
xchg
cs
mov
dec
xor
insb
outsb
ffreep
mov
and
into
outsb
or
xchg
test
inc
xor
not
adcb
inc
mov
insl
add
inc
sahf
xlat
xlat
sub
add
push
push
movl
sbb
stos
inc
test
adc
divl
gs
shll
and
bnd
adc
ret
rcll
ret
bound
cmp
mov
stos
nop
jnp
loop
fnstcw
xchg
mov
repz
pop
sar
pop
adc
pop
and
push
dec
in
cmp
xchg
imul
int
xor
je
ss
movsl
or
ljmp
mov
or
mov
push
bound
xorb
stos
rol
and
test
jae
jb
pop
xchg
jo
shrb
cmp
mov
jbe
int3
mov
or
es
icebp
mov
fwait
xchg
mov
sub
fs
and
sub
test
out
push
add
xchg
subb
mov
mov
out
dec
sub
mov
ss
ja
insl
or
outsl
cwtl
fisubl
scas
hlt
xchg
push
or
clc
aam
ficoms
shrl
ss
dec
push
stos
scas
mov
inc
lock
mov
rcll
fs
push
jns
jbe
cwtl
jg
add
pop
mov
mov
fistpll
testl
or
pop
inc
mulb
mov
mov
enter
jmp
mov
insl
cwtl
lret
jle
sbbb
outsb
fs
clc
loop
imul
in
fs
or
negl
int3
popf
int3
mov
outsb
add
cmp
bound
mov
out
test
leave
xlat
out
sub
push
lods
test
dec
nop
lret
cli
push
cs
out
jmp
dec
and
nop
rorb
and
mov
and
sahf
orb
push
testl
and
and
daa
stc
cmc
sbb
popf
and
lcall
sub
cmp
cmp
call
sahf
pop
cltd
call
mov
shl
jb
xchg
jl
in
adcb
ret
jnp
decb
lods
adc
ret
lea
mov
mov
orl
stc
orl
sti
or
enter
sub
inc
or
shll
add
mov
aaa
jmp
push
dec
inc
shll
out
dec
test
popf
push
jns
sub
stc
repnz
cmp
fdivs
cld
mov
shll
push
adc
jb
rol
into
out
adc
jb
or
popl
in
outsl
pop
scas
push
pop
mov
pop
ret
lahf
ljmp
test
ja
jmp
mov
push
dec
ret
lods
jg
aam
pop
fcoms
cltd
pop
cmc
pop
xchg
imul
mov
mov
mov
pop
fnstcw
popa
jl
xor
pop
cmp
push
inc
pop
jecxz
adc
insb
nop
scas
fistpll
push
mov
mov
sahf
ret
popa
xor
fdivr
movb
push
or
mov
jo
dec
mov
jle
xchg
rcll
lret
hlt
mov
ret
jl
pop
or
lret
sahf
imul
sub
sti
js
pop
pop
pusha
mov
dec
adc
mov
test
lcall
or
repnz
cs
pop
xchg
not
adc
out
push
sbb
adc
mov
shrb
or
adc
mov
mov
int3
mov
pop
lea
dec
in
sbb
loope
sub
jae
adc
clc
dec
dec
pop
pop
or
aas
xchg
mov
pop
lret
mov
inc
adcl
or
sub
pop
xor
jecxz
jb
sti
xchg
and
mov
not
push
popa
js
ror
aad
sbb
mov
sub
mov
jge
lea
shlb
and
sub
ljmp
xchg
mov
popa
xchg
dec
rclb
cltd
inc
jp
xchg
fidivrs
leave
cmpsb
imul
jge
ss
repz
add
mov
fimull
inc
icebp
and
ljmp
mov
lahf
sub
adc
xorl
xchg
push
push
sub
and
daa
push
dec
mov
rorb
adc
cmp
int
cmpsb
mov
movsl
testl
out
in
lahf
sbb
pop
mov
cli
dec
aad
push
mov
pop
push
daa
leave
add
in
push
mov
stos
sub
xchg
es
jns
addr16
ljmp
dec
rcl
test
cltd
jge
cmp
mov
ret
mov
pusha
cmp
out
mov
xor
cmp
cmp
jns
lcall
pop
insb
cmp
cltd
jp
sub
in
cwtl
mov
pop
stos
xchg
inc
mov
jecxz
push
push
and
or
andl
subb
xchg
addr16
jecxz
push
pop
adc
gs
add
test
jg
sub
mov
sahf
adc
aas
adc
mov
mov
arpl
pop
filds
dec
xchg
lds
jbe
dec
xchg
hlt
mov
and
iret
cmpb
jnp
push
push
jb
push
jmp
pop
cmp
hlt
shrl
nop
jge
outsl
sub
and
hlt
stos
test
lret
inc
stc
popf
test
cmp
in
aaa
mov
xchg
and
jo
test
or
lahf
and
andl
addl
and
cmp
loope
jge
xor
lret
push
sti
sbb
push
mov
jg
ja
xor
test
adc
jo
pop
pop
in
xlat
sub
call
les
test
in
jg
adc
ss
ret
and
enter
fidivrl
inc
add
negl
jge
dec
rorb
cmpsb
ljmp
mov
pop
inc
mov
scas
add
int3
lea
mov
inc
in
popf
lcall
push
jno
jmp
inc
mov
aad
cwtl
mov
pushf
add
mov
pop
mov
test
ret
dec
mov
push
add
cwtl
pop
push
cmpsb
inc
cmp
mov
repnz
fldenv
shrb
popl
mov
pop
lahf
jnp
sbb
pop
sar
jecxz
scas
in
jl
fwait
loopne
jp
mov
pop
jbe
dec
shlb
mov
jnp
ja
roll
cmpsl
ret
sbb
dec
cmc
daa
mov
sar
push
mov
and
ss
dec
mov
push
sub
mov
adcb
or
jg
add
sbb
rolb
ds
ljmp
or
dec
das
push
push
or
xorb
sarb
lret
pop
out
pop
pop
imul
mov
repnz
fdivs
mov
xor
mov
cmp
fimuls
xchg
mov
mov
sub
out
popf
add
xor
loope
inc
sub
cs
inc
inc
movsl
nop
repnz
add
sub
ficompl
stc
cmpsl
aad
in
pop
mov
ljmp
aaa
adc
sub
test
add
cmp
pop
lods
or
sbb
lcall
push
and
and
lcall
dec
mov
rol
and
rorb
xchg
pop
lahf
dec
dec
push
ret
cld
sbb
and
cltd
pop
add
xchg
sbb
out
cli
out
clc
aas
xchg
xchg
dec
xor
add
mov
stos
pop
or
cmp
cmp
aaa
xor
pop
jo
dec
xchg
cmpsl
mov
ds
sub
mov
push
sti
pop
sbb
fsub
es
xchg
insl
fisttpl
push
mov
sbb
adc
out
scas
insb
call
dec
pop
mov
imul
cmc
mov
js
fidivl
ss
pop
ds
add
enter
sub
shll
mov
icebp
bound
sbb
xor
adc
mov
adc
adc
dec
mov
jge
imul
outsb
movsb
pop
int
daa
adc
nop
mov
pusha
inc
movsl
ja
les
dec
hlt
push
sbb
or
xchg
jmp
int
test
shr
sub
pop
xchg
mov
jb
repnz
push
icebp
mov
sbb
int
pop
xor
jnp
xor
hlt
push
or
push
shr
mov
hlt
in
mov
or
imulb
push
cmpsb
js
loope
sub
not
dec
or
mov
push
mov
dec
fucomp
aas
jne
adc
mov
enter
cmp
push
daa
cmp
or
jmp
outsl
sti
or
sarl
inc
loop
adc
inc
or
or
test
fmuls
or
in
push
scas
inc
xchg
rorb
xchg
push
ljmp
cmpsb
mov
inc
aaa
xchg
or
lcall
insb
mov
add
push
mov
xchg
aam
mov
mov
adc
repz
push
int3
sub
stos
stos
arpl
jnp
popa
sbb
int3
sub
add
pop
push
movsl
push
and
enter
mov
insb
jp
push
sahf
and
out
cs
or
fidivs
dec
es
jp
and
xchg
mov
mov
xor
pop
mov
push
testl
lret
pusha
inc
and
sbb
sub
repnz
jl
das
and
or
flds
push
cmp
jmp
mov
push
aas
push
ffree
insl
clc
pop
loopne
xor
in
or
mov
jns
mov
lea
cli
pop
push
mov
loop
in
push
push
mov
and
pop
mov
jb
out
push
sub
mov
popa
std
in
ljmp
push
adc
dec
repnz
je
pop
cmc
clc
call
add
inc
fildl
sbb
add
int
ss
or
and
aaa
jge
pop
cli
pop
jnp
stos
dec
aas
dec
jle
arpl
sub
xrelease
push
jle
pop
push
pop
jle
mov
xchg
shl
or
stc
out
jbe
push
cld
xor
in
push
mov
cmc
insl
sahf
mov
jp
repz
frstor
mov
push
adc
pop
ret
shrb
xchg
pop
dec
xchg
pop
sbb
cmp
push
mov
insb
bound
sub
cmpb
pusha
cmp
clc
lea
iret
es
gs
sbb
push
mov
insl
xor
popa
cmpsb
pop
adc
shrl
sub
mov
imul
out
pop
sbb
adc
out
into
fs
cmpsl
dec
frstor
lcall
jne
or
jmp
in
pop
imul
outsl
je
call
or
ss
xchg
mov
dec
insb
and
mov
pop
insb
jae
mul
or
dec
lahf
mov
or
aad
fstpl
push
lret
inc
into
pop
rorb
les
xor
imul
out
mov
cmpsb
cld
push
push
inc
loop
popf
arpl
in
std
clc
test
cmp
adc
sbbl
jne
pop
pop
fisttpl
or
das
pop
nop
dec
xchg
pop
and
add
jns
xchg
pop
cli
mov
shlb
cs
call
rclb
xchg
dec
cmp
jl
sub
mov
ljmp
pop
in
jae
aaa
in
xor
sbb
inc
sub
xlat
jno
movsl
lret
lret
jb
pop
lret
arpl
inc
sti
ja
pop
cli
push
mov
push
out
pushf
test
and
or
arpl
cmpb
imul
addb
mov
movsb
test
sti
dec
outsb
and
adc
xor
or
mov
push
pusha
cmp
jno
cmp
popa
ss
popf
xchg
cmpsl
adc
dec
shl
je
add
pop
xchg
cmc
test
jne
push
fwait
cmc
arpl
sub
in
mov
adc
push
xchg
lret
mov
lods
fidivrs
jo
lea
shl
cmp
adc
jmp
mov
mov
cmc
xor
cmp
aam
xchg
inc
and
lock
mov
sub
stc
jae
mov
mov
lahf
fisttps
adc
and
cmp
in
adc
idivb
in
ss
ds
and
jb
push
sub
mov
adcl
ljmp
mov
sbb
jp
lock
mov
mov
sub
sub
les
xor
xor
ljmp
sbb
stc
std
enter
push
cmp
push
mov
and
fcmovnbe
sbb
lret
and
sbb
mov
dec
mov
in
lods
xchg
mov
and
popa
add
jp
cmp
nop
cmp
das
shrb
cmp
cld
jmp
jne
mov
sbb
push
imul
and
push
popf
ljmp
mov
xchg
ret
into
arpl
fs
jge
sbb
mov
xchg
loopne
js
movsb
sbb
arpl
ss
mov
sub
and
jnp
jl
movsl
cmc
pop
cmp
add
push
loope
xchg
cs
aam
jo
repz
pop
insl
push
ret
or
and
mov
mov
jo
sub
xchg
dec
mov
arpl
pop
sbbl
mov
jae
int3
jp
shll
fstl
sbb
xor
sub
ja
mov
mov
or
ret
sub
add
loop
and
push
ficompl
xor
xchg
cmp
mov
fbstp
or
inc
or
and
mov
jne
imul
pop
sub
pop
jmp
rcrl
insb
rcrl
adc
push
test
in
jmp
add
adc
dec
fimull
mov
lret
into
pop
out
mov
jbe
sbb
push
ja
rolb
pop
std
mov
adc
outsl
cs
in
or
lods
xchg
inc
jg
stc
ja
push
jb
dec
or
decl
mov
je
jp
lea
jns
andb
lret
cmp
mov
mov
std
dec
ret
pushf
mov
adc
outsl
cld
sub
ljmp
stos
stos
subl
add
ljmp
xchg
fistl
lcall
or
leave
mov
jmp
adc
je
cmp
pop
pop
stc
ja
jb
or
movsb
in
xor
dec
sub
mov
loope
sahf
xor
ret
push
fcomi
sbb
daa
pop
cs
mov
bound
in
js
sub
fs
push
sbb
outsl
enter
sub
or
call
shr
pushl
or
push
dec
xchg
movb
push
xchg
sti
rcll
jp
mov
mov
push
mov
xchg
xchg
call
daa
and
jno
pop
push
test
cwtl
dec
sarl
adc
add
cmp
push
leave
outsb
adc
in
mov
das
push
and
out
mov
and
out
jp
in
jp
xchg
in
xor
or
sbb
mov
jns
test
fsubl
sbb
inc
icebp
sub
inc
inc
vmovd
xor
and
iret
in
xorb
push
shll
sbb
or
insl
repnz
test
leave
xor
mov
add
enter
jnp
pop
in
push
rclb
rolb
push
mov
mov
loopne
xchg
aas
jnp
sbb
jae
cmp
mov
cmc
paddusw
outsl
fidivl
cmp
cmp
inc
mov
cmp
cmpsb
stos
xlat
jo
into
mov
orl
cmpsl
ficompl
xor
sar
aad
sbb
sub
mov
sti
mov
call
jno
jge
iret
push
lock
mov
mov
shll
inc
sbb
sbb
pop
loop
jno
xchg
pop
mov
sbb
int3
and
jecxz
pop
call
das
mov
lahf
and
sbb
cwtl
rcll
jl
dec
mov
adcl
lods
xchg
std
inc
call
orl
enter
hlt
fwait
jne
aam
repnz
rorl
andps
xor
dec
out
movl
cld
add
sub
pushf
rolb
movl
jno
jns
fidivl
push
mov
mov
lock
rol
dec
movsb
test
mov
repnz
mov
adcb
dec
pop
icebp
sub
nop
jl
xor
in
sub
xorb
hlt
mov
mov
fwait
mov
mov
pusha
pusha
cmp
in
cmp
mov
mov
push
faddl
lretw
test
in
out
push
xchg
insl
xchg
ret
or
push
aam
out
icebp
ficoms
or
jae
xor
or
dec
push
fcomps
adc
dec
push
aam
inc
gs
lock
scas
or
cs
or
je
in
push
fldl
test
inc
stos
daa
into
loop
push
stos
mov
lods
mov
andb
dec
and
add
mov
movsb
dec
mov
inc
sbb
sub
loop
push
and
add
dec
in
sub
inc
out
xchg
loop
lret
aad
pop
lahf
cmp
mov
imul
and
jle
pop
cmc
dec
jno
xchg
mov
ja
mov
jno
pop
dec
sti
inc
and
cmp
sarl
fistpl
jmp
enter
rclb
sub
push
cld
clc
sbb
cli
xchg
xchg
push
sbb
rolb
cmpsl
shl
inc
mov
fdivr
lds
lds
test
jnp
inc
mov
push
pop
movsb
ljmp
in
pusha
pop
xchg
cmpsb
mov
adc
xor
adc
adc
jno
mov
loope
in
cli
fcoml
or
pop
outsb
fstpl
sti
sub
loopne
lods
dec
pop
sti
ja
cmp
jb
push
subl
jmp
movsl
ficomps
xor
repnz
dec
dec
jb
leave
add
loop
roll
cld
mov
imul
es
sbb
mov
shlb
inc
jmp
mov
adc
jbe
inc
sbb
add
or
mov
aas
mov
mov
mov
fistpll
mov
aam
aam
pop
mov
push
leave
jle
int3
jns
add
sti
sub
test
sbb
out
xor
pop
mov
mov
sbb
mov
push
cmc
or
or
sti
movsb
inc
jb
mov
lock
stos
mov
scas
lcall
add
jne
mov
jne
movsb
push
xchg
int
pop
mov
mov
outsl
insb
in
inc
loop
lcall
addl
mov
sbb
pop
sub
adcl
lock
push
rorl
addr16
jmp
dec
mov
pop
push
or
or
push
dec
imul
int
sbb
xchg
fistpll
ss
in
xlat
cli
push
cmpsl
inc
hlt
mov
push
and
and
ljmp
inc
fmuls
mov
sbbb
mov
data16
push
das
mov
lods
jle
sbb
jb
xor
jmp
jmp
rolb
ffree
xchg
das
and
mov
jae
mov
xchg
pop
pop
call
js
dec
inc
jbe
or
add
sbb
inc
sbbb
mov
pop
inc
push
cmp
pusha
mov
repz
inc
add
mov
lods
adc
xchg
gs
inc
daa
dec
cmp
push
add
adc
and
adc
jne
adc
outsb
inc
sub
push
dec
jno
icebp
mov
sub
xchg
dec
orl
mov
xor
movhps
loope
lds
inc
xchg
push
pop
sarl
mov
movsl
pop
movsb
pop
fsubs
fisubl
jns
xor
iret
sbb
pusha
scas
adc
xchg
cwtl
pop
xor
stos
xchg
aas
sbb
fcomp
cld
mov
jo
cmc
fidivrs
dec
cs
in
lret
push
mov
push
ja
and
ss
cs
dec
mov
shr
inc
dec
and
mov
mov
popf
dec
nop
mov
iret
pop
dec
leave
mov
insl
mov
xlat
fld
imul
jl
xor
mov
into
sub
pop
addl
or
sbb
jae
add
scas
sub
mov
jle
xchg
xorl
scas
add
dec
cmp
sub
out
sub
lcall
movsb
lret
sahf
arpl
mov
jp
fstps
test
cs
popa
stos
cmp
add
inc
in
mov
adc
adc
xchg
dec
inc
push
jmp
mov
movsb
cld
fwait
or
in
xchg
push
xor
lods
push
fistl
jmp
movsl
sub
test
xchg
jp
std
enter
mov
and
daa
ja
movsb
jo
rorb
icebp
jle
and
inc
dec
pop
inc
orl
cmp
imul
add
push
std
mov
cwtl
push
popf
cmp
lahf
sub
push
mov
sti
add
mov
fadds
loop
jns
sbb
aam
repz
aas
fmuls
in
jl
test
out
dec
cld
jle
incb
insb
aam
or
ret
cltd
movsl
frstor
jecxz
test
sub
int3
fs
mov
int
xor
sub
or
xor
rcr
in
out
push
cmp
std
sar
pop
adc
push
mov
fwait
incb
and
cwtl
dec
dec
cli
push
mov
jp
inc
std
loop
push
inc
pop
sbb
sar
aam
xor
xor
mov
mov
or
inc
ds
cmp
or
call
xchg
and
daa
cmp
in
sub
inc
or
jl
push
mov
mov
test
movsl
cmpsb
mov
inc
shlb
mov
icebp
arpl
ja
add
pop
xor
nop
int
je
sbb
mov
add
rcr
out
pop
or
jl
pop
imul
pop
ja
pop
sbb
xchg
mov
dec
stos
orl
mov
xlat
scas
std
shll
jne
pop
and
and
push
dec
adc
mov
push
iret
sbb
aad
cwtl
rorb
jo
ljmp
aad
jbe
movl
sbb
cwtl
mov
stc
repnz
daa
out
adc
xchg
push
push
fdivrl
in
arpl
xchg
arpl
jb
push
dec
jp
imul
iret
loop
cmp
iret
or
fwait
loop
mov
xchg
jecxz
and
in
nop
add
cmp
leave
bnd
mov
subb
shlb
mov
pop
imul
pop
mov
and
cli
xchg
rclw
push
movsb
or
cmpsb
insb
enter
mov
loop
jns
add
movsb
arpl
sbb
shrl
sbbl
jle
icebp
sbb
sbb
lods
shll
and
or
dec
push
sbb
sti
sbb
cmp
inc
jg
push
lods
sarl
mov
or
mov
negl
lahf
or
cs
mov
fwait
out
je
lahf
iret
pushf
inc
decl
xor
xor
js
cmp
enter
cli
push
aad
inc
stos
mov
mov
inc
or
fistps
icebp
hlt
data16
inc
inc
mov
fstps
scas
jne
out
cmp
inc
lret
outsb
or
add
popa
fidivl
mov
add
scas
dec
iret
push
pushf
outsb
andb
mov
ja
push
loopne
add
cwtl
int3
insl
jl
or
fbld
imul
mov
cmpb
or
ret
mov
test
sarb
scas
push
mov
jae
repz
aad
fldcw
mov
dec
xchg
jo
icebp
imul
and
arpl
inc
fcmovu
mov
sub
cmp
sbb
call
pop
ror
mov
inc
mov
inc
sub
or
mov
imul
cmpsl
cld
xchg
jg
mov
enter
repnz
aas
xchg
adc
mov
jecxz
negb
add
cmp
cmpb
cwtl
sbb
add
stc
jmp
push
pop
out
xchg
ss
push
loopne
push
mov
inc
adc
xchg
pop
das
sub
lret
pop
xor
scas
sti
cwtl
loop
and
push
and
js
mov
and
inc
cmp
popf
inc
inc
movsl
cltd
subb
es
shlb
dec
and
push
pusha
mov
test
stc
xor
push
inc
or
lahf
sahf
jl
sub
lea
xchg
pop
pushf
jg
xchg
pop
daa
mov
sbb
int
mov
test
scas
in
dec
push
push
sbb
or
xor
imul
adc
add
jge
cmpsb
icebp
mov
cmp
popa
adc
fucomip
fdivrl
mov
xor
sub
rcrb
inc
sbb
sahf
cli
aas
testl
xor
stc
inc
mov
xchg
inc
daa
aad
jle
jo
addb
xchg
clc
and
pop
add
pushf
loopne
sbbb
jo
xor
jp
mov
das
add
ss
sti
shll
sbb
data16
inc
push
imul
push
mov
fstpt
mov
xorb
imul
jb
out
cltd
mov
inc
sbb
enter
jge
lret
clc
in
mov
inc
sar
pop
xor
sub
sub
ret
jno
mov
fcoml
inc
lods
ficomps
out
imul
inc
and
inc
jnp
mov
arpl
adc
in
mov
adc
adc
adc
cmovge
iret
sti
mov
jb
push
dec
or
lahf
and
insb
stos
ret
inc
js
inc
xchg
lds
xchg
cmp
mov
enter
jno
ja
popa
inc
adc
xlat
mov
jle
or
pushf
test
xor
mov
mov
arpl
xchg
fmul
xor
scas
jl
cmp
cwtl
mov
daa
mov
outsb
movsb
pop
xchg
push
cmpsb
mov
movsb
pop
es
stos
sbb
cld
dec
adc
or
imul
decb
cltd
in
fs
fcmovbe
les
dec
mov
mov
out
movsl
loopne
mov
repz
or
scas
inc
lret
pop
push
loope
pop
or
push
add
mov
mov
imul
test
cli
push
and
mov
and
ret
ret
push
mov
push
sbb
test
mov
icebp
scas
std
or
arpl
std
in
adc
shll
loope
jne
mov
inc
insb
dec
ret
mov
fidivl
mov
push
adc
mov
inc
and
mov
xor
mov
mov
push
mov
cli
jnp
adc
mov
sub
fyl2xp1
sahf
in
jne
or
dec
mov
lret
out
add
ret
or
arpl
outsb
dec
data16
xchg
daa
int
lds
loope
mov
xlat
adc
test
push
push
xchg
cmp
sub
push
push
push
mov
push
mov
fcmovb
leave
cmpsl
push
mov
jbe
inc
mov
dec
cld
inc
xor
subl
push
lds
imulb
xchg
cmp
mov
ret
cmpsb
dec
mov
ret
rol
add
pop
xor
into
xchg
or
mov
and
pop
mov
js
arpl
das
and
ret
data16
jmp
mov
icebp
loopne
cltd
adc
and
cmpsb
imul
cmp
pop
mov
sbb
arpl
lds
sub
iret
imul
xor
mov
xchg
movsb
add
jmp
mov
inc
or
cmp
and
lods
pop
cmp
or
pop
cli
daa
out
shl
jge
sbb
mov
cmpsl
cmp
pop
fwait
adc
bound
jl
loopne
imul
scas
mov
sub
push
jle
sti
iret
cwtl
jg
mov
adc
add
pop
dec
dec
iret
pusha
adcb
sbb
mov
mov
push
test
mov
xor
cmp
lret
or
idiv
dec
mov
das
adc
je
mov
ja
leave
fstps
mov
fisttpll
mov
stos
mov
cltd
xchg
aaa
jne
int3
stos
cmc
push
xchg
xchg
pop
bound
mov
repnz
jo
out
pushf
and
in
dec
or
nop
jmp
jmp
jb
je
pop
stc
xor
dec
dec
add
nop
cmc
mov
pop
or
dec
stos
push
sbb
movsl
pop
mov
out
cmp
sub
pushw
ja
cmp
scas
imul
jge
jb
adc
popf
iret
loope
lods
out
mov
clc
mov
leave
into
lret
cmp
out
jno
movsb
ja
jg
jecxz
ret
scas
loop
adc
sbb
stos
push
add
aas
pop
and
xor
cld
jae
pop
std
mov
fs
sbb
imul
lea
push
inc
gs
loopne
loop
cld
mov
add
cmpb
pushf
cmp
push
xchg
ljmp
xchg
mov
cmp
dec
daa
mov
mov
div
test
in
not
mov
subb
jmp
popa
ret
lahf
imul
dec
inc
repnz
mov
xor
mov
mov
mov
lock
hlt
sbb
out
mov
jmp
mov
inc
mov
ret
ja
ja
inc
jb
xor
add
jg
out
push
sbb
test
mov
dec
xor
outsb
out
bt
push
dec
jge
adc
mov
mov
mov
bound
hlt
dec
pop
ret
jg
and
add
inc
jb
hlt
push
and
mov
out
cli
out
lahf
jmp
adc
xor
lock
lret
cmpsb
movsl
fdivrl
jne
nop
fldt
repnz
ja
pop
int
aad
les
mov
sar
inc
jno
xlat
das
push
inc
loope
popa
xchg
xchg
or
push
adc
clc
aad
push
mov
cmpb
add
mov
inc
ljmp
jnp
or
jnp
and
xor
mulb
xor
inc
push
cwtl
cmpsb
jns
nop
repz
inc
lea
test
cmc
sti
movsl
scas
jmp
mov
enter
lcall
add
pop
sub
mov
sahf
mov
imul
lods
or
fiaddl
jnp
jne
popf
outsb
sarb
mov
nop
sti
xchg
mov
sarl
mov
js
mov
xchg
in
adc
pop
add
addr16
aaa
mov
inc
mov
ret
ss
mov
call
repnz
jnp
std
in
and
cmpsl
push
mov
or
sti
sbb
ret
inc
adc
call
bound
lods
or
imull
mov
fistl
sbb
pop
add
outsl
sub
inc
sti
push
jo
push
in
mov
jae
add
sub
inc
adc
adc
rorl
mov
cwtl
jmp
fisubs
push
jecxz
inc
inc
xchg
xor
xchg
ficomps
or
xchg
movb
std
stc
cmc
testl
push
pop
inc
mov
scas
sti
inc
xchg
xchg
addr16
stos
inc
add
mov
or
mov
xorl
imul
inc
into
in
fdivl
lds
pop
rclb
shlb
jbe
mov
stos
in
sbb
dec
gs
inc
or
or
pop
jnp
aaa
es
xchg
and
mov
xchg
dec
adc
imul
std
and
shrb
stc
push
adc
fiaddl
add
cmp
push
fisttpl
lods
loop
jmp
stos
es
arpl
pop
or
enter
shl
mov
push
faddl
test
add
xor
jecxz
push
int
dec
push
movsb
arpl
mov
bound
dec
lea
sbb
lcall
cltd
xchg
inc
xchg
xchg
cmpsb
out
jge
jae
scas
inc
int3
in
fisttpll
mov
jnp
mov
aaa
pop
aas
out
loope
gs
or
das
lods
fnsave
test
fdivs
jp
stos
push
push
mov
mov
mov
push
cmp
and
repz
testb
mov
and
sbb
scas
clc
dec
mov
cmp
adc
sub
add
cld
pop
dec
sbb
outsl
jns
mov
mov
fcomi
push
test
insl
or
popl
jmp
loop
aam
push
inc
addl
ret
mov
inc
inc
cmc
aam
or
out
cld
outsl
mov
dec
adc
push
or
push
inc
lock
mov
cmp
lods
rcrb
daa
std
js
and
test
mov
or
cmpsl
sqrtps
jne
loop
and
pusha
in
std
call
mov
lea
adc
mov
pop
push
inc
in
inc
or
sbb
sub
leave
adc
outsb
je
shlb
xchg
stc
xor
stc
mov
cmpsb
insb
xchg
pushf
sub
es
cmp
js
and
mov
mov
imul
lods
aaa
ficoms
mov
out
jmp
outsl
lret
mov
lock
pop
pop
iret
dec
inc
fiadds
add
pusha
sbb
push
xor
int
imul
xor
decl
jge
lock
repnz
adc
and
add
ret
xchg
bound
imul
movsl
mov
test
mov
mov
cld
lcall
pop
aam
and
xchg
insl
jbe
js
mov
sbb
or
fldcw
mov
ljmp
push
jl
daa
and
add
sbb
es
pop
sbb
or
xchg
pop
loope
arpl
mov
rcrb
mov
sarb
push
es
adc
test
lcall
in
xchg
push
hlt
sbb
bound
sbb
mov
insl
in
jecxz
aam
push
xor
xchg
and
pop
movsl
test
mov
or
pop
out
addr16
inc
cli
add
aaa
sbb
imul
mulb
push
jl
xchg
stc
cmp
in
push
call
cld
mov
push
popf
mov
add
jo
inc
dec
out
mov
sub
adc
adc
insl
inc
xorl
aad
xchg
xor
call
adc
push
xchg
mov
mov
add
sub
mov
int
cld
popa
dec
iret
adcb
xor
adc
and
sub
fdivp
fnstsw
fdivl
and
mov
shll
ljmp
test
cmp
mov
pop
iret
xchg
out
or
je
xor
test
adc
cmc
add
and
aaa
inc
cli
lahf
ljmp
jae
jp
cli
lods
out
dec
aad
imul
fcoml
in
int
aam
sub
fisubl
push
mov
cmpsl
lea
push
mov
flds
xlat
jge
pop
outsl
or
or
push
jle
popa
add
lods
std
adc
adc
hlt
add
je
adc
mov
ja
jmp
mov
mov
adc
jle
adc
xchg
andl
dec
stos
cmp
push
add
pop
jecxz
flds
in
arpl
aam
jbe
inc
pop
enter
es
dec
popa
repz
sbb
in
xchg
stos
sbb
jmp
popa
fwait
mov
or
movsl
sbb
pop
lret
aam
std
cmpsl
shrl
popf
negl
cmpsl
inc
or
xor
mov
ss
fidivl
ret
inc
movl
movsl
in
jg
das
and
popa
out
push
dec
cmp
mov
fsubr
les
pop
movsl
and
out
cmpsl
adc
sub
pop
jns
jl
rorl
das
sbb
mov
push
cld
mov
mov
sahf
out
cwtl
addl
scas
shrb
mov
sub
rcrb
stos
icebp
pop
iret
cmpsb
push
test
int3
mov
cmc
jne
xchg
sub
xchg
mov
jns
add
mov
mov
push
xor
aas
inc
push
inc
popf
rcll
lds
negl
adc
push
pop
test
fmul
sbb
ret
inc
mov
cmpsl
adc
test
sub
lds
mov
out
jl
lods
adc
faddp
in
xchg
pusha
sbb
adc
and
mov
cmpsb
xchg
scas
in
pop
xchg
into
movsl
mov
lods
addl
ss
hlt
add
mov
adc
in
lods
push
addr16
fsubrp
jge
pop
mov
aas
icebp
out
fptan
mov
mov
fisttpll
xchg
fnstsw
faddl
xor
dec
loop
pusha
lds
cmpsb
fcmovu
in
fwait
cmpsb
mov
loope
cs
adc
rorl
push
xlat
fiadds
sbb
mov
pop
gs
and
jp
or
push
dec
cmpsl
insl
mov
iret
inc
stc
sbb
pop
sub
sbb
les
sahf
testb
xor
jp
fildl
adc
cmp
xchg
jo
push
pop
inc
popf
and
jle
pop
dec
push
scas
sbb
test
andl
psubsb
dec
xchg
sub
outsl
incb
lods
dec
mov
push
mov
sub
mov
jle
das
cmp
jb
mov
stc
test
imul
cltd
cmc
pop
frstor
cmp
sti
aad
or
insl
dec
roll
add
jl
jnp
imul
iret
mov
jno
jge
cs
ljmp
enter
cs
jns
in
adc
clc
jp
in
cmc
pushl
fs
xor
inc
scas
dec
inc
lret
addl
jl
lds
push
mov
out
mov
adc
pop
mov
sbb
and
mov
xchg
pop
adc
jae
xor
inc
dec
pop
outsl
and
or
mov
dec
adc
mov
sbb
rol
mov
cmpsb
icebp
dec
lahf
and
andl
lret
sahf
subl
or
inc
pop
push
jecxz
test
test
jae
int
insb
rcr
ss
jns
xchg
push
fists
inc
repnz
jge
dec
dec
jle
mov
push
jb
dec
xchg
in
xchg
pop
mov
mov
je
and
sbb
xchg
mov
leave
aad
dec
adc
cmc
and
adc
in
push
movsb
or
lahf
dec
sbb
clc
sub
inc
mov
cs
nop
mov
jae
lods
sar
mov
add
cld
movsb
jbe
or
scas
out
mov
jb
push
subb
push
test
and
in
scas
inc
push
mov
lcall
sub
add
and
ss
pusha
push
fisubrs
cmp
add
das
icebp
int3
sar
fsubr
aaa
and
std
insb
std
popa
add
and
dec
xchg
imul
scas
loopne
daa
jb
add
cmp
dec
dec
inc
add
cmp
sbb
dec
outsl
popf
pop
je
stos
in
ljmp
repnz
fists
lret
int3
adc
jno
add
sub
and
popf
cwtl
ja
stos
push
jno
mov
push
insl
or
mov
dec
xchg
nop
cld
test
mov
outsl
dec
in
dec
xchg
out
inc
push
inc
pop
add
add
inc
shr
mov
icebp
nop
cmp
xorb
fisttps
fstl
sbb
mov
dec
loopne
add
mov
loop
jae
cmp
js
push
fcomps
xchg
fisttpl
inc
movl
aam
sub
mov
popa
dec
xchg
jmp
pop
dec
movsb
ds
test
add
sahf
pop
inc
inc
or
push
xor
jb
sahf
jp
fwait
inc
sbb
pop
and
push
lahf
mov
out
cmp
cmp
out
xchg
jne
das
xchg
mov
btc
pushf
mov
inc
xchg
test
stc
pop
cmp
icebp
ljmp
mov
dec
adc
lds
test
push
fcompl
mov
dec
test
or
fwait
dec
daa
in
mov
shrb
xchg
mov
jp
pop
push
stos
sub
mov
pushf
mov
shl
scas
and
cmp
fstl
and
or
loope
push
jb
scas
icebp
jl
sbb
jo
sub
cli
mov
nop
aas
xor
mov
mov
dec
aas
outsb
or
mov
scas
push
fistps
rorl
roll
sbb
repnz
mov
xchg
sar
test
shlb
xor
mov
je
or
loop
cli
cmpsl
or
xor
bswap
sub
setl
in
push
or
cmp
add
dec
cmp
cwtl
ds
mov
imul
outsb
pop
adcl
lods
pop
inc
xlat
mov
mov
sub
mov
pushl
add
adc
mov
push
lcall
and
xor
cmp
rsm
call
mov
insb
xchg
lds
and
inc
push
xchg
test
pop
test
mov
push
xchg
test
sub
cmp
inc
insb
aas
fmuls
push
pop
cmp
pop
mov
cld
scas
adc
xor
scas
aas
mov
les
jno
sbb
fcmovnu
mov
jae
mov
out
cmc
pop
sub
lret
sahf
push
cli
push
pop
push
inc
nop
or
jl
inc
rorl
test
cmc
xchg
xchg
cmp
sarl
and
mov
dec
in
mov
test
sub
das
out
and
test
out
enter
or
adc
or
int3
pop
pop
sub
adc
jp
pop
ret
mov
dec
dec
dec
xor
leave
jno
mov
push
push
jp
cmp
sbb
lods
ja
idivb
lea
jle
jne
sbb
dec
mov
mov
bound
cmc
jbe
xor
lods
cmp
arpl
push
sub
jb
bound
add
mov
loope
jmp
mov
sub
cmovle
repnz
mov
inc
mov
cwtl
and
pop
pop
loopw
jb
into
lret
cltd
dec
pop
jb
and
xchg
xchg
sbb
movswl
add
loope
pushf
mov
inc
xchg
in
mov
jmp
xor
push
dec
jp
adc
pop
bound
mov
sti
leave
repnz
adc
int
add
fcmovnu
or
divl
flds
stos
xor
in
int3
dec
mov
leave
mov
addr16
lods
xlat
mov
push
sub
sbb
fdivrs
sub
cmc
jnp
pop
and
lea
fildll
push
out
and
data16
and
push
pop
inc
push
rcl
add
inc
and
push
fnstcw
or
cmpsl
xchg
add
inc
jae
decl
lahf
pop
sbb
into
jle
xlat
mov
sbb
out
iret
mov
pop
pop
sbb
rcr
fidivrl
leave
or
add
mov
inc
or
cmp
scas
xchg
popf
sub
add
lods
lds
mov
add
sahf
mov
and
loop
dec
pop
mov
mov
and
es
inc
hlt
xchg
push
mov
mov
lret
jnp
and
pop
scas
push
pop
mov
cmp
nop
or
imul
in
xor
mov
lahf
jge
call
lods
movsl
iret
popa
fisubs
pop
hlt
fidivl
lahf
inc
and
adc
xor
jnp
jne
loop
cld
sbb
sarl
sbb
idiv
shr
push
jae
xchg
dec
clc
xchg
push
clc
outsl
out
dec
fnstsw
arpl
sti
push
jle
fmuls
js
fstps
push
or
sbb
pop
test
arpl
repz
cmc
dec
lahf
loop
add
std
xor
mov
jp
jmp
insb
int3
int3
movhlps
jae
pushf
mov
adcl
mov
ljmp
mov
in
das
aas
pushl
popf
mov
and
xchg
sub
movsl
sub
push
out
mov
inc
adc
test
mov
jp
or
dec
repz
imul
movsb
mov
adc
ljmp
jl
xchg
ficoml
cmp
pop
mov
loop
jb
pop
cld
xchg
inc
repnz
dec
cmpsl
inc
sbb
fucomp
loopne
insb
repnz
adc
out
insl
mov
mov
sti
jo
iret
dec
clc
iret
je
das
xchg
or
loop
sbb
mov
jb
bound
call
gs
lds
icebp
xor
mov
dec
roll
mov
and
xlat
out
stos
mov
mov
fsubrp
sub
xor
pop
and
dec
outsb
sbb
lret
rorb
pushf
outsl
adc
rcrb
add
clc
push
and
sti
mov
cmp
clc
pop
inc
mov
outsl
fs
and
or
or
add
jg
fsubs
out
sub
xchg
fisttpll
outsl
lea
mov
cmp
ret
mov
or
rcrl
inc
sbb
xor
out
jle
adc
dec
dec
xchg
jb
push
inc
mov
inc
xor
mov
inc
stc
aad
sbb
pop
and
stos
cmpb
xor
dec
insb
lods
pop
mov
dec
call
xchg
rcrb
in
imul
iret
mov
jg
add
add
daa
dec
call
adc
call
cmp
test
mov
jmp
or
jg
cwtl
shlb
mov
mov
xor
mov
adc
sbb
push
fcompl
push
jbe
inc
and
lods
xor
mov
aas
hlt
jno
cmpsb
and
dec
push
out
mov
pop
outsb
push
lods
lock
jno
adc
push
sbb
sbb
lock
daa
xor
jae
sub
cmp
xchg
movsl
negl
aas
scas
aam
jle
push
stos
inc
sbb
dec
adc
pop
in
popf
imull
mov
push
es
add
out
sub
jle
push
mov
mov
dec
add
ret
out
push
push
sub
decl
daa
fdiv
jns
lahf
dec
xchg
lss
cltd
int
ds
fisttpll
out
adc
cld
incl
mov
adc
or
and
mov
and
test
sarb
jmp
xor
inc
lods
push
inc
cmc
inc
in
and
enter
mov
add
aad
call
xor
test
adc
outsl
fwait
xor
arpl
adc
mov
popa
std
xor
bound
push
addr16
jge
idivl
in
mov
fisubl
xor
icebp
aas
ret
jno
add
in
pusha
push
adc
dec
mov
sbb
pop
addb
inc
loope
pop
jns
ds
mov
jb
push
jbe
lods
jmp
push
push
movsl
mov
jo
push
cli
xor
out
or
test
fidivl
fcomps
jmp
or
out
insb
push
push
pop
adcl
adc
push
inc
out
call
cmc
sub
and
sbb
ds
sbb
imulb
and
sarb
into
fisttpl
push
push
dec
fwait
pop
shll
fwait
push
mov
pop
mov
scas
imul
mov
xchg
jmp
inc
adc
mov
mov
cltd
bound
clc
jne
pop
shrb
imul
movsl
sbb
mov
and
inc
xchg
adc
hlt
lea
hlt
inc
loope
push
rorb
pop
cli
test
dec
movsl
pop
adc
inc
fucomip
sub
cli
fcmovb
clc
or
xor
dec
inc
cltd
jg
pop
shr
or
xor
mov
cmp
mov
in
jo
hlt
inc
push
ljmp
dec
mov
sahf
in
jge
cmp
dec
jge
inc
push
xor
jae
mov
scas
push
xor
inc
or
sahf
and
push
mov
scas
dec
xchg
cmp
adc
cs
jle
jg
mov
cmp
cmp
cltd
adc
sarl
cld
xor
cltd
shlb
xor
and
adcb
push
xchg
push
dec
xchg
lcall
mov
add
nop
sub
sub
xor
and
mov
sbb
popf
scas
xchg
cmp
jb
adc
stos
sbb
loopne
sti
mov
adc
in
pop
push
lea
test
sar
jecxz
arpl
rcrl
adc
lea
mov
rcrb
call
rcll
bound
jo
fisubrs
mov
ror
push
cmc
and
dec
lock
jb
movsl
fadds
add
jecxz
call
pop
pop
js
mov
dec
inc
shrl
arpl
xor
push
mov
stos
xchg
vmread
jbe
movsb
call
mov
mov
jg
ss
mull
xchg
pushf
aam
inc
mov
inc
pop
ljmp
push
bound
push
mov
loope
popa
and
stc
icebp
out
aaa
sub
int3
roll
push
jle
pop
roll
mov
sub
inc
adc
inc
in
lea
pusha
les
scas
sub
pop
cmpsb
jge
and
loopne
inc
test
xchg
gs
mov
sbb
inc
shlb
outsl
mov
push
pop
jb
clc
ss
xlat
ds
mov
cmp
pop
push
or
inc
mov
push
sub
xor
aam
shlb
sub
outsl
stos
push
add
rorl
adc
mov
jmp
pop
dec
scas
mov
dec
int3
popf
push
sbb
gs
in
push
mov
mov
jnp
aad
mov
jecxz
jae
test
sub
pop
and
bnd
out
stos
fs
xor
xchg
out
inc
cld
inc
xor
lcall
loope
bound
hlt
ds
jle
xchg
ss
sbb
gs
adc
push
dec
cmpsl
push
pushf
cmpl
in
mov
pop
add
mov
xor
adc
out
scas
lcall
out
mov
stc
dec
inc
bnd
mov
sbb
in
xor
in
mov
pushaw
out
sahf
pop
mov
adc
fbstp
sub
sub
insb
mov
shlb
dec
push
adc
mov
fs
sub
jbe
je
push
lahf
mov
sahf
nop
push
adc
idivl
sub
pusha
daa
inc
in
lds
dec
dec
mov
jns
pop
sub
je
cli
dec
test
in
cmp
sub
xchg
cltd
pop
jnp
pop
dec
test
ss
pop
out
cli
push
pop
ds
pop
imul
xor
daa
xchg
aad
fsubrl
fcmovu
jl
idivl
push
popa
flds
insl
sahf
out
imul
out
push
or
and
out
inc
lods
iret
daa
inc
dec
cmp
in
cmpl
arpl
fsubl
pop
loop
pop
push
bound
mov
inc
sbb
pop
lock
mov
push
xchg
rcrb
es
adc
lcall
and
dec
pop
gs
push
sub
mov
sti
push
mov
test
lcall
ret
test
fwait
add
in
rcrb
outsl
xchg
cs
ficompl
into
jge
out
jge
pop
xor
fwait
lahf
sbb
js
loopne
inc
jp
fnsave
mov
add
sub
rcll
and
iret
enter
adc
cltd
popf
insl
leave
cmp
sti
jp
mov
subb
cmpsl
lods
int
xchg
sbb
popf
out
push
dec
mov
xor
ljmp
cmpl
std
pop
insb
mov
and
pop
lea
outsl
xor
add
xchg
lea
cmp
pop
pop
icebp
lods
add
push
arpl
adc
push
mov
push
jne
jg
pop
adc
mov
sbb
jno
outsb
mov
bound
push
mov
dec
jns
xorb
lods
lods
cld
jns
add
cmp
cmp
xchg
int
adcl
mov
and
and
mov
mov
aas
fistps
fwait
pop
rolb
fidivl
in
test
outsb
xor
push
sbb
cld
mov
mov
scas
jmp
ret
mov
sbb
stos
and
xor
sub
mov
mov
out
mov
mov
mov
dec
arpl
xchg
stos
jnp
sub
mov
out
out
push
fists
jno
test
jl
popf
int
push
jbe
xchg
pop
sub
popa
fs
dec
out
out
in
das
fildl
icebp
stc
js
push
push
jmp
aaa
scas
mov
mov
pop
cmp
jb
mov
sti
into
out
xor
sbb
push
mov
inc
andl
imul
jo
pop
test
push
push
mov
mov
imul
push
jns
jl
pop
or
pop
mov
mov
sub
sbb
push
xlat
mov
push
outsl
clc
mov
fldcw
dec
lods
add
lods
inc
ret
rolb
out
mov
jbe
call
pop
jbe
mov
outsl
cmp
out
rclb
and
call
mov
leave
gs
das
push
sbb
push
dec
xor
push
xlat
mov
or
cmp
jl
sbb
scas
sub
push
pop
dec
ss
mov
or
mov
mov
jmp
xor
das
pop
arpl
call
fcmovb
inc
push
cltd
sti
add
test
test
mov
aas
push
lret
call
xor
jmp
cmp
cli
inc
aaa
inc
dec
imul
lods
mov
cltd
movsl
pop
pop
cmpsl
jmp
faddp
je,pn
fstpl
movsl
cltd
por
xlat
test
stos
mov
in
insl
sti
jae
xor
test
inc
inc
cmpsb
test
inc
mov
push
fstpl
fisubl
lret
jns
push
xor
xchg
outsb
cmc
add
je
lock
pop
push
cmpsl
mov
push
aad
aaa
sbb
or
or
add
adcb
add
and
mov
jnp
gs
jp
fisttpll
dec
mov
mov
mov
and
mov
dec
xchg
adc
aad
stos
jp
push
hlt
notl
mov
mov
push
pusha
lea
adc
loopne
cmc
xchg
adc
adc
jp
sbb
jbe
fcmovnb
dec
sub
ret
outsb
inc
insl
xchg
mov
cmp
ja
test
push
rorl
push
imul
movsl
mov
push
lret
icebp
pusha
cmp
mov
xor
cli
jno
lods
ds
dec
mov
cmpsl
pop
mov
sahf
mov
add
insb
xchg
inc
mov
mov
cli
std
loop
fisubl
adc
push
fdivs
outsl
fwait
and
fildl
or
aaa
sub
xchg
push
push
pop
dec
jno
mov
xor
xor
jge
fs
xor
scas
push
mov
jns
mov
adc
dec
dec
into
push
cmc
ffree
push
mov
add
or
cmc
and
dec
cmp
cmp
insl
imul
movsl
cs
out
add
ret
jp
sub
repnz
or
jnp
adc
mov
pop
dec
add
pop
bswap
sti
xor
mov
cmc
ret
lods
cmc
test
into
in
iret
std
repz
aaa
sub
mov
subb
movsb
jge
ret
sbb
loop
iret
mov
sahf
test
aas
in
lahf
call
stc
into
mov
mov
dec
imul
mov
push
data16
repnz
sub
movsl
ret
shll
fs
shlb
mov
and
push
and
xor
mov
imul
jb
lea
fwait
enter
loop
pop
add
fndisi(8087
mov
fsubl
out
out
sbb
pushf
xor
fstpt
ret
rcrb
lods
shlb
xor
push
add
dec
or
mov
mov
iret
lret
jne
fnstcw
sbb
cmpb
rclb
cmp
pop
out
xchg
leave
and
and
push
inc
ds
push
sub
push
mov
out
cmovno
das
xchg
mov
add
xor
mov
out
dec
loopne
cmpsb
or
add
sub
mov
inc
bound
stos
inc
push
mov
sbb
ret
xchg
test
imul
insb
pop
xchg
lods
mov
test
sbb
push
mov
mov
jl
sbb
jae
loop
aam
push
ss
pop
pop
add
jbe
jb
out
sbbl
mov
lea
out
adcb
sbb
pusha
or
stos
cmp
xchg
iret
mov
jmp
jl
repz
in
fsubrl
lods
pop
out
dec
mov
push
inc
rcrl
jp
hlt
in
in
xor
imul
frstor
xchg
jecxz
popa
loopne
add
scas
dec
ret
js
or
add
scas
lock
fcmovne
loop
sub
sub
iret
imulb
imull
lea
mov
outsl
and
rclb
xchg
and
and
aam
cld
mov
xor
pushl
jl
test
out
mov
mov
out
lret
data16
imul
pop
outsb
xchg
and
out
outsl
jle
stc
les
mov
pusha
mov
mov
inc
out
iret
lds
std
xchg
mov
fsubrp
inc
inc
rcll
mov
aas
xor
test
xor
loop
pop
cmp
lmsw
adc
xchg
mov
inc
or
sub
rclb
xchg
pop
rcll
imul
dec
hlt
mov
jg
clc
or
mov
ja
inc
test
dec
fbstp
sub
adc
cmpsl
in
es
rcll
and
ljmp
int
mov
pop
mov
in
cmpsl
nop
negl
pushf
in
inc
xchg
mov
mov
lea
popa
outsb
sub
sbb
mov
movl
inc
cwtl
jb
cld
insb
cmp
cmpsl
xchg
in
xor
inc
test
int3
lret
push
popa
push
pop
adc
push
push
xchg
es
cmpsl
clc
in
xor
xchg
xorb
add
ret
popa
lods
push
dec
scas
into
mov
int
dec
and
out
mov
lret
sub
mov
iret
xchg
inc
dec
cwtl
in
or
xchg
pop
cmpb
push
mov
mov
mov
mov
adc
sbb
cmpsb
adc
jno,pt
pop
dec
nop
xchg
pop
clc
push
add
inc
in
xchg
imul
xchg
cmpsb
movsl
adc
repnz
xchg
xor
sbb
pop
mov
aas
or
roll
les
icebp
data16
fcompl
inc
add
cmp
mov
subb
pop
idivb
pop
mov
add
mov
xchg
push
mov
imul
sub
or
sub
mov
in
stos
enter
xlat
jns
and
roll
inc
testb
jle
inc
ja
dec
and
jo
hlt
mov
mov
dec
fidivrl
lock
icebp
aam
fdivl
or
pop
inc
mov
pop
sub
xor
mov
and
and
call
outsl
test
fwait
lret
insb
insb
pushf
pop
mov
jno
jg
aaa
pop
sbb
add
xchg
mov
add
xor
enter
clc
scas
xchg
arpl
rorl
fiaddl
jl
xlat
lods
and
jmp
cmpsb
cli
stos
push
sbb
cmpsb
out
or
pusha
aad
xchg
add
add
sub
cmp
popf
fdivs
enter
xchg
cmp
test
lods
int3
mov
and
cmp
in
loopne
mov
mov
sub
dec
in
push
jb
lret
adc
dec
aam
dec
mov
sahf
or
inc
push
daa
aam
les
inc
ds
xor
sub
and
mov
pop
sbb
test
inc
and
mov
fbld
fldl
cli
xor
xchg
inc
fnstcw
pop
mov
push
sub
arpl
cmp
mov
inc
out
mov
or
pop
jb
sbb
cmpsb
repz
adc
push
js
popf
fldt
test
fnstcw
rorb
and
lahf
int
lock
or
movsl
ss
fs
mov
adc
inc
in
add
pop
push
xchg
sbb
ja
insl
pop
test
sub
inc
xor
shlb
jns
popa
lods
push
mov
mov
filds
cwtl
add
mov
cmp
sti
xchg
adc
sub
push
in
or
outsb
mulb
fisubl
pushf
fisttpll
mov
das
in
js
divl
mov
push
push
iret
loope
out
leave
xchg
popf
cmpsb
rcll
rcrb
ljmp
mov
movsb
insl
loopne
cmp
data16
xchg
push
dec
jne
roll
cwtl
mov
jne
sub
cmp
push
sti
inc
dec
sub
push
mov
xor
or
add
add
aad
pop
inc
push
sbb
mov
in
xor
jbe
xor
movsl
cmpl
subl
jp
rclb
dec
jmp
shrb
iret
sub
pushf
int3
jae
aaa
add
dec
xor
lods
mov
xor
pop
mov
or
into
out
in
and
adc
jmp
cmp
addr16
pop
mull
clc
rorb
xor
aam
mov
aaa
xor
fdiv
xor
movsl
mov
sub
and
es
xlat
cmp
mov
and
pop
jle
ds
fisttpl
fldenv
and
sbb
pop
imul
in
add
cltd
jle
loope
inc
xor
loop
inc
out
sub
sti
sbb
push
aam
xchg
bound
test
sti
pop
cmpsl
dec
push
xlat
xor
dec
dec
mov
jle
xchg
stc
push
xor
repz
cmpsl
out
stos
imul
push
cmp
popa
test
pop
xor
in
xor
das
popf
popf
mov
dec
subl
rcrb
xchg
daa
adc
mov
leave
push
sbb
fisubl
arpl
decl
sahf
xchg
cmp
sub
faddl
lods
xor
lcallw
iret
adc
mov
adc
das
sarl
xchg
lods
ja
scas
dec
lahf
pop
jb
mov
nop
inc
stos
mov
lcall
in
das
mov
or
gs
dec
fldt
subl
push
sbb
push
and
cmc
xlat
inc
xchg
or
push
inc
sbb
or
popf
adc
call
xchg
inc
push
das
add
iret
adcl
xor
pop
jno
jp
inc
cld
movsb
ja
sti
notl
arpl
repz
push
iret
or
movsl
call
imul
das
incb
test
ss
pushf
add
or
loopne
repnz
lock
sub
pop
adc
xor
scas
or
dec
sub
leave
cltd
dec
scas
insb
insl
push
mov
or
pushl
icebp
and
fldcw
movsl
adc
sbb
in
mov
inc
and
lcall
stc
rolb
sti
mov
xchg
xor
fisttps
je
mov
lea
pop
sub
jne
int
mov
dec
and
xchg
addr16
sbb
cmp
mov
xchg
mov
mov
push
test
aad
in
push
jmp
sub
mov
lret
or
mov
mov
stc
into
mov
sahf
pop
rcrb
xlat
sub
xor
mov
xchg
pop
cli
xchg
xor
out
cmp
popa
dec
sti
movmskps
xrstors
or
xchg
addr16
loop
and
jecxz
jecxz
inc
stc
jmp
ret
addl
lret
es
sarl
dec
negl
out
pop
outsl
xor
sbb
stos
lods
xor
cmp
mov
jno
popf
pop
dec
pop
mov
test
in
ss
shll
call
stc
or
cmp
in
das
lods
call
push
cmp
mov
jne
jp
adc
lods
push
or
lret
subb
cmp
sub
es
dec
xchg
arpl
es
or
std
fbstp
inc
xchg
xor
xchg
aad
aaa
aas
pop
pop
sub
sbb
and
jmp
fmull
sub
jmp
dec
out
test
pop
mov
sbb
aas
addr16
jecxz,pt
xor
leave
lret
and
in
imul
pop
outsb
repz
lods
aam
movsb
inc
xorl
lds
fs
dec
mov
fwait
clc
enter
aam
orl
or
xor
sahf
ja
cwtl
clc
fcomi
mov
rorb
mov
and
js
ret
mov
or
insl
pop
call
idivl
out
adc
pop
negl
jne
subb
xor
pop
mov
jbe
mov
dec
mov
ret
fdivrs
or
cmp
insb
cmp
popf
pop
lods
mov
ds
xchg
mov
pop
sub
xor
mov
insb
pop
mov
in
sarl
ljmp
popf
cwtl
fldl
pop
add
ds
dec
fdivrs
je
iret
imul
xchg
mov
jbe
pop
daa
jg
jp
xchg
pusha
test
push
push
loope
push
xor
pop
arpl
mov
out
lcall
xchg
jmp
ror
daa
sti
xor
ret
ficoms
sub
aad
mov
xchg
mov
and
out
or
xchg
cmpb
sub
sbb
cltd
mov
ljmp
out
add
cld
mov
in
add
cld
push
rcll
out
add
xchg
int3
stc
fisttps
mov
mov
mov
xchg
add
sahf
pop
inc
xor
push
sbb
das
sub
jecxz,pt
jp
cmp
imul
xor
sub
mov
das
les
sbb
popa
cs
rcrl
mov
fstp
pop
fstp
jne
pop
mov
andl
sti
mov
xor
inc
test
sbb
jg
fcompl
movb
xchg
push
pop
call
push
sbb
and
jge
not
lret
pop
pop
pop
xchg
loopne
push
pop
insb
sbb
icebp
pop
and
scas
add
sbb
repz
mov
or
mov
rcll
dec
aad
movsb
lcall
int
xor
fcmovu
jl
and
cmpsb
roll
and
mov
mov
mov
loop
cmp
cli
or
xchg
imul
sbb
jnp
aam
jbe
fnstsw
loop
rcl
or
inc
push
xor
add
sbbl
pop
dec
fisttpll
rcr
xchg
dec
pusha
imul
xchg
mov
pop
int
pop
lcall
imul
or
hlt
add
inc
xlat
push
dec
xchg
sar
cli
outsl
add
mov
dec
nop
rolb
dec
pusha
add
notl
add
shll
or
or
imul
sbb
movsb
mov
sub
dec
popa
call
sub
bnd
xor
not
out
loopne
or
lcall
addl
lea
out
inc
mov
imul
jnp
pop
js
or
cmp
sub
andb
sbb
mov
and
cmp
cmp
pop
xlat
outsl
add
dec
sub
xor
or
mov
sub
jne
push
loop
cmp
in
mov
enter
dec
pop
das
xor
dec
cmp
push
sarb
rcl
rcrb
fcmove
in
test
mov
add
or
xchg
fisttpll
movsb
test
fisubs
rolb
outsb
ja
ret
jl
xor
xchg
ret
adc
bnd
push
bound
add
push
mov
je
fisubrl
cmp
mov
add
mov
cli
mov
out
sbb
cmpsb
sbb
fmul
xor
lods
xchg
ja
or
sub
rorl
out
sbb
inc
mov
xchg
add
loop
cltd
sarl
inc
popa
or
adc
sbb
lods
mov
sbb
outsl
inc
pop
or
fisubl
pop
clc
xchg
pop
dec
in
stos
mov
subl
mov
jae
imul
push
pop
int3
sub
jno
addl
notb
scas
cmp
cmp
sahf
out
cli
movsb
hlt
gs
mov
pushf
pusha
pop
cmp
in
es
scas
lahf
shlb
cmpsl
xchg
push
std
test
aaa
jl
es
es
sbb
stc
lods
add
mov
movb
add
shll
cmovnp
addb
int3
das
icebp
enter
pop
out
rcrl
stc
test
inc
pop
lcall
test
xlat
or
xchg
lcall
out
or
pop
and
clc
push
push
lock
movsb
sub
test
data16
shrl
les
and
pop
fs
inc
aad
pop
fistl
sub
jb
int
jno
aam
push
or
mov
adc
test
enter
jge
jmp
xchg
jl
or
push
mov
cmp
test
mov
loopne
push
dec
or
and
js
xor
cmp
test
sbb
dec
fcmove
inc
or
fmull
xchg
loopne
jge
in
lcall
mov
cmc
ds
pop
popf
sbb
icebp
lock
jnp
sub
insl
xchg
xchg
jmp
cmpsb
popf
int3
imull
xchg
pop
inc
push
in
sbb
imul
add
stos
jge
ret
inc
fcmovne
pop
inc
cmp
xor
xchg
iret
sub
pop
in
xor
jl
outsl
mov
mov
mov
or
push
jl
cmpsb
out
cmp
icebp
add
push
shll
dec
negl
mov
lds
pusha
xchg
stc
call
sub
std
mov
cli
xor
sbb
hlt
fwait
jg
sti
stc
pop
sbb
jge
jmp
insb
push
repnz
les
jb
jmp
push
adc
js
and
insl
aam
pusha
cmp
sub
sbb
xchg
out
pop
sbb
in
out
xchg
cmpsb
inc
frstor
xor
sbb
mov
out
rolb
test
test
adc
or
pusha
icebp
adc
xchg
inc
inc
lods
mov
pusha
pushf
fadd
xchg
jnp
repnz
iret
test
add
mov
loop
adc
and
ljmp
adc
notl
sub
call
clc
sub
ss
jbe
clc
pop
mov
dec
jle
pop
leave
ds
dec
ret
push
xor
mov
lea
sub
add
jne
fcoml
loop
mov
cmp
dec
not
pop
imul
jno
call
pop
and
fyl2x
push
movsb
imul
push
out
stos
push
jmp
xchg
mov
jbe
popa
jp
mov
add
jg
flds
pop
push
lea
push
sahf
popl
loope
test
mov
sbb
fistpll
cmp
push
mov
cmp
scas
mov
std
testb
into
lret
outsb
cwtl
stc
and
pop
cmc
jb
mov
or
sbb
sub
popa
outsb
ds
rclb
rorl
fwait
cmp
push
add
push
mov
dec
pop
mov
adc
fcmove
pop
pop
sub
rorl
js
push
lret
in
int3
and
dec
add
fidivrs
mov
or
mov
dec
fsts
test
sub
std
jmp
in
cmp
je
adc
mov
outsl
adc
dec
ja
repnz
popf
sub
ret
mov
outsl
pushf
pop
out
xchg
mov
fdiv
pop
loop
sub
sbb
add
or
cmp
cs
xchg
test
cmpsb
push
int
lods
leave
mov
test
dec
adc
inc
pop
or
bound
xchg
ret
mov
test
inc
sbb
leave
sub
hlt
add
adc
addl
pushl
cmpsb
ror
test
cmp
out
dec
dec
mov
adc
push
mov
repnz
mov
mov
adc
stc
dec
hlt
mov
dec
cwtl
lea
xchg
test
cwtl
jns
jle
inc
mov
divl
imul
add
ja
aad
cli
add
jecxz
mov
mov
or
repnz
and
pop
jae
rcrl
call
shlb
fwait
sbb
pop
jae
in
inc
pop
les
fcoms
fstl
into
dec
outsb
mov
dec
int
xchg
aas
sbb
mov
jno
or
repz
sub
pop
imull
enter
imul
push
jmp
jp
mov
mov
and
mulb
push
inc
aaa
ljmp
or
cltd
mov
lcall
mov
iret
lahf
jg
mov
adc
adc
lret
sub
enter
loope
mov
xchg
mov
out
push
jns
jno
clc
dec
xor
dec
imul
pop
cmp
test
mov
jbe
adc
cwtl
pushf
xlat
fs
inc
cmp
lds
adc
mov
daa
cli
lods
repnz
mov
xor
fdivrs
jg
js
add
push
iret
lret
mov
jge
sub
sbb
ss
sbb
jecxz
iret
lahf
adc
dec
dec
pop
dec
in
sbb
fiadds
inc
rcll
and
adc
loop
test
pop
xchg
scas
push
mov
js
add
lcall
stos
popa
rcrb
flds
rorb
rcr
xor
or
mov
xor
divb
in
ljmp
jge
fistpll
enter
addr16
sti
sbb
cmpsl
push
pusha
add
xchg
in
dec
out
mov
outsl
pop
mov
insl
push
imul
push
scas
jge
inc
sub
mov
sub
pop
popa
in
jmp
lret
iret
popa
xorl
sub
sets
and
push
mov
mov
xchg
outsb
push
imul
and
adc
cwtl
push
insb
jns
add
es
loope
push
mov
sub
movsb
cmp
divl
nop
xchg
push
in
gs
xchg
sbb
sbb
mov
push
enter
inc
or
sub
mov
dec
sub
cmpb
mov
mov
adc
das
int
or
push
pusha
subl
jmp
xor
clc
ret
or
adc
add
inc
into
inc
test
lret
stos
jbe
in
or
pop
pop
mov
pusha
inc
mov
xchg
out
out
sub
adc
movsl
inc
int
push
xchg
mov
mov
into
cltd
in
popf
sub
fsts
fildl
ret
loopne
ja
xchg
dec
inc
and
lods
inc
jl
bound
cmp
sahf
mov
ret
js
lods
fs
outsb
fs
jnp
fidivs
sub
sarb
or
xor
int3
push
scas
mov
mov
push
and
lods
imul
mov
data16
mov
cmc
sub
ret
jbe
or
jne
sar
daa
popf
outsl
jmp
fwait
nop
lods
loope
bound
shrb
push
imul
pop
loopne
jne
or
loope
mov
xchg
jne
imul
cld
cmp
and
cmp
xchg
dec
xor
xchg
lcall
leave
push
sub
out
inc
movsl
push
ret
add
mov
sbb
pop
dec
inc
ficoml
daa
addr16
dec
imul
repnz
cld
mov
xchg
push
lds
andb
push
inc
pop
push
dec
add
mov
in
into
pop
dec
fwait
dec
xchg
mov
mov
jne
cmp
jnp
repnz
mov
push
sub
jge
cmp
out
pusha
inc
clc
dec
mov
xor
xor
cltd
lds
jp
shll
fwait
lea
lret
into
test
sbb
pop
lahf
mov
mov
mov
inc
outsb
jb
xor
mov
mov
ja
addr16
dec
fadds
cltd
out
sbbl
inc
push
or
push
push
out
mov
sbb
cmp
lahf
mov
sub
test
mov
and
xor
sub
in
test
lods
adc
add
loop
stos
bound
leave
in
xchg
xchg
cmp
lea
sbb
lea
cmp
push
aam
mov
in
jecxz
pushf
sbb
out
fbld
test
lock
decb
mov
out
aam
sub
adc
rclb
jl
sub
xchg
adc
or
cmp
cmpsl
inc
sbb
xchg
sbb
pop
fdivrp
aaa
or
xlat
scas
adc
adc
rclb
imul
gs
or
push
xor
xor
add
test
rcr
or
rcrl
aam
lret
xchg
outsb
push
sub
sbb
sbb
in
fs
sahf
cli
add
in
jnp
sbb
mov
pop
add
xor
add
push
mov
fcomps
ljmp
inc
push
shlb
and
jo
lret
mov
int
pop
outsl
or
aad
call
loope
test
mov
cmpl
iret
inc
lods
jno
mov
mov
sbb
jb
and
sbb
pop
subb
hlt
adc
loop
ljmp
incb
pop
push
push
push
or
shl
or
loop
jne
add
or
dec
cltd
popf
push
cmc
scas
imul
orb
aas
mov
push
sbb
ja
jae
sahf
arpl
cltd
or
mov
repz
or
and
pop
inc
aas
lea
pop
fs
and
xor
addr16
cs
mov
ja
sub
mov
dec
push
shll
push
ja
adc
jecxz
mov
xlat
cmpb
cli
test
test
xchg
and
dec
xor
ja
imull
mov
aam
icebp
xor
push
insb
jne
jecxz
pop
fstl
mov
iret
cmp
fdivr
add
outsb
daa
push
push
loop
test
insl
xchg
cld
fnstenv
insb
jge
xchg
test
fs
add
or
inc
push
and
jp
add
and
push
in
push
cmp
js
popa
jb
add
cmpsl
shl
mov
xor
cmp
sbb
pop
mov
ljmp
pop
push
push
jb
jnp
xor
and
adc
pop
and
pusha
mov
inc
in
xor
jmp
inc
pop
mov
imul
mov
stos
or
pop
movb
bndldx
mov
and
or
imul
imul
enter
add
inc
iret
adc
or
xchg
xor
inc
jecxz
sub
loop
ljmp
mov
cmp
imul
mov
test
push
js
cs
adc
add
sub
adc
mov
psrld
sti
sbb
xchg
adc
out
scas
lock
daa
enter
outsb
push
mov
adc
lret
pop
xchg
inc
or
pop
nop
std
aas
sbb
jmp
clc
roll
pop
xor
test
push
aad
test
cmp
imul
movsb
inc
xchg
lret
popf
xchg
mov
cmp
sub
and
jns
pop
mov
mov
aas
sahf
filds
cmpsl
mov
jp,pn
sub
adc
pop
notb
insl
insb
arpl
ret
pop
stos
pushf
add
xor
fistpl
incb
pop
cltd
jmp
pop
push
in
stc
scas
in
inc
out
inc
xor
call
addr16
stos
and
sbb
dec
pop
loope
push
sbb
adc
pusha
imulb
mov
out
pop
and
in
xchg
orb
xchg
sbb
xchg
sahf
cmp
sub
or
cld
push
adc
cmp
inc
jp
leave
xchg
out
or
lods
cmp
or
pusha
adc
mov
mov
je,pn
sub
lods
push
mov
outsl
add
xchg
and
aad
in
cmpsl
pop
jno
mov
clc
dec
dec
mov
cwtl
sub
dec
out
inc
rcr
push
and
sar
push
inc
add
pop
repnz
aas
mov
lret
or
adc
ret
mov
sahf
shlb
fmuls
pop
sub
adc
mov
repz
hlt
push
adc
mov
popf
mov
mov
das
sub
xor
push
stos
in
neg
sbb
xor
pop
cmp
cmp
loope
mov
add
xchg
inc
jnp
jecxz
or
mov
xor
pop
add
adc
cmp
test
cmc
add
adc
cs
push
movsl
insl
add
imul
xor
sbbb
jno
insl
xor
stos
xor
add
daa
stos
push
sbb
sub
jno
xor
jbe
mov
adcl
test
shrl
test
cmpsb
lock
dec
push
xor
jecxz
shl
int
pop
arpl
test
repnz
and
push
adc
lret
les
add
dec
inc
mov
add
ljmp
icebp
popf
fistps
adc
adc
mov
lret
xlat
adc
repnz
add
and
sub
adc
xchg
jl
sti
xchg
cmp
mov
ds
inc
push
ret
jae
add
test
leave
push
incb
adc
fs
dec
icebp
mov
hlt
lods
jbe
incb
into
inc
xchg
mov
ja
pusha
in
out
dec
mov
add
lock
mov
loope
adc
inc
lret
mov
inc
sbbb
mov
test
les
int3
add
ret
test
enter
sahf
mov
lods
aad
add
outsb
lret
pusha
ss
fcmovne
push
dec
es
adc
sahf
and
jg
ret
pop
and
pop
ja
jnp
push
test
mov
xchg
xor
xchg
repz
cmpsl
pop
inc
dec
mov
mov
jmp
adc
mov
flds
nop
pop
mov
xor
test
jle
scas
andb
add
lods
adc
imul
add
mov
fists
fcoml
push
adc
fnstenv
gs
pop
outsl
rolb
jle
psraw
mov
mov
insb
nop
sub
jbe
pop
enter
inc
scas
xor
sub
pop
mov
ficoml
cmp
add
xchg
loopne
push
pop
cmp
add
mov
dec
jns
js
mov
jg
push
pop
xchg
insb
push
insl
sti
jg
out
add
sbb
gs
mov
js
mov
adc
rorl
mov
mov
adc
mov
mov
mov
cmp
cltd
pop
pop
xchg
arpl
cmp
sbb
incb
mov
scas
es
sbb
xchg
pop
push
add
push
mov
sbb
subb
inc
mov
addr16
xchg
lret
sub
push
push
lcall
lcall
inc
jmp
movsl
jo
int
lret
mov
iret
js
push
sahf
xor
sub
and
sbb
sub
js
aam
cwtl
xchg
jp
pop
mov
enter
testb
xchg
hlt
xor
jmp
inc
pop
mov
subl
mov
jl
add
scas
mov
iret
jb
pusha
sub
pop
lret
push
inc
pop
popf
das
adc
movsl
inc
push
mov
push
lock
out
sub
adc
fs
mov
cli
or
je
sub
adc
mov
repnz
xor
lret
cwtl
mov
jno
mov
dec
imul
add
push
sbb
fwait
movsl
xor
cld
pop
enter
test
aam
mov
addr16
add
dec
cli
rcrb
push
aaa
adc
les
add
cmp
sahf
scas
arpl
sar
into
push
in
aad
stc
fldt
mov
add
adc
test
inc
pop
ret
mov
xor
sbb
fsub
pop
cmpsb
stos
xor
lods
nop
test
add
xchg
cmp
es
or
scas
xor
mov
movsb
add
in
jae
imul
insl
mov
mov
repz
cmp
mov
or
pop
xchg
fdivs
pop
or
cmp
cmpsb
lret
xchg
cmp
cwtl
cli
jne
push
aad
ficompl
sub
and
scas
fstpl
ljmp
int3
sbb
xor
mov
shlb
xchg
movsb
inc
push
aas
mov
test
jmp
adc
orb
xchg
rclb
pop
sbb
sbbb
das
cmp
loop
jo
sbb
out
dec
sbb
push
es
push
repnz
ss
xchg
mov
popa
stos
in
mov
sub
out
jno
lods
sar
sarl
les
test
ret
popa
xchg
jo
rcl
outsb
in
movsb
out
sub
out
imul
iret
cmpsb
push
adc
data16
cmpsl
dec
mov
jle
lods
push
jl
je
mov
jb
xchg
mov
addr16
sub
scas
test
and
adc
sub
ljmp
addr16
pusha
mov
in
lock
mov
jno
mov
mov
outsb
xchg
xor
dec
sti
cmp
test
ss
cmp
test
pop
or
mov
inc
or
mov
fwait
inc
xchg
das
cli
add
xchg
out
test
shl
push
icebp
je
stos
push
lret
enter
adc
add
fistpl
or
aam
push
add
mov
leave
idivl
stos
test
mov
lods
dec
scas
sti
mov
nop
fs
or
ror
sbb
leave
or
xor
into
in
add
sub
sub
data16
sbb
out
push
sbb
pushf
xor
je
mov
add
push
mov
clc
mov
int3
add
mov
lcall
xor
sub
push
bound
jns
iret
sbb
push
inc
test
sub
je
and
or
and
mov
jns
mov
test
cmp
xor
in
lcall
mov
or
loopne
inc
jmp
jecxz
inc
les
lret
xchg
leave
fists
sub
addl
loope
mov
enter
adc
sbbl
nop
into
jle
cmp
add
mov
enter
sub
cmp
fistpll
loop
fidivrl
mov
lcall
bound
sub
addl
or
pusha
adc
out
ljmp
dec
lahf
cmp
in
enter
adc
shrl
mov
ss
lds
in
mov
loope
push
push
dec
pop
or
notl
xchg
push
fdivp
addr16
add
stc
xor
or
bound
cmp
cli
pop
push
adc
cltd
mov
loope
movsl
rclb
negb
lds
push
enter
sbb
push
cmpsb
rcl
addr16
dec
mov
ds
xor
into
or
cltd
cwtl
pop
add
cs
hlt
loope
ret
and
push
fidivrl
adc
call
add
adc
clc
dec
mov
inc
aas
mov
mov
stc
arpl
imul
iret
das
jmp
mov
fwait
dec
lea
push
aad
adc
add
test
out
dec
cmc
xchg
add
les
inc
sub
je
jg
mov
fimull
jge
inc
xor
cmpsl
mov
dec
in
add
aas
aad
xor
lods
jecxz
cmp
push
mov
xchg
jle
addb
adc
jg
xchg
mov
movsb
mov
jno
xchg
aas
xor
ret
push
orb
ss
daa
adc
cmp
xorl
inc
cmpsb
jmp
std
inc
fisttpll
mov
loope
dec
add
mov
inc
xchg
rol
sub
or
das
cld
aas
mov
subl
int
nop
sbbl
orl
mov
dec
aas
nop
dec
dec
mov
test
cwtl
xor
mov
call
cmp
sbb
xchg
cs
lock
popf
movsl
inc
out
outsl
dec
push
mov
mov
sbb
and
xor
lea
push
push
lods
dec
idivb
jp
add
gs
pusha
sub
ffree
jae
arpl
leave
rorl
dec
mov
xor
mov
clc
sbb
xchg
jp
sti
xchg
inc
fstpt
sbbl
sbb
addl
adc
leave
loopne
mov
sbb
xchg
je
cmpsl
cmp
lret
hlt
sbb
push
add
xorl
pop
mov
pop
daa
je
filds
push
xchg
stos
mov
aaa
mov
mov
vxorps
cmp
cmp
dec
dec
in
cmp
mov
mov
mov
insb
mov
out
sbb
data16
push
aam
cli
sub
jns
push
fcmovne
sbb
mov
sbb
xchg
leave
ja
xchg
in
sbbl
xor
or
adc
fucomip
jno
inc
or
sub
jg
outsl
sbb
mov
repz
mov
adc
les
cmp
paddusw
nop
popf
adc
jnp
push
rolb
inc
jle
push
xor
call
movsb
add
scas
js
add
bound
loop
clc
xchg
pop
inc
das
push
rorl
mov
push
rcrl
and
push
rcrl
lods
aaa
shll
rorb
lret
jno
sbb
repnz
outsl
pop
lods
iret
iret
inc
icebp
dec
std
inc
int3
xchg
mov
cmp
pop
aas
xchg
sub
jbe
lds
push
dec
push
mov
add
dec
mov
fadds
je
or
hlt
xchg
in
out
mov
sbb
lret
aaa
add
mov
out
or
jg
std
jne
imul
mov
push
pop
sub
xchg
lahf
cmc
fnstenv
sub
sbb
push
inc
adc
mov
rolb
jnp
cmp
fldl2e
fsubl
mov
add
daa
jmp
loopne
sbb
or
cli
mov
test
sbb
ret
jo
cmp
mov
cmpsb
push
adc
sub
jne
sbb
mov
vpsrlq
shrl
mov
out
je
iret
xor
and
in
mov
lcall
int3
mov
fwait
scas
inc
scas
push
add
jl
stc
je
add
jae
daa
mov
inc
adc
bound
insb
sbbl
outsl
sub
push
and
rcr
xlat
aad
sub
jno
cmpsl
inc
jo
ds
test
repz
imulb
shl
jne
int3
and
sti
and
imulb
sarb
sbb
push
lods
inc
stc
psubusw
fxch
jb
ror
in
cli
mov
pop
cs
lret
mov
in
pop
add
push
dec
pop
and
andb
or
adc
pop
dec
imulb
fidivrs
cltd
movsb
xchg
lock
xorl
jb
test
pop
in
or
pop
cwtl
lret
jo
imul
push
outsb
lea
iret
movsb
sub
imul
cmp
or
shll
or
pop
cwtl
inc
inc
dec
sub
push
out
in
sub
rcll
insl
aas
out
aam
mov
sub
popa
mov
mov
scas
std
mulb
mov
arpl
testb
pop
push
push
push
sub
jle
xorb
xchg
shl
dec
adc
xchg
mov
inc
mov
out
jns
mov
dec
dec
sbb
xor
dec
add
adc
fdivrs
jno
daa
test
test
movsl
adc
aas
push
mov
or
clc
popa
test
xchg
push
pop
ljmp
xor
or
fst
ljmp
aas
and
push
mov
js
mov
test
dec
dec
jle
jge
adcb
daa
loopne
stc
rolb
js
add
fcoms
mov
push
ja
ret
or
ret
test
adc
inc
decb
jne
inc
dec
fiaddl
lea
and
cli
xchg
mov
adc
popf
insb
mov
fldenv
jae
inc
enter
push
cli
push
jl
sarb
pusha
lods
push
mov
stos
lea
and
pop
xor
sub
pop
aaa
repz
add
push
lock
les
mov
cmp
mov
push
shl
pop
shrb
or
test
les
lock
pop
xor
out
pop
pop
pushf
fdivrl
inc
xchg
lods
lcall
or
xor
into
sub
pusha
daa
lock
cmp
ja
out
cmc
lods
jo
lods
sar
xor
mov
adc
xchg
push
or
push
pop
mov
cwtl
or
adc
xchg
mov
popl
cmp
ja
xor
sahf
sbb
fcomp
mov
xchg
cwtl
dec
insl
jno
pop
jecxz
or
mov
out
dec
out
imul
scas
cli
pop
inc
clc
pop
leave
inc
cmpsb
add
insl
cmp
testb
push
sahf
leave
jbe
push
cmpsb
pushf
push
gs
cmp
sub
pop
mov
mov
push
and
xor
stos
push
in
mov
pop
loop
xchg
sub
pop
push
out
es
push
mov
inc
dec
fiaddl
xor
sub
mov
add
insl
fdivrs
sbb
add
mov
out
jbe
mov
xchg
aam
or
js
push
pop
cs
mov
das
pop
and
and
mov
movd
loope
mov
fimuls
andb
dec
jge
push
cmp
dec
movsb
fs
popa
pop
leave
inc
in
pop
pusha
mov
sbb
aam
aam
pop
push
ds
call
in
sub
sti
or
adc
push
and
clc
mov
jmp
jmp
add
sub
xchg
mov
xchg
aaa
mov
sti
lret
sub
scas
mov
dec
push
jne
cmp
imul
pop
daa
loopne
iret
cmp
and
xor
and
outsb
pushf
jbe
mov
dec
aas
sbb
loopne
xchg
pop
subl
or
mov
pop
push
add
push
shll
mov
arpl
shl
push
popf
data16
pop
in
jno
add
mov
sub
inc
push
sbb
call
xchg
scas
mov
sub
fwait
in
push
sub
add
mov
out
inc
add
dec
pop
jecxz
je
mov
push
xor
cmp
adc
daa
mov
mov
jno
or
push
jecxz
jae
xor
mov
pop
push
std
add
adcl
aad
adc
jge
jmp
add
test
dec
repnz
dec
loop
jle
jnp
jmp
jl
clc
daa
mov
mov
fistps
add
jb
push
aad
out
sbb
jg
cmp
pop
leave
xchg
in
xchg
cmp
xchg
fbld
repz
dec
test
fs
imul
aaa
in
cld
jmp
scas
pop
mov
or
leave
sbbb
fidivl
lret
out
lret
sbb
sub
adcl
lret
xchg
in
fsubrs
out
das
scas
mov
jl
loopne
add
mov
fstl
aaa
xchg
xlat
pop
clc
adc
add
repnz
or
adc
inc
aaa
sub
js
out
addr16
xchg
nop
dec
shlb
sub
stos
movsb
scas
gs
subb
sar
std
adc
adc
adc
xor
enter
testl
inc
sarl
cmp
dec
test
sbbl
push
jecxz
mov
iret
push
popa
inc
add
fildl
mov
inc
xchg
stc
mov
push
inc
shll
push
out
or
jle
lahf
push
js
jne
sarl
test
sar
lahf
mov
repz
adc
ret
mov
fcoms
and
push
pop
sahf
rcrb
into
ret
pop
pop
rcll
adc
mov
mov
call
addr16
icebp
out
outsb
mov
push
stos
fs
loop
mov
mov
leave
lret
and
lock
fwait
inc
push
js
mov
adc
add
cld
frstor
leave
aaa
push
insb
push
js
call
ljmp
mov
testl
or
ja
les
lahf
loopne
mov
push
js
cld
stc
cmp
cmp
stc
shlb
jns
ja
in
divl
jmp
stc
fldt
lea
shlb
sbbb
pop
lods
jne
notb
loopne
ficoms
or
push
dec
std
lds
daa
ds
imul
ss
xchg
ljmp
sub
je
xchg
in
xor
sahf
repz
out
sbb
lahf
in
gs
jbe
xchg
dec
sub
sub
mov
xor
dec
stos
sbbb
in
push
loop
sub
outsl
stc
mov
int
mov
fdivr
sub
sbbb
jnp
fnstcw
inc
repz
iret
adc
pop
movb
sbb
push
subl
test
mov
pop
jbe
xchg
and
mov
divl
push
rcrl
jae
xor
iret
sbb
mov
sbb
lahf
dec
out
out
notl
push
js
inc
loop
or
leave
push
out
out
mov
andb
mov
rcll
jbe
and
imul
or
es
ljmp
mov
sbb
and
rcrb
push
mov
cmpsl
mov
insl
popa
push
cli
roll
aam
xor
xor
clc
out
data16
adc
sbb
push
push
mov
xchg
and
addl
popf
jle
rolb
ljmp
add
pop
int3
imul
shl
dec
jle
adcl
inc
xor
sarl
pop
jno
mov
imul
mov
int
mov
add
call
pop
rolb
out
add
or
mov
xchg
sbb
sub
mov
fildl
sub
arpl
and
xchg
mov
and
gs
pop
xchg
hlt
xchg
pop
adc
push
jge
mov
mov
adc
push
pop
ret
xchg
in
cmp
int
dec
xor
and
jno
push
out
loope
loop
mov
mov
sub
cmp
and
insl
in
lds
fadd
out
test
jno
xor
xor
pop
repnz
in
lea
pop
stos
call
addl
dec
lahf
aas
in
test
or
roll
fidivl
mov
jmp
lea
and
push
sbb
loop
imul
inc
int
cmp
push
popa
int3
call
sti
dec
dec
imul
lds
sbb
mov
mov
sti
or
adc
pusha
adc
mov
dec
jns
outsl
push
outsl
mov
dec
mov
outsb
ja
jle
shrl
in
pushf
jne
int
jp
add
je
xor
xor
jp
sub
sahf
repz
dec
xchg
mov
jnp
icebp
lret
iret
aaa
sub
out
repz
lods
call
sbb
movsl
repz
int3
adc
testl
in
sub
insl
cmp
inc
jne
pop
es
in
stos
lret
iret
or
and
roll
shlb
ds
imul
xor
stc
pusha
xor
dec
sbb
aaa
adc
mov
lods
xchg
inc
das
rorl
repz
pushf
xor
ficoms
insl
sub
and
lds
and
aad
sub
push
and
aam
testl
fimull
xchg
jbe
pop
repz
jmp
cwtl
repnz
pushf
popf
mov
sarl
movl
dec
xchg
ss
cmc
stos
scas
es
loop
jo
push
rorb
ret
test
aas
out
lcall
sbb
jbe
ljmp
ficompl
dec
pop
out
or
push
push
mov
lcall
and
pushf
and
fcoml
sbb
inc
xchg
test
in
jecxz
icebp
push
and
cmp
fsubp
cmp
fdivrs
aaa
push
pop
dec
fistpl
int
lcall
into
lds
bound
lods
push
fcoml
jb
jae
pushf
add
jns
cwtl
or
fbld
fs
cli
dec
sub
jle
outsb
mov
shll
leave
add
aas
dec
into
popf
aam
test
lock
stc
test
loopne
sti
push
mov
rcr
xchg
aad
aad
pop
dec
shll
and
inc
cmc
sbbb
fildl
push
sbb
shll
ljmp
mov
scas
cli
stc
jnp
inc
in
cmpl
xchg
cmpsb
push
or
xchg
test
lahf
inc
and
dec
push
xlat
jno
adc
mov
mov
and
ret
pminsw
ret
pop
pop
push
lcall
shrb
enter
out
cmp
iret
idivb
and
add
cmp
xor
jle
iret
dec
jnp
adc
imul
mov
cs
andb
mov
hlt
mov
dec
orl
pop
adc
fdivl
sti
xor
adcb
xlat
test
cmp
lods
push
lods
sahf
cmp
add
fmuls
subl
ret
out
inc
inc
stc
adc
push
lcall
push
insb
and
lock
sbb
mov
dec
outsb
sbb
clc
push
adc
add
loop
or
xchg
movsb
mov
popf
lods
xchg
jp
sbb
adc
add
or
push
push
cltd
cltd
stos
dec
cmp
and
jbe
fldenv
aad
pop
mov
jnp
sub
cli
daa
ret
mov
inc
fbstp
xchg
sbb
fimuls
mov
out
sbb
push
push
jbe
js
mov
push
es
dec
xlat
xchg
inc
je
sub
mov
xchg
loope
inc
mov
adc
repz
cmpl
negb
ljmp
call
xchg
adc
adc
jns
hlt
fwait
loopne
dec
lods
outsb
pop
ret
out
adcb
mov
into
clc
jnp
cmpsb
sbb
addb
loope
sub
mov
popf
into
adc
and
in
push
mov
mov
ljmp
ficoml
adc
test
out
pop
or
inc
mov
mov
cmpsl
test
adc
pop
loopne
test
push
loope
cs
jo
adc
sbbb
adc
js
insb
scas
imul
adc
test
dec
movups
js
sub
sbb
jg
repz
repnz
pushf
aam
mov
push
add
out
es
pop
mov
sub
jl
xchg
out
ljmp
push
fs
push
adcl
mull
pusha
mul
inc
hlt
jae
add
in
idivl
pop
mov
xor
aaa
sbb
xor
sub
fsts
xor
mov
cmpsl
outsb
scas
xor
jne
cmp
mov
daa
lret
mov
inc
mov
popf
sahf
add
mov
outsb
in
enter
int
pushf
imul
in
ljmp
xchg
insl
jge
mov
or
fiadds
xlat
push
test
fsubr
stos
fldenv
jne,pt
sbb
jae
mov
idivb
jg
lds
mov
xor
jo
add
stos
adc
sahf
rcll
out
sbb
mov
es
mov
cmp
scas
es
jmp
shll
inc
mov
mov
push
leave
out
out
push
fwait
xor
sbb
lret
iret
mov
inc
and
mov
push
add
lahf
movl
push
loopne
push
ss
inc
jbe
jle
insb
add
insl
jo
xor
mov
je
sbb
mov
lock
int3
outsb
aad
pop
sub
int3
cwtl
fnstenv
lock
and
mov
pop
hlt
test
cmc
sub
inc
jmp
mov
sbb
cmp
loop
jg
push
inc
adcl
adc
jno
and
fidivrs
mov
jmp
es
movsb
dec
leave
sub
mov
pop
sbbl
cmpsb
popf
mov
mov
sbb
pop
xor
enter
mov
add
push
rorl
jl
push
rcrb
inc
pop
cmp
inc
insb
jmp
popf
jecxz
or
dec
rdmsr
sbb
sub
cltd
cwtl
sbb
dec
xor
jne
cmp
or
xchg
inc
jbe
xchg
xlat
outsl
mov
push
and
push
or
ficomps
pop
xchg
sub
sbb
xor
loope
dec
movsl
std
dec
into
fcompl
cwtl
sbb
pop
mov
and
imul
mov
int
hlt
xchg
fucomp
imul
cltd
push
sub
and
mov
scas
pop
enter
mov
mov
aas
loop
jl
cwtl
pop
xor
mov
pop
bound
test
cwtl
inc
pcmpgtw
dec
fwait
test
inc
pop
sti
xchg
jl
and
xchg
or
repnz
clc
cli
addr16
jo
fnstsw
je
inc
adc
pop
adc
sbb
jb
ret
adc
push
loop,pt
sub
dec
mov
sbbb
add
pop
in
bound
hlt
push
int3
or
stc
mov
flds
or
mov
pop
cmp
dec
js
arpl
aam
sahf
xchg
cmc
jne
mov
loop
add
stc
divl
sub
mov
push
push
mull
and
xor
pop
push
or
mov
jnp
fwait
mov
stos
xchg
inc
test
or
jnp
movsb
push
sub
push
jge
xchg
enter
sti
in
repz
or
jno
das
xor
adc
ljmp
jp
cltd
lods
push
xchg
add
sbb
xlat
mov
pop
sub
sti
sahf
rcl
imul
cmp
iret
jo
aad
cmp
xchg
mov
cmp
ljmp
ficoml
cmp
xchg
popa
push
or
mov
je
imulb
pop
popf
dec
pushf
mov
xlat
in
jecxz,pt
repnz
addr16
ret
add
push
mov
sbb
leave
arpl
push
inc
insb
pop
ja
andl
addb
and
push
ret
adc
fsubrl
repz
pop
imul
loope
mov
call
in
sub
mov
fprem
push
out
cmp
scas
add
rclb
in
hlt
jp
sub
loop
outsw
add
nop
popa
aaa
out
adc
outsl
and
push
loop
push
imul
ret
jae
push
mov
andb
bound
inc
jnp
add
pop
and
xchg
orl
movsl
inc
sarl
in
ret
test
outsl
mov
sub
mov
scas
repnz
adc
in
inc
or
mov
jl
aam
outsb
scas
cmpsl
ret
xor
fs
or
and
test
ss
bound
ljmp
adc
aas
sbb
pop
mov
into
cmp
bound
adc
ret
cmc
cmp
sbb
cmp
stos
and
insl
outsb
inc
jbe
jg
popa
loopne
sub
jg
mov
inc
adc
sub
loopne
es
outsb
cmpsl
mov
int
mov
in
enter
pop
dec
dec
mov
mov
imul
xchg
test
and
lods
dec
cltd
xor
fwait
popf
mov
insl
inc
ljmp
jo
sub
sbb
xorl
mov
xor
aad
lret
jle
xchg
xchg
lea
xchg
lcall
add
daa
push
cmp
push
xor
pop
cmp
or
and
sbb
lcall
jle
push
xor
rorb
lock
dec
icebp
lcall
pop
xchg
xchg
pop
popa
sub
es
mov
xor
add
inc
dec
sbb
cmc
bound
add
pop
aad
xchg
dec
enter
add
arpl
jae
xorb
adc
jne
mov
fwait
stc
daa
inc
pushf
push
ret
lea
push
and
cs
adc
and
cmpsb
cmp
cld
cmp
cli
inc
pop
imul
cmp
popf
shll
xchg
negl
adc
mov
sub
cltd
scas
arpl
movsb
dec
jno
arpl
in
add
add
cwtl
aam
fnstsw
enter
jle
jne
sbb
mov
and
xor
dec
hlt
gs
es
adcb
jmp
cld
mov
sub
mov
iret
scas
fldt
inc
push
pop
xchg
xchg
sbb
sbbl
xor
scas
push
or
xchg
lock
xchg
rcrl
sub
das
xorb
int3
or
sbb
sti
cmpsl
nop
fcomps
dec
mov
pop
push
test
imul
in
pop
cmpsb
inc
out
inc
repnz
std
add
mov
cli
pop
dec
xchg
lcall
jg
dec
xor
inc
jg
movsb
push
inc
sbb
pop
or
ljmp
push
jno
sbb
pusha
out
stos
dec
cmc
lock
idiv
les
push
mov
jns
xor
ja
mov
ficompl
mov
xor
push
shrb
ss
jo
xor
xor
jnp
cltd
xor
xor
jns
out
jecxz
jle
mov
pop
add
push
inc
aad
mov
xor
iret
aad
fwait
xchg
xchg
ss
mov
cwtl
pop
popa
adc
repnz
fxch
and
push
jns
jnp
mov
jp
aad
pop
mov
jp
cmp
mov
popf
ds
xchg
jbe
mov
mov
and
push
test
loop
aaa
dec
sub
add
sahf
cmc
shl
mov
mov
or
fs
or
adc
push
pop
push
add
and
dec
fsubl
cmc
stc
or
jno
add
mov
lock
push
nop
scas
nop
lret
xchg
mov
inc
adc
or
sahf
xchg
inc
xor
push
xor
push
dec
jb
mov
test
test
test
xchg
adcl
cmp
imul
les
add
xchg
les
stos
pop
xchg
push
fiaddl
sbb
and
inc
sbb
mov
pop
ret
mov
in
ds
dec
pusha
stos
mov
and
cmp
ja
jbe
mov
negl
xchg
mov
add
mov
push
rolb
in
arpl
cld
push
out
out
jmp
mov
ja
and
cbtw
fisubrl
ja
mov
dec
pop
mov
mov
shlb
pop
lea
inc
aas
add
dec
mov
mov
push
xor
jo
cmp
add
int
xor
orl
test
rclb
rolb
jo
outsb
popf
cmc
pop
int
adc
sbbb
sub
jbe
fmull
jg
stc
inc
jo
out
into
mov
aas
push
lods
mov
pop
inc
cltd
sbbl
leave
mov
lcall
lret
adc
je
mov
inc
fnstsw
ljmp
call
cmpsl
rcr
dec
jno
iret
cld
pop
hlt
mov
mov
js
jbe
and
out
pusha
inc
dec
insl
xchg
push
lock
pop
xchg
push
and
fimull
loope
pusha
mov
fs
sti
adc
inc
outsb
xchg
or
cmp
mov
data16
sbbb
sub
cmp
cmp
sub
inc
xchg
jne
sbb
ljmp
adc
push
cmp
or
xchg
add
cmp
jl
ret
cmp
or
popa
push
fwait
and
cltd
jne
inc
jae
test
lock
push
mov
hlt
repnz
mov
inc
mov
rclb
xor
outsl
sbb
inc
jns
cwtl
push
push
mov
add
neg
aaa
jno
cmova
out
inc
add
add
inc
lock
mov
in
bound
insl
lods
sub
inc
loopne
mov
pop
sub
lock
clc
jmp
xlat
call
out
mov
loope
xchg
leave
mov
and
popf
cmp
xor
xorl
jmp
les
int
fs
outsl
nop
iret
cs
mov
mov
sub
mov
test
pop
repz
inc
test
and
push
and
inc
pushf
inc
adc
lret
add
scas
ds
xchg
fdivs
dec
fyl2x
dec
jno
xchg
js
shlb
cwtl
scas
dec
pop
xor
pop
fcmovnu
int3
mov
fs
in
jmp
pop
add
adc
dec
lds
cltd
mov
jmp
jb
mov
jmp
jnp
sub
insb
data16
pop
mov
pop
lret
and
test
imull
xchg
outsl
or
jae
mov
mov
jb
jns
out
inc
cmp
jp
rorb
sub
push
xchg
pop
cmpsl
bound
dec
mov
mov
dec
repz
aas
or
mov
pushf
je
mulb
xor
fwait
sbb
sbb
sub
dec
push
clc
inc
jbe
mov
std
push
aam
or
dec
mov
adc
jbe
lods
dec
cwtl
inc
popf
sti
popa
or
idivl
dec
and
orb
jnp
xchg
xlat
call
lcall
sub
in
push
lock
lods
xchg
js
xor
ss
dec
push
bound
lods
and
divb
popa
ret
pop
add
loop
mov
cmpsl
xchg
pop
mov
sub
test
scas
mov
popf
or
inc
cmp
cmpsb
and
cmp
fnstsw
int3
int3
mov
into
sbb
pop
stc
addb
movsb
mov
arpl
jge
in
loope
adc
add
adc
movsb
xchg
insb
add
push
inc
pushf
dec
aam
mov
lods
pop
dec
pop
clc
ret
sbb
and
movsl
in
shrb
test
pop
xchg
cmpsl
xor
mov
daa
jl
rol
pop
lock
cltd
fnstcw
add
aad
or
xchg
and
pop
lods
sarb
push
mov
add
test
cmp
mov
push
lcall
adc
insl
mov
pop
lds
xlat
cld
mov
aam
xchg
add
lods
scas
add
in
aas
jb
lret
jbe
dec
mov
xor
xchg
jae
movsb
and
cmp
mov
stc
icebp
fwait
ljmp
jb
fs
xchg
push
adc
shll
das
fcmovne
je
pusha
ss
push
and
in
pop
or
sub
es
xchg
test
ljmp
and
and
aam
sti
addr16
ja
sahf
pusha
inc
add
adc
sbb
imul
mov
dec
lds
dec
cwtl
mov
ds
fnstcw
sub
mov
ficoml
stos
or
mov
cmc
xlat
xchg
mov
imul
mov
rorl
jbe
lret
xchg
popa
stos
mov
pop
daa
cmp
sbb
addr16
sbb
rcrb
addr16
orl
fs
movsb
fisubrs
shrb
xchg
pop
or
mov
fisubrl
xchg
push
lea
lock
fstpl
dec
inc
fbstp
fucomip
mov
in
rorb
pop
mov
ds
mov
cmp
inc
mov
push
sti
mov
ja
sti
adc
fincstp
xor
jg
clc
repz
out
shll
pop
sub
push
mov
lret
mov
les
les
aad
mov
iret
jo
nop
push
fbld
mov
mov
dec
lcall
ret
jp
mov
mov
imul
jg
movsb
mov
lods
in
and
mull
mov
leave
xchg
ljmp
std
jmp
vmaxss
addr16
jns
mov
push
xlat
mov
loopne
lods
xchg
push
popf
js
stc
mov
mov
stc
mov
stc
sbb
jecxz
jae
cmp
test
mov
jecxz
cs
or
out
adc
pushf
pop
push
dec
into
ret
jbe
xor
dec
rorl
insl
xchg
sbb
cli
lods
jecxz
ret
xchg
mov
aad
jnp
movsl
dec
mov
jae
pop
lods
adc
test
push
and
jns
jae
popf
clc
jp
cmpsl
ljmp
iret
mov
dec
or
sub
push
roll
lods
and
jmp
jmp
repz
fwait
add
psubusb
push
xchg
add
mov
push
inc
loopne
xor
fwait
pop
add
adcb
cvtpi2ps
call
fistl
imul
popw
cmp
xchg
daa
and
addr16
and
inc
repnz
iret
sbb
xchg
hlt
push
sahf
insl
repnz
sbb
xor
push
jl
cmp
xchg
xor
inc
in
aaa
push
lcall
mov
or
inc
ss
movsb
mov
add
push
mov
sbb
mov
addr16
xchg
pop
jns
cmc
push
jnp
test
mov
sub
outsb
fdivrs
negb
lods
dec
dec
add
push
fisubrs
and
jb
push
jne
xchg
lods
cli
pop
mov
or
cmpsb
pop
push
adc
or
pop
ret
lock
jno
mov
sahf
out
scas
pop
in
fs
sti
mov
pop
or
push
adc
dec
mov
pop
dec
fdivr
and
adc
pushf
scas
test
std
push
repnz
fucom
sbb
adc
cmp
xchg
push
cmc
fnstenv
ret
xchg
dec
enter
xor
or
or
mov
sbb
jl
cmc
jl
jecxz
aaa
mov
mov
into
hlt
dec
imul
push
inc
sub
ret
ja
test
mov
xchg
movb
and
scas
mov
fcoms
imul
movsb
or
cmp
roll
push
in
pop
mull
icebp
xlat
paddq
cmp
shlb
adc
sub
xor
out
or
js
cwtl
frstor
dec
xor
icebp
cmp
jb
push
inc
test
and
mov
shlb
add
mov
pop
pop
push
push
sbb
jle
and
or
dec
add
jo
mov
mov
ret
lret
fs
es
and
sahf
out
and
cmc
cwtl
sub
push
aam
mov
mov
adc
insb
xor
dec
sub
out
cmp
add
outsb
sub
xchg
out
enter
enter
hlt
pop
add
add
fnstcw
push
clc
cltd
dec
scas
inc
xlat
pop
push
push
jno
ds
clc
fwait
inc
stos
mov
lds
jns
lret
lds
sti
xchg
out
mov
out
dec
scas
jne
lahf
push
xor
subb
mov
rcll
or
imul
outsb
loopne
enter
fnstcw
or
fsin
add
cmp
lret
xchg
aaa
nop
xor
cli
imul
shll
add
in
sub
jae
jb,pt
je
sbb
xchg
sbb
repz
ret
adc
adc
cmp
in
push
fcmovu
pop
xchg
add
jg
and
outsb
xchg
repnz
jo
dec
or
shr
ljmp
imul
int
shll
stos
mov
push
inc
in
test
test
sub
xchg
stos
adc
test
jmp
pusha
in
jmp
pop
loop
dec
and
push
in
mov
xor
lret
stos
mov
mov
test
xor
arpl
test
call
xchg
inc
test
orb
add
sbb
ficomps
dec
xor
movsb
xchg
add
insl
js
pop
inc
je
xlat
scas
stos
sbb
jmp
lcall
xchg
cmpsb
aam
mov
dec
neg
arpl
scas
or
sbb
mov
inc
adc
fisubl
and
stos
popf
jb
mov
les
es
cmpsl
mov
fcomi
inc
sbb
add
add
jmp
mov
fsubp
mov
lea
push
pop
pop
sarl
mov
sbb
ljmp
cli
fisubs
pop
and
pop
mov
cmp
fstp
mov
iret
das
xchg
add
xlat
mulb
jmp
lret
adc
pushf
mov
sub
jns
vhsubps
xor
jnp
into
sarl
xor
mov
cmp
pop
pop
sub
pusha
mov
imul
sbb
sbb
shll
push
ja
addb
test
cltd
inc
stc
cmp
lods
outsl
aas
xchg
in
xchg
out
cmp
sarb
xlat
add
mov
xchg
push
lds
outsb
int3
ja
xor
push
lea
pop
xchg
cmp
leave
jne
xchg
adc
sub
test
mov
test
shll
call
or
mov
jecxz
and
div
dec
adc
and
aam
pop
jo
insb
xchg
das
negb
out
xchg
test
push
imul
fistpl
and
sub
inc
or
int
pop
cmp
mov
cmc
dec
xchg
push
rclb
add
or
dec
stos
adc
jle
mov
shrb
scas
lods
ret
jno
orb
cwtl
sar
jmp
fmul
add
mov
out
pop
mov
cmpsl
out
fwait
xor
adc
xor
test
cmc
push
mov
insb
roll
push
mov
inc
in
cmp
roll
sub
mov
add
xor
pushf
pop
repz
or
imul
mov
xor
in
xchg
lret
movsb
daa
cwtl
bound
gs
mov
fbstp
xchg
ja
push
shlb
ss
fdivl
in
sahf
into
lret
xchg
hlt
sbb
cmp
mov
inc
fs
rcl
inc
mov
daa
mov
and
je
shr
inc
adc
shll
and
cmp
fisttpl
pop
fimuls
xor
pop
stos
or
pop
jne
cmpsl
sbb
fadds
dec
adc
inc
pop
mov
outsl
push
jns
scas
movsb
mov
cmova
out
push
push
scas
orl
push
push
lods
out
dec
hlt
cmp
pushf
sbb
mov
mov
jns
jl
add
lahf
insl
popf
aad
pop
movsb
fbstp
in
pop
test
xchg
insl
loope
jle
fnsave
jae
xchg
fdivrs
xor
sub
push
movsb
and
push
xchg
cli
cwtl
movl
arpl
mov
or
adc
sbb
mov
dec
out
iret
mov
stc
push
int
stc
shll
mov
lret
xchg
xlat
sub
dec
inc
add
or
sbb
jne
fdivl
scas
ljmp
mov
xchg
ja
xor
adc
cwtl
dec
mov
cltd
sti
inc
popl
ret
call
jge
push
outsl
jg
aas
test
aas
xchg
sti
pop
inc
fisttpll
inc
rolb
sbb
mov
mov
sub
inc
fisttps
push
adc
dec
lahf
dec
test
rolb
cltd
insl
push
orb
or
or
ret
mov
xchg
incb
cmp
dec
icebp
adc
mov
or
xchg
pop
in
xchg
idiv
mov
or
or
clc
adc
repz
movsb
dec
push
pop
or
pop
mov
or
sbb
sub
push
loopne
addr16
rcll
cld
add
cmp
mov
xchg
and
fldenv
jae
sub
sbb
mov
fisttpl
push
add
and
jne
jmp
andl
aas
int
xchg
fsubl
imul
es
enter
sub
insl
imul
andb
xchg
imul
push
aad
fs
incb
adc
add
or
testl
stos
xchg
jns
jle
jg
fdivrs
mov
cli
add
pop
test
roll
dec
xchg
sub
mulb
mov
loope
hlt
mov
js
push
leave
bnd
mov
inc
addr16
lods
pop
jnp
add
cs
shrl
jnp
ljmp
inc
into
repz
test
dec
mov
adc
xchg
cld
inc
call
pushf
insb
out
shl
cmp
xor
xchg
push
push
push
sbb
and
adc
dec
pop
mov
dec
test
inc
inc
call
cli
mov
out
xchg
push
mov
fst
pop
lods
popf
leave
mov
mov
and
sbb
lret
test
adc
repnz
jo
and
lock
mov
add
push
lahf
lahf
jno
sbb
sub
inc
sub
leave
testb
mov
sub
mov
ss
fisttpl
add
jg
out
mov
clc
insl
imul
mov
popa
pop
jbe
les
xor
aas
sub
rclw
lds
sbb
rcrb
pop
cmpsb
sbb
mov
inc
aaa
push
clc
xor
arpl
mov
stos
dec
pop
inc
mov
mov
mov
or
mov
in
push
mov
push
inc
cmpsb
mov
jecxz
jg
popa
jge
ja
aaa
push
in
addl
push
subb
mov
xorl
orb
jp
xchg
je
xor
rclb
pushf
inc
xchg
push
jge
sbb
and
dec
lock
loopne
adc
arpl
test
mov
dec
pop
cmc
dec
int
cli
bound
add
or
or
lock
push
test
xor
xor
mov
mov
jmp
nop
jae
out
xor
xor
lret
add
mov
or
arpl
loope
notb
movsl
int
fstpl
arpl
rol
aam
scas
push
outsb
or
push
notl
pop
loop
push
outsl
mov
rcr
outsl
inc
add
lea
xrelease
loop
pop
iret
and
jae
pop
dec
inc
mov
loopne
mov
mov
gs
rorb
fidivrl
fld
jo
fidivl
addr16
pop
jnp
aaa
popa
and
subb
lret
xor
adc
outsb
rcrb
shlb
inc
add
dec
rcr
dec
pop
out
jb
mov
mov
daa
pop
rol
xchg
pop
clc
cmpsb
call
stos
cmc
xchg
pop
xchg
iret
cmc
pusha
jne
cmc
sub
jle
sti
loop
cmp
or
and
xchg
testl
ds
adc
gs
jp
mov
insl
inc
lea
test
pop
and
xchg
push
cmp
lret
shl
lahf
push
add
shlb
inc
orl
test
rcrl
sub
and
cs
vcmppd
jne
scas
bound
dec
cwtl
xchg
icebp
sti
mov
push
mov
bound
arpl
hlt
incl
xchg
gs
dec
mov
and
push
cltd
inc
adc
popf
sahf
lcall
xor
stos
imul
mov
jp
out
fwait
push
pop
js
dec
sub
mov
js
testl
jecxz
cmpsl
fdiv
cmp
cli
cmp
xor
mov
push
dec
xchg
mov
outsb
lea
call
cmp
pop
sub
sbb
sbb
jl
and
pop
xchg
or
gs
popf
aad
push
rolb
xchg
les
cmpsl
daa
cwtl
lret
lock
jae
stc
int
fsts
push
inc
inc
adc
push
sti
jmp
pop
add
lret
add
lock
or
mov
leave
icebp
mov
adc
mov
sub
mov
mov
push
clc
adc
loope
cmpsl
bound
pop
mov
in
imul
pop
dec
hlt
orb
fndisi(8087
outsb
imul
inc
popa
jbe
add
xchg
aam
cmpsl
dec
cmp
inc
push
mov
sub
bound
rcr
xchg
or
add
dec
sub
stos
aas
push
movsl
and
dec
insb
mov
pop
shll
cld
lods
shrb
dec
cmp
jbe
aad
inc
inc
push
jle
jg
dec
pop
inc
fwait
mov
add
mov
out
nop
mov
jb
pop
add
xchg
ja
xor
dec
and
in
loope
aas
test
leave
dec
lret
int
or
push
jl
push
enter
loop
test
les
or
inc
repnz
lods
movups
sub
mov
fistps
xchg
and
sub
adc
inc
dec
mov
cmp
xor
adc
cmovs
in
loope
adc
int3
cwtl
mov
pop
mul
lcall
repz
add
into
ja
dec
and
in
xchg
xchg
rcrb
jecxz
movsb
sub
popf
jne
insb
xchg
sub
cmp
and
dec
sbb
dec
sub
mov
sbb
xor
inc
es
lcall
jle
push
push
call
xchg
mov
xchg
sbb
orb
and
xor
in
ja
pop
arpl
nop
cmpsb
das
popa
cmc
ljmp
sti
cmpsl
cmp
sub
lods
jb
jmp
push
dec
push
lods
mov
jns
dec
sub
mov
iret
rolb
scas
js
pop
add
xor
stos
jno
mov
sub
xchg
fimuls
aas
incl
xchg
ret
pushf
cmp
mov
push
mov
cli
xchg
xchg
in
sbb
pop
outsl
sbb
xor
test
cmp
cld
sbb
xchg
enter
sbb
jno
mov
ja
or
into
push
sub
xchg
mov
les
nop
or
outsl
int3
mov
sub
call
inc
dec
sub
inc
pop
xchg
imul
sub
in
push
adc
mov
sbb
xchg
or
out
les
add
push
mov
shlb
adc
lods
inc
pop
daa
sbb
shr
push
sub
leave
fwait
jnp
fwait
shlb
ret
mov
or
aaa
daa
jp
cmp
mov
pop
pop
lods
mov
lods
jle
daa
and
adc
xchg
in
xchg
pop
mov
cmpsl
sub
sbb
out
inc
xchg
mov
ret
xor
pushf
jge
mov
stc
aam
int
xor
push
and
lret
call
push
lret
ret
psrlw
scas
in
repz
das
leave
insl
insl
mov
push
cli
xchg
push
in
sub
shr
xchg
adc
hlt
loope
and
mov
js
insb
mov
mov
dec
mov
inc
gs
clc
and
lret
loop
js
repnz
pop
test
jmp
push
adc
lock
inc
xchg
aas
gs
aad
loopne
fistps
pop
push
int3
mov
pop
mov
arpl
stos
clc
sub
aas
fxtract
pop
pop
dec
xlat
add
test
dec
add
sahf
xor
sub
jmp
sbb
jl
and
or
stos
iret
outsb
jno
dec
or
stc
enter
cmp
xor
inc
stc
lret
mov
xchg
faddl
data16
mov
cmp
or
lods
leave
or
ds
decl
pop
andl
ret
jl
mov
xlat
sbb
mov
aas
into
jbe
daa
pop
cmp
jae
fmull
jl
xor
sbb
jl
jl
sub
scas
sub
and
push
cmp
scas
jo
sbb
mov
xchg
icebp
mov
shr
mov
sub
out
pushf
mov
jne
push
mov
push
dec
ret
imul
mov
push
add
push
jns
aam
popf
call
call
insb
sbb
pop
mov
jo
dec
push
je
push
loopne
adc
xor
xchg
fld
clc
or
mov
adc
rolb
in
movsb
movsl
pop
xchg
es
pushf
jae
jg
fisttps
sbb
insl
fiaddl
jb
add
mov
ret
je
cltd
das
push
cld
cmp
adc
mov
inc
cmpsl
inc
dec
mov
std
imul
pop
lahf
stc
jge
pushl
aam
mov
jge
xchg
stos
ds
push
test
js
jl
mov
push
gs
pop
inc
mov
dec
in
imul
mov
sbb
xor
pop
push
xchg
popa
test
popf
inc
int
scas
pop
xchg
jl
imulb
push
cmp
xchg
dec
or
out
repnz
ss
flds
cmp
mov
aad
pop
or
jl
pop
subb
xlat
call
mov
jo
jge
hlt
loop
cltd
cmp
in
mov
call
adc
inc
mov
ret
mov
jae
jmp
lcall
push
xchg
aad
repnz
lods
xor
daa
mov
pop
xor
cmp
test
mov
mov
jbe
pop
cmpsb
and
aas
jge
inc
test
jno
popf
mov
in
push
les
test
aam
dec
test
jae
popa
jp
mov
out
in
inc
cmc
js
xor
xor
xchg
mov
add
and
in
rcll
repnz
mov
cld
push
icebp
mov
mov
sbb
sub
cmp
mov
in
and
mov
sbb
out
out
shlb
sbb
lea
dec
jns
and
push
sub
inc
cli
or
int
test
rcl
jge
or
or
icebp
test
push
hlt
clc
popa
aas
add
jo
sbb
sub
arpl
in
test
sbbb
xor
inc
jnp
loopne
or
lcall
repnz
decb
fucom
dec
jg
or
mov
mov
fadd
mov
js
mov
ds
aam
pop
adc
js
jmp
adc
lock
push
in
xchg
dec
insb
fstl
lahf
inc
jl
popf
add
jo
add
jge
sub
cmp
rcrl
insb
aad
enter
das
shrb
imul
addr16
add
xor
jo
jl
ds
lods
lahf
rcr
insb
in
outsb
add
push
inc
test
add
push
mov
call
clc
mov
xchg
dec
cltd
bound
mov
lods
and
or
add
dec
scas
stc
lcall
mov
hlt
jg
xchg
fstp
mov
test
hlt
dec
inc
test
adc
gs
xor
mov
mov
pop
andl
xor
add
arpl
inc
fisubs
rolb
cmp
mov
adc
and
sbb
jmp
mov
cmc
jp
sbb
lahf
in
outsl
lods
int3
mov
jb
or
xchg
mov
xorl
outsb
sbb
leave
xor
push
repnz
mov
fidivrs
lahf
ds
scas
sbb
shld
daa
push
cmp
and
xchg
or
jle
mov
jmp
mov
cltd
sbb
cld
jbe
movb
jg
xchg
jae
cmp
lock
adc
decl
jp
mov
or
xchg
jb
aaa
pop
out
xor
scas
sub
pop
mov
and
ret
fisttps
push
shlb
imul
cmp
outsb
dec
aad
stc
jne
mov
nop
and
stos
adc
jbe
inc
mov
jmp
mov
daa
dec
jne
xchg
movsl
inc
cmp
scas
cmc
pusha
push
cmpl
xlat
rcll
xor
sti
inc
and
push
rorb
sbb
jp
add
leave
push
js
push
fsts
mul
call
mov
orl
leave
rep
popl
and
mov
sub
pop
insl
push
adc
or
pop
cmpsl
push
lret
sti
pop
or
push
or
and
jbe
popf
addr16
mov
dec
inc
cmp
cmpsl
cwtl
bound
push
sbb
push
es
inc
ljmp
pop
mov
cmc
pop
mov
push
and
out
fcomps
add
fisubrs
lods
add
mov
sub
fildll
dec
test
mull
inc
pop
cmpl
jns
imul
dec
data16
cmp
nop
loope
xor
inc
jnp
add
jl
fstpt
xor
lods
adc
pop
cwtl
and
xor
xchg
mov
push
cs
repz
leave
fsubl
dec
inc
inc
incl
push
repnz
outsb
notb
mov
vcvtsd2ss
push
or
adc
stos
icebp
popf
push
push
daa
je
mov
cmc
fdiv
mov
adcl
addr16
xor
mov
cmp
push
roll
out
in
sbb
mov
add
push
mov
enter
mov
movsl
outsl
dec
lock
add
fbld
cli
in
mov
xor
out
ds
add
jg
shrl
xlat
stos
movsb
int
push
dec
add
adc
lret
add
scas
lods
pop
mov
xor
test
test
lds
mov
mov
mov
or
cs
lret
mov
ret
call
lock
rcl
sub
imul
dec
fldt
filds
in
call
pop
neg
in
pop
push
add
push
mov
fs
pop
aad
movsb
cmp
imul
and
mov
loopne
xchg
subl
mov
sbb
js
sbb
xchg
roll
sbb
pushf
in
stos
mov
mov
fildl
aad
shl
ret
xchg
xchg
adc
lods
sbb
mov
loop
xchg
xchg
dec
loop
or
js
sub
popf
test
ljmp
jbe
fstpl
fdivl
stos
pushf
daa
aaa
xor
gs
pop
sbb
dec
cwtl
inc
hlt
test
xor
pushf
adc
mov
jne
jg
mov
mov
in
pushl
sub
test
mov
jns
pop
addr16
je
pop
jmp
adc
outsl
sbb
insb
sbb
dec
out
fadds
out
sbbl
out
insl
sti
roll
cmp
cmp
es
sbb
add
aam
dec
sub
lcall
aaa
pop
int3
fistl
shlb
pop
mov
scas
or
push
lcall
pop
mov
or
fisubrs
sbb
and
jp
inc
inc
jnp
jg
out
aad
adc
push
rol
inc
jmp
mov
cmpsb
rclb
divb
sub
insb
ja
test
jae
inc
in
loopne
rcrb
jecxz
aam
xor
xchg
sbb
lahf
dec
pop
lcall
rcrl
or
and
cmpsl
cmpsb
xor
popf
jmp
mov
repnz
movsl
xor
pop
lods
jo
or
mov
jo
jb
adc
les
imul
jecxz
pop
xlat
aaa
fxch
inc
mov
mov
add
in
inc
aas
sahf
cltd
push
sub
int3
fisubl
ljmp
in
ficoml
fwait
ret
lcall
jg,pt
xor
popf
lods
adc
fsubs
pop
stos
lahf
enter
jae
mov
cli
in
and
into
stc
mov
lds
xor
or
mov
testl
and
sbb
push
popa
cmpsb
sti
idiv
scas
lcall
cli
rcl
xor
std
inc
repnz
xchg
xchg
sbb
out
push
repnz
sbb
push
inc
cmp
in
bound
adc
jmp
fbstp
gs
std
inc
xchg
add
push
lods
jmp
jb
inc
aaa
int3
pop
jp
xchg
fiadds
mov
popa
jae
outsb
sub
addl
scas
ljmp
lds
lods
fmul
jge
insl
jb
insl
or
fildll
in
and
mov
int3
mov
mulb
mov
inc
push
fwait
test
xor
cmp
js
cmp
int3
push
lcall
in
jns
adc
and
repz
pusha
xchg
lds
jecxz
in
lcall
mov
or
lods
push
xchg
mov
inc
mov
jae
dec
jg
pop
cld
cmp
sbb
rcr
mov
out
cmp
aad
sub
sub
push
cmpsl
mov
mov
cmp
inc
push
sbb
shlb
out
dec
sbb
ja
ss
mov
inc
mov
sub
adc
dec
movsb
cmpsb
mov
inc
movsb
xchg
inc
orl
int
mov
insl
dec
cmc
inc
sbb
mov
popa
rcrl
subl
cmp
push
mov
xor
pop
subb
or
pushf
in
out
xor
dec
xchg
out
push
fsubrl
dec
movsb
pop
cmc
push
mov
pop
pop
loope
xchg
push
or
mov
xor
or
ja
in
loopne
inc
arpl
std
mov
sbb
jge
stc
ret
jae
xchg
int
xchg
movsl
sarb
movsb
int
bound
in
mov
stc
cmp
lcall
cmp
jle
or
int3
pop
divb
fldt
je
roll
pop
cltd
push
inc
out
inc
xchg
mov
or
rolb
aam
cmp
sbb
sar
push
jl
pop
cmp
and
push
jecxz
xor
push
sbbl
clc
jmp
imul
cld
aad
icebp
iret
shrb
andb
aas
or
cmp
cmp
pop
sarb
sti
dec
pop
adc
shll
pop
int
in
das
js
subb
jmp
xchg
mov
rcll
mov
aam
aad
enter
pop
stos
mov
out
lock
adc
adc
add
xlat
and
jecxz
cmpsb
es
mov
imul
inc
and
das
sub
arpl
add
cli
jmp
in
pushf
outsl
in
daa
mov
inc
pop
mov
iret
cmp
and
fndisi(8087
andl
xchg
mov
aam
mov
sub
stc
add
pop
int
pop
iret
xchg
ds
sar
cmpb
int3
addr16
pop
mov
pushf
and
xchg
inc
mov
cmpsb
sbb
stos
mov
rcr
in
adc
add
pop
sub
data16
test
sub
mov
mov
push
xchg
pop
cltd
add
and
mov
xchg
sub
scas
dec
xchg
inc
insb
push
or
xchg
insb
push
or
jo
or
mov
loope
mov
pop
cmpsb
call
sbb
mov
fisttpll
into
scas
fs
mov
repz
enter
shl
loope
xchg
std
cld
inc
add
or
mov
into
xchg
clc
xor
dec
fisubrl
mov
sti
sub
in
cwtl
mov
sub
ljmp
stos
into
aaa
jp
mov
fsubp
mov
xchg
lds
sub
aaa
lret
push
jmp
sbb
sub
insl
pop
dec
gs
dec
stos
sahf
cltd
pop
mov
fxtract
jb
daa
call
xor
cmpsb
shrl
fs
push
fbld
pop
or
xchg
sbb
test
adc
xlat
std
xchg
cmp
sbb
mov
outsl
sbb
roll
mov
adc
jmp
arpl
and
stc
popf
scas
and
xchg
cltd
pop
in
loope
inc
fldlg2
xchg
cmp
stos
inc
sbb
fistpll
xor
leave
cld
shll
add
pop
add
jae
lcall
sbb
fidivl
repz
jmp
jbe
mov
lods
sub
addb
sbb
xchg
idivb
push
ds
int3
addr16
pop
or
and
mov
xor
add
xor
ljmp
sub
xchg
xchg
and
or
cmp
xchg
xchg
nop
xchg
xchg
inc
mov
mov
loope
push
scas
xchg
add
jle
mov
push
not
push
pop
jns
jae
xchg
iret
cs
sub
push
test
out
lds
sbb
in
addr16
dec
popa
or
out
add
sub
inc
int3
push
dec
loopne
lock
nop
pushf
test
dec
push
xor
push
sahf
mov
imul
sbb
jae
jne
push
dec
clc
push
das
pop
cmp
nop
pop
sahf
cmpsl
sub
pop
cltd
adc
pop
test
xchg
fcom
test
shlb
add
adc
mov
add
push
movsl
pop
aas
jb
andb
ror
mov
movsl
loop
inc
or
scas
sbb
ds
sahf
sbb
jns
fs
andb
add
jnp
push
and
push
not
js
dec
mov
push
pop
leave
insb
cmp
adc
lret
es
sbb
dec
cmpsb
decl
stc
call
jl
dec
inc
mov
xchg
imul
sbb
push
or
jge
fbstp
inc
and
imul
push
cmp
dec
mov
jp
jo
movsl
imul
je
in
stos
gs
pop
xor
jne
xchg
or
out
scas
jbe
cmp
and
iret
loop
cmpsl
pop
mov
scas
adc
jbe
clc
inc
je
aaa
mov
inc
ficompl
bnd
adc
scas
or
pop
ljmp
push
stc
shll
or
cmc
aas
movsl
push
add
mov
je
stc
inc
mov
sub
push
bound
pop
xchg
push
dec
pusha
aaa
xchg
jmp
adc
je
and
and
xchg
outsl
lea
jne
inc
imul
jne
dec
rcl
shll
call
sti
scas
pop
push
sub
setbe
iret
into
aam
xor
sbb
inc
in
cmp
cli
dec
mov
sub
scas
call
mov
test
adc
dec
test
jecxz
std
pop
and
mov
inc
fidivl
push
pop
xor
into
aas
gs
adc
adc
mov
dec
lcall
lods
inc
xlat
cmp
inc
sub
mov
nop
ret
push
adc
jmp
cmpsb
int3
std
or
popa
mov
mov
test
mov
mov
mov
xlat
mov
mov
push
fbld
xchg
call
test
jae
es
jg
sub
sub
jnp
lahf
pop
pop
mov
pop
cmp
cmp
aaa
sub
cs
inc
xchg
ds
cmpb
push
out
icebp
cmp
pop
cmpsl
sub
mov
cs
movl
pusha
mov
xchg
fisttpll
mov
fcoml
jbe
ss
cld
jge
decl
pop
cltd
les
or
adc
test
stc
fidivs
dec
stos
sti
xchg
or
mov
push
pop
push
mov
fcmovbe
js
dec
adc
lods
jb
clc
in
sub
push
lods
jb
jl
aad
mov
fdivrs
push
sub
daa
inc
fcoml
jno
dec
dec
jp
dec
fmull
fdivrp
idivl
inc
and
sbb
mov
dec
mov
out
pushf
dec
inc
and
adc
adc
cmp
pop
adc
inc
inc
mov
jo
pushf
pop
in
lcall
push
push
xchg
aaa
push
mov
xchg
xchg
sub
dec
dec
lret
stos
sub
lods
mov
fnstenv
jnp
lea
ret
je
int3
cmp
mov
inc
sbb
jns
movsl
push
xor
test
sub
xchg
cmp
test
inc
ficomps
mov
inc
inc
mov
rcr
cltd
ret
sub
aam
xchg
xor
xor
aaa
sbbb
jbe
pusha
adc
loope
stos
lods
loope
scas
inc
cmpsl
dec
or
mov
sbb
add
bound
das
sahf
mov
notl
insl
test
iret
or
cmp
xchg
iret
jmp
adc
inc
int
lods
imull
mov
mov
cmp
cld
mov
sbb
mov
hlt
sub
mov
repnz
push
add
insl
xchg
lea
fwait
mov
mov
jl
adc
jne
das
fimull
lret
ja
subl
cmp
dec
xor
scas
mov
cmp
and
filds
test
mov
aas
add
and
loop
repz
lock
mov
or
mov
inc
fstps
rcrb
fadds
jmp
inc
inc
inc
jbe
jno
dec
push
divl
mov
out
push
inc
cwtl
cltd
pop
cltd
pop
fcom
cmp
nop
push
fs
or
incb
stc
adc
sub
jp
xchg
cltd
mov
inc
into
pop
clc
mov
mov
jno
xabort
pop
xchg
sbb
xor
push
addr16
sbb
jecxz
leave
sub
xlat
dec
xchg
add
push
ret
mov
inc
mov
shl
repz
mov
jno
movsl
inc
xchg
adc
lahf
mov
jg
mov
clc
xor
call
xor
mov
xlat
insb
inc
adc
dec
pop
pop
mov
inc
add
ljmp
cld
sub
jp
push
cwtl
mov
mov
nop
daa
int
sbb
fimuls
sub
subb
fcoms
jg
ret
pop
xchg
cli
xchg
les
rcl
fstl
addr16
arpl
add
xchg
adc
ss
mov
imul
adc
mov
sarb
imul
loope
jno
push
scas
and
movsb
into
add
mov
or
mov
pop
pop
mov
cli
outsb
sbb
inc
cmp
jne
xlat
sub
jecxz
andl
or
pushw
mov
outsl
xor
inc
cmp
or
push
out
cli
mov
das
icebp
call
push
loopne
sub
aaa
mov
scas
popf
das
push
test
cmpsl
xchg
rorb
mov
add
mov
sti
lds
fsubr
mov
stos
negb
add
test
lret
xor
xor
out
jns
mov
icebp
mov
pop
mov
pop
inc
or
fnstsw
dec
sub
in
test
cwtl
test
stc
lods
xorb
iret
int3
lcall
int
call
dec
std
lods
ret
in
push
add
jmp
ljmp
inc
in
sub
jne
pop
cmc
jae
xchg
cli
mov
mov
and
xor
push
xchg
push
scas
and
cs
jmp
jno
mov
in
repz
pop
bound
mov
inc
in
sub
pop
call
mov
aad
adc
add
mov
add
jle
mov
jl
rclb
ficomps
jae
pop
lea
lea
dec
sahf
push
lea
in
xchg
push
int3
lret
mov
fdiv
xchg
push
in
jae
adcl
and
sbb
ret
outsb
sbb
sbb
sahf
pop
dec
add
insl
sbb
jp
pop
cld
or
xor
out
cs
pop
mov
mov
lret
in
mov
out
dec
imul
out
nop
nop
mov
push
imull
je
fisubs
cli
arpl
cmp
je
xlat
stos
arpl
mov
and
and
stos
inc
add
lods
fistpl
add
sbb
xor
mov
push
xchg
xchg
loope
and
pop
dec
ret
in
out
rorb
cmpsl
popa
dec
fs
fdivr
cmp
mov
fldcw
add
mov
dec
aad
mov
insl
mov
out
fwait
enter
and
outsl
pop
adcb
lea
mov
sub
fistpll
imulb
push
push
out
mov
pop
mov
mov
or
nop
jmp
cmc
out
movaps
hlt
std
pop
xchg
sbb
aaa
pop
arpl
fistl
mov
jmp
cld
fcmovnu
dec
add
pop
adc
lods
negb
out
cmp
mov
jle
xchg
test
insl
pop
jbe
movsl
fisubs
xchg
sahf
movsl
inc
testb
push
push
pavgw
rorl
in
pop
shrb
dec
mov
jmp
mov
dec
sar
inc
fs
pop
push
xor
sahf
inc
cs
in
jno
lock
pop
dec
jle
jbe
popl
in
pushf
fisttps
jne
and
jno
jns
and
into
push
sub
fmuls
or
fnstenv
ficoml
stos
or
add
data16
xor
popf
in
push
cmp
mov
add
enter
test
lcall
or
jae
xchg
cmpsb
stos
faddl
mov
or
pop
ret
and
inc
mov
mov
lods
jne
cmp
icebp
xlat
pop
nop
jo
faddl
sbbb
insb
push
mov
ret
pushf
pop
in
jmp
push
dec
leave
jmp
jg
sbb
push
loopne
and
push
xchg
mov
mov
in
leave
dec
jae
out
adc
test
jle
xlat
icebp
mov
repnz
adc
mov
adc
in
pop
lock
test
lret
scas
jmp
or
xlat
jb
jbe
shrb
enter
cwtl
pop
mov
mov
pop
add
mov
dec
mov
hlt
pop
mov
shlb
jl
cmpsl
sbb
mov
fsubl
mov
mov
cmc
negb
xchg
dec
mov
jge
inc
out
push
mov
int
test
sti
movsb
js
add
ljmp
mov
or
popa
imul
insb
mov
cmp
lcall
aas
sub
jno
clc
jmp
push
arpl
jns
push
daa
pop
cwtl
jmp
test
mov
cld
mov
jl
leave
shl
cwtl
add
push
dec
sete
mov
ja
loopne
add
inc
mov
lret
push
inc
loopne
fldl
shrl
jecxz
jns
repnz
loop
mov
sub
icebp
pop
adc
jne
sbb
fistpll
jp
les
mov
add
test
mov
xor
mov
mov
cmp
xchg
add
iret
push
movsl
xor
xor
mov
jns
cmpsl
test
popa
mov
jecxz
nop
pop
incl
mov
pop
jge
cs
jne
jl
sbb
mov
or
popw
repnz
ja
and
pop
mov
test
aaa
cmp
int
movsb
pop
xor
cmp
push
js
subl
pop
cmp
push
and
jp
in
test
das
dec
js
sub
jmp
jb
aad
movsb
jmp
add
mov
inc
mov
fbld
jp
aad
sbb
sbb
mov
pop
and
loope
fmul
add
dec
scas
jno
and
pop
dec
sub
gs
xchg
cld
scas
push
mov
jl
dec
jne
sub
call
stos
mov
xchg
shrl
ljmp
dec
cmp
mov
or
cli
and
repz
aam
es
sbb
repnz
fcmovb
mov
iret
cmp
lret
dec
je
xor
leave
call
mov
jmp
arpl
inc
pop
test
out
adc
inc
imul
bound
shl
psubusb
jns,pt
xor
xchg
sbb
test
dec
jno
sub
or
xor
push
mov
adc
inc
call
or
nop
xchg
xchg
sarl
and
ret
sbb
mov
cltd
fnsave
mov
scas
int3
es
inc
inc
adc
sub
ljmp
fstps
push
ja
inc
ja
sub
fdivp
sbb
fildll
enter
inc
aaa
in
mov
loopne
jae
imul
roll
aam
mov
and
testb
xlat
stos
sbb
and
ss
push
imul
push
jg
inc
dec
mov
inc
push
jp
fiaddl
fcmovb
jg
xchg
nop
jbe
lods
fiadds
stos
dec
int
test
test
xchg
cmp
push
jno
push
out
movsb
dec
fs
sbb
or
jmp
add
andb
or
xchg
push
jmp
jmp
cmc
lds
gs
mov
arpl
sbb
mov
les
jge
stos
rep
fstpt
adc
imul
lds
jno
out
add
cli
test
cld
adc
pop
in
fidivrl
lods
adc
lods
pop
push
and
dec
in
cltd
aad
subb
insl
and
dec
lock
push
mov
lcall
jmp
lahf
or
rcll
stos
repz
rol
incb
mov
adc
dec
fsubr
sub
aam
gs
xchg
mov
xchg
mov
xchg
movsb
cmp
pop
int
dec
adc
xor
stc
mov
shrl
and
je
pop
add
lcall
dec
pop
and
mov
insb
pop
push
cmp
push
test
xchg
and
outsb
mov
sub
das
or
in
cli
testb
push
test
and
push
sub
andl
mov
inc
repnz
aaa
outsl
mov
cmp
es
pop
inc
mov
fsubrp
jle
test
pop
sub
or
test
lcall
scas
adc
lods
mov
sbb
ret
adc
insb
or
sbb
out
mov
xchg
jae
dec
shll
pop
mov
or
cmpsb
cwtl
loope
imul
jno
and
mov
mov
lahf
mov
adc
mov
sbb
sar
sbb
pushf
mov
and
mov
outsl
xchg
jae
lret
out
jp
add
insl
mov
mov
bound
cmp
lds
cmpsl
mov
ja
int
lcall
inc
insb
loop
hlt
loopne
cmpsl
push
insl
scas
imul
test
cld
adc
aad
movsb
lcall
dec
dec
ficoml
xchg
nop
sarl
in
cmp
pop
aam
hlt
bound
push
xorl
cs
repz
std
and
mull
mov
push
cli
jbe
mov
jmp
data16
jnp
mov
mov
movsl
iret
testb
sbb
inc
inc
pushf
movsl
or
mov
pop
data16
adc
inc
aad
rcl
lret
mov
or
vpermilps
push
in
adc
jns
xor
mov
int
pop
push
xchg
hlt
iret
ja
jge
pop
cmp
jne
stos
push
popa
xchg
and
adc
out
mov
xchg
xor
pop
xchg
add
cmp
mov
push
movsb
int3
cmp
iret
xor
mov
sbb
push
push
sbb
push
out
loopne
movsl
lods
inc
cmp
mov
sub
push
inc
ds
adc
fcmovnu
int
sbb
xor
mov
nop
pop
les
dec
fidivrs
jns
aaa
sub
in
dec
sarl
and
mov
pop
pop
xor
mov
divl
cltd
push
pop
sbb
aaa
dec
lret
sarl
mov
adc
ja
lret
and
push
mov
loop
out
outsl
arpl
leave
in
call
push
loop
adc
push
pop
movsl
fs
sahf
popa
nop
ss
and
pop
inc
aam
pop
sti
ja
jno
testb
sbb
andb
dec
xor
jmp
loope
xor
lret
sti
mov
pop
push
movsl
lock
mov
shrb
ret
pusha
mov
nop
shlb
aad
stos
nop
jne
xor
jno
xchg
subl
jb
cmpb
out
xor
and
rorb
not
xchg
jg
jg
mov
mov
or
stos
call
mov
push
fsubrl
adc
arpl
andl
stos
mov
rep
pop
cmp
sbb
enter
test
out
sbb
and
add
add
shll
mov
mov
js
fildl
push
scas
in
sbb
jl
adc
movsl
mov
out
cmp
and
imul
cmpsb
inc
mov
push
and
jecxz
push
not
jb
sbb
jge
pop
sub
mov
cmp
daa
das
push
and
jnp
push
cmpsl
stos
add
gs
xchg
pop
adc
push
mov
sbb
mov
fdivs
adc
pop
sbb
hlt
fs
popa
les
clc
flds
inc
das
push
xchg
pop
or
dec
dec
mov
sub
cltd
in
ss
lods
pusha
xor
les
inc
aas
cwtl
call
xchg
sti
pop
sbb
jne
bound
or
jo
lds
or
or
dec
icebp
imulb
in
pusha
in
inc
cwtl
inc
and
cmpsb
xchg
cs
add
push
jne
cmpsb
mov
mov
sbb
out
add
arpl
shlb
inc
xchg
pop
pushf
jmp
aam
bound
push
test
in
adc
repz
inc
jg
cwtl
pop
inc
mov
mov
les
pop
scas
inc
nop
lahf
inc
data16
in
mov
les
in
daa
xor
inc
pop
inc
cmp
testb
xchg
ret
mov
push
mov
fcmovb
idivl
in
imul
mov
mov
adc
add
call
sub
mov
xchg
pop
stc
push
pop
addr16
sub
sub
mov
popf
mov
mov
sbb
mov
sbb
stos
iret
data16
inc
dec
jo
sub
dec
adc
push
bound
xchg
out
adc
or
jnp
iret
divl
mov
dec
adc
data16
movb
mov
cli
xchg
shlb
test
fdivr
jne
add
add
jae
aaa
popf
loop
and
mov
lock
xchg
cmp
out
imull
cmp
cmp
pop
cmp
sbb
xchg
movsb
push
out
adc
and
loop
mov
xchg
inc
iret
mov
out
dec
aad
arpl
popa
and
xchg
or
cmp
adc
xchg
xchg
xor
jne
jno
aaa
mov
aad
mov
or
adc
orl
mov
pop
pop
mov
push
pop
jecxz
sti
pop
test
add
fldenv
mov
push
jge
xor
cwtl
aad
ss
mov
repz
movsb
mov
js
aam
pop
not
repnz
fsubs
icebp
inc
xor
shlb
jp
sti
push
mov
ss
add
push
mov
mov
js
xor
push
and
int3
data16
push
inc
push
push
push
mov
lds
push
cmp
mov
lret
mov
dec
xchg
sbb
stc
icebp
and
and
in
push
xor
faddp
rcrl
xchg
repnz
sbb
adc
out
in
enter
or
push
mov
adc
push
push
shrb
pop
iret
mov
mov
into
aad
pop
push
std
xchg
push
adc
cs
int3
fs
out
push
sbb
or
mov
int
jo
mov
jns
and
mov
cmpsl
sub
stc
cli
pop
in
fcmovu
mov
cltd
pop
js
andb
sub
inc
mov
aas
mov
xchg
pop
jo
cmp
lcall
cmp
pushf
adc
xor
pop
push
test
ljmp
mov
jge
jle
std
test
push
mov
lea
cmc
cli
push
sub
rcrb
and
das
adc
subb
xchg
ljmp
mov
inc
jno
std
mov
aas
pop
mov
and
insb
sbb
in
cld
lahf
fcoml
scas
push
jb
cmc
pop
mov
ds
adcb
or
icebp
pop
push
cli
sti
arpl
in
fiaddl
test
or
adc
movsl
push
dec
repnz
jnp
fildl
repz
ret
dec
lret
cmp
xchg
pop
subb
in
mov
adc
iret
mov
cmpl
adc
mov
arpl
pop
mov
add
pop
imul
dec
sqrtps
and
imul
outsl
inc
ljmp
repz
das
scas
fs
aam
repz
test
xor
jle
testb
sbb
in
pop
pop
or
or
popa
jl
adc
push
xor
dec
and
sub
ret
aas
cmpsb
aaa
fsubr
push
das
ljmp
push
fwait
or
mov
fwait
nop
lods
or
jns
andl
or
insb
mov
in
leave
push
mov
rorl
sub
aad
adc
in
push
insb
adc
testl
cwtl
cmp
adc
xchg
pushf
cs
test
jmp
mov
jb
add
and
lcall
out
add
pop
fs
jle
les
in
xor
fsubrl
pop
push
pop
push
jmp
ret
cmp
add
xchg
lock
adc
push
dec
lret
icebp
or
push
out
les
xadd
sbb
xchg
jnp
sbb
rcrl
mov
inc
sub
cmp
mov
push
clc
push
ftst
lea
mov
ja
jmp
leave
mov
fs
sub
shrb
mov
push
nop
mov
dec
inc
dec
inc
sbb
pusha
gs
jmp
out
pslld
dec
cmp
pusha
call
sbb
shll
jecxz
pop
sub
sub
fistps
je
push
mov
stos
loop
les
mov
push
add
sub
mov
cmp
jge
inc
add
mov
cmpsl
ja
push
arpl
ret
and
cmp
shlb
test
sub
orb
je
adc
pusha
mov
and
icebp
arpl
adc
or
out
cld
sbb
into
je
ljmp
push
incb
mov
test
inc
push
cwtl
ja
lea
insl
xchg
mov
pop
pop
and
xchg
push
pop
mov
dec
es
call
jo
dec
outsb
out
mov
lcall
xchg
inc
inc
sub
xchg
and
jle
and
cmp
cld
push
fadd
ja
xchg
loope
rorl
in
xchg
lahf
pop
std
ficoms
xchg
add
jle
dec
xchg
add
mov
loope
jmp
aaa
sub
ffree
daa
daa
stos
jns
mov
or
call
mov
cmp
jnp
dec
inc
xor
popf
push
call
mov
nop
or
jge
mov
addb
dec
arpl
lret
sbb
icebp
sub
sbb
pop
dec
jle
rorl
mov
jo
and
jg
ret
mov
mov
mov
ja
test
andps
into
sti
and
arpl
jl
enter
out
inc
dec
push
add
inc
movsb
cmpsl
shl
jae
and
mov
insb
ret
add
xchg
push
pushf
test
jno
push
pop
mov
inc
daa
xor
repnz
mov
into
orl
mov
sbbb
loope,pt
notl
add
dec
inc
mov
loope
push
dec
dec
sbb
add
jecxz
loop
leave
xchg
mov
mov
jno
add
in
ret
imul
sbb
add
push
out
cmp
out
mov
fdivp
dec
loopne
andb
lds
shrb
pop
popf
clc
xorb
fdivrp
or
cmp
mov
int3
cmp
movsb
lahf
push
xorb
jae
pop
jae
adc
sub
sbb
cli
repnz
lods
xlat
pop
fsub
fwait
mov
test
scas
jmp
or
dec
mov
dec
lea
out
jmp
into
pop
mov
std
aas
enter
icebp
or
inc
fisttpl
sub
sub
inc
pusha
push
shlb
cmpsl
inc
xchg
jb
inc
and
push
xor
adc
jbe
orps
stos
test
mov
dec
int3
leave
loopne
cmpsl
shlb
sbb
ret
out
sahf
mov
adc
dec
mov
mov
jne
sti
sbb
pop
mov
cmp
gs
je
pop
cltd
push
mov
out
pop
push
imul
fildll
repnz
bound
mov
jb
daa
and
lret
scas
mov
jp
addr16
dec
jne
jp
dec
add
xor
insl
push
enter
push
and
sbb
cmpsl
out
sub
lahf
call
cmp
pop
mov
push
movsl
test
insl
scas
add
jo
pop
sub
ljmp
insb
les
into
cmp
enter
pop
in
lods
imul
mov
pop
lds
cmp
rorb
sub
dec
bound
outsl
arpl
lds
sarb
and
xor
int
loop
iret
jno
xor
sbb
mov
hlt
js
sub
sbb
mov
ljmp
inc
xchg
and
cwtl
pop
sbbl
test
aas
repz
xchg
and
inc
jecxz
adc
and
fdiv
stos
pop
popl
inc
mov
aas
out
pop
mov
stc
inc
jmp
inc
cmpsl
shrb
bound
ffree
sub
in
loop
pusha
mov
ds
stc
or
daa
scas
lods
inc
popf
xchg
dec
xlat
cld
outsb
mov
out
loop
outsb
or
dec
addl
pop
aaa
jmp
incl
sub
or
and
jno
fiaddl
jo
mov
orb
cwtl
fidivl
cmpsl
testl
push
xchg
adc
js
mov
mov
pushf
lcall
pop
cld
mov
fstps
rorb
cmpsl
cmpsb
adc
cmp
adc
jae
sub
dec
push
mov
mov
mov
cmp
pusha
test
jbe
adc
push
stos
or
out
jg
mov
xchg
lock
das
clc
in
ljmp
daa
ret
push
sarl
mov
add
push
xor
out
push
sbb
repz
adc
push
pop
arpl
test
leave
mov
jp
enter
xchg
push
sbb
xchg
cmpsl
jne
enter
mov
adc
in
add
fnstenv
xchg
xchg
iret
jbe
and
xor
dec
inc
push
jle
cmp
push
push
mov
xor
inc
iret
out
add
leave
mov
mov
and
icebp
popa
push
mov
push
cmpsb
sar
movsl
jns
shl
cmc
pop
xor
pusha
mov
out
icebp
xchg
das
jle
or
adc
mov
xchg
leave
pop
xchg
int
sti
push
aaa
fwait
arpl
add
int
mov
mov
sub
lahf
xor
inc
aaa
jmp
pushf
push
or
dec
sub
pop
or
js
sub
rcll
lret
xor
inc
mov
push
ret
lods
add
lea
hlt
cmc
inc
mov
lods
pop
addr16
stos
icebp
adc
pop
sub
sahf
xchg
mov
js
push
je
mov
fwait
adc
cmpsb
add
cli
lods
cmc
push
je
in
outsl
mov
sahf
xchg
jle
fldcw
test
jle
leave
and
jmp
test
fiaddl
rclb
sub
insl
test
lahf
add
add
lds
insb
jmp
mov
fiaddl
clc
pusha
lret
pop
jb
fistpll
add
mov
fsubl
in
adc
mov
push
shl
scas
push
in
leave
stos
or
jns
fstpt
xchg
ds
jg
ds
pop
push
xor
adc
inc
insb
cltd
dec
mov
mov
outsb
jmp
add
enter
pop
je
ret
je
loop
mov
repnz
das
mov
sub
mov
stos
push
fcomps
xor
and
fidivl
mov
das
jmp
mov
and
jno
into
mov
jl
add
pop
out
dec
jb
pushf
jo
push
bound
jo
stc
cltd
and
mov
nop
or
movsb
push
daa
add
sub
mov
mov
jmp
push
mov
jecxz
arpl
mov
shl
and
rclb
testb
jb
sub
aaa
leave
and
pop
mov
mov
hlt
mov
nop
aas
das
jmp
je
mov
sub
mov
cwtl
sub
sub
jnp
out
fnstcw
xchg
and
or
dec
sbb
xor
push
and
inc
or
xchg
push
scas
and
hlt
xchg
sbb
ret
mov
cmpsb
xchg
jae
inc
adc
out
and
das
ret
xchg
jbe
push
mov
pop
cmp
sarl
cs
dec
mov
sub
ljmp
fidivrl
mov
push
jle
xorl
mov
sub
jmp
xchg
shrl
dec
shlb
loop
fs
sbb
add
sbb
mov
inc
stos
lret
pop
pop
jbe
inc
cmp
aas
add
dec
pop
int
push
jmp
repz
adc
out
aam
ja
mov
or
pushw
loopne
jp
xchg
lret
sbb
pop
mov
mov
mov
orl
fwait
mov
fdivp
and
imul
mov
divb
push
mov
mov
lods
fiaddl
popa
and
pushf
andl
push
push
scas
mov
pop
add
mov
imul
xor
jp
rcll
xchg
adc
lds
rorl
or
inc
xor
jb
push
and
jge
push
dec
dec
popf
or
stos
add
sub
loop
movsb
cmp
dec
push
sub
mov
adcl
pop
push
les
movsb
cmp
lock
insl
or
and
xchg
cltd
mov
das
repnz
repz
and
and
adc
hlt
xchg
cmpsl
push
mov
sbb
inc
push
mov
mov
pushf
adc
sub
cmp
xor
sbb
dec
push
rolb
add
and
mov
add
add
clc
pop
cmpsb
push
cld
daa
or
test
ret
adc
jmp
add
pusha
sub
das
gs
cmp
mov
push
pop
in
xor
cmp
setns
xchg
sti
dec
push
push
inc
lret
fidivl
stos
cmpsb
inc
in
pop
lds
mov
lds
fimull
je
stc
ret
mov
sub
mov
inc
push
cmp
or
mov
mov
packuswb
lds
lahf
call
fcomps
ja
int3
jns
stos
hlt
xchg
ljmp
enter
dec
arpl
xor
adc
lahf
pusha
inc
xchg
aaa
ljmp
mov
aam
fildll
inc
jae
nop
adc
mov
mov
cwtl
jns
in
and
jmp
cmpsl
mov
xchg
mov
icebp
pop
pop
ret
cmc
ds
mov
xchg
movb
fcmovbe
test
out
push
adc
roll
adc
cmp
mov
hlt
mul
pop
mov
test
hlt
sub
or
arpl
push
dec
jbe
je
push
pop
mov
push
jp
stc
inc
or
xchg
addr16
push
inc
push
xor
mov
push
mov
in
lret
jp
imul
mov
xchg
jno
mov
pop
xchg
std
mov
xchg
mov
add
mov
sbb
and
aam
inc
and
inc
in
xchg
inc
sub
js
cmpb
jnp
add
lds
push
leave
dec
mov
ja
jmp
mov
outsl
daa
inc
mov
mov
icebp
pop
inc
in
fidivrl
pop
popa
fistl
into
push
jne
data16
bound
sbb
test
sbb
std
mov
ds
subl
repz
add
cld
movsl
jl
inc
add
jge
sbb
mulb
call
and
cmp
jne
mov
inc
pop
pushf
cmc
xchg
divl
sbb
test
movsl
jecxz
mov
stos
shl
pop
sar
or
nop
jo
jmp
fs
and
daa
add
fildl
or
jmp
out
jnp
push
dec
mov
repz
dec
ficomps
repz
jbe
stos
std
shr
movsl
nop
push
xchg
shlb
dec
pop
mov
sbb
sub
mov
hlt
xchg
lahf
xor
cli
push
loop
lods
push
pop
adc
and
ss
test
bound
and
xor
stc
aam
pop
daa
ss
call
mov
cmpsl
jle
or
cmpsb
andl
xor
aaa
rcll
out
std
hlt
sbb
fistpl
mov
add
add
dec
imul
push
pop
add
push
fstp
aaa
arpl
sub
stos
jle
out
push
lret
loop
jge
sub
or
pop
imul
or
in
jg
int
dec
sahf
xor
testb
inc
arpl
cmpsl
push
push
mov
pop
mov
imul
jmp
jecxz
fidivl
lcall
push
pop
cmp
and
in
xchg
in
ret
in
insl
xor
aad
xchg
pop
inc
jb
dec
fcmovbe
pop
jno
out
fs
xor
inc
stos
fimuls
push
and
dec
adc
insb
sub
jne
js
add
test
loope
mov
mov
or
frstor
lods
imul
xor
mov
or
pop
cmpsb
fdivl
mov
jle
test
sub
dec
sbbb
push
adc
icebp
jmp
pop
insb
insb
out
pop
cmpsb
call
addr16
pop
adc
adc
pop
movsb
orl
and
les
push
push
in
insl
sti
sahf
xchg
fwait
mov
insb
adc
js
xor
shrb
mov
loope
cwtl
jbe
insb
xchg
mov
push
xchg
std
sbbb
sbb
xchg
repz
or
and
pop
xor
and
add
cmp
iret
call
or
push
mov
lods
enter
call
rolb
jecxz
and
cltd
rcll
ja
ja
js
lock
lcall
jmp
jae
inc
jb
dec
push
mov
xor
sub
enter
subl
insb
cs
outsl
and
mov
dec
mov
pusha
jnp
xchg
jbe
je
fcom
mov
fisubrs
mov
push
mov
fdivs
dec
push
push
dec
mov
mov
in
aas
pop
imull
test
negl
cmp
rorl
xchg
xor
leave
jmp
imul
push
movsb
jo
pop
loop
roll
iret
jnp
and
inc
jmp
sarb
xor
mov
lods
orl
push
mov
adc
add
lock
pop
push
inc
cmp
clc
fs
pop
mov
lret
cld
or
lock
fists
push
das
adc
mov
push
push
inc
pop
inc
dec
mov
sub
mov
pop
aad
iret
dec
out
mov
scas
mov
std
inc
stos
loope
xorb
aam
dec
dec
xchg
inc
push
xchg
and
inc
mov
xor
jecxz
fdivrl
sub
pop
bound
test
add
sub
or
add
add
xchg
sub
stc
or
les
iret
pusha
idivl
out
push
fsubrl
es
popa
sahf
push
inc
aad
inc
dec
push
aas
mov
stos
out
mov
insl
mov
testb
fmull
dec
lret
sarb
push
add
loopne
sbb
sbb
pushl
arpl
push
movsl
push
out
fists
xchg
sti
mov
mov
shlb
rcl
add
add
mov
mov
mov
int3
movl
mov
cmp
dec
iret
jp
cld
loope
jp
fisubs
push
stc
repnz
enter
inc
daa
test
pop
jmp
lock
mov
mov
insl
je
dec
cmp
xchg
int3
pop
aad
shrd
pop
std
fwait
pop
xchg
xchg
adc
in
stos
nop
lcall
adc
mov
fdivr
jg
and
xor
cltd
sti
xor
push
xchg
jo
mov
movsb
das
idiv
and
add
lds
sahf
mov
gs
pop
in
aad
lds
cmp
lds
lods
ret
cmc
cwtl
cmp
mov
ljmp
or
hlt
push
mov
xchg
enter
es
push
cmp
test
in
adc
lcall
stos
psubusw
pushf
movsl
dec
push
cwtl
decl
xchg
leave
std
inc
mov
lahf
push
push
mov
lods
ret
scas
adc
dec
lds
jbe
cltd
inc
dec
bound
xorl
fwait
sbb
xchg
dec
rcrl
sub
add
shrl
add
mov
out
jb
ds
xor
cmp
adc
stos
stos
test
popf
in
sub
rol
icebp
and
mov
dec
mov
ss
jne
xchg
mov
in
hlt
mov
les
lds
cmp
shr
cli
loopne
push
mov
push
adc
jmp
sub
ficoml
xchg
jbe
lahf
std
clc
and
andl
push
loop
lds
pop
dec
pop
out
cmpw
xchg
testb
xor
add
xor
mov
push
xchg
pushf
xor
pop
movsl
xor
mov
add
and
jg
repnz
das
push
sbb
cmp
cmp
ds
and
cwtl
cmp
add
or
loope
inc
ror
xchg
mov
dec
sub
mov
roll
cltd
in
pusha
shlb
jns
sti
rolb
lock
dec
cltd
jge
mul
fsub
pop
mov
xor
mov
xchg
lcall
lret
push
push
popf
pop
scas
add
popf
jg
xor
pop
idiv
add
mov
jbe
sbb
daa
js
aad
lahf
out
and
lods
mov
xor
aam
or
sbb
mov
cmp
mov
dec
and
dec
sub
xchg
js
sub
jecxz
jnp
sub
jle
mov
pop
and
mov
outsb
jg
hlt
push
sub
xor
dec
outsb
les
inc
pop
xlat
add
rcrb
out
lea
mov
sarb
mov
xor
cmp
adc
js
inc
xor
lods
adc
add
in
pop
movsb
sub
cmovl
addl
repz
add
dec
fdivp
out
pop
jp
dec
int3
fwait
push
mov
push
add
dec
cmp
inc
lods
lock
inc
push
mov
int
xor
dec
sbb
adc
mov
std
or
xchg
insl
cmp
insb
cmp
mov
fisubrl
sbb
popa
xchg
lret
push
paddsw
outsb
call
xor
cld
movsb
add
fistl
pop
jmp
leave
lea
arpl
dec
add
test
push
jge
fs
mov
loop
mov
leave
repnz
dec
rclb
jns
fiadds
decb
inc
or
outsl
xchg
ret
mov
lock
cs
ret
xchg
and
dec
pop
fstl
cmp
pushf
lock
ficompl
sbb
pop
xchg
pop
push
ret
imul
mov
cmp
mov
or
push
dec
pop
xor
addr16
inc
andl
loopne
shrb
xchg
jge
popf
jle
dec
xchg
mov
mov
aad
ss
jae
add
in
je
mov
dec
or
xchg
push
scas
inc
dec
dec
push
adc
push
xchg
cmpsl
pop
lods
fwait
adc
pop
enter
xchg
mov
xchg
or
mov
lahf
arpl
rcr
test
fistpll
or
movsl
aam
push
out
mov
imul
fsubrl
xor
lahf
out
pop
push
repnz
inc
and
jle
gs
dec
mov
lret
repnz
or
andb
leave
or
push
das
dec
jmp
jmp
neg
mov
shr
sbb
or
push
aad
inc
outsl
imul
inc
jl
clc
ffree
xchg
jo
flds
xchg
xchg
or
mov
aam
lods
imul
mov
push
dec
lcall
ljmp
push
flds
xchg
xor
mov
icebp
scas
in
test
jns
ret
and
jp
adc
iret
adc
mov
subb
mov
iret
adcb
xchg
and
and
push
mov
mov
int
lea
mov
mov
les
mov
dec
or
mov
sbb
lods
dec
cwtl
out
jmp
adc
xor
iret
imul
aam
fs
xlat
xchg
sbb
jge
div
and
loope
add
mov
icebp
aaa
test
outsb
daa
cmp
mov
xchg
int3
inc
hlt
int3
andb
cmp
out
mov
sub
mov
adcb
or
push
inc
jae
cmp
xchg
inc
in
mov
xor
jnp
cmp
addr16
fnstsw
fsubrl
or
mov
inc
adc
sbb
xor
in
jb
sub
xchg
add
lret
xchg
imul
fnstcw
jl,pn
mov
lock
mov
dec
into
xlat
sbb
jmp
movl
imul
scas
xchg
push
mov
daa
daa
add
pop
pop
in
xor
or
mov
push
mov
xchg
push
je
ss
outsl
mov
addr16
iret
mov
movsl
mov
cmpsb
xchg
movsl
sub
pushl
push
mov
sub
adc
je
jp
push
mov
daa
jmp
sub
and
pop
push
int
mov
addb
iret
int
mov
test
pusha
or
mov
movsl
outsb
lods
or
sub
xor
les
add
lock
int
jae,pn
cs
sub
mov
adc
or
pop
inc
mov
cmpsb
or
fisttps
into
daa
test
xchg
or
jns
sbb
mov
lods
xchg
inc
xor
fwait
nop
dec
lret
sbb
sbb
lea
dec
or
and
stos
sarb
ficoms
sub
es
adc
into
lahf
fisubl
add
test
or
adc
jne
adc
loope
lock
clc
jmp
nop
call
pop
addb
lock
imul
cmp
out
mov
sub
jg
jp
adc
sbb
mov
or
xchg
pop
insb
dec
lret
loope
ret
cld
rclb
and
fldenv
outsb
dec
jg
nop
mov
imulb
in
and
leave
push
jno
popa
sbb
in
aam
pop
lock
lcall
push
jno
or
test
inc
sub
stos
pusha
jl
adc
add
cmp
mov
test
adcb
adc
stc
sub
jmp
repnz
mov
test
icebp
mov
addl
xor
and
fistpll
cmp
mov
or
inc
into
pop
sub
mov
add
jno
test
fnsave
or
int
pop
mov
sbb
loop
shrl
sub
add
xor
xchg
mov
xor
add
jl
jg
mov
push
jp
xchg
lods
std
jno
sbb
jl
xchg
xor
and
out
and
xor
mov
shr
push
icebp
xor
das
adc
in
shr
jae
cmp
test
pop
lcall
insb
or
sarl
jl
fstpt
shrl
movsb
repnz
mov
mov
add
add
and
nop
xor
sub
mov
jb
les
mov
mov
cmpsl
ret
ljmp
xchg
adc
in
fnstcw
jnp
sub
ds
push
pop
jbe
movsb
pop
das
inc
mov
ror
xor
outsb
xchg
jb
arpl
dec
and
add
fisttpll
lcall
out
pop
lret
scas
mov
mov
adc
nop
mov
clc
pop
mov
cs
add
rorl
add
jbe
insl
pop
push
out
mov
push
ret
pop
pop
bound
scas
pop
adc
ret
cmc
js
jmp
adc
repz
push
push
mov
fdivr
addr16
stos
mov
push
sub
repnz
push
dec
pop
cmpsl
xchg
addr16
push
inc
push
ret
aam
push
aam
add
in
std
pop
out
xchg
dec
jecxz
fimull
jmp
mov
cmp
jl
xor
pop
mov
mov
sbb
pop
jg
sarb
mov
xchg
add
cmp
insb
loopne
mov
lret
icebp
inc
std
sbb
insl
cltd
test
mov
ds
popf
sub
cmp
mov
mov
imul
adc
aad
aas
cmp
out
shrb
aam
sarb
test
jecxz
xchg
rol
dec
gs
fsubs
jno
adc
les
fwait
sbb
jno
out
jmp
arpl
rcrl
out
adc
inc
push
push
push
and
push
and
xor
lret
int3
sbbb
ret
mull
add
repz
xor
cli
sub
fisubl
dec
arpl
mov
pusha
lods
cmp
cmpsb
jmp
adc
je
sbb
stos
mov
xor
lret
sbb
aam
nop
dec
and
inc
stos
pushf
xchg
lcall
pop
pusha
pop
fcomip
mov
dec
cwtl
daa
rolb
cmp
xchg
faddl
stc
lahf
xor
aas
push
fisubs
stos
sbb
push
ss
adc
iret
stos
inc
sub
cmp
adc
ja
pop
in
leave
jge
push
xchg
cmp
stos
lcall
mov
or
aas
cmp
nop
jecxz
ror
cmpsl
sub
push
lods
sub
test
into
mov
inc
jo
in
lcall
mov
cwtl
and
push
add
mov
xchg
ja
es
outsl
jg
outsl
pop
or
andb
pop
jns
adc
rclb
in
sub
es
jl
or
in
imul
mov
push
push
je
icebp
mov
gs
fs
gs
jl
mov
aam
dec
mov
push
mov
sahf
or
jmp
jne
mov
or
or
loope
sbb
adc
inc
ret
ljmp
mov
cmp
fsubrs
or
mov
int3
cmpl
mov
fsubl
leave
cmp
loop
ret
dec
pop
mov
sarb
mov
cmp
movsl
mov
outsb
pop
fmuls
insl
mov
test
out
push
xchg
sub
enter
add
mov
push
xchg
add
aas
and
sub
xchg
jb
or
sbb
jns
jle
mov
mov
mov
mov
and
in
and
nop
push
rol
dec
outsl
mov
test
test
mov
pop
sub
ret
mov
lds
and
mov
scas
sub
pop
and
inc
adc
pop
nopl
jmp
add
mov
stos
jge
mov
out
int
adc
or
sbb
pop
or
fcoms
pop
xlat
and
sbb
lea
imul
pop
xchg
mov
inc
js
mov
cmc
aad
ss
shlb
sti
scas
adc
and
ja
popf
fwait
lret
addl
cmp
ja
sbb
imul
ja
sub
push
cmp
adc
js
movsb
je
scas
push
cmpsl
fdivs
mov
pop
inc
out
mov
insl
gs
sahf
fldt
cmp
fdiv
or
xchg
loope
das
in
arpl
stos
subb
mov
test
mov
loop
in
and
jae
pop
xchg
add
or
loopne
fbstp
mov
fwait
xor
push
pop
pop
test
shll
xchg
pop
fidivrs
adc
mov
dec
pushf
xchg
mov
sbb
iret
lahf
cs
aas
cld
add
test
pop
xchg
mov
inc
fwait
mov
popa
push
and
dec
mov
shlb
ljmp
mov
decl
pop
add
out
mov
mov
mov
xchg
mov
add
push
into
jle
xchg
cmc
cmp
xor
lahf
push
hlt
xchg
addb
add
iret
push
dec
enter
xorb
dec
adc
ds
push
shll
jp
push
push
insb
cld
cld
aaa
jmp
aaa
dec
popf
jmp
scas
adc
xchg
in
and
mov
fstpl
test
call
js
rcrb
in
repz
sbb
adc
or
fstps
push
int3
push
dec
outsl
insb
jnp
hlt
ret
add
mov
jno
sbb
enter
call
or
mov
or
jo
int3
and
fcoms
fcoms
mov
and
inc
add
insb
jnp
int3
sub
out
and
pop
adc
lea
in
adc
imul
stc
mov
in
add
call
shll
xchg
xchg
mov
push
andb
push
ja
add
repz
int3
hlt
nop
add
mov
out
cmp
xchg
cli
adc
add
repz
inc
subb
mov
std
fstpt
icebp
push
mov
add
jo
cmp
int3
sub
and
mov
jnp
cli
fistpl
cmp
insb
mov
mov
pop
or
cmp
hlt
lods
je
mov
popa
dec
or
lea
pop
stos
scas
repnz
xchg
stc
es
xchg
lods
and
fcmovne
xor
lods
jg
cmc
mov
imul
jne
lret
popa
pop
cmp
cmp
icebp
lds
cmp
sbb
inc
xor
and
aam
pop
jno
mov
jnp
push
lods
pop
xor
pop
imul
int3
dec
ret
mov
jo
out
repz
test
dec
adcl
dec
push
aas
cs
addr16
idivl
mov
or
aas
mov
lock
push
rcr
fwait
or
and
xorl
push
fsubrp
int3
repnz
sar
enter
add
lds
dec
leave
stos
inc
pusha
jnp
into
dec
cs
iret
popa
jmp
mov
xor
sub
rcll
sub
adc
aad
js
out
jbe
cmpl
adc
push
outsl
sub
testl
testl
cmp
test
lea
lret
ds
sbb
iret
push
add
add
mov
ja
addl
not
cmp
xor
imul
dec
cltd
mov
movsb
push
repnz
fldenv
push
movsb
add
mov
or
sub
fst
loopne
cwtl
test
sbb
pop
push
arpl
push
lea
add
mov
inc
out
mov
inc
mov
xor
ret
pop
dec
mov
pushf
sub
shl
mov
sarb
jne
xor
cmpsb
and
jne
mov
inc
sbb
sbb
pop
jno
repz
push
add
insl
dec
hlt
out
fstl
cmp
sub
fstps
pop
add
fisttpl
into
stc
mov
ret
imul
xchg
mov
idivl
sti
dec
inc
lods
cmpsb
pop
xor
fsubrs
mov
call
push
jno
mov
sub
add
jl
lods
mov
and
sbb
sbb
aaa
jg,pn
jb
push
cld
push
xor
sub
add
loope
mov
cli
fsubl
or
lods
in
movsb
xchg
pop
push
pop
and
imul
loope
add
dec
les
mov
sbb
pop
into
lds
out
sub
mov
xchg
mov
sbb
jge
addr16
and
mov
inc
stos
and
sub
xor
inc
call
loopne
pop
push
out
jno
cmp
or
lock
lds
lods
aad
es
lahf
in
sarb
arpl
pushf
sahf
push
mov
loop
sub
loop
lea
leave
stc
repz
imul
insb
pop
cmpsb
push
mov
pop
pop
sbb
inc
mov
inc
fwait
int
adc
cmp
mov
mov
shl
lcall
in
jge
mov
cmp
mov
aas
sub
movsl
sub
dec
leave
hlt
xchg
stos
bound
xor
cmp
xor
stos
inc
push
sbb
mov
ret
mov
cltd
adc
aad
sarl
stc
dec
repnz
sub
jmp
fdivs
arpl
xchg
outsl
pop
sahf
dec
cmp
push
jmp
sbb
and
jo
mov
xchg
and
fistps
test
mov
pop
pop
dec
enter
lods
std
sub
adc
movd
xchg
insb
insb
dec
add
or
aad
dec
xchg
sub
cmp
xor
clc
scas
pop
adc
or
ds
negb
cli
loope
add
sub
adc
not
decb
in
add
stos
sbb
int
mov
mov
insb
aaa
dec
out
inc
stos
or
test
or
loop
and
divl
fistpll
cwtl
sarb
mov
mov
stc
xchg
inc
stos
andl
jmp
mov
jmp
mov
jne
test
jle
dec
test
lds
push
add
clc
push
jmp
testb
inc
xor
xor
or
pop
stos
out
loopne
scas
sub
fisttpl
push
dec
pop
cmp
mov
lods
sub
call
leave
cli
movsb
and
push
jg
jle
dec
out
cli
std
scas
mov
loope
or
call
sti
jmp
jge
push
or
xchg
andb
xchg
sub
push
out
dec
pop
js
mov
add
outsb
pop
dec
push
mov
or
lock
push
out
loop
cmc
sti
out
inc
adcl
inc
subl
out
xchg
cmc
repz
out
rclb
cmp
mov
mov
cwtl
mov
push
out
sub
outsl
sub
aad
inc
sbb
sub
add
sub
hlt
jno
lods
fildll
lcall
sub
test
idiv
into
mov
add
sub
je
push
or
ja
mov
adc
fsts
loop
rolb
inc
mov
push
cli
cmp
js
adc
mov
sti
sarb
iret
xchg
push
jg
xchg
ja
inc
ja
in
fdivl
add
adc
imull
pop
movsl
adc
iret
push
fisttpll
sbb
mov
ret
fiadds
push
xchg
ljmp
stc
dec
das
pop
inc
jne
add
inc
nop
fwait
xchg
mov
int
stc
mov
mov
rorb
mov
adc
stc
adc
add
xchg
dec
jl
mov
imul
add
jge
or
sbb
cmpsb
sbb
test
mov
imul
xchg
cmp
sbb
push
icebp
mov
add
imul
and
clc
add
fstps
hlt
xchg
adc
stc
jmp
test
jg
into
fnstsw
dec
cmp
stos
daa
cmp
cld
mov
ret
aad
loop
loope
lret
mov
pushf
je
fimull
push
mov
inc
add
aad
leave
mov
jne
loopne
jb
inc
inc
leave
or
ffree
pop
data16
loop
clc
or
daa
dec
aam
test
std
jecxz
dec
rcll
push
mov
add
mov
leave
push
mov
lret
xor
sub
imul
lret
std
in
pop
jne
mov
push
lods
bound
sub
repnz
imul
enter
and
outsl
inc
dec
test
lds
pop
mov
enter
test
xchg
xchg
push
and
shl
inc
mov
push
movsb
ss
adc
call
lea
pusha
movsl
pop
cltd
fwait
dec
loope
xchg
mov
js
je
cwtl
call
out
jl
inc
shrl
xchg
mov
and
cmp
mov
xchg
les
mov
pop
sub
fistpll
faddl
mov
adc
sahf
cmp
sub
xlat
outsl
cmpsl
sbb
inc
andl
iret
jns
ret
pop
ret
jmp
jp
aad
mov
int
push
push
std
mov
mov
cmp
sahf
std
cwtl
into
cmp
and
push
push
jno
cmpsl
mov
fimull
lahf
loopne
lret
out
sahf
mov
lret
repz
dec
pusha
imul
cmp
ds
enter
dec
scas
cmp
cld
inc
lahf
rorb
mov
jae
dec
mov
mov
andl
pop
test
push
mov
mov
gs
add
scas
in
inc
mov
dec
xchg
or
pop
popa
stos
xchg
jo
jp
xor
mov
fcmovnu
in
std
push
rolb
adc
dec
insb
stos
bound
push
add
nop
mov
cmp
xor
movsl
subb
test
mov
cmc
xchg
xchg
daa
shrl
iret
xlat
mov
inc
push
cmpsb
mov
xchg
lds
roll
aad
inc
jae
out
dec
xchg
jg
adc
pop
fwait
in
stos
out
ja
inc
pushf
fs
xor
cmpsb
jle
xchg
imul
stos
stos
mov
cmp
jle
push
push
add
adc
imul
mulb
sub
or
sbb
popa
inc
fstp
in
pop
test
mov
mov
mov
cmp
xor
adc
fabs
mov
mov
pop
xchg
inc
loope
xchg
jecxz
inc
mov
xor
sbb
test
test
jae
stc
outsb
mov
lds
sbb
pop
jge
ror
sub
bnd
mov
setp
jp
mov
cs
cmp
std
inc
aam
add
cwtl
subb
scas
ret
ss
shl
bound
in
lods
dec
inc
mov
mov
mov
jmp
cmpsl
xor
lods
jne
cmp
inc
ret
leave
pop
add
push
dec
mov
add
xor
aad
outsb
inc
popa
ds
fistps
or
or
and
push
mov
bound
ret
adc
xor
xor
xorl
push
xchg
xorl
hlt
dec
aad
fistl
dec
or
std
add
in
cmp
xchg
xor
sub
and
mov
mov
sbb
cmp
insb
mov
sub
inc
icebp
pop
and
rorl
mov
dec
mov
jnp
pop
cmp
test
in
inc
inc
repz
dec
mov
inc
sub
sbb
int3
cmpl
aas
out
outsb
mov
into
ljmp
and
pusha
and
dec
out
xchg
subb
ja
jae
dec
adc
testl
mov
cmp
push
add
adc
or
stc
scas
andb
test
xchg
jb
inc
push
add
cmp
xor
mov
sbb
adc
and
ss
sub
pusha
insb
aam
push
cltd
insb
cmpsl
mov
pop
aad
or
fstl
adc
sbb
sub
std
btr
dec
cmpsb
sub
cmp
inc
xchg
dec
xchg
xchg
and
loopne
rorl
push
sub
xchg
pop
sbbb
and
andl
inc
in
mov
mov
inc
int
dec
into
pop
push
test
je
and
or
add
push
out
shr
jnp
dec
add
js
push
and
cmp
repnz
mov
jmp
cmpsl
fcmovnb
xor
out
inc
mov
shrb
in
sbbl
xchg
pop
mov
adc
sbb
fwait
out
inc
pushf
daa
xor
push
data16
jge
aad
imul
orl
xchg
mov
das
test
imul
adc
popa
pop
pushf
pop
or
sbb
test
mov
dec
movsb
lret
mov
mov
scas
xor
stos
shr
fcomip
inc
sub
fs
pop
mov
loopne
std
jp
out
jle
aam
mov
js
jb
ficompl
mov
lods
je
inc
adc
adc
mov
pushf
or
and
popa
adc
push
sarl
dec
push
pop
lcall
add
mov
or
daa
mov
mov
neg
or
jno
mov
jnp
scas
cmpsl
mov
cmc
mov
xchg
popa
pushf
xchg
or
cmp
pop
inc
sbb
addr16
sbb
mov
cmpsb
ficoml
pop
mov
push
cltd
lods
sub
fprem
mov
push
sbb
xor
imul
imul
out
adc
jle
cmpsl
cmpsl
dec
xor
or
and
mov
inc
loopne
jl
fldlg2
or
cmp
and
insl
aam
xchg
popa
rcr
inc
mov
adc
test
pop
and
sbb
aad
repnz
jecxz
cmp
pop
lods
jmp
cs
dec
add
xor
out
cwtl
jecxz
mov
mov
cmp
adc
push
mov
adc
pop
dec
hlt
repz
fimuls
std
pop
vunpcklps
into
arpl
sarl
repnz
or
and
mov
movsl
jb
in
sbb
int
aas
mov
bound
lea
popf
add
jo
out
pop
loop
cmp
cmp
cld
and
outsb
pop
lods
rcr
ret
hlt
lock
pop
adc
jnp
add
adc
mov
cmp
loopne
mov
outsl
xor
ror
iret
fidivl
daa
pop
jno
int
xchg
cld
sbb
hlt
aad
imul
scas
fistl
cmc
dec
jb
stc
mov
enter
int
ret
mov
sub
cltd
into
and
push
adc
ret
inc
in
stos
in
sbb
inc
mul
pop
adc
mov
leave
adc
orl
xor
pop
add
mov
or
pop
mov
fadds
lcall
push
inc
test
shll
mov
ds
mov
cmp
add
jmp
in
pop
cmp
add
mov
jo
int
adc
ss
addb
pop
mov
pop
pop
jae
out
mov
mov
lock
loopne
push
mov
loope
shll
jp
insb
orb
out
pushf
neg
cmpsl
ret
xor
mov
enter
cld
mov
shrl
push
xor
xchg
les
movsl
and
or
xchg
sbb
andl
pusha
mov
push
cli
aam
test
clc
and
div
xor
les
push
inc
inc
mov
js
dec
ljmp
xchg
in
dec
pushf
gs
dec
xor
stos
push
mov
notb
push
xor
xor
test
adc
shrl
add
xchg
enter
enter
jb
ret
dec
pop
imul
mov
sub
jecxz
aaa
cmp
cltd
mov
ret
aas
std
xlat
xchg
pop
out
mov
lret
jae
lods
inc
xchg
mov
push
xchg
adc
aam
dec
js
out
mov
int
push
mov
loop
addr16
sbb
push
adc
nop
fchs
mov
fdivrl
cmp
dec
sti
jns
movsl
shll
por
loopne
or
mov
push
dec
add
jmp
xchg
arpl
xor
adc
or
inc
fcomp
pop
je
and
xor
scas
mov
add
mov
popf
mov
in
lea
pop
mov
lods
or
mov
aas
mov
nop
lock
popf
xor
hlt
mov
dec
shrb
mov
xor
outsl
sub
push
fwait
mov
mov
in
in
cmpsl
or
jge
xor
xor
popa
ljmp
pop
pushf
cmpsb
xchg
dec
scas
mov
imul
dec
jle
call
imul
imul
fwait
call
fbld
aas
lds
loop
cli
xchg
lds
jecxz
imul
sahf
push
push
ss
mov
enter
test
inc
inc
data16
je
test
adc
fwait
jno
push
stc
pop
rclb
cmp
lret
ret
mov
mov
push
in
push
mov
fs
mov
adc
sti
and
mov
movsl
push
xchg
arpl
rcl
loopne
dec
sbb
sbb
push
aam
push
mov
push
dec
jl
sbb
je
cmp
pop
mov
mov
in
shr
fstps
aad
repz
xlat
or
aaa
dec
jmp
xchg
sarl
pop
or
push
cli
mov
xor
jmp
movhps
cmpsl
bound
inc
jbe
lcall
xchg
mov
and
fs
in
and
ljmp
das
nop
in
aam
out
pop
arpl
adc
or
add
and
mov
call
mov
jmp
mov
mov
mov
push
push
mov
fwait
pop
outsb
push
jno,pn
repz
shr
jnp
mov
bound
and
sahf
stc
call
fmull
fildll
mov
push
mov
cmpsb
pop
jno
pushf
nop
fildll
rorl
fstpt
pop
call
jle
lret
scas
mov
xor
xor
mov
lcall
iret
or
out
add
mov
jo
fwait
outsl
and
pop
sub
bound
test
sub
sub
loopne
cmpsb
cmp
lds
jmp
cmp
push
cld
movsb
jne
cltd
jnp
inc
cli
outsb
cld
xchg
popf
dec
scas
aad
push
push
pop
insl
dec
sbb
push
in
pop
dec
adc
mov
pop
and
jp
mov
rcrb
add
add
xchg
scas
ret
fsubrl
dec
popf
mov
ljmp
int3
mov
jb
gs
aam
push
fildl
shrb
mov
les
das
or
xor
jp
push
dec
cltd
movsb
xor
sub
xor
push
imull
inc
mov
xor
pop
push
or
xchg
lods
mov
int
test
xchg
fwait
add
stos
dec
add
ja
imul
ljmp
rcr
xchg
test
sbb
jmp
movsb
in
jp
inc
je
push
lock
jne
mov
and
int3
xlat
push
repnz
movsl
or
and
in
mov
sbb
in
pop
push
fisttpll
rolb
xor
add
adc
cmpb
into
or
scas
lea
sbb
aaa
faddl
lcall
nop
imul
fists
xor
pop
pop
adc
pop
loopne
xor
sbb
adc
cmp
adc
rorl
xor
jae
rolb
ret
mov
test
xchg
es
sti
lds
jmp
add
fistpll
test
fwait
jne
jne
jno
imul
sbb
ja
and
add
add
mul
lret
and
mov
aam
enter
cmp
imul
loop
ret
adc
rcrb
into
xchg
pushf
or
fcmovnu
mov
jns
dec
xor
or
xor
jae
add
mov
inc
jne
out
jo
push
subl
mov
xor
dec
xchg
jnp
fsubs
inc
test
aaa
test
ficoms
jnp
inc
adc
mov
nop
xchg
pushf
int
sbb
jl
lea
mov
pop
pop
mov
insl
je
sub
in
fs
add
ljmp
ficoml
out
repnz
shr
and
jmp
jmp
or
dec
pop
mov
fldt
faddl
xor
push
es
lcall
jge
hlt
clc
js
aas
xor
ljmp
cmpsb
mov
stos
inc
popa
clc
lods
jmp
sbb
sti
mov
dec
aaa
mov
repz
gs
and
and
aas
sarl
aad
sbbl
mov
adcb
ret
mov
xor
pop
jg
outsl
inc
jl
or
das
adcb
lret
inc
faddl
add
jno
inc
out
or
cmp
imul
mov
enter
sub
cmp
test
mov
or
adc
pop
mov
dec
dec
jnp
pop
fisttps
cmp
clc
cmpsb
cmp
ss
pop
clc
js
adc
out
sub
adc
or
mov
loope
and
lahf
sbb
mov
insl
adc
xor
daa
mov
xor
test
xchg
jns
adc
ror
adc
jle
or
pop
je
insl
clc
mov
lret
mov
jnp
movsb
pop
mov
push
cwtl
and
stc
popf
jmp
cmp
push
insb
xor
shll
cmp
scas
or
leave
cwtl
ljmp
jl
rcrb
push
push
sti
add
xor
cmpsl
mov
outsl
out
scas
inc
cmp
icebp
imul
adc
jns
push
js
mov
and
push
jmp
aam
in
and
pop
mov
cmp
mov
adc
mov
mov
push
and
sub
cli
fnstsw
ret
stos
dec
jne
pop
mov
mov
rcll
rcll
daa
lcall
call
pop
jnp
sub
and
dec
jecxz
aad
xchg
sbb
push
movl
add
cmpsb
into
fwait
push
mov
xchg
fstpt
and
and
stos
popf
sub
push
stos
sar
sbbl
pop
mov
mov
cmc
in
mov
mov
push
test
outsb
ds
jne
sbb
outsl
fisttps
imul
ret
sar
les
mov
inc
sbbl
mov
out
dec
sub
fisubrs
push
cwtl
inc
es
test
test
mov
pop
jp
mov
rcl
mov
cmp
push
jl
aam
add
jnp
mov
inc
fdiv
cmp
adc
pop
push
mov
movsb
xchg
gs
mov
ret
iret
xchg
lret
push
push
jne
stc
push
mov
mov
jle
sub
decb
mov
aam
jmp
sub
mov
outsb
xchg
jo
cs
jae
out
mov
xchg
cwtl
pop
inc
push
stos
xor
mov
call
lcall
subb
jecxz
outsl
mov
cmp
add
outsb
out
daa
push
jno
dec
movb
das
inc
daa
mov
data16
xor
mov
and
pop
fwait
imul
loop
dec
lret
outsl
loope
push
jnp
inc
stc
pop
lock
mov
cltd
xor
jb
dec
push
xorl
jle
mov
iret
hlt
push
push
clc
add
or
enter
mov
mov
rcll
paddsw
mov
ds
cltd
movsl
push
xchg
adc
int
xchg
lret
pop
jns
pop
lods
xchg
in
adc
mov
jno
adc
xor
add
js
xor
sbb
test
or
lcall
mov
jae
pushl
rolb
dec
ds
dec
dec
ror
cmp
and
mov
testb
and
xchg
outsl
outsl
push
icebp
push
sbb
jge
and
lahf
sub
jns
out
lahf
sub
mov
pushf
div
mov
mov
cmp
xchg
adc
xchg
and
insb
cmovp
jne
outsb
mov
mov
fildl
cmp
inc
jns
or
cmp
popl
rclb
aad
repnz
sbb
je
push
xchg
push
in
adc
gs
fdivrl
fwait
and
mov
lock
ficoml
and
insl
sahf
sub
ljmp
mov
nop
rcll
jmp
pop
dec
pop
dec
mov
shll
push
lock
jmp
in
les
cmpb
shr
xchg
cmp
adc
mov
test
pop
gs
fyl2x
cs
outsb
jg
sbb
pop
or
mov
iret
fnsave
adc
dec
xor
pop
and
cmp
mov
jmp
pop
adcb
inc
in
or
les
sub
rcll
bound
std
mov
lahf
inc
xorl
push
ljmp
cltd
dec
andl
sar
gs
jae
pop
add
add
int
hlt
jbe
mov
scas
hlt
inc
jbe
cmp
pop
or
dec
inc
add
scas
imul
sbb
add
fnstenv
push
sub
lock
pop
jae
sub
in
das
pop
sub
mov
mov
in
cmpsb
imul
mov
in
movsl
mov
ret
pushf
movsl
leave
or
movsb
mov
cltd
in
fidivrs
scas
dec
push
sub
fs
scas
out
lret
add
shlb
xchg
and
ret
mov
insb
mov
dec
add
pop
dec
mov
mov
clc
jmp
aam
fnstcw
out
sbb
inc
clc
cmpb
jno
push
rcl
adc
sub
fstpt
pop
dec
adc
scas
mulb
cmp
loope
cltd
jmp
and
xchg
js
lret
int
les
cs
sbb
daa
xchg
out
or
adcl
xchg
jns
jmp
repz
shll
push
loop
lea
pop
icebp
divl
or
cld
jp
sub
fwait
cmpl
dec
sub
jb
mov
and
mov
movsl
push
sbb
sahf
lret
stc
sub
add
subl
push
sub
sbb
incl
push
xchg
fwait
push
popf
sub
inc
roll
arpl
leave
mov
jne
dec
scas
pushf
shlb
jp
jecxz,pt
sbb
lods
pop
lock
pop
jl
aas
jns
jo
push
mov
insb
mov
cltd
pop
sbb
cltd
pushf
iret
or
push
popa
add
scas
mov
lods
lods
dec
mov
div
mov
add
ljmp
inc
or
das
cmp
xchg
jecxz
les
push
insb
clc
dec
sti
rcrl
call
push
mov
push
in
daa
inc
dec
rorl
out
cmp
mov
movntq
aas
je
inc
lea
int
and
das
jbe
cmpsl
out
loop
xchg
dec
iret
ljmp
mov
add
test
call
ja
jmp
insl
inc
and
xchg
and
subl
rcrl
xor
push
mov
xor
pop
cmp
and
xchg
outsl
fs
shrl
fiaddl
ret
aad
jno
test
cltd
roll
stos
loope
not
sti
lock
xor
sub
loop
movsl
pop
sbb
adc
cmc
push
or
xchg
jle
lea
movb
mov
mov
loopne
fcoms
jge
lds
pushf
cmp
sbb
inc
adc
add
mulb
inc
inc
adc
outsb
ret
out
cmp
aaa
inc
mov
or
outsb
pop
mov
jge
repnz
cmp
pop
push
out
les
cmpsb
ja
mov
jmp
or
fdivs
xchg
sub
mov
mov
bound
cmp
jo
mov
cmp
and
lret
popa
push
outsl
xchg
data16
sub
hlt
xorb
pushf
pushf
mov
add
mov
dec
iret
icebp
sbb
movl
insl
dec
cmp
pop
jmp
test
lret
sbb
ja
daa
fs
jae
das
adc
xor
data16
push
rorb
sub
negl
sbb
daa
xor
dec
mov
and
fdiv
mov
mov
sbbl
inc
or
sbb
clc
cmp
inc
inc
popf
xchg
xchg
push
and
mov
mov
insb
mov
and
sub
adc
xchg
in
mov
pop
movsl
dec
lods
inc
das
sar
movsb
or
sub
sbb
outsl
jo
cmp
or
pop
xor
push
and
and
push
jecxz
xor
rcrb
dec
enter
add
lock
lock
xor
and
loopne
mov
add
fsubrl
lods
jecxz
jns
fidivrl
mov
fnstenv
xor
pop
imul
add
adc
into
mov
mov
jp
or
inc
push
test
icebp
push
mov
sahf
or
or
lock
inc
fdiv
xor
pushw
dec
lahf
daa
sub
mov
mov
xor
sarb
jns
pusha
push
in
inc
adc
dec
pop
daa
and
js
jbe
xor
rolb
cmpsl
das
mov
inc
mov
test
pop
test
stos
fisttpll
cmpsb
adcl
fiadds
adc
cmp
add
adc
mov
mov
popa
les
mov
or
clc
sub
adc
stc
mov
or
add
movsb
mov
sbb
fisubrs
setne
xor
mov
pop
pop
lcall
repnz
leave
add
add
inc
and
mov
cmp
test
sub
sub
xchg
rorl
sbb
fscale
mov
pop
xor
js
dec
mov
inc
daa
mov
mulb
sahf
icebp
mov
jp
pop
push
xchg
fmuls
lds
out
jbe
loope
lcall
cmpxchg
js
sbb
mov
imul
lea
dec
aaa
nop
mov
das
pusha
push
dec
cld
mov
push
xchg
pop
pop
sub
sbb
movsb
daa
xchg
stc
dec
mov
ds
sbb
shr
fsubs
lret
pop
lea
sub
jbe
cltd
sti
push
lahf
mov
aam
movsl
mov
lods
fdiv
cmp
sbbb
pop
ficompl
stos
aad
dec
sub
push
push
in
repz
mov
jno
adc
in
loopne
pusha
repnz
imul
mull
scas
aad
cltd
mov
sbb
mov
das
adc
pusha
xor
and
dec
ret
mov
mov
repz
cmc
mov
test
push
test
imul
enter
dec
pushf
pop
lock
jge
addr16
and
fwait
or
adc
aam
clc
xchg
add
test
stos
mov
repnz
stos
scas
sub
sub
daa
jns
pushf
cmp
movsb
or
leave
stc
sbb
push
xchg
in
xlat
addr16
insl
xchg
test
inc
hlt
mov
flds
mov
push
daa
out
test
fistps
addr16
pop
lods
movsl
jbe
cmpsl
mov
push
adc
ret
adc
adc
xchg
mov
mov
or
rcr
shrl
imul
push
xchg
push
jae
xor
push
or
mov
jbe
xor
cld
leave
or
adc
in
xchg
fisubl
push
outsb
mov
sub
loope
inc
push
cmp
pop
jmp
add
adc
fs
sbb
fdivrl
inc
dec
mov
pop
mov
popf
xchg
mov
int3
fbld
std
xor
mov
jne
movsb
or
cld
int3
ficoml
add
leave
and
or
xor
inc
xchg
cld
cmpsl
inc
jmp
mov
sbb
and
adc
in
stos
inc
dec
xchg
xor
imul
movb
xchg
push
adc
push
dec
sbb
dec
shrl
dec
fldl
push
and
daa
leave
leave
fidivrs
addl
lods
cmc
push
test
pop
push
or
dec
aas
in
sbb
clc
js
pop
loop
aas
loop
dec
scas
inc
nop
xchg
js
push
and
mov
es
dec
cmp
jne
gs
push
jb
fidivs
cld
in
push
push
and
insb
jb
sbb
xor
sub
out
pop
fucomip
mov
stc
jne
xchg
and
gs
cld
sbb
into
les
subb
ret
sub
popa
xor
cmp
repz
sub
push
inc
filds
mov
mov
mov
dec
dec
xor
gs
sub
lock
scas
add
sahf
jmp
mov
mov
aas
negb
xlat
rcrl
inc
xchg
sub
iret
movsl
mov
pop
pusha
js
xchg
jp
testl
push
jmp
xchg
cmp
sahf
out
push
loop
ret
and
dec
lret
test
mov
mov
imul
insb
add
xchg
roll
insb
jecxz
mov
call
mov
fmull
sub
test
sbb
dec
rcl
aam
xor
lds
mov
dec
jae
test
daa
cmpsb
cmpsb
pop
out
inc
adc
sub
aaa
imul
sbb
rclb
mov
cmp
pop
mov
leave
jns
cli
bound
loope
pop
dec
out
adc
imul
lcall
ret
mov
orb
andl
das
lcall
jp
lcall
xor
jno
sub
sub
push
test
stos
xor
cmc
adc
aaa
mov
xchg
adc
mov
sub
repz
xor
cltd
aas
or
and
pop
clc
stos
mov
push
cmp
pop
sub
je
cltd
xor
xor
or
iret
cmp
pop
scas
dec
jle
xchg
sbb
fnsave
in
and
mov
dec
insl
and
bound
and
sub
pop
jg
mov
inc
movsl
adc
cli
cmp
or
dec
lcall
arpl
inc
inc
cmp
popa
adc
push
fisttpl
mov
jnp
pop
dec
sbb
jne
mov
mov
lea
push
cwtl
xor
ljmp
imul
jg
cmp
push
testb
test
mov
outsl
mov
cmp
cmc
and
imul
push
xor
fs
pop
fisubl
stc
cmpsl
xor
movsb
xchg
loop
test
lods
ret
dec
loope
jns
inc
sti
fldt
adc
ret
push
mov
rcl
lods
out
cld
pop
aaa
lods
sub
mov
jb
data16
dec
jbe
add
test
scas
outsl
clc
sub
adc
adc
lods
loope
imul
and
and
push
rcll
pop
and
popf
je
fs
repnz
adc
movsl
adc
jno
call
pop
sub
cmpsl
fisubs
outsb
lock
and
xchg
mov
inc
es
loope
das
mov
sbb
mov
jnp
mov
sbb
cmp
dec
test
fisubrs
mov
xchg
imul
mov
int
add
xlat
xchg
jo
negl
mulb
add
outsb
fcomps
sub
mov
add
push
sub
rclb
or
push
jbe
sub
xchg
iret
mov
xchg
inc
add
js
int
fdivr
push
xor
imul
ret
subb
shrb
imul
dec
mov
repnz
aad
mov
jo
add
in
bound
cwtl
mov
dec
jo
inc
jns
nop
cli
jmp
push
insb
sub
xor
lcall
lret
loopne
pusha
push
and
xchg
repz
jl
mov
sahf
es
iret
jno
jg
sti
mov
dec
ret
push
jmp
je
xchg
jg
iret
mov
clc
fimuls
rcrb
mov
call
push
pop
mov
jns
inc
int3
mov
jae
mov
bound
mov
imul
icebp
imul
jle
push
or
sub
push
push
push
or
dec
xor
dec
mov
sahf
xor
fimuls
push
test
pushf
xlat
ja
iret
mov
les
test
jb
mov
push
adcl
push
mov
out
or
xor
pushf
adc
adc
movsl
push
push
adc
add
out
fs
mov
adc
shll
out
jbe
in
pop
push
add
imul
pop
pusha
sub
ss
rclb
fldl
add
jl
jns
ljmp
fsubrs
or
pop
mov
push
mov
in
aam
xor
cs
xor
cmpsl
xchg
mov
lods
test
lret
adc
xchg
mov
inc
xchg
pusha
pop
ficompl
lods
not
dec
lahf
or
stos
inc
andl
add
xor
imul
mov
daa
push
mov
fisttpl
sub
push
sub
push
xchg
lds
into
adc
cs
sub
sub
inc
test
and
jl
or
xor
mov
mov
push
adc
cmpsb
adc
push
outsl
dec
cmp
and
pop
cltd
int3
dec
into
loope
inc
or
cmp
push
arpl
push
mov
mov
fists
cmc
jmp
out
out
push
pop
lahf
inc
and
lcall
and
sahf
dec
dec
mov
inc
imul
lret
pop
pushf
test
fnsave
fcoml
ficoml
imul
add
call
sub
pop
xor
add
adc
cmp
xchg
jg
sbb
and
xchg
out
cmp
xor
scas
daa
clc
jnp
mov
test
xor
push
add
adc
inc
mov
in
bound
xor
mov
mov
movsb
sarb
xorb
movsl
and
mov
int
nop
psubb
pop
mov
lret
out
leave
xchg
test
lock
sub
lea
je
add
xchg
jge
xchg
adc
dec
loopne
jne
and
ss
inc
in
or
push
or
into
sbb
mov
adc
loop
fcomps
iret
inc
fistpll
add
leave
mov
fcomps
std
mov
push
cltd
mov
dec
test
pop
add
push
aas
add
movsl
leave
mov
and
flds
adc
fcmove
sarl
inc
add
aam
sub
adc
sub
cli
rol
sub
fdivr
xchg
or
cmpsb
ret
sub
mov
les
cwtl
jno
aad
xchg
mov
add
popa
shll
add
jae
cld
mov
xlat
bnd
sub
cmp
cmovle
jbe
push
pop
push
lods
mov
in
xlat
lcall
lcall
pop
or
pop
sub
int3
insb
jnp
gs
cld
jo
xchg
fisubrl
mov
xor
gs
fnstsw
push
jbe
adc
lret
in
and
cltd
dec
movsl
adc
dec
mov
xchg
mov
out
and
add
xor
sbb
out
xor
in
push
cmp
and
add
jge
call
cmp
and
mov
xor
xchg
mov
xor
push
aad
and
xor
scas
dec
cmp
inc
in
insb
mov
pop
xchg
mov
mov
cld
jae
xor
int3
xlat
enter
jecxz
cmp
push
addr16
pop
jbe
xor
fistl
int
fmulp
dec
in
dec
and
add
cmc
fincstp
push
dec
lcall
jmp
inc
pop
mov
or
dec
pop
sub
mov
add
pop
into
fidivrs
adc
fwait
ljmp
mov
jg
xchg
mov
repz
xor
scas
and
mov
sti
adc
push
clc
cmp
enter
add
add
jge
xchg
flds
sarl
inc
movsb
out
push
test
fs
push
push
in
daa
aam
mov
movsb
int3
jl
xchg
xchg
lds
cmpsl
push
notb
mov
mov
addl
and
data16
imul
cmc
pushf
icebp
jp
pop
jg
popa
out
shll
addb
rcl
xor
push
cmp
mov
mov
pushf
arpl
aas
hlt
test
dec
mulb
xor
push
jge
xchg
pop
imul
lret
push
cmp
andb
jo
popf
inc
push
add
in
jecxz
sbb
xor
cmp
int
arpl
pop
push
mov
aam
xor
in
out
and
dec
xor
daa
mov
mov
outsb
sbb
or
and
ja
mov
jp
sti
sbb
cmpsl
adc
in
mov
jecxz
out
mov
imul
lea
adc
outsl
repnz
andl
scas
fimull
fisttpl
call
sub
movsb
std
int
cli
ljmp
push
sahf
ss
sahf
cs
aam
addl
jnp
add
std
push
mov
jecxz
lcall
ljmp
fistps
inc
mov
ss
jnp
pop
fcompl
add
xor
inc
gs
lahf
call
scas
add
pop
data16
add
sbb
leave
jg
mov
push
or
inc
push
sbb
pop
mov
lods
ficoms
sub
push
jg
mov
divl
pop
push
addl
fsubs
fidivl
adcl
and
rcrb
push
lret
mov
push
int3
inc
std
mov
jbe
iret
dec
in
sub
sub
sbb
ja
push
xchg
cmp
out
cld
cmp
sbb
iret
rcrl
jnp
push
cmpsl
adc
mov
mov
adcl
push
sub
adc
jmp
jnp
pop
int3
sbb
or
jge
sbb
dec
dec
push
in
in
pusha
push
lods
sbb
dec
out
jp
add
dec
movsb
aas
lahf
push
mov
dec
mov
movsl
repz
insl
inc
inc
xor
mov
cmp
mov
sub
out
jle
aad
mov
cmc
inc
enter
mov
repnz
sbb
pop
inc
add
push
gs
movaps
fs
push
insb
mov
bound
xchg
movsl
pop
jle
out
addl
call
outsb
bound
aas
push
hlt
inc
orb
ljmp
xchg
mov
mov
sahf
cli
jbe
fcompl
jge
xchg
cmc
push
scas
mov
mov
xlat
mov
outsb
jns
mov
rol
add
mov
pop
idivl
xor
xchg
jmp
std
fdivs
xchg
sub
mov
ret
dec
jl
je
aam
mov
mov
cmp
out
fucomp
scas
repnz
jmp
jge
xor
movsb
add
and
les
imull
push
mov
cmovb
mov
out
sub
sub
mov
cwtl
imul
aad
shlb
and
or
lea
cmpsl
jp
fsub
inc
clc
sbb
inc
mov
mov
xchg
movsl
add
push
xchg
lcall
shll
cmp
pop
rcrl
push
inc
stos
cmpsl
pop
adc
pop
fstpl
in
mov
xor
negb
test
outsb
or
stos
cmp
fdivrl
or
icebp
xchg
cmp
shll
mov
push
sub
mov
pop
imul
dec
inc
sbb
sub
and
cmpb
gs
and
sbb
xchg
cmpsb
ss
repnz
jne
mov
sub
lahf
pop
pusha
xchg
ljmp
fcmovnb
sub
mov
or
lahf
insl
and
daa
sub
mov
mov
enter
add
mov
and
imul
push
push
aaa
dec
sarb
xchg
ficomps
xchg
int3
aaa
shl
repz
cld
push
sbb
pop
push
movzwl
cmp
imul
fldl
dec
cld
pop
icebp
shl
xor
cmc
loop
lods
faddp
jle
bound
push
push
scas
inc
cmp
pop
insb
adc
mov
cmpl
add
sub
outsb
xchg
movsl
or
add
loope
cmp
jb
cmp
lock
.byte
.byte
sub
add
sbb
add
xchg
xor
add
and
add
add
add
add
add
add
add
add
add
add
add
lcall
add
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
fcomp
add
popa
out
add
test
add
add
sub
popf
stos
pusha
leave
fildll
push
dec
decb
or
dec
loope
push
push
push
push
mov
test
je
push
out
or
outsb
insb
xor
cs
push
mov
cmp
xor
jb
jne
insb
inc
gs
push
add
mov
call
xor
sbb
mov
jl
sar
sbb
adc
ss
clc
cmpl
mov
push
push
jbe
push
or
lea
inc
aad
stc
mov
add
adc
push
push
call
les
pop
pop
je
or
push
addb
rolb
add
pop
pop
pop
pop
ret
push
and
or
orl
jne
jne
inc
adc
mov
ret
mov
roll
inc
and
push
repnz
push
xchg
ds
pusha
push
mov
add
dec
or
push
inc
add
je
mov
push
call
dec
or
rol
or
cmp
outsl
dec
jne,pn
mov
in
mov
inc
push
jl
gs
iret
pop
mov
xor
mov
mov
shll
cmp
jb
push
cmp
sub
repz
andl
dec
jecxz
or
fiadds
fmuls
nop
mov
add
pop
pop
ret
xchg
add
mov
jl
loope
xchg
or
or
imul
jmp
or
jae
push
fbld
push
andb
sarb
incl
cmp
mov
mov
data16
mov
pop
frstor
fwait
xlat
push
sbb
rorb
sarb
ljmp
paddw
inc
std
adc
jge
pop
sub
push
loope
adc
jne
lea
add
push
call
xchg
into
adc
mov
enter
or
shl
rcr
adc
fldt
or
adc
push
orl
sub
out
jbe
cmp
add
decb
adc
shl
sbb
cmp
scas
sbb
pop
pop
mov
pop
mov
push
push
or
insb
das
rcll
or
test
jl
xchg
nop
rclb
adc
push
jbe
and
xchg
pop
dec
add
mov
addl
xchg
fildl
cmp
cmpsb
sbb
sbb
outsl
ret
ds
add
push
mov
fwait
nop
jne
mov
push
mov
and
inc
inc
push
div
jne
xchg
or
sbb
push
push
js
cltd
and
pushf
or
out
sbb
inc
adc
mov
sub
push
lods
lods
or
popf
push
adc
cmp
loope
addr16
jo
sbb
ret
lea
push
mov
add
call
or
out
mov
push
lock
in
adc
pusha
inc
je
ss
cmp
fisttpl
push
cmp
imul
call
push
pop
jmp
ljmp
enter
add
jne
loopne
rep
adc
popw
push
andl
or
mov
andl
addl
call
into
mov
out
sbb
test
adc
push
mov
clc
lea
push
mov
das
add
enter
std
sti
int3
pop
test
inc
mov
and
loop
inc
add
mov
sub
sahf
ret
shr
mov
add
movsl
add
pop
inc
push
or
push
pop
movl
mov
mov
es
into
xchg
mov
sbb
movntq
out
xor
mov
fcoms
jge
cld
nop
or
decl
or
sbb
out
add
clc
jmp
jmp
aam
lea
andb
loope
or
movsb
jnp
movsl
fistps
add
rcll
mov
bsr
lock
cmp
xor
inc
push
fdivl
cmp
je
stos
lock
lds
push
inc
orb
clc
xchg
mov
lcall
inc
enter
dec
lock
jnp
idiv
cmp
jmp
test
in
mov
jae
lock
mov
inc
cmpb
push
mov
sub
push
dec
loopne
or
movb
test
nop
sbb
or
inc
or
dec
clc
add
jl
push
xchg
dec
cwtl
mov
jge
scas
mov
sarb
push
in
sti
clc
cwtl
cwtl
push
jl
dec
xor
add
jecxz
add
stc
dec
lret
add
sub
jge
lea
push
test
cld
xor
sub
push
icebp
or
add
jmp
sar
jno
test
movsb
dec
fdivrs
push
mov
xchg
cs
sub
shl
mov
pop
test
ss
ja
daa
sbbl
stc
inc
lcall
xchg
add
adc
cmp
subb
lock
or
jb
pop
xor
sub
cmc
pop
pop
leave
pop
push
test
notb
push
add
lds
add
test
push
adc
cmc
hlt
adc
movsl
inc
fwait
xorb
add
and
mov
cmp
jns
dec
jle
sub
loopne
or
pusha
sbb
pop
or
sbb
adc
inc
pop
inc
jo
out
mov
adc
js
mov
cmp
adc
ss
call
sbb
or
adc
inc
es
add
lock
add
push
add
add
lea
stos
add
jnp
add
jae
sbb
testb
and
jnp
xchg
jnp
inc
cli
rep
push
ret
and
int
sbb
sbb
cmp
nop
add
add
pushf
mov
push
push
fists
adc
es
and
mov
sub
ret
inc
xchg
sub
pop
fcoms
or
fists
leave
arpl
add
push
inc
adc
mov
pop
sbb
lea
inc
add
and
int3
mov
rcll
push
push
and
push
jg
test
addl
es
pop
and
or
lds
test
adc
mov
fisubs
inc
or
inc
icebp
add
movb
int
or
inc
add
push
call
xor
add
or
xchg
xchg
pusha
or
pop
pop
pop
pop
in
cld
cmpsl
call
pop
sub
push
add
push
incl
xchg
dec
xchg
xchg
push
add
sarl
arpl
push
push
xchg
inc
cmc
jmp
mov
cld
inc
mov
stos
pop
add
jmp
lods
push
jne
scas
leave
push
mov
jp
nop
add
mov
data16
cmp
les
or
hlt
cltd
xor
push
or
call
iret
adc
adc
idiv
cs
jmp
push
rorb
mov
movzwl
test
xchg
rcr
or
je
or
sub
push
cld
inc
pop
adc
repnz
add
cmp
jge
push
inc
movzbl
add
sub
rorb
enter
sbb
cmp
or
xchg
rclb
les
push
add
jae
inc
jmp
pop
pop
pop
jne
dec
mov
sub
xchg
pop
int3
adc
push
psubsw
or
aaa
clc
xor
add
jbe
push
push
pop
mov
mov
push
mov
fucomip
pop
mov
push
test
xchg
dec
fmulp
inc
in
pop
or
and
dec
loopne
pop
jge
dec
or
testb
rep
sbb
mov
push
cli
movsb
outsl
rcrl
fwait
or
stos
pop
into
pusha
cmp
sub
nop
inc
cmp
mov
push
pop
pushf
jb
roll
push
push
push
xchg
cmpsb
push
xchg
xchg
mov
mov
jge,pn
push
outsb
dec
sub
xor
sub
sub
daa
inc
pusha
lret
dec
push
hlt
push
dec
mov
lahf
or
mov
lock
fistps
push
in
ror
inc
je
mov
adc
aas
adcl
test
lret
nop
cli
cmp
push
stc
jmp
dec
out
adc
inc
movl
or
sub
jno
ljmp
daa
fimull
inc
or
sub
xchg
pusha
stc
icebp
pop
sarb
ds
aam
hlt
push
je
add
push
or
or
adc
jmp
jnp
push
push
push
call
outsb
or
out
and
adc
lds
pop
dec
adc
mov
fcoml
push
testb
jge
repnz
daa
rcl
mov
ret
dec
jmp
pop
addb
jge
push
adc
rol
in
cli
hlt
add
testb
push
inc
pusha
test
nop
and
and
and
pushf
push
push
sub
inc
jecxz
jno
mov
push
inc
push
in
dec
fs
pop
imul
jmp
sahf
stos
and
cmp
xor
sub
mov
loopne
movsb
scas
mov
or
jmp
ss
mov
and
jo
cmp
dec
adc
jl
sbb
daa
jg
imul
push
cld
push
pop
inc
push
sbb
pop
test
add
mov
adc
sbb
dec
sub
add
jne
lret
bound
pop
cmpsl
nop
mov
je
insb
imul
gs
push
clc
fcoml
push
xor
arpl
and
jge
mov
je
and
fstpt
imul
inc
dec
inc
cs
insb
ds
inc
imul
jne
je
sub
mov
dec
dec
jne
xchg
xor
sahf
cmp
push
dec
popa
addr16
add
outsl
js
ja
xchg
je
xor
cltd
lret
popa
or
jae
or
add
pop
lcall
push
pusha
adc
movsb
into
test
mov
sub
fdiv
dec
jo
sub
inc
je
out
insb
sbb
push
inc
mov
mov
sub
mov
imul
test
movb
add
addb
mov
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
pop
add
out
or
add
add
add
or
add
inc
add
add
add
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
pop
dec
xchg
xorb
loop
push
ret
call
jmp
aam
aam
jno
sbb
arpl
icebp
push
pop
jno
cs
jae
mov
jae
mov
shl
mov
cmp
pop
cmpsb
shl
mov
dec
or
cmp
xchg
fdiv
mov
or
and
shlb
inc
lret
mov
pop
xchg
xchg
pop
fdivrl
into
sub
jge
sbb
int
lahf
mov
mov
lret
fstpt
imul
pop
inc
xlat
and
mov
xor
fcomps
mov
adc
or
cmp
pop
sbb
push
out
aaa
icebp
ret
jmp
dec
fs
loop
mov
add
loope
test
cli
and
jl
dec
mov
mov
inc
lods
sbb
ss
pop
ljmp
roll
pop
pushf
sbb
hlt
std
in
rcrb
adc
clc
lods
xchg
xor
inc
mov
stos
jne
adc
xor
in
adc
lods
outsb
addr16
repnz
cltd
movsl
dec
push
stos
inc
jne
jno
mov
pop
mov
je
lods
imul
xor
aaa
enter
leave
stos
aam
mov
adc
and
and
sub
cltd
ljmp
fwait
cltd
fisubl
insb
dec
mov
aas
and
stos
cmp
call
push
pushf
outsl
daa
loopne
cmpsb
rorb
inc
mov
adc
cmp
out
or
lds
jae
sub
out
mov
xchg
mov
icebp
fld
push
ds
aas
sub
daa
cmpsl
faddl
imul
lret
loopne
test
ja
stos
dec
scas
sbb
cwtl
inc
loope
jne
xor
mov
push
addr16
pop
fcoml
mov
jg
sub
frstor
lcall
mov
stc
inc
dec
int3
in
stos
jbe
fiadds
enter
enter
jno
fidivrs
stc
pushf
sbb
arpl
stc
xchg
ljmp
sbb
xchg
jnp
dec
mov
and
or
dec
test
pop
shlb
insb
ror
andb
js
adc
jb
pop
add
dec
rorl
mov
rorl
inc
loopne
hlt
clc
jle
mov
pusha
fsts
out
adc
nop
pusha
adc
pop
das
out
mov
add
in
aad
push
adc
jmp
mov
adc
in
sub
test
or
cmp
cld
mov
fisubrl
jo
add
jecxz
inc
lock
mov
ss
sahf
xchg
mov
push
test
leave
js
mov
in
xchg
int
imul
pop
mov
cwtl
cltd
jno
dec
push
int3
sub
mov
and
out
adc
ss
mov
rcl
bound
add
aas
mov
inc
ficompl
cmp
loope
xchg
push
aaa
mov
sub
inc
xchg
lret
mov
adc
out
scas
repnz
adc
int3
repnz
lahf
lock
repnz
sbb
fadds
or
aaa
jae
cmp
stos
mov
jne
dec
test
fildll
xchg
ror
inc
pop
js
cmp
sbb
leave
xor
jl
sub
in
rorb
outsb
pop
mov
roll
add
mov
pop
jmp
mov
in
fisubl
mov
mov
int3
rorb
xchg
jne
cmp
push
pop
lea
adc
faddl
into
iret
adc
ret
int3
add
sub
icebp
cmp
jo
lock
push
hlt
imul
push
outsl
sbb
sahf
or
adc
dec
cmpsl
xchg
mov
std
out
bound
cs
sub
sarl
push
or
jno
inc
mov
into
call
sub
hlt
sti
sub
in
sub
pop
stc
jno
pop
or
cmpsl
mov
jno
sub
outsb
pop
stos
in
ja
pop
mov
adc
sbb
sbb
mov
mov
inc
fistl
scas
adc
sub
fcmove
ljmp
dec
xor
xor
movsl
pop
push
test
or
or
jne
lea
fisubs
jne
leave
bound
jns
loopne
and
sub
fcoms
outsb
sbb
xchg
add
int
lret
mov
mov
mov
in
xchg
dec
pop
and
mov
sti
cld
ljmp
mov
clc
cmc
xchg
out
pop
push
imul
mov
gs
push
sub
inc
scas
sbb
rorl
mov
std
cmpsl
ret
bound
xor
fiaddl
ss
cmp
enter
movsl
sub
lock
ror
out
shrb
xor
add
or
addl
fadds
push
lret
and
pop
and
sbb
ss
push
adc
fildl
push
insl
dec
xchg
jno
dec
and
notl
shl
faddl
das
mov
cld
faddl
adc
lret
inc
cwtl
and
lahf
jp
ljmp
jo
je
inc
pop
das
jle
rcrl
cli
or
lea
mov
mov
outsl
loopne
rcl
xchg
inc
push
sub
ss
icebp
cwtl
sub
cmp
insb
rolb
hlt
scas
lahf
cmp
lcall
out
or
mov
dec
addr16
std
inc
and
push
popa
xor
out
cmp
xchg
cmp
push
stc
cmp
sbb
fwait
and
sbb
cmp
add
gs
dec
rorl
aad
xor
fiadds
push
cmc
inc
xlat
mov
xlat
push
es
pop
jle
les
in
sbb
mov
cmp
cs
icebp
or
pop
test
adc
mov
xor
jns
push
push
stc
adc
shll
xchg
repz
sbb
jae
xorl
jp
add
xchg
jmp
roll
add
aad
ljmp
imul
call
lcall
fnstcw
pop
scas
pop
inc
jp
sbb
inc
aad
nop
fmul
loop
jnp
mov
addr16
xor
xchg
sub
pop
xor
push
xor
sarb
cmpsb
push
cli
sbb
sti
roll
lret
adc
and
subl
dec
out
lret
xchg
xor
ja
sub
test
cmp
mov
loop
into
adc
sbb
loopne
fwait
not
cmp
mov
jb
aaa
lds
test
jnp
mov
inc
push
sub
jne
popa
inc
ljmp
mov
lcall
push
in
jl
repz
out
or
sbb
jns
loopne
shrb
in
pushf
or
adc
pop
stc
jl
aas
aam
movb
pop
mov
mov
xor
lret
cs
jb
pop
mov
dec
xchg
loopne
sub
sub
call
mov
lret
xchg
dec
xchg
jle
fwait
push
dec
das
lock
jne
or
xorl
push
add
in
adc
add
xchg
pop
cmc
shrb
sbb
int3
mov
mov
loop
cmp
imul
movsb
xlat
cld
mov
mov
adc
in
jo
imul
ret
jg
enter
mov
scas
jg
cmp
mov
mov
popf
loope
mov
je
lahf
xorl
pop
xor
enter
outsb
cmp
sahf
cmp
adc
arpl
ficoms
shr
xchg
in
and
je
pop
dec
xor
and
and
into
adc
dec
adc
sub
mov
mov
mov
das
fwait
outsb
rcll
and
cmp
cmc
shr
dec
lret
mov
clc
int
sub
jb
popf
pop
or
mov
hlt
adc
xor
movsb
or
and
xchg
outsl
cmp
in
clc
cs
push
dec
call
push
cmpsl
and
mov
call
pusha
inc
xor
push
lds
shlb
mov
in
sbb
pop
cmpsb
int3
push
cmc
pop
and
cmpsl
and
or
fsts
dec
aam
in
dec
cmpsb
and
or
mov
paddq
jp
in
or
mov
test
seto
scas
add
icebp
xor
jp
es
and
xchg
jmp
subl
jle
enter
aad
fucomp
hlt
mov
aad
pusha
mov
loop
dec
lret
sahf
pop
in
lds
es
cltd
mov
sub
out
sbbl
add
push
aaa
out
int
rcrl
rol
je
add
jmp
les
push
scas
cli
adc
jnp
inc
mov
or
nop
aas
inc
scas
mov
jl
jo
insl
cwtl
xchg
inc
sbb
loope
lea
dec
push
mov
pslld
xchg
and
pop
scas
inc
mov
sub
xor
cmpsb
pop
dec
jecxz
mov
adc
repz
sub
pop
sbb
test
pop
in
test
sbb
leave
push
aam
mov
jb
push
sti
scas
xchg
shrl
sub
ds
fnstenv
lret
sbb
rclb
test
jo
loopne
out
and
es
and
loop
lea
icebp
or
popa
insb
jo
mov
mov
jae
add
sub
rcll
inc
jae
jecxz
pop
call
js
jbe
int3
adc
inc
mov
out
xor
into
mov
push
popa
inc
icebp
and
push
mov
sbb
insl
ljmp
imul
mov
rcrl
sub
xchg
aas
je
int
adcb
xor
and
mov
lods
mov
push
popf
lea
xchg
xchg
daa
repnz
js
inc
fsubrl
cmc
jnp
push
xchg
lret
sahf
push
cmp
mov
mov
push
hlt
jnp
aas
cld
decl
sub
xchg
pop
jnp
outsl
hlt
shrl
jae
adc
out
stc
imul
pop
je
addr16
jmp
sti
jle
out
push
inc
and
out
cmp
fdiv
sti
out
jo
xor
shl
into
cmp
lret
sbb
sub
push
sub
imul
mov
push
clc
jge
adc
push
mov
data16
and
mov
sbb
lcall
out
add
mov
xlat
cmc
jnp
hlt
xor
adc
lods
xlat
mov
xor
jnp
lret
add
cs
lret
loope
in
and
sub
add
std
jg
in
adc
orb
adc
or
idiv
js
cmp
mov
hlt
push
jo
addl
inc
and
sbb
insb
jecxz
ja
sub
and
insl
xor
mov
decl
stos
sbb
add
sbb
add
push
dec
inc
dec
xor
add
add
add
add
je
jb
arpl
fs
jae
add
add
add
add
insb
jns
jb
jo
and
and
arpl
and
xor
xor
xor
xor
popa
bound
data16
popa
jb
add
inc
add
inc
