push
add
mov
mov
pop
pop
pop
add
rorb
lods
stos
lods
add
mov
es
dec
sbb
rclb
add
inc
cmp
sti
sbb
cmp
lcall
xor
mov
jmp
ljmp
imul
sti
xor
dec
add
data16
mov
xor
push
clc
aam
mov
dec
lock
sub
das
mov
mov
les
ja
sbb
sbb
push
and
loopne
pop
fwait
mov
push
insl
fwait
stc
sbb
push
lea
mov
xor
mov
sti
imul
lahf
sbb
mov
xchg
sahf
sbb
sub
xor
inc
ss
test
cmp
imul
xchg
pop
dec
cmp
pop
sbb
sub
sbb
insl
xchg
sub
sbb
sbb
je
xchg
lahf
mov
imul
insl
jno
inc
mov
imul
sbb
or
or
inc
cmp
pop
mov
jmp
fs
inc
xor
sub
insl
pushl
sub
sbb
xorl
aam
and
cltd
shr
mov
incl
test
adc
pop
jne
xor
push
shr
add
add
add
inc
arpl
cmpsb
mulb
cmpsb
xchg
add
jge
xlat
mov
test
push
dec
cld
ret
xchg
repnz
mov
dec
or
xchg
popa
jecxz
imul
sbb
lahf
sbb
cmpb
movsb
mov
sub
adc
pop
rclb
popf
sbbb
flds
sahf
dec
inc
lods
sub
fwait
scas
data16
test
push
pop
mov
inc
and
movsb
push
dec
faddl
inc
adc
es
jnp
xchg
mov
ret
insb
inc
adc
enter
cmp
sbb
adc
or
mov
insb
stos
or
lods
or
jb
add
pop
outsb
dec
inc
sbb
mov
mov
inc
inc
jle
ret
add
and
or
or
repnz
pop
das
mov
sahf
add
inc
loopne
push
dec
cmpsb
rep
rorl
xchg
fs
test
sbb
arpl
jp
mov
popf
sub
and
rorl
clc
mov
push
out
inc
in
jae
fldenv
mov
inc
xor
sub
sbb
xchg
adc
scas
addr16
ficoms
popf
xor
push
sbb
mov
push
fisubs
adc
rcll
mov
or
add
add
sbb
cmp
dec
jl
jo
pushf
mov
sbb
lds
cmp
inc
cmp
and
adc
shrl
lahf
jb
add
mov
xchg
xchg
push
movsl
es
jo
add
fsubl
jne
ret
xchg
movups
test
sbb
popa
das
fs
mov
jmp
pop
mov
pop
inc
rorb
push
cwtl
test
les
xchg
push
movsl
adc
add
xchg
dec
cmp
adc
fldenv
mov
data16
mov
cmp
xchg
test
push
xchg
cmpsb
sub
mov
pop
shll
roll
icebp
lcall
test
mov
lahf
sub
push
filds
outsl
push
lcall
faddl
pop
shlb
cmpsb
call
pop
les
cltd
sbb
mov
les
lahf
cli
dec
fldt
push
inc
pop
dec
into
mov
orb
mov
mov
push
addb
data16
cwtl
lret
rcrl
or
push
ret
xchg
rol
lods
idivb
lock
cmp
fstpt
dec
repz
enter
ljmp
pop
pop
int
xchg
sbb
fs
sarl
test
lcall
sbb
mov
adc
mov
dec
xchg
iret
pop
mov
pusha
xchg
jecxz
xchg
hlt
lcall
fstpl
insb
adc
aad
or
jmp
lret
bound
rcrl
inc
in
xor
push
or
mov
and
dec
sub
mov
data16
popa
cmpsl
mov
lret
dec
jns
inc
and
rol
sar
cmp
adc
adc
mov
rolb
cmp
adc
sub
lcall
xlat
adc
std
mov
xchg
cmp
mov
mov
hlt
int
rcrl
subb
inc
incl
lds
push
lods
xchg
push
test
pop
dec
test
xor
adc
daa
call
movsl
mov
jmp
pop
rol
add
adc
xchg
mov
mov
or
cmpsb
fstl
xchg
add
inc
sub
and
dec
and
pop
lret
nop
inc
daa
xor
test
mov
or
xchg
push
clc
movb
sub
lock
lock
adc
mov
mov
cmpb
pop
add
inc
stos
mov
fs
or
dec
cmp
adc
inc
ficoms
popa
movsb
mov
dec
in
and
cmp
cmpsl
push
inc
popf
inc
cmpsl
nop
mov
and
cmp
or
cmpb
lods
xor
roll
popf
mov
push
or
cmp
ss
lahf
int3
mov
xchg
and
cld
nop
les
scas
bound
xchg
and
int
xchg
mov
xchg
pop
gs
dec
xchg
lods
cwtl
xlat
bound
lahf
and
sub
push
adc
sub
scas
pop
mov
roll
mov
pop
push
cmp
xor
sbb
call
jnp
xchg
pushf
and
in
outsb
and
es
sbb
or
xchg
jne
loop
leave
into
mov
inc
arpl
cwtl
rcrl
mov
cmp
adc
xchg
mov
ds
add
int3
push
mov
fidivl
push
adc
inc
lds
pop
dec
loop
or
xor
loopne
aam
sub
xchg
push
pop
sub
cmp
repz
sub
or
data16
dec
dec
shl
cwtl
movsb
mov
xor
mov
mov
sub
push
dec
and
test
lock
sub
pop
mov
bound
jmp
push
cmp
iret
les
mov
dec
fldt
fsubrl
int3
xlat
mov
fstps
or
sahf
fidivrs
movsb
pushf
cmpsb
subl
es
into
xor
pop
push
cmp
lret
pop
mov
fcomps
hlt
xor
pop
push
xor
push
les
xlat
dec
icebp
je
pop
xchg
cmc
lea
arpl
stos
or
mov
and
out
pop
mov
lods
mov
ror
stc
push
data16
dec
add
lds
xor
mov
andb
jae
imulb
fsubrs
xchg
sbb
repz
bound
rorb
dec
pusha
pushf
repz
jmp
or
xchg
mov
pop
lahf
popa
fs
adc
lret
fwait
sbb
xchg
rorb
stc
sbb
xchg
popf
xchg
insl
roll
insb
movsl
mov
mov
nop
cmp
xor
ds
es
mov
imul
fldcw
push
pop
out
es
and
out
je
pop
and
adc
les
sbb
xchg
push
ja
orl
adc
pop
or
imul
mov
adc
sub
xor
sbb
imul
stos
push
pop
pop
or
imul
and
add
cmp
icebp
xor
xor
xor
mov
mov
dec
sbb
fadds
cmpsl
imul
movsb
xchg
loopne
mov
adcl
dec
jecxz
push
aam
or
cli
mov
cld
cwtl
pop
aaa
xor
xor
push
adc
ret
dec
cld
sub
push
cmp
adc
pop
sub
jl
sub
ja
and
mov
adc
sbb
xchg
cmp
sub
sub
mov
mov
jp
rcrb
scas
inc
mov
rcrl
jl
mov
sbbl
fsubrs
aas
out
iret
ret
fwait
data16
cmp
out
mov
stc
mov
mov
dec
dec
xor
int
pop
lret
orl
xchg
sahf
sub
mov
jno
pop
imulb
pusha
ret
sbb
fwait
ljmp
inc
mov
adc
fistpl
test
cmp
ss
lret
frstor
stos
cmp
testb
test
aaa
push
or
xbegin
xchg
mov
sbb
add
xchg
cld
adc
std
ja
sub
lret
mov
or
insb
flds
movsl
inc
cmc
into
push
sub
jp
mov
cmp
sub
jno
fcmovbe
push
dec
adc
add
daa
inc
add
dec
std
cmp
and
mov
push
push
push
mov
insb
mov
js
ss
andb
add
cmpsb
xchg
sbb
leave
add
lahf
dec
and
mov
imul
fldenv
lods
sbb
sbb
dec
add
add
call
xor
xor
test
push
cmp
sub
mov
or
inc
pop
ret
jmp
js
fmuls
test
cmp
mov
mov
inc
mov
dec
das
iret
lret
std
cmp
inc
insb
sub
pop
mov
and
addr16
pop
inc
gs
adc
popa
adc
movsl
jb
or
inc
call
and
fldenv
and
xchg
in
fldcw
xchg
sub
cld
fstpt
cmp
mov
add
adc
sarb
scas
shl
or
cmp
cmp
add
or
adc
cmpb
pop
popa
cmp
popa
mov
outsb
test
push
ljmp
pop
mov
xor
arpl
loop
ss
cmp
out
lret
outsl
stos
dec
jnp
enter
mov
adc
es
cmp
xchg
jp
movsl
and
jbe
ds
jg
bound
sub
orb
popf
push
fnstcw
inc
mov
data16
cwtl
in
shl
pop
sbb
sbb
and
jbe
lcall
rorb
neg
sub
push
and
mov
test
inc
movsl
insl
das
jb
mov
pop
lret
dec
xchg
movsl
sarl
jb
push
sbb
mov
or
inc
rorl
or
add
fidivrs
jl
cmp
inc
push
and
in
push
test
xchg
mov
stc
in
sub
sbb
cmp
and
jle
test
pop
mov
sbb
enter
movb
push
stos
sahf
lahf
sbb
das
sbbb
sub
lret
lcall
or
ljmp
sbb
adc
or
or
xor
xor
mov
mov
mov
adc
das
roll
popf
inc
inc
mov
fs
jecxz
imul
push
lahf
ja
push
ljmp
mov
aaa
cmpsl
negl
pop
mov
aaa
push
cmp
or
popa
in
or
jmp
push
mov
adc
add
inc
scas
pushf
cld
pop
and
xchg
jbe
jge
add
or
loope
insl
xchg
pop
and
pop
mov
xchg
mov
int
gs
push
sub
scas
or
xchg
inc
mov
addr16
imul
push
lahf
clc
les
ljmp
adc
add
pminsw
inc
mov
and
sub
xchg
mov
out
mov
mov
push
insb
enter
bound
mov
xchg
mov
inc
xchg
pop
xchg
or
ret
mov
loop
sbb
and
sbb
sub
mov
in
push
lret
or
hlt
sub
mov
pop
adc
lret
aam
or
outsl
xor
daa
mov
lods
or
add
insb
ret
pop
dec
out
sbb
dec
stos
xchg
add
or
repnz
inc
lds
pop
sbb
dec
mov
push
xchg
cmp
sub
push
mov
sti
pop
adc
addb
add
imul
repnz
cmp
repz
out
mov
outsb
andb
add
in
add
mov
in
dec
arpl
outsb
dec
sarb
out
xchg
xor
hlt
mov
lock
mov
mov
mov
scas
jle
xlat
adc
adc
loope
mov
mov
loop
lret
mov
push
jl
and
setne
out
mov
mov
mov
outsl
nop
jg
pop
sub
xor
push
pop
in
pop
xor
cmp
movsl
push
inc
jb
mov
mov
insb
pop
pop
sbb
sbb
subl
orl
push
jno
sub
loope
sub
inc
push
pop
lock
sbb
cmpsl
ds
aam
fcomp
outsl
jmp
and
movsb
or
push
xchg
cmc
and
sub
mov
std
pop
xor
bound
dec
push
data16
popa
mov
xor
std
jno
push
xor
scas
add
and
mov
add
addr16
outsb
cmp
cmp
pop
adc
push
fwait
cmp
sub
adc
mov
clc
nop
sub
sbb
jne
sub
pop
fidivl
stos
fwait
add
cmp
jo
and
inc
stos
lahf
icebp
loop
out
mov
data16
lds
xchg
mov
bound
add
mov
xchg
lods
loopne
pop
pop
push
mov
shlb
push
bound
dec
xchg
xor
fs
mull
or
sbb
addl
pop
adc
pop
es
xchg
add
stos
icebp
adc
lods
xor
cmp
test
push
cli
mov
pop
and
or
and
xlat
out
lret
jae
jbe
jle
mov
pusha
rcll
adc
push
adcb
hlt
mov
xchg
push
aaa
mov
jo
imul
mov
fs
scas
in
rcrl
hlt
shr
les
jne
cmp
sbb
ret
push
xor
jns
pop
sub
popa
aaa
adc
push
inc
sbb
xor
js
cltd
cld
mov
mov
aas
mov
mov
repnz
sub
inc
push
into
add
cmpsl
xchg
add
or
js
mov
jo
xchg
dec
lods
shlb
sub
mov
xor
fcmovbe
stos
push
lcall
sub
jmp
sub
xchg
inc
sub
lea
push
les
es
dec
outsl
cmp
add
cmp
jbe
lds
test
fimuls
lret
nop
subl
ret
cld
adc
fdivrp
icebp
test
loop
xchg
sub
lcall
push
pop
mov
and
lret
shl
or
ret
jb
js
insb
pop
jp
xchg
push
and
fs
inc
outsb
mov
dec
aad
mov
push
push
pop
call
pop
or
cmpsb
jno
cmp
fistl
xorl
cmp
pop
in
call
jge
xlat
imul
sbb
mov
clc
fistl
jecxz
or
setge
flds
cmp
loopne
push
push
jle
jae
jne
popa
inc
adc
cmp
notl
repnz
and
adc
push
nop
std
or
iret
inc
mov
ljmp
jae
push
mov
cld
xorb
pop
outsl
stos
repnz
fcoml
sbb
push
out
pop
jmp
fldt
sub
or
cmp
dec
jmp
cmp
icebp
mov
aam
cmpsb
cmp
sub
mov
decb
sub
add
push
inc
out
jmp
sahf
cmc
cli
add
insb
rclb
inc
popf
fwait
test
and
sbb
stos
roll
es
je
mov
pop
adc
stc
xorb
iret
in
cmpsl
sub
enter
ljmp
push
pop
sbb
lcall
mov
lods
inc
adc
out
mov
cmpsl
fisttpl
push
lods
cmp
fdivrl
xor
push
cmpsb
xor
push
inc
pop
xchg
and
adc
mov
mov
cmp
loope
test
push
outsb
into
inc
movsl
jnp
in
lods
in
ds
mov
mov
push
jns
mov
outsb
push
inc
jmp
mov
mov
sti
mov
inc
cmpsl
fisubrs
add
jno
outsb
dec
sbb
xor
add
fs
cmp
push
and
push
jmp
sbb
push
inc
mov
pop
lods
out
es
mov
mov
jmp
mov
out
sbb
or
xchg
adc
jecxz
and
mov
lea
rclb
sbb
sbbl
dec
repz
pop
mov
leave
outsl
iret
mov
xchg
push
adc
lods
push
jle
or
dec
sub
jns
jle
xor
shrb
push
jo
sti
sub
mull
jg
std
call
mov
lods
mov
mov
and
in
mov
mov
mov
call
xchg
jle
in
dec
pop
xor
scas
xchg
mov
stos
je
mov
or
pop
imul
pop
pop
ljmp
fdivr
xor
mov
and
cmpsl
cmp
fstps
dec
insb
and
pop
dec
inc
fs
lret
add
pop
loopne
or
sbb
adc
insb
popa
rolb
and
mov
add
mov
imul
rcll
xchg
push
jns
mov
movsl
push
and
pop
cltd
mov
xor
jl
insl
andb
mov
dec
or
mov
stos
in
push
cli
mov
adc
out
or
faddl
aas
mov
adc
rcll
addb
pop
test
les
cmp
xchg
mov
cmpb
push
icebp
adc
or
mov
or
ja
mov
xchg
or
pop
mov
cli
xchg
mov
cmp
std
ss
mov
int3
mov
mov
pop
jp
mov
loop
dec
sub
mov
cmp
insb
mov
out
in
cmp
sbb
push
sbb
lods
mov
and
fs
int3
test
popf
dec
jno
sub
fisubrl
xchg
shrb
sbb
cmc
push
cmpsb
add
cmp
sbb
dec
stos
inc
pushf
dec
out
pop
in
dec
cmpsl
sub
pushf
mov
mov
sti
or
scas
mov
cmp
into
inc
fs
addb
cld
int3
arpl
add
clc
ficoms
dec
daa
stos
adc
xor
rcr
es
ror
adc
jne
fs
comiss
xor
xchg
ja
sbb
shr
fcmovne
jge
imul
mov
fldlg2
sbbl
insl
inc
cli
ret
mov
xchg
out
and
or
and
and
je
sbb
mov
les
jns
lea
inc
mov
sbb
xchg
mov
js
data16
sub
sub
pop
ja
loope
daa
sub
je
add
notb
jne
cmp
cmp
mov
cmp
sti
push
movsb
stos
mov
arpl
icebp
shl
mov
xchg
scas
gs
add
push
dec
push
mov
sub
cmp
and
in
xchg
shl
scas
mov
sbb
push
or
lods
stc
ret
add
push
mov
sub
lock
or
ja
arpl
loop
mov
or
push
adc
sti
sti
and
setb
push
loope
pop
cwtl
cmc
mov
push
jbe
mov
aam
push
sbb
cmp
and
pusha
lds
out
dec
xor
outsl
pop
dec
add
shrl
shrb
cmp
repnz
std
cmp
or
xor
lods
add
pop
not
sub
push
daa
stos
pop
lahf
mov
and
pop
stos
push
and
adc
inc
lret
in
popa
cwtl
dec
std
push
fisubrl
xor
push
and
loope
sub
test
mov
push
in
or
lahf
mov
dec
xor
or
subl
test
ret
bound
add
mov
cli
or
ret
pop
loope
cmp
cmc
adc
and
xchg
dec
mov
clc
mov
sub
lock
jg
dec
inc
idivb
cmpsb
repnz
cmp
insl
add
sbb
mov
pop
test
les
fists
adc
mov
icebp
push
jbe
sbb
mov
mov
ret
xor
das
inc
cmp
incb
adc
in
aam
test
das
aaa
cmp
dec
jp
pop
and
xchg
iret
dec
or
push
jp
add
out
inc
call
ljmp
fisubs
xchg
mov
pop
xor
mov
and
xchg
dec
add
push
mov
jbe
adcl
iret
jno
mov
pop
cwtl
mov
movsb
outsl
jns
pop
push
mov
mov
icebp
adc
fisubs
mov
fnsave
or
popf
aaa
pop
push
or
cltd
xchg
lret
push
add
jle
ds
mov
push
mov
pop
adc
call
inc
and
xchg
mov
sub
mov
pushf
adc
mov
lcall
ss
inc
add
in
in
mov
dec
jo
imul
push
icebp
inc
sub
push
push
jg
dec
inc
push
sub
adc
dec
in
or
cmpsb
dec
or
lret
jno
sub
pop
lcall
aaa
ja
and
pusha
sbb
ficompl
mov
je
mov
mov
sub
repnz
data16
sbb
int3
jns
outsl
in
clc
call
mov
clc
jg
add
das
pop
push
mov
push
mov
and
adc
mov
and
jae
fs
sub
fs
mov
sub
inc
mov
mov
pop
je
inc
mov
sbb
xchg
jg
jecxz
push
aaa
cld
or
push
sbb
adc
push
sbb
mov
ret
dec
sub
push
push
adc
imul
popf
movsl
mov
mov
fstps
push
sarl
push
push
mov
sub
pop
pop
test
rcll
adc
xor
in
sub
fsubrl
dec
loope
rorb
int3
cmp
mov
or
or
jae
cld
lods
clc
push
dec
xor
outsb
iret
js
ficoms
mov
out
stos
mov
outsb
xchg
pop
orl
popf
lea
adc
sbb
pop
xor
cmp
push
mov
testl
push
xchg
arpl
and
mov
icebp
mov
cmc
scas
aam
cmc
ret
pop
pop
jg
jp
rcrb
leave
ret
cmp
stos
aaa
stos
xchg
pop
xor
xchg
mov
mov
xor
loopne
icebp
iret
es
xor
pusha
fidivrl
dec
sbb
push
out
lret
sub
pop
in
imull
sub
push
push
cltd
out
mov
or
lret
and
mov
scas
lret
and
fsubl
jne
shl
cli
sub
fildll
sbb
xchg
enter
movsl
or
inc
xorb
xor
xchg
insl
repnz
and
loopne
xor
stos
repnz
adcb
jle
lahf
xchg
mov
add
mov
jmp
jnp
test
sbb
push
cmp
cmp
xchg
push
popf
loopne
and
cmp
pop
call
or
adc
xchg
dec
pop
out
orb
xor
je
bound
mov
cs
jo
inc
cs
enter
push
adc
xchg
mov
das
dec
cwtl
jae
pop
lock
nop
into
push
negb
in
mov
and
rcll
cmp
cltd
in
test
stos
sub
lret
push
dec
jecxz
sub
push
out
lret
or
mov
sbb
pusha
lret
call
mov
fisttpl
inc
das
in
pusha
cmp
jl
loope
jno
es
adc
call
sbb
cmp
pop
jb
outsl
cmpsl
mov
fadds
pop
push
sub
sarl
out
inc
mov
fidivrs
pop
add
jne
cmp
pop
mov
jge
lds
repnz
push
outsl
sub
and
jecxz
fistpll
fwait
xchg
lods
dec
jge
mov
pop
dec
call
jge
das
call
insl
push
fdivs
mov
aaa
inc
lahf
cld
cltd
add
mov
push
push
jbe
adc
adc
dec
dec
dec
imul
addl
sub
pushf
and
shl
out
xor
scas
mov
pop
mov
push
mov
in
and
xchg
push
stc
cmp
add
imul
push
bound
jmp
lahf
jne
nop
out
and
outsl
add
cmp
int3
mov
mov
cs
imull
clc
xchg
int3
std
lcall
sub
nop
or
orb
shrl
test
xchg
into
test
push
dec
adc
sub
cmp
hlt
push
jp
and
loop
pop
inc
push
mov
das
sbb
test
popf
lock
fsubl
fsub
std
cli
imulb
lock
cmp
iret
js
sbb
xchg
test
cmp
xor
mov
cwtl
enter
movsb
sbb
jmp
mov
addr16
inc
sub
test
mov
and
sbb
push
test
push
scas
jnp
rorl
jns
add
bound
mov
cmp
mov
xchg
inc
out
fmull
or
bound
inc
shlb
pop
int
fbld
iret
cmp
xchg
add
loope
repz
cmpsb
dec
in
or
adc
inc
pop
inc
pop
jnp
mov
add
mov
cld
cmp
lcall
mov
test
or
insl
xchg
aam
pop
inc
test
imul
mov
sbb
xor
shlb
adc
imul
sti
sub
jp
mov
xchg
cltd
int3
or
test
mov
adc
sbb
xor
call
lods
je
lock
cmpsl
in
das
divb
or
fs
or
jge
dec
dec
xchg
jnp
jge
test
push
push
hlt
adc
pop
xor
xor
ss
aaa
imul
add
fildll
rolb
je
gs
adc
push
mov
popa
addr16
bound
ret
cmp
adc
pop
add
shll
push
jle
test
and
jae
and
adc
pushf
mov
mov
stos
test
pop
repz
sub
cmp
bts
jne
push
dec
lsl
sar
shl
test
pop
xlat
fwait
popa
stos
lret
push
cs
addr16
daa
out
ss
leave
popa
xor
jle
es
pushf
popa
jl
add
lods
and
mov
xor
lock
mov
dec
in
out
inc
mov
cwtl
sub
xchg
test
bswap
mov
jl
mov
mov
dec
arpl
sti
das
sub
jne
xor
add
dec
aad
std
xor
fsubl
adc
ret
out
bound
push
pop
daa
sub
lret
adc
push
mov
out
jg
inc
lcall
sbb
sub
xor
movb
aaa
lret
push
es
and
add
dec
push
mov
add
add
push
xchg
mov
dec
pop
add
ljmp
and
push
fadd
rcr
scas
mov
loopne
pop
sbb
std
fsubr
push
movb
inc
sub
mov
into
cmp
imul
dec
mov
dec
pop
sub
adc
lods
mov
xor
stos
dec
push
push
xchg
jne
pop
popa
aad
sarl
pop
je
jne
push
dec
pop
scas
or
lret
jno
or
bound
and
inc
or
add
ja
stos
cmc
repz
mov
nop
es
cs
mov
arpl
loope
jo
lahf
faddp
inc
movb
mov
daa
sub
ljmp
neg
popa
cmp
out
data16
push
cli
sbb
push
test
adc
pushf
sub
nop
pop
xchg
out
push
aaa
in
jbe
mov
fstl
inc
mov
sahf
mov
mov
cltd
imul
mov
notb
jo
pop
nop
cwtl
cmp
xor
outsl
mov
pop
push
mov
jecxz
imul
pop
pop
jne
movsb
das
stc
cmp
sti
xor
cmp
adc
loope
or
mov
es
mov
adc
fbld
fldcw
mov
pop
negb
pop
sub
sbb
jb
std
jno
dec
dec
mov
adcb
cli
and
rol
in
fisubrs
push
mov
and
stc
je
in
int
mov
test
add
repnz
and
mov
or
xor
cltd
ljmp
cmp
pushf
test
clc
aad
inc
adc
push
mov
inc
cmp
xchg
fisubrs
jg
sub
push
lahf
mov
ror
sub
sahf
add
or
or
mov
test
xor
push
cmp
cmc
mov
test
pop
adc
inc
shl
add
adc
and
jp
cld
outsl
pusha
leave
pop
mov
adc
stos
fistpl
xor
push
inc
xor
sub
jo
pusha
adc
mov
repz
loope
iret
xor
aas
imul
out
dec
or
or
je
xchg
push
std
sub
and
out
aad
addb
mov
jge
outsl
test
mov
inc
and
subl
jecxz
nop
lret
add
mov
mov
out
xor
and
add
pop
bound
das
in
or
aas
fldenv
xor
or
and
and
mov
cli
adc
push
shrb
int
xor
sarb
push
sub
adc
test
cs
dec
inc
aaa
adc
mov
adc
mov
call
mov
add
xor
or
adc
and
aas
ret
fyl2xp1
enter
adc
mov
inc
jg
push
pop
pop
rolb
add
cmc
iret
adc
insb
and
arpl
popf
out
sub
lods
pop
cmp
push
add
scas
shr
es
test
test
push
pop
fs
into
adc
xor
or
jg
jp
adc
je
out
mov
sub
mov
scas
mov
decb
in
jb
in
dec
or
sbb
pop
mov
push
cs
jge
cmpsl
repnz
sbb
pop
sbb
inc
and
aad
test
sbb
mov
packssdw
push
lods
push
mov
mov
xchg
movsb
sub
test
sub
aam
mov
faddl
inc
je
lock
cmpsl
or
push
push
cwtl
cld
pop
popf
cmc
enter
adc
imul
adc
mov
out
out
dec
enter
mov
cmp
cmpsb
out
push
or
test
dec
jbe
xor
xchg
cltd
xchg
int
pop
shrb
int
inc
fwait
movsb
dec
nop
jp
cmp
aas
add
mov
pop
sbb
jl
jb
jnp
add
add
insb
xor
cmpl
jbe
mov
loope
xchg
mov
or
mov
out
xchg
or
rcl
add
loope
inc
int3
lods
xchg
cmp
icebp
push
movsl
ss
jnp
or
and
jl
fisubs
jle
sbb
addb
or
bound
jns
and
jns
mov
dec
and
daa
sub
xor
stos
dec
jp
bound
imul
xchg
or
sub
data16
xor
sti
lea
movsb
pop
xor
dec
sub
sub
push
in
pop
mov
mov
cli
adc
jp
xchg
addr16
jmp
pop
negl
pop
cmp
adc
or
out
cmpsl
les
sbb
ret
mov
mov
adc
add
imul
mov
adc
xor
lods
mov
shl
push
fldt
sub
add
jg
addr16
push
jp
aas
insl
fcompl
bnd
arpl
inc
add
xchg
mov
movb
mov
sbb
xchg
adc
jno
mov
fmuls
sub
mov
jecxz
cld
mov
mov
in
nop
stos
xchg
adc
jecxz
inc
mov
sbb
dec
push
shrl
cmp
or
xlat
cmpsb
pop
or
and
push
lods
nop
call
stos
xchg
mov
daa
popf
or
mov
and
rcll
or
push
rorb
movl
push
mov
pushf
push
mov
lcall
adc
fbstp
dec
mov
or
loope
add
pusha
cmpsb
push
xor
cmpsl
ds
mov
inc
xor
cmp
add
mov
pop
dec
pop
sub
mov
cmp
dec
outsl
ljmp
leave
mov
aad
or
sub
dec
nop
mov
mov
push
pop
jbe
ja
xchg
push
mov
mov
inc
ret
clc
popf
js
mov
jnp
ja
loopne
scas
lods
cmpsb
or
pop
ret
mov
ret
bound
and
mov
or
sarl
sbb
xor
jmpw
cld
adc
mov
pop
jo
inc
adc
iret
js
cwtl
sub
enter
xchg
add
test
jl
mov
mov
ds
mov
pop
outsb
pushf
jecxz
mov
inc
push
cmp
lret
out
rol
jle
jmp
pop
cmp
imul
push
icebp
sub
dec
cmp
push
daa
and
lahf
xchg
mov
add
push
adcb
xchg
add
sbb
xchg
mov
jecxz
lret
scas
xchg
mov
rcrb
adc
cs
stos
cs
jo
div
dec
stos
sub
stos
inc
jge
jmp
xchg
andb
stc
and
in
test
lods
sbb
lea
test
sti
call
mov
test
dec
xchg
stos
or
xorb
add
sbb
les
jp
pop
rol
adc
jle
dec
cs
cs
das
test
cltd
decb
jns
filds
inc
sub
mov
pop
xchg
and
pop
mov
jb
lea
movsb
dec
sbb
lret
cmp
lea
or
loope
mov
loopne
lret
xchg
inc
add
sbb
pop
test
mov
imul
jecxz
and
xchg
outsb
and
or
jp
mov
and
xchg
mov
adc
add
push
sbb
fwait
rcr
lret
add
dec
lods
jno
lods
xor
mov
or
test
lods
outsb
cmpsl
mov
inc
stc
sbb
push
scas
jae
notb
hlt
cmp
mov
or
sbb
or
cli
scas
in
sub
sti
fs
or
pop
arpl
shlb
mov
lahf
and
fisubs
aam
pop
add
or
lret
sbb
addr16
cmp
lahf
pop
jb
pushf
iret
out
pop
hlt
cmp
push
jp
add
lods
out
ficomps
cli
cmc
jge
adc
mov
sub
xchg
push
adc
cltd
shlb
popf
pop
fldcw
xchg
jne
loope
and
pop
aas
mov
push
mov
xchg
ja
mov
jbe
and
test
adc
jge
pop
stos
sbb
subl
outsb
imul
xchg
insb
push
adc
push
mov
test
adc
test
shll
mov
lcall
movsb
rolb
mov
inc
pop
les
jl
adc
pop
cmp
repnz
hlt
arpl
shr
mov
rolb
lds
call
pop
je
adc
aas
pop
testb
ja
xchg
mov
mov
pop
or
jmp
fs
dec
scas
mov
popa
push
cmp
fisubl
adc
mov
out
xchg
loopne
pop
gs
xorl
je
in
mov
mov
cld
les
xchg
mov
inc
lcall
mov
mov
mov
in
rclb
stos
and
outsb
fdivl
imul
mov
dec
cmp
dec
cmp
sbb
jle
dec
xor
imul
out
jbe
cmp
mov
adc
and
mov
jg
mov
jne
or
mov
adc
adc
pop
xor
sbb
or
push
aas
lcall
add
add
add
pop
xchg
lahf
push
adc
xor
lods
test
add
out
mov
ljmp
jbe
add
xchg
mov
xchg
cmp
clc
add
push
mov
xor
pop
cmpsl
inc
sub
mov
push
push
fisttps
out
scas
cmp
inc
test
sub
adc
cmp
xchg
repz
in
add
mov
sub
inc
imull
pusha
dec
cltd
stc
and
mov
push
jmp
dec
and
jo
imul
ja
addr16
push
cmpsl
movb
fs
jmp
pop
int3
fimuls
pop
shll
push
test
movsb
xor
mov
mov
xchg
pop
sub
xor
cld
sub
int3
mov
pop
sub
sub
pop
xor
subl
sbb
ja
adc
cmc
or
pop
daa
imul
outsl
cmp
scas
xchg
enter
lds
aad
sarl
mov
inc
test
xlat
stos
outsl
push
mov
roll
mov
mov
jle
movsb
insb
and
cmpsl
fidivrs
out
pop
stc
lock
dec
je
xchg
add
fsubrl
ret
inc
add
mov
lea
int
jo
pop
out
xchg
out
fadds
das
adc
push
mov
and
pop
adc
lock
and
and
and
jmp
ss
outsl
or
test
loop
add
dec
out
out
mov
in
rcr
xor
push
push
cmpsb
sti
pop
add
mov
add
hlt
imul
mov
fisubs
or
movsb
sub
stos
push
pop
jnp
jl
xchg
jecxz
insl
cmp
pop
jo
pop
dec
arpl
das
push
add
in
xchg
in
subl
mov
sub
enter
int
mov
aas
or
xor
pop
mov
push
mov
roll
daa
add
cmp
ds
std
cmp
mov
sbb
gs
xchg
inc
mov
sub
xor
sbb
pop
mov
jns
mov
mov
cmpsb
cltd
les
and
repnz
or
xchg
icebp
or
test
add
pop
scas
cmp
adc
or
repnz
mov
orl
adc
cmp
mov
out
jge
pop
inc
inc
cmp
cmpsb
icebp
cmp
jmp
jle
iret
loop
dec
mov
shrb
push
add
pop
or
sbb
nop
loop
mov
mov
pop
fcomps
mov
scas
into
inc
xor
iret
or
dec
jle
fcoml
rcll
push
sub
add
push
lods
xchg
cmp
mov
jp
fneni(8087
xchg
ss
or
ja
add
scas
loopne
dec
shll
js
mov
ljmp
iret
inc
std
out
or
daa
dec
cld
test
test
mov
adc
mov
std
ljmp
imul
imul
inc
adc
jge
in
jo
popa
dec
and
xlat
gs
xor
aaa
cmpsl
imul
dec
test
xor
shll
enter
movb
push
int3
cli
subl
jge
call
testl
arpl
ret
insb
mov
mov
dec
push
mov
sbb
mov
mov
pop
popa
push
and
mov
xchg
jmp
gs
add
xchg
fadds
insb
add
mov
js,pn
adc
pop
dec
das
out
and
lret
mov
mov
in
mov
repz
fistps
insl
in
mov
add
lods
clc
inc
imul
out
pop
and
jbe
xor
xchg
aad
roll
and
sbb
mov
cwtl
push
rol
xchg
in
xchg
out
arpl
enter
js
sbb
and
daa
or
movsl
ds
mov
push
cmp
xchg
insl
push
jno
rcll
fsubrs
xchg
mov
mov
xor
or
or
ljmp
mov
and
cmpsb
jle
inc
fs
adc
pop
inc
mov
mov
cwtl
mov
lock
jne
jp
dec
xchg
cmpsl
pushl
jae
mov
mov
lcall
jne
lret
aas
sbb
add
nop
jl
cmp
sbb
add
add
sbb
int
push
mov
pushl
popf
hlt
xchg
cmc
cmp
mov
fldenv
pop
orb
scas
adc
out
movsb
test
mov
push
and
orl
push
push
jo
jae
xchg
arpl
or
fstps
add
fst
pop
or
hlt
add
sarb
inc
into
mov
mov
xchg
mov
lods
or
or
lock
lods
sbb
in
dec
mov
scas
mov
jmp
push
mov
mov
xchg
in
adc
inc
and
in
mov
pop
sbb
cmp
mov
gs
pop
bound
loope
jne
xchg
lods
sub
in
testb
gs
and
lret
and
enter
fbld
add
shlb
hlt
outsb
mov
das
xor
jecxz
pop
adc
push
push
shrb
sbb
and
add
in
jnp
ja
jg
push
pop
mov
xchg
and
inc
shl
cld
xor
in
pop
adc
sbb
mov
testl
outsl
mov
loopne
cs
repz
xlat
xchg
sbb
lds
lahf
and
mov
add
pop
sub
push
adc
xchg
inc
insl
xchg
movb
mov
cmpxchg
xor
movsl
push
jnp
mov
jecxz
int
scas
mov
outsb
pop
sarl
aad
xchg
daa
mov
dec
or
test
inc
rcll
cmc
mov
je
lods
adc
das
nop
pusha
and
fisubs
and
les
sub
push
jle
push
shrl
pop
inc
mov
cmpsl
pop
jp
mov
lcall
pop
mov
sbb
dec
and
lods
shrl
cwtl
outsb
repnz
mov
and
xor
xchg
sbb
push
xor
push
xchg
lret
pop
lret
jne
lahf
mov
add
mov
stos
pop
imul
rcr
or
insb
lea
mov
ja
int3
push
inc
inc
imull
inc
outsl
xchg
dec
int
fdivs
daa
dec
std
adc
test
push
inc
insb
icebp
std
push
push
jl
jg
mov
in
xchg
frstor
push
outsl
stc
ds
push
jge
dec
pop
fsts
dec
fs
mov
jp
les
popa
mov
lods
jae
jns
mov
mov
cwtl
mov
xchg
fimuls
and
pop
movsb
cmp
xchg
mov
sahf
icebp
or
lret
mov
push
subl
pop
mov
mov
push
mov
xor
pop
mov
and
pop
test
push
jae
lret
loop
jae
sub
inc
xchg
jg
mov
ret
jle
fs
push
cmp
in
test
push
jno
sbb
repnz
or
push
cmp
out
mov
xor
mov
shrb
ret
ficompl
pop
ljmp
test
iret
pop
movsl
xchg
cmp
mov
sti
lds
adc
cmpsl
out
aas
adc
mov
add
push
cmp
jns
xorl
add
jge
out
push
sbb
lret
cs
mov
push
cmpsl
jo
push
fbld
add
mov
inc
daa
scas
jnp
in
adc
cs
push
xchg
leave
les
aaa
pop
je
and
cld
mov
imul
out
clc
mov
mov
xchg
adc
add
test
push
and
ret
xor
cld
enter
aaa
add
aas
push
xchg
mov
add
jmp
fstps
pop
dec
adc
fldt
loope
cwtl
adcl
fidivl
xor
std
sub
rclb
scas
add
adc
mov
or
jno
cmp
cmp
pop
xor
push
push
test
clc
xchg
xchg
inc
mov
enter
dec
stc
xor
js
loope
rolb
or
mov
xchg
xchg
int
cmp
fs
cmp
dec
and
jp
pop
mov
pop
outsl
out
addr16
inc
push
jp
inc
xchg
ljmp
cmc
pop
sub
in
add
stos
cmpb
xor
and
js
cmp
rcrl
test
sbb
sub
vunpckhps
lea
out
mov
addr16
sub
inc
cltd
jbe
mov
cltd
sahf
mov
mov
sub
popa
cmp
mov
mov
mov
shll
push
cltd
imul
lods
jmp
or
dec
arpl
xchg
mov
add
int3
sbb
test
xchg
scas
xchg
xor
popa
add
test
imul
and
sub
aas
adc
inc
inc
mov
je
push
inc
xor
adc
lds
jge
ja
bound
pop
repz
and
fidivrl
cs
jo
xor
jle
pop
leave
pop
ja
push
dec
push
push
loop
or
mov
xchg
lret
mov
les
dec
arpl
jnp
lret
jns
leave
sub
xchg
add
sub
je
fstpl
cmp
add
xor
cmc
sub
lods
shrl
mov
sub
ss
mov
xor
cmp
xchg
and
stos
sti
add
sbb
pop
stos
outsl
jle
jmp
mov
leave
push
mov
pushf
mov
mulb
mov
addr16
into
fucom
arpl
pop
sbb
out
lds
and
dec
jbe
xchg
mov
dec
inc
dec
dec
cwtl
inc
jle,pt
mov
xchg
ret
push
or
xchg
pop
aam
cmp
stc
jl
mov
and
fcomps
mov
fildl
dec
adc
xchg
mov
movsb
pop
cwtl
orb
adc
or
sbb
dec
and
sub
mov
mov
jp
xchg
dec
sbb
jg
clc
mov
sub
mov
rcl
or
test
cmpsb
in
push
cld
sbb
into
nop
and
cmp
mov
pop
and
push
cmp
jo
or
imul
mov
mov
sbb
andb
les
add
sub
sbb
adcl
add
in
xor
mov
inc
addb
aas
lret
in
mov
rolb
inc
loopne
int
xor
divl
or
xchg
into
js
sbb
idiv
stos
sbb
pop
loopne
push
les
cwtl
sarb
sti
jb
inc
stos
xchg
test
daa
xor
in
in
out
adc
shlb
cmpsb
mov
test
and
pop
fmuls
fs
push
xor
lods
stc
lret
adc
push
jmp
imul
push
mov
sbb
ss
out
xchg
subb
push
mov
cli
jns
or
push
or
aad
out
xor
test
xor
sbb
pop
fnstsw
mov
or
push
pusha
mov
sti
push
int
ds
rolb
xor
mov
mov
add
mov
xchg
sbb
pop
loopne
xlat
jecxz
pop
scas
incb
dec
ficomps
arpl
xchg
dec
jmp
inc
clc
mov
pop
cli
clc
adc
mov
dec
pop
xor
imul
ljmp
loope
push
xlat
xor
fisttpll
rorl
dec
add
roll
fstp
mov
dec
mov
hlt
sahf
inc
ja
xchg
inc
mov
imul
add
ucomiss
leave
fldt
cli
inc
shll
adc
ja
fs
inc
dec
loop
mov
jo
inc
out
pop
pop
shlb
out
ja
jl
aaa
aam
idivl
ja
aad
mov
lret
ljmp
fiaddl
and
in
pusha
pop
addr16
jnp
stos
pop
pop
out
int
xor
jb
mov
scas
sub
in
dec
std
jge
loop
rorl
test
mov
mov
aad
outsl
repz
fcomp
add
adc
sub
dec
insl
push
aam
inc
aam
mov
leave
les
xor
lea
and
aam
stos
iret
cld
test
mov
hlt
movsb
sti
mov
mov
ljmp
out
push
cmpb
inc
ja
stos
inc
jno
jo
inc
mov
xchg
out
mov
jnp
and
and
mov
xchg
add
push
rorb
push
hlt
jbe
loop
xlat
imul
pop
cmc
xor
pop
mov
test
push
inc
mov
aaa
idivl
fs
and
xchg
cmp
shld
push
sbb
sub
lods
lods
ljmp
shr
aam
sarb
adc
or
cwtl
mov
cmp
cmp
mov
loop
scas
dec
mov
inc
mov
in
sbb
scas
dec
movb
xchg
mov
loopne
pop
push
mov
mov
adc
dec
push
sub
mov
in
adc
inc
ds
cmp
sub
pop
xchg
cmpsl
adc
lods
pop
addr16
mov
or
loope
xor
or
mov
mov
pop
add
jle
loop
sbb
mov
scas
in
adc
mov
mov
imul
hlt
shrl
push
gs
sbb
dec
movsb
jg
jb
fisubrs
jae
sbb
and
lods
stc
mov
lahf
push
adc
imul
inc
sahf
arpl
and
icebp
adcb
mov
mov
in
dec
pop
mov
cmc
lods
pop
sbb
inc
push
pop
cwtl
adc
cmpb
mov
adcb
or
in
xchg
rol
fisubrl
sub
adc
test
iret
sub
dec
ror
rcll
cmp
test
adc
dec
adc
dec
adcl
fisubrl
cs
cmp
cmp
and
inc
push
mov
adc
setle
test
pop
pop
enter
rcrl
pop
pop
xchg
mov
inc
or
xchg
test
shll
test
xor
xchg
bound
cmpsl
pop
inc
sbb
and
lahf
mov
xor
inc
adc
out
into
pop
add
fsub
inc
stc
aam
push
or
inc
push
jne
inc
in
popa
lds
jmp
adc
in
iret
ffreep
push
es
data16
mov
movsb
test
sub
jg
sub
cmpsb
in
lcall
in
mov
imul
xchg
and
test
nop
xchg
lcall
out
les
inc
pop
test
dec
scas
cld
lock
sub
xor
stc
rclb
insl
cmp
fdivs
sbb
xor
dec
add
push
add
ja
mov
pop
cmp
xor
add
dec
imul
and
daa
cs
mov
push
in
inc
lods
jle
jecxz
cmp
sbb
and
das
jo
or
xor
insl
xchg
fistl
shl
xor
gs
lds
lcall
adc
xchg
loop
ja
sub
fldenv
and
dec
mov
pop
sub
adc
pop
mov
xor
sub
mov
or
push
cs
mov
adc
scas
icebp
and
adc
mov
dec
adcb
ss
nop
pop
push
data16
jo
push
mov
pop
or
insl
mov
xchg
in
pop
jg
add
jae
and
xlat
jle
test
out
jbe
std
dec
add
fsts
jne
inc
mul
andl
jo
shll
loopne
pop
lcall
shll
mov
mov
out
movsb
jae
jge
aam
xor
in
pop
subl
aam
out
loop
jno
fisubs
mov
ret
stc
lcall
mov
and
loope
dec
dec
and
out
ss
inc
mov
cmp
call
fisubrl
xor
push
push
sbb
jns
arpl
xchg
pusha
pop
sbb
mov
jmp
adc
or
mov
loop
jns
add
popa
push
movb
das
out
out
and
jmp
add
push
cmp
mov
loop
hlt
mov
loopne
jp
inc
or
inc
sti
std
sub
or
sub
or
test
jne
sar
iret
xor
mul
cld
mov
sub
andl
add
pop
sbb
xchg
call
dec
ja
iret
mov
cmp
scas
mov
inc
sbb
in
divb
aaa
nop
lds
push
iret
dec
inc
dec
je
mov
xor
les
push
and
test
mov
lcall
insl
push
jns
xor
dec
and
movsb
repnz
mov
mov
jo
mov
sub
mov
fsubrs
imul
loope
dec
lods
mov
aad
shll
je
outsl
enter
inc
adc
out
or
push
lock
test
adc
pop
dec
pop
or
jecxz
test
imul
mov
jb
xchg
insl
insl
leave
push
or
jo
add
popa
mov
or
inc
loop
ss
and
fdivs
rcrl
ja
inc
inc
jp
push
mov
push
stos
add
add
inc
push
add
ret
xor
jne
sbb
daa
jg
add
scas
mov
sub
jmp
stc
jge
cs
adc
mov
scas
mov
sub
sti
cmpl
adc
scas
push
xor
or
shrb
fidivrs
mov
js
and
and
jbe
xor
nop
shll
cmp
stos
jmp
pop
in
iret
arpl
sbb
jmp
dec
nop
push
dec
cmp
fbstp
idivb
int3
cli
jbe
adc
sub
call
clc
lods
xchg
scas
xor
arpl
inc
xchg
loop
mov
push
in
aaa
arpl
cmpsb
ja
andb
jmp
xchg
pxor
mov
and
sub
pop
push
lock
cld
cmp
dec
sub
pop
scas
imul
imul
jne
and
rolb
call
mov
xor
push
push
sbb
dec
cli
ss
mov
pop
lcall
add
cmp
jno
fs
out
push
daa
in
cmp
cmp
scas
mov
aaa
out
and
jnp
imul
cmp
into
int3
jle
fldenv
fstpl
add
or
adc
stos
icebp
mov
xchg
popf
insb
inc
scas
mov
sbb
jl
pop
or
cmp
icebp
outsb
xchg
push
inc
mov
fsubr
adc
push
push
push
mov
add
lret
shlb
inc
cmc
pusha
daa
outsb
cld
xchg
test
pop
hlt
es
mov
or
nop
shll
cwtl
sub
loop
xchg
cmpsb
mov
mov
arpl
fildll
mov
jp
mov
inc
push
iret
gs
and
dec
aad
pop
push
es
rorl
cmp
sbb
in
xchg
aad
add
mov
lock
imul
data16
push
adc
pop
xchg
inc
jge
inc
cmpsl
mov
call
inc
mov
ds
aas
in
ror
xlat
out
xor
dec
inc
pop
sbb
daa
push
dec
add
sbb
cmp
mov
clc
loopne
fdiv
mov
aam
fadd
stc
loopne
cmp
loope
scas
sub
mov
sub
jne
lods
in
clc
cmp
test
push
ror
pop
pop
mov
outsl
pop
pop
andb
scas
bound
push
mov
xchg
lock
mov
and
popf
jge
popa
sub
push
into
and
xchg
in
or
fmul
test
jg
movsl
clc
gs
inc
jecxz
cmp
aad
xchg
cmc
pop
mov
cs
jecxz
addr16
fldt
adc
shrb
mov
stc
mov
arpl
cmc
xlat
add
push
std
jb
insl
adcb
rorl
add
arpl
ljmp
mov
fldcw
inc
sub
scas
jecxz
pop
pop
leave
int
mov
stos
fwait
shrb
movsb
sbb
xor
push
jle
inc
aam
add
test
jno
mov
mov
push
dec
pop
jne
pop
inc
add
dec
outsb
int3
cmp
pop
xchg
shrb
lret
dec
dec
sbb
mov
stos
sbb
ret
popa
movsb
mov
jo
push
adc
ljmp
xchg
fwait
jns
incb
gs
cmpb
gs
iret
mov
lahf
xor
pop
inc
enter
xchg
push
and
in
mov
sbb
pop
push
add
adc
fdivrp
mov
xchg
push
cwtl
push
imul
and
fwait
xchg
sbb
hlt
or
imul
sbb
xchg
xchg
movsb
cmpsl
xor
aam
ss
adc
negb
call
adc
sbb
adc
dec
pop
xchg
mov
xchg
push
je
sbb
add
xor
lds
mulb
xlat
push
bnd
pop
push
jbe
popf
insb
cs
cmp
mov
mov
dec
sub
cli
or
pop
jae
lock
fxsave
jl
push
pop
sbb
sbb
fnstcw
subb
inc
xor
and
inc
push
adc
outsb
inc
pop
and
adc
pushf
mov
pop
or
inc
fildl
push
add
and
xor
cltd
mov
mov
rcl
add
mov
xchg
leave
rcr
xor
mov
inc
jo
jbe
leave
sub
jg
jbe
push
jne
sbb
inc
loop
pop
fwait
xchg
outsl
cmpb
subb
in
mov
sbb
jmp
and
std
enter
jecxz
add
add
and
sub
enter
xchg
stc
xor
dec
in
xor
push
shrl
fwait
enter
push
aaa
cli
pop
dec
decb
fists
or
mov
sbb
inc
arpl
pop
pop
add
pusha
adc
out
add
or
jecxz
add
ret
lretw
test
in
push
sub
or
fstl
test
inc
or
stos
test
dec
outsb
or
inc
gs
outsl
mov
fcomps
rcr
rolb
sbb
cltd
sbb
nop
test
push
pop
mov
and
dec
lcall
dec
mov
mov
out
pop
mov
and
mov
subb
andl
mov
stos
cli
rcl
out
adc
sbb
and
mov
mov
or
push
das
dec
sub
loop
inc
popa
bnd
fdivrp
mov
stc
loopne
int
addb
jmp
adc
inc
rolb
inc
nop
push
dec
inc
dec
lcall
es
or
fs
fdivs
push
sbb
pop
addr16
subl
ja
cmpl
popf
aam
nop
cmpsl
sub
and
and
fnsave
test
or
loop
cltd
jp
add
outsb
adc
fadds
and
add
andl
sbb
and
and
adc
dec
and
movsb
sbb
dec
sbbl
push
and
adc
or
adc
adc
xor
es
sbb
dec
jmp
xor
mov
scas
inc
adc
pop
adc
sbb
dec
xor
sbb
pusha
or
stos
xor
dec
loope
nop
mov
movsl
dec
jmp
loopne
pop
es
lds
dec
mov
mov
addr16
sahf
and
ret
or
pop
mov
or
mov
popa
pop
bound
nop
loop
xchg
test
imul
add
mov
push
add
aam
add
lods
inc
aas
add
std
add
cmpsb
cwtl
xchg
push
andb
enter
testl
and
in
and
sbb
adc
cmpl
push
test
cli
xchg
sbb
or
or
xchg
mov
pop
adc
jne
jb
loop
or
xor
inc
xchg
sbb
and
fisttps
push
pusha
in
stc
ljmp
movsl
adc
push
out
sbb
jne
test
or
pcmpeqb
mov
push
or
cli
add
pop
dec
ss
push
adc
mov
jno
xor
enter
mov
cmp
jl
mov
mov
xor
add
les
sti
jmp
jbe
mov
mov
xor
inc
mov
insl
pop
mov
push
adc
xchg
outsl
les
cmc
inc
jo
roll
add
sub
in
adc
adc
or
inc
xchg
dec
mov
leave
push
adc
inc
adc
adc
or
mov
xchg
mov
mov
cmc
sahf
ret
adc
ret
sbb
bound
idivb
mov
sub
sub
xor
inc
daa
nop
sub
dec
rcrb
xlat
xor
add
mov
jb
adc
loope
push
andb
and
insb
push
add
jmp
hlt
in
adc
jnp
sarl
jg
icebp
out
flds
or
xchg
in
and
xor
jg
addr16
shll
dec
js
insb
loope
daa
lock
andb
sub
pop
dec
out
notb
into
outsl
rep
notl
push
push
lods
call
sub
fldl
test
and
enter
sub
adc
adc
push
mov
jno
cmc
test
std
ret
cmp
fsubrl
adc
repnz
das
leave
dec
jmp
adc
stos
mov
cltd
sub
pushf
retw
pop
cltd
call
jo
jnp
inc
ja
js
adc
lods
icebp
mov
cmpb
out
out
and
adc
push
daa
orb
adc
hlt
cmpps
outsl
inc
scas
nop
sub
inc
aaa
nop
cmp
pinsrw
pop
add
iret
nop
rcll
jns
mov
or
orb
dec
sub
sahf
sbb
jne
out
xor
sub
mov
out
mov
and
sub
cs
out
adc
mov
fdivrs
cmpsl
outsb
out
and
jo
sub
out
ljmp
scas
mov
das
mov
and
and
mov
and
lods
in
fst
xchg
nop
mov
ja
sub
mov
icebp
add
cmp
pusha
sub
scas
xchg
dec
jne
pop
and
dec
in
loope
inc
cmp
clc
xor
mov
mov
mov
push
test
sub
and
mov
pop
pop
and
imul
loop
cmp
and
mov
add
xor
sub
adc
divb
mov
data16
scas
outsl
sub
stos
shll
lcall
mov
addb
cmpsb
out
mull
bswap
sti
inc
inc
pop
add
push
aam
jnp
jnp
and
test
mov
rcrl
add
mov
sbb
jl
insb
shrl
idivl
nop
inc
sbb
add
jle
or
out
test
minps
fldt
outsb
jno
popf
inc
in
sub
stc
int
sub
mov
lret
inc
shlb
nop
xor
mov
pop
in
dec
ja
popa
stc
add
xchg
sbb
or
xchg
cmc
push
ja
xor
mov
add
roll
data16
loop
hlt
jl
mov
movsb
sub
inc
sbb
callw
cmp
or
pop
cmc
inc
je
roll
lcall
xchg
adc
push
movsb
popa
pop
sbb
dec
in
insl
jbe
push
jne
out
sub
add
add
outsb
in
jl
andb
sub
push
pop
ds
addr16
ds
jae
push
cmp
jno
outsb
mov
xor
inc
sbb
jb
stc
stc
cmc
incb
jbe
pop
push
shl
add
into
pop
sub
sub
loopne
pop
mov
cwtl
jns
inc
jge
out
mov
aad
aam
stos
out
or
xchg
pop
ret
inc
shrl
mov
mov
sarb
mov
cmpsl
lret
xchg
out
hlt
loop
inc
lret
decl
fsubr
fiaddl
out
adc
cli
mov
stos
adc
and
jg
out
incl
dec
dec
push
xor
cmp
mov
pop
pop
push
hlt
push
jmp
dec
test
inc
rol
das
sub
xor
fdivr
xor
xchg
scas
xor
jno
mov
mov
jmp
loopne
stc
add
dec
mov
cmpsl
das
das
jns
sub
aas
out
or
mov
pushf
mov
mov
xchg
dec
ljmp
push
push
hlt
push
jo
add
aaa
pushf
push
pop
xor
hlt
lahf
icebp
ret
jl
bound
pusha
lret
out
mov
mov
mov
push
stos
icebp
or
cmpsb
xor
pop
and
es
test
fstl
cltd
xchg
pusha
aad
int
jne
cmpsb
adc
sbb
mov
adc
stos
std
jo
jo
std
push
lea
mov
inc
dec
outsb
ret
andb
xchg
aam
xor
jno
iret
mov
pop
inc
gs
push
adc
insl
and
test
push
bound
outsb
mov
inc
inc
or
adc
lcall
inc
sub
dec
cld
sub
and
cmp
add
mov
xchg
cmp
out
sbb
sbb
jmp
push
bound
inc
pop
push
ds
or
loopne
jo
jecxz
pop
jecxz
xor
call
push
xorl
cmp
mul
and
adc
es
data16
jne
das
mov
adc
stos
das
lahf
mov
inc
inc
sub
or
aas
inc
add
leave
cmpsb
push
dec
xchg
ret
jge
test
ljmp
clc
adc
xchg
add
test
or
fidivrs
ret
dec
sti
cltd
out
or
push
sub
movsl
lods
and
dec
and
orl
test
cmp
jae
xor
add
in
inc
stos
nop
xchg
loop
dec
sbb
xchg
hlt
es
push
lcall
jns
imul
xchg
insl
adc
mov
push
xchg
aas
inc
lret
inc
sub
push
bound
push
popf
shrb
inc
sub
adc
cmp
jb
sub
aas
lahf
shll
test
lcall
mov
rcll
jp
push
mov
movsb
mov
adc
dec
or
xor
cmp
xor
rcl
dec
into
std
xor
rcr
dec
sbb
jl
je
and
jle
jg
and
stos
movsl
aas
enter
leave
mov
dec
adc
call
lods
js
mov
ja
das
daa
pop
addr16
dec
mov
scas
cmp
cmc
daa
push
cwtl
adc
je
ja
call
inc
mov
and
in
xor
int3
xchg
lds
lret
daa
rcrb
sub
xor
or
das
lcall
in
cwtl
xorl
or
repnz
jg
inc
and
cmpsl
hlt
in
roll
jne
and
xchg
repz
cltd
jp
adc
aad
xor
xor
inc
dec
and
jecxz
xlat
mov
fdiv
gs
jmp
lods
roll
pushf
negb
or
inc
jmp
cmpsl
movsl
cmc
mov
mov
ja
sbb
push
inc
inc
or
inc
sbb
pushf
mov
inc
cmp
and
dec
mov
mov
add
or
lea
repnz
mov
sub
xchg
sbb
jae
xor
stos
xor
adc
mov
jecxz
inc
mov
fwait
mov
outsl
inc
iret
stos
roll
xlat
adc
xor
sbb
fcoms
mov
scas
bnd
cltd
mov
dec
rcrb
mov
mov
mov
stc
ret
pop
pop
pop
adc
mov
mov
mov
and
call
and
or
mov
jbe
rep
les
mov
sbb
mov
dec
lret
cmp
and
fnsave
andb
jg
popf
or
and
xor
add
mov
stos
decb
inc
pusha
into
adc
ja
fbld
jne
cmp
sub
jmp
sbb
bound
mov
int3
jmp
insb
push
xchg
repz
inc
fwait
add
lock
movsl
sarb
icebp
and
sub
sub
lods
in
sbbl
hlt
sub
aam
js
sub
sub
out
xor
out
xchg
out
cli
inc
int3
xor
cli
scas
mov
xor
int3
jbe
or
lds
mov
sarb
push
xor
scas
mov
stos
jmp
jp
jnp
pop
pushf
clc
cmc
and
mov
mov
stos
sarl
dec
sub
jns
in
mov
sub
sti
pop
mov
sub
inc
in
xor
lds
lret
loop
lods
fdivrs
fildl
mov
xor
and
jo
mov
jmp
jno
lahf
lret
daa
adc
outsl
inc
inc
cmpb
xchg
sbb
pop
dec
insb
cli
jg
push
adc
and
xchg
int
sbb
mov
je
cmp
sbb
pop
sbb
daa
repnz
xor
mov
imul
lahf
pop
xor
int3
jnp
xchg
mov
out
stos
leave
ss
adc
mulb
into
push
push
popa
in
mov
arpl
js
cmp
push
mov
test
movsb
sub
mov
push
and
shl
aas
nop
pop
popa
adc
or
inc
push
cltd
enter
aas
test
mov
push
add
insl
inc
jns
movd
push
adc
mov
fldt
aas
nop
inc
les
add
xchg
push
inc
notl
fs
adc
add
dec
push
inc
sbb
bound
aas
pop
enter
or
xchg
xor
lea
jg
ret
int3
ret
test
inc
sbb
hlt
aam
loopne
push
add
jb
or
sbb
jecxz
repnz
jo
inc
xchg
jge
mov
std
inc
mov
jge
test
push
dec
xchg
cmp
in
xor
sub
ss
or
out
addr16
mov
pop
lcall
mov
lahf
xchg
icebp
aam
push
jle
test
lea
pop
jle
jl
push
mov
fimull
adc
push
pop
dec
and
inc
dec
jns
loopne
and
push
into
cmc
scas
and
pop
adc
xlat
sub
into
es
clc
cmp
hlt
ud1
imull
mov
shl
sbb
lcall
nop
mov
pop
dec
mov
mov
outsl
adcb
jmp
ret
in
subl
mov
inc
inc
adc
xchg
jno
arpl
adc
popf
outsb
mov
in
cmp
outsl
or
cmp
cmc
shlb
roll
sbb
fcmovnu
fdivrl
call
adc
scas
xchg
popf
test
jno
pop
ret
mov
mov
cmc
add
add
sbb
pop
clc
hlt
je
mov
mov
xchg
ret
aam
push
push
rcl
inc
sub
rolb
scas
gs
mov
pusha
push
mov
xchg
jne
les
jl
movsb
jmp
enter
adcb
fiadds
push
bound
scas
sahf
jnp
sub
int
das
inc
jo
sahf
xchg
scas
and
test
add
adc
cli
rcrl
inc
pushf
xor
in
or
lock
aad
fs
std
push
add
pop
pop
and
and
dec
adc
pusha
icebp
shlb
jne
mov
xchg
iret
sub
hlt
or
cmp
movsl
aad
fnsave
pusha
jmp
or
xchg
dec
movsb
mov
jmp
bound
mov
pop
jmp
adc
add
aaa
aam
adc
mov
xchg
mov
sbb
into
jp
mov
xchg
mov
loope
sbb
xchg
mov
cmpl
fisttpl
fmuls
mov
adcb
ficomps
dec
hlt
out
dec
sub
jo
lods
xchg
mov
mov
inc
les
or
jae
leave
pop
xor
sub
scas
je
push
xchg
push
mov
pop
je
mov
call
mov
adc
mov
xorb
jae
lea
lret
inc
flds
xlat
push
rcr
nop
push
lahf
push
or
pop
xorb
xchg
test
jb
and
lds
out
fstl
sbb
push
pop
sub
rcl
pop
dec
push
not
xchg
rorb
push
or
outsb
jle
xor
fwait
mov
pop
loop
sbb
xor
adc
sbb
out
std
fildl
jg
ret
inc
push
mov
adc
push
xchg
add
push
dec
jmp
jo
pop
pop
cltd
shl
cmp
inc
into
and
or
adc
insb
shl
xlat
add
dec
sbb
in
xchg
test
hlt
mov
or
push
add
jne
lock
mov
add
ja
jg
adc
xchg
jne
push
notb
insl
or
mov
pop
mov
ret
out
loopne
mov
xchg
inc
nop
out
outsb
mov
aas
sub
inc
aad
dec
inc
mov
xchg
in
cmp
fcoml
pop
aad
arpl
lahf
jne
add
mov
jb
mov
jl
jmp
jge
dec
lds
inc
es
push
andb
repnz
or
adc
sarb
jp
pusha
mov
movb
popa
cmp
push
test
test
mov
enter
stos
fdivrl
fcmovnbe
sbb
cmpsl
inc
jbe
stos
mov
push
aad
sub
cmpsl
cmp
push
sub
test
dec
sub
insb
pushf
jg
and
gs
sbb
mov
push
push
or
sub
xchg
fcmove
nop
and
sbbb
cwtl
out
cmp
xchg
daa
aas
iret
push
sbb
mov
lods
mov
stos
inc
nop
xor
stos
jp
loopne
xchg
and
fdivs
incb
sub
lcall
mov
std
test
pop
mov
dec
dec
sbb
push
inc
setg
xor
clc
xchg
xor
and
cmpl
adc
and
sbb
ja
mov
pop
and
stos
xchg
int3
fs
cmpl
add
enter
inc
cmp
xor
fdivrs
push
push
in
pop
adc
or
adc
aaa
push
jmp
xor
cmpsb
ds
aad
mov
enter
push
pop
out
push
mov
push
lret
add
in
jg
inc
dec
bound
outsl
in
insl
add
fcmovnu
dec
lcall
xchg
mov
icebp
sub
jp
jne
push
xchg
dec
and
dec
rcll
jb
leave
inc
into
insb
test
cmp
add
mov
lret
out
jle
aad
inc
daa
das
fs
adc
aam
test
subb
and
frstor
pop
mull
and
cwtl
scas
fcomip
sbb
xor
mov
push
pop
mov
inc
xor
sahf
mov
stos
add
adc
xor
mov
cmp
pusha
push
cwtl
push
aam
jo
sbb
nop
dec
jle
cmp
sub
repnz
jmp
ljmp
mov
addb
xchg
popf
ljmp
dec
inc
push
mov
mov
inc
cld
sub
mov
fnsave
pop
add
cmp
loop
xchg
fidivs
rolb
dec
lahf
mov
sub
or
jno
add
sbb
push
aaa
lea
ljmp
adc
in
lock
int3
sbb
pop
inc
xor
xchg
mov
mov
test
pop
test
pop
push
or
mov
orl
dec
popa
xchg
push
sbb
stos
fldt
iret
popf
data16
in
mov
cmp
rorl
rclb
jne
jp
pushf
push
or
mov
pushf
mov
imul
push
mov
out
stc
call
push
sub
xchg
and
push
jmp
popl
xchg
xor
aam
push
mulb
cwtl
or
imulb
stos
sub
adc
or
out
aaa
add
jmp
insl
mov
mov
mov
xor
xor
or
xlat
sahf
pop
inc
dec
xlat
xchg
inc
pop
xchg
aad
jge
push
push
fstpl
stos
in
sbb
pop
ds
cli
insb
mov
adc
int3
or
sbb
mov
inc
jo
mov
roll
pop
jae
aaa
mov
dec
inc
mov
push
loopne
adc
xor
ret
stos
decb
daa
mov
pop
fxch
and
sub
push
cltd
cmp
pop
push
push
hlt
pop
adc
in
mov
jb
inc
icebp
loope
sub
scas
mov
loop
cld
adc
sbb
inc
pop
out
stc
clc
lds
repz
mov
ss
inc
and
sub
pusha
int3
inc
ret
pusha
jmp
lock
jle
incl
test
jb
xchg
adc
cmp
xchg
cmpl
mov
mov
mov
js
aaa
imul
cwtl
pop
popa
sbb
imul
add
mov
jae
fstpl
das
fnstenv
pop
hlt
add
inc
cld
mov
lcall
cltd
dec
and
lods
xchg
push
repz
cltd
jb
add
in
mov
push
mov
in
mov
addr16
dec
add
scas
jge
clc
xor
push
pop
sub
loop
lcall
ds
maxps
jg
dec
push
pusha
in
aam
dec
rcr
dec
pop
add
jo
jge
js
fldenv
sub
inc
xorl
xchg
push
pop
pop
sbb
push
ret
mov
xor
push
je
sbbb
pop
and
sbb
sbb
pop
inc
adcl
outsb
push
dec
lds
xor
adc
fists
jne
es
movsl
negl
stos
arpl
cmc
push
call
jne
push
in
loopne
mov
stc
mov
xor
inc
pop
sub
fdivp
add
insl
xchg
and
xchg
lret
mov
pop
and
or
outsb
push
and
inc
loop
fs
cmp
iret
and
xor
imul
enter
andb
repnz
push
jg
adc
ret
inc
push
aad
add
pushf
xlat
inc
inc
int
incb
test
pushf
xchg
mov
add
in
pop
testb
dec
mov
pop
xchg
jmp
cmpl
or
jmp
inc
xchg
out
stos
xlat
popf
sarb
pop
mov
roll
arpl
and
test
and
mov
adc
inc
data16
mov
pusha
mov
out
pop
dec
cmc
add
jg
xchg
mov
jae
fs
rcr
les
lea
pop
cwtl
sub
jno
daa
pop
xchg
fcomp
jle
inc
andb
mov
lcall
inc
xchg
add
jmp
jae
test
cwtl
sbb
outsb
push
mov
add
imul
fwait
cmp
les
stos
test
mov
mov
scas
ret
pop
sbb
pop
xor
pop
mov
xchg
cs
scas
movsb
popa
int3
inc
sti
mov
bound
scas
mov
lock
mov
jno
imul
into
cmp
adc
pop
xchg
repz
shrb
or
test
mov
mov
repz
inc
push
ljmp
sbb
jbe
push
xor
lock
pop
out
jg
push
imul
dec
cmp
sub
and
lds
bts
sub
jbe
adc
stos
cmpsb
iret
cli
test
stos
movsb
movsb
or
ret
cs
test
ret
ljmp
mov
stos
insl
pop
sbb
sarl
cwtl
fxsave
das
lods
out
lret
and
aaa
jns
jns
push
mov
xchg
je
bound
scas
mov
mov
push
push
mov
jl
pusha
out
mov
pusha
test
mov
int3
and
aas
or
scas
inc
jmp
add
or
dec
cld
cmpsl
xchg
sub
sbb
mov
in
mov
into
xchg
adc
popf
das
loopne
pop
or
dec
movswl
repnz
xor
jnp
jne
add
popf
xorb
mov
cmp
sbb
daa
pop
pop
cmpsb
sub
es
adc
push
orb
pop
adc
xor
lea
test
jns
stos
mov
dec
xor
fwait
push
inc
lcall
jmp
aad
fs
add
clc
push
inc
loope
sub
cmp
inc
cwtl
test
and
push
lods
loope
stos
sahf
ss
or
push
sahf
add
cmp
out
lret
push
gs
and
test
cmp
je
shrb
push
pop
xchg
inc
add
cmp
push
push
cmp
jmp
mov
pop
icebp
inc
cmpsb
mov
cltd
repz
test
inc
cmp
xor
sub
stc
fisubs
sub
rolb
mov
cmpsb
loop
mov
ret
sbb
mov
leave
mov
pop
adc
popa
sbb
and
mov
jle
mov
rclb
sarl
jae
cmc
and
push
sbb
adc
fildl
pushf
out
cmpsb
dec
push
in
sub
popf
insb
xor
iret
iret
cwtl
adcl
or
lret
adc
pushf
pop
lcall
lret
push
fcos
lods
inc
sbb
sbb
mov
pop
sub
inc
add
rorl
cmpsl
fmul
jns
mov
loope
movzbl
or
inc
add
jp
push
sub
mov
adc
sbb
lret
fimull
testl
or
inc
out
out
push
cltd
mov
sbb
cmp
fnstenv
fnstenv
xchg
insb
sub
cli
jnp
scas
xchg
pop
xor
aad
leave
jge
ja
sub
out
mov
pop
mov
inc
or
sbb
lahf
mov
mov
sub
cmpb
adc
test
into
or
xchg
add
xor
fadd
movsb
adc
loop
into
mov
adc
mov
sub
pop
stos
lods
and
adc
jmp
jmp
dec
and
sub
mov
mov
adc
je
insb
push
test
test
xor
mov
mov
cmpsb
mov
xor
sbb
in
in
xor
int3
mov
cmp
out
xchg
or
leave
sbbl
ja
ffreep
adcb
xchg
inc
and
aam
idivl
xor
ja
pop
jge
shll
xchg
sbb
mov
nop
dec
sahf
incl
lock
xchg
push
sub
fcompl
clc
daa
mov
adc
jns
mov
sbb
sub
adc
daa
imul
push
mov
lcall
push
mov
cmpsb
pop
insl
mov
push
mov
dec
test
xor
out
sbb
mov
mov
ds
or
scas
movsb
xor
inc
mov
xchg
push
in
jmp
rol
ror
scas
sbb
adc
cmp
and
jo
lock
cmp
ss
btr
add
jno
pop
in
push
ja,pt
rsqrtps
push
cmc
test
push
pop
sahf
push
scas
mov
popa
lds
pop
cmp
sti
or
adc
int
inc
lock
stos
imul
lret
push
fsubrl
xchg
jle
js
push
pop
mov
jae
or
inc
mov
repnz
aad
jle
cs
ret
shll
cmpsl
sub
repnz
hlt
cmp
mov
sbb
je
push
jl
mov
ret
je
xor
cmp
sbb
aad
sub
jnp
xor
xchg
and
stos
pop
pop
cs
push
jae
gs
mov
and
mov
sub
faddl
icebp
inc
mov
hlt
cmp
mov
dec
sbb
mov
fildll
sub
sbb
and
imul
ret
out
dec
js
sub
mov
jmp
xchg
stos
cmp
jns
jae
xchg
xor
loope
gs
inc
pop
sbb
shll
jbe
pushf
stos
push
fmuls
jae
jmp
loope
sub
fcomip
and
inc
lds
xchg
movsl
sbb
dec
xchg
mov
pop
cltd
or
mov
les
jg
inc
sub
clc
dec
ret
cmpsb
mov
adc
mov
in
sbb
or
mov
sarl
mov
popa
or
repz
int3
iret
addb
sub
xchg
cmc
mov
pop
mov
sub
mov
sbb
xchg
cmc
pop
scas
lahf
and
xor
js
jecxz
xchg
pop
and
adc
mov
in
push
pop
adc
inc
fsts
xchg
jmp
inc
lret
outsb
xor
ror
adc
cmp
cwtl
push
inc
sbbl
xor
call
loop
push
inc
jl
cmp
jl
scas
jae
imul
pop
daa
dec
leave
les
mov
out
mov
xor
add
xchg
xchg
std
negb
outsb
push
clc
out
daa
mov
xchg
pop
sbb
dec
ficompl
out
adc
jg
adc
push
pop
mov
jge
pop
ret
bnd
pop
aas
fiaddl
out
es
mov
xchg
pop
enter
pop
or
sbb
or
or
pusha
sub
stc
dec
and
das
lods
pushf
rorl
iret
out
sbb
imul
sub
add
popa
ffreep
inc
lods
pop
mov
xchg
bound
pop
and
xchg
add
mov
inc
add
add
int
push
mov
mov
mov
xor
mov
and
lea
inc
mov
flds
mov
in
and
inc
jle
sub
pop
push
fs
inc
sub
adc
push
sub
inc
sbb
or
add
cmc
add
in
mov
mov
mov
mov
pop
push
mov
adc
cmp
pop
cmp
and
sbb
jmp
jnp
push
filds
dec
mov
mov
mov
lea
inc
xchg
xchg
add
sub
xchg
or
pop
inc
bnd
or
pop
inc
pop
inc
testl
push
loop
push
add
shrb
cmp
jo
or
sbb
das
or
xchg
pop
sti
jg
and
mov
xchg
push
push
inc
inc
inc
leave
and
pop
adc
pushf
and
sbb
push
and
or
and
add
jbe
mov
push
test
and
sbb
sbb
adc
pop
and
ljmp
inc
xchg
push
das
xchg
and
sbb
sub
std
cmp
mov
inc
fisubl
xorb
xchg
mov
sub
pop
adc
add
mov
cltd
inc
jecxz
movsb
mov
pop
jnp
mov
fdivp
clc
sahf
jb
mov
mov
gs
repnz
or
arpl
sub
pop
and
mov
mov
lock
sbb
push
dec
adc
and
mov
mov
push
loop
sbb
adc
and
ret
cwtl
add
and
and
inc
addr16
cmp
bound
hlt
arpl
pop
orb
ja
adc
add
pmaddwd
inc
jae
dec
nop
rorb
inc
std
mov
xlat
in
fildl
scas
cmp
ljmp
std
shl
es
fiaddl
and
imul
sbb
inc
mov
adc
shrl
or
cmp
mov
pop
andl
call
aaa
adc
pop
inc
sbb
cmp
inc
jge
int3
pop
inc
mov
xchg
je
cmpl
js
inc
nop
shll
ficomps
adc
mov
mov
mov
jno
aam
repnz
adc
adc
shr
push
inc
push
xchg
and
push
mov
push
call
cmp
addb
lahf
xor
nop
nop
fs
push
loope
or
pop
jmp
sub
fildll
mov
pop
xchg
inc
imul
cli
pop
jmp
add
sti
imul
or
call
lods
adc
data16
cs
aaa
aaa
call
mov
sbb
jbe
pop
cmp
shll
or
xor
or
or
adc
jns
add
ud2
mov
push
lret
mov
rol
shrl
out
adc
sbb
lods
push
inc
mov
jge
shll
or
sbb
in
push
leave
inc
lea
sbb
cmp
hlt
xor
jg
mov
mov
push
sbb
mov
test
int
cmp
das
mov
popa
pushf
frstor
xorl
pop
xchg
mov
cmp
outsl
fs
and
mov
icebp
mov
push
mov
jnp
push
mov
popf
imul
inc
fadds
push
imul
sar
adc
mov
js
jne
cmc
popf
movsl
jle
ja
in
inc
rclb
les
or
in
push
push
xor
dec
xchg
push
jnp
pop
pop
or
jecxz
cwtl
mov
mov
bsr
ficoml
sub
ret
aam
push
push
out
adc
ds
or
repz
in
loope
xchg
repz
sti
push
dec
mov
jae
inc
rolb
xchg
lcall
push
adc
mov
lds
sarb
push
and
jg
shll
outsb
adc
ret
and
ds
movsb
mov
jle
or
push
sub
enter
fisubrs
sbb
xor
push
jne
enter
or
dec
xchg
enter
and
dec
xchg
imulb
fwait
add
cltd
shll
push
push
call
lods
sbbb
lahf
push
lock
cmpsl
and
repz
cmp
pop
jmp
xchg
or
fwait
mov
inc
stos
xchg
mov
mov
and
pop
nop
inc
shlb
pop
andb
test
test
rorl
pop
inc
xchg
nop
or
lods
push
mov
and
xchg
inc
cmp
mov
cld
inc
fstps
flds
inc
cmp
movups
mov
push
insl
rorl
mov
adc
shr
and
ret
push
notb
aas
pop
inc
and
lea
inc
jnp
or
push
test
jns
push
lret
add
cmpsl
sbb
sbb
and
sbb
adc
mov
int
sbb
inc
repnz
js
adc
aad
mov
jl
or
andl
jnp
jno
inc
insb
rorl
add
testb
dec
sbb
and
lea
mov
inc
scas
xor
jge
mov
and
mov
add
inc
push
xchg
sbb
jmp
dec
mov
enter
inc
adc
xor
pop
lock
mov
lret
inc
mov
pop
nop
push
je
lods
inc
lods
or
or
dec
shll
fcoml
pop
test
cmp
sbb
mov
clc
std
jno
xchg
rcrl
fldt
jb
cmpsl
push
js
fildll
jge
js
popf
bnd
sbb
cmpsb
aam
pop
or
movsb
or
push
jo
and
sti
pop
mov
dec
aam
fiaddl
or
out
cmpsl
push
popa
cmpsb
push
shlb
add
mov
into
pop
imul
push
xor
jg
jge
out
lds
xchg
cmp
push
sahf
mov
push
dec
stos
and
lea
sahf
xorb
ret
xchg
arpl
sbb
inc
inc
xor
mov
and
mov
or
fimuls
scas
loope
push
add
adc
rorb
and
lcall
popa
push
fs
addb
inc
jne
push
daa
and
fnstcw
adc
scas
cmc
ret
loop,pt
mov
xchg
add
loop
in
push
cmp
jmp
and
sti
sub
dec
es
pop
mov
jp
mov
mov
mov
sti
and
xchg
push
xchg
or
std
jp
pusha
xlat
aas
or
aas
cmp
sub
pop
mov
pusha
mov
je
aad
sbb
cmpsl
jle
mov
into
ret
sub
xchg
mov
cmp
mov
jae
inc
dec
aas
dec
mov
testb
lock
push
or
xchg
loope
push
sub
loop
mov
stc
cmp
inc
les
je
mov
ret
ljmp
ret
xor
xchg
enter
shrb
cmp
and
xchg
ret
push
xchg
xor
cmp
loop
push
fwait
cmp
push
jecxz
ret
aaa
mov
pop
out
and
cli
cld
or
stc
jnp
lcall
mov
nop
mov
cmp
push
out
icebp
inc
mov
lret
dec
lock
mov
mov
cmp
fsts
lcall
insb
jns
adc
call
outsl
fsubrs
aad
in
and
adc
movb
inc
lret
xor
dec
xchg
sub
out
mov
scas
cmp
pop
xchg
push
jae
leave
in
es
pop
test
out
jae
push
out
cmp
xchg
mov
adc
adc
movb
mov
sbb
lcall
lock
shrl
ljmp
xor
adc
and
out
pop
imul
sub
data16
add
jg
insl
add
aad
addl
icebp
pop
mov
xchg
mov
cmp
add
pop
mov
fadds
inc
mov
scas
mov
andl
inc
iret
test
dec
mov
mov
jp
sub
mul
add
pushf
cmpsl
mov
fidivl
clc
js
aas
inc
and
and
jl
add
popa
mov
in
pop
adc
and
es
push
xor
xchg
sahf
xchg
std
pop
inc
mov
inc
hlt
mov
jnp
push
inc
scas
je
sub
stc
imul
jnp
lcall
push
ret
xor
cmpsb
add
and
data16
or
fdivr
mov
cli
cld
loope
mov
cwtl
daa
cltd
xchg
mov
mov
and
jnp
cmp
mov
scas
sti
adc
pop
and
inc
sub
push
mov
daa
adc
leave
outsb
mov
pop
pxor
mov
mov
dec
xorb
test
sub
sti
in
push
pop
lret
adc
in
or
xor
mov
lahf
les
xorl
stos
mov
xchg
lret
adc
stc
sbb
iret
or
xorb
jb
add
sub
popa
mov
mov
fwait
lret
push
sti
push
stos
add
rolb
mov
mov
dec
and
inc
lods
jmp
adc
popf
xor
adc
add
push
inc
push
or
in
clc
out
data16
push
addb
jl
push
add
in
ss
pop
ljmp
mov
aad
enter
push
mov
push
push
ss
or
xchg
jp
and
mov
mov
test
lods
or
call
lock
cli
test
stos
jb
scas
adc
ja
nop
sbb
mov
push
inc
mov
mov
ja
jge
fnstenv
cmp
mov
mov
pop
imul
into
jg
pop
mov
sbb
push
shl
xor
dec
sbb
je
pop
xor
push
dec
ljmp
out
mov
out
xchg
das
sbb
pop
insb
xorl
jge
lret
pop
jo
call
pop
cmp
icebp
xchg
out
mov
jl
fstl
lds
mov
inc
stos
test
push
ret
test
mov
jmp
iret
push
mov
sarl
adc
outsb
movsl
clc
fcoml
sub
test
inc
add
mov
ret
xlat
movsl
daa
mov
cmpsl
lcall
mov
test
je
cmpsl
cld
sbbl
mov
inc
out
cli
aas
dec
mov
inc
jb
adc
aaa
pop
sbb
cmpsl
pop
xchg
mov
ja
xorl
xchg
andb
out
xchg
pushw
sbb
adcb
jo
cmpsl
sarl
cmpl
ljmp
and
push
mov
loopne
repnz
scas
pop
int
dec
xor
xchg
sbb
pop
sarl
ret
mov
mov
es
int3
aaa
test
nop
pop
nop
push
into
cmpsl
push
ljmp
inc
push
push
pop
fstl
xor
inc
add
xor
adc
loop
fists
jne
sub
and
push
rclb
sbb
sub
mov
and
fldz
xlat
push
repz
js
pop
repnz
adc
aad
addl
mov
cmpsb
enter
into
and
dec
fdecstp
push
popf
lock
outsb
xor
inc
adc
mov
mov
mov
shrl
mov
mov
xor
sbb
sub
in
and
xor
subb
inc
and
int
and
push
int3
into
ret
arpl
ret
out
nop
repnz
loope
push
scas
pusha
test
ja
add
adc
repz
mov
sbb
mov
xchg
data16
out
cmc
leave
sbb
dec
jge
xchg
mov
sub
mov
pop
mov
popf
adc
pop
les
xchg
push
inc
mov
insb
inc
mov
mov
mov
arpl
daa
adc
mov
dec
xor
loop
das
mov
les
pop
stos
mov
lock
vmread
aad
inc
cs
scas
sbbb
mov
jle
shlb
xchg
xor
iret
cltd
push
xor
nop
push
sti
and
cmc
adc
add
sub
push
shlb
mov
loop
jns
aam
gs
fsubs
fldcw
add
popf
xchg
scas
iret
int
and
or
xchg
fldenv
enter
sbb
mov
pop
pop
adc
or
xor
xchg
push
call
mov
add
adcl
int
push
xlat
push
xor
and
popf
fidivs
add
sub
dec
cmp
sbb
cli
adc
test
icebp
div
lock
stc
mov
popa
xor
test
cwtl
mov
dec
push
hlt
popa
fucom
daa
sbb
data16
dec
xchg
mov
aad
pop
pop
std
mov
mov
imul
icebp
ja
in
cli
xchg
sbb
sbb
repz
push
pop
repz
leave
fsubp
adcb
jns
jle
cmc
in
add
jb
inc
mov
addl
sbb
int3
add
adc
sbb
mov
sub
shlb
adc
punpcklbw
rcl
imul
push
arpl
mov
pop
cvttps2pi
add
sub
xor
push
sbb
insl
push
inc
add
ret
icebp
cmc
outsl
divl
ja
push
or
dec
insl
rclb
aaa
out
inc
inc
mov
lea
mov
cmpsb
fwait
xlat
fists
scas
ja
mov
scas
mov
push
xor
mov
aas
outsb
js
addr16
cmpsl
rorb
cmpsb
fsubs
cmc
fsubs
repz
jge
call
ss
mov
adcl
ljmp
test
jno
sbb
negl
pushf
iret
dec
jmp
jmp
inc
mulb
and
decb
sub
mov
mov
ficoml
lret
mov
les
test
xchg
daa
push
add
sub
test
js
lods
clc
dec
mov
mov
inc
out
leave
ret
stos
lret
add
ja
shlb
icebp
cmp
fucomip
in
fcompl
pop
lea
xchg
xlat
stos
mov
dec
adc
jo
cmp
pop
push
call
add
fnstsw
inc
xchg
fucomp
push
dec
cltd
inc
cmp
sbb
test
xor
mov
adc
in
std
dec
xor
ret
shll
mov
sbb
int3
mov
or
jmp
fmuls
push
repnz
scas
test
xor
nop
test
sub
jo
push
mov
fmull
stc
sbb
xlat
notb
sbb
sub
fdivrl
ja
mov
movsb
add
adc
ss
fbstp
lods
adc
mov
push
add
push
jg
subb
ds
hlt
adc
add
cmp
adc
cld
cmp
decb
outsl
stos
adc
xor
sbb
imul
cwtl
outsb
inc
outsl
cmpb
add
inc
stos
lret
xchg
rorb
es
aaa
xchg
jb
punpckhbw
cmp
bound
sbb
mov
and
movsl
jno
pop
out
inc
test
adc
sub
pop
push
jmp
cmp
int
int3
push
push
pop
pop
add
cmp
add
clc
scas
add
popa
sub
sbb
mov
addr16
mov
xor
repz
into
mov
jbe
or
nop
adcl
shrb
mov
push
fcomi
xlat
in
mov
ret
push
inc
jg
test
mov
leave
subl
pop
pop
cli
xchg
popf
enter
push
adc
daa
jmp
add
xchg
ljmp
cltd
loop
stc
mull
mov
jns
sbb
jmp
jg
cli
clc
lods
inc
inc
test
ret
xor
sarl
sbb
add
mov
sbb
push
movb
adcl
out
mov
push
fcompl
das
lea
jmp
lret
data16
mov
xorl
ret
pop
and
insb
testl
lods
inc
sbb
mov
xchg
or
fiaddl
add
sbbb
aad
movsb
mov
adc
mov
and
and
jge
inc
repz
and
sti
es
pop
sbb
loop
mov
push
xchg
adc
sbb
push
pop
add
inc
sub
test
push
and
sub
call
std
sbb
cmc
test
mov
cld
mov
cli
lea
andl
mov
mov
xlat
sub
cld
out
mov
push
dec
and
or
arpl
or
jmp
jns
push
in
or
dec
cmpsb
inc
mov
sbb
movsl
push
inc
and
mov
jns
or
pop
test
push
roll
sbb
aad
repz
stc
ja
ljmp
or
mov
lock
in
cmp
pop
cmp
jne
ljmp
aad
adc
pop
cmp
push
push
aam
push
lret
adc
shlb
out
pop
scas
dec
inc
pushf
loope
adc
test
push
xchg
dec
ror
lds
rclb
repz
faddl
movsl
out
add
jmp
in
fldt
mov
add
cmp
dec
pusha
sti
mov
out
cmp
cmp
inc
xor
xor
inc
popa
and
and
xchg
sub
loop
pop
sub
xchg
inc
add
in
pop
xor
adc
out
add
mov
mov
sub
repz
pushf
fs
fldenv
test
adc
adc
lods
out
stos
add
cmp
inc
sub
test
adc
add
sbb
out
or
hlt
and
jb
cli
sbb
les
inc
jge
sub
insb
popa
leave
mov
test
mov
mov
or
fldl
shll
mov
pop
pushf
bnd
cld
push
xlat
pop
shrl
mov
popl
xor
das
stos
push
pop
fwait
rcr
inc
bound
bnd
mov
adc
mov
shl
pop
pop
hlt
pop
and
repnz
sbb
xchg
adc
shrl
push
jmp
lahf
dec
inc
test
mov
inc
out
mov
cltd
cmpsb
inc
add
push
mov
cs
xor
aam
mov
mov
xor
icebp
hlt
decb
scas
in
adc
mov
pop
dec
mov
jmp
jle
mov
fisttpll
daa
cli
jmp
push
inc
movsb
dec
icebp
dec
arpl
mov
test
inc
sub
pop
pop
xor
data16
in
js
push
ljmp
out
ljmp
mov
in
fdivrl
out
test
movsl
shr
das
cli
lds
sub
cmp
js
pop
jl
jbe
fists
push
pop
cmp
or
jmp
inc
scas
mov
imul
mov
mov
sahf
jb
rcrl
push
jmp
ljmp
sbb
or
std
test
push
push
mov
push
jns
or
dec
xor
jge
mov
incl
sbb
jne
popa
mov
push
mov
sbb
adc
mov
mov
jmp
jecxz
insb
xlat
push
sub
sub
nop
xchg
mov
scas
imul
or
in
add
lock
and
or
ljmp
test
mov
add
into
adc
xlat
or
les
pop
dec
cmpsl
dec
cld
enter
mov
push
cmp
sbb
inc
out
sub
dec
jnp
jge
add
test
shl
inc
popa
push
out
aaa
adc
mov
hlt
js
jne
sbb
xchg
pop
push
scas
xor
sbb
jns
sub
arpl
adc
sbb
mov
sub
mov
pop
sub
enter
icebp
mov
xchg
imul
insb
push
aam
hlt
xor
jo
lcall
insl
and
movsb
arpl
mov
cmc
test
mov
push
aas
out
xchg
adc
ss
jnp
ja
and
pop
or
push
jnp
sbb
ja
push
and
adc
cmp
sub
push
jl
push
outsl
add
fcompl
lret
lds
rol
test
in
ljmp
loop
jnp,pt
inc
sub
fwait
ja
add
js
dec
arpl
dec
cmpsb
aam
std
repnz
or
inc
mov
loop
adc
in
icebp
roll
test
popa
push
push
sub
dec
push
daa
or
mov
and
push
nop
cmp
add
inc
test
fdivs
add
les
pop
or
and
inc
cld
push
sub
cli
cmc
adcl
push
push
sbb
btl
or
inc
in
jecxz
loop
and
pop
pop
icebp
mov
and
bound
cli
adc
sub
pusha
shll
and
inc
pop
mov
popf
pop
fdivrs
sti
and
jg
inc
sub
insb
and
lahf
adc
mov
xchg
push
lahf
fdivrp
aas
or
bound
pop
scas
mov
pushf
push
pusha
out
stc
movsb
push
or
pop
mov
mov
ror
push
psrld
hlt
and
hlt
popa
jmp
adc
jne
int3
inc
pushf
push
mov
jl
ds
cmpsl
pop
xor
mov
mov
mov
jo
scas
out
nop
or
loopne
insb
cmp
or
push
outsl
push
dec
adc
int3
lock
dec
push
jae
in
icebp
flds
or
dec
mov
incb
cld
sbb
pop
fiaddl
sub
push
test
lock
je
shlb
pop
jne
lret
pop
or
cmp
fidivrl
and
orb
andb
das
push
and
test
mov
loopne
add
ficoml
orl
mov
das
or
subb
lods
les
popf
iret
add
xchg
jecxz
pop
adc
pop
mov
fdivr
call
popa
adc
jle
jp
pop
fcompl
mov
movaps
js
lcall
fs
sub
inc
mov
xchg
jmp
sbb
cmpsb
sarb
add
ljmp
das
xchg
cli
sti
pop
outsl
out
adc
sar
leave
inc
sti
and
and
popf
ja
popf
test
outsl
iret
inc
sti
loope
dec
mov
mov
in
and
cs
les
inc
or
cli
mov
cmp
adc
dec
jl
imul
out
jp
xchg
aad
mov
xchg
aam
push
aad
xchg
mov
mov
adc
jno
stos
std
ret
inc
fstpl
pop
inc
loope
inc
enter
mov
or
xlat
dec
and
push
fisttpll
stos
adcb
int3
bound
cmc
push
pop
pop
push
or
testb
std
jne
fs
mov
mov
call
dec
mov
dec
sbb
test
int3
enter
call
movsb
inc
mov
and
in
scas
leave
sub
sub
dec
scas
out
daa
outsl
out
arpl
jp
and
pusha
xchg
jp
adc
movb
cmpsl
sbb
scas
addr16
jp
mov
xchg
mov
testb
sub
lds
loopne
sbb
ljmp
cmc
mov
inc
cli
cld
push
inc
mov
lods
jbe
cs
fmull
stos
test
sbb
pop
pushf
fdiv
lcall
sub
pop
lcall
push
shrl
cmp
pop
add
xorb
mov
arpl
push
push
mov
icebp
mov
or
sbb
jmp
lahf
pop
adc
xor
mov
mov
cwtl
jns
pop
rol
xchg
pop
test
dec
test
fistpll
pop
hlt
adc
dec
push
loope
scas
scas
lds
and
int3
in
int
and
rep
loope
lds
mov
loopne
mov
push
mov
jne
or
mov
lret
dec
or
les
stc
sub
mov
xchg
insl
sub
push
push
lock
insb
mov
xlat
inc
fsubrl
adc
cmp
loop
add
iret
pop
out
and
loopne
fisttpll
pop
pushf
ja
cwtl
out
ja
rolb
or
popf
jns
in
dec
sbb
fcmovne
decl
incl
into
and
repnz
sbb
sbbb
and
pop
sbb
inc
mov
dec
or
jecxz
or
or
std
jnp
mov
mov
jmp
push
xlat
pop
xchg
or
sbb
adc
adc
xor
xchg
mov
adc
lahf
push
dec
sbb
jne
dec
and
je
push
jno
jmp
aam
xor
pushf
xor
xchg
int3
mov
movsl
popa
int
xor
stc
test
orb
pop
mull
mov
cld
inc
push
mov
out
test
dec
inc
test
sub
loope
jmp
pop
push
dec
arpl
sbb
xchg
test
sbb
repz
push
icebp
pop
pop
fists
gs
mov
mov
adc
jmp
fisttpll
jge
jp
test
inc
lret
imulb
push
repnz
jmp
pop
pop
std
das
popf
mov
xlat
sub
ljmp
jmp
cmp
outsl
sub
sti
xchg
pop
jbe
pop
jne
sbb
adc
sub
xchg
or
push
xlat
sub
mov
pop
int
lock
xchg
imul
rcr
dec
test
cli
out
stos
cs
int3
sub
rolb
leave
mov
dec
inc
mov
hlt
je
movsl
rol
sbb
repz
ljmp
test
add
mov
fnstsw
rorl
ss
add
mov
ljmp
jb
jg
mov
pop
cmp
jecxz
imul
in
fistpll
sub
push
andb
adc
enter
pop
lods
push
or
dec
mov
cmp
in
jmp
push
stos
mov
add
mov
leave
fidivl
inc
jb
mov
scas
lods
pop
push
add
es
fs
shrb
stos
arpl
dec
pop
popa
jge
push
xchg
imul
addr16
call
push
bound
dec
leave
div
xchg
xor
and
sub
xchg
test
scas
dec
cmc
xor
es
push
xchg
sub
dec
xchg
mov
sbb
cld
mov
dec
mov
imul
adc
aas
pop
mov
jl
add
xchg
inc
movsb
xchg
adc
in
xchg
cli
jp
popf
add
ret
adc
push
jbe
pop
decl
loop
out
ljmp
or
sbb
adc
sbb
into
mov
mov
cmp
mov
jg
mov
jge
roll
sti
cli
dec
push
call
xor
mov
sti
xor
inc
push
stos
scas
outsl
inc
sub
rol
inc
into
scas
xchg
pushf
push
in
out
shll
icebp
pop
ret
shlb
into
movl
orb
sti
mov
jecxz
rol
jne
es
and
aam
jno
xchg
rclb
pop
pop
testl
inc
addr16
cmp
stos
imul
and
mov
mov
or
loope
fnstsw
mov
jmp
adc
repz
fcoms
scas
in
lret
mov
inc
popa
pop
fs
fcoms
mov
loop
into
push
mov
fstpt
adc
sbb
pop
call
js
ret
sub
stc
insl
mov
jmp
inc
cmp
into
xchg
jge
es
fidivrl
lret
js
inc
addr16
popf
hlt
arpl
ret
daa
adc
mov
cwtl
mov
push
mov
test
ja
jg
xchg
dec
dec
pop
xor
aam
inc
es
hlt
add
sahf
jg
cltd
adc
jo
lcall
cmpsl
aam
push
les
imul
imul
adc
into
data16
inc
jb
ja
xchg
or
mov
or
add
insl
mov
xchg
bound
jne
jne
xchg
push
cwtl
imul
cmc
push
lahf
pop
pushf
movsl
orl
sar
mov
jecxz
jg
shr
push
js
xchg
lods
inc
pop
jae
test
xor
icebp
mov
jmp
inc
xchg
push
ljmp
dec
push
xchg
jg
and
data16
mov
clc
mov
icebp
pop
rolb
ljmp
fwait
sahf
and
push
inc
xchg
jo
lcall
adc
hlt
lcall
lret
xchg
cs
loop
push
xor
or
and
imul
mov
inc
mov
cmc
pusha
imul
popf
scas
jae
mov
mov
shlb
mov
dec
pop
cmp
lods
pushl
xchg
pop
sbb
xchg
sub
aam
fbld
mov
xor
inc
or
orl
fistpll
shlb
pop
lahf
add
mov
jns
push
ret
imul
mov
mov
pop
push
push
movsl
fs
jp
sub
sub
pop
adc
arpl
popf
inc
out
push
xchg
add
push
jno
popa
imul
test
push
inc
out
jmp
syscall
mov
addr16
xchg
sub
mov
pop
lcall
jnp
mov
adc
mov
xchg
das
repz
mov
ljmp
loope
jbe
and
test
imull
dec
in
xchg
xor
bound
push
imul
or
or
ret
fwait
sahf
ss
mov
lahf
ds
ss
xchg
mov
and
ss
mov
cmp
adc
fists
daa
jp
and
mov
sub
arpl
xlat
sbb
sbb
sub
scas
cli
cmp
mov
or
test
pop
divl
and
int3
cmpsb
out
mov
fnstenv
std
sbb
cli
lcall
xor
mov
xchg
movq
sub
cmp
cs
sbb
ret
xchg
shrb
cwtl
cmovns
fisubl
cmpsl
cmp
or
pop
int3
jo
ficoms
fidivl
adc
outsl
jo
and
lcall
and
or
mov
cld
and
inc
jg
cld
push
sub
stos
icebp
rorl
mov
dec
sahf
push
imul
cmp
popf
sarb
mov
sbb
mov
or
cmc
push
mov
inc
jbe
fs
mov
xorl
inc
cmc
add
xchg
add
mov
imul
sbb
sti
mov
add
gs
jbe
sub
dec
fsubrp
or
das
dec
stos
fsubr
in
hlt
push
mov
movsl
adc
leave
aam
add
cs
divb
mov
stos
out
adc
repnz
cld
popa
stos
sti
push
pop
lods
push
sub
lret
lods
mov
outsb
cmpsl
add
lock
test
stos
jae
push
pop
and
push
inc
out
aad
push
scas
mov
sub
arpl
push
jge
jle
push
pop
adc
mov
or
cmp
cs
shl
js
push
scas
push
bound
insl
popf
push
ljmp
pop
lods
pop
inc
add
cmc
loopne
xor
mov
stos
aad
lods
arpl
push
std
repnz
xchg
push
cltd
xchg
mov
cmp
imul
cwtl
or
jl
mov
mov
inc
mov
jns
jno
aad
xor
dec
push
mov
divb
adc
imul
stc
pop
xor
sbb
pop
xlat
mov
push
and
sbb
and
mov
arpl
scas
insb
pop
mov
mov
jae
cmp
sub
mov
neg
and
sbb
dec
xchg
in
dec
pop
add
scas
incb
and
pop
adc
test
out
inc
cmp
mov
loope
jbe
out
sahf
int3
out
mov
pop
fucomip
out
stos
jmp
xorb
jmp
insb
mov
fucomip
popa
push
pop
inc
inc
popa
inc
mov
pop
xchg
inc
repnz
dec
and
sub
aaa
sub
jg
inc
sub
jnp
js
mov
mov
push
xor
xchg
popf
ret
dec
pop
mov
repz
inc
mov
xchg
and
inc
xchg
push
jae
xorl
and
outsl
add
pop
andl
in
lret
inc
sbb
inc
mov
sbb
mov
jmp
lods
jge
cmp
stos
repnz
les
aaa
daa
test
xlat
jg
daa
push
xor
mov
aaa
mov
and
pop
jb
dec
fwait
leave
sub
xchg
xlat
cwtl
in
inc
jp
ret
stos
and
adc
fxam
and
lds
daa
adc
push
ja
jecxz
stc
push
ffree
stc
add
xchg
or
xor
not
jb
push
data16
jmp
xlat
fstpl
outsl
push
xchg
fmul
das
or
in
iret
mov
pop
repz
dec
xchg
adc
mov
repnz
scas
add
xchg
dec
cs
ja
outsl
xchg
pop
test
hlt
nop
xchg
cmp
cmpsl
cmpsb
call
pop
fsts
into
stos
adc
fstps
repnz
fsubrs
out
and
pop
and
cmp
pop
adc
data16
repz
push
shrb
data16
mov
lret
xchg
or
cli
sbb
in
sbb
cwtl
sub
je
lret
cltd
push
in
movsb
xor
cli
or
add
ljmp
cmp
pop
ss
mov
mov
xchg
imul
pop
test
popf
lcall
add
imul
inc
push
jecxz
xchg
out
jno
xchg
out
or
or
cld
cmpsl
and
jb
push
aaa
dec
adc
mov
test
out
mov
xchg
nop
jne
ficomps
rorb
jl
enter
sbb
fcompl
add
jmp
shlb
xchg
and
mov
push
stos
push
fistpl
out
cmpsl
lcall
js
hlt
lret
fbstp
mov
xor
cmp
sub
dec
in
lods
jno
inc
pop
push
dec
ror
mov
aas
and
fcoml
ret
cmpsb
and
jbe
sub
dec
icebp
add
jge
outsb
mov
test
mov
testb
adc
xchg
dec
mov
and
icebp
xchg
xchg
dec
xchg
stos
mov
add
xor
mov
leave
fists
test
sbb
loope
pop
pop
xchg
mov
negb
pop
dec
ret
lret
dec
test
fnstsw
xchg
test
pop
pop
dec
scas
push
aad
jb
faddl
test
mov
jle
xchg
pop
cmpsl
jno
lret
aad
push
xchg
cmc
es
pop
xchg
adc
inc
in
addr16
dec
or
mov
jg
insl
into
addb
clc
std
inc
add
xchg
arpl
and
lahf
add
imul
xchg
rcr
adc
adc
lds
lahf
rol
adc
fs
xor
popf
test
dec
and
pop
testb
ret
jl
add
mov
inc
push
test
mov
pop
and
mov
aad
add
nop
les
mov
in
xor
sub
xor
adc
fucomi
sbb
lock
xchg
scas
repz
imulb
jge
test
xchg
pop
dec
test
jno
and
sarl
xorb
jge
incb
dec
mov
in
push
push
popf
or
pop
inc
cmpsb
inc
cltd
push
mov
xchg
push
dec
mov
xor
add
jmp
sub
and
inc
test
sbb
pop
push
sti
stc
adc
jecxz
or
or
call
push
popf
lcall
sbb
shlb
jg
sub
mov
mov
cltd
jecxz
xchg
or
mov
xchg
loop
cld
cld
mov
in
subl
inc
and
cmp
xchg
repz
dec
imul
inc
inc
shrl
cpuid
jl
cwtl
cmp
cmpsb
or
data16
stc
jle
fimuls
push
ret
xchg
ja
nop
test
xor
or
fisubl
call
enter
dec
xchg
inc
sbb
mov
and
shl
add
xor
popf
ret
adc
test
add
push
add
repz
and
mov
mov
loopne
repnz
in
test
sub
add
shrl
fstpt
insl
mov
mov
cmpsb
add
jge
roll
lahf
and
ljmp
lcall
cmpl
dec
and
cmp
adc
ss
cwtl
cmc
cmc
in
or
inc
xchg
add
xor
add
test
adc
imul
xchg
ss
pop
xchg
jl
clc
sbbl
aas
lods
stos
sbb
add
icebp
add
dec
mov
sub
jno
nop
in
xchg
jl
or
xchg
and
or
jmp
nop
push
xchg
cwtl
sbb
lcall
imul
sub
and
mov
sbb
push
dec
sbb
mov
xchg
add
test
jo
sub
adc
daa
loopne
sub
cmpsb
fnsave
scas
add
inc
fwait
test
sbb
pushw
inc
pop
inc
ss
or
mov
pop
and
push
test
loope
pop
xor
cmc
or
mov
xchg
cltd
arpl
inc
or
andl
cmpsl
fldenv
xchg
fst
cmp
adc
cmp
sub
out
dec
lods
add
cmp
dec
mov
data16
cmp
and
push
bound
adc
rol
fstpt
and
stos
xchg
gs
push
incl
or
test
lret
or
lret
sbb
inc
sub
adc
lock
scas
iret
pop
stos
outsb
add
stos
int
dec
pop
lods
sbb
lods
jns
repz
sub
clc
push
mov
sbb
dec
addr16
push
ljmp
int
adcb
scas
push
cmc
xor
sbb
cmp
js
mov
sub
addb
cmp
adc
adcb
mov
in
sbb
cmp
adc
pop
and
pop
rcrb
mov
mov
xor
sbb
inc
jg
mov
mov
inc
jns
nop
xchg
out
daa
neg
scas
aam
xor
mov
add
sti
xor
scas
push
xor
jmp
sbb
push
test
xor
jmp
xor
fs
aad
mov
xchg
push
inc
enter
mov
mov
outsb
mov
mov
inc
mov
call
push
mov
push
sbb
popa
sub
dec
pop
sbb
lods
adc
cmp
bound
push
out
mov
mov
sbbb
mov
icebp
lret
mulb
jne
dec
movsl
stc
mov
xchg
sub
xchg
dec
pop
filds
jg
out
ja
in
inc
mov
inc
outsb
mov
xor
cwtl
fmull
movsl
lock
rolb
pushf
lods
fmul
js
xchg
lods
aam
push
xor
xchg
lods
adcl
xchg
stos
mov
cmp
push
movsl
rclb
out
sub
cmp
and
sahf
xchg
sbb
lcall
or
adc
cmpsb
pop
and
cli
aam
xchg
bound
xor
ljmp
jmp
push
or
push
dec
add
xor
cmp
sub
cli
mov
jg
mov
adc
cltd
cwtl
inc
cmp
or
dec
cmc
lods
sbb
dec
sub
cli
xlat
inc
fs
mov
ja
and
push
data16
bound
xor
push
iret
dec
clc
jno
jmp
sbb
pusha
inc
scas
and
cmp
scas
daa
and
adc
push
cmp
rorl
cli
xlat
add
aaa
nop
ja
and
sbb
dec
loope
add
std
imul
xchg
xchg
aad
and
sbb
ja
fsubrs
mov
test
enter
mov
mov
add
jp
push
dec
or
add
insb
jbe
xchg
shlb
sub
xchg
add
jge
outsb
gs
shlb
ret
mov
xlat
out
pusha
xor
mov
lret
add
cmp
cmp
popa
sub
popa
inc
adc
fsubl
popa
lret
test
rorb
adc
adc
push
mov
int
int3
sbb
push
cltd
mov
jg
std
mov
jp
add
push
adc
mov
dec
cmp
add
jae
pop
lods
call
arpl
adc
add
xchg
stos
dec
clc
pop
and
out
mov
dec
or
mov
mov
add
mov
add
mov
std
es
adc
data16
adc
addr16
adc
adc
xchg
cmovo
filds
adc
inc
les
nop
test
stc
scas
scas
adc
cmp
popf
mov
push
sbb
jge
popa
sahf
mulb
dec
hlt
mov
into
cltd
pop
fstps
sti
mov
xchg
daa
es
pop
stos
les
iret
adc
adc
sarb
sbb
shll
test
jp
add
les
add
popa
push
icebp
mov
jl
in
push
dec
adc
mov
mov
jg
call
insl
popw
bound
push
shr
push
stos
xlat
movsl
movsl
insb
cmp
das
not
lods
repnz
pop
or
adc
das
mov
mov
and
mov
xchg
arpl
scas
mov
cmp
mov
push
popf
mov
cmp
xchg
mov
popa
mov
mov
mov
cmpsl
pusha
stos
cwtl
fdivrp
mov
test
insl
inc
popf
inc
ret
test
std
pop
mov
mov
jle
add
imul
mov
mov
ret
adc
data16
jo
mov
jl
and
jge
cwtl
push
push
je
frstor
cmp
xchg
inc
movsb
repnz
push
fistps
dec
cmp
addr16
dec
pop
sahf
adc
jle
insl
xchg
repz
setb
or
xchg
in
testl
jge
inc
jbe
jne
loopne
imul
adc
pop
incb
clc
hlt
loopne
add
sub
std
scas
fcomp
jne
sbb
ss
or
dec
adc
jns
repz
out
mov
sbb
push
movsl
adc
pusha
ret
and
fnstenv
jae
test
dec
mov
mov
xchg
mov
inc
jns
pop
pop
sub
ret
jge
shr
ljmp
sahf
and
pusha
xor
sub
mov
pop
stc
inc
test
aad
jp
addr16
outsb
inc
adc
xor
dec
pop
pop
jg
ret
ds
mov
lods
ja
mov
pop
sbb
or
fs
repz
lods
push
mov
add
cmp
imul
je
or
sub
out
mov
addr16
and
dec
movsl
pop
add
jp
mov
or
adc
stos
sub
shrl
ret
jo
sbb
mov
mov
pop
stos
xchg
loop
decb
inc
test
pop
inc
jnp
mov
cld
sbb
push
jg
mov
push
add
push
jno
sbb
jnp
and
or
ds
sub
dec
push
cmp
mov
push
test
ss
into
pop
mov
int
and
pop
in
pop
in
orb
push
repz
and
mov
fimuls
movsb
cmpsl
fsubrl
jae
cmovae
dec
andb
mov
jp
or
in
ret
or
mov
xor
bound
mov
call
shll
sbb
ss
adc
out
jno
jns
ret
fstp
loop
nop
inc
scas
test
push
or
test
fstp
iret
inc
mov
das
add
cltd
pop
sbb
mov
inc
mov
pop
aas
lods
jmp
insb
pop
call
cld
pop
pop
lahf
popa
cmc
jns
rclb
cmp
mov
or
pop
mov
sub
push
jb
insl
xchg
add
mov
jno
movsb
sub
std
cwtl
out
dec
rclb
inc
inc
loope
dec
add
pop
bound
jg
aaa
jp
repnz
dec
jmp
dec
cs
ljmp
test
jl
or
ret
push
jnp
inc
pop
pop
aas
loopne
jb
adc
or
nop
mulb
sbb
scas
fdivrs
mov
es
push
and
insl
ljmp
aad
jb
mov
xchg
cmc
mov
sub
dec
sub
jne
mov
cmp
push
mov
repnz
into
in
mov
into
jle
fistps
mov
stos
xor
pop
outsl
mov
inc
divl
pop
cmc
sub
shrl
mov
lret
jg
pop
dec
inc
iret
imul
stos
adcl
cmp
push
add
lret
out
add
mov
pop
mov
das
adc
mov
sarb
xchg
pusha
add
xchg
popa
sub
ja
aam
xchg
mov
out
nop
stos
aam
pop
lret
pop
sti
cltd
push
pop
and
scas
fcmove
int3
or
aas
aaa
pop
into
fs
xchg
int
push
push
mov
mov
popl
fs
push
fldl
pop
jge
loope
dec
mov
mov
or
xor
sbb
adc
or
js
xchg
stc
imul
rolb
xchg
mov
loopne
dec
test
leave
pop
ror
pop
push
lods
sbb
test
mov
cmp
fnsave
jg
push
and
loope
mov
lret
inc
in
loopne
rcrl
sbb
insl
and
pop
iret
add
mov
inc
adc
inc
inc
dec
lods
or
cmp
into
cmpsb
mov
mov
int
or
scas
clc
pop
lahf
cmp
lahf
fwait
rcrb
outsb
or
out
add
pop
cli
mov
repz
jo
mov
lods
push
adc
mov
daa
add
sub
pop
mov
pop
lahf
incl
push
and
rclb
sahf
sbb
xchg
xchg
or
dec
cltd
adcl
stos
xor
push
mov
xchg
fisubrs
mov
das
adc
jmp
cmpsl
cmp
mov
std
sbb
push
repnz
in
shrl
insb
and
pop
jmp
xor
mov
sbb
loopne
lcall
dec
cld
jns
das
mulb
ljmp
and
fst
mov
mov
inc
jne
imul
repz
push
insb
xor
push
mov
mov
shr
gs
mov
dec
nop
sub
pop
mov
inc
and
jge
pop
out
mov
clc
subb
rcll
scas
xchg
sub
or
cli
ds
or
push
das
mov
mov
push
je
test
sbb
push
mov
push
mov
cmp
lea
jp
inc
push
clc
sub
or
pushf
push
int3
xchg
dec
push
add
push
out
jmp
fimull
fnstcw
scas
movsb
fcompl
sub
jle
dec
mov
cmp
leave
jo
shll
ficoml
daa
inc
dec
dec
test
mov
pop
pop
pop
mov
push
lahf
test
fistpll
stos
in
inc
shlb
mov
imul
push
movl
insb
enter
push
or
xchg
addr16
pop
mov
adc
inc
mov
pushf
fwait
loop
inc
test
and
add
and
movsl
setg
adc
pop
jo
add
pushf
imul
inc
and
es
pop
lcall
inc
pusha
leave
call
cli
dec
daa
pop
mov
pop
mov
inc
aad
sub
push
stos
repnz
fwait
lret
add
xor
pusha
sarb
pop
outsb
jle
sub
rcrl
in
jge
push
mov
push
and
sub
idivl
ljmp
das
xlat
and
and
mov
push
in
xchg
loopne
aaa
pop
xchg
movsb
jp
jmp
rorl
sub
or
test
lds
adc
cld
scas
orb
aad
adc
and
and
pop
sbb
std
cmc
mov
add
jge
xchg
and
push
jmp
mov
pop
das
inc
fadds
or
cltd
xchg
xor
arpl
out
mov
int3
fmull
or
sub
cmp
mov
cmp
and
add
pop
cwtl
outsl
or
sub
jge
fdivr
ja
jp
mov
das
mov
cmp
add
je
shlb
adc
pop
and
add
mov
jmp
pop
xchg
jecxz
imul
fisttpll
mov
stos
not
repnz
sub
aam
jmp
pop
scas
fisttps
mov
push
movsl
and
push
sub
push
xor
pop
or
ds
or
jne
movsl
or
jb
mov
inc
ret
add
mov
daa
hlt
in
lds
inc
pop
or
mov
jns
push
mul
lahf
fmul
test
jno
pop
mov
iret
bound
mov
push
cmp
lahf
inc
in
jmp
out
jecxz
lods
mov
mov
mov
adcb
fisubrl
push
pop
orb
jg
ror
sub
les
xlat
mov
jae
push
inc
xchg
aad
push
das
loopne
aam
or
cmp
mov
stos
xchg
jae
mov
adc
in
or
test
js
lods
and
test
sti
inc
mov
cltd
xchg
add
lea
add
pop
shlb
lret
ficoms
cli
test
loopne
pop
shll
sub
mov
jg
push
and
and
aad
in
pop
sbb
mov
mov
or
sbb
and
adcb
adc
gs
jle
loope
inc
sbb
dec
inc
shrb
cmp
shlb
fs
imul
loope
bound
jae
out
dec
in
and
fnstsw
dec
mov
jecxz
xchg
repnz
cmpsb
mov
cmpsb
push
mov
sbb
hlt
aam
enter
dec
fistps
mov
aam
lahf
rcll
adc
adcl
mov
mov
add
cld
dec
int
sub
xorl
jle
out
mov
ljmp
shll
xchg
fwait
mov
push
lds
lret
ret
imul
inc
sbb
jno
push
outsl
js
icebp
ljmp
jmp
out
cltd
xchg
or
push
pop
scas
jge
cld
scas
add
dec
bound
mov
sbb
or
jbe
push
int3
mov
mov
je
push
pop
sub
movsb
clc
mov
aad
adc
xchg
and
add
aaa
push
jge
stos
in
adc
in
add
shll
out
int
mov
imul
fnsave
out
mov
or
sub
sbb
hlt
hlt
inc
xor
inc
lods
in
jne
adc
aad
clc
xor
lods
sub
mov
add
nop
xchg
imul
arpl
cmc
jnp
loop
jl
dec
sahf
addl
sbb
or
adc
inc
cwtl
or
sub
and
aad
cltd
jmp
xor
mov
xlat
pop
jle
dec
cmp
lock
push
sub
pop
pop
ja
xor
divb
aad
aad
clc
fsts
mov
or
cli
rorb
cmp
out
ja
jmp
or
xchg
out
inc
jp
lret
xor
pop
push
jmp
pop
inc
sub
mov
xchg
mov
mov
adc
movsl
testl
gs
mov
mulb
inc
or
js
cld
mov
callw
pop
dec
int
dec
or
push
xchg
shlb
daa
mov
jmp
inc
mov
inc
push
pop
aas
shrl
inc
lock
nop
push
dec
xor
pop
orb
leave
mov
cmp
or
scas
loope
int
rorl
into
pop
pop
xchg
lret
push
push
push
push
push
pop
fwait
mov
adc
and
cmp
cmp
pop
cld
jbe
lods
fs
jp
out
mov
das
into
out
lods
aam
push
and
out
das
popf
inc
xor
mov
ss
lods
nop
movsb
pop
fnstcw
pop
cltd
ljmp
movb
stos
inc
cmpsb
xchg
imul
mov
jp
add
jo
cltd
adc
mov
inc
mov
ret
inc
add
leave
push
push
or
mov
fmuls
jno
xor
imul
sbb
mov
cwtl
in
mov
aas
push
jo
inc
jns
push
mov
ja
mov
mov
in
push
inc
mov
outsb
mov
xor
sbbb
adc
shlb
add
adc
stc
mov
mov
lods
mov
sbb
push
scas
fildl
add
push
lcall
repz
or
inc
or
push
insl
pop
xchg
jae
test
out
das
mov
imul
pop
mov
sbb
mov
cli
enter
rol
ret
jmp
divb
cltd
das
das
sub
push
pop
ret
ficoml
adc
xchg
push
insl
or
in
xorl
adc
adc
out
inc
testl
mov
adc
inc
sub
mov
sub
pop
xor
xchg
sbbb
mov
dec
mov
aam
aas
pop
popa
sub
jae
sbb
sbb
xchg
pop
pop
inc
pop
jno
mov
push
push
cmpsb
push
mov
xor
xor
in
add
sub
loopne
subb
bound
xchg
lahf
scas
add
fs
adc
and
xor
xor
push
stos
xchg
data16
jle
mov
es
gs
lahf
add
insl
push
push
lock
bound
inc
ds
in
fdivrs
cmp
lcall
lcall
ret
pop
movsl
push
cmpsl
pop
pop
dec
lret
fdivs
jge
lea
sub
cmpsl
fsubs
adc
dec
adc
mov
or
push
xor
cmp
cmp
outsl
loop
push
sbb
iret
or
shll
xlat
mov
adc
addr16
pop
pop
cwtl
hlt
test
jo
jl
subb
lret
xor
or
fisubrl
scas
pop
dec
pop
sbb
fisubrl
cmpsb
xchg
arpl
jno
adc
inc
pusha
pop
dec
pop
pop
dec
and
outsb
sub
pop
jae
mov
ja
stos
inc
jp
repz
cwtl
jne
inc
lcall
lcall
shl
shll
dec
and
sarl
dec
sub
rcll
dec
push
adc
jecxz
ds
jno
pusha
test
imul
lods
shl
js
sbb
es
sbb
das
lock
stos
lcall
jge
pop
adc
js
lods
xor
mov
inc
test
jno
stos
cmc
das
mov
push
mov
sbb
mov
dec
fdivrs
test
push
ret
dec
push
enter
fdivrl
out
test
jle
bswap
sbb
add
sub
lcall
mov
inc
adc
mov
or
add
push
and
fwait
add
ret
and
or
nop
xor
sti
cmpsl
push
push
je
xor
xchg
imul
push
loopne
fsts
fcoml
xor
int
fldcw
repz
push
clc
fistpll
push
out
adc
mov
mov
jecxz
sbb
push
loop
lcall
or
and
push
xor
mov
lcall
lds
popa
push
cmpsb
push
decl
and
jecxz
dec
cs
lret
xchg
dec
add
dec
ret
cmp
push
xor
les
jbe
ja
mov
adc
ret
cwtl
push
stos
inc
add
lret
adc
jne
insb
shrb
push
bndldx
mov
sub
add
mov
and
inc
xchg
pop
popa
mov
jns
out
jnp
idivb
fidivl
imul
stos
std
mov
cmp
inc
fxch
inc
push
scas
push
push
and
or
adc
mov
mov
adc
push
test
dec
pop
push
jp
js
add
sub
ucomiss
pushf
adc
inc
adc
ret
add
push
popf
sub
or
loop
xor
shl
js
and
mov
in
pop
sub
push
fimuls
stc
jmp
inc
mov
scas
inc
arpl
adc
xchg
inc
arpl
dec
add
lahf
aam
shlb
push
es
xchg
or
or
loopne
push
imul
mov
and
and
movsb
nop
adc
xor
lret
pop
push
add
js
ret
movb
ja
add
sub
lods
mov
stos
stos
fmuls
cli
adc
xor
jno
in
andb
mov
aad
push
mov
cmpsl
cmp
xlat
les
shll
bound
insl
aam
shl
dec
and
xchg
jge
sbb
jge
ss
cmpsb
xchg
mov
incb
scas
mov
adc
mov
in
outsl
dec
sub
enter
or
ret
stc
adc
jb
adc
mov
test
movsl
or
test
clc
dec
sbb
xchg
sub
test
or
mov
sbb
stos
inc
pop
insb
xor
mov
ljmp
adc
movl
imul
jbe
push
xor
test
jle
fsubrp
xchg
sbb
mov
jae
or
push
mov
mov
mov
adc
inc
ss
aas
cmp
mov
and
fs
add
inc
scas
in
sub
das
jne
mov
inc
mov
pop
lods
in
jno
sub
cld
es
push
mov
dec
mov
mulb
addr16
in
xor
outsl
push
sub
mov
pop
and
mov
scas
jge
pop
call
call
inc
pop
push
pop
add
jno
mov
aam
sbb
lea
popa
fcmovbe
lcall
xchg
jg
shlb
ja
mov
sbb
dec
lret
xchg
stos
rorb
xchg
enter
fs
bnd
dec
lret
mov
adc
fiadds
repnz
adc
mov
adc
cmp
cld
cmpsb
test
out
or
xchg
pop
sbb
mov
push
push
pop
addr16
out
mov
push
or
sbb
fs
es
adc
mov
sub
movsb
loope
cmp
ret
sub
mov
xor
inc
pop
loop
cld
jbe
out
std
scas
push
mov
adc
je
add
pop
imul
mov
xorl
cld
shl
mov
ja
lret
imul
stos
or
cs
cmpsl
clc
adc
inc
fsts
pop
push
inc
inc
ret
rorb
dec
lret
pop
pop
fs
mov
dec
sub
cwtl
jae
shrb
or
xor
push
jno
jp
xor
mov
ljmp
add
sub
and
inc
mov
push
sahf
xchg
mov
dec
mov
push
inc
and
dec
fsubl
call
inc
sbb
stc
add
mov
rorl
xchg
enter
pop
popf
jmp
nop
lods
nop
push
sbb
gs
mov
into
or
cmp
inc
sub
xchg
das
inc
sbb
test
adc
stc
xor
test
push
xchg
scas
add
xor
lods
sub
stos
jnp
ret
mov
jge
shlb
das
xchg
xchg
ret
sbb
and
mov
fadds
shr
mov
inc
fdivs
push
jle
ret
xchg
xchg
fisubrl
add
sub
sbb
jle
pop
push
lret
repnz
ret
cmovs
inc
nop
adc
xchg
and
stc
std
or
mov
testl
lret
sbb
shrb
sub
pushf
loopne
add
jns
jmp
inc
ret
sub
or
and
adc
iret
scas
lret
push
push
xor
mov
xchg
mov
inc
jmp
adc
ficompl
andl
ror
jae
clc
std
lods
mov
cmp
pop
lods
mov
xchg
jb
mov
outsb
das
in
cmp
inc
fwait
dec
jmp
push
es
or
bound
cmp
sbb
stos
xlat
jl
mov
xchg
in
dec
push
rcrl
sub
movsl
xchg
shrl
popf
sub
pop
subb
jge
or
mov
repnz
jl
dec
xchg
nop
stos
call
adc
and
lcall
dec
std
jne
push
imul
subl
pop
cmp
pop
pushf
inc
inc
icebp
insl
cmp
es
sub
sbb
xchg
push
imul
daa
adc
inc
push
mov
jge
push
dec
fiaddl
push
push
xchg
test
test
xor
adc
inc
mov
pop
mov
sbb
sub
push
jl
shlb
cmpl
imul
xchg
nop
cmp
inc
pop
test
pop
lahf
mov
push
add
push
sub
data16
xchg
lcall
xchg
push
popa
push
mov
loopne
pcmpgtb
mov
hlt
cmp
in
add
xchg
sub
mov
mov
adc
lods
insl
add
mov
jae
push
orb
lret
xlat
cmpb
fs
pop
adc
jmp
push
jo
push
mov
insl
adc
push
mov
mov
ja
inc
pop
add
sbb
xor
imul
lret
outsb
in
das
je
adc
scas
pusha
mov
pop
and
icebp
lcall
sub
mov
stos
insl
lret
sbb
xor
cs
out
bound
inc
and
mov
xor
imul
mov
sbb
xor
sub
mov
pop
push
shll
inc
sbb
fildll
jg
ret
lcall
mov
mov
cmc
pop
sbb
js
dec
push
test
cmp
mov
lock
push
and
popa
imul
test
and
jnp
ret
out
sub
mov
imul
adc
lahf
insb
and
fisttpll
std
adc
ljmp
adc
andb
adc
add
lods
lods
push
add
adc
add
and
leave
incb
inc
push
mov
sarl
lods
gs
jo
movsl
in
rcrl
xchg
ljmp
adc
mov
fdivs
lcall
fwait
pop
fisttps
ss
mov
dec
dec
xor
push
xor
out
bound
sub
xchg
and
aam
sarb
shrl
inc
pop
sub
pop
and
movsl
inc
js
pushl
dec
loope
fs
ss
or
lds
aad
xchg
scas
int3
outsl
fs
in
inc
jnp
jns
ja
jge
xor
adc
outsl
lret
sbb
sbb
testb
fwait
ljmp
dec
dec
mulb
xor
mov
cmp
xlat
jle
aaa
js
and
inc
push
mov
push
inc
pop
xchg
lock
mov
cmc
push
ret
aad
jp
xchg
mov
xor
enter
dec
fcompl
push
push
lea
enter
fisttps
inc
xor
jecxz
pop
xchg
lret
clc
pop
mov
inc
cmpsb
jnp
mov
in
ja
stos
nop
cmpsl
add
mov
nop
sbb
enter
dec
filds
adc
popf
test
mov
add
into
sbb
mov
xor
fs
sahf
mov
mov
jl
pop
dec
pop
scas
mov
jge
clc
add
aaa
paddb
mov
sub
rcrl
xchg
cmp
insl
fsubs
xor
xlat
push
jp
jg
xchg
rolb
cmc
ja
cmc
nop
mov
repnz
pushf
mov
add
popf
pop
mov
mov
push
movsb
call
in
cltd
int
lds
test
lea
bound
push
dec
fwait
xchg
sbb
xlat
cmp
mov
inc
and
out
xchg
add
bound
xchg
mov
shrb
cmp
add
inc
rcrl
xor
and
inc
lret
pop
pop
add
xchg
ss
test
js,pt
add
enter
mov
lods
std
xor
js
adc
je
mov
lret
jl
outsb
mov
dec
arpl
stc
cmpsb
push
mov
sbb
xchg
push
mov
cmc
pop
lahf
adc
pop
or
repnz
mov
fs
lret
lods
and
popa
xchg
frstors
mov
xor
sub
dec
push
jnp
push
sbb
jne
je
sub
sti
aad
pop
mov
sarb
cmp
jbe
sbb
jp
bound
xchg
mov
daa
lret
andb
and
inc
and
cmp
imulb
or
leave
mov
cltd
mov
mov
ficomps
icebp
and
fcmovnb
scas
dec
sbb
loopne
lret
in
sbb
mov
pop
cmp
stos
daa
sub
pop
push
sbb
xchg
pop
mov
pop
mov
lock
or
xchg
jo
pop
movsb
adc
into
adc
add
into
dec
fwait
imul
test
rolb
add
test
sub
mov
sbb
mov
add
sahf
scas
icebp
cmpsb
cmpsb
gs
mov
arpl
sub
push
push
enter
out
add
adc
out
lahf
stos
dec
xchg
ret
out
sub
xchg
lea
and
lds
jp
push
or
std
add
xchg
aaa
xchg
imul
sti
fucomip
clc
and
nop
jmp
add
mov
cmp
or
jb
mov
lods
mov
sbbb
in
pop
push
mov
mov
adc
sti
jp
or
lahf
test
sub
pop
fisubs
hlt
xor
or
rcll
int3
cs
das
dec
rcr
sbb
jg
insb
aas
divb
pop
lea
out
cmp
pop
or
adc
call
outsb
pushf
push
int
jne
dec
xor
xor
in
out
nop
stc
test
xor
xchg
adc
lret
es
cmp
pop
mov
out
sbb
inc
repnz
cmpsb
xchg
cmp
sub
mov
xorb
popf
stc
ss
push
movsl
mov
xchg
les
xchg
pop
cmpsb
in
sub
aad
je
cmc
nop
push
adc
imul
rcrb
push
test
mov
cmc
pop
sbb
mov
xchg
xchg
jae
js
mov
mov
fsubl
push
lret
dec
push
xor
cmp
sbb
loopne
jno
out
mov
push
addr16
mov
lock
jle
or
or
pusha
fwait
pop
in
dec
jge
lds
or
mov
movsb
ret
dec
das
scas
xor
xchg
lds
aad
push
sbb
scas
lcall
lcall
mov
add
add
mov
stc
incb
dec
out
pop
enter
inc
notb
sbb
xor
cwtl
pop
lds
ss
lret
jb
mov
inc
addb
inc
or
xor
xor
shlb
push
mov
pop
push
lock
pop
mov
or
cwtl
out
mov
mov
pop
stos
or
out
and
out
mov
leave
and
and
inc
ret
fistps
push
jae
lret
mov
dec
pop
or
enter
mov
js
mov
adc
inc
cmp
inc
add
scas
xor
or
mov
push
test
rcrb
lods
pop
push
ret
das
xlat
cmp
push
outsb
cmpsb
or
outsl
dec
daa
in
cmp
lock
jae
ret
adc
add
nop
jle
xchg
mov
insb
insl
test
push
pop
cmpsb
pop
xchg
daa
adc
jle
shlb
fstpt
and
sbbb
jecxz
cmp
cmp
jmp
adc
fcoml
pop
adc
add
jp
mov
movsl
and
pop
cmc
cwtl
xchg
loope
pop
or
lahf
xchg
pop
sub
or
push
xor
rcrb
push
fs
in
ret
push
and
mov
jecxz
ret
and
clc
push
mov
push
dec
xchg
leave
shr
lods
pop
xchg
in
mov
rol
in
ja
lea
mov
repz
test
sub
xchg
cmp
leave
loope
inc
ret
mov
pop
cmpsl
pop
fiaddl
mov
lods
or
dec
xchg
rcrb
mov
pop
popf
cmc
bound
fiadds
fsubrp
scas
popa
call
jp
lods
inc
lret
in
nop
je
repnz
faddl
mov
jo
dec
or
sbb
pop
shl
loope
test
lcall
pop
and
and
sbb
loop
jae
divb
aad
mov
xor
lcall
add
mov
push
or
sbbb
add
out
jge
xor
in
sti
dec
xchg
and
jno
inc
adc
xor
push
lods
daa
or
pop
or
aad
mov
in
into
out
cld
cmp
out
jl
jbe
call
icebp
callw
xchg
push
imul
or
out
enter
fdivrp
lods
fcmovb
or
push
addr16
jmp
lret
mov
xchg
xlat
cmp
scas
lret
xchg
cwtl
push
mov
xchg
mov
pop
stos
int3
or
repnz
fiadds
cwtl
and
popa
imul
stos
ds
mov
aas
add
mov
push
pop
and
adc
fisubrl
fdivrs
not
adc
sub
fisubs
lods
scas
in
insl
lds
hlt
rclb
or
add
shr
xchg
loope
decb
pop
es
and
js
pusha
iret
mov
leave
or
scas
xchg
mulb
add
pop
xchg
fdivrl
mov
pushf
xor
dec
aas
cmp
mov
fisttps
adc
pusha
sub
cmp
dec
or
pop
sub
std
icebp
aas
cmp
pushf
test
add
xor
stos
sub
into
inc
xor
iret
fwait
pop
fnstsw
sbb
adc
xchg
inc
dec
cmp
push
loop
sbb
cmp
jbe
addl
mov
sbb
adc
jnp
pop
in
rcrb
popf
outsb
sar
sarb
jno
int
test
mov
insb
pop
mov
add
sub
mov
cmc
dec
add
les
adc
xlat
dec
adc
adc
fcmovu
pushw
pop
xor
add
int
jmp
push
cltd
push
imul
nop
jge,pt
mov
xor
rcll
or
dec
sbb
lret
xor
inc
loopne
stc
ja
pusha
ficoms
enter
rclb
in
fs
iret
add
fdivl
dec
dec
jne
lret
je
push
jg
loopne
in
lea
push
push
test
push
jne
pop
push
stos
insl
lods
add
jbe
stos
xchg
jmp
mov
test
nop
lods
inc
inc
pushf
aaa
push
fcmovnb
daa
xor
adc
or
mov
out
inc
push
add
or
pop
push
jecxz
jle
repz
or
pop
inc
add
dec
cltd
scas
in
mov
bound
xchg
sub
jns
fadd
repz
mov
xor
test
mov
incb
pop
pop
addb
or
push
add
dec
jg
push
sbb
push
and
in
jp
aad
add
pop
mov
test
mov
and
and
imul
mov
nop
sub
in
xchg
popf
dec
xchg
arpl
mov
fstpl
adc
push
xor
jmp
cmp
out
xor
push
xor
imul
sahf
and
out
push
les
loop
inc
push
jge
clc
adc
repz
mov
sub
dec
push
cmp
jecxz
fsubp
in
mov
mov
shr
fbstp
or
jnp
stc
mov
sub
cmp
mov
xchg
mov
mov
in
and
repz
mov
loope
and
clc
fiadds
cwtl
popf
add
arpl
leave
cmp
jp
push
cmp
cmp
in
or
testl
les
mov
out
lret
arpl
sub
pop
dec
push
es
loope
jnp
hlt
mov
mov
mov
ja
push
sbb
imul
push
sti
add
mov
or
je
sahf
sbb
ds
lds
fcomps
dec
arpl
cmp
pop
jnp
mov
mov
sub
mov
vhsubpd
dec
psubq
aad
fbld
xchg
btc
inc
push
es
push
test
mov
pop
daa
jg
call
adc
adc
mov
leave
jl
inc
test
test
inc
movsl
mov
popl
stos
mov
cli
jecxz
mov
xchg
push
sub
outsl
jp
add
xor
lret
pop
xor
pop
adc
addr16
mov
sbb
lds
push
fsubs
lea
or
xor
fwait
pusha
mov
sbb
xchg
jnp
cmp
sbb
lcall
pop
adc
das
incb
scas
cltd
mov
sarl
dec
ja
jmp
pop
adc
push
push
outsb
pop
out
bound
dec
insl
push
enter
daa
mov
loop
sub
add
ret
daa
gs
add
dec
call
js
daa
div
and
or
pop
mov
mov
sub
pusha
test
arpl
ror
stc
dec
mov
lahf
bound
push
xorl
sub
out
stos
cmp
out
and
jb
push
enter
mov
rclb
nop
into
sbb
addr16
int
xchg
fstl
xor
cmp
fimuls
rorb
idiv
fldt
and
test
cmc
lret
cmpsb
shll
loop
out
decl
repnz
stos
mov
cmc
xlat
mov
xlat
pop
add
sub
jae
jmp
mov
jle
and
push
inc
dec
leave
aaa
and
data16
cwtl
inc
addr16
rcrb
or
inc
add
mov
std
dec
sbb
dec
adc
xor
xchg
test
lahf
daa
mov
daa
ret
or
push
lods
adc
inc
cmp
and
arpl
leave
jne
dec
in
and
inc
cld
xchg
jo
add
and
push
and
jecxz
fisttps
jle
xchg
cmp
mov
or
stc
loopne
pop
sahf
cs
scas
xor
adc
dec
mov
rcrb
int
outsl
push
inc
int
loop
sbb
jmp
or
mov
jmp
cmp
cmpsb
or
xlat
mov
shl
or
inc
js
movsl
sbb
daa
xor
xor
xchg
daa
fsubrs
data16
inc
inc
fidivrs
or
mov
mov
adc
mov
mov
cmp
mov
xor
or
ljmp
add
in
push
sbb
lods
pop
test
pop
xor
cmp
daa
mov
popf
movsb
xorb
mov
mov
xchg
adc
xchg
ljmp
jnp
sbb
push
sbb
ds
aas
fsubs
testb
das
dec
orl
aas
sub
pop
out
dec
test
jne
mov
sahf
xchg
push
adc
mov
jle
xor
roll
lret
ret
add
ljmp
repz
and
push
lret
pop
pusha
ret
cmp
ljmp
inc
xor
mov
dec
cmp
ja
adc
dec
mov
and
je
stos
mov
adc
lds
addr16
paddusb
mov
cs
pop
mov
test
scas
cmp
je
mov
or
xor
xchg
sub
inc
add
xchg
mov
test
repz
mov
inc
bound
in
sbb
adc
insl
sub
and
adc
lods
xlat
pushf
cmp
cwtl
ss
smsw
je
or
push
pop
jb
outsb
jl
sbb
xor
sti
ljmp
pushf
out
leave
arpl
sub
loop,pn
dec
rorb
mov
pushf
out
je
jmp
adc
cltd
inc
mov
test
sub
jo
mov
test
rorl
mov
jle
pop
outsl
andb
mov
mov
test
inc
mov
ret
push
mov
xchg
jb
test
mov
ds
adc
das
adc
mov
mov
pop
ja
mov
es
popf
sub
pop
outsb
jmp
push
mov
inc
int
push
jle
or
lods
sbb
sub
mov
imul
mov
xor
add
sub
mov
dec
aas
sub
cmp
gs
add
sub
ljmp
sbb
ret
mov
lret
cmc
cmc
sub
sub
sub
and
repz
mov
addr16
sahf
aaa
ds
test
inc
sbb
lcall
mov
mov
sbb
jo
testb
sahf
jmp
lock
fcomps
mov
sub
repnz
shll
jne
push
ja
or
aam
jnp
jp
repnz
mov
and
das
inc
adc
dec
mov
addr16
les
imul
ja
cmp
test
into
shll
scas
mov
clc
xchg
xor
mov
push
loope
lret
mov
pop
cld
pusha
mov
push
jmp
scas
jmp
mov
pop
pusha
adcb
xchg
sbb
dec
mov
dec
arpl
out
mov
dec
jnp
mov
movsb
enter
scas
out
enter
and
push
repnz
adc
gs
cltd
faddp
negb
scas
std
sbb
xchg
and
pop
stos
mov
add
xor
popa
mov
jmp
in
sbb
push
aam
push
sub
add
push
js
pop
shll
dec
xchg
pop
ret
adc
test
mov
mov
jo
loope
shrl
push
sub
lret
test
jmp
hlt
enter
sbb
stos
dec
dec
push
inc
lods
pop
ret
lret
mov
jb
add
jne
push
jb
stos
or
and
out
xchg
sub
sbb
xchg
jecxz
loope
xchg
fsubp
xchg
jecxz
cltd
xchg
mulb
scas
sbbb
dec
mov
xor
push
stc
inc
mov
push
xchg
or
loope
xchg
pop
loop
enter
cmp
pop
pop
xor
scas
jb
push
cwtl
mov
xlat
add
xor
sub
and
cmp
cld
jno
pop
inc
int
dec
mov
or
cmp
inc
ror
cmpsl
and
pusha
add
loop
cmp
mov
cmp
int3
adc
inc
add
inc
ljmp
dec
push
movsb
out
push
inc
scas
inc
shl
adc
daa
jno
add
sti
mov
mov
leave
push
jmp
sbb
pop
outsb
pop
incl
test
xchg
push
lret
cmp
jbe
pop
mov
mov
btrl
jb
push
xor
mov
sbb
jb
aaa
jo
cwtl
ss
mov
call
mov
mov
jno
push
push
cmp
insl
jl
sub
adc
mov
xchg
add
mov
jnp
jo
lea
fstpt
and
shll
jecxz
cmpsl
adc
adc
cmp
rcrl
cmp
div
mov
icebp
scas
ret
mov
int3
sbbl
andl
pushf
mov
dec
mov
or
xchg
repnz
loop
sub
mov
xor
les
std
shlb
sub
mov
cmc
xchg
mov
inc
sti
jp
int3
ds
dec
cmpsb
xchg
stos
inc
push
pop
movsb
push
dec
pop
push
sbb
cmp
lret
dec
das
int3
jnp
mov
push
pop
sub
and
or
andl
scas
sbb
movsl
push
ja
ror
insb
bound
sbb
adc
add
call
adc
lcall
jle
pop
inc
lret
ficoml
jle
or
sbb
es
cmp
sbbb
pusha
jae
ror
push
mov
xchg
lods
push
xchg
dec
movsb
popa
decb
imul
push
add
in
inc
mov
jns
xor
sbb
xchg
jl
pop
sahf
push
jl
bound
sbb
xor
lret
sarl
outsl
dec
jno
cwtl
xor
outsb
aam
shrl
pop
and
movsl
mov
rcrl
in
outsl
push
sub
xchg
mov
in
fisttpll
pop
mov
jnp
inc
addb
lret
jo
bound
cmc
es
scas
mov
pop
xchg
enter
in
pop
cmpsl
cmp
pusha
lea
test
xor
sbb
push
cmp
test
ds
inc
mov
jns
fld
mov
lret
insb
adcb
popf
inc
ja
jg
sbb
and
je
dec
andb
mov
addb
sub
mov
xlat
xor
inc
pop
out
adcl
das
push
dec
cmpsl
xor
push
into
push
or
jnp
jbe
sbb
dec
jnp
push
in
lods
sub
js
add
or
xchg
mov
add
rclb
jae
outsb
cld
mov
mov
xchg
inc
xor
mov
sahf
xchg
adcb
aam
xchg
cmp
mov
xchg
and
cmp
sbb
and
sahf
or
and
push
addl
add
mov
jle
aam
pop
sbb
mov
xlat
push
xor
sub
add
cltd
jmp
lods
sub
dec
pushf
and
lock
repnz
push
inc
sub
sub
in
les
loopne
in
loop
xor
adc
or
mov
xchg
aas
push
mov
jbe
stos
test
mov
mov
cmp
stos
and
cmp
add
insb
rolb
outsw
pop
lret
scas
sub
sbb
movsb
movsb
dec
cmc
scas
jns
inc
jns,pn
fstl
mov
aam
fwait
xchg
push
insb
aad
out
or
test
mov
test
jl
dec
push
and
push
std
push
push
jmp
sbb
push
imul
fdivr
xchg
adc
imul
std
push
push
ja
clc
xchg
inc
iret
or
aad
into
dec
push
or
or
imul
sub
adc
std
add
ss
lds
stos
je
jb
push
add
jb
clc
xor
mov
test
xchg
push
jp
xor
shlb
int3
push
lret
push
xchg
add
inc
divl
or
jae
jl
mov
push
pop
jp
cmp
xchg
pop
mov
gs
add
sbb
sub
dec
mov
idivl
sub
pop
lods
lods
cmp
mov
push
xchg
mov
mov
xchg
scas
ret
shrb
jecxz
dec
add
mov
cmp
icebp
pusha
mov
sbb
rcll
lahf
push
sarl
call
in
and
aaa
pop
call
push
sbb
lock
mov
mov
cmpsl
cmc
ja
nop
cmpl
and
xchg
cmp
roll
test
test
sub
subb
pusha
mov
xor
xchg
or
jb
or
mov
stos
adc
push
jne
aad
nop
mov
mov
in
or
repz
mov
test
jno
cmp
aas
push
adc
arpl
push
cmpl
fiaddl
int
std
xchg
loop
mov
dec
jmp
in
or
cmp
or
push
dec
dec
and
mov
sub
inc
sub
orb
fidivs
imul
popf
leave
pusha
subb
xchg
pop
in
stos
mov
fisubrl
fisubl
outsb
int
jmp
lahf
stos
lea
add
dec
enter
cwtl
movb
xchg
lahf
outsb
mov
add
sub
mov
gs
stc
fidivl
push
inc
xor
mov
dec
ljmp
lcall
imul
cmpsb
pop
movsb
or
in
gs
pop
mov
adc
std
cmp
sbb
sbb
rcrl
xchg
push
sbb
stos
push
jg
aad
sbb
push
xor
adc
je
mov
ret
sti
xor
ds
xor
sbb
mov
iret
mov
inc
adc
rclb
scas
add
dec
rcr
das
adc
adc
xchg
loopne
push
in
mov
dec
clc
dec
push
mov
repz
mov
pop
sub
or
and
popa
xchg
mov
loope
cwtl
cmpsb
mov
test
popf
mov
push
repz
add
mov
xor
mulb
notrack
cmp
dec
fldt
push
clc
pop
outsb
add
or
sbbb
jns
mov
insl
inc
pop
add
xlat
pop
roll
fsubrs
adc
inc
fcomp
cld
mov
mov
repnz
pop
xchg
mov
pushf
shlb
jle
test
push
lds
push
cmc
mov
or
jmp
jnp
mov
js
enter
cli
jp
lret
lock
imul
mov
sahf
adc
push
and
sub
test
jge
out
sub
imul
add
cwtl
fdivrs
jns
jg
sbb
sbb
mov
lret
xorl
ficompl
ja
add
cmpl
mov
pop
push
incb
scas
movsb
inc
add
loop
adc
push
or
les
out
or
pop
cmp
enter
in
lods
cmc
rcr
lcall
mov
popa
mov
test
adc
mov
divb
sbb
xchg
pop
or
lcall
jne
push
cmp
jp
das
call
repz
mov
in
sarl
dec
std
ja
test
into
movsb
pop
cmp
inc
cmpl
push
mov
mov
dec
cmp
or
pop
cmp
xor
push
cltd
ret
inc
cmp
sub
xor
rclb
sub
mov
dec
mov
jne
sub
sahf
fistps
insb
fwait
imul
push
fidivl
testb
fcmovnb
loope
and
mov
dec
orl
cwtl
and
mov
push
sub
outsb
call
decl
or
mov
leave
xchg
adc
imul
dec
inc
cltd
out
cmp
dec
adcb
pop
jle
dec
add
dec
and
out
cmp
shrb
and
hlt
in
dec
push
adc
call
pop
ffreep
or
fsubrl
xchg
jno
xchg
mov
push
mov
mov
call
mov
or
xchg
xor
and
ss
and
ljmp
cmp
roll
js
sub
fcomps
lahf
jmp
cmp
jle
inc
push
xchg
jns
pop
rol
loop
adc
mov
rorl
aam
lods
push
cmc
aaa
enter
sub
cmp
jbe
mov
stos
pushf
in
fstps
rorb
mov
inc
push
int
push
sub
or
sbb
xor
mov
scas
xor
lds
cltd
jne
jne
insb
mov
mov
jmp
push
xchg
iret
data16
push
push
push
add
out
hlt
mov
dec
jp
jg
xchg
sbb
movsl
test
adc
shlb
or
mov
lods
push
daa
mov
push
dec
ret
subb
nop
repz
cmp
sub
push
call
cmpsb
push
test
dec
lahf
mov
mov
fwait
push
or
int
pusha
adc
xor
dec
rclb
xchg
pop
out
stos
mov
sub
xchg
mov
ds
loopne
rcrl
incl
stos
pop
jecxz
push
xor
add
ss
xchg
sbb
pop
rclb
add
sbb
push
mov
mov
test
stos
in
mov
lret
push
mov
adc
fnstenv
aas
xchg
hlt
pop
dec
stos
cld
lods
inc
and
hlt
int
sub
mov
stos
dec
fdiv
and
stos
hlt
ror
out
push
adc
adc
scas
loop
dec
add
fistpl
cmp
mov
les
or
push
mov
dec
mov
push
adc
pushf
inc
sbb
push
mov
push
pop
cmpsb
mov
jns
dec
repz
pop
pop
pop
push
jecxz
xlat
xor
fstps
add
nop
adc
push
mov
insb
sbbl
fwait
jle
jno
clc
pusha
sub
inc
call
mov
adc
and
lret
outsb
add
xor
mov
mov
jb
les
jp
cld
cmp
frstor
xor
add
cmc
xchg
pop
cld
ljmp
xor
sbb
dec
cmovo
nop
fsubr
xchg
scas
idivb
and
je
fs
out
push
cld
mov
cld
dec
xchg
cmc
into
test
cmp
pop
ljmp
or
aad
daa
jle
xchg
and
inc
sub
jmp
and
xor
lds
mov
cmp
es
sub
or
and
subl
push
dec
mov
inc
dec
xor
mov
cmp
fwait
aad
mov
add
scas
loop
repz
arpl
lds
mov
pop
sub
mov
rcll
fadd
sbb
push
xor
or
dec
adc
popf
ss
sub
pop
imul
pop
or
cs
pop
sub
shll
gs
sbb
bound
test
adcb
stc
and
add
stos
imul
popf
gs
push
pop
test
push
iret
or
nop
je
mov
out
out
ja
adc
mov
mov
sub
out
mov
push
or
xchg
enter
add
sub
mov
and
repz
ss
in
imull
inc
dec
pop
out
jno
pop
dec
dec
cs
rcrl
adc
push
imul
or
dec
cmp
jno
sub
dec
movsb
bound
scas
sub
push
cmp
sub
push
push
jp
mov
outsb
inc
sbb
inc
pop
andl
pop
xor
cli
popa
dec
addps
insl
mov
mov
cmpsl
cmpsl
xlat
mov
icebp
ja
stos
mov
cmc
mov
lret
fs
sbb
sub
mov
mov
aam
aam
enter
iret
mov
push
mov
xor
stos
sbb
lods
std
cli
add
or
adc
ja
sub
mov
jbe
add
pop
xor
jno
sub
push
pop
cli
ja
pop
fdivr
dec
shll
add
gs
mov
cmp
aaa
insb
mov
inc
push
dec
dec
test
inc
stos
clc
pop
dec
addr16
pop
sub
ljmp
push
lock
adc
shll
sbb
pop
jg
std
loopne
cmpsl
insb
inc
pop
pop
clc
cmc
xchg
imul
inc
int3
add
test
mov
fs
mov
test
mov
cmpb
movsl
adc
jle
jno
clc
sub
sahf
fiaddl
xor
and
test
clc
repnz
add
lods
cmp
mov
imul
jmp
push
test
or
mov
mov
pop
mov
test
test
push
mov
int3
push
jp
ret
shrb
stos
in
stc
stos
sub
aad
inc
adc
cmp
lods
pop
or
mov
and
imul
ret
inc
jl
mov
and
iret
lret
sbb
into
xor
aam
fs
adc
sub
adc
adc
or
mov
cmpsl
push
out
int
idivl
and
cli
outsl
test
orb
mov
xor
xchg
jl
pop
xchg
mov
sbb
pop
add
or
inc
movsl
adc
sbb
xchg
or
mov
stos
scas
add
enter
inc
mov
push
sbb
ficomps
cmc
roll
lret
cmc
mov
push
adc
sbb
inc
add
push
arpl
in
aaa
fwait
jg
pusha
mov
mov
scas
cmc
loop
xchg
inc
imul
dec
loopne
sbbl
shlb
mov
mul
enter
mov
mov
xor
rcll
adc
jg
inc
add
sbb
scas
lret
aad
mov
adc
arpl
or
inc
mov
cmpsl
xabort
or
aad
dec
push
jle
pushf
pop
mov
dec
xchg
jle
scas
or
push
mov
popa
hlt
xchg
rcl
repnz
and
dec
and
aam
pop
and
jmp
lods
ss
mov
pop
pushf
into
xchg
sbb
out
pop
sbb
mov
and
nop
daa
out
adc
mov
jl
mov
test
out
je
scas
imul
xlat
sbb
adc
ja
cld
scas
divl
and
push
jb
cmp
inc
mov
adc
sbb
rcll
out
and
push
addr16
mov
fsubs
mov
and
mov
les
xor
enter
add
lret
shlb
and
movsb
xchg
scas
lcall
bound
add
lods
mov
or
stos
stc
stos
push
rorb
addl
fmull
lcall
jbe
out
adc
out
cmpsb
lds
outsb
push
out
pop
rorl
mov
adc
out
out
or
fwait
jo
mov
xchg
inc
xor
fists
inc
jge
dec
dec
pusha
mov
push
cmp
xchg
pop
mov
and
xchg
dec
push
add
or
cmp
inc
xchg
sbb
adc
dec
add
pop
sbb
jo
mov
add
sub
mov
cmp
adc
stos
cmpsl
jne
gs
popf
adc
push
mov
psubq
fsubrl
pop
and
adc
std
cmp
pop
jns
rcll
dec
pop
aam
fucomip
or
mov
movsl
add
enter
sti
cmp
in
cli
fwait
test
lods
pop
or
je
sbb
jmp
int
mov
daa
mov
scas
push
inc
mov
xchg
xchg
cltd
rorb
or
shlb
jne
xchg
into
outsl
rcrb
dec
out
lods
insb
dec
push
push
ss
xor
adc
add
jbe
std
lret
jo
push
setns
xor
mov
fwait
daa
inc
mov
pop
aad
in
cmpsl
clc
jmp
cmp
jmp
std
rclb
aad
loope
xor
repnz
add
pop
stos
adc
or
shrb
stos
lea
int
stos
out
lock
mov
xlat
push
and
ds
into
adc
cmpsl
cwtl
pop
pop
push
mov
dec
xchg
adc
cmp
cmpsl
xchg
aaa
aam
mov
mov
jmp
ja
or
aam
fsts
cli
sbb
mov
inc
adc
rorl
adc
into
push
lcall
mov
ljmp
mov
push
add
xor
data16
je
leave
pop
stos
cmp
gs
pop
adc
mov
inc
shl
push
sub
cmc
enter
ljmp
push
stos
xor
push
js
xor
movsb
mov
mov
mov
mov
scas
mov
loopne
xchg
popf
fsubrl
loope
and
add
push
or
or
andl
inc
add
push
dec
sub
jnp
pop
pop
bound
std
dec
and
hlt
add
push
insb
and
add
inc
jns
jg
insb
vpmacsswd
add
inc
pop
insl
xlat
popa
ja
mov
ljmp
jp
adc
lcall
fucomip
xlat
mov
and
push
in
sbb
lret
add
cmp
inc
jp
test
stc
mov
loope
dec
popf
cwtl
pop
jp
iret
mov
pop
xchg
pop
rcrl
add
pop
sub
lret
hlt
daa
fnsave
subl
sub
movsl
inc
xor
unpcklps
xor
cmpxchg
jb
dec
mulb
mov
dec
mov
pop
addr16
mov
xchg
cmp
inc
es
daa
jmp
repz
xchg
cmp
out
adc
test
or
push
ljmp
xor
mov
testl
push
lret
xchg
adc
test
sbb
pop
xor
mov
jl
mov
lret
lea
mov
xrelease
je
lahf
aad
push
mov
stc
pop
and
sbb
or
cwtl
cmpsb
inc
push
test
pop
bound
push
dec
cld
jns
mov
lods
stos
inc
add
fwait
xchg
xchg
lods
mov
out
xor
jbe
mov
or
fistl
and
mov
cwtl
xor
arpl
push
cmp
pop
sub
cmc
int
mov
dec
cmp
call
pop
pushf
inc
adc
test
dec
cmp
std
fs
jo
inc
sahf
sbb
rcll
cmp
fadds
mov
push
inc
shrl
rorl
addr16
or
nop
fwait
das
shl
pop
adc
scas
pop
sbb
xchg
cltd
xchg
leave
loopne
and
inc
in
or
pop
mov
lods
xchg
mov
add
cmp
sub
sub
movsb
bound
cwtl
jmp
xchg
mov
push
ljmp
push
mov
rol
mov
jge
mov
pop
js
mov
push
faddl
mov
and
stc
fnstcw
leave
jg
dec
cmp
and
jp
lods
add
out
jg
jecxz
paddw
sbb
in
int
clc
enter
mov
xchg
or
jge
jo
fistpll
jecxz
fidivl
xor
or
or
ss
stos
sbb
adc
mov
bound
outsb
push
add
cmp
out
mov
roll
sbb
mov
inc
mov
mov
mov
gs
sub
jge
mov
mov
mov
inc
clc
cld
inc
ret
test
clc
ret
mov
mov
lret
stc
mov
ljmp
pop
or
out
and
inc
push
and
mov
add
and
xchg
or
mov
mov
andb
loop
xor
loopne
test
jle
cmp
push
outsb
mov
push
aad
fmuls
stos
cmp
xor
xor
std
mov
enter
mov
xor
push
pop
sub
loopne
aaa
fucomi
pop
dec
stos
pop
pop
lods
pop
insl
fs
xlat
pusha
mov
mov
rsm
movsb
test
jle
popf
push
ss
cmp
add
xor
std
sbb
sub
movl
mov
aam
rclb
shl
and
inc
lea
adc
xchg
jg
fidivrl
mov
sbb
iret
xor
test
es
jecxz
push
push
sub
and
jmp
jge
pop
jne
and
flds
out
pop
adc
stos
stos
into
test
jae
shl
sub
fst
jge
aam
scas
rcll
dec
imul
sbb
pop
aad
and
sbb
mov
shll
imul
jo
fldl
sbb
pop
ss
add
pusha
jb
xchg
ret
lcall
and
addl
cwtl
xchg
out
stc
and
test
xor
and
xchg
int3
aas
push
dec
scas
and
ds
js
pop
rcll
xchg
cwtl
arpl
or
cmpsb
mov
cvtdq2ps
daa
pop
pop
sub
mov
inc
jb
sub
push
lahf
out
pop
mov
adc
push
xor
mov
xchg
pushf
and
inc
sbb
gs
sub
push
xor
add
push
sbb
fwait
mov
rcll
cmpsl
mov
dec
fistps
push
xchg
mov
sub
xchg
pop
inc
ss
mov
decb
or
push
ljmp
push
ja
sub
sbb
imul
mov
mov
mov
lods
sub
inc
lock
or
pushf
test
lods
xchg
aaa
mov
cmp
test
inc
repz
nop
adc
ret
ret
inc
dec
popa
js
insl
imul
sbbb
rolb
cmp
lret
inc
sti
adc
inc
cs
push
insb
mov
repnz
push
cs
cwtl
imul
adc
mov
insl
daa
mov
repnz
pop
sbbl
fwait
jg
inc
mov
cs
stos
mov
or
imul
jns
cmp
mov
push
sbb
push
xchg
in
scas
cwtl
add
push
iret
xor
push
int
pop
mov
dec
add
and
push
es
jns
jb
ljmp
cmp
test
dec
lahf
pop
hlt
das
cld
jge
xchg
fwait
aad
je
mov
jecxz
add
cld
stos
leave
mov
adc
clc
sbb
rorl
not
mov
rol
xchg
cmc
out
push
sbb
xchg
pop
mov
push
mov
out
lods
mov
and
mov
cmp
aad
lds
insl
mov
jmp
and
push
enter
xchg
sub
mov
ja
and
es
or
mov
jns
inc
and
push
jbe
mov
cmp
adc
hlt
mov
rcl
jns
push
aas
mov
mov
and
jne
mov
sbb
pop
sbb
in
lret
xchg
test
mov
ja
aas
rol
aad
js
popf
aaa
sub
sbb
mov
inc
mov
mov
je
dec
sbb
insb
xchg
cmpsl
stc
dec
or
les
mov
loope
pop
sub
cmp
mov
test
push
movsb
or
sbb
test
lods
sub
pop
fsubl
or
bound
and
sub
test
or
subl
jle
cmc
pop
ficoml
outsl
ljmp
adc
jmp
pusha
xchg
daa
test
andl
adcb
outsl
mov
es
cld
leave
ss
jae
loopne
sub
jp
jo
mov
orl
dec
pop
pop
adc
push
adc
sub
in
mov
dec
jecxz
fldl
lods
lcall
pop
add
mov
enter
cmp
ljmp
aad
or
inc
inc
lock
mov
or
pusha
mov
add
std
hlt
cs
test
notl
adc
mov
popf
push
cmp
sahf
mov
or
adc
inc
stos
clc
je
sub
mov
ret
ret
cmp
inc
push
xor
mov
xor
xchg
mov
xchg
cli
pushf
mov
es
pop
or
pop
jb
mov
divl
loop
shrb
add
fcomps
fimuls
fbstp
das
fneni(8087
mov
adc
jl
lahf
push
into
mov
adc
jae
push
sbb
push
xor
push
out
or
repnz
leave
lret
dec
ffreep
call
pusha
pop
mov
mov
mov
pop
dec
or
test
sbb
sbb
mov
cltd
mov
outsl
jne
je
push
mov
repnz
movsb
jecxz
loope
shrb
lock
loope
mov
lahf
addb
pop
repz
jmp
inc
and
xor
adc
xor
ret
xlat
push
dec
push
lret
or
fistpll
push
subl
or
xchg
adc
shrb
dec
stos
sbb
and
jp
mov
lods
push
mov
pusha
xor
xor
test
pop
and
add
fwait
in
mov
xchg
xlat
mov
loopne
or
and
mov
shr
jg
mov
cli
enter
decl
cmp
inc
jg
inc
mov
loope
test
jo
out
idivb
icebp
jge
jbe
scas
call
in
sub
push
ja
lret
out
es
jnp
popf
inc
dec
and
add
mov
sub
lahf
pop
pop
jmp
adc
push
lahf
inc
push
int3
int
or
add
dec
or
push
enter
nop
inc
and
and
cmp
dec
insl
push
adc
sub
movsl
lds
adc
add
add
push
or
push
cmpsb
notb
call
xor
and
int3
adc
push
mov
push
mov
in
lock
mov
iret
nop
insb
popa
and
ljmp
fmuls
inc
inc
inc
imul
add
ljmp
xchg
movsb
adc
mov
test
addb
ss
gs
iret
xor
xchg
pop
xchg
xchg
push
fsubr
cmpsb
adc
adc
js
pusha
ret
lods
push
mov
sbb
jnp
mov
xor
adc
xchg
jg
and
mov
movsl
shl
push
adc
add
mov
pop
bound
neg
fmul
sbb
add
jo
roll
mov
dec
aaa
push
pusha
lods
mov
shlb
mov
loopne
arpl
fwait
fs
pop
inc
xor
xchg
push
lahf
movsb
js
aad
mov
insl
filds
ret
mov
popa
sub
mov
and
mov
outsb
test
and
ficomps
adc
les
xchg
lea
arpl
jle
iret
cmpsl
add
stos
mov
adc
mov
mov
int3
and
loopne
ficomps
sub
nop
cmp
mov
dec
xor
fcoms
xor
mov
jmp
es
insl
cmp
mov
imull
lcall
ja
repz
enter
andl
xchg
add
scas
mov
ds
shll
test
lcall
cmp
inc
xor
adc
cltd
in
lods
jmp
pushf
scas
mov
ss
fidivs
pop
pop
push
sub
or
inc
pop
int
lret
sub
xchg
in
in
and
mov
xor
testl
xlat
push
cmp
push
test
jl
int
push
mov
xchg
or
jbe
out
cld
in
cmp
jb
out
jge
cmp
add
testl
addr16
push
xchg
mov
imul
fcoms
mov
mov
test
inc
stc
xor
mov
and
pop
lea
xchg
inc
sbb
insl
jnp
xor
fstpt
mov
lock
std
or
fcmove
add
xchg
scas
fists
cmp
push
jne
test
and
sub
xchg
xchg
push
stos
and
pop
mov
cmpsl
or
or
js
inc
jge
sub
mov
xor
mov
and
sub
insl
fldt
jmp
jmp
pop
mov
mov
fyl2x
aas
push
pop
mov
add
test
push
mov
lcall
and
test
scas
pushf
movsl
test
mov
dec
insl
jns
data16
cld
shlb
inc
popl
rcll
add
hlt
xchg
mov
fdivrl
lds
pop
fnstcw
ds
push
push
cltd
adc
or
jo
sub
push
dec
arpl
arpl
add
sub
outsl
repnz
cwtl
or
mov
xor
ja
idiv
test
xchg
xchg
cmpsb
adc
icebp
lcall
fiadds
movsb
pop
clc
test
ret
mov
outsb
aaa
jp
ret
mov
adc
sub
pushf
mov
out
jle
cmp
les
dec
fcmovnu
and
jecxz
xor
jl
dec
out
jmp
push
pop
rcll
scas
push
fstpl
scas
inc
ljmp
pop
xor
adc
or
loop
mov
mov
xlat
pop
sub
loop
jbe
pusha
jb
xchg
faddl
sub
fcoms
xchg
fdivrp
ss
sub
sti
daa
int3
dec
ficoml
cs
std
dec
or
xchg
mov
mov
pop
insl
rolb
cmp
inc
mov
xor
movsb
sub
dec
lods
mov
mov
scas
mov
test
stos
lahf
push
insb
adcl
cltd
xor
out
jne
orl
ret
push
pop
jle
push
mov
les
dec
cs
and
jb
jecxz
push
dec
jl
push
lea
cmp
and
mov
or
movsl
scas
jle
loopne
pop
dec
jge
and
sbbb
outsl
int3
and
push
rorb
inc
sbb
cld
jb
jae
dec
sub
pop
mov
pop
insb
test
push
push
sti
repz
sub
mov
or
cmp
add
xchg
sbb
xor
cmp
mov
ljmp
aad
test
fadds
inc
out
inc
in
push
aad
dec
add
test
jge
xchg
out
je
daa
push
ja
iret
fwait
fs
test
pop
fistl
out
in
sbb
pop
test
mov
pop
movl
add
push
or
lahf
push
push
inc
jne
push
jbe
and
scas
pop
les
adc
aas
lds
repnz
add
inc
out
fnsave
idivl
pop
std
pop
push
data16
push
out
and
sub
outsb
push
ret
mov
mov
inc
stos
sti
mov
out
mov
cld
inc
sub
sahf
inc
lds
mov
stos
and
mov
test
sbb
mov
push
sahf
dec
decl
pop
movb
dec
jmp
jp
push
testb
sti
jo
testl
je
test
fs
aaa
mov
or
loope
pop
push
data16
adc
jb
and
sub
fs
cld
in
aaa
mov
insl
pop
ja
jle
cmpsb
and
cli
imulb
call
mov
pop
dec
popf
test
mov
jo
lea
loope
je
addl
mov
sti
mov
inc
pushf
ljmp
or
not
cmp
lcall
aad
das
sub
xchg
jae
xor
sub
lret
dec
add
pop
int3
out
cld
fildll
sub
in
out
ja
test
jg
xchg
clc
push
in
std
inc
lret
sub
pop
push
xor
bound
mov
into
cltd
das
test
aam
inc
mov
mov
mov
push
mov
ss
add
aam
add
dec
ret
popa
imul
xor
loope
fadds
test
jecxz
repz
loop
pop
cwtl
loop
xor
filds
xor
cli
in
inc
sbb
sub
or
mov
jmp
push
and
lcall
mov
les
inc
cwtl
imul
sbb
call
movsw
cmp
sub
xchg
xor
mov
into
push
mov
cmpsb
adc
adc
rolb
mov
aad
test
jae
cld
popa
fistpll
pop
outsb
test
dec
ja
cmp
xorl
in
jne
sbb
xchg
cwtl
fimuls
insb
sbb
mov
push
aam
or
ror
imul
aam
loope
mov
xor
and
and
aaa
dec
scas
and
sub
movsl
sbb
xchg
ljmp
enter
lret
mov
mov
inc
clc
shll
ja
data16
lea
fidivrs
push
test
stos
add
out
ds
sbb
gs
xchg
dec
xchg
movsb
mov
sbb
jg
push
cs
xchg
jl
test
ljmp
jne
sahf
lods
mov
inc
inc
ja
imul
mov
jbe
sti
mov
loopne
mov
sbb
iret
out
xor
rcrb
cli
call
jbe
pop
pop
add
std
pop
pop
scas
pop
mov
push
fnstcw
add
stc
in
mov
sub
or
shll
push
mov
cmpsb
movsl
jmp
jmp
lods
lock
xchg
xorl
jmp
push
rclb
frstor
out
test
dec
js
cmp
mov
rclb
jae
dec
jge
xchg
leave
push
adc
leave
loopne
aad
xor
mov
sub
push
and
out
jne
leave
out
aad
jp
rclb
gs
sub
aad
aam
inc
push
btc
call
lds
mov
xlat
cmp
and
adc
movsb
xor
test
push
out
adc
lahf
or
inc
stos
rcll
js
and
mov
sbb
jb
imul
cmp
and
jbe
insl
cltd
and
sbb
xchg
jge
insl
mov
pop
and
les
pop
mov
pop
xchg
cmp
ljmp
out
outsl
push
ficompl
ficompl
cmpsl
jge
out
pop
mov
inc
sbb
jae
mov
jns
orl
popa
insl
xor
roll
push
es
sti
fwait
lds
pusha
jno
add
out
push
scas
gs
sub
fldcw
lods
mov
xorb
xor
aad
mov
ds
je
ja
cmpsl
lock
imull
cmp
pop
mov
xor
inc
push
xchg
push
ljmp
dec
push
movsl
jno
sub
fcmovnu
cli
jmp
icebp
stos
rolb
or
dec
mov
fwait
adc
mov
mov
lods
sub
push
sahf
mov
mov
xchg
divb
subb
movsb
fsubrs
mov
xlat
pop
inc
mov
subb
push
jecxz
cmpsl
inc
notb
pushf
stos
xchg
mov
mov
ja
jb
mov
inc
xor
pop
mov
and
cmp
xor
pop
push
lods
dec
out
and
pop
nop
in
cmpsl
es
push
lock
jne
es
jl
addr16
sub
mov
mov
pusha
enter
call
cli
mov
push
jbe
stos
ja
mov
push
adc
inc
repz
std
leave
add
outsl
inc
les
in
cld
push
test
ja
fisttpl
xor
js
mov
addr16
push
lret
push
and
pop
cmpsb
fdivrs
jno
xchg
jnp
pop
pusha
cmp
mov
cmp
xchg
xor
push
cmp
dec
bound
xchg
and
add
rcll
adc
cmp
mov
adc
sti
add
test
pop
fcomps
pusha
mov
xorl
inc
sbb
nop
add
out
adc
mov
shll
mov
lods
push
fbstp
dec
mov
and
imul
dec
lahf
jecxz
shl
lods
stos
sbb
daa
jnp
push
loop
scas
mov
lods
adc
push
movsl
cmp
dec
outsl
jne
call
sahf
std
popa
lock
fs
imul
pushf
adc
pop
pop
cmp
mov
pop
les
in
ficomps
jp
imul
mov
mov
xor
out
xchg
stos
mov
lods
pop
notb
mov
sti
adc
add
das
or
insl
loope
fsts
jg
mov
outsb
mov
xchg
lock
mov
push
sahf
mov
adc
mov
or
dec
hlt
clc
ljmp
jp
sbb
in
sti
pusha
sbb
mov
adc
sti
fisttps
and
mov
lea
sub
xor
xchg
std
sub
push
dec
mov
loop
xor
sub
sub
jno
push
mov
inc
pop
mov
lret
imull
aad
lock
xchg
leave
cmc
adc
arpl
test
push
mov
mov
clc
dec
icebp
test
outsb
xchg
stos
mov
lock
inc
pop
in
andb
test
xor
adc
cmpsb
mov
adc
test
dec
mov
mov
imul
arpl
pushl
sub
fs
add
inc
lea
adcl
xchg
or
xchg
and
inc
pop
imul
aaa
jne
adc
jmp
scas
popf
pusha
clc
mov
and
call
add
xor
pop
cmp
scas
mov
ffreep
sbb
pushf
mov
out
imul
nop
mov
fwait
xlat
pop
add
sub
sahf
loop
xlat
test
push
lcall
push
aam
popl
mov
stos
or
inc
xchg
mov
push
pushf
mov
out
rcrb
scas
xchg
les
sub
cli
mov
popf
outsl
push
mov
and
xchg
aad
mov
inc
popa
out
pop
jo
cmc
scas
in
and
mov
dec
add
inc
mulb
ja
cs
cmp
adc
mov
call
xor
xchg
call
lcall
or
fildl
push
pop
insl
in
pmullw
insb
add
out
outsb
ret
mov
jne
mov
div
push
sahf
imul
sarl
add
leave
gs
or
adc
cli
orb
gs
jae
xor
sbb
cvtps2pd
xor
or
add
push
int
aas
in
jle
jo
mov
xorl
xchg
inc
push
lds
add
adc
dec
sub
sarb
cltd
in
mov
shll
sub
sub
in
add
or
push
push
sub
enter
rclb
rolb
lock
negl
cmp
add
sub
mov
dec
test
test
ret
aam
or
ljmp
or
icebp
push
cmp
enter
imul
push
jne
push
ljmp
push
dec
test
shl
inc
inc
je
call
push
mov
adc
jg
scas
in
in
pop
movsl
ljmp
jne
movsb
add
fisubl
lods
aam
gs
push
stos
rcrb
sub
outsb
test
bound
movsb
mov
xchg
jne
hlt
dec
sub
rclb
idiv
add
roll
jge
mov
scas
loopne
gs
das
mov
push
adc
mov
in
pop
mov
test
jmp
popf
in
xchg
mov
mov
mov
push
and
cmpsl
push
jg
ret
mov
sub
shrl
in
shll
mov
cmp
pop
sub
loopne
les
or
cltd
repz
jb
ss
inc
in
insl
call
jecxz
lea
push
mov
outsl
out
test
xor
jecxz
cmc
pop
rcrl
pop
cmp
rcll
out
mov
xor
sub
inc
cmp
add
pop
cwtl
pop
adc
ja
fs
inc
adc
stc
fidivl
sbb
mov
push
aaa
pop
mov
incb
ja
add
jns
std
xor
push
pop
aas
mov
mov
mov
arpl
test
fs
pop
cmpsl
in
xor
push
jns
cmp
popa
adc
mov
mov
faddp
in
xchg
fcomps
sub
leave
xor
xor
add
mov
inc
decb
call
mov
dec
pop
popl
and
cltd
adc
popa
jp
insl
dec
adc
jo
fwait
repz
jmp
xchg
lods
ja
hlt
mov
push
mov
fs
inc
neg
xlat
sub
in
fsubr
lods
and
sub
or
mov
fwait
rolb
pop
stos
jmp
loop
xor
test
out
lods
loopne
mov
stos
test
mov
pusha
scas
and
mov
lcall
push
pop
lcall
jg
jae
js
adc
std
add
push
xor
push
inc
test
lret
xchg
lcall
cmp
mov
int
and
xchg
test
mov
mov
std
ja
or
xchg
ret
mov
inc
scas
jns
fisttps
ss
sbb
mov
push
icebp
hlt
xchg
cmp
fs
arpl
adc
or
push
jp
imul
push
pusha
outsl
jae
sbb
jmp
imul
cmpsl
imul
mov
fdiv
push
or
lods
mov
lahf
pusha
push
add
cmpsl
xlat
mov
call
stos
outsl
dec
mov
ljmp
leave
rorl
mov
fbstp
pop
cmc
cmc
inc
jnp
add
xor
popf
je
fcoml
ljmp
fs
mov
mov
scas
test
popa
push
cmp
jge
dec
mov
lods
lea
jg
sbb
inc
adc
dec
icebp
sub
jl
sub
leave
push
pop
add
xchg
mov
xchg
insb
ret
jae
xor
mov
xor
insl
adc
jl
fwait
pusha
lds
add
mov
popa
test
cmp
std
or
ficoms
adc
add
stos
lea
jno
adc
cmp
roll
stos
mov
test
ljmpw
push
push
popf
add
lock
sbb
cwtl
xchg
incl
ljmp
icebp
sbb
push
xor
shl
lds
aaa
out
xchg
mov
aas
add
aam
or
call
repz
subb
sub
push
mov
sub
jge
and
movsl
and
xor
and
outsl
insl
push
jae
dec
bound
cmp
xchg
cmp
shl
cwtl
leave
imul
pop
or
and
pop
cld
pushf
xchg
mov
test
mov
lahf
adc
mov
mov
pushf
xchg
mul
and
jnp
push
ficoms
std
cmp
cmp
inc
ljmp
add
movsl
popf
cltd
loopne
ja
add
sub
jb
xor
nop
adcl
insb
pushf
sti
movsl
xchg
push
imul
mov
sahf
lea
scas
inc
add
movsl
das
inc
icebp
cmp
fwait
jg
pop
xchg
inc
add
sbb
scas
cld
fsub
pop
out
push
jo
fstpt
sbb
in
xchg
ds
loope
stos
jne
and
xchg
sub
addb
push
mov
enter
mov
adc
insb
inc
sub
add
xlat
push
lds
pop
stos
stc
xor
pusha
mov
fwait
push
adc
xor
add
test
nop
repz
add
scas
in
dec
cmpsl
push
sbb
push
lock
pop
jl
push
inc
xchg
cmc
push
mov
mov
mov
xor
aad
mov
test
fisubrl
fadds
clc
adc
jns
mov
cmp
sbb
bound
aam
shlb
popa
adc
dec
push
mov
and
and
mov
push
mov
add
stos
scas
mov
cmpsb
xchg
or
cli
add
pop
fsubs
push
pop
push
sbb
test
xor
ret
fistpl
and
mov
jae
or
lcall
pop
out
xor
in
je
jnp
pop
or
orb
or
adc
sbb
hlt
inc
dec
lock
adc
and
pop
push
out
sbb
sbb
test
stos
mov
xchg
pop
out
insb
enter
cld
or
mov
and
sarl
test
movsl
call
mov
ss
sarl
je
outsb
pop
pop
sub
test
lahf
es
or
or
and
insb
mov
ljmp
sub
cmp
bound
mov
add
fnsave
adc
pop
mov
xlat
dec
and
mov
in
std
jmp
pop
pushl
mov
lret
jl
xlat
dec
add
sarl
fcmovne
movb
mov
ret
xchg
fisttpll
ja
fstpt
les
xchg
loope
repz
adc
icebp
and
mov
popa
mov
nop
orl
inc
pop
xchg
subb
bound
push
cmp
sbb
jo
cmpsb
jns
jne
inc
aad
in
jp
idivl
or
pushl
mov
cmp
sbb
das
pop
pop
jg
mov
stos
mov
sbb
cmp
filds
push
jae
out
sbb
movsl
add
stc
shll
in
xorb
orb
mov
jecxz
jmp
cmpsb
mov
mov
stos
out
xchg
dec
out
lods
mov
repnz
inc
adc
movsl
pop
cltd
shrb
lret
push
pop
lods
je
cld
mov
sbb
aaa
mov
jns
jl
sbbl
jb
push
push
jle
and
pop
out
scas
adc
inc
push
xor
lods
lods
push
sub
sar
push
xor
loop
adc
stos
int3
lcall
mov
adc
push
outsl
mov
dec
lret
cmp
cld
in
out
fdivrs
push
cmpsl
mov
and
xchg
push
aad
inc
imul
cs
lea
push
mov
or
cltd
ficoms
fbld
cmp
push
xor
push
pop
test
cs
ret
dec
pop
stos
cmpsb
movsb
popf
pop
pusha
mov
jo
icebp
mov
adc
fcompl
out
pop
xchg
int3
in
dec
stc
pop
sbb
loop
dec
jge
adc
xor
push
xchg
popf
ljmp
and
mov
sub
pop
mov
in
popa
and
out
pop
scas
mov
inc
mov
inc
mov
sub
dec
shlb
xchg
add
dec
add
mov
mov
cmpb
in
cs
adc
inc
lea
mov
pop
sub
in
mov
out
mov
inc
xlat
adc
sbb
xor
and
test
scas
jecxz
decb
adc
pop
inc
fldt
pop
dec
dec
test
mov
andl
incl
or
movsb
push
sbb
pop
cli
test
push
addr16
mov
and
xchg
cltd
shlb
mov
mov
adc
insb
add
mov
dec
mov
mov
outsb
daa
mov
inc
jb
pop
js
pushf
jge
lcall
stc
jle
test
cmp
insb
sbb
orb
inc
cmp
in
and
dec
and
iret
xchg
hlt
lahf
les
mov
cmc
ljmp
insl
subl
xchg
loopne
leave
and
lret
mov
bound
inc
add
loop
insl
adc
movsb
push
sbb
out
xchg
push
lea
mov
sti
or
push
xchg
add
icebp
pop
clc
mov
pop
and
and
cld
aam
xchg
in
xor
pop
jg
icebp
lock
lret
push
negl
mov
in
ljmp
inc
pop
shlb
popl
mov
dec
outsb
xchg
jno
pop
or
gs
call
inc
sub
fwait
aam
in
dec
sub
inc
mov
test
xchg
mov
sub
cmp
or
bound
insb
in
or
aaa
pop
hlt
push
sbb
pop
push
adc
cmpsl
inc
xchg
movsb
xor
pop
sbb
mov
mov
idiv
pop
sbb
dec
aam
not
xor
cmc
loopne
pop
pusha
pmullw
mov
jge
dec
ljmp
push
xchg
sbb
jmp
and
bound
outsb
ret
mov
pop
testl
leave
roll
repnz
call
push
push
popa
push
or
and
dec
jne
add
or
fprem1
dec
xchg
cmp
test
loopne
jb
cmp
xorl
gs
inc
icebp
hlt
sti
xchg
int
push
xchg
lods
sub
dec
aam
add
outsb
orb
add
aas
dec
shlb
mov
ljmp
push
js
jns
dec
imul
dec
das
or
jge
in
fwait
rcrb
jb
lock
fdivrl
inc
leave
fucomp
ljmp
and
lcall
repnz
push
sti
and
insb
inc
lea
ja
cli
subl
push
mov
jle
js
push
or
lcall
clc
and
inc
push
movsb
add
push
pop
mov
mov
repnz
xor
and
loopne
cmpsl
lds
dec
mov
leave
mov
aaa
lea
jl
mov
xor
or
dec
push
lea
push
push
cmc
sahf
mov
push
xlat
push
push
imul
mov
fldl
sbb
dec
outsb
scas
and
dec
jb
inc
lret
push
push
pop
push
mov
icebp
fdivrp
jbe
and
test
cs
and
cmp
shrl
das
test
cmp
std
xchg
loopne
in
outsl
fwait
notb
xlat
nop
movsb
xlat
xchg
les
mov
cld
data16
push
xchg
mov
testl
out
adc
cli
jmp
divb
into
sbb
rclb
sub
mov
jmp
mov
and
movsl
loopne
cs
cmp
mov
popf
and
in
aaa
inc
push
ljmp
add
dec
test
adc
movsl
xor
shrl
push
add
loop
in
int3
shll
add
sub
sub
mov
mov
xchg
push
sti
in
insl
add
xchg
aaa
adc
rorb
or
aaa
out
pop
push
lret
jecxz
xchg
xchg
xor
lcall
out
pop
and
rcl
mov
sbb
xor
stos
push
mov
mov
jbe
and
adc
xor
or
cmpsb
shll
insl
scas
adc
jle
sbb
lea
es
xchg
mov
cmp
test
pushf
je
mov
imul
inc
ss
or
add
out
pop
push
mov
nop
scas
mov
cmc
cmp
pop
push
push
sbbb
int3
lret
inc
inc
sbb
push
mov
rcl
sub
popa
lret
add
jno
in
dec
out
and
xchg
pop
out
ficoms
jmp
adcl
or
outsb
stc
cs
call
xchg
test
subl
or
ss
sbb
into
cmp
push
dec
aam
ror
fs
loopne
pop
sti
lret
pop
and
xor
add
push
sahf
adc
xchg
and
subb
in
mov
sbb
es
jbe
adc
jmp
sub
insl
add
sbb
nop
and
inc
into
pop
ja
dec
mov
mov
xchg
inc
jg
ret
cmp
or
sbb
pop
inc
scas
dec
xor
mov
sti
fstl
pop
sbb
fwait
lret
add
andl
jl
das
sub
dec
push
mov
inc
xlat
jp
mov
mov
fnsave
jp
stos
test
xor
jmp
lea
pop
stos
cld
mov
jne
pushfw
loop
add
les
and
aam
jmp
xchg
push
adc
adc
dec
add
scas
xchg
adc
add
jecxz
loop
xor
xlat
adc
cmc
je
in
mov
xchg
pop
arpl
push
repz
jno
pop
jnp
ret
aam
mov
push
inc
inc
and
imul
and
dec
mov
enter
mov
adc
lock
lahf
jae
mov
push
sbb
bound
add
pop
ret
cwtl
call
hlt
sbb
xor
cwtl
test
fmulp
sbb
lret
xchg
ljmp
dec
dec
movaps
xor
lcall
rcrb
je
scas
leave
rclb
jmp
iret
repnz
mov
gs
xchg
push
fmull
mov
mov
xchg
das
cmp
ljmp
sub
push
mov
xchg
inc
dec
dec
int3
inc
subl
imul
ljmp
arpl
mov
push
sub
mov
mov
lcall
and
fidivs
add
xchg
push
sti
fcoml
push
adc
and
fsubrl
js
mov
sub
cld
test
xor
adc
sub
or
pop
sbb
adc
jae
sub
test
repz
into
mov
cltd
push
lcall
outsb
inc
xchg
test
addl
dec
mov
sbb
xor
push
add
mov
push
mov
dec
lods
sbb
fs
dec
mov
testb
shlb
cs
mov
xchg
ja
mov
pop
dec
pushf
push
cmp
or
insb
jmp
cmc
or
ret
nop
icebp
ficompl
cld
mov
sbb
jns
fadd
sub
nop
in
jp
mov
push
jg
sub
mov
cmpsl
cmp
sbb
shll
add
aas
mov
stc
sbb
adc
ljmp
sbb
cmpsb
outsb
movq
push
js
sub
jo
lahf
fisubrl
mov
mov
insl
das
jg
addr16
pop
in
lds
js
fstl
mov
sbb
mov
mov
shll
fistpl
pop
push
add
add
add
add
gs
pop
std
scas
mov
icebp
jne
pushl
xchg
movsl
jmp
adc
and
icebp
dec
out
repnz
jbe
pop
push
adc
icebp
jne
inc
mov
pop
decb
xchg
dec
pop
push
or
and
mov
sar
int3
fdivl
lods
cli
mov
mov
cmp
int3
fwait
dec
jno
int3
inc
and
insl
sub
lahf
fiaddl
scas
inc
jb
out
shl
aas
pop
jae
jg
pop
mov
cmp
and
jbe
sbb
shrl
pop
xlat
rorb
jmp
push
shll
jp
std
dec
insb
dec
xchg
jmp
pop
lret
shl
sahf
cmp
fbld
mov
jg
scas
je
dec
ret
test
dec
add
push
xorb
jg
inc
sbb
pop
mov
pop
cmp
stos
inc
pop
sub
xorb
dec
hlt
sub
scas
adc
rolb
inc
xor
sbb
add
lret
inc
or
dec
pushf
rolb
movsb
lods
rclb
push
xor
dec
adc
jns
jne
add
or
adcl
sbb
mov
enter
jg
clc
imul
mov
pop
outsb
mov
movsb
push
out
push
jns
pop
push
aas
mov
jmp
sub
mov
insl
sub
inc
jle
jecxz
xchg
daa
imull
mov
jp
cli
iret
test
push
je
xor
sbb
inc
push
repnz
push
push
dec
data16
les
idiv
rcrl
outsb
and
push
jmp
std
mov
popf
mov
push
sti
and
std
pop
incl
dec
andb
xlat
rorb
testb
lahf
hlt
mov
push
enter
add
bound
mov
data16
xchg
mov
jo
cmpsb
jle
jmp
subl
fdivr
rolb
and
push
push
sar
ret
mov
stos
and
scas
lcall
out
jge
in
aas
jbe
mov
cmc
xor
mov
aad
je
push
jb
out
push
pop
lahf
push
xchg
inc
adc
jmp
outsl
cmp
cli
xchg
mov
adc
dec
ds
fwait
mov
and
adc
das
add
or
rcr
enter
jb
xchg
lds
mov
stos
xorb
mov
in
sti
mov
push
xchg
ja
cli
ljmp
rol
cmpsb
push
int3
cltd
push
jns
mov
mov
int3
mov
push
sahf
lahf
std
push
sbb
push
or
xor
rcrb
clc
jle
movsl
mov
outsb
and
xor
aad
xor
sbb
fistpll
adc
je
add
push
dec
pop
mov
test
jae
out
ffree
mov
mov
cmp
subl
mov
sbb
lret
out
mov
imul
lock
inc
jl
call
xchg
fcoms
fbld
sbb
cld
push
cs
aas
dec
dec
xlat
ljmp
push
in
ja
rolb
pop
scas
or
add
jne
mov
subb
je
pop
dec
test
push
lods
or
ja
and
adc
push
es
add
sbb
sub
dec
and
rcrl
pop
sti
xchg
xor
pusha
fdivl
ljmp
loop
cmc
mov
mov
cltd
dec
xor
and
mov
stos
adc
loop
xchg
xchg
add
or
jo
mov
lcall
inc
sarl
xchg
xchg
out
or
jg
orl
fists
cmpsl
test
ja
in
imul
sub
sub
lret
lahf
fisttpl
pop
les
adc
push
stos
in
int
jbe
enter
pop
sbb
repnz
andl
sbb
sub
ret
ja
movsb
imulb
int3
dec
mov
mov
inc
jg
adc
ficoms
pusha
push
push
orb
clc
xor
fisttps
sbb
ret
xchg
and
or
fstps
ficoml
sub
mov
lret
pop
and
jbe
scas
call
or
daa
cli
pop
outsl
add
jl
arpl
out
stos
cmpsb
loopne
and
fsubr
push
cmpsl
shrl
mov
popa
cmp
cltd
mov
je
gs
jns
lea
ret
loope
xchg
sti
into
into
fs
mov
pop
or
movntps
ljmp
outsb
stos
mov
fadds
or
int3
in
in
je
repz
and
pop
ljmp
sub
xor
iret
fcompl
xlat
or
adc
mov
cmpsl
out
sti
stos
mov
in
jne
xchg
add
cmp
mov
in
mov
lods
mov
mov
push
and
jbe
popl
push
shlb
je
in
bound
filds
mov
add
or
icebp
jae
in
mov
aas
push
fstpl
gs
ret
inc
adcb
pop
sub
pop
add
inc
aad
insb
shrb
push
adc
test
sbb
movsb
insl
xchg
arpl
je
xor
ljmp
mull
jp
pop
gs
fisubl
sbb
pop
cmp
rcrl
sahf
mov
fmul
dec
cltd
pop
aaa
subl
push
scas
push
rol
jmp
mov
add
mov
sbb
pusha
rcll
inc
into
xor
shl
dec
negb
xor
shrl
dec
push
inc
xor
xchg
xor
ss
rcr
dec
cwtl
xorb
call
and
and
jp
lcall
cltd
out
and
rcr
dec
stos
xor
shll
jp
jp
or
xor
leave
mov
lcall
lcall
lcall
dec
mov
sub
xor
shl
dec
int3
fidivs
sarl
push
imul
imul
imul
push
pop
and
sarl
dec
cs
xor
shll
outsb
je
outsb
rcll
inc
cs
roll
rcr
dec
pop
faddl
fldt
cmpsb
into
leave
lcall
lcall
sahf
adc
out
add
andb
adcl
add
orb
call
sbb
out
add
lods
jnp
lret
scas
or
xchg
incb
sub
insb
fstps
rcrl
add
mov
cmp
inc
loope
cmpsb
jae
cmp
add
idivl
xor
scas
cmpsl
lahf
sub
add
jmp
pop
es
fwait
pop
push
dec
add
dec
rol
loop
mov
xor
dec
and
adc
adc
jmp
shlb
js
dec
sbb
subb
jp
stos
flds
jecxz
cmp
push
dec
std
add
das
xchg
dec
lock
add
pop
inc
rcrb
es
lods
adc
or
mov
xlat
xchg
mov
rorb
add
add
psllq
rorl
push
add
sbb
add
jb
out
jno
pop
add
add
mov
pop
add
inc
setge
jbe
imul
fcmovne
mov
or
mov
das
or
dec
jecxz
add
dec
nop
sub
pop
adc
add
aaa
hlt
fwait
add
xor
and
add
jno
inc
inc
mov
add
addr16
je
fs
add
sbb
punpckhwd
add
cmp
pop
pop
cmp
ds
dec
mov
jg
enter
mov
sub
out
pop
or
pushl
add
fiaddl
add
idivl
sti
add
push
clc
xor
arpl
add
inc
jbe
cmp
xor
xchg
mov
and
dec
rcll
das
pop
pop
cvttps2pi
xchg
add
lahf
mov
sub
inc
cmp
mov
fwait
add
loop
add
loope
mov
adc
or
shl
rcr
add
jmp
add
jb
add
leave
imul
add
pop
dec
push
imul
sbb
jge
mov
and
ret
and
sub
mull
pop
mov
and
sub
add
mov
push
add
hlt
push
sbb
pop
movsl
add
insl
cmpsb
or
adc
push
in
add
xor
adc
push
imul
icebp
adc
lds
and
les
xchg
pop
add
cmp
dec
add
adc
and
mov
or
and
cmp
loop
lret
aam
loope
push
hlt
add
inc
clc
lahf
add
pushf
scas
arpl
xchg
stos
jns
mov
add
push
ret
mov
int
add
stc
pusha
mov
mov
add
mov
dec
mov
fdivr
add
push
movsl
in
add
mov
xchg
cmp
push
mov
in
movsl
gs
push
fs
push
into
push
mov
jo
mov
mov
add
movl
mov
add
mov
sbb
xchg
pop
jno
addr16
insb
jb
sub
inc
add
sub
add
mov
icebp
jge
sub
add
xchg
out
and
mov
push
sbb
movq
jl
cmp
or
xchg
fiadds
push
push
jo
gs
fnsave
add
jge
adcl
push
mov
mov
and
test
add
pop
gs
mov
dec
mov
push
dec
jl
and
insl
jl
inc
add
into
cli
adc
dec
jo
and
cmp
mov
lea
repz
jl
and
punpcklbw
sbb
cli
rcrl
movb
into
mov
and
repz
mov
xchg
add
mov
daa
pop
sub
in
lods
sbb
xor
fidivrs
jge
add
lahf
adc
and
add
les
push
jge
push
jle
in
int
push
jg
lds
pusha
jmp
lcall
roll
jne
mov
lock
sbb
add
inc
fwait
adc
mov
add
outsl
rolb
xchg
addb
jnp
shlb
gs
sub
pop
pop
adc
fadds
pop
add
pop
pop
push
pop
insb
push
sbb
pop
push
icebp
jb
lods
xchg
sub
cmp
xor
shlb
cmp
sub
daa
dec
and
aaa
int3
xorb
arpl
jns
mov
add
dec
inc
push
dec
inc
inc
add
inc
dec
mov
mov
mov
mov
ret
sub
adc
adc
cmp
lods
adc
mov
xorl
int3
sti
into
int3
xor
rcr
aam
fists
adc
out
clc
pop
out
xchg
xchg
xchg
loopne
std
and
js
imul
fldcw
sbb
or
inc
push
stos
xor
xor
cmovs
movsl
loopne
push
add
into
adc
inc
add
jae
xchg
mov
xor
adc
add
movl
je,pt
jb
nop
jns
jg
int
jp
test
pop
xchg
add
mov
xchg
mov
xchg
fbstp
mov
ret
aam
enter
mov
movsb
lcall
push
pop
data16
pop
outsl
sub
insb
cmp
outsb
aaa
add
or
push
inc
mov
jl
xchg
push
ja
cmpsl
inc
mov
and
movsl
sahf
sahf
in
xchg
push
jp
sbb
mov
cmpsb
push
mov
movsl
scas
ss
notl
icebp
mov
stos
call
test
nopl
add
cmp
push
pop
mov
int
mov
sub
pop
push
aad
mov
outsl
jnp
inc
gs
icebp
mov
pusha
mov
dec
xchg
adc
je
mov
leave
movsl
shrl
aad
mov
das
hlt
sbb
stos
mov
lret
sbb
jns
mov
cld
mov
mov
cs
mov
pop
mov
pop
and
mov
mov
fs
ficoml
test
cmp
or
cmpb
and
or
jge
lahf
push
cmp
shll
inc
mov
and
pop
and
xor
in
and
dec
jg
in
xchg
cwtl
pusha
imul
dec
pop
pop
push
imul
push
outsl
je
jle
adc
je
imul
inc
imul
shlb
fsubrl
cli
repnz
test
mov
push
incb
ret
mov
sbb
add
fldl
adc
xor
sbb
xchg
and
add
inc
jne
and
xchg
and
mov
sub
sub
xor
fisubrs
das
pop
inc
ret
pop
daa
jae
jno
inc
inc
bound
sub
lret
mov
popf
dec
adc
outsl
inc
sti
dec
bound
push
clc
inc
mov
xor
pop
mov
mov
xchg
cmp
or
stos
fwait
movsb
movsl
mov
ljmp
into
call
inc
pushl
stos
fdiv
std
test
divb
xchg
inc
hlt
mov
arpl
stos
cmp
sub
frstor
stc
je
inc
xchg
mov
dec
cmp
push
jne
aam
mov
adcl
mov
pushf
mov
scas
cmpsl
lea
mov
pop
out
shrb
enter
and
dec
inc
rep
xchg
sub
xor
xor
ljmp
sbb
sub
or
icebp
xor
xor
cmp
test
fldl
dec
push
jge
ljmp
insb
arpl
mov
mov
pop
cmpsb
fimuls
stc
arpl
lahf
mov
insl
xor
push
mov
or
shlb
pushf
ss
les
out
idiv
xchg
mov
pop
cmp
push
repz
jl
mov
pop
addr16
popf
adc
pop
bound
xor
pop
hlt
enter
cmpsb
adc
jne
xchg
or
div
or
cmp
xchg
push
mov
mov
lcall
stc
jl
adc
das
and
add
add
and
dec
in
adc
push
sub
lret
cld
inc
stos
rcrl
dec
jg
xor
xlat
dec
pushf
inc
stos
loope
outsl
movsb
ja
bound
xor
arpl
lea
xorb
out
mov
repz
or
aaa
sub
fs
mov
cmp
mov
push
pop
push
sub
sbb
add
lret
sbb
ficoms
repz
push
aad
or
sub
dec
pop
push
daa
fdivr
int
movsl
push
push
nop
repnz
sbb
mov
xchg
je
mov
scas
rcl
mov
enter
pushf
jns
mov
nop
mov
mov
pushf
pop
enter
imul
movsl
pop
mov
mov
es
jo
jg
cmp
cld
xor
cmc
ljmp
and
sbb
fs
jne
sbb
or
scas
jl
mov
test
dec
out
movsl
jg
daa
outsl
xchg
clc
std
shrl
inc
push
xchg
jp
xchg
add
mov
loop
in
sbb
pop
lret
outsb
sub
jmp
mov
jne
mov
push
and
js
pop
fstpl
ja
mov
jns
stos
cmc
into
cs
jae
add
scas
sbb
gs
push
mov
stos
mov
mov
test
psubw
fisubrs
pop
pusha
iret
mov
ljmp
sub
push
bound
inc
test
add
pop
and
adc
adc
dec
push
push
jns
hlt
fstpt
dec
dec
pop
ja
push
dec
add
inc
or
pop
pop
aaa
jmp
loop
mov
adc
pop
add
and
xor
mov
jo
je
and
stos
js
dec
mov
jmp
outsb
fadd
adc
flds
mov
subl
sub
addl
pop
mov
loopne
cmp
mov
sub
fldenv
add
mov
xchg
addb
lea
shlb
mov
popa
inc
icebp
xchg
cmpsb
mov
jo
mov
cltd
inc
inc
xchg
int
pop
add
dec
dec
fs
and
push
jg
js
inc
sub
out
jmp
mov
add
lcall
fbstp
push
loope
push
add
lcall
mov
mov
lret
addl
add
mov
or
xor
mov
bt
jmp
das
mov
in
mov
mov
clc
hlt
or
xor
jo
jae
dec
ficompl
xor
loopne
adc
pusha
scas
add
in
mov
push
fsubrs
cmpsl
pop
pop
push
sti
ljmp
lret
leave
inc
outsl
aam
sti
sub
ja
mov
xor
and
imul
lods
rorb
cmpsl
push
data16
imull
or
jecxz
push
mov
in
popl
add
test
mov
orl
push
mov
jb
pop
cmpsb
xchg
jmp
push
add
loop
add
test
or
dec
cwtl
shll
jle
ss
add
mov
mov
xor
cmp
xor
jmp
or
stos
rcrb
dec
std
cli
dec
mov
adc
push
push
jp
mov
push
xchg
jno
ja
xor
mov
sbb
into
push
or
sbb
inc
or
pushl
stos
pushf
sbb
mov
rcrb
rol
jns
bnd
cmp
and
fldl
inc
jg
jl
pop
adc
jg
adc
cltd
call
lea
in
popa
mov
sub
sub
or
mov
inc
adc
push
cvtpi2ps
cmp
jns
aaa
dec
jge
or
add
pop
jnp
aaa
out
sbb
xor
jmp
inc
das
cmc
lods
dec
bound
mov
xchg
push
pop
dec
sbb
and
inc
aad
push
lock
mov
mov
mov
adc
mul
cmovge
jecxz
sub
bound
dec
sbb
and
cmp
or
mov
add
lahf
lods
inc
in
push
cmp
and
add
lea
mov
mov
lcall
je
daa
orb
int
loope
sub
xchg
or
scas
movsb
mov
sarb
jg
xchg
in
jne
xor
mov
dec
jae
ja
rcl
pop
lock
repnz
adc
packuswb
cmc
sbb
pop
jmp
adc
popf
push
add
stos
jecxz
xor
add
testb
xchg
add
sub
add
mov
mov
push
push
ficompl
xchg
sub
addl
lods
outsb
lahf
fs
and
mov
fwait
dec
enter
xor
inc
add
xlat
addr16
lea
mov
lds
and
aaa
adc
popa
or
lods
popf
inc
scas
outsb
add
enter
ss
jp
insb
sub
lcall
loop
mov
cmpsl
or
sbb
sarb
or
gs
or
pop
jo
insl
cmp
js
gs
jns
pop
push
pop
rclb
stos
out
add
inc
shlb
inc
mov
repz
icebp
sbb
xchg
lods
mov
test
mov
xchg
xor
fwait
jl
xchg
sbb
addb
mov
stos
test
push
cmpsl
xor
outsb
lock
lds
es
fadd
jne
fistpll
int3
aas
aas
add
push
push
push
inc
pop
pusha
adc
sub
push
sub
lahf
cmp
pop
sub
and
or
or
and
aaa
adc
xchg
dec
pop
pop
dec
dec
dec
inc
add
adc
push
jnp
jno
stc
push
data16
call
fmull
xchg
pop
mov
cli
in
out
cld
call
test
test
movsl
sub
movsb
icebp
push
adc
or
or
add
pop
dec
push
xor
sbb
inc
lahf
xchg
adcb
lcall
cmp
sarl
sbb
add
hlt
cli
mov
loop
pop
outsb
cmp
sub
lds
push
push
pusha
dec
int
sub
inc
or
sbb
out
dec
add
cmp
cmp
and
xor
insl
add
test
push
cmp
cs
pop
orl
lahf
sbb
mov
jnp
das
jo
outsb
lahf
dec
jl
jb
xor
leave
push
mov
pop
add
rol
or
in
and
mov
cmpsb
test
mov
loope
or
stc
in
mov
or
es
fstl
cmp
fisubrl
jmp
mov
lcall
pop
popf
or
mov
addl
mov
nop
sub
insb
cmp
out
jg
stos
jo
mov
pop
ja
sbb
and
mov
test
xor
add
push
psrld
bound
add
mov
sbb
data16
das
arpl
xchg
cmpb
sarb
cltd
add
pop
sbbl
pusha
shrl
ja
mov
mov
fdivrs
orb
dec
lcall
rcrl
lahf
sahf
mov
and
ret
sub
mov
add
jae
pop
cmp
xchg
data16
inc
mov
push
fs
ss
mov
imul
inc
loopne
jecxz
and
mov
xor
dec
inc
inc
in
push
sub
push
cs
push
mov
fs
mov
orb
mov
pop
mov
jae
js
mov
or
pushf
lret
mov
or
out
sbb
sbb
sbb
arpl
sbb
loopne
or
adc
fistps
loopne
sub
pusha
inc
pop
mov
dec
inc
je
cmp
cmp
mov
or
and
fwait
xor
lds
mov
xchg
lock
loope
incl
std
inc
lock
mov
int
in
sub
xchg
mov
pop
das
cltd
push
sti
imul
dec
rcl
jbe,pn
fs
cmp
sbb
jl
movl
scas
or
sbb
aas
and
popa
addb
stos
xor
add
sub
sbb
insl
jne
mov
and
and
mov
cmp
dec
push
dec
pop
adcb
push
inc
dec
pop
mov
inc
adc
arpl
imul
jg
and
insl
sbb
jmp
mov
cli
bound
cwtl
clc
bound
icebp
cmpsb
dec
leave
pop
testl
push
pop
pop
mov
add
or
pushf
push
lret
ror
and
mov
push
or
add
adc
jb
push
mov
sub
cmc
stos
pop
adc
fs
and
push
push
or
xlat
mov
jg
movsb
jns
add
rclb
pop
outsb
xchg
nop
into
cli
arpl
out
or
repz
or
mov
push
int3
insb
lods
push
fsts
mov
cmp
mov
es
xor
testb
add
inc
sub
xor
mov
pusha
insl
inc
and
outsb
pop
js
mov
add
das
bound
mov
push
xor
pop
loop
daa
xchg
inc
cmp
xor
mov
hlt
push
stos
fs
cmc
dec
lret
ss
shll
lcall
cli
stos
roll
add
fldcw
jmp
out
add
or
adc
mov
imul
pop
inc
mov
ss
mov
mov
or
and
iret
push
push
jl
addb
sub
mov
bound
add
arpl
fstl
or
pop
in
ss
pop
jmp
and
add
and
rorb
cmp
cmpb
pop
and
dec
sub
jbe
cmpsb
orl
lret
pop
call
fbstp
aas
mov
loopne
jne
jb
inc
cmpsl
push
sub
mov
scas
sbb
xchg
je
insl
frstor
lock
scas
lods
pop
mov
clc
cmp
ficoml
int3
mov
adc
pop
ss
daa
insl
ja
inc
mov
rcl
addb
je
add
outsl
gs
dec
push
dec
push
cmp
dec
dec
pop
push
inc
push
pop
xor
and
aas
call
inc
cmp
add
lcall
xchg
test
mov
addb
sub
xchg
inc
mov
out
movsb
xchg
loopne
sbbb
dec
notl
stos
jns
bound
push
xchg
push
mov
or
add
ss
cmp
sub
mov
idivb
xchg
add
xor
xor
xor
jnp
jne
jecxz
ljmp
mov
aaa
fs
dec
push
dec
into
mov
xor
les
scas
or
cld
mov
adc
jbe
inc
and
xchg
out
add
rcrl
mul
sub
adc
insl
mov
mov
push
jbe
gs
pcmpgtd
sub
xchg
fstp
decb
push
jo
jp
or
out
movsb
mov
push
jbe
sub
mov
call
push
push
sbb
adc
bt
adc
cmp
pop
jg
popa
mov
add
fldt
mov
push
adc
sti
mov
inc
jmp
ljmp
repz
push
ss
jg
add
and
fwait
xor
mov
cmp
lret
pop
data16
fs
pop
dec
mov
aad
mov
bound
incl
mov
shlb
xchg
call
mov
mov
xchg
xor
dec
sbb
enter
shrb
jp
jle
fs
loopne
push
ja
repnz
inc
cwtl
jecxz
daa
xor
iret
pop
cmp
nop
outsb
or
xor
stc
icebp
push
out
adc
enter
pusha
or
jl
jns
adc
sub
aaa
insb
or
out
lret
cmp
adc
pop
dec
dec
add
inc
inc
inc
dec
dec
push
rolb
js
outsb
push
scas
lret
jg
sbb
push
add
adc
xchg
fidivrs
movsl
push
mov
hlt
aad
mov
fwait
xor
xlat
shrb
lret
imul
xchg
sub
adc
test
js
scas
inc
adc
sbb
pop
inc
push
adc
xor
aam
push
sub
out
stos
push
push
jecxz
xchg
testl
xchg
add
roll
mov
loop
repnz
lods
call
push
lret
notb
loop
ljmp
cmp
xor
sbb
dec
or
sbb
adc
pop
sbb
movsb
add
aas
jp
jmp
adc
data16
leave
xchg
jl
xor
pushf
inc
sub
adc
jns
ds
pushf
aaa
mov
stos
in
popa
ss
lret
ss
mov
mov
movsl
movsl
jmp
lods
mov
into
lcall
aam
and
jae
pop
ret
add
or
pop
sarl
inc
pop
xor
jp
cmp
lcall
aaa
stos
scas
sbb
bound
adc
inc
dec
adc
push
and
enter
add
ja
loope
mov
arpl
mov
lods
xchg
cmpsl
lahf
sar
cmpsl
mov
sbb
fldenv
mov
data16
in
aad
fs
lds
cld
jmp
sti
lods
mov
out
pop
push
jle
add
xor
sti
pop
lret
adc
sub
mov
shll
jle
ja
jne
adc
xor
sub
add
enter
push
dec
jl
je
jns
cmp
shlb
jg
push
inc
mov
sbb
push
inc
mov
aam
test
cltd
ds
cltd
dec
stos
sti
and
xchg
ja
pop
leave
rolb
pushf
cwtl
lcall
xchg
es
jl
xchg
jecxz
lock
push
stc
jb
dec
ret
sahf
add
cmp
test
sbb
je
mov
mov
cmpsl
fistps
push
add
sbb
xor
inc
inc
andl
dec
bnd
shl
imul
or
outsl
mov
mov
mov
sbb
add
cmp
insb
pushf
sub
jmp
loopne
cltd
rorb
fsubs
lods
mov
mov
push
lods
arpl
loop
sub
test
jge
pop
jl
mulb
fistpll
cmc
bound
sub
xor
pop
test
xchg
inc
mov
xchg
mov
add
sub
loope
push
out
loopne
stc
daa
pusha
or
outsl
in
mov
mov
push
in
and
adc
or
ret
mov
jg
jge
push
adc
dec
push
sar
jmp
mov
push
add
mov
cmpsl
mov
or
sub
jecxz
fdiv
sti
lock
out
shll
mov
arpl
jns
push
add
cmp
aas
add
and
adc
sub
and
jo
inc
or
push
sub
jo
inc
pusha
jbe
mov
xchg
fdivl
mov
mov
mov
stos
or
jns
xchg
pushf
lcall
leave
mov
pushf
xchg
scas
lea
icebp
andl
stos
mov
fcomp
xor
mov
shll
mov
jecxz
in
jg
iret
fstl
or
push
fcmovu
fmul
vmovntdq
fisubrs
lds
or
push
push
or
push
repnz
out
pop
xchg
shl
pop
push
and
out
cmp
sub
adc
push
push
sbb
sahf
jne
push
dec
mov
in
sub
mov
mov
pop
icebp
mov
xchg
fimuls
push
fnsave
mov
gs
jge
bound
pushf
popa
stos
insl
lods
jl
mov
push
cmp
clc
pop
xor
or
mov
arpl
lret
rcrb
int3
lock
lcall
push
out
add
push
out
cmp
or
das
ror
stc
push
fwait
xor
int
jmp
movsl
repnz
or
data16
sahf
clc
jo
push
inc
jl
adc
dec
push
adc
inc
push
dec
lret
jle
mov
dec
fdivrl
bound
adc
sub
lds
sbb
jne
jae
sub
fs
adc
lret
jb
lret
and
xchg
xchg
lcall
aaa
shlb
push
lcall
dec
scas
cli
insb
andl
dec
fcompl
jo
xchg
mov
nop
enter
fld
push
loopne
cmp
mov
rcrb
imul
imul
inc
mov
enter
lcall
mov
cld
pop
push
mov
and
cmp
std
enter
andl
mov
or
inc
in
inc
mov
inc
or
sub
fsubrs
and
pop
or
inc
cmpsb
inc
xorb
xor
adc
inc
adc
sbb
je
mov
loopne
and
mov
and
adc
mov
enter
sbb
fsubr
inc
loopne
sbb
pusha
enter
dec
mov
scas
cmp
popf
pop
mov
int
clc
mov
int3
jae
adc
fs
adcb
mov
jo
fists
adc
sbb
loop
hlt
mov
or
xchg
pushf
aad
in
inc
leave
and
ss
dec
nop
jo
and
inc
add
cld
jbe
add
inc
xor
sub
and
inc
imul
cwtl
cmpsb
mov
popa
and
jns
xchg
add
fwait
adc
rcr
push
inc
sub
js
add
pop
cmp
pop
fstl
add
dec
inc
pop
pop
or
add
sbb
inc
push
mov
cmp
dec
ja
hlt
jne
sub
jno
cmp
mov
add
sub
dec
adc
add
mov
lret
pop
xor
loopne
leave
enter
cmc
pause
xchg
jmp
aad
mov
icebp
rcr
xchg
xchg
adc
adc
stos
sbb
inc
push
adc
pop
pop
push
pop
pop
push
lock
adc
cmp
sbb
cmp
or
and
and
or
push
dec
pop
gs
mov
enter
mov
jns
dec
out
push
pop
cli
icebp
jg
jmp
xchg
mov
ss
incb
fst
hlt
xchg
out
shl
lret
mov
sub
fsubrl
rcll
mov
call
imul
mov
add
imul
sub
mov
or
mov
sub
push
stos
mov
mull
xchg
push
sbb
in
add
mov
fcmovnbe
mov
iret
xchg
fmul
ja
push
cmp
sbb
sub
in
out
int3
mov
test
nop
aad
aad
shll
pop
add
addb
or
cli
cmp
mov
jg
jns
add
jno
jp
movsb
ret
dec
inc
ss
mov
inc
ret
xor
stos
cmc
aam
mov
lds
sahf
lods
inc
and
jo,pt
imul
popa
mov
cmc
sbb
cmp
mov
inc
dec
sbb
lds
xor
sbb
cli
ds
add
jb
mov
xchg
add
xlat
push
push
lods
pop
out
sti
or
mov
push
add
or
pop
sub
push
pusha
sub
je
push
adc
push
dec
sub
mov
sbb
sub
ljmp
stc
out
adc
sar
sub
mov
mov
sbb
scas
das
and
push
sub
xor
xor
push
dec
add
ljmp
pop
mov
jne
or
sahf
dec
test
ret
fsubrp
vpsubusw
mov
outsl
pop
loop
adc
out
xor
mov
and
inc
cli
ret
aad
sahf
sub
cmp
mov
mov
sbb
sub
into
mov
stc
xor
jae
xchg
sub
push
push
outsb
maskmovq
lods
in
cwtl
std
inc
mov
int
sub
lods
mov
and
sub
mov
cmp
mov
jb
cmc
pop
dec
scas
dec
jmp
dec
push
dec
xchg
insb
mov
movsl
dec
lods
icebp
push
in
sub
jecxz
push
ret
insb
movsl
mov
mov
scas
mov
lock
sub
jnp
pop
push
add
xor
jmp
jno
out
inc
mov
jl
and
sub
stos
sbb
sub
cmp
fsubrl
and
les
or
or
lahf
dec
push
pop
sub
sbb
jge
out
cmpsb
and
add
sub
lods
mov
adc
gs
fwait
decb
push
adc
das
inc
mov
jns
insl
push
outsb
outsb
xchg
rolb
cltd
push
addb
movsl
fucomp
xchg
cmp
cld
jmp
scas
cs
mov
scas
ljmp
mul
inc
aaa
cmp
lcall
xor
push
push
push
divb
sbb
and
mov
js
in
test
pop
inc
sti
out
jo
jmp
mov
mov
cmc
push
jae
iret
lds
roll
inc
setle
inc
loope
cmpsb
in
cmc
mov
push
pusha
adc
pop
in
je
mov
test
scas
sbb
lret
and
push
in
cmc
inc
pushf
leave
pop
in
out
adc
dec
sbb
scas
fisubrs
mov
or
jmp
lds
test
mov
and
push
pop
cmpsl
notl
ss
inc
adc
mov
mov
cs
mov
fld
sahf
scas
out
mov
push
pop
out
mov
mov
mov
jle
push
inc
mov
add
dec
sahf
push
ret
in
sbb
ja
pushl
cwtl
mov
push
jg
idiv
loope
repz
or
or
fnstenv
xchg
dec
pop
pop
push
das
adc
dec
pushl
bound
movsb
add
or
pop
cli
addr16
add
mov
xlat
push
jge
cmc
sbb
pop
mov
mov
add
pop
mov
mov
ret
jne
inc
inc
xlat
mov
jg
jl
fmuls
or
mov
hlt
lret
ret
xor
imul
out
or
cltd
xchg
in
xor
mov
out
xchg
push
xor
fcompl
adc
xchg
mov
ret
mov
xor
cmp
mov
inc
cmp
lret
inc
gs
jae,pn
inc
jg
dec
bound
mov
movsb
push
jb
lahf
mov
xchg
mov
lods
add
mov
and
lret
stos
sub
icebp
sbb
lret
fisttps
in
out
jmp
in
push
ja
lds
lahf
push
rcr
rorl
popf
test
jno
sub
pop
cmp
sub
push
push
rol
push
das
dec
mov
push
dec
dec
push
push
add
xor
mov
ret
outsb
das
clc
mov
and
mov
dec
imul
add
fdivl
lods
shlb
rolb
sbbb
xchg
ljmp
ret
sbb
push
dec
jecxz
in
xchg
fsubs
sub
push
sub
pop
cmp
cli
xchg
sbb
rorb
pushf
mov
mov
pop
push
pushl
jbe
pop
jb
push
jno
lds
scas
out
fmuls
jp
ret
mov
jecxz
call
cld
mov
sub
les
xchg
nop
add
xor
cld
mov
cmp
cmp
and
lds
jnp
jno
adc
sub
xor
popa
clc
mov
push
decb
fildll
mov
jae
pop
mov
adc
sub
mov
fwait
xor
call
xor
rol
enter
insb
dec
ror
icebp
jmp
ret
cmp
xchg
mov
mov
and
add
repz
ljmp
test
sub
orb
mov
mov
ss
stos
imul
mov
jl
dec
push
cmpsb
or
mov
scas
popl
xlat
test
fiaddl
xlat
sbb
push
xlat
cmp
cmpsl
xor
insb
or
fistpll
sti
jno
lods
xchg
test
mov
divl
negl
jl
mov
or
xor
pop
cmp
adc
ds
sbb
pop
sahf
fsubrs
sub
adc
roll
cli
inc
aam
stos
or
inc
insl
mov
push
cmp
pop
jnp
test
and
mov
hlt
aad
fucomi
lahf
cltd
cwtl
ja
mov
stos
sti
mov
sbbl
jmp
mov
and
xchg
jne
arpl
mov
out
in
repz
stos
mov
data16
add
pop
les
out
jmp
int
in
mov
and
rolb
add
and
mov
inc
mov
aam
cmpsb
lret
add
mov
cli
or
lcall
das
out
aam
push
sbb
jg
jl
mov
push
add
pop
sbb
jl
jae
pop
and
sub
mov
mov
adc
pop
push
les
xchg
push
in
cmp
ljmp
xchg
sahf
xchg
out
mov
push
fistl
jle
test
hlt
adc
stc
xchg
negb
idiv
loop
add
pusha
add
nop
xor
inc
xor
lcall
push
jecxz
xchg
push
pusha
bound
xor
sbb
unpckhps
out
aas
cmc
or
aam
test
mov
xchg
inc
add
push
mov
clc
xchg
add
nop
jmp
push
into
push
and
sar
adc
aaa
stos
popa
lret
test
std
stos
and
or
aam
sbb
or
pop
add
mov
push
push
sbb
test
mov
jae
and
pop
adc
adc
cld
xor
push
sub
xorl
mov
add
inc
mov
lret
push
mov
xchg
aad
rcrl
repnz
mov
fmul
hlt
icebp
movsl
in
add
out
mov
not
mov
lock
jbe
inc
mov
adc
xchg
mov
or
int
jbe
dec
std
test
dec
inc
ljmp
sub
add
outsl
pop
xchg
insb
mov
stos
push
sub
sub
push
sub
mov
pop
pop
xor
lods
pop
out
das
sbbb
jns
aad
outsb
loopne
rclb
jo
retw
dec
leave
movsl
add
popf
sahf
lahf
pop
test
add
test
jmp
sbb
movb
xchg
ror
aam
in
icebp
push
lock
push
xchg
push
push
and
aad
stc
push
retw
mov
jne
and
mov
clc
stos
xor
dec
hlt
sahf
and
inc
inc
sub
sub
dec
inc
inc
pop
fsubrs
inc
cmp
ss
push
cmp
cmpsb
addb
scas
cmpsl
scas
dec
push
cmpsb
lods
cmpsb
mov
xchg
xchg
pop
cli
cmp
aaa
out
jge
push
cmp
pushl
ret
sbb
pusha
test
mov
and
loopne
cwtl
sbb
fisubs
cmp
pushf
cs
mov
mov
add
add
add
push
xchg
test
imul
dec
ss
jne
pop
aad
leave
mov
fcmove
iret
js
loop
sub
mov
push
jecxz
xlat
pop
fnstenv
mov
dec
adc
or
ficomps
mov
cmp
test
scas
int
push
xor
mov
sbb
xchg
mov
nop
lds
bound
mov
jne
xchg
mov
mov
sbb
and
js
das
mov
stos
ret
push
scas
sahf
push
jecxz
icebp
add
out
or
xor
movsb
xchg
xor
jns
jo
mov
test
xlat
negb
push
and
push
dec
jns
test
add
xor
push
or
cmp
push
lods
cmp
movsb
pop
cmovb
lcall
jns
notb
mov
icebp
xlat
lock
mov
call
aam
mov
mov
xchg
push
pop
sbb
lcall
jbe
and
mov
sbb
jl
lret
scas
mov
xchg
inc
jo
ja
inc
insb
lods
mov
mov
sub
mov
xchg
push
xchg
sbb
bound
mov
pop
push
out
add
les
in
bnd
fdivrs
push
leave
stos
cmp
insb
ret
xchg
add
cmp
popa
pop
leave
sub
sbb
mov
pusha
arpl
jbe
xchg
pop
cmp
adc
sbb
cmp
arpl
leave
mov
lahf
int3
add
jno
sti
xchg
out
arpl
mov
popf
jno
rcrb
scas
mov
fmuls
lock
mov
or
pusha
sub
xor
es
pop
testl
push
pop
adc
adc
dec
data16
lahf
jne
pushf
std
popa
iret
mov
fmull
popa
loope
ja
imul
adc
imul
mov
push
mov
adc
imul
xchg
repz
and
mov
jno
cwtl
or
jno
test
pop
pop
jmp
pop
and
push
mov
xchg
lret
sbb
popa
in
shll
rorl
stc
lret
sbb
jae
sub
add
int3
sbb
jle
xor
dec
cltd
add
inc
leave
jno
dec
mov
sti
xchg
imul
lret
sbb
add
int3
mov
xchg
mov
sbb
lret
sbb
jae
sub
add
int3
loopne
mov
movb
rcrl
mov
inc
adc
dec
push
sub
inc
push
fadds
outsl
ret
cltd
dec
inc
pusha
add
bound
bound
adcb
xchg
ret
cltd
mov
pusha
add
call
xor
push
pop
lcall
push
inc
aam
std
cmp
imul
jge
aad
loop
xor
popa
jo
mov
push
cmp
jo
fistpl
dec
add
inc
inc
push
sbb
leave
cmpsl
dec
cmpsb
stos
movsl
xor
scas
test
aad
add
test
or
test
out
jle
push
adcb
insb
popa
sub
mov
sub
popa
sub
and
or
scas
mov
ljmp
test
jge
pop
sahf
xor
cmp
das
xchg
sbb
arpl
clc
repnz
jl
mov
adc
xor
cmp
loope
arpl
sbb
cld
xor
dec
scas
loope
arpl
sbb
hlt
lret
cmp
arpl
arpl
lods
cmc
dec
add
sahf
sahf
add
or
xor
mov
jle
mov
lods
test
push
jbe
ds
mov
mov
adc
into
or
iret
xlat
sti
jmp
pop
ljmp
ficompl
sub
ds
loop
add
out
sub
xchg
insl
and
ja
pusha
adc
js
xor
xchg
shrb
daa
xor
jg
push
aaa
jge
in
out
xor
fnstenv
jns
dec
push
and
iret
mov
loopne
daa
cmpsb
xchg
lcall
pushf
imul
mov
mov
mov
adc
fcmovb
not
dec
push
mov
test
cmpsb
fstpt
or
or
xor
mov
jmp
pop
pop
inc
cs
cmp
xor
fisttps
xchg
imul
adc
aam
fists
je
sbb
jns
dec
js,pn
sbb
jne
push
inc
lea
xchg
push
mov
lcall
mov
jae
lds
decb
test
sub
out
mov
dec
xlat
xor
adc
cmp
sub
mov
dec
inc
add
mov
daa
and
ljmp
repnz
mov
push
scas
sub
fs
cli
inc
rcrb
jecxz
mov
cli
call
subb
fwait
sbb
stos
cmpsl
ljmp
in
adc
pop
aas
stc
jmp
jecxz
sub
dec
inc
pushf
lods
cmc
shlb
cmp
sbb
adc
pop
imul
push
nop
es
cmp
popa
xlat
hlt
imul
fmul
dec
js
lret
push
mov
aam
jge
dec
mov
scas
js
lods
aas
stos
flds
lds
sti
mov
mov
ror
sbbb
stc
out
xchg
pop
setbe
in
jge
clc
out
ja
pusha
data16
xor
push
inc
das
daa
out
fidivs
sbb
mov
jno
cmp
inc
jo
cli
enter
es
push
pop
push
sbb
and
insl
cmp
sbbl
pop
ja
mov
outsl
xor
in
pusha
jmp
clc
mov
rcrb
int
xchg
jl
mov
lret
divl
cmp
pop
pusha
and
iret
sbb
sbb
rcll
adc
pop
in
popf
call
pop
jns
in
pop
jo
popa
cmc
jnp
hlt
mov
jne
mov
test
xor
and
addr16
jne
out
gs
mov
testl
lret
ret
stos
pop
dec
add
pop
aam
stos
sar
into
or
cmp
add
pop
dec
fistl
push
dec
pop
mov
mov
jmp
into
adc
and
imul
dec
mov
push
pop
movsb
pop
jp
inc
or
icebp
scas
outsl
xor
je
xchg
mov
cltd
fcomip
gs
add
mov
pop
push
inc
dec
mov
pop
dec
mov
cmpsl
xlat
sbb
lahf
jbe
pop
push
xchg
minps
imull
cmp
and
std
test
pop
andl
test
scas
rorl
push
push
add
inc
pushf
out
lret
adc
in
push
rclb
cwtl
push
movsb
xlat
insb
dec
lea
test
mov
xchg
popa
fstpl
xlat
ret
fnsave
jae
mov
push
lods
shrl
filds
fildl
mov
mov
stos
cmp
xorl
cli
shrl
scas
mov
sbb
fistl
jg
push
mov
neg
sub
adc
ret
das
inc
rolb
insl
jo
cmp
mov
ja
orb
cmp
adcb
ret
mov
xchg
mov
cmpsl
jecxz
mov
pop
stos
xchg
or
jo
mov
pop
dec
mov
loopne
fnstcw
or
jecxz
sbb
fs
stos
mov
dec
pop
lods
je
xor
pop
adc
inc
xchg
push
popf
mov
jg
mov
jecxz
loop
jns
hlt
cmc
mov
insl
mov
adc
pop
stos
mov
mov
add
out
push
test
pop
pop
lock
imul
push
std
pop
cmpsl
sbb
call
push
mov
xor
xchg
xchg
pop
xchg
ror
stos
stos
ret
sbb
stos
mov
ret
mov
sahf
push
sahf
cmp
shlb
and
lea
rol
loopne
mov
inc
movsl
call
jge,pt
ljmp
bound
adc
es
andl
add
dec
imul
imul
ret
xlat
sub
fwait
dec
push
pop
dec
sbb
out
mov
aas
mov
pop
std
fs
cmp
cltd
mov
mov
add
in
jmp
cmp
fnsave
pop
call
mov
xor
pop
cs
or
jno
inc
jg
mov
popf
lods
jae
int
cld
sbb
ja
push
movl
das
and
xor
cs
push
jmp
jge
sbb
inc
popa
aad
aad
dec
cmc
outsb
insl
aaa
repz
jne
jmp
xchg
std
jle
xchg
daa
inc
cmc
sti
jne
movd
xchg
mov
mov
cmpsl
cli
icebp
xor
mov
std
lcall
out
fdivrs
adc
ja
insl
cmc
push
dec
aad
push
test
aas
scas
sub
push
push
gs
fisttps
or
push
inc
lods
test
adc
sti
dec
fstpt
cmp
into
std
sarl
scas
xchg
mov
push
ror
iret
xor
mov
ja
js
sub
les
out
clc
ds
pop
jb
lods
xor
popf
push
test
add
jo
push
jne
sub
add
jl
xchg
xchg
stos
inc
cmp
lea
lods
lcall
out
lcall
push
test
fsubrl
cmpsl
rorl
scas
adc
cltd
repz
or
ljmp
movsb
pop
testb
scas
es
es
pop
jae
sub
rolb
je
jge
into
mov
repnz
stc
lret
jmp
mov
pop
aaa
sbb
mov
es
int
inc
cmp
push
out
adc
in
adc
pusha
lret
mov
sub
push
rcr
outsl
decb
mov
adc
pop
fcompl
jg
fistpll
dec
xor
stos
out
pop
dec
loope
sub
lret
stos
loope
aad
cmpsl
iret
into
cmp
lret
andb
aam
movsl
stos
dec
jp
bound
nop
or
insb
dec
mov
int3
lret
sbb
shl
xchg
cmc
inc
push
mov
or
jns
cld
mov
ds
lcall
lds
jecxz
adc
sub
and
imul
insl
xchg
imul
sbb
sub
dec
cltd
jg
jo
std
mov
cmp
das
out
std
mov
mov
scas
xchg
mov
mov
and
jne
or
sub
imul
in
mov
popf
mov
bound
stos
or
fildll
xchg
pop
loop
stc
enter
xchg
fsubp
jmp
lret
cli
xor
sub
cmp
stos
inc
lds
xor
arpl
repnz
in
imul
push
sbb
pop
aad
xor
cwtl
lahf
jg
insb
gs
push
xor
out
dec
xchg
ljmp
out
and
pop
scas
mov
dec
dec
lds
test
mov
test
cmp
ret
cmc
fisubrs
int
xchg
push
clc
sbb
div
dec
sar
pop
lock
mov
jo
negl
repnz
inc
addl
adc
in
mov
divl
sbb
das
sbb
push
mov
stc
jp
shrl
push
testl
mov
scas
ja
pushf
adc
sbb
shlb
idivl
fdivr
xchg
sbb
sub
jb
mov
out
ret
jne
sarl
ljmp
lods
icebp
stos
call
clc
and
push
mov
sbb
mov
mov
outsl
fmulp
xchg
xchg
pop
dec
mov
outsl
clc
sbb
push
and
sbb
mov
push
rcl
inc
xor
pop
and
mov
fstpl
push
call
mov
fisubrs
in
ss
out
add
outsb
ss
outsb
mov
xchg
ret
les
dec
jo
jno
jbe
in
add
pop
push
lods
xor
fsub
push
fwait
shrb
pop
into
push
jne
push
mov
stos
cli
out
mov
in
jg
push
popa
jnp
sub
fnsave
test
add
jecxz
and
jae
push
insl
sub
fistps
arpl
pop
leave
mov
je
jo
jbe
mov
lea
jne
mov
loop
or
in
xor
hlt
js
mov
fmulp
pop
xlat
adc
into
fsubrp
xor
push
int3
lret
out
fnstsw
das
dec
push
mov
jb
push
sub
scas
xor
mov
push
sbb
insb
pop
hlt
scas
push
mov
pop
pop
clc
negl
jne
mov
xor
scas
repnz
or
mov
sbb
js
jge
jp
push
jne
push
and
push
mov
sahf
pop
inc
mov
scas
fadds
mov
adc
cld
pop
pop
mov
icebp
repnz
lock
jae
int3
imul
push
in
std
cld
test
mov
in
sarl
adc
or
mov
push
mul
mov
fisttpl
enter
dec
in
or
enter
es
fadds
lahf
cmp
xchg
in
lods
xorl
and
xor
push
imul
xchg
xorl
and
in
push
xorl
and
in
cmp
mov
push
enter
hlt
in
xchg
xorl
and
jge
cmp
sbb
dec
pop
fs
sbb
fnstcw
nop
dec
jbe
fldcw
fs
int3
fnstenv
nop
xorl
repz
out
stos
and
test
pop
je
jg
popw
popa
add
push
stc
idivb
xor
out
push
enter
mov
je
mov
jbe
mov
flds
pop
fs
sbb
cld
jne
mov
iret
add
pushf
rcrl
popa
mov
loop
jmp
loope
ret
xlat
ret
add
adc
jg
mov
xor
jg
xchg
jmp
sbb
mov
scas
pop
mov
popa
insb
jp
test
shll
adc
enter
js
loopne
mov
rcll
mov
testl
ret
and
xor
stos
not
and
fst
cmpsb
jg
add
dec
mov
dec
dec
push
pop
pop
push
pop
inc
ja
cmc
cld
sbb
mov
pop
push
xor
adc
lahf
jg
inc
pushf
cwtl
clc
clc
movsb
iret
mov
pop
out
mov
jnp
aam
leave
mov
xor
loop
pop
inc
pop
pop
sbb
xorb
sbb
push
leave
inc
pop
mov
inc
add
pop
push
scas
inc
pop
js
pop
adc
adc
test
addr16
push
push
cld
and
and
bound
or
daa
push
mov
jle
jbe
inc
enter
hlt
inc
mov
mov
xor
xlat
xor
test
or
lret
into
decl
movsb
lret
loope
in
movsl
dec
fxch
test
ss
xor
and
pop
sbb
cltd
test
dec
dec
subb
mov
dec
movsb
insb
xor
leave
fmul
es
test
jl
sbb
cmp
cltd
cld
icebp
and
sarl
insb
fldcw
enter
add
add
lcall
dec
sub
rorb
jl
cmp
enter
jmp
pop
or
sub
mov
incl
bound
loopne
push
push
arpl
call
pop
dec
jno
repnz
les
sarb
in
xor
shr
and
nop
sbb
movsb
es
ret
xchg
xor
or
xor
sarl
jo
xor
rcll
out
scas
mov
dec
jbe
or
xchg
or
lcall
lcall
lcall
lcall
cltd
mov
rorb
xlat
fdiv
repz
push
dec
in
loopne
test
das
arpl
notb
dec
js
xor
roll
mov
movsb
dec
loopne
xor
shl
dec
rcr
xor
rol
and
pusha
dec
lcall
lcall
lcall
lcall
rcll
loopne
loopne
in
dec
in
xor
shll
pop
xor
es
lcall
lcall
lcall
leave
hlt
cmpsb
lock
dec
in
les
xchg
push
fs
pop
nop
mov
xchg
test
mov
clc
xor
rcll
lods
sarl
pop
inc
dec
push
je
push
mov
js
insb
push
out
sbb
insl
iret
flds
or
mov
mov
dec
dec
cmp
lahf
pop
fdivrl
pop
cmpsl
xlat
pop
fstps
dec
incb
int3
pop
mov
ljmp
xchg
aas
jp
insb
pop
jnp
out
pop
ds
pop
arpl
negl
mov
xchg
jg
xchg
popf
cmpsb
adc
test
xlat
xlat
xlat
xlat
arpl
fnstsw
out
push
mov
sbb
add
push
jne
sbb
ja
xchg
cmpsb
jns
arpl
push
cmc
inc
clc
std
lahf
xchg
pop
xor
lods
and
and
mov
js
xor
pop
aad
fdivrs
stos
inc
ret
xchg
pop
jg
in
push
jnp
lcall
rcll
arpl
std
xchg
outsl
cmpsb
fimuls
xlat
xchg
lods
fnstcw
mov
in
mov
xchg
mov
add
mov
cmp
inc
sub
sbb
fdivl
int3
sbb
int
bnd
mov
enter
jmp
ljmp
xor
add
push
gs
sbb
push
pop
iret
pop
repnz
cmp
sub
daa
inc
jl
or
sub
movsl
pop
push
or
sti
and
cmp
mov
pop
mov
pushf
pop
xchg
sbb
stc
bound
xchg
sbb
mov
mov
cmc
xchg
mov
scas
lret
pop
rcrb
ljmp
in
loopne
jge
sti
ja
out
push
movsl
in
clc
push
or
mov
nop
cwtl
inc
loop
pop
enter
or
cmpl
jge
fldt
sbb
icebp
xor
mov
push
mov
fidivs
mov
stos
sbb
xchg
or
test
rorl
ds
aad
in
mov
int3
mov
inc
dec
ljmp
sti
hlt
mov
ljmp
rdpmc
pop
sub
add
loop
jge
push
cmp
ret
xchg
pop
idivb
popf
pop
sbb
insl
lods
inc
mov
hlt
pushf
jmp
pop
cmp
pop
inc
cmpsb
sarb
dec
rolb
addr16
enter
nop
xchg
xchg
xchg
adc
filds
aam
fcmovbe
rcrl
cmc
jae
mov
cltd
mov
clc
movsl
jg
jg
mov
push
out
cwtl
aad
jp
lea
push
addl
jmp
ljmp
jecxz
stos
ffree
addr16
or
sub
test
call
xchg
inc
testl
add
inc
add
or
or
aas
adc
out
mov
mov
aad
and
jg
jb
jnp
mov
outsb
test
movups
adc
clc
cltd
or
dec
aaa
and
push
dec
cmp
dec
push
insl
negl
outsb
scas
adcl
sub
das
xchg
inc
test
divb
ror
out
mov
lods
sahf
fiadds
mov
lods
xor
mov
mov
in
das
or
ror
ffree
rclb
mov
jp
jg
xor
aam
ror
mov
out
imul
std
jne
mov
mov
cs
add
mov
xlat
sbb
arpl
mov
inc
add
dec
push
stos
scas
push
sub
jns
stos
repnz
imul
outsl
leave
gs
xor
das
fs
movb
sbb
and
push
cmp
aas
xor
lods
int
pop
jle
out
test
jnp
in
fdivl
int3
stos
negb
dec
aad
or
test
sarl
adc
sbb
in
push
cld
pop
cwtl
cwtl
mov
movsb
mov
iret
cmc
lret
mov
mov
sbb
jmp
mov
loope
imul
shrb
sub
cmp
sub
pop
and
mov
movsl
push
aad
xor
ja
insl
or
test
mov
inc
jne
mov
inc
dec
jmp
cmp
push
xor
dec
dec
dec
clc
sbb
inc
aad
in
std
call
xchg
push
xchg
jg
imul
clc
mov
mov
pop
xchg
test
fnstsw
fucomp
jle
mov
or
icebp
mov
jge
fadd
mov
xchg
shl
imul
jmp
aad
pop
jns
pop
aas
sbb
movsb
out
mov
push
je
or
adc
fstpt
inc
dec
jae
fs
pop
les
push
xlat
xor
loopne
jno
adc
cmp
lods
mov
cmp
cmp
mov
popf
in
ja
scas
jno
outsb
aam
ret
inc
lret
cmpsb
xchg
rol
aad
xlat
ja
xchg
xor
daa
out
fcmovnb
inc
push
fists
mov
mov
stos
mov
lret
std
mov
xor
fdivr
fmull
aas
mov
mov
push
xor
add
dec
xchg
xor
xor
cmp
xor
cmp
aaa
push
and
adc
es
push
imul
fimull
or
push
xchg
xor
cs
scas
add
jecxz
push
sub
pop
pop
pop
xchg
and
int
shr
jne
mov
mov
cmp
sbb
out
lock
cmp
cmc
clc
mov
mov
insb
pop
mov
dec
mov
ja
inc
dec
mov
sti
cld
repnz
cld
mov
iret
das
imul
test
ja
lcall
cli
pop
scas
stos
xchg
or
xchg
mov
xchg
push
push
dec
sub
fistpll
sti
pop
adc
pop
dec
mov
addb
adc
xchg
js
mov
mov
imul
and
fwait
jg
in
and
push
dec
in
mov
xor
adc
icebp
mov
repz
sbbl
mov
call
inc
xchg
hlt
rcl
pop
xchg
loopne
loop
ret
sti
pop
lahf
sub
out
call
mov
mov
push
mov
lds
lahf
repnz
addb
inc
pop
or
push
mov
mov
sub
xchg
jno
add
test
mov
push
xor
xor
call
into
push
test
iret
sbb
xlat
insb
das
lcall
lcall
push
pusha
jl
mov
cmp
sub
jge
push
xchg
adcb
pop
push
imul
pop
div
push
add
mov
inc
sub
fstpl
xlat
jns
lahf
fucomip
call
push
fisubl
push
fsubs
xchg
cmp
jg
pop
in
sti
sbb
xchg
gs
inc
xchg
aam
mov
push
test
enter
mov
push
pop
test
std
lret
cltd
mov
pop
sti
jecxz
std
test
scas
shll
pop
cmp
mov
push
pop
or
mov
insb
sub
mov
jmp
sub
ss
out
decl
fbstp
pop
pop
mov
dec
xchg
mov
sbb
frstor
int
mov
adc
ss
ret
dec
jle
inc
xor
mov
cmc
jge
stos
stos
xchg
adc
sub
xchg
ret
stos
mov
ret
hlt
shrb
stos
rcll
ljmp
push
or
scas
shl
ffreep
in
xchg
sub
leave
adc
shlb
dec
ret
aam
fst
fsubs
pushf
or
outsb
scas
cmpsb
ret
lahf
test
push
pop
clc
repz
cmp
mov
push
cmp
imul
mov
rcrb
loope
notl
das
repz
and
jb
jmp
pop
test
ds
sbb
sub
push
push
rolb
cs
mov
mov
scas
ja
mov
jne
mov
jno
cmc
es
pop
sarb
aad
mov
cmc
pop
int3
jp
pop
je
imul
adc
out
add
ljmp
mov
cmpsb
insb
mov
out
push
pop
dec
mov
mov
mov
xchg
scas
cld
shrb
les
push
lcall
stos
std
xchg
les
push
pop
push
add
jmp
fsubrp
mov
aad
lds
pop
popf
xor
insb
out
lods
stos
scas
in
mov
lret
cmp
jecxz
jne
sbb
pushf
jns
fdivrl
mov
lret
xor
mov
dec
sti
jmp
push
cmp
cmc
lds
sbb
ljmp
pop
mov
xor
movsl
lds
ljmp
cmp
clc
jmp
int
cli
push
jge
mov
loopne
dec
not
inc
cltd
mov
mov
ret
jecxz
int3
jo
xchg
stc
lods
pop
inc
inc
sub
add
lcall
pop
push
nop
xor
jb
mov
or
fsubr
and
out
test
in
xor
movsl
mov
push
jp
mov
out
jmp
sub
nop
inc
mov
dec
adc
cli
mov
ljmp
je
cmp
sbb
lahf
cmp
push
ja
adc
stos
sub
or
mov
sub
xor
xchg
jae
lock
xlat
loope
push
jmp
imul
ret
adc
xchg
jecxz
icebp
fwait
in
fistpll
ja
push
push
adc
fists
arpl
mov
out
lahf
xor
push
jbe
negl
sub
inc
lea
ds
arpl
mov
lods
mov
mov
stos
push
scas
mov
sti
add
lahf
sbb
sub
xor
mov
into
push
aas
push
loope
inc
adc
jle
xchg
or
addr16
test
sbb
into
jl
xchg
mov
insl
mov
sahf
jge
fwait
pop
outsl
jl
dec
mov
lods
mov
inc
adc
std
pop
lea
outsb
cli
ficoms
lret
jo
idivl
xor
lcall
dec
mov
rcrl
push
inc
pusha
out
push
jp
scas
btc
jae
int
xor
push
icebp
out
rolb
inc
mov
mov
jge
inc
mov
add
aam
sbb
jno
movsb
lret
push
test
mov
rcl
loope
scas
sub
fstps
jmp
stos
inc
xchg
jmp
xor
mov
ljmp
mov
test
add
cmp
and
inc
imul
imull
insb
mov
sti
mov
lret
dec
inc
inc
pop
dec
jge
scas
jb
repz
xlat
push
cmpsl
add
insb
dec
repz
mov
aas
jmp
out
into
sti
scas
adc
adc
push
sbb
cmp
dec
jp
dec
pop
xor
negb
je
add
jns
outsl
jg
inc
mov
out
mov
inc
dec
stos
lcall
mov
lret
inc
das
xchg
jge
push
roll
jb,pn
xchg
fldl2e
jmp
or
scas
mov
push
jb
fisubs
popa
push
cmc
dec
mov
call
xor
pop
jge
out
loop
dec
lret
mov
or
jg
outsl
mov
mov
mov
mov
popf
xor
in
pop
insl
or
movsb
lds
insb
ficompl
dec
ljmp
test
stc
sub
adc
test
push
call
dec
jbe
lds
add
mov
loop
fcomps
jecxz
dec
lea
lret
pop
sub
rclb
stos
call
stos
scas
insb
mov
out
and
stos
fisubrs
in
mov
out
loope
cmc
stc
xchg
scas
mov
pop
lahf
adc
cmp
ss
lahf
jne
sbb
test
push
mov
cwtl
pop
cltd
push
or
jp
mov
and
outsb
scas
pop
jbe
mov
mov
cmp
mov
fwait
cmp
jmp
ljmp
push
mov
sbb
ja
xor
pop
in
jg
pop
iret
xlat
jnp
mov
stos
out
lret
push
lock
jg
xchg
push
data16
lcall
cli
icebp
pop
scas
lock
sub
cmp
icebp
cmp
sti
stos
pop
cmp
repnz
jne
xchg
push
jecxz
dec
xchg
jmp
sub
scas
ljmp
xor
loopne
jo
scas
push
in
in
push
ljmp
adc
jecxz
dec
mov
or
mov
out
jne
loopne
sahf
sub
ljmp
outsb
fwait
sbb
shll
adc
addr16
jb,pn
test
rolb
lret
lcall
sbb
andb
cmp
inc
push
mov
ljmp
cld
sti
scas
nop
mov
js
or
pop
fucomi
cwtl
or
daa
cmp
jle
jo
jp
ds
out
cmp
stos
sub
lods
jb
pop
xchg
sbb
ljmp
mov
dec
push
scas
int3
pop
inc
cmc
inc
lcall
xchg
xchg
lret
pushf
cmp
xor
mov
jl
push
inc
rcr
mov
inc
jns
push
xlat
pop
or
mov
ljmp
fs
push
test
decb
push
sbb
cld
ret
out
scas
inc
sub
or
cmp
add
sub
jle
sbb
or
jge
aam
cltd
imul
sbbb
sbb
sbb
sub
sbb
mov
ret
arpl
jo
iret
shrb
inc
aas
aaa
call
nop
aas
xor
inc
stos
ljmp
cwtl
arpl
add
movsl
hlt
arpl
movsl
cmp
mov
out
fisubs
mov
pop
dec
pop
loope
ret
sbbl
testb
popa
std
fnstcw
gs
xchg
in
paddd
xchg
cmpsl
pmullw
in
and
stos
stos
daa
jmp
daa
mov
push
fistpl
push
push
jge
and
jnp
push
jb
cmpsb
imull
scas
cmp
add
pop
movl
icebp
push
fistps
jg
and
cmpsb
daa
notl
jecxz
xor
stos
icebp
inc
scas
scas
or
push
cs
test
int
sti
sub
call
mov
pusha
push
test
scas
out
sub
pop
or
insb
push
out
jmp
lds
pop
mov
mov
sarl
loope
cmpsl
sbb
xchg
outsl
mov
jnp
repz
cli
cwtl
pop
sub
scas
lcall
lds
int3
mov
stos
mov
fmul
pushf
sbb
rcrb
es
stc
dec
ffree
lea
movsl
jg
pop
cmpsl
pop
sub
insl
icebp
xchg
fadd
xchg
js
lret
test
mov
insb
push
mov
xchg
dec
dec
pop
mov
push
decl
xor
iret
or
fdivrl
jle
jno
cmp
push
mov
out
sarb
jg
popa
ret
fabs
pop
jle
push
insl
stos
jg
aad
fdivrs
mov
int3
sbb
stos
jnp
pop
pop
gs
inc
fyl2xp1
cmp
xchg
dec
aam
test
sub
mov
inc
xchg
mov
hlt
ret
pop
ljmp
fs
push
pop
popa
jno
xor
xor
out
push
push
enter
lods
cmpb
pop
pop
stos
sbb
daa
gs
mov
mov
jmp
jae
jecxz
out
sti
sub
fwait
mov
cmpsb
or
testl
jbe
sbb
inc
push
push
sub
and
leave
mov
stos
cmpsl
insb
mov
or
inc
jae
push
clc
xchg
outsb
clc
ljmp
jne
lahf
push
pop
sar
cmp
jg
pop
xchg
cmp
sti
insl
mov
xlat
test
test
ja
andb
pop
lret
and
ljmp
cmp
shrb
or
jne
push
pop
add
push
dec
add
sub
bound
movsl
and
das
in
or
ss
lds
pop
pop
pop
cs
les
mov
sub
repz
insl
js
ret
mov
mov
jg
cmp
sbbl
mov
outsb
jnp
pop
test
addl
jl
sar
mov
mov
mov
xchg
pushl
outsb
into
xor
gs
aad
xchg
add
fwait
dec
data16
std
repz
filds
mov
in
jo
dec
sti
xchg
jg
push
pop
in
testl
addl
mov
jl
cli
jg
push
in
aad
test
lret
mov
stos
call
addr16
out
push
fimuls
jmp
test
xor
xchg
in
xchg
std
aas
out
fsubp
fists
out
testl
cmpsl
daa
in
loope
xlat
adc
fcomip
cs
divl
pop
int
push
aaa
jg
mov
jecxz
leave
jg
clc
lahf
push
push
push
loope
mov
outsl
adcl
int
mov
jb
push
std
jo
lea
dec
daa
dec
adc
mov
inc
add
or
sub
jg
pop
pop
pop
mov
dec
lea
scas
push
pop
insb
fistpll
ret
add
rolb
ficoml
cmp
jb
fidivrs
sbb
cmp
aad
out
mov
stos
xlat
adc
mov
jmp
jne,pt
jl
aam
cmpsl
fucomip
mov
mov
cmpl
fwait
jge
jne
push
push
push
aas
jns
fisttpl
rclb
mov
bound
mov
out
aad
xor
push
ficoms
push
cmc
mov
out
pop
leave
popf
mov
out
repnz
bnd
push
xchg
stos
xchg
test
add
ffree
xchg
ja
fidivs
cmp
sti
mov
sbb
pop
xor
mov
xchg
rcrl
ret
sbb
mov
mov
mov
and
xchg
or
scas
stos
cmp
inc
int
mov
das
out
loopne
dec
push
outsb
jbe
lods
jg
inc
jle
mov
jb
mov
out
jl
push
jne
fsubrs
xor
jae
cmc
lea
cmpsl
pop
cld
js
in
xor
jge
or
add
jne
xlat
cmc
mov
and
mov
push
lock
lret
mov
ret
jne
mov
lret
push
lcall
mov
mov
add
ret
sub
sbb
adc
scas
imul
iret
sbb
pop
dec
roll
add
ljmp
sub
mov
jns
mov
lds
mov
aad
cli
mov
mov
out
out
shll
jmp
xor
mov
out
push
lahf
pop
adcb
mov
mov
fld
arpl
out
mov
js
fst
dec
push
pop
jg
nop
push
cmp
fimull
sbb
xor
out
jmp
shr
xlat
jb
mov
arpl
pop
mov
sbb
jne
adc
push
sub
imul
out
popf
pop
inc
sbb
cltd
hlt
cltd
cmpsb
filds
movsb
cld
cwtl
test
cmp
adc
mov
ljmp
loop
dec
fwait
out
lret
xchg
scas
mov
cmp
sarl
mov
inc
ljmp
inc
xchg
aad
inc
fbld
or
jo
jo
adc
les
jle
cmp
outsb
cmp
cwtl
push
push
pop
in
xchg
push
mov
dec
sub
fwait
mov
ja
or
cmc
fdiv
cmc
mov
ljmp
jne
sub
js
mov
les
mov
jg
and
adc
inc
inc
fcomps
push
outsb
clc
mov
shr
mov
xor
lcall
push
xor
pop
jno
pusha
test
push
cmp
push
out
push
aaa
jne
jp
mov
cmp
int
outsl
imul
cs
mov
mov
lcall
or
push
jp
pop
repnz
mov
int3
add
push
xchg
cs
aad
add
lahf
scas
outsl
and
stos
cmovnp
fsts
xchg
jmp
fdivrs
lret
leave
clc
mull
insl
sbb
sbb
xchg
out
cmp
push
rorb
mov
push
pop
stc
push
pop
ja
sbb
ja
shl
outsb
xor
stc
popa
mov
clc
movsl
ret
lcall
mov
adc
xchg
imul
shrl
jg
adc
pop
and
xorb
mov
ret
cmc
sbb
or
mov
inc
push
add
mov
add
pop
add
int
inc
inc
int3
cmpsl
pop
xor
xchg
rol
inc
nop
and
adc
fimull
inc
lahf
ret
movsb
pusha
xor
ret
mov
jnp
adc
repnz
push
mov
xor
mov
inc
sti
mov
add
mov
testl
fwait
imul
or
jmp
imul
movsb
pop
mov
xor
lods
inc
mov
movb
repnz
scas
jle
lods
add
test
arpl
scas
pop
mov
dec
dec
dec
jge
jg,pt
test
inc
lock
mov
pop
jle
stos
je
pop
imull
idiv
test
xor
std
push
je
into
stos
lock
repnz
stos
jmp
sub
cmp
jnp
call
mov
ljmp
in
xchg
push
push
imul
jg
jl
je
xor
mov
push
cs
bndstx
push
ja
testl
inc
je
inc
iret
push
enter
pop
xchg
in
aad
lahf
jno
push
fwait
push
dec
push
mov
jmp
mov
clc
sti
icebp
jb
pushf
mov
outsl
push
lret
jne
push
sub
lretw
cwtl
scas
mov
shlb
ljmp
pop
clc
xor
push
xchg
xor
repz
xchg
and
movsl
jo
shll
xor
inc
dec
add
cmp
out
and
ret
out
or
stos
mov
lods
xor
pop
test
jae
rcrb
adc
inc
or
and
jle
lahf
call
cli
xchg
ljmp
mov
cli
xchg
jmp
push
std
inc
jbe
fnsave
stos
mov
test
dec
ljmp
js
or
mov
pop
in
pop
pop
fisttps
push
pop
aam
xlat
xor
fucomi
xchg
push
mov
adc
cld
andb
add
scas
loope
aad
jle
insl
pop
int3
pop
sub
cltd
xlat
pop
mov
out
jns
adc
lods
adc
adc
out
sub
scas
stos
and
cmc
fstps
cmp
jmp
pop
dec
sub
call
add
jnp
pop
inc
push
sahf
orb
mov
ljmp
xor
orl
cmp
sub
sub
ret
xlat
and
inc
fstl
mov
add
sbbb
cs
iret
jns
mov
xor
gs
or
pushf
sub
movsl
inc
mov
test
pushf
mov
popf
sahf
xor
repz
add
xchg
pop
repnz
jp
fadds
leave
and
lret
cwtl
mov
repz
sub
addr16
movsl
shlb
mov
push
mov
pop
cmp
int
inc
in
sbbb
sub
clc
xchg
in
adc
mov
jb
insb
xchg
xchg
js
and
dec
or
and
dec
add
xor
mov
inc
xchg
mov
gs
mov
insl
test
xorb
inc
xchg
lods
in
xchg
inc
test
stos
or
push
sbb
subb
sub
int3
mov
inc
std
pop
push
pop
dec
subb
sub
lea
add
cmc
jg
pop
arpl
insb
xor
pushf
push
xor
adc
fwait
add
bound
in
push
pop
fdivl
dec
pop
xchg
inc
int3
aas
jno
xor
sub
sbb
rcrb
add
testl
jmp
pop
inc
int3
cwtl
mov
mov
xlat
shl
mov
cmc
xor
or
movsb
les
mov
adc
outsl
mov
lcall
push
cmpsb
sbb
lcall
sub
dec
inc
int
icebp
adc
mov
les
loop
mov
adc
xor
sbb
in
mov
iret
in
mov
xchg
pop
sar
push
jns
push
lods
lret
nop
test
xor
dec
adc
movhps
fs
push
inc
into
fs
push
scas
pop
pop
inc
pop
mov
cs
mov
dec
es
or
in
leave
sbb
es
lcall
lcall
es
add
fbstp
shll
call
fidivs
shll
adc
imul
ret
adc
lock
cmpsb
push
clc
jle
scas
out
jg
pop
or
inc
stos
xor
stos
hlt
mov
jno
sbb
lret
and
lret
pop
stos
lock
inc
sbbb
jnp,pt
faddl
or
stos
sub
sarl
dec
sbb
es
sbbl
adc
mov
xchg
movsb
dec
mov
xchg
shll
push
rorb
aaa
test
push
ret
icebp
sbb
mov
test
adc
lea
cli
and
jl
inc
fsub
inc
add
push
jmp
add
mov
mov
hlt
xor
xchg
nop
stc
cmpsb
push
inc
call
sub
jle
les
mov
test
mov
icebp
lcall
inc
stos
das
mov
lock
adc
add
out
in
or
add
jle
lods
add
into
jnp
test
mov
xor
xchg
dec
mov
inc
add
sub
cld
popf
lock
ret
or
add
insb
push
cmp
sub
popl
mov
jae
sub
mov
adc
mov
mov
cs
add
inc
add
aaa
lcall
add
cmp
les
pop
or
sub
sub
or
or
or
andb
add
sarb
add
mov
fs
or
inc
adc
int3
xchg
xchg
pop
add
inc
lcall
push
daa
add
lss
iret
push
sti
in
push
sub
xchg
fists
cld
and
or
loope
add
push
pusha
mov
add
movsb
das
xchg
std
sub
add
cltd
mov
add
ss
lret
xchg
adc
push
sbb
shll
xor
popa
adc
sub
daa
std
push
jge
fidivrl
test
pop
jne
lcall
out
hlt
adc
push
mov
mov
lods
sahf
add
mov
pop
push
xchg
xor
lods
dec
repnz
orb
adc
add
inc
sbb
fsubp
add
lret
mov
add
add
lods
add
jne
xchg
imul
scas
lret
inc
sub
add
cmp
lds
inc
add
lcall
stos
out
das
sub
outsl
sar
adc
dec
pop
add
inc
jg
push
or
repnz
xchg
add
xchg
jmp
ljmp
hlt
push
jecxz
fldl
adc
jb
adc
push
add
lcall
sub
add
iret
loopne
mov
ja
and
add
jae
jmp
push
fwait
jae
xor
aad
add
movsl
add
.byte
dec
add
add
or
add
lea
add
push
mov
add
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
pushl
mov
pushfw
pusha
push
push
mov
mov
add
lea
mov
mov
push
push
push
push
push
push
push
push
push
push
push
call
sub
pop
rep
pop
add
add
rep
call
pop
lea
mov
btr
jae
mov
std
mov
mov
add
add
rep
add
cld
jmp
add
mov
test
je
mov
mov
add
push
lea
jmp
pop
pop
pop
pop
je
jmp
add
jne
mov
sub
adc
ret
cmp
jae
push
push
mov
jmp
cmp
jae
push
push
mov
jmp
push
push
mov
push
xor
dec
movsb
xor
cmp
jle
call
jb
movsb
xor
dec
jmp
inc
call
adc
call
jb
ret
xor
call
sub
jae
mov
inc
jmp
mov
movzbl
call
adc
dec
jne
xor
cmp
adc
cmp
adc
mov
call
adc
call
adc
jne
call
add
add
push
sub
lea
rep
pop
jmp
cs
fistps
cmpb
add
dec
or
test
push
add
add
add
add
aas
sbb
pop
add
xor
add
push
add
lret
add
add
add
push
add
dec
pop
or
add
add
sldt
rclb
add
add
push
or
pop
push
or
call
push
or
mov
or
les
add
add
add
add
push
or
movsb
push
or
add
add
add
add
add
inc
js
je
jb
arpl
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
jb
je
arpl
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
push
xor
xor
fs
insb
add
push
dec
inc
dec
xor
cs
insb
add
gs
xor
fs
insb
